push
push
push
add
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
add
push
push
add
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
push
add
push
add
push
add
push
push
add
push
push
add
push
push
add
push
add
push
push
add
ds
xor
ja
cmpsl
pushf
pop
cmp
jl
mov
fmuls
or
xchg
pushl
xor
pop
test
icebp
arpl
ja
insb
addr16
pop
adc
mov
pop
xor
add
sub
dec
cwtl
cmp
lret
call
mov
stc
fisubrs
aaa
movsl
inc
testl
xor
pop
add
push
inc
add
es
inc
les
mov
icebp
sbb
aad
push
mov
ret
push
mov
addl
inc
adc
pop
pushf
sbb
push
inc
cld
ss
jle
and
adc
clc
or
and
cmp
fwait
sub
aas
fs
cmp
sbb
push
mov
into
pxor
cmp
inc
inc
loope
add
loop
mov
inc
xor
push
cmp
ret
adc
ljmp
test
icebp
fwait
nop
fs
cltd
xlat
in
pop
push
std
mov
hlt
dec
and
loop
mov
add
sbb
sar
popf
into
or
mov
mov
mov
xor
inc
sbb
lcall
add
sarl
cmpsb
jns
mov
cmp
fcompl
popw
mov
ret
imul
nop
hlt
stc
push
call
sbb
into
sbb
lock
pop
lock
mov
jbe
movsl
cmp
pop
mov
dec
mov
add
daa
pop
out
sbb
adcl
xchg
idiv
fmuls
in
out
scas
js
stc
pop
sub
pop
mov
push
mov
xor
inc
inc
int
cmp
mov
fsubrs
jmp
dec
popa
pop
pop
insl
mov
add
pop
lret
test
ljmp
jmp
daa
jl
std
in
iret
jno
adc
pop
hlt
xchg
leave
pop
cmp
sti
shrd
push
and
aas
cltd
sbb
jecxz
sbb
cmp
mov
lret
pop
xchg
xlat
jne
aam
jecxz
je
lcall
sub
pushf
inc
mov
shlb
rclb
pop
sub
rep
and
jg
pop
pop
mov
mov
roll
inc
imul
or
les
test
popf
pusha
or
xchg
inc
test
jl
inc
cli
cltd
adc
test
fmull
in
call
nop
in
stc
lret
push
push
inc
fisubrs
pop
or
push
sbb
out
cmp
adc
into
in
jne
icebp
jecxz
movsl
sarl
xchg
pop
or
cld
push
add
idivl
test
testl
fsubl
sub
mov
arpl
mov
fimuls
sbb
adc
sbb
cmpsb
or
or
scas
xchg
aam
mov
sahf
out
fidivl
and
mov
xor
sbb
mov
lret
inc
pop
aad
xor
xor
sbb
jle
pop
into
sub
sub
gs
fwait
cmp
loop
cli
aas
les
inc
or
dec
mov
jo
mov
pop
and
push
push
xchg
test
pop
cmpl
test
repnz
repnz
dec
push
cmp
adc
xor
hlt
lret
insl
fadd
std
or
pop
test
mov
xor
mov
cltd
loope
cmp
js
in
rcrb
daa
mov
jmp
inc
mov
psllw
cmp
dec
movsl
and
mov
test
ja
cmp
jmp
xor
inc
or
jb
addr16
xchg
jbe
sub
jae
out
mov
arpl
repnz
pop
subl
and
mov
out
cmp
mov
xor
sti
fidivrl
movsl
testl
cli
sub
repz
or
pop
pop
jb
and
lea
xor
iret
leave
out
mov
lahf
scas
sbb
aam
out
or
adc
filds
push
pop
aad
mov
mov
add
xchg
call
stos
ja
ljmp
pop
xor
xchg
out
adc
pop
sub
test
fwait
mov
scas
in
loopne
and
movsl
xor
pop
jmp
popf
mov
hlt
or
ljmp
pop
pop
or
fcomip
and
pop
xor
mov
loopne
push
sbb
sahf
or
lcall
sub
adc
dec
pop
adc
jne
icebp
leave
shrb
popf
fs
cltd
lds
ret
push
inc
jecxz
or
testb
int
pop
xorl
je
rolb
sbb
xor
xchg
jo
data16
jns
mov
sub
xchg
jae
jecxz
je
jecxz
cs
xchg
hlt
inc
mov
adc
pop
xor
jbe
push
inc
repnz
imul
and
mov
lret
es
data16
xor
mov
dec
mov
xlat
pop
popf
bound
mov
out
push
cmc
pop
outsb
iret
lret
inc
insl
mov
and
insl
test
inc
clc
inc
adc
inc
call
mov
sub
sub
repnz
adc
rcrb
imul
aaa
aam
loopne
mov
test
jp
inc
cmp
jno
subl
decl
mov
mull
and
cmp
std
aas
jne
inc
inc
lret
mov
and
insl
sub
xchg
sub
leave
push
or
in
xor
xchg
cwtl
or
test
test
adcb
or
mov
jl
push
xchg
push
fdivl
mov
cwtl
dec
lock
shll
xor
jecxz
jmp
jb
ret
es
xor
ljmp
aas
pop
cmp
fsubr
jbe
into
sub
push
arpl
or
arpl
pop
push
dec
mov
and
push
jg
outsb
pushf
mov
xchg
loopne
cmp
add
sub
fildl
or
mov
push
push
cmpsb
cmp
fsubr
aad
out
sbb
sarl
pushf
add
ret
cwtl
jmp
mov
jecxz
sti
test
insl
scas
inc
mul
sub
gs
sti
rcrb
adc
fidivrl
test
lea
mov
out
cmc
cmpsl
pop
je
rclb
lret
mov
aad
mov
inc
out
pop
aad
popf
push
cld
or
push
sub
int
add
mov
das
movsb
xchg
aad
out
sbb
fwait
int3
jl
mov
push
jle
pop
xor
cltd
pop
notb
jge
push
inc
mov
test
jno
outsb
cmpl
mov
cmpsb
dec
aad
or
ficoms
jnp
and
xor
push
loopne
icebp
insb
ss
add
popa
sti
mov
mov
lret
rcr
mov
jmp
lock
push
inc
jne
inc
mov
stos
mov
add
ss
xchg
push
scas
adc
or
mov
inc
xor
lret
lcall
icebp
dec
cmpps
inc
cld
inc
test
mov
mov
iret
xor
lods
out
dec
pop
roll
ret
adc
aam
lret
push
xor
scas
dec
cmp
push
sbb
test
negb
mov
inc
push
ror
mov
or
push
cmp
stos
jge
arpl
imul
cmp
mov
mov
adc
movsb
rolb
jne
call
in
sbb
test
andl
outsl
pushf
jmp
ret
fisubl
iret
ret
cli
xor
xchg
jns
int3
xlat
popa
push
ss
pushf
jo
dec
cmc
inc
adc
gs
or
push
jbe
mov
rcr
sbb
shll
xchg
fnstenv
adc
and
inc
or
test
dec
movsb
cs
lahf
cld
mov
or
dec
cmp
out
push
jne
pop
adc
cli
mov
outsl
cmc
xor
sti
pushf
adc
icebp
jp
in
ss
mov
out
adc
into
and
aaa
outsb
dec
leave
movsb
mov
xchg
dec
jmp
aaa
test
cmp
int3
mov
cld
mov
adc
inc
int
or
xorb
add
mov
push
sbb
push
test
ja
in
andb
lea
jecxz
loop
aas
xchg
pop
and
insl
movsb
std
or
sbbb
outsl
cmp
sub
cmp
testb
mov
jecxz
pop
movl
aam
pop
add
dec
ret
pop
sbb
dec
and
push
cld
rorl
pop
pop
mov
fistpl
out
call
mov
fisubrl
mov
outsb
inc
xor
imul
mull
imull
ss
xlat
loop
jmp
lock
mov
mov
insl
add
sti
movsl
mov
lock
sarb
clc
xchg
jge
mov
and
and
or
test
in
and
cmp
rorl
pusha
into
jo
lret
pushf
pop
rclb
cmpsl
ret
cmp
insb
stc
int
repnz
nop
mov
pop
mov
cmp
push
cmp
fmul
inc
test
mov
add
jae
test
aaa
fs
sub
dec
fs
mov
or
adc
cmc
loopne
movsl
mov
jns
aam
cli
mov
pop
mov
jg
stos
pop
add
sub
leave
rorl
loop
and
test
paddq
inc
ret
clc
inc
ss
xchg
out
and
push
or
mov
pop
push
bound
and
cld
mov
repz
out
and
lods
ljmp
mov
cmp
push
ret
adc
xlat
mov
sahf
out
mov
inc
push
adc
das
push
lret
jecxz
les
push
imul
jg
and
adc
lret
xor
fisubl
imul
inc
dec
or
js
fiadds
jp
shl
push
sbb
cmpsb
jne
enter
mov
fisttps
cmc
hlt
xchg
inc
leave
mov
cwtl
movsl
gs
mov
cmpsl
in
cmpsl
mov
mov
jbe
xor
sub
adc
xchg
jmp
cmp
jg
test
jno
jb
jge
insl
push
loope
lea
mov
pop
adc
and
scas
xchg
dec
mov
dec
sbb
lods
push
cmp
negb
fwait
mov
out
shll
rorb
outsb
xor
xor
scas
push
lods
xchg
or
mov
jae
ret
in
xchg
push
dec
outsl
popl
fmul
adc
data16
or
mov
or
sbb
adc
cmc
xchg
push
pop
and
lret
test
and
mov
les
jo
leave
ret
sahf
test
xor
cmp
fimull
loop
subl
xchg
or
lods
test
fidivrl
adc
adc
cli
push
imul
add
loope
and
push
dec
mov
loopew
xchg
add
out
cmc
add
int3
clc
dec
and
lea
sub
sub
jne
jne
or
rcll
xchg
mov
test
jp
push
lods
subb
inc
stc
xor
push
mov
out
cmp
ss
pop
inc
xlat
or
and
mov
push
mov
jns
test
mov
xor
xor
push
int3
js
pop
sbb
xchg
cmp
test
aas
scas
cmp
insb
inc
lock
mov
adc
aas
fcmovnbe
jne
mov
in
je
inc
sbb
add
push
pusha
out
cs
out
lods
push
std
dec
push
sbb
mov
cwtl
lahf
outsb
inc
int
xor
sub
clc
decb
cmpsb
outsl
and
fidivl
sub
mov
lds
dec
xlat
xchg
dec
dec
stos
lods
fsts
psubusb
inc
imul
scas
cmpsb
cmp
sti
sbbl
xlat
pop
pop
push
inc
mov
inc
mov
les
mov
jb
and
scas
jno
repz
push
and
or
xlat
es
xor
sub
and
sbb
push
add
les
push
aad
dec
dec
ja
pop
push
notb
fimull
aaa
pop
lea
jl
fcomps
inc
aam
stos
push
lret
mov
and
addr16
adc
jmp
fimull
cmpsb
test
mov
or
loop
pop
pop
mov
cmc
movsl
imul
iret
push
stos
add
jecxz
negb
rcll
or
insb
in
pop
outsb
imul
movsl
sub
rclb
ja
aad
mov
popf
bound
in
pop
add
fldenv
push
and
push
dec
mov
jae
enter
mov
cmp
iret
mov
mov
cltd
pop
sti
and
mov
push
mov
mov
sub
call
mov
mov
call
inc
push
mov
call
or
mov
mov
sub
add
sub
call
lea
add
add
mov
inc
mov
movzwl
and
xor
mov
imul
lea
dec
and
call
sub
add
mov
and
dec
call
sub
dec
call
add
add
mov
or
movswl
mov
inc
pop
lea
sub
dec
add
lea
pop
mov
or
pop
lea
xor
add
movzbl
pop
and
add
add
inc
dec
dec
lea
and
pop
inc
xor
pop
imul
mov
mov
movzwl
and
call
dec
inc
inc
imul
ret
mov
mov
push
mov
or
push
mov
mov
push
dec
xor
push
mov
mov
push
mov
add
mov
imul
dec
push
add
ret
push
mov
mov
dec
lea
lea
dec
push
movswl
or
push
movsbl
call
pop
ret
jmp
sub
xchg
dec
inc
lea
inc
xor
dec
inc
mov
mov
inc
or
dec
dec
jne
inc
mov
and
add
pop
and
mov
pop
inc
mov
pop
mov
dec
mov
mov
movzwl
and
mov
and
inc
add
or
add
ret
push
mov
mov
dec
movswl
inc
sub
or
inc
push
push
push
push
xor
mov
imul
push
mov
add
imul
and
mov
inc
imul
lea
dec
mov
and
push
inc
movzbl
xor
imul
lea
push
mov
lea
push
inc
lea
pushl
movzbl
call
sub
add
mov
dec
mov
xor
dec
mov
dec
pop
ret
sub
mov
sub
inc
inc
dec
or
inc
dec
inc
dec
mov
lea
or
cmp
jb
inc
mov
sub
inc
xor
xor
mov
pop
lea
add
test
jbe
dec
inc
mov
inc
sub
movsbl
inc
inc
mov
mov
sub
and
inc
add
dec
add
inc
add
and
add
dec
lea
and
mov
lea
mov
xor
mov
movzbl
dec
lea
add
inc
add
and
inc
dec
mov
add
mov
mov
mov
inc
mov
add
xor
add
inc
dec
dec
jne
imul
mov
imul
dec
movswl
add
mov
imul
dec
inc
inc
imul
mov
inc
dec
mov
lea
add
inc
imul
dec
mov
inc
mov
test
jbe
add
mov
dec
mov
sub
movzwl
mov
inc
dec
dec
lea
mov
mov
add
inc
inc
add
mov
mov
mov
mov
dec
and
lea
add
mov
add
dec
movzbl
dec
inc
add
mov
inc
and
movzbl
movswl
mov
inc
sub
movzbl
lea
mov
mov
mov
inc
mov
inc
movzbl
movzbl
or
movswl
add
mov
dec
and
dec
imul
movzbl
mov
jmp
push
call
mov
xor
inc
inc
xor
movsbl
mov
inc
mov
imul
inc
inc
inc
xor
sub
dec
mov
sub
shl
dec
or
xor
dec
mov
push
dec
mov
inc
call
dec
pop
dec
mov
imul
inc
dec
dec
lea
movswl
cmp
je
call
call
dec
iret
dec
add
pop
add
ret
push
dec
sub
mov
mov
movsbl
push
or
movsbl
push
inc
push
lea
push
dec
lea
push
dec
inc
dec
lea
lea
call
add
push
mov
push
imul
pop
lea
lea
mov
dec
add
mov
dec
dec
inc
lea
add
dec
je
mov
mov
sub
add
movswl
or
dec
inc
dec
mov
lea
dec
mov
inc
inc
add
movzwl
repnz
movswl
inc
add
sub
jmp
or
mov
inc
imul
lea
mov
dec
sub
inc
dec
inc
mov
sub
imul
lea
mov
pop
pop
jmp
ret
push
xor
sub
mov
dec
dec
imul
xor
lea
inc
add
dec
inc
mov
dec
imul
add
lea
mov
add
add
inc
lea
mov
mov
pop
ret
sub
dec
mov
movsbl
mov
mov
mov
mov
mov
add
mov
mov
inc
mov
xor
lea
movsbl
mov
dec
mov
inc
inc
or
dec
dec
imul
inc
cmp
jb
dec
push
lea
mov
push
dec
xor
push
lea
and
mov
inc
dec
xor
imul
mov
xor
add
add
xor
and
lea
push
inc
add
xor
dec
inc
mov
dec
movsbl
mov
sub
movzbl
movsbl
dec
inc
add
mov
add
add
sub
sub
movzbl
add
imul
add
dec
dec
inc
mov
mov
or
xor
dec
lea
sub
mov
cmp
jb
xor
mov
add
mov
inc
jmp
int3
stos
jno
aad
shl
pop
das
jl
xor
sbb
movsb
pop
or
or
mov
pop
cmpsl
scas
in
into
inc
std
popf
out
or
push
incb
cmpsl
jle
jmp
push
adc
imul
push
mov
adc
sbb
adc
sbb
in
aad
jmp
movl
jmp
mov
jb
iret
popa
xchg
xor
test
inc
aam
push
push
mov
xchg
push
or
add
mov
mov
sub
sub
sub
pop
or
inc
xchg
mov
ret
fnsave
push
pop
fucomp
cmpsl
ret
mov
test
mov
sbb
roll
lret
mov
mov
adc
insl
aam
sub
enter
and
lret
lock
xor
fcmovnb
aas
and
sahf
lret
sub
test
jmp
dec
btrl
push
push
dec
jno
push
orb
pop
xlat
imul
outsb
mov
mov
jl
push
cli
push
xchg
idiv
sbb
fidivl
mull
adc
in
int
aas
sbb
ret
sti
fsubl
cwtl
or
or
and
add
mov
test
ffree
jne
or
cmp
divl
rcr
icebp
pop
imul
mov
push
cmp
mov
dec
iret
sub
mov
sub
sub
in
jno
ljmp
into
jecxz
movsb
push
movsbl
dec
ja
xor
and
push
xchg
loopne
insb
imul
pop
pop
sbb
mov
or
cli
push
mov
jo
roll
lods
scas
mov
dec
or
out
imul
flds
and
cmpsb
xchg
dec
hlt
cmp
sub
mov
outsl
ljmp
mov
inc
sub
mov
stc
xor
pop
call
xor
push
pushf
shr
pop
cs
xor
rcrb
jecxz
cmp
outsl
pop
or
sti
imul
mov
xor
push
jge
lods
mov
mov
cmp
push
pop
je
fisubs
or
xchg
cmc
adc
xchg
out
sbb
pop
inc
add
adcl
mov
cmpsb
cmc
push
mov
cwtl
mov
pusha
jl
loop
push
pushf
xorl
test
or
shll
xor
stos
sbbl
jp
push
mov
and
jmp
stc
xchg
or
sbb
jmp
out
mov
inc
sti
adc
rclb
or
inc
jns
repnz
rcrl
rep
mov
sbb
rcl
aad
xchg
push
and
addl
sbb
hlt
cli
sub
pop
iret
jbe
push
lds
lea
ljmp
mov
jl
cld
js
out
mov
adc
push
inc
mov
ds
jp
in
fldenv
dec
cltd
push
push
add
and
mov
jbe
mov
pop
push
cmpsl
jmp
push
pop
inc
fbstp
xor
out
jmp
into
cltd
popf
mov
jb
mov
xor
push
mov
into
xchg
cmp
pop
jns
or
mov
mov
fbstp
sti
outsb
jp
lock
jno
repnz
insb
jge
add
push
sarl
xchg
xchg
shrb
fsub
inc
add
jmp
roll
into
sub
fs
popa
jae
and
dec
popf
out
jecxz
sar
jae
xorb
mov
jno
and
push
adc
sbb
sbb
scas
outsb
push
int3
pop
loop
ja
adc
stc
jb
test
out
sub
imul
aaa
dec
roll
movsb
leave
insb
cmp
add
mov
xor
or
std
enter
mov
push
mov
sub
dec
pop
ljmp
sbb
and
cmc
dec
fucomip
test
das
dec
mov
push
dec
xor
les
mov
insl
sbb
int3
xor
repz
int
xor
mov
dec
jbe
pop
push
push
scas
loope
sbb
mov
ds
add
cmp
les
add
imul
stc
in
pop
push
mov
idiv
sub
sub
xchg
fwait
mov
in
int3
push
jo
shlb
icebp
int
shll
in
rcrb
rorl
cld
mov
shll
dec
sub
dec
test
xchg
out
xchg
stc
pop
pop
fstps
mov
adc
sub
push
lcall
aam
leave
cmp
cld
mov
xlat
mov
cwtl
addr16
mov
rorl
sub
lods
xchg
jns
in
push
mov
movsl
pop
leave
ret
enter
xchg
imul
xorl
mov
inc
in
push
xchg
inc
mov
mov
loope
pop
jbe
clc
lcall
ljmp
out
inc
mov
nop
leave
push
sarb
push
mov
mov
js
jmp
ret
cmp
pop
add
xchg
jb
insl
inc
mov
call
sti
aaa
les
mov
sub
leave
pop
out
mov
mov
pop
add
rol
pop
imul
xchg
mov
iret
xor
fdivrp
sub
jle
mov
dec
xor
enter
stos
xchg
enter
movsb
cmp
jp
mov
pop
adc
clc
jno
ja
mov
cmp
xchg
rorl
shr
insb
xchg
rorw
loope
pusha
add
aam
enter
xchg
sbb
scas
add
or
jae
xchg
and
mov
clc
and
mov
xor
pop
push
mov
push
push
idivl
push
and
pop
adc
fidivrl
nop
inc
jbe
add
mov
dec
ret
aam
std
sbb
stos
push
jbe
subl
mov
mov
sub
iret
pop
loopne
dec
xchg
flds
jns
cmp
fs
cmpsb
inc
stc
fists
popa
mov
cmc
or
xor
fwait
cwtl
inc
out
mov
mov
jmp
jp
js
outsl
adc
dec
xchg
mov
push
inc
orl
in
xchg
int
jns
add
pushf
push
inc
dec
xchg
xchg
sbb
and
int
sahf
mov
iret
test
cltd
pop
mov
xor
out
and
fnstcw
mov
cltd
jno
test
loopne
icebp
or
jo
cmpsb
nop
push
inc
cmp
popf
sti
or
jo
orb
fdivl
in
insl
aam
sub
and
mov
jnp
sbb
cmp
fldcw
xor
pop
cld
dec
adcl
cmp
inc
pushf
or
adc
fsubrp
or
gs
sti
andl
pushf
push
sbb
xlat
add
xor
adc
das
dec
mov
xor
pop
sti
fdivl
inc
adc
lcall
pop
lock
mov
push
mov
addr16
sbb
nop
mov
inc
jg
stc
cmp
cmc
inc
add
test
das
aas
xor
insb
jbe
cmc
push
push
add
inc
cld
imul
sub
cmpsl
out
or
push
mov
or
clc
scas
mov
and
subb
push
jne
lret
mov
in
dec
cmpsl
or
pop
adc
xor
inc
imul
dec
leave
bound
or
aaa
inc
cmp
loop
ja
in
adc
lret
and
cs
xchg
cmc
jmp
je
cmp
jno
jmp
fistl
push
stos
jl
inc
nop
jne
into
add
dec
mov
das
mov
jge
pop
xchg
sbb
mov
sub
stos
pop
mov
enter
mov
push
sti
push
push
insb
xorb
in
sarl
mov
push
aas
rcll
mov
imul
xor
repz
pop
fnstcw
and
xchg
stos
adc
add
add
inc
sub
and
fucomip
add
and
xchg
mov
xor
jnp
adc
out
fldcw
pop
jno
sub
push
xor
or
mov
push
dec
jle
fildl
inc
int3
mov
xchg
rorl
rcrb
mov
xlat
mov
adc
and
inc
mov
jle
mov
or
cltd
sub
ret
push
mov
sbb
stc
iret
rcrl
dec
std
jl
inc
sub
mov
mov
addl
or
cmc
jg
push
int
mov
int3
mov
mov
add
dec
push
push
lret
popa
popa
ret
call
sbb
adc
je
xor
add
pop
adc
sub
sbb
and
repnz
and
adc
loope
les
ljmp
repz
cmp
inc
mov
fs
adc
daa
icebp
or
mov
stc
cmpsl
dec
jmp
pop
pusha
dec
test
add
test
push
movb
push
add
sbb
ret
dec
out
lock
rclb
std
popa
push
mov
dec
popa
lods
test
xor
cmpl
mov
or
pop
stc
pop
pusha
lcall
orl
cs
xor
push
fmul
movsb
sub
and
insl
data16
int3
lahf
lahf
mov
add
cmp
mov
mov
dec
lods
cmp
jae
popf
sub
das
adc
leave
xchg
mov
add
das
pop
popf
jl
lea
pop
das
out
jbe
or
sbb
xchg
jno
lock
add
xor
out
ja
mov
mov
insb
clc
mov
dec
fs
loope
and
outsb
sub
pminub
xlat
jge
leave
or
mov
aam
and
push
push
dec
out
and
mov
mov
sbb
pop
leave
lret
jae
pop
popa
push
mov
inc
test
aad
lcall
call
inc
pop
xchg
les
add
xchg
add
loopne
pushf
js
mov
mov
jo
or
repnz
rcr
lods
mov
scas
dec
and
roll
jg
andb
popa
mov
addl
and
popf
lahf
adc
dec
cmp
cmp
imul
int
sbbb
clc
mov
push
cmc
push
js
outsl
addr16
push
test
addr16
push
pop
lret
fadds
clc
out
sbb
and
sub
cld
icebp
lock
or
mov
sbbl
imul
scas
fs
inc
or
push
adc
adc
lcall
push
cld
mov
jno
rcr
daa
mov
cmp
fimull
addr16
fldenv
adc
test
add
clc
ret
mov
inc
jg
sbb
sbb
ja
les
jnp
pop
arpl
and
xor
repnz
subb
stc
add
cmp
cmpsb
aam
faddp
mov
subb
popa
out
jg
add
mov
int
lret
push
lret
mov
mov
cs
mov
push
xor
call
inc
push
dec
lret
xor
cltd
lock
je
dec
sbb
cmpb
mov
pop
and
imul
mov
mov
icebp
out
dec
test
insl
xlat
lock
push
icebp
into
imul
in
sahf
sti
rclb
jg
out
adc
jb
hlt
xchg
sbb
pop
pop
sbb
insl
aam
iret
mov
xor
mov
lods
mov
or
mov
popa
xor
mov
out
cmp
sbb
leave
andb
iret
ljmp
call
repnz
jl
push
fcoml
push
jp
push
pop
adc
test
or
out
ret
jno
push
xchg
aaa
push
cmpsb
cltd
pop
mov
add
mov
popa
pop
in
fcompl
pop
pusha
insl
and
outsl
mov
mov
out
and
and
sti
repnz
xor
into
loopne
adc
jae
pop
dec
stc
hlt
rolb
jo
movsl
mov
and
and
insl
cli
in
add
pop
repz
jmp
call
scas
jge
in
push
andl
pop
add
xor
daa
mov
inc
lret
test
push
pop
gs
insl
pop
pop
enter
popa
test
push
insb
stos
fsts
add
jb
scas
test
push
pusha
in
jne
cmc
pop
add
xor
mov
fisubs
out
iret
mov
lods
jge
test
loopne
add
adc
js
fadds
scas
scas
int
pop
cwtl
adc
fs
std
or
dec
mov
mov
adc
negb
loop
adc
movsb
and
cmp
lock
push
in
daa
add
pop
push
mov
adc
mov
test
js
addr16
push
jns
cmpsb
pop
mov
jl
ds
pop
add
fsubrp
adc
stos
jbe
or
fldenv
pop
sub
mov
sub
mov
jne
and
rol
or
xor
testb
neg
push
movb
pop
fwait
jmp
add
lret
mov
pop
lret
xchg
pushl
jne
lods
insb
adc
cmc
xchg
mov
sbb
cmc
lock
movb
jl
xor
call
repnz
xor
sar
in
out
lods
clc
mov
ret
inc
push
xchg
mov
cmp
push
or
xchg
frstor
xor
sahf
das
push
lret
dec
aas
subb
stos
and
cmp
mov
dec
inc
ficomps
or
sbb
aaa
popf
pop
daa
pushf
push
xor
scas
jo
fisubrl
push
dec
out
sub
mov
mov
jl
cmpsb
xor
es
sbb
cli
xlat
out
pop
out
push
mov
lcall
push
bound
mov
mov
jae
fistpl
inc
sbbl
imul
jae
add
xchg
rolb
xchg
cltd
push
pop
scas
adcb
mov
or
in
scas
sbb
push
jb
or
scas
sbb
jecxz
lock
lods
add
and
cmp
inc
in
lods
pop
int3
testl
fstps
pushf
mov
and
scas
jecxz
ss
clc
scas
or
mov
or
mov
pop
push
dec
cmp
and
push
lret
scas
xchg
xchg
insb
pop
push
shrl
inc
mov
or
dec
and
xchg
aam
cld
stc
inc
pop
pusha
lret
adc
cwtl
mov
ss
pusha
movsb
aas
xchg
repz
rolb
inc
add
inc
adc
jb
in
daa
call
leave
pop
xchg
jg
aad
cmp
xor
jns
gs
adc
sub
mov
push
inc
push
or
push
pop
pop
xchg
fsubl
in
jl
cmc
cmp
mov
inc
adc
out
xchg
or
inc
lret
push
cmpsb
fcoms
nop
add
adc
shrl
testb
sti
mov
xchg
xchg
imul
ja
mov
xor
xchg
sarl
sub
xor
lret
push
lahf
lcall
loopne
jge
divps
pushf
cltd
icebp
or
imul
scas
ds
cmpsb
inc
mov
inc
add
std
inc
loopne
xchg
add
mov
push
data16
inc
pop
sub
mov
or
movsl
pop
sub
cmp
jo
or
sub
adc
out
pop
lods
ret
daa
push
mov
imul
mov
out
sbb
add
push
scas
cmpsb
data16
cmp
xchg
sarl
loop
out
popf
ret
jno
cli
mov
fsub
fmull
dec
inc
xchg
jno
cld
setle
test
jno
xor
iret
in
add
daa
and
arpl
decl
jne
lret
mov
inc
sub
adc
aas
mov
sub
cltd
push
fwait
or
mov
pop
aaa
xor
xor
adc
pusha
out
lcall
jo
fcmovbe
shrl
push
pop
enter
and
leave
ror
mov
push
mov
nop
jbe
call
jae
cmpsl
daa
cmp
mov
xchg
bound
mov
xchg
fdivr
shll
lahf
pop
mov
loop
pop
jecxz
mov
rcl
jmp
lea
xchg
lds
and
lds
cli
jnp
xor
pop
bnd
or
leave
xor
mov
pop
xor
loope
sbb
sub
inc
or
movsl
and
arpl
sbb
mov
sbbl
dec
movsl
adc
cmc
adc
mov
mov
inc
adc
nop
lahf
lock
pop
lcall
sub
cwtl
pushf
iret
sbb
inc
push
stos
ret
push
and
push
xor
jp
aam
in
mov
jb
or
mov
xchg
sbb
pop
jne
or
pop
jle
lcall
out
dec
xchg
sub
std
inc
cmpsl
xor
adc
lods
les
adcl
jnp
xchg
bound
out
filds
in
fsubrl
arpl
mov
pop
dec
jae
fisttpl
mov
mov
push
fbld
mov
adc
push
cltd
xlat
rorl
inc
lcall
int
subb
push
movsl
mov
in
fistpll
jp
iret
loope
popl
push
xlat
mov
sbb
jns
das
mov
mov
ror
inc
repnz
test
popf
sub
imul
xchg
sbb
adc
mov
xlat
pop
repnz
and
idivl
xchg
xor
and
loopne
ss
push
cmc
or
shrl
aas
adc
mov
sbb
xchg
xchg
xchg
inc
or
mov
in
mov
ljmp
jb
xor
stos
adc
push
sti
add
xor
enter
imul
filds
and
cmpsb
into
out
rcr
pop
aam
cmpsb
mov
rcll
push
cmp
mov
fsubrl
sbb
movsb
inc
fadds
repnz
xor
push
insl
iret
or
push
xor
rcll
dec
cmp
inc
orb
lock
or
sub
xchg
lock
cmp
mov
pop
sub
fisttpll
and
xor
movsb
leave
push
test
add
rcr
mov
aaa
mov
cltd
clc
into
daa
cmp
pop
xchg
inc
jns
sub
cmp
test
imul
aad
or
stos
sbb
xchg
cmpsb
ret
push
dec
adc
mov
cmp
iret
lret
xor
mov
pop
mov
cmpsb
movsb
mov
jns
arpl
or
jecxz
pop
into
aam
cld
add
mov
insb
out
or
jle
repnz
dec
pop
sar
xlat
int
mov
bound
jae
fisubrl
nop
fsubrs
aam
mov
or
sbb
mov
pop
pop
int
iret
mov
xchg
stos
pop
sbb
xchg
fstp
test
mov
mov
mov
rorl
xor
popf
not
cmp
xchg
or
pop
or
lods
dec
js
or
mov
lods
sbb
mov
in
push
push
cmc
rolb
aad
iret
imul
and
out
ljmp
push
cs
add
xchg
js
mov
sub
cs
out
enter
add
jle
in
gs
cmpsb
lret
lea
push
push
xlat
aas
or
int3
push
andb
push
inc
sub
shll
jnp
push
inc
bound
pusha
jecxz
jg
sbbl
sahf
or
push
int3
adc
lods
push
mov
xor
xchg
fs
jo
fldl
inc
and
adc
jecxz
ret
pop
add
mov
add
sbb
and
sub
aas
mov
mov
fwait
mov
pop
jmp
ja
int3
xor
xor
cmc
xchg
scas
jnp
inc
inc
fstps
push
addl
mov
push
cmp
jae
jmp
adc
insb
ljmp
push
leave
mov
loope
adc
fmuls
imul
fdivl
fwait
rcr
inc
imulb
loopne
mov
pushl
mov
mov
add
pop
adc
dec
push
test
imul
push
sti
jb
pop
cli
xchg
pcmpeqb
jle
fmuls
gs
stc
mov
jp
int3
enter
sub
lahf
pop
js
cwtl
jle
adc
in
cmpsl
dec
addb
lods
mov
jge
js
mov
push
mov
xchg
das
adc
adc
daa
push
xor
rcl
jne
jecxz
les
pusha
addr16
adc
adc
or
loop
xor
dec
cs
mov
jg
or
adc
mov
mov
push
popf
xchg
mov
hlt
or
ret
lock
push
call
jle
ja
pop
or
adcl
and
fidivs
push
mov
outsl
test
loop
mov
mov
iret
dec
mov
inc
aad
lahf
in
fidivrs
sbb
fwait
out
fmul
rcll
or
cli
xchg
leave
dec
and
fimull
out
xor
push
pop
xor
subb
add
mov
hlt
insl
mov
lds
inc
push
jl
add
sbb
mov
rolb
sarw
dec
mov
data16
mov
cmp
xchg
mov
repnz
adc
jmp
call
mov
pop
xor
enter
jp
dec
jnp
fisttps
pusha
push
and
pop
pop
sbb
jb
xchg
mov
stc
in
pop
cli
xchg
scas
stc
mov
movsb
test
out
xor
lods
mov
bound
jbe
push
ffreep
in
sbb
add
adc
fcoml
rolb
ss
sub
mov
pop
mov
mov
pop
repnz
xor
les
or
bound
iret
call
fmulp
mov
jle
sti
sbb
mov
jno
or
sub
push
out
add
outsb
fs
inc
fstpt
cwtl
cmpsl
sti
xchg
cmp
fsubrs
cmc
cmp
xor
mov
xchg
fwait
pop
cmp
out
xchg
inc
add
push
push
jae
cmp
in
jp
inc
jo
xchg
test
xor
lret
xchg
inc
or
out
jge
jle
add
xchg
mov
lcall
jp
pop
je
pop
outsb
cli
dec
sub
scas
cmp
add
mov
popa
in
jmp
repnz
mov
mov
fcoms
lods
imul
fdivrs
adc
mov
adc
cmp
movsb
cmp
xor
or
test
fidivrl
xchg
enter
xor
push
mov
jno
mov
sarb
sub
mov
jns
add
xchg
and
test
add
lret
roll
or
mov
movsl
bound
pushf
or
lods
or
jg
cmp
jne
cmp
sub
scas
mov
lahf
lds
dec
mov
xchg
pop
out
sbb
jmp
test
xchg
test
lods
les
inc
inc
movsl
xchg
mov
pop
jmp
xchg
pop
ror
inc
idivl
out
out
test
lahf
push
rcll
xlat
andb
divb
fsts
ret
mov
mov
mov
subb
jnp
dec
nop
lea
xchg
mov
ja
push
lahf
jne
mov
cmc
or
inc
pop
mov
call
nop
insl
push
fdiv
data16
and
stc
jge
add
aad
dec
js
clc
repnz
dec
movsl
call
cmp
fs
sbb
xchg
sbb
scas
cwtl
ja
cmovne
adc
mov
jmp
aad
mov
mov
cmc
lds
adc
xchg
out
adc
jb
lds
test
dec
mov
lea
jb
ljmp
adc
arpl
ss
out
clc
sbbl
mov
repnz
scas
jo
jns
test
mov
mov
mov
add
mov
mov
sub
add
adcl
fmuls
lock
mov
addr16
xor
xorl
gs
out
and
cmp
or
enter
pop
adc
stos
je
sarl
mov
cwtl
scas
stos
jno
mov
pop
and
dec
adc
or
cmp
mov
sbb
lods
jle
out
adc
push
inc
shrb
pop
sub
pop
out
insl
push
paddsw
repnz
pop
popf
pop
lahf
mov
pop
pop
out
out
adc
push
fwait
xchg
pop
add
stos
pop
lods
arpl
mov
push
sbb
xorb
ja
shrl
test
shrb
cmp
daa
cmpsl
xchg
lahf
mov
mov
aaa
cmpsl
push
insb
pop
rclb
xchg
ljmp
lahf
xchg
std
iret
mov
jge
int3
dec
ret
inc
or
adc
lds
jno
fldt
jg
jl
mov
js
out
inc
shr
adc
iret
cmp
mov
das
fsubrs
adc
mov
jmp
insb
out
aad
and
loop
jmp
cmp
mov
fmuls
pop
int3
jle
movsb
out
pop
pop
fildl
lret
outsb
cli
xchg
sbb
sarb
out
adc
movsb
sbb
lea
test
xor
jnp
push
xor
pop
sub
pinsrw
xchg
cmpsb
outsb
inc
push
push
push
push
nop
in
xchg
xchg
jle
push
lret
jecxz
jo
push
dec
stos
stos
out
pop
out
mov
lahf
lret
xchg
xchg
daa
les
jl
mov
sub
sti
jns
pop
adc
fcmovnu
rclb
js
push
addb
lahf
dec
push
pop
lcall
ja
lods
ret
icebp
adcl
xor
int3
jle
scas
mov
pop
jp
add
mov
push
inc
fyl2x
sub
push
or
cmpb
loop
or
xlat
int
mov
mov
bound
jns
or
sbb
mov
inc
loopne
sub
inc
push
jp
pop
in
mov
or
lock
roll
ljmp
cmp
pop
jecxz
leave
xor
mov
sbb
jno
sbb
push
push
push
mov
loopne
push
pop
ficompl
imul
dec
lock
jnp
mov
xor
ds
jo
xor
inc
scas
fldcw
and
jo
shl
clc
lret
add
clc
pushf
int
test
jns
push
lcall
in
sub
std
mov
les
ja
movsl
shll
xchg
fnstenv
out
dec
bound
lahf
inc
test
add
push
push
sub
shll
ja
xchg
mov
pusha
pop
je
or
repnz
push
int3
lods
adc
ret
dec
fs
xchg
mov
push
subl
push
das
fiadds
idivl
fucom
std
mov
aam
pop
push
aam
add
dec
out
cmpsl
mov
adc
push
pop
stos
inc
out
push
jb
popf
jno
inc
sub
adc
adc
ret
cmc
cmc
sub
inc
or
int
sbb
js
sub
imul
outsb
repz
insb
inc
xor
lds
adc
mov
mov
repz
mov
inc
mov
mov
out
or
pushf
jns
pop
into
sbb
xchg
xchg
pop
out
je
mov
lea
stos
push
dec
call
in
and
sbb
clc
push
or
push
fstl
inc
pop
lsl
adc
mov
je
repnz
jnp
cltd
pop
xchg
iret
adc
xor
inc
jg
mov
mov
or
gs
pop
dec
push
xor
sub
nop
bnd
or
mov
mov
scas
sarl
iret
xchg
popf
pop
mov
cli
js
popa
inc
ds
cmc
mov
aad
lcall
test
lea
mov
leave
mov
das
cmp
sub
aam
ds
divb
lret
out
cmp
adc
dec
fstpt
int
or
sbb
lahf
mov
dec
std
push
pop
cmp
and
mov
add
and
push
stc
mov
cmpsl
cmc
pmuludq
mov
sbb
sub
mov
sbb
mov
pop
rcll
in
pop
mov
in
fs
mov
imul
xchg
ds
leave
enter
mov
fdivrl
mov
xchg
mov
mov
mov
stos
leave
push
dec
inc
or
fdivs
sub
xor
mov
adc
push
pop
sbb
pop
insl
je
leave
fcompl
cs
jmp
sahf
xchg
mov
sbb
add
or
push
sbb
pusha
and
push
or
mov
test
out
rcrl
jl
sub
xlat
and
sub
add
sub
pop
aas
mov
sub
fbld
lret
andl
lods
roll
dec
cmc
lods
pop
je
jno
jmp
sub
mov
hlt
xlat
out
adc
xchg
out
xchg
sub
pop
scas
push
outsl
sarl
cmc
or
xchg
xor
aad
sub
mov
cmp
mov
jge
imul
rcll
push
imul
pop
pop
dec
pop
xchg
fsubrl
sbb
pop
int
inc
movsl
rcrb
fsubl
sub
ljmp
popa
inc
or
mov
shrl
rolb
push
daa
out
daa
ljmp
push
sbb
js
pusha
aad
iret
sbb
inc
cmp
xor
addb
aam
ret
xor
pop
xor
jno
jb
sub
or
aam
rcrb
and
xor
arpl
shrl
je
in
jne
shl
mov
daa
add
imul
int3
sbbb
xchg
aad
loop
fisubs
jle
fsubrs
push
into
adc
imul
xor
push
pop
into
cs
imul
xor
add
fwait
ljmp
sahf
mov
and
pushl
mov
jne
mov
push
lds
inc
cld
xchg
add
sub
add
jecxz
dec
mov
movsl
sub
cmp
fildl
add
daa
fldt
adc
mov
cmp
ret
adcl
dec
mov
jg
repnz
lods
xlat
sub
mov
popa
fwait
loop
cltd
sahf
sub
test
sbb
mov
push
xchg
aas
negb
sub
mov
mov
jp
push
sbbb
push
fwait
or
pop
sahf
out
pop
cmp
daa
jge
test
test
jns
int
inc
fistpl
sub
jns
in
sahf
lahf
xchg
jecxz
add
lods
scas
dec
jo
aas
push
add
mov
fs
je
fs
adc
in
or
shll
mov
lea
ljmp
pushl
ficomps
call
fstpl
cs
mov
jg
enter
imul
mov
insb
lock
mov
ud2
mov
add
add
hlt
push
fdivrl
leave
mov
cltd
pushf
or
cmpxchg
sub
lcall
jle
push
test
push
mov
xor
pop
nop
frstor
cs
pushf
jmp
mov
push
lods
ljmp
adc
fcompl
mov
cmp
xor
cmpsl
sahf
insl
test
push
fwait
movsb
fwait
lods
pop
mov
lcall
sub
add
and
xchg
xor
in
arpl
and
les
ffreep
les
sarl
inc
in
xchg
mov
dec
mov
popf
outsl
and
cmp
sub
xchg
sbb
aad
fstl
push
sub
fcom
lods
sti
pop
insl
ds
lcall
lods
loopne
cmc
adc
push
test
int3
mov
stos
or
iret
pop
push
sbb
push
xchg
xchg
adc
aaa
repz
xchg
xchg
lock
or
pop
jb
test
test
in
pop
xchg
leave
scas
incl
scas
xor
and
pop
add
enter
sub
xor
cmpsl
outsb
sub
ja
hlt
mov
sahf
fwait
inc
push
push
jmp
out
xlat
rclb
mov
cmp
repnz
cld
ja
movsl
push
js
adc
xlat
shlb
adc
lods
adc
sbb
imul
je
adc
push
jne
test
mov
js
push
test
mov
std
jnp
jmp
fstpt
in
in
daa
sarl
idiv
insb
cwtl
push
xchg
jns
jb
out
fidivrl
xchg
pusha
ret
fs
cmp
push
lods
daa
xchg
mov
das
movsb
mov
loop
sbb
jb
cld
aam
adc
pushf
lahf
push
mov
jge
fs
and
mov
and
sbb
cmp
mov
or
repz
jbe
filds
mov
add
xor
stos
and
ljmp
imul
aam
sbb
sbb
out
test
sti
aam
ljmp
inc
adc
popf
pop
fs
fbld
lcall
ret
push
xchg
in
mov
xchg
pop
out
pop
lret
lods
mov
push
aaa
sbb
and
pop
xchg
push
or
xlat
ds
push
out
inc
xchg
or
adc
nop
jne
xchg
jo
rclb
popa
jl
cs
nop
rep
fdivrs
xchg
fisubrs
daa
pop
mov
bound
lret
xor
dec
shrb
lcall
and
mov
cmp
lds
or
dec
aas
imul
push
xor
push
mov
iret
push
mov
rcrl
and
leave
add
addb
ja
adc
push
aaa
mov
mov
and
xchg
mov
xchg
jns
pop
add
lret
sub
mov
out
xchg
dec
mov
push
pop
icebp
cwtl
mov
bound
xchg
or
and
cmp
dec
cltd
arpl
repz
insb
pop
add
insl
shl
cld
int
dec
insl
or
jle
popf
dec
insl
aas
jno
push
out
ficoml
and
sbb
shlb
xchg
push
shll
mov
loop
mov
mov
sbb
out
jno
sub
and
and
gs
xchg
jo
add
adc
and
and
sarb
pushf
int
and
pop
movsl
testl
in
sub
push
mov
mov
fs
mov
pop
js
or
sbb
negb
mov
repz
mov
insb
fcoms
mov
inc
test
pop
ffreep
xor
sti
fsubr
lret
nop
xor
or
out
xor
fs
rorl
leave
xchg
sub
pop
cwtl
mov
imul
add
imul
pop
add
mov
jb
mov
fs
or
add
loop
cmpsb
in
or
sbbl
adc
sti
cs
mov
xor
inc
push
enter
inc
adc
int3
or
stos
insl
adc
jbe
push
add
les
sbb
into
dec
outsb
repz
jge
bound
repz
cwtl
cmp
jg
sbb
xchg
pop
into
aas
les
mov
sub
pop
mov
mov
jp
pushf
aaa
stc
into
pop
insl
lretw
xorb
out
ja
pop
pop
dec
and
mov
insl
sub
lahf
enter
inc
push
push
shrb
and
das
ret
mov
aaa
jo
mov
cmp
lods
sbb
cltd
hlt
in
adc
mov
jae
lods
insb
and
inc
cli
push
add
je
aaa
or
lret
mov
mov
adc
push
das
dec
sbb
pop
xchg
into
into
movsb
repnz
popf
cmp
push
or
jb
sbb
xchg
lea
cmovp
jo
or
stc
mov
pop
add
push
jne
enter
test
adc
cld
or
shrl
xchg
das
pop
or
aad
dec
xor
add
adc
xchg
xchg
dec
dec
push
xor
mov
adc
cli
aaa
orb
push
out
sbb
cmp
mov
mov
push
pop
pop
or
pop
into
xorb
addr16
mov
push
mov
mov
jp
mov
mov
lcall
sbb
mov
stos
ja
jb
std
sbb
mov
out
leave
aas
jecxz
ss
and
js
insl
push
in
sub
aaa
mov
and
xchg
popa
sub
mov
sub
add
xchg
sti
jb
sbb
jno
aas
or
cmp
pop
mov
cmp
lock
inc
leave
sbb
pop
push
insl
popf
mov
ds
lods
mov
dec
or
jmp
jne
inc
test
aas
adc
inc
in
jp
or
arpl
fdivrs
in
cwtl
das
out
mov
lods
sbb
lea
dec
xor
mov
pop
xchg
push
push
mov
add
in
ja
movsb
jbe
xor
and
bound
mov
mov
mov
xor
cwtl
pusha
outsb
jmp
adc
sbb
cmpb
or
jg
sbb
pop
mov
in
insl
dec
jp
or
fwait
sub
cld
or
or
scas
xor
ds
mov
and
inc
pushf
js
sti
mov
mov
cli
jno
clc
jbe
loopne
and
fsubs
sub
stos
xchg
xchg
mov
fcmovbe
test
sub
movsb
cwtl
outsl
in
push
loope
shrb
mov
outsb
mov
testb
add
sbb
mov
xchg
fcomps
mov
subl
scas
mov
sub
inc
add
jmp
inc
test
push
scas
add
mov
pushl
pop
shr
pop
sub
xlat
out
mov
sbb
jmp
push
insb
lcall
cmp
push
ret
sbb
inc
lods
sbb
mov
nop
jne
fisubrs
daa
sbb
inc
add
stos
inc
in
jecxz
into
aas
repnz
call
nop
ds
fnstenv
movsb
into
call
adc
ss
jb
icebp
inc
rcll
incb
add
clc
push
out
xchg
movsl
ss
inc
pop
insl
adc
cmp
loopne
hlt
in
ljmp
imul
mov
imul
aas
stos
in
and
or
dec
dec
mov
arpl
xchg
into
lods
sbb
bound
inc
in
pop
adc
repnz
fldenv
aas
ret
fsubrl
insb
lcall
and
xchg
sbb
je
jle
push
dec
sub
jb
sbb
sbb
xor
test
mov
out
add
enter
adc
xchg
xchg
enter
cmp
roll
push
bound
and
pop
iret
jnp
xchg
mov
add
shrb
pop
scas
out
daa
aad
jae
stc
xor
out
sbb
or
rclb
loope
inc
mov
call
xchg
divl
pop
test
pusha
fisubrs
pushf
lds
pop
cmp
icebp
push
sbb
pop
pop
test
lock
cmpb
mov
push
nop
pop
repz
pop
jnp
jl
xor
or
inc
int
mov
or
fldt
pop
and
adcb
mov
ret
push
lret
int3
mov
lret
and
mov
movsl
out
push
sbb
push
dec
xchg
movsb
mov
movsb
inc
inc
jnp
jae
dec
push
imul
cwtl
add
push
adc
stos
xchg
dec
fwait
cwtl
or
xor
shlb
xchg
lds
push
out
pop
arpl
pop
fcoms
xchg
std
cltd
out
or
xlat
mov
jo
ds
jmp
inc
pop
sbb
mov
xchg
movl
repz
out
push
add
jb
xchg
movsb
mov
sbb
jb
sbb
add
arpl
jbe
popa
das
lock
insb
fs
hlt
jl
lds
push
stos
mov
dec
xchg
sbb
das
mov
popf
movb
jbe
stos
aas
inc
and
iret
call
out
lods
aam
ret
xor
dec
rcrl
pop
lock
xor
insl
add
dec
loope
xor
daa
stc
sbb
mov
clc
je
inc
mov
mov
test
sbb
mov
cltd
mov
push
insl
mov
or
dec
cmpsl
adc
sub
jae
pusha
test
inc
movsl
aad
fdivrs
jnp
repz
pop
or
add
jecxz
pop
out
xlat
add
sub
iret
mov
dec
stos
mov
scas
rorb
xor
outsb
lahf
shlb
push
lods
sbb
popf
pop
jecxz
out
and
or
sub
fildl
notl
sbb
fs
cli
ret
inc
ljmp
dec
xor
shl
inc
adc
ljmp
and
stc
dec
sub
adc
push
pop
int3
int3
adc
inc
adc
loopne
lret
mov
lret
mov
sub
jle
dec
lds
shr
insb
sub
mov
cmp
je
lods
inc
sub
add
xchg
out
mov
inc
pop
fldt
push
inc
cmp
icebp
cmp
mov
scas
and
jo
mov
jne
mov
mov
je
pusha
imul
lds
pusha
leave
cmp
jecxz
mov
mov
insl
push
repz
sub
pushf
adc
in
sbb
add
test
cmc
dec
mov
push
data16
fcompl
sbb
sub
fcmovbe
cmc
xor
jne
xchg
xchg
push
loopne
fwait
mov
and
repnz
xchg
jno
mov
imul
push
mov
pop
loop
inc
cmp
and
enter
or
push
add
xchg
mov
sub
or
sbb
pushf
repnz
bound
push
incl
notb
or
out
mov
add
insl
dec
inc
push
call
in
jecxz
loop
mov
lock
mov
mov
dec
xor
insb
shr
sub
dec
add
sub
mov
or
rorb
in
in
dec
pusha
jmp
jnp
cmp
jno
into
out
jg
int
aaa
mov
ja
push
int
pusha
test
inc
xchg
pop
push
or
clc
int3
adc
xchg
sbb
jecxz
inc
lahf
sbbb
cmpsl
pop
mov
add
push
idivl
movsb
imul
call
push
fisttps
fstpl
in
mov
lret
testb
pop
mov
push
adc
adc
jae
jge
jge
rcrb
shr
mov
inc
or
ret
push
imul
push
cltd
cltd
jg
mov
jp
mov
scas
fnstenv
and
mov
leave
popf
out
jae
xchg
or
sub
inc
ja
xorl
cmpsb
mov
lods
dec
xchg
pop
jnp
jg
incb
mov
aad
sbb
xchg
cmp
cmp
add
popa
mov
add
jne
arpl
push
inc
data16
mov
pop
lret
repz
or
les
inc
dec
inc
mov
push
and
scas
shll
cmp
jmp
mov
xchg
addr16
pop
lret
in
roll
mov
xchg
mov
lahf
xchg
jb
movsb
dec
lock
fwait
sbb
pop
jmp
adc
insb
int
inc
sbb
fisttps
cmp
data16
mov
jno
je
sub
and
mov
jae
xchg
out
loopne
or
fcomps
or
push
xchg
test
mov
and
adcl
dec
push
bnd
or
push
inc
mov
imul
jmp
std
push
or
cltd
or
fldt
cmp
xlat
das
push
sub
data16
push
or
sbb
dec
inc
lcall
and
stos
mov
adc
sbb
and
rorb
rcl
test
popf
xor
adc
or
jo
mov
js
pop
inc
lea
loopne
cmp
cmpb
fsubl
pusha
stos
lcall
sbb
mov
arpl
xor
mov
sub
cmp
push
mov
sub
jnp
pop
loopne
pop
dec
pusha
inc
js
clc
sub
insl
dec
aas
sub
pop
lock
popf
cmc
std
das
mov
fsubrl
cmp
and
inc
or
cld
lahf
push
mov
inc
cmp
mov
cmpsb
push
fs
mov
in
cmc
pop
adc
and
mov
add
loopne
jl
inc
pop
sub
jbe
outsl
int
ret
data16
xor
rcrl
push
stc
and
lock
jl
rolb
mov
negb
ret
jae
push
test
cmp
cmp
insb
fcompl
jne
cmp
mov
push
xchg
fnstsw
adc
cmc
sbb
add
sbb
or
subb
in
in
daa
inc
stos
and
movsl
mov
cmp
cmp
sahf
cmc
jbe
inc
jl
hlt
js
out
mov
in
mov
pop
or
push
idivl
in
out
ret
ret
roll
mov
dec
clc
mov
fisttps
and
xor
xchg
inc
out
pop
adc
mov
lock
outsb
in
mov
dec
mov
ja
ljmp
stos
cld
ja
addr16
movsb
jne
pop
dec
push
sbb
pop
into
or
and
adc
cltd
or
js
aad
jb
xchg
cmp
data16
add
xchg
int3
jl
xor
leave
mov
lret
insl
mov
dec
xlat
cmp
outsb
jcxz
es
insb
lcall
in
ret
das
dec
push
pop
add
js
sbb
push
dec
mov
shrl
sub
rclb
jbe
adc
mov
xchg
int3
ljmp
outsb
pop
bound
daa
stc
push
pop
sarl
loope
jge
xor
fstp
aad
or
sub
mov
xchg
push
dec
stc
jae
lods
pop
sbb
imul
cmp
int3
xchg
insl
mov
outsl
out
lods
lret
add
faddl
cs
pop
pop
sub
sti
imul
mov
dec
ss
pop
jmp
idiv
inc
fwait
pop
sbb
add
xor
in
sbb
add
mov
mov
mov
pop
sbb
clc
inc
jb
insb
pop
std
clc
repnz
sbb
push
jo
pop
push
cmp
jge
cli
outsl
insb
push
icebp
imul
push
repz
and
xchg
mov
inc
repnz
sbb
pop
insl
ret
mov
lods
icebp
adc
or
adc
subb
test
cmp
xchg
jo
jns
cltd
dec
call
xchg
and
lret
popf
out
cltd
ficompl
xchg
outsl
push
mov
out
push
cmp
or
xchg
cmpsl
scas
mov
nop
ret
decl
add
xor
adc
mov
nop
pop
mov
dec
jl
in
dec
out
push
mov
imul
imul
pop
adc
inc
dec
test
push
out
ja
dec
ret
jno
or
inc
add
outsb
adc
sbb
xchg
sub
imul
push
xchg
or
lahf
loop
dec
pop
emms
stos
xchg
cmc
jp
fistpl
dec
cmp
cmp
lea
xchg
stos
out
add
and
imull
shl
push
bound
and
mov
add
test
jge
xchg
mov
mov
fs
movsb
cmpsl
mov
in
ljmp
jg
mov
ficomps
iret
std
and
mov
popa
call
xchg
lcall
ja
fbstp
jb
push
cmp
push
dec
pop
mov
and
fcmovnu
pop
cmp
lcall
test
xchg
xchg
add
fnstcw
std
loope
dec
dec
lock
out
aam
cld
int3
mov
data16
fstpt
adc
inc
xchg
dec
fs
push
push
int3
ret
xlat
out
nop
mov
adc
shlb
outsb
dec
mov
cmp
cli
jmp
rorb
scas
out
or
or
aaa
lods
mov
jne
or
mov
xor
cs
fwait
mov
test
ret
int3
mov
mov
arpl
out
outsl
pusha
inc
imul
push
xchg
icebp
push
stos
stc
stc
orl
leave
cmc
mov
hlt
sahf
xchg
test
out
test
jle
push
pop
xor
test
mov
sbb
shrl
std
mov
in
test
sub
xchg
nop
lds
mov
pop
orb
mov
popa
dec
inc
sbb
push
sbb
ja
sub
and
test
pop
jmp
dec
arpl
push
subl
mov
jo
xor
mov
test
test
and
shr
mov
jmp
mov
pop
into
repz
mov
cli
lea
pop
push
xchg
push
add
sbb
iret
mov
inc
mov
imul
mov
xor
mov
addr16
xchg
iret
or
lret
in
dec
aaa
mov
add
inc
inc
add
dec
sub
or
idivl
fimull
lcall
sbb
cltd
adc
and
xor
dec
xchg
xor
outsb
and
mov
call
orl
mov
aaa
xor
jns
xchg
movsb
or
cmp
push
lds
mov
mov
mov
xchg
aam
les
fs
fldenv
lahf
ss
push
rolb
inc
dec
add
pop
push
stc
mov
sbb
or
out
cs
push
int
sti
mov
jb
lret
cmpsl
mov
push
cltd
fmull
dec
frstor
lret
lret
pop
xchg
daa
mov
int
mov
xor
inc
loope
test
xchg
ja
push
xor
dec
xlat
jnp
lods
push
mov
push
gs
wbinvd
and
mov
mov
mov
inc
xor
xchg
outsl
out
neg
addr16
cwtl
push
ficoml
mov
xor
lock
jmp
fmull
sub
push
sub
loop
mov
popa
mov
arpl
cld
or
lea
hlt
jmp
cltd
pop
fwait
inc
fisttpl
pop
std
or
xorl
or
js
pop
xor
or
pushf
mov
sti
jb
lods
xor
loop
lret
xchg
fs
data16
and
mov
and
push
and
add
loop
add
popw
inc
xchg
stc
pop
cmpsl
or
and
dec
and
cwtl
inc
lock
sbb
jg
xor
mov
mov
sub
cli
out
hlt
filds
mov
jno
pushf
xchg
xchg
push
mov
jmp
xchg
pop
int
cmp
xchg
inc
shl
fisubrs
bound
xor
cmpb
aas
loopne
cmc
pusha
add
mov
sub
ret
leave
aam
inc
test
cmpsb
jl
fsub
push
or
mov
movsb
nop
push
xor
out
xor
xchg
or
imul
push
popa
sub
and
addr16
data16
shlb
jns
aad
aas
or
ret
jnp
movsl
mov
pushf
xchg
inc
mov
mov
dec
mov
es
add
mov
xchg
jo
out
push
inc
popa
xor
lds
inc
cmp
test
popf
popa
mov
test
and
dec
into
pop
fdivs
add
jb
inc
ds
pop
xchg
cmp
mov
sub
lods
dec
or
mov
pop
jns
lds
dec
push
movsb
sbb
mov
pop
stos
pop
inc
xchg
push
pop
ror
dec
mov
out
call
lock
pop
sub
fisttpll
mov
dec
jecxz
roll
mov
stos
ds
pop
adc
out
or
call
data16
lods
cli
dec
mov
int
push
stos
mov
les
xchg
mov
mov
int
jb
mov
push
clc
jmp
imul
xor
lret
push
mov
out
or
in
and
les
sub
dec
out
push
add
pusha
test
push
jp
lahf
fsubrs
into
cmp
in
fstl
push
and
and
ret
mov
jb
xor
or
arpl
push
into
pop
stc
dec
stos
pop
cli
repz
add
dec
enter
xchg
movsb
push
inc
test
jns
adc
jbe
mov
jp
jae
arpl
jmp
inc
pop
push
dec
inc
stc
adc
sub
jno
xchg
mov
loopne
or
adc
inc
je
and
and
repz
push
dec
push
mov
lods
xchg
mov
cwtl
scas
cmpsb
push
or
dec
cmpsb
aad
icebp
xchg
icebp
cmp
mov
js
je
jnp
jns
adc
jp
mov
mov
sbb
push
push
stc
sarl
cmpsb
stos
xchg
pop
sbb
ret
popf
in
out
leave
ss
mov
jmp
into
xchg
pop
js
out
jbe
fistl
jle
jle
xchg
ds
in
pop
hlt
cli
jl
jle
shlb
out
sarl
push
das
pop
scas
bound
push
lods
adc
xchg
xchg
aad
dec
inc
dec
fsubrs
imul
mov
ja
mov
cmp
cs
add
mov
xchg
sub
and
mov
mov
or
mov
jmp
cmpsb
sbb
inc
std
xor
test
fwait
aad
cltd
mov
adc
pop
rclb
shlb
js
ds
and
pop
mov
lds
insl
pop
inc
stos
push
out
add
jl
sbb
sub
ficomps
js
push
xchg
out
jbe
loop
dec
testl
lahf
push
xchg
mov
stos
cmpb
pusha
xor
or
xlat
imul
adc
sbb
outsl
xor
inc
cmpsb
stc
dec
repz
xchg
pop
inc
fnstcw
push
andl
mov
push
dec
mov
add
cmp
sub
xchg
mov
std
push
sti
cmp
jae
lahf
mov
loope
ret
dec
shr
sub
sbb
test
pop
loop
sub
inc
push
add
enter
pop
sarb
sub
lret
dec
sbb
push
jge
inc
mov
push
push
ss
scas
fcomps
xor
rcrl
mov
je
jno
nop
push
pop
add
lret
or
fisubrs
nop
xor
sub
inc
ret
xor
lret
rcl
sarb
ljmp
cmc
leave
mov
fisubs
insb
dec
jo
pushf
cmpsb
jne
mov
push
mov
mov
xchg
xor
insb
pop
test
ljmp
int3
int
pop
push
mov
adc
sbb
iret
sar
sarb
adcb
mov
mov
xor
fistps
cs
in
movsb
adc
push
sbb
mov
nop
clc
dec
and
pop
nop
call
out
xorb
scas
inc
in
dec
and
clc
test
test
sub
mov
in
jnp
and
and
aad
pop
scas
insl
shr
pop
mov
jno
mov
pop
or
das
lock
push
mov
mov
stos
or
lods
and
insb
stc
push
outsl
ss
jecxz
dec
test
fwait
das
sub
addr16
jmp
pop
mov
dec
push
shrl
jb
sub
stc
ss
lods
fdivr
mov
sub
cld
fbstp
push
and
out
lret
cmp
jb
sarl
in
pop
andl
out
ja
push
stos
xchg
push
add
out
mov
mov
ja
pop
mov
and
movsb
adc
lcall
stos
and
insb
test
jl
or
push
dec
fmuls
aas
mov
shlb
gs
xlat
psubusb
pop
test
pop
sbb
aad
mov
nop
ficoms
push
in
es
dec
scas
sahf
cmp
in
push
dec
mov
and
out
ja
inc
shrl
xchg
leave
xchg
clc
xor
out
push
mov
lret
lcall
cltd
pop
or
clc
mov
and
add
rolb
ljmp
sahf
sub
int
push
sub
imul
lret
stos
jle
xchg
or
vandps
inc
clc
mov
int
je
sbbl
mov
sub
mov
jbe
enter
and
mov
out
fs
push
or
pusha
sbbl
fwait
mov
fsubs
push
dec
mov
sub
inc
in
rcrb
mov
sub
ret
loopne
or
jmp
shrl
jbe
xchg
ljmp
mov
pop
rcrb
out
xchg
fldl
inc
cmp
mov
loope
int3
les
dec
mov
adc
call
cld
sub
inc
sbb
jecxz
dec
sbb
lock
pop
mov
or
iret
pop
jge
pop
hlt
mov
ljmp
jns
dec
inc
add
sbb
pushf
ret
jno
gs
popa
mov
cld
push
lods
sarb
push
push
sbb
aaa
dec
je
in
hlt
addr16
push
inc
adc
das
fdivl
dec
push
mov
adc
push
das
sbb
jae
lret
and
push
pop
aas
sbb
leave
popf
rcrl
sub
add
mov
cmp
imul
add
insl
fstp
les
adc
jo
jo
pop
ret
add
mov
outsb
sub
dec
jmp
push
sub
adc
xor
leave
jmp
and
mov
dec
pop
int
mov
clc
mov
push
jb
sbb
addr16
cwtl
xchg
jne
into
in
rcll
imul
dec
mov
cmp
mov
add
mov
adc
addr16
push
stos
sbb
fs
push
pop
cmc
mov
stos
and
jno
shlb
ficomps
iret
movsb
xchg
jns
mov
adc
test
jb
jae
cli
or
ja
inc
jnp
les
stc
dec
push
xor
xorl
or
adc
inc
test
jecxz
mov
arpl
push
add
mov
dec
addr16
push
insb
test
jmp
dec
ffreep
inc
stos
arpl
cld
test
ss
xor
add
daa
lea
arpl
jle
in
or
movsb
fldt
dec
xor
repz
pop
icebp
adc
jnp
dec
inc
dec
imul
pop
jge
pusha
in
push
push
nop
or
jmp
movsl
cmp
test
and
push
adc
mov
mov
fiaddl
jecxz
cmp
lock
out
sahf
test
enter
push
scas
rorl
xor
adc
jmp
fidivs
lret
rcl
loope
lods
fsubrs
mov
bound
adc
jo
dec
cwtl
jno
std
or
loop
and
in
lret
insb
dec
jno
out
mov
cmp
push
add
mov
push
ds
mov
sbb
adc
pop
cwtl
int3
adc
or
dec
in
stos
mov
dec
add
inc
and
push
jle
iret
inc
nop
test
push
xchg
fdivrl
dec
lea
or
jbe
cmp
sbb
fbstp
imul
loopne
outsl
push
push
sti
pusha
pushf
pushf
mov
dec
mov
xor
stc
iret
dec
add
push
outsl
enter
lds
pop
out
jo
call
gs
ds
mov
xor
sub
sub
adc
sub
int
mov
les
jg
stc
es
fisttpl
dec
add
add
sbb
mov
adc
mov
adc
daa
adc
sub
mov
mov
ret
and
imull
push
dec
cmp
lds
call
jge
pushf
xchg
jnp
int
jno
inc
cwtl
dec
addr16
das
push
cmpsl
scas
iret
ss
xchg
adc
xchg
xchg
xchg
fimuls
jnp
js
dec
lret
adc
mov
jg
lods
xchg
lret
loope
or
inc
xchg
into
xchg
mov
and
cltd
mov
mov
sub
jle
outsl
mov
jp
dec
sahf
xchg
fistps
mov
or
enter
sub
sbb
sub
sbb
and
addl
bound
jno
test
movsl
dec
fwait
jae
test
jl
ss
xlat
push
add
adc
jmp
outsb
or
xor
movsb
lcall
out
inc
enter
movsb
pop
mov
popf
and
fs
les
jb
push
lock
dec
xor
adc
pop
stc
loop
in
dec
test
leave
and
push
push
les
testb
mov
jno
pop
icebp
jecxz
decb
ds
adc
lahf
cs
sbb
rolb
shll
mov
sub
ret
test
inc
jmp
fxam
out
daa
push
ja
adc
iret
dec
push
adc
sahf
stc
mov
sahf
repz
xor
jno
push
lret
add
adc
mov
sub
dec
fpatan
repnz
lret
stos
pop
xlat
loopne
sti
call
movsl
cwtl
mov
cmp
sub
fcoms
adc
mov
outsb
sbb
in
std
roll
cmp
push
call
jnp
and
adc
fbld
mov
pop
stos
sub
sub
inc
pusha
push
cmp
jns
xchg
adc
in
mov
sub
out
push
sbb
insl
jno
mov
imul
add
repz
scas
or
lods
xlat
sbbb
out
das
in
xchg
scas
insl
enter
lret
movsb
repz
popf
jne
popa
fdivrl
mov
mov
shr
push
test
mov
cli
cld
adc
movsl
sub
mov
jmp
dec
cld
adc
jne
inc
notb
push
cli
xchg
cli
or
pop
stos
das
adc
cmp
lods
and
dec
vmovaps
add
es
sbb
sbb
movsl
bound
dec
jo
shlb
mov
pushf
test
lods
and
sar
sti
jecxz
push
call
loop
out
add
orl
scas
shll
mov
mov
cmp
and
add
jbe
push
add
and
sbb
cmp
pop
cmp
ficomps
loop
dec
int
push
or
stos
sti
or
test
dec
fadd
jbe
sbb
sbb
rorb
dec
dec
rcll
push
or
add
jecxz
out
in
inc
aad
outsl
add
add
pushf
fdivr
in
icebp
mov
in
aad
inc
in
cli
pushf
add
add
inc
mov
jne
mov
cmpsl
mov
cmp
jge
jb
xchg
lret
or
pop
mov
inc
in
fcmove
out
and
jbe
in
in
outsb
inc
and
bound
test
sti
lds
out
std
rorb
subb
pop
fstpt
ja
jae
dec
test
int3
jae
cmp
xchg
add
aad
add
push
or
sub
or
inc
sti
sti
out
ret
jg
jmp
int3
ss
inc
aam
xchg
mov
jae
lahf
mov
xchg
mov
js
jmp
ja
loopne
lods
mov
int3
out
mov
xor
or
clc
jmp
dec
lcall
mov
shlb
add
or
daa
stos
xchg
cmp
and
mov
lahf
pop
and
repnz
xlat
push
cmp
cmp
les
ret
in
test
pop
mov
adc
enter
cmpsb
pop
xor
mov
sub
test
test
and
mov
xchg
adc
jecxz
hlt
mov
daa
fimuls
pop
stc
lock
leave
aas
adc
fdivrs
incb
add
in
jmp
cli
jmp
sbb
idivb
mov
sub
lods
cs
and
xor
and
fcmovbe
cmpsl
sbb
mov
or
adc
cltd
shr
cmpb
xchg
jb
popa
fdivrs
addr16
mov
jns
add
jns
stos
adc
cltd
into
inc
dec
pop
push
pop
xor
dec
in
fadds
push
add
test
dec
jnp
outsl
es
adc
dec
sbb
jnp
call
arpl
or
hlt
mov
out
pop
aas
aad
jmp
pop
jnp
xor
mov
sub
int
mov
cmp
into
or
xor
cmpsl
in
cwtl
lds
fldt
in
mov
out
int
dec
pushf
cld
sub
out
cld
push
ljmp
jb
sar
inc
les
ss
pop
xchg
daa
movsl
push
cmp
push
decb
out
add
xor
xchg
xchg
mulb
fisttps
jle
icebp
pop
fidivs
xchg
sbb
test
daa
js
mov
push
in
add
pop
xor
jo
xchg
pop
xchg
in
inc
sub
iret
pop
inc
jnp
or
imul
xchg
call
je
push
mov
jp
xchg
push
scas
cmc
mov
leave
in
imul
in
adc
ljmp
fisubs
add
aam
mov
negl
imul
loope
iret
sub
dec
push
fs
data16
mov
icebp
lret
jns
enter
sub
mov
or
mov
hlt
je
fnstcw
mov
in
push
jnp
insl
sbb
or
xchg
cltd
adc
cmp
adc
fbstp
jo
jecxz
sbb
adc
pop
pop
mov
add
sbb
sbb
and
fisubs
std
adc
mov
fistpll
ficompl
enter
push
pop
roll
mov
jmp
mov
ret
xchg
jb
or
in
jle
sub
lods
pop
bound
test
lods
stos
cmpsl
loopne
scas
push
and
jo
or
into
and
sub
adc
add
scas
fnsave
dec
adc
cmpb
mov
push
je
or
lret
incl
lret
lds
mov
mov
and
std
out
fwait
sbb
into
imul
add
sub
lods
gs
mov
mov
mov
jg
pop
movsb
pop
incl
or
insl
mov
loop
jbe
pcmpeqb
out
lods
xchg
arpl
arpl
das
lods
mov
fsts
push
jo
stos
andb
fs
sbb
lea
xor
xor
inc
in
xchg
ljmp
jne
ja
cmc
jbe
lds
lahf
cltd
leave
mov
xchg
or
imul
cmp
outsl
test
js
mov
pop
mov
pop
fs
mov
sahf
adcb
stc
fidivrs
lret
int
sub
enter
sub
xchg
adc
arpl
push
insl
sbb
push
test
in
adc
push
lcall
sbb
out
mov
jl
xchg
outsb
in
loop
lods
arpl
lock
sub
pop
in
cltd
mov
add
or
mov
xor
cmp
push
out
xchg
add
push
push
jo
lahf
mov
or
enter
pop
jns
cmp
xchg
adc
mov
orb
sbb
sbb
adc
inc
mov
dec
ja
mov
jno
jbe
add
or
jle
in
mov
sbb
sub
and
mov
loopne
pop
add
push
mov
or
sub
jns
out
scas
pop
xor
jno
subl
push
hlt
in
dec
mov
scas
arpl
in
and
or
sbb
adc
stos
mov
mov
xor
mov
pop
mov
mov
mov
js
pusha
out
mov
push
or
jecxz
xchg
call
outsl
rclb
pop
adc
pop
loopne
dec
cld
push
pop
mov
fcomps
mov
mov
cmc
mov
inc
adc
fdivr
test
jo
sub
ds
scas
jle
adc
mov
or
adc
popf
xchg
mov
sti
ljmp
xchg
mov
je
ret
inc
stc
stos
cmpl
aas
out
jl
xor
popa
adc
cmp
jmp
dec
mov
inc
jae
xchg
xchg
push
dec
sub
test
mov
shrb
mov
pop
lcall
jmp
inc
sbb
pop
pop
pop
jo
sub
mov
outsl
jne
inc
lock
push
jo
loop
loope
mov
dec
push
add
mov
lahf
fcmovb
bound
sti
popa
mov
pop
jo
mull
pop
push
in
adc
sahf
mov
push
jo
jne
cmp
fmull
mov
aam
ret
xor
dec
sbb
pushf
jp
andl
or
negl
push
jo
sub
cld
sbb
pushf
mov
cmpsl
jecxz
ljmp
dec
mov
xchg
ret
pop
push
stos
fildl
dec
mov
sub
cmp
xor
shrb
sub
lahf
mov
jge
pop
aaa
adc
ja
out
jno
sbb
les
sub
ficomps
fadds
aaa
mov
mov
dec
shll
xchg
push
mov
cmp
pop
test
cmpsl
add
sub
mov
outsl
sbbl
mov
int3
inc
xchg
sbb
jmp
and
pushf
and
mov
rolb
push
bsf
or
pop
jmp
enter
dec
fstpt
lds
and
mov
dec
call
hlt
ja
or
dec
iret
inc
call
xor
push
icebp
in
mov
mov
je
dec
mov
adc
xor
call
out
fld
jb
cmp
mov
pop
sbb
mov
sub
sti
mov
dec
sarl
loope
xchg
shr
adc
testb
andl
es
sub
jmp
cwtl
pop
mov
mov
roll
jns
bound
jl
or
cmp
daa
scas
sub
adc
dec
sarl
aad
aam
ret
lret
repz
test
out
lods
outsb
addr16
test
iret
mov
lods
pop
fisubrl
addr16
sbb
les
cltd
dec
push
push
pop
xor
loopne
stos
loope
jge
jle
xchg
repnz
push
test
rorl
push
rcl
dec
mov
jno
sub
xlat
pop
inc
test
js
or
ds
cmp
mov
push
bnd
out
popa
mov
lods
push
xchg
xor
dec
das
out
aas
pushf
push
inc
aaa
lds
jbe
lods
cmp
ret
add
mov
and
mov
movsb
pop
jbe
xchg
mov
jno
fstl
dec
inc
in
out
mov
fwait
mov
mov
lcall
mov
pop
mov
inc
clc
data16
jns
imul
xchg
xchg
scas
sub
push
out
push
dec
lcall
xor
rorl
jmp
push
orl
mov
dec
in
pop
outsl
lods
jo
xchg
push
pop
mov
nop
xor
stos
mov
dec
aad
push
push
cli
into
es
mov
test
mov
add
xor
ret
sbb
or
fisubrs
in
lret
in
mov
daa
out
jmp
sub
jmp
lret
xchg
lcall
sub
mov
lods
lods
ljmp
pop
push
and
dec
test
mov
adc
dec
xor
dec
add
clc
or
lods
out
xor
mov
in
arpl
or
rol
jbe
add
sahf
cld
adc
and
sbb
js
ret
sub
shlb
push
imul
dec
iret
aas
mov
ss
add
lods
repnz
out
lret
cmpsb
repz
loope
shll
subl
and
jmp
cmp
enter
lret
inc
jno
jns
add
dec
shrb
xor
adc
jbe
enter
inc
xor
gs
popa
push
jle
mov
shlb
xchg
mov
dec
dec
test
iret
stos
jo
fs
and
mov
xor
mov
xchg
mov
cmp
fisubrl
pop
inc
or
scas
jp
test
mov
xchg
insb
adcl
push
cltd
into
mov
mov
aam
sbb
pop
imul
or
mov
loopne
mov
popf
adc
insl
cmp
mov
dec
inc
jb
xchg
cmp
sbb
aad
repnz
mov
leave
test
or
xor
aas
add
std
sti
out
lock
pusha
pusha
cmp
push
stos
and
out
mov
rol
jae
jae
adc
mov
ljmp
lret
adc
or
fwait
arpl
das
lret
mov
push
popf
push
pop
jmp
cmp
cmp
lcall
push
icebp
push
aam
clc
mov
jae
bswap
int3
dec
lcall
mov
test
fsubrl
push
cmp
imul
fisttps
out
xchg
sub
popa
jle
lods
out
stos
push
add
insl
or
or
dec
sbb
add
jmp
mov
jmp
imul
sbb
aam
clc
or
push
fimuls
test
or
pop
adc
add
test
adc
pop
mov
mov
push
xchg
test
lret
imul
psrad
insl
cmp
lahf
adc
lcall
mov
int3
out
inc
cmp
popf
xor
scas
inc
and
lock
or
and
adc
add
mov
add
push
ds
cmp
xchg
out
and
fcoms
in
add
pop
rclb
inc
aad
pop
cs
xor
negl
into
es
dec
nop
mov
mov
dec
test
mov
or
dec
stos
push
mov
mov
jecxz
mov
aam
add
outsb
outsl
sub
mov
sub
sub
test
fcom
jmp
sub
ret
lcall
mov
cltd
mov
inc
jl
lahf
sbb
out
jl,pt
cmp
sysret
mov
std
jnp
pop
daa
incl
js
jns
and
push
or
addr16
daa
scas
jmp
fidivs
cmpsl
fsubr
or
cld
out
aad
jle
inc
mov
jle
imull
bound
cli
cli
add
xor
ret
test
rcrb
imul
ret
movsb
outsl
lret
or
mov
negb
mov
xlat
xchg
sti
dec
jecxz
dec
sub
or
or
fadds
push
and
loope
xor
xchg
pop
jns
pop
jbe
popf
mov
or
dec
insb
pop
test
dec
in
lea
rcll
sub
or
xchg
add
pop
pop
lcall
xor
or
in
out
xor
inc
mov
cmp
mov
aas
test
adc
test
pop
loope
ja
jbe
fs
xchg
pop
pop
sub
dec
sbb
pop
adc
fadds
divb
leave
insb
repnz
test
jle
lock
mov
jp
jl
fdivr
jmp
add
fiadds
outsl
cltd
es
pop
push
sub
arpl
outsb
inc
mov
pusha
scas
insb
xchg
xor
and
or
insb
pop
lods
sub
mov
dec
sub
inc
ja
and
gs
inc
pop
cs
xor
adc
pop
int3
mov
rsm
mov
push
add
jmp
aaa
cwtl
in
movsl
cwtl
xor
xor
fbstp
lods
jmp
xor
mov
and
mov
imul
scas
mov
movsb
fidivl
das
sub
nop
es
add
xor
cli
push
imulb
lahf
mov
sbb
addr16
mov
adc
adc
loop
addb
xchg
lods
add
sub
sbb
ds
sub
icebp
inc
mov
sub
or
je
mov
or
mov
add
dec
daa
sub
fs
out
push
in
cltd
sti
sbb
outsl
cmc
pop
lahf
fists
cmp
xchg
movsb
loope
mov
jecxz
mov
jl
inc
push
pop
push
mov
mov
inc
add
pop
fcomps
sbbb
inc
mov
fdivrs
shrl
dec
and
test
sarb
jmp
and
clc
dec
sbb
or
lds
add
fcompl
sbb
je
fucom
jle
fcoms
lds
sub
push
fucomip
mov
fistps
das
pop
mov
data16
lea
mov
mov
sub
push
fsubp
or
daa
xor
xchg
pop
push
jg
adc
les
pop
pop
ljmp
test
rorl
das
dec
xchg
or
ljmp
cmp
mov
sub
aas
shl
lret
mov
pop
icebp
cli
fadd
lods
mov
negb
int3
jae
lock
lahf
les
xchg
jp
aad
pop
les
and
add
leave
add
add
fmull
pop
nop
fstl
adc
mov
int3
push
ret
jge
jns
mov
mov
mov
sti
jecxz
mov
je
jmp
cmp
lret
sahf
cwtl
fadds
popa
add
xor
je
push
mov
or
add
sbb
bound
xchg
pop
sbb
out
rorb
insb
divl
inc
cmp
scas
xor
idivb
lcall
mov
scas
test
pop
andb
mov
dec
and
xchg
inc
call
in
pop
lea
push
call
enter
cmp
ss
pop
mov
sub
inc
ds
add
pusha
test
xor
cs
jb
inc
xchg
dec
push
ret
jbe
and
sbb
data16
jl
mov
pop
add
mov
pop
mov
xchg
and
iret
pop
call
pop
cmp
hlt
push
lret
ss
xor
ret
scas
out
out
jmp
ret
leave
sbb
aam
test
ss
lods
dec
ds
adc
subl
andl
pop
lock
enter
fwait
aam
lods
data16
in
mov
cmc
repz
mov
pop
pop
push
pusha
mov
scas
xchg
hlt
scas
push
aaa
xchg
rorb
nop
sub
pop
xor
jnp
dec
jmp
mov
dec
imul
cmp
xchg
jne
into
loope
inc
popa
ss
lock
cmp
cli
mov
add
ret
ss
bound
daa
loop
fstps
aad
neg
ds
mov
call
mov
and
cwtl
xchg
jmp
movl
or
or
push
shll
insl
mov
inc
ficoms
out
mov
mov
setno
mov
add
outsb
sub
lahf
dec
or
xchg
ds
push
adc
cmp
adc
cmp
pop
pop
inc
xchg
sub
xor
mov
sbb
es
insl
aas
jle
lds
mov
aaa
jge
cld
mov
or
xor
fwait
pop
cmp
pop
mov
outsl
mov
hlt
add
add
dec
cwtl
frstor
hlt
pop
loop
leave
mov
fs
es
scas
lret
ljmp
int
mov
pop
in
andb
scas
push
les
jno
es
scas
dec
inc
sbb
aam
or
push
mov
mov
orb
adc
inc
pop
repz
sbb
jecxz
pop
add
loopne
push
jbe
out
imul
jle
sbb
cmpsl
pop
push
lods
mov
sti
call
enter
dec
cmp
dec
jae
mov
lret
cwtl
mov
xchg
cmp
push
imul
adc
lret
stc
dec
fisubl
sbb
test
in
je
icebp
hlt
cmp
xor
rorl
push
popf
xor
mov
dec
aam
sbb
push
mov
test
xor
and
ret
sub
jbe
icebp
mov
lea
in
pop
std
sbbl
into
inc
clc
movsl
or
out
insb
and
dec
insl
jmp
jns
mov
mov
xor
or
jge
xor
imul
inc
xchg
sahf
mov
jns
pop
jg
sbb
pop
out
sbb
cmp
add
pushf
cs
fildl
jns
inc
mov
roll
fcmovnb
xchg
or
jo
in
ret
stos
hlt
adc
imul
lahf
dec
and
jp
test
jne
fildl
out
aam
add
mov
test
in
xor
sbb
sbb
sub
popf
movsb
and
cmp
stos
push
int3
cli
xor
in
sub
or
daa
ja
cld
and
lret
sub
xchg
xlat
xchg
xor
jno
sub
imul
pop
xchg
stc
sub
pop
lods
xor
cmc
pop
out
sbb
push
sbb
fisubs
ss
inc
rcl
and
cmp
pusha
popa
aam
fwait
out
jl
mov
push
push
int3
hlt
jl
jnp
dec
in
sar
idivl
lods
aas
mov
mov
shrl
aam
mov
dec
xchg
and
cmp
or
xor
mov
adcb
fidivrs
jg
xlat
andl
insb
rol
jp
nop
cmp
sbb
or
xlat
cmp
dec
lods
pop
sbbb
cmpsb
in
mov
scas
sub
xchg
das
shlb
xor
outsl
cld
repz
andb
push
negl
cmp
cmp
cmp
hlt
int3
or
addr16
cltd
ljmp
ret
jge
imul
jno
inc
mov
ret
dec
and
jb
out
adc
lods
mov
lock
push
inc
push
iret
pop
lret
xchg
xor
jnp
push
stos
xchg
mov
mov
leave
loopne
std
loopne
rcrb
jle
cmpsl
sbb
push
adc
pop
add
sarb
mov
mov
mov
in
mov
lods
fldl
roll
add
mov
mov
hlt
popa
xchg
loope
fdivr
jno
lcall
pop
mov
push
cmp
nop
sub
orl
arpl
enter
and
andb
mov
jp
orb
xchg
sub
xchg
imul
mov
mov
nop
adc
push
or
pushf
xchg
in
test
mov
mov
cmpsl
jg
xor
arpl
clc
aas
pusha
stos
sbb
fnsave
mov
das
std
sbb
fmuls
outsl
cli
rcrl
clc
inc
frstor
andl
ds
fisttpl
in
stos
aaa
pop
mov
ljmp
push
sub
fs
daa
stos
repz
mov
jl
mov
push
lret
pop
jbe
daa
add
dec
mov
adc
dec
or
cmp
jmp
sbb
stos
push
je
ja
jg
repz
or
dec
bound
lahf
in
cmc
dec
fidivrs
repnz
xchg
incl
sahf
cmp
cmp
mov
xchg
push
push
pop
sar
hlt
mov
xor
inc
stos
sti
cli
pusha
imul
mov
add
div
ljmp
loop
sbb
cmpsl
jne
cmp
sahf
fwait
sub
jg
fsubrp
iret
ljmp
mov
and
mov
sbb
xor
lret
repnz
inc
cmpsl
scas
ljmp
lret
jns
fimuls
push
ror
jmp
out
lcall
test
call
dec
fildll
addr16
inc
arpl
stos
mov
mov
dec
xor
mov
rcll
insb
loope
mov
or
cmpb
mov
fimuls
xchg
inc
xchg
orb
jo
ds
or
pop
ret
xor
shr
es
subb
push
lret
mov
pop
cmpb
push
das
mov
inc
push
das
loope
addb
outsb
xchg
cmp
sbb
and
sub
imul
sbb
jno,pt
test
stos
lods
pop
jns
hlt
gs
adc
add
and
cmpsb
mov
aad
push
ret
nop
mov
rcl
movaps
adc
popa
in
pop
adc
cli
enter
arpl
sti
imul
std
mov
push
outsl
xor
mov
int
xor
bound
push
outsl
es
sub
pop
jns
add
int
pop
xchg
je
ljmp
or
sbb
sbb
roll
test
sub
or
test
jae
mov
xchg
pop
pop
pop
inc
jbe
xor
test
js
xlat
inc
stos
sbb
out
insb
movsl
and
jae
mov
std
cmp
bnd
lahf
xor
sub
push
call
push
or
je
lods
int3
test
ljmp
test
sahf
adc
xor
enter
lods
cwtl
mov
adc
adc
and
in
icebp
stc
xchg
in
pop
xchg
cmp
cwtl
outsb
mull
xchg
inc
pop
or
mov
fmuls
shlb
pop
into
dec
cmc
mov
xor
ja
xor
rol
in
push
cmpsl
movsb
in
std
adc
xor
fldcw
call
das
loop
jns
aaa
lret
mov
pop
jle
sbb
dec
cmp
cmp
fildl
lret
lods
xchg
inc
mull
push
xchg
inc
inc
lods
clc
jno
xlat
popf
pop
fmul
leave
in
add
loop
nop
cmpsb
pop
orl
mov
mov
cmp
pushl
repz
mov
aas
aaa
shll
mov
jo
push
jl
test
jmp
pop
orb
sub
jecxz
mov
sub
mov
dec
lods
mov
call
sub
stos
dec
mulb
ret
cmp
jge
jg
mov
push
adc
les
inc
add
ret
mov
jmp
push
loop
cltd
jae
lret
cld
sahf
mov
jp
mov
lods
call
stos
test
call
subb
jl,pt
and
ret
or
mov
test
test
jle
lcall
or
push
cmp
mov
sub
xor
dec
mov
lret
mov
mov
adc
or
test
and
add
test
jecxz
jecxz
mov
adc
arpl
adc
sbb
fs
addl
nop
mov
sahf
lret
adc
mov
out
in
test
cmp
int
daa
cmp
cmpsb
mov
js
dec
ret
dec
jp
out
push
pop
mov
inc
in
lea
es
jle
sub
popa
cmp
jle
pop
mov
mov
out
rep
js
mov
jae
cmp
xchg
mov
out
push
xchg
adc
rcrl
jae
shl
rcrl
pop
fistpl
arpl
mov
dec
xor
sbb
sti
aad
cmpsl
jne
lock
lret
ss
out
push
or
js
jge
xor
dec
data16
jmp
add
outsb
mov
push
sub
repnz
xlat
xchg
xchg
imul
subb
dec
fildll
sarl
in
jne
nop
pop
jl
push
cmp
jo
jl
push
loopne
loope
aas
cmp
xchg
lahf
xchg
fisttpl
mov
call
xchg
rcr
mov
adc
lds
sbb
mov
inc
loopne
clc
jo
cs
stos
arpl
and
and
cwtl
mov
aaa
out
sub
push
cmc
cli
adc
mov
movsb
mov
and
out
das
cmp
enter
dec
rcll
mov
sub
adc
test
lea
ljmp
lahf
lret
daa
jo
pop
outsb
stos
fidivl
shll
xchg
mov
jmp
push
sahf
ss
aas
xchg
mov
jge
mov
popa
fistpl
inc
dec
and
repnz
mov
cmp
andb
dec
addl
or
loope
dec
enter
xchg
test
sti
mov
out
cmp
nop
xchg
fwait
jmp
loopne
jg
fucomp
rclb
xchg
mov
ret
jb
mov
dec
dec
push
or
fdivp
xchg
xchg
stc
test
jne
sbbb
sbb
out
push
sub
fmul
jne
in
xchg
test
pushf
or
popf
popa
xor
sub
or
out
popf
aam
stos
dec
mov
fs
scas
repnz
push
ss
mov
loope
fcmovbe
push
jle
out
decl
repnz
mov
mov
arpl
mov
movsb
sbb
sbb
sbb
push
fcompl
push
or
adc
mov
or
js
rcrl
jno
stos
mov
daa
in
inc
pop
cmc
dec
jae
out
insl
movsl
enter
mov
mov
cmp
sbb
enter
adc
es
gs
call
fwait
push
icebp
inc
adc
sbb
jne
arpl
add
enter
int
pop
dec
dec
cmp
xchg
push
in
push
cmpsl
xlat
repz
dec
jle
test
ret
adc
les
dec
repz
test
adc
dec
imul
aaa
push
and
lea
mov
or
cwtl
cmc
inc
jne
push
imul
jb
mov
or
mov
add
punpckhbw
push
test
movsl
pop
rcrl
adcb
push
xchg
sub
fwait
int3
jmp
and
repnz
push
jbe
lods
int3
ret
cmp
mov
mov
dec
lahf
xchg
jp
add
pop
daa
test
xchg
mul
mov
dec
test
cmp
sbb
fildll
xor
pop
jle
pop
inc
icebp
cmpsb
or
movsb
popf
push
dec
push
jns
scas
jae
jb
idivb
int3
mov
push
and
jnp
lods
or
icebp
sbb
xor
xchg
leave
push
dec
push
jl
arpl
mov
xchg
ret
jge
lret
pop
push
pop
shrl
xchg
ljmp
pushf
cwtl
repnz
cmc
sarl
sbb
loope
pop
and
jb
inc
cmc
repnz
dec
sbb
jp
sub
jns
scas
fwait
mulps
insl
fidivrl
aad
sub
mov
std
iret
scas
add
ret
inc
xor
dec
add
insb
mov
call
sbb
lret
lret
insl
hlt
out
jo
ja
jmp
test
xor
rcrb
mov
mov
out
std
jno
stc
outsl
mov
repnz
test
sbb
dec
fs
fstpl
cltd
add
ss
jge
dec
xor
cmpsb
imul
or
push
and
xchg
popf
mov
push
ja
ja
and
or
mov
and
jns
or
test
lret
into
cs
in
adcb
mov
pop
insl
inc
push
scas
aas
cmp
xchg
out
shll
add
pop
sub
xchg
lret
or
and
les
or
je
fstl
xchg
filds
orl
pop
inc
mov
push
rorb
leave
push
daa
cmp
movsl
cld
add
lock
push
out
lds
xchg
adc
cmp
das
add
sbb
test
out
sbb
test
stos
sbb
cmp
xor
cmp
xlat
addr16
mov
sbb
mov
shr
popa
mov
jle
out
xchg
xor
lcall
pop
push
mov
xchg
fldcw
sar
xlat
mov
or
scas
and
in
sub
jo
or
xor
sar
ds
sbb
shlb
add
xchg
test
xor
jge
inc
and
aas
js
pop
stos
sub
push
dec
mov
ja
negb
push
sub
test
test
pop
push
or
decl
mov
jl
jle
xchg
insl
into
test
icebp
rcrl
xchg
iret
cwtl
push
test
sbb
push
rorb
cmp
aam
rcrb
mov
and
nop
jmp
imul
faddp
sarl
lcall
lds
push
push
pushf
mov
xor
stc
mov
pop
cs
nop
rolb
cltd
fwait
dec
stc
int3
adc
pusha
mov
shrl
int3
loopne
inc
and
add
jo
xchg
and
inc
or
xor
out
cld
psrad
or
push
std
adcl
and
movsl
lods
faddl
jbe
std
imul
ja
dec
dec
jl
jae
xchg
test
sbb
sbb
loopne
push
mov
xor
mov
xchg
cmpsb
xchg
data16
jge
xchg
mov
xor
inc
cs
dec
sub
pushf
jne
loop
mov
iret
fnstcw
inc
subl
push
jp
push
int3
adc
pop
jb
push
and
js
xchg
jp
popf
xchg
sti
scas
roll
repnz
dec
into
leave
scas
lea
inc
add
aam
ja
sbb
leave
mov
adc
out
xchg
fdivrl
xor
xchg
imul
mov
scas
arpl
cwtl
jnp
push
out
sbb
cmp
mov
xorb
sbb
add
push
test
test
mov
inc
push
mov
cmpsb
sbb
imul
cmpsb
xchg
pop
rorb
ss
incb
outsb
sub
outsb
pop
lret
insb
ficompl
outsb
cmpsl
std
in
mov
imul
sub
cld
leave
mov
xlat
dec
pushf
xchg
mov
add
push
fidivl
addl
pop
sbb
mov
flds
ret
shll
mov
shll
push
sbb
xchg
cmovne
dec
fisubl
mov
and
ret
cld
cs
mov
jmp
xor
mov
lea
mov
push
dec
pop
xchg
sub
iret
and
and
testb
stos
fucom
xchg
pop
in
ret
lea
cmpb
sbb
mov
je
rclb
ds
fldl
push
pop
xchg
imull
shl
cltd
int3
jns
scas
arpl
inc
mov
pop
xchg
or
dec
pop
fwait
fs
push
or
js
aaa
std
loopne
sarb
scas
ret
xor
repnz
mov
mov
jle
add
ja
jne
push
mov
adc
fadd
adcl
aas
je
cmp
mov
js
test
mov
jl
imul
sub
xor
out
jbe
jp
addl
push
dec
int3
cltd
aas
xchg
sahf
sub
dec
sahf
ds
inc
movsl
xchg
inc
aas
xor
pop
mov
ljmp
scas
pusha
inc
mov
add
mov
and
nop
jmp
jo
pop
jae
lret
mov
icebp
add
pushf
imul
test
mov
mov
cmp
jge
push
mov
pop
std
imul
fmulp
insb
jl
xchg
std
xchg
jle
mov
mov
jnp
cltd
mov
mov
pop
xchg
mov
and
mov
push
cmpb
pusha
mov
cld
xchg
xor
sbb
mov
cmpsb
fisubs
je
lock
dec
jecxz
js
xchg
sahf
pushf
mov
jecxz
aad
sbb
or
not
insb
icebp
mov
xchg
scas
jg
jb
inc
or
xlat
cmp
sbb
jle
sbb
adc
mulb
jmp
imul
nop
sub
aad
mov
lcall
fwait
jb
lock
jnp
adc
xorl
outsl
out
cmp
push
dec
jno
mov
jecxz
stos
cld
cmpsb
add
lock
mov
test
and
push
jle
xchg
rcrb
test
xor
push
push
lahf
pusha
pushf
testl
inc
jle
mov
sub
mov
pop
adc
stos
mov
cmpsb
mov
mov
outsb
dec
cld
push
or
pop
sub
mov
cmp
ja
add
psllq
in
inc
mov
push
pop
push
push
ret
add
pop
xor
push
add
imul
clc
lock
jbe
shl
jae
fs
arpl
xorb
and
daa
mov
lcall
dec
jg
inc
outsb
jle
push
sti
xchg
pusha
in
mov
mov
stos
jns
lock
cmpb
sub
outsl
rcrb
sub
cmp
push
xor
push
add
fimull
jl
lods
sub
add
lock
inc
cmp
cltd
dec
loopne
pop
gs
int
shll
imul
stos
imul
jl
loop
std
mov
loop
mov
xor
insl
adc
mov
or
pop
mov
shl
rcll
icebp
cmp
jg
sub
cmpsb
or
adc
leave
in
aaa
pop
inc
fisubrl
jle
mov
push
or
xchg
imull
pop
add
pop
mov
repnz
in
cld
mov
mov
lret
iret
or
sbb
repz
movsb
mov
aad
sti
mov
lcall
cld
fdivs
xor
jno
clc
cmpsl
scas
into
dec
incb
jmp
xor
sbb
cwtl
jae
adc
sub
hlt
popf
stc
test
lds
jmp
push
jmp
jno
push
arpl
mov
sbb
jb
xchg
aaa
sbb
pop
dec
adc
mov
lahf
movsl
and
ds
clc
pop
rorl
mov
jle
shrl
test
repnz
and
pop
insb
int3
ficomps
bound
mov
push
push
and
mov
mov
xorl
sti
adc
idivl
iret
out
outsl
in
das
inc
sahf
pop
scas
fs
xor
or
repz
jp
add
mov
xchg
mov
dec
loope
adc
mov
leave
and
or
daa
pop
xchg
fsubrp
inc
fwait
arpl
das
xor
push
sbb
fs
mov
sbb
adc
mov
pusha
rcl
jnp
mov
xor
push
insb
int
xlat
scas
in
pop
shrl
cmp
mov
xchg
xchg
and
cmpsl
jnp
faddp
inc
jne
lret
pop
gs
add
cltd
in
cld
lock
das
sbb
pop
ud2
adc
xchg
pushf
outsb
inc
inc
lods
sbb
fwait
lret
int3
pop
lea
or
ja
xor
mov
mov
push
lea
adc
push
and
sub
int
xchg
hlt
mov
addr16
testl
addr16
cmp
leave
inc
jle
push
fdivrl
inc
dec
xlat
cmp
jo
mov
cwtl
add
cmp
xor
enter
push
push
mov
cmp
inc
popa
les
mov
mov
jb
or
mov
pop
cmp
rcrb
hlt
loope
imul
outsb
cmp
ds
jnp
xchg
inc
cmc
scas
shll
icebp
sbb
shlb
inc
dec
mov
mov
subb
xchg
popf
cmpsl
les
jnp
lea
das
les
popf
lahf
push
pop
arpl
insl
mov
test
outsb
ret
push
xor
pop
mov
push
es
dec
pop
adc
or
je
push
icebp
test
pop
lcall
jno
push
rcll
mov
test
push
cld
jno
mov
xchg
pop
inc
cmp
push
cmp
jae
jg
mov
push
mov
inc
push
cmpsb
push
cmpsb
jl
lds
push
add
lods
xchg
xchg
xchg
shlb
stc
and
imul
jmp
push
mov
ret
rclb
mov
dec
sub
jnp
adc
cld
test
push
jns
jmp
xchg
in
push
mov
mov
imul
pop
inc
fistps
shlb
aam
mov
sub
scas
jge
andl
shrb
push
sub
out
ljmp
stos
jno
push
ljmp
dec
cmp
pop
xchg
jne
xchg
dec
jp
pop
pusha
push
faddl
jl
pushf
rcll
mov
ljmp
adc
sarb
outsl
lock
jns
and
outsl
popf
xlat
leave
out
leave
cmpsb
jno
pop
add
push
mov
xchg
rcr
push
lods
adc
jb
in
jns
jge
xchg
xor
xor
jg
fs
jbe
inc
and
mov
mov
int
jno
mov
xchg
mov
inc
arpl
push
adc
push
std
pop
xchg
mov
add
cmp
mov
lock
movsb
sbb
add
sbb
push
adc
dec
dec
stos
rol
mov
sbb
jmp
push
cli
out
insl
add
imul
inc
outsl
cmp
fs
and
aam
xor
adc
aad
xor
inc
sbb
xor
leave
mov
add
out
ret
push
mov
push
and
fs
mov
out
dec
test
push
sarl
mov
sub
xchg
mov
das
push
jp
push
lret
dec
je
rcrl
out
sbb
shll
xchg
lret
pusha
daa
mov
out
sub
xor
xor
jmp
lret
cmpl
fisttpl
mov
mov
add
lahf
jnp
and
jg
iret
in
lret
mov
sahf
pop
pop
pushl
repnz
daa
pop
adc
aam
xchg
int
sub
dec
loopne
test
pop
push
in
data16
lea
sbb
adc
cmp
or
insb
mov
movsl
xchg
and
mov
cmpsb
push
and
xor
mov
hlt
imul
sbb
or
js
jge
and
shrl
sti
or
popa
mov
cld
jmp
decl
aad
pop
les
loope
mov
test
sbb
and
dec
arpl
pushf
add
aam
lods
movsb
popa
mov
sbb
rcrb
jae
imul
push
in
sub
or
cltd
repz
dec
mov
add
aad
shll
repz
mov
iret
call
stos
sbb
rcll
dec
sub
jle
fwait
pushf
inc
inc
out
decl
push
gs
jle
imul
mov
or
mov
int3
in
dec
lret
mov
insb
inc
js
sarl
test
jo
cli
sahf
dec
xor
add
inc
jge
jmp
lret
stos
inc
push
jmp
and
out
into
test
push
jmp
jle
mov
and
cmp
adc
dec
jae
inc
cltd
xlat
bound
add
test
adc
aad
jb
and
xchg
dec
push
push
jb
addr16
test
cmc
push
xchg
dec
mov
xchg
and
cmc
lret
stc
mov
test
push
loope
mov
outsl
jb
add
stos
in
cmovp
and
add
xor
fs
xor
int3
mov
mov
dec
jo
jo
scas
aas
loope
mov
or
lock
icebp
cmp
gs
push
lcall
hlt
and
pusha
mov
ret
add
sub
shl
or
and
mov
push
rolb
sahf
add
jnp
outsl
cmp
sub
push
lret
mov
pop
in
cmc
pop
test
xchg
data16
int
call
lahf
inc
repnz
pop
stos
cmpsl
out
jl
testb
push
cltd
sub
mov
shr
mov
mov
or
sbb
clc
fiaddl
mov
gs
cs
int3
add
test
jb
xchg
cmp
push
and
decl
data16
adc
xor
bound
or
cmp
clc
or
jmp
imul
inc
or
sub
dec
sub
outsb
mov
popf
mov
negb
xchg
mov
push
cmpsl
popf
inc
push
and
lds
inc
jnp
ds
push
addr16
pop
mov
fs
cmp
stc
pop
je
push
jne
loope
adc
mov
testb
call
icebp
jo
jg
movsb
xor
js
cmp
xor
mov
add
pushf
loope
dec
jne
and
cmp
popf
in
sub
xchg
divl
mov
popf
repz
ja
push
test
arpl
xor
dec
adc
inc
insb
sub
fwait
mov
insl
mov
in
jb
inc
pop
test
fwait
cmp
fstps
sbb
xlat
push
add
sub
cmc
fadds
fisttpl
xchg
sahf
xchg
ficompl
dec
rol
mov
inc
sub
xchg
outsl
pushl
pusha
sub
sbb
cld
xor
add
push
mov
test
into
pop
lahf
test
nop
pop
cltd
sub
add
xchg
leave
push
cmc
push
inc
and
and
mov
pusha
sahf
cmp
es
mov
in
or
popa
test
sub
dec
stc
into
pop
xchg
sbb
and
leave
adc
mov
mov
arpl
pop
fisubrl
sbb
test
adc
add
pop
and
push
in
iret
xchg
add
mov
pushf
add
fisubl
int
mov
in
lahf
cmp
jecxz
cmp
std
add
dec
pop
call
xchg
add
test
and
lock
adc
xchg
mov
test
sbb
cmp
in
sbb
mov
std
inc
in
push
pop
xchg
sbb
int3
shrl
inc
mov
cmp
xor
jnp
mov
adc
sti
loopne
jno
mov
xor
stc
dec
shll
jp
xchg
sbb
mov
mov
mov
inc
or
pop
shl
sub
mov
xor
mov
scas
push
lahf
shl
add
dec
jp
dec
pop
int3
into
fs
or
in
xor
rorb
sub
cmp
fcoml
bound
roll
jne
jp
inc
xchg
in
jp
daa
inc
mov
mov
or
mov
pop
push
push
add
decb
inc
mov
xchg
fs
lcall
xchg
inc
popf
les
cltd
insl
xchg
out
sbbb
mov
dec
stos
scas
out
ja
xor
cmpsl
or
push
add
push
dec
scas
scas
in
call
or
adc
mov
mov
insb
adc
cltd
xor
out
ds
stc
xchg
mov
clc
mov
fwait
xchg
out
mov
enter
jecxz
push
loop
push
es
in
inc
add
fstps
outsl
inc
out
and
xchg
adcb
sub
cmp
movsb
stos
push
pop
dec
mov
mov
push
imul
and
les
std
xchg
sub
push
cltd
mov
sub
cmp
outsb
mov
scas
dec
ss
bnd
sub
outsl
dec
leave
add
pop
mov
js
sub
mov
notb
jae
mov
pop
repnz
pop
in
test
repz
orb
mov
adcl
scas
dec
and
and
daa
aad
and
rorb
mov
test
je
add
or
nop
movsb
or
dec
jp
pop
ret
testl
lret
out
mov
add
inc
cmpsl
js
mov
into
daa
arpl
mov
and
pop
mov
in
lcall
cmpsl
push
push
imul
cmp
mov
add
sbb
insb
sbb
daa
mov
adc
lret
jnp
xor
and
dec
in
cmp
and
fnstsw
cmp
sbb
jmp
add
sub
push
out
clc
jle
outsb
roll
cwtl
mov
xchg
repnz
test
hlt
xor
jb
lds
rclb
pop
mov
inc
xchg
imul
outsl
mov
fisubrl
loop
nop
sbb
call
sub
inc
add
fs
ror
sbb
stc
fisttps
jnp
dec
stos
xlat
jmp
mov
adc
insb
cmp
xor
cltd
ret
mov
mov
push
jns
pop
das
lret
fwait
in
fidivrs
xchg
xchg
std
push
mov
push
jb
das
int
les
lods
xor
inc
pop
lods
inc
cld
ret
lods
in
jge
adc
jo
push
rolb
das
pop
cmc
mov
mov
add
or
pop
dec
inc
cmpsb
xchg
ljmp
jl
cmp
out
je
outsl
adc
sbb
lret
jp
mov
cmovo
fcoms
or
xchg
jb
jnp
jl
xlat
jae
cmp
xor
xor
lds
xchg
data16
lods
pop
xchg
adcl
js
jbe
push
cmp
jmp
xchg
fwait
sbb
and
incb
mov
test
fisubrl
push
pusha
dec
mov
mov
loopne
nop
cld
push
mov
in
jbe
sbb
jb
push
es
nop
sub
mov
roll
sub
sar
push
pop
sbb
fsubr
movsl
test
add
rclb
addr16
cli
cmpsb
outsb
mov
outsl
jb
rcrl
loop
idivb
bound
mov
xchg
mov
adc
jnp
ja
ds
pop
push
sbb
push
xor
inc
push
sbb
fsub
pop
dec
add
dec
inc
sbb
in
xchg
jp
out
xor
popf
test
mov
dec
lret
rolb
or
dec
out
pop
int3
xchg
mov
ljmp
xor
inc
popa
nop
pop
aad
aad
and
fisubrl
cld
xchg
gs
je
les
lods
ret
inc
fsqrt
sbb
xor
xchg
xor
inc
cmp
inc
xchg
inc
mov
loope
mov
and
inc
pop
popa
stos
cli
leave
mov
out
cmp
int3
mov
add
ret
ja
adc
xlat
mov
xor
mov
mov
stos
in
adc
fsts
rclb
lods
cmp
int
adc
scas
xchg
lea
pop
dec
es
xor
out
mov
pop
ret
add
movsb
rcrl
dec
lcall
cld
mov
aas
cmpsl
lea
xor
xchg
jns
data16
fcoml
push
es
sahf
or
push
cwtl
jne
fstl
pusha
pop
and
leave
or
orl
out
loop
loope
sub
popa
ficoml
sub
jp
imul
sbb
int3
arpl
xor
insl
dec
push
scas
jecxz
cwtl
xor
dec
pusha
idivb
fcom
cmpsb
mov
fildl
pop
jecxz
cmp
mov
repnz
xlat
and
xchg
dec
xchg
xor
mov
lock
test
add
hlt
loope
lds
push
jb
outsb
mov
fsubr
or
loopne
sub
imul
fcoms
mov
push
hlt
shll
and
sub
test
flds
adc
xchg
xchg
push
push
ret
jecxz
inc
pushf
cmp
fisubl
push
sbb
jne
stos
lods
scas
inc
sbb
fisttpl
repnz
xor
arpl
sbb
add
stos
jno
xchg
pop
jbe
maxps
jge
push
mov
ja
int
into
es
mov
or
loop
adc
inc
push
sbb
mov
movsl
xchg
in
enter
scas
push
lock
jp
imul
inc
sub
sbb
dec
out
ljmp
mov
cltd
fs
shl
xchg
cld
jns
ja
fildl
stos
mov
or
jnp
loop
frndint
clc
lods
sarl
mov
arpl
inc
cmp
cmp
fisttps
add
and
ds
mov
das
or
jp
adc
xchg
mov
xchg
or
sbb
adc
insl
out
cmpsb
jl
cmp
and
adc
imul
sbb
stc
popa
jno
mov
inc
or
mov
sarb
movl
insl
test
jns
aam
mov
sub
iret
sub
nop
aaa
das
fidivrs
xchg
pop
dec
js
iret
jle
loopne
pushf
mov
cli
fnstenv
hlt
sahf
adc
pop
daa
xor
xor
pop
inc
pop
adc
jnp
cmp
lods
sub
pop
repz
rorb
fnstsw
jb
mov
iret
xchg
dec
cmpsl
sub
gs
xchg
out
gs
shr
sar
test
pop
mov
inc
xchg
outsb
mov
cmpsl
pop
mov
lahf
pop
enter
add
inc
fwait
mov
shrb
ljmp
cmpsl
call
pop
loopne
shrl
shlb
or
cwtl
out
push
adc
jbe
inc
sahf
jecxz
pop
inc
movsb
insl
pop
lods
sarb
rolb
xchg
mov
xchg
enter
mov
dec
mov
sar
push
ja
std
xchg
push
add
xchg
clc
mov
push
pop
bound
popf
ror
xor
jp
add
inc
or
lret
out
negl
popa
jb
xchg
daa
cmpsl
clc
test
es
rorb
jp
mov
mov
lret
sbbb
imul
mov
popf
or
cwtl
cs
mov
sub
and
addr16
lock
cmp
sub
and
and
push
adc
jnp
mov
mov
sbb
call
icebp
or
jno
adc
pop
adc
jnp
or
push
dec
and
movsl
dec
mov
push
mov
clc
out
dec
sarb
loopne
cltd
pusha
ror
clc
test
int3
mov
pop
pop
adc
pushf
scas
hlt
mov
out
lret
outsl
movsb
mov
lsl
ljmp
xor
mov
dec
mov
sbb
movsb
test
mov
jecxz
jge
fistps
pop
icebp
lret
scas
pop
rolb
mov
push
jg
jecxz
rcll
or
pop
sub
fimuls
shll
sub
aaa
icebp
shl
je
dec
xor
in
rclb
adc
shr
inc
dec
dec
or
out
jge
inc
out
mov
mov
in
jb
mov
cmp
out
andl
pushf
mov
push
sub
adc
jae
inc
dec
aam
dec
movsb
mov
pop
xor
aas
pushf
std
movsb
cmpsl
add
xchg
mov
jnp
je
adc
jg
sbb
fdivl
mov
push
scas
dec
adc
mov
sub
jbe
int
dec
inc
inc
subl
arpl
movsl
xchg
mov
lahf
fsubrl
jnp
mov
add
fstl
jg
daa
add
je
push
or
imul
and
lret
pop
mov
sbb
loop
cmp
xor
adc
fwait
or
out
jecxz
int
pushf
mov
push
sarb
push
int3
lock
dec
in
rcrb
or
lahf
ss
pushf
lock
or
mov
xor
enter
or
xor
js
xor
test
icebp
repnz
or
jg
iret
mov
hlt
or
pusha
cmp
lcall
pop
jno
mov
jnp
mov
mov
push
call
dec
xor
mov
ds
pop
mov
sub
pop
clc
push
mov
lock
jecxz
or
fildl
shll
lret
in
test
xor
adc
int3
daa
mov
xor
dec
das
push
addb
push
sti
jmp
pushf
mov
and
mov
jno
cmp
rcrb
not
mov
jb
pop
pusha
adc
rcr
cmp
sbb
and
lods
push
mov
adc
sub
fstp
out
sbb
cmpsb
insl
test
out
adc
push
imul
xchg
cld
inc
pusha
movsl
out
sahf
out
insl
cmpsb
int
xchg
mov
scas
scas
rcll
jae
xchg
push
loope
xor
cmp
inc
push
mov
cmpsl
adcb
lock
xorb
je
mov
xor
lea
dec
data16
mov
clc
add
xchg
movsb
repnz
rol
adc
pop
mov
pop
jb
jnp
mov
adc
decb
rcl
sbb
lret
push
iret
call
ss
xchg
rorb
adc
outsb
repnz
fiaddl
aam
pop
push
adc
inc
mov
test
mov
repz
xor
lret
cmc
push
sbb
or
imul
cli
dec
add
in
dec
jmp
std
fnstsw
sub
lods
mov
and
clc
pop
popa
mov
maskmovq
idivl
movsl
in
adc
cmp
sub
pushf
pshufw
out
sub
dec
ds
jnp
jbe
push
cld
cmpb
dec
loope
add
insl
dec
add
mov
add
xchg
scas
jle
mov
roll
push
and
cmp
mov
insw
cmp
adc
out
pop
cmp
jp
dec
cmp
and
mov
or
aad
leave
orb
xchg
jecxz
jmp
fcoml
xlat
inc
push
sub
xchg
ret
testl
jmp
sti
mov
and
push
jo
in
scas
mov
outsl
mov
fisubrs
xchg
jno
cmp
xor
das
into
hlt
arpl
xchg
sbb
cmp
subl
lods
adc
hlt
fs
scas
mov
lcall
outsb
lods
xchg
idivl
adc
addr16
test
ret
jo
mov
std
std
inc
pop
scas
xchg
pop
adc
pushf
data16
inc
lcall
test
shll
adc
pop
cmpsb
mov
stos
fdivs
pop
in
xor
fmull
adc
repz
adc
mov
fwait
insl
cmp
xor
sub
pop
fwait
popa
and
lods
imul
jbe
mov
in
inc
dec
scas
mov
push
notl
aam
cmp
xchg
cmp
divb
cmp
ret
in
into
push
jle
pop
fsubrl
jb
xchg
sub
bound
dec
jno
cmc
push
jnp
test
testb
push
jmp
loope
pop
das
aas
icebp
icebp
mov
addr16
inc
imulb
aam
out
cmc
popf
fnstcw
and
cmc
popf
orl
outsb
stc
mov
inc
sbb
xchg
lea
dec
imul
push
dec
out
lret
rcl
xor
mov
sub
xchg
sahf
fwait
loop
or
jmp
mov
enter
jecxz
je
and
mov
nop
bound
push
inc
and
and
test
aas
xchg
aam
lods
popf
xchg
pop
inc
jge
xchg
inc
push
mov
cmp
lock
add
loopne
testl
sub
bound
or
mov
adc
push
and
fcompl
sbbl
out
ja
and
lods
lret
mov
lods
xlat
fldcw
aam
int3
sar
jno
inc
push
dec
adc
into
and
adc
push
xorl
pop
out
lods
inc
daa
xor
testb
icebp
mov
xchg
imul
js
ret
repz
push
jp
fld
sarl
js
stos
mov
leave
int
repz
pop
aam
imul
mov
adc
xchg
push
fisttpll
add
in
in
mov
xor
push
jge
stos
mov
js
push
and
ja
jecxz
dec
jb
stos
fstl
add
iret
cmp
fs
push
or
fs
sbb
xor
push
mov
aaa
fcoms
jb
ljmp
cs
fists
push
fimuls
cmpl
rorl
sbb
push
aas
clc
sub
lods
pop
leave
mov
jp
aad
cmp
loopne
jne
lret
cmp
pop
imul
ljmp
es
and
xchg
int3
mov
push
movsb
icebp
loope
push
mov
inc
lock
xlat
in
or
cmp
std
hlt
rorb
xor
push
or
mov
inc
movsl
dec
cmp
adc
cmp
out
sbb
jne
inc
mov
pushf
mov
xchg
fs
sbb
popa
mov
shl
rclb
shll
mov
add
xor
jns
inc
decl
icebp
jle
mov
scas
jge
pop
mov
sti
mov
fisubrs
cli
push
and
je
lds
pop
gs
imul
pop
aam
xor
cmp
pop
or
push
fldl
jo
pop
subb
or
mov
xlat
loope
sub
add
xor
sub
dec
clc
test
dec
sub
rorb
inc
mov
cmp
sahf
or
sub
pop
mov
xor
or
mov
data16
ljmp
add
pop
mov
cwtl
outsl
pop
jecxz
lahf
shlb
and
aam
mov
sub
xchg
aaa
ds
lret
pusha
adc
push
fistl
and
int3
xchg
dec
stos
popf
fidivl
dec
fdiv
xor
sbb
jbe
mov
je
scas
rol
jg
ja
movsb
cmc
and
jo
jp
xchg
imul
or
gs
pop
lock
rcrl
push
loope
dec
sbb
inc
mov
pop
sbb
and
call
shrl
cltd
or
pop
orl
jo
inc
push
cmp
and
jae
jl
mov
sub
fstpt
pop
popf
mov
cli
push
xchg
or
pop
repnz
mov
rcrl
push
iret
inc
les
and
cmp
je
jmp
or
sub
bound
sbb
inc
roll
dec
enter
and
in
xor
test
inc
mov
xchg
cs
stos
nop
mov
in
pop
mov
sub
lea
xor
and
cmp
push
arpl
outsb
movsb
dec
daa
dec
xchg
inc
inc
gs
imul
dec
in
inc
stc
adc
mov
cmp
mov
jb
mov
inc
test
movsl
in
xor
inc
in
std
xor
inc
stos
sbb
inc
imul
push
scas
add
fdivl
js
sti
in
lods
lea
pop
movsb
mov
cli
mov
sub
sub
call
mov
dec
mov
inc
add
cmpsl
cmp
jnp
shrl
lret
and
inc
test
inc
jne
repz
mov
fisubs
enter
pop
cmpsb
sets
adc
xor
dec
fcompl
push
fidivrl
fdivrp
push
add
outsl
fimull
cmp
scas
inc
pusha
outsb
filds
sbb
sub
inc
push
xchg
jl
mov
xchg
push
sbb
adc
roll
xchg
lret
add
sub
mull
inc
test
test
repz
lods
dec
push
out
rorb
sahf
in
js
jg
xor
das
aas
test
ds
dec
lahf
mov
and
out
sub
in
es
lods
aam
out
in
pop
popa
xchg
out
and
bound
push
in
enter
pop
cwtl
xchg
jo
je
clc
add
fcomps
adcl
jg
sbb
dec
adc
pushf
cmp
addr16
cmp
push
cmp
xchg
bnd
xor
cli
push
xor
mov
in
mov
and
sbb
in
test
imul
and
sbb
repnz
ds
mov
leave
jo
or
dec
fcomi
mov
jo
jo
mov
fs
mov
scas
jae
mov
inc
mov
shl
in
cmp
fs
addr16
mov
pop
xor
gs
mulb
cld
push
add
jge,pt
sahf
lcall
insl
mov
mov
inc
int
adc
sarb
sub
xor
clc
outsl
sbb
scas
cmpsl
adc
sahf
pop
pop
mov
and
iret
outsb
sti
out
fdivl
jbe
cld
dec
ds
push
outsb
outsb
sbb
inc
aaa
les
out
xorb
pop
jle
xchg
or
sbb
sub
lods
pop
in
dec
adc
ds
mov
ret
ljmp
or
repnz
jnp
dec
and
xlat
xchg
fiadds
imul
mov
add
cld
lret
orl
cltd
pop
push
adc
clc
push
add
int3
fdivs
data16
leave
scas
adc
bnd
xlat
and
sub
shll
stos
push
xor
repz
jmp
sub
mov
fs
addl
in
cmpsl
dec
cmp
call
push
or
jl
cmp
arpl
mov
inc
sbbb
push
popf
inc
popf
mov
clc
jne
inc
dec
shlb
dec
inc
jmp
add
sub
ds
lret
popf
lret
int
sti
loope
aas
xor
fisttpl
mov
mov
push
mov
in
notl
inc
cwtl
daa
dec
lds
dec
repnz
fdiv
es
dec
xchg
sbb
pop
pop
lds
add
fcomip
idivl
or
cmp
aad
cltd
dec
in
pop
je
jecxz
mov
ret
jo
mul
aaa
sbb
push
scas
push
mov
add
inc
cmpsb
push
or
sbb
repnz
setle
fistl
xchg
and
ja
enter
bnd
sbb
es
dec
or
arpl
sub
in
mov
insl
not
add
js
stc
shrl
loop
repnz
xlat
test
dec
cmp
xchg
bound
inc
push
push
pop
je
test
pop
sub
cmp
fs
cmpsl
repz
cmp
cmpsb
repnz
cld
out
xchg
lds
pop
jnp
js
ds
xor
enter
out
test
ds
insb
fistl
sbb
test
divl
mov
lcall
mov
lret
aas
pop
out
pop
inc
jge
mov
cmp
sub
loope
or
mov
xchg
sti
jg
mov
or
xchg
jle
outsb
out
mov
push
push
into
sbb
cmp
mov
leave
xor
out
pop
shr
pop
adc
jns
add
lcall
jnp
in
add
das
out
adc
adc
sub
repnz
pop
xor
jb
jmp
mov
adc
xor
mov
or
sbb
imul
sub
add
sbb
repnz
or
ljmp
add
mov
cmp
addb
dec
sbb
mov
aaa
sbb
cmp
dec
frstor
out
inc
xchg
in
adc
pop
sub
in
sbb
test
out
rcrb
out
subl
adc
dec
fwait
sbb
pop
mov
shll
cmc
push
push
push
xor
mov
push
sbb
mov
pop
in
incb
mov
xchg
xchg
inc
sbbl
push
mov
dec
jb
adc
add
je
jmp
mov
lss
cli
mov
xor
xor
inc
push
pop
pop
insl
movsl
shll
mov
sbb
and
adc
fsubl
lock
xchg
iret
fnstcw
xor
rclb
sub
fcompl
jmp
out
test
cltd
jo
xor
popf
sub
js
es
int3
cwtl
push
pop
xchg
add
popf
mov
dec
xor
sbbb
mov
and
lcall
jecxz
imul
pop
lods
jmp
fmull
cmpl
shr
mov
xchg
or
push
bound
xchg
xchg
xchg
dec
push
mov
aad
xchg
mov
fmull
popa
or
sub
and
je
test
es
insb
xchg
icebp
dec
loope
stos
inc
mov
add
lock
popf
out
idivl
xor
call
fists
jge
outsb
add
xchg
xor
sub
test
rolb
dec
rolb
pause
lret
mov
data16
pop
loopne
lahf
addr16
test
cmp
sub
push
leave
gs
pop
push
add
hlt
cmp
insl
mov
pusha
sbb
inc
add
cmp
insb
mov
adc
pop
push
jne
jae
gs
andl
cmpsb
or
push
pop
iret
fistpll
cwtl
inc
add
jno
fbstp
test
js
xchg
bound
mov
mov
mov
rolb
dec
repnz
mov
jg
fiadds
in
addl
loopne
mov
pop
cmp
mov
sbb
mov
imul
loope
nop
test
and
je
loopne
or
xchg
jp
mov
sub
fwait
add
and
clc
sbb
inc
test
jp
jo
push
mov
out
mov
int
mov
cmp
xor
cmp
imul
inc
call
or
decl
fbstp
dec
xor
cmp
lock
add
cmp
jg
mov
mov
test
insb
jno
mov
es
aad
push
in
adc
or
xor
je
les
test
pop
call
daa
test
lods
cmp
push
pop
jo
lret
mov
cs
inc
repnz
ret
pop
int
lcall
inc
push
shr
ret
xchg
push
dec
popf
dec
jg
pop
mov
fistps
mov
lods
shll
fldl2t
mov
arpl
pop
xor
gs
pop
sbb
mov
mov
dec
lgs
sbb
cmc
into
lahf
xor
out
insb
fidivrs
adc
pop
ss
push
sbb
rorb
push
mov
test
imul
pop
push
xchg
dec
pop
inc
jno
mov
arpl
out
mov
int3
mov
inc
push
scas
shrl
sbb
cmp
data16
ret
lds
lds
repz
les
push
in
xchg
dec
or
imul
scas
inc
mov
pop
movsb
mov
rcrl
xor
out
in
js
dec
xchg
js
pop
gs
decl
xor
xchg
call
push
pop
out
pop
mov
cltd
sbb
jae
in
sarb
xor
in
in
clc
push
js
and
or
push
inc
pusha
out
jl
push
addb
call
int3
add
negb
cltd
xchg
sti
add
fs
ja
mov
xor
sub
jg
push
mov
mov
lods
test
outsl
arpl
push
test
clc
lret
and
sbb
sub
xor
clc
out
loop
cmp
xor
add
or
adc
loope
pop
idivb
jno
or
out
push
fnstcw
pop
out
cmp
scas
popf
pop
lock
into
inc
xor
sahf
in
js
add
stos
dec
lods
icebp
push
mov
cmpsl
ret
sub
lea
adc
pop
repnz
mov
adc
xor
out
xchg
sub
sahf
mov
and
sbb
loop
xor
jecxz
not
int3
ss
sbb
push
out
inc
and
mov
rol
cmp
lods
inc
adc
dec
es
icebp
mov
iret
mov
dec
push
mov
inc
or
push
fistpll
push
xchg
stc
scas
cld
adc
inc
cmc
mov
in
in
cmp
xor
pop
xchg
test
rolb
jp
mov
and
outsl
push
pop
jbe
xchg
mov
xor
leave
cltd
std
cmpsl
rcr
insb
imul
into
xor
jecxz
lea
cmc
and
cli
gs
inc
fistpll
xorb
fcmovnb
push
cli
imul
mov
sub
push
push
cmc
mov
pusha
sti
fmul
outsb
hlt
outsb
xchg
cmp
mov
sub
int
rolb
cmp
arpl
cmpsl
sbb
xor
pushf
adc
mov
dec
leave
inc
xchg
lods
fsub
testl
outsl
lds
gs
adcl
gs
cli
and
mov
sbb
sub
xchg
dec
sbb
lea
pop
and
in
adc
sbb
mov
mov
test
jb
dec
inc
and
and
xchg
test
test
dec
test
psrad
sub
jno
jnp
test
cmp
and
jnp
enter
push
jns
cmp
add
inc
sbb
cltd
fcomps
cwtl
mov
fcmovnb
and
sbb
add
jl
nop
pushf
js
fistpll
xor
mov
ds
loope
xchg
test
jl
mov
add
sub
inc
fbld
sub
mov
ljmp
add
inc
lods
mov
push
lds
out
inc
cli
mov
xchg
mul
lret
mov
sbb
push
stos
in
adc
mov
mov
jbe
cld
lods
repz
jle
xchg
dec
fmul
push
test
lret
xchg
xchg
mov
outsb
and
xchg
int3
out
mov
lds
cwtl
sub
iret
jns
dec
ss
mov
loope
js
cltd
int
stos
push
cmpsb
mov
stc
push
sti
or
sub
je
cmp
mov
pop
ret
add
outsb
mov
lea
cmpl
jne
or
sub
mov
pop
pop
scas
in
out
out
icebp
ja
inc
loope
jge
ss
mov
jg
cwtl
decb
div
nop
ret
and
sub
mov
adc
mov
js
jno
je
cltd
add
out
mov
js
jbe
or
jne
test
lret
xchg
stos
dec
or
cli
add
mov
pop
mov
cmpsb
cmp
push
mov
ljmp
jae
mov
push
lret
mov
sbb
dec
scas
ljmp
pop
mov
pop
xchg
mov
mov
icebp
dec
push
or
bound
scas
pop
mov
sub
ret
dec
loope
sbb
adc
jnp
ja
shlb
jg
adc
ljmp
das
out
add
scas
cmp
dec
dec
inc
imul
xchg
xor
or
xchg
inc
mov
lahf
cmp
lahf
sub
aad
jmp
and
jmp
nop
mov
hlt
jg
jge
int
sbb
jp
jp
dec
stos
mov
push
lea
stos
rcrb
cmc
xchg
lock
pop
leave
xchg
movsl
jecxz
push
ret
push
adc
mov
sbb
out
test
test
sub
les
roll
and
xchg
jo
mov
add
push
loopne
imul
gs
add
into
popa
test
pop
shl
mov
lods
mov
xchg
mull
ja
adc
das
cmp
ret
push
testb
cmp
mov
test
dec
rorl
xchg
sbb
fdivs
cltd
arpl
cmpsl
mov
jg
nop
lods
or
outsb
cs
sub
divb
ficoml
push
fistps
enter
fstl
jo
jecxz
push
dec
imul
mov
pop
std
jg
adc
inc
dec
sbb
imul
jecxz
cld
inc
pop
jo
inc
sahf
shrb
dec
sub
loope
mov
out
inc
cmpsl
jl
in
popf
adc
insb
addr16
ret
mov
mov
lock
stos
call
xor
ja
je
ret
lea
leave
pop
push
cmpsl
cmp
mov
sbb
cli
mov
cmp
ss
ja
push
rclb
mov
nop
push
inc
out
js
in
bound
ret
sbb
cmp
inc
push
and
cld
jge
jnp
jno
dec
xor
test
and
insl
adc
icebp
sub
mov
pop
inc
rorl
out
or
ja
scas
jle
sbb
es
aam
lock
addr16
adc
insb
je
pop
out
dec
test
or
inc
jle
xor
int
mov
ds
cmpsb
jp
xchg
dec
jb
lret
pop
mov
call
lea
sbb
gs
stos
pop
add
test
or
push
sub
out
stos
or
mov
ja
mov
movsb
pop
inc
cmp
fildl
xor
into
pop
rcll
insb
pop
jae
jns
popf
bound
or
arpl
mov
into
mov
icebp
andb
jne
pushw
xorb
mov
mov
mov
test
out
add
inc
pop
cmpsb
mov
mov
es
add
mov
andl
sbb
repnz
push
mov
out
add
das
outsb
push
jae
call
rclb
and
in
push
mov
daa
test
sbb
fdivrl
aas
sbb
mov
push
lret
inc
or
xchg
adc
push
push
out
test
mov
subb
stos
fidivrs
xorl
scas
adc
xchg
imul
cmp
xlat
mov
stos
cmp
rol
and
sti
ss
cmp
dec
pop
ror
and
mov
bound
js
cli
jg
int3
int3
popf
mov
cltd
arpl
cld
mul
mov
lock
xchg
mulb
loope
rorl
inc
jnp
les
in
dec
mov
or
test
outsl
icebp
or
in
sub
leave
sub
sub
stos
mov
pop
repz
jg
jnp
insb
lret
ret
xor
mov
mov
inc
outsl
mov
mov
sub
enter
out
lods
cld
and
jne
lcall
xor
rolb
ret
xor
nop
mov
je
jp
enter
outsl
daa
dec
cli
push
mov
jbe
stos
fs
jp
mull
ds
push
add
scas
mov
aam
jnp
icebp
fisttpl
and
rcr
add
out
fadds
pop
and
ffreep
leave
clc
pop
inc
pop
in
stc
out
sahf
dec
jo
jl
add
pop
divb
and
inc
jp
insl
mov
lods
or
scas
push
adc
pop
scas
fdivs
in
popa
mov
movsl
test
loopne
cmp
push
fidivs
je
cmpsl
and
sarl
lahf
stc
cmp
push
dec
adc
mov
dec
push
dec
mov
ficoms
dec
push
push
xchg
adc
loop
xor
cmp
xor
mov
sub
mov
sbb
loop
loopne
cmp
xor
imul
sub
es
cmpsb
orb
mov
lcall
arpl
mov
scas
cli
je
adcb
xchg
into
adc
inc
mov
mov
mov
cmpsb
pop
test
sahf
jle
jg
add
or
push
pop
mov
dec
popa
jg
and
or
xchg
mov
stos
lret
lods
aas
mov
dec
and
mov
icebp
mov
xchg
xor
and
dec
rcl
sub
cmp
ljmp
sbb
adc
mov
pushf
mov
dec
jecxz
pop
icebp
testb
mov
aaa
data16
or
push
in
dec
mov
enter
add
cmc
mov
mov
hlt
aaa
add
lahf
dec
and
jl
jg
push
repnz
rcrb
add
lods
jmp
imul
xchg
mov
leave
movb
adc
xlat
jp
in
add
sub
aam
xchg
in
clc
clc
inc
jae
sbb
mov
jne
jmp
cmp
ss
in
cmp
dec
das
addl
inc
cli
inc
inc
or
or
push
sub
test
xchg
dec
mov
xchg
repz
adc
lahf
shll
lods
jl
add
sub
sub
pop
fdivs
jno
fstpl
pop
xchg
scas
xchg
cli
cmc
and
jecxz
dec
call
imul
xchg
dec
mov
aad
pop
loop
aas
loopne
lea
movsl
pop
or
jne
mov
aam
loope
out
sti
movsb
jo
jle
sbb
cmp
jg
mov
hlt
jns
inc
xchg
push
sbb
enter
into
loop
pop
imul
mov
imul
in
mov
imul
aas
test
jmp
push
cltd
pop
inc
adc
adc
sbb
jb
jmp
je
aas
dec
cmp
test
cmpsb
bnd
mov
jb
push
stc
mov
in
xor
jns
lea
pop
push
imul
push
inc
push
add
and
jns
addr16
add
scas
xchg
jne
sbb
pop
mov
mov
dec
bound
ret
cmc
daa
imul
xor
jne
out
pop
cmp
dec
lock
outsl
jp
xor
add
jbe
mov
mov
lods
mov
or
rolb
cmp
dec
sub
push
repz
xchg
aas
and
cmpsl
mov
jmp
into
setle
jle
daa
cmpsb
sub
xchg
inc
mov
sub
aad
sub
sbb
or
nop
repnz
add
fbld
les
icebp
mov
cmp
jns
into
inc
jns
sbb
adc
cmp
stos
inc
out
xchg
cmp
lods
aaa
sub
jae
sub
leave
add
call
adc
dec
shl
ja
jge
adc
jo
adc
fnstsw
loope
pusha
mov
push
mov
call
inc
jmp
xchg
xor
mov
pop
jl
and
xchg
pop
in
addb
xchg
sbb
mov
mov
cmp
test
mov
push
push
lcall
and
inc
or
outsb
push
add
sbb
hlt
xchg
mov
push
ljmp
sbb
add
pop
cmp
jge
xor
xchg
popa
push
mov
imul
mov
mov
pop
pop
and
inc
push
fs
sbb
inc
xor
out
out
sub
cwtl
mov
hlt
xor
outsl
jnp
js
sbb
cli
rorb
sub
add
repz
aad
xor
fstpl
and
andl
aas
xor
inc
mov
xchg
lret
subb
outsb
icebp
fmull
lret
pop
imul
leave
les
sti
fs
ja
push
pop
cld
cltd
aas
hlt
mulb
or
mov
pop
cmp
cmp
push
mov
mov
andl
ja
and
test
and
out
test
or
out
pop
mov
outsb
xlat
push
xorl
fsubs
xchg
or
xchg
cld
outsl
cwtl
aad
int3
sub
sbb
test
inc
aad
sti
outsl
xchg
mov
xor
icebp
leave
xchg
lret
or
mov
pop
cmp
mov
push
mov
or
pop
pop
insb
es
into
ja
cmp
rorb
call
cmpsb
jl
loope
xchg
pusha
jl
js
mov
mov
lret
pop
mov
adc
fldl
call
ja
xchg
inc
cmp
push
jmp
nop
push
loope
xor
cltd
pop
aam
xor
js
inc
pop
aas
xchg
ret
loop
cmc
jne
fnsave
pop
and
insl
push
xor
out
stos
stos
lods
cmp
xor
rclb
idivb
andl
repnz
or
daa
out
pop
pop
mov
mov
sbb
push
clc
jge
xchg
ja
push
sub
adc
flds
in
or
repz
sarb
xor
cmp
inc
push
lret
xor
mov
push
ljmp
xor
sbb
adc
lock
arpl
lret
mov
inc
push
addr16
jae
dec
cmp
cmp
push
pushf
lds
cltd
in
inc
add
pop
popf
loopne
dec
leave
jb
cld
pushf
stos
push
mov
push
sbbb
in
add
adc
aaa
lods
lret
gs
mov
ljmp
cmpsb
sbb
fidivl
jo
pop
fsubrl
mov
je
fidivl
xchg
iret
in
sbb
shlb
lds
jl
icebp
pop
xchg
popa
add
cmp
leave
icebp
adc
pop
repz
inc
cli
add
mov
xchg
xchg
fs
test
inc
jb
add
mov
nop
mov
jmp
add
dec
push
jne
in
movsl
imul
dec
out
std
movsb
pop
xchg
push
lret
mov
mov
mov
pop
into
imul
es
lcall
jb
aaa
mov
fidivrs
push
adc
lahf
js
or
mov
pushl
inc
or
mov
sub
ljmp
xchg
lcall
push
pop
test
lcall
adc
mov
dec
adc
out
icebp
and
pop
sub
and
xchg
push
xchg
mov
mov
push
mov
mov
fimull
adc
xchg
ds
or
out
addb
fstl
sub
push
or
and
addr16
mov
mov
mov
ret
test
inc
lods
ss
fwait
in
adc
sbbb
lret
adcl
mov
xchg
jne
sarl
add
shl
dec
fcmovu
in
sub
xor
les
cmp
cs
in
je
cmpsb
je
jmp
arpl
sub
xorl
mov
pushf
add
push
xchg
pushf
in
pop
gs
repnz
clc
int3
insl
and
test
dec
mov
aas
loope
xchg
push
loop
push
or
jmp
xor
notb
sbb
cmp
jmp
inc
hlt
inc
les
mov
lds
xor
adc
mov
mov
leave
push
inc
addr16
lcall
aam
mov
fisubrs
into
lds
in
fisubrs
add
dec
lea
dec
daa
and
and
das
cmp
and
dec
inc
jb
mov
xchg
xorb
repz
mov
mov
jne
cmc
dec
inc
mov
ljmp
int3
mov
ret
or
div
and
xorl
cmp
pop
imul
add
pusha
bound
mov
fnstsw
stc
xchg
sti
mov
repnz
sbb
or
push
pop
pop
sub
fidivs
das
add
mov
test
jmp
and
or
pop
nop
shll
lcall
lret
test
orb
pop
pop
xlat
sub
xlat
inc
idivb
movsl
in
sub
jae
aad
sahf
inc
jge
sbb
sub
ja
inc
ja
test
in
xchg
pop
jnp
outsb
fadds
aas
and
psubusw
bound
or
pop
mov
sbb
push
outsb
stos
dec
push
jbe
arpl
fwait
btc
xor
and
sbb
sbbl
push
rcll
pop
icebp
pop
dec
and
js
fwait
mov
push
or
fstpl
jns
shrb
adc
push
fnsave
sbb
mov
imul
mov
dec
enter
dec
xor
add
ljmp
inc
cmp
lea
fisttpll
pop
pop
add
mov
sbb
call
pop
lea
stc
ret
pop
mov
mov
xchg
push
adc
test
notb
nop
out
jge
add
pusha
cwtl
mov
xor
jecxz
out
call
outsl
pop
ret
sbb
sahf
nop
pop
xchg
pop
popl
mov
mov
xchg
push
aaa
lock
push
call
out
sbb
lods
out
ret
sti
xor
push
shrl
pop
xchg
stc
sbb
mov
in
jp
and
shlb
xor
or
mov
mov
adc
sti
push
sbbl
leave
fisttpll
lods
imulb
lock
mov
lock
mov
push
xor
arpl
push
inc
andb
mov
adc
icebp
jg
in
leave
pop
pusha
scas
adc
std
xor
mov
adc
push
data16
inc
movb
xchg
js
das
fs
xor
mov
xchg
dec
push
repz
push
sbb
or
xchg
incb
sub
dec
pop
rcrl
mov
outsb
mov
add
stc
in
xchg
jp
or
push
adc
mov
mov
les
enter
push
gs
in
divl
push
scas
test
pop
pop
pop
jge
xor
pop
int
jnp
lahf
cmpsl
cwtl
and
pop
test
popf
movsl
loopne
mov
push
add
and
add
cmp
or
push
imulb
mov
xor
lock
or
test
test
jbe
addl
das
stc
inc
mov
sti
fists
leave
xchg
jl
sbb
pushw
xchg
adc
ret
xchg
dec
mov
pop
popf
jmp
sbb
sub
or
in
cmp
adc
pop
and
sahf
imul
dec
fs
sbb
push
lods
inc
jmp
adc
xor
cmc
dec
jbe
mov
and
fimull
ss
sbb
sbb
lock
iret
es
pop
imul
mov
fcom
or
mov
sbb
mov
add
add
pop
pop
test
aaa
mov
mov
xchg
sub
mov
and
lods
pop
test
fsub
imul
dec
dec
repnz
pop
ret
jno
pushf
jnp
in
push
sahf
movsbl
inc
push
addb
ds
add
call
pushf
outsl
xor
repz
push
ret
cmpb
aam
adc
clc
adcb
fdivl
pop
push
add
mov
sbbl
mov
xchg
push
sub
push
mov
popf
inc
push
dec
cmp
fs
dec
call
aas
push
or
dec
pusha
pop
loope
movsl
mov
adc
add
ljmp
in
ret
cmp
adc
push
adc
gs
leave
jmp
ret
mov
stos
sub
cmp
in
in
mov
cmc
aad
mov
sahf
jns
fcmovnu
mov
xchg
jnp
push
jae
push
sbb
fisttpl
mov
xchg
iret
insb
in
stos
out
and
aaa
and
jno
mov
ror
pop
fistpl
push
call
sbb
ret
add
mov
jmp
ds
pop
icebp
icebp
dec
add
xchg
fisubrl
lods
pop
mov
pop
adc
xchg
iret
sbb
or
mov
sbb
jno
xor
inc
and
or
dec
jle
dec
push
mov
cltd
mov
cmp
sbb
ficoms
pushf
jg
cmp
push
inc
inc
lret
add
out
aas
xor
jp
ds
rclb
mov
mov
push
js
or
aas
test
mov
stos
push
mov
lods
jl
in
shll
xchg
cwtl
loop
lahf
sub
outsb
cmp
lods
pop
cwtl
dec
pop
jns
pop
call
pushf
fs
jb
xchg
adc
loope
sarb
xor
aas
mov
cld
cs
inc
jg
push
addr16
sub
scas
mov
fs
or
mov
mov
cmpsl
mov
stc
push
mov
jle
jnp
cmpl
in
jb
lods
sub
and
dec
jns
dec
push
xchg
mov
lcall
loopne
xor
loopne
ficomps
faddp
js
add
je
dec
sbb
mov
adc
xchg
inc
pop
cmp
sti
ljmp
rcl
lds
push
cmpsl
xchg
fcmovnbe
jp
insb
imul
movsl
int3
mov
jo
test
sub
cs
ljmp
cmc
test
in
push
inc
aad
call
xchg
pop
stc
dec
test
bound
outsl
negl
sub
fiaddl
sub
mov
lds
push
or
sub
dec
mov
mov
mov
add
add
or
sbb
in
lcall
aad
mov
pop
scas
push
ret
sbb
jae
inc
pop
repz
pop
dec
mov
jp
cmc
das
lods
mov
mov
sbb
jmp
pop
xor
xchg
nop
imul
mov
lods
or
or
roll
popf
dec
jns
cmp
lret
sub
ja
jbe
xor
xor
push
dec
icebp
push
or
lods
inc
or
hlt
mov
in
ja
push
aaa
xchg
insb
outsl
mov
dec
push
and
call
dec
test
std
cmp
jp
xchg
mov
addr16
pop
loop
int3
jge
jle
adc
pushf
roll
mov
sbb
lock
adc
dec
mov
jb
fstpt
mul
dec
or
cli
or
mov
add
loopne
inc
mov
xlat
aaa
in
arpl
xchg
sub
mov
in
rorl
lea
sbb
int
shrl
jb
stos
dec
inc
fiadds
push
movsl
movsb
outsl
xchg
push
sbb
mov
mull
pop
test
jo
dec
jnp
cld
inc
test
xor
sbb
orb
es
ja
fisubl
pop
clc
lret
sbb
sub
int
fsubp
rorl
mov
add
inc
inc
movsb
pushf
xchg
cs
mov
pop
cmp
lock
add
nop
je
fstpt
fwait
ljmp
mov
in
inc
cld
lds
test
icebp
inc
je
mov
mov
mov
mov
xor
out
sbb
cmpsl
test
fdivs
push
lea
imul
arpl
loopne
movsl
repnz
test
loopne
or
or
dec
outsl
push
jne
fwait
lods
out
icebp
mov
push
jno
psubusb
call
dec
cmpsl
jge
pop
cs
lods
test
fisttps
loop
and
es
xchg
jge
pushf
mov
inc
sub
arpl
pop
xor
add
jae
add
not
shl
pop
sub
sahf
into
push
lret
or
cmp
ret
data16
xor
xor
es
mov
cmpsb
aas
roll
pop
inc
cmp
mov
das
mov
jne
loopne,pt
cwtl
push
sti
xor
or
cmpsl
ficomps
sbb
sub
add
leave
push
daa
and
sub
push
add
adc
leave
add
fistpl
int
mov
inc
jecxz
adc
out
pushf
roll
fldenv
mov
xchg
frstor
fcoms
mov
xchg
inc
fucomp
xor
sbb
sbb
sahf
mov
ja
scas
outsb
int
shll
cli
ss
dec
pop
adc
sub
into
repz
das
cli
in
xor
mov
sbb
int3
or
mov
ss
test
sahf
cmpsl
cld
mov
mov
and
bound
sbb
icebp
mov
jae
sub
sub
and
or
aad
je
ret
das
mov
imul
inc
or
mov
je
mov
pushf
jns
nop
xchg
push
mov
and
pop
pop
push
xchg
mov
int
outsb
insl
in
pop
push
mov
mov
lods
outsb
mov
cltd
sahf
shrl
popf
into
mov
testb
imul
inc
jle
xchg
mov
fwait
addr16
in
mov
inc
add
jle
divb
fiaddl
bound
lret
into
inc
cs
mov
mov
lods
scas
ja
xchg
cli
pushf
adc
mov
mov
xchg
push
ret
es
cltd
fldcw
push
call
mov
inc
outsl
aad
and
es
inc
jle
xor
or
addr16
jne
jne
xchg
mov
imul
adc
mov
cltd
ss
out
insl
lds
mov
insl
ss
movsl
push
scas
push
cmp
insb
into
aam
inc
mov
pop
xchg
or
outsb
dec
adc
inc
mov
jecxz
adc
inc
add
inc
insb
push
je
pop
icebp
mov
xchg
rorl
std
sbb
in
sbb
pop
mov
dec
push
sbb
addr16
push
vmovdqu
pop
xor
inc
hlt
dec
insl
add
sub
jae
sbbb
test
jnp
jbe
cmp
ja
fmull
sub
mov
mov
pop
dec
mov
mov
inc
in
push
push
adc
out
xor
clc
sub
mov
jle
sub
cmp
leave
push
cmp
popw
push
pop
xor
pop
lahf
cmp
or
adc
rcll
jno
xchg
pop
mov
jo
fs
std
mov
mov
jecxz
or
jae
pusha
addl
cmpsb
sahf
int3
jns
fs
mov
lahf
push
xchg
lods
jl
sub
or
mov
sbb
mov
data16
and
inc
xchg
cwtl
dec
pushl
lcall
je
ret
xor
xor
xor
xchg
dec
int3
add
cmpsl
add
jae
mov
cmp
mov
pop
fwait
les
nop
add
jecxz
xor
cld
int
xchg
pop
dec
dec
sbb
jnp
inc
shl
ja
xorb
lea
push
or
jb
dec
ret
je
xchg
or
cmp
sbb
mov
test
xchg
mov
sahf
add
shr
mov
sbb
or
data16
and
fadds
sti
std
rol
xor
jmp
xchg
fmull
cmc
in
adc
add
sbb
call
inc
jecxz
movsl
xor
or
outsl
aad
sub
push
aam
out
into
imull
xchg
pop
outsb
push
lds
ljmp
push
ret
adc
iret
lahf
inc
jb
lahf
es
int
fidivrl
mov
pop
paddsw
and
push
rclb
lea
mov
dec
movsb
test
mov
enter
loop
jo
repz
push
mov
xchg
jnp
mov
adc
test
pusha
pop
xchg
test
dec
add
cs
mov
lods
lahf
lock
mov
fiaddl
int
enter
mov
mov
loop
pop
xchg
inc
lcall
cmp
enter
mov
outsb
mov
imul
push
aad
and
leave
daa
and
cmp
add
jno
insb
jbe
std
out
imul
je
push
push
mov
pusha
xorb
adc
cwtl
fildll
es
push
sub
test
loope
or
lahf
dec
dec
xchg
int
imul
xor
mov
push
push
das
cltd
lcall
arpl
xchg
inc
mov
sub
mov
sbb
xor
sbb
jg
das
mov
in
cmpsb
add
scas
outsb
fdivr
lds
jno
daa
out
stos
adc
jo
xor
lea
mov
cmp
dec
in
add
ret
xlat
mov
push
adc
rorl
std
idivl
mov
ljmp
lret
cmp
inc
xor
xchg
testl
inc
xor
add
scas
and
adc
stc
fcomps
mov
cli
sti
cltd
cltd
and
lcall
das
in
jae
movsl
jge
les
mov
push
xchg
push
add
stos
lret
nop
iret
lock
sbb
in
inc
lea
push
jo
push
and
dec
lahf
sbb
dec
mov
sbb
scas
test
sub
xchg
mov
lcall
mov
insl
jno
sbb
scas
cmpsb
sahf
test
cwtl
sbb
push
sbb
jge
mov
neg
loop,pt
sahf
out
loope
stos
mov
adc
push
mov
ds
inc
test
jecxz
mov
and
xchg
push
das
add
inc
in
out
sbb
cmp
and
mov
in
jns
jle
scas
cltd
lret
popf
sbb
push
fimull
and
and
mov
push
dec
lahf
fisubs
testl
cwtl
xlat
push
je
bound
ficomps
push
bound
filds
ja
xchg
pusha
pop
fldcw
ficomps
stc
insl
push
push
push
push
inc
loope
sbb
sarl
das
cmp
pop
ret
ljmp
aas
mov
push
sahf
push
stos
dec
outsb
arpl
fwait
lret
push
inc
jmp
sbb
jne
mov
push
mov
mov
loopne
mov
insb
jne
jge
cmc
push
lcall
fistpl
or
pop
out
imul
psrlw
inc
mov
sub
test
pop
push
mov
iret
js
fwait
dec
cld
sub
mov
jle
cmp
jnp
xor
jns
cltd
jae
sbb
sar
xchg
test
mov
sub
cs
sbb
jp
push
cmp
out
xchg
jno
pusha
cmp
mov
imulb
into
loop
push
cmp
lcall
dec
xchg
dec
mov
sahf
divl
mov
out
stos
xor
mov
ret
out
mov
pop
lret
xchg
lret
jge
dec
repz
inc
stc
cli
xor
mov
mov
mov
dec
lret
sbb
dec
inc
cld
pop
mov
pop
or
push
lods
roll
and
mov
in
out
sti
sub
lcall
dec
popf
jns
add
mov
jle
mov
lcall
xlat
or
orb
sti
push
sarl
adc
and
mov
out
add
sbb
test
das
divb
sbb
adc
fsubp
loop
lret
aad
fwait
in
gs
pop
lods
sub
int
jmp
loope
mov
xor
xchg
fwait
mov
push
xor
adc
lret
subl
loope
out
jo
mov
inc
ljmp
jnp
pop
dec
or
fidivrl
ret
lods
mov
and
leave
jmp
mov
ficompl
ds
push
add
test
xor
mov
fbstp
sbb
sub
push
jg
in
movsl
lahf
cld
int3
movsb
pop
nop
daa
daa
sub
sti
xchg
andb
adc
cmpb
mov
xchg
ljmp
jbe
or
aaa
inc
mov
fldl
inc
ljmp
pop
pop
es
out
fnstenv
lock
mov
xor
ljmp
lods
mov
into
jns
int3
call
dec
sbb
sbb
mov
xor
imul
sete
mov
adc
aas
cwtl
call
pop
ret
nop
sbb
lret
hlt
mov
fildl
sub
pop
les
dec
in
pop
pop
in
push
xor
xor
lock
pop
cmp
cmp
sbb
cmp
adc
test
cmpsb
pop
xor
fisubrs
movsl
xchg
push
xchg
fwait
jbe
sahf
lret
mov
push
rcr
clc
cmpsb
xlat
mov
dec
jne
dec
xchg
mov
aaa
dec
scas
fcoml
sub
mov
xor
daa
dec
mov
sub
sbb
ret
mov
sub
in
movl
xchg
dec
stos
mov
and
adc
out
dec
mov
fdivrs
ret
orl
fbstp
pop
fisttpl
outsl
out
and
popf
or
pcmpgtb
xchg
sbb
outsb
jo
push
sub
mov
pusha
push
cwtl
xchg
shrb
mov
mov
dec
movsb
pusha
inc
xchg
ror
cwtl
lcall
add
jg
outsb
jae
lcall
std
or
add
jne
int3
jl
cmp
mov
and
jmp
inc
push
or
mov
notl
arpl
frstor
mov
dec
add
daa
in
stos
into
cld
aam
ljmp
scas
push
scas
addr16
test
mov
jnp
rcrb
cs
ror
aas
repz
loop
jmp
inc
int
push
daa
dec
out
movl
rorl
fiadds
aam
jbe
xchg
inc
call
movsb
test
out
data16
mov
lock
xor
xor
les
mov
js
fsts
adc
cld
fidivrl
jne
lcall
mov
mov
mov
sbb
rcr
jl
mov
push
jp
lahf
inc
cmp
imul
imul
xchg
and
adc
sub
loopne
xor
xor
pop
out
xor
jge
nop
es
fstpl
sub
xor
and
inc
fisttpll
mov
mov
pushf
adcl
push
mov
ret
ds
xor
sbb
push
clc
jge
icebp
mov
aaa
sbb
sbb
inc
add
sti
sub
cmp
in
xor
fsubrs
inc
scas
adc
nop
push
ret
jle
scas
push
jmp
mov
mov
in
inc
jp
cmp
jno
inc
test
mov
aam
inc
jmp
xor
inc
jno
mov
cld
icebp
cmpsl
jb
in
pop
or
jg
cli
jmp
inc
lss
leave
cmp
xlat
sbb
pusha
mov
inc
xchg
enter
fists
pop
and
xor
mov
xchg
in
popf
adc
sar
divb
sbbb
push
xchg
xlat
pop
es
mov
mov
fcmovu
das
inc
jnp
ds
mov
and
std
loope
inc
inc
lds
sub
sbb
movsb
push
cmp
sub
movsb
aas
je
sub
lds
fadds
fists
insb
sbbb
les
inc
scas
lahf
cmp
adc
pop
int3
dec
sbb
negl
insl
mov
sbb
jmp
popf
fisubl
icebp
ret
in
test
iret
movsl
mov
sbb
jp
jae
lea
movsb
out
outsl
cmp
fdivl
pop
inc
addl
adc
in
hlt
mov
popf
sbb
cs
sbb
or
sub
xchg
and
das
jl
pop
lahf
ret
lds
mov
inc
jge
and
xchg
inc
insl
loope
rclb
jg
arpl
imull
xchg
push
orb
pop
pop
mov
lret
cld
jae
rorb
daa
pop
sbb
lahf
pop
xchg
dec
sbb
or
sub
insb
xor
into
lods
stc
add
lea
scas
lret
sub
popa
int3
int3
iret
mov
ja
call
push
roll
aam
shr
outsl
mov
aas
cmp
nop
out
jl
mov
pop
inc
rol
leave
cmp
fdiv
mov
push
mov
fmulp
and
dec
incb
mov
mov
lea
lods
jb
popf
int3
push
adc
xchg
lcall
nop
in
jle
jb
push
mov
outsl
pop
loope
mov
subb
push
sbb
adc
scas
mov
inc
int3
scas
mov
sub
rcl
sbb
dec
jne
int3
outsl
aad
shlb
out
dec
push
and
add
or
push
ljmp
test
emms
xor
and
or
add
fnstcw
cmc
jl
rcrb
dec
add
ret
mov
out
cmp
dec
lods
popf
shrl
adc
push
mov
int3
sbb
mov
lods
loope
iret
adc
test
sbb
orb
idivl
adc
fsubr
xchg
or
enter
data16
clc
add
mov
mov
inc
push
cmc
mov
addr16
dec
mov
test
sbb
imulb
ror
xchg
in
test
inc
sbb
cmp
xchg
pop
emms
cmc
pusha
movsb
popf
lock
insb
sbb
or
insl
add
into
pusha
imul
push
xchg
cmc
insl
xchg
out
mov
popf
jle
pop
xor
inc
jl
xchg
lods
stc
fs
inc
and
je
iret
adc
js
xchg
jo
and
in
out
movsl
int
dec
cmp
cwtl
xor
push
insb
inc
add
popf
rcrb
xchg
es
sub
jg
mov
cmc
orl
sahf
and
adc
mov
inc
jne
cmp
std
or
mov
stos
call
in
pop
inc
into
or
es
jno
jg
repnz
push
xlat
push
add
ljmp
sub
orb
in
cmp
es
or
outsl
inc
fldenv
xor
cmpsb
loope
cmp
mov
pop
sbb
mov
fistpl
push
lret
mov
test
popa
dec
lods
es
xchg
dec
or
mov
setg
xchg
lea
cmp
addr16
in
dec
or
mov
bnd
add
mov
mov
sbb
std
mov
mov
jl
inc
fisubs
lret
inc
fcoms
jnp
fs
inc
mov
loop
loope
divb
cmpsl
adc
xchg
adc
push
popf
mov
pop
dec
movsl
scas
fisubs
fistl
outsl
mov
out
mov
daa
aad
daa
subl
cmp
add
lock
loope
xor
or
sti
fisttps
push
imul
jae
in
cmp
xchg
lcall
inc
push
inc
idivb
enter
adc
and
insb
sbb
jg
cwtl
push
aam
loop
rcll
cs
cmp
xchg
jae
sbb
ret
mov
popl
clc
fisttpl
pop
xchg
mov
mov
mov
aad
imul
imul
xchg
out
ret
cmp
movsl
test
outsl
and
shlb
dec
sub
mov
dec
pop
add
data16
push
mov
in
test
out
dec
popf
cmp
mov
aas
jnp
xor
jmp
aas
out
das
imul
imul
es
mov
mov
adc
jge
push
imul
insb
cmpsl
int3
stc
mov
jno
popf
xchg
push
clc
sahf
call
adc
mov
mov
mov
jge
mov
bound
pop
push
mov
jge
pop
call
xchg
les
mov
adc
call
cld
xor
xor
push
dec
sbb
jnp
cmp
ja
lock
cltd
stos
adc
lcall
add
mov
adc
dec
mov
daa
jne
mov
je
lods
push
dec
mov
out
fisubl
adc
mov
out
scas
enter
lret
les
cmpsb
rcrl
loope
cwtl
mov
rorb
daa
pop
popf
sub
outsb
fdivr
adc
and
adc
mov
cli
sbb
xor
lods
out
in
out
scas
jb
add
cwtl
vmwrite
jno
test
inc
out
mov
pushf
mov
jae
in
push
fidivl
js
push
push
inc
sbb
mov
sbb
jg
mov
loop
cmp
loop
addb
cld
or
test
cwtl
cmpsl
cmpsb
cmpsl
sbb
movsl
mov
mov
sub
dec
pop
xor
lahf
pop
xchg
xchg
jbe
hlt
pop
outsb
cmpb
fmull
movsb
pop
add
je
fcmovnb
xchg
jae
or
gs
xchg
xorl
scas
sub
cmp
lret
mov
inc
xor
shlb
dec
jne
add
add
xchg
dec
sbb
fcompl
mov
int3
outsl
outsl
int3
ja
aas
fildl
xor
popf
iret
fwait
mov
psrlq
push
cmpsl
lods
inc
ss
fisubrs
popf
mov
dec
jne
add
cli
add
pop
in
fisubl
decb
and
sub
adc
dec
loope
jb
dec
dec
fisubrl
inc
loope
pop
sbb
add
test
add
push
ds
leave
push
pop
inc
sub
jg
sub
pop
cmp
pop
push
dec
mov
lret
repz
pop
mov
jns
les
addr16
loopne
pop
sarb
pop
sbb
fistpl
sbb
aas
aaa
lahf
cltd
stos
sbb
adc
sub
cmp
int
jnp
jg
sahf
cmp
pop
jecxz
mov
mov
pop
dec
adc
xor
lcall
enter
test
dec
test
pop
mov
fcoms
xor
pop
pextrw
mov
outsb
jnp,pn
mov
loopne
outsl
and
cli
icebp
test
pop
outsb
xor
sbb
mov
cmc
mov
mov
adcb
sbb
pop
cmp
leave
sub
add
push
cmpsb
sub
jnp
mov
xchg
jns
push
cld
cltd
pusha
out
pop
mov
sbbl
and
rcl
cs
dec
mov
mov
jo
dec
push
mov
stos
jae
je
pusha
enter
lds
jle
lcall
dec
insl
les
lock
mov
sahf
cltd
cwtl
cli
lret
push
shl
mov
test
shrb
cmpsb
les
and
lret
enter
popa
out
mov
push
cs
shll
cli
mov
ljmp
push
adc
pop
daa
mov
or
lock
dec
xchg
or
lcall
push
sbb
inc
add
mov
outsl
call
dec
inc
mov
jp
sub
inc
or
incl
push
sbb
leave
push
mov
add
or
jns
orl
outsl
and
inc
fcoml
mov
faddp
adc
mov
and
push
test
out
insb
ds
outsl
sub
mov
mov
out
pop
aam
lods
mov
mov
mov
or
mov
adcb
sbb
mov
mov
scas
adc
std
mov
mov
loopne
popf
mov
sub
test
insb
cmp
push
push
cwtl
sub
jne
pushf
in
cld
incb
pop
lcall
cli
arpl
add
aam
rcrl
sub
daa
fsubrl
inc
xor
pop
call
mov
adc
xchg
gs
addr16
cs
pushf
lock
sub
mov
in
pop
fnstcw
fisubrs
mov
cs
sub
jge
in
jge
push
scas
push
jp
aad
incl
ds
pop
xchg
cmp
adc
and
out
mov
lds
fildll
movsb
es
sti
in
mov
jne
pop
mov
es
xchg
stos
test
ja
sbb
cmc
add
ss
xchg
repz
add
out
stos
xor
jl
leave
sub
xor
ljmp
mov
mov
inc
xchg
dec
xchg
mov
and
push
ret
mov
mov
xor
xchg
dec
xchg
adc
pop
adc
jmp
aas
lcall
ljmp
or
shlb
push
push
add
data16
scas
sbb
mov
add
jne
xchg
mov
fisubs
ret
lea
out
fbstp
nop
and
pop
sbb
push
adc
das
push
adc
sub
jp
cli
jb
out
cmp
gs
adc
ret
mov
fdivl
mov
repnz
mov
mov
insb
pop
mov
sbb
lret
and
test
xchg
loope
popf
mov
sar
cwtl
imul
dec
ret
test
in
movl
inc
mov
in
ret
inc
adc
mov
cli
jp
test
push
rcl
xor
ror
push
and
mov
or
push
pop
jmp
lret
push
cmp
xchg
dec
lds
add
cmp
sbb
mov
cwtl
addr16
addr16
push
cmpsl
pop
mov
lea
bound
shll
gs
es
mov
ret
int
outsb
adc
ds
sbb
pop
ja
movsl
push
in
xchg
cmp
stos
out
test
and
dec
xchg
div
clc
inc
cmpsb
mov
movsl
ja
jg
int3
pop
pop
sbb
aas
roll
and
out
jns
outsb
hlt
push
jecxz
jl
fadds
and
lock
pop
cli
push
rcrb
xor
and
in
adc
int3
out
fsubrs
cmpb
adc
mov
stos
aas
ret
ds
lret
int3
xchg
fwait
outsb
stc
jecxz
pop
arpl
in
pop
dec
fwait
mov
pop
add
movsb
int3
mov
push
rcrl
xchg
push
pop
inc
movsb
and
fcmovu
fimull
cld
sbb
arpl
dec
addb
pop
cmc
cmp
push
or
sbb
aad
in
push
out
in
movsb
lcall
fwait
xor
and
enter
adc
add
pushf
jo
leave
call
sub
idiv
imul
roll
pusha
inc
inc
mov
xlat
mov
xchg
outsb
outsl
or
sbb
in
mov
pop
jno
sub
pop
test
jl
into
loope
popa
push
sbb
and
insl
int3
xor
ss
int3
pop
cmp
or
dec
fwait
pop
add
lock
dec
pop
pop
fldt
ret
add
pop
stc
and
rcr
test
pop
mov
pusha
sub
nop
rclb
gs
rolb
std
xor
xchg
dec
mov
sar
push
out
pop
pop
sub
jecxz
pop
lcall
mov
jecxz
addr16
add
fildll
jbe
xchg
filds
cmpsl
cmpb
push
pusha
and
push
and
pop
jb
inc
insl
movsb
push
cmp
or
pop
pop
scas
adc
sub
push
push
mov
lcall
pop
jp
test
lds
adc
or
fcmovnb
outsb
sub
dec
out
ret
ds
daa
cmp
add
mov
xchg
inc
loope
inc
in
jne
xor
dec
mov
into
data16
pop
and
mov
xchg
mov
seta
jle
mov
inc
jge
out
je
scas
xchg
pop
call
data16
mov
push
mul
sbb
mov
jmp
xchg
add
scas
dec
mov
add
fisubl
movb
inc
lds
in
dec
pop
lret
das
lock
push
lahf
fbld
mov
mov
mov
iret
xchg
or
fwait
hlt
stos
dec
and
dec
push
inc
cs
inc
xchg
pop
xorl
xor
add
pop
add
push
add
rclb
ret
xchg
stos
in
or
or
and
pop
loopne
je
sub
inc
jnp
jo
jns
in
in
ret
loope,pt
ja
cmp
pop
sub
push
ss
pop
insb
pop
xchg
fldenv
out
add
pop
pop
repz
sub
test
hlt
push
mov
jge
cmp
ss
mov
mov
orb
lea
mov
xor
lock
nop
jno
dec
stos
jae
cmp
data16
inc
xor
insl
or
xor
in
idivb
out
imulb
lods
xchg
testl
fldenv
neg
leave
mov
out
fldl
add
mov
mov
test
mov
ljmp
ss
jns
lcall
cmpsl
dec
outsb
hlt
imul
xor
outsl
mov
xchg
cmp
pusha
aas
mov
and
cs
ds
and
jg
adc
mov
add
mov
es
fstps
jmp
mov
je
pop
sti
fcmovnbe
jno
sub
push
insl
loop
in
add
push
mov
jmp
mov
ret
xchg
fdiv
inc
lret
iret
push
pop
repz
std
xor
adc
jl
sub
sbb
push
jmp
adc
scas
inc
sub
sub
mov
xor
jno
push
push
faddp
jmp
popf
mov
test
jne
leave
lea
and
clc
mov
aad
out
out
jnp
lcall
xchg
pop
cld
cmpsl
dec
dec
fucom
stc
inc
lock
push
ljmp
fdivr
xlat
dec
push
and
in
inc
clc
cltd
ds
rcll
negb
stos
shrl
stos
rolb
rcrb
mov
inc
pop
pop
in
mov
out
rorl
out
push
xor
sbb
cli
xchg
loop
mov
push
and
jno
int3
cmpb
loopne
ds
or
push
adc
stos
aas
dec
push
popa
loopne
push
jecxz
dec
xor
add
les
in
sbb
and
andl
mov
out
into
mov
ljmp
jl
jmp
push
or
les
mov
popa
xor
insb
ret
pop
cmp
push
sbb
mov
push
mov
xabort
les
fcoml
xchg
in
movsl
dec
je
das
xor
add
mov
repnz
lock
dec
in
sarb
popf
fmull
and
adc
in
std
or
sub
out
jbe
cmp
sub
sbb
neg
cmc
xchg
mov
sti
cld
mov
in
mov
fcmovbe
repnz
out
push
test
insl
jo
jns
adc
mov
xor
mov
inc
adc
push
mov
divl
pop
push
jp
or
xor
push
xchg
sub
and
bound
shll
xor
adc
pop
mov
frstor
pxor
pop
cmpsl
fwait
inc
sbb
js
or
mov
push
jnp
inc
xor
subl
pop
fwait
das
lods
cmp
push
or
xchg
loope
out
adc
inc
push
mov
sbb
shrb
mov
adc
and
jne
pop
ljmp
sbb
repz
mov
push
or
adc
call
inc
test
adc
out
inc
subb
sub
inc
push
hlt
in
and
dec
fwait
pop
test
out
adc
popa
data16
jmp
out
xchg
repz
mov
movsl
lods
out
shrl
inc
cli
xchg
dec
push
hlt
adc
dec
mov
mov
mov
push
hlt
lea
sti
stos
gs
ret
ret
fwait
sbb
out
push
arpl
pop
xor
cli
outsl
pop
xchg
shll
out
dec
jnp
pop
rcll
xor
cli
movsb
scas
mov
fsubl
aam
jnp
fucom
aam
shlb
repz
and
nop
jl
push
call
test
lds
xchg
sbb
dec
mov
mov
fcoml
add
mov
out
shlb
sub
shl
sbb
clc
mov
mov
cmp
sbb
push
bound
int
rclb
add
aas
aas
fiaddl
xchg
cmpb
add
mov
jecxz
insl
mov
mov
jmp
inc
shll
pop
sub
cli
repnz
xchg
jne
clc
notb
nop
jecxz
jle
in
mov
in
push
mov
ljmp
sub
dec
adc
jecxz
ja
push
aad
les
jno
inc
insl
dec
xchg
enter
adc
clc
sbb
cmc
ds
lahf
nop
push
dec
cmp
xor
mov
daa
mov
sti
cmp
cmpsb
mov
mov
cwtl
lods
or
add
jl
jmp
dec
or
andb
ret
pop
mov
mov
pop
fs
enter
or
mov
and
lcall
into
jle
idiv
inc
js
xchg
inc
jg
jnp
pop
mov
xchg
mov
mov
aaa
xchg
dec
or
sub
nop
sarl
cmc
lds
pusha
pop
cmp
sbb
and
mov
imul
repz
push
lea
in
in
incl
imul
add
sbb
arpl
imul
mov
aas
xor
lcall
jns
enter
pop
stos
inc
mov
mov
scas
mov
notb
mov
adc
pop
lock
ja
lret
scas
push
mov
icebp
dec
je
fstpt
lret
and
add
jbe
and
ja
dec
pop
sti
sbb
sub
pusha
pop
imul
out
stc
add
sbb
lret
aas
aas
fldenv
sub
jae
adc
mov
jl
and
ljmp
outsb
iret
gs
and
jns
and
cmpsl
and
jmp
jle
jmp
inc
dec
push
test
inc
mov
outsl
pop
sti
xchg
int3
aam
mov
repnz
and
scas
imul
pushf
pusha
pop
movsb
mov
mov
pop
mov
int3
jl
xchg
insl
push
push
mov
inc
aas
movsb
mov
rcl
lahf
stos
fs
push
mov
and
cld
dec
enter
out
test
dec
sbb
mov
fistpll
sbb
ficoms
jo
xor
ljmp
mov
xlat
es
xlat
mov
dec
inc
mov
dec
cwtl
das
jb
add
xchg
mov
lahf
pusha
mov
jl
xor
imul
cmp
push
dec
int
cld
inc
dec
out
bound
mov
pop
sbb
xchg
jp
sahf
mov
popf
jnp
or
mov
lahf
cli
push
fs
clc
pop
jno
adc
mov
imul
or
leave
add
push
xchg
stc
cmp
or
mov
dec
imul
das
adc
pop
arpl
add
stos
repz
jp
xchg
add
push
sbb
daa
int3
fisttps
dec
sbb
sbb
push
dec
cmp
lods
sub
ds
sbb
aaa
sub
cli
add
add
iret
lock
outsl
xchg
jnp
mov
push
leave
xchg
pop
in
sub
les
fdivl
mov
test
jg
daa
xor
inc
push
cmpsl
mov
push
cmpsl
data16
les
pop
ret
add
mov
clc
pop
sub
xor
addl
mov
cwtl
decb
mov
pop
xchg
aaa
int
mov
insb
loope
lret
insl
mov
cltd
pop
mov
shll
adc
sbb
push
add
pop
jbe
int3
mov
in
pop
xor
pop
scas
pop
ret
ljmp
xor
cmpsl
jp
pop
imull
lahf
loop
int
scas
aad
nop
and
mov
push
out
mov
ljmp
cwtl
les
mov
mov
sbb
add
lahf
enter
dec
lret
lcall
mov
pusha
shrl
mov
popa
mov
ss
pop
pop
jbe
inc
lock
sbb
std
mov
jle
xor
scas
nop
out
jne
inc
test
and
test
mov
inc
add
or
out
in
call
mov
and
jg
in
mov
sbb
jp
xor
flds
inc
jecxz
mov
fsubl
mov
push
fmul
into
sbb
cmp
frstor
sahf
arpl
mov
jle
pop
cmp
cmp
ss
int3
je
xchg
adc
jp
xchg
divl
jns
or
inc
fsubl
pop
test
jbe
xchg
jnp
cltd
fldcw
bound
fidivl
int3
add
xor
push
xor
jbe
fwait
and
push
cmp
lret
cs
mov
lock
int3
mov
push
push
sbb
imul
xor
movsl
loop
jno,pt
shll
shld
dec
in
mov
push
jle
push
clc
fimull
lea
ds
mov
test
test
jns
adc
imul
xchg
ret
adc
repnz
loop
movsl
movsb
dec
in
in
in
scas
pushf
pop
dec
mov
movsb
aad
loop
sbb
or
repnz
ja
mov
je
mov
daa
imull
stc
idivb
sbb
inc
aad
xchg
push
test
jg
jb
ljmp
ljmp
cwtl
cmp
xchg
add
adc
imul
jnp
mov
daa
test
aas
sarl
mov
movsl
in
inc
filds
or
sub
xor
dec
subb
and
out
inc
fisubrl
insb
or
or
sbb
fstpl
cmpsb
out
in
cmp
dec
mov
out
std
ds
aaa
push
push
and
xorl
cmp
push
lods
add
jecxz
rcrb
ror
icebp
mov
cmp
jecxz
mov
lea
out
popf
or
fs
cmp
mov
movsl
shll
push
mov
out
jno
or
push
lods
cmp
jo
xchg
sbbb
jmp
inc
xor
add
out
jo
movsb
out
add
ss
jmp
js
jno
sub
xchg
mov
pop
mov
push
ror
inc
cld
bound
jmp
or
mov
or
mov
jne
cmp
dec
inc
fwait
in
pop
mov
stos
xchg
ret
inc
mov
scas
adc
cmp
pop
mov
sti
xchg
mov
inc
sbb
pop
xor
fmul
sahf
sbb
lds
popa
adc
gs
mov
dec
mov
cmp
sbb
sbb
mov
jmp
inc
mov
mov
xchg
mov
adc
pop
inc
dec
mov
cwtl
pop
testl
insl
inc
cs
ds
adc
cld
loopne
mov
sbb
mov
adc
xchg
push
cmp
jno
fimuls
push
cmpsl
add
sbb
inc
scas
outsb
enter
lcall
or
outsl
test
gs
frstor
xchg
cmpsl
sub
cmpsl
jbe
jmp
nop
addr16
jnp
sbb
add
into
cmpsb
inc
shll
cmovbe
jbe
push
adc
mov
in
sub
push
xor
and
and
dec
mov
lahf
std
fwait
jno
ja
or
std
mov
sbb
sbb
mov
ljmp
mov
xchg
xchg
std
cmp
rclb
and
outsb
mov
orl
mov
add
push
xchg
xchg
dec
call
and
dec
ret
xor
adc
mov
jne
enter
mov
aad
in
test
cli
rclb
stc
xchg
aaa
mov
repnz
add
and
fistpll
lods
sbb
lcall
pop
shlb
mov
enter
ret
mov
movsb
mov
shl
xorb
cmp
in
xor
sbb
in
push
test
mov
mov
or
cmpsb
stos
xor
cmp
and
movsl
lret
or
fsubs
or
arpl
mov
dec
negl
xor
inc
jns
fdiv
leave
mov
fsts
xor
fcoms
jae
lds
mov
leave
cmc
push
xchg
adc
lock
xchg
in
add
sub
jo
mull
jns
fbstp
xlat
mov
fldt
cmp
repnz
in
mov
dec
jb
loope
mov
xchg
shrb
outsb
xor
out
repnz
outsl
adc
sbb
cwtl
inc
mov
jns
lods
test
mulb
mov
lods
lcall
mov
in
sbb
scas
mov
loop
dec
nop
xchg
or
out
push
mov
addr16
lahf
inc
inc
cmp
sti
ret
popa
outsb
jecxz
lahf
pop
adc
imul
insb
push
or
mov
or
and
lods
out
jecxz
shlb
pop
clc
les
push
std
stos
cmp
ljmp
js
insl
outsl
mov
inc
fwait
adcl
mov
or
inc
ret
xchg
scas
sub
nop
dec
pop
call
pop
mov
xchg
scas
pop
and
push
jne
xchg
fists
push
push
pop
ljmp
fisttpll
in
mov
pop
xchg
jle
shl
ds
xor
xor
out
mov
or
imul
loope
xor
stc
mov
mov
and
mov
xlat
push
test
jl
js
pop
mov
mov
popa
and
pop
decl
mov
jb
inc
je
and
jbe
adcl
jge
cld
dec
dec
pop
js
xor
sub
gs
pop
add
xor
subb
clc
mov
insb
xchg
pop
pop
dec
pushf
jnp
cmp
nop
sub
xlat
pop
in
movsl
and
fstl
out
pop
movsl
shlb
push
es
into
cmp
mov
inc
sbb
mov
dec
stc
xchg
pushf
dec
fisubrl
xchg
jno
sub
adc
dec
rclb
cltd
dec
test
in
daa
adc
testb
int
inc
pop
mov
std
je
cmp
jae
imul
out
bound
xlat
scas
pusha
orb
jae
ss
in
cmp
mov
add
pop
shrb
aad
mov
push
fstpl
and
lret
push
lcall
mov
adc
cli
mov
fsub
sub
idivb
inc
imul
out
fistpl
outsb
aad
pop
push
dec
add
cmpsb
and
bound
mov
stos
js
mov
and
add
cmpsb
pushf
test
adc
or
xchg
dec
insl
jg
bound
sbb
jae
fwait
popf
xlat
push
sbb
out
in
and
sub
iret
jecxz
push
sbb
xorb
pop
lods
lret
in
add
call
pop
add
push
cld
xorb
cmp
xchg
jecxz
shr
pop
scas
mov
jecxz
fdivrs
inc
jg
jmp
adc
test
inc
pop
and
dec
in
lods
pusha
sbbb
jecxz
idivb
xor
aad
stc
cmc
and
rorl
cmp
mull
out
das
xchg
or
dec
fildll
fnsave
das
fbstp
mov
adcb
and
xchg
js
stc
pop
and
and
fimuls
mov
push
dec
mov
stc
sahf
imul
and
jbe
cmp
lret
movsl
divl
sub
fstpl
loop
popf
xlat
in
inc
inc
test
adc
pushf
jne
mov
pop
out
jp
and
daa
subl
sbb
xchg
xchg
jmp
arpl
jle
push
mov
int
xchg
mov
loop
rcl
fistps
dec
or
sbb
cmp
mov
fwait
mov
xchg
add
cmpb
cmp
leave
inc
outsb
hlt
push
and
loopne
jae
out
cmp
dec
pop
mov
es
mov
das
jno
mov
push
or
cld
mov
add
pop
xchg
mov
lret
adc
xor
and
xor
lods
or
icebp
rorb
mov
cli
pop
addr16
nop
lcall
sbb
jb
mov
pop
push
or
cs
jo
pop
cmpsl
in
sahf
cwtl
into
dec
cmp
inc
pop
lcall
sbb
mov
mov
cs
mov
add
movsl
mov
outsb
xchg
rolb
dec
ret
nop
mov
enter
or
jle
mov
cwtl
aaa
cmp
insl
xchg
pop
fdivrl
adc
int
mov
bnd
lea
push
out
aam
shr
fistl
fs
mov
mov
adc
movsl
lret
dec
mov
loopne
aaa
sub
shrb
sub
adc
in
push
push
ret
adc
push
out
into
fistps
mov
inc
xchg
rcr
add
or
mov
xor
outsb
xor
and
push
clc
xchg
or
sub
xchg
in
test
ret
or
dec
xchg
fbstp
xchg
or
mov
mov
lret
loop
dec
arpl
sbb
insb
test
mov
sub
pop
pop
aaa
lock
mov
int
sub
xchg
jb
dec
loope
adc
clc
sbb
mov
cltd
add
mov
popa
movsb
imul
push
lds
fistps
adc
test
mov
lcall
xlat
cwtl
adc
cmpsb
dec
out
icebp
stos
push
psubusb
cmp
xchg
cmpl
daa
jbe
push
inc
inc
or
fstl
shll
jne
inc
lcall
loop
inc
stos
stos
lds
xorl
xchg
mov
cs
in
inc
int
mov
pop
mov
js
gs
jno
sbbb
sub
jle
ret
adc
dec
add
dec
out
test
out
icebp
and
jb
aad
fcoms
ret
lds
decl
stos
mov
mov
pop
dec
out
xchg
sbb
les
aas
pop
in
mov
sub
jnp
cmp
mov
jbe
cmp
xor
push
repz
lret
in
mov
jns
data16
dec
jp
mov
sub
jns
loopne
sub
jp
ja
aaa
stos
adc
pop
sarb
sti
out
adc
into
pop
mov
out
or
out
js
cmp
dec
out
sub
mov
cmc
mov
mov
sbb
lds
pop
or
imul
leave
loopne
push
lock
dec
cwtl
pop
add
sub
loope
mov
rcrl
in
cmpsb
aaa
mov
pop
sub
loop
cmp
aam
jb
test
mov
mov
dec
push
stc
and
ficoms
add
faddl
stos
cmp
jb
mov
push
sahf
mov
cld
in
or
pop
sbb
data16
orb
xor
adc
ds
jp
mov
mov
sub
add
mov
dec
shlb
inc
push
xor
add
jmp
push
dec
pop
stos
jmp
subl
dec
sub
inc
push
or
movsb
or
pop
outsl
adc
jns
jb
data16
in
rcll
adc
mov
adc
ficomps
adc
fs
repnz
test
fstps
les
in
mov
jne
in
cmp
scas
push
out
ja
addb
popa
or
mov
stos
push
push
adc
addl
xor
lea
mov
arpl
add
mov
movsb
stos
pop
mov
lss
fucomi
or
jp
add
xchg
sbb
push
mov
insb
fists
movl
flds
push
push
mov
loope
xlat
test
sahf
xchg
sbb
push
test
adcb
aam
in
jp
sti
cltd
lds
std
daa
outsb
jae
loop
or
xor
cmpsl
pop
xchg
jno
test
pushf
or
xchg
push
std
jecxz
cmp
and
mov
shrb
outsl
mov
adc
shlb
iret
cmp
lret
fldl
xchg
adc
pop
arpl
or
fsub
sub
adc
hlt
sub
fdivr
push
sti
push
repnz
cmp
out
shr
mov
mov
roll
sub
cli
sbb
es
popf
rcl
mov
cltd
adc
and
mov
enter
push
ret
mov
pushf
xlat
sbb
icebp
icebp
cld
dec
sub
maskmovq
mull
pop
inc
lret
pushl
test
pop
pop
sub
loope
adc
sub
cmpsl
popf
push
stc
push
and
loopne
rolb
mov
xchg
scas
fstl
lret
pop
jmp
dec
pushf
add
cld
dec
cli
and
rolb
and
sub
cmp
xchg
add
aaa
xchg
mov
test
int
mov
pusha
jle
into
scas
sbb
cwtl
aad
adcl
pop
repz
repz
cmc
xchg
mov
sbb
cltd
fsubs
mov
add
lods
push
mov
push
and
push
mov
ret
int3
mov
pop
or
sti
jecxz
cmp
xchg
ficoms
aam
iret
popf
cmp
outsl
mov
mov
mov
inc
cmpsb
js
in
adc
cltd
sti
jg
nop
out
mov
js
lret
pop
imul
es
sub
movsb
xchg
or
lock
subl
mov
jecxz
jge
mov
loopne
adc
adc
cli
aam
loope
stos
in
push
sbb
inc
push
mov
sbb
dec
add
jp
sahf
outsb
dec
xor
cli
cltd
test
and
cmp
mov
pushf
cltd
scas
mov
and
jns
add
je
insl
imul
dec
mov
fst
push
xchg
mov
add
ja
and
or
adc
outsl
sti
mov
sbb
fcmovnbe
bound
cmpsl
repnz
dec
outsl
in
mov
je
dec
xor
xorl
push
mov
adc
mov
or
ss
ret
xchg
cs
push
sub
cltd
lock
sbb
fiadds
cmp
ficoml
cltd
pop
lcall
xchg
push
sbb
gs
xchg
dec
sub
lcall
sbb
rorb
xor
dec
cmp
adc
and
sbb
iret
mov
push
jbe
ret
std
es
inc
cld
push
test
scas
mov
mov
out
jnp
ret
mov
sbb
inc
pop
inc
fbld
repz
or
test
pop
sub
dec
inc
push
dec
ljmp
add
es
xbegin
sarb
pusha
fsubl
cmp
push
xor
mov
add
xchg
ret
movb
cmpb
adc
inc
out
pop
mov
mov
sbb
jge
lds
lahf
mov
aam
jae
jae
mov
add
cli
psrlq
jae
mov
add
fldenv
push
outsb
icebp
aam
lods
cmp
stos
xchg
jae
mov
xchg
pop
dec
jl
mov
cmc
cmp
int3
xlat
cmc
cwtl
mov
mov
insl
outsl
or
inc
mov
jmp
test
inc
pop
or
push
xchg
sarb
movsl
shl
sarl
mov
jne
push
mov
and
cmc
fwait
cwtl
test
jecxz
test
outsl
lcall
and
rcr
xchg
outsl
inc
and
dec
jb
fwait
lds
daa
inc
scas
fldl
cli
sti
gs
rolb
stos
dec
loope
inc
mov
lea
cmp
lahf
ljmp
scas
call
out
push
sbb
test
xor
je
mov
cmp
fdivrl
ret
add
sub
das
loop
pushf
popa
loop
xor
fwait
mov
jge
cltd
mov
xor
leave
out
xor
push
int3
out
sbb
out
and
inc
sub
inc
adc
into
jbe
out
jns
xlat
sti
or
in
sub
mov
movsb
pop
and
cmp
icebp
rcr
push
stc
push
xor
jae
fistpl
push
dec
pop
rcr
jge
mov
cmp
pop
cmpsb
dec
push
or
add
lock
mov
popa
scas
cs
incb
icebp
mov
pop
lret
mov
push
aam
scas
int
jmp
nop
das
adc
pop
mov
shlb
mov
pop
into
or
or
jno
sub
add
pop
dec
stos
and
ret
lods
jno
mov
and
ds
iret
sti
dec
ds
jne
inc
and
push
lret
fisubl
fstpl
icebp
cmp
repnz
loopne
test
jmp
cmp
mov
pop
mov
and
pop
push
mov
aam
mov
jecxz
push
test
sub
aam
jne
popf
mov
mov
jmp
gs
xchg
inc
test
jl
sbb
and
jb
xor
sub
dec
jne
daa
or
xchg
dec
push
rcrb
mov
mov
es
sub
pop
inc
sbb
sub
mov
jecxz
push
imul
mov
andl
mov
jg
cmpsb
cmpsb
lds
jno
cmpb
pop
icebp
rcll
out
fidivl
ret
cmp
adc
mov
ret
test
inc
or
jle
es
inc
mov
jg
hlt
xchg
push
push
cli
sbb
das
mov
jno
xchg
inc
dec
or
mov
sub
call
cmpsl
or
into
js
mov
sbb
jmp
sar
bound
fnstsw
pop
dec
lea
scas
pop
xor
cmc
cmp
fsubs
add
dec
and
test
xchg
repz
sahf
test
outsl
and
push
xor
mov
jno
idivl
mov
jbe
adc
pusha
xchg
jbe
in
cli
clc
dec
push
add
or
iret
shll
decl
adc
dec
pop
push
andb
mov
daa
mov
jo
cmp
pushl
jle
add
xchg
rclb
pop
ret
jbe
pop
and
xchg
aaa
int3
cmp
aas
fmul
jmp
push
push
leave
mov
test
push
ffree
ljmp
bound
inc
or
dec
adc
addr16
push
jns
push
jp
arpl
sbb
mov
nop
dec
lahf
push
out
dec
xchg
inc
adc
mov
mov
add
fnstcw
clc
sub
jb
cmp
cltd
jno
js
sti
mov
insb
dec
mov
push
or
dec
mov
dec
cmp
addr16
jle
sahf
inc
fdivs
mov
cli
sub
fstl
movsl
xchg
idiv
fwait
and
rcrb
mov
mov
in
inc
xor
dec
int3
xorl
pop
addr16
mov
mov
or
mov
movsl
push
arpl
test
or
cmp
adc
addr16
xchg
mov
ss
mov
push
insl
imulb
push
xchg
jae
and
lret
pop
cmc
js
aad
xchg
sub
inc
cmp
or
mov
inc
or
lock
jo
mov
add
les
mov
pop
or
add
and
or
rorb
xchg
pop
ja
push
xor
jecxz
add
pop
adc
andb
sbb
iret
push
inc
push
pop
repnz
hlt
jp
aam
xchg
xor
jmp
cmp
cmp
in
movsb
push
mov
lods
repnz
sti
and
sub
andb
mov
cmc
ja
enter
arpl
adc
or
or
cli
rorl
repz
mov
fmul
jmp
mov
dec
cmpsl
stc
enter
lret
mov
mov
cmpsb
jecxz
xor
sub
add
xchg
push
rolb
sti
jecxz
ret
aas
bound
or
in
inc
add
xor
sbb
add
pop
sub
pop
xchg
loopne
push
jmp
stc
xchg
or
je
or
ret
mov
mov
push
ret
cmp
inc
mov
push
pop
mov
into
ret
sbb
sub
mov
jno,pt
enter
lods
fdivs
or
sahf
leave
or
pushf
cmp
repnz
cmpsb
dec
jno
push
aaa
movsb
mov
aas
sub
xchg
push
lods
xchg
jo
xchg
loopne
loop
shll
and
jmp
mov
iret
jecxz
stc
add
imul
out
jmp
aas
mov
inc
xor
cmc
movsl
inc
insl
jo
sbb
jno
cltd
xchg
pop
les
mov
adc
cld
add
mov
in
nop
dec
inc
push
cltd
dec
pusha
cld
inc
jp
jbe
jl
and
or
mov
pusha
roll
dec
addr16
clc
lahf
and
cmc
add
add
aas
pop
inc
mov
xorb
push
call
enter
inc
mov
mov
sub
cmp
jg
lahf
sti
mov
xlat
fisttpll
pop
cmp
repnz
fistpl
push
push
mov
dec
add
mov
mov
pushf
cmp
jb
imul
mov
push
push
arpl
jle,pt
dec
mov
roll
or
shlb
mov
outsl
jl
push
xor
subb
xchg
lret
push
push
or
mov
inc
xchg
adc
test
push
add
cltd
test
mov
iret
and
in
mov
or
scas
lahf
or
nop
movsl
js
call
in
dec
movsb
enter
push
sbb
ss
pop
mov
test
addr16
je
sarl
mov
inc
mov
movsb
mov
test
loope
setae
movsl
sbb
add
adc
jecxz
inc
push
cmpsb
icebp
pop
scas
mov
cmpsl
jl
dec
push
jle
out
pusha
rolb
mov
lret
into
dec
jge
pop
vpmaxsw
decl
ja
mul
daa
cs
lret
lock
outsb
test
jae
jecxz
inc
cmovl
cmp
icebp
sbb
ss
dec
cmp
aam
adc
dec
ljmp
add
push
pop
cmp
js
imul
dec
xchg
jae
and
add
pop
pop
imull
or
outsb
cmp
aam
cmp
lcall
fnstenv
dec
out
mov
sub
lods
mov
std
outsb
pusha
push
shld
pushf
mov
and
or
and
jnp
aas
mov
sub
icebp
dec
sti
adc
mov
out
subl
popf
and
mov
daa
shll
in
fiaddl
add
loope
sbb
ret
pop
mov
rol
cld
or
cmp
shll
clc
frstor
xor
movhlps
push
mov
push
jp
mov
inc
xchg
cmp
leave
lret
sub
pop
pop
ret
fwait
and
xor
stos
xchg
add
xchg
ret
repnz
sbb
sbb
scas
sarl
pop
test
jns
jbe
adc
fidivrl
shr
icebp
addr16
insl
inc
sub
pop
inc
cmp
jmp
lock
pop
icebp
arpl
hlt
xor
ss
jp
lods
push
and
mov
mov
push
sub
push
sti
and
push
pop
aaa
loopne
jo
dec
cmp
fs
push
mov
notb
jge
cmpsl
pop
pop
pop
xor
dec
lret
lsl
xor
cltd
push
cli
mov
fsubl
push
hlt
int3
push
out
mov
aaa
pop
mov
pop
jne
lret
cmc
push
jle
mov
mov
cmc
add
cmp
mov
xchg
and
popa
loopne
iret
jnp
mov
mov
mov
enter
cmp
xchg
popa
icebp
mov
xor
shl
pop
adc
rcrl
dec
cmp
adc
daa
ljmp
adc
test
into
pop
push
aas
ror
ds
stc
push
mov
mov
jmp
inc
jb
orl
xchg
jb
xor
pusha
xchg
cwtl
or
and
stos
mov
cwtl
push
icebp
scas
pop
es
pop
frstor
push
pop
fldcw
das
jg
dec
or
out
jmp
loope
sub
cmc
and
sbb
inc
aam
aaa
int
push
push
pushf
jp
mov
xchg
cmc
xchg
hlt
jo
sub
push
jae
ljmp
add
xchg
rorb
push
daa
sbb
dec
scas
popf
popa
and
and
jne
out
nop
cmp
mov
outsl
arpl
dec
sbb
pusha
or
mov
es
mov
fcomp
xchg
mov
movsb
lods
cmp
sarl
es
pop
fcomps
xchg
mov
pop
mov
divl
xchg
add
or
dec
mov
ljmp
inc
mov
iret
push
int
xchg
in
stos
adc
inc
rclb
sbb
lds
sub
bound
push
sub
jae
sub
xchg
stos
dec
in
cmp
xchg
ja
ja
cmpsl
mov
jle
and
das
pop
jg
scas
cli
xchg
xor
inc
or
or
and
sub
sub
fiadds
xor
enter
mov
pop
push
test
lods
gs
pushf
gs
pop
mov
sub
cli
sub
dec
sbb
or
ss
call
xchg
aas
xchg
xchg
test
xchg
sbb
and
ret
xchg
mov
test
jnp
fstpl
lods
pusha
dec
cmpsb
mov
and
loopne
dec
mov
sub
jg
jns
stc
adc
jmp
pop
push
or
loope
sarl
mov
mov
dec
arpl
push
int
repz
nop
lods
test
push
dec
mov
in
jae
xchg
xchg
push
xchg
pop
dec
gs
sbb
mov
and
sub
pop
test
adc
insl
pusha
cmp
sub
mov
sub
cli
lcall
pop
jle
mov
stos
ret
imul
push
das
xlat
ficompl
sub
mov
rcl
shlb
cltd
mov
sti
xchg
scas
mov
cmp
hlt
movsl
add
lods
mov
xchg
jp
push
sub
cmp
sbb
je
mov
ljmp
movsb
mov
xor
test
sbb
stos
imul
fwait
mov
and
les
mov
push
and
inc
xchg
out
je
add
imul
mov
jp
xorb
aaa
sbb
jnp
or
mull
stos
insl
inc
push
push
add
lds
dec
wrmsr
xor
das
orl
push
adc
out
fucomp
fisttpl
cltd
repnz
xchg
into
pop
mov
xchg
xchg
in
in
loopne
pop
das
xlat
movb
test
or
rclb
aam
pop
dec
cs
repz
enter
notb
icebp
jmp
sbbl
ror
repz
daa
mov
pushf
sbbb
lea
dec
ret
cmp
mov
into
int
test
inc
daa
jecxz
push
adc
je
sub
push
daa
push
ret
rcrb
jne
jmp
ljmp
xor
push
hlt
push
ljmp
pop
fcmovu
xchg
cmp
jg
mov
pop
dec
std
xchg
inc
or
sub
in
xchg
xor
and
dec
add
pop
jns
xchg
mov
or
imul
xor
rol
cmpsl
xchg
push
out
inc
out
cmp
xchg
cmpsl
dec
cltd
add
xchg
pop
clc
movsb
cmpb
sub
cmpl
xchg
ljmp
in
sbb
xor
adc
lods
test
repnz
repnz
scas
mov
fisubs
adc
mov
out
mov
jp
xchg
ds
or
xlat
iret
adc
cmpsl
addr16
sahf
sbbb
decb
and
jecxz
out
pop
ljmp
jmp
inc
jmp
loopne
or
dec
jge
imul
js
sbbb
xchg
stos
cli
inc
incb
fstpl
es
call
pop
xlat
lods
xor
insl
dec
push
xchg
aad
adc
fstp
adc
pop
ds
mov
dec
sbb
bnd
mov
out
and
or
pop
lods
fistpll
loop
sub
dec
xor
int
cmp
subb
xchg
rcll
sbb
sub
dec
test
sub
xchg
daa
stos
jmp
xchg
add
mov
incl
cmp
in
jnp
mov
lods
movsb
mov
and
cmpl
fisttps
js
mov
outsb
sub
adc
enter
jbe
out
sbb
cmpsb
or
in
xchg
jl
sub
sahf
mov
fcmovnbe
push
loopne
test
mov
mov
rcll
lods
lds
xorl
mov
pop
jg
dec
popf
int3
outsb
push
add
xchg
popf
pop
mov
into
call
dec
sbbl
mov
sbb
jl
lea
or
std
test
sbb
in
adc
or
sub
mov
sbb
outsl
pusha
sub
fidivs
push
lods
idiv
sub
cmp
aad
ja
mov
out
xchg
xor
jb
in
cmp
and
sti
aad
xchg
xchg
or
jb
imul
data16
sti
lods
xchg
lret
or
lcall
subb
pop
mov
scas
rclb
pop
lock
scas
and
inc
ja
ret
mov
inc
dec
add
xor
pop
movsl
jl
test
repz
mulb
push
push
jne
nop
cmc
sahf
outsl
mov
cld
push
cld
lods
shll
les
dec
repnz
inc
jle
pop
jbe
jbe
sub
negb
aaa
mov
inc
loop
cmp
popa
aam
xor
icebp
adc
mov
add
rorl
jbe
cld
sti
sbb
push
push
jae
shrb
inc
leave
pop
aam
push
xchg
sahf
push
cltd
das
push
lcall
mov
imul
jne
loop
xchg
data16
sbb
std
shrb
inc
call
adc
testb
cmp
jge
cs
test
sbb
mov
mov
sub
inc
iret
dec
xchg
repz
pushf
lds
sbb
mov
mov
mov
sbb
sub
push
sbb
mov
jae
xchg
std
out
jne
sbb
imul
or
fwait
push
xchg
sbb
dec
lea
mov
xchg
mov
in
mov
or
int3
mov
in
notl
mov
daa
xchg
jle
push
pop
lock
and
sub
popa
pop
lods
dec
jnp
popa
sub
sub
and
mov
cmpsl
push
movsl
push
out
out
push
mov
xchg
mov
and
notl
or
icebp
hlt
mov
xchg
adc
push
cmpsl
inc
not
movsb
dec
pop
sbb
or
mov
test
dec
mov
dec
sti
mov
or
pop
outsl
lock
loopne
jo
rcrb
xor
xchg
aam
or
mov
int3
in
xchg
push
push
xchg
aas
push
adc
shrl
cmpsb
cwtl
inc
mov
fwait
jl
jge
jle
cmp
xchg
insb
adc
and
dec
xor
lods
loopne
scas
cmpsb
mov
and
xorb
and
and
outsl
sub
in
cmp
cwtl
sarb
inc
jge
mov
xor
ljmp
bound
push
nop
xor
push
lock
ljmp
out
popa
xchg
inc
jl
cmp
dec
outsl
sub
or
stos
pop
aas
sub
cmpsb
aaa
xor
fadd
pop
fcom
jne
cltd
mov
pop
sub
in
jecxz
lods
dec
mov
ret
pop
or
fidivl
jns
call
cmp
pop
imul
push
icebp
or
and
xchg
fcomip
cmp
movsb
nop
push
jne
aaa
scas
mov
fdiv
mov
cwtl
or
and
lods
imul
imul
adc
or
ror
cmc
cmp
bound
cmp
lods
ds
cmp
or
js
dec
lcall
sbb
xchg
cmpb
cmp
lds
fildl
stos
ds
pop
mov
lcall
jbe
mov
jg
faddl
pop
dec
lds
shl
mov
mov
repnz
sahf
push
mov
fcomi
notl
lahf
addr16
insb
fstpt
shll
jg
or
fxch
inc
sub
ljmp
dec
mov
jg
adc
push
add
cwtl
dec
pop
mov
xor
pop
aad
lods
push
mov
test
push
rol
add
lret
popf
lods
fisubrl
jno
stc
inc
dec
movsl
add
test
scas
jae
push
add
or
xchg
ljmp
mov
repz
test
and
jnp
mov
push
mov
imul
inc
pand
dec
mov
and
pop
sub
scas
test
mov
out
jle
inc
aad
pop
sub
repnz
dec
lahf
icebp
xchg
xchg
mov
mov
pop
insl
fisttpl
and
insl
jp
xor
ret
pop
fisubl
push
std
cmp
shll
inc
clc
sub
add
adc
enter
out
leave
xchg
cmp
movsl
icebp
enter
cmp
int3
dec
imul
sbbb
mov
inc
or
aad
or
cmp
dec
adcb
pop
jae
mov
or
mov
mov
int
add
fsubrl
sti
ret
imul
jl
xchg
loop
divb
xor
movsb
jl
and
mov
xor
mov
aad
ds
adc
cmp
push
je
add
addr16
ret
loop
ret
and
xchg
add
jae
add
inc
push
std
pop
dec
dec
stc
mov
aad
cwtl
dec
nop
es
cmp
cmp
xchg
out
xchg
jae
xor
adc
mov
mov
xchg
ret
jnp
jmp
incb
shll
lods
cmp
lds
cs
shll
inc
adc
cmp
mov
push
and
add
daa
sbb
cltd
fwait
pop
jb
jge
mov
jno
add
cmp
sub
and
iret
adc
xor
cmc
loopne
lahf
mov
cmpsl
mov
ljmp
stos
xchg
mov
pushf
scas
add
nop
and
les
insb
jmp
mov
sub
mov
nop
jl
testl
scas
mov
fmul
aad
push
imul
push
dec
jo
add
addw
leave
push
pop
jge
mov
mov
dec
fwait
iret
mov
movswl
outsb
xor
xchg
inc
push
nop
out
jp
or
lock
inc
ljmp
gs
mov
pop
out
sarb
add
imul
cltd
sahf
lret
addr16
add
fs
pop
out
aam
or
js
loopne
or
subb
xchg
imul
pop
add
mov
pop
sarl
sti
out
mov
push
xlat
mov
pop
xchg
and
sarl
std
jnp
mov
hlt
xchg
and
jmp
jnp
ja
mov
jmp
xor
movsb
inc
sbb
sub
push
addl
xchg
mulb
mov
pop
out
sub
fwait
enter
mov
adc
sub
sub
in
cmc
push
sbb
sbb
stos
add
fcoml
popa
jbe
add
fs
call
loope
shl
sub
xchg
rcr
imul
stos
scas
xchg
dec
cli
dec
test
inc
int
mov
push
int
xchg
jecxz
rcl
popf
mov
icebp
lret
js
sub
jmp
dec
inc
inc
hlt
test
jg
in
mov
outsl
adc
mov
inc
inc
jno
cli
xor
jmp
jbe
xchg
sub
mov
add
or
aas
inc
cld
icebp
push
push
sub
in
mov
cwtl
imul
loope
xor
jae
outsl
xchg
hlt
add
mov
repnz
jnp
xchg
shl
jmp
shrl
or
outsl
stc
aaa
and
push
cmp
cli
jl
out
daa
lcall
sub
in
ja
enter
or
and
xchg
or
ret
hlt
sub
cmp
inc
xor
xchg
mov
es
ficoml
adc
jb
adc
sti
pop
mov
xchg
sub
lods
fs
scas
pop
adcl
addr16
mov
mov
cmc
fisubrl
aam
nop
sbb
call
outsb
jge
out
xchg
stos
adc
adc
pop
andb
das
mov
popa
jnp
xchg
or
mov
xlat
mov
fsts
pusha
sti
mov
sarb
fsubs
nop
pop
xor
and
mov
mov
push
or
insl
ja
sbb
insl
add
mov
gs
push
mov
push
shlb
xor
mov
dec
inc
xor
stos
and
jge
jnp
cmp
cld
fldz
in
jno
es
mov
stc
out
lret
repz
inc
in
sbb
repz
add
cmpsb
push
sub
sub
xor
nop
mov
push
shll
xlat
and
repz
dec
and
pop
cwtl
scas
repz
and
aam
outsl
shrl
add
jae
or
int3
test
popa
outsl
jb
addr16
out
cmp
mov
sti
sbb
push
xlat
add
jp
lret
div
or
inc
pop
jge
es
dec
iret
mov
or
xor
cmp
das
dec
cli
cltd
lock
sbbl
sbb
into
cmp
dec
adc
psrld
adc
mov
cmpsl
sub
arpl
out
pop
cmc
out
into
pop
outsl
in
mov
add
aas
daa
mov
insl
cmp
ss
push
inc
pop
inc
movsl
mov
lret
pop
jg
or
and
dec
pop
cmp
outsb
sti
cld
adc
sahf
fs
mov
in
rolb
cmp
roll
lret
addr16
imul
pop
xor
ljmp
ss
bound
xchg
iret
loop
cmp
fwait
xor
mov
call
cmc
inc
leave
cltd
sub
popf
lock
inc
in
lds
in
repnz
das
sub
cs
shrb
call
ret
cltd
cmc
lcall
dec
in
push
push
xchg
sarl
pop
pusha
xlat
or
mov
push
xor
dec
shrb
ja
lds
push
sbb
mov
mov
lods
pushl
jmp
push
call
shlb
stos
imul
push
jo
test
clc
sub
xchg
repz
dec
jo
in
push
inc
inc
sahf
mov
mov
xor
pop
and
fcmovnbe
lds
scas
add
movsb
xchg
subb
pop
roll
lcall
push
out
dec
push
jb,pt
mov
push
test
lahf
es
sahf
xchg
and
mov
nop
frstor
sbb
jl
stos
pushf
xlat
jg
test
cmp
nop
arpl
inc
ljmp
jo
inc
std
inc
push
popf
push
push
jle
cli
outsb
or
push
imul
mov
adc
les
out
xchg
adc
nop
aam
push
lods
into
sahf
inc
ret
xchg
repnz
xor
xor
jno
mov
xchg
int3
xchg
adc
and
lahf
jecxz
add
aas
dec
and
sbb
mov
xchg
aad
gs
dec
jnp
mov
cmp
dec
lea
mov
xor
cwtl
test
cmp
cmpsl
dec
addr16
iret
lcall
push
adc
add
popf
dec
xor
push
je
shlb
inc
loopne
xchg
xchg
aam
in
cmc
pop
inc
in
mov
mov
int
test
or
ss
fbstp
rcrb
push
out
mov
push
in
pinsrw
adc
jg
fcompl
jo
mov
lds
pop
lret
in
ss
stc
lret
and
adc
push
in
sbb
and
push
jge
test
das
mov
test
jo
sub
dec
int3
scas
pop
subb
xchg
jnp
jo
rcll
mov
fs
jae
cltd
mov
sbb
xchg
ret
arpl
xor
and
jo
dec
cs
inc
out
testl
call
push
shl
pop
jge
xchg
mov
loopne
mov
dec
out
sti
ljmp
aad
clc
pop
mov
mov
mov
aad
in
fldl
fs
add
std
xlat
adc
xor
fimuls
test
jbe
lods
and
add
das
cwtl
mov
jne
les
negb
cld
jg
xchg
adc
and
mov
jge
xchg
sbb
std
xor
fcompl
addl
insb
adc
jl
pop
push
shl
cmpsb
mov
bound
pop
popf
mov
inc
dec
pop
jl
movsb
repz
mov
mov
xor
pop
jecxz
xor
loope
cmp
inc
inc
testb
mov
pop
jge
push
sub
jne
sub
xchg
push
adc
adc
cmp
sub
lahf
cmp
int
cmp
mov
leave
push
mull
imul
in
into
and
pop
jb
fstps
inc
wbinvd
dec
subb
jne
sti
adc
outsl
aas
mov
fisttpl
or
push
push
mov
sahf
hlt
mov
js
sbb
mov
outsb
fwait
xor
mov
subb
faddl
xorl
pop
mov
push
mov
jge
and
mov
lret
push
lahf
or
stos
test
xchg
shrl
pusha
out
out
and
cmpsb
dec
fisubl
adc
or
cmp
popf
shl
inc
sahf
mov
movsb
push
pop
maskmovq
divl
xchg
loopne
popf
sbb
or
xchg
inc
mov
sbb
or
icebp
hlt
push
in
sarb
aaa
std
mov
dec
sbb
shrb
pop
cltd
inc
shll
out
int
mov
cli
cmp
cltd
ss
sub
cmp
loopne
cli
lret
add
xchg
scas
jmp
pop
movsb
lods
ds
push
std
repz
dec
scas
in
in
mov
push
jnp
adc
test
inc
pop
push
addr16
sub
ljmp
mov
xchg
sbb
insl
push
push
dec
sub
lods
inc
jecxz
out
adc
mov
push
sub
out
fsubp
lods
leave
call
sub
popf
outsl
les
xchg
add
mov
jecxz
leave
dec
inc
cmp
inc
and
aad
ja
mov
dec
das
outsl
movsl
fldl
aaa
adc
sub
andl
push
mov
sbb
int3
lret
mov
pop
and
jmp
lea
sub
cmpsl
cs
mov
dec
arpl
stc
loopne
jmp
mov
test
push
xor
inc
mov
lret
iret
in
fbld
sub
xchg
adc
clc
jge
mov
xor
call
cmpsl
pop
add
cld
iret
rdpmc
jecxz
or
stc
dec
dec
daa
pop
sbb
or
out
push
and
lock
lock
dec
jge
scas
push
rolb
idivb
ret
adc
jp
mov
cmp
inc
pop
rcrb
pop
ficompl
and
in
dec
pop
fisttpl
cltd
stos
sbbl
jo
lock
imul
jne
jae
ftst
outsl
leave
or
orb
xchg
mov
add
dec
cmc
jg
stc
xchg
lds
xchg
mov
outsb
pop
mov
loop
xor
clc
call
std
bound
fwait
mov
cmpsl
dec
or
daa
popa
daa
xor
adc
cmc
lds
lahf
push
xchg
mov
cmp
mov
add
mov
ds
cmp
mov
rcrb
loopne
jle
inc
jb
aad
loopne
fwait
push
pop
movsb
or
repz
jmp
adc
pusha
mov
mov
addb
adc
call
addb
sbb
jl
clc
aad
pop
mov
jecxz
int
mov
lock
js
dec
lea
xchg
mov
ljmp
sub
cmp
mov
cltd
fwait
movsb
enter
mov
sbb
scas
cmp
mov
ffree
push
scas
out
sti
cmp
fnsave
dec
xor
xor
repz
sti
movsl
xor
mov
dec
xchg
rcr
push
ret
inc
cmpsl
fld
mulb
sti
lds
jecxz
ss
scas
sbb
pushf
and
roll
push
mulb
dec
int
ds
pop
mov
cmpsb
cld
mov
ret
mov
stos
cmp
cmp
cmpl
xchg
repz
in
mov
shrd
lcall
bound
pop
sub
jp
out
cmp
outsb
inc
push
inc
xor
xlat
inc
sti
fiadds
and
cltd
jnp
sub
rcrl
xor
ljmp
pop
push
into
aaa
daa
dec
ss
inc
cwtl
aas
cmc
dec
cmp
test
fldz
and
int3
insl
cmp
jbe
pop
pop
mov
in
test
add
add
jno
mov
ss
cli
mov
es
insl
and
mov
jle
push
jo
fwait
cmp
inc
xor
pushf
push
call
xchg
data16
fsubrs
lea
push
mov
dec
ficoms
cmp
dec
xor
hlt
mov
dec
mov
and
lcall
arpl
cmpsb
pop
lcall
outsl
sub
repz
sub
sbb
push
sahf
mov
mov
in
add
mov
inc
lcall
add
mov
mov
int3
jne
lods
repnz
gs
cmpsb
or
push
int3
imul
or
lods
dec
icebp
ret
incb
cmp
rcrl
test
push
movsl
sub
sub
add
add
dec
sbb
adc
call
add
dec
outsb
fst
push
scas
lock
jae
mov
push
jecxz
dec
je
outsl
mov
rol
out
loopne
pop
fs
push
stc
ret
mov
or
imul
inc
mov
rcll
mov
or
cmp
faddp
ds
dec
lahf
jo
ja
shlb
sbb
xchg
nop
andb
mov
es
mov
faddl
lahf
inc
inc
std
mov
push
addb
mov
push
mov
mov
mov
or
sahf
mov
movsb
cltd
fs
loope
mov
dec
sbb
loope
andl
inc
mov
dec
stos
inc
popf
push
fisttpl
aad
rcrb
or
mov
cmp
push
xor
js
clc
mov
pop
jmp
icebp
daa
pop
lret
push
xchg
call
and
shll
dec
fnstenv
in
das
mov
adc
push
test
mov
lret
out
fwait
popf
mov
inc
cmp
roll
fbstp
xor
jmp
add
aaa
xchg
call
aad
mov
pop
shl
scas
sti
sbb
fdiv
clc
push
orl
push
inc
fisttpl
and
jmp
xor
inc
outsb
sub
fadds
dec
and
mov
mov
rorb
filds
inc
lods
rol
addr16
lds
dec
adc
int
aad
mov
pop
push
and
leave
pop
cli
xor
jl
outsb
push
pushf
sbb
pop
mov
xchg
mov
hlt
mov
lods
push
sub
hlt
adc
pop
repz
stos
and
inc
call
jle
je
aaa
pop
adc
dec
cmpsl
mov
out
and
in
popf
inc
out
push
int
leave
pusha
and
imul
ret
pusha
sbb
leave
mov
sbb
mov
notb
add
cmpsl
cmp
push
dec
insb
mov
inc
pop
mov
mov
imul
cli
movsl
inc
popl
add
sbb
adc
ljmp
cmp
jb
or
xchg
sti
cmp
dec
repz
das
movsl
lds
push
pop
jl
out
push
xchg
in
xor
mov
mov
push
add
xchg
xor
aam
sub
ret
in
int3
inc
test
call
xchg
out
mov
mov
cmpsl
add
sbbb
xchg
ljmp
cmc
jne
ret
test
std
in
push
or
fisubs
lea
cmp
ja
imul
adc
das
sub
inc
mov
jbe
adc
push
shll
shr
jo
mov
pop
popf
adc
sub
iret
scas
repnz
dec
int3
es
repz
mov
loopne
lods
les
insl
popf
cld
sbb
jp
mov
subl
aaa
lods
push
sahf
in
loop
std
loope
inc
sbb
xor
gs
cwtl
mov
in
rcrw
jmp
adc
push
push
add
adc
mov
pop
adc
xchg
not
fidivrs
scas
shlb
adc
ss
adc
add
mov
ficomps
mov
std
in
mov
imul
mov
jmp
in
inc
out
mov
push
sub
inc
push
in
stos
cmp
mov
leave
cmpsb
jno
jnp
push
pop
jo
adc
push
popa
dec
push
mov
les
dec
out
dec
fcmove
cwtl
imul
or
mov
in
inc
dec
cmc
inc
sbb
sahf
add
and
out
inc
sub
dec
xchg
push
movsb
arpl
lcall
scas
sub
pop
call
mov
ljmp
push
rcrb
aam
inc
and
enter
test
adc
push
idivb
insb
sub
add
aam
cwtl
sub
xchg
xchg
cmpsb
xorl
dec
aas
idivl
aas
mov
lahf
push
in
sub
fldcw
xchg
test
sbb
cs
mov
aaa
pop
lea
mov
mov
out
cmp
shrb
or
gs
int
mov
cwtl
xor
jb
push
push
add
popf
add
sbb
sub
in
fsubs
sub
je
in
fsubrs
mov
out
dec
sub
fcomps
aam
leave
ja
cmp
loope
mov
into
mov
in
mov
cmp
rcl
dec
pushf
inc
add
sbb
push
pushf
cmc
cld
nop
lock
inc
test
adc
push
je
or
aad
stos
clc
inc
fsubr
mov
dec
mov
mov
stos
pushf
xchg
lds
xchg
pop
jecxz
shrl
outsl
push
sahf
adc
xlat
sbb
rcrb
or
lock
dec
out
jle
mov
dec
mov
xor
xchg
stos
and
lds
jge
add
dec
mov
cmp
cmp
sub
mov
jge
jb
and
cmpsl
rcll
mov
cwtl
xchg
aas
jbe
addb
mov
outsb
adc
mov
push
insl
mov
push
add
adc
add
add
ss
push
lret
adc
aaa
cmp
fisubrs
dec
sub
jb
cs
out
inc
clc
in
cmp
cwtl
cmp
sbb
adc
aad
rol
and
pop
pusha
xchg
nop
lds
xchg
xor
mov
test
popf
aaa
aam
pusha
packssdw
push
xor
mov
mov
and
jg
sarb
inc
sar
fwait
mov
into
divl
inc
cmp
or
cli
rcll
hlt
fcmovnu
pop
sbb
push
test
gs
inc
movsb
mov
aas
movsb
pop
out
loopne
jns
mov
xlat
sub
or
notl
xchg
jae
fwait
pop
pop
xor
lea
push
rcr
dec
xchg
xor
or
and
scas
jb
pop
js
les
clc
testl
xchg
ss
mov
cmp
mov
cmc
outsb
sub
sbb
jmp
fistpll
fcompl
jb
ds
ljmp
loop
adc
xor
xchg
jne
dec
out
dec
sub
or
sub
cmpsl
xchg
icebp
in
loope
daa
or
cwtl
ja
and
call
pop
daa
mov
fdiv
pop
add
xor
in
ret
lods
jne
lea
inc
inc
adcb
dec
outsl
rcll
scas
gs
in
lods
sub
out
vpmovsxwq
aad
cmp
mov
cmp
push
or
mov
sahf
sbb
and
pop
add
decb
imul
movsb
imul
jle
sub
faddl
in
andb
and
sub
sbb
add
mov
or
pop
sbb
sbb
adc
add
orb
jb
mov
faddl
lahf
movsl
test
outsl
js
mov
mov
push
and
cld
mov
scas
mov
sbbb
andb
ss
jo
outsb
addl
cmp
jmp
cmpsl
lods
lcall
lret
and
dec
and
cwtl
add
arpl
push
rclb
stos
dec
les
ja
cmp
nop
fstps
enter
xlat
xchg
sbb
push
jp
xchg
cli
jg
mov
adc
gs
xor
sbb
lods
idivl
shll
cmc
int3
mov
jbe
mov
pop
add
lds
ljmp
dec
fdivr
pop
fidivrl
xchg
and
popf
mov
xchg
inc
fmul
sbb
add
jge
mov
clc
fsub
dec
mov
aam
xchg
sbb
movsl
aad
aad
scas
mov
fisubs
lods
fistl
call
cmc
and
pop
fcmove
test
or
lret
shr
mov
xchg
and
and
aaa
inc
mov
roll
out
outsb
sub
add
out
shrb
inc
sub
aaa
dec
sub
xchg
imul
test
mov
lahf
xor
mov
lret
pop
mov
inc
dec
pushf
pop
movsl
and
xchg
mov
popa
pop
ljmp
xor
ss
stc
data16
adc
arpl
cmp
lock
scas
adc
pop
push
xor
and
add
push
mov
xchg
hlt
or
jge
stc
lea
sub
cmpsl
sbb
in
sbb
sbbb
sub
pop
xchg
iret
in
call
dec
adc
scas
mov
jle
in
jp
mov
xchg
fs
xchg
fstpl
dec
mov
pop
sub
cmp
dec
xor
sbb
and
and
outsb
xchg
sub
iret
iret
inc
das
in
inc
cmp
mov
pop
daa
xchg
push
sub
xlat
pop
jmp
jns
jbe
add
cmc
sub
adcl
lret
pop
pop
test
aad
mov
pop
popa
je
dec
loope
push
loope
sarb
push
sbb
out
out
arpl
leave
lahf
test
mov
out
int
scas
xchg
cmp
scas
pop
fs
into
push
mov
dec
push
scas
fs
xor
stos
mov
mov
cmc
inc
xchg
test
inc
mov
imul
dec
mulb
or
adc
mov
fbstp
movsb
fisubl
mov
ss
mov
inc
mov
push
cmpsl
in
outsl
ds
ret
shrb
cmpsb
repz
jne
out
jle
loopne
arpl
mov
ja
push
cmp
push
or
inc
aaa
sbb
popa
mov
loop
mov
into
mov
mov
or
nop
aam
xlat
dec
mov
fmul
dec
lods
and
mov
pop
xchg
cmp
mov
cwtl
mov
cld
add
pop
inc
dec
int
jge
bound
mov
repz
dec
jle
jmp
fcomps
aas
inc
mov
cmpsb
inc
outsl
clc
xchg
add
jmp
xor
cmpsb
lods
mov
in
jne
add
out
push
adc
es
dec
push
jns
pop
and
aad
jns
daa
loope
push
xor
mov
leave
loop
test
in
mov
and
xor
pop
sbb
and
xor
pop
mov
int
sub
pop
imul
mov
adc
adc
mov
or
push
stc
gs
pushf
fs
movsl
rcll
insb
or
xchg
aaa
pop
bound
jge
mov
aaa
xlat
dec
mov
dec
xacquire
mov
icebp
dec
test
adc
int
xchg
subb
andl
cmc
jae
mov
sub
xchg
jge
addr16
scas
insl
push
pop
push
imul
jmp
jo
popl
adc
xor
arpl
add
mov
xchg
mov
in
sub
mov
mov
andl
sarb
loop
insl
cmp
femms
jno
dec
xor
lds
mov
xor
std
ret
and
pop
pop
ljmp
gs
nop
daa
arpl
cmp
inc
or
xchg
jg
lea
mov
stc
pop
xlat
xchg
or
add
sub
adc
jmp
push
lea
jecxz
push
jno
scas
sbb
or
fadds
test
cs
lock
cmp
out
mov
push
enter
es
add
xchg
shll
rcll
in
lock
out
fcoms
cmp
mov
push
repz
adc
movsl
inc
cmp
inc
movsl
push
fimull
leave
pop
cmp
xchg
stos
cltd
mov
xchg
cld
bound
js
sub
push
call
adc
gs
js
or
inc
in
push
scas
push
inc
dec
pop
ret
jns
shrb
fiadds
adc
insb
add
popf
jp
pop
push
lods
xchg
mov
jg
jno
cmpsb
loop
sub
jmp
std
aam
mov
jne
sub
xlat
push
sub
dec
scas
cmp
xchg
adc
mov
adcb
dec
lea
or
adc
ret
stc
mov
jmp
xchg
push
pop
sbb
jnp
jmp
add
loope
dec
mov
inc
mov
pop
xchg
std
stos
insb
pop
lock
int3
sub
imul
aad
test
addr16
cmc
or
mov
lods
test
and
andb
data16
inc
cmp
pop
pop
test
lds
pushf
jle
add
movsl
out
mov
stc
pop
jl
mov
out
call
adc
xorl
testb
push
xchg
int3
movsl
insb
rcrl
mov
push
mov
xor
mov
add
out
test
add
xchg
jmp
rclb
lahf
sbb
push
sbb
lds
mov
arpl
push
xor
test
cmp
pop
scas
jecxz
bound
or
bnd
sbb
push
outsb
push
int
mov
sub
jle,pt
js
repz
pop
call
fwait
adc
sbb
repnz
loop
stc
dec
outsb
xchg
cmpsb
cmpsl
mov
mov
jnp
push
cmc
movsb
hlt
and
aam
lret
pop
sub
add
xchg
sarb
add
mov
mov
xor
and
mov
ret
shr
arpl
lcall
dec
jg
test
mov
bound
jecxz
ds
jbe
int3
dec
pop
cmp
outsb
pop
mov
inc
jnp
nop
call
out
ret
jecxz
test
sub
ret
test
sbb
jno
jno
mov
mov
mov
sub
sahf
push
jmp
stos
sub
sti
push
dec
call
lret
cmp
cwtl
xor
addr16
or
leave
inc
push
xchg
pop
test
mov
xor
ss
xor
int3
xor
sahf
jbe
sbb
call
cmp
out
inc
ret
add
inc
push
out
jecxz
inc
mov
stos
insl
lds
fstl
inc
inc
push
mov
cmp
rcr
cmp
jg
sbb
adc
sbb
add
pop
or
lods
mov
cmp
in
inc
and
outsb
sub
pop
fistl
inc
inc
arpl
mov
outsl
cmp
cmp
cwtl
mov
mov
cmp
jo
fxch
mov
icebp
pop
jle
neg
popf
mov
and
rorb
cmpsb
hlt
mov
or
xchg
xor
stos
cli
and
std
sub
ss
inc
inc
and
std
mov
call
mov
out
dec
fildl
loop
test
std
cmpsl
fsubs
xchg
mov
idivb
jg
and
pusha
movsb
mov
fmul
repz
ss
fists
es
mov
in
xchg
jecxz
pop
sub
fwait
in
xchg
and
arpl
sub
incb
cmp
jle
xchg
dec
daa
sbb
or
and
cmp
mov
sbb
add
sub
call
mov
push
lds
jge
mov
loopne
fs
lea
mov
jo
fs
mov
pop
jns
and
sub
adc
ds
addr16
mov
jle
iret
or
shlb
and
mov
daa
adc
adc
dec
xchg
push
and
pushf
cltd
sbb
lods
adc
and
xor
push
outsl
inc
shll
arpl
ror
in
bound
pop
sub
jg
fsubs
cwtl
xor
outsl
push
fsts
mov
lods
push
into
sahf
and
repz
outsl
out
cmp
pop
aas
xlat
jg
pop
pop
daa
sbb
iret
sub
xchg
enter
lcall
dec
adc
sub
lcall
pop
rol
call
mov
cwtl
inc
out
pop
mov
das
scas
xchg
lds
adc
sub
xchg
ret
out
xchg
out
jge
shll
pusha
int3
mov
and
or
out
push
xchg
adc
jnp
mov
es
add
mov
inc
dec
mov
les
call
push
dec
data16
dec
mov
dec
mov
movsl
cmp
fldcw
push
xchg
cmp
sub
bound
or
pop
loopne
pop
push
out
pop
out
repnz
cs
and
and
addr16
data16
aam
scas
inc
outsb
div
mov
mov
nop
jmp
lock
insb
jg
push
mov
jp
or
xchg
frstor
fildll
pop
push
pop
pop
rcll
cmp
ficoms
je
jns
fwait
out
jmp
inc
in
rolb
shl
jnp
ljmp
jmp
jle
pop
jne
or
pop
test
mov
jae
clc
sti
push
adc
mov
lret
testb
je
call
dec
pop
insb
and
lods
popa
or
jb
jae
cli
adc
push
push
mov
aad
jmp
inc
sbb
adc
aad
adc
sbb
inc
sub
je
fbstp
lret
dec
xchg
jmp
out
jg
sub
outsb
out
xchg
mov
mov
sub
or
test
inc
xlat
aad
sbb
jg
jge
insl
jne
ret
or
repnz
dec
sbb
mov
cltd
xor
negl
pushf
mov
repz
mov
movsl
cwtl
push
mov
cmp
mov
mov
mov
rorl
mov
sub
cmp
mov
sbb
std
jg
push
fwait
mov
mov
pop
jne
mov
sub
jns
mov
insb
ss
adc
lods
sbb
jle
jno
lds
cmc
and
es
sub
mov
lods
outsb
ffreep
jmp
jne
jbe
repz
jbe
dec
mov
into
xor
sbb
pushf
in
popf
rcll
rol
mov
clc
mov
jp
popa
add
in
ror
xchg
add
repnz
fidivl
push
mov
frndint
cmp
xor
sub
clc
mov
xchg
and
ss
in
dec
loop
sub
fwait
lahf
or
mov
adc
ds
jo
mov
aam
rcrb
test
cmp
xor
mov
fwait
sbb
fwait
xor
mov
mov
and
lea
adc
sahf
shrb
ja
icebp
push
daa
xor
adc
dec
jl
add
mov
insl
sbb
jp
and
ss
pushf
out
and
cs
xchg
jge
js
addr16
mov
mov
mov
les
mov
ret
mov
in
xor
test
pop
fldenv
mov
mov
lds
lods
xchg
mov
mov
mov
repnz
inc
or
movsl
mov
out
dec
pop
inc
or
jg
and
inc
mov
iret
pushl
xchg
movsl
test
daa
jne
aam
icebp
scas
or
divb
sub
add
stc
rclb
add
insb
das
ss
push
jae
outsb
mov
mov
lahf
add
je
jns
movsb
dec
repz
cltd
pop
iret
inc
je
hlt
xor
repz
push
xchg
pop
outsb
push
ljmp
mov
dec
clc
xor
ret
cmp
sub
xchg
jl
xor
test
ret
jnp
inc
sub
cmp
push
inc
dec
pop
jge
add
lret
aad
mov
ljmp
mov
daa
add
pop
jns
jb
mov
cmp
and
cwtl
ret
imul
mov
mov
push
pop
jns
cmp
test
push
pop
sbb
adc
data16
js
ljmp
jg
add
pop
sub
sbb
pmaddwd
sub
std
outsb
jne
push
sbb
repnz
push
sub
sbbb
jno
pop
push
xor
test
das
lret
or
cmp
mov
and
stos
lret
out
cmp
outsl
outsl
pop
mov
push
adc
dec
sar
mov
scas
cmc
cmc
pop
xor
enter
pop
jno
in
inc
imul
in
filds
out
aas
cwtl
jns
cltd
gs
rcrb
jg
xchg
in
je
std
and
test
add
cmp
out
xchg
add
repz
cmp
adc
js
daa
jmp
aam
inc
and
out
mov
repnz
add
sub
out
adc
sar
dec
pop
push
out
pop
std
out
xchg
out
cltd
push
sub
cs
cmp
inc
pop
jb
sbb
cltd
pop
jg
mov
jmp
outsw
cwtl
stc
div
jns
xchg
bnd
adc
xchg
mov
fisubrl
ljmp
cmp
sbb
adc
pop
dec
sti
mov
push
sub
shrl
enter
push
mov
rol
and
mov
in
popf
sbb
fildll
or
subl
repz
cmp
mov
and
or
pop
jo
add
repz
hlt
enter
popa
jnp
je
in
mov
or
and
or
cs
ret
pop
aam
loop
push
mov
daa
or
adc
int3
sbb
pusha
xchg
ret
sub
cmp
in
pop
adc
xlat
imul
push
int
mov
cmpsb
loopne
fstl
call
mov
mov
shl
fimull
cmp
std
loopne
das
inc
aad
add
lea
and
adc
pop
push
xchg
adc
inc
cmp
dec
mov
push
arpl
pop
subl
and
out
in
sarl
fdivl
pop
outsl
push
lahf
add
cmpsb
imull
sub
shl
jns
jns
rcl
inc
mov
cmpsb
pushf
int3
add
xchg
dec
cmp
pop
imull
aaa
mov
loopne
lea
out
lock
mov
cmp
leave
ds
mov
aam
mov
jge
jle
pop
pop
shl
mov
ret
out
cmpsl
dec
aam
dec
cmpsl
push
add
pop
ja
dec
sbb
and
lds
ds
or
push
adc
push
or
dec
icebp
daa
jb
hlt
push
jecxz
and
sub
lds
xor
outsl
and
shrb
lods
sahf
add
xchg
cmp
xchg
jne
ret
std
sti
xchg
add
adc
sbbl
ljmp
cmp
stc
sbb
push
cltd
ret
inc
outsl
inc
dec
cmpsb
lea
lret
sub
xor
mov
xchg
fwait
adc
out
insl
pushf
pop
jmp
inc
outsl
into
adc
mov
pop
xchg
addb
jmp
mov
sbb
mov
aaa
add
mov
xchg
inc
xchg
clc
dec
xchg
push
jno
mov
lock
mov
xchg
sbb
add
iret
cmp
mov
lds
cmp
rorb
xchg
xor
int
mov
dec
shrb
notl
mov
mov
adc
sub
lret
jge
push
add
jp
es
xor
xor
add
dec
push
fld
mov
fstl
jne
addr16
xchg
out
pop
mov
jbe
mov
nop
sub
je
pop
mov
inc
daa
mov
lret
lods
cld
mov
push
dec
cmpsl
dec
shrb
sub
fldt
sub
sbb
loop
adc
add
imul
mov
enter
aaa
xor
outsl
adc
push
movsl
aad
out
imul
add
mov
js
push
les
sbb
loopne
and
adc
xorb
pop
push
call
or
and
out
arpl
movsb
push
pop
in
adc
into
daa
pop
dec
mov
add
push
repz
mov
cmp
pop
lcall
or
and
sub
jmp
pop
xor
pop
mov
out
das
mov
sbb
adc
push
cld
adc
call
pop
leave
cmp
mov
fnstenv
push
jo
xlat
mov
das
das
or
dec
sub
test
out
pop
xor
pmaxub
shll
mov
rolb
inc
xchg
popf
arpl
in
xor
dec
std
mov
xor
movsl
ss
push
adc
sub
call
stc
movsl
in
or
pop
pop
orb
icebp
test
xchg
lcall
push
add
add
adc
cmp
pop
xor
cs
add
mov
mov
adc
lret
call
ja
and
inc
jmp
jp
repz
fadds
xchg
pop
je
cmp
pop
repz
inc
jne
gs
add
pop
mov
or
or
loopne
jo
les
xchg
dec
andb
dec
pop
and
aas
and
or
dec
loope
adc
xchg
lret
pop
cltd
test
xchg
movsl
xchg
xlat
sbb
mov
fs
or
test
gs
fildll
dec
test
daa
xor
mov
mov
int3
addr16
hlt
repnz
aam
jns
les
xchg
jg
fwait
push
jp,pt
aaa
test
dec
and
cwtl
mov
pop
arpl
mov
xchg
sub
arpl
push
mov
push
xchg
push
inc
xchg
cmp
fmul
pusha
pop
mov
jb
push
mov
fnstcw
dec
mov
and
pop
jle
ret
sbb
outsl
fwait
orb
inc
xchg
push
mov
popa
das
cmpsb
in
cmpsb
loopne
out
pop
ljmp
outsb
sub
adc
lahf
rclb
iret
cmc
fisubrs
in
fstpl
add
dec
icebp
pusha
sbb
pop
xchg
sbb
jge
sarl
xlat
mov
lods
xchg
lret
sbb
repz
ret
pusha
out
es
in
xor
cmp
add
mov
movsb
jg
or
xor
icebp
bound
cmp
movsl
lahf
lret
out
inc
pop
jbe
shrl
adc
cmp
mov
cmc
int
sbb
jle
test
and
xchg
test
std
mov
sbb
roll
mov
hlt
movsl
and
lea
jg
fldl
pop
dec
cmp
sub
out
cmp
daa
xchg
fistl
mov
scas
out
into
pop
arpl
sub
push
fs
outsb
in
in
xlat
dec
aad
mov
dec
add
and
pop
movsl
orb
xor
incb
insl
push
add
in
jb
bound
xlat
das
sbb
adcl
inc
orl
ret
mov
add
and
aam
jnp
push
pop
xor
in
and
push
pop
out
xchg
pop
mov
xlat
mov
adc
ficomps
gs
pop
imul
mov
aaa
push
push
mov
dec
in
rorl
mov
mov
pand
loope
sbb
popf
xchg
iret
stos
loope
mov
fwait
mov
jge
xor
in
lods
push
out
loop
pop
pop
mov
inc
sub
jge
xchg
jns
push
dec
scas
dec
cmp
loope
and
insb
push
shrl
lret
jns
inc
cli
adc
sub
xchg
cmp
jae
loope
repz
popa
outsl
fcomp
lret
andl
mov
push
push
add
xor
sub
mov
sub
loope
mov
lcall
lds
lea
dec
push
and
push
mov
adcb
icebp
sarb
xor
jae
xor
cmp
scas
mov
cmp
fnstcw
adc
rorb
add
dec
mov
mov
cmp
ss
or
mov
cmp
jnp
jb
stos
ja
int
aaa
lcall
outsb
and
mov
sbb
insl
test
idivb
rorl
test
xchg
fisubl
fs
loope
xchg
fs
cmpsl
pushf
mov
lahf
stos
fisubl
out
jns
xchg
lret
incb
cmp
aam
mov
test
out
aam
test
fldenv
mov
fwait
mov
push
xchg
cs
aad
inc
data16
pop
or
imul
scas
fs
sarl
inc
cmp
icebp
loop
outsl
jmp
test
and
je
ss
ret
push
lret
repnz
lret
rolb
daa
mov
or
and
dec
testl
jp
jne
pop
mov
pushf
jge
mov
es
sub
pop
pop
xchg
in
ret
ret
push
int3
aam
stc
xor
sbb
jmp
mov
push
mov
xor
jmp
mov
push
pop
cli
jge
int
idivb
sti
ficoml
cmpsb
stc
push
rol
cmc
fs
faddl
mov
stos
jae
mov
stos
dec
push
enter
push
mov
or
call
jne
shrb
pop
movsb
adc
jbe
xor
push
aas
push
lahf
imul
aam
push
cld
cmpsl
cwtl
xchg
inc
adc
icebp
scas
daa
inc
int3
arpl
insl
js
int3
lahf
push
push
cmp
xor
scas
or
push
ret
aad
jg
icebp
rep
into
push
sub
outsl
dec
es
imul
jne
pusha
gs
jg,pn
imul
push
insl
rclb
inc
jbe
arpl
push
jecxz
push
pop
add
outsb
push
in
vmovups
idivb
add
sahf
pop
test
orl
mov
inc
push
in
sub
lcall
aad
aaa
nop
shll
mov
mov
cmc
sar
icebp
into
push
test
rorl
fcmovnu
in
add
pop
jmp
jns
push
insl
xchg
dec
cmp
lahf
or
push
int
mov
xchg
dec
aaa
cmpsb
int
adc
sbbl
adc
nop
shll
fisubs
in
sub
sub
test
fdecstp
xor
mov
or
sarl
push
or
and
pop
pop
mov
push
mov
jecxz
push
xor
pop
jg
mov
push
loop
xor
ret
fistl
fsubl
and
out
or
push
dec
pushl
insl
hlt
mov
cmpsl
in
pop
jno
push
imul
add
or
jp
imul
mov
pop
and
orl
sbb
movsl
xchg
std
ljmp
mov
repnz
fldcw
mov
xor
cli
adc
jns
pop
xchg
andb
cmpsb
and
fwait
jo
jmp
push
addl
iret
sbb
int
mov
outsb
sub
pop
roll
out
adc
jg
sbb
mov
loop
in
lcall
pusha
sbb
pop
je
je
sahf
mov
dec
dec
jl
jle
jl
jno
fsubl
lcall
cmp
add
lods
inc
cltd
and
popf
sbb
sbb
xchg
std
sbb
pop
sub
jbe
out
sbb
loopne
test
mov
sub
arpl
inc
mov
push
je
lahf
orl
inc
mov
pop
out
test
add
dec
jns
addr16
sub
cmpb
arpl
orb
push
dec
inc
loopne
outsb
filds
push
out
cwtl
movsb
in
ljmp
mov
dec
lret
leave
xor
xchg
pop
push
addr16
or
sbb
sti
add
in
pop
hlt
jb
nop
pop
and
push
cwtl
pusha
movsb
mov
xor
imul
mov
inc
sbbb
mov
movsl
mov
stos
out
mov
sbb
stc
xchg
cmpsb
xchg
xchg
subl
mov
clc
jne
insb
pop
and
push
jp
adc
mov
push
push
cmp
fwait
std
xor
lock
mov
insl
outsl
push
das
mov
xchg
push
pop
add
lahf
mov
cmp
pop
jle
jmp
fildll
leave
out
shl
notb
mov
adc
mov
sahf
outsl
outsb
sub
fdivs
add
stos
xor
dec
pop
cmp
repz
ss
add
outsl
repz
and
out
xchg
mov
jnp
adc
in
adc
pop
lahf
xor
addl
popa
pop
sbb
xchg
sbb
arpl
jp
aad
sti
adc
call
daa
repz
mov
sbb
fwait
or
outsl
cmp
mov
mov
repz
rcrb
call
das
aas
xor
dec
pop
ret
call
pop
js
out
or
pop
call
mov
mov
ret
cmp
fdivs
xchg
mov
sbb
ljmp
stc
jp
sbb
inc
sbb
js
and
add
sub
add
pusha
testl
or
outsl
int3
pop
vpmulhw
cltd
inc
pusha
out
inc
push
scas
cld
inc
outsb
inc
ret
movsb
pop
inc
or
xor
stc
repz
ja
add
mov
ret
enter
test
jo
jbe
movsl
mov
adc
mov
pusha
cmp
rcr
sub
shl
les
ds
std
sbb
imul
xchg
stos
movsl
mov
xor
lret
scas
inc
dec
add
xchg
test
mov
mov
fbstp
xlat
or
sbb
push
int
nop
jo
cwtl
push
pop
movsl
sahf
pop
int3
jg
fdivp
pop
sub
sbb
push
and
int
xor
add
test
fs
pop
mov
or
xchg
lds
sub
sub
inc
jb
push
outsl
sbb
xor
and
es
jp
stc
fs
and
out
inc
dec
sbb
xor
test
lds
adc
mov
mov
aam
lods
xor
fs
js
push
xor
or
out
mov
adc
shll
sub
shrb
divb
insl
and
test
sub
sub
out
jmp
icebp
mov
xchg
shl
inc
aaa
movsl
mov
jle
fninit
mov
cmp
rorb
clc
mov
or
sub
inc
orb
hlt
iret
fcmovbe
mov
loopne
mov
stos
or
movsb
cwtl
jecxz
push
mov
or
fidivrl
xchg
fs
cwtl
fwait
cli
sbb
lods
inc
sub
movsl
jno
mov
sbb
inc
push
lret
loop
sbb
rcrl
jns
out
and
mov
or
dec
lretw
mov
mov
mov
stc
int
gs
jle
insb
outsb
lods
cwtl
sub
dec
xchg
divb
add
adc
and
add
cli
arpl
or
mov
mov
pop
imul
cld
sbb
pop
xchg
rdtsc
ljmp
sbb
test
fists
pusha
jne
aam
mov
daa
inc
add
sbb
addl
or
hlt
push
mov
xchg
sbb
mov
push
inc
mov
jns
adc
cmp
inc
scas
push
adc
adc
mov
cli
pop
leave
rcrb
in
daa
jmp
add
int3
mov
or
inc
ds
inc
icebp
fistpl
pop
jbe
sbb
lds
leave
adc
test
pop
mov
pop
push
sub
push
xor
daa
hlt
ljmp
dec
dec
cld
jmp
nop
or
dec
sbb
cmc
and
mov
cs
cmpl
or
and
andb
dec
lock
cmc
adc
jge
rcll
cltd
inc
pusha
xchg
ret
adc
push
pop
aaa
jle
jno
lods
incb
cs
mov
insb
js
inc
mov
adc
jb
aad
rolb
clc
lret
scas
lret
int3
ss
cmp
push
ss
push
mov
aaa
jecxz
and
insb
insl
out
cmpsl
fbstp
outsl
aas
test
dec
xor
scas
das
int3
cld
and
push
mov
imul
adc
mov
xchg
ret
mov
nop
les
push
xor
shrl
in
cmp
inc
inc
pop
jg
mov
jecxz
xchg
les
xor
mov
mov
sub
push
xor
and
xor
pop
sbb
cmpsb
jle
pusha
cmp
jns
insb
jge
or
mov
cmp
jp
inc
xor
gs
out
icebp
pusha
das
xor
fstp
jns
or
sbbl
jmp
jg
out
gs
repnz
and
aaa
movsb
vaddsd
insb
jmp
stos
jne
in
into
leave
inc
cmc
cwtl
ds
xchg
dec
xor
sub
or
mov
out
xchg
lea
xchg
cmp
mov
adc
loope
outsl
sub
xchg
lock
aam
xor
adc
cli
cmp
movsl
popa
pop
pop
add
enter
faddl
lret
cli
sub
imul
imul
mov
push
lret
shrl
ljmp
mov
fimuls
cmp
sub
or
mov
aam
adc
mov
stos
or
sub
dec
mov
cmc
scas
arpl
hlt
mov
rcr
push
mov
adc
push
in
in
sbb
pop
arpl
bound
xchg
dec
or
fisubl
pop
aad
adc
sti
andl
loope
lods
insl
pusha
fadd
adc
mov
mov
out
lods
repz
arpl
in
loope
or
lea
bnd
and
int
push
out
lret
in
test
pop
mov
in
push
outsl
lds
xor
ficomps
mov
inc
test
add
dec
mov
push
lea
lret
mov
push
icebp
sbb
cwtl
xchg
push
cs
repnz
dec
push
jg
mov
and
test
iret
cmpl
push
inc
pop
jle
daa
pop
xor
xor
out
mov
cmpsl
dec
lret
cmp
fmul
faddp
fcoml
or
enter
fmulp
push
aas
pop
sub
xlat
push
loope
movsb
aas
shrl
ljmp
add
imul
into
insb
fidivrs
xchg
pop
fwait
sbb
push
inc
dec
data16
xchg
int3
dec
cmp
cmpsl
cli
mov
jb
pop
cs
cltd
jmp
gs
push
push
sahf
inc
fstpt
cmp
lahf
inc
mov
loope
mov
ljmp
aas
jg
test
mov
cmp
int3
out
xchg
sti
hlt
aad
in
repnz
out
pop
mov
fidivrl
mov
not
addr16
push
sahf
mov
and
stc
or
sub
ret
cmp
fists
outsb
ds
incl
daa
add
lahf
xlat
mov
or
les
add
xchg
mov
xchg
std
sub
movsl
xor
nop
push
cltd
push
xor
mov
test
dec
or
fbld
add
int
jns
pop
call
xor
xor
pop
clc
mov
dec
jmp
outsb
dec
jecxz
scas
xor
mov
test
mov
pop
jo
lret
or
je
add
mov
jecxz
inc
push
xorl
sub
mov
xchg
cmpsl
mov
dec
cmp
jne
jno
dec
lods
mov
mov
inc
or
stc
sahf
pop
mov
ret
inc
insb
int
mov
je
sub
cltd
sbb
movsl
add
scas
add
mov
sbb
nop
mov
scas
mov
mov
cld
mov
xor
std
insl
xchg
ret
mov
pop
sarl
sub
mov
xchg
or
jae
pop
sub
je
jg
or
enter
mov
lods
sbb
data16
scas
scas
mov
ja
jb
int
int
fnstcw
sub
fs
pop
mov
mov
adc
leave
and
test
inc
sbb
mov
filds
cltd
dec
mov
inc
xchg
sbb
scas
jg
int
jmp
sub
dec
adc
ljmp
push
ficoms
or
mov
xchg
cmp
cmp
lret
push
jmp
or
ds
sbb
stos
pop
jecxz
movb
or
insl
mov
ds
popf
in
push
push
and
add
ja
stos
cli
cmp
mov
cmp
fs
xchg
jb
fbstp
push
je
xchg
push
xchg
popf
pushf
dec
lods
xchg
lock
add
mov
xchg
push
xchg
adc
jb
lret
repnz
inc
insb
adc
mov
push
mov
pop
and
fildl
leave
cld
movsb
mov
sbb
imul
imul
xor
mov
cli
insl
sbb
xor
jge
sub
les
stos
iret
mov
or
pop
cmp
inc
dec
cld
adc
xchg
in
or
cmc
mov
or
in
jge
rorl
jg
lock
les
pusha
lods
sbb
ja
int
push
pushf
cwtl
pop
scas
xor
lahf
leave
mov
adc
test
jae
es
mov
insb
js
or
outsb
lret
aad
mov
and
mov
rcrb
jae
call
jno
xchg
ret
xchg
add
lret
mov
push
add
mov
das
cvtdq2ps
inc
mov
push
mov
repz
inc
nop
cmp
int
sub
mov
lds
loope
pushl
aas
xchg
imul
test
mov
dec
inc
test
mov
mov
jecxz
mov
fwait
in
dec
adc
hlt
jne
mov
icebp
gs
cmp
push
and
nop
pop
pusha
stc
lret
add
adc
mov
add
repnz
repz
cmpsl
jbe
jae
mov
mov
paddb
in
pop
dec
push
loope
pop
fmuls
add
into
subb
popa
roll
hlt
mov
ss
xor
sub
jo
xor
inc
or
enter
into
add
mov
in
xor
and
hlt
push
es
mov
pop
aad
stos
jno
jl
aaa
and
or
sti
repz
xlat
pop
dec
or
out
addr16
pop
pushw
andb
inc
inc
clc
js
fwait
in
or
cmp
push
mov
add
hlt
mov
out
in
aaa
movsb
in
aad
or
xchg
and
lea
mov
je
mov
mov
push
cmovp
sub
push
xchg
stos
leave
ss
lcall
lea
push
mov
ffree
mov
xor
addl
ljmp
jo
and
xchg
mov
repz
shlb
xor
inc
push
stos
mov
xor
xor
fisttpl
dec
cmp
inc
ret
in
pop
xorl
xchg
leave
js
int3
mov
inc
add
ljmp
mov
gs
insb
aam
sbb
mov
cmp
and
mov
and
mov
mov
push
outsl
addr16
mov
rorb
push
jns
pop
push
pop
pop
into
sti
lods
aas
outsb
xchg
mov
addr16
mov
daa
xchg
clc
ret
jne
cmpsl
push
aad
xchg
and
sbb
stos
mov
fmuls
or
test
adc
dec
xchg
and
scas
lds
out
out
push
iret
jmp
pop
std
add
fmuls
enter
imul
dec
xor
test
icebp
jno
and
mov
mov
addr16
sbb
mov
shl
mov
fists
push
movsb
push
jg
call
les
ja
jne
mov
jne
bnd
or
loopne
mov
cmp
jae
adc
cmp
inc
fcomps
jmp
into
or
xor
rcrl
dec
push
sbb
or
xchg
inc
int3
xor
popa
inc
jnp
cmp
test
dec
and
insb
push
jge
into
insl
adc
je
and
lret
arpl
mov
cmp
xor
mov
push
iret
fidivrs
cs
in
add
sarb
shl
dec
jno
scas
je
inc
mov
and
outsl
dec
js
fwait
mov
xchg
aam
imul
mov
mov
dec
mov
jg
dec
lock
xor
pop
in
pushf
lcall
mov
repz
jecxz
push
mov
sub
xchg
lret
sbb
cld
jae
and
xor
insl
dec
pop
fldt
jmp
dec
cmp
daa
dec
in
es
dec
pop
mov
jne
bndldx
into
roll
mov
or
sub
cmpsb
std
push
leave
cli
ret
or
pop
or
ret
mov
sahf
clc
cmp
xchg
rcrb
fsubp
cld
sbb
mov
in
int3
lret
decl
lcall
les
adc
popf
jle
jns
enter
mulb
push
test
js
out
add
out
mov
popa
and
test
xor
outsl
push
adc
xor
cs
push
mov
movsl
add
pop
cli
mov
in
inc
push
sbb
imul
sub
rorl
mov
sbb
mov
popa
out
dec
sub
ret
fnstenv
dec
icebp
les
fnstsw
cmp
lea
int
mov
mov
pusha
popa
jg
sub
add
mov
add
rcll
popa
scas
and
inc
shll
into
pop
add
adc
dec
cmp
movntq
add
jbe
insl
ljmp
mov
popa
jae
pop
mov
fisttpl
mov
mov
mov
stos
sub
std
or
xlat
xchg
cmp
mov
test
and
pop
pop
jns
push
cld
mov
imul
loop
sub
gs
stc
scas
mov
data16
testb
pop
int3
in
mov
popl
push
cltd
dec
stos
xchg
lods
fwait
cmc
and
mov
mov
mov
gs
cmc
lods
sarb
and
jae
lahf
loopne
xchg
fistl
and
das
cwtl
incl
inc
xor
outsl
inc
jle
mov
pop
fildll
mov
push
pop
lret
xor
iret
dec
sbb
ss
xor
rolb
ljmp
pusha
loopne
adc
call
aam
mov
push
push
leave
push
fistl
jmp
imul
jno
ds
jbe
sbb
sub
pop
jecxz
inc
xor
pop
xchg
jns
jnp
mov
add
dec
clc
sub
mov
inc
lret
xor
out
dec
fiadds
mov
mov
mov
push
mov
lcall
mov
mov
movsl
cmpsb
call
sub
sbb
das
ficoms
jb
sub
dec
popf
jo
call
inc
or
cld
aas
out
jecxz
popf
add
fstpt
push
sbb
mov
mov
sarl
push
fninit
xor
sub
inc
ja
mov
push
push
mov
sbb
push
dec
dec
stos
aas
pop
mov
nop
lods
ss
movsb
jge
rol
mov
outsl
mov
andb
pop
dec
lea
and
mov
rclb
daa
sub
and
les
hlt
cmpb
adc
test
adc
rcll
ds
mov
sbb
jecxz
xchg
fidivrs
and
lods
mov
rolb
mov
enter
sub
push
mov
andl
inc
ja
fstl
cld
movsl
cwtl
jnp
jecxz
adc
adc
sub
and
jbe
fsub
or
and
xchg
psubsw
jg
xchg
adc
jge
js
sarl
lret
cltd
or
sbb
insl
pop
hlt
jecxz
insl
in
dec
mov
mov
mov
les
jg
add
mulb
jno
hlt
adc
push
sbb
insb
out
inc
lods
test
jo
cmc
push
cli
rcrl
sbb
mov
fcompl
push
xchg
and
sbbb
cmp
out
jns
mov
imul
loop
test
inc
mov
adc
pop
test
sbb
scas
insl
cmp
arpl
jl
out
aad
inc
add
xor
mov
sub
test
add
push
pop
rcl
ljmp
sub
fldcw
dec
cmpsl
adc
mov
dec
mov
arpl
sbbl
cmpsl
aas
xchg
lcall
lea
out
les
xor
lds
pop
pop
lret
jg
xor
test
xchg
gs
mov
mov
repz
cwtl
push
clc
into
rorl
mov
xor
rep
fcompl
daa
pop
pop
mov
push
bnd
fs
push
fadds
cmp
rol
leave
jnp
sub
lcall
mov
lret
push
jmp
jl
inc
out
mov
pop
push
push
mov
xchg
sbb
andl
cmpsl
push
test
rcr
xchg
mov
or
push
jo
jbe
shl
ret
cli
adc
mov
cmp
mov
inc
aaa
in
cli
xchg
mov
negb
mov
in
and
xor
js
jge
sbb
inc
mov
inc
adc
jp
lods
xchg
cmp
mov
cltd
jno
push
movsl
mov
int3
ds
dec
insb
aam
mov
in
repz
fcoms
push
insl
mov
dec
xchg
mov
dec
cmp
pop
xchg
adc
pop
sti
push
cltd
out
cmp
dec
les
mov
in
sbb
push
sub
stos
push
adc
loope
add
cmp
lret
adc
daa
ss
rorb
es
cld
xor
sbbl
mov
pushf
mov
inc
into
int
jge
popf
sub
adc
xor
sbb
mov
outsb
nop
mov
sti
cwtl
dec
pop
popf
std
divl
loop
andl
and
push
dec
cmp
in
pop
xlat
or
or
cmpsl
mov
push
xchg
leave
je
fldt
sub
dec
out
or
sar
cmpsl
fistl
xchg
popf
fwait
add
sbbb
sahf
jp
movsl
cld
jbe
imul
loope
iret
adc
or
push
cmpsb
jae
xor
mov
mov
pushf
les
pop
lahf
in
inc
sbb
fwait
cltd
int3
push
dec
mov
daa
aad
std
mov
out
mov
out
push
mov
and
mov
mov
sbb
mov
pushf
add
rorl
sub
inc
nop
push
dec
lods
fildll
inc
hlt
adc
imul
ret
loope
int
cld
cwtl
push
mov
adcl
pop
fwait
sbb
adc
push
call
leave
roll
stos
add
fdivs
scas
pushfw
push
loope
push
pop
cld
cmc
sbb
es
inc
xorb
sbb
imul
leave
out
fisttps
fimull
dec
mov
jle
pusha
in
mov
repz
fstps
fstpl
or
call
icebp
mov
daa
dec
inc
js
cmpsl
test
stos
jmp
stos
jae
nop
mov
enter
pop
inc
xchg
pop
push
jmp
gs
flds
sub
es
iret
enter
lretw
adc
add
outsb
cmp
mov
jns
shlb
mull
pop
jg
cmp
out
xor
jbe
inc
xchg
imul
xchg
iret
cld
add
and
aad
xchg
and
sub
mov
jmp
cmc
xor
sbb
clc
and
movsb
shrl
sti
daa
call
dec
sbb
aam
adc
mov
jb
enter
rorb
mov
fnsave
aaa
sbb
loopne
fldt
adc
rol
or
pop
mov
xchg
pop
sub
test
iret
dec
scas
inc
and
fidivrs
and
push
xchg
pop
inc
stos
inc
outsb
pop
pop
in
and
test
pop
xchg
insb
cli
lea
das
adc
cmpsl
mov
xchg
mov
push
add
mov
stos
test
cmpsl
xor
cmpb
aam
mov
je
sbb
ja,pn
insb
jecxz
mov
ficompl
dec
mov
push
pop
jge
jne
hlt
sub
jns
mov
cltd
cmp
mov
sbb
fadd
repz
cmp
push
push
inc
pusha
pop
mov
ficompl
sbb
push
out
sbb
pop
bound
push
push
xchg
xor
leave
or
mov
scas
adc
xchg
aas
xor
hlt
clc
and
lcall
sub
add
inc
ljmp
jns
pop
jge
cwtl
mov
fisubl
mov
test
loop
adc
mov
arpl
mov
std
dec
leave
mov
jbe
or
popa
roll
mov
pop
adc
sub
arpl
mov
sahf
stc
loopne
xchg
pop
mov
xchg
outsb
sahf
fdivr
bound
mov
lods
xchg
das
mov
roll
xor
subl
fsts
sbb
xchg
adc
lea
and
push
or
and
sbb
call
and
mov
call
jecxz
sub
mov
mov
inc
and
mov
movl
paddsw
sub
xlat
xchg
push
movsb
addb
addr16
pop
lahf
and
sbb
and
hlt
rol
xor
stos
xchg
mov
cmp
mov
sub
gs
addr16
dec
stc
sub
xchg
mov
ret
into
test
fiaddl
lods
mov
jno
jecxz
daa
or
jb
cmp
subb
out
pop
jo
cltd
mov
cltd
movsl
mov
mov
xchg
call
xchg
ljmp
inc
adc
xor
lea
cmp
lods
or
push
andl
push
nop
sbb
push
push
sarb
popl
clc
jae
int3
sti
push
mov
movsb
sbb
cmp
cmc
lcall
int
cwtl
cmc
testb
or
shll
insb
out
mov
xchg
push
aas
sbb
cmc
and
mov
or
dec
ja
xor
jae
cltd
sarl
jp
popl
push
loop
jle
sub
mov
pop
lret
les
insb
cltd
insb
repnz
inc
dec
jns
pop
inc
jnp
or
das
sbb
out
adc
inc
cmpsl
xchg
jns
dec
es
cmp
aad
sub
test
pop
mov
cmp
outsl
fistpll
test
sbb
sbb
lret
dec
stc
ljmp
jp
xor
push
notb
cmp
notl
pop
scas
push
arpl
repz
or
inc
popa
pushf
not
mov
das
lcall
and
test
adc
out
mov
add
je
add
repz
insb
jmp
xchg
mov
fdivrs
mov
cmpsl
xor
jmp
call
sub
int3
pop
inc
xchg
shrb
jo
mov
enter
push
cwtl
testl
lret
sbb
sahf
inc
lret
sub
andl
iret
pop
jb
dec
pop
js
shr
fdivrl
in
fisubrl
jmp
cmp
pop
lods
add
aas
sbb
test
shrb
out
sub
mov
cs
mov
xor
shl
inc
cmp
mov
inc
bound
push
aam
mov
add
inc
and
jnp
ja
cmc
mov
jp
pop
imul
les
data16
sbb
jmp
jbe
push
test
add
test
jo
cmpl
sbb
xchg
dec
std
mov
cwtl
xchg
out
nop
inc
jbe
sub
cmp
mov
mov
shrb
sbb
jae
loope
loopne
mov
addr16
lret
sbb
inc
into
and
in
je
repnz
mov
lods
es
sub
and
inc
jge
cli
cmc
push
mov
mov
add
jge
push
cmp
or
fstpt
insl
pop
icebp
lods
push
hlt
arpl
cli
repz
lret
dec
repz
push
pop
ja
lret
outsb
rorb
pop
inc
sub
test
push
pop
mov
pop
adc
mov
add
mov
mov
xchg
sbb
in
mov
out
movsl
xchg
xchg
cld
jb
and
mov
roll
lret
jge
in
fnstsw
in
aaa
xchg
dec
fwait
in
pop
mov
push
pushf
in
outsb
push
loope
fst
neg
push
pop
jne
cmp
add
std
cmp
in
xlat
and
xchg
out
xchg
add
movsb
adc
cmpsb
nop
mov
xor
jmp
sbb
scas
cmc
mov
xor
test
dec
and
sub
mov
test
lock
dec
xchg
in
sbb
test
sbb
in
leave
fwait
pop
or
mov
adc
push
std
mov
loop
jmp
jmp
push
dec
cmpsb
notb
push
xchg
ret
gs
ss
lock
xchg
push
jnp
mov
lods
sbb
jnp
icebp
decl
push
popa
scas
loop
stos
ret
and
push
jg
fs
out
stos
mov
cmpxchg
dec
sbb
lcall
cmp
subl
cltd
fmull
in
sahf
and
mov
pop
cwtl
and
adc
jmp
dec
rolb
ja
xchg
loop
sub
jg
cmp
xchg
pop
dec
xor
rcll
xchg
inc
adc
xchg
cmp
mov
popa
pop
jmp
scas
scas
add
sbb
push
insb
sub
popa
arpl
outsb
fnsave
jae
push
test
pusha
aam
push
add
xchg
pop
inc
xchg
jmp
pop
lods
out
jmp
jmp
popa
int
push
mov
out
inc
dec
adc
add
cmpb
inc
pop
out
xchg
rclb
into
idivb
pusha
out
pop
pop
and
sub
mov
jl
inc
cs
pop
mov
jg
jl
fisubrl
and
stos
rorl
addl
scas
int
out
insl
test
bound
mov
xchg
ret
ret
mov
mov
cs
imul
hlt
inc
fs
xor
mov
pop
fdivp
ss
jae
test
cmp
sbb
rclb
push
imul
xchg
cmpsl
in
cmp
enter
lock
dec
cs
pop
int3
ja
pushf
js
adc
loop
mov
push
sahf
mov
xchg
cmp
stos
sbb
call
je
lret
in
mov
pop
adc
les
fisubl
sbb
addl
lock
icebp
into
dec
xchg
xor
add
push
sub
add
stos
in
push
stos
pop
shl
mov
ficompl
data16
stos
mov
jno
scas
and
sahf
jp
out
inc
sti
or
icebp
test
leave
xor
jge
aad
push
and
push
bound
loopne
inc
outsb
xor
lcall
popa
mov
pop
in
add
push
adc
andl
divb
sbb
jge
mov
test
pop
pusha
outsl
inc
mov
fbld
in
pop
mov
add
inc
lods
aas
dec
dec
adc
cmp
enter
in
insb
repz
push
notb
cs
fdivs
dec
push
jmp
push
jmp
lods
daa
ret
pop
aaa
repnz
mov
jmp
and
push
and
cltd
subb
mov
sbb
icebp
dec
in
inc
in
jmp
sub
call
mov
std
ss
push
sbb
xor
sub
and
cld
adc
push
add
adc
cld
cmp
shrl
xor
lret
or
add
sbb
push
out
xor
cmpsb
xlat
lahf
test
or
mov
xchg
lret
and
sbb
inc
shrl
inc
lea
inc
push
xor
pop
xchg
push
sub
mov
pop
fstpl
xchg
push
stc
jle
jl
mov
loopne
rclb
inc
and
pop
in
enter
and
stos
inc
dec
xor
pop
xor
add
out
xor
fisubrl
pop
pusha
std
aam
dec
jmp
fnsave
das
jmp
mov
cmp
nop
xor
xor
pop
fstl
mov
push
mov
mov
mov
outsl
mov
xor
mov
push
push
arpl
xchg
xchg
cld
movsb
jle
inc
pop
or
fistl
fidivrl
xchg
cmp
or
or
das
xlat
add
dec
rclb
inc
inc
mov
mov
push
add
lret
stos
cmp
xor
lock
cmpsb
cmpsb
nop
xchg
ss
fcoml
cs
daa
sbbl
dec
jp
pop
aas
pusha
loopne
addl
jns
xor
rorl
push
bound
adc
pop
ret
int
fs
and
jl
mov
push
incb
sbb
clc
pop
xchg
inc
mov
lods
jg
xchg
or
sahf
xor
fisttpl
cmpsb
aas
into
insb
insl
dec
not
cmp
and
adc
lods
cld
pop
xor
call
dec
mov
lds
xor
loopne
imul
dec
jo
imul
pop
and
in
fstps
das
jmp
or
gs
or
ljmp
shlb
jp
lea
inc
ss
je
aaa
jecxz
inc
lea
cld
jmp
cmp
enter
lods
pcmpgtb
test
mov
lds
cmc
pop
mov
cld
cltd
add
loopne
inc
jne
int3
test
rcrl
stos
jp
daa
pop
sub
loopw
imul
icebp
pop
pop
out
das
scas
mov
ds
sub
fistpl
mov
lods
mov
xor
cmpsl
jae
sbb
pop
lods
xchg
xchg
daa
dec
notl
jno
lods
xchg
fcmovu
pop
cmpsl
sbb
cmp
aad
pop
and
cmc
stos
in
and
pop
push
mov
cmp
data16
cld
sub
cmp
adc
or
stos
rorl
mov
sbb
add
jnp
xchg
shrb
ret
fs
test
add
and
in
jae
mov
mov
aam
in
sub
adc
stos
and
mov
outsl
pusha
adcl
pop
movl
cltd
cs
pop
and
xor
jp
mov
pop
mov
pop
ljmp
jle
mov
outsl
pop
in
jl
rolb
adcl
popa
shlb
cmp
xchg
jecxz
xchg
enter
push
stos
pop
fwait
or
push
iret
lcall
jp
das
je
cmc
add
iret
xchg
mov
xchg
clc
test
rclb
dec
enter
mov
mov
mov
mov
icebp
cmp
push
verr
cmp
into
jns
int3
gs
sub
push
and
cli
clc
int
mov
pop
sub
pushf
jmp
adc
add
mov
dec
push
outsl
lods
push
fildll
fsubs
cmp
add
cmp
jns
cmc
sbb
mov
mov
or
push
les
jl
jl
call
push
push
fwait
mov
push
pushf
push
jl
pop
nop
adc
push
cwtl
scas
iret
adc
sub
bound
rcrl
rolb
jl
mov
outsl
rolb
mov
aad
mov
mov
inc
inc
js
cmp
icebp
push
inc
push
mov
sbb
in
ds
inc
sti
outsl
and
enter
or
cmp
inc
sbb
stos
push
mov
cmp
lods
cmp
out
and
sti
stos
gs
sub
pop
xor
arpl
fsubl
popf
les
lret
cs
jmp
mov
daa
xor
mov
adc
inc
mov
push
rcrl
pusha
jle
aad
sbb
and
test
std
and
add
out
loopne
mov
lret
and
iret
leave
pop
pusha
movl
int3
stos
shrd
cli
aas
in
imul
int3
adc
iret
adc
sbbl
lea
cld
mov
lods
sti
fnstsw
lret
xchg
inc
les
sub
clc
repnz
in
xorb
adc
mov
inc
pop
into
insl
outsb
cmp
aas
loope
sbb
dec
sub
push
lret
insb
xchg
xor
sub
and
out
sbb
add
pop
adc
mov
cmc
lods
mov
pop
xchg
inc
add
xor
cmp
lcall
jns
mov
in
out
icebp
or
iret
push
es
fbld
dec
mov
pop
outsb
push
and
aas
dec
fwait
and
jno
pop
outsl
push
mov
out
jle
nop
mov
mov
push
lock
roll
mov
xchg
ja
cld
push
int3
das
push
test
dec
or
test
sahf
mov
cmp
or
sbb
ja
aad
pop
leave
dec
fmul
loop
pop
rcl
aad
cmpsl
sub
arpl
mov
inc
mov
jp
push
mov
insl
arpl
cld
jb
std
adc
adc
sbb
mov
sub
cmp
xchg
jmp
jl
mov
push
mov
in
cmp
mov
addr16
fldt
movsb
mov
frstor
jecxz
int
addr16
int3
test
xchg
jno
insb
idiv
insl
outsl
cmc
les
stos
sbb
sarb
and
imul
jmp
pop
lret
and
mov
pop
mov
cld
outsl
in
push
xor
adc
cltd
sti
sbb
cmpsl
out
sbb
mov
into
inc
xor
xor
mov
sbb
das
add
icebp
mov
movsl
jmp
jle
scas
loop
or
add
adc
int
mov
or
adc
push
pop
fildll
mov
push
mov
aaa
ss
std
out
aaa
sbb
jae
mov
call
loope
lahf
lock
xor
popf
stos
inc
icebp
mov
mov
xor
int
cmp
xchg
inc
jmp
jg
push
sub
ret
int
imul
pop
mov
imul
pushl
jnp
test
pop
push
dec
lret
ficoms
push
xchg
stc
sub
mov
scas
shl
and
cmp
push
in
ljmp
sbb
xor
sub
lret
and
fldenv
pop
pop
add
int3
in
jp
or
sbb
rcrb
sbb
addb
mov
mov
into
loop
and
daa
or
lret
xor
inc
push
or
sub
sbb
push
jnp
xchg
pop
test
icebp
push
xchg
cwtl
into
bound
adc
in
dec
mov
cmpsl
xchg
push
cmp
jmp
ficomps
add
and
inc
push
mov
pop
mov
jb
in
mov
push
xor
clc
push
out
cmp
mov
pop
mov
dec
jle
push
mov
jb
pop
pushf
sub
jg
mov
fsubs
sub
pop
xchg
xor
sahf
xchg
popf
cmc
sbb
xchg
icebp
mov
xchg
sub
imull
lods
add
or
push
cmp
enter
add
lods
push
sahf
xor
push
jne
cltd
jbe
idiv
test
xchg
repnz
mov
sarl
lea
mov
into
test
xchg
loop
add
sub
adc
enter
cltd
mov
imul
and
mov
jp
test
jge
mov
cmc
dec
sbb
ja
fisttpl
mov
mov
add
pop
mov
rol
mov
add
mov
andb
cli
test
std
sub
test
leave
lock
cmp
dec
clc
daa
ret
pop
mov
arpl
enter
sbb
xor
int3
fsub
mov
inc
jge
and
dec
inc
cs
adc
test
add
xor
testb
and
dec
rol
mov
xchg
jmp
mov
inc
dec
shlb
fstpl
fldl
test
leave
push
int
fmull
pop
or
pop
sub
int
roll
lock
insb
mov
pop
fidivrs
xor
mov
stos
lods
jae
lcall
out
shrb
dec
push
shll
lds
mov
inc
ret
add
jmp
addr16
dec
or
out
mov
and
adc
push
or
out
xor
cmp
in
sub
pop
sbb
push
mov
insb
fsub
shl
mov
lods
jne
call
repz
push
test
jle
jnp
in
lret
cmp
and
push
mov
out
fiaddl
aad
dec
cwtl
and
jg
mov
pop
ret
jnp
daa
dec
jmp
lret
jno
mull
xor
sbb
or
idiv
shlb
xchg
stos
mov
dec
add
gs
jmp
pop
loope
pop
imul
out
inc
les
sbb
sbb
jb
arpl
adc
fcmovnu
push
in
mov
pop
push
mov
and
push
stos
rol
out
mov
in
mov
fidivrs
jns
in
leave
test
cmp
xchg
gs
pop
mov
push
flds
jmp
push
pop
mov
jb
mov
test
or
add
aas
adc
iret
pop
movl
jns
mov
lods
fisubrl
rolb
xchg
inc
out
adc
cmp
std
mov
std
cmc
jl
mov
dec
sbb
in
movsb
cltd
inc
daa
push
mov
sbb
loop
dec
sahf
xchg
sub
mov
enter
lods
dec
fwait
cld
es
stos
andb
nop
lcall
scas
int
adc
das
lds
insl
fnstcw
or
pop
in
leave
xchg
add
popa
mov
shlb
out
mov
mov
mov
mov
idivb
and
cmp
jno
int3
cmp
lret
cltd
mov
push
lret
xchg
scas
cmpb
pusha
lods
inc
imul
js
xchg
std
sub
fst
fisttpl
and
add
std
stc
sub
enter
dec
fnstsw
xchg
xor
iret
sub
mov
aad
outsb
mov
mov
insl
cld
les
push
xchg
dec
adc
sbb
js
movsb
outsb
aaa
lods
xchg
fldl
in
lods
mov
repz
test
jge
repz
mov
add
insl
aas
cmc
lahf
mov
js
imul
in
mov
add
shl
stos
ffreep
or
xchg
mov
mov
xchg
pop
ss
subl
xor
aam
in
loope
mov
xchg
lods
xor
pushl
stos
and
outsl
and
in
xor
add
adc
adc
sub
in
repnz
inc
fimuls
fildl
shll
dec
aaa
xchg
aad
in
pop
aam
std
lret
aaa
mov
dec
push
xor
jne
xlat
xor
and
addr16
mov
xchg
sbb
scas
pop
sahf
cs
in
movsb
pop
loop
sub
xorl
dec
xchg
js
loope
cld
inc
push
or
aaa
lods
jle
inc
push
fiadds
incl
call
and
bndldx
adc
jo
push
push
jno
jns
sahf
inc
fsubrs
aad
popa
std
cmp
lahf
aam
in
cs
jns
hlt
das
adc
das
pop
inc
das
daa
inc
das
push
mov
xlat
out
bound
fwait
dec
jle
insl
xor
sub
pusha
rcrb
fnstsw
push
add
add
pop
add
fldt
jecxz
aad
ret
sbb
mov
flds
arpl
pop
jp
xor
loopne
xlat
loopne
xchg
lret
sub
int
ds
push
or
dec
testl
aad
shll
clc
dec
push
cmp
lahf
xor
lods
jp
mov
in
ljmp
into
jo
imul
pop
jecxz
cs
fdivrs
iret
popa
ss
xchg
mov
jo
pop
cltd
dec
lret
push
xchg
xchg
dec
bswap
lds
loope
cld
jl
int3
mov
pop
outsb
push
clc
cmp
mov
sbb
jno
push
push
mov
fldcw
jae
test
cmp
xor
mov
push
outsl
enter
outsb
rolb
rclw
stc
pshufw
out
cs
jecxz
ret
inc
negb
out
testb
stc
or
jecxz
cwtl
push
push
sub
out
jmp
inc
arpl
pop
add
xchg
ficoml
loop
sub
outsl
and
sbb
or
in
inc
andb
ljmp
mov
xchg
outsl
repz
xlat
lahf
ret
bound
inc
pop
pop
pusha
and
movsl
call
cld
push
cmp
ret
mov
das
mov
mov
push
ljmp
push
std
pop
je
mov
jmp
fistl
adc
jecxz
loope
pop
push
xchg
mov
sbb
push
in
cmp
out
xchg
arpl
push
loop
xchg
adc
adc
mov
mov
sbb
jns
adc
or
inc
dec
out
jp
out
aad
fs
jae
cmp
rcrl
inc
mov
arpl
and
or
xchg
movsl
mov
stc
mov
pushl
cli
or
sub
test
rcrb
sbb
nop
loopne
icebp
dec
inc
jle
mul
sbb
xchg
lods
subb
ret
or
lock
ljmp
bound
push
int3
cmpsl
cmp
stos
gs
add
pop
mov
jecxz
testl
fs
cs
addr16
push
out
cmp
orl
testb
add
pop
aas
or
int3
lock
cs
push
add
test
inc
movsl
lret
cmp
stc
jo
scas
sbb
push
inc
insb
xchg
cmp
or
movswl
jne
scas
lahf
fsubl
mov
divl
lods
test
cld
out
pop
sbbb
or
fs
out
fimull
fcmovu
popl
jo
adc
in
and
xchg
push
out
sbb
xchg
nop
push
fnstsw
cmp
repz
scas
mov
imul
shl
mov
mov
sarb
pop
in
scas
pop
push
add
arpl
in
inc
pop
stos
subb
add
push
ret
push
mov
push
hlt
pushf
cmp
call
inc
arpl
inc
xorl
push
jo
lods
les
xor
out
mov
and
push
cmp
arpl
rcrb
pop
clc
push
pop
scas
stos
dec
push
xchg
xchg
mov
add
nop
call
scas
adc
sub
cltd
in
pusha
mov
cld
inc
testl
pop
mov
int
icebp
sub
lods
add
push
and
in
mov
mov
mov
lret
int3
xchg
or
pmulhw
mov
xchg
movsl
into
inc
out
clc
mov
stos
xchg
sar
jo
in
ret
jbe
popf
pop
inc
iret
leave
fildl
cmp
lahf
inc
cld
lock
add
mov
xor
dec
ret
cmp
scas
pop
cmpsb
lret
dec
xchg
lods
ss
jae
ret
call
enter
stos
sti
sbb
xabort
mov
stos
mov
movsb
adc
xlat
jmp
movsl
lock
andb
fs
xchg
pop
inc
mov
lahf
inc
mov
ret
stc
jmp
ljmp
es
popa
inc
mov
divb
dec
cld
jno
pop
scas
push
and
addr16
xor
mov
or
or
pop
in
mov
pop
sbb
and
roll
aad
mov
dec
sub
adc
push
sub
jb
adcb
iret
cmpsb
test
pop
push
push
xorb
jl
inc
or
push
out
push
jg
adc
jb
imul
sub
add
cmp
arpl
or
fisubrl
pop
rcrb
xchg
cmc
mov
inc
movsb
insl
or
adc
in
rcr
mov
fldt
sbb
adc
sbb
jae
push
or
div
dec
xlat
mov
adc
pop
push
test
cli
leave
pop
out
mov
mov
sbb
leave
punpcklwd
mov
mov
dec
out
loop
pop
cli
subl
je
clc
sub
jle
mov
sub
dec
jl
daa
cmc
cmp
fmuls
gs
push
daa
xlat
inc
mov
mov
push
push
or
adcb
fldcw
lcall
jl
das
push
das
pushf
jl
adc
xor
dec
popa
mov
int
cwtl
out
mov
popa
jmp
xlat
nop
pop
cmp
and
pop
sub
bnd
sarl
mov
sub
cmpsl
fnstenv
sub
mov
mov
inc
and
sub
out
ss
fstpt
mov
daa
mov
adc
add
ds
pop
popf
sub
jmp
dec
sub
push
movl
cmp
imul
test
xchg
stos
aam
dec
lahf
pop
sarb
mov
ret
jmp
adc
lods
push
jmp
out
leave
or
out
stos
scas
fucomip
inc
push
add
mov
add
fs
or
das
jecxz
pop
and
adc
adc
jecxz
shrl
sbb
push
xor
out
pusha
int
sub
out
jl
rolb
xchg
ficoms
add
lcall
fists
int3
in
hlt
mov
mov
sbb
xor
inc
inc
mov
test
lods
sbb
jp
cmp
test
lock
lret
pushf
repz
mov
test
fucomi
fidivs
insb
ljmp
dec
dec
cld
insl
stos
shl
sarl
dec
push
aas
mov
mov
mov
mov
or
in
arpl
mov
sub
mov
xchg
cmp
sub
xor
ds
push
mov
rcr
cld
cmpsl
subl
cmp
cmp
int3
xchg
inc
arpl
test
fnstenv
or
lret
ljmp
mov
flds
push
mov
mov
inc
dec
call
push
movsl
push
ds
adc
cld
sahf
mov
ficompl
pop
in
xchg
adc
jo
or
mov
mov
xchg
pop
jg
aad
pop
jl
cmpsl
xchg
out
das
out
xor
cmp
cmp
outsb
push
mov
addb
fcmovnu
pop
inc
jb
mov
cmpsl
pop
jo
mov
xchg
xchg
mov
leave
sub
jo
dec
xor
in
pusha
jge
pop
sahf
movl
push
into
es
pcmpeqw
inc
cmp
sbb
jle
mov
lcall
fcmovbe
adc
dec
out
imul
or
jecxz
push
sbb
hlt
push
and
fisubl
cmpsb
out
cmpsb
arpl
lds
out
jle
push
add
lods
notb
xchg
inc
adc
loopne
adc
jae
jns
jg
mov
adc
in
push
in
cmpsl
or
mov
jl
loop
in
iret
call
jo
imul
imulb
jecxz
adc
or
push
add
mov
sub
sti
adc
loopne
dec
test
imul
sub
adc
cmp
imul
mov
shrl
push
pop
push
test
adc
roll
mov
and
in
sbb
nop
push
and
and
push
jmp
arpl
in
cmp
xor
jae
stos
and
popf
mov
std
add
mov
pusha
imul
and
push
dec
out
pop
or
ror
mov
lock
jb
mov
and
gs
jp
cli
fwait
mulb
or
sahf
bound
mov
fnstsw
scas
xchg
xchg
inc
xchg
jecxz
loope
push
in
cmc
cltd
js
insl
xchg
rcl
xor
add
push
fimuls
sbb
or
out
xor
inc
hlt
or
imul
lahf
movsb
dec
addl
push
push
enter
push
mov
daa
push
stos
mov
xchg
add
pop
jp
pop
es
mov
mov
int3
cmp
sub
xchg
data16
cwtl
into
pop
gs
jae
mov
dec
xchg
dec
jmp
lods
imul
mov
cmp
roll
add
daa
mov
es
sbb
popl
popa
pushf
jne
jecxz
lods
mov
jae
clc
lahf
cmp
mov
call
in
pusha
aaa
inc
pop
jecxz
ja
clc
pusha
push
imul
xchg
test
cli
mov
out
test
jns
or
xor
xor
cs
call
lret
shl
imul
js
pop
mov
scas
adc
icebp
push
mov
fdivl
push
mov
sbb
xchg
cmc
add
sbb
mov
push
jne
cltd
jno
mov
mov
jbe
dec
fsubs
xchg
fnstenv
xlat
or
clc
out
ds
fldt
cmpsb
mov
dec
rcrb
and
xor
xchg
roll
or
inc
enter
daa
add
mov
pusha
push
hlt
cmp
jb
sbb
mov
loope
mov
fldcw
outsb
aam
push
test
cmp
dec
push
lret
in
dec
sub
out
sbb
cltd
sbb
xchg
movb
mov
ret
scas
cmc
cmp
pop
push
mov
call
inc
sbb
pop
mov
dec
in
and
and
or
ret
mov
push
pop
push
test
xor
adc
movsb
iret
imul
mov
inc
mov
inc
push
das
das
add
enter
push
jnp
outsl
push
or
push
pop
cmpsb
cli
add
pop
xchg
inc
sbb
movsb
fistps
mov
mov
pusha
mov
cmpsb
adc
sbb
aas
mov
push
dec
pop
dec
leave
aaa
mov
and
fidivl
push
imul
dec
ffree
jo
sbb
pop
or
js
cli
scas
addr16
and
outsb
fstp
jecxz
clc
adc
popa
sub
or
xlat
repz
dec
repnz
sbb
pushf
mov
mov
mov
int
dec
dec
add
mov
imul
test
out
mov
sti
xor
imul
xor
js
push
mov
cmc
frstor
int
inc
cs
mov
fwait
sub
es
fildll
mov
movsb
fs
xor
popf
test
push
inc
addr16
push
int3
repnz
pop
call
inc
dec
push
jg
lret
push
cmp
popa
push
mov
cs
push
loope
sub
sbb
cld
sub
imul
adc
mov
je
sbb
add
xlat
gs
jmp
jo
xor
les
jl
sti
sbb
jns
and
and
adc
test
ret
icebp
sbb
inc
push
gs
andb
sub
jmp
inc
mov
mov
aad
or
decb
enter
scas
fldcw
push
add
cmp
data16
sti
pop
out
arpl
fnsave
lcall
aam
xchg
push
sub
sbb
sbb
jle
out
fsubp
inc
xor
or
mov
fxch
xlat
dec
dec
fcomip
psubsb
or
adc
cmpsb
xchg
mov
test
das
xchg
mov
mov
xor
not
testb
pop
xchg
out
fldcw
dec
cmp
add
xchg
stos
xchg
adc
mov
sar
push
xchg
js
mov
cmpsb
cmp
loop
add
enter
push
push
lds
scas
push
ja
pop
fwait
shlb
stos
xchg
in
mov
mov
movsl
les
xchg
push
daa
pop
sub
daa
cmp
ret
xlat
xchg
into
in
mov
adc
repnz
cmp
sbb
xor
loop
and
inc
addr16
mov
lods
sub
jecxz
xor
outsb
lahf
nop
sbb
xchg
xchg
mov
jecxz
add
push
jmp
xor
adc
into
and
jecxz
inc
cmp
ret
addr16
lret
jae
lods
stos
xchg
test
movsl
inc
enter
dec
mov
loope
adc
mov
adc
pop
mov
push
pushf
fwait
add
orl
gs
mov
jp
push
jmp
pop
cmp
cli
loop
mov
jno
mov
xchg
sahf
dec
jg
enter
mov
arpl
shrl
jae
cmp
lods
mov
movsl
das
inc
cmp
sbb
mov
add
sbb
lods
fidivl
into
mov
enter
out
add
or
jae
test
xlat
push
push
and
push
jl
xchg
or
aam
xchg
scas
xor
insb
shr
adcb
and
cmp
cmpsb
mov
pop
movsb
dec
add
insb
mov
cmpsl
test
xchg
leave
lcall
cmp
outsb
mov
test
xchg
inc
inc
mov
fwait
mov
in
adc
cwtl
dec
push
inc
test
cli
nop
loop
mov
adc
dec
subl
outsb
test
xor
rclb
pop
xchg
mov
mov
xchg
xlat
bound
pop
jb
mov
sarl
int
mov
sub
mov
push
nop
imul
jp
and
push
adc
add
mov
fnstsw
xor
inc
inc
add
cmc
pop
jge
mov
sahf
test
ficomps
adc
xor
mov
push
pop
out
cmp
push
hlt
sbb
cmp
sub
test
or
cmc
sub
test
cmpsl
ss
jns
push
clc
sti
inc
out
or
stc
mov
add
fisttpll
push
and
mov
ja
add
cld
orps
shll
stc
jns
out
cmpsl
mov
icebp
mov
sbbb
push
mov
lcall
push
or
stos
ret
cmp
lret
icebp
pop
clc
mov
inc
imul
mov
xchg
inc
lods
int
xor
push
mov
mov
sbb
imul
or
push
xchg
inc
ret
push
jmp
loop
dec
fildll
ja
mov
aas
rcr
jne
outsl
xor
xlat
test
sbb
lock
mov
dec
std
lret
mov
or
xlat
addl
sub
gs
push
push
jb
clc
inc
rcl
xchg
lcall
aad
movsl
popa
stc
cmp
and
mov
rorb
scas
fcomps
ds
jne
aad
addr16
mov
sbb
add
cmc
mov
dec
aad
insl
enter
jg
scas
fstps
movzwl
loopne
loop
push
cmp
mov
ret
clc
pop
wbinvd
sbb
je
aas
ss
sahf
sub
sub
mov
xchg
adc
cmc
cmpsl
adc
or
pop
stos
incl
aaa
pop
mov
mov
dec
pop
cmp
xor
xchg
repz
lods
dec
dec
insl
jbe
les
jnp
hlt
and
fistps
jp
lods
jns
pop
adc
out
in
daa
test
imul
or
lds
out
leave
sbb
dec
out
cld
xor
int
add
imul
fwait
add
pop
out
sbb
test
in
sbb
xor
nop
jb
scas
or
daa
push
pop
int3
nop
xchg
xor
inc
sub
jmp
cltd
dec
cmp
inc
aas
xchg
js
int
add
test
adc
fcoml
inc
faddl
aam
jmp
les
int3
out
adc
pop
mov
dec
mulb
insb
loope
pop
cmpb
mov
std
jmp
fs
je,pn
cmp
imul
sbb
test
je
in
inc
pop
push
sahf
das
dec
adc
inc
xor
cmp
ret
andb
xor
popa
out
call
mov
xor
leave
movsl
popa
xor
sub
inc
pop
and
jne
pushl
stos
stc
push
pop
out
add
das
sbb
cmp
dec
pop
aas
insl
mov
ret
sbb
mov
xchg
xchg
testb
loope
fwait
es
sbb
dec
bound
inc
imul
xor
cmp
fisttps
fwait
mov
pusha
dec
outsb
ja
fmull
in
push
nop
mov
inc
fwait
pop
in
das
jmp
adc
enter
add
xor
sub
std
jae
xchg
sbb
add
ds
andl
sub
lock
or
add
lcall
inc
lcall
xor
sbb
sub
and
aad
jle
fdivs
mov
das
adc
outsb
sub
mov
xor
jo
fcoms
ret
shl
dec
out
loop
ja
icebp
lods
or
imul
xchg
or
xor
outsb
inc
ds
add
cmp
sub
hlt
cmpsl
jbe
daa
subl
ret
stos
cmpsl
and
into
mov
rclb
mov
loop
jg
push
cmpsb
or
adc
push
mov
cmp
fdivp
mov
push
loope
dec
movsb
pop
scas
jbe
loop
ret
add
dec
cltd
cmp
jae,pn
xor
sub
pop
mov
popa
inc
sub
adc
pop
lds
sbb
xor
dec
pop
jmp
jp
dec
mov
add
xor
add
sub
loop
mov
daa
jnp,pt
stc
pop
pusha
jl
subl
push
adc
shr
std
loop
push
sbb
jb
jge
cmp
mov
jnp
cwtl
ds
push
adc
jno
std
sub
stos
insb
inc
xchg
xorb
out
insb
daa
rcrl
loop
xor
and
in
and
lret
cmp
dec
shlb
fldt
call
jbe
lods
dec
inc
mov
ja
arpl
sbb
test
and
inc
cmp
inc
movsl
add
clc
mov
subl
jle
xchg
fcomps
loop
bound
lcall
xor
cltd
xor
pop
repz
sub
xchg
int3
push
out
stos
lahf
xchg
xor
fsubl
xchg
pop
idivl
and
and
pop
pop
and
jbe
pop
outsl
adc
aad
lea
mov
call
sub
xor
sti
in
in
mov
and
jb
mov
sbb
ds
push
clc
dec
pop
cmp
imul
xchg
mov
sub
mov
loope
icebp
lret
pushf
add
xchg
gs
xor
lahf
mov
jp
testb
test
adc
rorl
pop
daa
addr16
das
mov
shlb
rclb
xlat
cld
pop
xchg
call
lock
adc
mov
aaa
xor
jmp
pop
lcall
popaw
mov
icebp
push
sub
xchg
lcall
add
test
push
das
jo
push
fsubrs
addr16
subl
cmpsl
test
push
jge
nop
aas
xchg
dec
rcrb
cli
pop
shll
sub
fidivs
push
pop
les
jo
into
push
jmp
jne
dec
mov
push
push
push
or
mov
inc
cmp
mov
pop
aam
sahf
push
and
outsb
xor
stc
push
lea
and
or
stos
or
leave
ret
xchg
jno
pop
mov
or
dec
test
add
int3
in
xor
jae
cmp
dec
das
shlb
divb
or
cwtl
or
les
ret
xchg
mov
push
add
or
inc
add
adc
add
je
add
test
add
or
add
add
mov
sbb
jmp
xor
jbe
mov
shlb
jmp
out
fstps
dec
xchg
imul
icebp
mov
mov
adc
inc
cmp
ja
test
fiaddl
mov
mov
dec
shrl
sub
sbb
push
or
lahf
in
cli
test
cs
xchg
jbe
inc
cwtl
pop
add
cmp
cmp
stos
and
fildll
or
and
pop
push
mov
adc
pop
fbld
lret
cmp
aam
imul
or
ret
or
loopne
pusha
push
dec
enter
pop
xchg
mov
std
cs
jns
divb
and
or
pop
cmpsb
fs
sub
es
and
push
es
sar
sarl
jecxz
in
popf
pop
sub
in
ficoml
aam
rorl
mov
out
out
xchg
mov
fisttpl
mov
or
push
les
rolb
icebp
fisubl
xchg
xchg
xchg
in
push
mov
jmp
xchg
jecxz
push
movsl
add
out
mov
fdivl
ja
popf
add
pop
nop
cmp
mov
stc
push
pop
jnp
inc
jl
imul
seta
jb
dec
leave
subb
stc
xchg
xchg
mov
and
adc
stos
mov
push
dec
sahf
enter
ss
mov
pushl
xor
in
or
jge
dec
fwait
dec
xor
scas
stmxcsr
jne
lds
insl
out
push
aas
pop
mov
iret
int3
loopne
push
lcall
lea
inc
adc
sarb
jb
push
repnz
daa
lea
pop
aaa
aas
mov
test
mov
mov
ja
or
or
xchg
mov
movb
fdivr
pusha
outsl
mov
xor
jp
jg
in
lock
push
xchg
cmpsl
rorl
sub
sub
jne
push
inc
pop
add
ficomps
sahf
lret
mull
sbb
adc
add
adc
sbbb
dec
jecxz
mov
and
pop
int
jns
sbb
xor
fldenv
sub
dec
repnz
xchg
sub
sub
jnp
sbb
lret
mov
mov
imul
dec
push
sbb
cmp
mov
loopne
movsb
aaa
pop
sub
jo
adcb
jecxz
sbb
adc
pop
sbb
iretw
xorb
and
jne
inc
ret
pop
adc
jg
xchg
loopne
sub
or
jbe
add
add
mov
test
add
or
or
and
jg
leave
sub
arpl
xor
xabort
aas
enter
lcall
movsb
cld
pop
cmp
mov
and
sub
stos
push
mov
jne
mov
arpl
xor
dec
js
jns
jg
iret
jno
shll
xchg
xor
dec
or
out
ljmp
cwtl
push
and
jae
sub
push
std
lea
inc
xchg
cltd
ficompl
fcmovnb
fldenv
add
mov
cmpsb
and
xor
test
mov
pop
xor
ror
and
sub
popa
dec
jg
fsubrl
subb
scas
push
and
int3
arpl
jmp
mov
lcall
push
out
cmp
or
cli
mov
insl
ret
nop
push
call
imul
pop
push
mov
push
aad
push
fisubs
sbb
adc
ds
xor
aam
inc
stos
push
pop
pop
adc
andl
or
fiadds
rcrl
inc
mov
fistpl
fisttps
fstl
or
cmpsl
aam
scas
psubd
mov
subb
scas
xchg
xor
xorb
pop
out
push
lahf
movsb
push
xor
arpl
inc
rol
cmpl
insb
mov
outsw
or
js
or
scas
rcll
mov
cmc
pop
push
scas
sbb
mov
sarl
pop
lahf
sub
add
pop
dec
add
ror
and
xchg
jmp
push
mov
mov
or
lock
test
xchg
or
mov
sub
jmp
fsts
push
mov
pop
mov
sbb
cmp
lods
cmc
cltd
ficomps
in
pop
popf
pushl
adc
rclb
jmp
hlt
adc
xchg
dec
xchg
xor
es
push
add
sub
jg
jb
push
fxch
movsl
imul
add
xchg
shll
sub
fdivl
lahf
jne
push
je
nop
scas
mov
sub
rorb
mov
lahf
add
bound
fisubl
jb
push
dec
dec
arpl
mov
sbb
enter
imul
nop
mov
or
pop
mov
and
lret
ja
inc
and
jbe
jbe
xlat
jo
stos
sub
or
push
inc
lea
adc
jle
in
dec
in
je
scas
push
jae
mov
mov
outsl
cld
and
mov
dec
cmpsl
movsl
jp
sub
push
mov
and
cmpsb
shl
mov
cmp
scas
test
xor
cmpsl
jbe
or
in
int3
ret
xor
lret
inc
mov
ret
addr16
cmp
into
in
addr16
out
ret
mov
lock
inc
leave
icebp
sbb
popa
cmp
jno
jnp
fld
dec
or
pop
pop
idiv
inc
add
add
xor
and
jle
mov
push
fcoml
jno
repz
js
xchg
rsm
mov
rol
dec
dec
mov
xchg
insl
jg
and
or
add
mov
cmp
cmpsb
ficoml
push
rorl
arpl
sarl
inc
push
xor
sbb
inc
cmc
jle
xorb
xor
mov
push
fwait
jno
in
cmp
popf
add
fs
ret
movsb
adc
jg
nop
stc
aam
push
pop
in
inc
sbb
sub
fisttpl
jo
notl
enter
adc
enter
dec
out
subl
inc
xchg
xor
cmp
cmpsb
bound
mov
lds
scas
lahf
ret
daa
ljmp
push
cmp
popa
ds
scas
adc
pop
mov
ljmp
push
jae
dec
dec
jne
ret
pop
dec
out
sbb
out
decl
or
add
sti
fldt
push
rcrb
sub
or
outsl
out
mov
jmp
sub
adc
mov
sub
xorb
popf
and
orb
popf
mov
movsl
mov
mov
stos
sbb
xchg
xchg
repnz
test
jmp
adc
insb
insl
cmpb
mov
push
xchg
je
xchg
or
sbb
into
push
inc
cld
icebp
dec
adc
and
mov
xchg
jae
cltd
iret
pop
pop
push
hlt
sbb
dec
pop
test
in
pop
loope
dec
lret
xchg
mov
xchg
out
cmovl
mov
add
in
in
pop
das
mov
imul
mov
adc
les
and
xchg
jmp
test
mov
push
leave
add
pop
mov
aam
ror
in
xor
mov
mov
xor
dec
popa
inc
fsubl
jle
insl
cltd
adc
cwtl
pusha
mov
repz
cmp
adc
mov
and
movsb
jecxz
or
das
xor
sti
test
roll
leave
push
fs
mov
in
inc
out
jmp
pop
rcrl
ss
mov
sub
loop
scas
sbb
jp
mov
sbb
mov
lcall
ja
rcrl
pop
mov
mov
fwait
ret
and
add
push
jae
dec
inc
jl
fstpl
mov
adc
mov
push
daa
jg
stos
in
fisttps
pop
mov
rcrb
inc
je
inc
jns
mov
mov
mov
push
jbe
cmp
mov
mov
cwtl
fistpll
loope
ret
insb
pop
xchg
mov
pop
or
outsb
stos
pushf
shrb
rorb
scas
fistpll
mov
adc
lahf
mov
mov
push
or
jg
cmp
shll
int3
adc
movsl
mov
test
arpl
lods
adc
imul
dec
inc
je
aaa
lret
push
es
out
mov
pop
sbb
lret
jns
test
lahf
lock
push
pop
jmp
sbb
jae
add
add
or
ss
adc
cs
out
mov
xchg
fbld
ret
jge
hlt
aam
mulb
adc
push
pop
xchg
mov
pop
pop
sti
in
aaa
orl
lods
sahf
hlt
lods
mov
call
idiv
scas
nop
scas
pusha
mov
sbb
add
fisubrs
xchg
inc
lahf
jle
movb
jns
sahf
mov
jnp
clc
nop
or
lret
pop
icebp
mov
pop
cltd
inc
gs
xor
loopne
lods
lock
outsb
aam
shll
dec
xchg
fmull
push
mov
mov
rolb
lds
cwtl
stc
arpl
cmc
or
andl
push
daa
inc
or
sbb
into
jnp
dec
jl
out
jno
mov
xchg
and
cmpsl
enter
int3
js
test
pop
clc
in
sub
push
cwtl
cmp
jne
inc
xor
popa
fidivl
lcall
scas
mov
andb
inc
hlt
in
mov
sahf
cmp
push
shr
aad
or
mov
imul
mov
addr16
mov
inc
adc
mov
adc
andl
pop
dec
lods
mov
push
movsl
ret
mov
pop
add
xor
mov
xchg
mov
cwtl
lods
push
ficompl
imul
dec
mov
lock
in
pop
xor
push
and
mov
pop
or
sahf
mov
dec
or
insl
mov
int
lcall
push
inc
pop
jl
cmp
sahf
divl
mov
xchg
jo
add
fisubs
add
or
out
iret
adc
jbe
pop
adc
popa
mov
cmp
jl
ja
jg
cs
in
shr
push
hlt
jmp
pop
ss
mov
mov
jno
jbe
int
inc
push
cmp
cmp
push
fcmovnu
das
adc
loopne
xor
jmp
ret
push
sbb
in
inc
int3
sbb
fnsave
test
mov
and
inc
inc
cmp
nop
inc
repz
out
scas
or
ret
inc
movsb
pop
jecxz
cmc
mov
inc
lret
rcll
or
sbb
in
lret
popa
mov
mov
je
repz
bound
loopne
out
jmp
jmp
mov
shlb
ret
cmp
adc
or
aam
push
fs
daa
pop
out
or
pop
inc
jl
mulb
xchg
sub
popf
enter
icebp
hlt
jle
call
jb
jb
and
mov
jecxz
sbb
into
neg
xor
mov
push
inc
imulb
adc
lock
push
mov
imul
xchg
addl
mov
sbb
xor
cmpsb
movb
xchg
xor
inc
ficoms
mov
int3
mov
enter
mov
int3
push
mov
test
adc
in
pop
xor
dec
mov
cli
pop
dec
mov
into
loopne
dec
sbb
shll
les
outsl
fcom
pop
subb
test
mov
mov
dec
pop
or
clc
outsl
xor
sbb
cltd
push
mov
cmp
int3
xchg
push
mov
adc
std
mov
jb
mov
aad
lods
xchg
fstpl
mov
jmp
loopne
adc
in
push
popa
bound
adc
xchg
sub
mov
push
rcrl
sti
out
push
mov
into
sbb
inc
outsb
das
insl
mull
xor
inc
decl
frstor
add
xchg
fcmovu
cmp
mov
scas
or
test
stc
push
adc
stos
mov
gs
int3
sbb
xor
sub
movsb
leave
or
adc
cmp
loopne
push
ficoml
jl
scas
dec
push
rcrl
cmc
arpl
lock
xor
xchg
loop
mov
pop
out
std
testl
pop
sbb
mov
adc
dec
dec
mov
mov
and
inc
fdivrp
ss
xchg
cld
test
addl
lds
dec
cmp
cmp
xchg
adc
add
stc
in
push
arpl
or
sahf
jecxz
pusha
adc
es
adc
mov
scas
stos
inc
dec
jl
mov
idiv
ss
push
stc
out
std
cmp
repz
jns
out
loop
aaa
sub
sub
adc
xor
repnz
ret
inc
aas
push
add
xlat
jge
mov
shlb
push
sarl
out
jns
out
rcrb
and
pop
lret
imul
mov
cmp
push
dec
sub
cmp
push
pop
idivl
mov
mov
roll
rcl
xor
leave
rorl
leave
jae
add
inc
enter
iret
inc
mov
or
jmp
loop
inc
xchg
sbb
pop
cmp
cmpsl
in
stos
shll
cmp
sahf
inc
stos
jp
vmwrite
cmp
stc
notb
leave
loopne
scas
add
push
add
push
sub
pop
add
test
inc
cmp
dec
outsb
mov
loope
xchg
add
cmpsb
popf
mov
ret
dec
jb
or
cs
mov
aaa
jo
test
mov
aam
sub
imul
xor
enter
ljmp
cmp
addr16
mov
in
sub
mov
pop
and
in
xor
cs
lock
inc
jo
je
xchg
aaa
mov
xorb
cmp
xor
test
mov
push
adc
test
xchg
out
xchg
cmp
ljmp
scas
xchg
sbbl
pop
fidivl
sub
insb
adc
bound
xor
cmpsb
int3
pop
mov
ds
or
imul
hlt
enter
shlb
repz
xor
pop
imul
and
jbe
mov
addb
mov
fwait
add
ja
jns
in
and
stos
sub
or
cmp
or
enter
jno
enter
xchg
mov
ja
add
pop
lods
int
mov
mov
and
nop
test
xor
jmp
push
idiv
sahf
shrl
or
nop
nop
dec
jae
movsl
into
out
addb
fdivl
pop
dec
and
inc
iret
mov
out
call
mov
nop
adc
and
mov
aam
cmp
fldl
in
cmp
loop
pop
xchg
sbb
in
fwait
xor
push
sub
add
lcall
jae
mov
xor
mov
out
ds
add
lods
jae
and
pop
je
adc
mov
push
enter
jne
imul
cmp
mov
std
inc
rcll
and
movsl
sbb
nop
adc
loope
mov
bound
pop
out
xor
outsb
xchg
rcrl
and
fistl
jnp
inc
cs
dec
add
rcll
mov
push
or
adc
mov
pop
rcrl
xor
outsl
negl
mov
add
sar
enter
push
mov
and
subb
push
andl
mov
push
fmuls
jmp
popa
mov
aas
cmp
pop
les
inc
stc
pop
enter
jl
mov
lret
or
cmp
mov
daa
jb
test
sbb
jp
insl
jae
ss
add
cmp
ret
xorl
sbb
inc
cwtl
sub
mov
jno
cmp
outsl
dec
xchg
adc
hlt
into
sbb
aam
xchg
and
rcr
addr16
hlt
stos
or
inc
shrl
cmp
ss
movl
mov
cmp
loopne
testl
paddusw
xchg
xor
pop
jl
or
sbb
popf
dec
inc
pop
lods
jae
mov
inc
out
inc
mov
movsl
jne
cs
or
and
je
pop
push
fsub
icebp
inc
inc
arpl
dec
repz
fucom
jecxz
lock
push
std
mov
mov
test
cmp
jae
sub
rclb
loop
clc
out
ret
js
jno
xorb
movsb
loopne
pop
lcall
fwait
lret
dec
push
push
lret
jnp
pop
shlb
xchg
mov
std
pop
dec
inc
cwtl
loopne
mov
jge
ja
aaa
and
test
xchg
pop
outsl
cmc
repz
xchg
rorb
jbe
dec
push
cmp
rclb
movsb
stos
pop
cmpsl
fnstenv
mov
mov
mov
cmpsl
and
dec
int
inc
gs
xchg
xor
or
push
sub
jge
daa
cmc
and
lret
stos
outsl
fbstp
xchg
stos
ds
test
dec
inc
pop
out
in
repz
je
adc
jno
les
pop
je
js
mov
out
rcrb
pop
stos
stc
xchg
jecxz
xchg
pushl
push
aaa
getsec
pusha
rcl
sub
aam
fisubs
sbbb
cmp
out
dec
xchg
push
mov
in
lcall
adc
xchg
dec
mov
jle
in
inc
fisubs
cli
lods
xchg
in
jns
pushf
jns
push
xchg
mov
cmp
push
xor
je
mov
lock
xor
mov
sti
fs
lret
les
jle
js
push
clc
pushl
inc
mov
pushf
or
shrd
mov
mull
fs
inc
inc
adc
mov
inc
pushf
mov
fdivrp
sbb
stos
pushf
pop
xor
push
pop
sbb
sub
bound
pop
jle
outsl
xchg
cmp
and
sub
adc
mov
test
and
jge
testl
push
jecxz
add
mov
aas
inc
nop
js
into
sbbb
repz
popa
fisubl
sarb
jecxz
mov
lret
pop
insl
arpl
xor
dec
adc
xchg
rorl
divb
fcmovnbe
mov
xor
sahf
xor
fidivrs
jl
stos
je
push
add
jmp
jnp
movsl
ja
clc
xor
or
imul
iret
push
sbbb
clc
xchg
push
fisubs
mov
and
bound
leave
shrb
or
mov
mov
in
cmpsl
add
push
mov
movsl
mov
sti
int3
adc
mov
enter
repnz
xchg
outsl
xchg
out
cwtl
dec
push
fwait
jp
cmc
sbb
inc
push
add
dec
and
insb
mov
lret
add
into
sub
and
popa
lods
imul
mov
loope
std
insl
dec
xchg
jae
pop
outsl
cld
ret
adc
add
test
movsl
stos
ss
nop
cli
mov
mov
sbb
bound
repz
lcall
dec
sub
icebp
jne
push
je
lds
add
mov
cmpsl
leave
sub
rcl
pop
leave
dec
mov
sub
fnstenv
bound
adc
mov
loopne
jbe
loopne
add
mov
and
in
cwtl
aas
cmp
dec
jae
push
xchg
mov
mov
loopne
sub
cwtl
or
adc
jb
xchg
jg
pusha
inc
jne
movsb
fadds
fdivrl
dec
bnd
imul
inc
dec
mov
cmp
jecxz
jle,pt
fwait
cmc
add
testb
ds
or
adc
fldt
leave
sbb
sub
push
scas
mov
fcompl
adcl
sarl
les
orl
pop
xor
icebp
inc
mov
jg
out
js
fadds
orl
gs
push
movsb
inc
xchg
or
and
adcl
xchg
int3
inc
dec
cmp
enter
mov
stos
jmp
mov
pop
sbb
dec
sbb
popa
sub
xor
repz
mov
push
push
adc
enter
inc
aad
mov
lcall
rdpmc
push
cmp
ret
xor
stos
ficompl
aad
popl
sbb
jmp
fidivs
pop
mov
popf
ljmp
iret
mov
sub
sbb
xchg
pop
mov
push
adc
movsl
jb
mov
andb
or
xchg
pop
enter
adc
lds
push
or
test
cmp
sbb
rcrb
mov
push
rorl
pop
or
xchg
pop
xchg
sahf
test
and
gs
and
lods
mov
es
jmp
dec
push
fisttpl
xor
pop
pop
pop
adc
mov
jmp
mov
jecxz
test
les
xor
mov
mov
sbb
mov
pop
jno
and
mov
lods
roll
ss
out
dec
pushf
sbb
repnz
leave
jmp
inc
addr16
or
test
lahf
aas
push
pop
adc
nop
or
lcall
addr16
bound
adc
icebp
inc
js
sbb
adc
adc
ljmp
push
dec
lahf
dec
test
adc
test
inc
jge
cmp
ret
jns
sub
pop
push
xor
mov
movb
loope
imul
push
pop
inc
fildll
into
imul
stos
add
and
outsb
inc
pop
jbe
jecxz
pop
xchg
dec
jne
mov
je
push
in
jmp
inc
lock
jns
js
cli
clc
pop
loopne
xor
out
add
ss
dec
jecxz
aas
pop
rolb
inc
adc
and
stc
add
mov
in
and
pop
enter
je
ss
mov
ljmp
icebp
in
int
xchg
loop
dec
out
test
push
or
cmp
and
mov
dec
lods
ds
cmc
and
cmp
jo
xor
adc
sbb
hlt
rcrb
ja
jge
add
in
mov
fimull
gs
jle
outsb
hlt
int3
xchg
cmp
jmp
cld
inc
jnp
jnp
mov
or
repz
mov
mov
fldenv
into
adc
mov
notl
sar
or
enter
inc
std
mov
mov
ret
dec
adc
and
sbb
pop
mov
and
mov
mov
lea
and
fwait
add
call
hlt
mov
adc
inc
push
notl
cltd
xor
outsb
je
xchg
sub
shr
mov
adc
inc
std
shl
xlat
xor
mov
jno
sbb
test
aaa
sub
ja
in
push
popf
sub
sbb
inc
or
testb
insl
dec
ret
in
movsb
hlt
in
nop
push
lock
mov
mov
pop
inc
and
jecxz
xorl
hlt
ret
ret
pop
sarb
clc
dec
idivl
fwait
out
and
arpl
enter
dec
leave
out
in
fldl
andb
fiaddl
test
lds
and
pop
imul
in
popl
cmp
mov
scas
xchg
ja
cmp
fmuls
push
cmc
cltd
orb
in
mov
jnp
dec
mov
cmc
push
ret
clc
jns
test
cmp
sub
jne
mov
mov
and
sbb
nop
and
fs
jno
cmp
hlt
repz
lret
movsl
nop
ja
mov
insl
mov
fsubrl
add
into
add
mov
lods
sbb
xchg
add
vmovd
jno
sub
and
mov
mov
jge
nop
and
js
mov
xchg
ljmp
mov
xchg
andl
fucomp
add
test
test
xor
or
xchg
stos
dec
and
repz
sub
rcr
pop
mov
or
dec
mov
mov
dec
pop
pop
imul
aas
mov
mov
xor
xor
dec
and
push
push
xor
inc
clc
sub
sbb
rcrb
pop
pop
sbb
out
cs
outsb
loopne
je
dec
sbb
dec
dec
pop
repz
push
xlat
dec
or
jns
inc
cmp
push
pop
adc
outsb
xchg
into
xor
pop
and
xchg
sahf
stc
xor
dec
jge
adc
adc
aam
sbb
fs
xor
inc
fcmovu
ja
sub
inc
fistpl
repz
test
xchg
pop
mov
test
cmp
sbb
in
bound
addl
sbb
mov
fs
mov
ret
test
cld
loop
lahf
sbb
mov
adc
dec
sub
or
xlat
repnz
ds
lock
mov
push
mov
rcr
andl
cli
and
pop
test
adc
xchg
xchg
divb
add
imul
test
adc
pop
jl
loopne
dec
pop
push
mov
push
fistpll
xchg
adc
and
outsb
out
push
sahf
fimull
icebp
or
fnstsw
pop
push
shlb
into
addr16
or
jle
xor
cmp
sbb
mov
imul
jle
jg
hlt
inc
sarb
into
push
ljmp
xor
xchg
pop
int
roll
pop
stos
retw
or
inc
jg
jmp
or
jb
addr16
out
mov
sbb
icebp
icebp
jns
push
sbb
push
jle
cld
les
pop
fmul
jg
mov
fsubs
imul
imul
jp
iret
imul
push
test
dec
sbb
xchg
imulb
movsb
test
pop
push
push
lea
subl
xor
stos
push
inc
pusha
jg
mov
mov
cmc
cmp
test
pop
ficoml
mov
xor
xor
testl
add
leave
idivl
mov
shrb
mov
scas
out
sub
mov
sbb
lds
xchg
push
and
mov
mov
push
push
xor
int3
sahf
xchg
mov
js
cltd
stc
ja
pop
mov
fs
jnp
test
mov
mov
jno
and
enter
jmp
andb
inc
jp
ss
mov
pop
and
and
xlat
adc
bound
xor
ja
add
jmp
movsb
sub
xor
mov
xchg
fisubrs
jae
pop
jb
and
and
into
cmp
push
mov
mov
sahf
push
mov
and
add
outsb
incl
fs
pop
test
je
popa
pop
mov
stc
dec
fxch
mov
mov
popf
fs
adcl
ss
into
fs
mov
xchg
lcall
push
push
in
mov
cmp
add
in
sub
inc
cli
mov
push
scas
add
popa
stos
int3
push
sbb
in
xchg
and
sbb
cmp
lret
cmc
test
mov
push
jecxz
ljmp
push
sub
or
xchg
cli
fwait
into
scas
rcrl
jo
mov
xchg
sub
out
adc
cmp
pop
clc
or
jb
xchg
insb
ret
and
xor
xor
sub
movsl
inc
mov
xor
add
xor
xchg
dec
xor
imul
es
or
xor
aam
sbb
test
jne
out
add
add
outsb
push
es
push
lret
jle
dec
stos
pop
and
sub
mov
pop
xlat
test
fistl
test
jl
push
arpl
icebp
mov
andb
lock
sbb
jecxz
cmc
adc
loope
or
sahf
push
repnz
and
xchg
loope
dec
jl
pop
and
xchg
lret
inc
mov
addr16
aas
mov
ret
pop
outsb
sub
daa
cwtl
ss
or
sti
test
jmp
stos
or
subps
push
je
into
insl
mov
and
fs
push
hlt
out
adcb
insl
pop
inc
xlat
dec
repz
push
inc
repz
and
push
cmp
pop
sbb
ds
add
and
sbb
hlt
xor
pop
dec
repnz
push
add
ret
mov
xchg
dec
data16
insl
mov
in
jecxz
xchg
or
push
push
in
xor
sbb
add
lcall
jno
daa
out
lods
lret
cmpsb
aad
sbb
sar
or
and
ss
xor
fldenv
jmp
mov
test
lret
decb
jge
aas
xchg
sbb
jge
das
push
sbb
int
mov
fldl
ret
sbb
cmp
cltd
shrl
push
data16
out
lods
xchg
cmpsb
add
push
xor
push
rorl
sbb
lea
daa
and
mov
jbe
movsb
push
and
imul
jg
orb
mov
cmp
mov
lds
dec
lods
dec
std
mov
les
iret
mov
or
mov
mov
and
in
movsl
test
sbbl
lock
sub
sti
and
sbb
test
mov
mov
mov
pushf
leave
scas
or
je
repz
cwtl
das
popf
out
pop
ss
inc
in
pushf
adc
leave
outsl
sub
loope
mov
out
inc
mov
shlb
sub
jae
ret
stos
pop
stc
mov
std
xchg
sbb
xor
imul
sub
out
movsb
dec
or
aaa
out
pop
mov
sbb
mov
push
out
dec
jle
push
xor
xchg
pop
ljmp
call
adc
pop
cmp
ds
add
js
stos
sub
push
jp
enter
repnz
pop
ss
stos
mov
lret
adc
lahf
jecxz
call
out
jle
lcall
int
inc
mov
iret
inc
imul
push
aad
out
out
push
jno
frstor
jnp
popa
jns
stos
test
mov
inc
or
xor
sbb
push
ret
pop
lcall
adcl
das
xchg
mov
into
je
in
comiss
movsb
lahf
sbb
lods
lret
push
dec
mov
xchg
movsb
out
pushf
sub
popa
in
push
pop
and
mov
mov
data16
push
and
iret
xor
push
in
ja
andl
js
inc
sahf
arpl
out
jle
insl
outsb
mov
mov
pop
in
sbb
out
or
add
in
inc
out
xchg
lods
fwait
push
les
in
leave
shll
xlat
mov
pusha
mov
mov
jne
jns
sbb
sbbl
mov
adc
adc
mov
sbb
push
test
adc
std
aad
repz
sbb
ror
add
mov
xchg
push
dec
xchg
jae
clc
icebp
stos
inc
lret
sbbb
dec
loop
gs
xchg
cmp
inc
stos
adc
lcall
xorb
es
or
jge
stos
push
jg
push
xchg
xlat
cmpsl
lret
mov
cmp
jmp
in
aam
push
push
mov
xchg
xchg
jmp
add
data16
and
rol
scas
add
shlb
loopne
pop
addr16
jae
lret
pop
xor
mov
push
pop
rorl
jno
or
pop
jb
jle
inc
ljmp
push
jb
jecxz
cmp
xor
sahf
fwait
mov
gs
incb
dec
imul
jl
sbb
jp
fildll
ljmp
mov
adc
cmpsl
and
testl
movsl
adc
cmpsl
ljmp
in
das
int
xor
mov
sbb
inc
inc
push
push
push
inc
lock
movsl
in
fdiv
pop
dec
sbb
gs
xchg
xchg
lods
out
ret
repz
insb
stos
push
jb
pop
in
inc
mov
addr16
imul
in
sub
jns
jno
sbb
or
jle
paddd
roll
cmp
sahf
add
cmp
lea
out
push
cmp
sar
mov
ror
pop
leave
pop
test
mov
cmpsb
into
pop
mov
cmpsl
cmpsl
sarl
mov
xor
std
add
add
cmpsb
jp
insl
scas
jno
jno
sub
cmp
sbb
test
mov
adc
leave
ja
imulb
iret
cwtl
addr16
sbbl
fildl
inc
mov
and
xor
dec
push
mov
cltd
jg
mov
add
fistpll
pop
insl
sub
das
mov
push
inc
sbb
mov
sahf
jg
push
fdiv
jle
xor
insb
mov
jns
ret
in
add
push
stc
test
adcl
ret
cmp
fiadds
lods
mov
pop
push
sbb
and
push
roll
movsb
je
fsubr
pop
imul
pop
cmp
test
pop
mov
movsb
sub
dec
push
ret
out
adc
mov
push
mov
dec
idiv
cmp
add
cmc
pop
lret
or
cmp
mov
into
bsr
int3
inc
and
mov
or
inc
xor
repnz
fadds
mov
les
out
shl
jbe
fwait
mov
push
inc
add
fs
jl
lods
dec
filds
or
mov
call
sbb
lea
orl
mov
push
mov
repz
add
in
out
mov
mov
out
sahf
add
inc
pop
or
aam
sbb
cli
add
and
xchg
ret
jne
fidivrs
cmpsl
out
addr16
or
mov
add
insl
cmp
aad
addb
ds
mov
cmp
fnsave
movsl
mov
cmp
shrb
lahf
mov
sahf
fsubr
pop
inc
mov
rcl
xor
fs
out
testl
js
add
xchg
mov
xchg
add
push
jl
or
pop
xchg
push
sti
inc
ljmp
adcl
pop
inc
orb
sbbl
xchg
push
mov
dec
das
jb
push
movsb
mov
pop
or
loopne
div
pop
aam
out
push
inc
push
cmp
mov
push
mov
mov
dec
add
push
leave
mov
xchg
cltd
shlb
test
mov
dec
add
lcall
gs
into
out
movsl
mov
pcmpeqw
loopne
mov
push
mov
aad
cmp
repz
ljmp
mov
inc
adc
in
sbb
iret
ds
jp
lds
lods
inc
jnp
sbb
fistl
push
pop
push
jecxz
imul
sti
cmc
stc
sbb
aad
ja
pop
mov
pop
or
adc
sbb
sarl
jp
ficoms
in
inc
subl
jnp
lds
ret
jge
adc
adc
iret
mov
scas
fwait
xchg
cmp
js
inc
call
inc
fs
pop
mov
inc
popa
cmpsb
jp
cmc
jbe
mov
inc
mov
sbb
outsb
add
jl
mov
cltd
pop
xor
enter
in
adc
fs
les
fsubs
repz
lods
outsb
out
pop
jg
jmp
adc
sbb
dec
mov
dec
arpl
dec
stos
addr16
mov
add
outsb
mov
popw
mov
pop
lods
jbe
sahf
ret
lods
mov
push
mov
mov
inc
mov
push
out
sbb
sub
inc
mov
xchg
bound
ljmp
mov
and
cmp
hlt
pop
mov
pop
or
in
pop
ds
jns
mov
push
cs
pop
imul
ja
in
jo
cmpsb
push
ret
pushw
jnp
or
jp
inc
inc
inc
ljmp
jl
jne
fldcw
stos
xor
sub
xchg
filds
add
shlb
cmp
mov
push
xchg
pushf
rcrl
or
fstpt
dec
mov
dec
or
sbb
add
jno
fsubrs
dec
or
xor
pop
out
and
push
loope
push
js
xor
jbe
outsl
pop
sbb
loope
sub
mov
xchg
xor
sbb
ret
in
pop
pushw
ss
cmp
adc
cvtpi2ps
jbe
or
fnstcw
das
and
aaa
sub
xor
mov
stc
shlb
loop
cs
int3
pushf
cwtl
adc
mov
arpl
sub
test
and
cmc
xor
aam
pop
sbb
negb
push
mov
iret
push
pushf
es
scas
sbb
dec
jg
ss
popa
inc
daa
or
mov
ret
test
xchg
sbb
ja
movhps
icebp
imul
das
data16
dec
mov
sbb
jb
mov
mov
incb
xchg
mov
arpl
out
ret
insb
xor
and
shl
repnz
inc
cmp
mov
js
aas
dec
aad
dec
mov
push
mov
insb
gs
pop
jno
or
push
add
pop
mov
lock
imul
dec
xchg
mov
inc
es
push
add
popa
jo
jnp
gs
ja
mov
mov
mov
movsb
mov
jmp
push
jecxz
xor
sub
test
push
and
loopne
das
mov
sub
outsl
sub
psubusw
lcall
rcll
dec
push
aas
sbb
xchg
fisttpll
loope
jl
ret
push
pop
mov
les
call
aad
jmp
xor
stos
mov
enter
jnp
scas
push
ja
mov
push
daa
bound
mov
fisubrs
xor
cmp
jmp
xor
andl
popa
inc
jp
mov
popf
push
ja
out
fwait
fs
jecxz
out
adc
adc
jecxz
cwtl
lds
add
push
dec
lock
shll
push
pop
daa
out
aad
mov
cmp
or
nop
in
daa
nop
and
test
or
push
cld
stc
xchg
push
shl
leave
ljmp
dec
adc
lret
xor
cmc
lcall
incb
sbb
addr16
cmpsb
mov
push
call
adc
int
pop
sub
cs
nop
je
sahf
xlat
icebp
call
cmp
mov
dec
cmp
outsb
sahf
add
loop
enter
js
sub
imul
sub
xor
pop
xor
data16
cs
push
sbb
xchg
movsl
mov
cltd
outsb
rcrl
sbb
push
outsl
xchg
leave
icebp
out
dec
push
aad
and
insb
fcmovnb
and
das
or
push
mov
and
daa
cld
stc
add
or
add
mov
sub
imul
daa
inc
popa
add
add
fmull
push
cmpl
or
in
lds
pop
imul
xchg
out
icebp
dec
xchg
aad
pop
or
or
inc
pop
fmull
adc
aaa
icebp
lret
in
js
aaa
cmp
ficompl
pusha
or
pop
jg
pop
lret
jecxz
loopne
adc
jnp
call
mov
enter
cld
mov
les
mov
push
incb
popa
xor
add
dec
ja
jo
jecxz
pop
call
push
jne
fstpt
and
repnz
mov
cwtl
jg
arpl
mov
or
sbbl
stos
insb
testb
jo
sub
popa
ret
sub
mov
sub
xor
out
cmpsb
mov
push
jno
mov
adc
arpl
call
adc
mov
xchg
mov
push
push
das
push
sbb
imul
sub
out
xor
outsb
or
sub
scas
xor
push
test
pop
scas
and
sub
xchg
pop
add
les
es
rol
adc
out
dec
adc
dec
xchg
icebp
cmpb
push
loop
imulb
cld
xor
cmp
dec
push
fcom
aad
cmpsl
enter
outsb
stc
add
popa
mov
fnstenv
mov
add
subb
jo
daa
test
js
dec
fwait
mov
dec
sbb
in
cld
sub
out
call
in
fwait
xor
add
pushf
mov
push
push
sub
push
and
ja
lret
push
mov
cmpsl
add
adc
insb
and
scas
stc
mov
add
ret
loopne
nop
push
xor
test
mov
lret
stos
pop
jae
xchg
ja
dec
pop
mov
repnz
adc
rclb
leave
sbb
xchg
xor
cmpsb
cmpsl
lds
jecxz
xor
fidivrs
push
push
xlat
pushf
fisubrl
push
call
test
aaa
stc
leave
pop
mov
jae
mov
dec
mov
loope
adc
es
insl
cmp
pop
push
inc
adc
fimull
xor
adc
jns
mov
inc
hlt
and
fbstp
jle
jne
jnp
push
sub
pop
das
sub
cli
sahf
lea
xor
mov
dec
ss
or
clc
mov
jge
xor
aaa
sbb
ret
cmp
in
outsb
mov
shrl
in
cltd
pop
scas
rol
pop
rol
push
dec
insl
lods
cmp
mov
xor
xchg
data16
lret
int3
ljmp
mov
out
pop
sti
enter
add
ss
insl
imul
xor
sahf
into
cmp
xchg
push
sbb
pop
xor
testl
arpl
sbb
sbb
and
repnz
inc
mov
imul
xchg
mov
mov
out
lds
push
dec
or
rcrl
mov
cs
or
pop
jo
jnp
cmp
and
jne
scas
fsubl
adc
je
jl
jns
mov
movsb
sbbb
test
cmc
dec
sub
mov
fwait
adc
jge
jp
cltd
xchg
mov
movsl
les
dec
fidivl
in
lret
push
push
dec
frstor
cmp
mov
sbb
icebp
sarl
aad
inc
add
pop
sub
ss
mov
lock
cmpl
cli
in
notb
outsl
fs
flds
dec
fistl
iret
push
test
inc
pop
outsl
jo
jl
frstor
fists
ss
ljmp
cmpb
es
in
sbb
dec
fildl
outsl
test
dec
arpl
dec
pop
push
and
mov
xchg
std
test
cmp
loop
hlt
add
sbb
xor
mov
jmp
fnsave
jo
ja
cmc
mov
xor
in
sbb
neg
mov
fcmovbe
jnp
push
dec
stc
ret
xor
adc
and
aam
xchg
cmc
dec
sub
into
jl
lcall
xor
subb
xchg
dec
push
fnsave
lea
rcrl
xorb
push
inc
xchg
psubusb
or
adc
or
or
shlb
lock
mov
pop
dec
and
mov
rcll
cmp
int3
arpl
imul
sbb
lock
or
shrl
and
fwait
inc
sub
jo
insb
or
xchg
sbbb
lret
xchg
mov
xchg
int3
idiv
aas
lock
call
repnz
jl
int3
jecxz
scas
dec
xor
js
mov
movsl
mov
push
cwtl
jnp
push
repz
dec
dec
fwait
xchg
jnp
iret
jne
out
insl
jne
pushf
pop
int
roll
ljmp
enter
push
enter
mov
cmc
jle
lea
push
pop
mov
nop
sbb
ret
push
sqrtps
xchg
mov
out
shll
xor
mov
lea
pop
mov
dec
mov
aad
cmpl
sbbl
shll
push
jl
and
add
enter
cmp
add
cmc
mov
jle
mov
aad
mov
cmpsb
loopne
pop
inc
add
pop
inc
and
xor
push
jbe
sarb
xchg
iret
cltd
pop
pop
lcall
sub
mov
into
add
add
lret
dec
mov
packssdw
out
inc
inc
inc
push
push
jp
clc
cltd
int3
das
mov
imul
sub
movsl
orb
in
inc
stos
imul
mov
lcall
cmpsb
adc
add
test
daa
loope
fistl
scas
or
cwtl
lods
ror
enter
and
mov
or
cmp
movsb
sub
sbb
mov
add
sub
inc
cmp
dec
adc
mov
push
pop
mov
inc
push
aaa
adc
outsl
int3
aaa
sbb
push
and
loopne
mov
xor
push
adc
cmpsl
cmp
je
das
xor
test
mov
add
pushf
leave
movsl
xchg
pop
pop
or
jae
inc
es
scas
add
xor
pop
inc
lods
inc
inc
rcll
mov
loope
xchg
jmp
jb
icebp
popf
fsubs
or
fdivrp
mov
jns
push
idivl
cmp
mov
cmp
lret
or
pusha
push
shll
xor
mov
adc
flds
lret
push
and
adc
lcall
lds
das
sub
xchg
sti
enter
jns
dec
adc
adc
loope
dec
inc
shrb
fldl
sbb
scas
adc
cmp
sbb
or
mov
sbb
sub
addb
loopne
pop
or
insl
ret
idivb
inc
fwait
inc
jae
mov
xlat
ljmp
adc
fsubrl
jmp
pusha
out
adc
or
ret
shlb
pop
orb
in
and
testl
mov
inc
lods
sbb
movsl
dec
sbb
xor
lret
adc
dec
popf
cld
and
jle
mov
dec
loop
call
cltd
inc
cwtl
cmp
jnp
mov
cmp
testb
push
cs
leave
sarl
push
jno
leave
cmp
lahf
movsb
stc
sub
fwait
xor
insb
scas
mov
cli
mov
cli
orb
je
mov
and
adc
out
jno
pusha
and
ret
inc
sahf
jmp
in
pop
xor
test
int3
jecxz
cmp
lret
cli
into
ljmp
push
xor
pop
fidivrl
inc
ljmp
push
dec
popf
aaa
sub
pop
cltd
sub
add
ficompl
ss
dec
daa
cmc
pop
inc
movsl
pop
repnz
mov
lcall
dec
pushf
outsb
adc
sub
sub
addr16
jne
jae
mov
test
pop
lods
sti
fs
inc
std
sarb
pop
xchg
xchg
mov
lds
cltd
fnstsw
loopne
test
mov
pop
jno
pop
js
aam
push
push
sub
mov
data16
std
aaa
push
inc
fnstsw
out
dec
mov
in
mov
add
xchg
shlb
mov
not
fisubl
cwtl
scas
ja
adc
cmp
rcrb
rorl
stc
jb
insb
lods
mov
mov
clc
lods
xor
lcall
nop
out
cwtl
test
out
cs
xchg
push
mov
sahf
mov
cmp
xchg
test
sbb
xchg
lds
subb
dec
jnp
fildll
sarb
je
ljmp
fcoms
mov
shll
xor
out
jmp
or
mov
lcall
mov
sub
outsl
jb
fistpll
aam
mov
jmp
mov
popf
xchg
sub
inc
mov
sahf
fdivrl
andb
cs
xchg
es
xchg
dec
addr16
push
dec
js
push
jl
inc
imul
mov
test
pusha
enter
push
cwtl
mov
imul
mov
sub
enter
adc
lds
add
xor
in
pushf
or
mov
imul
testb
insb
cs
mov
cltd
adc
sbb
or
push
cmc
mov
sbb
int
cld
bound
mov
fcomp
xor
sub
fcmovnb
xor
pop
pop
int3
xor
leave
ret
loopne
enter
stc
sarl
dec
js
add
test
addr16
fisubrs
mov
pop
mov
jae
dec
insb
push
mov
ljmp
push
in
sbb
in
lock
push
lea
push
cli
dec
les
int
aaa
mov
sbb
add
jae
inc
loop
jmp
not
or
xchg
mov
push
pusha
pop
rorb
xor
les
pop
lret
sbb
insl
imul
mov
cmpsb
xchg
fs
aad
jl
mov
pop
std
add
sub
in
sbb
cmp
pop
sbbl
cmpsb
xchg
pusha
pop
lret
sbb
out
mov
popf
adc
movsb
imul
outsl
xchg
loop
jge
sahf
xor
into
enter
mov
mov
jmp
hlt
rcrb
mov
mov
xchg
xchg
inc
cmp
and
fisttps
roll
test
add
mov
pop
push
insb
adc
pop
xchg
jmp
or
xor
std
pop
lcall
fdivrp
lods
or
das
stos
arpl
mov
mov
call
adc
or
add
jmp
mov
xchg
out
cmp
pop
cs
movsb
mov
add
sbb
mov
movsl
cltd
stc
test
rcrb
aam
mov
dec
fnstcw
in
push
dec
shll
out
scas
movsb
das
jmp
jbe
subb
lcall
adc
add
jne
cmp
outsl
dec
test
sti
mov
jbe
jae
cmpsl
clc
push
push
lcall
mov
cltd
fldenv
ret
jl
dec
rorl
leave
in
dec
xor
lret
loop
test
sbb
add
shl
fdivl
push
jle
inc
dec
dec
shl
scas
addb
jno
loop
sbb
sti
mov
or
daa
inc
ss
add
mov
inc
js
lcall
fsubp
lret
mov
scas
pop
mov
adc
pop
sti
adc
test
jmp
cmpsb
popf
mov
pop
data16
push
fidivrl
les
popa
jns
pop
mov
and
pop
pop
mov
xchg
movsl
fcompl
jmp
pop
cli
je
pop
pop
cmp
sub
push
mov
pop
xor
cwtl
inc
adc
movl
sbb
je
test
jmp
mov
push
out
and
adc
loopne
add
call
push
or
fistpll
pop
inc
insb
call
sub
push
jl
arpl
push
enter
mov
popf
movsl
mov
repnz
enter
loop
mov
sbb
pop
add
mov
fiadds
scas
dec
les
cmpsl
or
fwait
out
mov
xor
xor
fdivs
dec
popf
add
jns
dec
xchg
cmp
loop,pt
iret
push
sub
cmp
and
sahf
or
ds
aas
mov
lods
sbb
pop
mov
mov
mov
pop
cmp
int
push
jae
push
sti
or
adc
push
clc
dec
mov
mov
xorl
loopne
out
mov
lods
shr
ss
mov
addl
and
les
sti
leave
mov
movsb
xorl
jl
loopne
xchg
rcr
mov
cltd
jp
pop
dec
addr16
pop
ret
mov
mov
mov
cltd
push
lea
pop
bound
les
aam
outsb
lret
add
outsb
dec
cmp
mov
movsb
fbstp
call
aad
xor
jp
push
jmp
sahf
orl
pop
xchg
mov
push
push
dec
mov
mov
lods
push
and
fs
imul
aas
popf
inc
test
cmpb
pop
xchg
mov
push
leave
loopne
mov
leave
mov
dec
and
aaa
sbb
xor
call
out
push
sbb
rcrb
sub
aas
loop
sbb
or
add
adc
xchg
shrl
imul
push
or
mov
xchg
cli
mov
push
jb
xorl
fisubs
popa
and
sbb
addr16
mov
movsl
imul
inc
clc
inc
divb
mov
add
mov
jo
xor
mov
in
shll
jnp
clc
mov
ror
arpl
sub
test
jl
lea
aaa
cmp
mov
leave
cmpsl
fbld
shlb
lea
fdivs
dec
insl
movsl
dec
aas
enter
cs
imul
cmpsl
sbb
add
push
idiv
in
lret
mov
hlt
fwait
iret
xchg
daa
add
pop
fdivrp
mov
add
sub
dec
and
lret
addr16
std
das
fcoms
out
inc
gs
pop
add
fsubrs
jp
les
roll
sub
mov
mov
loopne
inc
adc
fdivl
les
lea
jl
rcrb
dec
in
mov
pusha
and
mov
icebp
movsb
lds
adc
jmp
pop
ss
and
call
data16
leave
repz
jno
shll
fucom
push
mov
or
cmpsl
cmp
rorl
xchg
test
sub
dec
sub
es
add
sub
imul
jno
iret
mov
push
jge
add
in
xchg
adc
inc
nop
ficomps
fnsave
sti
leave
inc
lods
pushf
dec
adc
xor
in
push
inc
cmp
popa
cmp
mov
es
loopne
mov
jne
xorl
mov
inc
out
push
add
fmul
loope
out
daa
out
roll
adc
leave
push
dec
xor
add
shll
mov
sti
lock
pop
mov
dec
aas
dec
fs
js
popf
push
pop
lret
cwtl
fbld
iret
data16
xor
in
imul
out
scas
aam
xchg
fldt
dec
and
js
and
jae
or
into
incb
inc
jmp
repnz
jge
int3
sub
shrl
in
aaa
dec
popf
add
xchg
shlb
mov
outsb
mov
gs
push
push
movsl
mov
cwtl
and
out
lea
xchg
sub
mov
sub
in
cmp
pop
inc
cmpsl
mov
ljmp
or
or
rcrb
adc
lahf
rcl
lock
sbb
dec
adc
or
mov
fnstcw
pop
inc
jne
xchg
movsb
pop
jle
xor
sub
cmpl
daa
loope
lcall
pop
push
mov
int
jmp
psubsw
adc
jo
out
pop
pop
rcll
out
push
out
test
inc
sbb
jl
iret
adc
call
sbb
xor
jmp
pop
jl
jp
fucomp
mov
sbb
cmp
loopne
test
bound
mov
fisubrl
dec
xchg
mov
mov
mov
push
mov
addr16
dec
inc
push
mov
fistpl
pop
not
pop
mov
sbb
test
sbb
das
icebp
inc
dec
adc
repnz
mov
cmp
mov
stos
ljmp
sub
hlt
das
test
dec
mov
shrl
jbe
outsb
or
cmp
mov
jl
rol
imul
xchg
cmp
inc
stc
je
aaa
mov
popf
hlt
mov
icebp
into
dec
xchg
aad
sbb
or
cmpl
clc
aad
sbb
lahf
out
mov
fstpt
push
xor
cltd
in
adc
sbb
sub
xchg
cmpsb
push
xor
lcall
adc
test
inc
or
pop
mov
dec
cltd
fisubl
jmp
pop
enter
rcll
mov
mov
cld
cmp
test
outsl
in
arpl
outsl
pop
cmp
or
sahf
popf
hlt
inc
adc
mov
sbb
or
inc
xchg
je
or
and
shlb
ret
mov
out
lock
push
pop
bound
pop
mov
inc
inc
lcall
pop
int3
sub
cmp
cmpsl
mov
dec
ss
inc
pop
mov
iret
adc
mov
xchg
cmp
xor
push
repz
daa
push
push
sub
push
daa
jmp
addr16
xchg
jge
aaa
jl
outsl
cmc
lds
add
repnz
aaa
dec
sbbb
aas
sbb
pop
push
mov
inc
test
and
pushf
nop
fidivrs
sbb
xor
adc
scas
fs
orb
xchg
cmp
fisttpll
loop
push
into
mov
mov
leave
push
subb
shr
sub
fmull
push
pop
bound
sub
insl
sub
outsl
cmc
aad
loopne
jecxz
cmp
sub
push
movsl
dec
lahf
xchg
loop
cld
sub
jnp
loope
xchg
sbb
lahf
cmp
ss
hlt
popa
stos
dec
xchg
cli
pop
repz
jne
mov
dec
lds
int
ljmp
jbe
test
addl
out
add
jg
arpl
popf
xor
addb
loop
mov
and
mov
ret
push
add
push
mov
dec
inc
dec
sbb
cli
mov
and
icebp
mov
dec
movsb
xor
cmp
mov
arpl
mov
leave
adcl
mov
xchg
fwait
cltd
lret
push
adc
repz
aad
jo
lret
xor
ljmp
int3
mov
stc
or
inc
loope
adc
or
into
ret
sbb
mov
cli
pop
jge
loop
test
push
outsl
jl
fxtract
add
aad
in
mov
dec
xchg
cli
or
mov
imul
stos
imul
xchg
pop
sti
lods
xor
push
movb
dec
movsl
xchg
and
fdivp
jmp
call
ret
mov
ja
in
mov
add
mov
into
jp
xchg
test
loope
xchg
inc
pop
mov
sbb
sbb
daa
pop
inc
cmpb
adc
out
repz
mov
xchg
mov
cmp
or
cli
repnz
in
mov
dec
pop
mov
pop
je
lea
lds
insb
jg
rsqrtps
sub
ret
add
loopne
popa
inc
sub
adc
sbb
push
push
jo
fldcw
push
jnp
adc
lcall
xchg
xchg
into
mov
cmp
fiaddl
aam
sbb
rorl
stc
mov
dec
jne
pop
rcr
gs
pop
fxch
jb
mov
push
rcr
int
js
sbb
and
call
push
pop
call
pop
scas
mov
bound
mov
pop
and
xor
sub
pop
fucomi
xorb
mov
cwtl
pop
mov
adc
addl
cmp
clc
mov
std
xchg
repz
fldt
and
test
fwait
mov
test
pop
push
sbbb
inc
mov
nop
loope
ret
cmp
jne
push
fcmovnbe
sub
xor
mov
call
iret
leave
xchg
je
sub
in
loope
inc
ffree
ss
stos
inc
push
pop
dec
test
fidivrs
lods
xor
jno
inc
add
test
push
xchg
xchg
aas
pop
movsl
mov
pop
cmp
adc
lods
sub
or
out
pop
movsb
and
mov
daa
clc
test
pushf
mov
push
pushf
xchg
xor
jecxz
mov
insl
pop
jp
insl
push
mov
stc
and
mov
add
jnp
jl
hlt
mov
call
pop
sti
arpl
mov
repnz
push
mov
adc
jp
lods
jo
cmp
xchg
in
jmp
icebp
aaa
loope
jno
movsb
imul
cli
fwait
pop
inc
scas
adc
aam
imul
sbb
cmpsl
addl
mov
rcll
xchg
mov
sub
fmulp
pop
or
add
fs
ret
js
outsl
test
divb
fnsave
scas
rcrb
push
push
or
inc
ror
or
sub
shll
arpl
orl
lods
mov
mov
push
mov
add
sti
testb
dec
mov
cmc
cwtl
insl
adc
icebp
into
mov
lock
fistpll
hlt
pop
mov
mov
sub
or
notb
sbb
push
cmp
push
or
stos
mov
pop
inc
in
fwait
mov
repnz
les
xchg
std
mov
inc
stc
jae
aad
fs
xchg
ljmp
or
aaa
or
xchg
sbb
xor
call
sbb
pop
xchg
les
loopne
xor
sub
lds
dec
cmpsb
pop
xlat
scas
sub
jl
cmp
rorl
sub
sbb
jno
xchg
inc
cli
dec
stc
enter
push
push
in
call
dec
mov
out
pop
aas
shll
pop
pop
mov
jmp
sbb
mov
lret
loop
jle
xor
push
pushf
testb
inc
xlat
inc
cs
jae
adc
jmp
push
adc
jmp
pop
fisttpl
enter
adc
lods
stos
std
fs
int3
popf
mov
pop
dec
add
jae
notb
add
or
cld
rolb
inc
mov
jo
sarl
andb
mull
push
jbe
fldt
inc
push
lods
xor
sbb
adc
xor
in
xchg
fwait
je
aad
or
lock
or
or
jb
dec
paddusb
into
sub
pop
lods
dec
and
lods
mov
add
in
jb
dec
push
insl
and
sub
movsl
jmp
repnz
xor
popf
inc
xchg
xchg
aam
or
movsl
les
jmp
mov
or
lods
pop
and
test
inc
pop
data16
jne
stc
add
gs
sahf
rcrb
aaa
stos
xor
mov
fwait
xor
xor
inc
push
not
sarl
dec
cs
aam
push
dec
sub
add
pop
rclb
inc
lret
fdivrs
scas
sahf
daa
rorb
dec
xor
insl
xchg
shlb
jae
mov
repnz
or
push
subb
xor
jb
insl
xor
sbb
sub
iret
gs
hlt
sbb
cmp
sar
xchg
inc
jo
cmp
push
push
dec
outsl
inc
test
mov
jl
mov
xor
test
std
dec
pop
push
mov
pushf
addl
dec
sbb
jg
mov
sub
enter
stos
roll
add
mov
xchg
xchg
lcall
sbb
adc
ret
movsb
dec
fisubl
cmc
aam
andl
mov
pop
push
sbb
mov
loopne
sbb
jg
jae
int
mov
outsb
in
js
jo
icebp
xchg
aam
into
push
out
pop
fs
jp
in
jo
jmp
lret
stos
push
and
inc
jo
adc
mov
inc
bound
dec
repnz
add
in
add
test
in
fdiv
pop
inc
mov
xor
mov
loopne
mov
dec
lret
bound
insb
and
push
cwtl
movb
cmp
jbe
add
ss
movsl
mov
bound
dec
cli
mov
jnp
enter
inc
clc
inc
push
js
cmpsb
mov
add
outsb
insb
outsb
mov
mov
cmp
fcoml
add
push
lods
mov
pop
sbb
mov
pusha
mov
mov
xchg
and
loopne
sahf
mov
pusha
stos
xchg
mov
dec
fs
test
mov
pop
mov
lahf
arpl
lods
cmp
jg
sub
pop
sbbl
push
je
push
in
mov
jle
sub
cmp
push
in
test
idivl
mov
aam
repnz
cmc
dec
xor
adc
std
xchg
aaa
pop
cmp
push
into
mov
aad
in
out
fs
mov
pushl
int3
sub
pop
fldl
mov
jbe
push
or
xlat
jecxz
xor
insb
loop
xchg
push
pop
movsl
js
scas
movsl
out
sub
les
andl
xor
cmpsb
xlat
xor
adc
repz
imul
inc
ja
test
jge
out
and
add
rcrl
fdivr
pop
sti
out
sbb
jge
add
and
rorl
lods
mov
jle
shrb
fcomp
fldenv
leave
faddl
xor
push
arpl
xchg
mov
sub
rolb
popf
cmp
nop
les
jecxz
push
xchg
mov
into
dec
cld
pop
mov
adc
mov
fildll
inc
lds
daa
push
xor
cmpsl
cmp
aad
mov
decb
out
inc
pop
repnz
adc
ror
sub
cmp
jnp
ds
adc
dec
mov
or
call
dec
push
sbb
mov
xor
jg
jae
jge
fs
cmovnp
mov
mov
dec
mov
lcall
pop
lret
dec
xchg
popf
mov
add
mov
js
in
push
call
xor
push
pop
mov
ds
push
pop
cmp
scas
add
jb
int
movsl
fwait
pop
mov
pop
xchg
mov
into
wrmsr
pop
xor
std
sbb
popf
or
repz
dec
mov
int3
push
addl
loop
jecxz
jne
mov
cltd
push
jp
mov
jb
cs
test
outsl
stos
in
jp
xor
or
outsb
dec
dec
adc
icebp
add
jbe
incb
and
arpl
mov
add
adc
fadds
pop
adc
pop
aas
call
push
movsl
push
js
lock
lods
xor
jge
inc
out
push
pop
stos
shll
xchg
jbe
jle
arpl
pusha
xchg
add
fstpt
lret
mov
xlat
cmpsb
mov
cmp
xlat
pop
in
sbb
sbb
jmp
jne
lea
shlb
adc
jp
sbb
in
cmp
cmp
xchg
shr
pop
sbb
mov
dec
add
shll
insb
in
iret
mov
pop
push
xlat
mov
pop
pushf
dec
vandnps
sub
adc
aam
mov
jbe
jl
iret
aad
loope
cmp
insb
push
inc
mov
ljmp
stos
add
lods
mov
xor
push
push
jne
pop
loop
xchg
push
flds
insb
xchg
dec
in
pop
das
jno
mov
mov
stc
cs
mov
in
adc
inc
stc
fists
enter
and
jb
ficoms
jno
jnp
ds
xchg
outsb
sub
mov
addr16
dec
sub
and
adc
in
mov
add
lods
dec
pop
jae
add
test
jmp
cli
pop
mov
mov
loopne
xchg
push
and
pop
daa
xor
ljmp
and
mov
mov
mov
add
jb
popa
jg
addb
sub
lods
inc
jns
in
mov
mov
xlat
stc
jle
pushf
mov
lcall
adc
stc
sbb
xor
out
sahf
inc
mov
mov
mov
xchg
test
repnz
and
lret
in
les
fs
pop
in
mov
pop
lahf
shl
aad
jl
xchg
pop
jecxz
int3
pop
addb
jae
inc
adc
adc
dec
scas
and
out
push
sbb
mov
add
jecxz
mov
add
js
xor
or
and
lock
mov
push
dec
repz
pop
xor
mov
xor
cmp
pop
push
clc
xchg
cld
pop
pop
aas
inc
sub
out
popf
or
mov
daa
pusha
das
jecxz
cmp
aad
sbb
lock
dec
xor
mov
and
sub
int
stos
jg
mov
pusha
push
test
dec
out
adc
lahf
cmpsl
jge
ljmp
mov
adc
sar
add
movsl
cltd
pushf
and
cmp
lret
adc
sub
xchg
sbb
sbb
sub
lret
cmpsl
xchg
jo
xor
add
mov
mov
loop
lds
out
shlb
pop
xchg
sub
insl
jg
adc
xchg
aas
in
fnstsw
sbb
nop
clc
cmpl
fists
inc
pusha
adc
push
hlt
xor
sbbl
stc
mov
pinsrw
out
out
pushf
fistpll
sbb
inc
rcl
cmpsb
jb
lahf
xchg
adc
ss
fidivrs
pop
push
add
arpl
mov
addr16
or
mov
jae
popf
mov
mov
lds
mov
mov
adc
rolb
out
xchg
cmp
push
in
nop
xchg
js
mov
add
ror
lahf
loop
rolb
daa
lods
jnp
adc
add
jae
pop
add
stc
aam
addr16
pushf
ja
imul
cmc
ds
lods
fsubl
xchg
js
into
inc
sub
mov
std
pop
mov
stos
push
mov
ss
scas
ljmp
sbb
xchg
pop
xor
and
into
cld
mov
data16
jg
jns
pushf
mov
inc
dec
jno
mov
and
int3
xor
and
push
cmp
popa
data16
outsb
cltd
lret
in
rcl
mov
sti
fsubl
adc
sbb
pop
jmp
xchg
xchg
and
mov
inc
stos
sub
mov
mov
mov
enter
scas
scas
ljmp
cmp
fnstsw
push
aam
in
fbld
dec
in
push
pop
fs
or
in
pop
addl
daa
xchg
fs
mov
jge
movl
dec
jmp
xchg
or
mov
push
lea
lret
sbbl
mov
dec
loopne
fistl
xchg
add
lret
js
or
repz
fsts
mov
sbb
xor
gs
pop
cmc
sahf
push
inc
and
push
in
rclb
faddp
push
sahf
push
or
mov
lahf
sub
ret
out
fbld
cmpsb
cwtl
mov
sbb
and
fsubrl
nop
jp
daa
jo
test
stc
in
popa
jns
and
shlb
hlt
pop
cmp
inc
daa
mov
mov
mov
test
into
rcrb
inc
or
and
add
inc
mov
xchg
movsb
and
sbb
push
cmp
popa
push
xchg
mov
xchg
adc
or
fsubp
xchg
test
popa
cmpsl
jne
jo
adc
sbb
in
xor
in
add
push
add
mov
add
adc
sti
cmpsb
fs
lcall
fwait
jle
outsb
or
stos
mov
jns
inc
pop
jno
imul
into
repz
stos
sbb
shll
and
js
dec
fstl
int
into
mov
ljmp
fisubs
ret
sub
clc
pop
das
mov
sub
fisttps
pop
add
cmp
xor
jmp
mov
jg
xor
cli
mov
and
dec
rclb
push
push
dec
inc
cmp
imul
ret
cmp
push
ds
mov
inc
push
iret
movups
jne
jmp
pop
aam
scas
imul
fs
out
fisubrl
xor
and
inc
sahf
cmp
jbe
ds
movsl
fidivl
mov
xlat
outsl
xchg
lods
daa
and
or
mov
lret
jmp
or
call
pop
cmp
and
stos
ret
daa
sti
xchg
aam
rcl
xchg
and
inc
add
mov
inc
adcb
and
xor
ja
xor
mov
data16
mov
and
sbb
mov
xor
subb
int3
addb
dec
pop
push
xchg
dec
add
xor
shl
cmp
ss
push
sti
or
mov
sbb
and
cmpsb
push
add
mul
sbb
inc
jle
pop
jmp
int3
pop
sub
xlat
pop
pop
dec
adc
mov
stc
mov
xor
pop
cmpsl
or
in
stos
cld
xor
bound
arpl
fiadds
xchg
adc
jnp
sub
out
sbb
mov
cmp
cmp
add
pop
loop
and
mov
xchg
rcrb
enter
push
sub
push
aaa
add
mov
je
sub
in
inc
pushf
lods
cmpsb
mov
jne
jb
jl
test
stc
xor
shll
sbbb
mov
adc
lods
enter
into
or
xlat
inc
mov
outsb
mov
mov
idivb
cmp
jmp
shl
mov
shl
jbe
dec
hlt
addb
dec
cltd
fwait
dec
sahf
lds
mov
out
xor
inc
cltd
adc
stos
add
pop
std
movsb
bound
mov
inc
fnstenv
lock
in
dec
jl
mov
das
sahf
scas
cmpsl
xor
rclb
dec
ja
lret
fisttpll
int
shl
gs
inc
fdivs
testl
sbb
pop
pop
lds
mov
mov
stc
mov
cmp
fnstsw
lock
pavgw
aad
pop
inc
pop
cmp
nop
or
test
pop
dec
bound
xchg
cs
sti
pop
daa
pusha
mov
cmp
fistl
or
cmp
or
xor
mov
lret
sbb
sar
fmull
push
cld
xchg
mov
push
inc
inc
mov
sahf
sub
mov
es
lahf
hlt
mov
jo
jno
les
sti
mov
dec
in
rcll
test
xlat
imul
enter
clc
pop
fbstp
and
int3
mov
nop
pop
or
adc
fisttpl
and
lahf
sub
sbb
dec
push
xlat
push
xchg
aam
jl
cmp
sub
out
or
jne
push
dec
movaps
fsub
mov
push
or
jae
mov
xor
enter
cwtl
dec
popf
aad
ror
out
xchg
jecxz
sub
cli
push
sarb
scas
fisubrs
enter
mov
and
mov
adc
das
scas
jo
jge
sbb
pop
xchg
cmpsl
mov
cmpsb
mull
insl
add
insb
jb
mov
cmpsl
xor
xor
add
pop
and
cmp
pop
jle
inc
ja
push
mov
mov
pop
int
movsl
push
push
add
das
mov
jmp
fdivs
mov
aaa
xor
mov
out
mov
sub
mov
or
xor
fs
out
sub
loop
xor
push
popa
repz
pop
mov
ret
add
mov
jmp
push
js
aas
cs
or
xchg
xchg
dec
add
sbb
mov
data16
sub
mov
jmp
sbb
sahf
insb
pop
jmp
stc
jge
in
jg
cmpsl
call
into
ds
sbb
jmp
cmp
or
gs
lock
sub
push
cwtl
std
popf
dec
push
adc
add
dec
lods
jnp
jp
lods
pop
fmul
test
fistl
sub
outsl
xchg
icebp
fisubl
dec
push
insl
addr16
adc
push
cmp
pop
pop
es
out
push
inc
lahf
cli
jns
je
jl
pop
hlt
and
rcrb
dec
std
jle
xor
aaa
xchg
or
cltd
shlb
adc
into
xchg
adc
je
or
dec
in
cmc
sub
pusha
iret
vminpd
subb
inc
push
insb
in
jle
and
gs
in
sbb
andb
xor
mov
pop
lea
pop
sbb
sub
shrl
mov
addr16
jge
jmp
nop
std
test
mov
mov
mov
int
push
jne
fcoms
mov
mov
add
fiaddl
push
xor
pusha
ret
pop
mov
ljmp
shl
inc
add
dec
data16
sbb
sub
push
mulb
out
loope
jmp
inc
in
stos
cmc
fbstp
and
inc
scas
mov
cmpsl
xor
push
mov
adc
push
es
add
dec
xchg
call
cld
jbe
push
inc
mov
sub
sbb
mov
imul
inc
cmp
shrl
idiv
xchg
and
jnp
js
adc
scas
leave
xor
popa
push
les
push
jb
test
cld
fidivrl
mov
inc
in
scas
pop
pop
push
rcrl
mov
cmp
pop
push
pop
stos
out
aas
mov
adc
fsubs
dec
mov
mov
cmc
cli
and
push
dec
xor
pop
cmp
mov
dec
test
mov
testl
jnp
jb
cs
repz
int
adc
inc
shrb
sub
xor
lcall
fisubrs
shrl
sub
sbb
arpl
out
add
and
pop
lds
lock
sbb
cs
adc
mov
outsl
gs
pushf
push
sbb
cltd
rcll
mov
pusha
pop
outsb
mov
nop
cmpsb
add
int3
and
xlat
add
and
inc
lds
cwtl
notb
jbe
mov
push
sub
pop
loop
mov
repz
jne
sti
stc
dec
sbb
push
shll
mov
daa
fwait
out
pop
dec
daa
stos
pusha
test
inc
popa
btr
sar
in
jo
imul
fnstsw
scas
mov
and
lahf
fistpl
divl
dec
ljmp
int3
mov
and
push
lock
outsb
lcall
xlat
mov
subl
movsl
out
or
les
pusha
mov
jmp
sub
lods
and
add
xor
je
lret
std
stos
inc
pop
push
jb
pop
push
pusha
add
sbb
jb
aam
orl
pop
movsb
inc
push
inc
movsb
or
cmp
cltd
aaa
shll
push
and
cmpsb
aas
pop
hlt
subl
jbe
ret
ret
call
ss
dec
ljmp
sub
dec
mov
scas
xchg
mov
jmp
call
cmp
addr16
ja
sti
mov
sbb
std
imul
push
fisubrs
test
fcoml
call
xor
cmc
fs
add
mov
cbtw
addb
push
gs
cmp
lea
jg
aam
mov
xor
fldenv
aad
mov
in
sub
int
test
sbb
xchg
insb
xchg
addl
fwait
xchg
std
das
pop
xchg
mov
stc
test
test
push
jnp
xchg
fidivs
in
inc
push
xor
jne
jl
and
test
into
add
enter
push
in
leave
imul
nop
loope
std
jnp
dec
mov
mov
cmp
inc
mov
push
call
sbb
xor
je
loopne
push
mov
fwait
pop
push
outsl
enter
cmp
xor
outsl
bound
jno
cmpsl
or
shl
imul
std
ljmp
sub
dec
ljmp
lahf
push
in
aam
fwait
cmpsl
int
test
mov
mov
out
dec
xor
mov
fwait
and
lods
popf
bound
mov
inc
pop
jae
outsl
fcmove
sbb
ss
sub
aaa
aad
test
shll
mov
mov
cli
aas
sbb
mov
push
loope
xor
xchg
in
ja
fists
mov
insl
dec
mov
pusha
mov
add
dec
pop
rcrb
pop
and
mov
mov
movb
push
adc
adc
push
push
scas
add
and
cmp
xchg
nop
pop
pop
sbbl
mov
pop
mov
sbb
jg
es
jle
ljmp
popa
mov
pop
or
shrl
cmp
cli
lds
int
mov
push
cmp
lds
and
mov
sub
test
rcr
cmpsl
fsub
in
fisubs
mov
cmp
enter
sahf
jecxz
test
inc
jp
sub
jge
adc
hlt
jg
out
repz
xchg
sub
rcrb
pop
sbb
add
scas
dec
clc
xor
push
bound
ficoml
lods
sub
push
sti
xchg
test
repnz
cmpsb
stos
lret
stos
test
in
movsb
pop
jl,pn
mov
scas
or
imul
not
mov
mov
xor
rol
xchg
and
push
fs
pushf
dec
xorb
sbb
outsl
inc
movb
lods
inc
jo
pop
push
inc
sbb
das
mov
cmp
testl
cmp
push
hlt
push
sub
or
adc
adc
pop
orl
lock
or
mov
mov
inc
mov
call
cli
sahf
sub
adc
jne
movsb
pusha
test
cmp
sub
inc
movsb
sub
sahf
adc
jle
push
jmp
xor
scas
cmp
dec
js
aad
jne
mov
or
shl
sbb
push
push
loop
jle
aaa
or
pop
jnp
in
sub
sub
cld
aaa
aaa
push
and
ljmp
in
mov
add
and
cld
inc
dec
imul
xor
mov
cmp
shlb
jno
fidivrl
add
cs
movsb
jne
pop
xor
je
jmp
jnp
dec
sbb
pop
scas
sbb
cmp
pop
pop
sbb
jle
andl
rclb
dec
push
add
movsb
push
jl
fs
arpl
loope
pop
jno
mov
cmp
pop
pushf
xchg
sahf
xlat
and
call
sbb
adc
mov
jo
pop
cmpsl
pop
sub
cmpsl
cmpl
xchg
lret
mov
rorl
gs
and
rcrl
cmp
push
divb
jge
mov
push
mov
sub
clc
inc
or
inc
adc
es
lahf
sub
add
mov
jnp
push
push
icebp
and
loope
push
in
rcl
sub
push
repnz
cld
xchg
in
inc
jmp
je
aam
jb
push
dec
xor
push
sahf
dec
shlb
leave
outsl
inc
add
popf
push
insb
and
xchg
test
pop
pop
push
int3
out
xor
lds
push
cmp
addr16
sub
ss
xor
jp
cltd
adc
and
fcoms
outsb
fstpl
and
add
imul
stc
imul
aaa
jno
lods
push
sbb
and
sub
or
or
sarl
inc
adc
cltd
xchg
jbe
lahf
pop
test
movsb
pop
push
xor
aas
mov
push
arpl
lds
push
pop
dec
out
jmp
mov
xchg
adc
pop
jl
adc
jg
cltd
movsb
lahf
or
aas
adc
cmc
icebp
mov
sbb
mov
out
fildl
xchg
clc
pop
cmpsb
icebp
adc
imul
icebp
mov
jnp
test
push
xlat
dec
fsubrs
cs
rorl
pop
mov
clc
lods
push
sti
fcoml
and
push
testb
lods
iret
std
insb
jecxz
cld
loop
mov
push
lods
pop
or
setbe
mov
add
xchg
orb
pop
jbe
lea
shr
lds
repnz
cmp
cltd
push
sub
jnp
pop
xchg
mov
push
sbb
xchg
rcl
mov
or
mov
mov
cs
aas
xlat
ja
cs
cmp
and
ret
xchg
gs
cltd
ror
push
add
dec
xchg
mov
add
insb
dec
insb
adc
inc
sub
ret
pop
fwait
adc
pop
inc
and
repz
hlt
cmp
loope
cli
arpl
push
push
cmp
jns
leave
test
jbe
mov
jbe
loop
xor
sahf
mov
pop
xchg
sahf
fdivrl
cmp
call
push
out
ficomps
into
mov
xor
adc
push
test
popl
lret
fwait
mov
pusha
cmp
and
fidivrs
sub
adc
push
push
ja
jb
pop
cmp
pop
popa
imul
in
out
clc
and
mov
aad
sbb
cmp
loope
in
sti
add
bound
mov
fs
icebp
insl
fadd
int
out
es
data16
outsl
fsubrp
cs
inc
cmp
pushf
adc
fs
loope
out
jnp
dec
jp
add
ljmp
sub
rorl
in
sti
aaa
popf
ds
imul
cmpsl
call
jle
mov
jne
aam
int
mov
icebp
fwait
mov
push
dec
xchg
and
xchg
mov
out
ret
pop
dec
jnp
xchg
lret
fsts
push
ljmp
scas
cmp
pushl
add
and
push
stos
imul
gs
ljmp
in
bound
or
jecxz
imul
push
dec
test
imul
or
cmp
adc
dec
mov
and
insb
xchg
push
sbb
movsb
jp
mov
adc
cmp
add
in
iret
cmp
sti
cwtl
jo
fstpl
dec
xchg
and
xchg
inc
mov
sub
lret
cltd
cmp
fmuls
jno
pop
in
clc
daa
mov
mov
sti
daa
cmp
pusha
or
inc
xor
sbb
xchg
adc
inc
lock
test
xor
shlb
mov
mov
or
xor
push
add
lds
jae
imul
fisubs
andl
cld
mov
jb
mov
push
iret
sub
icebp
loope
in
pop
hlt
sub
scas
xchg
push
dec
cmp
xchg
push
int3
loopnew
and
mov
xor
add
shl
jae
mov
cmp
iret
in
dec
sbb
dec
adc
sub
jnp
cs
xchg
in
loope
and
incb
fiaddl
les
call
xchg
loope
xor
push
jnp
cmpl
sbb
push
les
and
cld
mov
ja
sarl
push
mov
add
decl
pop
pop
dec
jne
mov
sub
flds
jne
push
sbb
test
rorl
or
rcl
sti
add
movsb
lods
addr16
in
push
repz
jae
or
inc
ficomps
mov
jo
and
mov
inc
mov
sbb
jle
jo
xor
pop
ret
lret
mov
mov
mov
iret
ret
subl
dec
add
test
push
je
sub
fists
jp
out
lds
in
xchg
push
outsb
imulb
insl
add
inc
es
jge
insb
xor
mov
mov
fimuls
mov
fdivs
cmp
add
or
aam
xor
mov
push
loop
pop
mov
nop
inc
dec
movsb
repz
push
addb
pop
mov
sbb
inc
and
jmp
xchg
sub
cmp
jle
adc
cld
imul
cmpb
outsb
aas
and
add
imul
cli
mov
mov
es
dec
bndstx
fsubs
adc
inc
sti
mov
push
dec
hlt
xchg
jbe
cld
xor
into
into
lret
sub
or
lcall
out
nop
movsb
imul
cmpsb
push
sub
stc
and
iret
jne
add
xchg
pop
xchg
loope
or
ret
push
cvttps2pi
or
add
fwait
out
cs
fldt
mov
ret
faddp
push
and
leave
aas
mov
inc
fisubs
push
sub
mov
cmc
jp
push
mov
push
in
adc
push
xor
mov
push
push
pusha
jl
adc
ss
data16
mov
mov
jmp
dec
ja
test
pop
cmp
cltd
mov
xchg
push
push
push
inc
enter
mov
pop
data16
jmp
fadd
je
or
mov
psubd
jns
dec
movsl
xor
ror
fsubr
cli
ds
pop
or
test
cs
pop
mov
lahf
sar
out
lods
xor
dec
push
decb
lds
testb
push
fldenv
fwait
mov
ret
dec
scas
sub
mov
lods
push
test
and
sbb
mov
je
sub
xchg
addl
es
lods
push
enter
sub
in
loop
xor
aam
sahf
push
sub
fnstenv
int
adc
scas
inc
push
test
add
clc
sub
push
mov
cmpsb
mov
lods
push
mov
icebp
mov
pushf
xor
mov
pop
test
pop
jno
add
inc
dec
call
jae
sbb
cmpsb
ljmp
dec
dec
filds
scas
xchg
cmp
add
mov
aaa
clc
adc
jmp
dec
jnp
fisubrl
mov
aaa
fcomip
cmp
ja
insl
sub
fidivrs
sub
cmp
dec
lods
outsl
add
jg
xchg
xchg
adc
aaa
inc
inc
movsl
jne
outsl
add
aas
sub
js
jns
mov
sub
ds
int3
sbb
and
testl
dec
mov
mov
xor
adc
add
inc
pusha
fdivrs
xchg
cmp
sti
fwait
rolb
add
jp
inc
add
mov
jns
js
xchg
sahf
lea
mov
xchg
xlat
or
popa
ljmp
pop
mov
int
mov
loopne
and
cmp
xor
enter
xor
dec
hlt
sub
dec
mov
add
adc
pusha
cmp
inc
pop
movsb
jno
movsl
inc
add
movsb
cmp
jnp
pop
stc
jecxz
dec
mov
in
pop
and
lahf
gs
insl
int
sbb
sbb
mov
xlat
jno
xchg
add
jnp
push
insl
dec
and
cmp
insl
adcb
sub
ret
int
pusha
loope
fistpll
and
jnp
pop
aaa
sbb
lock
inc
adc
pop
mov
push
popf
pushf
outsb
pop
xchg
mov
adc
pop
sbb
mov
adcb
mov
insl
jl
push
ljmp
outsb
cs
stos
in
andl
rolb
dec
xchg
lret
jno
loope
out
mov
fcomip
jns
cmpsl
and
testb
xor
imul
push
cmp
sbbl
mov
lret
sti
imul
xchg
imulb
cmp
out
mov
pop
jns
in
cmp
jns
mov
mov
les
push
int
push
xlat
push
in
outsb
jae
pop
adc
sbb
shr
aad
aam
daa
mov
inc
jg
inc
xor
icebp
inc
inc
mov
repz
iret
outsb
xor
ljmp
insb
pop
mov
dec
or
mov
jbe
dec
insl
sub
aas
sbb
mov
xchg
jne
scas
idivb
in
test
test
jg
das
popf
jbe
push
jns
mov
into
lahf
lods
jb
rcr
std
lods
inc
mov
subb
inc
add
fnstenv
and
mov
cmp
adc
rolb
les
cwtl
dec
mov
mov
ret
lcall
push
add
dec
and
push
add
sub
pop
out
inc
sub
jp
neg
jns
and
int3
mov
popf
push
rcl
sbb
outsb
gs
xchg
stos
push
pop
mov
or
shlb
xor
or
mov
jl
sti
out
lcall
mov
in
dec
test
pop
cmpsb
data16
jo
xlat
xchg
adc
les
xchg
mov
or
or
xor
cmpsl
cwtl
outsb
stos
inc
mov
rcrl
je
or
and
hlt
stos
fmull
aas
dec
inc
cmp
lret
xor
inc
ficompl
sub
cld
ret
and
xchg
dec
pop
js
adc
xchg
sbb
inc
cmp
pop
popf
xchg
xlat
iret
daa
pusha
push
mov
rol
cli
add
mov
cmp
xor
push
loopne
adc
sub
mov
stc
jmp
xorb
data16
push
xlat
mov
jo
mov
jb
rcll
ljmp
push
mov
sbb
fildll
dec
fisubrl
push
mov
test
ss
rcll
lods
push
mov
rorl
rorb
test
jno
jae
mov
sub
sub
inc
mov
inc
clc
xor
mov
enter
stos
ljmp
inc
mov
lret
add
sub
push
mov
dec
data16
mov
rcl
gs
dec
cld
mov
and
lahf
jno
out
adc
xor
inc
gs
cmpb
or
xchg
xlat
push
or
fadds
cmpsl
fdivr
adc
or
sub
sub
incb
ret
jb
call
mov
sahf
push
loopne
add
sbb
xor
or
pop
lahf
mov
add
or
cmpsb
addb
sbb
cmp
sarb
cmpsb
in
mov
mov
lock
ret
xor
rolb
sahf
xchg
adc
outsl
push
clc
into
test
ds
mov
mov
rcrb
sbb
lret
rol
lock
lcall
iret
lods
push
inc
les
iret
bndldx
or
cmp
adc
ret
ficoms
outsb
cld
outsb
and
push
int3
imul
subb
call
ror
mov
mov
hlt
mov
jp
mov
push
pop
mov
or
inc
mov
ffree
xchg
jg
inc
sub
in
fnstcw
loopne
push
jl
push
xor
jp
sub
jns
dec
mov
into
ret
push
jmp
dec
ror
mov
and
ret
test
rcll
pop
insb
xor
push
aaa
cli
lock
jmp
xor
dec
add
std
ljmp
setp
inc
outsl
mov
imul
jmp
sub
jp
mov
mov
jno
stos
jle
cmp
adc
int3
jbe
nop
fs
cli
pop
inc
sub
cltd
imul
jns
adc
daa
lods
xchg
cmc
or
loope
imul
out
push
lahf
inc
add
mov
mov
iret
add
enter
inc
in
xor
test
fwait
xchg
dec
lods
in
or
rorb
ret
aaa
test
mov
clc
rclb
lock
outsl
out
push
fsubs
pop
cmp
testl
test
rolb
adc
push
iret
and
lret
xor
and
bound
cld
mov
es
gs
sbb
cli
push
cmp
lea
lret
and
lahf
insl
mov
dec
lret
jnp
lahf
jb
incb
inc
lea
orps
push
xlat
dec
cmp
jb
and
mov
dec
movsl
inc
loop
ljmp
leave
mov
pop
test
sti
int3
cmp
inc
out
dec
xchg
fwait
dec
mov
shrl
push
es
repz
and
sbb
sub
add
sub
gs
int
sbb
aaa
pop
mov
out
push
sti
and
fadds
mov
inc
fsts
mov
loopne
call
out
adc
adc
mov
sub
daa
leave
movsb
push
call
iret
rclb
cwtl
mov
or
lods
push
jl
shll
sub
enter
and
hlt
jno
test
rcrl
dec
aaa
sbb
xchg
arpl
dec
and
push
aas
xorb
dec
mov
mov
jecxz
mov
jp
loopne
lds
ffree
jo
daa
shrl
jns
mulb
stc
jp
bound
imul
adc
sti
out
sub
movsl
popf
and
stc
jns
pusha
and
cmpsl
or
into
xor
sti
inc
push
stc
add
arpl
cmp
jae
lods
xchg
mov
cli
mov
fisubrs
jg
sub
ret
nop
outsl
sbb
movsl
pop
add
jo
pop
jecxz
jecxz
ss
cld
jmp
xlat
out
cmp
xchg
adc
jb
add
mov
insb
aad
lret
add
fimuls
fldenv
cmp
pop
lods
inc
push
add
xlat
jns
in
fldt
cmp
lret
jl
mov
sarl
ret
pop
or
adc
adc
cld
push
ss
mov
cltd
mov
push
out
sub
push
and
imul
sti
bound
nop
add
std
out
xchg
xor
daa
int3
sti
dec
pop
sbb
jl
push
push
jl
jns
hlt
std
insl
mov
add
jb
pop
xor
cli
sbb
ljmp
jo
jbe
ds
stc
ret
rcr
call
mov
sti
lods
push
ljmp
orl
and
fadds
aad
jp
mov
push
dec
enter
add
adc
fcomip
lods
call
sub
inc
stos
cmp
mov
outsb
lret
add
aaa
and
cmp
in
popa
mov
sub
repnz
push
adc
repz
sbb
je
aaa
mov
das
xchg
cwtl
mov
jmp
adc
jg
or
sbb
nop
jne
rorb
push
xchg
cltd
out
sub
or
pop
test
jle
fbld
aas
or
push
sbb
mov
fistpll
jl
lods
imulb
mov
imul
jl
inc
in
int
dec
xchg
in
shrb
in
movd
add
add
jb
cmpsl
in
jbe
cli
mov
push
es
mov
adc
nop
std
mov
xor
shll
mov
add
dec
addb
xchg
inc
or
dec
loopne
dec
pop
cmp
insb
mov
xor
xchg
jmp
add
adc
cld
inc
and
int
pop
pop
test
test
push
shll
or
int
addl
dec
pop
pop
in
cmpsl
je
inc
out
mov
fcoml
imul
cld
jecxz
and
push
loope
add
test
aaa
rolb
inc
push
jnp
sbb
mov
out
xchg
cwtl
xchg
ljmp
in
loop
adc
cltd
pop
inc
xchg
or
cltd
inc
stos
pop
arpl
aam
lahf
mov
dec
sub
fistpll
cmp
lods
xor
xlat
int
or
inc
xchg
push
imul
push
mov
push
aam
ret
leave
jmp
push
daa
or
pushf
cltd
ds
mov
mov
aas
repz
xchg
in
sbb
std
in
mov
fwait
out
push
jmp
xor
lds
adc
repz
or
mov
push
rolb
sub
cmp
das
and
inc
cmp
or
shll
adcl
push
out
dec
mov
adc
cmp
test
fdivrs
mov
enter
test
pop
outsb
sbb
jmp
movhps
popa
notl
cld
fmul
ss
sti
sarl
lods
pop
out
inc
ss
pushf
stc
add
pop
std
mov
cmc
in
and
push
in
push
cltd
mov
gs
inc
push
les
out
scas
mov
dec
fisttpll
outsb
in
xor
and
mov
pushf
clc
jns
jecxz
sbb
icebp
addl
lret
insl
mov
xor
push
lds
popf
mov
pop
sub
jnp
mov
mov
dec
addr16
loop
jne
fwait
jge
jge
push
ss
in
aad
ljmp
cli
imul
lret
js
gs
out
repz
sahf
dec
mov
jb
sahf
imul
add
sbb
sub
ret
jns
pop
push
jmp
pop
sar
adc
cmc
out
dec
sbb
jne
mov
push
push
jne
std
inc
lcall
sbb
and
mov
sub
dec
fcoms
mov
fwait
jecxz
jge
dec
push
stc
jle
arpl
cmpsb
xor
cmp
adc
dec
stc
jmp
out
or
scas
jne
repnz
movsl
psrlw
fimull
leave
sti
lds
repz
adc
mov
cmp
ja
lcall
mov
movsb
rclb
rcr
ret
push
scas
cld
daa
mov
xchg
cli
mov
sub
sbb
fldt
rcr
jecxz
daa
push
adcl
sub
leave
out
stos
and
pop
ds
cmp
ljmp
idivb
push
jne
inc
xor
rcrl
rclb
sbb
or
outsl
out
pop
fwait
in
stos
in
out
bound
stos
xchg
lods
out
add
aad
sbb
dec
xchg
aam
mov
xor
fwait
sub
addr16
xor
mov
inc
cld
scas
iret
or
jbe
sub
add
pop
jg
fs
aaa
jl
sbb
sub
mov
loope
jb
in
jnp
dec
push
jp
or
popa
and
imul
addl
movsl
ljmp
add
fwait
jmp
push
sahf
sub
lea
addr16
pushf
adc
int
add
rcl
shrl
add
mov
mov
dec
cmpsl
mov
xchg
inc
mov
clc
xchg
std
loop
loope
sub
lea
iret
movsb
xor
into
in
xchg
or
or
sub
out
das
iret
pop
aam
fs
out
adc
jns
inc
push
mov
mov
dec
inc
mov
lods
enter
lods
jne
mov
in
jge
cmp
pop
addr16
lods
mov
mov
out
fadds
cmc
outsl
jge
fisttps
stc
cmp
test
pop
scas
mov
push
cmp
in
lock
ss
push
rcrl
mov
lea
fs
cmp
sbb
out
arpl
lret
test
int
cmp
mov
rorb
mov
or
mov
repnz
sti
cmp
in
arpl
insb
fsts
loopne
adc
push
mov
jb
jle
das
data16
loop
jb
hlt
call
sti
mov
lock
pop
or
mov
out
xor
nop
adc
sbb
dec
push
dec
fs
mov
or
jae
sub
les
nop
push
jnp
lea
std
out
pushf
mov
jl
scas
stos
loop
icebp
lock
mov
mov
inc
pusha
inc
lret
xchg
xchg
mov
imul
data16
jg
loop,pn
mov
and
inc
mov
or
sbb
popf
dec
ja
iret
sub
sbb
mov
mov
mov
push
xor
popf
ret
fwait
shll
mov
gs
xor
shll
xor
and
cmpsb
cld
icebp
xchg
push
rolb
pop
and
add
xchg
lds
lret
adc
add
adc
les
call
mov
adc
ds
pop
sbb
out
and
dec
aad
and
lret
push
push
sub
mov
outsl
sub
mov
lods
mov
pop
mov
lds
dec
cmp
filds
popl
mov
nop
xlat
mov
aas
adcb
inc
mov
hlt
insb
arpl
gs
clc
sub
mull
xchg
inc
xchg
and
es
add
imul
and
push
sbb
outsb
ret
gs
dec
cld
fsubrs
movsb
mov
dec
pop
fsubs
movsl
ret
dec
fildl
push
sbb
xor
std
or
jl
cmc
test
adc
mov
xchg
fbld
xor
mov
loopne
or
mov
sub
jp
mov
mov
ss
jg
pop
orl
mov
and
rcrb
in
cmp
imul
incl
lock
xlat
mov
sbb
jno
add
push
xchg
jnp
imul
mov
roll
clc
pop
xchg
shlb
xor
stc
sti
jns
push
adc
adc
stos
sub
xor
inc
lock
lea
xchg
jecxz
dec
bound
push
call
enter
icebp
pop
jo
cmp
ret
inc
and
lods
out
je
inc
push
adc
jae
pusha
jne
in
jnp
adc
mov
sbb
pop
xor
sub
pop
je
int
fs
std
or
mov
jnp
push
pop
movsb
mov
mov
in
dec
mov
insl
inc
pushf
jns
push
xchg
mov
inc
pop
sbb
mov
rcll
lods
hlt
sbb
adc
in
hlt
xchg
les
add
push
filds
inc
xchg
scas
mov
jbe
iret
xchg
insb
xchg
inc
add
fsubrl
xchg
mov
popf
or
xor
add
cmpl
out
lret
leave
popf
cli
int
push
xor
inc
popf
pusha
ljmp
lods
add
inc
and
cmp
in
enter
mov
fsubrs
sub
dec
arpl
and
lret
adc
push
jnp
scas
shll
cli
mov
sbb
mov
jp
lods
scas
push
out
and
call
xchg
out
into
inc
out
inc
outsb
lcall
daa
cld
nop
lods
ret
lcall
repz
imul
das
cmpb
sub
sbb
cltd
sub
push
mov
js
push
stos
inc
nop
and
sub
mov
aaa
pop
push
push
lods
mov
incb
popa
aam
sub
xchg
mov
arpl
xorl
pop
mov
and
outsl
jne
jns
loopne
movsl
sbb
scas
dec
inc
jp
jmp
push
jno
and
addl
pop
fimull
sub
mov
cmc
cmp
daa
rcl
add
cmp
clc
cmp
fdivrl
xchg
inc
imul
ds
adc
xchg
sub
icebp
cmp
ja
leave
push
aad
cmc
mov
testl
add
lret
gs
xchg
stos
out
pop
inc
sbb
rcll
or
add
push
dec
jo
insb
rolb
xchg
cmp
xchg
aam
or
push
xchg
dec
pop
or
decb
pop
mov
pop
pop
loop
xor
and
xor
test
int
imul
rcrb
jno
jmp
xor
rorl
movsl
or
and
aam
movsl
or
mov
je
icebp
imul
data16
inc
cwtl
inc
push
mov
jle
enter
sub
arpl
mov
jno
or
pop
jmp
out
orl
enter
jmp
sbb
mov
test
xchg
push
movsb
push
xor
xchg
push
mov
test
and
pop
dec
rclb
jg
sbb
stos
out
xchg
jne
addb
mov
adc
cltd
inc
and
in
mov
xchg
or
xchg
dec
adcb
fisubl
push
jg
xchg
test
aaa
cmp
xor
into
mov
rcr
iret
add
insb
adc
mov
mov
jle
or
iret
ljmp
insb
push
cwtl
test
fistps
cmpsl
xor
lods
sti
push
ljmp
add
push
fwait
pop
std
sub
arpl
mov
dec
outsb
mov
push
adc
sub
fwait
scas
mov
pop
pop
or
and
addl
repz
pop
in
push
mov
cs
mov
jb
into
xchg
daa
fiadds
mov
add
aaa
mov
dec
notb
push
and
gs
mov
adc
and
inc
sub
test
sub
dec
adc
in
push
cltd
sarb
or
js
lds
leave
xchg
push
jecxz
loope
dec
cmp
cmp
mov
sti
fxch
add
sub
pop
es
arpl
xor
lret
aad
hlt
aaa
ret
insl
xor
adc
mov
sbb
imulb
sub
and
movsb
push
mov
in
mov
push
lock
mov
xchg
push
hlt
cmp
xor
fidivs
sub
jne
pop
push
insl
or
sub
dec
addr16
jne
fcompl
push
inc
lret
inc
out
adc
sub
mov
enter
mov
or
xor
adc
mov
mov
cmc
in
sub
jnp
pop
xchg
shr
pop
ss
lds
and
into
mov
xor
push
mov
imul
inc
adc
stos
mov
jg
mov
mov
adc
fistpll
jge
aas
test
xor
mov
daa
mov
jle
cmpsl
incb
push
inc
cmp
movsl
jne
ss
clc
mov
dec
adc
mov
mov
mov
call
ss
loope
xchg
fcmovnbe
xchg
xchg
bound
xor
lea
fstps
or
sarb
sbb
push
imul
pop
pop
mov
xorb
inc
or
push
movsl
shll
testb
rcrl
push
xlat
rclb
xor
jne
push
out
in
dec
loop
ljmp
in
adc
mov
andb
xchg
mov
mov
dec
fbstp
gs
and
adc
inc
es
aaa
outsl
fiadds
out
outsb
addr16
cld
push
dec
ficomps
out
inc
inc
test
popa
pop
rorl
subl
dec
inc
inc
test
rcl
clc
or
xchg
scas
add
lods
inc
ljmp
sbb
pop
frstor
sub
sbb
push
test
mov
lahf
inc
pushf
scas
pop
call
xor
xchg
or
add
sbb
xchg
mov
fidivrs
ja
test
stc
mov
data16
scas
jmp
sub
mov
call
mov
push
or
out
mov
sbb
mov
das
rcrb
and
inc
pop
sti
lock
fwait
jbe
and
loopne
fistpll
mov
sbb
mov
fcmovbe
cmpsb
fnstsw
or
mov
mov
xchg
lds
inc
mov
gs
push
stos
sbb
push
mov
hlt
mov
scas
xchg
jae
mov
add
aaa
or
push
fwait
lahf
pop
push
jecxz
pop
mov
adc
jle
bound
cmc
popa
ljmp
fadds
leave
imul
push
jo
cmp
imul
xchg
push
sub
jo
arpl
cmp
mov
xor
fadds
and
sbb
jnp
cwtl
imul
cmpsb
in
xchg
adc
fsubr
pop
cltd
int3
rol
shlb
and
stos
scas
cmova
imul
xchg
inc
jl
stos
mov
mov
dec
jne
pop
or
mov
enter
scas
out
call
cmp
lea
lods
aam
ljmp
sub
ret
out
ret
or
ret
or
test
mov
ss
imul
push
jno
lret
in
je
or
aas
int3
aas
jle
cltd
stos
jno
dec
cmp
lds
into
mov
inc
xchg
nop
cli
imul
shrl
push
enter
fstl
jo
data16
inc
mov
pop
imul
jmp
sahf
inc
mov
fisubl
stc
mov
mov
int
push
int3
lock
in
scas
out
ret
xlat
xchg
push
or
scas
call
sbb
push
inc
cmp
add
and
sub
ret
xor
fwait
jo
mov
jo
ljmp
mov
in
mov
ds
push
pop
adc
push
pop
xor
jae
inc
push
subl
or
pop
mov
mov
xlat
adc
add
sub
xor
jno
push
and
mov
mov
cmp
popf
or
or
sbb
mov
mov
xchg
jmp
cmpsb
push
jb
mov
cmp
or
sbb
bound
inc
sti
inc
push
aad
test
cmp
add
sahf
xchg
test
arpl
movsb
push
pop
mov
pop
or
sub
add
mov
adc
jno
cli
jbe
pusha
loope
push
and
mov
xchg
outsl
enter
xor
ja
push
sbb
fiadds
pop
pop
mov
sub
mov
sbb
mov
pop
xchg
xor
cmp
jmp
xor
andb
cltd
lock
mov
mov
jg,pn
out
sbb
push
or
sub
ret
adc
imul
rcl
and
mov
in
fs
movsl
stc
dec
sub
cmpsl
xchg
jmp
lcall
ss
pop
js
ret
xchg
sub
xor
push
cltd
hlt
pop
cmpsl
xchg
call
mov
add
sub
aad
pop
sub
mov
push
rcrl
ret
leave
sub
cli
jmp
mov
cltd
test
mov
jp
pop
popf
jp
push
int
es
mov
es
sub
sub
rep
xchg
xor
out
mov
int
add
fs
mov
aam
stos
and
imul
loop
jmp
mov
mov
incl
rclb
jge
fld
addr16
and
push
pop
or
and
push
adc
shl
xchg
cli
mov
fiadds
inc
daa
xchg
in
movsb
dec
mov
and
sarb
mov
pop
ss
push
xor
hlt
mov
push
sub
enter
xor
push
xchg
xor
fwait
sbb
rcrl
lock
pop
mov
ret
fs
lds
pop
dec
pushf
adc
cli
and
rclb
mov
lahf
inc
jecxz
pushf
add
push
movsl
ret
jnp
jne
dec
cmp
pop
fdiv
sarl
xchg
push
sti
jp
add
mov
cmp
je
leave
arpl
xchg
cmpb
sub
cmpsb
insb
fwait
inc
mov
jbe
inc
in
jecxz
in
mov
outsl
inc
jb
push
pop
cmp
mov
mov
idivb
mov
aas
jbe
push
jge
std
jg
mov
imul
push
jb
pop
cs
in
xor
fcoms
loop
in
std
xor
aaa
jecxz
fistpl
pop
push
movsb
sarl
insl
inc
clc
jge
xlat
inc
cmp
xor
cmp
cmp
jg
outsb
push
mov
imul
out
mov
sub
inc
jne
adc
imul
lret
rorb
rclb
mov
and
xchg
pusha
pop
mov
arpl
mov
jae
mov
jno
and
sbb
ficompl
sub
pop
xchg
cmc
xchg
or
pop
fmuls
call
add
jle
cmp
arpl
mov
mov
push
sub
mov
inc
scas
lret
or
dec
lret
les
ds
xchg
push
mov
sub
subl
push
xchg
sub
adc
pusha
ret
es
test
ja
pop
xchg
notb
fadd
jo
or
mov
out
add
addr16
or
iret
lahf
es
out
outsl
pop
cmp
sub
and
mov
scas
pop
lahf
inc
xchg
mov
pop
mov
fisubs
fiaddl
inc
adcl
in
shrb
lods
imul
jg
int
out
and
cs
test
dec
shrb
iret
movups
in
jnp
pop
inc
pop
js
leave
mov
jb
fwait
daa
mov
cs
outsb
fisubrs
ss
push
sbb
lret
or
push
mov
mov
mov
xorl
iret
fwait
mov
adc
lock
dec
mov
pop
inc
sub
test
lock
scas
pop
dec
popa
xchg
sub
mov
pushf
push
popa
enter
cmc
inc
test
ficoml
push
nop
xchg
inc
push
add
dec
out
pop
or
adc
and
out
add
xor
sub
lret
lock
addr16
sub
lea
inc
jnp
loopne
xchg
pop
xor
rol
adc
inc
xor
jne
ret
decl
stos
sub
mov
or
pushf
out
lods
sti
inc
in
mov
fmuls
repnz
fidivrl
adc
subb
adc
scas
cmpsb
inc
dec
adc
pop
pop
out
aaa
add
sbb
cmp
sbb
rorl
mov
data16
faddl
js
xchg
test
sbb
hlt
jcxz
cwtl
inc
jmp
inc
leave
add
lcall
out
fcoms
adc
test
add
roll
adc
add
lahf
cmpsl
cmp
lret
pop
enter
adc
push
xor
add
jg
test
loopne
bound
xchg
jnp
add
mov
inc
or
pop
stc
xchg
jbe
bound
sbb
leave
daa
sbb
jmp
xor
or
xchg
jns
lods
imul
sbb
add
add
fdivr
std
mov
mov
aad
xchg
div
xchg
ret
add
outsl
sub
nop
scas
pop
outsb
fdiv
clc
jmp
push
iret
ljmp
adc
arpl
stc
xchg
dec
loope
jp
nop
inc
cmp
arpl
into
cmp
and
loopne
mov
nop
popa
jle
mov
testb
test
inc
enter
inc
aas
mov
cmp
into
fsubs
push
sti
fcompl
push
movsl
daa
adc
ret
je
jno
insl
std
clc
fucomp
sub
or
dec
ja
orl
test
mov
mov
jbe
lret
pop
mov
sub
fdivrl
repz
les
mov
dec
call
adc
jge
cmp
sarb
jg
cmp
in
mov
lahf
icebp
aad
mov
fsubs
add
and
and
mov
xchg
sub
and
fdivl
mov
jb
nop
dec
and
clc
jecxz
stos
push
pushf
arpl
iret
ja
add
and
push
sahf
push
nop
push
in
fnsave
xlat
iret
aam
mov
into
mov
roll
add
inc
scas
ret
push
ds
jb
adc
loopne
mov
int
lds
das
aam
out
and
leave
mov
sub
or
push
aad
bound
ret
or
bound
arpl
fwait
leave
movb
push
push
aad
jne
jae
mov
push
adc
lock
les
popa
and
jle
ror
push
testb
push
lods
jne
dec
sahf
fldt
adcl
jmp
in
pop
daa
mov
rcr
out
mov
mov
cmp
shlb
mov
mov
idivb
push
dec
mov
mov
in
rorl
jecxz
jb
or
cwtl
mov
into
repnz
cmp
sub
and
jp
hlt
int
push
xchg
outsb
cmp
lret
cmpsl
jge
sbb
data16
frstors
fcompl
adc
push
in
aam
insb
test
cli
pop
sbb
movsl
movsb
scas
jnp
rorl
adc
sahf
xor
movsl
out
cmp
xor
repz
out
push
int3
cmp
xchg
mov
cmc
pop
add
bound
ret
imul
repz
arpl
in
xor
ficoms
movsl
pop
cld
push
dec
in
inc
jp
cmpsb
inc
push
inc
call
mov
repnz
fcmovu
repz
xchg
sbb
aam
inc
lea
xor
test
inc
add
mov
xor
xor
psrld
jle
nop
mov
push
sbb
pop
mov
xlat
in
roll
push
lahf
push
mov
push
fsubrs
pop
lods
iret
sbb
mov
cmp
or
mov
mov
jp
ret
inc
clc
xchg
ss
into
sbb
push
push
sbb
pop
jno
cli
das
movq
fnstsw
fsubrl
mov
push
jb
mov
cmp
pop
hlt
lods
mov
popa
adc
int
pop
adc
inc
push
or
into
jle
mov
dec
imul
pop
test
mov
push
pushfw
and
cltd
lahf
mov
adc
jae
pop
jns
int3
add
sub
mov
sub
mov
sbb
lods
pop
lods
stos
jle
jle
inc
mov
in
or
xor
nop
ss
hlt
testl
dec
scas
scas
add
addr16
mov
xchg
sar
add
in
jae
mov
inc
pop
cli
mov
sub
lret
test
xor
mov
das
and
testb
sahf
pop
push
or
mov
cli
adc
cmp
int3
mov
mov
stos
sbb
sbb
jns
push
ret
ret
and
add
mov
and
movsb
pop
in
jbe
pop
jns
ss
push
sbb
imul
xorb
mov
sub
mov
xor
adc
aas
loope
div
pop
jae
gs
and
fucom
add
jb
cmc
aas
cld
rep
insl
inc
lcall
push
fwait
jp
daa
cmp
data16
test
test
pop
pop
or
dec
lea
leave
pop
fimull
fldcw
mov
xchg
addr16
xchg
ret
sbb
cwtl
jae
shrl
les
jns
xor
mov
jmp
jns
cmp
sahf
jo
sahf
inc
les
jae
lods
dec
cmp
and
dec
aaa
xor
mov
movsl
int
icebp
arpl
mov
xor
jecxz
jg
push
dec
cli
stc
pop
mov
jno
dec
jns
into
and
negb
inc
xor
mov
bound
scas
mov
sbb
mov
xlat
in
iret
pop
jl
mov
xchg
lods
popa
lods
push
sbb
inc
imul
ret
dec
pop
mov
das
rclb
pop
mov
ja
cmp
and
pusha
sbb
inc
fistpll
ffree
mov
nop
mov
call
sub
pusha
out
arpl
pop
xchg
and
xchg
pop
das
sarl
std
scas
push
ja
mov
sbb
inc
mov
lahf
cmp
andb
sub
mov
pusha
je
in
cmp
ljmpw
sbb
push
shl
jmp
xor
les
xchg
and
popf
lock
jnp
push
jecxz
popf
call
in
into
xchg
and
dec
mov
ficompl
fbld
inc
inc
jae
lret
fsts
sar
add
jg
or
push
ljmp
out
lods
stos
push
repnz
or
mov
aad
push
dec
sbbb
cs
sub
jae
test
loope
add
shll
loope
pushf
pop
inc
scas
cmp
pop
add
out
add
test
fadds
ds
xchg
mov
xchg
dec
scas
jmp
incb
daa
push
mov
sahf
dec
cmp
and
pop
addr16
mov
out
sub
push
add
out
cmpb
std
lods
enter
test
stos
xchg
push
outsl
pop
ret
pushf
xchg
in
cli
cmp
lret
shl
mov
dec
cmpsb
mov
mov
leave
add
lcall
pusha
cmp
clc
cmp
jne
lret
dec
push
inc
dec
push
add
int3
fisttpll
popa
js
ja
xchg
add
daa
fimuls
mov
clc
jg
lea
jmp
imul
xor
mov
xchg
fmull
mov
scas
in
movsb
aas
pop
or
push
xor
mov
inc
sbb
xchg
xor
rep
adc
xchg
xor
push
nop
arpl
jmp
addl
push
loope
push
xorb
jmp
mov
test
aam
jnp
shlb
mov
pushf
ret
inc
in
stos
hlt
sbb
or
push
pop
xlat
pop
lock
adc
pop
aad
jge
mov
aad
adc
sub
jle
bnd
fiadds
cmp
mov
mov
mov
add
or
inc
cwtl
jnp
xchg
imul
aam
test
arpl
xor
cmp
das
aam
jecxz
aas
arpl
mov
xor
xchg
sub
cmpsb
insl
icebp
xchg
push
push
clc
inc
mov
cli
aam
fadds
mov
into
push
cmpsb
lcall
shll
mov
mov
ss
pop
xor
mov
mov
loop
adc
repz
mov
push
mov
jnp
push
in
andl
hlt
fs
xchg
jnp
xor
add
fdiv
push
or
mov
int3
add
jb
jmp
idivl
pop
mov
add
add
push
insl
bound
jmp
mov
movsl
adc
mov
mov
pop
mov
daa
data16
cwtl
and
pop
push
add
mov
lcall
rcrl
mov
test
lea
dec
push
sbb
outsb
ljmp
adc
sub
dec
adc
lcall
ja
sbb
mov
jl
sub
mov
pop
jg
cmc
fldl
sbb
and
mov
mov
dec
dec
cld
sbb
aad
into
pop
fisubrl
fsubs
push
outsl
inc
xchg
pop
idivb
bound
pop
nop
je
add
int
mov
pop
mov
ret
mov
ficompl
rcr
and
jg
jae
sub
pushf
xlat
and
dec
arpl
es
ja
sub
mov
loopne
xchg
xlat
pop
stos
mov
repnz
adc
push
dec
mov
push
add
sbb
or
scas
dec
test
div
lret
test
and
jne
subl
ja
ret
sub
inc
stc
daa
enter
mov
imul
inc
sbb
lret
loopne
mov
inc
add
mov
loop
inc
sub
int
add
addr16
fisttpl
popf
dec
xchg
ret
jbe
sbb
dec
imul
jno
sub
xchg
mov
xchg
shrb
sub
cs
push
ss
cmovp
in
xor
leave
jge
inc
xchg
pop
cmp
shrb
nop
inc
sbb
jp
mov
fsubrp
xor
stos
movsb
push
test
jnp
mov
je
sub
cmpsl
mov
divl
mov
rclb
cld
fcomip
rcl
xor
scas
mov
jbe
xchg
imul
maskmovq
testl
xlat
and
sbb
in
jmp
negl
xchg
xor
das
ret
loope
or
loopne
push
or
mov
popf
icebp
mov
arpl
add
inc
xchg
mov
ret
loopne
pop
neg
jle
inc
sub
sub
mov
dec
pop
or
mov
xor
data16
cmp
and
or
pop
cmp
or
mov
mov
shll
xor
les
leave
nop
jmp
mov
icebp
dec
pop
shll
dec
sbb
sub
mov
outsl
ljmp
mov
popf
mov
xor
loop
or
jmp
jl
mov
adc
sbb
adc
lret
sbb
sarl
jle
mov
cwtl
test
cmp
inc
scas
mov
push
xchg
pusha
xchg
mov
push
push
or
sbbb
testb
add
js
aaa
fsubrl
test
stos
inc
lret
mov
div
imul
jno
and
faddl
cs
xor
or
fmull
pop
fidivl
jb
addr16
out
test
dec
mov
jmp
or
popf
jns
xor
sub
xlat
push
xor
lods
sti
push
lock
xorb
sbb
push
lock
stos
mov
or
aad
dec
mov
popf
bound
mov
pop
fimull
sbb
mov
outsl
sahf
aaa
hlt
enter
sub
out
or
fwait
sub
icebp
push
lret
add
je
or
add
sbb
add
je
lock
clc
and
mull
push
shlb
in
je
jb
jle
ret
shrl
insb
adc
sub
inc
daa
sub
fwait
push
fst
mov
adc
inc
mov
jnp
out
lcall
add
fcoms
call
mov
push
les
mov
mov
jae
cmp
pop
sbb
loopne
clc
pop
mov
push
push
sbb
inc
clc
jbe
imul
scas
rcrb
cmpsl
cmp
cld
dec
fcoms
test
cwtl
push
push
xchg
xor
outsl
xor
loopne
push
xor
fs
jle
incl
enter
lahf
jo
adc
insl
mov
in
pop
sub
jle
adc
insb
dec
cmpsb
inc
stc
adc
out
xchg
mov
ja
mov
xor
daa
das
rcrl
mov
ret
adc
and
popa
sbb
jne
mov
dec
mov
fstps
pop
repz
leave
xor
jb
inc
mov
jmp
cmpsl
int3
xchg
cmp
or
lret
sbb
das
mov
pop
cs
std
cmp
imul
inc
loopne
and
outsb
mov
jo
jecxz
mov
and
add
call
push
adc
xchg
ret
add
xor
out
adc
add
xchg
adc
xlat
gs
ds
mov
sbb
inc
jecxz
lcall
mov
mov
popa
push
xchg
sub
hlt
cltd
imul
int
scas
fistpll
mov
push
inc
sbb
or
pushf
clc
outsb
pop
fildll
popa
loopne
nop
sbb
cmpsl
pusha
pop
mov
or
mov
in
loop
add
add
in
xchg
testb
mov
mov
cmpl
xchg
out
test
repz
inc
stos
inc
xor
pop
insl
jl
sbb
mov
sub
mov
add
cwtl
outsl
add
imulb
and
push
roll
push
pop
in
jno
mov
pop
mov
push
fildll
andb
xchg
adc
mov
scas
push
andb
cmp
test
enter
orb
scas
addb
clc
divb
fwait
mov
popf
xchg
or
pop
out
call
out
xor
mov
pop
jmp
imul
js
adc
add
imul
jnp
mov
mov
dec
test
add
pop
push
cmp
dec
pop
nop
mov
push
add
pop
xchg
loope
push
mov
cmpsl
or
in
iret
stc
iret
lfence
adc
dec
adc
mov
jnp
sbb
stc
mov
icebp
sub
jne
fsts
jb
push
push
cmp
adc
shr
add
pop
testl
pop
sbb
roll
sub
scas
push
mov
iret
inc
mov
cli
popa
adc
pushf
dec
xchg
andb
fs
int3
xchg
ret
out
mov
scas
push
loopne
mov
cmpsl
xchg
dec
or
fidivrl
ljmp
or
into
outsl
push
pop
cmpsb
mov
xchg
adc
scas
lock
lea
int
dec
loopne
inc
xchg
adc
dec
push
mov
lea
mov
and
in
mov
jbe
xlat
mov
jg
mov
add
mov
or
lret
pop
fs
dec
mov
and
pop
aas
arpl
add
dec
inc
jnp
rorb
inc
push
lock
jno
fnsave
mov
push
and
popa
roll
repnz
repnz
inc
fwait
lcall
lret
sbb
pop
adc
stos
les
push
xchg
cmp
cmp
hlt
into
cs
out
xchg
inc
xor
jg
sbb
les
ss
and
xchg
push
mov
inc
fdivl
sbb
push
cmp
sbb
pop
fnstcw
sahf
and
pop
mov
jp
push
test
and
out
push
pop
mov
sti
loop
icebp
test
popl
and
clc
and
xor
test
test
pushf
das
shrl
push
clc
daa
aad
fsubrl
les
lcall
in
scas
cmp
sbb
or
sbb
cld
inc
sbb
inc
mov
insl
jge
andb
sti
dec
fsubp
lds
jb
xorl
stos
mov
cwtl
mov
outsl
cmpsb
int
lods
aas
sti
loope
mov
inc
or
repz
push
lds
dec
or
les
ds
out
push
add
lret
mov
ret
xchg
movsb
push
pop
inc
pop
pop
mov
and
stc
pop
insl
jle
popa
imul
push
jmp
push
or
fst
ja
pop
adc
and
pop
push
loopne
imul
lock
jne
outsb
sti
push
js
lcall
inc
iret
loope
sbb
cld
lcall
sti
lret
mov
pusha
dec
in
leave
xor
or
cwtl
fcom
int
and
inc
adcb
or
mov
lock
rcrl
xor
xor
aas
sarl
pop
lret
lret
xor
pop
dec
push
jnp
dec
ret
fcom
xchg
in
sbb
jb
inc
outsl
fsubs
adc
push
fnstcw
fs
mov
adc
cwtl
jae
dec
js
insl
fbstp
or
imul
test
aas
lret
xchg
mov
in
jg
daa
lahf
jno
xchg
xchg
shlb
addr16
sti
inc
pop
xchg
mov
cltd
or
xchg
mov
dec
mov
fmuls
add
int3
push
lret
insl
and
lret
jecxz
push
ljmp
test
xchg
iret
or
mov
jnp
xor
repnz
js
sub
sar
mov
inc
adc
or
add
xor
imul
cmpsb
or
popf
test
fincstp
sbb
inc
in
push
and
fwait
pop
shlb
fcom
bound
xor
call
fwait
cmp
stc
inc
loope
std
fisubrl
push
mov
mov
imul
lods
dec
xor
dec
inc
mov
out
fmul
dec
std
lret
xor
push
test
test
mov
ret
mov
push
and
jl
in
mov
repnz
sbb
push
add
push
bound
xchg
push
and
xchg
cwtl
adc
xchg
inc
add
movsb
enter
lds
xchg
subl
dec
dec
int3
es
xor
and
push
xchg
mov
push
push
xchg
in
stos
dec
mov
add
lods
out
sub
mov
push
inc
mov
shl
cli
lock
sbb
sbb
jge
jge
mov
add
jbe
cld
pop
lods
xchg
pusha
push
flds
aam
lret
inc
fisttpl
sbb
outsb
adc
xorl
inc
push
fwait
arpl
movsl
jle
sbb
gs
sub
nop
std
and
loopne
pop
sbb
movl
pop
sub
inc
mov
add
gs
push
stc
push
and
pop
jmp
pop
lahf
pop
pop
add
dec
hlt
mov
les
movsb
daa
test
cmpsl
gs
scas
push
mov
imul
dec
sub
sbb
mov
cmc
cld
and
add
enter
arpl
daa
and
xlat
rol
pushf
xor
mov
stc
mov
nop
add
sti
fimull
xchg
jo
inc
xchg
out
repnz
lds
pop
arpl
rorl
push
jmp
inc
pop
xchg
cs
jbe
add
mov
repnz
fwait
inc
and
fstp
daa
lods
ljmp
aas
test
nop
outsl
add
in
aam
pop
loopne
sbb
push
enter
xchg
call
aam
movsb
xor
or
lret
aas
nop
xchg
mov
outsb
mov
jo
and
jne
das
aaa
add
lret
pop
sbb
cmc
test
pop
mov
add
imul
lret
mov
loop
push
xor
dec
rolb
push
push
add
mov
xor
test
xchg
ja
popf
mov
mov
arpl
sub
add
in
enter
in
sbbl
leave
arpl
sbbb
pop
cmpsl
sbb
test
adc
sbb
mov
and
outsl
xor
std
jno
inc
imul
sahf
sarb
push
sbb
sbb
or
jno
jne
fistpll
les
fwait
sbbb
mov
pop
dec
mov
mov
mov
cmpsl
stos
cmc
lods
jl
xor
daa
inc
xchg
mov
scas
or
pushf
les
or
jnp
imul
lret
mov
cmpsb
std
xchg
xor
push
xchg
sbb
or
shll
test
mov
data16
cli
ficompl
xchg
fnstsw
cmp
or
out
in
stos
mov
ficoms
je
push
ja
sub
setne
cli
call
aad
popa
or
xchg
cmp
cmp
cmc
cmp
lret
cmpb
mov
cltd
mov
dec
inc
clc
cmpsl
aas
mov
xchg
rcrl
rcll
dec
lock
add
sub
and
mov
xchg
push
and
push
fimull
add
jle
test
fcmovnu
outsl
jo
repnz
sbb
bound
cmp
aaa
in
xor
testb
add
js
sub
shlb
aam
push
ljmp
or
sub
mov
ds
inc
adc
add
les
ret
into
es
sbb
lods
lcall
movsl
test
add
std
sub
fstpl
sub
mov
add
movl
jl
mov
sub
sub
mov
sub
and
mov
dec
mov
add
pop
shrb
mov
xor
test
in
fsubrl
mov
sahf
shlb
mov
mov
rolb
mov
movsb
sbb
out
pushf
mov
jg
mov
push
das
mov
fwait
inc
push
or
out
xchg
call
dec
mov
mov
test
insb
jecxz
inc
sbb
and
sub
lret
enter
subl
jge
cltd
lahf
stc
mov
aad
cmp
jle
or
pop
test
fiaddl
pop
fistps
adc
and
mov
cli
js
mov
das
mov
lret
fisubs
imulb
mov
add
rcll
lret
or
das
xchg
cltd
int
sub
mov
mov
inc
jp
sti
lret
and
sbb
mov
lret
xor
js
jl
xchg
mov
sarl
rcl
addr16
push
jae
pusha
arpl
rcll
mov
pop
and
xlat
and
mov
js
xchg
imul
jle
adc
dec
lret
fnstsw
sbb
mov
imul
jo
aam
movsb
pop
jbe
dec
xchg
mov
out
cli
mov
sub
push
movsl
sbb
insl
fimuls
aaa
sbb
jl
lods
pop
jmp
push
mov
out
push
inc
cmp
scas
js
insb
add
sbb
xor
repz
or
fs
pop
mov
or
push
ret
sti
nop
lahf
fisttpll
mov
movsb
mov
jecxz
mov
je
inc
loope
pop
lahf
or
loope
and
in
pop
mov
pop
xor
repz
push
popa
jmp
jmp
inc
int
loope
adc
cli
insb
into
or
add
add
jns
pop
fbstp
enter
add
pushf
movsb
push
jb
idivl
add
pop
inc
shlb
mov
repz
pop
dec
pop
dec
sub
push
stos
inc
cmp
bound
lahf
sbb
les
popf
out
xchg
loop
xchg
jns
and
gs
daa
sub
mov
xchg
dec
jp
sub
mov
movsl
outsl
push
xor
pop
jmp
adc
js
push
xor
pop
jmp
sti
pop
or
sbb
jmp
lods
adc
inc
ljmp
sub
cmpsl
adc
pop
xchg
jecxz
std
bound
jecxz
fs
test
leave
jge
sbb
jno
cmp
mov
loope
outsb
fidivrs
dec
push
rorb
adc
xchg
inc
repz
mov
jl
dec
ret
bswap
push
mov
clc
sahf
mov
dec
popa
ret
pop
jbe
pushf
mov
dec
xchg
std
icebp
pushf
inc
cmp
lds
gs
out
fucomip
les
out
sahf
mov
xchg
cmc
add
iret
aad
push
push
icebp
dec
xchg
add
stos
xchg
fisubl
sbb
push
and
int3
adc
jle
movb
shll
mov
repnz
addb
jb
cltd
sbb
mov
xor
ja
movsb
jg
jmp
xor
aam
or
call
fistl
cmc
fs
ljmp
jg
in
mov
mov
fwait
sbb
scas
mov
xchg
mov
inc
shll
in
and
and
jne
xorb
loop
and
scas
mov
scas
ljmp
dec
pop
pop
and
daa
aas
fdivr
xchg
jle
stos
sub
push
dec
adcb
add
pushf
xchg
je
rol
xchg
fcmovnbe
push
dec
loope
mov
or
jns
icebp
mov
adc
pop
hlt
out
lcall
sbb
jns
sub
repz
or
adc
inc
test
mov
push
mov
imul
mov
push
mov
sarl
add
nop
adc
sbb
rorb
add
jg
sti
int3
pop
jge
ficoml
test
or
xchg
jecxz
lahf
cwtl
pop
sbb
push
aaa
not
or
les
in
inc
lods
aas
daa
sbbb
mov
push
mov
daa
adcl
mov
pop
das
into
in
cli
xor
movsb
jbe
shrb
iret
dec
sbb
in
mov
sbb
xchg
pop
inc
sbb
loop
mov
xor
push
push
push
imul
mov
stos
or
and
pop
adc
std
and
orb
mov
mov
decl
cltd
sub
shll
cs
fiaddl
sub
loope
add
jae
out
inc
dec
je
lods
stos
mov
push
pushf
aad
xlat
inc
jp
dec
jb
in
and
lcall
lahf
lods
push
xchg
divb
inc
xlat
adcb
pop
mov
push
sbb
xchg
icebp
js
int
in
lea
pop
hlt
in
push
fstpl
sub
sbb
pop
shrl
ficompl
sub
and
or
xchg
cmp
jns
je
mov
mov
sbb
add
mov
inc
pop
test
fnsave
int
test
das
ss
repz
xchg
sub
add
inc
inc
sub
cmc
cli
stos
sbb
sti
fwait
xlat
gs
out
aaa
jg
cmc
out
ja
jl
movsl
jne
jae
insb
lds
jns
pop
or
fs
xchg
cwtl
sbb
pop
loope
jmp
or
arpl
cmp
sub
clc
ss
xor
pop
cmp
fimull
imull
cmc
hlt
jno
xchg
shll
push
and
insl
jno
test
ds
mov
ds
adc
cmp
aas
cmpsb
pushf
inc
lods
hlt
adc
pop
outsl
nop
leavew
int
inc
sti
js
es
lods
jge
jecxz
mov
ret
les
lcall
jo
pop
push
adc
nop
dec
clc
out
push
jl
lret
mov
ljmp
fidivl
mov
or
xchg
cmpsl
cmpsb
mov
test
bound
xor
lret
lahf
rolb
arpl
cli
test
xor
and
cmp
mov
pop
cld
jp
mov
xor
jmp
adc
mov
pop
mov
mov
fidivrl
lods
arpl
fsubs
push
push
push
dec
or
adc
sti
cmpsl
repz
dec
jle
loopne
daa
int
das
pop
bound
sbb
xor
and
and
inc
scas
inc
cs
push
xchg
dec
fstpt
cli
call
test
vsubps
sbbl
mov
mov
pusha
lods
and
movsb
test
and
arpl
mov
push
jnp
nop
pushf
dec
bound
in
dec
out
daa
sarl
xor
outsb
movsb
das
push
sbb
mov
sub
sub
jmp
shr
sbb
cmp
addb
push
scas
shll
inc
sub
ss
xchg
imul
rcrl
mov
mov
clc
sbb
inc
in
xchg
mov
fdivl
fcompl
js
jle
std
insl
jmp
push
cmp
add
fdivrs
dec
mov
mov
lock
mov
inc
jo
andb
mov
xchg
mov
mov
mov
das
mov
imul
xchg
jmp
les
enter
cmp
mov
popf
cmp
lods
jmp
xor
les
jo
imul
and
push
add
sub
pop
es
stos
pusha
xchg
je
ret
pop
cmc
cwtl
xor
add
mov
lock
mov
in
test
lret
test
xor
jle
push
jle
fwait
xchg
loope
fnstsw
enter
stc
pop
pop
push
jo
pushl
fnstcw
dec
push
cltd
dec
sbb
mov
cmpsl
mov
jb
pop
lcall
adc
push
cli
sbb
outsl
repnz
pop
jge
jb
std
push
xchg
and
loope
sahf
outsl
xorl
cli
movsl
jp
and
int3
add
dec
scas
push
dec
pop
dec
mov
inc
inc
push
xchg
rcrl
sbb
test
repz
push
ret
out
leave
dec
sbb
xchg
push
sub
bound
xor
cmp
je
inc
les
or
mov
jnp
out
jbe
cld
mov
and
push
scas
loope
inc
fs
scas
rclb
enter
push
add
adc
ficoml
add
mov
nop
add
lds
nop
xchg
dec
nop
push
popa
testb
sbb
push
test
imul
push
out
push
cltd
out
pop
loopne
movsl
jnp
mov
mov
add
movsb
sub
push
mov
jle
push
cltd
jb
outsl
push
popl
das
dec
aaa
arpl
pop
xchg
mov
cmp
sbb
insl
xchg
fnstcw
xchg
sub
sti
data16
pop
cli
jmp
imul
add
xchg
cmpsb
cmp
mov
xchg
lret
cmp
and
inc
xchg
sub
out
xchg
xchg
mov
mov
std
cmp
pusha
push
jg
sub
jo
cltd
int
jnp
and
les
mov
adc
xor
lcall
xchg
es
or
push
sub
jge
adc
sarl
stos
ret
push
in
adc
cmp
and
cmp
negl
adc
rcrl
pop
pop
nop
jecxz
cmp
cmp
fisttpl
mov
jnp
fstl
add
cs
divl
loopne
sub
lds
xor
outsb
imul
insl
jb
scas
rcrb
adc
inc
adc
fisttpl
inc
mov
xor
maskmovq
divl
aad
add
movsb
and
push
adc
test
pushf
adc
cwtl
icebp
popa
mov
and
stos
and
imul
mov
popf
xchg
loop
jne
cmp
scas
ret
in
adc
insl
fidivs
push
repz
dec
push
sub
xchg
addl
sub
inc
jae
or
lret
fs
aaa
sub
shrb
jp
jbe
pusha
dec
shrl
das
cmp
xor
shl
inc
cltd
add
insl
mov
mov
out
loopne
xchg
mov
ss
cmpsb
and
inc
test
or
loop
xchg
cmp
push
dec
test
into
fldcw
sbb
aam
mov
jns
mov
dec
cmp
cmp
add
jae
repz
pop
pop
popf
imul
push
push
pop
jge
inc
xchg
pop
mov
or
rolb
mov
inc
pusha
mov
mov
push
mov
getsec
subl
dec
fcoml
iret
js
mov
mov
addr16
jnp
xor
sub
and
sahf
daa
das
or
push
mov
cmp
in
mov
mov
mov
out
pop
mov
loop
adc
leave
xor
mov
subl
and
iret
push
loop
aad
or
pop
mov
popf
mov
xchg
imul
adc
sub
outsl
testl
mov
xor
mov
sub
loopne
push
inc
adc
pop
sub
lcall
les
and
xor
xor
sarl
cmp
fidivrs
or
and
add
cmp
mov
subb
sub
popf
ret
lahf
orb
jg
cmpsl
loop
jbe
dec
pop
outsl
daa
ss
in
sub
imul
enter
ss
pop
pushf
lahf
ds
mov
inc
call
xchg
push
fucomi
lods
arpl
addl
pop
pusha
sub
out
shlb
push
pop
fsubrl
nop
clc
fdivrl
es
mov
jl
ja
mov
jecxz
push
js
mov
fnstsw
clc
add
jecxz
mov
xchg
in
mov
cli
pop
jecxz
jnp
xlat
mov
push
inc
scas
cmp
push
xlat
dec
loope
adc
repnz
xchg
mov
dec
and
lret
pop
xchg
leave
lahf
add
jnp
lret
jne
mov
fisttps
fsubr
push
jle
out
jbe
or
or
and
and
xchg
jbe
push
loop
dec
movsb
and
and
jge
sub
int3
cmp
push
leave
add
imul
jmp
and
test
adc
and
pop
dec
cli
pop
mov
test
ds
add
xchg
jl
lret
lods
lret
shlb
arpl
xor
add
xchg
aam
shrl
adc
in
jecxz
add
mov
xor
xchg
and
jo
and
sahf
jge
mov
rcr
mov
xorb
cli
push
cmp
and
stos
mov
sbb
js
adc
mov
andb
ret
jno
bound
mov
jg
shl
jne
lods
icebp
add
das
pushl
sub
pop
pop
adc
add
sbb
mov
mov
lret
aad
je
sbb
jge
sbb
fistl
in
sahf
mov
shll
cmp
in
mov
sub
mov
and
or
mov
test
es
jo
jg
dec
mov
pop
and
js
scas
subb
lods
je
xor
and
inc
sub
or
jl
and
aaa
jl
mov
lds
das
mov
imul
pop
test
adc
lcall
push
mov
ror
shrl
pop
xchg
push
inc
xchg
rclb
ja
aaa
iret
add
fwait
stos
push
rcl
cld
mov
mov
mov
ja
fdivrp
xchg
ljmp
jns
lods
ljmp
xor
lret
cli
dec
aaa
sahf
mov
fldcw
test
out
push
fmuls
test
ja
or
mov
inc
lock
inc
out
daa
je
jmp
sub
mov
jl
push
fdivp
push
iret
pop
lret
fwait
jno
dec
cmpsl
sub
xchg
sbb
stos
data16
inc
repnz
mulb
sbb
test
pusha
cmp
pop
mov
cmc
mov
mov
mov
and
shlb
push
in
push
loop
icebp
dec
adc
jnp
into
and
in
mov
jb
jns
or
xor
mov
cld
jl
mov
mov
fldl
ja
mov
lock
nop
cld
jle
incl
or
add
mov
ss
sub
out
pop
or
les
sahf
fs
out
pop
cmp
daa
popa
int
negl
xchg
test
enter
jg
aaa
repnz
push
fstp
mov
test
loope
or
int
aam
mov
inc
adc
leave
and
pusha
dec
arpl
mov
cltd
stos
outsb
scas
ds
pop
popa
sub
jno
mov
add
jo
outsl
xchg
cmc
popa
mov
xchg
mov
or
push
or
das
push
int
fistpl
xor
dec
dec
scas
jne
push
sub
mov
neg
mov
in
in
je
fs
outsb
jne
mov
addr16
inc
sub
mov
pop
in
int3
sub
mov
aaa
mov
dec
hlt
add
pushf
mov
or
bound
sbb
xchg
cmpsl
jns
jbe
push
lods
xchg
out
aam
mov
xchg
lret
push
xor
arpl
push
jno
cltd
pop
test
sti
rcl
test
xchg
xlat
xchg
or
push
pop
int3
xor
fldt
dec
iret
rcrb
ljmp
pusha
jmp
push
scas
and
push
cmp
jbe
jg
or
xlat
cmc
push
repnz
push
int
js
inc
ja
outsl
movsl
scas
aas
mov
stos
fnstcw
jbe
mov
test
cltd
jns
cmp
pop
clc
mov
out
jno
xor
inc
popa
or
or
cmpsl
and
sub
testl
cmp
push
movsl
xchg
in
mov
sub
cmpsl
aas
stc
roll
add
push
iret
xor
insl
jns
jns
sbb
sub
dec
sub
adc
push
mov
lret
adc
xchg
pop
lea
jne
cwtl
out
xor
push
lret
repnz
lods
cmpsb
test
push
test
icebp
mov
addr16
imul
leave
xchg
js
pop
lds
cwtl
ret
adc
and
lret
add
addr16
xor
or
adc
loopne
sbb
cwtl
jle
push
aam
sub
xchg
imul
sbb
aam
or
push
stc
cmp
pop
mov
and
jo
pop
push
js
pop
xchg
imul
push
and
pushf
push
lret
add
cmp
adc
dec
stos
xchg
push
das
daa
pop
mov
mov
push
lret
fdivs
add
sbb
pop
imul
add
dec
frstor
outsb
mov
sbb
sbb
cltd
scas
stos
sbb
mov
adc
and
fwait
pushl
adc
repz
pop
ja
pop
mov
aaa
jns
sbb
and
lret
pop
push
inc
rcll
jne
xor
jne
mov
pop
jae
cmp
enter
mov
in
or
push
out
dec
movsl
inc
ja
jnp
cmp
jg
test
mov
and
test
test
and
mov
les
mov
rclb
pusha
fmuls
sub
xchg
aam
mov
jns
ret
aam
fwait
jnp
push
cmp
movsl
arpl
mov
jecxz
icebp
adc
xchg
orb
dec
mov
inc
add
push
lock
cld
fisubrs
shl
call
cmpsb
jbe
dec
cs
push
inc
loope
aam
or
dec
pop
aad
pop
ljmp
mov
cmpsl
pop
xor
lret
push
lret
cmp
popa
sub
mov
movsl
adc
push
dec
pop
sub
outsb
mulb
or
fisubs
leave
lods
bound
mov
add
ss
insb
shlb
lcall
xchg
mov
rol
xlat
in
in
enter
inc
nop
fdivrl
mov
push
loopne
test
sbb
jo
fiadds
inc
sarb
pop
mov
cmpsl
adc
aas
mov
cltd
xor
imul
icebp
int
pop
or
add
scas
mov
in
pop
sahf
cmp
icebp
xor
mov
aam
dec
mov
rcr
inc
sub
adc
and
and
inc
rcrb
lds
adc
inc
jno
and
push
dec
jo
push
outsl
mov
fldt
mov
in
push
pusha
sub
push
add
js
lods
fcoml
ss
or
rcl
mov
out
movsw
and
and
push
cmp
mov
jg
push
pop
in
fcmovb
mov
xor
stos
shll
mov
mull
out
jo
je
dec
pop
add
decb
push
dec
adc
push
test
push
push
insb
and
cmp
push
xchg
imul
mov
dec
test
mov
mov
test
dec
cmpsb
mov
xor
fmull
jae
adc
dec
popf
mov
push
insb
fstps
rcl
outsb
inc
cmp
mov
test
fnstsw
cmp
or
mov
inc
jle
into
cmc
lret
les
push
rorl
xor
jl
sub
jle
fldt
inc
mov
jnp
mov
mov
scas
pop
adc
divl
mov
mov
cwtl
shrb
outsb
sbb
and
call
sub
mov
xor
imul
popa
pop
jb
sub
push
ja
push
add
fdivs
sbb
or
mov
mov
mov
adc
stc
sbbb
shll
adc
mov
cmpsb
cwtl
fiadds
in
inc
inc
shrb
je
shr
push
jbe
jmp
je
lea
dec
stc
ds
sub
mov
in
fcompl
or
add
movsl
clc
jb
call
pop
or
lds
mov
jecxz
pop
dec
pop
push
pop
mov
and
ja
push
or
mov
cs
jl
sbb
ds
in
lea
dec
lds
pop
mov
fdivs
insl
sbb
fcomi
inc
ret
dec
inc
xor
mov
insb
js
push
sar
lcall
jmp
out
cmp
jno
jb
xor
dec
mov
inc
shll
push
push
adcb
mov
decb
fidivrl
inc
pop
sahf
mov
xchg
mov
mov
test
xor
add
dec
sahf
imul
add
cmp
cs
xchg
aam
push
mov
fistpll
xor
lahf
inc
les
test
inc
in
leave
shl
lret
bswap
xor
add
ret
in
mull
push
add
mov
lods
mov
ljmp
sub
cmp
in
cmp
ljmp
adc
loopne
lock
pmullw
xchg
pop
push
aaa
scas
js
pop
push
mov
inc
sbb
or
inc
sbb
jnp
jae
pop
js
ds
add
dec
add
mov
aad
jmp
mov
mov
aas
mov
hlt
pop
cmp
je
cs
decb
adc
and
push
or
mov
outsb
sub
test
fs
repnz
push
mov
mov
xor
lods
add
js
cwtl
notb
clc
push
cmp
add
lods
pusha
mov
shrl
sub
push
jbe
iret
pop
ficoml
ja
add
stos
add
lea
clc
das
cmpsb
dec
jge
mov
sti
push
push
add
lea
xchg
iret
aad
insl
fldl
ret
js
push
daa
inc
cmp
repz
jne
jno
ja
pop
scas
mov
xchg
cld
cmp
sub
jg
dec
into
outsl
mov
sbb
add
arpl
std
test
and
aad
repnz
jl
jns
bound
popf
sub
mov
jmp
jne
xchg
push
or
sti
iret
jno
mov
mov
fs
rolb
sbb
mov
mov
pop
lods
in
aam
mov
sub
fldt
mov
test
xchg
hlt
lds
imul
xchg
loop
sahf
jno
and
loope
int3
jne
mov
xor
xor
pushf
test
jae
inc
lcall
jl
mov
in
push
pop
call
xchg
lret
popa
scas
cmp
adc
inc
xor
sbb
outsl
sahf
xor
sarb
mov
xchg
pop
inc
dec
pusha
les
mov
fisttps
xchg
inc
jp
xchg
lret
loop
in
pop
out
push
xlat
mov
mulb
xchg
jno
xor
xor
imull
push
adc
outsb
jns
cmp
mov
or
adc
sub
mov
mov
xor
cmc
sbb
popf
xor
je
movsl
lret
jno
repz
add
jp
pusha
dec
or
pop
cmp
shll
repz
mov
mov
sahf
push
test
cmpb
iret
add
dec
outsb
ja
fmuls
dec
inc
lea
mov
rcl
loopne
mov
jno
outsb
cld
xchg
loope
mov
adc
test
xchg
mov
fisubs
dec
imul
lds
cltd
adc
ds
push
xor
dec
push
and
jnp
inc
pop
dec
mov
shr
jnp
stos
sbb
mov
arpl
and
popa
adc
scas
jno
mov
aad
push
and
fs
ret
lea
mov
adc
sub
cmc
sub
inc
and
pop
fiaddl
mov
outsl
in
mov
sbb
dec
popf
pop
clc
jb
mov
js
mov
loope
pop
inc
in
imul
inc
mov
test
mov
jmp
mov
add
xor
mov
xor
daa
idivb
sbb
lahf
lock
sbb
aas
enter
mov
testl
push
shll
or
adc
mov
pop
add
je
dec
das
ret
lret
scas
mov
xor
lds
aad
jl
lock
test
mov
or
leave
jb
mov
call
jmp
jno
out
and
dec
jb
mov
scas
or
cmpsl
in
ret
push
leave
cmp
xchg
xor
or
jno
jbe
rorb
stos
jmp
adc
shrl
push
mov
xchg
movsl
sahf
out
aam
shll
fiadds
push
das
push
test
ljmp
pop
mov
cltd
inc
add
cld
lods
adc
and
popw
fidivrs
je
cmpsb
lds
mov
clc
jne
enter
cmc
out
fisttpll
cmp
ja
incb
push
inc
ficoms
pop
xchg
out
sahf
test
push
add
sbb
test
insb
fdivrs
scas
adc
push
jns
inc
fcmovbe
test
mov
sbb
dec
sbb
in
frstor
push
popf
inc
jbe
nop
jle
xchg
push
dec
xchg
notb
cmp
lods
or
js
lods
ja
adc
sahf
insb
or
aam
xchg
mov
incb
int3
mov
sbb
fwait
xor
xor
cmpl
pushf
sbb
ficomps
popa
dec
jl
sub
arpl
and
dec
jmp
nop
push
xchg
push
fsubl
xchg
daa
or
pop
je
dec
mov
push
mov
add
fildll
inc
cmp
sub
fmull
pop
pop
stos
movsb
lea
repnz
mov
std
mov
ret
mov
ljmp
leave
mov
jb
inc
fcompl
and
data16
test
repz
dec
fildll
loope
cmc
test
add
gs
and
aad
xchg
and
fisttpl
lds
inc
mov
repnz
xor
and
nop
js
in
sbb
ss
in
mov
fiadds
ss
icebp
rorb
fwait
mov
dec
xchg
ss
fs
sub
sub
inc
lret
pop
cmc
rcl
popa
in
mov
add
cld
hlt
movl
addb
and
sub
rcrb
aas
xchg
int
xchg
push
cmp
adc
sub
ljmp
xor
mov
scas
jmp
cmpsl
push
out
cmp
iret
mov
fdivrl
sub
ja
sete
out
cmp
adc
pop
or
out
fcmovbe
dec
inc
jno
and
ljmp
jg
mov
push
mov
jnp
lods
sti
xlat
inc
jp
sub
cmpsl
insl
shlb
push
dec
mov
pop
and
cmp
ret
stos
or
add
add
dec
in
push
cmp
push
stc
adc
sub
pop
dec
mov
xchg
mov
pop
xchg
push
xchg
xor
adc
add
pop
test
sahf
bnd
pusha
jecxz
scas
dec
rcrb
loopne
pop
mov
adc
popa
hlt
dec
out
sbb
dec
jmp
ret
push
dec
dec
pop
xor
rclb
sbb
test
xchg
mov
mov
sbb
iret
fldl
pushl
xchg
testl
fstpl
jl
out
movsl
outsb
aas
repz
loop
xchg
bound
mov
mov
call
dec
mov
mov
fcmovnbe
sbbl
mov
sbb
inc
aas
andb
push
mov
sub
sub
sub
adc
cmp
xlat
fsubs
sub
repnz
mov
test
inc
xchg
testl
add
fstpl
mov
repnz
stos
int3
rolb
divb
dec
lcall
pop
iret
add
enter
outsl
xchg
imul
cmp
sub
xor
xchg
test
mov
pop
xchg
call
std
cmpsb
fnsave
sbb
into
gs
add
scas
jno
shrl
mov
mov
cwtl
xchg
sbb
frstor
xchg
add
mov
hlt
xor
cmp
mov
shlb
or
xchg
mov
jne
out
cld
sub
pop
incb
jbe
stc
scas
inc
xchg
mov
popa
mov
fcompl
cmpsl
into
cmp
sahf
imul
sub
int3
inc
outsl
fbstp
push
cmc
in
inc
enter
pop
shrl
sbb
mov
lods
in
movsl
jg
lret
pop
lea
movsl
ljmp
pop
xor
pop
mov
test
out
jns
sbbb
inc
xchg
xor
add
dec
and
fsubr
and
push
xor
fimull
ret
shll
into
dec
dec
pop
aas
incb
sub
int3
daa
lcall
mov
in
mov
jp
outsb
jo
repz
xor
lret
xor
push
xor
sbb
sahf
in
mov
push
outsb
aad
xchg
ja
inc
lret
hlt
xor
out
add
adc
mov
xchg
iret
stos
cmp
fcom
or
cmp
jbe
bound
sbb
into
push
in
cltd
mov
inc
dec
in
cmp
lahf
add
pop
jo
daa
cmc
orl
scas
and
xor
stos
and
faddl
outsb
insl
or
jb
lods
xor
jecxz
push
test
pop
mov
loope
jecxz
pop
mov
inc
jle
movsl
lahf
incb
cld
xor
inc
xor
mov
pop
arpl
or
mov
or
cltd
outsb
cmpsl
sarb
dec
jge
and
je
jge
clc
imul
inc
fwait
dec
cmp
and
mov
push
jno
cmpsl
cmp
xor
pop
fnstsw
push
in
dec
pop
xor
sub
cmp
ss
add
xchg
fcoms
mov
into
cs
sub
lea
xor
imul
sbbl
daa
imulb
imul
cmp
movl
leave
dec
stc
or
repz
inc
xor
in
xchg
sbbb
sbb
aas
fst
lret
add
and
std
jmp
mov
xor
and
out
ja
or
hlt
jmp
mov
dec
and
inc
jecxz
testb
pushf
and
popf
into
frstor
fidivs
cs
add
into
sbb
or
xchg
out
jp
or
sbb
push
push
sbb
mov
pop
xor
movsl
into
roll
ret
pusha
add
inc
out
xchg
dec
and
iret
or
pop
add
lret
dec
mov
cmp
enter
in
sbb
adc
or
inc
sbb
pop
popa
pop
cmp
mov
out
and
inc
lds
mov
jb
psubusw
icebp
pop
sbb
out
or
push
jle
aaa
int
aam
clc
cli
sbb
and
in
push
imul
stos
or
pop
push
jp
or
fdivrs
or
push
sub
mov
popa
pop
mov
push
bt
outsb
jle
cmp
jne
lds
push
jae
push
mov
or
jno
es
sub
stos
xchg
ret
and
sub
cli
xor
cmp
xor
out
mov
xchg
sub
pop
adcl
push
mov
clc
jno
pusha
sti
sbb
inc
mov
or
dec
pop
cli
fstpl
xabort
cmpsl
mov
xchg
and
or
xchg
nop
call
scas
mov
push
outsb
pop
push
lea
jmp
lret
jno
gs
sub
jae
xor
stos
push
test
incb
int3
sub
adc
sub
out
outsl
add
repnz
push
inc
push
inc
pusha
lcall
adc
jo
adc
test
push
shl
scas
xchg
xchg
sub
sub
xor
and
rcl
sub
pop
out
xchg
loopne
lret
jl
push
ljmp
gs
fisubs
lea
xlat
and
out
mov
popf
shlb
repnz
jns
cmp
jb
stc
inc
jo
jmp
cs
mov
stos
mov
popl
or
pop
sub
cmp
gs
and
repz
inc
jp
ret
enter
aaa
cmp
leave
mov
jne
xchg
pusha
ss
push
inc
push
dec
or
xor
fldcw
push
cmp
xlat
cmp
jb
dec
repz
int
gs
dec
nop
sub
orb
sbb
mov
mov
push
xchg
jbe
ja
jns
rol
lcall
jmp
mov
mov
rcl
nop
icebp
push
ss
sbb
fidivrs
or
cmpb
in
pop
adc
inc
icebp
ljmp
sub
inc
int3
pop
mov
sbb
vmread
cmp
jbe
mov
push
iret
jb
or
scas
sbb
arpl
xchg
mov
lret
dec
jecxz
je
cmp
jmp
pop
enter
mov
xorb
jbe
adc
xchg
in
pop
int
fsubrs
pop
ljmp
clc
mov
sti
sahf
les
push
mov
jne
mov
cmp
out
xor
xchg
mov
idivl
mov
hlt
dec
push
lahf
shlb
hlt
mov
or
or
cmp
add
mov
sub
addl
hlt
repz
iret
daa
bound
mov
fistpl
es
fstpl
mov
ljmp
add
pop
xor
ja
jne
sub
out
push
sbb
jge
aad
in
push
jl
addr16
fstpt
add
inc
add
xchg
leave
sub
inc
jl
repz
mov
pop
cmp
cld
jo,pn
lcall
mov
psubb
scas
sub
aas
mov
insl
mov
cld
inc
inc
push
int3
cmp
xor
sbbl
arpl
mov
xor
sub
es
movl
das
cmp
sub
iret
ficoms
pause
mov
jecxz
fstpl
dec
loopne
repz
ret
dec
dec
rcrl
push
cld
add
aas
jo
aaa
movb
adc
in
outsl
adc
xchg
fidivrs
imul
ret
pop
sbb
paddd
daa
icebp
mov
sahf
mov
lods
lahf
jl
loopne
jo
lea
jge
fdivl
ja
mov
adc
or
int
negl
fwait
scas
stos
cs
jo
aas
ret
sbb
lret
cmpsl
scas
mov
push
cmp
bound
dec
out
and
or
clc
das
loope
or
hlt
ja
jbe
pop
pop
mov
mov
fs
test
push
adc
inc
adc
nop
subl
jl
pop
jg
add
ja
xor
mov
je
cmpsl
jmp
mov
js
xlat
jmp
cmp
xor
sub
or
les
sbb
mov
outsl
sahf
imul
shll
xor
mov
mov
fstps
jae
cmp
xlat
cmp
rolb
rolb
mov
xchg
and
mov
dec
and
mov
add
test
movsb
ja
je
jo
lret
cmc
dec
mov
xchg
mov
mov
and
out
xor
jp
jnp
jmp
dec
insb
bound
mov
push
fdivs
sbb
jnp
pop
cmp
imul
jns
or
inc
test
sub
mov
pop
repz
repnz
jb
sbb
xchg
lods
and
ljmp
jae
aaa
mov
dec
mov
movsl
es
mov
out
scas
sbb
push
cmp
and
adc
shl
xchg
movsl
pop
and
fadds
cmp
out
adc
mov
scas
ret
mov
pop
push
sub
fbld
imulb
add
jle
xor
aas
xchg
shlb
jle
shlb
cmpsb
add
pop
das
or
outsl
outsl
insb
test
jge
mov
rclb
sub
add
out
aam
cli
mov
lea
lods
xor
push
aas
xor
cld
or
add
xchg
push
cmp
pop
cmp
movsb
clc
hlt
mov
jl
leave
clc
sahf
or
fld
sete
sub
lock
in
xchg
pop
hlt
cld
sbb
jecxz
jmp
jge
les
ljmp
push
sbb
adc
ss
inc
sbb
mov
pop
add
je
push
sub
stos
pop
repnz
adc
jle
inc
in
repnz
stos
inc
cs
mov
add
sub
adcl
push
sbb
lret
mov
lret
or
mov
lods
jno
mov
pop
mov
jns
jnp
mov
pop
addr16
mov
aad
mov
push
mov
jb
pop
xor
ljmp
xchg
mov
ret
mov
fwait
dec
pop
fcoms
sbb
pop
stos
fildll
add
cmpsl
mov
call
in
jl
in
push
xor
repnz
pop
push
subb
xor
dec
pop
notl
test
loopne
clc
andl
sbb
sub
add
sbbb
clc
xchg
enter
cli
xchg
cli
mov
ret
loop
in
leave
and
pop
js
leave
xor
pop
pop
dec
imul
loop
mov
jmp
pop
jo
shlb
arpl
movsb
cmp
sbb
push
mov
xor
jo
ljmp
cmp
cmp
pusha
clc
data16
xor
faddp
xchg
sahf
aaa
inc
sub
pop
push
jl
ds
jno
out
sbbb
and
test
fwait
decl
or
and
fidivrs
aad
xchg
ss
lock
mov
call
clc
fiadds
stos
rcll
sub
loop
mov
out
ss
rclb
ljmp
xchg
jl
ljmp
mov
or
mov
testl
pop
cmpsb
sub
pop
adc
mov
xchg
sub
jle
scas
test
jmp
bnd
pop
adcb
imul
push
xchg
sbb
xor
jno
mov
jl
fsubrs
int3
or
adc
push
sbb
push
out
aaa
xor
add
mov
dec
xchg
sahf
ja
inc
mov
in
lea
mov
int
dec
cmpsl
inc
jge
inc
inc
cmc
xchg
sub
xor
je
and
lret
sub
add
cmpsb
cmc
add
inc
push
sahf
inc
xor
jno
pop
mov
inc
out
and
movsb
push
aas
mov
aas
cmp
sbb
jmp
cmp
adc
leave
or
xchg
bswap
or
mov
pop
out
jge
and
bound
xor
insl
adc
in
sub
popf
mov
sbb
push
cmc
sbb
sbb
std
test
dec
or
cli
fwait
mov
inc
leave
pop
outsl
mov
cmp
negb
mov
les
jl
xor
push
mov
sub
push
out
in
xor
pop
ds
addb
cmc
gs
out
mov
xor
or
pop
mov
sbb
jb
push
dec
push
or
sbb
and
and
jns
mov
ds
jg
push
jp
mov
xchg
or
push
outsb
js
or
xchg
inc
shrl
mov
jp
arpl
push
bound
js
outsb
inc
sub
out
pop
xor
shr
rcll
push
fdivl
subb
lds
frstor
cltd
pushl
sub
loop
icebp
ja
sub
mov
pop
sbb
and
andb
sub
jl
cmp
adc
test
push
xchg
push
sbb
imul
jle
mov
aam
sti
xor
out
mov
jbe
les
xchg
sahf
add
xor
pop
dec
arpl
and
and
jle
dec
or
cmpsb
std
push
lret
das
ret
jne
jl
adcb
js
mov
lods
test
pop
mov
pop
cmpsl
pop
or
mov
add
push
sbb
fldl
push
xchg
mov
dec
lods
pop
aad
int
mov
jns
rcll
in
mov
clc
jne
adc
stc
xlat
out
jbe
sar
xchg
inc
jno
pop
mov
cmpl
jb
jmp
xor
or
mov
mov
mov
and
fdivr
sbb
add
adc
loop
mov
cwtl
lea
jno
pushf
cmp
movsl
xacquire
add
dec
pop
jp
faddl
andb
xchg
push
popa
inc
add
mov
into
sub
pop
imul
jns
adc
in
mov
adc
std
cmpsb
inc
pop
jnp,pn
mov
nop
std
mov
adc
fstl
and
sahf
dec
out
or
sbb
jae
shrl
cmpb
jecxz
push
dec
adc
test
scas
mov
jno
call
mov
push
ljmp
inc
inc
andb
movsl
push
lret
add
inc
loopne
hlt
push
jecxz
nop
sub
and
pop
aad
out
dec
dec
and
cld
je
mov
popa
sub
jns
fistl
leave
cmp
jbe
or
jmp
fucomip
sbb
pusha
aad
push
cmp
es
xor
rorl
rcll
or
in
xor
lds
fdivrl
rolb
ss
insl
mov
jge
jo
mov
push
pop
mov
sbb
adc
icebp
repz
outsl
js
ret
cld
jo
clc
mov
dec
jns
pop
or
rclb
ja
cwtl
sbb
lds
movsl
ss
jg
push
xchg
stos
mov
mov
test
pop
cmpsb
push
inc
and
sbbl
sub
lods
iret
cli
ds
imull
mov
fistps
sub
xchg
or
mov
movsb
lcall
repz
cmp
int
or
push
out
and
cld
xor
outsl
jnp
cmp
stos
fldcw
cmp
cmp
nop
push
inc
xor
mov
imulb
sti
adc
xor
push
or
mov
and
int
mov
sub
xchg
sub
pop
mov
negb
addr16
xchg
andl
sub
xlat
push
movsl
sbb
pop
mov
das
push
out
or
sub
shll
xchg
fsubrs
stc
xchg
or
cltd
jno
ds
adc
loopne
fwait
ret
icebp
popa
mov
mov
cmp
adc
adcl
loopne
in
dec
pop
hlt
adc
sbb
add
adc
ljmpw
xorb
fs
xor
jecxz
daa
dec
dec
jl
or
add
mov
push
inc
mov
and
lcall
and
add
cmp
add
addr16
ficompl
lods
lods
ss
dec
xchg
lea
adc
out
fimull
sub
bound
into
inc
gs
add
mov
fstps
fidivrs
das
dec
xorl
nop
scas
imul
outsl
es
adc
clc
sbb
mov
add
mov
lahf
sahf
pop
daa
mov
cmp
aam
jno
mov
jmp
imul
sbb
jl
sbb
out
or
je
js
adc
into
pop
cmp
jecxz
shr
insl
mov
adc
fldenv
mov
inc
popa
xchg
int3
iret
pop
fwait
out
ret
lods
in
cmc
int3
es
stos
mov
cmp
xor
adc
sbb
faddp
jns
jg
xor
test
inc
ss
pop
loope
and
adc
imul
mov
mov
mov
fdivl
pushl
push
in
fistl
aad
enter
iret
cmp
repz
mov
jle
push
insb
mov
adc
idivb
loop
dec
mov
inc
add
addr16
cld
xlat
dec
dec
lea
outsb
sbbl
lahf
aaa
mov
int3
fmul
and
js
fisubrl
adc
in
int
push
pop
sbb
jp
and
xorb
in
insb
lcall
pop
aas
and
cmp
sbb
pusha
imul
mov
adc
push
add
lret
jmp
mov
jecxz
fdivrp
or
push
test
hlt
addr16
jae
arpl
insl
pop
test
repnz
mov
rcrb
xchg
test
iret
mov
sub
xchg
jo
xchg
pop
jne
mov
xchg
and
mov
pop
dec
test
imul
ja
mov
adc
stos
into
mov
into
pcmpeqd
sbb
rcrl
xchg
xchg
dec
gs
ficomps
mov
test
cmp
enter
sbb
je
stos
sbb
fcom
or
cmpsb
adc
and
es
inc
sbb
fs
out
jecxz
cmp
pop
push
fcoms
sti
push
push
mov
lods
mov
mov
sub
xchg
cmp
mov
and
cmpsb
nop
dec
xchg
pop
aam
in
out
lds
or
insb
lea
push
dec
mov
lret
std
popa
enter
dec
mov
cmp
fdivrp
mov
xor
add
mov
adc
and
fs
fcoms
js
verw
mov
mov
cmp
les
and
cmpsl
and
mov
shlb
mov
inc
lcall
sub
repnz
mov
daa
cmp
enter
inc
xor
fstl
lods
sti
jnp
ret
pop
ret
push
sbb
xchg
test
outsb
iret
push
js
movsb
stos
push
push
ljmp
dec
adc
xchg
ja
cmpsl
sbb
mov
xchg
sbb
fidivrl
scas
inc
push
and
adc
adc
imul
fsubrp
imul
jns
out
int
enter
cmc
xor
dec
mov
cmp
mov
lret
or
lods
add
push
xchg
outsl
add
inc
jo
aam
stos
mov
notb
arpl
xor
mov
leave
pop
shrl
add
jle
pop
insb
mov
jmp
mov
push
add
xchg
sub
jnp
pop
lock
mov
jecxz
repz
add
push
mov
jp
popa
or
or
mov
pop
daa
pmulhw
pop
fldcw
notb
mov
fiaddl
pusha
adc
das
aaa
iret
jg
mov
imul
push
sub
aam
mov
push
mov
cmp
jno
mov
loope
sub
lcall
xor
xor
ljmp
push
add
lock
adc
das
pop
adc
sbb
das
pusha
enter
mov
push
popa
push
dec
push
sbb
cmp
mov
dec
sbb
jbe
mov
jae
sbb
xor
cltd
popf
ftst
mov
jnp
mov
jl
sbb
sbb
push
add
jle
shlb
push
inc
cmp
lret
loop
movsl
mov
pop
fcmovnbe
loopne
push
shlb
fsubrl
out
cltd
addl
fnstsw
mov
ss
sti
sbb
stos
adc
loopne
imul
push
dec
push
mov
pop
dec
adc
cmp
cmc
dec
mov
add
bound
stos
jne
xchg
clc
dec
mov
stos
mov
in
je
push
mov
mov
jbe
push
and
ret
sbb
mov
std
fcom
out
pop
arpl
ret
scas
mov
mov
sub
inc
mov
outsb
add
cmp
in
lods
mov
into
lds
in
xchg
stos
xor
lods
inc
and
adc
and
mov
pop
clc
push
into
clc
out
repnz
push
shll
inc
cs
or
ss
icebp
lahf
out
cmp
xchg
xor
mov
sbb
mov
xchg
push
and
aaa
push
and
imul
in
stos
icebp
pop
ror
adc
aaa
aaa
in
addr16
dec
xchg
mov
push
mov
lea
inc
pop
insb
aad
xchg
enter
mov
cld
pop
mov
adc
or
dec
sub
icebp
sub
cli
mov
popa
mov
imul
ljmp
adc
int3
cmp
test
push
movsb
mov
idivb
mov
mov
lea
mov
mov
xchg
mov
pop
sbb
nop
xor
inc
stos
xchg
dec
mov
imulb
jne,pn
jle
shl
fidivrs
lea
scas
imul
pop
mov
fisttps
push
sub
and
bound
cwtl
stos
fmul
mov
or
push
sbb
icebp
sbb
inc
fnstenv
lret
push
lock
in
aaa
stos
pusha
lock
jbe
xlat
test
xor
mov
ss
outsl
inc
lods
xor
repnz
test
daa
mov
jae
mov
imul
mov
mov
je
push
mov
in
mov
jbe
fbld
pop
xchg
scas
pusha
pop
sub
pop
fwait
gs
nop
dec
xchg
xor
int3
subb
lret
cmp
cltd
xchg
push
mov
mov
iret
xchg
ja
cmp
mov
pop
aam
add
and
sbb
pop
ret
mov
adc
push
repz
jbe
inc
push
adc
sarl
xchg
mov
pop
int
xchg
cli
sub
mov
mov
test
mov
call
cmpsb
stos
fcomip
stc
dec
jae
push
mov
dec
insl
xchg
and
and
inc
push
sub
xor
cmp
hlt
xor
popf
xlat
fisttps
aaa
mov
addl
aaa
pop
pop
into
and
push
push
cmp
push
pop
push
call
xor
ret
iret
mov
jnp
mov
mov
dec
xor
shrl
arpl
roll
dec
fcmovne
test
movsl
add
pop
ret
push
mov
mov
add
popf
and
xor
cli
sbb
sbb
cmp
pop
push
cmp
sbb
push
outsb
shll
xor
mov
and
int
js
lahf
popa
add
cmc
dec
cmp
lcall
data16
aad
jle
mov
mov
fstl
xlat
inc
sbb
mov
xchg
mov
push
repnz
inc
inc
iret
ficoml
mov
jns
push
cmc
inc
fsubl
dec
adc
sub
testb
mov
push
mov
add
and
xchg
mov
icebp
push
jb
dec
mov
xor
mov
adc
push
mov
test
push
dec
jle
sub
fnsave
movsb
stc
sub
mov
jp
mov
xor
inc
aam
push
jae
imul
and
ror
rorb
adc
add
or
stos
mov
cmp
js
inc
in
adc
adc
mov
das
jge
js
add
repnz
push
add
push
les
ficoml
adc
ret
adcl
mov
mov
inc
push
in
push
rol
outsl
push
cli
adc
push
dec
add
cs
xchg
sbb
sarl
mov
loope
push
cli
jae
or
test
lods
lods
pop
jae
cmp
and
std
ds
pop
movl
cmp
push
or
mov
daa
popf
lock
or
jg
enter
out
lahf
inc
mov
lods
and
push
add
nop
adc
mov
cld
push
fsts
f2xm1
mov
gs
dec
pop
jbe
xor
mov
sub
mov
mov
cmc
in
add
jge
shrb
testl
stos
mov
jecxz
dec
gs
bound
mov
les
xor
cltd
fdivrp
mov
add
cmovg
inc
fcmovbe
repnz
cltd
sbb
sbb
lret
add
cmp
xorps
inc
or
jecxz
pop
jmp
lods
or
mov
ficomps
dec
mov
addl
daa
arpl
mov
xchg
add
mov
mov
and
movsb
aam
fs
cmp
dec
mov
mov
fdivp
dec
out
in
cmp
mov
sbb
leave
ljmp
push
inc
xor
ss
rorb
add
push
scas
mov
pop
push
xchg
jo
repz
je
and
insb
notb
data16
clc
mov
aaa
out
popf
push
sti
aad
lea
iret
xor
repnz
push
mov
and
pop
test
fdivrl
push
mov
cmpsl
dec
ret
popl
int3
jno
call
imul
jge
cltd
xchg
enter
push
xor
mov
loopne
jle
mov
into
cltd
xor
popa
mov
lds
dec
xchg
fstps
cmp
imul
sub
jo
sub
out
scas
sbb
aas
dec
sbb
xor
outsb
out
pop
pop
mov
lret
ljmp
popa
jbe
lock
out
xchg
daa
push
xor
jge
pop
into
stc
and
sub
push
cmpsl
pop
sbb
stos
lods
scas
insb
inc
xor
push
mov
mov
mov
notl
jno
clc
adc
and
fcmovnu
inc
ja
push
sbbb
cmp
mov
jp
xchg
rorb
sbb
in
sub
mov
in
jge
add
pop
push
mov
jno
in
sbb
and
fldl
add
lods
push
sub
dec
mov
out
cmp
inc
in
jo
mov
xlat
pusha
push
xchg
jp
je
into
mov
sahf
lock
fcoms
fucomi
mov
fdivrs
leave
nop
or
cld
mov
loope
mov
mov
loope,pn
ja
mov
pop
inc
adc
mov
arpl
and
jp
dec
push
sub
fnstsw
xchg
lods
pop
pop
into
jmp
and
out
push
xor
jmp
faddl
mov
enter
fdivp
lret
and
ret
js
cmpl
into
sti
dec
adc
pop
data16
mov
mov
inc
mov
aaa
shlb
pop
outsl
mov
mull
cld
push
cmp
mov
idivl
pop
scas
push
fisttpll
aaa
sub
dec
sub
adc
push
es
jg
bound
lods
in
add
fwait
sub
jo
outsl
loop
ds
xor
cmc
cmp
or
leave
ficompl
das
xchg
xchg
cmp
sahf
scas
ret
push
sub
cmp
fwait
inc
jecxz
test
inc
in
movsb
loop
sub
jnp
das
dec
pushf
clc
push
mov
stos
popf
mov
sbb
xchg
lcall
mov
mov
popa
fwait
jl
ja
imul
mov
loope
mov
xor
mov
lods
mov
rclb
and
dec
or
test
and
out
jmp
add
bound
pop
mov
lods
sti
sbb
call
mov
fists
ret
push
mov
jne
dec
loop
lock
adc
inc
sub
in
push
sbb
out
xchg
sbbl
dec
or
jae
push
cmc
js
lahf
es
jl
int3
pop
jmp
icebp
dec
arpl
inc
mov
add
sbb
addr16
xlat
repnz
out
sub
xchg
hlt
pop
aaa
popf
flds
enter
dec
adc
mov
cmp
sub
test
rcrl
fsub
pop
push
icebp
mov
addr16
pop
jnp
jbe
jle
push
aad
xor
mov
cld
inc
rcll
sub
ss
pop
cmpsl
pushf
cmp
enter
mov
lds
pop
sub
stos
lock
jle
enter
mov
inc
cmpl
fwait
mov
ds
mov
add
imul
sub
lcall
in
mov
hlt
and
lcall
cmp
pop
sbb
cmpl
cmp
into
inc
js
mov
stos
xchg
pop
fcompl
and
xchg
dec
mov
lods
push
mov
mov
jecxz
add
adc
adc
add
mov
pause
icebp
dec
sbb
popa
sub
pop
dec
pop
ret
jge
ss
mov
dec
das
xor
mov
sub
pop
mov
xchg
or
aaa
cmpsl
inc
adc
push
leave
mov
pop
inc
stos
subb
stos
and
inc
jae
lods
mov
adc
into
push
cs
scas
push
cmc
fldenv
or
leave
cmp
fidivl
jo
add
loop
addr16
pop
xchg
sbb
fidivs
push
bound
in
or
sbb
inc
jp
js
push
xchg
pop
call
pop
sbb
lcall
pop
ret
inc
inc
xlat
das
adc
push
shl
lret
sbb
xchg
xlat
inc
lds
or
adc
mov
pop
sub
repz
arpl
je
mov
adc
enter
test
sahf
jb
cmp
loop
cmp
dec
mov
outsl
cli
xchg
mov
outsl
dec
repz
enter
jbe
and
fwait
add
sbb
mov
rolb
sub
inc
lods
or
mov
test
xchg
xchg
rolb
cli
push
jo
xchg
arpl
add
jecxz
mov
out
enter
lret
iret
pusha
pop
dec
lcall
or
dec
pop
aad
adc
sbb
pop
out
test
gs
inc
jecxz
icebp
std
ljmp
fstps
mov
lea
pop
int3
push
out
rorl
or
fstpl
xchg
mov
movsb
sbb
lahf
cmpsb
mov
popf
add
pop
push
in
movups
jl
dec
daa
push
and
add
pop
ret
dec
jo
and
cs
dec
sbb
jno
xchg
dec
in
sbb
and
inc
add
test
lds
dec
add
scas
outsl
clc
add
inc
jo
pushf
pusha
ljmp
jb
lret
out
in
inc
or
int3
repz
jl
push
sti
push
sbb
test
mov
jmp
or
int3
enter
movd
mov
lahf
and
imul
insl
cmp
sar
xchg
cmpsb
inc
sbb
loope
mov
ret
rcrl
xor
cmpsb
stc
pop
clc
jne
jb
test
daa
cwtl
jg
inc
or
sub
fidivrs
leave
pop
jle
jmp
add
pop
js
xchg
and
mov
out
fs
xchg
sub
xor
push
dec
div
mov
xchg
push
fists
push
lcall
cmc
cmpsl
lcall
adc
xor
adc
and
push
add
xchg
mov
mov
cmp
xchg
arpl
ret
aam
pop
cmp
sbb
xor
lods
jge
dec
and
lcall
aam
jl
mov
and
test
sbb
cmp
rcl
stc
mov
lahf
push
icebp
dec
mov
inc
inc
xchg
or
daa
jae
stos
cmp
xchg
mov
shrb
mov
adc
pop
decb
mov
enter
ja
xor
cmc
sbb
pop
addr16
test
fimuls
mov
sub
insl
sbb
aaa
fidivrs
fld
cmp
inc
rcll
dec
jb
jno
add
icebp
jl
mov
shll
and
jg
nop
iret
orl
pop
mov
push
arpl
jbe
pop
and
mov
js
inc
or
and
gs
hlt
insb
dec
sbbl
add
inc
test
cmp
les
xchg
sub
adc
xlat
ljmp
mov
push
nop
mov
push
xor
das
dec
movl
push
scas
push
test
or
mov
xor
dec
sahf
xchg
push
xor
push
sub
jnp
mov
aam
js
jmp
cmp
in
sbb
insl
popf
xor
adc
mov
in
lods
sub
xor
enter
incb
add
dec
xor
or
shlb
enter
mov
dec
loop
ret
jo
stos
loopne
popl
lods
out
and
in
jg
shll
leave
xchg
xor
inc
mov
fidivrl
mov
jnp
and
push
or
ljmp
out
int
xor
pop
gs
dec
cmp
and
es
add
or
xor
les
adc
sbb
lret
aad
ret
std
cmp
fisubl
jno
not
push
and
xor
sarl
jge
out
and
ss
xchg
push
push
pop
fistl
xor
lock
dec
lods
sbb
mov
lcall
dec
insb
mov
push
imul
punpckldq
xor
pop
or
xor
std
std
rcrl
mov
dec
clc
mov
aas
mov
js
fs
pop
imul
mov
cld
jo
cmpsb
sbb
add
xchg
xor
or
add
sub
les
out
jns
nop
ja
std
add
mov
movsb
or
or
out
xlat
push
inc
push
pushf
fsts
inc
adc
jge
pop
mov
mov
test
das
cld
fwait
das
jns
mov
pop
sbb
cmp
xchg
inc
sub
popf
aam
inc
or
ja,pn
cli
push
push
jno
je
js
sbb
sbb
arpl
mov
inc
inc
hlt
sub
jns
daa
add
or
outsb
ss
cmpsb
out
or
xor
mov
sub
pop
mov
int3
fsts
mov
lret
cmp
adc
mov
mov
out
push
or
and
jnp
cwtl
add
push
inc
sub
mov
mov
xchg
mov
movsb
sub
mov
mov
out
imul
xlat
ficoml
mov
imul
clc
imul
scas
lret
add
outsl
jb
adc
push
fisubs
cmp
jnp
ficoms
or
in
inc
pushf
int
xor
cmpl
inc
jae
push
ret
into
pop
jg
cltd
icebp
cmp
popf
cmp
mov
jno
and
push
xor
cmp
aad
mov
fwait
aaa
rcll
fmull
inc
mov
push
nop
xchg
pushf
fnstsw
lret
jb
lock
xchg
in
out
insb
jge
nop
dec
mov
jmp
inc
fisttpl
in
fidivrs
mov
repz
pushf
in
cs
sbb
popf
push
sub
adc
lock
xor
clc
bound
mov
xor
cmp
inc
sub
push
and
int
enter
les
push
inc
sbb
pusha
out
inc
add
mov
add
sbb
fisubrs
xor
pop
ds
cmp
pop
cmp
or
adc
pop
lret
jne
xchg
mov
push
daa
cmp
jo
adc
inc
inc
sub
push
icebp
movsl
push
int3
push
cli
daa
int3
and
cmpsb
cli
pop
xor
fwait
jp
xchg
ja
fstpt
hlt
xor
mov
les
dec
mov
and
addl
rolb
gs
inc
test
dec
in
xchg
xchg
leave
in
mov
in
lahf
sbb
lret
int
fldl
mov
testl
shlb
shll
jnp
sbb
mov
cmp
pop
xor
cmp
loop
testl
push
sbb
shrb
sbb
and
lods
dec
lods
pop
cwtl
sub
ret
aas
mov
lahf
add
cs
shl
inc
add
clc
xor
lret
fisubrs
shl
lret
or
cmp
jle
pop
jo
lock
stos
popf
pop
cmp
push
xor
mov
aaa
add
scas
dec
inc
dec
or
sub
mov
fidivs
leave
push
out
xor
repnz
jne
sbb
into
jl
dec
icebp
xchg
dec
sbb
enter
cmc
pushf
mov
movsb
fs
pushl
scas
jno
je
xchg
jb
sbb
dec
mov
mov
pop
clc
inc
mov
arpl
out
inc
std
aad
mov
out
in
pusha
popf
pusha
adcl
add
lock
rcll
dec
or
leave
sbb
cmp
outsl
push
insb
mov
xor
int3
inc
arpl
mov
js
filds
and
repnz
arpl
lods
cmp
loopne,pn
cmp
jae
in
xlat
pop
push
pop
cmp
fcomps
xor
in
inc
popa
push
adc
das
mov
mov
js
imul
mov
xchg
sub
stos
add
mov
fldt
push
sahf
jp
jne
je
pop
insl
dec
out
sbb
dec
jmp
outsb
sbb
and
and
mov
hlt
shr
addr16
dec
sub
dec
xor
push
push
das
fmuls
mov
mov
sub
jp
adc
stc
stc
jp
aas
test
imul
jb
std
call
mov
mov
lret
sbb
pop
jmp
jl
shll
fisubs
jmp
mov
sub
jns
in
cmpsl
popf
mov
push
or
leave
jg
and
lahf
fsubrs
mov
out
xchg
xor
rcrl
pop
mov
dec
aad
call
xchg
aas
movsb
outsl
jne
mov
in
sti
lds
pop
adc
sti
aad
lcall
test
push
or
test
jo
mov
negl
or
test
ret
jp
xor
aam
popf
icebp
jb
jns
lea
jl
pop
dec
xor
cld
push
mov
cli
gs
sahf
mov
cmpsl
insb
insl
scas
adc
or
bound
or
iret
pop
lds
cwtl
in
sub
adc
pop
sbb
xor
sub
mov
push
and
push
mov
test
leave
hlt
push
pusha
nop
mov
add
push
stos
mov
fimull
sub
mov
pop
leave
je
sub
and
adc
push
enter
pop
mov
daa
cmpb
outsb
mov
push
cwtl
or
cmp
enter
or
mov
cmp
pop
not
adc
out
rcrl
stos
fimull
adc
lock
lock
notl
inc
or
xchg
mov
pop
jge
jmp
dec
cmp
sbb
aad
jmp
adc
xor
jg
scas
jle
sbb
in
fsts
imul
cmp
jo
mov
pop
arpl
push
add
or
stos
into
jmp
push
cmp
cld
fsts
jmp
and
or
ret
fsubrl
popf
inc
ljmp
mov
jne
cs
mov
cmpsl
dec
lods
mov
jecxz
rcll
add
ret
and
mov
lret
jnp
fs
lods
cmpsl
sub
or
sub
cltd
pop
jae
and
fidivrs
sbb
movsl
imul
mov
xchg
rcl
mov
adc
cmp
adc
cmp
cmp
mov
popl
aas
sub
and
push
out
pop
repz
out
fiaddl
mov
mov
lahf
outsb
pop
adc
xchg
cli
inc
in
sub
sub
cmp
pushf
cmp
test
push
mov
in
add
jno
fisttpll
and
dec
mov
in
add
shlb
rcll
in
aaa
frstor
xchg
add
in
push
pushf
and
or
jnp
fs
dec
ret
cltd
fsubl
fidivl
add
dec
cmpsl
xchg
dec
and
and
mov
insb
sub
in
divb
cld
inc
popa
ret
repz
or
mov
gs
mov
loope
lods
lcall
sub
mov
inc
adc
sbb
inc
es
xor
rcll
inc
adc
dec
dec
popf
ljmp
xchg
gs
sti
inc
aaa
or
shll
lret
in
mov
lods
jmp
cld
cmpsb
test
aaa
xor
loop
mov
lret
ss
jmp
inc
jp
ss
fidivrl
out
out
mov
ja
push
mov
std
mov
fucomip
es
in
or
fbld
repz
jecxz
jno
cs
insl
fadds
adc
cmp
jl
sub
test
nop
sub
or
mov
add
sbb
jno
testb
lret
repz
jno
lahf
mov
xchg
in
outsl
sbb
dec
fildll
mov
hlt
mov
push
arpl
stos
fdivrs
sti
sub
sbb
int3
shrl
mov
fidivrl
fists
ja
jno
cmp
sub
add
sbb
mov
jecxz
mov
ljmp
ja
sahf
ja
cltd
imul
add
fidivrl
xchg
adc
mov
xchg
fisubrl
aam
shrl
dec
mov
fimuls
imul
jb
fbstp
adc
js
dec
mov
lret
loopne
sbb
inc
sbb
pop
dec
jg
sarb
insb
xchg
fistpll
sar
popa
xorb
mov
repnz
push
xchg
jmp
adc
inc
sbb
pop
je
out
lds
push
sbb
inc
ja
enter
and
dec
pop
sbb
sbb
gs
dec
add
pop
push
cs
dec
mov
pop
arpl
or
inc
and
lahf
les
dec
mov
xor
push
rolb
add
cmp
mov
in
jecxz
jae
push
dec
jae
addr16
mov
pop
push
cwtl
or
nop
rcrl
es
dec
jae
xor
xchg
xor
sbb
cmp
mov
xorps
jl
cmpsl
cli
mov
jl
add
scas
fdivr
outsl
dec
xlat
pop
or
shlb
dec
jge
test
xchg
jge
sub
xor
xchg
outsl
es
aaa
stos
into
sbbb
jnp
stc
adc
shrl
pop
ljmp
xor
dec
ljmp
xchg
orl
ljmp
mov
jno
add
test
push
jecxz
mov
mulb
push
out
loop
shrb
cld
add
sbb
mov
push
fwait
cmp
inc
popa
xchg
insl
fisubrs
sbb
int3
ret
or
sbb
inc
dec
add
scas
sar
jg
call
push
jb
jl
or
xchg
lods
and
iret
add
enter
cli
fstl
push
adc
out
pop
aaa
mov
insb
mov
lahf
mov
pop
or
mov
outsl
add
inc
lahf
fmul
inc
loope
cmc
arpl
jl
test
xchg
xor
les
dec
pop
out
xchg
xorb
fcmovnbe
es
xlat
lret
movsb
mov
test
push
or
scas
test
sahf
std
or
cwtl
std
xchg
jbe
xchg
and
or
cmp
xlat
mov
and
outsl
or
outsl
pop
fldl
mov
imul
mov
mov
gs
xor
jecxz
xor
lock
xor
inc
aas
lods
into
xchg
pop
add
push
xorb
test
or
fldenv
mov
cmp
lea
arpl
ret
adc
test
mov
repz
xchg
sub
sub
ds
cmpsl
lret
out
cltd
jmp
pop
aad
mov
ss
inc
loopne
stc
daa
jg
mov
push
xchg
mov
pusha
lds
hlt
mov
out
std
movsl
out
outsl
hlt
dec
adc
sbb
mov
xor
or
in
jno
and
lea
jnp
popf
mov
jmp
inc
gs
xchg
data16
push
stos
ret
iret
cmpl
je
mov
lret
xchg
xor
fnsave
dec
and
xchg
or
cltd
lock
rclb
xchg
inc
jge
push
xchg
lcall
push
push
std
int3
ss
or
inc
jp
aas
inc
aaa
mov
sub
sbb
jle
xchg
ja
ret
and
push
data16
in
sbb
inc
aaa
fstps
imul
les
es
ret
jg
xchg
jb
loope
pop
mov
xchg
mov
in
add
jmp
add
outsb
stos
sti
fstpt
cmp
into
xor
sbbb
popf
out
push
mov
cli
and
lds
shrl
sbb
jne
xchg
push
mov
adc
cmc
outsl
fcompl
add
ljmp
inc
lds
fadds
xchg
dec
adcb
pop
in
xor
insb
mov
out
in
pop
mov
js
and
sub
fstpl
adc
push
mov
mov
inc
adc
outsl
mov
or
xchg
pop
cmpsb
or
cli
jb
xor
push
imul
imul
sub
movsb
dec
dec
inc
add
cltd
addr16
cli
xor
cmpsl
dec
push
lods
jno
andb
lock
pop
mov
pop
stc
pop
fdiv
push
inc
pop
test
mov
addr16
stc
push
clc
cmp
mov
insb
pop
fwait
repnz
cmp
sub
jmp
ds
sarl
out
mov
adc
ror
inc
ss
in
clc
cmp
xor
loope
stos
inc
dec
pop
daa
dec
jmp
dec
lret
add
jg
imul
and
aaa
ds
cmp
cs
les
aam
xchg
lret
pop
jl
mov
fs
loope
out
and
notl
inc
mov
hlt
sub
std
push
pusha
sbb
sarl
jecxz
sub
cmpsl
in
and
push
call
push
mov
scas
orl
mov
shlb
iret
xchg
in
out
sub
add
add
popf
call
mov
hlt
mov
cmp
inc
pop
push
mov
and
jno
dec
inc
movsl
lahf
fmuls
fidivs
inc
rolb
in
cmp
stos
loopne
cmp
repz
loopne
in
sub
fcomps
mov
adc
and
add
jge
out
push
imul
stos
pop
sub
cmp
testb
inc
js
add
pop
xor
das
jnp
je
dec
repz
pusha
in
mov
push
imul
pop
out
insl
sahf
cmpsl
jae
in
test
jecxz
mov
cmp
cmp
fdivrl
in
mov
dec
insl
data16
sbb
call
fidivrs
mov
sahf
outsb
scas
xor
inc
faddl
push
les
daa
mov
cmp
cmpsb
push
inc
rolb
fisubrl
lret
push
mov
fnstcw
call
pop
out
jbe
data16
aaa
inc
adc
loopne
clc
jo
adc
adc
mov
jbe
ss
out
pop
mov
push
mov
mov
push
rep
adcb
out
adc
cmp
push
rcr
ss
mov
xchg
push
mov
or
and
lods
into
and
mov
push
xchg
mov
imul
pop
cmp
add
fwait
xchg
lods
dec
pop
jle
pop
aaa
push
lods
sub
ljmp
out
inc
cmp
ds
insl
filds
mov
xor
fs
mov
loope
cs
inc
and
movsl
or
inc
mov
sbb
mov
cltd
cld
enter
in
jnp
adc
lea
mov
push
or
dec
or
jns
stos
pop
ss
scas
insl
mov
dec
pushf
mov
out
add
or
xchg
lods
and
mov
sbb
xor
sub
shld
xchg
mov
mov
sbb
dec
add
jg
push
sbb
push
xchg
inc
adcl
xchg
or
nop
leave
dec
sbb
jno
fcmovnb
xorb
ja
imul
cmp
or
dec
pop
mov
ljmp
add
mov
add
in
cwtl
mov
push
sub
std
sbb
push
or
dec
xchg
les
ds
cmp
mov
fnstcw
fucom
pop
fs
filds
jnp
sti
aad
jmp
sub
adc
fsubrp
subl
mov
insl
sub
cmp
pushf
sub
test
fnstsw
xchg
fwait
mov
pop
inc
cs
jbe
adc
aam
sbb
scas
lret
test
mov
jbe
cmpsb
in
adc
mov
test
mov
ds
xchg
mov
mov
xchg
inc
bound
mov
add
push
loop
in
clc
cmp
mov
insl
aaa
adc
mov
into
xchg
in
repz
lahf
outsl
xchg
jmp
sbb
dec
das
pop
push
inc
insb
adc
push
repz
xchg
loop
cmpsl
or
jb
mov
jge
mov
dec
clc
lahf
mov
mov
outsl
inc
cmp
fisubrl
mov
fidivl
inc
inc
xchg
ja
cmp
int
mov
xchg
cmp
hlt
and
cli
sbb
test
xor
xchg
shr
call
in
sbb
icebp
out
or
push
push
daa
addb
fs
dec
in
lods
test
and
jb
jge
fdivl
xchg
sub
mov
sbb
je
dec
inc
inc
fidivl
add
adc
cld
push
loopne
mov
call
jl
push
shll
mov
pop
sub
mov
nop
jg
and
jo
es
sbb
mov
ds
push
je
adc
rorb
lds
cmp
je
popf
adc
dec
call
sbb
gs
cli
jecxz
lods
clc
mov
inc
dec
fcompl
rolb
addr16
int3
and
mov
das
mov
xor
jbe
mov
push
cmc
sub
icebp
push
aam
lods
inc
jne
inc
or
xchg
fsts
sbb
add
and
xchg
loope
mov
fdiv
inc
das
lds
pop
stos
ss
pushf
xchg
lret
jno
adc
add
loop
arpl
nop
jmp
out
or
xlat
cwtl
stos
mov
xchg
fwait
cld
shrl
mov
xor
mov
sub
cmp
xor
repnz
addl
sbb
push
dec
lret
repz
mov
js
sbb
lret
and
and
cmp
jle
roll
xor
cmpsb
jo
iret
or
push
pop
test
add
add
lahf
sti
mov
loope
jns
xchg
in
faddl
das
pop
jmp
sub
sub
out
push
cmc
ret
mov
inc
cmpl
lret
xchg
xor
cmp
loop
out
jbe
fptan
cwtl
leave
or
jl
cmpsb
dec
mov
movsl
sub
cmp
mov
addr16
cltd
mov
into
ja
xchg
mov
stos
enter
loope
sbb
test
mov
cmp
ror
dec
dec
ret
loope
jg
cmpsl
fld1
cltd
mov
or
mov
loop
out
pop
cmpb
out
es
add
or
pop
out
adc
test
repnz
bound
shl
xor
mov
rorl
out
testl
push
dec
adcb
add
inc
movsl
int
push
popa
ds
hlt
and
imul
fbld
cmp
cmp
out
int3
outsb
stos
mov
daa
cs
xlat
mov
jo
add
sub
das
push
std
inc
sbb
xchg
addb
jmp
sub
cmpsl
inc
rorb
cmc
bound
jecxz
dec
dec
int
sbb
sbb
f2xm1
popf
aaa
fsubr
aad
jge
popf
mov
cmpsl
cmc
out
mov
das
bnd
jle
jnp
xchg
xchg
mov
jo
sbbb
outsl
mov
outsl
xlat
ret
adc
les
dec
jbe
repz
xchg
and
int
lods
dec
ja
mov
orb
in
int
and
sub
popl
daa
jno
das
fbld
jmp
mov
mov
dec
adc
add
rol
in
cmp
in
or
push
cmp
jmp
aad
jb
aad
dec
iret
jno
into
mov
xor
sarb
cmp
push
sub
pop
sub
xor
jb
fisttps
mov
fstpl
cld
enter
jecxz
insb
or
aas
jg
pop
push
in
add
into
push
cmp
mov
dec
push
inc
test
imul
mov
mov
rcll
les
fcmove
jecxz
in
cmp
mov
and
sbb
call
cmp
lret
sub
jp
std
push
xchg
aas
jbe
subl
add
lret
dec
mov
insl
out
cli
pop
pop
add
leave
in
mov
sbb
jmp
test
jno
jmp
sbb
out
inc
lcall
cmpsb
hlt
jmp
enter
pop
xchg
xchg
adc
or
mov
stos
outsb
and
adc
leave
jp
dec
mov
movsl
aam
lock
or
sti
jp
fisttpl
dec
cmc
and
shrl
mov
xor
outsb
out
dec
popa
cld
ljmp
jns
jns
mov
fbstp
and
push
imul
push
or
lcall
enter
lret
mov
sub
xor
stos
hlt
cld
incb
sbb
lds
mov
push
cmp
enter
dec
lock
adc
loopne
xlat
icebp
outsl
pushf
mov
xor
clc
inc
mov
mov
jecxz
xor
fsubl
mov
jmp
fstl
push
xchg
lahf
cmc
xchg
popf
mov
in
out
mov
add
dec
in
lahf
cli
cmp
call
push
xchg
pop
mov
daa
sbb
lret
shll
cmp
sbb
mov
sar
dec
ljmp
mov
mov
push
pop
xor
pop
push
xchg
aaa
shrb
and
xchg
shll
or
aaa
fstpl
loop
in
mov
sub
stc
push
je
dec
stos
pop
es
fistl
aaa
aad
lahf
iret
js
xchg
push
jnp
dec
loop
pop
xchg
jmp
adc
stos
xchg
cmp
dec
shlb
sub
ss
or
repz
and
xchg
cld
subl
pushf
cmp
xchg
sahf
sub
cmp
lret
dec
popa
cmp
mov
add
push
lods
imul
cltd
sbb
pop
mov
inc
sub
aad
loop
mov
add
and
push
sbb
mov
icebp
and
loope
dec
imul
test
sub
dec
ds
adc
pop
ret
mov
icebp
mov
cmp
mov
lds
jle
stc
out
sarl
in
inc
outsb
xchg
sbb
push
repz
cld
mov
push
mov
rol
cmc
fisubrs
adc
insb
mov
or
cmpsl
stos
jns
push
dec
mov
leave
nop
test
adc
adc
imul
add
mov
jmp
imul
jbe
or
aam
and
sbb
mov
xchg
and
decl
insl
sbb
pop
arpl
mov
movl
gs
sbb
aam
arpl
or
push
add
mov
cmp
rol
stc
add
mov
mov
xchg
fs
sbbl
loopne
cmp
and
push
mov
rorb
movsl
std
subl
fistpl
and
bound
bound
int
jbe
mov
jo
adc
shrl
in
fldcw
jo
add
lret
js
lods
or
arpl
dec
mul
mov
lret
jns
ss
lret
or
hlt
roll
adc
in
setbe
repnz
add
xchg
fldt
ret
and
testl
call
add
je
push
les
push
sbb
push
sub
cmp
out
lret
faddp
jae
xlat
mov
fsubr
popf
aad
std
aas
repz
inc
jge
mov
addr16
adc
mov
cmp
stc
mov
hlt
outsb
xlat
jne
push
xor
sub
xor
jae
or
addb
dec
xchg
in
in
adcl
jo
sarl
data16
mov
aam
sub
xor
scas
sub
das
jmp
add
mov
cmc
add
ret
pop
ljmp
lods
pop
sbb
or
push
filds
dec
ss
ret
repnz
dec
mov
fdiv
jno
test
mov
sahf
jle
cli
fidivrs
es
fnsave
adcb
outsl
es
pop
and
stos
jecxz
pop
std
dec
out
sti
imul
mov
ja
int3
push
movsb
testl
jae
out
rcr
imul
adc
lret
mov
inc
mov
mov
movsl
add
into
scas
dec
mov
cwtl
xchg
or
out
ret
pop
fs
mov
adc
mov
iret
mov
cmp
enter
sti
fs
dec
lcall
stc
push
cmp
and
icebp
or
cwtl
cmp
jbe
scas
orl
xor
dec
je
pop
push
push
or
jns
dec
loop
push
ret
insl
pop
fiaddl
lahf
aad
add
sbb
push
clc
dec
cld
cltd
mov
dec
popf
ficoml
cld
jo
sbb
fdivrs
movups
add
fimull
jg
dec
xchg
add
mov
ds
lahf
xor
jbe
pop
scas
fs
adc
add
inc
adc
inc
fisubrs
notl
lcall
std
cld
sbb
and
adc
aas
out
or
pop
fldcw
bound
lret
jp
push
enter
in
push
fninit
or
dec
xchg
mov
push
orb
stos
adcb
dec
xchg
mov
pop
jg
out
or
enter
rorb
aaa
aam
addr16
popf
in
and
jmp
cwtl
fmuls
mov
cli
ja
mov
add
push
fwait
and
push
cs
adc
mov
in
pop
mov
mov
outsl
adc
imul
or
lock
cmp
inc
movsb
stos
and
sarl
int3
push
cmp
push
push
push
faddl
xor
sub
mov
xchg
imull
and
dec
and
rcr
sub
testb
adc
das
ficoms
decb
ljmp
loope
into
mov
outsl
testb
stos
ss
rorl
dec
lret
inc
push
mov
fwait
push
inc
imul
pop
lea
test
add
mov
add
repz
js
je
sahf
push
scas
cmp
addl
cmp
cld
jo
outsb
push
insb
pop
and
test
imull
loope
lahf
sti
push
jle
orl
mov
mov
add
divb
cmp
xor
lods
icebp
mov
push
mov
and
pop
cld
pop
inc
adc
xor
stos
mov
cmp
jb
pop
jno
cld
sub
stc
fwait
sahf
sub
orb
inc
pop
pop
push
push
jne
or
push
imul
popf
test
cmp
mov
lahf
and
dec
mov
add
add
lret
jbe
push
scas
cmp
pop
pop
movsl
mul
loopne
enter
add
shll
mov
jb
mov
daa
xchg
mov
rorb
scas
pop
push
loopne
ss
mov
pop
mov
jo
ret
mov
xchg
mov
xchg
je
fsubrs
adc
push
shll
test
xlat
outsl
stos
pop
inc
int3
push
out
test
push
iret
xchg
sub
mov
jno
push
mov
jbe
into
and
sbb
cmp
call
sub
scas
stc
sub
add
mov
lahf
jle
sub
frstor
pop
inc
mov
and
jecxz
adc
adc
loop
mov
cmp
xchg
or
xor
pop
ljmp
adc
adcb
sbb
enter
mov
icebp
xor
in
and
mov
ljmp
idivb
rorl
lods
add
out
int3
xor
cmpsb
cmc
movsb
mov
sub
mov
mov
test
and
cwtl
inc
cli
faddl
xchg
xchg
andb
and
pop
stc
xchg
aam
sti
les
cmc
daa
push
insb
stos
addr16
push
cwtl
in
inc
mov
andl
aaa
dec
xor
mov
mov
lods
mov
rorl
mov
nop
andb
and
xchg
push
js
mov
lea
cli
pop
dec
movl
divl
aam
xchg
mov
lret
lret
cs
dec
sbb
frstor
test
inc
sub
lds
add
mov
insb
outsb
push
push
jmp
mov
inc
rorl
jo
dec
das
sbb
scas
les
addb
rclb
rcll
aad
rorb
lcall
pop
jne
sbb
push
jmp
fsubs
push
dec
cmp
xchg
aaa
push
stc
push
loopne
push
add
in
mov
fcompl
cltd
inc
xchg
pop
out
stos
or
js
stos
lcall
fmul
pop
sub
out
adc
lret
daa
add
mov
add
jns
add
mov
fstpt
cld
inc
movsb
iret
jp
lds
popfw
movsl
sub
sub
jle
jb
and
cmpb
add
adc
divb
xchg
das
sbb
add
mov
je
faddl
inc
mov
gs
insb
inc
add
dec
fidivrs
leave
sbb
dec
or
sub
cltd
pop
add
movntps
and
mov
and
mov
jl
in
and
inc
xor
fnstenv
shll
or
arpl
pop
outsl
arpl
arpl
scas
arpl
loopne
push
nop
addr16
adc
sti
int3
push
ds
adc
dec
das
or
dec
sub
mov
or
mov
xor
inc
xor
xor
mov
aad
cmc
aad
mov
adc
test
sub
incb
jle
outsl
xor
stos
add
mov
pop
rcll
cmpsl
sub
into
inc
addr16
push
jmp
aad
js
faddp
cmp
fsincos
and
mov
je
mov
cmp
inc
dec
movsl
sbb
out
lret
add
jge
pop
rorb
adc
and
push
push
mov
adc
cwtl
gs
mov
dec
fsubp
pushf
or
add
mov
sub
mov
pop
sub
push
mov
shll
into
daa
add
iret
mov
cmpsb
xchg
sahf
movq
int
imul
cs
xor
xchg
lea
insl
js
sub
sarl
mov
or
in
push
fimuls
fstpt
orl
icebp
sbb
and
lea
push
jo
orl
push
cmp
mov
iret
in
rep
xchg
sub
jo
xchg
add
push
xor
xchg
cmpsl
pop
ret
push
dec
es
mov
aaa
sub
negl
int3
ret
daa
xchg
dec
sbb
push
push
insl
scas
pop
dec
xor
xchg
test
divb
popf
cmp
jae
mov
sbb
roll
orb
stos
jge
mov
popl
loope
in
test
fcmovne
cld
mov
jmp
adc
mov
fmul
pop
fiadds
xor
xor
in
inc
fwait
push
pop
ljmp
mov
push
dec
sub
adc
dec
idivb
aad
push
inc
sti
mov
xchg
or
cs
fmuls
jno
fistpll
dec
out
rolb
fisttpll
inc
icebp
jns
movsl
pop
test
data16
testb
mov
inc
xchg
lock
push
movsl
push
popl
add
cmp
int3
cwtl
pop
lods
enter
ja,pt
out
aad
iret
scas
jle
or
decl
insb
inc
lods
fmulp
push
movsl
testl
das
jmp
loopne
or
rcl
or
bound
jnp
pop
mov
jge
adc
popf
sbb
cs
imul
cmp
xchg
aaa
lock
add
mov
sub
pushl
std
dec
add
push
sarb
push
aaa
mov
pop
or
push
xchg
repz
add
cld
scas
and
sbb
test
enter
rorl
ljmp
xchg
popf
imul
xchg
xor
dec
cmpl
das
out
pusha
xchg
div
repz
dec
les
test
aad
jmp
lcall
das
dec
mov
es
pop
push
test
jae
xor
scas
pop
add
mov
jl
add
inc
loop
dec
mov
push
cmpsl
shlb
inc
sub
jp
inc
xchg
mov
enter
xchg
fdivr
and
stc
jmp
and
dec
addr16
rcrb
jp
adc
jecxz
pop
test
je
jns
out
testb
loop
mov
into
out
sub
mov
nop
iret
dec
lock
mov
dec
aaa
push
pop
inc
mov
fdivs
mov
in
data16
mov
adc
mov
jmp
lea
call
adc
mov
adc
mov
cmp
cs
subb
dec
sub
fxch
mov
nop
mov
jno
dec
xor
and
shl
and
mov
cmp
adc
inc
inc
arpl
divl
dec
iret
loope
or
xor
scas
insb
in
mov
mov
xchg
testl
push
jmp
scas
int
mov
clc
jb
ret
int3
dec
push
ret
scas
cmp
push
andl
lods
imul
pop
pop
cwtl
mov
imul
mov
pop
scas
dec
dec
push
xchg
dec
and
mov
cld
jge
dec
add
and
outsb
pop
or
movsb
mov
test
pop
out
add
in
outsb
cmp
jp
mov
and
repnz
and
pop
xchg
and
and
addl
adc
xlat
push
cmp
loop
sub
cmp
out
cld
xor
lea
mov
hlt
sub
dec
mov
dec
adc
sub
stos
call
lret
repnz
fistpll
fwait
and
push
in
jecxz
sarb
icebp
ss
cwtl
add
sub
xchg
insb
dec
decb
xor
mov
iret
mov
adc
leave
in
xchg
enter
pop
push
lret
je
and
scas
jo
pop
ror
sahf
lcall
xlat
stc
mov
xchg
fistpl
mov
dec
in
rolb
int3
jle
xchg
pop
jg
ss
lea
cmpsb
xchg
or
movsl
aam
adc
push
inc
inc
and
lock
lahf
fidivs
addr16
xchg
pop
sub
push
push
sarl
mov
test
mov
add
pop
mov
mov
pop
or
xchg
jl
xchg
out
shr
and
xor
popf
mov
cmpl
jmp
mov
bound
shl
orl
add
mov
sub
adc
enter
inc
repz
push
xor
push
lahf
mov
jno
mov
or
push
jo
fisubs
filds
roll
test
and
dec
fcomps
pushf
iret
inc
jmp
pusha
mov
push
orl
ss
mov
mov
fisttpl
pushf
scas
enter
sub
sbb
repnz
cmp
xor
imul
xchg
aad
or
adc
jno
in
fcoml
imul
sbb
push
lock
inc
jns
rep
imul
test
add
dec
and
jae
gs
xchg
js
in
test
mov
mov
mov
sbb
ja
xor
pop
mov
rcll
je
mov
call
push
mov
pop
ror
cmp
outsb
xor
or
cmp
lret
xchg
cmp
mov
test
pop
in
std
lods
inc
inc
adc
or
fwait
andb
add
dec
test
pop
dec
fistl
sysret
test
jecxz
fdivrs
mov
pop
scas
jo
out
je
scas
dec
aas
xchg
mov
andl
dec
inc
cltd
js
leave
xorl
dec
les
lahf
rcr
outsl
ja
mov
cmpsb
pop
or
jo
in
out
nop
cmpsb
mov
cmp
fcomp
xchg
xorl
push
mov
pop
jecxz
aaa
mov
add
add
sub
jg
cmpsl
dec
xor
mov
vandnps
mov
inc
repz
mov
dec
mov
rcl
xor
clc
test
icebp
daa
fwait
call
pop
inc
mov
adc
cmpsb
outsl
nop
cld
mov
inc
orb
in
sub
or
aam
daa
fildll
scas
add
ds
mov
and
cwtl
cmp
fcompp
dec
pop
mov
repnz
daa
mov
inc
xor
bound
cmp
add
pop
jg
imull
inc
dec
sbb
fsub
or
and
ja
pop
push
push
imul
sbb
cmp
sub
pop
fscale
daa
jle
push
mov
imul
and
xor
lods
xor
fdivrs
mov
das
jne
pop
js
pop
mov
jle
push
adc
es
mov
xchg
out
incl
lahf
push
cli
repz
lret
add
xchg
mov
repz
js
out
clc
nop
mov
cmp
jle
dec
lret
pushf
push
pop
mov
fdivrl
sub
lret
sbb
imul
pusha
repnz
inc
mov
and
loope
addr16
sbb
ja
mov
repnz
add
cs
insl
inc
lds
adc
jbe,pn
dec
jno
repnz
ds
push
sbbb
add
jns
cmc
dec
lds
jle
add
insb
pusha
out
push
test
jp
mov
add
mov
imul
push
lock
adc
data16
mov
pusha
lret
pop
addl
xor
je
cmp
push
add
iret
xor
add
stos
xchg
jns
lea
sbb
enter
lea
add
xchg
add
or
fptan
pusha
dec
jb
inc
jecxz
arpl
mov
clc
idiv
or
push
clc
dec
dec
mov
mov
outsl
dec
lret
insl
lods
pop
adc
mov
pop
cmp
out
push
ret
test
sbb
int
mov
jnp
inc
loop
mov
jg
int3
xchg
cld
ficoms
and
mov
or
inc
sub
inc
pop
addr16
movsb
mov
shll
aad
inc
jge
cmp
add
mov
mov
cmc
int
add
movsl
test
insl
fs
or
shll
das
adc
mov
mov
adc
adc
jmp
lahf
adc
sbb
sbb
mov
insl
pop
out
xor
xor
jno
jb
xor
and
mov
push
mov
xchg
adc
fdiv
loop
daa
jg
cmp
fucomp
aaa
out
mov
push
fdivrp
or
mov
int3
in
movsl
mov
iret
outsb
jmp
pusha
jb
cmp
addr16
je
insb
cmpsl
sub
lods
xor
test
jp
mov
xchg
inc
sbb
daa
mov
jae
sub
stc
rorb
cmp
orb
push
mov
mov
andb
push
adc
clc
scas
xchg
push
leave
bnd
sbb
pop
les
push
imul
or
adc
bound
inc
mov
cmpsl
push
jg
inc
mov
adc
stos
test
insl
rorb
aas
divl
inc
cmpsl
jle
pop
shl
inc
push
jle
jns
je
and
loope
mov
ja
fs
mov
addr16
xchg
call
jecxz
ds
ljmp
fildl
mov
cwtl
sub
test
xchg
sub
and
dec
mov
sub
dec
dec
addl
sbb
jo
mov
jl
fstl
daa
rcrl
das
mov
pop
fimull
movsl
in
nop
packuswb
test
inc
xchg
imul
push
push
roll
aas
inc
dec
xchg
or
pop
or
mov
pusha
adc
cmp
and
mov
add
imul
push
pop
sub
testb
cmp
out
insl
mov
add
ret
xor
cmpsb
mov
push
stos
out
test
cmpsb
jle
mov
leave
xchg
lcall
push
lcall
enter
in
es
ss
sbb
add
push
jns
add
cmp
scas
shlb
int3
xor
test
aas
xlat
mov
mov
inc
jg
test
fidivrs
and
fbld
mov
sbb
les
mov
cltd
fistl
popa
xchg
pop
jg
shr
jbe
nopl
sub
sub
cwtl
mov
mov
jmp
mov
cmp
sub
inc
notb
in
sbb
xor
jl
lcall
mov
clc
subb
loop
lret
or
in
xchg
pop
mov
outsl
xchg
cwtl
mov
ss
jne
sbbb
stos
lods
ljmp
loopne
out
popf
addr16
xchg
jb
mov
and
mov
popa
aam
cwtl
sub
out
sbb
or
addl
sarb
fadds
in
jae
mov
push
xor
sarl
in
push
sbb
shll
mov
repz
sub
ret
add
jecxz
cmp
xchg
dec
adc
or
inc
pop
cmp
sbb
xchg
pop
in
shll
icebp
pop
lahf
stc
add
inc
pop
push
and
xor
and
mov
pop
fiadds
dec
mov
sbb
cmpsl
add
mov
mov
orb
inc
sbb
xlat
mov
mov
shrl
out
jns
adc
popl
shll
sub
roll
mov
ja
xlat
jmp
adc
std
iret
mov
arpl
gs
push
or
mov
ret
leave
mov
sub
jae
rcrl
in
jnp
sbb
mov
pop
cmp
ficoml
inc
sbb
negb
pop
lods
loope
pop
les
rcl
xor
and
jge
mov
clc
jp
testb
jge
dec
push
or
mov
int
mov
pop
imul
sbb
jmp
pusha
ds
lcall
cmp
lret
lods
or
ja
in
sub
rcrl
arpl
pop
fs
or
fldl
and
int3
scas
mov
scas
loopne
stos
mov
dec
stos
push
dec
insl
sbb
sub
js
cltd
je
andb
fidivs
ljmp
xchg
in
cmpsb
add
or
adc
popf
mov
enter
and
call
lret
mov
dec
adc
shlb
push
leave
sahf
rcrl
insl
cmpsb
jae
jno
inc
push
aad
ret
jno
loope
sbb
cmp
test
push
mov
test
jno
addl
sub
comiss
loop
testl
in
fsts
imul
xor
add
pop
divb
add
mov
lret
test
movsl
xchg
push
loop
cld
push
into
pop
aam
or
icebp
adc
inc
push
jne
xlat
test
aam
inc
sti
cmp
into
aam
cli
mov
mov
imul
jg
mov
sahf
adc
ss
int
lcall
mov
or
mov
lret
ret
popa
mov
into
and
sub
mov
xchg
cmc
cs
hlt
add
data16
mov
xor
jns
jmp
adc
cs
cmp
fcomi
out
pop
push
dec
push
sub
cld
push
scas
addr16
mov
sub
stc
pop
mul
adc
je
add
loop
stos
sarl
xchg
je
jno
imul
and
and
nop
ss
jae
pushf
popa
add
mov
lahf
sub
pop
push
jmp
sbb
mov
es
stc
push
clc
int
mov
out
icebp
add
in
fbld
push
int3
jg
jnp
lea
fdivr
xor
mov
bound
loop
push
push
nop
loope
stc
mov
ficoml
cmc
pop
mov
sbb
dec
jmp
mov
movsl
xchg
popf
ja
pop
mov
shrl
add
cli
add
and
inc
mov
lds
add
inc
add
inc
bswap
dec
cmp
jmp
stc
lahf
js
sarb
arpl
mov
dec
repz
jg
int
es
inc
pop
mov
das
adcb
dec
push
mov
mov
mov
imul
xchg
xor
lahf
lods
inc
mulb
jo
dec
in
push
adc
out
dec
sarb
aaa
push
or
xchg
mov
xchg
imul
sub
and
xchg
inc
or
mov
add
std
in
icebp
adc
add
xor
and
pop
push
adc
add
push
jge
cmpsb
pop
adc
dec
std
mov
push
sahf
push
sub
hlt
mov
cwtl
scas
fcoml
jae
push
mov
pop
lea
mov
std
jns
inc
xchg
stos
cmpsb
lret
jno
pop
jp
call
sub
jbe
fistps
sub
or
imul
jns
loop
insl
dec
in
jno
xor
aam
nop
in
add
fmul
push
and
sub
fdivrs
test
add
je
xor
pop
rcrl
add
jmp
or
shl
movsl
xchg
mov
int
ret
sub
fwait
enter
ds
mov
es
push
rorl
push
xor
dec
sbb
jnp
pop
cmp
pop
leave
ja
push
inc
sbb
inc
sub
std
sub
lahf
mov
inc
js
arpl
push
and
inc
sbb
mov
mov
sub
cmpb
imul
je
add
mov
inc
mov
xchg
clc
inc
and
jl
or
call
mov
sbb
push
mov
sti
jne
fs
mov
pusha
jmp
test
mov
push
sti
int
adc
pop
and
adc
orl
pop
lcall
and
andl
mov
mov
xchg
ret
test
xchg
push
aam
inc
rcrl
push
in
mov
mov
mov
pop
stos
aad
cmpsb
pop
sbb
adcl
lods
repnz
pop
cli
mov
sub
cmp
add
aad
mov
daa
lock
cmp
stos
rcrl
cwtl
add
aad
scas
sub
sbb
jmp
scas
cwtl
jno
pop
aas
adc
xlat
das
cmp
in
cmc
and
test
and
rcr
adcl
and
xor
and
push
dec
adcl
add
sbb
inc
pop
cltd
stc
push
ror
jle
pusha
es
movsl
jl
out
cmp
lret
cmp
inc
push
divb
imul
push
shll
fwait
mov
mov
pop
cmp
sbb
cmp
push
lret
arpl
xor
or
dec
call
jns
fmull
cmp
bound
shl
inc
stc
pushf
mov
loopne
cmp
pushf
fistl
jmp
xchg
add
mov
sbb
mov
jmpw
mov
xor
sub
or
mov
shrl
imulb
mov
adc
dec
cmpsb
mov
scas
repnz
mov
filds
and
jge
sbb
xor
in
push
adc
aam
clc
mov
into
aaa
iret
jp
fistl
push
imul
test
shlb
jmp
sahf
mov
mov
test
pushf
dec
jle
fstpt
sub
dec
shlb
add
push
imul
add
jo
out
into
add
add
inc
pop
cwtl
adc
int
mov
cmpsl
jns
ret
aas
fstpl
mov
pop
test
scas
loopne
cmp
shl
outsl
and
jg
test
pusha
cli
test
shlb
xchg
sub
in
lret
mov
test
pop
shlb
sub
cwtl
inc
xchg
adc
adc
fs
jne
fdivrl
out
out
xor
out
out
cmp
inc
in
icebp
ds
lods
fiaddl
cltd
xor
lret
cmpsb
push
test
mov
jle
es
xor
xchg
xor
insl
aad
inc
xor
iret
mov
push
lahf
add
daa
aas
enter
push
jb
lods
imul
fdivs
shll
les
into
sti
add
mov
or
ja
sbb
xor
dec
push
jl
loop
sbb
cld
mov
shl
inc
cld
sub
lea
ficoms
js
call
adc
outsb
outsb
adc
icebp
push
push
mov
movsl
and
test
shll
lret
sub
fistpl
mov
push
lock
je
ss
add
enter
sbb
stos
ja
pop
hlt
imul
jo
or
lret
shl
pusha
add
leave
out
test
rcrb
add
push
shll
pop
adc
scas
outsb
xor
sbb
add
sahf
sub
lret
pop
not
fwait
or
add
xchg
and
lea
loop
mov
push
and
jb
addr16
mov
adc
inc
aad
xchg
fnstsw
sti
stos
adc
mov
push
or
int3
loopne
adc
mov
test
xchg
rorl
or
mov
out
jae
push
outsb
push
fwait
lret
incb
push
aam
dec
adc
jl
lea
movsb
movups
test
in
and
das
sbb
loope
jle
cmp
jmp
mov
mov
sbb
in
dec
adc
ficompl
stos
cli
arpl
lret
into
aad
pop
jecxz
notb
xor
mov
pushf
mov
jle
fsubrl
daa
adc
dec
pusha
je
adc
cltd
jle
mov
sub
jecxz
orl
rcrb
mov
and
mov
pop
iret
dec
addr16
pop
clc
cmp
negl
xchg
arpl
lds
or
aad
add
movsb
mov
jne
fwait
cmp
hlt
jp
mov
dec
jb
jg
jbe
or
addl
je
push
add
insl
dec
xchg
inc
inc
cli
cmp
pop
pop
jp
push
int
leave
jle
ret
ds
or
bnd
nop
dec
lock
fcoml
mov
rcl
mov
mov
adc
wbinvd
xor
or
imul
aas
push
scas
test
sahf
xlat
xor
es
fisttpll
rcrl
mov
cmp
push
cmc
out
mov
mov
ljmp
lds
lods
mov
or
imul
test
clc
add
xor
xchg
sub
push
cmp
cmp
mov
xor
sub
xor
mov
jnp
inc
movsl
lret
ret
jge
fcompl
fwait
mov
adc
sbb
dec
jmp
jecxz
sbb
aad
cmp
imul
add
das
test
mov
xchg
cmpsl
or
mov
push
xor
dec
andl
dec
shlb
rcrl
js
sub
adc
mov
adc
out
loop
dec
loop
xorl
mov
sub
sarl
maxps
loope
cmpl
fwait
adc
fisttpl
loope
call
and
push
ss
inc
sahf
push
cli
scas
notl
cmp
sbb
mov
dec
stos
out
dec
repz
int3
cld
xor
sub
cltd
jns
ljmp
loope
ss
add
pop
decb
movsl
pusha
ljmp
lock
mov
lock
ljmp
jmp
out
popa
pushf
xor
mov
dec
scas
in
jecxz
data16
push
jbe
sub
fadds
push
mov
mov
add
xchg
xlat
mov
leave
mov
or
or
or
xor
sub
insb
xor
insl
dec
sub
int3
icebp
or
fstpt
iret
adc
popf
dec
and
xchg
test
cmp
nop
test
sub
sub
in
repz
xchg
dec
and
xchg
repnz
jo
mov
movsl
or
subb
adc
add
imulb
sbb
or
or
icebp
hlt
lods
cli
sti
je
mov
outsb
mov
out
push
icebp
mov
fcmovb
jno
movsb
cmc
push
fbstp
dec
push
jnp
into
and
subb
push
pop
add
cmp
add
leavew
add
shlb
cmpsl
fisttpl
iret
aam
shlb
aad
cwtl
fwait
add
mov
xchg
lret
loop
ja
fiaddl
inc
test
xor
pop
cmc
inc
mov
cmc
outsb
enter
xor
xchg
inc
enter
or
sbb
data16
es
movsb
cmp
push
pop
dec
in
pusha
push
ret
pop
lret
shl
imul
inc
neg
sub
lret
xor
mov
push
mov
push
loope
test
dec
fsubs
rclb
scas
pop
movsl
xchg
cmp
arpl
sti
or
cld
repz
popa
sbb
jno
lcall
jne
jg
rclb
mov
or
and
es
cmpb
adc
adc
mov
idivl
xor
jmp
xchg
mov
xor
stc
out
shlb
notl
and
adc
cwtl
scas
adc
out
sbbl
sbb
repnz
adc
jo
inc
sub
add
stos
mov
stos
pop
pop
mov
pop
jb
outsl
dec
sub
jmp
inc
pop
cmc
inc
or
push
push
sbb
pushf
daa
push
jo
jl
jg
dec
mov
sbb
outsl
jne
fucom
jmp
jg
in
psrlq
bound
pop
testl
popa
call
pop
ficoms
rcll
or
push
inc
sub
mov
lock
arpl
adc
adc
cmp
xor
mov
push
sbb
cmp
negb
je
shrl
pop
das
jmp
pop
dec
pop
scas
mov
jnp
fsubr
sbb
mov
dec
or
sbb
movsb
movsl
call
jp
mov
push
stos
scas
stos
scas
sub
cltd
movsl
or
mov
jne
loop
loope
ljmp
mov
mov
enter
ret
inc
daa
xor
lds
push
mov
xor
xchg
xchg
pushf
push
adc
lret
repz
pop
push
out
push
xchg
scas
shrb
jne
push
jb
std
outsl
cmp
sti
cmp
mov
add
xlat
ret
data16
fsubp
insb
imul
pop
pop
fisubl
xor
rcr
push
subl
mov
popf
stos
fdivrl
negl
jl
icebp
mov
and
adc
push
test
out
sub
ds
add
sub
insl
je
xchg
test
sarl
mov
imul
add
movsl
mov
sbb
push
sub
sub
xchg
sahf
mov
movsl
lret
call
xorl
neg
xchg
jb
inc
stc
fs
aad
loopne
cwtl
pop
dec
sbb
mov
lods
or
jno
aas
loop
cld
fsincos
stos
push
sub
xchg
repz
aam
sub
ftst
sti
cld
shll
sbbb
xor
xorb
loope
ljmp
or
out
mov
cli
mov
arpl
mov
xchg
add
call
push
mov
test
xchg
mov
les
out
cmp
pop
pop
popf
aaa
lahf
fstps
pop
mov
in
addr16
pushf
ss
nop
adc
cmp
repnz
mov
jb
insb
push
xchg
mov
cmp
movsb
pop
adc
test
idivl
adc
fs
out
mov
xchg
imul
or
into
nop
ja
xchg
loopne
mov
out
adc
push
adc
in
shrb
popa
repz
xor
push
jnp
je
mov
movsl
pop
lods
xor
add
sbb
mov
arpl
hlt
pop
daa
mov
repnz
xchg
xor
mov
test
loop
out
push
mov
pop
inc
pop
adcb
dec
add
mov
push
inc
sub
xor
insb
sbb
xchg
inc
and
repz
std
movsb
dec
pusha
push
jnp
push
and
ror
cmpsb
popf
rclb
push
cmp
stos
incl
mov
in
xchg
push
js
cmpsl
pop
imul
push
ret
mov
ret
into
pop
fcoms
adc
sbb
jge
lret
sbb
adc
testb
scas
sbb
xor
hlt
or
xchg
in
pop
stos
bnd
xchg
sbb
sub
fs
mov
pop
pop
loope
inc
ret
shr
es
push
pop
out
mov
lret
xor
ret
out
in
inc
sbb
mov
out
mov
rclb
addr16
jno
lods
sar
dec
loopne
jmp
lret
jp
jg
lea
loop
lds
push
scas
ret
in
adc
scas
pop
ret
push
adc
out
hlt
aam
arpl
push
pop
pop
cli
popf
test
and
and
fcmovu
popf
inc
jbe
in
pop
mov
daa
aaa
subb
push
and
std
add
mov
icebp
test
xchg
jge
cmp
add
mov
rolb
nop
imul
adc
push
roll
xchg
lods
cmp
mov
sbb
mov
pushf
bound
and
xchg
loop
lret
in
loopne
in
fidivrl
imul
cmp
pop
scas
test
inc
mov
xchg
lret
mov
mov
cmp
push
xor
pop
mov
sub
scas
xor
jge
aas
movsb
call
add
jne
mov
imul
popf
mov
sub
xchg
mov
pop
aaa
fimuls
xchg
leave
popf
add
jg
xchg
pop
imul
rolb
mov
std
ss
cs
xor
xchg
xlat
test
xchg
xchg
jg
sub
pop
daa
pop
enter
mov
jge
in
inc
je
sub
addr16
fidivs
ja
jg
cmpb
jns
xor
xor
adcl
sbb
xchg
jbe
dec
fcmovbe
jns,pn
or
lret
xchg
cmp
mov
outsl
mov
mov
lret
ficomps
inc
insl
adc
jb
rorb
loop
push
bound
sbb
push
cmpsb
xor
push
andb
in
fnsave
or
mov
cmp
inc
sbbb
pop
insl
inc
inc
jns
inc
pop
mov
xor
popf
cmc
sbb
push
jp
fstpt
cltd
outsl
pop
xchg
sub
sbb
addl
or
nop
xchg
test
adc
inc
cs
daa
popf
imul
xchg
cmp
mov
mov
add
mov
add
sti
lods
adc
stc
jl
int
jnp
test
adc
push
adc
jnp
xor
daa
ljmp
insl
mov
adc
dec
testl
jle
mov
cli
fwait
sub
das
cmp
mov
cmp
enter
out
lret
into
mov
fnsave
mov
movsl
notl
pop
jo
divb
lock
fnstsw
jns
sub
add
mov
sbb
xchg
mov
pushf
mov
out
mov
test
mov
pop
ret
fimuls
or
push
fcmovb
and
xchg
cltd
xlat
ret
fisttpl
inc
pusha
sub
out
mov
sbb
sti
out
add
and
fwait
popf
ret
ja
and
loopne
jl
inc
xchg
outsb
inc
lret
or
ja
xchg
inc
push
iret
cmp
ror
insl
jae
bound
ret
add
fld
out
sar
nop
mov
in
outsl
push
ds
imulb
add
lods
aam
je
xchg
daa
sub
stos
add
inc
inc
insl
adcb
call
dec
mov
cmp
shl
cmp
mov
test
dec
sub
push
loope
push
xchg
addb
push
pop
mov
sbb
cmp
push
sbb
nop
xchg
aaa
jecxz
dec
dec
sub
inc
jp
rcrl
movsl
dec
movsb
mov
xchg
dec
dec
jp
insb
jns
fcmovb
pop
push
inc
scas
into
fnstenv
outsl
ja
sbb
mov
mov
add
jnp
and
mov
lock
out
sub
inc
in
add
jbe
or
mov
sbb
lds
sbb
add
test
or
fmulp
insl
dec
sbb
test
dec
js
push
xor
push
mov
sub
jge
pop
xchg
icebp
sbb
std
js
push
mov
sub
mov
sbb
push
jge
ret
rolb
cmp
pop
mov
and
add
mov
xor
jae,pt
addr16
mov
xor
ss
mov
xor
or
lahf
dec
or
aaa
dec
shll
cmpsl
push
js
lods
insb
and
test
sbb
or
sub
mov
decb
ret
adc
add
movsl
inc
test
mov
add
mov
dec
aas
add
into
scas
les
in
outsb
push
stos
mov
jecxz
dec
lcall
jne
adc
out
push
dec
ret
adc
inc
and
sbb
bound
mov
les
cwtl
cmp
fisubrs
movsb
adc
aam
in
inc
mov
lods
lods
mov
mov
andl
ss
add
add
enter
dec
call
fnsave
jg
pop
shll
fildl
mov
push
fstpl
into
xchg
fisttps
aam
stc
or
and
cmp
sbb
pop
cmp
cli
std
lcall
and
mov
push
push
xor
ljmp
or
pop
pop
sbb
scas
lret
jns
xchg
jnp
scas
in
add
pop
and
jecxz
jmp
jbe
and
mov
inc
mov
lods
add
and
scas
cli
adc
inc
xor
movsb
xor
push
mov
pop
sub
fs
xor
xorl
cmpsl
push
loope
mov
and
push
cli
test
xor
adc
push
mov
cmc
adc
cwtl
push
js
cwtl
push
xchg
in
mov
add
ljmp
jp
loop
push
xchg
stos
stos
cmp
xor
xchg
dec
and
imul
push
pop
sti
mov
mov
fisubl
mov
add
xchg
adc
cmpsl
mov
mov
mov
jle
add
jmp
dec
push
enter
stos
clc
iret
fs
push
adc
cltd
and
pop
or
sub
iret
mov
stos
mov
add
adc
inc
jl
xchg
insb
xor
or
mov
mov
push
and
scas
mov
fisttpl
or
mov
hlt
dec
scas
and
fidivrs
lods
cmp
das
mov
stc
cmc
sbbl
jle
ret
lret
stos
test
mov
xchg
cmpsb
lahf
popa
cmp
pop
sbb
es
sbb
add
loope
and
inc
cmp
popl
pop
shrl
aam
xchg
dec
or
es
ss
and
lock
sbb
mov
inc
cwtl
std
outsb
pop
inc
and
mov
jnp
jg
addb
cltd
and
pop
jl
push
sub
xor
xor
cwtl
test
std
hlt
and
inc
cmp
stos
mov
js
mov
fisttps
pusha
sbb
mov
test
inc
mov
insl
cmp
popf
push
lds
sbb
inc
pushf
dec
jne
dec
xor
or
mov
popf
cmp
cmp
in
add
jp
sub
pop
sbb
push
mov
shrb
inc
add
scas
add
pop
mov
sub
xor
xchg
fwait
or
imul
loop
pop
mov
dec
in
mov
das
jbe
mov
xchg
pop
inc
and
cmc
mov
mov
js
sub
xchg
ss
dec
pop
dec
bound
xlat
add
mov
dec
xchg
fdivrl
ds
pop
and
xchg
jg
call
sti
xor
call
jp
in
fs
adc
insb
pop
jmp
cld
pop
add
or
lret
gs
fcoms
daa
loope
orb
sbb
or
fs
push
xlat
sub
pop
and
cltd
scas
sbb
nop
adc
xor
pop
inc
divb
test
fs
sbb
xchg
out
adcl
pop
lock
cmp
in
jbe
xchg
cld
jns
mov
enter
adc
insl
dec
repnz
add
pop
rolb
fwait
je
pop
in
mov
sahf
or
inc
movsb
scas
call
xchg
jne
sti
push
in
outsb
mov
jno
inc
mov
test
daa
adc
dec
mov
push
cmc
nop
jmp
aad
stos
aas
xchg
pop
cli
jecxz
mov
sbb
mov
cld
movsb
std
int
js
dec
enterw
inc
in
or
iret
stos
les
cmp
mov
jmp
pop
fadds
movsl
sbb
add
push
mov
mov
andl
ljmp
js
or
sub
mov
idivb
pop
sete
mov
out
test
enter
xchg
xor
mov
loope
pop
sahf
push
push
push
cli
std
push
or
dec
pop
sti
test
push
fbld
cld
or
inc
not
mov
push
outsb
pushf
sbb
sub
in
icebp
and
pop
ja
push
leave
lds
cltd
test
adc
nop
mov
popa
stos
out
cmp
lock
sbb
sbb
xor
imul
leave
push
imul
push
pop
mov
jle
ds
dec
mov
add
push
lds
test
pop
fildl
mov
inc
xchg
sub
fidivrs
idivl
out
dec
jecxz
inc
dec
aaa
int
sub
push
or
jnp
add
jo
movsb
daa
rcr
add
repnz
jmp
mov
adc
push
or
lret
sbb
adc
xor
xlat
cmp
cmp
leave
xorb
outsb
sbb
and
iret
or
mov
pop
sbb
and
or
mov
test
adc
xchg
xlat
pop
dec
notl
shll
in
add
in
imul
cmc
popf
mov
sbb
fcom
xchg
add
shll
rorl
push
push
ljmp
mov
xchg
cmp
push
rdpmc
movsb
mov
lahf
jno
outsb
aaa
out
addr16
sub
sub
dec
and
sbb
loop
ffreep
je
xor
add
punpckhdq
xchg
add
add
repz
and
das
or
sub
xchg
es
adc
test
stos
and
sub
popa
xor
inc
nop
data16
fwait
inc
cmpsb
insb
je
adc
jnp
push
inc
fmull
dec
je
xor
pop
mov
icebp
insl
movsb
sbb
je
mov
movl
mov
hlt
xor
mov
xor
and
lds
cld
jo
and
cs
movsb
inc
sub
inc
mov
sbb
stos
lahf
cmp
jmp
inc
pop
or
outsl
xor
xchg
add
pop
mov
dec
cmp
xchg
subb
outsl
iret
xor
popa
cmp
pop
stos
pop
add
push
jp
cmc
xchg
jg
or
mov
filds
pusha
sub
lret
fstps
sub
iret
sbb
jecxz
test
push
cmp
iret
xor
xor
mov
xor
int3
cmp
jmp
cmpl
xor
hlt
push
cltd
adc
or
insb
xchg
sub
jnp
push
jge
adcb
mov
or
push
scas
sbb
aad
push
mov
mov
je
hlt
push
int3
jg
inc
cld
push
into
inc
popf
cmp
pusha
cmp
push
insl
jg
movsb
jge
add
fiadds
jmp
outsb
nop
or
dec
inc
lret
dec
xchg
mov
inc
popa
xor
sub
cmpsl
inc
push
jecxz
and
push
jl
icebp
pop
fstps
aas
dec
imul
pop
sbb
pop
and
je
pop
insb
or
lods
sub
enter
push
push
and
js
ljmp
push
test
lock
ja
sub
mov
aad
pop
jns
jmp
adcl
pop
imul
outsb
adc
out
jbe
insb
cmp
xchg
js
and
fldl
xor
lcall
insb
pop
mov
sub
cmp
cwtl
cmp
jno
jne
outsl
or
mov
outsl
fidivs
incl
xor
rcll
out
out
mov
push
mov
jo
mov
mov
ficomps
xor
inc
adc
cmc
roll
je
inc
in
mov
rolb
popf
inc
cmpsb
je
fstp
les
pop
mov
scas
cmp
je
mov
cmp
repz
in
jnp
add
jnp
mov
inc
xor
push
int
in
ret
push
andl
scas
ja
mov
mov
call
stc
test
jecxz
rolb
repnz
and
push
outsl
and
or
nop
push
arpl
cli
data16
lahf
aaa
out
loopne
push
pop
cwtl
repnz
xor
xchg
or
cltd
xor
inc
fwait
and
push
push
cmc
lret
andl
clc
lcall
aam
repnz
repnz
out
sub
mov
js
in
js
in
lock
push
jg
mov
push
mov
cmp
fsubs
mov
and
stos
xchg
pop
in
pop
gs
push
cmpsb
mov
int
jecxz
call
cld
dec
dec
insb
testl
inc
lcall
push
pop
jnp
stc
in
push
mov
add
inc
jp
loope
stos
push
cmc
dec
push
mov
or
add
add
mov
daa
repnz
mov
xor
inc
xlat
das
inc
test
push
sbb
sbb
pop
stos
mov
inc
rolb
mov
repz
sbb
or
adc
jns
pushf
sub
pusha
jb
ss
jbe
shll
sub
and
jo
mov
loop
movsl
aam
lahf
sub
jg
aam
push
mov
jmp
adcl
adc
or
mov
mov
stos
xor
add
int
push
mov
jo
push
imul
adc
sbb
lods
or
arpl
mov
movl
and
mov
sti
add
add
ss
lret
lock
sub
pop
and
inc
loop
lea
imul
test
std
out
ds
test
call
xchg
mov
add
xorl
jmp
int3
ffreep
mov
cmp
inc
pop
out
aaa
popa
mov
sub
jae
gs
orl
sbb
test
push
sti
inc
and
push
adc
mov
adc
pop
jne
es
hlt
mov
or
es
loopne,pt
add
xor
retw
inc
sub
pop
ror
jb
pushf
mov
and
outsl
je
leave
cltd
nop
nop
ds
ret
aad
bound
mov
in
jne
xor
mov
repz
lods
nop
adc
add
xchg
mov
xchg
test
imul
cmp
imul
adc
lock
inc
or
arpl
test
in
call
inc
dec
aaa
dec
jo
test
and
cmp
sbb
sub
sbb
fisttpl
movsb
fs
pop
scas
inc
xchg
test
add
insb
fs
jae
add
outsl
das
cmc
xor
fcmovnu
jl
sub
ret
adc
rcrb
rcl
aad
in
jbe
call
inc
mov
sbb
or
int
push
sub
add
ret
mov
aad
adc
mov
xor
inc
sub
int
cli
jnp,pn
mov
lret
shlb
leave
sub
pop
xor
idiv
das
out
add
mov
stos
mov
adc
je
mov
adc
pop
sbb
cltd
or
and
pop
jecxz
hlt
mov
sti
mov
insl
cli
in
dec
dec
lret
shrb
mov
xchg
add
mov
enter
xor
sub
clc
jns
cld
add
push
shl
mov
mov
or
lock
shr
mov
ljmp
inc
loop
push
std
imul
add
mov
pop
or
add
jp
mov
loopne
xor
adc
mov
cmp
or
out
jae
xchg
popa
or
mov
push
iret
xor
into
jno
push
fcomps
loop
lret
mov
cmp
and
cmc
and
rcl
xor
or
insl
add
outsl
and
push
jl
mov
test
cmp
dec
cmp
enter
movsb
cmc
sbb
jbe
push
leave
inc
scas
add
pop
mov
jo
push
imul
inc
pop
jne
xor
sub
addr16
jp
mov
rcrb
push
out
mov
adc
lahf
pop
push
inc
imulb
call
mov
pop
jbe
addr16
out
stc
testb
push
mov
and
pop
andl
inc
aas
adc
notb
sbb
daa
cmp
fs
ljmp
pop
pusha
enter
popf
mov
jnp
adc
or
ret
les
cwtl
jmp
nop
data16
push
mov
cmp
aas
outsl
add
cmp
xor
outsb
inc
pop
xchg
add
mov
cmpxchg8b
push
daa
stos
xlat
add
push
mov
pop
stc
fiadds
xchg
dec
and
out
sub
jbe
jns
insb
add
push
cmp
imul
or
adc
mov
addb
mov
push
jnp
adc
daa
sbb
sbb
cmpsb
pop
sub
ret
inc
loop
js
mov
push
dec
adc
je
outsb
inc
dec
les
lods
push
sar
push
popa
in
outsl
out
aam
pop
xchg
test
scas
dec
mov
adc
notb
add
mov
adc
scas
mov
cmp
out
cmpsb
leave
stos
test
and
lea
xor
push
mov
pop
scas
dec
fsin
adc
mov
mov
mov
dec
std
and
inc
mov
inc
xor
cwtl
push
test
dec
mov
pop
mov
aas
rorb
xchg
sbb
mov
pop
imulb
cmp
jle
out
or
les
cmpsl
inc
lds
lcall
sbb
push
aad
lret
scas
std
dec
popf
rcr
inc
aaa
add
and
repnz
xor
push
inc
enter
jo
test
pop
data16
out
std
xor
mov
inc
insl
cmp
xor
roll
or
subb
sbb
sbb
xchg
je
or
pop
push
push
jmp
scas
dec
pop
out
cmp
insb
pop
mov
ficoms
inc
fadd
pop
push
movsl
inc
dec
lcall
call
pop
pusha
mov
cmpb
call
sbb
cmp
jge
notl
pop
push
and
arpl
cmp
test
in
push
jns
test
repnz
je
lret
jo
cmp
jbe
jo
add
push
jmp
cmp
and
fildll
dec
std
movsb
or
fnstcw
dec
pop
pop
push
notl
decb
push
sti
sti
test
clc
sub
mov
mov
xor
cwtl
ljmp
out
popa
mov
mov
subb
out
mov
mov
movaps
fistl
adc
add
pop
jo
fcomps
or
into
movsb
fcomi
ds
add
ss
add
out
stos
fcoml
popa
out
pop
jecxz
push
das
mov
into
mov
mov
shrb
xchg
xchg
test
pop
cwtl
cmp
popf
iret
jo
mov
pop
out
inc
jnp
cld
divl
mov
int3
mov
les
inc
test
dec
mov
xchg
mov
sub
les
out
outsb
imul
cld
cmc
pop
xchg
in
adc
stc
sti
lcall
xchg
stos
aaa
out
movsb
insl
xor
sar
adc
inc
mov
notb
mov
cmp
in
mov
pop
into
jmp
mov
es
mov
imul
ss
outsb
push
loope
out
mov
stc
mov
push
or
push
addr16
sbb
pop
mov
mov
push
jns
shrl
cli
mov
add
test
daa
push
sbb
je
loope
mov
ds
call
imul
jne
xchg
adc
sbb
jg
and
mov
and
mov
inc
jne
mov
call
or
into
pop
adc
out
aad
cmp
popf
mov
add
stos
sbb
lea
sahf
addr16
nop
cmp
inc
and
inc
and
mov
int3
cltd
in
sub
es
out
mov
or
lret
jle
xchg
and
das
push
fs
pop
pop
pop
mov
mov
dec
dec
push
jns
jne
repnz
aad
mov
jge
sbb
aam
sub
mov
out
pop
int3
or
out
add
sbb
lods
lock
stos
cmpsb
mov
loopne
dec
insl
clc
sub
sarb
fisubrl
in
or
cmp
fdivrs
out
lret
roll
mov
in
ljmp
rcll
cld
dec
pop
sbb
fwait
leave
jns
and
push
fnstsw
inc
pop
dec
testb
aaa
sub
inc
fucom
lods
cmp
jecxz
jle
push
daa
cmp
dec
pop
movsb
xlat
leave
fwait
dec
jp
arpl
lret
xchg
sub
pop
pop
mov
jno
out
lret
push
push
or
mov
fistps
ljmp
mov
fstp
std
mov
call
fistps
adc
cld
sbb
push
mov
and
fmuls
xor
mov
xchg
imul
hlt
mov
enter
movsl
mov
adc
out
iret
les
sbb
sub
daa
cld
sub
cmp
cmp
mov
add
js
cli
inc
pop
scas
pop
adc
cld
ret
in
data16
xchg
and
loope
popa
mov
cmp
push
cmpsb
adc
push
add
rcll
dec
dec
push
negl
out
sub
adc
mov
cmpsb
jle
mov
orl
mov
push
movsb
mov
mov
int3
sub
imul
push
lea
movsl
into
mov
fstl
imul
push
sar
mov
dec
cs
push
ja
lock
cmp
xchg
xor
ret
mov
nop
ret
mov
sbb
stos
loopne
repz
push
fsub
rcll
push
mov
dec
daa
or
arpl
shll
jnp
ret
jg
mov
and
cmp
jae
repnz
mov
mov
stos
lods
xor
neg
cli
sbb
test
xor
outsl
adc
fdivrl
mov
pop
call
cwtl
push
cmpsb
and
xchg
cmc
dec
mov
pop
ss
ljmp
xor
movsb
psllq
cmp
ljmp
ds
pop
sbb
or
add
bnd
jb
fcoml
cmp
lahf
push
ss
and
subl
xor
stos
fldenv
rol
push
imul
pop
cmp
sub
nop
mov
movsb
lock
mov
pop
mov
scas
insl
loop
les
in
into
aad
fs
fcmovnb
adc
push
rolb
cmpb
imul
rcr
sub
fists
add
push
push
fmull
dec
push
mov
into
adc
imulb
fcmovbe
fsubrl
cmp
pop
repz
cwtl
mov
mov
cmp
xchg
push
cwtl
xchg
jnp
dec
out
adc
mov
add
mov
pop
int
dec
fs
fcmovnb
gs
int
add
pop
in
movsb
ret
mov
jb
out
lret
faddl
pop
fsubs
jg
adc
sbbb
inc
push
ss
add
adc
sub
ret
stos
cmpb
ja
cmc
dec
dec
dec
and
xchg
stc
mov
scas
cmp
jg
dec
neg
loopne
dec
into
pop
mov
lea
sbb
mov
dec
xor
faddl
add
sbb
sub
xchg
idivb
mov
shlb
lret
push
out
stc
sub
dec
daa
adc
inc
movsb
mov
xor
in
ljmp
das
pop
mov
fistpl
jl
mov
arpl
mov
cmp
cli
jle
outsl
dec
movsl
aas
sbb
outsb
inc
test
in
out
popa
pusha
pop
mov
or
xchg
mov
fisubrs
in
cmc
fldenv
sub
aaa
sub
xor
add
xchg
inc
jne
cmp
cmp
int
pop
adc
pop
dec
xchg
lret
loop
adc
or
arpl
sbb
or
js
jmp
flds
pop
ss
cmp
mov
pop
ss
ljmp
gs
adc
mov
mov
push
jl
jo,pn
and
push
xor
unpckhps
popf
lock
sub
int3
cmp
ja
jmp
fbld
dec
filds
repz
inc
jno
mov
xlat
fisttpll
mov
xchg
testl
addb
cmp
mov
ja
jns
mov
mov
sub
jecxz
lahf
arpl
lods
jmp
ss
int3
loope
mov
rcrl
dec
mov
add
push
mov
xchg
cmp
test
aad
push
lods
pop
ds
shl
divps
rorb
jmp
ficomps
jp
cmp
adc
or
jge
test
lods
sub
pop
addr16
xchg
fnstsw
andl
leave
scas
cmp
inc
pop
cmp
xchg
pusha
add
sub
psrld
iret
and
adc
dec
cli
fwait
jg
mov
lret
nop
add
nop
xchg
sub
sub
cmp
pop
lock
dec
or
imul
out
xchg
enter
cltd
and
jg
xor
fs
jmp
movsb
mov
cmp
add
lock
pop
push
jmp
imul
nop
jp
mov
repnz
cmp
test
fildl
adc
aas
scas
clc
pop
and
mov
dec
insb
push
xchg
inc
flds
fwait
pop
out
dec
dec
cmp
outsb
mov
aas
std
fs
xchg
imull
pushf
or
insl
mov
rcr
cmpl
into
xor
or
push
lods
pop
push
dec
jle
inc
sub
cmp
xchg
dec
lret
sub
int
cmp
jne
outsb
and
cmc
js
jg
mov
test
jge
fstl
nop
daa
and
sbb
popl
inc
xor
adc
mov
imul
out
jnp
jge
xchg
gs
je
cmp
and
jmp
arpl
add
push
mov
hlt
fucomp
or
dec
and
adc
cmc
and
subl
xor
inc
ja
loop
mov
nopl
fxch
cmp
pop
cmpb
cmp
bound
bound
dec
shll
push
push
rcrb
push
mov
movsl
cld
adc
mov
push
xchg
mov
in
ret
adc
mov
fbld
fistl
xor
push
mov
or
sbb
mov
mov
cmp
or
xchg
movsl
lret
cld
pop
addr16
insl
xchg
rcr
pusha
sub
add
push
mov
test
lcall
mov
cld
jbe
push
cmp
aas
andl
dec
add
mov
push
shll
dec
imul
fs
jo
adc
rcrb
mov
std
incl
add
pushf
sbb
aaa
xor
fucomi
xor
testb
cs
test
ljmp
mov
inc
sub
sbb
out
cmp
sbbl
clc
int3
sbb
ja
jmp
mov
cltd
push
loope
push
mov
scas
fiaddl
push
mov
lea
shll
sub
sahf
hlt
sbb
push
add
scas
ja
jnp
cltd
int3
jb
mov
jbe
les
jne
push
pop
xlat
push
sub
xor
sbb
icebp
xor
adc
xchg
pusha
enter
push
nop
int3
inc
std
mov
xor
sti
xlat
pop
push
sbb
in
add
dec
test
mov
mov
adc
sbb
mov
push
lds
fsubrl
daa
add
daa
cmp
add
mov
out
push
cmpsl
jle
in
outsb
sarl
arpl
push
mov
dec
test
dec
in
jo
ja
movsb
scas
sub
cltd
in
jecxz
pop
addb
push
aam
cmpsb
sarb
mov
int3
sbb
jb
sti
rorl
scas
test
push
cmp
in
bound
cld
xchg
out
dec
inc
rcl
rcrb
mov
pop
xlat
clc
rorl
andb
push
or
sub
test
adc
push
movsl
ljmp
cs
pop
idivb
arpl
add
shlb
mov
or
loope
adc
xor
insl
dec
sub
and
imul
imul
mov
cmp
jge
fwait
imull
inc
stc
sub
cwtl
clc
out
inc
ret
test
fistps
jb
and
and
jno
icebp
leave
add
mov
mov
in
dec
lea
push
xlat
data16
jo
imul
xor
or
jno
imulb
pop
outsl
in
dec
in
arpl
popa
adc
dec
xchg
ds
das
adc
test
stos
push
scas
and
loope
repz
cmc
sbbb
xchg
fimuls
enter
je
pop
icebp
mov
adc
test
jno
inc
adc
mov
mov
pop
jne
pop
sahf
sub
or
pop
xchg
push
sti
hlt
xchg
stos
lea
add
stos
in
sbb
jmp
jle
xchg
jae
push
clc
xchg
xchg
orl
jb
or
lcall
movsl
paddsw
ja
popa
mov
lds
pop
push
inc
push
xor
sub
enter
sti
fdivl
and
mov
dec
enter
aad
cmpb
adc
and
cmp
and
mov
cltd
xchg
and
xor
inc
or
mov
hlt
cmpsb
pop
or
shll
xchg
add
inc
add
fcmovu
sbb
mov
ret
pop
popa
mov
dec
dec
fsubr
xchg
or
jno
dec
bound
mov
xchg
mov
loop
das
xchg
movsb
out
and
push
adc
push
cmp
add
mov
notb
fwait
and
dec
int3
or
outsb
aam
sbb
xchg
jbe
mov
pop
pushf
dec
popf
push
or
rcrl
lea
and
outsb
std
xor
lahf
scas
and
data16
ss
loope
jbe
scas
pop
adc
xchg
jne
add
dec
pop
mov
add
mov
pop
jp
jnp
push
inc
and
xchg
imul
addr16
mov
push
and
mov
outsl
pop
and
icebp
pop
dec
lea
sub
xor
insl
ror
inc
das
sahf
test
call
hlt
and
cmc
mov
pop
push
outsb
and
scas
or
gs
out
rclb
js
dec
gs
or
add
aad
lock
daa
ds
ja
xor
push
cld
xor
loopne
inc
xchg
andl
sbb
adc
cmpb
sbb
mov
icebp
lods
adc
push
je
mov
mov
bound
test
rorl
or
mov
aaa
sub
sarl
in
sub
or
lahf
das
ja
dec
push
daa
pop
popf
cwtl
fsubrl
sub
icebp
outsl
xchg
adc
int
lea
icebp
lcall
ja
ret
jg
popa
adc
cmp
sbb
mov
sub
es
adc
insl
mov
adc
rorb
jle
mov
cld
mov
ljmp
jo
jl
or
sbb
push
push
lds
pop
mov
andl
outsb
shll
jp
add
insl
enter
push
jo
mov
jecxz
das
pop
xchg
outsl
movsb
mov
dec
mov
ret
data16
mov
orl
cmp
rcrb
orb
cmpsl
jle
jmp
cmp
cmp
mov
stos
push
pushf
push
push
test
mov
jg
jo
mov
cld
outsb
push
dec
jg
cld
lds
mov
jge
js
mov
or
mov
in
add
adc
nop
sti
roll
testb
push
das
xor
repz
mov
aaa
stos
mov
jne
or
cld
scas
daa
push
aad
int
cmp
add
and
incl
scas
adc
xor
ret
adc
add
and
lds
add
inc
sub
cli
das
nop
fbld
lret
push
or
adc
jne
pop
popa
xor
xchg
out
sbb
sbb
pop
jl
nop
int3
movswl
scas
into
in
inc
repz
xor
rol
pop
cltd
stos
insb
roll
mov
push
jo
fs
pop
gs
push
insb
push
dec
mov
xchg
adc
sbb
in
cmp
mov
xor
pop
xor
popa
inc
sub
dec
shl
jnp
push
push
orl
push
xchg
insl
scas
ds
jge
dec
pushf
or
outsb
pop
dec
xor
add
mov
mov
jbe
out
std
mov
jbe
aad
lds
push
dec
jecxz
shrb
xor
pushf
nop
shlb
or
stc
jle
mov
flds
lea
sub
fistpl
fistl
push
bound
call
fcomip
xor
test
dec
inc
pop
jnp
lds
pop
xchg
cmp
ret
faddl
test
mov
fnstsw
mov
push
inc
daa
outsb
mov
sub
stos
icebp
mov
cld
orb
pop
jns
push
loopne
or
adc
mov
in
push
dec
push
out
cmp
inc
xchg
or
adc
lods
pop
imulb
test
add
pop
xchg
mov
popa
and
cltd
or
inc
lret
xor
fildl
sbb
cli
jg
mov
loop
adc
sbb
jg
or
push
mov
fsubrs
andl
aad
jno
out
shl
add
push
cwtl
stc
outsb
mov
mov
iret
dec
rcrb
inc
testl
jbe
fisubl
fs
xchg
mov
mov
xor
add
leave
repnz
inc
je
mov
inc
mov
mov
jno
popl
or
mov
push
rclb
mov
mov
cmpsl
cmp
stos
mov
leave
push
add
lods
mov
imulb
outsl
mov
popa
and
fcoml
adc
sbb
xchg
ret
cmp
adc
out
hlt
xor
xchg
mov
inc
lret
dec
leave
jns
fidivl
lods
fwait
cmp
unpckhps
mov
fs
lret
sbb
arpl
pop
add
jbe
mov
jecxz
lcall
mov
faddl
outsl
mov
frstor
rclb
loope
stc
cmp
cmp
inc
sub
add
pop
outsl
pop
insb
xchg
and
mov
jl
mov
xchg
mov
mov
lcall
pusha
pushf
roll
cmp
loope
insb
xor
sub
add
ljmp
pop
cmp
push
lcall
cmpsl
or
jmp
out
cs
rol
and
jle
insb
scas
add
pop
dec
inc
or
or
subb
cmp
pusha
jo
cs
push
fisubrs
pop
imul
inc
shrb
or
aam
adc
sbb
mov
pop
sub
insl
mov
cli
out
cli
test
dec
insl
fisttps
cmp
roll
call
popa
test
inc
stos
xchg
dec
pop
and
mov
js
dec
icebp
jb
daa
in
xchg
mov
nop
outsb
cmpsl
sub
cmc
out
adc
jb
rol
stos
xchg
mov
les
sahf
mov
mov
mov
inc
or
mov
adc
or
jge
adc
or
psubq
or
sub
mov
cltd
xor
push
cmp
imul
idivb
inc
or
sahf
andb
push
cmp
pop
ss
int3
cmpsl
sbb
xor
stos
mov
loopne
fsts
inc
mov
sbb
iret
js
scas
aam
jo
sub
data16
fadd
mov
test
or
ds
bound
jecxz
dec
das
enter
mov
out
add
jle
ret
adc
lods
loop
sbb
call
xchg
push
sub
sub
test
mov
into
inc
sub
cmp
in
jb
and
ljmp
sbb
or
in
lret
mov
sbb
in
call
movnti
jg
jno
mov
cli
cmpsb
jl
jno
xchg
pop
push
and
mov
sbb
repnz
push
scas
andl
xor
hlt
les
push
inc
mov
jmp
sbb
ss
cltd
adc
loop
loope
sub
hlt
arpl
aad
sbb
adc
fs
push
lret
push
rol
xchg
sahf
dec
mov
xchg
push
lcall
mov
ds
mov
mull
adc
fs
pop
sbb
icebp
mov
dec
add
insb
movsl
sbb
pop
lret
dec
ja
scas
outsl
bound
mov
inc
inc
cli
dec
push
std
addr16
jno
push
loop
arpl
xor
sub
sbb
arpl
pop
xor
mov
subb
sti
jecxz
or
sbb
xchg
lock
test
and
mov
popf
lret
adc
push
mov
mov
dec
mov
inc
cmp
clc
lock
or
cmc
decl
sub
out
sahf
jns
js
ret
dec
out
pop
add
negb
lcall
jl
rolb
fs
loope
xchg
arpl
dec
aaa
repnz
ds
or
sbb
arpl
in
and
or
pop
mov
scas
in
test
mov
and
pop
lods
lahf
test
cmp
sub
sbb
pop
dec
fidivs
xor
outsb
mov
je
insl
adc
lea
in
jns
pusha
and
clc
sub
mov
or
loope
cmpsl
mov
dec
pusha
mov
adc
push
lcall
inc
mov
out
cmc
sbb
mov
test
and
inc
pop
sbb
sbb
xor
insl
popf
test
in
mov
fwait
aaa
push
les
jmp
sub
fisttpll
scas
push
cmp
lods
outsb
jg
mov
and
je
and
push
xchg
in
lahf
jno
sub
inc
loopne
mulb
mov
scas
js
dec
cmc
pop
into
dec
mov
sbb
jnp
pop
sub
inc
push
xchg
fcomps
or
xchg
inc
pop
sub
push
rolb
and
jmp
stos
jle
pop
mov
sub
or
imul
fdivrs
incl
xchg
jno
cmp
popf
scas
stc
xor
pop
adc
pop
pop
adc
push
add
cmpsb
shll
cmpsb
jae
xlat
mov
mov
xor
movsbl
jbe
fisubrl
add
fcom
bnd
add
or
jle
popf
ja
fcmovnu
insb
mov
mov
xor
dec
into
cmp
mov
cltd
and
mov
das
movsl
add
jge
pop
fnstsw
or
lods
jno
into
sub
cli
push
stc
lods
mov
or
enter
fdivs
fwait
sbb
fisubs
mov
repnz
sbb
xor
add
adc
icebp
enter
in
mov
push
jb
and
repnz
dec
out
fnstsw
das
xor
add
mov
dec
and
dec
or
and
xor
movsb
dec
scas
cmp
jge
aaa
js
fdivr
xor
test
mov
xor
and
es
mov
fiaddl
mov
push
push
pop
fnstcw
xchg
mov
xchg
xchg
inc
lods
mov
pop
mulb
gs
xchg
xchg
call
xchg
movsl
addb
inc
inc
repnz
push
cmpl
mov
sub
adc
aam
aaa
leave
dec
cmp
es
mov
sub
pop
sbb
jmp
or
or
xchg
lods
adc
mov
add
mov
xchg
mov
or
push
jp
pushf
jo
pop
incb
filds
out
push
inc
test
mov
or
sub
cmp
or
xor
cmp
popa
pushf
es
inc
mov
insb
jg
add
mov
ds
jle
dec
bound
lcall
in
fsubrp
shll
sbbl
lods
lea
dec
xchg
outsl
and
mov
mov
fistps
push
jle
pop
mov
enter
xchg
or
pop
jb
idivb
pop
dec
cmp
mov
mov
jmp
loopne
cmp
je
popa
jae
addl
inc
pusha
cmp
jle
jl
pop
stos
xchg
cmc
into
repnz
mov
sub
xor
push
in
call
jne
sbb
aam
add
adc
cwtl
or
or
cmp
mov
inc
loop
inc
pop
or
lods
cmp
mov
dec
pop
push
push
jne
xlat
stos
jns
les
pop
outsl
fcmovb
je
rcrb
sbb
movsb
jo
mov
cs
lcall
and
mov
cmp
or
adc
mov
and
xchg
inc
mov
notb
call
push
shll
sarl
pop
movsl
scas
insb
ljmp
dec
xor
push
andb
jno
xor
test
cs
adc
xor
or
jo
shlb
pop
xor
push
loop
mov
cmp
dec
aas
jl
pushf
jge
mov
mov
stc
push
out
mov
iret
cli
ljmp
sub
lret
in
pushf
inc
xchg
inc
cmpsb
shll
orl
mov
daa
dec
outsb
and
mov
daa
push
sub
in
iret
push
enter
xchg
sbb
in
and
sub
sbb
scas
cmp
gs
xor
and
jg
jbe
cmp
in
fcmovnb
fcmovnu
jle
lret
out
call
arpl
push
cmpsl
jmp
or
dec
jg
mov
and
or
fnstcw
xor
pop
xchg
inc
cmpsl
cmp
addb
mov
aad
out
push
out
out
jmp
stos
and
fldenv
movsb
mov
xlat
add
stc
in
and
and
or
sahf
jmp
call
ret
xor
in
pop
add
sti
std
movsl
inc
leave
xor
xchg
jl
pop
mov
xchg
lahf
or
add
jnp
test
mov
fs
cmp
adc
mov
xchg
rorl
mov
lds
fdivrs
clc
mov
cli
xchg
add
cmp
mov
es
scas
xchg
xor
pop
inc
lahf
add
dec
test
mov
add
xor
inc
jae
mov
hlt
ret
jne
xchg
adc
mov
jo
sbb
mov
or
mov
into
pop
popf
scas
cmc
adc
inc
jecxz
cmc
into
dec
jge
int
add
adc
stos
in
jle
inc
clc
mov
shlb
cmpsb
or
popa
cwtl
jae
push
inc
test
int3
mov
dec
sbb
fwait
popf
and
mov
lcall
sahf
aaa
pop
xor
and
mov
arpl
sbb
pushf
fcmovb
mov
int
movsb
mov
pop
add
fsub
repnz
dec
xor
sbb
mov
mov
sbb
and
inc
std
sub
sarl
pop
cmp
aaa
xor
repnz
shl
es
mov
cmp
cwtl
out
xchg
out
loopne
ds
add
dec
adc
ret
adc
cmc
test
sub
push
sub
add
aam
mov
add
sub
fldlg2
inc
xor
mov
ja
mov
adc
xchg
out
push
scas
xlat
adc
mov
jmp
loop
adc
push
adc
pop
or
in
inc
sbb
test
push
repz
lds
pop
and
push
pop
stos
adc
aaa
es
ja
xchg
and
mov
inc
add
dec
push
add
xor
fiaddl
mov
bswap
aad
int
jge
xor
ss
mov
lods
shrb
jmp
movsl
fsub
insl
mov
andb
and
cmp
cs
stc
sahf
pusha
mov
sbb
mov
xchg
in
pop
cltd
jno
adc
insb
and
sub
cmp
xlat
ljmp
sbb
es
mov
add
aas
and
ret
sbb
xlat
out
push
aad
dec
leave
aad
inc
push
pop
je
pop
imul
adc
aas
push
inc
out
lods
xor
out
fs
inc
fidivrl
cmpsl
xor
test
mov
fwait
xchg
mov
lock
out
in
push
outsb
xchg
and
aad
add
push
imul
je
cmp
enter
push
push
pushf
xor
mov
inc
out
mov
xchg
push
jmp
int
inc
push
shr
pop
andl
jg
jg
adc
pop
dec
or
inc
inc
cmp
xor
pop
cltd
sti
mov
mov
fmuls
sub
cmp
xchg
pop
mov
sbb
pop
or
jbe
mov
rcrl
je
rorl
arpl
mov
movsb
out
shll
jns
xchg
insl
xor
sbb
jnp
jns
xchg
inc
in
mul
push
ficomps
loopne
fdivr
xor
cmp
mov
leave
mov
popa
mov
movsl
and
sbb
mov
pop
ret
push
xor
call
fmuls
jle
dec
mov
mov
out
xorb
push
xchg
ja
xchg
or
adc
bound
lret
in
or
push
test
sbb
sti
push
inc
pop
cmc
adc
add
clc
aaa
sub
ss
sbb
xchg
sub
aaa
and
lods
dec
mov
mulb
mov
sbb
cmp
push
xchg
and
sub
xchg
push
adc
xor
fimuls
shld
pop
mov
xchg
cmp
pusha
add
pop
filds
mov
adc
sbb
out
movsb
icebp
test
mov
lcall
movsl
cmp
mov
rolb
mov
mov
push
bnd
xor
repz
pusha
dec
arpl
scas
jecxz
rcrb
and
cmc
mov
daa
mov
push
enter
mov
movl
push
mov
les
lahf
mov
jbe
xor
hlt
push
lods
push
add
lcall
cmc
mov
into
sub
je
lock
xchg
pushf
int3
add
rcrb
push
push
aad
add
push
cmc
lds
jle
or
loopne
test
add
xor
or
dec
fimuls
inc
daa
setb
cmp
lds
cmpsl
push
dec
mov
dec
test
jge
in
fs
aaa
xchg
mov
mov
mov
pop
repnz
push
lea
test
js
xor
pop
pop
push
jno
lds
mov
push
mov
add
pop
adc
sub
aad
push
sbb
push
cmp
mov
sub
stos
add
out
xchg
inc
mov
mov
lds
fistpll
and
jp
dec
push
sbb
mov
mov
nop
and
xor
dec
outsb
in
jge
xchg
ljmp
mov
stos
or
cmpsb
jo
pusha
and
rcll
std
mov
mov
in
xor
jno
int
inc
shr
call
xchg
cmp
aam
xor
pop
adc
jg
fcomi
xchg
adc
fnstsw
mov
mov
adc
mov
add
push
add
incb
scas
mov
or
cmp
pusha
pop
movsb
ret
inc
clc
outsl
sub
hlt
xor
sub
xchg
decb
aaa
in
mov
out
int3
mov
lret
cld
pop
dec
xchg
xchg
jl
sub
ret
int3
jge
xor
dec
xor
leave
fmull
xlat
popf
sbb
sub
out
xor
mov
or
inc
pushf
pop
lock
adc
jecxz
stos
hlt
mov
cmp
cwtl
fisttps
mov
fiaddl
stos
mov
xchg
jg
ret
mov
cmp
push
mov
popl
or
xchg
scas
fistps
and
cs
sbb
rorb
ja
xor
or
jg
ret
xchg
mulb
jo
decl
call
mov
stc
popl
jle
and
insb
arpl
mov
xor
inc
push
xor
add
push
adc
fs
adc
push
xorl
jge
cmp
arpl
lret
repnz
pop
clc
pushf
call
stc
dec
xor
mov
ljmp
mov
sub
repz
or
mov
filds
shlb
movsb
js
lahf
push
sub
push
test
mov
daa
into
pop
iret
ret
hlt
nop
push
sub
jo
jge
es
out
cltd
push
and
adc
fsubs
idivb
inc
xchg
dec
jl
jle
movsb
stos
fs
cmpsl
sbb
rep
filds
xchg
std
in
push
add
jae
add
fnsave
xchg
arpl
xor
arpl
lods
sub
and
fdivrs
movsl
add
imulb
das
lcall
bnd
mov
call
mov
mov
fimull
xchg
xchg
or
inc
enter
adc
jno
sbb
in
sarb
pop
add
jmp
mov
leave
in
adc
cmp
push
or
adc
mov
lock
xchg
movsl
cli
xchg
push
addb
pop
in
and
add
cmp
push
pop
mov
loop
xor
cmp
pop
popf
ficomps
lahf
mov
fstpl
fsubl
and
outsl
adc
out
or
adc
lret
das
add
fstpl
aam
ret
std
das
xchg
cltd
mov
andb
jno
pusha
mov
sbb
sar
jno
xchg
roll
dec
mov
orl
pushf
lcall
dec
mov
rclb
xchg
outsl
push
and
cmp
frstor
cmp
cmp
fdivrp
sbb
cmc
pop
cmpsb
and
add
add
inc
sarb
ret
sub
pusha
adc
dec
sub
pop
jle
out
iret
sbb
inc
aad
setbe
ret
sub
dec
cli
mov
loop
lea
movsl
mov
push
sbb
pop
jbe
mov
lret
mov
outsl
dec
ds
cmpsl
nop
adc
inc
mov
dec
push
out
xchg
mov
mov
hlt
pop
stc
dec
dec
ret
add
cli
pop
je
addr16
mov
out
adc
fmul
stc
enter
mov
addr16
dec
pushf
aaa
test
mov
pop
dec
jne
sti
or
in
jb
pop
in
mov
fadd
sub
scas
sbb
ss
adc
lods
or
mov
inc
sub
je
add
into
out
nop
inc
clc
testb
sbb
sub
popf
orb
loop
insl
jmp
or
jl
mov
pop
leave
outsb
add
icebp
add
fldcw
pop
rcll
inc
jnp
mov
fdivl
dec
jp
sahf
push
mov
add
rclb
mov
dec
add
jnp
pop
pop
mov
sti
push
loope
psraw
inc
test
xchg
mov
dec
jmp
loopne
and
mov
stc
sbb
fcmovbe
push
adc
clc
sarl
mov
sub
jecxz
ds
lea
int
pop
in
inc
lahf
sbb
insb
push
dec
sbb
cmpsb
adc
jnp
add
aas
and
add
popa
xchg
shrl
nop
adc
xchg
adc
fwait
cmp
mov
inc
add
aaa
bound
stc
leave
movsb
int
shlb
or
jg
xor
imul
jg
fs
push
fimull
xchg
cmp
fimull
add
mov
hlt
mov
daa
ftst
lahf
push
and
push
fisubl
mov
xor
les
icebp
stos
mov
loope
mov
cmpsb
hlt
jle
xorb
test
push
outsl
jp
mov
popa
fisubrs
and
jo
insl
inc
jbe
push
push
push
imul
imul
push
icebp
inc
std
inc
outsl
and
sub
xchg
imul
jecxz
arpl
sub
push
ds
in
cmp
mov
iret
in
lock
shl
mov
ja
inc
adc
and
push
push
sti
loope
cmp
rcll
jecxz
push
xchg
jp
lods
sbb
scas
jge
aas
lods
rcrb
aas
and
das
sbb
cld
jns
adc
xchg
xlat
aas
pop
call
xor
bswap
mov
xchg
cmp
xlat
xor
cs
stos
test
mov
ret
loope
xchg
stc
shlb
pop
ss
in
push
mov
out
lret
stc
fldenv
cmpsb
cmp
or
sbb
mov
cmpsb
gs
jmp
xor
in
push
xor
xor
adc
out
nop
mov
mov
mov
jb
repz
sahf
lock
xchg
mov
ficompl
dec
ret
mov
cmp
int3
jbe
out
adc
mov
pushf
sarl
incl
repz
fisttps
enter
dec
and
push
aas
xor
push
xchg
bound
dec
in
sub
test
xor
out
ja
and
push
int3
or
sbb
jmp
push
mov
mov
in
adc
sub
inc
xchg
movsb
sub
idivb
or
dec
xchg
into
jae
sti
dec
int3
push
push
adc
into
ja
fisttps
imul
mov
not
xor
mov
push
test
add
mov
push
dec
add
inc
or
nop
mov
inc
lods
in
shll
adc
aam
xchg
popf
add
int
pop
fs
in
stos
and
out
mov
lock
fcmovnbe
cltd
movsb
lock
pop
stos
cmp
aam
push
sbb
xchg
pop
mov
jecxz
pushl
inc
lea
sbb
sbb
leave
vmovups
shrl
in
incb
mov
and
xlat
loop
ja
movsl
rclb
xor
loop
cmpsl
sbb
push
push
sbb
dec
lock
cltd
mov
xchg
mov
sub
in
mov
sub
add
sahf
jne
jno
inc
aad
add
add
ja
aam
in
push
mov
enter
movsb
and
aas
push
dec
cltd
add
or
sahf
cmpsb
dec
xor
push
pushl
fistl
mov
mov
or
xor
sub
dec
out
js
pop
dec
push
jae
inc
mov
lret
push
ficomps
cs
and
insb
test
mov
cld
int3
jo
inc
fdiv
adc
sbb
dec
mov
int3
pop
mov
out
inc
push
adc
jbe
into
mov
faddp
dec
cld
add
add
rorl
sub
mov
fisttps
lahf
out
mov
arpl
jbe
xor
push
add
cmp
pop
add
aam
or
xchg
insl
push
inc
pop
popf
xchg
xchg
jg
addr16
cmpsb
mov
insb
pop
aam
sarb
inc
xchg
push
cmp
and
cmp
mov
addl
cs
hlt
sahf
push
push
sbb
jmp
leave
cld
cmp
stos
push
sub
data16
pop
mov
or
mov
popa
aam
xchg
pop
adc
ljmp
ret
sbb
fidivrs
imul
leave
inc
mov
ja
adc
add
cwtl
sub
fiadds
jmp
scas
int
test
das
rolb
shr
mov
stos
fwait
int3
ret
cmp
jmp
xchg
xlat
fildll
add
cmp
fwait
dec
imul
rcr
or
adc
out
repnz
xchg
sti
jno
jmp
orb
mov
mov
sbb
pop
cld
xor
mov
push
push
inc
xchg
iret
xchg
or
sahf
lods
ror
hlt
pop
sub
push
push
mov
stc
cltd
add
nop
pop
cmp
test
jo
push
jae
outsb
adc
int3
popa
add
mov
xor
and
into
leave
scas
fildl
lds
mov
sbb
shl
and
push
movsb
hlt
stos
and
and
aam
pop
pop
lahf
dec
mov
jns
add
mov
push
sti
xchg
jl
xor
mov
imul
mov
dec
inc
out
leave
mov
dec
loope
es
ljmp
es
xor
fxch
mov
mov
xchg
das
mov
lret
jmp
shll
add
push
inc
pop
mov
and
rclb
ja
push
jns
ss
test
mov
movlps
repnz
or
mov
cli
xchg
andl
add
subl
dec
ficoml
cld
jne
lock
dec
mov
pop
sahf
sbb
push
pusha
cmp
clc
sub
xchg
xchg
dec
es
fildl
dec
lret
stos
jle
test
cwtl
and
adc
push
fs
inc
scas
lds
jmp
push
stos
pop
ret
adc
popa
lahf
pop
jnp
imul
mov
dec
dec
ret
out
mov
cltd
stos
pop
jb
xchg
inc
stos
into
xor
pop
push
mov
repnz
int3
leave
aas
mov
cwtl
out
xor
xchg
aaa
scas
jl
xchg
mov
or
mov
mov
arpl
mov
shlb
pop
jns
mov
xor
mov
test
in
mov
mov
insl
mov
jae
dec
pop
nop
xor
gs
sub
ja
mov
mov
xchg
int3
in
ss
sub
or
inc
dec
popa
rcll
push
mull
xchg
daa
sbb
aad
fcomp
cld
inc
in
in
and
sti
fsubs
and
cmp
and
xchg
jecxz
shlb
and
add
adc
pop
hlt
div
lds
push
lods
repnz
cwtl
xor
adc
fmuls
in
xor
inc
mov
cmc
push
xor
pop
jno
fwait
mov
xorl
sbb
mov
enter
sub
stc
pop
fsubl
out
lahf
push
inc
ja
arpl
enter
and
fsubs
inc
jmp
in
add
or
jb
ljmp
stos
dec
in
in
aas
add
xlat
add
insb
outsb
repnz
cmp
roll
and
imul
sub
sbb
cmpsb
sbb
andb
cmp
xor
xchg
jbe
xor
sbb
add
pop
xchg
cwtl
dec
js
push
sahf
ja
xor
mov
leave
pop
push
cmpsl
cltd
xor
out
rorb
cwtl
sbb
xchg
sbb
in
mov
push
shrl
xchg
pop
dec
iret
fnstsw
inc
cmp
push
pusha
iret
mov
cs
lods
outsl
sub
notl
call
enter
xchg
push
xchg
ljmp
inc
dec
aas
jns
and
scas
or
push
inc
jg
int3
loopne
cmp
cmpsb
shlb
test
lds
adc
fldt
push
mov
xor
lret
daa
inc
push
inc
mov
ret
aam
dec
inc
xor
push
xlat
loop
cmc
aad
in
div
inc
mov
rcll
aad
sti
aam
add
pop
lea
lahf
aas
mov
aas
lahf
lea
sbb
fs
pusha
gs
popf
decl
test
out
dec
and
sarb
mov
jp
inc
arpl
aad
shlb
cwtl
push
out
bound
adc
or
mov
lret
insb
fucomip
and
adc
dec
pop
mov
cmp
xchg
cmp
imul
jg
jnp
inc
popf
xchg
mov
xor
push
or
sub
hlt
dec
push
shlb
in
aas
push
dec
fldenv
or
mov
mov
add
shl
and
mov
hlt
in
icebp
xchg
push
out
add
mov
jae
sub
jo
scas
mov
or
stos
add
into
push
dec
mov
add
in
mov
fmull
and
addb
jae
xor
pop
mov
sbb
call
cmp
push
push
or
scas
stos
xor
cmpb
shrb
dec
daa
jecxz
cmpsb
shlb
lcall
mov
sub
ret
sbb
push
aad
adc
ret
dec
or
mov
fildll
push
push
movl
cmp
rcrl
les
dec
pop
ja
loop
int3
rclb
icebp
call
leave
xchg
mov
or
push
jle
ret
or
cs
adc
xchg
lods
dec
js
gs
xlat
mov
pop
adc
push
loopne
and
pop
sbb
jp
sbb
sahf
mov
fcmovb
leave
cmp
adc
sub
outsb
hlt
push
mov
popa
jno
push
and
in
in
paddb
iret
ja
sub
jp
fbstp
out
mov
incb
shrl
mov
das
adc
scas
jmp
add
cmc
jl
scas
clc
lods
inc
xor
push
sbb
push
xchg
mov
pop
data16
outsb
pop
repz
rorb
js
out
push
imul
mov
imul
call
cmp
sub
pop
sbb
enter
dec
enter
cmp
cmp
inc
fwait
pusha
mov
divb
add
test
pop
sub
lcall
iret
sub
cmpsl
roll
jno
mov
imul
add
test
je
dec
sub
loop
push
sub
push
sub
leave
test
arpl
imul
lods
xchg
jbe
or
fstpl
or
out
mov
cld
sbb
mov
push
or
cmc
pop
leave
gs
mov
sub
push
insb
jae
mov
movsl
jb
cmc
mov
lret
in
shrl
imull
shlb
andb
cld
cmpsl
jne
ret
adc
cltd
sub
dec
and
dec
mov
fucomi
pop
push
inc
or
pop
xor
imul
outsb
dec
sbb
push
pop
dec
mov
out
icebp
in
and
inc
gs
bound
lods
repz
xor
adc
popa
mov
jp
adc
jecxz
das
or
scas
arpl
and
pop
bound
mov
hlt
push
xchg
or
and
jmp
adcl
pop
fsts
cwtl
and
fucomp
push
in
and
pop
jnp
xchg
jmp
adc
mov
xorl
mov
mov
add
lret
icebp
out
fadds
arpl
sbb
mov
fidivrs
in
cltd
push
lret
stos
ds
mov
add
loope
and
xor
inc
xchg
push
jmp
std
in
add
dec
data16
pushf
pop
push
push
adc
xor
xor
push
mov
popf
incl
xchg
and
inc
xor
cmpsb
push
xchg
mov
cmp
imul
call
and
call
lea
adc
pop
pop
mov
ret
subb
out
xlat
test
and
addr16
stos
jno
ficoms
sbb
push
inc
mov
decb
mov
aaa
out
test
xlat
rdpmc
scas
sbb
arpl
bound
mov
mov
in
aaa
out
add
dec
popl
push
inc
or
repnz
push
iret
jle
jp
jne
das
mov
cmp
dec
adc
rcrl
inc
jmp
rcrb
xchg
push
pop
shl
xchg
dec
ja
mov
mov
aad
test
mov
dec
movsl
push
push
hlt
lock
xchg
jne
jle
xor
jo
cmp
add
lock
jnp
xchg
mov
push
stos
fcomps
mov
test
jnp
push
jecxz
push
mov
fcoms
outsb
loop
xor
and
inc
xor
shrb
sahf
pushf
inc
or
push
and
push
es
push
cmpsb
mov
dec
movsl
cmpsl
xor
jle
mov
xchg
sbb
cmp
mov
iretw
insb
mov
nop
hlt
je
sbb
dec
adc
mov
jno
sub
lds
adc
stos
dec
mov
mov
testb
push
inc
enter
mov
jb
das
lahf
or
push
push
or
scas
or
iret
jmp
or
mov
xor
cli
jl
mov
pop
jle
popa
lock
aam
cmp
leave
xchg
xchg
or
jg
jno
xor
fmulp
xor
aad
dec
lahf
loopne
jl
mov
clc
shrl
mov
jae
shl
fwait
push
cmp
adc
adc
xor
jp
in
push
out
xor
es
aas
xor
cmp
push
mov
pop
mov
movsl
xlat
cmc
push
xor
pop
bnd
in
pop
cmp
das
lods
cld
leave
cltd
xchg
adc
test
out
and
adc
push
xor
mov
push
repnz
stos
fabs
mov
or
clc
and
push
inc
sub
dec
mov
push
sub
pop
adc
mov
inc
or
stos
jno
cmp
inc
add
imul
xorl
mull
push
ret
fstpl
pop
sub
pop
mov
dec
jo
xor
inc
xchg
ds
outsb
cmp
dec
push
xchg
hlt
jp
test
sub
mov
xchg
jns
shrl
mov
push
inc
or
inc
rcr
in
push
fwait
cs
mov
adc
jns
sub
mov
push
dec
sbb
jbe
jnp
out
sti
jmp
rorl
jne
mov
pusha
popf
shlb
je
mov
mov
pop
je
loopne
rorl
and
pop
xor
idivl
sbb
pop
mov
dec
xor
lret
dec
data16
loope
cmp
enter
ret
in
mov
aam
push
andb
ss
lods
push
mov
xchg
adc
cmpsb
mov
inc
fwait
cli
pop
cmp
mov
gs
sti
jb
cs
sbb
mov
imul
cmp
cmc
cmp
jb
arpl
cmp
loopne
popa
or
sub
push
sbb
inc
mov
add
ja
pop
jne
insb
mov
call
jecxz
es
cs
cmp
decl
rcl
mov
mov
repz
pop
lods
jns
js
repz
in
fs
sbb
fnstsw
movsl
inc
mov
or
call
jb
inc
mov
mov
loope
cli
stos
mov
add
push
insb
or
test
mov
fcoml
cld
mov
mov
loope
mov
jns
movsb
ljmp
icebp
mov
out
addr16
mov
jo
or
daa
loop
mov
pushf
dec
pop
jl,pt
push
cld
dec
mov
cltd
sti
push
jo
add
jbe
fwait
dec
mov
mov
xor
adc
jo
arpl
or
ja
adc
mov
push
dec
outsb
ss
cmp
jbe
adc
cmp
cli
sbb
pop
daa
bound
imul
movsl
xor
lcall
imul
sbb
cmp
test
mov
psrlq
lahf
adc
repnz
lea
lock
cmpb
cmp
and
es
xor
aas
add
lock
push
and
popf
inc
pop
xor
push
cmp
xchg
xchg
mov
and
ja
in
outsb
mov
jl
sub
cmp
push
xchg
repnz
jecxz
js
lods
das
loop
mov
mov
xor
in
pop
inc
test
push
cmpsl
sub
lret
and
cwtl
imull
stc
ret
and
jb
cs
loop
and
xchg
cmp
lock
xlat
loope
into
inc
push
xchg
lock
sub
mov
movsl
subl
call
pop
or
xchg
iret
push
out
ror
mov
push
sub
pop
fucom
nop
ds
jp
jecxz
cmp
aad
push
or
nop
movsl
sub
sbb
rcrl
popf
hlt
nop
popa
cmp
sbb
aam
lock
pusha
out
inc
aaa
hlt
out
add
clc
mov
jmp
jno
jae
or
push
xchg
push
movb
sbb
aas
jp
out
jo
and
sahf
mov
mov
sub
cld
dec
jnp
lods
lods
adc
outsb
lods
orb
out
sbb
cmpb
xor
mov
xor
pop
lcall
pop
and
inc
mov
inc
cld
enter
xchg
push
xchg
push
xchg
dec
pop
dec
sub
and
or
repz
add
cmp
lret
mov
scas
jge
into
int
mov
lea
pop
lock
pop
adc
lcall
sbbl
and
cmp
out
dec
ds
into
xchg
popa
or
xchg
mov
sbb
adc
in
sub
mov
in
or
movsb
mov
push
insl
add
popf
repnz
js
loope
push
lds
xchg
or
mov
cmpsl
rclb
add
aam
mov
negb
mov
int3
sahf
ss
mov
jb
and
mov
jne
and
mov
lahf
mov
sarb
dec
jbe
sub
fdivrl
pop
ffreep
cmp
testl
dec
into
mov
lock
adc
cmp
ds
push
inc
arpl
mov
adc
imul
sbb
fidivs
das
mov
jmp
or
inc
insb
push
mov
ficoms
ret
mov
pushf
mov
xchg
movsb
out
mov
pop
pop
xor
les
push
fnstsw
out
inc
dec
inc
fdivs
jns
nop
lods
bnd
adc
cld
or
sbb
and
std
jnp
or
in
fsts
cmpsb
push
repnz
cmpsl
add
scas
cmc
cmpsl
ja
pop
dec
lock
xor
or
sub
out
cmpsb
popf
call
gs
std
mov
test
xchg
mov
mov
pop
xchg
leave
leave
ja
sbb
ret
or
sbb
and
shr
andb
aas
repnz
arpl
xchg
sub
xor
in
push
insb
mov
test
int
dec
cmp
fistps
jnp
add
mov
ror
and
inc
xor
outsl
shrl
xor
add
outsl
mov
cmpsl
cli
adcl
inc
fwait
fs
jnp
mov
adc
ja
xchg
cmp
cltd
inc
and
cmc
sbb
sub
fisubl
iret
loope
add
mov
rcrl
rsqrtps
incl
daa
xchg
movsb
pcmpeqw
jg
imul
xor
push
vpmacssww
call
hlt
outsb
sbb
mov
sub
stc
jg
cmp
cmp
movsb
popf
pop
add
nop
loope
mov
or
lahf
xchg
clc
cmp
insl
push
jb
scas
inc
mov
das
divl
clc
inc
sarb
pop
stos
dec
mov
or
je
push
ds
aaa
mov
adc
sbb
sub
jno
es
jmp
cmpsb
scas
cld
or
stos
cltd
jecxz
scas
pop
or
je
inc
call
int3
faddp
shrl
xor
arpl
iret
sub
enter
scas
sarb
lods
xor
das
leave
leave
sub
vshufps
loop
mov
les
test
mov
pop
or
jne
sti
jbe
popa
mov
inc
lret
cmp
addr16
test
call
sbb
inc
sub
out
out
adc
and
lea
aad
push
jecxz
jp
lods
out
dec
xor
mov
cmp
popaw
pusha
in
sahf
rorl
xor
fsubs
scas
jmp
or
sbb
push
cltd
pop
loop
popa
mov
sub
pushf
inc
push
popf
ret
add
add
push
fwait
aad
xor
lock
adc
xor
add
sbb
inc
inc
mov
mov
jbe
stc
jbe
scas
push
mov
es
in
mov
fcmovbe
mov
rcll
mov
cmp
imul
push
cs
stos
pop
mov
push
or
jae
cld
push
cmpl
ss
or
pop
mov
fildl
stos
popa
xchg
xchg
rol
das
add
xor
dec
mov
fistps
mov
and
xchg
pop
xorl
int3
and
or
dec
sbb
test
cltd
sbb
jnp
adc
ss
and
fstpt
lds
shlb
lcall
fisubrs
fdivs
popf
pop
mov
pop
pop
mov
arpl
push
and
pop
ret
mov
aad
xor
jecxz
in
cmpsl
adc
mov
mov
xchg
add
sbb
js
sub
cmp
sub
push
loope
jne
leave
fidivl
stc
xchg
ret
xchg
aaa
jo
inc
ja
lods
cli
pop
mov
or
outsl
sub
mov
mov
out
push
fcom
inc
lds
mov
push
mov
dec
fnstsw
adc
jnp
adc
jg
jl
rcrb
popf
test
repz
jle
movb
int
stos
inc
enter
movsb
popf
or
push
ret
test
loopne
in
js
outsb
inc
jno
cltd
sbb
jb
orl
adc
jl
jnp
inc
jnp
in
mov
push
dec
sbb
jb
es
les
mov
negl
cmp
repz
cltd
jp
xchg
pop
lds
push
enter
sub
lret
jnp
test
mov
mov
data16
fdiv
cmp
shrl
pop
andb
test
or
sub
xor
rclb
ss
mov
popf
ljmp
cmpsl
dec
or
push
ret
and
jmp
xlat
addl
hlt
aas
and
jl
in
test
addr16
notb
aad
mov
inc
ret
inc
into
call
cld
cwtl
mov
adc
sbbl
xor
sub
cmp
sub
dec
iret
lcall
sbb
push
mov
mov
pop
ret
dec
dec
rorl
xchg
cmpb
inc
jle
xchg
insl
inc
cmp
sub
loopne
sbb
int
es
xchg
mov
add
mov
mov
sahf
pop
cmp
pop
outsb
test
inc
lock
jecxz
xor
insl
mov
div
sbbb
xchg
push
imul
cli
jge
dec
inc
leave
movnti
pop
dec
mov
mull
mov
notl
lahf
cs
ret
xor
popf
fbld
mov
inc
sbb
dec
push
mov
adc
sub
xchg
mov
dec
bound
enter
inc
imul
pop
cmp
pop
jg
test
xchg
ret
xor
aad
aam
pop
fdivrs
call
xor
mov
pusha
mov
push
xor
mov
xor
cmpsb
out
aas
mov
mov
or
loopne
or
sub
push
movsl
jecxz
dec
je
adc
pop
sahf
lea
sbb
push
mov
lods
jnp
stc
jl
imul
xchg
hlt
xchg
dec
mov
push
pushf
imul
pop
ljmp
jl
loope
sub
push
outsb
not
mov
sahf
out
pop
xchg
jne
xor
cmp
xor
adc
fisttpll
rclb
and
stos
frstor
jge
push
fdivs
lcall
out
or
pop
dec
shrb
inc
addr16
adc
sub
lds
push
adc
bnd
test
enter
out
cmp
pop
call
mov
mov
es
or
jge
and
add
inc
testb
xor
aas
ljmp
scas
mov
fwait
pop
dec
adc
sahf
jl
imul
fwait
pop
mov
scas
mov
or
daa
jns
insl
loope
mov
clc
outsb
pop
push
das
dec
xor
mov
imulb
insl
inc
jnp
lds
jmp
pop
int
dec
sub
aam
loope
lcall
adc
fucom
mov
adc
push
and
adc
ljmp
cmp
jb
inc
adc
lret
dec
jbe
cld
rolb
lods
mov
jnp
push
ljmp
jge
cmp
push
sbbb
fbld
lret
dec
push
pop
lods
push
mov
arpl
cmp
add
adc
push
fcmovnu
cmp
sar
sub
ss
cwtl
sub
scas
das
jb
sub
shrb
push
pusha
and
in
or
sahf
jg
mov
mov
decl
jo
and
outsb
inc
pop
and
mov
sub
push
int
inc
xchg
cmp
sbb
subb
push
and
sbb
outsb
mov
imul
pusha
rcr
ret
int3
sbb
mov
dec
xor
jno
mov
popa
xchg
rcl
int3
or
stc
test
add
mov
xlat
inc
jbe
loope
inc
int3
sti
xchg
fs
jl
fdivr
cmpsl
test
cmp
dec
sub
xor
push
lds
dec
xchg
sbb
loop
inc
jmp
test
xchg
xor
or
arpl
into
dec
cltd
loop
ss
add
sahf
cmp
call
push
jne
sub
xchg
push
js
mov
jbe
lds
aad
es
mov
cltd
push
lret
cmp
push
cmp
iret
test
push
push
psubsw
mov
sbb
fwait
cmp
sti
iret
data16
mov
icebp
jl
fmul
adc
adc
inc
mov
push
imul
cli
dec
lock
sub
xlat
xchg
cmp
inc
iret
shl
pop
imul
jp
test
lcall
push
xor
das
and
pop
dec
and
subb
mov
pop
add
test
ftst
stc
sahf
cmp
and
subl
mov
mov
int3
fwait
sti
in
sub
push
pop
loopne
sbb
jl
scas
out
mov
lret
dec
shrb
aam
mov
into
sub
push
aad
xor
mov
jns
inc
push
push
in
mov
dec
pushf
xor
je
push
in
rolb
sbb
mov
jns
dec
lret
lods
les
xchg
lea
lahf
filds
jle
adc
test
arpl
xor
mov
ljmp
je
inc
xchg
dec
ds
mov
cli
addr16
cmp
or
jl
push
stc
push
mov
and
fcomps
mov
xor
lret
xor
lcall
xchg
and
loopne
out
cwtl
ds
enter
cmpsl
add
lahf
inc
mov
fisubl
mov
clc
in
push
jg
mov
rcl
add
insb
mov
out
push
shrb
stos
adc
push
btc
pop
mov
jnp,pn
stos
aaa
mov
inc
rolb
cmp
jne
ja
xchg
js
cmpsl
sarb
sbb
in
and
test
xchg
pop
out
inc
xchg
enter
das
pusha
mov
mov
mov
imul
xchg
xor
mov
int3
jne
mov
fsubrl
and
data16
cld
inc
xor
mov
jle
lods
pop
sbb
or
loope
movsb
iret
test
mov
sbbb
jne
xchg
xor
adc
testb
ds
push
psrlw
mov
cwtl
inc
data16
lcall
into
cmpsl
lcall
lret
das
pusha
dec
inc
mov
sub
sbb
stos
add
inc
sub
lret
mov
push
ret
sbb
lahf
repz
adc
cmc
inc
leave
or
add
add
aaa
xlat
pop
in
sbb
ret
ds
sub
ja
and
cld
inc
push
lret
sbb
mov
xchg
adc
mov
add
daa
scas
aad
ljmp
sbb
leave
push
fisubl
push
add
xchg
push
push
push
xchg
and
mov
push
mov
add
into
or
in
nop
xchg
sbbb
fwait
mov
fdivrp
mov
inc
inc
mov
mov
cs
xor
mov
movsb
sub
push
mov
pusha
cmp
lock
pushl
sbb
pop
lds
stc
lock
in
sub
inc
inc
mov
lahf
lcall
pop
and
aam
loopne
enter
rorl
jp
repnz
xchg
and
addr16
jecxz
mov
lods
test
cwtl
pusha
jecxz
pop
pop
add
fucomip
inc
lahf
inc
xchg
rolb
sub
sbb
cwtl
arpl
sahf
jne
xchg
xchg
adc
cmpsb
adc
cmp
and
dec
jl
inc
idivb
ror
imull
mov
or
in
scas
xchg
cmp
adcl
imul
test
gs
insl
jo
mov
jmp
xor
mov
ss
xlat
mov
sbb
or
dec
jmp
filds
sbb
adc
xor
xchg
fs
cmpsb
mov
or
mov
and
mov
movntq
out
pop
jo
outsl
dec
add
aaa
or
and
sub
repz
mov
pop
sbb
push
lods
lahf
fldl
pop
lret
jb
imul
sbb
xor
mov
dec
enter
sbb
jg
pop
add
je
pop
add
jne
rcll
jae
aam
push
enter
fs
sbb
in
stos
xchg
aam
scas
adc
mov
and
mov
jno
movsb
in
xor
je
sarl
mov
jge
scas
push
add
das
add
dec
int3
and
push
pushf
insb
dec
xchg
adc
in
addr16
and
jg
sarl
pop
inc
movsb
jle
pop
or
pop
les
push
dec
lea
stc
test
mov
mov
dec
lods
mov
repnz
das
test
mov
or
dec
adc
push
fimull
push
shrl
push
sub
push
xor
cld
cmpsb
andb
sbb
pop
xchg
sbb
daa
adc
cmpsb
into
push
sub
cmp
and
mov
lret
push
call
pushf
mov
fmuls
mov
mov
out
mov
xor
fnsave
rolb
xchg
inc
test
adc
dec
pop
out
push
arpl
aad
mov
xchg
out
gs
loope
mov
inc
push
sbb
xchg
clc
out
pop
and
lods
push
or
sti
aam
gs
out
jle
and
jbe
push
or
mov
imul
mov
sub
fwait
sbb
lahf
in
lods
inc
sbb
xor
in
loope
frstor
dec
mov
pop
xor
jmp
xor
out
xchg
sbb
sub
out
mov
dec
test
add
push
pop
mov
sbb
fwait
inc
fdiv
xchg
aaa
mov
push
cmpsl
cmpsb
in
pop
xor
fdivrs
jg
aam
ja
push
sub
xorl
arpl
mov
sbb
xchg
cmpsl
jge
and
mov
addb
sbb
dec
test
mov
outsb
push
sub
mov
hlt
pushw
jnp
fstpt
cs
mov
icebp
dec
ret
shrb
inc
stos
sar
pop
insl
repnz
aam
fcomp
cmpsl
rolb
sub
stos
push
negl
sbb
cmp
mov
les
fwait
pop
sub
inc
ljmp
and
lds
inc
subb
scas
mov
cltd
mov
xlat
aam
sub
sahf
adc
jg
in
xor
push
mov
pop
movsl
mov
sbb
and
and
cwtl
xor
ret
push
lret
jp
rcll
sub
jns
sbb
lods
jne
mov
push
add
cmp
out
xchg
fwait
pusha
sub
jge
test
cmp
cltd
cmp
sahf
jg
mov
mov
or
cmp
ret
xchg
rorl
dec
inc
push
mov
add
daa
arpl
xchg
fldcw
pusha
fs
sub
test
and
imulb
imul
inc
mov
ret
push
into
cli
mov
fldcw
addr16
and
cmc
jl
andl
jl
fistl
dec
and
push
xorb
sub
lods
pop
add
dec
xchg
and
cmp
loop
push
es
mov
dec
and
pushf
stc
or
ja
loop
add
mov
adc
sbb
jg
add
repnz
dec
cmp
xor
adc
das
sbb
push
dec
arpl
pop
pusha
mov
aaa
ja
push
imul
shll
sbb
ss
mov
inc
jae
mov
insb
xlat
mov
jbe
pop
mov
adc
loopne
pop
xlat
cmc
repnz
out
pop
push
mov
xchg
sbb
cmpsb
cs
sub
imul
sub
xchg
or
clc
push
inc
mov
push
push
pusha
pop
out
push
js
dec
mov
cmpsb
mov
pop
inc
or
mov
and
sub
sbb
inc
mov
dec
cli
lods
xlat
lahf
xor
fdivs
icebp
add
inc
icebp
addr16
pop
add
mov
push
dec
inc
cltd
xchg
cmp
je
sub
das
cli
xchg
subb
inc
cmc
dec
lock
mov
mov
fs
pop
xor
jbe
in
adc
push
mov
jo
sahf
inc
rcl
flds
lret
dec
xchg
mov
jo
into
adc
sti
push
imul
xlat
push
pushf
loopne
adc
loopne
xchg
ss
pop
pop
xchg
mov
lahf
bound
lcall
in
xor
cmc
jmp
xchg
xchg
sub
cmpsb
push
xorb
add
inc
out
mov
sti
xchg
jo
mov
push
xlat
clc
enter
in
xor
cltd
daa
pop
or
bound
incl
cmc
add
push
out
jge
insb
test
fldcw
test
enter
push
xchg
dec
scas
mov
cmpsl
pop
sti
hlt
mov
fcomps
mov
int3
inc
rolb
add
sub
mov
add
loopne
aam
cmpsb
xchg
jge
mov
in
idivb
pusha
out
cmp
arpl
xor
mov
andl
xor
add
and
out
mov
aad
aas
scas
ljmp
dec
out
and
inc
push
xor
xchg
call
xor
mov
xor
into
out
inc
sub
dec
add
orl
inc
ds
jg
jb
insl
aas
sub
cli
pop
add
fsubrl
bound
xor
addb
imul
xchg
add
add
icebp
int3
dec
movsl
add
int3
rclb
jo
sub
mov
mov
fsubl
sbb
inc
push
push
mov
cmp
rcll
ret
dec
jnp
inc
pop
mov
aad
mov
mov
cmp
cmp
ljmp
jmp
push
js
js
xor
xor
jle
push
sub
dec
mov
sahf
test
and
push
in
jne
cld
test
stos
mov
mov
imul
in
pop
dec
push
scas
test
icebp
in
rcl
mov
insl
test
lahf
mov
bound
push
repz
cli
sarl
aam
cld
imul
test
stos
dec
cltd
xchg
mov
or
movsb
push
cld
xor
jbe
xchg
sbb
add
pop
lock
movsl
push
and
cltd
cmp
pop
hlt
jne
pop
insl
mov
stos
lahf
add
pushl
cmpsl
jecxz
das
jp
mov
and
hlt
lret
hlt
push
add
push
stos
inc
imul
dec
and
xor
aam
xor
sbb
ja
iret
jns
ljmp
aam
into
fldl
mov
xlat
jae
xchg
fwait
popf
sbb
icebp
sbb
ss
test
divb
inc
push
mov
pusha
adc
arpl
xor
call
jg
ljmp
mov
shll
xchg
add
mov
jmp
jnp
outsb
adc
pop
lock
push
ret
pusha
aad
jl
jno
das
jecxz
std
push
xrelease
call
std
aas
fwait
cmc
addl
pop
mov
push
outsl
push
addr16
stos
gs
sbb
cmp
mov
enter
out
mov
add
or
adc
ljmp
push
sbb
sahf
pop
js
add
shlb
jp
mov
cmp
adc
adc
bound
ljmp
lods
xchg
adc
mov
jbe
in
fiadds
jns
lret
cli
outsl
popa
sub
sbb
pop
gs
dec
les
xchg
ljmp
sbb
dec
sbb
ret
add
jbe
lret
inc
sbb
fldlg2
or
jbe
rolb
in
pop
addr16
jnp,pn
sahf
and
xchg
test
push
mov
xor
popa
jl
ss
std
sub
jmp
mov
xor
rorb
jp
adc
inc
ds
jl
lret
pop
push
hlt
dec
xchg
pop
add
and
jge
shlb
or
out
fstps
mov
xor
cmp
push
push
sbb
bound
scas
dec
faddl
and
dec
mov
enter
pusha
xor
mov
dec
dec
or
mov
and
xor
nop
or
cmpsb
cmc
jle
sub
mov
and
ja
out
aad
sahf
xor
mov
and
push
shr
mov
jmp
test
sbb
jae
hlt
mov
pop
daa
and
mov
movsb
and
stc
mov
push
test
mov
jo
xchg
inc
push
jb
mov
mov
imul
pop
mov
add
fsts
xchg
dec
xchg
inc
pusha
push
fdivrs
xchg
push
and
stc
jmp
lcall
js
push
cmp
inc
inc
int3
popa
inc
bound
cmp
jb
inc
bt
and
aad
addr16
mov
loope
mov
lahf
inc
rclb
adcl
lods
inc
push
add
and
pushf
or
ljmp
outsb
dec
and
iret
mov
int
sarl
inc
mov
lock
out
pushf
mov
ljmp
or
cmp
aad
fldenv
imul
mov
es
pushf
test
loope
or
ret
mov
int
inc
xchg
jp
insb
subb
inc
add
lods
cmp
scas
lock
mov
push
sbb
fildll
jns
cmpsb
jle
dec
sbb
inc
xchg
adc
aad
repnz
mov
aad
pop
xchg
lret
sbb
cli
inc
adcb
mov
shlb
adc
mov
pusha
mov
fldcw
icebp
xchg
push
imul
pop
aas
mov
xchg
lock
xor
pop
mov
or
cwtl
jae
sti
sub
adc
cmp
or
lret
add
lods
or
aaa
xor
add
inc
bound
inc
stc
repnz
sbb
mov
and
xchg
sbb
adcb
leave
bound
test
xchg
loop
je
xchg
in
div
dec
inc
pop
enter
addr16
imul
xchg
imulb
sbb
pop
bnd
cmp
cmc
and
sbb
fimull
imul
pop
xchg
mov
sar
add
out
movsl
das
aad
jle
sbb
pop
adc
cmp
inc
cmpsl
in
cltd
sbb
add
in
mov
fadd
xchg
inc
xor
lea
sahf
stos
jle
dec
jo
cmpsb
ds
add
xor
sbb
mov
cld
xchg
dec
adc
add
mov
push
stos
jno
jns
nop
jno
inc
cmp
movsb
pop
sbb
or
dec
daa
fisttpl
pop
ficoml
sub
add
imul
enter
pusha
adc
jmp
cmpsl
scas
pop
and
das
cwtl
mov
sub
cmp
jns
and
lock
sbb
fdiv
mov
xorb
cmp
push
es
or
xchg
je
imul
into
jnp
adc
dec
dec
jb
imul
je
in
ret
stos
out
inc
popa
jne
icebp
ss
lcall
dec
lahf
call
mov
pop
dec
sbb
data16
fwait
insb
pop
inc
aas
imul
push
mov
mov
dec
mov
ja
pop
push
mov
enter
test
cld
jecxz
js
fdivp
lahf
cli
test
ljmp
leave
cltd
flds
and
sbb
ljmp
out
mov
xchg
mov
and
mov
lock
fscale
xor
fs
fisttpll
ja
sub
aaa
xchg
pop
inc
int
std
data16
ficoms
mov
mov
mov
es
aas
out
stc
repnz
mov
sub
xchg
mov
stos
lahf
iret
sbb
std
cmp
inc
sub
repz
out
add
lea
inc
bound
mov
insl
cmp
mov
jo
vpmadcswd
cmpb
mov
xchg
icebp
pop
rorb
mov
in
cmp
sti
lret
jg
lods
mov
pop
dec
push
test
sub
test
lds
insl
push
shll
in
lods
and
bound
cli
orb
fsubrp
xor
cmp
push
sbb
int3
pop
add
stc
or
jp
adc
popa
jbe
or
adc
mov
lret
add
out
add
aad
in
test
lcall
jo
sbb
and
or
push
or
adc
lds
movsl
sub
inc
sbb
cs
push
inc
pop
mov
in
in
pop
mov
dec
subl
mov
int3
sub
jno
xchg
pop
xchg
sbb
ficoms
in
jnp
lahf
jbe
int
pop
cmp
repz
imul
nopl
les
add
je
xchg
push
mov
int3
sub
out
mov
jb
jmp
loopne
xchg
lods
jnp
fidivl
jge
je
mov
ret
add
shll
pop
aaa
cmc
or
pop
cmp
nop
adc
movl
int3
lea
stos
xor
dec
inc
adc
adc
nop
lahf
pushf
cwtl
sbb
inc
sbb
xor
xor
push
jb
iret
and
ror
jne
jecxz
sub
xlat
sahf
loope
pop
lcall
push
or
addr16
and
stos
popa
jb
call
loop
shll
out
xchg
iret
pop
mov
stc
push
shrb
push
xor
push
cmp
insl
jl
nop
repz
mov
or
lea
dec
or
fildll
mov
cltd
das
cmp
and
cltd
add
jp
jnp
pop
add
jbe
nop
out
push
add
div
cmp
mov
stos
sub
fs
dec
mov
pop
punpckhdq
inc
pop
mov
imul
and
test
push
rolb
jg
xor
and
shrl
and
in
sub
addr16
or
dec
scas
aad
dec
jp
pop
sbb
mov
or
or
inc
scas
fincstp
sbb
push
lret
scas
fmuls
mov
lret
or
and
xor
testl
mov
mov
aaa
sti
sbb
fdivrs
pop
incb
xchg
divl
mov
lcall
inc
mov
rclb
stos
pushf
adc
call
lret
jno
loopne
mov
pop
mov
pop
dec
or
sbb
xor
xchg
shl
fimuls
pop
imul
pop
mov
negl
add
push
sbb
add
push
or
test
mov
imul
pop
cmc
icebp
pushf
jb
add
jl
fstl
inc
hlt
jo
addl
sub
inc
jnp
dec
xor
inc
push
je
pop
pop
fidivl
sub
push
xchg
mov
mov
outsb
mov
ss
repnz
in
pop
cltd
lret
das
cmp
push
sub
push
lret
mov
xor
leave
daa
rcl
dec
daa
fisubl
and
pop
cld
pop
out
in
xchg
dec
mov
jbe
inc
lods
sub
pop
gs
lcall
in
and
sub
mov
mov
mov
hlt
mov
xor
test
jo
pop
in
push
insb
loope
aaa
rorl
xchg
mov
pop
xlat
or
mov
scas
mov
lcall
sub
cmp
xchg
cmp
mov
inc
xor
icebp
vorps
je
imul
movsb
adc
lret
lods
xchg
jnp
xchg
or
sbb
or
stos
pop
insl
or
sub
push
lds
gs
outsb
mov
pop
push
push
inc
pop
mov
pop
mov
aaa
iret
rolb
cmp
arpl
ja
xchg
not
or
lods
dec
cmpsb
loop
int3
push
xlat
dec
shll
out
dec
hlt
add
xlat
add
fadd
and
lcall
lret
out
aam
or
cltd
popf
sub
fs
enter
and
cmp
int
push
movsl
mov
push
bound
fwait
xor
pusha
and
hlt
sbb
sub
sbb
ret
jle
and
imull
mov
loope
push
xchg
sahf
inc
popf
adc
push
scas
out
pop
movsl
aad
cltd
adcl
fbstp
mov
mov
sti
scas
sbb
xchg
out
aam
mov
cmp
xor
pop
xor
mov
lock
pop
lcall
xchg
loop
das
mov
cld
test
jmp
xchg
cli
mov
sub
push
scas
xor
pop
xor
push
mov
push
loope
xchg
xor
nop
mov
xlat
les
insb
cmpsb
xchg
push
jge
enter
inc
out
iret
adc
xor
jmp
inc
adc
xchg
movsl
iret
mov
add
scas
mov
movsl
push
int3
les
push
pop
ljmp
sub
das
cmpsb
jae
jnp
lahf
or
inc
sub
arpl
jp
dec
xor
jno
jg
jmp
add
mov
and
sbb
in
rorl
aas
stc
stos
mov
pushf
add
movsb
mov
mov
test
inc
and
lods
ds
xor
dec
sti
sarl
lahf
stos
pop
fwait
xor
mov
or
cld
pop
adc
push
sbb
mov
push
pop
repnz
cmpsl
mov
rcrb
popf
dec
notl
shll
adc
ficoml
lock
stos
cmpsb
popa
jnp
xchg
fsubrl
xchg
mov
mov
pop
pusha
scas
fisttpll
sbb
xchg
adc
or
cmp
sti
insl
jl
sarl
push
sub
jne
mov
pop
xor
mov
jbe
or
fidivrl
cmp
push
pop
loop
setb
adc
int
xchg
dec
add
xor
adc
cmp
xchg
popf
pusha
jmp
in
dec
adc
fsubl
fwait
jp
or
sbb
adcb
mov
sbb
add
lods
fcompl
je
repz
jo
in
push
shlb
inc
testl
mov
adc
fxch
mov
addl
xor
daa
inc
inc
inc
imul
neg
sbb
outsb
cmp
cmpsb
mov
jle
out
ds
les
sbb
jg
lods
mov
shl
mov
push
test
and
mov
fldcw
repz
cmpsb
cwtl
push
push
inc
cmp
shl
jmp
push
ss
imul
mov
lret
mov
adc
inc
out
xchg
xchg
push
outsb
out
mov
lock
add
dec
fsubl
mov
pop
sbb
fcmovb
jp
repz
jno
fstl
or
pop
xchg
jne
jg
dec
shl
dec
xchg
add
fwait
pop
out
int
xchg
cmp
or
imul
xchg
xchg
and
adc
out
jo
push
mov
xor
ss
or
mov
fs
int3
mov
jb
mov
cltd
jbe
xor
stc
xchg
jmp
fisttpll
popf
leave
fstl
xor
dec
mov
jne
cmpsl
add
arpl
inc
dec
shr
out
subl
out
push
xchg
lea
cmp
adc
rcll
out
jmp
outsb
sbb
pop
lcall
mov
inc
aaa
xlat
push
mov
imul
in
pop
fdivp
nop
sub
push
sbb
mov
arpl
mov
inc
insb
adc
movsl
aaa
sbb
jae
repnz
out
pushf
in
ja
lods
inc
call
std
xchg
call
movsb
out
subb
cli
stos
popa
ds
or
cmpb
js
push
mov
in
adc
filds
cs
dec
mov
sub
lea
insb
loope
lods
fisubrs
ljmp
sbb
daa
or
jb
adc
scas
aas
mov
dec
jnp
inc
mov
xor
loope
int3
mov
mulb
insb
repnz
sbbl
add
xchg
ds
daa
insb
jecxz
adc
pop
sub
add
imul
fcom
pop
dec
sub
sti
stos
push
or
mov
sbb
mov
xchg
es
test
leave
xchg
adc
inc
pop
test
iret
sbb
jno
test
in
inc
cmp
lahf
jne
xor
movl
inc
filds
mov
test
mov
fimuls
and
mov
imul
hlt
imul
and
movsl
clc
jge
cltd
les
inc
pop
mov
pop
xor
xchg
add
mull
inc
fistpll
rcrb
sti
xlat
mov
dec
pop
push
jnp
push
imulb
lret
lcall
xor
mov
es
sub
and
lock
inc
push
or
cmpsl
ret
cmp
clc
pop
push
mov
mov
movsb
in
cs
mov
jecxz
or
sub
jmp
xlat
push
mov
dec
inc
mov
fisubrs
xor
test
xor
std
mov
jp
lcall
push
jb
lods
inc
mov
out
xchg
cmpsl
push
and
mov
in
inc
push
mov
lahf
leave
pop
movsb
dec
add
pushf
fs
lcall
scas
icebp
imul
and
pop
sahf
movsb
lods
pop
aam
mov
lods
int
in
loope
jns
popa
lods
ds
subb
mov
and
outsl
bound
xchg
in
add
sub
shr
inc
mov
dec
fsubrs
pushf
dec
shl
push
fs
xchg
sbb
mov
jae
mov
movsb
xchg
jno
xchg
setbe
push
ret
sub
test
punpcklwd
jne
out
stos
les
test
in
popf
push
mov
adc
add
sbb
ljmp
pop
dec
les
cli
push
mov
ror
dec
jnp
lods
ja
jnp
das
mov
and
icebp
lea
push
xor
daa
scas
push
clc
lock
mov
lds
cmp
icebp
dec
and
inc
xchg
push
loopne
jg
fs
xchg
fndisi(8087
ret
ja
fs
add
cli
test
pop
stos
jno
or
hlt
sbb
dec
mov
xchg
in
jle
loop
mov
repnz
jbe
mov
daa
ret
or
jno
jne
rcr
mov
lock
dec
out
pop
ja
fcmovb
movsb
ficompl
sub
mov
js
dec
inc
fstpl
sahf
sub
jno
sub
pop
dec
xchg
fdivrs
or
xchg
cmp
sub
popf
push
sub
xchg
cmp
dec
xor
pop
addr16
mov
mov
divb
or
movsl
sub
cmpsl
jecxz
ja
push
lods
imul
xor
xchg
stos
stos
fcmove
inc
inc
adc
in
addl
outsb
fldcw
insl
add
adc
inc
cmp
gs
xchg
rcrl
inc
inc
stc
xchg
inc
mov
out
outsb
xor
pop
movsb
fnstcw
lock
and
aad
cs
cmpsl
ljmp
fdivrs
movsl
popf
stos
imul
daa
jne
xchg
hlt
pop
cmpb
inc
dec
ja
add
popa
imul
sbb
sbb
cmp
jnp
xchg
fcom
testl
addr16
jbe
mov
xor
fisubrl
jnp
in
repnz
xlat
cmc
cld
fs
jae,pt
pusha
sets
push
les
insb
js
cli
or
add
sbbb
enter
xchg
imul
pop
xor
cs
enter
cmpsb
and
les
stc
js
inc
inc
sub
adc
xchg
ficoms
jmp
cwtl
sub
xchg
sub
mov
mov
sub
movsb
cmp
ret
push
out
add
addb
and
setne
dec
dec
mov
add
inc
mov
sub
sbb
jmp
daa
pop
jns
xor
cmpsl
in
imul
outsl
les
push
cmpsl
jb
lods
cmp
mov
mov
subl
les
sbbb
not
sub
lea
sarb
and
pop
cli
test
ja
push
call
stos
mov
xchg
mov
jl
adcl
cwtl
add
das
arpl
sub
inc
add
or
les
pop
lods
or
xchg
xchg
xor
enter
iret
notl
jno
pop
sbb
clc
or
pop
push
mov
aas
icebp
data16
inc
cmp
xchg
push
pop
xchg
mov
addr16
xchg
lea
cltd
jbe
cmpsl
hlt
pop
lock
mov
adc
fcoml
or
shrl
popa
iret
adc
xor
and
outsb
clc
pop
jae
adc
and
loopne
xor
sub
rcrb
cmp
and
cmpsb
imul
out
adc
sbb
and
adc
mov
ljmp
aad
cwtl
xchg
and
push
movb
mov
in
sbb
mov
int3
ret
push
pop
mov
aam
jge
js
jae
fwait
test
pop
push
imul
sbb
jmp
je
mov
mov
cmp
lahf
mov
pop
das
jl
sub
or
xor
test
sbb
cmp
push
dec
dec
sti
adc
notb
test
in
mov
ficomps
lea
jp
call
out
pop
fwait
es
lds
xor
inc
outsb
andl
push
xor
xor
pop
and
fcmovnu
add
lods
gs
cmp
out
mov
test
adc
inc
sub
imull
jp
pushf
dec
and
ret
mov
movsb
pop
packuswb
pusha
shr
outsb
sti
pop
loopne
push
pushf
push
stos
sbb
fistl
and
xchg
jge
lcall
imul
mov
loop
jle
mov
stos
jo
cmc
fstpl
xchg
out
cmp
ljmp
or
rorb
push
mov
enter
imul
imul
fwait
movsl
dec
test
sub
or
pop
cmpsl
inc
and
jle
push
dec
and
roll
enter
outsl
insb
ret
add
cs
inc
and
dec
inc
adc
xchg
lcall
stos
es
negb
jge
cmc
and
push
iret
enter
aaa
js
jp
pop
push
add
dec
andl
cs
push
mov
push
push
push
mov
adc
cmp
dec
enter
adc
jle
les
xor
jne
push
or
xchg
xchg
mov
dec
adc
xor
shll
sbb
sahf
jae
hlt
addr16
or
push
sub
add
sbb
jp
mov
xor
stos
sub
push
cwtl
sbb
imul
iret
mov
lret
mov
dec
dec
sbb
dec
jbe
sbb
adc
icebp
mov
pushf
lods
ja
fs
imul
sbb
pop
sbb
outsl
jmp
cmpsl
es
cmc
mov
lret
xchg
imul
jbe
inc
sarl
faddp
sbb
pop
jecxz
mov
xchg
jns
leave
push
add
sahf
cmpb
popf
mov
in
fcoms
out
sbb
pop
fwait
stos
mov
inc
outsb
mov
pop
jmp
or
pop
pop
pusha
daa
pop
test
jae
sub
incw
and
lea
inc
mull
jbe
xchg
rolb
std
ror
add
xchg
mov
pushf
into
jnp
rorl
stos
out
xor
xchg
xchg
in
cmp
jmp
testl
iret
or
pop
repnz
xchg
and
cmp
stos
mov
jns
dec
js
xor
push
pop
push
mov
jle
pop
loope
push
pop
mov
or
push
and
mulb
repz
dec
xchg
test
push
rcrl
inc
scas
adc
scas
dec
repz
push
fcmovnu
fidivl
leave
or
hlt
jp
jecxz
adc
or
cmp
mov
push
xchg
xchg
jne
ret
mov
aam
and
shlb
sub
dec
les
mov
or
call
fisttpl
jno
xor
std
cmp
stos
adc
lods
pop
jae
sbb
mov
repz
lcall
iret
js
cwtl
bound
and
push
cmp
pop
stc
mov
ret
xchg
cwtl
aaa
or
pushf
popa
sbb
or
fs
lret
or
int
js
or
idivb
aad
dec
pop
xlat
shlb
mov
scas
stos
and
jo
sbbb
inc
outsl
pushf
loop
cli
and
pop
mov
into
stos
pop
loopne
les
es
sbb
lahf
mov
test
leave
xor
fs
adc
in
test
movsb
es
dec
pop
pop
mov
cli
ret
pop
sbb
pop
pop
and
gs
js
add
jle
repnz
inc
pop
icebp
xlat
jle
sub
push
out
jbe
adc
maskmovq
testl
push
out
push
push
rcrb
lret
in
into
test
jnp
lock
insb
cmpsl
lock
das
jge
xchg
jl
cwtl
ds
dec
adc
xchg
mov
and
mov
mov
add
jne
cs
fisubl
fidivs
into
and
sub
fiaddl
dec
movsb
sub
adc
scas
popf
xlat
jae
cmpsb
loop
add
mov
or
cmp
popl
mov
nop
inc
out
inc
and
dec
mov
sti
cld
sbb
adc
lea
push
cmp
hlt
pop
push
push
imul
jae
push
mov
mov
popf
das
sub
jb
aas
jl
mov
sti
les
push
icebp
push
push
dec
inc
sbb
and
ja
mov
ljmp
mov
inc
add
orl
fnstsw
cmc
xchg
dec
xchg
push
dec
xor
cmp
jns
adc
add
sbb
addr16
inc
lcall
push
cmp
cwtl
adc
mov
pop
inc
rol
scas
mulb
aaa
sub
push
fldl
pushf
gs
cmpsb
ficompl
hlt
mov
dec
mov
es
lds
test
xchg
dec
fcoms
cltd
push
inc
cmp
clc
jb
dec
nop
xor
daa
add
sub
pop
xchg
jp
mov
mov
or
bound
sar
repz
jl
jecxz
bnd
pop
or
int
lret
imul
jb
faddl
push
jge
adc
push
and
or
andl
sub
inc
fsubr
mov
loopne
mov
or
out
push
rcll
loopne
lea
mov
cwtl
and
add
mov
jg
bound
stos
iret
inc
pop
imul
notl
inc
cmpsb
in
jp
arpl
ljmp
fstps
arpl
clc
mov
lahf
sbb
movsb
pop
pusha
cmpsl
cmp
cmp
mov
pop
pop
imul
shl
cwtl
lret
loope
mov
cwtl
jg
or
push
cmpsb
or
daa
testl
push
lea
and
xchg
pop
cld
rcrb
scas
test
mov
test
jno
ret
pop
or
dec
pop
mov
mov
or
and
xchg
pushf
add
xor
lods
xchg
out
push
insl
cmp
insl
fwait
or
mov
das
or
sub
js
and
sub
and
mov
cwtl
aam
and
lahf
dec
push
jb
dec
data16
push
inc
fcoms
xchg
jae
xchg
pop
cmp
mov
or
pop
and
out
inc
push
in
cmc
push
cmp
push
pushf
test
push
imul
ret
cltd
gs
and
test
ja
data16
mov
cld
mov
push
push
loop
xchg
fwait
pop
xor
cmp
and
ficomps
cmpsb
pop
dec
add
cs
popa
dec
and
push
pop
sbb
fdivl
lock
mov
pop
pop
jg
mov
ljmp
cwtl
mov
cld
cmp
scas
lahf
or
aas
dec
or
xchg
lds
pushf
push
icebp
in
and
pop
mov
jl
mov
es
jl
aaa
je
inc
popa
ja
test
pop
mov
mov
dec
jb,pn
sub
out
sub
scas
push
stos
in
xchg
scas
pushf
popf
sbb
iret
dec
mov
imul
push
je
mov
jmp
leave
nopl
xor
insb
popf
add
les
pop
je
adc
cmp
jb
pop
mov
add
push
or
add
call
add
hlt
push
mov
es
leave
add
push
push
pop
int
and
jmp
mov
inc
xor
cli
push
xor
popf
add
mov
cmp
dec
popa
sbbl
push
mov
in
gs
and
in
aad
inc
xchg
in
push
sbb
inc
sbb
test
sarl
test
mov
and
fincstp
addl
stos
jns
lods
arpl
mov
mov
aam
or
lret
call
imul
mov
or
out
jno
jns
cmp
jge
push
cmp
outsb
dec
daa
nop
pop
or
subl
add
lahf
aaa
cmp
push
jb
dec
add
sbb
rcrl
into
adc
ss
mov
test
inc
ljmp
adc
push
sbb
cmc
ret
push
mov
fstl
ret
in
aaa
xor
inc
in
pop
xchg
pop
mov
test
out
adc
lcall
sbb
xchg
imul
mov
mov
repnz
cli
sbb
cmp
out
lds
mov
stc
inc
mov
dec
or
pop
mov
test
mov
mov
and
cmpsb
sahf
arpl
bound
aad
or
cmpsl
popw
fnstcw
adc
subl
mov
lock
stos
pusha
fld
push
sub
in
add
shlb
xor
pop
xchg
je
or
and
jl
movsb
lahf
pop
and
iret
out
jo
aam
or
xor
or
cmp
add
cmp
push
mov
adc
pop
outsl
mov
xlat
rcrb
pop
jecxz
faddl
mov
out
mov
into
mov
sub
inc
add
mov
cli
mov
mov
pop
jnp
loope
std
unpckhps
push
push
fs
lock
cmp
and
stos
out
adc
jmp
and
adc
adc
aad
lods
mov
ret
out
mov
lret
mov
add
push
and
pminub
mov
icebp
ret
sbb
jge
pushf
xor
rcrl
push
cmc
repnz
xchg
aas
clc
in
jno
mov
add
fildl
mov
pop
add
adc
jbe
add
dec
fstpl
mov
pop
aaa
ja
pop
outsl
adc
arpl
mov
std
loop
push
adc
pop
mov
ds
push
push
pop
das
pop
jmp
repz
inc
xor
ret
leave
push
mov
movsb
pop
cs
lods
movsl
repz
jmp
fbstp
xor
jmp
aaa
fwait
pop
push
fimull
dec
popa
clc
sub
pop
imul
cmp
imul
push
or
int
lret
mov
mov
in
jb
jge
daa
add
filds
inc
cmpsb
das
lret
repz
popf
out
push
out
xor
sarl
xor
mov
shrb
mov
cmc
adc
movsl
push
les
les
mov
or
dec
mov
or
mov
aas
sbb
out
cli
addb
rcll
xchg
mov
sar
adc
mov
fldt
inc
sub
dec
xchg
imul
pop
lea
int3
pop
out
movsl
mov
sbb
arpl
fidivrl
shll
repz
lcall
stos
hlt
sub
mov
or
dec
cmp
sbb
leave
shlb
xchg
sahf
std
pop
call
pop
popf
fmull
pop
fisubs
mov
push
imul
outsb
lods
mov
pop
fs
mov
mov
in
push
sub
hlt
mov
test
xchg
in
dec
mov
lret
add
jb
mov
pop
jmp
les
sub
outsl
push
sbbb
and
pushf
testl
ret
sbb
test
jne
or
stos
inc
sub
outsl
push
lret
movsb
lock
sub
in
ljmp
mov
or
out
cwtl
pop
push
sub
mov
jge
fsts
lds
lock
movsb
mov
test
push
shll
int
xor
outsl
jbe
adc
add
xor
cld
fisubrl
cmp
and
cmp
fistl
push
das
pushf
cmp
ret
inc
cmpsl
loop
mov
xlat
fimuls
dec
cmp
push
loop
push
sbb
popf
pop
ja
xchg
mov
xchg
shlb
loopne
sub
xchg
subl
adc
test
das
push
xchg
mov
or
test
fcoms
std
jo
adc
adc
add
outsb
fbld
int
cmpsl
inc
xor
jp
fdivs
sbb
adc
faddl
inc
cli
rorb
data16
negl
inc
das
inc
nop
xor
clc
ret
scas
mov
inc
add
cwtl
jecxz
xchg
and
inc
and
push
test
xchg
and
and
addr16
stos
fbld
aaa
fidivs
int3
das
out
andl
ror
sbb
or
lea
pop
add
pop
ja
jb
xchg
mov
andl
sahf
popf
xchg
and
inc
stos
sub
imul
push
pushf
dec
lcall
push
lret
mov
push
jg
imul
or
sarb
call
ds
leave
into
enter
mov
pop
mov
incl
clc
clc
mov
inc
leave
add
ret
inc
mov
mov
in
das
in
pushf
sti
in
mov
xchg
gs
inc
mov
cmp
adc
push
jmp
push
mov
cmp
stos
inc
lods
xchg
mov
sub
or
dec
scas
mov
mov
mov
fidivs
cld
pop
jl
stos
call
inc
faddl
idivb
repz
dec
hlt
adc
xchg
pop
dec
enterw
aas
pop
ja
sub
adc
xchg
jno
sbb
pop
adcl
xchg
or
test
arpl
jo
cltd
ret
xor
aas
xchg
add
add
adc
xchg
stc
rcl
pusha
xor
xchg
sbb
add
cmp
pop
call
rcl
jno
sub
mov
lds
imul
pop
lret
mov
pop
movsl
xchg
push
sub
das
data16
mov
sbb
popa
icebp
pop
push
pusha
lret
pop
sbb
lds
test
dec
inc
les
or
cmp
hlt
push
inc
pop
stos
inc
pusha
lea
out
ds
pop
xchg
dec
mov
call
sbb
bound
or
aas
stos
sub
call
pushf
inc
jns
dec
mov
add
xchg
mov
sub
pop
cmc
push
jnp
lret
int
xchg
dec
sarb
rorl
inc
mov
dec
inc
fsubr
pop
inc
pop
mov
push
int
sbb
enter
push
lods
jo
mov
add
cmp
insb
pop
loop
shll
sub
or
jne
sbb
or
add
inc
mov
push
cmpb
daa
das
pop
lods
mov
gs
pop
fstpl
cli
sbb
mov
dec
mov
mov
xor
sbb
dec
repnz
outsb
popf
mov
ficoml
jno
push
dec
andl
cmp
push
mov
dec
lods
repnz
pop
cli
adc
in
mov
pop
inc
shr
jno
popf
cmp
sub
jg
sbb
jmp
or
jo
notb
mov
sbb
fmuls
arpl
das
rorl
cmpsl
push
sahf
or
adc
pop
adc
adc
shll
dec
or
pop
push
or
cs
sub
out
cmp
xlat
jecxz
cmpsl
push
cmp
and
push
or
sar
dec
xchg
jae
hlt
aas
inc
jne
sahf
cmc
cltd
inc
arpl
jne
xor
or
in
out
xor
xor
sub
or
int3
inc
dec
scas
cli
sub
popa
addb
xchg
dec
push
pop
negb
fbld
icebp
popf
pop
xchg
inc
adc
mov
or
adc
cld
mov
or
repz
pop
lret
movsb
mov
scas
sub
dec
gs
dec
xchg
test
lret
call
stc
gs
imul
je
fcoml
roll
cmpsl
and
int3
mov
adc
inc
shrl
iret
inc
xchg
push
out
imul
out
test
pop
mov
mov
mov
test
ds
jl
mov
adcb
inc
cs
inc
and
add
add
and
das
stos
lahf
cmc
inc
mov
sahf
adc
int
lret
xchg
mov
lds
addb
add
pop
push
loope
mov
stc
outsb
cltd
pop
pushf
pop
sub
les
aad
inc
repz
mov
xchg
push
mov
pop
lods
jno
mov
mov
leave
imul
xor
lcall
out
xchg
push
push
shrl
adc
xchg
ljmp
and
mov
dec
lods
lods
cmp
xor
mov
jl
out
decb
lret
jae
dec
xor
xchg
push
inc
push
fs
push
shlb
lods
lds
dec
xor
xchg
data16
stos
gs
sbb
fistpl
jmp
cmp
push
pop
and
add
push
sbb
jns
push
arpl
jl
ficoml
pushf
inc
lods
insl
sbb
cmp
dec
push
rolb
jbe
into
mov
mov
pop
pop
mov
sub
movsb
mov
mov
sub
inc
sbb
add
cmpsb
push
xor
shrl
sbb
cld
sbb
jecxz
xor
insl
sbb
xchg
aas
jno
mov
push
iret
push
out
cmp
push
fistpl
push
and
xor
je
xchg
add
std
dec
xchg
sbb
mov
outsl
xchg
lret
in
popa
sub
inc
and
cmp
or
dec
adc
dec
stos
bound
dec
mov
xchg
sub
mov
ja
add
ret
std
out
std
les
fildll
repnz
out
adc
mov
push
dec
outsb
sub
mov
sti
in
sbb
imul
add
leave
pop
xor
movsl
subl
aas
mov
push
mov
cltd
push
rorl
shlb
pop
pusha
xor
outsb
sub
loope
fwait
sbb
packsswb
punpckldq
pop
leave
in
sbb
enter
mov
mov
adc
pop
and
mov
loopne
jmp
lret
lcall
loopne
vmwrite
mov
xor
loope
rcrl
pop
xor
jae
mov
adc
pop
outsl
cs
fildl
lds
movsl
popa
mov
nop
shl
outsl
ja
lahf
inc
in
mov
cltd
loopne
scas
into
cmp
and
sbb
and
ds
movsl
ret
mov
sbb
jl
out
dec
mov
dec
push
aad
mov
jecxz
dec
sub
mov
cmp
xor
mov
push
cwtl
test
outsb
scas
mov
or
lock
movsl
xchg
std
imul
cwtl
jl
inc
scas
push
sarl
xor
sahf
push
xchg
jge
adc
mov
fstl
loop
repnz
test
popa
aas
or
mov
mov
dec
outsb
push
dec
pushf
fsubrl
movsl
outsb
jae
dec
pop
test
cld
cmp
or
popa
or
iret
rclb
adc
sub
sub
add
hlt
dec
or
cmc
mov
in
xor
js
xchg
fs
insl
bound
faddp
data16
out
mov
loopne
sbb
adc
xchg
mov
stos
mov
cmp
paddb
fptan
lret
and
mov
adc
or
xchg
xor
cltd
sub
shrb
mov
lds
test
add
xchg
in
movsb
cli
jl
push
clc
or
in
mov
notl
test
and
xor
jbe
call
mov
cmp
pop
and
mov
push
ljmp
int
add
aaa
sahf
mov
filds
xchg
data16
iret
inc
test
icebp
shlb
mov
test
mov
addb
cmp
jmp
sbb
dec
sbb
roll
dec
loop
cld
pop
lock
xor
fcompl
add
jecxz
mov
xor
sub
movsb
stc
sahf
and
fildll
lret
xor
xchg
aad
add
sbb
adc
mov
inc
inc
popa
shlb
pop
xchg
mov
mov
pop
ret
pop
pop
jae
sub
je
fwait
mov
pop
mov
bnd
fnsave
aas
lahf
jecxz
in
xchg
or
jmp
and
enter
dec
mov
xchg
out
push
adc
ljmp
push
lea
popf
jo
or
jg
roll
pop
enter
test
push
into
push
xor
test
cmpl
popa
or
aam
stos
or
cmp
mov
cmp
inc
movsb
and
leave
daa
dec
insl
ljmp
repnz
sub
cmc
push
lcall
testb
iret
fwait
out
int
gs
fists
addl
jns
leave
cmp
xor
cld
aam
dec
inc
std
and
pop
sbb
mov
mov
pop
sbb
popf
pusha
sub
in
in
insl
push
arpl
lret
std
je
mov
sub
int
fs
loop
jno
mov
gs
sahf
pop
test
jp
sub
mov
bound
icebp
dec
sbb
xor
cmpsl
jp
ds
scas
sub
xor
or
xlat
add
fldl
mov
addr16
fisubrs
pop
adc
mov
mov
cmp
fs
loop
mov
push
push
sbb
inc
sbb
cwtl
xor
mov
inc
pop
inc
sub
int3
pushf
aaa
daa
movsb
int3
mov
sub
gs
addr16
fdivrs
push
ret
leave
cmpb
gs
sbb
and
mov
int3
fxch
scas
mov
int
js
dec
fistps
movsl
jl
jl
jle
mov
inc
xor
pop
lock
aaa
leave
sbb
and
add
sbb
js,pn
push
outsb
jns
stos
or
push
cmp
cmp
xchg
shll
inc
stc
dec
sub
cli
out
ljmp
add
icebp
in
inc
mov
ss
jge
push
test
leave
and
sbb
mov
int3
push
and
pushf
in
cs
mov
fs
inc
pop
jg
jns
gs
test
shrl
dec
push
and
mov
push
data16
cmp
cmc
jmp
aam
daa
push
sub
lods
adc
out
jl
rolb
mov
les
xlat
jge
and
xchg
lods
imul
mov
int3
jns
fs
push
insl
scas
sbb
iret
mov
notl
stos
adc
in
inc
push
std
jg
or
pusha
cltd
mov
fcomp
fwait
sbb
mov
sbb
push
ficomps
ret
sti
sub
jecxz
loop
add
les
lea
into
shrb
movsb
cmpsl
xor
mov
jns
push
add
pop
and
cli
cmc
or
movsb
aas
mov
int3
mov
push
cmp
push
add
inc
out
clc
sub
into
xchg
mov
jo
pop
push
pop
jns
xchg
ficomps
pop
gs
mov
mov
add
cmp
mov
pop
jb
addl
fsin
push
imul
mov
push
cld
popf
or
pusha
adc
rorb
mov
xor
aas
mov
insb
repz
inc
ljmp
ss
in
xor
in
cmpsb
mov
dec
sub
cltd
pop
xchg
mov
push
cmp
push
aas
sub
les
dec
mov
lret
daa
sahf
je
jp
loopne
lock
pop
adc
adc
lcall
mov
mov
sbb
or
enter
insb
ja
movsb
fisttpll
mov
xchg
rolb
jl
pop
inc
mov
imul
stos
cmp
push
sub
int3
pushf
lahf
push
out
sbb
and
out
aaa
js
cmp
cmpsb
scas
push
xchg
dec
shlb
push
push
in
xchg
and
std
xchg
jns,pn
cmp
inc
rcrl
dec
icebp
mov
mov
sbb
dec
lock
cmpsb
xchg
out
and
outsb
cmp
xor
or
pop
inc
fmul
js
test
and
mov
mov
imul
mov
push
sbb
sbb
aad
adc
out
loopne
jle
hlt
fs
lods
push
cmc
andl
fwait
jb
mov
subb
pop
ret
js
xorl
cmpsb
jecxz
mov
jo
inc
subl
cs
adc
enter
pop
sub
andl
dec
cwtl
outsb
rorl
mov
imul
cmp
std
pop
jle
dec
imul
mov
or
or
add
xlat
sub
lock
pop
hlt
out
add
rcr
rorl
in
pop
add
rorl
jp
dec
mov
jno
inc
xchg
ret
sbb
shr
sub
mov
rolb
xchg
mov
xor
and
loope
lea
and
inc
pop
lea
mov
mov
and
insl
test
xor
popa
lcall
mov
aam
mov
jbe
test
out
test
out
cmc
xchg
popf
je
sbb
inc
jb
in
mov
or
in
dec
out
pushf
leave
loope
je
andb
js
bound
imul
sbb
lea
dec
adc
inc
jmp
push
lahf
or
inc
cld
das
js
and
sbb
mov
pop
and
push
sti
aam
mov
pop
inc
jnp
push
jo
mov
inc
mov
mov
dec
test
jo
test
je
add
adc
push
push
jb
pop
dec
ja
or
lcall
leave
dec
or
subl
cmpsl
ja
pop
pop
in
inc
mov
pop
jg
jg
jne
mov
add
mov
mov
jg
inc
sub
aaa
scas
xchg
push
mov
lgs
adc
pop
push
in
lahf
lcall
das
nop
dec
test
mov
enter
rcrl
dec
ret
add
mov
sbbb
fists
and
inc
jmp
ror
arpl
adc
scas
dec
loopne
js
xchg
cwtl
ret
popf
mov
push
popa
add
pushf
push
nop
stos
arpl
movsb
movsl
stos
ds
xor
mov
jecxz
movsb
shrb
and
daa
dec
xchg
mov
imul
das
xor
sub
xor
lret
daa
aaa
mov
jnp
sub
pop
stos
sbb
mov
mov
addr16
fs
mov
push
jne
lock
mov
cltd
cmp
nop
push
daa
cmc
test
pushf
mov
ror
push
lcall
mov
and
addr16
loopne
sbb
and
mov
push
sub
mov
mov
into
xchg
popa
jmp
ret
jmp
adc
rorb
lahf
outsl
rcl
stos
dec
mov
jmp
iret
loope
and
dec
outsl
sub
roll
pop
ljmp
ss
jns
sub
lea
cmpsl
adc
sahf
dec
mov
push
pop
or
xchg
cmpsb
pop
arpl
sbb
test
pop
jp
into
mul
aas
test
push
in
mov
jg
sti
mov
sub
lahf
mov
dec
or
push
adc
sarl
mov
or
jle
icebp
pop
pop
add
push
mov
clc
sbb
cmp
fwait
xchg
mov
and
mov
adc
or
shll
mov
pop
movsb
push
jo
daa
push
das
dec
lcall
cmp
cltd
push
test
imul
idivb
scas
or
xchg
cmp
push
leave
call
repz
fldt
scas
pop
in
mov
pushf
pushf
imul
push
ss
sub
nop
inc
loopne
shlb
xlat
push
mov
out
pop
jmp
das
es
add
iret
ja
int3
popf
jno
mov
loopne
mov
xor
popf
mov
mov
add
pop
orb
push
cmp
shrb
xchg
nop
mov
aas
ss
movsb
bound
adc
test
adc
daa
out
pop
lret
sbb
ss
arpl
pop
mov
ret
push
adc
dec
sbb
mov
mov
in
hlt
sbb
and
push
fldcw
fdivrl
sbb
mov
push
mov
pushf
adc
jns
add
rdtsc
xlat
cmpsb
jp
or
aas
movsl
mov
ljmp
loop
sub
test
nop
jne
inc
gs
mov
dec
pop
add
push
jmp
aam
loope
pusha
jmp
es
sbb
xor
call
pop
dec
sbb
push
inc
mov
in
ds
out
jb
mov
fiaddl
rcrb
pop
in
or
insl
mov
iret
cmp
pop
popf
cmc
into
enter
mov
addr16
cld
fisubrs
out
int3
push
cmp
fwait
scas
dec
adc
inc
orb
imul
insb
adc
xor
mov
xchg
dec
sbb
xor
pop
adc
xchg
outsl
cmpl
xchg
into
mov
dec
mov
push
insb
test
data16
mov
mov
aas
xchg
outsb
jo
push
lds
pop
mov
inc
or
inc
mov
je
pop
jb
push
pop
xlat
and
jp
push
cmp
iret
rcl
push
cmp
insl
in
sub
loopne,pt
iret
out
mov
push
mov
jge
dec
jo
inc
pusha
rcr
incb
cli
pop
decl
popa
xchg
xchg
mov
push
sbb
mov
lock
scas
lret
mov
sbb
xchg
or
outsb
pushf
sbb
adc
loope
cmp
lds
mov
popl
or
andl
fwait
mov
mov
notl
in
xor
insb
mov
jnp
into
out
lcall
mov
popf
push
fs
rcr
ss
cmpsl
scas
maxps
inc
xchg
cmp
cmp
dec
mov
pop
es
pop
int
dec
enter
inc
mov
and
cwtl
stc
xchg
mulb
mov
call
xlat
push
bound
repnz
jo
adcl
or
adc
ljmp
bnd
test
pop
or
adc
sub
sub
arpl
add
stc
xchg
aad
push
arpl
adc
orb
push
es
xlat
sub
push
popf
mov
jge
cmpsb
arpl
push
cmpsb
xchg
arpl
push
mov
mov
cli
fstp
loopne
sub
ss
dec
mov
aaa
cs
pushf
leave
fwait
cmp
xchg
ds
fwait
cmp
popa
test
test
push
mov
repnz
stos
cmp
cmp
fdivl
mov
or
xchg
adc
xlat
jp
mov
stc
jno
pop
outsl
repnz
adc
orb
js
cmp
dec
push
inc
out
and
loopne
inc
arpl
pop
and
lret
pop
add
outsl
or
pop
push
pop
fstpt
insw
jnp
mov
sbb
jb
test
ret
push
out
add
cmp
sbb
imul
jmp
dec
jae
std
fwait
jb
add
aas
jmp
push
lret
or
call
data16
aas
outsl
add
bound
pusha
aam
mov
lcall
int
sbb
and
mov
cmp
inc
repnz
jbe
push
jg
mov
test
add
sbb
fnstcw
dec
pop
xchg
shrl
je
mov
dec
cmpsl
js
xor
sbbl
xor
cmc
in
sti
push
stos
lahf
mov
cld
lea
repnz
insb
es
jae
imul
jbe
jmp
mov
ret
sub
gs
pop
mov
add
cmpsl
inc
jecxz
into
push
adc
enter
or
dec
add
push
sub
repz
cmpsl
out
push
gs
push
fdiv
out
inc
test
nop
xchg
and
test
xor
adc
inc
and
jmp
or
sbb
jg
or
fdivrl
out
mov
push
add
fimuls
lds
dec
mov
sbb
mov
stos
jbe
stos
mov
notl
loopne
inc
pop
in
and
scas
movsl
add
jnp
mov
sbb
mov
out
fs
icebp
or
inc
inc
mov
mov
inc
cmp
ljmp
push
xchg
inc
xchg
and
and
jmp
xchg
cwtl
sub
ja
dec
pop
jo
push
adc
push
test
sti
dec
in
push
mov
je
adc
xchg
mov
pop
mov
loopne
shrb
xor
fstp
out
mov
cmc
push
out
mov
roll
pop
mov
add
push
ffree
xor
ret
push
into
pop
insb
mov
jno
xchg
mov
xchg
in
and
sbb
cmp
in
jo
mov
jnp
gs
movsb
call
jns
ja
adc
add
dec
pop
xor
cmc
dec
iret
push
lea
dec
jmp
add
shrl
mov
addr16
test
fs
add
cmp
cmc
popl
mov
call
in
imul
scas
push
sbb
pop
sub
shlb
movsl
in
mov
sub
movsb
inc
xor
push
pushf
jne
xchg
inc
jnp
repnz
fimull
jne
ret
fmulp
mov
rorb
xchg
add
push
loope
subb
dec
sub
lods
int
test
jo
inc
jns
pop
leave
lods
pop
inc
aas
mov
jle
mov
mov
dec
cltd
and
ss
jg
in
divb
add
xlat
xchg
xchg
mov
mov
arpl
or
sbb
outsb
push
adc
scas
sub
mov
into
mov
in
push
xchg
cmpsl
jo
jae
imul
pushf
adc
xor
adc
cli
pop
jmp
add
pop
out
xchg
pusha
adcl
fidivrl
arpl
repz
mov
jns
pop
sbb
xchg
dec
jo
jae
jns
loopne
push
inc
ljmp
sbb
ss
pop
mov
mov
sbb
mov
iret
inc
xor
outsb
jmp
xorl
popa
jae
and
lcall
aas
pushf
jl
adc
out
clc
add
xchg
daa
imul
xchg
or
std
jae
inc
and
add
leave
jg
sbb
imul
subb
inc
sti
add
ret
lds
je
aaa
ss
pushf
mov
cltd
dec
test
push
mov
xor
mov
inc
push
scas
add
int3
cmp
pop
lock
lret
imulb
mov
mov
lods
ss
mov
jmp
xchg
movsl
movsb
mov
mov
fsubr
xchg
cmp
dec
pop
inc
xor
jmp
mov
nop
fnsave
xor
adc
adc
lods
dec
outsb
ja
xchg
out
xchg
daa
ja
sub
mov
or
adc
lea
sti
xorb
cwtl
add
xchg
mov
or
cltd
out
lock
sub
sbb
mov
pushf
sub
sahf
popa
cli
xchg
fildl
add
dec
cli
repz
je
pop
inc
add
popf
jae
test
out
xor
jno
or
loopne
pop
xchg
scas
mov
sub
popf
imul
dec
jmp
push
je
insl
fimull
pop
leave
xor
mov
add
xor
int
xor
dec
ret
inc
lea
xor
xchg
push
xchg
sbb
push
sbb
pop
pop
das
add
lock
call
les
leave
push
mov
sub
andl
xor
adc
xchg
sbb
pop
clc
cmp
mov
pop
dec
add
into
cmpl
fdivrp
lods
out
fldt
pop
scas
cmpl
cwtl
xchg
aaa
mov
shl
ss
sub
lods
dec
repnz
rolb
rorb
fsubs
jo
xor
je
mov
lods
into
jg
pop
shlb
sub
mulb
rcrl
int3
arpl
loop
mov
icebp
fmuls
cwtl
stc
sub
adc
arpl
clc
adc
pop
cmp
mov
lds
rol
in
out
lret
leave
mov
xchg
shrl
sbb
mov
pop
popf
mov
mov
jecxz
div
jg
adc
fcoms
jbe
push
add
stos
xchg
fdivs
shll
add
stos
ud0
add
mov
adc
inc
xor
push
dec
jp
mov
cs
adc
and
dec
rclb
insb
les
cmp
mov
mov
dec
adc
out
pop
push
mov
cmp
shll
cmc
xor
jmp
mov
xorb
xlat
push
jl
jno
nop
fst
sub
adc
fdivrl
mov
push
xor
shrb
aas
pop
push
xchg
lret
xlat
test
lret
push
jmp
clc
push
sub
stos
jnp
add
and
lods
test
addr16
ss
inc
mov
jle
push
cwtl
ret
jle
cmpsb
mov
loop
test
jns
lcall
mov
ljmp
jae
ljmp
sbb
ficoml
and
dec
jl
or
sbb
lds
rep
mov
stos
and
sub
cltd
inc
mov
out
or
enter
in
mov
shrb
push
push
imul
push
mov
push
pop
sbb
jnp
cli
loop
aam
in
mov
lahf
cmpsb
jnp
dec
adc
fs
lcall
push
bound
sub
xor
inc
pop
and
jl
aad
rorb
sbb
std
and
das
subb
mov
or
lret
pop
sarb
cmp
js
jl
repz
shlb
cwtl
lret
mov
mov
negl
dec
and
imull
push
add
dec
shl
aaa
mov
push
mov
jnp
sub
rcl
dec
dec
sahf
add
and
mov
or
xchg
add
and
mov
push
xor
fcompl
fisubrs
lcallw
cld
in
cmpsb
lods
mov
repz
das
loop
repnz
mov
pusha
inc
or
mov
jb
push
fimull
jg
sub
mov
aad
clc
jmp
mov
pop
shrl
dec
js
dec
repz
std
sub
lods
aam
mov
mov
lods
cmp
pop
inc
int3
mov
and
push
call
adc
mov
sbb
lds
fldl
ljmp
dec
subb
add
or
stos
pop
pop
in
lea
test
xor
mov
xor
inc
gs
pop
hlt
pop
movsl
ret
xor
nop
sub
pop
jge
fldenv
aad
push
mov
jno
stc
or
mov
or
mov
call
push
add
sub
sbb
xchg
cmc
outsl
dec
lret
lret
or
les
rclb
push
sub
imul
inc
push
adc
xchg
in
jle
bound
int3
jns
jmp
fiaddl
sub
push
stos
xchg
or
xlat
jge
in
clc
mov
mov
inc
out
js
push
adc
clc
lods
jae
push
imul
jnp
les
leave
arpl
enter
cmp
ret
cmpsl
mov
jb
sub
jbe
fs
dec
mov
insl
mov
popa
adc
xor
aaa
pop
mov
imull
inc
sub
sahf
and
push
jp
mov
inc
stc
gs
hlt
shlb
and
ds
xlat
call
pop
cmp
or
inc
push
les
sahf
cmp
push
sbb
push
ss
adc
into
ret
pop
dec
mov
inc
movsl
xchg
xor
mov
push
jae
adc
ret
shll
push
fcomps
add
int3
adc
mov
add
popf
xorl
adc
pop
mov
enter
pop
in
lret
push
lea
in
into
in
jns
test
sar
add
comiss
pushf
xchg
push
cmpsb
dec
adc
xor
repnz
inc
andb
and
sbb
add
push
cmpb
imulb
outsb
or
pop
lds
push
push
or
aas
push
push
sbb
and
sub
cmp
pop
dec
cmp
xor
frstor
popf
dec
mov
cmp
std
xor
adc
sub
mov
std
sbb
loope
jnp
cmp
xor
and
outsb
repnz
fwait
call
jns
and
repz
clc
jmp
dec
in
cmp
dec
xchg
int
addr16
xor
icebp
insb
andl
cli
rclb
fcmovne
jb
ljmp
mov
test
arpl
pop
repz
jbe
cmp
dec
ljmp
mov
sahf
inc
dec
lods
and
jg
mov
lods
push
ja
cmp
push
push
pop
add
aad
dec
cmp
inc
out
insb
mov
scas
push
sub
sahf
xorl
cmp
xchg
or
xlat
imul
jno
mov
cwtl
mov
sbb
movb
ja
xor
mov
ret
add
dec
xchg
sub
jg
xor
push
jle
fldenv
dec
push
push
test
jmp
gs
jl
jmp
lods
inc
mov
push
test
xchg
fcmovb
sub
jbe
out
dec
fisubl
popa
jbe
push
stc
xchg
loopne
lahf
jg
in
bound
nop
int3
call
divl
inc
add
push
stos
xchg
stc
adc
add
inc
xchg
cmpsl
dec
jmp
ret
punpckhbw
sub
push
data16
sahf
ja
and
and
ss
jmp
jl
and
addl
cwtl
shlb
filds
daa
cwtl
pop
cmp
fisttpll
shll
adc
jmp
mov
imul
leave
mov
cmp
or
pop
push
imul
scas
add
addb
fisubrs
adc
ss
mov
dec
stos
cmp
test
fildll
int
mov
jno
das
add
in
jbe
add
js
jns
mov
mov
and
jecxz
cmp
sbb
mov
sbb
sub
lock
and
aas
leave
movsl
data16
jo
jmp
scas
pop
xchg
je
ljmp
clc
scas
push
sbb
stos
fstl
inc
xlat
add
sub
movsb
arpl
and
test
dec
mov
jmp
or
and
ret
dec
mov
mov
or
in
xor
pusha
inc
mov
push
fnstsw
aam
mov
fdivrp
xchg
out
out
xor
negb
inc
xor
aam
lcall
dec
not
adc
mov
jbe
xor
loope
je
xchg
loop
ds
int
scas
test
mov
inc
push
push
subl
sahf
insb
outsb
push
das
sbbb
test
and
clc
mov
arpl
mov
xchg
adc
outsl
sahf
push
mov
sub
push
mov
and
xor
pop
popa
call
sbb
jne
lock
test
mov
popf
lret
popa
jo
jae
mov
xor
dec
outsb
and
cmp
dec
outsl
sbb
or
xchg
vpshaq
and
jge
push
adcl
insl
push
in
aam
cmc
push
addr16
adcb
pop
cmp
xor
and
movsl
inc
sbb
nop
std
fwait
push
jle,pn
lret
or
inc
js
fmuls
popf
mov
and
lea
mov
and
loop
xor
dec
stos
inc
xchg
push
idivb
lods
pop
xlat
aam
aad
in
fidivrl
xlat
jl
adc
inc
addr16
mov
pushf
sbb
pop
jo
scas
mov
add
adc
das
dec
xor
adc
mov
inc
push
icebp
daa
xchg
mov
sbb
fstps
test
dec
das
aam
aaa
adc
fdivs
leave
test
push
ficomps
das
dec
daa
jbe
test
or
inc
sbb
std
cmp
add
cmp
enter
and
outsb
cmp
jp
jbe
mov
arpl
cmp
dec
mov
xor
sbb
sbb
aaa
in
or
in
aam
imul
push
cmpsl
xchg
or
dec
xor
push
out
sbb
push
inc
cmp
inc
adc
dec
fisubrs
jne
jo
nop
cmp
and
repnz
fwait
cli
idivb
or
and
js
pop
xor
out
cmpsb
inc
ds
ljmp
pop
leave
add
pop
mov
pop
cmc
push
stos
cld
push
xchg
mov
sbb
and
pop
sti
stc
iret
into
xor
xor
mov
jae
mov
push
scas
sub
aaa
fiaddl
in
sbb
subl
stos
adc
pop
in
fisubrs
sti
mov
fsubl
lret
dec
mov
mov
mov
inc
pop
mov
filds
mov
jle
add
sub
out
imul
in
mov
mov
jge
mov
or
dec
push
sbb
movsb
mov
adc
push
mov
jnp
dec
push
mov
adc
xor
stos
mov
pop
cmpsl
fistps
or
pavgw
lods
imul
or
xchg
ja
int3
das
adc
inc
pop
sbb
mov
pop
pop
xor
xchg
pop
xor
js
rorb
mov
add
bound
adc
adc
repnz
and
outsb
mov
fdiv
jnp
adc
cmp
xchg
test
dec
cmp
jae
sub
mov
es
pop
popw
or
fsubp
adc
mov
push
pop
xchg
idiv
or
push
popa
mov
sbbl
xchg
shll
das
das
or
add
jp
jle
das
lret
aad
aaa
div
mov
add
add
aas
lods
mov
inc
lahf
xchg
cli
or
sbb
or
or
dec
xlat
jb
dec
inc
and
jge
leave
xchg
jmp
mov
xchg
mov
andl
pop
iret
mov
xor
rorl
lock
cltd
cs
push
lock
and
int
std
pop
insb
mov
add
dec
mov
add
lock
cmp
push
inc
test
cmp
sub
pop
pop
rcll
es
int3
jp
inc
mov
mov
push
shr
and
pop
adc
out
fistps
jnp
xchg
in
adc
xor
dec
int3
fcompl
add
inc
sbb
flds
cmp
cmp
call
popa
outsl
mov
mov
sbb
cmpsb
insb
mov
push
mov
push
jge
or
cmp
xchg
adc
push
adc
mov
out
sbb
test
or
cwtl
jg
ret
dec
inc
inc
ret
xchg
popa
add
jne
adc
pop
insb
das
orb
add
jnp
cltd
and
xchg
adc
scas
pop
and
fiadds
jp
xorb
cltd
push
push
cmpsl
mov
les
cmp
push
scas
inc
iret
or
bound
xor
cmp
insb
mov
cmpsl
clc
arpl
push
or
subl
xor
or
mov
lahf
xor
pop
mov
jmp
ds
xchg
loop
int3
pop
add
in
lock
cmp
stc
ret
aam
popf
push
sub
out
jle
popfw
out
sahf
pusha
shll
add
cmp
pop
loope
repnz
in
scas
in
and
mov
add
out
imul
jmp
outsl
test
lods
hlt
jg
outsb
arpl
mov
fcomps
dec
add
inc
jecxz
push
les
mov
ds
roll
pop
test
iret
lret
ret
popf
or
adc
xorl
arpl
inc
jo
ret
mov
or
sbb
sbb
dec
mov
jbe
jmp
cmpsl
and
ja
pop
sbb
subl
xchg
mov
mov
dec
mov
cltd
cmp
outsl
clc
loop
xchg
mov
push
lea
pop
xchg
into
mov
popf
into
inc
inc
adc
pop
ljmp
ret
sbb
jmp
imul
adc
dec
les
mov
jecxz
or
cmc
cmpsl
sub
lods
aad
jnp
and
arpl
adc
dec
and
pop
adc
push
lds
loope
cld
imull
push
pop
je
aad
xchg
xchg
daa
pop
test
sub
dec
ds
shl
adc
pushf
shl
sub
sti
popf
push
mov
cmp
mov
xchg
pushf
and
mov
fistps
repz
pop
aaa
sub
stos
pop
xor
std
subl
mov
add
dec
push
xor
lahf
outsl
pop
fs
filds
and
dec
mov
sub
bound
shl
fbld
cmp
xchg
pop
pop
mov
insb
mov
cs
pop
mov
in
fs
and
pop
aam
adc
aas
xor
je
pop
data16
in
xor
add
add
push
lods
aam
jecxz
jge
dec
int
scas
cs
fldln2
inc
mov
pop
js
ret
push
sbbb
lret
sbb
andl
mov
aaa
mov
int
fstl
fsubr
test
adc
aad
sub
rclb
scas
adc
fcoms
lret
cmp
jns
out
inc
test
stos
movsb
pop
jg
or
js
xor
filds
fs
sbb
cmp
mov
in
push
clc
jg
test
mov
fdivr
sahf
sbb
pop
sbb
lcall
jge
sub
int3
je
inc
sbb
fidivl
out
xor
rcr
outsb
ret
add
lds
dec
or
push
cwtl
negb
or
test
dec
dec
loope
cmc
ja
sub
jg
mov
fbld
aaa
xor
pop
je
cmpb
mov
or
loope
lods
scas
push
sahf
loop
stc
rorl
pusha
add
mov
cs
mov
or
movsb
cmp
dec
outsb
adc
addl
push
pushw
in
sbb
push
in
insl
rcl
icebp
push
xorb
sub
mov
push
cmp
cmc
xor
loop
mov
pusha
dec
sub
pop
rcrb
adc
aad
or
mov
xor
sbb
mov
std
jnp
mov
inc
sbb
lret
jg
test
mov
pop
jnp
jp
fdivl
cli
inc
mov
inc
mov
pop
or
jnp
inc
jnp
imul
cltd
dec
cmp
arpl
fcompl
pop
sbb
sbb
dec
or
mov
lock
xchg
pop
test
lods
fwait
sub
in
xor
add
fdivl
jbe
sbb
les
mov
adc
jg
repnz
scas
jge
jo
cmc
loope
clc
mov
int3
fwait
rcrb
add
and
loopne
dec
mov
aaa
popa
std
mov
pop
and
in
test
mov
test
jecxz
cmp
js
push
mov
pop
inc
jp
xor
int
lds
pop
sub
adc
push
dec
push
enter
sub
nop
hlt
mov
xchg
gs
adc
mov
fcomi
xor
call
outsl
dec
in
in
enter
push
add
dec
fisttpl
or
in
std
adc
addl
loop
shrb
push
add
mov
mov
imul
add
mov
pop
push
push
std
enter
xchg
sub
lahf
or
and
sub
icebp
mulb
cmp
xchg
sub
jae,pt
fimull
or
fnstenv
push
pop
das
ds
push
cmp
nop
out
insl
iret
negl
imul
sbb
xlat
loopne
add
sbb
sahf
mulb
out
les
xor
mov
ss
gs
sti
jmp
jns
mov
and
push
dec
movsl
loopne
ret
mov
mov
js
add
adc
and
or
cli
dec
push
jns
aas
inc
sub
push
adc
push
call
pop
fdiv
jns
rclb
pop
rcll
pop
mov
addps
fdivrs
sub
add
lds
leave
dec
push
sub
enter
imul
scas
pop
daa
pop
xor
insb
push
cld
adc
das
bound
mov
test
andl
ds
aad
out
inc
xlat
cmpsl
add
lret
hlt
rcrb
adc
cmp
fcompl
push
imul
inc
lret
lods
mov
lods
xchg
add
out
dec
daa
mov
pop
int
daa
fld
enter
fidivl
loope
mov
dec
dec
push
or
add
jl
cmp
xlat
mov
in
push
push
pop
pop
hlt
xchg
divb
mov
sbb
pop
push
or
call
ds
pop
jmp
adc
imul
fstp
mov
push
mov
aad
adc
inc
cld
pop
je
ja
pop
lods
xchg
into
call
xchg
lods
add
or
mov
decb
fimull
cmpb
pop
adc
pop
into
cld
ficompl
pop
adc
mov
dec
mov
inc
popa
and
xchg
jmp
pushf
addr16
aas
and
iret
imul
adc
mov
ss
cmp
push
cmpsb
stos
addl
mov
mov
sub
mov
popa
sar
out
mov
and
mov
mov
xorl
imul
into
fcmovnu
fwait
imul
popf
pop
sub
cmpsl
scas
pop
or
or
sbbb
adc
stos
dec
in
jbe
cwtl
lret
ret
and
dec
std
and
cmp
call
sbb
mov
in
jno
mov
xchg
dec
push
adc
in
push
and
sbb
lds
mov
jns
pop
aad
push
jge
aam
push
loop
dec
xchg
mov
jnp
push
aas
cmp
and
pop
dec
imul
cmp
scas
mov
fdivp
rcrb
icebp
lea
repz
xor
adc
or
mov
inc
popa
test
sarl
ja
arpl
gs
jne
or
mov
sub
and
push
andl
jns
imul
dec
stos
outsb
sar
lea
jge
pop
push
xor
dec
and
inc
ja
push
fwait
jecxz
push
repnz
jns
sahf
idivl
aam
mov
adc
jmp
mov
repnz
jns
add
lods
loope
mov
ret
int
jmp
xor
popa
push
out
xor
les
pextrw
mov
or
sub
pushf
mov
imul
dec
mov
popf
call
or
addr16
cwtl
adc
imul
ja
lds
fidivs
movl
shlb
cld
lods
std
mov
movsl
mov
and
stc
pop
mov
popa
sub
insb
sar
inc
dec
mov
mov
mov
shrl
mov
outsl
nop
push
adc
jbe
mov
imul
sbbl
adc
mov
or
shlb
iret
fisubs
jg
das
cld
sub
and
sti
das
in
fistpll
gs
xchg
test
bound
or
stos
jns
das
je
adc
sbb
ds
lds
mov
adc
mov
jecxz
sub
cmpsb
test
inc
push
pop
sarl
xorb
and
gs
decb
cmp
rcll
test
pop
mov
ret
loop,pt
or
hlt
mov
dec
jns
int
adc
cmp
xor
mov
sub
scas
mov
cmp
mov
lock
xor
and
mov
adcb
js
sub
mov
inc
push
mov
jge,pt
push
scas
insb
rolb
pop
ret
adc
ficoml
jmp
pop
rolb
shrl
loop
lods
pop
or
push
pusha
and
cltd
mov
jl
rclb
stos
or
sub
sub
and
mov
fistps
mov
lcall
add
pop
sub
aad
imul
movsb
mov
dec
xchg
sti
mov
in
jno
fidivrl
fidivrs
jb
outsb
arpl
inc
push
dec
sbb
push
repz
rcll
rolb
roll
push
sbb
std
inc
sub
xor
mov
sub
adc
ja
add
es
repz
push
sbb
mov
adc
andb
int3
push
pop
outsl
jmp
push
fstpt
mov
push
scas
fyl2xp1
clc
add
push
pushf
dec
and
inc
sbb
fcom
sbb
cmp
mov
out
jnp
dec
pushf
sub
repnz
ficompl
lcall
mov
outsb
int
mov
adc
cltd
loop
mov
mov
dec
jge
dec
ss
cmpsb
cmp
jg
cmpsl
inc
roll
pop
xchg
pop
sub
fisttpll
les
rol
nop
pop
ds
aam
xor
xchg
lods
sub
or
out
push
stos
arpl
cltd
dec
jnp
mulb
call
pop
loop
mov
lock
icebp
hlt
or
addr16
arpl
daa
cmpsb
add
push
movsl
in
mov
dec
inc
in
hlt
inc
mov
inc
jns
les
mov
lock
xor
sub
pop
scas
aaa
inc
into
mov
pop
jno
fld
mov
aam
xchg
push
pop
xor
mov
mov
orb
in
ret
ret
subb
pop
fsub
dec
enter
jl
cmp
outsl
das
hlt
inc
fldcw
icebp
pop
xchg
into
or
jecxz
stc
inc
mov
aam
mov
mov
jno
leave
dec
cmp
sbb
into
xor
cmovnp
adc
ds
inc
sbb
pop
dec
roll
aas
mov
xor
subl
add
outsl
jbe
push
in
mov
jmp
adcb
xlat
xchg
aas
mov
sbb
and
imul
scas
mov
pop
push
pusha
adc
std
stos
cmpsl
push
lods
and
mov
outsb
xchg
cmp
add
stc
je
nop
leave
cmp
pop
adc
lds
testl
jo
jle
add
arpl
repnz
mov
jb
jecxz
cmp
out
bound
fs
in
pcmpeqd
or
mov
xchg
jns
mov
sbb
or
rcl
pop
outsb
pop
mov
jp
hlt
xchg
pushf
mov
dec
mov
inc
jnp
pop
cmc
dec
mov
adc
testl
mov
aam
lods
adc
shlb
addr16
mov
xor
imul
sbb
mov
lret
fmul
inc
mov
fcmovb
xchg
inc
jmp
sbb
push
sub
jle
fsubrl
or
rcll
jno
inc
icebp
in
sub
mov
sbb
inc
sub
sbb
mov
mov
test
rol
test
in
lock
and
sub
mov
and
push
jecxz
cmp
adc
ljmp
xlat
push
aam
xchg
mov
nop
stos
shl
cli
hlt
adc
scas
push
cmp
imul
or
and
shlb
pop
fbstp
xor
inc
pop
mov
adc
in
pop
xchg
sbb
xchg
mov
jbe
sti
mov
loopne
test
mov
xchg
push
fwait
jmp
int
xchg
mov
pop
mov
lods
aam
sbb
cmpsl
sahf
mov
emms
mov
jo
les
decb
movsl
pop
inc
fcmovnu
stos
test
jl
add
dec
jns
adc
mov
out
jl
sbb
mov
or
lahf
cli
iret
int
sub
js
adc
jns
loope
sub
sti
arpl
jne
add
jl
inc
popf
jl
jge
cmp
je
mov
mov
ja
movsl
repnz
ret
xchg
jmp
clc
xchg
dec
out
and
test
call
adc
push
pop
sar
cs
xor
bound
aam
xor
add
sbb
lahf
dec
fucomip
std
cmp
test
mov
cmc
inc
lds
loop
sti
movsl
cli
xchg
dec
ss
arpl
hlt
imul
pop
cmp
or
jne
inc
pop
stc
jp
dec
sub
loope
xchg
and
movsb
push
rcr
stos
mov
sahf
loop
out
cli
scas
cmp
ljmp
sbbb
xchg
or
push
adc
pop
jle
and
push
mov
insl
ret
pop
fisttpl
adc
lea
inc
pop
sub
mov
fldcw
dec
xchg
adc
jge
xor
ljmp
sbb
fiaddl
xchg
mov
dec
sbb
push
mov
sub
scas
fdivrs
insl
ds
and
lds
mov
dec
adc
subl
xchg
or
mov
lret
mov
icebp
stos
add
adc
dec
jecxz
aas
shrb
bnd
fsubrs
jge
fstps
xchg
jp
and
pop
lret
fdivrl
rcl
insl
push
adc
scas
push
test
jno
sbb
mov
mov
dec
jmp
pop
xchg
fadds
adc
imul
ja
push
pusha
popa
jl
inc
js
mov
and
ficoml
repz
imul
cld
push
fdivr
outsb
pop
sahf
mov
inc
push
jge
jl
inc
inc
xor
fimuls
stos
aas
and
pop
fs
mov
pop
adc
cld
dec
inc
mov
mov
ss
outsb
enter
add
lock
xor
and
shll
movsl
sbb
adc
pop
mov
adc
push
sub
sub
sbb
loop
jne
pop
aas
mul
sub
je
insb
movsb
xchg
xlat
es
xor
lcall
sub
adc
in
inc
xchg
sub
fst
pop
push
rcll
sub
nop
ja
mov
leave
and
mov
cld
cli
gs
dec
push
jmp
jg
jb
sbb
dec
nop
mov
mov
scas
aad
adc
rcrl
sbb
call
test
and
divl
jg
fidivl
mov
adc
mov
pushf
fldcw
and
stos
mov
sbb
add
ret
pop
lahf
mov
mov
pushf
adc
push
xorl
xchg
or
jg
push
pop
push
leave
pop
loop
cmp
stc
xchg
push
lock
mov
insl
adc
ret
mov
cmp
push
mov
fidivrl
mov
and
imul
xor
pusha
inc
arpl
data16
cmp
imul
sbb
cs
add
xchg
pop
faddl
dec
push
mov
mov
adc
jmp
jb
add
mov
test
setns
aam
repz
mov
push
ret
pop
cmc
fildl
jae
jle
sub
popa
or
loop
mov
mov
ss
in
mov
mov
test
outsl
inc
test
xor
mov
cwtl
loope
stos
fsubs
loop
ret
xchg
jne
sub
aaa
lea
in
mov
xor
xchg
inc
nop
dec
cli
xchg
daa
pop
dec
push
inc
xchg
out
in
mov
jne
adc
pop
std
cmpb
das
cmp
lods
or
pop
iret
push
aam
daa
mov
pop
sahf
mov
mov
sub
xchg
stos
mov
push
aad
test
adc
repnz
cmc
mov
adc
lcall
syscall
idivl
pop
idivl
aaa
es
sarl
mov
jle
lea
mov
inc
xchg
fsts
xchg
test
lahf
out
pop
sub
test
push
out
in
sbb
and
jae
sub
lret
push
fsts
inc
inc
pop
xor
sub
fwait
jecxz
mov
mov
xor
fbld
pop
clc
xor
lret
mov
or
test
pcmpeqd
xchg
js
mov
pop
xor
mov
insb
xor
insl
out
arpl
mov
in
mov
add
dec
jl
or
out
out
cmp
cmc
jb
add
mov
sbb
sub
jo
loopne
les
ret
mov
dec
scas
fcomps
mov
mov
outsb
frstor
inc
je
lods
and
test
or
mov
andl
lcall
fiaddl
imul
jl
xor
adc
clc
mov
test
arpl
xor
loopne
sub
ljmp
imul
cmp
mov
sub
xor
scas
fldenv
fdivl
cmp
push
cmpsl
or
in
sarb
pop
lods
loope
cltd
lahf
ljmp
xlat
into
cltd
jge
dec
mov
jae
loop
lods
insb
add
hlt
fsubrs
jg
and
fs
jp
inc
movl
out
div
add
movsb
push
jmp
fstl
push
mov
lock
sbb
dec
fdivrl
sbb
mov
fldl
outsb
push
mov
les
mov
cmp
frstor
mov
ss
push
fnstcw
mov
lds
add
push
adc
pop
aas
lock
mov
out
xor
inc
cmp
retw
cmova
jge
add
bnd
adc
les
jne
push
jnp
addr16
xor
cmp
sbbl
lock
pop
jmp
xor
out
lods
xor
sbb
xchg
fisubrs
scas
xor
dec
ljmp
inc
push
sahf
push
and
data16
push
out
pop
jne
push
enter
or
jns
sub
sub
jno
ljmp
and
out
lahf
mov
pushw
pop
fidivrl
lret
aaa
sbb
sub
cmp
out
cmp
or
add
cmpl
adc
pop
push
mov
test
jp
roll
mov
addl
repnz
call
fdivs
jle
cmp
je
in
jns
notb
lahf
push
and
out
insb
pop
pop
jl,pt
call
sbb
dec
insl
xchg
scas
in
addr16
mov
ja
cs
adc
int3
pop
mov
inc
add
and
ss
movsl
xchg
pop
inc
sahf
imul
cmpsb
loop
dec
imul
pop
fistps
lahf
push
ret
std
pop
cmp
mov
sub
mov
mov
inc
cmp
sub
pop
jne
add
ret
xchg
fs
inc
push
jge
push
test
es
popl
aam
push
dec
mov
setp
mov
sbb
lret
addr16
push
fimuls
sub
xor
fimuls
cmpl
adc
push
inc
jmp
lcall
jno
sub
aaa
or
jmp
push
rcrb
outsl
sub
aam
xchg
bound
xor
frstor
xlat
cwtl
pop
arpl
call
stc
xchg
popa
jbe
stos
loopne
setne
jo
and
mov
jae
cmc
jle
rcrl
ss
add
add
add
sbb
xor
and
cmp
je
iret
xchg
and
pop
mov
sub
lahf
jecxz
cld
push
dec
add
rorb
fwait
popf
push
add
adc
mov
cs
pop
leave
iret
jb
mov
movsb
es
ljmp
imul
imul
hlt
adc
and
dec
fwait
sbbb
push
dec
xor
add
and
cwtl
push
movsb
popa
pop
sbb
cmp
pop
push
sbb
xchg
leave
ja
cltd
ficomps
xchg
jmp
fsubl
enter
sbb
jle
mov
out
clc
mov
lret
jl
cmpsb
xchg
stos
pop
jo
pop
and
dec
xchg
enter
jb
xchg
iret
or
fsubr
pop
sub
push
rolb
lods
mov
xchg
lods
pop
lret
jmp
inc
cmpsb
lods
pop
mov
and
push
mov
xchg
adc
daa
mov
jle
xor
dec
std
enter
andl
movsl
xorb
mov
jecxz
mov
mov
lods
sbb
jecxz
mov
pusha
add
pop
hlt
fwait
daa
dec
mov
stos
int
stc
cmp
cli
inc
fidivl
stos
lds
pop
scas
fdivrs
enter
int3
dec
sbb
sub
icebp
ret
mov
xor
push
xchg
setg
rcrl
sbb
mov
rcrb
ret
in
addb
add
movl
push
xor
or
adc
push
and
dec
push
or
xchg
incl
rcrb
enter
jae
adc
test
lods
das
insl
xchg
dec
pop
movsb
jg
jo
push
stos
xchg
pop
mov
add
cmc
xor
lret
stc
push
dec
addl
ljmp
mov
cmp
inc
aam
jl
je
lahf
jp
mov
insw
bound
mov
add
into
mov
cld
shll
push
cmpsl
push
or
cmpsl
mov
inc
sub
pop
hlt
dec
insb
mul
mov
sbb
cmp
out
push
dec
bswap
mov
ret
pusha
daa
add
insl
lret
push
jae
pushf
mov
stc
mov
sbb
pop
dec
xchg
popf
lret
xor
fimuls
fnstsw
cld
cmp
scas
push
rcrb
mov
jl
mov
dec
call
lcall
aam
add
repnz
bound
jle
and
push
sub
jae
lea
shll
or
pop
mov
lea
dec
cmp
shll
cmp
xchg
pop
mov
rcrl
iret
mov
loop
cmp
adc
fistl
push
cmpsl
js
xchg
mov
inc
jne
pop
mov
push
pop
cmp
daa
jnp
insl
pop
pop
push
or
pop
lods
out
jge
jg
adc
repnz
imul
imul
xorb
mov
mov
dec
gs
xor
jge
inc
push
mov
sbb
push
test
mov
hlt
lods
sub
mov
jp
insb
cmpsl
or
aam
jnp
fldenv
push
sarl
pop
xchg
pop
aaa
std
mov
xor
pop
ljmp
jle
pop
adc
dec
jg
jno
dec
aam
adc
insl
scas
mov
addb
xchg
inc
xor
mov
ret
ret
pop
jns
in
xor
mov
jns
out
pop
imul
ds
sbb
mov
clc
loope
jl
sub
notl
add
ror
xor
mov
xlat
lret
fld
and
imul
mov
and
cs
pop
xchg
fidivl
sub
inc
ret
mov
xchg
push
mov
enter
cmpsl
ja
mov
push
out
inc
push
insl
inc
jo
aaa
inc
scas
enter
shlb
xchg
les
jl,pt
fidivrl
pop
dec
xor
fcomps
cmp
pop
fiaddl
shl
adc
adc
int
ljmp
add
inc
jbe
pop
jmp
fidivrl
mov
in
pop
test
mov
push
mov
fsts
add
sub
addr16
pop
adc
pop
sub
or
cmp
mov
ja
ja
ds
push
xor
push
cmp
or
movsb
mov
pop
sub
xlat
in
and
ja
aas
in
ret
fmull
incb
mov
jg
arpl
mov
cmpsb
push
pusha
mov
test
in
push
insl
ja
ret
jmp
xchg
cltd
xor
inc
stos
lcall
pop
xor
jns
cs
and
push
inc
push
rolb
push
inc
push
mov
fidivs
push
adc
repz
jg
addl
outsl
push
ret
push
jae
lds
mov
xchg
shll
push
add
mov
stos
sub
in
aas
mov
sbb
mov
fisubrl
outsl
pop
mov
int3
lea
ljmp
mov
cmp
dec
and
or
jmp
mov
out
je
loopne
cltd
aaa
movsb
iret
lds
addl
pop
xor
push
inc
les
test
dec
push
and
sbb
push
icebp
mov
imul
sbb
pop
pop
sbb
sbb
mov
push
lcall
stos
pextrw
sbb
lods
adcl
rolb
dec
shlb
pop
xor
fcoms
ljmp
inc
push
pop
cs
daa
pop
xor
jne
mov
push
xchg
aad
adc
cld
je
orb
xlat
adc
jns
sub
sbb
and
out
inc
jl
test
mov
cmpsb
xor
mov
out
push
add
dec
mov
push
push
lret
outsb
stc
sti
inc
test
sbb
out
inc
cmp
dec
fldl
mov
pop
mov
pusha
mov
fldcw
sub
jns
xor
into
in
loopne
int
add
cmp
shll
test
jg
pop
jecxz
cmp
lods
pop
mov
pop
adc
sbb
fsub
test
or
rcrb
cmp
add
pop
imul
aaa
out
lahf
les
xor
stos
jmp
push
inc
dec
jb
and
call
push
test
pushf
mov
shlb
jnp
push
inc
xlat
daa
into
into
js
cmp
sbb
lret
mov
xchg
fwait
xchg
mov
pop
push
push
mov
aaa
ds
dec
ja
xchg
test
or
nop
arpl
in
xor
jp
mov
test
xlat
cmp
pusha
vpextrw
lds
fnstenv
jp
dec
pop
movsb
and
daa
daa
movsb
je
mov
insb
sbbl
push
pop
lret
push
addr16
enter
sub
mov
roll
ret
sbb
leave
mov
or
sub
movsb
fs
push
lods
xchg
int3
adc
leave
iret
popa
dec
xchg
std
stos
int3
dec
mov
mov
adc
mov
faddp
pop
notl
pop
out
sub
movsl
fnstcw
pop
jno
mull
ds
les
pushf
das
leave
mov
mul
pop
mov
rcr
mov
scas
dec
rorl
lahf
sub
mov
push
in
mov
add
inc
gs
sub
push
xor
pusha
mov
dec
mov
xor
sbb
mov
dec
push
jecxz
insb
sarb
push
inc
insl
or
roll
repz
jae
pushf
loop
xor
fnstenv
jmp
aam
inc
lret
add
scas
jp
jecxz
ret
xor
scas
inc
dec
mov
cltd
push
frstor
push
fs
xor
sub
pop
xor
mov
pusha
sub
pop
addr16
sbb
loope
ficoml
or
hlt
pop
out
jmp
mov
popf
in
shl
sub
jne
lcall
cmc
insl
jmp
cmp
cld
in
test
pushf
jl
dec
sub
push
pushf
rorb
data16
sub
ret
or
loopne
fbstp
add
fsts
jg
push
lods
inc
cmp
imulb
xor
outsl
mov
cs
das
mov
push
mov
movsl
dec
adc
jle
jg
popf
pop
int3
pop
push
mov
inc
lahf
lock
push
pop
add
ret
cmpsb
jns
push
fwait
mov
or
xchg
data16
mov
mov
fs
mov
dec
jl
unpcklps
inc
xchg
out
mov
jns
mov
scas
xor
sub
cmp
pushl
xchg
cmc
or
add
in
push
xchg
adc
sub
and
mov
insl
cmp
stos
leave
adc
lret
adc
or
leave
fdivs
mov
fnsave
mov
mov
adc
insb
mov
sbb
xor
out
imul
jb
out
mov
jnp
roll
je
mov
dec
popa
sbb
call
jge
cmp
test
jl
call
mov
iret
pop
lcall
lods
fimuls
push
mov
and
stc
in
lea
sarl
das
out
jbe,pt
pop
add
inc
dec
dec
add
dec
dec
push
sub
xor
sbb
jae
scas
mov
jmp
leave
aad
jmp
movsb
cwtl
pop
lret
std
and
or
mov
inc
lret
int
aad
xchg
inc
repnz
jge
popf
ds
xlat
outsl
ja
pop
push
rolb
pushl
repz
out
jg
shrl
add
pop
xchg
xchg
shlb
sub
jnp
in
and
mov
shrl
pop
mov
into
into
mov
aad
fists
pop
jb
jl
in
gs
mov
xchg
add
dec
or
push
jmp
stc
data16
push
adc
or
lock
shll
pop
fldenv
push
xor
stos
jmp
inc
add
rolb
add
mov
outsb
in
lret
mov
mov
adc
cltd
push
inc
clc
lret
sbb
mov
cmp
out
fsubrl
out
ja
out
mov
xorl
pop
sub
cmovs
jmp
cmc
mov
push
sbb
fwait
xchg
xchg
jne
sub
mov
loop
jmp
adc
push
mov
dec
xor
jge
and
xor
or
les
out
rorl
test
outsl
into
in
pop
repnz
pop
jns
xor
pop
aad
xor
mov
inc
pop
lock
lcall
adc
mov
and
inc
enter
mov
movsl
out
pop
lods
lcall
lret
enter
mov
sahf
xchg
xchg
lret
sub
pop
imul
imul
push
and
jle
in
jnp
ret
ljmp
mov
xor
pop
push
xchg
jnp
fimuls
mov
lds
hlt
int3
jb
sub
jp
xor
stos
push
sub
into
adc
cmp
mov
aad
pop
add
push
xor
jbe
push
rcrb
or
xchg
sti
flds
mov
into
loop
bound
outsl
pop
sbb
out
les
jns
dec
cld
int3
insb
sti
jecxz
add
dec
pop
inc
test
test
mov
lret
and
in
sub
mov
test
std
pushl
xchg
clc
addl
sbb
ret
in
lret
ret
fs
fidivl
jle
sbb
dec
sub
xchg
jl
std
imul
push
cmovae
or
in
daa
sub
das
xor
push
mov
jl
xor
fnsave
nop
sbb
movsb
ret
jbe
xchg
jbe
cmp
sarb
xchg
pop
fidivs
xor
rolb
mov
insl
dec
jmp
mov
xor
stc
pop
outsb
push
rorb
repnz
mov
pop
icebp
mov
xlat
mov
mov
jge
push
or
lea
or
mov
scas
cwtl
iret
or
push
cmp
aas
push
inc
repz
or
movsb
into
imul
fsubrs
sub
bound
loopne
inc
mov
cmpsl
sub
mov
sti
gs
jb
jmp
jmp
movb
push
ss
xor
adc
inc
stos
jmp
test
mov
mov
std
es
inc
out
aam
xor
insl
xchg
aas
cmp
sbb
mov
imull
out
test
mov
mov
push
stos
sub
inc
dec
inc
mov
ljmp
into
dec
fcomps
and
jns
mov
in
jno,pn
xlat
or
mov
push
add
mov
js
dec
sahf
shll
cmp
add
and
xorl
into
out
aaa
lds
ljmp
clc
mov
stc
pop
cmpsb
gs
inc
pushf
add
bound
arpl
roll
rolb
add
inc
sub
icebp
mov
add
fdivrl
push
jge
sub
addb
icebp
inc
in
mov
sub
loop
rol
adc
shlb
dec
cli
icebp
mov
clc
in
leave
push
lret
mov
lods
ret
bound
push
jl
push
mov
fimuls
cld
movsl
sub
cli
adc
xor
mov
imul
push
loopne
roll
push
xchg
int3
or
popf
xor
in
push
jnp
insl
cmc
mov
push
pop
pop
pop
mov
xor
mov
cwtl
bound
jg
mov
xchg
sbb
add
out
sub
enter
gs
aaa
hlt
imull
pop
lahf
xlat
imul
mov
jbe
cmp
sbb
mov
sbb
and
addl
dec
and
xchg
dec
mov
stos
negl
sahf
cmp
and
mov
out
xor
rcll
inc
add
sbb
or
pop
jmp
dec
popf
test
loop
push
je
xor
mov
xlat
dec
rclb
shrl
xor
sub
shlb
pop
std
out
popa
mov
push
fwait
imul
outsl
in
fadds
in
mov
pusha
inc
test
sti
jae
mov
mov
sbb
stc
jle
mov
and
pushf
cwtl
adc
rolb
pop
test
ret
in
mov
add
pop
fistps
mov
xchg
xor
dec
cmp
ss
fisubs
sub
mov
test
stos
mov
imulb
pop
sbb
nop
cli
stos
and
sbb
mov
and
imul
cs
jo
addr16
add
mov
push
cmpsl
push
push
andb
inc
scas
fistpll
lret
xorl
dec
mov
adc
js
test
xor
shll
push
out
js
repnz
cld
andb
loopne
pop
in
dec
mov
xchg
ret
add
xorb
mov
aad
lods
rcrb
cmpsl
cmp
mov
out
pop
inc
in
sub
inc
jle
loop
jno
xor
adc
inc
std
pop
xchg
outsb
aad
mov
sbb
lds
dec
lea
mov
mov
ficomps
les
aad
imul
stos
loop
mov
shlb
int
cmpsl
mov
and
and
sub
out
push
in
adc
mov
mov
std
ret
adc
rcr
cmp
mov
movsb
or
inc
in
jle
cmpsl
rol
aaa
iret
leave
push
lds
jbe
or
adcl
push
sub
pop
cmc
fmulp
mov
mov
and
xlat
mov
dec
mov
mov
mov
jb
or
shlb
cli
and
inc
jns
jge
dec
mov
xchg
lret
int3
lods
cli
xchg
es
int3
rcrl
imul
dec
adc
mov
inc
mov
cli
push
lods
repz
and
push
and
mov
cmpsb
pop
push
or
xchg
shlb
sub
lods
jno
cmp
mov
xlat
xchg
fsubrs
aad
arpl
movsl
mov
stos
jae
add
mov
ja
rcrb
lahf
inc
loope
mov
insb
popf
into
lock
adc
adc
inc
inc
cmp
pop
leave
cmpsl
dec
enter
cmp
in
aas
in
lock
mov
std
jae
mov
mov
mov
sbb
adc
popf
sub
mov
pop
adc
leave
inc
repz
and
jbe
shlb
cmp
insl
movsb
xor
bound
sub
push
or
mov
sub
push
lds
mov
call
xchg
push
sub
or
dec
aam
mov
out
sbb
mov
test
fidivrs
xchg
pop
and
inc
sti
frstor
mov
xor
add
jo
inc
lahf
dec
mov
push
or
repz
pop
add
lods
add
jbe
jno
dec
add
movsb
adc
movsb
push
push
xsavec
push
add
sbb
insb
nop
gs
loopne
xchg
xor
cmp
jmp
inc
xor
push
or
push
mov
mov
xor
mov
xchg
add
push
add
push
insb
and
sub
and
popa
mov
les
adc
hlt
mov
lods
and
sbb
push
jge
jge
jge
mov
push
xchg
dec
jo
mov
aam
jl
cs
or
xlat
push
inc
div
pop
fiaddl
aad
push
inc
inc
aad
mov
fs
test
and
mov
repz
fwait
pop
push
cmp
jmp
pusha
int3
or
addr16
mov
or
push
jp
add
jno
jmp
xchg
cmp
das
setns
mov
jbe
fwait
lahf
les
jae
xchg
pop
inc
push
shl
push
pop
outsb
add
ret
popf
add
mov
dec
call
cmp
push
add
fyl2xp1
scas
add
adc
std
clc
cltd
sbb
jae
pop
int3
in
inc
jbe
fsubrs
cld
fs
or
daa
imulb
subl
negl
adc
out
int
mov
ljmp
in
and
mov
add
fidivrl
movsb
sub
push
shlb
cmp
dec
lods
xchg
mov
push
pop
icebp
xchg
aad
cld
xchg
mov
test
aas
xchg
pop
loopne
lods
filds
testl
cmp
aaa
xlat
inc
jle
pop
std
cmp
clc
mov
jecxz
dec
int3
rcl
jmp
pushf
dec
movsl
cmp
push
popa
push
inc
pop
in
add
mov
dec
pop
dec
in
inc
jmp
dec
pop
out
and
inc
bound
jns
pop
insl
nop
xor
xchg
push
imul
int
mov
sub
and
mov
push
leave
dec
adc
mov
outsb
dec
cmp
mov
mov
test
jne
cmc
cld
lret
mov
add
mov
jnp
mov
pusha
mov
lahf
jmp
jno
imul
pop
movsl
adc
cmpsl
lods
scas
or
dec
dec
add
ret
inc
mov
or
test
jbe
scas
fs
pop
imulb
fwait
ds
xchg
mov
inc
add
repz
das
xchg
mov
lock
insb
pusha
int
lea
shll
push
xor
jmp
pushf
mov
push
movsb
cvtps2pi
mov
in
cmpsl
lods
out
xchg
aas
inc
push
rorl
test
inc
or
lahf
gs
xchg
sarb
mov
fisubs
jno
sbb
loope
mov
leave
push
jae
jmp
scas
mov
mov
or
shll
arpl
icebp
mov
xchg
inc
mov
lret
xor
mov
shlb
or
add
std
and
mov
push
test
xchg
test
xlat
or
shr
pop
aam
mov
pop
cmpl
scas
enter
je
pusha
push
cwtl
shlb
sub
add
mov
xor
pop
addr16
cmovl
xor
jbe
lock
mov
inc
lock
mov
pusha
ss
fwait
inc
push
lods
loopne
sbb
imul
or
pop
xor
call
hlt
std
sbbb
cmp
es
or
lcall
repnz
xchg
lret
pop
das
fwait
push
imulb
or
repnz
mov
mov
into
lret
xor
das
fcomps
xchg
inc
mov
inc
repz
fwait
or
cmp
bound
and
mov
cwtl
sti
mov
cmp
aas
in
mov
nop
aam
jne,pn
stos
dec
push
sbb
ds
mov
arpl
and
inc
je
sub
pop
lea
lcall
imulb
push
cwtl
xor
inc
push
cli
add
cltd
inc
fwait
xchg
mov
aas
mov
jg
and
xchg
outsl
out
push
jno
xor
push
dec
arpl
ss
mov
shl
repz
sub
lea
lods
sbb
pop
and
hlt
andb
push
push
cmp
mull
cld
scas
push
rcrb
loope
adc
popf
bound
xor
sahf
push
adc
sub
xor
adc
xor
std
fnstsw
out
sbb
xchg
fdivrl
push
in
mov
or
in
pop
or
xchg
mov
mov
add
mov
jno
ss
mov
mov
rclb
cmpb
push
aas
nop
dec
stos
jb
cmp
xchg
rcll
in
inc
nop
js
fwait
je
adc
loopne
mov
dec
mov
adc
lods
test
sbb
xor
xor
scas
xchg
cmp
leave
ficompl
mov
xchg
in
jbe
push
xor
push
fwait
cmpl
pop
dec
sahf
ss
and
arpl
cmc
je
test
lods
dec
adc
xchg
loope
fidivs
xor
dec
nop
inc
sarb
fsubl
rcrl
mov
lcall
in
test
dec
mov
repz
push
push
fstpl
mov
cmp
mov
scas
xchg
and
add
mov
cmpsb
pop
pusha
add
mov
popf
dec
jp
in
in
insl
in
sbb
push
adcb
out
cmp
add
jo
push
mov
or
pop
dec
dec
aad
mov
sub
and
mov
stos
jb
dec
pop
xor
mov
dec
jns
ret
mov
ss
xchg
jecxz
out
test
inc
into
xor
adc
jae
adc
icebp
in
mov
int3
mov
lods
mov
orl
dec
popa
jb
lahf
nop
outsl
adc
sbb
inc
and
gs
bound
cmp
aad
jns
dec
inc
sub
mov
xchg
dec
mov
lea
cwtl
int3
cmp
pop
push
insb
jle
pusha
cmp
fsubrs
cmp
push
and
fildll
and
dec
xor
mov
jmp
mov
lea
sbb
jl
flds
push
repnz
push
mov
jle
sahf
fildll
dec
shll
ja
and
jmp
add
cmp
sar
push
xchg
stos
loopne
jg
xchg
jo
mov
or
testb
lret
cli
push
test
aad
xchg
jne
jno
out
inc
pop
enter
notb
mov
ljmp
dec
mov
push
xchg
push
push
xchg
dec
xor
sbb
shrl
movsl
test
popf
mov
adc
test
bndldx
inc
repnz
inc
add
xor
mov
stos
shrl
adc
dec
out
mov
push
std
xlat
lea
push
and
xchg
cmpsb
aam
test
or
je
jl
sbb
int
jmp
xchg
outsb
pusha
imul
cmp
in
mov
adc
aas
addb
inc
rorl
push
fisttpl
xchg
mov
clc
mov
mov
inc
mov
add
push
pop
lods
bound
sub
pop
outsb
popa
imul
and
subl
pop
addr16
push
fdivrs
pop
inc
lret
cmp
lods
sti
gs
or
jno
arpl
lds
ficomps
xchg
sti
les
iret
cmp
test
iret
mov
fwait
leave
mov
std
sti
fadds
mov
stos
cmp
test
or
aas
aad
jnp
pop
movsb
mov
xor
push
pop
cmp
mov
adc
imul
push
std
or
push
pushw
xlat
push
pop
fstpl
jl
and
cmp
adc
mov
xchg
xor
arpl
ja
mov
int
xacquire
jle
and
js
jo
lcall
or
cwtl
push
push
inc
cmpsb
adc
pop
loope
add
inc
imul
popa
outsb
sbb
in
das
ja
adc
sbb
pusha
adc
mov
and
lods
lods
mov
inc
sbb
cmpsl
pop
adc
adc
sub
scas
inc
add
cmc
mov
andl
lods
int3
adc
jl
cld
aam
pop
cwtl
mov
pop
lret
or
test
jg
test
adc
mov
fldl2t
outsb
mov
loop
pop
mov
shrb
push
shll
scas
repz
test
and
add
in
je
xchg
or
pop
lods
in
cs
jmp
stos
and
aas
lret
lods
arpl
or
sub
jnp
iret
or
pop
loope
pop
or
in
and
rclb
fiaddl
sub
test
sub
push
stc
add
mov
inc
outsl
dec
mov
dec
aad
jae
sub
fs
lret
xor
or
pop
rcrb
mov
ret
inc
call
loope
repnz
xorb
cmp
xlat
hlt
je
xor
scas
fadd
and
rcrl
xchg
jns
shrb
xor
inc
sbb
inc
into
enter
leave
sahf
repz
lock
mov
pop
xor
subb
sub
push
lret
mov
pop
cld
imul
dec
sar
aad
jecxz
lods
cli
fsubs
push
test
sub
inc
es
je
dec
add
mov
shlb
cmc
sbb
adc
call
jb
pop
and
fimuls
and
xor
scas
sub
roll
call
sub
das
mov
sub
push
and
std
sub
test
scas
pop
rcr
xor
inc
and
cmpsb
adcl
or
outsl
dec
pop
push
mov
notl
dec
mov
push
push
jo
int
jne
fistpll
mov
xor
pushf
shll
mov
sbb
push
jns
mov
js
sbb
lods
inc
mov
clc
sbb
aaa
fdivl
cmp
scas
push
sti
mov
and
je
sbb
or
fwait
jmp
in
xchg
mov
dec
in
sti
mov
popf
sub
das
sbb
mov
loop
lret
arpl
fxch
outsl
inc
add
es
loope
fucom
enter
loop
fcomps
xchg
sub
sub
aam
sbb
stc
jnp,pt
pop
pop
fadd
sti
je
push
aaa
push
mov
jb
dec
fisttpll
fistpl
and
mov
or
fsts
push
jns
fsubp
mov
push
or
inc
adc
shll
insb
shlb
jl
inc
movsl
jne
std
fcoml
pop
int3
xchg
les
movl
push
les
cli
mov
fmuls
or
cwtl
pop
out
cmp
or
daa
inc
rorw
idivb
jle
scas
mov
notl
dec
or
mov
in
cmp
enter
pop
xchg
iret
pop
neg
js
or
pushf
imul
sub
push
mov
test
and
imul
insb
scas
jo
notb
add
pop
fistpll
jae
jmp
add
data16
das
pop
mov
jecxz
das
xor
test
in
pop
sbb
fwait
pushl
or
stos
and
movsb
jo
cmp
pop
and
xchg
lahf
add
mulb
inc
sub
fstps
pop
dec
popf
push
in
add
ds
jbe
and
aam
mov
aam
jecxz
xchg
in
out
rolb
mov
int
out
test
mov
adc
push
insl
iret
pop
dec
mov
cmp
arpl
leave
leave
add
pusha
ljmp
fs
mov
loopne
mov
jg
call
push
fcom
xchg
testb
and
pop
cmp
pop
enter
xchg
subb
dec
leave
test
xor
movsl
test
lret
inc
mov
push
xchg
aas
sub
push
ds
mov
outsl
mov
mov
cmp
adc
bound
scas
jle
xchg
popf
scas
xor
jle
jae
cmp
xchg
push
js
pop
pop
jecxz
mov
mov
adc
dec
movsl
jp
pop
lcall
gs
inc
pushf
andb
out
push
push
sub
sub
jp
mov
mov
imul
lcall
nop
pusha
out
or
leave
lods
aas
mov
sub
dec
pop
bound
push
mov
pusha
add
cmc
cmpsb
mov
pop
stos
mov
cltd
stos
jmp
jnp
xlat
adc
jl
pop
mov
or
stos
lcall
jbe
push
sbb
mov
pop
insl
jge
xor
cs
rcl
xor
hlt
push
ret
add
or
popf
mov
movsb
adc
inc
push
and
push
out
stc
fldt
into
pop
movsl
push
mov
dec
add
aam
push
out
jge
stos
jne
cmp
mov
lds
lock
cmp
xchg
mov
mov
dec
daa
das
bound
mov
mov
and
push
cmc
jb
sbb
add
test
dec
call
mov
lock
jmp
sti
lret
mov
les
mov
and
adc
movsl
mov
sub
insl
adc
dec
cs
push
sti
push
lret
or
sbb
aaa
cs
cmpsl
dec
icebp
or
clc
inc
mov
shl
imull
int
cld
int
push
mov
push
pop
jnp
xchg
xor
lret
mov
pop
dec
xor
add
pop
popf
imul
fidivrs
ja
js
fldcw
push
aad
test
push
lahf
adc
cld
sti
cwtl
das
cltd
add
mov
jp
enter
shlb
aas
scas
jo
loope
push
int3
add
ss
inc
outsl
or
adc
mov
inc
xchg
add
and
xchg
scas
add
mov
fs
mov
dec
mov
jo
dec
and
push
aad
ret
mov
adc
and
dec
xor
int
dec
mov
push
sub
inc
dec
hlt
or
daa
or
in
mov
dec
cmp
push
cmp
sti
pop
bound
repnz
repz
mov
setg
scas
pop
fwait
in
xorl
jbe
sub
hlt
xchg
xchg
xchg
pusha
adc
adc
dec
and
and
inc
sub
pop
pop
sub
and
jno
out
sbb
inc
sbb
mov
adc
cltd
daa
aam
test
les
pop
sbb
movsl
push
popf
lea
jb
sbb
push
mov
nop
dec
lds
shr
je
fistpl
ljmp
mov
cmp
or
jle
sub
xchg
inc
jne
das
xor
mov
mov
xchg
in
push
icebp
outsb
mov
scas
sub
push
imul
jb
mov
repnz
andl
dec
lea
fs
cs
lahf
or
cmp
push
and
jecxz
popa
rcll
mov
push
or
sti
sbb
jb
xchg
mov
jmp
idivl
push
mov
xor
fcoml
xor
push
int
test
mov
fadds
inc
cmpsb
xchg
dec
fstpt
mov
mov
pop
mov
jecxz
mov
bound
test
jns
insl
cli
push
iret
inc
mov
sbb
pop
sbb
mov
test
or
xchg
jo
mov
add
inc
mov
add
stos
outsb
in
stos
je
rolb
cmpsb
add
pop
mov
in
sub
pusha
pop
push
jge
enter
inc
mov
and
mov
mov
adc
cmp
add
sub
sbb
cwtl
insl
mov
lea
mov
jmp
scas
pop
cmpb
andb
in
enter
lcall
xor
outsl
mov
gs
bnd
arpl
notb
icebp
dec
sbb
dec
outsl
sbb
bound
shll
xchg
aaa
xchg
cld
add
sub
test
popf
shrl
jecxz
pop
or
jecxz
mov
jp
sti
sub
push
popa
cmc
push
outsl
add
cwtl
sub
add
cli
mov
pop
mov
inc
incb
inc
and
les
push
mov
cltd
pushf
daa
outsl
lcall
and
mov
jne
sub
push
scas
lds
mov
add
aam
sub
int
xchg
and
mov
push
dec
cs
inc
roll
dec
pop
mov
movsb
dec
clc
loop
xchg
ret
mov
in
push
femms
orb
push
fistpll
mov
out
dec
cmp
ret
cld
and
shr
sarl
pushf
sub
lahf
lahf
icebp
mov
ja
sbb
gs
lds
jns
repnz
jne
jg
xchg
add
pop
fs
das
shlb
ret
sub
jmp
pop
xor
pop
shr
test
lahf
jbe
sbb
xorb
bound
shrl
inc
and
insl
adc
mov
add
lods
icebp
pop
and
dec
cltd
push
mov
test
cmp
dec
in
mov
iret
add
leave
push
mov
loope
dec
hlt
imul
std
sub
fwait
mov
xor
push
pcmpeqw
fs
imul
xchg
or
dec
fisttps
popa
int
or
pop
or
sub
pop
jecxz
adc
inc
pop
lea
mov
lods
cld
scas
pop
pop
outsb
lret
out
inc
xlat
adc
sub
jmp
cmpps
xor
out
aas
dec
mov
popa
mov
negb
jmp
xchg
jb
test
cld
fimull
xchg
rolb
arpl
sbb
loope
cmp
daa
pop
jecxz
xor
test
outsb
subb
pop
dec
int
mov
fisttps
mov
or
sbb
stc
mov
xchg
add
orb
out
cmpl
jge
ret
sub
mov
movzwl
out
fwait
mov
mull
mov
or
xchg
imul
xor
sbb
dec
mov
loopne
es
dec
movsl
cld
mov
fcmovnu
pop
in
dec
mov
aaa
insb
out
andb
nop
dec
ficoml
outsl
and
sub
or
jb
mov
cmp
imul
mov
leave
pop
cmp
mov
aas
mov
scas
inc
addr16
xcrypt-ofb
lea
xor
movsl
cwtl
movsb
xchg
xor
cmpsb
repnz
loopne
les
adc
jmp
push
push
xchg
adc
push
pop
sti
adc
aaa
mov
jns
adc
mov
imul
add
mov
cmp
sarl
dec
cmp
jecxz
push
addr16
xor
xchg
sub
cmc
mov
ljmp
xor
int3
push
mov
or
clc
dec
lcall
sub
stos
inc
push
mov
out
and
aam
adc
push
and
ja
lea
xor
fs
outsb
xchg
sbbl
sub
mov
or
sub
lahf
dec
clc
add
je
fdivrs
pushf
mov
out
jbe
movsl
daa
mov
adc
nop
loop
or
cmpsl
mov
lret
cmp
outsl
fcmovb
pop
std
mov
mov
mov
xchg
lea
popa
test
imul
mov
push
pop
pop
int3
adc
repnz
mov
and
imul
gs
insb
jnp
sbb
scas
idivl
fwait
cmc
mov
mov
xchg
or
or
stos
pop
cmpsl
push
clc
mov
fisttps
aas
aam
aam
jae
aam
je
cmpsl
and
stos
es
or
mov
sub
mov
aas
popf
sub
jmp
lahf
jne
inc
popf
and
adc
jb
cmp
xor
nop
push
leave
sti
add
pop
popf
and
adc
push
aas
add
pushf
jg
dec
mov
cwtl
scas
imul
pop
mov
or
jns
movsb
pop
ljmp
lret
cmp
aaa
xor
cmc
and
cmp
sarl
ror
dec
lds
mov
xchg
das
mov
sbb
jle
push
call
dec
lds
xor
adc
stos
sub
into
insl
into
mov
jae
leave
mov
mov
imul
adc
loope
shl
icebp
pop
add
xor
dec
lds
inc
add
jae
scas
leave
jb
mov
cmp
xchg
jno
fs
adc
xor
jb
push
and
dec
sub
lock
cmpl
adc
leave
push
xchg
add
lods
push
push
inc
insl
adc
sbb
adc
pop
dec
sbb
pop
sbb
in
out
shrl
add
fidivl
push
add
sti
mov
adc
in
adc
cmp
inc
lock
test
mov
das
in
jnp
ja
cmpsl
roll
pop
in
adc
hlt
push
jle
sahf
lret
mov
inc
cmp
jge
pop
sub
xchg
mov
sti
loopne
mov
aad
jl
sarl
inc
jns
sbb
adc
xchg
pop
and
ss
xor
out
jecxz
xor
sbb
lret
test
dec
lahf
loopne
sub
or
cld
notl
adc
sbb
rolb
cmc
mov
pop
push
fstl
clc
lcall
shlb
arpl
mov
add
inc
sbb
jle
insb
mov
or
inc
aad
xor
bound
aaa
mov
inc
shrl
dec
pop
sbb
aas
pushf
cs
jnp
pop
lock
mov
cmpl
push
inc
lret
loopne
frstor
data16
cmp
cs
aam
adc
inc
sbb
fisttpl
je
pop
andl
jmp
fbld
push
xor
mov
pop
pop
loope
outsl
pop
xchg
push
mov
push
ja
rorl
add
or
rcr
cmp
outsl
mov
sbb
add
and
xchg
insl
xorl
inc
leave
mov
out
push
mov
sub
lea
push
addl
xchg
pushl
enter
xlat
mov
sub
push
lock
jne
jmp
outsb
inc
sub
call
cltd
jne
cltd
popa
loope
fcompl
sbb
inc
lret
and
pop
andl
int3
cltd
mov
jns
pop
xor
int
push
loope
pop
cld
aam
jg
mov
imul
sbb
outsl
or
cmp
dec
dec
pop
dec
cli
jo
movsb
adc
cwtl
lds
in
xchg
push
or
loope
xchg
fildl
sahf
icebp
inc
fistpll
jmp
mov
mov
jbe
mov
mov
fisttpl
and
jp
rclb
aas
sub
and
in
sbb
mov
mov
sti
inc
pop
sbb
fidivrl
add
push
sbb
cmc
mov
jg
roll
jg
xchg
cld
insl
adc
idivb
push
imulb
out
jns
movsl
loopne
in
xor
mov
stos
jp
daa
pop
xchg
mov
jae
adc
inc
lock
aas
pop
lahf
fwait
lahf
mov
mov
xor
rcrl
js
fcmovnbe
xchg
and
test
fisubs
bound
test
lahf
out
insb
lret
aaa
scas
out
mov
clc
mov
push
pop
iret
adc
push
pop
je
test
int
roll
into
lahf
mov
out
leave
pop
ss
imul
cli
or
aas
add
dec
pop
xchg
push
xchg
xchg
sbb
pop
in
cmp
mov
inc
mov
push
and
fisubrs
lea
pop
push
pusha
int
sub
push
je
xchg
cmp
into
das
adc
inc
pop
int3
add
xor
clc
addb
lret
cmc
mov
imul
add
scas
xor
push
mov
js
push
enter
jns
and
mov
jecxz
push
testl
push
gs
arpl
dec
scas
and
pop
cli
pop
cmpsb
js
bound
es
push
mov
js
std
and
je
xchg
xor
mov
jo
adcb
lret
int3
dec
pusha
mov
cs
repnz
addr16
pop
and
sbb
jp
test
inc
mov
dec
loop
jno
fistpl
call
and
mov
scas
push
and
aas
mov
mov
mov
nop
mov
xor
or
dec
inc
jge
adc
jp
les
fbstp
sbb
sub
out
les
pop
scas
xor
mov
xchg
rcll
add
adc
shlb
test
ret
xor
add
int
adc
mov
and
cmp
lds
outsl
lret
loop
mov
daa
fsubrs
iret
ss
popf
pop
adcb
sti
push
cld
push
add
mov
es
mov
fnstsw
fnsave
cwtl
cmpsb
and
cmpxchg
sub
shrl
nop
xchg
andl
cmp
out
leave
leave
xchg
and
dec
inc
dec
mov
cs
push
push
xchg
cmpsl
sub
outsl
int3
jbe
cmp
mov
jbe
out
out
mov
repnz
fwait
add
mov
decl
test
jl
jecxz
sub
xchg
ficoml
xor
mov
jecxz
push
inc
cmp
into
nop
sub
aam
dec
cmp
cmp
mov
mov
mulb
fisttpl
sahf
jmp
mov
mov
mov
cmpsb
out
nopl
mov
sub
jp
xchg
push
ljmp
sti
xchg
mov
in
ret
jp
and
insl
outsl
and
loopne
sub
je
and
dec
inc
mov
pop
aaa
loop
dec
aad
sub
cmp
push
xor
sub
xlat
jb
push
add
dec
add
xchg
test
push
mov
or
test
mov
xorl
sub
shll
inc
ja
adc
ret
mov
sub
aas
and
mov
outsl
dec
in
std
repnz
movsl
mov
aam
mov
bnd
out
in
jno
insb
push
test
mov
dec
out
shll
xor
cmp
idivb
push
mov
fiadds
xchg
call
inc
test
add
xor
xchg
aas
movsl
or
fcoms
dec
mov
aad
add
add
xor
pop
dec
nop
cmp
addr16
lret
sbb
mov
push
pop
call
bnd
add
sbb
jnp
insl
xor
cmp
test
notl
mov
cmp
sub
sub
or
enter
adc
xchg
push
insl
cmp
lock
add
fdivr
mov
fs
adc
dec
pushf
fwait
pushf
jnp
cmp
nop
loope
bound
movsb
int
or
call
pop
aas
add
flds
mov
movsl
enter
gs
mov
push
mov
inc
mov
mov
or
add
inc
into
stos
push
rcrb
bound
lods
sub
inc
js
in
and
dec
fs
hlt
push
push
adc
mov
pushf
lret
mov
or
inc
mov
imul
insb
pop
test
mov
jecxz
and
mov
cmp
cmp
mov
es
mov
jno
xchg
jp
push
sahf
sub
mov
sub
pop
pop
xor
push
popf
dec
mov
xor
mov
cwtl
cld
jecxz,pt
test
xor
push
in
dec
lahf
jg
xor
fdiv
ja
inc
pop
rolb
loopne
insb
mov
test
inc
mov
sti
xor
xor
js
pop
lcall
inc
and
outsb
rcl
ja
icebp
mov
mov
lods
push
inc
xchg
popa
in
insb
data16
add
inc
xchg
adc
cwtl
cmp
leave
mov
fstps
idiv
shl
lahf
fcompl
and
ficoms
push
adc
cmpsl
loope
cli
mov
lret
stc
aad
aas
cmp
stos
out
in
fldenv
stos
jge
or
sub
mov
shlb
gs
push
xor
lret
mov
jae
out
xor
cmp
pop
scas
inc
stos
dec
pusha
arpl
inc
dec
jno
js
imul
in
notl
jmp
repz
mov
or
popf
bound
xcrypt-ecb
test
sbb
xchg
push
add
fdiv
stos
adc
xor
mov
xor
or
xor
test
jns
jne
outsl
je
jg
pop
das
inc
and
bound
lret
gs
cmp
outsl
mov
repnz
lret
insb
jg
pusha
icebp
cmp
aam
ss
jmp
popf
aaa
stc
sub
adc
mov
lods
js
xlat
stos
inc
xchg
xchg
adc
jecxz,pn
xlat
subl
mov
or
stos
aaa
push
ljmp
nop
repnz
std
sbb
pop
mov
jecxz
hlt
sbb
sbb
aas
cmpsb
push
test
and
ja
inc
lahf
cmp
xor
scas
hlt
inc
ljmp
add
in
xor
sbb
les
add
mov
sarl
jne
sbb
out
xchg
cmpsb
and
movsb
pop
ficompl
scas
into
inc
dec
test
and
add
stc
pop
sub
dec
in
mov
and
mov
mov
jo
filds
mov
jge
sarb
lret
inc
inc
push
dec
inc
pop
push
lret
movsl
xchg
add
jl
int
xor
popf
and
test
lea
les
movsb
and
nop
lretw
ret
pop
movsb
push
jae
in
push
jbe
test
lcall
cltd
lods
inc
xor
into
sub
ljmp
sti
xchg
xchg
lods
fisttps
push
pop
cli
imul
jg
aaa
call
fwait
xchg
imul
scas
lds
outsl
popf
psubsw
or
aas
or
daa
aas
pop
and
insl
xchg
stos
ret
mov
shl
sub
das
mov
sbb
jno
xor
pop
loope
ror
mov
imul
xor
gs
lea
jne
cwtl
cmpsl
mov
push
icebp
sti
mov
leave
iret
call
mov
lahf
adc
pinsrw
jns
roll
and
inc
jp
cwtl
es
stos
mov
mov
push
outsb
sbb
aas
inc
movb
gs
cmpsb
add
jno
sub
adc
pop
sbb
add
xlat
jg
test
xchg
imul
mov
push
insb
insb
sti
cmp
pop
xor
sbb
data16
pandn
jno
aad
dec
xchg
orb
lahf
xchg
adc
cmp
dec
test
mov
pop
xchg
sarl
and
adc
xlat
push
mov
das
test
lock
cld
jge
test
jb
push
push
loope
lcall
cmp
gs
cltd
jmp
lea
fwait
and
lahf
ljmp
aad
ret
sbbl
jne
in
jnp
sahf
les
add
das
inc
mov
ljmp
mov
pop
dec
clc
aad
pop
inc
cmpsl
mov
lods
notl
pop
lds
je
adc
xor
clc
add
adc
movsl
cltd
mulb
mov
pop
xor
fdivl
jecxz
sbb
or
in
add
not
psrlw
cli
lods
adc
xchg
xchg
or
jg
popl
mov
xchg
pop
xchg
pop
aam
mov
ja
add
ret
adc
mov
ljmp
xor
lcall
and
outsb
cs
jg
shll
mov
sahf
ss
mov
sbb
mov
jno
in
mov
cmp
dec
shrb
sysexit
fwait
add
int
in
mov
sbb
jmp
cld
aam
push
cli
cmp
iret
dec
stc
xor
jmp
lods
push
mov
inc
mov
or
xor
dec
xchg
mov
xchg
sbb
xchg
mov
jb
xor
jae
xor
push
stc
out
fidivrs
add
mov
mov
std
cld
sbb
mov
sbbb
rolb
rorl
dec
lahf
push
adcl
imul
mov
inc
add
xchg
inc
xor
aas
adc
cmpsb
mov
cmp
cmpl
push
rcrl
cmpsl
ret
call
test
leave
push
cmp
stos
push
repnz
je
aas
adc
fcomi
mov
push
sub
clc
push
mov
sti
add
jnp
in
xchg
addr16
sub
lret
cmpb
jno
in
stos
das
jg
addr16
test
xor
orl
int3
je
in
in
insb
rorl
inc
repnz
mov
or
xor
push
jbe
add
loopne
push
or
inc
outsb
lods
in
push
mov
sarl
or
hlt
xlat
movsl
pushl
sahf
dec
cmp
cltd
add
xor
ljmp
cli
leave
dec
fs
sbb
jg
ret
std
out
adc
lods
cltd
int
fwait
data16
divl
xchg
out
mov
bnd
sti
outsl
mov
popl
lcall
dec
lcall
mov
and
jmp
push
cli
and
shrb
adc
dec
imul
iret
das
add
arpl
or
test
push
je
sub
mov
and
adc
call
out
out
push
push
cwtl
mov
adc
push
push
js
xchg
inc
jno
int
aam
icebp
lret
xchg
adc
adc
addr16
jo
add
mov
push
xor
mov
and
rcrl
js
jl
hlt
fwait
stc
dec
sbb
js
arpl
or
jl
test
lret
cli
xorb
xor
mov
in
add
js
push
or
mov
iret
ljmp
ds
adc
lahf
mov
jb
mov
push
shrb
ljmp
lahf
scas
jb
test
mov
es
pusha
xor
inc
xchg
push
sbb
and
xchg
orl
orb
es
call
mov
mov
js
inc
jl
push
or
aad
pop
and
jb
push
cmpsb
push
ret
inc
lods
sbb
rorl
sbb
shl
sbbl
imul
or
pop
push
std
dec
xor
movsl
mov
into
jecxz
or
out
fstl
or
jecxz
in
push
or
jg
rcll
push
test
push
or
repnz
adc
clc
xchg
pop
cmpsb
jo
das
cld
cmp
sbb
push
fsts
fwait
push
pop
test
lods
inc
push
je
mov
sahf
mov
test
inc
pop
sti
aam
sti
cmp
fs
pop
shlb
and
jo
mov
out
call
mov
lahf
inc
out
push
cwtl
adc
mov
add
decb
xor
test
imul
push
pop
mov
cs
mov
push
sub
in
jle
cld
cmpsl
outsb
cmp
fcmovu
pop
mov
inc
mov
test
jmp
and
mov
icebp
inc
push
sbb
cmp
sbb
repnz
nop
stos
bound
cwtl
pop
iret
lret
int3
int
xchg
notl
jl
mov
or
push
jmp
xchg
and
out
inc
test
cmp
rorb
xor
sbb
mov
xchg
or
sbb
push
mov
fisttpll
jmp
jge
imul
mov
addr16
scas
jo
jg
fimuls
push
jmp
pop
jge
inc
jge
mov
loop
xor
and
push
or
inc
and
daa
mov
test
adc
pop
fwait
dec
sbb
popa
aaa
cld
adcb
in
fldt
sbb
cmp
mov
sub
or
scas
iret
mov
js
andl
outsl
jo
ja
sub
test
jle
push
cld
or
mov
jl
movsb
and
cs
jb
lock
pop
mov
jns
stos
popa
rorb
pusha
sbb
iret
int3
dec
mov
pop
xor
mov
xor
pushf
xchg
int
in
jg
test
dec
enter
adc
gs
mov
imul
mov
mov
pusha
jmp
and
shlb
adc
add
mov
jns
mov
out
fimull
cmc
and
push
pop
sahf
jl
jmp
dec
pop
pushf
pop
xor
sub
sbb
cmp
ja
mov
xchg
or
mov
push
push
out
cmc
add
cmp
adc
jp
pop
aas
xor
inc
cmp
adc
xlat
pause
cmp
cmp
sub
rcrl
ret
push
xlat
xlat
ds
notl
pop
cltd
int3
cmp
push
xor
test
out
int3
ficoms
cmp
cld
movsb
push
scas
sbbl
push
das
fxch
dec
mov
std
cmpsb
xchg
xchg
mov
popf
xchg
cli
mull
ds
push
pop
and
cmp
push
or
mov
mov
jo
sub
imul
and
inc
or
cmpsb
or
stos
mov
add
popa
cltd
and
sbb
cltd
lods
lock
inc
jg
clc
pop
imull
shl
shlb
cs
ljmp
shr
xlat
clc
ret
ljmp
mov
mov
cmp
lock
sub
and
daa
cltd
stc
insb
inc
rcrb
jbe
shlb
fldl
xchg
outsb
int3
sarb
xor
ljmp
in
enter
cmpsl
in
mov
pushf
repnz
inc
xor
push
mov
xor
loopne
cmc
pop
push
mov
sbb
xor
out
ret
xchg
cmp
cmp
push
jae
insl
fucomip
shll
pop
test
adc
sub
cmpsl
cmp
fidivl
clc
mov
push
daa
adc
out
repz
pop
in
movsl
int3
ret
adc
loope
cmp
cmp
jo
mov
mov
aaa
and
inc
inc
or
repz
adc
aas
push
sub
jns
push
or
testb
out
jmp
mov
mov
jnp
out
fdiv
leave
adc
stos
arpl
outsl
pusha
jo
sti
pop
push
xor
mov
or
jns
test
cs
sarb
xlat
imul
stos
sub
test
dec
mov
mov
add
repz
lret
adc
jmp
cmp
testb
pop
jo
enter
adc
bound
out
adc
dec
add
push
in
insl
fmulp
test
cmp
test
out
push
icebp
cld
stc
fwait
mov
insl
popf
ret
cs
clc
ljmp
adc
xor
int3
xchg
lahf
sbb
sbb
sub
xchg
xor
push
scas
fldl
sub
mov
imul
scas
outsl
add
pop
dec
ja
dec
pop
popa
inc
test
dec
insb
mov
mov
bswap
fsubrs
loopne
pop
mov
and
add
aad
cli
jno
lods
cwtl
xor
mov
inc
mov
sbb
lods
roll
adc
mov
loope
int3
inc
fsubl
cmpsl
cmc
shrb
out
in
cli
push
arpl
fnstcw
sub
sbb
cmp
jp
and
and
les
add
int3
cmp
sub
xor
dec
jl
in
push
jge
inc
mov
xchg
movsl
out
sbb
call
lds
cmp
aaa
cmp
cmp
or
push
xor
push
fwait
test
mov
test
cmp
repz
mov
ja
scas
roll
mov
pusha
jecxz
mov
dec
mov
and
or
mulb
std
xor
cmpsl
sbb
cs
xchg
stc
leave
jne
mov
push
scas
das
in
int3
adc
movsb
mov
pop
pusha
lahf
cmp
addr16
or
inc
jmp
push
cmp
push
je
lods
jmp
mov
scas
pop
dec
mov
fdivrl
push
stos
std
dec
xor
lret
pop
push
sub
test
ret
mov
or
lea
fbld
cmp
xchg
push
xchg
mov
lock
aam
mov
sbb
test
mov
mov
adc
pop
adc
popf
pop
and
icebp
mov
bound
cmp
sbb
popa
sub
sub
pop
ret
test
mov
cwtl
jno
das
pop
std
adc
out
sub
addr16
cwtl
sbb
lahf
pop
ss
fs
out
xchg
jae
mov
jecxz
pop
es
imul
mov
rcll
mov
lods
imul
lods
mov
inc
outsb
add
add
jbe
xor
add
mov
dec
push
movl
mov
xor
dec
xor
cmp
mov
mov
in
pusha
push
std
int3
xchg
ds
in
stos
mov
call
insb
adc
mov
rep
xchg
xchg
or
out
call
shlb
fldl
push
jg
xchg
jbe
mov
icebp
shrl
and
into
xor
into
inc
fwait
dec
loop
in
add
rorb
loope
pop
sub
mov
add
cltd
rcr
stos
mov
xchg
xorb
jnp
dec
scas
fadds
sbb
inc
data16
movsl
pop
sbb
cmc
cli
sub
movsl
movsl
fimuls
lret
xchg
mov
pop
in
jbe
cmp
adc
jbe
xchg
lods
rclb
aas
mov
or
xchg
ret
inc
mov
insl
push
xadd
push
mov
mov
sahf
or
out
cld
rcrb
xchg
js
cmp
jmp
mov
jge
xchg
pop
inc
mov
push
lds
mov
movsb
loope
mov
mov
jg
ds
lods
or
pop
cmp
cmp
mov
leave
dec
arpl
jecxz
insb
mov
into
adc
mov
mov
jle
sahf
adc
sub
loopne
fs
into
mov
pop
xor
push
pop
lret
xchg
and
jg
gs
fldt
lret
leave
aad
mov
shl
pop
or
iret
mov
adc
jns
inc
adc
push
xor
push
fdivr
jle
jp
pop
mov
test
in
cmp
xchg
in
in
jmp
inc
sub
in
cmp
or
push
mov
je
loope
test
cmp
and
push
add
add
jp
sbb
call
push
clc
mov
mov
lock
fs
iret
insb
aam
pop
ds
mov
dec
push
push
data16
out
nop
sbb
cmp
xor
jp
inc
xor
jnp
and
mov
xorl
icebp
mov
call
rorb
cmp
lea
psubsb
imul
add
adc
pop
cli
pop
xor
push
sub
arpl
sub
pop
in
mov
inc
test
mov
movsb
xor
movsb
cmp
outsl
and
ja
fstl
jp
inc
and
in
or
popa
loopne
dec
aas
cmc
orb
in
cmc
mov
mov
sahf
in
xchg
in
leave
jecxz
fstps
mov
xchg
inc
mov
cmp
out
adc
jl
jae
negb
rolb
sbb
mov
lahf
or
and
mov
cmp
int
in
xor
xchg
repnz
and
xorl
lcall
push
lcall
aam
mov
jmp
sbb
push
mov
mov
stos
push
or
int3
jmp
jne
out
fcmovbe
lcall
sarb
in
leave
data16
inc
pop
push
lahf
jno
into
jmp
repnz
aam
xchg
cltd
push
les
adc
addr16
cmp
test
mov
fdivr
aaa
jg
lret
mov
mov
xor
jns
ficompl
or
dec
into
push
vxorps
stos
jge
xor
xchg
lods
cmp
add
cmp
test
dec
and
ret
es
sti
sub
or
cli
iret
add
mov
mov
rclb
dec
test
sub
sub
je
jle
xor
mov
mov
push
pushf
jl
mov
mov
and
sbb
jbe
shlb
cmp
mov
sbb
and
ja
xor
sub
jg
dec
pop
in
xor
inc
shll
jl
cs
cltd
xchg
jmp
jmp
aad
sbb
mov
cld
js
cmp
fisttpll
inc
push
in
daa
and
cmp
sbb
loop
lds
das
dec
or
in
sbb
shl
dec
add
inc
pop
loop
lahf
enter
ffreep
sbbl
repnz
cs
jecxz
outsl
sar
mov
sub
cmp
mov
scas
out
lock
cmp
popa
iret
mov
push
leave
mov
cli
lahf
clc
cmp
es
js,pn
or
push
loopne
and
mov
sbb
out
loopne
xlat
add
jl
push
jecxz
dec
sbb
inc
jmp
xor
push
push
jnp
fisttpl
inc
scas
push
pop
push
xor
shr
fisttpll
in
stc
jnp
jns
dec
xlat
pop
sub
cltd
mov
mov
bound
mov
sbb
cltd
pop
sbb
xor
xchg
mov
sti
loope
cmp
and
add
inc
add
push
insl
idivb
sub
xchg
jnp
xchg
and
bound
addb
pop
push
push
in
cs
jb
mov
jnp
add
pop
push
inc
fdivs
fnsave
xchg
orb
and
pusha
and
push
sub
inc
js
jle
xchg
les
in
jnp
mov
push
jmp
jecxz
cmc
inc
mov
sub
mov
out
sub
je
fdivs
pop
enter
les
push
xchg
sbb
pop
jns
pop
loopne
aaa
inc
cmp
fs
xchg
jno
pop
cwtl
jo
and
fs
and
mov
sbb
bound
adc
cmp
push
mov
and
jg
cs
add
out
lds
icebp
or
mov
or
dec
pop
inc
jge
pop
pushf
lret
mov
xor
insl
nop
in
sub
shrb
mov
cmp
dec
sahf
sub
lcall
loopne
mov
fst
cmp
fimull
and
adc
dec
push
xor
jb
dec
iret
push
ja
push
push
fadd
or
mov
dec
cmp
enter
jae
les
dec
lock
ja
imul
dec
push
mov
setne
mov
or
and
xchg
bound
test
std
xor
or
dec
sub
into
adc
pop
mov
jno
and
into
push
xchg
pop
inc
out
jno
jle
lea
mov
pop
popf
or
mov
mov
xchg
cmp
dec
xchg
fbld
pop
dec
dec
push
popf
xchg
jecxz
xor
sub
or
inc
cwtl
mov
adc
in
pop
sti
je
frstor
ljmp
xor
mov
nop
cmpsb
mov
sub
fdiv
inc
test
mov
inc
test
or
adc
bound
mov
sti
dec
or
push
dec
jae
inc
pop
inc
mov
mov
pop
add
stos
inc
repz
cmp
pop
mov
pop
mov
xor
ret
dec
loopne
adc
insb
decb
mov
push
xor
int3
inc
jl
inc
ljmp
jno
fwait
and
scas
mov
in
std
fisubrl
mov
dec
mov
aad
fisubrl
inc
lea
mov
mov
add
push
into
in
xorl
mov
sub
cmp
add
stos
movsl
and
test
xor
shl
mov
add
jnp
jl
das
fadds
in
mov
insl
xor
push
pushf
rcr
and
cmp
sub
out
mov
xchg
fs
outsl
mov
lcall
ljmp
add
push
pop
in
adc
lcall
inc
xor
dec
mov
movsl
dec
outsl
bound
pushf
sbb
xor
adc
and
mov
pop
ss
in
movsb
adc
jmp
jne
dec
pop
or
lds
pop
mov
movsb
cli
test
sub
add
ud1
cmp
xchg
das
pop
xchg
or
adc
stc
push
adc
aas
push
pop
es
and
stos
mov
mov
sbb
or
cmp
inc
push
adc
sub
cmp
rorl
mov
jnp
div
push
sbb
jbe
and
movsb
or
mov
addr16
ja
push
sub
fcompl
cmp
fistpl
cmc
movsb
fwait
push
mov
xor
outsb
pop
cmp
and
mov
loop
out
push
in
test
hlt
inc
std
jmp
fcomps
cmp
and
cmp
xchg
shll
and
or
lods
loopne
jmp
jecxz
add
adc
movsl
repnz
and
lahf
rcrl
push
lock
outsb
pop
xor
fmull
mov
das
sub
scas
lea
sbb
or
fcmovbe
mov
fists
xor
cmpsb
icebp
adc
pop
push
mov
xor
cmp
pop
push
mov
gs
cli
xchg
and
xchg
ljmp
push
mov
adc
std
jnp
rcrl
movsl
sub
adc
loopne
out
and
adc
test
xchg
add
add
icebp
ret
mov
lea
or
insl
mov
xlat
fdivrs
stos
sbb
mov
inc
cltd
and
daa
call
and
cli
xchg
and
hlt
ss
inc
jge
xor
adc
pop
push
shr
js
ja
mov
movsl
hlt
fidivs
inc
mov
int
pop
repz
mov
mov
xor
mov
loopne
jg
dec
cmp
test
xchg
cli
push
xchg
mov
pop
cwtl
mov
jnp
sub
leave
out
aaa
aad
test
lds
int3
cmp
setnp
and
outsb
pop
jmp
insl
inc
insb
imul
jg
ss
ljmp
fldenv
loopne
jp
inc
xor
push
rol
sbb
pop
call
mov
loop
hlt
in
pop
lret
mov
mov
lods
pop
movsb
enter
dec
scas
out
les
cmpsl
xor
push
call
orb
cli
and
xchg
enter
jno
jb
push
add
cmpb
sbb
mov
jp
movsl
mov
sti
jno
arpl
mov
lods
loopne
test
and
iret
cmpsl
les
sbbb
scas
sahf
adc
popa
leave
cmp
sarb
scas
mov
dec
jle
jecxz
pop
or
aaa
push
andl
pop
mov
cmp
cs
fadds
cmp
xor
pop
js
push
mov
sbb
cmpsl
cmpsl
add
add
dec
mov
sbb
jmp
xchg
pop
adc
inc
lahf
fwait
test
shlb
and
sbb
scas
add
fcompl
cmp
test
pop
jp
jo
test
add
popf
mov
sub
addb
es
push
push
cmpsb
js
test
jnp
push
insb
sbb
js
lea
cmp
mov
jne
push
mov
pushf
mov
sbbl
cmp
fadds
xchg
ret
push
push
pushf
add
lods
fildl
inc
clc
cmp
repnz
mov
sbb
imul
push
sbb
jmp
xchg
dec
xchg
rorb
out
cmp
aam
mov
add
pusha
jl
ffree
sub
jl
bndstx
int3
inc
xor
pop
movb
adc
test
lea
ljmp
sahf
imul
mov
mov
mov
add
enter
cli
lahf
mov
and
adc
inc
nop
int3
inc
int
cmpsl
or
adc
es
sub
cmp
iret
xor
jb
push
adc
xor
ljmp
dec
roll
push
push
xchg
xchg
ret
in
movsb
add
add
pop
dec
add
push
divl
xor
xor
sbb
sub
test
mov
in
xor
jg
or
aad
xor
cmp
std
movsb
popa
sbb
fsubs
fisubl
xchg
mov
sbb
mov
stc
loop
fstps
nop
je
fsub
xor
shll
ljmp
stc
cmpsl
push
pop
fstp
fs
dec
mov
stos
scas
jnp
aam
inc
ja
pop
add
mov
cmp
pop
jae
cmp
in
xchg
inc
mov
push
out
imul
rcrb
lcall
popf
xor
mov
or
inc
fmull
fs
stos
jl
jbe
scas
or
xor
dec
add
pop
arpl
out
mov
in
sbb
jecxz
mov
repz
pop
sub
pop
in
xchg
fidivrl
into
dec
add
hlt
mov
pop
ss
mov
xchg
jnp
sub
repnz
sbb
testb
xchg
jae
xorb
hlt
aas
pop
outsl
dec
add
dec
pop
fld
std
in
test
out
lds
cmc
mov
jns
jmp
xchg
loop
aaa
sbb
fcomi
lds
out
dec
cmp
cmp
sub
sbb
adc
push
sub
lret
cmpb
fcompl
mov
insl
push
or
rcll
pop
movsb
jns
out
or
sbb
pop
ljmp
sbb
outsl
imul
push
fildl
call
sbb
pop
add
push
std
mov
dec
pop
xlat
push
mov
jbe
or
imul
dec
adc
idivb
jg
mov
stos
fistl
int3
mov
pop
cmp
or
push
repnz
or
fwait
scas
cmp
bndstx
repz
cld
imul
pop
outsb
out
sbb
add
loope
mov
mov
inc
fdivrl
xchg
icebp
out
cmp
imul
jl
cmp
pop
mov
loopne
inc
mov
es
sbb
insl
sbb
popf
enter
mov
pushf
mov
rcrl
cwtl
cmpsl
xor
push
cmp
adc
lds
loop
lock
mov
loope
mov
rep
cmp
jb
inc
push
fsubrl
sbb
xchg
cmp
test
sbb
test
push
lret
push
xchg
imul
pop
or
dec
fidivrs
cmp
insb
ds
jl
and
gs
test
scas
mov
xchg
jecxz
mov
insb
sarb
xchg
push
sub
dec
cmc
adc
lret
hlt
testb
and
mov
pop
or
int
xchg
lahf
cmp
icebp
sahf
sbb
xchg
push
outsb
xor
push
inc
cmpsl
lret
push
cld
aas
mov
push
dec
pop
cmp
out
loopne
stc
mov
stos
andb
mov
jmp
andl
xlat
sbb
push
popa
push
push
sbb
repnz
dec
sub
in
dec
push
sbb
and
loopne
mov
push
xlat
and
loopne
fnstenv
mov
lret
push
arpl
xchg
lahf
push
jp
ficompl
jo
mov
dec
dec
sarl
fidivs
cmp
popa
push
mov
sbb
jp
xor
shr
out
jns
test
ret
xlat
jmp
outsb
sahf
add
jge
xor
sbb
pop
push
xor
lahf
jmp
mov
sub
or
repz
lea
test
or
lock
dec
fxch
xchg
std
jle
imul
pop
rcl
jge
gs
inc
js
inc
push
mov
add
pop
mov
aam
xor
dec
loope
inc
in
lock
cmp
aad
mov
mov
lahf
rolb
outsb
push
inc
lea
in
or
xchg
pop
sub
xchg
nop
inc
call
loope
jns
cli
fcmovnb
mov
rcl
into
push
add
and
faddl
mov
lds
sarl
cwtl
add
lods
in
cmp
sarb
xor
push
sbb
popf
xor
jae
stos
incl
push
out
fcoml
sbb
add
addl
call
xchg
add
insl
addl
iret
hlt
int
cmpsl
lods
cli
and
mov
jb
adc
nop
mov
icebp
pop
jne
dec
dec
out
push
gs
jmp
mov
mov
dec
push
imul
jecxz
add
push
test
cmp
fwait
pop
iret
inc
and
xor
xor
fstpt
pop
add
inc
lea
out
das
xor
and
lahf
pop
lret
cmp
movsb
lods
and
fstps
jno
fidivs
xor
sbb
sbb
mov
xchg
mov
xor
shrl
pop
add
pusha
shrb
outsb
shr
cmp
sub
pushw
adc
repnz
add
fbld
std
xorl
push
push
add
test
jnp
dec
rcll
inc
ret
adc
and
lret
decb
push
mov
sbb
mov
cltd
neg
loopne
sahf
sbb
scas
cmpsl
in
leave
lea
mov
add
adc
jle
push
std
fistl
xchg
lock
mov
ret
jo
jo
push
adc
ret
rcl
dec
jnp
sub
and
pop
out
xorl
fs
push
rcrb
pusha
mov
mov
mov
or
fisttpl
outsb
in
jbe
push
inc
cld
imul
pusha
punpckldq
ss
mov
int3
mov
mov
or
cmp
mov
repz
sbb
dec
sub
je
mov
popa
data16
mov
mov
lret
out
or
dec
data16
fimull
or
mov
test
sbb
push
repnz
push
sbb
in
cmpsl
repnz
mov
mov
sti
push
in
popa
mov
sar
mov
jmp
push
fimull
inc
mov
cli
enter
into
incb
sub
cmc
jg
inc
shufps
pop
and
mov
mov
pusha
xor
lods
or
addb
add
sub
xchg
xchg
push
daa
cmpb
mov
aaa
adc
loopne
cmpsb
push
mov
xchg
mov
xchg
jge
mov
cmp
fisubs
and
xor
dec
pop
jmp
add
imul
imul
jl
inc
or
add
xchg
jl
gs
mov
add
xor
adc
pop
xorb
mov
loope
and
mov
stc
xchg
aas
jmp
cs
sti
add
loop
jp
test
xlat
cmp
inc
mov
mov
addr16
push
adc
lods
dec
sbb
popa
sbb
shll
jns
mov
imul
loop
aam
mov
inc
xor
mov
rcll
adc
and
dec
sbb
xchg
hlt
ret
ja
jns
mov
jecxz
ss
push
sbb
xorb
dec
orb
push
test
pusha
xchg
insb
or
stos
sahf
dec
push
and
lods
outsb
push
lret
dec
lahf
test
push
ret
int
jp
and
mov
jge
lahf
xor
add
dec
jmp
sbb
stos
and
push
mov
xor
ret
scas
jp
inc
dec
adc
roll
dec
mov
jo
sbbb
dec
cmp
push
test
sahf
in
cmp
xchg
cli
aam
mov
jnp
lods
pop
xchg
sahf
into
daa
pop
xor
ret
xchg
rcr
or
les
add
pop
pop
shrb
orb
mov
adc
jle
jns
inc
inc
das
xor
scas
dec
es
dec
mov
adc
cmpsl
or
arpl
cmpl
jl
lock
cmpsb
mov
out
mov
hlt
or
daa
xor
and
ljmp
daa
adc
or
stos
mov
pop
fs
daa
rorb
cmpsl
out
test
pushf
sahf
test
subl
inc
jo
stos
push
sub
add
add
cmp
mov
push
aas
mov
inc
sbb
in
and
push
es
mov
lods
fs
sub
mov
push
loopne
movsw
ficomps
mov
mov
mov
push
mov
clc
push
xchg
xchg
repz
lds
cld
ds
pushf
push
push
aaa
hlt
es
push
and
xchg
int3
jg
jmp
cmc
test
mov
pop
add
dec
jmp
add
loop
aaa
push
cmp
add
adc
jmp
rolb
jecxz
popf
std
cmp
mov
mov
sbb
scas
fstl
movsb
pop
arpl
cs
lret
jle
cli
dec
mov
push
jg
aad
andl
rcll
nop
xlat
cld
xchg
mov
test
or
push
cmp
pushf
bound
mov
sbbl
ret
jns
inc
cld
imul
lcall
cli
mov
add
addr16
shlb
sbb
jle
sbb
mov
shll
aam
sbb
aas
out
scas
mov
mov
loope
xor
je
jae
ss
repnz
add
mov
imul
mov
push
mov
shlb
cmc
mov
push
in
jp
jo
lods
mov
adc
out
sub
push
out
adc
imul
ja
mov
cs
nop
mov
mov
pop
xchg
cs
nopl
sub
mov
imul
movsl
int3
cmp
out
sub
lods
mov
sbb
repnz
jae
jbe
imul
aad
mov
sub
xor
or
subl
je
js
xchg
andl
cmpsl
xchg
stc
and
adc
aad
or
jbe
andb
sub
pop
mul
xchg
test
fucomip
ficoms
dec
adc
ljmp
sub
jno
aas
and
mov
scas
call
mov
mov
stos
sbb
xchg
neg
arpl
cwtl
mov
lods
sub
jmp
dec
push
scas
idivl
mov
gs
dec
xchg
sbb
mov
fstpl
leave
and
and
cmpsl
roll
push
aas
mov
pop
add
inc
dec
jae
inc
or
push
add
push
sub
mov
adc
and
mov
icebp
ret
ds
sub
add
into
push
fstpl
cmp
pop
sahf
cmc
in
mov
or
or
sti
xor
ret
icebp
xlat
mov
sbb
aas
jo
negb
std
in
xchg
add
frstor
xor
cmpsb
sbb
xor
mov
fmuls
fisttpl
xor
xchg
push
adc
pusha
hlt
mov
add
sbb
add
mov
inc
hlt
xor
and
sub
fsubp
jle
push
ficomps
cmp
subl
push
pop
popa
cli
or
sahf
and
pushf
shll
in
jge
mov
insb
push
and
adc
mov
inc
push
lea
lds
fidivrl
and
sub
mov
into
mov
insl
mov
xchg
sbb
inc
pop
fisttps
mov
mov
sbb
fildl
push
scas
gs
push
hlt
add
jge
daa
cmp
loopne
jg
cltd
enter
sbb
cwtl
mov
lods
outsb
sbb
imul
popf
das
or
add
into
daa
fimull
ror
inc
repz
daa
pop
mov
jecxz
test
lret
mov
push
lret
mov
jns
idiv
mov
mov
lods
mov
insl
xchg
mov
out
ljmp
xor
pop
add
mov
jb
jb
jne
push
ja
push
lcall
xchg
cltd
push
cmp
aad
mov
xor
sahf
cmpsl
xchg
xchg
pop
or
xchg
sub
mov
add
dec
sbb
mov
cpuid
movsl
mov
jae
sub
sahf
imul
adc
cs
gs
xchg
jne
lods
pop
mov
xor
jg
hlt
dec
mov
mov
pop
mov
mov
mov
jbe
in
adc
mov
dec
inc
xor
push
ds
push
rolb
and
test
inc
push
lahf
ja
sbb
hlt
shll
push
lea
push
or
add
pop
and
out
add
sbb
cltd
and
xor
int3
shrb
sbb
adc
in
xchg
mov
loopne
or
aam
shrb
addb
or
addr16
inc
xor
cmp
repz
dec
ja,pn
push
jns
adc
add
xor
pop
mov
push
stos
ds
xor
jns
clc
mov
pop
mov
fsubl
or
adc
xchg
jp
leave
cmpsl
push
push
repz
push
adc
mov
mov
shll
aas
aam
add
dec
push
loope
cmp
mov
inc
cmp
popl
test
cmpsl
scas
repnz
fcoml
cld
xor
cmc
ret
mov
rclb
dec
loopne
jmp
mov
mov
xor
mov
mov
stc
xlat
mov
fisttps
mov
sti
pop
xor
and
xor
inc
push
inc
jbe
scas
aad
dec
shl
cmp
jo
outsb
dec
icebp
cld
xor
jno
dec
aaa
jecxz
add
aam
push
jo
pop
push
jg
or
fsubrs
add
mov
in
or
fidivrl
inc
ss
push
sbb
fsubrl
ret
pop
mov
jl
sbb
mov
push
mov
push
fistps
test
leave
xor
loope
mov
repz
inc
sub
push
int3
cmp
int3
dec
push
jno
or
mov
jo
fwait
pushf
daa
negb
jmp
inc
cmc
add
aam
loopne
or
fwait
mov
xor
ret
xor
xor
movsl
and
rol
cmp
add
cmp
mov
cmp
aaa
xor
sub
cmp
pop
daa
push
or
sahf
rol
or
add
mov
or
enter
sbb
fidivrl
inc
adcb
pop
add
mov
sbb
mov
jns
test
stos
fdivl
push
or
rcll
mov
jns
jle
repnz
push
push
out
sub
pop
push
ret
pop
call
cmp
xchg
mov
pushf
or
pop
ja
mov
pop
mov
lret
cmc
push
xor
jnp
sti
jbe
rcrb
js
ljmp
loopne
rcrb
repz
jb
fsubrs
neg
add
mov
or
jno
mov
into
adc
dec
jecxz
pop
int
leave
fmul
adc
push
pop
mov
fistpl
sbb
dec
scas
nop
or
inc
sub
cmp
and
jg
movsl
pop
rclb
insl
shl
addr16
mov
outsl
or
fwait
jg
lock
sub
fstps
mov
sub
cmp
mov
and
cmp
mov
adcl
addr16
sbb
pusha
imul
xchg
cmpsb
imulb
cmpsl
sbb
mov
lea
aaa
fcmovb
js
out
lock
or
fdivrl
mov
push
scas
mov
pop
adc
loopne
xchg
cmp
out
jecxz
sub
lock
push
mov
sub
jns
pop
xor
mov
sahf
push
cmp
adc
jbe
fwait
pop
mov
xor
add
leave
mov
xchg
cmc
mov
push
out
imul
repz
test
xchg
lcall
test
jo
xchg
xor
lds
jl
jb
lock
sbb
std
or
xor
and
lret
push
sbb
jecxz
mov
dec
sub
sub
insl
icebp
and
push
das
xlat
xor
and
lahf
mov
and
sbb
mov
inc
imull
dec
insl
pushf
sbb
pop
inc
push
and
jmp
roll
lea
adc
jl
int
outsb
xchg
sub
mov
lods
idivb
lret
fisubrs
mov
push
mov
pop
out
lret
sub
push
scas
imul
cs
push
ret
and
fs
mov
cli
cmp
dec
add
push
data16
jecxz
ljmp
test
cmc
jns
out
sub
je
mov
je
dec
in
sbb
lret
push
push
jl
cmc
and
aam
and
dec
int
ljmp
push
mov
fnstsw
mov
jbe
jmp
pop
shlb
lods
xchg
sub
xor
int
xchg
pusha
mov
movb
stc
js
imul
jle
iret
jmp
inc
and
cmp
movsb
cmp
dec
nop
shl
xor
rclb
push
imul
xorl
mov
push
and
cmp
nop
mov
shlb
push
scas
ds
lret
das
xchg
inc
inc
inc
insb
inc
or
mov
ret
std
pop
mov
mov
js
scas
sbb
add
inc
test
mov
bound
or
pop
xor
sahf
xlat
pop
xlat
js
stos
sub
pushf
xor
xchg
xor
sahf
pop
xchg
adc
sbb
ret
jmp
in
mov
bound
jo
mov
lods
cmp
xadd
fisttps
pop
mov
cmp
cld
jecxz
mov
psraw
jno
xorl
ljmp
leave
adc
test
into
xlat
adc
add
sahf
dec
mov
mov
aam
jmp
insb
fldl
inc
add
xorl
pusha
js
push
push
fdivrp
movsb
stos
xor
mov
clc
int
je
ds
add
jns
es
and
iret
push
adc
sbb
lahf
cli
sbb
shl
insl
bound
mov
aaa
pop
xor
cmp
xchg
test
shlb
push
adc
mov
sbb
jns
fmull
imul
sahf
ljmp
push
cmp
push
sahf
filds
loop
popf
repnz
loope
mov
loop
and
punpcklwd
xchg
mov
jno
out
test
les
add
xor
outsb
mov
cmp
mov
or
lahf
inc
fidivs
js
jbe
scas
sarb
test
sbb
dec
mov
xor
cs
mov
shlb
rcll
cmpsb
movsb
lret
xchg
sub
scas
jge
and
enter
mov
in
in
add
ds
cwtl
movsl
add
dec
adcb
movsl
aad
cs
xor
flds
and
fadds
cmp
gs
outsb
jo
aas
mov
adcl
clc
addr16
sarl
jmp
adc
push
movsb
in
scas
xchg
mov
inc
movsl
in
or
and
dec
inc
push
leave
sub
ret
jmp
nop
imul
push
mov
sbb
test
inc
jb
inc
xchg
mov
int
push
sbb
testb
lret
cli
sbb
xchg
insb
in
dec
pop
and
lea
push
mov
cmp
sbb
ljmp
sub
xchg
loop
jmp
cmpsb
insl
imul
lea
sub
xchg
xchg
dec
xchg
cld
pop
xor
lret
iret
xchg
pop
stc
push
mov
jns
mov
mov
test
adcb
mov
fdiv
aas
lods
pop
sbb
mov
pop
or
add
push
lds
jge
arpl
mov
adc
mov
dec
fiaddl
lcall
mov
xchg
mov
and
fdivrs
sarb
popf
scas
loope
jno
adc
nop
bound
outsl
div
scas
gs
inc
dec
push
ljmp
jp
mov
cmc
pop
sbb
sbb
iret
push
scas
jb
inc
xor
test
pop
scas
push
mov
pop
out
xchg
xor
xchg
shl
xor
mov
clc
sbb
insl
and
roll
test
mov
push
inc
fisubs
or
mov
push
xchg
jmp
pop
xchg
push
pusha
add
fisubl
jbe
cs
loope
jo
in
jno
cmp
jns
xchg
pop
sbb
loope
or
mov
push
fdivrl
sub
sbb
lahf
jmp
mov
push
sbb
stos
mov
sbb
repnz
push
stc
add
mov
dec
sbbb
adc
rclb
sbb
into
xor
sbbb
enter
adc
out
push
out
adc
fwait
inc
mov
mov
sbb
nop
jge
out
mov
lcall
insb
and
add
push
out
jl
cmp
sbb
inc
jb
dec
sbb
xchg
inc
lods
xchg
or
mov
mov
in
or
stos
mov
shl
sbb
stos
dec
xchg
cwtl
jmp
sbb
outsl
out
xchg
add
dec
out
pop
bound
cwtl
addl
jmp
cli
mov
or
fidivs
add
pop
in
push
popf
in
inc
arpl
repz
mov
pop
or
sar
loope
rorl
fimull
push
mov
test
cmp
jno
repz
mov
mov
jbe
jns
stos
cmp
mov
adc
loopne
sbbb
cmp
push
leave
mov
lods
or
popf
pop
fwait
aas
push
add
stos
jmp
shr
sbb
xor
hlt
rol
lret
jb
mov
pop
add
in
jl
ret
adc
icebp
pop
mov
fwait
imul
mov
add
shl
push
sbb
xchg
and
dec
push
dec
inc
enter
imulb
enter
repnz
xchg
sbb
xor
lods
pushf
dec
dec
dec
mov
imul
pusha
icebp
mov
jno
cmp
fiadds
mov
imull
shrb
mov
ror
mov
cmp
mov
xorl
fadds
jge
dec
mov
ret
mov
xlat
sub
pop
popa
ja
mov
mov
hlt
jo
pop
fcom
sahf
pop
in
push
lahf
jnp
imul
nop
out
test
or
nop
adc
pushf
and
lahf
in
aad
adc
pop
add
insb
dec
add
sub
sti
pop
lahf
push
pop
roll
mov
sarb
test
pop
push
inc
addr16
in
scas
mov
lds
mov
test
push
xchg
and
and
repnz
lahf
aam
mov
mov
pushf
mov
mov
imulb
fdivrl
in
sub
cmp
int
or
mov
push
retw
cmp
or
add
sbb
nop
iret
stos
aas
fidivl
sub
xchg
jae
pop
sbb
mov
mov
mov
mov
sub
xlat
loop
dec
pop
xchg
cli
rcl
stc
rep
push
mov
push
mov
sub
lods
in
and
mov
inc
stos
outsb
pop
pop
mov
sahf
sbb
pop
addr16
inc
mov
shlb
aam
add
and
aam
int3
sahf
inc
sub
pop
push
shlb
mov
push
push
je
dec
or
in
dec
pop
lcall
inc
push
aam
push
inc
adc
xchg
test
sub
lcall
push
jo
or
xor
clc
inc
int
jae
or
push
jne
pop
fstpl
xchg
jge
bound
out
out
and
repz
mov
loopne
inc
inc
stos
pop
ja
lods
push
pop
icebp
xchg
jae
loope
jp
push
inc
xchg
xchg
jns
sbb
in
xchg
fsubs
adc
mul
mul
push
pop
push
cmp
push
loop
aas
imul
lea
xorl
repz
scas
fdivl
int3
pop
mov
out
push
mov
loopne
arpl
cli
jo
xchg
inc
adc
popa
rclb
js
sub
adcb
mov
xor
or
inc
xchg
xor
dec
jecxz
icebp
push
scas
sub
mov
iret
and
xlat
push
or
push
scas
add
add
mov
push
in
shl
in
xchg
adc
push
jl
addl
imul
inc
jge
int3
inc
in
inc
pop
mov
leave
mov
add
sbb
sub
dec
cli
mov
rcrl
xor
cmp
jnp
and
mov
mov
pop
pop
mov
jno
scas
mov
mov
das
imul
out
mov
into
das
addr16
ja
mov
imul
xchg
cmp
pop
mov
cmp
jns
pop
pop
adc
lea
loope
inc
mov
or
xchg
jbe
ljmp
mov
xor
rcrb
and
shll
invd
pop
dec
scas
adc
cmp
lea
lods
dec
call
data16
cli
push
repnz
gs
fcmovne
adc
and
mov
nop
imul
add
jno
lds
enter
lods
repz
popf
xchg
pushf
scas
fs
jecxz
inc
xchg
add
jbe
das
fsubrs
inc
fwait
call
or
into
push
ds
fstps
adc
xor
int
not
push
loope
and
repnz
xchg
mov
imul
inc
lret
pop
and
shrl
inc
and
imul
cmp
arpl
imul
loop
cwtl
jno
adc
sti
shlb
fsubrs
pop
leave
outsl
xor
fs
fisubs
fwait
insb
mov
mov
lretw
std
adc
mov
orps
pushf
mov
mov
jnp
fwait
sbb
rol
repz
add
seto
xor
dec
cld
push
lret
fsubrs
dec
or
pop
addr16
lret
divb
inc
sub
ss
fidivs
loope
pop
andl
xor
xlat
jmp
rolb
mov
jp
push
clc
cmc
cmp
int3
push
out
ds
out
lods
xchg
sbb
int3
mov
sbb
fwait
xor
xlat
testl
push
call
jae
jb
mov
ss
mov
pusha
jmp
inc
fidivs
lods
subb
mov
cld
jbe
sti
aas
and
xor
xchg
stos
rcll
fnstcw
addr16
push
inc
mov
xor
adc
addl
mov
mov
lret
ljmp
movsl
mov
or
adc
fdivs
or
dec
sbb
pop
pop
icebp
xchg
addr16
sti
popa
mov
push
sub
mov
mov
std
jmp
add
mov
sti
fwait
std
pop
aad
bound
jmp
lahf
call
aam
xchg
leave
repz
inc
fdivr
dec
or
add
out
lcall
pop
jo
shrl
loop
repz
xor
push
ljmp
sub
dec
push
ret
or
add
push
inc
mov
adc
addl
sub
cmp
lret
cmp
cmp
sbb
and
bound
out
fdivr
mov
sub
pop
call
jae
jnp
mov
shl
xchg
cs
loope
cmc
enter
dec
mov
inc
es
nop
mov
ljmp
cmc
mov
xor
xor
sbbl
call
je
sahf
pop
in
hlt
std
mov
sti
xchg
in
sub
mov
mov
xor
mov
call
inc
adc
cmc
imul
fisttpll
mov
repnz
mov
mov
fsub
int3
aas
es
pusha
gs
stos
dec
ret
sub
push
dec
out
lods
aaa
aam
xchg
pushf
sub
cmc
push
fcomp
or
scas
sbb
int
clc
push
mov
dec
int
int3
imul
xor
cli
inc
xchg
iret
xor
fcompl
xorl
pminsw
fcompp
dec
cmp
sub
pushf
mov
hlt
insb
sub
push
cmp
mov
push
pop
or
inc
pop
icebp
cwtl
push
xchg
sub
in
or
ret
mov
lret
dec
sahf
cmpl
jne
fsts
mov
lods
movsl
or
mov
nop
push
rcrb
sbb
loopne
pop
dec
clc
fimuls
loope
push
mov
xchg
loope
xlat
lret
mov
mov
repz
jmp
add
movsb
fstpt
sub
sbb
jns
shlb
mov
pop
mov
loopne
pop
mov
cmp
jbe
inc
dec
pop
sar
pop
clc
add
mov
xor
shrb
cmp
mov
sbb
xchg
mov
xchg
mov
or
xchg
cmp
sbb
inc
call
mov
pop
sub
adc
ret
lods
dec
and
mov
shlb
push
xlat
jo
pop
jae
xchg
lcall
push
test
and
aam
and
cmp
lods
fld
and
pop
movsl
push
lcall
bound
or
jnp
mov
lret
mov
push
jge
js
hlt
nop
jae
nop
cltd
add
or
or
xor
pop
mov
lods
fstps
stos
mov
and
pop
test
mov
mov
xchg
jo
mov
push
cs
icebp
mov
adc
mov
push
jecxz
or
popa
addl
leave
jno
bound
cmpb
inc
push
mov
insl
dec
inc
jp,pt
loope
mov
ret
imul
loop
mov
imul
mov
cmp
jecxz
shlb
fucomip
or
pop
stos
dec
inc
in
xlat
sub
movsl
sbb
mov
or
cld
mov
xadd
setbe
push
push
or
cs
or
xor
rorb
push
mov
adc
lods
xchg
aad
jge
test
fwait
mov
shl
inc
neg
dec
add
incl
test
insl
xor
nop
ret
loopne
add
fidivs
lret
mov
fwait
rorl
fdiv
cld
in
nop
repz
popf
dec
imul
rcll
scas
mov
sub
jbe
push
and
cmp
out
push
movsb
sbb
testb
sbb
xor
stos
jg
stc
mov
inc
mov
jle
and
outsb
xchg
outsl
int
in
int
mov
js
addr16
dec
xor
push
mov
leave
loope
out
decb
ja
cmpsb
push
jp
outsl
xchg
and
repz
xchg
repnz
cmp
out
sub
test
dec
cmp
pop
cmc
xchg
aas
jl
add
add
and
std
xchg
and
repnz
test
decl
add
imul
mov
out
or
jle
out
cmp
std
dec
ljmp
cmp
mov
and
mov
je
outsl
sub
push
je
adc
cmp
jl
out
jb
push
sbb
mov
icebp
cmpsb
lock
scas
jae
pop
lds
jl
ds
inc
xchg
jl
icebp
testb
ds
movsl
subl
fcomi
mov
cmc
push
roll
or
sub
imul
push
movsb
das
lcall
jl
divl
add
dec
fstps
push
lahf
mov
xchg
jp
push
or
mov
mov
xchg
sbb
adc
dec
pop
mov
cmp
xchg
jne
sub
jno
lahf
pop
mov
popa
and
jle
dec
in
dec
dec
out
shlb
jle
mov
mov
fstps
inc
cmp
jg
aad
repz
mov
mov
mov
push
adcl
add
pop
push
fwait
xchg
xor
push
lods
pop
inc
adc
mov
lea
test
cmp
lret
push
xchg
int3
icebp
dec
xlat
inc
test
pusha
dec
aad
mov
cli
pop
popf
cli
ja
mov
nop
xor
ror
push
fstps
cmp
out
mov
mov
out
popf
fnstsw
cmp
pop
cmp
xchg
lods
sub
leave
sub
out
xor
ljmp
addr16
xor
mov
imul
enter
ffree
js
jne
push
xor
aaa
pop
mov
and
mov
cltd
es
sbbl
mov
rol
sbbb
lret
or
jl
dec
cld
ljmp
and
enter
std
roll
push
shlb
push
sub
into
sbb
int
neg
cmpsb
faddp
jecxz
pusha
rorl
add
sbb
and
testl
out
pop
dec
fistpll
aas
xchg
outsl
aam
call
xor
pop
and
jmp
push
rclb
push
arpl
les
mov
mov
mov
push
inc
hlt
jno
test
popa
mov
lods
shl
lds
mov
push
mov
adc
int3
mov
jne
or
sub
xor
fs
outsb
into
cs
fmulp
push
jecxz
daa
adc
scas
pop
pop
mov
xor
fisubl
outsl
mov
xor
data16
nop
jmp
jle,pn
push
rorl
sahf
inc
gs
xor
popa
dec
jmp
dec
lods
pop
jnp
aad
mov
int3
ret
sbb
int
adc
push
clc
sub
enter
cs
imul
add
scas
cmp
push
das
ss
jbe
aam
jmp
ret
mov
cltd
into
movb
push
not
mov
or
sbb
jge
cmc
jg
imul
or
out
int3
popf
es
pop
jae
and
stc
stos
push
dec
jmp
rorl
sbb
and
and
je
mov
inc
adc
pop
int3
adc
js
lret
mov
js
mov
sahf
les
mov
sub
push
xchg
mov
repz
outsb
mov
lods
hlt
jns
in
jp
imul
push
es
stc
or
xor
mov
sbb
push
pop
sbb
add
or
and
push
lret
cmp
f2xm1
stos
and
rcll
cmp
mov
imul
dec
lods
xor
jge
xlat
or
jae
adc
mov
sbbb
mov
lret
xorl
mov
insl
ljmp
outsl
shl
jae
loop
cli
fdiv
fiaddl
sti
or
repz
add
sub
push
pop
and
popf
jno
pop
dec
jge
mov
scas
dec
outsb
add
popf
nop
bound
xor
test
adc
xchg
mov
adc
arpl
xchg
fsub
lret
and
inc
enter
std
push
nop
dec
bound
push
sarl
and
xchg
imul
loope
xor
lock
mov
jb
mov
imul
jns
pusha
jno
inc
cmp
imul
xchg
sub
cmpsb
andl
jnp
adc
adc
das
mov
mov
mov
sub
xchg
dec
push
jmp
into
jbe
test
add
xor
shrb
xor
or
lret
push
dec
in
aas
cmp
aad
cmpsl
ret
stc
js
adc
push
mov
sbb
sbb
test
xchg
xchg
jno
push
bound
push
xchg
aam
hlt
int3
dec
cs
int
mov
sub
pop
push
mov
ret
mov
push
ret
cmovae
popf
int3
jo
out
ja
pop
add
xchg
mov
dec
cmpsl
das
mov
outsb
popa
jle
out
test
lock
push
addl
daa
xchg
fnstenv
xchg
dec
fmull
jge
out
mov
sub
dec
aad
add
hlt
fsubrs
or
xchg
sbb
xchg
mov
and
mov
cs
adc
bound
jne
push
mov
arpl
cmpsb
icebp
int
enter
dec
int3
cmp
adc
xchg
fcoms
xchg
test
xchg
inc
cld
xchg
sub
dec
adc
cmp
xchg
push
ss
and
inc
cli
call
lret
imul
push
inc
shlb
push
es
jle
sbb
cmp
jecxz
cmc
addr16
test
pop
adc
pop
rolb
in
mov
out
lret
sbb
and
and
loopne
leave
pusha
out
inc
xor
jnp
cwtl
adc
pushf
adc
mov
push
mov
pop
jae
leave
sarl
rcll
ss
xchg
scas
or
push
xchg
stos
pop
cmp
popa
mov
dec
daa
out
inc
sub
mov
jg
ret
shl
dec
mov
ret
insl
sub
ss
hlt
data16
jb
pop
inc
and
stos
jle
mov
jl
jne
frstor
es
ljmp
jae
and
mov
xchg
adcl
add
jne
fildll
dec
mov
jmp
sub
scas
sub
add
test
push
test
push
push
push
dec
int3
call
popa
inc
pop
mov
repz
push
sub
and
and
add
xor
das
pop
mov
add
mov
pop
sub
rolb
mul
mov
aad
aam
fimuls
enter
fcomip
mov
dec
mov
test
mov
insb
sbb
js
push
fs
lea
or
sbb
lods
add
sub
in
mov
xor
lods
push
cmp
insb
sub
mov
insb
fwait
cltd
jmp
pop
push
cmp
stos
js
in
push
or
fdivr
xor
push
xchg
jo
movb
mov
xlat
xor
or
repz
movsl
sbb
xchg
cmp
fiadds
scas
mov
pop
out
mov
rclb
add
pop
fs
lret
push
popf
aad
data16
inc
xchg
cld
out
xchg
pop
popf
imul
insb
and
scas
xor
gs
ljmp
int
inc
incl
fucomp
or
jne
jne
xor
test
fimull
xor
pushf
push
adc
outsb
dec
popl
enter
jno
add
cmp
int
pop
dec
rorb
aaa
imul
add
xchg
stos
rolb
out
add
sbb
jno
sub
sub
mov
xchg
cli
mov
dec
das
imul
cmp
pop
mov
clc
inc
inc
aad
outsb
lahf
push
inc
aad
lea
mov
rcl
rcl
push
imul
xor
lcall
inc
dec
lods
out
jno
outsl
inc
mov
xlat
mov
or
pop
mov
stc
aam
dec
sbb
out
test
xchg
jns
or
mov
int3
ds
das
xchg
cmpsl
xor
arpl
jecxz
imul
mov
inc
mov
stc
or
std
jecxz
cmp
xor
repnz
and
cmc
fnstcw
xchg
addr16
call
add
imul
js
xor
xor
jmp
fs
les
sbb
out
or
mov
mov
clc
xchg
add
leave
sahf
mov
ffreep
aas
pop
pop
dec
in
ds
faddp
and
dec
int3
insl
mov
std
sahf
ret
in
pusha
loopne
lods
imull
xchg
pop
iret
xlat
das
sti
call
pop
stos
sbb
clc
fimuls
and
insb
test
or
shrb
xchg
shll
mov
insb
add
cs
mov
pop
or
jb
push
sub
fistl
fsubl
xchg
lret
cmc
nop
adc
repz
mov
or
lods
fcompl
cld
adc
mov
pushf
pop
shrl
mov
shl
or
adc
fdivrs
test
adc
dec
pop
push
mov
or
gs
lock
in
out
pop
mov
in
cmp
lock
add
aad
and
hlt
and
sbb
mov
jne
push
addr16
outsl
repnz
xor
xchg
inc
xor
sbb
fdivs
call
sub
push
aaa
cmp
sbb
mov
jp
inc
int
mov
mov
divl
mov
aas
in
gs
and
ss
dec
or
and
das
xor
adc
cld
sub
sbb
push
jno
xor
shr
popa
fisubrs
xor
sub
in
cli
sub
xor
sub
iret
dec
mov
adc
cmpsl
jnp
xchg
dec
pop
cmp
sbb
jp
test
sbb
ljmp
dec
clc
xchg
pop
xchg
xchg
jo
adc
es
push
lret
data16
out
movsl
jp
rolb
xor
dec
pusha
dec
jnp
test
movsb
loopne
mov
dec
xorl
lods
push
out
pop
cmc
rol
or
adc
lods
lds
push
or
pushf
jge
pop
movsb
lret
fistl
test
outsb
repnz
sub
aaa
dec
dec
inc
cmp
sbb
push
arpl
cmc
lret
popf
push
sbb
xchg
fwait
add
xchg
shlb
push
or
mov
sub
mov
mov
xchg
mov
popa
dec
xor
xchg
cmp
cmp
pop
jmp
lcall
bound
push
cltd
cmp
push
movsl
dec
mov
out
shll
sbb
bound
cld
xor
xlat
repnz
ss
and
jns
rorl
xchg
lcall
lret
mov
clc
mov
arpl
out
jne
or
xchg
mov
jl
jl
inc
loopne
lock
rcll
cmpsb
jne
add
inc
and
jno
push
and
addr16
push
addr16
sbb
mov
and
popa
jmp
xchg
nop
push
cmp
sbb
leave
pop
cmc
and
push
pop
or
repnz
pop
mov
and
mov
pop
out
inc
inc
repnz
pop
dec
push
mov
adcb
sub
xor
or
jne
lds
inc
jnp
push
mov
fcomps
mov
test
adc
jo
push
cld
or
inc
mov
jp
daa
jmp
xor
test
cmp
fstps
sahf
mov
sub
dec
lock
mov
sbb
rcl
and
sti
aam
out
daa
xchg
psubb
sub
dec
pop
fcoms
sub
xlat
mov
xchg
aaa
xchg
test
ds
mov
mov
shlb
sbb
xor
mov
mov
aas
sub
decb
aaa
pop
push
xor
mov
add
addr16
xorl
push
lcall
fistpl
pop
mov
cmp
push
pop
mov
jb
inc
lds
icebp
pop
insb
push
jp
inc
xlat
push
or
mov
mov
scas
sub
idivl
test
cld
pop
add
lret
cli
js
push
shlb
fmuls
lcall
sub
jge
mov
mov
xor
xor
push
ljmp
clc
mov
addl
inc
es
fsubrl
rclb
in
jo
jbe
out
data16
into
xchg
cmp
bound
push
fnstenv
icebp
sub
cltd
mov
pop
insl
pushf
inc
ljmp
push
jno
or
inc
fistps
icebp
rcrl
hlt
and
aas
popa
fldenv
fdivp
sbb
mov
push
push
rolb
cli
adc
push
paddd
sub
mov
adc
movsl
sbbl
loopne
sub
sbb
inc
mov
and
pop
xor
test
dec
shll
mov
jmp
xchg
repnz
cmpl
push
hlt
lret
and
aaa
rcrb
in
insb
add
pop
clc
aaa
aad
cmpsb
mov
shll
ss
insl
mov
mov
aam
jle
aaa
jne
out
add
stos
dec
testl
mov
mov
sti
and
movsl
popf
mov
add
outsb
mov
add
mov
jnp
xchg
test
mov
xchg
decb
scas
aaa
push
and
into
loope
cmp
test
clc
xchg
dec
xor
dec
dec
cmpsl
jbe
psubd
ret
sbb
fadd
push
pop
fwait
loop
cmpsb
cmp
ret
dec
int
mov
lods
adc
push
dec
sti
xor
jmp
lahf
or
in
bound
xor
imul
push
add
test
test
scas
stos
mov
mov
hlt
mov
add
insl
clc
mov
out
lret
push
mov
push
outsb
mov
pop
pop
sub
loopne
xorl
adc
imul
mov
add
and
pop
mov
sub
sbb
popf
mov
in
inc
arpl
mov
add
pop
lea
bound
into
push
dec
sub
xchg
mull
or
imulb
iret
or
jae
cmp
nop
mov
pusha
out
out
into
test
lea
inc
int3
or
pop
gs
xchg
cmpsb
pop
lret
rorl
pop
imul
imul
mov
dec
lods
or
sub
out
and
data16
jb
mov
psllw
outsl
add
cmp
scas
fldt
mov
test
adc
mov
pop
rcr
and
shrb
lock
add
lods
mov
sbb
lods
stos
adc
or
pop
adc
out
pop
and
insl
mov
sti
mov
xchg
stos
mov
aas
add
jnp
xchg
or
in
out
out
adc
in
fidivrs
arpl
and
push
pushf
xor
sub
fsubs
ljmp
popf
pop
loope
je
js
inc
mov
xchg
mov
sbb
out
cmpsl
notl
lock
xor
loop
rcrb
cmp
jno
cmpsl
cli
cmp
jl
shrb
mov
aaa
icebp
jno
mov
cmp
sbb
imul
or
stos
hlt
out
xor
adc
push
or
pop
mov
sbb
and
cmp
aam
mov
dec
mov
into
xchg
pushf
js
leave
xlat
add
fnstcw
push
pop
jp
ds
mov
popf
xor
test
daa
test
push
add
jo
mov
or
mov
xchg
inc
cmp
out
jmp
mov
enter
enter
shrb
ret
loopne
lds
arpl
pop
insl
inc
imul
mov
xchg
mov
lods
push
mov
sub
std
cmp
sbb
cmp
cmp
cmp
mov
fldl
lahf
or
jp
sbb
jecxz
faddp
fidivl
or
mov
adcl
dec
test
iret
mov
and
sarl
out
mov
repnz
xor
js
xchg
mov
negb
cmc
push
pop
mov
or
lcall
call
push
push
test
fucomip
jo
ror
in
sub
mov
pop
mov
jbe
and
sti
arpl
jb
fcmovnb
sbb
iret
mov
and
lret
mov
xlat
clc
mov
xchg
std
jo
mov
hlt
dec
xor
mov
mov
imulb
jl
ds
sbb
and
inc
xchg
insb
loopne
outsl
das
push
insb
inc
scas
inc
dec
sahf
sbb
jbe
jno
mov
rorl
dec
aas
aam
das
dec
dec
repnz
cltd
mov
ja
mov
orb
mov
fcomi
mov
outsb
inc
int3
push
nopl
mov
pop
push
xlat
popa
xor
push
fistpl
xchg
pop
pop
mov
cmp
sub
or
adc
fldt
popf
pop
jb
or
push
mov
add
leave
aad
pop
cmp
loop
inc
pop
jl
fcmovnu
and
ljmp
je
jmp
lods
rolb
dec
pop
sub
aas
and
loope
push
neg
push
imul
test
add
adc
mov
sub
xchg
aas
ret
add
stos
xchg
std
jmp
cmp
adc
out
sub
leave
pop
int3
mov
pop
xchg
mov
inc
aas
test
sub
push
mov
mov
pop
int3
addr16
jbe
fistpll
clc
push
leave
sbb
in
cwtl
push
xor
sbb
out
idiv
jmp
aas
mov
pop
mov
fisttpll
pushf
xchg
pop
call
int3
xor
lret
xchg
adc
sbb
or
rclb
imul
fisttpll
dec
inc
and
aaa
gs
sti
cltd
pop
aam
pusha
inc
test
xor
xchg
aas
andl
push
mov
roll
arpl
adc
rcll
dec
xor
or
xchg
push
inc
add
or
cmpsl
sbb
nop
repnz
aas
cmp
mov
pop
push
push
movsl
sub
mov
mov
push
xchg
push
push
mov
lret
clc
shll
in
js
jo
cmc
clc
cs
xchg
push
mov
int
jge
iret
mov
jge
mov
ds
jne
inc
sub
push
or
adc
jge
fiaddl
leave
pop
dec
push
mov
mov
mov
mov
jmp
jne
cmp
loope
jge
cld
or
dec
mov
movsl
cmp
cmpsb
jns
in
mov
xchg
std
cltd
jg
ljmp
aam
mov
jns
inc
fistpl
adc
and
fwait
mov
lahf
mov
nop
dec
cmp
pushf
sub
push
in
xchg
mov
and
and
jle
or
jne
int3
cmp
outsl
stc
mov
add
outsl
adc
loope
in
les
jecxz
gs
ret
pop
xorl
stc
cmp
jmp
aad
fnsave
sbbb
dec
mov
ret
lods
push
and
out
push
out
and
cmpsl
es
mov
mov
jbe
xchg
mov
call
clc
mov
fildll
sbb
ret
fs
sbb
sbb
rcrb
pop
lods
push
xchg
sti
mov
or
sahf
lret
mov
dec
inc
adc
das
test
test
mov
sbb
xor
fwait
cld
lea
jo
jecxz
adc
jg
sar
push
jecxz
imul
call
pushf
bound
jne
movsb
insl
lods
fndisi(8087
jl
push
mov
mov
and
push
std
loopne
mov
mov
or
inc
or
movsb
arpl
add
rorl
int3
mov
xor
in
push
add
xor
jge
cld
jg
cmc
jp
push
jle
inc
stos
lods
fcmovnu
push
lods
pop
mov
test
mov
dec
cmp
inc
les
cs
popf
setns
push
jecxz
push
pop
and
pop
mov
andb
xor
pop
subb
push
je
add
push
mov
jge
in
xor
inc
rcll
popf
push
xchg
pop
pop
pop
sub
aas
gs
repz
inc
mov
cmp
lcall
mov
cmp
push
nop
push
mov
adc
into
jnp
jl
sub
rol
adc
sub
in
jecxz
iret
push
ljmp
and
sub
dec
imul
xchg
push
outsb
push
and
cmpsb
stos
int
jl
out
out
sbb
lahf
adcb
out
cld
jns
iret
push
gs
xadd
cmp
cmp
xchg
adc
mov
sub
xchg
jno
cmp
xor
mov
fcoms
repz
call
hlt
lods
xor
add
inc
rorb
sbb
sarl
push
adc
sbb
dec
mov
shrb
fmuls
test
jnp
movsb
jecxz
std
nop
add
sub
outsl
cli
dec
or
cmp
mov
sbb
clc
lds
fsubs
mulb
pop
push
das
mov
bound
fdiv
cwtl
add
test
js
f2xm1
xchg
fldenv
sbb
mov
iret
ret
call
sbb
cmp
lahf
cld
adc
adc
cmp
add
dec
lahf
xchg
adc
cld
jbe
mov
mov
sti
hlt
xor
dec
test
adc
pusha
movsl
mov
pop
fistl
mov
es
jae
loope
jle
sbb
stos
enter
mov
cmpsb
cmp
cmc
xchg
sbb
push
rclb
push
xorb
xor
cmp
call
cld
push
and
or
adc
sub
pusha
mov
xor
lods
push
arpl
cli
jae
add
push
xchg
jp
loope
loope
mov
fdivl
call
cmc
repnz
lds
pop
cld
iret
mov
push
lea
je
loope
push
leave
int3
dec
dec
jnp
adcl
jbe
pop
mov
or
ljmp
rcl
sbb
lcall
and
insb
sub
arpl
mov
inc
or
repnz
stos
mov
mov
daa
pop
imul
data16
jne
int
adc
xor
mov
sbb
pop
repz
aad
fld
push
fsubrp
add
adc
mov
dec
fnstenv
mov
js
xchg
dec
sbb
mov
ja
sub
nop
mov
mov
mov
scas
add
in
int3
adc
repnz
faddl
and
and
insl
and
xor
cs
loopne
pop
and
xchg
adc
jb
xchg
jbe
clc
aam
mov
sub
in
shrl
xor
jecxz
in
push
cmp
gs
pushf
sbb
sbb
xchg
adc
ljmp
shlb
pop
push
cld
ljmp
lahf
mov
scas
imul
or
aad
inc
dec
sbb
jmp
icebp
cmpsb
or
movsb
ds
ds
pop
in
mov
inc
and
xor
popa
pop
xor
orl
pop
repnz
cwtl
push
mov
out
aaa
fnstcw
cs
out
push
ret
scas
les
pop
in
in
insb
lahf
lock
xor
ja
js
inc
imul
cmpsb
gs
dec
fiadds
movsl
xchg
add
in
xor
xchg
lret
into
cltd
outsb
adc
fisubrs
mov
popa
mov
add
outsb
pop
shrb
int3
mov
dec
and
repz
mov
mov
or
dec
daa
aad
or
push
repz
adc
pop
in
cwtl
ret
sub
push
inc
cs
pop
sub
or
je
push
aas
lds
inc
iret
imul
loopne
adc
dec
popa
scas
es
shl
stos
repz
sub
mov
add
loopne
cmp
jnp
orb
insl
xchg
and
mov
sahf
or
push
test
in
sub
stos
push
mov
fcom
popa
out
in
mov
xor
pushf
fimull
in
movsb
adc
xchg
jno
push
test
jmp
xchg
cmp
add
arpl
jl
sub
push
nop
pop
daa
jno
into
lret
cmpsl
cli
dec
cli
int3
mov
in
nop
shrl
xchg
out
push
cmc
sbbl
dec
mov
and
xlat
sbb
sub
lock
jl
mov
aas
sbb
sbb
ud2
mov
jecxz
insb
inc
cld
or
dec
mov
pop
sub
dec
lods
in
sbb
das
cmp
ret
inc
xchg
add
mov
mov
inc
shrb
pop
test
fldenv
outsb
and
inc
adc
add
test
lods
and
ds
and
fs
ljmp
push
cmp
mov
sbb
sbb
sti
subb
adc
mull
aad
ret
push
add
cmp
mov
stos
cmpsb
hlt
js
out
stc
mov
je
mov
adc
xor
sahf
icebp
push
sub
xor
jno
jecxz
movsb
out
mov
testl
sub
xorb
add
outsl
xchg
pusha
jle
cmp
outsl
aam
mov
sbb
loop
into
enter
xchg
mov
or
inc
aas
shr
dec
pop
push
inc
adc
sbb
cmp
lcall
scas
pop
and
ljmp
cmp
or
adc
and
imul
push
xchg
lret
push
add
nop
test
xor
pusha
int
pop
jl
aad
jmp
add
mov
mov
repnz
xchg
mul
sbb
lods
sahf
mov
cmp
push
iret
lret
aam
sub
inc
dec
ja
mov
shrl
jne
dec
push
jo
fsts
sti
xchg
sub
lcall
cmp
fcompl
or
adcb
cwtl
push
aaa
fistl
jp
sub
fistps
fsubr
mov
add
lret
fidivl
cli
inc
mov
fs
xor
insb
sub
add
pop
stos
sbb
movsb
or
insl
imul
sbb
notl
test
add
pop
int3
mov
in
ljmp
jnp
notl
nop
testb
adcl
sub
adc
inc
adc
adc
dec
in
dec
xchg
mov
fstpl
xchg
mov
push
pop
cmp
fadds
pop
je
cmc
pop
pop
sub
cmpsb
mov
out
imul
sbb
adcl
mov
shll
cs
inc
fldenv
stc
fstpl
loop
inc
scas
out
test
add
push
mov
inc
pop
sub
inc
xor
pop
sarl
mov
dec
xor
roll
outsb
enter
cmp
movq
cmp
pop
mov
mov
cmp
xchg
inc
push
and
andl
push
pop
sbb
sbb
xlat
inc
xor
subb
push
pop
mov
int
dec
mov
cmpsb
repz
rolb
pusha
or
stos
addr16
add
mov
push
das
ja
testb
das
jno
fists
sbb
add
or
dec
clc
add
imul
push
add
sub
je
int3
nop
jbe
cltd
ror
das
test
push
stos
stos
ja
mov
mov
int3
mulb
cmp
and
push
lahf
add
hlt
mov
and
pop
movsb
xchg
out
mov
ljmp
stc
shlb
xor
xor
out
ret
mov
popf
push
jmp
push
ret
mov
adc
test
js
loopne
or
les
dec
loope
push
push
push
mov
or
cwtl
lahf
mov
int3
add
push
and
stos
dec
arpl
out
imul
pop
inc
lock
push
lret
add
in
fbld
inc
pop
mov
inc
jle
pop
sbb
jmp
xor
movsl
inc
bound
iret
mov
xchg
push
loope
cmp
rclb
nop
push
push
bnd
cmc
sbb
jmp
add
daa
cmp
lcall
lock
add
jle
adc
mov
dec
dec
push
inc
loope
das
or
xor
test
incl
lea
xchg
ss
sub
pop
xchg
leave
mov
cmp
cs
out
xchg
push
push
jno
mov
add
push
jle
fsubrl
push
lcall
std
nop
push
and
adc
mov
and
cmp
dec
stos
insb
nop
sti
lret
or
enter
jnp
cltd
jle
lods
mov
jb
aas
cmp
xor
cmp
pop
int
aam
ja
jle
sub
mov
loopne
aad
mov
mov
mov
cli
cli
xchg
iret
out
dec
push
in
pop
loop
out
testl
sti
jne
popa
jecxz
sub
inc
cmpsl
mov
cmp
out
not
jbe
pop
lea
mov
lods
daa
in
xor
push
out
dec
mov
jle
sub
test
sub
pop
enter
outsl
sbbl
cli
cltd
enter
mov
int3
pop
mov
mov
push
sar
or
sub
aas
das
lds
bswap
and
lds
bound
mov
insl
cmp
fwait
mov
push
movsb
jnp
xchg
movsb
sub
adc
mov
rorl
xor
cmp
sbb
push
enter
sbb
push
sub
sbb
mov
arpl
rcrb
scas
std
pushf
dec
nop
repnz
scas
mov
jno
aaa
pop
mov
sub
jle
pusha
sub
scas
dec
xchg
lahf
divb
push
mov
ds
scas
lahf
xor
mov
push
xor
xchg
std
das
cmp
test
cmpsl
das
xchg
cmpsl
inc
fnstenv
outsb
add
movsb
push
fistpl
xchg
cmpsl
out
xchg
je
inc
fs
je
js
xorb
mov
scas
test
sub
xchg
addr16
scas
adc
aas
out
push
jnp
fildll
cli
ret
das
pop
mov
adc
sub
and
inc
sub
mov
mov
shll
ror
call
pop
jl
sbb
fsubs
push
leave
mov
out
out
adc
jp
sti
mov
lods
lahf
test
cmp
sub
dec
xchg
pusha
xor
out
jae
pushf
divl
and
mov
mov
pop
adc
psrlq
outsb
fs
rcrb
data16
push
in
or
test
or
adcb
aaa
mov
jb
jp
sbb
decl
jae
fwait
notl
pop
shll
xlat
lret
mov
lods
mov
cwtl
jb
mov
cli
ds
xchg
push
jle
or
mov
pop
mov
xchg
xchg
psrad
into
sub
jno
loope
xor
mov
test
fucomp
dec
push
ret
adc
mov
jbe
pop
test
jecxz
inc
dec
dec
stos
mov
movsb
xor
lods
insb
in
add
push
lods
nop
daa
dec
pop
enter
outsl
mov
daa
adc
mov
mov
lods
sbb
das
lea
jp
cmp
arpl
add
push
ret
jbe
mov
xchg
lcall
fsubrl
pop
lret
push
adc
mov
adc
in
cmpsb
int
cli
fwait
shlb
int3
or
dec
sub
cmpsl
rorl
mov
dec
stc
shr
jg
pusha
das
xor
jge
sbb
fldt
cmp
lods
fdiv
in
sbb
ficomps
dec
xor
or
faddl
push
jg
xor
xchg
push
xor
dec
ss
inc
sar
daa
dec
mov
xor
mov
addb
cmpsb
sbb
adc
and
repz
cmp
mov
in
stc
pushf
adc
sbb
mov
fmull
cmp
pop
mov
inc
out
ret
xchg
jp
mov
mov
in
aas
add
int
ret
inc
hlt
push
int3
cltd
push
lods
sbb
mov
rorb
aas
or
sub
mov
gs
jg
mov
ret
pop
pop
inc
sub
mov
adc
movsl
leave
movsl
push
iret
push
icebp
pop
imul
mov
push
inc
subl
adc
lret
jb
mov
cli
sbb
push
rol
lcall
lods
inc
into
inc
and
xor
and
sbb
xor
mov
jmp
hlt
je
xchg
sub
je
push
adc
or
mov
sub
cmpsb
addr16
gs
loop
cmpsl
lock
aam
jo
outsb
fs
push
popf
push
faddl
push
fcompl
xchg
enter
dec
mov
insl
cmpsb
push
add
ja
data16
fsubs
inc
inc
inc
jne
mov
ret
pop
mov
pop
and
xlat
stos
fstl
scas
fistl
sbb
jg
inc
adcl
xchg
push
jg
bnd
xor
movsl
lods
in
ss
pop
negl
mov
jecxz
in
pusha
xchg
jbe
jge
sbb
sbbl
aaa
js
dec
push
cmpl
aad
lahf
or
daa
pop
int3
dec
push
jg
push
fidivs
push
and
cmp
cltd
dec
xor
test
push
pop
out
repnz
inc
mov
xor
xchg
inc
dec
jmp
rcll
lret
and
sub
push
mov
jnp
mov
mov
sbb
nop
pop
cmpsb
adc
jnp
mov
sbb
sbb
shlb
rolb
push
fs
xor
jl
jp
pop
dec
popf
dec
jbe
clc
stos
repnz
cmp
repz
push
cli
pop
inc
lea
jp
cld
andl
mov
cwtl
sbb
mov
clc
jb
stos
in
movsb
jg
repnz
mov
pop
mov
xchg
pushf
sbb
inc
or
mov
imul
mov
test
std
xchg
in
int
mov
mov
push
fmuls
insl
sar
and
jl
pop
in
adc
bound
pushf
rcl
pop
je
shr
or
mov
and
push
call
cli
lods
arpl
int3
jae
jle,pt
mov
out
fmul
aad
sub
push
jmp
shr
dec
test
insl
mov
or
mov
movsl
mov
jb
dec
or
insb
imul
sub
jns
xchg
stos
and
sub
fidivrl
dec
das
push
pop
pushf
xchg
repnz
jo
and
xor
fwait
repz
or
lods
iret
push
addr16
fidivl
hlt
dec
not
dec
push
mov
sub
pop
nop
dec
leave
in
cltd
or
aad
push
dec
idivl
and
add
test
adc
loop
sahf
hlt
mov
pop
push
sbb
and
mov
mov
jb
push
dec
fdivs
sub
push
or
icebp
push
push
shrb
mov
movsl
test
push
insb
pop
sbb
sbb
xor
dec
addl
pop
andl
hlt
insb
inc
sbb
jnp
fnsave
cld
lahf
mov
pop
inc
inc
mov
sub
addl
jg
fwait
add
fisubrl
movsl
dec
or
jle
mov
repnz
insl
inc
in
daa
push
add
outsb
and
mov
inc
lods
das
es
fisttps
scas
lcall
xor
sbb
mov
out
or
push
dec
add
sub
xlat
push
outsl
xchg
lds
fidivrl
loop
es
arpl
cs
sarb
mov
lcall
lods
iret
push
popa
repnz
cmp
hlt
push
movsl
xor
push
jbe
mov
pop
adc
icebp
hlt
sbb
lods
inc
sub
cltd
out
mov
addl
jo
loope
shrl
inc
mov
out
dec
ds
jmp
rorb
popa
and
sub
jmp
mov
jb
dec
dec
mov
into
movsb
es
jl
in
push
push
aas
sbbl
cli
in
sbb
pop
dec
out
sbb
inc
stc
xchg
and
cmpb
inc
enter
test
test
xchg
fdivrs
cltd
mov
loope
aaa
and
xor
sub
ret
shlb
test
fnsave
inc
mov
pop
mov
rcrl
adc
push
mov
add
sub
dec
pusha
subl
or
stos
aad
inc
insl
in
aam
sbb
mov
sub
je
adc
push
js
pop
sbb
call
mov
dec
add
sbb
in
mov
pop
inc
xor
cmpsl
orl
loopne
add
sbb
loopne
je
dec
dec
movsb
cmp
add
les
mov
jne
stos
mov
jae
sbb
lods
add
cmpsl
xor
mov
add
xor
loopne
loope
les
xchg
stos
xlat
lea
pop
xor
dec
xor
clc
mov
ret
pushf
push
jns
pushf
or
sub
xchg
sub
mov
push
pop
sub
dec
addr16
or
xor
fidivrs
pop
outsl
fsubs
mov
xlat
imul
test
xchg
and
dec
push
data16
fisttps
and
mov
mov
sub
xor
mov
xchg
add
nop
gs
stc
subl
or
mov
inc
fcoml
cld
sti
inc
mov
push
fadd
jl
js
rclb
xchg
pusha
inc
lock
in
rcr
cmpsb
int
mov
shlb
out
pop
gs
loopne
adc
fs
aam
add
push
imul
mov
adc
lds
icebp
xorl
pop
mov
std
mov
ret
insl
call
lahf
jmp
mov
fsubl
fmul
ljmp
sub
jne
jl
mov
and
adc
test
les
aad
mov
hlt
jp
cmp
outsb
jge
aad
movsl
or
clc
int3
inc
dec
les
in
jge
test
pop
stos
out
call
ror
cwtl
dec
hlt
fstpt
cmpsb
mov
and
mulps
pushf
xchg
mov
out
add
je
ds
scas
pop
int
mov
xchg
xor
xchg
ds
add
ds
xchg
ret
jmp
loope
test
cmp
push
js
cmp
sub
and
cltd
dec
adc
cmp
lcall
fsubl
cld
ds
pop
and
stos
fwait
dec
daa
test
mov
xor
mov
dec
aas
cvtps2pi
dec
nop
mov
sbb
pop
in
andb
fdivrp
push
shll
xor
nop
in
lea
scas
lods
lret
cli
jp
inc
insb
push
xchg
rcrl
lods
or
jnp
mov
mov
lock
bound
and
push
xchg
inc
push
ja
mov
xchg
movsb
inc
and
sarb
push
xor
stc
pop
xor
mov
mov
test
stos
adc
mov
pop
adc
int
pop
popf
loop
lea
cmp
xchg
adc
jp
jae
inc
call
xor
mov
mov
in
xchg
add
ret
mov
jo
pop
testb
sarl
rep
lods
or
jbe
imul
lods
mov
movsb
es
mov
cmp
or
sub
and
fnstenv
std
push
and
insl
jecxz
mov
sbbb
outsl
outsb
mov
mov
outsb
les
gs
jo
pusha
add
popa
fcmovnbe
pop
or
push
lods
jg
gs
xor
and
in
call
adc
mov
sbb
add
sub
shrl
cwtl
add
inc
xor
ficoms
leave
push
dec
jbe
or
aad
aaa
mov
in
fisttpl
jmp
clc
cltd
jmp
outsl
imul
test
dec
cwtl
test
and
xchg
mov
mov
rep
add
mov
stos
pop
test
sub
mov
sbb
mov
iret
cwtl
lods
int3
cwtl
push
scas
mov
or
loopne
scas
pushf
add
clc
mov
inc
icebp
sbb
mov
jl
push
pushf
mov
dec
inc
and
je
sbb
sub
lret
push
clc
cmpsb
aas
stc
and
mov
lods
cli
lea
sub
push
mov
je
out
pop
or
add
and
in
ret
sub
pop
idivl
cli
dec
repz
xor
inc
push
push
pusha
aad
ret
mov
cmp
into
out
enter
je
mul
cmp
push
xor
in
rorl
inc
lcall
stos
push
inc
mov
adc
scas
adc
or
push
cltd
pop
cmp
cmpsl
lds
add
add
sarb
mov
or
jbe
pusha
push
in
jbe
je
testb
repz
inc
scas
and
loop
out
cmpsb
idivl
push
push
cmpsl
fsubrl
sub
add
dec
add
in
or
add
pop
mov
in
dec
pop
pop
adc
inc
mov
xchg
hlt
lock
es
cmc
inc
push
xor
mov
inc
adc
sti
gs
in
sbb
jne
in
inc
cmp
dec
mov
mov
pop
lock
pop
arpl
jmp
push
adc
jnp
scas
cmpsl
leave
mov
into
stos
pop
sbb
out
or
dec
cs
mov
mov
push
test
imul
pop
dec
bound
sub
lret
adc
push
insb
dec
fsubp
push
sbb
mov
daa
jns
out
mov
xor
gs
std
xlat
cs
add
fmul
sbb
inc
sub
adcl
es
xor
push
xchg
jmp
push
add
pop
push
filds
xor
stos
jb
adc
cmpsb
or
fnstsw
sub
pop
sub
push
mov
clc
mov
scas
jnp
fwait
or
mov
mov
inc
or
xor
dec
push
fdiv
push
mov
sahf
push
scas
jnp
mov
iret
cs
mov
add
cmc
push
mov
push
jne
xorb
popf
pop
sbb
dec
pop
sahf
stos
std
out
push
leave
adc
sub
inc
xchg
inc
or
pop
inc
jge
xchg
pop
cmp
jne
ljmp
inc
popf
cmpsb
in
fdivp
xchg
mov
pop
sbb
jo
jge
adcb
mov
insb
cmc
pop
xchg
add
mov
jmp
mov
inc
dec
dec
arpl
test
pop
stos
icebp
dec
inc
and
cmp
pop
add
or
xor
inc
arpl
push
inc
stc
in
jbe
cs
sub
loopne
push
ja
cmp
dec
movsl
mov
test
scas
mov
fsts
pop
mov
test
lcall
rcrl
sahf
pop
jb
lods
jge
adc
sub
std
dec
cmpsb
dec
mov
xchg
mov
imul
nop
fucomip
popa
sbb
xchg
stos
nop
mov
add
icebp
jl
fcomps
push
je
xor
leave
jge
push
js
sub
push
pop
pop
jns
mov
movsl
cltd
fyl2xp1
inc
enter
and
inc
cltd
out
sub
loop
in
add
adc
insb
jae
mov
xchg
sbb
cmpb
pop
cmp
lcall
inc
mov
lock
pushf
jb
fsin
mov
xchg
lret
imul
and
jecxz
fbld
cmp
into
icebp
sbbb
push
insb
jnp
mov
add
mov
jmp
sub
stos
mov
mov
in
ds
mov
adc
aaa
push
fsub
inc
cmc
mov
sub
mov
scas
loop
mov
mov
inc
loope
rol
in
push
out
shlb
jne
add
and
pop
xor
jnp
inc
sbb
add
in
inc
push
rolb
aam
and
dec
in
xchg
bound
ficompl
icebp
mov
pop
adc
sbb
mov
pop
jg
lods
push
pusha
sub
cld
add
mov
fs
rcrb
xchg
aas
xor
jb
inc
jl
in
or
arpl
mov
inc
mov
adc
imul
xchg
sbb
lcall
fdivr
cmp
sahf
mov
or
dec
in
cltd
shlb
jmp
jne
sbb
mov
inc
dec
pop
popf
rcrl
scas
leave
pop
cwtl
jnp
in
sub
and
jne
pop
iret
mov
ror
mov
jg
leave
dec
into
pop
pop
pop
subb
mov
aaa
add
faddl
scas
loopne
jp
je
dec
fnstenv
ret
push
dec
popa
mov
outsb
dec
xorl
in
or
ds
jae
leave
xlat
repz
mov
add
sahf
xchg
and
jg
pop
sbb
mov
add
in
xchg
in
jo
add
dec
mov
fsubr
sub
xor
sbb
shrb
jmp
in
cmp
dec
mov
inc
sbb
lea
sbb
out
mov
push
jp
mov
push
das
iret
andb
flds
pop
pop
nop
sbb
adc
stc
incl
mov
or
push
cmpsb
xor
cmp
ja
ds
enter
sub
pop
or
push
dec
lods
or
test
dec
in
cmpl
cmp
mov
adc
in
pop
dec
into
les
lods
scas
jae
shll
dec
ds
popf
jbe
jl
dec
cmp
push
es
adc
shlb
insb
into
clc
mov
jecxz
notb
test
loop
rorl
xchg
xchg
insl
cli
jne
adc
insl
ljmp
ret
add
lret
mov
out
popa
add
pop
cwtl
pushf
test
mov
enter
jae,pt
and
test
pop
xchg
es
mov
xchg
pop
xchg
ret
int
inc
adc
popf
inc
ds
mov
dec
mov
loopne
adc
cmp
gs
in
mov
jnp
sub
aad
add
adc
or
bnd
fldenv
dec
mov
mov
push
lcall
dec
push
out
pop
sbb
pop
ja
dec
xchg
test
mov
and
insb
lret
in
mov
adc
stos
dec
int
or
repz
iret
xchg
adc
in
jno
bound
dec
cmpl
xor
add
les
cmp
or
push
test
jge
xchg
sub
dec
in
cmp
pop
mov
inc
lds
in
push
mov
push
xchg
sub
je
jb
outsl
push
dec
data16
mov
pop
sti
pextrw
push
ret
out
mov
aaa
mov
repz
or
dec
jnp
popf
xchg
fisubs
lahf
repz
ret
mov
ss
fidivs
push
mov
lret
add
xorb
cmpsb
and
rcrb
mov
icebp
mov
mov
jg
lds
std
fldcw
sbbb
leave
movsb
and
fcmovbe
jp
or
in
lret
stc
pushf
scas
cmpsl
int
dec
outsl
inc
in
vsubps
out
leave
aaa
adc
int3
outsl
add
jle
ds
movsb
lret
insb
sbbl
repz
xchg
fcmovnb
ljmp
repz
fcompl
cwtl
cmpsl
and
loope
sbb
les
mov
add
inc
ja
sub
jmp
xchg
add
mov
fsubs
cltd
mov
sbb
loope
inc
cmp
cmc
adc
out
icebp
cltd
lods
push
sub
inc
mov
jmp
js
jb
icebp
cmp
cmp
lahf
stc
or
mov
leave
sub
or
icebp
xor
xor
push
push
mov
cwtl
jb
pop
push
mov
mov
sub
xchg
mov
cmc
pop
outsl
jp
dec
fisttpl
loope
out
mov
enter
leave
mov
aad
xchg
add
jb
sub
test
mov
pop
cltd
mov
ret
ret
das
jno
push
or
jmp
jp
pop
mull
push
pop
jle
inc
pop
mov
xor
dec
cltd
jbe
adc
mov
xchg
sti
sub
ret
enter
ret
imull
jae
in
xchg
adc
jecxz
inc
mov
mov
push
inc
loope
or
mull
imull
lea
and
and
mov
cmpl
lock
out
je
push
mov
ret
jns
ret
loope
pop
xchg
pop
mov
add
mov
push
push
in
mov
sti
mov
push
lea
xchg
jns
add
lahf
daa
sahf
push
bound
or
sub
add
sub
adc
rorl
call
dec
xor
xchg
pop
loop
mov
fndisi(8087
ret
test
outsb
enter
inc
push
xchg
xchg
xchg
das
push
push
aas
loopne
test
pushl
gs
cmpl
sar
jne
dec
xchg
xchg
lret
je
sahf
xchg
xor
mov
jg
in
xor
ret
xor
les
and
das
test
fnstenv
push
xor
sbb
push
scas
xchg
test
inc
jecxz
cmpsb
mov
cmp
int3
cmp
dec
mov
sbb
insb
sbb
repnz
repnz
mov
sub
lahf
outsb
aaa
fnstenv
in
pop
movsl
repnz
sbb
pop
aam
outsb
js
test
push
add
lret
nop
mov
out
pop
sahf
das
jno
pop
cmp
adc
insl
jmp
movsl
popf
stos
dec
jno
rcrl
rcrl
mov
and
js
addr16
stc
sub
sub
test
or
popa
jae
sub
adcb
push
loopne
and
push
rorl
add
xorb
inc
popa
push
or
hlt
jmp
mov
xor
je
jbe
and
pop
mov
sub
xchg
ret
or
mov
sub
cmc
adc
in
inc
mov
jno
xor
enter
sub
xor
inc
adc
and
xchg
test
jnp
push
leave
fbstp
cmp
aas
jae
sub
fistps
xor
jl
pcmpgtb
cmp
into
mov
mov
xchg
lahf
loop
ja
pushf
out
in
mov
enter
in
pop
popa
sbb
pop
std
push
movsb
dec
cltd
fidivrs
jp
mov
in
xor
dec
ret
push
mov
shl
popf
xchg
rorl
test
dec
xor
add
pop
inc
xchg
addr16
or
add
lods
out
mov
pop
bound
cmp
movl
mov
dec
pusha
push
imul
stos
dec
adc
sbb
xor
pop
inc
nop
pop
push
add
pusha
dec
push
pushf
test
push
and
enter
sti
lea
sar
pusha
iret
insl
movsl
fildll
test
ret
cli
mov
sahf
push
test
xor
and
adc
inc
adc
mov
movsb
fstl
xchg
or
in
dec
sbb
imul
xchg
mov
movsb
mov
mov
mov
js
syscall
stc
sbb
pusha
les
xor
mov
sub
cmp
jae
xchg
loopne
ss
out
mov
bound
mov
aad
jbe
and
add
fcmovb
lret
ret
adcl
nop
xchg
mov
cmp
aaa
pop
insb
mov
xchg
xchg
daa
clc
or
mov
cwtl
mov
test
aas
ljmp
fwait
xchg
push
popa
jecxz
call
ret
test
test
push
test
pop
jb
lock
pop
mov
mov
cmp
sbb
cmpb
push
testl
jl
cmovno
ss
lret
imul
movsb
les
push
mov
in
loopne
sub
addr16
int3
cmpsb
sub
xor
lahf
xchg
xchg
and
cmpl
stc
sbb
aas
or
ss
cli
inc
leave
mov
in
rsqrtps
outsl
insb
jmp
sbb
mov
jbe
pop
mov
shl
pop
fistpl
push
xchg
push
insb
sub
sub
mov
sub
or
rorl
xchg
and
push
xchg
movsb
movsl
cmp
mov
mov
add
hlt
push
jle
xabort
jmp
push
dec
mov
jns
popf
mov
cmp
mov
push
jg
jo
loope
jge
xor
and
push
push
pop
push
imul
adc
push
popl
mov
pop
push
and
in
or
clc
sbbb
push
pop
mov
or
inc
xor
test
into
adc
cmpsb
push
jae
adc
dec
mov
add
add
push
adc
aad
out
add
or
movsb
push
xchg
mov
jge
cmc
lds
aas
xchg
mov
call
mov
push
fdivl
shrb
cmpsb
inc
ret
lret
xchg
iret
testb
xchg
loop
es
mov
imul
jl
adc
les
sbb
in
leave
inc
inc
xor
dec
xchg
loope
push
popa
and
fs
in
sub
xchg
pop
inc
sti
ja
js
xor
test
sbb
test
push
addb
jo
loop
pop
and
mov
jnp
fcmovbe
lret
push
out
mov
shr
shlb
sbb
pop
lea
jbe
shlb
mov
push
sub
and
cli
add
push
shlb
popf
push
loope
adc
dec
sarl
cltd
or
mov
mul
cmc
xlat
or
aas
pop
pop
sub
popa
sub
out
push
inc
imul
and
inc
add
cmpsl
ljmp
fwait
shlb
xchg
imul
dec
lea
dec
inc
mov
mov
ds
xor
cmpsb
test
loop
shrb
data16
and
bound
mov
mov
mov
addr16
and
mov
push
push
fsts
scas
outsb
sub
lea
inc
addr16
mov
adc
pop
jo
ljmp
adc
aaa
dec
imul
out
and
push
cmp
fbld
xor
in
pusha
adc
out
jmp
loopne
fsts
add
push
mov
or
sub
aad
jmp
test
and
cs
dec
push
xchg
loop
push
push
iret
inc
std
push
pop
sub
call
lods
stos
int
lea
mov
adc
in
daa
and
test
mov
lock
sub
aam
cmpsl
mov
ret
es
enter
inc
sub
jne
and
xor
or
and
mov
jle
mov
fidivl
mov
ret
inc
pop
xlat
clc
push
sti
adc
test
mov
jo
cld
lock
mov
stc
sbb
cwtl
nop
ja
mov
xorl
adcl
mov
jmp
adc
jle
pop
psrlq
jae
xchg
sbb
adc
xchg
jmp
jnp
lret
test
lret
insl
lret
add
push
test
movsb
hlt
sub
lcall
adc
dec
xchg
push
data16
inc
inc
fisttps
push
add
dec
lret
ret
popf
in
fists
or
mov
sbb
mov
push
mov
sbb
aaa
jg
inc
cmp
sbb
mov
imul
and
and
les
or
or
repnz
mov
sbb
xor
shl
js
lahf
push
jp
outsb
sbb
popa
jo
xlat
xor
rcl
jne
or
test
movsl
scas
inc
mov
les
jns
inc
scas
fnsave
add
shrb
loope
xchg
mov
jmp
dec
dec
sti
mov
xchg
pop
adc
in
frstor
fs
mov
sbb
idivb
xchg
aam
mov
add
in
hlt
lret
adc
dec
movsl
nop
mov
std
adc
bound
lret
cmpsb
mov
jl
into
push
sub
decb
lods
jae
push
arpl
testb
dec
popw
cmp
fildl
xlat
ficoms
xor
mov
cli
test
pop
js
mov
fs
sub
stos
enter
pop
and
in
mov
push
inc
popa
pop
fisubrs
jg
pop
add
addr16
and
or
iret
ljmp
mov
mov
stc
arpl
sbb
leave
xchg
mov
push
jl
ret
sar
inc
and
mulb
mov
test
daa
aaa
inc
fdivrl
in
lret
or
scas
dec
testb
js
outsl
sub
cmc
mov
repz
enter
and
in
mov
outsb
call
dec
pop
jmp
enter
test
and
mov
sbb
clc
jl
testb
ds
movsb
jmp
rol
inc
xchg
fisttpl
sub
sbb
rcrb
xor
xchg
popa
popf
pushf
sahf
inc
out
fmull
fmuls
rcrl
inc
nop
pop
mov
push
int
xor
cmp
cmc
nop
add
or
sbb
dec
mov
jge
cld
flds
fsubrs
inc
sub
call
jmp
int3
inc
mov
jl
mov
dec
fcomps
mov
in
neg
jmp
fdivrp
cld
push
mov
xor
jmp
sbb
addb
jns
or
push
in
jmp
leave
jp
jle
sbb
dec
add
and
pop
jbe
mov
rcrb
daa
push
clc
xchg
hlt
jle
push
test
pushf
ret
or
xchg
test
push
xchg
rcr
jb
inc
mov
leave
and
jl
mov
push
addb
mov
xchg
cmpsl
cwtl
xor
adcb
push
fcmovnu
fildl
sbb
insb
jge
stos
cli
in
xor
add
addr16
adc
cld
mov
mov
jge
mov
mov
jp
loope
insl
mov
jmp
dec
sub
repnz
push
hlt
ret
dec
packuswb
and
lods
sub
test
dec
cwtl
ds
xor
push
sub
into
cs
das
mov
dec
aaa
mov
adc
mov
mov
sti
sbb
push
sti
scas
pop
and
shlb
mov
pushf
ljmp
insl
dec
pushf
aam
and
mov
scas
or
enter
ret
cmp
push
sbb
loopne
mov
je
inc
and
jp
loop
mov
mov
adc
ftst
in
xor
jo
cmpsb
jo
or
adc
pusha
lcall
push
dec
repnz
js
jl
adc
clc
aad
or
mov
bound
mov
popf
ja
push
js
push
xchg
ss
sub
and
test
lea
jne
jmp
add
decb
pop
scas
dec
adc
jae
dec
leave
out
aad
mov
sub
test
fs
pop
dec
out
test
mov
cld
in
lcall
mov
push
and
sbb
adc
push
or
adc
and
clc
in
cld
test
out
lods
test
popa
pop
add
sub
sahf
xchg
inc
push
loopne
mov
mov
fidivl
mov
mov
mov
scas
jge
sbb
xchg
js
mov
jmp
outsl
add
hlt
inc
ficompl
scas
sbb
xchg
hlt
sbb
mov
lods
mov
sbb
or
ficoms
sbb
adc
in
jno
es
mov
jge
in
mov
mov
cli
por
xchg
test
ret
ds
insb
sub
rorl
sahf
aam
mov
mov
add
adc
adc
jne
cs
cmp
std
adc
cmp
iret
mov
mov
dec
mov
cmp
push
cmpsb
xchg
fiadds
or
dec
mov
rol
test
adcl
mov
imul
xchg
pop
rcll
roll
lods
pop
mov
ffree
inc
notl
push
mov
insb
xor
push
pop
out
adcl
mov
fwait
jae
loopne
movb
test
jnp
scas
stos
gs
mov
test
pop
stc
leave
mov
shl
mov
fistpll
outsb
mov
iret
es
aam
inc
push
movsl
add
movl
mov
fldcw
stc
addr16
les
rcrb
dec
leave
nop
loopne
and
sti
js
fs
sub
xor
add
inc
push
in
outsb
adc
daa
push
in
cmpsb
pop
xchg
scas
lret
icebp
add
sahf
adc
lea
push
jp
fdiv
popf
imul
xor
dec
rcll
sbb
xchg
fistl
mov
sub
enter
xor
pop
sub
cmpb
pop
rcl
fisubrs
cltd
and
cld
sub
xor
pusha
add
xor
test
xchg
adc
aad
ds
flds
push
mov
cmpsb
lock
inc
jl
push
add
xor
mov
popf
fiaddl
loop
mov
mov
fcomps
pop
xchg
xchg
xchg
dec
pop
icebp
daa
dec
mov
mov
bound
fists
shl
push
xchg
or
sub
out
dec
xchg
leave
stos
rorb
in
mov
adc
push
pop
xor
fistpl
cmp
sub
push
ret
xor
les
shlb
les
add
add
dec
out
cmpsb
mov
xchg
lcall
or
push
out
xchg
adc
ja
call
cmpsb
push
jno
mov
sbb
and
cmpl
and
ss
xor
pop
xor
push
fsts
lock
int
sub
mov
std
push
cmp
inc
jb
push
imul
push
out
or
rclb
and
inc
push
pusha
scas
lcall
lahf
aam
lahf
call
insl
aaa
jnp
cld
ds
lods
xor
push
and
xor
int3
inc
in
pop
push
inc
dec
xor
push
add
fiaddl
xchg
mov
mov
or
sub
mov
jno
cmpsl
mov
js
andb
out
push
ljmp
leave
jo
inc
push
test
andl
popf
inc
adc
pushf
cmpsb
inc
mov
fdivrs
in
jmp
sbb
inc
and
pop
cli
adc
outsl
fbstp
test
testl
rolb
enter
int3
and
lea
mov
pop
loope
leave
cmp
mov
inc
and
hlt
mov
inc
lcall
xchg
imul
pop
mov
out
fldl2t
mov
rclb
cmp
dec
inc
jnp
shld
ds
mov
loope
mov
mov
cmp
adc
test
enter
fcmovnb
iret
movsl
add
shlb
es
jns
popa
es
in
nop
mov
cwtl
call
leave
cld
pusha
fdivr
pop
sahf
xlat
and
notl
sbb
pusha
pop
je
test
call
sub
std
or
out
jmp
ljmp
push
mov
daa
incl
ds
sahf
sub
dec
adc
out
sbb
insl
lret
push
aad
stos
sub
adc
xchg
cltd
mov
and
jmp
fbld
push
xchg
aaa
jo
test
test
and
or
roll
jle
adc
sub
aad
xchg
imul
insl
or
jbe
mov
add
outsl
ljmp
pop
mov
push
push
iret
mov
push
lods
pop
xor
test
inc
and
int3
vpcmpeqb
xchg
arpl
inc
xor
mov
xor
sbb
push
and
jo
std
insl
jp
rcrl
fistl
mov
imul
push
iret
push
mov
mov
mov
dec
xor
rolb
mov
mov
mov
xor
adc
cli
sub
and
loop
mov
cmp
int
jg
xchg
and
jge
jle
icebp
fldcw
popa
insb
dec
rclb
mov
lea
push
test
add
cwtl
sub
and
xchg
or
movsl
jmp
ja
bnd
rcrl
dec
and
or
hlt
mov
pop
cmp
fimuls
xor
cltd
mov
mov
cmp
dec
sub
pop
push
nop
adc
sarl
sti
outsl
enter
add
lcall
inc
jl
mov
std
iret
mov
xorl
icebp
cld
shr
jp
sub
pop
cmpsl
fcoms
cmp
insb
std
sti
stc
lret
xchg
call
imul
outsl
adc
jae
arpl
and
sti
ret
push
dec
xlat
sub
sub
dec
hlt
xchg
mov
pop
jnp
aas
fcompl
sbb
dec
sub
negl
jle
jmp
ds
mov
call
xchg
out
pop
das
int3
inc
subb
cmp
jp
pop
std
adc
inc
pop
je
jge
mov
xchg
bound
sbbl
mov
mov
ds
testb
outsb
imul
push
subl
dec
cmp
out
and
loopne
mov
adc
sub
fs
or
jae
test
pusha
mov
daa
lret
cld
pushf
mov
push
aaa
shlb
cmp
or
or
cmp
sub
adc
jecxz
xlat
in
mov
mov
adc
daa
arpl
das
repz
pop
and
push
push
testl
lahf
mov
fucom
repnz
loop
sti
lock
mov
inc
mov
movsl
dec
shrl
xchg
sub
scas
movsb
or
decb
popa
cwtl
xchg
call
push
fwait
pop
push
out
fisubs
mov
in
cwtl
inc
pop
xor
inc
inc
sbb
xchg
pop
sbb
xchg
xchg
test
inc
add
gs
sahf
insl
jns
aad
cltd
mov
pusha
and
jne
mov
out
scas
ret
ror
cmp
daa
cmp
and
jne
cltd
fsubs
sbb
idivb
jmp
rol
sbb
lea
pop
and
shlb
cmp
cmp
loopne
or
cli
pop
mov
in
loop
jae
in
jp
or
sub
rcr
jbe
mov
or
dec
cld
add
les
adcb
in
test
lcall
sub
lock
pop
inc
and
movsb
jg
rolb
xlat
pop
negl
sub
push
sbb
add
push
outsb
push
jne
out
xchg
cmc
inc
pop
cli
fwait
or
js
ds
pushf
daa
jge
xor
jo
nop
int3
sbb
xchg
lcall
ficoms
or
adcb
and
mov
js
ret
jmp
or
hlt
jle
stos
adc
pop
push
mov
in
jno
xchg
icebp
imul
mov
outsb
leave
jae
sub
bound
scas
les
dec
rclb
push
push
sti
lock
mov
iret
sbb
test
cmp
xchg
cmc
jae
sub
int3
out
sbb
aam
les
push
sbbl
fcomps
jbe
div
push
popf
mov
push
dec
pop
dec
xor
in
cmpsb
and
mov
in
fs
int
movsl
jmp
push
xchg
push
rclb
cld
loopne
inc
push
clc
jno
enter
fsubrl
sbb
jae
mov
call
cli
lods
filds
int3
dec
stc
push
fnstsw
std
adc
or
imul
jmp
xchg
test
dec
mov
xor
jmp
stos
fwait
icebp
das
cs
mov
mov
pop
mov
adc
mov
xor
repnz
icebp
adc
ret
jae
sub
int
and
pop
stc
jo
jae
xor
adc
jge
lock
je
aad
addr16
popl
in
and
mov
scas
push
sarb
pop
ljmp
dec
mov
shrb
xorb
cmp
popa
inc
enter
ret
int3
push
mov
jg
imul
lods
inc
bound
test
inc
cld
loope
xor
enter
ja
testl
leave
mov
sbb
enter
sbb
mov
rcr
inc
xchg
adc
decl
addr16
popf
inc
fidivrs
add
and
fstpl
call
ss
mov
jge
popa
fidivl
mov
nop
and
int
cmp
jmp
sub
dec
decl
and
test
jmp
andb
push
movsb
rcr
stos
cmp
or
inc
fwait
cmp
mov
popa
adc
cs
out
dec
xorl
xchg
jge
sbb
test
mov
imulb
add
xor
daa
ds
and
incl
inc
stos
mov
js
stc
push
jbe
dec
dec
outsb
filds
out
cmp
les
jns
cmp
loope
mov
mov
in
pop
add
ja
inc
ficoms
lods
mov
rolb
shll
fs
and
sbb
orl
cmp
or
pusha
push
dec
clc
pop
jmp
rorl
rcrb
mov
mov
sbb
xchg
shl
dec
add
adc
cmp
ds
sub
push
mov
stos
aad
mov
dec
push
xchg
and
pop
jecxz
clc
rorb
shlb
loopne
sahf
push
rolb
mov
pop
lea
push
jbe
inc
dec
and
or
sar
mov
mov
sub
mov
jg
mov
push
pop
push
push
lret
or
lret
andps
xchg
enter
pop
cmp
or
iret
dec
mov
pop
and
in
push
xor
pop
mov
or
aas
mov
loopne
inc
cwtl
stos
test
ret
ficompl
movsb
mov
outsb
nop
mov
loope
shlb
pushf
aaa
or
sbb
mov
or
mov
or
or
sbb
int3
xchg
sbb
fisubs
jmp
jb
in
push
lock
jo
adc
add
sub
es
movsl
cmc
add
out
jbe
adc
test
cmp
arpl
dec
push
xchg
inc
stos
sbb
mov
jne
mov
mov
loopne
xor
rclb
icebp
cmpsl
adc
in
mov
nop
out
or
pop
pushf
movb
mov
push
lea
imul
ret
aam
out
lea
les
xor
xchg
popa
push
adc
pop
push
and
lods
fwait
popa
push
out
rcrl
adc
jle
and
inc
sbb
pop
pop
add
pop
out
dec
stc
dec
push
push
pop
sbb
movsl
ret
sti
xor
loopne
je
inc
mov
mov
jg
push
adc
test
or
cs
cmp
adc
jb
or
mov
pushf
cmpsb
repz
xor
lds
pop
lods
repnz
lds
fmull
cmp
adc
pop
sbb
notb
scas
push
xchg
push
int
lahf
insl
push
push
jno
pop
shlb
add
xchg
leave
push
push
dec
jge
lods
or
icebp
sub
ds
cmp
mov
sub
fmul
repz
cmp
jmp
das
in
ret
mov
cmp
or
sub
jnp
mov
lds
mov
push
mov
pop
add
mull
movl
or
mov
das
in
xor
aaa
addr16
jb
arpl
mov
xchg
ds
or
cmpl
dec
and
ds
jnp
fs
aas
mov
frstor
cmc
lock
mov
dec
jp
mov
or
shll
pop
insb
shll
jne
sbb
cmp
or
in
imul
cmpsb
and
cmpsl
out
xchg
mov
mov
js
shl
mov
xor
icebp
pop
xchg
xchg
dec
push
xchg
fiadds
inc
adc
push
pusha
out
jmp
sbb
les
loop
out
xchg
push
sbb
inc
xchg
aam
cmp
xchg
or
or
inc
pop
mov
sub
repnz
mov
fadds
mov
dec
jp
call
sti
aaa
dec
in
and
sbb
mov
and
pop
daa
adc
gs
fs
lock
ret
pop
pop
imull
pop
xor
push
jns
stos
scas
pop
roll
loopne
ret
fs
mov
lea
cmp
sbb
pushf
or
addb
and
outsb
stc
outsb
jmp
dec
add
lret
iret
dec
inc
ljmp
repnz
movsb
lcall
push
in
shll
cmpsb
sbbl
jno
sbb
leave
mov
inc
mov
lahf
jb
add
pop
xchg
test
insb
test
lea
jno
inc
sub
mov
sub
outsb
in
and
cmpsl
sbb
enter
test
pop
mov
mov
out
test
cmp
mov
push
andl
add
xor
into
scas
sbb
or
pop
cmp
sub
sub
outsb
les
push
adc
push
jp
jne
inc
sbb
mov
lea
jbe
std
jmp
loop
xchg
leave
xor
scas
out
and
add
xlat
movsl
adc
js
mov
pusha
push
arpl
pop
push
movsl
cltd
out
pusha
lds
fsubs
xchg
movsb
or
adc
loop
pop
mov
shrb
add
jno
and
lock
int
mov
pop
push
xor
sbb
sbb
lcall
jns
add
rol
scas
dec
and
sbb
movsl
cmp
fldcw
aas
adc
lds
aam
xchg
mov
repz
fbld
xlat
sarl
xchg
sub
loopne
push
js
push
xchg
mov
pop
or
pop
popa
std
push
data16
cmp
pop
xchg
sbb
xlat
mov
test
dec
push
pop
movsb
inc
xchg
rol
push
mov
ss
mov
inc
pop
mov
ss
pop
sarb
dec
loop
loope
stos
fcomip
repnz
movsb
mov
mov
xchg
loope
mov
mov
jmp
mov
dec
andl
or
sbb
mov
inc
out
loop
mov
repnz
out
in
xchg
aad
jmp
outsl
xchg
sub
cmp
cmpsl
sub
into
xor
xchg
or
out
insl
adc
or
inc
cmpsb
popf
loopne
xacquire
imul
cld
mov
rcr
sbb
cmp
cmp
xchg
add
jns
xor
fdivs
jle
mov
call
insb
addr16
push
in
push
ds
pop
outsb
pop
out
rcll
rolb
add
inc
sbb
or
pushf
arpl
call
lods
sbb
push
ret
notb
iret
push
sbb
sub
hlt
std
pushf
cmp
movsb
popa
aad
outsl
pop
inc
xor
adc
cmc
aaa
sub
xchg
inc
mov
les
xlat
add
imul
and
lock
inc
sub
test
mov
out
jo
sbbb
push
or
pop
es
popa
xchg
lds
dec
lahf
sub
rol
jae
dec
pop
mov
fistpl
lods
xchg
inc
adc
testl
pop
add
jae
adc
xchg
mov
bound
push
jmp
xor
jp
cmpsb
repz
sbb
xchg
iret
ljmp
scas
mov
aad
mov
pusha
in
imul
add
pop
sbb
add
jae
outsl
sub
add
in
push
stos
iret
sti
out
mov
loopne
mov
push
popl
movsl
inc
and
sahf
lea
pop
adc
loop
cmp
cmp
push
sub
jno
ss
fstl
mov
leave
daa
mov
stc
icebp
cmp
mov
lcall
outsb
movsb
aam
mov
in
cmpsb
sub
sub
xchg
add
fldenv
jge
xchg
jg
mov
and
add
jg,pn
popf
mov
mov
adc
add
lock
test
ret
int
fcmovnu
jg
push
lods
xor
mov
add
pop
push
push
xchg
pop
shlb
lds
push
pop
cmp
lock
push
fldt
outsb
mov
fsubrs
icebp
stc
adc
and
mov
add
lea
xlat
rol
xchg
pop
fs
sub
mov
and
pop
or
aaa
dec
adc
push
xchg
sbb
xor
sbb
test
outsl
lock
and
fstpl
push
cmpsl
xor
rcll
lret
mov
or
mov
push
and
scas
mov
mov
jp
xor
dec
daa
loopne
mov
loop
call
cmp
in
sub
ja
cwtl
addb
xchg
aaa
jo
push
lahf
out
push
shr
leave
or
scas
or
jg
mov
lock
ljmp
adc
mov
push
mov
push
sbb
pop
loop
dec
or
fwait
push
cmp
aam
xchg
sub
xor
cmpsl
nop
bound
jb
icebp
or
and
xlat
mov
add
pop
jmp
push
mov
mov
fiadds
add
push
sbb
add
subl
push
pop
ret
cmp
cmp
jle
add
movsb
push
push
jge
xchg
or
jb
inc
test
into
cli
stos
dec
pop
mov
cmp
cmpl
inc
icebp
mov
xorb
xchg
dec
xchg
pusha
or
rclb
jns
jle
adc
inc
repnz
addl
outsl
rclb
or
clc
dec
inc
loopne
outsl
aad
jns
outsl
aam
clc
adc
mov
add
gs
mov
inc
pop
mov
and
ja
out
or
add
xchg
jge
push
jbe
mov
sub
mov
enter
fisubrl
ja
push
pop
sub
fisttps
pop
mov
inc
stos
call
push
xchg
sub
iret
xchg
nop
pop
adc
in
or
testl
cmp
in
xchg
lods
outsl
pop
and
popf
jb
dec
das
push
cmc
nop
jmp
popf
insl
jle
sub
or
cmp
xchg
xor
roll
addr16
xchg
jle
push
inc
pop
test
xor
shl
pop
dec
inc
pop
inc
sahf
jmp
add
mov
sbb
and
sahf
pop
fsubs
mov
mov
imul
mov
loope
pop
in
insb
cmp
clts
and
scas
leave
xchg
dec
xchg
add
shr
xlat
fcomip
mov
or
dec
cmpsl
je
jb
loop
add
insl
gs
mov
pop
imull
jbe
cmp
imul
lcall
xchg
cwtl
pop
ret
mov
cmp
mov
jbe
stos
out
mov
xchg
stc
rclb
add
jbe
pop
push
out
popl
push
ss
dec
jmp
call
imull
push
arpl
fcompl
mov
out
and
add
jb
or
pop
stos
pop
push
mov
jecxz
dec
jge
dec
outsl
lods
cmp
ret
ja
loopne
jg
sbb
lahf
sbb
mov
jg,pt
inc
pop
cmpsl
xorl
xchg
cltd
insb
lea
repnz
xchg
loopne
xchg
mov
dec
push
mov
or
cld
add
push
and
daa
mov
test
add
test
cld
mov
fsts
xlat
lock
mov
sbb
xor
out
lods
jno
rclb
xchg
xchg
fwait
xor
fmull
pop
hlt
inc
cld
xchg
repnz
outsb
xor
mov
inc
or
cmp
add
jg
fstl
push
pop
xchg
jnp
jne
ljmp
pop
sbb
jno
jbe
mov
pop
leave
pop
test
movsb
cs
pop
xchg
mov
mov
add
cltd
mov
push
into
mov
sbb
pop
cmpl
fildll
stos
out
push
mov
and
repz
cmp
repz
psubsw
adc
sbb
iret
cmp
iret
divb
adc
mov
adcb
js
ja
xor
stos
pop
dec
xchg
xlat
lods
sarl
out
movaps
xchg
sbb
mov
push
into
nop
jno
jle
jmp
mov
shrl
sub
cmp
push
mov
jle
pop
insl
mov
movsl
rclb
push
inc
mov
sub
jno
jbe
repz
cmpl
add
xlat
sahf
mov
adc
add
add
int
xchg
jp
in
cmpsb
divl
mov
push
jl
iret
movl
mov
sub
inc
push
adc
pop
notl
leave
cmp
xchg
addr16
iret
bswap
mov
adc
mov
pop
dec
cmpsl
jmp
mov
push
add
ds
push
sar
rcr
scas
or
jns
hlt
lea
popa
rclb
pusha
and
aaa
subb
mov
push
pushl
movsb
add
lret
out
out
jmp
inc
cli
sbb
add
push
ds
dec
adc
loope
jecxz
cltd
lcall
adc
mov
out
push
ljmp
aad
lds
pop
jnp
mov
fistl
xchg
aad
lahf
out
jle
std
mov
sub
pop
lds
and
scas
pop
jae
daa
aas
xchg
push
jl
dec
adc
movsl
push
dec
push
mov
sub
mov
loop
jp
inc
mov
jl
or
jno
add
lods
out
push
xchg
sub
aam
leave
ficompl
lahf
sysenter
or
xchg
push
addr16
aas
push
xchg
je
and
pop
and
aas
mov
mov
jb
negl
ljmp
dec
js
jle
dec
lock
ret
andb
inc
pop
mov
xchg
pushf
insb
sbb
and
loope
xchg
jmp
dec
ret
out
mov
xchg
cmc
jnp
mov
fldt
pop
aaa
inc
push
adc
ret
insb
mov
mov
push
out
popf
mov
rcrl
push
mov
inc
int
pop
inc
cmpsb
pop
adc
pop
lret
pop
jp
pop
jle
sbb
and
pushf
out
xchg
adc
add
lods
in
mov
and
or
jg
arpl
push
inc
and
cwtl
dec
cmc
je
add
repz
jns
lods
fcmovne
shlb
aad
mov
shll
dec
rclb
mov
pushf
jl
imul
lea
mov
jo
mov
cs
inc
imul
pop
xchg
daa
or
inc
xchg
punpckldq
out
xchg
adcb
pop
sub
push
xorb
dec
inc
repz
adc
sti
xlat
mov
cmp
inc
mov
pusha
sbb
sahf
int
push
pop
xchg
stc
fnstsw
inc
nop
filds
xor
lret
jl
imul
xchg
xchg
push
or
cld
fldenv
and
adc
shll
lea
sub
fnstenv
lea
movsb
out
loopne
lock
mov
imul
jo
insb
loope
ret
mov
xchg
cli
into
mov
push
test
push
sbb
std
nop
ret
loopne
inc
ret
jle
inc
inc
mov
mov
rcll
adc
fwait
aam
ja
ljmp
inc
mov
dec
cmc
dec
shrl
sbbb
dec
mov
cs
or
cltd
and
lcall
out
mov
shrb
dec
fstpl
ret
dec
mov
push
stc
lea
arpl
xchg
pop
fisttpl
inc
jae
aam
fldl2t
lods
cmp
jne
xchg
mov
cltd
aad
pusha
push
jno
sbb
shl
push
push
test
iret
lret
push
mov
add
scas
xchg
push
pop
popa
xchg
sub
sbb
or
in
push
and
and
cmp
mov
inc
adc
mov
loopne
push
inc
cmp
pop
sbb
imul
xchg
and
lds
stos
mov
dec
cmc
sbb
push
cmp
test
test
pop
dec
ds
cmp
and
inc
and
and
in
pop
or
js
jnp
add
call
enter
std
xor
aam
inc
lret
sahf
popf
loopne
and
cs
dec
scas
outsl
push
mov
cmp
sbb
leave
call
aaa
cmc
arpl
out
lcall
dec
addr16
shlb
cmp
xchg
cmpsl
fsts
cmp
pop
adc
mov
mov
inc
pop
cmp
or
fidivrs
mov
inc
data16
push
stos
push
xchg
mov
fnstenv
push
sub
imul
insl
inc
inc
lcall
jmp
sahf
ja
arpl
lds
mov
mov
sbb
cmp
jns
mov
incb
mov
jno
jg
adc
mov
loop
jg
cmp
jmp
jo
mov
sub
pop
aad
push
sub
lock
loope
stos
mov
ja
outsb
cltd
push
aas
adc
data16
add
inc
mov
inc
and
repz
cmp
testb
ljmp
pop
pop
push
jbe
andl
sub
mov
fucomi
std
jg
jmp
insl
dec
loop
neg
mov
xchg
mov
xchg
or
inc
fnsave
lea
or
fwait
mov
or
imul
or
mov
dec
bnd
inc
cwtl
or
fldcw
repnz
lret
inc
inc
lcall
mov
pop
mov
adc
cld
clc
add
aas
repnz
fbld
leave
mov
or
mov
jnp
sub
clc
adc
pop
mov
mov
in
push
hlt
or
aad
cmpsl
xor
sbb
sbb
pop
mov
gs
cmp
lret
xlat
leave
sub
out
cltd
test
ljmp
xchg
shll
xchg
sbb
test
out
sbbl
test
mov
and
imul
push
leave
jae
divb
sub
in
hlt
aad
addr16
outsb
jmp
cmp
mov
ss
jge
inc
inc
repnz
in
dec
pop
lahf
hlt
mov
out
adc
xchg
shll
nop
sarl
sub
pop
add
adc
cli
xchg
outsl
and
imul
push
loopne
sbb
hlt
lret
inc
push
mov
push
shlb
out
or
xchg
ja
xchg
push
xor
lods
xchg
push
push
cmpsb
xchg
and
add
sbb
fadds
xor
in
mov
sti
push
int
iret
test
stos
not
add
inc
or
aaa
push
ljmp
pop
mov
outsb
pop
xchg
shll
lods
gs
mov
insb
sub
insl
jp
pop
stc
shlb
pop
aad
movsl
sub
scas
shlb
dec
popa
sti
insl
jo
pushf
cli
jb
andb
outsl
test
rolb
jns
cmpsb
pushf
adc
arpl
inc
jg
dec
cmp
lds
leave
mov
mov
stc
push
fidivs
jl
faddp
ret
jno
cmp
pop
and
pop
flds
lahf
sahf
add
push
movsl
sbb
or
xchg
movsb
cwtl
cmp
sub
popf
scas
aaa
je
andb
repz
add
dec
mov
pop
shll
popa
mov
sub
adc
out
lock
into
inc
movsl
jge
mov
cmovp
sbb
shlb
mov
scas
cmp
cmp
es
jb
test
shrl
sbb
lock
xchg
dec
xor
jmp
int3
sbb
negb
icebp
hlt
in
out
push
push
cld
int
sub
push
hlt
cmp
pop
insl
dec
push
stc
push
ljmp
sbb
push
aaa
addb
loop
into
sbb
cs
shll
add
push
loop
push
mov
fbstp
addl
cld
add
pop
or
sbb
xor
insl
push
popf
xchg
mov
pushf
adc
mov
sarl
jno
adc
jbe
xor
out
clc
cmp
sbb
loop
mov
jb
and
or
push
repz
sar
dec
mov
es
jno
mov
push
mov
jne
jb
cwtl
loopne
in
loop
sub
xchg
xor
in
mov
or
pop
xchg
push
or
mov
dec
scas
aad
jle,pt
arpl
pushf
mov
cltd
sbb
jne
sbb
add
cmp
mov
push
xchg
imul
jle
push
into
ja
inc
jb
cmp
or
cmpsb
lret
jnp
sarl
push
xor
icebp
scas
xchg
cmpsb
movsl
mov
mov
dec
push
loop
xchg
ljmp
lock
mov
pop
and
jno
enter
mov
in
mov
fwait
jecxz,pt
cli
xchg
push
pop
mov
out
add
imul
je
xlat
cmp
push
push
dec
mov
ret
sbb
inc
pop
sub
ret
push
cmp
cmp
and
std
sub
xrelease
aad
jo
and
ljmp
jns
gs
dec
mov
push
jmp
dec
dec
push
aas
xchg
std
adc
sub
pop
jge
xchg
les
xchg
aas
rcrl
xor
insb
fadd
cld
ja
test
mov
mov
or
repz
jg
xchg
inc
pop
stos
lods
pop
sbb
or
mov
inc
icebp
inc
sbb
cmp
push
out
mov
dec
push
shl
data16
sbb
out
cs
jb
mov
loopne
xchg
mov
push
mov
subl
fldt
lahf
mov
pop
aam
or
ja
mov
jae
jle
enter
imul
lret
sti
push
movsl
sub
sbb
mov
in
gs
repnz
jae
push
mov
xlat
dec
mov
lret
sbb
pop
adc
stc
or
xchg
and
mov
mov
and
inc
or
mull
inc
add
inc
loopne
popa
pop
insb
jp
jbe
hlt
test
mov
xor
jge
inc
inc
inc
xchg
or
mov
xchg
cld
sbb
dec
xor
int
jnp
daa
and
das
hlt
pushw
clc
mov
xchg
jb
insl
arpl
jne
mov
std
xchg
dec
out
cwtl
call
lods
inc
cld
jp
jne
repz
mov
lods
pop
mov
insb
shrl
and
pop
xor
xor
mov
jne
lret
cmc
add
bnd
jb
xchg
mov
insl
les
andb
inc
sub
fbld
add
jns
iret
pop
push
inc
add
sbb
pop
push
stos
enter
lret
pop
enter
inc
ds
cs
sbb
lret
enter
xor
mov
xchg
xor
or
xchg
and
lock
addr16
lods
xchg
dec
inc
cmp
pop
mov
and
xchg
add
xor
push
aam
cmp
push
push
sbb
xor
pop
push
cld
fimuls
xor
jb
xchg
and
fsubr
loop
mov
or
js
cmp
xlat
jae
clc
inc
push
and
mov
and
testl
cltd
ficoms
and
or
scas
inc
fsubl
js
out
and
roll
inc
push
dec
mov
mov
cmp
mov
cmpsl
sti
aaa
and
push
cmp
jne
lock
fs
out
leave
xchg
imul
jae
enter
push
jp
mov
stos
movsl
inc
jne
movsb
mov
pop
adc
xchg
inc
mov
add
xchg
push
pop
insb
pop
pop
xchg
add
and
ret
test
arpl
mov
aaa
pop
rolb
xchg
aad
and
xchg
jle
dec
gs
and
inc
dec
push
repnz
cmpsl
je
cmp
popa
fbstp
nop
mov
xor
adc
xchg
adc
shl
addr16
xor
stos
jb
addr16
xor
fwait
add
out
push
push
cmp
pop
jl
xchg
and
xor
xchg
mov
iret
hlt
lock
xchg
mov
jge
jmp
jno
xlat
sub
xor
mov
push
shlb
movsl
sbb
stos
jae
jmp
dec
int
sti
and
loope
push
cmp
sbbb
mov
fs
repnz
mov
pop
jnp
loopne
dec
pop
nop
mov
or
bound
scas
lea
jo
jecxz
add
and
inc
mov
sub
enter
inc
movsl
sahf
adc
xorl
movsb
sub
xor
idiv
lret
shll
jne
sub
cmpsl
jge
mov
sarb
cmc
jmp
scas
dec
fsubrl
jbe
stos
xchg
xchg
push
or
add
or
lods
and
pop
adc
stos
cmpsl
add
cmp
and
popa
test
shr
push
push
add
fidivrs
rcrl
roll
jne
bound
mov
mov
inc
nop
in
or
cld
add
jne
gs
add
pop
cmp
push
into
add
jmp
ljmp
bswap
sbb
fimuls
jp
in
jmp
sub
loopne
loope
fidivrl
sti
loopw,pn
mov
cmc
jecxz
jecxz
mov
rorl
aaa
mov
mov
pop
inc
lock
ficomps
icebp
shll
xchg
gs
jne
inc
pop
mov
inc
mov
sbb
xchg
push
dec
lods
pop
and
xchg
adc
ret
cmp
fildll
or
pop
into
sti
pushf
xchg
push
stc
popf
jl
cld
js
mov
pop
jo
jle
mov
jmp
adc
pop
ja
adc
ss
sti
fs
je
push
and
inc
add
add
jge
jo
into
xchg
jecxz
xor
lahf
pcmpgtd
cmp
xor
and
inc
nop
test
pop
arpl
pushw
repnz
lret
inc
jno
int3
jns
into
xor
dec
call
testl
push
pop
pop
sbb
sub
icebp
mov
in
lret
or
push
pop
js
orl
xchg
cld
adc
jbe
cs
xchg
sti
mov
stos
xor
lret
pop
xlat
dec
sbb
test
ja
mov
mov
and
adc
enter
dec
scas
cld
nop
push
jge
es
into
outsb
rcr
cltd
or
std
aam
ud2
dec
pushf
cmpsl
sub
mov
dec
lcall
repnz
and
and
lods
lret
sub
stos
and
lds
mov
mov
sbb
xchg
mov
push
add
xor
mov
and
add
sbb
test
sbb
mov
xor
fwait
mov
jg
ss
inc
xchg
pushl
sbb
push
xchg
addl
sub
subl
push
pop
loop
imul
pop
es
mov
cmpsb
out
arpl
movsb
sbb
out
in
sahf
mov
inc
lret
sub
mov
scas
inc
jge
jl
add
dec
pusha
or
or
jge
add
mov
push
inc
mov
sbb
jae
jmp
cmp
shrl
mov
lahf
adc
mov
sti
jle
sub
mov
mov
mov
cmpsl
sti
mulb
fildll
nop
aas
push
and
inc
and
or
negb
pop
test
pop
sarl
lods
jno
inc
hlt
dec
xor
push
adc
jno
mov
shrl
push
dec
mov
scas
adc
in
mov
mov
fs
fistl
jle
or
loopne
or
lcall
test
out
test
outsl
lahf
imul
fnstsw
imul
sub
mov
xchg
std
js
out
xor
fcompl
clc
pop
into
test
bound
jg
jmp
les
repz
and
mov
sub
mov
jae
adc
popa
mov
add
pop
rorl
sub
mov
test
into
mov
mov
insl
repz
jne
add
mov
je
pop
test
sbbl
inc
orl
aad
mov
mov
xor
fnstsw
push
mov
out
mov
in
or
push
adc
dec
sub
and
mov
sbb
and
sub
xor
inc
sub
push
je
in
cwtl
aas
imul
sub
test
mov
mov
mov
lcall
divb
sbb
out
pop
xchg
mov
sahf
and
add
jae
pop
mov
cmp
dec
mov
mov
jl
gs
mov
mov
mov
push
xlat
dec
insl
jae
popf
push
je
mov
jecxz
addl
xchg
jge
das
arpl
test
bound
sbb
dec
push
xchg
push
cmp
in
sbb
cmp
scas
fldcw
lcall
rorl
sbb
push
in
lcall
das
jmp
outsb
push
popf
xor
jl
orb
dec
inc
jmp
and
lea
cmp
add
and
or
sub
xor
daa
cmp
movsl
or
aam
mov
dec
fisubrs
cmp
jecxz
cmp
stc
inc
cli
xchg
jl
aad
out
or
std
sti
into
sub
sbb
ror
jns
movsb
add
mov
out
dec
aam
lcall
sub
cmp
sbb
and
leave
test
mov
mov
mov
cmp
mov
mulb
mov
sahf
push
push
pop
adc
mov
out
xabort
dec
mov
popl
xor
jns
je
cmp
cmpsb
dec
out
aaa
js
sbb
xor
sub
sbb
mov
movsl
out
std
or
and
movl
and
jae
lea
add
ljmp
mov
mov
testb
sbb
mov
adc
jge
mov
bnd
inc
aas
adc
orl
jae
hlt
into
sub
adcb
imul
adc
into
mov
addr16
mov
push
stos
push
mov
cltd
std
cmp
xor
fs
rcr
cmp
sbb
sahf
push
imul
push
sbb
das
ret
dec
call
jecxz
or
daa
fidivl
mov
cmpb
lret
sub
jmp
test
out
xchg
imul
mov
dec
outsl
add
sbb
dec
push
gs
xchg
sbbb
fs
cltd
adc
std
int3
adc
lods
shr
cltd
xchg
and
test
or
jno
push
mov
mov
inc
mov
xor
and
hlt
pop
outsb
and
and
inc
sub
xor
sbb
mov
testl
sub
adc
jmp
mov
and
xor
lods
lret
sbb
add
stc
ret
push
and
sahf
std
jecxz
in
mov
push
int
xchg
imul
mov
cmpb
xor
in
adc
aas
xchg
mov
cmpsb
mov
int
push
push
ficoml
pop
scas
push
out
mov
push
mov
lods
cmc
nop
push
js
jp
sbb
ds
add
pop
adc
call
push
sub
sbb
jb
mov
lea
out
repz
add
sahf
xor
adc
fadds
mov
stc
es
in
push
loope
dec
and
stos
add
sbb
or
repz
popa
fdivl
and
dec
lahf
pop
xor
jo
cmp
or
leave
mov
inc
sbb
les
mov
movl
and
pop
js
sub
lods
stc
add
adc
mov
adc
cs
and
popa
scas
xor
mov
fdivrs
sbb
ret
mov
pop
into
cmp
mov
addr16
and
pop
test
sbb
xor
inc
xchg
icebp
aam
dec
imul
icebp
sub
and
repnz
loop
adc
lock
lds
xchg
cs
jbe
cli
popa
cmp
xor
or
ret
je
xlat
xor
sti
and
or
mov
repz
stos
or
sub
sbb
rcr
bswap
loopne,pn
add
adc
dec
addb
and
cwtl
ss
imull
fidivrs
movsb
jge
mov
pop
popa
add
into
out
pop
mov
call
das
sub
cmp
in
in
jno
sub
add
into
mov
pop
xor
jmp
dec
loop
test
push
rcrl
pop
repz
mov
sbb
push
clc
lods
out
sbb
inc
outsb
mov
loop
pop
pop
add
loope
stos
test
push
inc
fs
mov
cmp
mov
int3
push
mov
xor
dec
fmuls
mov
or
dec
test
js
mov
lret
and
cld
les
ret
mov
inc
test
icebp
add
arpl
xchg
pop
add
aas
scas
or
ret
call
pop
pusha
addb
pop
xchg
jle
mov
cmp
lock
orb
xor
imull
mov
loope
ret
jle
out
stos
jecxz
stos
in
mov
sahf
xchg
rcr
mov
dec
inc
xor
test
cmpsl
in
mov
add
js
rol
sub
mov
mov
xchg
mov
rorl
jp
push
cmp
andb
arpl
push
mov
dec
out
nop
lahf
or
or
and
inc
jl
push
push
mov
and
dec
pop
xor
lock
add
inc
js
fsubrl
ret
subb
ljmp
add
dec
inc
mov
cmp
sbb
mov
adc
fmulp
pop
shll
imul
insl
rolb
mov
rolb
mov
push
sbb
xchg
loop
push
adc
jo
gs
imul
add
mov
call
shl
hlt
mov
sub
andl
stc
sub
push
pop
cmp
lea
into
adc
lods
cwtl
lret
xlat
sahf
sti
or
xchg
cmp
jno
cmpsl
clc
nop
repz
icebp
mov
fimuls
dec
cmp
dec
add
adc
lret
jmp
pop
or
jp
cmp
ja
xchg
xor
out
out
out
jl
or
mov
sahf
pop
inc
outsb
mov
add
jnp
repz
inc
mov
pop
or
jnp
pop
movsb
aaa
int3
mov
push
or
sub
pusha
cmp
xchg
stos
mov
mov
xor
mov
jae
adc
outsb
data16
mov
test
inc
mov
mov
sub
push
pop
bound
and
adc
jg
fsubrl
adc
int3
cwtl
out
hlt
push
je
popa
cwtl
lods
fwait
push
push
fisubrl
insb
push
dec
or
jl
sub
sub
shrl
mov
cmc
les
mov
das
cmp
pop
es
addr16
sbb
adc
adc
test
mov
xor
inc
subb
sub
fs
add
jno
dec
cmp
sub
push
inc
or
jae
or
fidivl
dec
push
mov
fincstp
add
mov
lret
and
insl
mov
mov
and
mov
aas
popa
int3
imul
cmc
repz
inc
cltd
sbb
jns
lret
sub
pop
sub
xlat
mov
pop
ljmp
cmpsb
in
jle
jle
dec
cld
mov
and
dec
loop
dec
mov
inc
mov
inc
dec
dec
xchg
ljmp
sbb
cmp
dec
mov
or
jmp
insl
test
jno
xchg
in
out
outsb
insb
add
shrb
mov
lret
jecxz
push
or
cld
push
or
cmp
or
cmp
aaa
mov
xchg
jl
and
dec
fwait
ret
add
jmp
mov
scas
xchg
xchg
aaa
mov
scas
pop
jne
sub
mov
xlat
ss
rolb
retw
and
lods
mov
test
idivl
or
fmuls
pop
jb
mov
fdivrp
push
sub
mov
loopne
jbe
xchg
popf
adc
dec
add
cmp
push
sub
test
sbb
test
xchg
ja
lret
sbb
jp
fldenv
subb
sbb
inc
lods
cld
insl
dec
test
sub
inc
jb
int
pop
inc
xor
add
push
pusha
cmp
lea
adc
testl
and
mov
stc
addb
cmpsl
mov
mov
jg
into
test
shll
add
add
cmpsl
or
xor
mov
wbinvd
pop
sbb
int3
push
mov
sub
shlb
jb
lea
xchg
xor
rorl
scas
pusha
in
fs
jmp
pop
add
insl
push
int
xchg
xor
jecxz
mov
or
add
stos
imul
mov
xlat
dec
outsb
fwait
inc
in
dec
mov
xor
inc
mov
jno
xor
mov
enter
rcrb
outsb
mov
aam
xchg
or
push
cmp
mov
call
mov
insl
jo
pop
mov
or
popf
aad
sub
pop
inc
mulb
movsb
push
cmc
movsl
mov
sub
xchg
push
jge
pop
insl
mov
divb
inc
pmuludq
adc
push
and
push
rorl
enter
push
mov
sub
stc
push
test
add
sti
mov
cwtl
inc
add
mov
subb
push
loope
ss
test
xor
dec
sbb
cli
mov
lock
dec
dec
xchg
xlat
lods
mov
cltd
shlb
jg
xor
jp
xor
add
mov
jl
mov
mov
enter
mov
inc
stc
dec
mov
pop
outsb
pop
inc
xchg
cmpl
test
fiaddl
imul
push
inc
sahf
jge
repnz
add
aad
out
lcall
inc
push
loop
cld
mov
insl
xor
mov
pop
jbe
dec
sub
dec
push
iret
dec
arpl
jmp
mov
cltd
in
mov
push
lcall
mov
hlt
sub
jbe
xchg
adcb
or
mov
cmc
jp
les
and
sbb
lret
int3
add
loopne
cltd
test
cltd
hlt
jmp
jno
ret
inc
icebp
ret
arpl
repz
cmc
pop
or
in
mov
sub
sbb
pop
xor
xchg
fisttps
popf
mov
cli
jp
lods
scas
lods
pop
mov
dec
aaa
lods
lahf
out
pop
pop
inc
add
icebp
cmp
cli
fisttps
and
xor
cmpsl
and
mov
cli
cmp
int
hlt
sbb
jae
cmp
imul
aaa
sub
pop
dec
jne
out
cmp
or
add
jno
sti
sbb
jge
mov
stos
jns
sbb
mov
cmp
lods
add
push
add
or
or
jg
xor
shrb
ja
mov
loopne
js
xlat
cli
sub
iret
jns
pop
or
mov
ret
pop
jmp
jbe
xchg
sub
call
mov
cmp
enter
jle
mov
fwait
mov
mulb
mov
jp
sbb
jmp
pop
mov
shlb
iret
rcl
xchg
and
mov
add
mov
jns
lret
push
dec
addr16
jge
pop
pop
in
jecxz
push
outsb
popa
dec
ja
sbb
test
xchg
push
daa
and
jnp
inc
push
dec
std
mov
mov
mov
test
xchg
xchg
or
mov
out
pop
fiaddl
ret
adc
cmp
xchg
repnz
mov
pop
mov
sub
pop
out
fwait
cmp
iret
cmp
mov
sbb
sbb
cli
mov
or
scas
shlb
mov
in
outsl
hlt
imul
jo
pslld
and
push
push
cmp
jae
inc
jle
fsqrt
mov
loop
int
out
sub
cmp
xchg
lods
lret
sbbl
cmc
xchg
fs
mov
out
loopne
lret
mov
dec
in
adc
aad
insb
xchg
inc
int3
in
sub
jecxz
and
inc
push
arpl
loop
call
dec
lret
pop
das
cwtl
mov
xlat
sub
mov
mov
orb
sub
rcl
mov
jl
fldenv
mov
sub
sbb
in
push
mov
in
xchg
cltd
jae
stc
push
loopne
lock
dec
sar
test
popf
enter
pop
cmp
movsl
jmp
inc
pcmpgtd
sbb
push
dec
jmp
leave
out
xor
cli
mov
ljmp
xor
das
mov
or
jmp
inc
cmp
cli
lret
adc
call
inc
int
xor
sbb
jp
push
add
sub
jl
xor
pop
data16
iret
sarl
jecxz
and
cmp
icebp
pusha
gs
loopne
add
cmp
push
xor
mov
je
inc
and
add
or
mov
jno
pop
ss
fstl
or
dec
mov
add
addr16
mov
mov
lods
and
sub
loopne
fsubrl
insb
lock
daa
push
xchg
fwait
mov
sub
xchg
mov
add
icebp
test
jecxz,pt
adc
and
js
out
xchg
mov
mov
int
test
lds
cmpsl
ficoml
mov
out
orl
leave
mov
adc
mov
dec
out
mov
dec
shl
ss
addb
outsb
lahf
stc
xchg
jp
adc
mov
sbb
adc
std
adc
das
jb,pn
and
repnz
ret
xchg
sarl
and
lock
cli
test
imul
push
test
movsb
mov
xchg
iret
adc
push
add
jmp
out
or
js
cmpsb
jg
testb
inc
daa
idiv
lods
or
and
pop
fwait
dec
push
sahf
adc
iret
pop
cmp
jo
mov
jge
mov
cmp
enter
aas
ja
stos
repz
rorl
mov
jb
inc
in
jns
roll
and
mov
jle
sbbl
mov
pop
push
pop
cmp
mov
mov
or
jbe
mov
scas
sub
jp
testb
inc
ficompl
out
outsb
aam
push
jae
in
adc
sbb
leave
jb
out
fisttpl
outsb
lods
bound
decl
pop
xor
inc
or
ret
jp
hlt
js
mov
scas
cmpl
cmc
bound
faddp
scas
in
dec
mov
or
cmpsl
in
jg
aaa
push
mov
stc
cs
cli
rcrl
clc
mov
sub
pop
in
imul
jp
cmp
es
ret
mov
std
out
rorl
iret
xor
fucomip
and
push
sahf
mov
addb
push
loope
repnz
fwait
int3
push
ljmp
rorl
add
popf
lret
cwtl
fs
notb
div
stos
test
mov
and
in
pop
pop
adc
stos
and
cmp
cmp
clc
add
add
cmp
pop
mov
mov
mov
gs
mov
sbb
rcll
pop
jb
add
jno
mov
inc
outsl
aas
sarb
mov
push
sub
in
push
sbbl
lcall
fcom
adc
inc
sahf
jp
inc
out
mov
fs
adc
pushf
lcall
nop
push
sahf
inc
add
mov
cli
test
lods
lods
icebp
lds
dec
cmpsl
push
aad
xor
xchg
xchg
dec
movsb
repz
cmpsl
lcall
decl
clc
rcll
jp
push
lods
addb
and
cmp
data16
decb
cmc
scas
mov
mov
adc
mov
jo
sti
je
lret
cmpsb
cmp
iret
mov
cmovnp
shrb
out
add
icebp
mov
stc
inc
xchg
popf
ss
adc
loop
pop
shrb
dec
dec
jns
jg
fs
adc
lods
pop
push
mov
xchg
cmc
mov
out
sti
inc
sub
xor
ja
xor
aam
sbb
sub
fwait
jae
adc
pop
adc
mov
xchg
fisubs
arpl
aad
mov
cld
mov
fldcw
movsl
cli
insb
xchg
imul
inc
popa
xchg
and
pop
cld
push
lock
dec
inc
je
fcoml
pop
mov
sub
jge
sarl
pop
xlat
sub
jne
test
xor
and
into
mov
mov
mov
mov
iret
movb
cmp
add
cmp
imul
fs
mov
xchg
imul
xor
sub
icebp
scas
inc
ret
out
cmpsb
into
mov
adc
mov
popl
mov
repnz
icebp
pusha
outsl
dec
movb
dec
xorl
mov
popa
loopne
mov
inc
orl
ljmp
jne
mov
imul
mov
add
stos
cmp
scas
mov
sub
xchg
mov
outsl
sbb
aas
mov
sarl
cmpsb
jecxz
imul
pop
stc
mov
popf
add
in
fcmovnu
repz
or
mov
mov
fadd
pushf
leave
sbb
stos
mov
les
movsl
xor
add
ret
xchg
xor
xchg
enter
lock
pop
lods
lock
mov
jg
js
loop
push
outsl
adc
adc
jl
mov
add
fs
sub
outsl
hlt
arpl
movb
imul
in
rol
repnz
add
pushf
andl
sbb
jl
mov
adc
andl
xlat
sbb
cmpsb
inc
push
scas
adc
in
jp
test
mov
idivl
pcmpgtb
dec
xor
mov
adc
jb
dec
or
and
lahf
jno
pop
fsubr
add
das
add
inc
dec
out
jb
or
mov
pop
pushf
pop
cmpsb
jecxz
adc
pop
xor
out
sub
jbe
inc
mov
push
inc
jmp
xchg
xlat
jbe
je
shlb
dec
xor
jne
cltd
pop
lods
das
cltd
imul
rclb
cmp
add
pop
imul
je
shlb
cmp
jns
xchg
out
int
fildl
mov
push
repz
outsb
xor
fwait
mov
fcomps
add
lea
adc
andl
pop
sbb
xor
mov
pusha
aam
xor
sbbb
push
xchg
pop
jb
dec
push
adc
dec
xchg
dec
pop
add
out
and
bound
adc
fldl
jmp
jnp
mov
sbb
mov
push
insl
inc
repz
fwait
sbb
adc
fsubrs
sbb
add
pop
arpl
aam
xchg
push
dec
jmp
out
cmp
rolb
test
aaa
or
lcall
lcall
test
es
dec
xor
pop
mov
test
out
lcall
loope
or
pusha
fmuls
daa
xor
insb
adc
cmp
jae
add
mov
ret
pop
in
cmp
pop
in
ret
push
jae
testl
xchg
stos
cmpsb
mov
xchg
sbb
lods
cwtl
jg
in
and
insl
ret
in
stc
test
mov
hlt
pop
mov
and
pop
sub
dec
aaa
sarb
aad
fmull
mov
add
mov
dec
scas
lea
xchg
enter
fisubrl
xor
stc
xchg
adc
push
adc
cmp
push
add
addl
xor
int
pop
fiadds
pop
jecxz
ret
jo
inc
or
inc
popf
mov
pop
rcll
iret
pop
test
mov
push
add
jge
arpl
jae
lods
daa
fucomi
add
jns
outsb
sbb
xchg
pushf
inc
pop
repz
out
dec
push
xor
cltd
mov
fcompl
xor
call
push
roll
jecxz
in
lods
mov
rdtsc
es
or
pusha
inc
mov
dec
dec
aas
int
sbb
xchg
adc
jnp
add
cmp
fs
xlat
fstl
imul
fistl
icebp
and
mov
fsqrt
bound
mov
add
in
dec
mov
or
aaa
xor
movsb
stos
daa
xor
cwtl
cltd
inc
cmc
sbb
lea
test
test
jno
push
mov
and
call
or
fimuls
out
dec
mov
dec
pop
mov
sub
fimull
mov
and
sub
shlb
aaa
mov
xor
dec
cmp
aam
scas
popf
aas
or
lret
iret
dec
xor
jle
js
data16
and
sub
in
lret
add
loop
lret
aas
push
lock
out
cmp
int3
push
xchg
pop
push
jbe
int3
lds
jno
or
aaa
xor
pop
fildl
mov
mov
lret
inc
and
loope
sbb
loopne
popf
jmp
popf
leave
daa
bound
pop
aam
cmc
flds
xor
dec
aaa
add
pop
insl
stos
lea
ret
cmp
adc
loope
push
mov
adc
cs
push
popf
pop
rcrl
mov
aam
mov
popa
in
lods
sbb
dec
fstps
outsl
frstor
cwtl
clc
ljmp
or
xlat
mov
jecxz
xchg
fucomip
xlat
outsb
xor
daa
push
or
add
add
int3
je
mov
icebp
or
push
mov
pop
xor
cmc
xlat
nop
jb
loopne
adc
sarl
in
xor
sbb
sar
das
dec
inc
clc
lret
mov
bound
cmp
mov
les
push
pop
dec
imul
mov
mov
cmpsl
imul
jae
movsb
or
adc
inc
ja
jns
cmp
xor
std
shlb
xchg
hlt
push
test
andb
jno
gs
dec
hlt
jmp
and
sub
ret
outsb
adc
test
and
jae
dec
int3
das
mov
inc
lret
lods
push
sub
call
aaa
or
mov
dec
mov
leave
pop
pop
inc
mov
and
pop
add
and
pop
pop
and
xor
pop
in
insb
rol
pop
dec
outsb
xchg
lods
mov
arpl
cld
out
mov
jg
cs
mov
add
rcrl
stos
je
mov
jmp
sbb
pop
enter
lds
push
sbb
cli
xchg
xor
xor
pop
adc
inc
xor
int
ucomiss
test
stc
xchg
xchg
jns
xchg
sbb
or
in
repz
push
sub
adc
and
pop
pop
pop
lods
daa
cmpsb
jge
rcr
mov
adc
int
mov
xlat
mov
sub
xor
jno
mov
fidivrs
rcll
flds
loopne
outsl
int3
mov
leave
mov
cmc
jp
cwtl
fisubrl
cmp
jo
sub
jo
push
cmc
pop
jb
sub
fs
mov
shll
mov
mov
nop
and
adc
movsl
addr16
mov
lea
adc
pushf
adc
cli
daa
scas
loop
movsl
jp
inc
shlb
addr16
sub
xchg
es
pop
idivl
sbb
popa
xor
add
dec
and
insl
gs
mov
std
jo
xchg
jl
scas
jg
mov
dec
pop
pop
in
addr16
dec
cmc
push
shrl
mov
enterw
jl
sbb
cmp
fcomi
aad
je
adc
add
fistl
or
jp
clc
mov
cld
andb
aam
cmp
add
xchg
cltd
jnp
mov
sar
sbb
mov
lods
add
mov
cmp
cmp
outsl
movsw
xor
mov
roll
out
jg
sbb
fldt
or
inc
bswap
fsts
mov
jno
lret
and
jmp
or
inc
sbbb
and
push
bound
test
js
jle
pushf
fcmovnu
mov
jg
xchg
incl
sahf
xorl
fsubl
mov
aam
push
insb
es
cli
add
loopne
fdiv
inc
fwait
add
push
sbb
mov
or
cmpsb
sbb
mov
push
sub
push
je
sbb
xchg
test
add
iret
xor
popf
xor
jl
push
mov
mov
jno
cmpsb
test
lret
loope
cmpsb
int3
mov
fbstp
test
lods
repnz
into
outsb
ljmp
roll
add
idivl
out
hlt
movl
sub
push
add
push
nop
cld
les
imul
and
push
leave
addr16
inc
ret
or
cwtl
fs
cwtl
mov
dec
test
neg
push
cmp
jno
pop
xchg
xor
sbb
in
sub
jp
mov
jns
or
jns
mov
sbb
jmp
adc
cmp
or
and
push
fwait
mov
lods
out
fcmovne
xchg
into
mov
loopne
or
inc
outsl
mov
lds
addb
sub
mov
mov
arpl
pop
inc
orl
push
inc
rcrl
sbb
or
mov
add
sbb
icebp
jge
push
mov
leave
lods
and
mov
and
cmp
push
fwait
jmp
pusha
fs
xchg
adc
bound
mov
movsb
aad
enter
inc
mov
xor
and
hlt
sub
or
fldenv
pop
movsb
pop
in
push
inc
cmp
test
pushf
push
das
enter
xorl
les
adc
adc
stos
jo
inc
cmpsb
and
push
pop
ljmp
mov
outsl
push
ret
fdivrl
leave
movsl
cmc
leave
int
inc
loope
out
xorb
or
sub
cmc
lcall
ljmp
cmc
pushf
inc
xchg
add
pop
addl
sti
pop
test
sbbl
inc
xchg
push
in
fcomi
inc
mov
les
fwait
rolb
lret
insb
sub
int3
lds
and
add
mov
push
fsubs
jmp
ja
mov
ja
loop
xchg
lret
sahf
or
jp
out
sbb
or
repz
roll
nop
fistl
lcall
mov
lods
and
or
in
dec
stos
cld
mov
push
pop
rorl
xlat
mov
in
data16
mov
shl
addr16
add
xor
xchg
jae
cmpsb
sahf
fstpt
lods
xlat
push
lahf
stc
out
das
clc
push
dec
pop
xchg
xchg
mov
xor
mov
scas
sti
adc
repnz
out
sti
dec
ja
cltd
fmull
andl
or
and
mov
pop
rcrb
add
outsl
push
fxch
add
adc
or
dec
lods
cmpsb
xor
jno,pn
test
cli
out
or
push
nop
jo
inc
ss
push
inc
daa
jo
adc
pop
loopne
jl
repnz
cld
jle
leave
push
cmp
adc
or
push
clc
cmp
sti
xor
cmp
rcl
jae
mov
daa
orb
scas
xor
push
pop
jbe
lret
xchg
pop
sahf
xchg
pop
orl
stos
in
mov
out
ret
pop
loope
dec
fstps
movsl
lcall
lds
fstpt
sub
xor
scas
adc
xchg
insl
mov
and
jo
sub
lahf
pop
add
fidivrs
sub
or
push
sbb
push
push
imul
cwtd
ss
sub
cld
adc
jae
add
std
jle
das
mov
sbb
dec
rcrl
sbb
pop
mov
mov
mov
push
imul
inc
xchg
paddq
cmp
addr16
jae
fadds
sahf
sbb
cwtl
stos
sub
mov
pushf
pushf
dec
imul
test
adc
inc
insl
mov
jo
push
pushf
dec
mov
stos
shr
sub
insb
test
xlat
in
in
mov
sti
dec
out
bnd
xchg
push
push
dec
out
scas
cmp
xrstors
fisttpll
sbb
filds
xchg
andl
mov
subl
loope
dec
rcll
add
mov
push
or
nop
fnsave
inc
out
mov
xchg
std
push
imulb
fcomps
or
inc
fbstp
mov
movsb
leave
and
push
stos
xchg
insb
insb
cwtl
mov
fwait
add
bound
jmp
jnp
arpl
aas
cmovs
mov
in
ja
imul
push
sub
scas
lahf
jbe
and
aaa
xchg
lds
sbb
jbe
sbb
insl
loopne
adc
jg
add
in
cmp
test
popa
mov
jmp
pushf
or
daa
inc
in
cmp
fs
xor
test
fdivs
pop
cmp
lds
mov
mov
xchg
xchg
loop
inc
fildl
sarb
inc
fcomps
inc
add
jb
pop
pop
cmp
lock
js
add
push
mov
push
lods
push
fisubrs
inc
xchg
daa
cmc
dec
ret
into
push
insl
out
dec
jno
jle
push
je
aaa
cld
inc
and
mov
popa
testb
lock
repz
cmp
cli
jg
lcall
lds
cmpsb
inc
jb
sbb
xchg
push
leave
adc
inc
fistl
mov
xor
mov
push
aas
mov
test
addl
push
test
pop
mov
push
pop
pop
pusha
or
adc
fnsave
xchg
aas
orl
rcll
test
fldl
push
fdivs
out
or
push
and
insl
xchg
or
xchg
pop
loope
dec
pop
mov
inc
pop
fdivr
xchg
pop
rcll
daa
enter
cmp
and
imul
jno
add
lods
or
mov
adc
das
or
das
popf
dec
pop
mov
dec
mov
fstpl
or
xor
push
jae
push
cld
mov
xor
xlat
stc
roll
js
pop
mov
in
int
into
fisubrl
fwait
add
and
pop
mov
roll
cs
jbe
dec
dec
sub
sub
bound
lea
movsl
shrb
push
cmp
cs
pushf
stos
ds
or
cmp
inc
push
inc
in
cltd
addr16
cli
dec
popf
arpl
sbb
in
sub
pop
sbbl
pop
ds
jl
aad
pop
jb
fcmovnb
test
or
loop
lods
xchg
enter
ja
std
jns
mov
test
fsts
xchg
leave
lock
jnp
popa
out
ss
mov
or
pop
sbb
push
ljmp
sbb
xor
dec
mov
mov
xor
in
jb
loop
jae
push
mov
lahf
nop
add
xlat
push
aad
pop
gs
dec
inc
push
ljmp
dec
pop
push
xchg
shrb
repz
loop
out
testl
imul
xchg
rol
ret
push
pxor
jmp
shll
popf
hlt
sub
stos
push
xchg
bound
pop
inc
mov
adc
jg
test
dec
mov
pop
sub
loop
and
pop
cmp
ja
adc
pushf
push
mov
ss
mov
cmp
mulb
stc
dec
ja
xchg
push
jne
xchg
or
sub
and
jle
filds
mov
jae
pop
or
sbb
mov
mov
aam
aaa
sub
negl
sti
add
stos
mov
dec
shll
push
pop
sub
mov
jmp
mov
and
ljmp
jb
and
mov
cs
dec
or
shl
cmp
cltd
sahf
ss
sub
negb
movsb
lret
daa
aam
aad
lea
roll
mov
ret
fsub
xchg
adc
cmp
and
ja
sbb
sub
mov
cmp
mov
xchg
cmp
cli
lods
movsb
push
repz
shll
jmp
icebp
mov
out
das
and
xchg
mov
aam
sub
data16
lret
pop
or
das
outsl
lea
clc
int3
sub
flds
cmc
ret
popa
shll
add
lret
jp
sbb
sbb
add
fildll
xchg
mov
imul
fdivrl
adc
out
sti
pop
out
inc
pop
pushl
fidivrl
inc
pop
lea
and
hlt
out
cltd
das
clc
in
subl
ret
mov
lahf
aam
cld
popf
add
pop
cmpsb
cmp
dec
daa
inc
imul
dec
aam
loope
mov
jl
js
dec
add
gs
mov
cmpsb
cs
adc
sub
std
pop
out
cmp
idivb
ret
add
mov
pop
jge
sub
nop
mov
jnp
outsb
jmp
ds
das
idiv
shll
cmp
or
adc
je
shl
push
ficoms
mov
iret
in
and
iret
sub
lret
mov
mov
push
gs
mov
popl
adc
sbb
and
repz
es
icebp
dec
jns
decb
out
arpl
dec
jae
jno
loopne
arpl
mov
inc
adc
mov
dec
in
pop
shlb
lcall
fwait
jne
and
pop
sbb
sub
cmp
aas
leave
into
insl
stc
loopne
roll
mov
inc
mov
mov
jge
shrb
pop
cltd
fucomp
lea
test
mov
das
fists
dec
fwait
lea
jbe
mov
lret
cmp
je
cwtl
pop
ds
loopne
test
int
fdivs
bound
push
fcoms
rcrb
mov
jb
jo
jbe
in
add
pop
test
filds
scas
jl
sbb
lods
jbe
pop
sbb
in
fcomps
ss
inc
mov
rorl
fs
out
pop
ss
and
pop
jne
jecxz
add
xor
repnz
cltd
enter
cs
or
and
fldl
inc
idivl
pop
xor
mov
test
dec
sub
scas
mov
lods
and
rcrb
push
sub
ds
insl
or
fdivrs
dec
push
shlb
push
inc
out
xchg
lds
mov
add
sahf
mov
out
mov
into
xchg
adc
sub
or
fs
xchg
aas
ljmp
add
sbb
lods
in
test
pop
dec
mov
mov
loope
js
clc
push
fmuls
pop
ficoml
arpl
push
pop
jnp
or
js
sub
dec
sub
cmp
push
pop
lret
outsl
xor
aaa
loop
bound
cmp
or
addr16
pusha
cmpsl
dec
movsb
adc
mov
jne
jge
lret
pushl
or
xchg
fs
clc
mov
sahf
les
sub
cmp
add
dec
jno
push
rorb
or
inc
lcall
pop
mov
jns
xchg
lret
dec
aas
pcmpeqd
lods
inc
cli
mov
cmp
mov
cmp
jge
test
test
mov
fnstsw
les
mov
scas
jno
inc
jp
xlat
out
mov
sbb
sbb
testb
je
or
int3
xor
into
or
cmc
scas
insl
push
sub
xchg
inc
fs
test
std
daa
mov
dec
cmp
inc
fwait
ret
cmp
mov
aam
cwtl
sbb
sub
jae
dec
mov
imul
test
iret
cmpsb
xchg
test
sub
dec
push
icebp
and
xchg
and
out
aas
out
sbb
sbb
xor
mov
repnz
sbb
jne
mov
roll
sbb
pop
loopne
jmp
popa
mov
push
xor
enter
int3
inc
pusha
sbb
xor
sti
adc
es
and
xorb
cmp
mov
scas
jnp
call
pop
testb
fnstsw
mov
addr16
xchg
mov
subl
data16
cmp
aas
dec
xchg
fcoml
sub
test
gs
fcompl
cltd
cmpb
mov
pop
dec
jnp
and
into
daa
add
lds
rolb
cmp
movsb
outsl
fcos
stos
sub
inc
sti
loopne
cmp
xchg
in
test
jne
jg
rorl
leave
adc
dec
push
or
add
fisubrl
sbb
adc
push
dec
xchg
xchg
fmuls
imul
daa
ja
cltd
push
push
pop
sbbl
fistpl
cld
sbb
lods
sub
lret
sbb
mov
int
mov
outsb
das
pop
hlt
add
push
pusha
std
stc
scas
xlat
repz
test
sub
popf
inc
push
jg
or
leave
mov
sbb
ret
scas
ja
xlat
add
out
sbb
jecxz
mov
aas
push
sub
arpl
out
pop
jae
sub
and
subl
inc
shl
cmp
or
stc
pop
outsb
push
dec
fwait
cltd
mov
mov
mov
cmc
sarb
xor
pushf
andl
pop
xor
sti
xchg
in
or
das
push
ss
adc
and
das
loopne
dec
pop
xchg
xorb
idivl
cli
dec
adc
push
cmp
icebp
cwtl
jns
repz
push
fldl
insl
aam
dec
cmpsb
ret
pop
pop
pushf
pop
cmp
fisttpll
jmp
jno
mov
xchg
std
nop
lods
test
into
dec
jg
ror
movsb
dec
aaa
or
rolb
jae
inc
lea
jl
int
cli
sub
loopne
push
shll
mov
loope
mov
mov
out
mov
inc
rol
aad
sarl
push
fwait
inc
xor
pushf
jo
imul
test
push
sub
movsl
iret
adc
fcompl
sbb
rorb
jecxz
jg
sub
fistps
sbb
jo
xchg
hlt
push
xchg
jp
fwait
xorb
outsb
jb
sub
and
es
xchg
pop
inc
rorb
aaa
cmp
leave
mull
push
lods
daa
cmp
jmpw
mov
popf
xor
arpl
push
pop
dec
mov
dec
movsl
aam
in
adc
lcall
js
popf
dec
scas
popf
test
imul
and
out
and
lret
xchg
push
cmpsb
inc
repz
cmp
or
icebp
pop
xchg
mov
cmp
sbb
iret
pop
push
push
and
sub
or
or
jecxz
into
imul
movsl
fucom
xlat
orb
icebp
mov
add
mov
lahf
pop
mov
icebp
pop
movsb
jnp
imul
pushf
lods
xor
mov
leave
xchg
mov
xchg
int3
inc
jbe
sahf
fnstcw
loope
inc
xchg
pop
or
sbb
sub
fidivrl
bound
repnz
and
cs
loope
add
out
movsb
test
fwait
insb
pop
lcall
in
sub
into
and
mov
mov
jle
sbb
sub
push
test
sbb
scas
enter
inc
iret
and
and
dec
out
mov
mov
aaa
rcrb
cmp
jecxz
mov
push
sub
cmpsl
xor
add
mov
in
int
insl
out
movsb
mov
cmp
dec
xor
xchg
mov
cwtl
popf
in
mov
jl
imul
push
cltd
pushf
fdivr
mov
cmp
shrl
repz
enter
icebp
jno
push
loopne
jl
pushf
mov
stc
mov
mov
jns
test
mov
jnp
mov
push
xor
or
mov
or
cs
or
sbb
cmp
cli
mov
dec
outsl
int3
fidivs
dec
fisubl
sbb
cmpsl
psubw
cltd
pop
fcomps
insl
jae
adc
xor
mov
push
inc
adc
jnp
lods
push
dec
push
add
dec
pop
add
insb
pushw
jmp
cld
aam
push
cwtl
insl
or
push
mov
sbb
jne
jg
jo
mov
daa
mov
and
lret
jmp
insb
or
push
lea
push
inc
cwtl
ljmp
xor
fidivrs
mov
daa
push
outsl
xchg
loopne
arpl
jl
or
adc
mov
sbb
popf
ja
jno
ja
sub
mov
test
repnz
shrl
negl
jnp
adc
pusha
xchg
mov
dec
mov
je
jl
shrl
rcrb
pop
cwtl
push
sti
xchg
jmp
les
and
push
orb
testl
xor
and
std
test
xlat
cmp
mov
cmp
cmpsl
lret
cmp
jnp
xchg
mov
adc
mov
js
aam
push
jb
out
jecxz
mov
mov
ljmp
pop
adc
cmp
pop
sbb
outsb
dec
popa
xor
add
loopne
aam
lods
push
dec
shrb
mov
pusha
and
xchg
push
sub
pop
ja
bnd
mov
xchg
sahf
clc
mov
cmpb
mov
aas
call
out
mov
xlat
pop
shll
push
hlt
push
push
ss
mov
push
or
mov
jnp
and
cmp
in
test
inc
mov
ja
add
hlt
insb
xlat
js
mov
mov
fiadds
fld1
movsb
and
sbb
jnp
arpl
mov
adc
movsl
and
dec
dec
test
inc
push
pusha
ljmp
leave
and
jmp
jg
mov
push
push
push
mov
arpl
out
mov
xchg
sbb
inc
xor
fnstsw
icebp
test
dec
ljmp
adc
fs
jb,pt
inc
add
cmp
add
mov
mov
pop
int
and
mov
jle
push
ja
xchg
in
outsb
int3
popl
mov
shll
sub
addr16
jno
lret
cmpsb
cmp
pop
pop
nop
out
mov
jb
dec
and
pop
and
test
fildl
sbb
andl
mov
push
mov
rcl
rclb
jo
shll
xchg
adcl
mov
pop
sahf
lods
mov
inc
pop
iret
js
into
add
dec
jmp
lods
pop
fstp
ret
xor
or
sbb
imul
inc
xchg
push
test
sub
mov
lret
lcall
call
ljmp
scas
subb
xchg
icebp
pop
xor
dec
sti
jb
daa
pop
cmp
push
and
and
push
pop
pop
in
int
ficomps
rolb
pop
andl
into
xchg
mov
sbb
and
icebp
repz
pushf
rol
aad
popa
nop
push
mov
dec
or
lds
stos
loop
data16
test
js
cld
outsb
mov
sbb
mov
jb
ffree
adcb
pop
adc
inc
inc
add
insl
bound
ds
mov
xor
sbb
out
sub
dec
sub
ret
cmp
pusha
pop
ljmp
cmpsb
insb
scas
hlt
ret
xchg
daa
mov
aas
cmp
mov
dec
pop
or
pop
imul
sbb
loopne
rol
scas
mov
scas
mov
xchg
cmc
jmp
mov
cmc
push
in
repz
add
jns
cmp
in
stos
flds
retw
mov
mov
aaa
add
xchg
imul
int3
sub
xor
sub
pop
inc
cmpsl
outsl
adc
push
and
movsl
pusha
enter
mov
into
in
fwait
adc
fwait
shlb
out
in
lea
aaa
adc
and
fldcw
rcrb
stc
popa
adc
scas
and
dec
clc
cmp
lods
mov
fsubl
pop
add
sbb
flds
loope
xor
movsb
mov
hlt
pop
adc
shr
scas
xchg
pop
sbb
insl
dec
and
xchg
and
xchg
std
xchg
imul
rolb
and
shl
inc
xchg
scas
mov
jo
mov
ss
aam
mov
iret
dec
int
sarb
divl
sub
mov
test
loopne
xchg
pop
adc
nop
imul
adc
mov
mov
imul
add
xor
mov
imul
and
cmp
sub
cld
add
xor
out
xchg
inc
scas
lods
iret
adc
mov
add
sub
push
pusha
xor
jg
dec
pop
jecxz
cmp
aad
or
push
mov
call
or
loope
dec
out
cmp
xchg
gs
sbb
jnp
outsb
inc
pop
xor
bnd
leave
je
jnp
push
lock
jmp
das
xor
cli
pop
mov
push
mov
or
mov
cmpsl
addl
loope
mov
xchg
orb
and
mov
sub
aas
out
movsl
and
stos
fwait
lcall
sti
jl
jecxz
movsb
sbb
xchg
lods
push
imul
cmp
pop
enter
xchg
push
xchg
pop
lcall
cld
jecxz
test
jne
popa
mov
jg
jne
push
push
insl
lahf
pop
lcall
pop
cmp
ds
pop
jle
call
mov
rolb
ljmp
aad
cwtl
jmp
sbb
mov
xchg
out
push
push
mov
or
imul
xchg
sbb
cli
cmp
cli
pop
inc
inc
xor
or
push
mov
addr16
or
cmovns
lock
lea
and
aam
test
pop
mov
imul
xchg
and
sbb
jl
int3
xor
sbb
scas
mov
or
hlt
mov
and
mov
mov
repz
inc
adc
adc
push
adc
sti
lahf
aas
xchg
loopne
pop
out
scas
in
fs
mov
ljmp
sbbl
fcoms
fwait
icebp
rorb
pop
push
xchg
xchg
cltd
rol
mov
push
mov
fidivrl
inc
fwait
sub
or
inc
sahf
mov
xchg
mov
inc
shlb
jae
cmpl
pop
dec
xor
xchg
sub
ss
out
mov
pushl
push
scas
mov
adc
xor
js
jmp
cmpsb
xchg
roll
fstpt
lret
jbe
hlt
cmpsb
adc
orb
adc
lret
sub
dec
mov
jg
mov
xor
inc
in
xor
push
pop
pop
mov
pop
and
pop
push
xorl
mov
fidivl
push
mov
xchg
repnz
xchg
dec
daa
jne
frstor
imul
jp
push
mov
sbb
stos
arpl
pop
or
or
mov
sbb
jg
push
jle
dec
les
push
inc
cmp
mov
jo
mov
das
cwtl
push
inc
pop
cmp
mov
cmp
outsl
mov
hlt
sub
call
mov
dec
push
stos
xor
jne
popa
xor
lods
pop
dec
xchg
sub
dec
jne
inc
pop
and
mov
xchg
cld
inc
adc
mov
dec
cmp
sbb
push
and
dec
rorb
mov
sahf
cwtl
stc
mov
inc
rolb
push
inc
pop
xor
xor
notl
iret
sub
and
fs
ja
popa
idiv
xor
out
fadds
ss
cld
mov
cmpsl
std
leavew
cmpb
mov
cmp
and
icebp
adc
repz
aad
pop
aam
xchg
fwait
push
arpl
dec
lock
dec
lea
mov
loopne
cmp
cmpsl
mov
stos
adc
arpl
push
lock
jle
push
shll
dec
dec
sub
jecxz
ljmp
jecxz
cmp
mov
aam
cmp
or
aad
ljmp
push
and
subl
adc
adc
mov
mov
and
in
cmp
pop
inc
xor
scas
adc
fildll
push
test
mov
ja
loopne
push
cs
movsb
jle
mov
and
sbb
cmp
cwtl
cmpl
int
aaa
adc
dec
cltd
push
push
out
push
push
jl
xchg
loope
inc
fcoml
or
jae
push
into
fsubrl
push
mov
into
mov
stc
mov
ret
mov
xchg
mov
mov
jmp
aad
sbb
push
inc
aam
mov
jbe
dec
mov
jbe
add
inc
ret
jecxz
in
cmp
mov
and
sub
xchg
push
fnsave
bound
fisubrl
cmp
test
enter
mov
cld
or
xor
punpckhbw
jns
add
