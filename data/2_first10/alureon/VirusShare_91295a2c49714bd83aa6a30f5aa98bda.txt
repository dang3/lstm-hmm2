jne
add
mov
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jae
add
test
add
xchg
adc
add
add
xlat
adc
add
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
je
add
inc
shl
add
push
add
add
add
add
add
add
add
add
imul
add
sarb
iret
les
loopne
mov
mov
sbb
pop
jle
mov
sbb
xor
sbb
negb
cmpsb
inc
mov
je
in
ret
xchg
jne
dec
sti
int3
mov
aaa
xchg
mov
sbb
mov
stos
mov
xchg
mov
pop
xchg
dec
fidivrl
mov
or
int
dec
cs
fsubs
outsb
jno
lret
sub
or
mov
gs
in
scas
sbb
jno
fcoms
sti
ljmp
jae
cmp
arpl
pop
jns
pop
lock
mov
pop
pop
sbb
in
mov
cld
xchg
push
mov
es
sbb
xchg
mov
pminub
dec
inc
jle
sti
ret
sbbb
daa
inc
xchg
jmp
insb
and
andl
inc
cwtl
cmp
xor
fidivs
repz
xlat
shll
scas
jno
sbb
xor
movsl
jmp
movsb
loopne
loope
daa
jne
cmpsl
add
repz
push
push
int3
arpl
push
out
mov
pop
addr16
pop
adc
xor
nop
push
sbb
sbb
pusha
out
cli
dec
imul
cmc
out
push
outsl
push
outsb
std
mov
cli
repnz
add
cld
movsb
pop
outsl
or
leave
pop
xchg
sbb
adc
out
sbb
cs
lahf
sbb
mov
sti
jg
jl
hlt
adc
jp
addl
repz
xor
mov
sbb
mov
out
lcall
mov
xchg
popf
mov
lds
cs
sub
fidivl
rol
fadd
push
mov
ret
fldt
jae
ficoms
or
int
inc
movsl
rol
push
cwtl
int
jle
dec
clc
test
cmpl
jecxz
fwait
cmp
and
jbe
cmpsl
cmp
cmp
sahf
push
dec
frstor
scas
test
aaa
hlt
cmc
iret
lcall
push
test
sub
pop
cli
dec
and
add
push
mov
dec
cmp
imul
sub
in
dec
push
dec
and
adc
aas
and
mov
cmovae
imul
push
lret
cmpsb
arpl
loope
mov
mov
repz
mov
test
mov
dec
sub
jne
dec
fisttpll
popa
adc
jno
iretw
xor
jmp
int3
pop
loop
int3
add
daa
xchg
inc
mov
xchg
lret
mov
add
or
inc
outsb
xchg
enter
sub
pushf
cwtl
push
sbb
pop
cmp
xchg
lds
loope
lahf
push
aaa
add
fnstsw
push
out
add
int3
out
aam
out
fistpll
xchg
pop
dec
stos
int3
andb
jo
or
enter
cmp
lods
xlat
in
cmc
pop
jmp
int
test
mov
jle
sbb
rcrl
sub
push
mov
push
lods
lock
add
mov
xchg
fwait
repz
dec
push
cmc
call
iret
ljmp
dec
fdivs
popa
mov
adc
mov
das
or
pop
adc
testb
jl
mov
mov
xlat
jge
mov
jbe
push
and
pusha
jle
mov
scas
and
sub
fstl
sarb
outsl
scas
push
push
mov
and
dec
push
test
outsb
ficoml
repnz
daa
adc
testl
xchg
lock
flds
sti
add
inc
lret
pop
cmp
dec
sbb
pusha
out
repnz
jnp
jmp
lret
nop
jbe
adc
das
inc
lret
jge
test
sarb
mov
or
push
mov
mov
push
mov
cld
js
mov
sahf
inc
fimuls
xchg
cmp
shll
pop
ss
jmp
add
or
or
pop
mov
sbb
mov
out
xchg
ljmp
pop
ss
enter
cmp
and
std
sub
add
pop
xchg
push
inc
sbb
pop
mov
lods
movsb
or
fldenv
je
movsl
jmp
cmp
cs
cli
sbb
mov
xorb
lcall
xor
and
mov
movsb
sbb
pop
cmp
xchg
xchg
dec
jl
mov
dec
pop
clc
cmp
mov
pop
inc
std
scas
jb
add
imul
add
or
sub
outsl
dec
adc
out
cmc
mov
movsb
loopne
adc
cmpsb
push
in
arpl
ret
mov
dec
add
cmp
por
adc
pop
pop
je
into
fbld
ss
andl
std
sbb
xchg
add
sub
mov
or
rorb
loope
in
sbb
test
add
repnz
sub
push
jbe
fsubl
out
mov
jne
adc
pop
test
stos
js
jne
add
mov
add
fwait
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
jae
add
test
add
xchg
adc
add
add
xlat
adc
add
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
je
add
inc
shl
add
push
add
add
add
add
add
add
add
add
imul
add
sarb
iret
les
loopne
mov
mov
sbb
pop
jle
mov
sbb
xor
sbb
negb
cmpsb
inc
mov
je
in
ret
xchg
jne
dec
sti
int3
mov
aaa
xchg
mov
sbb
mov
stos
mov
xchg
mov
pop
xchg
dec
fidivrl
mov
or
int
dec
cs
fsubs
outsb
jno
lret
sub
or
mov
gs
in
scas
sbb
jno
fcoms
sti
ljmp
jae
cmp
arpl
pop
jns
pop
lock
mov
pop
pop
sbb
in
mov
cld
xchg
push
mov
es
sbb
xchg
mov
pminub
dec
inc
jle
sti
ret
sbbb
daa
inc
xchg
jmp
insb
and
andl
inc
cwtl
cmp
xor
fidivs
repz
xlat
shll
scas
jno
sbb
xor
movsl
jmp
movsb
loopne
loope
daa
jne
cmpsl
add
repz
push
push
int3
arpl
push
out
mov
pop
addr16
pop
adc
xor
nop
push
sbb
sbb
pusha
out
cli
dec
imul
cmc
out
push
outsl
push
outsb
std
mov
cli
repnz
add
cld
movsb
pop
outsl
or
leave
pop
xchg
sbb
adc
out
sbb
cs
lahf
sbb
mov
sti
jg
jl
hlt
adc
jp
addl
repz
xor
mov
sbb
mov
out
lcall
mov
xchg
popf
mov
lds
cs
sub
fidivl
rol
fadd
push
mov
ret
fldt
jae
ficoms
or
int
inc
movsl
rol
push
cwtl
int
jle
dec
clc
test
cmpl
jecxz
fwait
cmp
and
jbe
cmpsl
cmp
cmp
sahf
push
dec
frstor
scas
test
aaa
hlt
cmc
iret
lcall
push
test
sub
pop
cli
dec
and
add
push
mov
dec
cmp
imul
sub
in
dec
push
dec
and
adc
aas
and
mov
cmovae
imul
push
lret
cmpsb
arpl
loope
mov
mov
repz
mov
test
mov
dec
sub
jne
dec
fisttpll
popa
adc
jno
iretw
xor
jmp
int3
pop
loop
int3
add
daa
xchg
inc
mov
xchg
lret
mov
add
or
inc
outsb
xchg
enter
sub
pushf
cwtl
push
sbb
pop
cmp
xchg
lds
loope
lahf
push
aaa
add
fnstsw
push
out
add
int3
out
aam
out
fistpll
xchg
pop
dec
stos
int3
andb
jo
or
enter
cmp
lods
xlat
in
cmc
pop
jmp
int
test
mov
jle
sbb
rcrl
sub
push
mov
push
lods
lock
add
mov
xchg
fwait
repz
dec
push
cmc
call
iret
ljmp
dec
fdivs
popa
mov
adc
mov
das
or
pop
adc
testb
jl
mov
mov
xlat
jge
mov
jbe
push
and
pusha
jle
mov
scas
and
sub
fstl
sarb
outsl
scas
push
push
mov
and
dec
push
test
outsb
ficoml
repnz
daa
adc
testl
xchg
lock
flds
sti
add
inc
lret
pop
cmp
dec
sbb
pusha
out
repnz
jnp
jmp
lret
nop
jbe
adc
das
inc
lret
jge
test
sarb
mov
or
push
mov
mov
push
mov
cld
js
mov
sahf
inc
fimuls
xchg
cmp
shll
pop
ss
jmp
add
or
or
pop
mov
sbb
mov
out
xchg
ljmp
pop
ss
enter
cmp
and
std
sub
add
pop
xchg
push
inc
sbb
pop
mov
lods
movsb
or
fldenv
je
movsl
jmp
cmp
cs
cli
sbb
mov
xorb
lcall
xor
and
mov
movsb
sbb
pop
cmp
xchg
xchg
dec
jl
mov
dec
pop
clc
cmp
mov
pop
inc
std
scas
jb
add
imul
add
or
sub
outsl
dec
adc
out
cmc
mov
movsb
loopne
adc
cmpsb
push
in
arpl
ret
mov
dec
add
cmp
por
adc
pop
pop
je
into
fbld
ss
andl
std
sbb
xchg
add
sub
mov
or
rorb
loope
in
sbb
test
add
repnz
sub
push
jbe
fsubl
out
mov
jne
adc
pop
test
stos
js
pop
dec
add
xor
sahf
inc
and
xchg
mov
int3
sbb
mov
cmpsb
push
das
sbbl
adc
cs
and
repnz
fcomip
les
ljmp
adc
jno
std
cltd
lea
mov
sub
jp
pop
sbb
in
je
nop
loope
cmp
jae
mov
pop
mov
daa
xchg
push
pop
dec
mov
sbb
mov
cmpb
xor
mov
xor
pusha
cmp
icebp
and
addr16
push
mov
ds
pop
repz
sbb
inc
gs
subl
jl
xchg
faddp
or
or
lock
mov
push
ret
fists
jo
lods
inc
repnz
jnp
jne
fsubl
clc
push
mov
mov
imul
pushf
xchg
sti
cwtl
sarl
push
mov
sbb
mov
mov
sbb
sub
lret
pop
or
and
sbb
add
outsl
or
inc
nopl
negb
adc
inc
fdivrp
xchg
cwtl
aas
cmp
nop
ljmp
mov
ss
loopne
rcrl
cmp
sti
mov
mov
daa
test
mov
sbb
int3
or
xchg
loop
push
shrb
jne
jle
test
or
iret
dec
aad
or
mov
sbb
inc
filds
inc
std
fsubr
sbb
jecxz
les
mov
pop
cmpsl
cmp
push
out
cmp
xor
aad
es
and
add
push
daa
pop
or
mov
xor
outsb
push
test
add
pop
fcoms
fsubrl
sbb
adc
test
arpl
sub
hlt
push
test
insb
bound
xchg
lock
mov
imul
les
sbb
mov
mov
adc
bound
incl
sarb
push
and
fisubrs
mov
cmp
xchg
dec
adc
lret
lds
dec
jb
test
sub
lea
mov
xlat
or
xor
outsl
imul
lds
pusha
insb
hlt
sbb
jne
xchg
ror
xchg
mov
aam
repnz
std
daa
xor
jmp
into
and
aam
test
insl
inc
divl
les
mov
lcall
jg
orl
jle
ja
aam
imul
dec
lods
mov
sub
aam
pop
rcrb
adc
scas
mov
jb
xor
and
inc
mov
inc
jb
mov
push
or
sub
test
and
mov
jnp
cmpsb
sahf
cmp
mov
int
xchg
sti
inc
inc
xorb
xor
les
ljmp
ds
jp
xor
push
inc
push
push
sbb
shll
jmp
inc
sub
outsb
xchg
xchg
push
lcall
dec
fs
fmuls
loop
and
sbb
mov
push
call
xor
mov
pop
lods
sub
pop
test
xchg
pop
mov
jne
jnp
dec
mov
inc
or
xor
andb
jmp
push
iret
mov
and
mov
sub
data16
adc
fmuls
or
adc
add
stos
dec
xchg
mov
sub
aam
mov
daa
jns
fwait
jno
mov
jge
lret
sbb
inc
push
mov
lret
inc
or
and
arpl
mov
test
jp
and
fs
icebp
es
mov
jnp
xchg
cltd
fnstcw
fstpl
lret
mov
lcall
adc
mov
mov
pop
or
pop
sbb
inc
adc
in
pushf
mov
ret
adc
sbb
add
out
dec
xlat
jg
orl
movsl
imul
xlat
pop
out
mov
or
adc
adc
xchg
mov
hlt
and
sub
mov
adc
fs
cmp
out
adc
push
outsb
cli
push
stos
insl
into
addb
xchg
mov
pop
pop
lods
shlb
idivb
lret
dec
outsb
pop
mov
xchg
lock
add
stos
rcll
dec
jge
add
and
inc
scas
stos
inc
push
in
push
xor
or
in
pop
mov
jne
adc
pop
push
cmp
jl
and
add
test
sbb
push
push
es
out
mov
mov
sub
sbbl
dec
lods
mov
cmpsl
out
and
inc
fnstcw
mov
dec
in
xchg
sbb
out
and
push
mov
add
cmp
leave
movsb
test
jmp
shlb
inc
mov
pop
ja
mov
in
push
dec
jo
outsb
and
sub
xchg
push
inc
lcall
inc
repz
jl
imul
inc
mov
scas
dec
push
mov
push
mov
and
inc
pop
loop
adc
jbe
stos
push
cmp
push
adc
and
mov
fs
mov
movsb
sub
ret
lret
in
or
pop
mov
push
inc
lods
adc
dec
fs
test
call
inc
mov
sarb
mov
add
cs
sub
xchg
push
stc
or
jns
rorb
mov
jg
cmp
sti
cmpsb
pop
mov
aad
in
cmp
pop
sbb
xor
in
fmuls
stos
iret
adc
cld
xor
pop
arpl
push
mov
xchg
bswap
scas
cmpsb
push
dec
jg
cmpsl
aaa
or
mov
repnz
xor
mov
pushf
sub
nop
daa
lods
idivb
rdpmc
mov
repz
dec
xchg
xor
inc
cmp
fsub
das
cld
mov
dec
filds
cmp
and
sbb
ret
jl
in
daa
dec
ljmp
sbb
pop
mov
mov
loopne
testb
dec
mov
cmpsb
fistpl
cmpsb
cwtl
roll
dec
pop
jle
pop
insl
pop
fdivrp
cld
std
movsl
lret
jbe
cpuid
imul
sbb
je
mov
jmp
sbb
sbb
rcll
test
sbb
out
dec
or
pop
dec
into
fs
popa
ret
bound
and
mov
push
popa
mov
gs
cld
jbe
inc
push
cmp
mov
bound
in
lods
movsb
xor
arpl
lahf
gs
insl
mov
call
jae
xor
mov
fiaddl
lock
push
pop
test
mov
loopne
stos
shll
inc
xchg
xchg
filds
mov
bound
cmp
push
int
adc
mov
test
xchg
xor
sub
daa
fs
sahf
fnstsw
ja
out
or
sub
adc
jmp
test
mov
mov
or
pusha
dec
js
test
cmp
sub
aas
pop
jnp
or
ret
rorl
xchg
jmp
pusha
int
fwait
jnp
je
inc
pusha
leave
inc
lods
aam
jbe
jge
fdivrs
mov
xor
and
test
arpl
leave
nop
stos
sahf
testl
adc
fadd
aaa
lahf
push
into
out
test
add
xchg
loop
push
std
add
sub
addr16
test
in
and
inc
mov
nop
flds
jo
or
popa
mov
sub
inc
cwtl
and
dec
jp
sahf
push
mov
inc
mov
jge
and
jns
fildll
outsb
and
lods
aad
xlat
or
dec
xchg
mov
dec
mov
mov
and
inc
push
jo
lcall
lods
add
sbb
cmpsl
stc
hlt
inc
test
jp
adc
popf
into
xor
lea
imul
dec
jne
inc
mov
dec
inc
pop
dec
or
pop
lea
imul
pop
sub
add
add
inc
or
lea
movzbl
inc
dec
inc
inc
add
ret
push
add
lea
mov
sub
add
inc
dec
and
push
push
push
push
lea
imul
inc
push
add
sub
inc
and
lea
imul
dec
dec
dec
mov
dec
push
and
lea
xor
mov
dec
push
inc
dec
push
add
or
pushl
lea
call
movsbl
add
dec
sub
dec
inc
or
lea
mov
pop
ret
add
xor
or
lea
pop
inc
test
jbe
inc
dec
inc
and
lea
movsbl
inc
inc
dec
dec
xor
lea
mov
sub
inc
dec
inc
inc
xor
lea
movswl
inc
inc
inc
and
dec
add
mov
lea
mov
movzbl
dec
dec
add
inc
dec
and
sub
lea
mov
imul
dec
mov
sub
dec
mov
inc
add
mov
lea
imul
dec
inc
inc
dec
dec
jne
add
mov
lea
mov
inc
inc
dec
sub
add
lea
add
mov
add
dec
add
sub
lea
mov
inc
sub
mov
inc
add
test
jbe
or
lea
mov
add
sub
inc
inc
add
lea
mov
inc
sub
dec
add
and
inc
lea
movzbl
inc
inc
dec
dec
and
or
lea
mov
imul
add
movzbl
add
sub
add
dec
add
and
lea
mov
mov
add
dec
movzbl
sub
sub
mov
sub
lea
mov
mov
sub
movzbl
inc
inc
add
inc
add
and
lea
mov
movzbl
add
inc
xor
dec
dec
inc
sub
lea
movzbl
inc
dec
dec
inc
jmp
push
sub
or
lea
imul
dec
dec
inc
dec
sub
lea
mov
add
inc
add
push
inc
add
push
lea
call
movsbl
pushl
dec
inc
pop
sub
dec
mov
xor
lea
movzbl
dec
inc
inc
sub
add
cmp
je
sub
lea
movl
mov
add
pop
inc
ret
push
inc
push
inc
xor
push
lea
push
mov
push
sub
inc
push
dec
inc
xor
lea
movzwl
call
dec
push
dec
dec
inc
mov
and
mov
lea
mov
mov
sub
add
test
je
add
dec
add
lea
mov
sub
add
add
dec
mov
add
lea
imul
add
dec
add
add
sub
repnz
lea
mov
add
dec
jmp
dec
inc
inc
or
lea
imul
inc
sub
sub
inc
add
lea
pop
pop
ret
jmp
push
mov
mov
add
sub
add
call
inc
add
call
lea
mov
call
inc
dec
call
dec
sub
call
xor
lea
call
mov
add
inc
sub
call
dec
push
xor
lea
mov
call
dec
dec
call
dec
dec
xor
lea
imul
dec
dec
dec
dec
pop
and
lea
mov
add
inc
pop
add
add
pop
add
add
lea
mov
pop
sub
add
inc
inc
and
lea
movzwl
add
pop
add
dec
pop
inc
add
mov
lea
movzbl
call
sub
inc
dec
dec
ret
xor
lea
push
mov
add
push
dec
dec
push
sub
or
push
lea
imul
push
sub
dec
mov
dec
inc
push
or
ret
push
lea
push
movzwl
add
push
add
add
push
sub
call
pop
ret
jmp
push
imul
push
dec
add
push
sub
dec
push
add
lea
push
mov
call
sub
dec
pop
ret
sub
dec
mov
add
and
mov
lea
mov
mov
dec
add
mov
dec
add
xor
or
lea
mov
mov
add
inc
sub
dec
sub
sub
lea
movswl
cmp
jb
dec
push
inc
inc
push
inc
sub
push
lea
mov
mov
dec
dec
xor
dec
sub
xor
xor
lea
xor
mov
sub
push
inc
dec
xor
inc
add
mov
lea
imul
mov
add
inc
movzbl
dec
dec
xor
lea
add
imul
dec
add
dec
add
movzbl
inc
add
lea
mov
dec
dec
inc
dec
inc
or
lea
mov
inc
dec
sub
inc
or
cmp
jb
lea
xor
mov
inc
mov
add
sub
mov
dec
sub
inc
lea
inc
add
dec
add
mov
xor
lea
cmp
jb
mov
sub
inc
xor
inc
jmp
lahf
loopne
gs
jmp
inc
jp
inc
sahf
lds
push
add
dec
icebp
cli
ja
negb
pusha
pop
cmp
outsb
xlat
dec
jle
sbb
int
pop
cs
jo
mov
pop
ret
lcall
shlb
fmull
shll
push
sbb
pop
cmp
movsl
cld
lret
jnp
mov
jg
test
cltd
push
sbb
xor
fisttpll
push
adcl
movsb
movhps
dec
pop
pop
lret
scas
pop
xor
lret
clc
adc
popa
in
mov
push
inc
pop
int
mov
sub
cld
mov
adc
fidivs
test
std
mov
pop
mov
jmp
xor
mov
cmp
stos
mov
repnz
scas
mov
or
out
jbe
xchg
xor
inc
mov
xchg
aad
jb
enter
pushf
adc
cmc
shlb
dec
jns
loopne
mov
addr16
int3
rolb
inc
addr16
lcall
xchg
fsubrl
shlb
xchg
push
jae
fwait
insl
lahf
adcl
sub
popa
jmp
xor
xor
scas
dec
dec
xor
mov
ljmp
push
mov
jae
shlb
jae
gs
cmpl
jne
lret
mov
push
loope
arpl
inc
xor
pop
jns
ss
and
mov
jnp
add
xorb
inc
int
aad
xor
enter
and
bound
outsb
in
adc
pop
add
outsl
xchg
and
fwait
sbb
xchg
movsb
fdiv
xor
adc
pop
pop
cmp
movsb
sti
int3
and
leave
sub
popa
xlat
or
xor
cs
xor
lds
mov
fmuls
pop
add
mov
or
andl
cs
lcall
xchg
xor
iret
jge
and
repz
sarl
inc
loopne
hlt
mov
in
iret
sahf
stos
or
mov
dec
inc
adcl
mov
jg
lea
out
push
out
push
stos
jmp
xor
inc
pop
mov
je
gs
jae
pop
cmp
or
dec
sbb
lret
pop
stc
push
in
lret
dec
aam
lds
lret
adc
fmull
loopne
xor
es
aaa
jl
cmp
movsl
add
aad
cltd
xor
cmc
or
mov
dec
sbb
aad
lods
fwait
xchg
push
and
aaa
addl
or
test
pusha
mov
and
inc
int3
aas
mov
push
loopne
rcll
bound
push
roll
dec
or
mov
xchg
sti
cmp
in
daa
into
dec
and
pop
sub
inc
add
in
les
out
andl
mov
fadd
mov
push
es
std
adc
iret
inc
sbb
and
ret
out
cmp
cmp
inc
cmp
fdivp
cmp
out
jne
mov
loope
mov
scas
and
int
loope
inc
movsl
repnz
addl
inc
iret
fldcw
inc
shlb
daa
dec
rclb
stos
out
outsl
sub
dec
push
jnp
mov
arpl
mov
lock
dec
xchg
cmp
jle
movl
adc
push
push
andl
lods
push
lret
jecxz
iret
push
orb
push
jg
sub
push
mov
sbb
xchg
popf
jbe
cmc
cltd
pop
pop
ret
cmp
cmpsb
or
inc
sti
sub
xor
int3
dec
mov
cmp
jbe
mov
push
or
jns
push
adc
loop
xor
adc
les
icebp
movsl
dec
push
inc
fdivrs
stos
cmp
das
imul
sub
fwait
out
je
cmp
add
cld
clc
mov
mov
fsub
stc
lret
cmp
popf
scas
jl
jae
jne
push
mov
mov
clc
fadd
addr16
xchg
std
bound
pop
mov
add
mov
lock
lods
enter
aam
pop
adc
jecxz
fadd
in
bound
jno
sbb
xor
jle
lock
loopne
pop
fcomps
push
mov
cs
jae
jae
dec
shll
inc
push
out
mov
mov
add
pop
test
popa
movsb
repz
lret
mov
scas
inc
icebp
imul
jne
lock
jecxz
lcall
xchg
cmp
fwait
sarl
mov
inc
je
test
shr
push
ret
pop
sub
adcl
xor
test
mov
sbb
loop
frstor
hlt
das
jne
fisubs
stc
pop
push
xor
cmovbe
ljmp
fwait
stos
insb
mov
sub
iret
xchg
out
and
dec
idivl
adc
or
shlb
jb
test
jno
aam
lret
pop
cmp
adc
xchg
ret
cli
xchg
jmp
fcomip
push
cmp
js
ljmp
pop
adc
stos
ret
rep
stos
popf
xchg
lcall
cmpsb
sti
mov
or
leave
adc
push
cmp
mov
idivb
rcrb
fsubl
xchg
andl
mov
popf
ss
adc
mov
add
cltd
mov
adc
fidivl
int3
and
ret
mov
fists
and
jne
cs
iret
lock
es
dec
pop
jle
push
fildl
ret
loop
add
je
lods
push
jl
aas
mov
cli
lods
jg
mov
dec
inc
mov
xchg
xor
sahf
ret
mov
ljmp
inc
mov
outsb
lock
mov
subl
movsl
aad
pop
gs
xor
addr16
das
xor
int3
lds
or
mov
enter
adc
fistpl
xor
stos
hlt
mov
std
dec
dec
mov
sbb
xor
ds
or
mov
in
mov
or
xorb
gs
jb
xchg
hlt
inc
cmc
mov
push
ret
push
add
mov
xor
sbb
cmp
rcrl
xor
xchg
mov
mov
dec
and
inc
xor
mov
repz
add
pop
jmp
stc
add
add
sahf
movsl
outsb
out
addl
fisttps
fbstp
movsb
xchg
outsb
mov
out
jl
scas
sahf
imul
xchg
fcmovbe
push
pop
fs
cwtl
xchg
fiaddl
cmpsb
jbe
data16
in
out
or
nop
adc
loope
scas
sub
sub
lret
sbb
jmp
xchg
dec
inc
inc
std
mov
jle
mov
and
xor
addr16
cmc
inc
pop
pop
add
jnp
and
es
fiadds
test
jne
loopne
leave
jns
bound
ret
cwtl
jl
mov
jp
ds
mov
fimuls
cltd
inc
cli
mov
mov
xchg
mov
push
fistpll
fsubr
lea
popf
add
add
stos
clc
inc
push
orb
mov
and
xchg
movsl
push
xchg
push
lods
data16
mov
popa
aaa
out
xchg
sarl
jg
push
orb
pusha
push
xlat
stc
mov
push
fnstcw
jmp
xchg
in
in
pop
push
adc
jle
ficoms
xchg
or
ss
test
insb
xchg
in
or
mov
imul
mov
adc
sub
cmp
mov
repz
test
js
leave
jb
outsb
dec
fdiv
add
mov
xchg
sahf
pop
adc
popf
xchg
inc
vpcmov
jmp
sbb
pusha
gs
mov
xchg
cltd
outsb
push
in
dec
inc
sarb
cs
insb
fidivl
sub
jecxz
popf
cmp
pop
mov
mov
rcl
mov
call
mov
sbb
pop
jns
ljmp
mov
js
inc
in
enter
jae
in
lahf
dec
arpl
cmp
jo
push
inc
mov
adc
cmp
cmp
pusha
lods
es
push
push
xchg
fisubs
mov
daa
pop
xchg
in
dec
cs
inc
mov
test
jb
cmpsb
iret
xor
mov
lods
test
xor
sbb
push
adc
in
icebp
pusha
cmp
fnsave
aas
daa
pushf
push
fstpt
sbb
add
flds
lods
cltd
dec
lret
add
inc
mov
test
adc
cs
sub
repz
pop
lret
add
lahf
fs
sub
outsl
orl
pop
dec
into
cltd
das
mov
gs
insl
jge
hlt
frstor
sub
repz
aad
js
sbb
or
mov
ret
movsl
dec
xor
test
sbb
movsb
frstor
adc
out
jae
loopne
outsb
sbb
repnz
cld
pop
mov
ret
sbb
sahf
push
jno
loop
mov
pop
mov
mov
lret
xchg
xchg
xlat
das
mov
gs
enter
lods
cmp
jp
std
sub
pop
add
lock
cmc
outsb
les
mov
cwtl
push
jae
inc
cmp
into
jbe
ljmp
dec
mov
xchg
movsl
pop
out
ljmp
gs
dec
in
and
in
sarl
lods
push
or
movsb
data16
push
dec
and
arpl
dec
mov
sub
shlb
mov
lods
aam
pop
and
mov
push
and
fildll
fiadds
mov
add
test
sub
ret
loope
jl
in
mov
adc
add
inc
imul
mov
xchg
mov
mov
shll
pushf
call
add
mov
cmp
cld
inc
and
sahf
jg
fisubs
xchg
mov
jmp
or
scas
xchg
lret
dec
cmp
popa
push
mov
std
ret
lcall
fnsave
divl
jle
cld
jge
sbb
sub
out
sbb
es
mov
jle
es
mov
push
hlt
cmp
mov
loop
jno
mov
cmp
fwait
cs
jp
dec
xor
repnz
xchg
ss
lods
dec
push
filds
cs
add
mov
sub
dec
in
or
jae
in
rorl
movsl
add
inc
sub
or
es
dec
mov
xchg
ret
sub
rorl
cmpb
or
out
xchg
jge
inc
pop
and
mov
jnp
ja
ror
data16
sbb
cmp
loope
cmp
adcl
divb
sub
xchg
jmp
fwait
xor
cmp
loope
call
mov
cmp
jp
lahf
mov
es
adc
ret
sbb
enter
data16
in
sbb
dec
rorl
push
jle
repz
lds
add
pop
movsl
xorl
inc
lcall
xchg
xchg
sbb
xor
push
mov
lods
or
int3
cmp
pop
addr16
imul
push
test
aad
insb
mov
mov
fbstp
dec
les
jp
fwait
sbb
gs
je
dec
push
xchg
adc
add
dec
stos
and
mov
inc
cs
test
inc
mov
inc
adc
adc
inc
cmp
outsl
bound
out
outsl
rorl
sub
add
pop
in
inc
ss
and
movsl
cmpsl
adc
fsubr
in
int3
daa
mov
sbb
push
adc
andl
push
jge
xchg
out
data16
adc
inc
subb
and
add
scas
dec
filds
jns
mov
jae
jp
test
add
mov
push
cmp
mulb
pop
cmp
std
pop
xchg
ss
rorl
push
mov
xor
mov
int3
pop
movsb
pop
mov
shlb
in
imul
push
test
orb
sbbl
mov
push
dec
aaa
adc
fmull
mov
jecxz
mov
dec
xor
mov
test
adc
xchg
shll
cmpsl
lods
fdivrs
out
xchg
xchg
faddl
cmp
ret
pusha
xor
test
xchg
jae
mov
fadd
addr16
fwait
repz
fwait
mov
inc
rol
movsl
ss
mov
mov
sub
inc
or
dec
mov
lahf
in
popa
dec
rolb
std
nop
ja
fwait
lods
aaa
movsb
outsb
mov
and
shrb
outsl
or
shll
daa
add
jl
mov
sbb
inc
gs
test
mov
push
pop
fstpl
or
sbb
xchg
out
lret
xchg
push
mov
xchg
push
cltd
and
jo
lods
lds
cli
cs
cmp
push
shll
lret
xchg
cmp
push
test
cmp
jle
out
mov
jbe
aam
xchg
sbb
sub
xor
adc
pop
cmp
movb
cwtl
dec
add
cs
or
pusha
nopl
mov
sbbl
xchg
mov
pop
add
xor
inc
jg
ret
leave
xor
std
xor
lret
xchg
lods
adc
movsb
sbb
dec
mov
mov
mov
out
ret
loope
jl
dec
jmp
aad
mov
sarl
lods
out
xor
popf
loop
mov
jo
sti
sbb
dec
lds
push
mov
push
ljmp
sbb
push
mov
and
or
repz
pop
repnz
sbb
fists
push
xlat
lock
add
mov
pusha
out
jno
testb
test
add
jnp
adc
outsl
stos
xchg
js
out
pop
xor
cli
lods
cli
out
sti
aas
imul
cmp
push
daa
loope
and
adc
lds
jae
cs
lcall
scas
femms
pop
lea
ss
adc
scas
adc
mov
push
test
push
push
cmp
imul
add
shlb
cmpsl
sahf
bound
cmpsl
call
orb
or
pop
and
movsb
mov
data16
hlt
and
aam
mov
bound
sub
lock
and
jmp
jno
subl
call
mov
xor
cwtl
addr16
and
mov
mov
sti
pop
jmp
mov
cld
sahf
mov
repz
xchg
adc
cli
xchg
fwait
scas
add
aaa
hlt
inc
inc
cmp
inc
test
jne
dec
pop
or
in
int
mull
dec
std
call
add
js
pop
arpl
jnp
sbb
mov
and
mov
test
dec
pop
xchg
shlb
xorl
cwtl
out
jmp
sub
rclb
inc
nop
loopne
jae
sbb
and
mov
jb
idivb
sub
add
ret
aaa
xor
jl
ljmp
pop
sub
mov
in
inc
or
clc
pop
mov
xchg
sti
push
outsl
inc
repnz
clc
loopne
jbe
imul
mov
cmp
sahf
jle
mov
or
jne
mov
cmpsb
cmp
int
insb
imul
fcoms
fldt
inc
pushl
test
int
sub
out
cmp
and
jo
jno
pop
jnp
push
cmp
xchg
jl
xchg
movsb
pushf
mov
jne
and
pushl
mov
daa
xor
lds
add
sub
or
xor
scas
aam
sub
cmp
loop
movsb
insb
mov
sub
aas
fstl
mov
divl
xor
ljmp
lret
add
test
mov
xchg
sub
add
mov
std
or
mov
scas
std
mov
or
adc
addb
or
ret
fwait
subl
xchg
int
mov
subl
pop
pop
aas
jl
imul
jne
xchg
pop
mov
jmp
mov
cmp
rcll
int3
add
add
call
int
pop
enter
push
push
lea
shlb
push
mov
pop
push
add
adc
test
loop
mov
sbbl
pop
imul
ss
xor
aas
sbb
imull
pop
aam
sti
mov
dec
inc
jns
movsb
test
mov
sbb
push
test
fstpt
pop
xor
adc
cmp
clc
mov
inc
mov
mov
or
jmp
outsb
int
jp
dec
xchg
fdivr
in
push
dec
mov
pop
xorb
dec
movsb
add
leave
sbbl
sub
push
int
mov
or
add
dec
inc
xlat
in
stos
mov
lcall
sub
xor
mov
sbb
mov
pop
jg
mov
mov
mov
out
cmpsb
rcrl
cmp
pop
push
test
aaa
inc
push
adc
fs
pop
jns
fs
pop
dec
add
sti
pop
cmc
sbb
xor
dec
addl
cmp
mov
xchg
mov
iret
inc
adcb
aaa
jge
clc
arpl
ja
std
dec
mov
mov
mov
iret
sti
inc
rcrl
jmp
outsl
imul
lret
scas
pop
roll
push
push
push
cmp
aad
jecxz
pop
jmp
pushf
jne
cmp
and
repz
fcom
scas
in
hlt
scas
sub
outsb
out
jg
push
sub
and
outsl
mov
add
cli
icebp
testl
push
xchg
jecxz
dec
mov
sub
mov
or
cs
pop
stos
out
cli
lods
mov
push
sub
stc
xchg
adc
adc
cmpsl
push
scas
xor
sbb
adc
mov
mov
dec
lods
mov
mov
sarb
ds
test
aaa
and
push
cmp
xlat
mov
and
call
xchg
inc
cmp
aam
pop
loop
push
jmp
jmp
pop
xlat
cmc
pop
loope
fwait
mov
repnz
push
xor
and
xchg
mov
icebp
sub
lods
les
sbb
mov
mov
imul
test
dec
stc
inc
pop
loope
lea
inc
sub
insl
or
in
aad
sbb
cmc
add
emms
add
pusha
jecxz
dec
js
and
mov
and
outsl
xor
push
daa
mov
les
ljmp
mov
adc
xchg
call
outsb
mov
mov
and
lret
and
fs
fwait
dec
roll
jbe
dec
lahf
das
loopne
mov
pop
inc
cmp
jl
pusha
jo
scas
sarb
adc
xchg
aas
and
les
adc
roll
dec
mov
pushf
push
jae
pushf
pop
pop
lods
sub
dec
lea
or
and
lods
aas
push
insb
mov
sub
push
pop
insb
data16
nop
or
pop
lds
jnp
aad
xchg
vpcmpgtb
notl
cmp
push
cmp
sti
icebp
rcll
jno
in
loope
ficoml
ljmp
test
cli
or
pop
cwtl
xchg
cmc
jmp
gs
idivl
inc
pop
pop
sub
jle
lret
ret
xor
movsl
mov
inc
fsts
ror
jg
mov
mov
and
inc
out
popf
repz
cwtl
mov
popf
ljmp
xor
mov
aam
cld
mov
decl
inc
dec
pop
sbbl
arpl
mov
pop
and
pushf
jbe
stos
dec
ret
lahf
fsin
ficomps
xor
lahf
test
push
test
sub
push
or
les
pop
xor
cmp
scas
adc
stc
sub
lods
fistl
adc
dec
shr
sbb
pop
addr16
call
push
pop
mov
sbb
mov
jae
in
movsb
sub
lods
mov
mov
or
loop
inc
int3
mull
xchg
push
xor
adc
jae
pop
outsb
hlt
xchg
rcrl
movl
pusha
xchg
stos
ret
lret
sbb
aam
stos
mov
mov
push
cmp
mov
mov
xchg
loop
int
xor
inc
repz
cltd
add
popf
addr16
mov
shll
cmp
pop
idivl
mov
add
imul
cmp
jno
jp
mov
jbe
outsl
movsl
cwtl
out
in
sub
mov
jp
dec
movsl
icebp
add
jp
mov
sub
xor
insb
xchg
mov
jns
mov
push
cld
sahf
dec
or
pop
cmp
cld
cmp
jp
cltd
xchg
cmp
pushf
jl
enter
arpl
rorb
sub
rorb
xor
orb
andb
or
dec
movsl
sbbl
iret
orb
pop
or
clc
dec
mov
fsubr
sbb
sbb
inc
jnp
push
sub
push
xor
int3
add
testb
and
cli
sub
sbb
mov
out
mov
ret
popa
ret
mov
jl
pop
imul
and
sti
xchg
jo
cmpb
lods
sbb
xchg
adc
mov
test
inc
mov
sub
dec
push
xor
lcall
pop
push
lret
jle
pop
dec
push
cld
sub
push
scas
add
cmpsb
jo
or
push
pop
xor
xor
adc
test
sbb
xchg
repz
fcompl
scas
mov
push
mov
push
sbb
dec
inc
push
xchg
stos
stc
stos
lahf
inc
xchg
adc
imul
mov
scas
inc
sarl
pushf
mov
cli
ror
popf
cli
scas
pop
add
inc
pop
push
mov
scas
adc
stos
in
int3
cld
xor
cmpsl
aaa
enter
jo
push
loop
std
out
movl
cwtl
inc
out
sub
push
push
mov
mov
rcll
cmpb
inc
mov
movsb
mov
inc
mov
nop
mov
dec
cmp
aas
sbb
jns
in
mov
push
mov
loop
push
pop
jno
pushf
jge
xor
fstps
push
sub
inc
pop
addr16
xor
rclb
aad
lcall
rcl
shlb
or
push
pop
lret
add
mov
adcb
xchg
xlat
in
mov
jb
inc
and
aad
test
dec
xchg
aad
pop
imul
mov
xchg
in
push
pop
or
mov
fcoml
mov
mov
testb
adc
push
int
sbb
ret
and
sub
or
std
pop
dec
adc
clc
jmp
push
sbb
xor
out
mov
adc
out
icebp
mov
pop
aas
cmpsb
pop
bound
inc
pop
dec
sbb
xchg
orl
loope
cmp
je
mov
call
out
cmp
popf
sbb
call
imul
rorl
pop
movb
sub
ficomps
scas
mov
sbb
xchg
cmpsb
xchg
int3
sbb
pop
inc
sbb
push
es
or
add
cmc
push
popw
or
popa
mov
aaa
or
inc
je
jnp
cli
fsubl
sub
neg
lods
xchg
out
sub
lcall
lahf
push
xchg
mov
jge
xchg
daa
and
movsb
sub
ljmp
pop
push
popf
mov
sbb
stos
scas
ds
iret
jo
in
out
sbbl
ret
xchg
mov
dec
add
cmp
into
ljmp
aad
fcoml
xchg
inc
mov
rcll
scas
insl
sbbb
in
int3
mov
xor
je
loopne
shl
pop
inc
mov
sbb
movsl
mov
imul
xlat
jbe
idivl
or
xchg
stc
pop
xor
or
repz
dec
test
jp
dec
ss
sbb
xchg
rorl
push
cld
or
loope
mov
out
xlat
shr
insb
cs
inc
out
sbb
test
loop
mov
rorb
insb
sbb
aad
lock
les
mov
mov
cmpsb
dec
xchg
aad
or
add
push
cmpsb
mov
mov
leave
scas
shrl
hlt
or
dec
test
js
xor
push
lods
xchg
rclb
push
data16
je
sbb
push
adc
mov
lock
mov
jae
mov
inc
lret
push
shlb
xchg
push
loope
movsl
or
cmp
inc
out
add
in
xchg
sbbb
mov
shll
sbb
cmc
in
jmp
mov
xorl
out
int3
int3
inc
adc
sub
fdivr
lahf
mov
rcl
jns
repz
leave
sub
mov
int3
push
in
xchg
in
fmull
hlt
in
xchg
cmp
and
inc
push
cs
add
insl
xchg
inc
cmp
mov
test
sbb
mov
and
cmp
mov
iret
jl
bnd
lock
repz
jo
jo
jbe
ror
jae
and
test
out
add
cmp
jae
es
push
mov
mov
inc
roll
and
rclb
push
cmp
lds
mov
inc
dec
nop
adcl
sti
repz
adc
movsl
shll
out
lret
jle
fs
push
repz
adc
mov
out
imul
dec
adc
scas
add
fstpt
jle
adc
mov
leave
mov
jge
jne
shll
pop
imul
pop
insl
adc
mov
subb
aam
push
stos
popa
jnp
sarl
into
int3
and
inc
scas
out
roll
adcl
inc
sbb
xchg
pop
rorl
out
push
rcl
dec
iret
lret
in
scas
call
xlat
addr16
dec
movsb
push
xchg
mov
daa
insb
mov
xor
fisubrs
xchg
lahf
les
fbstp
xor
movsb
insl
shlb
add
fldcw
stos
lahf
idiv
and
lds
repnz
addr16
lods
stos
outsl
jbe
jb
add
xadd
push
cld
ret
jl
sbb
rolb
add
mov
loop
pushf
xchg
leave
sbb
xchg
cmovns
dec
lcall
fs
xchg
in
xchg
mov
data16
ror
in
and
pop
add
mov
mov
mov
imul
mov
push
adc
add
or
rol
xchg
inc
and
jbe
mov
test
ret
repnz
mov
data16
punpckldq
push
pop
xchg
push
xor
pushf
iret
daa
and
fwait
lods
push
dec
jbe
cwtl
xchg
cmp
pop
lret
je
jge
dec
mov
mov
xchg
push
push
jo
sbb
in
pushf
xlat
push
ret
pop
pop
rclb
test
popa
lods
in
lret
or
add
int
inc
fadds
adc
and
cmp
rcl
das
push
push
jb
and
mov
adc
int
mov
jnp
pushf
loop
rcrl
and
repnz
ret
cmp
jp
pop
fildll
jg
mov
inc
sbb
addr16
sub
mov
inc
cwtl
dec
sti
dec
rorb
inc
jbe
sub
inc
mov
cmp
add
or
imul
xor
xlat
ffreep
jbe
pop
xchg
push
ljmp
pop
or
inc
xchg
xor
push
roll
sub
lea
out
jl
jo
in
cmpsb
cmp
xchg
aam
adc
push
mov
push
adc
and
and
mov
pop
jle
repnz
pop
stos
sub
pop
daa
lods
fucompp
popf
lret
in
mov
sbb
push
shl
cmpsl
push
jge
cmpsl
call
inc
pop
loopne
bound
lods
sbb
arpl
xor
mov
and
out
add
ret
out
dec
mov
adc
push
pop
adc
sbb
pop
imul
pop
les
mov
inc
add
fs
and
adc
or
mov
xchg
fisttpl
pop
sbb
mov
fisubrs
mov
push
xchg
mov
fwait
or
sub
jecxz
inc
std
neg
mov
lods
lods
mov
push
adc
aam
aam
lret
sbb
rcrb
push
rcrb
mov
lret
sub
xchg
fwait
call
insl
inc
in
dec
xor
xchg
xor
and
jmp
or
subl
jmp
dec
cmpl
and
shll
das
mov
out
jae
push
inc
dec
push
inc
jge
xor
fwait
inc
out
cwtl
sub
into
movsb
in
mov
push
loopne
fs
std
add
outsl
das
loop
inc
int
jb
into
call
gs
and
loope
mov
iret
aam
addr16
jmp
inc
pop
aam
dec
inc
loope
sar
insl
jne
dec
mov
popa
and
mov
test
incb
or
add
xchg
loopne
das
jae
fwait
stos
addr16
dec
xor
mov
mov
jecxz
mov
into
mov
and
adc
dec
mov
dec
mov
dec
pop
adc
cli
adc
aaa
sarl
jp
cwtl
jmp
scas
adc
mov
fs
inc
cmp
add
repnz
push
adc
xchg
movsb
mov
shlb
in
aas
pusha
pop
mov
adc
mov
mov
jecxz
lahf
inc
xchg
lods
mov
ja
sbb
xchg
add
mov
push
orb
decb
sub
rclb
cmc
or
rcrb
sarl
pushf
push
cltd
cmc
aaa
push
das
sub
or
stc
pop
mov
dec
add
or
rclb
jbe
or
push
and
mov
divl
leave
pop
jnp
push
or
imulb
hlt
mov
rolb
and
jecxz
push
out
ret
lea
sub
or
push
arpl
adc
sbb
das
add
xchg
out
cwtl
std
push
pop
bound
adc
movsl
inc
xor
das
and
pop
mull
push
in
pushf
cmp
dec
out
pop
xchg
jo
insb
mov
je
push
mov
pop
loope
pushl
shrb
fdiv
adc
mov
or
xchg
aaa
sbb
mov
add
dec
icebp
cmp
cmp
xchg
mov
adc
fmull
cs
repnz
jecxz
dec
out
dec
pop
inc
inc
adc
repnz
cld
lock
mov
inc
adc
fistpl
sbb
inc
or
ret
outsb
movl
mov
or
mov
sub
cmp
jne
mov
fbstp
mov
push
mov
pop
inc
aam
jle
sub
jle
adc
xor
addb
je
adc
sbb
stc
push
dec
out
ret
lahf
mov
les
mov
ret
lret
or
and
sbb
jne
sbb
inc
stos
jle
pop
push
fisubs
push
pop
imul
aad
adc
leave
rorl
lea
jne
in
add
jmp
imul
das
test
jne
xchg
jne
jp
cli
scas
out
inc
js
ficomps
push
cmp
fwait
add
repz
jl
push
js
dec
sub
push
int
addr16
imul
jl
outsl
jle
add
jge
in
mov
leave
pusha
cmpsb
push
push
rcr
jbe
in
fisubs
ljmp
cs
pop
sub
dec
je
inc
aas
test
jne
repz
into
aam
imul
sbb
xchg
in
jl
int3
cmp
out
cmp
dec
out
dec
fsub
adc
xchg
fldcw
or
cli
cltd
add
out
mov
adc
dec
jmp
test
cmc
shll
add
mov
jns
unpcklps
into
data16
xlat
out
dec
pslld
fimuls
in
mov
jecxz
pusha
push
and
shl
je
loop
sahf
fadds
addb
pop
lods
mov
push
in
pop
into
jg
stos
icebp
int
shl
loopne
inc
clc
imul
dec
pop
push
jno
fdivrl
ljmp
cwtl
cli
xchg
cmpsl
adc
pop
adc
int3
popaw
fsubr
inc
jmp
cmpsb
xchg
fdivl
and
mov
imul
xor
lea
cmp
cmp
in
add
sbb
shrl
sbb
loopne
call
pop
mov
and
in
fnstcw
inc
ds
fistpl
mov
jo
iret
xchg
leave
mov
push
shlb
mov
push
dec
mov
repz
mov
bound
mov
lcall
xchg
daa
fcomi
rorb
or
sahf
out
pop
bound
pop
xchg
push
adc
mov
out
xor
sbb
hlt
jle
add
test
jl
or
fwait
mov
sub
mov
xor
out
out
arpl
sbb
loop
test
call
jle
jne
mov
fcoml
xchg
insl
sbb
pusha
sbb
push
outsl
cmp
or
dec
lods
lret
add
cli
jns
mov
adc
pop
jne
je
mov
push
sbb
or
fcompl
fsts
movsb
fwait
roll
or
sub
pop
loopne
fmuls
push
mov
xchg
in
adc
addr16
sbb
enter
into
jp
jl
lret
and
jle
pusha
inc
je
mov
xchg
js,pt
stos
cmpsb
add
cld
pop
push
dec
js
lret
or
int3
int3
div
xchg
mov
mov
push
adc
mov
pop
push
ret
ds
push
xorl
pop
inc
sbb
insb
or
and
into
dec
mov
inc
pop
enter
dec
push
iret
je
jo
and
inc
jecxz
pushf
fimull
aas
mov
inc
sbb
add
jbe
pop
push
mov
mov
imul
mov
loopne
sti
cmp
arpl
add
mov
cmp
xor
movsb
mov
mov
ret
or
add
jnp
rclb
jb
pop
in
in
ljmp
ficoml
add
pop
push
loop
add
mov
aas
push
jecxz
xchg
mov
push
imul
or
and
adcb
repnz
nop
inc
sbb
out
dec
out
xlat
adc
in
jno
dec
test
dec
movsb
fistl
in
movb
xchg
mov
in
ds
jecxz
cld
lods
sbb
scas
mov
push
sub
xchg
test
dec
mov
out
mov
je
lods
mov
out
inc
push
out
jae
add
shlb
sub
inc
fidivrs
or
xor
jmp
scas
sar
push
mov
dec
in
fdivp
clc
enter
xor
mov
add
xor
stos
fcmovnu
pop
call
int
pop
cmp
imul
cmc
adc
pop
stos
das
scas
mov
sbb
mov
data16
test
sbb
mov
jp
iret
push
xchg
mov
pop
subb
jg
adc
cmp
shll
fildll
insl
imul
jge
fstpl
add
cmp
jl
push
shl
cmp
popf
jmp
outsb
push
ret
fdivs
xchg
xchg
sub
pop
mov
subb
outsl
xchg
pop
cld
jmp
dec
jnp
push
imul
inc
pop
pop
mov
loop
xchg
bound
cmp
pop
das
addl
xchg
cmpsl
pop
xchg
ss
frstor
stos
sarb
and
jle
iret
xlat
adc
fs
sbb
rcll
inc
mov
aaa
daa
imul
inc
mov
sti
cmp
out
push
mov
aad
push
repnz
sbb
arpl
pop
pop
inc
inc
dec
sub
dec
rcl
cmpsb
jmp
adc
lcall
xchg
mov
jns
lea
stos
cmp
adc
inc
sub
or
mov
mov
jmp
mov
xchg
lcall
loop
fistpll
loope
bound
or
dec
inc
pop
mov
xchg
lret
rcrl
notl
mov
lds
cs
sub
lcall
sub
jae
adc
cmp
jns
inc
xor
jecxz
mov
sbb
pop
in
aas
push
xchg
sub
mov
sbb
xor
in
sbb
xor
jp
pushf
mov
ja
or
imul
cmp
addr16
jle
addl
inc
mov
scas
xor
sarl
les
lahf
xchg
push
out
inc
sub
out
rcrl
int3
and
orps
jne
and
sarb
xor
or
je
sub
lods
mov
cmpsl
dec
jle
clc
shl
sbb
dec
sar
or
push
sarl
jne
mov
arpl
leave
icebp
xchg
sub
pop
mov
pop
mov
ds
xor
cmp
push
hlt
sub
dec
adc
out
incb
push
in
andl
imul
push
fists
rcll
arpl
mov
push
repnz
or
scas
jnp
in
adc
arpl
insl
dec
test
je
mov
in
add
sbb
xor
out
inc
push
mov
push
movsbl
mov
pop
out
je
daa
xchg
lea
sub
mov
mov
imul
outsl
pushf
dec
mov
out
xor
loop
mov
ret
fnstsw
pop
cmpsb
sub
mov
and
cmpsl
adc
sti
loop
rorb
push
sti
lret
fcmovnb
rclb
cmp
fwait
cmp
mov
pop
cmc
pminsw
mov
add
out
ljmp
stos
jne
adc
sub
jp
jo
pop
and
negl
aas
data16
xchg
repz
out
adc
mov
repnz
xchg
cmp
cmpsb
popa
sbb
lret
add
dec
scas
xlat
cs
xchg
fnstsw
xor
cli
jp
cmc
jns
inc
lret
mov
filds
xor
dec
sbb
leave
xor
xchg
jb
dec
jecxz
mov
addl
negb
inc
sbb
inc
in
jbe
lds
sbb
inc
pusha
out
stc
stc
inc
outsb
mov
and
fistpll
hlt
push
imul
sbb
pop
jp
push
pushf
sub
imul
push
or
rorb
stc
into
lods
mov
pop
xchg
bound
out
push
pusha
sbb
push
push
jge
js
dec
je
fcoml
enter
ds
dec
call
sub
pop
insb
fwait
cmp
pop
xchg
mov
or
aaa
in
jmp
stos
fidivl
in
stc
sbb
sarb
mov
cmpsb
mov
push
xlat
mov
sub
fiadds
inc
jmp
test
jl
pop
std
adc
rorl
mov
daa
sub
outsb
and
je
push
cltd
ror
sti
icebp
add
pop
dec
adc
mov
gs
add
shll
or
adc
ja
outsl
les
xlat
cli
dec
push
push
sbb
jl
mov
jl
in
jno
das
scas
push
data16
pop
mov
call
repz
xor
adc
lock
out
or
xchg
icebp
leave
mov
jb
mov
hlt
xchg
js
xor
outsb
das
lods
push
into
lahf
ds
mov
mov
jmp
mov
mov
push
out
mov
dec
addr16
and
mov
bound
push
test
ljmp
dec
adc
movsb
popf
sbbl
test
lahf
stos
shlb
xchg
jo
sub
mov
xchg
mov
in
test
lds
cwtl
xor
mov
push
cmp
call
adc
and
fcomps
mov
mov
jb
in
mov
sub
lret
dec
out
jbe
and
pop
add
imul
pop
add
jne
pop
fadds
mov
push
repnz
push
jae
divb
nop
jb
mov
sti
div
mov
imul
lock
mov
sbb
jmp
bound
sahf
gs
inc
loopne
xchg
or
mov
stos
mov
push
jle
repnz
jae
xlat
sub
in
dec
inc
xchg
test
call
jp
sub
shrl
out
aad
cmp
cmpsb
jle
push
loopne
jle
jno
movsl
scas
adc
js
nop
loopne
int
xor
dec
or
adc
out
inc
jae
xor
pop
lea
push
sub
push
cmp
ficompl
add
push
xlat
in
ds
inc
out
in
daa
int3
xor
repz
popf
aad
loop
sub
lea
mov
insl
stc
sub
mov
jns
add
inc
sbb
push
mov
inc
mov
mov
jmp
cmp
int3
mov
mov
rorb
dec
xor
or
aas
adc
loope
test
jb
jmp
xchg
cwtl
or
ljmp
jge
imul
das
repz
loopne
pop
icebp
inc
push
aaa
pushf
shll
jo
pop
push
ljmp
jb
or
push
fcom
lock
adc
dec
js
fwait
test
jmp
jp
pop
fcomp
arpl
lcall
in
mov
fwait
sbb
scas
jns
push
dec
lods
imul
push
mov
in
shrb
decl
lret
sub
outsb
push
fistl
shr
or
or
or
filds
jecxz
fistl
aam
pusha
sub
dec
js
sti
pop
fst
and
dec
loop
stos
cmp
mov
mov
push
leave
je
pop
leave
push
adc
in
mov
dec
mov
ljmp
sub
dec
aaa
pop
inc
adc
pcmpeqw
cmc
jbe,pt
in
xorl
inc
das
es
sbb
mov
xor
lret
adc
push
mov
stos
mov
mov
mov
or
push
inc
lock
inc
fldl
repz
and
rolb
in
and
mov
sbb
push
jbe
sub
dec
mov
in
add
pop
cltd
lods
les
outsb
push
shl
ss
mov
push
xor
sbb
clc
fsts
or
sbb
xor
inc
nop
call
imul
mov
out
pop
fcmovu
cmp
jb
out
insl
out
loope
movsb
std
lods
out
inc
subl
pop
ja
imul
add
into
fs
xor
ljmp
rol
xchg
int3
xchg
mov
aaa
mov
imul
push
cmp
out
fldcw
aad
mov
dec
stos
fisubs
push
xchg
je
cmc
jo
pop
xchg
fiadds
cmp
inc
cmc
sahf
cmp
or
mov
add
insb
test
push
jecxz
out
dec
iret
xchg
cmpsl
repz
dec
pop
mov
adc
in
jb
mov
fwait
test
inc
pushf
testl
loopne
call
xor
or
sti
cmc
jo
sub
int3
push
movsl
dec
jg
pop
mov
data16
rcr
shrb
inc
mov
hlt
adc
fidivl
add
mov
out
mov
in
jne
movlps
mov
mov
mov
out
push
gs
cmp
mov
inc
ja
pop
dec
pop
roll
scas
arpl
cmpsl
mov
push
cmp
cmp
cmp
jp
push
mov
xchg
ljmp
mov
push
imul
jnp
push
xchg
or
sub
sub
std
add
popa
aad
dec
enter
jbe
out
mov
daa
sbb
test
jp
cmp
adc
mov
adc
mov
shlb
sahf
adc
in
push
popl
pop
add
adcl
stc
rcl
mov
insl
fsubr
mov
jmp
lret
add
dec
cmc
out
loope
mov
repz
dec
dec
push
icebp
jl
into
sub
add
fidivs
adc
dec
and
stc
xorl
test
test
aas
sbb
cmp
das
xor
fistpll
je
or
int3
add
cmp
pop
inc
fiadds
jmp
stos
cmc
pop
test
sub
xchg
xchg
inc
push
inc
cmp
add
int
ds
cmp
pop
jge
pushf
mov
xchg
lods
jmp
jmp
or
loope
mov
jecxz
xchg
ret
pop
pop
lret
lahf
jp
lcall
stos
cmc
test
les
mov
adc
adc
rcrb
xchg
pop
notb
adc
mov
cmp
in
jb
outsb
dec
and
sbb
pop
lret
out
orb
popa
aam
push
sbb
mov
inc
xor
sbb
testl
das
scas
into
js
ds
rol
ja
xchg
ret
jbe
out
jp
daa
fmul
ja
inc
and
mov
enter
dec
lds
fnsave
add
and
xor
enter
pop
lret
subl
outsb
out
loopne
dec
fsubr
lahf
adc
mov
adc
xchg
andb
shl
cli
imul
cmp
popl
mov
xchg
ret
shr
fnsave
outsl
test
pop
mov
xor
jp
dec
add
mov
and
cmp
cltd
and
in
pop
mov
mov
push
cmp
or
and
in
push
mov
andl
inc
out
les
mov
and
jo
repnz
iret
mov
pop
hlt
lcall
dec
cs
dec
and
leave
vpmovsdw
imul
ja
cltd
lock
xchg
stos
xchg
mov
loope
pop
xchg
mov
xchg
out
fadds
mov
jns
in
adc
add
xlat
push
xor
sub
orl
jb
daa
mov
mov
jbe
add
xor
push
push
pushaw
mov
pop
mov
bound
inc
shll
or
pop
pop
std
cmc
ja
adc
je
daa
push
loope
popf
hlt
jo
popl
pop
inc
mov
movsb
sbb
mov
mov
push
lahf
enter
hlt
mov
rcr
xchg
jbe
push
and
cmp
rcrb
cmp
xlat
jl
add
aam
decb
fidivrl
push
int
in
dec
aam
pop
sub
repz
and
leave
scas
mov
stos
adc
test
test
test
lret
icebp
cmp
pop
pop
push
and
mov
iretw
addl
pop
mov
and
dec
adc
out
int
hlt
push
cld
ret
mov
jno
in
jbe
int3
popa
jb
jmp
dec
data16
jl
into
or
stc
xchg
push
out
mov
add
xchg
les
mov
mov
jmp
mov
in
cmp
cmp
push
dec
mov
test
cmp
in
aas
mov
sub
cld
cmp
pop
sbb
fisubrl
add
jae
add
dec
popf
add
add
add
loope
add
out
xor
add
das
xor
add
lods
add
jo
add
and
je
popa
cltd
and
pop
adc
daa
sub
mov
sbb
mov
dec
fadds
pop
dec
mov
test
insl
push
pushf
sub
inc
out
nop
or
fwait
sbb
cmp
mov
es
loopne
scas
cmp
jne,pt
jge
fisttpll
push
test
add
push
mov
mov
adc
sbb
repnz
inc
jne
xor
xchg
in
ja
cmc
add
xchg
or
mov
enter
mov
mov
icebp
aas
add
popa
jp
dec
pop
push
fld1
movsb
ffree
add
into
nop
into
mov
icebp
sbbb
ds
jge
pop
pop
sarl
sub
jae
and
xor
xchg
je
add
or
push
sub
aad
xchg
aam
push
jne
mov
mov
cmp
das
les
push
xor
idivl
int3
push
call
jle
cmp
popf
add
and
fiaddl
pusha
inc
jle
loopne
dec
mov
fidivl
pop
ja
xor
cmc
sub
jmp
sub
or
sub
mulb
stc
cli
data16
jnp
xchg
ja
int3
sub
fs
xlat
imul
add
pop
add
mov
lret
ret
xor
aas
cmp
scas
and
or
lret
inc
ljmp
push
cmp
repnz
sub
stos
sbb
scas
popf
stos
or
fidivrl
call
dec
or
cmpsb
sbb
rorb
push
push
andb
mov
or
pop
fwait
rclb
jp
mov
call
sbb
mov
jp
insl
lret
adc
push
nop
xlat
sbbl
out
leave
xor
xor
jo
cmp
sub
mov
adc
jnp
jge
mov
imul
lds
int3
jmp
xor
sahf
or
mov
dec
iret
imul
cmp
jl
scas
add
or
lds
leave
sarl
cmpl
jno
fldenv
std
cmp
aam
mov
dec
cmp
loopne
jp
pop
jno
das
int
xchg
out
inc
mov
sbbb
jbe
mov
nop
in
add
mov
mov
mov
push
imul
int3
mov
out
mov
xchg
or
pop
mov
mov
dec
orb
mov
xchg
mov
add
xchg
stos
imul
mov
xchg
sub
scas
xor
push
orl
lahf
cmp
xor
mov
adc
add
fcmove
xchg
dec
sbb
cmpsl
lahf
jnp
push
fldcw
andl
or
mov
int
das
jbe
jl
jns
sbb
jge
add
leave
push
cmpsb
popf
lds
int
push
or
pop
adc
ror
rcr
lds
add
adc
jno
out
dec
rol
movsb
lahf
movsb
or
jns
add
fwait
arpl
aaa
dec
inc
test
in
lea
clc
addr16
jecxz
pop
cmp
cmp
ret
adc
mov
movsl
and
lods
stc
xor
and
inc
fldt
in
subl
in
in
rol
pop
dec
sbb
test
cmp
mov
xchg
sbb
or
hlt
out
dec
cmp
adcb
fdivrp
popf
mov
xor
add
or
inc
insl
dec
andb
cmp
cli
outsb
arpl
fwait
scas
cmpsl
sbb
mul
icebp
lock
aam
imul
jno
in
cli
lds
pop
and
and
scas
popa
fidivrl
lahf
dec
movsl
mov
rclb
and
sub
js
gs
arpl
push
data16
ljmp
fisubl
add
mov
pop
mov
jecxz
shll
leave
sub
cli
mov
push
stos
cmpsb
mov
or
jne
dec
roll
xor
jp
sub
loopne
shlb
mov
mov
add
jl
sahf
loop
aad
leave
sar
add
outsl
add
lahf
xchg
ret
pop
and
push
aad
sbb
adc
pop
pop
jne
movsb
adc
int3
fistpll
inc
mov
mov
nop
xchg
xor
inc
stos
scas
pop
das
std
mov
xorb
or
sbb
jl
xchg
and
sub
add
pop
in
faddl
and
push
sbb
inc
lret
leave
sbb
sbb
in
in
xchg
jbe
push
mov
lcall
mov
pop
and
hlt
fcmovne
mov
jl
fidivrs
xchg
sub
push
shl
pop
inc
jecxz
or
pop
scas
int3
sbb
into
xor
dec
add
sub
repz
mov
jl
adc
dec
rcrb
push
dec
pushf
gs
adc
inc
xor
or
mov
inc
adc
gs
daa
lahf
fs
pop
dec
dec
lret
mov
dec
std
cmp
pop
call
sub
inc
daa
pusha
lods
pop
shl
pusha
cmp
pop
inc
xlat
fsub
sbb
inc
fists
sti
rolb
xor
pop
inc
adc
mov
sub
popa
test
mov
xchg
mov
inc
cmp
sbb
cmp
mov
dec
adc
or
nop
out
cli
in
repnz
dec
lea
mov
add
adc
icebp
loopne
test
xor
and
add
inc
pop
xor
insl
addr16
test
or
mov
es
fisubrl
sub
and
mov
test
fbstp
fwait
and
cmp
sbb
insb
cmp
and
mov
loope
out
fstpl
or
fidivrs
scas
dec
or
popf
imul
xorl
into
or
jb
xchg
pop
jno
dec
int3
scas
sub
les
fsubl
les
push
push
mov
fadds
in
jbe
and
xchg
or
add
mov
call
ja
call
das
aad
test
iret
sbbb
fcoml
fnop
pop
jecxz
dec
fdivs
leave
std
test
push
pop
iret
mov
cltd
fwait
es
cmp
push
sahf
adc
lret
push
xchg
cwtl
inc
imul
fnsave
and
mov
test
frstor
jmp
adc
sub
xchg
add
std
mov
out
loopne
mov
jnp
hlt
dec
flds
pop
cmp
push
movsl
aam
mov
hlt
ja
hlt
xor
mov
inc
and
xchg
loope
btr
xor
fsub
out
or
scas
cli
imull
repz
and
cmp
mov
ror
dec
ljmp
in
push
fisubrl
and
lods
aam
fadd
dec
icebp
decb
jo
adc
cmpsb
stos
aam
pop
adc
sub
sub
or
or
lds
add
mov
pop
lea
push
fistl
cmpsl
or
jmp
int
ss
sti
push
add
and
fs
icebp
push
dec
sub
push
push
jp
mov
sub
in
mov
mov
xchg
iret
sbb
ficoml
clc
stos
dec
sub
pushf
push
xchg
mov
js
daa
and
in
scas
addr16
sbb
pop
pop
mov
repz
jmp
inc
cltd
jl
aam
push
repnz
or
cmc
cmp
xchg
mov
pop
pop
in
lcall
lock
mov
xchg
xorl
push
sbb
xor
int
cmc
inc
sbb
mov
sbb
cwtl
orb
cld
xlat
jl
mov
sti
sti
lea
cmp
ror
sub
pusha
add
cmpsl
lds
add
xor
aas
paddusw
gs
aad
or
sub
lret
xchg
inc
adc
push
sbb
jg
in
xlat
dec
push
or
arpl
imul
mov
mov
into
negb
dec
aas
and
jmp
nop
fsts
les
cmp
pop
mov
jnp
subb
sub
imul
xchg
jp
aaa
lods
scas
lahf
cmpsb
shlb
mov
add
inc
aam
sub
cwtl
sarb
pushf
or
adc
aas
xor
jns
sar
sbb
add
iret
leave
js
test
pop
inc
jbe
andl
clc
imul
sub
inc
fst
cmpsb
mov
out
dec
jg
fsubs
out
stc
sub
aam
stc
enter
ljmp
ret
into
das
cmp
push
and
dec
jae
inc
add
test
loop
mov
es
fwait
add
imul
mov
xchg
scas
imul
or
ljmp
pop
test
sbb
sub
leave
inc
ret
scas
bound
cli
jg
imul
into
sub
jg
test
ds
ds
mov
dec
cmp
lds
mov
js
mov
cmpb
lods
push
xchg
mov
pop
imul
mov
stos
dec
sti
inc
imul
inc
xchg
pop
enter
xor
xor
arpl
cld
jnp
xchg
pop
push
cmp
mov
dec
add
test
out
or
xchg
push
lods
cmp
jb
nop
lock
and
mov
insl
jae
mov
jbe
scas
scas
mov
cltd
mov
dec
std
inc
mov
jg
popf
pop
ja
roll
mov
pop
pusha
out
cmp
or
dec
adc
pop
arpl
repnz
sub
push
in
pop
mov
js
rclb
cmp
mov
inc
xor
sub
mov
add
subb
fiaddl
mov
clc
push
aaa
add
aas
fcomps
in
sbb
in
or
lret
and
pop
pop
mov
loopne
jge
jge,pt
jb
mov
dec
mov
push
in
in
push
mov
hlt
inc
cmp
xchg
mov
adc
jle
add
loope
ljmp
cmp
mov
xlat
push
sub
mov
loopne
sbb
dec
scas
data16
xchg
data16
adc
imul
cld
sub
dec
dec
das
push
ror
push
js
jae
inc
mov
inc
scas
jns
mov
pusha
mov
outsl
or
dec
test
add
mov
int3
lret
loopne,pn
mov
jge
or
cmpsl
fistpll
jns
movsb
sub
jno
inc
mov
bound
sti
jns
adc
cltd
dec
ret
or
aas
mov
and
loope
sbb
push
dec
push
dec
mov
add
or
rolb
iret
stos
int3
cwtl
lds
rolb
add
mov
sbb
sar
ret
clc
outsl
das
scas
shll
es
pop
adc
xchg
jg
sbb
mov
xor
mov
push
pushl
xlat
ror
aam
in
push
cmp
lret
shl
sub
rcrb
fs
outsb
add
inc
sbb
jge
add
std
jmp
push
in
stos
mov
lret
jb
bound
mov
in
cmpsl
dec
push
pop
ret
mov
xchg
not
dec
or
pop
test
fistpl
fs
insl
rcrl
sbb
add
jge
and
fsubp
leave
push
mull
mov
lahf
mov
cld
cli
call
jno
mov
inc
data16
daa
lods
cmp
mov
outsl
sbb
xchg
push
jno
rcl
out
nop
out
sub
xchg
sbb
sbb
loope
das
inc
add
jnp
clc
dec
cltd
std
lret
ljmp
fs
push
int3
sbb
push
push
sbb
sbb
push
ucomiss
fs
dec
mov
pop
loopne
mov
ja
fsts
bnd
jl
lcall
leave
inc
sbb
cld
ss
in
cli
idiv
add
lock
out
cmp
out
mov
stos
lret
sbb
out
fs
pop
fwait
cwtl
mov
enter
xor
jecxz
mov
xchg
das
rolb
mov
scas
or
cltd
in
mov
lds
cmp
or
jnp
std
addr16
mov
rcll
loop
icebp
add
xchg
mov
push
jo
std
test
sbb
std
pop
push
stos
enter
bound
aam
push
outsl
pop
popf
adc
jnp
fisubrl
movsl
or
outsb
mov
mov
in
push
or
punpcklbw
jmp
imul
ret
inc
gs
push
movsl
pop
rcrb
lea
push
lcall
inc
out
lods
mov
popa
xchg
push
mov
sub
xchg
pop
xchg
fwait
push
loop
mov
mov
loopne
cltd
jae
cmpsb
fcomip
enter
adc
jbe
xlat
pusha
jne
je
cmovg
mov
add
fs
mov
adc
mov
push
rcrb
adc
inc
xchg
int
adc
inc
adc
adc
push
mov
push
push
mov
clc
xor
adc
push
leave
insl
mov
add
arpl
jmp
dec
lret
popf
lret
push
pop
mov
jecxz
mov
sbb
stos
push
mov
push
repnz
pop
popf
sub
push
iret
adc
mov
sahf
cmpb
mov
cli
xchg
fists
stos
xor
sbbb
orb
out
mov
hlt
mov
orl
mov
cld
lret
inc
out
mov
ret
sbb
and
adc
int
cmc
sub
jns
jl
sub
aaa
lcall
pop
es
shr
mov
rcr
push
fcmovne
push
mov
jg
sbb
out
jbe
push
leave
and
aas
mov
aaa
fwait
clc
sti
and
mov
push
push
push
and
hlt
jbe
mov
mov
roll
push
sub
out
dec
dec
dec
add
leave
sbb
pusha
and
jae
mov
mov
mov
test
jo
jl
dec
into
and
jg
cmp
push
ret
cwtl
adc
test
and
pop
cmp
ret
inc
jno
jle
cmp
ds
pop
sub
rorl
out
lret
mov
dec
pop
in
insl
or
mov
repz
lds
std
push
add
clc
jb
dec
test
xchg
mov
push
mov
loop
jnp
repnz
or
cmp
aas
insl
ja
jp
adc
fsts
push
js
fdivrs
cmp
ds
daa
or
sub
mov
jge
roll
cmp
shll
rorl
loop
popl
repnz
xchg
cmpsb
cwtl
inc
pusha
insb
and
cltd
mov
daa
stos
ficomps
test
icebp
push
mov
jmp
repnz
pop
dec
mov
xor
cwtl
das
popf
outsb
inc
inc
jp
sbb
shlb
mov
adc
sbb
push
pusha
ret
push
daa
lea
jae
jnp
jae
test
test
mov
sbb
lea
inc
and
jmp
sub
lret
sub
cmpsb
jns
cmp
inc
or
cmpsl
jo
inc
std
andl
xor
add
iret
adc
scas
out
fwait
push
push
pop
mov
data16
sbb
jnp
test
aam
xchg
pop
dec
push
pop
loope
into
out
das
scas
clc
sbb
jnp
popf
mov
xor
mov
ret
notb
ret
pop
sbb
push
or
int
adc
add
lods
pop
pop
scas
push
idivl
into
mov
out
test
aad
sub
mov
scas
push
mov
popa
ljmp
xor
adc
int3
mov
xchg
lods
jecxz
or
pop
and
std
in
xchg
into
or
inc
add
pop
jns
fidivl
sbb
ret
pusha
hlt
inc
or
mov
movsl
fsts
inc
jns
lret
pop
jns
fstp
mov
jbe
repnz
adc
cltd
shrl
cmc
popa
push
cltd
shl
mov
xor
in
fnstcw
flds
aam
add
mov
lock
inc
scas
popf
sahf
sti
test
mov
fcoms
jnp
pusha
jge
sbb
test
imul
nop
cmp
and
pop
into
movsl
or
scas
or
pop
inc
bound
iret
cmp
mov
test
insl
dec
xor
outsb
push
fisubl
dec
pop
adc
enter
popa
mov
lret
mov
xchg
lret
xor
sbb
or
iret
adc
mov
fcomi
jmp
movsl
lret
jp
out
fucomi
jl
mov
mov
lret
aad
push
adc
icebp
inc
jmp
lcall
xor
clc
leave
sahf
daa
mov
rcrb
jle
mov
xchg
pop
ds
inc
cli
dec
pop
mov
and
lret
jge
pop
mov
mov
push
ljmp
in
add
imul
jno
xlat
dec
mov
sbb
jecxz
in
xor
loop,pn
fwait
mov
jne
dec
insb
or
aas
test
jecxz
pushf
xchg
jle,pn
mov
push
loopne
and
mov
xchg
call
test
leave
into
adc
loope
shl
call
pop
pop
sbb
jp
fwait
lea
cmp
xor
fimuls
in
add
jl
insb
and
push
stos
in
sub
rcrl
push
cmp
sti
imul
lock
push
das
shll
lret
push
enter
iret
or
sub
sbb
fwait
pushf
mov
int3
lds
sub
outsb
mov
xor
aad
testb
jecxz
loopne,pn
sbb
cmp
jno
jns
cmp
out
cli
clc
xchg
mov
push
das
cmp
push
sbbb
jb
jne
scas
add
dec
inc
enter
add
dec
sbb
ljmp
std
push
xchg
mov
je
sbb
and
cvtps2pi
ss
ss
mov
cmp
jge
pop
dec
out
adc
xchg
sahf
or
or
mov
sarb
mov
jmp
cmpsb
pop
lods
bound
jle
mov
imul
js
mov
bswap
call
cmp
icebp
out
ja
in
mov
mov
mov
pop
jge
daa
dec
out
sahf
out
xchg
cmc
call
filds
mov
push
jg
cmp
rolb
je
addl
mov
xchg
leave
cmp
push
imul
mov
lea
inc
sub
sbb
push
hlt
jecxz
testl
push
popa
mov
mov
sub
adc
repnz
mov
xchg
or
or
roll
loope
push
mov
mov
push
inc
push
mov
jno
cmp
pop
cmp
and
in
mov
push
mov
pushf
test
mov
in
pop
cld
rclb
jae
out
mov
xor
jecxz
mov
adc
cmp
sahf
sbb
push
xchg
sahf
xor
mov
testb
in
mov
imul
or
dec
sahf
shll
ja
loop
out
stc
sub
out
adc
or
mov
fs
and
adc
push
clc
sbb
out
xchg
push
in
lahf
mov
jne
enter
cmp
lock
and
aaa
push
mov
mov
inc
push
dec
push
dec
fnstsw
jecxz
dec
fmuls
ret
enter
inc
test
sbb
and
sub
xchg
scas
ds
cli
fiadds
inc
xchg
mov
imul
movsl
pop
arpl
ljmp
fwait
mulb
fisubl
cltd
test
and
lods
icebp
mov
in
or
out
push
movsb
mov
mov
cs
subl
imul
lea
into
dec
bound
jns
call
jns
adc
add
cmp
bnd
xchg
push
into
icebp
rcr
jb
test
bound
push
sub
dec
xor
pop
dec
adc
cs
push
ret
jecxz
fstps
test
movsb
and
cmp
mov
dec
xor
xor
pop
pop
push
pop
jb
jl
movsb
mov
and
xor
mov
fidivrs
and
cmpsb
out
xor
sti
mov
int
mov
xchg
out
and
imul
push
push
std
sub
inc
and
pop
clc
call
add
add
loop
repz
scas
sub
das
adc
jle
mov
cmpb
aam
adc
mov
push
lea
pusha
xchg
or
jb
cmp
push
xlat
fucomp
insb
or
add
cltd
mov
push
mov
inc
iret
int
sbb
stos
add
out
les
daa
ret
fbstp
lahf
cld
xchg
dec
lods
jns
adc
cs
popa
dec
adc
adc
stos
add
in
xchg
mov
popa
bound
pop
jae
vpmaxsw
adc
jp
imul
scas
stos
mov
xlat
test
imul
mov
mov
xchg
daa
sub
into
out
push
xchg
aam
in
sub
mov
aad
xchg
sbbl
jb
rclb
aad
rcrl
out
xor
test
je
jl
aas
xlat
inc
push
cmpsb
dec
sbb
jecxz
loope
mov
aam
adcl
adc
mov
and
and
ljmp
scas
sbb
mov
pop
popf
dec
out
sub
ss
pop
mov
dec
xchg
repnz
mov
and
mov
jle
mov
adc
aas
inc
outsl
sbb
jno
lahf
sbb
dec
cmp
mov
je
inc
add
fwait
inc
mov
inc
aas
divb
mov
sbb
cmp
jbe
es
push
cwtl
mov
daa
xchg
cmc
push
cmp
jecxz
lods
add
cmp
stc
repnz
lret
sti
sub
pop
jmp
adc
stos
cld
mull
lahf
bound
and
jno
imul
and
pop
int
inc
inc
jg
test
dec
orb
fwait
and
imul
outsl
aas
loop
lcall
jne
loope
int
or
add
xorb
mov
frstor
and
pusha
pusha
data16
aaa
jp
aas
outsl
cmpl
int3
lds
imulb
mov
sahf
mov
xlat
push
mov
and
test
jecxz
push
mov
lock
cli
in
imul
or
in
xchg
mov
sbbl
and
and
inc
and
sti
pop
cmpsb
into
inc
mov
cmc
shl
aad
dec
iret
push
adc
out
bound
jmp
int3
hlt
sub
mov
lcall
jnp
sub
lock
pop
loopne
cmp
insl
ss
jge
ret
inc
xchg
sbb
push
and
in
enter
pop
inc
mov
ret
cs
daa
dec
leave
jmp
xchg
pop
sbb
push
pop
dec
pop
jae
cmpl
pop
movsl
push
dec
pop
jno
xor
mov
cmp
cmp
ljmp
mov
mov
and
inc
jge
lret
push
out
nop
pop
adc
inc
mov
xchg
xchg
fildll
or
cmpl
fnstenv
incb
inc
cmp
push
lods
sbb
add
ss
push
jno
daa
imul
mov
in
xor
add
es
sbb
clc
sub
in
add
mov
dec
nop
xchg
test
and
das
push
adc
int3
and
out
jmp
add
sbb
imul
inc
into
out
cmp
jecxz
inc
mov
divb
push
fidivl
lds
and
or
pop
scas
sub
fdivs
xchg
out
arpl
mov
jg
in
test
hlt
mov
inc
leave
jae
jmp
icebp
out
mov
cwtl
mov
mov
je
gs
rorl
mov
loopne
jb
sub
les
addr16
rcrb
scas
push
inc
je
sbb
push
fiadds
sbb
sub
jnp
cmc
add
push
inc
sub
aad
ljmp
data16
mov
jo
cmpsl
mov
fwait
test
iret
fcoms
or
mov
mov
rcrl
ljmp
and
daa
push
jp
or
pop
jnp
push
jl
cmp
mull
add
test
in
stos
xchg
and
cmp
jp
mov
push
mov
dec
icebp
and
insl
jo
aad
inc
in
not
stc
loopne
and
push
cmpsb
je
sub
rcl
inc
pop
adc
dec
mov
pop
pop
addl
popl
in
push
cli
jbe
or
xlat
mov
mov
jmp
repnz
int
daa
cmpsb
int
jae
mov
enter
adc
pop
push
xchg
push
int3
enter
pusha
mov
out
cs
adc
das
cmp
xchg
pushl
insl
imul
data16
pop
les
push
adc
dec
pop
mov
dec
and
lods
mov
mov
bound
xchg
sbb
inc
and
dec
dec
pushw
ret
jno
xchg
cli
mov
cld
adc
mov
sbb
loop
mov
aaa
das
outsb
mov
sarl
cmp
outsl
adc
notl
leave
mov
mulb
push
dec
push
fisubl
sarb
ljmp
push
nop
shll
enter
in
popa
sub
mov
mull
mov
movsl
into
adc
shll
ret
js
xchg
mov
cli
insl
shlb
mov
sub
ljmp
arpl
movsl
jp
inc
sbb
mov
pop
lret
fwait
sub
adc
and
dec
mov
xor
or
pop
sbb
add
add
jp
call
lock
call
andb
jb
push
add
adc
pusha
jmp
sub
mov
dec
mov
adc
mov
test
xchg
sti
lret
pop
inc
leave
enter
jbe
adc
pop
mov
ljmp
pop
shufps
dec
mov
xchg
loop
jnp
xchg
aad
ljmp
adc
jb
out
movsl
xlat
inc
or
stos
mov
stc
cmc
in
mov
add
loopne
pop
adcb
mov
add
dec
mov
mov
fstps
push
nop
stos
insl
jp
ljmp
popa
cmp
lods
mov
insl
and
pop
or
enter
cmp
mov
and
adc
les
mov
cmpb
lret
loop
pop
insl
cmp
mov
clc
mov
lock
and
mov
pop
xchg
iret
fstpl
int
xor
sub
js
test
cmp
cmp
ja
inc
mov
jns
jne
mov
xchg
sbb
mov
inc
lds
add
mov
cmpsb
pminsw
ljmp
movsb
adc
mov
push
or
out
fsub
pop
loopne
xchg
jecxz
or
loop
test
or
cmovle
fcompl
mov
rep
mov
cmpsb
jnp
sbb
cwtl
push
mov
pop
mov
xor
subb
add
jno
les
or
cs
cmp
inc
sub
out
xor
dec
loopne
or
jmp
ret
push
xor
adc
dec
out
outsl
xchg
cmp
lret
pop
shlb
push
ss
push
fsubl
aam
or
pop
xchg
mov
xor
in
gs
push
imul
dec
pop
jmp
cltd
or
or
sub
inc
loope
inc
test
or
repz
sub
ret
sub
jp
mov
or
mov
stc
nop
lret
inc
cmp
popl
fcmovnu
cwtl
addl
pusha
push
mov
movsl
test
les
pop
leave
dec
cmpsl
leave
inc
popa
push
je
insb
aas
push
mov
xor
addr16
notl
je
dec
jge
push
xchg
imull
mov
dec
xor
popa
mov
inc
push
mov
lahf
push
cwtl
sbb
ret
testl
in
mov
shl
adc
movsl
icebp
xchg
xlat
and
fcomip
ljmp
pop
mov
ss
pushf
scas
or
jge
sti
mull
rcl
mov
inc
out
add
push
sub
sub
mov
xor
addl
lods
jns
cmpb
pop
jge
stos
adcb
icebp
sbb
out
or
mov
xchg
in
stos
jle
cmp
mov
in
jmp
repz
dec
and
in
xchg
xchg
enter
inc
mov
loope
lcall
leave
stc
les
sbb
rolb
jne
adc
sti
testb
jb
sbb
bound
stc
add
lret
rolb
jns
push
pop
stc
dec
psrlw
push
shll
cli
mov
aam
into
fisttps
cli
mov
in
mov
aam
das
stc
add
sub
fiadds
dec
mov
andb
int3
jae
add
int3
jmp
test
or
sbb
mov
stc
rcr
xor
jo
scas
repz
push
xchg
jnp
or
adc
mov
inc
daa
incl
cmpsl
xor
stos
rcrl
xchg
out
cli
push
mov
sub
inc
lcall
icebp
loop
outsl
mov
aas
imull
ja
mov
and
sub
popf
push
aam
xor
sub
fldpi
roll
xchg
sbb
rorb
push
jl
push
mov
dec
out
jg
sub
pop
pop
idiv
fwait
lret
fsts
test
bound
add
mov
or
ret
xor
fiaddl
repz
loopne
adcl
sub
popa
inc
xor
push
loopne
outsb
push
mov
dec
jl
cmpsb
call
pop
rep
loope
cmp
lock
ror
mov
lret
mov
sub
addr16
or
jno
stos
xorl
and
jnp
psrad
add
cmp
mov
pop
repnz
push
arpl
out
and
movntq
out
adc
push
shl
mov
jbe
sub
mov
repnz
pop
stos
xchg
pop
push
and
add
nop
cld
stos
jmp
push
mov
push
jmp
shll
xor
mov
and
add
sahf
inc
dec
mov
mov
sahf
lret
sub
and
xchg
nop
andb
lods
js
jge
pop
les
imul
and
push
or
mov
inc
sub
es
xorl
dec
jnp
jecxz
aad
ja
inc
lods
pop
fisttpll
dec
aam
int
xchg
xor
sbb
push
or
scas
lret
in
add
inc
cltd
push
fimull
xchg
scas
jmp
push
andl
mov
xchg
inc
les
je
jp
in
test
dec
inc
dec
insb
add
xor
jecxz
bound
inc
lods
sbbb
scas
adc
jle
lret
mov
insl
inc
and
dec
ror
xorl
sarl
outsl
sub
mov
jle
mov
jnp
xor
sarl
jl
call
sub
jne
test
xlat
sbb
or
rolb
mov
sub
insl
shrb
mov
lcall
scas
xchg
bound
xor
adc
pop
mov
cld
in
repz
push
inc
loop
inc
lea
mov
sbb
lret
xor
sbb
bound
dec
nop
stos
adc
sub
mov
dec
mov
push
dec
ljmp
adc
sarl
or
pop
add
mov
add
sbb
fildll
lods
enter
std
mov
movsw
testb
bnd
lods
daa
sbb
pop
scas
mov
lea
jg
and
pop
orb
addr16
aad
sub
mov
rol
in
inc
daa
les
or
xor
out
push
jmp
sub
in
icebp
and
push
cld
cli
rcll
push
dec
sbb
aam
test
add
mov
lcall
inc
pushf
add
sbb
mov
dec
sub
xor
imul
and
dec
xchg
dec
mov
daa
in
jns
adc
lock
jl
js
push
incb
insb
and
cmc
sbb
data16
push
push
cmpsb
call
jg
pop
daa
jbe
shl
mov
insb
push
push
fstps
pusha
ror
xchg
xchg
aas
xor
scas
iret
movsb
iret
inc
out
ret
xchg
fldenv
bound
sbb
adc
repnz
ret
pusha
outsl
sbb
hlt
xchg
je
and
mov
les
or
adc
xchg
shll
std
arpl
imul
sbb
shll
xchg
mov
rorl
jmp
add
ss
push
jae
outsb
inc
cmp
adc
ror
das
sbb
mov
cmp
clc
jno
add
push
jecxz
call
fsubrl
dec
fadds
dec
stc
mov
sub
in
lret
xchg
xorb
int3
cltd
nop
insb
dec
notb
mov
jmp
cmp
hlt
lret
mov
pusha
add
ljmp
jb
cwtl
inc
mov
sbb
or
iret
repz
aas
adc
pop
test
orl
push
mov
dec
pusha
lock
enter
sahf
flds
aaa
mov
push
ljmp
adc
add
push
mov
lret
push
scas
in
pop
push
xor
iret
and
xor
sbb
or
in
push
es
sbb
or
aaa
xor
dec
rcll
mov
shl
loop
adc
stc
xchg
insl
popf
test
sbb
scas
push
and
push
cld
mov
push
xchg
adc
pop
enter
ret
test
xchg
xchg
mov
push
popf
imul
lret
std
in
jne
push
sbb
mov
ja
push
dec
loopne
mov
add
mov
and
enter
orb
movsl
inc
sbb
nop
xor
ljmp
mov
add
std
jb
pop
adc
pop
pushf
push
enter
int3
xor
xchg
fldl2t
sub
pop
or
jnp
inc
mov
lds
dec
aad
mov
loopne
and
or
scas
push
cmovs
jecxz
imul
dec
jnp
xchg
xor
or
sbb
insl
push
pop
mov
ljmp
cltd
cmc
aam
xorl
roll
dec
mov
aad
xchg
loop
inc
repnz
inc
aad
push
test
mov
adc
pop
mov
cmc
push
rcr
mov
or
adc
out
in
ret
addr16
in
sbb
stos
nop
fsubrs
divl
xchg
sub
push
add
pop
jge
popa
loop
cmp
cwtl
hlt
push
fistps
dec
cltd
sbb
repnz
pop
jb
dec
fcmovne
sbb
imull
sbbl
std
pop
adcb
xlat
push
jl
in
pusha
ss
int
jl
in
and
movsb
rcrb
cli
test
mov
or
popl
inc
cltd
mov
lods
and
mov
ja
mov
cmpsb
or
or
mov
sbb
test
pop
out
aad
mov
sbb
add
imul
mov
lahf
mov
mov
rcrl
jbe
sbb
fnstcw
mov
shll
sub
cmpsl
inc
in
or
insb
or
pop
push
add
pop
lea
pop
enter
pop
sar
stos
in
push
cmpsb
ficoml
aas
sarl
jo
dec
cwtl
cltd
sbb
and
adc
popf
mov
cmp
lret
inc
insl
cmp
inc
jge
fsubl
out
jnp
imul
leave
dec
lods
call
jns
js
mov
jmp
and
add
xchg
addl
pushf
pop
scas
mov
scas
xor
cli
mov
add
adc
cmp
xor
and
mov
pop
ficoms
jo
fcomip
xor
jo
int
sub
mov
jno
stos
and
gs
fcom
test
xor
sbb
stos
adc
add
aad
sbb
insb
jmp
inc
fwait
inc
cmp
enter
pop
adc
adc
mov
mov
xor
xchg
jbe
mov
jnp
movsb
mov
push
mov
or
mov
fsubl
cmpsb
stos
adc
mov
mov
shlb
mov
jb
sti
sbb
sbb
push
adc
lds
int3
lods
pop
adc
sbb
dec
inc
std
or
scas
jb
xlat
cmp
imul
xorl
aaa
fidivs
lock
cld
repnz
and
lcall
test
cmp
loop
test
dec
lods
pop
and
add
dec
sub
or
fcmovnb
shl
jmp
jmp
lea
mov
ret
xchg
scas
rolb
dec
gs
in
out
leave
and
lret
or
sti
inc
adc
add
cmp
out
mov
subps
jb
lret
dec
lock
scas
jo
popf
sub
jmp
or
or
stos
mov
xchg
mov
xor
repz
rorb
cmp
imul
ljmp
cmp
jbe
jb
vpmacsdd
sub
adc
das
ds
jo
mov
es
aas
lahf
or
in
ljmp
lret
hlt
insb
mov
mov
out
stos
pop
sbb
pop
push
arpl
dec
add
push
inc
add
dec
or
stc
mov
pop
dec
das
out
out
xchg
in
mov
shr
insl
and
xlat
pop
lods
dec
adcl
aad
repz
or
cmpl
add
cmp
push
pusha
test
or
or
lds
out
dec
popa
pop
push
out
testl
sti
stos
push
cmp
data16
mov
out
xchg
mov
stos
jl
subb
fucomip
shlb
xor
mov
pop
lret
sti
out
inc
xchg
pop
pop
sub
pop
mov
and
inc
cli
inc
xchg
test
xchg
adc
mov
nop
in
xchg
loop
repz
pop
mov
test
push
add
pop
fucomip
sub
mov
mov
je
xor
xor
mov
inc
sbb
mov
mov
bound
mov
push
cmc
sub
cmc
pop
mov
and
dec
mov
jb
adc
pop
lahf
push
stc
pop
aam
inc
movsl
das
gs
into
dec
out
push
adc
adc
aaa
bound
and
orb
jne
pop
inc
dec
dec
hlt
sbb
mov
push
xor
mov
inc
inc
loopne
dec
push
inc
mov
jo
sub
fucomip
lods
adc
loop
aas
daa
addr16
mov
dec
jo
outsb
xchg
outsl
xchg
xlat
stc
subl
mov
bound
rorb
inc
leave
xor
xchg
sbb
cwtl
lock
movsl
add
loopne
ret
pop
rorb
push
cli
lods
push
popf
jecxz
lret
faddl
int
lahf
adc
and
xchg
sbb
cli
insl
cwtl
sbb
fcoml
lcall
imul
jp
pop
jle
jno
or
pop
jp
mov
fucom
stc
stc
xor
mov
outsl
mov
and
ja
scas
sub
inc
pop
cmp
sub
repz
add
popf
xor
cli
mov
push
inc
stos
sbb
mov
fnsave
dec
jo
sbb
fbstp
push
pop
loop
test
dec
push
mov
cmp
outsl
xchg
jecxz
add
sbb
pop
xchg
aad
cmp
add
nop
mov
mov
outsb
pop
push
or
jbe
jb
sub
das
push
push
sbb
mov
push
lret
cmp
pop
insb
dec
call
mov
sub
call
fs
lock
je
rol
and
dec
mov
daa
mov
dec
andnps
pop
mov
ss
popa
popa
push
popa
add
icebp
sbb
stos
add
xchg
push
aaa
lds
pop
loopne
add
add
adc
out
mov
mov
or
push
fistpl
xor
les
in
out
jo
or
add
jp
jae
jno
dec
adc
xor
xchg
test
cmp
pusha
mov
ficoms
hlt
mov
cmp
pop
mov
icebp
js
jne
icebp
jge
outsb
fildl
aaa
adc
in
stos
xlat
stos
scas
push
je
leave
mov
mov
pop
or
and
je
movsl
inc
add
je
mov
mov
xchg
fmuls
pop
arpl
test
mov
mov
push
movsl
xor
movsl
subb
repnz
aas
sub
sarb
fdivrs
xchg
cmpb
mov
out
insl
pop
negb
and
aam
data16
sti
mov
jns
mov
sarb
cmp
test
cmpsb
add
xor
inc
cwtl
inc
icebp
inc
in
jmp
js
aad
popa
push
xchg
mov
xlat
stos
cmp
add
xchg
adc
xor
push
xor
sub
ret
sbb
cli
push
pop
or
pop
ror
add
mov
xchg
pop
inc
add
adc
imul
pop
wrmsr
pop
cltd
and
rcrl
lret
jo
push
and
scas
and
enter
lcall
xor
jne
gs
sbb
pop
jle
ja
dec
pop
push
xchg
dec
sbb
add
std
mov
cmp
xchg
and
xlat
push
hlt
jns
add
jle
push
stc
sbb
insb
pop
push
ret
lods
mov
pop
pop
dec
xor
enter
mov
inc
test
into
mov
lods
push
aad
cmp
movsb
dec
pop
sub
jmp
int
or
xorb
jl
xchg
cmp
movsb
adc
cmp
mov
xor
lods
mov
movb
loop
rclb
out
nop
dec
adcb
sarl
sbb
lcall
outsl
xlat
sub
jmp
into
hlt
test
aaa
dec
pop
in
les
lahf
pop
sub
xor
das
xchg
and
fdivrp
adc
nop
mov
nop
fimull
jns
add
xor
mov
adc
cmpsb
je
xchg
pusha
fwait
mov
sub
xchg
mov
push
add
test
mov
and
push
adc
adc
inc
dec
push
daa
xchg
push
and
push
jl
fiaddl
mov
test
addl
push
stos
sbbl
mov
add
xor
outsb
sbbb
push
cmp
repz
movsb
lods
jmp
add
mov
dec
test
mov
pop
cmp
cmp
jnp
xor
out
out
xor
jbe
ljmp
or
inc
imulb
mov
mov
and
pop
sbb
int
mov
pop
xchg
inc
cmp
lods
and
shll
imul
mov
mov
mov
add
or
enter
add
mov
xchg
cmp
mov
xchg
outsb
and
xchg
sbb
add
out
ret
repz
dec
push
fnsave
aam
cmp
cltd
call
andl
popf
or
or
mov
pop
aad
add
loop
mov
or
dec
sbbl
mov
mov
cmp
fsubrs
cmpb
adc
lock
xchg
and
cwtl
and
mov
cmp
les
sub
test
ja
push
dec
leave
testl
mov
int
rolb
xchg
out
push
push
addr16
int
fistpl
lds
or
pop
pop
cltd
jp
cmc
fldenv
call
shl
pop
sub
fsub
push
test
stos
outsl
or
ljmp
jno
inc
gs
mov
mov
jmp
xchg
ficompl
lods
pop
cmp
fwait
jg
in
lods
fucomp
dec
mov
stc
jg
in
lret
jnp
pop
scas
mov
add
push
rclb
mov
and
aad
out
sub
lods
push
push
add
into
loopne
pop
jg
add
mov
inc
push
jge
pop
xor
mov
pop
xor
pop
out
xchg
cmp
and
xor
push
mov
popa
mov
test
in
jp
add
scas
push
xlat
sub
mov
sbb
push
push
mov
pop
imul
loopne
push
pushf
jge
mov
mov
mov
xor
sub
icebp
mov
cwtl
arpl
mov
mov
out
cmpsl
mov
push
sub
ret
je
faddl
mov
mov
movsl
popf
mov
cwtl
pushf
push
js
mov
sarb
sbb
ret
sbb
adc
and
dec
fs
xor
andl
neg
sbb
xchg
add
lock
sbb
or
sub
cld
add
test
sbb
aaa
clc
std
cmp
adcb
cwtl
lods
dec
movsl
mov
std
adc
lahf
jb
push
es
push
ja
cmp
mov
push
cmc
ljmp
pop
mov
mull
push
pop
adc
bound
addl
mov
test
aaa
out
lahf
les
mov
and
add
leave
jecxz
sub
mov
fnsave
cltd
jle
sbb
fisubs
add
pop
sub
jge
fs
iret
pop
loope
xchg
or
imul
loope
and
cmp
push
sub
cmp
testb
aaa
jne
jl
dec
clc
popa
pop
sti
jg
jmp
ret
xor
jbe
and
bound
test
and
pop
xchg
arpl
jb
sbb
jne
cmc
scas
add
push
test
cmp
lods
xchg
stos
dec
adc
mov
jnp
push
addl
out
and
or
inc
ffreep
inc
dec
push
fistpl
cmp
movl
jl
mov
enter
cmp
ss
pushf
add
mov
leave
rcll
mov
dec
rcll
mov
pop
mov
cmp
add
add
push
sbb
dec
jl
push
outsb
testl
stos
sbb
dec
cmp
fwait
push
push
out
and
mov
sti
fisubrs
adc
call
mov
inc
push
sti
in
cmpsb
int3
mov
xchg
or
out
movsb
jb
adc
pop
icebp
adc
inc
scas
enter
xor
xchg
add
arpl
sbb
sub
loopne
push
inc
and
fidivs
repz
out
sbbl
or
int
jnp
jb
pusha
or
inc
frstor
inc
movsb
push
mov
lods
nop
outsl
sub
daa
out
shl
adc
pop
and
xor
outsb
jns
push
je
cmp
push
lock
jbe
int
sbb
inc
in
mov
mov
stos
or
stos
dec
cmp
stos
mov
mov
jmp
cmpb
dec
nop
loop
data16
ficomps
xlat
out
ret
ja
outsb
into
dec
pop
mov
lods
push
rcrb
push
mov
and
enter
jg
and
and
cmpsl
mov
adc
idivl
mov
test
xor
fisubrs
mov
inc
rcrl
sub
loope
pop
aaa
sti
cmp
test
roll
loop
imul
loop
inc
push
lret
jo
sti
cmp
push
dec
loopne
sub
testb
cld
push
ret
sbb
jns
je
xchg
and
jle
jnp
push
push
addr16
mov
popa
adc
negl
cmp
push
mov
dec
jg
jle
xor
fdivrl
xchg
lret
push
mov
outsl
test
mov
imul
shlb
cmp
push
mov
insb
jle
sbb
adc
aas
addr16
clc
or
jp
jp
js
xchg
mov
ret
adc
icebp
mov
xorl
jb
sbb
push
sub
pop
sub
std
sub
xchg
xchg
bound
sbb
dec
fistps
das
pop
out
push
fdivr
cmc
aad
dec
add
enter
rcll
repnz
jne
push
pop
cmp
push
cmp
xor
pmullw
xchg
jmp
data16
jbe
lds
add
pop
imul
sub
lahf
mov
mov
xchg
lock
aas
movsb
data16
fadds
cld
mov
and
inc
jne
pop
mov
out
and
in
out
movsb
mov
pop
and
nop
clc
scas
pop
fildl
cmp
adc
or
mov
test
data16
jnp
adc
xlat
xor
ss
jp
xor
sub
push
push
add
stc
scas
dec
rorb
fsubrp
and
fbld
add
imul
add
aam
jno
lds
or
pop
lcall
out
cmpsb
mov
enter
imul
pop
imul
mov
lds
sub
jo
pop
pop
repz
aam
negb
sti
cmp
cmp
rolb
stos
pushf
out
inc
xchg
lcall
test
aad
push
sar
pop
sub
fdivrl
adc
jne
xchg
or
push
push
mov
mov
push
ret
mov
pop
push
dec
push
insl
mov
cs
vsqrtpd
and
push
xor
stos
arpl
inc
and
mov
sahf
in
sarl
pop
inc
push
loope
ret
mov
mov
insl
sbb
cmp
or
cmp
sti
mov
sub
hlt
daa
push
pop
enter
mov
sbbl
pop
jl
mov
mov
or
mov
testb
pop
dec
xor
mov
push
shrl
and
sbb
or
popa
aad
jecxz
xor
mov
dec
test
jb
push
mov
dec
push
mull
jns
inc
sbb
cld
aam
cmpsl
and
or
cld
lret
fnstcw
inc
loopne
insb
dec
jl
out
andl
mov
adc
jl
sbb
daa
inc
add
jp
jg
test
jne
xor
jnp
mov
fcoms
push
sub
mov
jle
xchg
jns
sbb
or
cmp
fistl
das
repz
aad
daa
lds
out
xor
mov
cmpsb
lods
fstpl
imul
cmp
fisttpll
jnp
cmp
or
sub
sarb
subl
adc
sbb
xor
inc
add
lods
sbb
rcrb
lcall
in
jnp
adc
cmpsb
lcall
add
addr16
add
imul
xchg
fcomp
outsl
jno
scas
xor
push
jmp
push
and
mov
fidivs
inc
xchg
push
dec
push
cmp
mov
ss
mov
pushf
xor
cmp
and
push
fdivrl
arpl
adc
mov
int3
sbb
out
xor
mov
int
aad
cmp
movsb
push
sbb
sbb
enter
test
mov
sbb
imul
jecxz
add
xchg
shrb
dec
insl
xchg
jmp
repz
ljmp
or
mov
pushf
call
jl
repz
inc
ja
sti
shrl
inc
out
std
cli
int3
rcrl
lcall
ficoms
jecxz
dec
test
sub
inc
enter
int3
int
aas
push
int
sbbl
add
adc
xchg
adc
push
pop
hlt
test
push
push
pop
pop
cwtl
jae
push
or
adc
mov
jne
pop
push
pop
imulb
xor
and
cmp
adc
pop
sbb
out
out
xchg
daa
sub
lret
mov
inc
push
iret
aaa
xor
sar
shlb
dec
daa
xchg
outsl
inc
xor
test
mov
sub
sub
mov
mov
repnz
dec
mov
xlat
pop
add
ret
push
pusha
lea
sub
xor
int
adc
aad
xor
fisttpll
dec
movsb
jno
sbb
int
jl
pop
jne
xchg
dec
xor
pcmpgtd
sbb
stos
push
pusha
dec
cwtl
mov
jno
xchg
cli
or
push
jg
ljmp
loope
or
push
fiaddl
dec
xor
mov
fadds
sbbb
cmpsb
imul
test
loope
inc
dec
mov
sar
or
stos
mov
mov
cld
je
adc
les
pop
xchg
scas
jno
dec
sub
mov
shl
mov
cmp
sbb
mov
xor
jo
fists
jle
das
int
arpl
int3
or
jg
loop
adc
and
and
pop
ret
xchg
lock
pushf
loopne
adc
xchg
adc
dec
xchg
push
call
mov
bound
jnp
push
call
data16
jl
mov
fimull
idivb
xchg
dec
or
pop
into
lahf
shlb
dec
sub
push
xor
movsb
notl
sbb
adc
jne
ret
mov
cs
je
xchg
stos
jno
xchg
sbb
sti
rcr
mov
loop
inc
addb
add
lret
rcrb
call
jg
arpl
jno
xchg
or
into
ja
sbb
adc
jp
and
mov
es
pop
or
rol
pop
push
xlat
sbb
cmpsb
movsb
jg
pop
hlt
sbb
add
mov
xor
test
cmp
into
cmp
add
xchg
mov
pop
push
gs
icebp
adc
mov
cmp
subb
or
negb
mov
cmp
lahf
push
out
pop
inc
push
adc
ret
mov
sbb
mov
dec
insl
outsl
xor
mov
shll
lock
ret
in
outsl
imul
mov
fisttps
cmpsb
pop
mov
lea
pop
jle
imul
and
and
jmp
pop
call
dec
movsb
arpl
jmp
lds
aas
sbb
arpl
sub
test
cltd
rorb
pop
shlb
jno
aas
int3
mov
xchg
xchg
mov
inc
mov
mov
xor
insb
or
mov
mov
ljmp
add
sub
adc
in
dec
loopne
add
shll
movsb
ja
mov
dec
out
mov
out
inc
aas
test
sbb
in
mov
addr16
pop
inc
push
scas
arpl
jmp
pop
xchg
aam
pop
arpl
mov
lret
and
pop
gs
cmc
repz
inc
inc
add
das
loop
cmp
addr16
or
mov
dec
jnp
test
test
cli
mov
cld
and
push
xchg
test
sub
enter
xchg
pop
shl
xor
movsb
ljmp
push
xchg
imul
jns
xor
hlt
call
cld
push
aaa
leave
adc
pop
sarb
jb
cld
insb
adc
or
mov
nop
mov
xor
iret
popa
ljmp
cwtl
add
fiaddl
cmp
in
imul
aas
sbb
cmpsl
insb
add
mov
into
or
mov
lahf
inc
loope
stos
mov
in
push
addr16
inc
fistps
inc
dec
dec
stc
test
jg
fcmovb
add
push
enter
inc
imul
cmpsl
dec
daa
sbb
cmpsb
xor
xchg
jge
cmp
lods
mov
lods
das
sbb
test
dec
js
or
xor
xor
pop
dec
pushf
fs
cltd
stos
loopne
mov
rolb
pusha
or
dec
bound
mov
subb
test
mov
popf
cmpsl
jae
arpl
sbb
rclb
jo
testb
add
rdmsr
xchg
in
inc
sub
int
lods
adc
out
lods
rorl
dec
mov
mov
dec
mov
loop
adcb
xchg
aad
or
mov
je
insl
adc
ljmp
xchg
add
lcall
les
add
fiadds
sub
push
mov
adc
pop
js
gs
xchg
cmp
mov
cmp
sarl
sti
or
jmp
arpl
pop
xor
xchg
push
cmc
mov
and
out
mov
xchg
cs
jbe
ret
fdivr
js
xchg
mov
mov
mov
hlt
and
jne
adcb
mov
popf
pop
lcall
in
cmc
mov
jle
adc
negl
pextrw
push
je
cmpsb
sbb
je
rclb
dec
repz
ja
and
scas
and
ljmp
mov
cmp
fisttpll
sti
ss
mov
jmp
bound
aad
outsb
lret
mul
cld
cwtl
jo
mov
orl
out
jae
xchg
sbb
stc
adc
fnstenv
sub
fmuls
mov
jno
inc
mov
or
test
pushf
pop
testb
cs
add
and
inc
mov
cltd
in
push
xchg
adc
movsl
sahf
add
aaa
add
stc
jnp
aaa
and
xor
jp
imul
pop
loopne
xor
jg
out
jmp
loop
stc
fcmovbe
add
add
push
add
add
xor
xor
add
pusha
add
adc
add
iret
cmp
cmp
cmp
cmp
cmp
add
add
mov
hlt
sbb
adc
sub
mov
dec
xchg
add
dec
rcll
sub
test
mov
dec
mov
loop
popf
xchg
hlt
pop
mov
sti
cli
popa
mov
loop
mov
fildl
add
jp
push
sbb
js
inc
pop
arpl
fidivrs
mov
xchg
mov
movsl
or
jae
push
movl
and
aad
cmp
js
push
scas
cmp
enter
fisubrl
arpl
jns
cmp
fimuls
mov
mov
mov
and
stc
pop
into
dec
push
push
pop
fisttpl
sub
or
lahf
imul
jecxz
mov
sub
pop
ficoms
and
dec
mov
les
hlt
std
scas
out
test
cmp
mov
inc
jb
jle
and
fwait
add
jge
push
jp
jg
call
dec
dec
inc
push
mov
jmp
call
cmp
mov
xchg
aas
aas
lahf
fdivr
int3
adc
rorl
inc
mov
xor
xchg
mov
pushf
mov
clc
dec
mov
xor
icebp
movsb
and
jle
mov
inc
shlb
mov
and
ljmp
jp
lods
dec
pop
cmpsb
or
jb
ret
mov
in
jle
cld
adc
std
into
push
cmpsb
mov
push
push
cmp
mov
dec
adc
and
cmp
mul
clc
sbb
push
in
stc
cmp
jge
sbb
scas
sub
xor
mov
xchg
mov
dec
mov
imul
icebp
and
lret
pop
addb
and
xor
lea
adc
xchg
cmp
out
imul
cli
dec
xor
xchg
rcll
mov
cltd
pop
mov
and
sub
negb
sbb
inc
xor
sbb
rcrl
fwait
push
divb
dec
out
stos
in
sbb
mov
mov
jmp
cld
mov
xchg
stc
cmpsl
lcallw
fldl
cmpsl
in
ffree
sub
cmc
sub
lods
or
gs
mov
inc
out
cld
clc
mov
lahf
testb
ljmp
fstl
sbb
push
fwait
movsb
push
lret
cli
mov
out
aaa
jp
adc
repnz
push
cmp
test
arpl
out
into
out
push
mov
cmc
filds
add
fmul
jecxz
and
cmp
out
push
fidivs
cmp
out
adcl
push
jnp
movsl
inc
loope
jecxz
xor
pop
out
sahf
fsubrl
arpl
or
push
or
mov
sub
xor
lahf
fisttpll
andl
cwtl
test
mov
dec
ret
fldenv
out
inc
xor
clc
mov
test
bound
or
fcoml
jmp
pusha
jp
loope
cmp
pusha
cmp
cmp
in
mull
cltd
loope
lea
ss
inc
add
ljmp
icebp
sbb
insb
scas
imul
int
cs
ret
cwtl
lea
das
pop
mov
or
mov
mov
push
ja
push
sbb
xchg
mov
sub
xchg
shll
sbb
mov
inc
xchg
inc
mov
jmp
addr16
outsl
xor
enter
out
movsl
repnz
and
add
aam
mov
mov
adc
stc
pop
iret
int3
jne
test
jl
imul
cli
loope
aas
pop
xchg
sub
sbb
fcom
and
push
ret
xchg
lock
inc
push
repz
dec
jmp
in
mov
cmpsl
jne
das
sbb
sarb
imul
mov
icebp
out
clc
into
xorb
out
fisubrs
decl
repnz
lods
insb
jb
jo
mov
mov
div
outsl
jge
jle
xlat
pop
sar
outsb
mov
mov
leave
mov
decl
cmp
repnz
out
push
adc
mov
outsl
mov
pop
dec
aam
adc
fsubrs
jo
aaa
mov
iret
js
imul
push
push
insl
dec
sahf
dec
mov
add
mov
or
lret
inc
xor
jmp
negl
mov
mov
rcr
out
mov
pop
xchg
test
sbb
pop
pusha
cmp
adc
xchg
mov
addr16
and
call
fsts
push
and
leave
push
xor
popa
vmread
leave
dec
jle
enter
out
repnz
cli
cmpl
jno
loope
dec
xchg
add
inc
pop
add
jle
adc
sbb
movsl
je
arpl
test
clc
add
daa
out
nop
jg
sub
inc
mov
out
outsb
lods
cmp
scas
call
clc
push
lods
jle
icebp
incb
adc
out
es
pop
push
mov
cmp
inc
std
fisubrs
clc
adc
shr
pop
inc
xchg
mov
imul
push
movsb
xchg
sti
js
jns
cltd
out
sbb
into
xor
mov
push
jle
mov
sub
and
lea
sub
insl
inc
fimull
psrld
xor
js
popa
push
cmp
mov
mov
movsb
pop
adc
sti
xor
scas
fxam
cwtl
call
or
mov
xlat
mov
cmpsl
outsb
xchg
cli
das
in
les
outsb
jl
call
mov
mov
pop
jae
mov
jae
outsb
push
or
cmpsl
mov
stc
out
bound
or
mov
cmp
mov
cmp
pop
sub
fs
stos
inc
xorl
and
sbb
pop
and
sbb
inc
insl
mov
jo
idiv
and
addr16
cltd
pop
mov
sub
in
lcall
negb
and
and
cmp
cmp
mov
pop
daa
push
lods
adc
sub
lock
mov
xchg
fimull
inc
call
jb
cmpsl
ljmp
mov
out
mov
mov
sbb
inc
sub
mov
or
out
sbb
inc
and
xor
pop
cmp
mov
dec
xchg
xchg
test
mov
fbstp
rorb
push
repz
sahf
rorb
jae
add
fidivl
cmp
in
mov
mov
jns
xor
dec
mov
stc
xor
inc
cmpsb
dec
mov
or
call
mov
mov
jmp
fisubl
dec
inc
add
loope
mov
cmc
movsb
std
mov
mov
pop
pandn
inc
or
sub
fwait
insb
sub
dec
test
ss
mov
clc
setnp
cltd
rolb
test
cwtl
push
dec
stc
ds
or
cmp
nop
test
xor
or
insl
push
aad
dec
in
cmc
xor
fs
inc
push
dec
dec
xchg
das
xchg
das
xchg
aam
pusha
xor
jecxz
es
xchg
imul
lret
imul
aas
jb
or
cli
lock
rol
xchg
xchg
add
fstl
pop
fadd
jle
mov
mov
fsubs
sbb
movaps
in
fdivs
repnz
jle
cmp
movsb
sbb
push
adc
dec
iret
cmpsb
ljmp
pop
inc
cli
mov
pop
stos
push
dec
jo
dec
rcl
mov
out
pop
shl
or
push
push
mov
out
xor
mov
fisubl
adc
dec
xor
lcall
xchg
mov
mov
push
je,pn
leave
sub
out
xlat
flds
add
inc
cltd
out
dec
dec
mov
dec
dec
mov
jbe
rcr
and
xlat
test
insb
hlt
mov
ret
push
fwait
adc
mov
lea
cs
aas
lret
sar
gs
or
sti
hlt
mov
sbb
sub
and
or
jae
xor
mov
sub
and
call
cmp
setb
dec
repz
loopne
in
lret
xor
and
insb
jne
or
push
fists
shr
jl
fdivp
lea
jne
arpl
sbb
push
shrl
sahf
mov
test
adc
jmp
mov
pushf
cmc
sub
and
dec
testl
ucomiss
add
jne
mov
fst
cmp
cld
arpl
jnp
xor
ja
and
scas
cltd
mov
pop
xor
jecxz
cli
sub
out
arpl
xchg
fstpt
cld
cltd
movsb
adc
mov
pop
jo
add
imul
out
xlat
js
dec
pop
cmp
xchg
mov
dec
and
out
iret
pusha
arpl
pop
leave
fwait
lods
nop
cmp
jmp
xor
in
xor
and
and
inc
push
xchg
shll
and
fwait
dec
shrl
test
adcb
adc
cmc
xor
fbld
mov
repz
pop
clc
fwait
bound
cmpsb
mov
mov
fs
add
loop
cmp
adc
les
lods
out
nop
test
sbb
popf
mov
insb
outsb
les
jno
inc
hlt
xchg
call
fisubl
xchg
in
es
mov
jmp
xor
dec
imul
xor
push
cld
mov
push
outsb
sbb
imul
and
enter
xor
repz
mov
pushf
scas
lds
and
or
xor
std
aad
testl
sub
mov
push
pavgb
addr16
clc
lret
push
and
jle
data16
mov
or
adc
pop
sbb
pop
jno
jle
aas
sub
jp
and
xchg
mov
or
test
subb
arpl
add
mov
adc
xchg
pop
cwtl
push
mov
cmpsl
pusha
push
mov
shrb
loope
sbb
popa
les
mov
and
jae
stos
sub
into
leave
jnp
jmp
clc
scas
mov
fdivrs
and
inc
out
jp
adc
dec
fcoml
ret
fdiv
aad
mov
or
shl
or
xor
mov
lret
lock
mov
lcall
jecxz
filds
jg
and
or
cmp
xor
sbb
aam
test
inc
out
dec
mov
cs
lods
in
aaa
push
adc
stos
or
and
cmpsb
mov
out
xlat
out
sarl
jecxz
pop
sbb
enter
push
pop
mov
sbb
sub
sub
lds
sub
jp
adc
orb
xor
mov
push
pop
ss
fnsave
inc
cmpsb
leave
adc
xchg
repz
bound
je
cmp
mov
mov
push
and
int
sarl
fs
sub
jl
cmp
jo
lock
je
pop
or
inc
mov
and
push
repz
xor
fdivr
mov
sbb
cmp
inc
xor
or
xor
push
mov
sahf
mov
add
dec
lods
pop
dec
bound
inc
sub
jnp
sbb
in
leave
sahf
sbb
push
jne
in
push
push
scas
cmpsb
xchg
jmp
mov
mov
nop
lcall
or
and
std
js
iret
pop
pushf
mov
int3
loopne
arpl
stos
cmpsl
sarl
ss
cmpsl
clc
cs
jmp
mov
ret
push
incl
out
sbb
outsb
dec
ret
or
jle
cwtl
or
loop
inc
or
xchg
pop
dec
cmpsb
mov
aad
lock
sub
mov
mov
call
cwtl
stc
xcrypt-cbc
cmpsl
nop
sti
sub
fs
sub
outsb
jnp
sub
notb
mov
rcr
loope
outsl
cs
cmpsl
mov
gs
pop
jo
cltd
icebp
insb
add
pop
fisubrs
cmp
pushf
ret
aam
and
mov
xchg
sbb
loope
dec
repnz
push
flds
insb
fs
and
and
mov
jns
mov
lcall
dec
in
jne
xchg
cmpsl
in
push
sbb
iret
pop
push
inc
jno
sub
lgs
leave
inc
pop
shll
lds
xchg
sub
mov
mov
adc
xchg
pushf
lret
xchg
cmpl
jp
lahf
mov
xor
test
fnstcw
jns
and
xchg
in
cmp
imul
push
out
stc
jo
orl
popf
cmpsl
dec
fidivrl
rolb
cltd
mov
xor
mov
xor
ret
push
jns
push
les
xor
sbb
rorl
jne
loopne
inc
andb
xchg
jnp
ror
xor
stos
mov
cmp
jmp
and
xchg
xorb
jmp
cmp
adc
lcall
pusha
jle
and
out
lock
ret
daa
jecxz
fisubs
add
test
mov
jp
ret
fnsave
push
jae
or
ret
add
dec
pop
les
and
pusha
enter
rcll
or
out
sarl
push
in
clc
inc
pop
pop
xchg
ret
pusha
jno
jae
sbb
lahf
imulb
mov
aaa
mov
icebp
pop
jecxz
push
and
mov
mov
rcl
mov
stc
xor
mov
cld
clc
xchg
das
stos
mov
adc
push
lahf
sub
in
inc
nop
call
popf
in
rclb
or
dec
xchg
idiv
cmp
into
jmp
fcomip
cld
movsb
inc
arpl
out
cmp
add
and
or
mov
push
add
push
test
inc
cmp
popf
mov
and
dec
mov
leave
dec
es
test
xorb
pushf
es
sbb
xchg
push
mov
dec
aad
jmp
or
pusha
lock
xlat
lret
inc
addb
scas
cmp
lds
jp
lcall
bound
adc
pushf
inc
mov
out
imul
lock
adc
insl
mov
bnd
xchg
enter
push
add
ja
adc
xchg
cmp
iret
rclb
ret
xchg
xchg
xor
lret
jg
inc
xor
push
iret
jg
inc
mov
negb
imul
sub
arpl
adcb
and
ret
scas
in
push
sub
cmp
cmp
popf
add
mov
jecxz
dec
push
shlb
arpl
add
mov
out
das
je
cmp
xchg
stos
inc
sti
out
sahf
es
ja
sbb
orb
sar
xor
addr16
rcrl
fadds
cld
pusha
mov
into
fstpl
inc
pop
cld
mov
outsb
out
fidivrl
pop
mov
xchg
fwait
push
ja
stc
sbb
ss
stc
xchg
outsb
sub
jle
out
divb
leave
pop
es
cmpb
mov
adc
jno
pmaddwd
lods
mov
xor
pop
lea
pop
or
mov
pop
idivl
inc
mov
xchg
sti
aaa
loope
add
ss
jg
pop
and
pop
xlat
enter
imul
lock
mov
sbb
push
add
rep
mov
int3
aam
inc
xor
outsl
js
inc
xor
sbb
xchg
sti
xstore-rng
cmpsl
push
pop
dec
mov
xchg
pop
mov
pop
and
subb
add
shlb
popa
or
xor
shll
out
sbbl
lock
fdiv
push
adc
lcall
fistps
fninit
imul
movsl
mov
cli
sub
inc
mov
mov
aas
mov
jns
or
in
repz
sbb
xor
addb
cmp
into
adc
loopne
or
lock
int3
sub
mov
lret
or
push
mov
jmp
fisttpl
nop
xchg
sbbl
bound
lahf
xlat
mov
pop
jecxz
or
cmpsb
add
cmp
rcl
mov
and
inc
push
outsl
adc
mov
pop
xor
addl
orb
divb
arpl
jp
outsb
mov
cmc
dec
aaa
daa
loop
cmpsl
js
movsl
daa
call
mov
push
fbstp
or
or
xor
adc
rorb
frstor
jp
push
cld
mov
mov
push
xchg
sqrtps
pop
adc
stc
inc
dec
aam
jecxz
mov
fnstcw
imul
insb
int
pop
jp
xor
adc
bt
mov
sub
adc
cmc
adc
sbb
in
cmpsl
lahf
or
mov
sahf
add
sub
lret
xchg
mov
mov
lret
inc
aas
sbbl
lods
out
hlt
and
sub
xchg
mov
pop
or
mov
dec
mov
fcoms
cmp
sbbb
jno
mov
insl
push
sti
mov
dec
jnp
adc
xchg
xchg
or
nop
inc
ret
cs
clc
shrl
jnp
cmp
scas
and
or
movsb
inc
mov
inc
fsubrl
sbb
out
add
mov
pop
xchg
mov
sarb
mov
pusha
mov
cmc
cmp
ret
inc
jne
push
inc
sbb
jno
scas
mov
lods
dec
jb
jmp
dec
cmc
jns
and
jl
adc
enter
das
iret
cwtl
in
mov
lret
in
rorl
ret
je
fcoms
sbb
mov
pop
mov
insb
ffreep
pop
push
orb
dec
adc
dec
dec
or
std
pushf
pusha
nop
negl
jmp
repnz
push
add
addr16
sub
mov
in
je
shll
add
cmp
adcb
xor
add
leave
stos
ret
int3
rorb
sub
dec
jg
clc
sub
shrb
xor
loope
ret
sub
mov
mov
flds
pop
ret
mov
adc
out
loope
inc
sahf
mov
sbb
loope
sub
adc
fwait
jp
mov
in
pop
cltd
pop
dec
jns
test
aam
sbb
cmp
xorl
into
sbb
cmpsb
sbb
daa
test
mov
pop
pop
icebp
scas
sub
ret
add
fidivrs
xlat
lcall
or
dec
aam
es
jb
inc
pop
repz
inc
pop
xlat
push
xchg
ret
add
jge
sub
inc
movsl
push
lret
sahf
cmpsb
xchg
adc
jnp
ljmp
push
cmp
jge
inc
xchg
movsl
push
notb
ret
xor
in
test
add
imull
and
push
fcompl
mov
adcb
jnp
jge
sbb
icebp
jp
push
mov
enter
subl
das
sbb
push
gs
xchg
test
jmp
lret
mov
cltd
add
aas
mov
mov
fsubrs
inc
outsl
pop
pop
jmp
incl
sbb
addr16
mov
xchg
lds
arpl
cs
test
cmpsb
jg
xchg
sbb
ss
enter
dec
filds
jae
pop
fisubs
idivb
or
inc
jo
std
cli
mov
int3
dec
cwtl
mov
cmpb
popf
iret
sti
inc
mov
mov
ljmp
cltd
mov
sbb
jg
mov
shl
inc
push
mov
bound
jb
loope
les
inc
xor
xchg
dec
push
sbb
push
outsb
or
inc
sbb
pop
and
in
xor
or
jbe
in
sbbb
sub
or
mull
aam
daa
ds
sbb
in
and
or
jmp
daa
pop
cli
cmpsl
cwtl
fidivrl
xchg
or
dec
sbb
push
shll
addl
inc
jo
adc
ss
ficompl
fdivrl
cmp
gs
mov
jns
or
xchg
popa
sub
jg
mov
ja
aas
dec
and
adc
icebp
call
leave
cmpsl
inc
jne
popl
mulb
xchg
test
mov
mov
or
cmp
call
xlat
sub
dec
xchg
inc
popf
mov
xchg
push
inc
das
or
sub
inc
in
leave
push
pop
jmp
stc
fstl
dec
in
cltd
test
lret
mov
scas
nop
lea
inc
xor
and
pusha
js
dec
jg
fcomi
sbb
shrl
insl
and
fs
xchg
cs
add
das
inc
xchg
in
aaa
stos
fimull
fdivp
lock
add
outsb
mov
enter
xchg
fisubrl
imul
imul
push
fsub
mov
pusha
mov
in
popa
inc
andl
cmp
jne
inc
ret
mov
xchg
lea
fcomp
mov
adc
lods
js
adcl
push
jbe
xchg
mov
bound
shlb
jnp
popa
sbb
push
sub
mov
scas
bound
jae
test
out
jbe
lods
lret
pop
popf
cmp
loop
jmp
js
inc
fs
xchg
inc
jecxz
lret
sub
xchg
jmp
int
jbe
in
adc
mov
into
mov
ds
sub
xor
data16
mov
jecxz
mov
bound
sub
xor
loopne
orb
shlb
fcomip
int
push
mov
mov
pop
int3
scas
sub
movsb
push
mov
cmp
shr
inc
pusha
popl
insl
es
jge
or
stc
addr16
push
push
lret
int3
sbb
mov
ret
lret
cmpl
sbb
daa
sub
pop
sub
and
mov
pop
mov
or
movsl
arpl
jno
lcall
pop
lods
jg
fisttps
or
push
dec
stos
sub
xchg
lret
js
pop
xor
mov
push
aaa
and
push
lcall
lret
mov
lret
jo
pop
mov
scas
inc
or
lahf
mov
pop
adc
cmp
ja
addr16
push
ds
push
inc
pop
xchg
out
and
loop
arpl
push
sub
sbb
push
fstpt
aad
mov
mov
lds
mov
out
aad
movsl
push
les
ja
test
inc
jne
sbb
sbb
fisttps
test
cmp
cmp
test
imul
mov
dec
mov
jnp
mov
lret
lcall
add
lods
fldl
daa
mov
add
sub
bound
mov
sahf
mov
cmc
mov
push
testb
sub
pop
add
xchg
insb
jnp
rcr
nop
sub
stos
nop
in
mov
imulb
out
fistps
xor
in
mov
enter
out
xor
bound
adc
daa
pop
jmp
xchg
jns
pop
dec
arpl
push
push
daa
out
cmc
and
jno
mov
rclb
lret
pop
sub
addr16
adc
jns
or
pushf
mov
clc
popf
pop
cmpsl
aam
sbb
inc
fstpl
sbb
mov
sbb
pop
cmp
inc
xchg
sbb
sbb
push
mov
lahf
sub
or
add
fs
dec
cmp
mov
adc
sbb
sahf
mov
adc
xchg
sub
dec
xchg
enter
imul
sbb
xchg
mov
pop
sbbl
nop
inc
add
mov
outsl
cs
fdiv
sbb
shlw
pop
jnp
push
inc
sbb
ret
add
out
inc
pop
jp
ljmp
frstpm(287
pop
lock
jns
scas
jb
lahf
adcb
push
test
mov
xor
inc
gs
in
ljmp
and
xor
jl
aam
stos
cs
xchg
mov
mov
ljmp
push
jge
xor
mov
aas
xchg
push
repnz
cmpsl
dec
es
jb
outsl
inc
mov
sub
sbb
sub
mov
jo
adc
push
sbb
push
int
mov
inc
sbb
test
ds
xor
adc
inc
insb
in
add
mov
push
into
cmc
xor
aaa
loopne
add
cmp
fld
ror
mov
jno
and
lahf
loope
repz
jge
aam
test
outsl
mov
jp
lods
and
notb
popa
cmp
fbld
mov
cmp
dec
andl
mull
mov
inc
add
cltd
mov
sbb
push
push
jbe
add
mov
pop
pushf
mov
sbb
xchg
loop
pop
outsl
adc
out
out
jmp
jle
sbb
mov
mov
mov
repz
or
cmpsl
inc
fildl
pop
xor
jp
testb
dec
inc
ja
pop
call
aad
xchg
push
mov
scas
scas
stos
pop
sti
enter
pop
jle
xor
stos
xchg
int
mov
loope
mov
mov
mov
xchg
lea
dec
and
decl
sbb
xor
jnp
pop
fildll
clc
dec
lret
jp
shlb
lock
xchg
xor
repz
lods
mov
je
pop
sub
movsl
popf
fld
sahf
pusha
adc
or
mov
sub
in
pop
sub
mov
leave
cmp
dec
aam
jl
lret
jle
enter
adcl
mov
sub
ljmp
fiadds
push
fdivrl
ss
arpl
movsb
fwait
popf
jg
out
add
mov
int
or
jno
inc
pusha
fs
dec
push
loope
test
push
push
and
sbb
icebp
in
in
mov
push
mov
je
orl
sbb
fistps
popa
xor
xchg
movsb
int3
rclb
aas
popa
ja
mov
fsub
xlat
pushf
shll
movsb
mov
movups
aad
xchg
mov
movsb
mov
lcall
xor
sbb
add
push
decb
or
js
or
dec
sbb
shlb
jne
mov
push
pop
sub
rcrl
iret
and
xchg
arpl
aaa
mov
in
and
xchg
sbb
cmp
les
jg
lods
mov
fwait
dec
out
imul
xor
inc
in
lcall
sti
and
mov
in
mov
mov
jp
dec
bound
mov
outsb
jmp
mov
sub
negl
imul
outsl
mov
dec
in
popa
daa
mov
mov
fnsave
cli
andl
scas
lea
xchg
jae
icebp
dec
stos
push
negl
mov
ret
add
xchg
js
in
cmpsl
rorl
jmp
repz
adc
or
mov
loope
mov
cwtl
cmp
xor
and
pop
mov
inc
repnz
adc
inc
jb
adc
mov
sbb
mov
add
or
mov
sub
in
adc
insl
push
adc
aam
mov
test
xchg
popf
out
lea
lods
lcall
ret
fstpt
imul
in
test
mov
push
and
fs
call
inc
add
rcrl
pop
or
adc
push
loopne
pushf
imulb
and
push
leave
gs
xchg
push
shrb
add
adc
sbb
outsb
and
pop
lcall
sti
jbe
cld
mov
inc
out
pop
decb
cld
popf
xchg
pop
jno
sub
jne
push
cli
mov
subl
mov
sub
test
cld
outsb
or
js
outsl
jbe
icebp
mov
movsl
xor
lea
imul
stos
int3
in
sbb
out
sub
enter
int3
xchg
xchg
push
mov
jne
inc
fcompl
cs
movsb
add
mov
cld
test
xlat
push
push
mov
mov
cli
dec
push
push
xor
aam
ficomps
cmc
sub
adc
xchg
push
lods
mov
stc
inc
push
loopne
inc
jge
shrl
push
clc
cmc
push
les
xchg
or
xchg
xor
popl
sub
popf
jge
lret
jo
mov
scas
mov
mov
ret
sbb
call
or
les
inc
add
lret
or
and
jmp
test
or
push
jb
mov
daa
lds
add
fisubl
dec
decb
fists
iret
sahf
and
inc
testl
cmc
int3
outsl
cmp
mov
iret
push
add
inc
sarb
loop
adc
fwait
shlb
xchg
sub
bound
nop
mov
and
pop
push
push
std
push
sbb
add
adc
inc
xchg
xchg
enter
mov
inc
nop
mov
xor
or
pop
jne
adc
push
rolb
or
fidivrl
sbb
aam
lods
push
push
jmp
lret
cmp
stos
lods
xchg
lret
pop
loope
add
dec
pop
sti
xor
nop
ds
jmp
mov
loopne
cmc
mov
jp
aam
movaps
mov
adc
and
sti
insl
lds
sub
out
fwait
cmp
mov
adc
dec
dec
dec
mov
push
add
dec
pop
gs
mov
loopne
subl
mulb
mov
lret
cmp
jns
lret
xor
mov
add
mov
push
mov
sbb
xor
ret
lret
jmp
mov
ret
mov
xor
mov
aaa
mov
shrb
sbb
sbb
or
aaa
imulw
into
mov
lahf
das
push
or
int
insb
fs
cmpsl
jmp
inc
mov
sbb
ljmp
out
xor
xchg
push
pop
jg
hlt
pusha
pop
mov
pop
cltd
push
adc
xchg
cmp
ret
das
sub
xchg
mov
mov
jne
or
and
pop
xor
call
bswap
jmp
repz
cmp
clc
mov
fcmovu
add
inc
int
jle
mov
mov
xchg
adc
jecxz
fsts
jle
insb
jmp
orb
or
stos
and
out
lahf
lahf
inc
inc
bound
aam
arpl
xchg
or
loop
clc
inc
jl
out
test
or
mov
mov
mov
xor
mov
rclb
cltd
xchg
fsubrs
sahf
dec
mov
iret
pop
sbb
jno
xchg
pop
xchg
dec
mov
mov
and
add
lock
shlb
sbb
cmp
popf
sbbl
xchg
popa
fsubrl
mov
aam
jb
xor
call
aaa
stos
leave
sub
gs
mov
xor
insl
mov
jo
inc
xor
inc
push
mov
jbe
add
xchg
jge
xlat
shlb
ds
cltd
pop
in
ljmp
sub
xor
fcoml
mov
test
xchg
jb
mov
inc
ds
das
je
daa
push
enter
ja
add
push
mov
clc
push
add
or
loopne
jnp
imul
popf
in
in
push
or
das
test
add
push
rorb
insl
call
sbb
ds
dec
cmpsl
cmp
mov
mov
dec
ljmp
nop
sub
rdpmc
mov
sbb
leave
fstps
mov
fdivrs
popa
lcall
pop
pop
sbbl
push
or
adc
cli
into
sub
cmc
outsb
cwtl
mov
pushf
mov
sbb
in
sbb
lea
das
jp
test
in
fs
sbb
add
or
aas
test
bnd
mov
pop
push
sub
insl
pop
scas
jmp
out
cmp
adc
sbb
push
and
int3
pop
jno
sahf
push
push
push
and
sbb
fidivs
out
rcl
and
jg
inc
arpl
rcrb
push
adc
jo
cmpsl
ret
repz
out
push
cli
sti
loope
and
rcll
fisubl
xchg
mov
into
jb
fnsave
pop
cmp
arpl
jns
nop
out
pop
cld
in
adc
sti
and
test
dec
pop
pop
jecxz
ret
xor
xor
std
mov
cmpsl
lea
aas
pop
arpl
call
mov
cld
pusha
dec
push
xor
jge
xchg
pushf
xor
fstpt
mov
mov
loopne
mov
xor
push
sarb
fdivrp
lock
push
dec
fcomps
lods
cmp
aaa
jge
test
incb
mov
pop
loope
out
and
xchg
or
in
mov
popf
dec
pop
push
leave
sub
xor
jnp
out
push
lods
push
gs
jmp
into
xlat
into
cmp
pop
mov
ficompl
ficoml
aad
je
inc
pop
les
xor
jnp
movsl
mov
mov
lcall
jnp
mov
pusha
mov
lods
jecxz
cmp
js
inc
pop
fisubrl
loopne
popf
mov
mov
cmp
in
js
es
mov
repz
sti
inc
mov
test
xor
popa
or
faddl
push
fmuls
popa
jne
xor
jmp
xchg
mov
ss
push
in
dec
mov
je
xor
sub
arpl
pop
xchg
lret
sub
add
adc
push
repnz
or
insb
xor
sub
js
inc
dec
push
push
mov
push
add
push
stos
adc
jl
mov
xor
jb
mov
adc
mov
daa
fs
sahf
leave
pop
jle
or
loop
xchg
cmp
push
pop
fwait
push
rcrb
push
xor
cmp
mov
sub
outsl
hlt
testb
lret
in
xor
cmp
jmp
negb
mov
jns
sahf
lods
jno
or
jae
lahf
jno
rcll
adc
and
add
mov
arpl
add
add
jae
dec
jle
stos
sbb
pusha
dec
popl
jbe
jg
les
and
clc
push
and
popa
mov
inc
rorb
shrl
ljmp
enter
jnp
jmp
xchg
push
jbe
jnp
mov
mov
sub
clc
addr16
mov
or
popa
mov
mov
cmc
pusha
stos
sub
or
sbb
ja
std
out
or
daa
mov
icebp
push
or
and
imul
movsl
fists
adc
cmp
sbb
cmpsb
and
sub
xor
cmpsb
andl
pop
call
xchg
test
add
shlb
push
adc
ss
ret
ja
dec
sahf
push
adc
pusha
pop
std
jae
imul
je
xor
addr16
iret
cld
dec
popf
mov
pop
xchg
ja
inc
out
add
jnp
enter
and
cmp
mov
adc
lahf
bound
adc
call
and
inc
movsl
rolb
repz
std
cmp
lret
mov
pop
mov
mov
cmpsb
sti
outsb
fcmovnb
adcb
add
stos
insl
insb
add
into
jnp
ret
mov
add
frstor
aam
xchg
outsb
pushf
into
mov
sbbb
ret
pop
out
and
ja
mov
icebp
sbb
lods
test
mov
and
ds
jl
push
jne
jmp
shrl
enter
mov
pop
nop
test
jle
incl
xor
fisttpll
jae
mov
fs
mov
imul
ds
arpl
pop
add
mov
adc
stc
mov
jge
adcl
mov
movsb
cs
insl
cmp
pop
rcrb
lret
xchg
icebp
insl
add
in
mov
inc
mov
and
sbb
cld
xchg
adc
xor
jge
dec
pop
sub
fldcw
cltd
jne
xchg
pop
xchg
pop
hlt
or
fidivrl
mov
fidivrl
or
dec
xor
cmpsb
pop
mov
test
imul
add
addr16
push
and
adc
ss
mov
repnz
ljmp
sbb
add
pop
push
lods
jle
test
mov
dec
stos
xor
xchg
add
inc
cmp
or
cmp
lahf
sysexit
mov
in
mov
or
adc
mov
les
ds
clc
or
ficoms
call
adc
push
orl
test
pop
and
jno
loopne
in
cld
sub
xlat
mov
int3
xchg
push
je
filds
add
in
xchg
mov
add
jecxz
loopne
int
sbb
mov
out
mov
jns
ret
ljmp
jp
mov
daa
lock
sbb
nop
xchg
jmp
or
xor
rorb
inc
jnp
arpl
gs
scas
ljmp
popl
pushf
cmp
cmc
add
lahf
iret
ljmp
mov
fwait
ror
pop
sbb
ljmp
adc
adc
hlt
mov
inc
addr16
leave
jmp
cmpsb
lods
xlat
or
orl
xchg
aad
lds
mov
add
leave
in
cmpsl
pop
cmpsb
out
mov
push
and
imul
int3
fs
sub
fsubr
sub
test
jb
in
test
sub
mov
aad
gs
xchg
mov
lods
imul
sub
sub
and
int
pusha
lods
scas
fists
sbb
or
xchg
lds
sbb
xor
dec
sub
pop
popf
push
mov
stos
sti
mov
pop
test
popa
icebp
repz
add
jno
shll
in
sbb
int3
cld
inc
std
test
repnz
dec
ja
mov
fs
push
cmp
jnp
outsb
repnz
cli
mov
push
add
js
pop
xor
mov
or
std
mov
cld
popa
xchg
mov
hlt
pushf
jge
xor
fbld
fistl
jne
clc
les
movsl
stc
mov
adc
mov
inc
out
xchg
xlat
and
mov
xlat
imull
adc
andb
data16
mov
cli
cmpsb
out
push
ds
push
leave
rcrl
imul
cmp
and
cmp
lock
jnp
pop
cmp
jmp
jne
repz
faddl
das
jo
arpl
xor
movsl
fisubs
leave
jns
inc
nopl
arpl
cld
inc
adc
jp
mov
pop
pop
adc
mov
hlt
push
xor
lea
stc
xlat
aam
jne
mov
mov
add
and
mov
popf
xorl
mov
jns
push
cmova
push
in
adc
push
xor
lret
xor
add
ds
sbb
cmp
push
loop
test
mov
stos
pop
mov
inc
sarb
int3
loope
jne
inc
fstpl
shrb
lock
mov
cmc
xchg
push
dec
fwait
jecxz
ret
lret
pusha
mov
nop
fnstenv
test
es
in
imul
addb
in
test
rcrb
dec
ljmp
jae
mov
scas
jbe
es
and
push
dec
and
ds
jns
mov
insl
push
es
jb
adc
mov
or
nop
pop
popa
jnp
in
adc
int
fdecstp
xor
push
jg
or
repz
sti
push
add
movsb
movsl
mov
pop
fsubrl
cmpsl
aam
in
fimuls
sub
and
or
mov
sub
ficomps
sbb
out
pop
adc
xchg
es
pop
push
xor
sahf
ljmp
test
xchg
hlt
loop
ficoms
inc
push
cltd
mov
in
sub
push
jg
push
jae
or
cmp
into
aad
xor
or
mov
fcompl
test
stos
sub
adc
pop
inc
mov
jmp
xchg
jmp
cmp
pop
or
in
es
xchg
pop
mov
add
dec
nop
pop
stc
sti
xchg
xchg
push
sar
aam
shll
in
mov
add
movsl
xchg
push
or
ret
pop
push
shll
sbb
rcrl
lods
push
daa
jo
jl
adc
pop
jbe
or
push
inc
dec
inc
pop
pop
cli
mov
inc
pop
mov
or
cmp
mov
ja
xor
shl
fadds
push
cmp
mov
jbe,pt
push
cli
xor
lea
das
subb
sahf
or
mov
in
pop
stc
std
dec
bound
ret
or
lahf
fcomi
sahf
repnz
cmpsl
sahf
rcrl
daa
insb
fsubrs
sbb
xchg
imul
xor
jb
lock
je
lret
mov
outsl
pop
jo
cld
sub
js
and
aaa
sbb
jae
fucom
subb
inc
or
xchg
aas
sbb
nop
loop
mov
push
jno
adc
fwait
lahf
mov
inc
dec
mov
in
int3
or
mov
xor
arpl
and
jb
sbb
repz
fbld
mov
pusha
xor
mov
sub
mov
test
popa
dec
and
clc
pusha
mov
aam
inc
mov
aas
and
mul
mov
ja
mov
mov
ja
mov
or
lret
popf
cltd
cmp
nop
insl
jnp
sub
dec
mov
sbb
std
leave
cmpsb
add
rcrb
mov
jecxz
dec
xchg
stos
or
adc
out
and
leave
jns
or
popf
push
sbb
push
push
pop
enter
xor
bound
aad
sub
lret
pop
dec
xor
push
decl
and
pop
push
xchg
imul
mov
rclb
adc
adc
fildll
in
insl
push
mov
testl
dec
nop
out
mov
adc
xor
mov
insl
insl
pop
cmp
sbbb
cmp
aaa
xchg
mov
sub
push
cltd
adc
jmp
seto
sub
ror
clc
mov
mov
aaa
adc
aas
xlat
sub
xor
shl
repz
int
pop
test
cwtl
push
pushf
roll
mov
mov
pusha
xchg
cmpsl
cmc
jle
xor
je
into
movb
sbb
xchg
push
sarl
and
inc
in
dec
mov
mov
popa
mov
dec
push
push
sub
pop
ja
or
hlt
out
imul
js
mov
cwtl
popl
mov
mov
xor
dec
repz
lock
mov
or
loope
inc
movb
xchg
xor
stc
icebp
aas
ret
mov
and
inc
mov
divl
push
pop
data16
in
test
mov
pmuludq
fiadds
sti
bound
add
pop
mov
mov
pop
testl
push
lock
ds
push
mov
mov
xchg
les
lock
and
pop
mov
xor
cmpsl
sahf
sbb
xchg
cwtl
push
lret
ret
inc
pop
fs
and
cld
sarb
push
outsl
or
repz
mov
sbb
fcoml
cmp
pushf
data16
inc
pop
adcb
lods
mov
cmpsb
and
dec
outsl
inc
dec
push
xchg
loop
sahf
push
ret
pop
loope
mov
cli
pop
sti
enter
rclb
fwait
jbe
mov
bound
pop
sub
cli
fsubp
mov
in
rorb
and
lret
sahf
xchg
out
cmp
xchg
cli
cmp
scas
xor
out
jb
dec
cwtl
lds
movsl
xor
out
in
out
jne
enter
mov
mov
sahf
test
pushf
pop
add
xor
xchg
adc
shlb
addb
jp
das
xchg
mov
xor
lods
inc
jg
pop
adc
lock
in
or
inc
mov
sbb
repnz
shll
fisubl
outsl
scas
inc
lock
pushf
sarb
mov
nop
add
popa
push
fildl
pop
mov
push
dec
ror
pusha
jp
leave
lcall
jl
test
or
adc
data16
xchg
frstor
xchg
xchg
hlt
movsb
add
pop
push
ss
aaa
mov
loopne
sbbl
outsb
fadd
cli
jge
fcmovu
mov
cli
mov
mov
xor
nop
in
inc
sub
lds
pop
dec
and
cmpsl
pop
bound
cli
and
fwait
loopne
mov
subb
xchg
sub
and
out
push
xchg
cmpsl
data16
lret
sub
push
mov
pop
dec
and
mov
cmc
movsl
test
xchg
mov
adc
out
xor
cmp
outsb
loopne
shl
imul
jnp
xchg
outsl
push
xchg
out
in
cmpl
sahf
les
xor
pop
add
dec
pop
fcomps
movsb
call
call
inc
mov
xchg
and
xchg
inc
cli
cmp
jg
push
nop
test
daa
xlat
or
xor
push
add
mov
in
sub
cmp
dec
daa
movsb
cmpb
aaa
fucomip
xchg
rcr
lds
lods
mov
jne
shlb
pop
dec
xchg
lahf
jae
sar
adc
dec
cmpsl
mov
mov
jo
xchg
mov
int
inc
repnz
xor
jl
test
mov
call
stos
pop
push
cs
mov
and
xor
fldenv
lock
repz
lds
jg
out
les
loop
add
lcall
ret
pop
mov
sbb
xchg
std
mov
push
enter
lods
mul
pop
ss
aad
pop
cmp
sbb
jns
ljmp
xor
insl
pop
rcll
add
and
mov
cmp
faddl
inc
adc
addr16
cmp
push
rcll
je
sub
cmp
xchg
insb
lret
shl
mov
aas
das
pop
or
icebp
es
cmp
sub
das
out
fcom
mov
jae
and
arpl
cmp
pop
mov
std
push
xor
les
loop
push
andb
ret
jge
mov
pop
sub
push
mov
insb
les
inc
in
mov
rorb
movsl
int
inc
mov
jmp
orb
and
adc
adc
dec
adc
adc
lret
test
jo
lods
or
jb
cmp
mov
clc
and
jnp
test
push
loop
mov
enter
mov
jg
stc
rcrb
mov
adc
xor
cmpsb
pop
mov
xor
aam
pushf
aam
icebp
cmp
dec
outsb
inc
xchg
scas
push
aam
mulb
lods
push
cs
fdivp
enter
ret
inc
popa
mov
sub
pop
push
sbb
ret
jp
push
lcall
add
mov
lcall
inc
pop
xchg
push
cmc
mov
jge
sbb
imul
ficompl
mov
cmp
inc
pop
nop
cmp
std
addr16
adc
mov
popa
dec
xchg
cmp
es
addr16
push
xchg
shlb
and
add
push
and
and
mov
es
dec
sbb
add
adc
cmp
shlb
repnz
repnz
hlt
and
negb
enter
ret
or
cld
testl
clc
xchg
and
lcall
stos
dec
iret
jo
jmp
leave
push
jbe,pn
imulb
loope
fildl
out
clc
mov
xchg
xchg
mov
test
scas
push
and
xor
sbb
aaa
das
leave
lahf
xor
and
outsb
movsb
sti
cli
fdivs
dec
push
jle,pn
clc
mov
pop
mov
inc
dec
mov
pop
rcrb
cmpsl
add
in
daa
loopne
xchg
lret
add
out
outsb
lea
mov
loope
push
pop
pusha
mov
jmp
and
adc
sub
mov
and
lret
das
add
xchg
and
add
push
push
scas
jl
cmpsl
adc
add
sbb
lds
push
jle
jl
enter
fstl
movsl
pop
adc
pop
stos
rcr
ficompl
test
inc
mov
xchg
xchg
inc
cmp
cmp
cwtl
out
pusha
data16
or
loop
adc
jb
and
lcall
xor
int
loope
clc
mov
jecxz
rorl
add
add
ja
lods
inc
jg
inc
mov
jmp
int
add
aas
popa
mov
loope
imul
sub
mov
mov
into
fwait
push
pop
add
and
test
mov
lcall
add
inc
addl
cmpsl
popf
mov
jp
jecxz
les
das
and
adc
sarl
test
sub
fstl
mov
push
or
and
pushf
dec
sub
inc
dec
mov
mov
cmpsb
and
je
pop
or
inc
adc
subb
xchg
ret
jg
ja
cli
pop
push
js
jne
mov
adc
sbb
jle
mov
daa
ret
cld
and
xor
call
jg
mov
mov
jmp
fdivs
fwait
movsb
leave
loop
lea
cs
dec
xor
negl
hlt
xchg
push
std
xor
pop
xchg
and
jnp
inc
in
xchg
sbb
outsb
push
cmp
lods
add
stc
xor
xchg
cmp
sub
or
jno
sbb
inc
aas
sub
mov
in
pop
stos
push
sti
call
pop
sarb
fs
cwtl
mov
cmp
cmc
xorl
dec
xor
sbb
xchg
xchg
cmpsb
mov
dec
scas
add
push
mov
sub
cmpsl
xor
jnp
jg
gs
jo
cs
insb
add
add
add
add
add
add
fists
add
add
add
jne
add
and
add
dec
bound
insb
arpl
push
add
jo
jne
jae
arpl
