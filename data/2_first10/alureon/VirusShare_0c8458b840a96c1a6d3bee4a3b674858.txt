add
inc
push
lea
push
mov
push
push
inc
pop
xor
mov
xor
lea
movzbl
mov
lea
not
lea
mov
pop
mov
pop
sub
sub
mov
movl
movl
or
xor
xor
and
imul
inc
and
bswap
add
mov
bswap
movl
lea
push
mov
push
mov
mov
sub
neg
mov
push
bswap
xor
lea
mov
bswap
neg
shll
inc
xor
inc
push
lea
call
lea
lea
mov
mov
mov
sub
add
lea
ss
mov
mov
xor
dec
add
inc
inc
dec
lea
mov
and
lea
mov
or
lea
add
xor
and
mov
lea
inc
and
lea
lea
add
lea
mov
mov
lea
sub
inc
and
lea
and
mov
lea
lea
push
and
inc
push
or
or
push
inc
mov
mov
bswap
inc
movswl
and
sub
lea
mov
inc
xor
and
mov
lea
inc
push
addl
bswap
imul
xor
lea
lea
movsbl
movzwl
lea
inc
lea
mov
add
lea
push
push
mov
push
lea
push
and
push
bswap
inc
push
sub
push
sub
neg
lea
imul
bswap
sub
mov
add
lea
movl
lea
push
or
lea
mov
push
imul
and
push
xor
and
push
add
bswap
push
lea
and
push
add
sub
push
mov
imul
push
mov
mov
push
mov
lea
push
movzbl
and
addb
bswap
mov
mov
sub
not
push
and
call
and
push
add
lea
call
xor
mov
mov
and
or
mov
mov
add
mov
add
sub
sub
mov
not
pop
or
lea
mov
neg
and
inc
imul
lea
neg
and
inc
lea
add
and
and
bswap
inc
and
mov
and
lea
movswl
inc
or
movsbl
add
mov
sub
mov
mov
inc
inc
lea
and
lea
sub
mov
sub
sub
and
xor
sub
and
and
and
and
inc
lea
or
sub
lea
and
sub
add
lea
sub
mov
sub
inc
mov
sub
imul
or
add
add
sub
lea
and
or
sub
add
add
lea
mov
lea
and
lea
lea
add
mov
inc
lea
inc
inc
lea
mov
mov
and
add
mov
imul
add
xor
neg
cmpb
je
mov
mov
sub
mov
xorl
xor
lea
and
movzwl
lea
mov
sub
bswap
inc
inc
mov
add
sub
shl
inc
and
mov
lea
lea
push
mov
or
lea
and
inc
popl
inc
or
mov
and
movswl
mov
inc
and
not
inc
add
mov
mov
pop
mov
jmp
and
push
sub
or
push
mov
xor
push
bswap
xor
push
mov
add
pushl
sub
mov
pushl
add
sub
mov
inc
and
or
lea
lea
or
call
lea
mov
mov
lea
add
inc
sub
pop
mov
sub
pop
mov
or
pop
lea
not
sub
mov
and
mov
sub
mov
mov
or
lea
mov
and
and
mov
mov
add
xor
lea
or
dec
mov
xor
xor
lea
bswap
mov
xor
add
mov
mov
and
add
not
lea
add
lea
xor
mov
bswap
xor
incb
add
lea
inc
mov
and
or
mov
cmp
jb
add
push
neg
and
push
movswl
inc
push
neg
and
lea
bswap
and
mov
add
mov
mov
sub
bswap
or
imul
lea
mov
mov
mov
imul
mov
and
inc
imul
mov
mov
sub
movzbl
and
lea
bswap
mov
and
sub
lea
imul
and
lea
movsbl
add
mov
and
or
movzbl
and
add
inc
neg
mov
add
neg
and
lea
mov
lea
lea
lea
inc
mov
lea
mov
xor
and
add
xor
or
lea
xor
and
and
push
add
sub
mov
add
add
mov
sub
lea
movzbl
add
not
push
mov
imul
movzbl
add
mov
add
lea
inc
add
lea
bswap
pop
and
add
movzbl
lea
mov
inc
imul
inc
mov
inc
lea
cmp
jb
mov
xor
not
add
mov
add
lea
inc
movzbl
or
push
mov
mov
lea
sub
lea
mov
add
lea
lea
add
lea
mov
imul
and
mov
mov
lea
pop
lea
and
mov
mov
lea
test
jne
mov
xor
lea
xor
xor
add
inc
pop
inc
or
mov
lea
lea
mov
lea
and
test
jbe
not
inc
inc
add
movzbl
xor
sub
pushl
lea
mov
pop
mov
mov
movzbl
mov
add
add
add
inc
movzbl
lea
mov
mov
add
sub
mov
sub
mov
add
mov
and
add
sub
mov
movb
lea
mov
dec
or
add
sub
sub
or
mov
and
and
add
xor
add
mov
bswap
sub
lea
lea
inc
movb
add
or
mov
sub
add
and
xor
mov
sub
xor
lea
lea
inc
lea
lea
lea
mov
sub
add
lea
bswap
movzbl
mov
lea
lea
add
sub
movzbl
lea
mov
push
imul
and
xor
xor
mov
dec
or
or
mov
lea
add
inc
mov
add
sub
mov
sub
and
imul
neg
pop
movzbl
lea
inc
inc
sub
dec
jne
or
pop
mov
bswap
pop
sub
mov
pop
mov
mov
add
mov
sub
pop
inc
and
add
lea
and
push
and
ret
bswap
mov
inc
inc
pushl
mov
and
push
lea
not
movzwl
lea
mov
mov
inc
lea
neg
neg
sub
mov
xor
lea
add
xor
sub
cmp
je
movswl
add
add
jmp
mov
xor
neg
and
mov
movzwl
neg
lea
and
xor
mov
inc
and
mov
and
mov
lea
mov
bswap
push
sub
lea
mov
inc
add
pop
mov
add
push
or
lea
pop
add
xor
lea
and
sub
cmpb
je
inc
sub
mov
mov
push
xor
mov
call
mov
and
push
lea
mov
call
movzwl
mov
and
and
add
je
add
call
lea
imul
mov
lea
call
mov
movswl
dec
movswl
lea
call
lea
lea
test
jne
lea
pop
and
xor
sub
bswap
or
mov
and
add
mov
add
and
mov
mov
movsbl
lea
movzwl
mov
neg
inc
neg
sub
mov
and
call
or
sub
mov
mov
xor
ret
add
mov
lea
or
lea
lea
lea
sub
ret
inc
nop
lea
add
jne
add
inc
int
lret
dec
and
mov
cmp
sub
jecxz
ret
and
push
lret
gs
pop
rclb
and
mov
push
mov
cld
mov
adc
fdivs
xor
cs
test
jmp
add
inc
fstpt
xchg
cmp
cld
pushf
push
dec
cmp
mov
mov
and
mov
filds
lds
xchg
mov
lods
jecxz
mov
cmp
sbb
pop
lcall
cld
cmc
mov
testb
inc
jecxz
lock
jecxz
sub
cli
into
int3
mov
mov
mov
iret
movsb
push
addr16
leave
mov
fisubs
push
jl
ss
mov
push
les
mov
dec
cmc
nop
sbb
dec
xchg
imul
xchg
pop
sarb
pop
