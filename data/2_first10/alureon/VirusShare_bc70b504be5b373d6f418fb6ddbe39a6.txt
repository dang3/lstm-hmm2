push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
out
es
jae
test
dec
es
adc
xchg
xor
adc
pop
or
pop
fs
sub
lret
mov
lcall
or
orl
fiadds
add
sti
push
cmp
jns
pushl
aas
cltd
popf
push
aaa
jg
and
hlt
mov
ljmp
push
daa
mov
stos
stos
and
rcr
xchg
pop
fimuls
xchg
je
and
xor
mov
stos
add
adc
inc
xchg
int
inc
sub
mov
jno
or
sahf
jp
inc
jl
lds
aam
jg
xchg
inc
xchg
push
add
cmp
pop
jecxz
leave
jae
cmpsb
es
dec
cmpsb
jns
add
sbbl
adc
mov
jle
add
add
lods
add
dec
test
pop
jo
sbb
inc
mov
xchg
sub
lret
insl
and
aas
iret
add
dec
cmpsb
and
ret
gs
inc
out
or
aad
pop
cmpsb
push
loopne
repnz
ljmp
cmp
xchg
gs
pop
jmp
scas
or
add
jl
or
add
jg
leave
std
mov
lds
fdivrs
mov
pop
fimuls
lret
pop
xor
or
je
add
mov
jb
xor
adc
cli
aam
adc
dec
and
test
sbb
xlat
sub
xchg
cmc
mov
mov
xor
cmp
and
push
add
aam
or
pusha
sbbl
sbb
ja
xor
aad
add
mov
call
xor
loopne
inc
or
sub
test
cmpsl
push
pushf
out
aas
xchg
jno
fucomip
xchg
inc
mov
add
lods
and
pop
lahf
jle
test
stos
inc
mov
mov
int3
call
movsl
adc
cmp
mov
mov
jg
imul
fisttpll
jge
fs
add
sub
testl
aas
sbb
mov
nop
js
lcall
sbb
cwtl
cmpsl
pop
and
sahf
push
test
xorb
push
jp
je
mov
aaa
xchg
push
ljmp
and
jbe
mov
xchg
loopne
xchg
add
jb
push
stos
sbb
scas
ret
js
inc
int3
out
xchg
adc
lret
aam
js
xchg
mov
stos
aaa
and
mov
inc
jp
stos
lcall
mov
sub
xchg
mov
mov
lahf
daa
out
je
sub
cmp
ss
lcall
jp
lahf
enter
jmp
in
jecxz,pn
jbe
adc
mov
pop
push
lods
push
call
mov
jg
jae
xchg
mov
dec
cmpsl
push
or
addb
add
lods
xchg
aaa
repz
push
mov
pop
pop
mov
das
sub
aas
push
xchg
push
dec
dec
cmp
cmp
sbb
cli
mov
loope
xchg
adc
fucomip
out
adc
negb
imul
fldl
xchg
cltd
in
loop
mov
inc
sub
adc
jl
dec
cmpsb
xchg
loop
adc
test
lods
jp
jnp
xchg
outsl
jnp
mov
add
cmpsl
cmc
xchg
rcr
dec
sbb
pop
es
mov
jb
mov
cmpsb
test
pop
pop
and
jg
mov
mov
xchg
dec
negl
or
xor
roll
nop
or
cmpsb
icebp
fdivs
sub
xchg
stos
fincstp
data16
jo
inc
test
out
popa
mov
andl
lret
cmp
int
push
fistps
imul
add
int
in
inc
loope
push
lret
mov
xchg
sbb
jp
mov
popa
ret
sub
sbb
std
cltd
mov
repnz
addr16
or
stos
int
lcall
pop
or
call
repnz
push
arpl
jnp
inc
adc
xchg
or
sarl
inc
iret
pop
xor
sub
aam
jg
pop
test
xor
clc
inc
inc
fwait
lret
add
push
cmp
adc
das
jne
xor
add
jns
push
and
mov
test
cmp
mov
push
xorl
in
fdivl
add
insl
sbbb
or
xor
inc
ds
gs
pop
push
sbb
mov
mov
out
mov
push
sbb
inc
xor
dec
push
lret
mov
inc
int
and
aam
jle
sub
scas
xchg
jne
nop
xlat
dec
arpl
jne
icebp
or
nop
dec
leave
fildll
jp
adc
xchg
sti
addb
cld
xchg
stos
ficomps
push
loopne
fcompl
lahf
dec
mov
mov
test
add
and
dec
into
fxam
hlt
insl
stos
pop
jge
sahf
sbb
aad
or
inc
inc
out
xchg
cmc
jp
pop
xchg
jp
in
push
xor
xchg
ret
push
mov
adc
add
push
xchg
inc
inc
mov
dec
inc
sti
mov
test
test
pop
clc
arpl
mov
pushf
jmp
mov
js
pop
dec
xchg
xchg
sti
call
shll
daa
test
call
pushf
scas
mov
pop
fiaddl
je
xchg
push
stc
xchg
dec
es
and
stc
pop
mov
xchg
addr16
sub
mov
fnstenv
dec
ljmp
mov
fmull
shlb
andb
into
mov
xor
rolb
in
add
mov
in
xor
and
sbb
imul
jmp
adcl
push
enter
popl
xchg
call
xor
enter
push
jns
lds
insb
das
lcall
lea
lahf
jg
clc
es
mov
dec
cmp
add
cli
ror
inc
ds
mov
fmulp
pop
shrb
rcrb
pushf
imul
fildll
mov
or
mov
fdivl
mov
sbb
mov
pop
xor
stos
aam
fidivrl
es
push
repnz
pushf
sbb
mov
push
sub
mov
dec
ret
xlat
jp
pop
loope
dec
jbe
popf
sub
sub
lea
dec
mov
push
inc
adcl
aam
bound
ja
das
data16
nop
dec
gs
adc
pop
movsl
aad
jecxz
shr
fs
mov
mov
push
cmp
push
pop
loope
out
test
xor
sub
inc
add
push
das
or
lods
add
stos
pusha
push
xor
push
mov
mov
mov
mov
out
xchg
cmp
or
inc
dec
jmp
sbb
push
inc
sub
es
push
jns
pop
mov
add
add
adc
and
divb
push
or
add
inc
cli
cmp
daa
pop
in
stos
jmp
out
notb
adcb
push
arpl
cld
fists
jl
scas
sub
mov
inc
cmp
testb
inc
arpl
test
sbb
popf
cmp
ja
movsb
or
fwait
mov
sub
lret
enter
ja
jno
seto
pop
movsb
mov
push
arpl
stos
fistpll
sub
and
cwtl
and
jnp
sbb
or
or
pop
call
dec
andl
mov
dec
sarl
loope
lds
xor
out
inc
xchg
jecxz
cmpsb
das
adc
arpl
fimuls
and
dec
and
jae
cs
xor
test
fbld
mov
repz
cmp
mov
inc
ja
addps
push
xchg
gs
mov
popf
jp
data16
aaa
push
sbb
jmp
mov
shr
imul
stc
and
lret
pushf
jmp
or
xchg
lock
imul
lds
fs
mov
inc
mov
mov
push
in
rolb
shr
and
js
daa
scas
pop
insl
fdivp
cmp
push
push
add
inc
repnz
adc
cmc
out
lock
xlat
pop
xorb
outsl
adc
aam
xchg
push
pop
adc
in
or
shll
xor
xor
mov
in
mov
je
std
mov
pushl
mov
pop
jg
out
cmp
arpl
shll
dec
scas
shlb
aam
orl
pop
pop
test
sbb
iret
mov
out
fldenv
add
cli
adc
dec
popa
test
insl
jbe,pt
leave
mov
mov
or
xor
movsb
sub
xor
faddl
mov
add
lds
mov
and
mov
cltd
imul
das
shl
pushf
faddl
sldt
add
add
dec
mov
or
sub
add
mov
aaa
fwait
mov
aam
pop
cmc
or
mov
test
jg
pop
ja
mov
inc
cmp
mov
insl
push
inc
sbb
loope
or
sub
add
xchg
out
popa
xor
push
lcall
rolb
enter
loopne
ss
shlb
inc
mov
push
cmp
pusha
ret
sti
adc
pop
jo
and
add
add
jg,pt
jae
movsl
shl
jle
ja
pusha
push
add
push
ja
xchg
sbb
pop
icebp
push
sub
pop
xchg
add
out
popa
aam
xchg
es
aad
addr16
sbb
data16
jno
push
pop
movsl
je
sbb
movsl
ret
and
jg
jmp
jbe
jae
xorb
nop
mov
int
sub
cld
pop
dec
roll
add
repz
fdiv
nop
jne
add
add
cmpsl
aad
sub
pop
mov
pop
mov
dec
cltd
jle
insb
mov
add
les
jle
push
fnstsw
sub
add
mov
ret
mov
pop
or
cmp
pop
jp
imul
les
loope
xchg
popa
push
sbb
fld
stos
lods
pop
loop
jecxz
fldcw
sbb
and
and
ja
imul
mov
add
add
push
cmpsl
outsb
int
or
adc
lcall
movb
jle
adc
jne
imul
mov
lahf
mov
mov
ja
xchg
iret
mov
in
inc
cmp
test
mov
cwtl
mulb
mov
adc
jbe
jl
aaa
dec
sub
mov
mov
push
adc
das
int
xchg
call
loop
and
and
jnp
lret
pop
lret
lock
mov
iret
icebp
stos
clc
add
mov
jecxz
bound
repz
cmp
fsubl
pop
sub
std
or
dec
pop
popl
mov
mov
fldl
iret
sub
push
cmp
push
lcall
adc
xor
inc
xchg
iret
adc
dec
adc
xchg
or
xchg
stc
mov
cmpsb
and
das
xlat
lahf
inc
outsl
clc
lret
mov
inc
ficomps
mov
jg
and
loop
mov
scas
mov
sub
xlat
pop
in
add
mov
scas
nop
lcall
repz
dec
or
insb
pop
pop
sbb
cld
mov
dec
out
movsb
test
test
push
cmpsb
cwtl
scas
adc
jno
xchg
mov
clc
mov
jge
insl
out
cmp
in
xor
ret
add
mov
sti
push
lea
xchg
xchg
xor
ret
xlat
lods
jl
push
xor
jbe
jp
xchg
push
popa
dec
mov
and
dec
jb
jnp
es
jp
and
sub
cld
lods
out
pop
stc
ss
pusha
ja
push
xchg
ret
dec
xlat
xor
add
adc
leave
cmp
mov
mov
cmp
mov
das
xor
xchg
ds
jno
pushf
jecxz
lret
add
outsb
ds
jae
lock
cwtl
sarb
repnz
cwtl
out
mov
xor
les
int
mov
mov
jbe
bound
and
std
xchg
shlb
aas
int
ficompl
loope
aaa
jnp
or
nop
pop
dec
imul
cmp
fldenv
and
ret
sub
and
mov
arpl
rcl
loop
in
fisubrs
stos
dec
jg
cmp
push
movsb
mov
lock
mov
lahf
lret
mov
sub
adc
and
lods
add
pop
call
arpl
mov
xchg
dec
idivb
mov
xor
in
sbb
lods
push
xor
stos
adc
jnp
or
cmpsb
mov
mov
ss
lea
add
pop
enter
pop
insl
inc
bound
shr
insl
popa
add
sub
jle
sbb
mov
nop
inc
or
int
xchg
adcb
pop
test
cmp
cmp
jl
mov
mov
xchg
mov
mov
lret
repz
push
pusha
subl
push
fbld
stc
rcr
inc
clc
add
or
pop
inc
fdivrs
dec
shlb
pusha
push
inc
xchg
test
lahf
cld
out
ja
fidivs
stos
mov
jp
xchg
imul
movsb
xorl
mov
lcall
call
sub
iret
lcall
divb
ja
int
pop
fnstenv
jns
pusha
jne
add
cmp
add
inc
pop
mov
mov
push
imul
xchg
fisubrs
add
shrb
std
clc
rcrl
leave
fisubrl
mov
fs
movsb
shll
outsb
dec
fiaddl
mov
push
push
xchg
add
addb
ret
andl
sbb
mov
mov
addb
add
int
mov
xchg
cmpw
add
les
pop
lret
mov
xor
push
ljmp
add
pop
mov
aam
xlat
clc
hlt
hlt
add
jecxz
dec
out
aas
int3
mul
pop
stos
sbb
aaa
int3
lret
pop
fldt
mov
stos
je
jnp
adc
sbb
add
push
pop
jb
mov
push
leave
mov
out
dec
adc
push
xchg
out
dec
pop
push
mov
jne
xchg
inc
jbe
cmpsb
push
out
fcomi
push
shll
dec
mov
cmp
iret
dec
fdivs
mov
push
mov
je
dec
inc
push
inc
xor
shlb
add
sbb
sahf
setbe
jge
adc
xor
pushf
pop
sub
cld
jbe
sbb
in
jae
ucomiss
fnstsw
mov
and
push
pop
int
outsl
fldenv
or
pop
and
out
int
jge
outsb
loop
ljmp
adcl
cmp
movsb
mov
dec
mov
jae
jb
add
movsb
in
popa
cmp
jno
int
rorl
stos
push
imul
jo
mov
or
cmp
sbb
mov
mov
fcomps
das
add
jae
mov
repz
dec
movsl
cmp
icebp
inc
outsl
fdivrp
in
dec
sub
xor
adc
aad
cmp
sub
mov
adc
out
cmp
mov
or
movsl
jb
and
out
ljmp
jb
sbb
jne
xchg
shrb
pop
enter
icebp
std
and
mov
or
test
ficoml
ds
pushf
cmpsl
mov
mov
jl
dec
pop
sub
dec
or
jno
lret
pop
test
jl
jle
jge
pop
sbb
xchg
xor
rolb
insl
cmp
in
mov
or
int3
push
gs
mov
loopne
adc
test
nop
inc
cli
bound
je
xchg
inc
cmc
inc
in
add
mov
mov
gs
fldt
sbb
or
iret
mov
fcomip
pop
aam
std
outsl
xor
push
sbb
xchg
sarl
lods
roll
pop
pop
pusha
repnz
into
nop
add
out
cwtl
sbb
rolb
scas
fnsave
pop
sbb
push
out
and
leave
xor
test
js
cltd
fwait
and
and
jo
shlb
shll
sarb
pop
dec
mov
enter
add
sbb
scas
push
or
into
sub
cmpsb
push
lods
aad
scas
cltd
jp
inc
pop
pop
mov
out
out
jecxz
outsb
pusha
aad
xor
sbb
cmp
push
sub
push
pop
in
gs
sbb
mov
rorl
add
pop
in
loop
or
sbb
ja
inc
not
xor
stos
filds
fldcw
dec
int3
addr16
push
aad
push
xchg
fidivs
xchg
clc
inc
cltd
push
pop
ja
xor
into
xor
add
add
xchg
sbb
scas
dec
pop
pusha
cmc
sub
lret
int3
addr16
mov
jb
cmp
mov
mov
mov
lahf
mov
test
adc
sbb
jne
mov
idiv
dec
xor
aam
imul
imul
jmp
sub
jnp
pop
cmp
int
pop
cmp
addb
and
pop
movsl
pop
in
inc
lcall
add
out
pop
dec
out
fidivrs
ja
sbb
mov
test
stos
xchg
popa
aad
std
inc
ficomps
xor
ret
push
push
fwait
mov
mov
dec
stc
fmul
jns
movsb
dec
ret
into
inc
pop
dec
pop
inc
sub
fs
pop
dec
test
stos
out
clc
sbb
jae
push
lods
mov
loopne
sub
jns
push
jp
outsb
addr16
fwait
das
sbb
outsl
stos
cmp
das
repnz
add
dec
js
pop
and
fstpl
scas
cmp
xchg
adc
or
out
test
mov
xor
enter
xor
cmpsb
sub
hlt
cmc
repz
aam
adc
lea
cmp
pushf
mov
or
sti
cs
sarb
pop
mov
pop
es
pushf
sbb
imulb
stc
ror
icebp
mov
push
xchg
js
mov
adc
jo
pushf
imul
add
inc
stos
popf
inc
andl
adc
fstps
pop
dec
divb
ret
dec
inc
mov
inc
jo
add
dec
lcall
shlb
lock
push
pop
jle
xchg
lcall
sbb
in
insb
pop
xchg
push
data16
mov
in
xor
test
hlt
and
pop
inc
cltd
add
push
pop
pop
call
add
mov
sbb
mov
frstor
rolb
adc
cmp
mov
hlt
sbb
shr
pop
sti
pop
icebp
mov
cmpsb
scas
mov
dec
clc
loop
repz
jmp
cld
inc
push
lahf
imul
pop
loope
sbb
bound
lods
sub
adc
dec
cmpsl
jnp
push
pop
cmpsl
lods
or
add
dec
lods
and
dec
push
inc
xchg
jle
fldcw
out
test
xor
push
das
shrb
jg
push
divl
cld
inc
and
dec
movsb
pop
leave
xor
push
jnp
idivl
shrb
mov
pop
sbb
cmp
stc
xor
or
es
orb
ljmp
sub
outsb
insl
sub
lds
dec
orl
cmpsb
mov
aam
jne
inc
add
add
popa
or
rolb
sbb
mov
lods
xlat
aaa
aam
push
mov
jmp
pop
xor
add
add
data16
leave
mov
mov
inc
into
cltd
inc
aas
cld
mov
call
add
nop
std
addr16
cmp
inc
pop
mov
cmp
and
or
insb
or
repz
insb
and
sub
push
inc
adc
nop
das
roll
add
sub
mov
dec
loop
rclb
jb
mov
push
jb
and
sub
jg
cmp
cmp
data16
sbb
bound
inc
in
test
mov
out
fisttpl
mov
fbld
mov
dec
add
mov
std
or
mov
or
push
outsb
test
sub
lcall
mov
sbb
add
fwait
jmp
mov
jmp
add
cli
pop
and
insb
or
bound
fwait
mov
outsl
mov
inc
daa
movsb
xchg
push
and
pop
or
adc
mov
dec
add
pop
inc
cmpsl
or
cmpsl
xchg
xor
fs
popa
out
push
dec
pop
mov
stc
andl
data16
or
addb
dec
push
mov
dec
sahf
or
int
insl
mov
loopne
pushf
das
lahf
lret
xchg
xchg
add
dec
jmp
jnp
sbb
aad
pop
xlat
scas
in
inc
xor
mov
movsb
mov
and
sbb
dec
xor
xor
loope
cmp
push
mov
jb
pop
dec
sti
pop
xor
sub
pop
aam
es
jecxz
push
push
dec
iret
pop
mov
mov
and
mov
jmp
fwait
sbbl
add
and
cmc
in
test
add
stc
repnz
repz
xor
rclb
xchg
int3
test
xchg
or
stc
popa
and
stos
lds
sbb
push
repnz
and
sub
pop
das
push
jmp
jno
push
lods
xchg
mov
sub
pop
pop
mov
cmc
cmpsb
arpl
dec
pop
shl
stos
test
test
rcr
sahf
scas
and
movsb
xor
xor
ficomps
lcall
add
lcall
cltd
add
xor
mov
dec
jg
and
xchg
pop
ljmp
and
test
inc
pop
jne
leave
test
movsl
inc
loopne
pushf
call
lds
stc
adc
movsb
and
jb
jle
fiadds
push
cmp
shlb
sbb
jmp
push
pop
icebp
push
add
add
das
clc
mov
inc
adc
lret
inc
rolb
fs
neg
fists
lea
inc
dec
outsb
lret
sub
pop
repz
es
mov
cmpb
mov
mov
sbb
add
pop
jo
sbb
adc
mov
push
push
outsl
jge
dec
jb
mov
pop
icebp
dec
insb
mov
dec
dec
incb
cmp
stc
cvtps2pi
lret
repnz
lods
cmp
loopne
xor
pop
dec
loop
sub
nop
int3
lahf
jl
cmpl
jge
movsl
stc
dec
cmp
cld
out
cmp
out
jecxz
inc
repz
in
or
mov
push
fisubl
mov
and
mov
inc
aas
jns
aad
lods
mov
std
push
add
or
sbb
jmp
int3
or
and
add
add
mov
int3
jecxz
inc
ljmp
scas
rol
outsl
pop
call
sub
adc
sbb
dec
stos
fidivrl
rcl
test
adc
movsl
lds
mov
jp
lret
or
stc
dec
out
pop
mov
sub
outsb
mov
rcrl
ljmp
iret
into
rcll
es
ror
into
add
pop
sub
lret
jo
shrb
dec
aam
xchg
js
sbb
lcall
std
arpl
bound
subb
cld
ficompl
sbb
in
mov
add
std
mov
fnstsw
ret
dec
pop
dec
jg
xchg
in
sbb
stos
jmp
add
lea
call
mov
ljmp
lods
outsl
xchg
jle
add
xor
loope
data16
sbb
sub
cmp
xchg
stos
call
dec
aaa
lcall
add
cmp
mov
xchg
and
icebp
xchg
pop
ja
xrelease
mov
push
ret
fs
call
cli
shlb
sub
xor
push
sub
jg
fmull
mov
outsl
out
out
mov
lds
lahf
mov
lahf
cmc
inc
loope
out
lods
sbb
xlat
mov
push
sbb
mov
dec
adc
orl
cmpl
mov
dec
call
lods
push
fisttpll
xor
gs
and
add
add
fildll
add
out
inc
push
mov
or
sub
adc
inc
addr16
repnz
repz
add
mov
push
into
stos
js
ret
and
popa
sub
pop
pop
pop
ds
inc
dec
cmp
jo
ret
mov
loopne
sbb
stc
imul
inc
jp
mov
pop
sbb
xor
icebp
ficomps
mov
test
pop
repnz
or
lods
pop
jle
add
gs
imul
pop
jge
add
push
xor
mov
bound
mov
out
test
pop
sbb
adc
cmp
in
push
add
or
in
ret
push
sahf
xlat
test
repnz
mov
and
fistps
sbb
xor
jo
les
xchg
loope
in
pop
cmp
adc
jl
inc
xchg
hlt
cmp
pop
mov
push
lods
xchg
or
mov
cli
and
and
mov
add
xor
mov
loop
cmpsb
insb
rolb
mov
jbe
dec
gs
insl
loope
mov
out
test
dec
jmp
movsb
test
adc
lea
inc
arpl
cwtl
sbb
dec
pextrw
pop
jbe
addb
je
adc
test
mov
xor
arpl
mov
enter
stos
fcoml
pop
or
pop
mov
imul
mov
dec
sub
adc
imul
add
pop
sub
and
aam
xor
xchg
mov
mov
jo
xchg
loopne
or
add
cmc
lds
cmp
outsb
push
push
out
and
cmp
lcall
add
sub
imul
std
daa
cmpl
dec
bound
bound
add
popa
addr16
push
and
sub
popa
scas
sub
jl
neg
sarl
cs
mov
sbb
int
cmp
rorb
fs
push
cltd
mov
dec
std
cmp
or
jecxz
cmp
dec
pop
push
ljmp
xchg
roll
shlb
adc
jmp
jbe
add
and
mov
mov
adc
jp
push
xchg
lcall
or
push
sahf
pop
xchg
sub
mov
fs
push
js
push
and
xchg
adc
add
mov
roll
fstp
ja
js
popf
subl
dec
outsb
test
adc
jns
ljmp
sbb
cld
nop
mov
or
jo
and
lods
lods
mov
fisubrl
std
or
fwait
jle
arpl
iret
xchg
sbb
jp
pop
gs
iret
dec
push
insb
xlat
es
jae
hlt
shrb
push
das
push
dec
stos
scas
push
iret
sub
cld
dec
sbb
imul
sub
xchg
int3
and
loopne
and
jp
inc
push
test
jle
fs
xchg
je
adc
mov
lds
add
adc
sbb
aaa
mov
xchg
push
cmp
dec
dec
jp
hlt
and
rorw
dec
aam
pop
pop
jl
sahf
stos
stc
loopne
and
or
insb
push
mov
xchg
jns
mov
add
push
fsubrl
stc
inc
xchg
jge
xorl
int3
add
iret
push
jl
dec
xlat
jmp
push
into
sbb
xchg
mov
mov
fwait
pop
testb
testl
sub
push
jae
jmp
daa
xchg
int
in
lcall
cmpsb
push
sarb
pop
jmp
dec
push
mov
mov
or
hlt
add
inc
cmp
mov
and
int3
xchg
add
add
mov
push
or
dec
mov
movsl
loop
push
mov
les
or
or
jp
rcl
inc
outsl
mov
icebp
fcom
gs
xchg
mov
adc
sbb
lea
orl
and
xor
push
cmp
adc
aaa
inc
es
cmp
mov
or
xchg
insb
mov
jns
outsb
adc
xchg
mov
jb
add
add
jmp
add
ds
jno
hlt
test
out
insb
jmp
hlt
pop
sub
pop
imul
enter
data16
lods
arpl
mov
adc
filds
test
outsl
shll
rcll
mull
jae
stos
add
and
addr16
imul
push
xchg
cld
and
xor
scas
jge
lods
add
scas
jmp
