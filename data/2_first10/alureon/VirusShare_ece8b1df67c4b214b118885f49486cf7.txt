sub
mov
mov
pop
xchg
sub
mov
sub
mov
push
pop
pop
xchg
push
push
pop
pop
xchg
mov
xchg
push
mov
pop
sub
xchg
sub
mov
sub
mov
pop
pop
push
sub
mov
sub
mov
pop
pop
xchg
call
sbb
data16
popf
ret
gs
in
or
jne
ret
add
sub
daa
add
and
xchg
les
xchg
mov
cmpl
and
or
lahf
stos
or
mov
mov
mov
adc
jo
es
mov
push
jg
hlt
stc
lea
cmp
je,pn
pop
jno
pop
sub
inc
push
inc
jb,pn
sbb
je
icebp
push
or
or
cmpsl
xchg
sub
and
and
add
sbbb
or
outsl
test
popf
ja
push
or
dec
jecxz
mov
subb
xchg
dec
fstps
xor
test
jp
stos
sbb
mov
sbb
dec
push
movsb
mov
push
and
mov
push
sbb
leave
adcl
push
add
add
mov
push
mov
fnstsw
pop
sub
add
push
xor
fsubs
fdecstp
and
popa
out
jo
in
lock
inc
lea
loopne
mov
xor
hlt
push
xor
rcll
pop
cmp
inc
stos
dec
fdivrl
in
push
or
xchg
and
xor
adc
jno
rcll
test
aad
adc
adc
xor
and
dec
add
mov
sahf
jo
jne
adc
clc
adc
out
leave
mov
or
cmp
mov
push
lock
xor
jb
jno
jmp
in
xor
adc
push
fwait
rcll
dec
stos
rcrb
aad
fstp
addl
push
sub
insl
and
movsl
adc
sbb
and
je
arpl
mov
pop
ret
dec
push
mov
sub
out
cmp
inc
test
sbb
in
ficomps
iret
arpl
fadd
and
mov
pop
or
xchg
rorl
stc
push
jge
push
and
push
scas
scas
pop
lods
jo
and
fisttpl
adc
call
std
movsb
insl
push
xor
pop
push
push
push
add
jecxz
sbb
and
data16
fdivl
cmpsb
pop
xor
jl
sbb
js
pop
iret
push
nop
aaa
pop
int
cmp
pushw
insl
adc
mov
test
data16
push
cmp
je
mov
mov
mov
jne
aaa
divl
jne
mul
ret
xrelease
and
add
cli
fidivl
ffreep
pusha
fwait
movsb
jne
pop
cmp
mov
sub
dec
mov
add
push
aas
in
or
add
jle
stos
insb
or
push
xchg
push
adc
sbb
repz
mov
movsb
mov
in
in
ret
ret
in
sar
sub
xor
aaa
mov
jno
aaa
mov
call
mov
int
xor
push
sub
sub
xor
cmp
pop
or
cmpl
mov
ret
inc
jno
jmp
cmp
cmpsl
adcb
cs
xchg
pop
mov
mov
cld
jne
mov
sbb
es
mov
fwait
or
or
mov
jmp
inc
aaa
jo
cmp
repz
lds
fcoml
mov
daa
sbb
stos
out
cmp
mov
int
adc
dec
shrb
testl
xchg
movsl
aad
xor
xor
sub
pop
imul
fmull
insl
cmp
fistpll
les
push
in
movsl
mov
cmp
jmp
mov
sbb
in
xchg
outsl
lock
cmp
in
add
cmp
add
jno
dec
jl
inc
orl
icebp
dec
in
shrl
stc
or
nop
xchg
popf
fstl
cli
mov
and
jl
and
adc
je
push
xor
push
hlt
add
xchg
repz
cltd
xor
push
add
clc
fucomi
sbb
mov
jo
push
jecxz
mov
test
jbe
and
add
pop
sbb
frstor
pop
pop
xor
inc
pop
add
xlat
adc
jge
or
adc
xor
adc
cmp
inc
inc
mov
or
mov
push
test
push
jae
loop
das
xor
orl
loopne
fcoms
dec
adc
mov
rclb
dec
fs
jecxz,pt
sbb
jb
xor
or
mov
je
xchg
leave
push
mov
dec
pop
mov
jno
sbb
mov
push
cmp
sub
fistpll
xchg
inc
fwait
inc
dec
and
xchg
jne
push
xor
and
pop
mov
inc
fldenv
pusha
xchg
js
dec
or
mov
push
movb
cmp
pop
or
add
fsts
mov
nop
int3
jnp
les
out
add
mov
and
subb
or
out
mov
popa
mov
lds
mov
ja
popa
call
inc
sub
xchg
mov
xchg
push
mov
loop
push
pop
mov
les
movsl
cltd
daa
xor
mov
push
xchg
psubusb
lods
sbb
push
repz
pop
fmull
xor
je
push
enter
lea
out
pop
daa
lret
imul
into
pop
call
cmpsl
jp
insl
lahf
cmp
addb
int
lods
mov
and
inc
pop
psubusw
push
mov
test
hlt
cmp
pop
and
inc
clc
in
outsl
leave
dec
mov
push
add
cmp
stc
es
jecxz
adc
aaa
push
push
stc
in
inc
mov
mov
xor
push
fstpt
lds
push
sub
adc
xchg
inc
out
jbe
mov
mov
in
dec
andl
orl
insl
jp
xor
push
push
roll
mov
addr16
jg
movb
dec
pop
cmpsb
add
es
leave
sub
ljmp
cli
cltd
mov
mov
cmp
cld
or
repnz
mov
jo
popa
mov
in
outsl
cmp
inc
jb
push
xor
sbb
xor
pop
mov
dec
test
or
jne
sbb
push
stos
mov
test
loop
movsl
aas
cmpsb
js
sub
fcoml
mov
test
movl
shlb
sbb
and
syscall
dec
rclb
mov
push
sbb
sbb
sarb
add
iret
pop
dec
adc
mov
fdivs
or
or
andl
stc
pop
rcrl
cmp
or
cmp
test
xchg
data16
movsb
enter
push
mov
bound
mull
sete
lcall
add
jmp
arpl
into
neg
xchg
push
dec
push
sub
ret
or
dec
xor
pop
mov
mov
add
and
sbb
mov
nop
sub
cltd
push
insl
adc
xor
adc
je
cwtl
sub
mov
sub
outsb
and
test
sti
ja
adc
push
jp
out
adcb
and
jno
pusha
dec
repz
push
clc
pop
dec
scas
into
push
xchg
int
sti
aas
data16
jecxz
int
mov
adc
cmp
test
cmc
push
out
cli
push
test
sub
lea
push
jae
adc
dec
sbb
cmpsl
notb
mov
enter
lret
je
cmp
dec
cmp
push
stos
inc
popa
xchg
mov
je
add
jl
push
mov
repz
loopne
push
xchg
ficoms
sub
adc
xchg
jo
xchg
xorb
sub
dec
lret
cmp
aad
pop
iret
clc
push
int3
pop
push
mov
scas
push
or
push
mov
lcall
push
inc
in
lods
or
jmp
call
call
lret
pop
lods
and
mov
or
mov
xor
xchg
mov
andb
xchg
jle
inc
lea
lcall
cltd
push
xor
add
or
push
stc
cli
sbb
or
fwait
push
adc
aam
cwtl
test
hlt
add
mov
gs
ret
or
pusha
sub
sbbb
mov
hlt
jmp
jg
mov
js
sbb
and
mov
fwait
adcl
mov
jge
int
inc
mov
fs
and
inc
pop
add
repz
data16
cmp
adc
mov
cmc
jae
inc
pusha
pop
stos
xor
or
repnz
mov
sbb
iret
sub
xor
mov
rcl
xor
dec
and
inc
xchg
sbb
inc
xor
add
sti
xorl
push
add
in
js
cwtl
cmp
ret
scas
orb
nop
dec
nop
stc
sub
push
jnp
cmp
sbb
cmp
sti
or
mov
cmpsl
cmp
add
ljmp
data16
xor
cmp
add
dec
jno
or
iret
mov
sbb
sub
jl
lea
sub
inc
dec
or
stos
pop
movsb
inc
adc
push
mov
std
test
mov
nop
push
icebp
cmpsb
inc
hlt
xor
inc
push
movsb
sahf
test
cmpsl
inc
or
les
rolb
std
cmp
xor
sub
mov
lret
and
daa
xchg
sub
int3
sub
xor
les
mov
and
popa
orb
in
into
and
and
neg
or
ret
sub
pop
adc
dec
insb
and
jbe
add
or
or
mov
xchg
fwait
or
mov
cmpsb
jae
xor
push
xchg
push
xor
mov
add
inc
and
popa
test
sub
dec
fisttpl
pushf
fmul
push
xor
push
imul
xor
dec
outsb
dec
inc
out
outsb
push
sbb
push
insl
popa
lods
and
data16
add
jle
push
sbb
mov
frstor
movl
jmp
jae
ficoms
addb
pop
ds
cmp
lods
jo
pushf
mov
sti
pop
out
aaa
cmp
cs
push
push
dec
loopne
inc
inc
movb
inc
or
fs
outsb
cmp
sbb
push
mov
inc
out
inc
push
idivb
push
fcompl
dec
lahf
mov
inc
je
and
ja
add
pusha
pop
xchg
adc
insl
fidivrl
push
mov
jns
sbb
fildl
push
std
inc
insl
gs
push
jbe
sub
leave
jl
push
imulb
mov
outsl
or
insb
cmp
and
jle
push
jp
mov
xchg
pop
dec
outsb
arpl
testb
fildl
or
cmp
push
dec
jae
or
out
cli
lret
sbb
out
decl
das
sbb
or
pop
movsb
push
jb
ret
test
pusha
mov
pop
scas
stos
aaa
or
das
jbe
cld
mov
jmp
rolb
and
repz
cld
pop
pop
daa
xchg
xor
ret
jns
mov
cltd
bound
mov
daa
pop
ds
sahf
push
cmp
in
adc
dec
pop
push
sbb
notl
leave
lea
sbb
mov
adc
xchg
pop
jecxz
mov
shll
adc
aam
xchg
jns
mov
sub
sbb
fdiv
mov
and
push
shrl
ret
enter
mov
jp
outsb
jmp
mov
les
fs
fs
push
pop
add
and
aaa
addr16
dec
adc
xor
pop
push
loopne
pop
xor
iret
dec
leave
lods
jae
mov
xchg
mov
cmpb
nop
imulb
jmp
sub
lcall
test
jg
or
fs
dec
cmp
cltd
out
test
and
lahf
push
jae
ja
jno
xchg
jae
cmpsb
jl
insl
imul
mov
pushl
and
dec
popa
gs
hlt
in
dec
adc
pusha
push
cmpb
inc
mov
fadd
ret
jae
test
push
or
add
adc
and
mov
mov
sbbl
add
push
jne
mov
lret
pop
addl
mov
inc
mov
daa
xchg
mov
mov
add
mov
push
int
dec
andb
and
xor
xor
jne
test
push
ret
loop
mov
cmpsb
movsb
jbe
dec
outsb
repnz
push
inc
jg
mov
cmp
push
lret
jbe
pop
cmp
cs
push
or
mov
dec
lods
sub
daa
push
dec
dec
cwtl
mov
sbb
jbe
adc
inc
int
jno
and
cmc
je
mov
ljmp
jo
aad
dec
xchg
and
inc
inc
dec
push
and
dec
fldl
jo
push
outsl
in
ror
dec
popa
ret
add
arpl
push
enter
dec
cmp
rcll
scas
lcall
repz
or
cmp
ret
jg
outsb
jl
jae
inc
les
xor
mov
lcall
xchg
mov
mov
mov
outsb
mov
lahf
cld
jge
fisubrl
aas
pop
pop
sub
push
mov
loope
push
mov
loopne
dec
adc
or
jae
scas
mov
push
xchg
pushf
jmp
push
inc
jg
push
xor
adc
dec
and
call
xor
push
push
jns
mov
cs
das
dec
inc
pop
imul
xlat
jne
es
sbb
xlat
insl
jl
dec
and
add
in
pop
add
les
bound
fsubrs
lret
or
inc
sbb
loopne
icebp
sbb
or
fildl
sub
inc
jecxz
jns
dec
push
mull
mov
daa
aad
sub
push
or
andnps
mov
mov
outsl
sbb
inc
inc
push
ljmp
xchg
testl
jmp
mov
adc
sbb
adcb
sub
push
in
pop
pop
sarl
pop
in
mov
fsubl
inc
push
sub
dec
outsl
jo
push
shlb
pop
jp
iret
pop
jle
mov
addl
cmp
add
mov
xchg
es
add
mov
sahf
lahf
mov
mov
cmpsb
adc
test
sbb
add
push
xchg
mov
or
mov
jo
and
int3
int
ljmp
data16
add
fcmovu
outsl
clc
mov
loope
push
shl
push
and
in
in
pop
lret
inc
xlat
repz
inc
shl
add
cli
sti
dec
fdivr
call
add
mov
add
add
sub
adc
xor
sbb
cmp
pop
xchg
add
and
or
jl
popf
or
mov
xchg
sarb
pop
cmp
and
inc
cld
popa
add
insl
jns
clc
imul
nop
in
pop
dec
and
pusha
popa
rcll
jne
dec
sbb
std
into
sub
xchg
adc
andl
add
std
adc
mov
out
push
faddl
je
pop
out
popa
sub
mov
and
adcb
adc
shll
inc
mov
inc
inc
cmc
bound
stc
and
cs
inc
sbb
out
mov
pop
mov
dec
and
mov
pop
adc
jb
xor
adc
xor
mov
inc
aam
insl
mov
dec
mov
lea
es
and
sbb
ds
pop
cwtl
out
popf
cmpsl
mov
in
lods
stc
add
pop
add
repz
fwait
mov
sub
xor
xor
dec
mov
dec
dec
ja
push
dec
ljmp
nop
mov
mov
in
inc
loopne
mov
out
rclb
adc
xorl
inc
mov
inc
mov
inc
pop
push
pop
neg
mov
fcoml
test
loop
lahf
pop
mov
icebp
and
push
xchg
add
lret
sbb
clc
mov
iret
cmc
rcll
and
xor
add
add
pushf
mov
add
rcrl
xor
jge
sub
movsl
lods
cmp
orb
sbb
sbb
stc
insb
push
or
pop
xchg
ljmp
mov
push
jne
in
add
rorl
dec
push
pop
mov
fisttpl
sub
andl
cwtl
add
outsl
test
out
mov
outsl
repz
and
daa
dec
in
sbb
add
xor
pop
mov
out
jle
daa
mov
mov
adc
pop
mov
push
push
mov
jl
testl
les
lods
mov
hlt
add
addl
xor
imul
xchg
inc
inc
dec
dec
iret
jle
and
popa
jle
repnz
mov
cwtl
mov
and
fsubrs
and
lret
scas
sbb
and
sbb
xchg
fwait
jo
pop
pop
shlb
add
push
aad
xor
and
into
xchg
dec
push
add
mov
pop
cmpsl
add
sbb
mov
cvtpi2ps
rcl
idiv
leave
and
mov
mov
stos
icebp
int
dec
push
mov
stos
imul
mov
push
add
mov
add
dec
mov
push
fldcw
sbb
in
mov
xor
jl
cmpl
in
cmp
imul
and
pushf
push
fcompl
xor
sbb
jae
adc
lret
adc
cmp
sub
jmp
or
sbb
mov
pop
inc
cmp
xchg
and
cmc
and
scas
stos
dec
and
sahf
mov
push
xchg
popa
add
out
pop
fwait
xchg
addr16
xor
cld
push
movsb
xor
aad
scas
add
aaa
mov
inc
jae
adc
int3
cmp
add
iret
adc
cmp
jne
roll
in
inc
lahf
jle
fists
lret
mov
stos
hlt
jnp
aam
xchg
jmp
arpl
movsl
aas
gs
add
dec
test
cmpsl
xchg
mov
xorb
push
rorb
nop
out
add
out
dec
leave
mov
inc
ret
int
in
shlb
call
out
lahf
mov
and
scas
rol
arpl
fsub
ret
cwtl
adc
call
hlt
and
icebp
xchg
mov
xor
das
test
jae
lds
push
sbb
xor
out
bound
sbb
imul
mov
loopne
pop
in
out
pop
cmp
dec
sbb
dec
add
adc
add
inc
add
and
fimuls
cmp
into
jae
inc
fidivl
push
xor
jnp
aam
adc
jmp
dec
es
inc
and
lcall
mov
add
aas
dec
jp
sarl
int3
dec
cmp
fstps
mov
aaa
fnstsw
jmp
dec
or
and
xor
js
mov
add
sbb
je
in
cmp
and
inc
or
loope
gs
lods
jmp
mov
aas
dec
ret
xor
jl
and
jnp
xor
cli
fwait
int3
insb
rol
xchg
add
lret
mov
rcr
and
jecxz
adc
cli
out
mov
mov
and
jmp
add
cmc
das
jbe
mov
xor
or
and
add
push
sti
add
hlt
pop
xchg
cmp
gs
cli
mov
scas
and
bound
inc
or
mov
aaa
push
mov
and
xchg
add
adc
xor
stc
lret
cltd
sti
cmp
jne
fstl
es
rolb
jne
rcl
ljmp
and
fcmovu
outsb
sbb
xor
ret
int3
add
fstpt
movsl
fisttpll
lods
js
bound
mov
std
xor
pop
push
cmp
scas
loope
xor
add
bound
xchg
sbb
lods
sub
mov
fldl
test
inc
xchg
enter
int
xor
sbb
or
mov
jne
cli
repnz
add
inc
lret
in
or
cmp
fs
fdivl
loopne
sbbb
and
insb
push
loopne
push
sub
mov
pop
cmpsb
add
rcll
sub
jbe
add
jecxz
xchg
and
scas
sbb
dec
sbb
outsl
and
sbb
imul
test
xchg
rolb
add
mov
lcall
shl
je
add
inc
dec
push
inc
leave
fld
stos
insb
call
in
insl
insl
daa
lret
add
xor
in
mov
rorl
pop
and
movsl
gs
dec
prefetcht1
sub
inc
push
fsubrs
lret
div
mov
dec
insl
pop
sub
jb
sub
cmp
out
cwtl
and
sub
and
lods
xor
fiadds
and
sub
mov
pop
sub
dec
mov
les
in
cmp
add
add
add
jmp
jp
adc
or
out
dec
and
sbb
mov
and
mov
sub
inc
mov
and
jle
test
cmp
inc
push
mov
mov
js
mov
dec
leave
push
jb
repnz
leave
jo
and
inc
test
fisubrl
popa
xchg
roll
push
cld
sub
add
or
daa
mov
gs
pop
movb
xchg
ds
push
out
inc
mov
test
leave
repnz
add
sbb
mov
xor
or
imul
popf
out
cs
push
mov
out
mov
xor
add
jg
mov
cmp
jge
dec
scas
lock
and
sbbb
push
data16
jmp
jns
xor
mov
dec
shll
jmp
or
dec
data16
sbb
lods
xor
sbb
or
lcall
into
and
push
pshufw
inc
adc
adcb
call
xor
mov
std
or
jecxz
or
dec
lea
or
adc
jo
lock
subl
es
xchg
xor
push
in
sub
jl
sub
std
pop
pop
inc
mov
pusha
xor
push
xchg
cltd
test
inc
add
jl
int3
mov
das
dec
jecxz
mov
xor
imul
mov
aaa
mov
mov
stos
imul
mov
xor
sub
xchg
mov
xor
cmp
push
mov
pop
mov
negl
insl
sbb
es
test
hlt
notb
in
mov
pop
adc
and
test
jge
add
jns
dec
int3
xor
add
lock
rcrl
out
add
adc
pop
xchg
and
add
cmpsl
dec
dec
push
add
inc
mov
rep
rclb
jbe
and
mov
xchg
lahf
push
xchg
add
sub
sbbb
dec
pop
addr16
mov
in
into
push
sbb
arpl
iret
cwtl
aaa
hlt
and
xorb
sub
aad
scas
inc
les
and
cwtl
or
lds
xor
add
aaa
repnz
cmpsl
inc
fwait
xchg
lcall
ret
adc
outsl
inc
adc
ja
push
mov
lods
mov
sbb
xor
mov
cmc
xor
sbb
ss
enter
dec
mov
xchg
push
fistl
adc
add
or
popf
push
shrl
bound
dec
subl
ret
aam
out
fimuls
repz
mull
je
fcoml
mov
mov
stos
dec
and
lahf
sub
pop
sbb
lea
and
ret
or
repz
aad
sbb
jmp
xchg
dec
pop
scas
out
mov
movsb
call
jno
adc
cmp
sbb
fists
add
inc
ror
movsb
bound
mov
dec
fldl
addb
imul
jb
outsl
sbb
jmp
add
mov
rclb
ret
repz
sbb
add
mov
push
or
pusha
out
mov
pop
jo
cmp
imul
aas
bound
test
es
insl
mov
mov
push
test
jb
xchg
fnstenv
xchg
bound
and
ret
movsb
lret
sbb
lods
xchg
aad
jp
fsubr
out
call
loop
dec
pop
xchg
int3
popa
shlb
sbb
push
pop
in
and
sub
shlb
add
push
and
shrb
dec
cli
add
push
ja
or
inc
inc
add
and
popf
mov
fnstcw
push
and
pop
jnp
xchg
popa
push
ret
std
pop
lds
loopne
or
movsl
add
sbb
or
ret
xor
sub
dec
push
call
add
xchg
dec
hlt
fnstenv
hlt
sarl
mov
gs
iret
lock
pop
lret
pop
mov
adc
mov
cwtl
das
push
scas
addr16
imul
loopne
and
mov
sbb
cmp
xor
xor
cmpsb
mov
rcll
jnp
and
mov
aaa
inc
add
adc
adcl
cmp
addr16
mov
pop
push
jle
inc
mov
and
insl
ret
movsl
pop
add
sub
int3
xchg
mov
mov
dec
push
mov
xor
loop
and
xor
andl
cmpsl
add
les
clc
aad
data16
test
test
scas
or
movsl
mov
shll
sbb
sbb
cmp
add
and
fnop
inc
add
cltd
push
mov
int3
sahf
xchg
ret
push
lret
int
and
jmp
push
mov
mov
cmpb
out
dec
fisubs
mov
test
jle
jmp
inc
repz
and
call
xchg
shlb
ret
mov
aas
clc
mov
mov
or
shl
sahf
push
lea
cmp
movhps
cmpb
push
shlb
cwtl
mov
cmp
dec
or
push
fisubs
sahf
andb
int3
xor
cmpsb
sub
shlb
xor
ss
jns
out
in
shll
loop
cwtl
pop
push
xor
lcall
mov
mov
adc
and
les
mov
xchg
aad
xchg
mov
dec
pusha
jl
push
xchg
bound
enter
push
pop
or
jmp
pop
dec
lods
movsb
shlb
xor
out
scas
imul
jbe
aaa
xor
pop
mov
mov
test
ds
pop
pop
lret
fistl
or
add
mov
add
push
movsl
int
aaa
add
or
repz
dec
inc
add
and
pop
outsl
push
push
xchg
pop
shlb
cmp
aad
cmpl
mov
and
sbb
mov
nop
insl
cmp
mov
scas
cmp
sub
pusha
adc
lret
sub
push
cmp
pusha
push
int
pop
movsl
xor
aam
xor
inc
jge
mov
add
lret
mov
xchg
mov
jbe
jg
call
xor
movsb
stc
cmpsb
test
and
cmp
mov
push
sub
and
jl
shll
mov
or
out
icebp
out
xorb
sub
std
or
test
repz
add
mov
xor
stos
add
or
lret
push
sbb
sbb
in
shr
cmp
jge
stos
mov
adc
mov
push
imul
inc
call
outsl
cmp
xchg
mov
cld
fildl
leave
mov
or
jp
enter
ljmp
mov
addb
sub
add
pop
cmp
jge
in
xchg
dec
pop
push
mov
fucom
jo
pop
mov
and
inc
pop
add
leave
shrl
lods
jnp
pop
scas
hlt
add
mov
std
jge
pop
fldenv
mov
inc
repnz
jb
lcall
adc
add
dec
inc
mov
push
push
jne
mov
sub
pop
jg
push
pop
in
mov
loopne
dec
rolb
in
shll
stc
dec
cld
add
push
add
jg
aas
loopne
adcb
cmp
test
mov
and
push
imul
mov
jge
mov
cmp
xlat
adc
adc
push
out
rclb
stos
addr16
xchg
fisttps
inc
leave
test
and
cld
ja
shll
sbb
or
adc
sti
mov
les
pop
inc
pop
mov
mov
out
and
mov
push
push
and
cmp
sahf
jp
nop
outsl
or
sti
dec
push
add
xchg
mov
adcb
or
cltd
pop
fs
jmp
test
add
add
in
mov
aas
adc
push
sub
popf
pop
and
and
mov
mov
cmc
pop
pushf
jmp
and
pop
psubw
mov
rorl
add
pop
insb
int3
mov
or
subb
js
push
dec
pop
fstp
adc
mov
fistl
mov
arpl
fcmovnu
mov
mov
loop
fnstcw
stos
adc
xor
cs
lods
mov
cwtl
ja
inc
jmp
roll
jge
mov
enter
mov
aaa
add
sub
and
sub
cld
adc
mov
inc
add
or
xorb
es
lahf
add
inc
decl
lods
jns
cmp
jmp
jmp
out
nop
js
fsts
or
inc
test
and
and
lock
sub
jno
add
inc
adc
jbe
sbb
mov
mov
mov
call
sbb
adcb
inc
aam
xor
mov
fldz
shrb
repz
adc
adc
and
fnsave
add
gs
or
mov
mov
inc
adc
shl
sub
sub
movsb
or
stc
sub
hlt
jl
mov
gs
or
shrb
addr16
lahf
xchg
insb
pop
pmaxsw
add
jl
cmp
push
popa
jmp
int3
cmp
lcall
and
cltd
push
std
test
fmull
mov
pushf
dec
xchg
jo
add
mov
loope
adc
and
xchg
jno
mov
mov
imul
or
pop
je
xor
shrb
pop
jae
outsl
shlb
add
xchg
pop
jge
dec
mov
mov
clc
mov
ljmp
fisubs
push
jle
or
xor
jmp
add
or
sbb
fs
cmc
mov
add
jg
in
pop
ror
in
mov
jp
data16
mov
rorl
xchg
and
dec
adc
add
out
mov
add
push
ja
cmc
cmpb
popa
inc
xchg
rol
inc
test
adc
cmc
mov
cvtps2pd
xlat
das
ds
sbb
cmpsl
pop
add
cmp
mov
push
std
mov
add
outsb
mov
cmpsb
and
lock
or
dec
aam
xchg
fisubs
pop
xchg
mov
cltd
jmp
xchg
popf
incb
add
sub
and
sahf
les
cmpsl
cmp
dec
jae
add
das
ret
mov
xor
ss
xor
sbb
in
sub
out
mov
aaa
mov
cmpsl
pop
push
add
andb
roll
mov
in
loope
cltd
andb
push
jns
add
dec
in
cmpsb
add
out
push
in
lahf
in
insb
push
sbb
add
push
mov
test
lods
add
sub
and
adc
rcrb
in
push
push
xor
mov
lret
pop
shlb
pushl
jmp
lret
popa
shl
movsb
ret
add
imul
push
lret
mov
mov
jle
arpl
mov
adc
and
add
mov
cmp
and
inc
movsb
jo
shlb
daa
inc
xor
push
das
jge
call
add
stc
fwait
add
out
push
or
test
add
fs
pop
lods
mov
mov
mov
cltd
and
mov
mov
pop
lret
movsl
cltd
mov
iret
ja
and
out
in
push
xor
add
std
sbb
cmp
stos
inc
ss
int3
scas
add
cltd
cmp
xlat
out
mov
or
pop
aad
hlt
dec
popa
sbb
inc
outsl
mov
stos
mov
or
imul
dec
xor
jle
xchg
iret
mov
jge
mov
pop
out
xchg
sbb
std
cmp
push
stos
test
ffreep
outsb
mov
aas
push
push
and
mov
data16
adc
jae
pop
inc
sub
in
inc
addr16
add
stc
adc
cmp
in
or
mov
lcall
pop
stos
or
lods
les
ret
test
sbb
xchg
jnp
in
or
add
push
push
or
dec
arpl
insb
into
and
jmp
add
pusha
dec
mov
adc
in
scas
clc
push
loopne
mov
or
or
sub
add
ljmp
cmp
xor
test
fs
xor
mov
add
pop
out
dec
push
mov
mov
sub
push
faddl
lock
divb
and
aas
push
cmp
ss
pop
add
mov
js
call
and
and
push
mov
inc
insl
into
xor
mov
add
or
daa
sub
rcll
sub
into
in
shlb
imul
dec
cli
mov
mov
pop
popf
adc
test
pusha
dec
xor
int
pop
adc
nop
mov
jb
in
cmp
loop
jl
cltd
cli
inc
fwait
xor
repnz
mov
pop
mov
xlat
bswap
mov
push
mov
add
sub
mov
insb
and
idiv
mov
jge
mov
in
mov
or
mov
sub
hlt
aas
addr16
add
add
cmp
cmpsb
mov
test
pop
dec
push
or
push
in
xchg
add
mov
add
xor
fisubl
std
push
icebp
stc
les
xorb
dec
mov
mov
xor
add
xchg
xchg
push
add
jo
popf
rolb
mov
repz
adc
and
mulb
sub
idivl
and
cmp
movsl
mov
outsl
pop
add
xchg
pop
and
pop
xor
mov
cli
inc
inc
fnstenv
enter
adc
and
add
mov
and
imul
sbb
sbb
and
adc
orl
cld
rcr
inc
add
add
cmpsl
imul
fildl
fistpl
jge
add
mov
add
ljmp
movsb
sbb
fnsave
sti
andb
ja
push
pop
stos
dec
and
add
cmpsb
fdivrl
mov
push
imulb
pushf
div
lcall
stos
pop
pop
push
jo
les
mov
mov
xchg
add
push
pushf
scas
mov
js
addl
aam
ljmp
mov
push
jne
inc
sub
lods
push
ret
sti
notl
dec
mov
xor
cmpsl
scas
rcrl
iret
mov
movsb
jmp
or
leave
mov
cmp
jo
push
cmp
add
xor
sbbb
lock
mov
adc
fiaddl
int3
add
cmp
jbe
out
cmp
xchg
sub
out
add
push
es
js
scas
loope
shll
sbb
rol
ficoml
mov
out
push
push
clc
push
clc
pop
loope
jp
push
add
mov
fldl
pop
mov
pushf
sti
add
mov
add
mov
shl
out
call
js
adc
jb
loop
jp
inc
in
mov
stos
test
ljmp
adc
sahf
in
mov
xor
hlt
out
add
xorb
in
mov
mov
mov
or
repnz
cmp
inc
lods
jnp
xchg
cwtl
push
and
mov
scas
push
popf
leave
pop
shll
jp
push
out
paddw
mov
outsl
add
das
mov
dec
mov
add
mov
test
xchg
js
xor
mov
ja
fstpt
aad
cltd
or
lret
sbb
pop
mov
and
mov
adcl
bound
popf
stos
inc
push
insl
push
and
out
add
aaa
mov
mov
and
dec
insl
and
pop
add
xor
cmp
aaa
gs
add
into
or
outsl
mov
sub
in
add
fsubs
xor
inc
mov
dec
mov
adc
sbb
test
cmc
or
jo
mov
std
mov
dec
test
lods
xor
aad
xchg
push
and
pop
pop
jnp
add
sti
inc
fiadds
mov
push
daa
scas
mov
mov
xchg
cltd
psrad
sbb
push
pop
in
enter
push
popf
push
pop
movsl
push
add
cmpsl
inc
add
pop
pop
loope
pop
les
adc
and
mov
mov
push
dec
gs
das
fiaddl
mov
jg
test
shufps
lock
repnz
xchg
mov
outsb
mov
push
pop
bound
int3
jp
std
lock
add
xor
iret
icebp
stos
pop
jg
insl
inc
out
notb
push
and
scas
sbb
stos
add
lock
cltd
sub
push
inc
roll
xchg
lea
fnstsw
js
cmp
scas
sbb
sarb
pop
test
add
scas
sub
mov
popf
and
adc
mov
into
adc
sbb
lcall
add
lahf
inc
xchg
cld
pop
mov
ljmp
and
jl
mov
shr
movsl
or
sbb
and
in
call
stc
sub
sub
or
or
push
outsl
icebp
add
push
pop
daa
es
add
jp
gs
and
mov
jle
mov
sub
sub
pop
and
mov
and
pop
and
pop
loop
add
add
push
imul
sarl
mov
inc
sub
add
loopne
arpl
pop
ja
xchg
insl
call
lret
xorl
pusha
test
shlb
cltd
jne
xchg
sahf
pop
mov
pop
aaa
add
mov
jns
fdivrl
stos
lcall
and
daa
pop
fs
add
cld
xor
das
add
in
adc
out
jge
inc
jecxz
pop
push
xor
pop
adc
push
pusha
lods
sub
and
mov
cmpsl
sti
popf
xorl
inc
call
pop
fdiv
xor
in
mov
add
sbb
pop
xchg
adc
daa
sub
xor
mov
sbb
in
test
mov
shll
ret
add
or
mov
xor
jb
cmp
inc
jmp
inc
dec
inc
add
mov
lds
or
mov
nop
or
mov
testb
xchg
pop
mov
xor
pushf
dec
and
mov
mov
clc
pusha
cs
jno
and
add
jb
xor
cmp
mov
sbb
dec
lods
pop
sub
xchg
push
and
and
and
mov
cmp
jg
xor
stos
mov
and
and
enter
cld
mov
mov
fbld
ficoms
incl
shlb
cmp
or
sbb
test
stos
jb
outsb
add
popa
fcmovb
or
mov
mov
push
rcr
fcmovb
xchg
inc
lds
lret
es
mov
adc
shlb
ja
pop
pop
lods
lret
test
daa
repz
add
inc
cld
jb
popa
and
cld
and
mov
rcr
cmc
test
cmp
xlat
out
xchg
adc
mov
mov
add
xorl
out
jo
and
and
out
add
push
pushl
jns
es
add
push
jne
mov
mov
inc
inc
and
imul
repnz
rolb
sbb
and
mov
or
mov
and
or
dec
add
xchg
shl
loopne
and
mov
and
jno
mov
add
inc
inc
add
add
xchg
int3
adc
stos
lods
xchg
mov
out
pop
sti
addr16
mov
xchg
scas
es
out
xchg
add
sub
mov
dec
and
push
inc
and
jns
stc
jnp
cmpsb
mov
dec
out
and
orb
popf
mov
sahf
dec
ret
sbb
add
inc
push
add
sbb
arpl
insl
add
cwtl
xor
scas
maskmovq
mull
cmp
dec
sub
and
loopne
test
sti
mov
cwtl
in
aad
add
ja
rcrl
ret
add
cmc
add
repz
push
inc
xchg
neg
or
and
inc
jmp
jmp
or
lods
daa
arpl
xor
stos
dec
push
push
mov
mov
ror
popa
int
dec
es
les
pop
movsb
xchg
outsl
pop
cmc
ds
mov
cmpsb
cli
push
sbb
negl
sbb
add
dec
adc
xchg
addl
ret
flds
imul
and
push
adc
adc
mov
daa
cltd
movsl
decl
pop
xor
repz
jmp
cmp
subps
jmp
jns
fisttpl
and
jmp
call
mov
push
cld
sahf
and
mov
jno
inc
and
add
fs
mov
aas
cld
sub
and
leave
add
movsl
xacquire
dec
repnz
push
sub
repz
xor
test
inc
xchg
in
fistpl
sbb
out
jns
pop
inc
sbbb
adc
call
inc
shrl
es
adc
xchg
pop
js
add
iret
icebp
xchg
lds
mov
fmull
add
cmp
xchg
jbe
dec
add
arpl
cmp
mov
mov
xlat
mov
xchg
test
pop
cli
cmp
push
mov
aam
sbb
mov
inc
add
inc
enter
sbb
mov
testl
and
adc
bound
mov
dec
mov
lods
and
jnp
mov
add
inc
pop
lret
test
ret
arpl
inc
xor
jo
outsl
add
adc
dec
and
jmp
xchg
in
add
dec
les
pop
and
lds
mov
mov
and
mov
mov
fisttpl
jp
call
sar
jmp
sub
push
mov
push
adc
mov
jo
movsl
add
jbe
scas
inc
inc
sbb
leave
add
dec
jo
add
movsl
lcall
mov
xchg
adcl
insl
adc
mov
pop
in
sbb
in
js
stos
mov
push
mov
andl
fs
es
adc
mov
push
push
jne
adc
out
aad
push
mov
cld
outsb
jae
mov
lds
xchg
sbb
loope
in
dec
xlat
cmpsl
inc
jge
and
fistpl
xor
jo
imul
jbe
ds
nop
or
jo
cmp
ss
test
push
jmp
and
jp
and
cmpsl
decl
push
xchg
and
mov
cwtl
and
push
movsl
sbbl
jns
in
notl
jnp
sub
ds
cld
push
stc
xchg
and
out
push
add
inc
push
incb
and
inc
or
mov
or
imul
xchg
add
ljmp
addb
fsubs
sub
out
mov
jb
leave
xchg
loopne
pop
push
push
inc
cmp
or
push
inc
bound
dec
fmull
pop
push
into
add
pop
pusha
dec
sbb
fistps
or
add
cmp
mov
mov
xor
les
mov
add
ret
xchg
sub
fstl
push
pop
pop
pop
lods
pop
fiadds
cs
out
lret
inc
xor
ss
pop
sub
push
add
jae
xor
push
clc
mov
adc
arpl
stc
mov
movsl
movsl
in
xchg
ss
xor
add
add
pop
gs
xor
jbe
mov
mov
movsl
arpl
rol
pop
daa
test
ret
in
std
inc
sub
mov
mov
xor
orb
pop
and
ss
push
push
arpl
mov
dec
push
pop
adc
fidivs
lods
jg
xor
bound
inc
pop
xchg
imul
mov
fs
and
jle
lods
or
into
je
adc
push
out
pop
std
cmp
xor
lahf
cmp
mov
incb
arpl
cmp
push
push
pop
dec
jae
xlat
sti
loop
mov
push
cmpsl
lcall
lea
outsl
xchg
call
out
push
and
lds
push
xor
sbb
aam
movsl
push
lret
pop
add
mov
add
incl
jbe
inc
add
cmp
lret
cmpsl
in
xchg
inc
sbb
jg
outsb
push
and
and
aad
sub
xor
mov
cmc
fstl
cmp
adc
mov
sarl
clc
push
mov
jbe
xchg
pop
popa
imul
xor
dec
push
mov
sbb
dec
sbb
dec
adc
jl
mov
sbb
push
pop
scas
nop
in
mov
inc
rcr
leave
add
cltd
add
dec
push
in
mov
into
mov
sbb
sbbb
pop
movb
jne
cmc
mov
jno
jmp
mov
sub
xchg
adc
les
mov
cmp
mov
lock
mov
and
and
clc
add
in
jae
and
jns
popa
loope
sbb
sbb
cmpsb
mov
lcall
cmp
fisttpll
xlat
addr16
xor
insb
push
and
or
cmpsl
dec
pop
nop
dec
push
add
aaa
frstor
cmp
out
loopne
shrl
std
pop
xchg
xor
pushf
jo
and
stos
cmp
negl
add
test
mov
jne
aaa
mov
dec
jne
xchg
repz
or
jmp
add
add
jle
in
popf
mov
add
xor
xchg
shrl
xor
jns
in
ret
nop
xor
sbb
popa
adc
fidivs
xorb
inc
mov
and
xor
pop
sarb
vpsrad
cmpsb
pop
movups
insb
xorl
jne
add
dec
lea
add
mov
mov
sub
insl
sub
jmp
and
repnz
mov
mov
xor
push
pop
mov
lcall
push
shll
and
imul
clc
jge
push
cmpsb
filds
lods
inc
in
addr16
out
das
mov
jb
xchg
les
es
xor
fsubrl
movsl
inc
in
push
push
push
stos
pop
pop
add
outsb
and
cwtl
out
mov
out
daa
dec
sbb
add
mov
mov
jle
mov
mov
xor
adc
add
test
dec
pop
inc
outsl
gs
pop
mov
mov
pop
daa
add
mov
add
and
ret
mov
inc
cld
addb
iret
out
jb
and
adc
add
pop
nop
jg
push
jecxz
add
shrb
inc
fdivrl
mov
das
imul
jecxz
repnz
sbb
adc
jbe
pop
add
sub
aam
add
jge
or
leave
add
aad
push
dec
mov
ljmp
es
rol
pushf
call
add
in
push
hlt
lock
int3
into
dec
cmp
scas
in
xor
mov
cltd
mov
push
mov
push
xchg
cltd
gs
fsts
inc
mov
cli
adc
arpl
cmp
push
sub
jmp
stc
mov
aam
and
ret
xor
sub
xchg
push
call
popa
mov
pushf
fwait
add
outsb
xor
into
mov
pop
scas
enter
pop
and
add
xchg
sbb
mov
add
xor
dec
sub
ret
and
cmp
pinsrw
push
pop
test
stc
add
sbb
std
adc
fistpll
scas
roll
aad
pushf
add
jbe
xor
pop
int
pop
xor
push
xchg
push
xchg
subb
daa
sbb
push
add
mov
jle
movsl
mov
and
adc
jge
call
xor
pop
rolb
mov
out
pop
imul
mov
cmpsb
push
add
sbb
or
sbb
mov
test
cs
jmp
push
cmp
push
dec
add
sbb
mov
in
das
push
sbb
cmpsb
pusha
pop
cwtl
fidivl
fisttps
pop
fsubs
pop
fwait
or
loope
add
cmp
inc
and
fistps
xchg
and
lods
pushf
xchg
stos
xor
ja,pn
orb
and
pop
loope
lods
sbb
adc
ret
pop
and
clc
xor
push
add
mov
push
add
ret
mov
push
popa
mov
ss
test
cmp
jb
cmc
test
rcrb
mov
and
dec
pop
iret
inc
call
xchg
adc
add
lock
push
aaa
mov
mov
push
hlt
inc
xchg
mov
clc
jns
daa
cmc
jecxz
and
mov
pop
mov
add
add
sahf
pop
lods
daa
aas
fcom
filds
add
jbe
es
rorl
add
mov
pop
dec
or
movsb
aam
insb
mov
mov
stos
notb
inc
push
mov
out
and
les
incb
mov
inc
dec
xor
jo
and
in
jmp
out
shl
inc
sbbb
and
sahf
aas
pusha
and
jne
call
cmp
shrb
add
sbb
movsb
mov
mov
out
mov
push
addr16
adc
cmp
rolb
mov
das
jl
and
pop
jle
sub
inc
shlb
inc
scas
mov
fistpll
sahf
pop
sahf
in
rcrl
add
aas
xchg
pusha
out
xchg
and
stos
or
jle
decb
jae
movsb
inc
pop
divl
push
insl
pop
pop
sub
push
jnp
add
shrl
push
stos
cmp
pop
aas
mov
mov
out
in
inc
jae
add
dec
test
jl
add
or
jp
aam
add
dec
outsl
and
adc
cld
mov
sbb
push
ljmp
lea
and
pop
loopne
sub
adc
and
push
dec
cwtl
roll
pop
add
adc
pop
xchg
mov
pusha
orl
addb
lds
in
popf
loop
sbb
or
add
and
sbb
fs
add
push
js
jo
add
xchg
push
xor
or
shll
mov
sbb
sarl
inc
fidivl
shrb
std
jnp
add
cltd
cmpsb
fs
cli
out
cmp
frstor
sbb
and
add
add
mov
mov
sbb
mov
movsl
mov
dec
mov
imul
movsl
pop
loopne
and
pop
mov
movsb
inc
hlt
mov
pop
or
sbb
mov
add
cmpsb
push
leave
sbb
pop
jo
sbb
cmp
fisubl
shrl
mov
pop
mov
and
xchg
sub
mov
lahf
roll
shrb
cmp
pushf
or
and
aas
pop
xchg
xchg
push
jnp
adc
movsb
sub
outsl
add
cmpsb
repnz
pusha
cmp
mov
lret
sti
call
aas
mov
jg
in
or
adc
push
cmpsl
hlt
test
in
test
cmpsb
jb
sbb
stos
push
jge,pt
cmc
leave
push
mov
adc
sbb
and
add
and
dec
mov
sbb
movsb
jae
outsl
jecxz
rol
add
fdivrl
fimuls
outsb
fimull
mov
shll
out
jns
and
imul
cmp
mov
lock
and
adc
test
andb
mov
xor
fstpt
in
ja
sbb
fnstsw
add
adcb
into
mov
shlb
adc
xchg
out
adc
ds
mov
add
loope
fwait
mov
pop
mov
sub
out
ljmp
shlb
mov
je
push
add
push
int
loopne
dec
fadds
daa
xor
test
cmp
inc
adc
faddl
jle
fs
push
add
sub
sub
mov
dec
add
movl
mov
cmpsb
ds
stos
insl
movsl
fstpt
mov
in
xchg
cld
pop
pop
loop
add
ljmp
push
aad
ret
dec
adc
ss
cwtl
dec
pusha
adc
stc
or
xchg
mov
mov
ret
push
sub
and
repnz
lods
add
pusha
sub
fnstsw
dec
cmp
dec
cmp
push
lahf
data16
test
lcall
lods
and
push
je
ja
popf
jns
outsb
inc
cltd
aad
add
gs
mov
dec
cmpsl
push
xor
adc
jecxz
fwait
mov
mov
in
dec
movsl
xlat
fdivrs
les
popf
aaa
adc
cld
and
and
lods
shr
and
repnz
outsb
push
bound
pop
cmp
and
jge
xor
sbb
mov
push
gs
ret
into
nop
or
js
lea
add
inc
mov
push
xchg
jnp
sub
icebp
mov
jo
cmc
lret
dec
popf
and
pop
cmp
push
out
fmull
push
push
push
in
add
and
sahf
jne
in
subl
add
xor
mov
and
lcall
lds
sbb
loope
fwait
popa
dec
adc
lahf
or
or
add
and
mov
xchg
das
shl
sbb
sub
enter
in
xchg
andb
cmc
cwtl
mov
jno
pop
leave
aaa
cmp
add
fisubrl
jle
and
pop
movsl
jle
add
lds
add
pop
fsubrl
mov
adc
lret
xor
push
loopne
jbe
imul
and
mov
add
addl
out
and
addr16
ret
lods
add
movsb
push
scas
sub
scas
lea
shl
xlat
and
sbb
pop
cmpsl
ds
or
and
lods
pop
loopne
add
daa
divb
repnz
adc
pop
mov
jnp
aad
mov
mov
lret
out
ss
call
repz
pop
stos
mov
and
scas
dec
js
aam
xchg
xor
loope
stos
pop
add
fidivrl
mov
xchg
fwait
xchg
push
dec
push
mov
outsb
es
xor
arpl
mov
push
mov
mov
push
fstpl
jecxz
mov
verw
loopne
sbb
and
sti
mov
hlt
cmp
add
pusha
insb
adc
enter
or
lcall
xor
jge
fisubs
shll
cmpsb
scas
sahf
and
push
fwait
mov
mov
pop
cltd
and
ret
iret
xor
jno
iret
test
inc
scas
dec
lcall
add
jbe
xchg
sub
pop
in
sarb
or
aas
xchg
cs
out
dec
and
arpl
fidivl
mov
lods
pushf
cmp
and
sub
add
jne
add
shrb
shlb
jp
push
vmread
dec
insl
and
in
dec
mov
mov
xchg
push
push
mov
mov
mov
dec
add
or
jae
mov
add
loope
in
mov
jge
sahf
es
stc
push
xor
mov
mov
and
sbb
dec
xor
fisttpl
fwait
iret
test
mov
and
insl
int3
push
cmc
add
mov
adc
push
bnd
in
or
scas
dec
add
sub
add
sub
add
lock
fbstp
shlb
adc
fbstp
jmp
out
inc
jnp
daa
push
ret
addb
and
xchg
test
ljmp
and
cmp
aad
or
leave
mov
inc
mov
repz
push
pop
fisttpl
add
rclb
jnp
arpl
lret
xchg
lret
push
add
jnp
mov
mov
fldl
out
and
pop
sub
shlb
gs
pop
add
sarl
daa
xchg
cwtl
and
idiv
mov
fsubs
popa
fs
cmc
inc
mov
sub
scas
sbb
mov
mov
pop
xchg
and
inc
movsb
mov
inc
fmull
inc
lret
fadds
insl
push
and
cli
scas
cli
and
scas
mov
xchg
jne
mov
outsl
lods
das
addl
mov
add
jge
mov
mov
dec
jle
dec
or
pop
xor
jae
add
push
xchg
into
test
cmp
xchg
cmp
xor
arpl
lods
lret
loop
adc
aam
lods
inc
scas
mov
add
fstpt
decl
push
mov
jnp
or
mov
mov
add
jg
imul
cmpsl
dec
jmp
enter
arpl
addl
sub
push
movsb
add
sahf
lret
inc
add
push
pop
jecxz
cmp
icebp
inc
int
mov
mov
int
movsl
cmp
sub
pop
add
repnz
fisubrl
imul
nop
addr16
rclb
lret
cmp
pop
outsb
adc
or
rcrl
mov
cli
xchg
shl
push
xor
add
mov
orb
jb
lret
or
pushf
scas
repz
subb
cmp
enter
stc
inc
mov
jne
mov
pop
test
pop
mull
hlt
jp
fwait
outsb
loop
ficomps
pop
out
adc
xor
pushf
sbb
push
xor
cmp
or
jge
scas
rclb
push
pop
mov
mov
inc
fsubl
dec
push
add
mov
ljmp
lcall
and
mov
xchg
faddl
pop
mov
mov
ja
and
mov
andb
cmp
and
dec
jg
cmp
sbb
into
in
aam
cs
ljmp
insl
adc
add
rcrb
push
mov
mov
cli
inc
and
adc
inc
cmpsb
clc
pop
add
and
out
jno
jno
push
or
in
mov
cli
lret
cli
adc
ret
adc
and
stos
jecxz
call
testl
fnstenv
mov
or
mov
cmp
mov
add
mov
scas
test
xchg
add
xor
or
repnz
jo
popa
into
xorb
inc
push
and
lock
inc
subb
sbb
repnz
sub
push
mov
lret
mov
sbb
cwtl
add
outsb
lods
mov
add
clc
or
movb
out
mov
sbb
pop
add
jl
xor
jbe
pop
cmp
push
ljmp
add
xor
and
in
and
cmp
push
ja
pop
es
dec
mov
mov
cld
fstpt
cmp
push
test
ds
in
or
add
lret
mov
rclb
mov
subb
insl
mov
sub
dec
fisttpll
lcall
jp
loope
add
adc
jle
je
sbb
cld
jg
es
shlb
lahf
mov
ss
xchg
in
pop
pop
dec
and
push
jl
repz
pop
roll
icebp
in
mov
stos
lcall
dec
jns
std
cmp
mov
gs
cwtl
and
mov
xor
lds
movsl
out
mov
fmul
cmp
enter
out
xor
mov
or
shl
push
fisubs
mov
stc
add
mov
and
gs
stc
aad
or
filds
nop
rcl
fistpll
mov
adc
dec
cld
inc
sbb
jne
add
push
pop
outsl
mov
fwait
mov
inc
int3
add
jmp
test
out
testl
ltr
testb
icebp
adc
mov
inc
mov
cmc
cmp
push
std
add
and
pusha
mov
inc
sbbb
sbb
and
bnd
lods
add
mov
in
mov
in
mov
jl
rcrl
rorb
pop
and
repz
mov
subps
xchg
mov
popa
or
push
jp
jae
mov
ljmp
in
push
mov
jo
push
xchg
cltd
gs
sub
push
pusha
jno
jns
dec
mov
jmp
xor
cmp
movsb
jp
movsl
pop
and
push
push
sbb
and
adc
and
mov
mov
cwtl
clc
mov
xor
test
push
inc
and
negb
dec
jns
les
fdivr
inc
stos
imul
out
jae
jp
mov
je
cmp
inc
cmp
in
push
jbe
mov
xor
lret
arpl
inc
imul
cmp
lcall
aas
xchg
mov
xor
arpl
mov
pop
jns
dec
jnp
xchg
adc
stc
add
pop
mov
add
adc
inc
sbb
mov
mov
aad
add
jecxz
jno
fists
fldl
push
lods
xchg
test
out
aas
push
mov
lock
and
leave
or
pop
add
imul
pop
push
outsb
or
inc
add
sarb
add
sub
dec
insl
shll
jmp
iret
sub
xchg
add
dec
aas
loopne
addr16
ljmp
cmc
divb
fsubs
push
rcrb
inc
add
lcall
mov
add
adc
add
hlt
sbb
in
jb
jg
cmp
xor
push
insl
push
aas
movsl
leave
in
mov
fiadds
out
pop
addr16
inc
xor
neg
inc
sahf
and
jbe
arpl
add
pop
add
xchg
xor
xchg
inc
mov
popl
es
mov
test
mov
in
push
fcmove
stos
data16
and
mov
mov
jns
fisttpll
rorl
jno
push
mov
test
jl
fcmovnbe
mov
xlat
mov
cltd
repnz
and
sarb
cmp
xchg
stos
fnstenv
outsb
inc
fdivl
fildl
cmp
cld
movsl
xchg
pop
icebp
sbb
xorb
fs
shll
ret
cwtl
sbbl
sti
push
scas
ret
inc
jb
filds
incb
aam
jle
pop
repz
sbb
add
xor
repz
add
push
xchg
jecxz
xchg
cmp
filds
jmp
mov
call
ds
xor
xor
jmp
and
sub
jb
aas
int
cmp
scas
jae
andb
fnsave
lock
dec
popf
pop
mov
test
popf
es
and
pop
mov
dec
shrb
sub
pop
int
mov
into
mov
mov
and
adc
sub
cmp
pop
loop
mov
scas
sti
jne
adc
mov
pop
shl
iret
das
add
loop
xchg
add
lcall
dec
and
mov
mov
cli
int
jmp
aam
mov
or
sub
shrb
jb
push
jns
mov
sbb
sbb
arpl
mov
jbe
add
inc
pop
inc
mov
sub
pop
scas
cmc
or
and
insl
cmpsl
pop
in
lock
dec
les
into
sbb
in
in
orl
test
jecxz
movsl
insb
insl
jecxz
mov
add
mov
inc
shlb
ja
sub
into
call
andnps
insb
sarb
mov
popf
repnz
pop
xor
add
xor
dec
ljmp
pop
es
cmovs
and
mov
mov
dec
add
jb
mov
lfs
push
dec
mov
jle
enter
mov
lcall
cmpsl
lock
ds
jl
push
sub
mov
aam
pop
mov
sar
sbb
addr16
cmp
enter
xor
sub
call
add
rcrb
xchg
les
sub
sub
fcomp
test
jg
mov
add
popa
aam
pop
push
add
cmc
aad
push
rclb
sub
and
mov
shr
cmpsb
or
inc
lea
pop
push
fimull
inc
nop
sbb
or
pop
mov
out
add
and
add
sbb
mov
adc
mov
sbb
and
mov
add
push
push
dec
push
outsl
call
pop
mov
bound
das
mov
sbb
pop
std
iret
mov
push
cmpsb
std
fiaddl
add
repz
mov
movsl
lods
lcall
pop
fidivl
scas
les
inc
and
andb
jnp
push
fstpt
js
aaa
cmp
cmp
rorb
dec
in
stos
xor
call
mov
xlat
aam
add
aad
pop
dec
je
aad
in
cmp
out
add
aad
test
cmp
pop
jae
jno
mov
aam
xor
in
outsb
and
lcall
jg
out
filds
add
sbb
pop
pop
outsb
sarb
cmpsl
add
pusha
outsb
insl
xor
pop
push
mov
insb
mov
cli
jne
xchg
and
sbb
or
add
dec
cmc
cmp
push
or
sti
or
cmp
xchg
jno
xor
outsl
jbe
mov
and
cltd
insl
mov
cmovle
jne
fidivl
cmp
push
data16
call
lods
shll
pushf
pop
jo
xchg
mov
outsb
cmp
mov
push
sbb
mov
cld
and
inc
pop
repnz
mov
sarb
mov
lea
and
cltd
out
rcr
dec
mov
xor
and
leave
mov
repz
test
cmp
adc
das
inc
lock
cmpsl
aam
pop
outsb
repz
cltd
shlb
loop
jmp
ss
leave
leave
mov
or
cmc
pop
scas
gs
adc
ror
inc
lods
pop
pop
icebp
lods
xlat
jle
arpl
mov
rcrb
loop
mov
xchg
xor
pop
inc
mov
push
xchg
push
jl
rcll
jno
adcb
ret
pop
movsl
repnz
fbld
inc
adc
scas
sbb
aad
cmp
mov
shll
ja
inc
jge
add
push
jns
popa
mov
add
cmpb
or
mov
test
push
add
stc
xlat
mov
push
and
push
stos
ja
sub
cltd
jbe
mov
nop
mov
mov
cmp
add
fnstenv
pusha
add
shlb
hlt
jae
ud2
inc
add
xor
and
insl
sahf
jg
add
lods
mov
add
imull
cmp
outsb
cmpsl
pop
xchg
mov
adc
and
sub
cmpsb
push
jns
mov
arpl
or
mov
scas
sarl
test
sub
inc
and
rcr
pop
mov
in
gs
loop
rorl
pushf
mov
or
dec
add
cmpsb
pop
inc
loopne
sub
movsl
jle
ss
xchg
xorl
dec
fucomp
pop
pop
sbb
or
shll
iret
sahf
mov
das
cmpsb
add
mov
nop
sbb
cmpsl
xchg
jle
jb
xchg
add
jp
scas
cmp
sub
mov
mov
mov
push
or
and
push
ss
jg
mov
jecxz
jmp
rolb
es
dec
sub
sbb
arpl
or
testb
jl
push
adc
setp
and
dec
mov
sbb
fists
jge
add
cmc
lods
ret
enter
ret
testb
cmp
adc
adc
push
bound
mov
push
fdivrs
subl
hlt
mov
jg
shlb
fwait
add
gs
enter
call
xchg
dec
mov
fdivrp
in
inc
out
fmuls
sub
mov
mov
inc
mov
insb
push
cs
roll
add
lret
mov
out
mov
cmp
out
xchg
icebp
ret
and
stc
insl
pop
loopne
or
push
jbe
mov
lods
cmp
mov
and
jmp
mov
xchg
push
sbb
mov
nop
pop
sarl
hlt
cltd
fsts
add
mov
mov
push
inc
jecxz
mov
jns
fdivrs
xorl
les
mov
shr
and
mov
and
arpl
pop
push
mov
xor
mov
and
mov
stos
mov
pop
jb
adc
stos
aas
and
cld
loopne
mov
sbb
sbb
mov
and
xchg
or
aas
dec
sbb
in
rorb
add
sub
pushf
xchg
mov
mov
and
rolb
pop
je
push
and
pop
jno
mov
cmp
dec
test
jle
and
and
lret
fdivs
mov
sub
pop
cmp
test
lock
mov
sahf
mov
mov
push
sbb
cs
rol
sub
sub
mov
add
in
xor
sbb
mov
pop
testb
fnop
adc
dec
ficompl
in
cli
lods
mov
mov
add
sub
jl
test
xor
nop
ret
add
jae
cmp
sub
loope
mov
and
fsts
loop
add
dec
rcl
test
sbb
xchg
imul
push
bound
cmp
add
jmp
faddl
fiaddl
mov
sbb
xor
movsl
mov
mov
call
jo
xor
lods
jns
sub
push
int
cmp
inc
xor
mov
push
sub
sbb
mov
inc
mov
add
mov
mov
ljmp
fcmove
mov
in
sub
loope
imul
shl
jmp
mov
xor
or
lock
mov
rclb
pop
add
dec
and
cmc
dec
jmp
or
mov
add
or
notb
incb
fiaddl
jmp
lds
and
movsb
add
ret
fld
lret
jecxz
lock
push
dec
stos
stos
mov
add
mov
shll
or
mov
jno
mov
stc
mov
cmp
mov
adc
pop
nop
add
loop
sub
outsl
das
jo
ja
rorl
mov
jb
jge
out
aam
and
mov
int3
mov
xor
mov
and
xor
cmpsb
mov
jmp
add
mov
sbb
dec
pop
pop
or
out
outsl
xorb
mov
cmpsb
and
in
sahf
das
in
mov
mov
leave
sub
and
sub
mov
xor
lods
int3
lea
mov
adc
mov
jnp
pop
fwait
ret
sti
popf
fstpl
xor
data16
jl
or
jge
cmp
in
sbb
stos
xor
dec
sbb
mov
mov
into
pusha
push
dec
mov
pusha
rorb
xchg
add
jbe
notb
into
push
dec
and
pop
cwtl
add
hlt
push
stos
sub
iret
add
add
cltd
dec
dec
cmp
sbb
mov
jbe
outsl
pop
rorl
iret
add
cmp
jo
cmp
test
insl
dec
mov
fisubrl
and
xlat
fistl
lea
cmp
jnp
and
xchg
ljmp
ret
aaa
dec
add
xor
mov
sbb
sub
fwait
add
repnz
pop
fdivr
outsl
mov
lds
add
call
stos
mov
inc
and
std
addl
stc
inc
jbe
call
jp
push
mov
mov
sbb
mov
test
insl
mov
mov
push
jecxz
mov
stos
lret
pop
mov
in
cmp
xchg
or
push
and
aam
insb
sub
add
xchg
cmpsl
rclb
mov
mov
mov
mov
push
xchg
and
inc
xchg
cltd
xchg
sarl
fisttps
jmp
shl
mov
jg
pop
xchg
cmp
add
lods
bound
mov
xor
shll
inc
xor
and
and
jecxz
repz
popa
jbe
stos
xchg
inc
push
mov
inc
mov
sahf
aas
data16
out
jo
mov
rcrl
mov
iret
or
dec
jge
add
mull
push
sbb
lock
mov
fdiv
fwait
jae
mov
and
xchg
pop
in
add
sbb
jmp
mov
leave
inc
out
imul
aas
imul
scas
push
jnp
xchg
iret
cld
mov
das
dec
xor
mov
in
imul
data16
in
adc
scas
xchg
add
adc
or
je
mov
pop
js
and
add
rcll
dec
add
int3
cltd
cmp
jl
adc
mov
cmc
dec
outsb
mov
or
pop
stos
mov
ficoml
int3
sub
inc
jb
enter
jl
data16
les
cmp
scas
das
lret
inc
lods
sub
and
dec
dec
mov
add
push
jns
movsl
sub
cmpsb
mov
lahf
add
fnsave
pop
mov
scas
arpl
sub
mov
fdivs
mov
push
ret
xchg
jl
clc
or
push
mov
aad
popf
repz
and
mov
xchg
mov
push
add
jae
pop
pop
ds
xor
fs
or
scas
in
or
dec
jns
add
cmpsb
shll
or
mov
push
cmp
lods
rcll
shll
mov
mov
mov
xor
push
jge
iret
scas
mov
outsl
mov
dec
cmpsl
inc
push
inc
xchg
outsb
or
push
les
sub
mov
incb
xchg
outsl
test
sbb
cmp
mov
jbe
movaps
shll
aad
lret
repnz
jmp
stos
cmp
add
mov
or
lock
ljmp
int3
add
inc
xchg
mov
in
jl
push
cwtl
comiss
adc
lods
mov
add
xchg
sbbl
in
mov
mov
aad
fstpt
lods
nop
jnp
test
xchg
xor
jns
mov
push
ds
and
push
xchg
xor
sbb
adc
push
cwtl
sub
fs
jmp
and
add
push
xchg
imul
cmpsl
mov
pop
fdivrs
mov
inc
or
sub
stc
ljmp
cmp
imul
and
test
into
push
add
popa
mov
cmc
mov
fldcw
push
jp
mov
outsb
mov
int3
aam
pop
sbb
cmp
rcrl
or
adc
stos
inc
imul
bound
pop
sbbb
add
jl
and
pop
les
mov
push
push
xor
adc
mov
lods
sbb
mov
fnsave
mov
jp
es
inc
int3
int3
push
out
add
jae
adc
add
jns
pop
xchg
add
jl
and
shrl
pusha
popa
jp
shll
cmp
cmp
cmp
adc
add
mov
mov
pop
xchg
outsb
adc
and
push
call
mov
movsl
pop
mov
mov
push
cmp
imul
or
ret
lods
test
pop
xor
and
mov
jb
xchg
pop
mov
dec
cwtl
jge
push
push
dec
pop
mov
arpl
aaa
mov
stc
and
popa
adc
push
mov
inc
inc
loopne
jle
sbb
sahf
pop
imul
lds
int3
ja
lods
int3
movsl
adc
jg
sbb
jae
movsl
pusha
cmp
pop
std
pop
pop
add
push
cmpsb
ret
adc
mov
fcmovnbe
and
ret
xchg
test
cmp
fbstp
mov
in
popf
es
jle
aad
fnstsw
insb
das
mov
jmp
ljmp
jp
cmp
lret
adc
mov
bound
ds
xchg
pop
or
bound
xchg
les
and
pop
add
sbb
addr16
sar
push
cltd
enter
or
mov
pop
sbb
rclb
push
xchg
push
lret
js
std
cmp
dec
and
xor
movsl
add
out
add
sarb
lret
pushf
mov
movsl
sub
je
mov
int3
outsl
or
faddl
push
sbb
scas
cs
into
sti
add
xlat
out
pop
stc
xchg
mov
adcb
cmp
pop
repnz
vdivsd
stos
test
cwtl
dec
outsl
pusha
lods
out
pop
add
lahf
fiadds
cmp
xchg
jne
std
adc
test
hlt
stos
push
add
sub
insb
pop
inc
xchg
adc
pusha
push
movsl
cmp
inc
xorb
add
addr16
push
cld
jmp
into
mov
es
lahf
jg
inc
xchg
pop
or
ret
add
cwtl
pop
bound
add
outsl
outsl
outsb
add
nop
fsub
fcomi
push
testb
je
cmpsl
out
scas
sub
stos
pop
add
cmp
pushf
js
mov
mov
sarb
xchg
aad
std
mov
sbb
jae
mov
int3
call
hlt
sub
or
gs
cmc
notl
or
in
dec
inc
sub
lods
mov
jl
lds
movsl
add
push
push
jae
mov
and
xchg
pop
cmpsl
and
sbb
gs
ffreep
adcb
outsl
js
add
cmc
mov
mov
jo
add
ljmp
jle
cmp
fs
sarl
add
mov
fsubrs
xchg
and
lret
inc
stos
test
inc
mov
cmpsb
mov
and
mov
pop
in
or
pop
xchg
or
in
or
iret
xchg
push
or
add
ds
in
inc
rcrl
aad
mov
mov
fldenv
scas
insl
push
jmp
cmpsb
ret
and
adc
dec
out
adc
add
add
cld
mov
inc
jge
and
push
out
jae
add
push
mov
adc
inc
shrl
adc
xchg
sti
pop
xchg
cmp
push
rcll
lods
stos
mov
sbb
xor
pop
inc
ret
push
aas
leave
add
mov
inc
dec
in
mov
xchg
movsl
fiadds
out
and
mov
xor
imul
arpl
fucomp
jae
out
mov
mov
push
pop
fcomp
xchg
in
adc
jo
rcr
scas
add
into
add
mov
jne
sub
movsb
adc
pop
ds
add
aaa
cltd
loopne
jle
push
xchg
or
jl
jno
test
sub
loopne
mov
dec
popa
and
iret
dec
sti
js
int3
lcall
mov
cmpl
add
dec
test
hlt
push
and
push
or
mov
and
out
addl
aad
adc
test
sub
iret
mov
lret
lods
and
jge
inc
jo
or
out
nop
lret
xor
pusha
lock
arpl
into
add
in
pop
sbb
cmp
mov
cmp
sbb
and
jl
addr16
and
dec
jmp
pop
jb
inc
clc
cs
and
sub
add
shll
int
cs
add
sti
iret
movsb
mov
and
jns
ljmp
xor
jns
dec
lea
pop
loope
inc
mov
push
cld
outsl
lret
xor
mov
adc
loopne
leave
out
test
dec
sahf
ret
outsb
testb
sbb
inc
loop
jecxz
pop
iret
and
cmp
dec
mov
inc
mov
lahf
push
mov
mov
lret
sbbl
gs
rcr
daa
cs
jbe
outsb
xor
mov
es
xchg
jge
lret
call
dec
mov
ret
mov
and
push
inc
sbb
into
stc
sbb
iret
and
aaa
cwtl
mov
testl
adc
fmul
adc
pop
mov
dec
dec
pop
mov
shll
ret
stos
outsb
add
cmc
cmp
ljmp
push
aad
int
enter
and
subl
push
test
add
pop
popa
pop
xlat
jns
mov
cmc
dec
pop
xor
in
clc
add
dec
aam
mov
jmp
outsl
mov
inc
and
cld
loop
iret
pop
lret
pop
lds
and
sub
inc
pop
add
adc
fadds
jns
dec
rcl
add
mov
or
dec
repnz
pop
or
int3
sahf
inc
xor
stc
jp
xor
sarb
into
jnp
stc
rolb
xchg
dec
mov
shlb
imul
stos
pop
xchg
jb
adc
mov
fdivrl
xchg
add
dec
cmp
push
fwait
out
push
enter
div
js
sbb
adc
mov
lahf
lds
push
aaa
iret
add
adc
fildl
dec
jp
pop
js
js
mov
cmp
jae
cmp
test
mov
mov
mov
and
cmp
add
sub
arpl
add
test
pop
clc
xchg
mov
test
popf
and
inc
addr16
add
cmp
in
sbb
sub
popa
jne
pusha
out
xor
sub
out
and
add
pop
out
mov
loop
xchg
int3
leave
ljmp
sarb
js
cmp
scas
pusha
cmp
push
adc
andb
xchg
jo
pop
jo
add
cmc
mov
in
fdivrl
add
push
cs
mov
pop
jne
dec
mov
mov
and
or
add
sub
dec
xchg
xchg
add
test
cltd
pop
push
add
mov
xchg
aas
cmpsl
xchg
cltd
jno
mov
pop
in
push
pop
add
mov
aam
mov
push
jg
imul
pop
inc
and
fsubrl
ljmp
test
popf
into
popl
mov
mov
add
push
xor
adc
mov
scas
call
push
mov
mov
lock
sti
adc
add
shll
adc
mov
shll
mov
mov
jae
push
out
stos
ljmp
mov
jns
adc
shlb
aam
insl
jp
adc
pop
idivb
xchg
lds
and
hlt
lea
add
xlat
aaa
xorl
xor
inc
pop
inc
frstor
mov
call
hlt
lahf
mov
inc
and
xchg
adc
lock
xor
and
add
pop
outsl
or
mov
fisttpll
adc
jbe
sub
cmp
das
movsl
cmp
lock
jne
hlt
add
cmp
push
int
pop
xchg
into
mov
push
mov
adc
mov
flds
flds
mov
push
scas
push
cld
push
lock
cmp
mov
dec
add
divl
add
and
out
jmp
popa
pop
mov
jae
and
xlat
sbb
and
mov
xor
inc
inc
or
mov
movsl
mov
and
push
enter
add
cmp
and
or
shll
fcmovb
mov
mov
pop
add
int3
notl
subb
lods
orb
mov
movsl
jne
scas
daa
sarl
shl
subb
fmull
aad
pop
xchg
or
movsb
js
mov
sarb
push
xchg
or
mov
js
and
push
add
gs
pop
or
xor
sub
inc
xchg
mov
add
fiadds
mov
pop
mov
mov
cmp
and
jae
repnz
cmp
out
inc
orb
inc
mov
mov
xchg
add
scas
xchg
push
fsubrs
pop
pop
sbb
add
dec
jnp
add
shl
pop
mov
xor
pop
xor
sub
and
dec
insb
or
and
sub
test
shlb
push
jg
in
imulb
fadds
or
ficoml
mov
ret
pop
mov
dec
and
lret
call
mov
pop
js
mov
sbb
lds
dec
in
sbbl
and
fistpll
mov
mov
scas
mov
repz
lret
dec
popa
mov
xor
dec
mov
add
adc
xor
mov
and
xchg
sub
loopne
pop
jl
jge
lret
add
pop
test
add
jns
rorb
mov
outsl
nop
xchg
mov
mov
or
pop
add
mov
xchg
add
scas
daa
gs
lret
fadds
stos
dec
fwait
jae
nop
and
lods
inc
popa
sbb
lcall
inc
fists
mov
repz
pop
dec
rclb
fwait
sbb
pop
in
je
movsl
shlb
das
jmp
std
test
cwtl
sahf
mov
push
hlt
add
xchg
mov
mov
adc
aas
mov
sbb
dec
cmpsb
jns
outsb
mov
xchg
lret
lahf
inc
and
push
xchg
inc
add
push
shll
dec
mov
push
ja
and
sub
divb
push
cmp
sub
pop
sbb
add
into
jno
sbb
aad
push
inc
push
lock
sub
fldlg2
jecxz
arpl
cli
jbe
iret
add
fstl
cld
inc
insb
fldt
dec
lods
sbbl
or
int3
mov
xor
movsl
xchg
int
fcomip
es
test
mov
pop
mov
add
shl
dec
xchg
add
movsb
fmuls
bnd
cwtl
mov
mov
or
jecxz
fists
push
add
or
into
gs
xor
or
data16
frstor
jo
fwait
mov
dec
sarb
dec
inc
aam
xor
add
xor
in
add
push
cmp
mov
adc
andl
pop
add
push
mov
int3
call
movsl
add
mov
cmp
push
push
sbb
movsb
std
mov
dec
pop
clc
inc
xchg
jmp
mov
and
in
sub
jecxz
icebp
loope
mov
wrmsr
stos
test
sub
mov
sub
repz
lret
mov
fidivs
sar
fs
add
testb
xchg
inc
add
iret
mov
popf
loopne
cmpsb
jmp
jp
repnz
xlat
push
inc
sbb
in
scas
or
cs
out
push
ds
adcl
mov
push
call
mov
gs
cmp
inc
pop
imul
fs
fsubp
sbb
or
fwait
mov
dec
adc
test
popa
cmp
loopne
sub
out
mov
push
jo
dec
ds
push
and
je
das
and
jnp
mov
add
mov
mov
jmp
jae
nop
mov
js
pusha
fnstcw
shrl
adc
enter
mov
pop
push
mov
stos
bound
daa
loopne
pop
mov
cmp
lods
and
test
stos
sti
popf
add
call
inc
and
daa
adc
mov
cmp
and
inc
and
mov
dec
fdivrl
das
mov
mov
add
int3
push
push
outsb
gs
pop
push
pop
je
ud0
icebp
mov
fs
dec
sub
lret
add
or
adc
sub
pop
xor
mov
jg
inc
adc
ret
shlb
pop
mov
cmpsl
sub
inc
aad
pop
test
lock
ja
mov
repz
sub
mov
dec
ficomps
xchg
lock
pextrw
pop
add
sarl
adc
adc
es
fxtract
sarl
or
inc
call
cmp
or
cwtl
fiadds
mov
ret
adc
inc
arpl
popf
out
fnstenv
jnp
pop
and
daa
mov
fbstp
fidivl
sahf
lret
pop
add
test
xor
adc
loopne
add
and
repnz
xchg
sub
and
fidivrs
dec
fnstenv
js
xchg
sahf
and
sti
lret
into
int
insl
aas
shll
mov
fwait
pop
or
push
mov
ljmp
and
dec
sti
ss
sbb
jnp
mov
add
cmp
mov
xchg
adc
insl
jnp
push
ja
mov
xor
dec
popa
mov
fdivrl
mov
xor
int3
negb
or
cli
jge
jae
or
int
ljmp
data16
pop
mov
mov
add
pop
enter
lock
pop
inc
pop
add
or
and
aad
and
add
jp
and
movsb
clc
inc
popf
pop
jle
scas
cmp
addb
add
test
pop
fnstcw
sub
loopne
xor
movsb
adc
add
sub
in
mov
sbbb
in
arpl
and
xchg
jb
cmp
add
fildl
add
xor
test
mov
das
out
das
lret
dec
inc
mov
movsl
sbb
mov
aam
mov
pop
cmp
and
push
cmp
fstpt
mov
sbb
dec
mov
les
add
sub
shlb
or
fisttpl
inc
rorb
aaa
xchg
cmc
xchg
add
daa
dec
add
mov
push
mov
mov
test
cmc
sub
sub
cmp
jnp
adc
movsl
sub
mov
mov
inc
adc
mov
mov
ljmp
aad
add
and
cwtl
inc
and
push
arpl
xchg
shlb
out
out
into
js
add
push
adc
loopne
xor
add
xchg
pop
lret
fcomi
mov
add
cld
xor
cmp
add
je
add
in
insl
cmp
lea
xchg
jle
xchg
shlb
sub
and
or
adc
add
sbb
mov
mov
cld
sbb
mov
int3
ljmp
mov
rolb
cmp
aam
aas
mov
or
mov
lret
add
mov
fimull
xor
and
les
and
dec
adc
sahf
add
xchg
cld
sbb
out
inc
adcb
adc
les
sbb
jge
push
scas
cltd
rcrb
jb
xchg
lods
dec
and
jge
les
subb
add
mov
bound
stos
jno
add
rolb
push
leave
xor
mov
outsl
pusha
fiaddl
xor
into
xor
adc
sub
and
hlt
lret
nop
stos
mov
ret
in
leave
xchg
sub
sub
mov
xor
pop
fcompl
and
adcl
mov
bound
push
in
mov
mov
lcall
lahf
testl
mull
and
int
sub
test
leave
and
mov
mov
fnstenv
cmpsb
enter
subb
mov
mov
in
ljmp
das
push
sub
rclb
lret
hlt
lock
ja
mov
mov
push
pop
outsl
sahf
lock
out
outsb
xlat
jmp
aad
aaa
adc
pop
and
vmread
and
push
pop
leave
add
adc
jbe
outsb
xchg
adc
roll
mov
pop
inc
rcrl
jae
mov
or
in
es
ret
add
push
cmpsl
mov
adc
data16
push
shrl
add
loope
add
lret
sar
enter
jns
jno
lds
sub
into
insb
mov
nop
mov
cld
frstor
pushf
and
sub
cld
in
pop
sub
roll
nop
icebp
movsl
adc
inc
inc
mov
mov
sbb
xorb
xor
pop
mov
inc
loopne
fwait
pop
sub
xchg
scas
mov
aas
pop
xor
addb
lods
es
sbb
adc
xlat
sub
xor
loopne
bound
mov
mov
loop
xlat
scas
add
or
dec
test
decb
loopne
add
movsb
xor
in
mov
dec
or
inc
and
inc
xchg
iret
or
mov
inc
jg
in
std
mov
jae
clc
daa
stos
fsubl
sbb
dec
xchg
lock
sbb
pusha
xchg
add
jle
repz
add
js
enter
rcl
sbb
jns
daa
xchg
add
mov
jb
lds
jl
push
pop
add
xor
cld
mov
mov
mov
mov
loopne
mov
or
test
dec
adc
sbb
vmovd
mov
xchg
and
xor
pop
add
xchg
jmp
pop
push
or
xchg
int3
adc
dec
dec
and
mov
inc
push
add
sub
and
mov
mov
pusha
push
scas
dec
xor
jmp
pop
aas
shll
js
daa
leave
iret
mov
sub
pop
ss
sbb
lret
dec
mov
or
lea
scas
mov
fildl
popa
lods
sti
cmpsl
inc
lret
into
inc
jecxz
sbbl
sbb
aad
mov
js
pop
pop
mov
xchg
and
adc
ljmp
outsl
jb
mov
add
fiaddl
push
stos
cmpsb
add
popa
insl
add
mov
dec
mov
add
sub
inc
sbb
add
ja
sub
aas
xchg
mov
andb
dec
add
jecxz
jmp
push
iret
and
mov
mov
ljmp
subb
es
xchg
cltd
fwait
lret
dec
add
cmpl
data16
repz
loope
push
or
inc
mov
and
jae
cmp
iret
in
mov
jle
jp
xor
push
and
mov
ljmp
cmpsl
pop
inc
lret
js
fcoml
jnp
int
or
movsl
adc
ss
xchg
add
push
movl
orl
pop
mov
and
std
aaa
out
out
jb
sti
adc
pushf
push
adc
aas
scas
sub
xor
add
es
inc
xchg
and
shlb
int
jb
push
mov
cmp
lock
out
add
mov
out
or
push
dec
iret
rep
jae
pushf
mov
inc
rorb
and
xorb
or
dec
fists
dec
in
push
out
and
push
mov
pop
mov
loope
xchg
rolb
ljmp
jae
jmp
inc
mov
sbb
adc
and
push
mov
xchg
mov
mov
lock
data16
fcoms
pop
jle
mov
add
cld
mov
mov
jae
cmp
adc
cmp
repz
and
ret
mov
jae
lods
add
outsb
faddl
shrb
int
xchg
cltd
or
lods
test
and
jae
js
cmp
mov
mov
addr16
stos
roll
push
sub
add
stos
psraw
mov
cltd
out
add
xchg
xchg
mov
enter
shll
inc
jbe
and
add
dec
inc
fwait
mov
xchg
ss
rcrb
es
repnz
xor
jecxz
enter
sub
mov
mov
scas
sub
mov
and
rcrb
jns
in
push
sbb
add
repz
adc
mov
inc
aam
ss
jl
sbb
fidivl
mov
rcl
mov
mov
incl
add
cld
xor
mov
cmp
lcall
add
jmp
push
roll
pop
cmc
jg
xor
sbb
adc
enter
adc
mov
add
dec
loope
pusha
mov
xor
ret
mov
mov
pop
out
mov
in
ljmp
push
push
mov
lock
loope
cmp
sti
mov
cmovg
insb
or
packsswb
int3
and
add
jb
idivw
mov
xchg
add
sub
mov
xchg
mov
mov
add
cs
sahf
add
mov
sti
push
jmp
outsl
add
pushf
hlt
mov
out
rol
push
add
and
insl
negb
add
mov
imul
jo
lret
les
and
pop
pop
and
add
add
nop
push
xrelease
lods
push
cmpb
jge
rcr
dec
add
data16
mov
pop
lea
fsubp
adc
pop
mov
sub
xor
pop
push
test
and
push
sbb
mov
imul
and
adc
inc
add
pop
push
arpl
std
insl
cmp
mov
add
jnp
add
push
fs
stc
loop
sub
into
adc
adc
jb
and
mov
xchg
inc
mov
push
movsb
mov
push
push
scas
popfw
cld
and
cli
les
shrb
repz
fimuls
push
mov
stos
lret
mov
xor
loope
fdivrl
and
sbb
loop
mov
int
cmp
inc
inc
dec
mov
sub
ret
dec
cmpsl
mov
adc
bound
pop
xchg
and
xchg
and
inc
add
les
cmp
hlt
push
inc
and
sub
cs
push
std
cmc
outsl
xchg
inc
fdivrl
mov
xchg
scas
lods
jns
out
sub
mov
mov
mov
jl
mov
addr16
repz
mov
ret
mov
lret
jo
int
sti
lcall
incl
jnp
and
jbe
aam
hlt
sbb
mov
sar
mov
xchg
dec
shr
lret
int3
sbb
mov
cmp
inc
mov
sti
sub
std
push
int3
adc
fidivrl
push
dec
adcb
add
mov
pop
jle
retw
gs
icebp
xchg
pop
std
add
ss
mov
xor
ja
add
les
int
js
dec
lds
push
xor
jae
lds
mov
cmp
subl
addr16
out
mov
mov
push
iret
inc
faddl
sub
and
cli
inc
cld
jne
jmp
fldcw
enter
xor
mov
cmp
mov
in
add
and
lds
nop
add
jb
in
or
in
ret
arpl
ds
dec
loop
test
xor
or
into
add
sbb
add
in
icebp
push
es
adc
push
cmp
inc
add
jle
and
inc
inc
imul
dec
outsl
enter
ds
mov
mov
xor
pushf
xchg
jmp
cmpsb
sbb
lret
test
scas
pop
loope
dec
enter
sarb
shll
ret
mov
mov
cli
add
imul
and
xor
add
sbb
and
xlat
aad
pop
je
mov
jle
rcrb
mov
scas
xchg
push
divl
mov
test
fwait
and
arpl
test
jge
jbe
cmpsl
scas
push
or
inc
jns
sub
loope
jmp
xchg
add
jb
and
fwait
inc
insl
jg
loop
loop
dec
cmpsb
or
mov
mov
mov
cmp
push
addr16
aas
daa
inc
movsl
mov
faddp
and
dec
aaa
imul
icebp
mov
gs
xchg
lock
rcll
invd
lock
add
rcll
mov
jg
push
sub
mov
sbb
test
lahf
ss
ss
add
imul
js
xlat
sbb
es
popa
xor
pop
sbb
pop
push
inc
jecxz
xchg
push
and
enter
add
dec
mov
or
popa
jnp
daa
lock
mov
push
mov
mov
mov
adc
mov
adc
jb
cwtl
pushf
push
xor
push
pop
test
lret
push
pop
imulb
lods
jge
stc
mov
data16
out
les
add
das
stos
dec
test
lret
add
int3
orl
out
sub
add
frstor
in
push
lret
xchg
inc
dec
add
dec
pop
pusha
add
xor
or
mov
mov
jnp
ljmp
add
out
xchg
movb
loop
mov
loope
les
shrl
repz
cmpsb
aas
rolb
add
nop
test
pop
jbe
mov
lret
mov
outsb
and
iret
push
ljmp
dec
mov
cli
jge
and
gs
mov
leave
and
mov
fmuls
int
cmp
js
cwtl
stos
push
ret
add
push
pop
es
sbb
mov
test
sbb
push
rolb
mov
lea
xchg
sub
pop
sbb
add
sbb
xchg
push
add
nop
xor
or
shr
cmp
jmp
pop
lea
add
cmp
shll
jb
sub
inc
pop
loope
and
mov
sub
inc
shlb
lret
cmp
cmp
out
lret
jb
daa
test
mov
adc
ds
add
xor
clc
push
xchg
and
push
inc
pop
lret
incl
out
ljmp
add
mov
aaa
mov
es
add
sub
lahf
loopne
jmp
popf
mov
test
xchg
mov
jns
jmp
jmp
jb
aad
push
out
lahf
sub
insl
pop
sbbb
push
scas
aaa
mov
mov
ret
jg
nop
and
lock
into
push
xorb
jae
push
cmp
cld
bound
xchg
xor
sub
jbe
out
bound
push
movsb
dec
gs
xor
lret
insl
push
lock
lock
mov
push
divl
dec
add
mov
gs
imul
and
add
test
pop
push
pop
or
push
mov
or
jmp
sbb
xchg
add
mov
push
pop
add
sbb
push
mov
movsl
enter
test
lret
xchg
hlt
adc
pop
add
inc
mov
or
loop
call
sub
jnp
rolb
scas
dec
test
cltd
adc
inc
gs
cltd
adc
sbb
pop
sarb
in
es
cmp
mov
jo
js
shrl
aas
ljmp
out
jno
insl
aad
cmp
div
testb
cmp
mov
add
loop
jp
in
mov
mov
imul
add
cwtl
fistps
sti
sub
lds
pop
sar
push
add
pop
adc
sub
xor
adc
pop
jl
cmp
push
dec
fs
and
ret
dec
mov
push
add
jg
push
xlat
into
add
scas
arpl
mov
aad
sbbb
jns
out
lcall
jb
or
adc
popf
and
jge
lea
inc
or
push
and
or
test
add
cmp
lret
add
cmp
setg
mov
imul
ljmp
cmp
in
add
jbe
ret
push
pop
add
jo
dec
jg
jle
add
mov
imul
nop
rol
mov
and
dec
mov
jnp
mov
mov
cli
xor
sbb
rcll
outsb
mov
mov
nop
add
xor
ds
sahf
inc
movl
inc
adcl
and
leave
push
ret
adc
loopne
hlt
aas
insl
pop
ds
xor
lods
mov
and
jbe
movsl
loopne
cli
xchg
pop
ret
pop
gs
push
mov
pusha
nop
push
push
or
aaa
push
sbb
pusha
add
sub
jecxz
fadd
and
iret
repnz
test
sbb
mov
adc
mov
pushf
inc
mov
push
add
jnp
sti
fwait
leave
roll
sub
les
mov
aaa
repz
mov
and
sub
add
mov
mov
mov
push
add
insb
push
shlb
into
ret
sbb
pop
mov
and
clc
stos
imul
shrl
push
je
push
jne
dec
into
add
loopne
mov
ss
sbb
and
outsl
testl
aaa
push
pusha
test
xchg
out
push
dec
or
xchg
popa
jno
mov
lds
gs
cmp
test
and
mov
into
and
push
bound
sbb
mov
loop
add
arpl
mov
scas
aad
adc
les
popa
nop
stos
push
add
cmp
add
push
mov
lret
ljmp
push
jnp
and
scas
mov
xchg
add
and
xorl
pushf
xchg
mov
or
test
arpl
loopne
mov
mov
or
mov
xor
push
xor
fmul
addr16
and
adc
pop
jmp
pop
add
ret
das
pavgb
enter
insl
cmp
xor
test
test
push
mov
mov
mov
loope
mov
hlt
cwtl
push
xchg
sbb
dec
adc
lret
add
in
pop
xor
add
mov
imul
mov
jl
mov
out
lea
fs
std
jo
data16
in
xor
mov
xor
pop
in
mov
mov
sbb
les
test
movntq
mov
call
inc
push
cmp
and
dec
adc
push
mov
or
inc
pop
sbb
jge
xor
dec
in
ljmp
mov
jne
es
outsl
imul
into
mov
push
push
rorl
subb
es
dec
push
jb
xchg
or
push
push
mov
sub
xchg
dec
idivb
out
fnstcw
sbb
stos
sbb
test
jg
lods
pushf
push
jmp
jnp
sbb
arpl
push
or
xor
mov
scas
mov
insl
cmc
add
pop
daa
pusha
pop
dec
inc
imul
cmp
cmp
sbb
xor
mov
push
cmpl
sti
push
scas
dec
jg
xchg
jno
mov
jnp
mov
mov
mov
sub
push
add
jge
stos
testb
hlt
add
mov
addl
and
nop
sbb
fwait
pop
sar
test
and
or
mov
pop
dec
out
sub
inc
inc
fcompl
es
ret
sub
adc
fnstcw
pop
or
loop
test
xchg
xor
lods
in
sbb
pop
add
sti
shrl
or
in
test
clc
shlb
add
pop
in
scas
cmp
fldenv
pop
jle
add
jo
xchg
clc
clc
push
cmp
rorb
lock
cmp
loopne
push
rorl
aad
ja
ss
pop
in
call
das
jbe
cs
xor
pop
mov
scas
cmp
lods
add
jns
sbb
jb
add
imul
es
icebp
sbb
push
stos
aam
add
inc
add
daa
mul
repnz
sbb
scas
fisttpl
stos
push
hlt
cld
inc
and
clc
es
push
add
je
sub
in
add
inc
popf
push
sub
test
loope
pop
aam
lea
inc
push
add
dec
je
imul
in
loopne
lahf
add
dec
add
add
pushf
inc
cli
push
push
inc
add
fsubrl
push
cltd
in
jo
fs
lock
cmp
les
xchg
jnp
cmp
mov
adc
icebp
mov
or
nop
jbe
add
sbb
push
cwtl
das
mov
ret
js
mov
outsb
xchg
arpl
jns
fs
sbb
lods
js
stos
fstpl
orl
cld
add
cmp
fisttpl
and
push
sub
adc
xchg
sbb
arpl
imul
mov
push
pop
movsl
fisubrs
add
pusha
add
mov
clc
jbe
cmp
call
or
cli
mov
jg
sti
aam
adc
insb
lock
jp
mulb
sub
fidivrl
stc
jno
fcmovnu
add
jne
rorl
or
mov
add
mov
aam
mov
sti
mov
pop
push
jo
sbb
out
inc
add
repnz
cmpsb
es
push
loope
es
sub
jl
pop
adc
pop
lods
rorl
jmp
push
mov
push
les
xchg
sub
aaa
sbb
cmp
test
stc
clc
rcl
cmp
into
mov
shrl
rclb
jne
mov
and
dec
arpl
add
cmpsb
lcall
mov
and
jl
leave
mov
icebp
loope
insb
mov
and
repz
outsb
xor
loop
pop
enter
sti
push
iret
cmp
mov
mov
jmp
mov
and
lret
pushf
cltd
sub
and
ret
adc
jl
and
push
push
jo
paddb
push
lods
add
jb
mov
popf
out
xchg
inc
out
mov
outsl
filds
push
call
movsb
mov
add
ljmp
pop
lea
and
sbb
js
add
lods
cmpsl
lock
add
mulb
mov
cmp
xchg
xor
cld
inc
shrl
or
ja
pop
jb
push
xor
jle
mov
inc
andb
inc
lods
cmp
and
int3
mov
dec
jmp
mov
popa
mov
arpl
dec
pop
adc
lret
mulb
ja
and
sbb
and
add
fwait
mov
ljmp
test
imul
test
loopne
adc
push
insb
fwait
sbb
in
test
and
jle,pn
push
add
push
cmc
mov
pop
xchg
mov
in
int
fstps
add
repnz
add
lods
and
cmp
fbld
push
inc
xlat
adc
xor
pop
int
add
mov
add
sbb
jae
mov
aaa
cld
lea
pop
loopne
mov
in
mov
push
out
idivl
xchg
mov
xchg
icebp
add
xor
ljmp
or
and
mov
xor
cli
int3
jp
test
xor
mov
jno
or
mul
xlat
push
and
mov
jne
scas
addb
jmp
or
cmp
lds
pusha
cmp
cmp
arpl
adcb
add
test
je
sub
popa
push
push
jno
mov
xor
jb
jge
mov
ret
and
rclb
or
or
jp
sbb
jno
out
jmp
add
fsubrs
push
cltd
insb
nop
xchg
lock
sub
dec
stos
jmp
push
add
jb
lods
cmc
cmpsl
fiadds
jo
cmp
out
add
add
inc
clc
pop
jo
hlt
repz
shll
mov
mov
mov
jmp
rolb
loope
and
xchg
pop
or
clc
ljmp
lahf
mov
mov
dec
add
inc
dec
xor
cmpsb
add
mov
push
add
dec
jo
cmp
scas
push
add
out
mov
mov
xor
jb
xor
leave
and
jo
lret
adc
mov
sti
sub
xchg
int
inc
xchg
bswap
dec
xchg
mov
mov
xor
cwtl
bound
les
sub
fs
dec
mov
rcll
cmp
out
adcb
mov
jae
jne
mov
or
fistl
outsl
mov
mov
jnp
pop
fwait
push
or
cmp
popf
movsl
out
std
mov
pop
jne
push
jl
adcb
add
push
dec
lcall
incl
or
mov
scas
movsl
int
pop
stos
mov
cmp
or
pusha
and
lret
or
mov
dec
inc
jo
mov
fsts
pop
mov
push
jp
xchg
lods
pop
dec
xchg
sub
out
in
jp
pop
in
es
adc
ret
loop
push
add
dec
dec
sub
push
fiadds
xchg
mov
pop
adc
adc
pop
xchg
jb
fstps
xchg
jmp
and
fstp
inc
in
sahf
popa
mov
pop
lods
xchg
psubb
xor
and
mov
hlt
jo
ds
fildl
or
and
cltd
sti
pop
inc
repz
pop
leave
test
dec
xor
test
xor
mov
jo
mov
int
add
lods
rclb
outsb
clc
popa
mov
movsl
hlt
cmpb
push
add
ss
ret
pop
push
fstpl
add
xor
inc
add
mov
cld
mov
inc
adc
and
aad
dec
cmpsl
add
lods
jl
add
sbb
and
jnp
mov
inc
dec
adc
mov
pop
pop
repnz
mov
mov
jge
mov
scas
mov
and
push
push
cwtl
xlat
pop
fwait
in
jnp
cli
ljmp
mov
xor
jns
stc
xchg
std
sbb
add
mov
pop
mov
cmpsl
imul
cmc
ds
repz
mov
mov
push
adc
or
inc
sti
popa
cli
pop
lret
sub
addr16
push
xchg
jnp
mov
jecxz
mov
adc
sbb
xor
jmp
jne
xor
or
push
imul
jmp
popf
imul
add
fwait
jbe
out
and
cmp
aam
mov
js
les
rcll
adc
xlat
clc
lcall
add
adc
out
cli
and
jo
pushf
test
lods
scas
push
and
jmp
mov
sti
pop
popf
and
xor
aam
add
cmp
ret
mulb
cmp
mov
jmp
add
aam
cmpsl
push
arpl
sbb
push
pop
cmp
xchg
mov
add
and
adc
leave
jge
push
inc
jno
mov
add
bound
js
cmp
mov
fsubr
pop
pop
jbe
ret
sbb
sub
sbb
mov
push
inc
and
mov
mov
jns
lea
and
stos
icebp
das
fidivrs
fs
mov
xor
adc
ret
add
xchg
dec
jl
and
mov
or
or
pusha
mov
jg
and
mov
fs
pop
and
dec
bnd
sbb
xchg
mov
fidivrs
cmp
das
or
imul
arpl
pop
add
inc
push
aam
mov
pop
inc
xor
xchg
pusha
ljmp
sub
movsb
add
and
cltd
mov
out
inc
jg
imul
addr16
mov
lret
lea
mov
mov
int3
mov
es
aad
das
fdivrl
mov
or
and
lret
sbb
arpl
add
dec
jg
dec
es
mov
and
xlat
push
aam
mov
ficomps
lds
jns
fs
movsb
mov
inc
insb
arpl
sarl
jmp
jbe
imulb
push
or
nop
xchg
mov
and
enter
nop
fildl
push
aad
push
sub
jns
mov
dec
std
mov
faddl
xlat
and
xorl
sbb
je
or
movsl
jmp
inc
sub
pop
xor
jne
dec
int
add
pop
nop
pop
into
inc
leave
xchg
push
xchg
add
lock
imul
push
or
lods
out
sbb
pop
and
ror
adc
inc
mov
scas
repz
data16
or
mov
cmp
stos
jecxz
mov
leave
daa
push
dec
push
sbb
add
cmpsl
pop
out
rcrb
dec
mov
in
flds
subb
mov
pop
popf
jb
add
stos
scas
mov
dec
aas
testb
lock
sub
icebp
add
aad
das
insl
dec
sbb
push
xchg
sub
hlt
and
jecxz
cs
adc
stc
mov
jmp
sub
and
ret
or
sti
mov
mov
shll
fisttps
jno
and
ret
dec
add
sub
movsb
fld
jge
test
and
out
push
xlat
cmp
push
and
mov
movsb
sbb
dec
ja
dec
pop
pop
and
push
dec
lahf
imul
add
jmp
add
andb
mov
and
jge
andl
nop
xorl
idivb
jmp
lds
popf
test
sbb
lods
stc
inc
loope
sub
pushl
adc
mov
cmp
push
enter
cmp
dec
pusha
mov
cs
mov
add
xchg
movsb
mov
sbb
mov
hlt
sbb
aaa
jmp
subps
push
movl
mov
mov
cld
jnp
xor
outsl
mov
xchg
stc
cmp
jne
sub
mov
adcl
mov
sbb
inc
dec
cmp
aad
pop
inc
jbe
rcrl
clc
mov
aaa
sub
sub
jle
aad
pop
orb
push
mov
and
lret
mov
mov
andb
movsb
cmc
jno
mov
lahf
std
sub
cmp
cltd
in
les
dec
aad
mov
mov
cmp
movsl
adc
ss
xor
jecxz
add
hlt
int
outsb
inc
movsl
add
add
or
push
push
scas
mov
scas
jnp
in
cmp
into
jae
jo
sub
add
jbe
clc
mov
add
lods
inc
lcall
sbb
adc
pop
rclb
adc
sub
cmp
and
add
dec
xor
mov
pop
jb
fsts
mov
dec
mov
add
fnsave
jo
and
or
add
xchg
out
add
das
mov
xchg
xchg
aam
stos
inc
imul
xchg
mov
rcll
pop
or
xchg
add
push
cld
xchg
sbb
ss
stos
adc
test
add
aaa
dec
add
add
mov
sbbb
sbb
mov
out
xor
stc
shl
and
and
jecxz
pop
dec
cmp
subb
adc
mov
lahf
pop
mov
rcll
push
mov
add
sub
mov
add
inc
xchg
cmc
sti
arpl
cwtl
mov
inc
divl
pop
int
adc
xchg
andb
dec
add
test
scas
test
insl
fucomi
popf
mov
stc
mov
pop
sti
jnp
daa
mov
and
stc
rcrl
rorb
sub
enter
es
pushf
fsts
js
es
mov
repz
icebp
push
sub
mov
xchg
jb
orb
cmpl
sbbl
push
mov
insl
or
cwtl
fdiv
mov
xchg
sub
sarb
and
adc
loopne
arpl
mov
arpl
out
mov
aaa
mov
add
addb
or
ja
imul
mov
int3
add
aas
pop
xor
and
rorl
je
addl
test
fdivs
stc
cmp
idiv
loope
adcb
mov
add
push
outsl
mov
add
and
mov
sub
test
or
add
scas
push
enter
add
cmp
or
or
push
insb
dec
mov
outsb
aam
jle
lds
cli
add
dec
push
xor
jno
pushf
jno
jb
and
add
pop
call
push
mov
and
es
ja
aas
std
cmpsl
movsl
cmc
push
sub
mov
push
rorb
push
and
jecxz
cmp
jne
test
testl
pop
in
xchg
mov
stos
jo
gs
leave
adc
testl
add
add
inc
int3
mov
out
cmp
and
sub
xchg
mov
mov
inc
movsl
aam
leave
sub
xchg
xorl
sahf
pop
testb
sub
in
fisttps
and
fs
inc
lods
cmpb
lret
xchg
mov
imul
push
ljmp
mov
cmpsb
shll
hlt
and
lret
cmp
jnp
dec
repz
sbb
rcrl
loope
mov
jg
add
movsl
ljmp
inc
ja
aam
add
in
lods
arpl
dec
addl
aaa
sub
and
sub
cmp
cmpsb
or
xor
mov
sub
in
hlt
and
rcl
xor
mov
cmpsl
or
aaa
daa
and
shrb
cmp
add
sbb
and
sbb
mov
nopl
clc
push
cmp
add
cli
pop
in
pushf
lds
add
xchg
xor
lret
jbe
jmp
jl
test
imul
add
jge
add
fstp
sbb
sbb
orb
jb
pop
arpl
fnsave
out
ret
and
jge
jge
add
cmp
mov
add
push
int3
nop
int3
cmpsb
and
sbb
mov
and
scas
mov
dec
leave
test
sahf
shll
ds
adc
es
mov
out
sub
mov
cld
xchg
aas
ss
or
inc
movsl
add
es
je
arpl
sub
mov
mul
mov
jb
add
les
push
ljmp
mov
pop
or
add
outsl
mov
test
adc
cli
ja
scas
std
sbb
jb
cmp
jb
mov
addr16
movsb
cs
clc
cmp
push
lock
ljmp
mov
push
xchg
push
popf
jp
fwait
and
js
jae
add
mov
cld
sub
cltd
testl
cmp
stos
daa
jns
pusha
and
mov
ja
rcr
inc
jp
test
lds
insl
pop
aam
mov
and
fldl
lods
add
iret
das
xchg
add
mov
dec
rol
out
inc
mov
mov
rcrb
add
adc
mov
fs
or
enter
or
out
daa
inc
sbb
pop
mov
rcrb
xor
or
test
xchg
aad
inc
inc
mov
pop
ss
test
push
mov
gs
movsl
popf
sysenter
std
repz
pop
mov
pop
lahf
mov
fcomip
std
fistpl
enter
jmp
cmpb
inc
push
and
add
subl
inc
sub
pop
or
movsb
jnp
mov
out
jg
repz
dec
push
and
popa
in
lret
add
mov
bound
addl
enter
out
jecxz
int3
ja
mov
xchg
xchg
dec
pop
and
imul
cmp
jle
mov
mov
fstl
pop
inc
pop
dec
add
inc
je
sub
push
mov
rorl
pop
cmpsb
mov
sar
int
mov
daa
and
imul
push
js
lods
add
test
cltd
dec
and
jl
movsb
daa
out
divb
stc
repz
stos
mov
lods
sbb
and
inc
jae
lea
fwait
sbb
shll
cmc
dec
mov
sbb
repz
dec
dec
enter
sarb
jns
mov
cmp
inc
arpl
popa
xchg
add
icebp
mov
in
mov
and
add
mov
js
mov
push
pop
sahf
lahf
out
sub
aam
loop
out
cmpsb
loope
fwait
mov
lcall
xlat
mov
jae
in
cmp
pop
pop
mov
adcl
and
aam
in
out
scas
cld
inc
or
pop
add
movsb
js
mov
mov
cli
lahf
mov
mov
add
xchg
scas
jge
xchg
xchg
mov
imul
das
in
scas
sub
lcall
add
pop
jo
jne
mov
add
mov
cmp
je
rorl
mov
xor
je
out
add
push
sub
in
mov
imul
push
movb
mov
push
mov
and
cmp
sti
int3
iret
cmp
add
jno
push
and
sbb
mov
push
roll
call
test
test
cmp
leave
pop
cltd
test
xchg
mov
push
test
add
aaa
pop
mov
lods
mov
rolb
inc
out
and
jns
pushf
and
test
xchg
aas
cmpb
fisttpl
out
stc
cmpb
mov
xchg
test
xor
mov
movsl
adc
out
lods
cmp
loopne
lock
out
mov
movsl
and
xchg
mov
int3
dec
je
mov
sub
out
test
shl
mov
test
add
cltd
les
add
stos
cmp
repz
inc
aas
mov
jno
cmp
sbb
mov
push
fcomps
add
rolb
and
xchg
sbb
mov
pop
pop
mov
in
int3
call
arpl
mov
dec
ss
add
pushf
out
aaa
lods
rcrb
xchg
xlat
xor
cltd
sarb
adc
daa
add
lods
ret
popl
and
lcall
xor
call
int3
pop
xchg
movsb
in
movsl
jle
pop
sbb
jo
dec
in
mov
icebp
pop
sub
mov
pop
and
mov
mov
xor
dec
loopne
jecxz
cwtl
call
cmp
sbb
dec
mov
and
dec
inc
fdivrp
sti
mov
sub
lret
add
xchg
and
into
push
flds
and
jmp
stc
mov
clc
loop
xor
push
and
xchg
cmc
add
repnz
sub
stos
ret
mov
mov
push
roll
std
insl
add
aam
loope
in
lods
incb
and
les
lds
stos
cmp
pusha
imul
mov
adc
jo
mov
lcall
mov
aam
ret
sahf
inc
adc
ja
mov
es
pop
inc
and
addr16
outsb
fldl
int
ret
subl
dec
jnp
and
cmp
push
cld
add
sbb
cmovnp
add
and
xchg
in
mov
mov
cmpsb
cli
inc
and
loope
movsb
xor
push
pop
add
repnz
or
sti
mov
mov
dec
pop
add
and
and
repnz
adc
lret
addr16
add
or
xor
or
je
add
subb
dec
jne
add
fldt
pop
or
cmp
cmc
lahf
ret
dec
sub
dec
xlat
push
ljmp
ja
jge
mov
adcb
adc
sub
and
int
fmul
add
xchg
js
mov
rclb
mov
test
jl,pt
push
push
and
push
pop
inc
cld
mov
pop
mov
popa
icebp
out
je
and
mov
pop
div
xchg
jl
inc
cmp
and
or
mov
pusha
push
xchg
mov
out
cmpb
in
mov
andl
add
shlb
je
test
and
xor
adc
cmp
int3
out
push
ret
test
mov
test
xlat
mov
and
push
dec
sub
xchg
cmp
mov
and
imul
divl
cli
mov
std
xchg
push
jnp
clc
sbb
lds
and
movsl
mov
cmp
mov
int3
test
sub
ds
jmp
mov
push
divl
lock
add
inc
into
jns
cltd
repz
or
cwtl
rcr
pop
pop
mov
outsl
pop
adc
and
hlt
jp
add
add
fmuls
push
xchg
or
push
pop
jbe
icebp
call
sub
nop
inc
leave
adc
fs
cltd
enter
add
shrl
in
mov
or
or
and
js
xchg
andb
add
xchg
push
nop
sub
aam
loop
fcoms
and
mov
dec
add
movsl
cli
stc
out
nop
jae
add
shll
cmpsb
lods
fstl
lea
sub
add
mov
jns
mov
cmpsb
xor
mov
shr
jl
sahf
mov
incb
and
inc
sti
mov
sub
add
and
push
pushf
rolb
lock
push
repz
sub
mov
cmpsl
jp
pop
rol
mov
push
xor
clc
dec
cmpsb
sbb
dec
gs
sahf
mov
cltd
jmp
and
fstl
hlt
add
inc
mov
cmp
lret
jbe
adc
data16
dec
adc
call
mov
ret
cmp
pop
cmovne
movsb
dec
fucom
gs
repnz
sbb
and
mov
sbbb
jmp
pop
sbb
xchg
ret
lcall
sbb
pop
mov
popf
sbb
ror
cmpsl
daa
aad
add
sub
lds
cmp
mov
shrb
or
lret
and
xchg
mov
or
mov
push
bound
and
arpl
fnstcw
mov
mov
mov
dec
mov
sub
push
je
std
jl
ret
jp
push
mov
inc
add
push
mov
dec
add
push
cmp
daa
xchg
mov
or
mov
and
push
out
add
xor
inc
insl
push
mov
add
pushf
fcmovnbe
leave
add
jno
shrl
stos
into
popf
add
fmull
ret
pop
dec
out
add
xchg
hlt
movsb
jb
xchg
add
aam
insb
lods
orl
push
dec
lcall
jecxz
repnz
cmp
pop
gs
sbb
cmp
out
ljmp
stos
pop
or
or
mov
aad
add
shll
add
std
jae
push
test
int
jp
pop
xor
add
pop
dec
test
js
cmp
lahf
outsb
ljmp
push
rcrb
daa
adc
shlb
int
pushl
mov
nop
lds
mov
push
ss
lcall
les
shll
cmp
cld
add
loopne
imul
popa
inc
addr16
add
cmp
ret
cmp
and
aad
jo
add
pop
pop
stos
inc
push
aas
mov
sub
aad
jg
icebp
and
sbb
pushf
mov
ljmp
test
mov
mov
stos
loopne
int
outsb
or
inc
shl
push
hlt
scas
adc
push
popa
add
idivl
stos
cmp
sbb
add
mov
jns,pt
stos
loop
inc
or
int
add
dec
das
mul
pop
add
ljmp
and
and
loopne
int
sub
xchg
push
dec
add
test
sub
mov
push
mov
xor
add
push
jg
sbb
xor
xchg
out
push
xor
dec
and
fadds
xor
mov
mov
xor
xor
mov
lret
lock
add
std
adc
subl
fidivrs
insb
js
mov
cwtl
push
add
mov
and
xor
movsb
adc
or
cmc
and
xchg
pop
out
stos
xor
movsl
stos
jo
les
jnp
insb
add
stc
mov
adc
minps
mov
sub
fwait
cld
negl
push
popa
out
jae
mov
data16
ret
add
and
add
xor
add
daa
cmp
lcall
js
add
in
ljmp
jg
dec
or
add
xchg
and
scas
push
sahf
aad
mov
or
add
sbb
sub
cmp
push
es
jecxz
jnp
sub
fxch
dec
mov
je
cvttps2pi
push
mov
inc
repz
mov
loope
roll
mov
jnp
pop
ljmp
cmp
pop
jno
sbb
or
imul
das
aaa
mov
jno
adc
inc
add
outsb
mov
mov
and
ret
add
cmc
imul
sub
gs
outsl
rorl
fldcw
imul
out
dec
mov
lock
incl
mov
cmp
add
ret
and
subb
es
mov
or
into
sub
fidivl
or
add
mov
pop
lret
or
cmpsl
cmp
dec
add
and
and
push
pop
fstpt
inc
cli
std
mov
sub
cli
mov
js,pt
jne
iret
sbb
adc
add
jnp
pop
mov
in
sub
mov
jmp
jbe
pop
lds
add
test
jg
mov
or
mov
cmp
add
inc
sub
mov
add
dec
push
js
add
fmulp
imul
hlt
sbb
pop
in
push
add
ret
jbe
pushf
mov
and
pop
jl
dec
js
loopne
lods
pop
dec
scas
xor
cmp
ss
mov
dec
mov
lods
aam
mov
mov
cmp
mov
fsubr
dec
dec
ds
mov
seta
jae
arpl
pop
pop
int3
pop
mov
stos
and
out
in
ja
sahf
and
in
xchg
pop
mov
scas
outsl
pminsw
out
les
sahf
mov
dec
sbb
and
jne
jns
add
stos
in
sub
push
int
and
dec
loopne
xor
stc
mov
push
hlt
mov
push
movsl
ret
testb
aam
andl
data16
jnp
sbb
sarl
cwtl
xor
pop
and
pushf
jnp
mov
add
loope
mov
stos
out
push
rcr
adc
mov
and
push
jo
add
popa
lahf
mov
cmpsb
xorb
pop
pushf
add
ja
ret
jle
mov
mov
and
mov
and
sbb
mov
cs
incl
cwtl
push
add
xchg
aaa
insl
adc
inc
lret
mov
into
fstpt
cmp
xorl
jg
insl
push
mov
nop
shll
or
mov
cltd
jb
add
cmp
adc
pop
fsubl
add
xchg
sbb
fucomip
sbb
rorl
fdivrp
and
sub
call
mov
xor
sub
cld
test
cltd
in
mov
call
mov
adc
sbb
adc
add
pop
ret
xchg
push
inc
push
add
adc
test
dec
movsb
aad
cmp
sub
stos
andb
sbb
xor
and
lcall
ja
test
enter
loop
je
dec
divl
imul
and
movsl
bound
or
xor
jle
mov
stos
dec
scas
movsb
pop
ss
jmp
loop
cmp
add
fcoms
cmc
lods
scas
pop
mov
push
mov
push
and
jb
scas
leave
add
lea
inc
xchg
out
and
hlt
xchg
mov
add
or
or
stos
pop
dec
push
hlt
pusha
addr16
fnsave
adc
xor
fistpl
loop
les
adc
pop
and
and
sbbl
fdiv
sub
add
mov
addr16
jg
and
es
je
and
jg
cmpsl
cld
push
fiaddl
xlat
xchg
ror
push
jge
mov
shr
sbb
dec
inc
lcall
popa
emms
cmp
lret
jg
sbb
jbe
and
jecxz
inc
outsl
sbb
xchg
xchg
xchg
and
es
pop
movd
cmp
stos
in
cmp
mov
push
jne
std
push
icebp
pop
fnstenv
add
xor
add
stos
imul
ffree
insl
sub
andl
popf
dec
dec
or
repz
sub
movsl
scas
xchg
mov
fisttpll
call
mov
inc
sbb
es
cmpl
dec
lret
mov
mov
rclb
sahf
sub
and
jnp
add
add
aaa
sub
mov
pushf
fwait
add
loope
ljmp
lahf
dec
aad
inc
es
sub
push
pop
ret
jecxz
enter
mov
repz
cmp
xchg
scas
push
or
mov
jl
stos
mov
add
test
sub
mov
out
pop
gs
cmp
les
mov
cmp
sahf
test
aam
xor
lret
jl
add
test
icebp
dec
cmp
pop
mov
lds
ja
imul
lods
sbb
negb
jb
lock
dec
movsl
das
cmp
bound
cmpsl
mov
mov
xlat
scas
inc
shl
fcmovne
ret
and
or
incl
movsl
push
xchg
sub
fstpt
andl
in
mov
mov
push
idivl
or
leave
lds
sbb
cmc
push
lcall
dec
xor
add
lock
xlat
test
add
jp
mov
cmpsl
mov
ss
shlb
roll
test
xor
mov
pop
mov
out
cmp
dec
mov
mov
lcall
cltd
rcrb
js
jle
sbbb
lods
cld
fmull
repnz
movl
mov
test
nop
push
or
push
mov
insl
lret
mov
add
iret
fistpll
sub
fnstenv
xchg
es
and
xlat
mov
pop
or
mov
cli
in
pop
aaa
add
jl
sbb
dec
pop
mov
rorb
out
add
mov
mov
and
dec
mov
jg
movsl
std
jle
in
out
lea
mov
adc
xchg
and
ret
mov
aam
push
xor
inc
and
fbstp
xlat
push
notb
pop
inc
and
push
and
dec
in
out
add
lret
push
pop
flds
push
mov
cmpsb
daa
mov
jnp
in
add
sbb
add
xchg
sub
push
mov
les
flds
pop
fsubp
sbb
fsubr
gs
ret
and
sahf
xchg
pop
pop
cmpsb
push
cmp
mov
dec
mov
fistl
enter
adc
movl
std
js
aaa
lods
push
mov
xchg
and
cmc
scas
call
jl
inc
xchg
mov
inc
xchg
mov
add
fstps
push
jno
scas
and
repnz
roll
jg
inc
jae
fiadds
imul
mov
or
pusha
mov
mov
lods
test
jge
mov
nop
add
adc
add
nop
inc
dec
push
cmp
fisttpl
in
movsl
add
jne
sbb
gs
xchg
mov
lcall
ja
mov
mov
push
jge
mov
pushf
mov
mov
out
add
clc
lds
rolb
mov
frstor
mov
xchg
mov
push
fcomps
shll
xlat
pop
dec
cs
aaa
add
loopne
iret
std
adc
ret
mov
clc
add
pop
push
in
mov
sbbb
and
xor
aam
cld
cmp
add
add
fmull
add
sub
inc
mov
pop
jg
ret
je
and
test
mov
seta
mov
inc
adc
ret
cmp
or
stc
push
add
add
jmp
test
adcb
ficoml
add
mov
dec
add
lods
dec
adc
adc
gs
mov
mov
jae
add
add
dec
jb
adc
pop
xchg
xchg
jae
sub
jmp
dec
xchg
cmp
push
push
and
mov
or
mov
or
cmp
xor
repz
adc
faddl
fwait
add
inc
jbe
sub
pop
push
pop
nop
or
dec
mov
loope
and
cmpsb
sub
cmp
jecxz
mov
and
cmpsb
sub
xorb
mov
shufps
lahf
pop
adcl
jmp
add
out
cs
maskmovq
divl
or
mov
popa
jle
mov
pop
jbe
mov
in
dec
movsb
dec
push
add
or
rolb
and
das
test
push
rcrb
pop
sbb
sub
fadds
fcomi
movsb
mov
and
ret
data16
adc
xchg
add
xor
push
add
cmpb
add
pop
xor
mov
fadds
nop
mov
test
mov
imulb
mov
arpl
cld
repnz
rclb
ja
push
test
push
xor
and
and
and
aas
fwait
sti
sub
xchg
or
and
jae
mov
add
cmp
mov
addr16
fs
inc
mov
xchg
ja
or
arpl
mov
jno
mov
mov
or
sti
push
sbb
or
setae
dec
pop
sub
jno
fmull
and
lods
int3
insb
xor
div
add
leave
pop
test
pop
loope
cs
ljmp
pop
add
out
xchg
push
or
push
xlat
and
out
loope
mov
shlb
jl
mov
mov
les
int
and
add
mov
push
pop
mov
push
imul
add
lea
mov
xchg
jl
pop
fdivrl
cmp
das
es
cwtl
stos
test
push
repz
ljmp
test
mov
push
dec
sub
dec
xchg
js
push
sub
dec
andb
mov
pop
icebp
add
jbe
push
lea
ss
inc
sbb
jecxz
pop
scas
incb
aaa
mov
adc
jne
cmp
xor
mov
dec
adc
test
push
addl
and
sub
inc
out
push
mov
mov
nop
jmp
xchg
fsubrs
jbe
test
xchg
xchg
push
and
into
sarl
add
sbb
ja
inc
data16
stos
jmp
cmp
add
pop
add
adcb
and
sub
add
sub
push
lods
push
and
shll
and
jge
pop
imul
out
sub
xor
xchg
lds
ljmp
imul
andb
and
jo
in
mov
xlat
test
stos
aam
sbb
dec
add
and
push
js
and
push
sub
bnd
add
mov
push
call
push
mov
jp
hlt
sbb
and
and
lock
lret
add
incb
xchg
aam
adc
or
ret
out
xchg
repz
jns
and
or
add
ret
mov
jnp
fsubrl
in
mov
xor
ja
cmpsl
add
mov
and
rcl
sbb
shll
in
jno
and
xor
cmc
pop
push
fdiv
xchg
shl
xchg
mov
sbb
jae
or
repz
cwtl
cld
ja
mov
push
mov
jecxz
mov
jg
add
fs
and
gs
sub
arpl
ljmp
inc
jns
scas
sbb
dec
jb
push
rorl
loopne
fists
sti
les
punpcklwd
hlt
enter
lods
jns
sub
inc
clc
popf
or
add
adc
test
mov
movsl
outsb
repz
fildl
add
inc
cmp
mov
aaa
jnp,pn
xor
iret
insl
lahf
add
mov
sti
push
sub
insb
cmpsb
enter
sub
and
jg
xor
cmovle
test
mov
xchg
add
cli
xchg
repz
inc
sub
cmp
push
das
test
call
push
stc
leave
and
decl
clc
ja
dec
xor
or
push
aaa
mov
les
and
int3
inc
ret
or
sub
dec
dec
hlt
mov
sarl
sub
and
inc
xchg
arpl
fwait
adc
add
dec
lods
adc
ljmp
mov
mov
sub
fildll
add
add
pop
pop
sbb
push
test
jge
jns
sub
in
add
fstpl
and
add
out
push
jns
stos
enter
pop
das
lret
add
jmp
jno
mov
push
or
jecxz
add
or
pop
mov
popa
pop
push
and
inc
cwtl
icebp
aad
sub
loop
std
out
in
cmp
fdivs
mov
xor
dec
out
xor
loopne
insb
cmp
add
mov
and
out
leave
sbb
mov
jmp
daa
dec
pop
in
outsl
push
push
aas
ror
add
loop
and
add
mov
cli
push
sbbb
and
imul
mov
mov
rcl
push
mov
jmp
insl
test
mov
and
pop
nop
fs
fcomip
or
lds
xchg
lret
add
mov
bound
stc
adc
fisubl
xor
std
or
cwtl
jle
ficomps
push
xchg
int
out
or
pop
and
loope
test
pop
dec
aas
leave
movlps
push
pop
femms
xchg
push
ret
pop
push
add
shlb
addr16
cmpsl
mov
lcall
push
mov
pop
push
push
add
adc
xchg
jno
add
cmc
mov
xchg
mov
gs
fisubs
mov
out
mov
mov
jns
shlb
fdivrl
scas
dec
sub
mov
inc
cli
mov
aaa
aad
push
cmpsb
mov
and
lcall
push
andb
or
mov
jecxz
ret
mov
stos
adc
mov
add
lret
in
ljmp
pop
in
std
push
clc
xchg
addr16
mov
inc
mov
and
addr16
dec
mov
mov
mov
popf
add
mov
leave
mov
es
cs
repnz
mov
les
repnz
movsl
fsubl
psrlw
pop
dec
add
aam
shrb
fisttpl
scas
add
out
pushl
hlt
ds
lcall
out
test
out
xor
insl
and
xchg
fdivrl
leave
xor
mov
push
cmp
into
sub
push
insb
add
mov
mov
outsb
cmp
dec
jne
sbb
loopne
mov
scas
fs
push
ret
cmp
ljmp
mov
push
mov
fstpt
jo
jp
xor
cmp
jbe
jns
pop
sub
arpl
pop
scas
mov
jp
push
jge
ret
ja
mov
andl
fstpt
pop
push
adc
add
adcl
in
mov
mov
pop
add
aaa
sahf
adc
add
push
jmp
add
xchg
inc
ja
out
daa
out
inc
pop
into
mov
dec
cli
lds
dec
jg
cltd
fs
pop
mov
jb
cmc
call
jl
mov
out
nop
loop
ljmp
or
cmp
push
sbb
fst
jp
sub
scas
adc
xchg
mov
mull
sub
dec
bound
jbe
inc
jl
mov
push
outsl
loopne
lea
icebp
push
cli
mov
clc
sub
insl
faddl
inc
pop
mov
sbb
pusha
call
jg
jmp
sbb
jo
out
shll
sub
cmp
dec
pop
loop
ds
mov
ret
fadds
and
pop
or
adc
add
mov
mov
jae
stos
add
aad
bound
jl
mov
mov
out
imulb
push
and
push
xchg
mov
push
add
add
jo
cmp
mov
test
mov
pop
int
pop
pop
cwtl
js
jbe
fmuls
jp
mov
sbb
loopne
cmp
fmuls
or
movsl
adc
dec
lods
pmaxub
cmpb
add
mov
inc
fdivrs
psubsb
add
adc
repnz
gs
ret
mov
xchg
imul
push
dec
mov
and
add
scas
jo
mov
adc
lds
mov
add
lahf
idiv
arpl
icebp
inc
cli
jb
in
mov
and
sub
jl
xchg
add
add
push
dec
mov
xor
int3
jle
ret
and
and
cmp
mov
xor
cmp
imul
add
data16
sub
pusha
push
jmp
mov
hlt
sub
pop
js
movb
cmp
xor
js
scas
adc
cmc
xchg
mov
data16
aam
push
xor
ret
mov
clc
push
xchg
lret
mov
cmp
loope
add
sub
movsl
jle
add
popf
or
lret
hlt
inc
mov
cld
xchg
sub
fmuls
xor
out
adc
cmp
inc
and
sbb
xchg
cmp
lock
inc
mov
pop
add
imul
in
andl
add
lods
lret
push
xor
fwait
repnz
sub
clc
cs
pop
adc
jg
imul
or
ss
in
xchg
sbb
je
inc
mov
ficoms
in
jb
lock
and
mov
inc
or
add
dec
pop
push
inc
enter
mov
add
inc
stc
and
add
fidivs
xchg
sbb
jae
mov
sbbl
aas
addr16
sahf
add
popf
insl
push
nop
mov
jle
push
cmp
xchg
rep
mov
pusha
testl
sbb
or
nop
pop
jno
subl
or
out
les
rorl
sub
insb
xor
aas
jp
sub
xchg
mov
js
inc
jbe
ss
sahf
xor
jecxz
add
orw
pop
mov
aad
ret
das
inc
mov
insb
gs
mov
mov
arpl
jns
sbb
and
cltd
fsts
cmp
data16
mov
out
shrl
adc
adc
pop
add
cld
adc
add
or
movsb
mov
push
xchg
mov
pop
add
jne
push
mov
xor
shr
sub
add
mov
in
mov
stc
xor
pop
jbe
pop
movsl
sub
je
bnd
rorb
ret
cmp
dec
sbb
pop
repz
dec
jmp
cmp
push
pop
jmp
jnp
jae
cmc
mov
push
lahf
lahf
cmp
ds
mov
cld
clc
fprem
or
inc
jp
add
loop
int
fcmovne
push
aad
jns
push
out
mov
mov
push
je
jg
into
xchg
and
jns
insl
xchg
out
push
mov
mov
lret
pop
pop
adc
push
fwait
cld
add
cmp
rorl
xlat
add
int
into
and
scas
sbb
xor
enter
pop
dec
in
jns
jae
adc
aad
mov
inc
and
inc
or
pop
xchg
xchg
mov
dec
lods
aam
int
sbb
test
cltd
adc
loopne
cld
add
out
syscall
adc
imul
inc
xchg
ss
push
loopne
outsb
jae
dec
xchg
fisubs
xchg
pop
jb
mov
jecxz
cmp
jmp
pop
pop
jge
mov
pop
inc
cld
fdivs
or
cmp
or
and
pop
int
pushf
sbb
adc
push
add
negl
repnz
dec
ret
mov
jnp
add
notl
and
out
add
cli
fsubs
sub
shr
sub
add
push
lock
push
in
mov
test
cmp
adc
add
mov
cli
loop
pop
rol
push
fmuls
add
cmp
mov
xor
add
add
pop
xor
jge
sbb
jp
inc
mov
inc
pop
aad
movsl
lods
fcoml
push
imul
gs
mov
testl
cmp
fadds
scas
jns
lret
out
dec
add
jns
nop
add
addl
shll
push
mov
and
xchg
add
and
enter
cmpb
xor
aas
and
enter
in
or
push
push
xchg
mov
ret
jl
and
dec
sub
adc
out
negb
iret
aas
push
add
jno
cmpb
stos
filds
jg
lret
ds
dec
fnstsw
pop
mov
and
dec
fsubr
scas
and
stc
insl
adc
cmp
dec
mov
repnz
and
push
mov
mov
push
call
cmp
add
inc
nop
push
mov
sbb
mov
mov
jl
xchg
out
icebp
mov
adc
xchg
in
std
and
sahf
push
roll
adcl
or
jle
add
jae
aam
xor
sub
pop
pop
xchg
enter
outsl
or
push
add
fwait
jecxz
add
mov
sbb
dec
int3
push
es
and
in
insl
fimull
lea
jo
add
aaa
adcb
jmp
add
pop
and
in
mov
sbb
ljmp
insb
shlb
jp
mov
shl
mov
jae
faddl
test
xor
jge
clc
out
lcall
jle
mov
sub
jg
and
in
aaa
jae
ja
aad
push
pop
fists
push
mov
and
jns
gs
add
xchg
push
dec
je
iret
add
xchg
jmp
mov
mov
jno
and
cmpsl
shll
add
jecxz
sub
sbb
jns
popf
faddl
mov
cmp
and
add
sbb
or
lcall
push
and
dec
imul
mov
aad
bound
in
and
xor
mov
push
cmp
xor
ljmp
test
mov
mov
aas
es
out
pop
dec
out
adcl
jmp
pop
adc
push
fsubl
push
xchg
ja
outsl
mov
cmp
lea
add
adc
adc
sub
shlb
xchg
test
divb
stos
cs
lds
out
mov
inc
pop
xchg
imul
pop
mov
popf
mov
jno
inc
stc
push
mov
and
mov
clc
sub
roll
push
mov
pop
mov
adc
sub
mov
push
filds
sbb
pop
jmp
rcrl
fisttpl
dec
fstps
fidivl
dec
and
xchg
mov
into
movsl
pop
sub
dec
cld
lret
inc
add
lcall
mov
sub
or
and
imul
or
xchg
cs
pop
push
push
repnz
cmpsl
popa
testb
stc
shl
ret
mov
pop
inc
pop
mov
xor
mov
shll
push
aaa
les
shrb
fs
sub
dec
out
inc
and
popf
pushf
xchg
mov
jb
add
dec
or
jbe
imull
scas
push
cld
stos
xchg
loopne
ljmp
sbb
xchg
jae
and
js
push
cmpsb
shrb
push
add
outsb
and
dec
fcomip
pop
push
mov
jmp
xchg
sub
and
push
cltd
dec
inc
lock
pop
push
loopne
jbe
jns
testl
dec
jg
jae
mov
loopne
push
fiaddl
test
icebp
sub
mov
mov
test
push
sub
ret
pusha
and
js
pop
push
add
add
std
lds
test
mov
mov
mov
push
enter
inc
xor
mov
mov
cmp
jbe
mov
mov
sbb
in
cmp
cmpsl
add
scas
rorb
add
push
fisubl
pop
and
pop
lret
and
loope
in
mov
jge
lahf
add
gs
loope
rcll
mov
sbb
adc
test
jo
push
push
xchg
loope
cmp
mov
dec
inc
cld
lret
add
jecxz
xor
mov
test
stos
repz
pop
add
out
fstl
xorl
xchg
sbb
add
out
arpl
iret
outsb
es
gs
int
cwtl
loop
aam
fnstenv
cmp
sbb
adc
add
xorl
push
cmpsb
inc
xchg
cmp
mov
pusha
les
xchg
mov
mov
mov
push
stos
add
cld
dec
inc
jp
and
inc
adc
ficoms
inc
lea
add
push
shrb
enter
add
or
ret
add
xor
sahf
arpl
cmp
jmp
mov
jl
jge
daa
movsl
lahf
movsb
scas
adc
jle
les
add
and
popl
pop
cli
and
cmc
popa
loopne
add
out
filds
mov
adc
xor
dec
add
cmp
jo
in
lret
fildl
out
mov
xchg
mov
ljmp
jno
rorb
cmpsl
stos
mov
add
int
fsubs
pop
enter
ficoms
xchg
sbb
and
jo
jns
mov
add
repz
std
popa
out
mov
mov
and
push
push
mov
pop
in
mov
or
lock
popa
jle
je
push
mov
dec
jmp
aad
mov
jle
sub
int3
pushw
add
mov
xchg
cmp
out
std
mov
mov
pop
iret
stos
andl
pop
mov
pushw
cmp
inc
mov
rorb
jp
inc
push
and
inc
repnz
or
and
fcompl
pop
inc
xor
call
adc
or
mov
adc
sti
scas
lea
mov
arpl
test
push
dec
mov
mov
fimull
arpl
les
xlat
add
dec
fcompl
add
imul
int3
mov
scas
andb
mov
mov
orl
adc
mov
pushf
pop
dec
mov
enter
add
adc
mov
xlat
sbb
sarl
out
push
jmp
jne
test
mov
ljmp
int3
dec
adc
cmp
dec
mov
xor
jle
and
inc
imul
xchg
pop
shrb
popf
ja
and
inc
pop
inc
icebp
add
mov
cld
inc
xor
mov
mov
mov
int
pop
sbb
insb
jmp
filds
icebp
mov
in
xor
stc
hlt
frstor
leave
mov
cmp
xor
mov
mov
add
std
sub
pop
repz
push
js
jl
outsb
mov
inc
mov
mov
sbb
push
push
ret
addb
test
mov
mov
out
cmp
push
out
xchg
and
pop
cmp
loope
push
repz
jmp
lahf
cmp
mov
std
lock
dec
or
add
mov
mov
sbb
mov
enter
mov
xchg
adc
jae
sbb
js
and
and
jecxz
repnz
lea
mov
add
mov
dec
push
inc
sub
rcrb
add
inc
movsb
lods
push
pop
pop
js
in
shll
cltd
jnp
cmpsl
cmp
addl
btr
push
sub
imul
sub
lea
iret
lcall
sub
mov
mov
jns
dec
and
mov
mov
jp
clc
inc
aaa
and
xor
test
pop
pop
sub
loop
or
sarl
add
call
mov
repz
mov
insl
mov
push
xchg
gs
mov
mov
and
lods
mov
cmp
icebp
cmp
or
and
mov
add
idivb
loope
nop
xor
aad
in
dec
sub
jae
adc
cs
push
add
pushf
jns,pt
mov
es
sbb
hlt
clc
insb
sbb
popf
pop
or
mov
dec
jns
inc
jl
jno
in
mov
inc
cltd
jmp
mov
sub
fstpl
pushf
movb
sub
jge
loopne
pop
adc
inc
or
lahf
loope
jns
add
jle
xchg
dec
test
mov
icebp
xchg
add
fsubrs
stos
jp
mov
pop
dec
mov
cmp
push
in
xchg
aas
fsub
into
ret
dec
add
divb
and
xchg
fidivs
xor
jp
dec
mov
stc
std
inc
mov
add
mov
push
movsl
push
mov
mov
xchg
sar
cmp
push
paddq
pop
in
lock
push
scas
cmp
inc
add
push
pop
push
xlat
dec
push
int3
mov
xor
jae
fs
lods
aaa
roll
ret
xlat
push
mov
testl
mov
xor
inc
push
stos
push
cmp
out
add
and
fucom
inc
xor
bound
sbb
pop
and
xchg
popa
xchg
aas
les
iret
scas
movsb
scas
lock
push
push
xor
mov
sbb
lods
add
in
mov
addl
mov
insb
or
lds
mov
mov
bnd
lds
es
hlt
dec
rclb
mov
add
ss
lods
push
aas
cmp
jmp
and
mov
mov
mov
mov
fiadds
add
jmp
ficompl
dec
pop
cwtl
dec
add
sbb
inc
mov
mov
sub
add
ret
arpl
push
fdivs
xchg
outsl
vmwrite
pusha
lahf
push
fnstsw
push
aam
out
and
adc
mov
add
shrl
pop
cmp
mov
add
add
stos
fldt
rolb
push
js
dec
and
pop
mov
call
movsl
stos
movsb
dec
sub
pop
aas
inc
adc
sub
insl
idiv
add
push
scas
out
lods
rorb
mov
clc
mov
stos
adc
xchg
andb
mov
addb
lahf
xchg
pusha
jnp
dec
dec
or
add
cmp
inc
add
out
dec
in
and
mov
dec
xchg
fcmovb
mov
jno
mov
ss
push
mov
bound
add
dec
rcll
lahf
lret
mov
push
sub
mov
loopne
or
pop
mov
and
xchg
mov
xchg
push
ja
movsb
mov
das
sub
pavgb
ret
out
test
add
stc
idivl
mov
rolb
and
sbb
addr16
mov
sub
pusha
push
pop
sbb
faddp
addb
lds
int
inc
call
dec
pop
jg
fnstsw
and
mov
cs
shll
add
inc
lock
bound
ljmp
lds
dec
inc
sub
popf
xor
inc
sub
mov
mov
gs
add
shll
mov
adc
lcall
outsb
std
loope
mov
movsb
pop
mov
and
xchg
adc
xor
movsl
cwtl
lods
imul
fstpt
and
fs
push
push
pop
jecxz
pop
xor
lcall
xchg
add
add
loop
mov
ja
loop
test
popa
mov
iret
mov
push
pop
xchg
add
pop
lret
pop
mov
lods
add
add
dec
add
sub
negl
sbb
lcall
lods
push
inc
add
and
pop
push
fidivrs
loope
cmpsb
inc
sub
add
stc
dec
cld
add
dec
and
adc
sub
fnsave
inc
sarb
push
leave
icebp
repz
mov
or
mov
xor
jnp
hlt
call
int3
add
sbb
pop
pop
and
test
mov
filds
ficompl
xor
repnz
fsubrl
mov
inc
test
and
xor
xchg
mov
stos
sti
add
aam
mov
adc
inc
pop
pop
jmp
adc
popf
imul
loop
adc
in
pop
lock
clc
sti
mov
faddl
xchg
out
hlt
and
push
inc
cwtl
mov
ret
sbb
adc
hlt
faddl
push
push
mov
js
add
mov
std
dec
cmp
rcll
ret
aas
add
std
mov
mov
cmc
repnz
pop
inc
jg
mov
ds
ret
popa
sbb
xor
dec
mov
cmp
orb
clc
ret
and
push
dec
fdivl
loope
ret
insb
pop
add
ror
add
test
scas
fwait
in
mov
sub
shlb
push
and
outsb
in
xor
mov
dec
or
sub
mov
jno
ljmp
imul
and
inc
pop
pop
out
add
push
and
adc
push
add
test
xchg
js
cmp
fiadds
mov
cli
xor
mov
add
xor
enter
mov
sahf
pop
enter
insl
push
push
jbe
test
bndstx
setl
test
sahf
sti
sbb
shr
sbb
cmp
nop
sbbl
stc
int3
mov
jecxz
lahf
outsb
mov
aad
xchg
jl
js
cld
mov
dec
jle
add
ljmp
shll
nop
adc
scas
sti
popf
cli
rcll
pop
and
aam
cmp
dec
mov
daa
clc
sbb
and
xor
pop
adc
push
fistpl
and
jo
mov
lds
add
out
inc
inc
mov
sbb
std
and
mov
test
jge
and
shll
cmc
data16
xchg
and
add
dec
pop
xchg
sbb
xor
ja
popf
adc
sbbb
adcb
push
hlt
out
popf
fistl
in
or
sub
mov
and
pop
and
cli
inc
fucom
add
mov
sub
xchg
dec
mov
movsl
inc
aaa
cld
loopne
add
pop
std
pushl
adc
nop
xor
cmp
and
pop
add
sbb
cmp
sti
dec
ja
negb
addl
inc
or
cmp
lock
add
fcmovb
mov
pop
dec
xchg
les
mov
adc
scas
adc
mov
arpl
adc
pushf
dec
xlat
das
roll
dec
mov
mov
push
cltd
sbb
pusha
sub
sarb
shlb
mov
add
cltd
insb
fsubrl
add
xchg
fldt
stos
add
add
scas
pop
ret
fadds
mov
add
or
sbb
gs
mov
gs
sub
add
and
inc
pop
mov
pop
mov
jae
loopne
xrelease
cld
mov
popf
fsts
push
pop
ret
lret
and
push
xchg
xor
icebp
and
jg
mov
push
faddl
xchg
cmp
mov
and
repnz
mov
inc
in
adcb
xchg
mov
push
stc
mov
pop
push
scas
arpl
movsb
leave
add
cmp
adc
and
aad
stos
roll
bound
and
fcomps
dec
ficompl
orl
xor
ja,pn
sbb
sahf
cmp
scas
mov
and
data16
loopne
pop
sti
xorb
mov
xchg
ret
mov
dec
sub
pusha
fmuls
and
jo
pushf
adc
out
mov
leave
ljmp
shll
sub
add
cmp
sub
imul
push
hlt
lds
cmp
cmpb
mov
add
inc
dec
fstpl
add
fstps
les
and
gs
fiadds
push
inc
pop
inc
mov
jns
psrad
scas
pop
xchg
push
iret
sbb
mov
jmp
xchg
ss
ljmp
daa
pop
and
cmpsl
push
outsl
and
xchg
mov
mov
sbb
paddsw
fstpl
and
ret
dec
add
or
mov
sub
inc
jg
and
cmp
add
push
pop
and
lret
test
mov
xorl
aad
lea
insb
aaa
xor
ret
pop
iret
xchg
xor
jecxz
jbe
sub
add
mov
movsl
inc
push
pop
jp
call
mov
sarl
loope
and
lahf
jecxz
jle
cwtl
ret
cmpsb
add
jecxz
mov
loop
fs
lret
mov
cmp
dec
jae
jno
pop
inc
pop
add
sub
inc
mov
add
out
xchg
add
mov
xchg
outsl
fwait
data16
adc
mov
lcall
add
mov
shrb
dec
jecxz
mov
sbb
std
inc
add
mov
add
adc
cmp
mov
popl
in
xor
mov
es
subb
lea
fwait
sbb
dec
add
cmp
out
and
lahf
cmpsl
pusha
cmp
stos
in
clc
xchg
dec
in
and
cmp
cmc
data16
out
mov
mov
arpl
fimuls
xchg
dec
lret
loope
movsl
mov
imul
jmp
sbb
push
mov
sahf
adc
jo
lods
mov
mov
or
daa
insl
fcomps
and
adc
out
add
push
adc
mov
dec
cmpsb
pop
mov
jno
leave
stc
jmp
es
xor
ret
in
pop
pop
jne
mov
sub
std
and
out
mov
mov
shr
stos
and
xchg
adc
test
aam
add
mov
cmp
imul
pop
xchg
filds
dec
mov
hlt
cld
addl
xchg
inc
data16
xor
dec
clc
push
stos
add
enter
xlat
adc
jb
pop
dec
test
push
je
mov
divb
lods
add
fsubl
cmpsl
add
mov
dec
mov
push
lds
test
add
add
inc
jb
xor
mov
pop
rep
cs
cmp
cld
add
jo
jnp,pn
inc
loope
aam
pop
stc
add
xor
shrb
xchg
pop
xor
and
cmp
stc
mov
add
sub
fbld
imul
or
pusha
pop
pop
imul
pop
orb
mov
or
inc
mov
int
jo
mov
out
and
dec
js
fs
cmc
orb
sub
jmp
add
jmp
or
add
or
loope
pop
and
pop
push
mov
popf
outsb
cmp
xchg
aaa
pop
xchg
mov
flds
shlb
or
cmp
imul
ret
test
dec
pusha
inc
mov
and
dec
or
jbe
sub
add
outsl
lds
add
lock
xchg
push
bound
sub
add
xchg
gs
push
mov
mov
and
hlt
dec
push
mov
test
das
add
fnstenv
nop
adc
bound
xchg
push
clc
jmp
dec
sbb
fisttpll
pusha
add
or
nop
add
or
push
xor
and
mov
sbb
xor
int
stc
repz
pusha
call
cmp
mov
pushl
fdivl
sub
addb
ret
pop
cmp
std
dec
xchg
jmp
daa
and
push
fstpt
add
out
sar
lea
mov
out
inc
sti
test
loopne
add
aas
mulb
subb
pop
xchg
inc
xchg
pop
roll
outsb
das
pop
adc
jb
loop
fnstenv
mov
xchg
mov
ja
mov
leave
and
push
imul
mov
jecxz
call
repz
xor
jp
add
sbb
mov
mov
into
lret
mov
mov
ficomps
lret
add
inc
mov
outsl
shlb
aas
in
and
fstpl
cmp
js
adc
pop
shrb
and
jmp
fnstcw
les
add
int3
roll
into
pushf
sbb
cli
test
in
ljmp
sub
rcl
sub
fmul
mov
mov
add
cmpsb
mov
mov
fidivl
int
add
pusha
test
cmc
mov
inc
roll
pop
cld
jns
gs
add
mov
aaa
scas
mov
mov
adc
imul
adc
pop
add
rcrb
or
add
aam
aam
test
mov
xor
pop
imul
jae
inc
sbb
popf
out
movaps
xor
add
inc
mov
xchg
rcrb
dec
pop
mov
add
bnd
icebp
jae
push
ja
xor
add
jno
rorw
pop
movsl
repz
sbb
jno
dec
mov
in
mov
cmc
sbb
sub
inc
test
mov
ret
sub
dec
mov
fsubrl
add
xor
dec
faddl
add
cmp
mov
insl
ds
lea
xchg
cmpsl
add
icebp
les
lds
ja
add
in
insl
jl
add
aam
mov
jo
sub
ja
sub
sub
add
xchg
mov
mov
cmp
pop
ror
mov
jg
fldenv
and
sbb
or
cmp
clc
outsb
xchg
negb
fistl
dec
shlb
fmul
push
and
ret
mov
mov
pop
jg
mov
stc
add
pop
xchg
add
add
xchg
lods
add
and
sub
xor
push
ss
xor
adc
add
js
sub
mov
xchg
sbb
jecxz
inc
pop
mov
pop
push
cli
je
ret
lea
aaa
jle
ss
cmp
out
cmp
mov
rolb
add
sbb
pop
sar
cmp
ss
pop
movsb
jae
push
and
jo
adc
add
cmpsl
push
push
int
int3
cmp
or
mov
add
jb
lret
or
mov
mov
pop
movsb
mov
shrb
mov
fs
cli
mov
pop
lret
and
loope
ljmp
xor
or
dec
cmp
cmp
jl
add
push
push
lcall
add
shll
test
ss
and
pushl
subb
dec
cli
or
leave
jmp
shll
push
mov
out
ds
lds
sub
fsts
lods
or
not
mov
lahf
cmp
rcll
pop
mov
add
xchg
lret
xchg
mov
out
mov
adc
imul
in
push
shll
loopne
lods
adcb
jae
inc
sti
lods
mov
jb
push
mov
pop
gs
pop
cmp
add
sbb
add
mov
mov
imull
movups
cltd
push
rcl
add
lea
add
dec
sub
mov
movsb
add
jb
xor
and
mov
aam
roll
sbb
add
pop
loop
sbb
inc
cmp
adcl
inc
sub
sub
int
adc
and
cs
sbb
add
aaa
fs
movsb
or
fisubs
sub
sti
jb
int3
add
lret
or
xchg
add
sbb
push
into
loop
mov
jg
inc
mov
mov
int3
inc
inc
jnp
mov
test
inc
mov
jno
sbb
add
movsb
xchg
lods
add
idivb
push
add
es
mov
into
sbb
sbb
std
cmp
mov
push
ret
add
dec
xor
xor
stos
mov
sbb
inc
and
xor
add
push
jae
xor
xchg
sbb
mov
xor
add
push
ja
je
xchg
dec
add
sub
sub
add
fdivrp
pop
call
mov
jbe
xchg
loop
jl
push
xchg
adc
add
and
test
fldcw
stos
inc
cltd
pop
mov
cmp
push
xchg
scas
mov
daa
xchg
push
rorb
sbb
dec
push
out
pop
push
or
hlt
sarb
mov
imul
cwtl
and
and
mov
stos
jb
fs
add
repnz
cmc
jne
loopne
mov
popf
int3
int
bound
add
and
pop
push
lods
add
repnz
xchg
push
lods
hlt
or
fisubrl
ss
cmp
out
inc
sbb
in
movsl
movsl
in
sbb
push
out
dec
sub
jo
rcrl
sti
cmpb
add
jge
std
lock
and
mov
dec
inc
push
or
sbb
and
xor
add
aaa
push
shlb
loopne
sub
bound
sarb
push
xor
popa
test
out
stos
cmp
lret
jbe
and
pop
jp
jns
jmp
daa
mov
add
nop
fisttps
pshufw
push
add
pop
in
ds
sub
ss
or
xor
or
hlt
rcrb
std
jb
jb
adc
arpl
int
xor
flds
inc
cmp
mov
add
xchg
inc
push
add
pop
in
sar
jae
mov
push
std
enter
fcoms
jle
mov
cs
sbb
push
pusha
xchg
pop
add
cltd
cmp
push
in
cmc
fmuls
movsl
add
xchg
addr16
test
cmp
sarl
mov
fsubl
mov
jge
mov
xor
inc
int
test
ret
pop
dec
cmp
jp
or
icebp
outsl
cmp
xchg
inc
div
push
mov
fs
mov
sub
aaa
inc
add
faddl
add
iret
movsl
add
xchg
add
lods
sbb
inc
mov
add
xchg
lea
scas
push
mov
and
lret
inc
cmp
or
cmp
pop
jae
es
and
dec
xchg
jge
add
outsb
sbb
inc
pop
iret
pop
lea
push
xchg
gs
stos
inc
adc
mov
sahf
add
aaa
pop
cmp
mov
rorb
xor
cmp
clc
add
fisubrl
dec
scas
cli
mov
loop
add
add
push
shlb
add
mov
lret
add
dec
movsb
fstpt
cmp
jo
lock
jae
ffree
add
xchg
lock
dec
std
lea
cmpsl
add
jge
mov
and
and
mov
mov
in
and
repnz
clc
push
shlb
ja
mov
push
add
add
and
push
decl
dec
sub
mov
rdpmc
fdivrl
xor
pop
fistpll
or
nop
mov
adc
inc
cmp
adc
and
fldt
add
xchg
mov
roll
outsl
jmp
push
mov
xchg
adc
push
lock
and
push
cmc
xchg
clc
repnz
push
and
and
inc
sbb
gs
aas
mov
iret
dec
add
sub
cmp
pusha
inc
dec
and
arpl
sub
sub
out
mov
pmulhuw
or
inc
loopne
std
pop
pop
lock
xchg
sarb
mov
imul
add
push
js
in
pop
pop
add
mov
rorb
ret
xor
das
jne
and
pop
add
mov
into
xor
xchg
lds
add
in
add
in
inc
outsb
fisttpll
loopne
cmp
enter
dec
stos
fstpt
xor
les
cmp
mov
lcall
xchg
and
pop
sub
dec
pop
add
mov
insb
sbb
sti
std
push
push
and
lock
ret
jo
mov
in
or
xor
js
in
push
mov
sub
add
mov
cli
and
sub
dec
out
or
cmp
and
xorl
aad
jp
xchg
add
sub
shll
leave
mov
sub
sub
ret
pop
lcall
testb
in
mov
xor
aad
int
and
fdivrl
in
es
push
dec
pop
mov
pop
adc
xor
and
sti
mov
mov
cwtl
stos
out
xor
pop
and
adc
add
shll
push
add
xchg
insb
push
add
aas
inc
pop
push
sbb
incb
add
movsl
xorb
add
dec
lods
cld
mov
out
sub
mov
sbb
xor
push
dec
push
ret
dec
imul
js
pop
jp
jle
js
xchg
fcmovne
in
add
rcl
cwtl
das
jne
aam
movsl
add
mov
mov
lds
pushf
fadds
and
push
push
inc
outsb
and
loop
xchg
xor
insb
mov
dec
in
not
or
inc
scas
ljmp
mov
add
in
xchg
push
sbb
jl
push
inc
testb
and
in
or
aam
jae
enter
or
cmp
fdivrl
testb
adc
test
loopne
fisttpll
fwait
imul
push
add
xor
cmp
add
movsl
scas
adc
add
sbbb
or
cmpsl
movsb
or
lods
cmp
test
dec
xchg
inc
rcrl
pop
and
inc
lret
push
pop
jle
mov
test
add
or
or
fcomp
fs
add
add
mov
outsl
stos
xor
or
add
icebp
jecxz
add
adc
xor
cmp
fstl
jne
pusha
lock
mov
fcmove
popa
aad
lods
sub
loope
sarl
cld
movsb
push
or
xor
fimull
add
ss
inc
mov
xchg
mov
and
push
pop
or
add
loop
adc
jo
movsl
rorl
jp
out
mov
lock
mov
lret
lcall
push
mov
daa
pop
mov
add
lds
sub
push
iret
or
inc
cmp
movsb
pop
add
popa
aaa
stos
fidivrs
mov
loope
sbb
dec
ret
mov
push
inc
hlt
inc
mov
lcall
insl
call
inc
jae
sub
add
outsb
fadds
sbb
dec
mov
aas
mov
xor
and
mov
fildl
rcrb
and
lahf
flds
ja
adc
mov
push
push
dec
loope
cltd
mov
or
mov
and
outsl
lcall
and
xchg
cmc
mov
call
add
and
mov
sub
or
jno
mov
cmp
cld
in
push
test
mov
add
lcall
insb
and
repz
sub
mov
stos
xchg
add
inc
out
dec
push
scas
xor
fwait
inc
or
or
pusha
push
cmp
and
adc
sbb
jle
ljmp
mov
sub
xchg
and
sub
cmovb
out
call
iret
decb
xchg
xchg
inc
adc
jl
jo
shl
sbb
xor
fcoms
lods
inc
into
mov
lcall
and
cwtl
or
adc
pushf
mov
add
jle
cmpl
pop
add
xchg
flds
adc
xor
enter
orb
imul
mov
in
jne
inc
fmulp
jmp
ficoml
xchg
mov
mov
and
jl
lods
sbb
sub
out
nop
mov
push
adc
jo
push
loope
rcl
dec
pop
imul
gs
lahf
and
imul
add
aas
or
das
xchg
mov
cli
jmp
push
sti
and
cmpsl
andl
dec
sti
or
inc
adc
mov
jne
fst
mov
imul
xlat
push
stos
jae
jecxz
inc
add
fisubl
ret
mov
jl
add
adc
xchg
loopne
push
ss
mov
mov
xchg
jns
cmp
inc
into
movsl
shr
data16
cmpsb
add
aas
dec
push
movsl
popf
and
xchg
int3
sbb
xorb
and
dec
in
addr16
add
adcl
inc
insb
notl
adc
mov
sub
or
cmp
push
mov
pop
inc
sub
pop
mov
add
mov
out
test
rcr
mov
xor
inc
into
inc
xchg
dec
in
ja
cmpsl
add
movsb
sub
sbb
add
mov
mov
andl
outsl
push
inc
cwtl
inc
lock
in
add
rol
imul
mov
or
or
add
aad
and
jp
test
or
nop
sbb
js
leave
xor
cwtl
xchg
or
dec
and
mov
and
add
jg
pushf
and
xchg
std
out
sub
and
or
insl
mov
xchg
push
mov
pop
lods
xchg
add
jp
mov
cmc
lock
cld
aad
push
cmp
xlat
mov
pushl
xor
jns
add
or
mov
cmpsl
inc
das
mov
cmp
sub
js
ss
bound
popf
add
ret
repnz
inc
pop
inc
jge
cli
inc
pop
jnp
inc
scas
mov
pop
aas
ret
jno
cmp
call
adc
stos
test
pop
and
mov
cmp
cld
cmp
jecxz
add
jo
loope
mov
add
mov
enter
sbb
cmp
fstps
jg
cmp
leave
shll
jp
sarb
pop
mov
shlb
add
adc
imul
sub
mov
sbb
jo
add
or
sub
scas
je
data16
xchg
rolb
mov
sarb
push
and
mov
cmpsb
mov
popf
imul
loope
jb
stc
sub
or
sbbb
aas
mov
cld
inc
xor
or
in
dec
insb
stos
popl
push
pop
es
sub
movsl
popf
ds
lds
repz
sbb
pop
divb
into
mov
rcrb
xor
shll
es
push
icebp
js
xchg
inc
push
leave
pop
sahf
test
push
test
mov
bswap
div
fsubl
jp
cmpb
inc
arpl
sbb
loopne
into
pop
fs
mov
push
jecxz
imul
mov
nop
push
imul
in
pop
mov
cmp
add
mov
xor
js
fisubl
out
or
mov
pop
and
popa
xchg
mov
sbb
adc
add
cmp
mov
inc
std
popa
ljmp
inc
sub
orb
ja
mov
sbb
mov
ret
pop
scas
mov
mov
movl
cli
mov
lock
and
out
xchg
sbb
and
inc
lods
add
push
insl
in
and
cmp
jns
adc
push
insl
pop
repnz
add
fwait
sub
mov
movsl
mov
add
pop
mov
gs
cmpsl
and
js
aad
cmp
pop
out
cltd
mov
jecxz
rorb
insb
cmc
pop
out
insb
cmpsb
add
fisttpll
add
test
mov
add
mov
adc
and
lock
enter
sbb
les
jge
outsl
dec
mov
popf
and
adc
dec
jne
inc
dec
out
sbb
mov
jp
mov
mov
cmc
push
push
add
xorl
and
mov
inc
lods
cmp
ror
rolb
hlt
leave
insb
pop
cwtl
sbb
imul
inc
push
mov
add
sbb
ret
xchg
xchg
inc
mov
repnz
dec
mull
stos
mov
add
aad
std
and
push
xchg
loopne
xchg
or
bswap
jmp
pop
xchg
jo
and
mov
cwtl
mov
popa
adc
out
and
cltd
ja
or
add
xor
jg
or
add
mov
xchg
in
imul
sub
mov
lret
pop
cmp
mov
aaa
push
xor
mov
inc
and
lock
xor
sarb
cmpsl
in
mov
popa
mov
cld
int
mov
ret
addb
ja
pop
dec
push
and
mov
xchg
mov
adc
out
add
and
test
dec
out
inc
inc
adc
lahf
add
lock
and
adc
mov
insl
addr16
test
mov
xchg
bnd
mov
add
int3
fs
pop
and
pop
sbb
mov
add
pop
test
loopne
aad
pop
xchg
jl
ds
inc
mov
hlt
push
push
andb
fnstcw
and
push
jns
aaa
add
scas
jae
xor
jne
enter
icebp
aam
or
push
add
rdmsr
xchg
daa
xchg
pop
loopne
sbb
mov
repz
and
sub
cli
cli
add
jne
movsb
lods
and
lcall
aaa
adc
lahf
mov
jge
sub
add
mov
mov
add
sarl
fmul
pop
and
mov
mov
gs
push
push
rcll
mov
mov
subl
adc
scas
and
xor
in
adc
ficompl
addl
inc
or
xor
inc
sbb
xchg
lock
sti
add
push
or
and
call
jo
mov
aad
mov
loope
in
mov
movsl
movsl
mov
lock
mov
lea
mulb
inc
mov
insl
jge
inc
sbb
rorl
je
pop
mov
jae
dec
loop
pop
push
add
jb
inc
loope
insl
dec
jmp
hlt
dec
mov
xchg
jo
push
popf
int
mov
mov
add
sub
mov
sbb
push
mov
and
sub
pop
or
mov
add
mov
cmp
add
mov
cmp
xor
ret
pop
leave
cwtl
push
lret
mov
fsubl
ja
add
jbe
testb
ljmp
push
rcr
or
mov
not
fmull
fiadds
popa
in
repnz
fucomip
mov
jbe
push
fists
push
js
pop
andl
testl
adc
and
ja
stos
pop
aas
jnp
gs
inc
daa
cmp
pop
addr16
cmp
xchg
jns
mov
cmc
es
stc
sub
lahf
daa
jb
sbb
jnp
inc
shll
int
jne
or
stc
mov
insl
std
ret
icebp
jb
mov
movsl
mov
aaa
lahf
lods
pop
add
mov
cmpl
mov
xchg
cmp
in
xchg
inc
scas
xor
add
push
outsl
add
loop
and
into
lahf
and
pop
xchg
orb
movsl
pop
clc
xor
cmpb
pop
xor
or
stos
and
dec
aad
xchg
mov
mov
loope
xor
add
and
push
push
movsb
xor
mov
lret
xor
adc
out
xlat
push
xor
xchg
push
cmp
nop
cmc
xor
mov
dec
xor
pusha
incb
or
clc
push
dec
cmp
addr16
jmp
outsb
je
out
pop
mov
sub
orb
jge
and
lahf
dec
add
xchg
pop
mov
fisttpl
jp
add
xchg
mulb
pop
popa
jge
cs
test
sub
add
mov
cmpsl
add
lods
push
push
out
faddl
dec
jecxz
repz
leave
es
nop
add
lock
xchg
clc
sahf
mov
movsb
mov
aad
sbb
pop
push
sbb
fwait
push
jp
mov
bound
dec
cmp
cmpsl
mov
and
out
sbb
inc
lret
cmp
sub
cwtl
dec
or
arpl
inc
or
mov
add
subl
push
popf
sub
and
rclb
jnp
xchg
sbb
cs
and
and
sbb
loope
inc
jge
push
dec
inc
xchg
jns
jl
lret
outsl
in
pop
pop
mov
sahf
mov
and
add
push
int3
repnz
jmp
cmpb
cld
xchg
ds
xchg
add
jle
into
sbb
in
jl
repz
ret
shrb
fnstenv
add
popa
lret
mov
and
hlt
adc
fsub
mov
add
sbb
inc
mov
add
shrb
mul
and
call
cmp
out
xor
lods
mov
xor
arpl
fisttpl
jmp
mov
and
push
and
inc
dec
test
add
fldenv
movsb
add
lods
ss
mov
rorl
cmpsl
mov
adc
leave
and
insb
cwtl
push
or
std
inc
insb
ja
orb
nop
mov
cmp
sub
inc
mov
repnz
daa
scas
adc
filds
xor
sbb
xchg
in
popf
mov
mov
adc
or
test
xor
bound
scas
mov
push
inc
ret
xor
cmp
push
pop
cmp
cmp
xlat
or
in
sub
add
pop
gs
xor
and
in
test
clc
adc
stos
sub
push
icebp
mov
lods
shll
mov
inc
xchg
pop
stc
rclb
das
push
jbe
add
movsb
scas
jns
and
xchg
pop
decb
dec
mov
xchg
aas
clc
in
lcall
les
dec
push
in
movsl
sarl
in
adc
fldl
add
dec
add
push
add
add
cmp
daa
cmp
pop
rcr
mov
mov
pusha
jle
in
inc
mov
jp
stc
movsl
jne
sahf
inc
addr16
lods
pop
adc
xor
xor
fidivrs
inc
xorb
add
mov
repz
inc
add
addr16
mov
add
push
stos
je
xchg
sbb
les
add
stos
xor
mov
out
mov
and
mov
sbb
add
jns
xchg
xor
add
das
sar
rorb
dec
sbb
and
adc
adcb
or
push
push
mov
sub
inc
and
xchg
push
in
dec
mov
xchg
adc
and
inc
in
cmpsb
test
inc
jge
clc
lods
jne
inc
and
dec
popf
das
xlat
cmc
mov
sbb
inc
adc
xchg
add
mov
xor
popf
sbb
xor
or
adc
add
and
lret
push
mov
test
aad
or
or
xchg
and
pop
leave
divb
lcall
mov
push
fiaddl
movsl
pusha
mov
jns
jmp
in
xchg
into
jae
hlt
pop
cwtl
inc
cmp
pop
faddl
shl
jmp
fiaddl
aaa
fisttpll
xchg
sub
mov
aaa
mov
or
xchg
mov
fstl
mov
inc
fcompl
and
cltd
pushl
add
ret
adc
add
xlat
mov
enter
std
sbb
js
je
pop
lock
into
fdiv
ret
or
or
mov
test
add
add
inc
mov
mov
cmp
jmp
popa
add
out
inc
clc
mov
dec
jmp
and
mov
jb
cwtl
sub
sub
insl
xorb
xlat
fidivl
f2xm1
jae
mov
cli
fcompl
push
mov
shrb
out
sbb
shrb
mov
adc
out
je
call
inc
roll
sub
dec
or
repnz
aas
jae
add
mov
cmc
inc
push
out
outsl
add
fmull
pushf
pushf
gs
insl
imul
loope
sbb
fnstsw
jecxz
and
sbb
mov
sbb
xchg
imul
and
add
pop
js
xor
push
xchg
add
sub
xchg
push
nop
sbb
or
inc
or
or
mov
dec
inc
inc
dec
popa
arpl
call
leave
clc
adcb
and
and
xor
add
imul
mov
aaa
into
and
pop
rolb
scas
xchg
and
loop
mov
fiaddl
pop
and
pop
xor
mov
in
push
hlt
pusha
jae
outsb
dec
sbb
roll
aad
rorb
leave
mov
sub
in
add
adc
stos
ret
add
mov
fs
push
add
insl
xchg
and
cmp
cmp
and
and
add
pop
dec
insl
mov
push
sti
jmp
add
fs
xchg
outsb
jge
jae
sub
sub
outsb
outsb
or
sbb
mov
and
psllw
adc
sahf
testl
dec
scas
mov
mov
add
mov
sarl
push
mov
adc
call
cmc
mull
mov
std
stos
or
stos
add
iret
aas
xchg
add
mov
jecxz
jo
and
adc
in
mov
mov
add
mov
arpl
push
jbe
mov
add
sti
xor
test
lods
or
out
add
mov
es
sub
dec
movsb
and
adc
or
cli
cmp
sub
cmp
daa
push
push
in
xor
and
mov
sub
xor
add
insl
dec
stos
mov
cmpsl
lret
loop
lret
mov
and
lret
movsb
das
lods
rcll
mov
not
add
xchg
stos
and
in
in
scas
faddl
cs
inc
or
es
shll
mov
inc
jae
loop
mov
adc
lock
fistps
adc
lcall
imul
mov
andl
pop
mov
mov
jmp
sbb
and
les
push
loop
lret
dec
call
sub
cwtl
hlt
mov
add
test
add
outsl
xchg
sti
movsl
inc
movl
negl
fsts
leave
sub
subl
push
add
pop
xchg
jmp
push
or
cld
lcall
and
sbb
xchg
push
sbb
ja
nop
or
xor
xchg
adc
pop
and
push
std
mov
cld
stos
jb
mov
orb
sti
jnp
jnp
xchg
xor
xor
jae
push
lahf
clc
push
add
push
xchg
push
fbld
outsl
push
pop
loop
cmp
outsl
mov
cltd
insb
aas
scas
mov
cmp
rorb
push
inc
add
add
movsb
or
sbb
mov
mov
or
mov
cmp
iret
push
mov
mov
sahf
pop
in
or
stos
cmp
cmp
add
ljmp
mov
inc
add
sbb
rcl
dec
and
in
fstpt
adc
aad
xchg
jb
repnz
imul
inc
mov
mov
mov
test
jnp
add
mov
push
iret
cmp
add
mov
repz
jp
dec
out
in
popa
pop
jns
add
push
aaa
xor
inc
pusha
cmp
gs
or
leave
idivl
int3
jg
pop
enter
mov
test
and
or
fisttpll
xor
movsb
movsl
fadds
inc
movsl
sti
iret
and
inc
movl
jo
bound
andb
pop
addb
add
sub
mov
mov
cmp
and
jge,pn
movsl
mov
xorb
jp
cmp
sbb
ret
addr16
xchg
add
push
push
cmp
dec
movsb
pop
adc
inc
add
scas
xor
mov
mov
mov
pop
mov
jl
xchg
jmp
ljmp
add
xchg
and
xor
adc
jb
aaa
cmc
xchg
loopne
int
xchg
outsb
popa
pop
lret
call
and
adc
and
mov
mov
aam
sbb
xchg
inc
outsb
pusha
mov
ljmp
movsb
jmp
fwait
shlb
shll
outsb
sub
mov
dec
int3
push
add
cmp
orl
mov
rolb
and
outsl
mov
ret
and
add
and
iret
mov
xchg
add
push
and
imul
mov
int
notb
xchg
in
imul
add
lret
inc
push
lods
dec
cmp
into
fdivs
repz
xlat
popf
js
add
out
sub
mov
pslld
fdivrs
mov
cld
insb
lahf
push
loope
inc
les
rcrb
sub
xchg
nop
subb
pusha
sub
and
and
inc
fildll
lret
xchg
add
jno
adc
sbb
pop
pusha
ds
inc
sbb
lods
add
dec
cmc
add
lock
mov
adc
jo
inc
jne
and
lcall
jg
es
inc
je
pop
rorl
leave
jle
mov
cwtl
jne
popl
mov
and
or
movsb
xchg
popl
mov
sub
xchg
sbb
inc
mov
cmpsl
stos
gs
scas
and
add
jmp
lahf
dec
movsb
scas
and
adc
mov
mov
mov
mov
cmpsl
test
cmp
jge
add
pop
xchg
les
or
and
and
mov
add
shl
cld
add
or
push
mov
iret
clc
pop
push
cmp
fisubrl
add
push
js
sbb
mov
cmpsb
jmp
ret
repz
fisubs
jmp
lret
mov
and
cmpsb
jae
and
rcll
out
ret
dec
daa
push
sub
inc
cs
iret
and
inc
imul
mov
add
xchg
loope
cmpsl
cmp
scas
enter
loope
aad
gs
jg
imul
lret
push
mov
out
mov
movsl
dec
mov
xchg
push
or
mov
lods
lea
dec
and
insl
and
loope
adc
call
jbe
xchg
sub
mov
addl
mov
fimuls
jecxz
add
inc
add
sbb
lret
fs
repnz
add
fldl
xchg
sbb
arpl
and
pop
dec
mull
add
rcr
out
and
les
mov
int
inc
ret
and
ljmp
or
je
adc
pop
sub
sbb
add
mov
add
aaa
cmc
shrb
movsl
popa
push
inc
cmp
dec
lds
lds
jmp
sub
add
and
jno
lods
call
jg
dec
jp
ss
mov
add
sahf
mov
hlt
jae
repz
add
jo
add
or
arpl
jb
mov
cs
nop
and
das
mov
jb
cmp
inc
mov
scas
or
faddl
pop
inc
xor
std
int3
outsb
adc
rorb
aam
loopne
pop
bound
adc
xchg
mov
fsts
cld
pop
fmuls
in
mov
and
inc
das
sbbb
aas
mov
and
add
sub
lods
add
and
adc
mov
jecxz
add
jo
push
fadds
push
add
andl
adc
jle
stos
leave
push
pop
dec
shlb
sub
in
rol
mov
mov
arpl
push
push
jle
cmp
push
mov
jbe
fcompl
jle
mov
mov
and
repz
arpl
push
movsl
add
mov
adc
push
je
sub
cmp
add
les
sbb
xor
lods
add
mov
ret
mov
xchg
or
add
sti
data16
mov
inc
clc
jl
inc
push
mov
sbb
in
movl
jae
enter
loope
add
mov
into
adc
daa
adc
mov
cwtl
mov
nop
add
and
jge
je
xchg
in
mov
addr16
cmp
pushf
mov
outsl
adc
and
jnp
lea
jae
xchg
xchg
jb
mov
rcrb
jg
btr
dec
shll
pop
cs
add
sub
add
imul
push
leave
imul
es
dec
pop
mov
mov
lock
and
lock
add
xchg
add
cwtl
ss
add
lock
mov
dec
adc
inc
lods
fstpt
stos
dec
lods
mov
add
mov
loopne
add
insl
xlat
push
mov
mov
cmp
rolb
leave
add
xchg
add
addl
cmp
test
es
jo
hlt
cmc
push
and
cmp
js
and
sbb
mov
jl
push
out
cld
push
lods
sbb
mov
inc
or
movsb
xchg
es
ret
jecxz
mov
ja
bnd
syscall
adc
add
mov
and
dec
mov
xor
movsb
rolb
dec
paddsw
repnz
push
inc
outsb
mov
stc
loop
push
add
mov
pop
mov
push
movsl
push
mov
je
push
test
and
inc
and
test
xor
jge
fldt
and
filds
test
jo
dec
push
lret
mov
lods
gs
mov
mov
pxor
mov
mov
stos
add
fnsave
aad
rol
aam
arpl
mov
ds
xor
add
jecxz
lahf
mov
mov
xchg
idivb
jecxz
aad
jmp
push
stc
fiaddl
add
shl
roll
and
les
xchg
hlt
sbb
xor
mov
push
sub
les
mov
test
add
mov
test
cmc
sub
or
xor
add
stos
dec
int
dec
dec
jnp
and
test
pop
imul
add
add
sub
inc
cmpsb
mov
inc
mov
lret
clc
testl
push
mov
test
add
lea
push
mov
cmp
xchg
pop
xchg
add
adc
inc
test
jbe
push
lea
dec
imul
test
mov
nop
push
out
add
fisubl
cltd
int
push
push
add
out
int3
imul
rolb
roll
ret
insb
lret
and
or
popa
and
xor
fsubr
inc
cmc
sldt
cmp
pop
xor
lods
mov
jo
push
jo
xor
pop
and
xchg
jns
nopl
push
sbb
fsubrl
inc
xchg
or
ret
fsubs
shrb
fdivp
popa
mov
mov
cmp
jno
je
jo
stos
add
in
mov
mov
inc
movsb
inc
push
inc
mov
mov
mov
pop
dec
sti
stos
inc
jb
or
mov
into
push
cmpsl
bound
sbb
stos
or
imul
loop
enter
sahf
mov
mov
pop
enter
push
pop
loope
sub
aam
sub
sub
add
or
out
add
and
inc
or
int3
inc
and
ds
lods
mov
pop
ret
addb
sub
jns
mov
inc
enter
add
mov
push
adc
dec
jo
mov
loope
sub
orb
sub
dec
xor
inc
sbb
adc
sbb
pop
rcrb
pop
test
in
out
sub
mov
sub
mov
sub
ss
sub
jbe
loopne
xchg
scas
or
movsb
push
add
push
push
jp
aad
mov
out
pop
in
cmpsl
loop
pop
mov
dec
addr16
imul
clc
and
xchg
mov
aaa
jge
xchg
jmp
or
inc
xor
popa
negb
sbb
cwtl
push
push
mov
inc
and
in
add
mov
add
add
or
inc
xor
or
hlt
sub
xorb
cld
sbb
cmp
mov
je
insl
ljmp
sub
clc
jmp
std
jg
lock
pop
xor
out
shl
aam
inc
lahf
xor
shll
cmp
adc
daa
add
cs
xchg
mov
ljmp
scas
rcrb
stos
fsubrl
and
pop
fnstcw
xor
mov
in
pusha
jb
jb
mov
mov
add
daa
and
dec
shrl
dec
dec
mov
and
lods
pop
incb
inc
call
jnp
dec
mov
pop
sti
pop
xor
add
and
mov
pop
lods
pop
mov
inc
jae
xchg
xchg
sub
cwtl
adc
cmpb
jge
sbb
mov
mov
cmp
enter
inc
add
in
mov
movsb
push
pop
fs
insb
mov
dec
mov
hlt
out
imul
out
push
std
xor
testl
cmp
sahf
xchg
cmp
xor
nop
jno
repnz
mov
or
push
and
iret
jae
mov
outsl
cmp
cli
xor
fs
or
test
or
out
imul
jg
or
outsb
fists
les
out
fimull
pop
or
in
inc
outsl
jae
mov
cld
insl
lcall
add
icebp
test
xchg
jne
nop
in
xchg
sub
movsl
popa
mov
adc
mov
inc
jp
mov
ds
jecxz
xor
and
test
leave
jbe
and
push
add
mov
inc
push
js
cmpsl
pop
inc
fwait
into
cmp
mov
add
pop
add
and
gs
xchg
or
pop
mov
addr16
mov
cmp
movsl
jb
iret
xor
inc
push
mov
mov
loope
cs
mov
imulb
push
pop
loop
sti
les
rolb
ret
sbb
sub
mov
jne
clc
outsl
addb
lcall
jmp
pushf
xor
popa
dec
add
sbbl
scas
jno
add
popf
jne
add
or
inc
cld
je
imul
pop
fstps
xchg
cmp
mov
lret
dec
sti
daa
or
call
lods
in
inc
test
jl
in
addl
sbb
add
and
js
mov
movsl
mov
xchg
rorl
rol
test
test
and
adc
jno
cmpsb
loop
sbb
dec
add
push
shr
dec
and
lods
adc
sub
notb
outsl
adc
cmpb
repz
push
mov
pop
adc
test
sbb
inc
add
stos
das
jnp
xor
jecxz
xchg
cmp
pop
xlat
popa
hlt
pusha
add
popa
add
imul
int3
out
and
or
jno
addr16
jnp
cmp
mov
aad
sarb
clc
jl
jo
inc
pop
mov
push
addl
mov
movsl
xor
rcrb
cmc
add
outsb
jle
jb
mov
insl
and
cmpsl
adc
fadds
movsl
mov
sbb
inc
add
es
js
daa
es
sub
rcrb
mov
bound
adc
in
mov
cmp
sahf
subb
sub
fwait
cmp
add
pop
dec
xchg
movsb
inc
fldl
orl
or
cld
mov
mov
lret
add
shl
lds
cld
in
into
adc
movsb
imul
loop
push
push
loopne
and
and
roll
jmp
push
les
cltd
shll
mov
lcall
es
add
aas
enter
aaa
clc
cwtl
adc
ds
sbb
push
mov
cltd
fs
aas
and
or
jge
add
and
add
add
cltd
popf
das
jb
jo
jp
add
fldl
and
mov
or
cmp
mov
jge
mov
and
pop
cmpsb
jno
cmp
sahf
add
imul
mov
mov
and
outsl
jnp
mov
dec
rorl
xchg
test
lods
xor
js
adc
mov
imul
xadd
jbe
ds
mov
add
aas
out
mov
jmp
aam
mov
mov
nop
icebp
loop
jne
loopne
push
ds
daa
mov
add
push
mov
xchg
rorl
mov
dec
scas
jae
popf
aad
daa
sub
scas
xchg
push
jecxz
push
mov
mov
repz
decb
sbb
rcrl
aas
add
pop
add
loop
cmpsb
jne
scas
cmp
cmc
add
mov
pop
or
ret
clc
add
mov
jmp
mov
inc
jbe
repnz
shlb
xchg
aas
flds
mov
cmpsl
stos
out
and
mov
push
test
lret
inc
mov
das
add
jmp
xor
and
inc
mov
add
jae
inc
flds
push
fwait
iret
cmp
sbb
and
xor
pop
out
xchg
mov
sbb
add
in
repnz
cs
aas
call
jle,pn
lahf
call
add
aas
mov
cs
sbb
push
add
mov
adc
lcall
mov
repnz
jecxz
movsl
jns
mov
stc
das
cmp
add
lds
dec
inc
push
jo
stos
pushf
push
and
scas
mov
xchg
daa
push
cltd
outsb
jge
pusha
xlat
and
loopne
loopne
cmp
imul
cmp
or
sahf
push
in
xchg
jge
jle
int
dec
pop
jb
mov
dec
imul
gs
push
cli
popf
out
xor
mov
and
push
push
sahf
aaa
xchg
sub
xor
mov
mov
pop
jo
dec
mov
iret
xchg
je
fmuls
adc
popf
lock
and
ret
pop
add
add
loope
jnp
ret
cmpb
mov
jo
fsubs
jmp
adc
and
enter
mov
es
adc
dec
je
and
push
mov
push
ret
add
rolb
push
sahf
fdivs
out
pop
mov
pop
sub
inc
push
pop
sub
mov
xchg
lret
loopne
iret
and
inc
pop
mov
add
cmp
mov
in
sbb
xorb
add
dec
pop
in
rorl
mov
mov
pop
jbe
add
xor
pop
fmuls
mov
arpl
test
dec
inc
and
add
adc
xor
sub
pop
inc
mov
mov
mov
mov
add
ljmp
jge
and
shrl
cli
lock
pop
jg
cs
jmp
ror
sarb
pop
inc
lock
adc
bound
jo
dec
mov
ret
mov
mov
loopne
into
ljmp
sub
add
js
fldcw
mov
scas
push
cmp
shl
xchg
je
add
xchg
jmp
mov
mov
adc
xor
movsl
jo
inc
add
stc
std
mov
nop
repnz
insb
add
push
pop
pop
dec
cltd
add
repnz
add
aad
in
jne
jmp
arpl
cmp
inc
mov
and
add
icebp
push
and
fisubl
add
stc
add
or
pop
adc
pop
cld
popa
inc
mov
movsl
add
mov
adc
dec
xchg
lock
sbb
mov
add
and
out
arpl
out
add
push
add
xor
add
adc
mov
mov
leave
stos
sarl
out
sahf
mov
pop
lds
clc
dec
nop
pop
push
add
scas
sub
call
sbb
lods
xor
sub
inc
icebp
pop
cmpsb
mov
movsl
or
and
mov
ret
add
jo
popa
lock
add
and
push
das
in
add
or
lods
movsl
addl
cmp
push
aas
js
into
jne
bound
add
pop
lock
inc
ficomps
xorb
hlt
xchg
jne
xchg
andl
xchg
enter
flds
sbb
mov
arpl
sbb
adc
xor
leave
add
or
mov
sarl
rolb
push
das
jno
cltd
out
pop
xor
ljmp
cmp
js
and
in
push
or
std
sarb
insb
xlat
push
inc
jno
jns
mov
adc
jge
daa
or
sub
mov
movsb
pop
xor
inc
jl
pop
lds
xchg
repnz
dec
ret
or
mov
add
and
stos
add
cmpsb
or
lods
aam
data16
movsl
jb
mov
sub
mov
mov
out
xor
arpl
mov
push
mov
iret
pop
stc
movsb
sbb
add
and
jp
sub
imul
mov
push
lods
xor
in
test
lret
dec
add
cltd
or
add
stc
jp
test
push
shl
cli
adcb
add
into
or
sub
push
and
lahf
mov
xchg
shr
lea
and
mov
leave
aas
adc
outsb
pop
rcrl
jmp
jnp
mov
mov
adc
aad
clc
lods
mov
fisubs
outsb
add
xor
cld
jo
mov
jne
adc
and
mov
scas
adc
inc
loope
mov
sub
clc
mov
lods
pop
push
je
cs
push
and
mov
sub
add
jbe
cmpl
sub
inc
and
inc
push
aad
cmp
sub
imul
mov
adc
pop
adc
mov
push
add
imul
or
sub
xlat
int
mov
rorb
psubb
or
ds
dec
xchg
adc
inc
sbb
adc
jno
movsl
lds
insb
mov
add
call
mov
cmp
mov
xchg
mov
aam
xchg
add
or
mov
mov
sub
add
test
or
mov
mov
xchg
stos
xor
jge
cli
and
ss
pop
pop
add
push
push
ret
push
movsb
add
or
jne
scas
mov
mov
xchg
and
cmp
xor
add
dec
lock
test
mov
call
xchg
or
mov
add
je
inc
dec
add
push
into
mov
add
xor
mov
in
push
dec
inc
pop
into
aaa
enter
test
sbb
or
jae
pop
inc
fistpll
insl
adc
and
insb
mov
cmp
frstor
xor
std
pop
lea
mov
movsl
daa
sbb
push
add
clc
pop
pop
rorl
pop
add
xor
mov
loope
stos
mov
jmp
add
and
loopne
mov
fs
sub
lret
fnstsw
rcrb
xor
pop
mov
jns
adc
jle
xor
out
fadd
or
add
pusha
cmp
enter
stos
xchg
jb
cmp
adc
pop
scas
sub
loope
pop
lret
add
in
lret
or
int
jae
dec
jp
and
dec
aad
inc
mov
js
xor
and
hlt
sub
sbb
xor
push
mov
icebp
dec
es
push
je
and
pop
add
add
pop
insl
xchg
mov
shr
aaa
mov
push
mov
dec
xor
push
push
shll
sub
mov
addr16
add
mov
loope
or
mov
and
mov
or
out
mov
and
cmpsl
shrl
add
out
adc
mov
lcall
and
inc
add
sbb
push
mov
test
pop
outsb
and
add
mov
scas
repnz
jge
xor
lcall
and
add
mov
inc
pop
mov
popf
loope
adc
add
ret
push
das
jp
and
mov
xchg
xor
sahf
inc
dec
call
xchg
je
clc
outsb
and
add
fldenv
cmp
add
jne
pop
psraw
mov
stc
jmp
xor
movsl
and
cmp
mov
mov
aam
sbb
and
stos
mov
in
cwtl
dec
test
add
loop
adc
push
popa
add
jb
xchg
arpl
stc
rclb
mov
xlat
mov
cmc
hlt
leave
imul
add
jae
out
mov
fwait
and
mov
insl
dec
cmp
fisttps
fsubr
sbb
mov
sub
leave
es
dec
stc
repnz
scas
dec
shlb
add
adc
bound
stos
pop
mov
inc
pop
bound
aad
push
xchg
mov
sbb
adc
imul
adc
mov
adc
lcall
inc
out
mov
adc
test
pop
dec
mov
repz
sbb
add
sbb
mov
push
add
push
lods
push
es
mov
xor
and
cmp
stos
add
cmpsl
arpl
fimull
jp
sti
movsb
pop
insb
orl
idiv
and
add
push
clc
std
dec
mov
adc
test
out
out
es
sti
mov
lods
jns
dec
and
outsb
or
test
dec
add
out
mov
fiadds
aas
and
sub
mov
icebp
outsb
scas
push
fwait
xchg
sbb
mov
dec
inc
call
rclb
pop
sbb
jns
jmp
cmp
inc
jae
mov
std
call
adc
cltd
cmp
and
ud1
push
adc
sbb
sbb
cmp
mov
aaa
sahf
mov
and
sbb
imul
jp
into
aas
pop
out
add
jg
xchg
movsb
jns
mov
insl
xchg
mov
sarb
and
cli
pop
lcall
mov
negl
jo
fisttps
add
and
cmpsl
mov
inc
pop
cltd
or
in
jne
jle
lods
xchg
or
fs
sub
xchg
pushf
es
lods
add
jmp
xorl
sbb
es
lahf
dec
sahf
or
and
sub
jb
les
add
out
push
std
cli
fstl
sbb
push
sub
add
mov
jae
mov
mov
imul
es
cmp
es
push
mov
sbb
idivb
sub
ljmp
mov
out
mov
in
mov
dec
cmp
jns
in
add
add
lcall
ja
push
add
mov
adc
hlt
pop
adc
out
invd
call
lds
add
push
xchg
mov
out
add
adc
loop
sti
mov
out
ret
je
pop
xchg
push
enter
pop
pop
hlt
fidivrl
pop
gs
bound
rcr
push
pop
add
fcmovnbe
movsl
add
loope
out
jbe
mov
and
stc
iret
fadds
adc
fadds
xor
cmc
popf
mov
and
mov
pop
dec
hlt
xor
xchg
sarl
call
cmp
sub
dec
jecxz
cwtl
and
cmpsl
push
push
lds
xchg
and
std
mov
push
imul
and
xor
popf
dec
adc
mov
cmp
mov
sti
scas
push
jmp
jg
imul
clc
mov
sbb
rorb
jmp
push
add
std
mov
lea
sub
adc
push
lods
xorb
sub
inc
test
pushf
jmp
add
pop
pop
repnz
mov
pusha
jns
imul
mov
in
adc
push
mov
stos
dec
mov
and
dec
pushf
scas
test
mov
add
push
test
mov
inc
andl
test
in
movsl
rolb
add
xor
sarb
rcrl
rolb
jp
stos
and
stos
add
pop
pop
inc
add
add
clc
int3
xor
pop
add
cs
cmp
stos
push
nop
out
mov
mov
pop
in
in
xchg
imul
outsb
mov
jae
in
cmp
xchg
cwtl
and
cmp
insl
out
xor
cmp
loopne
outsb
add
mov
push
push
repnz
in
mov
lea
inc
fs
mov
or
vcvtdq2ps
and
pusha
je
shll
outsl
add
inc
enter
xor
add
push
test
mov
stos
shr
cwtl
xor
mov
out
mov
cmp
aam
dec
add
les
mov
outsl
mov
repz
das
lret
add
fldcw
pop
mov
cs
push
pop
pop
and
push
stos
jbe
cmp
adc
xchg
imul
add
aam
lock
mov
mov
insl
inc
adc
and
scas
mov
add
inc
jg
in
mov
hlt
pop
fidivl
and
add
push
mov
loope
jns
inc
cmp
and
add
in
add
int
lds
mov
test
push
stos
fnstenv
mov
cltd
cmp
mov
add
fbstp
andb
and
andl
pop
add
sbb
test
pop
mov
inc
sub
add
movb
rolb
cmp
push
jl
mov
mov
lods
cwtl
add
addr16
pop
jmp
test
or
lods
fisubrl
frstor
jbe
shll
push
lret
or
push
loopne
shlb
jbe
bound
mov
inc
scas
fbld
pop
jg
mov
mov
mov
cli
adc
and
icebp
divb
lret
fsubl
test
mov
sbb
push
and
xorl
adc
test
dec
repnz
jno
or
mov
lea
add
jge
mov
jp
call
push
ret
lea
adc
adc
adc
push
mov
jno
sti
and
add
mov
sti
iret
data16
test
push
rorl
push
stos
mov
pop
pushf
dec
and
cs
test
fsubrs
xor
in
cmp
scas
or
xor
push
add
lret
fs
sbb
pop
cmp
in
cltd
sbb
push
push
xor
jae
or
and
mov
mov
add
push
data16
mov
jbe
fsubs
call
cmp
add
pusha
cmpsb
pop
and
repnz
mov
adc
frstor
dec
mov
add
push
sub
imul
or
jb
dec
sub
xor
inc
sti
pusha
repnz
xchg
rolb
pop
fidivrs
dec
rcrl
jmp
jg
loope
lcall
mov
push
add
xorl
add
es
stos
call
flds
push
jmp
adc
add
fnsave
and
add
jmp
addb
int3
or
sub
jg
inc
cmp
int
add
mov
add
pop
add
in
inc
adc
mov
add
jnp
clc
jge
testl
add
dec
out
push
mov
cs
sbb
add
jns
dec
cmp
and
fdivl
movsb
sub
scas
outsb
jb
xor
ss
xor
int3
sbb
xchg
stos
fldl
add
mov
cmp
cmp
ja
and
lahf
inc
mov
jg
data16
fisubrs
test
lea
mov
inc
stos
add
fyl2x
mov
int
mov
pop
sbb
xlat
mov
test
out
mov
pop
sub
and
movb
and
es
iret
add
adc
sub
pop
cmp
cmp
repnz
mov
inc
shl
jmp
insb
dec
jne
cmp
in
xchg
popf
and
enter
adc
mulb
scas
sbb
push
fstl
bound
and
mov
push
dec
cmc
pop
xor
bnd
fs
sahf
aad
jge
cmp
ret
mov
test
lods
pop
stos
or
xor
add
mov
mov
add
cli
jae
push
push
and
ss
and
iret
add
sbb
jle
pop
ret
mov
test
xor
push
mov
mov
adcl
shrl
push
mov
adc
mov
push
decb
sbb
jo
and
push
push
add
into
into
adc
and
xchg
add
scas
mov
es
mov
jae
pop
adcb
pop
mov
sbb
ds
cmc
jo
loope
addl
pop
int
jae
xor
push
or
jbe
mov
mov
pop
sub
and
mov
test
jbe
js
pop
xchg
push
add
push
mov
jle
jl
xor
insl
xor
mov
insl
ss
mov
aam
lret
fiaddl
and
mov
pop
test
fs
imul
add
xor
mov
inc
popf
mov
and
xor
pop
pop
add
jl
xchg
add
insb
xor
in
adc
stc
incl
fwait
sub
rclb
sub
int3
add
scas
jecxz
scas
add
inc
ret
ss
jb
or
and
fsubrl
ss
pop
cli
xchg
cmp
mov
movsl
mov
pop
sbbl
sbb
cmpsl
movsb
int3
cmp
mov
jne
jno
mov
or
orb
mov
pop
add
lods
std
daa
call
hlt
dec
pusha
in
repnz
pop
inc
int
add
mov
dec
add
ljmp
ficomps
cli
push
and
dec
or
popa
add
addr16
mov
add
into
xchg
testl
sarb
xlat
out
add
mov
push
sub
cmpb
popa
and
inc
hlt
into
xor
lret
scas
push
mov
fwait
ret
lock
mov
mov
negb
mov
fcomp
sahf
test
inc
pusha
cmp
es
push
mov
stc
jno
fisttpll
imul
xor
sbb
lds
pusha
sub
sub
and
stc
adc
ret
dec
mov
add
add
aas
mov
sahf
xchg
push
fdiv
sub
push
fwait
xor
into
lods
add
pop
fyl2xp1
pushw
lock
fsubs
lea
xor
jo
add
cmp
xor
hlt
mov
sbb
pop
loopne
mov
gs
lock
dec
add
push
jmp
mov
mov
js
jecxz
or
push
cltd
int
sti
lret
xchg
ss
mov
xchg
adc
push
sti
cmp
xchg
mov
rorl
fwait
xchg
add
xor
mov
sub
push
stos
push
andb
insl
test
add
cmp
stos
pop
pop
push
lock
add
mov
popf
inc
loopew
mov
call
dec
push
into
add
mov
mov
dec
inc
jne
or
xor
cmpsl
and
bound
add
pop
lret
and
xor
ljmp
jns
ret
lds
pop
popa
lahf
push
ja
ss
sub
inc
sbb
adc
icebp
lock
inc
fistpll
sbb
inc
and
popa
jo
pop
in
cmp
jbe
adc
loopne
jo
jecxz
dec
aas
push
jle
filds
scas
push
sbb
je
repnz
call
push
les
dec
inc
add
cmp
icebp
popa
stos
mov
rolb
mov
fs
xchg
cmpsb
sub
lret
xor
out
xor
aas
cmp
jecxz
not
xor
or
clc
mov
push
fbstp
push
xor
cmc
push
mov
repz
push
adc
insb
xorb
sub
leave
add
rol
scas
add
scas
jmp
xchg
pop
mov
lods
add
cmp
neg
test
sub
lcall
sti
dec
and
andb
mov
add
push
and
fwait
cmp
dec
jns
mov
xchg
jmp
in
sub
aas
add
icebp
loope
dec
adc
add
mov
sbb
inc
and
in
xchg
loopne
jmp
cmp
mov
sbb
aaa
xchg
insl
cli
and
cmc
pop
mov
data16
jle
loope
ret
negl
dec
std
sbb
dec
mov
or
mov
mov
fidivs
lret
aam
hlt
pop
mov
xchg
ljmp
or
mov
test
push
or
jbe
jno
mov
mov
test
das
dec
lret
test
sbb
clc
out
cmp
sub
mov
add
mov
inc
xor
hlt
mov
out
das
or
int3
rorl
pop
sahf
mov
aas
hlt
pop
call
mov
mov
push
insl
add
je
test
stos
pusha
es
add
and
and
fmull
cld
arpl
add
stos
stc
push
inc
sub
pop
mov
ss
mov
push
push
add
inc
jb
pop
inc
ja
mov
or
dec
dec
add
pop
mov
jmp
push
in
or
jl
stos
mov
mov
add
lods
les
das
dec
sbb
push
xchg
cs
pop
inc
inc
push
stc
mov
inc
test
cmp
out
jns
out
sbb
jnp
nop
notl
add
push
aaa
lcall
repz
std
jp
jecxz
mov
out
mov
lret
imul
aaa
je
enter
mov
sbb
push
mov
mov
add
cmp
add
jbe
daa
pop
pushf
add
mov
mov
test
mov
dec
cmpsb
ret
scas
jecxz
es
das
movsb
adc
enter
mov
lods
add
xorb
out
sub
cmc
sub
mov
subl
scas
or
add
push
cli
je
lods
call
mov
inc
popf
cltd
cmp
add
test
xchg
cmp
jmp
xchg
and
dec
in
xchg
add
andl
mov
jp
fcmovnbe
push
push
jp
pusha
mov
in
mov
cmp
push
imul
jae
daa
and
pop
mov
divb
jno
int3
clc
add
adc
pushf
jmp
arpl
mov
cli
adc
mov
and
into
add
jecxz
iret
mov
mov
test
and
jmp
pop
insl
push
jl
shlb
loopew
rcl
sbb
rorl
add
and
and
add
std
and
mov
xor
cltd
sbb
cs
inc
je
add
mov
loopne
lds
add
xchg
aas
fstpt
push
jecxz
mov
mov
scas
movsl
mov
imul
int3
inc
or
and
mov
movsl
add
mov
fwait
and
add
mov
jae
or
cmpsl
lahf
shlb
pop
clc
cld
and
mov
inc
ljmp
and
mov
hlt
mov
push
imul
cmpl
adc
xchg
push
dec
pop
pop
adc
jecxz
lods
xor
test
and
pusha
aam
mov
mov
call
jp
gs
ss
aam
iret
clc
inc
xchg
mov
cmp
mov
mov
add
push
loopne
or
and
imulb
sbb
jb
pop
and
add
jno
call
pop
test
pop
push
lods
cmp
mov
loop
xchg
cmp
xlat
dec
rcr
mov
in
gs
in
les
icebp
add
pop
jp
mov
adc
mov
psubw
outsb
add
jns
cmp
jns
mov
daa
js
mov
in
rorl
adc
dec
movsb
out
pop
inc
lock
cltd
jnp
and
cmc
inc
xchg
push
add
or
jo
inc
inc
add
shlb
jae
lods
jo
js
cmp
jne
gs
add
push
adc
ret
xlat
out
leave
cmp
sbb
shlb
lahf
mov
and
xchg
cmc
jecxz
inc
imul
xchg
jp
mov
imul
add
mov
add
cmp
mov
inc
add
nop
mov
push
js
add
mull
fists
mov
push
aas
sbb
cmp
cmpb
int
je,pn
mov
mov
add
lcall
mov
dec
icebp
lahf
sub
add
sub
add
imul
icebp
add
imul
test
mov
ret
cmp
cmp
sub
mov
xchg
sub
add
lods
xchg
outsb
outsl
lock
sub
out
adc
and
pop
fisubrl
add
adc
or
mov
flds
ja
lret
cs
movsl
jae
push
xor
enter
popa
add
adc
jle
mov
call
mov
add
lods
nop
pop
add
xor
xchg
add
cmp
jp
jbe
pop
sub
rsm
dec
in
dec
pop
divl
aam
lcall
insl
mov
adc
les
mov
ret
cltd
movsl
xchg
shr
fadd
add
in
or
repnz
in
imul
bound
aam
jle
sbb
into
mov
mov
add
mov
sub
icebp
fwait
ret
imul
add
sbbl
add
jne
insb
inc
inc
mov
shr
flds
sbb
jno
adc
pop
and
cld
es
inc
jb
rclb
push
add
cltd
fbstp
inc
cmp
and
add
mov
dec
mov
push
daa
and
mov
and
stos
ret
loope
imul
inc
sbb
pop
mov
sbb
push
rol
push
out
push
push
sarb
daa
jmp
pop
in
leave
push
push
cwtl
xor
push
or
add
and
lahf
and
sbb
pop
das
ficompl
call
int3
push
int3
pop
mov
lahf
mov
inc
mov
fldenv
ss
jns
inc
add
cmp
inc
pushf
mov
jnp
mov
xchg
imul
cmp
sbb
dec
mov
xchg
and
push
sahf
sbb
mov
or
sbbb
dec
xor
add
xor
lock
sub
loopne
or
sbb
xlat
or
insb
gs
icebp
rorl
mov
add
test
imul
jp
icebp
add
xchg
div
pop
ja
adc
call
add
fstl
movsl
cmp
xchg
dec
mov
add
lds
enter
sub
std
mov
aas
mov
in
shlb
addr16
pop
hlt
push
sbb
or
push
or
mulb
pop
fcmovnbe
ret
add
mul
shll
jbe
imul
or
int3
and
mov
and
xchg
and
roll
add
mov
lret
js
enter
es
orl
bnd
testl
inc
and
icebp
pop
in
mov
jecxz
das
sub
and
into
and
add
push
push
pop
lcall
arpl
lcall
and
xchg
sub
jb
and
dec
dec
icebp
jno
sub
inc
push
push
dec
pop
jbe
jbe
inc
popa
or
adcl
sbb
fildll
movsl
cmpsl
fs
sub
dec
aaa
add
fisubrl
ret
arpl
scas
add
lret
idivb
sub
cmp
mov
and
sbb
xchg
mov
dec
sbb
into
and
divb
and
adc
add
repz
mov
add
mov
into
in
sub
and
loop
rcl
lock
int3
sbbb
and
mov
leave
int3
je
cmc
push
inc
mov
push
fidivl
dec
movsb
sbb
fisubs
outsl
iret
inc
lods
mov
shrb
js
test
insl
in
xchg
mov
cmc
add
sbb
outsl
jbe
rep
lods
push
jp
xchg
divl
ds
adc
mov
sub
mov
mov
out
jg
and
adcb
fisubl
das
dec
mov
rolb
adc
mov
cltd
and
adc
adc
xchg
mov
add
sub
and
sub
lods
testb
jbe
dec
loopne
sub
add
and
nop
sub
mov
xorl
stc
es
jnp
subb
je
jb
aas
scas
lahf
ret
call
cmp
ja
mov
in
cmpsl
jmp
sub
movsl
jg
out
pop
scas
mov
add
xchg
data16
jno
push
mov
push
arpl
add
pop
mov
and
verw
xlat
loopne
adcl
sub
cmp
aaa
adc
add
sub
fidivl
xor
adc
pop
fsubs
loopne
xor
add
sub
xchg
sub
or
repnz
in
add
jo
les
jecxz
stos
ja
pushf
scas
test
mov
nop
out
aas
addr16
stos
mov
adc
jne
out
imul
mov
jns
fnsave
jae
dec
and
in
es
adcb
jp
adc
add
mov
outsb
lods
lahf
gs
pop
add
cwtl
jne
and
inc
out
invd
add
sub
push
cmp
and
add
push
dec
and
insl
push
pop
leave
ljmp
cld
mov
shlb
cmpsl
ret
or
add
ficomps
and
sbb
lods
jecxz
sbbl
inc
aad
mov
sub
pop
outsl
xchg
stos
add
das
mov
test
cmp
mov
mov
xchg
mov
sub
addr16
add
insl
lcall
cmp
rol
mov
imul
jb
inc
and
push
push
or
mov
sbbb
add
aam
sub
sbb
dec
dec
mov
out
and
jg
dec
mov
cmpxchg
in
ficompl
add
pop
adc
js
stos
call
push
cli
arpl
jae
inc
xor
sbb
je
cmp
nop
mov
mov
ljmp
cwtl
out
clc
add
xlat
repz
aas
hlt
and
mov
lcall
icebp
cmp
insb
sti
aaa
stc
xor
jp
inc
sub
daa
out
jbe
fcoms
xorb
add
out
mov
aam
xchg
mov
adc
inc
out
xor
jmp
pushf
rorl
dec
js
jecxz,pn
sbb
xchg
mov
lcall
insb
pusha
imul
push
mov
push
and
stos
leave
xor
pop
out
arpl
std
lds
sub
fildl
jns
movswl
pop
ja
call
fimuls
adc
negb
cmp
xorl
inc
mov
mov
testb
and
stc
je
ss
ja
mov
cwtl
fidivl
push
pop
aad
add
xchg
in
mov
in
gs
pop
pop
push
test
es
loop
dec
cli
push
repz
lock
mov
adc
mov
call
pusha
jg
dec
dec
inc
pop
push
sub
mov
aam
movsb
mov
arpl
inc
leave
mov
pusha
xor
sub
les
popa
shll
mov
push
mov
mov
and
xor
js
mov
dec
popf
jecxz
jnp
or
es
jmp
or
mov
in
or
and
nop
sbb
add
in
shlb
in
sahf
cmp
add
jno
add
idivl
mov
mov
loop
out
outsb
add
movsl
gs
loop
sbb
or
dec
loopne
and
and
xchg
testb
shr
in
mov
jno
sub
push
mov
out
or
pusha
mov
pop
add
or
pop
inc
jne
mov
or
sub
pop
cltd
fldcw
mov
push
je
xchg
xchg
ljmp
mov
test
push
and
mov
cmpsl
sbb
loope
lock
std
ds
in
inc
inc
pop
pop
mov
inc
gs
notl
pop
adc
xchg
push
mov
stos
incb
insb
add
xlat
mov
mov
mov
mov
mov
pop
cmp
or
mov
mov
and
sub
stc
subl
cmp
or
sub
push
loope
jmp
and
in
xchg
lret
pop
aam
cmp
outsl
dec
out
jnp
adc
repz
mov
hlt
jns
mov
repnz
aaa
je
mov
std
mov
mov
sbb
lods
test
xor
ja
jbe
and
sahf
mov
and
insl
jne
add
int3
shrl
sub
popf
lock
jbe
xor
jno
sbb
psubw
xor
fistps
sbb
loope
mov
lods
add
shll
jle
add
pop
outsb
add
out
inc
flds
leave
roll
popf
add
jle
and
dec
in
inc
xchg
and
roll
out
add
test
sbb
xchg
cld
pop
add
adcb
adc
movl
aas
dec
dec
sub
add
mov
std
movsb
jle
and
mov
mov
and
add
in
and
clc
mov
inc
add
fcoml
repnz
jbe
push
and
jb
mov
movsl
jmp
or
mov
fs
imul
mov
inc
cmp
sti
repnz
push
test
test
xor
insb
add
loopne
rolb
fldt
or
icebp
adc
add
ja
aaa
divl
sub
rcrb
cmp
icebp
sub
adc
imul
scas
movhps
fisubl
mov
mov
insb
jp
popa
xor
mov
push
std
das
sahf
test
inc
sub
lds
aad
aas
mov
dec
inc
and
push
xor
push
add
in
std
dec
lods
add
cmc
shll
leave
iret
push
pop
into
add
mov
clc
imul
xchg
movsb
lock
push
sarb
or
ffree
and
pop
fidivrl
mov
adc
int
add
mov
shlb
inc
jno
cmp
fwait
add
adc
mov
lahf
shrl
mov
xor
fstpl
mov
mov
mov
jb
jbe
cmp
jno
add
dec
jns
pop
mov
add
mov
add
movsl
cs
iret
cmp
mov
nop
mov
inc
div
dec
push
cmp
mov
adc
sti
and
pop
xor
ljmp
xlat
add
lods
pop
iret
add
mov
ret
lahf
pop
mov
jns
shlb
int3
iret
arpl
inc
hlt
push
cmc
fs
lds
out
mov
add
je
xchg
or
lock
add
rcll
pop
lret
or
push
cmpsb
lahf
pop
repz
add
cmp
stos
mov
cmp
mov
rorl
and
xchg
lds
mov
mov
sahf
dec
in
add
xchg
shr
lahf
adc
loop
push
pop
jne
stos
xchg
xor
js
xchg
mov
mov
testl
jge
cmp
xchg
adc
and
jae
int3
and
or
fstps
adc
inc
ds
cmp
jb
pop
das
ficoms
sahf
pop
add
inc
pop
or
scas
mov
dec
mov
imul
sub
mov
push
push
insb
or
lcall
mov
bound
in
es
jg
xor
aaa
bound
add
add
loopne
ljmp
push
dec
pop
enter
or
add
mov
jb
jecxz
cmp
lock
mov
inc
mov
sub
sub
imul
loopne
scas
dec
jb
cmp
enter
pushf
mov
cmp
cld
mov
xchg
sarb
mov
orl
lds
jnp
or
dec
sub
xchg
in
mov
leave
and
inc
jge
push
jge
mov
mov
jbe
xor
cltd
dec
and
imul
sahf
sbb
add
shll
xor
in
push
cmp
shl
jns
jge
adc
cmpsb
cli
addr16
pop
sub
add
loopne
jge
add
push
mov
jns
cmp
inc
push
jbe
ret
push
push
mov
jmp
nop
and
pop
push
jne
mov
push
lcall
jns
add
outsb
inc
pop
verr
leave
xchg
icebp
jl
inc
pop
add
push
push
mov
dec
clc
pushf
ror
push
shlb
adc
sub
addr16
dec
loope
mov
mov
and
pop
imul
ffreep
dec
outsl
loop
and
out
test
mov
cltd
fs
mov
sbb
in
dec
dec
sti
enter
daa
xchg
cmp
jp
mov
into
push
adc
das
into
sub
mov
push
rolb
sbb
xor
jns
stos
ret
call
push
pushf
dec
add
fidivs
mov
pop
lds
and
pop
mov
in
ljmp
out
ja
cmp
mov
imul
xor
jl
sahf
push
jno
pop
and
mov
sahf
mov
mov
in
inc
les
push
sbb
xadd
sbb
jb
push
cld
ja
adc
adc
or
cmc
shrl
test
scas
xchg
add
jns
pop
add
scas
adc
movsl
or
popf
push
add
mov
ret
and
sahf
inc
or
scas
xchg
and
ljmp
inc
inc
pop
cmc
xor
add
cmp
pop
cli
cli
sbb
sahf
test
movsl
stos
cmp
sub
arpl
aas
xchg
sbb
out
pop
inc
ljmp
ljmp
leave
xchg
aaa
jge
push
int
sbbb
mov
in
add
mov
je
push
mov
cli
mov
mov
in
shll
mov
ss
rcr
pop
mov
add
add
ret
sub
mov
fwait
xchg
ljmp
pushl
cmpsl
popf
out
or
fidivrl
push
jbe
pop
test
jg
push
sarb
mov
sub
insb
add
dec
lret
cs
out
sbb
popa
sbbl
mov
sarl
jecxz
shlb
fldt
jbe
mov
movntq
arpl
cmp
sub
in
and
daa
jl
pop
aad
pushl
dec
xchg
and
push
shrb
sub
jge
mov
cmpsb
sub
inc
mov
enter
jmp
and
push
cmp
addr16
fstps
jae
add
push
sbb
jle
testb
jne
lret
pop
fwait
sti
rorb
ret
sahf
bound
outsb
jns
or
pop
add
adc
jle
mov
ja
pop
add
les
mov
cs
cmc
scas
xor
inc
ficomps
xor
or
and
lcall
add
xchg
mov
mov
xor
movsb
inc
test
rcr
inc
rclb
inc
out
jmp
sbb
mov
jge
jg
mov
mov
push
repz
mov
in
sub
or
inc
daa
add
mov
cmp
fnsetpm(287
inc
xchg
and
je
jp
stos
xchg
mov
mov
inc
push
mov
jne
add
jmp
add
into
mov
lods
pop
scas
test
int3
in
sbb
and
addl
jbe
mov
pop
jae
mov
mov
loop
push
add
insl
pop
fs
repnz
add
xchg
das
hlt
fcmovnb
push
ret
jo
pusha
sub
movsb
js
mov
pop
and
clc
push
push
gs
repnz
mov
mov
cmpsl
pop
and
test
pop
jnp
sub
insb
je
mov
xchg
rorb
in
cmp
mov
stos
mov
sub
and
ja
mov
mov
lds
mov
in
mov
sub
imul
inc
xor
sub
mov
fisubrl
ds
dec
jno
popf
cmpl
sbb
sbb
mov
data16
push
push
mov
jae
and
and
fs
mov
clc
pushf
push
arpl
cmpsl
sbb
mov
fiadds
in
stos
mov
sbb
aas
mov
cmpl
movnti
rcl
and
adc
cmp
or
sarl
iret
aas
mov
pop
js
movsl
arpl
mov
mov
fdivrs
dec
fnstsw
int3
int3
push
xor
or
call
fs
mulb
das
xor
mov
dec
mov
outsb
mov
lock
shll
add
add
fmull
lret
jae
lret
lea
xchg
sahf
repz
add
mov
push
out
inc
fldenv
add
arpl
jno
add
mov
dec
pushf
jl
lret
sub
jl
gs
jle
add
mov
mov
xchg
push
nop
cmp
cmpsb
jp
pop
enter
adc
jo
dec
pop
ret
fildl
or
testb
mov
cmp
in
loope
in
mov
repz
pushf
imul
js
and
jno
repz
sahf
pop
movsl
nop
mov
rorb
push
mov
add
hlt
xchg
cmp
fldenv
das
fisttps
mul
insb
ss
insl
js
dec
mov
gs
xchg
mov
cli
lods
pop
xorl
add
in
in
pop
push
clc
push
add
or
dec
outsl
cwtl
sbb
jg
in
cmp
add
stc
fdiv
pop
popl
jnp
push
pop
pop
popl
lea
pusha
je
movsb
jmp
add
out
xchg
sbb
dec
mov
jae
cmp
sti
mov
scas
divl
adc
xor
repnz
jmp
pusha
maxps
jb
and
sti
lea
cmpb
pop
lea
ja
fcomps
jmp
es
jl
xchg
cmp
fldcw
sbb
cmp
mov
ja
call
rcl
sti
negl
cmp
add
addl
insl
xor
rorl
add
and
lahf
sbb
add
cmp
pop
call
pushf
mov
sub
cmp
inc
testl
insb
add
das
outsb
mov
xor
fs
outsb
mov
mov
aad
add
fdivrl
push
icebp
sahf
mov
aas
push
xor
jo
mov
loope
dec
fidivl
test
imul
es
pop
dec
mov
lock
mov
pop
add
into
add
outsl
je
lods
push
ret
sarb
sub
sti
rcll
mov
pusha
rol
cmc
insb
xlat
ficoml
jmp
jge
mov
and
mov
outsl
cmc
or
imul
out
out
sub
out
loopne
stc
mov
cmp
les
sarb
push
cmp
xchg
sarb
out
add
insl
imul
sub
mov
pushf
add
xchg
add
jle
fnstsw
popa
push
js
fdivs
mov
inc
inc
fisttpll
fsubl
pop
jae
mov
push
add
xlat
clc
mov
popf
push
scas
addr16
jg
and
pusha
in
xchg
pop
lahf
mov
jb
ja
cs
imul
mov
daa
sub
shr
mov
sahf
and
cmp
mov
lret
pop
cli
stc
cmp
outsb
mov
movsl
or
add
dec
sbb
loopne
sbb
cmp
push
add
mov
push
les
leave
fcoms
add
sub
lahf
arpl
lods
dec
inc
and
lea
call
je
mov
cli
mov
test
inc
jae
add
cmpsb
imul
jg
psubd
jo
js
mov
push
mov
shlb
or
mov
shl
ds
or
mov
mov
push
lahf
and
adc
xorb
or
push
push
pop
jae
inc
cmpsl
mov
add
cltd
cmp
xchg
into
or
jne
aas
adc
sub
push
jmp
xchg
pop
nop
mov
pop
mov
cmp
sarl
sbb
call
and
pop
and
push
psubsb
cmpsb
add
test
xchg
inc
loopne
ret
scas
lret
mov
mov
pop
jl
inc
inc
or
loope
lds
mov
mov
xchg
push
sbb
add
add
jo
inc
pop
mov
or
bound
jno
sahf
jg
pop
and
add
mov
inc
push
xchg
mov
stc
add
and
jecxz
mov
addr16
xor
add
fsubrs
pop
sti
pop
into
push
mov
outsl
pop
sbb
and
cltd
call
inc
add
addr16
xor
and
push
movsb
add
and
or
jmp
xor
adc
fildl
insl
mov
lock
pusha
or
mull
sub
mov
pusha
rcrl
insl
ror
jb
add
jp
and
and
dec
jmp
in
push
addr16
mov
mov
lock
mov
aas
push
imul
fwait
and
and
sbb
pop
out
add
inc
pop
std
push
xchg
add
cs
jbe,pn
xor
cli
inc
aas
push
shlb
aad
out
test
cmp
test
push
and
les
bt
add
add
enter
push
pop
sub
mov
out
xchg
mov
in
jo
mov
lcall
pop
fwait
test
adc
outsl
repnz
add
fcoms
mov
adc
push
or
mov
insb
adc
ficomps
dec
lods
mov
sub
gs
mov
jo
shrl
fnstenv
adc
sarl
push
cmp
xor
pushf
and
shr
div
add
xchg
ss
jb
mov
push
adc
add
test
cmpsb
add
out
out
mov
xor
out
mov
and
adc
pusha
insl
pop
outsb
pop
xlat
jmp
popf
cmp
pop
xor
sub
loop
xor
imul
xor
xor
outsb
xor
lock
mov
shll
testb
iret
jo
imul
add
mov
loopew
or
add
rcl
sbb
adc
push
loopne
mov
roll
and
into
mov
pop
or
das
xchg
pop
sub
dec
and
subl
add
mov
arpl
les
mov
xchg
imul
call
imul
mov
fistl
leave
push
and
jmp
push
pop
ret
dec
xor
popa
inc
dec
push
adc
push
lods
sahf
sti
jnp
mov
push
inc
push
jmp
ret
in
sbb
aam
push
dec
push
cmpsl
into
jg
and
adc
test
movsl
mov
sbb
or
xor
stos
push
sbb
repnz
test
mov
dec
cwtl
adc
cs
into
inc
mov
mov
fwait
ss
pop
mov
movsl
add
out
and
xchg
dec
push
adc
loopne
xor
jb
pop
push
add
scas
pop
call
xlat
test
fidivrs
mov
xchg
mov
mov
pop
inc
xor
xchg
mov
cmp
sbb
and
cmp
cli
adc
jae
out
hlt
add
xchg
ret
js
sbbb
cmp
movsw
cmp
mov
sub
hlt
pop
les
call
sub
iret
and
or
or
cmp
and
cs
pop
je
mov
inc
roll
insb
mov
inc
cmp
and
pop
mov
xor
add
loope
cmp
mov
movsl
lcall
push
add
xchg
pop
in
leave
imul
mov
aaa
mov
and
push
popa
idiv
adc
les
outsl
inc
inc
mov
cmp
add
lods
cmp
push
or
ret
loop
popa
add
pop
push
xor
stos
or
adc
xor
or
dec
jge
mov
cmp
fsubs
in
xor
cwtl
test
push
add
inc
xor
call
or
dec
and
cmpb
mulb
or
ret
pop
shrb
add
dec
jo
adc
sbb
popa
xchg
push
cltd
or
xor
push
into
mov
push
mov
fs
pop
mov
add
xor
dec
dec
sub
jae
xor
and
or
adc
mov
ret
lock
mov
xchg
mov
fmuls
and
mov
cmc
sti
stc
add
jmp
js
lods
insl
pop
test
cmp
sbbb
mov
lods
and
mov
or
dec
bound
mov
icebp
arpl
lea
and
rolb
cmp
cmc
and
lret
add
inc
cmp
call
inc
jecxz
or
mov
mov
sub
ret
xchg
lods
out
lock
in
pop
ja
popa
fwait
js
xor
or
lds
add
xor
dec
add
pop
cli
push
popf
sub
jg
popf
js
mov
mov
jne
mov
les
sub
loop
loope
add
jbe
add
sub
imul
int3
xchg
mov
icebp
repnz
out
in
mov
sbbb
add
scas
cltd
add
test
inc
int3
mov
popa
fdivl
and
test
mov
xchg
ret
adc
ret
fs
cld
aad
mov
out
mov
mov
int
pop
lahf
in
lods
or
and
xor
adc
fdivrl
test
fwait
out
mov
and
jl
andb
mov
orb
rclb
mov
sahf
fdivr
cmp
mov
mov
mov
sbb
inc
fidivrs
and
mov
xor
mov
pop
pop
movsl
sub
mov
movsl
ljmp
imul
jbe
jl
add
inc
and
data16
int3
add
ja
fwait
push
and
inc
andb
es
xor
sbb
sub
jecxz
and
mov
xor
sub
jnp
pop
add
mov
repnz
repz
mov
jmp
and
enter
mov
insl
mov
lods
dec
iret
icebp
cmc
mov
jecxz
push
call
jb
daa
mov
movsl
repz
mov
xor
movsl
fcomps
cld
cli
add
mov
sti
adc
mov
dec
sub
icebp
jbe
mov
popf
ds
mov
gs
gs
xlat
sub
add
inc
je
jmp
push
push
int
dec
jl
dec
inc
push
xchg
dec
daa
arpl
pop
std
inc
push
push
push
out
inc
pop
xchg
pop
pop
push
loopne
pop
add
ret
adc
sub
push
sub
and
sbb
push
mov
push
pop
andl
xor
adc
lahf
sub
or
adc
mov
push
imul
push
xchg
xor
cmpsb
imul
shll
les
test
fnstsw
out
not
push
call
dec
sti
mov
sub
aad
inc
jo
repnz
push
lods
lret
int
ret
fucomip
dec
lret
imul
add
add
movsb
test
mov
cmpsb
or
mov
scas
add
add
or
mov
xchg
xor
jmp
adc
mov
xor
sahf
ds
add
repnz
add
inc
insb
jle
jnp
repnz
gs
push
pop
jl
push
add
jl
pop
rolb
dec
push
cmp
lds
inc
xor
mov
push
mov
int3
push
and
jb
sbb
inc
add
inc
cs
movsl
add
das
sbb
sub
cmp
in
and
and
push
mov
and
shrb
jo
scas
and
sbb
cmp
sbb
add
and
inc
rol
push
into
pop
repnz
mov
adc
shl
inc
fwait
sti
push
out
inc
pop
pop
inc
std
repz
iret
int
and
aam
push
clc
add
fld
imull
fisttpl
xchg
mov
repz
mov
pop
mov
and
sahf
call
stos
setbe
fs
mov
mov
mov
pop
popf
xor
ficoms
fbld
or
outsb
fucomip
jecxz
jecxz
clc
mov
mov
jl
lock
inc
subb
cmp
pop
and
cs
add
add
nop
sub
mov
push
lret
lret
add
pop
mov
add
sbb
sbb
mov
cwtl
inc
sub
mov
lahf
push
sbbl
sub
repz
mov
jnp
icebp
pop
mov
push
rcr
jo
popa
and
loop
push
lret
sub
mov
add
aam
popa
cmp
cmpsl
ljmp
xchg
push
push
jl
loopne
jo
lds
loop
cmp
push
mov
or
xor
in
xchg
aaa
call
stos
or
cs
add
and
xchg
pop
sbb
outsl
add
aaa
mov
cmpsl
movsl
push
xchg
sub
or
push
and
mov
lock
and
jae
ret
ja
push
popf
imul
mov
pop
shrl
int3
inc
pop
fs
and
pop
lods
and
push
clc
out
add
insl
cmpsb
dec
and
add
inc
inc
pop
bnd
mov
pusha
pushf
out
mov
add
mov
add
lods
out
inc
test
push
mov
mov
sahf
inc
mov
fcoml
and
pop
cmp
scas
mov
and
test
add
mov
or
outsb
add
out
add
jmp
mov
and
jl
jmp
xchg
lds
pusha
imul
aam
imull
rorb
cs
int3
add
and
add
xchg
aaa
arpl
sbb
and
shrl
add
orb
adc
aaa
add
stos
xchg
sbb
cmp
add
add
mov
or
mov
sub
jae
push
and
or
fxch
idivb
int3
and
andb
or
jb
cmp
outsb
data16
add
jno
pop
mov
push
lret
add
mov
xor
push
push
dec
jbe
mov
add
mov
add
add
test
cmpsl
adc
xchg
mov
mov
stos
push
and
nop
lret
add
mov
xchg
jnp
mov
adc
testl
mov
inc
sti
call
and
loope
pop
sbb
in
fwait
into
fsubr
jae
lds
addr16
rcr
arpl
fiaddl
std
xchg
loopne
loope
add
rorb
int3
ss
cltd
add
mov
sbb
xor
addr16
cwtl
sub
sbb
daa
rep
out
sbb
fcompl
cltd
xor
adc
movsl
pop
or
dec
ds
popf
mov
adc
stc
js
and
jle
ret
insb
pop
jno
and
jbe
aam
outsl
pop
fisubrs
aaa
rolb
repnz
jl
pop
adc
push
test
mov
push
repnz
dec
dec
cmpb
repz
mov
stos
ret
mov
aad
push
add
sub
push
in
sbb
and
dec
stos
xor
stos
addl
xor
jae
push
jb
pushf
or
cli
in
sar
and
arpl
mov
pop
sub
iret
cmpl
jne
adc
mov
outsb
loopne
cld
popf
adc
in
mov
cmp
fdivl
mov
movsl
mov
jne
adc
stos
xor
sub
add
adc
fs
cmpsb
dec
je
lahf
inc
loopne
push
add
xor
or
popa
cltd
inc
ss
cmp
jae
inc
xor
lahf
pop
push
xor
or
pop
ret
cmp
je
adc
ficoms
test
sbb
jo
popa
adc
sub
inc
add
xchg
dec
push
cltd
outsl
or
xor
shrl
adc
mov
sub
dec
mov
cmc
xchg
and
cmpsb
pop
test
xor
movsb
outsl
and
push
adc
sbb
cmp
subb
popa
sbb
test
dec
cwtl
xchg
add
sbb
adc
jp
daa
inc
rolb
inc
add
fmul
pop
inc
outsb
or
xchg
data16
inc
call
mov
clc
lahf
dec
cmp
dec
fwait
cld
add
fwait
push
xor
loop
gs
test
cmp
mov
ja
sarl
push
sbb
push
mov
or
cmpsb
or
cmpsl
mov
mov
cmp
leave
or
incl
ret
negb
repz
in
mov
push
in
int
in
sti
aad
hlt
out
pop
cld
rcr
data16
jb
lret
fnstcw
aaa
cld
jge
pop
cmp
cmp
mov
aas
ret
push
sbb
jbe
arpl
xchg
xchg
adc
shl
push
fdiv
add
or
jb
pushf
repz
repz
inc
sub
xor
call
add
push
push
cmp
sbb
xchg
sbb
dec
stc
stos
dec
iret
shrl
insb
dec
xor
cmpsl
iret
add
sub
mov
mov
and
add
adc
push
pop
pop
xchg
popl
xchg
xchg
add
xchg
sub
mov
mov
pop
mov
push
sub
mov
pop
pop
sub
mov
mov
pop
sub
mov
mov
pop
xchg
mov
xchg
push
mov
pop
sub
mov
mov
pop
push
mov
pop
movl
push
sub
mov
pop
pop
sub
mov
push
pop
pop
push
mov
pop
sub
mov
mov
pop
mov
xchg
sub
mov
mov
pop
call
inc
incl
cmp
jne
sub
mov
sub
mov
pop
pop
sub
mov
push
pop
pop
mov
push
mov
pop
sub
mov
mov
pop
inc
cmp
jne
sub
mov
mov
pop
xchg
mov
xchg
xchg
sub
mov
mov
pop
xchg
mov
xchg
xchg
add
add
jmp
jmp
xchg
sub
mov
sub
mov
pop
pop
mov
sub
mov
mov
pop
xchg
push
push
pop
pop
push
sub
mov
pop
pop
lea
sub
mov
sub
mov
pop
pop
xchg
sub
mov
mov
pop
sub
mov
mov
pop
push
xchg
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
sub
mov
mov
pop
push
sub
mov
mov
pop
push
sub
mov
pop
pop
xchg
sub
mov
push
pop
pop
sub
movl
sub
mov
sub
mov
pop
pop
push
sub
mov
pop
pop
xchg
sub
mov
push
pop
pop
lea
xchg
xchg
xchg
sub
mov
push
pop
pop
push
push
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
push
sub
mov
pop
pop
push
mov
pop
lea
xchg
push
mov
pop
call
sub
mov
mov
pop
sub
mov
mov
pop
mov
xchg
push
push
pop
pop
push
sub
mov
pop
pop
xchg
lea
sub
mov
push
pop
pop
xchg
xchg
push
mov
pop
mov
xchg
push
sub
mov
pop
pop
push
mov
pop
xchg
xorl
xchg
push
push
pop
pop
add
cmp
jb
jmp
xchg
sub
mov
sub
mov
pop
pop
push
sub
mov
push
pop
pop
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
sub
mov
mov
pop
mov
push
mov
pop
push
sub
mov
pop
pop
push
mov
pop
push
mov
pop
mov
push
mov
pop
xchg
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
xchg
xchg
add
subl
xchg
sub
mov
mov
pop
pop
push
mov
pop
sub
mov
push
pop
pop
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
sub
mov
mov
pop
xchg
ret
push
sub
mov
pop
pop
push
mov
pop
pop
xchg
sub
mov
mov
pop
sub
sub
mov
mov
pop
push
mov
pop
mov
xchg
sub
mov
push
pop
pop
push
mov
pop
sub
mov
push
pop
pop
lea
xchg
xchg
sub
mov
push
pop
pop
sub
mov
sub
mov
pop
pop
sub
mov
sub
mov
sub
mov
pop
pop
sub
mov
push
pop
pop
push
sub
mov
pop
pop
push
sub
mov
pop
pop
pushl
xchg
xchg
push
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
mov
xchg
push
sub
mov
pop
pop
movl
sub
mov
sub
mov
pop
pop
push
mov
pop
popl
push
push
pop
pop
sub
mov
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
push
push
pop
pop
push
xchg
push
push
pop
pop
call
