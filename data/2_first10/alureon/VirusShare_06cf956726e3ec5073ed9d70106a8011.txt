adc
lea
xor
not
shl
xor
and
jmp
mov
lea
neg
sub
mov
rcl
rol
xchg
xor
mov
not
lea
lea
xor
jmp
adc
shl
mov
neg
add
add
shl
add
and
mov
mov
mov
lea
xor
lea
jmp
add
mov
xor
xor
mov
xor
not
lea
xor
jmp
mov
lea
push
push
call
shr
mov
lea
mov
jmp
mov
rcr
mov
add
xchg
lea
mov
not
add
push
xor
xor
xchg
rol
jmp
not
rcl
rcl
not
xor
xchg
lea
lea
xor
not
neg
mov
shr
jmp
shl
rol
mov
xor
push
shl
and
rol
mov
mov
add
mov
shr
xor
popl
jmp
not
neg
neg
xchg
inc
jne
adc
xchg
shl
rcl
ret
push
mov
add
pusha
mov
shr
adc
call
rcr
jmp
mov
mov
not
not
movl
mov
neg
xor
ret
mov
mov
lea
xchg
shl
jmp
xor
lea
add
lea
xor
and
mov
pop
xor
jmp
xchg
mov
xor
xor
mov
xor
xchg
not
mov
jmp
neg
mov
movl
mov
lea
shl
movl
lea
xor
adc
mov
lea
not
jmp
shl
rcl
lea
lea
push
push
push
push
call
push
jmp
neg
mov
add
shr
mov
xor
xor
and
adc
lea
xor
jmp
xor
shr
popl
mov
add
mov
xor
mov
xor
shr
push
jmp
mov
add
mov
push
mov
neg
mov
mov
add
shr
lea
adc
jmp
lea
xchg
mov
add
neg
neg
jmp
rcl
xor
xor
movl
xor
lea
adc
lea
lea
movl
xor
not
jmp
mov
neg
mov
mov
xor
lea
lea
mov
mov
rol
mov
jmp
xor
neg
xor
neg
xchg
neg
neg
push
lea
push
push
lea
push
pushl
call
jmp
jne
lea
mov
shl
xor
mov
rcr
add
jmp
neg
rcl
neg
mov
not
xor
mov
lea
lea
shr
lea
push
push
push
push
push
push
push
call
jmp
xor
xor
xor
xor
mov
call
not
add
mov
xor
xor
not
lea
mov
lea
jmp
not
mov
ret
xor
lea
xor
push
push
lea
push
lea
push
call
jmp
lea
xchg
add
neg
dec
jmp
mov
add
mov
rcr
xor
push
lea
push
push
lea
push
pushl
call
jmp
not
xor
mov
neg
lea
not
rol
push
call
mov
and
lea
mov
lea
jmp
lea
and
xor
xchg
lea
jmp
adc
not
not
mov
popa
leave
call
call
xchg
xchg
xor
jmp
jl
inc
int3
mov
inc
int3
adc
pop
pusha
dec
rcll
outsl
xchg
mov
xchg
push
leave
cltd
lods
sbb
rcrb
in
mov
mov
sbb
xchg
add
inc
stos
mov
sbb
arpl
mov
cwtl
inc
cltd
jl,pn
or
es
mov
inc
int3
movsl
sbb
shrb
dec
inc
mov
aas
sub
loop
jne
nop
inc
int3
ret
cmp
ss
inc
data16
shll
iret
mov
cmp
xlat
xchg
jle
rclb
mov
fdivs
test
and
test
mov
mov
mov
push
nop
aaa
arpl
rcrb
jge
add
sarb
iret
sbb
sub
mov
cmpsb
nop
inc
int3
or
leave
mov
pop
outsl
add
push
sub
cmc
js
xor
jnp
lods
in
sbb
stos
daa
inc
or
push
sbb
sbb
call
mov
outsl
aaa
les
mov
enter
call
dec
adc
les
test
call
jnp
inc
loopne
stos
int3
movsl
nop
inc
dec
mov
inc
es
pop
mov
rolb
loopne
sub
outsl
aaa
xor
nop
sub
cmp
xor
iret
jg
mov
int3
sbb
push
out
lods
leave
xorb
mov
sbb
mov
nop
inc
aas
add
aaa
cs
lret
rorl
cmp
in
mov
mov
rolb
add
shll
insb
leave
sbbl
in
cs
sbb
xor
nop
lret
mov
mov
cmpsb
mov
cld
mov
mov
in
mov
ret
iret
out
push
jl
lods
mov
movsb
ds
sar
mov
test
scas
loop
add
ljmp
mov
cli
ss
jecxz
lret
sub
test
imul
push
es
mov
loopne
push
adc
mov
xor
int3
mov
shll
ret
pop
scas
test
cmc
sub
mov
iret
mov
and
xor
xor
sar
mov
sbb
mov
decb
lods
sbb
stos
mov
andl
outsl
jge
and
cwtl
in
movsb
dec
or
pop
mov
enter
lock
adc
rcrl
jbe
cld
mov
jl
dec
xor
add
cs
adcl
mov
mov
xor
fnsave
fimuls
push
xor
mov
adc
jmp
popf
inc
or
cmp
ret
cs
int3
jmp
aas
fldl
add
sub
pop
cmp
cmp
jle
sbb
iret
sar
sti
shl
cmp
xchg
sar
mov
in
pusha
adc
mov
adc
arpl
cmp
inc
mov
sar
arpl
jge
pusha
mov
int
rorb
hlt
and
std
cld
mov
in
cld
cmc
iret
rorl
sti
leave
push
add
mov
pop
cmp
into
xchg
in
cvttps2pi
movsb
stc
add
xchg
out
pop
or
xor
ja
ret
sub
add
and
mov
mov
loopne
push
adc
mov
and
dec
jmp
mov
ds
mov
mov
push
shrb
push
incl
mov
pushf
add
mov
lods
loop
mov
adc
xor
add
mov
mov
add
cvttps2pi
pop
xchg
roll
push
roll
cmp
cmp
jne
cs
or
push
mov
cmp
xchg
xchg
mov
push
xchg
or
int
cld
add
xchg
ja
push
xchg
fcmovnbe
cld
mov
add
iret
fidivrs
int
cld
add
xchg
fadds
mov
lcall
stc
shlb
sahf
test
pushf
or
fwait
mov
add
mov
adc
xor
add
inc
lods
hlt
add
lahf
rolb
test
sub
mov
mov
repz
mov
leave
stos
flds
mov
pop
mov
jg
repnz
es
dec
cmp
ja
fistps
test
mov
and
xchg
push
cmp
cmp
adc
xor
add
inc
push
cld
mov
xor
mov
shlb
cmpl
stos
mov
mov
cmp
jg
ja
fidivrl
jb
ret
pusha
push
sub
ja
add
fistps
cmpl
incb
cmp
mov
les
mov
aam
int
xchg
mov
ja
lods
xor
ja
jp
push
dec
adc
arpl
addb
xchg
in
xlat
movsl
lods
out
shrb
iret
mov
cld
mov
rorl
mov
mov
pop
ret
fnstenv
lret
push
adc
scas
bound
test
ja
sar
mov
jmp
hlt
mov
mov
sarb
iret
sar
mov
mov
cld
mov
xor
mov
rorb
mov
sahf
mov
inc
mull
xor
ja
pop
mov
in
ja
pusha
pop
in
insb
std
cld
mov
pop
stos
orb
cld
mov
shll
inc
bound
iret
sar
std
pop
mov
fidivrl
mov
loop
mov
and
pop
mov
fnsave
ret
pop
mov
inc
test
mov
leave
mov
xlat
movsb
or
xchg
stc
call
pop
movsb
xchg
inc
mov
jmp
movsl
rcll
test
add
jmp
lcall
imul
popf
or
cmc
xchg
ror
jo
gs
inc
out
imul
loopne
mov
xchg
out
test
xchg
shrd
ljmp
xchg
mov
mov
icebp
add
cmc
mov
inc
shlb
cld
mov
push
xchg
jecxz
clc
mov
loope
cltd
les
jo
pop
adc
mov
mov
fisubl
pop
test
lahf
xchg
aam
into
sbb
mov
or
sti
push
into
fcmovu
add
out
imul
pop
xlat
sub
out
aaa
pop
test
xchg
hlt
clc
popf
mov
in
movsb
xchg
adc
in
jmp
mov
xchg
dec
decl
into
shrb
cmpsb
adc
lret
scas
sar
stos
mov
mov
sub
cmc
stc
jo
enter
das
jns
mov
std
iret
push
mov
sbb
iret
inc
iret
call
call
mov
decl
adc
mov
mov
ja
dec
ja
les
adc
pop
daa
ror
test
imul
ret
jne
inc
xor
xor
int
or
sar
mov
jg
adc
fiadds
sbb
xchg
inc
ss
sub
pop
jns
stos
into
movsb
sbb
jmp
hlt
dec
call
cli
test
je
push
cmp
rcll
add
negl
mov
xlat
lods
pusha
inc
fistpll
pop
sbb
cwtl
pop
fdivp
mov
rcl
movsb
lock
push
lods
call
mov
mov
lret
adc
fisttpll
mov
xchg
fnstsw
add
cli
inc
enter
loope
pop
xor
cmp
fsubl
movsb
hlt
dec
fiaddl
push
inc
mov
mov
stos
ficomps
dec
fmul
cli
scas
add
repz
leave
ljmp
inc
outsl
mov
cmpsl
into
testl
aas
or
mov
mov
xchg
lock
jbe
and
and
subl
sub
adc
mov
movsb
stos
std
mov
in
adc
mov
adc
mov
xor
rcl
in
jno
leave
scas
lock
push
std
ja
fidivrs
incb
fadd
dec
mov
sub
xlat
inc
cs
leave
cmp
dec
cwtl
shrl
jo
mov
xchg
lods
adc
insl
dec
cmp
or
aad
in
xlat
movsb
mov
insl
aas
sub
sub
cltd
xor
fildl
mov
je
mov
inc
xchg
shlb
fwait
cmp
in
andb
xlat
mov
sti
pop
xchg
and
cwtl
aas
mov
cmpb
pop
mov
scas
daa
nop
in
je
jnp
add
test
dec
add
fcomps
adc
jmp
in
sbb
nop
pop
outsl
mov
push
test
mov
in
loop
add
jecxz
leave
push
mov
aam
outsb
inc
test
dec
push
cmpl
or
rorl
fnstcw
mov
gs
push
xor
mov
pop
sar
mov
adc
dec
pop
daa
fdivs
mov
aad
imul
repnz
aam
movsl
shlb
nop
ljmp
cmp
loop
xchg
xchg
push
fstl
xlat
xchg
and
sahf
sub
std
jecxz
into
push
subl
lret
fnstsw
mov
dec
js
test
movsl
and
inc
add
dec
in
ja
test
out
mov
aad
or
or
mov
out
rorb
or
mov
dec
jo
xchg
vpcmpeqd
jge
push
cltd
add
push
out
cwtl
ret
shl
fimuls
repz
and
xchg
aam
push
int
jp
fcoml
pop
in
inc
lret
loopne
movsl
lcall
loope
or
int
adc
int
cmp
pop
add
arpl
fsubr
int3
dec
sub
dec
leave
jne
xor
push
addr16
adc
repz
or
add
mov
repz
cmp
in
add
fisubrl
push
cmc
or
rolb
xchg
cmp
les
pop
and
fs
dec
mov
sbb
out
lods
call
insb
ja
push
add
fstpt
xchg
or
jno
outsl
out
mov
mov
jmp
jp
sarb
mov
xorb
decl
movsb
scas
shlb
or
scas
lcall
mov
mov
repz
adc
xchg
or
sub
in
and
shl
dec
jbe
inc
aaa
scas
cs
sti
movsb
loopne
or
sbbb
insl
mov
iret
fildl
movsb
call
repz
or
mov
adc
fidivrl
in
or
mov
xchg
ret
mov
pushf
lea
pop
mov
xchg
int3
mov
in
xchg
call
cwtl
xchg
lods
xchg
iret
push
xor
fadd
std
fimuls
mov
pop
sti
dec
out
jns
xor
xor
ret
mov
inc
adc
sbb
cli
adc
jl
repz
or
push
pop
in
lock
aas
hlt
andb
or
dec
call
jg
iret
insl
fcoml
inc
fimull
mov
fnsetpm(287
test
frstor
fsubrl
hlt
stos
in
ret
and
inc
fstpt
push
jne
sub
mov
popa
lret
jge
scas
jne
pop
shl
or
cmc
loop
mov
add
cs
cwtl
lds
leave
leave
cmc
std
ds
jne
test
stc
xor
mov
sbb
std
pop
outsb
sub
mov
gs
popf
call
sub
add
aas
pop
fisubrs
hlt
aad
ficoms
in
or
bnd
cli
cmp
jg
sbb
mov
mov
int3
xchg
popa
mov
je
mov
ret
lret
mov
ret
mov
out
mov
mov
mov
xchg
mov
andb
std
mov
movsb
lds
xchg
jp
insb
inc
lods
adc
inc
mov
insb
fistpl
xchg
adc
adc
mov
push
in
test
mov
pushf
inc
cmp
push
out
xor
loopne
subl
insb
cmc
lock
pushf
shr
nop
ljmp
pushf
rorb
pusha
inc
in
push
jl
aam
mov
sbb
xchg
mov
addb
hlt
mov
jg
scas
lock
std
fadds
clc
jmp
push
mov
popf
aam
push
rcll
mov
cmp
fdivl
clc
scas
cmpsl
vcvtsd2si
jl
mov
jg
inc
mov
mov
test
cmp
push
loop
adc
mov
xor
je
jl
mov
mov
jns
jg
jmp
mov
fistpll
int
lcall
outsl
enter
mov
fstl
dec
mov
add
icebp
aas
lea
dec
push
xor
jecxz
mov
fistps
out
loope
movsb
inc
and
mov
outsb
in
sarl
test
push
xchg
add
stos
xchg
enter
xchg
or
pop
mov
aaa
sbb
sbb
shlb
test
sbb
jnp
fsubs
xchg
dec
mov
jmp
pop
cmp
mov
jb
xchg
std
xor
pop
and
.byte
.byte
