push
lea
nop
nop
push
lea
nop
nop
mov
lea
nop
nop
push
jmp
mov
jmp
ret
jmp
push
lea
nop
nop
mov
lea
nop
nop
movsl
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
mov
lea
nop
nop
sub
lea
nop
nop
xor
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
call
lea
nop
nop
push
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
jmp
push
jmp
push
add
pop
lea
nop
nop
inc
lea
nop
nop
je
lea
nop
nop
sub
lea
nop
nop
jmp
lea
nop
nop
add
lea
nop
nop
movl
lea
nop
nop
xor
lea
nop
nop
lea
lea
nop
nop
lea
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
mov
lea
nop
nop
push
lea
nop
nop
pushl
pop
lea
nop
nop
add
lea
nop
nop
mov
lea
nop
nop
mov
jmp
lret
in
push
jmp
fmull
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
xor
jmp
mov
and
loopne
stos
mov
and
nop
nop
inc
lea
nop
nop
push
lea
nop
nop
addl
lea
nop
nop
decb
lea
nop
nop
nop
lea
nop
nop
inc
lea
nop
nop
push
lea
nop
nop
addl
lea
nop
nop
push
lea
nop
nop
addl
lea
nop
nop
mov
lea
nop
nop
push
lea
nop
nop
call
lea
nop
nop
add
jmp
lea
sub
sub
sub
sub
sub
sub
sub
sub
jmp
lea
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
nop
lea
nop
nop
nop
lea
nop
nop
nop
lea
nop
nop
call
jmp
push
jmp
cmp
lea
nop
nop
jne
lea
nop
nop
jmp
lea
nop
nop
call
lea
nop
nop
push
lea
nop
nop
subl
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
pop
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
pushl
lea
nop
nop
pushl
lea
nop
nop
push
lea
nop
nop
movl
lea
nop
nop
call
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
pop
jmp
inc
jmp
mov
lea
nop
nop
add
lea
nop
nop
xor
or
lea
nop
nop
xor
lea
nop
nop
sub
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
xor
lea
nop
nop
mov
jmp
add
movzbl
jmp
je
cmpl
nop
jb
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
push
lea
nop
nop
mov
lea
nop
nop
xor
lea
nop
nop
lea
lea
nop
nop
xor
jmp
add
jmp
mov
jmp
pop
jmp
sub
jmp
aas
cld
push
movzbl
lea
nop
nop
push
add
pop
lea
nop
nop
push
add
pop
lea
nop
nop
movzbl
lea
nop
nop
add
sub
lea
nop
nop
lea
sub
sub
sub
sub
sub
sub
sub
sub
lea
nop
nop
cmp
lea
nop
nop
jb
lea
nop
nop
xor
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
inc
lea
nop
nop
mov
lea
nop
nop
cmp
lea
nop
nop
jb
lea
nop
nop
xor
lea
nop
nop
xor
lea
nop
nop
pop
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
test
lea
nop
nop
jbe
lea
nop
nop
add
lea
nop
nop
movzbl
jmp
push
add
jge
lods
movzbl
lea
nop
nop
push
add
pop
lea
nop
nop
movzbl
lea
nop
nop
xor
xor
lea
nop
nop
mov
lea
nop
nop
nop
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
nop
lea
nop
nop
push
add
pop
lea
nop
nop
movzbl
lea
nop
nop
movzbl
jmp
mov
adc
mov
movsl
int
lea
nop
nop
dec
lea
nop
nop
jne
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
pop
lea
nop
nop
add
lea
nop
nop
pop
lea
nop
nop
add
lea
nop
nop
push
jmp
mov
jmp
lea
mov
lea
nop
nop
shr
lea
nop
nop
mov
lea
nop
nop
shl
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
pushl
lea
nop
nop
push
lea
nop
nop
xor
lea
nop
nop
xor
lea
nop
nop
mov
lea
nop
nop
add
lea
nop
nop
cmp
lea
nop
nop
je
lea
nop
nop
sub
lea
nop
nop
jmp
lea
nop
nop
xor
lea
nop
nop
xor
add
lea
nop
nop
lea
lea
nop
nop
lea
lea
nop
nop
mov
lea
nop
nop
mov
lea
nop
nop
lea
lea
nop
nop
add
jmp
mov
jmp
add
lea
nop
nop
ret
add
imul
orb
dec
idiv
popf
xchg
cmp
js
sarl
jle
addr16
daa
ljmp
ds
push
add
movsl
mov
mov
pop
mov
cltd
xor
pushf
int
push
pop
xchg
lock
dec
mov
sti
mov
daa
sub
jno
subb
ljmp
icebp
fcmovnbe
mov
jle
scas
mov
jl
mov
cmp
loopne
clc
adc
imul
hlt
repnz
push
push
das
pop
sub
push
testl
jmp
sbb
mov
iret
cwtl
aad
fnstsw
adc
pop
cli
movsb
fld
dec
pusha
jne
mov
lods
out
mov
inc
dec
jae
xchg
dec
cmp
call
or
mov
mov
sbb
cmp
jge
adc
xchg
lret
or
jmp
adc
add
add
lods
and
test
incl
xor
adc
leave
mov
popa
mov
adc
sti
repnz
cmp
xchg
or
jp
sti
cmc
mov
icebp
lahf
sti
jl
fsubl
sti
aas
scas
mov
sbb
xor
xchg
push
xor
cli
lods
mov
aaa
jb
jmp
hlt
hlt
jmp
lahf
dec
je
hlt
out
xor
dec
or
sub
push
out
out
in
call
or
cmp
xchg
aam
mov
dec
push
int3
pop
fisubl
stc
popa
xlat
ljmp
mov
sbb
cmp
push
and
add
jmp
jmp
sbb
lahf
ret
lret
outsb
shr
cmp
add
sbb
pop
mov
call
rcll
mov
loopne
xor
push
mov
inc
aas
enter
stos
ror
sbb
notl
or
jo
mov
xchg
xchg
pop
mov
xor
mov
fwait
imul
jp
xor
test
sbb
fs
sub
push
cmp
fwait
add
and
pop
sbb
adcl
enter
out
or
inc
cmc
cmp
pop
lret
sbb
xchg
adc
dec
js
dec
outsb
pop
jnp
mov
inc
addl
and
jne
and
or
xchg
mov
bound
loop
adc
aad
addb
xor
fidivrs
pop
inc
aad
push
sbb
jp
push
pop
add
cmp
and
inc
pop
jmp
test
stos
movsb
in
jae
cli
sub
pop
mov
jbe,pn
jmp
lahf
push
leave
mov
add
insb
lret
outsb
cltd
pop
cwtl
ret
rorb
stos
in
inc
cli
add
push
cmp
pusha
shlb
dec
add
and
xchg
inc
push
in
loopne
js
sub
adc
cmpsb
or
jnp
add
outsl
xor
or
sbb
or
or
dec
fidivrl
fcoml
push
push
data16
es
mov
sti
or
orb
hlt
cwtl
shrb
into
filds
xor
mov
xor
stos
adc
stc
pop
stos
mov
pop
sub
pop
jo
out
or
lcall
mov
nop
stos
jg
sarb
mov
icebp
jle
sbb
loop
lahf
pop
push
xchg
push
mov
in
ljmp
jb
sbb
jbe
pushf
inc
iret
mov
incb
xor
add
cmp
sti
and
test
lock
mov
in
fucom
into
icebp
jb
arpl
mov
push
sub
jnp
pop
dec
out
data16
mov
fwait
call
adc
jo
sbb
mov
movsb
jmp
repz
jmp
test
je
sti
push
xchg
sbb
mov
popa
xchg
andl
mov
stos
incl
cmp
fcmovu
fptan
add
nop
cwtl
roll
jecxz
push
filds
out
pop
sub
xchg
andb
mov
insl
adc
out
inc
and
mov
inc
pop
adc
pushf
dec
andl
jg
push
andb
mov
cwtl
jl
ljmp
add
pop
or
lock
xchg
fsub
cmp
pop
pop
notb
jo
add
xor
mov
das
xlat
out
pop
xchg
lahf
mov
dec
test
lods
sti
mov
lds
dec
xchg
loop
mov
out
fsubrl
lcall
fdivr
mov
push
jecxz
cmp
sbb
pusha
push
pop
inc
xchg
or
mov
mov
jg
or
mov
pusha
pop
and
push
enter
dec
add
imulb
stos
rorl
movsl
and
cmp
mov
pop
xchg
xchg
sub
dec
cwtl
cmp
mov
xchg
fs
push
aam
in
inc
in
adc
leave
push
in
push
adc
sub
xchg
lahf
lds
and
imul
es
fstp
gs
push
pop
insb
dec
movsl
jge
fisttps
lahf
dec
pusha
lds
fldt
dec
inc
rorl
xor
movl
addr16
pop
dec
popa
aas
es
lock
pop
ret
cmpsl
lock
jecxz
inc
xor
inc
jne
dec
loopne
daa
in
addl
dec
mov
push
xchg
mov
sub
mov
pop
aaa
mov
das
mov
adc
ret
inc
add
push
pop
xor
pushf
fnstcw
jle
pop
into
scas
cmp
gs
push
xor
rolb
lds
mov
cmp
inc
xor
fldenv
push
push
xchg
sub
or
jmp
add
mov
int3
loopne
push
sbb
insb
or
dec
pop
mov
jle
imul
es
push
in
xor
dec
jbe
add
fldenv
pop
mov
pop
or
rorb
aas
into
test
pop
or
sti
mov
fildl
jmp
outsl
mov
fsubrs
xchg
pop
dec
out
cmc
sub
stos
pop
leave
imulb
dec
cmpsl
sub
movsb
sbb
popa
scas
out
lret
push
iret
in
jo
inc
outsb
divb
test
jno,pt
jae
xor
stos
adc
cli
out
xor
mov
pop
jnp
sbb
lods
jge
in
sub
cmc
sub
xchg
lcall
mov
jmp
ret
sarl
and
jmp
int3
inc
fs
stos
cmp
mov
xor
dec
jg
clc
and
mov
jge
aam
imul
push
sarb
mov
add
test
test
hlt
adc
loopne
cld
xor
mov
jmp
ss
repnz
test
mov
xor
clc
mov
or
add
roll
int
ret
int
jns
jbe
ret
bound
loope,pt
xorl
daa
rolb
lcall
mov
mov
cmp
push
ljmp
pusha
jl
pop
push
sbb
pop
pop
xchg
pop
jns
dec
addr16
push
pusha
mov
imul
test
push
xchg
cmp
repz
or
add
dec
aad
leave
outsb
es
and
outsl
xchg
push
repz
xchg
sub
add
cmp
jle
divl
pop
jl
sub
inc
jmp
xchg
imul
adc
jb
lds
movsl
adc
mov
test
push
mov
cwtl
push
fcmovb
push
lea
cs
popa
mov
fs
dec
stos
xor
stos
mov
cltd
jg
pop
mov
sbb
ljmp
jmp
call
mov
push
push
and
leave
sub
pop
es
in
sbb
in
jae
pusha
cmpsb
sbb
bound
cmp
xchg
aam
shll
icebp
sbb
cli
push
in
mov
cld
pushf
aas
lret
lret
enter
pop
std
lods
mov
or
ret
or
push
xchg
mov
mov
or
inc
nop
xchg
ss
lcall
push
cmp
add
inc
loop
ret
mov
push
data16
cmpb
shrl
repnz
push
movsb
mov
cs
lcall
xlat
push
aam
cmp
sub
ret
cmp
mov
je
inc
or
imull
push
cli
jnp
adc
xor
jmp
insb
push
mov
pop
push
sti
es
pusha
aam
aad
mov
dec
shr
xchg
adc
xchg
fcomip
jg
cmp
rcl
aad
and
inc
bound
sub
add
jae
mov
test
and
cmp
popf
dec
and
pop
sub
push
idiv
imul
or
mov
call
add
popa
inc
inc
push
and
sbb
testb
test
movsl
xchg
ffreep
inc
shrl
and
xchg
cmpsl
movl
call
mov
mov
or
lock
mov
das
jb
or
jmp
das
imul
push
mov
add
add
divb
mov
add
stc
iret
daa
out
cmp
add
or
test
mov
inc
scas
ffreep
mov
mov
cmp
icebp
add
dec
cmp
jae
or
xor
movsb
in
and
ss
addr16
sbb
mov
push
add
or
cli
xlat
sub
lods
jp
movsb
fdivrs
leave
push
xor
push
mov
mov
rorb
pop
xor
cmp
xor
dec
pop
out
dec
scas
or
fs
mov
jo
movsb
shr
lea
int3
mov
lods
mov
out
test
xchg
fldt
lret
mov
xchg
sub
dec
addb
imul
mov
aaa
ficomps
cmp
in
stos
cmp
cmp
jb
pop
push
fisttps
mov
stos
inc
mov
push
mov
fwait
lods
push
fistl
mov
jae
jp
scas
and
hlt
mov
mov
or
dec
xchg
movsb
addb
cmp
clc
das
push
xor
xchg
add
nop
rclb
mov
jmp
push
out
cmp
or
sub
cmp
int3
sbb
sahf
and
and
loop
mull
sub
and
adc
cmp
jl
sub
ss
rcr
int
push
push
mov
mov
les
cwtl
dec
arpl
mov
ja
cli
jle
jge
stos
aam
mov
xchg
shlb
mov
or
mov
mov
shr
push
sar
push
in
jno
fwait
push
mov
call
out
dec
cmp
mov
ja
jne
xchg
xchg
mov
repz
push
in
push
mov
pop
push
pop
mov
add
or
pusha
addl
out
sbb
or
pop
xchg
lock
add
pop
xchg
fnstenv
jmp
mov
das
sbb
inc
mov
lcall
jmp
js
jbe
mov
fwait
pusha
daa
fnsave
mov
fscale
jb
jp
addl
flds
mov
cld
xorl
or
icebp
add
leave
mov
insb
jo
sub
inc
mov
mov
sbb
lods
pop
idivb
lcall
jb
int3
aas
pusha
mov
add
test
push
test
repz
push
in
mov
sbb
cmp
xor
fsubs
into
aas
sbb
mov
adc
ljmp
dec
insb
and
or
cli
fdivrs
pop
mov
mov
dec
pop
adc
dec
lcall
pop
in
xchg
mov
lock
rclb
jae
mov
jle
dec
movl
add
roll
adc
leave
movsb
pop
sahf
sub
movsl
xchg
or
int
or
and
cwtl
scas
add
repz
andl
icebp
cmp
xlat
jo
scas
fiaddl
test
ss
rorl
mov
and
fcompl
pusha
je
mov
dec
andb
insb
cltd
imull
std
pusha
sbb
adc
sub
dec
sub
xor
mov
js
push
push
xchg
adc
leave
mov
lds
push
mov
mov
jne
lahf
jmp
movsl
es
xchg
int3
shr
and
xor
fs
sahf
sub
xchg
push
popa
movsb
in
fsubrs
add
call
pop
and
out
jmp
cmpsb
je
loope
fnstsw
sub
lds
sbb
and
gs
lock
js
and
pop
xor
ljmp
xor
das
stc
sub
push
pop
lock
mov
rcr
mul
xchg
int
cltd
faddl
in
pop
xchg
sub
inc
sub
and
sbb
sbb
outsb
popf
pop
das
aaa
pusha
call
cltd
jl
test
or
stc
mov
lock
dec
push
sbb
pop
sub
pop
outsb
add
fistpll
and
add
xor
add
push
dec
cltd
movsl
xchg
std
mov
inc
cmp
fldl
test
sbb
dec
fiaddl
idiv
add
cmpsb
cmpsl
or
jl
and
clc
or
push
ret
jecxz
ficoml
rolb
divl
daa
test
adc
dec
lds
cmp
fldt
inc
shrl
addl
je
fnsave
insb
cld
int
xor
lret
mov
jbe
or
in
pop
sahf
push
int3
mov
aad
or
jg
nop
push
push
popf
jmp
push
inc
mov
rcr
sub
shrl
xchg
add
aas
pop
xchg
xor
push
push
in
loopne
pushf
ficompl
inc
stos
xor
lret
sahf
mov
jle
inc
dec
cmp
mov
inc
fwait
mov
inc
enter
cmpl
add
fisubl
inc
and
stos
mov
dec
cmpsb
push
in
dec
test
mov
call
inc
jmp
in
addb
vzeroall
mov
leave
fdivrs
outsl
ret
lea
jle
ljmp
stos
mov
insl
insl
out
in
mov
cltd
mov
push
fwait
test
fists
imul
scas
push
repz
jne
clc
sub
inc
adc
imul
inc
cltd
dec
and
dec
xchg
inc
loope
add
jae
repnz
enter
or
repz
cmpsl
and
sub
inc
dec
loopne
push
invd
pop
fisubl
lods
fwait
stc
mov
data16
das
xchg
sbb
cltd
pop
insb
lods
jge
dec
in
loope
xchg
fadds
js
fld
repnz
test
push
imul
mov
aad
jo
les
loop
lods
fists
movsb
dec
in
scas
pushf
dec
test
int
iret
jecxz
dec
aad
push
movsl
pop
out
loop
pop
int
pop
shlb
add
add
popa
sbb
add
sub
jmp
push
xchg
inc
movsl
pop
sarl
aas
scas
cwtl
xchg
push
pop
add
jl
test
fidivl
fldt
xor
jno,pn
mov
movnti
jg
mov
push
mov
fisttpl
sub
sahf
xor
push
sbb
mov
leave
pop
add
jecxz
sahf
in
cmc
loop
push
fimuls
cmpsl
out
es
mov
int3
pop
sbb
xchg
aas
cltd
push
push
leave
test
mov
shld
leave
leave
outsb
xchg
cwtl
ja
dec
mov
xchg
push
add
fnstenv
cld
jge
cs
push
out
jmp
sti
mov
lods
dec
sub
mov
mov
cmp
push
ret
adc
out
xchg
push
int3
imul
pusha
ss
dec
mov
stos
inc
daa
push
cmp
jbe
pop
repz
mov
fmulp
adc
out
jl
loope
leave
lahf
or
dec
dec
cmc
arpl
jecxz
mov
mov
dec
sti
jp
adc
pop
inc
arpl
add
dec
es
mov
in
bound
or
es
sti
scas
xor
fcompl
in
or
mov
decl
dec
mov
push
or
fstl
loopne
mov
std
add
movl
ds
and
test
sbb
mov
mov
mov
out
and
xchg
imul
sbb
stos
mov
sub
mov
mov
pop
jbe
sbbl
mov
lods
scas
stos
dec
pushf
iret
or
ret
mov
inc
je
push
and
test
sysenter
or
fidivrs
cmp
jns
adcl
mov
fstp
das
ds
xchg
into
push
mov
cmp
lret
dec
repnz
push
lret
dec
inc
cmp
imulb
mov
cmp
jl
divb
xchg
mov
cwtl
and
xchg
cld
shll
dec
orps
addl
mov
jbe
jbe
adc
and
rolb
jae
cmpsb
shll
repz
cltd
pop
dec
or
iret
fldt
adc
out
imul
out
arpl
mov
sbb
xchg
xor
cli
cmp
lahf
dec
addl
cmpsb
pushl
stc
sbb
icebp
and
or
iret
pop
dec
cmp
test
xor
out
inc
mov
mov
jecxz
aad
xor
jg
jb
cmp
stos
inc
in
lahf
test
jae
leave
mov
std
and
jo
mov
mov
scas
jb
or
fcompl
adc
fidivs
xor
ficompl
xor
js
movsb
repnz
fs
pop
outsl
or
mov
push
add
adc
ficomps
fistl
ror
sbb
das
popa
push
addr16
pop
push
cmp
icebp
adc
test
and
adc
inc
jbe
cs
sbb
insl
cli
inc
repz
dec
dec
scas
in
pop
mov
addr16
clc
cmp
mov
sbb
bound
scas
or
xchg
js
in
push
jne
mov
push
rorb
mov
cmp
cld
xlat
fwait
sar
and
jae
dec
jbe
ret
in
cmp
test
sbb
mov
out
ja
jne
pop
push
inc
in
mov
fwait
jb
mov
cmp
jp
dec
inc
jl
shll
aam
jae
popa
dec
jge
mov
lret
push
adc
mov
cmp
mov
cmp
lret
movsl
loop
mov
cmpsb
gs
fnstcw
mov
push
ja
xor
repz
stos
adc
jno
sbb
insb
lock
andb
scas
dec
inc
leave
adc
push
aam
dec
call
xchg
jp
push
lret
test
xchg
xchg
add
xor
repnz
jl
rol
mov
mov
jne
or
or
ljmp
jno
into
js
das
pop
push
pusha
dec
sub
mov
scas
cmp
insb
mov
cs
std
mov
pop
mov
loopne
stos
push
pop
and
xor
dec
xchg
sbb
dec
repnz
jb
push
dec
xchg
outsb
pop
icebp
pop
arpl
jle
adc
add
push
mov
sbb
test
out
cwtl
jecxz
scas
es
ret
dec
push
mov
and
cwtl
fwait
out
xor
inc
sbb
and
cmp
popf
rcl
call
les
jo
fdivl
adc
inc
xor
js
js
mov
outsb
add
add
pop
cld
jmp
inc
or
mov
fisttps
push
dec
stos
pop
push
pop
sti
add
mov
mov
repnz
lea
nop
mov
lock
dec
mov
sub
and
cmp
ficoms
cmp
mov
mov
add
leave
jl
lods
mov
jbe
jbe
outsb
test
pushf
dec
dec
jmp
fldl
or
pop
pop
mov
mov
pop
mov
mov
xchg
mov
in
push
out
int3
imul
or
xor
repnz
mov
shr
jecxz
jne
cmp
sbbl
test
mov
cmp
jle
push
mov
pop
stos
and
push
push
test
lods
movsl
hlt
fstps
mov
sbb
fsts
cmp
dec
inc
push
dec
sbb
ljmp
mov
push
pop
jl
leave
or
jl
jbe
inc
mov
fsubrs
mov
or
xchg
in
pop
out
or
shlb
or
xchg
xchg
add
sub
stos
sbb
jecxz
inc
push
out
aaa
jmp
adc
or
outsl
push
jg
repz
scas
mov
fstl
stc
cmp
daa
and
push
jmp
les
sub
test
inc
insb
inc
lcall
xor
lret
cmc
lods
inc
cwtl
out
into
add
pop
dec
imul
cmp
push
and
subl
xor
mov
andb
fxam
mov
xor
mov
jmp
insl
mov
push
xor
les
rol
sbbl
dec
inc
clc
or
mov
outsl
andl
cmc
jno
nop
sub
iret
cmpsb
inc
imul
imul
sarb
mov
scas
mov
cld
insl
mov
lret
out
in
repnz
test
jae
mov
pushf
mov
or
lods
rcll
xchg
mov
push
mov
adc
insb
push
pop
mov
push
sub
xchg
es
lods
and
xchg
mov
sub
push
add
pop
or
popa
push
xchg
mov
or
jmp
sub
mov
int3
fcoms
xor
insb
adc
shr
orb
pop
adc
add
data16
lods
movsl
cmp
dec
cltd
iret
jmp
rorb
dec
insl
dec
and
mov
mov
mov
add
dec
sti
adc
mov
mov
sub
sub
rcrl
sbb
mov
data16
lret
pop
int3
daa
mov
pushf
dec
adc
jmp
dec
jp
sbb
in
add
cli
mov
dec
addr16
lret
bound
pop
sarl
or
sub
cmp
scas
adc
cmp
lods
add
mov
xor
jo
or
popf
jle
add
divb
mov
inc
mull
push
push
cmc
mov
cltd
jb
mov
jp
sub
in
jns
icebp
es
lock
imul
xchg
or
cmp
pop
jge
inc
add
stos
imul
gs
xor
test
fldenv
insl
jp
xor
out
cmp
repnz
shlb
sbb
cmp
xchg
mov
mov
or
pusha
lods
or
pop
sbb
adc
and
dec
adc
insl
xchg
push
add
inc
jp,pn
subl
lods
inc
inc
leave
shlb
sti
xchg
cmpsb
push
iret
inc
pcmpgtw
mov
sub
outsb
ljmp
movsl
dec
loopne
shll
arpl
push
cmpsl
add
adc
mov
iret
pop
shrl
or
mov
sahf
or
cld
pushf
cmp
popa
frstor
fisttps
xlat
ja
xchg
push
pop
ss
ret
call
out
sub
scas
rorl
xor
mov
adc
sarl
push
inc
movsb
sbb
jmp
fs
pop
mov
mov
inc
cmpsb
xchg
out
dec
int3
pop
mov
fcmovne
jbe
or
jl
pusha
aam
loopne
push
push
lods
mov
mov
sub
add
sbb
test
push
add
ja
jmp
adc
data16
xchg
jg
aaa
stos
lahf
or
out
adc
push
pusha
arpl
in
rclb
sbb
ret
iret
sbb
xchg
inc
cmp
push
add
jmp
and
inc
adcb
loop
leave
in
not
or
pop
imul
pop
clc
push
fs
sbb
mov
aam
adc
cmp
adc
test
fsubr
mov
jnp
mov
aam
outsb
jmp
and
xchg
xor
out
loopne
loop
mov
sbb
pop
jno
mov
cmp
out
xchg
adc
lods
fcompl
add
mov
mov
xchg
xor
xchg
aas
loope
aaa
push
cmpsl
dec
adc
push
out
pop
js
mov
shll
add
ja
popf
lret
and
dec
in
ljmp
stos
sub
imul
fs
les
and
and
xlat
add
fucomp
lods
inc
lret
add
test
jecxz
jne
mov
sub
adc
cltd
xchg
pusha
mov
int
and
mov
pop
jbe
inc
jne
add
jp
sbb
and
mov
ret
stos
sbb
xor
xlat
les
mov
or
popf
sbb
xchg
jge
xchg
push
aad
lock
mov
inc
add
test
xor
mov
ds
sub
pop
ja
in
jo
pop
data16
in
ss
je
dec
pop
adc
iret
sbb
add
faddl
and
int3
jns
cwtl
pmuludq
jecxz
int3
imulb
jg
flds
xor
xchg
mov
pop
out
cmp
push
xchg
shl
lret
adc
mov
and
ja
jnp
jg
in
rorb
and
adc
sub
xchg
jecxz
and
xchg
inc
xchg
js
mov
arpl
mov
das
mov
lret
dec
daa
cmpsl
jns
daa
inc
enter
popl
das
call
add
xlat
fstpl
sti
into
mov
and
pop
jno
stos
pop
dec
xor
push
mov
fstl
cmp
mov
lds
loopne
adc
rolb
and
adc
popa
xor
lret
pop
lahf
movsb
or
dec
mov
adc
push
aad
cmp
iret
mov
push
das
mov
sbb
xchg
std
ss
arpl
test
movsl
ds
mov
aas
shrb
outsb
rolb
dec
xor
iret
pop
pop
js
adc
cltd
test
cmp
sbb
xor
outsl
out
jb
loope
test
sub
jno
sbb
test
aas
fiadds
adcb
fsubp
dec
mov
adc
pop
scas
roll
cmp
jns
mov
push
inc
inc
popa
lock
xchg
jns
push
adc
xchg
daa
push
inc
xor
push
lds
xor
arpl
jb
adc
or
mov
shll
pop
sub
rorl
pop
add
inc
lret
xchg
pop
cwtl
in
jecxz
cmp
push
sbb
cli
adc
inc
ja
add
or
sbb
das
jo
mov
xlat
pop
cmp
jb
push
mov
mov
xor
inc
push
push
js
dec
sbb
jns
pop
add
add
cmp
arpl
stos
push
jb
test
dec
bound
push
jg
cmc
call
inc
jnp
pop
ds
stos
es
mov
outsb
pushf
outsl
in
cld
pop
dec
divb
daa
hlt
mov
mov
jb
data16
xor
mov
mov
and
or
stos
xchg
ja
je
mov
lret
fwait
bound
or
std
mov
jecxz
lods
mov
mov
std
mov
loop
mov
ljmp
in
stc
mov
leave
pop
ds
bnd
aam
into
or
mov
out
and
add
aaa
sub
xchg
pusha
orb
inc
jnp
fwait
subb
cltd
xor
xrelease
aas
enter
call
xor
sub
hlt
push
cmp
sub
dec
dec
xchg
fistpll
dec
incb
adc
sub
sub
daa
arpl
or
and
sbb
outsl
cmc
jecxz
inc
scas
mov
test
incb
jbe
adc
inc
cmp
aad
leave
jno
mov
testb
leave
or
