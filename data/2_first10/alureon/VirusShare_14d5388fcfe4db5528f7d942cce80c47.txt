test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
inc
dec
jne
pop
mov
ret
xor
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
add
mov
mov
not
mov
add
not
shl
imul
add
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
push
lea
mov
add
mov
mov
add
inc
add
cmp
jb
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
mov
push
add
push
lea
lea
pop
call
push
push
lea
push
call
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
add
and
add
mov
mov
movl
mov
mov
lea
call
mov
mov
add
xor
add
decl
jne
addl
pop
pop
leave
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
mov
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
mov
pop
push
rdtsc
mov
mov
test
jne
movl
jmp
mov
not
xor
ror
not
mov
movzbl
lea
cmpb
jne
push
push
pushl
movb
call
mov
push
call
push
push
pushl
mov
call
mov
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
inc
pop
leave
ret
push
push
push
mov
push
mov
call
push
mov
call
push
mov
call
push
call
add
xor
mov
push
mov
call
mov
push
mov
call
push
call
mov
call
push
mov
call
push
call
pop
pop
pop
ret
push
lea
sub
push
push
push
call
mov
xor
mov
mov
mov
cmp
je
mov
jmp
push
mov
call
lea
push
mov
push
mov
call
lea
push
mov
mov
call
lea
push
lea
push
mov
mov
call
pop
pop
push
push
mov
call
lea
push
call
lea
push
lea
push
call
pop
pop
cmp
je
cmpl
jne
mov
mov
call
cmp
je
call
cmp
jne
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
call
push
call
push
push
push
push
call
lea
mov
call
pushl
mov
pushl
mov
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
add
leave
ret
push
mov
sub
push
push
push
mov
push
xor
lea
push
push
mov
call
lea
push
push
mov
mov
call
push
lea
push
push
mov
call
lea
push
push
call
add
xor
movzbl
push
mov
call
inc
pop
cmp
jb
push
push
lea
push
lea
push
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
mov
call
push
lea
push
lea
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
lea
push
lea
push
mov
movb
movb
movb
mov
call
add
lea
push
mov
call
push
push
lea
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
add
lea
push
call
mov
push
mov
call
push
push
push
push
push
push
push
mov
push
mov
call
mov
cmp
jne
push
call
push
pushl
push
pushl
call
push
push
push
push
push
push
push
push
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
push
push
push
push
call
push
push
push
push
call
push
mov
call
pop
pop
xor
pop
leave
ret
push
test
add
add
add
push
sbb
add
pop
jge
jl
loop
xor
sub
cmc
cmpsb
scas
cli
movsb
dec
rolb
int
ret
sti
inc
aas
cmpsb
call
lock
stos
sbbb
fdivrs
adc
adc
stc
rcr
pop
jbe
ss
sahf
jmp
inc
sub
fidivl
pop
sub
jge
ret
cmpsl
adc
pop
scas
cs
cmp
leave
adc
adc
push
and
mov
xchg
sarl
cli
adc
dec
int
mov
dec
adc
xchg
test
hlt
testl
push
lcall
push
stc
and
push
sbb
es
adc
xor
xchg
aad
add
into
jnp
repz
in
loopne
sub
pop
mov
add
cld
push
sub
adc
shll
inc
js
lcall
inc
mov
lret
test
imul
ret
lock
cltd
insl
push
jne
lahf
cmp
mov
test
scas
sbb
mov
mov
and
shl
mov
push
xchg
les
punpcklbw
pop
je
mov
pop
in
and
or
add
insb
ss
push
loopne
rcll
mov
aad
pop
iret
or
jmp
bound
insb
lea
sbb
mov
sub
insb
cs
je
je
push
jecxz
ljmp
or
pop
repz
int3
add
fcomip
dec
and
stos
mov
sbb
loope
sub
outsl
pop
lea
sti
xchg
lcall
cmp
clc
mov
xor
ss
aad
insl
popa
rolb
mov
xorb
push
push
fwait
sbb
in
ret
mov
xor
and
xor
test
aaa
lea
cs
push
inc
fs
fldcw
jns
inc
cmp
sub
or
adc
and
mov
push
rorb
insl
mov
fmull
and
xor
mov
leave
icebp
mov
xchg
xchg
test
jl
sbb
mov
or
mov
push
xchg
pop
xchg
fsubrl
movsb
call
pushf
mov
add
mov
loope
fs
sbb
jne
insl
cmp
test
mov
sbb
mov
cld
outsl
mov
js
adcl
lcall
out
leave
mov
dec
ja
shl
jnp
addr16
insl
loope
mov
jnp
cmp
imull
dec
fistpll
insl
mov
cmpb
mov
mov
lods
mov
push
ss
sbb
add
aam
rcrl
or
xor
stc
mov
subl
mov
iret
aas
inc
mov
jp
pop
test
fisttpll
xchg
jmp
fmuls
clc
popf
jae
fwait
pushf
bound
jb
fldt
push
pushf
std
jb
aam
pushf
adc
dec
es
pop
mov
sub
push
jge
pop
test
popa
insb
inc
inc
or
mov
in
xor
sbb
fsubs
dec
in
repnz
fbld
jmp
aas
lds
mov
fdivrp
test
pop
mov
into
pop
cmp
fisubl
cwtl
jne
cmc
inc
and
sarb
add
push
add
gs
or
sbb
jge
in
cmp
push
xchg
int3
mov
sbb
cmpsb
push
dec
leave
lds
pop
xchg
loop
imul
mov
out
xor
cmp
sarl
push
sbb
mov
jge
pop
push
xchg
xchg
roll
xlat
or
xchg
pop
jle
scas
and
cmp
adc
dec
rorb
cmp
jb
outsb
cwtl
mov
push
xor
ret
inc
dec
cmc
sub
movsb
jo
adc
cmp
push
mov
mov
cwtl
frstor
mov
push
mov
xchg
xor
xchg
adc
and
mov
jmp
in
mov
cmp
or
mov
jecxz
dec
cmc
shlb
cmp
cmp
fwait
push
je
push
mov
pushl
cmpsl
ficoms
pushf
push
dec
movsl
fmuls
push
xlat
andb
rclb
jne
hlt
adc
cld
xchg
lret
push
outsb
cmp
outsl
xchg
cmpsl
iret
stos
sahf
ret
push
or
bndstx
repnz
mov
mov
push
test
test
xchg
mov
mov
mov
sub
loopne
pushf
mov
push
add
rcrl
outsb
divl
test
cmp
inc
jbe
je
pop
or
jmp
cmp
sahf
lret
xor
xchg
adc
out
enter
and
jl
call
jl
pop
aaa
repz
pop
cmp
iret
fwait
jmp
std
cmpsb
outsl
scas
push
xor
ss
push
test
data16
mov
in
mov
imul
stc
xchg
mov
sbbl
sbb
les
or
or
inc
add
push
out
push
ret
and
aam
pop
jo
jno
fsubr
ljmp
dec
fistpll
fildl
arpl
xchg
sub
icebp
cs
sbb
fcmovne
pop
imul
rcrl
pop
cltd
dec
mov
mov
jg
add
repz
hlt
scas
add
inc
fsub
dec
lcall
loopne
mov
dec
andb
dec
sahf
jle
addr16
xchg
sub
jle
mov
addr16
lds
out
mov
addr16
cmp
imul
fimull
cmp
mov
test
xor
push
xchg
sub
adc
lret
cs
push
fnstcw
lahf
scas
pop
jno
ret
dec
push
cltd
lret
stos
mov
add
test
addl
xor
mov
lcall
cwtl
neg
pop
lcall
aaa
jge
clc
adc
xchg
jns
mov
call
rcrl
push
insb
dec
add
jmp
dec
fisubs
int
pop
fcmovbe
loop
sub
movl
or
mov
arpl
sbb
int3
xchg
sbb
call
mov
pop
daa
inc
jmp
push
pop
xlat
cmp
pop
push
and
cmp
xchg
shl
js
fs
lods
sbb
and
pushf
sub
rcrb
pop
cwtl
mov
rcr
xchg
xchg
add
inc
rep
lods
add
es
sub
sti
rolb
ja
sub
sbb
push
or
pop
or
stos
pushf
loope
xchg
mov
push
sbb
fidivl
stos
or
add
adc
mov
jg
stc
test
xor
les
lods
shrb
jae
pop
mov
fcomps
adc
pop
mov
xchg
roll
xchg
icebp
pop
mov
lds
xchg
shll
xchg
lds
jb
jmp
fs
fistl
movsb
xor
movsb
push
jbe
inc
movsb
cmp
xlat
inc
repnz
mov
bound
push
cmp
insb
cmp
xchg
in
test
movsl
xor
repz
mov
sub
add
stos
sbb
jns
mov
bound
in
popa
xchg
dec
out
pop
fcmovb
mov
sub
push
pusha
lcall
movsl
push
jmp
in
addb
lcall
xor
jg
mov
mov
insl
xchg
lret
popl
imul
push
ljmp
pop
jp
in
push
popa
popl
std
sbb
mov
pop
dec
stos
mov
in
pop
aas
cmp
clc
loop
adc
jl
data16
xor
sti
fidivl
push
aaa
and
orb
mov
inc
pop
ret
sub
dec
inc
push
sbb
scas
imul
pusha
mov
xchg
jns
sub
sbb
rclb
adc
mov
push
pop
stos
jae
and
daa
dec
das
mov
test
lcall
ret
shlb
pop
ret
mov
out
sti
fimuls
mov
iret
pop
lret
sub
fbld
lahf
outsl
cli
int3
push
jns
sbbb
add
stos
test
js
repnz
lret
jecxz
pushf
jne
push
out
les
loop
data16
push
mov
cmpsl
fists
jge
out
outsl
push
orl
repz
mov
movsl
add
faddl
jmp
and
pop
cmpb
mov
xchg
mov
adc
jae
mov
adc
in
add
xchg
xchg
fildl
aas
clc
xchg
pop
sub
mov
js
mov
push
sub
jmp
outsb
mov
dec
cld
lret
xchg
or
xchg
sub
mov
adc
test
add
fcompl
popa
mov
lods
mov
push
add
dec
cmpsb
push
xor
jmp
xchg
cmpsl
push
push
dec
rol
scas
pop
es
jl
push
out
cmc
xor
in
sbb
push
and
sbbb
cltd
sub
mov
jnp
popa
mov
jecxz
and
push
cmp
or
pop
fistps
cli
mov
dec
ljmp
add
cmpsl
inc
jp
sub
notl
sahf
imul
jae
jle
xchg
xchg
push
in
fisubs
jg
movsb
out
lds
jo
inc
xor
out
adc
rorb
push
outsl
movsb
mov
jp
or
mov
inc
or
out
repnz
sbb
decl
fcom
cmpsl
test
mov
rclb
shll
add
jnp
xchg
arpl
lock
inc
sti
and
adc
scas
out
insb
cmp
xorl
xor
data16
push
mov
xor
mov
lods
cli
sbb
xchg
lcall
int
pusha
mov
dec
subl
lods
dec
daa
mov
fstps
lret
or
xchg
aad
mov
out
inc
fbld
mov
rorl
push
xlat
xchg
call
in
xlat
sub
mov
ja
ja
arpl
mov
call
sub
mov
add
outsb
outsb
adc
cltd
dec
stc
mov
in
lret
add
cmpsb
adc
push
sti
lods
add
adc
add
mov
lods
shll
pop
dec
lret
rclb
fsubl
in
stos
xor
sub
test
push
xchg
test
xor
cmp
and
mov
or
fiadds
cmpb
mov
sbb
in
mov
cmpsb
and
inc
xor
mov
sbb
lock
fnstsw
xor
loopne
popf
push
jg
push
pop
xchg
in
push
popf
cmpsb
mov
lea
jmp
jecxz
jo
inc
rcrl
adc
xchg
aaa
sub
ss
mov
daa
cld
mov
adc
aam
data16
pop
mov
xchg
and
out
loope
divb
movl
inc
or
cli
mov
pop
std
cmpsl
pusha
add
xchg
lcall
cs
jae
jg
xchg
lock
std
or
pusha
notl
pop
mov
outsl
pop
mov
movsb
or
aad
dec
mov
incb
push
test
fidivl
jg
test
dec
jns
movsl
cli
and
lock
fnsave
xor
int
notl
adc
enter
xchg
jecxz
mov
lcall
ljmp
cmpsb
push
test
cwtl
fmull
adc
fimull
and
sub
in
hlt
add
jecxz
inc
xchg
dec
xchg
push
incl
out
dec
fiadds
push
cltd
cmp
push
sbb
sbb
xor
dec
andl
cwtl
cmp
and
pop
xchg
call
jg
ret
lds
clc
aaa
mov
rol
cmp
jl
loopne
xchg
mov
loop
cwtl
adc
push
ret
scas
imul
mov
and
mov
mov
xor
mov
pusha
into
scas
push
sahf
ret
scas
insb
ss
ret
aam
jno
inc
and
mov
pushf
xlat
mov
inc
ljmp
sbb
xchg
addb
pop
enter
and
cld
insl
inc
xor
mov
dec
jecxz
xchg
add
push
inc
mov
movsl
mov
imul
add
cmp
ljmp
lea
inc
dec
sbb
and
inc
testl
push
movsb
negb
jo
orb
gs
aam
push
cs
xlat
scas
mov
add
mov
lock
dec
sub
xchg
mov
int
adc
cs
adc
mov
mov
es
lret
cmp
imulb
test
in
rolb
iret
mulb
pop
mov
movsb
pushf
pop
sub
inc
or
ret
push
push
gs
or
cmpb
pop
dec
fmull
scas
jno
ja
mov
xlat
cmp
scas
insl
mov
movsl
out
outsl
inc
bound
xchg
push
cmp
sbb
inc
push
or
mov
loopne
sbb
aam
aas
mov
cmpl
push
push
scas
imul
pushf
loop
mov
in
push
cltd
or
jns
inc
cmp
push
push
dec
in
pop
mov
out
xchg
mov
add
iret
je
imul
daa
jge
sbb
mov
stc
mov
gs
adc
inc
sbb
mov
js
jl
adc
std
and
adc
fnstenv
mov
sbb
push
xlat
adc
push
jmp
sbb
fistpl
pop
adc
and
mov
adc
add
rcl
std
dec
push
mov
clc
movsb
lods
filds
imul
insb
gs
adc
dec
pop
pop
jge
or
mov
adc
sahf
and
jbe
jl
pop
inc
xchg
nop
gs
test
into
pop
jl
stc
and
fs
xor
fcmovb
cmpl
mov
and
adc
insl
into
loopne
fwait
clc
inc
hlt
mov
mov
dec
fsubr
add
push
test
jne
cmp
jns
cld
and
adc
and
adc
out
push
pop
xchg
leave
lock
imul
int
push
fstpt
hlt
add
jbe
outsl
mov
out
pop
in
movsl
cmpsl
out
repnz
shll
push
icebp
mov
loope,pn
pop
repnz
xlat
sub
sbb
dec
rclb
mov
push
jecxz
mov
or
test
std
roll
inc
or
adc
mov
iret
icebp
call
jo
mov
outsb
cmp
push
pop
cmpsb
test
es
daa
call
jns
insb
jl
repz
xorl
push
stos
out
fmulp
outsb
xor
lods
mov
mov
jp
sub
sahf
cmp
xlat
loope
sarb
popf
xor
or
cmpsl
out
imul
cmp
sub
ja
andl
sub
ja
add
jns
mov
and
xor
add
dec
outsl
icebp
rep
pop
imul
in
xor
add
std
call
sbb
add
jo
xchg
inc
push
push
sub
xchg
ljmp
mov
aaa
cmc
fldt
nop
lock
cmp
loop
arpl
push
aaa
cld
push
addr16
pusha
mov
push
test
ret
sub
std
sbbl
popa
insl
dec
mov
jo
sub
nop
mov
ficoml
loopne
mov
cmpb
jno
stc
iret
jp
mov
repnz
icebp
mov
mov
xchg
xor
test
mov
lods
mov
lds
push
mov
mov
mov
ss
jl
adc
add
cmp
cmpsl
mov
push
push
mov
push
jbe
jbe
rclb
je
iret
adc
and
jne
pop
insl
or
add
int3
xchg
dec
scas
mov
ret
or
lods
add
mov
and
or
aas
fcoms
in
mov
andl
aas
jne
adc
and
bound
lock
imul
jp
mov
push
test
ja
or
je
addr16
pop
enter
xchg
out
pop
fcmovb
and
leave
xchg
fisubl
mov
mov
pop
dec
lea
cmpsl
pusha
ds
cwtl
xchg
pop
sbb
movsl
mov
sub
repnz
pushf
iret
xchg
mov
cmp
dec
cmp
in
inc
icebp
jno
or
dec
xchg
mov
jg
ret
jecxz
stos
repnz
lea
cs
jmp
sub
sbb
and
insl
mov
rcrl
push
test
add
xchg
pop
outsl
sub
hlt
ss
lcall
fisttpl
jbe
xchg
dec
rep
jecxz
mov
jg
push
adc
cmp
jns
or
clc
pop
movsb
repz
pusha
inc
add
inc
pop
insb
cmp
jae
pushf
push
or
shlb
xchg
inc
iret
jnp
inc
ret
pop
pop
imulb
xor
movsl
sub
stos
jae
dec
sbb
rcrb
nop
daa
popf
inc
cmp
xchg
mov
movsb
sub
and
fistps
cli
repnz
inc
adc
inc
push
ret
push
es
adc
lcall
mov
xchg
sahf
push
dec
mov
and
scas
movl
shll
mov
sub
js
bound
into
push
rolb
nop
mov
jle
dec
insl
jbe
int
xchg
mov
imul
popf
dec
scas
lcall
lcall
push
push
test
outsl
fistl
mov
mov
inc
fimuls
mov
in
adc
or
mov
inc
mov
lods
push
cmp
das
jmp
sub
pop
jno
jge
adc
incb
dec
cmc
mov
push
or
dec
mov
jae
sub
lock
das
dec
dec
jmp
cld
cmp
dec
sbb
cmp
rorl
pop
adcl
jns
push
inc
ret
xchg
push
pop
fdivrl
or
inc
mov
fcompp
loopne
mov
sahf
lea
adc
push
cld
pop
bound
lret
fcoms
fsubl
ljmp
negl
push
jmp
push
add
lret
jns
jno
xor
fiadds
imull
js
les
sbb
mov
lret
jae
ret
test
repz
dec
aas
fs
sub
push
clc
les
mov
cwtl
bound
sub
sbb
std
inc
daa
or
dec
mov
mov
ljmp
icebp
shr
sbb
enter
sbb
int3
fistpll
sub
or
movsl
jae
test
mov
dec
or
or
into
in
push
mov
in
or
lret
mov
les
mov
cmpsl
or
push
push
icebp
and
and
push
mov
incb
lahf
mov
pop
ljmp
push
mov
fdivl
inc
in
sarl
cld
and
dec
add
and
jecxz
dec
jbe
jmp
leave
push
jp
mov
cmp
adc
push
bound
nop
fdivrs
ret
pusha
stc
jl
dec
loop
mov
push
fwait
jae
and
cmp
in
js
jl
fdivp
mov
or
adc
mov
xchg
adcb
inc
popf
cwtl
xchg
cmp
je
stc
pop
sub
call
cli
sbb
and
add
in
dec
and
push
pop
cmc
adc
mov
xchg
decl
sbb
imul
pop
clc
fdivrs
out
sti
mov
push
and
adc
pop
lret
fldenv
fstpl
cmp
out
pop
mov
mov
inc
xchg
adc
inc
or
dec
icebp
jmp
mov
ljmp
jne
stos
add
pop
adc
mov
adc
add
adc
push
idiv
dec
test
xchg
int
lret
sub
mov
adc
rcr
adc
pop
lret
out
cmp
icebp
mov
scas
xchg
dec
jbe
xchg
mov
enter
pop
lods
xor
lds
je
push
ljmp
daa
jnp
pop
mov
icebp
fisttpl
push
int3
xchg
xchg
sub
or
jo
add
loope
sbb
push
test
jae
or
aas
int3
std
jp
ds
dec
es
addr16
je
inc
imul
mov
mov
pop
rorl
pop
int
lret
call
fidivrl
mov
jns
or
add
les
xor
mov
sub
sub
dec
push
sbb
js
and
pop
cld
jl
ja
int3
mov
popf
mov
insl
sub
push
jp
scas
mov
pop
in
xor
cltd
ret
cmp
call
jns
jp
mov
jb
ljmp
arpl
and
adc
mov
jg
inc
sub
repz
cli
ljmp
jg
mov
data16
cmp
inc
out
inc
movsl
pusha
cltd
repz
fdivrl
push
pop
or
les
inc
es
or
and
aaa
fwait
sub
or
test
mov
or
lock
push
and
in
repz
adc
mov
stos
andb
je
sub
sub
subl
test
movhps
loop
xchg
repz
add
pushf
js
jno
rclb
outsl
popf
and
sbb
sbb
inc
out
das
cmp
jecxz
roll
add
mov
rcrl
loop
loop
das
cmpb
cltd
xlat
push
sub
in
push
dec
jmp
pusha
pop
sbb
adc
clc
adc
shlb
ficompl
dec
and
xor
mov
dec
daa
ds
mov
imulb
dec
sub
xchg
push
jl
sub
pop
call
sub
lcall
mov
shll
or
push
mov
fcomp
loope
adc
jae
mov
test
popf
sbbl
xor
push
loopne
push
add
cwtl
mov
mov
inc
and
lea
std
push
mov
jnp
sbbl
insl
xor
xchg
cmp
or
mov
int3
in
pushl
fsubrl
and
jnp
cmp
or
out
jp
fmul
mov
mov
pop
pop
lcall
in
les
lret
xchg
ficompl
or
sub
repnz
imul
push
test
mov
pusha
int3
call
out
sub
andb
lods
gs
jg
insb
aam
push
lret
sti
and
addr16
and
movsl
sti
inc
mov
or
test
push
insb
jae
pop
pop
xor
mov
fwait
sub
pop
movsl
rcrb
jo
sbb
pop
test
stc
xor
fildll
insb
or
cmp
