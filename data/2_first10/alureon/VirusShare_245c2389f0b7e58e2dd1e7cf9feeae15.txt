push
mov
sub
push
call
mov
mov
mov
push
push
addl
call
pushl
pop
call
mov
add
inc
cmp
jne
add
add
jmp
mov
sub
movl
add
ret
mov
lea
mov
add
mov
cmp
jae
add
nop
inc
add
jmp
mov
add
mov
add
jmp
cmpsb
and
jns
xchg
push
das
sbb
out
dec
inc
out
push
lret
lret
lret
sbb
or
and
test
lret
out
adc
aas
out
cltd
and
jge
lret
aas
das
or
cwtl
sub
test
and
gs
sub
inc
xlat
out
int
out
out
sub
out
push
mov
repnz
pop
repnz
or
mov
test
hlt
add
xor
lret
mov
mov
mov
test
cmp
hlt
push
das
stc
leave
and
enter
andb
jge
lret
aas
das
cmc
mull
inc
das
pop
test
push
repnz
icebp
or
fisubrs
scas
not
je
out
in
push
xchg
out
dec
inc
out
sub
insb
push
test
pop
int
jmp
ret
addr16
mov
jae
inc
out
and
mov
out
push
out
insb
and
jge
lret
aas
das
fcomip
mov
inc
sbb
bnd
inc
jle
into
inc
jl
out
mov
xchg
jmp
out
xlat
mov
sahf
jb
add
out
aam
insl
push
xchg
int3
aas
out
mov
aas
out
ror
aas
out
iret
lret
into
lret
int
jno
add
jbe
add
and
std
jae
incl
js
clc
sti
jno
sti
pushl
incb
jo
idiv
jae
cli
add
ret
inc
xchg
and
push
scas
push
and
sub
push
repnz
pop
pop
or
push
sub
inc
xchg
and
and
pop
clc
lods
pop
sbb
mov
jmp
aas
mov
pop
adc
inc
sbb
nop
popa
push
aas
movsl
push
and
lret
push
ret
or
stos
lret
adc
add
inc
sbb
lret
xchg
mov
jg
xor
add
lret
push
lcall
mov
fdivrl
sub
push
add
lret
dec
lcall
fwait
lret
stos
fdivrl
es
addr16
lret
dec
lcall
xchg
lret
mov
jg
and
add
lret
inc
lcall
ret
out
sbb
add
lret
cmp
mov
out
mov
enter
jg
dec
and
fcmovnu
and
imul
dec
jle
fstp
les
lret
testl
inc
out
hlt
ds
insb
mov
outsl
scas
outsb
jns
mov
rolb
inc
adcl
and
push
jnp
repz
sbbl
ret
mov
dec
cmc
lea
or
fs
push
addb
int3
sub
stc
cmp
repnz
xchg
stos
outsb
lret
pushf
pushf
aaa
rol
lret
das
and
xor
div
inc
pop
and
xchg
lret
pop
scas
inc
xor
lret
aaa
jnp
int
testl
cltd
dec
mov
push
xchg
out
imul
lret
push
fs
out
lcall
mov
ljmp
push
sti
xchg
fiaddl
lret
inc
dec
pop
test
mov
stos
inc
out
fimuls
nop
lret
loope
push
das
dec
lret
inc
inc
das
loope
dec
lret
mov
lret
push
dec
or
mov
or
or
xchg
out
cmc
inc
sti
xchg
fisubrl
pop
cmp
aas
inc
fs
out
aas
push
ret
or
lahf
mov
aas
adc
pop
aas
add
lret
push
ret
or
ror
das
ss
sub
lret
aas
repnz
push
repnz
xor
inc
jo
sub
mov
mov
sbb
out
cs
dec
out
ds
sub
nop
aas
sub
add
cmpb
jg
mov
lret
and
adc
gs
xchg
ret
sbb
das
and
sar
xor
inc
js
push
xchg
out
dec
push
hlt
lahf
mov
mov
jb
fisubrs
dec
sbb
aas
mov
pop
cmp
into
aas
arpl
mov
cwtl
mov
jb
int3
ret
aas
ja
popf
push
dec
divl
sbb
lods
inc
pop
jne
cmp
ds
pop
push
xor
dec
jl
lret
or
push
leave
lret
aas
repnz
fdecstp
scas
or
mov
cmp
mov
or
cmp
out
das
add
push
mov
leave
aas
out
mov
pop
dec
outsb
lret
inc
and
mov
mov
arpl
cmpsl
out
or
aas
push
negl
sbbb
jg
jg
cmp
xchg
push
das
repnz
xchg
out
jl
add
lret
or
sub
sub
lock
sbb
sub
leave
aas
jb
ror
inc
loop
cli
out
jmp
sub
lock
repnz
in
inc
out
xlat
outsb
test
and
aas
push
loop
inc
out
loopne
or
and
adcb
jg
imul
mov
add
adc
repnz
or
lods
out
fmul
mov
or
aas
cli
call
das
lret
inc
in
repnz
adc
xlat
and
aas
out
loopne
mov
inc
or
fisubl
leave
push
xor
leave
aas
jne
fdivrs
out
aaa
mov
aas
out
lds
inc
insb
leave
mov
inc
movb
dec
cmp
int3
xorb
push
add
out
xor
aas
inc
jns
movmskps
jge
or
mov
fisttpl
fcomps
mov
addr16
out
pop
push
jbe
