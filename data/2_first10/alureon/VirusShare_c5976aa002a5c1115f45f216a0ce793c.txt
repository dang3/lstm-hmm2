push
pop
test
mov
mov
imul
pop
gs
insb
push
xchg
push
pop
pop
jmp
and
mov
adcb
loopne
push
std
orps
jo
sbb
in
xchg
movsl
pop
cmp
scas
jo
aaa
pop
cld
xchg
or
push
mov
ds
int3
xorb
pop
inc
jmp
gs
stos
sahf
and
shl
sub
out
push
popf
int3
add
les
mov
add
loop
jg
jmp
and
int
sub
sarl
into
bound
pop
mov
jbe
add
and
lret
insl
push
xchg
and
inc
incb
add
cli
push
sub
inc
xor
repnz
sahf
call
div
cli
test
inc
sbb
jno
push
push
inc
adc
sbb
pushf
jl
out
mov
cmp
sub
js
pop
cmp
repz
push
xlat
mov
out
xchg
cli
xchg
ret
aad
test
or
push
xor
test
xlat
jge
pop
dec
cwtl
and
push
sbb
dec
dec
clc
out
xlat
mov
jo
int
imul
mov
mov
fimull
push
xlat
test
rcl
int
hlt
cmc
adc
push
push
cltd
shll
sbb
add
or
outsl
dec
pop
mov
enter
ret
jmp
stos
hlt
jnp
lea
mov
push
cmp
fcoms
jne
gs
sti
ror
imul
push
repz
imul
fisttps
lds
pop
out
shlb
cmp
and
lcall
movsb
and
xchg
outsl
jne
cld
leave
dec
jp
in
sbb
push
fisubl
fldenv
inc
popa
dec
mov
cmp
push
mov
push
sub
jle
mov
sbb
hlt
cmp
xchg
out
add
xchg
sbb
dec
pop
into
jnp
push
push
inc
jo
test
int3
inc
mov
pusha
cmp
fldt
push
sbb
aam
out
imul
inc
js
cmp
les
movl
stc
adc
and
add
lret
mov
sbb
push
dec
push
fbld
loopne
inc
and
shrb
cmp
imul
fsubrp
or
fwait
mov
xor
jo
xchg
out
loopne
sar
and
popa
dec
out
fbstp
xor
enter
clc
xorb
jbe
adc
lret
jbe
inc
pop
ret
xrelease
jmp
mov
fbld
pop
sbb
mov
cs
xor
pop
fistps
in
scas
adc
push
xchg
daa
push
aam
jg
insl
in
push
jl
nop
pusha
out
inc
cmpsb
cmpsb
mov
and
loopne
jmp
fldenv
data16
push
adc
frstpm(287
dec
xchg
xchg
test
loopne
adc
mov
mov
popf
sub
fnsave
sbb
enter
mov
mov
push
iret
xorl
jg
lahf
sub
out
sub
push
mov
test
add
inc
inc
add
adcl
cmp
mov
adc
jb
pop
and
push
clc
sub
bnd
pop
push
adc
shl
fsts
jns
popf
loope
mov
push
gs
cltd
cli
mov
cmp
loope
shr
xchg
xchg
push
decl
pop
ret
dec
jno
lods
ror
xchg
fsts
sub
pop
xlat
cmc
adc
inc
shlb
fs
movsl
enter
mov
or
sub
jno
push
cmpsb
movsb
or
mov
hlt
sbb
shrb
pop
subb
dec
xchg
ljmp
cmp
inc
xor
fsubrl
mull
insl
pop
adc
dec
mov
testb
xor
lock
pop
mov
cmp
lock
cli
ficompl
lods
loope
sub
jb
xor
sub
xor
mov
std
mov
inc
mov
mov
push
popa
mov
adc
push
xchg
lcall
daa
lahf
arpl
pop
add
in
mov
clc
add
enter
test
mov
pop
sbb
xchg
inc
pop
lea
outsb
mov
fs
int
xchg
ret
push
and
jl
loope
aaa
jnp
and
cmp
call
loop
jecxz
rcll
gs
or
jle
xchg
xor
sarl
sbb
dec
pop
dec
adc
adc
jecxz
call
sbb
in
addb
dec
pop
add
jle
push
in
jge
cmp
mov
insl
and
out
cmp
dec
mov
imul
movsl
pop
sub
adc
xor
enter
dec
aad
adc
idiv
mov
inc
push
ds
mov
fbstp
mov
xlat
js
pop
pop
hlt
ljmp
xor
repz
popf
fwait
or
dec
es
pop
sbbl
and
icebp
or
jl
call
sub
dec
push
cmp
frstor
xchg
push
imul
jo
int
movsb
fistl
mov
leave
test
imul
xchg
out
imul
rcrb
xchg
sbb
psubd
xchg
fsubrs
jecxz
pop
fs
pop
in
mov
sti
cs
cmp
rcrb
push
cmp
lahf
pop
and
popf
sbb
hlt
das
push
mov
mov
inc
jg
and
jge
and
js
bound
and
mov
mov
xor
iret
xchg
jno
lods
push
mov
daa
xchg
and
pop
fnstcw
in
imul
add
jae
mov
push
popf
popa
cmpsb
notl
and
add
and
sahf
outsl
mov
pop
out
pop
push
repz
mov
enter
lahf
loopne
daa
ffree
jmp
mov
sub
add
cmp
outsl
jb
cmp
add
jmp
dec
cmp
push
or
push
xor
lcall
aad
xchg
and
test
out
cmpsb
cmp
clc
pop
rclb
aad
test
push
mov
jno
pop
push
jnp
aas
xorb
and
mov
mov
and
pop
fsub
insb
jae
in
push
pop
sub
push
or
outsl
sti
pop
fsin
inc
mov
sub
lcall
push
jg
loopne
or
inc
add
insb
jge
lods
dec
cmp
dec
and
pushl
addr16
mov
push
jg
jne
aad
pop
cwtl
inc
xchg
and
dec
ret
mov
movb
and
jmp
out
push
xor
dec
push
jg
imul
xor
xor
rcr
test
mov
cli
cmc
xor
cmpsl
jmp
hlt
ret
movsb
pop
push
pop
fldl2e
movb
sub
mov
int
cmp
sub
jge
push
or
pop
fiaddl
push
ss
out
sbb
scas
xchg
mov
xlat
dec
mov
push
cmpsb
jno
inc
xchg
or
adc
std
arpl
adc
inc
pop
xor
mul
dec
jae
mov
cmc
movsl
movsb
adc
jge
inc
rcr
cmp
xchg
cltd
push
sbb
out
mov
push
xchg
test
out
outsl
in
cmpsb
hlt
ja
dec
xchg
pop
cmpl
int
lock
sub
icebp
sbb
pop
adc
pop
or
ss
fmul
cmp
add
pop
mov
outsl
iret
aam
cltd
mov
jecxz
jo
addr16
fisubrs
jmp
fstl
rorb
pop
mov
fcompl
and
into
fwait
adc
ds
icebp
test
outsb
ds
mov
out
rorl
pusha
cld
mov
lods
push
repnz
leave
sub
pop
sbbl
fwait
mov
adc
dec
jne
mov
inc
adc
ret
inc
push
test
mov
dec
push
leave
jmp
cmp
sub
push
pop
mov
lcall
and
xchg
push
sahf
mov
pop
repz
add
ja
adc
stc
xlat
nop
push
push
dec
jbe
fidivrl
mov
in
dec
sahf
add
insl
je
lock
cmpsb
std
stc
add
xorl
scas
inc
outsb
dec
mov
mov
cli
lret
hlt
out
stos
cli
rclb
pop
push
jp
cli
pusha
out
xchg
pop
or
out
mov
cmp
sub
shlb
mov
lods
arpl
je
xor
mov
int3
scas
lahf
js
mov
idivb
cld
jmp
xor
pop
cmp
cmp
movsb
dec
adc
xor
loopne
inc
jecxz
jb
fcmovne
lods
push
addr16
mov
out
dec
scas
divl
pop
les
cltd
and
scas
xor
pop
iret
lds
mov
outsb
mov
je
push
clc
test
xor
loop
mov
cmp
push
leave
pushf
cmp
sahf
cmp
lcall
jmp
or
xchg
incl
mov
sub
icebp
sbb
ficoms
pushf
test
out
mov
add
mov
and
cmp
add
insb
scas
push
and
pop
insb
xor
sub
pushf
mov
mov
cltd
fisttpll
mov
push
jns
sahf
mov
inc
xchg
ficoms
ds
sbb
pop
xchg
mov
arpl
movsl
inc
inc
mov
inc
mov
and
jns
mov
xlat
jmp
lds
scas
pusha
or
lock
mov
push
lcall
jno
or
rorl
subl
pop
lahf
cs
lods
lret
lcall
pop
lods
sbb
pusha
or
push
push
stos
pop
or
sub
dec
cmp
jmp
jbe
int3
addr16
push
push
int
adc
arpl
mov
cmpb
dec
int3
loope
ljmp
or
fmuls
aam
mov
lahf
enter
test
lcall
imul
ds
xchg
les
xchg
pop
dec
out
sbb
jle
sbb
inc
sbb
ja
xor
and
pusha
aam
sbb
mov
sahf
or
std
xor
jb
pop
dec
cmp
jae
jmp
out
mov
rolb
mov
fiaddl
dec
sub
and
repz
cmp
lea
xchg
nop
aaa
or
mov
xlat
mov
mov
or
mov
xchg
inc
mov
lahf
add
dec
sub
push
sub
stc
sub
adc
sub
inc
sbb
icebp
xchg
xchg
lods
pop
sub
addl
xchg
lods
loope
leave
ss
pop
aad
cmc
shll
sub
and
rol
loop
jo
cs
mov
std
xorb
fcmovne
ljmp
add
fwait
or
leave
pop
sbb
push
lods
popa
sbb
inc
sub
sub
mov
xor
pushl
xlat
mov
adc
enter
pop
orb
fcoms
shll
push
dec
aam
fisttpll
mov
ficoms
xchg
repnz
xchg
int
inc
addb
xchg
mov
in
or
fwait
loopne
inc
mov
jl
mov
pop
xor
xchg
push
test
inc
sahf
addb
imul
xchg
add
sahf
mov
xor
pop
test
fsub
lock
or
mov
xchg
arpl
mov
fsts
xor
and
cmp
fdivrs
aam
jo
push
movl
sbb
nop
dec
lds
inc
test
ds
inc
pop
fistl
aam
aad
aas
shl
adc
push
and
lcall
xchg
pop
call
xor
es
xchg
inc
mov
shrl
fsubs
mov
adc
mov
xorb
push
dec
insl
xor
push
rol
jmp
jns
xor
aad
pop
adc
xorb
pop
es
xlat
mov
jg
imul
out
in
fnstcw
cmp
lods
int
scas
push
js
scas
jnp
xor
mov
adc
shll
push
bound
cld
in
std
xchg
pop
add
pushf
mov
add
jmp
loopne
lods
ljmp
sbb
in
fdivs
lcall
in
adc
mov
pop
loope
sbb
xor
mov
adc
jle
sbb
aaa
addr16
movsb
addb
daa
jb
jne
pop
in
add
add
movsl
fsts
int3
pusha
xor
jl
js
out
add
push
ret
push
dec
push
mov
repz
out
dec
cltd
mov
mov
repz
mov
fists
adc
xchg
pop
sahf
jge
aad
push
pop
scas
sti
pop
repnz
push
push
iret
and
pop
dec
sub
fnsave
out
sahf
xor
sub
cmpsl
daa
shl
sbb
add
mov
sub
xlat
sub
push
hlt
adc
fwait
push
dec
xchg
push
pusha
xchg
fst
aas
dec
xchg
mov
push
loop
xor
sbb
ss
mov
pop
sub
adc
shll
sbb
jns
test
jl
int
sub
dec
arpl
dec
dec
fisubl
lock
daa
adc
scas
jle
lret
jns
aam
jge
popf
lods
lods
or
ficoml
xchg
pop
cmp
hlt
in
pop
and
jg
fiaddl
clc
in
mov
sbbb
push
mov
out
jg
fs
and
stos
mov
bound
jb
dec
xor
xchg
add
mov
cwtl
movsb
fistpll
das
sbb
push
out
dec
mov
or
scas
in
or
push
push
insb
xchg
dec
pop
in
and
add
jnp
mov
test
cld
inc
in
in
inc
mov
jmp
jg
xchg
or
out
add
sub
cltd
cmp
jmp
pop
stc
and
adc
dec
pop
ror
cmpsb
pop
pop
neg
into
dec
stos
mov
mov
decb
pop
mov
dec
mov
sbb
cmp
imul
inc
fldt
sbb
daa
pop
sbb
inc
mov
inc
inc
xchg
fnstcw
xor
mov
ja
pop
sbb
fsubrs
fimull
and
stos
jecxz
inc
cld
sbb
incl
dec
stos
push
call
adc
rolb
push
add
pop
out
lods
pop
xchg
push
mov
adc
sbb
xchg
leave
jmp
push
dec
out
test
into
cmp
nop
cmpsb
stos
pop
ud0
movsb
dec
insb
mov
insb
mov
notl
sbb
jp
cmp
icebp
sbb
cmp
cmp
js
mov
test
adc
int3
ja
push
xchg
or
xchg
loope
dec
int
xchg
pop
sbb
push
push
xor
sub
xchg
out
jbe
fnsave
test
cmp
lret
jb
cmp
xchg
xor
push
xadd
sbb
mov
push
dec
mov
loope
clc
scas
mov
fmull
lds
lods
sbb
add
jl
mov
stc
xorl
jns
xchg
sbb
and
pushf
sahf
in
pop
dec
js
ja
inc
repz
xchg
ret
jle
dec
sbb
cmc
mov
into
fwait
pop
imul
jbe
test
xchg
xor
das
fcoms
jne
dec
mov
mov
push
cmpsl
testl
dec
and
mov
pop
fs
pop
jo
jecxz
mov
add
scas
cmc
aas
xchg
cwtl
aad
sahf
sahf
push
addr16
rorb
hlt
sbb
arpl
jb
sub
mov
aaa
add
cli
mov
test
mov
ljmp
xchg
dec
mov
sbb
mov
in
sub
mov
or
jns
adc
adc
or
jl
adc
inc
or
fnstcw
fisubrs
and
push
mov
ja
hlt
lcall
and
push
sti
imul
fcoms
nop
lods
sub
iret
addr16
inc
mov
mov
dec
dec
pop
dec
mov
cwtl
fwait
jp
lret
popa
add
adc
shrb
sbbb
pop
jbe
mov
bound
pop
stos
loopne
jno
pushf
and
jmp
mov
add
adc
push
xor
adcl
fwait
push
data16
mov
push
aam
dec
adc
sti
cmp
push
in
push
cmp
sbb
iret
or
sarl
xor
and
insl
stos
iret
sti
adc
leave
in
push
push
jbe
mov
sub
mov
imul
jne
sub
pop
sub
cmc
push
fisttpll
xchg
rep
sub
in
lea
inc
and
push
sbb
fs
gs
or
ret
mov
imul
adc
sbb
imul
shrl
pop
dec
imul
xchg
repnz
inc
insb
lret
leave
sbb
xchg
adc
out
sbb
loope
fisttpl
aam
rcll
dec
std
subl
outsb
adc
fs
out
icebp
sbb
add
outsb
or
add
fldenv
add
or
test
mov
push
mov
repnz
scas
lock
bound
outsl
add
or
push
loope
mov
cmpsl
xchg
ljmp
adc
pop
jo
pop
repz
mov
push
mov
add
das
dec
inc
sub
dec
jno
or
pop
mov
pop
lahf
imul
rcr
ljmp
cli
xor
cmp
jne
scas
cltd
xor
imul
adc
adc
lret
es
push
out
daa
scas
sbb
movsl
dec
rcrl
rcll
clc
pop
out
sub
cmp
icebp
push
scas
ljmp
mov
lret
push
mov
bound
mov
mov
add
jo
and
ss
sbb
insb
pushf
lods
push
mov
dec
scas
imul
and
mov
jp
aam
pop
aaa
add
cmp
rclb
or
negl
inc
aas
stos
mov
rclb
push
mov
xchg
xor
lcall
xchg
push
imul
cmp
jg
mov
adc
jb
mov
push
movsb
lahf
stos
or
xchg
mov
cmp
sahf
ret
mov
enter
mov
fsubrs
pop
fs
test
cmp
sarl
sbb
mov
mov
movsl
mov
cltd
mov
and
cli
ljmp
xchg
sbb
hlt
and
pop
call
in
popa
jle
sahf
xchg
xor
int
test
mov
mov
movsw
movsl
xor
jge
mov
rcl
cmp
lds
pushf
jg
jo
and
xchg
lods
subb
push
cmp
pop
jmp
sti
iret
loopw
jo
lahf
lock
ss
ret
movsb
xchg
adc
or
xchg
cmp
pop
je
fdivp
pop
in
int3
adc
stc
fimull
es
addr16
dec
test
rorl
mov
popf
lods
xlat
cmc
mov
jae
test
pop
int
mov
cmpsl
inc
sbb
dec
sbb
repz
xchg
xor
sub
xor
sbb
mov
in
mov
and
test
ret
arpl
dec
lods
bound
mov
add
mov
stos
ja
movsb
cmp
jae
pop
sub
or
icebp
repnz
or
stos
jp
inc
or
hlt
sbb
div
dec
push
inc
adc
mov
lock
aas
jge
cmpsl
mov
stc
arpl
dec
or
xchg
dec
in
jnp
cmp
movsl
roll
cwtl
fdivrp
test
inc
icebp
lret
scas
xchg
in
cli
ljmp
push
aad
sub
dec
xchg
push
fsts
ucomiss
dec
xchg
ret
mov
push
imull
fistps
adc
push
cmp
es
movsb
loop
pop
lock
fwait
xchg
bound
inc
call
xor
mov
xor
jae
test
xchg
dec
mov
fists
andl
push
push
jns
xor
mov
inc
nop
mov
jmp
pop
push
out
lea
mov
sub
outsl
cmp
adc
es
test
add
je
mov
sbb
ja
std
out
dec
mov
addl
rclb
scas
and
ss
and
xchg
cmp
dec
mov
add
pop
or
test
loopne
stc
jnp
aaa
pop
aaa
and
ret
stos
pop
cmc
or
push
sbb
sub
sub
fldt
or
mov
sub
data16
loop
pop
std
jb
pusha
outsb
xlat
dec
mov
dec
xor
mov
push
inc
jle
pop
int3
push
xor
jmp
jbe
xchg
dec
xor
flds
or
sub
mov
mov
icebp
leave
hlt
sahf
negl
jae
xchg
jge
test
xchg
stos
call
addr16
push
outsb
int
loop
push
out
add
mov
ficoms
scas
test
adc
inc
and
gs
mov
arpl
sbb
gs
mov
cmp
cmp
inc
adc
xchg
sbb
mov
in
test
in
hlt
int3
insb
loop
repz
sbb
cmp
shrb
lahf
push
in
mov
stc
push
imul
out
fcomps
lods
xor
lods
outsl
into
and
pop
mov
cmp
push
popf
loopne
mov
push
ficompl
in
std
lock
ret
xchg
sub
inc
add
pop
negb
cs
orb
test
mov
push
inc
and
adc
xchg
in
rcrl
jge
clc
push
dec
push
sti
and
leave
lahf
mov
cs
jnp
mov
stos
clts
ljmp
inc
mov
xchg
sub
dec
mov
mov
sub
out
or
ja
inc
pop
sub
fs
scas
into
mov
dec
test
out
in
out
inc
sbbl
adc
popl
ljmp
cmpb
xchg
sbb
mov
sbb
roll
add
mov
add
xchg
stos
pop
iret
in
add
nop
subb
ffree
arpl
inc
inc
push
lods
or
or
mov
loop
repnz
movsb
into
xchg
arpl
adc
dec
xchg
dec
jbe
and
mov
ljmp
xor
push
arpl
adcl
xchg
filds
jp
mov
jne
mov
mov
fisttpl
xchg
sbb
sub
inc
xchg
mov
out
mov
mov
das
mov
sbb
nop
mov
cltd
sar
xor
sarb
roll
lret
add
std
xchg
push
shlb
mov
mov
jno
scas
jle
shll
sbb
and
fs
mov
ret
aaa
mov
sub
sub
loope
jg
nop
mov
sahf
in
sub
push
jb
and
inc
fisubl
push
xchg
enter
xchg
xlat
xchg
daa
sub
mov
xor
in
lahf
mov
xchg
loop
pop
out
and
pop
nop
pushf
add
repnz
faddp
leave
lods
and
daa
sbb
popl
and
lea
and
mov
fisubl
leave
mov
fs
insl
push
mov
popa
sarl
xchg
mov
jg
pushf
cld
cld
jg
hlt
push
push
mov
mov
flds
lahf
loope
clc
jmp
out
push
mov
pop
inc
or
rep
clc
pop
xchg
add
sub
pop
out
fucomip
lds
outsb
jecxz
fmull
insb
test
xor
dec
test
cmp
add
jbe
daa
mov
popf
xlat
mov
aaa
push
cltd
daa
adc
je
xchg
mov
mov
push
xor
and
mov
push
jmp
mov
mov
daa
loop
into
inc
subb
pop
cmp
mov
adc
xchg
bound
add
and
sbb
nop
in
push
in
imul
mov
mov
mov
hlt
jg
test
mov
jle
dec
jle
pop
mov
mov
clc
mov
or
jne
jle
sub
mov
pop
jle
sbb
roll
mov
dec
adc
mov
fwait
jnp
add
or
cmp
lods
and
push
xchg
fstps
movsb
clc
jb
loope
ljmp
ss
cmp
cmc
call
sarl
popa
shlb
fwait
push
test
pop
jae
je
lahf
icebp
jecxz
lock
call
and
sbbl
daa
or
xor
xchg
cli
daa
bound
cld
xchg
test
mov
or
sti
inc
daa
jbe
mov
sbb
repnz
and
adc
inc
sub
xchg
adc
je
insb
lods
xor
or
imul
mov
sbbb
js
icebp
xor
cmpsl
add
mov
clc
and
je
dec
daa
inc
mov
push
pop
enter
pop
fcmovnbe
mov
lret
push
jle
jg
sbb
lahf
insb
lahf
mov
jnp
rcr
dec
or
fisttpl
dec
icebp
repnz
add
sub
ss
xorl
cli
fistps
mov
aam
mov
inc
das
scas
mov
fsubl
jnp
mov
jne
mov
jnp
mov
test
and
jns
cmp
inc
add
cmpl
and
int3
adcb
mov
mov
idivl
jb
repnz
stos
cmp
or
lret
pop
int3
lahf
lock
sub
and
mov
jns
imul
push
leave
push
in
inc
scas
test
pop
sbb
lahf
call
jne
stos
push
fsubs
pop
sbb
pop
push
mov
xorb
stos
bound
and
leave
subl
cli
test
xchg
jnp
dec
cmp
mov
dec
pop
arpl
or
cld
cwtl
adc
imul
shl
adc
ss
loopne
lea
push
push
xchg
jne
sub
iret
cmc
popa
cmp
std
scas
jbe
ja
add
ljmp
mov
mov
pusha
rcl
fnstenv
fnstsw
scas
scas
inc
mov
ljmp
inc
push
cmpb
fwait
add
pop
into
jb
icebp
testb
inc
or
xchg
xor
arpl
jl
mov
addr16
jno
xlat
daa
pop
lret
std
push
daa
sbb
cmc
mov
mov
push
dec
xor
movsl
lahf
test
mov
sbb
pop
scas
mov
mov
mov
mov
mov
adc
mov
cmp
push
pop
lods
push
and
mov
or
pop
or
and
jnp
mov
mov
popa
push
je
push
scas
in
cmpsb
push
shll
cmp
movsl
mov
shlb
xorb
cmpb
in
xchg
and
pop
dec
outsl
movsb
add
aas
mov
lock
ja
lods
add
push
notb
mov
shrl
and
aad
cmp
and
fnstcw
jne
and
mov
add
push
mov
inc
sub
std
xchg
sbb
push
mov
xchg
fs
push
pop
fcmovne
daa
xchg
dec
adc
mov
adc
cmp
push
negb
sbb
notl
sbb
sarl
repz
pop
hlt
sbb
push
aaa
cmp
xchg
cwtl
cltd
cmp
scas
adc
xor
in
fisttps
fstps
sbb
adc
mov
xchg
mov
mov
roll
xor
mov
push
lret
mov
lret
ljmp
bound
sbb
inc
or
cmpsl
adc
jge
jb
sub
and
ljmp
into
repz
int
testl
mov
cmpl
and
sub
popf
adc
xor
add
xchg
mov
mov
ljmp
data16
jno
add
sbb
inc
dec
push
pop
aas
stc
inc
adc
fbstp
xchg
icebp
adc
lcallw
and
shl
stc
mov
insl
addl
push
xor
out
and
inc
int3
cwtl
rorb
sbb
movsl
into
ss
sbb
mov
mov
repnz
push
fisubs
sbb
push
jl
mov
sub
lret
jb
es
inc
das
cld
mov
jecxz
jl
pop
out
inc
mov
mov
or
adc
push
mov
xchg
iret
call
mov
sbb
loopne
daa
lods
nop
mov
inc
cs
mov
inc
subl
add
add
popf
mov
in
and
push
mov
aas
fists
jae
mov
push
pop
push
pop
jp
insl
dec
cmpl
dec
mov
and
adc
shlb
or
inc
outsl
mov
loop
out
adc
jo
and
mov
outsb
inc
jbe
mov
test
and
popa
push
push
icebp
int3
mov
cmp
js
movsl
inc
jb
sarb
sub
xor
test
pop
outsl
xor
push
and
jnp
inc
sbb
out
dec
aad
sti
mov
pop
pushf
jmp
insl
mov
mov
push
subb
arpl
ret
aaa
pop
push
adc
xchg
and
jmp
adc
ljmp
ret
mov
cmpsl
mov
test
cmp
sbb
repz
dec
or
push
xor
aas
inc
in
sti
mov
add
xor
jne
inc
lods
add
dec
add
repz
lds
add
cmp
ret
lods
sbb
dec
loope
and
jge
mov
fdivrl
mov
adc
fmuls
lods
pusha
lods
pop
push
xor
and
int
repnz
test
adc
jp
sbb
movsb
insl
push
iret
stc
imul
pop
mov
dec
add
push
and
mov
aas
inc
xchg
lret
in
jle
insb
imul
and
fcmovbe
pop
ljmp
stos
test
loope
mov
shll
andl
cmp
rcrb
cmp
addr16
inc
shrl
movb
jbe
inc
xchg
push
notl
pop
rorl
das
mov
test
out
push
jae
xor
test
xchg
shll
jne
sbb
lret
nop
xchg
mov
inc
mov
jmp
fdivrl
das
inc
adc
repnz
mov
push
cmpsl
rcl
push
mov
pop
leave
movsl
enter
jbe
push
aad
dec
out
adc
fs
or
ds
aaa
pop
or
cli
data16
and
dec
dec
jp
xchg
repz
mov
into
mov
and
or
push
push
dec
push
ljmp
and
or
push
dec
fwait
punpcklbw
in
cmp
pop
rcr
ss
add
adc
cmp
mov
aaa
pushf
fnstsw
int3
pop
mov
mov
jae
mov
push
sub
lret
cmp
jmp
mov
aas
jno
mov
or
testl
mov
cmp
out
mov
fidivrl
adcl
mov
test
pop
pop
ret
or
jo
loopne
loope
stc
mov
sbb
jns
xor
cltd
mov
xchg
mov
fdiv
stc
mov
int3
movsb
out
pop
push
dec
testb
cwtl
mov
test
fs
cltd
jo
jb
into
mov
call
sub
lahf
push
cmp
pop
dec
es
jl
inc
push
nop
bound
leave
pop
xchg
sarb
shl
out
in
cmp
inc
lds
insb
push
jecxz
stc
xor
in
dec
cmp
cmc
inc
pushf
dec
pop
in
cld
sub
xor
cmp
fwait
inc
push
xor
mov
mov
sbb
in
lock
cmp
sub
or
push
ss
divl
adc
loop
fistpll
mov
into
pushf
js
mov
push
xchg
xchg
icebp
dec
iret
jge
aad
inc
int
and
clc
cld
or
xchg
add
mov
addb
inc
dec
fsubl
or
cmp
repz
rolb
mov
hlt
iret
push
gs
pusha
sub
test
sbb
pop
es
and
sti
arpl
lock
aam
mov
adc
aad
xchg
in
test
pop
dec
test
or
sbb
in
push
fs
add
lcall
insb
push
sub
cmp
cmp
push
add
clc
repnz
cmp
dec
jecxz
enter
arpl
xor
add
cli
popf
push
dec
mov
jl
xor
jae
lea
sub
pushf
js
lods
fucomip
inc
sar
scas
and
mov
cld
ja
push
mov
add
mull
jg
addb
xchg
pop
cmp
ss
iret
mov
inc
div
inc
fcoml
pop
push
mov
xchg
mov
pop
push
les
test
stc
sub
fldenv
inc
mov
cmp
inc
add
dec
mov
inc
lock
out
pop
mov
mov
imul
sub
hlt
xor
adc
fdivl
adcb
rorb
cmc
mov
insl
sar
fsubrl
mov
out
or
scas
outsb
mov
cmp
dec
push
lcall
and
add
icebp
adc
dec
sti
inc
push
mov
jbe
test
imul
push
jmp
adc
jno
adc
icebp
xchg
dec
mov
loope
pop
dec
adc
bound
nop
sub
dec
push
mov
adc
cli
push
push
add
sahf
mov
inc
add
jno
xlat
fwait
movsb
out
mov
loop
and
call
pop
mulb
daa
ljmp
sahf
mov
test
mov
sub
add
mov
stc
insb
or
adc
stos
jns
leave
dec
xor
inc
mov
sbb
xorl
scas
cmp
push
jl
push
inc
ret
les
sahf
mov
mov
xor
or
pop
addb
ljmp
or
add
aad
and
test
jne
cli
mov
shll
sbb
or
clc
pusha
je
imul
push
orb
xor
push
push
cld
lret
iret
pop
loop
mov
adc
in
mov
cmp
cli
js
jo
or
sti
dec
push
int3
or
sub
xlat
push
repz
daa
loope
pop
xchg
fwait
inc
add
xchg
sub
in
lret
dec
dec
adc
mov
xor
enter
cltd
sub
add
lds
scas
push
xchg
sbb
pop
insb
pushf
xchg
xor
mov
sahf
leave
add
data16
daa
sbb
and
sbb
ds
inc
mov
pop
jg
dec
jmp
mov
push
or
inc
xchg
xchg
sub
mov
ficompl
out
mov
dec
jmp
cli
mov
jbe
cmp
push
imul
out
xor
loopne
test
dec
jno
pop
outsl
mov
iret
xchg
stos
sbb
repnz
mov
and
inc
xchg
and
jp
dec
scas
ret
push
mov
cmp
or
mov
sbb
xorps
pop
imulb
dec
mov
fcoms
popf
fwait
mov
sbb
pop
fildl
cli
jl
iret
mov
xchg
dec
mov
lock
sti
xchg
xlat
or
and
adc
xchg
sub
insl
cmpsl
push
sbb
push
sbb
adc
mov
lds
icebp
lahf
sarl
jns
jb
jecxz
push
cmp
dec
jmp
pop
jle
xchg
shl
pop
xor
scas
sbb
sub
and
repz
pop
jno
outsl
sbb
lcall
std
jno
pop
jmp
jle
inc
push
dec
repz
subb
fcoms
push
xor
mov
movsb
iret
lock
xlat
pop
div
pop
loopne
insl
push
ljmp
push
pop
mov
outsl
add
cmp
cmp
mov
aas
je
push
js
pop
aaa
cltd
test
and
clc
mov
es
sub
aas
mov
je
xchg
rcr
enter
or
cltd
in
imulb
sbb
outsl
jge
dec
jnp
jo
sub
int
fidivs
subb
sbb
test
mov
test
int
cmpsl
out
iret
mov
pop
mov
cmp
movsb
mov
fldenv
mov
add
in
push
push
pop
xchg
dec
xchg
rolb
xor
sub
or
sbb
push
inc
push
test
pushf
xchg
mov
xor
in
dec
sbb
bound
cmpsb
xor
jo
fnstsw
push
dec
jmp
xchg
out
cli
dec
shrl
jl
cmc
les
xor
adc
imul
rcrb
mov
jns
inc
adc
cmc
jo
mov
sbb
mov
outsl
testl
ss
dec
xor
hlt
ja
pop
dec
outsb
jl
in
xor
nop
sub
xchg
jecxz
mov
ljmp
and
cli
add
and
xchg
jnp
fiaddl
inc
jle
push
xchg
adc
in
mov
stc
andb
push
movsl
push
mov
roll
xchg
mov
dec
jno
sbbl
fildll
xorl
int
imul
mov
mov
mov
xor
jo
and
sbb
leave
fwait
jmp
in
fdivrl
bnd
cmp
lahf
ret
mov
adc
sbb
xchg
push
into
adc
dec
dec
xchg
int3
and
mov
loop
inc
aad
repz
outsb
xor
push
sbb
dec
pop
mov
xor
imul
aaa
dec
sti
and
lcall
mov
cmpsb
and
outsl
jg
fs
xchg
jns
shl
jmp
xor
imul
repnz
jb
cmp
lea
lock
test
das
outsb
jle
mov
mov
xor
jge
lods
mov
lret
cmp
push
cmp
stc
repz
jno
xchg
sbbb
mov
dec
aad
int
iret
xorl
arpl
sbb
sbb
es
cmpsb
pop
decl
add
fisubl
cwtl
shlb
fsts
out
popf
jbe
mov
rcrb
repz
push
cmp
mov
cmp
dec
arpl
stc
lret
cmp
xchg
rcr
shrl
cmp
adc
or
mov
in
ss
inc
mov
add
inc
imul
ret
clc
stc
cmpsb
lret
aas
aad
loopne
and
roll
aam
or
mov
xchg
scas
enter
sbb
pop
subb
or
lcall
sbbl
push
aaa
iret
testb
arpl
das
stc
jb
sbb
add
mov
mov
jne
dec
adc
rclb
mov
cmp
ljmp
out
addr16
jmp
in
sub
int
and
pop
insl
insl
popf
inc
stc
scas
sbb
push
xchg
push
je
test
jb
lds
adc
inc
test
xor
mov
mov
lahf
mov
out
in
or
sbb
jnp
push
sub
stos
aaa
mov
popf
jle
clc
icebp
les
or
cmp
push
test
jge
mov
push
push
xchg
cmpsl
fdivl
jle
lahf
mov
loop
pop
lcall
xchg
fs
jmp
jns
or
or
fistpll
jbe
jnp
jl
test
je
jo
jle
out
les
mov
cwtl
out
mov
test
jecxz
sbb
cmp
dec
notl
adc
mov
sbb
lret
adc
movb
or
jnp
or
jae
cmpsb
jae
push
clc
mov
pop
aaa
adc
dec
in
fstpl
mov
mov
roll
push
sub
adc
adc
push
std
add
mov
push
cmp
or
jno
pop
push
pop
push
ficompl
inc
sbb
into
int3
test
mov
popa
xchg
or
clc
ror
and
fmull
sub
fdivl
ss
jle
jmp
add
iret
lret
ret
adc
and
ffree
push
cld
push
add
mov
mov
sub
push
and
pushf
rcrb
int
sbb
popa
in
fisubs
insl
pushf
adc
jb
lods
jno
push
or
pop
and
adc
mov
stos
xchg
testl
jb
ja
roll
pop
mov
push
adc
xlat
nop
mov
or
lret
daa
push
repnz
imul
or
lahf
xlat
mov
xchg
add
add
stos
ljmp
into
inc
cld
and
pop
inc
sbb
jle
jge
cmpsb
filds
fwait
aaa
nop
mov
xchg
adc
scas
add
push
insl
mov
add
or
cmp
lret
fidivrl
shll
dec
jl,pt
mov
je
inc
ja
cmpsb
lahf
mov
imul
adc
push
or
cmp
fistl
pop
mov
push
push
pushf
popa
iret
fisubrl
cltd
mov
jo
jne
xor
stos
and
cmp
cmp
aaa
add
cmp
dec
jle
imul
xor
or
roll
arpl
add
push
rcr
iret
jg
sbb
mov
lret
pusha
pop
xchg
dec
add
test
push
jbe
mov
ret
lods
lods
lods
lock
mov
imul
add
gs
int3
xchg
popa
sbb
or
and
xchg
fistpll
dec
jb
jo
repz
fnstsw
push
stos
mov
sbb
mov
push
stc
jns
out
test
mov
dec
ficoml
std
mov
ret
out
loopne
addl
inc
jne
mov
xchg
es
jp
gs
lahf
xor
lea
adc
aaa
gs
fcompl
int
xorb
les
add
push
shll
xor
rcll
add
ljmp
data16
push
jno
in
xchg
xchg
jbe
inc
repz
stos
cmp
jl
scas
mov
insl
rcll
pushf
push
fwait
jo
jo
sbb
sbb
jae
mov
icebp
cmp
mov
push
mov
lds
repnz
cmp
iret
or
add
lretw
or
adc
ror
cmpsb
subb
mov
push
int3
imul
daa
mov
data16
outsb
push
xchg
pushf
and
dec
stos
fwait
mov
push
lds
in
int
aaa
xchg
dec
sbb
xchg
dec
dec
sub
jae
out
insb
pushf
xchg
mov
dec
mov
jecxz
pop
les
lret
icebp
xor
push
das
jge
aas
mov
aam
mov
push
rep
sub
jge
aaa
sub
mov
sbb
rcl
pop
xchg
add
les
push
adc
dec
sahf
mov
fidivrl
jp
xchg
mov
push
adc
repz
xlat
and
movsl
xchg
mov
or
loope
cmp
daa
btc
pop
lods
cwtl
jmp
adc
ds
cs
jae
mov
pop
mov
jg
xchg
sub
mov
pop
rorl
jno
adcb
icebp
adc
nop
jno
lock
push
cmp
adc
lea
or
mov
or
push
addr16
shll
adc
pushf
sbb
sbb
mov
xor
adc
inc
jbe
adc
ja
movsb
fadds
pop
loopne
dec
add
mov
cltd
enter
xor
xor
push
sub
sbb
pushf
out
sub
int3
test
cli
mov
outsb
adc
clc
xchg
lea
in
mov
xchg
stos
scas
scas
adc
adc
and
inc
clc
pushf
int
push
sbb
loopne
jbe
gs
jns
push
mov
jns
loopne
movb
daa
fcoml
push
stc
movsb
dec
push
mov
add
or
sahf
pop
in
sub
lea
mov
mov
ss
mov
xor
stc
jmp
in
int3
xor
and
xchg
adc
aaa
mov
jmp
lcall
pop
outsb
leave
mov
ljmp
inc
divl
mov
ljmp
std
jecxz
mov
lret
mov
xchg
lahf
loop
les
jmp
fildl
dec
sub
ret
sbb
push
sahf
cmp
push
push
stos
push
bound
sub
adc
arpl
movsl
pop
std
mov
mov
int
dec
or
shlb
ret
dec
or
ret
stos
repnz
adc
push
jge
cmp
movsl
les
adc
jg
stc
fsub
mov
or
fimull
jecxz
or
pop
cld
mov
jo
pop
adc
dec
mov
shrb
and
pop
mov
mov
sbb
imul
gs
push
pusha
adc
xlat
mov
daa
jmp
pop
inc
adc
mov
test
hlt
lcall
push
sbbb
sub
pop
shrl
sbb
std
mov
cmp
mov
lcall
loope
sbb
adc
mov
arpl
mov
jecxz
dec
cld
inc
fwait
mov
pop
je
shrl
movsb
xor
inc
cmpsl
scas
es
fsubl
lock
push
insl
xchg
push
add
push
cmp
pop
mulb
xor
or
cmp
sub
mov
icebp
mov
jns
lds
lock
add
mov
dec
mov
mov
cli
push
insb
adcb
push
jne
sti
shr
and
cmp
cmp
leave
ja
dec
lahf
and
pop
jecxz
in
cmovg
inc
sahf
pop
dec
incb
sbbl
xchg
xchg
push
out
xchg
out
push
mov
mov
popf
xchg
mov
clc
out
std
aam
iret
testb
and
frstpm(287
mov
setl
int3
cmp
cmp
push
xor
mov
mov
inc
negl
and
mov
mov
mov
add
rcl
sarb
int
out
and
mov
sub
sub
adc
test
add
iret
out
dec
testb
pop
lods
jbe
pop
aas
aaa
jbe
icebp
fwait
adc
jg
jmp
mov
ret
dec
dec
addl
cmp
arpl
jae
mov
ljmp
pop
jmp
negl
jmp
adc
rsm
mov
out
bt
xchg
or
push
and
mov
inc
add
insl
jb
jg
sub
lahf
insl
mov
pop
mov
add
mov
inc
jbe
pop
xchg
inc
pop
mov
xchg
dec
xchg
cmpsl
adc
ljmp
inc
into
addb
sbb
push
jb
add
int
test
into
call
inc
mov
sbb
daa
adc
inc
ffreep
rolb
pusha
test
mov
add
dec
cmp
jecxz
inc
jmp
xchg
inc
add
cwtl
hlt
or
lods
jnp
mov
jl
mov
pop
stos
out
inc
jnp
or
inc
nop
xchg
push
enter
xchg
dec
add
xor
sbb
xor
jg
jge
testl
xchg
xchg
push
xor
sbb
int
negl
dec
repz
outsb
pop
aad
xchg
hlt
xorl
mov
stos
fs
jmp
dec
insl
add
xchg
test
stc
mov
xor
jmp
dec
lea
or
inc
aas
mov
dec
iret
ja
imul
adc
aad
mov
mov
mov
pop
xor
or
scas
repnz
mov
adc
mov
mov
test
jl
sti
mov
pop
cmpsl
and
push
in
pop
fisubs
sbb
dec
and
and
xchg
lret
jns
int3
lahf
iret
mov
cmp
add
out
adc
sub
int
xchg
pusha
int
xor
or
jecxz
cmp
xor
cmpsl
iret
mov
sub
fcom
cmc
xor
jp
cmc
std
adc
jmp
xchg
js
add
sbb
dec
outsb
fwait
aad
pop
aas
popa
jecxz
jne
ss
pop
mov
mov
lret
aad
cmp
sub
add
das
dec
mov
ret
and
or
test
or
xchg
sub
xor
outsb
add
jecxz
jp
inc
ds
mov
lock
add
dec
cmpsb
lea
pusha
call
push
pushf
frstor
xchg
adc
pop
pop
xchg
jmp
jl
ret
pop
nop
push
lods
scas
fnstenv
int
pop
shrl
mov
mov
push
pop
pushf
dec
inc
push
movsb
fs
dec
pop
pop
sub
pop
pop
imul
movsl
popf
push
or
fsubs
sbb
push
dec
and
push
inc
xchg
add
sub
les
out
inc
movsl
out
and
rcrb
dec
cli
jmp
pushl
cmp
mov
popa
pusha
es
dec
cmp
sarb
mov
or
add
push
bound
lds
cltd
push
jge
dec
repnz
jl
xor
rclb
xor
loopne
adc
mov
inc
xor
insl
adc
or
mov
sub
pop
shlb
cmp
push
les
add
in
and
mov
pop
xchg
sbb
stc
pop
inc
rolb
ss
mov
cmc
lock
pop
out
xchg
xchg
jb
mov
fcmove
inc
fs
int
mov
lea
ja
push
mov
cmp
pop
nop
or
push
clc
aas
outsb
cmp
inc
sub
leave
push
sbbb
mov
arpl
orw
push
loope
mov
int
in
gs
in
pop
adc
repnz
rcl
push
jmp
adc
iret
pop
push
shl
js
sbb
push
jg
lods
lret
add
xchg
cmp
fwait
imul
daa
cmpsb
inc
mov
stos
jne,pn
xchg
push
aam
fldcw
jg
jno
pop
sarb
out
add
lea
jg
jnp
mov
pop
arpl
or
or
loop
cmpb
sti
mov
repz
sarb
push
mov
lock
popl
or
push
push
insl
mov
inc
out
sti
inc
movsl
jae
shll
ljmp
bound
shrl
outsb
sub
xor
loope
sub
mov
inc
test
scas
test
add
jo
add
push
popf
inc
scas
ss
out
xchg
push
mov
push
xchg
outsb
aad
mov
jg
or
jb
mov
pushl
ljmp
rol
test
cmp
jns
out
inc
sbb
adc
fnsave
lods
cmc
push
repnz
mov
jae
and
xchg
push
movsl
repnz
jae
popa
dec
pop
shll
imul
cmp
icebp
jae
in
mov
cmp
mov
stos
jp
add
fimull
push
sbb
push
out
int
jae
push
pop
mov
xchg
adc
test
pushf
les
add
mov
fwait
or
sahf
pusha
test
loopne
xchg
pop
cmc
mov
cmpsl
leave
scas
pop
sarb
cmp
fs
inc
ret
or
ljmp
cmp
stos
cmp
xor
in
jle
mov
mov
sub
xor
fsubrs
hlt
lahf
xor
or
mov
xorb
and
adc
adc
daa
lods
repnz
and
jge
into
in
daa
jl
cmpl
in
sub
les
xchg
jg
cs
rcrb
push
lret
insb
mov
pop
sti
jg
bound
mov
test
pop
cmp
test
inc
pushf
scas
int
idivl
xlat
mov
sbb
in
nop
loope
lods
jb
cld
popf
jae
mov
ret
mov
sbb
jge
and
stc
pop
fisubs
push
loopne
ficomps
mov
jb
dec
push
bound
xor
in
pop
adc
fcompl
test
out
mov
cs
ja
ljmp
dec
gs
cmp
fnstenv
and
ljmp
pop
repz
mov
xlat
mov
int3
mov
push
int
cmp
sbb
out
push
sbb
sahf
insb
cmovs
pop
or
ret
mov
loop
rcl
xchg
in
std
dec
pop
movsl
shl
addr16
sbb
dec
icebp
push
xchg
pop
test
pop
jg
or
into
dec
inc
outsb
ds
sub
mov
daa
repnz
ficompl
mov
ret
mov
dec
xchg
mov
xlat
xor
sub
rcr
jle
jbe
cmc
mov
test
add
xorb
mov
add
jmp
or
mov
and
or
popf
dec
xchg
pop
loope
add
shlb
sbb
inc
jle
stc
jb
mov
rcl
inc
out
adc
mov
ja
aas
loope
xor
fstps
out
adc
mov
aaa
inc
and
fidivs
jge
inc
dec
xor
lock
fildll
mov
pop
and
adc
aaa
notl
sub
inc
js
jp
sub
adc
xchg
mov
and
add
jle
push
stc
xor
out
imul
out
mov
inc
add
insl
cmp
pop
add
adc
js
cmp
fildll
jae
mov
loop
and
icebp
inc
cmp
adc
jecxz
or
fisubs
push
jecxz
sbb
add
outsl
test
pop
popf
test
xchg
imul
inc
loop
add
xlat
out
xchg
jb
arpl
rclb
and
je
dec
mov
in
ss
nop
fsubp
in
or
cmpsl
jg
fstps
add
add
pop
clc
out
stc
fildll
adc
xchg
inc
push
inc
jae
adc
leave
jge
or
loope
lret
inc
int
loopne
daa
push
inc
xchg
pop
cmp
andb
test
jns
scas
and
mov
xlat
dec
xchg
in
ret
dec
shlb
add
pop
jne
adc
lret
idivl
jnp
mov
sbb
push
pop
push
or
icebp
cmp
enter
shlb
mov
test
mov
lea
lcall
mov
push
and
jg
hlt
add
sub
dec
mov
in
sarl
jae
nop
mov
or
arpl
jge
jno
pop
lcall
sub
outsl
stos
in
mov
inc
mov
call
add
push
iret
scas
icebp
sub
jmp
aas
jb
imul
test
jnp
insl
sbb
jno
push
subl
mov
push
or
lahf
or
push
mov
pop
testl
hlt
and
ret
lret
loopne
addr16
shll
das
jns
lods
cld
or
fadds
cmp
call
testl
movsl
sbbb
dec
ficomps
or
test
cltd
jp
repnz
inc
jge
sbb
sbb
mov
adc
outsb
cmpsb
push
dec
xchg
xchg
cmovs
mov
adc
in
dec
jb
bnd
push
out
jg
add
lcall
mov
jmp
call
scas
jmp
sbb
in
push
add
enter
jmp
insl
push
add
in
jnp
out
pop
xchg
xchg
add
mov
adc
xor
fidivrs
xchg
fimull
and
arpl
mov
cli
jge
aas
sbb
imul
adc
or
popa
retw
xor
adc
daa
mov
mov
mov
xchg
add
mov
lds
sahf
xchg
stos
pop
mov
sub
push
cmp
jp
jne
les
xor
mov
mov
xchg
add
push
pop
add
sub
call
mov
int3
or
int3
push
sub
cli
push
push
aad
mov
or
cmp
jl
pop
addl
jg
aas
xor
jmp
iret
dec
mov
pusha
add
ljmp
mov
xchg
int3
jl
leave
fcmovb
cmp
sbb
push
mov
inc
dec
xor
sbb
lock
pop
fwait
jno
enter
jmp
xorb
scas
lret
sbb
inc
mov
jp
or
pop
lahf
sbb
and
jge
jecxz
jo
sub
lcall
push
shlb
dec
daa
and
std
cmp
mov
pop
pop
lret
cmpsb
fbstp
je
cmp
adc
pop
jmp
dec
mov
stc
xor
fistpll
mov
inc
mov
push
mov
fstpl
popl
std
cmpsb
ficoml
sti
aam
ljmp
inc
xchg
lcall
mov
push
nop
cmp
and
stos
mov
pop
into
outsb
dec
xor
pop
pop
cltd
xchg
dec
mov
insl
pop
add
js
fisubs
lea
jl
cmp
dec
and
sub
pop
mov
jecxz
mov
subb
jne
insl
arpl
call
shll
lods
add
notb
cld
adc
loopne
mov
cmp
cltd
pop
gs
jg
scas
mov
add
int3
call
sbb
push
inc
xor
mov
cmp
cld
cs
pop
insl
dec
je
mov
mov
mov
fwait
nop
dec
and
mov
sub
clc
orl
decb
sbb
pop
add
push
inc
leave
fldenv
mov
cltd
mov
jge
mov
mov
xor
js
in
mov
aas
lods
sbb
push
lret
xchg
enter
push
jl
mov
leave
arpl
mov
or
inc
decl
xchg
insb
cmc
js
test
and
pop
adc
pop
ljmp
mov
sbb
inc
addr16
lcall
sub
mov
sbb
dec
es
jbe
inc
pop
cmp
stos
hlt
in
jbe
inc
inc
scas
hlt
movsb
data16
pop
ret
sbb
pop
pop
stc
lret
fwait
cltd
sbb
mov
rcr
dec
out
sbb
or
sti
es
pushf
xchg
out
dec
and
dec
stos
cmp
jmp
mov
es
jnp
stc
xchg
daa
into
and
push
stos
sti
sub
ljmp
mov
push
sbbl
popf
jbe
ljmp
sbb
push
mov
inc
data16
push
mov
movsl
xchg
mov
xor
cli
jge
pop
jecxz
add
sbb
scas
and
clc
sahf
ja
mov
jns
mov
jmp
cmp
mov
push
out
cs
adc
mov
lret
cwtl
in
xchg
add
push
orl
push
mov
pop
or
cs
cmp
call
mov
and
mov
cmp
pop
ja
addr16
jecxz
out
rorl
bound
mov
cmp
in
adc
adc
adc
push
sub
sbb
adc
lcall
in
adc
pop
mov
mov
or
fcmovu
bound
pop
and
push
inc
fwait
je
faddl
aam
and
dec
dec
cld
adc
pop
ret
push
inc
xorb
push
sti
mov
xchg
sti
fldt
in
mov
pop
js
dec
and
mov
sbb
repz
stos
loope
out
adc
inc
push
lret
pop
cmpsb
in
lds
cli
data16
lret
adc
sub
xchg
fsubl
adc
es
test
in
shlb
sub
stc
pusha
aad
jmp
je
inc
push
fwait
jecxz
xor
cmpsb
and
stos
fdivrs
push
jecxz
out
imul
or
inc
mov
in
ret
scas
lock
push
adc
scas
xchg
scas
fwait
imul
add
mov
jae
int3
inc
arpl
outsl
mov
test
dec
jl
mov
jae
mov
shll
pushf
rorl
nop
add
dec
pushl
adc
mov
xor
pop
dec
mov
cld
orl
cs
into
sbb
jl
inc
into
and
mov
test
push
inc
adc
dec
cmp
pmaddwd
mov
mov
or
gs
lcall
popf
sub
jns
ja
sub
mov
pop
jmp
pop
outsb
fadd
insb
insb
cmpsb
fisubrs
dec
out
xchg
scas
push
xchg
stos
mov
pop
xor
fiadds
xchg
jno
gs
fsubs
ds
fistpl
fbstp
xlat
mov
and
iret
cmp
jmp
jge
cmp
xor
cmp
lods
add
mov
mov
jne
hlt
mov
xchg
aas
push
insl
outsb
add
mov
inc
add
rcll
jle
adc
outsl
xchg
int
fwait
aaa
push
dec
cmp
xor
mov
cmpsb
icebp
cmc
add
jns
sbb
daa
loope
xchg
mov
and
jbe
lcallw
and
testl
bound
sbb
cmpsl
sub
gs
imul
jp
adc
jle
sbb
stos
test
jmp
hlt
mov
ja
sbb
jl
adc
shll
test
pop
dec
incb
mov
and
mov
adc
push
fsubl
cmp
mov
mov
imul
mov
pop
push
cwtl
mov
jl
mov
sbb
insl
loopne
xchg
movsl
pushf
and
push
mov
push
lods
inc
jge
icebp
hlt
push
or
sbb
movsb
loop
std
cld
inc
pusha
js
push
outsl
clc
enter
mov
mov
pop
pop
fistpll
add
sub
push
into
and
stos
mov
lea
divl
sub
test
ret
mov
jl
and
xchg
movsl
adc
cld
jecxz
mov
pusha
ja,pn
ss
pop
xor
xchg
or
dec
mov
stc
cmpsl
popf
mov
cmp
push
jmp
mov
dec
pop
in
inc
sub
stos
insl
fdivrl
mov
xor
mov
mov
pop
sbb
ds
ret
and
cmpsl
pop
ljmp
mov
push
sbb
outsb
push
dec
xor
pop
ja
clc
dec
push
subl
mov
dec
jge
mov
repnz
imul
movsl
das
lea
adc
jns
subl
movsb
adc
rcll
jmp
xchg
xlat
andl
popf
xlat
fwait
and
inc
mov
outsl
and
mov
sbb
aaa
ret
daa
repz
mov
push
popf
mov
cmp
repz
and
into
mov
push
lock
xchg
cld
sub
inc
push
jo
into
pop
cmc
in
repnz
sub
jo
mov
lods
incl
xchg
xor
pop
notl
dec
addr16
in
pop
fidivl
push
cld
out
cmp
add
and
je
loope
fcoml
cli
cmc
jo
outsl
notb
cmp
stos
sahf
es
xor
cmp
pop
out
push
jo
cld
adcb
mov
sbb
xor
push
in
hlt
ret
push
mov
xchg
into
add
jae
adc
cmp
or
ret
sub
data16
out
lea
sub
jl
imul
mov
loopne
mov
popa
sub
iret
movsl
in
sub
les
je
dec
rcrl
test
pushf
bound
stc
stos
cmp
xorb
cli
cmc
mov
dec
fs
inc
xor
add
mov
lahf
dec
add
lahf
adcl
mov
imul
scas
add
ret
dec
stos
scas
xchg
test
push
xlat
sub
and
repnz
in
aas
fcmove
inc
test
xor
xor
insl
jle
js
mov
pop
cwtl
mov
test
mov
jmp
cld
sub
cltd
data16
incl
icebp
daa
mov
repz
test
push
aam
sub
fiadds
mov
inc
push
or
jecxz
aam
pop
sbb
cli
adc
jg
mov
push
jg
imul
mov
mov
aas
pop
dec
popa
mov
or
aas
fnsave
mov
cmc
dec
mov
ljmp
and
inc
outsl
outsb
mov
or
jmp
pmulhuw
cmp
aam
sbbl
mov
adc
fsubrl
jecxz
cmp
inc
or
daa
pop
cmc
cmp
mov
ds
push
leave
lret
pop
inc
mov
outsl
or
lea
sar
mov
pop
cmp
repnz
mov
insb
nop
sbb
sbb
jge
sbb
or
jl
cmp
repnz
pop
lods
cmc
ss
xchg
stos
aam
pusha
pop
push
int3
push
or
insl
cld
stc
pop
sbb
icebp
xchg
inc
cmp
int
cld
rcll
int3
subl
xchg
and
jge
jno
je
imull
push
icebp
dec
pop
pop
and
pop
loope
fistps
clc
mulb
push
inc
fwait
jns
inc
jge
cs
test
jle
adc
inc
xchg
sbb
iret
mov
xor
cmp
mov
mov
xchg
fisubrs
jmp
roll
loopne
push
lods
push
in
scas
lds
dec
xchg
fnsave
cmc
xchg
pop
repnz
arpl
adc
enter
cmp
in
dec
fwait
jp
bound
inc
and
mov
sti
dec
pop
scas
scas
in
xchg
fistps
mov
in
push
lahf
fwait
cmp
or
cmp
imul
inc
jo
sbb
jl
dec
in
push
pop
imul
cmp
or
push
mov
jmp
push
adc
adc
mov
push
xlat
mov
jb
lret
and
cmpsl
daa
push
hlt
enter
xchg
pop
cs
jo
lret
adc
lods
adc
jno
jne
je
movsl
sbb
je
jg
adc
mov
inc
add
fisttps
adc
add
sti
iret
mov
dec
push
sbb
add
mov
fwait
arpl
or
sbb
jno
hlt
mov
adc
cmp
inc
lods
xchg
cltd
pop
jne
call
sub
scas
test
vpaddd
inc
shrb
cmp
and
repz
add
jmp
enter
adc
and
js
add
lock
sub
inc
je
add
xchg
shl
sub
loopne
shr
mov
lea
xchg
push
cld
les
xor
jg
clc
cld
mov
mov
rol
cmc
jl
lods
stc
lahf
jp
jp
mov
out
xchg
in
aaa
fcompl
mull
call
cmpsb
pop
js
outsb
dec
cli
or
and
sub
inc
mov
adc
jo
insb
push
fsts
sub
add
lahf
and
pop
xlat
cmpb
lret
inc
les
jmp
dec
cmp
lahf
fsin
mov
insb
hlt
lret
mov
sbb
out
xor
sub
push
aad
push
jae
mov
lahf
and
push
or
in
dec
dec
imul
push
pop
add
mov
sub
lret
jmp
das
rolb
daa
jae
sbb
or
inc
lcall
dec
testl
ljmp
addr16
imul
daa
mov
test
and
push
cmp
xchg
es
inc
and
es
aaa
mov
dec
mov
ja
fisttps
push
lods
cltd
pop
jle
pop
and
jge
mov
fs
fwait
inc
call
insl
pop
jle
push
lods
pop
ja
cmp
jns
dec
dec
xor
cltd
inc
xor
xchg
jae
in
mov
dec
push
inc
add
les
inc
and
je
add
dec
adc
je
or
add
pop
fisttps
clc
cmp
xchg
xlat
ljmp
mov
sbb
cmp
mov
push
in
sub
mov
sub
mov
pop
jo
mov
add
jns
cmp
out
addr16
xchg
mov
loopne
fstpt
xchg
repz
rolb
ret
in
push
jle
rorb
mov
decb
or
push
pop
mov
sahf
dec
xlat
push
jo
fs
push
orl
sub
mov
lea
adcl
mov
jne
dec
test
mov
mov
mov
cmp
or
les
test
fsts
mov
imul
es
movsb
aad
sbb
sub
push
adc
cmpsb
push
mov
push
sbb
js
inc
add
ret
push
and
push
in
xor
jo
movsl
mov
aas
addl
cs
out
int
mov
hlt
xor
in
jns
or
popf
jb
gs
imul
pushl
or
push
xor
in
fbld
ja
and
cmc
out
pop
jge
dec
xchg
into
adc
adc
or
inc
cmp
pop
fdivrl
hlt
negb
or
loope
loop
mov
pop
int
pop
mov
ja
lret
push
imul
and
inc
fadds
lcall
out
mov
popa
repnz
fiadds
fisttps
cld
in
mov
fucomip
jge
mov
push
xchg
xchg
pop
xlat
incb
test
xchg
mov
mov
loopne
dec
cmp
cwtl
es
mov
lret
stos
mov
test
mov
lea
jg
sarb
cmp
push
xchg
inc
std
into
xor
sbb
lcall
jecxz
xor
or
out
sub
dec
es
xor
xchg
pop
ror
iret
mov
pop
sub
in
lea
fisubs
push
pop
push
mov
test
addr16
into
addr16
movsl
enter
jb
xchg
pop
push
call
mov
mov
cmp
cmpsb
jge
cmp
xor
sarl
or
xor
gs
or
addb
inc
mov
mov
xchg
stc
jne
pop
mov
sbb
scas
dec
and
and
lock
lods
ret
inc
xor
andb
fsubrs
jp
xlat
xorb
lcall
xchg
in
cwtl
loope
push
insb
dec
mov
pop
rclb
xchg
dec
lds
xor
xchg
inc
push
hlt
fsubrs
arpl
sub
xchg
mov
jb
inc
fsubr
sbb
fildl
adc
cltd
sahf
jge
jns
and
xchg
imul
adc
xor
cmp
pop
jge
and
pop
inc
orb
jne
mov
clc
sti
stos
mov
repz
out
pusha
adc
cltd
push
sbb
inc
mov
sub
inc
cmp
adc
adc
xchg
mov
or
lret
pop
jbe
xchg
out
cmp
jmp
lods
and
pushf
xor
fcmovu
and
fwait
add
mov
pusha
pop
sub
hlt
mov
xchg
xchg
sti
xor
pop
cmp
movsb
sub
lahf
push
inc
jmp
cmp
add
xchg
sub
in
and
mov
gs
ja
jnp
push
int3
movsl
clc
arpl
ljmp
mov
xor
dec
dec
pop
mov
cltd
inc
inc
pusha
test
out
mov
fwait
je
adc
cmp
jo
in
cltd
insl
xchg
pop
push
mov
cli
setnp
xor
push
jmp
addr16
sub
and
hlt
into
stc
sarl
push
test
pop
jae
xor
out
shll
xchg
mov
and
inc
pop
push
dec
xor
lods
jo
mov
xchg
push
ret
cmp
lock
cmp
sbb
sub
das
adc
in
iret
push
xchg
shlb
cvtdq2ps
mov
xchg
daa
pop
dec
fcompl
mov
adc
enter
addr16
or
in
push
mov
aas
push
pusha
popf
jl
xorl
pop
cmpsb
scas
das
js
sbb
gs
adc
cmp
xor
or
dec
mull
cmc
fs
lock
sbb
push
sub
jp
scas
xchg
stos
lock
cmp
cmp
and
repnz
add
idivb
sbb
inc
and
mov
mov
dec
ret
cmpsb
imul
cmp
outsl
insl
leave
pusha
pop
incb
popa
test
lret
shlb
aad
dec
nop
lcall
cmp
mov
mov
pusha
adc
mov
fisubrs
iret
pop
pop
loop
imul
sbb
in
in
pop
add
mov
mov
pop
ljmpw
jg
enter
movsl
push
stc
ds
test
add
xor
xor
or
cwtl
stc
out
mov
mov
test
adc
leave
mov
mov
addr16
out
gs
mov
mov
pushf
or
pop
mov
and
sbb
shl
ja
lea
dec
leave
add
outsb
jbe
sti
push
inc
pop
gs
pop
pop
mov
xchg
push
daa
add
shr
inc
mov
cmpsl
or
xchg
stc
xchg
pushf
jge
fadds
hlt
xchg
pop
add
lods
mov
adc
pop
shlb
add
xchg
add
repnz
and
rep
xchg
sbb
popa
mov
inc
scas
sbb
or
add
inc
fdivrs
pop
mov
out
cmp
jno
dec
jecxz
cmpsb
cwtl
xchg
mov
inc
sbb
in
mov
dec
movsl
shlb
cmp
cmp
jno
repnz
sbb
fcoml
pop
repnz
ds
and
iret
in
pusha
cmpsl
xchg
add
popf
stos
lods
xchg
addb
add
in
lcall
jno
mov
pop
and
fwait
mov
mov
int
jp
sub
adc
sub
cmpsl
jmp
movsb
dec
aaa
aas
xor
push
xchg
pop
je
dec
adc
mov
add
push
add
push
fstps
sub
cmpsl
das
shlb
adc
test
cs
or
mov
lock
mov
jle
adc
pop
inc
int
adc
cmc
adc
fwait
dec
cmc
mov
push
jae
and
fsub
fs
add
or
lahf
fdivs
aad
add
lea
inc
nopl
push
jns
cmc
push
mov
js
in
ljmp
popf
repnz
ds
pop
mov
mov
aam
sub
das
push
outsb
mov
fldenv
gs
adc
sub
mov
xchg
hlt
das
pusha
xor
das
push
push
daa
es
movsb
dec
cwtl
and
push
orb
popa
es
pop
sub
out
pushf
pushf
cmp
cmp
or
cmpb
mov
cmpsb
cmp
xchg
frstor
xor
rol
cs
and
aam
jmp
pop
rorb
sub
xchg
cwtl
mov
mov
jnp
xchg
dec
xchg
shrb
pusha
ja
xchg
cmp
xorl
hlt
cltd
push
or
adc
ret
gs
aam
ret
pusha
cmp
lret
rol
add
sbb
xor
mov
outsl
stc
mov
ret
push
in
pusha
sahf
cmp
packsswb
std
add
fcomps
scas
arpl
push
sbb
leave
push
out
sbbb
jbe
sub
scas
mov
movsl
xor
inc
inc
cmp
mov
and
xchg
lea
in
sub
jns
mov
push
pushf
roll
and
mov
test
pop
ja
out
push
push
imul
scas
xor
jbe
push
xchg
mov
xchg
icebp
lods
xor
lret
in
xor
and
xor
pushf
sbb
mov
dec
xlat
cmp
xor
adc
mov
adc
or
dec
icebp
mov
decb
sub
xchg
icebp
cmc
jp
aam
out
jno
xor
aad
dec
popf
es
ljmp
or
mov
popa
ss
ja
sub
arpl
jp
dec
pop
xchg
jno
insl
sar
clc
inc
xor
pushf
ficomps
mov
push
lea
xchg
sub
xor
pop
dec
mov
fidivl
jl
les
stos
pop
movsl
push
mov
stc
xchg
push
nop
sti
adc
mov
das
gs
xchg
lret
mov
pop
ret
pop
mov
push
push
push
lds
filds
add
lret
int
pop
clc
dec
xlat
dec
xor
or
out
into
push
mov
test
andl
jp
mov
adc
cpuid
into
data16
dec
mov
rcll
clc
ds
xchg
cld
push
mov
pop
or
xchg
in
daa
jnp
bound
outsb
sahf
add
xorb
pop
mov
cmp
mov
jb
js
add
mov
pop
pop
js
cmpsl
or
inc
decl
push
jmp
xchg
pop
ret
push
mov
mov
dec
xlat
gs
fstpl
push
adc
lahf
gs
push
mov
cs
adc
loopne
call
adc
xchg
dec
xor
je
jns
leave
movsl
into
lods
or
adc
sub
call
and
mov
mov
cmpsl
mov
sarb
xor
imul
sbb
movsb
popa
loopne
rolb
stos
test
sub
aaa
imul
hlt
dec
push
inc
call
jge
int
dec
scas
push
in
mov
or
lahf
test
sbb
sarl
rcr
insl
popa
movsb
loopne
xchg
aas
push
sbb
adc
fcmovnbe
adc
jg
sahf
data16
test
and
xor
jno
ret
pop
test
and
xor
xcrypt-ctr
cmpsl
sbb
or
mul
xchg
and
xchg
outsl
pusha
loope
test
jle
adc
sub
lret
dec
mov
sti
mov
or
pop
cmp
and
daa
pusha
cmc
and
or
mov
xorb
push
lods
pop
sbb
adc
mov
fdivrp
lea
xlat
mov
push
cmp
mov
nop
adc
mov
decb
test
adc
sbb
test
adc
xchg
push
ret
mov
xchg
xchg
sub
push
stos
pop
inc
pusha
orl
lahf
test
jb
in
jno
and
jecxz
lret
or
in
mov
mov
lret
test
std
lret
push
xor
jg
push
movsb
xchg
cmp
or
mov
xor
xchg
sbb
je
xor
scas
aaa
mov
xor
imul
sbb
lret
ja
leave
pop
mov
cmp
inc
inc
fdivrl
sub
lret
scas
mov
lret
xor
inc
repnz
out
xchg
mov
mov
fdivrl
js
jmp
mov
or
dec
sub
bound
ljmp
aam
push
mov
pop
cmp
loop
mov
xlat
add
mov
std
fcompl
mov
fistps
loope
lret
rcr
add
mov
cmpsb
jl
sbb
gs
push
mov
in
push
call
pop
jecxz
sbb
pop
jp
in
dec
jo
mov
mov
insl
movsl
cmp
int
cmp
adc
pop
add
insb
adc
shl
je
push
test
insb
call
stc
mov
sbb
sbbl
jb
jl
mov
or
pop
rorb
mov
sub
dec
sub
mov
and
and
shlb
cli
arpl
push
das
lods
ret
test
mov
imul
std
pop
and
jae,pn
xor
adc
dec
paddd
stc
jns
sub
push
enter
jle
sahf
inc
mov
loope
add
pusha
sbbl
jo
nop
int3
int3
shrl
mov
cld
jns
pop
pop
and
popa
sar
mov
out
dec
sub
push
xchg
rol
cmpsl
pop
movl
movsl
shl
push
mov
jns
or
testb
and
punpcklwd
iret
sub
jno
pop
call
sub
pop
sub
pop
js
add
lret
sbb
pop
sbb
and
xchg
or
jmp
sub
sub
sub
and
jae
push
jmp
aas
mov
scas
data16
idiv
xchg
jno
ljmp
add
dec
mov
sub
mov
cmp
icebp
int
fwait
jno
inc
mov
xchg
pop
add
sub
mov
pop
into
sbb
and
pop
jns
jg
dec
and
mov
sbb
fs
loop
das
cld
ror
addr16
cmpsl
cmp
xchg
mov
daa
pop
lret
add
add
dec
aad
push
mov
pushf
cmpsl
cmp
push
add
fildl
fldt
mov
inc
or
inc
ret
pop
pop
out
mov
push
ds
jl
jge
sbb
lret
enter
in
ja
mov
jb
jns
push
adc
add
cld
mov
xor
lods
popf
push
test
int
repnz
pop
aad
test
dec
jl
xchg
bound
jo
sti
pop
and
dec
popf
imul
test
je
pop
inc
sbb
sub
call
dec
dec
pop
xor
or
mov
sahf
mov
jmp
dec
lods
mov
cmp
subb
cmp
jge
mov
das
pusha
jge
xchg
mov
test
add
fwait
jns
adc
movsb
inc
lods
bound
test
xchg
filds
outsl
sub
out
ljmp
out
icebp
sbb
xchg
aaa
ja
jg
jg
mov
add
pop
sti
call
ja
cmp
xchg
push
inc
fnstcw
jb
sub
dec
sbb
mov
cmp
or
ja
enter
sbb
lret
loop
sbb
ljmp
sbb
movsb
test
inc
sub
xchg
xor
mov
clc
scas
push
ret
xchg
sbb
js
jo
push
or
bound
adc
xor
push
dec
dec
jbe
ret
mov
out
rcrl
mov
shrb
sarl
adc
xor
xchg
xchg
sub
iret
or
nop
push
xchg
xchg
enter
pop
sahf
loopne
add
mov
in
test
aad
adc
add
mov
stos
fnsave
push
and
iret
dec
dec
pop
mov
fsubl
dec
ja
adc
sub
mov
mov
dec
fwait
pop
sub
in
out
inc
xchg
and
les
jae
pop
in
mov
pop
leave
mov
cmp
push
loopne
dec
mov
fdivr
pop
mov
es
lods
mov
insb
xchg
lods
mov
loopne
ret
jbe
fsts
jnp
rcl
mov
fwait
out
add
mov
xor
lods
rcr
inc
popf
shll
xor
dec
and
dec
ljmp
out
push
stos
sbb
pop
ss
mov
std
inc
push
add
xchg
pop
repnz
lcall
stc
adc
hlt
ja
xor
stc
ljmp
cmpsl
cmp
movsl
shrb
nop
lds
sub
mov
repnz
sbb
pop
jb
in
pusha
loope
bound
loopne
sbb
cmp
xor
fisubl
pop
mov
test
adc
addr16
mov
mov
pusha
fdivl
ljmp
loope
gs
clc
fisttps
and
sti
jo
daa
cs
xchg
xor
in
dec
insl
sub
jnp
push
push
xor
sti
mov
jb
or
jl
or
adc
cmp
jo
mov
mov
xor
frstor
inc
inc
and
push
outsb
aas
jae
clc
mov
xchg
fcom
add
jo
repz
push
pop
mov
insb
fwait
xchg
jecxz
movl
es
inc
int3
aas
lock
xchg
das
sbb
xor
mov
mov
lods
fisttps
fwait
jge
aad
jp
and
popa
aas
mov
xchg
jg
jl
scas
and
adc
adc
orl
jno
cmp
cmp
push
fldcw
inc
xor
divb
adc
jmp
cmp
stc
lcall
fidivrl
push
or
pop
int3
imul
sub
push
aas
or
pop
in
sub
pop
or
mov
push
and
pushl
mov
into
adc
mov
call
sub
imul
sbb
push
jecxz
add
lret
push
sub
xor
mov
jp
fldt
dec
and
pop
and
in
cli
loop
sub
inc
add
movsl
pop
pop
jbe
ss
lea
stos
les
shl
clc
sbb
test
ja
xor
sbb
aad
mov
std
mov
out
push
pushf
and
add
dec
arpl
lods
mov
xchg
inc
lock
xchg
les
das
jo
mov
ret
sub
jne
pop
int3
std
push
push
mov
jge
add
mov
jae
pop
push
mov
int
adc
mov
push
rorb
xor
adc
cmovns
push
adc
movsl
out
sbb
mov
arpl
dec
iret
sahf
mov
idivl
addr16
dec
push
sub
or
xchg
mov
and
les
push
fcmove
add
mov
xchg
dec
sahf
rcrl
cmp
inc
fistps
sbb
xchg
jo
push
dec
xchg
mov
dec
mov
push
jbe
pop
pop
testl
adc
inc
mov
xor
lock
xchg
cltd
xor
mov
pop
adc
loope
repnz
jmp
cmp
popf
mov
outsb
lret
pop
into
mov
cld
dec
xor
pop
sub
aad
inc
mov
inc
in
dec
sub
out
sarl
sub
mov
xor
test
cmp
aaa
cmp
std
int3
sbb
and
push
cld
gs
ljmp
lcall
mov
xor
jl
sub
mov
xor
sub
xchg
jno
adc
lock
pop
jbe
aad
mov
mov
jno
cmp
cli
sbb
xchg
into
xchg
pop
xor
and
notl
fcoms
leave
flds
idivl
fildll
adc
imul
enter
and
loopne
add
popf
mov
mov
dec
sub
fisubrl
jae
sbb
icebp
pop
fcomp
sub
fstpt
popf
sub
and
mov
push
lock
lock
inc
fs
mov
sti
repnz
add
das
sbb
out
push
hlt
cmp
lahf
fwait
inc
pop
mov
fsubr
and
push
add
push
jae
mov
inc
ret
outsb
and
adc
lahf
xchg
repnz
xor
sbb
filds
mov
mov
loopne
out
xchg
push
jge
test
bnd
dec
fxtract
jmp
fsts
and
fcoml
push
ds
mov
pop
push
into
adc
pop
cmpl
xchg
andb
jp
xor
repnz
push
mov
xchg
xchg
push
imul
xchg
push
cmpsb
idivb
aad
pop
fcomps
popf
ficoms
daa
dec
or
dec
sbb
lret
jbe
mov
aas
hlt
xor
or
pop
jno
pop
or
sub
adc
xor
sbbl
movsl
das
std
dec
orl
int3
bound
xchg
push
test
rcrl
fisubrs
xchg
call
mov
loope
lock
ds
lcall
sub
in
adc
int3
cmp
xor
push
mov
mov
jmp
jbe
add
std
pop
clc
push
cmp
insl
jno
rclb
jecxz
mov
mov
cmp
cwtl
or
jae
xor
je
push
bound
pusha
test
stos
sbb
jo
sub
xchg
inc
aas
push
or
fisttpl
add
mov
mov
aam
in
dec
bswap
xlat
xor
cld
add
mov
inc
pusha
bound
inc
jg
jbe
dec
imul
negb
jp
add
mov
inc
pop
xchg
or
icebp
or
xchg
or
sbb
repz
sbb
inc
mov
mov
mov
cmp
andb
adc
es
push
pop
movsb
mov
pop
pop
aaa
mov
xchg
add
add
add
je
add
mov
stos
sbb
in
negl
or
jecxz
xchg
clc
add
mov
mov
mov
mov
and
mov
cmpsl
shll
nop
mov
adc
or
mov
cmp
add
xchg
add
jbe
les
loop
push
jp
push
dec
pop
add
sahf
sub
stos
jne
mov
pusha
inc
shrb
sub
dec
cmp
lahf
shlb
out
scas
shl
adc
dec
push
mov
xchg
icebp
xor
sbb
fisubs
jae
stc
adc
mov
ficomps
repz
aaa
scas
or
push
jae
imul
xchg
sahf
adcb
adc
xlat
or
ja
mov
sbb
mov
add
cli
jg
cld
aaa
data16
pop
nop
cmp
imul
inc
mov
mov
cli
pusha
jbe
repz
inc
or
lods
dec
adc
mov
lea
pavgw
mov
mov
aas
xchg
bound
data16
sbb
inc
dec
pop
pop
cmp
or
mov
das
mov
les
mov
loopne
arpl
dec
pop
pusha
movsb
data16
or
sub
sbb
testl
lds
sbb
push
xor
mov
jb
mov
loope
jl
push
incb
pop
xlat
mov
es
sub
xor
shl
or
loope
sahf
xor
sbb
insl
vpmaxsw
pop
mov
daa
daa
ja
stos
mov
sbbb
aaa
adc
adc
lds
shll
sahf
idiv
ja
into
inc
adc
test
outsb
dec
pop
and
loop
lahf
push
xor
xchg
xchg
sub
lods
hlt
mov
jl
inc
and
or
push
push
shll
enter
sbb
call
lds
jb
mov
pop
mov
subl
pop
cmp
fcompl
xchg
sbb
mov
or
push
xchg
cwtl
xchg
fstl
xor
lret
sbb
icebp
outsl
cltd
and
lret
pop
sbb
frstor
sbb
test
xchg
sbb
push
clc
xchg
push
inc
cmp
cmp
jb
imul
test
loopne
popf
out
cmpsb
jno
ljmp
pop
push
pop
fmulp
leave
sbb
mov
in
cmc
shll
ret
sbb
pop
sti
test
mov
jmp
mov
popf
sahf
jne
hlt
insb
out
in
or
popa
xlat
inc
push
pop
jge
js
xchg
subb
mov
insb
aad
dec
leave
imul
imul
cwtl
scas
int
xchg
jg
jl
loope
out
test
stos
arpl
mov
push
aam
inc
daa
mov
aaa
out
adc
scas
out
adc
inc
lea
cs
or
mov
repnz
lahf
jg
dec
cmp
mov
mov
mov
mov
add
dec
sub
cmpsb
pop
mov
or
pop
xor
cmpsb
dec
dec
sarl
add
lods
sub
xchg
mov
loopne
cmc
push
call
sbb
fstpl
jno
adc
add
jo
nop
xchg
ja
out
lds
stc
mov
pop
mov
or
xchg
dec
ljmp
test
adc
adc
imul
push
ror
mov
dec
mov
and
adc
adc
mov
notb
and
pop
fcmovnu
ror
scas
sbb
mov
scas
mov
inc
sub
dec
sti
mov
dec
es
ficomps
stc
mov
adc
pop
pop
aaa
cmp
std
or
lock
scas
sub
add
xchg
cmp
out
orl
sbb
stos
cmpsb
bound
mov
pop
cmp
decl
fsubrp
out
jecxz
pop
jmp
xor
inc
or
in
or
pop
xchg
pop
sbb
push
insb
popf
xor
call
ljmp
jl
or
xchg
sbb
movsl
mov
in
xor
lret
std
js
inc
popa
xchg
popf
outsb
pusha
in
jnp
mov
jnp
push
add
adc
dec
dec
xor
insl
loope
pop
test
in
pushf
xchg
aad
mov
into
cmpb
cmp
test
push
outsl
movb
inc
iret
cmpsb
mov
add
jb
adc
inc
pushf
cwtl
popf
cmp
xchg
sub
sbb
pop
dec
repnz
stos
ds
mov
stos
paddsb
loop
movsb
pop
fsts
xchg
jmp
jge
mov
or
mov
inc
sbb
xor
push
scas
js
or
test
xchg
out
mov
add
cmp
sbb
mov
inc
out
repz
mov
lcall
pusha
or
add
js
stos
stos
inc
sub
sbb
in
pop
fidivs
test
inc
lods
ficoms
scas
sbb
sub
lock
outsl
push
mov
jbe
in
in
dec
testl
jecxz
movsl
mov
test
jne
xor
push
outsl
rcrl
lock
jecxz
push
or
mov
lds
call
sub
mov
sub
cmpsl
jo
pop
jmp
nop
lods
sahf
popa
jmp
cmpsb
jl
enter
xlat
jbe
lods
mov
mov
movsb
adc
aas
ret
xor
push
aam
fdivrs
mov
and
subb
shl
std
dec
inc
enter
pop
jmp
loope
imul
mov
adc
bound
popf
ss
xchg
inc
insl
lock
pop
xchg
pextrw
and
adc
mov
movsl
cmpsl
adc
mov
rclb
adc
aam
dec
push
cmp
sub
lret
mov
jecxz
xor
push
cmp
or
push
push
add
in
sbb
jns
push
xor
sbb
mov
mov
mov
pop
mov
sti
dec
fwait
aas
in
sbb
adc
mov
push
negb
cs
xor
test
push
adc
aas
dec
shlb
fnsave
xor
fs
mov
pop
jecxz
bound
xchg
cmp
out
mov
sti
dec
mov
pop
lods
out
xor
rcll
aaa
pop
shll
lahf
adc
pcmpgtd
cmp
cmpsl
in
addr16
icebp
mov
cltd
idivb
insl
lds
mov
movsl
jbe
sahf
popf
and
rcl
pop
pop
pop
leave
cwtl
and
mov
cmp
dec
scas
popa
push
mov
xlat
nop
or
jecxz
push
xor
sub
dec
arpl
cmpsl
dec
inc
sub
test
inc
xlat
pop
aad
push
sub
xlat
movsb
jnp
jne
lahf
stos
out
fsts
add
leave
inc
mov
testb
ljmp
push
imul
stos
insl
jae
lods
movsl
xchg
sarl
out
daa
xor
push
mov
add
sbb
loop
cld
dec
xchg
sbb
inc
arpl
cwtl
sub
lret
test
or
or
jb
adcb
fiaddl
inc
mov
jl
mov
test
cmp
out
push
jg
mov
jns
in
lret
pop
adc
mov
cmp
pop
mov
jbe
add
pop
leave
inc
lds
ror
arpl
popa
mov
or
or
xor
lret
inc
into
in
leave
les
mov
adc
add
scas
sbb
push
dec
lret
nop
rorb
or
clc
leave
pop
ja
pusha
xchg
cli
lcall
daa
icebp
lea
in
xchg
stos
ja
test
popf
loop
cmpsb
xor
fcomps
sub
popf
sbb
add
enter
loope
mov
add
jecxz
cltd
pop
out
clc
pop
add
mov
mov
sbb
cmp
bsf
lret
sub
dec
mov
repnz
aad
enter
jle
adc
arpl
loop
pop
out
push
fcom
cltd
call
ret
mov
dec
xchg
cs
stc
repnz
lret
dec
call
jge
xor
jmp
mov
pop
adc
mov
adc
jecxz
fcomps
lock
cmpb
mov
sub
or
fcompl
insb
aaa
cli
fcmovnb
cmp
icebp
lret
out
push
lcall
xor
mov
sti
in
sbbb
imul
lret
sub
je
icebp
fbld
in
inc
int
aad
shlb
rolb
sbb
cs
rcr
jle
dec
loopne
mov
jg
dec
sti
pop
cmp
in
repnz
int
mov
sahf
sbb
xor
fcom
jl
cwtl
adc
or
xor
test
cmp
dec
cmp
in
addr16
push
lods
jp
arpl
and
or
inc
push
es
push
sbb
imul
pop
lods
jne
push
sub
xlat
mov
mov
jno
rcrl
test
push
and
pop
push
push
mov
and
xchg
add
lcall
dec
mov
data16
cmpb
inc
xchg
iret
mov
pop
mov
push
sub
icebp
cmc
fldenv
call
push
sbb
jbe
jmp
int3
jno
hlt
sub
pop
dec
pop
jecxz
add
mov
jnp
dec
std
xchg
xchg
push
ds
sbb
out
pushf
adc
lahf
xorl
sub
fdivrs
cltd
mov
add
out
fadd
test
jp
iret
cs
into
inc
cli
sub
jp
jle
cmc
cmp
shl
das
mov
and
cmp
dec
loopne
test
dec
or
subl
sub
scas
addr16
stos
adc
mov
push
jmp
rorb
sub
mov
cmp
mov
aam
mov
idivl
inc
and
adc
mov
shrb
aas
xchg
stos
aas
push
sahf
jae
dec
push
sub
push
cmp
in
lret
dec
ficomps
aaa
xchg
dec
mov
or
clc
in
push
leave
shlb
mov
and
test
jle
xchg
enter
jecxz
mov
pushf
sti
and
sarb
dec
lds
mov
adc
fstl
and
and
mov
lods
add
push
rcll
dec
into
pop
rcrl
push
sub
sahf
fwait
jmp
pop
add
push
cmpb
addr16
outsb
hlt
jge
or
pop
xchg
imul
pop
leave
mov
call
mov
lcall
xor
sbb
inc
and
es
sub
shll
cmp
xchg
or
fildll
jno
jae
mov
jb
test
push
lds
jae
mov
mov
mov
sbb
jmp
jb
pop
mov
lahf
jl
fisubs
lods
addr16
xor
pop
xor
dec
daa
out
mov
stos
jle
in
repz
stos
jb
sub
scas
fwait
mov
mov
movsl
je
jmp
xor
fcomps
clc
push
cmc
push
mov
inc
mov
push
cmp
jmp
jg
and
xchg
imul
add
push
aam
mov
dec
mov
pop
aaa
inc
imul
dec
cmp
fldt
in
xchg
test
rorb
push
xchg
and
inc
shlb
push
std
xchg
jb
mov
inc
loope
hlt
je
arpl
ret
ja
cli
lret
arpl
xchg
add
jne
mov
das
cmp
out
icebp
aas
xchg
mov
xchg
std
sub
fsubl
loope
cmpb
dec
ret
popa
push
jl
ljmp
aaa
dec
into
bound
leave
out
dec
lea
repz
jae
dec
jbe
lock
aad
pushl
inc
inc
adc
ljmp
mov
icebp
xchg
jno
leave
ja
jecxz
xor
cltd
movsb
shlb
pop
loope
cld
mov
stos
imul
or
mov
insb
pop
hlt
mov
jg
mov
stos
xchg
setbe
pop
nop
sub
orl
adc
pop
adc
movsb
dec
lea
add
add
pop
mov
push
out
inc
push
pusha
lds
push
jnp
xchg
fcoml
test
xchg
addr16
add
mov
fmuls
jb
int
stos
mov
cld
dec
fisttps
sub
mov
mov
idiv
repnz
int
cltd
or
xchg
iret
repnz
adc
mov
inc
ljmp
mov
lds
add
cld
or
dec
cs
sub
push
stos
xor
sub
stc
lahf
icebp
jle
mov
and
pop
bound
xor
push
mov
ljmp
mov
sub
cs
psubb
call
xchg
arpl
orb
push
jecxz
jmp
test
mov
jl
fld
xchg
cmp
sbb
inc
loope
xchg
dec
notl
pop
add
lods
out
mov
xchg
jno
sub
sbb
xor
add
add
mov
push
lds
mov
lret
ja
cmp
fists
fwait
sub
xor
fldenv
mov
mov
or
mov
outsb
scas
jge
push
loop
sbb
pop
sub
mov
test
pushf
fisttpll
mov
add
push
pop
adc
xchg
enter
sbb
dec
iret
out
stos
push
xor
xor
lods
lcall
in
aad
scas
jle
mov
mov
int
cmp
loop
arpl
add
push
inc
ljmp
cmpsl
xor
adc
fstpl
icebp
dec
mov
jmp
jg
sub
ljmp
sub
and
sbb
xchg
repnz
in
or
inc
dec
mov
sti
sub
scas
fnsave
push
dec
test
dec
movsl
imul
jle
sbb
jae
addr16
in
movswl
outsb
data16
lock
pop
sub
xchg
arpl
cmp
std
mov
push
cmp
xor
jp
jae
fcomps
fwait
xor
inc
dec
movsb
fsubrl
inc
lret
jl
mov
cmp
testb
dec
mov
stos
mov
sub
lods
mov
xlat
xchg
adc
mov
jnp
ret
pushf
out
cmp
out
decl
lret
cmovge
dec
es
mov
in
aaa
lea
pop
lea
mov
loope
jmp
je
ret
mov
test
movsb
in
jb
insl
push
sub
stc
loop
bound
ljmp
add
pop
outsb
sub
sbb
dec
mov
mull
mov
out
sti
inc
lods
bound
inc
mov
test
sahf
mov
adc
jmp
lock
xor
sbb
scas
lods
lret
je
test
in
pusha
adc
sub
and
add
repnz
push
sbb
push
stos
cmp
cltd
sub
sbb
imul
inc
test
sbb
jge
ret
imul
pop
loope
pop
dec
jo
cmp
leave
cli
xor
ficomps
pushf
cmpsb
fcmovb
pop
test
jb
cmp
addl
pop
add
and
iret
cs
test
adc
repnz
jo
ljmp
xchg
pop
inc
xor
in
sub
lcall
insb
movsb
dec
addr16
or
fcompl
fimull
mov
stc
aad
dec
pop
cmpsb
adc
push
cmp
add
imul
lea
les
faddl
inc
mov
pop
mov
test
aam
pusha
sbb
sbb
popa
loope
add
fdivr
dec
ret
sub
cmp
pop
xchg
push
jge
push
pop
jae
mov
ret
adc
and
lods
imul
xchg
iret
cmpb
add
or
out
leave
hlt
adc
mov
add
cmp
pop
cmp
sub
in
inc
cli
test
xor
jl
push
ret
enter
lds
add
adc
xor
js
cld
movsb
adc
dec
loope
push
lods
mov
dec
fistl
sub
inc
mov
xchg
addl
dec
icebp
or
mov
and
jo
shl
fs
movsl
cmp
sub
insb
xchg
sub
inc
adc
inc
movsl
adc
jle
cmp
jecxz
loope
inc
pop
sahf
xchg
push
mov
in
insb
movsl
arpl
leave
enter
scas
push
pop
mov
shlb
fnstenv
mov
mov
dec
flds
push
and
inc
push
ret
xchg
pop
adc
hlt
addr16
hlt
mov
daa
fisttpl
pop
inc
dec
in
jb
stc
mov
dec
adc
aam
popl
in
jns
cmpsb
inc
fidivrs
fmuls
and
aad
je
sbb
insb
jle
xlat
fisttpll
cmpsb
xor
cld
js
and
test
test
and
sahf
int
outsb
les
adc
lods
or
dec
xchg
push
gs
xchg
les
imull
pop
push
pusha
mov
sbb
mov
or
cmp
cli
fs
lock
jae
adc
sbb
clc
xchg
insb
fstpl
stos
sti
push
mov
aad
rcrb
dec
mov
std
or
std
cld
stos
jp
add
push
xor
rep
dec
loope
mov
jle
rolb
cmp
in
adc
dec
sbb
jg
cmpsl
ljmp
mov
push
pop
xchg
cmp
pusha
adc
test
stos
xor
or
mov
aaa
xlat
cmp
fmuls
inc
insb
in
sbb
jge
mov
xchg
das
daa
sbb
xor
in
pusha
jmp
inc
bound
gs
mov
mov
insb
cmp
xorl
jae
ja
jmp
adc
jmp
sti
sub
inc
jg
imul
jp
xchg
sub
dec
cmp
cs
mov
ss
out
xor
aam
and
paddusb
lods
addl
addr16
pushf
jl
and
imulb
sti
clc
and
jns
mov
stos
push
jge
dec
ljmp
faddl
xchg
cmp
push
and
pop
std
xchg
xchg
cmp
fninit
push
test
mov
mov
lock
sub
ret
lret
loop
push
in
les
xor
fidivl
aad
inc
out
mov
push
pop
ret
in
in
arpl
sub
je
dec
dec
ds
lcall
sub
aaa
lret
add
or
out
sti
mov
hlt
or
fnstenv
enter
pop
popa
movsl
add
call
lods
fwait
pusha
and
jne
insb
bound
sahf
pop
ljmp
adc
cmc
nop
rolb
adc
dec
daa
dec
xchg
scas
push
pop
gs
mov
lock
cmp
push
inc
enter
subl
mov
mov
adcl
ret
dec
outsl
cmp
xchg
stos
or
pop
or
cwtl
adcb
aam
inc
push
and
jmp
data16
push
in
push
cmp
mov
sbb
pop
push
mov
ficomps
int3
mov
add
xchg
sbb
gs
mov
add
mov
add
cmpsb
mov
pop
fisubl
mov
mov
aas
mov
ja,pt
jns
adc
xor
xor
test
mov
cmp
insb
arpl
gs
fs
pop
adc
flds
pop
orl
stc
jbe
into
in
push
lock
cwtl
add
mov
lods
push
ret
test
bound
sub
jo
sbb
jbe
rcrb
inc
mov
jo
out
or
aad
jbe
test
outsb
int3
xchg
jb
movsl
in
rclb
ret
or
mov
adc
sbb
push
cmp
jl
mov
fwait
in
push
cmp
inc
xor
xchg
inc
mov
and
mov
lcall
lret
mov
dec
mov
aam
or
movsl
mov
aad
jmp
mov
pop
inc
add
mov
sub
orl
jmp
cs
cmp
mov
in
outsb
andl
jno
pop
jnp
pusha
sub
ds
or
xchg
popf
notl
cli
movsb
out
mov
and
mov
out
and
and
out
xor
inc
stos
rorb
and
xlat
test
in
push
cmp
or
or
and
out
jmp
pop
and
adc
mov
insl
jae
aam
out
pop
dec
bound
mov
fcomps
icebp
rcrl
cmpsb
jg
rcrl
lock
sbb
cmp
std
lret
cltd
xor
cld
inc
inc
imul
scas
mov
add
ss
adc
mov
xchg
xchg
adc
imull
inc
adc
inc
inc
clc
mov
mov
dec
xchg
mov
cmpl
mov
sbb
lock
ret
sbb
test
icebp
mov
and
push
cmp
mov
jge
shll
adc
xchg
or
incl
out
jp
lock
sbb
jbe
cmpsb
dec
loope
ror
cmp
cmp
sub
stos
mov
xor
mov
iret
cmp
xchg
mov
das
es
ret
out
scas
cwtl
ja
add
mov
inc
imul
mov
jp
cli
cmp
movsb
scas
sub
mov
adc
pop
cld
xor
das
test
or
jge
sahf
cmp
je
xchg
push
scas
pop
cwtl
jg
or
cmpsl
adc
push
and
xchg
push
out
je
dec
subl
sti
mov
jne
cmc
cmp
pop
fstl
pop
and
andb
dec
xchg
shr
mov
sbb
jbe
mov
mov
pop
pop
lret
scas
pop
adc
sub
andl
and
adc
fcomps
or
data16
ret
pop
mov
mov
mov
leave
mov
jae
add
imul
and
les
add
clc
inc
pop
and
cmpl
ja
aad
sbb
mov
push
push
cli
jns
outsb
mov
pop
in
xchg
mov
jbe
into
lahf
pop
xchg
lea
inc
dec
mov
cwtl
mov
xorb
or
mov
mov
push
push
dec
aas
push
mov
cmpsl
jg
adc
add
movsl
inc
ljmp
xchg
mov
sarb
xorl
pushf
sahf
jecxz
adcl
sub
jge
or
sub
lock
dec
add
fwait
int
mov
xchg
xor
inc
subl
aas
add
mov
xor
jmp
dec
sti
mov
mov
jb
mov
test
xlat
fdivl
and
loopne
sbb
stos
adc
dec
add
mov
add
je
outsb
mov
sbb
lret
arpl
mov
cli
or
out
fwait
xchg
push
imul
ret
mov
add
mov
sbb
cld
or
xchg
insl
enter
loopne
dec
out
test
stos
dec
push
cli
in
ficomps
push
xchg
shl
out
xchg
add
in
push
pop
pop
pop
mov
lcall
subl
xlat
push
ds
mov
mov
inc
jmp
insl
or
mov
pop
adc
imul
push
mov
or
lds
lea
pop
mov
test
fimuls
repnz
addr16
push
test
xor
mov
xchg
cmpsb
mov
pop
outsb
dec
adc
lcall
cs
sbbl
cmpsb
loopne
push
lret
sbb
leave
sub
xchg
pop
jns
lret
inc
mov
mov
jmp
mov
jo
mov
ret
adcb
push
pop
stos
dec
addr16
or
sahf
cmp
xchg
xchg
loopne
push
mov
pop
sub
mov
test
mov
pushf
pushf
xchg
cmpb
mov
push
iret
insb
push
add
or
dec
pop
jnp
icebp
adc
outsb
mov
adc
or
out
adc
rcr
push
insb
sub
and
lods
adc
pop
pop
push
bnd
iret
dec
xchg
sti
rorb
jmp
fdivrs
push
les
mov
cmpsb
mov
jl
fcos
or
sub
imul
inc
jl
orl
pop
shrl
out
leave
push
std
add
test
and
xchg
cmp
and
in
pop
jbe
addr16
aaa
add
repnz
push
in
jno
cmp
adc
and
sbb
cmc
xchg
xlat
pop
jmp
cmp
sbb
fcompl
int3
mov
aas
inc
and
je
lcall
adc
xor
and
mov
add
mov
in
inc
dec
inc
decl
jnp
or
fstl
sbb
rolb
ret
mov
xchg
aad
pop
dec
repnz
inc
and
cltd
shr
and
out
push
lods
jne
push
rcr
daa
out
aam
and
mov
sub
in
push
or
repnz
cwtl
repz
xor
sub
aas
mov
clc
inc
mov
fidivl
or
sub
xor
jae
jo
out
ds
imul
sbb
gs
scas
pop
aam
add
or
lret
pop
mov
neg
and
sbb
inc
push
add
push
call
push
outsb
call
std
aam
pop
in
daa
sbb
out
js
data16
adc
add
or
xchg
sbb
loopne
jge
cmp
sub
fstl
cmpsb
jb
ss
icebp
inc
and
cmp
adc
aam
mov
mov
bnd
add
les
xchg
lret
dec
adc
add
push
fwait
or
stos
imul
int
push
add
xor
out
add
loop
shrb
or
or
rorl
cmc
shlb
mov
cmpsb
and
rcrb
inc
testb
sahf
push
in
nop
mov
lds
mov
leave
adc
daa
call
dec
popf
pop
cmp
mov
xchg
lcall
lret
mov
mov
out
inc
fimuls
cmpsb
je
inc
add
popa
roll
je
dec
dec
sub
pop
in
sbb
mov
sbb
xchg
ljmp
stc
xor
add
aad
mov
mov
out
and
mov
adc
sti
cltd
push
and
cmp
dec
lods
aad
dec
mov
jp
xchg
jnp
mov
add
outsl
jl
and
cmp
mov
jns
psllw
call
inc
adc
mov
push
insb
out
cli
imul
out
mov
xor
scas
cmp
sbb
or
fs
inc
xor
adc
aad
aaa
mov
in
push
mov
push
push
cltd
cmp
loopne
insl
xchg
mov
sbb
pop
dec
fs
jo
stos
sub
jns
cld
aad
faddl
pop
adc
pop
lds
cwtl
repz
jo
sub
mov
cmp
mov
filds
data16
push
int
xor
fs
rorl
into
mov
cmp
sbb
ljmp
stos
jbe
repz
pop
and
icebp
adc
dec
push
pusha
out
sub
daa
xchg
push
or
insl
push
push
lcall
xor
cmp
cmpsl
or
out
dec
cmc
inc
mov
popf
jbe
popf
xchg
repz
movsl
cltd
dec
sbb
inc
mov
adc
xchg
test
stos
mov
out
pop
sbb
out
js
lahf
lahf
clc
lcall
ret
mov
outsb
and
dec
sbb
jb
pusha
in
cltd
push
xor
adc
bound
pop
or
or
adc
jbe
push
popf
jmp
mov
fcoml
rcll
and
lds
pop
xor
test
out
addr16
inc
lods
or
inc
cmp
dec
and
push
sbb
ds
jg
ret
add
mov
repnz
push
mov
pop
int
cmp
into
pop
jmp
dec
inc
outsb
xchg
sarb
cmp
inc
push
aaa
shll
and
je,pt
je
cmp
push
popf
fldl
dec
mov
in
dec
or
bound
or
sbb
rol
in
loop
ljmp
idiv
xor
shrb
scas
scas
fistl
fildll
out
sub
add
out
push
mov
jp
lock
enter
jno
out
lods
imul
movsb
aam
into
jecxz
mov
fldt
sub
out
sub
jl
fdivrl
add
nop
inc
push
inc
mov
imul
jecxz
jge
mov
and
jno
testl
or
push
ret
pop
cmp
jg
out
sbb
adc
mov
leave
inc
xor
repz
jne
ss
cmp
ret
xchg
jnp
inc
inc
insl
subl
inc
mov
sbb
inc
imul
fists
jg
lock
stos
in
pop
mov
xlat
mov
lret
aas
jae
fsubrl
push
or
dec
popf
out
ss
or
cmovo
cmpsb
mov
cmp
xchg
pop
out
push
mov
jle
lcall
ret
jne
data16
insl
mov
popf
push
mov
mov
jl
shll
mov
lds
or
es
inc
ss
dec
pop
mov
adc
jae
cltd
pop
inc
add
outsl
lods
outsb
sbb
out
or
mov
repnz
push
mov
mov
lret
jns
mov
stos
adc
and
or
fnstenv
enter
sub
pop
lahf
ljmp
xchg
jae
das
stos
pop
jbe
add
and
mov
and
out
loopne
or
push
dec
inc
out
mov
and
jns
cvtdq2ps
sbb
data16
gs
jmp
es
outsl
clc
pop
push
repz
xor
ljmp
adc
lock
adc
inc
divb
int3
add
xor
outsl
inc
jmp
adc
mov
dec
sub
enter
or
je
icebp
sub
push
or
pop
les
pop
insl
test
lods
mov
xchg
subl
flds
ss
and
jmp
jg
sub
ljmp
rcrb
loopne
inc
aas
ljmp
das
inc
out
popf
rorb
pop
adc
loop
int3
dec
cltd
mov
adc
in
cld
mov
call
or
jne
lret
ds
imul
xchg
add
pop
pushf
addb
or
pop
cmpl
cs
sub
cmp
fistpll
or
ret
mov
aad
cltd
nop
shlb
push
sbb
push
mov
fucomip
rcrb
sub
sbbb
shrb
orl
xor
pop
loop
mov
sbb
cwtl
imul
and
sub
cmp
jnp
sub
test
mov
movsb
nop
dec
mov
movb
in
mov
jmp
pop
pop
imul
stc
outsb
add
xchg
push
outsb
mov
sub
xchg
push
adc
adc
xchg
push
pop
push
adc
cltd
ret
sbb
mov
dec
or
mov
or
xor
hlt
add
push
aad
ds
cmp
adc
ja
inc
push
or
lods
jmp
stc
cmp
dec
pop
in
enter
shll
mov
inc
or
push
in
lret
cmp
xor
cmp
pop
aam
stos
mov
mov
test
pop
and
sbb
fs
sahf
mov
popa
repz
in
mov
loop
or
out
pop
inc
lock
cmp
into
or
in
int3
inc
ss
and
sbb
xor
in
nop
inc
cmpsl
fchs
imul
int
mov
cmp
sbb
cld
lret
dec
in
dec
jns
rcrb
dec
es
cli
add
or
jne
inc
jae
push
pop
sbb
jbe
xchg
sahf
movsb
push
mov
inc
cmp
gs
insl
sbb
jecxz
push
cmp
mov
pop
and
inc
setge
jl
adc
or
pop
test
push
shll
xor
loope
mov
adc
xchg
ljmp
adc
scas
aas
fnsave
cmp
test
inc
iret
sub
cmp
jge
sbb
ja
xchg
jo
aas
dec
loopne
inc
shrb
add
cmp
and
jmp
cmp
jge
pop
add
cmp
pop
mov
xchg
test
add
out
push
xor
mov
pop
jbe
shlb
pop
sbb
add
stc
mov
pop
pop
mov
add
cmp
push
inc
ror
ja
dec
pusha
pop
cltd
add
into
in
add
xor
cld
test
xchg
inc
leave
fs
mov
pushf
fidivrs
repz
push
pop
iret
loope
mov
xchg
insl
orl
loope
mov
jne
jnp
movsl
ss
jge
rcl
mov
push
hlt
mov
int3
mov
ficoms
and
push
int
push
loopne
jo
faddl
adc
enter
jmp
stos
adc
mov
jne
adc
xor
sahf
shll
cwtl
sbb
push
and
lds
push
in
push
push
mulb
iret
pop
arpl
mov
dec
pop
imul
stc
lahf
sub
scas
add
or
nop
test
adc
jmp
rolb
dec
lods
jo
xor
out
jg
cld
mov
or
outsl
add
std
mov
aad
add
out
clc
movsl
lret
into
pop
das
std
insl
adc
pop
sbb
pop
dec
repnz
jae
jo
push
adc
cld
push
sub
push
stos
dec
and
repz
xchg
mov
cmp
mov
out
ss
dec
cltd
es
or
push
jle
out
mov
fxch
addb
xchg
mov
push
xchg
dec
int3
mov
jl
aas
dec
pop
xlat
cltd
adc
push
xorb
pop
or
add
jle
lret
xor
mov
xchg
mov
int
int
adc
mov
inc
pop
push
in
inc
cmc
mov
dec
pop
mov
rorb
pop
add
xchg
jecxz
mov
call
js
adcb
out
ja
rorl
sarb
sub
jp
into
int
mov
fwait
sbb
movsl
sbb
sti
mov
shlb
scas
lret
add
test
divps
pop
ffreep
add
sub
movsl
lret
out
in
xchg
mov
popa
cli
mov
pop
sub
loop
cli
ds
inc
add
sub
shr
jle
ss
add
and
shll
pop
aas
push
jb
aad
fiadds
sub
add
sub
negl
and
sbb
pop
je
pop
ds
lock
cmp
jmp
cs
aam
loopne
add
sbb
sbb
lret
mov
add
sbb
int
clc
out
mov
scas
loopne
bound
jb
mov
clc
pop
cmc
dec
test
fistps
pop
nop
mov
xorl
push
ret
out
les
addr16
int
jb
fs
jl
sub
mov
jle
fwait
add
mov
jbe
and
add
xchg
sahf
cmp
mov
ljmp
jns
call
add
push
test
mov
arpl
push
xor
addr16
xchg
xor
mov
push
sbb
jmp
pop
mov
mov
test
pop
xchg
daa
lret
iret
mov
push
and
add
mov
add
mov
or
cmp
icebp
cmp
and
inc
jl
aad
sub
mov
ds
in
rorb
ret
push
xor
movsl
int3
gs
iret
xor
cmpl
and
jle,pt
mov
popf
dec
push
sar
lds
fcompl
or
fwait
mov
clc
or
lock
mov
and
pop
pop
jbe
dec
mov
test
fwait
cli
xchg
inc
xor
or
jmp
mov
xorb
mov
adc
loopne
add
popa
cmpsl
push
subb
jbe
inc
lock
xor
jmp
es
loope
xchg
loopne
add
shll
insb
faddl
sub
test
insb
subl
lret
mov
sbb
cli
adc
mov
sbb
mov
dec
int
and
ss
adc
mov
dec
fcom
inc
bnd
mov
adc
gs
mov
mov
push
push
mov
sbb
mov
in
leave
mov
or
sti
jl
les
xchg
mov
ret
sub
and
lods
push
mov
hlt
mov
adc
inc
lods
shll
mov
jle
jo
aam
icebp
mov
inc
fnstenv
and
push
xchg
jmp
jmp
or
jmp
mov
sub
jnp
push
mov
mov
subb
icebp
call
jmp
or
dec
xchg
fidivrs
test
test
xchg
pushf
mov
outsl
int3
out
inc
scas
sbb
sbb
ljmp
inc
mov
addr16
add
add
mov
add
xchg
repnz
leave
dec
in
pop
sub
movsb
adc
mov
and
fsubs
dec
and
add
add
add
xchg
mov
dec
int
lahf
or
cmc
mov
outsb
out
es
xchg
loop
insl
jg
xchg
popa
sub
out
sbb
movsl
arpl
fldl
xchg
fdivr
test
fsubrp
jge
out
xchg
sti
lcall
xlat
ja
sub
in
loop
rorb
les
or
push
jbe
or
mov
pop
pusha
loop
cwtl
mov
xchg
test
push
mov
mov
outsl
pop
jl
dec
jbe
jg
sub
popf
movsb
fisubrs
loopne
xor
js
lcall
mov
push
icebp
movsl
xchg
fisubs
mov
pop
mov
cmovae
sahf
or
mov
sub
push
mov
inc
inc
mov
and
cmpl
out
mov
minps
nop
imul
mov
sub
or
sahf
mov
sub
dec
aaa
rcrb
cmp
push
lret
lods
ja
cmp
aas
mull
call
mov
insb
and
movsb
stos
leave
cld
inc
add
movsb
mov
adc
sbb
gs
jmp
inc
add
sbb
push
repz
add
xor
jo
mov
mov
iret
arpl
sub
std
pop
les
pop
add
sbb
lods
push
test
stos
test
sub
push
lahf
negb
ds
pop
rorb
ret
out
hlt
out
data16
and
testb
mov
aam
out
dec
negb
adc
cs
insb
xor
ljmp
addl
mov
inc
push
stos
cmp
dec
sub
fbstp
dec
push
aam
out
pop
mov
in
sbb
ret
dec
insb
cs
or
insb
mov
imul
out
xchg
adc
sub
mov
ficoms
push
push
or
das
clc
test
xchg
push
das
adc
clc
sbb
adc
shr
jge
push
rcll
ret
xchg
leave
ljmp
icebp
dec
nop
xor
sbb
data16
sub
dec
pushf
mov
mov
mov
stos
xchg
popl
push
es
add
or
int
ret
lds
jp
test
cmp
std
xor
push
hlt
inc
mov
and
das
or
jae
pop
xor
dec
loop
or
insb
lods
jae
lods
mov
mov
fs
jbe
mov
mov
bound
dec
mov
gs
out
shl
mov
cmp
pop
mov
lods
push
call
insb
mov
call
mov
lcall
sub
mov
out
fisubrl
mov
scas
jmp
aad
mov
pop
jno
mov
ljmp
hlt
dec
mov
adc
sbb
sbb
leave
jp
cmpsl
je
xor
jmp
push
cli
pop
adc
loopne
mov
push
lret
xchg
mov
bound
fs
push
add
pop
scas
orb
call
imul
and
lock
sub
sbb
ljmp
add
test
or
push
mov
add
js
dec
lahf
sbb
popf
mov
adc
ret
xor
mov
sub
jle
jne
pop
popa
and
mov
pop
outsb
lea
je
mov
movl
rclb
sub
push
mov
or
enter
sbb
hlt
inc
mov
or
mov
fstpt
mov
ds
push
or
and
in
pop
jno
mov
arpl
mov
cmc
xor
es
shrl
lret
stc
in
adc
fimuls
movsl
das
out
ds
mov
xchg
shlb
cmc
push
adc
movsb
roll
mov
mov
jmp
hlt
rcll
jns
gs
sbb
cmp
lds
cs
push
sti
movsb
ss
lret
aam
testl
sbb
mov
mov
pop
jmp
or
push
or
ficompl
sbb
xor
insb
push
movsl
iret
aam
pop
sub
dec
fstpt
bound
mov
jg
jecxz
fmull
and
or
in
sbb
call
into
push
add
jge
hlt
mov
shlb
jle
jb
movsb
add
test
push
out
les
push
xchg
lret
sub
sbb
repz
inc
xor
imul
jl
mul
lds
nop
sbb
and
adcl
hlt
xor
stos
pop
push
xchg
test
js
mov
mov
jmp
push
cmc
mov
pop
push
push
and
hlt
movsl
mov
cmp
daa
mov
ss
pop
mov
or
subb
and
and
cmc
imul
fs
push
push
or
sahf
lahf
adc
push
lret
xchg
fldt
jne
mov
push
mov
enter
jne
lcall
push
outsl
bound
push
jp
dec
repnz
or
xor
push
outsl
pop
push
push
fwait
dec
jbe
sahf
sub
or
inc
je
daa
cmp
mov
mov
cld
pop
iret
stos
dec
mov
mov
push
sub
push
test
arpl
repz
insl
decb
xchg
cmp
mov
cmp
or
pop
mov
jb
out
mov
cld
jae
pop
add
lea
and
lret
push
bound
lahf
inc
cwtl
dec
shrl
int3
lret
test
mov
aas
repnz
mov
movsl
cmp
insb
cltd
inc
add
jns
or
inc
and
or
push
lods
jbe
lods
jnp
push
loope
mov
pop
sbb
cmp
pop
imul
xor
scas
sub
jo
mov
pop
das
add
dec
push
add
xor
inc
js
es
test
inc
stos
push
loopne
or
add
je
pminsw
daa
or
mov
push
es
mov
fcompl
mov
inc
and
int
or
lcall
pop
mov
fidivrs
push
mov
enter
jle
cltd
fistl
push
cmpsl
adc
cmpsb
cmc
lret
jecxz
hlt
fisubs
mov
arpl
cld
cmpsb
shl
js
les
push
aad
pop
std
test
pop
fcmove
pusha
ret
xor
sarl
push
mov
xchg
dec
dec
pop
or
lds
adc
shll
add
addb
jne
adc
pusha
sbb
test
sub
sub
and
cli
mov
mov
push
in
mov
loope
mov
add
test
cmp
inc
push
pop
mov
push
mov
or
and
pusha
lcall
icebp
mov
jne
xchg
lcall
out
aas
sub
sbb
cs
ds
mov
or
rol
xchg
adc
fiaddl
and
in
push
cmp
rol
daa
mov
popa
and
cs
shrb
xchg
cmpsb
pushl
jo
leave
fcoms
pop
scas
pop
iret
fwait
xor
movsl
out
mov
sub
fimuls
mov
loop
mov
sbb
pop
shll
sub
insb
andb
leave
push
out
sbb
ljmp
nop
in
inc
push
inc
loope
ds
daa
inc
jb
jo
aam
dec
xchg
and
sub
js
mov
js
push
aaa
hlt
mov
dec
sub
jg
cmp
fsubrl
test
adc
mov
cwtl
pop
xchg
stos
stc
popf
dec
xchg
insb
and
dec
shlb
mov
int
mov
xor
inc
js
dec
add
and
sbb
pushf
in
ss
mov
adc
inc
adc
ret
lods
ret
push
xlat
jo
mov
loopne
in
arpl
inc
cli
xchg
adc
mov
xchg
aas
and
sti
mov
leave
jp
push
xchg
sbb
adc
mov
xlat
popa
mov
out
lcall
push
je
push
rol
cmp
cwtl
adc
lods
jp
adc
addr16
and
rol
shrb
loopne
lock
mov
or
mov
mov
mov
testb
jg
xchg
dec
pop
pop
testl
pop
lret
fimuls
jae
test
popa
mov
insb
push
inc
sbb
and
and
adcl
out
jle
xor
dec
cs
push
test
sub
or
mov
stos
mov
addr16
mov
in
fs
movsl
jg
cmpsb
push
add
call
cs
std
xor
orl
fidivl
in
add
jp
and
in
out
cmpsl
enter
cmp
stc
cmp
shrl
mov
cmp
bound
lock
and
ljmp
adc
cs
push
mov
out
shlb
sbb
imul
jmp
testb
stos
cmp
adc
cmp
idivb
into
fstps
mov
popw
into
cmc
std
cmpsb
insl
pop
lcall
enter
lret
push
sbb
data16
xor
sub
lahf
cmc
ja
imul
sbb
das
pop
inc
js
je
dec
mov
xor
mov
leave
out
inc
sub
and
cmp
jg
jb
inc
leave
into
lcall
xor
jl
adcb
into
mov
inc
cmova
rol
jp
push
rcr
mov
jnp
mov
xor
jbe
cmp
lcall
gs
mov
mov
lock
in
into
outsb
pop
xchg
mov
push
and
jo
or
scas
vcvtsi2sdl
in
mov
sub
dec
push
and
int
push
dec
pop
cmp
ret
dec
cmp
dec
in
sub
sbb
jl
xor
je
in
movsl
add
int
add
sbb
jg
fistpl
aas
lock
push
int3
push
in
adcl
dec
mov
inc
arpl
jmp
mov
jp
scas
push
jns
out
push
mov
adc
in
pop
dec
jge,pn
lds
mulb
int3
aam
pop
xor
mov
leave
sti
aas
sbb
sub
push
jnp
ret
fwait
cmp
inc
xchg
jge
inc
sbb
sub
lock
inc
mov
lods
xchg
cmp
cs
nop
sbb
lea
in
mov
aas
inc
pop
hlt
test
inc
xchg
in
std
mov
sub
xor
adc
pop
add
push
add
adc
fwait
xchg
imul
jb
enter
aad
call
mov
xor
push
shrl
pop
fidivrs
dec
pop
or
and
jbe
int
push
insl
xor
mov
fstpl
mov
movsl
sbb
jno
iret
popf
or
and
jl
xchg
and
jno
addl
adc
pop
and
xchg
and
push
scas
lcall
mov
xchg
and
dec
sub
int3
dec
cld
xchg
lcall
lea
dec
sbb
jle
ret
ss
in
in
push
push
out
lcall
cmp
push
dec
fnstcw
inc
or
jne
jmp
xor
repnz
fisubrl
je
xchg
jecxz
add
sub
or
pop
push
mov
jnp
cwtl
push
cmpsb
adc
xchg
xor
push
int3
mov
mov
sbb
push
in
inc
inc
mov
test
mov
outsb
clc
push
fmuls
mov
shrb
cmp
sub
cld
cmpsb
and
jge
fnstenv
cmp
push
lods
or
sub
or
xor
adc
outsl
icebp
inc
shlb
loopne
mov
rclb
mov
clc
inc
sti
es
mov
out
cmc
loop
mov
std
or
adc
imul
cmc
lods
pushf
cmp
adc
mov
filds
mov
xchg
lock
xlat
xchg
fdivl
decb
addr16
ss
inc
lea
daa
daa
mov
outsl
arpl
push
push
sub
repnz
and
jp
invlpg
out
lea
pop
xchg
cmpsb
test
dec
andl
sbb
mov
mov
jmp
or
xor
movsb
repnz
adc
lret
pop
adc
fnstcw
les
sbb
push
jle
and
adc
rolb
mov
inc
jo
popf
and
cmpsb
cmp
loop
ret
lahf
jmp
mov
add
add
fisttps
mov
adc
mov
inc
xchg
mov
sub
add
dec
xor
imul
inc
add
inc
inc
add
or
dec
jne
mov
mov
dec
inc
pop
inc
mov
pop
add
mov
pop
inc
mov
sub
dec
lea
mov
inc
dec
dec
sub
dec
add
ret
push
push
inc
sub
push
imul
mov
movzbl
mov
dec
mov
push
mov
lea
add
dec
push
imul
mov
sub
sub
lea
movzbl
add
push
add
mov
add
push
dec
inc
xor
lea
inc
push
mov
inc
push
dec
imul
pushl
xor
call
movswl
add
mov
add
dec
imul
inc
mov
inc
pop
ret
sub
inc
mov
cmp
jb
inc
xor
add
mov
inc
sub
mov
imul
add
inc
mov
inc
xor
and
add
mov
lea
xor
cmp
jb
sub
pop
dec
dec
inc
add
inc
sub
dec
sub
inc
sub
mov
xor
xor
and
and
xor
inc
movzwl
mov
movzbl
lea
test
jbe
add
inc
xor
inc
lea
inc
inc
inc
and
dec
inc
mov
and
add
mov
mov
xor
movzbl
or
sub
add
mov
and
inc
dec
mov
mov
inc
mov
inc
mov
mov
mov
mov
mov
dec
lea
inc
sub
movswl
dec
dec
jne
mov
mov
inc
add
inc
add
inc
xor
mov
mov
inc
dec
mov
mov
inc
dec
add
inc
sub
mov
mov
mov
dec
movzwl
test
jbe
mov
mov
dec
mov
add
lea
dec
inc
xor
imul
imul
xor
lea
add
inc
inc
sub
and
dec
mov
and
sub
and
mov
dec
mov
mov
dec
movzbl
dec
movzwl
add
inc
mov
and
mov
mov
mov
add
mov
movzbl
mov
dec
mov
inc
lea
mov
sub
mov
movzbl
mov
dec
add
imul
jmp
push
imul
mov
add
sub
movswl
add
mov
sub
dec
mov
lea
dec
mov
and
add
mov
and
movzbl
mov
dec
inc
inc
sub
mov
sub
mov
dec
movsbl
inc
inc
xor
add
inc
inc
mov
mov
mov
xor
inc
cmp
je
or
xor
inc
push
inc
call
call
mov
inc
call
call
mov
dec
add
sub
mov
lea
inc
ret
inc
mov
pop
mov
ret
push
mov
inc
inc
add
add
push
inc
imul
push
and
push
mov
push
dec
xor
mov
inc
dec
call
mov
push
lea
add
xor
sub
sub
add
neg
mov
mov
inc
inc
movzwl
mov
mov
movzbl
mov
mov
dec
lea
inc
inc
lea
dec
je
mov
or
mov
mov
add
movswl
mov
inc
lea
imul
or
repnz
sub
or
add
add
jmp
mov
movswl
dec
sub
lea
inc
mov
xor
add
dec
dec
sub
imul
mov
jmp
mov
out
mov
fisubrs
iret
pop
lock
popf
stos
js
stc
scas
daa
cmp
mov
arpl
sub
jg
jl
mov
insb
movsb
scas
xchg
shll
test
push
xchg
insl
cmpsb
daa
sar
hlt
stc
cwtl
or
pop
jg
movsb
inc
sub
jg
jmp
mov
stos
push
pop
lds
sub
lahf
mov
xchg
lret
lea
sbb
xchg
addr16
pop
roll
lock
mov
push
movsb
cmp
imul
xchg
push
adc
sub
out
mov
ror
aam
lea
dec
cld
xchg
in
pop
add
arpl
jnp
dec
fidivl
jns
push
push
scas
inc
in
cmpsl
into
leave
rclb
dec
stc
or
fdivr
fbld
popa
inc
stc
dec
test
and
jo
sub
pushf
shll
push
das
insb
and
dec
jp
push
fucom
js
fs
loop
push
inc
mov
ljmp
cwtl
sbb
add
out
repnz
xchg
pop
js
dec
into
push
mov
lahf
xchg
outsb
mov
push
scas
push
cmpsl
jns
or
sub
mov
fisubrl
dec
fcoms
test
scas
push
mov
leave
lock
fwait
dec
push
jae
mov
in
lcall
or
es
mov
pusha
fsubl
mov
mov
je
jmp
icebp
add
les
ds
dec
adc
int3
cmpl
pop
fidivrs
jb
rcll
arpl
div
jne
mov
push
cmpb
mov
xor
rclb
sub
test
adc
xor
jnp
and
add
and
sbb
or
test
jb
mov
pop
dec
sahf
adc
sbb
xlat
or
jno
test
jns
sub
cmp
sub
out
popf
in
iret
xor
pop
cmp
or
xabort
adcl
dec
jl
daa
push
mov
fmuls
loopne
and
sbb
sbb
dec
enter
arpl
inc
mov
cmpsl
imul
shr
sbb
call
dec
pop
or
dec
test
pop
ret
cmp
push
mov
sbb
mov
into
cmp
stos
xchg
push
idivb
dec
mov
inc
mov
aad
mov
bound
es
orl
fwait
jl
sub
int
into
int
mov
fwait
lea
ss
ret
push
xchg
lcall
cmc
xor
cli
mov
test
pop
mov
xor
aaa
test
mov
push
mov
and
je
rep
and
push
pop
cltd
loope
push
js
jb
pop
in
bound
mov
sub
sub
mulb
mov
push
sbb
inc
rcrl
loope
or
cmpsl
dec
imul
cmp
das
push
rcrb
mov
mov
and
inc
loope
scas
call
jmp
add
std
ret
push
nop
js
js
inc
enter
nop
push
sar
xlat
xor
jae
popf
xchg
xor
gs
fdivrl
stos
lret
and
mov
mov
sub
push
mov
pop
sub
das
inc
inc
adc
lods
mov
inc
es
jnp
out
rorb
sbb
xchg
xchg
pop
pop
or
mov
inc
popa
xor
mov
jp
rcr
nop
imul
mov
repz
repnz
add
jo
cwtl
out
and
cwtl
mov
mov
ljmp
mov
xchg
js
test
adc
cs
pop
cwtl
jne
cmpl
pop
xchg
cmp
mov
jg
dec
mov
leave
mov
test
pop
cmp
ds
test
dec
dec
pop
mov
out
std
xlat
out
sub
fstpl
js
mov
dec
aam
popf
jge
and
xor
adcb
std
das
arpl
sbb
movsb
cs
leave
mov
push
ja
xor
jmp
outsl
pop
daa
orl
sbb
push
ss
test
xchg
call
scas
out
pop
xchg
rorl
insb
jbe
imul
xchg
stos
fstpt
dec
shlb
ljmp
in
mov
mov
mov
push
fwait
movsb
int
adc
out
add
or
adc
jmp
jb
push
adc
mov
lret
rolb
sbb
cltd
icebp
pop
jns
fs
xchg
sbb
mov
jl
cmc
cmp
pop
xor
sbb
sub
fldt
cltd
cmp
push
mov
into
jns
jg
cvttps2pi
jo
mov
lock
icebp
nop
jecxz
inc
fisubs
popf
add
jo
lds
out
xor
inc
test
mov
jge
sbb
in
in
out
das
cltd
adc
cli
xor
cmpps
icebp
mov
push
sbbb
test
jno
pushf
ljmp
add
leave
test
dec
bound
mov
outsl
rorl
inc
scas
xor
daa
dec
aas
incl
push
sub
jmp
loope
pop
nop
dec
pop
sarb
mov
les
mov
repz
insl
insb
addr16
jbe
fsubs
jae
mov
fld
test
jl
inc
jno
dec
ds
mov
push
cmpb
pop
subb
cmp
mov
mov
push
pop
mov
pop
xchg
sub
repnz
inc
lock
xlat
iret
fucom
mov
xor
sub
mov
and
mov
movsl
sub
sahf
repnz
xchg
xchg
and
xchg
xchg
ret
fwait
jbe
mov
shlb
or
bound
xor
out
scas
stos
lea
movsb
sub
int
ljmp
maxps
adc
inc
sbb
out
mov
ret
push
test
enter
fdivl
add
mov
fwait
inc
sbb
push
or
test
leave
jb
cmp
pusha
sbb
jae
sbb
pop
subb
dec
aam
add
sti
stos
mov
andl
xor
sbb
lcall
mov
mov
pop
out
gs
push
mov
dec
in
jg
bswap
pop
in
movsb
or
adc
cmp
or
pop
push
xchg
jnp
call
mov
pushl
pop
adc
jnp
xchg
ds
mov
fsubp
leave
push
mov
mov
mov
lods
outsl
add
ret
dec
in
push
sahf
outsb
mov
push
repnz
mov
xchg
stos
push
mul
out
xlat
jbe
add
sbb
fucomi
lret
cwtl
daa
fs
lds
and
adc
add
stos
ss
les
push
out
stos
xchg
cwtl
ss
cmp
xchg
sub
mov
fdivrl
outsl
stos
into
in
loope
inc
stos
jb
xor
push
lods
pop
divl
loope
jae
cltd
out
stos
mov
sub
inc
gs
cs
push
push
xchg
fbstp
pop
stc
dec
lcall
mov
sub
lods
enter
jmp
out
sahf
fnstcw
mov
jecxz,pt
mov
insl
dec
adc
dec
repnz
add
shll
dec
lcall
dec
mov
cmpsl
dec
sbb
jmp
lods
into
fdivs
push
mov
addr16
daa
pop
int
mov
ret
mov
test
xchg
mov
arpl
mov
repz
xor
mov
lret
xor
das
fisubl
outsb
ret
xorl
push
das
jo
sub
cmc
or
cmpsb
loop
lods
push
push
cmp
rcl
adc
sbb
out
or
ja
cli
out
mov
xchg
fstpl
arpl
popf
and
dec
aas
mov
push
mov
arpl
in
dec
jbe
mov
out
call
inc
test
imul
mov
inc
stos
xor
call
outsb
push
icebp
arpl
sub
xor
inc
aaa
push
mov
lods
mov
cltd
mov
lods
adc
push
add
pop
mov
and
jg
stos
add
push
jle
lahf
orb
mov
into
xchg
fildll
outsb
test
outsl
andb
mov
rorl
and
rsm
mov
test
xchg
cmp
jge
arpl
inc
insl
jbe
jb
jmp
imul
lret
aas
fdivrs
fcompl
inc
stos
stc
loope
push
xchg
ljmp
sbb
out
mov
mov
xchg
and
shlb
mov
jb
cmp
mov
or
into
sbb
es
nop
loopne
mov
js
pop
aas
cmp
sub
out
pop
icebp
clc
xchg
ret
push
ret
repnz
push
aad
shr
fmull
jmp
mov
in
test
shll
push
inc
scas
inc
addr16
mov
fs
data16
adc
fwait
inc
or
xor
sbb
cmc
out
enter
int
pop
jle
ret
cltd
add
das
cmp
xor
fisttpl
dec
xor
push
sbb
and
cmp
pusha
shl
in
lret
dec
sub
mov
and
jno
pop
rcrl
mov
addl
stos
pop
inc
popf
mov
enter
in
inc
outsl
pushf
fwait
fwait
jecxz
mov
loopw
mov
scas
test
test
push
shrb
adc
jne
mov
jo
je
in
dec
lcall
push
rol
mov
je
inc
inc
sbb
ja
jns
xchg
mov
jae
lds
aam
cmp
push
lds
xor
push
mov
xchg
fildl
inc
out
out
out
cmp
pop
xor
pop
xorb
push
sbb
popa
nop
jnp
fwait
sbb
pusha
jg
mov
xchg
xor
add
cmp
not
adc
movsl
movsl
out
mov
in
sub
ja
fldenv
stos
push
inc
cltd
sbb
add
js
inc
xlat
fstpt
push
xor
aas
movsl
jb
push
pop
pop
std
mov
mov
nop
cs
cmp
or
xchg
sbbl
aaa
enter
mov
pop
dec
gs
jae
std
cmpl
adcb
in
ret
cmpsl
mov
dec
mov
sbb
push
fidivs
or
aaa
in
dec
or
push
sti
xor
dec
cltd
movsb
shlb
lcall
mov
cwtl
gs
sub
or
push
xchg
mov
jmp
push
insl
add
mov
add
mov
jecxz
fnstsw
inc
adcb
ja
jl
push
ljmp
or
decb
into
dec
shlb
dec
xor
push
add
xor
lret
or
jmp
iret
jge
inc
ss
cmc
xchg
mov
sti
jmp
dec
out
pop
sbb
xor
enter
mull
imul
cmc
pop
push
fidivs
pop
mov
add
jle
repz
push
fnsave
adc
inc
sbb
js
dec
les
xor
movb
out
mov
xchg
pop
mov
repnz
xchg
xorb
daa
mov
icebp
clc
repz
push
add
cmc
nop
push
inc
sarb
mov
mov
lock
dec
test
rcll
add
sbb
out
ret
jne
movsb
xlat
cmc
dec
data16
jecxz
fldenv
mov
add
push
pop
nop
add
sbb
out
sub
xchg
dec
out
inc
ficoml
je
push
int
mov
icebp
aam
cs
sbb
inc
cld
jge
mov
outsl
jne
add
mov
stos
ljmp
or
es
push
in
inc
pop
fidivs
sbb
or
out
repz
xor
inc
out
mov
xorb
vaddsd
roll
jnp
mov
mov
sub
jae
neg
jb
mov
clc
sub
jb
xchg
ret
test
pusha
sbb
jno
push
mov
mov
pop
and
mov
in
xchg
int
ljmp
out
dec
pop
push
ljmp
jmp
jl
das
addl
lds
ja
cmpsl
js
dec
cmp
lret
mov
sbb
jle
scas
orl
sti
adc
popa
std
popl
pop
test
rcll
dec
xchg
jns
stos
xchg
insl
roll
popa
jecxz
inc
pop
sbb
sbb
mov
mov
jbe
pop
in
sub
pop
fcmovu
sub
push
call
push
add
leave
mov
adc
mov
sub
nop
push
adcl
scas
sahf
int3
push
in
jb
into
sbb
shrb
push
pop
sub
push
cmc
std
mov
aas
or
sub
add
adc
pop
dec
sbbl
popa
gs
fsub
sahf
daa
push
jo
es
sbb
mov
xor
bound
lock
mov
popa
jmp
fisttps
pop
inc
adc
or
mov
push
cmp
lahf
mov
pop
aad
push
cwtl
insb
mov
adc
dec
mov
cwtl
pop
in
jnp
sub
xchg
sub
inc
outsl
jne
insb
adc
iret
mov
push
xor
cmc
add
mov
pop
pop
inc
adc
call
cmp
sub
add
sbb
lret
jno
jae
dec
cmpb
push
enter
frstor
jns
pop
jl
xchg
pop
mov
jge
bnd
dec
imul
dec
xchg
mov
sbb
push
xchg
cld
xor
daa
cmc
mov
xchg
xchg
mov
cltd
inc
sub
data16
cmp
ds
push
cmpsb
inc
nop
cli
jbe
fsts
mov
jmp
stc
or
lock
push
jmp
mov
push
mov
dec
lea
call
inc
movzwl
call
lea
push
lea
call
mov
or
inc
dec
add
inc
call
lea
lea
imul
lea
movswl
mov
inc
movsbl
lea
mov
inc
lea
inc
call
or
add
mov
movzwl
add
call
inc
call
inc
mov
add
add
add
imul
sub
imul
pop
dec
mov
sub
add
or
pop
dec
inc
pop
dec
sub
mov
mov
pop
mov
dec
mov
dec
inc
lea
mov
sub
pop
lea
add
pop
sub
dec
mov
mov
sub
call
or
mov
imul
mov
ret
add
dec
push
dec
dec
push
and
imul
push
dec
mov
push
add
or
push
dec
mov
mov
add
inc
push
inc
ret
push
add
push
mov
or
inc
add
push
lea
inc
mov
call
pop
ret
jmp
add
dec
pop
pop
ret
push
mov
dec
dec
mov
add
dec
dec
inc
dec
dec
mov
imul
sub
add
movswl
sub
inc
add
add
sub
lea
add
add
sub
lea
add
pop
ret
sub
and
mov
dec
sub
mov
mov
mov
mov
dec
or
mov
xor
movsbl
xor
add
sub
mov
mov
mov
inc
inc
xor
mov
dec
inc
add
cmp
jb
dec
push
add
imul
push
mov
sub
push
inc
add
xor
sub
dec
xor
xor
inc
xor
lea
mov
push
xor
mov
push
mov
movzwl
pop
movzwl
imul
inc
movzwl
sub
lea
dec
mov
inc
dec
xor
add
dec
mov
dec
lea
mov
lea
inc
movzbl
dec
mov
add
or
add
imul
inc
add
imul
movzbl
movzwl
add
xor
mov
dec
dec
inc
inc
sub
mov
inc
inc
jmp
add
add
clc
or
add
ret
add
add
add
clc
sub
adc
xchg
add
pop
add
andb
adc
add
roll
push
cld
insb
stos
push
popa
icebp
jecxz
rcr
cmpsb
sbb
aas
movsl
ret
cmpl
icebp
push
lret
iret
lahf
push
loopne
into
clc
adc
xor
or
scas
pop
push
cmp
xchg
push
lock
sarb
sub
iret
and
aas
testl
xchg
std
sbb
inc
sbbb
inc
jg
fistpl
and
sti
pop
shrl
jno
mov
ret
pop
jne
insl
or
push
xchg
jmp
pop
dec
mov
pusha
jl
ss
mov
mov
pusha
call
inc
mov
fdivs
out
add
jl
mov
test
dec
sub
cwtl
punpckhdq
shrb
jle
cli
push
ficoml
add
xchg
xchg
cmpb
jnp
mov
and
pop
sub
sbb
shl
xchg
outsb
add
mov
mov
jp
mov
aam
mov
leave
in
push
into
xor
fisubl
addr16
fisubl
push
sbb
dec
lret
add
dec
int
mov
das
lods
addr16
and
pop
lods
stc
addr16
cmpsb
adc
dec
iret
mov
inc
out
jp
test
sbb
pop
sub
mov
imul
pushf
or
aas
fdivs
push
cmp
ret
pop
cmp
data16
push
jbe
push
sbbl
push
push
pop
sbb
lcall
or
dec
add
in
pop
push
and
stos
inc
inc
xor
sbb
dec
sbb
pop
stos
dec
dec
cmp
repz
jne
sub
xchg
jno
mov
or
push
jbe
adc
adc
add
fimuls
fistpl
mov
mov
cmp
sti
mov
lcall
repz
js
mov
shlb
sub
lret
sub
xor
pop
add
jp
test
inc
movl
lret
cli
bound
sub
icebp
pop
insl
pop
shll
sub
ja
inc
jne
sbb
orl
lods
dec
iret
jnp
xchg
sbb
lret
adc
jge
imul
lret
sub
sbbb
mov
ds
push
cmp
icebp
xor
out
jp
daa
cmp
loope
mov
sahf
inc
sbb
pop
adc
int
xor
aad
int
movsl
mov
sar
fucomip
jmp
or
fs
mov
mov
adc
ret
stos
jg
fstps
call
and
lds
sahf
cmp
mov
add
add
bound
fnstcw
inc
rorb
sub
mov
icebp
xor
mov
ret
pop
inc
xor
inc
push
and
dec
lock
mul
test
out
pop
arpl
out
push
outsb
mov
sbb
push
xor
jne
lods
stos
sbb
aam
cmp
neg
or
int3
mov
outsb
mov
ret
gs
sbb
push
incl
and
arpl
inc
xchg
jne
adc
fs
fs
insb
iret
sbb
cmp
loop
mov
push
sbb
ja
mov
push
cltd
inc
addr16
push
loop
push
inc
mov
jl
sbbb
mov
clc
add
cld
xchg
sbb
add
jecxz
call
aaa
outsl
outsl
mov
fistpl
aad
push
sti
hlt
push
adc
push
or
mov
sub
cmpsl
jno
into
xchg
lods
clc
jne
add
inc
fistps
jns
hlt
lret
hlt
es
pop
push
sbb
insl
pop
lahf
cmc
lcall
mov
mov
out
frstor
jecxz
sbb
fsub
pop
mov
gs
scas
xor
fmuls
xor
arpl
xchg
add
stc
add
jg
sub
jecxz
std
inc
lock
mov
adc
pop
mov
jg
shl
xlat
push
les
lret
je
pop
in
lds
or
xchg
mov
cmp
push
adc
rolb
add
fldenv
push
bound
gs
sahf
inc
out
pop
repz
mov
mov
or
sbb
mov
lahf
and
adc
pop
outsl
pop
pop
cmpsl
sar
arpl
jmp
mov
scas
mov
iret
add
je
cld
mov
test
mov
push
add
enter
movsb
testb
jmp
jmp
dec
xor
imul
test
je
addb
adc
pop
push
cmp
lea
shlb
js
insl
mov
orb
jp
and
mov
cmp
loop
mov
cmp
pop
in
jb
jb
fadd
xchg
test
out
pushw
xchg
xchg
rclb
je
mov
faddp
mov
aaa
fdiv
adc
jl
repnz
pop
mov
movsb
push
fnstenv
in
cmp
mov
cmp
xchg
push
fs
add
xlat
roll
jne
nop
mov
push
cwtl
orb
push
push
lret
aad
push
scas
pop
jmp
mov
push
jo
pop
push
xchg
and
cld
jmp
sysret
sub
insl
rol
orb
ds
scas
aam
js
rcrb
inc
push
call
or
sbb
adc
mov
xor
jne
lret
in
in
push
mov
iret
sub
in
cwtl
or
push
xor
jo
dec
clc
inc
xchg
nop
push
jb
jns
lret
jae
or
cmpsb
test
or
dec
mov
mov
xchg
int3
int
dec
fsts
dec
adc
jmp
cmp
adc
mov
repz
pop
mov
cltd
je
out
imul
sub
sub
cmc
and
lahf
lock
push
pop
enter
inc
dec
cmp
scas
jb
out
add
fwait
sub
ret
sahf
add
pop
je
test
adc
or
adc
adc
add
dec
scas
sarb
subb
cltd
popl
cmp
cmova
mov
adc
jbe
dec
mov
test
rorl
testl
and
test
ja
push
or
fmulp
or
cmp
xchg
or
xor
mov
fwait
xlat
pop
adc
bound
aad
and
push
out
pop
in
lcall
lock
adc
mov
jno
loop
mov
jmp
jbe
inc
mov
jp
fsts
adc
adc
jp
xor
or
int3
jns
imul
pop
out
fisttps
js
mov
mov
inc
and
loopne
push
mov
lret
cli
lods
ss
sbb
or
dec
dec
xorb
into
movsb
mov
lahf
mov
mov
cmp
jecxz
push
repz
out
jae
popf
dec
xor
sahf
mov
add
test
insb
push
add
fldenv
mov
mov
pop
cmc
pop
adc
mov
ljmp
mov
sub
in
and
fisubrl
and
test
stos
ljmp
cltd
jecxz
adc
incl
rorb
mov
jb
inc
xchg
es
add
dec
push
out
aas
adc
std
fldenv
inc
mov
aam
add
cs
add
mov
adc
lods
and
cmc
out
iret
add
aas
jle
pop
jae
jbe
xchg
mov
sahf
dec
and
aam
popa
lods
jl
inc
inc
mov
test
cmpsb
outsb
iret
stc
lods
add
jle
test
sbb
sub
jecxz
fistps
in
hlt
xrelease
ret
jo
mov
mov
or
sti
add
nop
call
add
sub
out
mov
in
xor
mov
cwtl
cmp
jmp
gs
mov
fs
setge
daa
aas
popf
push
insb
lea
ret
fcom
into
sahf
hlt
dec
leave
inc
push
stos
ja
xor
rdpmc
filds
das
pop
ds
push
fsubrs
jo
out
dec
mov
xchg
jl
cmp
jmp
scas
loop
out
idiv
sahf
jp
push
push
jbe
add
mov
lods
outsb
dec
adc
repz
sub
mov
dec
test
push
stos
push
mov
cmp
add
xchg
fsubl
dec
mov
jno
mov
sahf
mov
inc
neg
rorl
out
mov
imul
dec
divl
cmp
add
ret
adc
incb
inc
outsl
inc
popa
cmp
and
je
lret
and
popf
lahf
lods
or
sbb
mov
and
xor
movsl
rcrl
movsb
ja
lcall
dec
nop
mov
loop
dec
mov
sub
mov
fld
pop
fs
repnz
je
xor
jnp
xor
add
fcoml
test
sti
xchg
or
mov
xor
in
inc
xchg
cltd
andb
xchg
or
ja
xchg
jp
pop
fninit
test
sbb
stos
ret
cmp
inc
jge
mov
pop
aad
jmp
movsb
into
cmp
adc
cmp
push
fisttpl
loop
lock
int3
shlb
lcall
push
mov
into
sbb
sahf
xor
dec
dec
mov
call
cmp
and
andb
push
xchg
dec
faddl
fcmovb
sbbb
outsl
je
scas
and
jp
pop
push
hlt
js
push
or
jmp
mov
adc
adc
out
and
popa
pop
mov
mov
push
pop
and
or
lahf
push
lcall
or
pop
inc
xchg
test
inc
lock
push
cld
int
jle
pop
dec
insl
sub
mov
inc
pop
shlb
push
lock
dec
sbb
shlb
or
push
sahf
repz
inc
sbb
popf
fmuls
fsubs
fmuls
and
loope
mov
imul
dec
shl
addr16
bound
and
dec
andl
pop
bswap
sar
jg
outsl
es
stos
add
xor
sub
orb
pop
negb
sub
fldt
pop
pop
xor
stc
daa
cmp
shll
or
jo
push
jmp
push
mov
xor
aas
add
dec
movsl
sub
jns
lcall
mov
xor
xchg
je
mov
ja
mov
test
xor
test
ljmp
sub
imulb
dec
xorl
cld
xchg
inc
enter
dec
sbb
cmp
jmp
mov
fs
sub
sbb
mov
mov
subl
dec
and
add
add
lods
call
push
enter
scas
inc
mov
mov
push
sbb
cmc
aam
aad
dec
aam
mov
pop
stos
arpl
rorl
aam
repz
cltd
xchg
cmp
scas
leave
stos
push
mov
repnz
xor
xchg
pop
cmp
inc
stos
mov
push
bound
scas
jp
mov
xchg
push
incl
push
push
mov
fwait
pop
pop
in
cmp
dec
dec
pop
xchg
insl
sbb
cmp
cwtl
xchg
dec
jge
jl
add
fbstp
ljmp
push
push
scas
sbb
nop
out
aam
inc
inc
cmp
mov
in
aad
and
dec
addr16
rol
scas
js
cwtl
and
jmp
xlat
subb
inc
mov
popf
jbe
or
int3
fld
lods
xchg
lods
push
fisttps
inc
pop
xchg
cmpsl
xchg
xor
and
cmp
js
in
xchg
sbb
push
int3
cwtl
xchg
test
jns
dec
lahf
andl
mov
scas
outsl
jno
sahf
cmp
cld
enter
sub
stos
imul
fcmovb
jp
std
jmp
push
push
mov
lcall
hlt
shll
dec
lods
cmp
imul
popl
cld
flds
or
mov
dec
imul
or
es
cmpsl
sub
adc
push
push
lea
jnp
mov
pusha
and
in
gs
sub
mulb
icebp
fwait
xor
and
push
lock
mov
je
iret
xchg
jg
out
dec
xor
add
mov
add
mov
push
pop
fisttpll
jmp
dec
xchg
push
sub
enter
and
mov
pop
pop
sub
adc
lret
cmp
aaa
xorl
add
lock
into
pop
mov
push
cmpsb
pop
mov
jnp
std
in
mov
mov
mov
mov
decb
aas
sahf
mov
ret
in
mov
aad
push
mov
jecxz
jmp
sbb
mov
cltd
mov
fimull
aas
adc
aad
sbb
cli
scas
push
inc
pop
xchg
xor
sub
xchg
dec
push
pushl
ss
add
dec
aam
aas
pop
pop
xor
sbb
xchg
mov
test
sbb
cmp
lcall
pop
or
adc
inc
lret
jmp
test
insb
and
mov
xchg
repnz
movsb
notb
xor
call
shl
add
xchg
add
mov
in
push
dec
add
outsb
sbb
fisubrl
add
and
push
fwait
mov
sbb
xor
inc
dec
adc
lahf
fldt
loop
cmpsb
sti
jge
sbb
pop
enter
pop
push
jmp
testb
ret
testl
push
mov
pmaxub
sbb
loop
cmp
or
int
insb
cmp
lds
inc
mov
mov
push
stos
fs
jo
sbb
sub
mov
cmpsb
shlb
lea
adc
pop
cmp
push
loopne
test
dec
push
stos
mov
pop
lcall
sbbl
pop
sarb
jo
mov
jb
cmp
aad
push
cmp
mov
sahf
loopne
setg
loope
lret
shl
mov
shll
test
or
xor
int3
inc
mov
leave
cmp
adcb
jno
data16
enter
xchg
jle
push
mov
xchg
inc
add
jb
insl
mov
mov
in
mov
jno
outsb
jno
lods
jp
push
cmpsl
sbb
cld
out
and
add
sbb
ret
mov
cs
push
jg
enter
ret
ja
add
xchg
test
jae
cmp
mov
unpckhps
loop
jnp
sub
sub
cs
jo
call
mov
add
sti
ret
hlt
push
inc
fistl
mov
or
inc
popl
lea
das
or
enter
test
rcl
je
lods
jecxz
in
pop
jp
shr
push
xor
sub
and
cmp
frstor
rorb
icebp
mov
push
jle
into
hlt
stos
insb
aaa
add
fidivrs
decb
in
lds
inc
jmp
xor
add
sbb
jp
pop
or
stos
call
and
xchg
lds
and
addr16
inc
inc
clc
mov
aaa
or
in
shlb
std
fisttps
test
repz
adc
mov
cli
push
test
sbb
sub
and
cli
fsubrs
xchg
jmp
data16
subb
xchg
pushf
mov
subl
xchg
test
mov
pop
call
xchg
xchg
pop
push
mov
stos
inc
ss
pop
mov
cwtl
loopne
push
into
push
jne
jg
or
into
adc
jle
test
popa
push
imul
cmp
push
aaa
push
ret
data16
xchg
dec
inc
push
cmp
sbb
sub
sub
movsl
arpl
mov
pusha
jle
test
sub
push
cli
push
dec
repz
xor
cmp
lea
fsubs
jmp
enter
cmp
repz
sbb
jmp
sarl
mov
loopne
ljmp
ss
inc
mov
or
lcall
inc
xchg
insb
fdiv
ljmp
dec
pusha
and
stos
sbb
cli
and
stos
mov
jp
les
ljmp
add
inc
stos
cli
cmp
and
or
int3
mov
std
xor
pop
lods
pop
cmp
adc
push
sarl
mov
push
bound
leave
out
pcmpeqb
idiv
add
cltd
sbb
pop
mov
jae
pop
out
pushf
mov
jp
out
sbb
jbe
xchg
xchg
xor
std
je
scas
pop
sbb
in
test
imul
aaa
cmpsl
dec
cmp
fists
pop
das
ret
mov
mov
add
mov
scas
scas
int3
sub
pusha
mov
imul
pop
xor
in
mov
insb
or
dec
jge
test
cmp
in
mov
pop
sahf
sbb
and
jp
push
loop
lods
loopne
cld
cmpsb
mov
sub
xchg
or
imul
rcrb
adc
fbstp
sub
mov
cmpsb
inc
stc
or
inc
dec
int3
or
cmpsl
cld
aaa
hlt
xorb
fldenv
or
sbb
stc
int3
adc
out
jnp
inc
mov
jb
xchg
xor
sub
mov
fstl
lea
cmp
repz
loopne
push
jb
jnp
fildl
fmuls
xor
ret
fcomps
pop
pop
sub
ret
push
aaa
addr16
mov
mov
lret
movl
cmp
pop
pop
add
push
xchg
or
xchg
sahf
pop
jmp
cmp
push
jnp
stc
adc
jne
sti
mov
loope
faddl
cmpb
addr16
bswap
or
inc
and
sysexit
stos
stos
icebp
ja
ja
cwtl
cld
sbb
movsl
xor
add
push
dec
popa
aas
lods
adc
rol
test
seta
aas
pop
fimuls
xor
leave
mov
xor
inc
pop
or
clc
xor
and
xor
popa
jno
incb
lock
adc
loopne
xor
fists
jmp
mov
sub
popf
or
inc
pop
add
fidivrs
mov
mov
cld
enter
rcrl
adc
add
mov
rorl
aad
pusha
hlt
xchg
xchg
sub
push
mov
jmp
jg
sbb
xchg
ret
inc
lods
pop
fxch
mov
jno
ss
shrb
stos
sub
push
testl
shll
mov
clc
dec
cmp
mov
ds
stos
sbb
outsl
decb
cmc
jp
aad
push
jnp
xlat
iret
add
popf
sub
icebp
lahf
shrb
cs
and
aam
hlt
orl
adcl
fsubr
jle
add
mov
sti
sub
cmc
pop
push
scas
lea
lret
repnz
adc
inc
xchg
test
rorl
ljmp
rorb
cli
loope
sbb
aas
add
jp
jmp
aaa
movsb
nop
inc
sub
dec
or
jbe
outsb
pusha
inc
out
or
gs
imul
jns
mov
mov
mov
scas
mov
scas
or
push
mov
iret
push
pop
pop
add
push
mov
adc
mov
xchg
dec
cld
mov
out
xlat
out
xor
test
add
aam
jecxz
sub
mov
fisttpl
and
aaa
sub
inc
jb
inc
negl
sbb
repnz
pop
pop
mov
dec
mov
sub
inc
icebp
out
call
dec
aam
or
xorl
decb
aad
loope
cmpsb
jb
mov
sbb
jecxz
lret
xchg
in
jbe
shlb
cmp
add
dec
jae
pop
push
cld
pop
bound
orb
pop
repz
cmp
les
pop
daa
push
jmp
je
mov
adc
sahf
xchg
in
enter
fnstsw
ret
add
mov
adc
lret
cmpsb
jle
icebp
aas
mov
mov
add
fstps
mov
stos
cmp
pop
adc
sbb
add
mov
aaa
dec
movsb
in
jecxz
mov
inc
xchg
fs
ret
scas
shlb
mov
mov
jmp
mov
repnz
xor
dec
jbe
out
inc
jno
fprem
xchg
or
lret
pop
divl
aad
pop
dec
sbb
test
jne
arpl
dec
push
cmpsb
mov
jle
pushf
addb
out
adc
in
push
jae
scas
xor
and
mov
cmp
outsb
bound
xchg
and
insl
adc
xor
sub
mov
mov
negb
test
push
test
icebp
and
push
data16
push
lret
test
inc
sub
sbb
cli
xchg
fistpll
rolb
add
xchg
mov
sbb
inc
xchg
negb
adc
nop
hlt
xor
add
pop
lret
imul
les
push
xchg
repnz
xor
shrl
push
add
sbb
notl
arpl
test
std
inc
icebp
loope
sub
mull
in
mov
outsl
sarb
adc
push
in
scas
push
push
or
xchg
pop
inc
mov
adcb
push
mov
inc
inc
lahf
pop
or
and
jns
js
daa
jmp
sbbl
scas
and
aad
and
daa
mov
or
orb
or
xor
dec
pop
mov
adc
in
jbe
adc
pop
aam
lahf
daa
shlb
pop
scas
adcl
lret
insl
faddl
jg
leave
movsl
js
pop
dec
icebp
jge
pop
dec
ret
ficomps
js
insl
in
lea
push
mov
pop
mov
xchg
out
adc
ss
push
mov
ds
dec
int3
dec
adc
mov
push
jl
scas
xchg
dec
mov
test
sub
xor
mov
int
das
inc
stos
cmpsb
lret
jge
add
mov
icebp
lods
cmp
pop
push
xlat
xorl
xorl
out
cmp
test
push
lea
jb
mov
sbb
stos
sub
in
mov
repz
mov
pop
adcb
daa
outsb
cwtl
int3
xor
or
insl
add
lret
cltd
xchg
sbb
testb
jp
mov
stos
adcb
rclb
aas
xchg
loope
pop
pushf
incl
cmp
add
dec
mov
repz
ret
dec
xor
sub
fcompl
test
adc
cmpsl
xchg
scas
mov
xlat
mov
xchg
out
in
adc
inc
loope
push
gs
mov
repnz
and
bnd
rcrb
adc
push
jg
repz
ss
aas
in
psubd
jne
push
ljmp
dec
inc
sbbl
xor
scas
clc
add
or
pop
or
mov
add
add
push
ljmp
cmpsb
mov
cmp
ficoms
xchg
es
aad
pop
xor
pop
shlb
mov
popf
cli
xchg
rol
orl
inc
lret
mul
mov
and
mov
cmc
aaa
es
or
lea
movsl
xchg
mov
push
xlat
sbb
pop
or
mov
aaa
aaa
or
inc
daa
loopne
lock
mov
ret
mov
shrl
cmp
xlat
push
push
push
mov
leave
sub
lahf
mov
imul
xchg
mov
xlat
std
push
jl
int
pop
imul
cmpsl
mov
fidivrl
mulb
aam
ret
out
jb
push
sub
mov
int
mov
int3
xchg
sub
sbb
mov
or
dec
subb
subb
mov
push
fdivs
adc
outsl
lcall
repz
push
xchg
int
mov
mov
test
xchg
call
test
jle
push
adc
sbb
fcoml
stos
add
add
jmp
cltd
test
lods
in
aas
dec
lcall
dec
sub
popa
adc
xchg
outsl
mov
cwtl
cltd
out
mov
ja
lods
jae
xor
or
ds
adc
das
ret
das
add
adc
xchg
sub
add
add
mov
fisubs
int3
xchg
pop
push
lods
adc
movsl
call
and
mov
mov
mov
jmp
jecxz
mov
xchg
movq
sbb
shrb
in
sub
dec
int
popa
test
xchg
cmp
out
fucomi
ret
loopne
das
popa
adc
popa
test
pusha
sbb
add
pop
fidivl
xor
and
jge
lahf
or
in
lods
in
shlb
bound
cld
pop
xchg
jo
shlb
and
inc
repz
and
or
lret
xchg
push
pop
loop
add
insl
inc
ja
mov
imul
repz
dec
popl
insb
mov
pusha
shlb
pusha
inc
test
imul
adc
aam
sahf
push
test
movsb
out
mov
jl
into
jae
or
ret
clc
test
xchg
pop
lahf
push
cmp
mov
outsb
lcall
in
scas
insl
jo
mov
push
fildll
mov
lcall
xor
xchg
mov
sub
mov
mov
jl
xchg
cmp
and
push
ja
cmp
lea
sar
lahf
in
ror
mov
std
int3
in
xor
mov
xchg
pop
push
push
or
mov
inc
xor
xchg
inc
sub
push
in
nop
test
jmp
mov
mov
stos
push
sbb
sub
or
adc
cmc
adc
mov
dec
test
je
cltd
sub
cmpb
nop
inc
aad
push
aaa
call
leave
jge
fsubs
fs
js
xchg
aam
test
cmp
xchg
mov
add
mov
and
int
push
jle
push
aaa
pop
scas
mov
and
dec
xchg
push
pop
xchg
xchg
push
imul
or
mul
mov
dec
add
ffreep
shll
pop
ret
xchg
lods
xor
push
ret
xor
sub
into
ss
xor
inc
fbld
mov
jo
xor
mov
inc
push
xor
sar
cmpsl
mov
sbb
or
or
cmp
jg
hlt
nop
out
aaa
push
dec
sub
shl
push
pop
movb
jl
or
jecxz
jle
pop
add
push
fucomip
mov
pop
jae
xchg
mov
push
scas
dec
cmp
int
pop
repz
popa
roll
iret
jno
sub
movsl
jbe
mov
in
mov
jl
aad
inc
subl
test
mov
movsl
adc
out
outsl
decl
rcll
dec
out
mov
cli
xchg
std
inc
subl
cwtl
mov
push
cmpsl
test
ljmp
into
sahf
fs
gs
inc
jge
insl
mov
pop
mov
lret
mov
ljmp
pop
aas
int3
popf
xchg
inc
subb
xchg
pop
cmp
pop
lods
add
pop
or
aad
inc
sbbl
cli
inc
arpl
cmpsb
lods
popa
lret
cld
jb
push
lock
jle
or
or
shll
mov
xchg
gs
jp
arpl
inc
imul
dec
mov
mov
mov
push
mov
inc
jbe
mov
jg
sub
fsub
ja
das
sahf
cmp
stos
arpl
sub
or
test
jbe
lock
push
aaa
sub
dec
push
fmull
sbb
pop
push
pop
lcall
ss
ja
ja
dec
lods
jge
or
in
int3
and
loope
mov
mov
sub
shr
dec
test
lcall
xor
cmp
mov
xchg
lods
out
fs
nop
in
jno
push
adc
adc
push
mov
mov
ret
inc
sub
jo
mov
inc
mov
mov
mov
out
in
mov
jb
sub
movsl
fistpll
sarl
or
pop
mov
in
std
pop
and
add
stos
jns
std
aad
or
jp
mov
imul
or
dec
push
movsb
fdivl
pop
insb
movlhps
pusha
dec
inc
stc
roll
xor
jno
mov
sahf
mov
leave
pop
addr16
jns
and
dec
dec
push
xchg
jmp
mov
xlat
sbb
adc
mov
mov
insl
out
xor
and
popf
push
add
sarl
out
andb
leave
xchg
fadd
les
push
add
cmp
mov
in
sbb
cmp
dec
movsl
push
xchg
ficompl
pop
jecxz
jle
lcall
ja
andb
fdivs
add
out
xlat
jl
xchg
aad
sarb
push
inc
cmpsl
xchg
xor
and
push
push
and
mov
je
and
fwait
rorl
push
jo
xor
and
push
fdivl
push
jae
fldl
loope
adc
popa
test
xlat
ja
movl
or
icebp
nop
cmpsb
mov
or
xchg
stos
dec
jge
lods
sar
xchg
sub
sarl
movsl
mov
inc
xchg
and
push
mov
notl
test
jmp
cmpsb
outsl
cli
push
push
fldcw
sbb
jnp
sbb
scas
cmp
cmp
adc
addb
dec
repz
cmp
or
mov
adc
int
sub
pop
jo
jl,pn
push
insl
mov
movsl
mov
xor
cmp
ret
jmp
sbb
mov
push
sarl
jnp
dec
in
test
andl
test
iret
mov
aas
jne
mulb
add
xchg
repz
sub
shlb
cmp
icebp
xchg
aad
out
mov
sti
pop
add
outsl
mov
sbb
mov
scas
sbb
fldt
mov
out
mov
pop
lahf
sbb
scas
mov
testb
ja
inc
iret
xchg
fstp
xchg
push
mov
ds
pop
cmpb
jb
ss
es
fisubl
cmc
pop
jmp
sbb
jb
lds
imull
push
push
pop
insb
les
pop
mov
aas
test
repz
push
jp
push
out
cmpsl
arpl
sbb
and
jb
test
pop
or
add
jl
cs
cmp
mov
cli
add
cld
int
or
xor
call
sub
jnp
mov
ret
les
fisubrs
jno
es
jo
test
inc
mov
dec
idivl
ficoml
jo
leave
test
mov
addr16
leave
mov
adc
jge
pop
inc
lcall
fs
lock
test
gs
in
dec
out
std
aam
fldenv
fwait
test
orb
and
lods
leave
pusha
cmc
mov
cmc
mov
sub
xchg
test
push
or
jl
in
fisubl
or
jl
mov
out
ja
sbb
out
aam
push
or
xor
push
fwait
mov
scas
dec
scas
sbb
lea
cli
imul
test
adc
inc
sub
mov
xor
adc
inc
push
cltd
cmp
jno
outsb
add
or
out
testl
fwait
std
lods
addr16
cltd
lods
push
enter
ja
cmp
dec
rcr
sbb
pop
or
jg
aas
ffree
inc
dec
ret
xchg
sub
icebp
fidivl
or
or
ds
push
xchg
insb
xchg
adc
or
cmp
pop
imul
pop
rcll
test
sub
out
stc
and
incb
xchg
mov
ja
or
ret
mov
scas
repz
jecxz
cwtl
inc
mov
rorb
sub
inc
sbb
mov
jae
inc
cld
push
mov
xchg
sub
shrl
lea
std
rolb
fs
or
loope
xchg
add
gs
jl
std
mov
push
loope
mov
pop
stc
or
inc
lahf
jo
les
jb
push
scas
cli
test
sbb
fstpl
imul
idivl
es
or
decb
sub
test
inc
and
mov
inc
scas
ss
mov
cmp
dec
aaa
pop
or
or
fstpl
cwtl
or
scas
and
fadd
cltd
xor
shll
in
lcall
popa
mov
lret
jo
xlat
inc
push
mov
cmpl
pop
mov
fstl
dec
lea
cltd
jmp
mov
lcall
cmpsl
int
dec
es
fwait
xchg
mov
jg
adcl
cwtl
or
out
loopne
push
sahf
dec
inc
cmp
or
inc
test
push
pop
daa
mov
nop
addb
fisubl
loope
mov
inc
hlt
xchg
clc
popf
ret
jge
sbb
scas
mov
stos
call
xor
jo
stos
push
orl
jecxz
repnz
scas
fcomp
ret
std
outsb
shrl
mov
jno
add
lods
jnp
sub
ljmp
je
in
cmp
inc
mov
or
pop
adcl
push
mov
sbbb
aam
ds
mov
jp
faddp
test
js
lock
jl
pop
test
ret
pop
and
stos
out
imul
xor
bnd
testl
add
cmpxchg
loopne
xor
adc
daa
out
ja
jl
fwait
pushf
ror
mov
in
fs
fwait
lea
jns
add
inc
mov
das
hlt
xor
ficoms
sbb
leave
xchg
ffreep
popf
jne
mov
push
lret
pop
xchg
xchg
adc
arpl
repnz
loope
nop
sti
scas
mov
cmp
lahf
jmp
loopne
cltd
je
arpl
mov
outsb
xchg
lret
sub
pop
insl
jae
mov
dec
add
dec
pmulhuw
cmp
mov
das
jns
lods
jns
in
mov
jg
push
pop
sbb
or
dec
imul
push
lgs
mov
lcall
cmp
xchg
mov
mov
aad
xchg
es
rcll
mov
jno
mov
iret
pop
mov
lock
xchg
xchg
cmp
lret
test
mov
sti
jle
adc
inc
sub
xor
bound
lcall
sub
adc
aam
sub
aad
lcall
jno
sub
cmp
mov
jmp
scas
ljmp
mov
push
pop
dec
inc
loopne
in
mov
xchg
out
jns
test
pop
mov
out
frstor
out
loope
mov
add
sahf
mov
clc
in
push
jns
pushf
ss
js
push
push
push
mov
add
pop
addr16
sub
xor
pxor
push
mov
add
push
mov
xchg
subb
xor
sub
lcall
in
ret
cmp
add
mov
pop
sbb
mov
lods
sahf
movsl
mov
fwait
dec
sti
and
xchg
ljmp
or
pop
jl
pop
mov
je
jmp
in
sub
pop
ja
mull
mov
aad
sahf
add
adcb
and
cmpsl
xchg
data16
inc
loop
jns
mov
jb
mov
or
push
ja
jp
aas
dec
cmpl
in
add
and
jmp
js
test
sub
arpl
leave
jo
cs
imul
jle
pop
fisttpll
jno
lods
and
popf
xchg
sub
push
mov
add
adc
repnz
push
xor
xor
idivb
nop
loope
shlb
stos
in
clc
jge
or
inc
mov
pop
leave
andl
mov
jecxz
mov
sbb
xchg
cli
sar
lret
decb
fistpl
xor
dec
xor
outsl
add
mov
test
adc
sub
push
push
pop
test
fidivl
cwtl
push
and
inc
sarl
testl
jle
mov
mov
dec
call
sahf
dec
loope
push
xor
cmpsb
fistl
xchg
sub
shrl
push
daa
jecxz
iret
jmp
daa
mov
cmp
sbb
dec
aam
cmpsb
cmc
pop
jno
sar
cmpps
sbb
lods
xchg
mov
pusha
pusha
xchg
inc
push
mulb
sub
sub
aaa
test
test
or
dec
cmp
jbe
push
test
and
pop
mov
xchg
cmp
xor
call
movsl
fmuls
lcall
das
aaa
stc
mov
cld
pushf
mov
subl
fstps
outsl
push
or
and
mov
test
ret
mov
pusha
lahf
jg
sbb
stos
push
les
cmc
mov
inc
aaa
and
ss
es
adc
and
sbb
ja
push
pushf
adc
loop
adc
mov
sbb
lret
mov
movsb
sarl
and
jmp
push
sbb
inc
outsl
or
mov
test
test
pusha
lret
adc
xor
pushf
sub
out
sbb
jne
push
jbe
out
stc
cltd
jge
lret
lret
js
inc
jae
mov
ret
sub
adc
add
inc
dec
cmpsl
ljmp
pop
lahf
inc
pop
sub
adc
scas
test
lds
cs
clc
jecxz
movsl
adc
stos
dec
popa
fildl
out
xor
sub
xor
xchg
sbb
out
clc
out
loope
cltd
repz
imul
pop
lock
mov
dec
test
mov
repz
mov
fimuls
inc
sti
icebp
sub
les
mov
aad
outsl
push
jno
mov
mov
xchg
jl,pt
adcl
push
rol
xor
icebp
push
pop
add
dec
adc
mov
inc
icebp
iret
data16
scas
adc
inc
cmp
xchg
xor
repnz
sub
adc
ret
pop
push
mov
pop
jns
mov
mov
iret
icebp
lcall
rorb
add
mov
xchg
insb
pop
repnz
in
je
cmp
test
test
insl
lea
ret
push
sbb
fnstenv
mov
xchg
mov
int
add
jge
cmp
shlb
popf
es
jne
pop
inc
and
fbld
cmp
xor
add
repnz
dec
test
scas
fs
or
jmp
outsl
xor
jecxz
sub
add
loope
adc
xchg
dec
inc
and
push
pop
icebp
mov
mov
mov
push
mov
mov
fstps
int3
inc
mov
adc
adc
js
in
push
lock
stos
mov
cs
sub
cmpsb
sbb
sbbb
jno
mov
and
ljmp
hlt
gs
fcomps
mov
inc
jl
sbb
jo
gs
int
jg
enter
adc
lea
les
rorb
rol
pop
scas
mov
loopne
and
mov
pop
out
aaa
stos
aaa
xchg
push
or
dec
jecxz
test
cmc
push
flds
pop
mull
js
jl
fcmovu
xor
std
lcall
icebp
xor
xor
adc
mov
xor
push
sti
addr16
lcall
sbb
ja
in
dec
or
xchg
xlat
nop
pop
or
ret
add
xor
jg
sub
ss
das
call
push
addr16
mov
inc
aaa
pop
xor
pop
iret
mov
mov
daa
cmpsl
test
in
pop
sub
inc
pushf
adc
mov
mov
xchg
enter
xor
daa
stos
mov
lea
add
sub
ds
das
test
or
xchg
stos
insb
sbb
xchg
iret
mov
xor
inc
mov
lods
pop
outsl
imul
dec
stos
js
incl
test
test
lahf
adc
negb
inc
and
adc
add
inc
adc
pop
lret
adc
test
testl
out
or
xlat
scas
imul
adc
int3
enter
dec
loope
das
mov
shlb
leave
loope
jae
fnstsw
dec
pop
cmp
sbb
adc
xchg
jle
shlw
test
jo
mov
xor
adc
mov
sahf
and
and
pop
adc
jmp
mov
out
test
sbb
adc
cmpsb
mov
fadds
out
int
fs
lcall
imul
and
shlb
stc
adc
lret
sarl
adc
ret
mov
jbe
adc
mov
and
fld1
xor
in
jb
xor
and
jmp
push
rcrb
inc
mov
dec
jb
arpl
mov
aam
loope
arpl
mov
scas
cmpsl
inc
aaa
lahf
jle
hlt
xchg
pop
ja
add
addr16
dec
cmpsl
dec
addl
js
orl
stc
shrl
mov
and
mov
mov
loope
mov
pushf
movsl
repz
push
into
mov
sahf
mov
cmp
fldt
xchg
adc
mov
les
adc
mov
add
movsl
sub
cli
repz
inc
rcl
andb
cmp
xor
push
jl
inc
lcall
decb
pop
cmp
adc
test
into
mov
mov
mov
int
shrl
aas
jmp
mov
xchg
xchg
scas
inc
repz
ja
mov
dec
pop
pop
cmpb
pop
hlt
xchg
sahf
popf
test
sar
rorb
mov
pop
das
mov
dec
int
sub
xor
aaa
and
loope
fnstcw
push
jbe
ret
or
xor
into
dec
add
push
xor
pop
mov
and
shrb
cmp
and
cmp
or
shll
rep
cmpb
stos
adcl
inc
inc
ljmp
or
mov
rcll
outsl
push
push
xchg
adc
or
out
pop
and
mov
lahf
and
lret
xchg
jno
xlat
pop
adc
lods
sbb
in
xorl
dec
add
push
ret
icebp
popa
cmp
in
mov
add
pop
in
dec
ret
mov
js
adc
xlat
loope
cmp
xchg
in
push
and
cmc
rcrb
call
das
inc
sub
sub
sbb
loope
rcr
sub
pushf
mov
loopne
das
inc
mov
in
adc
test
fisttpl
leave
mov
dec
jp
inc
negl
mov
fwait
sbb
test
int3
sub
inc
mov
out
fsubl
inc
mov
mov
ja
ja
push
iret
mov
add
xchg
sbb
mov
in
sbb
jle
add
test
stos
stos
lret
insl
mov
movsb
outsl
xchg
in
xor
ret
out
lds
in
mov
mov
imul
mov
push
int3
stc
icebp
cmc
push
cwtl
xchg
add
add
leave
repnz
dec
cs
sub
dec
xlat
or
aad
xchg
in
out
cld
cmp
stos
lods
jmp
loope
mov
mov
push
push
push
pmullw
dec
subl
movsb
or
mov
push
add
and
sbb
xor
imul
push
or
ficompl
loop
pop
arpl
ja
and
in
or
aaa
mov
cs
sahf
das
mov
nop
and
sbb
jne
dec
jp
push
cmc
popf
ljmp
insb
dec
and
icebp
mov
mov
jb
mov
and
pop
in
mov
dec
inc
ja
sbb
cs
scas
pop
mov
gs
add
sub
in
imul
adc
mov
and
jp
gs
pop
lret
sub
subl
in
push
inc
inc
or
pop
jl
adc
mov
sbb
lock
stos
mov
sub
pop
push
or
add
lret
arpl
cmp
xchg
jne
movsl
mov
data16
jns
xchg
push
jg
adc
repz
jl
sahf
sub
mov
xchg
pop
lds
adc
outsb
lods
cs
adc
imul
cs
push
pushf
repz
sbb
outsb
dec
test
imul
test
int
mov
cmp
xchg
xlat
mov
push
out
mov
sahf
xchg
shll
test
dec
sbb
cmp
jns
xchg
orb
mov
int
adc
pushl
xor
loopne
mov
cld
cmp
adc
jmp
shrl
fimull
movzbl
mov
xchg
scas
sbb
dec
and
cld
sbb
out
sti
jp
and
hlt
inc
fistps
jb
and
inc
mov
ds
call
push
sti
enter
pop
leave
adcb
pop
aam
jecxz
scas
push
xlat
xchg
cmp
sti
xchg
out
sbb
in
sub
sbb
pushf
or
dec
int3
data16
xchg
mov
or
outsb
mov
insb
xor
clc
sbb
int
sti
cltd
mov
mov
stc
pop
sarl
stos
incl
lock
mov
ja
pop
jne
dec
in
pusha
dec
sbb
pusha
stos
sbb
scas
mov
xchg
cltd
sbb
jl
mov
and
dec
mov
or
jnp
addl
sub
mov
xor
es
stos
push
cwtl
inc
mov
add
xor
push
btc
popf
mov
shl
adc
aam
add
sbb
or
add
mov
xor
jge
subl
jge
or
aad
lahf
mov
adc
arpl
push
push
mov
pop
jno
mov
and
jns
sbb
in
or
cmp
cmp
loop
enter
repz
loopne
cmp
pop
fstps
pusha
cmp
outsb
lods
cmpsl
pop
into
cmp
loop
add
mov
jmp
inc
push
or
loop
sti
and
push
in
push
ss
push
scas
sbb
pop
rcrl
decl
lcall
cmp
jnp
xor
movsl
adc
sbb
inc
push
cli
enter
inc
add
out
dec
rcr
sub
sbb
inc
push
add
imull
xchg
cwtl
popf
repnz
jno
imul
outsb
aas
adc
ds
push
mov
pop
ljmp
add
cmp
push
xor
movsl
jg
ljmp
sub
loope
sti
out
es
in
and
fnstsw
int
add
or
or
fldcw
ret
test
xor
or
dec
aad
and
dec
fwait
push
mov
mov
adc
pop
cmp
xor
loope
pop
arpl
mov
jge
inc
xchg
sbb
stos
jns
mov
mov
pop
sub
pop
stos
aad
push
les
xor
push
iret
cmc
dec
adc
pop
push
sub
mov
stc
mov
adc
cs
jbe
loop
inc
pop
int3
int
negb
cwtl
sub
popf
out
mov
mov
cld
xchg
xchg
or
popa
mov
and
xor
loope
je
int
push
stos
pop
loope
es
mov
lds
mov
jmp
repnz
cmp
bound
sub
test
sub
jl
pushf
cmp
cli
and
push
sbb
in
mov
add
mov
sbb
clc
jecxz
inc
sub
jmp
dec
fidivs
ret
in
jb
mov
add
dec
dec
and
in
shlb
mov
cmp
nop
jo
call
adc
dec
cld
push
scas
lods
fldl
cmpsb
inc
xchg
pop
mov
leave
out
jecxz
or
jns
ds
jno
lds
adc
sti
and
push
or
pusha
ficoms
mov
aas
lret
pop
push
adc
xchg
cwtl
mov
mov
mov
jnp
jb
sbb
xchg
dec
stc
sbb
xor
jecxz
out
sbb
enter
xchg
dec
xor
std
mov
fwait
aaa
sbb
sub
loop
dec
scas
sbb
mov
cs
out
shll
addb
sub
test
es
fnstenv
sub
dec
xor
div
jmp
push
add
pop
insl
lahf
repnz
or
cmp
scas
movups
mov
arpl
push
jnp
dec
pop
or
sub
pop
ds
adc
es
push
mov
clc
jo
fsubl
sbb
mov
xchg
mov
adcb
ret
cltd
dec
rclb
insb
movsb
hlt
add
jmp
adc
stos
adc
mov
ret
push
push
insl
jns
pusha
lcall
cmp
movsl
test
xor
aas
push
xchg
ret
loop
pop
push
sbb
or
imul
jo
rcrb
mov
and
jmp
xchg
popf
dec
in
popa
in
adc
sbb
push
rcrl
jecxz
test
addr16
or
leave
adc
sbbl
xchg
popf
sbb
dec
stos
adc
sbbb
mov
jecxz
insb
jns
pop
jle
aas
sbb
fstpt
jl
ja
aad
ret
inc
cmp
mov
in
sbb
adc
imul
arpl
test
sahf
add
mov
stos
inc
out
xchg
pusha
mov
dec
xchg
mov
add
lahf
lret
fstl
jecxz
stos
mov
mov
xchg
dec
cmp
in
push
mov
fmul
test
and
push
movsb
addr16
xlat
pushf
and
cmp
fisttpll
lcall
lret
sub
pop
pushf
xlat
cmp
cli
jo
push
cmp
cmpsl
jle
ds
inc
and
lahf
mov
ljmp
stos
push
shrb
cld
push
adc
daa
or
lods
fiadds
hlt
add
add
mov
add
fcoms
jp
clc
pop
xor
sub
push
xchg
rcl
sub
fidivs
loope
pop
inc
jle
orb
fs
adc
lds
test
sbb
and
lcall
adc
xchg
mov
jbe,pn
addb
and
or
jnp
mov
pop
pop
shl
adc
test
add
pop
push
aam
sub
or
repz
out
cmp
shlb
popf
jle
test
xchg
xchg
jb
jnp
outsb
rclb
inc
and
add
sub
stos
je
fiadds
pusha
sub
stc
mov
in
rclb
mulb
inc
leave
nop
jo
dec
dec
bound
insb
sbb
seta
out
aas
xchg
neg
dec
or
scas
movsb
rep
mov
test
filds
xchg
pop
dec
jo
jnp
inc
push
in
pushf
iret
lods
adc
mov
aaa
cmpsb
stos
add
inc
clc
sti
ja
pusha
lcall
test
cmp
jae
lods
inc
repnz
adc
push
sbb
mov
xorl
push
fists
jmp
mov
push
mov
mov
add
cmp
mov
in
mov
idivb
and
sbb
clc
int
push
push
mov
das
fdivrs
inc
cld
dec
pop
loope
lds
stos
outsl
loop
fistps
mov
mov
adc
sub
movsb
sbbb
cwtl
aas
fildll
mov
test
or
jecxz
adc
adc
jnp
lds
cmp
ret
je
mov
push
faddl
shlb
pop
ret
rcrb
xchg
jbe
enter
stos
adc
std
push
inc
xor
adc
repz
ss
addr16
jo
mov
test
inc
in
jecxz
cld
ja
outsb
push
and
call
cmpsb
inc
std
outsl
ljmp
add
xchg
popa
jae
das
push
pushf
xchg
cmc
ret
add
inc
cmpsb
pop
rcll
xlat
cs
pavgb
pop
andb
dec
enter
jnp
ds
rorl
sbb
out
cmp
loopne
dec
fimuls
cld
lcall
daa
outsb
add
pop
insl
mov
sarl
mov
mov
out
les
mov
jne
call
sti
sti
push
test
jae
jnp
fsts
stos
push
mov
cmpsl
or
add
cmp
repnz
mov
push
add
cltd
mov
push
jb
imul
xchg
dec
dec
mov
push
sti
inc
leave
fldt
pop
out
mov
inc
out
cmc
pcmpgtw
insl
adc
dec
dec
iret
xchg
ljmp
aam
das
int
sub
sbb
jecxz
shr
dec
cli
mov
push
fcos
cld
fnstcw
or
jnp
adc
popf
push
fdivs
aad
inc
aad
inc
add
ljmp
cmpsl
stos
xlat
jecxz
xor
mov
push
fisttpll
cwtl
aad
stc
adc
jge
sbb
and
add
sub
inc
push
xor
out
xor
leave
xor
scas
ret
rcrb
push
push
mov
popf
inc
inc
xlat
adc
push
pusha
out
xor
cmpsb
std
jle
sbb
mov
scas
jp
into
inc
rorb
fldenv
mov
incb
int
jo
pop
out
xor
mov
jbe
loope
push
nop
out
sbb
aaa
cmp
scas
cmp
cltd
dec
jno
push
insl
push
pop
and
call
nop
ljmp
xor
call
mov
mov
xorl
push
push
insb
cmp
andl
add
inc
repz
cmp
mov
movsb
test
mov
xor
or
pushf
xorl
push
subb
hlt
test
push
cltd
or
test
movsl
outsb
push
cmp
loope
mov
rol
pop
cmp
push
arpl
icebp
repz
lahf
jbe
dec
mov
dec
add
js
jne
adc
mov
add
adc
and
fisubrl
add
in
int
sbb
inc
in
push
lock
popf
xor
xchg
imul
push
adc
mov
sti
add
mov
push
lret
push
les
cmp
or
cmp
mov
inc
xchg
xor
loop
sbb
jnp
jl
add
or
aam
rclb
adc
mov
sub
dec
arpl
pop
and
adc
sbb
mov
xor
pop
xchg
mov
adc
icebp
mov
repz
lock
push
fs
jo
sub
fdivrl
imul
add
les
scas
std
ret
mov
lahf
cmc
cmp
aas
add
mov
lahf
push
ds
jmp
les
pop
sub
cs
in
pop
ret
fistps
or
mov
ja
dec
push
add
push
mov
adc
xor
test
push
movsl
mov
mov
stos
xlat
imul
mov
dec
andb
shll
pop
inc
stos
sub
pop
or
jg
jge
outsb
test
cmc
pop
or
popf
push
jne
inc
daa
aas
add
out
mov
xchg
sbb
out
mov
mov
pop
xchg
mov
mov
loope
loop
pop
test
test
xchg
imull
xor
paddusb
or
cwtl
out
dec
xchg
jns
loopne
cmp
inc
mov
shlb
into
xor
mov
sahf
lea
jmp
push
idiv
push
into
in
push
lock
into
push
mov
mov
arpl
js
and
or
lea
inc
insb
daa
cmc
repnz
loope
clc
dec
cltd
mov
push
adc
mov
mov
push
je
dec
xchg
mov
jle
push
push
mov
in
loop
mov
out
in
insb
mov
ja
test
lods
cmp
and
sub
imul
jp
ret
mov
fucomip
sub
pop
sahf
int
xchg
test
xchg
repnz
lcall
push
jge
jg
xchg
pop
jl
mov
cmc
bound
add
mov
int3
jo
in
mov
dec
pop
or
inc
ret
addr16
ljmp
stos
movsb
xchg
test
xor
andl
jo
push
adc
ror
or
jae
push
data16
ss
pop
pop
shlb
js
xor
and
in
jne
scas
xchg
inc
xchg
gs
jns
aam
mov
fbld
mov
test
in
pop
jns
sub
mov
cmp
jle
lcall
xchg
jmp
jb
insl
add
stc
mov
movsb
jo
pop
mov
xor
aam
in
dec
js
push
clc
lret
pop
mov
mov
or
mov
fidivrl
xchg
xchg
push
ror
jecxz
jb
add
mov
sbb
ja
pop
mov
negb
xchg
mov
bound
inc
xchg
notl
mov
sub
jge
jl
jecxz
inc
lock
mov
mov
sti
mov
sub
popf
mov
frstor
dec
dec
and
jo
fdivrs
mov
out
cltd
testl
adc
jecxz
lret
fs
mov
cld
xchg
sub
add
or
stos
movsl
pop
mov
pusha
push
jg
dec
loop
cmp
dec
out
call
into
iret
movsb
jp
jecxz
push
fnstsw
sbb
fwait
and
in
jne
sub
xor
je
jns
push
add
lock
or
outsb
ljmp
push
ja
cmp
jns
mov
das
add
lds
in
fidivrs
loop
adc
mov
dec
pusha
loopne
icebp
fnstenv
loope
bound
and
mov
xor
decl
or
inc
imul
inc
pop
pop
shll
mov
add
mov
clc
xor
pop
bound
lods
pushf
cmp
pop
adc
aam
out
jo
jno
icebp
rcll
pop
hlt
dec
mov
add
negl
out
clc
jae
outsb
out
sti
bound
mov
fwait
sub
sti
add
sbb
outsl
rcll
out
mov
inc
xor
jl
or
in
addr16
dec
mov
xor
dec
mov
enter
push
in
adc
push
add
mov
cld
mov
lea
dec
hlt
das
pop
sti
or
cmpsl
cmp
mov
pop
ljmp
push
pop
imul
inc
mov
sbb
xchg
mov
mov
je
mov
out
adc
stos
pushl
inc
jae
insl
xchg
dec
xor
mov
adc
stos
cmc
sub
pop
sub
cmc
sbb
popf
js
scas
xchg
xchg
xor
cwtl
std
pop
scas
adc
data16
push
aad
xor
stos
mov
dec
shr
repz
faddl
in
rorl
pop
lock
mov
xor
in
dec
stos
or
add
adc
dec
inc
mov
divb
adc
add
lea
dec
inc
mov
iret
push
push
fld
xchg
or
loopne
mov
adc
aas
cli
pop
jbe
in
cmp
jmp
je
lahf
int3
mov
dec
les
add
leave
dec
xchg
and
dec
sbb
clc
mov
mov
lds
lcall
es
mov
mov
and
popf
ds
inc
sbb
outsl
cmc
pop
rol
insb
push
push
dec
in
xchg
dec
aaa
lock
or
imul
push
xchg
movsb
pop
jl
xor
cmp
xlat
out
or
and
cmp
lods
insb
xchg
and
mov
dec
in
dec
ds
loopne
mov
addr16
aam
out
mov
insb
notb
call
inc
mov
xlat
sub
jb
push
push
icebp
es
pushf
in
jno
ss
push
add
std
cwtl
or
repnz
cltd
xor
fdivrs
stc
push
jg
pop
cmp
arpl
ja
or
loop
sti
jno
mov
mov
sbb
add
movsl
lea
xchg
xchg
scas
push
sti
mulb
ljmp
int3
adc
aad
andl
xchg
outsb
imul
sbb
inc
push
sub
es
in
dec
outsl
pop
mov
dec
cmp
jge
mov
fiadds
loopne
inc
test
nop
pop
addr16
icebp
or
jo
andl
arpl
jbe
mov
xor
in
xchg
inc
sarl
mull
mov
push
jno
sbb
mov
jle
cmp
mov
fcomi
pop
shrb
int3
xor
fwait
stc
xor
movsb
aam
lahf
or
imul
sahf
mov
sub
jp
ss
mov
or
xor
xchg
popf
jno
jo
adc
mov
js
cmpl
movsb
aas
lret
mov
pushf
inc
mov
xchg
jno
pop
std
lock
cld
jno
icebp
mov
xlat
mov
and
add
xor
les
fdivs
loop
mov
cmpb
pop
adc
push
dec
dec
rcr
lds
xchg
dec
push
stos
movsl
mov
push
jns
movd
in
cltd
scas
inc
push
xchg
mov
xor
punpcklbw
int
jae
int3
inc
pushf
mov
jne
aad
adc
pop
mov
xor
push
insb
cwtl
mov
xchg
scas
add
aad
cmp
mov
inc
dec
in
mov
insb
outsb
xchg
dec
inc
push
aam
sub
movsl
or
outsb
aaa
out
sub
xor
insl
xchg
ret
test
add
mov
dec
arpl
lods
and
mov
inc
xchg
add
adc
xor
adc
mov
xchg
and
jno
and
loopne
aaa
jno
ds
lods
mov
jbe
xchg
xorl
mov
aaa
icebp
push
xor
jmp
and
mov
and
xchg
out
pop
cmp
xor
test
jb
orl
mov
rcll
sub
das
pusha
inc
aaa
jo
orl
jle
bound
jns
mov
xchg
and
repz
cmpsb
out
adc
jo
ret
or
jle
ss
scas
sbb
pop
sti
lds
cltd
jmp
mov
inc
out
xor
test
mov
inc
lock
and
and
sbb
cmp
push
jnp
add
jbe
in
or
sbb
dec
cmpsl
sbb
dec
jle
js
call
cmp
into
sub
addr16
push
cld
or
push
cmp
pop
pop
stc
mov
cltd
xchg
iret
dec
pop
lock
jp
nop
bound
xchg
loopne
sarl
jp
rcrb
cmc
sahf
leave
push
addr16
aad
rorb
stos
cli
and
push
mov
push
lahf
push
pop
lret
push
stc
xchg
inc
js
add
aad
jmp
insb
sub
xchg
test
cmp
roll
xor
push
scas
in
fs
pusha
pop
xor
sub
cmp
sbb
mov
ror
or
aas
das
sub
sbb
add
loopne
mov
jmp
xor
push
ljmp
push
or
pop
fs
jmp
pop
push
add
into
scas
ja
sub
inc
xchg
fcmove
add
and
jo
dec
jmp
cli
fidivrl
daa
adc
cmp
and
xor
repnz
push
xor
pushf
xchg
movsb
sbb
lea
call
push
lea
jg
sub
jle
ucomiss
sbb
dec
xchg
sbb
mov
mov
and
lcall
cltd
inc
mov
in
addr16
cmp
mov
lcall
enter
shll
into
inc
mov
test
repz
lcall
in
pop
cmpsl
cld
cli
clc
nop
hlt
inc
jnp
xor
ja
and
iret
and
mov
adc
xor
mov
inc
mov
inc
insl
push
mov
stc
test
stc
idivb
enter
xor
clc
out
loope
jl
repnz
rep
call
xlat
icebp
fwait
push
pop
dec
push
and
dec
pusha
push
xchg
test
adc
pusha
rorl
mov
std
mov
add
pop
nop
popa
outsb
stc
push
xchg
out
xor
sub
add
or
cmp
mov
lods
mov
adc
mul
cmp
pop
mov
lock
cld
out
or
js
push
insb
lods
jno
imul
add
pop
dec
jmp
pop
inc
inc
xor
push
mov
cmp
sti
pop
jecxz
mov
aam
ret
dec
adc
test
jge
ja
xor
jnp
mov
xchg
sahf
and
xchg
jp
mov
fadds
mov
pop
xlat
jmp
push
inc
cld
shrl
dec
loop
mov
push
adc
movsb
scas
push
in
push
or
fwait
xor
pop
push
push
jl
out
insb
mov
sarb
data16
fidivl
loopne
pop
mov
mov
pop
cltd
mov
xor
jge
fimull
repnz
mov
sbb
add
and
mov
ss
aaa
pop
sub
pushf
sahf
lock
cmpsl
out
sbb
cmpsb
leave
lds
xchg
arpl
inc
pushw
inc
sub
negb
mov
imul
popf
imul
js
xor
roll
xlat
dec
fbld
sbb
bound
pop
insl
inc
mov
mov
or
pop
test
pushf
cmpsl
mov
push
out
ror
lea
dec
inc
inc
out
js
clc
xchg
fidivs
sbb
mov
jecxz
lock
xor
xchg
mov
cmpsl
dec
cmc
pop
ret
mulb
clc
ret
add
arpl
insb
mov
dec
jecxz
leave
or
test
add
pop
arpl
lock
std
inc
jno
mov
imul
mov
nop
xor
push
sub
jecxz
notl
xchg
jl
pop
popa
movsl
push
test
lret
je
popa
push
or
add
mov
ret
mov
test
jb
sbb
bound
push
mov
sti
xchg
iret
fimuls
loop
mull
scas
cmpsl
lock
mov
mov
les
cmc
jp
mov
mov
lret
or
inc
mov
not
aas
adc
lret
test
mov
sbb
cli
sub
mov
pop
lea
sar
les
add
fmull
out
and
insb
push
push
cmc
hlt
lahf
loop
out
cmp
shrl
shlb
mov
cltd
pop
xchg
test
hlt
les
and
mov
xchg
jmp
imul
hlt
add
jne
movb
pop
inc
rcrl
call
sub
call
mov
sub
jns
imul
dec
jp
cs
loope
push
pop
lcall
or
mov
push
cmp
jmp
aad
add
and
push
xor
lock
in
aam
add
fists
mov
pushf
cs
adc
aam
shlb
pop
loop,pn
xor
out
cmp
mov
fistl
jae
push
sbb
aad
outsb
js
cmp
orb
nop
nop
pusha
les
mull
shr
jg
in
xor
mov
popf
or
rcrb
xor
sub
in
sbb
in
push
mov
clc
sbb
sbb
cmpl
push
stc
mov
push
sahf
leave
arpl
and
dec
sti
popa
cld
test
xor
xlat
cmp
test
aam
stos
mov
xor
dec
pop
dec
jmp
dec
mov
mov
shlb
mov
adc
je
loop
sub
xor
in
bound
ret
inc
mov
jno
stos
adc
mov
xchg
adc
jns
mov
in
cmp
dec
mov
push
xchg
insb
dec
lods
cmovns
mov
xor
mov
repz
lret
scas
and
dec
add
inc
mov
cwtl
test
sub
pop
xor
inc
push
inc
test
push
push
push
cld
add
clc
mov
es
hlt
dec
fistpll
fstpt
pop
shrb
clc
sbb
push
cmp
adc
xlat
insl
and
mov
xchg
xor
dec
sbb
lret
and
sbbl
aas
scas
lods
mov
xor
push
popw
jo
inc
pusha
sti
outsb
call
cmpsb
in
or
ret
jo
imul
in
mov
sub
mov
in
out
mov
sti
cmp
lcall
jo
xor
dec
jae
fwait
aad
outsb
enter
andl
iret
xor
mov
or
dec
outsl
push
mov
in
jno
push
jae
xorl
pushf
les
jno
add
jbe
xchg
or
adc
xchg
enter
mov
notl
add
push
pop
es
push
sbb
push
in
xchg
pop
enter
and
cmp
and
add
mov
jo
xchg
sub
test
sbb
jo
outsl
jbe
inc
ret
inc
sbb
cli
sbb
fists
sub
aad
loopne
idivl
dec
and
popa
les
adc
or
or
inc
loop,pt
cld
std
mov
cltd
push
pushf
movsl
cmp
dec
jb
push
aam
data16
popf
dec
cmp
in
inc
sarb
pushf
popf
leave
in
insb
lods
mov
outsl
or
xor
fstpt
mov
push
fsubrl
xchg
cmp
mov
add
dec
dec
ret
testl
pop
dec
jne
mov
std
push
jle
push
adc
addl
push
inc
inc
mov
test
les
orl
pop
sbb
dec
xor
jmp
push
ds
pop
mov
imul
test
or
add
jmp
shll
push
inc
mov
arpl
fisubrs
cmpsb
or
fs
push
iret
mov
jmp
xor
daa
data16
cmp
or
jle
cmpb
aas
jo
cmc
inc
xor
insl
xchg
std
fs
inc
jae
cli
lds
dec
fisttpl
push
std
loop
xchg
push
ret
icebp
mov
pop
stos
inc
fstl
mov
in
mov
shll
lret
cld
mov
shl
iret
repz
addr16
and
mulb
lcall
jno
mov
subb
in
mov
in
dec
pop
enter
push
dec
jno
popf
sub
and
or
xchg
xorl
adc
loop
into
pop
push
enter
mov
sbb
mov
push
mov
push
mov
add
andl
icebp
enter
jge
mov
popa
push
pusha
jbe
push
fbld
test
hlt
pop
add
in
add
xchg
and
pushf
jmp
push
pop
cmp
mov
add
leave
sub
outsb
imul
jns
cld
cs
imul
jecxz
popf
mov
cmovno
cmp
xor
lock
jnp
in
shr
mov
js
cmpsl
aaa
pop
mov
arpl
imul
pop
adc
or
andl
jl
fistpl
psllq
sti
out
mov
dec
stos
and
daa
leave
leave
shll
in
or
loope
adc
adc
sarl
aaa
bnd
pop
cmc
cmp
pop
sar
cmpsl
decl
add
insb
ljmp
xor
int3
daa
sbb
cmp
cld
repnz
into
sbb
lret
shl
cmp
jmp
repnz
sub
sbb
rcll
pop
inc
pop
jp
les
push
cmp
sub
sub
jg
sub
stc
in
xchg
and
je
add
mov
cmp
into
popf
and
mov
pushf
test
xchg
jg
ja
int
xchg
jb
add
pusha
pop
cmpsb
or
imul
inc
add
bound
jbe
daa
fildll
inc
mov
jae
repz
rcrl
xlat
xchg
push
imul
jnp
orb
out
repnz
pop
pop
jge
cwtl
in
push
shr
call
add
pop
out
jmp
repz
cmp
stc
xor
lcall
testl
xchg
jmp
mov
adc
pop
push
adc
mov
lock
or
inc
dec
lods
ss
or
imul
jbe
out
mov
or
nop
in
loopne
dec
mov
push
loop
xor
flds
mov
hlt
in
and
in
or
std
aam
fistpll
and
je
push
ds
jle
mov
adc
jecxz
inc
pop
roll
jne
ja
pop
dec
das
push
imul
mov
loope
cwtl
int
insl
mov
adc
xor
dec
cmp
icebp
xchg
popf
push
lods
xchg
sbb
xor
inc
mov
xor
or
pop
xchg
mov
or
cltd
sbb
push
dec
xchg
lar
push
test
inc
incb
fisubs
jb
stos
sub
in
or
jno
out
lret
mov
dec
mov
cmp
pop
jnp
test
pop
inc
mov
jno
mov
sub
add
sub
dec
repnz
nop
ds
dec
sbb
lods
xor
add
stc
pusha
xchg
pusha
lret
push
js
mov
sbb
jl
inc
xchg
push
mov
xchg
and
aaa
mov
or
mov
sub
movsb
jl
ret
data16
mov
mov
and
sti
dec
mov
cli
dec
or
add
inc
jp
fistl
fistl
jg
daa
pop
aad
push
test
adc
scas
sub
or
leave
pop
lret
or
or
mov
test
cli
jle
inc
push
adc
in
stc
pop
and
push
lcall
mov
fs
xchg
jae
push
popa
call
xor
push
and
nop
test
sbb
stc
sbb
mov
inc
dec
std
mov
push
inc
pop
faddl
pop
add
test
mov
push
and
adc
shl
sub
cli
dec
mov
jmp
inc
cmp
movsl
orl
pop
dec
dec
les
mov
lock
hlt
scas
mov
pop
pop
mov
xchg
mov
pop
inc
pop
jno
rcll
std
push
sahf
in
jg
subl
pop
mov
dec
or
cld
flds
push
fidivrs
pop
add
out
ret
out
jp
icebp
callw
cmp
jl
pop
adc
aaa
xchg
dec
jl
adc
push
or
movsb
lcall
addr16
mov
push
adc
in
xor
cmpsl
mov
icebp
push
inc
mov
dec
lret
sub
mov
test
lods
add
in
clc
xchg
mov
mov
jnp
jb
push
fiaddl
ds
dec
nopl
stos
jle
les
push
cwtl
stc
ljmp
sbb
pop
in
push
mov
mov
sbb
dec
lock
xchg
aas
mov
xor
jl
mov
test
mov
push
xor
inc
fldcw
mov
cmp
dec
cmc
inc
sub
mov
xor
int3
lods
in
push
cltd
notl
and
daa
pop
in
lods
imul
stos
inc
jl
xor
dec
out
inc
iret
pop
stos
or
inc
test
mov
icebp
fsts
lahf
push
lret
adc
in
je
sub
daa
dec
mov
mov
ret
ds
xchg
push
inc
adc
pop
repz
flds
and
or
adc
mov
push
adc
scas
pop
stos
mov
sbb
cltd
loop
out
push
popf
outsl
repnz
adc
cmp
inc
adc
in
outsb
daa
repnz
dec
jmp
add
push
js
inc
shlb
lock
shr
push
and
stos
jecxz
push
mov
dec
js
mov
pop
xor
loopne
arpl
push
fcmovu
cmpl
sbb
repz
mov
and
movsb
lret
repnz
fisttps
rolb
pop
icebp
dec
mov
js
pop
pop
mov
enter
movsl
inc
cmp
jmp
mov
lcall
mov
bound
repz
add
add
mov
lods
incb
xchg
test
cmp
dec
inc
testb
ss
mov
mov
aas
add
ljmp
cmp
leave
sar
out
adc
out
dec
mov
ja
sub
push
cmp
rclb
mov
mov
cmp
dec
adc
adc
aam
daa
add
shr
jo
xchg
cli
shrl
sbb
xchg
inc
ret
adcb
mov
dec
sub
pop
push
cld
int3
mov
jp
or
mov
xchg
pop
push
mov
adc
push
jae
push
loope
push
ja
adc
orl
notb
cmpsl
or
dec
lds
inc
js
cmc
mov
std
out
popf
inc
jp
jbe
xor
insb
add
inc
inc
mov
aas
mov
pop
aas
xor
cwtl
and
push
pop
xchg
js
imul
adc
jno
mov
stos
int3
push
fcmovnbe
es
cmc
ret
dec
cmpsb
cwtl
call
test
ss
cltd
arpl
pushf
shlb
in
inc
mov
pop
jbe
add
sbb
pop
xchg
add
mov
xlat
sub
jge
loop
push
mov
rcrl
comiss
or
es
lcall
pop
fiadds
in
dec
adc
int3
scas
inc
je
and
int
jns
inc
jns
adcb
in
cwtl
jns
lahf
dec
dec
xchg
jmp
adc
test
xor
lds
pop
test
dec
outsb
jmp
jecxz
xchg
push
ret
lahf
je
sub
sub
call
xlat
add
jmp
or
movsl
ss
jnp
pop
sbbl
adc
cld
pop
add
ljmp
aaa
aas
add
dec
push
mov
pop
adc
mov
mov
jmp
mov
push
mov
aaa
test
je
sub
add
ss
nop
sub
cs
fs
test
sub
fs
out
test
mov
mov
push
sub
sahf
sbbl
xor
add
rol
aad
or
addr16
mov
push
xchg
subl
nop
arpl
cmp
cmp
xor
push
adc
out
add
out
mov
decb
inc
inc
xchg
inc
daa
les
and
push
outsl
sub
jae
ret
push
and
rcr
shlb
rcll
sub
push
pop
mov
outsl
jge
or
push
mov
jl
push
aas
add
sbb
repnz
push
push
fcmovb
inc
mov
daa
in
dec
stos
pop
xlat
mov
lods
adc
jno
xor
mov
mov
mov
adc
and
stos
xchg
jo
cmp
and
push
faddl
lea
das
adc
or
push
cmpsl
fsubp
imul
xchg
push
repz
lods
jp
jg
les
js
outsb
sub
stc
mov
or
stos
test
loop
test
mov
out
or
out
pushf
jle
dec
and
imul
rolb
pop
bound
imul
xchg
out
leave
into
aaa
sti
fcoms
mov
stc
in
cmp
jae
mov
addr16
mov
inc
mov
hlt
adc
xchg
dec
dec
cmp
push
into
mov
ljmp
test
fistl
out
fistps
cmp
sbb
std
push
adc
xchg
adc
cmpsb
outsl
scas
loope
xlat
pusha
pop
daa
clc
repz
adc
jbe
idiv
push
and
fildl
and
inc
push
clc
test
cwtl
jo
mov
dec
icebp
push
fistpll
pop
push
jmp
mov
repz
jecxz
sbb
or
jno
mov
cmp
lods
xchg
mov
xchg
cmc
enter
and
js
dec
outsb
fs
and
iret
subb
sub
xchg
shlb
aas
pop
pop
jl
lods
push
dec
push
add
push
jp
aaa
xchg
sub
adc
leave
sub
mov
inc
inc
inc
pop
mov
sub
inc
pushf
movsb
jne
and
test
inc
insl
ret
sub
sahf
minps
out
fmuls
out
ror
jl
into
jecxz
cmpsl
pop
dec
pop
mov
mov
push
negb
push
je
inc
pushf
mov
inc
pop
jns
dec
scas
ret
fidivrs
pop
mov
push
mov
pushf
dec
movq
add
out
mov
cmp
xchg
js
aam
fs
ljmp
mov
repz
inc
lods
dec
xchg
jns
lret
cmc
lea
jo
aas
jne
cmp
nop
xchg
mov
js
loope
push
popf
int
subl
jge
ds
push
fstpl
push
or
jne
hlt
in
add
ret
je
movsl
test
xchg
dec
or
mov
int3
call
mov
cmpsl
xchg
in
sahf
pop
aam
jns
mov
test
or
int3
fdivl
push
mov
jl
cs
push
and
in
fists
sbb
xor
jle
push
jns
insb
repnz
test
push
dec
lret
mov
rorb
mov
jo
fwait
add
mov
pop
repnz
jb
sti
push
scas
xchg
or
xor
rorl
das
jecxz
mov
mov
xchg
mov
mov
xlat
sub
loope
dec
in
or
xor
aam
jmp
sbb
aas
cmpsl
icebp
pop
sub
mov
mov
aad
push
jp
xchg
dec
add
pop
pop
daa
cwtl
repnz
push
repnz
jbe
mov
aaa
push
insb
hlt
inc
or
push
pop
mov
inc
and
pop
nop
ljmp
pusha
lret
cmp
loop
mov
pop
fs
int3
scas
pop
pop
push
pop
or
xchg
jl
addr16
adc
pop
jno
mov
cmp
fsubrs
insl
rcr
lahf
mov
or
ds
adc
jp
push
mov
pop
sub
sub
sub
sub
je
ja
leave
and
js
test
fdivs
mov
test
inc
sub
dec
test
sarb
addr16
fistl
scas
insl
fwait
test
dec
jnp
mov
cli
adc
pop
jmp
xor
mov
sti
add
jb
insb
xchg
add
inc
fisubl
or
xchg
shr
jae
push
dec
das
adc
jle
ret
mov
lret
roll
and
loope
leave
pop
push
test
add
mov
push
insb
sbb
data16
or
mov
jne
mov
loope
repnz
fdivrp
lea
repnz
scas
xor
pop
leave
xchg
and
shlb
pop
hlt
daa
out
or
mov
mov
pop
ret
push
stos
cwtl
dec
in
jg
jnp
add
adc
shrl
cwtl
jae
in
xor
adc
push
push
xor
xchg
sub
lea
out
xchg
jp
call
outsl
scas
scas
xor
xchg
mov
sbb
push
aam
mov
imul
cmc
or
jae
arpl
outsl
adc
xlat
pushf
jmp
xchg
je
mov
dec
stos
mov
out
imul
push
cmp
sub
int3
push
nop
cmpsl
ficoml
push
rcll
hlt
imul
add
dec
fstl
lds
insl
std
sbb
mov
xchg
adc
inc
push
outsl
jnp
inc
jo
imul
test
mov
into
cmc
jp
cmc
out
dec
jne
orl
jno
push
fbstp
int3
cmp
gs
sbbb
pop
dec
imul
test
sbb
pushf
add
pop
call
add
inc
lea
mov
cmp
jmp
jmp
in
jl
pop
pop
popf
xchg
mov
test
cmp
pcmpgtd
out
pop
or
mov
stos
and
loop
cmp
sub
testb
repnz
push
jnp
jno
ret
push
dec
push
pop
cwtl
inc
mov
push
test
repz
jmp
movsl
mov
jo
inc
cli
cmpsb
fsubp
adcb
cmp
adc
mov
mov
inc
std
mov
and
lods
push
lret
sbb
mov
xchg
divb
mov
or
add
cmp
dec
in
mov
les
xor
pushf
je
sahf
dec
ja
popf
xchg
cmpsl
sbb
scas
jle
push
fisttpl
xor
cmp
mov
xchg
pop
mov
stc
pop
dec
into
ret
pop
stc
hlt
or
in
adcl
ss
insl
mov
enter
sub
clc
pop
jns
popa
cld
pushl
pop
jno
push
popf
adc
cmp
mov
push
cmp
rorl
xlat
pop
push
dec
mov
es
pop
push
pop
jmp
dec
add
movsl
sbb
stos
and
test
hlt
mov
roll
out
iret
test
push
clc
popa
scas
popa
frstor
xchg
adc
jp
adc
rcll
fldenv
cmc
add
add
rorl
push
inc
adc
add
mov
divb
data16
mov
add
push
cli
mov
fsub
stc
pop
imul
int
adc
icebp
bound
cmp
xchg
sub
and
pop
and
mov
xlat
adc
mov
cs
test
add
sub
inc
lea
xchg
adcl
addb
pop
fdivrs
adc
pop
xchg
iret
addr16
mov
lods
loop
xor
or
je
cmp
and
adc
xor
enter
jb
nop
mov
cld
mov
and
pop
out
cld
js
fildll
cmpsb
das
in
jge
lods
mov
mov
je
sbb
cld
inc
adc
xchg
sbb
cmp
adc
out
dec
and
jne
sub
scas
mov
in
lods
add
push
dec
addr16
lods
or
mov
ss
sub
out
ror
inc
out
mov
movsb
dec
dec
inc
or
pop
iret
aas
mov
adc
sbb
or
stos
cmp
adc
push
fcoms
xor
sbbl
mov
fwait
into
loop
xchg
sub
shr
cwtl
add
adc
adcl
insb
push
pop
aas
pop
mov
or
mov
sbb
leave
ljmp
in
add
ret
pop
dec
aas
das
addr16
mov
mov
xor
xchg
add
inc
lahf
ds
inc
pop
xchg
inc
adc
mov
dec
xor
xchg
stos
lret
daa
mov
cld
js
out
fisttpl
xor
xchg
push
jmp
test
mov
fsubrs
in
pop
mov
push
aaa
or
clc
add
jl
sahf
mov
sub
mov
push
push
add
movsl
orl
push
xchg
adc
mov
xchg
je
inc
sbb
mov
out
repz
add
jle
data16
push
cmp
pop
jp
movsl
fsts
insl
push
test
cmp
or
lret
xor
lret
clc
adc
movsl
test
push
scas
xchg
cmp
fcmovnu
jmp
xor
mov
mov
in
xor
dec
push
or
cs
ljmp
pop
arpl
call
test
push
dec
xor
jl
cmc
popa
and
insb
xchg
dec
lods
lock
popf
mov
out
pop
xchg
or
mov
mov
call
aad
fiadds
scas
jno
fidivrl
xor
dec
push
sub
push
in
adc
cmp
push
push
ret
int
lods
jecxz
rcrb
or
jle
out
mov
in
xor
cld
push
lea
repz
and
mov
in
dec
mov
popa
cmp
rcrb
nop
sub
ror
rorl
adc
scas
adc
inc
ficomps
mov
addb
ficoml
lcall
fistl
test
push
mov
hlt
mov
cli
cmp
sbb
cmp
inc
sub
add
push
into
pop
push
cltd
inc
sbb
lock
loopne
sbb
push
xchg
inc
jbe
repz
aaa
and
push
or
imull
mov
ljmp
xchg
dec
fsubl
mov
iret
mov
mov
sets
outsb
stos
or
push
add
xchg
dec
sbb
xchg
in
imul
sub
dec
stos
push
adc
int3
pop
jl
int3
or
xorl
lret
jae
xchg
xor
std
mov
movsb
push
xchg
ljmp
scas
stos
mulb
fldcw
inc
div
add
xchg
lods
xor
icebp
enter
stos
mov
imul
ds
movb
xor
cmc
ror
movsb
and
xor
xor
add
iret
cmp
cmpsl
js
xchg
je
mov
jle
jmp
dec
sbb
repnz
pop
xor
aam
inc
push
stos
pop
or
mov
mov
mov
repnz
push
xor
icebp
js
rorb
push
repnz
cli
hlt
xchg
pusha
fisubrs
mov
gs
add
jb
adc
stos
test
dec
push
mov
fucomip
sti
jecxz
push
aas
sarb
mov
loopne
stc
and
cmc
adc
icebp
mov
ljmp
sbb
mov
jbe
jecxz
sahf
into
enter
xor
push
inc
fistl
popa
pop
movsl
sbb
inc
push
xchg
cld
clc
and
test
xchg
in
dec
fadds
dec
sbbb
ret
popf
xor
dec
adc
fistl
dec
std
push
add
cmpsb
out
dec
loop,pt
dec
jb
in
xor
mov
lods
jg
mov
ds
pop
outsl
ret
pop
movsb
pop
mov
sub
insb
mov
insb
jmp
mov
push
aad
lods
gs
iret
cmp
lods
cs
bound
pushf
jmp
es
notb
mov
sub
jnp
dec
or
mov
jne
mov
aad
inc
enter
dec
aam
mov
xchg
test
shr
inc
loope
fwait
pop
cltd
and
popf
adc
enter
or
inc
in
ret
mov
jl
pop
cmp
pop
or
cmp
pop
mov
call
stc
sbb
jp
cmp
sub
sub
loopne
lcall
sub
jb
adc
cmp
test
mov
test
inc
iret
lret
sub
pop
arpl
loop
mov
pop
mov
jmp
add
and
pop
fidivl
jl
sbb
pop
call
jno
inc
mov
pushl
mov
inc
sub
add
stos
mov
shl
les
negb
adc
out
cmpsl
jb
adc
add
jae
jecxz
cmp
xchg
adc
imul
int
jle
stos
xchg
lahf
and
mov
xchg
mov
sub
cmc
adcb
aam
daa
mov
imulb
gs
add
cltd
psubd
mov
cmp
sbb
pop
fsubl
push
xor
ret
pop
cmp
pop
cmp
mov
es
add
pusha
popf
cmpsl
jo
test
lock
sbb
mov
imul
das
cs
adc
mov
mov
cmp
mov
ds
out
jae
in
gs
in
sbb
outsb
lods
mov
adc
jmp
pusha
lret
sub
xor
sbb
mov
fmuls
pushf
ja
aam
dec
inc
jb
pop
add
pop
nop
xchg
xor
adc
inc
lods
jge
les
imul
fwait
jle
imul
clc
or
in
test
xchg
jp
repz
iret
dec
pusha
sub
jecxz
lcall
dec
inc
cmpsl
dec
xlat
dec
rcl
add
mov
adc
pop
lea
and
outsb
push
cmp
cmpsl
lods
pop
xchg
subl
ds
mov
daa
and
xchg
insb
and
lds
cmp
add
mov
xchg
aaa
cmp
adc
enter
jno
fcoml
clc
mov
pop
in
std
sub
sub
xor
and
xor
dec
outsb
loope
wrmsr
mov
jo
rorb
jae
pop
loopne
and
das
dec
mov
adc
rcrb
dec
sbb
xor
sub
dec
and
loop
mov
neg
xchg
inc
out
push
jle
xchg
aas
push
arpl
push
xor
leave
adc
inc
jb
push
clc
leave
pop
je
cwtl
xor
dec
pop
add
ja
popa
out
popf
jne
jmp
imul
push
sub
sub
loop
lods
or
add
push
idivl
pop
inc
outsl
push
or
and
push
adc
mov
orl
and
jae
and
jge
inc
aad
mov
in
bound
js
mov
clc
lock
sar
lret
int3
jmp
xchg
fwait
add
push
sub
aas
cmpsl
fnstenv
jmp
sub
lds
pop
mov
cmpsb
leave
in
push
add
mov
icebp
inc
add
aaa
std
pop
decl
adc
pop
jmp
inc
push
call
cmpsl
sub
push
outsl
dec
sbb
xchg
mov
push
pop
in
jno
popf
push
cld
rol
fwait
xchg
enter
insb
push
xor
mov
mov
pmaxsw
movsb
xor
mov
mov
inc
mov
movsl
cmp
scas
negb
dec
sti
sbb
test
pop
xor
sub
mov
testb
cmp
jbe
and
stos
mov
jge
inc
cld
cwtl
lock
pshufw
dec
outsb
stos
sbb
sub
sbb
js
ja
into
and
sbb
outsl
xchg
lods
cmpsl
loop
mov
xchg
out
xchg
adc
scas
sub
fstps
aad
jnp
jne
xchg
sbb
dec
arpl
xchg
sbb
mov
out
stos
xchg
push
loopne
pushf
push
sbb
sub
sbb
dec
jns
ret
movsb
sub
mov
stc
inc
jle
jns
cmpsl
mov
or
fidivrl
mov
adc
xor
sbb
lret
in
xor
cmp
insb
in
xlat
inc
dec
mov
push
pop
jp
pop
jbe
or
pop
shlb
sbb
adc
push
dec
adc
aad
push
ljmp
jmp
add
sbb
dec
test
xchg
mov
inc
pop
jg
xchg
dec
popa
insl
stc
leave
push
dec
fcmovb
lret
sbb
lds
repnz
jp
cmp
xchg
sbb
jb
mov
cmp
cli
ret
stos
pushf
mov
ret
sbbb
jp
cmp
punpckhdq
sbb
push
and
and
inc
xor
rol
loope
cmc
hlt
adc
mov
cmp
out
fnstcw
mov
fidivs
sub
lret
pop
into
jecxz
sti
push
cmpl
imul
pop
je
pop
cltd
popf
lods
sbb
cld
pop
test
insb
mov
jp
clc
pop
mov
bound
sbbb
or
add
dec
or
and
add
shr
std
jmp
pop
pop
stos
clc
in
xchg
scas
repnz
out
aam
push
adc
bswap
ss
xchg
mov
mov
pop
loopne
xchg
jno
mov
fldcw
jno
adc
sub
mov
ret
sbb
js
sbb
jb
cmp
mov
movsl
xor
ja
sbb
ljmp
inc
arpl
gs
insb
jnp
dec
and
push
mov
mov
loopne
push
xor
jg
test
or
mov
mov
insb
adc
or
push
jno
dec
mov
push
sbb
mov
cmp
push
inc
xchg
mov
nop
push
inc
xor
mov
or
shll
stos
mov
mov
sbb
scas
cld
adc
lea
adc
js
test
dec
adc
pop
and
jne
xor
mov
sbb
add
or
pop
push
mov
pop
shl
dec
ja
xor
xchg
mov
lock
jno
cmp
adc
pop
adc
fisttpll
push
lds
mov
jo
test
xchg
test
lahf
xchg
sbb
inc
sti
outsl
jp
mov
and
into
xor
push
xchg
fdivrs
inc
hlt
mov
nop
sub
scas
faddl
jg
arpl
or
mov
or
sub
fwait
shl
mov
sti
jne
stos
xchg
mov
cli
js
jle
cld
bound
cs
inc
es
dec
jge
pop
or
in
das
stos
gs
xchg
divb
inc
and
out
icebp
and
ja
mov
push
insb
dec
rclb
out
mov
mov
add
test
xor
inc
leave
dec
and
fdivrs
xor
pxor
call
dec
icebp
outsb
sbbl
es
lock
iret
jge
aad
mov
pop
jl
pop
cmpsb
mov
leave
loopne
push
xchg
neg
xchg
add
lock
add
pop
inc
inc
pop
dec
fnstsw
rcll
and
gs
notb
shrl
icebp
testb
leave
insb
cmp
mov
hlt
cmp
testl
f2xm1
dec
and
mov
aaa
ret
lahf
std
addl
sub
arpl
clc
cs
mov
pop
movsl
and
bound
sub
cmpsl
out
xlat
ljmp
pop
pop
faddl
iret
mov
inc
jecxz
cs
or
insl
not
rol
imul
add
lds
mov
es
mov
sub
add
decl
test
daa
andl
add
negl
adc
outsl
dec
and
cmc
adc
fdiv
push
push
push
adc
shlb
push
lahf
pop
mov
imul
in
add
out
dec
push
mov
insb
xor
shlb
fiaddl
ja
inc
push
gs
leave
into
out
sbb
test
ljmp
jle
insb
adc
xor
and
data16
adc
popf
xchg
scas
push
sbb
xchg
outsb
cmp
add
add
mov
adc
pop
xchg
aad
mov
push
xchg
adc
xor
jno
gs
inc
adcb
sbb
sub
push
ret
popa
js
mov
mov
rcll
push
cmp
sub
inc
sub
stos
lods
scas
cltd
ds
addr16
orb
pop
adc
nop
pop
inc
aad
outsb
pop
jle
aas
push
das
mov
add
repnz
rolb
xor
ret
ds
sbb
dec
push
inc
pop
cmp
mov
daa
mov
cs
inc
jb
rolb
ss
test
jecxz
mul
repz
bnd
jg
inc
sub
loop
lcall
sub
xchg
leave
dec
cltd
sub
ss
pop
sbb
lahf
or
popf
lods
rcrb
or
jnp
mov
inc
inc
sbb
push
cltd
repz
rorl
xor
loope
xor
fsubrs
add
andl
dec
jecxz
std
dec
push
outsb
incb
add
nop
jle
add
sub
mov
and
mov
cmp
pop
jns
mov
mov
inc
mov
ljmp
lret
pop
jns
push
mov
push
leave
mov
jecxz
js
mov
mov
arpl
inc
in
pop
dec
push
xlat
xchg
out
ja
xor
test
fwait
mov
repnz
jo
aaa
add
outsl
pop
cwtl
or
and
push
mov
mov
push
xor
sarl
and
push
outsl
fbld
xor
outsb
rolb
pop
mov
and
lea
cmc
xchg
mov
sbb
sbb
repnz
jmp
or
scas
loope
xchg
dec
fstpl
repz
jb
mov
mov
fldl
divl
lret
inc
add
js
mov
js
xor
dec
xchg
inc
int
jp
cwtl
lcall
jno
iret
xchg
lret
push
push
push
mov
xchg
dec
jo
je
inc
jnp
cmp
push
mov
mov
shrb
pop
ror
mov
rclb
fidivl
iret
xchg
jle
insb
data16
push
dec
in
inc
push
mov
push
xor
lcall
cwtl
add
fsubs
aaa
aas
movsl
stos
mov
shl
mov
in
aas
pop
fsubs
les
mov
cmp
mov
mov
sub
fwait
xchg
inc
adc
cmp
scas
jbe
mov
stos
mov
pop
push
or
sub
adc
shrl
push
pop
jmp
iret
aas
scas
inc
fstps
mov
mov
lret
rcl
add
mov
out
adc
add
mov
sub
sbb
xor
dec
aas
leave
jb
mov
mov
push
push
and
pop
in
js
scas
nop
or
ljmp
test
out
shlb
notl
add
fiadds
cmpsb
adc
aas
call
outsl
test
je
fldcw
and
push
cs
mov
shrl
jns
add
xlat
scas
movsb
dec
jnp
fists
gs
hlt
leave
pop
hlt
mov
mov
xchg
icebp
add
dec
xchg
dec
out
xor
push
adc
pop
in
cmp
mov
pusha
loope
push
push
insb
fidivl
inc
push
cmp
sub
leave
sub
push
cld
clc
jl
sub
hlt
pop
hlt
or
add
dec
pop
cmpsl
lret
push
std
inc
jg
and
mov
add
jl
mov
subb
xor
arpl
imul
push
unpcklps
adc
aad
enter
cli
pop
mov
jnp
xchg
pusha
push
or
mov
add
bound
out
sarl
jnp
outsb
jae
pop
mov
in
sahf
cmp
jbe
jmp
mov
xor
ljmp
ret
in
sti
aam
in
aad
mov
xchg
xlat
dec
aad
mov
mov
inc
std
mov
gs
cwtl
test
jno
enter
lds
xchg
pop
cs
lret
lods
pop
cmp
insl
or
mov
pop
scas
push
mov
jle
ss
inc
lods
out
dec
push
push
add
inc
mov
sub
pusha
pop
flds
aas
xchg
cmp
fnstsw
mov
lods
in
arpl
push
mov
push
mov
mov
stos
aam
cmp
xchg
cmp
mov
add
adc
pop
sbb
pop
ljmp
mov
into
aad
sbbl
data16
ja,pn
and
repnz
aas
sti
js
loopw
jb
dec
repnz
das
add
push
iret
mov
mov
std
push
subb
push
mov
pop
sub
in
xchg
into
fsubs
dec
jno
push
insl
push
cmp
sub
push
adc
outsb
test
loop
add
sbb
movl
out
push
mov
inc
and
pop
out
pop
jae
outsb
jecxz
ret
mov
cmpsl
lret
arpl
lret
outsl
xor
and
lret
add
fs
jecxz
movsl
fs
out
add
lret
mov
push
jno
mov
add
loope
xor
testl
push
adc
mov
ljmp
push
mov
cmpsb
xor
dec
push
sbb
and
xor
and
ret
jle
fcompl
sub
leave
push
and
push
out
mov
inc
adc
cwtl
repnz
jb
mov
lahf
in
and
fdivs
mov
imul
ja
imul
jns
loope
mov
std
test
nop
dec
jo
out
sub
mov
pop
imul
pop
push
and
or
xchg
fldl
outsb
inc
jo
or
xchg
add
xor
aad
jbe
mov
sub
sarl
inc
or
ret
mov
jnp
imul
pop
cmp
and
dec
rorb
fisttps
and
sbb
jbe
cmp
hlt
test
push
xor
shrb
cmpsl
adc
clc
mov
pop
and
cmc
sbb
nop
js
or
roll
cmpsl
mov
mov
sahf
fwait
inc
xchg
sbb
cmp
cmp
push
sti
mov
into
add
ja
pusha
cld
xchg
mov
lds
dec
hlt
and
pop
pop
xor
fmuls
cmpsl
cld
xor
fidivs
cli
xor
add
adc
mov
scas
ss
jecxz
sti
fildl
push
mov
or
fs
jns
jmp
leave
inc
cld
mov
dec
cltd
jae
mov
in
lods
mov
scas
lods
pop
jno
movsb
jne
imul
jle
pop
dec
mov
sbb
jno
imul
push
cld
cmpsb
push
dec
pop
mov
daa
cmp
xor
push
mov
sbb
or
decb
test
jg
inc
lret
das
xchg
jmp
hlt
push
sub
cs
leave
dec
test
adc
push
inc
mov
in
nop
dec
jg
lret
cmp
adc
adc
adc
xor
lret
dec
dec
in
xor
mov
dec
jmp
xchg
test
es
fldl
xchg
test
mov
dec
dec
enter
loope
mov
and
lret
xchg
push
jp
loop
xorb
fldcw
sub
cli
mov
mov
sbb
mov
in
and
xor
cmp
mov
sbb
mov
jbe
cli
lret
pop
cmpb
xchg
ficompl
aaa
jecxz
pop
sbb
push
cmp
stc
hlt
daa
xchg
mov
jle
pop
imul
add
dec
lods
sti
or
pop
sahf
jne
or
dec
pusha
and
jl
mov
lcall
pop
out
addr16
lahf
hlt
adc
inc
fidivs
fcoml
fistl
sbb
gs
in
enter
out
aas
adc
or
ds
shll
sub
cmpsl
arpl
or
mov
xor
pop
mov
out
sbb
fisubrs
test
jbe
je
push
incl
mulb
jecxz
mov
fnstenv
mov
pusha
xlat
jle
in
mov
jo
mov
inc
loopne
inc
ret
mov
lds
sub
fisubrl
sbb
shll
sbb
mov
pop
in
cmp
inc
dec
adc
das
das
mov
enter
lods
mov
clc
je
cmc
and
shl
stos
push
insl
incl
test
mov
jle
mov
hlt
or
ret
xchg
inc
add
dec
jo
xchg
lahf
push
out
pop
mov
inc
push
push
sarb
repz
xchg
cwtl
roll
jmp
push
sbb
int
jg
pop
cltd
fnsave
iret
inc
pop
pushf
adc
mov
xchg
sti
stc
jle
push
fmuls
in
and
cmp
shll
dec
cmp
jo
data16
stos
pop
mov
test
jp
imul
inc
xchg
push
fimull
or
out
inc
leave
dec
xor
xor
cmp
dec
aam
adc
or
xchg
or
xor
inc
mov
adc
cli
cwtl
inc
int3
adc
lock
mov
lret
scas
cmp
jno
xchg
xor
pop
mov
mov
lcall
roll
adc
cmp
and
aaa
stos
lods
sbb
cwtl
lret
and
bound
pop
aaa
fildll
jmp
xchg
std
inc
lock
push
push
mov
and
repnz
int
cmp
repz
mull
sbbb
ja
out
ljmp
xchg
add
es
int3
test
inc
dec
cmp
xchg
je
repz
and
lock
clc
adc
sbb
nop
hlt
jo
dec
ret
adc
popa
xchg
push
fdivr
stos
push
mov
xor
movsl
insb
test
pop
mov
shll
inc
aaa
pop
dec
jp
xchg
cmp
push
xchg
test
push
pop
adc
add
pop
cmp
loopne
test
scas
jle
fadds
cmp
or
dec
lods
and
imul
jno
testl
xchg
jecxz
das
lock
jne
jns
cmp
test
push
imul
xchg
sbb
stos
or
stc
sub
mov
jb
gs
push
out
shl
xchg
popa
loop
imul
stos
push
leave
xchg
sahf
lds
inc
pop
popa
scas
sbb
jle
xchg
clc
jno
cmp
push
jae
lret
inc
cmp
mov
out
inc
inc
mov
rorb
mov
hlt
mov
mov
push
ret
pop
fistps
pop
push
push
aam
pop
jnp
andl
popa
jno
clc
push
fisubs
push
dec
enter
xchg
ja
push
subl
mov
jbe
lret
jmp
jle
enter
icebp
inc
cmp
ss
adc
xchg
inc
cs
add
jmp
lds
daa
adc
mov
ja
gs
std
pop
imul
jbe
push
dec
and
ja
jecxz
push
or
jns
xor
jne
pop
dec
sbb
inc
lea
outsb
and
out
xlat
xor
pop
lret
mov
xor
inc
stos
xchg
push
inc
popa
stc
mov
push
mov
orl
cmpsb
mov
mov
sub
xor
and
movlps
insl
lret
push
jae
sbb
inc
lcall
test
stos
rcll
sbb
outsb
lcall
outsl
ja
push
push
sarl
andl
inc
test
lods
mov
daa
mov
scas
in
outsl
aaa
testb
imul
jbe
dec
jg
push
sub
data16
inc
faddl
addr16
in
dec
loopne
ret
lret
inc
xchg
pushf
aas
jb
inc
outsl
sbb
jo
lret
dec
iret
scas
push
mov
leave
test
jo
sub
mov
dec
adcl
cmc
or
repz
mov
shrb
or
jno
adc
inc
mov
pop
fstp
add
mov
les
cmp
dec
stos
stos
rclb
mov
rcrl
and
sub
mov
ds
mov
sub
pushf
dec
shlb
xchg
adc
int
xor
hlt
cmp
in
inc
add
mov
mov
frstor
xchg
sahf
clc
xor
add
out
xchg
jns
stos
iret
outsl
arpl
cltd
pop
loop
jp
lcall
mov
jae
xlat
lods
sub
pop
dec
repnz
mov
mov
into
aam
xlat
addr16
lock
adc
cmp
push
and
or
mov
sti
fcomps
sub
sbb
outsb
icebp
aam
cmpl
inc
std
mov
and
cli
test
into
mulps
lods
movsl
xchg
jle
test
lock
pop
ss
inc
bndstx
pop
cmpsb
fs
movsl
stc
rcll
add
ret
jecxz
cwtl
mov
cmp
cmp
cmpsb
xchg
add
testl
vmptrld
rcrl
sbb
sbb
in
ret
aad
xchg
or
inc
xor
outsl
rcll
ficoms
mov
cmc
mov
movsb
loope
xchg
lea
mov
sub
fstpl
push
dec
adc
push
mov
jns
sbb
daa
push
bound
xor
adc
aam
pop
push
popa
dec
cmp
add
loopne
dec
cmp
out
cmpsb
inc
daa
iret
cli
push
push
mov
jns
xchg
pop
pushf
cmc
clc
mov
in
sbb
repz
xchg
ljmp
rorb
cmp
cld
imul
xchg
stos
loopnew
mov
sub
mov
or
jge
fs
xchg
lret
ljmp
pop
add
sbb
jbe
and
ljmp
sub
mov
push
cmp
push
inc
clc
sub
subl
add
test
loop
jle
mov
cmc
mov
leave
xor
inc
loopne
js
ret
loope
jle
sub
inc
adcl
jne
push
aad
out
or
enter
dec
ja
out
dec
popa
int
movsb
scas
xor
icebp
pop
mov
dec
test
inc
dec
cmp
cli
inc
mov
fistpl
call
cmp
clc
push
leave
mov
xchg
adc
icebp
popa
fsubrs
orb
dec
cs
jle
test
rep
movsb
cmpsb
fsubr
dec
xor
js
mov
rcrl
pop
cmpsb
lahf
dec
test
xchg
addr16
aad
jae
inc
mov
out
jnp
mov
mov
dec
mov
mov
lods
pop
or
jno
jnp
mov
sub
lods
add
push
sub
in
popa
adc
adc
sbb
xor
jns
jl
je
push
mov
pop
out
xchg
loope
stos
loopne
inc
jge
mov
hlt
stos
bnd
lret
lock
clc
cmpsb
std
daa
add
mov
cwtl
dec
sahf
xor
push
cld
in
fisubrs
sbb
outsl
jns
xchg
addr16
xchg
and
je
fmull
or
aad
repz
sbb
xchg
stc
leave
popa
rorb
mov
negl
jb
push
and
or
dec
fiaddl
adcb
inc
sbb
mov
jg
lods
and
mov
add
aas
sbb
jge
int3
cmc
sbb
sub
out
adc
lods
movsb
aas
cmp
loope
out
cmp
and
shll
daa
inc
adc
ss
cld
es
iret
cs
and
repz
arpl
pop
fcmovne
inc
xor
repnz
fimull
push
or
lea
jg
pop
xchg
mov
fwait
icebp
push
xchg
outsb
dec
xchg
imul
sbb
out
shll
xchg
xchg
adc
lahf
pop
aaa
aaa
rcl
subl
loope
push
fcmovu
mov
dec
jle
adc
test
jbe
pop
dec
test
inc
dec
push
mov
sub
int
push
addb
shll
icebp
insb
sbb
xor
push
xor
jmp
or
cwtl
inc
push
out
pop
mov
outsb
ja
dec
int3
mov
xor
mov
adc
ret
imul
pop
scas
fdivrs
int3
jno,pn
orb
insl
idiv
fs
jo
aas
test
inc
pop
outsl
pop
std
push
inc
daa
in
mov
pop
daa
pop
cmpsb
movsl
cld
aad
outsl
pop
in
nop
leave
sbb
out
adc
les
sbb
pop
divl
and
call
subb
pop
or
xor
das
arpl
inc
sub
xor
sbb
adc
sbb
js
jns
jo
gs
imul
mov
ss
push
fdiv
and
xchg
cmc
pop
adc
sub
push
or
xorb
adc
pop
jb
xchg
fiadds
rclb
mov
adc
adc
test
sbb
adc
sub
add
and
lea
addr16
into
in
jbe
imull
enter
and
fwait
pop
aad
lcall
dec
loope
and
push
arpl
ss
dec
push
or
loop
sbb
in
push
or
aad
shll
push
adc
push
jg
mov
subl
or
insl
jp
fwait
movsb
or
cmpb
adc
fsubp
cs
jmp
pushf
mov
sub
in
sub
sub
cld
mov
test
scas
pop
shlb
call
lods
stos
addb
repz
addr16
cmp
in
cld
mov
add
movsb
pusha
add
into
xchg
decl
cmpsb
icebp
movsl
repz
xchg
adc
push
fcoms
xchg
lahf
in
shr
pop
sar
lea
outsl
mov
cmc
imul
mov
jle
in
loop
lret
jl
gs
cwtl
mov
and
and
push
xchg
test
xorb
out
dec
sub
adc
test
mov
icebp
cmpsb
fadd
ja
cmpb
cmp
xchg
xor
inc
or
std
adc
mov
popa
mov
pusha
or
pusha
push
pop
jp
push
cmp
mov
imul
jmp
rcl
orl
outsb
les
dec
push
in
test
imul
shlb
mov
inc
inc
cmp
nop
mov
xor
pop
mov
aad
aaa
and
daa
enter
jl
sub
mov
add
loop
mov
dec
or
sahf
in
in
jne
add
ret
scas
adc
jb
pop
ret
push
push
adc
pop
xor
cmp
out
pusha
jmp
sub
or
dec
xor
cmp
xlat
sbb
popa
or
xchg
dec
inc
pmullw
movsbl
lea
pop
mov
int3
xor
ss
mov
pop
ret
push
sarl
inc
or
out
add
adc
int3
mov
sub
mov
or
jns
out
sbb
into
inc
imul
in
pop
mov
lods
pop
inc
fsubl
fcmovnbe
repnz
sub
jae
push
daa
cmp
jp
adc
xchg
idivl
inc
das
fisubl
dec
cli
fsts
imul
or
fldcw
sti
inc
cmpl
jle
dec
jp
adc
leave
sbb
fucom
lret
ret
xchg
xchg
sub
fs
jmp
ret
gs
add
fnsave
mov
sysenter
psubq
adcl
sub
lahf
out
pop
lret
cmp
adc
mov
fdivrp
andb
dec
pop
imul
ret
xorl
iret
add
mov
push
mov
cmpsl
lea
out
aaa
ljmp
push
adc
in
jns
lahf
and
enter
shl
repnz
das
imul
or
dec
sbb
insb
cmc
orb
test
aas
xor
ljmp
fcmovnb
out
mov
ja
push
je
addl
xor
dec
hlt
cwtl
insb
mov
ljmp
inc
or
add
and
das
hlt
fbstp
pop
mov
mov
popa
sbb
mov
test
sahf
leave
fmull
aam
into
dec
cmc
mov
push
or
ficomps
jae
jp
enter
sub
subb
pop
dec
orl
iret
push
cmpsb
push
push
lret
lods
insb
jmp
shrl
fwait
jne
xchg
sbb
iret
xchg
dec
gs
pop
repz
xchg
mov
test
int
ja
mov
clc
data16
jbe
or
xor
cmp
ret
adc
call
adc
mov
aaa
xchg
push
mov
cwtl
mov
cmp
dec
push
push
xor
and
xor
les
das
pushf
xchg
int3
fdivs
rolb
lret
outsb
mov
std
imul
or
jne
cmp
sbb
sbb
es
loop
gs
xchg
arpl
pop
sbb
mov
jmp
fidivl
lahf
imul
ficompl
das
xor
ljmp
rcll
jne
adc
mov
fldl
sbb
imul
xor
mov
xor
negl
dec
xor
xchg
cmp
sub
or
rol
pop
mov
or
rolb
push
vmovups
xchg
out
movsb
add
icebp
cmp
sbb
adc
sbb
iret
push
rorl
into
adc
mov
or
mov
mov
sub
push
xchg
inc
and
cld
add
test
pushl
aad
and
ret
ss
push
jb
push
pop
or
xchg
cs
pop
mov
jg
in
pop
in
xchg
addr16
sbbb
jnp
pushf
js
push
add
dec
fxch
jns
dec
push
js
stos
les
push
sub
adc
shlb
cs
adcl
cmp
pop
adc
pop
jl
ljmp
je
fnstenv
cmp
aam
leave
aad
jmp
xor
pop
push
in
and
add
dec
xchg
mov
or
andl
xchg
jl
cmp
cmpsb
lahf
icebp
dec
es
loope
es
add
enter
shrb
cli
sbb
cmp
imul
mov
xlat
int
sub
pop
in
inc
in
lods
lds
cwtl
inc
arpl
push
ljmp
jmp
jge
xor
xchg
push
pop
dec
or
jbe
inc
mov
adc
cmpsb
stc
out
cmp
cmp
call
add
or
cmc
lret
cli
pop
cltd
ss
sub
adc
scas
daa
int3
psllw
fwait
out
test
pusha
xlat
ret
cmp
test
cwtl
fiadds
xor
cli
nop
imul
mov
dec
in
movsl
loope
call
dec
sbb
repnz
mov
cmp
push
push
test
cmp
out
sbb
mov
test
repnz
push
aaa
sub
pop
pop
xor
andl
cltd
pop
sbb
xor
jo
xlat
pop
mov
xor
mov
mov
mov
jb
call
shrl
inc
xchg
loop
pop
sbb
xchg
js
mov
mov
cli
loopne
xchg
std
push
and
inc
fistl
mov
xlat
pop
fdivrl
insl
push
cmpsl
xor
movaps
nop
sbb
out
scas
cltd
test
cli
jecxz
aam
stos
add
jbe
loop
leave
dec
inc
movsb
fisttps
push
mov
and
in
pop
inc
or
sbb
out
out
adc
adc
pop
xchg
icebp
jp
je
mov
fsin
or
out
dec
pop
xchg
pop
iret
jnp
and
push
test
fsubrl
mov
dec
es
push
push
mov
push
cmp
out
push
sbb
and
movsb
sbb
rclb
out
sub
movsb
adc
sbb
mov
sahf
pop
adc
push
jmp
repnz
or
xchg
out
out
xor
in
sahf
jp
dec
idivb
or
je
pop
loope
or
pop
pusha
addr16
mov
flds
sub
jno
pop
or
mov
mov
mov
xchg
pop
mov
jno
pop
mov
mov
aas
lock
notb
movsl
push
ss
xor
and
adc
aad
and
out
adc
popf
roll
repnz
cmpsl
int
les
push
xor
jb
sub
aas
xchg
loop
push
sub
mov
inc
pop
lds
xorb
and
mov
push
push
and
test
ficomps
jmp
dec
mov
test
lcall
push
ds
clc
pop
jo
cmp
adcl
adc
xlat
es
orl
xor
sbb
int3
out
outsl
test
sub
fwait
push
cmp
push
push
leave
fldenv
jo
out
add
das
inc
sbb
dec
lcall
mov
push
mov
xchg
jl
push
adc
ret
or
scas
push
mov
mov
dec
fwait
mov
les
mov
jmp
sarl
xchg
sbb
enter
out
sub
xchg
dec
adc
std
repz
xor
push
lds
cmp
add
mov
mov
adc
mov
inc
shrb
mov
push
jnp
ss
pop
in
cwtl
int
popf
xor
mov
outsw
pop
in
push
jnp
ds
pop
push
mov
mov
fidivrs
xchg
dec
inc
dec
pop
pop
loop
mov
pushf
pop
in
sar
adc
mov
or
push
sub
outsb
pushf
inc
stos
out
gs
movsb
inc
push
jmp
pop
in
jbe
outsl
mov
ss
or
mov
aam
jnp
xchg
pop
add
sub
out
ss
lock
inc
inc
cwtl
jle
repz
aaa
sbb
movsl
push
adc
stc
inc
sbb
daa
sbb
aad
arpl
xchg
mov
pop
mov
jnp
stos
cmp
mov
outsl
notb
cmp
mov
mov
pop
push
call
nop
adc
in
cmp
fdiv
movsb
adc
fiaddl
push
pop
mov
ss
inc
mov
jns
addr16
iret
cmpsl
add
or
inc
inc
adc
mov
xor
xlat
ret
cld
pop
sarb
xor
push
xor
jmp
mov
popa
mov
mov
sub
sbb
xchg
out
pop
cld
cwtl
adc
cmpl
arpl
andb
push
dec
mov
stos
mov
jecxz
je
out
scas
frstor
and
and
testl
aad
icebp
loope
in
sub
push
rclb
das
hlt
gs
int3
cmp
cmp
sarl
addl
leave
push
mov
lret
lock
xor
out
aaa
arpl
pusha
xchg
jmp
cltd
xlat
mov
movsb
jmp
push
dec
into
add
fwait
push
loope
pusha
in
rolb
push
jno
clc
adc
fwait
jbe
mov
clc
lock
inc
cmp
call
jae
mov
mov
sbb
and
fisubrs
loopne
repnz
iret
pop
mov
pusha
push
jge
sub
adc
outsl
rcr
mov
inc
xchg
sub
jl
or
cmp
adc
loop
inc
loop
ficompl
sub
repnz
movsb
jo
sbbl
fwait
cmp
test
pushf
jl
test
and
xor
stc
mov
clc
aaa
add
daa
and
lock
pop
movsb
in
data16
aam
dec
push
sbb
shrw
movl
push
pushf
xor
lds
repnz
xor
loope
ljmp
cmpsl
pop
ja
fs
fimull
adcb
xchg
dec
xchg
mov
jbe
pop
dec
clc
aas
outsb
icebp
mov
mov
adc
xchg
add
shrl
pop
sbb
lea
jl
or
push
push
adc
mov
push
inc
insl
loopne
mov
push
push
push
ljmp
shll
pop
cmp
mov
xor
out
sbb
xchg
shrl
js
fmull
sbb
cs
iret
mov
dec
inc
hlt
jns
push
push
jbe
or
cmp
ds
mov
adcb
and
mov
add
sub
push
sub
xchg
xchg
and
and
mov
cli
add
sub
inc
or
push
sbb
jbe
outsb
pop
roll
sub
pop
fdivl
sbb
cmp
mov
cs
std
and
addl
cmp
lret
bound
cmp
and
add
mov
mov
out
in
mov
adc
inc
in
jns
ror
sub
adc
movsb
int3
adc
pop
mov
cld
cltd
pop
leave
shr
into
cld
enter
mov
mov
pop
out
ret
cmp
stos
push
es
jns
insl
jns
dec
mov
inc
iret
push
jb
mov
mov
pop
and
insl
fdivr
rorl
test
scas
inc
jl,pt
pop
ljmp
cmp
orb
sbb
aad
mov
ja
icebp
adc
rcr
sub
inc
sub
popa
addr16
add
pop
movsb
das
in
lcall
mov
out
pmovmskb
gs
jl
jne
sbbl
and
or
xor
sbb
das
xchg
outsl
dec
push
imul
imul
popa
mov
sbb
lret
incl
mov
inc
ja
outsb
call
or
lret
or
sarl
mov
push
test
and
enter
repnz
cmp
aad
and
mov
fidivl
xchg
addb
dec
push
dec
and
out
repz
push
lcall
push
add
jne
jo
shrb
xchg
shlb
cmp
pop
mov
enter
call
mov
pop
iret
movsb
mov
push
xchg
push
call
inc
lds
cmp
stos
inc
mov
pop
sbb
adc
xor
cmp
fidivl
ss
pxor
mov
xchg
adc
bswap
ret
push
sbb
mov
imul
xchg
mov
and
inc
int
clc
sarb
addr16
xlat
gs
mov
jno
loope
pop
pop
into
js
popa
fbld
lret
jb
lret
cwtl
fdivl
stc
sbbb
or
adc
cli
pop
adc
repz
sub
adc
dec
fsubrl
clc
jmp
pusha
call
nop
add
jbe
cmp
push
fwait
cld
ss
adc
add
xchg
mov
sarl
popa
inc
cmpsl
cmpsb
xchg
adc
jmp
lods
cltd
int3
clc
sti
pop
imul
pop
xor
push
jmp
inc
push
fsubrp
cmp
sbb
cmp
dec
out
popa
cmpsb
sbbb
jmp
sbb
push
mov
loope
repnz
icebp
cs
sahf
cmc
repnz
pop
pop
mov
push
fnsave
shrb
sar
notl
movsb
bound
scas
push
cld
or
pop
add
inc
jecxz
fisubl
pusha
rcr
faddl
xorl
test
inc
xchg
fs
aad
cmc
es
ljmp
outsb
mov
mov
aad
lods
jmp
inc
mov
sub
addr16
fiadds
ds
adc
jne
out
test
push
clc
sahf
jge
test
xchg
sub
sbb
rorb
xchg
jge
fcmovb
bound
pop
stc
mov
pusha
mov
and
adc
enter
and
scas
fisubrl
push
cmpb
push
faddp
xchg
ret
sub
xor
filds
in
in
sub
sbb
lods
push
sbb
and
xor
push
jp
mov
aas
out
lea
cmp
dec
xchg
les
push
cs
adc
loope
mov
clc
lret
push
pop
ss
ss
add
or
lret
inc
clc
mul
jbe
test
push
and
adc
mov
loope
shrl
cmp
movb
movsl
jne
mov
idivl
xchg
xor
push
jp
bound
movsl
cmpsl
test
cltd
shlb
lods
xchg
popa
fdivrl
mov
ljmp
divl
pop
fldl
xor
jno
mov
push
shll
and
jae
cmc
in
push
insl
mov
and
xchg
sub
jmp
leave
ljmp
test
mov
add
fidivrl
mov
dec
adc
mov
movsb
inc
jo
jb
sub
loope
and
ja
push
or
sbb
dec
andb
mov
jecxz
cmovne
daa
insl
in
push
sahf
push
lcall
clc
dec
sbb
adc
jp
sbb
aas
push
insb
lods
cmp
xchg
icebp
sarl
jmp
int
test
adc
xor
push
out
aad
inc
cmp
cld
push
mov
inc
movsb
dec
or
ss
into
xor
inc
decl
pusha
add
jge
push
cmpsb
mov
adc
sub
ss
xchg
add
inc
cltd
pusha
mov
jno
in
hlt
movsl
push
ja
enter
dec
mov
fwait
add
inc
add
out
fwait
add
aas
pop
fs
add
jae
ds
lea
and
jo
rcrl
es
mov
xor
call
in
pusha
imul
int
adc
adc
and
int
pop
cli
pop
cs
scas
jl
lret
bnd
push
lret
clc
inc
sbb
scas
and
xchg
es
pop
jns
sti
arpl
orb
mov
sbb
push
fiadds
mov
and
pop
movsl
ror
das
out
and
sbb
xor
adc
cmp
adc
sub
push
arpl
pop
inc
nop
popf
ljmp
loop
ss
divl
xorb
fwait
divb
xchg
or
pusha
or
mov
and
repz
push
iret
shrl
jmp
and
movsb
lea
pusha
cmp
or
popa
dec
and
or
push
pop
adc
xor
sub
xor
fadd
in
aam
cmc
popf
fists
pop
test
inc
popa
gs
sub
mov
int
stos
into
inc
xchg
xchg
movsl
fistpll
mov
xchg
cmp
cmpl
pop
ret
clc
mov
xchg
movsb
xor
and
fs
data16
dec
pop
jno
xorb
dec
mov
test
or
mov
out
insb
cmpsb
push
clc
push
es
test
push
popa
sbb
dec
mov
push
repnz
fnstcw
js
call
gs
jns
jecxz
sbb
sbb
and
int3
push
xor
loop
and
push
loop
xchg
fimull
nop
cwtl
mov
jle
dec
cwtl
cmc
push
insl
shrb
jnp
icebp
lret
arpl
xor
dec
test
or
push
movsw
dec
shlb
add
xchg
cmp
push
aaa
sbb
dec
orl
ficoms
jb
add
into
mov
ficomps
mov
push
push
out
dec
sub
adc
cmp
cmp
sbb
or
mov
and
sub
mov
pushf
rorl
scas
push
sbb
push
add
enter
test
imul
out
out
pop
add
lods
pop
pop
jae
cmp
data16
sahf
in
sub
mov
insl
mov
sbb
fldt
cmp
mov
das
imul
and
mov
mov
mov
mov
add
xor
test
cmp
mov
add
mov
xor
shl
lock
push
push
mov
mov
xchg
push
jnp
int3
jmp
popf
pushf
popf
gs
inc
pop
dec
es
je
lods
pusha
lock
mov
lcall
in
stos
sub
inc
or
add
mov
jno
pop
aad
loope,pt
lahf
mov
sbb
lds
and
addl
scas
inc
sbb
les
lret
and
or
and
je
jns
shll
cmp
lock
push
cmp
and
mov
test
jecxz
mov
mov
sub
push
test
mov
xchg
and
mov
je
jp
ret
movsb
inc
add
mov
repnz
imul
sbb
mov
jo
mov
fistpl
adc
loopne
ss
fisttpl
insl
enter
repnz
adc
inc
jo
fisttps
sub
addb
hlt
mov
scas
icebp
mov
jne
fwait
mov
xor
cmc
add
and
sub
scas
xor
xlat
in
insb
mov
aam
mov
and
inc
mov
pop
out
repz
and
mov
mov
popa
sub
add
inc
adc
inc
push
add
dec
test
inc
jp
repnz
mov
mov
fsts
or
cmp
cs
pop
pop
jbe
mov
xor
sub
loopne
pushf
xchg
xchg
aad
and
xor
inc
dec
xchg
in
mov
lret
add
xchg
cmp
inc
outsb
jb
daa
inc
inc
mov
js
cmp
cmp
in
inc
cs
cs
cmpsb
in
cmp
jno
pop
dec
sub
mov
xchg
mov
xchg
cli
xchg
sbb
adc
dec
mov
pushf
es
pop
imul
aas
fistl
gs
mov
lods
adc
enter
mov
lahf
inc
divb
sbb
inc
pop
ss
inc
and
in
and
sub
jnp
movsb
mov
hlt
popa
push
add
shrl
sbb
jbe
div
dec
pop
aaa
mov
or
or
sti
int3
xor
lds
cmpb
cmp
outsb
sub
mov
lea
mov
pop
scas
int3
add
imulb
ss
xchg
sarl
xchg
movsl
ret
inc
mov
gs
pop
cmp
dec
cmp
in
sarb
ss
ret
push
lcall
int
dec
mov
adc
test
gs
sub
and
scas
pop
addr16
fsubrs
mov
stc
adcl
stos
loop
scas
jmp
movsb
jno
dec
ret
dec
adc
fprem
clc
pop
cs
icebp
fwait
js
jns
sub
add
test
jge
push
cmpsb
jge
sub
xchg
mov
out
push
xchg
sbb
pop
sbbb
push
push
xor
sbb
jo
dec
call
inc
mov
scas
es
fisubs
stos
or
xchg
in
iret
pop
jp
call
pop
ret
cmp
jg
arpl
adc
jno
ja
jl
add
out
jge
fs
int3
jge
roll
xor
xchg
es
push
cmp
pop
leave
stos
dec
rcrl
scas
mov
cmp
lds
imul
sbbb
add
cmpsb
xchg
loope
add
iret
jmp
divb
jp
dec
mov
and
mov
es
sbb
or
mov
dec
mov
aad
or
movsb
or
adc
std
mov
aaa
jg
popf
jno
aas
inc
sub
jnp
or
dec
adc
jge
adc
xlat
je
ja
dec
mov
clc
cmp
lret
jb
push
cmp
pop
stos
and
sub
dec
dec
ss
and
and
cmp
or
cmp
sub
aad
cmpsb
add
out
pcmpeqd
daa
dec
gs
sahf
loope
cmp
cwtl
and
mov
mov
xor
flds
cli
mov
lock
cmp
mov
jno
test
and
xor
add
dec
std
mov
or
ljmp
not
jg
jmp
icebp
mov
leave
mov
add
add
xchg
outsl
mov
push
movsb
cmp
aam
call
dec
fwait
xor
std
das
inc
insl
cltd
cltd
adc
arpl
inc
inc
pop
addr16
aam
cmp
mov
aas
popf
incb
in
and
out
mov
lods
jbe
adc
je
pop
outsl
movsl
inc
or
pop
dec
pop
fdivrs
and
leave
and
xchg
cmp
into
decb
sbb
pop
iret
fwait
nop
repz
nop
jge
or
inc
outsl
imul
clc
mov
pop
dec
fs
xchg
loop
test
lahf
or
int
inc
push
inc
adc
out
je
or
stos
xchg
fptan
dec
mov
mov
xchg
ret
lcall
out
jne
mov
loopne
test
jns
imul
xchg
and
mov
xor
es
pop
push
xor
inc
lods
ja
test
test
lahf
lock
popf
in
mov
xchg
dec
xor
aam
loopne
out
rorl
pop
movsl
pop
sti
xor
stos
mov
loope
push
int3
pusha
gs
or
in
fwait
insb
insb
imul
int
jb
dec
mov
push
dec
mov
xchg
iret
xor
jo
cmc
movsl
loop
loopne
imul
adc
loop
mov
gs
das
out
and
test
notl
and
rcrb
nop
and
mov
pop
aam
mov
aam
iret
not
inc
push
xchg
icebp
dec
leave
es
in
xchg
adc
int
aad
stc
xor
hlt
fdivrl
aas
add
lcall
or
out
dec
insb
lds
pop
test
cwtl
testb
pop
push
or
ret
in
arpl
dec
ljmp
sbb
scas
leave
arpl
lock
popf
in
fs
in
jns
sbb
jg
loop
lods
push
cmp
or
xchg
sbb
andl
mov
inc
sbb
into
mov
loopne
sbb
xor
test
fildll
sbb
jecxz
popf
insb
lret
xlat
stc
xor
inc
mov
test
cmp
in
lods
inc
lods
lahf
mov
iret
loop
jae
xor
mov
push
rcrl
inc
stc
pop
rolb
jmp
cld
adc
notb
xor
sarb
inc
insl
mov
ret
mov
sub
es
push
in
cltd
jge
fsubrs
mov
aaa
jmp
push
rcrb
out
push
std
clc
flds
lods
jno
inc
mov
int3
arpl
jl
insl
inc
lea
mov
sbb
pop
ficoml
mov
pop
inc
cmp
mov
mov
shll
xchg
add
xor
push
or
scas
scas
shl
lds
xchg
in
mov
decb
cmp
xor
mov
out
test
ja
add
add
sbbl
inc
jge
pop
mov
nop
xchg
inc
in
sbb
lret
jo
cmp
pop
push
or
jb
stos
aas
mov
sub
jmp
test
pop
mov
pushf
jbe
mov
mov
inc
sbb
leave
jp
sbb
cli
inc
mov
clc
test
push
cmp
jg
cwtl
dec
pop
shlb
mov
sub
sub
mov
ljmp
fsub
adc
push
dec
bound
rcrb
xor
pop
jae
cmpsl
call
sbb
dec
js
lcall
or
jp
jp
pushf
fmull
adc
cmp
orb
rcll
and
add
sub
scas
and
ret
in
into
hlt
test
sbb
sub
sbb
add
repz
mov
sub
push
dec
push
xchg
adc
imul
mov
and
sbb
jp
and
les
push
scas
sti
pop
push
mov
hlt
ret
push
mov
repz
mov
daa
fistpll
xlat
xchg
popf
or
mov
mov
dec
in
insb
addr16
lds
push
adc
jnp
loop
jp
fcompl
nop
adcb
xor
mov
sti
dec
loope
jl
pop
insb
cmpsl
or
pop
mov
stos
jmp
leave
stos
sbb
mov
jge
adc
outsl
lea
add
imul
mov
bound
and
icebp
mov
hlt
repz
test
mov
inc
int
sbb
adc
sub
sub
cwtl
xor
or
ja
aam
sub
sub
les
xchg
dec
xor
xchg
rcl
mov
inc
inc
jbe
fdivr
aaa
aaa
and
movsl
fwait
ret
lods
bound
fld
or
or
clc
movsb
or
les
scas
adc
ret
outsl
push
jmp
cltd
fisttps
ds
daa
dec
push
hlt
es
clc
loopne
and
out
xchg
orps
cmpsl
mov
int
jge
std
inc
jno
test
cmp
cmovp
nop
sub
int3
push
inc
mov
pop
pusha
fstl
lea
cmp
pop
js
bound
mov
and
xor
loope
mov
pop
test
je
dec
shrl
xchg
sub
push
hlt
add
insb
fsubr
int3
push
fs
sbb
aaa
fimuls
sbb
pusha
test
shl
adc
sub
add
cmp
cmc
mov
mov
sub
inc
pop
sbb
cmp
enter
and
insl
bnd
or
lcall
xor
sbbl
repz
es
xchg
adc
stc
test
movsb
mov
cmp
stos
lahf
dec
fistpl
push
js
fs
out
pusha
aas
rolb
adc
mov
fstpl
ret
or
push
adc
xchg
ret
xor
pop
adc
test
cli
loopne
int3
xorb
mov
out
push
xchg
sbb
lea
cmpsb
sub
popa
mov
ret
mov
xchg
push
and
fstps
xor
insl
xor
jne
mov
add
xor
push
subb
orl
mov
cwtl
mov
mov
mov
xchg
cmpsb
lret
xchg
jle
mov
fs
dec
rclb
arpl
lret
sub
rcrl
and
push
pushf
inc
jle
adc
insb
inc
add
clc
cmp
aad
lret
jp
out
popf
jb
add
cmpsb
scas
fcomps
or
sub
repnz
shrl
jge
sbb
fcoms
xchg
cltd
dec
sbb
mov
roll
jbe
scas
adc
divb
push
sub
jecxz
int3
inc
inc
jbe
xor
xor
pop
lds
pusha
roll
xor
add
arpl
push
rdmsr
or
mov
in
hlt
mov
pusha
adc
jo
dec
inc
sub
lods
jp
adcl
dec
and
dec
sub
push
push
add
int
push
pop
dec
loope
jns
inc
lock
stos
adc
rcl
add
add
repz
jle
cld
jnp
mov
mov
xor
mov
pop
cli
xchg
push
lret
lea
adc
inc
mov
pop
sahf
inc
enter
mov
inc
sub
js
pop
lods
les
mov
insl
inc
bound
movsb
lods
xchg
rcr
pusha
jae
xchg
cli
in
xchg
dec
push
cmc
scas
adc
jge
paddq
mov
jmp
into
adc
dec
xchg
cli
ficompl
inc
push
ucomiss
jb
adc
xchg
mov
jne
and
jbe
adc
or
mov
popf
lds
mov
jnp
push
jge
movsb
cltd
sbb
enter
jecxz
in
inc
repnz
xchg
addr16
adcl
gs
aad
out
mov
jecxz
xlat
pop
xlat
pop
testb
int3
in
xor
movl
movsl
rclb
inc
pop
addr16
or
xchg
dec
mov
pop
dec
xchg
addr16
xor
iret
xchg
pop
xor
psubsb
adc
outsl
mov
and
push
add
cmp
mov
lret
fidivs
test
push
dec
push
inc
rep
pop
repz
jb
in
lret
sub
sbb
mov
sti
mov
test
icebp
mov
std
pop
xor
push
sbbl
dec
and
fldt
inc
fwait
or
inc
adc
add
ljmp
leave
pushf
fwait
pop
cmp
jecxz
lahf
or
sbb
fcoms
and
sub
aaa
sub
punpckhwd
mov
dec
cwtl
lahf
neg
mov
loope
jb
test
pop
faddp
push
mov
adc
jl
push
fbld
je
ficompl
add
lcall
insb
popf
ret
xor
inc
push
jne
add
cmp
das
aas
fwait
push
push
jp
imul
pop
and
cmp
and
pop
or
mov
es
test
ds
jp
lods
fsub
test
enter
jbe
pop
or
mov
add
mov
pop
push
ss
in
xchg
sbb
push
insb
inc
lcall
in
xchg
imul
mov
out
cmpsb
subl
dec
mov
inc
sub
xor
scas
je
int
aas
cltd
add
inc
fcmovnb
mov
je
and
push
lock
jp
imul
icebp
xchg
pusha
lds
xchg
cmpsb
fstpl
lret
das
dec
neg
lds
sbb
nop
fldcw
and
sub
dec
lock
imul
dec
call
dec
sub
push
and
push
popa
scas
aam
inc
aaa
fistps
das
jecxz
sub
inc
xchg
mov
adcl
mov
push
lret
pop
mov
lea
movsb
popa
xchg
insl
sub
cmp
or
or
adc
addl
mov
push
roll
sub
fimuls
lcall
sbb
stos
mov
imul
dec
add
jmp
mov
jbe
and
xchg
cmp
ss
add
mov
push
pop
jb
lcall
xchg
add
dec
adc
les
ljmp
ljmp
pop
xor
lea
mov
leave
adc
sub
mov
test
push
iret
or
jns,pn
ret
test
iret
sub
pop
cs
sbb
push
inc
sub
inc
xchg
and
mov
aaa
and
into
fimull
test
push
adc
clc
xor
fnstsw
mov
gs
pop
jg
push
sbb
inc
mov
stc
enter
jns
push
xor
mov
xchg
es
mov
mov
stc
dec
test
lahf
sub
adc
lret
adc
outsb
inc
pusha
int
cltd
lret
xchg
jne
imul
push
or
sub
lea
xchg
lret
shrl
lahf
insb
aad
or
adc
mov
mov
testb
mov
jp
xchg
cmpsb
cmp
jecxz
out
mov
xlat
iret
bound
and
rcrl
pusha
nop
push
popf
aaa
jecxz
sahf
enter
cmp
ja
fsubs
das
inc
daa
in
addb
fldcw
inc
in
jae
dec
pop
mov
ds
mov
and
jne
insb
jnp
push
les
pop
movsl
stos
fdivs
pop
in
jo
mov
push
ss
xlat
jge
jns
xchg
out
sti
sub
pop
push
xchg
scas
je
lock
adc
inc
int
clc
out
pop
fdivs
inc
mov
aam
pop
pop
mov
stc
les
xor
dec
icebp
mov
addl
and
ds
cltd
mov
pop
and
lods
out
push
add
mov
shlb
adc
mull
or
and
pop
lcall
xchg
xchg
jno
mov
or
enter
enter
push
mov
and
dec
aaa
pop
cltd
sbb
xor
mov
sub
xchg
cmp
and
pop
cs
xchg
pop
mov
inc
pop
and
cmpsl
loope
push
pusha
cmp
cmp
and
mov
inc
call
xchg
rorl
xlat
pop
dec
test
mov
outsl
push
xchg
cld
mov
cmp
adc
daa
xchg
add
test
push
jnp
fisttpll
test
mov
jl
std
xor
fiaddl
dec
add
adc
lods
les
imull
gs
pop
xlat
adc
lods
mov
imul
popf
cmp
or
lods
xor
mov
pop
ss
jbe
jnp
cmp
xor
aad
fidivrs
mov
cmp
jge
jbe
inc
mov
mov
sarb
and
pop
xchg
add
push
cmp
lods
mov
xchg
sub
ljmp
dec
mov
ret
sbb
es
and
sbb
in
cmp
out
jecxz
push
or
cld
mov
cmpsb
and
lock
add
sub
and
cmpsl
mov
imul
dec
dec
mov
push
mov
mov
push
movsb
pop
test
mov
rclb
rolb
xor
cld
addr16
loop
stos
or
cs
das
fidivrl
js
mov
ret
jae
lods
mov
in
popf
jle
sub
push
cmp
and
std
repz
mulb
rcll
lcall
out
ret
bound
jbe
dec
mov
pop
dec
ja
test
popf
movsb
aas
std
dec
stc
push
mov
sbb
and
xchg
in
insb
push
aam
jp
inc
inc
or
mov
or
mov
adc
or
or
es
mov
mov
movzbl
out
fdivrl
mov
or
cmc
cwtl
lcall
xchg
das
push
aaa
push
out
xor
fdivrl
icebp
idivb
fsubrs
std
and
adc
push
adc
movsb
stos
push
or
and
fmull
testb
xchg
fstl
outsb
pushf
sub
outsl
icebp
cld
sub
popf
dec
fiaddl
cmp
mov
mov
dec
and
sub
xorb
imul
je
push
or
enter
repz
mov
dec
test
pop
aam
pop
mov
dec
in
sbb
xchg
cld
sbbl
fldenv
icebp
add
scas
cmp
into
mov
std
push
add
fidivs
sbb
sub
arpl
adc
pop
es
in
pop
int
jp
cmp
sub
add
aad
inc
cwtl
es
or
stos
inc
xor
movsl
dec
ret
ja
sbb
rorb
push
scas
popa
js
sysexit
loope
imul
adc
aas
stc
mov
sbb
jg
xor
push
sbb
mov
shlb
jg
pop
lret
insb
mov
int3
jnp
and
aad
dec
jae
push
lea
push
mov
mov
mov
sti
aas
pushf
outsb
repz
int3
jmp
enter
aam
jno
jl
sbb
sub
lahf
mov
sbb
stos
mov
dec
pop
sub
sbb
dec
aas
add
insl
inc
hlt
mov
rcr
rclb
push
dec
js
lret
pop
cmpl
or
outsl
push
nop
fwait
mov
lcall
and
mov
mov
jmp
jne
cmp
stos
add
mov
fisttpll
xchg
ss
mull
dec
ret
pop
jge
sbbl
sti
in
sbb
and
push
adc
xchg
mov
xor
push
daa
lret
insl
inc
sbb
or
dec
push
int3
inc
sub
pop
aas
inc
pop
in
and
push
into
scas
mov
lods
or
in
jbe
sbbl
add
es
sub
in
movsb
fisubl
jb
shrb
inc
pushf
and
int3
cld
adc
xor
inc
inc
add
push
mov
nop
xchg
std
popa
xchg
xor
jp
sub
call
incl
xor
push
stos
xchg
arpl
jb
cld
push
test
push
cld
dec
repz
movsb
mov
les
mov
mov
shlb
out
adc
iret
adcl
les
je
jno
jae
mul
pop
ja
sti
adc
pusha
out
imul
in
mov
popa
les
cmc
dec
and
pop
std
jnp
je
lock
stc
jmp
das
jb
lret
loopne
xor
pop
or
push
mov
mov
push
sti
scas
sti
cmpsb
cmp
jns
add
xchg
push
fbstp
and
sub
or
xor
sub
sbb
adc
fidivl
sub
or
mov
lcall
or
jecxz
cmp
inc
xor
inc
movsb
push
pop
sti
and
mov
push
call
add
pusha
pop
xchg
pop
arpl
call
out
dec
add
ficoms
pop
xor
ss
inc
and
pop
push
cwtl
outsb
mov
lahf
insb
mov
les
aad
out
repnz
insw
mov
mull
mov
cmc
or
push
int3
xor
jl
mov
add
lds
adc
mov
jae
pop
push
outsl
cmpsl
sbb
pushf
out
arpl
ret
inc
pop
sahf
icebp
dec
lcall
jmp
inc
lds
push
iret
imul
adc
loopne
notb
mov
mov
shlb
stc
outsl
mov
jbe
or
pop
fistpl
leave
jmp
mov
data16
mov
inc
sbb
mov
sbb
cld
nop
sub
inc
cmp
hlt
aam
daa
cmpsb
xor
pusha
lret
test
mov
out
cmp
push
aaa
stos
jo
xor
jl
xor
sbb
shrb
pop
jnp
pushf
and
bound
cmp
xchg
mov
xchg
lret
jbe
xchg
out
inc
mov
mov
hlt
xor
push
jp
in
popa
lea
pop
push
add
cmp
cli
dec
add
in
sub
push
mov
add
jae
bound
icebp
pushf
daa
data16
mov
in
adc
dec
dec
pop
mov
insb
and
shll
dec
int
mov
and
or
cmc
rclb
add
pop
jmp
mov
sti
cmovne
adc
inc
int3
lea
dec
hlt
aas
pop
cmp
mov
fbld
dec
mov
fwait
sub
outsl
frstor
cld
mov
sub
adc
leave
mov
mov
xor
dec
mov
push
mov
xchg
push
inc
cs
int3
push
jne
gs
in
std
sbb
cltd
pop
and
xor
mov
cltd
inc
incl
gs
pop
cmpsl
and
andl
jbe
sti
call
cltd
push
dec
cltd
xchg
sahf
push
xchg
mov
cmp
sbb
jge
aad
sbb
jbe
push
in
fwait
test
pop
popf
add
shll
movsb
jbe
movsb
jb
insb
mov
xchg
xor
stos
ds
adc
push
addb
jg
pop
mov
insb
fwait
shrb
mov
montmul
cmpsb
add
popa
rorl
xchg
mov
out
pop
gs
cmp
jle
and
mov
test
aam
mov
add
mov
std
mov
fs
and
inc
pop
outsb
xchg
jbe
cld
enter
adc
mov
xchg
jl
mov
jp
inc
add
roll
cmp
jp
cwtl
sti
mov
xor
jne
xchg
repz
cmp
inc
subl
out
pop
icebp
je
loopne
lahf
js,pn
fwait
outsb
adc
and
iret
fs
mov
into
dec
xor
fdivr
xor
push
ljmp
cmpsl
pop
cmp
gs
jno
sub
fldenv
jl
xlat
lahf
fsubrp
inc
popa
insb
mov
mov
cmp
lds
sub
jge
pushl
adc
sub
lret
shll
testb
mov
addr16
clc
lret
xchg
test
jns
mov
xor
mov
out
jb
adc
add
jge
and
xlat
push
xchg
fsub
xchg
ljmp
xchg
idivl
xor
fcomp
sub
adc
in
test
cmp
adc
push
sub
es
adc
popa
dec
xchg
jno
pop
jle
xchg
mov
sub
push
mov
jmp
xchg
jae
xor
adc
in
and
dec
cld
rolb
inc
xor
sbb
mov
push
and
mov
mov
ficompl
outsb
jo
lods
xor
mov
mov
or
add
sub
jp
movsl
je
inc
adc
jmp
cwtl
jl
or
mov
adc
lret
mov
inc
dec
cld
int3
gs
cmp
or
pop
fstl
xchg
xor
inc
lock
sbb
sti
fcmove
cmp
sub
test
fsubrp
mov
sub
mov
inc
push
pop
ss
ds
add
mov
xor
lds
cmp
xchg
jecxz
in
rorl
stos
add
jo
dec
mov
xchg
sub
mov
shlb
sbb
add
push
inc
dec
xor
dec
jle
sbb
xchg
inc
sbb
fadds
jb
movsb
xor
cld
clc
add
cmp
jge
cmc
or
mov
aam
jmp
fdivp
cmp
ss
adc
arpl
add
push
imul
testb
ljmp
mov
fiadds
ret
loop
ret
xor
mov
sbb
add
push
pop
inc
incl
sub
and
pop
xor
inc
inc
sbb
push
xchg
jle
fisttpl
jl
clc
sbb
xorl
iret
mov
add
cs
insl
dec
cli
aaa
fcomps
jle
out
dec
mov
bswap
insl
push
xchg
leave
or
fs
test
inc
mov
and
inc
imul
dec
jae
cmc
push
mov
in
mov
pushf
cmpsb
mov
les
std
mov
mov
repz
xor
push
andl
fimull
and
or
lds
mov
xchg
ss
insl
pop
addr16
lods
cli
popf
stos
jae
sbb
mov
inc
js
fildl
sbb
cmp
dec
cmp
xor
popf
add
fisubrs
pop
jne
pusha
mov
fcoms
lss
dec
aas
mov
jae
popf
mov
lahf
lret
data16
adc
out
sub
mov
xor
mov
inc
inc
xor
mov
add
and
repz
sub
mov
insb
jns
cmp
mov
and
xlat
jle
std
xchg
stos
mov
push
lea
adc
pop
fnstcw
jg
icebp
int3
dec
shll
cmp
sub
loope
push
mov
mov
movsb
mov
fstpl
xor
sbb
sbb
push
lock
dec
and
mov
and
arpl
rcrl
sub
or
outsl
jae
jmp
loopne
jns
or
lods
jecxz
cltd
enter
in
and
cmp
sahf
popa
mov
idiv
mov
imul
add
mov
xchg
xchg
cmpsb
mov
add
fildll
call
or
sub
cmc
mov
outsb
aas
ficompl
or
push
outsl
stos
push
jg
shll
cmp
sbb
into
shrl
test
jmp
sub
mov
adc
jp
jge
rolb
xchg
cld
push
and
xor
jnp
push
pushf
mov
leave
aam
sub
lds
aam
sbb
test
popf
insb
sbb
mov
mov
lcall
sbb
test
subb
imul
jb
loope
aam
loop
sbb
ficoms
inc
mov
xchg
push
push
lods
in
aad
iret
xor
cmpb
and
iret
adc
lret
shrb
xchg
fwait
movsb
sbb
mov
and
push
pop
add
xchg
sbb
or
in
dec
mov
mov
sub
pusha
pop
pop
push
andl
adc
jae
pop
cmp
fucomi
adc
pop
out
iret
cmp
lret
pop
and
pop
out
lret
scas
cltd
loope
stc
out
in
cmc
cltd
pop
dec
xchg
or
pop
mov
aaa
add
pop
dec
add
test
shrl
lock
repz
int3
or
aaa
add
push
hlt
es
fldenv
out
jo
cmc
aam
inc
sub
and
dec
cmp
in
mov
inc
imul
jns
mov
jns
mov
mov
movsl
xchg
popf
test
pop
and
aad
jne
rcrb
scas
iret
aas
pop
xchg
cmp
imul
test
push
jb
ret
inc
icebp
inc
mov
add
mov
mov
xchg
or
cmp
nop
or
or
mov
daa
sub
mov
mov
inc
add
insb
popf
into
xor
es
fmull
adc
mov
push
or
mov
adc
movsb
inc
int
cwtl
xchg
ljmp
jno
sbb
or
sahf
mov
xor
jnp
frstor
add
in
jecxz
or
clc
and
out
push
xchg
cmp
ljmp
testb
in
adc
push
push
mov
loop
mov
pop
negb
scas
or
and
data16
mov
lock
cmp
mov
ja
in
jbe
dec
in
jp
out
push
xchg
aas
and
movsb
add
dec
cld
cmpsb
jo
in
add
cmpsb
jmp
arpl
xor
pop
ret
sub
push
dec
rorl
pop
scas
cmp
lea
or
adc
scas
mov
and
in
imul
cld
dec
pop
xchg
sbb
leave
lahf
sbb
inc
cwtl
xor
outsl
lret
cmpsl
cs
in
pop
out
pop
scas
movb
add
js
pop
cmp
shl
fldt
push
int
mov
xchg
adc
sbb
data16
add
sar
inc
dec
std
sbb
ror
stc
sub
stos
mov
or
in
aas
sub
js
bound
or
lret
and
push
jnp
xchg
inc
out
out
in
ret
push
adc
int3
dec
fistps
or
mov
es
imul
int
insl
lcall
jae
xor
aas
cmp
sbb
inc
and
push
xchg
dec
push
fucomp
ljmp
aam
inc
sub
jge
int
mov
cs
inc
ffreep
xor
mov
xor
aaa
js
int
pop
dec
mov
push
push
cmp
pop
mov
les
ljmp
outsb
jmp
add
or
xchg
fs
pop
adc
fcom
jecxz
movsb
lods
mov
insb
clc
jecxz
pop
loope
repz
xchg
sbb
pop
lds
push
stos
inc
js
ficomps
dec
dec
cmp
sub
ja
jne
leave
xchg
icebp
outsl
mov
mov
test
lods
xchg
pusha
jmp
xchg
jecxz
sub
and
shl
popa
rcrb
int
ret
dec
loop,pt
lods
sbb
jae
push
aaa
pop
mov
andl
xchg
rolb
xor
and
decb
test
and
push
inc
lds
mov
push
ja
mov
pushf
sub
in
sub
ret
movl
aad
cmp
mov
mov
mov
push
lea
push
jne
jge
jb
loop
cmp
jmp
cmp
dec
sarl
lahf
mov
hlt
push
inc
loopne
int3
cs
push
mov
adc
push
aam
movsl
push
add
mov
sub
xchg
hlt
jmp
xor
cltd
and
mov
cmp
cmpsl
stos
pop
stc
dec
jecxz
jge
mov
leave
iret
add
dec
jo
add
mov
dec
push
jne
insb
inc
fbstp
sarb
test
jmp
jb
ret
xchg
dec
loopne
ljmp
xchg
in
gs
test
and
outsl
lret
daa
aaa
into
ret
out
shll
jb
push
sbb
mov
jle
pop
xor
pop
gs
ret
cmpsl
pop
hlt
fs
xor
sub
dec
cwtl
lret
out
jecxz
mov
loopne
ret
or
push
bound
dec
scas
jecxz
out
arpl
cwtl
jmp
jae
in
lea
pop
loope
mov
jo
or
int3
pop
and
sarl
push
push
mov
jno
scas
mov
insl
punpcklwd
cmp
jle
bound
stc
cmc
pop
and
jp
repz
jecxz
inc
sub
jmp
fldenv
inc
jp
ljmp
adc
xchg
jmp
add
je
addr16
ds
jmp
bound
mov
xor
xchg
out
dec
gs
aaa
enter
and
or
xchg
hlt
xor
sbb
pushf
jae
iret
dec
imul
cltd
fistl
mov
imul
dec
push
mov
lret
ja
loopne
stc
std
fists
test
inc
and
test
sbb
xor
sti
push
xchg
sub
add
and
push
lret
bound
mov
xorl
mov
add
xchg
into
lahf
inc
cld
pop
xchg
jl
fcmovnb
addb
cmpsl
ret
aad
or
mov
xor
faddl
movsl
out
leave
mov
add
mov
pop
or
incb
sub
sbb
loopne
mov
xchg
ud1
pop
pop
inc
mov
out
movsl
or
out
pop
xchg
icebp
pop
and
fcoms
pop
repz
mov
sub
adcb
enter
mov
rcl
pusha
inc
or
add
push
imul
daa
fbstp
repz
aaa
pop
pop
dec
lea
lahf
loope
add
adc
pop
mov
sub
sbb
rep
out
mov
add
cmpsl
mov
mov
sub
rorb
inc
imul
pushf
in
imul
xlat
add
mov
test
jae
addl
lcall
cmp
xchg
pop
test
mov
cmc
sbb
outsb
or
pusha
mov
popa
incb
cwtl
imul
ficomps
xlat
out
pusha
cmp
rolb
and
decl
pusha
clc
ret
fdivl
enter
orl
and
and
shrl
sub
add
lret
push
cs
adc
je
sub
mov
pop
jge
stc
cmpsl
sbb
mov
dec
aam
mov
xchg
aad
adc
mov
ljmp
push
adc
test
imul
inc
mov
dec
jns
xor
pop
adc
sub
lods
xor
and
xchg
cmp
add
dec
xor
mov
fcmovnbe
add
and
or
inc
mov
test
cmp
hlt
loop
lds
pop
jne
popw
sub
xor
push
mov
push
cs
ljmp
add
in
mov
xchg
inc
mov
sarl
pushf
imul
xor
or
cltd
push
jge
rorl
fs
fsubp
xor
and
gs
or
cmc
into
lret
or
dec
cmpl
adc
add
push
pop
jle
push
dec
movsl
les
pushf
stos
xchg
enter
lcall
push
bound
cmp
push
sub
mov
push
addr16
xchg
lret
fs
cld
jl
mov
and
ljmp
lods
pop
mov
out
enter
mov
cmpsb
sub
mov
outsb
pop
cmpl
stos
mov
pop
cmp
popf
jns
out
hlt
lahf
stc
inc
ljmp
jbe
mov
dec
jb
dec
sub
mov
pusha
rclb
inc
cmp
jge
sub
adc
shll
adc
mov
and
popl
cmpsl
xchg
push
jo
btr
inc
and
sarl
or
sbb
rorl
scas
sub
cwtl
xor
je
les
mov
adc
outsb
xor
iret
cmp
pusha
lret
adc
dec
pop
cmp
xchg
imul
cmp
fwait
pop
fildl
xor
sahf
push
sbb
mov
cmp
lock
xlat
ja
cld
sub
out
repz
insb
or
sarl
cmpsb
inc
fucomi
pop
push
jmp
gs
xchg
out
mov
imul
inc
mov
mov
mov
loope
cwtl
mov
mov
movsl
lret
js
sarl
aam
xchg
rcrl
pop
cmpsl
inc
cmpsl
pop
imul
popa
and
sbb
dec
insl
push
dec
ja
push
insl
inc
xchg
push
int
mov
mov
jl
orl
mov
sub
pop
jns
lods
out
les
outsl
and
adc
mov
in
lods
mov
outsl
inc
imul
and
push
push
cli
lock
fwait
xchg
mov
scas
dec
les
popa
pop
lahf
push
sahf
stos
pop
movsl
ret
cli
stos
inc
jne
xor
pop
out
pop
lock
push
scas
or
std
mov
push
rcll
mov
cltd
cmp
mov
and
adcb
lea
loop
stos
mov
lcall
out
or
js
jns
pop
xchg
dec
pushf
adc
or
mov
xchg
inc
pusha
rcl
push
test
push
cmpsl
movsl
lret
jo
dec
dec
pop
inc
int3
pop
push
or
lcall
std
dec
mov
fwait
adc
add
popf
enter
dec
ret
scas
scas
xchg
pushf
aad
int3
imul
inc
adc
mov
das
xchg
pop
dec
pop
push
and
mov
add
faddl
fwait
mov
or
mov
bnd
adc
sbb
cmp
inc
les
or
mov
xchg
enter
inc
mov
jp
and
xchg
jp
mov
or
push
inc
xor
shlb
sbb
sub
insb
xor
adcl
xor
pop
push
insl
and
enter
push
dec
add
cmpsl
std
js
mov
xchg
cmc
cmp
mov
push
pop
push
pop
call
out
and
xorl
outsb
push
cmpsl
dec
jbe
inc
cmp
push
adc
mov
movsl
dec
loopne
xchg
rcll
pop
jnp
cwtl
aaa
loop
dec
popf
aam
repz
lcall
scas
and
into
mov
add
imul
ljmp
pop
sbb
dec
xor
cmp
fisttps
xchg
sub
aad
cld
icebp
lods
inc
fsubrl
dec
insl
ljmp
loope
mov
adc
lea
push
push
pop
nop
aaa
cli
outsl
fwait
stc
xlat
cmpsl
insb
adc
and
adc
subl
mov
js
and
addr16
pop
clc
sub
xlat
cmp
pop
clc
pop
rcl
sub
jle
addb
arpl
xchg
outsb
xchg
repz
lock
test
mov
inc
sub
dec
scas
xchg
xchg
push
xchg
dec
filds
sub
js
iret
jno
add
sbb
sub
mov
arpl
pop
jl
loopne
cmpsl
sub
fisttpll
loope,pn
test
sbbl
dec
jle
cmp
or
add
jp
iret
fnstenv
pop
and
jle
inc
and
cmp
mov
sahf
loope
inc
hlt
or
pop
adc
adc
divb
jnp
push
pusha
ret
ret
sbb
test
mov
xor
pop
fldenv
cmp
mov
mov
cmpsb
bound
mov
push
jmp
push
cmpsb
cmpsl
and
dec
pusha
out
loopne
inc
je
push
mov
jl
push
bnd
pop
daa
dec
cmp
test
lret
ja
pop
adc
idivl
cmp
or
mov
cld
fmul
shlb
add
add
push
lods
loopne
add
mov
dec
mov
fiadds
iret
dec
mov
xor
sbb
sbbl
test
stos
jno
mov
dec
cmp
jne
push
sub
and
and
insb
jecxz
outsb
inc
and
mov
cmpb
xor
mov
mov
lret
fildll
xchg
pop
dec
mov
jl
in
mov
dec
cltd
or
or
xchg
imul
push
push
aas
aaa
cmp
xchg
pop
xchg
lret
cmp
fisubl
sub
mov
stc
push
iret
ja
lret
pop
jecxz
cwtl
xlat
mov
and
cmc
in
sub
loop
dec
pop
and
stc
mov
in
icebp
loope
in
and
std
ljmp
pop
test
inc
gs
in
dec
push
rep
scas
mov
push
cmp
sub
cli
pusha
cmp
bound
mov
jg
fucomp
jecxz
rcl
push
lods
xor
icebp
fmul
out
adc
out
filds
mov
and
mov
sahf
out
gs
imul
lret
xchg
subb
lock
jp
ret
jae
call
fbstp
jb
or
xor
mov
xchg
xor
push
and
aaa
test
ret
and
xor
cmpsb
jbe
sub
adc
int3
insb
ss
mov
int
push
dec
mov
dec
pop
push
mov
scas
faddl
lcall
fidivl
enter
testb
test
cld
stos
bound
lock
fsubrs
sbb
xchg
and
pop
aad
push
dec
or
cmp
mov
jp
movsl
sbb
mov
loopne
mov
mov
dec
pop
testb
movsl
sti
cmp
rcl
insl
in
pop
inc
fiadds
push
ret
cmp
mov
notl
mov
add
cld
sbb
pop
inc
xor
cmp
sbb
lds
shlb
cmp
sub
add
aas
push
cmp
hlt
fld
imul
inc
lods
pop
xchg
mov
mov
sub
mov
or
aam
push
push
ret
mov
clc
call
lcall
pop
mov
inc
fsubrl
mov
mov
jmp
mov
mov
push
das
in
ret
and
push
dec
inc
daa
xor
sarl
mov
scas
lcall
ror
push
adc
mov
inc
adc
inc
ret
xchg
test
fmuls
out
mov
test
push
cs
fwait
and
aas
sub
pop
add
out
mov
or
mov
and
jecxz
xchg
sti
inc
arpl
stos
loop
das
mov
mov
or
pop
popa
mov
leave
jmp
pop
ret
add
push
and
dec
push
outsb
int
adc
ret
sub
imul
mov
jno
inc
daa
icebp
cli
add
jp
sahf
aad
std
xor
jb
jbe
inc
aam
stc
and
jle
jns
push
mov
jmp
lods
add
or
mov
mov
shrl
sbb
mov
mov
divb
mov
cltd
inc
out
clc
mov
int
or
ja
vmovmskps
popa
in
xchg
pop
movsb
fldt
popf
jnp
adc
push
xchg
push
cmpsl
xchg
push
add
push
push
mov
cmp
cltd
ret
add
cwtl
pop
ja
pop
js
outsl
sbb
or
cltd
xchg
jg
ds
int
in
in
inc
mov
cli
xchg
daa
test
push
dec
icebp
cwtl
mov
inc
and
fsubrp
js
fwait
stos
pop
sahf
jle
pop
mov
lret
cltd
in
out
xchg
jecxz
pop
push
push
jo
arpl
dec
in
inc
cli
std
ret
mov
add
arpl
xchg
jl
popf
insl
sub
data16
push
es
lods
sub
in
int
mov
push
jmp
in
jae
popf
push
loop
clc
cmp
and
or
sarb
sbb
enter
push
aam
lods
xchg
jle
adc
jle
clc
sub
ret
jb
icebp
jmp
out
dec
cmp
mov
pop
sub
and
pop
sbb
insl
data16
sub
scas
inc
pop
pop
stos
mov
lods
mov
rcll
mov
stos
cli
and
jo
ret
cmp
fdivs
jge
mov
addr16
addl
in
xor
nop
cmp
xchg
jne
jo
sub
push
jl
sbb
into
aaa
outsl
jmp
ret
roll
xlat
and
bound
sbb
repz
cmc
jmp
xchg
add
jo
popf
fcmovbe
cwtl
test
loop
inc
orb
xchg
fildll
cmp
xor
or
push
adc
adc
out
or
sub
ret
cld
addr16
jge
data16
cld
imull
pop
mov
ret
lods
push
in
fidivl
mov
lret
push
leave
or
gs
ja
outsl
and
xor
xlat
push
fnstcw
mov
push
mov
fisttpll
mov
ret
push
cld
stos
repnz
lahf
push
lods
mov
mov
addr16
dec
dec
mov
mov
leave
jg
scas
or
in
shll
jl
into
fs
mov
out
xor
ss
or
test
jne
and
lcall
xchg
negb
inc
xor
jnp
aam
aam
sub
mov
test
out
add
xor
pop
out
sbb
std
lods
inc
push
jbe
adc
push
mov
aad
mov
icebp
sbb
popa
mov
sahf
pusha
fsubrl
lret
jo
shl
adc
mov
and
pop
push
mov
loope
push
test
mov
ss
repz
cwtl
in
aad
dec
ds
loope
outsb
cmpsl
inc
and
xchg
imul
stc
mov
mov
in
adc
pop
and
loope
inc
inc
in
aaa
scas
repnz
test
pop
repz
push
addb
push
and
sti
sbb
aaa
sbb
inc
cmpsb
xchg
enter
sub
out
jo
adc
pop
jno
fwait
xchg
nop
mov
mov
add
cmp
add
add
cli
jmp
sti
bound
cli
jo
pop
mov
jo
imulb
sub
std
dec
push
adc
aaa
shl
cwtl
add
pop
cmc
add
push
sbb
sub
xchg
popa
jb
das
or
fidivrl
dec
add
daa
and
push
add
mov
push
popw
bound
mov
cmp
mov
sub
xor
jno
popf
les
loop
test
jmp
push
ficoms
out
pop
imul
and
dec
and
shrl
add
inc
push
cmp
pop
jecxz
insl
repz
shl
shlb
dec
mov
or
xor
add
cli
lahf
sbb
stc
mov
in
fmuls
js
xchg
inc
pop
sbb
repz
aam
jge
push
lret
incb
push
xor
jmp
and
dec
mov
insw
mov
lahf
pop
push
xchg
mov
fdivrs
or
push
js
ljmp
shll
roll
sbb
inc
out
and
add
cltd
jp
add
xchg
inc
icebp
mov
or
mov
cld
sbb
ja
mov
push
mov
aaa
or
pop
into
das
jle
adc
and
sbb
xchg
jg
jne
and
push
sbb
fsubrs
mov
dec
cmc
and
push
lahf
in
mov
sti
testl
add
xchg
mov
inc
hlt
test
fisubrs
add
mov
dec
or
dec
inc
and
sub
movsb
pop
int3
xor
out
push
ss
cmp
adc
xchg
lds
mov
push
push
insl
and
call
inc
icebp
cld
shlb
lock
repz
repnz
imul
cmp
jl
sub
movsb
inc
fstl
cmp
in
mov
mov
clc
in
jecxz
push
hlt
and
mov
jle
sahf
mov
push
adc
sub
imull
sbb
pop
sahf
lret
bound
into
push
loopne
sub
xchg
xchg
add
test
pop
inc
sbb
cmpsb
mov
xchg
and
int3
aam
xor
loope
aam
jb
adc
xchg
test
mov
add
push
mov
loop
test
inc
cmp
int3
data16
mov
in
mov
pop
popf
repz
inc
cmp
and
ret
lahf
sbb
sahf
xchg
test
cmpsb
mov
mov
idivl
pop
add
dec
in
mov
jl
inc
mull
dec
call
repz
testb
lret
sbb
sub
mov
sbb
filds
ljmp
lahf
mov
mov
adc
fs
andl
and
mov
std
push
sbb
mov
mov
mov
dec
pop
inc
xor
test
sbb
push
mov
aas
fs
jo
inc
test
sbbl
mov
jno
inc
fwait
add
js
out
sbb
xor
xor
xchg
test
mov
jbe
out
fdivrs
mov
cmp
into
sbb
cwtl
xchg
pop
call
push
jb
icebp
pusha
pop
sahf
xor
adc
push
xor
lds
lods
push
shlb
and
mov
add
adc
dec
ret
daa
fiadds
out
lret
sub
scas
neg
cs
xchg
push
mov
and
jge
loope
cmp
movsl
cltd
adc
stc
sahf
inc
xor
cmp
ds
ja
inc
out
cmpsb
adc
out
sti
add
cmpsb
mov
cmp
ret
mov
push
dec
adc
xchg
adc
stos
jae
lods
icebp
mov
lret
xchg
movsb
or
dec
jle
nop
jae
in
dec
inc
inc
test
and
cwtl
jg
mov
cwtl
lds
sub
repnz
ljmp
push
mov
jne
rorl
add
rcrl
pushf
cmp
mov
icebp
popf
jecxz
pop
adc
add
xor
leave
cmp
xlat
out
lret
imul
sub
add
pop
or
out
div
mov
or
movsb
incb
jno
lea
xlat
pop
fwait
jmp
int
xorl
lret
jae
test
ljmp
cli
dec
call
test
test
dec
push
or
inc
into
clc
jns
aad
andb
call
jnp
inc
xchg
leave
pop
cltd
add
cmp
cmpsb
jae
sti
arpl
dec
imul
sub
sbb
sbb
loop
sbb
es
lahf
mul
push
movsb
cs
add
loop
cltd
jp
out
jmp
cwtl
mov
idivl
ja
sbb
fdivrs
adc
fnstsw
leave
mov
dec
std
sbb
scas
rcl
or
sub
popf
adc
jnp
loopne
mov
mov
addr16
frstor
test
or
fidivl
std
repnz
js
cmp
popf
rcrl
xchg
cmp
mov
cli
inc
ljmp
cwtl
sahf
fiaddl
mov
mov
pusha
mov
xlat
fwait
stc
lahf
mov
push
popa
mov
das
mov
popa
sbb
test
in
idiv
jne
outsb
mov
xor
test
hlt
insl
enter
sbb
adc
cmp
scas
popf
je
adc
mov
adc
push
lcall
and
xchg
pop
mov
fcmovnu
cmpsb
cld
idivb
cmpsb
lods
pop
aas
cmp
outsl
jmp
mov
fistpll
xlat
push
push
push
loope
or
push
sub
sub
lea
fwait
mov
pushf
push
decb
cli
pop
pop
arpl
aad
inc
cli
insb
inc
inc
sub
sti
or
sbb
ljmp
fisubl
jno
push
push
pop
inc
mov
imul
movsl
mov
add
pop
outsb
inc
cmp
sahf
roll
xor
ja,pt
mov
jmp
or
rclb
push
adc
push
aad
faddl
dec
sbb
nopl
and
pop
mov
loope
add
dec
sbb
loope
jp
sbb
decl
lahf
stc
jg
sti
jo
jl
or
mov
lods
mov
addr16
cmc
jno
mov
dec
xor
mov
mov
inc
pop
dec
pop
test
into
movsb
jo
scas
push
jbe
inc
push
sbb
repnz
add
ja
leave
test
movsl
shll
push
in
leave
fwait
clc
xchg
pop
mov
xchg
adc
mov
std
fisttpl
lock
aas
cmp
jb
iret
inc
mov
mov
cld
das
sbb
mov
mov
add
daa
lret
xor
adc
sub
loop
stc
loopne
xchg
xor
sahf
out
jp
repz
testb
mov
mov
clc
mov
xor
jecxz
add
push
jo
shlb
gs
add
loope
push
cli
hlt
jp
daa
faddp
pushf
leave
cltd
jnp
fcomps
call
push
add
dec
ror
jb
sahf
mov
addr16
jns
push
jb
iret
mov
cmp
imul
cwtl
mov
xor
mov
ds
push
test
pop
mov
test
shlb
cmp
shrl
jecxz
and
repz
fiaddl
add
cmp
aam
mov
or
xchg
xor
xchg
arpl
rcpps
lcall
scas
iret
outsb
out
mov
inc
jp
cmp
inc
adc
mov
jl
in
jae
inc
inc
jb
sbb
mov
cmp
xchg
jne
xor
out
cs
neg
inc
sbb
pop
es
push
int3
cmp
emms
jg
inc
in
in
rorb
leave
push
mov
mov
icebp
daa
pop
mov
out
pop
lret
inc
xor
jg
outsl
ret
lret
add
pop
xchg
bound
fdiv
fdivp
lahf
imul
enter
pop
out
jns
stos
push
fstl
cmpsl
xchg
adc
xor
popf
scas
pop
cs
push
bound
jge
divl
popa
xchg
inc
std
push
sub
adc
loop
cwtl
fistpl
jns
push
scas
sub
repnz
mov
push
lods
add
sahf
mov
test
stos
gs
dec
push
xchg
movsl
loopne
cmpsl
rcll
cmpsl
fsts
jge
in
jnp
rdpmc
in
pop
stos
sbbb
adc
dec
repz
push
sbb
lock
cmpsl
mov
xchg
dec
mov
mov
and
outsl
mov
rclb
xor
out
pop
aas
cmpsw
mov
loopne
or
leave
mov
jbe
test
mov
fcoml
ficoml
add
dec
adc
dec
jp
rclb
mov
pushf
inc
in
jmp
test
aas
loop
push
cmpsb
shrl
scas
jno
cli
sti
mov
repz
hlt
cmp
sbb
jae
inc
pop
jae
repz
push
in
cmpsb
fs
ja
sub
dec
pcmpgtd
and
subl
in
xor
jp
scas
jnp
sbb
repz
mov
add
pop
popf
jo
jnp
sub
subl
xor
out
push
in
pop
jl
xchg
shll
push
rorl
fwait
and
sub
out
jecxz
dec
push
rcl
sbb
and
cmp
adc
mov
ja
fidivs
add
test
sub
repz
aad
sub
scas
dec
push
sbb
adc
insl
out
in
dec
mov
outsb
jg
jge
adc
jb
gs
movsl
shlb
sub
pop
icebp
scas
lock
pusha
dec
lock
xchg
cmc
mov
dec
pop
inc
mov
xchg
inc
push
outsb
cmp
lcall
mov
xor
sti
xchg
add
stc
rcrb
jecxz
rcrb
lea
test
push
mov
jne
or
mov
cld
testb
xlat
and
xorb
ljmp
push
cmp
mov
fstpl
xchg
cmpsb
cli
fbstp
pop
mov
mov
dec
fcompl
mov
cmp
push
fbstp
lret
and
pushf
je
pop
sbb
mov
mov
fsub
sbb
pusha
fs
dec
cmp
out
cmp
xchg
dec
dec
dec
xchg
mov
jmp
js
xor
dec
call
jns
lcall
nop
lcall
sub
pop
sbb
cs
mov
jl
insl
mov
in
dec
add
gs
adc
xor
dec
orb
repnz
mov
mov
add
add
lea
fdivrl
outsl
stc
mov
std
cmpsb
push
andb
fistps
cmc
inc
jnp
jno
adc
jo
fsubrs
lcall
inc
pop
xor
in
sub
push
push
das
into
enter
repnz
mov
push
sub
mov
fdivrl
cmp
mov
sub
sub
xor
add
lcall
mov
add
out
out
mov
mov
scas
es
test
idivb
sub
les
int3
mov
mov
test
push
cmp
es
mov
insb
xchg
push
push
aam
ja
inc
aaa
cmpsb
pop
xor
scas
and
jno
mov
xorb
jbe
jns
adc
add
and
push
imul
jno
fdivs
pop
js
pop
sahf
mov
out
push
cmp
lods
push
sbb
sub
mov
popa
jp
dec
add
mov
push
repz
mov
lcall
out
lock
ret
fcomps
gs
iret
jbe
icebp
popf
jne
orb
push
fcoms
or
jp
sti
lret
fstpl
mov
jbe
push
or
dec
loop
cmp
xlat
sub
pop
push
sbb
sahf
or
xchg
subb
push
mov
loope
sbb
loopne
fwait
dec
test
das
adc
testb
in
in
jle
mov
orb
pop
xchg
sub
sbb
popf
ret
mov
push
repz
out
arpl
movb
aas
int3
mov
scas
das
cmpsb
pop
dec
mov
xchg
fists
mov
xchg
jbe
xor
inc
sar
dec
in
fistps
cmp
inc
lods
xchg
das
cmp
push
ds
or
rcrl
add
stc
out
pop
nop
dec
or
pop
fbstp
push
xor
addb
jle
mov
cmpsb
push
mov
add
adc
dec
pop
ljmp
cmp
pop
pusha
inc
mov
imul
fisubrl
cwtl
mov
fdivrs
les
inc
cmp
sub
xchg
cmp
xchg
push
dec
repnz
sub
popa
outsb
dec
mov
leave
mov
imul
notb
add
xchg
insl
rcrl
sbb
adc
jns
out
sbb
lods
in
add
mov
scas
xchg
push
mov
lods
out
mov
mov
pushl
adc
xor
sub
in
fidivl
decb
cltd
int
adc
ljmp
lods
fldl
jnp
test
insl
loope
cwtl
insl
pop
mov
adc
clc
xchg
sti
gs
int
daa
shll
mov
mov
pop
cs
out
xor
or
out
mov
divb
adc
gs
push
pop
and
inc
into
mov
jb
cmp
iret
push
jg
sti
testb
hlt
cmpsb
mov
dec
data16
iret
mov
xchg
cmp
clc
pop
pop
lds
mov
sbb
adc
iret
sub
jecxz
mov
adc
adc
dec
icebp
pusha
shrl
jno
pop
adc
xchg
mov
inc
nop
push
dec
imull
imul
jmp
push
subb
hlt
cmp
and
fs
inc
je
add
hlt
pop
sbb
xchg
mov
jl
push
push
lock
stos
std
hlt
lds
mov
jp
mov
mov
jg
loope
xchg
add
and
xchg
inc
enter
or
in
pusha
jns
imul
mov
ss
mov
fdivrl
sbb
push
clc
mov
lds
inc
dec
test
sbb
xor
arpl
ss
jo
sbb
mov
popa
icebp
ljmp
dec
pop
popa
ret
rcll
stc
loopne
add
jg
pop
adc
push
addr16
int3
out
outsl
adc
lret
clc
daa
pop
push
pop
fmuls
sti
in
not
sti
or
mov
stc
dec
sbb
jae
ffreep
sbb
je
sbb
ds
sbb
cmp
pop
out
dec
xchg
mov
xchg
mov
cmp
push
rcll
nop
cwtl
dec
aam
cs
pop
and
imul
dec
jns
cmp
jne
mov
cmc
mov
sbb
jecxz
popf
jnp
cmpl
push
pop
cmp
fisubs
imul
pop
ficompl
or
inc
cmpsb
add
fildl
in
mov
cmc
mov
stc
dec
fcomps
hlt
lcall
jae
inc
movb
into
dec
jae
fldenv
shl
jb
sti
negl
mov
call
sbb
and
add
loope
adc
pop
jp
mov
outsb
mov
pop
stc
daa
xor
mov
shlb
pop
xchg
stos
mov
push
insb
jmp
aaa
divl
loopne
imul
fcompl
sub
sbbl
repnz
jbe
inc
test
cmp
popf
jp
jmp
push
pop
daa
pop
dec
aad
insl
fsubr
rcll
jae
frstor
icebp
jle
mov
into
test
adc
pop
aad
js
or
cmpsl
imul
rcrl
fsubs
adc
inc
lret
add
mov
ss
add
push
push
push
sbb
loop
mov
pop
cwtl
das
cmp
call
ss
dec
jnp
lods
mov
adc
std
lahf
xor
dec
lret
outsl
lock
popf
rcrb
push
xchg
push
cwtl
es
sbb
addr16
inc
ffreep
notl
ffree
jne
jne
add
mov
and
jae
stos
jo
xor
inc
call
push
jmp
fisubl
dec
push
aad
jns
cmp
sbb
in
cltd
out
push
leave
mov
imul
jge
fistpl
ljmp
divl
sbb
inc
adc
pop
or
sbb
icebp
imul
out
repz
and
in
fidivs
xchg
cmp
rcrb
xchg
mov
adc
lock
jecxz
pop
fisttpll
mov
xor
add
bound
out
and
add
xlat
movsb
or
or
push
insl
int3
insl
shlb
pop
xor
jge
mov
sub
addr16
add
nop
movsl
adc
movsl
cltd
fwait
pushl
xor
push
jle
out
jb
jbe
pop
aaa
bound
xorl
xor
sub
add
cmp
cmp
pop
lea
es
lret
sbb
cmp
cld
imul
fsubrs
shlb
add
jmp
xor
xchg
add
imulb
testl
insl
jecxz,pt
add
pop
aad
jle
loop
push
arpl
movsl
jp
faddp
xor
das
mov
push
adc
mov
daa
out
xor
in
leave
fidivrs
and
lcall
sti
cmpsl
clc
aaa
sbb
les
rcrb
push
lret
pop
mov
add
pop
mov
std
out
push
data16
sti
test
push
leave
cmp
leave
mov
fistpll
mov
imul
jne
mov
mov
pminub
aam
sti
adc
pop
negb
push
xor
jns
lds
addr16
sbb
int
adc
adc
setns
aaa
push
mov
jne
mov
pop
test
pcmpgtb
into
out
and
jmp
lahf
std
dec
inc
jns
in
clc
popf
mov
mov
sbb
dec
push
test
pop
jl
xor
mov
ffree
icebp
pop
mov
lcall
lock
cmp
add
arpl
ja
mov
lods
int
mov
mov
push
mov
pop
mov
cmp
cli
push
jmp
cwtl
mov
jns
pop
mov
std
cmc
sbb
pop
sbb
push
xor
push
mov
sub
repz
aam
lret
and
push
jmp
push
imul
inc
xchg
sbb
push
push
or
adc
xchg
cmp
iret
roll
hlt
lds
leave
pop
stos
jnp
mov
jno
and
outsl
sbb
sbb
lret
adc
les
pop
div
rep
or
popf
bound
popf
bound
out
dec
xor
push
orb
shrb
out
mov
mov
inc
lods
or
jge
movsl
ret
and
mov
push
stc
push
pop
test
outsb
sbb
jmp
scas
mov
pop
jno
push
mov
sbb
lret
pop
aaa
xor
cmp
push
inc
add
pop
xchg
sbb
fbld
adc
aad
in
cmp
and
inc
sub
test
and
pop
xor
inc
mov
outsl
mov
xchg
inc
pop
xorl
test
or
cmp
adc
dec
movsl
ret
pop
fcmovu
jge
or
pop
call
and
sti
jo
xchg
inc
xchg
mov
pop
and
xor
pop
cs
aad
mov
fimuls
jo
cltd
pop
loopne
jne
pop
ja
int3
mov
pop
mov
fwait
mov
fwait
xchg
or
cmp
das
mov
xchg
fstpl
cmp
push
jecxz
mov
push
into
in
scas
jbe
mov
scas
inc
fidivrl
jecxz
movmskps
sbb
sub
int3
lret
repz
push
sbb
aam
or
stos
es
in
jno
push
scas
jle
inc
xchg
pusha
xor
pop
aaa
jae
push
popa
dec
xchg
push
fsubs
rcr
dec
jl
sbb
cmp
test
loope
sub
dec
outsl
fnsave
ljmp
pop
add
imul
inc
sub
std
cmp
push
pop
xor
pop
dec
mov
pushf
mov
into
stos
adc
int
sahf
mov
hlt
mov
sub
in
data16
mov
cltd
mov
jle
leave
dec
pop
enter
nop
or
mov
add
xchg
pop
mov
data16
out
or
mov
xor
mov
xchg
push
fisubs
sar
push
push
cmpsl
das
ss
xchg
mov
xchg
adc
and
cld
es
jae
rolb
popf
jns
adc
test
mov
stc
sti
mov
out
fsubr
xor
test
test
xorb
push
ss
or
mov
or
notb
bnd
loopne
mov
push
data16
sti
add
loope
dec
in
sbb
xchg
mov
mov
xchg
stc
js
mov
mov
aaa
push
in
roll
push
out
sbb
out
cmp
dec
cmp
sbb
sub
or
push
dec
mov
xor
xor
or
inc
jne
jo
cwtl
or
push
je
ss
xchg
stc
into
cmp
mov
fucom
imul
fwait
ds
notl
dec
push
idivb
pusha
lea
pop
out
inc
icebp
outsb
sbb
out
mulb
jno
and
mov
dec
dec
enter
cmp
push
cs
repz
lods
sub
bound
push
or
inc
or
shrl
and
push
imul
sbb
clc
shll
out
and
mov
int
adc
adc
mov
ds
orl
sub
in
int
div
mov
outsb
push
neg
fiaddl
fwait
and
and
loope
mov
leave
mov
or
fists
scas
inc
pop
mov
cmpsl
movsb
mov
mov
dec
mov
cmc
insl
insl
xor
xchg
fnsave
add
sub
xchg
leave
les
cli
pop
push
data16
pushf
mov
cmpb
inc
test
sahf
or
imul
decb
jmp
sub
pushf
cmp
cltd
mov
pop
xlat
in
jle
mov
shll
mov
fs
mov
and
cmp
mov
jns
push
pop
sub
ds
add
mov
int3
dec
adc
ss
lret
lds
add
add
mov
movhps
xchg
cld
lock
rclb
aad
pushw
adcl
xchg
fwait
aaa
dec
lret
rolb
stos
xchg
inc
lea
sub
pusha
jbe
into
sub
lret
lret
pop
pop
lds
sub
push
xchg
cmc
xor
jo
mov
jecxz
dec
aam
test
in
data16
in
jecxz
xlat
adc
pushf
out
jecxz
adcl
mov
cmp
lods
outsl
lcall
lods
imul
lock
iret
cmpsb
jb
movl
mov
scas
jb
rcr
into
cltd
or
mov
daa
ficoms
pusha
mov
push
nop
and
adc
mov
idivb
outsl
ja
mov
cmp
jno
push
cli
cmc
push
rol
fsts
add
inc
popa
sahf
insl
insb
xchg
sub
adc
jb
adc
insl
sub
pushf
push
push
pop
mov
mov
iret
ljmp
cmc
into
xchg
cmpsl
daa
pusha
rcr
dec
ss
movsl
adc
mov
inc
add
clc
and
dec
pop
mov
dec
inc
dec
sbb
mov
out
mov
test
mov
inc
jle
inc
and
out
les
xchg
std
jae
and
inc
add
jg
jmp
push
pop
xchg
mov
lcall
rcr
inc
test
movsl
push
mov
mov
sub
pop
and
xor
add
jae
inc
mov
lret
or
test
fwait
bound
xchg
mov
or
call
mov
pop
mov
stos
mov
xchg
sub
push
jmp
jge
sahf
dec
ret
call
adc
pop
std
into
pop
xchg
xor
sbb
push
xchg
jle
xor
out
stc
push
popf
jno
mov
pushf
das
sub
mov
dec
mov
je
cmp
into
sbb
lahf
shrb
sub
add
xchg
jge
xchg
cmpsb
test
aad
arpl
xor
out
mov
ds
inc
ret
xor
pushf
pop
and
add
outsl
xor
int3
loope
and
test
subb
add
dec
inc
jae
inc
addr16
and
jbe
adc
sti
movsl
dec
mov
add
xchg
inc
insb
xor
push
xchg
dec
add
xor
push
aas
xor
and
int
and
and
push
inc
nop
repz
xchg
mov
sbb
xor
les
in
push
out
aam
test
popf
shll
pop
mov
movsl
dec
sbb
sub
add
pop
sysret
inc
fisubl
fcmovne
and
ja
sub
fldenv
inc
int
pop
mov
shlb
dec
xchg
pusha
dec
jb
pop
scas
mov
into
pop
lahf
lock
insb
pusha
mov
nop
arpl
cmc
pop
inc
movsb
inc
push
sbb
test
int
sub
sahf
jp
shlb
mov
mov
pop
sahf
outsb
outsb
pop
data16
arpl
xchg
mov
adcb
xlat
cmpsb
aaa
fisubrs
movsl
cmpl
or
pop
cli
pop
mov
ret
mov
adc
subb
in
push
movsb
out
mov
and
aam
cmp
jb
out
mov
inc
sub
lea
pop
lcall
xchg
cwtl
adc
xor
roll
rcrl
in
enter
xor
mov
sbb
aad
ja
mov
mov
add
test
scas
cmp
out
ds
fistps
push
or
mov
and
dec
add
cwtl
push
mov
jb
xlat
sbb
gs
lock
pop
xlat
std
lds
mov
cmp
mov
jg
out
mov
or
jno
arpl
outsb
movl
repz
lea
mov
lea
arpl
out
fsubr
mov
lea
mov
scas
or
imull
push
sbb
gs
sub
fs
jmp
ss
mov
xchg
loopne
movb
decb
lods
lahf
mov
call
push
push
lcall
int
push
mov
mov
stc
push
ret
mov
outsl
outsb
popa
adc
dec
and
ss
flds
xor
jb
xorl
lret
pusha
ret
call
cs
add
inc
sbb
call
pop
add
gs
icebp
pop
mov
or
mov
cli
xor
jne
xchg
mov
mov
mov
push
hlt
cmp
dec
or
sahf
stos
dec
rorb
test
xchg
stos
fxch
push
mov
movsl
aas
or
jo
adc
sub
and
jns
mov
push
add
fsubl
mov
imul
cs
lret
mov
mov
loopne
adc
and
sub
popl
mov
je
jg,pt
cmpsb
out
pop
jo
mov
xchg
cld
jns
or
adc
sub
es
mov
xor
aam
push
aas
ja
push
iret
out
mov
mov
push
lock
movsb
mov
pop
repnz
mov
mov
push
in
jp
jmp
arpl
sbb
cmp
imul
outsl
out
or
jmp
pop
sub
sub
mov
fcompl
inc
jnp
add
aas
filds
out
int
and
cmpl
sbb
adc
out
xor
cmp
into
mov
sbb
lods
popa
loop
imul
adc
test
push
outsl
mov
or
cmc
or
ret
jae
repz
loop
jle
imul
enter
pop
mov
mov
jo
adcb
test
fcmove
outsb
in
xchg
jg
push
pop
and
dec
push
inc
loop
lret
dec
loop
pop
loope
mov
adc
leave
jae
sub
dec
test
mov
sub
dec
out
pop
xor
mov
inc
or
loope
int3
pop
mov
mov
lcall
jle
sub
dec
in
pop
xor
mov
pop
out
aam
xchg
mov
repz
incl
jb
lret
pop
mov
sub
enter
fcmovnb
xor
std
ret
xor
pop
pop
push
and
push
xchg
lea
scas
sub
mov
add
push
test
inc
mov
fsubr
sub
jnp
divl
mov
rorb
cmpsb
and
shlb
ret
negb
jnp
mov
inc
fstpt
push
je
les
jge
xor
sub
xchg
cld
push
mov
jg
outsl
and
push
xchg
scas
jb
or
cmp
dec
test
mov
dec
push
add
xor
mov
mov
rolb
subb
insl
xor
gs
stos
add
dec
xor
inc
addl
or
mov
lds
xor
orl
pusha
cmp
mov
movsl
adc
lahf
sbb
cmp
daa
scas
jns
lret
aam
stos
out
mov
jle
jno
xor
jne
shrl
ficompl
ret
pop
mov
add
pop
pop
cmpsb
jae
cmpsl
mov
outsb
enter
or
xlat
adc
mov
lock
cwtl
xchg
fiaddl
sbb
enter
push
cmp
sarl
pop
lcall
pop
cs
jmp
cld
inc
mov
inc
in
dec
cmp
mov
call
fld
push
xor
dec
mov
int
pop
shlb
out
lea
outsb
std
mov
pop
push
fists
in
sbb
inc
pop
subb
dec
mov
rclb
pop
mov
addr16
push
lods
jae
sbb
aam
xchg
imul
sub
out
es
inc
insl
push
pop
push
mov
out
rorb
call
push
pop
lock
jp
das
jle
mov
sti
inc
mov
incl
inc
mov
xchg
cmp
cld
out
mov
xchg
lcall
lret
dec
xchg
jmp
daa
loopne
cmp
addb
xchg
jne
mov
ljmp
je
mov
in
mov
rorb
inc
dec
inc
les
out
cld
sub
stos
scas
cmp
aad
call
xchg
adcb
push
cmp
inc
cmpsb
or
mov
mov
ret
sbb
lods
or
cmpsl
mov
mov
rol
fs
aaa
sub
push
jne
fistpl
cmp
inc
or
push
int
sub
jg
pop
cltd
aam
adc
js
adcl
jnp
sarl
cmp
mov
mov
dec
mov
scas
bound
std
popa
stos
pop
out
ss
add
mov
das
push
jge
imul
shll
cs
loope
or
ror
cs
leave
loope
sub
mov
push
shrb
adc
orb
pop
mov
mov
ret
cltd
jmp
insb
in
add
xchg
sbb
jbe
xor
or
push
xor
das
jbe
insl
cmp
pop
pop
mov
xchg
or
subb
adcl
cli
inc
sti
sbb
in
aaa
cmp
sbb
pmullw
popf
inc
and
mov
or
enter
xor
loope
pop
in
jl
fnstsw
bound
int3
outsl
xor
aad
sbb
fcmove
pop
pop
jnp
mov
xchg
lret
add
inc
mov
dec
or
push
hlt
insl
mov
imulb
cltd
inc
dec
sbb
cmpsl
lods
insb
jecxz
and
fsubr
movsl
das
xchg
mov
sub
or
repz
xchg
pop
fistps
adc
and
jno
hlt
push
dec
mov
xchg
ds
push
and
xor
loop
test
push
and
and
xor
nop
lods
cli
sbb
test
cmp
push
dec
pop
xchg
in
daa
mov
cwtl
jo
adc
jge
adc
jecxz
mov
mov
jne
fcmovb
adc
loopne
xchg
sub
aam
xor
data16
out
sub
sub
mov
test
cmp
add
ja
inc
mov
cltd
mov
sarl
inc
adc
xchg
movsl
test
cmp
fnstenv
or
sbb
push
mov
in
call
pop
lcall
pop
cmpsl
pop
daa
and
aam
test
sub
aaa
out
mov
outsb
push
pop
insl
add
sub
xchg
mov
repnz
cmpsb
sbb
imul
xchg
jnp
data16
cmpsb
xchg
out
mov
xchg
ret
jns
or
and
mov
sarl
adc
out
and
dec
mov
cld
fcoms
cltd
pop
movsb
or
cmp
test
add
mov
fsub
popa
and
fs
sub
in
mov
ja
jns
or
add
cltd
int
das
mov
dec
shll
jae
out
mov
mov
test
xlat
adc
cmp
mov
cs
push
orl
jle
int3
mov
mov
test
call
sti
cli
neg
in
out
loopne
dec
nop
pop
fsts
jns
lods
int
xlat
arpl
push
enter
mov
loope
fsubrl
stos
les
shlb
scas
andb
mov
xor
dec
adc
rclb
mov
sbb
mov
test
xor
sahf
js
sub
inc
jge
sti
dec
inc
and
xor
sti
push
add
dec
lock
xor
xchg
mov
or
stos
mov
test
mov
outsb
or
jnp
lcall
insb
rolb
pop
out
lods
sub
push
adc
or
pop
in
add
cwtl
adc
js
cmpsb
sub
pop
leave
sub
xor
lods
movsb
pop
dec
adc
test
or
mov
cmp
inc
xchg
inc
inc
pushf
xchg
sub
dec
mov
jecxz
add
or
cmp
and
outsl
addb
push
fidivrs
in
das
test
jmp
jae
cmc
dec
xor
xor
popa
xor
or
cmp
mov
in
dec
dec
ret
xchg
aam
mov
mov
rcr
jmp
iret
xor
je
out
cmp
pop
push
imul
or
stos
pavgb
notb
sub
adc
mov
cmp
adc
pusha
add
push
loope
mov
jecxz
add
cltd
xchg
add
push
popa
pop
aas
push
mov
jl
pop
in
test
sub
cmc
cmp
mov
arpl
sub
mov
repnz
sbb
cwtl
call
scas
pop
jecxz
dec
xchg
xor
or
mov
dec
sahf
and
and
aam
mov
pop
je
cmp
out
dec
in
stc
jbe
add
mov
icebp
ret
jbe
jg
and
mov
mov
dec
sbb
dec
in
insb
inc
cmpsl
js
hlt
and
popf
push
pop
pop
fidivrs
shlb
fisttpll
xor
dec
div
mov
cmp
lahf
int
add
xchg
clc
mov
jle
lods
jp
push
mov
xchg
pop
mul
fs
rorl
push
lahf
jl
adc
iret
jbe
xchg
rcll
dec
shlb
hlt
insl
add
mov
loop
clc
iret
mov
lock
stos
or
push
add
repnz
mov
insb
jecxz
sub
ja
call
push
push
xchg
aad
stc
hlt
int
dec
cmp
in
mov
or
push
scas
notl
aas
mov
jne
ds
jle
cmpsb
fisubs
stos
pushf
fsts
cmp
iret
lock
sbb
or
iret
jecxz
adc
sbb
mov
jne
pop
push
mov
cmc
ja
and
sbb
mov
pop
fidivrl
dec
call
test
leave
sbb
stc
jg
jmp
add
cmp
push
imul
pop
cwtl
aam
in
inc
shrb
in
leave
mov
dec
mov
lahf
pop
scas
cwtl
jne
xchg
pop
cmpsb
adc
jg
data16
in
cmp
sbb
hlt
movsb
movsb
popa
pop
stc
dec
loop
lcall
jae
lods
arpl
adc
pop
mov
or
push
hlt
push
xchg
fdivrl
fimuls
jb
jb
stos
xlat
xor
lret
xchg
and
ds
fidivs
fistl
push
inc
push
shlb
psrld
movsl
addr16
push
or
cmp
repz
call
or
out
out
dec
pushf
roll
stos
sti
daa
ljmp
test
or
dec
rcrb
mov
adc
inc
and
dec
inc
push
sub
inc
adc
scas
lods
adc
fistpll
jns
imul
jo
jl
dec
xchg
je
cmp
sbb
mov
xor
andb
dec
or
clc
jo
jnp
jl
paddd
mov
insb
stos
sbb
push
jl
cmp
dec
subb
pop
push
xlat
push
sub
adc
pop
test
pop
lcall
pop
mov
dec
sub
and
leave
cmp
jne
jp
cs
and
cld
mov
test
pop
mov
stc
cmp
pop
sbb
loope
and
scas
mov
jle
sub
and
imul
test
push
mov
or
sahf
das
adc
mov
mov
push
xchg
daa
popf
push
mov
shlb
aam
cmp
xchg
jnp
lcall
pop
dec
sbbb
xor
adc
xor
mov
sbb
std
orl
mov
pop
xchg
jns
jno
arpl
inc
arpl
dec
jmp
xor
sub
xchg
rorb
add
inc
daa
insl
cmpsb
mov
pop
hlt
gs
outsb
icebp
or
sbb
fistpll
shl
in
test
fwait
push
test
jo
push
jl
lea
jg
ljmp
mov
mov
negb
xchg
inc
dec
adc
repz
aaa
xchg
cmc
xchg
add
xchg
fisubrl
add
mov
xchg
mov
icebp
cwtl
add
mov
mov
js
dec
mov
iret
mov
insb
dec
sahf
shll
inc
movsb
cmp
push
xchg
xchg
cmc
movb
mov
pop
fldcw
rclb
pushf
adc
mov
cmp
and
or
jne
and
aad
xchg
or
xor
or
mov
enter
shrb
into
stc
inc
das
mov
test
push
cs
popf
aas
les
mov
in
cmp
push
mov
push
inc
fsts
scas
inc
cwtl
hlt
cld
je
mov
repnz
and
in
push
push
jns
xlat
jmp
mov
mov
rcr
push
push
mov
iret
es
push
pusha
js
shl
inc
and
push
ljmp
fs
pop
movsb
jl
lret
daa
stc
pop
mov
enter
getsec
add
mov
sbb
into
cmp
push
cmpsb
sbb
or
xchg
dec
stc
cltd
adc
pop
cmovae
mov
adc
addl
mov
adc
in
mov
fidivs
in
jle
jae
mov
and
mov
xorb
mov
aad
jae
cmp
pop
in
in
lods
pop
ljmp
std
xor
mov
loope
push
iret
mov
mov
aad
stos
mov
idivl
and
jne
and
arpl
push
mov
mov
mov
pusha
icebp
inc
sub
addr16
addb
mov
xor
call
or
insl
cmp
test
push
in
mov
and
in
xor
dec
aas
jns
mul
adc
jbe
add
leave
xor
adc
jbe
push
ret
and
dec
mov
fldl
roll
xor
call
into
push
push
cs
arpl
mov
aaa
mov
sbb
fldenv
pop
fiadds
cmc
and
sub
repnz
push
inc
xchg
or
xor
clc
icebp
or
sarb
and
sbb
fistpll
and
pop
repnz
push
jmp
inc
sub
mov
sbb
in
nop
std
sbb
push
mov
std
and
stc
jns
aam
sbb
js
je
mov
push
mov
cmpsb
dec
mov
pop
push
ret
and
mov
inc
jb
popa
sbb
rorb
pop
test
jb
or
imul
out
and
xor
push
call
stos
bound
pop
xor
sub
and
loop
xchg
mov
push
fmul
nop
imul
lret
sbb
jbe
pop
pop
add
mov
pushf
js
lret
dec
pushf
inc
xor
out
or
call
and
and
lcall
mov
inc
fsubrs
out
sub
nop
mov
pop
xor
sahf
in
fstpl
push
jb
fcmovbe
ret
inc
jp
cltd
sub
ljmp
sbb
es
dec
jmp
pop
repnz
aad
cmp
add
inc
mov
cmpsb
lods
pop
gs
lods
cld
mov
ss
dec
mov
addr16
sub
out
xchg
andl
fidivrl
jmp
jo
jge
cmpsl
push
fcoml
xchg
mov
sbb
roll
mov
imull
sub
cmp
ds
jl
arpl
sbb
adc
call
cmp
stos
cmp
outsl
test
adc
adc
not
and
cmp
jne
lret
rclb
jl
fwait
inc
enter
es
test
mov
mov
adc
pop
js
inc
subb
pushf
sbb
jmp
cmp
adc
adc
mov
jecxz
insl
jmp
push
les
push
add
rcrl
out
loopne
sub
fists
mov
sub
leave
popa
iret
lret
xor
pop
lds
mov
xorl
ffreep
and
cltd
push
and
mov
cmp
out
outsb
adc
lcall
dec
je
or
xor
jle
bnd
add
rorb
aaa
daa
out
add
ljmp
or
pcmpgtd
jg
mov
or
lock
int
xor
ds
or
inc
fistpll
ja
arpl
shl
pusha
sub
or
in
xlat
loop
mov
hlt
cmpsl
jle
mov
inc
shll
or
or
dec
out
mov
jg
lret
mov
jno
push
jp
jge
xor
int
cmpsb
loope,pn
lcall
mov
subb
add
fistpl
push
push
mov
test
lret
cltd
lahf
dec
dec
lods
ret
mov
aas
jno
push
adcl
add
inc
and
xchg
mov
xor
sbb
idivl
mulb
movswl
jbe
mov
push
and
mov
clc
and
push
xchg
das
js
mov
or
jnp
fidivs
js
cmp
and
mov
xchg
dec
adc
orl
push
scas
push
add
jl
mov
sub
in
jmp
nop
lea
xchg
mov
cltd
lock
pop
mov
cs
sub
xchg
out
cmpsb
push
mov
stc
inc
insb
dec
lock
push
jns
push
fcoms
pop
push
leave
jg
cmpsb
pop
jle
dec
inc
add
xlat
cli
js
addl
sbb
pop
stos
push
aas
lea
testl
xchg
push
inc
lods
jno
insb
rcrb
imul
sbb
das
adc
loop
xchg
sbb
and
arpl
dec
pop
movsb
lret
outsl
pop
ja
cmp
ja
and
push
mov
xor
loop
adc
cmp
mov
cmpsl
push
popa
xchg
mov
pushf
int3
add
aas
jns
inc
or
sub
fidivrs
push
fsts
adc
adc
ret
loopne
test
dec
lds
leave
inc
mov
xchg
mov
or
out
mov
add
sub
lods
mov
stos
mov
mov
inc
das
jge
test
pop
inc
stc
mov
jne
adc
test
mov
mov
aaa
push
mov
aad
je
xor
mov
in
lret
pop
push
jl
inc
sbb
clc
push
mov
lds
test
mov
xor
inc
jge
pop
fnstsw
es
sti
push
push
cmpsb
xor
mov
arpl
andb
and
mov
inc
sbb
aaa
dec
sub
add
sbb
xchg
aas
sarb
clc
lcall
pusha
imul
gs
scas
cli
sbb
mov
test
mov
mov
adc
out
dec
popf
fmull
cld
mov
inc
sbb
outsl
sub
add
loope
inc
dec
fsubs
lahf
mov
push
add
jp
pop
jno
mov
pop
pop
inc
mov
jle
ficompl
dec
in
mov
inc
push
jl
pop
scas
lods
pop
test
popf
and
ret
frstor
bound
cli
push
mov
pop
mov
div
pop
push
pop
gs
dec
popa
push
fsubp
jle
cmc
es
cmp
xchg
out
fsubrl
dec
in
push
or
add
lods
xor
mov
mov
sub
fwait
sub
inc
pop
lret
jns
sub
add
inc
mov
repz
mov
mov
and
mov
int
ja
add
test
and
fstps
or
imulb
int
gs
decb
xchg
fimull
lods
cld
mov
paddsw
hlt
ficoms
mov
add
mov
leave
loop
les
or
push
dec
dec
mov
adcl
xor
mulb
and
cmpsl
xchg
or
add
cmp
xor
lds
inc
push
mov
dec
or
and
dec
out
sbb
mov
lret
push
xchg
dec
cmpsb
lds
dec
xchg
cmp
push
mov
gs
push
xor
and
fisubl
cmpsb
aas
sahf
loope
xorl
sahf
rorb
xchg
out
movsb
or
lret
leave
cmp
and
cld
lahf
mov
in
icebp
jecxz
insl
loop
inc
out
mov
mov
inc
lret
popf
mov
xchg
mov
add
stc
outsb
sub
sbb
pop
xchg
adc
jp
rcr
sbbb
mov
movsb
inc
out
pushl
repnz
ds
xchg
mov
arpl
or
push
mov
fucomip
mov
inc
mov
xchg
stos
push
sbb
cwtl
sub
clc
in
ja
fstpl
or
push
ret
fidivrs
rorl
outsl
inc
dec
sub
adc
add
gs
movsl
shlb
mov
push
fildll
out
imul
xchg
iret
sub
mov
mov
jp
mov
dec
stos
shll
jo
clc
push
ret
es
aas
lahf
int3
push
cmp
cld
and
cmp
cli
cmp
aaa
std
adc
adc
repz
dec
call
jno
sub
push
xor
int
scas
fstpl
push
mov
cmp
push
call
das
aaa
jns
sub
dec
imul
jg
jecxz
cmc
cwtl
jne
clc
dec
push
or
adc
mov
sub
lods
cs
lods
add
sub
clc
mov
jp
xchg
out
stos
sub
dec
dec
jl
mov
sbbb
pop
xor
std
add
lock
jo
pop
rcll
cmp
xchg
shll
sbb
rcl
jmp
jmp
sub
jle
fdivrl
push
stos
mov
mov
daa
push
scas
imulb
jbe
sub
push
push
mov
mov
mov
fiaddl
and
jno
lret
int
cli
mov
add
addr16
dec
pop
stos
data16
mov
test
daa
cmc
cmp
xchg
pop
ds
xchg
sub
sbb
test
notl
aaa
adc
popa
cmpsl
jnp
adc
and
sbb
jne
rcrl
hlt
adc
fs
jg
in
sbbb
rol
cli
pop
push
mov
sbb
pop
xchg
sbb
das
or
inc
out
push
sbb
push
ljmp
inc
mov
dec
lock
and
cld
dec
adc
pop
pop
pop
mov
sub
dec
xor
xchg
sti
push
fnstcw
sbb
bound
push
stc
test
mov
mov
jae
cmp
dec
into
mov
mov
lock
andb
sub
lods
mov
jmp
scas
out
les
sbb
icebp
xchg
push
lock
jbe
fstpl
jmp
mov
push
movsl
mov
sbb
in
int
sbb
out
xor
sbbl
and
xchg
mov
push
jl
out
cmpsl
mov
fidivrl
inc
jmp
jg
lods
cltd
jo
shll
dec
jmp
int3
loope
cld
cmc
out
add
jb
xchg
and
orb
in
divb
rorb
addl
mov
inc
lret
cmpsb
xchg
cmc
or
push
or
dec
sbb
les
mov
push
mov
idivl
hlt
int3
mov
inc
mov
jmp
ffreep
cmpsb
subb
cmp
pop
cmp
aaa
jnp
add
cmp
popa
in
sub
jae
dec
orb
adc
jae
lds
test
ret
pop
in
out
je
outsl
fucomp
idiv
cmp
rclb
jle
add
sbb
rolb
fwait
jb
push
mov
sahf
shl
pop
test
cmpsb
test
ljmp
mov
test
jle
jae
fdivrs
lret
clc
out
cmp
lods
dec
pushf
or
stos
add
mov
mov
test
sbb
mov
push
push
cmp
add
sarl
xchg
push
inc
adc
repnz
fidivrl
lahf
add
mov
mov
sbb
sbb
mov
add
lcall
divl
dec
mov
cmp
ret
xor
cmpsb
xchg
dec
cmpsb
sub
pop
daa
lods
mov
rol
xchg
dec
ret
xchg
shlb
stos
add
and
out
loopne
add
pop
mov
mov
rorb
fnstenv
gs
inc
jo
sub
adc
iret
std
stc
outsb
add
push
leave
fisubrs
add
repz
divl
xchg
rorl
arpl
in
and
xchg
mov
insb
adc
dec
cmpsl
mov
mov
xchg
jecxz
ja
and
or
lret
jne
cli
jmp
jo
fsts
xchg
jmp
sub
aas
inc
pop
test
clc
insb
insl
scas
movb
adc
shll
stc
shr
xlat
cmp
mov
test
cmc
or
movsl
cmp
cmpsb
inc
mov
andb
je
and
add
mov
in
pop
loop
xchg
xchg
cmpsb
mov
xchg
sahf
pop
gs
in
les
mov
jne
adc
sub
lret
xor
xlat
ljmp
loop
xchg
fwait
sahf
mov
sahf
mov
pop
cltd
nop
mov
cmp
sti
lahf
pop
out
xor
sbb
xor
mov
andb
jae
mov
jnp
cltd
jle
xor
xor
jbe
cmpsl
jmp
out
xchg
fisttpll
sbb
mov
icebp
stc
xchg
sub
cmpsl
push
jmp
mov
incl
push
fsubrl
data16
sbb
imul
and
or
push
mov
jne
cmp
loope
movsl
arpl
fisttpll
leave
adc
cld
mov
inc
lcall
sbb
mov
push
jo
mov
xchg
inc
subl
add
mov
adc
icebp
lea
xchg
cmp
push
xor
repz
or
inc
pop
xchg
test
insb
aad
pop
lret
out
popa
xchg
jge
andl
mov
mov
mov
mov
in
cmp
mov
shlb
or
add
or
insl
pushf
xchg
into
dec
sbb
addr16
icebp
xchg
loope
mov
iret
sbb
test
cmp
outsl
test
xor
pop
mov
movl
sahf
pop
loope
jmp
jne
lahf
inc
test
jmp
mov
inc
insl
pop
cli
mov
adc
in
pop
adc
xor
jae
vorpd
push
dec
xchg
es
xchg
dec
cmpsb
and
lret
adc
jmp
ljmp
xchg
pop
cld
mov
movsl
inc
pop
int3
std
mov
xchg
inc
clc
adc
mov
mov
mov
inc
xchg
jo
sti
cmp
jb
sbb
test
flds
pop
xchg
int
pop
sbb
out
push
sbb
mov
lret
xchg
push
sub
stos
stos
mov
aas
pop
enter
repz
pusha
adc
jb
bound
call
xcrypt-ofb
cmpsl
das
sbb
adc
insb
imul
gs
jp
or
int
cmpsb
and
arpl
movl
push
rolb
loop
hlt
cli
mov
xchg
aaa
xchg
sbb
sar
imul
mov
sub
loopne
jl
inc
xor
fistpl
xor
sbb
int
mov
mov
pusha
ljmp
mov
and
add
pop
mov
xor
cmpsl
ss
mov
mov
lods
xor
cmpsb
jg
pop
in
push
shrb
mov
sarb
pop
cmp
pinsrw
xor
out
sbb
outsb
into
cmp
les
rcrl
je
add
jl
inc
lods
popa
enter
scas
and
adc
out
mov
outsl
loopne
pop
sahf
aas
cld
in
cli
outsb
adc
aas
das
add
out
test
add
lret
fistpl
cmp
cli
leave
fnstenv
mov
cltd
push
icebp
scas
mov
cld
stos
adc
sub
movl
fs
fdivrs
aas
mov
daa
xor
sub
dec
enter
mov
das
pop
mov
mov
cld
jl
loop
in
jo
xor
sbbl
test
mov
mov
and
mov
jbe
dec
cmpsl
pop
cmp
pop
sub
or
sub
inc
imul
leave
outsl
cltd
pop
pop
rclb
das
mov
sahf
popa
mov
or
xor
push
rorl
in
das
sub
in
rorb
dec
adc
aad
xchg
push
les
shl
cld
loope
sub
mov
sahf
fwait
addl
cltd
xchg
in
add
push
inc
push
jne
xchg
xlat
mov
add
push
jae
stc
fmull
lock
xchg
das
nop
xchg
push
dec
or
adc
dec
mov
mov
bound
cwtl
cltd
adc
bound
mov
ds
loop
adc
ror
insl
sti
mov
xchg
fmulp
arpl
mov
or
cmp
cld
push
push
sahf
or
xchg
mov
in
xchg
jo
cmp
cs
push
cmp
mov
mov
push
lea
mov
cmpsl
xor
xchg
add
rcrl
adc
mov
jle
pop
jbe
or
dec
imull
jo
xchg
scas
cwtl
cli
sub
in
xchg
enter
negb
push
sub
outsl
pop
mov
jne
repnz
cmp
push
jl
lods
mov
add
leave
push
sbb
xchg
out
rorl
shrl
mov
cmc
sbb
popa
adc
adc
and
out
mov
cwtl
fnstcw
sub
and
les
in
mov
loopne
stos
xor
jecxz
stos
mov
lea
rcr
lcall
fs
lcall
in
les
dec
clc
mov
leave
pop
movsl
add
xor
and
dec
or
mov
sbb
dec
movb
push
fwait
scas
push
mov
pusha
cmp
sbb
pop
jae
xchg
jo
jns
mov
adc
fisttpll
sti
inc
sub
push
incl
cmp
lds
or
pusha
xchg
inc
xchg
mov
es
popf
imul
filds
pop
stc
nop
out
jns
aaa
xor
mov
mov
or
xchg
pop
sahf
jge
xor
mov
xchg
mov
adc
xchg
js
add
fmul
cmpl
jge
in
mov
mov
ljmp
add
ds
jmp
mov
roll
cltd
fsts
fmuls
ds
fidivrl
testl
pop
cwtl
sub
mov
fcoml
push
jno
not
pop
push
ja
out
xor
loopne
push
ja
std
sub
cli
cmp
push
sbb
inc
ret
xchg
jecxz
dec
scas
imulb
pushf
add
repnz
out
lret
les
pop
fwait
rorb
lret
pop
out
popf
stos
dec
movsb
jle
in
or
mov
popf
hlt
mov
in
inc
mov
loop
ficoml
push
je
xchg
pushf
je
adc
mov
out
vpandn
insl
add
adc
sbb
in
push
jnp
fldcw
iret
cmp
xor
orb
insl
ret
inc
cmc
adc
repz
jns
sbb
call
popa
sti
jbe
pop
add
lock
into
inc
cwtl
pop
inc
les
lock
mov
mov
iret
je
enter
mov
pop
jmp
movsb
int3
or
or
cmp
lahf
jnp
add
scas
sub
dec
hlt
shlb
inc
adc
test
mov
repz
inc
mov
das
idivb
imul
in
out
outsb
mov
or
shll
jecxz
je
push
enter
fwait
add
mov
jnp
data16
out
push
pop
jge
or
xor
aaa
imul
std
xchg
jo
cltd
inc
shr
cwtl
inc
mov
js
push
lods
pop
mov
je
test
inc
sub
dec
in
cmpsb
pop
sti
sbb
mov
pop
out
adc
ljmp
ja
push
lahf
sub
lret
jg
push
and
jle
xor
push
mov
fs
ret
sahf
stc
jbe
mov
mov
push
inc
jl
pop
cmp
into
xor
out
stos
dec
andl
xchg
repnz
lret
dec
in
loop
cld
icebp
out
xor
outsl
imull
outsb
sbb
icebp
mov
adc
cs
jns
stos
int
mov
jb
push
insb
push
inc
push
out
faddl
test
sub
pop
sbb
in
sbb
divl
jb
movsl
ds
aad
cmpsl
fstl
jno
and
popf
fisttpl
out
push
mov
and
out
xchg
inc
adc
add
jbe
lret
inc
push
ret
ss
clc
mov
roll
addb
sbb
pop
lock
push
cmp
mov
rcrb
popf
jno
push
push
pop
mov
mov
pop
sub
shll
dec
jb
cmp
in
faddl
loope
mov
arpl
cmc
xor
push
fmuls
cmp
imul
mov
js
out
inc
int3
xor
inc
xor
pop
jae
cmp
pop
cmp
pop
jne
test
xchg
jnp
pop
pop
sub
in
mov
xor
daa
mov
pop
push
jae
pop
lea
pop
stc
push
mov
aad
lret
or
testb
jb
ret
add
dec
xchg
loop
jo
iret
jne
add
push
xor
insl
movsb
mov
xor
ds
stos
std
inc
divb
sub
cs
mov
jge
xchg
mov
pop
dec
push
push
shlb
mov
push
pushf
rcrb
push
stos
sbb
fwait
fwait
sbb
push
clc
addr16
jge
ret
shrb
call
sbb
call
repz
push
xorl
dec
push
mov
mov
js
sub
mov
insb
mov
scas
loopne
jno
cmp
or
aam
or
push
jmp
cli
cmp
xor
mov
mov
out
js
xchg
mov
cmp
mov
imul
and
lods
jo
pop
ljmp
inc
cmpb
inc
mov
adc
shl
stc
pop
pop
mov
loop
xchg
inc
push
js
inc
popa
nop
outsl
pandn
insl
and
ror
jmp
sahf
lds
and
icebp
icebp
pop
ja
ja
mov
scas
push
outsl
or
mov
cmp
inc
stos
jne
push
dec
lcall
dec
add
popa
mov
shrl
ss
xor
inc
push
pop
sbb
sub
in
mov
dec
sbb
push
mov
mov
insb
pop
dec
loope
aaa
or
addl
insb
mov
jle
cmp
cmc
test
push
rcl
fwait
mov
aam
pop
push
cmc
ret
int3
cmp
or
mov
xchg
popf
xchg
add
clc
fwait
clc
in
mov
mov
aas
and
add
xchg
xor
mov
add
mov
aam
addr16
repz
jl
jns
sub
lock
xor
xchg
ja
add
aad
test
lea
scas
add
pusha
cmp
or
pop
call
and
test
scas
stos
jb
test
lret
xorb
push
mov
push
imul
js
stc
mov
or
popa
lds
mov
call
cmp
cmp
out
orl
fxch
mov
inc
sti
mov
test
flds
out
call
in
lds
in
les
popa
cmpsb
xor
lea
xchg
flds
int
dec
push
xchg
mov
mov
xor
jl
test
push
shr
lods
mov
in
jb
mov
or
orl
pop
fs
dec
lods
mov
cmp
inc
mov
pop
lock
xor
jle
shrb
shlb
addl
pushf
outsl
mov
in
or
sbb
mov
lahf
pop
lods
cli
sub
mov
sbb
clc
jecxz
rcr
jo
aaa
ret
cmp
jge
ss
xor
mov
movsb
into
add
sbb
out
jg
cmp
mov
push
jo
rclb
xchg
lret
push
inc
cs
jno
push
stos
call
jl
aam
mov
ds
fcmovne
mov
mov
mov
xchg
xchg
fs
imul
rorb
sub
fdivr
xor
insl
sbb
adcb
sbb
in
mov
js
leave
push
test
xchg
je
std
push
es
add
adc
mov
mov
dec
pop
repnz
jmp
mov
mov
rcll
xor
jo
int3
mov
arpl
popf
into
insb
bound
jns
or
inc
or
mov
inc
mov
je
daa
lock
imul
test
or
xlat
lret
jbe
fwait
sub
jo
imulb
jne
push
call
insl
mov
stos
push
mov
fdivrl
test
add
add
inc
in
rorb
lods
inc
and
push
or
popa
jg
xchg
add
adc
addr16
sbb
xchg
test
cltd
rcr
fprem1
fisubrs
or
out
cmp
arpl
mov
inc
dec
pop
int3
cmp
test
mov
dec
sbbl
push
popa
lea
mov
out
sub
jo
mov
rcrb
cli
repz
add
mov
push
xor
add
bound
xor
xor
jae
mov
xchg
stc
ror
in
mov
lret
xchg
mov
mov
mov
rorb
call
adc
mov
mov
dec
mov
mov
imul
mov
xchg
ret
push
pop
sbb
sub
xchg
arpl
pushf
les
xchg
sub
inc
pop
push
std
popa
fidivrs
pushf
filds
sbb
in
pop
sbb
cli
push
mov
repz
lret
repnz
sub
repnz
outsb
jle
addr16
xlat
ss
mov
scas
mov
xchg
jno
mov
adc
lahf
jo
pushf
rol
mov
mov
out
out
lea
push
fisttpl
andb
adc
mov
sbb
icebp
pop
cmp
xchg
sti
xlat
lret
pop
jle
mov
sahf
scas
or
ja
cmp
insb
or
popa
dec
xchg
outsl
sti
xchg
inc
arpl
leave
pop
ljmp
out
ret
mov
insb
lret
add
fdivl
jg
dec
adc
and
fstp
daa
lods
inc
xlat
sub
loopne
loop
and
rcll
outsb
aas
lea
fnstsw
jecxz
inc
pop
or
and
mov
fidivrl
rcll
fisttps
rol
test
or
mov
or
and
jb
cmp
lea
dec
mov
pop
mov
push
cs
lcall
adc
and
mov
in
sbb
and
scas
adc
rorl
mov
sub
push
xor
mov
gs
mov
jmp
cmp
cmpsl
lcall
fcomps
jbe
fstpt
test
out
xchg
jne
enter
sub
mov
sbb
inc
mov
or
jp
ds
es
pslld
es
sbb
jne
stos
mov
push
push
cmp
leave
lcall
inc
ljmp
fimuls
xorl
int3
out
mov
cmp
outsb
adc
xchg
mov
fbstp
mov
leave
scas
cmp
and
popf
and
test
dec
cwtl
movsb
loopne
call
cmp
jp
cmp
mov
jnp
jb
jl
or
cmp
push
xchg
pop
lcall
mov
stos
mov
int
push
xor
rcrb
xor
in
cmpsl
in
mov
push
pusha
shl
mov
pop
mov
rorb
fcmovbe
dec
fnsave
aad
mov
jmp
sub
scas
adc
sub
inc
and
or
nop
and
adc
inc
dec
nop
subb
lods
xchg
adc
mov
xchg
and
dec
mov
hlt
stos
sub
xchg
in
mov
loope
mov
xorb
fwait
rcll
cmp
test
leave
or
andb
jg
jmp
lret
cwtl
inc
pushf
in
cs
push
jbe
push
jb
daa
out
test
jo
js
dec
xchg
outsl
xchg
dec
mov
mov
dec
xor
lret
aam
push
and
ss
push
out
pop
push
push
test
cmp
add
cmpsl
xor
int
aad
vmwrite
repz
xlat
repnz
pop
loop
imul
xor
cmp
scas
addl
imul
lds
arpl
mov
clc
inc
lcall
int3
ss
fs
mov
je
mov
inc
push
or
or
mov
mov
fbld
pushf
cmp
jp
pop
jns
jmp
pop
inc
lea
sub
pop
mov
shrb
mov
adc
in
push
pop
adc
pop
imul
jge
test
or
cwtl
das
rcl
mov
and
movsb
xor
stos
invd
mov
push
mov
loop
push
sti
pop
ljmp
stos
scas
repnz
ss
xor
sub
call
fwait
cli
mov
jecxz
mov
mov
hlt
cmpsb
mov
fistpl
sbb
push
inc
out
sbb
jle,pn
ret
call
sub
sbb
xor
sub
sub
xor
pop
adc
aad
or
lahf
push
mov
jo
subb
test
in
add
sbb
push
jecxz
ss
stos
in
lock
or
divl
stc
push
add
popa
gs
mov
sbb
push
repnz
pop
jl
decb
mov
mov
sub
push
push
aas
push
aam
arpl
adc
sbb
popa
sub
mov
mov
cli
push
lods
mov
mov
pop
ret
mov
scas
and
popf
add
sbb
or
jmp
mov
jns
mov
sbb
movsb
bound
icebp
mov
cwtl
imul
pop
gs
jl
rorl
dec
dec
in
xchg
push
addr16
add
mov
cmp
jp
cmp
mov
bound
and
or
pop
ret
mov
jge
ss
cmp
mov
push
xor
fldl
test
daa
mov
adc
jle
sbb
mov
bnd
orb
movsb
stos
icebp
xor
and
jbe
arpl
lea
lea
sarl
ja
test
mov
sub
jge
mov
into
jge
imul
cs
daa
repz
cmp
imul
ret
jmp
jns
lcall
lods
or
lods
sbb
inc
cli
pop
lahf
aas
loop
sbb
jno
rep
jo
insb
cmp
repnz
mov
hlt
pop
fldt
ret
cmpsl
sbb
lods
mov
jae
js
fstps
sbb
xchg
dec
ljmp
push
cmc
or
push
cmpb
mov
aad
pushf
repnz
out
xlat
jo
ret
or
adc
sub
in
call
aas
push
testb
mov
das
cli
xlat
pop
imul
dec
loopw
lods
popf
mov
mov
lock
add
or
lea
push
mov
and
loope
sbb
and
pushl
jmp
dec
iret
mov
fisttpll
out
testb
lcall
inc
inc
data16
ljmp
jae
ds
fidivl
ds
xlat
aas
jp
pop
xchg
add
and
xchg
mov
or
mov
add
aas
mov
test
adc
xchg
push
dec
les
pop
data16
call
or
dec
add
push
pop
xlat
xor
jp
ret
lods
sub
add
test
lahf
out
aad
sbb
or
fwait
sbb
std
and
push
repnz
adc
repz
sbb
dec
sub
je
pop
fstps
push
out
pop
ret
mov
push
setnp
movsb
scas
inc
fwait
test
pop
dec
dec
mov
daa
xchg
imul
cltd
fists
pop
jae
dec
mov
loopne
inc
inc
or
push
xor
jne
aaa
pop
sbb
ret
adc
cmc
push
xor
leave
popa
sbb
mov
scas
xor
fadd
dec
mov
loop
add
push
pusha
gs
add
or
cmp
fcomip
cltd
jno
fsubrs
in
mov
dec
jge
orl
scas
or
notb
cmpsl
dec
out
jg
loopne
sbb
adc
fisubs
lods
mov
fisubs
add
sub
imul
sti
sbb
cmpsl
lods
movsb
aas
and
fstl
add
and
add
xor
stc
push
cmp
call
jge
mov
dec
or
stos
add
xchg
sub
pop
je
lods
jo
cmpsb
jno
ss
push
cmp
mov
or
mov
xlat
cmp
dec
push
pusha
xor
cmpb
out
sub
loopne
das
leave
insb
sbb
in
dec
or
cmp
inc
pop
and
test
in
leave
imul
insl
adc
push
and
pushf
jle
shl
mov
push
rol
dec
xorl
mov
es
js
push
fcomps
loopne
cli
pop
sbb
inc
sub
or
cmp
bound
xor
pop
lea
fisubs
in
iret
lds
enter
xchg
xchg
adc
pusha
mov
jnp
into
cmp
adc
xchg
popf
mov
inc
push
and
xor
rorb
xor
pop
inc
mov
mov
or
test
xor
mov
mov
adc
push
cld
cs
addr16
imul
imul
add
push
cwtl
test
popa
dec
or
lock
and
jns
or
and
sbb
in
pusha
sar
je
lea
in
gs
pop
call
addr16
xchg
fs
rorb
push
leave
es
adc
fisubs
push
sub
push
dec
mov
fwait
inc
ror
sbb
push
dec
xchg
call
test
out
adc
jno
jl
mov
adc
sub
ret
adc
rcl
orl
inc
adc
sbb
out
loop
or
mov
dec
mov
pop
xchg
sbb
xlat
fs
sahf
shlb
pop
pushf
jnp
imul
inc
insl
rcrl
lret
mov
insb
ljmp
scas
aaa
mulb
ficoms
lcall
adc
aad
mov
mov
sbb
push
add
rorl
mov
xor
add
adcl
jmp
cmp
jb
mov
cltd
std
hlt
mov
add
push
outsb
or
mov
xchg
mov
dec
sub
sub
mov
cmc
mov
sub
int
std
cmpsl
ret
pusha
sbb
scas
ljmp
mov
dec
or
aaa
and
lock
movsb
shrb
sti
mov
pushl
jnp
push
and
push
xor
push
out
insb
or
sub
ret
jmp
rcrl
push
xor
into
movsb
push
mov
sbb
pushf
mov
rcr
dec
xchg
cmpsb
xor
adc
js
repnz
cmp
fdivl
fisttpll
push
adc
dec
mov
out
out
hlt
push
inc
xchg
ret
pop
inc
or
cwtl
cmp
or
inc
add
or
cltd
jecxz
push
ss
dec
cltd
mov
insl
pop
cmc
mov
sti
pop
lahf
cltd
sti
stos
mov
inc
dec
xchg
movsl
adc
pop
cmc
shll
shlb
xchg
sbb
cmp
cmp
aam
popf
mov
sub
je
pop
dec
and
jae
cmp
loopne
jne,pt
jnp
mov
dec
lea
lods
pop
jbe
leave
dec
pop
jl
cmp
scas
lods
and
sbb
xchg
into
sahf
push
adc
lock
dec
or
lret
or
stos
les
ljmp
add
incl
in
fwait
lahf
aaa
mov
sbb
lea
arpl
xor
xlat
mov
push
xor
test
pop
and
cmpb
rolb
add
fists
xor
xchg
je
jg
mov
mov
out
lahf
iret
mov
mov
es
cmp
xchg
pop
loopne
dec
ds
mov
or
mov
cmp
lods
test
data16
cmp
pop
mov
push
inc
lods
mov
xor
sbbl
loopne
iret
int
lods
aad
ja
pop
mov
loope
cmp
pushf
mov
shrb
lds
sahf
adc
mov
shl
inc
mov
ja
push
jl
jbe
mov
inc
add
sub
adc
enter
lds
pop
push
inc
cmp
int3
adcl
jl
cmp
inc
andb
dec
leave
dec
dec
dec
cmp
or
jno
xchg
into
mov
insl
stos
out
mov
jle
in
dec
dec
stos
inc
push
adc
sahf
ret
sahf
or
push
les
mov
ds
in
xor
movsb
add
cmp
mov
ud2
inc
push
fmull
pushf
xchg
mov
dec
call
idivl
scas
mov
or
lea
pop
jp
dec
dec
outsb
gs
adc
dec
xchg
mov
lods
sub
sbb
and
cmp
sub
pusha
ds
dec
scas
dec
push
push
add
or
loop
lds
int3
dec
mov
aaa
lds
cld
inc
cs
dec
sub
sub
and
jb
rorb
mov
lahf
subb
iret
push
mov
in
daa
je
hlt
cs
xchg
mov
pop
mov
aas
dec
mov
fsubs
push
cs
adc
cli
xchg
and
sbb
mov
jle
mov
mov
movsl
fwait
cmp
outsl
sub
lods
push
idivl
or
inc
mov
lret
or
sub
js
cs
dec
inc
ret
pop
das
cmp
js
insb
ss
adcb
sbb
add
and
ret
scas
xchg
or
inc
xchg
cmp
fstl
push
mov
mov
addr16
call
roll
push
fcomps
inc
push
cwtl
pusha
dec
fsubs
xchg
and
pop
dec
jb
mov
jp
mov
shrl
jge
gs
lods
add
adc
aaa
mov
jno
fisubrs
orb
sub
pop
and
out
push
enter
ficompl
nop
jb
cmp
fcoms
sub
insb
nop
cmp
mov
push
jbe
fiaddl
mov
lcall
jns
jecxz
jecxz
push
or
mov
int
addr16
icebp
jecxz
push
ret
out
pop
daa
jge
out
fbld
jnp
push
jl
and
mov
mov
pop
cmpsl
rclb
push
xchg
jae
mov
fwait
jl
adc
mov
cmp
es
sbb
subb
fcoms
push
cltd
lock
js
lods
data16
mov
negl
test
and
mov
xor
xor
sbb
push
loope
fidivrs
fldenv
in
pop
jmp
std
movsb
jl
aas
jl
shrl
adc
lock
rcrl
and
jb
ret
lcall
adc
in
negl
mov
pop
xchg
push
jo
lret
sbb
push
dec
jp
cs
push
xchg
cmp
sub
in
inc
xchg
jg
je
ljmp
test
hlt
sub
mov
mov
neg
dec
inc
rcr
arpl
pop
push
mov
lea
test
and
daa
xlat
loopne
in
add
adc
lcall
pop
push
adc
sarb
mov
add
sub
jno
adc
push
mov
push
xor
hlt
pop
jle
dec
mov
ja
pop
mov
imul
cs
inc
test
mov
ljmp
mov
inc
dec
jle
arpl
cmp
jmp
movsb
pusha
push
adc
push
and
fcomp
into
mov
add
aad
sbb
imul
cld
stc
jl
mov
adc
daa
decl
clc
or
andb
push
adc
push
dec
rolb
rolb
jno
inc
xor
mov
pop
jnp
jnp
pusha
cs
shlb
ja
xchg
or
adc
scas
icebp
push
or
or
adc
ret
sbb
adc
mov
repnz
adc
out
cmpsl
lret
inc
dec
ljmp
imul
popf
or
pusha
rcr
and
ds
stos
pop
jne
add
fs
cmp
ja
roll
cli
xchg
sbb
mov
push
adcb
insl
scas
test
xorb
push
push
add
mov
ret
xor
je
insl
js
ja
and
push
sub
aaa
dec
jae
xor
outsl
out
jl
cmc
fdiv
mov
xchg
mov
fcomps
and
mov
adc
arpl
int3
clc
xchg
fcoms
sub
movsl
clc
lss
std
pusha
bound
lahf
jp
inc
idivb
insb
lahf
mov
stc
mov
jle
mov
roll
popf
daa
shll
and
inc
sbb
push
cltd
pop
mov
mov
sub
fcmovne
inc
jno
cmp
inc
leave
insl
sahf
sbb
js
pop
adc
call
cmp
sahf
shl
pop
das
stos
aas
xor
mov
scas
adc
outsb
mov
mov
xchg
push
mov
xor
or
push
rolb
sub
sub
adc
cld
cmp
add
mov
divb
or
and
movsb
or
test
stos
scas
scas
scas
sub
rorb
pop
mov
ret
testl
mov
ds
sbb
pop
cmpsb
push
ds
sti
out
cs
imul
std
pop
adc
ja
fnsave
test
scas
jle
sub
cltd
jne
sbb
mov
cmp
jp
dec
imul
aas
push
lcall
jge
imul
enter
out
jno
adc
negb
fs
iret
fstpt
movsb
sbb
imul
cmp
call
pop
mov
test
stos
repz
xchg
mov
in
test
sbb
insl
enter
xor
enter
out
insl
mov
popa
imul
dec
mov
jle
push
xlat
and
fwait
pop
fs
mov
hlt
cltd
inc
out
or
jno
adc
lods
test
jge
mov
out
imul
daa
push
mov
repnz
sbb
cmpsl
mov
xchg
movsl
lods
pop
xor
cmc
jne
test
sub
dec
loopne
lret
jmp
prefetch
mov
fadds
mov
sbb
inc
dec
out
sub
sbb
fst
cmpsb
rcll
cmc
push
jo
lds
mov
insb
gs
and
pop
ds
int3
lea
out
and
cmp
jmp
popa
push
jp
jb
fwait
es
loopne
jmp
aad
ss
jns
add
test
adc
lcall
iret
pop
push
pop
push
lds
cmp
push
mov
sbb
test
movsb
adc
mov
mov
rorb
stos
or
call
hlt
cmp
das
arpl
cmp
shlb
sbb
dec
imul
sbb
les
aas
pop
jne
addb
test
lods
add
sbb
sub
ds
push
push
sbb
or
jp
stc
pop
test
ret
rcr
pop
xor
pop
dec
sub
push
scas
sub
jge
pop
notb
test
into
mov
fldcw
mov
mov
dec
aaa
fiaddl
fldcw
sbb
mov
addr16
xchg
cmp
jnp
in
jbe
add
outsb
unpcklps
adc
dec
add
cwtl
xchg
movsl
out
xor
arpl
inc
cmpsb
push
push
movb
ret
xor
mov
mov
sub
lock
and
pop
dec
mov
adc
repnz
xchg
cmp
xchg
dec
add
negb
rcr
out
popa
dec
adc
cmc
pusha
add
andl
xor
xchg
fwait
leave
push
iret
mov
push
out
pop
inc
nop
adc
test
cli
inc
lods
mov
daa
sub
in
and
stos
lret
lret
or
jb
mov
sub
shrb
test
mov
in
sbb
xchg
xor
stos
fdivrs
mov
push
sahf
popa
int3
xchg
pop
shrb
push
or
ret
insl
cmp
out
add
cmp
iret
test
aas
lahf
int3
push
mov
mov
jnp
xor
fsubrp
sbb
std
push
rcr
mov
pop
aad
sub
aaa
mov
mov
push
push
in
outsb
sub
das
mov
xor
imul
scas
cld
dec
imull
sarb
push
dec
mov
testb
jmp
dec
enter
xor
xchg
xchg
pop
aad
pop
sub
add
sarl
repnz
leave
push
test
xor
pop
or
mov
enter
xorb
jl
push
outsl
movsl
jnp
xchg
out
hlt
fcompl
fdivr
xlat
lods
adc
leave
and
and
insl
pop
adc
jge
es
rclb
lcall
mov
std
xchg
and
sbb
push
sbb
and
mov
dec
addr16
aas
cwtl
pop
inc
test
lods
jnp
xlat
sub
cmp
add
arpl
lret
xchg
push
call
or
adc
daa
enter
movsl
pop
jp
xchg
inc
sahf
add
fstps
int3
mov
sti
mov
xor
ret
ds
iret
shlb
and
jb
and
pop
cld
and
sti
cld
in
sub
and
in
jnp
jne
xchg
cs
repz
sbbb
jl
jnp
jmp
push
cli
enter
mov
dec
sub
pop
sub
xor
shr
or
sub
ds
shlb
push
movsl
icebp
pop
jecxz
push
mov
xor
mov
mov
cli
loopne
adc
popf
bound
adc
fs
ja
ds
inc
cld
mov
addr16
add
push
inc
or
mov
inc
loope
xchg
ds
sarl
loopne
insl
pushf
flds
cmp
sub
add
int3
adc
movsb
rorl
mov
sarl
fwait
das
stos
not
xchg
lcall
bound
adc
xchg
push
call
sbb
push
fnstsw
and
cmpl
sub
mov
pop
jle
fbld
ljmp
pop
xchg
push
xor
jge
mov
mov
inc
fldt
pop
jg
xchg
lret
out
inc
xor
pop
bound
sub
popf
lcall
bound
pop
scas
adc
insl
nop
sbb
push
syscall
cmp
inc
xchg
fnstsw
xchg
or
jle
pop
jae
sbb
ja
outsb
nop
mov
movsb
mov
mov
test
dec
sarb
push
cmp
test
in
sbb
mov
jge
adc
fdivp
dec
imul
sarb
stos
mov
pusha
sub
mov
aam
sahf
pop
mov
imul
xchg
bound
sbb
pushf
shll
push
sbb
sub
pop
ror
out
and
adc
jno
fistl
jns
jo
mov
in
xor
pop
and
imul
push
lret
fidivs
repz
out
daa
mov
adc
jl
data16
push
repz
xchg
popa
xor
int
lea
xchg
fs
or
and
movsl
mov
rcrl
jb
sbb
or
and
push
das
inc
in
push
and
inc
shll
mov
push
lcall
dec
push
cmp
outsl
cs
int
sbb
sarb
outsl
sbb
xor
iret
dec
and
loope
test
nop
adc
pusha
pop
loopne
sub
jp
pusha
dec
mov
sbb
cmp
icebp
fnsave
ds
jne
push
das
inc
mov
lea
loopne
xchg
inc
outsl
faddp
dec
lret
iret
pop
and
lds
cli
cli
jl
add
or
or
ljmp
cmpsb
shl
fmuls
test
push
dec
ds
pusha
push
loop
sbb
hlt
repnz
fwait
push
xchg
pop
jecxz
jae
jne
cs
stos
in
je
lcall
and
das
xchg
outsl
dec
imul
add
stc
add
lea
lock
ret
loope
pop
mov
add
adcl
mov
push
cmpsl
test
mov
mov
in
cld
pop
mov
out
jo
sarb
and
movsb
test
les
bnd
int3
mov
sbb
pop
sbb
dec
int3
xor
in
jns
insl
jg
pushf
sub
jg
shufps
out
xor
sbb
mov
jo
repnz
imulb
insl
sbb
inc
lret
rcll
lcall
sub
dec
mov
bound
aam
push
xchg
das
push
ret
cli
cmp
xchg
sub
mov
cmp
nop
cmp
cwtl
lods
mov
or
fstpt
loope
in
sbb
sbb
in
gs
sub
and
ret
ja
add
inc
ljmp
push
mov
ret
mov
fldl
inc
mov
in
out
push
or
jle
push
jo
sub
lods
out
in
test
inc
in
out
movsl
dec
clc
pushf
mov
sbb
dec
sub
insl
stos
push
xor
pop
cwtl
mov
jns
in
std
les
sbb
cmp
jl
addr16
out
mov
mov
inc
loopne
adcl
les
jne
cwtl
inc
scas
hlt
jp
idiv
aaa
pop
push
xlat
sarl
ret
push
into
and
sbb
test
jbe
clc
lahf
xor
mov
mov
cli
or
xlat
out
dec
xor
xor
je
push
ljmp
test
leave
xchg
ljmp
dec
iret
push
xchg
adc
lret
and
cltd
lods
lahf
push
push
pop
loop
bound
jbe
adc
xchg
mov
sub
mov
xchg
dec
sub
fidivl
sbb
dec
das
inc
test
fisubl
jmp
les
mov
insl
ss
test
iret
cmp
rcrb
nop
dec
jb
cmpsl
cmpsl
ret
out
test
stos
sbb
mov
jp
lea
leave
jp
push
mov
xor
or
xor
popa
loop
xchg
scas
dec
mov
push
sbb
jmp
dec
add
sbb
in
enter
push
add
jno
mov
testl
fcoms
xor
cmc
jb
push
pop
out
mov
mov
sbb
sbb
mov
sbb
ljmp
lock
clc
cs
push
inc
pop
inc
add
sbb
test
adc
mov
je
dec
bound
ds
sub
cmpsb
lods
sahf
sahf
jl
push
negl
lahf
jno
mov
lds
out
icebp
sbb
test
popa
adc
cs
pop
enter
cmp
sub
cltd
push
mov
pop
fidivs
sbb
mov
mov
sbb
enter
test
iret
ret
hlt
es
adc
pushf
dec
test
pop
push
ficoms
nop
aad
lods
iret
cmp
popa
cwtl
lret
gs
dec
int3
inc
mov
aam
cmc
rcrl
sbb
jecxz
jle
inc
sbb
xor
rolb
loope
mov
int3
repz
out
and
add
jecxz
sti
mov
and
cmp
push
leave
out
mov
xchg
push
mov
add
pop
pop
fsubrs
jp
mov
push
js
mov
xchg
nop
inc
lret
inc
jo
mov
nop
xchg
xor
subl
jle
aas
iret
adc
cmpsb
in
fimuls
xor
xor
fisttpll
push
sub
iret
repnz
fnstsw
or
xchg
cmp
fcmovnb
out
xor
data16
and
lahf
jl
mov
fiaddl
daa
ds
dec
rclb
xchg
test
ljmp
push
sbb
xor
lods
xchg
lods
rolb
jbe
stc
loop
imull
pop
out
push
or
xlat
repz
mov
dec
lcall
pop
pushf
add
add
std
popf
imul
add
cmp
adc
jle
outsb
add
jnp
outsb
in
scas
enter
mov
lret
rorl
push
in
mov
inc
mov
addr16
jb,pn
lcall
jmp
fsts
lods
mov
lods
stos
jo
jp
test
xor
xor
mov
sbbl
dec
shrl
push
xor
lods
subb
and
into
clc
mov
cmc
mov
xchg
cs
add
test
sub
rorb
outsl
jmp
push
mov
add
hlt
mov
adc
loopne
enter
add
and
int3
popa
faddl
fidivs
adc
enter
add
lds
mov
pusha
rcl
mov
inc
jb
test
mov
ss
xor
out
inc
bound
repnz
mov
inc
xor
movsl
cmp
mov
xchg
adc
orl
cmc
stc
loop
sbb
dec
push
push
test
xchg
stos
xor
xor
stos
pop
or
or
mov
fwait
dec
mov
ss
and
cmp
xor
lods
push
mov
lahf
daa
lea
mov
sarl
nop
cmp
inc
je
lret
jbe
pop
pop
push
sub
mov
cmc
add
xor
push
push
lods
addl
outsl
push
mov
adc
sbb
or
lods
add
aas
shlb
push
add
jge,pn
mov
push
sbb
or
jecxz
push
pop
insl
jg
test
sub
adc
rcrl
jne
loope
sub
xchg
add
push
dec
movsl
lds
sbb
mov
call
push
leave
ss
push
in
cmp
sub
xchg
cmp
icebp
xchg
jbe
out
mov
popa
inc
movsb
repnz
roll
mov
pushf
dec
pop
xchg
movsl
dec
mov
xlat
fimull
ret
jo
cli
dec
aas
mov
imul
fldl
push
xchg
nop
repz
stos
sub
xor
cmpb
pop
mov
js
dec
ret
pop
inc
and
dec
inc
sbb
mov
sbb
inc
pop
aad
sbb
mov
in
inc
icebp
or
mov
push
cmp
pop
add
repnz
mov
mov
push
mov
xchg
and
mov
jmp
inc
mov
push
lahf
inc
out
in
mov
cmpl
arpl
mov
and
pushf
cmp
les
test
clc
rcrl
sbb
jne
push
test
pop
mov
push
dec
test
cltd
stos
arpl
mov
shrl
push
icebp
add
cmpsb
adc
aas
push
and
and
add
aad
jno
xor
cltd
setnp
sbb
and
andl
jbe
sahf
in
push
mov
inc
lahf
bound
jbe
sbb
xchg
clc
dec
xchg
cmp
in
xorb
movsl
jae
fists
dec
jle
icebp
outsl
jmp
cs
mov
mov
ret
sub
cmpsl
xchg
imul
call
es
adc
mov
ret
in
imull
xlat
cli
push
mov
lods
xor
xchg
aad
arpl
ficoml
or
sarb
inc
dec
dec
mov
int3
movsl
inc
cmp
ret
ds
fcmovu
or
push
xor
cld
daa
cmpsb
out
bound
test
jge
fucom
data16
ss
pshufw
das
mov
adc
jnp
aad
stos
js
jp
fstps
pop
sbb
jno
jmp
insb
ret
lret
outsl
in
scas
fdivrl
add
add
fdivrp
rcr
mov
or
xchg
inc
insl
mov
push
andl
dec
and
inc
imul
clc
loope
add
sbb
jecxz
pop
rcl
mov
jl
xchg
pop
ret
add
dec
sbb
pop
adc
jne
movb
aad
jbe
pop
mov
adc
pop
mov
dec
in
xchg
es
mov
rorl
test
sti
fld
bound
fnsave
jecxz
in
xchg
fstps
add
in
jae
bnd
sub
or
and
inc
mov
push
mov
repz
cld
lret
mov
dec
add
sbb
iret
jo
xor
mov
test
les
insl
adc
sahf
or
add
ss
xor
in
pop
pop
add
loopne
push
shl
icebp
dec
mul
mov
xor
mov
sbb
push
in
stos
rorl
icebp
cs
sbb
std
push
or
loopne
subl
xchg
jne
xor
xchg
repnz
inc
nop
lret
adc
leave
lea
test
dec
out
xchg
bound
fldcw
mov
mov
test
movsb
ffree
rol
xchg
xchg
in
sbb
mov
mov
and
xlat
pop
in
adc
iret
dec
xchg
mov
paddd
jb
pop
dec
mov
push
push
daa
repnz
sub
orl
pop
pop
push
mov
cmova
ja
sub
push
xor
adc
fsubrl
dec
rolb
add
jge
dec
pop
xchg
popl
lcall
dec
subl
pop
pop
jno
sysexit
sti
mov
add
inc
inc
cmp
xchg
gs
inc
xchg
xor
bound
idiv
jno
fwait
fwait
or
jns
pop
xchg
and
cmp
ficomps
xchg
sbb
in
fsubl
sub
loop
aaa
je
nop
loopne
idiv
js
popa
decl
cli
mov
rcrl
cmpsl
push
mov
in
out
sub
das
mov
out
dec
mov
pop
addb
int3
jecxz
repz
sub
inc
into
loop
push
in
mov
das
jge
push
lahf
push
xor
dec
sbb
xor
push
aam
addr16
ret
in
xor
sbb
inc
xchg
xchg
jecxz
aam
inc
jae
inc
fcmovb
inc
loop
out
cmp
pop
dec
sub
scas
push
pop
jb
push
dec
xor
jno
ficoms
sahf
stos
adc
nop
das
insl
xor
push
out
out
iret
mov
jg
cld
jmp
insl
xor
mov
es
std
and
sub
mov
push
mov
mov
nop
daa
add
mov
mov
fisubs
jbe
in
push
sbbb
jge
arpl
xor
int
jne
jge
mov
stos
or
movsl
loope
mov
pop
cmp
mov
push
cli
and
xchg
cmp
stc
in
lahf
push
dec
pop
jmp
cmc
jbe
mov
cmp
lahf
mov
fldcw
add
mov
addr16
dec
inc
mov
xlat
test
fwait
inc
rol
jp
cli
mov
into
repnz
je
popa
sbb
int
sarl
rcr
inc
mov
jle
cmp
xor
pushf
ret
mov
add
test
and
xchg
push
xor
mov
in
call
pop
fs
mov
sub
inc
insb
std
add
push
nop
xchg
repnz
jo
into
sahf
les
hlt
xchg
sbbb
add
pop
dec
in
jb
mov
dec
mov
jns
mov
lahf
mov
sub
mov
sbb
mov
cmp
popf
or
push
cmp
mov
mov
xchg
jo
stos
leave
push
in
das
jmp
jle
outsl
xchg
imulb
pushf
mov
rclb
aad
pop
dec
sbb
ffree
aas
insl
jnp
mov
mov
gs
cmpsb
scas
in
out
insb
out
inc
sbb
push
psllq
sbb
test
sub
lahf
adc
sub
add
insb
xor
mov
loopne
cmpsb
daa
lods
call
shll
sub
test
cmp
xlat
es
mov
jmp
inc
xor
adc
sbbb
mov
pop
lret
mov
cltd
cmp
add
in
dec
aam
jbe
leave
push
leave
cmp
xor
sub
sbb
mov
loop
push
cli
adc
jmp
ret
lret
inc
jecxz
dec
mov
pusha
and
imul
das
mov
inc
aad
and
ja
jns
xchg
sub
push
fnstcw
insl
iret
imull
lods
lret
cmp
cmc
adc
stos
or
add
jg
push
or
mov
int
das
dec
aaa
mov
fisubrs
cmp
add
dec
push
movsl
lret
jne
or
dec
aam
cmpsb
cmp
mov
imul
clc
lahf
fsubs
cmpsl
push
xchg
mov
xchg
stos
inc
push
push
mov
jge
out
jbe
popa
js,pn
mov
push
cmp
shll
cmp
pushl
arpl
push
cmpsb
repnz
xlat
icebp
lods
add
ret
adc
pop
sbb
mov
test
lcall
rcrl
je
pushf
les
push
les
insl
adc
imul
iret
clc
sub
int3
std
cltd
shrb
mov
enter
mov
mov
cltd
inc
or
mov
pusha
das
push
cmp
sub
mov
das
cmp
addr16
cmpsl
sbb
test
orl
nop
lods
and
and
push
test
cs
sbb
dec
dec
add
xchg
xor
repz
call
xchg
push
mov
xor
and
dec
add
adc
cmp
mov
sahf
jp
cmpsb
aad
mov
push
int3
mov
mov
adc
dec
cld
xor
in
push
push
in
dec
and
cmpsl
fs
xchg
ror
ljmp
shl
std
imul
test
les
in
outsl
sbb
pop
xchg
test
push
in
xor
in
shrb
push
push
mov
bound
in
xchg
inc
mov
aad
adc
inc
sbbl
fs
xor
cmp
jno
adc
xchg
mov
push
push
jbe
imul
in
int3
dec
dec
adc
adc
xlat
xchg
in
sub
sti
aas
faddp
or
mov
xchg
jge
outsb
inc
fs
xchg
into
cmpl
push
mov
cmp
and
scas
in
out
sub
cmpsl
inc
inc
lret
push
fs
out
in
push
jmp
ljmp
call
call
pushf
xor
pop
sub
jne
sub
cmp
arpl
mov
dec
insb
aam
or
scas
repz
cmp
dec
mov
andl
outsl
adcl
in
xchg
scas
pop
push
rdtsc
cmp
mov
js
mov
ljmp
and
push
xor
out
xor
cmp
fists
sbb
push
ja
cmp
dec
lods
cmp
das
nop
push
adcl
push
sub
out
or
jnp
cmp
jne
dec
repnz
sbb
adc
test
inc
jecxz
data16
pusha
jbe
mov
mov
cmpsl
jge
sub
es
cmp
xorl
jbe
shll
pop
fucom
pop
mov
push
inc
dec
ljmp
jbe
jecxz
or
mov
ja
in
adc
pop
mov
fidivrl
aas
aad
out
stc
hlt
repz
in
add
xor
nop
arpl
fwait
or
mov
sub
gs
inc
in
pop
xchg
cmp
xor
mov
cmp
or
mov
dec
call
mov
inc
les
mov
adc
inc
sarl
push
lahf
pop
mov
and
inc
jb
sbb
mov
add
stos
in
sub
pop
outsb
out
adc
aam
cmp
rclb
pop
outsl
fsubr
clc
es
jo
iret
lret
outsl
fsts
xchg
xor
pop
dec
jae
sub
popa
testl
inc
push
add
inc
std
mov
fs
hlt
sahf
stos
ret
push
sbb
push
call
idiv
xor
ds
out
sbb
fildl
setae
xchg
jae
data16
icebp
lcall
adcl
add
pushf
mov
sbb
fisttps
sbb
sbb
cmc
std
mov
mov
pop
fdiv
push
dec
je
test
in
enter
mov
adc
add
cmp
or
pusha
aam
loope
test
mov
sub
mov
sub
aam
push
lret
out
inc
into
enter
cmp
clc
cli
sti
adc
jno
pop
jns
sbb
jo
sbb
sti
push
movsl
pop
scas
loopne
lcall
rcr
shrb
sub
lds
xchg
insl
mov
sub
loop
adc
add
mov
cmpsb
or
sub
sub
lret
mov
mov
icebp
push
fbld
in
xchg
mov
ret
ja
outsl
lea
mov
mov
add
cmc
into
sti
gs
les
and
sub
push
cwtl
shr
or
arpl
inc
lcall
and
ss
jnp
mov
push
push
jle
ficompl
in
sub
cli
cld
insb
adc
mov
xchg
lods
movsl
aam
push
lahf
jb
popa
mov
push
popa
adc
movsb
in
fsts
sarl
xacquire
scas
dec
and
inc
sahf
pop
insl
fstps
ss
aas
cmp
adc
sub
std
idivl
xchg
or
inc
cmp
fwait
leave
cli
and
adc
xchg
or
or
mov
movsl
push
rcr
jle
test
push
movsl
xor
stos
inc
fidivrl
xor
nop
fistl
or
loopne
mov
or
outsl
add
cmpsl
adcb
jb
sbb
xlat
xor
mov
push
pop
cld
lea
aad
loop
les
sub
push
out
mov
sbbb
mov
inc
pop
jl
adc
imul
cmp
leave
cmpsl
aaa
pop
insl
je
repz
or
cmc
add
pop
add
adc
pusha
aam
rclb
jle
test
xchg
scas
add
andb
sbb
or
sahf
add
cmp
mov
push
push
test
fbld
sub
adc
add
sbb
in
daa
stos
daa
pushf
adc
and
push
pop
test
pop
mov
add
nop
scas
in
jne
fldl
insl
jae
imul
stos
jmp
loop
push
iret
pop
stos
mov
mov
mov
inc
mov
out
push
cmp
imul
jbe
push
pop
dec
add
das
mov
call
add
nop
xor
loope
je
xor
test
jb
out
pop
test
ss
fistps
in
mov
lock
xor
out
cmc
mov
cmc
mov
cmpsl
aam
xchg
mov
jg
xchg
rcrb
fs
sub
cwtl
sub
mov
mov
add
cld
imul
aas
repz
xor
mul
jp
adcb
sub
loopne
sbb
jnp
jae
and
jb
sbb
hlt
cs
ret
lods
aad
or
repz
cli
push
mov
jns
test
mov
push
lock
sbb
sub
sahf
loopne
mov
adc
setb
mov
adc
lods
sbb
xlat
lahf
add
sub
add
cmp
jle
push
cmp
pop
dec
fwait
call
nop
scas
push
aaa
sti
jb
iret
bound
cmp
gs
xchg
lahf
push
add
inc
mov
push
in
call
lahf
das
adc
jle
add
mov
aaa
inc
out
mov
inc
pop
jne
dec
xchg
cmc
pusha
mov
nop
repz
in
add
add
cs
jo
xchg
int
jl
shl
dec
xchg
cld
filds
adc
mov
test
adc
jbe
pop
push
cmp
pop
cmpb
cmp
lret
movsl
pushf
jnp
sub
sub
mov
test
test
sub
sbb
dec
fidivl
ret
pushf
cmp
xor
dec
roll
sti
inc
rcrb
popa
or
aad
in
sbb
ljmp
sub
lods
aad
push
xchg
add
dec
xlat
add
jae
lds
xchg
or
stc
sahf
rclb
or
push
mov
shl
push
mov
addl
add
sbb
faddl
into
xor
adc
stos
cmp
sbb
icebp
xor
and
es
scas
fisttpll
adc
mov
cmp
add
pop
std
or
xchg
gs
popf
dec
cmp
notl
aaa
xor
inc
xchg
ds
cmp
mov
dec
cmp
mov
or
cmp
cmpsl
inc
in
lahf
cmp
addr16
sbb
cwtl
sbb
scas
mov
sbb
jno
mov
fs
pop
sbb
icebp
mov
or
decl
fildll
mov
dec
cwtl
inc
addr16
jae
iret
inc
dec
xor
imull
pop
jno
ss
sub
xchg
cmp
xor
sti
ss
push
hlt
lock
shlb
aaa
mov
stc
add
inc
test
lret
call
jo
and
or
sub
insl
das
aas
ss
cld
jb
in
js
aad
mov
insb
xchg
ret
clc
push
cltd
lds
or
mov
insb
outsl
std
dec
mov
mov
cmc
push
fdivs
cld
aam
js
mov
int
jbe
das
mov
call
push
aaa
mov
sbb
mov
mov
in
out
outsl
jecxz
mov
mov
ret
adc
sub
and
pop
xchg
xchg
scas
mov
mov
inc
je
mov
and
shl
jnp
inc
lcall
dec
xchg
jb
rorb
inc
popa
push
push
ja
sub
or
jmp
and
sub
orl
dec
sbb
mov
jmp
in
cmpsl
push
lret
pushf
cmp
clc
sub
or
cli
push
mov
cmp
and
scas
mov
cmc
movsb
lock
adc
sbb
sahf
xchg
mov
ljmp
lret
or
lahf
dec
xlat
jnp
push
push
scas
lret
jmp
cli
jl
mov
cmp
scas
fsubs
cmc
mov
imul
add
mov
arpl
rep
xor
pop
adc
loopne
push
aam
fnstcw
nop
add
sub
xorb
icebp
lea
imull
in
mov
dec
inc
test
ja
mov
insb
rcrb
fcmovnu
insb
push
or
ret
clc
push
sub
pop
out
mov
mov
jbe
stc
in
or
add
mov
das
mov
jno
mov
mov
pop
add
xorb
iret
stc
outsb
dec
cmp
mov
popa
mov
jp
xchg
lods
adc
pop
adc
pushf
lods
mov
xchg
or
mov
adc
enter
push
mov
cmp
adc
addl
xor
xchg
and
xchg
jbe
fwait
popa
dec
dec
shll
push
xchg
popa
mov
dec
divb
jg
and
inc
lret
and
mov
push
xchg
and
lea
iret
leave
daa
movsl
aaa
jp
dec
push
in
mov
pop
or
mov
addb
lret
jmp
sub
inc
lock
movsl
push
lods
mov
jno
out
loop
jg
dec
stc
xchg
nop
push
cltd
je
lahf
xor
and
cmp
xchg
cltd
inc
scas
push
add
xchg
stos
shll
aaa
xlat
jl
mov
pop
gs
fs
subl
push
test
sbb
fs
testb
add
cmp
loopne
ljmp
cmc
sbb
mov
pmaxsw
lods
jg
dec
and
xor
rcrl
out
enter
fs
xor
lcall
aad
movsl
cmp
outsl
lods
xchg
cli
out
inc
inc
mov
loop
fneni(8087
jae
sahf
cmpsl
mov
push
sub
out
pop
bound
push
add
jae
ret
testb
xor
pop
mov
scas
push
andl
fidivrs
out
add
loope
add
xor
sub
inc
and
jp
mov
pop
or
xor
leave
xchg
jo
or
das
roll
gs
sub
jo
mov
call
pop
inc
adc
lahf
push
adc
mov
and
and
enter
out
sti
inc
mov
test
mov
std
icebp
popf
jmp
mov
or
pop
leave
jbe
push
insl
dec
mov
sub
add
inc
or
