push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
loopne
idivl
mov
rcrl
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
mov
ffree
bnd
push
repnz
nop
jmp
push
push
fiaddl
cmp
mov
loopne
jnp
mov
sbb
aad
xor
mov
xor
inc
ret
xchg
hlt
data16
pusha
out
mov
ffree
lock
add
lds
dec
into
pop
pop
jbe
mov
mov
test
loope
outsl
insl
dec
mov
test
in
jl
cmpsl
lret
daa
int
addb
fnsave
test
insb
sar
xor
mov
fs
jns
mov
sbb
mov
imul
in
mov
adc
repnz
mov
add
rol
or
push
cli
das
dec
xor
mov
lds
jns
in
mov
push
pop
sahf
popl
xchg
popa
xor
mov
aam
popa
jmp
and
movsb
xchg
mov
mov
cwtl
jno
ss
mov
test
iret
xor
test
pop
add
ret
subl
jo
addl
xlat
aaa
movsb
jmp
sub
mov
add
fcomip
imul
and
pop
push
and
inc
pop
dec
add
sub
aaa
add
mov
sub
push
ja
add
int
mov
orb
sub
dec
fwait
jbe
xchg
add
je
fdivrl
aad
jge
mov
cmp
adc
xchg
testl
shlb
dec
push
push
mov
add
pop
mov
icebp
leave
dec
xchg
pop
xchg
scas
sbb
cld
scas
mov
int
dec
xchg
adcl
or
push
mov
cmp
and
out
pushf
mov
pop
cmp
add
ds
clc
in
push
test
or
add
mov
add
fsubr
inc
js
mov
cmp
in
sti
xor
test
lock
in
add
xor
sti
pop
into
fsubrs
push
xchg
in
and
push
jmp
movsl
sub
add
add
and
add
out
int3
jne
xchg
out
push
lcall
iret
int3
jns
and
sbbb
jge
and
popf
adcl
sub
mov
sub
inc
hlt
lock
mov
imul
mov
sbb
iret
xchg
lahf
fiadds
add
lahf
adc
inc
aaa
xor
jnp
xchg
jne
xchg
cwtl
stc
cmp
jmp
push
insb
out
and
dec
sub
test
xor
scas
sbb
xor
stos
stc
pop
xchg
imul
sbb
push
pop
sub
jle
inc
jno
xchg
sbb
es
test
sub
clc
sbb
inc
dec
pop
cld
jmp
fisttps
dec
dec
jo
das
std
aam
add
pop
mov
add
pop
stos
addb
mov
mov
sub
sbb
push
ljmp
loopne
and
int
sbb
fdivr
es
out
daa
scas
xchg
push
in
xlat
xor
xchg
mov
and
sub
outsb
push
outsl
dec
jnp
arpl
stos
scas
and
push
cwtl
push
out
cmp
pop
or
out
mov
aaa
in
push
mov
lock
dec
push
mov
sub
and
add
nop
jmp
jae
test
mov
and
bswap
jle
mov
inc
dec
mov
in
jle
pop
push
cli
mov
xor
pop
repz
jecxz
push
mov
add
jl
dec
push
sub
aaa
fsubs
mov
enter
xchg
or
pop
insb
movsl
xor
adc
sub
dec
dec
adc
shrl
aad
dec
in
lret
or
popf
add
fldenv
test
xor
pop
pop
xchg
adc
std
movsb
fiadds
push
push
inc
pop
movsb
pop
and
frstor
mov
sbb
pushf
leave
cmp
jmp
mov
mov
cld
cmp
arpl
push
push
or
sub
imul
push
xor
mov
aam
loope
mov
cmp
cmpsl
sbb
cmp
push
faddl
ficoms
notl
subl
insb
pop
stos
and
dec
into
imul
lea
ljmp
mov
les
test
movzbl
or
inc
outsl
fdivrp
repnz
mov
sbb
xchg
rcll
mov
mov
stc
jmp
cmpsb
out
add
stc
outsb
xor
adc
xor
cmp
sub
jge
push
add
popa
mov
loope
add
add
push
into
sub
test
daa
sbb
jae
js
pusha
aam
or
scas
sti
aaa
mov
mov
mov
pop
es
or
fists
mov
or
lods
ret
js
mov
mov
fidivs
popa
push
mov
mul
lea
push
ficompl
pusha
mov
iret
outsb
dec
push
add
out
subl
pop
popa
fwait
lcall
mov
addl
pop
lock
push
mov
sahf
sbb
mov
mov
mov
idivb
pushf
iret
xchg
leave
inc
push
xor
test
cmp
negb
cmc
lock
lret
dec
pushf
xor
ret
lock
or
repnz
xlat
adc
lods
cwtl
add
nop
push
xchg
ss
cmp
dec
lea
fdivrl
add
stc
mov
jo
daa
ljmp
xchg
or
out
out
xchg
cmpsb
ficoms
pop
insl
add
test
mov
das
or
push
fsubs
inc
in
shrl
xchg
pushf
xchg
and
cmp
and
cmp
loop
or
out
or
jle
out
mov
add
arpl
xchg
in
leave
jne
int
add
xchg
subb
jne
loop
sbb
xchg
dec
outsb
nop
stos
fs
inc
cmp
repnz
xchg
out
nop
leave
scas
mov
inc
xchg
jnp
xchg
scas
cwtl
adc
lods
xor
mov
dec
mov
push
mov
mov
xor
ja
pop
pop
clc
mov
xchg
lds
inc
ds
sbb
insl
test
sahf
mov
add
adc
enter
rcll
cs
xchg
imul
push
test
sbb
push
add
inc
mov
pop
cmp
sbb
adc
sub
adc
jp
inc
scas
outsb
mov
lods
or
stos
mov
loope
fsubrl
roll
lret
sbb
cmp
inc
pop
call
mov
add
in
in
jns
sbb
loopne
movsl
cs
mov
fcmovnbe
or
xchg
inc
fidivrl
jb
jo
pop
or
sbb
addr16
in
sbb
insl
jge
call
push
jg
mov
call
jnp
fidivrs
decb
add
sub
pop
movsl
push
arpl
out
or
xor
add
add
xchg
mov
pop
lahf
add
sub
jnp
and
or
mov
mov
popa
push
stos
mov
mov
push
shll
mov
adc
iret
insb
mov
xchg
mov
fistpll
xchg
lret
cltd
nop
cmc
sub
sub
pop
inc
aam
lret
fdiv
adc
mov
inc
mov
sub
cmp
adcb
add
add
lods
cmp
xchg
pushf
insl
iret
subl
sub
sbb
xor
into
mov
stos
sahf
cmc
push
mov
hlt
lcall
mov
in
fnstsw
or
push
or
cmpsl
dec
push
cmpsb
loope
mov
arpl
jmp
movsl
xor
or
adc
ret
pop
popa
mov
xor
add
push
pop
leave
pop
lret
pop
gs
push
fwait
aas
stc
pop
push
mov
xchg
movsb
sarb
out
xchg
popf
mov
pop
cmpsb
std
std
xor
jns
inc
scas
shl
sbb
xchg
sub
cmp
sbb
pop
mov
fistpl
popl
in
mov
push
cltd
insl
push
and
outsb
cmc
mov
divb
and
sub
xchg
fmull
orl
addr16
mov
lds
add
push
mov
push
outsl
sbbb
lock
dec
in
dec
jmp
xchg
repnz
loope
lock
mov
dec
mov
and
int
lods
icebp
dec
cwtl
lods
mov
push
loopne
dec
mov
loope
imul
pop
xchg
sub
and
out
inc
push
push
mov
dec
test
xor
inc
es
lock
sub
add
inc
fcomi
je
or
call
mov
xchg
dec
ss
xchg
movsb
sub
mov
mov
inc
lcall
loope
sub
je
fldl
out
sub
jne
insl
ret
or
gs
xchg
push
mov
fwait
rcr
sahf
cmp
inc
and
int3
xchg
cmp
scas
inc
mov
out
stos
fstpl
sub
mov
add
inc
mov
int
cwtl
pop
int3
lret
mov
push
push
or
fwait
movsb
pop
subl
hlt
fsubr
popa
mov
je
mov
cmp
mov
sbb
sti
out
shl
mov
lea
je
jns
push
mov
jecxz
rcrl
mov
pop
cmpsb
xor
fs
xlat
jg
xchg
mov
repz
hlt
inc
lds
sub
sahf
jge
jl
push
lcall
pop
push
es
stc
sarb
xchg
or
fcmovb
lods
inc
xchg
adc
ja
mov
scas
stos
sbb
scas
ljmp
adc
icebp
scas
sbb
inc
add
ds
movsb
sub
sbb
rclb
ljmp
inc
inc
scas
or
xchg
enter
test
xor
sti
jnp
outsb
sub
repnz
lret
add
dec
stc
dec
addr16
pmaxsw
xor
sahf
sub
xor
mov
push
jnp
lahf
lcall
ret
arpl
xchg
cmc
add
mov
push
xchg
dec
ret
mulb
push
fmulp
or
cmpsb
cs
pop
je
xor
sbb
decb
mov
jg
roll
cli
jb
int3
mov
mov
aaa
scas
and
mov
sbb
add
add
mov
fdivl
insl
push
mov
jns
push
xlat
push
mov
mov
out
addr16
push
sbb
and
sub
data16
xchg
or
je
cmpsb
pop
sub
ds
sub
cwtl
scas
push
jb
and
mov
or
and
pcmpeqw
xor
inc
mov
xchg
pop
lcall
mov
in
scas
push
jl
cmp
lcall
add
jmp
cltd
dec
lds
or
inc
cmp
jp
jnp
orb
mov
ss
data16
mov
xor
pop
add
les
jne
sbb
xorb
push
or
xchg
add
dec
mov
insl
dec
cvtps2pi
xchg
jle
push
cli
cmp
add
sbb
loopne
je
mov
fcomps
incl
add
add
sbb
pop
inc
jecxz
inc
push
roll
mov
iret
fistl
cwtl
fwait
mov
mov
xchg
sub
add
sub
dec
and
inc
shll
clc
pushf
jmp
xchg
push
xor
inc
or
popf
jp
adc
ror
fwait
out
mov
cmp
in
inc
rorl
rorl
fimuls
jae
xchg
ss
aas
adc
sbb
adc
cmp
xor
and
push
lea
add
les
jnp
out
xor
lcall
adc
pop
mov
shrl
das
shlb
add
dec
mov
loop
xor
notb
push
pop
mov
mov
test
inc
ret
inc
jl
jmp
xchg
lahf
aad
mov
fs
mov
push
ja
xorb
jmp
adc
mov
adc
add
xchg
push
push
mov
daa
test
iret
inc
js
popf
ljmp
dec
into
pop
scas
xchg
inc
inc
nop
ja
lret
lret
lods
leave
jecxz
shll
out
mov
or
xchg
sub
bound
orb
xchg
mov
iret
push
loopne
scas
mov
mov
adc
aad
arpl
jge
xorb
push
call
add
jae
jp
insb
and
push
push
mov
push
pop
shll
call
mov
sub
cmp
sub
pshufw
and
inc
mov
mov
aad
mov
stos
cmpsb
out
hlt
imul
pop
mov
fbld
sub
cmp
shrl
aaa
pop
popf
pop
ret
mov
repnz
in
sti
int
roll
sar
xor
mov
ret
add
add
add
and
or
mov
fwait
aam
push
iret
mov
fbstp
iret
adc
mov
push
jle
add
fadds
in
xor
mov
out
enter
jecxz
mov
aad
mov
pop
in
daa
cmpl
jnp
adc
and
addl
push
xor
jns
push
lock
loop
pop
sbb
push
repz
and
lods
inc
xor
add
add
imul
rclb
mov
vfmsub132sd
js
ljmp
mov
adc
mov
inc
xchg
sub
popa
stos
vdivps
bound
fdivrl
ljmp
xchg
mov
loope
jle
add
out
mov
push
jmp
pop
arpl
icebp
mov
movsl
add
or
xchg
and
mov
imull
in
and
pop
call
fldl
sbb
fdivl
mov
insb
arpl
inc
adc
inc
mov
xchg
js
inc
aas
inc
xlat
jmp
sbb
outsl
mov
loope
cltd
sub
xchg
daa
rcll
fs
icebp
fdivrl
pusha
sbb
bound
dec
test
inc
and
cmpsl
fdivrl
xchg
or
clc
bound
push
push
push
jecxz
pop
sbb
sub
sbb
xchg
icebp
xlat
in
sbb
mov
aad
mov
xchg
scas
gs
dec
mov
xor
addr16
call
ss
fstpt
xchg
or
jno
nop
mov
gs
push
xchg
xchg
xchg
aam
push
rcrl
jnp
icebp
pop
int3
aas
push
jge
out
imul
ja
mov
sub
sbb
push
out
sbb
push
in
in
popf
jge
sti
test
lcall
shll
mov
push
mov
dec
cmp
cmp
adc
rcl
jae
cmc
mov
test
rcrl
cwtl
push
pop
push
jo
mov
fmull
sub
hlt
xchg
int3
ss
mov
frstor
jge
mov
add
and
add
or
les
dec
lds
fisttps
mov
cmp
daa
xor
notb
iret
scas
hlt
ja
daa
cmp
lods
jge
ret
test
mov
xor
repnz
dec
add
pusha
daa
or
mov
cmp
pusha
xchg
insb
cmp
inc
std
movsl
sbbb
add
pop
std
jp
push
jmp
jl
inc
loop
mov
mov
sti
aaa
push
inc
add
cmp
sub
pop
sbb
mov
dec
jl
icebp
or
mov
cs
out
cmc
stos
or
sub
adc
dec
outsb
jg
dec
fldt
lret
mov
push
cwtl
and
xor
pop
xor
cmp
idiv
and
push
push
mov
inc
in
or
pop
lds
add
add
adc
adc
mov
mov
loopne
cltd
inc
sub
inc
push
aam
or
in
dec
data16
andb
adc
jl
pop
xor
shll
or
ds
adc
jp
mov
rorl
xchg
inc
scas
addr16
jo
inc
into
aaa
xor
pusha
test
xor
sub
adc
fistpll
jge
xchg
lret
mov
gs
ret
gs
fldcw
cmpsl
out
sub
ds
int3
out
movsl
add
push
pop
and
ja
data16
and
lea
dec
cmp
into
addr16
pop
and
int3
dec
shlb
sub
pop
adc
mov
mov
into
and
jb
sbb
es
stc
jmp
jp
and
add
push
roll
ljmp
dec
in
arpl
mov
leave
cmp
mov
mov
jecxz,pn
and
mov
mov
divl
daa
mov
cmpsb
adcl
mov
movq
dec
mov
push
adc
or
test
push
cmp
xlat
dec
mov
rorl
ret
ja
push
inc
mov
clc
call
lahf
aas
dec
daa
dec
fldt
push
inc
call
jmp
out
cmpsl
aad
loop
dec
roll
and
mov
mov
mov
dec
mov
test
jno
fdiv
jmp
sti
fcom
adc
xchg
cld
repz
ret
dec
mov
loopne
or
cli
ret
dec
fidivs
cmp
dec
mov
out
or
pop
xor
mov
mov
leave
adc
cli
or
sbb
jg
les
enter
cmp
imul
add
addr16
jmp
loop
loop
jbe
enter
lret
add
add
push
jno
sub
aas
lret
mov
cmp
xchg
popa
ret
xchg
xor
movsb
mov
mov
cmc
mov
xchg
xchg
jo
cmp
leave
and
add
adc
cli
push
les
ss
addl
and
add
mov
mov
mov
jbe
insl
mov
int
in
dec
inc
orb
mov
pusha
leave
subl
lea
in
cmpsb
jnp
or
cmp
rcl
lods
add
repz
pop
cmp
mov
stc
and
ficoml
sub
xchg
loopne
adc
mov
mov
aas
inc
adc
mov
push
mov
mov
add
fildl
pop
inc
mov
jecxz
push
loopne
inc
loopne
inc
push
mov
pop
xchg
out
add
cmpl
sbb
pusha
icebp
js
mov
xchg
sub
dec
xchg
lods
and
rorl
stos
cmp
into
mov
pop
mov
sub
cmc
rclb
and
aas
lcall
push
jb
xlat
cmp
sub
dec
frstor
mov
mov
pushf
xchg
je
mov
shlb
sbb
loope
mov
add
out
hlt
sti
push
out
aas
xchg
jp
cmp
and
mov
in
adc
das
pop
mov
pop
cltd
subb
mov
sbb
flds
call
pusha
pmaxub
nop
ss
mov
icebp
mov
popf
mov
pop
lods
cmp
lock
psubsw
inc
loop
cs
outsb
push
pusha
push
mov
loope
test
sarb
add
add
ficomps
testb
mov
jnp
fiadds
pushl
hlt
sub
adc
nop
fsubrs
sub
clc
in
or
mov
stos
aad
mov
pop
subl
mov
lds
push
push
fwait
lea
icebp
mov
icebp
ror
daa
pop
xchg
in
imul
mov
inc
std
pop
add
add
mov
bound
lret
mov
ret
jle
mov
pop
inc
adc
pop
xor
das
mov
jge,pn
mov
and
mov
cltd
je
pop
das
push
push
les
mov
test
jae
xchg
cmpsl
popf
adc
icebp
dec
push
mov
sub
in
mov
out
sbb
lods
mov
dec
pop
std
addr16
xor
xor
mov
lea
jbe
push
stos
cmp
mov
sub
add
sub
or
add
lds
je
enter
jmp
push
pop
sbb
xchg
lret
loopne
dec
js
stos
xlat
stos
adc
xchg
push
adc
jp
repnz
adc
sbb
dec
and
add
mov
enter
xorl
aad
and
and
sarl
into
mov
jo
mov
xchg
sub
popf
and
xor
add
cltd
inc
cltd
pop
xchg
int3
sbb
ficoml
ljmp
loopne
and
add
jae
push
pop
in
mov
imul
imul
inc
call
xchg
cli
xchg
inc
mov
shll
cmp
aaa
mov
inc
daa
mov
inc
and
es
cmp
negb
sti
adc
gs
gs
push
roll
cltd
or
adc
xor
jl
push
ja
or
cmovs
addr16
lock
adc
cmp
js
out
pop
repnz
cmp
cmp
push
pop
and
fisubs
and
pop
out
repnz
in
insb
add
fisubs
aam
push
xor
cld
dec
mov
nop
mov
adc
inc
mov
and
adc
jno
and
lock
add
mov
lea
sub
pop
imul
fwait
xlat
cmp
jp
stos
nop
outsl
mov
icebp
xchg
jge
jg
adc
jl
popaw
inc
mov
jno
int3
inc
jecxz
push
xchg
cmp
dec
mov
push
dec
pop
shrb
rol
into
ljmp
jno
and
fcoms
imul
pop
loop
scas
loope
sbb
jg
nop
imul
neg
inc
andl
test
jg
cmpsl
add
xchg
ror
dec
mov
jl
repnz
mov
aas
sub
cmp
mov
fisubrs
aas
adc
fnstenv
sub
sti
sbb
mov
faddl
test
sahf
mov
push
dec
sbb
mov
stc
dec
repnz
inc
data16
add
add
cmp
adc
sbb
fwait
sahf
mov
mov
dec
adc
sub
add
movsb
jbe
pop
jg
xor
adc
cs
mov
mov
outsl
or
aas
imul
pop
out
testb
inc
jae
push
shrb
mov
outsl
std
xor
rcr
incl
icebp
lock
xchg
sbb
mov
dec
xor
lods
mov
divl
add
add
cmp
ficoml
add
arpl
cmp
pop
rep
dec
rcrl
mov
ja
mov
repz
shll
dec
add
dec
cs
leave
mov
imul
or
mov
add
lret
cmp
pop
ret
cmp
inc
xlat
mov
fildl
add
jecxz
mov
pop
je
xchg
enter
aad
fcompl
fisttpll
mov
mov
test
arpl
rcrl
into
push
and
lea
in
and
dec
xchg
sahf
jp
test
mov
out
loope
test
lcall
mov
daa
xchg
bound
push
ljmp
lds
out
add
or
jb
mov
cmp
pop
mov
rcrb
lods
mov
fwait
adc
fistps
sub
fwait
or
sti
lods
pop
adc
or
inc
mov
inc
dec
rol
inc
xchg
test
mov
int3
mov
jb
cmp
jg
pop
fmull
push
xchg
lock
ret
mov
push
xlat
repz
and
test
sub
fisubrl
mov
dec
int3
dec
push
adc
add
add
orl
mov
sbb
sub
push
jmp
jl
fists
jecxz
jnp
inc
fistpl
push
insb
cmpxchg8b
movsb
jae
int3
xor
pop
lcall
cmp
inc
iret
push
dec
hlt
inc
lock
cmp
mov
popa
std
pop
mov
jb
jno
lods
sbb
push
jns
aas
mov
sub
lods
add
sub
or
inc
in
cwtl
sub
add
mov
aad
dec
movl
rorl
mov
sahf
lods
sbb
shlb
repz
push
pop
pop
or
lock
cmp
cld
scas
push
ja
fsubrl
aaa
xor
xchg
push
cmpsb
scas
mov
shr
call
jno
add
jp
sub
cwtl
mov
inc
add
fidivs
adc
mov
add
jp
push
lret
push
jecxz
jae
lcall
and
in
xor
ss
push
lea
jmp
jne
or
aam
push
jg
test
inc
fidivrs
das
mov
dec
pusha
mov
dec
sbb
inc
test
adcl
add
jnp
scas
jae
aad
inc
sbb
lcall
xchg
cmc
jo
sbb
mov
add
outsl
lds
ss
cmp
mov
and
sbbl
adc
daa
cmp
out
mov
and
int3
xchg
mov
int3
mov
shr
mov
mov
fnstenv
mov
in
fnsave
roll
mov
push
stos
sub
xlat
sahf
jno
test
mov
mov
ljmp
rcl
adc
ss
icebp
ret
jmp
imul
shrl
nop
xchg
adc
adc
mov
cmp
jmp
mov
lret
mov
mov
sahf
mov
hlt
push
mov
mov
inc
xchg
out
lret
fwait
rcll
stos
insl
in
jmp
pop
cmc
cwtl
mov
filds
mov
mov
inc
mov
out
push
cmp
mov
xor
daa
insb
pop
test
or
sbb
jnp
stos
sti
mov
push
xor
aaa
cmp
push
bound
outsb
fcompl
pop
in
fdivrl
xchg
jp
dec
push
ja
mov
push
mov
sar
bound
lods
mov
test
scas
mov
jbe
mov
push
mov
lea
cmpsl
js
jno
jns
xor
scas
jnp
sub
es
adc
into
fabs
add
add
add
lock
inc
add
sub
mov
in
jp
inc
fwait
xchg
out
mov
inc
cltd
push
push
cmpsl
ret
fndisi(8087
sbb
push
mov
mov
repnz
lds
sbb
add
xlat
mov
lock
sub
dec
mov
inc
fistl
dec
sub
or
loope
rolb
xchg
mov
lahf
push
loope
add
test
dec
rol
jno
xchg
cmp
adcb
iret
aam
aas
loopne
inc
and
cmpsb
inc
inc
inc
ss
sbb
icebp
cs
or
inc
xchg
int3
mov
push
lret
loope
pop
mov
lds
dec
dec
loopne
sbbb
jl
adc
push
xchg
lock
outsl
test
lret
jbe
push
pop
cmp
pop
int
jg
int
addl
xor
and
push
es
call
pop
add
add
ret
icebp
daa
mov
sub
lcall
cmc
or
int3
test
mov
daa
pop
imul
adc
in
sub
add
ret
and
sub
rdpmc
jl
push
fimull
jl
xchg
rolb
mov
sub
fsubrp
mov
inc
xchg
xchg
in
inc
cmp
shlb
cmp
sbb
sbb
sbb
dec
mov
adc
mov
test
les
or
dec
push
sar
mov
test
mov
pop
decb
jbe
inc
outsl
jl
adc
movsb
fs
jmp
js
stos
xchg
inc
push
ljmp
addr16
mov
les
mov
lock
addb
lcall
stc
out
pop
push
lods
push
sub
daa
pop
mov
cmp
add
sub
in
inc
outsb
dec
ds
mov
add
add
cs
mov
xor
fsubp
mov
mov
cld
sub
nop
std
out
fimull
push
cmp
adc
xchg
lcall
cmpsl
cmp
dec
mov
inc
and
mov
pop
lret
in
xor
bound
xorb
xchg
out
ds
loopne
jg
stos
imul
in
bound
or
push
icebp
or
insl
das
and
fsts
add
lahf
add
jnp
outsb
jmp
xchg
call
xor
mov
inc
add
popa
test
or
lahf
inc
jne
mov
sub
int3
xor
movb
in
in
pop
jae
aad
dec
mov
mov
dec
mov
je
pop
push
repnz
cmpsb
mov
call
and
mov
xchg
dec
sarl
add
add
sar
loop
jl
sub
ljmp
fwait
dec
mov
jg
std
out
jb
mov
