push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
xor
mov
movl
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
mov
xor
add
incl
mov
push
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmp
je
mov
jmp
push
call
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
cmp
je
push
call
mov
push
push
call
mov
call
add
cmp
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
call
pop
ret
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmp
jb
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
push
lea
push
push
call
lea
push
push
call
add
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
or
lods
dec
xchg
das
sub
adc
leave
jno
sbb
adc
dec
adc
and
and
jno
test
in
fisubs
mov
ret
sub
inc
aad
mov
jle
dec
jns
xor
test
mov
jg
dec
enter
xchg
ss
leave
in
mov
and
adc
test
dec
sub
push
dec
fnstsw
add
inc
lea
sbb
fisubs
repnz
push
cmc
xor
xlat
inc
add
mov
pop
jo
cltd
sbb
push
push
adc
in
in
add
dec
mov
stos
lahf
loope
add
dec
aad
pmaxub
sub
dec
repnz
out
and
rep
bound
dec
stos
inc
rcrl
in
xor
mov
fmull
add
shlb
and
jecxz
scas
stos
js
pop
sub
enter
sbb
inc
mov
pop
mov
push
in
mov
mov
hlt
mov
les
jp
loope
add
inc
push
cmp
pop
fistl
lret
shrl
mov
jle
add
adc
pop
jge
or
imull
jns
aam
nop
repz
or
mov
adc
jo,pt
pushf
ja
and
add
test
push
dec
popf
and
bound
clc
inc
fidivl
xor
int3
sbb
outsl
mov
sub
xor
outsl
es
stc
and
xchg
mov
out
arpl
xchg
ds
bound
fwait
int
mov
mov
pop
lret
sbb
inc
test
mov
mov
movsl
jo
fadds
leave
imul
jmp
mov
arpl
inc
xor
outsb
mov
xchg
xchg
clc
test
je
jmp
push
in
add
pop
test
or
sub
xchg
push
push
int3
es
iret
nop
data16
jle
adcb
push
fwait
inc
movsl
ficoml
add
lea
adc
sbb
addr16
pop
fdivrp
pop
ret
cmpsl
mov
mov
scas
aad
sub
jg
dec
popf
pop
jg
andl
cld
cli
loopne
sbb
add
outsb
test
push
dec
mov
add
push
or
lret
mov
sub
adc
dec
fiadds
in
in
pop
lds
sub
xchg
ljmp
pop
pop
sbb
fstpl
dec
jmp
in
sbb
lcall
es
push
subl
mov
cmp
jbe
xor
push
mov
cmp
jle
push
push
mov
sub
adc
sar
das
fmull
cmp
mov
cltd
rorl
pop
rcr
xlat
mov
sub
pop
pusha
test
push
push
cmpsl
mov
add
into
sub
add
fisubl
inc
and
mov
sub
add
pop
fadd
fidivl
negl
cmp
je
mov
les
or
cmp
mov
divb
dec
mov
push
xor
fcmove
push
loop
push
in
or
xchg
out
mov
lods
sbb
inc
sub
in
das
scas
inc
xor
xlat
pop
js
sahf
out
adc
mov
pop
add
cmpsl
in
fmull
xchg
fs
jmp
or
push
mov
nop
push
xchg
add
add
nop
shlb
stos
dec
adc
jecxz
int
out
inc
adc
scas
pop
out
out
sub
cmp
or
sub
rcrl
push
dec
xchg
xchg
outsl
icebp
loope
andl
push
rclb
in
insl
xor
inc
jle
inc
scas
push
movsb
mov
int
out
daa
pop
jp
xor
pop
xor
pop
adc
add
push
bnd
testb
and
add
clc
outsb
or
jg
push
cmp
stc
je
xchg
sub
xchg
xchg
sbb
ret
xchg
into
pop
add
sti
xchg
sub
add
sahf
cmpsb
sub
push
jmp
or
mov
pop
das
mov
fwait
xchg
out
and
xor
cmp
stc
int
in
out
ficoms
les
jmp
popa
xchg
push
jns
fcoml
or
lret
pop
cmc
jecxz
mov
mov
mov
jl
pop
test
mov
add
lret
push
cltd
dec
dec
inc
inc
mov
cmpsl
pop
mov
outsb
fists
xor
push
pop
and
imull
add
jnp
movsl
add
sbb
shlb
mov
xor
push
add
fisttpll
xchg
lock
add
cmpl
lcall
bound
adc
dec
push
out
and
call
std
aaa
cmp
pusha
ret
mov
and
pop
push
sub
push
mov
stos
adc
in
out
mov
or
push
out
cmc
pop
mov
aad
mov
mov
adc
jbe
lock
sub
dec
sub
aas
iret
push
xchg
xor
adc
jge
into
cmp
fst
cmc
sub
pop
fldenv
mov
addr16
mov
lret
int3
call
add
hlt
inc
mov
mov
push
push
dec
mov
mov
fld
das
icebp
push
adc
movsl
call
xchg
les
inc
fisttps
or
bound
hlt
mov
mov
mov
cmc
inc
dec
pop
push
jle
je
sub
ret
movsl
sub
testl
xchg
aad
imul
or
gs
and
fdivrl
pop
lahf
xorb
ss
call
and
lods
sub
push
xor
sub
push
mov
and
in
or
rclb
add
add
mov
ret
das
jmp
mov
lds
ficomps
mov
out
das
in
mov
sarb
cltd
xchg
cwtl
mov
fsubr
cmpl
and
pop
int
or
clc
lods
sub
ret
insb
stos
push
push
in
cld
imul
push
dec
dec
sub
in
jnp
iret
popa
sbb
mov
sti
push
leave
mov
mov
cwtl
mov
adc
mov
push
mov
pop
mov
cmp
out
cld
cmp
jb
vmread
add
add
imul
cmc
sbb
lods
sbb
add
clc
loop
xor
ret
jo
sbb
mov
xchg
push
sub
fstps
shlb
sti
or
xchg
adc
mov
jg
sub
pushfw
loopne
pusha
mov
out
imul
in
mov
mov
ret
cmpsb
movsb
test
aas
pop
adc
filds
adc
outsl
and
insb
int3
xlat
lods
sbb
dec
add
xchg
sub
add
loope
mov
scas
add
fs
sub
mov
movsb
inc
jl
icebp
sub
stos
sbb
ss
add
sub
dec
jp
cmc
add
xchg
or
inc
fs
lea
push
inc
mov
and
cmp
jmp
fcmovnu
ficomps
pop
cli
inc
ljmp
fcomip
push
inc
adc
push
or
gs
sbb
loope
lret
jno
cmpsb
les
lcall
mov
inc
adc
aad
cmp
and
add
test
imul
mov
mov
mov
push
xor
push
xor
xor
mov
dec
popf
into
push
cli
test
dec
xchg
push
push
xchg
cmc
aas
inc
gs
ds
jmp
inc
inc
decb
mov
push
testb
outsb
pop
aam
mov
adc
pushf
stos
test
pop
das
negb
jmp
mov
add
mov
push
dec
mov
ret
shr
mov
mov
add
add
dec
flds
jns
inc
repz
or
jb
xchg
add
inc
and
addr16
adc
stc
xchg
aad
pop
outsl
cmovae
mov
jl
fildll
out
inc
dec
xchg
les
in
sti
call
pop
clc
dec
push
mov
int
jno
out
ret
int
xor
or
loop
jae
pop
in
out
xor
iret
incl
sbb
ss
mov
mov
sub
test
shl
int3
stos
cmp
mov
mov
lahf
sahf
xchg
cmp
jae
jp
add
add
and
pop
mov
lret
sbb
xor
dec
scas
xchg
mov
mov
add
xchg
mov
or
gs
pop
out
sarl
or
shll
push
inc
jbe
outsb
pop
test
push
xlat
push
scas
repz
xchg
enter
mov
push
js
mov
arpl
mov
adc
pop
sub
rcll
xor
and
pop
out
mov
cmc
push
pusha
notl
addb
xorl
pop
pushf
lret
cmc
sbb
add
add
jb
jnp
xlat
stos
mov
xchg
ss
insb
ss
xchg
mov
fstpt
add
mov
test
dec
add
mov
test
repz
jo
cs
ror
and
sbb
mov
fldl
mov
push
fisubl
rorb
ret
xor
ja
jmp
movsl
push
hlt
ljmp
xorl
add
adc
xchg
fcmovb
or
cmp
aam
dec
testl
xchg
mov
or
push
mov
add
add
push
stos
popa
dec
movsl
outsb
test
in
xchg
in
fisubl
lods
pop
lret
fwait
inc
call
cmovns
shl
jl
imul
xor
data16
xor
ficoml
stos
fwait
andb
mulb
jl
in
subb
push
mov
pop
adc
xchg
adc
sub
sahf
xor
sub
lds
lock
fisubrs
shlb
inc
sahf
adc
jl
mov
pop
dec
mov
inc
pop
add
add
out
mov
push
lds
imul
cld
aad
jge
hlt
adc
xlat
stc
jl
or
cltd
mov
pop
movsl
es
inc
data16
in
and
or
fiaddl
dec
lds
or
push
inc
fstpt
insl
mov
xchg
mov
rcll
dec
sahf
xchg
pop
inc
daa
and
adc
andb
sbb
xor
scas
cmc
push
mov
mov
jl
stos
stos
push
xchg
iret
adc
mov
pop
movsb
add
cmp
xchg
xchg
jno
sbb
int
push
rdtsc
jae
aad
dec
cmp
fucomp
inc
adc
mov
pop
out
lcall
sub
xor
cli
iret
test
dec
loop
mov
jns
popf
sbbb
inc
mov
sub
out
inc
or
js
or
pushl
gs
cmp
cmp
out
mov
add
fistps
mov
xchg
aam
jo
inc
movsl
inc
fisubrl
lods
sub
cs
push
inc
mov
pop
pop
xchg
in
cmpsl
mov
shlb
mov
mov
sbb
cmp
lret
mov
xchg
test
maskmovq
testl
and
mov
int
mov
pop
sbbl
test
out
jns
and
cmp
dec
in
or
or
inc
adc
hlt
iret
or
ret
jp
cmp
mov
or
stos
es
pop
es
js
dec
mov
mov
pop
jne
sbb
and
pop
clc
mov
loop
popf
cli
lds
in
icebp
xorl
jbe
adc
inc
stos
clc
lahf
out
orl
inc
dec
addr16
pop
xchg
jns
enter
es
gs
loop
lods
gs
cltd
inc
push
ljmp
in
push
cltd
dec
and
or
loope
jno
push
dec
rorb
and
inc
shll
xchg
stc
fnstenv
out
fdivrs
xor
call
xchg
pop
enter
cmpsb
jmp
in
sub
mov
mov
test
rcl
jge
add
test
test
or
jl
cwtl
cmc
inc
stos
loop
pusha
add
lcall
dec
mov
lahf
imul
add
sub
lea
ret
mov
adc
movsl
and
fs
rol
ds
mov
ja
jp
lods
pop
pop
or
ss
jl
int3
sbb
xor
xchg
adc
out
in
roll
aam
jle
test
dec
push
mov
mov
pop
mov
and
jmp
loopne
add
inc
mov
dec
imul
mov
xor
cmp
insb
cmc
ss
lods
int
movsb
sub
std
out
lods
mov
aas
sub
adc
jns
sub
dec
fdivrl
push
or
pop
inc
xchg
cld
fcompl
or
lcall
test
jb
mov
cmp
addr16
sbb
jbe
push
sarl
xchg
mov
in
cmp
xchg
xchg
or
iret
or
popf
cmpsb
mov
push
mov
fwait
or
iret
shl
mov
xchg
call
in
outsb
xor
std
fidivrl
pop
jge
stos
pop
lahf
sti
fs
dec
or
push
clc
jecxz
aam
inc
mov
cmc
ficompl
sbb
outsl
es
jg
mov
cli
jnp
dec
mov
std
rorb
inc
add
mov
sbb
mov
add
lcall
cli
and
or
lods
outsl
pop
sub
rcll
mov
mov
and
lcall
test
push
cmp
mov
test
into
pop
add
test
adc
loop
inc
cwtl
in
xor
dec
repnz
jmp
rorb
cmp
ja
imul
fstpt
test
cmpsl
jg
or
jge
add
and
inc
popf
mov
fmul
popf
mov
in
mov
cltd
mov
push
out
movsb
fnstenv
push
xor
insb
xchg
pop
mov
and
fsubrs
or
jb
mov
xchg
pop
sbb
inc
aaa
inc
fwait
test
je
loop
and
fxch
mov
and
pushf
mov
add
std
sbb
xchg
cmp
in
aas
sahf
iret
add
stos
clc
jmp
dec
fistl
mov
pop
mov
stc
jp
fstpt
mov
movb
pop
add
popf
aaa
push
lods
vmulpd
jl
mov
push
std
insl
fisubrs
mov
insl
shrb
cmp
inc
pop
xchg
dec
push
fnstenv
icebp
or
loop
sub
test
add
repz
sub
lods
std
mov
xor
sbb
xchg
icebp
test
pop
pusha
call
repz
popa
ret
scas
xchg
jae
cmp
xchg
sub
iret
mov
cmp
xchg
fldt
or
in
xchg
je
jmp
push
sbb
xlat
sarb
xchg
mov
jb
mov
loop
xchg
dec
pop
mov
fadd
ja
fisubl
ss
pop
push
sub
pop
jmp
mov
push
inc
idivl
mov
dec
jb
rol
hlt
shrb
shrl
andl
add
out
dec
sub
jne,pt
stos
insl
pop
adcb
push
and
mov
addl
jne
xor
stc
and
and
fistl
gs
sbb
insb
fs
and
xlat
mov
xacquire
or
xor
fisubs
adc
xchg
les
xor
jp
mov
cli
sbb
adc
jl
test
jg
jle
mov
pop
arpl
frstor
lea
aaa
sbb
sarl
and
xor
add
mov
roll
sbb
mov
mov
sar
ds
clc
mov
push
mov
xchg
jmp
out
fcoml
pop
xlat
sub
inc
loope
repz
cltd
clc
test
xor
popf
cltd
cwtl
int3
inc
adc
or
testb
shll
dec
xchg
shlb
xchg
fadds
mov
jmp
or
ret
xchg
sub
fsubr
test
add
shl
pop
pop
in
xchg
outsb
mov
push
pop
sbb
add
fdiv
xor
and
mov
cmp
outsb
xor
cmpb
fwait
xor
jae
nop
int
jp
mov
jmp
mov
insl
call
data16
stos
pop
es
fnstsw
jb
test
xchg
mov
adc
shrb
pop
xor
repz
adc
xor
ja
aad
cmp
icebp
imul
mov
cmp
jo
ret
cmp
adc
cld
pop
push
pushf
mov
xchg
loopne
inc
xor
or
dec
aam
and
sub
loopne
push
cltd
push
jmp
xor
js
out
sbb
push
shl
mov
or
stos
das
dec
fidivl
imul
push
dec
sub
jno
xor
and
xor
xor
push
pop
jmp
sahf
jne
das
sbb
dec
icebp
fnsave
cld
cld
dec
inc
xchg
out
inc
iret
js
sub
in
jo
mov
mov
leave
dec
sbb
jnp
js
mov
pop
and
xor
shl
add
add
cmp
jle
or
add
add
pop
dec
cs
shlb
cmpb
mov
lret
sti
mov
nop
popa
lret
or
and
mov
ss
mov
fsub
jg
into
push
dec
ljmp
mov
mov
pop
sbb
and
repnz
jecxz
fstl
and
imul
int3
insb
lcall
dec
lea
aad
mov
fisubl
popf
dec
jb
clc
test
push
mov
jmp
lahf
and
add
push
mov
sahf
cwtl
adc
cmp
idivb
and
adc
xchg
mul
dec
addr16
jne
add
jecxz
mov
aas
jne
pop
dec
pusha
mov
adc
adc
repz
je
in
pop
mov
cmpsl
test
jo
stos
sbb
mov
cli
or
and
aam
icebp
dec
lret
enter
ficompl
pop
insb
iret
and
mov
push
and
mov
out
in
imul
movsl
lock
push
lcall
xchg
adc
outsl
movsl
sub
dec
pusha
setg
popa
mov
or
and
add
js
outsb
mov
lods
mov
outsb
xor
dec
popa
lret
lret
test
adc
arpl
fwait
cmp
add
xor
daa
out
stos
inc
jle
in
clc
ss
xchg
xor
ljmp
stos
popa
insb
out
orb
jbe
push
cmp
sti
jb
sub
call
rol
xlat
and
add
mov
cmp
push
pop
cmpsb
add
mov
pop
in
sbb
shrl
pop
andb
push
faddp
rclb
popa
in
push
pop
adc
add
add
cmp
xor
fnstsw
xchg
inc
pushl
xchg
dec
sub
repz
add
pop
enter
aas
in
adc
outsb
pop
frstor
in
imul
xchg
nop
fdivrs
lret
leave
pop
jno
xor
mov
repnz
movsl
adc
push
fucomi
sbb
inc
add
scas
dec
repnz
mov
or
xchg
pop
dec
rcrl
mov
sbb
ja
adc
into
push
cmc
fs
scas
sbb
cvttps2pi
adc
fiaddl
add
and
add
mov
nop
testb
dec
cmp
fs
rorb
mov
mov
lock
mov
jne
inc
repnz
xchg
add
and
in
and
xor
sub
int3
fisubs
xchg
dec
leave
add
adc
lds
xchg
inc
push
jae
hlt
sub
out
repz
mov
jmp
cmp
ljmp
adc
push
out
outsb
lret
repz
mov
push
stc
and
insl
in
sbbb
mov
and
ss
cmp
mov
xchg
pop
xor
xlat
adc
bound
add
js
insw
add
repnz
ja
mov
icebp
xor
pop
arpl
div
loope
rcrb
out
bound
adc
ljmp
ljmp
lret
adc
xor
mov
or
sbb
pmaddwd
in
mov
jbe
in
mov
and
jbe
mov
xor
out
adc
mov
jae
repnz
lcall
int
iret
test
jae
add
push
std
push
popa
jns
outsl
cwtl
sbb
lea
cs
lock
push
in
cmp
push
and
stos
sbb
shl
mov
sti
add
lock
pop
xchg
mov
rolb
fs
scas
das
push
mov
frstor
adc
gs
cmpsl
popf
xchg
pop
lods
shrb
addl
loope
sbb
mov
or
and
sub
pop
dec
in
xor
icebp
insl
mov
in
lods
cmp
pop
mov
cmpb
push
aas
mov
sbb
adc
or
cmp
jmp
rclb
ret
push
fldcw
aad
push
lods
aas
imul
mov
mov
enter
mov
fadds
cmpsb
and
and
mov
cmpsb
ficompl
mov
insl
and
pop
dec
out
add
stos
mov
adc
pop
ficomps
sub
jbe
sbb
or
xor
stos
push
adc
into
sub
pop
stc
and
xor
adc
mov
sbb
pop
sbb
xchg
pop
cmc
mov
jl
add
outsb
movsb
sti
in
rcll
rolb
test
mov
add
push
cmp
daa
stos
jl
lock
mov
das
movntq
cmp
add
dec
movsb
pushf
repz
xchg
and
inc
add
flds
out
mov
add
lods
loope
aad
mov
xchg
add
loopne
rclb
xchg
cmpsb
clc
lcall
push
cmp
enter
aad
sbb
out
outsb
pop
in
pop
pop
mov
pop
adc
out
add
or
lcall
orb
inc
dec
loopne
inc
js
sub
int
add
add
xlat
data16
add
lea
movsb
mov
nop
push
adc
rcl
adc
sar
push
xchg
lods
ljmpw
xlat
jmp
loope
andl
test
jns
out
sbb
or
sbb
js
lcall
and
test
fbstp
mov
subb
shr
mov
pop
push
stos
or
xchg
fwait
xor
jl
dec
fidivrl
jno
call
dec
mov
cwtl
add
jae
fadds
stos
add
mov
jmp
adc
movsb
mov
dec
bound
dec
xor
push
xchg
cmp
outsl
inc
add
mov
push
xor
ret
notl
xchg
pop
lock
nop
orl
outsl
jg
mov
mov
loope
pop
shlb
scas
mov
mov
aad
xchg
subb
idivb
sar
pop
jns
ret
ds
stc
int3
insl
xor
cwtl
addr16
mov
cld
dec
movl
fcompl
dec
mov
data16
mov
lods
jl
outsl
cmpb
out
push
rol
test
xchg
add
mov
add
cld
xor
out
out
mov
lea
or
daa
fildll
xchg
mov
sti
stos
add
les
jno
cld
dec
cmp
sahf
lods
shrl
in
je
dec
mov
push
stos
lret
pop
pushf
in
rolb
outsl
mov
je
pop
add
cld
xor
imul
icebp
pusha
sub
pop
out
dec
inc
mov
icebp
dec
lcall
popf
mov
movsl
sbb
sub
push
xchg
or
cwtl
popl
add
ret
int
push
outsb
ss
mov
rcll
pop
out
or
stos
pop
stos
repnz
jl
mov
int
rolb
nop
mov
and
mov
addb
subb
push
push
jns
ds
call
push
mov
adc
pop
inc
movsb
scas
out
out
test
hlt
add
mov
mov
loope
mov
mov
lods
xlat
jmp
cmp
bound
jae
inc
jg
xor
out
push
aam
jmp
in
clc
sub
movsb
shrd
das
in
mov
add
sub
adc
mov
mov
and
nop
cmpsl
mov
jne
cltd
xor
test
cmpsl
xchg
loop
je
popa
pushl
fcompl
pop
push
bound
lret
sbb
dec
pop
mov
fnstenv
pop
sbb
sbb
pop
rorb
jmp
je
jbe
aaa
inc
xchg
leave
cmp
jno
in
jl
sub
arpl
inc
push
xchg
jp,pt
mov
inc
test
mov
in
sahf
dec
dec
cmp
and
clc
fdivrp
dec
repz
loop
stos
ror
movsb
lahf
clc
sti
shlb
cmp
sahf
pushf
mov
popa
imul
dec
lcall
cmp
test
push
decl
add
and
push
cwtl
xor
inc
in
and
mov
aas
fistl
cmp
adc
mov
xor
or
or
mov
mov
aaa
xor
mov
add
jg
pop
push
pop
pop
enter
or
imul
iret
shr
add
fildl
add
xchg
and
fwait
jmp
fistps
mov
mov
push
inc
jbe
ja
icebp
int
cmpsb
aam
mov
jl
lret
cltd
dec
out
in
fistpl
pop
in
rcrl
hlt
dec
sbb
mov
pop
test
outsl
push
loope
jg
xor
inc
lods
sahf
sub
jae
xchg
pop
fstps
andl
xchg
sbb
add
pop
pop
adcb
push
sbb
ljmp
pop
xchg
les
push
imul
add
popf
mov
lret
ss
leave
dec
xor
outsl
fstpt
rolb
sub
repz
pop
ss
popf
or
mov
inc
xlat
xchg
mov
mov
mov
jae
mov
inc
mov
addr16
loopne
data16
dec
into
jns
mov
cmp
push
aaa
pop
adc
lock
jge
test
enter
loop
push
pop
sbb
pop
stos
cli
mov
add
inc
mov
divb
sarl
pushf
push
jp
orl
repnz
ret
scas
jl
ficoml
sub
mov
into
testb
adc
lods
mov
jb
into
push
loop
imul
mov
sub
outsl
fs
sbb
mov
add
lret
mov
jne
shl
enter
xchg
cld
lret
enter
loop
and
xchg
andl
pop
lock
mov
jo
dec
push
ret
rdmsr
push
dec
dec
fdivp
scas
pop
add
popa
jno
fadd
dec
shlb
inc
out
fndisi(8087
roll
daa
or
stos
into
rcll
jb
les
jno
das
stc
popa
push
pop
jp
movsb
jnp
sub
idivl
ja
cmp
out
push
push
lahf
incl
add
sub
movsl
sti
in
pushf
test
xor
sbb
in
add
jae
stc
das
or
add
cld
js
outsb
pop
push
adc
into
inc
xor
in
in
pop
fsubl
or
movsl
in
jl
scas
repnz
lret
inc
cs
inc
cmp
push
test
and
push
fstl
pop
cli
sarb
sbb
sbb
sub
or
mov
sbb
mov
pop
ficoml
pushf
mov
and
sub
mov
cmpsb
cmp
sub
and
ss
sub
popf
pop
mov
add
add
or
mov
mov
inc
shll
sub
jno
std
mov
imul
push
call
add
pop
mov
mov
jbe
in
rcll
ffreep
mov
mov
insl
es
and
cmc
sbb
push
sub
jo
pushf
daa
xchg
mov
mov
fstps
dec
push
add
aaa
adc
and
xor
sub
cmp
push
outsl
ffree
je
outsl
sbb
add
adc
push
adc
lock
sti
das
push
ss
frstor
pop
clc
sarl
pop
and
imul
xchg
cmp
sarl
jge
inc
sbb
push
pop
xchg
mov
stos
or
pop
or
pop
push
incb
jb
lods
cmp
xchg
leave
push
lods
fldenv
jecxz
pushf
cli
jo
lcall
data16
add
jo
adc
push
sahf
add
xchg
jg
mov
outsl
jg
test
sbb
adc
mov
xor
inc
lea
popa
mov
mov
call
out
pop
je
inc
aaa
icebp
mov
aas
add
dec
sbb
push
cmp
cltd
xchg
xor
pop
sub
dec
hlt
or
loopne
mov
repz
movsb
mov
icebp
pop
push
into
push
