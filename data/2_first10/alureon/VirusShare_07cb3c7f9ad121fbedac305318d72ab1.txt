dec
sbbl
jmp
push
outsl
jno
inc
or
mov
fimuls
mov
push
mov
mov
sub
call
dec
inc
call
call
dec
add
or
call
call
lea
add
imul
sub
dec
dec
add
and
lea
movsbl
dec
call
dec
push
inc
dec
and
call
lea
movzbl
call
dec
sub
dec
dec
or
lea
mov
dec
dec
pop
sub
add
xor
add
lea
pop
mov
dec
pop
dec
inc
dec
sub
pop
lea
mov
dec
dec
dec
dec
and
lea
pop
movzwl
add
pop
dec
inc
mov
inc
xor
call
lea
imul
inc
dec
ret
dec
inc
push
and
lea
push
mov
inc
push
add
dec
push
dec
or
push
lea
mov
mov
inc
inc
push
inc
ret
push
dec
push
and
lea
push
imul
inc
push
dec
call
pop
ret
jmp
and
xor
lea
mov
inc
inc
inc
add
dec
or
lea
imul
sub
dec
inc
dec
jne
sub
mov
sub
lea
pop
imul
inc
pop
add
dec
pop
inc
and
lea
mov
add
dec
add
inc
xor
lea
mov
add
ret
push
dec
sub
dec
add
add
lea
mov
dec
push
push
push
push
dec
dec
inc
push
xor
lea
mov
sub
sub
add
dec
sub
lea
mov
mov
push
sub
dec
xor
sub
dec
push
sub
lea
push
mov
inc
pushl
add
call
dec
add
sub
add
lea
imul
add
inc
sub
pop
ret
lea
mov
movzwl
dec
inc
dec
inc
dec
add
lea
imul
mov
inc
dec
cmp
jb
dec
mov
dec
add
xor
lea
mov
xor
inc
inc
pop
dec
inc
test
jbe
sub
lea
movsbl
inc
dec
dec
add
xor
lea
imul
inc
dec
inc
add
or
lea
movzwl
inc
inc
add
add
add
or
lea
and
dec
mov
add
dec
movzbl
inc
and
add
lea
movswl
and
dec
inc
mov
sub
dec
mov
xor
lea
mov
mov
inc
mov
sub
dec
sub
sub
lea
imul
dec
jne
inc
mov
sub
inc
dec
sub
lea
mov
dec
dec
dec
inc
mov
add
lea
mov
inc
dec
inc
inc
xor
mov
lea
mov
test
jbe
add
add
sub
sub
add
lea
imul
dec
dec
sub
sub
add
lea
mov
dec
inc
add
inc
sub
sub
lea
mov
and
dec
dec
mov
inc
dec
movzbl
sub
lea
add
mov
add
and
dec
dec
mov
dec
xor
movzbl
lea
mov
mov
dec
dec
mov
dec
inc
movzbl
or
lea
add
mov
dec
and
inc
sub
movzbl
add
jmp
push
call
inc
xor
inc
or
xor
lea
imul
inc
dec
add
inc
inc
inc
xor
sub
lea
shl
mov
inc
xor
sub
inc
add
add
lea
mov
push
dec
inc
add
call
inc
pop
add
lea
mov
inc
inc
inc
add
and
cmp
je
lea
inc
imul
sub
add
add
sub
dec
xorl
dec
and
ret
lea
mov
inc
inc
add
inc
pop
add
ret
push
lea
imul
sub
dec
inc
push
dec
xor
push
lea
push
mov
push
inc
add
inc
dec
and
lea
mov
inc
dec
call
dec
push
sub
push
xor
pop
lea
movzwl
mov
add
sub
mov
sub
add
inc
xor
lea
dec
je
mov
add
inc
dec
sub
add
lea
mov
inc
mov
inc
sub
mov
inc
add
lea
imul
repnz
inc
add
add
add
jmp
add
and
lea
mov
add
sub
add
add
xor
lea
mov
add
inc
add
sub
xor
pop
pop
jmp
ret
push
lea
mov
dec
add
dec
dec
and
lea
mov
dec
inc
inc
inc
add
lea
movsbl
sub
dec
inc
add
sub
lea
mov
inc
dec
add
add
or
pop
ret
sub
lea
mov
movswl
dec
mov
inc
add
mov
inc
xor
mov
lea
movsbl
xor
dec
inc
mov
inc
sub
inc
and
lea
mov
add
dec
dec
cmp
jb
sub
push
sub
lea
push
movzwl
dec
push
inc
inc
mov
dec
or
xor
lea
mov
xor
dec
sub
xor
dec
inc
push
sub
lea
xor
add
mov
inc
dec
mov
add
add
movzbl
lea
dec
inc
add
add
dec
add
and
lea
movzbl
inc
inc
inc
dec
and
lea
movswl
inc
add
add
mov
dec
dec
sub
lea
mov
dec
cmp
jb
dec
xor
inc
inc
mov
sub
jmp
popf
cmp
adc
mov
mov
arpl
or
xchg
enter
out
pop
push
pop
push
mov
sar
fildl
es
rcrb
mov
fadds
or
push
sbb
add
mov
fprem1
jb
jecxz
or
mov
push
sbbb
or
ja
mov
add
pop
cli
sub
in
dec
cmp
jno
mov
and
add
push
rcr
lds
and
mov
mov
cli
hlt
out
rol
dec
sbb
adc
insb
add
lods
mov
aad
mov
stc
mov
inc
xchg
stos
rcll
pop
test
or
dec
push
lock
out
mov
mov
pop
ss
mov
xchg
push
dec
mov
nop
jge
mov
mov
aam
ss
jno
iret
lea
and
imull
loope
push
jb
imul
adc
mov
inc
scas
sbb
call
outsl
fistpll
mov
dec
xlat
xchg
adc
pop
and
cmp
cmpsl
or
inc
int3
mov
loope
jecxz
push
jo
outsl
sub
lock
mov
cli
jmp
in
xchg
pop
aaa
mov
lret
pop
fsubr
sti
fs
in
pop
aas
scas
push
sahf
clc
enter
inc
movlps
test
jp
sbb
je
sub
push
xor
jbe
mov
add
les
fsts
mov
lds
mov
mov
adc
mov
rcrl
or
cs
cmp
jp
or
jo
fwait
out
or
pop
pop
lock
sub
cwtl
cmp
fistpll
mov
push
sti
push
jecxz
sub
inc
adc
mov
inc
mov
fldenv
inc
movsb
add
aad
das
pop
or
dec
clc
xor
dec
imul
scas
mov
adc
pop
outsl
negb
ret
xor
jg
dec
jnp
mov
dec
mov
xchg
rcrb
sbb
and
cli
or
and
mov
sbb
outsl
dec
testl
icebp
popa
movsb
jge
cmp
push
cmp
lds
arpl
ljmp
mov
repz
and
pop
mov
scas
xchg
lds
cmp
inc
cmp
sub
push
stos
cmp
adc
sub
imulb
jb
xchg
icebp
push
aas
outsb
inc
pop
lea
fldl
cmp
mov
dec
sbb
dec
xor
stc
cmc
pushf
and
push
arpl
stc
or
sahf
imul
nop
push
adc
dec
lds
pop
xchg
xchg
ret
addr16
arpl
mov
push
and
movsl
lcall
jns
stos
cli
or
insl
push
xchg
pop
cwtl
and
mov
cld
repnz
cmp
dec
pop
stos
mov
dec
je
push
sub
ret
xchg
shlb
lret
stc
lahf
push
pop
fnstcw
and
pop
clc
or
and
mov
stos
scas
sub
js
jbe
add
fiaddl
mov
sub
aam
test
mov
add
mov
and
ret
sub
das
repz
mov
fimuls
cltd
and
std
mov
stos
rorb
sub
lret
pusha
into
cwtl
xchg
in
push
pop
cs
and
into
scas
mov
adc
pop
mov
inc
hlt
or
mov
mov
or
lret
fmuls
inc
hlt
je
and
fldcw
lcall
test
push
mov
mov
jne
xchg
mov
mov
cmp
sub
xchg
stos
push
loopne
rol
addl
cltd
push
enter
ljmp
jle
adc
cmp
arpl
push
mov
std
adc
jge
stc
dec
mov
addl
pop
out
hlt
add
ret
dec
iret
mov
in
sarb
movsl
add
mov
mov
pop
lock
popf
rorb
into
fldenv
nop
scas
sbb
dec
ja
add
xchg
add
inc
mov
jnp
in
jge
enter
xchg
mov
jle
mov
cli
adc
or
andb
test
or
movl
mov
int3
shr
pop
popa
nopl
andl
sub
inc
out
or
fstl
aad
into
xchg
mov
mov
cmp
pop
int3
fdivr
pop
cli
inc
loopne
pop
hlt
mov
sar
into
mov
xor
cmp
movsl
lods
pop
ret
push
lock
mov
mov
xor
jns
pop
dec
sbb
daa
or
cmpsb
sbb
sbb
xor
mov
out
fs
orl
adc
cmpsb
pop
icebp
repnz
gs
jge
jmp
dec
test
test
aaa
adc
outsl
xchg
or
pop
mov
repnz
push
lods
test
jmp
aas
movsb
cmp
sahf
in
mov
je
sub
jo
dec
push
jmp
loope
jno
stc
mov
xchg
js
rcrb
pop
mov
mov
cli
adcl
call
xor
jle
pop
cmp
into
pop
fwait
lcall
and
push
loope
add
cmpsb
xchg
cmp
fcompl
int
mov
ret
fs
add
pop
cmovs
clc
push
or
mov
fsubl
in
test
movswl
arpl
cli
dec
add
dec
dec
icebp
dec
xor
test
cmpsb
shr
inc
sti
sti
cltd
bswap
imul
lret
sbb
fwait
or
cmp
xor
and
add
push
into
filds
and
subl
jb
stos
push
xchg
lret
stos
aam
xchg
mov
xor
mov
out
xchg
movsb
stc
jae
sbb
jl
repnz
in
aam
popf
dec
mov
div
xlat
xchg
les
xchg
mov
jp
xor
xchg
xor
fnsave
orb
clc
adc
nop
fdivl
push
insb
jns
fcmovne
loopne
loope
fwait
stc
repz
sub
pop
mov
mov
push
ss
mov
push
push
gs
sub
add
fcmovnu
xchg
fwait
or
sbb
cwtl
int3
or
pop
cs
ja
shll
jo
shll
push
mov
stos
xchg
mov
mull
xor
add
dec
sub
fiadds
mov
in
bound
jb
fldenv
test
aaa
jge
cmp
mov
sbb
add
lcall
mul
pop
cld
push
cmp
mov
aaa
and
mov
fwait
into
sub
mov
fwait
bound
addr16
mov
out
push
in
fldl
adc
cmpb
push
xchg
rclb
pop
sbb
jne
or
or
leave
mov
xchg
add
out
pop
and
push
mov
jae
fsubrl
inc
cs
adc
das
gs
in
int
cmp
mov
xchg
fdivl
fdivrl
out
pop
jns
mov
lods
cmp
jnp
mov
sub
mov
pop
and
sbb
and
popf
out
sbb
icebp
stos
jne
movsl
loopne
scas
cmpsl
aad
addr16
ficompl
lret
gs
mov
push
out
adc
pop
add
xchg
out
imul
sbb
stos
xor
add
fdivrl
or
push
cmp
mov
in
jecxz
pusha
mul
inc
mov
mov
andl
vpand
push
dec
and
xchg
mov
les
rcr
movsb
dec
in
cld
pusha
xchg
test
push
cmp
or
xchg
call
daa
jge
lock
out
jnp
out
adc
sub
ffreep
loope
sub
push
and
pop
mov
mov
lds
mov
sub
sbb
inc
add
je
jle
xchg
xchg
inc
mov
repz
das
pusha
faddl
je
les
and
mov
rclb
loopne
addr16
movsl
rcl
leave
lods
push
arpl
or
dec
jb
test
mov
pusha
mov
imul
insb
push
je
add
mov
jl
or
loop
sbb
mov
loop
rcl
inc
movl
xor
ljmp
sub
push
pop
sbb
into
ljmp
jp
dec
sub
cmp
loopne
nop
cli
xlat
inc
int
stos
push
xchg
aad
add
xor
dec
test
xor
adc
push
scas
les
outsb
mov
ss
icebp
jmp
popf
outsb
xchg
dec
pop
test
xchg
mov
leave
test
xor
lds
push
jae
add
fnstsw
scas
xchg
enter
dec
mov
sbb
xchg
fdivr
lahf
imul
addr16
jns
sahf
movsb
push
adc
pop
mov
lock
lcall
jnp
cs
mov
push
out
daa
call
orl
sbb
cmp
insb
lods
imul
jle
jae
mov
ja
jmp
and
in
cmp
mov
jmp
mov
and
arpl
adc
mov
push
dec
std
pop
push
dec
notb
mov
jmp
or
shr
sahf
add
ja
mov
jmp
sub
hlt
push
jp
ss
mov
jge
imul
xlat
out
mov
push
sbb
aad
aaa
ljmp
push
iret
ljmp
mov
ficomps
jle
jecxz
shrb
ret
or
jge
cltd
in
dec
cmp
clc
call
test
cs
xlat
sub
lock
xor
and
pop
mov
or
jle
push
xor
fisubl
imul
mov
hlt
xchg
mov
or
mov
jno
mov
cmp
daa
out
push
ljmp
daa
sbb
or
mov
sub
gs
push
jp
pop
lret
icebp
pop
dec
out
idiv
xchg
mov
pop
or
outsl
lea
lcall
sub
adc
fistl
jb
or
das
push
lods
add
xor
nop
or
dec
jne
js
adc
inc
cmc
repnz
iret
out
mov
jno
xlat
psubq
mov
mov
aaa
stc
aad
inc
lahf
cmpl
cmp
and
dec
loop
call
dec
cmp
dec
aad
inc
movb
jo
fidivs
out
cmp
dec
out
loop
sbb
cmpl
nop
movsb
jns
and
loope
out
adc
into
add
push
dec
cwtl
mov
in
jecxz
iret
lret
lds
stos
inc
jne
fiadds
pushf
dec
mov
sub
pop
sub
push
push
xchg
xchg
or
int3
or
sbb
push
dec
mov
xor
insb
adc
pop
pop
out
les
mov
lahf
sbb
pop
in
call
sub
aad
fstps
ret
pusha
dec
les
in
pop
insb
jg
xor
cmpsl
popf
dec
fld
xchg
push
cmp
dec
xchg
int3
pop
daa
fisttpl
xchg
sbbb
rcll
cli
fsubs
shll
into
call
insb
enter
fdivrl
mov
out
pop
push
cmp
aam
push
pop
fldcw
xchg
inc
push
fnstcw
xchg
cld
inc
mov
aam
adc
add
xor
xchg
clc
out
daa
call
test
adc
cmp
mov
or
adc
xor
pop
cmc
jo
jns
jle
out
dec
xchg
mov
and
xor
lods
push
scas
mov
mov
fsubl
and
in
fldcw
mov
bound
fs
pushf
js
inc
inc
out
call
aad
xchg
pushf
sub
ljmp
imulb
sahf
lods
sbb
daa
inc
pop
mov
mov
push
sbb
add
xor
push
sbb
sbb
jnp
mov
pop
xchg
mov
pop
pushf
xor
adc
xchg
lods
pop
cwtl
lcall
mov
adc
jne
xor
lea
xchg
mov
scas
mov
test
jmp
xchg
mov
sub
mov
outsb
int3
xchg
jo
jae
pop
sbb
inc
ficoml
enter
cmp
subb
xor
js
push
cmpl
dec
sbb
clc
sub
dec
push
cmp
and
lea
xlat
add
push
adcl
jnp
fmulp
es
stc
les
aam
sub
cmc
adc
xchg
pop
int3
dec
xchg
movsb
dec
pusha
je
out
adc
cltd
xlat
sbb
lret
imul
ja
icebp
xchg
jo
xor
lahf
cmp
push
xor
adc
push
xchg
repnz
ja
adc
and
std
add
mov
scas
push
arpl
mov
mov
mov
fcompl
jns
jge
cld
dec
cli
push
pop
lock
int3
push
jb
adc
xchg
jmp
inc
push
or
cmp
popf
jno
lock
rolb
lret
jnp
mov
in
inc
mov
pop
fsubl
scas
mov
mov
mov
inc
sub
movsl
stos
add
stos
sub
mov
daa
xor
in
jmp
lods
movsl
gs
test
fnstenv
xchg
mov
xchg
sub
aad
negb
popf
ss
test
jmp
pop
loope
data16
mov
push
sub
out
int
mov
mov
scas
outsl
xchg
add
fstpl
mov
push
in
lods
pusha
test
jge
jnp
addr16
pop
gs
cltd
mov
addr16
sti
sub
jb
push
push
pop
pop
movl
lcall
cmc
std
test
sti
lahf
daa
xlat
bound
or
jecxz
int
out
scas
push
cli
arpl
push
addr16
subl
decl
js
jae
mov
sub
push
lock
lahf
xchg
xchg
mov
xchg
mov
xchg
push
call
xor
add
repnz
and
scas
ret
sbb
cmc
popa
jno
and
scas
inc
pop
sbb
jne
jg
ss
mov
mov
pop
push
sbb
inc
in
divb
mov
jmp
icebp
cmp
sub
push
pop
subb
inc
push
cmp
int
mov
rclb
xchg
mov
mov
sbb
rcrb
xchg
jle
stc
push
les
in
arpl
in
pop
stc
cmpsb
jecxz
dec
mov
xor
fnstenv
sahf
dec
out
jle
xchg
in
adc
adc
ss
into
scas
push
idivb
xacquire
pop
popf
jl
jnp
push
pop
aad
push
mov
mov
std
sub
inc
mov
push
out
sahf
cmp
pop
mov
push
mov
lahf
mov
mov
fsubl
daa
push
out
inc
sbb
mov
push
mov
cs
pop
add
xchg
test
mov
push
add
test
mov
and
xchg
shlb
xchg
inc
sub
cmc
or
cmp
out
pusha
dec
mov
jns
mov
fcmovu
insl
mov
insb
hlt
ret
push
jne
in
pop
cmc
clc
cmpsb
aaa
clc
jae
iret
repz
ljmp
dec
dec
bound
jmp
mov
push
adc
jg
xlat
das
addr16
cmp
into
mov
mov
shlb
add
add
call
lods
lret
in
mov
add
adc
scas
mov
dec
rcrl
mov
and
or
push
inc
cwtl
enter
dec
mov
mov
pushf
movsl
cwtl
cwtl
xlat
gs
jo
jmp
das
cmp
pop
and
clc
cmp
or
aaa
mov
mov
mov
hlt
insl
jne
idiv
cmp
push
mov
push
mov
xchg
mov
call
in
inc
mov
pop
imul
cmc
cmp
imul
out
mov
jne
js
mov
dec
mov
enter
jp
insl
data16
mov
jg
insb
sub
xor
sub
fcompl
repnz
insl
pusha
jno
fchs
push
fdivs
pop
data16
inc
mov
or
push
scas
call
mov
adc
push
repnz
push
outsb
push
sub
aaa
adc
push
dec
mov
test
cmp
rorb
dec
mov
mov
call
sbb
pop
sbb
test
lea
sbb
adc
and
jbe
adc
scas
subl
popf
icebp
cmp
adcb
and
cmp
and
push
sub
mov
jnp
cmp
jbe
into
mov
outsl
rcl
mov
shll
xchg
rcl
xor
orb
jne
cmp
xor
jle
adc
mov
mov
pop
mov
push
xor
mov
mov
in
mov
mov
xchg
cmp
cwtl
sub
js
inc
loop
fwait
and
scas
push
and
inc
pop
outsb
mov
jno
nop
ret
cs
aaa
xchg
je
pop
jg
xchg
mov
adc
scas
pop
cmp
push
cmpsl
and
out
flds
pop
mov
add
and
jl
jl
lods
push
sub
stos
adc
insb
pop
daa
dec
ss
dec
jmp
outsb
mov
ds
scas
mov
jmp
xchg
shll
lea
dec
jae
js
lret
add
inc
pushf
aad
ja
inc
mov
inc
dec
or
dec
jns
fstl
mov
lods
in
outsl
sbbb
mov
sub
mull
mov
mov
cmp
enter
mov
icebp
and
push
push
jecxz
sti
iret
cmp
in
inc
push
sbb
mov
or
xor
sub
mov
xchg
je
mov
cmpsb
int3
fwait
sub
xchg
aam
lock
leave
sub
cmpsb
hlt
pop
adcl
mov
push
lock
jge
jl
leave
lds
sub
pop
mov
cmp
insb
cmc
pop
jnp
clc
iret
jae
adc
xor
shrb
mov
jb
and
jbe
jle
push
pusha
mov
cli
aam
dec
lahf
inc
sbb
add
inc
sbb
out
jle
push
push
jns
sti
mov
mov
pop
sbb
mov
xchg
dec
sbb
mov
mov
xchg
insb
add
xor
aad
pop
test
cmp
outsb
lods
out
std
inc
cmpsb
add
jb
xchg
xor
dec
movsb
sub
add
imul
pop
lcall
icebp
adc
pop
add
aad
cs
pop
lret
adcl
fs
pslld
fiadds
dec
push
pushf
lahf
mov
cltd
sbb
clc
jle
repnz
leave
lock
xchg
movsl
pop
addr16
mov
pop
fdivrl
inc
adc
inc
mov
jge
add
mov
adc
mov
shrb
sbb
scas
mov
or
fwait
jecxz
call
insl
mov
fwait
adc
popw
inc
mov
mov
jmp
mov
fnstenv
ss
and
dec
or
subl
dec
push
cmp
sub
in
or
push
xor
movsb
push
mov
cmc
cld
insl
pop
enter
mov
cld
scas
popa
lret
stos
jg
inc
pop
loope
pop
jge
inc
in
add
insb
mov
push
aad
dec
loopne
mov
pop
inc
sub
xchg
cs
pop
xor
daa
sbb
add
imul
imul
stos
mov
incb
mov
inc
xchg
mov
xchg
sub
pop
clc
jnp
arpl
add
push
jns
mov
jns
pop
testb
push
and
pop
ss
insl
sbb
push
subb
dec
adc
frstor
wrmsr
inc
das
dec
shufps
pop
mov
js
dec
scas
sub
mov
jl
fcomps
sbb
outsb
jnp
hlt
aaa
ds
fdivrs
xor
imul
and
int3
mov
out
es
out
test
jne
std
xor
outsl
dec
imul
adc
clc
movb
stos
aam
sub
mov
out
jecxz
adc
jl
mov
sbb
fldt
movsb
jg
ror
mov
arpl
jecxz
sarb
test
lret
push
jle,pt
mov
call
jo
adc
rcrl
cmp
into
sub
shl
stos
xchg
jg
iretw
xchg
and
cmp
pop
stos
xchg
ficoms
jl
jecxz
daa
fnsave
xor
testl
pop
mov
adc
push
xchg
cmp
xchg
mov
sbb
xchg
pop
and
pop
jle
addr16
pop
sahf
ficoml
dec
ds
jg
inc
jno
xchg
inc
iret
leave
sbb
outsl
push
xchg
insb
jno
fldenv
fildl
stos
or
not
sub
xlat
rolb
arpl
push
jae
jl
int3
sti
mov
cld
leave
inc
les
and
cmc
inc
pop
loopne
clc
fmul
inc
adc
in
in
daa
sbb
jne
loopne
and
imul
and
fdivrs
jbe
clc
pop
lock
mov
sti
or
jmp
in
add
iret
ss
sbb
xchg
xor
and
test
mulb
iret
popa
rcl
xchg
mov
test
lret
inc
sbb
je
fdivrl
sahf
test
mov
dec
testl
and
cmpsb
cltd
dec
clc
dec
mov
add
cld
clc
aaa
lcall
lock
cmc
and
push
aad
scas
int3
pop
sub
les
cltd
scas
cmp
dec
xor
dec
xor
out
insb
mov
xor
sbb
mov
and
mov
dec
pop
movsb
pop
dec
sbb
rcrb
lods
add
std
add
out
lret
test
into
mov
push
push
sbb
mov
and
in
jb
mov
rcr
lock
test
jge
sti
fldt
inc
ret
cs
push
repz
mov
mov
in
nop
xor
inc
enter
sub
sub
js
sbbb
xchg
ss
mov
push
cltd
cmp
scas
xchg
fcompl
mov
lahf
inc
jo
inc
jl
xchg
cmp
aad
xorb
cwtl
inc
sbb
sub
mov
insb
pop
sbb
mov
sub
movsb
es
lcall
pop
sbb
inc
xchg
cli
mov
insl
mov
mov
das
iret
cmp
xor
sub
jmp
jns
std
mov
lods
aas
push
imul
clc
fcmovb
sub
xor
fmul
pop
cmp
pop
adc
shll
std
pop
add
jg
out
sub
clc
and
into
and
sub
les
pusha
out
fistps
dec
hlt
call
rcrl
lret
test
mov
icebp
dec
shll
inc
insb
mov
and
push
scas
clc
cmp
jle
loope
mov
outsl
cmpsl
push
jge
jo
xor
shlb
clc
jle
pop
std
scas
jne
mov
pop
pop
and
push
xchg
std
jmp
loopne
cld
lods
bound
iret
or
inc
mov
out
xchg
imul
or
fwait
repz
xchg
aad
push
les
stos
fsubrs
push
and
push
nop
js
pushf
std
in
push
pop
shll
jmp
movsl
insl
fsubr
test
repz
cmp
out
adc
pop
jb
int
bnd
xchg
mov
shrl
imul
pop
cmp
xchg
test
jle
sub
lds
es
ret
add
jg
pop
mov
stos
mov
jo
xchg
notb
testl
cmp
xor
xchg
das
cld
jne
lock
dec
cli
ret
dec
movsb
jge
clc
sbb
xchg
or
out
imul
cli
xor
xor
fcom
idivl
icebp
enter
outsl
dec
leave
xchg
or
ss
int
cmpl
lds
loop
inc
or
mov
out
dec
mov
xchg
cmp
call
daa
test
mov
repnz
or
mov
aas
add
cmpsb
adc
negl
insb
sub
and
jecxz
mov
dec
xchg
xlat
aam
das
and
or
cmpsl
repz
in
sahf
stc
stos
inc
sub
fs
loope
mov
pop
ja
shlb
pop
mov
inc
mov
push
addr16
imul
int3
add
cmp
push
push
sbb
push
lahf
pusha
pop
test
cmp
mov
jmp
push
push
scas
shrl
mov
in
ds
inc
dec
inc
mov
rcr
sbb
sub
addb
xchg
jno
lods
xor
sbb
xlat
sbb
fbstp
mov
std
mov
dec
aaa
inc
mov
jge
lret
out
mov
mov
in
push
sub
outsl
xlat
stc
sbb
pop
jge
clc
test
mov
fnstsw
fcmovu
mov
pop
pop
or
xchg
js
mov
imul
std
shlb
jl
sub
lds
mov
jno
scas
lret
inc
ret
shrl
outsl
and
daa
lcall
int3
xchg
mov
xor
imul
push
push
cmc
imul
push
popa
pop
ret
insl
cmp
roll
jo
in
mov
aaa
pushf
popa
pop
cmp
lcall
jl
pop
scas
inc
jge
push
xor
xor
sbb
mov
out
xlat
mov
test
dec
xchg
scas
jp
xchg
jecxz
mov
xchg
push
or
lret
mov
push
lods
outsb
mov
jge
adc
pop
sbb
jno
push
hlt
jne
mov
xchg
jae
or
mov
inc
jp
sub
arpl
jge
scas
mov
mov
repnz
lcall
cmp
dec
int
mov
icebp
movsl
stos
cmc
push
gs
je
cs
jge
jnp
jp
mov
into
adc
loopne
les
add
and
dec
fildl
xor
std
repnz
stos
jo
ds
mov
js
inc
cmp
mov
into
test
lds
dec
mov
rclb
pop
outsb
jae
dec
mov
arpl
popa
dec
pop
push
and
cmp
pop
data16
decb
inc
in
inc
mov
mov
hlt
sub
xchg
nop
ffreep
add
jbe
leave
inc
add
repz
shrd
cli
sbb
inc
adc
mov
lcall
mov
sub
xlat
dec
int3
shl
sub
push
add
xchg
mov
add
xchg
jno
fwait
cmp
add
push
add
mov
std
cmc
mov
call
mov
xlat
iret
mov
movsl
mov
jo
loopne
xchg
mov
add
dec
inc
jge
jnp
add
cltd
and
inc
pop
cmpsl
sbb
inc
push
xor
push
cmp
arpl
xor
push
inc
cmpsb
test
dec
fwait
sbb
adc
mov
push
insb
cli
dec
mov
test
sbb
imul
addr16
stos
imul
add
dec
ss
or
pavgw
sub
rclb
xchg
jne
or
inc
adc
cwtl
mov
stos
push
xchg
cmpl
pop
adc
ss
stc
cmp
sbb
std
push
dec
jmp
loope
sahf
cmp
pop
mov
xchg
js
aad
or
and
mov
repnz
fists
mov
sahf
decl
repnz
add
sub
andb
dec
cmp
add
in
and
pop
xchg
push
loope
notb
je
jns
xchg
cli
scas
jl
fsts
push
test
xchg
sub
aaa
mov
inc
pop
cmpsb
xchg
cli
pusha
icebp
out
insb
and
push
pushf
sbb
test
jnp
jge
sub
jge
jns
in
pushf
and
jae
mov
popa
adc
mov
ret
mov
cwtl
fisttpl
jecxz
pop
inc
and
add
cmp
pop
mov
and
jns
pop
sub
dec
repz
push
add
lock
sub
jl
sbbb
push
or
mov
xchg
pop
or
jne
iret
mov
popf
pop
mov
dec
or
pcmpeqw
rcrl
lds
cmc
lds
jp
jl
test
test
repnz
ja
xchg
push
push
sbb
jmp
pop
mov
inc
hlt
jno
xor
fistl
in
mov
clc
xor
orl
in
in
dec
mov
jmp
xor
push
inc
cmp
out
pop
jp
insl
jne
insl
std
pop
ret
mov
mov
lret
fwait
call
adc
in
adc
jae
add
sbb
cmp
xor
push
es
cmc
pop
add
sub
jbe
inc
lcall
arpl
loopne
push
lods
mov
pop
and
pop
fimull
mov
mov
or
cld
adc
jecxz
or
xor
lret
and
fwait
mov
sbb
adc
or
push
sub
push
xlat
cmp
sub
pop
inc
in
push
sub
push
inc
es
inc
add
movsl
and
jb
fs
sbb
jo
lcall
dec
pop
jmp
jge
cmp
pop
cmp
push
pop
adcb
leave
dec
mov
scas
cmpsl
ss
lret
mov
out
nop
aad
xchg
xor
jb
fistpl
add
lea
pusha
dec
out
xchg
cmpsb
clc
fimull
int3
or
stc
lds
dec
mov
out
scas
lcall
aaa
push
jle
jecxz
push
ret
lods
sub
mov
dec
fstps
repz
xchg
out
stos
push
pushf
xchg
and
sbb
enter
dec
push
jp
aas
nop
sub
in
pop
fcmovnbe
cmp
filds
cmpsb
jl
stos
call
jnp
mov
mov
rolb
lcall
mulb
pop
lret
rolb
int
sti
jmp
dec
jbe
inc
sub
jg
out
ja
adc
rcll
jp
ret
test
adcb
aaa
mov
xchg
and
xorb
orl
mov
sahf
xor
lret
lods
subb
xchg
sti
mov
xor
push
fdivrl
jecxz
arpl
les
or
aam
aas
xchg
add
adc
cmp
fstpt
mov
push
mov
loop
cmp
fdivrs
mov
rcr
imul
imulb
xchg
push
inc
push
dec
mov
and
inc
fstp
mov
jne
mov
xor
lcall
jbe
mov
test
andl
pop
shl
daa
or
fidivl
jl
inc
sub
fisubl
addr16
cld
mov
subl
ret
stos
les
mov
int3
mov
xchg
add
dec
ja
xor
or
or
testb
pop
aaa
jmp
push
push
xchg
mov
int
jbe
aam
and
lahf
mov
sub
jno
outsb
fnstenv
sbb
imul
and
cmp
fmul
xorb
xor
push
mov
int3
add
rcl
inc
nop
fwait
pop
mov
pminsw
mov
lahf
shll
inc
mov
jne
jg
push
dec
stos
cmp
adc
cmpsb
clc
fadd
xor
jp
mov
push
retw
out
in
jp
cmpsl
sub
pushf
cmp
iret
xchg
dec
xlat
adc
xchg
test
mov
inc
xor
sbb
xchg
pop
and
leave
or
fiaddl
lea
pop
xor
adc
fcoms
lret
in
into
lock
pop
mov
adc
mov
mov
jp
pushf
out
popa
std
cli
mov
xchg
fcmovnbe
mov
cmp
sbb
stc
fildll
push
mov
xchg
xlat
pushf
jnp,pn
insb
mov
push
in
mov
inc
into
jg
pop
mov
add
sub
xor
dec
in
push
aas
inc
cmpsl
dec
adc
aaa
scas
fistpl
jbe
xchg
pop
inc
hlt
add
adc
xchg
ja
scas
push
out
sub
adcb
push
inc
adc
cmp
fmuls
cmpsb
hlt
arpl
or
adc
dec
cmp
pop
es
or
out
shl
pusha
stc
ja
mov
aam
jo
es
inc
ljmp
jo
sbb
and
jge
out
inc
mov
cmp
in
loopne
sbb
pop
inc
sub
testl
neg
adc
dec
lahf
push
sbb
cmp
orb
xchg
mov
lods
ja
hlt
andb
imul
jae
test
pop
and
stos
dec
adc
or
outsb
jo
jb
cwtl
sbb
mov
add
cmp
scas
push
mov
pop
in
int
mov
xlat
icebp
stc
sub
loopne
stc
mov
fdivs
and
xor
cmp
cs
add
pop
nop
fnstsw
jmp
sub
sub
ss
cld
jp
cld
mov
inc
jecxz
outsb
je
jne
sarl
test
pop
inc
xor
inc
cwtl
dec
rcll
cli
aam
pop
fsubr
mov
cmp
rorb
out
jp
xchg
pushf
test
lea
cmp
in
ret
das
sarl
xchg
pop
add
and
sub
mov
xchg
fidivrs
js
inc
push
out
jle
scas
jae
ss
arpl
sahf
sub
mov
sti
test
dec
and
xor
fadds
push
xorb
popf
pop
fwait
pop
rolb
mov
popf
mov
xorl
lods
imulb
lds
jo
or
test
pop
mov
jb
pop
negb
dec
std
xchg
sub
aam
lahf
dec
loope
lcall
dec
inc
sub
mov
fdivrs
testl
or
incb
mov
vpsllw
shl
push
mov
xchg
flds
sub
addr16
leave
sahf
mov
jmp
push
gs
sub
out
imul
insl
les
rclb
in
pop
or
mov
push
xor
or
mov
sbb
repnz
outsb
shlb
pop
sub
fcomip
or
jge
or
or
imul
cmp
inc
outsl
jmp
addr16
out
mov
out
cs
popl
mov
push
in
inc
testl
pop
dec
jp
bound
aas
movsb
loope
mov
and
in
leave
divb
xchg
insl
jl
dec
scas
mov
mov
pop
jmp
mov
mov
jb
jmp
insl
insb
ljmp
outsl
mov
push
jmp
inc
mov
dec
out
in
cld
fstps
scas
daa
jbe
pop
jns
cld
add
cmp
mov
sbb
aas
sarb
pop
jns
cmp
dec
jg
movsl
addr16
push
sbb
cs
lods
in
cld
addr16
aam
dec
in
lcall
cmp
adc
inc
adc
lds
repz
mov
dec
decl
mov
cli
cwtl
es
mov
jb
mov
sbb
and
mov
mov
scas
pop
gs
test
cmp
adc
int3
fs
lea
mov
dec
pop
push
push
dec
inc
cwtl
mov
xor
rolb
jp
ljmp
or
push
dec
mov
aam
or
enter
testl
pushf
push
jbe
mov
cwtl
xor
jge
sub
mov
fmul
and
sbb
mov
insb
std
mov
push
push
lds
push
pushf
pop
jbe
rep
xor
out
mov
add
add
rcl
fadd
leave
push
les
dec
sbbb
fildll
cmp
or
inc
scas
sti
pop
testb
adc
test
fld
lret
pusha
cmp
inc
jp
cmc
push
pop
adc
mov
ss
inc
in
stos
jns
addb
fisttpl
pop
pop
sbb
mov
mov
and
sysexit
dec
pusha
push
rclb
idivb
imulb
scas
inc
xchg
cmpsl
xlat
and
cmc
rolb
mov
push
sti
aam
or
loopne
mov
out
xchg
dec
stos
aas
dec
fists
mov
stc
lock
rcll
xor
jle
out
push
mov
xlat
mov
int3
and
mov
mov
ret
cltd
xlat
jnp
insb
cli
or
out
and
repz
sbb
sbb
dec
pop
out
call
pop
lret
fdivrl
fcomps
xchg
cmpsl
fisttps
xor
mov
sahf
fs
pop
leave
add
xor
push
lds
fs
or
mov
cli
nop
pop
cmpsl
jno
mov
in
pusha
sbb
popf
pusha
addl
mov
and
xchg
es
mov
push
inc
loop
jb
cld
adc
aad
mov
adc
lret
repnz
clc
sub
xchg
jae
cmp
or
mov
mulb
push
jg
loop
sbb
or
nop
ret
pop
sub
jb
mov
xor
sbb
adc
cmpsl
fmull
leave
mov
adc
inc
jo
mov
test
push
out
lods
jns
and
xchg
lret
sbb
mov
mov
in
ret
out
mov
test
popa
cmc
inc
aaa
cmp
jo
dec
sub
lret
scas
xchg
push
cmp
enter
ds
push
hlt
jnp
or
sbb
fwait
or
scas
movsb
mov
xchg
sbb
fsub
lds
cs
and
sub
xchg
sub
cmp
pop
lock
test
add
pop
icebp
or
das
mov
jmp
push
dec
push
add
pop
sbb
test
adc
mov
mov
leave
cmc
fsubrp
inc
xchg
push
or
mov
loop
jne
insl
mov
sbb
adc
testb
lods
push
insb
iret
mov
popf
cmp
adc
add
pop
jle
adc
push
js
jne
and
mov
pop
xor
mov
ret
xchg
xchg
in
lods
sbb
std
testl
sarb
popa
mov
add
inc
and
mov
xchg
sub
adc
jae
jno
mov
dec
loope
enterw
mov
stos
inc
inc
int
lds
les
sbb
inc
ljmp
jns
cmp
fldl
out
gs
call
sub
pop
test
push
cmpps
pop
sub
xor
mov
jge
sbb
mov
xchg
mov
fwait
sarl
xchg
sar
xchg
aam
xchg
in
sub
pusha
mov
mov
xor
pusha
in
or
daa
dec
fcomps
push
mov
cmp
or
inc
pop
inc
outsl
lret
push
dec
or
push
sarl
in
sub
out
mov
xchg
cli
out
cli
sahf
add
shll
jne
movsb
mov
stc
add
and
push
fs
das
jno
add
mov
gs
sub
lcall
adcb
add
inc
pop
mov
dec
and
push
lret
daa
or
jae
dec
xor
adc
rcrl
inc
nop
dec
mov
push
add
jp
cmpsl
ss
iret
sbb
divl
mov
mov
out
push
pop
pop
aad
stos
imulb
inc
and
mov
icebp
push
push
mov
cmp
mov
fadds
outsl
xchg
mull
push
or
dec
shll
mov
mov
lods
stc
test
loope
or
and
lahf
fucomi
icebp
mov
testb
and
dec
les
mov
xchg
lret
stos
xor
inc
testb
clc
jns
ss
mov
lds
sub
call
enter
scas
in
push
popf
xor
xor
aas
xchg
fsubrs
fs
xor
js
mov
hlt
fldenv
mov
shll
mov
pop
add
mov
out
xchg
lgs
mov
or
in
push
scas
sbb
rorb
jnp
jo
push
pop
clc
cmp
push
xchg
mov
faddl
call
or
pop
push
and
add
pusha
mov
pop
iret
scas
or
scas
jl
scas
add
sbb
mov
testl
fidivs
cmp
adc
mov
sbb
jmp
das
ret
movsb
test
dec
cmpsl
sub
les
sbb
add
push
out
dec
xor
lcall
je
fst
jbe
mull
dec
pop
ret
mov
inc
xchg
push
insb
or
stos
rcl
lods
and
cld
fildl
inc
cmpl
dec
ret
add
and
cmp
sub
push
sbb
dec
xchg
mov
ds
add
adcl
popa
jge
add
insl
imull
loope
shlb
adc
adc
out
or
dec
nop
pop
es
jns
pop
cmp
shll
movsl
lods
push
fsts
inc
pop
jne
adc
mul
mov
mov
mov
cmp
xchg
pop
mov
pop
jge
cli
cli
mov
movsb
pop
sbb
cmp
push
jp
loop
xor
cmp
ds
mov
jp
insb
hlt
jmp
je
sahf
sbb
mov
les
nop
xor
jecxz
or
mov
call
in
mov
inc
incb
mov
loop
cmp
add
xchg
jmp
sub
jmp
ja
insl
jno
mov
subb
jo
call
inc
hlt
cmpsb
xchg
xlat
inc
les
test
sub
pop
lods
or
pop
movsl
mov
aaa
aam
xchg
add
inc
mov
inc
sub
enter
leave
inc
call
xor
movsl
rcll
test
add
or
mov
or
lock
movsb
in
xchg
mov
movsb
push
push
ret
iret
dec
fwait
sarb
sub
inc
mov
and
inc
add
fcoml
lret
adc
or
mov
test
std
pop
lods
dec
sub
adc
xor
fs
push
push
mov
sbb
ffree
aad
aad
test
ret
in
adc
pop
sub
push
jnp
mov
mov
push
mov
test
cltd
push
lock
test
hlt
lret
out
shll
test
into
subb
loopne
jle
std
xor
mov
sbb
in
pop
push
mov
insb
sbb
mov
sub
jecxz
in
scas
push
xchg
shlb
out
xchg
jo
lcall
fwait
xchg
pop
add
sub
jns
xchg
pop
ja
cmpb
outsl
outsl
call
adc
mov
pop
mov
lret
out
int
xor
push
lds
and
pop
xor
imul
lea
pop
dec
xchg
jecxz
xor
inc
pop
inc
sbb
mov
push
adc
and
fcmovb
dec
push
bound
mull
cmp
jmp
sub
fistpl
mov
lret
outsl
mov
dec
adc
xchg
adc
mov
stos
out
and
jae
movsl
cltd
or
bsf
and
cmp
add
lahf
push
aaa
ja
sbb
fnstenv
ret
mov
pop
dec
add
jbe
test
dec
fdivl
sbb
push
daa
test
mov
and
or
aad
fdivrl
sub
ds
pop
and
xchg
dec
jp
mov
cmpsl
jmp
pusha
cltd
xchg
mov
das
jge
jnp
stos
pusha
xchg
ja
add
dec
jbe
xchg
jp
cmpsl
cmp
mov
xchg
in
or
sub
mov
mov
cmp
ffreep
cmp
das
adc
and
mov
sbb
int
cmc
enter
dec
cmp
xor
out
mov
lcall
lods
mov
in
ret
sahf
jp
jno
mov
push
dec
or
test
sbb
lahf
cmp
pushf
ficoms
movsl
int
insl
or
jg
fwait
jge
mov
imul
mull
insb
xor
jg
cmpsb
jmp
idivb
add
loop
imul
rol
dec
push
ja
jp
dec
test
add
and
sub
adc
into
popa
testl
test
ret
repz
ljmp
cmp
xor
sbb
push
mov
pushf
dec
and
fxtract
in
pop
test
in
jne
sbb
dec
jg
and
enter
inc
pop
fldt
test
lods
mull
push
subl
aas
sbbb
inc
ds
jmp
jbe
mov
js
movsb
push
jge
sbb
scas
dec
addps
mov
ljmp
vpshufd
mov
test
xacquire
push
pop
xchg
movsl
test
lods
loop
inc
mov
inc
rcl
shrl
cwtl
inc
mov
loop
pop
adc
aam
and
xorb
cmc
pop
mov
push
jne
outsb
out
inc
dec
lcall
jmp
pop
cmp
xchg
sbb
cmpsl
adc
stc
push
mov
pop
and
add
jmp
jns
xchg
add
xchg
cmpsl
bound
sbb
loope
dec
cld
in
add
icebp
push
jb
sub
fbld
cmp
out
test
jb
out
pop
jge
add
jne
fs
sub
lock
ja
add
inc
nop
xor
rorl
loop
adc
xchg
cwtl
or
and
lds
fimull
rcrl
mov
push
out
inc
sti
in
in
test
out
sub
shr
jge
jg
out
insl
mov
mov
loopne
mov
cwtl
jbe
sahf
inc
lods
lret
test
pop
push
insl
xchg
aaa
xchg
jne
loope
and
mov
outsb
jecxz
xchg
mov
mov
sti
or
dec
test
cmpsl
inc
fwait
mov
push
adc
mov
insl
bound
stos
sub
sbb
insb
jns
sub
outsl
rcrl
inc
cltd
dec
stos
cmpsb
rcrb
or
mov
pop
cmpsl
add
insl
sub
cmp
idivl
inc
iret
fmul
pusha
and
and
jnp
or
sarb
pop
xlat
aas
in
ss
cltd
lea
in
sub
mov
push
and
mov
outsl
and
cmc
add
add
mov
pop
sbb
ret
and
lret
scas
aad
sarl
sub
dec
out
jecxz
sbb
ljmp
inc
inc
sub
les
in
into
jae
aad
js
add
nop
cmp
mov
mov
aaa
adc
dec
jb
aaa
roll
orl
pop
dec
add
test
dec
xorl
add
out
aaa
std
shr
mov
cmpsl
xchg
add
jmp
into
push
xchg
fildll
fcomps
pop
lret
imul
aaa
scas
sub
lret
clc
push
loop
cltd
repz
sub
ret
cmp
cmp
jns
lret
inc
add
imul
pop
sub
fsubl
scas
dec
fsubr
lock
add
imull
andb
inc
fistps
lret
int3
mov
jle
movsb
call
lret
dec
test
mov
and
xor
addr16
enter
sub
sarl
jno
fmuls
xorb
mov
out
aas
inc
add
inc
sbb
add
jp
dec
push
cmpxchg
jl
aad
pop
sbb
jns
mov
push
repnz
fimuls
hlt
cmp
out
fsubrl
and
in
xchg
jge
jno
in
xor
adc
rolb
fs
les
hlt
push
shr
repz
lock
outsb
push
shlb
orl
jecxz
test
jbe
in
push
jl
int3
sbbl
mov
stos
int
mov
adc
pop
in
insl
stc
xchg
rclb
sub
add
sub
inc
push
cmp
les
cmc
jo
cli
sti
pusha
fimull
or
fs
int
test
inc
cmpsb
notl
inc
or
add
mov
int3
lods
loopne
push
adc
sub
inc
sub
leave
in
sub
or
enter
pusha
inc
orl
pop
lds
mov
mov
jae
jnp
clc
mulb
aas
cmp
movsl
adc
xor
jl
jnp
sti
jge
xchg
std
and
cs
mov
sub
sti
jecxz
sti
adc
mov
push
push
jbe
popa
test
mov
aas
cmc
xchg
xchg
pop
mov
imul
cld
roll
mov
imul
repz
xor
scas
addr16
jge
gs
mov
stos
dec
std
push
xchg
insb
call
test
dec
nop
in
mov
cmp
push
lods
insl
popf
add
repnz
insb
mov
mov
add
mov
sbb
pop
or
push
and
inc
push
sbb
in
mov
orb
mov
notl
cmp
jmp
ret
repz
bnd
or
cmp
int
adc
adc
mov
inc
sbbl
ret
in
dec
iret
or
jge
lahf
push
sbb
cmp
push
adc
in
and
mov
mov
aad
pop
scas
mov
pusha
push
shll
data16
out
jmp
push
rcrl
negb
push
out
in
sub
stc
call
xlat
ss
xor
es
mov
adc
push
inc
xchg
rcrb
mov
clc
push
leave
mov
push
insb
jg
out
or
mov
xchg
inc
mov
jns
mov
rorl
stos
push
cmpsb
imul
xchg
lods
sahf
jo
or
mov
pop
sub
xchg
xchg
push
or
push
push
popa
test
mov
xchg
out
test
xlat
pusha
xor
push
fidivl
lds
das
inc
xor
cmp
push
xchg
imull
dec
test
arpl
cld
cmpsb
test
mov
movsl
mov
cld
ret
out
dec
vmread
jb
jp
and
fistl
imul
imul
mov
sti
inc
inc
int
mov
ds
movsb
cmc
push
jbe
add
push
sub
jnp
cmp
sub
mov
addr16
add
and
pop
daa
lods
inc
jns
insl
fnstsw
stos
sahf
ret
popa
loope
and
fsubrl
mov
sbb
dec
mov
fsubl
movsl
std
push
int
xorb
jne
cmc
mov
inc
lret
shlb
pop
not
and
or
pop
adcb
cmp
rcrl
mov
jae
inc
iret
repz
add
sbb
ret
aam
xor
xor
fisttpl
adc
in
scas
dec
inc
test
aas
orb
mov
cs
cmp
jo
pop
movsb
in
adc
enter
outsl
sub
int
mov
push
js
gs
imul
aam
mov
das
cmp
xchg
xchg
js
push
or
movsb
mov
sbb
cwtl
popa
and
ss
push
stos
mov
lods
jl
ret
orb
arpl
lcall
inc
cmpsb
out
test
mov
shl
int
or
out
sahf
stc
mov
xor
test
repz
inc
mov
cmc
insb
dec
test
sbb
sbb
jge
sbb
pop
fwait
lock
xchg
inc
lock
inc
test
mov
std
sbb
cmp
dec
fidivrl
xchg
sub
pop
repz
movsb
mov
adc
xchg
cmp
add
pop
add
add
add
add
add
call
cmp
add
cmp
add
add
mov
add
mov
xchg
pop
mov
mov
cmp
or
leave
mov
loope
insb
mov
xor
out
xlat
add
push
sbbb
mov
std
jg
sbb
mov
lds
sub
fwait
mov
ret
shll
pop
inc
daa
xor
pop
repz
bound
insl
pop
dec
jecxz
call
insl
aaa
or
xchg
mull
enter
xchg
mov
xor
and
cmp
jge
xor
xchg
movl
out
inc
ffree
lret
cmp
jae
in
xchg
test
lcall
shr
ror
mov
pushf
dec
mov
loope
insb
pop
pop
add
cmpsb
sub
jbe
jle
xchg
pop
mov
decb
call
and
adc
inc
xchg
stos
fmull
mov
inc
lcall
arpl
xlat
cmp
aad
es
cmp
and
aad
mov
fisttpl
imul
mov
pop
adcb
cli
divl
adc
outsb
jp
xor
jl
inc
lahf
mov
rolb
pop
jp
fisttps
aas
sbb
fsubrl
lcall
sahf
push
js
xlat
or
fwait
adc
frstor
push
popf
pop
and
mov
ret
push
cmp
mov
jp
flds
mov
imul
mov
in
inc
scas
and
cs
jle
xchg
mov
xchg
imul
or
jns
popw
hlt
dec
push
cmpsl
dec
bound
sbb
mov
test
fiadds
das
in
ret
pop
add
gs
out
outsl
pushf
jo
jmp
sbb
inc
pop
push
cmc
lret
scas
inc
push
push
sub
xor
push
sbb
insb
clc
jo
adc
mov
jae
xchg
fldlg2
enter
addr16
popf
jne
pop
fs
pusha
ljmp
cmp
pop
inc
mov
test
jge
hlt
push
pop
sub
in
cld
xchg
xchg
mov
mov
jmp
adc
xchg
sub
leave
clc
aaa
nop
lock
cmp
push
jo
cmp
mov
sub
cltd
jns
mov
xor
xor
or
and
lock
and
fwait
stos
dec
mov
ret
leave
cmpsb
fbstp
nop
cmp
insb
mov
xchg
mov
cmp
enter
fildll
enter
mov
test
out
imul
outsl
push
inc
sbb
insl
sub
sarl
es
mov
js
mov
xchg
push
push
sti
pop
jno
cli
xchg
mov
dec
roll
mov
aam
add
jno
dec
mov
xlat
fnstsw
les
xchg
cmp
cmpl
ficomps
push
mov
icebp
lahf
adc
mov
fisttps
add
roll
cli
mov
jno
fcmovbe
scas
cmp
cs
out
movsl
out
xchg
in
fucomp
sub
hlt
bound
and
cmp
dec
imul
das
sahf
push
push
dec
jbe
ss
negb
xor
push
call
or
sbb
jmp
adc
sbb
jns
loop
pop
cmpsb
int3
aam
sbb
sub
call
sub
xor
fwait
mov
xchg
lret
fsubr
mov
xor
js
push
imul
xchg
shl
adc
jge
pusha
pop
je
hlt
inc
loopne
gs
and
jne
dec
scas
cli
cs
jecxz
sti
fwait
push
add
icebp
cltd
pusha
out
push
aas
test
bound
les
jbe
xor
jae
push
test
sub
jb
xchg
test
lock
add
jmp
push
inc
pushf
sub
cmp
test
jbe
cmp
pop
cld
sub
std
leave
mov
test
jno
data16
test
repz
jge
rclb
add
push
push
pop
out
das
movsb
inc
rol
mov
mov
arpl
lcall
cmp
ljmp
add
ret
je
notb
ja
mov
es
sbb
inc
mov
call
dec
adc
scas
pushf
mov
mov
sub
das
insb
jg
fisubrs
out
cwtl
nop
mov
fmul
fdivrs
ret
das
sbb
popa
test
lock
mov
divb
dec
mov
inc
test
mov
cmp
sbb
test
push
xlat
in
out
ret
stc
leave
pop
jns
xchg
sub
ret
loope
fildll
outsl
loopne
jbe
out
push
ss
loope
out
mov
inc
sub
adc
call
sbb
xor
insb
aaa
dec
or
mov
int3
xor
xchg
jbe
jmp
fimull
repnz
add
add
test
test
lahf
ret
repz
addr16
inc
shll
lods
gs
push
cmpsl
addr16
mov
mov
push
dec
repz
aas
pop
add
ret
inc
enter
mov
adc
inc
sub
inc
js
pop
inc
rcll
sti
idivl
std
cld
push
mov
mov
mov
mov
push
les
loope
out
sbb
aad
out
mov
or
and
push
rcll
in
fs
xlat
pushf
stos
mov
add
mov
dec
inc
jo
push
xchg
pop
inc
shrl
imul
arpl
lods
aaa
out
clc
iret
mov
test
shll
fdivrl
inc
cltd
sbb
sbb
add
jl
mov
jbe
jg
or
outsl
in
push
pop
lods
xor
popa
jge
cmp
mov
mov
adc
sbb
dec
fistpl
loop
inc
xchg
sbb
dec
dec
push
cmpsl
cwtl
cwtl
sahf
stos
sti
fldcw
daa
mov
xor
xchg
adc
push
loopne
cmpl
sbb
jle
push
jae
nop
add
call
inc
lods
mov
jp
call
pop
enter
fstpl
pop
sbb
push
sub
fstp
push
xlat
cmc
inc
popa
in
push
cmp
mov
and
js
jp
push
xchg
mov
cmc
jo
jl
flds
sbb
lcall
ret
fistps
and
adc
or
lea
sbb
jecxz
enter
mov
lods
lret
xchg
jge
sbb
cmp
test
jg
sbb
aaa
mov
xchg
in
outsl
ja
ret
or
mov
and
leave
add
mov
pop
frstor
xor
ror
cwtl
movsl
fwait
sbb
cmp
enter
mov
dec
fidivl
inc
xchg
insb
push
fcmovne
cmp
inc
dec
daa
test
mov
pop
inc
shlb
sub
pop
pushf
outsl
repnz
lahf
pop
leave
pushf
cmpsl
push
adc
adc
pop
popw
dec
jge
rcrl
push
pushw
or
pop
xchg
adc
fs
mov
push
lds
or
lea
out
jb
and
jbe
pop
sub
movsl
pop
ja
arpl
stc
pop
pop
bound
jmp
loop
pop
inc
test
cmp
xor
out
and
je
adcl
loop
pop
mov
push
rcl
faddp
push
stos
ret
jae
mov
mov
push
mov
jo
lds
mov
adc
sub
test
push
addb
dec
bnd
mov
enter
push
jb
or
xchg
adc
decb
add
leave
outsb
pop
mov
and
cmpsb
ret
dec
lret
mov
sbb
test
inc
cmp
mov
pop
cmp
js
repnz
loop
mov
or
xchg
push
fnsave
adc
ret
ss
mov
add
xchg
add
cmp
xchg
pushf
jp
adc
sub
lcall
cmpsl
sub
lods
aad
out
xchg
pushf
insl
sub
lret
cmc
ja
stos
xor
mov
orl
pushf
out
out
add
int3
push
xchg
lock
ret
scas
sub
ja
aas
jbe
dec
dec
xchg
jp
loop
sbbl
push
imul
dec
adc
dec
icebp
pop
jb
xchg
dec
or
loop
xchg
mov
xor
xchg
jg
inc
mov
dec
or
push
ljmp
add
and
in
aam
jno
fildll
out
pop
push
push
jne
pop
wbinvd
cmpsb
pusha
pop
fstpl
pop
gs
lds
hlt
mov
add
adc
push
scas
outsl
js
mov
xchg
inc
sbb
jnp
mov
jl
test
mov
loopne
scas
das
push
aad
or
or
jae
inc
xor
fidivrs
add
shlb
sbb
or
jp
out
inc
out
stos
jmp
inc
xchg
in
pop
mov
cmpl
mov
push
mov
ljmp
movb
out
sub
out
push
xchg
pop
mov
fistps
jno
loope
ja
cmpsl
adc
cli
cmp
ljmp
outsl
dec
sahf
inc
xor
push
sbb
iret
call
clc
xor
test
or
mov
xchg
xor
lret
xchg
add
jae
sub
iret
xor
xlat
scas
push
out
mov
pop
pusha
divl
jb
rorb
repnz
fs
dec
xlat
push
mov
xlat
cmp
mov
shll
inc
fwait
hlt
cmp
xlat
cmp
sub
mov
jmp
mov
xor
push
popa
int3
inc
mov
mov
movsl
mov
add
pop
xchg
fwait
in
outsl
add
movsl
pop
rcl
mulb
loope
rcrl
jbe
sub
out
sub
adc
fwait
sub
push
into
pop
pusha
inc
scas
mov
inc
add
sbb
push
jmp
stc
adcl
mov
in
or
xchg
xchg
or
xchg
cmp
mov
push
in
and
rcrl
mov
push
fisubrs
insb
push
fmull
filds
loopne
aad
jge
push
mov
or
xchg
pop
das
lahf
mov
mov
mov
les
mov
mov
adc
iret
pop
popf
push
xchg
or
imul
xchg
divl
adc
jb
lret
cmp
ds
aad
xchg
xchg
sub
cmpsb
mulb
or
add
cld
adc
inc
inc
xchg
loope
xchg
nop
cld
add
popa
js
gs
in
test
sub
xor
in
or
xchg
mov
pop
mov
daa
int3
mov
jp
and
les
inc
es
mov
scas
sti
mov
daa
xchg
das
xchg
sbb
loope,pt
fwait
inc
add
fldl
inc
cmp
mov
jp
rorb
imull
mov
mov
mov
push
sahf
inc
ljmp
lock
lcall
aam
cmc
rol
adc
cs
popl
add
pop
xchg
pop
pop
sub
cmp
inc
cmpsl
cmp
lret
in
push
or
stos
aam
das
and
pop
movlps
imull
mov
pop
insl
inc
das
xchg
xchg
xchg
fistl
pop
jae
mov
pop
push
je
jbe
ffreep
jo
mov
mov
mov
sti
outsl
jp
leave
or
lcall
daa
jne
enter
int3
aaa
stc
cltd
xchg
push
push
lcall
add
mov
ret
xor
arpl
or
push
into
push
test
clc
and
sti
lds
sbb
call
mov
push
stos
xchg
cwtl
dec
xchg
ds
fs
push
adc
cmpsb
xchg
int3
cmc
or
inc
enter
xlat
mov
sbb
sbb
ja
push
lahf
jb
dec
icebp
and
mov
stos
imul
lcall
ficompl
insl
shlb
push
outsl
repnz
scas
jns
in
pop
rorl
xchg
insb
leave
shl
test
loopne
rcll
rclb
sbb
ret
out
stos
mov
leave
cmp
mov
dec
xor
pop
fwait
inc
cmp
sbb
pop
mov
mov
mov
rolb
fstpt
xlat
aas
mov
popa
or
test
add
xchg
mov
loop
xchg
sbb
dec
jb
mov
sub
fldenv
bound
xor
pushf
jno
dec
jbe
movsl
mov
loopne
push
mov
pop
cmpsl
xchg
sbb
mov
jp
mov
sbb
stos
in
iret
or
inc
arpl
xchg
data16
adc
mov
xor
push
fists
arpl
cld
cmp
fwait
nop
movsl
cs
sbb
stos
mov
lods
mov
movsb
pushf
int3
sbb
xchg
cmp
pop
or
xor
jmp
insb
mov
adc
rolb
mov
jmp
test
out
sbb
push
lahf
cmpsb
orb
mov
mov
and
dec
in
xor
cmp
and
ja
es
mov
dec
ja
lea
sbb
clc
sub
xor
jecxz
cmp
fldenv
sbb
sub
sbb
fsubs
add
adc
movsb
scas
imul
loop
shrb
jl
sub
pcmpgtd
adc
mov
push
pop
jo
mov
sbb
and
inc
repnz
adc
out
and
xchg
jle
mov
cwtl
push
jge
fidivrl
cmc
and
jle
xor
inc
lock
mov
add
pop
insl
jnp
mov
xor
xor
jmp
xor
add
shlb
inc
mov
rolb
lock
jecxz
fs
inc
lods
jecxz
mov
xchg
push
icebp
lret
pop
and
fstpt
stc
and
subl
sbb
mov
push
fdivrl
push
mov
dec
pop
ljmp
pop
cld
push
sub
jne
push
adc
fwait
or
xor
pop
cmp
cmp
dec
xor
lea
mov
jno
addr16
sbb
inc
xor
out
xchg
xchg
inc
loop
mov
insl
sbb
dec
out
dec
loope
jl
cmp
ljmp
xchg
dec
push
mov
mov
pop
pop
mov
or
testb
mov
sub
mov
xor
lcall
lods
dec
cli
dec
jmp
in
adc
mov
ss
stos
lods
add
jl
outsb
sub
cli
push
popa
add
movsl
gs
js
std
scas
mov
jbe
sbb
xchg
xor
cs
jo
orb
aas
mov
mov
add
jl
dec
scas
sub
cltd
adc
out
movsl
lret
push
pushf
sti
push
inc
fadds
xor
stos
xlat
mov
leave
mov
les
push
push
sbb
ljmp
mov
lahf
pop
pop
cs
sbbb
jbe
xor
aaa
or
jl
inc
ljmp
cli
and
rorb
add
sbb
shrb
les
mov
dec
jle
sub
sbb
sub
xor
test
sbb
adc
push
mov
jae
cmp
test
cld
push
mov
mov
sbb
mov
jmp
cltd
pop
insb
mov
sbb
push
sub
jnp
and
cmpsl
sub
jne
out
xchg
lods
daa
sub
mov
ss
adc
and
out
sti
ret
sahf
cmp
lahf
jbe
scas
cmp
mov
in
dec
dec
popa
pop
mov
loopne
icebp
xchg
mov
mov
jo
push
cmp
pop
sub
enter
test
mov
jl
jecxz
cmp
aaa
fwait
scas
jb
push
push
xchg
jbe
cmp
push
movsl
addr16
leave
int
cltd
lods
data16
iret
lret
imul
repz
roll
or
push
pop
fucomp
mov
add
pushf
xchg
lcall
mov
add
jl
pop
aaa
xchg
push
xchg
sbb
insb
jns
pop
cmc
cmc
sub
cmpsl
lahf
data16
out
push
mov
push
inc
xchg
jnp
test
sbb
stc
int
xchg
sti
stos
pop
mov
aad
out
cltd
jl
repnz
inc
sbb
fcomps
and
xchg
adc
mov
add
adc
mov
sub
in
movsb
xor
ja
add
dec
rol
jo
insb
ret
movsb
insl
fbstp
dec
fld
inc
ljmp
xchg
inc
add
xor
aad
push
xchg
popf
push
add
icebp
inc
lock
fildll
push
fisubs
aam
pop
fsub
popf
dec
pop
push
dec
or
rorb
mov
in
xchg
lods
sub
mov
xchg
sti
sub
das
imul
jno
fstpt
nop
jne
sbb
xchg
dec
fists
jmp
push
jge
xchg
or
xchg
push
inc
sahf
test
icebp
sub
jl
imulb
or
outsb
std
cli
cmp
shrb
fdiv
and
outsb
daa
mov
sbb
rcr
lods
jl
lcall
imulb
pop
pushf
xchg
and
cmpsl
ficoms
movsl
in
fdivs
mov
movsl
call
mov
adc
pop
jge
sbb
jp
lea
add
inc
and
out
hlt
jno
loope
add
or
das
ljmp
xor
jmp
xchg
mov
mov
mov
jb
cld
testb
lds
jmp
push
mov
lods
mov
xchg
lds
mov
and
jmp
cmp
or
sub
xchg
xor
andb
aaa
xlat
add
mov
aam
scas
jne
or
jnp
push
mov
adc
jne
add
daa
decb
aam
adc
xchg
jge
test
sub
mov
jmp
stos
jge
mov
and
sbb
add
inc
xor
push
jp
push
mov
cmpb
addr16
push
dec
sti
in
and
sbb
hlt
mov
cltd
stc
cmp
das
xchg
movsb
push
fmull
push
mov
je
ret
pushf
fcomps
lcall
fisttps
adc
sbb
adc
mov
dec
push
data16
lock
popf
xor
xlat
push
imul
imul
lahf
fwait
cltd
adc
mov
roll
mov
mov
jbe
sbb
push
ficompl
int
add
sbb
movsb
mov
and
fwait
push
cmpb
pop
pop
ljmp
and
sub
pop
pop
popa
in
addr16
mov
fldt
nop
push
mov
pop
setns
xchg
in
cmpsl
repz
jmp
loop
xor
and
push
les
add
insl
adc
cmc
pop
loope
ljmp
xchg
rclb
inc
jbe
out
jle
mov
fcomps
lods
inc
sti
pop
scas
out
sahf
leave
xor
loop
mov
or
pop
inc
push
sub
orb
test
jae
addl
call
xchg
inc
scas
xchg
jb
lock
push
push
xchg
mov
mov
pushf
ds
pop
jg
or
jne
lret
lahf
repnz
or
rclb
and
add
inc
mov
rcl
push
mov
pop
mov
fiadds
cltd
mov
mov
jnp
inc
call
sti
hlt
in
add
loopne
cs
cs
dec
loop
jmp
mov
dec
fcompl
jecxz
mov
mov
scas
jp
jl
and
lahf
jmp
pop
mov
icebp
fs
xchg
cld
pop
adc
add
aas
call
jno
je
and
pop
push
mov
imul
testw
inc
sbb
icebp
leave
dec
aad
mov
mov
into
pop
add
sbb
inc
mov
mov
fsub
mov
mov
jecxz
and
mov
lock
add
repz
and
xchg
cmc
shl
sbb
mov
add
stc
xchg
imul
cmpsb
mov
adc
push
cmp
pop
scas
stos
cltd
jb
in
or
add
out
xor
outsl
sahf
into
cld
pop
and
stos
test
jge
mov
push
or
cmp
sub
aad
fdiv
shll
cld
push
jb
pop
imul
sub
je
and
stos
repnz
mov
jmp
stos
jl
lcall
add
sbb
rcrb
xchg
or
pushf
ret
repnz
int3
add
orl
lock
cld
inc
adc
and
scas
lods
out
sti
mov
and
das
add
xchg
push
jns
inc
adcb
jne
cmp
rol
dec
fidivs
test
jecxz
inc
aas
dec
and
outsl
mov
je
test
push
out
sub
push
rol
fwait
movsl
insb
xor
dec
mov
pop
push
mov
mov
inc
imul
add
pop
pusha
ljmp
inc
mov
dec
daa
adc
out
mov
idiv
adc
roll
leave
or
adc
add
jae
or
sub
inc
je
sbb
sub
test
clc
dec
bound
jbe
mov
dec
push
jae
rorl
das
shr
jge
rorb
in
adc
jl
mov
push
pop
dec
gs
pop
xchg
jecxz
loope
leave
xor
xchg
gs
fs
popa
xor
test
sub
pop
push
xchg
popa
pop
pop
jno
and
arpl
pop
sti
sahf
int
pop
hlt
jecxz
jb
pushl
adc
scas
push
das
ds
jo
push
push
aad
popf
mov
call
dec
sbb
or
test
adc
ficoms
inc
lcall
repz
vandnpd
cmp
cmp
mov
sub
cltd
popf
dec
sub
repz
pop
jle
adc
sahf
nop
scas
sbb
mov
fistps
sbb
xchg
sbb
loop
mov
outsl
xchg
sub
js
sahf
lock
ret
mov
dec
sbb
cltd
dec
push
leave
inc
pushf
faddl
and
notb
addr16
lock
lods
xor
out
pusha
popf
enter
cmp
gs
int3
xor
stc
pop
out
scas
shlb
sub
pop
in
jno
mov
std
lea
sbb
fs
lahf
mov
call
xchg
cmp
add
iret
sbb
jecxz
inc
lock
mov
inc
insl
arpl
cmpsl
int
or
mov
jb
addr16
clc
stos
js
ret
mov
xchg
xchg
adc
fldcw
sbb
mov
jmp
jmp
hlt
sbb
test
je
aas
xchg
ja
ljmp
xchg
sbb
mov
mov
mov
fstps
push
pop
sub
inc
mov
ss
repnz
fwait
mov
lods
sub
mov
push
imul
pop
rorb
cltd
xor
ja
pop
mov
aas
sub
mov
cmp
push
addl
dec
pop
insl
mov
fwait
mov
das
shll
push
mov
xchg
xchg
xchg
push
xchg
and
fwait
dec
cmpsl
adc
fwait
adc
in
inc
inc
xor
movsl
scas
es
sahf
insl
sbb
mov
jnp
xchg
dec
sarl
and
mov
bound
loope
push
adc
mov
inc
cs
jge
xor
aam
lods
pop
cmp
cmpsb
lcall
xchg
lcall
gs
mov
push
insl
inc
pop
adc
xchg
mov
cli
xor
cmp
lock
icebp
fldt
xor
dec
clc
mov
xor
pop
cmp
in
leave
dec
test
stos
aas
lcall
add
or
mov
inc
mov
and
ja
cmp
mov
addr16
cwtl
jne
or
loope
dec
adc
bound
out
aas
pop
cltd
bound
xlat
sub
sbb
rcrb
push
xor
ret
add
jo
sbb
aaa
xlat
out
jo
push
scas
and
cmp
add
inc
pop
cmc
sbb
pop
cmp
addb
sar
sbb
push
push
xchg
mov
cwtl
inc
mov
ret
push
and
sbb
into
cs
popf
cmpsb
sahf
xor
cmp
mov
aas
arpl
jne
or
adc
ja
jo
mov
pop
pop
cmp
lret
inc
dec
ljmp
xlat
dec
stos
xchg
and
fs
test
adc
xor
jg
xor
push
cmc
mov
sbb
enter
rorb
cmp
adc
test
sub
jecxz
mov
jmp
mov
dec
mov
push
int
xor
lret
stos
pushf
shrl
mov
das
aas
xchg
fwait
cmp
xchg
jne
mov
popf
sbb
sub
divb
aam
dec
jnp
xchg
and
pop
xor
mov
test
ja
sbb
mov
cmp
int
and
xor
push
xchg
pop
xor
cmpsb
xor
pop
in
out
add
sbb
xchg
mov
sub
pop
in
and
pop
sbbl
stos
xchg
sbb
sbb
daa
push
fnstcw
int3
mov
scas
or
into
adc
adc
inc
int
out
insb
in
pop
ret
mov
jmp
ficomps
fiadds
or
or
xchg
push
mov
neg
xchg
popf
sti
xchg
sahf
cmp
test
mov
out
jno
in
dec
jmp
mov
and
fcmovbe
ret
mov
xchg
in
fbld
fisubs
bound
test
add
aas
and
data16
jno
rcr
cmp
les
fwait
dec
jle
inc
or
int
jecxz
mov
xchg
dec
cmpsl
sub
xchg
scas
leave
or
mov
mov
rcrb
test
cmp
jae
cmp
lret
and
cs
mov
jg
push
adc
incl
mov
dec
xorl
adc
adc
frstor
and
lret
int3
enter
xor
adc
mov
sub
xor
xor
outsl
repz
jl
nop
mov
int3
mov
repnz
or
insl
pop
dec
jbe
roll
pusha
sbb
fists
add
shlb
cmp
fwait
es
add
in
lock
inc
fwait
int3
stos
aas
lock
jbe
cld
popf
clc
mov
shll
adc
jmp
jp
jno
cmp
sti
leave
sarb
and
xor
add
incl
mov
add
push
rclb
or
or
psubsb
shlb
or
xor
arpl
mov
sub
push
lds
call
scas
sub
dec
push
mov
stc
out
dec
mov
jge
fs
adc
test
cmpsl
pushf
xchg
sahf
xchg
leave
lea
js,pn
mov
jecxz
or
popf
push
cmp
lea
popa
push
push
add
sub
fsub
nop
out
xor
xchg
jle
adc
lret
sbb
mov
loope
in
loop
cmp
pop
jbe
cld
sub
mov
divb
xor
sbb
fists
push
or
adc
fcoml
sub
add
add
add
inc
mov
mov
lea
jmp
pop
sub
add
clc
or
test
dec
pop
stos
aaa
lret
xor
call
add
pusha
push
and
add
pusha
mov
insb
mov
int
push
pop
mov
pop
xor
popa
xchg
or
mov
xor
or
ja
add
out
or
xor
insb
sub
inc
cmp
fdivr
sahf
push
or
mov
cmpsb
imul
shlb
in
ja
sub
pop
ds
loop
xchg
add
jne
inc
xor
mov
xchg
cmp
adc
icebp
movb
stos
sub
inc
mov
lods
mov
push
mov
pminub
stos
sub
inc
mov
test
out
xchg
sbb
mov
cmpsb
fimull
dec
into
jae
test
nop
xchg
clc
xorb
sbb
adc
lock
xchg
ljmp
sbb
or
es
and
clc
mov
add
aaa
add
or
mov
js
jge
ja
pop
inc
int
ja
mov
clc
inc
jp
insl
std
jp
shlb
or
lds
push
dec
jmp
cld
pop
mov
enter
sub
mov
cmpsl
shr
int3
pusha
out
outsb
fisubl
inc
mov
cwtl
xchg
ret
call
xchg
aas
xor
and
push
movsl
mov
sbbl
icebp
lret
cli
pop
mov
push
mov
pop
sbb
push
and
sub
lret
ja
add
xchg
in
or
aad
pop
mov
shll
xlat
mov
pop
out
cmc
ss
inc
jno
loope
jmp
inc
aas
inc
xor
outsl
dec
push
gs
adc
test
leave
cmpsb
int
aam
inc
mov
enter
push
ret
test
lock
cltd
cmp
aam
cmp
roll
lahf
pushw
or
fsubs
bound
fwait
outsb
add
std
add
daa
jb
in
mov
lahf
mov
cmp
not
fidivs
inc
out
sbb
or
repz
ds
popa
orl
or
adc
dec
dec
daa
jecxz
pop
mov
mov
js
out
and
ds
xchg
insb
fbstp
xor
fs
add
cmc
mov
in
ss
add
sti
jb
clc
rclb
jne
jo
iret
add
adc
jb
pop
std
in
push
testb
mov
sub
push
adc
pop
sbb
jmp
jno
lds
stos
jmp
push
dec
adc
imul
or
mov
mov
lods
mov
imul
stos
xor
out
test
out
add
sbb
mov
shl
aaa
sub
jae
cmpsb
mov
das
leave
xchg
gs
ret
mov
out
and
pop
shl
add
lock
sbb
adc
push
add
pop
pop
mov
sarl
pop
jg
jo
mov
push
int
push
test
push
mov
adc
lods
inc
dec
sub
cli
mov
fldcw
std
mov
add
and
mov
iret
shll
mov
pop
sub
mov
push
xchg
aad
cli
js
or
xchg
mov
push
jl
imul
cmp
aaa
imul
jecxz
lock
jno
xor
adcb
in
sbb
add
and
xchg
dec
jge
push
int3
push
out
cmpsb
lea
push
in
in
lea
fcoms
int3
sub
dec
lds
jecxz
and
pop
sbb
divb
adc
and
mov
adc
dec
inc
sub
movsb
sarb
cmp
mov
in
subl
or
or
mov
dec
subl
stc
dec
dec
sbb
mov
pop
lret
inc
dec
lods
sub
push
mov
mov
into
or
clc
add
xchg
mov
arpl
adc
in
sub
xor
les
xchg
test
inc
inc
lods
mov
mov
and
pop
out
push
cs
and
sbb
ret
xchg
xchg
dec
idiv
xor
and
rcrb
jg
loope
fwait
int
lahf
xchg
mov
movsb
stc
pusha
outsl
lcall
int3
jno
je
mov
push
in
dec
leave
add
sarl
out
inc
je
fdivr
lahf
pop
fbstp
add
sbb
int3
fwait
lock
mov
cmpsl
mov
adc
call
test
or
mov
mov
dec
rorl
loope
mov
ret
es
dec
loop
mov
fsubs
push
or
movb
xor
jne
dec
test
aam
fcoml
push
inc
pop
jb
lret
scas
xchg
and
jge
lea
sbb
add
xor
enter
and
mov
pop
int
test
cmp
rclb
and
out
or
inc
pop
mov
xor
mov
add
push
iret
mov
aaa
mov
sbb
add
mov
stc
test
inc
fstpl
adc
roll
mov
xlat
stos
in
cmpsb
aas
adc
rcrb
ljmp
mov
mov
push
cmp
in
sbb
xchg
push
add
shl
ret
mov
xchg
iret
mov
movsb
pusha
idivl
jnp
bound
aas
loope
xchg
cmp
pop
orl
sub
lods
fstl
cmpsb
ss
imul
rclb
lahf
bound
mov
xchg
jge
rolb
xchg
adc
lock
movsl
push
add
clc
inc
hlt
push
jbe
test
fucomp
fiaddl
pusha
cmp
xor
pop
outsl
loopne
and
fdivl
xchg
add
add
into
jno
mov
sub
mov
aas
js
mov
adc
cmp
xor
clc
lcall
movsb
mov
lock
lret
mov
push
imulb
sbb
cmp
mov
cmpsl
xchg
add
xchg
cmp
mov
enter
into
inc
pushf
fildl
ficompl
adc
jae
imul
cmp
adc
loop
push
push
jmp
and
stos
adc
inc
hlt
imul
call
cltd
push
subb
inc
mov
and
pop
xchg
cmp
nop
pop
mov
fimull
out
popf
loopne
mov
cmp
stc
push
dec
mov
movb
xor
mov
dec
cmp
outsl
lods
push
pop
cmp
jmp
xlat
loop
das
in
filds
and
inc
mov
pop
aad
xchg
sbb
dec
stos
pop
out
stos
jmp
sahf
xchg
push
jae
mov
push
sbb
xchg
mov
cmp
mov
cmp
pop
icebp
ja
pop
sub
adc
jnp
scas
and
xchg
add
pop
je
mov
xchg
cld
dec
xchg
mov
adc
inc
rcrb
add
xchg
fucomp
int
and
hlt
loopne
icebp
fs
xor
cmpsb
or
mov
nop
push
sbb
jno
pop
data16
cld
and
outsb
daa
mov
jmp
add
push
popf
jb
addb
stos
mov
movsl
lods
mov
aam
cli
sbb
fcmovbe
sti
push
xor
jo
mov
rcr
cmp
lret
mov
ret
mov
ljmp
sub
out
push
jns
sbb
xlat
add
jne
pop
rcrb
fnstcw
lods
mov
adc
jge
test
cmc
cmp
lock
mov
aaa
jno
lret
mov
rolb
add
mov
push
jbe
lock
jnp
push
stos
mov
dec
testl
nop
xor
inc
data16
cltd
adc
mov
popf
inc
lock
ja
loope
js
mov
add
stc
insl
adc
loope
sub
lret
xlat
mov
mov
jp
mov
insb
data16
mov
fcoml
fidivs
dec
adc
push
push
jle
xchg
sub
jmp
pop
insl
cmp
cmp
out
movsb
mov
or
xlat
sub
lret
push
mov
sub
cmp
rolb
mov
lea
cmp
or
pop
mov
test
in
sub
dec
inc
dec
push
fs
mov
addr16
imul
int3
cmp
and
orl
adc
xchg
fwait
cmp
add
fs
and
idiv
mov
rcr
xchg
popa
in
xchg
frstor
dec
mov
imul
inc
cmp
enter
push
adc
ret
add
jge
cwtl
jb
xchg
jne
stc
lcall
and
aaa
in
jmp
call
nop
idivb
mov
das
jno
or
cmc
sbb
jbe
and
or
out
mov
pop
push
inc
scas
mov
and
test
cmp
sarb
dec
xor
dec
inc
rclb
test
mov
das
imul
mov
stc
or
enter
push
dec
and
mov
jg
lea
and
and
push
mov
push
mov
test
xchg
int
push
cmpsl
in
les
fisubrs
leave
adc
cmp
cli
sbb
dec
sub
adc
sbb
or
cs
xchg
shlb
sahf
enter
roll
sbb
mov
popa
roll
bound
dec
pop
push
insl
psubusw
psubd
cwtl
imul
in
fadds
mov
inc
imul
nop
stos
mov
int
push
popa
dec
mov
cwtl
add
cmc
out
sub
mov
mov
xchg
adc
iret
push
arpl
sbb
cwtl
and
xor
orb
out
mov
jno
cmp
iret
arpl
jae
fadds
lea
in
out
cmpsb
jg
add
mov
jbe
shrl
in
xor
daa
jno
jbe
xorb
stos
jp
xchg
fidivrl
insb
mov
ds
jp
inc
cli
jp
push
loopne
call
inc
mov
mov
je
out
mov
mov
mov
repz
call
cmp
es
push
popf
add
jb
fstp
scas
lret
xor
les
or
loopne
shl
push
out
in
push
push
scas
mov
and
push
jnp
jns
sbb
mov
popa
add
pop
pop
or
cmp
out
or
dec
popf
add
andb
stc
cmp
fwait
cmp
std
dec
pop
jle
cmpb
cmpsb
xchg
fidivrs
ljmp
mov
sarw
sbb
pop
jle
mov
shlb
dec
cltd
cmp
mov
cmp
push
sti
ja
repnz
out
ss
inc
or
xchg
jnp
inc
cmp
popa
inc
decl
adc
in
lcall
fmuls
leave
push
cltd
mov
push
jae
outsb
pop
xor
or
jg
pop
pop
adc
xor
xchg
mov
stc
pop
xchg
cmp
enter
movsb
bound
cmp
mov
or
in
cmpsb
dec
cvtps2pd
mov
xor
adc
jg
push
sbb
sbb
or
fsts
push
mov
mov
iret
jb
cmp
push
add
imul
movl
sub
out
rcl
add
sbb
mov
add
sub
jae
shlb
cltd
outsb
mov
push
fucomi
mov
je
pop
xchg
mov
dec
popf
cld
push
nop
jb
repnz
push
into
sbb
imul
lods
js
call
xor
int3
inc
pop
cli
dec
sbb
sbb
rol
jo
pop
mov
sbb
mov
ret
icebp
jne
add
out
jmp
cs
mov
xor
fcmovne
push
sbbw
jbe
push
bsr
jmp
xor
inc
push
pushf
rcrl
lcall
lods
lods
mov
pop
sub
addl
sbb
sti
cltd
js
rcrb
daa
cmp
add
insb
mov
push
adc
fmull
movsb
mov
push
mov
outsl
xchg
inc
clc
mov
sub
jo
outsb
lock
mov
icebp
pop
mov
scas
in
jb
cmp
and
out
mov
and
jmp
das
loopne
je
jmp
pop
push
mov
clc
fwait
xchg
out
cwtl
out
mov
add
addr16
xor
jp
jnp
leave
inc
ret
mov
xorl
xchg
xchg
lcall
test
repz
std
pop
jne
out
into
testb
pop
aad
jp
adc
xorl
add
mov
js
dec
lock
das
les
pusha
cmp
repnz
cmp
sbb
inc
pop
fdivrs
arpl
push
addr16
pop
test
icebp
pop
ret
cmp
fs
pop
jcxz
mov
dec
call
cmpsl
lcall
outsb
pop
pop
aaa
movsb
adc
dec
mov
jp
inc
dec
iret
addl
xchg
dec
lret
mov
mov
cmpsl
fldl
int
push
lret
out
xchg
int3
push
iret
mov
cld
in
adc
mov
add
pop
sub
mov
xchg
andl
add
subl
outsb
mov
mov
mov
pop
pop
orl
enter
shlb
fiadds
fcomps
fists
and
jl
jmp
arpl
xor
sub
imul
cmp
mov
out
ret
popf
xor
mov
gs
je
xor
pop
cli
in
std
lods
fadd
call
mov
mov
lahf
push
movsb
incl
mov
push
jne
push
mov
icebp
es
ds
push
dec
or
pop
mov
sub
cmpsb
mov
push
pop
pop
cmc
mov
ds
jne
rcr
pop
add
xor
xor
decb
movsl
popf
sbb
and
add
adc
sub
inc
addl
repnz
push
movsb
jnp
fcoms
dec
into
cld
dec
popa
cmp
insl
cmp
cltd
iret
mov
pop
sbb
lahf
and
ja
es
fwait
pop
mov
mov
inc
inc
dec
mov
mov
outsl
inc
pop
iret
cmp
mov
outsb
xchg
jno
test
int3
xor
xor
mov
loopne
ja
enter
sbb
mov
jb
mov
mov
jae
push
jbe
scas
loop
cmp
inc
push
aaa
jmp
stc
in
icebp
jne
mov
nop
cld
bnd
dec
add
add
es
mov
mov
ret
fucomip
mov
ja
out
out
int
lods
sub
pop
data16
xchg
xor
lret
sbb
ds
sbb
pop
dec
cmp
add
sbbb
int3
shlb
jge
cmpsl
push
mov
inc
iret
xchg
cmp
fimull
jg
cmp
mov
xor
clc
xor
imul
dec
iret
cmp
int3
push
imul
pop
stos
mov
mov
inc
shll
in
xorl
test
adc
and
out
sbb
les
xor
int3
sbb
lods
imul
incl
and
mov
inc
sub
lods
in
sbb
push
orl
fsts
movsl
roll
pusha
xchg
sbb
lock
shr
icebp
dec
stos
test
out
bound
and
ret
and
jle
adc
sti
mov
mov
xchg
xchg
push
mov
cld
jecxz
imul
cmp
jbe
idivb
or
jg
fwait
ljmp
ret
fisubrs
inc
add
sub
test
nop
inc
pop
push
int
leave
pop
jl
add
sbb
or
mov
sub
sub
xchg
das
add
xchg
test
push
jnp
xchg
jnp
je
push
push
mul
out
fnstcw
xchg
mov
pop
iret
scas
aas
and
mov
add
pop
lcall
add
mov
xchg
clc
ds
jne
dec
inc
push
cmp
and
pusha
je
add
adc
mov
add
lret
lahf
das
call
cmp
jns
fldt
jmp
pop
movsl
jmp
cs
stos
cmpl
and
lret
packuswb
les
outsl
aaa
and
and
in
in
xchg
leave
icebp
aas
loop
inc
mov
testb
inc
repnz
jecxz
imul
lret
mov
std
mull
xchg
lret
and
add
or
add
rcr
jno
into
inc
int3
mov
or
cmp
sub
cli
les
jp
push
mov
mov
jbe
jle
sahf
mov
mov
rcr
movsb
cmp
mov
adc
inc
mov
dec
dec
out
sub
dec
mov
push
xlat
daa
lahf
push
movsl
movsl
imul
mov
mull
inc
pop
in
add
xor
ret
sahf
std
jns
inc
fdivrl
mov
cmc
movb
sub
ja
notl
pop
int3
mov
mov
xor
repnz
pop
sbb
pop
int3
jnp
pop
cld
cmpsl
in
dec
xor
lock
sub
clc
sahf
push
test
repz
sbb
movsb
aam
idivl
in
mov
sbb
fistpl
sbb
jno
loop
push
stos
cmc
inc
pop
repnz
push
sbb
cmp
jmp
jl
cwtl
xchg
test
push
sub
dec
mov
shlb
repnz
dec
adc
pop
xlat
lock
div
call
pop
fistpl
iret
aas
jl
pop
scas
pusha
jns
dec
mov
mov
mov
or
xchg
les
dec
je
fs
cli
xor
clc
xor
cmpsl
out
push
pop
or
mov
mov
in
cmp
dec
jmp
imul
xor
xchg
push
daa
xlat
loope
jle
stc
cmpsb
cmpb
or
mov
decb
sti
mov
cwtl
stos
jo
in
insb
cmovne
push
fsubl
xchg
pop
pop
jno
aam
fmull
push
pop
mov
mov
xchg
cmp
scas
and
adcb
mov
mov
adc
mov
arpl
jmp
not
mov
test
pop
jae
inc
in
xor
or
lods
push
inc
mov
dec
test
out
insl
out
push
test
decb
lea
jmp
out
idiv
sbb
fldt
sbb
mov
mov
mov
nop
fnsave
lods
test
cmc
jl
out
mov
cmp
fisubl
inc
mov
xor
aam
jp
imul
pop
andb
sub
push
jge
fisttpl
and
mov
outsl
cmp
mov
sub
rcrb
lods
push
pop
cs
mov
push
int3
aas
mov
dec
xchg
jno
lea
fwait
add
out
mov
and
mov
arpl
mov
aam
insb
rorl
out
into
inc
add
lcall
xchg
sahf
or
cmc
outsb
mov
ror
sbb
dec
inc
cld
mul
in
jmp
sub
les
into
imul
loop
shll
push
pop
push
push
rclb
test
je
mov
std
jge
xchg
push
push
sbb
addr16
cmpsb
dec
pop
arpl
cmp
arpl
and
sbb
cmc
stos
out
push
mov
cmp
sub
xor
pop
adc
dec
pop
aas
incb
xor
cmc
lcall
mov
mov
fucomi
dec
jbe
xchg
int3
cmp
enter
mov
xor
adc
lret
fcmovb
fwait
add
or
cmp
mov
daa
and
lods
pop
popf
push
dec
push
sbb
pop
repz
push
call
filds
mov
rcrb
jnp
jb
push
in
daa
in
sub
jmp
iret
sbb
push
pop
pop
mov
loop
ljmp
mov
roll
pop
sub
push
shrb
pop
jmp
hlt
in
js
shl
push
lahf
sbb
adc
inc
dec
mov
fbld
movsl
and
push
cmc
sbb
inc
loop
adcb
push
and
cmp
js
je
mov
ss
mov
jg
notb
mov
push
cmp
cmp
lret
adc
add
lea
and
push
shl
sbb
inc
sar
mov
jle
xlat
inc
cmpsl
aas
cmp
leave
fldt
scas
pop
dec
xorb
pop
and
int3
mov
into
mov
push
mov
pushw
pop
cmp
adc
ljmp
mov
cli
jb
add
dec
test
or
mov
repnz
cmp
sahf
cmp
pop
mov
sbb
push
mov
in
xchg
leave
frstor
sub
lods
mov
inc
aad
rcrl
adc
aad
cmp
sbb
outsb
jmp
pop
pop
adc
push
cwtl
push
aaa
jns
dec
jle
sub
test
adc
js
leave
std
or
repnz
cmp
les
adc
push
or
aas
and
cltd
shl
pop
jge
les
sub
mov
sbb
loopne
and
dec
das
fucomip
add
sub
gs
aaa
std
leave
dec
adc
push
sbb
mov
dec
outsl
cs
adc
pop
out
or
xor
cmpsb
or
mov
adcb
fisttps
sbb
push
dec
fwait
subb
mov
jno
push
call
stc
adc
push
stos
jbe
pusha
mov
out
inc
pop
jp
inc
pop
adc
or
push
inc
fisubs
xchg
clc
int
dec
iret
mov
test
cs
and
div
jge
aaa
push
or
cltd
repnz
roll
je
clc
test
jle
stos
mov
ja
mov
cmp
ljmp
dec
xchg
cmp
add
stos
gs
das
cmp
sub
and
arpl
fdivrl
fwait
mov
xlat
xor
roll
xchg
cmpsl
mov
mov
cmpsl
or
int
pusha
into
enter
rolb
rorb
or
sub
mov
pop
mov
inc
test
xor
getsec
stos
xchg
pushf
sbb
mov
cli
dec
jb
mov
xlat
add
mov
in
pusha
mov
adc
push
jmp
mov
mov
cmp
push
jb
add
inc
ret
popl
adc
sbb
out
pushf
int3
into
mov
icebp
jg
sub
cmp
cmp
fdivl
cmpsb
add
mov
jmp
andl
mov
mov
insb
xor
ja
lcall
int
leave
sbb
mov
inc
xor
sub
sbb
imul
lcall
cmp
xchg
and
ret
cmp
fadds
das
iret
mov
mov
inc
pushf
add
mov
fsubs
push
aam
out
fildll
xchg
mov
mov
or
mov
fistpll
xchg
inc
aam
jmp
fistl
andb
int
mov
adc
pop
xchg
mov
aad
notl
sbb
cmpsl
jg
es
cmpb
add
insl
test
sub
aaa
and
mov
and
sbb
invd
dec
pop
xor
xchg
cmc
mov
out
ror
adc
inc
push
push
sub
or
cld
faddl
mov
inc
movsl
mov
adc
jbe
in
outsb
pop
stos
cmp
push
and
stc
mov
adc
outsb
or
gs
pop
stos
mov
mov
test
xor
or
adc
pinsrw
jle
std
inc
std
push
movsl
sub
jmp
cwtl
test
dec
push
out
mov
dec
cmp
cwtl
shr
sub
test
leave
fiaddl
mov
cmp
negb
inc
mov
and
adc
inc
jp
xchg
and
out
cli
push
decl
xchg
xor
mov
leave
mov
in
xchg
pop
test
mov
xor
push
neg
dec
push
push
dec
movsb
sub
or
pop
push
mov
mov
sub
inc
mov
out
into
mov
push
subb
push
scas
es
rcrl
outsb
xor
jmp
mov
dec
jmp
pop
jp
movsb
lret
push
pop
aas
or
jne
pop
pop
inc
pop
sbb
cmp
data16
pop
sbb
or
mov
faddp
pop
jo
mov
sbb
inc
xchg
cwtl
or
je
lods
dec
adc
mov
jbe
loope
rcrl
gs
and
idivl
out
sub
loopne
je
test
xor
mov
inc
mov
mov
sub
dec
and
add
lock
icebp
mov
sahf
ja
enter
mov
inc
insl
pushf
push
mov
mov
lret
mov
xchg
jge
jge
sbb
shl
hlt
inc
fldenv
sub
lods
lods
sarb
pop
mov
cmp
test
inc
stos
test
addr16
popa
test
out
push
dec
and
lret
dec
stc
jne
cmpsb
sti
add
mov
and
add
sub
stos
cmp
cmp
add
pop
xor
push
lahf
dec
fucomp
push
dec
sub
lahf
aad
test
scas
sub
repz
or
lcall
mov
push
jp
xor
jne
sub
mov
xor
and
mov
or
sbb
fs
int
sbb
jae
outsb
push
dec
mov
cmp
cmpsb
ret
mov
insb
cmp
mov
orb
in
ljmp
pushf
xor
cltd
shrb
inc
jno
in
into
in
or
mov
xchg
sbb
test
adc
adc
push
mov
les
xlat
scas
cwtl
mov
push
pusha
dec
pop
xchg
fwait
icebp
mov
jne
or
in
lcall
es
lahf
in
add
jno
pop
div
push
jb
mov
mov
lcall
xlat
jo
call
jecxz
cmp
sbb
test
sub
push
fdivl
adc
xor
mov
cmp
fcompl
addl
fwait
adc
push
mov
jnp
xchg
test
pop
pop
loope
pushf
test
sti
push
arpl
dec
pop
jl
or
inc
add
fwait
dec
mov
pop
cltd
jns
loop
pop
push
push
or
imulb
push
enter
shll
ja
movsb
stc
imul
jns
pop
adc
orl
dec
mov
add
push
dec
mov
jge
adc
xchg
pop
ret
ja
xchg
mov
mov
in
pop
xchg
push
popf
sbb
jle
loop
fisubl
sbb
jp
add
cwtl
pop
xor
jmp
loope
or
lret
jae
in
jmp
das
xor
inc
jbe
fdivr
sbb
dec
into
pop
xor
loopne
enter
push
xor
loopne
mov
int3
and
xor
bnd
sbb
divl
or
sbb
popa
pop
adc
pop
in
sub
in
lods
push
mov
inc
push
xchg
pop
loopne
stos
jg
fcmovbe
jg
call
stc
addr16
jge
scas
inc
push
and
cwtl
and
enter
divl
mov
in
jp
je
xor
sbbb
cmpsl
jae
push
pushf
adcl
test
popf
jg
and
test
sbb
xchg
les
push
adc
xor
addr16
jecxz
lcall
jge
shl
jmp
test
flds
pop
int
aad
pop
adc
pop
sahf
ja
insb
pop
mov
inc
mov
sub
shlb
stos
mov
dec
sub
int
cmp
add
push
jl
add
inc
testl
pop
jg
ficoms
test
mov
test
out
xchg
pop
insb
add
test
xorl
add
xor
and
pop
test
fsubrs
xor
outsb
popa
inc
pop
cmp
lods
imul
pushf
sub
mov
cmp
cmp
aad
fisubs
js
insb
push
inc
xor
into
gs
repnz
push
jno
cmpb
fdivp
ret
push
xchg
mov
hlt
lods
icebp
insl
mov
cmp
sub
aas
pusha
test
dec
out
mov
cli
lds
pusha
mov
pop
add
mov
mov
or
xchg
dec
jne
dec
mov
out
jae
clc
mov
lea
adc
loop
adcb
in
insl
inc
fwait
pop
dec
lock
ret
das
xchg
jge
sarb
inc
add
sbbb
mov
stc
mov
xchg
test
insb
in
adc
call
stos
push
stos
mov
fsubp
and
mov
cli
cs
outsb
lahf
hlt
frstor
pop
xchg
popl
filds
scas
lret
movsb
enter
fnsave
out
movsl
jo
in
adc
cmc
push
mov
push
bound
cmpsb
sbb
lds
ds
mov
xor
pop
cmpsb
pop
clc
fildl
repnz
cmc
pusha
sub
stc
adc
movsb
cmc
inc
in
push
repz
push
cmp
mov
jp
fwait
aam
xchg
mov
add
aad
out
out
and
sbbb
stos
adc
sub
push
sti
pop
mov
mov
mov
xchg
or
cs
test
mov
jb
and
repz
shll
jbe
pop
pop
pusha
xchg
outsb
push
cli
add
cmp
sbb
mov
sbb
fisubl
push
leave
lea
mov
jne
test
setb
xor
mov
aam
xchg
lock
inc
dec
inc
test
jbe
jp
insb
nop
std
push
ss
outsl
test
ficompl
jp
push
je
jns
xlat
and
xlat
mov
sub
test
cltd
mov
mov
add
pshufw
out
dec
jo
cmp
adc
push
out
mov
adc
or
enter
cltd
push
sbb
ret
xor
into
dec
lods
or
jmp
adc
push
notl
ja
or
adc
loope
pop
jns
and
jb
mov
lds
fnstsw
mov
cmc
jne
test
decb
data16
stos
fcomip
js
repnz
stc
jle
adc
and
or
adc
lods
das
fcoml
nop
lahf
xchg
sahf
outsl
icebp
jl
int
add
in
addr16
or
xor
cmpsb
pop
lea
leave
xor
add
sahf
pop
mov
cmp
in
dec
dec
stos
pop
inc
mov
ret
add
stos
fistpll
cld
adc
fnstenv
movsb
jp
jno
mov
jns
mov
mov
jp
jno
mov
jl
push
cld
mov
into
lds
mov
test
push
mov
fs
bound
sti
and
out
stos
cmp
js
test
jo
sbb
mov
mov
cmp
pop
mov
push
sbb
push
inc
dec
call
sub
mov
stc
dec
cmovb
movsb
enter
push
and
sbb
es
mov
fsubrl
xchg
push
sahf
xor
mov
sti
ret
xor
pop
stc
pop
add
cmp
aaa
ret
pop
enter
jb
jmp
fucom
cmc
ret
jb
cltd
pop
enter
xor
sub
xor
imul
test
inc
dec
scas
out
push
xchg
rorb
add
and
pusha
pop
jp
jecxz
mov
sti
jbe
sbb
int
movsl
aas
int3
lods
adc
jecxz
jae
stos
push
call
inc
aad
into
gs
dec
push
pop
insb
xor
mov
out
xor
dec
and
add
scas
jb
adc
pop
jae
xor
add
lret
jp
dec
xor
add
fisttpll
in
fistl
cmpsl
cmp
lods
mov
cmp
into
ljmp
and
xchg
pushf
dec
fdivrs
and
jmp
addr16
lods
mov
imul
inc
ljmp
gs
jne
aam
mov
dec
loop
out
adc
shl
mov
xor
std
mov
ja
or
popa
or
cs
imul
adc
sbb
cmp
rcr
and
jne
cld
jo
push
sbb
jb
inc
mov
jbe
stc
jns
repz
arpl
cmc
dec
and
mov
into
aaa
push
popw
arpl
testb
jo
bound
les
mulb
inc
mov
stos
xchg
jp
jns
sbb
ja
dec
mov
add
pusha
test
sbb
dec
or
pop
idivl
lret
in
pop
or
jle
aas
loop
add
inc
pop
push
lods
and
inc
insb
and
jecxz
jle
mov
movsl
hlt
gs
push
mov
mov
add
or
in
div
les
in
and
int
das
into
test
roll
mov
das
push
popa
mov
inc
int
pushf
loop
fs
cld
aas
pop
loop
sarb
inc
pop
sbb
dec
lcall
inc
jns
push
je
popf
mov
pop
push
or
ficomps
mov
jg
aas
lock
incl
add
mov
rcl
insb
roll
hlt
mov
imul
push
mov
stc
call
pop
nop
imul
mov
in
out
sti
ret
add
mov
push
mov
jmp
inc
lea
xor
jmp
lret
pusha
xor
mov
loope
sub
aad
mov
leave
int3
xor
cmpsb
or
add
shlb
jbe
xor
inc
or
emms
cld
lds
je
loopne
mov
dec
dec
push
add
addr16
mov
or
inc
and
into
push
int3
gs
mov
mov
inc
xor
sysexit
lods
rcrb
jo
cltd
fucomip
bound
mov
cmpsl
into
mov
cmpsb
xor
pop
or
rorl
mov
jl
nop
in
mov
test
test
imul
add
int3
adc
push
fwait
mov
lcall
mov
xchg
sti
imul
push
cmp
out
dec
fists
mov
fwait
lcall
xor
sub
popf
popf
cwtl
in
jecxz
test
dec
test
mov
sub
sbbl
jp
xlat
and
ja
xchg
xchg
sub
aas
xor
or
xchg
adc
test
add
push
add
add
mov
cmc
stc
push
in
in
sti
push
pop
lock
lret
xorb
jb
cmpb
xchg
adc
add
stos
mov
mov
or
daa
cltd
mov
aad
pop
lea
lods
in
or
rcr
mov
sub
into
cwtl
das
sub
push
xchg
fldl
aam
mov
lret
insl
sub
sbb
lods
stos
inc
push
push
mov
mov
push
movsl
cmpsb
cmp
shll
inc
out
icebp
lods
fmull
std
lcall
lods
inc
imul
aas
sbb
adc
and
push
add
pop
mov
dec
mov
fwait
mov
arpl
pop
stos
jns
cli
test
jl
ror
add
pusha
xchg
or
pop
cmpsb
or
cltd
inc
test
sbb
jge
sub
mov
mov
cmp
mull
subb
jne
ja
iret
cmpsl
jnp
movaps
les
shll
repnz
inc
or
out
push
out
fbld
subb
pop
mov
lods
pop
fisubrs
hlt
xchg
sar
loop
mov
xor
movsl
adc
movsl
xchg
sahf
xor
test
out
sti
mov
pop
nop
push
lods
sbb
jp
xchg
pop
mov
mov
aad
xor
dec
add
repz
clc
das
or
push
je
push
push
mov
pop
insb
jne
inc
dec
bound
dec
fadds
inc
or
mov
sti
xchg
xor
rcrb
xchg
aaa
ja
sbb
pop
aaa
cmp
clc
fsts
xor
lock
in
ror
mov
xor
test
stc
popa
cs
xchg
adc
mov
cmpl
jmp
push
cmp
outsb
dec
sub
push
mov
test
das
pusha
xor
xchg
dec
push
sbb
enter
jl
aad
push
sti
adc
add
push
cltd
repnz
push
sbb
pop
inc
xchg
in
and
cmc
xor
pop
out
xor
push
popa
pusha
loop
dec
dec
mov
mov
mov
or
out
mov
dec
pop
rcll
call
cwtl
lea
xlat
xchg
js
xchg
mov
shll
cmc
pop
out
mov
out
sbb
rcll
push
or
orb
cmp
xchg
stos
xor
in
adc
sub
loope
sbb
bound
sbb
adc
popa
mov
stos
icebp
ds
push
sbb
xchg
lcallw
aaa
fld
stos
rcll
inc
je
ret
sar
test
test
cld
push
stc
outsl
dec
jno
mov
push
or
mov
ret
pusha
cmp
adc
adc
pop
xor
mov
xor
jae
mov
push
push
scas
shl
pusha
in
fsubp
cmp
cmp
dec
xor
outsb
xchg
ret
pushf
or
jns
cs
sti
scas
add
cwtl
cmpsb
incl
mov
loope,pn
cmp
in
stc
fistpl
cmp
xchg
and
inc
call
sub
sub
ss
sbb
cs
outsl
sub
adc
add
test
push
test
xchg
push
pop
movsb
insl
jecxz
jne
popl
sti
sbb
test
adc
xchg
out
je
cmpsl
inc
adc
sti
cwtl
mov
ret
xchg
fisubs
repz
and
loop
aam
out
addb
push
cmpsl
mov
inc
mov
dec
stos
or
sub
pop
sbb
mov
push
jns
rorb
testl
daa
push
fidivrs
and
push
mov
adc
lock
lea
jnp
sub
iret
xchg
negb
sub
notb
inc
adc
rcrb
inc
cmp
dec
xor
xchg
adc
push
mov
mov
mov
jle
or
loope
push
test
js
xchg
xchg
dec
call
insl
dec
out
lret
imul
and
push
sub
or
jo
aad
out
mov
bound
rcl
je
pushf
cmp
mov
push
xor
subl
sarb
add
mov
pop
mov
mov
push
push
imul
cmp
jne
adc
mov
pop
jae
das
data16
mov
out
inc
dec
add
out
and
cmpsb
sub
ja
cld
sub
jo
je
outsb
insb
jo
sub
pop
stc
cs
iret
pop
dec
jbe
sub
mov
pop
aam
arpl
inc
mov
pop
adc
mov
into
inc
add
add
test
push
inc
mov
lods
and
push
cli
out
aam
or
xchg
enter
pop
adc
and
mov
inc
cs
mov
mov
je
jp
idiv
addb
clc
rcl
setp
iret
int
sub
pop
loopne
scas
or
inc
sub
mov
xor
mov
nop
mov
cmpsb
sub
dec
mov
int3
pop
add
mov
inc
jle
sarb
pop
jb
xor
jge
inc
sarb
test
add
scas
ret
push
cmp
and
ret
lret
cmpl
divl
mov
fwait
mov
in
popl
cli
xchg
adc
and
pusha
inc
inc
mov
inc
mov
jecxz
and
or
add
data16
fcoms
pusha
pop
lcall
xchg
jno
jle
xor
je
mov
loop
popa
hlt
repz
dec
stos
fcomip
ds
andb
notb
mov
mov
sub
cmp
mov
add
enter
aas
sbb
push
or
cli
ja
dec
inc
cli
fisubs
fs
nop
xchg
outsl
in
pop
sbbl
mov
xchg
fwait
gs
lret
or
mov
stc
xchg
xorb
push
mov
lods
push
mov
cmp
sub
mov
cmpsb
mov
pop
shll
pop
call
sti
cmp
lahf
xlat
inc
sbbl
sub
mov
not
lods
mov
sbb
or
rcrl
or
xchg
and
bswap
xchg
add
data16
xorl
sbb
call
mov
add
bound
mov
mov
pop
inc
stos
rol
jo
jmp
adc
pop
mov
cmpsl
ret
adc
pop
cmpsl
lea
inc
rorl
loop
lea
inc
push
mov
jmp
loope
imul
xchg
inc
sbb
adc
outsl
xchg
or
push
mov
fucomi
jg
inc
xor
jl
mov
jnp
pop
or
xor
add
stos
outsb
outsl
fsts
pop
dec
orl
pushf
in
out
sbb
xchg
xchg
testl
sbb
jns
mov
je
repz
leave
mov
shr
insl
out
sub
push
iret
push
lock
pop
movsb
popa
imul
movsb
mov
jl
mov
sbb
and
cld
jp
dec
mov
push
aad
out
lahf
pop
add
sub
aam
add
ljmp
cwtl
pusha
pushf
pop
movsl
jmp
mov
pop
psubsb
pushf
sbb
xlat
push
push
dec
cs
lcall
push
mov
jne
enter
mov
adc
cmpsl
cld
mov
xchg
aam
cs
dec
adc
es
inc
outsl
sbbb
cltd
in
das
jl
push
test
xchg
aaa
fcomp
push
stos
mov
xchg
iret
dec
pop
mov
add
sub
push
add
imul
mov
pop
mov
xchg
sub
lea
add
jno
pushf
pop
imul
scas
testb
sub
jb
cli
das
ret
sbb
dec
pop
loopne
mov
and
add
ja
pop
hlt
or
lret
mov
sub
jmp
pusha
xor
mov
jecxz
xchg
ljmp
icebp
andb
mov
jb
mov
xor
push
mov
in
add
orl
cmp
hlt
mov
sbb
xchg
jle
inc
sbb
pop
xor
cmpsb
push
cmpsl
dec
dec
fisubl
xor
add
iret
mov
sti
xchg
push
roll
je
xchg
scas
sub
jno
mov
fisttpl
arpl
mov
push
ljmp
jp
insb
fsincos
jmp
into
push
js
inc
loop
mov
and
cld
fistl
pop
imul
push
or
std
ret
inc
fstpl
mov
inc
cmpsl
xlat
movsb
test
lcall
jmp
mov
aam
push
outsl
xchg
mov
loope
inc
ljmp
cmp
lret
sahf
gs
outsb
cwtl
rcr
or
pop
jle
xchg
pusha
in
mov
xor
add
div
mov
mov
int3
cmp
incb
out
outsl
repnz
jnp
xor
stos
push
mov
outsl
sub
mov
mov
xchg
cli
not
jns
adc
pop
lret
push
xor
sub
loope
shrb
ds
pop
hlt
sub
bound
and
int3
imul
mov
add
add
lods
pop
xchg
lret
dec
xor
xchg
push
jmp
adc
or
shrb
xchg
jno
jo
adc
jo
jno
testb
hlt
mov
ja
xor
sbb
adc
mov
fcomps
aaa
cld
xor
mov
cmpsb
stos
push
decb
cmp
sbb
clc
jg
push
repz
dec
lret
int
inc
push
sbb
inc
mov
call
push
and
scas
aaa
xchg
into
mov
in
jne
cltd
and
dec
popf
mov
mov
mov
lods
mov
push
out
pop
imul
sub
adc
cmc
or
cld
rorl
and
cmp
push
push
mov
mov
adc
jne
test
sub
ficomps
jno
cld
cmp
mov
cwtl
mov
jecxz
xchg
cmp
jae
sbb
xchg
fsubl
outsb
bound
popa
cmp
xchg
addb
js
xor
pushf
add
mov
inc
enter
inc
aam
out
pop
lds
mov
shlb
push
cwtl
adc
arpl
cmp
mov
mov
mov
push
jb
jl
arpl
lock
loope
add
pop
mov
cmp
pop
in
int3
push
lahf
mov
sbb
fs
rorb
pop
lret
ret
xchg
jl
inc
lret
adcb
cld
fisubs
mov
inc
or
cmpsb
sti
pop
inc
sub
stc
adc
ja
ljmp
inc
push
push
popf
cmpl
pop
xor
cli
gs
fisttpl
mov
xchg
mov
pop
in
push
inc
ror
xchg
adc
in
xor
out
rcl
ja
dec
adc
and
and
xchg
and
add
mov
je
inc
push
adc
je
or
and
outsl
pop
xchg
sub
xor
mov
pop
iret
xchg
pcmpgtw
jae
fs
lods
rclb
pop
stos
xor
dec
push
hlt
dec
push
mov
pop
aaa
dec
cltd
out
imull
adc
fs
dec
scas
fldcw
push
xchg
xchg
or
movsb
push
xor
mov
inc
jo
or
xor
pop
mov
test
xchg
pop
int
mov
push
testb
add
mov
and
mov
std
or
cmp
ss
subb
dec
lret
cmp
mov
les
cmpsb
mov
andl
jmp
leave
cs
inc
mov
jb
jnp
shlb
out
cmp
sar
mov
cmp
aad
movsb
repnz
test
inc
popf
jmp
inc
adcb
lcall
enter
cwtl
aam
xorb
scas
arpl
xchg
into
adc
es
shlb
das
mov
jbe
test
popf
dec
push
adc
add
dec
push
lock
cmp
in
out
pop
jnp
popa
leave
jo
lcall
shlw
ja
mov
cmp
jg
inc
iret
cmp
enter
add
jl
fldl
cmp
pop
xchg
lds
int
xchg
insb
jbe
pop
mov
mov
aad
arpl
jl
je
js
or
fwait
mov
insl
mov
push
rcrb
pop
and
cmc
aaa
push
mov
notl
shrb
push
mov
repnz
ljmp
in
push
push
xchg
daa
jne
lahf
cmp
cmp
dec
stos
sarl
add
sbb
push
mov
adc
sbb
vpcmpgtb
pop
push
dec
mov
sbb
mov
stc
je
add
leave
jmp
movb
loopne
ret
dec
and
int
cmc
dec
xchg
in
insb
repz
sub
fcmovu
cs
mov
xchg
mov
xchg
dec
lea
fisubrs
add
rorb
jne
and
add
divb
add
mov
cmpl
dec
cli
cmp
pop
xchg
stos
lahf
in
int3
mov
jmp
dec
loopne
rclb
jb
push
dec
xor
push
fcom
aas
scas
fwait
scas
in
movsl
mov
out
push
cmc
mov
rclb
inc
inc
push
adc
int
scas
repz
mov
mov
rclb
or
movsb
xchg
cs
inc
arpl
int3
mov
dec
call
xor
cmp
sti
mov
repnz
lahf
cmp
xor
les
push
cwtl
mov
xchg
inc
xchg
lock
xchg
das
xchg
ja
mov
push
push
xchg
imul
aad
aas
decb
push
mov
or
in
test
xor
mov
pop
leave
lock
mov
sub
fstpt
cmp
cmp
repz
or
lret
out
pop
jae
fs
insl
mov
mov
pop
cltd
in
hlt
das
and
fcmovbe
adc
add
clc
add
movsb
xchg
adc
pop
ljmp
or
push
or
roll
dec
jno
lods
imulb
mov
outsb
or
ss
mov
lods
mov
iret
stc
dec
arpl
loope
mov
xor
xchg
xor
adc
xor
insl
dec
dec
ljmp
xchg
push
lea
xchg
xorb
sub
adc
jb
incl
xor
xchg
fwait
lods
push
adc
loop
push
xchg
fwait
sub
jl
jmp
in
aad
mov
bound
flds
je
bnd
jb
mov
sub
mov
gs
repnz
js
and
lcall
rorl
mov
lock
imul
shrb
aam
fbld
loop
scas
imul
mov
fs
add
or
js
lcall
dec
sbb
sbbl
inc
stos
push
out
in
push
mov
jne
mov
cmp
cmp
adcb
dec
jns
adc
loope
test
repnz
or
jmp
pop
movsb
scas
aad
add
fcoml
imul
fs
aad
xchg
mov
mov
dec
adc
pop
mov
cmp
fs
mov
sbb
push
pop
fildl
inc
pop
stos
xor
pop
test
lods
jnp
stc
pop
sub
lahf
cmp
xlat
mov
mov
sysexit
es
aad
xchg
scas
jecxz
push
dec
in
and
cmp
dec
and
xor
sbb
fadd
pop
sbb
add
push
loopne
inc
insl
xor
adc
in
movsl
xchg
not
mov
pop
xor
and
in
and
pop
xchg
mov
in
divb
push
out
jbe
ret
lods
push
xor
xor
cmp
aam
push
movsb
mov
cld
push
jmp
shll
idivb
lcall
fcoml
dec
jne
lret
push
dec
inc
or
dec
and
mov
push
and
lcall
push
cs
notl
scas
mov
subb
adc
xchg
add
and
aaa
addr16
push
int
dec
mov
outsl
inc
in
outsl
movsb
aaa
xor
movsl
mov
aas
pop
push
cmp
dec
xor
out
add
js
push
push
sub
ds
jbe
or
aam
out
fidivs
and
mov
mov
lods
mov
sub
arpl
sub
mov
push
dec
int3
jne
sbbl
and
out
cmc
adc
and
jb
fwait
in
imul
and
lcall
mov
loop
sub
mov
out
ja
xchg
pusha
mov
jl
fs
or
mov
imul
inc
pop
jae
sti
add
ja
shr
cmp
dec
dec
scas
lods
xlat
push
mov
lock
int3
daa
nop
inc
pop
outsl
adc
outsl
fcomi
add
insl
insb
lds
or
out
fs
lret
mov
pop
popf
and
pop
xor
stos
data16
xchg
movsb
cmp
sarl
sub
out
xchg
lea
mov
push
jns
bound
and
add
xchg
pop
adc
fbstp
or
mov
inc
bound
push
sub
mov
cmp
pop
imul
inc
out
sbb
emms
mov
lock
or
mov
inc
stc
ret
es
inc
fsubr
inc
mov
inc
push
lods
jl
xor
je
divl
aaa
fistpll
jbe
ret
and
loope
xor
fmull
sahf
and
loopne
idivb
ret
mov
cmp
adc
ljmp
cli
mov
mov
xor
cmp
fisubs
xchg
jmp
sti
add
jae
jmp
lods
cmp
push
add
pop
dec
lock
and
dec
sbb
ret
loope
add
push
mov
push
and
aas
jno
pop
push
cmp
es
lret
cs
xchg
push
in
push
pop
xor
sbb
add
adc
jecxz
pop
mov
push
pop
sahf
mov
fildl
shlb
adc
gs
lret
sahf
mov
and
cmpsb
mov
jne
lcall
push
pusha
movl
stc
or
push
test
shl
cmpb
xor
je
hlt
popa
in
inc
xchg
pushf
pop
data16
fnsave
jns
mov
cmp
sti
fs
cmc
adc
lea
mov
pusha
push
push
cmpsl
dec
shlb
pop
jne
push
dec
or
aam
movsl
ucomiss
pop
mov
sub
push
into
out
and
sub
scas
int3
cmp
mov
fnstcw
jmp
ss
shlb
mov
pop
lahf
das
roll
ret
out
cwtl
test
xchg
cmp
xchg
cs
in
enter
addl
add
fildl
std
mov
push
jge
pop
std
mov
xchg
cs
cltd
sub
pop
cld
lcall
dec
xor
std
jbe
jmp
or
leave
add
mov
lahf
jge
movb
xor
mov
arpl
jl
cmp
mov
dec
out
rolb
mov
pushf
aad
sbb
repnz
das
jae
fldl
adc
test
cli
pop
push
stos
adc
push
repz
sbbl
in
mov
sbb
insb
jmp
mov
sub
ror
add
ja
adc
jo
cwtl
test
add
cmp
out
adc
std
fwait
jne
mov
dec
and
int3
ret
fimuls
push
jb
stos
pop
out
mov
mov
sti
lcall
gs
jg
fldl
scas
dec
sub
xor
pop
sub
mov
mov
push
cmpsb
fimull
mov
xchg
mov
cli
popa
add
dec
jg
xor
popa
dec
lret
mov
jl
mov
lods
push
cmpb
push
jle
insl
pop
outsb
cltd
movsl
movsb
daa
adc
jno
fs
jnp
push
fcom
dec
shll
add
dec
ret
scas
gs
rolb
sbb
pushf
imul
jle
iret
scas
push
fisubrs
sbb
add
lret
add
pushl
dec
inc
mov
mov
inc
movd
daa
rcr
adc
mov
pusha
movsl
std
adc
inc
cmp
pop
dec
inc
sub
divl
mov
aam
mov
inc
xchg
xor
xchg
ret
pop
loope
push
and
sbb
pop
outsb
test
push
jmp
push
sub
jns
cmpsb
jp
cmp
dec
jno
sub
cltd
daa
adc
pop
ret
cmpsb
sub
into
mov
imul
jnp
mov
clc
loopne
ljmp
and
sub
or
push
xchg
xchg
jmp
cwtl
sar
lcall
xchg
sti
sbb
cmp
jl
mov
mov
mov
xor
pop
jbe
data16
jp
call
mov
dec
sbb
inc
fs
mov
lds
sahf
insl
push
inc
mov
test
mov
fwait
iret
mov
push
or
cwtl
push
pop
mov
pusha
dec
sbb
xchg
fldcw
lds
push
cmc
and
push
and
cmp
enter
cltd
bound
cld
arpl
sahf
cmp
dec
cld
loopne
push
adc
js
mov
xchg
mov
bound
test
pop
stos
fidivrs
clc
fucomip
mov
test
movsb
adc
cli
out
sbb
loope
inc
mov
ja
stos
stos
outsb
mov
fcmovu
push
scas
fidivs
int
lods
mov
shll
psubq
sbb
lds
int3
and
arpl
sub
mov
stos
jo
mov
dec
xchg
xor
or
stos
aas
dec
pop
mov
cmp
lret
pusha
imul
subb
jnp
fwait
xchg
in
adc
mov
jae
add
inc
sbb
jg
mov
mov
clc
insb
fs
add
or
pop
push
adc
std
notl
pop
test
pop
jne
adc
fs
and
ds
push
movsl
push
add
add
mov
fs
add
dec
jno
mov
mov
mov
cmc
add
jae
das
stc
pcmpeqw
mov
lods
aas
rcl
push
aas
fyl2x
leave
pusha
mov
lahf
andl
daa
inc
leave
stos
xchg
pop
and
stos
adc
mov
xor
loop
adc
and
mov
mov
jge
mov
xlat
cmp
flds
fisubl
or
and
fsubrs
shl
scas
call
inc
outsl
cmpsb
pop
pusha
adc
lock
lock
pop
mov
int
and
xor
movsl
sub
lds
mov
adc
pop
rolb
pushf
repnz
inc
mov
inc
mov
xor
add
movsl
sub
sbb
test
cmpsb
scas
dec
sub
jns
sub
sti
fs
inc
enter
pop
enter
jb
cmp
cwtl
sbb
sub
mov
in
lea
dec
enter
pop
xlat
sbb
jp
sbb
xor
dec
jmp
mov
inc
mov
lahf
test
ret
imul
pop
sub
jecxz
jae
dec
mov
xchg
mov
bnd
lock
daa
pop
xor
and
cmc
jmp
mov
inc
fisubs
movsl
stos
xor
js
fsubp
sbb
fdivrl
mov
inc
jge
test
add
cmpsl
out
jge
or
lcall
mov
mov
and
mov
cwtl
add
lea
fildl
sub
and
mov
imul
xchg
add
cli
mov
stos
into
adc
and
hlt
push
lcall
cmp
pop
outsb
mov
hlt
mov
ret
pushf
xor
imul
bound
mov
xlat
mov
iret
xor
aad
repnz
kunpckbw
ljmp
sti
adc
lods
fsub
cli
ljmp
imul
out
dec
es
and
xor
lret
stos
jbe
push
out
mov
int
add
out
inc
xchg
into
out
dec
testb
adc
mov
mov
clc
lods
cmp
cltd
push
nop
lds
push
ficompl
in
es
jl
jae
xchg
xor
out
stc
in
sbbl
xchg
pop
pop
fiadds
mov
cmp
mov
push
push
mov
pop
mov
cmp
test
push
pop
ss
call
lods
push
adc
inc
sub
mov
sti
enter
jbe
call
mov
pop
add
push
scas
shrb
mov
dec
subl
push
cmp
mov
push
nop
and
out
cmp
inc
xor
sbbb
cmp
fsubs
pop
xchg
insl
popf
adc
mov
out
dec
push
and
repz
add
dec
rcrb
mov
dec
lds
jecxz
cmp
aam
and
pop
lock
pop
out
sarb
ret
cmc
aas
loop
cmp
pop
cmp
int3
adc
sbb
cmp
fidivrs
divl
mov
xlat
mov
adc
or
sbb
mov
rolb
mov
push
jnp
jbe
pop
push
sub
push
in
fs
pop
je
add
ss
sub
fs
dec
imul
lcall
push
mov
imul
cld
bound
dec
jl
xchg
mov
push
call
popa
or
jge
in
fucom
adc
mov
mov
adcb
jno
movsb
dec
xchg
xchg
add
pop
cmp
sbb
pop
aad
xchg
mov
push
mov
adc
mov
lcall
inc
mov
orl
xchg
push
int
addr16
add
mov
mov
or
jl,pt
xchg
mov
add
ffree
stos
push
mov
pop
iret
pop
pusha
fisubrl
out
bound
mov
mov
sbb
sbbl
test
sysexit
test
aad
call
or
push
decl
mov
and
adc
shl
or
icebp
inc
xchg
icebp
add
or
js
mov
cmpsl
arpl
orb
shl
pop
and
je
dec
sub
xchg
into
sbb
and
into
nop
in
in
fisttpll
dec
jecxz
jl
push
push
flds
stc
fmuls
lret
nop
ss
add
clc
and
dec
push
sub
cwtl
shlb
sbb
pop
clc
stos
mov
test
sbb
inc
mov
lahf
psraw
mov
jnp
xchg
mov
ja
cmpl
pop
or
jl
push
mov
iret
cld
xlat
dec
ret
cmp
mov
inc
mov
insb
aam
testb
jbe
rclb
xchg
xchg
je
pushf
rcrl
xor
sub
mov
in
jge
pop
icebp
aam
jno
out
mov
push
jge
push
mov
xor
inc
jge
lahf
fcomip
add
pop
es
test
push
cs
fmuls
rcrl
aas
lods
cli
add
ret
std
repz
jge
xchg
fwait
cmp
jns
out
js
push
push
sub
and
dec
loopne
jl
stos
sbb
bound
add
insb
xchg
cmc
pop
mov
jge
pop
mov
cmpsl
push
cmp
fimuls
cmc
mov
mov
or
mov
popa
ljmp
ret
das
pop
pop
cmpsb
sub
lret
mov
xor
pop
outsb
or
mov
mov
or
xchg
dec
aas
hlt
ja
cmpsb
mov
xchg
les
enter
and
and
pop
lock
out
pop
ds
and
leave
or
sub
leave
ja
shrl
arpl
addb
or
jnp
cmp
fcompl
mov
mov
sbb
ja
adc
pslld
add
loopne
cltd
popf
fprem1
mov
es
arpl
movsl
xlat
jbe
pop
imul
xchg
ret
sbb
dec
or
insb
mov
bound
xchg
sbb
cmp
sub
sbb
pop
movsl
aam
cmp
outsb
push
iret
mov
jecxz
inc
fisttpl
pop
iret
dec
into
daa
or
xor
out
pop
es
push
adc
add
ljmp
sbb
ss
stos
imul
jns
int3
dec
daa
mov
dec
repz
dec
jmp
mulb
rcl
push
popa
push
clc
mov
add
xorl
rorb
pop
das
jecxz
loop
loopne
mov
or
hlt
enter
sbb
add
stc
lea
jmp
xchg
mov
push
add
cld
or
mov
test
lahf
arpl
cmp
push
xor
and
pop
jmp
ffree
push
add
dec
and
or
testl
shlb
jno
pop
pop
mov
sbb
stos
jno
es
fiadds
jge
daa
lret
pop
popf
orb
pop
sbb
sub
nop
pusha
cmp
int3
ret
pushf
sub
clc
push
push
test
out
cwtl
stos
sub
jg
shlb
add
in
mov
fldt
call
sbb
or
push
mov
shll
adc
mov
sub
cmp
mov
dec
sbbb
push
sub
sbb
imul
jmp
and
loop
or
cmpb
hlt
test
arpl
fstpl
mov
mov
iret
frstor
jno
inc
and
mov
cmp
out
scas
mov
or
pushf
lock
gs
inc
inc
lcall
xchg
aaa
inc
dec
and
cmp
push
pushf
xchg
pop
frstor
scas
fwait
sub
std
arpl
pop
fdivl
clc
mov
cmp
sti
jecxz
cmp
pushf
mov
pop
int3
loopne
push
xor
jp
notl
add
or
pop
data16
push
cmp
call
pop
fnsave
push
xchg
adc
cmpb
add
mov
push
adc
aad
lods
fcomip
movsl
lret
sub
loopne
icebp
push
stc
push
rclb
mov
pop
cld
jae
and
mov
jne
orl
xor
in
mov
movsl
outsl
in
in
push
hlt
adc
cwtl
shl
mov
les
adc
jbe
dec
loope
shl
push
stc
xchg
jnp
mov
js
imul
out
rol
inc
mov
sti
sbb
icebp
xchg
imulb
push
loop
rolb
daa
push
xchg
dec
xor
faddp
enter
loope
iret
sar
pop
mov
xor
imul
repz
movsb
jno
sarb
fsub
pusha
cltd
jecxz
dec
xor
movsl
mov
orl
cmp
addr16
pop
movsl
jns
push
add
idivl
pusha
ss
arpl
mov
push
bnd
or
add
xlat
pop
jnp
in
hlt
cwtl
pop
pandn
ja
add
dec
es
jo
lahf
mov
sbb
pusha
push
mov
cmp
stos
sbb
push
scas
popa
mov
in
add
fiadds
rcll
pcmpeqw
and
loopne
fdivr
xchg
push
pop
add
inc
jb
or
icebp
sub
maxps
jmp
jae
push
push
push
lods
lret
dec
pop
push
xchg
les
push
mov
lahf
xor
movb
leave
imul
mov
push
or
pop
orb
dec
pop
jbe
test
sub
jbe
inc
iret
push
pop
notl
pop
mov
out
mov
inc
inc
push
aas
outsl
test
je
xorl
xchg
out
shl
pop
xchg
xchg
in
mov
xchg
imul
loope
push
or
cmp
xchg
xchg
and
cmp
jl
adc
xor
ret
push
jle
insb
xor
lds
jae
cmpsb
testl
insl
inc
inc
repnz
in
inc
lret
mov
xchg
outsl
and
push
sbb
jno
sti
repnz
sahf
push
or
bswap
inc
mov
sarl
leave
mov
mov
lds
cmp
push
sub
rclb
bound
mov
cmp
pop
call
enter
xchg
inc
je
xchg
mov
xor
xchg
stc
sub
sbbb
out
std
add
jno
ljmp
popf
sbb
xchg
sbb
mov
les
movsb
jge
rclb
cld
cmp
pop
xchg
mov
insl
cmp
gs
and
int3
or
cltd
stos
loopne
mov
xor
inc
rcrb
outsb
add
sbb
gs
mov
inc
sub
sbb
and
repz
dec
in
fwait
adc
stc
adc
mov
hlt
ret
jbe
push
es
insb
divl
adc
mov
pop
mov
outsl
insb
add
in
ljmp
mov
ret
inc
ljmp
sbb
insb
popf
add
ror
neg
xor
imul
in
inc
pop
mov
xor
pop
mov
fcmovnbe
pop
sbb
ret
mov
push
xor
sbb
repnz
fadds
xor
xor
cmp
xor
lea
add
mov
test
test
js
push
rorb
subb
arpl
sub
adc
pop
shll
rolb
push
insl
xlat
shll
rorl
cmpsb
inc
dec
pop
divb
sub
fs
out
scas
jnp
fisubrs
jg
test
add
jns
or
dec
mov
xchg
xor
cmc
mov
js
decb
jl
or
mov
add
pop
iret
pusha
cmpsl
stos
xchg
sbb
jecxz
push
insl
in
lea
in
and
pop
das
mov
fimuls
push
sbb
jmp
lock
sub
push
jmp
cs
aas
js
enter
fcoml
rcrl
rcr
mov
adc
test
les
inc
mov
mov
cmc
int
lcall
jle
cmp
cltd
mov
mov
xor
ja
sti
movsb
lock
and
fdivrl
xchg
clc
pop
and
lods
loope
adc
lret
xchg
pop
mov
test
adc
push
into
out
cs
sbb
lds
jbe
cmp
mov
jle
out
in
jmp
mov
add
lret
xchg
dec
mov
mov
in
rcrl
jmp
out
push
ds
mov
pop
jle
xchg
pushf
clc
lret
lret
lods
push
and
sbb
cwtl
test
repnz
pop
pop
xchg
aad
push
nop
dec
clc
jge
pop
dec
xchg
mov
loop
addr16
inc
fiaddl
sbb
and
adc
xchg
popa
cmp
sbb
sub
outsb
outsl
loop
or
cmp
pop
push
insb
cli
rorl
push
mov
out
xchg
push
inc
and
mov
nop
pop
test
in
mov
std
pop
addr16
cwtl
jb
ds
insl
mov
fcomp
xchg
out
stos
mov
outsb
xchg
dec
mov
adc
jmp
loopne
mov
cmpsb
mov
dec
or
mov
jmp
mov
bound
mov
sub
arpl
iret
dec
sub
lret
in
push
xchg
adc
sbb
fcmovne
loop
cmp
mov
inc
ret
and
into
add
inc
in
jo
sbb
dec
in
cmp
mov
mov
dec
and
xchg
jnp
cmpsl
adc
pop
fildll
daa
outsb
mov
adc
es
lahf
inc
and
cmc
stc
cmc
or
mov
sti
fldenv
int3
in
xor
adc
mov
xchg
out
mov
fcoms
mov
mov
jo
push
insl
es
cmp
mov
adc
faddl
insl
ret
push
cmp
and
or
inc
sub
outsl
push
ficoml
xor
and
and
jge
insb
imul
inc
js
stc
adc
divps
jne
pushaw
pusha
stos
xchg
mov
mov
movsb
mov
test
mov
mov
adcl
lods
mov
pushf
add
jb
push
xor
mov
xchg
sbb
sarl
lea
scas
dec
gs
cmp
nop
adc
dec
inc
out
adc
hlt
sbb
lcall
lahf
sbb
mov
add
lret
insl
mov
mov
imul
pop
aad
jge
xor
mov
cmp
pop
sub
cmc
jbe
test
xchg
ret
cld
mov
mov
ljmp
lea
sub
mov
aad
out
push
pop
push
ret
insl
mov
inc
ds
pop
inc
loope
loopne
cltd
pop
mov
jg
lea
pop
pop
fcomps
mov
inc
cmc
xchg
or
icebp
mov
subb
add
sub
adc
test
addr16
inc
adcl
pop
pop
stc
data16
and
shlb
sub
push
sbb
and
inc
repz
mov
test
imul
and
cli
jbe
xchg
out
aad
out
or
andb
mov
mov
xor
push
jp
sub
out
je
mov
dec
out
shl
xor
cmpsb
fbstp
enter
das
outsb
clc
lcall
pop
int
ljmp
dec
xchg
mov
pop
cmpsl
jl
or
or
adc
andb
imull
sub
das
sub
loope,pn
imull
pop
pusha
test
or
push
sbb
insb
adc
loopne
inc
jge
push
pop
mov
rorb
fstpt
scas
dec
xchg
sbbb
xor
xor
mov
mov
mov
mov
mov
fadd
cmp
jb
mov
cltd
fwait
and
mov
push
jge
dec
pop
mov
addr16
repnz
addr16
aad
popa
jmp
mov
test
or
aas
out
pop
cmp
jge
mov
jnp
push
fistl
lds
sbb
add
sbb
push
and
pop
fdiv
pop
mov
and
test
xor
les
jecxz
xchg
imul
mov
icebp
cmp
movsl
mov
pop
jo
outsl
jmp
or
push
mov
mov
js
dec
cltd
ficompl
adc
fstpt
hlt
jo
sbb
mov
shll
or
lods
nop
mov
imul
mov
stos
mov
ss
sarb
rcrl
cmp
icebp
shll
or
lret
push
and
dec
add
fcoml
push
cmp
pushf
not
push
divb
in
nop
mov
inc
cmp
imul
fidivrs
aam
push
cmpsl
push
das
sbb
popf
or
fimull
fwait
mov
mov
jne
cmpsb
loopne
sub
mov
fcom
sub
cmpsb
fwait
jbe
out
jp
pop
leave
dec
jns
pop
mov
cmp
popa
or
fs
jmp
inc
ss
dec
mov
fs
data16
or
push
xchg
into
or
insb
into
lods
jnp
rcll
popf
push
int
inc
int
sub
inc
adc
mov
mull
xchg
mov
fs
and
repz
and
ss
addl
out
lahf
add
add
stc
pop
cmpsb
mov
inc
iret
mov
push
rol
fdivl
fwait
sbb
inc
jge
cld
jg
xlat
and
addr16
les
pop
ja
mov
pop
dec
sbb
scas
dec
mov
mov
in
scas
dec
rol
pop
or
jl
daa
icebp
jl
rorl
push
cltd
pusha
ljmp
shrl
mov
dec
ret
or
add
and
jnp
in
push
rsm
jg
dec
push
add
fistpl
jbe
mov
push
cmp
xor
push
dec
gs
push
in
mov
xor
add
lock
out
clts
je
rcrl
pop
adc
sub
rep
pop
call
jmp
mov
pop
mov
cli
or
xor
jne
das
push
jns
ljmp
cmp
subb
sti
in
dec
fidivrl
sub
insl
loope
jmp
js
and
sub
sbb
daa
xor
inc
push
xchg
sub
sbb
pop
xchg
inc
push
mov
jge
daa
shlb
add
add
sub
jecxz
pop
stos
adcl
das
mov
mov
imul
pop
repz
inc
sbb
pop
push
jae
fisttpl
fistpl
push
dec
or
sbb
inc
xchg
lods
and
scas
xorl
inc
cs
fidivrl
add
std
test
jg
mov
mov
repz
call
insl
cltd
mov
scas
mov
sbb
mov
jl
mov
push
sbb
cltd
out
aad
iret
imul
sub
sbb
xchg
fstpt
in
and
dec
pop
push
nop
repnz
push
data16
cmp
pushf
cmpb
pop
les
popl
xchg
xchg
cmp
cmpsb
sub
lret
push
dec
mov
orb
jns
push
lret
sub
shlb
jl
push
imul
or
jecxz
fisubrl
dec
shrb
addr16
xchg
cmp
mov
ret
fildl
inc
mov
mov
xchg
and
ret
rep
mov
mov
push
mov
popf
les
sbb
dec
pop
push
aam
xchg
xor
js
sbb
pushf
or
in
mov
fcoms
mov
movsb
inc
mov
fs
sub
in
add
shrl
stos
pop
xchg
push
lret
mov
repz
fisubl
lods
and
mov
aas
cmp
or
nop
enter
in
les
mov
lock
or
push
jbe
movsl
mov
das
pushf
in
ret
loopne
pop
adc
jno
icebp
andl
hlt
sbb
jle
jle
shr
cmp
test
ficompl
and
sbb
pop
inc
or
lock
cs
in
fidivrl
repz
inc
cmp
mov
ss
sbb
push
pextrw
insl
mov
add
push
mov
js
ja
hlt
icebp
fisttpl
jl
aam
add
int
cld
in
inc
sub
sbb
ja
or
imul
cmp
lds
pop
shlb
cmp
hlt
fiadds
ret
inc
xchg
mov
stos
jl
ja
push
mov
hlt
inc
repnz
add
jno
insb
push
das
dec
je
mov
clc
and
cmp
adc
xor
bound
sarl
inc
sti
mov
jle
js
sbb
push
xchg
imul
xchg
mov
sub
push
inc
test
cmc
lcall
aaa
iret
std
or
mov
push
idivl
mov
xor
clc
cwtl
or
inc
mov
mov
aam
cmpsb
or
cld
sbb
imul
push
jmp
xor
mov
movsb
cmpsl
xor
stos
loop
xchg
cmpsl
aam
imul
push
push
xorl
jle
jg
pop
stc
mov
jg
addl
aas
and
add
jmp
xchg
push
mov
outsb
pusha
mov
pusha
jnp
inc
sbb
xor
inc
sub
outsl
sub
inc
in
jns
aaa
inc
inc
adc
push
repnz
jle
push
loope
mov
mov
xchg
pop
rcrb
test
cmp
sti
sub
fwait
xor
dec
cwtl
add
rclb
shll
bound
call
arpl
fsubrs
push
or
add
and
jns
pop
mov
jns
lds
xor
or
mov
or
clc
dec
push
insl
fisubl
xchg
cmp
pop
pop
fcmove
pop
mov
and
out
mov
lcall
sub
inc
test
pop
lcall
and
in
sub
mov
pusha
enter
pop
fdivl
xchg
movsl
mov
loope
inc
xchg
stc
add
data16
outsl
push
shrb
inc
leave
adc
xor
mov
push
mov
xchg
jno
adc
je
cwtl
stos
insb
jo
xor
jmp
mov
dec
inc
inc
cmp
and
rol
int
ja,pn
cltd
and
repnz
test
jno
mov
fistpl
mov
les
fidivl
sbb
mov
int
cs
subl
xchg
sbb
in
pop
jo
xchg
das
lcall
adc
or
fyl2xp1
dec
inc
cli
sbb
insl
adc
jbe
sbb
push
inc
sub
popf
mov
ficoml
adc
jecxz
rcll
dec
push
leave
mov
dec
test
mov
fadds
and
mov
sahf
scas
cmp
rolb
push
push
inc
fbld
mov
inc
sub
xchg
xchg
adcl
dec
push
and
mov
push
aad
inc
mov
and
cld
sbb
test
xchg
mov
sbb
jno
sbb
mov
dec
fimull
inc
in
mov
in
adc
and
inc
mov
xor
mov
pop
insb
and
mov
pop
xchg
jno
cltd
insl
cld
inc
mov
aam
sahf
cmp
xor
pushf
mov
stos
rcll
xlat
and
pusha
js
pop
cltd
cld
iret
lcall
shr
mov
jl
rcrb
imul
shl
push
loop
pop
fmull
in
les
popf
stc
roll
jecxz
adc
lock
popa
lret
mov
xchg
mov
rol
jno
fldt
mov
aam
adc
push
inc
mov
jecxz
movsb
cmp
pop
jle
loop
sub
dec
and
repnz
mov
xor
mov
pop
xor
aam
mov
push
jno
sbb
sub
dec
nop
push
rcll
mov
pop
cmp
data16
movsb
or
arpl
jnp
sub
gs
push
sbb
sub
aas
adcl
pop
or
cmpl
dec
lds
sti
sub
dec
jmp
adcb
dec
call
jl
cli
xchg
icebp
xchg
cmpsl
xchg
mov
sbb
push
push
jmp
inc
xlat
es
mov
pop
mov
jl
jo
stos
cwtl
jns
lods
test
mov
ret
mov
xor
lcall
mov
jns
push
or
es
pop
or
ljmp
cmp
push
sbb
jno
aad
inc
rcrb
into
fmull
mov
push
imul
sbb
jbe
insl
leave
data16
daa
push
lahf
in
insb
sahf
xchg
jae
inc
inc
loopne
inc
adc
lock
xor
ss
and
cmp
scas
push
enter
ds
iret
inc
adc
inc
int
lcall
andb
xchg
das
dec
cmpsb
out
shll
in
dec
add
or
das
aam
js
sbb
out
push
gs
inc
stos
in
or
lock
jmp
shll
shll
fsubs
fidivl
mov
in
leave
pushf
dec
or
mov
inc
fiaddl
leave
jo
dec
and
inc
ja
jecxz
adc
iret
mov
imul
int3
mov
xor
inc
cwtl
or
insb
shlb
push
sub
jmp
hlt
pop
shll
test
push
pop
sbb
adc
pusha
gs
mov
in
es
or
adc
or
or
mov
dec
repz
sahf
outsl
enter
pop
movswl
push
inc
data16
stos
push
jae
and
inc
sub
test
nop
sub
sub
cwtl
mov
aas
lods
add
cmpsb
adc
xor
mov
out
loope
and
and
fldt
inc
dec
sahf
add
clc
inc
pop
loopne
lcall
mov
testb
test
idivl
push
inc
push
aas
gs
mov
jnp
test
or
addb
test
leave
bound
lret
lret
sti
sbb
loopne
jnp
push
ret
fsubl
inc
int
jnp
and
adc
push
cmc
movsl
jg
fldenv
pop
add
stc
or
je
pop
adc
movsb
or
jb
xorb
jecxz
add
and
ja
inc
in
push
je
mov
daa
fst
out
popa
cmpsb
sahf
or
mov
pop
int3
cmp
xchg
add
mov
roll
or
frstor
push
push
jo
ds
sbb
mov
pop
fsts
jecxz
cmp
std
cmp
scas
je
mov
test
xchg
sbb
mov
or
movsl
push
das
mov
or
jmp
fbstp
xor
out
xor
out
cmpsl
shl
mov
cwtl
paddusb
rsqrtps
stos
mov
cmpsb
jno
in
test
dec
cmc
nop
or
mov
xlat
inc
fimuls
dec
dec
cmp
cmp
aam
repnz
popa
gs
js
push
mov
sti
sub
test
inc
pop
mov
pop
jb
out
xor
sub
dec
stos
and
lods
jnp
loopne
pop
into
mov
and
movsl
cmp
mov
pop
mov
hlt
cmpsl
ds
rcrb
shll
push
cld
mov
dec
mov
pop
push
and
mov
adc
and
sub
hlt
mulb
jp
pop
mov
dec
dec
mov
mov
sahf
lret
jmp
ja
ficoms
pop
scas
fwait
imul
repz
jne
xchg
lret
pop
roll
mov
cmpsb
dec
add
jecxz
inc
cmpsl
jo
sub
sbb
push
and
sub
mov
pop
inc
cmpsb
jp
cmp
filds
call
loope
imul
outsb
into
or
movsb
mov
sbbl
mov
cmc
jno
and
addr16
xorb
dec
mov
cmp
cmp
sbb
popf
in
je
jecxz
cli
xor
xlat
imul
aam
dec
xlat
cmp
sub
mov
jp
jo
xchg
in
sbb
inc
sub
inc
pop
out
aad
mov
mov
jecxz
adc
lock
xchg
adc
and
push
test
inc
mov
jae
les
out
negb
aaa
mov
test
and
dec
fsubr
and
pop
mov
pop
in
fmulp
mov
repz
pop
sbb
arpl
push
in
push
pushf
aad
insb
and
xchg
mov
xchg
pop
push
xchg
xchg
push
and
idiv
pop
mov
sbb
fildll
sbb
cwtl
into
adc
lods
aad
lret
scas
push
xchg
rcll
xor
xchg
fistpl
insl
test
mov
xor
aas
out
fistpll
cmc
add
sbb
shll
mov
dec
in
add
dec
sbb
int3
jns
shl
lret
pop
mov
cmpsl
movsl
aad
lcall
shlb
mov
mov
fwait
push
xchg
mov
push
hlt
scas
add
xor
in
movsl
and
cmpl
hlt
push
mov
cmp
push
iret
push
jne
xchg
and
mov
aam
mov
add
ss
xchg
mov
loope
rcrl
pop
clc
pop
mov
mov
lods
aad
push
sahf
cmpl
int3
adc
jp
cld
xorl
pop
jge
jne
mov
mov
dec
pop
and
ret
stos
sub
mov
nop
dec
decl
jne
stos
xor
cmp
out
shll
call
sub
pop
sub
dec
add
or
pop
jle
test
jl
adc
cld
clc
add
dec
xchg
setns
cmpsb
mov
jg
gs
inc
add
clc
inc
test
imul
sbb
stc
ret
lret
jb
mov
adc
repz
xor
push
popa
add
mov
ret
imul
pop
ss
dec
int
bound
push
inc
add
jmp
mov
sub
into
pop
fs
jae
stc
loope
jle
inc
jbe
sbb
dec
loope
scas
mov
les
rcl
int3
pop
cmp
mov
mov
imul
adc
sub
