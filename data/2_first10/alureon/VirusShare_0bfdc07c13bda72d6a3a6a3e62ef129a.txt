add
movsl
notb
xlat
imul
inc
lcall
mov
push
xor
in
mov
icebp
push
psubusb
or
lock
inc
cmp
inc
lea
movsl
cld
lret
icebp
inc
adc
xchg
mov
lods
xchg
add
shll
xor
and
test
test
addr16
lods
sub
clc
das
jae
cmp
mov
jmp
xchg
add
in
lock
dec
rorl
push
sbb
lods
enter
pushf
test
cmc
sub
inc
lds
or
jmp
inc
pop
inc
loop
int
jne
sub
jmp
je
aas
dec
adc
arpl
bound
sarb
lods
jo
out
movb
pop
or
repz
aam
shl
pop
adcl
mov
xor
test
push
int3
leave
sbbb
divl
xorl
or
inc
aaa
push
cltd
hlt
add
arpl
jb
and
or
inc
jge
dec
xchg
aad
lcall
xor
push
pop
adc
and
hlt
leave
arpl
dec
cmp
mov
mov
xchg
dec
jle
pop
lahf
faddl
sbb
loope
pusha
pop
push
lcall
adc
push
xor
mov
cmp
ljmp
stc
mov
je
rcl
hlt
scas
or
mov
sub
outsl
and
jmp
inc
repnz
sbbl
shlb
andl
or
cmp
push
and
std
mov
lcall
or
jmp
push
sbb
xlat
mov
mov
insb
arpl
jb
cmpb
imul
outsb
cs
int3
mov
sbb
mov
mov
sub
dec
movsl
cmp
out
jp,pt
cltd
fsubrl
popf
dec
jge
mov
fcoms
insb
dec
xchg
mov
and
cmp
lahf
or
addr16
dec
in
sub
negb
test
xor
in
add
hlt
mov
fbld
lock
fcoms
push
mov
or
aas
mov
fnstenv
daa
insb
sbb
and
mov
fs
outsl
inc
mov
cld
jle
repnz
push
shlb
or
jmp
add
outsb
sub
dec
lret
xchg
imull
sub
imul
movsl
adc
scas
push
in
leave
jne
cwtl
addr16
xor
xchg
insb
cmc
inc
inc
ret
add
sbb
add
nop
sbb
push
out
enter
mov
cmp
xchg
push
jp
repnz
jmp
ret
stos
xchg
dec
loop
loope
cmpsb
or
sbb
or
in
addr16
pop
dec
leave
mov
xlat
insb
sub
dec
aaa
adc
jb
jecxz
sti
enter
mov
inc
in
out
sbb
sub
clc
sahf
out
fnstcw
aas
imul
movsb
cld
and
out
ljmp
ljmp
dec
inc
xor
test
icebp
movsb
pusha
inc
dec
adc
pop
fs
lahf
mov
xchg
lret
inc
xchg
ret
pop
jbe
push
scas
push
xchg
mov
xchg
mov
push
mov
pop
pop
jmp
sub
test
pusha
out
sti
mov
shlb
out
jne
pop
arpl
cmp
aas
dec
jmp
xchg
dec
les
mov
sahf
divl
mul
ret
das
xor
xchg
sahf
cmc
mov
hlt
jle
lods
faddl
inc
mov
fs
shl
idiv
mov
aas
addr16
dec
data16
inc
push
or
xor
rorl
movsb
outsl
lods
aam
popa
mov
stos
insl
push
dec
dec
add
mov
and
imul
lcall
jecxz
pusha
push
adc
in
mov
mov
pop
xlat
mov
pop
aam
ret
test
or
clc
outsb
xchg
add
add
arpl
mov
iret
mov
cmp
cwtl
lahf
imul
inc
aas
adc
test
xlat
jle
mov
subb
mov
rolb
cmp
xor
daa
cld
or
les
push
js
addr16
loopne
ret
rcrb
mov
ret
adc
inc
filds
inc
push
jae
or
sar
or
xor
subl
and
out
pop
push
add
fs
jmp
or
ds
repz
test
lcall
lcallw
inc
into
inc
sub
aam
cld
pop
es
movsl
xor
into
rcl
insl
push
or
pop
add
cmpsl
fucomp
and
rol
mov
mov
out
xchg
fxch
mov
inc
adcb
das
daa
in
sub
andb
mov
or
dec
sub
mov
sub
mov
pop
fstl
in
into
aam
cmpsb
dec
pop
cmpsl
cmp
xchg
lcall
dec
stos
lahf
jecxz
push
push
imulb
inc
rorb
sahf
adc
mov
je
roll
leave
lcall
gs
jmp
add
aaa
nop
cli
mov
jns
dec
out
or
aad
test
sti
push
fildl
out
or
xchg
inc
aad
and
adc
test
sub
mov
hlt
mov
xor
push
jno
or
or
inc
xor
or
jmp
out
es
outsl
cmp
and
popf
add
add
adc
xor
sub
push
or
clc
jo
mov
sbb
mov
imul
aaa
mov
adc
sbb
jg
cmp
jbe
lahf
adc
daa
mov
add
pushf
clc
mov
inc
fcompl
es
cli
ret
pop
aam
sbb
xor
mov
sub
sub
lds
and
inc
jg
fisubrs
inc
and
dec
lods
arpl
jp
mov
insl
push
push
sbb
or
subb
testl
push
sub
add
mov
pop
push
jle
das
repnz
push
imul
lea
repnz
cltd
or
mov
jmp
xchg
add
xchg
mov
inc
ficomps
mov
or
dec
sbb
inc
cwtl
sbb
xchg
and
cmc
int
lock
loope
aaa
mov
fsts
and
call
mov
push
fs
push
cmp
aas
mov
mov
ljmp
scas
mov
adc
sbb
popf
jmp
scas
xchg
adc
das
xchg
std
scas
xchg
out
pop
lea
adc
jbe
movsb
lods
fnstenv
fisubl
fucomip
punpckhwd
pushl
jo
lea
add
lahf
lods
lods
fcmovnbe
popf
xchg
lret
ds
cwtl
fstpl
loopne
je
iret
mov
mov
fstp
leave
pop
push
push
enter
dec
out
mov
std
addr16
js
clc
or
pop
jne
iret
lahf
lret
cltd
push
fdivr
dec
cmp
dec
xlat
out
mov
ja
shll
or
mov
mov
test
fisubrl
pop
sub
nop
jbe
ds
loop
jnp
xchg
ret
out
in
cld
and
ficompl
imul
test
imul
jnp
nop
pop
mov
loope
push
ret
cmp
cmp
leave
mov
aam
dec
outsb
inc
cs
mov
pop
stos
imul
in
jbe
inc
inc
in
cmpsb
xchg
add
lret
imul
jno
and
sbb
add
call
mov
into
in
mov
xor
pop
and
outsl
push
gs
sub
mov
iret
icebp
out
outsl
jnp
xor
jbe
shll
xchg
push
mov
jne
divps
sar
cwtl
xchg
sarb
mov
in
test
or
hlt
out
add
pop
cmp
pop
jmp
push
or
ror
jmp
push
movb
test
stos
fisttpl
insb
mov
push
mov
sbb
testb
or
inc
xchg
xchg
dec
mov
dec
fisttps
les
mov
mov
dec
sub
add
clc
dec
addb
push
icebp
lsl
mov
fdivrl
in
cmp
mov
xchg
enter
adc
jmp
xor
mov
xchg
jbe
into
xchg
shll
vcvtpd2ps
lods
cmp
or
xor
adc
xlat
ret
aad
sbb
push
aas
es
xlat
shll
repnz
jns
loop
ret
dec
dec
dec
lea
rcr
jbe
stc
pop
push
xchg
add
mov
cmp
mov
push
push
jno
xor
adc
icebp
dec
dec
mov
inc
pop
adc
xchg
mov
mov
or
push
sbb
in
push
test
je
mov
data16
cli
icebp
inc
rcrl
divl
push
ss
mov
push
sbb
idivb
sbb
stc
jp
fdivl
adc
mov
outsb
push
pop
sub
movsb
sbb
or
sbb
vhsubps
cmp
xchg
loope
daa
mov
pop
data16
inc
popa
xor
jmp
insb
pop
ds
adcl
shrb
dec
xchg
daa
idivl
out
shl
jge
push
jl
push
sub
out
jmp
xor
inc
xchg
and
mov
in
cmp
lds
cs
mov
push
rcll
mov
jae
es
bound
lods
sbb
loope
inc
lahf
sub
add
adc
pop
in
test
dec
mov
pop
dec
or
fnstcw
pushf
add
popf
push
add
sbb
fucompp
inc
push
add
xor
jbe
pop
xchg
cmp
sub
inc
orb
mov
stc
lea
cmp
and
popa
mov
add
xor
fisttpl
cmp
mov
fisttpll
mov
shll
jl
sti
into
or
ss
inc
sbb
push
lcall
ja
xchg
imul
add
sbb
icebp
loope
popl
dec
fisttpl
and
xchg
jno
aad
in
mov
add
push
nop
mov
xchg
mov
dec
mov
push
dec
rol
testl
fsubp
stc
loope
bound
mov
mov
or
mov
jp
imul
adc
xor
gs
mov
mull
mov
hlt
push
cwtl
dec
xchg
mulb
mov
dec
mov
sbbb
cmpsb
cmpsb
aas
add
and
sbbl
aaa
loopne
mov
adc
mov
xor
repz
adc
mov
sub
lahf
dec
ds
dec
push
fdivrs
jae
shl
inc
test
jno
imul
xlat
or
add
stos
mov
test
shll
dec
or
in
and
cwtl
out
cmp
rolb
fs
sub
fiaddl
or
pop
pop
imul
adc
add
sbb
mov
loopne
jecxz
pop
sbb
cmp
push
xor
movsl
int
mov
rorl
jmp
inc
pop
xchg
fs
loopne
outsb
pop
ja
mov
test
stc
stc
lea
jmp
int3
insl
daa
mov
test
dec
pop
stos
fs
and
jl
shrb
int
rcrl
out
stc
sbb
ret
inc
sbb
add
jmp
rolb
mov
inc
mov
sub
and
clc
in
aam
pop
movsl
jecxz
ss
dec
scas
js
pop
fdivl
sbb
or
inc
pop
out
push
xchg
arpl
pop
mov
pop
or
mov
push
mov
repz
add
jg
xor
or
and
add
nop
pop
cmpsl
movsl
add
xchg
fimull
out
stos
mov
aas
mov
or
ja
mov
decl
pusha
loop
lret
and
push
push
jl
ljmp
popf
sahf
push
jecxz
and
out
mov
add
mov
sub
inc
sbb
pop
addr16
push
imul
xor
in
out
push
mov
cltd
jg
in
stc
dec
enter
push
mov
loopne
rdtsc
bnd
mov
and
and
cmp
jnp
push
push
scas
push
popf
cltd
shrb
pop
dec
fs
cmpsb
mov
sbb
xor
mov
rcr
mov
notb
js
popa
lock
push
stos
cmp
sti
jmp
repnz
pop
cmp
insb
ss
test
mov
fidivrs
decl
lds
cltd
aad
and
xor
sti
add
out
xchg
mov
movsl
inc
push
xor
jmp
jp
test
iret
rcl
jae
jle
sahf
popa
add
mov
jae
adc
sbb
add
ja
mov
mov
cli
cmp
jp,pn
jmp
ja
scas
imul
push
mov
sbb
xor
movsl
inc
push
xchg
jnp
ficomps
xchg
push
cmp
sbb
xchg
add
test
xchg
mov
outsb
xor
hlt
das
cmp
push
dec
aam
sbb
jecxz
aas
bnd
jno
push
or
sbb
dec
xchg
dec
pop
rorb
dec
dec
jmp
mov
orl
repz
shll
rclb
push
iret
andl
shrb
adc
dec
cmp
pop
mov
xchg
daa
mov
in
aad
add
ljmp
scas
or
mov
xchg
push
or
popa
pop
pop
lcall
int
mov
adc
xor
jmp
call
test
cmpsl
loopne
mov
add
mov
aam
xchg
adc
nop
sbb
or
push
sbb
fcomi
std
int
ss
sub
mov
and
mov
mov
jmp
in
mov
or
mov
cmp
aam
ficomps
les
cli
aaa
sti
sub
cwtl
aaa
pop
xor
jno
sub
jmp
lret
sbb
mov
arpl
mov
movsl
jb
xor
mov
mov
and
pop
xlat
cmc
mov
imul
imull
add
lods
loope
stos
paddusw
ljmp
test
jnp
stos
fcompl
cwtl
push
sahf
sub
jmp
add
ret
jle
pop
push
daa
in
int
dec
cmp
ret
lret
mov
lds
xchg
nop
mov
inc
or
sub
inc
aad
xchg
sbb
mov
cmp
call
pop
push
and
adc
fcmove
and
jnp
pop
sub
aam
push
fldcw
mov
inc
xchg
jb
test
dec
repz
scas
in
test
sbb
dec
add
aam
push
clc
movsb
aaa
adc
ds
or
jmp
ret
fucompp
int
add
mov
mov
mov
pushf
ss
loope
addr16
movsl
loope
jo
push
mov
shlb
sbb
insl
scas
popf
inc
mov
jns
fistpll
dec
mov
sub
dec
add
lods
js
pop
ja
fwait
mov
push
pop
or
ljmp
scas
insl
mov
sub
and
add
xchg
jmp
adc
outsb
and
sub
xchg
imull
movsb
xchg
adc
pop
dec
popa
pop
in
pop
jl
add
pop
and
test
mov
stos
lods
leave
push
lock
sub
inc
outsb
mov
xchg
jne
cld
pop
cld
mov
inc
imul
adc
popf
icebp
jbe
movsb
jns
add
dec
mov
ds
cltd
or
mov
jmp
idivl
stc
lret
in
cmp
insl
out
adcl
lahf
fstl
mov
daa
fs
adc
mov
jp
ds
shl
mov
fwait
mov
mov
insb
xlat
idiv
cmp
hlt
arpl
stos
sbb
jl
xchg
add
or
js
in
fidivrs
xor
pop
scas
imul
pop
lods
sbb
dec
adc
pop
mov
inc
sahf
inc
cli
lret
push
or
xor
rcrb
in
fidivl
sarl
mov
and
jmp
test
gs
insl
lock
daa
cltd
dec
hlt
enter
ret
aam
inc
shrl
dec
mov
out
push
inc
sub
ljmp
mov
pop
pop
xlat
pusha
inc
enter
bound
mov
ss
shl
push
push
into
sub
cmp
pop
inc
call
inc
mov
xor
add
out
xor
xchg
cmpb
jbe
popa
adc
std
repnz
adc
or
push
scas
mov
shr
mov
imul
mov
outsl
fs
push
mov
push
cmpsb
pop
call
cwtl
push
cmp
adc
scas
inc
adc
xor
bound
repz
dec
inc
jle
adc
addb
fs
in
sbb
push
popf
cmpsl
and
jl
cmp
repnz
pushf
clc
jmp
jmp
mov
mov
mov
aam
add
add
shl
aad
shr
sbbl
cwtl
mov
xor
jmp
addl
inc
cmpb
mov
sbb
fidivrl
outsl
sub
or
dec
adc
ja
dec
shll
mov
mov
repz
push
je
lret
push
add
repnz
stc
jecxz
mov
lret
stc
loop
das
adc
pop
fstpl
jge
fnstcw
and
fsubs
mov
and
xchg
sbb
mov
mov
shll
por
mov
xchg
or
cmpl
insb
push
pop
dec
sub
jg
cmpsl
loope
aas
or
inc
and
cmpsl
xlat
jmp
sub
adc
iret
add
fnstenv
mov
repz
pop
test
stos
xchg
xchg
and
cmp
mov
and
mov
dec
jp
add
scas
sbb
popf
xchg
mov
mov
les
int
bound
dec
sbb
ud0
stos
pushf
scas
cmp
xor
xchg
jge
cwtl
jo
sbb
sbbl
test
sub
cmpsl
rclb
or
test
call
mov
and
push
test
lret
lret
sbb
mov
int
xchg
roll
fnstenv
cs
iret
test
mov
cmp
loop
fdivrs
push
dec
xor
jmp
aad
xchg
push
jne
xor
or
mov
fwait
and
mov
mov
sahf
mov
pop
mov
sbb
jge
cmp
push
in
push
lahf
cmp
or
push
mov
in
fisubs
fs
shrb
sti
daa
aad
fisubs
and
add
dec
imul
xchg
mov
sahf
xor
int
push
idivl
mov
sub
fwait
loopne
add
add
in
outsl
pop
add
cltd
pop
sti
pop
cmp
xchg
inc
pop
sub
or
lock
push
sbb
dec
test
push
pop
sbb
inc
pop
mov
call
dec
push
push
hlt
hlt
xor
popf
mov
mov
fsts
jmp
sbb
sbb
mov
mov
adc
and
xor
and
inc
push
push
cltd
nop
incl
push
add
mov
popf
mov
int
clc
outsl
or
dec
jge
popf
mov
sbb
sub
cmp
mov
hlt
call
enter
mov
jae
je
cwtl
sahf
sbb
mov
cli
jmp
jae
mov
incl
stos
cmpsb
push
in
inc
fsubr
pop
push
inc
inc
hlt
jno
mov
sbb
sahf
aaa
and
ss
mov
and
jmp
outsl
inc
fsub
das
jp
cmp
mov
ret
or
and
cmp
daa
aaa
sahf
xor
adc
xor
add
jmp
pusha
push
addb
jae
in
test
in
lret
loop
test
pop
arpl
scas
movl
mov
out
push
loope
fsubl
out
cmp
movsl
loope
pusha
in
add
divb
add
mov
iret
pop
int
add
insb
fildl
adc
sub
sub
inc
out
mov
out
pop
lods
aas
jmp
sub
iret
cmp
scas
pop
rclb
imul
dec
scas
fisttpll
sub
pop
in
cwtl
outsl
cmc
xchg
sbb
jae
jno
cmpsl
idivb
xchg
aad
popf
lret
mov
insb
mov
out
cmp
mov
xchg
in
fbstp
adc
movsb
aam
nop
shlb
loope
lods
mov
mov
mov
mov
mov
ja
scas
enter
inc
push
dec
notb
mov
dec
push
aas
dec
jne
sub
xchg
cmp
int
xorb
add
dec
incb
movsb
sbb
jp
cli
sbb
mov
mov
repnz
or
jecxz
mov
test
jo
int3
sbb
fmulp
mov
rorb
mov
push
xchg
cmpsb
mov
sarb
rolb
xchg
xorb
outsb
lret
xchg
jl
xchg
jp
jmp
pop
mov
jae
inc
pop
mov
int3
fincstp
ja
sti
pop
shll
pop
xchg
or
jecxz
aaa
pusha
or
in
cmpps
add
inc
xchg
outsl
pop
add
sbb
add
dec
pop
loop
fsubl
and
out
cmp
imul
pop
movb
jmp
mov
xor
loopne
fnstsw
sub
pop
cmpsl
insb
cmc
fidivl
inc
ss
call
inc
or
cmp
out
call
stc
out
and
adc
andb
into
dec
aas
adc
repz
mov
pushf
movl
pop
test
stc
sbb
sbb
mov
cmp
cli
jns
sbb
dec
daa
dec
push
dec
in
or
adc
jmp
adc
ret
mov
cli
bound
mov
jnp
outsb
mov
pop
jne
jmp
mov
jae
xchg
inc
gs
sub
mov
mov
jp,pn
int3
movsl
and
sahf
dec
cmp
pop
aas
mov
sub
dec
mov
fnstenvs
pop
out
in
fidivs
cltd
mov
pop
data16
jmp
int3
inc
lcall
xchg
out
into
fwait
or
mov
outsl
cmpsb
cmpb
mov
mov
out
mov
scas
cmp
xor
inc
fwait
mov
das
and
cs
push
ss
lods
aad
div
insb
seta
clc
das
cltd
call
iret
enter
push
fwait
mov
popl
decb
pop
out
cmpsl
icebp
ss
and
jp
push
xchg
or
xor
imul
ret
jmp
push
xor
inc
dec
mov
and
sahf
xchg
fistl
insl
iret
mov
movsb
jo,pt
mov
fdivrp
mov
mov
sbb
test
cmpl
pop
loopne
mov
bound
in
jae
pop
rol
mov
lea
js
cmp
mov
inc
push
in
xor
pop
cmc
imull
aaa
shrb
into
push
fistps
dec
push
jae
cmpsb
rdmsr
sub
nop
aaa
lret
out
int3
jne
out
int3
andl
sub
push
mov
ficoms
pushf
push
add
push
repz
inc
sbb
inc
dec
lret
stos
xor
cmp
and
or
jmp
leave
mull
push
jg
cld
mov
es
jle
jno
push
repnz
adc
fbstp
incl
sbb
fisubs
sbb
jmp
stos
adc
adc
subl
sbb
das
rolb
enter
ds
lods
or
push
push
shll
enter
sbb
jp
dec
test
icebp
pop
xchg
mov
mov
mov
jae
push
popa
adc
in
mov
scas
jae
arpl
dec
out
rorb
scas
fisubs
insl
and
mov
pop
repnz
aas
mov
dec
mov
and
push
mov
fcompl
mov
pop
dec
xor
das
pop
std
jb
cli
mov
xor
out
bound
jmp
dec
push
inc
jns
push
in
aad
fbld
xchg
loopne
adc
arpl
push
and
repnz
pop
add
out
mov
push
push
lret
mov
sbb
push
sbb
loop
fidivrl
sbb
and
inc
sbb
mov
sbb
lock
loopne
mov
jbe
cld
add
pusha
xchg
repz
mov
jns
mov
movsl
add
push
and
fisubrs
loop
shl
sub
sub
mov
repnz
cs
adc
sub
mov
sbb
mov
gs
inc
xor
sti
cld
sbb
add
xchg
aad
lock
sbb
push
sbb
jnp
ss
lock
sbb
sbb
ja
add
adc
pop
jnp
xor
cltd
xchg
xchg
adc
sbb
imul
jno
sti
xor
mov
xor
add
jl
inc
bound
cs
add
sahf
das
icebp
or
mov
fdivr
ret
mov
mov
stc
inc
sub
les
sub
bnd
lock
sub
imul
inc
mov
ret
inc
mov
ret
sbb
jmp
loope
and
lods
outsl
pop
sbb
loop
std
test
cs
clc
shrl
xor
sbb
jmp
and
push
inc
cmc
mov
sub
insl
test
out
in
mov
jle
add
mov
xchg
out
cmc
out
or
lea
jmp
add
sub
push
xchg
divb
jne
inc
arpl
push
leave
jl
jmp
fnstsw
mov
push
daa
in
call
xor
xorl
bound
add
push
inc
jne
add
or
addb
dec
add
mov
adc
fwait
sbb
jmp
call
inc
js
sbb
xchg
mov
into
jbe
je
or
sub
mov
inc
or
mov
xor
mov
pop
jo
push
rcll
pop
pop
dec
adc
mov
int
xor
or
mov
mov
pop
mov
daa
mov
popa
sbb
fsubrs
sbb
dec
xor
xor
sbb
and
jle
js
lea
jmp
cmpsl
movsb
in
dec
je
lret
fnstenv
mov
adc
add
sahf
jne
or
pop
xchg
jge
mov
cmp
das
push
test
adc
mov
jne
pop
movsl
cmp
lods
gs
fisubs
adc
sahf
neg
jecxz
pop
mov
incb
mov
inc
or
fdivrl
aad
or
add
jle
adc
jne
mov
movsb
stc
out
xchg
ret
ds
mov
pop
cmp
je
jle
xchg
inc
add
mov
jo
xor
pop
sub
dec
enter
jo
pop
lock
sbb
mov
repnz
movhps
inc
xorb
hlt
mov
sbb
inc
jo
fdivrl
movsl
call
adc
jns
lahf
in
sub
loope
xor
mov
xchg
dec
sti
daa
cld
cmp
dec
into
adc
imul
mov
sub
out
dec
sbb
filds
stc
xchg
orl
insb
sbb
lock
cmpsl
inc
inc
sbb
or
ss
lahf
sar
sub
inc
cld
out
in
and
sub
fwait
xchg
and
ror
cmpsb
mov
test
popa
into
mov
loopne
test
push
cmc
in
scas
inc
or
add
xchg
out
and
xor
sbb
xor
adc
mov
popf
cltd
call
jp
shl
xlat
mov
add
inc
mov
adc
addr16
mov
roll
dec
jmp
add
jecxz
mov
or
je
leave
sub
dec
xchg
sub
dec
pushf
sahf
cmp
mov
lret
mov
mov
or
add
cwtl
lcall
jae
push
cmp
push
lods
lret
cmpsb
movsb
sahf
scas
imul
in
xchg
mov
sbb
test
mov
rorb
or
mov
out
cli
lock
lock
test
cwtl
and
es
ret
jmp
xor
fs
ret
and
cmp
jecxz
xchg
stos
loope
inc
les
inc
sahf
outsl
cmovg
movsb
dec
in
pop
jecxz
xchg
les
imul
fildll
aaa
aaa
push
mov
jg
gs
lret
mov
push
ficomps
bound
fnstcw
in
ret
int
out
cltd
push
sub
push
mov
pop
cmpsl
jbe
xchg
mov
inc
cmc
inc
pop
xchg
and
jmp
fisubs
cli
lcall
fsubrs
cmpsl
ds
xor
dec
sahf
js
xchg
in
cmp
roll
lret
dec
inc
or
push
mov
aad
and
mov
call
daa
and
add
repnz
dec
jmp
cmp
fs
negl
cmp
jmp
dec
adc
sub
pop
insl
data16
dec
loop
notb
orb
ret
std
stc
data16
xor
xor
mov
dec
pop
outsb
hlt
movsb
push
cmp
repnz
add
jmp
push
cwtl
jo
loope
sbb
adc
mov
inc
push
sub
je
pop
jnp
arpl
pop
aas
dec
mov
inc
test
repz
xchg
jmp
lds
cmpsb
jnp
hlt
sub
icebp
andb
ss
adc
sti
jmp
jecxz
enter
lret
cmpsb
movsl
dec
das
mov
sub
or
sbb
mov
mov
sub
movsb
fmuls
aas
lods
out
mov
in
stos
lahf
sahf
sbb
rcrl
jne
sub
shl
jge
loop
dec
add
pop
xor
mov
push
stos
jne
shr
js
jnp
mov
into
sub
js
adc
xchg
dec
jb
repz
lods
repnz
add
pushf
pop
add
pop
test
aaa
mov
mov
cld
xor
sti
out
cwtl
lret
push
or
and
add
out
inc
and
push
xor
push
push
mov
data16
icebp
dec
cmp
fistl
in
sub
ss
xor
rorl
ret
pop
mov
outsl
mov
push
mov
cmp
rcl
lea
rorl
dec
int3
pop
jmp
stos
adc
mov
mov
call
adc
mov
mov
rcl
scas
ret
push
pop
sub
mov
test
fisubs
aad
lcall
hlt
ror
pop
push
or
pop
dec
ffreep
shlb
mov
fistl
mov
mov
dec
cld
fwait
enter
xchg
ja
rolb
sbbl
lods
call
cmp
cli
mov
repz
sbb
in
dec
scas
stc
pop
rorl
mov
lds
fsubrs
cmp
mov
adc
and
jp
lods
sbb
mov
xchg
push
rcrl
mov
cs
imul
imul
mov
jge
mov
notb
sbb
insb
test
aas
xor
sub
std
repnz
push
jge
daa
rorb
scas
nop
outsb
lcall
leave
js
testb
xorb
bound
xor
lcall
push
test
adc
cmp
cs
pop
sti
cs
mov
movl
xchg
fldt
dec
int3
pop
lods
add
rcrb
inc
lret
cmp
nop
popf
mov
idivb
push
pop
jo
divb
add
xchg
ret
sbb
stos
or
xchg
jmp
add
and
stc
sub
sub
or
jge
jns
fbld
insb
add
pop
mov
jge
repz
repz
addr16
xor
mov
data16
movsb
jmp
loope
push
or
push
sbb
lcall
out
stos
sbb
jge
jl
ss
fstp
out
jmp
pop
mov
pop
je
mov
mov
scas
mov
frstor
out
pop
adcb
or
jmp
fnsave
pop
adcb
jecxz
inc
inc
mov
imul
imul
pushf
sub
adc
notb
cmc
or
scas
shlb
mov
in
sub
mov
in
ss
mov
rcll
mov
add
dec
stc
mov
lods
lcall
aas
popa
cmp
lahf
outsb
fistpll
sub
ljmp
jmp
add
inc
ds
cmpsb
mov
ja
lods
inc
mov
push
arpl
pop
std
xchg
jnp
add
sub
add
inc
mov
mov
or
scas
push
call
or
xchg
insl
stos
ss
loopne
or
stos
ror
lods
pop
lahf
jecxz
cmpsl
std
add
or
loopne
shrb
jns
int
sbb
adc
icebp
xor
mov
inc
or
xchg
loopne
cwtl
jle
add
in
xor
lret
aam
mov
stos
sbb
lret
cwtl
cmpl
movsl
scas
or
inc
jecxz
stc
movl
lds
adc
fistps
jge
inc
pop
sarb
mov
jno
pop
fistl
pop
push
aas
jmp
ss
repnz
jns
lods
out
push
jp
adc
dec
adc
dec
repnz
ret
xchg
aas
adc
ljmp
jecxz
sub
jns
add
push
enter
rcl
mov
jo
imul
dec
pop
push
into
adc
cmp
mov
dec
lret
sbb
sti
es
ja
xchg
addr16
pop
pop
popf
ret
mov
jmp
fs
fisttpl
adc
scas
ljmp
adc
xor
push
fscale
xchg
push
aas
stos
mov
add
fldenv
fldcw
inc
mov
xchg
jbe
jnp
insl
sub
lret
dec
jmp
sub
int3
repz
enter
pop
and
sbb
scas
cmp
icebp
aad
pop
push
jle
push
cld
add
lret
imul
loop
jo
pop
jmp
jns
sbb
outsl
xchg
adc
inc
push
aaa
fisttpl
jl
ds
and
stos
xorb
rol
cli
clc
bnd
jo
fimuls
mov
outsb
xchg
push
sbb
xlat
push
xor
and
inc
adc
push
adc
jne
add
iret
popa
cmp
and
xor
fs
lock
sahf
xor
out
dec
mov
test
bound
push
cli
mulb
xor
mov
out
inc
cmc
out
mov
das
add
out
mov
cli
push
pop
dec
and
jo
cmpsl
repz
ds
push
jne
call
cs
mov
adc
daa
pop
test
jno
roll
or
cmpsl
in
rorw
mov
jnp
dec
ret
fistps
je
dec
aaa
jecxz
sub
mov
lahf
icebp
sbb
jl
or
jmp
add
mov
test
cmc
bswap
jmp
xchg
xchg
sub
pop
mov
jle
pop
ror
insb
loope
jbe
fstp
repz
cwtl
xchg
xor
mov
outsl
xchg
and
xchg
mov
xchg
mov
test
gs
mov
addb
cmp
xchg
jbe
jo
iret
mov
lods
outsb
mov
shl
add
jae
aad
cmp
popf
and
jmp
adc
push
arpl
jle
cld
adc
out
mov
push
xor
jmp
dec
in
test
jmp
add
jb
icebp
subl
mov
sub
and
sbb
add
aas
lcall
inc
push
repnz
adc
repz
sub
dec
mov
push
repnz
cmp
int
and
adc
mov
fnstsw
sbbl
cmp
or
scas
jnp
jae
adc
dec
div
mov
negl
push
xor
jle
add
in
sbb
aam
nop
xor
mov
inc
push
ja
sbb
rcrl
sub
mov
jp
inc
mov
jg
lea
adc
xchg
lock
sbb
push
pop
push
clc
pop
jo
dec
and
dec
shlb
mov
pushf
pop
cld
orl
or
mov
aam
dec
adcb
aas
jb
shlb
repnz
add
call
std
jmp
jns
fistpl
pusha
gs
notl
enter
and
leave
faddl
scas
lock
xor
daa
add
in
sub
jb
xchg
mov
mov
and
jg
and
xchg
arpl
ds
fdivrs
xlat
jmp
jne
jne
std
clc
mov
adcb
outsl
mov
cmpsb
pop
xor
cmc
pop
adc
mov
icebp
stos
xchg
mov
cmp
xchg
scas
inc
dec
jmp
cmp
ret
mov
fadds
test
daa
cmp
add
mov
fistpll
push
add
adc
xorl
xlat
insl
dec
push
scas
cld
jge
sahf
addr16
sub
sbb
enter
in
icebp
mov
add
or
inc
outsb
hlt
jmp
cmp
pop
jmp
inc
lods
sub
jne
movzwl
jmp
jge
hlt
jmp
pop
fdivr
js
sub
sub
pop
imul
cwtl
rcl
pop
test
iret
dec
stos
mov
add
iret
adcl
and
icebp
cwtl
or
dec
popf
fsubl
sub
or
adc
push
pop
cmp
cmc
sub
popa
movsb
dec
mov
lods
dec
mov
pop
mov
fstl
dec
push
dec
xchg
jl
and
jmp
inc
leave
shll
fs
subl
mov
lret
add
inc
pop
ss
std
cltd
scas
adc
fiadds
sahf
std
lds
xor
lea
jmp
adc
psubsw
xchg
out
xor
dec
fimull
enter
out
in
stos
mov
cld
jnp
out
inc
xchg
roll
dec
add
jmp
mov
ret
push
add
push
das
shlb
aam
lcall
sarl
in
out
jbe
xorl
adc
mov
cld
lahf
fidivrs
and
addl
sub
outsb
sti
xchg
mov
mov
xchg
dec
aad
cli
push
ljmp
cmp
sub
js
pop
data16
ret
mov
mov
sub
mov
lods
aad
insb
lahf
cmc
or
data16
leave
test
shrb
je
jge
jmp
fisttps
xchg
push
out
movsb
jecxz
mov
push
out
scas
cmpsl
push
inc
add
rcrb
sub
popa
enter
xor
ja
add
xchg
adc
jnp
push
adc
xor
lock
insl
lahf
lods
loope
mov
inc
rol
xchg
jnp
ja
mov
ficoml
cmp
pusha
inc
xor
cmp
jbe
mov
push
fidivl
mov
push
push
mov
neg
jmp
int
ss
pusha
inc
or
dec
cmp
add
push
mov
mov
stos
lret
stos
fisttpl
mov
xor
pop
add
inc
loopne
pop
outsb
or
add
or
into
les
int
clc
hlt
decl
inc
push
cld
inc
fimuls
call
aaa
pop
movsb
in
push
icebp
mov
xlat
les
movsb
dec
imul
gs
insb
in
mov
and
cmp
and
lret
dec
push
jbe
adc
ja
adc
cmp
lds
enter
into
sbb
inc
jo
sub
xor
xor
jp
loope
into
jge
jo
pop
sub
or
mov
imul
aas
aaa
sbb
scas
jecxz
fidivl
dec
xor
psrad
xor
enter
shlb
and
aaa
xchg
push
out
add
subl
rolb
mov
in
fs
sub
in
push
mov
sbb
or
or
and
dec
popf
jne
test
jnp
mov
add
movsb
pop
xor
test
lret
icebp
and
pop
sti
out
jb
mov
or
sbb
or
das
inc
xlat
fsubrs
dec
jl
stc
jge
push
lods
fdivs
pop
test
xchg
in
or
fwait
or
push
sub
and
out
pop
push
sarb
fdivr
jae
or
aaa
add
mov
das
lret
je
loope
scas
cmpsb
and
dec
or
xchg
push
movsb
and
add
add
mov
aas
xlat
out
aam
jle
fcmovbe
arpl
and
roll
daa
mov
das
movsl
rcll
push
negl
cmpsb
mov
fildll
xor
pop
outsl
les
or
xchg
pop
subl
test
sbb
das
or
mov
pop
insb
and
int3
add
push
pop
push
xchg
dec
push
dec
add
or
jmp
mov
inc
loop
dec
pop
lods
shlb
and
jae
mov
mov
stos
cli
das
in
popf
mov
push
inc
in
add
add
mov
mov
dec
lret
mov
scas
pop
inc
aad
xchg
xor
jns
repnz
add
lret
mov
js
fmull
insb
test
wbinvd
lds
imul
cmp
inc
mov
cmpsl
add
fidivs
inc
std
mov
mov
into
inc
inc
pop
dec
jp
loopne
or
popf
leave
mov
and
daa
loopne
pusha
sbb
jb
leave
lds
xchg
dec
popa
xor
shll
jae
bnd
in
pop
push
push
je
aad
scas
mulb
inc
filds
std
test
mov
inc
mov
orb
inc
push
jb
mov
inc
inc
cmpsb
push
incb
adc
add
adc
imul
jb
adc
adc
in
add
mov
jg
push
pop
mov
push
pusha
mov
push
mov
arpl
in
sbb
stos
addr16
mov
push
sbb
scas
cmc
rorl
notb
mov
je
mov
loopne
movsl
or
xor
addr16
pop
xchg
sub
xchg
push
mov
hlt
push
out
aam
or
cmp
sub
push
mov
cld
xchg
mov
dec
cltd
insb
test
mov
out
lcall
inc
pusha
or
add
jmp
cmp
lods
adc
mov
hlt
mov
clc
pop
pop
flds
test
xor
shrl
orb
decb
mov
jns
lods
jb
add
xchg
or
jmp
dec
fistps
imul
repz
jb
cmp
mov
pop
or
mulb
repnz
mov
sub
fs
add
fs
inc
sub
push
jmp
in
bnd
lcall
repnz
xor
push
adc
add
movsb
sahf
dec
inc
cmp
xchg
int3
xchg
ljmp
mov
inc
push
scas
das
clc
sub
add
es
fwait
or
popf
jno
sbb
jne
subl
or
ljmp
mov
aaa
das
xchg
dec
or
sub
cmp
mov
mull
jmp
inc
xchg
loopne
int3
xor
ljmp
das
or
or
xchg
jns
stos
icebp
fdivs
sbb
repnz
add
rol
add
jg
in
mov
lret
add
outsl
enter
loop
sub
xor
mov
cwtl
shlb
push
jmp
adc
cmpsb
pop
mov
mov
push
adcl
rorb
add
popa
packuswb
pop
bswap
jg
cs
lock
adc
push
incl
in
scas
and
lods
pusha
imul
sarl
fbstp
sti
outsl
push
ja
mov
gs
daa
dec
mov
sbb
nop
orb
test
push
sbb
pop
jecxz
jo
mov
mov
sbb
stos
xor
lock
shll
add
push
xor
outsb
cs
mov
test
xlat
cmc
cmp
sub
iret
out
lods
push
xor
dec
aaa
out
cmc
cmc
fisttpl
clc
mov
rcrb
pushf
mov
inc
inc
mov
imul
xchg
mov
push
in
adc
and
lret
mov
xor
adc
insl
push
out
stc
call
dec
in
insb
inc
or
movsl
xor
adc
gs
xchg
jle
jge
and
or
into
loop
maskmovq
testl
jmp
jp
in
add
mov
aaa
inc
mov
enter
and
cmp
rorl
jecxz
inc
dec
push
adc
daa
les
and
sub
mov
cmpl
cs
popf
dec
sbb
sub
stos
je
jg
mov
fildll
int3
shl
mov
cmp
lods
pop
loopne
arpl
pop
mov
sub
jns
jecxz
sbb
popf
int
mov
enter
mov
leave
in
mov
xchg
addr16
mov
cmp
push
and
lret
mov
cmp
xor
xor
adc
sub
mov
jl
inc
or
or
jne
test
movsb
xor
pop
mov
push
mov
data16
inc
or
mov
scas
lods
add
cmc
or
xchg
jno
cmp
sahf
fwait
popf
jne
mov
dec
in
pop
sbb
or
cmp
daa
fwait
rorl
out
mov
mov
mov
mov
sbb
or
jbe
cmp
outsb
movsb
mov
mov
xchg
aaa
or
inc
in
pop
sbb
xchg
jmp
cld
mov
notl
xchg
aaa
icebp
int
add
push
fistps
inc
ficoms
xorl
add
add
pop
scas
jle
jnp
scas
fs
xchg
push
ficomps
popf
add
mov
xchg
test
mov
dec
xchg
adc
sbb
js
sbb
clc
jno
adc
das
mov
shlb
insl
mov
cs
dec
xor
lret
push
xchg
rcl
sbb
aam
js
cltd
mov
rcrl
push
loop
inc
sub
cld
lock
push
sub
inc
cmp
and
pop
pop
cmp
cmp
jb
mov
xchg
push
mov
int3
sub
push
and
fstpt
or
cmc
iret
and
and
jmp
lahf
xchg
push
jbe
ret
cld
mov
lea
iret
and
jmp
ss
incb
inc
xor
cmpsb
pusha
cmp
sbb
data16
hlt
push
mov
mov
stos
mov
push
and
jmp
push
loope
insl
sbbb
mov
dec
ljmp
mov
pcmpgtd
jae
add
inc
fwait
add
mov
push
in
psubb
inc
test
fistpl
inc
cmp
mov
loopne
adc
push
lret
pop
sbb
subb
and
imul
gs
pop
add
add
test
outsb
and
adc
lods
or
cld
jnp
addl
add
mov
das
xor
cltd
js
pop
xchg
subb
add
push
rclb
xor
lret
push
cmpsl
hlt
xor
dec
into
jle
stos
sbb
iret
shrb
xor
xor
mov
and
mov
inc
dec
je
mov
imul
cmp
jne
mov
imul
cmp
jne
mov
imul
test
je
add
sub
sub
add
popa
ret
push
pop
cs
dec
mov
pop
mov
icebp
insl
inc
xorb
xor
or
test
and
roll
lret
hlt
or
add
add
jecxz
inc
pop
ret
je
jge
mov
jmp
mov
add
mov
or
add
pop
xchg
jg
add
ja
aam
shrl
xchg
insl
fidivs
sahf
mov
inc
xchg
mov
and
repz
sbb
dec
lret
or
xchg
jge
dec
adc
mov
dec
scas
sub
mov
dec
mov
movsb
push
push
mov
stos
xchg
add
cli
inc
aam
loopne
pop
mov
ja
aas
push
scas
leave
imul
inc
into
outsb
jne
jl
xchg
pop
inc
and
fistl
scas
add
dec
cmp
dec
lods
xlat
push
fwait
call
adc
fists
push
popf
xchg
test
cmp
out
sti
sbb
cmp
pop
adc
test
test
jmp
insl
mov
jmp
dec
push
aas
mov
fiadds
sub
fdiv
test
sarb
mov
popl
jmp
cmpsl
adc
scas
daa
lahf
into
sbb
mov
bound
push
sarb
rcrb
mov
mov
aam
cmc
aaa
and
lea
jmp
add
cwtl
dec
jmp
push
movsb
xchg
push
inc
inc
mov
mov
ret
inc
inc
cmp
std
addr16
stos
les
xor
jecxz
xchg
jp
or
out
xor
aam
fs
push
inc
or
adc
mov
push
pop
fdivrl
popf
and
sarl
xor
lcall
sbb
in
shrl
push
shr
inc
test
mov
ret
pusha
jo
jp
push
das
xor
jmp
dec
add
imul
test
sarl
xchg
push
in
mov
dec
jmp
leave
addr16
lcall
mov
push
or
push
lods
ret
xor
sub
stos
dec
mov
push
dec
mov
inc
andb
aad
mov
fisttpl
mov
and
push
jae
loop
mov
jge
xlat
add
subb
fstpt
fbstp
inc
push
fwait
jnp
cltd
mov
xchg
adc
pop
cmp
scas
cld
shl
lret
gs
data16
mov
aam
add
loopne
fsubr
sub
ljmp
popf
scas
subl
iret
or
sub
jmp
cmp
data16
int3
or
inc
adc
sbb
push
lahf
repnz
gs
lods
les
ss
add
repnz
outsb
xor
insl
ss
in
jb
int3
test
xchg
jmp
pop
insl
std
jmp
inc
push
jne
dec
dec
enter
out
pushf
push
inc
mov
xchg
dec
in
pop
adc
or
ja
sub
icebp
test
cmp
xchg
nop
mov
pop
dec
repnz
pop
mov
icebp
jns
sarb
xchg
fisubl
cs
and
push
ret
or
rcrb
divl
rcrl
call
adc
icebp
cmpsb
loop
pop
fcomps
cmp
add
jb
dec
outsb
out
cmp
fwait
dec
in
push
mov
ljmp
jecxz
or
jns
in
mov
into
jmp
mov
sub
mov
es
push
push
xchg
pop
lea
lea
or
pop
mov
pop
pop
imul
test
fwait
adc
push
adcl
xor
xor
ret
dec
jb
and
adc
fbstp
xchg
icebp
xor
inc
leave
mov
testl
push
push
loop
mov
jmp
jmp
es
lea
xor
push
and
dec
dec
mov
shrl
push
nop
sbb
jne
lcall
sub
clc
xor
pop
insl
xchg
mov
mov
dec
adc
pusha
adc
lods
fwait
push
outsl
pusha
mov
xor
ljmp
scas
mov
out
fcmovnu
nop
xor
loopne
push
or
das
ja
push
mov
cmp
cmp
jb
fwait
adc
loopne
mov
jl
in
call
pop
js
dec
mov
push
in
cli
push
xor
jle
jo
fisttps
sbb
pop
or
cmp
es
jp
mov
mov
xchg
jae
sbb
cmp
sbbl
sub
push
cmp
sub
push
mov
and
jecxz
xchg
fsubs
xor
jl
mov
faddl
cli
test
sbb
jg
add
fwait
ret
movsb
inc
or
inc
aaa
jmp
je
pop
push
lea
jmp
cmp
int
pop
loopne
fsubs
pop
lret
loopne
in
adcl
cmc
inc
pushf
fsubrl
mov
fimull
sub
ds
clc
xor
outsl
out
dec
or
fdivr
pop
mov
cli
mov
push
jg
push
push
mov
out
xchg
movl
cs
fnstcw
inc
scas
outsl
xchg
xor
push
out
daa
jo
pop
dec
insl
fiadds
sub
xchg
sti
mov
sub
jnp
or
bound
andb
jbe
pushf
loopne
sbb
jns
push
or
insb
paddusw
adc
mov
add
sbbl
je
push
dec
leave
mov
jle
push
xor
aaa
add
pop
xchg
cmp
xlat
movsl
test
adc
push
jl
ror
lods
jmp
scas
sbb
jno
inc
xchg
xchg
arpl
shll
jnp
mov
sbb
add
lock
add
jecxz
mov
push
sbb
adc
lds
out
lds
repz
mov
xlat
jnp
mov
ficoml
out
aas
xor
outsb
adc
test
and
enter
xor
insl
divb
sub
mov
and
adc
ret
icebp
lock
adc
dec
cmpsb
push
jo
and
mov
aas
cmp
das
neg
jmp
jmp
movsb
inc
sahf
dec
vmread
mov
and
cmp
mov
dec
push
icebp
test
and
filds
pop
clc
ret
lcall
ja
cmp
jmp
repnz
ud2
in
scas
sub
js
push
add
cmp
add
dec
jne
and
or
and
jmp
repnz
mov
pop
or
push
out
xlat
pop
add
jmp
and
sahf
jg
sbb
push
xchg
push
out
stos
dec
cld
fstpl
and
sbb
popf
scas
psrld
jnp
ret
inc
mov
or
mov
or
loopne
scas
adc
std
mov
sbb
clc
pop
xchg
mov
push
xor
and
addb
int
sub
mov
out
out
push
mov
fucomp
lods
ret
inc
out
xor
push
adc
xor
outsb
xor
xchg
out
push
loop
push
sarb
xor
fisubs
fnstenv
ljmp
mov
jnp
popf
cs
aas
jo
sub
cmc
ret
fdivr
pop
or
jmp
pop
cmp
out
lcall
popa
pop
mov
test
mov
pop
adc
mov
mov
movsb
ja
arpl
ja
inc
push
cs
sbb
int
xor
push
add
mov
or
js
clc
ror
cld
data16
xchg
mov
movsl
xchg
mov
lea
cs
xchg
xchg
lods
aas
push
jecxz
mov
les
pop
mov
sub
ficoms
or
aaa
rolb
popf
fistl
or
mov
out
pop
cmc
insl
sbb
pop
sbb
ret
and
shlb
cmp
push
cld
adc
cmp
cmpsb
inc
jne
mov
lock
dec
jg
ds
jge
fwait
ret
js
mov
and
testb
or
test
enter
sbbb
lea
mov
mov
aaa
lds
negb
adc
jo
mov
inc
pop
dec
fimull
outsl
push
mov
cwtl
inc
jmp
jae
pop
filds
sbbb
fcoms
jae
scas
ljmp
cmp
dec
hlt
popf
cmpb
sub
jmp
ret
aaa
lea
dec
movsl
ds
xchg
add
lcall
testb
fistpl
xchg
push
and
push
ds
jecxz
int
adc
leave
xchg
cld
jns
test
xchg
cmpl
fdivrl
out
jns
xchg
mov
lahf
ficompl
pop
sub
aaa
sub
inc
negb
clc
hlt
stos
inc
divb
adc
int3
pop
cmp
outsb
andl
cmpsl
popa
sarl
fisubrs
jno
push
sbb
pop
pop
inc
mull
call
fs
sub
out
push
fiadds
dec
jmp
dec
xchg
lret
mov
and
mov
imul
sub
fwait
jo
push
dec
pop
jo
xor
lock
adcl
in
test
mulb
cmpsb
aas
pop
jecxz
mov
filds
jnp
imul
add
sbb
call
test
js
wrmsr
and
mov
outsl
cwtl
xchg
xchg
mov
mov
or
mov
shlb
outsb
sub
cmpsl
cmc
cmp
call
loopne
jl
clc
xchg
dec
cmpsb
xor
mov
pop
mov
lahf
int
push
or
pop
push
addr16
xor
push
or
rolb
ja
leave
outsb
mov
sub
mov
int3
xchg
dec
jmp
xor
lock
inc
jae
pop
das
xchg
jne
push
and
insb
jne
pop
mov
adc
shll
ret
pop
mov
jmp
pop
cmp
into
loopne
aad
lds
fisubrl
adcb
mov
jl
mov
jnp
jno
or
out
inc
inc
mov
cld
lods
inc
mov
adc
lods
shl
aaa
int
div
pop
clc
or
lret
imul
mov
enter
cmc
push
push
rorl
repz
in
inc
in
pop
stos
mov
push
call
incb
push
notb
adc
jnp
sti
jae
aas
sub
movq
insl
inc
push
fdivrp
cld
imul
dec
sbb
mov
xor
dec
push
cmp
jne
in
jmp
mov
cwtl
arpl
nop
insb
or
dec
idivl
sub
pop
in
popf
fsts
call
sbb
test
cmp
lret
add
pusha
mov
inc
mov
cltd
rorl
mov
sbb
xchg
pop
std
adc
pushf
invd
out
out
dec
xor
movsb
daa
test
jb
sub
xchg
or
mov
ss
sub
mov
and
pushf
xor
pushf
out
dec
sbb
sbb
imul
xchg
comiss
push
lahf
mov
int3
out
sti
clc
adcl
hlt
stc
test
adc
jne
sahf
hlt
in
cmc
pusha
push
mov
xor
adc
scas
sbbl
jge
sti
outsl
mov
cmp
mov
cmc
add
pop
xor
outsl
cs
neg
sub
sbb
rolb
stos
arpl
pop
imul
cmp
movsb
dec
lret
das
sbb
sti
in
addl
sbb
dec
out
mov
ljmp
movsb
jecxz
les
pop
dec
iret
push
dec
jmp
sub
je
stc
xor
sbbb
pusha
js
gs
mov
cltd
xor
add
rclb
sbb
mov
movsl
push
mov
jp
push
popf
mov
lods
stos
push
xlat
add
jmp
and
ljmp
popf
jae
xchg
cmpsl
push
push
call
lods
dec
das
sbb
inc
mov
jle
sbbb
daa
inc
xchg
stos
inc
jmp
pop
and
and
xchg
loope
fisttpl
test
lret
or
and
jmp
xchg
or
xchg
out
jge
jne
sbb
int3
jle
fcoml
mov
dec
scas
mov
and
mov
mov
mov
mov
das
xlat
leave
insb
and
fidivl
adc
mov
add
in
mov
inc
out
es
lods
cmp
shrb
dec
rclb
xor
jnp
addb
inc
xchg
or
movsl
int
loope
popa
into
orl
xchg
call
sub
pop
cld
jmp
sub
fistpll
mov
lcall
cmp
and
xlat
sbb
cltd
add
cwtl
push
jle
cmp
push
outsl
mov
xchg
xchg
les
or
shll
xor
cmp
push
repnz
jecxz
or
jmp
cmp
and
adcl
imul
aaa
in
or
insb
inc
clc
xor
mov
cmp
mov
mov
fsts
int
mull
fsubs
scas
pushf
mov
push
cmp
jge
mov
shrb
lret
lcall
jae
mov
mov
bswap
mov
dec
insl
jge
fstpt
cltd
jae
sub
fidivrl
out
mov
fisubl
pop
xchg
loop
push
lret
test
mov
xchg
inc
add
add
leave
adc
loopne
mov
xchg
xchg
mov
xor
xor
cmp
incl
addr16
jmp
fnstenv
into
int
jp
pop
xchg
push
lods
mov
jnp
pop
jne
xor
sti
jno
mov
cmpsl
inc
data16
out
pop
inc
in
jo
iret
les
in
in
les
xchg
sbb
inc
cld
out
jecxz
pop
push
push
cmp
out
and
inc
pop
test
mov
mov
clc
ds
jne
jmp
inc
xor
mov
push
ret
inc
add
stos
and
add
inc
jle
iret
xchg
mov
pop
mov
fnstsw
xor
rclb
pop
dec
pop
ret
pushf
lds
jp
mov
push
fisttpl
rcrl
movsb
into
mov
jmp
add
mov
add
jmp
aas
ss
mov
xlat
imul
add
mov
sbb
adc
cltd
xor
lcall
in
push
jb
jp
push
jle
out
sub
fistpl
xlat
jno
or
mov
loop
adc
ljmp
or
jl
es
xor
jmp
jae
push
pop
mov
jmp
ja
pop
fbstp
ljmp
mov
mov
xchg
lahf
jo
outsl
les
jne
bound
cmp
add
and
inc
sbb
and
rorb
lcall
inc
loopne
fldcw
shll
loopne
cmp
mov
psubw
xchg
cmpl
pushf
outsb
push
jp
enter
add
imul
xor
cmp
mov
or
aas
push
insb
ret
jmp
popf
mov
mov
cmc
mov
mov
jmp
mov
fistpll
pop
in
in
aad
mov
lock
push
mov
in
xor
pop
push
pop
mov
pop
jno
leave
cmpsl
flds
or
fstl
test
mov
push
std
adc
add
call
iret
and
sahf
in
popf
aaa
daa
mov
nop
in
mov
aam
clc
pop
sub
pop
cld
xchg
xor
roll
add
test
cmp
jo
adc
cwtl
xchg
xchg
rcl
fcoms
add
or
push
xor
je
insl
adc
pop
pusha
inc
jno
pop
out
mov
arpl
ja
lcall
lock
pop
xchg
pop
pushl
mov
shlb
decb
stc
adc
cmpsl
rcrb
xor
mov
shr
mov
incl
sahf
sbb
mov
movsb
ljmp
or
pop
mov
pop
mov
insl
cmp
jg
clc
ja
lea
fsubr
insb
xor
pop
jmp
lcall
jecxz
push
mov
cld
cmc
mov
jb
lods
sub
imul
xchg
jg
popf
jo
ljmp
xor
jmp
mov
mov
mov
add
jae
movl
push
xchg
into
je
jnp
ficoml
jno
xlat
imul
and
mov
push
fistl
js
push
in
push
stc
je
cmp
lods
xor
sbb
inc
repz
ret
imul
mov
add
outsb
inc
inc
jno,pn
lret
or
or
mov
pop
in
stc
jbe
pop
aas
nop
repz
popa
mov
arpl
movsb
popf
or
test
dec
lret
loope
std
mov
pop
cmp
mov
cmpsl
insb
notl
nop
cltd
inc
push
mov
shll
pop
popf
inc
jmp
neg
jmp
cmp
xor
in
jne
adcb
adc
outsl
mov
or
fwait
icebp
sub
cmc
sbb
divb
mov
stos
adc
inc
mov
std
xor
mov
sbb
mov
jbe
sub
out
subl
jne
xchg
sbb
sbbl
sar
jmp
ficoml
pop
sahf
mov
lds
mov
iret
mov
cwtl
cli
hlt
sbb
shlb
rcll
pop
jge
jb
das
xchg
aad
cli
lock
enter
lret
jmp
lods
enter
add
ret
cli
pop
push
dec
mov
adc
mov
enter
int
jl
ljmp
aas
sarb
inc
xor
push
adc
cs
mov
popa
lea
xchg
lds
mov
and
fildl
dec
hlt
inc
sub
outsb
mov
mov
scas
popf
inc
jmp
and
in
cmp
inc
mov
xlat
jmp
rcr
ljmp
add
mov
pop
push
shl
or
xchg
jecxz
popf
rclb
jge
fs
aad
and
sub
fisttpll
sti
adc
sti
int
ljmp
add
repnz
cmpsb
sbb
and
out
lcall
pushf
sbb
stos
pop
lods
push
jp
jne
mov
insb
mov
sub
jne
jle
enter
mov
xchg
pop
mov
mov
inc
jae
sbb
inc
dec
loope
mov
sub
inc
dec
lea
gs
rcl
pop
xor
ss
sub
push
sbb
insb
xor
lds
sbb
pushf
mov
pop
in
andl
ret
cltd
cmp
rcll
in
dec
push
lea
push
call
pop
mov
ret
jp
jecxz
scas
hlt
testb
jle
das
cmp
pushf
loopne
jp
jmp
jb
jae
jmp
data16
dec
dec
shlb
dec
leave
jl
cmpsb
fnstenv
xor
shll
add
or
push
sub
sbb
in
sbb
sbb
add
js
or
fistpl
and
call
pop
shrb
icebp
jl
adc
cmp
lcall
lcall
push
ss
clc
pop
mov
insb
mov
adc
inc
pop
inc
cmp
or
xchg
cld
mov
ret
cmc
ret
sahf
adc
outsb
kortestb
push
in
or
cmp
xor
jg
jg
popa
out
jmp
push
int3
dec
and
icebp
mov
and
mov
sahf
pop
push
mov
push
jl
inc
mov
jmp
lahf
xchg
repz
lea
adc
or
pop
repz
inc
push
xchg
cwtl
packsswb
mov
sbb
mov
pop
or
jmp
lret
ss
les
das
add
sub
stos
fisubl
pop
inc
or
lcall
outsl
inc
lock
popf
inc
push
jmp
andl
imul
inc
clc
dec
mov
ja
les
add
inc
xchg
xchg
pop
mov
shl
jo
mov
rorl
lea
push
mov
mov
int3
sbb
test
push
test
xor
push
inc
mull
pop
push
call
sub
mov
jmp
mov
lcall
lods
xchg
aaa
lods
dec
mov
sahf
sti
clc
aam
sub
mov
sahf
in
repz
jno
or
inc
mov
adc
fisttps
mov
and
dec
fldl2e
ja
in
mov
push
xchg
jno
loope
xchg
adc
sbb
push
jle
jnp
out
mov
xor
jb
sahf
xchg
or
mov
les
dec
jmp
test
mov
adc
fmuls
cltd
add
loop
cli
push
cli
popf
loope
lock
push
rcrb
movsl
mov
push
pop
jp
cltd
mov
xchg
pop
pusha
push
jb
insl
lret
bswap
scas
out
add
mov
jecxz
gs
mov
ficomps
jle
repz
fidivl
jbe
jle
jecxz
loope
rcll
lds
je
clc
xchg
mov
je
pop
nop
incl
aam
divb
outsb
mov
mov
shl
imul
cwtl
jmp
pop
mov
enter
fldl
popa
lcall
mov
push
mov
sbb
nop
or
rorl
shlb
cmp
xor
loop
fsubl
and
mov
or
inc
jmp
xchg
iret
addr16
sub
adc
mov
sahf
scas
ljmp
int3
jno
sbb
sbb
clc
lds
and
lds
fidivrs
pop
ret
orb
mov
fnstsw
fsubs
js
sub
fdivr
cmpsb
repnz
pop
push
test
aaa
push
and
add
mov
add
rorl
mov
jno
inc
sub
push
aas
gs
shl
mov
insb
jae
loope
xchg
lock
nop
mov
cmp
push
gs
fidivs
dec
mov
mov
inc
arpl
xor
inc
out
into
iret
mov
lret
iret
cld
out
mov
or
cmp
call
xchg
push
clc
cmpsb
pop
push
enter
xchg
nop
sub
add
mov
cld
xor
rcrb
mov
sbb
std
fists
loope
shrb
lret
scas
mov
and
mov
testl
sbb
ret
xor
rclb
cmc
dec
outsb
lds
out
mov
cmp
daa
stos
cwtl
aam
push
bound
adc
dec
sbb
out
fiaddl
leave
pop
jbe
sahf
cld
andb
out
negl
outsl
sub
jmp
in
outsl
cmp
and
clc
inc
adc
mov
inc
add
mov
cmp
mov
pop
jae
repnz
mov
nop
fcmovu
sbb
inc
mov
in
mov
xor
adc
test
pop
mov
or
fstl
ss
pop
loopne
jmp
pusha
push
jb
stos
xchg
jae
loopne
int
adc
scas
cmp
sub
mov
movsb
in
cmp
and
in
fimuls
aad
orb
push
idivb
mov
inc
xor
mov
jmp
std
lock
fstpl
or
cli
aaa
cld
adc
or
sahf
jl
mov
mov
push
arpl
sahf
mov
mov
hlt
jl
or
cmp
aas
setne
addb
sbb
imulb
mov
inc
push
adc
pop
push
dec
push
push
pop
xor
inc
jns
push
imul
jmp
xor
pop
sahf
dec
sub
and
push
sti
jns
cmp
pop
jns
adc
pop
jp
sbb
jne
push
push
in
sub
inc
ja
inc
sbb
xor
iret
sub
pop
sub
adc
inc
rclb
fisubs
mov
jmp
mov
lods
pushf
in
lret
inc
sub
mov
lock
add
sbb
push
clc
js,pt
incl
je
xchg
sbb
pushf
sub
dec
jg
or
jmp
xor
lahf
inc
pop
dec
rolb
data16
nop
repnz
in
push
outsl
cmp
pusha
and
xchg
test
jo
mov
movsb
cmp
outsb
xchg
movsb
jae
es
mov
in
add
out
loopne
adcb
je
addr16
into
mov
adc
adc
dec
sbb
hlt
lds
push
mov
icebp
inc
jmp
testl
inc
int
rcll
fisttps
pop
fdivl
mov
cmp
addl
pushf
and
shll
dec
mov
dec
mov
icebp
push
ret
sub
pop
inc
rcl
loop
cli
js
in
mov
mov
and
jae
js
jns
enter
ret
xor
js
in
and
jb
cmp
ds
repnz
lahf
sub
and
sbb
add
cwtl
lea
bound
mov
xchg
lret
mov
fimuls
fsub
daa
mov
inc
lret
lret
cmp
jmp
nop
push
fwait
push
in
popf
loop
jg
xlat
dec
push
ret
lcall
out
movsl
das
sbb
inc
stos
pop
mov
mov
lods
popa
xchg
test
mov
int
or
jmp
mov
add
add
mov
std
mov
jmp
and
int
mov
push
add
xchg
and
sub
cmpsl
es
add
sub
gs
cmp
sbb
test
dec
sahf
test
cmp
out
int
adc
or
stc
sbb
int3
arpl
inc
jmp
and
in
and
stos
jb
mov
xchg
push
inc
stos
clc
std
push
dec
sub
data16
mov
jl
test
and
fcomps
pop
or
dec
enter
and
pop
mov
in
out
sbb
cmpsb
shlb
sti
jmp
jnp
push
adc
fsubrp
lock
das
pop
hlt
xchg
push
das
adc
repnz
insl
pusha
mov
push
push
lahf
pusha
aad
popl
xchg
je
fimuls
pushw
pop
cwtl
pmulhuw
imul
xorb
fsubr
insb
aad
decl
out
inc
inc
xor
lcall
fstl
sub
rcll
out
mov
scas
inc
dec
xor
adc
icebp
mov
adc
in
enter
fwait
mov
mov
xchg
sti
dec
pop
adc
mov
rcl
or
jmp
cmp
ja
mul
cltd
inc
lea
outsb
add
mov
jae
adc
ljmp
dec
jle
push
or
sbb
sbb
mov
das
xchg
dec
xchg
adc
push
push
pop
test
dec
aad
daa
pop
or
addr16
out
and
add
mov
dec
data16
jge
xor
mov
aas
jnp
sub
sti
test
fiadds
xchg
pop
aam
cmp
int
pop
push
add
inc
cmp
out
fdivr
lods
adc
cmpb
aam
pop
popf
adc
jns
sbb
add
jmp
adc
xchg
add
adc
inc
js
cs
mov
sbb
fldcw
and
inc
sbb
mov
push
outsl
ljmp
ret
and
xchg
add
mov
mov
jge
sahf
js
stc
pushl
push
rclb
mov
cwtl
mov
repz
jae
xchg
inc
clc
or
jecxz
js
mov
mov
inc
cli
push
cltd
push
lock
dec
dec
lret
adc
jmp
ret
ret
mov
jo
cwtl
push
out
out
fwait
sbb
enter
fdivrp
mov
test
das
mov
mov
adc
sbb
call
stc
mov
cld
cli
ret
pusha
dec
cwtl
test
push
lods
or
cmp
xchg
sub
pop
cmp
xor
xchg
xor
cmp
cmc
lods
pop
lods
leave
in
aaa
daa
cmp
inc
pop
add
movsb
and
and
cld
repnz
inc
idivb
clc
and
cmpsl
push
stos
or
into
in
mov
sbb
lods
inc
jo
mov
fisttps
xor
andb
xor
jmp
mov
jbe
pop
or
pusha
sti
mov
rcrb
fimuls
lret
lcall
jbe
arpl
cmpsb
out
insb
movsb
repz
jge
mov
xchg
orb
js
inc
mov
cmp
sbb
or
push
jg
mov
test
cwtl
or
jmp
cmp
xor
test
sbb
ds
aaa
inc
rcrl
add
jmp
fimuls
dec
in
add
xchg
in
mov
addl
ja
mov
dec
jmp
jbe
xchg
jmp
jp
adc
cmp
popa
ss
jp
clc
and
sbb
pop
lret
mov
icebp
or
mov
or
or
adc
jbe
pop
sbb
lock
pop
or
fucomp
stc
clc
inc
cmp
jl
bound
xor
or
adc
test
dec
jge
jg
pop
sbb
sbb
aam
aam
cmc
cmp
adc
add
mov
ljmp
aam
stos
push
add
push
scas
ljmp
rorl
jnp
mov
insb
int3
push
or
xchg
jb
outsb
sub
xchg
push
mov
mov
aas
fdiv
pop
in
lods
jno
sub
lret
scas
dec
xchg
adcl
inc
jno
lahf
leave
setb
test
mov
xchg
adc
mov
je
mov
clc
jl
xor
ret
or
int3
fwait
sub
sub
fisttps
cmp
les
and
ss
push
pop
or
mov
in
and
stos
out
daa
add
mov
xchg
cmp
xchg
cmpsl
xor
sbb
sub
jnp
popf
push
rcll
mov
and
xor
pop
mov
sbb
jns
sub
jns
mov
dec
xchg
jmp
dec
xor
shl
sub
sub
xchg
scas
jg
aad
mov
cmp
movsl
lcall
xchg
js
dec
mov
and
or
hlt
stc
popf
mov
mov
test
mov
xor
dec
cmp
data16
mov
shl
sbb
loope
sbb
nop
iret
mov
repz
adc
add
dec
and
dec
lahf
sub
inc
test
stos
stos
fbstp
stos
mov
push
push
add
push
jne
ds
rorl
loope
sub
and
je
idiv
mov
jecxz
andb
ret
stos
or
push
and
sar
jmp
test
popl
arpl
jecxz
inc
fildll
mov
push
and
ljmp
mov
arpl
mov
xlat
adc
xchg
xchg
mov
cmpsl
and
xchg
or
add
mov
daa
test
mov
sub
jnp
lret
fwait
inc
cmp
test
push
outsl
and
sub
jae
addr16
jmp
daa
sub
lods
scas
fistpll
xchg
je
movsb
inc
jmp
jp
mov
inc
xor
pusha
ds
sbb
sbb
xlat
shlb
fucompp
or
cli
jnp
inc
push
insl
out
les
or
pop
es
les
dec
sbb
cmpsb
ja
sbb
jmp
cmp
push
fwait
pop
js
int
adc
xchg
rolb
cmc
shrl
xor
dec
imul
dec
ja
faddp
lds
jmp
mov
add
push
inc
ljmp
mov
insl
mov
sub
mov
imul
dec
sub
cmp
add
xor
push
inc
scas
gs
xor
imul
outsl
aas
das
and
add
add
xchg
sbb
rcr
in
mov
addr16
inc
xchg
pop
icebp
repz
leave
je
arpl
push
movsl
pop
push
out
imul
loope
jmp
mov
xchg
rclb
push
loop
mov
and
out
mov
outsl
xlat
std
mov
cmpsl
push
cltd
lahf
rol
repz
cli
scas
pop
pop
loopne
or
stos
and
push
pop
sbb
je
testl
ja
xchg
mov
bswap
jmp
mov
mov
ss
push
mov
inc
mov
repz
scas
mov
shll
xchg
dec
adc
into
ficoms
cmp
fwait
lods
sar
sub
and
cmp
rolb
dec
push
roll
mov
sti
mov
mov
dec
xchg
loopne
jmp
daa
repnz
test
adc
sahf
mov
jmp
ror
mov
mov
xchg
pop
jns
mov
push
lock
jle
jbe
ss
lods
fists
mov
ds
jae
fildl
add
sbbl
nop
add
xchg
dec
cld
jmp
lcall
sar
sbb
repz
xor
cltd
xor
inc
outsb
loop
jo
dec
and
loope
xor
or
test
adc
cmp
ljmp
add
subb
mov
pushf
pop
sbb
cmp
jp
repnz
inc
fbstp
out
xorl
mov
sub
fiadds
lret
jmp
shrl
clc
mov
cmpsl
cwtl
inc
loop
cmpsl
leave
sti
lock
pop
outsl
ds
int
daa
pop
xchg
ret
insl
leave
rcr
sub
mov
and
mov
xor
sub
and
sbb
loopne
stc
jae
jmp
cmp
mov
int3
add
imul
ficompl
add
mov
adc
sbb
cmp
and
lods
add
ret
or
xchg
cmp
cmp
cmp
and
pop
mov
dec
pop
mov
cmc
pop
mov
adc
jne
mov
dec
cmp
in
dec
sbb
mov
xchg
pop
pop
inc
loop
xorb
orb
ror
int
dec
in
nop
push
clc
outsb
testl
cltd
lea
lcall
add
mov
or
movsl
incl
fst
js
pushf
sub
inc
imul
call
jl
push
jo
add
mov
and
je
lret
xor
scas
vpsllw
jbe
mov
jmp
or
lret
jge
mov
insb
repz
dec
js
inc
sbb
cmp
mov
inc
cli
out
nop
add
stos
out
pop
lods
cmp
pop
jl
adc
neg
jmp
xchg
push
in
pop
mov
daa
pop
ds
xchg
xor
jmp
out
jae
lahf
imul
sti
xchg
add
cltd
outsl
mov
mov
or
sbb
add
add
fwait
lods
xchg
inc
pop
in
adc
jo
jle
dec
dec
push
inc
adc
in
push
add
js
daa
inc
xchg
sbb
lods
inc
xor
mov
cmpsb
dec
and
jmp
sub
jg
inc
ret
pop
xchg
aam
jmp
xchg
stos
jg
loopne
mov
lods
in
adc
in
or
fdiv
decb
lret
test
inc
addr16
loop
push
ljmp
jmp
push
es
ss
mov
xchg
or
decl
adc
dec
in
lods
sub
mov
inc
mov
mov
mov
enter
lea
jmp
push
xchg
add
sbb
push
add
lea
mov
sbb
mov
add
cmc
mov
aad
push
ljmp
mov
mov
ljmp
aas
mov
xor
and
xor
sbb
xchg
sub
imul
cwtl
push
push
inc
repnz
lds
inc
dec
ret
push
mov
fucomip
push
sti
incl
mov
cmp
dec
loopne
inc
mov
test
in
out
dec
rolb
outsb
jnp
sti
jmp
popa
xor
movsb
mov
ja
and
pop
sub
loope
or
add
and
cmp
jno
xor
add
arpl
movsl
scas
adc
std
adc
dec
xchg
lods
dec
int
and
jp
xor
stos
mov
imul
mov
lock
ficoms
mov
sbb
push
je
loope
lret
mov
addl
pushf
mov
mov
mov
xchg
jbe
inc
and
loop
pop
out
mov
jmp
sbbb
repz
sbb
mov
adcl
add
xor
mov
sub
inc
mov
mov
cmpsb
pop
push
hlt
jo
addb
inc
jmp
ds
push
or
push
or
ds
or
add
jo
push
mov
push
loopne
bound
data16
gs
xchg
imul
cmp
cli
sbb
mov
roll
jb
aas
test
inc
push
and
mov
dec
mov
outsl
pop
inc
lret
ss
movsl
insl
fwait
xchg
pop
lds
sbb
adc
stos
dec
pusha
mov
cmp
or
icebp
mov
fs
out
xchg
ret
jnp
pop
fwait
jecxz
rolb
hlt
sub
cmpsl
cwtl
cmc
popf
out
rolb
add
push
and
add
into
and
jno
ror
ret
fildl
pushf
lahf
popl
imul
mov
outsl
fidivrs
fdecstp
xchg
outsb
mull
xor
mov
and
add
pop
mov
add
push
clc
loop
and
inc
push
test
in
test
out
xlat
arpl
popl
sub
lret
jmp
jns
xor
jmp
adc
int3
fdivs
push
loopew
aas
mov
ret
xchg
aas
orb
dec
adc
loopne
cmp
daa
sbb
cmpsb
mov
ja
test
ss
out
sti
xor
stc
aas
pop
sbb
xor
mov
imul
cmp
add
jmp
inc
jo
fcoml
test
mov
aam
daa
mov
inc
add
mov
addr16
sbb
jp
cmp
sarb
in
cmp
ljmp
and
mov
pop
xchg
sub
mov
cmp
jge
pop
outsl
jbe
mov
pop
mov
or
gs
repnz
fnstcw
daa
inc
mov
rol
fwait
insb
data16
sahf
add
mov
int
dec
mov
insl
mov
ret
xchg
pop
jmp
jge
sahf
int3
icebp
cli
jp
mov
add
xorb
fstl
leave
jge
cmp
sbb
mov
add
loopne
mov
dec
xchg
mov
call
inc
mov
in
xor
adc
insb
lret
pop
ret
pop
mov
repz
cmp
in
in
fwait
stos
mov
jecxz
add
sub
arpl
mov
dec
mov
out
fwait
in
xor
loopne
lds
mov
and
movsl
push
lds
add
or
sbb
enter
pusha
cltd
subl
mov
les
push
add
jmp
sub
outsb
mov
test
and
mov
fcom
mov
jmp
inc
dec
pop
cs
jmp
movb
aad
pushl
mov
leave
or
add
jmp
jns
or
arpl
mov
fdiv
cmp
daa
xchg
sub
xor
mov
push
call
push
fsubrs
test
out
in
dec
jle
mov
in
xor
lods
sbb
stos
pop
xor
or
movsb
xor
mov
loope
insl
insl
outsl
or
push
adc
push
mov
sub
gs
mull
xchg
out
lods
mov
js
adc
add
inc
jmp
mov
jo
pop
int3
iret
jmp
dec
imul
jl
xor
jb
mov
and
and
jmp
push
call
push
sub
inc
lods
push
cli
jne
push
dec
push
mov
xchg
pop
mov
pop
sub
insl
out
nop
imul
outsl
inc
sub
arpl
jbe
jle
fwait
dec
repz
jmp
mov
es
rorl
jns
dec
xor
mov
mov
aas
dec
jmp
fisubrl
add
jmp
add
aaa
adc
mov
xor
mov
les
sbb
enter
pop
inc
xchg
cmp
lods
sub
rcrb
out
and
jo
lret
sbb
xor
dec
inc
ljmp
jmp
fdivrl
in
inc
ss
insl
pop
and
lock
ret
in
mov
jb
mov
mov
xlat
call
push
test
jns
mov
inc
jmp
cld
mov
icebp
popa
repz
sub
out
push
mov
cmpsb
dec
lea
jmp
out
pop
or
loop
xchg
jmp
inc
mov
ret
mov
lock
mov
hlt
push
adc
dec
fnstcw
sbb
fidivl
sub
dec
jmp
out
int
arpl
popa
xor
stos
jl
inc
scas
add
jmp
cmpsl
int
sbb
movsl
stos
mov
in
jno
sahf
inc
mov
enter
lret
jmp
xchg
sbb
ss
inc
out
nop
lea
fidivrl
or
rcrl
push
and
cmpsl
popl
sub
xchg
mov
push
adc
pop
jo
push
xchg
inc
cmc
mov
push
sti
mov
xchg
loope
sbb
dec
testb
jp
addr16
popa
aas
mov
and
jb
movsl
pop
adc
int3
pushf
xor
push
xlat
ljmp
push
out
lds
sub
fwait
sub
ret
scas
pop
adc
mov
push
call
clc
clc
lret
inc
adc
add
mov
push
mov
out
sub
push
lret
add
mov
mov
mov
push
sbb
sahf
out
mov
bound
mov
jp
idivl
out
push
andb
pop
decl
adc
popf
fldt
adc
xchg
int3
and
mov
outsb
mov
lret
adc
pushf
mov
sti
rorl
push
add
lahf
test
cmp
or
test
add
mov
data16
jnp
jmp
orb
ret
mov
or
xchg
lret
sbb
testl
jp
ljmp
jle
ret
xchg
mov
jmp
add
jmp
aad
clc
pushf
in
gs
in
test
popa
jle
push
cmp
add
jle
push
leave
pop
or
jnp
mov
and
jmp
push
pop
popa
cmp
data16
xlat
ror
shrb
xchg
nop
or
scas
aaa
pusha
xchg
mov
addr16
and
ljmp
insl
mov
leave
and
lods
xor
in
enter
lahf
rcrl
movq
pop
push
cmp
mov
inc
cmp
mov
xchg
jmp
mov
push
popf
lret
push
mov
adc
test
jg
xlat
adcl
xlat
lods
fisubs
sub
mov
cmp
ds
cwtl
xchg
and
xor
xor
or
insb
mov
push
push
push
out
ficomps
aaa
dec
mov
mov
pusha
inc
xor
dec
jno,pn
pop
mov
hlt
sub
in
jl
fsubs
insl
ffree
out
push
mov
cmp
lcall
inc
mov
jmp
inc
les
testb
bound
cwtl
mov
push
add
lods
fwait
xor
inc
pop
pop
mov
repnz
enter
movsl
ret
sbbl
repz
sub
adc
daa
rol
arpl
ficompl
add
nop
rolb
pop
aaa
psubq
ficoms
das
notb
pop
std
in
fistpl
cmp
push
jge
in
stos
jo
out
mov
fwait
sbb
push
sbb
fsubp
int3
lret
outsl
clc
inc
imul
xchg
sub
fistl
jae
add
and
mov
lods
cmp
lods
adc
fimull
xchg
cmc
repnz
add
jmp
mov
and
cmpsl
in
cmc
pop
std
mov
cmpsb
mov
add
jnp
pop
xor
rorb
out
inc
cmc
xchg
aaa
sbb
jo
aad
imul
cmp
jmp
mov
nop
loope
dec
dec
jle
js
movl
add
sub
jmp
push
adc
push
cs
int
push
dec
xor
aam
orb
cmpsb
adc
xchg
fwait
pop
mov
cltd
insb
dec
jmp
test
lcall
cli
mov
mov
or
push
mov
addr16
jle
jo
add
fstl
aaa
inc
in
daa
pop
jp
sub
xchg
sbb
push
pop
pushf
mov
cmp
out
test
mov
jmp
pusha
test
fcoml
das
pop
dec
dec
jmp
sarb
scas
cmp
loope
add
mov
sbb
fstl
aas
jmp
scas
cmp
scas
sahf
clc
stos
and
mov
cmpsb
iret
mov
loopne
push
js
daa
mov
sbb
push
or
add
jb
inc
xor
sub
mov
mov
push
orl
pop
fs
xor
push
adc
mov
pop
adc
ficoms
mov
ret
mov
fstl
push
mov
lret
rcrb
xor
pop
mov
repnz
pop
repz
push
nop
mov
dec
pop
pop
popf
movsl
lcall
push
fisttps
mov
fwait
or
mov
mov
test
fdivs
mov
lret
fimull
lret
jmp
loope
push
xor
insb
dec
faddl
xchg
call
add
fcomps
and
rcl
xchg
or
fidivrl
push
lret
mov
jge
test
mov
mov
aad
mov
rolb
xchg
jge
adc
xor
and
cwtl
mov
jmp
mov
or
and
pusha
pop
enter
dec
jmp
mov
sbb
subb
push
ljmp
out
test
sub
mov
jbe
xor
in
popa
mov
nop
push
adc
nop
dec
push
imul
out
adc
adc
mov
sbb
add
xchg
add
sbb
in
push
and
sbb
mov
test
dec
rorb
fnstsw
dec
mov
ret
dec
sti
aaa
cmc
jae
add
cmp
mov
bound
addl
push
lahf
ljmp
in
adcb
rep
movsl
mov
xor
movsl
or
jp
cld
mov
xchg
xchg
mov
fbld
dec
or
mov
add
mov
dec
movsb
cmp
lret
dec
cmp
sti
sub
push
lcall
ds
add
and
mov
pop
push
outsb
outsb
or
sbb
mov
ss
movsl
call
ds
shr
inc
cmp
inc
xchg
lock
or
xchg
push
cmp
jne
enter
test
orb
xor
pop
jle
je
sti
stos
mov
xchg
mov
test
jbe
stos
mov
mov
xchg
cwtl
mov
jle
cmp
fidivrs
pushf
add
jmp
and
or
into
out
in
sub
jnp
mov
inc
mov
sbb
fcmovnbe
pop
push
and
cld
inc
loopne
mov
push
ud2
push
les
das
mov
xchg
rolb
mov
test
xchg
stc
xorps
adc
xrelease
cltd
lods
push
jbe
sbb
mov
inc
in
add
cli
or
adc
mov
nop
xor
enter
xchg
mov
das
mov
xor
test
mov
popa
or
dec
xor
jmp
mov
cmpsl
jp
ds
lds
outsl
gs
push
jmp
push
pop
and
jp
push
repz
cld
sub
dec
jl
movsl
inc
cli
lret
cwtl
les
mov
jg
mov
jno
cmp
push
inc
andl
cli
decl
daa
scas
push
fisttps
addr16
fyl2x
aad
push
mov
fdivs
push
mov
mov
fwait
xchg
sub
iret
dec
dec
stos
inc
nop
mov
pop
rcr
es
add
mov
call
imulb
xchg
push
insl
sbb
xor
xor
jg
pop
push
sbb
sub
dec
insb
mov
cmp
push
jnp
cmp
fbld
nop
jbe
and
jmp
fs
jns
jle
mov
orb
mov
scas
adc
push
aam
adc
insl
dec
sbb
fstpl
mov
pop
xorl
sarb
inc
jge
xchg
mov
hlt
gs
sbb
jmp
mov
je
data16
lock
decl
sahf
mov
imul
bound
imul
das
push
inc
dec
out
pusha
subl
lahf
fnsave
sbb
leave
jle
add
inc
push
cmp
push
dec
lahf
sahf
xor
lods
adc
outsb
xchg
fwait
mov
bound
pop
ja
add
mov
mov
jl
nop
iret
hlt
pop
or
cmc
push
or
pop
jne
xor
roll
mov
push
data16
mov
dec
xchg
jge
jg
icebp
sub
dec
mov
push
jle
mov
xchg
cmp
out
xlat
mov
push
jne
mov
leave
dec
jge
nop
or
mov
sub
push
popa
lock
faddl
and
mov
movsl
jp
out
adc
mov
stc
push
or
sub
daa
sarb
lahf
and
push
std
pop
scas
outsl
push
dec
cmp
xlat
sbb
aas
call
xor
mov
mov
fdivrl
sub
mov
xor
ja
xchg
in
enter
sub
adc
mov
cld
pop
adc
mov
sbb
dec
jp
and
movb
cld
pop
adc
mov
jmp
push
pop
inc
cmp
jmp
in
cmp
push
test
bnd
adc
pop
cmpsb
jo
ja
mov
lock
push
sbb
and
adc
and
sub
cmp
sub
xor
in
stc
mov
sbb
out
xchg
adc
push
jnp
andl
or
fwait
insb
sub
das
mov
sub
imul
sbb
mov
inc
shrb
jge
xchg
push
fiadds
push
push
xor
popa
inc
jne
add
rcll
adc
cmp
dec
lcall
mov
jge
and
jbe
mov
and
push
aas
pop
decb
cmc
mov
adc
push
push
push
rorl
rorb
push
ljmp
adc
adc
xchg
xchg
cld
movsl
movsb
push
or
mov
cltd
lds
lock
mov
lahf
cld
sub
inc
lret
in
cmp
shlb
push
cli
push
nop
iret
adc
pop
mov
pushf
mov
out
das
add
mov
xor
lahf
push
leave
push
sub
fsubr
jne
mov
es
cmp
bound
jmp
push
enter
push
jg
sub
xor
out
push
add
mov
sbb
es
hlt
data16
rcr
or
and
or
pop
aas
lcall
mov
sub
xor
jbe
pusha
clc
fwait
or
inc
daa
pop
and
xchg
lock
or
pop
inc
loopne
repz
imul
and
cld
subb
jo
stos
mov
mov
lahf
mov
fadds
stc
popa
or
cmp
lods
rcrb
cltd
mov
sub
xchg
fnstsw
in
mov
mov
sbb
xor
int3
adc
xor
lods
fs
test
pop
xchg
gs
jp
addr16
jl
popf
fwait
mov
jg
xchg
loop
adc
xor
mov
xchg
rcrb
movsl
iret
movl
push
and
fdivs
and
outsb
inc
mov
adc
inc
xchg
push
mov
imul
add
gs
mov
ret
cmpb
push
pop
xor
dec
js
xchg
jge
xchg
and
jo
subl
inc
das
sahf
xor
inc
push
inc
xchg
push
mov
shl
sub
jmp
and
les
lahf
loope
mov
inc
std
cmp
pop
stc
jle
ficompl
jp
int3
sub
mov
push
jmp
cwtl
into
xor
push
and
add
jmp
aaa
notb
sub
inc
lret
rolb
imull
pusha
out
lahf
mov
pop
xchg
mov
icebp
bound
add
mov
in
out
into
mov
jns
xor
push
ss
xchg
or
test
pop
mov
and
cmc
test
mov
lcall
sub
psubsw
mov
adc
push
jno
mov
std
sarl
or
lock
cmc
out
stc
loopne
stos
movsb
addr16
cmc
mov
mov
insl
mov
pop
sub
int
mov
pop
jmp
ds
jle
mov
xchg
int
jb
cmp
rcrl
jg
cltd
inc
xor
int3
scas
add
mov
movsl
test
xor
jno
or
test
mull
fcompl
xor
adc
cld
xorl
ss
das
sub
and
ds
jp
sarl
mov
addb
lock
or
notb
loop
add
jmp
inc
mov
rcrb
mov
jmp
pop
std
outsb
push
adc
xor
cmc
loopne
dec
data16
pop
dec
inc
lcall
fimull
out
enter
enter
cmc
jp
ret
frstor
jl
mov
out
fwait
loopne
rorb
and
adc
jne
xchg
ds
ret
mov
sbb
inc
dec
cmp
xchg
mov
or
aas
in
in
push
mov
sbb
push
mov
jmp
dec
jg
and
fldcw
ret
jns
mov
fsubl
dec
cwtl
out
outsb
push
das
adc
mov
addb
push
cmp
cmc
cmp
leave
inc
adc
stos
xchg
gs
sahf
push
mov
sub
xor
cwtl
movsb
lret
add
jne
test
daa
imulb
insb
bnd
inc
add
outsl
sbb
movsb
or
sbb
jae
xlat
call
in
sbb
inc
movsl
and
cli
jo
shll
fwait
rolb
or
lds
mov
dec
dec
mov
js
or
iret
icebp
adc
xlat
loopne
push
mov
inc
insl
dec
push
je
lret
add
call
jbe
mov
ljmp
mov
aam
das
jecxz
and
mov
mov
rclb
mov
mov
lret
sahf
out
popa
sbb
and
ja
fwait
inc
push
cli
mov
fldl
mull
cmovne
add
in
lods
stc
sub
mov
rclb
fsubs
jmp
adc
js
xchg
shlb
mov
cltd
dec
cmp
sub
and
std
add
jmp
xchg
adc
and
jle
jno
mov
cmc
dec
stc
cmp
mov
jl
mov
in
sub
cmp
xchg
push
inc
xchg
adc
adc
xor
dec
push
lods
repnz
pop
mov
and
adc
rcl
push
fs
pushf
xlat
inc
sti
xor
cwtl
lods
and
imul
inc
in
scas
fdivl
and
sbb
jge
test
adc
push
sbb
out
popa
jmp
dec
sub
popf
mov
cli
or
xchg
pop
out
es
dec
aaa
cmp
cmp
dec
push
rcl
roll
adc
call
pop
mov
push
and
inc
and
and
dec
cmp
into
mov
push
ljmp
pop
aaa
cld
mov
jge
lret
lret
ret
jne
lea
dec
lods
call
mov
mov
xchg
push
fstl
and
fidivrl
ret
sbb
enter
fldenv
int3
xchg
xchg
dec
mov
sub
jmp
jge
pop
mov
jne
xor
or
je
pop
fadds
xchg
mov
fimull
fs
mov
shrl
scas
fnsave
out
mov
arpl
mov
je
and
mov
add
call
xchg
cmp
dec
and
push
push
xchg
addr16
mov
adc
in
sbb
xor
in
enter
xchg
jmp
mov
shlb
xlat
cmpsl
ss
mov
sahf
xor
mov
and
jmp
insl
loope
jo
clc
mov
fcomip
mov
jecxz
outsl
je
sbb
cmc
mov
imull
lea
loopne
jmp
and
xor
pop
stos
enter
lcall
adc
inc
add
jmp
xchg
faddp
dec
xchg
iret
xchg
cli
adc
aam
or
lcall
lret
stc
sbb
mov
aaa
out
dec
out
lret
xrelease
mov
jecxz
jae
aas
repnz
push
push
lods
xor
scas
pop
xchg
push
fucomp
cmpsb
cwtl
dec
loope
sub
or
mov
dec
loop
loop
sbb
mov
ds
mov
test
sbb
loope
ret
roll
jmp
je
adc
scas
cltd
mov
or
std
sub
out
push
in
and
lock
push
add
data16
pop
sub
mov
out
int3
mov
scas
xor
shrl
lock
adc
insl
sbb
sti
pop
and
dec
and
sbb
mov
into
iret
jo
mov
fidivrl
out
leave
mov
std
adc
enter
xchg
jo
test
add
push
xchg
lcall
stc
enter
scas
dec
das
inc
mov
cmpsl
adc
and
push
aaa
pushf
push
jle
push
in
repz
movsl
adc
fisubrs
shrl
inc
and
in
lretw
and
sub
jmp
mov
insb
repz
jmp
jmp
xchg
jle
add
xchg
fldcw
sbb
rclb
aaa
loop
or
ljmp
jmp
daa
push
loope
add
pmullw
dec
je
aam
cmpsb
pop
sub
jp
dec
fsubrp
in
lock
lods
lds
mov
adc
mov
xor
ja
jg
sti
lea
gs
test
test
ret
or
lea
fmuls
fldcw
dec
mov
pop
cmp
push
adc
repnz
std
inc
cmp
pop
test
mov
push
sbb
dec
push
notb
stos
out
push
add
clc
add
popf
xchg
mov
popf
mov
push
adc
and
out
lods
outsb
ds
jnp
or
mov
stos
xchg
dec
scas
jb
sub
xor
mov
aam
repnz
aad
mov
mov
jmp
jbe
fistpll
jns
aas
dec
nop
mov
mov
jns
inc
sti
test
inc
jb
movsb
xchg
cmpsb
imul
mov
add
add
add
mov
add
mov
add
add
add
lea
add
mov
add
lea
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
add
aaa
