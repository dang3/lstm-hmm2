jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
push
push
push
mov
xor
not
xchg
lea
lea
mov
lea
and
push
adc
xor
adc
mov
lea
mov
ror
xor
mov
shl
xor
xor
ret
rcr
mov
rcr
xor
lea
neg
mov
not
lea
and
adc
rcl
rol
mov
mov
xor
mov
mov
not
xor
shl
mov
rcr
mov
rol
lea
mov
rol
neg
xor
mov
rcr
mov
not
xor
lea
and
lea
mov
xchg
xor
mov
mov
not
xor
lea
neg
adc
xchg
lea
mov
push
mov
adc
xor
not
rol
neg
xor
not
xor
pop
lea
neg
shr
mov
xor
shr
xor
xchg
not
neg
xor
not
xor
lea
xchg
lea
xor
lea
add
xor
not
lea
xor
lea
mov
xor
xchg
lea
rol
lea
xchg
mov
mov
xor
lea
xor
xor
rcl
mov
xor
xor
shl
mov
xchg
mov
mov
adc
shr
mov
mov
shl
xor
add
ror
not
mov
mov
mov
mov
not
jmp
mov
xchg
lea
mov
rcr
adc
mov
mov
xor
neg
mov
lea
mov
lea
lea
mov
xor
mov
rcr
shl
lea
mov
and
lea
mov
lea
neg
mov
mov
rcr
lea
rcr
neg
mov
neg
mov
mov
ror
shl
mov
neg
not
mov
lea
ror
rol
xor
xor
mov
xor
lea
lea
lea
lea
rcl
xor
ror
and
mov
not
xor
neg
mov
mov
mov
xor
shr
adc
xor
mov
add
neg
lea
not
xchg
lea
rcl
mov
xor
mov
lea
mov
lea
xor
xor
lea
rcr
xor
xor
xor
mov
push
call
lea
not
mov
neg
mov
lea
and
movl
lea
mov
lea
neg
add
lea
mov
lea
xor
xor
rcr
xor
neg
lea
neg
lea
xor
rcr
push
and
xor
mov
neg
lea
mov
call
mov
lea
mov
rcr
lea
mov
xchg
xor
mov
mov
ror
mov
shl
dec
je
mov
adc
mov
ror
shl
xor
adc
xor
neg
xor
xor
mov
xor
mov
mov
xor
xor
xor
mov
xor
xor
not
xor
not
xor
xor
mov
mov
mov
lea
xor
xor
lea
movl
and
mov
xor
adc
xor
lea
mov
mov
lea
mov
mov
mov
xor
xor
xor
xchg
xor
mov
not
lea
mov
xor
neg
xor
xor
add
lea
and
xor
push
rol
mov
mov
rcl
push
mov
xchg
rcl
mov
mov
mov
rcl
pushl
ror
mov
mov
mov
mov
neg
xchg
mov
lea
pushl
mov
lea
lea
lea
xor
call
shl
xor
xor
lea
lea
mov
lea
ror
mov
mov
xor
xchg
ror
mov
ror
mov
neg
xor
rcr
mov
shr
xor
mov
ror
mov
mov
adc
mov
rol
rol
mov
mov
xor
xchg
mov
shl
xchg
neg
neg
not
xor
xor
mov
lea
neg
mov
mov
rcl
not
push
add
mov
lea
mov
not
mov
neg
adc
not
xchg
lea
lea
neg
not
lea
lea
lea
mov
popl
mov
xchg
lea
neg
adc
neg
add
mov
xor
not
neg
not
add
not
mov
rol
neg
mov
rcr
lea
not
xor
xchg
decl
jne
xor
xchg
xor
xor
rol
not
neg
mov
and
lea
add
mov
mov
mov
xor
shr
lea
mov
not
neg
xor
xor
mov
rcl
rcr
not
lea
mov
lea
mov
neg
rcl
shl
jmp
not
mov
mov
xor
adc
aaa
les
jno
fwait
insl
mov
imul
lock
dec
push
and
mov
or
adc
cmp
test
pop
js
into
xor
push
jo
xchg
out
out
nop
mul
push
inc
jb
dec
pop
mov
sub
aad
xchg
push
sbb
ja
push
or
mov
into
out
ljmp
mov
insl
xor
xchg
out
adc
adc
out
pop
and
imul
dec
rclb
sbb
out
adc
ficompl
mov
insl
mov
adc
pop
sbb
in
lds
out
sarl
adc
inc
faddl
out
mov
jno
mov
sub
scas
xor
popf
and
imul
xchg
add
outsb
jnp
fwait
cmp
inc
push
fisubs
xchg
mov
imul
push
cltd
xor
scas
xor
pop
imul
xchg
fs
jno
lahf
dec
aas
sub
adc
xor
dec
mov
call
cwtl
and
mov
fwait
insl
mov
inc
mov
out
push
dec
fldt
ljmp
inc
add
add
inc
sbb
pop
mov
pusha
jae
inc
xchg
fs
xchg
adc
inc
in
mov
sub
sub
in
popa
adc
test
xlat
jl
sub
dec
fldt
xchg
imul
dec
dec
fldt
rcrb
loope
jns
cmp
pushf
sbb
insb
out
xchg
cwtl
push
dec
fldt
loop
dec
clc
imul
clc
imul
xchg
jns
cltd
pop
mov
sub
outsb
cmp
fisubrs
cmp
cmp
lahf
or
loopne
sti
dec
sub
xor
dec
sub
push
dec
and
pop
cmp
mov
and
dec
inc
xor
or
dec
leave
inc
repz
and
fmulp
sub
xchg
test
inc
adc
mov
add
pusha
sti
and
lret
xchg
mov
shlb
inc
sub
mov
inc
ret
cmp
and
fidivs
mov
fcomps
mov
push
and
clc
mov
and
fwait
inc
sub
lds
xor
pop
push
push
adc
es
push
mov
sub
test
leave
sub
xchg
aam
cmpsl
pop
xor
pop
loopne
xor
mov
push
bound
pop
dec
ljmp
icebp
sub
dec
test
jecxz
scas
test
mov
stos
pusha
in
xchg
dec
dec
jns
or
stos
sbb
lret
push
ja
es
mov
push
and
ljmp
mov
stos
push
inc
shrl
pushf
movsl
dec
or
xchg
ja
lds
pop
inc
aad
mov
dec
sarl
dec
sub
aam
loopne
inc
dec
sub
push
sbb
and
or
and
cltd
inc
lret
push
and
es
push
dec
pushf
rcrl
dec
sub
cmp
sub
pusha
test
mov
leave
pop
mov
adc
pop
dec
sub
sub
aad
push
dec
stos
lods
pop
aas
sub
frstor
arpl
cmpsb
xchg
ret
lcall
lock
pushf
arpl
cmp
cmp
xchg
or
dec
inc
sub
mov
test
mov
adc
js
sub
sub
test
push
dec
or
es
sub
push
or
dec
or
adc
add
dec
inc
pop
das
xchg
mov
stos
or
or
test
arpl
cmpsb
xchg
stos
pop
add
sub
push
or
stos
xchg
push
or
fbstp
or
and
stos
xchg
imul
and
imul
ffree
insb
mov
or
push
test
out
xlat
stos
fnsave
jbe
or
pop
cmpsl
pop
sub
sbb
lods
mov
stos
sbb
push
jne
dec
shlb
dec
sub
cmp
nop
imul
ret
push
ficoms
push
mov
test
fisubrs
sub
and
add
and
mov
pop
dec
addr16
push
xor
jno
pop
inc
mov
push
insb
je
sbb
mov
sub
push
inc
sahf
push
and
sahf
es
cmp
js
pop
inc
sub
cs
addr16
test
sbb
add
jmp
inc
test
pop
sub
dec
push
pop
shr
jo
mov
mov
mov
inc
mov
mov
push
shrl
into
mov
adc
and
sub
inc
and
xchg
mov
stos
sub
movsb
call
fbstp
push
inc
test
dec
mov
push
pop
inc
test
cmp
pop
cwtl
mov
insb
pop
bound
jnp
jo
dec
pop
add
jns
pop
ret
sbb
sub
push
arpl
push
sbb
cwtl
sub
push
push
add
push
and
ficoms
sub
orb
test
ret
addr16
mov
stos
push
clc
test
mov
and
insl
pop
and
inc
sbb
sub
orb
and
lea
dec
adc
out
sub
push
mov
push
and
add
mov
fs
hlt
push
mov
test
ret
sar
stos
jo
testb
sub
push
and
and
pop
ficoms
dec
pop
pop
test
cmp
clc
sub
and
fnstsw
ret
jmp
mov
pop
test
inc
adc
and
dec
push
mov
je
stos
adc
pushf
adc
sub
lret
stos
fldl
sub
and
xchg
xchg
mov
imul
fimull
pop
out
imul
jne
cmp
inc
das
dec
cmp
pop
pop
mov
sub
mov
and
sub
inc
cmp
pop
pop
stos
inc
or
cwtl
push
aaa
loope
cmp
sbb
sbb
xor
adc
lea
push
jmp
dec
xlat
jo
dec
cmp
add
insb
jge
dec
jecxz
mov
inc
pop
ss
leave
push
clc
dec
and
inc
cmp
in
cmp
inc
or
cmc
add
push
popa
jl
pop
push
sbb
mov
mov
mov
fisubrs
fnstenv
adcb
test
leave
pop
and
out
adc
les
sub
jnp
sub
and
inc
cmpsl
pop
fisubrs
add
bound
icebp
add
sbb
aaa
jge
mov
push
xlat
sub
jno
jno
ds
push
test
sub
pop
push
mov
mov
add
pop
and
and
mov
les
push
cmpsb
mov
jns
dec
push
push
pop
xchg
stos
popf
aad
push
pop
loop
or
add
cmp
xchg
or
loop
push
add
loopne
jae
insb
test
jno
jle
push
int
xchg
push
or
outsb
sarb
jnp
les
jmp
dec
jns
xchg
inc
lods
scas
cli
xorb
mov
or
pop
jae
or
cmp
cmp
push
ss
stos
addr16
into
sbb
popa
shlb
inc
jmp
in
xchg
adc
rol
data16
and
add
jmp
xchg
aaa
sbb
adc
stos
adc
jle
jno
gs
and
arpl
and
jae
fidivrs
or
xor
fnstsw
lds
and
sbb
adc
mov
data16
and
arpl
push
mov
and
pusha
inc
adc
sbb
sub
xchg
es
pop
cmc
bound
les
mov
push
into
jg
jae
jle
pop
sbb
int3
add
or
movsl
inc
shll
stos
mov
sub
or
andb
int
stos
push
inc
test
push
bound
xchg
push
mov
cmp
adc
adc
push
jne
insb
lods
jb
sub
inc
jno
loope
mov
mov
jge
cmp
shlb
mov
shrl
sbb
inc
ffreep
jle
call
sub
test
push
push
xchg
pop
rorb
inc
shr
adc
lret
std
dec
outsb
sar
cmp
es
push
sub
stos
jno
ret
imul
lret
add
push
sub
push
and
cmp
or
add
testl
mov
adc
jmp
roll
cltd
or
call
jp
adc
and
inc
or
jge
movsb
int
mov
leave
dec
adc
jne
into
inc
mov
out
arpl
pop
fisttps
ds
xorb
outsb
adc
pusha
aad
push
mov
sub
adc
push
mov
dec
add
pop
leave
shrl
cmp
std
jge
jecxz
hlt
into
push
push
jge
push
jmp
xor
or
jns
mov
inc
pop
adc
adc
sarb
push
xor
xlat
jne
cmp
stos
rcr
pop
pop
add
shlb
inc
cmp
jge
push
dec
pop
aam
icebp
aad
ja
or
dec
aas
adc
dec
fcmovbe
cmp
cwtl
lods
inc
push
adc
fwait
or
inc
inc
loope
push
mov
jle
inc
cs
xor
in
inc
incl
leave
sbb
xchg
mov
mov
ret
add
fistpl
cmp
add
inc
adcl
loopne
dec
adc
push
mov
stos
and
cli
mov
add
and
inc
mov
lock
mov
rcll
push
aad
jbe
insb
push
rclb
fnstenv
xor
test
mul
insb
fldl
sub
or
dec
push
sarl
ljmp
mov
sub
cmp
mov
dec
sbb
inc
lods
pusha
imul
pop
and
mov
add
fwait
addr16
scas
sub
add
cmp
sbb
daa
lds
adc
pop
fistpl
sub
enter
aaa
pop
jge
dec
pop
jae
dec
jnp
outsb
mov
xchg
push
pusha
inc
sub
ficomps
sbb
pop
faddl
push
imul
test
inc
bound
adc
aad
cmpb
jg
rcrl
ficompl
jns
dec
es
xchg
pop
dec
fcmovbe
aam
cmp
gs
mov
sub
and
push
inc
xchg
dec
push
je
mov
scas
es
push
jl
iret
rep
jl
pop
xchg
or
inc
imul
and
loopne
push
push
mov
add
inc
pop
pop
add
and
movsl
push
cmc
xor
push
adc
sub
add
and
int
xor
lcall
adc
add
test
mov
or
and
pop
mov
dec
or
test
mov
fmuls
push
enter
dec
pop
dec
sbb
xor
inc
mov
xor
cmc
xchg
int
sbb
lcall
mov
icebp
inc
in
dec
sbb
insl
and
cmpsl
adc
and
inc
sub
sub
push
and
rorl
mov
mov
pusha
loope
push
loop
or
subl
xchg
daa
imul
gs
and
nop
rcr
not
les
je
out
or
sbb
xor
or
das
jae
daa
ror
xchg
repz
pop
jmp
push
mov
adc
popa
push
cltd
lahf
pusha
dec
cs
sub
bound
pop
dec
pop
pop
ljmp
and
loope
cmp
sub
sti
dec
fs
push
dec
pop
jmp
mov
xor
imul
data16
insl
adc
int
in
inc
inc
xchg
jno
adc
xor
mov
sub
fsub
idivb
lret
mov
pop
xor
jno
aas
dec
pop
jmp
inc
pop
in
inc
cmp
jge
mov
sub
pop
jl
mov
sahf
mov
mov
rorb
mov
jae
call
sti
pop
insl
and
sti
sub
adc
cmp
test
cmp
mov
cmp
and
addr16
jns
lds
cmp
rol
cltd
and
je
sub
jle
bound
js
popf
jl
push
insb
push
jle
sub
dec
outsl
outsb
es
insl
scas
fs
aad
inc
imul
js
xchg
dec
cmp
adc
add
push
imul
mov
and
push
and
rcrl
and
sub
pop
cs
xor
add
jle
mov
je
dec
sub
icebp
test
mov
xchg
push
adc
jmp
jns
xor
add
add
rcr
movsl
outsb
xor
rclb
and
ja
add
aad
sub
adc
pop
dec
jg
xchg
addr16
bound
or
jb
fs
sbb
std
pop
popf
sbb
mov
inc
fsubp
cmp
loop
and
adc
scas
push
jge
sbb
ja
dec
cli
sbb
adc
sbb
dec
aaa
inc
imul
mov
cld
add
aad
cmp
sub
mov
sahf
dec
sub
sarl
dec
push
test
mov
push
shlb
pusha
ret
out
gs
sub
push
push
sub
aad
pop
test
inc
sub
cmpl
sti
idivb
addr16
lret
sub
and
sbb
xor
icebp
xor
lret
xchg
dec
add
mov
sbb
push
sbb
in
in
dec
addr16
cmc
movsl
sbb
xchg
sbb
lea
.byte
