rep
bound
push
notl
xor
ljmp
ja
inc
pop
pop
imul
stos
xor
cs
loop
adc
scas
push
mov
mov
popa
xchg
hlt
mov
mov
ja
mov
push
cld
and
test
adc
push
ljmp
xor
pop
adc
mov
xlat
or
out
das
lcall
push
fwait
rorb
xor
xchg
imul
jno
enter
leave
sbb
iret
iret
aad
mov
jl
pop
pushf
loope
sbb
dec
test
inc
adc
aas
sbb
and
movb
loopne
sub
mov
mov
jg
fwait
stc
addr16
mov
in
insb
fsubl
sbb
loope
call
mov
mov
xor
adc
mov
sbb
lds
ret
sahf
and
in
lret
iret
add
mov
mov
jb
sbb
or
add
sub
xor
push
dec
pop
sub
rorl
push
int
jmp
dec
xor
jecxz
iret
lock
dec
pop
sarl
mov
jne
in
cltd
std
xchg
xchg
pop
dec
hlt
pop
xchg
cmp
pop
into
pop
xor
test
cmp
pop
pusha
hlt
int
test
mull
imul
mov
and
std
ss
lds
push
mov
cmpsl
add
push
pushl
outsl
notb
mov
stos
cltd
pop
jecxz
and
sub
or
xor
clc
cmc
push
faddl
shlb
test
inc
lods
adc
test
cmp
ss
or
nop
push
push
arpl
aaa
out
sbb
in
pop
push
jp
and
push
mov
loopne
xchg
sbb
cli
mov
mov
push
xchg
mov
icebp
adc
sbb
lret
lods
addb
mov
push
lret
int3
xorl
and
jle
jp
ss
and
hlt
xchg
adc
pop
push
iret
pop
xchg
jo
je
pop
xchg
repz
cmpsl
imul
outsb
std
clc
rcr
imul
pop
mov
add
js
jge
es
pop
cmc
insl
mov
dec
repnz
sbb
sbb
mov
cmp
lea
jp
in
ds
inc
xchg
push
mov
lea
cmp
sahf
add
das
aad
aas
sarb
adc
add
mov
pop
hlt
adc
mov
shll
mov
mov
fsubs
sti
jbe
in
iret
jp,pn
aas
mov
inc
dec
or
iret
sbbl
cmp
add
sbb
hlt
mov
rcrl
jmp
and
fldenv
mov
fldt
jl
mov
cld
and
lcall
gs
imull
pop
fyl2xp1
rcr
push
iret
mov
cmpsl
cltd
shll
ja
stos
push
ss
xchg
cmpsb
dec
mov
mov
cmp
mov
sub
int3
subl
hlt
sbb
in
aad
imul
insb
iret
dec
cmpsl
and
repnz
or
xchg
out
push
stos
push
xchg
mov
scas
mov
add
das
gs
aaa
cmp
cli
dec
xchg
inc
pop
jnp
and
lock
leave
cmc
inc
push
adc
out
xor
orb
push
les
and
arpl
lcall
sbb
lods
cmp
push
stos
adc
arpl
je
loopne
sbb
xor
fwait
pop
cmp
call
ja
ss
cld
in
cmp
sub
sub
setno
dec
jg
jns
add
sbb
sbb
test
and
fadds
in
arpl
rclb
inc
out
inc
outsl
stc
popa
xlat
shrl
adc
int
dec
jmp
fidivl
dec
stos
jo
jbe,pn
lods
fistpl
mov
cmp
pextrw
xor
int3
mov
or
push
icebp
out
stos
jmp
jl
nop
jge
push
push
jg
fists
test
push
rorw
cmp
xchg
mov
cld
movsb
leave
lods
inc
jp
dec
push
mov
adc
int
fs
xor
rclb
jns
mov
popa
dec
add
xchg
orl
cmp
add
mov
lahf
arpl
pop
xchg
push
aas
sub
push
fildl
es
sub
mov
mov
or
sub
rclb
and
inc
outsb
push
jns
and
int3
test
mov
sub
outsl
into
pop
jl
es
out
aaa
out
jmp
push
cmpsb
jno
push
ret
addl
les
fimull
mov
adc
lea
mov
xor
dec
add
inc
sub
inc
sub
lea
mov
dec
dec
inc
add
xor
dec
jne
lea
mov
mov
inc
pop
inc
dec
pop
inc
and
pop
lea
imul
sub
inc
inc
inc
sub
lea
mov
dec
add
add
ret
push
dec
add
add
lea
mov
add
add
sub
push
push
push
push
dec
or
lea
push
mov
sub
dec
inc
sub
or
lea
mov
dec
mov
dec
push
dec
inc
xor
xor
lea
push
mov
inc
push
dec
sub
pushl
inc
call
and
add
lea
imul
inc
inc
add
dec
xor
pop
ret
add
mov
dec
add
inc
add
and
lea
imul
dec
sub
mov
dec
dec
cmp
jb
or
mov
lea
movzwl
xor
dec
dec
xor
inc
inc
pop
or
lea
test
jbe
imul
add
inc
inc
sub
sub
lea
mov
dec
add
inc
inc
xor
lea
mov
inc
dec
inc
add
inc
or
lea
movzbl
inc
and
inc
dec
mov
dec
and
movzbl
lea
add
dec
dec
and
inc
inc
mov
and
lea
mov
movzwl
inc
mov
inc
dec
mov
inc
sub
lea
mov
add
sub
dec
jne
inc
mov
inc
or
lea
mov
dec
add
inc
dec
and
lea
mov
mov
inc
inc
dec
add
sub
lea
mov
mov
inc
add
test
jbe
add
inc
sub
lea
mov
sub
dec
dec
dec
sub
lea
mov
sub
inc
inc
inc
dec
add
lea
mov
add
inc
and
inc
dec
mov
or
lea
movzbl
movzwl
sub
add
dec
dec
and
sub
xor
mov
lea
imul
movzbl
dec
inc
mov
dec
add
mov
xor
lea
movzbl
imul
dec
add
add
inc
and
add
jmp
ret
push
sub
lea
mov
dec
sub
sub
inc
or
lea
mov
add
dec
inc
inc
and
lea
imul
inc
dec
inc
add
sub
lea
mov
inc
add
inc
add
or
lea
mov
sub
dec
inc
inc
and
mov
lea
mov
xor
inc
dec
add
inc
dec
cmp
je
call
sub
xor
lea
mov
add
add
add
inc
xor
lea
pop
mov
ret
push
dec
push
sub
inc
push
dec
push
or
push
lea
mov
push
inc
dec
add
dec
sub
call
lea
push
mov
inc
add
mov
inc
mov
sub
add
mov
lea
mov
test
je
dec
inc
inc
add
xor
lea
mov
inc
sub
mov
dec
dec
xor
lea
mov
inc
dec
dec
repnz
inc
and
add
lea
jmp
mov
dec
jmp
push
mov
mov
dec
call
inc
dec
call
dec
add
call
lea
movswl
inc
dec
inc
add
call
and
lea
call
mov
dec
inc
sub
inc
or
call
lea
mov
call
inc
sub
inc
push
dec
call
xor
lea
inc
call
sub
dec
dec
pop
and
lea
mov
add
inc
pop
dec
inc
pop
dec
sub
lea
mov
pop
dec
add
dec
add
xor
lea
mov
add
pop
inc
inc
pop
inc
and
mov
lea
mov
call
sub
dec
sub
add
ret
xor
lea
push
mov
sub
push
add
inc
push
dec
sub
push
lea
mov
push
dec
dec
mov
inc
inc
push
or
ret
push
lea
add
inc
dec
inc
and
lea
imul
inc
dec
dec
inc
sub
lea
dec
add
sub
sub
and
lea
mov
dec
dec
add
dec
add
pop
jmp
dec
dec
inc
or
lea
mov
inc
dec
add
dec
pop
pop
ret
push
and
lea
mov
inc
dec
push
dec
inc
push
xor
lea
push
movswl
call
pop
ret
sub
inc
mov
dec
add
mov
inc
or
mov
lea
mov
mov
inc
dec
xor
dec
inc
mov
add
lea
inc
imul
inc
inc
inc
add
sub
cmp
jb
lea
push
mov
inc
push
inc
add
push
dec
sub
mov
lea
mov
xor
add
inc
xor
sub
dec
xor
xor
lea
push
inc
xor
add
inc
mov
dec
add
mov
lea
imul
movzbl
inc
sub
dec
add
add
add
lea
add
movswl
inc
movzbl
sub
inc
dec
add
lea
mov
dec
inc
inc
inc
inc
mov
or
lea
dec
add
inc
cmp
jb
inc
xor
xor
lea
mov
imul
jmp
and
adc
and
out
aad
mov
pop
add
loopne
in
mov
jbe
push
into
popf
out
lret
or
repz
jno
xlat
adc
das
cmp
jne
adc
sub
in
xor
jmp
mov
outsl
sub
fstl
mov
dec
aas
jle
scas
push
in
mov
cltd
lcall
lret
pop
aam
ljmp
cltd
mov
jne
cld
pop
pusha
dec
in
jmp
outsl
scas
jmp
lahf
and
insb
mov
and
cmpsb
cmpsl
fldt
sbb
sub
add
cmp
push
hlt
jae,pt
jl
imul
xorl
pop
scas
push
mull
cmc
stc
das
add
cmp
inc
lcall
jg
aam
sub
fistps
mov
lea
mov
rcl
xchg
subl
je
mov
bound
lea
adc
testb
inc
add
cmpsw
mov
movsl
imul
test
cmp
lret
pop
out
fwait
add
xchg
out
jbe
add
repz
inc
mul
enter
adc
cmp
test
icebp
xchg
xlat
sub
cmp
shll
or
jnp,pn
ja
or
cmp
mov
scas
or
into
xchg
incl
not
cli
mov
push
inc
loopne
bound
pop
outsb
iret
lret
xchg
cwtl
int
pop
cmp
sub
lock
test
orb
mov
jno
arpl
cmp
loop
in
inc
inc
cltd
mov
lea
jg
hlt
fwait
movsl
imul
jg
push
enter
push
inc
mov
test
out
mov
ja
sub
scas
shlb
shrb
rorb
and
jge
popf
xchg
aas
sub
pop
mov
jg
lea
push
clc
xor
shll
shll
ss
jecxz
mov
scas
adc
negb
mov
mov
vmaxss
mov
add
mov
or
xor
out
pop
lds
inc
mov
xor
push
ret
ds
mov
jns
push
jno
sub
mov
jnp
fisubrl
cmp
jb
stc
jno
into
sub
lahf
popf
mov
mov
fadd
arpl
jns,pt
push
inc
dec
xlat
fistl
push
out
nop
loop
mov
pop
adc
in
cmp
push
outsl
cwtl
xor
sub
sbb
xlat
cs
and
aaa
inc
xor
aaa
xorl
das
sbb
insl
push
xor
scas
dec
pop
stos
jle
pop
stos
jae
sub
imul
mov
push
fwait
xor
xor
iret
outsl
jnp
adc
rcrl
cmp
idivb
pusha
shll
jge
and
mov
jne
movsb
inc
loop
xor
pop
dec
inc
popf
pop
into
int
in
or
xchg
sarl
push
cli
mov
jae
inc
mov
or
dec
dec
fnstsw
sub
push
or
ficoms
dec
pusha
cmp
das
mov
jb
fisubs
int
inc
dec
adc
les
sub
lahf
jmp
daa
scas
cli
pop
xor
insl
mov
das
xchg
xchg
add
fld
mov
dec
test
fwait
int
rorb
inc
clc
mov
iret
and
cs
icebp
mov
sub
push
outsl
lea
sub
sub
mov
xchg
js
lret
add
insb
fstl
scas
pop
lcall
xor
sti
pop
in
jg
push
test
fbstp
inc
xor
jge
mov
fists
sbb
aas
jo
scas
es
or
push
inc
push
insb
push
and
fistl
inc
sbb
pop
scas
xor
scas
test
xor
inc
mov
or
stos
inc
and
jp
imul
ret
outsb
imul
repz
dec
gs
outsl
ds
xchg
js
fbld
inc
das
jno
sub
inc
push
cmp
jge
imul
jb
dec
xchg
pop
xor
ret
xor
xchg
stos
aad
shlb
fs
adc
lods
mov
adc
jne
mov
xchg
out
jg
in
mov
cmpsl
adc
cmp
add
loopne
aad
pushf
cmp
andb
cmc
lcall
mov
out
ljmp
movsl
jle
adc
sbb
inc
mov
sub
in
lock
imul
aaa
jno
mov
sub
sub
jecxz
jb
xchg
lods
ficomps
pop
cs
inc
pop
push
pop
push
dec
inc
outsl
or
test
outsb
and
mov
push
fwait
mov
andl
lods
sahf
movsb
lcall
pop
add
repnz
mov
sahf
cmpb
sbb
mov
adc
imul
inc
xor
out
lret
jecxz
push
xor
or
mov
aad
pop
into
ret
shll
xchg
push
xchg
sbb
dec
frstor
pushl
cmp
dec
mov
fimuls
mov
pushf
pop
repnz
sbb
xor
pushf
movsb
gs
inc
lods
sbb
mov
fistps
mov
movsb
fcmovbe
jno
xor
fs
or
lock
or
mov
adc
dec
sub
mov
inc
arpl
xchg
adc
enter
movsb
dec
test
cmp
psubusb
in
fstpl
lret
mov
mov
jnp
cltd
mov
xchg
cmp
mov
arpl
fucomi
cltd
das
adc
push
push
adc
clc
cmc
shl
inc
enter
test
mov
outsl
mov
out
int3
cs
inc
gs
xchg
mov
xchg
mov
fsubl
les
ficompl
mov
jecxz
sub
clc
insb
movsb
sbb
and
in
testb
pop
call
bound
mov
mov
and
cwtl
pop
push
pop
and
lret
dec
cmpsl
jbe
sbb
movsb
adc
ret
sbb
scas
subl
add
xchg
enter
stos
jb
insb
dec
xor
jecxz
add
jl
scas
add
mov
jno
jne
xor
repnz
out
call
xor
push
lock
adc
cmp
mov
outsb
lods
inc
fldl
lods
push
or
rorb
movsb
xchg
mov
xchg
imul
cli
out
dec
cmpsl
rcrb
jge
fdivp
mov
or
add
std
add
out
mov
sbb
iret
daa
cmpsb
idivl
add
xchg
hlt
mov
pop
jg
int3
sbb
jbe
or
mov
jle
test
dec
inc
leave
xor
repz
sbb
xor
push
adc
fisubrl
shlb
addr16
ror
lods
push
push
sbb
imul
lahf
in
push
ss
mov
cwtl
dec
jge
loope
dec
jp
mov
das
sub
pop
iret
jge
push
jae
pusha
add
xchg
dec
mov
or
mov
jb
mov
xchg
xchg
or
pusha
inc
daa
in
mov
ljmp
fimull
mov
int3
in
jae
sbb
lods
pop
or
and
and
inc
int
nop
je
mov
and
xor
test
mov
lea
mov
inc
xor
iret
leave
subl
inc
leavew
mov
cwtl
lgs
in
faddl
xlat
decl
dec
arpl
ret
dec
imul
mov
adc
and
push
push
cmpsl
and
xchg
inc
mov
jp
sub
cmp
cmp
cmc
or
sub
mov
cmp
jnp
mov
bswap
or
cmpsb
das
lea
repz
clc
scas
ds
in
cmp
sbb
lret
test
mov
orb
pop
fstpt
lods
out
sub
inc
bound
rolb
stc
fisttpl
stos
xor
dec
mov
adc
stos
jge
mov
mov
push
inc
into
outsl
adc
push
cmpsb
int3
sub
jno
mov
rcrb
xchg
and
pop
or
jmp
bound
mov
mov
and
dec
push
jnp
imull
xchg
sub
rcll
push
push
mov
inc
imulb
out
mov
icebp
iret
add
std
ljmp
and
and
jp
xchg
aaa
pop
rcrb
push
shll
mov
popf
xor
lock
daa
jno
iret
adc
sbb
imul
dec
xor
cld
cmc
sbb
xchg
cld
hlt
or
xchg
sub
rorl
xchg
enter
and
push
or
sti
jmp
cltd
jb
push
insb
jmp
shlb
add
pop
cld
loop
and
adcl
es
mov
je
pop
lods
test
mov
pop
adc
or
arpl
jbe
ret
rclb
frstor
jle
and
sbb
rorl
xchg
mov
loope
lds
sub
push
sbb
ljmp
les
and
ss
js
int3
mov
xchg
mov
sti
aad
cld
stc
in
dec
and
xlat
mov
loope
js
std
mov
push
pop
iret
repnz
jns
sbb
fimull
dec
shl
cmp
xchg
outsb
cmp
inc
loope
jns
and
push
fcoms
vmovntdqa
pop
push
jecxz
incl
mov
in
ljmp
push
mov
mov
push
add
fnstcw
jmp
and
mov
pop
int
push
std
inc
mov
popf
aam
in
add
shll
in
fwait
icebp
popf
pushf
mov
mov
lahf
test
fcmovbe
mov
loopne
or
push
lea
jmp
lcall
jmp
jmp
and
subl
sub
lea
xchg
or
mov
mov
aam
rorb
xor
and
aam
cmc
ds
int3
sub
xchg
cltd
sbb
pop
lahf
xchg
popa
mov
in
xchg
mov
popf
in
scas
into
ret
or
rorl
iret
sbb
pop
xchg
inc
inc
and
lret
sahf
movb
sub
fld
outsl
mov
lret
or
jg
and
sti
pop
mov
cld
mov
mov
jge
mov
xor
adc
fdivrl
adc
fidivs
mov
into
test
bound
popa
or
fs
jecxz
shl
add
data16
int3
and
sbb
popf
add
jmp
adc
cmp
mov
xchg
mov
outsb
jo
sub
jae
test
pop
or
loop
jp
lret
push
imul
es
mov
js
fdivrl
lcall
xorl
testb
xorb
fdivrl
pop
mov
ss
cmp
orb
xor
data16
sub
pop
lcall
loope
sahf
cwtl
loopne
pop
xchg
and
jge
or
repnz
xor
stc
pop
pop
xor
in
dec
lock
pop
popf
nop
lods
in
jmp
push
imul
mov
inc
ljmp
mov
ret
jne
insl
cli
int
cwtl
fs
push
xchg
pop
ljmp
das
mov
nop
ljmp
imul
sbb
clc
sbb
jns
leave
lds
add
xchg
xchg
iret
mov
cmpsl
pop
stos
ret
mov
std
push
sub
stc
movsb
jmp
hlt
shrb
fs
test
mov
pop
and
fs
stc
into
inc
shrl
lahf
mov
pushf
and
push
mov
outsl
push
xor
int
int3
mov
inc
leave
outsl
dec
imul
gs
mov
in
in
add
jle
or
add
add
push
pop
push
icebp
push
ss
in
lods
insl
cld
out
cmp
lods
or
pusha
sbb
mov
fsub
mov
pop
iret
push
sar
and
in
inc
outsb
mov
xchg
mov
hlt
add
mov
pop
lret
fdivrs
push
pop
mov
mov
imul
or
popf
dec
mov
cmp
ret
jno
movsl
int3
call
fdivrp
aas
aaa
out
icebp
subb
sbb
push
mov
or
cltd
and
outsl
cmpsb
inc
mov
out
test
sub
scas
insl
cmp
inc
cli
push
xor
mov
add
jecxz
test
mov
push
sub
fbld
jecxz
or
imul
add
lret
movsl
sbb
test
pushf
dec
xor
pop
pushf
push
mov
loopne
mov
lock
cmc
cwtl
dec
pop
sbb
icebp
popf
mov
mulb
arpl
jbe
cltd
mov
mov
lock
xchg
lahf
popa
cli
lods
ffree
int3
imul
jmp
test
jl
fisttpll
pop
sub
loope
pop
test
les
and
iret
jns
sbb
mov
daa
cmpsl
imul
test
cmc
insl
inc
and
in
lods
ljmp
idiv
bound
ret
insb
out
movsl
pop
sub
pop
out
cmpsb
enter
cld
sbb
pop
mov
je
and
int
aam
pop
lahf
inc
das
lret
mov
insb
aam
push
cmpsb
xor
jnp
loopne
pushl
and
lods
mov
lods
lds
xor
adc
test
mov
frstpm(287
xchg
ljmp
popa
repnz
push
push
sbb
movsl
xchg
sub
iret
loopne
adc
mov
push
clc
ljmp
lahf
hlt
pop
push
cmpsb
inc
and
hlt
dec
xchg
pop
jg
sbb
ret
mov
sbb
dec
addr16
pop
xor
dec
or
test
scas
cmp
and
or
sub
enter
iret
mov
pusha
xor
pusha
mov
stc
mov
pop
push
iret
icebp
movsl
pop
xor
subb
cmp
add
imul
ret
loope
int
lock
sti
xchg
inc
dec
lods
in
cld
adc
inc
in
in
sbbl
dec
xor
and
lret
inc
dec
pop
arpl
scas
jle
inc
shrl
scas
lcall
sbb
jnp
dec
sub
push
sbb
cmc
ss
faddl
xor
dec
adc
push
push
fidivrs
sbb
mov
jns
adcb
into
adc
jne
inc
test
push
push
call
cmp
pusha
inc
shlb
sub
cmpsl
jmp
xchg
push
push
jge
inc
lods
and
mov
rorl
ret
cmp
out
clc
cmp
js
xchg
xorl
mov
icebp
jmp
jp
xchg
cmp
adc
sub
jnp
aam
les
test
pop
insb
clc
or
pop
pop
xchg
xor
js
push
cmpsb
sbb
pop
mov
aas
sahf
push
ljmp
inc
cmp
inc
test
jmp
mov
mov
push
cmc
xorl
mov
xor
ss
jnp
fldl
call
sub
ja
cltd
aaa
jle
dec
fs
ja
les
filds
inc
sbb
push
push
xchg
fsts
fldl2t
push
repz
test
pop
jl
mov
test
pushf
adc
ja
stos
mov
and
and
xor
mov
cmp
mov
jne
cs
xchg
mov
sbb
je
push
push
out
out
pop
fs
xchg
sbb
imul
inc
std
ljmp
orl
push
push
dec
jecxz
sbb
pop
ret
fld
int
inc
loopne
mov
scas
xchg
sbb
std
lahf
out
xchg
fisubs
jg
sub
xchg
pause
outsb
cmp
adc
popf
cmp
sub
out
ret
mov
cmp
hlt
pop
inc
js
icebp
loope
jns
popf
sbb
mov
sub
neg
lods
push
inc
clc
pop
jno
cld
ret
ljmp
negl
sahf
mov
nop
mov
fimull
cmp
iret
xlat
ds
pop
dec
fucomp
insl
hlt
icebp
xchg
dec
popa
xlat
sahf
add
movsb
pop
or
push
or
popa
mov
and
sbb
adc
jnp
leave
and
cmpsb
pop
aad
push
inc
shlb
mov
ret
mov
loop
cmp
sti
or
xchg
mov
retw
jecxz
or
dec
push
jle
pop
test
mov
xor
mov
inc
mov
push
mov
add
mov
movsl
xchg
int
xor
inc
aam
dec
adc
adc
sahf
push
add
xor
test
xlat
insb
lods
cltd
pop
jecxz
es
lods
sbb
stos
movsl
imul
fst
push
mov
int3
cli
inc
push
sbb
push
outsl
fdivp
out
inc
push
cs
dec
pop
jecxz
mov
cwtl
test
jno
insb
mov
std
mov
jecxz
pop
xchg
ret
test
lret
aad
fadds
ret
add
mov
mov
pushfw
sti
into
aad
gs
push
sti
fmull
mov
movsl
rorb
lock
add
fmuls
cld
or
nop
cs
sub
cltd
cli
sbb
call
js
inc
pop
xor
pop
test
pop
inc
sti
xor
inc
add
pop
gs
and
xor
daa
sub
xor
roll
pop
pop
arpl
jno
pop
lock
data16
mov
xchg
jle
inc
inc
pop
in
or
int3
arpl
daa
lea
and
xor
jo
fwait
mov
and
flds
cld
adc
xlat
push
sbb
push
push
test
jge
shll
pop
mov
addr16
daa
bound
pop
clc
or
add
gs
dec
dec
mov
lret
cmc
jb
adc
pop
icebp
dec
or
lahf
pop
inc
xor
or
push
sbb
cmp
lea
repz
sbb
mov
sbbb
test
stc
fwait
stos
lds
popf
add
arpl
in
add
mov
mov
pop
imul
leave
jo
testl
cltd
int3
in
mov
imul
iret
out
cmp
mov
xlat
dec
aad
out
fwait
jno
cltd
and
rcll
outsb
or
xchg
cmp
js
push
mov
inc
inc
mov
repz
sub
sti
xlat
cwtl
bound
add
out
push
das
push
nop
xchg
push
fwait
mov
test
test
fistpl
push
xorl
or
adcl
jb
xor
bound
out
repnz
pop
lods
hlt
test
mov
inc
leave
cmp
js
lret
adc
shrd
mov
add
rcrb
in
xor
inc
stc
mov
cld
out
or
mov
call
jmp
mov
insl
ja
test
cmp
jl
sub
mov
cmp
sub
movsl
les
data16
add
setns
fisttps
mov
addl
push
std
push
cmp
nop
push
or
and
mov
push
cmp
cmp
adc
lock
xchg
mov
jbe
mov
mov
xlat
cli
ret
mul
jno
arpl
clc
push
mov
xor
fimuls
cs
mov
orl
mov
xor
push
dec
repz
ljmp
inc
sti
xor
mov
bound
mov
jae
imul
out
adc
mov
pusha
cli
mov
or
ja
gs
or
movsl
test
mov
mov
into
dec
xchg
cli
and
xchg
addr16
imul
cld
pop
or
xor
fdivl
iret
inc
cmp
mov
mov
inc
mov
call
xchg
pop
mov
jecxz
pop
lock
sub
mov
lret
push
lock
fidivrs
in
sbb
push
imul
mov
dec
mov
je
ret
sar
jae
imull
fwait
dec
movsl
dec
and
sbb
cld
movsl
mov
sbb
rcrl
mov
pop
out
add
pop
cltd
aad
push
insl
jbe
ja
jbe
and
push
xor
movsb
mov
adc
out
xor
inc
xchg
jge
popa
push
push
adc
push
test
hlt
ret
sbb
add
das
rclb
lds
xor
pop
inc
fidivrl
nop
dec
int
or
xorl
les
jg
or
lds
sub
inc
shll
adc
push
dec
loope
int3
mov
popa
mov
add
insl
sahf
sub
xchg
pusha
sbb
fimuls
lods
xlat
addr16
or
ret
gs
sub
mov
dec
jp
out
aaa
stos
and
pop
call
push
dec
mov
inc
pop
inc
inc
pushf
xor
js
loopne
adc
fiaddl
loopne
cmp
and
leave
or
mov
ficompl
cmp
cmp
xchg
or
sahf
push
mov
test
popa
cmp
lods
addr16
inc
ds
pop
jle
cmp
cli
push
call
adc
incl
push
mov
lock
inc
xor
mov
gs
push
sbb
sbb
xchg
inc
or
adc
loope
daa
sti
pop
cmpsl
shrb
push
sbb
sbbl
and
lock
pusha
xchg
add
cmp
mov
pop
cmpsl
mov
jb
jns
cli
jge
lret
sbb
and
adc
mov
fcmovnu
adc
movsl
lahf
mov
aam
mov
mov
movsl
xor
mov
xor
inc
jge
add
xor
je
imul
js
mov
adc
scas
aad
cmc
out
add
inc
je
shlb
push
cmpsb
push
jmp
mov
mov
mov
int3
pusha
movsb
and
cwtl
jg
stos
mov
pop
mov
mov
cmp
add
xor
adc
pop
mov
inc
pop
mov
push
daa
js
popf
movsb
ds
lods
jns
cmc
lcall
mov
lcall
aaa
jle
xor
sti
arpl
shll
gs
push
xchg
and
jp
mov
loopne
rcrl
push
insb
add
loope
cmp
mov
popa
pop
fbstp
insl
push
insl
sbb
xchg
sti
loopne
pop
jmp
and
inc
adc
sbb
inc
inc
cmp
popa
cmp
adc
mov
data16
ljmp
mov
adc
xchg
scas
repnz
mov
xchg
or
neg
pop
and
or
pop
pop
xor
insb
sar
aas
pop
dec
addl
xchg
mov
lret
scas
xlat
push
xchg
sbb
add
das
mov
and
adc
mov
lret
inc
push
xchg
pop
or
xchg
and
pusha
and
mov
or
lock
push
add
stos
cmp
pop
dec
jo
xchg
jo
fiaddl
and
push
ja
adc
test
mov
cmp
xchg
lods
in
out
mov
mov
jmp
movsb
addl
sbb
sub
pop
pop
mov
xchg
shr
in
xchg
mov
cltd
push
push
inc
sub
push
lcall
lahf
mov
lods
xor
xor
or
orb
and
xchg
jl
movsb
inc
mov
ja
iret
sbb
mov
pushf
inc
sbb
add
stos
and
ljmp
jo,pt
sub
fsts
add
ds
sbb
sub
xchg
jl
leave
adc
dec
add
call
int3
pop
vmwrite
push
jge
out
les
sbb
js
stos
mov
ljmp
sti
idivb
sbb
imul
hlt
inc
jle
mov
xor
mov
aam
and
jg
or
int
sbb
xor
adc
in
enter
shll
dec
sbb
and
add
xchg
and
mov
pop
mov
and
mov
sbb
rcr
repnz
lret
mov
fs
adc
int3
xor
call
sahf
add
lds
subl
fistps
push
mov
addr16
mov
and
jnp
int
push
scas
lret
jle
insl
mov
pop
call
jmp
and
insb
sub
pop
sarb
in
dec
push
sbb
icebp
popf
test
repz
push
cmpsb
mov
dec
or
adc
and
xor
cmpsl
aas
pusha
repz
mov
cmp
iret
jnp
sbb
jg
jo
out
fimull
mov
out
jbe
fsubs
or
aam
popa
fiaddl
ljmp
add
sti
out
and
in
push
xor
push
sar
xor
je
mov
jle
out
pop
push
mov
cmpsl
stos
out
or
lds
daa
or
movsl
push
mov
adc
aad
jmp
aas
jg
xchg
inc
cmp
xlat
jmp
scas
dec
mov
loope
inc
cmpsl
mov
dec
sarl
rcrb
pop
andb
and
xor
scas
popa
imull
push
add
test
loope
stc
adc
mov
fstpl
sub
pop
out
imull
repz
mov
imul
lock
jg
jg
xchg
mov
xor
xlat
adc
cmp
xchg
dec
imul
dec
or
push
ffreep
and
inc
repz
test
pop
sbb
ret
jnp
mulb
sub
aam
lds
out
and
push
jmp
xchg
cltd
int
out
push
fsubrp
leave
adc
cmpsb
xchg
cmp
loopne
movhps
icebp
add
loope
add
inc
test
mov
sarb
or
inc
mov
jb
outsl
rcll
popf
mov
inc
cmovae
mov
test
in
cmp
fildll
cmp
mov
and
sbb
jmp
dec
aam
sbb
inc
xchg
cmp
xchg
xchg
call
push
pop
lret
sbb
pop
xchg
pop
shl
dec
and
imul
xchg
daa
add
test
in
dec
push
cmp
push
push
roll
sti
outsb
mov
push
jb
xchg
mov
inc
ret
mov
cmc
test
sti
std
xchg
mov
in
mov
add
sbb
int
orl
and
cmp
and
jecxz
mov
test
test
sub
testl
mov
or
test
insb
es
jb
popa
test
adc
and
xchg
cmp
stos
pop
xlat
inc
ret
xor
sub
jp
cmp
adc
ljmp
mov
push
loopne
jle
jns
bound
and
jnp
movsl
mov
out
fnstsw
push
sbb
in
arpl
dec
mov
rolb
notl
jmp
stc
fistpl
mov
sub
xchg
inc
aam
shrb
push
pusha
push
adc
aas
fisttpl
stos
dec
into
mov
push
fsubr
shl
pop
xor
out
sub
cld
adc
jnp
mov
mov
stc
mov
lods
jno
pop
jg
inc
loopne
push
mov
add
lds
jno
push
pop
shlb
call
repnz
pop
push
faddl
ss
je
and
pop
jns
xchg
bnd
adc
mov
iret
movsb
jno
mov
ret
inc
push
outsb
mov
lock
add
or
pop
int
and
xchg
sbb
daa
or
sub
xor
cmp
adc
and
daa
jle
je
xlat
add
enter
insb
out
dec
mov
push
adc
adc
adc
in
xchg
sbb
and
lret
xchg
arpl
outsl
cmpsb
fildl
sub
adc
jp
ja
mov
dec
jmp
call
enter
add
mov
sbbl
sub
and
sti
push
and
gs
or
mov
bound
fsubrl
aas
push
and
xor
add
inc
sub
or
daa
popf
jo
test
mov
nop
jae
fcom
push
pop
sti
mov
les
xchg
mov
pop
jecxz
cmp
in
mov
jns,pn
mov
adc
js
sbb
inc
mov
jbe
pusha
stc
ds
ljmp
sbb
cmp
mov
and
shlb
out
test
rclb
popf
pop
inc
ror
xchg
imul
lahf
or
jbe
sub
dec
std
jmp
sbb
sub
or
gs
xor
add
push
test
jmp
sti
in
js
lcall
dec
or
into
xchg
jmp
sti
ret
adc
pop
out
or
push
ret
sbb
add
ja
jo
mov
jl
dec
sbb
push
jg
cli
aas
fs
push
mov
inc
push
lods
pop
pop
mov
mov
mov
es
dec
or
loop
pop
and
repnz
mov
push
add
jg
gs
pop
out
push
xor
leave
stos
xchg
xchg
cmp
je
or
fisubs
sub
pop
call
mov
xchg
in
jnp
inc
mov
or
or
leave
mov
rolb
ret
mov
or
jbe
push
outsl
fcomps
mov
aam
sub
out
pop
jmp
cwtl
loop
cli
scas
push
mov
pop
xchg
xchg
shll
and
sub
pop
and
in
in
mov
push
mov
out
jne
movsb
and
and
js
mov
or
pop
push
mov
lea
dec
popa
enter
sbb
outsl
dec
inc
loopne
btr
push
out
rorl
sub
movsl
jmp
fidivrs
call
jmp
push
jl
and
inc
xchg
cwtl
pop
enter
lcall
mov
push
xor
push
cld
sub
sub
inc
or
sub
push
add
xor
sub
shr
cmp
imul
ret
jp
push
arpl
mov
incb
jnp
pusha
in
mov
sub
jmp
incb
xchg
orl
insb
or
in
mov
pop
scas
inc
orb
es
sbb
and
ljmp
aad
push
cs
push
jns
dec
or
mov
and
int
sbb
ja
rolb
sahf
ja
xchg
jge
ja
or
mov
loopne
and
pop
cld
hlt
out
jae
mov
movsb
sti
das
inc
and
cli
xor
jb
cmp
cld
stos
incb
mov
scas
mov
nop
ja
cmpb
sbb
or
mov
adc
dec
push
ss
ret
xor
dec
mov
mov
ja
and
mov
add
xor
jg
xchg
loope
sbb
xchg
mov
out
inc
ss
andl
and
and
xor
cmp
sbb
lock
push
mov
in
rcrl
push
scas
mov
adc
jno
lods
roll
gs
orl
add
scas
inc
cmp
fwait
jnp
mov
jb
out
mov
or
out
jb
dec
xor
xor
out
pop
sub
dec
mov
dec
mov
test
cs
jp
lds
xchg
inc
es
pop
sub
negl
pop
mov
xchg
leave
jle
fs
xchg
add
testb
cld
push
mov
outsb
pop
or
and
daa
test
aad
ret
inc
scas
into
stos
xor
sbb
imul
call
fadds
jnp
scas
push
cmp
and
sub
addr16
dec
iret
cmc
arpl
icebp
cmp
mov
das
cmpsb
leave
iret
mov
sub
xor
add
pop
fisubl
cmc
sbb
js
push
loopne
jle
jnp
cli
test
or
push
shr
jnp
in
les
inc
or
add
dec
mov
lret
int3
call
icebp
mov
push
adc
cmp
inc
loopne
xor
add
inc
int
adc
cmp
dec
and
sub
mov
call
repz
in
add
mov
cmc
adc
lcall
scas
jbe
push
pushl
in
jmp
dec
sub
mov
test
and
push
aaa
mov
prefetch
xchg
adc
sbb
push
pop
fsubs
dec
push
inc
mov
jecxz
and
sub
pop
mov
cld
cmp
mov
jecxz
dec
dec
mov
in
imul
push
int3
pop
popa
or
movl
xor
cmp
rclb
jge
adcb
iret
add
dec
mov
fs
jne
lods
lods
orb
mov
fisttps
push
orl
aad
pop
sub
gs
adc
cltd
shl
in
popa
cmp
sub
pop
pop
cld
lcall
pop
lods
lcall
jbe
sbb
xchg
in
push
push
rorl
fcmovnbe
or
push
je
xor
mov
jno
add
iret
mov
imul
xor
xchg
add
rcr
lods
sub
ja
fists
fisubrl
lods
mov
gs
lods
aad
cmp
js
xorl
xor
sub
sbb
mov
dec
pop
sahf
out
sbb
leave
scas
dec
push
loope
add
lock
xchg
ss
mov
into
int3
lock
sub
sub
push
mov
dec
cmpsl
cmp
jns
js
gs
sub
stc
push
jae
enter
in
lods
bound
movsb
int3
pop
jae
inc
bound
push
fsubs
dec
adcb
add
xchg
push
push
dec
and
pop
into
jbe
jecxz
pop
js
mov
jb
xchg
outsb
mov
xor
jae
adc
outsb
addr16
aaa
test
movsb
mov
pop
sub
and
cmp
and
mov
mov
fs
inc
scas
les
push
adc
sub
loop
push
mov
cmp
sar
jo
push
sub
mov
aaa
cmp
adc
mov
dec
subb
or
rcrb
mov
aaa
mov
test
mov
call
push
pushf
mov
xor
repz
mov
arpl
adc
stc
push
mov
out
mov
imul
mov
dec
xchg
sub
fildll
subl
cmc
sub
insl
add
int
icebp
aas
jle
clc
pop
lock
push
sahf
fwait
sar
lea
daa
jbe
and
outsb
outsb
push
pusha
gs
push
xor
mov
stc
clc
mov
add
repz
push
or
nop
push
sbb
add
lret
xchg
and
in
xor
jo
sub
call
stos
add
inc
xor
add
sbb
mov
into
insl
jne
xchg
jo
sarb
enter
iret
pop
mov
mov
adc
in
xchg
test
pushf
inc
test
lods
push
mov
pop
icebp
push
xchg
pop
nop
xchg
mov
xchg
loopne
rcrl
pcmpeqd
insb
mov
dec
movsl
ja
jg
arpl
gs
sub
cmp
mov
jecxz
or
xlat
xchg
ror
lods
or
mov
mov
lcall
call
or
mov
mov
add
jmp
popf
xor
movsl
popa
imul
inc
mov
xor
rcrb
xchg
pop
insl
sti
inc
enter
add
ss
and
aaa
cmpl
inc
aam
inc
adc
sbb
mov
sbb
dec
adc
jg
sbb
xchg
test
sbb
std
dec
movsl
mov
push
daa
mov
lock
xchg
adc
cmp
mov
add
fdivrs
mov
xchg
and
jl
dec
cld
nop
dec
imul
mov
xchg
sub
aaa
fidivs
pop
cmpsb
enter
adc
mov
lret
cmp
inc
jae
add
popa
pop
fucomp
or
mov
dec
cli
sub
icebp
mov
dec
xchg
jl
hlt
cmp
adc
imul
mov
sbb
add
mov
sarl
or
enter
xor
add
test
icebp
xchg
les
lret
sti
stc
xor
sbb
int
inc
sti
sbb
adc
mov
sub
pop
lret
cmpsb
lods
pop
xchg
pushfw
scas
add
ja
jecxz
adc
add
fsts
into
push
mov
rclb
cmpsb
mov
repz
cld
aaa
adcl
call
xchg
mov
aaa
cs
pop
test
ljmp
shlb
ficomps
imull
aad
pop
sbbl
outsl
xchg
stc
mov
xor
mov
in
push
sub
scas
mov
insb
sti
cmpsl
inc
cmpsl
ret
cmp
pop
roll
mov
xchg
xor
in
mov
adc
pop
loope
jge
cli
iret
mov
bnd
inc
or
andl
mov
dec
rcr
sub
xor
rorl
gs
sbb
lods
jne
mov
push
stos
ss
push
outsl
lds
mov
mov
cmp
popf
jo
shrl
pop
mov
outsl
lock
sahf
int3
mov
ds
subl
cmp
jl
orl
fildl
jnp
push
sub
cmc
scas
dec
icebp
fnstenv
xor
pusha
loope
iret
ret
mov
scas
lret
mov
mov
negb
cmpsb
movsl
xchg
sub
jns
pop
dec
sbb
int
sbb
clc
popa
push
aad
pop
bound
cs
xchg
lahf
repz
hlt
sbb
pop
lcall
roll
repz
scas
add
in
shrl
and
fwait
dec
je
push
pop
jmp
loop
std
push
jmp
push
loope
fs
sub
jno
sub
push
cmp
pop
push
inc
dec
cmp
push
outsl
es
hlt
loop
jl
inc
fidivrl
pop
and
subb
loopne
rorl
pushf
iret
add
iret
adc
jb
pop
cli
shl
std
scas
call
sub
in
arpl
inc
mov
push
push
jno
pop
cs
pop
pop
aaa
push
fucomp
adc
lcall
inc
testb
sbb
and
rcl
mov
pop
lods
je
adc
cli
sub
xchg
insl
inc
mov
inc
jmp
xchg
mov
mov
pop
cmpsb
bt
dec
jns
into
and
sahf
roll
jge
imul
cli
je
adc
cmp
ljmp
out
pop
xchg
pop
rcr
orb
leave
out
daa
mov
cltd
scas
pop
mov
and
fnsave
xchg
pop
xlat
loop
out
rcrl
jae
mov
je
fwait
inc
mov
xchg
cmp
dec
insb
mov
insb
add
sbb
scas
push
cwtl
adc
pop
sahf
inc
pop
pop
gs
movsl
xchg
add
or
sbb
xor
cmp
jo
lods
and
ja
std
push
push
push
lds
loope
mull
xorb
mov
push
shr
mov
addb
popa
push
xor
cltd
insl
or
mov
loopne
mov
pop
sbbl
inc
shrl
jle
fcoml
les
adc
inc
cld
pop
js
cmpsb
scas
pop
cs
das
pop
test
jae
ficomps
or
sub
mov
movsl
push
mov
mov
mov
and
dec
mov
cli
mov
imul
sbb
mov
shrl
and
and
cmp
enter
pop
sti
xchg
cmpl
test
ret
pop
in
negl
xor
sbb
push
iret
test
daa
out
lea
jmp
jb
mov
fwait
lods
jp
lret
pop
out
push
aam
dec
imul
mov
adc
jne
pop
pop
xchg
popf
sti
mov
call
sub
lret
scas
sub
addb
or
lret
inc
cmc
mov
aam
pop
das
cmp
sub
fsin
cmp
mov
loope
inc
jne
mov
inc
in
push
dec
push
or
pushf
sbbb
sub
testl
add
pop
and
nop
jle
aaa
cltd
pop
push
xchg
mov
push
std
sbb
xor
nop
and
adc
pop
xchg
xor
lcall
xor
and
in
push
pop
rol
fistps
loope
add
or
pop
pusha
iret
int3
and
outsb
fmull
aas
outsl
mov
add
push
mov
cmp
out
imul
push
fisttpl
sbbb
pop
gs
sbb
xchg
push
xchg
and
negl
sti
out
enter
leave
test
pop
mov
push
and
popf
fsubs
orl
sub
xorb
inc
push
xchg
lahf
ja
mov
imul
pop
jae
push
sub
pop
pop
or
cmpsl
jecxz
inc
mov
jb
mov
and
popf
lahf
arpl
jns
aam
fwait
inc
flds
sub
js
aad
mov
jecxz
mov
jae
sbb
xchg
xchg
mov
popf
lock
mov
or
and
das
call
mov
mov
cmp
movb
cmpl
pusha
mov
ja
xchg
xor
or
in
mov
mov
mov
movsl
and
mov
lret
imul
fucom
lods
mov
test
mov
daa
in
andb
jne
xor
adc
adc
push
sub
inc
fdivrs
mov
xchg
inc
cmpl
mov
not
jne
in
bound
add
lds
ret
cmp
mov
mov
and
pop
imul
dec
stos
or
or
repnz
enter
push
sbb
lea
jbe
xor
shlb
add
jns
mov
sahf
clc
xchg
stc
xchg
inc
shll
sub
jne
in
and
popf
mov
jmp
jle
push
or
insl
int
cmp
fldenv
adc
inc
xor
mov
ret
dec
mov
push
iret
mov
imul
sti
pop
xchg
fsubrs
les
and
int
jbe
cmpb
int
or
xor
xor
inc
jns
scas
jns
xchg
or
xchg
add
fmul
repnz
cmp
fistpl
sub
inc
nop
fistpll
or
pop
repz
out
popf
cmp
pop
or
pop
jp
cmp
cmp
gs
shl
stos
mov
dec
out
sbb
in
mov
push
add
pop
push
jl
pop
in
mov
les
push
cmp
xchg
sarb
mov
sahf
dec
outsl
into
cmp
push
shrb
out
test
jmp
test
int
addr16
cli
or
shrl
pop
lock
ret
pop
cmp
nop
andl
enter
fisubrl
xor
jmp
movsl
pop
and
dec
aam
mov
inc
xchg
std
cld
std
mov
sti
pop
push
mov
pop
add
fdivl
aad
mov
dec
sub
jp
xchg
std
mov
jnp
mov
cmpsl
pushf
enter
icebp
or
out
fcomps
mov
lret
sbb
and
orl
xor
sbb
cmpl
jo
ljmp
loope,pt
inc
lods
ds
faddl
addl
ds
pop
dec
int
in
or
movsb
movsb
int3
insl
push
jp
xor
dec
add
test
sbb
jg
add
rcll
lret
bound
or
or
daa
xor
xchg
sbb
cs
cmp
xor
dec
icebp
xor
jp
mov
pop
mov
mov
mov
cmp
cmp
dec
sbbl
or
pop
pop
pop
or
mov
dec
mov
test
cli
divl
xor
pop
stos
fucom
cltd
imul
popa
iret
xchg
mov
cmp
mov
mov
pop
cmp
lods
loopne
jmp
aas
lock
jle
add
gs
in
fisubl
dec
mov
mov
jb
cmp
jne
loope
sub
or
loopne
add
sbbl
jge
ja
jns
cmc
repnz
inc
and
xor
fstl
stos
loope
lcall
sbb
pop
jecxz
mov
push
adc
scas
pushf
cltd
test
loop
into
and
xor
pop
cs
push
js
pop
imul
cmpsb
in
or
sbb
gs
lret
sahf
andl
rol
into
in
mov
imul
or
mov
sub
mov
sti
mov
push
lcall
movsb
inc
xchg
jge
push
into
lea
mov
mov
out
push
mov
jb
jp
aaa
jmp
pop
out
movsl
scas
popf
push
sub
fs
fs
pop
andl
jbe
jg
daa
mov
inc
jne
mov
sub
jg
xchg
jnp
or
aam
or
lods
fcmovb
cvtpi2ps
jecxz
test
mov
and
test
fcomps
or
inc
mov
dec
sbb
sub
fnsave
pop
xchg
dec
jecxz
pusha
fucomi
enter
mov
xchg
rcrb
sarb
rolb
movsb
insb
mull
aad
jb
mov
insb
push
test
xorl
stos
jmp
or
push
imull
lret
fstl
insl
in
mov
out
sbb
sub
pop
push
jecxz
in
lret
mov
xor
mov
in
leave
loop
and
nop
mov
xchg
or
fildll
pop
pop
cmp
mov
cwtl
push
push
or
adc
push
sub
ret
jecxz
xchg
inc
popa
movsb
es
dec
out
stc
push
in
cmp
std
lods
xor
roll
pop
xor
enter
sub
adc
jnp
xor
dec
and
stos
push
ret
aas
mov
lock
add
sub
xor
out
adc
movsl
inc
jo
rcrb
xor
lret
iret
adc
lock
mov
push
stos
stc
iret
mov
pusha
in
xchg
outsl
inc
push
jno
add
outsl
xchg
es
push
inc
pop
adc
dec
push
and
cmp
add
outsb
notl
aam
rcrb
dec
lret
sti
iret
pop
sbb
mov
pop
push
sub
enter
xchg
mov
cmp
in
push
pushf
xchg
xor
pop
or
xor
pusha
into
push
lcall
stos
pop
popf
movups
sbbl
or
dec
xor
pushf
jle
sbb
adc
dec
jnp
xchg
cmp
pushf
and
repnz
repnz
mov
pop
and
or
xchg
xor
push
jmp
add
lds
sub
inc
loope
scas
sarl
movsb
mov
data16
imul
add
or
xchg
add
stos
insb
mov
mov
loopne
sub
out
lods
push
mov
fimuls
std
jge
nop
mov
push
sbb
jbe
mov
mov
mov
inc
cmp
lret
pop
xchg
leave
in
dec
dec
cmp
dec
jmp
inc
xchg
mov
mov
mov
pop
xchg
push
sbb
xor
mov
pushf
jge
sbb
sbb
jno
dec
daa
das
cmp
sbb
sub
mov
addr16
into
adc
mov
movsb
fdivs
test
imul
inc
scas
dec
pop
adc
jno
add
xor
mov
lds
test
scas
dec
dec
jecxz
enter
mov
mov
aad
mov
movsb
pop
push
daa
jne
mov
imull
push
and
or
xchg
xchg
push
sbb
add
dec
mov
lahf
ret
fsubs
iret
orl
sbb
call
sahf
jb
xchg
mov
pop
cmpl
loopne
fsubrl
cmp
mov
pop
add
rclb
or
cs
js
sbb
aas
insb
imul
xor
inc
mov
fdivp
mov
lds
mov
dec
push
gs
cli
jge
jb
sbb
movb
xchg
hlt
xor
aad
push
call
mov
aad
inc
mov
push
add
sub
sub
mov
mov
orb
jp
mov
dec
pop
aad
xor
add
pop
mov
fwait
adc
addr16
xchg
bound
negl
je
lret
test
imul
faddl
adc
pop
int
cld
mov
pop
ja
cmp
rol
mov
loope
inc
aaa
movsl
jnp
and
push
pop
rclb
push
cmp
cli
cli
xor
mov
jbe
cltd
push
mov
pop
rclb
ljmp
repnz
scas
or
outsl
dec
pop
adc
ret
icebp
stos
call
sbb
and
mov
push
pop
inc
stos
nop
dec
inc
jno
cld
ss
jbe
imul
pop
push
xor
int
xchg
mov
jecxz
jl
sbb
sbb
hlt
sbb
push
cmp
in
stos
jp
ja
pushf
lret
inc
lret
adc
es
out
std
mov
sbb
jb
xchg
inc
leave
fwait
xchg
das
mov
xor
push
rcll
inc
js
mov
jl
jno
inc
sbb
dec
jae
xor
and
in
xchg
mov
jnp
fwait
loop
mov
fsubrl
sbb
cmpsl
fldenv
outsb
pop
mov
daa
mov
hlt
pop
push
add
adc
cmp
bound
inc
ds
lret
and
popa
pop
inc
xchg
sub
push
sub
inc
pushf
xor
adc
mov
sbb
popa
lods
or
mov
movsb
mov
sub
fs
or
cmp
pop
ret
repnz
in
icebp
adc
jecxz
pop
cwtl
xchg
cmpsl
jbe
lods
jecxz
mov
sub
push
mov
mov
into
movsl
imul
dec
cli
push
sbb
lahf
jae
inc
stos
adc
fmuls
movb
fmull
cmp
lods
insb
fnstenv
dec
cmc
cld
icebp
rolb
mov
jno
sub
aam
dec
jecxz
cltd
jle
mov
std
inc
dec
sbb
mov
sub
in
pop
enter
int3
repz
xchg
loop
aam
mov
mov
aaa
add
ds
or
fstpt
imul
mov
inc
rcll
cmp
aam
xchg
iret
stc
mov
test
leave
incb
jns
jne
pop
mov
in
adc
dec
in
mov
inc
mov
sub
jb
stos
push
push
fdivrs
test
sahf
pusha
mov
loope
jle
loope
cwtl
mov
adc
dec
adc
es
pop
scas
scas
xchg
hlt
cmp
lods
mov
je
cli
jno
push
insl
xchg
out
add
and
xchg
or
xchg
sub
stos
pop
cmpsb
test
pop
pop
cmpsl
mov
scas
dec
cmp
push
cmpl
dec
out
sub
movsl
test
mov
sbb
iret
adcl
rolb
mov
shrb
dec
cli
jg
es
pop
jno
push
mov
sbb
leave
into
xor
xchg
jae
cmp
jo
adc
repz
cmp
sbb
cmp
inc
ss
inc
mov
subb
and
xor
aas
mov
xlat
int
xchg
xchg
jb
cmp
or
mov
popa
push
in
out
mov
sub
jmp
adc
add
sbb
lret
test
cmp
in
lret
mov
popa
ds
or
pop
xchg
or
xbegin
enter
std
jnp
lcall
lcall
dec
fisttps
dec
jnp
fmuls
imul
xor
iret
pop
pop
test
cmpsb
jl
or
xor
pop
out
call
ret
into
lods
inc
adc
lods
xchg
es
sbb
insb
iret
pop
adc
dec
shl
and
pop
enter
clc
stc
pop
das
icebp
adc
sub
call
add
fisubl
aad
test
mov
push
inc
jl
loop
push
aad
or
add
cmc
filds
add
or
inc
dec
daa
adc
inc
jnp
outsl
out
pand
mov
or
mov
xor
push
pop
mov
cltd
bnd
add
pusha
push
dec
add
sub
add
sbb
xor
push
loope
arpl
in
or
imul
sbb
jo
out
cmp
rcr
test
scas
adc
mov
out
xor
push
mov
mov
js
sub
out
mov
pop
in
push
dec
sbb
lds
inc
out
lret
sub
enter
mov
arpl
push
gs
pusha
lods
mov
repnz
cmp
add
cli
das
lret
mov
repnz
fdivrs
divl
mov
call
dec
mov
loop
sti
cmp
dec
adc
dec
cltd
xchg
jbe
movsb
shrl
aam
loope
cld
cwtl
fs
fistpll
daa
sub
jmp
fcomip
mov
xchg
and
cli
fstps
lds
idivl
test
mov
notb
dec
or
in
or
pop
cmpsb
in
adc
scas
push
cmp
jae
mov
jge
mov
clc
mov
mov
subb
pop
fstp
cwtl
xchg
movsl
xor
and
repz
bound
lret
jne
fbstp
lock
outsb
sbbl
imul
in
jno
sahf
push
and
fcoms
xchg
or
fdivs
loope
das
scas
ja
mov
je
fidivl
pusha
push
das
movsl
imul
mov
pop
sub
cmpsl
pop
rolb
push
adc
outsb
cltd
in
mov
jle
pop
notb
push
ss
jne
fnstenv
and
lahf
divb
insb
mov
daa
and
jbe
cmp
iret
mov
jnp
mov
out
ja
sub
pop
cld
repz
add
pop
inc
sahf
sarl
adc
mov
movsl
lods
adcl
and
aas
shrb
mov
in
adc
cmpsl
mov
cwtl
dec
mov
outsl
xchg
cli
and
push
mov
sahf
dec
dec
cmp
loop,pn
push
mov
jg
insb
cmp
mov
inc
dec
jmp
jnp
jno
cmpsb
shll
or
enter
dec
pop
andl
inc
jae
out
xchg
cld
push
cmp
sarb
pusha
cmp
rcll
inc
mov
mov
pop
jnp
inc
mov
mov
lods
out
in
popf
sbb
jle
push
xor
pop
hlt
jl
mov
mov
mov
jmp
cmp
and
add
mov
pop
push
les
iret
push
adc
fiaddl
cs
repz
add
lret
iret
pop
jne
pop
out
jmp
sar
addr16
sub
add
sbbl
das
sub
sub
rorl
js
adc
in
adc
mov
or
and
cmc
jns
popa
jne
repz
ds
jnp
xor
lcall
stos
mov
dec
add
push
push
mov
add
xchg
or
loopne
inc
inc
test
dec
out
lods
out
pop
sar
cmpsl
cmpsb
divb
push
or
sarb
test
in
ffreep
xor
push
sahf
nop
test
std
and
pop
xlat
inc
pop
outsl
or
in
roll
push
sub
cli
sub
jne
adc
fldt
adc
int3
add
dec
cmpsl
jns
push
test
add
cwtl
out
cltd
or
sbb
add
cmpsl
jg
insl
and
lcall
out
pushf
nop
nop
pop
test
lcall
je
in
nop
mov
push
rcr
pop
mov
inc
out
stc
ja
push
dec
imul
push
ret
js
lcall
mov
aam
icebp
mov
pop
jb
mov
clc
add
fwait
adc
inc
or
fcmove
or
push
add
or
out
jne
mov
loop
fsubrs
xchg
lret
scas
mov
aas
cmp
jae
jb
and
lret
mov
mov
push
mov
movsb
movb
add
sub
jnp
int3
lds
daa
xchg
jae
fldcw
xlat
push
dec
fsts
adc
mov
pop
push
fsts
inc
cmpb
sbb
popf
lahf
push
inc
adc
cmpsl
mov
dec
pop
sbb
mov
jo
cmp
cs
test
popf
popf
xor
aas
sub
mov
cmpsb
iret
loope
adc
inc
xchg
movsb
push
cld
leave
enter
shrb
adc
and
nop
xor
dec
ror
and
add
mov
xchg
stc
lret
push
or
jg
pusha
pop
xchg
and
inc
and
mov
repnz
push
xor
cld
lret
cld
insl
jns
push
arpl
pop
pop
and
or
mov
sbb
pop
push
scas
mov
loopne
push
mov
frstor
das
outsl
ds
cmp
push
add
add
dec
xchg
in
aaa
inc
into
push
imul
dec
popf
pop
jg,pn
mov
movsl
push
aaa
fstpt
icebp
or
cmp
inc
mov
pop
shr
mov
shrl
into
xchg
mov
jecxz
repz
ljmp
xor
ss
jmp
outsb
adc
aam
sub
enter
sub
lock
pop
insl
dec
inc
fiaddl
xchg
ficompl
mov
xor
cli
xor
jl
scas
ficoml
cli
jmp
mov
sub
jo
mov
mov
sahf
cli
push
pop
hlt
test
cmp
fidivrs
sbb
shll
cmc
jp
push
insb
hlt
pusha
test
jo
shrl
push
xor
filds
insl
cmp
xor
imul
movsb
in
mov
iret
shll
push
push
adc
sub
out
popf
and
loop
adc
popa
aad
rcrb
int3
xlat
dec
in
fildl
inc
inc
mov
repz
jne
sub
loopne
push
cmp
les
aaa
mov
pop
jmp
push
inc
dec
dec
or
cmp
dec
ljmp
mov
inc
inc
fimull
jp
lds
inc
pusha
push
inc
cmp
loop
fstpt
es
ds
or
mov
add
pop
mov
push
iret
hlt
outsl
daa
stc
adc
out
adc
jns
mov
push
das
aaa
movsb
add
mov
ret
in
add
pop
js
push
pusha
add
fs
sub
jmp
jnp
jle
cs
out
xchg
cmp
cld
cld
repnz
dec
mov
pop
jo
pop
mov
ret
jge
jmp
jmp
mov
lods
dec
mov
push
jne
nop
sbb
lcall
ret
ja
fsts
cmp
test
mov
and
outsb
mov
adc
mov
lret
push
xchg
xor
pop
jmp
or
icebp
cmc
jb
movsl
xchg
mov
mov
ret
loope
je
cld
jg
and
pop
lods
lock
fwait
sbb
out
call
testl
jae
dec
xor
push
adc
push
shl
jns
in
in
aam
mov
loope
test
into
xchg
dec
jb
xorb
nop
jno
fbstp
pop
ret
imul
faddl
or
mov
int3
cmp
pop
adc
push
pop
mov
jmp
in
pop
adc
dec
repz
pop
data16
dec
push
inc
loop
leave
iret
shlb
jae
les
jle
dec
cwtl
ja
sbb
jle
cmp
inc
xchg
xchg
mov
imul
add
mov
sub
ja,pt
push
imul
cltd
daa
fdivrs
fs
jge
aaa
sbb
inc
push
mov
xchg
ljmp
ja
call
push
xor
jg
add
xchg
into
pop
mov
jl
scas
or
cli
lret
test
or
in
and
push
sub
cmp
pop
and
daa
xchg
and
fisubrs
push
cld
je
inc
mov
xchg
cmpsl
mov
out
ss
mov
icebp
fdivrs
repz
mov
hlt
mov
mov
mov
sti
mov
negb
inc
addr16
mov
pushf
push
lea
xor
cmp
in
push
mov
sbb
lds
test
mov
xchg
lahf
insb
adc
jle
mov
xchg
fbstp
mov
hlt
push
stos
cmc
lock
jecxz
lea
pop
into
adc
les
xchg
test
pop
sbb
adc
stos
rcrb
mov
mov
aaa
push
jl
inc
scas
inc
push
jb
mov
movsl
leave
sub
ja
mov
cmp
cmp
gs
inc
test
add
xor
add
lds
mov
jns
stos
insb
xchg
push
inc
inc
mov
xchg
fildl
mov
sbb
jns
stc
dec
fisubrs
cmp
stos
add
dec
cmpsl
imulb
fidivrl
mov
cli
add
or
imul
mov
pop
mov
pusha
pop
aam
out
rcrb
sub
pop
sarb
in
and
pop
fisttps
mov
xor
sub
or
ljmp
loope
xlat
push
pop
fwait
outsb
loop
mov
cmpb
pop
dec
lret
fnstsw
xchg
out
arpl
xchg
stos
mov
dec
mov
jbe
pop
gs
cwtl
xor
mov
mov
fstpl
inc
jno
gs
fcom
xchg
dec
jb
jmp
js
xchg
dec
jl
cli
rolb
fs
inc
sarb
xor
cmp
inc
and
bound
xor
pop
lods
cs
xor
dec
pop
xchg
lods
mov
enter
push
inc
pop
cmpsl
xorl
jo
xchg
movsl
or
lret
cmp
js
mov
int3
ss
loopne
sub
xor
sbb
faddl
or
and
inc
mov
loop
rcll
das
push
outsl
cmpb
xor
mov
jg
shrl
push
jo
jo
fabs
fsubs
sbb
stos
adc
and
dec
mov
and
in
popf
movsl
push
pop
mov
lahf
mov
enter
xor
xchg
mov
sub
sbbl
out
and
jno
pop
mov
pop
loop
dec
aaa
test
fsubl
sti
cmc
fdivrl
push
mov
xor
popf
lods
sbb
lods
add
adcb
int
push
int
js
dec
or
xor
test
dec
adc
rol
push
pop
fcoml
xchg
fldlg2
repnz
mov
outsl
mov
push
add
rcrb
adc
loopne
jo
shr
lcall
jne
and
pop
mov
add
cmpsl
enter
in
ss
pop
cmp
and
scas
clc
sbb
call
pushf
jle
lret
mov
imul
pop
test
jbe
cmpsb
int
lea
faddl
ret
sub
lret
nop
and
mov
aas
mov
subb
shrl
ffree
cmp
test
js
loopne
add
int3
aaa
xchg
jb
popa
movsb
mov
jle
fstl
fistps
jl
andl
imul
test
addb
outsl
addl
adc
movsb
xorps
sti
push
sub
shlb
cmp
test
int3
mov
es
dec
lods
dec
into
outsl
xchg
lds
pop
gs
jns
or
jns
sbb
add
jecxz
mov
dec
push
adc
pop
pop
cmp
enter
addb
add
jns
fdivrl
jbe
sbb
nop
stos
dec
lock
inc
cmp
in
into
mov
mov
popa
adc
cmpsb
cltd
in
xor
ljmp
in
out
mov
xchg
rcl
in
das
cmp
push
mov
fisttps
roll
aas
pop
fs
js
movsb
std
aam
push
push
dec
pop
and
dec
lock
push
sbb
cmpsl
jno
dec
data16
inc
lret
or
xchg
mov
and
xlat
leave
xchg
cmp
nop
push
sbb
scas
mov
je
dec
mov
repz
mov
xchg
mov
rolb
loope
mov
outsl
cld
xchg
ret
pusha
xlat
push
inc
jb
ret
mov
mov
jp
inc
or
inc
xchg
lock
pop
in
or
mov
mov
or
inc
push
ret
je
lahf
out
xor
adc
cmpsl
cmp
notb
and
inc
and
stos
out
movsb
jmp
sti
jns
cmp
cs
xchg
imul
lahf
mov
cmp
xlat
scas
daa
adcb
test
scas
push
rolb
jo
dec
mov
inc
call
pop
ret
xorps
nop
fmull
mov
adc
jp
lods
in
inc
test
cmp
jae
das
aaa
popa
mov
insb
inc
sarb
movsl
data16
jae
in
jl
add
pop
pop
xor
mov
dec
push
lock
aad
lcall
movsb
and
mov
push
call
stos
test
jo
repnz
sbb
xchg
add
shlb
lock
test
ficomps
add
imul
and
lds
and
or
sub
mov
or
daa
push
push
inc
cmpb
xor
inc
outsb
dec
or
xchg
cmpsb
insb
pusha
pushf
jg
fbld
adc
sbb
frstor
adc
cltd
aas
rcr
or
adc
push
adc
cmpsb
sti
xchg
add
cmp
imul
daa
clc
decb
jl
inc
fdivl
xor
inc
xchg
cwtl
arpl
lahf
fs
jl
arpl
dec
cmp
push
rcrl
mov
ret
ss
or
sbb
xchg
dec
sbb
cvtpi2ps
aas
mov
xor
xchg
xchg
mov
into
leave
lds
sbb
sbb
in
xor
xchg
sub
and
adc
sbb
and
in
jns
xor
incl
push
push
imulb
shlb
rolb
mov
fcmovne
cmp
pop
mov
fistpl
xchg
push
push
jg
or
push
mov
cld
cmp
mov
add
fwait
cmpsl
outsl
scas
xchg
cmp
loop
cmpsb
fisubrl
test
jl
ljmp
xchg
xchg
mov
rcrl
bound
mov
in
test
shrb
add
cs
inc
mov
push
inc
cmc
lds
mov
xchg
ds
in
in
test
xor
hlt
jp
xchg
mov
addr16
xchg
loopne
movl
push
es
pushl
pop
imul
sub
adc
xchg
pop
push
ss
sbb
clc
or
faddl
xor
andl
int
shlb
mov
inc
inc
sub
sbb
mov
push
lods
inc
hlt
out
iret
pop
xchg
fcompl
addl
outsl
mov
xchg
push
xchg
pop
lret
data16
pop
imul
pop
dec
mov
pop
dec
into
mov
push
jl
xor
mov
mov
pop
stos
add
push
inc
outsb
test
mov
xor
cmp
and
out
mov
shll
fdivl
fistpl
mov
hlt
xor
leave
inc
add
outsl
pop
dec
add
in
xchg
testb
int
fwait
push
outsb
pop
lea
sbb
enterw
ljmp
inc
jmp
rep
outsb
cmp
add
sarb
sahf
vpmulhw
xchg
or
push
mov
or
and
push
mov
and
xor
test
test
pop
sbb
mov
mov
int3
shll
out
daa
add
xchg
push
push
popf
mov
shr
test
lahf
mov
gs
jl
int
mov
scas
cmpsb
mov
loop
pop
sti
jbe
dec
test
es
cmpsb
fsubr
dec
dec
sti
lcall
scas
gs
push
scas
mov
negl
mul
xchg
push
pop
xrelease
xlat
loopne
adc
and
dec
and
sub
fs
or
dec
je
cmp
dec
rorb
jbe
and
xchg
dec
sbb
popa
mov
mov
stos
lods
jb
pop
ds
xor
mov
push
imulb
jne
fildll
out
gs
aas
loop
push
test
fistl
xchg
test
dec
push
push
pop
lods
adc
fwait
dec
clc
aad
jle
cmpsl
sbb
scas
jb
ljmp
jmp
divl
jge
cwtl
mov
movsl
and
jne
pushf
cmp
or
ss
pusha
cmc
in
cli
lea
nop
mov
mov
sarb
sbbl
int
clc
xor
inc
ja
add
jbe
push
sti
sbb
test
pop
cmpsb
sti
jp
xchg
or
fcoml
sti
lret
pop
jns
std
aam
ds
jo
leave
cmp
pop
push
mov
insb
sahf
mov
outsl
repnz
andb
leave
outsl
sub
nop
mov
idiv
and
aad
sub
fwait
int3
push
push
jne
dec
loop
icebp
adc
sub
pop
push
out
push
loope
cs
or
inc
mov
or
pop
dec
pop
fcomps
lods
xor
orb
jmp
fisubs
lock
mov
iret
lahf
sub
in
xlat
fwait
mov
enter
call
lds
dec
pop
xor
insl
icebp
popa
loop
cmp
or
into
insl
sbb
push
ja
pop
mov
shl
ljmp
out
pop
js
cmpb
ljmp
sub
shll
xchg
mov
pusha
sub
push
inc
xlat
mov
std
mov
out
mov
cmc
enter
push
pushf
insl
shlb
data16
cmp
fildl
in
pop
xchg
push
lret
sbb
sub
add
rcr
inc
or
xor
mov
and
nopl
out
call
pusha
outsl
inc
sub
dec
rclb
mov
jbe
mov
insl
mov
aad
das
loope
push
mov
imul
mov
or
xchg
cmpsl
jnp
mov
daa
xchg
push
xchg
lret
int3
addr16
loop
mov
inc
mov
and
inc
sarb
xor
cmp
outsb
dec
and
cmpsb
testl
sbb
fs
lds
loop
mov
inc
ret
mov
ja
imul
sub
add
fsubp
and
mov
pop
inc
out
or
out
adc
rcll
iret
mov
stos
cmpsb
cmp
rcll
pop
lods
mov
aad
call
loopne
out
add
and
stos
push
ret
xchg
mov
lcall
push
and
bound
cs
push
sbb
mov
int3
int3
jo
push
cmpsl
aad
cmc
fsts
fs
pop
xlat
cmp
sub
push
ljmp
mov
fldcw
cmpsl
insb
bound
hlt
stos
dec
xor
push
and
scas
lock
je
movsl
xchg
mov
mov
insl
cld
and
add
xor
sbb
cmp
mov
addr16
jge
cmp
sub
loopne
mov
push
jo
lret
rcrb
jecxz
sub
jmp
cmp
aad
cmp
repz
int
test
aaa
sbb
js
dec
imul
sbb
mov
xor
push
pushl
std
sbb
jns
rdpmc
fsubl
sub
push
lods
jle
aas
push
imulb
adc
xchg
pop
mov
dec
inc
or
inc
not
ficoms
jae
push
ds
push
idivb
call
mov
or
into
xchg
jo
fstpl
sbb
cltd
test
cmp
out
xchg
mov
cmpsb
mov
fwait
popa
pusha
mov
pop
je
inc
inc
push
jp
inc
pushf
je
mov
adc
shrl
notl
into
mov
adc
gs
pusha
jb
out
xor
inc
adc
scas
ret
sub
add
fistpll
mov
mov
jecxz
mov
cmp
stos
mov
and
lret
cmp
dec
mov
sbb
adc
xor
jbe
outsb
sub
xlat
repnz
lahf
scas
push
mov
in
gs
cwtl
ja
bound
xor
cmp
dec
dec
mov
movsb
pop
xor
arpl
and
jge
out
and
into
popa
sub
push
leave
in
pop
xchg
xchg
inc
push
mov
xchg
fcmovu
in
movsb
outsl
mov
test
pop
add
out
push
pop
test
mov
cmc
push
sub
jg
mov
add
sbb
adc
jns
xchg
or
sbb
xchg
xchg
loop
in
add
jge,pt
mov
mov
ja
xchg
xchg
add
jns
dec
mov
aam
jo
je
fisubl
ljmp
xchg
iret
out
fidivrs
stos
out
cmpsb
js
and
jle
pop
push
and
sti
mov
lret
pop
std
inc
sbb
gs
fsubr
sub
sbb
ljmp
leave
addb
out
mov
daa
cmp
pop
in
inc
inc
sub
testl
push
jno
push
repnz
pushf
push
push
aas
mov
out
mov
push
lahf
or
lods
lds
sub
mov
cmpsl
push
and
imul
xor
mov
mov
hlt
lahf
daa
lea
xchg
add
sbb
scas
scas
jle
ljmp
cmp
lcall
jo
mov
outsb
cmp
mov
or
jnp
or
push
popa
cs
adc
test
jne
fsubrs
mov
adc
pop
jle
dec
data16
mov
or
jne
adc
jg
popf
sbb
mov
ds
fwait
lret
gs
push
jmp
push
lcall
mov
mov
sub
adc
jo
std
stc
adc
xor
pop
jne
sti
faddl
testl
xchg
mov
repz
lahf
xorb
insl
jmp
add
scas
adc
stc
cmp
loop
into
push
mov
and
repz
xor
jl
pop
fcmovnu
aad
jnp
and
pusha
push
cmc
adc
icebp
aaa
or
cmp
mov
popf
mov
xchg
sbbl
jnp
lret
and
xchg
jmp
aas
push
xor
scas
sub
pop
and
or
or
mov
add
repz
arpl
push
add
adc
inc
fmull
inc
mov
and
and
add
mov
movsl
subl
jecxz
inc
out
gs
fistpll
out
movsl
repz
lret
adc
inc
add
push
jmp
sub
jmp
jmp
dec
or
cltd
dec
pop
adcl
inc
dec
jge
xor
mov
adc
in
inc
int
push
out
mov
mov
mov
dec
mov
push
pusha
shrl
rol
nop
shll
inc
lds
aad
inc
pop
lods
xor
jno
mov
popf
mov
lea
xchg
jns
call
dec
sbb
jnp
xor
push
adc
js
lcall
dec
xor
sbb
cmpsl
dec
jmp
leave
sarl
cli
das
push
push
mov
sbb
clc
dec
imul
add
inc
add
ret
inc
add
adc
add
inc
add
add
lret
add
add
and
inc
add
add
add
add
mov
pop
out
aad
mov
aam
xor
cmp
mov
in
mov
jb
out
mov
cmp
xchg
dec
subl
push
and
xor
add
in
and
push
inc
ja
dec
add
popa
loope
gs
or
lods
sbbl
push
and
mov
push
hlt
ljmp
pop
scas
xchg
les
and
adc
and
push
xor
lds
das
sub
fs
inc
into
outsl
add
fnstenv
mov
stos
aas
add
lea
ss
inc
xchg
mov
jg
xlat
xchg
inc
lock
mov
into
out
mov
fistl
xchg
dec
or
insl
xchg
xlat
divb
dec
dec
fstpt
dec
cmp
out
data16
mov
cmp
lret
mov
into
mov
lea
and
ret
push
into
int
lret
mov
adc
fstpl
dec
icebp
nop
adc
and
sbbl
ljmp
sti
pop
mov
dec
mov
cmc
cli
ret
dec
sub
xor
je
or
pop
cmpsl
jecxz
cmpb
mov
popa
pop
shrb
std
dec
jmp
or
inc
int3
inc
adc
jno
jecxz
push
jnp
cmp
cmp
mulb
cmpsb
enter
mov
add
fimuls
fsts
in
xor
mov
movsb
idivb
add
sbb
jp
call
push
mov
test
cmp
push
dec
out
pop
sti
pop
mov
mov
sub
into
jns
jmp
insl
pop
in
mov
fmuls
lret
lods
dec
mov
push
std
out
lret
lcall
xchg
call
into
mov
mov
push
aad
mov
leave
andl
cmp
mov
into
dec
jg
insl
mov
mov
arpl
pop
sub
clc
rolb
sbb
out
mov
loope
mov
and
xor
cltd
xchg
lcall
push
pop
inc
fstps
imul
mov
sub
sti
mov
adc
jns
and
insl
popa
inc
in
loope
fidivl
push
pop
xchg
flds
pop
xor
or
mov
xor
push
fsts
jno
xor
imul
rorl
inc
loop
push
arpl
jmp
icebp
or
xchg
stos
rcll
scas
inc
mov
jg
adc
xchg
jno
outsb
aas
pop
mov
sub
and
and
or
pop
mov
int3
or
mov
inc
int
inc
out
std
sahf
sub
mov
xchg
into
lahf
dec
xor
add
scas
pop
cwtl
cli
xor
int3
xchg
push
jb
cld
push
cli
xor
xor
cmp
loop
mov
scas
imul
cs
das
jns
xchg
lods
cmpsb
repz
icebp
or
sti
sarb
cld
insl
sarl
adc
ljmp
jne,pt
push
pop
cltd
lods
cmp
sahf
xchg
nop
sarl
pop
sbb
push
dec
out
and
in
fs
mov
fwait
mov
sbb
sub
add
inc
add
cmp
add
in
dec
or
int3
dec
jns
mov
cmpb
fisubrs
ja
gs
cmp
dec
enter
out
stos
insb
adc
sbb
mov
repz
ss
insl
cmpsl
popf
jge
inc
ljmp
dec
loop
or
cmp
cmp
push
mov
jg
sbb
movlhps
stc
insb
jne
jecxz
add
jae
mov
int
cmpsl
adc
pop
stos
jmp
movsl
cs
push
dec
mov
stc
mov
mov
lea
xor
pop
pop
das
push
je
pop
ret
pop
data16
mov
xor
inc
repnz
sub
add
fldcw
mov
mov
xchg
push
arpl
aas
insb
add
mov
idivl
mov
pop
fimuls
aam
cmpsb
cmp
rcr
hlt
movsl
ret
pop
xchg
loopne
cwtl
dec
dec
xlat
je
enter
mov
adc
out
jno
xchg
push
cs
mov
popa
or
pop
clc
bound
push
test
ret
pop
je
xchg
xchg
std
ljmp
ficoms
mov
icebp
mov
icebp
and
loopne
jb
xchg
dec
push
test
or
test
pop
push
inc
jae
jmp
repnz
std
mov
xor
xchg
leave
lcall
xchg
bound
leave
inc
inc
in
cwtl
data16
insb
popf
shll
addr16
inc
in
sub
popa
pop
cmpsb
scas
repnz
sahf
sub
test
aad
insl
iret
mov
mov
pop
aam
pop
adc
xchg
cmp
pop
or
inc
xor
adc
addb
or
sub
mov
dec
adcb
movsl
jne
loope
and
jle
jo
cli
and
jns
stc
call
jae
xchg
loope
adc
add
xor
xchg
les
fldenv
dec
pop
xchg
pop
jbe
and
and
jle
mov
xchg
adc
arpl
or
je
mov
addr16
mov
mov
or
jns
hlt
lods
adc
ljmp
jno
addr16
fwait
pop
add
fisttps
hlt
push
xor
popa
in
fadds
fstpt
pop
out
mov
and
into
jnp
cmp
in
ss
push
mov
mov
cmp
lods
js
imull
insb
push
clc
xchg
cmp
adc
pushf
add
insl
mov
enter
cmp
and
mov
cmp
pop
push
sub
insl
mov
repnz
and
sub
mov
fs
inc
sbb
in
adc
sub
test
pushf
mov
xchg
sti
push
test
mov
arpl
icebp
scas
mov
rcr
cmpl
add
sbb
int3
lods
cmpsb
shll
push
iret
dec
push
jp
pusha
pop
mov
enter
add
daa
lahf
in
test
cmp
xor
mov
cmp
das
inc
pop
add
xchg
xor
add
les
pop
int3
es
popf
rolb
es
or
scas
dec
push
fcmovbe
icebp
mov
xchg
dec
sbb
push
jo
pushl
push
jmp
or
int
test
fwait
lock
fs
and
pop
clc
js
cs
mov
shlb
cli
mov
xchg
and
push
es
sbb
xor
outsb
pop
cwtl
pop
or
add
or
pop
mov
pop
mov
cmpsb
stc
test
gs
push
bound
push
gs
mov
sub
jb
push
cmpsb
outsl
arpl
dec
scas
imul
push
fnstsw
cld
in
add
negl
mov
in
testb
mov
push
jae
gs
mov
jmp
sub
sbb
or
test
xchg
les
in
push
test
or
xchg
fs
mov
adc
dec
mov
lret
add
push
and
mov
into
xor
testb
rorl
lock
jg
sbb
lret
lret
fnstenv
cmpsl
cmp
fbstp
mov
outsb
iret
imul
out
fisttpl
fiaddl
mov
cmc
fstpt
xchg
mov
test
aas
xchg
hlt
or
mov
incb
fwait
sub
push
fwait
aas
ret
ds
add
fimull
icebp
push
out
pop
andl
fsubs
sbb
stc
out
xchg
push
subb
and
sbb
push
enter
insb
js
adc
xor
cmpsb
shl
shl
fucomip
dec
cmp
into
scas
ss
xor
xrelease
test
popa
jnp
push
mov
out
mov
lods
std
mov
and
jne
fdivrp
repz
mov
mov
and
ja
cmp
or
and
cs
repz
imul
add
xor
dec
sbb
jecxz
rolb
aam
pop
fucomi
lea
pushf
inc
push
sub
pusha
and
andl
xlat
addr16
push
adc
fisttpll
iret
xchg
inc
cli
sub
cwtl
ja
data16
test
in
xchg
xor
mov
inc
inc
cmp
packuswb
mov
jp
enter
xor
cmp
push
mov
nop
arpl
fstpt
and
notl
push
test
inc
cmpsb
cmp
rcrb
xchg
push
aad
adc
or
enter
data16
push
mov
add
dec
int
mov
pusha
sub
push
add
push
dec
sub
lods
in
enter
fucomp
les
ss
xorb
loope
inc
gs
and
outsl
push
dec
out
je
pusha
pop
jmp
cli
cld
shlb
adc
jp
cmp
dec
aas
push
mov
mov
and
pop
mov
mov
pop
arpl
inc
clc
out
andl
mov
adc
inc
cmp
lds
cmc
mov
sub
cmp
fildl
ja
cmp
in
add
mov
pusha
inc
ja
dec
jge
out
push
out
jecxz
arpl
xor
mov
push
cmc
pop
add
lock
push
pop
imul
or
arpl
sub
or
les
lret
mov
jnp
jb
iret
and
data16
stos
in
ret
in
jmp
dec
pushf
inc
sbb
stc
xor
int3
sub
xlat
mov
xlat
cltd
jo
jno
xchg
xor
pop
and
out
mov
mov
mov
add
out
dec
rolb
xchg
adc
mov
insb
fldcw
sbb
sbb
cltd
movsb
pop
repnz
mov
dec
movsl
arpl
rcll
frstor
or
pop
pop
push
pop
dec
mov
pop
out
pop
fistpl
inc
fwait
xchg
dec
shlb
out
xchg
cld
jnp
outsl
cmpl
insl
cmpsl
imull
imul
mov
std
data16
mov
addb
mov
lahf
push
cld
test
out
adc
jmp
lret
jmp
fldenv
testl
adc
fst
push
aas
pop
and
aas
fldl
mov
lahf
in
ss
sbb
sub
mov
daa
push
adc
dec
rolb
xor
jecxz
pop
fcomi
scas
or
lods
out
neg
aaa
xlat
clc
mov
cmpsl
pop
test
mov
outsl
pop
cmp
lds
xchg
ficomps
push
add
imul
fidivrs
aad
ficomps
insb
cltd
fadds
mov
inc
jb
in
mov
loop
ficomps
jecxz
pop
cmp
or
add
addl
call
sbb
daa
xor
arpl
mov
cli
sbb
aas
sbb
and
or
das
push
out
inc
in
movsl
dec
fldcw
sahf
es
ss
fistps
mov
orl
mov
mov
inc
pop
cmp
mov
stc
push
fsubs
sbb
mov
inc
mov
gs
es
into
jp
mov
jg
out
add
sbb
cli
xchg
xchg
inc
iret
xchg
outsb
inc
pop
leave
pop
adc
jp
rorl
sub
cltd
sti
jns
ficompl
inc
test
xor
fs
stos
add
push
out
cmpsl
lods
push
mov
and
jbe
dec
mov
inc
cld
fmuls
xchg
and
and
imul
cli
insl
addr16
cwtl
sbb
jg
mov
push
js
xchg
cld
xchg
loop
es
mov
add
and
arpl
cmc
and
xor
inc
inc
addr16
push
mov
movd
adc
ja
into
rorl
aas
jp
stos
mov
inc
loopne
stos
inc
test
inc
fidivs
movsb
neg
xlat
or
sbb
sbb
cmpsl
xor
jns
and
inc
xchg
mov
mov
pop
jae
fildll
pop
insl
imul
mov
scas
sbb
nop
xor
sar
lea
add
jae
mov
lea
aam
in
xor
push
mov
mov
lea
pop
rcrb
ficomps
enter
pop
adc
jb
data16
fs
pop
jbe
pop
scas
xlat
xchg
and
fwait
lods
xchg
in
xor
data16
jecxz
fsts
push
and
xchg
test
jnp
lods
xchg
ds
rcr
mulb
dec
jl
inc
and
sarb
dec
icebp
mov
push
sbb
in
push
in
jno
cmp
or
je
stos
rcr
cwtl
jmp
je
mov
andb
call
call
pusha
aam
in
jno
sub
fsts
es
lds
out
dec
into
mov
outsl
fwait
adc
cld
pop
add
in
and
mov
mov
orl
popf
pop
sub
js
pop
shlb
std
dec
daa
xchg
add
pop
or
pop
orl
in
movsb
sarl
inc
rcrb
pop
in
add
lock
sbb
inc
jnp
mov
nop
pop
jns
ffreep
push
sub
sub
lock
call
fidivs
or
outsb
sbb
rorl
fwait
decl
insb
inc
xor
out
add
inc
in
mov
testb
popa
loop
stos
bound
mov
mov
push
fbld
in
outsb
js
dec
and
fists
test
stos
dec
movsb
cltd
in
cmpsb
das
hlt
jno
clc
shlb
jne
xchg
sbb
or
test
lea
jnp
xor
fsubs
adc
out
test
les
sbb
add
les
mov
mov
push
data16
add
call
inc
je
xchg
incb
push
mov
cmc
ret
cmp
cmp
mov
mov
ret
mov
iretw
push
sub
rolb
scas
jae
or
dec
and
pop
ret
outsb
hlt
aaa
sub
in
inc
push
jae
pop
loop
inc
out
mov
pushf
jnp
scas
and
dec
or
int3
dec
dec
adc
and
jge
push
sbb
hlt
es
cmp
xlat
mov
or
or
or
lods
push
in
push
xchg
pop
add
mov
ja
push
or
pop
ret
lret
xchg
cmpsb
push
sbbb
jno
or
mov
sbb
test
negb
push
mov
dec
push
mov
push
pop
xor
inc
sub
sub
enter
lds
in
movsl
aad
in
sbb
sbb
inc
inc
inc
dec
out
imul
in
push
inc
das
pop
out
lds
sbbb
les
mov
jno
pushf
adc
xor
mov
jge
cltd
xor
lret
mov
xchg
pop
sub
push
in
jns
mov
jnp
xchg
pop
jmp
jno
out
push
int
jo
loop
xchg
mov
mov
addl
dec
out
jo
pop
fldt
adc
int3
mov
inc
sbb
cmp
cld
adc
lcall
pop
mov
gs
out
outsl
sbb
pop
les
mov
bnd
dec
pop
cwtl
inc
gs
negl
xor
ja
pop
sbb
adc
ds
cmp
jg
fwait
jmp
dec
jnp
out
and
jecxz
jb
mov
lret
or
inc
ss
xchg
rcll
mov
sbb
or
je
push
testl
inc
call
js
dec
aas
int3
mov
rorb
xor
adc
xchg
jbe
lods
stos
pop
add
and
addr16
sub
pop
scas
push
push
jle
inc
jnp
jb
adc
cmp
ja
pop
mov
aad
mov
and
out
movsl
inc
dec
xor
sbb
add
cmp
sub
jl
push
fdiv
mov
jmp
js
ja
sbb
nop
mov
sub
sbb
mov
pop
adc
call
scas
sbb
outsl
mov
icebp
into
or
ret
ss
scas
pop
daa
adc
into
test
orb
pop
pop
xchg
dec
cmp
or
inc
jecxz
mov
pop
push
sub
push
lds
jmp
mov
shll
push
sub
mov
sub
jge
mov
test
dec
mov
leave
xor
xor
daa
shlb
outsl
add
pushf
adc
ret
rcll
cwtl
lcall
idivl
icebp
pusha
and
push
lret
sarl
out
popa
cwtl
jbe
add
or
adc
cld
push
scas
decb
push
ja
jno
cs
loopne
call
mov
sbb
into
push
pop
bound
leave
push
jb
movsl
sub
or
push
cmp
inc
lcall
daa
fucomp
mov
cmp
orl
pop
inc
test
mov
mov
xchg
inc
cmp
pop
mov
pop
and
jmp
push
xchg
and
xchg
xor
loope
decb
mov
push
rcll
jae
fwait
sahf
add
jp
dec
mov
sub
loope
jl
cltd
fs
aad
insb
pop
je
lahf
pop
imul
mov
inc
dec
aam
inc
pusha
cltd
jle
dec
das
sbbb
test
fcmove
or
sub
jmp
jecxz
repnz
in
subb
cmpb
jg
loop
clc
sub
add
mov
pop
sbb
push
push
xor
xchg
aad
pushf
popa
insb
sbb
mov
popw
xchg
mov
test
jo
aaa
fcmove
in
mov
rorl
jae
add
shrl
mov
inc
adc
xor
sbb
xchg
dec
aaa
inc
mov
cli
out
bound
jne
dec
addr16
cmpl
out
inc
xchg
test
add
mov
es
dec
std
and
gs
jb
inc
adc
test
cmp
jp
push
adc
mov
addr16
and
popa
or
enter
scas
in
outsb
mov
xor
adc
mov
pop
nop
ficoms
pop
and
adc
push
adc
push
ja
mov
fisubrl
xor
outsl
xor
out
mov
push
cwtl
stos
repnz
rcrb
hlt
xor
mov
or
cli
cmp
imul
int3
push
push
push
xorl
cmp
mov
pop
jmp
pop
ss
leave
jecxz
mov
std
outsb
cmovnp
imul
or
sbb
insl
sub
xor
mulb
test
inc
and
xor
jecxz
testb
mov
shrb
mov
scas
test
gs
and
jnp
and
jl
call
mul
cmp
mov
mov
push
add
mov
jnp
movsl
lahf
mov
xlat
fcomps
lcall
adc
out
loope
ror
dec
jb
pop
mov
sub
aam
inc
fdivl
jns
push
gs
jecxz
cmc
pusha
mov
add
das
push
mov
ljmp
lds
dec
add
testb
add
mov
lods
sbb
into
push
sub
sub
mov
push
cmp
fucom
cwtl
dec
aas
aad
mov
fwait
xchg
and
cmp
test
stos
inc
aam
insb
ret
push
mov
fst
insb
push
faddl
mov
imul
pop
inc
into
dec
jmp
icebp
push
push
mov
fldcw
in
popf
adc
or
les
hlt
push
rep
outsl
lea
mov
clc
orb
xchg
push
pop
or
rcll
and
imul
insl
jg
call
imul
xchg
popa
lret
mov
jmp
cmp
int
daa
inc
mov
test
xchg
sbb
dec
in
cmpb
push
enter
jg
or
dec
adc
push
iret
pusha
fstp
leave
xor
xchg
test
imul
lds
mov
popf
aam
push
mov
sub
in
fs
sub
mov
jp
mov
xor
pop
pop
xor
mov
and
push
outsl
into
xor
and
add
aas
push
cmp
iret
jnp
pop
mov
adc
js
push
popf
xor
jge
add
and
pop
cmp
mov
loopne
es
inc
mov
jno
pop
xchg
mov
imul
sarb
leave
push
jg
push
jg
cmp
fstpl
js
stos
es
mov
adc
out
lods
divl
icebp
add
jo
xchg
push
mov
pop
pop
test
test
inc
add
adc
pop
or
enter
loop
mulb
loop
pop
jnp
popa
mov
jo
adc
pop
mov
or
je
mov
lds
and
movsl
and
jge
push
es
xchg
test
jo
inc
cmpsb
inc
jno
add
inc
nop
arpl
int
std
add
in
inc
add
movsl
mov
ficomps
repnz
xchg
xor
add
xor
inc
adc
dec
les
xor
das
packuswb
mov
movsl
rorl
push
cmp
pop
fsubrs
push
aam
sub
sbb
jo
into
jp
jge
push
pop
int3
inc
adc
xchg
mov
pop
mov
jg
mov
rorb
mov
pop
je
cmp
mov
add
sbb
jne
mov
push
and
ja
mov
call
repz
cmpsl
popa
mov
les
xor
int
xchg
stc
lock
or
test
inc
cmp
test
mov
rsm
jg
shl
jg
push
or
rol
outsb
les
arpl
sub
lea
mov
cmp
loop
add
mov
andb
ljmp
and
jg
pop
out
out
aad
adc
rcrb
inc
add
aaa
xor
xor
movsl
push
mov
push
mov
shrb
cmp
push
push
stc
or
imul
and
aad
adc
add
and
jmp
push
repnz
popf
push
push
adc
int
icebp
insb
cmpsb
xlat
dec
dec
and
push
mov
xor
adc
test
shll
dec
adc
out
ss
aas
insl
or
les
push
stc
out
or
mov
mov
sub
xchg
cmc
mov
dec
mov
mov
pushf
inc
mov
sbb
stos
movsl
nop
dec
mov
stos
push
loopne
push
addr16
mov
cmpb
dec
dec
lret
js
cltd
cmp
or
bound
xabort
faddl
inc
dec
jo
sub
andb
mov
icebp
out
push
ljmp
lret
je
mov
sbb
adc
pop
push
setg
aam
popa
xlat
pop
in
adcl
fwait
repnz
jns
shll
xor
mov
cmp
ret
mov
mov
loop
movntq
in
and
sar
or
inc
jmp
jae
in
fwait
xchg
inc
push
imulb
aam
fdivl
adc
dec
xchg
call
dec
jmp
es
out
mov
pop
movsb
xorl
popa
in
inc
dec
cmp
sbb
hlt
pop
push
inc
mov
or
in
mov
push
cmpb
fistl
or
lods
inc
test
cmpsl
shr
unpckhps
push
pushf
jne
cmpsb
std
pop
sub
shr
inc
popf
add
and
test
fimull
or
cltd
mov
cmp
push
fisubrl
adc
xor
xchg
in
push
bound
adc
or
rorl
mov
aam
mov
out
sbb
sub
pusha
shr
jmp
enter
add
dec
pop
jle
repz
jno
xchg
out
add
mov
add
negb
or
inc
dec
lcall
pop
jno
fistl
faddl
shl
lods
mov
jmp
lea
and
push
aas
int
mov
dec
scas
mov
out
fldcw
jp
mov
sub
mov
push
popa
ret
popf
sete
cmp
mov
icebp
sti
xchg
lret
mov
push
das
jge
xor
or
test
push
inc
jno
mov
in
bound
push
sbbb
sbb
push
pop
pop
adc
icebp
cmpsl
bnd
lcall
inc
xor
divl
notb
loopne
cwtl
test
adc
inc
scas
mov
pushf
sarb
inc
int
xchg
mov
ljmp
mov
bts
loope
push
int
xchg
iret
mov
clc
or
mov
aad
cmpsb
enter
sub
cld
js
jno
aam
aas
pop
lahf
test
std
cli
sub
shr
sub
leave
xor
stos
stc
xor
fmulp
fbld
add
cmp
hlt
andl
cwtl
jmp
iret
out
cmp
adcl
jle
jmp
sub
dec
icebp
popa
lret
xchg
xor
lods
data16
repnz
mov
adc
sbb
dec
xor
push
in
pop
out
clc
imul
hlt
lahf
enter
ret
dec
adcl
loop
data16
out
push
iret
cmp
push
insl
lret
pop
and
adc
push
or
movsb
pop
fstpt
jl
mov
xchg
out
pop
loopne
jle
mov
mov
and
and
das
push
push
ljmp
shr
or
test
xor
xchg
mov
scas
lea
out
adc
dec
imul
push
xchg
lret
arpl
fdivr
xchg
insb
movsb
pop
mov
jl,pn
cmp
lcall
xor
push
xchg
sub
insl
add
cmpl
adc
into
sub
sbb
jge
rorl
fiaddl
fisttps
jecxz
add
xlat
lret
cmp
xchg
add
aad
into
lcall
test
pop
and
push
push
and
sub
push
inc
inc
inc
and
out
aas
hlt
jo
in
in
lds
xchg
popa
cmp
outsb
les
jp
or
sbb
push
jno
push
xchg
orl
xor
outsb
cltd
lock
inc
loopne
add
dec
mov
pop
inc
lock
cmpsb
xchg
mov
cmp
xchg
xchg
xorb
jo
in
sub
scas
or
test
cwtl
cmc
pop
xor
adc
dec
lret
dec
xchg
jmp
mov
in
out
sub
sahf
cmp
test
ror
sub
dec
mov
out
inc
xchg
test
mov
int3
push
and
sahf
push
pop
sbb
lea
mov
ds
mov
push
jl
stc
cmc
jbe
fdivrl
mov
enter
imul
mov
jmp
scas
shll
mov
cmp
scas
fwait
mov
push
mov
add
jmp
cs
in
movsl
lcall
movsl
scas
jecxz
sub
inc
sub
jmp
aam
cmc
xchg
pop
inc
scas
out
cmp
es
adc
out
sahf
and
push
pushf
adc
aad
xchg
fcmove
sbb
notb
mov
mov
dec
into
repz
mov
fnstsw
out
jecxz
iret
push
adc
fwait
rorb
iret
movsl
fstpl
jg
gs
hlt
inc
ljmp
pop
pop
test
add
fwait
insl
cwtl
mov
cmpsb
add
movsl
jmp
cmpsl
int
mov
data16
test
data16
je
jb
dec
pushl
sub
and
test
aad
push
dec
pop
pop
mov
xchg
shll
outsl
xchg
popa
and
pop
outsl
xor
mov
mov
pop
xchg
or
inc
jp
ss
rcrb
in
mov
xchg
push
cmp
and
mov
dec
xchg
inc
lcall
mov
je
lock
mov
xor
mov
fsubr
push
bound
fisubs
sub
mov
xor
testb
mov
mov
push
dec
ret
or
outsb
stc
push
jp
outsb
sbb
in
push
fnstenv
je
jo
jne
sub
movsl
cmp
xorb
movhlps
mov
mov
add
mov
jp
fisubs
mov
pop
mov
adc
or
int3
jge
inc
in
pop
mov
jge
aaa
and
js
inc
out
jmp
stos
ja,pn
stos
movntps
sbb
sub
test
mov
arpl
and
mov
fldenv
xchg
testb
dec
imull
dec
adc
out
mov
pusha
rcl
cmpsl
inc
push
add
dec
imul
fcoml
pop
mov
das
and
cs
or
push
mov
or
mov
cmpb
enter
lods
dec
fildll
ss
cltd
mov
dec
shll
xor
stos
mov
iret
add
sti
jb
test
jge
jns
dec
fimuls
icebp
lds
mov
cwtl
cmpl
scas
sub
jb
xchg
sub
cmp
sbb
jg
jle
mov
mov
daa
cwtl
jmp
push
arpl
dec
adc
repz
in
test
out
repz
pop
mov
inc
cs
jle
arpl
sub
mov
lds
xchg
rsqrtps
jns
jb
in
jne
jg
pop
lahf
or
sub
imul
add
sub
jmp
jne
push
aam
pop
lret
cmp
mov
pop
jno
sti
jmp
xchg
unpcklps
push
int3
cwtl
nop
or
into
sahf
sbb
frstpm(287
enter
push
call
cli
xor
imul
pop
sti
mov
repz
xlat
inc
ret
stc
aas
in
sub
mov
add
sbb
filds
mov
fld
icebp
jmp
out
cmp
lods
enter
and
xor
xor
subb
sti
mov
sub
test
enter
mov
inc
inc
mov
lea
scas
xchg
adc
lods
adc
dec
rep
cmp
flds
in
or
jnp
shll
bound
push
das
xor
or
fcomip
xorb
hlt
insb
sbb
fwait
pusha
mov
pop
inc
popf
rorl
std
xlat
aas
out
cmpsb
push
rolb
fwait
and
outsl
test
pop
les
xchg
mov
fstpt
out
in
add
mov
loope
sbb
pop
push
out
mov
jne
and
xor
movsbl
sahf
cli
scas
inc
popl
lahf
ret
insb
mov
jne
dec
pop
sbb
addb
inc
jge
push
mov
mov
es
jo
push
jae
outsl
fwait
mov
nop
sbb
adc
mov
sub
adc
sbb
or
inc
out
in
push
mov
test
dec
mov
insl
xchg
jo
sub
mov
test
std
bound
fimuls
mov
outsb
add
and
mov
pop
leave
outsl
inc
pop
addr16
xchg
insl
mov
lea
std
mov
outsl
ficoml
jmp
mov
xor
out
xchg
stc
sub
icebp
or
cli
xchg
test
sub
adc
arpl
xor
ret
xor
mov
das
xchg
mov
shlb
cmp
sub
dec
aad
mov
or
inc
sar
xor
sbb
pop
and
mov
mov
jbe
repnz
and
in
fwait
and
adc
orb
jmp
repnz
inc
in
pop
cld
adc
pop
sub
xchg
add
jne
mov
sbb
pushl
push
scas
push
cld
and
mov
add
mov
loopne
cmp
dec
inc
aas
stos
inc
aas
mov
clc
fucomi
movsb
jg
enter
jns
cmp
jae
repnz
mov
lds
mov
stc
jbe
pop
mov
in
out
add
ret
xchg
lock
pop
outsl
mov
je,pt
mov
cmpb
adc
xor
fdivp
lret
rcrl
test
cli
int
add
pop
fistl
add
ja
pusha
cmpsb
rorl
aaa
push
addr16
subb
or
jbe
push
push
mov
inc
popa
rcrl
or
jp
movsb
mov
cmc
dec
pusha
test
iret
hlt
mov
jno
and
movsb
and
imul
xlat
mov
pop
popf
cmpsb
mov
cmp
pop
push
jmp
in
enter
xchg
popa
ret
jle
sbb
jg
fsubs
cmp
in
adc
je
les
inc
fs
movzwl
adc
adc
imul
push
sbb
adc
iret
xchg
scas
dec
xchg
jmp
inc
mov
xor
lds
fsubs
ja
push
add
repnz
fs
lahf
xor
sbbl
sbb
nop
dec
out
pop
enter
leave
jge
stc
gs
aam
add
inc
mov
dec
push
xchg
imulb
aas
sub
mov
lds
outsb
push
out
pop
cmp
sahf
xchg
sub
addr16
cmp
pusha
scas
jne
lcall
mov
jecxz
repz
jb
inc
pop
jmp
scas
dec
in
and
aaa
jo
add
xor
adc
rorb
sar
or
cmp
std
ret
mov
aad
add
addb
fstl
int
inc
xor
loop
lcall
sbb
or
cmp
enter
stc
imul
push
lods
mov
loope
in
mov
popf
in
mov
cli
pop
jp
and
cmp
cmp
dec
ja
sbb
mov
mov
add
push
shll
mov
outsl
int3
xlat
cmp
push
add
orl
xlat
lea
push
dec
adc
ret
xchg
out
shrb
inc
jns
xor
or
shrb
sub
mov
push
ss
mov
sarl
out
test
adc
mov
push
pop
fnstsw
roll
xchg
add
setp
aas
cmp
cwtl
dec
mov
sub
lret
mov
rcrl
dec
adc
pop
mov
mov
pop
repnz
aas
adc
sbb
js
xor
mov
xchg
shll
and
in
sbb
xchg
into
stos
xchg
mov
mov
test
adc
sarb
aas
pop
xor
lret
test
xchg
sbb
clc
and
popf
xor
add
jecxz
scas
ret
sbb
std
pop
jns
and
jno
xchg
pop
or
xor
adcb
rolb
mov
push
or
into
lcall
ret
lcall
adc
les
sub
lcall
dec
repnz
lds
cmc
decb
popf
mov
dec
sub
push
or
pop
mov
mov
idivl
xchg
fstpl
js
or
call
add
mov
mov
in
xchg
cmp
aaa
fsubl
in
nop
jno
dec
ja
fnstenv
adc
xor
pop
stc
dec
popa
lahf
jecxz
and
ret
stos
into
xchg
add
repz
orb
xor
nop
loope
inc
xor
adc
in
mov
lcall
and
addr16
stos
inc
ljmp
out
loop
or
negb
mull
mov
subl
or
nop
fadd
push
mov
or
push
xchg
push
out
sbb
adc
test
pushl
jne
lahf
pop
mov
sub
fmuls
cmpsl
add
lret
and
pop
ja
stos
les
jo
or
adc
mov
ficompl
lcall
in
or
sbb
out
mov
stc
xchg
ficoms
test
and
jmp
pop
jmp
dec
jecxz
mov
xor
mov
inc
enter
mov
xchg
dec
xchg
iret
pop
imul
jl
in
ss
mulb
shr
pop
xor
xor
int
out
sbb
jecxz
xchg
ret
push
xor
popa
or
in
shrb
dec
mov
or
lds
mov
inc
push
test
test
cmpl
adc
sbb
out
fists
adc
and
sub
push
gs
add
mov
sbb
popf
xor
xchg
jmp
mov
cmp
lods
mov
adc
mov
pop
sbb
mov
sub
dec
in
sbb
fs
fiaddl
inc
popa
push
faddl
lcall
out
jge
cmp
xor
add
lock
setp
add
dec
mov
xorb
pop
pop
xorb
add
dec
sbb
pop
jge
xchg
mov
jl
ss
orb
or
pop
insb
sbb
jp
sub
leave
dec
lea
inc
pop
push
lods
addr16
jmp
push
push
mov
or
cmp
pop
lret
test
jb
outsb
out
cmp
divl
inc
je
sbb
or
xchg
lock
in
jge
aad
clc
cmpsl
and
jg
jecxz
in
adc
push
fisubrl
imul
cmp
cmpsb
pop
adc
fnstsw
dec
mov
das
ljmp
xchg
jg
xor
jmp
clc
mull
or
dec
inc
in
fmul
dec
cmp
rolb
and
dec
mov
insl
mov
gs
insb
fisubrs
jle
mov
cmp
mov
in
add
mov
push
lods
fidivs
aad
xchg
lods
jmp
cmp
in
xor
inc
stos
mov
or
stos
jo
sbb
shll
in
jmp
ja
clc
fsubr
subl
sub
inc
aam
jl
push
scas
frstor
ror
jp
cmp
add
rorl
push
xlat
push
push
cs
sub
fldcw
inc
and
and
ret
jp
mov
xor
popa
xor
push
inc
lea
inc
adc
dec
dec
loop
jge
lock
daa
ss
test
and
push
not
bound
xor
pop
ret
das
call
mov
jae
sbb
cmp
push
mov
fbld
add
sub
xlat
pop
dec
add
or
js
or
stos
mov
ss
div
in
jp
aas
fdivp
and
mov
add
mov
jle
xlat
into
cmpl
jo
pop
inc
clc
gs
filds
in
jle
xor
ficompl
mov
fsubr
movsb
ds
push
fwait
mov
or
data16
xchg
pop
rcr
lea
stos
xchg
mov
xchg
out
dec
sub
push
lea
stos
in
pop
adc
pop
push
sub
test
in
dec
sbb
inc
xlat
sub
cmc
mov
pop
adc
or
fsubrs
push
and
jp
fsubl
stc
movsl
fcomip
adc
enter
xchg
push
xchg
test
mov
xchg
bound
out
and
mov
or
imul
push
les
lock
les
pop
dec
mov
and
pop
mov
mov
or
jecxz
ret
adc
xchg
inc
cmovbe
subl
xchg
pop
pop
inc
test
pushf
and
xchg
nop
push
xor
jmp
push
ljmp
dec
jb
sub
adcl
sbb
cmp
or
fwait
test
cmp
cs
cwtl
xchg
jl
addr16
push
xor
test
pushf
pop
inc
add
pusha
jmp
in
fnstenv
outsl
sub
lea
add
frstor
sbb
add
and
jne
js
dec
lahf
adc
stc
repnz
mov
pushw
dec
ljmp
or
cmp
rol
fimull
jno
scas
dec
mov
push
inc
pop
insb
inc
rclb
aad
dec
push
pop
rorb
push
pop
les
lret
arpl
js
enter
dec
aam
neg
or
jmp
bound
out
inc
or
int
cmp
adc
aas
pop
xor
popa
or
xchg
lods
mov
ljmp
sbb
mov
xchg
push
adc
xchg
lds
cmpsl
mov
leave
mov
fisubl
jae
ljmp
push
pop
pop
adc
stos
repnz
push
push
push
xor
jge
mov
jecxz
clc
scas
pop
push
js
fidivrs
ret
pop
push
es
mov
and
pop
int
sbb
cmp
aas
jbe
jmp
xchg
dec
jmp
lods
or
jmp
dec
adc
test
imul
shrl
xchg
lret
or
jnp
mov
rolb
fs
cmp
inc
outsb
cmp
push
into
pop
and
ss
sub
jmp
push
xchg
call
push
jmp
mov
add
andl
fistps
push
pushf
lods
test
pop
test
jmp
push
in
nop
add
lahf
ja
lea
aad
sar
repz
fisttps
in
mov
aas
xorb
jo
call
ljmp
jmp
push
cld
popf
mov
or
pop
leave
pusha
test
shlb
icebp
cltd
sbb
jl
mov
push
ds
dec
dec
mov
or
sbb
inc
enter
dec
cli
sub
aas
dec
push
pop
sub
mov
push
ds
ljmp
push
insb
pop
insb
mov
jnp
xchg
cmpsl
clc
je
jbe
sbb
icebp
dec
mov
push
adc
pop
out
adc
sbb
testb
push
xchg
loop
fnstenv
cmp
sbb
adc
test
movsl
test
push
sbb
out
enter
fldl
movsb
mov
cmp
and
mov
cmpsl
sbb
dec
adc
or
jge
or
addr16
rorb
mov
cmpsl
mov
pop
pop
fiaddl
push
sbb
mov
pop
pusha
jne
ljmp
orb
rcrb
pop
sbb
test
shrl
gs
jae
push
push
fdivr
inc
in
jge
cmpsb
mov
push
cltd
mov
int
pop
imul
or
or
jmp
and
fs
xor
mov
daa
add
aas
xor
pop
cmp
lret
rolb
push
je
cltd
fisttpll
sub
leave
jg
cmp
and
outsb
push
add
mov
mov
inc
cltd
push
xor
jle
xlat
dec
cwtl
adc
outsb
mov
fcoms
mov
dec
mov
das
mov
inc
push
adc
and
lcall
fildll
inc
push
fmull
xlat
mov
aaa
mov
inc
sahf
je
xchg
inc
pushfw
loop
call
pop
xor
push
aas
mov
push
fdivs
xchg
fstl
jle
dec
pushf
mov
dec
outsl
nop
mov
xor
xor
test
jge
sub
jmp
pop
clc
leave
mov
outsb
cmp
rorb
test
sbb
loopne
push
daa
es
mov
jecxz
mov
clc
stos
outsl
call
das
adc
lret
and
add
pusha
mov
push
sub
scas
sub
repnz
dec
push
push
decb
stos
sbb
pusha
popf
mov
in
in
aad
xchg
scas
jge
rorl
sbb
ss
es
adc
add
dec
dec
in
arpl
enter
ret
cmp
pop
xchg
add
test
jge
jmp
push
aad
cmc
sahf
shll
pop
add
xor
and
sti
push
leave
jge
jbe
pop
jecxz
mov
xchg
shlb
cwtl
cmp
xor
lods
dec
inc
mov
inc
test
xchg
push
test
inc
fistps
sbb
fs
popa
mov
outsl
mov
retw
sub
mov
data16
mov
rorb
sub
fadds
pop
xchg
adc
in
push
jl
ficompl
fbstp
pop
jae
aam
test
ljmp
movsl
inc
push
dec
jmpw
rol
xchg
repz
pop
inc
jbe
push
add
pop
std
or
lret
and
inc
and
pusha
cltd
or
pop
sub
pushf
insb
fwait
mov
call
shrl
and
push
rol
adc
push
test
loopne
add
clc
add
mov
sub
jb
loope
pop
pop
xchg
adc
cltd
aas
aam
push
cmpsl
hlt
rorb
dec
int3
stc
and
ljmp
jnp
out
pop
and
das
in
xchg
lds
repnz
addr16
xlat
mov
in
pop
arpl
and
fwait
outsb
loop
js
rol
cwtl
in
pop
imul
mov
sbb
maskmovq
notl
mov
fcomps
mov
adc
test
out
in
or
lds
scas
test
add
sbb
adc
add
sub
test
or
sbb
inc
repnz
adc
aas
pop
sub
sub
mov
or
jb
dec
cmp
mov
push
push
fcmovb
add
pop
stos
bound
aam
scas
ss
hlt
iret
lods
add
int3
sbb
sub
adc
cmc
mov
int
push
mov
inc
jg
push
cmp
mov
cmc
outsl
jge
sbb
or
sub
cmp
sbb
sti
fcoms
dec
mov
xchg
xor
in
cmp
dec
lcall
adc
imulb
mov
sub
cmpsl
mov
mov
cmpsl
pop
jbe
sbb
mov
mov
cli
fdivl
push
cmp
movsb
cmp
push
std
jg
lea
xor
jle
dec
mov
mov
jge
arpl
mov
mov
mov
mov
mov
sub
adc
popa
push
cmp
push
test
dec
js
xchg
adc
mov
mov
mov
jmp
sbb
push
add
cmp
cmp
mov
aad
xchg
enter
mov
xchg
dec
jbe
push
data16
fdivrl
lcall
and
and
mov
repnz
dec
cwtl
cmp
and
xchg
mov
dec
ss
mov
loope
lcall
or
adc
adc
es
pop
popf
leave
test
stos
sti
xchg
cli
push
ss
mov
mov
push
jmp
mov
add
pop
out
into
pop
cmp
cmp
out
jno
jmp
jmp
imul
xchg
je
pop
roll
dec
test
out
call
jmp
and
test
outsl
addr16
and
fcmove
out
lock
xlat
test
aam
jne
cwtl
pop
mov
test
dec
mov
fidivrl
adc
mov
lcall
sub
xor
sti
pop
loop
mov
jl
rolb
out
xchg
stc
xlat
outsl
ds
arpl
out
in
xor
imul
aad
loope
cld
push
testl
mov
outsl
jbe
loop
test
dec
xor
enter
enter
xchg
ret
mov
jmp
jae
cmp
arpl
pop
push
sahf
add
jo
pop
inc
jae
pop
push
or
data16
int
adc
mov
inc
adc
jmp
psadbw
scas
and
pushf
pop
inc
rolb
xchg
fs
inc
sbb
ret
push
addr16
rorl
aas
mov
outsl
mov
aaa
jmp
mov
rcrb
ret
iret
js
jb
mov
sarl
jbe
cmp
lahf
jns
out
call
sub
std
ret
mov
dec
fwait
cltd
pop
movb
xchg
push
mov
mov
lds
clc
inc
sub
loope
pushf
iret
adc
sub
imul
xor
mov
pop
enter
int3
fiaddl
lea
cmp
mov
xchg
aaa
mov
xchg
cmpsb
jae
test
repnz
xor
sub
lods
imul
adc
cmp
dec
add
sti
xchg
bound
pop
mov
and
jno
sti
jecxz
outsb
enter
lods
jno
mov
stos
pop
stos
cld
test
nop
jae
jl
lock
mov
push
mov
jmp
rcll
lret
ret
mov
pop
mov
sar
ror
push
xor
test
xor
push
xor
aad
jge
xchg
inc
sarl
push
xchg
ds
xchg
mov
mov
cmpsb
andl
pop
sbb
hlt
mov
pop
xorb
push
sbb
imul
cmpsl
sahf
xchg
in
js
push
hlt
push
xchg
fldl
lea
vmwrite
sbb
mov
cmp
push
push
testb
outsb
mov
xchg
adc
sarw
scas
clc
mov
pop
or
pop
cld
popf
in
mov
sti
loop
cmp
mov
pop
mov
sbb
cld
mov
mov
jnp
sbb
add
jmp
clc
inc
les
dec
aam
pop
mov
sbb
stos
rcl
xlat
sahf
sti
push
je
es
mov
or
add
or
push
popl
ret
sbb
dec
in
fisttpl
rcrl
push
jecxz
pop
push
lods
xor
out
xor
js
in
iret
mov
adc
add
sti
sarl
push
mov
fildll
std
aas
loopne
icebp
stos
cmp
or
les
leave
pop
fisubrl
mov
testb
insb
stos
cmp
xchg
mov
cmc
std
add
lock
cmp
push
or
push
pushf
dec
cmp
adc
mov
sbb
or
cltd
pop
mov
std
mov
push
out
jbe
mov
add
or
or
imul
mov
in
xor
fcoml
popa
add
sub
fidivrs
addl
jp
xchg
fdivs
adc
and
les
out
pop
out
bound
or
xor
ret
ret
mov
or
jge
out
scas
lcall
jbe
dec
addr16
xchg
cltd
adc
dec
stos
mov
cmc
nop
loopne
mov
das
and
mov
ja
jp
dec
ret
adc
or
bound
hlt
push
mov
ror
mov
add
inc
icebp
pop
jecxz
fnstcw
dec
mov
cmp
and
mov
sbbl
out
and
shl
arpl
adc
sub
pop
divl
loopne
or
iret
fisubrs
xor
xchg
mov
pop
sbb
jns
or
popf
js
pavgw
xor
stos
and
sbb
out
arpl
pop
movsl
xlat
sar
lds
stos
sbb
mov
addr16
jg
fldt
push
inc
fisttpll
shr
xchg
adc
shlb
and
xchg
stc
mov
and
mov
int
inc
jnp
jg
push
mov
jo
aas
dec
add
sbb
jp
jl
sbb
xchg
mov
add
push
call
pop
pop
jge
call
push
or
leave
mov
lret
dec
jg
dec
jecxz
imul
pop
add
ljmp
and
and
imul
out
repnz
mov
div
rcrl
aam
push
repz
add
stos
xchg
or
lcall
popa
jne
push
rcrl
sbb
jbe
lock
rcll
fdivrs
cmpsb
ss
mov
inc
add
sub
ljmp
insb
inc
ret
or
mov
fidivl
mov
sub
or
icebp
xchg
rcll
imul
fistps
push
std
test
fdivs
xchg
cld
sbb
out
loope
rcrl
scas
cltd
sub
mov
pop
int
leave
mov
fwait
inc
mov
inc
ficomps
xchg
scas
mov
into
test
jno
pusha
daa
fnsave
sbb
fwait
push
scas
mov
ret
in
xlat
or
lock
in
push
andb
adc
imul
xchg
sbb
cmp
add
out
js
fcmovbe
jnp
push
lea
fistpll
pop
cmp
lds
ja
xor
dec
jmp
push
push
mov
mov
enter
ljmp
int3
jg
jns
pusha
lods
testb
insb
fimuls
mov
xchg
adc
arpl
sti
enter
pop
jbe
dec
xor
xor
xchg
fwait
push
or
mov
push
pop
xchg
pop
cmp
loop
clc
into
insb
aaa
orl
inc
outsl
pop
and
xlat
into
movsb
cmp
inc
fists
outsl
sub
stos
and
ret
int
test
dec
pop
cmc
daa
aaa
push
and
jle
jmp
aas
lea
dec
jnp
adc
or
cmp
xor
push
lods
jge
inc
rorb
cmp
bound
adc
dec
push
jmp
stc
mull
cmp
inc
in
mov
jns
pop
adc
xor
inc
rcrl
mov
cmp
or
lcall
cwtl
push
adc
push
fcoms
lock
fildll
cmp
and
jnp
sub
jle
mov
add
daa
add
arpl
ficompl
int
push
mov
adc
adc
mov
push
fdivs
scas
lods
mov
cmpsb
add
mov
mov
mov
out
pop
lret
mov
ja
xor
mov
cld
data16
push
out
rcll
les
push
cltd
pop
mov
sub
cmp
ds
push
push
pop
dec
push
mov
adc
push
mov
and
xor
jl
jnp
nop
out
out
cld
adc
fcompl
loop
push
sbb
cmpsl
std
cs
movsb
cld
stc
push
push
rcl
sub
sub
sbb
adc
add
out
or
data16
in
ret
in
jo
push
fsub
ret
imul
pop
test
add
mov
mov
push
lret
mov
test
mov
pop
ja
cmpsb
stc
lea
enter
or
push
ds
int3
mov
fldenv
pop
dec
add
cwtl
mov
mov
outsb
mov
rcll
fcomps
cs
dec
mov
xor
add
jno
mov
jmp
mov
adc
xor
dec
sbb
test
cmp
in
das
xlat
shl
sahf
add
cmp
das
add
call
lahf
dec
sub
and
jae
fsubl
mov
push
mov
inc
inc
ds
push
lods
mov
mov
pop
das
mov
dec
jle
jmp
mov
and
mov
daa
fists
cmc
dec
movsl
jl
int3
stc
nop
fstpl
sub
xchg
push
mov
xchg
imul
in
mov
sub
popf
mov
dec
and
cmpsb
fadd
push
mov
xor
ljmp
cmp
es
in
adc
test
mov
dec
xor
push
push
and
addr16
cmc
in
push
into
outsb
mov
lods
fbstp
loop,pt
in
or
cmp
test
hlt
push
mov
sarb
out
or
pop
and
fcmovnu
dec
sub
icebp
mov
mov
addr16
mov
pop
sbb
les
inc
iret
out
lahf
cmc
or
push
xchg
mov
js
out
addr16
mov
cmp
cmc
adc
movsb
jb
popa
hlt
andl
adc
decl
sbb
inc
mov
neg
mov
adc
and
mov
add
fiaddl
push
inc
roll
loope
cmp
mov
xor
popf
or
jbe
xlat
xchg
pushf
jb,pn
cmc
push
push
addr16
aaa
enter
mov
push
pusha
inc
mov
sbb
imul
xor
ljmp
std
sub
shl
adc
movsl
stc
xchg
xchg
inc
pop
push
pop
fstpl
fildll
xchg
stc
sbb
movb
push
std
in
fidivrs
xchg
sarb
in
fwait
push
mov
and
and
sarl
xchg
ror
icebp
lret
jnp
mov
or
jmp
xchg
in
xor
add
in
repz
jb
xchg
add
xchg
push
xor
je
nop
adc
jae
into
sub
push
inc
pop
add
mov
sbb
cs
lock
repz
xchg
push
jbe
jne
iret
popf
mov
jmp
adc
jo
in
ds
xlat
loope
sti
jb
push
push
adcl
inc
xor
fidivrs
jnp
repnz
in
xchg
inc
mov
mov
jno
in
out
in
lock
movsl
outsb
jp
mov
adc
mov
cmp
lea
stos
pop
fldt
fbld
pop
pop
ds
add
mov
adc
arpl
scas
sarb
enter
dec
js
push
rcll
or
lcall
scas
jnp
into
jo
jmp
test
clc
inc
lahf
ret
int
push
fstps
mov
mov
test
arpl
out
fwait
jecxz
lret
xchg
sub
xchg
test
pop
inc
or
push
inc
sbb
cmp
mov
inc
jmp
test
icebp
push
mov
jl
mov
inc
cmpsl
jne
mov
pop
imul
aaa
popf
adc
lea
inc
jp
push
scas
inc
dec
add
ljmp
rclb
fstl
dec
mov
inc
adc
lea
xor
xor
add
loope
fidivrl
rcl
push
ds
xor
out
mov
in
xor
lret
or
les
mov
ret
out
sbb
inc
test
pusha
push
lods
or
or
push
mov
icebp
mov
fs
add
mov
add
add
pop
in
lahf
sub
rcrl
push
inc
pusha
mov
ffree
push
cmp
fdivs
cmpsb
outsb
push
pop
andb
add
shrb
nopl
push
mov
mov
aas
cwtl
sub
cltd
aam
roll
mov
dec
ret
ljmp
jmp
cld
cmp
repnz
dec
sbbl
int3
test
adc
je
or
les
mov
jmp
daa
pop
jae
or
mov
add
in
push
je
adc
sbb
add
mov
sbb
cmp
cmpsb
repnz
or
mov
mov
es
fisubl
inc
mov
push
inc
out
ss
mov
pop
xchg
std
mov
xchg
sti
xchg
or
push
mov
dec
aad
adc
pop
lret
add
push
sbbb
pop
fcomp
pop
xchg
adc
mov
arpl
mov
cmc
sub
leave
inc
xor
pop
adc
jl
or
sub
mov
das
mov
xor
repz
xor
ljmp
or
sbb
enter
aas
scas
lea
insb
scas
scas
mov
mov
test
jb
push
adc
das
mov
cld
int3
ja
rclb
movsb
rclb
adc
lods
sbb
dec
cld
xor
sahf
push
ljmp
add
xor
cmp
jno
aas
lods
cli
mov
push
mov
adc
fdivl
stos
packuswb
in
mov
fs
lds
xor
dec
repnz
and
mov
cmp
std
popf
cmpsb
out
cmp
fisttpll
loop
gs
push
mov
out
sub
nop
dec
ljmp
inc
fcmovbe
or
sbb
out
mov
adc
sbb
sbb
subb
aas
pop
xchg
outsl
outsl
mov
dec
push
and
dec
xchg
stc
push
ds
xlat
mov
lock
fisubs
inc
fucomi
aaa
out
and
stc
stos
jp
lods
xor
xchg
outsl
movsl
cmp
push
sbb
sbb
sti
cli
dec
aam
nop
subl
sbb
aas
fistps
ds
aad
xchg
rcrb
outsb
jae
scas
cmpsb
dec
xchg
mov
cmpsb
push
repnz
adc
mov
pop
sbb
pop
and
inc
fdivs
fldt
mov
mov
outsb
mov
adc
or
sbb
rorl
mov
cmp
arpl
mov
shlb
and
bound
pop
ss
repnz
adc
or
lea
push
dec
lahf
xlat
dec
pop
pop
jnp
and
adc
sahf
push
call
add
adcl
add
faddp
cmp
js
scas
jmp
pop
cli
sub
jmp
dec
xchg
xchg
movsl
pop
lods
jbe
inc
pop
insb
xchg
jb
mov
fistps
pop
sub
sub
adc
aaa
out
xchg
repz
adc
ficompl
xchg
add
fimull
jle
lcall
lret
adcb
subb
in
fbld
mov
es
fsubs
adc
int3
push
orl
pop
xchg
xchg
jb
sbb
int
movsl
xor
sbb
jbe
mov
int3
sbbb
mov
fisubl
rcr
mov
mov
xor
xchg
pusha
inc
popf
inc
dec
pop
and
add
std
out
mov
outsb
lods
enter
ret
sbb
sbb
and
and
addr16
pop
lds
jge
push
add
cmpsl
jne
popf
jg
loop
loop
sti
imul
repnz
imul
and
aad
jmp
add
mov
rorb
rolb
fidivrs
rclb
mov
dec
cltd
push
cmp
cli
cmp
mov
loop
sub
movb
add
pushf
cmp
pop
stos
pushf
shll
push
push
stos
lods
mov
mov
adc
push
loopne
xor
data16
and
mov
and
mov
mov
movsl
add
mov
xor
jno
or
ja
add
add
bnd
xchg
sub
sbb
add
sub
or
js
adc
and
jb
xchg
mov
fisubs
divl
sbb
push
fcoml
ss
out
push
inc
mov
push
orb
sub
xchg
cwtl
cld
cwtl
gs
dec
ret
clc
imul
and
push
test
mov
jae
and
fcomps
adc
adc
jae
cmpsl
push
sahf
jo
or
nop
insb
jecxz
test
mov
cmp
mov
lcall
orl
jns
mov
fidivl
in
dec
add
testl
xor
daa
es
ret
nop
jae
andl
dec
push
add
jno
adc
das
fnsave
dec
aad
sbb
cmp
sub
fnstcw
cmpl
and
in
rorl
jae
or
xchg
aas
sbb
mull
rcrb
sbb
fsubrl
ds
jmp
and
lock
jno
loop
jle
pop
lahf
mov
sbbl
and
xor
mov
mov
cld
sbb
out
movsb
in
pop
call
outsb
mov
adc
sub
dec
fwait
mov
cmp
in
lret
arpl
ret
lahf
add
and
sub
loop
inc
stos
xor
in
and
call
jg
fildll
les
fwait
cmp
pusha
outsb
add
mov
dec
test
mov
das
aas
jg
aaa
bound
repnz
xor
pop
movsl
cmp
and
and
push
leave
in
lret
xor
rcrl
ficoml
icebp
insl
js
mov
popf
js
mov
push
dec
mov
push
push
shrl
cli
mov
mov
inc
sahf
daa
in
mov
fwait
jmp
mul
loope
sbb
cmp
daa
push
jmp
scas
pushf
ficoms
out
outsl
mov
pusha
and
inc
loopne
repz
jo
jno,pn
dec
pop
cmc
xor
sti
mov
pop
push
mov
sbb
jecxz
inc
shrb
ficoms
popf
dec
addr16
out
daa
cmpsb
scas
xor
xchg
fbld
call
jb
and
push
std
movsl
push
pop
sbb
pop
mov
mov
loop
push
pop
mov
mov
xlat
xchg
or
cmp
out
mov
push
push
sub
sub
jnp
jne
ljmp
jne
dec
xchg
lahf
pop
inc
pop
mov
inc
icebp
aas
enter
cmp
jle
stos
rcll
notl
cmp
scas
rcll
mov
push
outsb
inc
push
add
jecxz
sbb
sub
and
leave
xor
lcall
inc
or
push
fcmove
push
sahf
out
and
dec
inc
inc
imul
sahf
fwait
push
jg
inc
and
mov
add
push
shrb
lods
sarb
repnz
cmp
mov
les
inc
icebp
cmc
pop
orl
push
cmp
repnz
jae
shll
adc
cmp
ja
xchg
or
mov
int
dec
add
inc
das
lret
sbb
out
lds
cmpsb
insl
loop
shl
inc
into
out
ret
out
ss
out
dec
sti
inc
js
sub
stos
lods
pop
arpl
push
jle
rcl
out
mov
sbb
dec
mov
fwait
sub
or
add
jmp
icebp
stos
pop
out
and
jae
mov
rolb
mov
sbb
int
pop
sub
scas
sbb
mov
jp
movsl
int3
and
push
mov
call
or
daa
and
movsb
xchg
in
adc
fdivl
xor
fiaddl
lcall
and
js
dec
in
sti
jns
movsb
daa
arpl
mov
dec
dec
out
lcall
push
inc
aaa
push
fs
aam
std
addb
leave
scas
push
jne
movsl
fidivrl
mov
push
lret
rolb
pop
emms
sub
mov
loopne
stc
sbb
inc
xlat
inc
out
and
inc
and
mov
cli
jo
mov
idivb
rol
mov
js
outsl
sbb
aaa
arpl
mov
inc
inc
imul
xor
clc
arpl
lds
adc
mov
outsl
test
scas
jns
pop
out
and
and
adc
pop
adc
cmc
add
mov
cmp
in
lock
mov
dec
arpl
xor
lahf
out
add
sbb
dec
xchg
cmp
push
imull
je
cltd
out
adc
xchg
mov
xor
inc
mov
lahf
mov
imul
or
ds
pop
icebp
sarb
mov
lods
test
das
xlat
sub
sub
inc
sahf
add
mov
cmc
xchg
cmpl
lcall
add
inc
and
and
jmp
std
filds
lods
jge
cmp
mov
clc
movsl
or
aaa
test
cmp
fwait
aad
and
dec
ss
lds
notb
push
int
mov
loopne
xor
xor
xchg
sbb
inc
pop
imul
cwtl
mov
jb
icebp
xor
mov
mov
add
sub
fsts
xor
je
into
rcrb
fwait
pmaxub
scas
aas
movsl
rolb
ja
mov
and
jge
mov
xchg
adc
xchg
sub
js
adc
fs
lea
out
push
jno
xchg
test
push
pop
nop
xchg
mov
cs
mov
or
pop
mov
sub
jmp
fiadds
lea
cmp
inc
out
or
sarl
cmp
in
ret
scas
xor
mov
dec
rep
sahf
dec
mov
les
fwait
jge
int
push
mov
icebp
xchg
cmpsb
add
lods
sub
sbb
xchg
std
ljmp
out
xor
pop
add
pmuludq
and
jno
sar
dec
data16
mov
add
jne
xchg
xchg
fwait
bound
add
xchg
mov
add
jne
push
or
cmp
cmp
outsb
sbb
ret
in
in
test
xchg
mov
loopne
loopne
in
jnp
jbe
xor
xchg
shll
sub
xlat
inc
mov
jle
clc
fldenv
xchg
inc
in
jns
xor
sbb
mov
push
orl
shrb
adc
lcall
sub
xchg
stos
popa
push
jl
cmc
stos
fldl
cmpsl
das
icebp
imul
pushf
mov
das
xor
fisubrs
dec
cmp
jb
add
or
cmc
in
pop
ja
sub
jp
sbb
sbb
cmp
xchg
dec
ja
pop
popf
mov
insl
sbb
in
lock
pop
dec
push
popa
push
loopne
bound
loop
pusha
jno
sarb
add
adc
mov
outsl
mov
dec
shr
xor
or
mov
pop
mov
fimull
sarl
ret
mov
xor
sub
cmc
imul
cld
test
mov
cmp
sbb
fistps
inc
push
mov
stos
movsl
push
inc
mov
stc
std
and
pop
sub
movsl
ljmp
mov
mov
sbb
hlt
cmpsb
repnz
out
dec
jecxz
icebp
loope
cmp
int
jae
mov
test
xchg
add
dec
jg
inc
adc
loope
rorb
and
in
std
es
add
xchg
cmp
popf
faddl
int
mov
or
dec
or
mov
cmc
add
loope
jb
mov
cmp
jae
cmpsb
sbb
and
mov
jmp
gs
mov
push
pop
mov
cmp
push
adc
adcb
inc
in
loope
insl
dec
add
mov
nop
dec
cltd
dec
cmpsl
mov
aam
pop
jecxz
jb
mov
mov
sub
in
nop
sbb
out
pop
loop
insl
jne
les
std
pop
dec
cmp
ficoms
in
lahf
inc
push
addr16
jbe
dec
loope
or
sti
repz
pop
int3
stc
jecxz
xchg
outsb
adc
mov
lods
jmp
jmp
sbb
stc
mull
inc
fsubrs
ret
xchg
mov
aad
rolb
push
dec
pushf
cmp
stc
adc
or
rorl
sti
dec
jp
cs
xor
push
and
xlat
pop
and
dec
jb
js
sub
or
rorl
dec
and
adc
test
das
jnp
icebp
lock
movsl
cltd
xchg
and
mov
mov
mov
sub
dec
shlb
hlt
xchg
or
jmp
gs
push
mov
iret
add
adc
cld
and
sbb
mov
rorb
sarb
nop
cmpb
dec
call
enter
test
mov
ds
repz
and
mov
mov
aad
inc
outsl
add
adc
ljmp
xor
nop
scas
rcr
aas
push
adc
push
inc
pop
mov
mov
lea
pushf
lret
in
xchg
jmp
punpckhwd
out
or
adc
in
fisubl
and
mov
stc
loop
cs
sbbb
jb
add
xlat
cmp
mov
pop
leave
sub
andl
sbb
fs
mov
imul
pop
rcll
and
and
repnz
aam
addb
push
fwait
or
test
dec
push
fnsave
dec
repz
ss
push
fbstp
push
dec
sti
pop
add
push
xchg
fsubl
aaa
pop
sbb
mov
add
xor
or
out
cmp
mov
mov
push
inc
xchg
mov
rcll
stos
add
in
cmpl
and
shrb
out
out
pushf
xor
push
and
sbb
and
xchg
sbb
pop
cmp
mov
es
lock
sbb
dec
xchg
in
xchg
out
clc
sbb
xor
mov
sub
xor
mov
outsl
movsb
inc
xor
adc
mov
or
inc
lods
mov
mov
repz
negl
xorb
iret
pop
jns
fidivrl
xchg
add
lret
sahf
mov
dec
jae
dec
out
fdivl
push
lcall
or
lds
ljmp
int
hlt
adc
xor
adc
dec
mov
and
pusha
inc
ljmp
inc
ss
dec
xchg
das
or
leave
cmp
daa
in
cmp
xor
sub
add
pop
xlat
mov
and
fcmovne
mov
and
sub
test
xor
in
jmp
gs
daa
bound
aaa
and
sub
mul
cmpsl
popf
mov
sahf
pusha
data16
cltd
pop
cmc
repnz
lods
pop
icebp
movsl
push
xchg
pop
cmp
push
in
or
insb
fstpl
cmp
jl
add
leave
les
fdivp
mov
jl
add
aad
xor
lods
and
cmp
mov
outsl
adcb
mov
pop
sbb
outsb
sub
imul
adc
inc
sbb
push
sbb
inc
sti
pop
mov
fadds
adcb
lret
js
pop
in
mov
shlb
mov
pop
and
dec
mov
loope
int
mov
or
dec
out
mov
xchg
into
icebp
leave
xchg
cmc
in
andb
lea
push
push
je
inc
jge
add
std
psraw
dec
mov
insl
ret
xchg
xor
mov
popa
pop
pop
into
jae
std
mov
sarb
mov
cmpsb
xchg
sub
insb
adc
adc
enter
imul
xchg
inc
pop
outsb
test
jle
mov
sbb
push
xor
and
or
gs
loope
xchg
dec
inc
add
xchg
jl
xchg
and
sub
mov
outsl
cmpsl
xorb
lods
inc
add
les
cmp
xor
cmp
repnz
inc
insb
addr16
lret
adc
in
cmp
scas
mov
loope
outsb
xor
sti
ret
add
add
mov
ja
loope
mov
jg
shrl
mov
js
xchg
mov
sbb
je
ljmp
xchg
push
add
test
gs
int3
sahf
xlat
fdivl
mov
jl
cmp
mov
ret
cmp
aam
mov
ret
jle
insb
dec
fbld
xchg
mov
mov
out
aad
fcoml
iret
lock
sub
pop
cmp
and
fisttpl
xor
jecxz
lods
mov
bound
mov
repnz
push
lods
lods
loope
pop
stos
repz
or
pop
jns
pop
and
mov
push
stos
or
popa
lcall
daa
test
adc
scas
mov
addb
les
js
xor
mov
das
stos
movsb
aad
push
adc
xchg
cli
and
in
or
add
int
and
lods
aas
popf
xchg
cmp
fistpl
and
cmpsl
push
mov
or
mov
mov
nop
pusha
clc
xchg
xchg
pop
mov
adc
cmpsb
mov
outsl
hlt
jno
mov
sarb
mov
lret
xor
imul
adc
or
daa
mov
dec
scas
jge
jb
xlat
mov
cmp
in
sub
xor
sub
daa
xorb
push
sbb
pop
inc
sub
dec
mov
sub
lcall
cmp
cmp
or
icebp
dec
jmp
xchg
xor
fiaddl
das
push
es
inc
in
negl
jno
aam
dec
or
inc
sti
mov
scas
movsb
pop
and
mov
jle
int
pop
shrb
cmp
icebp
pop
aaa
jmp
imul
test
enter
sbb
sub
jl
fidivs
pop
pop
add
arpl
movsl
xlat
je
xchg
xor
pop
push
cmp
mov
mov
test
fcoml
jns
pop
jle
sti
mov
pop
mov
loopne
mov
fisubs
pop
push
inc
lcall
and
mov
popf
inc
out
repnz
xor
movsb
les
and
mov
aaa
pusha
or
mov
mov
outsl
mov
je
jg
test
fimull
sbb
ljmp
and
popa
or
xchg
fisubrs
xor
imul
mov
pusha
mov
mov
cmc
andl
fldt
dec
es
in
mov
jo
addr16
rcrb
fsubrp
shlb
fcompl
jp
lahf
test
push
loopne
cld
jnp
dec
pushf
das
pop
inc
jmp
sbb
in
adc
ret
out
loop
and
dec
cwtl
sub
pop
in
pushf
cmp
scas
lods
stos
inc
or
std
in
imul
cmc
rclb
loop
adc
scas
sub
push
inc
lret
insb
fnsave
jae
shrl
mov
scas
and
mov
adc
pop
jnp
xchg
rcrl
bts
es
xor
gs
pop
jo
popa
pop
out
in
mov
les
ss
arpl
js
dec
loop
dec
rorl
gs
cli
mov
test
xchg
add
sbb
mov
repz
xchg
pop
stos
adc
push
xchg
repnz
stc
adc
stc
lahf
adc
pop
push
dec
mov
lret
mov
push
adc
fstps
cld
pop
push
rcll
nop
popa
mov
mov
insb
data16
cmc
cmp
pop
xor
mov
dec
add
dec
ret
adc
sub
push
push
lods
mov
aaa
jg
fucompp
das
stc
add
fcomp
jns
jae
mov
call
pop
mov
mov
lahf
repz
inc
dec
dec
leave
div
mov
or
and
dec
incb
mov
cmpsb
mov
leave
icebp
add
test
lods
pop
pop
adc
jle
jmp
ret
jg
outsb
xchg
stos
cli
inc
movsl
inc
insb
fdivrl
in
adc
jo
adc
aad
mov
inc
or
cld
mov
jge
cmp
mov
fcompl
insb
shlb
movsl
xchg
and
popf
cmp
popa
xchg
not
push
adcb
fs
jnp
pop
push
shll
pop
sbb
jge
test
xor
mov
popa
mov
and
sbb
pop
jmp
ds
cwtl
sbb
notb
clc
mov
pop
rorb
jno
jnp
decb
cmp
mov
dec
mov
add
loope
cmp
dec
fwait
sub
movsl
ljmp
mov
push
sbb
cwtl
sbb
movsb
aas
xor
nop
fwait
inc
and
enter
pop
sbb
xchg
and
movsl
mov
andb
popf
xor
repz
mov
jge
mov
and
icebp
push
sarb
sub
sbb
and
mov
push
mov
or
push
lret
push
cli
ds
mov
or
and
imul
adc
mov
mov
xor
pop
insb
mov
cmp
inc
xchg
cmp
jbe
jmp
pusha
cmpsl
arpl
std
sub
cli
ja
jne
iret
xchg
xor
repz
pop
inc
in
mov
test
rorb
fcmovnbe
adc
push
pusha
ljmp
sub
pop
imul
cli
cmpb
mov
pop
inc
xor
and
or
cli
mov
lock
mov
xor
ret
nop
jmp
jae
jns
mov
push
inc
cmp
call
lock
fmul
xlat
xor
test
push
cld
arpl
mov
and
jmp
pusha
in
orl
cmp
sti
push
jp
out
cmp
iret
std
lock
imul
insb
stos
inc
mov
test
pop
sub
popf
mov
pop
scas
fwait
mov
mov
push
imul
out
pop
mov
add
xchg
popf
js
sahf
or
cmp
and
out
pop
imul
sbb
fcmovnb
pop
bswap
and
leave
sub
sub
je
gs
lock
cmc
mov
jg
ds
popa
ret
rcl
lods
jae
in
lods
rcl
fnstcw
pop
aaa
cmp
mov
fs
sbb
clc
push
mov
out
aad
dec
pop
nop
bound
and
and
fnstcw
shll
popa
test
push
adc
mov
cmpl
into
cmpl
out
push
test
addl
lods
xchg
sti
xchg
hlt
jbe
or
lret
mov
js
xor
fsubs
xchg
xor
mov
jo
out
add
add
mov
mov
stc
inc
push
jmp
push
int
nop
jno
lea
movsl
insb
mov
nop
mov
jp
inc
sub
add
pop
inc
add
mov
or
add
popf
or
outsl
sbb
jo
mov
popa
mov
xor
cmp
sbb
mov
fsubs
and
cld
int
repnz
fdivl
and
iret
mov
mov
mov
in
nop
cwtl
pop
or
add
icebp
ja
test
popa
xor
in
into
stos
pop
negl
mov
test
lods
cmpsl
das
adc
and
add
bound
mov
aas
mov
int
aad
add
fiaddl
adc
pusha
icebp
push
add
dec
out
pop
push
lds
mov
loopne
out
les
outsb
push
pop
xor
int
mov
sbb
sbb
leave
js
pop
mov
fdivrl
mov
nop
leave
jnp
inc
sti
jg
add
jg
mov
popa
cmp
jne
xchg
icebp
xchg
xchg
jecxz
int3
dec
push
in
test
dec
imul
into
adc
movsl
push
xchg
insb
arpl
push
push
outsl
and
sbb
dec
leave
les
xor
nop
inc
pop
enter
int3
xor
fnstsw
int3
leave
xchg
mov
ss
pop
repnz
ret
es
ret
mov
sub
icebp
pushf
mov
push
xor
inc
les
sbb
inc
popa
add
pop
or
inc
adc
sbb
ret
cwtl
js
xchg
push
sbb
pop
dec
push
data16
enter
xchg
ficoml
jno
out
jne
out
cmp
push
test
add
adc
fs
lea
inc
add
jb
es
mov
pushf
imul
fsubs
mov
xor
stos
das
sub
jl
test
scas
inc
outsb
pop
sub
sub
popa
xchg
jbe
jns
xor
cs
cmp
sarb
inc
daa
out
push
mov
pop
stos
xor
sbb
popa
add
inc
sbb
sbb
iret
jbe
sbb
lret
sbb
jmp
stos
mov
sti
iret
pusha
into
adc
fldcw
shl
into
add
std
push
pop
mov
cmc
mov
movsl
jl
add
in
or
out
dec
dec
insb
xchg
xchg
mov
mov
dec
jnp
dec
lcall
call
push
inc
dec
dec
push
hlt
js
js
push
adc
das
movsb
xchg
inc
das
aam
cltd
xor
push
and
xor
mov
adc
pusha
test
jne
call
and
leave
dec
add
add
fsubrl
les
cmp
test
loope
mov
hlt
scas
push
daa
xchg
adc
lods
push
mov
xchg
lds
cmp
mov
cwtl
cmp
mov
adc
js
mov
icebp
ja
or
in
xchg
or
cltd
inc
imul
sub
inc
xchg
push
pop
or
aam
pushf
push
inc
inc
jmp
cmpsl
add
adc
out
mov
subl
nop
mov
mov
sbb
adc
fnstcw
inc
test
push
pop
add
repnz
jnp
jecxz
pop
xchg
dec
mov
mov
fisttpll
dec
jg
pop
icebp
xor
xor
lods
movsb
aas
or
shll
xchg
mov
loop
pop
out
ja
out
push
pusha
data16
and
push
push
movl
loop
aam
ret
xor
cmp
imul
mov
push
cmpsl
jbe
out
pop
mov
lret
lock
xchg
lds
mov
push
mov
insb
cli
jl
add
jp
add
or
pop
jo
inc
and
daa
fcmovne
jo
inc
loopne
or
imul
jecxz
sbb
cltd
hlt
call
mov
loop
push
mov
dec
dec
inc
xlat
mov
pop
fldcw
sahf
inc
repz
hlt
sub
sar
xchg
pop
ss
insl
jo
jge
pop
xchg
fnstsw
inc
mull
mov
inc
lods
mov
mov
int3
and
movb
mov
loop
cwtl
jg
inc
repz
aaa
jne
and
jecxz
xchg
fcomps
stos
addl
aas
jp
inc
das
cwtl
cmpsb
scas
jb
mov
fsubs
and
lcall
das
stos
rcrb
in
es
push
jne
pop
inc
push
mov
inc
movsb
fsubl
inc
jne
inc
movsb
sbb
cmc
and
aaa
ja
shrl
push
lahf
call
cmp
dec
call
xor
sti
jbe
cmpsb
add
add
inc
cmp
nop
sahf
push
push
push
cmp
dec
push
push
adcl
sub
xor
add
dec
push
ss
repnz
popf
or
sub
in
rclb
stos
das
xor
inc
repz
ret
pop
out
xchg
test
adc
out
popa
inc
inc
inc
iret
mov
pushf
rcrb
pop
fisttpll
jle
and
ja
fwait
jbe
insl
cmp
push
xorl
lahf
out
dec
mov
xchg
sbb
sbb
and
add
add
xor
das
int3
and
loopne
cmc
fiaddl
inc
sbb
in
and
inc
sbb
adc
je
addb
ljmp
mov
fwait
xor
roll
dec
or
bound
pop
iret
mov
rol
sahf
xor
push
sbb
stos
movb
add
ret
stos
adc
xchg
cwtl
es
stc
push
out
subps
dec
push
in
fmuls
ja
fwait
or
lret
adc
push
push
adc
loop
cmpsb
test
test
bound
jbe
cltd
imul
xlat
sub
test
mov
mov
aas
push
xchg
fsubl
enter
dec
adc
mov
popf
jge
sbb
pop
fs
jno
ss
push
cwtl
leave
pop
repnz
ja
in
adc
lods
mov
es
xchg
aaa
jne
mov
push
lea
inc
cli
stos
dec
aaa
cmc
leave
mov
test
push
ljmp
sbb
mov
xlat
ret
fldl
decl
lahf
lds
xlat
mov
sub
out
aad
ds
insl
add
movsl
fstl
pop
push
xor
xchg
aad
jno
push
shr
adc
xlat
and
xchg
push
or
adc
gs
outsb
add
imul
cmp
fidivs
pop
mov
lds
imul
xor
aas
sub
push
rcr
or
in
xor
mov
insl
pop
and
ss
pop
repnz
ja
outsb
push
cltd
add
jge
icebp
out
jns
push
push
lcall
pushf
fsts
push
ss
jno
cmp
pop
fdivrp
xor
imul
ret
clc
cli
mov
mov
push
push
fstpl
adc
lds
fldt
dec
adc
leave
in
lods
mov
jg
imul
adc
inc
xchg
pop
pop
push
int3
dec
jl
push
stc
mov
aam
fmul
fcmovnu
push
jecxz
xor
xor
xchg
test
cmc
mov
adc
pusha
fsubr
ds
cmpsb
xor
jns
jno
insb
call
pop
fimuls
push
mov
push
je
subps
sbb
aas
into
mov
mov
sub
pop
ret
test
jle
inc
xchg
stos
cmp
shll
aam
mov
and
movsb
mov
jmp
ss
pop
xchg
mov
sub
mov
jns
jge
lret
xor
clc
ret
js
xor
inc
lods
adc
lret
add
add
mov
in
sbb
mov
pusha
mov
jbe
comiss
movsl
shl
pop
xlat
pop
xor
jnp
jle
push
jno
add
in
jmp
cmp
pop
and
cs
out
mov
imul
in
fiadds
xor
mov
pushf
push
and
int
iret
imul
es
lahf
and
sub
int
add
cmc
sbb
mov
jmp
xchg
or
fnsave
xchg
push
ja
int3
cmp
decl
aad
push
hlt
push
pop
dec
outsl
and
out
pop
jnp
or
orb
xchg
sbb
add
push
icebp
xor
or
jns
testl
sbb
fsubl
pop
or
jp,pn
jno
insl
inc
insl
fists
bound
psubq
divb
push
int3
outsb
pop
xchg
loope
cmp
test
dec
sub
lcall
scas
test
cltd
out
jbe
dec
ret
cmc
push
lods
adcl
push
pop
out
or
mov
shlb
repz
and
push
jmp
gs
or
lahf
xchg
mov
inc
pop
dec
push
mov
daa
xor
inc
mov
adc
cmc
adc
sbb
sbb
cltd
decl
jle
fs
or
push
sbbl
sti
mov
xchg
aas
push
pop
xlat
out
jae
push
mov
jge
xchg
clc
mov
xor
lahf
xlat
dec
lcall
test
cmpsl
jae
and
push
movsl
inc
dec
ret
fidivl
mov
pop
ret
cmpsb
inc
ror
ljmp
xchg
int3
or
pop
movsb
add
add
sbbb
cli
test
xrelease
ret
add
sarb
ja
jo
pop
xlat
adc
cmp
daa
pop
and
iret
outsb
jecxz
mov
fs
xor
out
in
cli
mov
loopne
ret
inc
inc
jae
add
mov
push
rclb
mov
jge
jle
inc
mov
push
aaa
js
movsl
add
sahf
movsb
pusha
inc
fst
jmp
push
xor
lods
cmpsl
dec
push
je
aad
xor
and
lcall
int3
jns
cli
aaa
or
lods
das
ret
mov
loope
jnp
mov
and
addr16
ret
mov
xor
lret
pop
pusha
insb
insl
push
and
pop
dec
lods
pop
inc
js
idiv
mov
pop
aam
arpl
mov
imul
xchg
fldl
mov
mov
xchg
addr16
fildl
out
dec
xchg
mov
sbb
mov
in
inc
adc
dec
out
mov
dec
push
data16
inc
je
mov
push
repnz
mov
sbb
xchg
insl
xchg
add
out
dec
adc
pop
movsb
es
ljmp
push
lahf
arpl
push
xor
movsb
lret
movsb
xor
xchg
imul
dec
in
clc
jnp
les
push
rcl
aam
loopne
lahf
outsl
adc
adc
jno
inc
aam
mov
cmc
pop
inc
lods
sarb
push
lahf
js
sub
sub
js
popf
mov
jmp
dec
aaa
xor
out
inc
xor
pop
lds
mov
pop
pop
cmp
sub
testl
adc
and
mov
and
ljmp
ret
pop
mov
fimull
es
outsl
push
icebp
adc
ret
icebp
jns
lcall
imul
pop
leave
cmp
push
enter
or
mov
cmpsb
js
bound
js
pop
lock
mov
data16
fwait
in
jmp
xchg
clc
xor
add
xor
lock
or
icebp
pop
xchg
iret
pop
mov
sbb
clc
jae
jmp
or
inc
inc
cmp
jmp
pop
mov
outsb
out
loope
jmp
ss
dec
lods
jb
hlt
data16
stos
dec
cld
pushaw
call
inc
add
es
scas
mov
popf
test
add
js
ss
inc
adc
pop
jbe
dec
movsl
scas
sbb
stc
mov
lea
mov
int
dec
sub
adc
mov
sub
call
out
jae
lds
in
mov
or
mov
imul
cmp
adc
add
xor
push
out
outsb
outsl
aas
jmp
ret
add
add
xchg
jne
or
dec
mov
push
ret
orb
cmp
jnp
pusha
roll
pushf
imul
jge
push
pushf
sbb
lods
jno
lret
rcr
mov
lods
push
fnstsw
push
popa
inc
sbb
xor
fstl
cltd
sbb
dec
inc
mov
sbb
std
lahf
lods
fisttpll
jbe
fidivl
addr16
and
imulb
xor
pop
xchg
out
adcl
push
insb
into
mov
jns
incb
ds
or
mov
aaa
iret
cli
pop
xor
push
xlat
or
mov
jb
hlt
inc
mov
mov
test
lret
sbb
jp
sbb
fisttps
pop
xchg
daa
fwait
pushf
inc
lock
stos
leavew
sbb
movsb
test
bnd
cmp
xor
cmp
lret
sbb
out
inc
sub
cltd
mov
jge
and
sahf
ficomps
pop
daa
movsl
sub
dec
cld
sbb
cmp
sub
faddl
mov
push
pushf
cli
mov
push
add
push
or
stc
sbb
pop
lock
std
or
test
mov
pop
xchg
icebp
in
pop
inc
mov
testl
popa
fisubrl
or
daa
aaa
push
xchg
sub
jge
movsb
scas
xor
dec
daa
icebp
cmpsl
mov
insb
inc
push
add
out
and
cmp
sahf
ja
movsl
cmp
outsb
inc
sub
adcl
inc
shll
xor
cld
mov
push
je
stos
pop
sub
jbe
js
hlt
outsl
xchg
lret
test
lret
mov
cld
and
pop
jmp
inc
sbb
hlt
sub
cmp
sub
push
clc
stos
insl
pop
ja
gs
popa
rcrb
mov
repz
inc
into
rol
cmpsb
cli
mov
xchg
sbb
aam
mov
xor
je
xor
mov
fldl
scas
decl
addr16
mov
xor
clc
test
adc
arpl
cwtl
pusha
into
xor
sbb
xor
es
dec
cli
ds
shr
adc
test
mov
push
fsubs
insb
and
shr
mov
aaa
popa
bound
mov
popf
nop
cmp
xchg
insb
sbb
stos
orb
jne
les
div
sbb
or
cmpsl
or
aam
shr
test
add
jp
jno
push
iret
dec
add
sub
sbb
or
sti
inc
scas
inc
stos
repz
pop
pop
mov
outsb
sub
dec
jne
push
sarb
cmp
pop
xchg
stos
dec
shl
cwtl
out
add
mov
push
jne
mov
popl
stos
lds
cmp
and
aad
test
dec
iret
xlat
aad
xor
lret
movsl
je
scas
lret
in
and
fucomi
lods
jno
xlat
scas
jecxz
xchg
mov
inc
je
aas
xchg
lret
shr
setne
push
mov
or
push
std
sbb
js
out
sub
mov
xchg
jbe
push
cmp
movsl
inc
push
sbb
jbe
pmuludq
addl
int
cwtl
loop
loop
iret
add
inc
sbb
inc
mov
or
and
rcll
sbb
lods
add
ret
pop
in
xchg
stos
imul
sar
mov
es
js
int
xchg
int
mov
sub
xor
loope
cmpsl
stc
fcoms
adc
test
cmc
stos
inc
adc
dec
jnp
push
dec
stc
inc
lret
cmp
gs
push
cmp
jbe
pop
mov
sub
ds
pop
and
in
push
movsl
or
mov
adc
inc
scas
sbb
adc
pop
repz
in
or
add
adc
ftst
add
mov
lret
mov
mov
mov
stc
js
js
lds
insb
mov
pop
push
dec
dec
inc
std
mov
imul
jl
push
dec
mov
repnz
and
out
inc
adc
jno
cld
mov
mov
scas
add
ret
das
jl
add
dec
and
mov
imul
mov
das
icebp
cs
in
inc
dec
fwait
adc
cmc
sbb
inc
cltd
sbb
int3
mov
cmp
mov
adc
pushf
shrb
mov
cmp
or
aaa
inc
mov
mov
jmp
repz
cltd
mov
rorb
sub
xor
rcll
jl
adc
out
arpl
stos
cmpb
cmp
jns
sub
dec
push
popf
pop
pop
cmpsb
inc
and
jb
xor
jo
notl
inc
loop
cmp
mov
rorl
insb
xorb
xchg
jno
bound
pop
lods
cwtl
arpl
mov
insb
xchg
sbb
mov
pop
mov
int3
mov
push
insl
jp
pop
dec
fstl
repnz
es
lahf
movd
mov
push
push
adc
dec
movsb
rclb
ret
lods
and
pop
cmp
addr16
addr16
push
fwait
pop
popf
sbb
ds
mov
xchg
cmp
jle
push
icebp
mov
lea
jge
movb
ds
sbb
sbb
in
outsl
hlt
scas
test
adc
iret
pop
shr
test
push
mov
or
addl
addr16
pusha
ret
inc
mov
call
adc
sbb
mov
xchg
ja
jecxz
in
sbb
pop
pop
lahf
push
mov
xchg
mov
add
cld
stos
sub
repz
flds
repz
mov
xor
hlt
add
mov
dec
sbb
popa
lds
mov
push
adc
pop
or
shl
arpl
or
jp,pn
iret
jg
pop
les
cmp
sub
hlt
je
mov
xor
push
push
xor
push
inc
and
push
pop
mov
xor
jp
push
push
xchg
test
or
adc
xchg
xchg
loopne
xor
add
orl
mov
push
call
xor
mov
es
dec
lret
sub
inc
inc
or
stos
adc
stc
adcl
and
mov
xchg
adc
aad
jo
sti
aaa
xorl
shl
push
scas
push
xchg
inc
mov
movsb
jo
outsb
mov
jbe
adc
cmp
inc
les
push
mov
std
in
dec
sub
pop
pop
loop
movsb
cmp
test
jns
inc
test
push
shl
cmpsb
xor
and
mov
cmpb
or
in
addr16
lret
xchg
sbb
add
cmp
outsl
movsb
cmpsl
movl
aam
out
in
push
add
jne
pop
ret
mov
bound
push
mov
add
adc
push
push
sub
aas
fldt
xor
divl
and
clc
das
sti
push
adc
jp
add
push
pop
inc
in
stc
sbb
subb
mov
lods
std
lea
fcoml
cmp
lahf
pop
in
inc
jle
lret
or
movsl
das
lcall
xor
fldenv
jge
das
jecxz
inc
aam
shl
out
xchg
fmull
mov
test
dec
test
and
mov
scas
pusha
hlt
aaa
pop
xor
push
je
mov
pushf
jns
or
sub
cmp
or
pop
mov
jo
push
xor
aas
sbb
mov
test
shrb
and
push
inc
mov
mov
sbb
cmp
xchg
adc
inc
icebp
std
mov
insl
into
mov
pop
cmpsl
subb
mov
lcall
mov
adcl
add
loope
cmpl
xchg
mov
stc
add
jnp
cmpsb
repnz
sub
lods
jno
mov
fwait
jb
mov
out
cwtl
js
sub
xchg
cli
jnp
push
lds
and
sub
jno
outsb
dec
pop
daa
rolb
stos
cld
lds
aas
popa
cmp
popl
mov
push
lds
cld
adc
xchg
mov
fmuls
cmp
add
dec
js
add
push
xchg
aas
cli
icebp
mov
cltd
sbb
aad
mov
popa
sub
pop
sbb
push
sbb
cmpsb
sbb
push
or
or
xlat
movb
int
test
mov
ficomps
cmpsb
lea
jnp
mulb
data16
popa
pop
xchg
or
int3
pop
inc
sub
xchg
inc
sub
mov
pop
ds
or
cmp
and
out
in
sar
mov
dec
aaa
jo
dec
push
loopne
repnz
pop
insb
cmp
and
insb
aas
jno
cmpsb
or
push
jns
js
call
pop
stos
adc
sub
or
xchg
iret
and
daa
jmp
stos
xchg
test
adc
or
jge
in
push
mov
into
test
popa
es
mov
sub
inc
push
sbbb
push
jno
lcall
cmp
fsubp
rcrl
sub
inc
imul
and
repz
mov
imul
push
xchg
sub
loopne
sub
add
out
addps
sub
sbbl
cmpsl
sub
scas
js
or
xor
jle
leave
jae
push
sbb
std
pop
imul
scas
imull
inc
mov
fisttpll
jo
insb
mov
clc
inc
pusha
mov
adc
aad
movsl
sbb
lcall
push
mov
imul
lcall
xchg
dec
out
and
pusha
dec
lea
cmp
mov
mov
mov
rolb
mov
dec
dec
inc
shlb
popw
and
and
push
or
out
outsl
shll
lcall
push
and
sub
fnstcw
mov
sub
repz
mov
hlt
sbb
and
jae
je
push
les
sbb
mov
sahf
push
dec
fldcw
jo
lods
jg
loop
leave
test
pop
stc
call
std
jmp
testb
scas
pop
loope
cmp
mov
adc
and
pop
icebp
mov
cmpsb
fmulp
sub
jmp
test
xchg
mov
testb
and
adc
dec
ss
xor
popa
add
and
daa
cmp
bound
sub
mov
ss
imul
mov
jnp
roll
rcrl
popa
jle
mul
push
jecxz
sahf
lods
dec
pop
dec
push
pop
cli
adc
mov
nop
je
xor
call
jbe
cmpsl
jb
dec
pushf
aad
push
cmpsl
push
inc
xchg
enter
and
jo
lock
dec
xchg
jecxz
scas
das
or
push
add
imul
add
adc
outsb
xchg
xorl
xchg
arpl
cmc
ds
ret
pop
cmp
stos
call
in
adc
pop
jo
mov
sahf
add
popf
jb
or
sarl
push
pop
popf
sti
inc
cmp
pop
clc
cltd
push
scas
xor
scas
jp
xor
pop
xlat
in
or
xchg
lock
test
fdivs
rcl
ljmp
filds
clc
or
sbb
lods
lea
push
paddusb
jbe
cld
ljmp
out
jge
in
rorl
std
jg
cli
cmpb
pop
cmp
mov
dec
fldenv
pop
int
jecxz
lcall
lock
sbb
sub
jle
hlt
in
outsb
scas
shl
cmp
in
lret
scas
and
mov
xchg
jb
scas
popa
push
int3
js
push
mov
ljmp
fdivrl
dec
imul
adc
xorl
jmp
pop
test
stc
mov
sub
lock
inc
cld
add
or
xor
bound
js
in
je
lret
mov
ss
jmp
mov
out
dec
loopne
or
push
ja,pt
cmp
pop
lret
int
in
fdiv
in
out
insl
and
aaa
out
pop
mov
ret
scas
leave
mov
imul
in
fdivr
mov
push
fsubs
xchg
js
mov
xchg
adc
sbb
stos
cmp
mov
ljmp
or
mov
out
in
stc
jo
sbb
push
aam
push
stos
xorl
sbb
fisubs
popa
jnp
and
push
xchg
repz
sub
cmp
into
insl
addl
jmp
push
mov
xor
fists
pop
push
daa
add
fisubrs
pop
pushf
pop
push
inc
in
aaa
out
inc
sub
add
test
add
push
inc
xchg
aaa
ficomps
lret
hlt
push
jle
popf
aas
and
imul
int3
xlat
sbb
pusha
add
int
mov
popa
repnz
mov
xor
cmc
add
ficoml
and
push
jbe
ficoms
stc
int3
cwtl
pop
scas
in
ficoml
cmpsb
dec
ljmp
xchg
popa
in
and
dec
movsb
popf
mov
fildll
add
dec
fsts
ja
or
jge
push
sub
fwait
imull
or
test
ret
push
cmp
movsl
ret
lcall
dec
ss
inc
mov
push
sbb
or
arpl
aam
jle
jp
jp
xlat
xor
cmc
ja
gs
xor
push
or
ljmp
pop
lock
xchg
int
aad
dec
push
and
rol
js
pop
sbb
add
jb
sbb
out
jp
xor
nop
fs
jae
fs
inc
jle
dec
in
mov
outsb
icebp
shlb
push
lcall
ret
in
lea
cwtl
push
nop
les
pop
scas
pop
rol
xor
sbb
outsl
push
mov
je
and
sub
cld
sub
xchg
adc
mov
div
mov
dec
inc
mov
subb
add
mov
or
lods
clc
popa
scas
fs
mov
push
sub
das
mov
cltd
jecxz
mov
and
cs
sub
jle
cltd
je
inc
push
stos
mov
push
cmpb
sub
add
enter
cmp
push
xor
mov
and
out
mov
stos
adc
movsb
scas
add
pop
add
inc
test
popf
lods
pop
cs
push
repz
dec
cmp
jecxz
cs
mov
inc
mov
adc
mov
sahf
mov
aam
mov
push
int3
imul
stos
mov
push
ds
sti
in
daa
xchg
xchg
mov
jle
cld
xchg
repz
ss
test
add
push
add
and
mov
lahf
inc
negl
negl
insl
frstor
rcll
arpl
mov
xchg
cmp
in
insl
or
dec
int3
insl
jne
jl
sub
pop
bound
in
es
jg
mov
daa
repz
popf
pop
mov
insb
sub
jbe
ds
fstpl
push
xchg
push
loopne
pop
scas
lock
jecxz
js
push
inc
std
lcall
mov
sub
mov
inc
push
ljmp
adc
mov
sahf
int
xchg
test
lret
pop
add
fmull
sub
rcrb
and
cmp
and
mov
inc
and
arpl
scas
lcall
mov
mov
mov
xlat
adc
imul
sarl
sbb
div
or
popf
insb
push
and
sbb
mull
les
test
call
jmp
jp
xchg
sar
mov
stos
or
sub
add
test
jp
xor
sub
push
jecxz
inc
mov
insb
cmp
pusha
ds
mov
aas
lea
frstor
pop
sub
stc
mov
push
scas
dec
icebp
xor
test
sub
mov
ds
and
ret
ret
packsswb
andl
inc
dec
xor
leave
adc
repnz
lds
add
xchg
sub
addr16
pop
xor
mov
dec
and
addb
and
cmp
lea
mov
ret
or
cld
mov
sub
and
jae
scas
jb
mov
push
cmp
or
mov
jg
jb
sub
adc
fidivrs
sbb
loope
test
outsl
movsb
add
iret
iret
jmp
mov
inc
icebp
test
int
jmp
rolb
pop
ss
repz
mov
inc
push
fistps
shrb
dec
push
lret
jne
outsb
xor
jne
mov
movb
xchg
push
popl
outsb
cltd
out
or
mov
jo
push
pusha
push
mov
mov
and
push
es
in
sti
or
shll
push
hlt
and
int3
pusha
repnz
push
insb
sbb
outsl
test
or
dec
rorl
mov
pop
inc
pop
xchg
dec
mov
popa
gs
cmp
jbe
adc
mov
push
fisubrs
push
and
stos
rcrb
sub
xchg
lcall
ds
ljmp
and
cwtl
sbb
bound
outsl
push
add
inc
imul
shll
dec
add
pop
ret
outsb
mov
sahf
aad
push
dec
sub
mov
cmp
mov
mov
jmp
in
mov
cmpb
lret
lock
jg
ss
xor
aad
mov
fildl
andb
fsubrl
inc
data16
ficoml
mov
test
pop
iret
fistpl
jl
jmp
fidivs
mov
xchg
jmp
in
pop
fcmovne
jg
movb
in
add
xchg
push
xor
dec
push
adc
test
fldt
mov
dec
or
sbb
icebp
mov
pop
mov
inc
sahf
das
mov
popf
adc
test
or
je
fimuls
stc
sbb
js
push
xor
cwtl
lahf
mov
cmp
lcall
mov
mov
js
jno
jg
xchg
mov
test
or
mov
and
inc
dec
pop
jmp
xchg
push
roll
fs
jge
ja
lea
add
movsb
dec
fadds
sub
popf
les
mov
scas
add
xchg
jecxz
out
movsl
sbb
dec
xor
dec
mov
lods
or
fbld
mov
xor
xchg
adc
push
cmpsb
std
daa
cs
int
in
aad
xor
dec
test
daa
sahf
pusha
addr16
sti
and
add
jns
fcoms
call
clc
stos
inc
sub
jb
lods
imul
jno
imul
pop
loopne
push
in
inc
pop
mov
sub
cwtl
push
into
cmc
cli
cmp
push
and
mov
mov
sub
ljmp
mov
push
sbb
xchg
lahf
mov
jle
or
pushf
or
adc
mov
jb
outsl
outsl
and
outsl
roll
xor
je
jg
daa
mov
push
jl
test
sub
repz
lret
xchg
sbb
sete
cltd
xchg
sub
dec
sets
mov
pop
cmp
add
inc
popa
popf
test
adc
sbb
icebp
ds
push
daa
push
cmpsb
or
loope,pn
data16
sbb
push
jae
mov
cli
xchg
movsb
push
lea
sbb
cmp
mov
and
test
movsl
lock
xchg
out
add
cltd
pop
sbb
push
mov
lea
pop
and
in
data16
repnz
lret
testl
add
add
jg
cld
fistl
inc
lret
or
daa
lcall
push
out
jecxz
and
ljmp
push
lret
jo
xchg
add
cmp
push
pop
ret
cmp
scas
pop
add
test
mov
fs
dec
es
daa
lods
mov
aaa
icebp
mov
xor
inc
xchg
sub
adc
stos
leave
adc
xchg
push
shll
es
pcmpgtd
lret
cmpsl
mulb
inc
add
cli
call
idivl
mov
push
test
hlt
mov
mov
or
int
jno
loope
jmp
clc
mov
lret
pusha
sbb
je
imull
push
push
xchg
xor
ror
repnz
adc
sbb
stos
add
imul
mov
jle
aaa
add
add
lcall
jo
xchg
cmp
push
or
ss
test
es
adc
push
sbb
xchg
lret
jns
sub
iret
nop
test
add
or
xor
ret
test
rcrb
inc
mov
jo
xchg
adc
scas
aad
mov
jg
push
sub
mov
push
mov
hlt
sbb
ffreep
fldl
xchg
adc
add
mov
mov
jne
add
cmp
add
mov
dec
sbb
pop
hlt
pushf
jp
jecxz
les
push
call
push
jmp
fwait
pop
dec
adc
rcrb
inc
or
ja
sub
stc
jne
mov
inc
rolb
xor
test
mov
add
inc
test
sbb
push
inc
dec
fwait
aad
jno
mov
in
sub
mov
subl
mov
xor
xor
sbb
xlat
sub
sbb
or
clc
pusha
pop
stos
hlt
fidivrs
outsl
ljmp
repz
lods
lds
mov
dec
out
lret
jns
adc
add
mov
cmp
lea
add
mov
in
mov
scas
xor
push
test
je
add
jg
pop
out
mov
cmp
xlat
mov
popf
scas
lods
out
loope
jp
jmp
fscale
test
jge
out
mov
push
orb
daa
ljmp
sbb
das
push
mov
mov
sbb
xchg
sti
hlt
cli
rorl
sub
adc
call
cmp
iret
cmp
std
insb
jns
sti
icebp
fsubl
out
mov
push
repz
and
adc
and
mov
emms
loop
xchg
insb
mov
push
cmc
jle
cltd
cmp
cltd
xor
movsl
inc
dec
cmp
paddw
mov
fsubrs
js
cwtl
xor
cmpsb
mov
out
repz
stc
ja
mov
cmc
sub
pop
fisttpll
stos
sub
add
xchg
lret
jge
repz
int3
sbbl
sub
inc
xlat
xor
add
cmc
bound
lods
aaa
mov
std
repnz
scas
test
push
xor
xchg
sbbb
sbb
loope
adc
jnp
add
es
xor
mov
ss
das
ret
push
sbb
and
inc
call
imul
mov
rclb
lcall
popa
inc
pop
sbb
jge
loop
sbbl
sub
or
loopne
daa
push
loopne
stos
mov
sub
cmp
sarl
pop
mov
xchg
and
call
inc
test
shrb
fsubr
pop
add
insl
pop
fwait
aad
repz
rcrb
dec
outsb
xchg
dec
and
pop
add
fwait
jnp
dec
dec
lods
dec
ret
cmp
xor
xchg
sub
imul
sub
mov
outsb
shll
stos
jno
lcall
icebp
out
mov
dec
adc
cmp
stos
aad
dec
cld
stc
cmc
or
jmp
xchg
lds
es
add
faddl
add
mov
sub
push
testb
mov
mov
popf
in
aam
test
mov
dec
inc
pusha
cmp
adc
cmp
push
das
sub
push
in
js
dec
mov
push
cld
sbb
mov
fcompl
shl
ret
movsb
adc
push
jge
loope
repz
xchg
rclb
and
mov
loope
sbb
lahf
mov
dec
add
jno
inc
mov
mov
pop
adc
addr16
xlat
sub
dec
add
jb
test
xchg
and
flds
loop
int
loope
incl
pop
into
inc
sahf
fsubr
in
dec
ja
shr
shll
xor
data16
arpl
arpl
xchg
cwtl
jge
inc
test
or
testl
flds
mov
xchg
addr16
js
or
movsl
aas
aaa
mov
out
push
adc
and
adc
fdivs
sub
fisubrs
jg
sbb
bound
fcoml
pop
mov
lock
aaa
mov
add
or
fstl
ja
sbb
in
in
cmp
lock
subl
dec
or
fcompl
adc
cmp
mov
cld
sbb
sbb
fdivrs
imul
or
fstpl
mov
mov
push
mov
xlat
inc
out
jb
jb
push
pushf
xor
iret
repz
mov
pop
pop
pop
sbb
pop
cltd
dec
adc
pop
cwtl
int3
mov
push
in
and
rorl
out
or
xlat
dec
jns
pop
fwait
jnp
lret
xor
movsl
adc
in
adc
sbb
and
repnz
sub
daa
shrb
mov
and
push
mov
int3
xorl
dec
mov
push
es
loop
jle
pop
mov
rorb
fdivrl
jl
leave
and
shrb
testb
nopl
bnd
lods
inc
jp
sbbl
ss
aas
add
xchg
jg
loopne
jo
das
add
inc
xor
jecxz
lock
dec
in
mov
mov
xor
cmp
fst
xor
jmp
psllw
cmp
out
lret
push
scas
xchg
or
lret
push
add
fistpll
ret
cmp
arpl
mov
inc
lahf
dec
cld
iret
pop
test
sub
clc
testb
or
test
xor
icebp
dec
mov
inc
lcall
push
fwait
out
mov
mov
xchg
lods
daa
outsl
sti
mov
sub
out
movups
or
jp
subb
lods
shr
mov
mov
mov
fdivrl
imul
add
std
add
dec
sub
out
inc
aad
jns
aaa
daa
das
leave
adc
stc
lcall
add
push
out
jmp
push
iret
lahf
sti
mov
out
adc
stos
sbb
and
test
sbb
xor
fsts
add
insb
sub
fistl
fsincos
pop
addb
cmp
es
int
in
pop
cmc
js
imul
or
or
dec
hlt
jp
fsubrp
mov
pop
push
sub
int3
mov
push
ret
cmpsl
mulb
jmp
pop
sub
push
imul
push
or
aas
xchg
imul
sub
lods
nop
sub
js
fbld
into
sub
mov
lret
andl
dec
insb
in
add
adc
mov
sub
mov
dec
ja
fdiv
enter
loope
pop
arpl
pop
push
mov
sbb
pop
enter
jle
or
push
dec
rcll
xchg
aas
xchg
mov
andl
xchg
and
jecxz
inc
fimuls
shlb
mov
sti
push
fadds
loopne
pop
jnp
ss
inc
pop
jo
adc
mov
push
and
nop
mov
je
out
mov
test
test
jge
mov
and
pop
sbb
push
xor
lahf
jb
mov
add
pop
enter
xchg
dec
inc
push
cli
loope
rorl
ljmp
jl
les
jae
clc
and
or
pusha
shrb
cld
out
push
dec
jge
test
in
lcall
jp
out
lods
js
lods
mov
jl
ds
mov
mov
cli
imul
jl
add
push
pop
xor
call
aam
mov
cli
push
jmp
inc
or
mov
loope
push
idivl
es
sbb
jnp
out
cmp
mov
es
jae
xor
push
pop
out
sbb
inc
add
out
push
pop
adc
mov
fdivs
mov
std
cwtl
xchg
lret
push
adcl
pop
les
xor
xor
rclb
mov
gs
xor
cli
pop
sahf
inc
aas
pop
add
hlt
mov
sub
addr16
jle
jns
icebp
fdivrs
fstpt
cmp
lahf
sub
pop
insl
pop
insb
push
stos
push
mov
pusha
sub
daa
mov
lock
adc
fldl
cmc
push
dec
mov
and
adc
xchg
cld
xor
mov
push
jnp
xchg
push
in
mov
pop
out
jl
jns
notl
mov
sbb
ret
fcmovu
mov
and
or
cmp
int
pop
cmp
aaa
adc
mov
js
xorb
andl
xchg
ljmp
pop
test
loope
lods
icebp
mov
mov
jae
sbb
and
popa
dec
les
sub
mov
adc
cmp
xchg
mov
dec
cmpsb
push
outsl
dec
mov
fsubr
fs
xchg
cmpsb
mov
test
clc
jge
pop
repnz
sbb
pop
pop
fldenv
jle
mov
pop
jo
lea
adc
dec
sub
movsb
sub
xchg
mov
repnz
cmp
sub
pop
fwait
pop
mov
mov
ljmp
sbb
sarb
and
cmp
add
adc
fistl
aam
imul
popf
mov
fidivs
dec
je
rcll
lcall
mov
jp
adc
outsb
ds
insb
das
pushf
sub
or
popa
enter
lds
lods
mov
pop
imul
cmpsb
dec
lods
sub
sub
imull
xchg
scas
adc
je
hlt
sub
adc
adc
dec
mov
cwtl
orb
adc
pop
dec
test
xor
jp
inc
push
mov
cmc
mov
or
pop
jo
cmp
pusha
sbb
jge
or
cmpsl
fadds
jmp
mov
dec
jle
sub
jo
clc
rolb
add
test
jne
cmpsb
inc
pushf
test
sbb
pusha
lahf
stos
loope
xor
aam
push
add
push
lret
lea
jb
add
jg
aaa
add
lds
mov
cltd
mov
pop
and
lods
subl
jo
xchg
xchg
test
imul
xor
enter
mov
movsb
jno
mov
sarb
mov
xchg
and
xor
fisubrs
mov
in
mov
mov
jmp
mov
jl
cmp
dec
cld
add
and
fwait
lret
enter
pop
in
and
repz
mov
mov
xor
scas
inc
inc
lods
imul
and
aaa
mov
adcb
mov
ljmp
inc
sahf
std
push
xlat
test
daa
imul
mov
loop
jg
xchg
addr16
push
push
adc
push
xor
xor
test
lahf
stos
push
jo
ret
pusha
and
pop
mov
adc
adc
add
lahf
lea
mov
sahf
lds
rcrl
fwait
jp
lahf
pop
outsb
call
lea
js
jb
pop
or
mov
das
mov
pop
sbb
fs
repz
jp
popf
and
lcall
lds
jbe
adc
scas
cmp
lods
xorb
pop
xor
add
es
push
pop
push
mov
in
out
push
add
scas
xor
xor
xlat
or
test
ljmp
aad
xchg
fistps
xchg
sub
inc
mov
les
popa
cmp
mov
lods
stos
xchg
sub
dec
rclb
xor
or
xchg
jbe
mov
cmpsb
dec
aam
aam
rcll
jl
pop
ret
sbb
sub
shll
sbb
dec
jnp
imul
sub
imul
std
mov
lahf
pop
xlat
pop
cltd
sub
add
imul
pop
sbb
sub
popf
cltd
aam
mov
add
outsl
jl
daa
add
jno
in
mov
pushf
iret
mov
mov
inc
lods
xchg
push
jge
and
jb,pn
ds
int
outsl
jbe
ljmp
repz
shll
and
insb
repz
cmp
inc
js
sbb
xor
mov
jne
adcb
outsl
insl
loop
clc
pop
or
cmp
fldl
mov
xor
daa
push
fsts
pop
push
xor
pop
jb
fcomps
lcall
or
cmpsb
xchg
outsl
scas
cmp
addr16
sub
cmc
xchg
add
icebp
pop
je
xor
aaa
cli
mov
es
jne
lds
int
cmp
enter
jns
push
mov
xchg
jae
lods
lret
repz
jmp
push
push
adc
xchg
int3
in
sbb
xor
sub
cli
xchg
mov
or
sub
dec
into
ret
cs
xchg
jbe
push
or
clc
dec
test
les
test
pop
call
ret
inc
popf
rcrl
ljmp
dec
xchg
rcll
insl
adc
pop
adc
sti
jl
subb
mov
add
or
add
or
js
push
repz
cmp
dec
xor
leave
pop
mov
repnz
cld
push
lahf
aaa
jl
and
push
and
sub
pop
or
jl
xchg
mov
shr
xor
mov
divl
or
inc
add
adc
es
dec
adc
xchg
push
movsl
int3
lea
das
mov
movsb
mov
inc
test
imul
or
lcall
clc
mov
mov
lret
add
push
insb
jnp
push
sbb
xor
mov
inc
test
xor
jo
js
sarb
pop
lds
sbb
push
fbstp
lret
pop
add
sbb
es
mov
imul
jge
dec
test
faddl
dec
leave
jmp
in
sti
ret
dec
cmp
mov
aas
orb
in
xchg
push
or
jnp
aad
mov
adc
jo
shl
or
and
ss
xchg
cmp
add
es
ja
dec
xchg
hlt
pop
outsl
repnz
pop
outsb
sub
xor
push
sarl
fldl
and
aaa
fs
jp
daa
inc
pushf
jecxz
daa
xchg
test
test
fiadds
xchg
lea
mov
fsub
lcall
xchg
aas
inc
jb
push
cmp
xor
sub
dec
and
imul
xchg
cltd
push
cmp
sub
cwtl
mov
addr16
xor
push
add
mov
gs
xor
lods
dec
adc
mov
nop
aaa
inc
jmp
sub
es
fcomi
jbe
rclb
es
jae
cmp
xchg
mov
test
push
or
push
pop
jle
cmc
sub
jns
jne
cmp
push
xchg
dec
fnstcw
sbb
mov
rcrb
and
cli
xchg
sub
push
mov
roll
pop
nop
jne
roll
scas
inc
cltd
leave
imul
shlb
push
outsl
and
jl
sbb
push
sar
in
pop
mov
lahf
mov
sub
pop
mov
dec
aas
mov
add
mov
int
sbb
jp
mov
jno
lea
dec
mov
mov
lds
std
fdivrs
addr16
sbb
js
add
fisttps
add
int
adc
jecxz
out
cltd
mov
and
mov
rcrl
les
pop
push
lods
push
inc
mov
cmc
aad
sbb
test
mov
jbe
aam
fmuls
fnsave
add
je
rcrb
jg
mov
dec
sub
push
ret
sbb
arpl
popa
push
rcll
cmpl
and
sbb
mov
dec
repnz
dec
ljmp
jne
std
or
push
jne
test
inc
fstp
scas
pop
xchg
adc
test
aas
imulb
into
xor
insb
ret
stos
sbb
repz
push
lea
xchg
xchg
push
cmp
or
subb
test
les
cmpsl
push
fists
fldt
jecxz
ljmp
insb
popa
repnz
clc
adc
sub
lods
xchg
mov
popf
test
loope
add
push
jno
movsb
loope
sbb
pop
movb
out
loope
sbb
loopne
xchg
int
ja
cwtl
inc
std
add
lds
mov
sub
inc
cmp
dec
xor
popf
rorb
adc
insl
adc
jo
jo
cmp
sub
ja
cmp
sub
xor
jb
xor
dec
test
aam
call
das
pop
xor
cmp
mov
shll
or
aas
sahf
rcrb
loopne
mov
xchg
scas
in
lcall
or
xor
sti
sub
add
lods
ret
jl
mov
xorb
pop
and
lcall
cmp
sbb
jns
fiadds
fildll
cmp
or
stos
je
push
movsl
shll
fistpll
jl
popa
into
mov
negl
shll
fnstcw
test
popa
sub
das
push
loope
mov
insb
ret
mov
inc
and
repz
pop
das
imul
pop
push
jmp
aad
call
dec
lods
cltd
incb
lds
push
sbb
xor
into
insb
and
and
arpl
stc
scas
push
lds
and
pop
or
cmc
cmc
pop
stos
mov
and
test
pop
jb
or
add
stos
xor
push
pushf
cmpsb
xor
pop
call
rorb
ja
pop
add
mov
in
stos
mov
xchg
mov
adc
mov
dec
and
ret
div
jp
xchg
sbb
pusha
jg
fdiv
cli
xchg
mov
fadds
imul
mov
push
int3
xchg
cwtl
test
pop
jmp
pop
push
loopne
jae
addr16
cwtl
adc
jge
and
mov
adc
inc
fldcw
xchg
imul
add
mov
imul
add
or
mov
dec
jbe
mov
inc
cli
lods
dec
out
adc
mov
movsb
int3
addr16
push
divl
and
fldcw
imul
push
in
loope
sbb
rcll
cld
popa
or
pop
dec
sbb
cmp
xor
inc
in
mov
test
jmp
mov
xor
sahf
fiaddl
fnstenv
in
push
mov
fadds
stos
add
ret
or
cmp
or
add
mov
jns
or
mov
dec
out
mov
insl
enter
test
fdivl
lods
xor
jmp
arpl
jbe
inc
inc
push
xor
add
adc
adc
mov
mov
fistpl
lcall
mov
adc
les
mov
fcmovbe
sbb
and
jo
aas
inc
shlb
inc
out
sbb
pop
je
movsb
pop
out
cmp
inc
xchg
loop
xchg
les
movsl
stos
cmpsb
push
lahf
loopne
xchg
in
in
and
fidivrl
jae
mov
xor
lea
mov
pop
lahf
stc
push
adc
dec
sub
sub
ss
jmp
movsb
cltd
sbb
add
push
int
xchg
pop
push
mov
dec
push
cld
inc
jl
mov
stos
inc
pop
xor
mov
fisubs
xor
dec
push
xchg
shl
ja
xor
js
inc
stos
inc
push
dec
into
xchg
stos
sub
mov
inc
insl
sar
daa
sub
js
inc
icebp
pop
and
stos
movsl
mov
pop
push
jg
fs
ss
xchg
add
adc
out
mov
cwtl
mov
lcall
and
mov
sbb
pop
scas
adc
mov
movsb
mov
imul
xchg
popf
or
or
cmp
mov
fadd
lret
repnz
sub
mov
cli
mov
adc
insb
and
xor
mov
mov
cmp
cli
jp
push
pop
int3
mov
sub
adc
lret
ficompl
sub
add
test
sti
imul
mov
daa
fwait
insl
dec
divl
fs
lods
in
divb
or
rep
int3
negl
outsl
rorl
mov
inc
test
inc
cmpsb
and
add
ljmp
sbb
add
pop
or
push
jp
push
jno
testb
sarb
inc
nop
push
xchg
andb
push
stc
mov
jecxz
mov
hlt
or
aam
and
dec
cltd
out
or
fcmove
pop
idiv
lea
dec
inc
gs
lods
sub
adc
adc
or
sbb
decb
inc
or
adc
push
scas
arpl
cmp
and
push
scas
fstpl
loope
je
cmpsb
out
mov
xchg
mov
or
pop
and
sarl
dec
les
adc
movsl
movsb
cmpsl
sar
mov
mov
adc
push
jg
std
pop
pushl
add
mov
outsl
mov
and
adc
push
shlb
inc
ja
xchg
jl
mov
jno
repz
push
mov
outsb
adc
loope
out
xor
fimull
xchg
testl
push
aam
inc
iret
into
fnstsw
out
andb
inc
shlb
aad
mov
inc
xorl
movsl
addb
adc
in
jb
jmp
dec
out
adc
pop
lahf
lods
lcall
arpl
fmuls
lret
pop
pop
cltd
xchg
pop
jne
pushf
sti
pop
pusha
xchg
arpl
in
fimull
inc
loopne
leave
mov
pop
lret
les
dec
xchg
jnp
sahf
add
loopne
inc
adc
add
xchg
inc
and
add
dec
jae
adc
loope
mov
dec
aam
cld
sbb
outsb
xchg
cwtl
adc
test
jns
push
push
sbb
je
imul
mov
cmp
loop
pushf
cmc
cmp
icebp
dec
ljmp
sbb
sbb
jnp
ljmp
in
jge
inc
or
fldt
mov
sarb
sbb
cmp
rcrl
in
xor
ret
xchg
int3
dec
repz
cmpsl
aas
inc
push
cmc
data16
jo
loope
mov
sbb
arpl
fsubrs
rolb
pop
dec
repnz
fcoml
jmp
mov
inc
cs
cld
cmp
lea
cmp
mov
adc
popa
repnz
adc
and
in
hlt
ret
xor
outsb
ret
fcoms
stos
lock
repz
pop
int
insb
sub
pop
sub
inc
inc
icebp
test
inc
std
mov
incb
push
test
call
pop
xchg
mov
xor
das
sbbl
mov
nop
lods
jl
mov
mov
lahf
clc
xor
xchg
lret
sti
pop
cmpsl
outsl
mov
popa
movl
jp
lahf
mov
xchg
fwait
lret
lds
or
mov
ds
push
faddl
add
cmp
mov
jg
stos
mov
daa
pusha
push
add
xor
jnp
stc
int3
sti
daa
mov
outsb
sub
je
cmp
rcll
rep
pop
bound
cltd
jecxz
push
xor
dec
xchg
sti
push
xchg
out
push
inc
cli
add
adc
push
jnp
loop
push
int3
icebp
or
jle
cmp
mov
adc
in
scas
or
cmp
clc
loop
inc
fcompl
add
out
dec
sub
fwait
clc
sarl
mov
cmp
fisubl
cltd
pushf
fcmovu
orb
mov
push
idivl
shlb
sub
push
inc
popa
arpl
sbb
pop
push
fmull
cmpsl
cmp
outsb
cld
push
xor
jnp
xlat
je
iret
hlt
mov
incl
movsl
or
cmc
push
stos
add
into
in
push
mov
push
sub
jne
lods
xor
cmp
loope
shlb
mov
push
pop
mov
pop
dec
add
sbb
subb
frstor
pop
hlt
pop
mov
inc
bound
lcall
mov
sub
mov
jne
das
lahf
test
inc
in
xor
cmp
mov
adc
pop
xlat
inc
stos
add
loopne
pop
sbb
stc
cmp
inc
push
aam
out
imulb
fnstcw
insl
inc
data16
push
xor
unpcklps
aas
pusha
pop
and
or
dec
mov
aaa
lret
loopne
pop
jmp
mov
fistl
sub
xlat
mov
fldcw
mov
push
mov
fwait
mov
repnz
mov
lods
in
xor
icebp
push
into
nop
mov
mov
mov
fcmovnbe
push
cltd
mov
jb
dec
lock
jecxz
mov
in
dec
adc
push
xor
mov
std
inc
std
js
xor
push
and
pop
add
or
loop
out
or
fdivp
movsl
sahf
mov
mov
and
cli
out
cmp
je
mov
dec
filds
jb
push
rol
pushf
stos
xchg
mov
mov
das
jns
repz
add
repnz
inc
test
cmp
adc
ljmp
dec
adc
mov
push
push
cs
push
inc
push
and
dec
xchg
js
sub
inc
xor
pop
fldt
enter
xor
loope
cmp
jne
mov
mov
in
iret
ss
adc
or
sub
fiaddl
mov
cli
add
es
fwait
icebp
pop
popa
pop
das
fstps
adc
mov
les
or
push
mov
js
in
test
xor
cmp
cmp
xor
mov
sbbb
jl
adc
mov
cmp
pop
clc
push
cmp
loopne
cmp
cs
add
sub
shlb
fucomip
jl
push
repnz
stc
jecxz
shl
cld
in
cltd
cmp
inc
into
push
cli
jmp
roll
xchg
mov
lret
inc
mov
dec
movsb
mov
push
mov
and
cmp
fwait
xorl
sub
arpl
out
orl
lds
mov
jae
sub
pop
pop
add
sub
and
pushf
mov
fs
call
and
cs
mov
jle
add
push
pop
jne
ret
mov
sbb
xor
fldt
hlt
adc
inc
cltd
stos
iret
movsb
adc
adc
fdivrl
cltd
test
addr16
dec
mov
inc
cmp
push
mov
mov
rcll
jae
pushl
mov
dec
outsl
cmc
loope
cmp
outsb
lea
filds
xchg
jbe
outsb
pusha
popf
int
mov
adc
out
test
cli
mov
xor
stc
fsub
push
loope
mov
push
iret
in
std
ud1
lea
mov
jmp
int3
push
into
xchg
and
scas
cld
popa
cmp
out
test
cmp
mov
and
pop
xchg
jmp
or
imul
stos
or
ljmp
repz
jnp
or
outsl
lret
push
xorl
call
int
loop
sbb
mov
inc
sbb
insl
inc
cld
scas
push
cmp
jp
sarl
aas
outsl
adc
inc
in
nop
notb
fmull
mov
pop
int3
sub
cmp
inc
cmp
adc
mov
xchg
jo
pop
and
mov
js
and
fadds
jle
aaa
add
int
rcrb
mov
jmp
dec
in
push
pop
xor
cmpb
mov
add
mov
jmp
stc
ret
dec
sub
clc
cli
jl
fsubl
fwait
ret
in
sbb
mov
aad
int3
out
xorb
sbb
dec
add
cli
rcrb
lods
xchg
ljmp
or
mov
adc
out
ficompl
pop
cmpsl
out
fsubl
daa
out
or
mov
mov
mov
push
imul
cld
jl
jp
jo
cwtl
mov
dec
cmp
loopne
movb
dec
movsl
repz
or
inc
fsub
mov
dec
mov
notb
add
iret
push
sbb
adc
add
cmp
mov
outsl
dec
das
add
outsb
not
pusha
and
mov
inc
push
mov
pop
xchg
outsl
js
cmp
adc
inc
push
xchg
xor
movb
and
push
xor
pop
add
ret
fistps
jl
or
jl
loopne
cmpsl
sbb
jo
stc
jp
sbbb
fnstsw
mov
and
inc
or
mov
mov
adc
je
subl
cmp
int3
xor
sbb
xor
ss
in
stos
dec
mov
jmp
mov
pop
lret
lock
cli
mov
xchg
or
jae
out
jb
mov
inc
push
negl
dec
outsb
testb
pop
cmp
cli
xor
outsl
scas
div
pop
push
stos
out
out
movsb
or
mov
out
outsl
push
cwtl
sbb
cltd
lods
fnstsw
jp
cmpsb
push
and
pop
pop
icebp
mov
scas
in
insb
pop
fdivr
rclb
iret
fildl
mov
mov
mov
das
and
fwait
int3
lock
dec
out
xchg
dec
shlb
adc
lds
test
inc
sbb
repnz
mov
add
outsl
repz
cmp
les
push
xor
jmp
das
inc
and
mov
ret
orb
fldt
dec
jae
jge
mov
lds
dec
mov
push
incb
daa
sub
mov
dec
mov
inc
aaa
pop
sub
jge
pop
mov
aaa
into
xor
jo
xor
dec
jnp
dec
in
dec
jmp
pop
sbb
pop
inc
dec
pop
push
adc
cmp
jne
cmp
es
pop
cltd
xchg
push
ror
mov
enter
lret
adc
aas
xchg
push
fs
fidivs
mov
push
je
cwtl
jno
addl
pusha
out
mov
xor
add
jno
mov
add
cs
and
lcall
adc
sbb
xchg
mov
mov
test
fists
fs
cmp
in
fisubs
cmp
xor
sub
out
xchg
in
enter
xor
xor
or
insb
mov
cwtl
repnz
fldenv
adc
lret
dec
arpl
push
popa
jns
dec
pop
mov
add
lret
nop
jae
inc
mov
addr16
cli
cmp
add
test
dec
lret
imul
movsb
loope
sub
mov
int3
xor
and
xchg
movsb
sbb
nop
cld
lds
inc
mov
pop
push
mov
fldlg2
or
pop
mov
in
mov
ret
dec
dec
fstps
adc
push
xchg
jno
pop
xchg
roll
in
xlat
movsb
pop
adcb
adc
dec
dec
in
daa
mov
mov
mov
andl
std
aam
sub
int
inc
cmp
iret
insb
sub
xor
shlb
mov
hlt
fadd
or
les
jnp
adc
cltd
push
push
or
cmp
lods
cmp
clc
inc
lahf
inc
xchg
das
into
fstpl
cmpsb
cwtl
mov
fldl
ficomps
pop
cmp
xor
jl
jns
xor
stos
pop
sub
mov
repnz
pop
out
scas
repz
pop
pop
push
jbe
pop
int3
leave
inc
or
adc
sbb
cmpsl
xchg
and
repz
ljmp
test
lcall
mov
es
add
fld
dec
rorb
mov
out
sub
inc
add
cmp
sahf
jg
pushf
lea
pop
ja
push
pop
dec
jns
add
and
pop
xor
lods
sarb
mov
mov
mov
cmp
loop
xor
stos
invlpg
outsb
nop
mov
mov
inc
push
sub
int
xor
stos
in
mov
pop
dec
cmp
pushf
fistps
in
loopne
and
iret
out
inc
sbb
addb
fisubs
xchg
inc
pop
ja
out
into
testl
bound
das
pop
cmp
sub
and
push
push
ret
mov
push
test
cltd
xor
js
std
out
ds
sbb
mov
fs
add
mov
jle
in
pop
fxch
mov
mov
xor
inc
adc
push
cld
loope
pop
mov
stc
mov
ljmp
cmp
mov
rdpmc
test
xchg
or
xlat
pushf
scas
pusha
sub
rclb
js
movsb
jecxz
stos
push
jbe
int3
pop
jg
cmp
inc
lcall
hlt
mov
adc
mov
andb
out
push
lahf
ss
mov
xchg
jge
cmpsb
lahf
xchg
push
cmp
fnsave
add
cmp
enter
push
lcall
cmp
movsl
imul
aad
jl
nop
cmp
mov
out
out
mov
icebp
jge
stos
bound
sub
fistpl
push
fists
xchg
inc
xchg
hlt
in
jge
test
popf
int3
xchg
fscale
mov
sarl
sahf
loope
dec
jle
pop
inc
push
mov
lods
adc
into
jl
pop
jnp
jae
or
aad
mov
inc
int3
push
sar
mov
mov
leave
dec
idivb
cmp
test
push
or
xchg
jg
mov
fisttpll
ret
push
dec
and
jns
in
pop
jb
pushf
addb
mov
ret
loope
dec
in
dec
xchg
mov
cwtl
jnp
xchg
aad
jecxz
lock
pusha
outsl
in
dec
jg
cmpsl
je
bound
mov
or
inc
or
mov
subl
in
mov
cwtl
push
lods
mov
cmp
inc
jae
movsb
inc
mov
popa
cmpl
mov
frstor
leave
fwait
cmp
lret
jmp
rolb
icebp
push
icebp
or
mov
jae
cmp
aam
in
lahf
clc
in
mov
pop
jge
lcall
loop
dec
daa
inc
sbb
dec
ds
addr16
adc
outsb
insl
js
xchg
mov
dec
push
cmp
push
loop
scas
aas
and
nop
dec
loope
xor
daa
mov
imul
ds
mov
test
sub
std
pusha
ja
shrb
jnp
loope
ret
std
add
xchg
dec
fnstsw
sbb
cmp
or
xchg
dec
orb
push
jl
std
push
mov
mov
or
and
push
and
cmpsl
dec
pop
or
pop
cli
pop
fst
and
dec
or
stos
push
xor
push
testl
lret
pop
mov
mov
iret
mov
shrl
jbe
fs
int3
rol
adc
addr16
es
rorl
daa
mov
jp
mov
lcall
jne
out
outsl
nop
xor
cmp
and
ljmp
mov
loopne
and
cmp
inc
adc
xor
andl
cwtl
push
cmc
or
cmc
ljmp
dec
std
repnz
mov
inc
repnz
pinsrw
jb
test
data16
pop
inc
std
stc
or
nop
push
fs
jmp
lcall
das
sbb
movsl
fdivrs
call
sbb
aaa
jle
jmp
cmp
loopne
in
or
insb
mov
scas
insl
mov
mov
sub
js
in
mov
add
mov
in
js
mov
loopne
push
icebp
fmuls
scas
jo
shl
dec
negl
sub
pop
dec
sub
jmp
insl
dec
mov
les
fldt
movsl
icebp
cmp
push
lret
sub
pop
imul
and
ja
mov
sub
push
and
scas
pop
in
xor
jl
div
and
sub
xor
aas
stc
shll
mov
aas
add
or
loop
sbb
push
xchg
xlat
cs
mov
and
gs
lea
add
cld
jecxz
mov
in
sar
jns
cmc
add
dec
data16
jae
jmp
push
jnp
and
inc
js
dec
fcmovnb
test
jmp
in
jg
arpl
jp
enter
xchg
pop
xchg
add
negl
idivb
push
daa
lock
add
lcall
stos
adc
in
pushf
add
popf
iret
lods
pop
ds
and
jg
mov
and
cwtl
roll
xchg
cmp
loop
dec
inc
and
or
in
notb
nop
aas
mov
lcall
sub
std
adc
fcoml
daa
bound
cmpsb
mov
mov
pop
or
add
sub
sbb
out
aas
loop
out
test
fwait
and
jecxz
roll
subb
je
inc
push
orb
push
fisubrs
pop
in
or
rorl
mov
addb
xchg
out
xor
and
shll
aad
negb
mov
dec
push
push
dec
mov
jmp
popa
mov
and
jg
std
mov
bound
xchg
inc
fisubl
aad
sub
scas
es
jmp
inc
add
cs
les
cltd
xchg
mov
fildll
fs
pop
jbe
push
aad
xchg
and
cmp
in
lcall
aam
add
xchg
adc
or
ret
fimuls
sbb
xchg
in
movsb
stos
mov
loope
imul
mov
inc
sub
or
dec
adc
mov
add
jge
test
pop
icebp
rcrl
xor
hlt
icebp
or
add
xchg
cli
fcoml
jbe
jb
mov
dec
pop
into
jns
scas
addr16
mov
mov
sub
les
pop
lods
mov
loope
dec
lods
dec
je
adc
mov
jno
orl
inc
dec
movsl
mov
xorl
and
ret
push
jg
inc
fildll
or
hlt
sti
xor
lcall
into
aaa
sub
sbb
jne
mov
aas
mov
mov
les
add
out
dec
fyl2x
aam
testl
cmp
adc
jl
repz
xorb
call
push
fstl
jb
jnp
out
test
bound
test
divb
cmp
and
xchg
jne
push
push
jmp
inc
in
mov
pop
into
ss
andl
lods
out
repz
imull
xchg
clc
jmp
mov
dec
mov
adc
xor
movsl
jb
ljmp
les
jl
dec
out
mov
xchg
call
adc
mov
push
jnp
mov
xor
mov
mov
test
mov
pop
or
push
jb
jb
ret
sub
aas
ja
lahf
jmp
pop
addl
loope
sub
mov
test
movsb
add
lds
repnz
jp
xor
mov
xchg
pop
jecxz
and
and
enter
int
shlb
aas
inc
inc
sahf
pop
sub
test
mov
sbb
cmc
dec
ss
jnp,pt
lods
shlb
lret
sbb
mov
add
mov
cli
inc
inc
mov
cmpb
cmp
or
mov
jae
mov
shlb
xchg
jno
add
jae
icebp
xor
pop
xchg
das
mov
mov
iret
xchg
sub
inc
les
insb
jp
mov
sbb
rol
divl
xorl
in
lcall
xchg
mov
dec
jnp
dec
mov
jg
mov
stc
or
iret
lret
inc
and
xor
mov
cmp
lahf
jmp
int3
xchg
ljmp
loop
xor
pop
push
outsl
push
int
pop
cwtl
cmpsb
dec
outsl
aas
daa
je
jl
mov
cmpb
mov
dec
mov
sub
cmc
sahf
adcb
in
cmc
pushf
clc
jmp
stos
sbb
fisttps
sbb
dec
and
pop
sub
jecxz
and
dec
add
sbb
idivb
les
adc
adc
adc
fs
pop
test
sbb
cmp
lock
push
xor
fs
or
into
js
icebp
test
addr16
add
add
jbe
mov
outsl
add
clc
or
pop
push
pop
leave
add
sti
mov
lock
ret
cmp
dec
dec
xchg
shl
cs
ja
mov
lock
sbb
and
xchg
push
ja
js
inc
xor
jle
cwtl
fisubs
imul
enter
sbb
and
xchg
jl
mov
daa
sub
das
mov
subw
pop
das
jne
sbb
into
in
sbbb
xchg
nop
dec
lock
daa
mov
insb
dec
mov
lds
mov
push
sub
cwtl
dec
sbb
mov
arpl
test
fmuls
fs
cmp
mov
sub
mov
mov
loope
out
ret
and
xor
mov
jmp
inc
push
or
sub
mov
dec
pop
inc
jle
adc
dec
lds
add
xor
and
lcall
enter
mov
cmp
lcall
sbb
jns
aad
imul
or
lods
sbb
fcomps
dec
addb
jg
insl
lods
pop
cmpsb
mov
dec
jns
mov
pop
add
mov
xor
in
mov
xchg
insl
imul
stc
bswap
xor
mov
xchg
pop
adc
mov
call
xor
cltd
repz
aam
dec
in
jmp
or
and
popf
gs
frstor
adc
push
fabs
mov
mov
pop
and
popf
push
rolb
mov
int
movsb
add
add
leave
sarb
or
out
jge
jle
adc
cmc
into
add
flds
push
int
ret
inc
push
push
sbb
sub
fcmovnu
adc
test
or
clc
fimull
insb
mov
test
cs
pop
dec
xor
mov
cmpsb
dec
mov
cwtl
jno
jmp
xchg
add
dec
mov
or
inc
xor
stos
cmpsl
mov
pop
xor
rcll
test
negl
xchg
inc
std
xchg
fisttps
lods
or
mov
popf
pop
daa
mov
xchg
xchg
bound
sti
test
ret
aaa
sbb
mov
dec
aaa
and
jmp
addr16
aas
and
push
xor
sar
cmc
out
inc
sbb
xor
enter
inc
repnz
inc
addb
dec
lds
sbbb
in
xchg
stos
xchg
cmp
pop
hlt
pop
out
add
xlat
lret
and
sbb
and
cmp
dec
inc
imul
rolb
popa
ret
or
push
and
sbb
mov
fld
sub
cltd
aam
and
push
scas
xchg
mov
mov
add
movsw
aaa
fdiv
mov
adc
dec
cwtl
pop
and
das
repz
orl
cltd
insb
jno
iret
jno
test
in
rolb
popa
cmp
roll
push
dec
xchg
stos
adc
int3
push
and
fdiv
mov
pop
push
push
cmp
sbb
xchg
lret
or
inc
daa
push
popf
sti
xor
xchg
dec
inc
jl
jge
pop
xchg
sbb
xlat
rcrb
inc
pop
adc
shufps
lods
lahf
fisubrl
subb
sub
in
push
dec
pop
je
inc
pop
sbb
jae
scas
xchg
push
pop
fstpl
or
cli
or
add
push
adc
test
rol
fbstp
xchg
inc
das
sti
xchg
pop
mov
aam
in
xor
sahf
into
push
mov
popa
scas
or
adc
out
bound
test
test
mov
pop
mov
inc
ljmp
push
jmp
sahf
mov
outsl
or
and
loop
pop
movsb
adc
fldt
repz
sub
xorb
clc
mov
loop
fstps
adc
imul
xchg
push
jle
adc
dec
outsb
mov
lock
pop
clc
or
dec
and
add
jge
pop
jmp
shrl
stos
cmpsl
pop
push
jl
lcall
sub
ret
mov
pop
addb
jb
addr16
inc
push
movsb
mov
and
dec
test
jnp
out
in
adcl
mov
aam
mov
loopne
xor
push
dec
popa
cmc
add
mov
mov
mov
mov
mov
adc
cmp
fisttpl
iret
mov
lods
sahf
stc
and
nop
aam
scas
xor
and
mov
push
aad
test
jns
cmpsl
ss
mov
push
inc
int
hlt
push
jno
jbe
ja
mov
cmp
daa
out
add
inc
dec
out
orl
fmulp
and
mov
sub
in
jge
inc
ljmp
mov
add
cmp
sahf
jmp
ss
cmpsl
cmp
aaa
or
enter
rorl
addr16
push
stc
and
sub
push
cmp
repz
sub
das
cmp
out
or
mov
pop
xchg
push
fsts
sbb
jmp
push
inc
in
and
cmpsb
loop
popa
leave
cmp
pop
mov
ret
mov
xlat
inc
add
adcb
aad
mov
pusha
ret
cmpb
inc
aad
test
sbb
jmp
lods
leave
scas
pop
inc
mov
jle
xor
and
fmull
ret
mov
mov
cmp
sub
int
jne
xor
fwait
push
cld
subl
dec
ret
out
mov
ljmp
cmp
scas
xchg
mov
push
aas
in
adc
cwtl
sub
xchg
inc
sbb
test
mov
and
test
movsb
dec
jns
inc
xor
stos
orb
add
sbb
add
out
xchg
aas
decl
leave
xor
push
sbb
int3
inc
lcall
scas
adc
sbb
sub
mov
mov
xchg
xchg
jnp
sbbl
or
lret
cmp
pop
pop
test
shlb
dec
sub
mov
push
jge
jl
push
sbb
jg
jmp
ret
xchg
mov
imul
xchg
out
mov
push
add
stc
sbb
stos
js
and
sar
dec
fnstenv
sbb
scas
jnp
and
and
add
inc
sbb
aam
dec
iret
out
inc
or
mov
adc
or
and
lds
rcl
daa
mov
test
inc
and
lea
jno
lcall
das
push
mov
push
push
mul
or
add
sbb
lods
or
pop
mov
mov
push
cmp
movsl
sti
adcb
out
pop
or
aaa
pop
mov
dec
leave
mulb
fs
adc
cmpsl
or
pop
mov
add
das
dec
addr16
ss
scas
lods
or
push
sub
pushf
push
sbb
pushf
jae
dec
mov
pusha
xchg
cmp
dec
cmp
outsl
jbe
push
inc
jp
in
xor
add
adc
icebp
xchg
test
or
pop
dec
add
leave
loope
mov
in
sub
rol
popa
mov
and
pop
sub
nop
daa
insb
xchg
iret
sub
lahf
jno
xorb
inc
add
es
pop
or
dec
adc
push
dec
inc
push
lds
xor
mov
jnp
sub
gs
js
sbb
cmp
cmp
popa
pop
jnp
aad
in
addr16
inc
subl
add
adc
lahf
mov
xchg
fldt
adc
std
movsb
lea
mov
and
aaa
int
fistps
hlt
hlt
sub
testl
adc
jno
mov
lds
xor
in
jl
mov
dec
mov
push
pusha
mov
lret
jnp
loope
push
mov
fnsave
mov
sub
jae
mov
sub
lock
das
repnz
inc
xor
and
or
mov
dec
arpl
lahf
addr16
cmpsl
iret
push
dec
stc
js
mov
and
mov
xor
push
fsubl
lods
dec
bound
inc
gs
outsl
testl
dec
fsubr
or
data16
pusha
add
mov
in
and
pop
dec
mov
mov
mov
inc
jns
pop
jecxz
push
dec
cld
and
rolb
mov
sarb
sbb
xor
mov
jl
aam
mov
cmp
repnz
xchg
and
loopne
test
sti
mov
inc
mov
daa
mov
pop
ja
cltd
lcall
fdecstp
jnp
fwait
mov
mov
xor
outsb
loop
push
iret
gs
pop
test
mov
in
pop
xchg
js
inc
or
mov
into
pop
daa
stos
sbb
add
lods
addr16
jne
pop
mov
inc
adc
mov
cmp
addb
xor
mov
ds
addr16
adc
cmp
fs
dec
es
in
stos
push
mov
les
rcrb
lret
inc
and
rclb
xchg
ret
jb
nop
mov
add
cwtl
and
or
add
ss
lret
or
lea
push
jbe
fmull
sbbl
add
inc
dec
cmc
nop
xor
gs
std
repz
repz
aas
ljmp
fldcw
loop
cmpsl
pop
xlat
mov
mov
jge
add
faddl
stos
mov
aam
aam
mov
stos
aas
mov
sub
shlb
fs
cmp
inc
cwtl
inc
dec
sbb
or
xor
insl
xchg
xor
cmp
fsub
les
dec
mov
sub
in
dec
mov
out
jge
inc
pop
mov
outsl
aad
cltd
cltd
testl
imul
orb
cmp
shlb
xchg
adc
rcr
les
lock
xor
leave
ret
clc
sbb
and
imul
mov
mov
or
scas
mov
dec
mov
cmp
sbb
sbb
stc
hlt
popf
or
sbb
xchg
pop
mov
pusha
into
movb
xchg
outsb
add
push
rcll
inc
sbb
lods
iret
movsl
lock
negl
sub
pop
mov
and
jmp
jl
sub
pop
jne
fneni(8087
js
and
lcall
sbb
dec
adc
push
mov
pop
xchg
dec
cmp
add
test
pop
cmp
adc
cld
pop
leave
xor
cmp
add
test
out
stc
dec
lcall
and
or
cli
inc
mov
lock
scas
lcall
scas
jecxz
mov
cltd
das
enter
test
mov
jle
in
arpl
fwait
inc
jle
inc
cmp
inc
cmp
jne
repnz
mov
jg
push
lds
xor
or
shrl
sub
pop
enter
mov
ffree
int3
je
xor
hlt
shll
test
push
outsb
or
aad
mov
imul
lock
sub
mov
dec
push
or
scas
rolb
xchg
insb
aas
or
scas
mov
jbe
repnz
pushl
lock
cld
icebp
xor
cld
mov
das
test
xchg
fs
stc
cli
pushf
hlt
mov
call
or
in
add
out
xor
mov
sti
faddp
xor
sub
xor
sbb
xor
jmp
lcall
push
xchg
pop
xor
mov
sarl
adc
scas
out
pop
and
int3
cmp
je
add
ret
sub
mov
and
stos
xchg
lahf
xlat
add
dec
dec
aad
bound
dec
cmp
je
fadds
inc
sti
das
int3
inc
xchg
push
jg
imul
inc
xor
cmp
leave
or
push
sub
and
in
inc
out
ss
adc
xor
loope
dec
dec
cmp
inc
sbb
cmp
fs
fcmovbe
or
sbb
sub
xor
in
inc
sub
cli
mov
xchg
mov
cmp
outsl
mov
dec
pop
mov
enter
jbe
enter
repz
pushf
push
test
scas
in
cwtl
mov
js
les
test
sub
popa
in
shlb
inc
jns
loopne
popa
pop
adc
inc
inc
cmc
xor
mov
add
jge
jbe
push
out
pop
pop
or
insb
or
in
enter
fdivs
cmc
loope
inc
aad
and
sarl
inc
or
add
cmp
fwait
ret
aam
add
cmc
test
cmp
nop
popf
scas
jne
ret
sub
xor
mov
sub
xorl
movsl
shll
movsl
vcomiss
xlat
mov
je
arpl
sbb
nop
dec
xchg
fldcw
shrl
popa
fwait
cmp
sbb
mov
lea
pop
push
cs
lret
mov
xor
rol
pop
orb
lds
sub
clc
push
or
ljmp
fdivrp
xor
test
jle
pop
scas
mov
test
loope
add
aaa
out
xor
aam
bound
pop
mov
cmp
scas
pop
das
adc
pop
xchg
mov
sahf
mov
test
clc
sbb
push
inc
push
ja
ret
ja
or
scas
pop
shlb
cmp
jg
out
push
mov
sub
inc
jb
imull
push
mov
loopne
pop
push
fidivrl
sub
dec
fyl2xp1
imul
icebp
imul
push
fldenv
push
scas
push
xchg
scas
and
jae
test
or
jo
insb
xchg
jae
cmp
mov
call
rolb
sbb
dec
jge
xchg
mov
jnp
out
jl
xor
mov
jnp
cmc
xor
sbb
mov
sub
rclb
mov
inc
jnp
push
dec
jno
or
inc
sbbl
arpl
jmp
std
test
ja
lahf
xchg
adc
pop
push
xchg
test
mov
mov
push
lods
test
das
pop
nop
and
cmp
adc
cmp
sbb
repz
mov
xor
lret
sbb
sbb
int3
mov
or
pop
mov
imul
push
xchg
repnz
scas
jl
mov
dec
lahf
ds
lea
cmc
movsl
cmp
cltd
bound
shlb
pop
sbb
sbb
or
add
clc
lods
cmpsl
aad
cmp
clc
sbb
lret
movl
dec
and
sbb
int
jbe
push
push
das
out
icebp
scas
xor
push
out
or
xor
inc
jnp
dec
jb
mov
push
loope
loop
jmp
mov
in
and
ds
dec
mov
cmp
scas
xor
inc
in
inc
int3
xchg
js
in
xchg
inc
dec
out
xchg
add
imul
inc
cmp
mov
or
cs
adc
jg
andb
stos
mov
or
mov
cvtpi2ps
jns
xor
or
xor
out
das
xor
mov
dec
jne
mov
dec
inc
or
and
mov
cltd
push
pop
inc
loopne
xchg
rcrb
push
mov
jae
lods
cmp
inc
mov
rorb
xchg
mov
test
outsl
mov
scas
stc
lock
ret
lods
adc
imul
mov
pop
pop
xchg
jmp
mov
xchg
and
pop
jl
sbb
std
mov
mov
mov
loopne
mov
pusha
pop
cmp
in
inc
add
add
incl
add
add
add
inc
add
add
incl
add
add
add
addb
add
incl
add
add
add
mov
add
imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
imul
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
popa
je
dec
jne
gs
add
add
outsb
dec
outsl
bound
push
arpl
leave
add
je
popa
insl
gs
imul
insb
gs
je
je
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
push
push
imul
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
in
inc
gs
jb
jbe
je
push
jb
imul
je
outsl
outsb
dec
popa
insl
gs
add
inc
imul
push
jo
arpl
add
add
imul
jae
jge
inc
outsl
insl
insl
inc
outsl
outsb
imul
insb
outsl
addr16
add
add
outsb
inc
imul
outsb
addr16
add
add
dec
inc
dec
inc
push
jb
arpl
jge
inc
gs
inc
inc
js
push
add
push
imul
outsl
outsl
imul
mov
inc
push
js
inc
add
dec
outsl
arpl
imul
fs
je
add
add
jo
je
push
popa
addr16
add
popa
insb
imul
add
dec
gs
push
outsl
inc
push
data16
add
imul
push
outsl
imul
imul
popa
jae
inc
js
add
inc
gs
outsb
jo
je
gs
je
jo
stos
add
je
popa
jae
gs
jp
jb
popa
jo
add
add
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
add
test
add
popl
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
xchg
cmp
add
jo
add
add
jp
xorb
xor
