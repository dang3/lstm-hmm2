jns
inc
mov
push
lret
mov
aam
cmpsb
adc
mov
fimuls
js
push
push
xchg
dec
mov
je
in
add
es
mov
push
mov
add
loope
xor
cmp
push
cmc
adc
jmp
inc
push
sti
outsl
lahf
pusha
lcall
mov
and
ds
lahf
push
mov
sub
cmp
inc
xchg
push
jl
stos
mov
dec
sub
shlb
sbb
aad
out
mov
xchg
mov
in
nop
push
cs
call
out
mov
sub
mov
adc
sub
bound
fcmovne
imul
stos
pop
scas
shl
stos
or
mov
inc
dec
push
fmul
ja
pushf
mov
add
mov
dec
test
testl
mov
inc
orb
xchg
sbb
jmp
popf
test
xorb
push
mov
icebp
fisubs
mov
jmp
jg
and
jecxz
cmp
mov
or
std
xlat
inc
iret
and
sub
inc
scas
faddp
lret
cli
dec
fisubl
hlt
mov
nop
ror
mov
pushf
outsb
mov
xchg
addl
pop
pusha
pop
clc
xor
mov
hlt
ror
push
xor
js
mov
push
cmpsl
jb
pushf
inc
add
fdivrs
pop
sub
into
mov
mov
in
add
xchg
push
mov
jns
cld
xchg
fs
jle
not
mov
repz
les
lcall
sbb
adc
pop
loopne
push
aas
scas
cmpsb
addr16
add
mov
lods
ret
push
roll
sbb
lods
pusha
loopne
push
insb
bound
cli
or
shrl
cli
sbb
dec
and
adc
movsl
inc
or
nop
icebp
or
lea
inc
mov
push
dec
dec
and
insb
insb
outsb
fnsave
je
or
dec
xor
or
in
and
inc
jmp
adc
lret
cmc
xor
sub
ss
bound
bnd
mov
xchg
scas
lcall
pop
hlt
adc
pop
jb
sbb
sbb
xor
pop
cmp
push
pop
adc
lret
xchg
mov
or
pop
ficomps
stos
cmpsb
inc
xchg
sub
movsl
lds
push
jl
ljmp
test
lea
pop
mov
mov
push
call
mov
popf
cs
pusha
push
repnz
pop
cli
xchg
adc
push
adc
mov
stc
imul
scas
clc
mov
in
and
rclb
adc
dec
nop/reserved
insb
js
push
cs
out
xlat
call
mov
outsb
sbb
push
mov
andl
test
mov
js
lods
push
insb
cmc
dec
cmp
jge
stos
or
fs
scas
dec
lds
or
add
cmpsl
fistpll
daa
ffreep
xchg
mov
xor
icebp
dec
mov
es
push
xchg
hlt
out
shrb
ss
addr16
dec
jmp
imul
in
test
adc
rcr
testb
rol
sub
stos
jp
aaa
das
inc
sub
pushf
sahf
shll
mov
cmp
outsl
in
jne
aaa
push
push
sub
xchg
sub
xchg
aam
jmp
outsl
sbb
into
ret
outsb
adc
mov
xchg
stos
or
mov
sbb
mov
lahf
loope
dec
in
cmp
loopne
push
push
cs
fisubs
insl
pop
test
in
xlat
in
add
add
jg
dec
mov
add
xchg
test
loopne
enter
mov
es
into
pop
sbb
jb
jge
mov
in
xor
adc
cs
outsl
cltd
insl
xchg
add
jecxz
shr
hlt
inc
xchg
cmp
inc
in
xchg
sarl
cmp
xchg
mov
inc
lcall
or
mov
das
mov
jnp
lcall
negb
or
mov
in
pop
inc
and
xor
cmp
lods
xchg
rclb
mov
pop
xchg
xor
and
int
mov
hlt
jb
call
popl
fnsave
jmp
mov
mov
push
gs
sti
mov
push
xchg
push
cmp
imul
mov
ret
dec
adc
pop
cmpb
iret
cmpsb
xchg
test
shrb
xchg
xchg
inc
mov
aad
hlt
push
sub
hlt
cmp
mov
frstor
loopne
je
loopne
pop
stc
sub
shrl
push
pop
mov
mov
pop
dec
and
xor
lea
imul
stc
mov
enter
pop
movsb
adc
push
adc
enter
pop
jns
ss
ljmp
add
or
cwtl
mov
xchg
imul
int
inc
lods
subb
pop
sub
jl
stos
cmp
mov
fs
and
xchg
and
lea
data16
in
push
in
js
cwtl
aaa
out
movsb
or
push
adc
mov
cmpl
inc
stos
mov
scas
iret
xor
icebp
aam
ljmp
scas
fisubs
or
cld
daa
pop
xor
sub
or
push
out
and
push
push
mov
das
shrb
lret
and
add
mov
jg
fsubrs
inc
mov
sub
add
les
xor
sub
repz
movsb
add
mov
mov
mov
sub
lret
xor
fldt
ret
scas
jmp
add
dec
mov
fsubp
pop
in
add
dec
ret
or
and
xchg
jo
sub
cmc
shl
mov
fs
int3
xchg
out
mov
ja
ret
pop
push
fs
inc
pop
or
sbb
jge
leave
or
jbe
sti
mov
dec
ljmp
sbb
dec
xchg
mov
cmp
xor
lds
adc
lods
daa
cmp
mov
mov
mov
inc
or
es
sub
inc
cmp
imull
or
or
stos
jp
or
pusha
dec
pop
into
mov
adc
aad
out
scas
mov
pusha
addr16
lock
outsb
sub
fstpt
fdivrs
dec
push
into
xchg
xchg
xchg
push
loop
jp
je
xor
sbb
xor
shlb
xchg
cmpsb
mov
dec
mov
repnz
xor
loopne
pop
aaa
sbb
dec
cmp
lds
push
or
inc
xchg
mov
xor
jne
and
push
and
pop
fs
mov
orb
push
and
aam
pop
jecxz
xchg
or
mov
outsl
call
sbb
test
movsb
jo
push
packuswb
cmp
fs
push
dec
cwtl
mov
mov
out
lods
out
mov
add
or
insl
je
push
cmp
int3
test
inc
inc
and
sbb
pop
in
gs
js
decl
mov
loop
inc
mov
insl
ret
push
inc
mov
imul
insl
jae
cli
xor
call
lods
std
sti
xor
dec
dec
cmpsb
nop
cmpsb
hlt
xor
cmc
sbb
mov
mov
sub
push
test
loopne
js
arpl
not
call
shr
mov
jae
sub
lret
or
fidivl
jo
mov
cmp
scas
test
bound
push
push
js
nop
loopne
pop
movsb
or
push
inc
xchg
mov
negb
aas
adcb
bound
jp
jecxz
mov
insb
push
add
push
dec
push
lret
imul
daa
mov
int3
pop
jbe
gs
pop
mov
in
daa
outsl
mov
xchg
mov
arpl
add
push
jle
icebp
repz
jae
popf
inc
icebp
call
sbb
jge
push
mov
sub
lahf
ljmp
push
xor
sti
inc
out
pop
mov
cs
and
jbe
xchg
leave
nop
push
icebp
push
cmpl
lahf
sbb
xorb
div
add
xchg
mov
incb
mov
add
enter
mov
pop
xlat
ljmp
lret
shrl
xchg
sbb
jo
mov
pushf
out
arpl
call
jb
xchg
jae
into
inc
mov
daa
ret
xor
mov
js
or
fcompl
inc
out
pop
xor
push
sbb
push
push
sub
jbe
push
inc
in
add
push
jae
add
out
ret
push
xor
lods
rdpmc
mov
sub
inc
or
int3
adc
jmp
mov
das
lret
mov
xchg
xchg
arpl
or
jge
aas
icebp
sub
jle
lcall
lret
push
loop
xchg
adcl
or
or
sbb
mov
add
cmp
jns
fwait
stos
decl
arpl
mov
mov
mov
insl
pop
cmp
add
arpl
push
and
sub
out
xchg
jp
cmc
sub
push
jne
ret
fmull
out
sahf
popf
stos
pop
cmpsl
xchg
adc
pusha
mov
movsl
popa
jbe
add
fimull
in
enter
mov
add
xchg
bnd
jmp
popf
sub
int3
xchg
mov
mov
mov
out
xor
jp
jge
std
jp
test
jle
pop
fsubl
arpl
add
rorb
mov
dec
andb
scas
shrl
sbb
pop
movsb
ror
cmp
es
out
add
test
inc
imul
pop
inc
lret
scas
daa
or
push
and
pop
call
dec
and
mov
push
and
add
pop
jp
pusha
stos
pop
test
mov
stos
ret
inc
in
ljmp
jge
fisttps
ret
lret
push
cmp
popf
xchg
push
cwtl
add
lea
mov
mov
fdivs
push
sbb
jne
idivb
sbb
mov
sub
pop
mov
xchg
xchg
shrb
and
xor
out
mov
stos
fldenv
add
inc
sahf
std
xchg
addb
dec
pop
int3
fs
pop
lcall
or
mov
ja
int3
pusha
push
push
jno
fwait
leave
add
inc
push
int3
cwtl
pop
push
mov
dec
sahf
add
jno
mov
cmp
scas
pop
rolb
sbb
push
arpl
mov
outsl
out
gs
mov
adc
sbb
add
aad
addr16
inc
out
fimuls
xlat
jne
jne
addb
jbe
sub
in
sar
outsb
xchg
xor
push
in
inc
outsl
cmpsl
lret
dec
xchg
push
fisubrl
cmc
addl
out
jns
loopew
scas
xchg
push
sbb
repz
xor
pop
popa
in
sbbl
inc
cli
adcb
push
add
pop
cmpsb
or
xchg
xchg
sub
dec
rolb
dec
add
das
pop
cmp
adc
jle
shr
stos
pop
push
stos
cmp
sahf
xchg
ds
aaa
xchg
push
mov
jle
jno
mov
pop
fcmovnbe
lahf
mov
pop
clc
dec
sub
rolb
pop
sbb
mov
xor
lods
add
inc
pop
xor
outsb
jg
push
scas
jae
pop
shll
ja
sarb
pop
sbb
cltd
cmp
sbb
cmp
cmp
aam
movsl
fcom
dec
mov
dec
jae
loope
lods
int
jbe
inc
icebp
sbb
ds
jbe
decb
sbb
lds
fistl
inc
insl
stos
fmuls
je
in
fildll
jo
fisttpll
je
in
scas
add
mov
popf
aaa
mov
adc
sbb
cmp
fwait
xorl
jg
xchg
adc
dec
pop
and
int
stos
mov
fisttpl
sahf
and
scas
and
shrb
xor
jl
sbb
ja
xorl
jo
sbb
and
sbb
gs
pop
mov
sbb
jecxz
out
jmp
shrb
push
or
mov
dec
dec
pop
fidivrs
dec
xchg
cmp
cltd
pushf
push
cmp
jecxz
jmp
pop
std
adc
movb
sub
lcall
sbb
cmp
xchg
add
movsl
jae
sarb
ret
test
sbb
pop
ror
pusha
dec
sahf
jle
add
jl
push
inc
pop
xor
test
or
insl
sub
gs
cltd
mov
pusha
in
mov
or
jl
hlt
neg
aaa
jg
pop
xor
ja
mov
xlat
gs
movsl
movsl
xor
cmc
nop
push
fst
inc
dec
iret
clc
sub
inc
pop
xchg
xchg
push
bound
cwtl
or
push
mov
sbb
fcompp
testb
jmp
cmp
movsl
sahf
pop
int
jb
andl
sbb
dec
lods
sub
xchg
js
jnp
daa
ficoml
or
leave
mov
pop
fdivrl
mov
repnz
mov
adc
pop
add
frstor
dec
call
push
adc
in
adc
loopne
jne
icebp
popf
dec
jecxz
xchg
adc
cltd
xor
lds
push
mov
sahf
push
rolb
push
aas
decl
ljmp
in
cmp
jbe
add
mov
push
or
add
pop
jecxz
cmc
xchg
test
xor
ss
pop
xchg
stos
pop
loope
xchg
aam
sub
inc
sbb
pop
jno
or
cmp
fcoml
movsb
lret
jno
pop
int3
push
subb
mov
mull
daa
adc
cltd
push
adc
or
iret
in
bound
pusha
push
mov
mov
or
nop
cld
xor
lret
sub
popf
test
roll
xor
pusha
adc
push
fidivrs
decb
cmp
xchg
call
out
flds
xor
xor
cld
sub
mov
aaa
jbe
jbe
or
ss
orb
daa
cmc
ds
cmp
pop
jae
jb
std
es
addl
sub
sahf
std
xor
shll
ja
xchg
sbb
cmpl
pop
ficomps
push
sub
xor
sub
je
out
pop
int3
outsb
jb
leave
pop
sbb
stos
adc
andb
pop
add
add
mov
xlat
sbb
sbb
ret
rdmsr
ss
test
icebp
mov
lret
pop
adc
mov
rcll
or
imul
std
out
fisttps
call
test
sub
cs
cwtl
leave
mov
imul
inc
jp
xor
add
adc
push
dec
mov
mov
mov
imul
out
sub
dec
xchg
cld
cmc
push
fmul
ret
push
mov
pop
rcll
in
push
xor
sub
rorl
cmp
addb
scas
mov
adc
push
fsts
fwait
pop
movsb
jmp
xchg
xchg
jge
daa
mov
lods
mov
sbb
mov
ja
jmp
fistpl
jne
cmp
xchg
scas
inc
std
addl
jge
mov
or
xchg
les
jbe
dec
clc
push
repz
push
enter
into
inc
inc
inc
mov
xchg
jnp
cmp
aam
push
pop
lea
test
xchg
ja
sarb
cmp
imul
in
or
add
cs
fldl
rol
and
stos
loop
scas
mov
pusha
push
fstpt
fcom
jg
stos
jns
inc
mov
xor
xchg
push
outsl
push
mov
pop
fwait
dec
add
mov
fcmovnb
xor
lahf
pop
pop
ja
xchg
push
test
mov
jb
jbe
leave
add
int
adc
dec
rcll
or
loope
lahf
es
xor
pop
stc
lds
daa
jb
incl
ds
jge
jno
pop
push
daa
fidivs
hlt
pop
mov
sbb
pop
and
mov
cs
incl
push
and
push
jecxz
std
mov
mov
out
mov
inc
jmp
iret
xchg
cmpsl
cmp
cmpsl
push
cmp
lds
cmpsl
das
aad
sub
lidtl
and
int
push
lods
mov
dec
rorb
jne
fstl
cmp
lods
imul
dec
push
mov
in
xor
addr16
sbb
test
stos
popf
cvtpi2ps
or
mov
add
add
cmc
in
pop
popa
outsb
and
jp
add
mov
rcl
dec
aad
mov
mov
cmp
icebp
adc
sbb
mov
jle
lock
aaa
dec
lds
notl
test
cltd
push
xchg
push
cltd
in
roll
jp
movsl
scas
dec
in
xor
mov
sub
xor
loop
or
cmpb
jo
xchg
pop
loope
xor
pop
out
mov
cmp
sub
push
push
movsb
repz
cmc
mov
ds
xchg
mov
add
cmc
cmp
mov
xchg
mov
rol
xor
and
xor
xor
sahf
push
inc
xchg
loop
mov
pop
fcomps
push
push
imul
mov
dec
mov
scas
daa
sub
mov
or
cwtl
repz
daa
bound
mov
mov
adc
int
xchg
loop
mov
test
add
mov
sti
sbb
in
dec
sub
dec
cltd
popf
push
in
mov
lods
into
xchg
shrl
jl
sub
cwtl
orb
mov
push
xor
pop
loope
sti
movsl
out
jg
cmp
mov
xchg
or
or
add
cmp
lods
pop
inc
call
and
mov
lret
es
lret
out
inc
int
roll
mov
js
jmp
add
ja
cwtl
xchg
add
mov
fcoms
xchg
outsl
frstor
fsub
mov
push
incl
mov
das
pop
xchg
jbe
cltd
sbb
add
dec
push
push
cmp
jecxz
mov
movsb
pop
leave
stc
cmp
or
push
fwait
pop
clc
xchg
push
out
add
mov
rcll
sti
sti
into
pusha
sbb
das
lahf
xchg
mov
and
divb
in
mov
neg
aad
sti
pop
jns
adc
fxch
ljmp
mov
add
out
dec
cld
jg
inc
xchg
jle
xor
jns
fcompl
mov
mov
sbbb
bound
sub
dec
lahf
sahf
mov
push
std
sub
or
fdivrs
cmc
push
out
call
int
or
fcmove
fxch
xchg
ret
mov
mov
das
testb
push
in
pop
arpl
xor
in
sub
rcrb
js
mov
adc
in
cmp
std
add
shr
mov
sub
mov
mov
xorb
addr16
push
mov
lret
out
aad
xlat
test
out
push
xchg
ds
push
into
inc
shl
fildll
stc
sarb
mov
jnp
sbb
ror
insb
popf
loopne
mov
fwait
pop
shlb
mov
pushf
push
rol
cwtl
incb
mov
in
loopne
sbb
cltd
sbb
xchg
clc
push
jns
repnz
dec
inc
pop
jecxz
out
cmpsb
mov
fdivl
sbb
adc
or
aas
ja
lcall
sub
mov
sbb
into
aad
popa
sub
jae,pn
push
rol
pushf
cmp
ljmp
mov
pop
mov
std
aas
xchg
sti
loop
fstl
scas
mov
fimull
pop
addr16
xchg
mov
jnp
xchg
xchg
ljmp
cli
cmpsb
insl
pop
and
das
dec
mov
lock
in
push
inc
sub
cmp
outsl
mov
in
outsb
inc
dec
mov
xchg
daa
xor
inc
cmp
sub
sub
sub
adc
js
arpl
jnp
mov
std
jns
add
jl
push
cli
sub
fwait
push
pop
iret
in
fsubrl
ds
mov
popf
loop
add
cmp
inc
or
leave
aam
lea
ds
xor
ljmp
cmp
sub
icebp
test
ds
mov
push
lcall
fmul
dec
sti
ljmp
enter
sub
push
mov
mov
imul
mov
stc
sub
mov
adc
jo
cwtl
xchg
cmpl
cmp
movsb
adc
inc
cmpsb
repz
adc
mov
cmpsl
fwait
mov
or
cmp
sub
out
sbb
push
inc
xor
mov
lahf
pop
negl
dec
int
movsb
fmull
leave
jns
data16
mov
push
mov
lahf
mov
dec
cmp
mov
xor
test
pop
data16
mov
push
add
dec
push
mov
jle
jmp
or
leave
and
shll
xor
push
outsb
stos
insl
jb
ss
call
in
iret
push
pop
aaa
pop
mov
ds
sub
out
cld
dec
out
push
inc
mov
sub
xchg
jne
imul
adc
add
jnp
andb
in
loopne
cmp
call
in
pop
mov
rcr
inc
cli
push
sbb
mov
cltd
sti
or
addr16
xchg
jae
lret
in
fisubs
shlb
lcall
add
adc
xchg
mov
sub
dec
mulb
pop
les
add
lahf
aas
inc
inc
fcmovnb
mov
sub
int
add
stos
js
test
ret
push
fucomip
mov
fcompl
lds
inc
lods
sub
and
cmc
mov
enter
sub
xchg
jo
dec
popa
jnp
cltd
push
repz
dec
loop
fists
lods
mov
adc
aaa
inc
push
test
add
int3
xchg
mov
fsubrl
jecxz
dec
mov
lock
sub
add
add
aam
repz
adc
stc
and
fadds
stos
fsubs
jge
icebp
mov
inc
repnz
sahf
inc
stos
xor
sarl
mov
and
lret
dec
inc
ljmp
jnp
sbb
fstpl
movsl
cmpb
shl
adc
xchg
lods
pop
ljmpw
xchg
sub
stos
mov
hlt
arpl
mov
repnz
push
pop
cmpsb
mov
sarl
mov
repnz
je
push
lds
cmpsl
sbb
mov
ja
pop
sti
mov
pop
mov
iret
add
or
push
pop
xor
mov
test
xchg
pop
sub
fucom
inc
push
shll
loop
adc
xchg
femms
jbe
or
rorl
jle
popf
gs
lahf
xchg
adc
push
sahf
mov
mov
popa
add
and
inc
jl
in
jp
nop
xchg
xchg
xchg
aas
les
jne
or
ffreep
dec
mov
dec
fcmovb
pop
divl
dec
mov
xor
jae
adc
dec
dec
icebp
movsb
mov
int3
and
push
mov
pop
or
enter
pop
dec
rclb
inc
sbb
xorl
movsl
rorl
push
jmp
push
lcall
cmp
xchg
ret
cwtl
xchg
sub
hlt
push
aas
loope
jno
call
cmpb
jb
xor
daa
addr16
loope
mov
roll
movsl
les
leave
jno
push
mov
les
or
stc
mov
add
shl
and
clc
imul
and
push
jbe
pop
insl
mov
jecxz
int
clc
cltd
xchg
xor
call
pushf
cmpsl
pop
lds
cmp
mov
jae
pop
insb
pop
push
in
js
subb
inc
jmp
jmp
lock
dec
or
add
andl
mov
adcb
cli
push
cmc
pop
out
shlb
stos
jnp
jle
popa
xchg
pop
out
movsl
dec
jle
loope
push
sub
jecxz
sbb
dec
enter
pusha
mov
scas
sbb
into
jge
xchg
ds
ret
pusha
sub
pop
loopne
cmp
jo
pop
ret
in
shrl
shr
imul
sub
rorb
daa
push
rolb
lcall
lock
push
xor
pop
cmpl
insl
nop
jle
jle
pop
mov
in
xchg
sub
imul
outsl
add
testl
aam
pop
mov
es
icebp
push
fsubrl
sbbb
mov
jecxz
mov
hlt
idivl
fwait
xchg
pop
movsl
bound
push
in
xchg
mov
cmp
sahf
or
mov
or
xchg
mov
mov
mov
push
rol
lret
mov
bound
push
inc
adc
ds
mov
mov
jmp
imul
sbb
inc
pop
jg
cld
sub
xor
fimuls
or
es
xchg
inc
mov
imul
lods
or
dec
xor
imul
mov
not
ret
sub
ljmp
push
mov
jp
push
or
fimull
inc
stc
imul
mov
jns
sar
lahf
jmp
out
jg
ss
shlb
outsl
cli
mov
xor
inc
sub
ljmp
jmp
adc
std
aad
sahf
pop
repnz
js
cmp
popa
push
and
adc
cwtl
jmp
push
mov
rorl
adc
adc
xor
cmp
xchg
fidivs
jl
movsb
lret
xchg
dec
or
xorb
push
and
fldcw
or
sbb
scas
xor
sub
out
push
lods
mov
in
orl
jo
cmp
lds
scas
mov
icebp
or
pusha
and
je
inc
add
mov
mov
mulb
jb
jecxz
mov
or
mov
cmp
aaa
and
fsubl
fistpl
clc
xchg
or
cmpsl
and
ret
fsubl
out
mov
xchg
adc
mov
jl
adc
lret
push
loope
inc
and
sahf
mov
adc
add
dec
ret
push
mov
lahf
je
jno
rcll
mov
push
push
jns
cld
js
mov
int3
mov
clc
sti
xchg
andl
aad
lock
adc
out
call
adc
stos
push
and
cmp
sti
outsb
xor
cmp
aaa
das
and
adcb
mov
cmc
nop
jns
mov
leave
sti
mov
ret
mov
xorb
xlat
pop
xchg
gs
pusha
inc
cs
aas
dec
inc
push
pop
ret
xchg
adc
push
cld
fwait
xor
rolb
mov
pop
or
dec
inc
test
fsubrp
out
jno
jnp
jp
xor
mov
std
decl
dec
mov
jnp
pop
push
push
outsb
xchg
gs
pop
rcl
aam
dec
jbe
or
leave
xor
push
dec
popf
mov
lea
xor
sbb
daa
daa
or
and
lahf
daa
dec
popa
cmc
lret
shl
stc
push
addr16
out
and
pop
shll
sub
movl
mov
mov
cmp
mov
mov
adcb
inc
sub
dec
lret
lcall
lret
jl
clc
es
in
dec
push
adc
mov
cld
cmp
add
xchg
pusha
push
pusha
lea
adc
pop
lods
in
fs
shld
inc
setbe
loope
stc
testl
sahf
insw
iret
sbb
inc
dec
pop
in
pusha
push
test
adc
jae
cli
rcr
imul
fcompl
imul
mov
aaa
push
mov
or
xchg
mov
add
mov
insb
sbb
aad
push
mov
in
adc
mov
xchg
adc
rolb
cltd
mov
sarb
cmp
xchg
mov
mov
jecxz
stos
jne
daa
out
rorl
jbe
aad
enter
ficoml
or
fsubrl
sub
ret
pusha
sub
ljmp
js
and
mov
pop
push
dec
adc
test
das
add
es
and
sbb
and
mull
mov
push
or
daa
sub
sub
lea
mov
sbb
jnp
mov
xchg
sub
mov
mov
dec
dec
sbbb
sub
push
test
add
repnz
cmpsb
push
cli
inc
or
fimull
cli
xchg
popa
lret
inc
sub
test
ja
pop
cmc
dec
and
pop
fiaddl
add
mov
aam
cwtl
jle
sbb
xor
mov
imul
push
jae
in
jp
mov
mov
scas
insb
idivb
xor
cli
mov
mov
mov
mov
decl
ret
push
insb
mov
mov
jmp
outsb
push
cmc
lea
sbbl
xor
pop
lds
cld
inc
push
loop
test
add
shrb
daa
mov
cmp
mov
jle
mov
jne
jno
fildl
push
in
dec
mov
sub
mov
mov
stc
inc
stos
sbb
jle
mov
pop
cmp
dec
and
nop
and
xorb
jg
cmp
mov
test
aam
clc
pop
inc
or
addr16
test
dec
or
mov
cmpsl
iret
sub
xlat
scas
and
mov
lea
jge
cli
loopne
xor
adc
add
push
adc
xor
push
pop
insb
or
xchg
std
jb
in
mov
in
push
cmc
add
fwait
pop
push
jae
jne
mov
xor
outsb
mov
or
inc
sarl
xchg
out
in
mov
xor
mov
xchg
mov
xor
aam
out
repz
int3
add
test
push
and
popf
mov
aas
dec
ret
lods
arpl
outsl
testb
sbb
push
negl
sub
xchg
add
call
adcl
ds
xor
and
arpl
mov
loopne
xchg
lcall
cmp
jle
fwait
es
xlat
jmp
mov
adc
test
xor
dec
mov
mov
je
mov
pop
movsb
popf
dec
dec
fs
mov
jb
xchg
xor
sbb
pop
pushf
insb
inc
data16
dec
clc
outsl
pop
mov
int3
push
imul
enter
js
jnp
and
mov
pop
cmp
inc
mov
insb
xor
mov
lcall
mov
into
add
sbb
sbb
jmp
cmp
aam
stos
sub
scas
test
jne
addb
stos
push
aad
je
js
mov
int3
mov
or
in
aad
in
movsb
pop
out
icebp
jmp
cwtl
jno
mov
pop
sbb
xchg
sub
sbb
inc
inc
mov
js
sbb
mov
push
jns
pushf
sbbb
subl
and
jge
or
sub
adc
sti
sbb
sbb
push
testb
testb
popa
dec
dec
sub
cmpsb
dec
push
dec
xchg
push
mov
mov
sub
test
scas
es
mov
xor
movsl
inc
loop
ds
fsubl
in
push
jo
push
ror
pop
frstor
add
es
push
nop
mov
imul
xlat
outsb
pushf
mov
dec
nop
and
push
fisttpl
mov
mov
je
mov
xchg
lock
into
lea
mov
or
test
fcmovnbe
inc
test
add
sub
dec
sub
jmp
jb
divb
lret
aad
jecxz
inc
xorb
xlat
cmpsl
cmp
inc
repz
push
push
stos
jmp
addr16
sbb
and
call
lods
dec
and
pop
cmc
mov
sahf
comiss
sbb
or
pop
icebp
xchg
sub
fcmovnu
inc
mov
fwait
inc
loopne
push
jmp
popa
xor
adc
mov
mov
mov
push
aam
js
shrl
mov
inc
call
and
rclb
lcall
inc
xchg
sub
into
dec
push
xlat
jl
dec
or
iret
rclb
inc
sbb
out
xor
dec
lret
adc
mov
mov
xor
or
mov
mov
das
je
stos
cmp
cli
mov
enter
outsl
lds
pop
scas
mov
mov
out
outsb
add
ret
arpl
or
scas
fwait
add
lock
pop
scas
mov
sub
leave
aam
cltd
xchg
shl
lret
inc
ss
rcr
shrb
mov
adc
push
mov
and
lds
sub
fwait
cmp
add
jle
out
mov
adc
das
jbe
mov
jg
sarb
xchg
mov
mov
test
jge
decl
loope
adc
xchg
adc
fldt
popf
add
enter
sbb
jae
sub
rcr
idivb
jns
pop
fistpl
sbb
out
cld
cmp
fnclex
pop
xchg
inc
adc
callw
and
push
sarb
cli
cmp
cld
ja
lcall
repz
mov
popa
pop
test
leave
mov
pop
jb
mov
mov
fiadds
or
pusha
jne
push
cmp
jo
sti
cmp
inc
in
mov
lcall
jle
sbb
adc
imul
fs
stc
pushf
rcr
or
jae
mov
xchg
icebp
or
stc
jge
push
xor
push
sti
mov
addr16
cmp
pop
clts
pop
aas
stos
dec
dec
push
xchg
mov
lods
cmpsb
dec
mov
aad
pop
scas
pop
push
mov
inc
test
dec
adc
push
and
sbb
pop
jns
or
cwtl
mov
pop
rolb
iret
fwait
nop
xchg
jl
sub
xchg
adc
popf
lds
shr
push
xchg
cmc
xchg
lret
fs
jg
test
test
and
movsb
xor
pop
fsubl
and
or
sbb
or
sub
dec
dec
lods
repnz
dec
dec
cmp
repnz
jo
pop
into
mov
into
xlat
int3
loopne
in
push
icebp
or
push
fistpll
in
rcrl
adc
scas
push
sub
mov
adc
add
or
adc
test
mov
cmp
xor
lea
rolb
inc
insb
into
mov
jg
dec
mov
ds
fidivs
pop
fstp
lock
imul
sbb
add
cmp
in
inc
int3
jno
push
jmp
mov
adc
out
cltd
arpl
rcll
add
jle
jno
pop
cmpsl
rolb
testl
test
mulb
xchg
insb
repnz
inc
pop
push
push
fsubl
pushf
outsb
adc
les
mov
fnstcw
inc
andb
add
push
xchg
movsb
fisubrl
jg
addr16
sub
movsb
push
or
repz
fs
cmp
fldpi
mov
push
sbb
xchg
in
fldenv
adc
cltd
popf
fidivrs
mov
shrb
aad
shrl
out
pop
imul
popl
xchg
lahf
dec
in
and
pop
dec
insl
scas
mov
jbe
push
dec
addr16
ret
adc
into
jmp
aad
pop
pop
into
adc
jns
fmull
or
pop
adc
push
mov
loop
sub
mov
adc
ret
das
outsl
clc
gs
mov
fldenv
xchg
dec
push
and
push
cmp
pop
jo
xchg
loop
js
out
cmpsb
inc
out
lea
mov
push
jmp
xchg
stos
out
add
fmuls
jo
sahf
popa
outsl
mov
pop
inc
insl
mov
ret
push
sub
in
mov
into
ds
in
call
testl
xor
imul
inc
mov
inc
cld
xchg
xchg
aam
and
adc
dec
pop
stos
pop
js
adc
repz
gs
xorb
xchg
mov
ret
push
test
sub
mov
mov
sub
xchg
mov
std
test
in
in
cmp
sub
pusha
add
pop
xor
xchg
adc
ljmp
add
cmp
outsb
adc
mov
lcall
insb
xor
enter
adc
sub
add
dec
call
lahf
sbb
add
insl
jmp
push
mov
adc
mov
rorl
sub
cwtl
rcll
push
add
rcl
dec
dec
std
xchg
data16
dec
or
pop
push
push
push
lods
into
jle
sub
adc
inc
aam
test
scas
adcl
mov
sub
leave
push
mov
ds
mov
fidivl
sub
dec
xor
mov
inc
popf
lods
imul
data16
add
fisubl
or
outsb
xchg
mov
dec
dec
ljmp
jp
vcvtsi2ss
loopne
stc
mov
jo
xchg
fldenv
sbb
bswap
daa
xlat
icebp
and
das
cmp
mov
out
push
jmp
nop
imul
jecxz
jmp
fs
loopne
aaa
mov
push
mov
gs
sub
in
jl
cmpsb
mov
jle
cmpsl
mov
jns
into
push
and
pop
mov
out
dec
xor
mov
pop
cmp
shlb
leave
pop
jmp
data16
out
push
mov
out
lret
xchg
mov
xchg
add
movsb
fs
inc
fwait
mov
loop
xchg
mov
mov
dec
ds
pop
loopne
inc
sbb
and
aam
cmpsb
fistps
xchg
mov
jl
adc
fcmovbe
xchg
mov
test
xchg
mov
adc
push
mov
das
dec
cs
inc
movsl
sbbb
addr16
mov
stos
daa
add
hlt
fsub
mov
lret
in
jg
les
negl
dec
lds
es
std
mov
jne
aad
cmpsb
test
sbb
sarl
es
je
sbb
xchg
int3
das
jle
adc
pushf
popf
pop
call
pushf
test
mov
inc
add
popf
mov
mov
cld
push
out
inc
add
fidivl
pop
add
sbb
cmpsb
xchg
sbbl
imul
push
xchg
clc
or
roll
mov
dec
ja
mov
insb
jae
lret
dec
push
ss
ret
fwait
dec
stos
movsb
cmp
and
mov
rclb
mov
call
or
cld
add
lret
cmp
push
mov
push
ret
ret
dec
divb
pop
repz
sbb
scas
push
adcl
cmpsl
xchg
dec
pop
outsl
cld
insb
jbe
push
int3
or
sbb
in
add
popf
jb
in
pop
repnz
cs
repnz
aad
mov
xor
int3
mov
loopne
fistl
pop
inc
xchg
and
stos
nopl
mov
ret
cmp
push
push
inc
or
orb
inc
inc
aam
punpckldq
xor
stos
cli
ja
xchg
loop
jns
mov
xchg
enter
repnz
test
inc
fbld
dec
xchg
mov
xor
test
arpl
sbb
sbb
or
imul
addr16
aad
adc
mov
adc
push
mov
cmpsl
insb
fsub
sbb
out
cs
data16
ja
mov
lret
mov
les
push
iret
push
push
cmp
xchg
or
inc
ret
jb
into
mov
sub
or
or
dec
push
in
mov
adc
xchg
pusha
mov
mov
lea
movsb
or
xchg
sbb
lods
mov
in
push
cmp
jne
sub
popf
mov
loop
out
xlat
lds
jbe
xchg
mov
rcr
or
lcall
insl
jge
movl
daa
mul
rolb
add
mov
dec
cli
es
mov
cmc
dec
stos
mov
cs
xor
sub
fisubs
fldt
movsb
add
mov
push
mov
add
jb
cmp
testb
mov
std
idivl
outsl
call
mov
cmpsb
cmpl
mov
and
adcb
popf
fcmovu
jl
ret
add
fstp
push
sub
in
xchg
jg
outsl
adc
jb
enter
xchg
shlb
inc
pop
pop
leave
arpl
adc
in
daa
lahf
int3
and
test
mov
data16
in
dec
dec
insl
jg
jbe
fisubrs
add
loopne
add
nop
loopne
pop
mov
jl
stc
xchg
in
cmc
push
lret
dec
mov
je
jo
and
rcrl
push
fsubrs
out
push
inc
sbbl
pop
imul
jo
sub
pop
ja
pop
xor
sbb
sbb
adc
das
lcall
sub
xchg
fcmovb
int3
outsl
lea
cwtl
add
and
or
imul
clc
push
insl
mov
addr16
or
dec
fadd
pop
lea
add
jns
movsl
loope
je
rcrb
adc
xchg
sub
xor
ret
xorl
mov
xchg
fisttpll
xlat
and
sbb
and
es
stos
call
cs
and
adcl
jo
sbb
sub
jecxz
lods
dec
stos
imul
sti
and
xchg
in
stos
scas
adc
jg
dec
add
push
xor
push
add
cli
fstl
and
xor
movsb
cmp
sub
testb
cltd
les
xchg
pushf
fldcw
pop
xchg
cmp
idivl
fldl
mov
int
fadd
inc
mov
mov
pop
xchg
or
or
pusha
inc
inc
pop
mov
dec
loope
cmp
push
mov
jo
adc
and
test
jbe
jae
shrb
cmp
push
mov
mov
jo
jae
outsl
int3
sub
inc
aam
inc
inc
in
aam
cld
mov
sbb
out
mov
rep
mov
stc
dec
in
sbb
dec
mov
dec
sub
lods
add
mov
std
jg
xor
rorb
rorb
stos
push
out
cld
mov
pop
aas
js
pop
cld
lds
jae
jns
in
cwtl
aas
pop
mov
inc
jp
je
test
stos
push
and
push
shll
fnstcw
sti
push
xchg
je
xor
or
bound
pop
add
cld
xor
testb
in
dec
mov
cld
cmp
cmp
mov
jl
insl
lock
push
jp
push
lock
mov
pop
xor
js
int
xchg
xchg
or
pop
aas
mov
pop
arpl
xor
sbb
or
cmp
lea
popf
inc
cmpsd
addr16
aas
repz
mov
mov
int
out
into
xlat
sub
push
jnp
or
jp
sti
wbinvd
in
xor
mov
xchg
ror
pop
xchg
xor
pusha
ds
fdivrl
jle
bound
or
mov
mov
push
adc
aam
arpl
and
pop
pop
mov
mov
pusha
sti
or
mov
imul
in
jmp
sbb
sub
xchg
out
xor
sub
loope
in
fisttpll
push
lds
call
xor
hlt
jmp
lahf
sbb
addb
sarl
pushf
mov
xchg
mov
pop
adc
xchg
outsl
movb
add
sub
cmpsb
inc
arpl
mov
test
leave
int
xlat
sbb
lcall
pushf
add
loope
jne
pop
sbb
xchg
mov
stc
adc
pop
cmpl
test
and
call
pop
push
mov
out
fwait
jno
pop
in
repz
pop
imul
or
fnstsw
sysret
jnp
stos
add
movsb
bound
sarl
lret
mov
inc
jns
enter
fcoms
or
mov
inc
sub
mov
inc
mov
shrb
in
scas
mov
add
push
icebp
mov
pop
pushf
into
dec
int3
lds
jge
push
xor
aaa
je
icebp
in
cli
sbb
jg
imul
xchg
insb
inc
imul
xor
mov
mov
push
xchg
movsb
push
xchg
cmp
mov
jae
stos
movsb
out
insb
loope
lret
les
pop
mov
int
mov
xchg
mov
mov
je,pt
xor
pop
dec
or
mov
test
lods
mov
pop
cmpsl
inc
cwtl
jnp
loop
jp
js
std
xor
push
fadds
loope
pop
insl
fisubl
pop
push
dec
push
pop
xlat
int
in
mov
add
scas
lods
in
pushf
mov
pop
mov
ss
scas
or
jle
push
lcall
mov
lods
cltd
repz
adc
pop
lds
loopne
or
mov
ljmp
or
and
jecxz
and
sub
popf
dec
lret
loope
pop
jp
push
jne
lret
in
jmp
ficomps
dec
fwait
cmpsl
xor
cmp
pop
aad
sub
and
adc
and
push
repz
insl
jge
lahf
testl
outsb
out
fcomi
xor
enter
sbb
and
mov
dec
movsl
xchg
mov
mov
lcall
das
push
mov
lret
push
in
inc
pop
or
movsl
or
fdivrp
adcb
xor
sbb
mov
pusha
dec
mov
push
xor
fisubl
adc
sbb
inc
add
push
jg
pop
mov
mov
push
mov
fdivrl
ja
loopne
adc
sub
js
xor
mov
imul
mov
int3
mov
xor
and
and
jmp
xchg
pop
sub
fmul
add
aaa
sbb
sbb
pop
stc
fistpl
pusha
test
xchg
cmp
iret
xchg
cmpsb
test
and
cmp
inc
arpl
mov
fcompl
jp
mov
or
or
push
sbb
mov
mov
ljmp
ljmp
les
popa
add
adc
in
xchg
in
mov
xor
and
inc
xor
pusha
sbbb
or
mov
and
shrl
adc
inc
outsb
in
add
push
jmp
mov
sbb
sub
rcll
push
int3
pop
mov
jns
or
dec
sbb
adc
rcrl
leave
push
les
push
mov
mov
or
stos
push
dec
or
xchg
add
stc
out
mov
push
or
inc
inc
xchg
jecxz
jg
sub
addr16
pop
mov
inc
push
int3
out
aaa
push
repz
add
pop
mov
jg
cmp
cmp
push
das
push
add
mov
je
ljmp
loop
add
rclb
es
dec
out
imul
push
and
loope
inc
aad
jno
cwtl
fsubs
fcoms
jbe
jecxz
mov
insb
arpl
pop
dec
test
cmpsb
jnp
xor
and
sbb
shll
cmpsb
out
orl
mov
push
ljmp
imul
push
mov
push
loope
int
sbb
pop
cltd
imul
jno
xchg
or
push
cld
mov
cmp
push
mov
mov
adc
inc
pop
in
ret
pop
sarb
sarb
les
inc
pop
or
fs
sub
mov
sub
outsl
lret
ja
outsl
sahf
cmpsb
jb
xor
sbb
test
mov
add
frstor
and
dec
gs
push
or
dec
mov
mov
outsl
push
mov
into
pusha
dec
xchg
xchg
andb
ss
cmpsb
xorl
and
jae
adc
cmpsl
cmp
int3
shl
jbe
aas
sti
add
dec
ljmp
cmp
dec
popf
mov
lret
lods
fistl
xchg
sbb
xor
inc
adc
mov
lret
mov
ret
popa
push
inc
or
outsl
cmpsl
out
loopne
in
stos
xor
sbb
xlat
pop
mov
das
fildll
daa
sbb
push
pop
test
and
pop
jae
outsl
nop
xchg
dec
fnstcw
or
xor
fwait
daa
pop
sbb
lods
fiaddl
inc
inc
shr
ret
rolb
mov
jnp
inc
mov
aam
fwait
in
lret
test
xchg
ficomps
out
cwtl
stos
ds
mov
bnd
pop
mov
inc
add
inc
out
je
stos
and
and
or
dec
inc
fwait
jo
add
add
fimuls
iret
mov
popa
in
adc
fidivrl
roll
and
dec
xchg
mov
push
mov
jle
sbb
int
or
daa
pop
cltd
push
arpl
mov
mov
pop
cmp
xor
and
lcall
mov
repz
and
pop
test
xchg
dec
cwtl
mov
imul
inc
xor
cmp
loopne
sub
push
out
lea
add
je
jp
out
rcrb
test
imul
enter
xchg
mov
mov
inc
scas
hlt
dec
inc
hlt
and
mov
adc
mul
dec
xchg
insb
aas
fcmovnu
lock
mov
lds
inc
dec
pop
xor
popf
stos
or
xor
push
sub
sbb
sub
popa
pop
int3
mov
mov
and
inc
xchg
fcmovnb
popf
xchg
in
mov
mov
cwtl
jp
into
jns
push
das
aaa
mov
arpl
pop
fmul
or
inc
fldt
lea
mov
cs
xor
push
sub
gs
adc
in
xor
mov
push
mov
adc
add
into
mov
aam
inc
icebp
iret
enter
sbb
cmpsl
cmpsl
xchg
hlt
mov
dec
xchg
dec
push
lahf
in
pushf
jbe
enter
fiaddl
leave
mov
out
out
rcrb
mov
sahf
mov
fdivs
add
enter
push
out
ljmp
push
pushf
imul
push
fsubp
rorl
dec
push
mov
mov
cmc
or
fs
dec
in
in
adc
and
pop
jne
mov
dec
out
or
lods
shlb
ficoms
cmpsl
mov
adc
cmpsl
jnp
sbb
and
dec
lcall
lods
lea
cmpsl
jge
pop
rcr
mov
mov
xor
test
imul
or
loop
loope
mov
icebp
jmp
adc
inc
cmp
iret
and
movsl
xchg
pop
shrl
dec
imul
jg
mov
pop
mov
flds
add
cmp
push
ljmp
sbb
pop
jbe
fdivrs
mov
in
rcrl
gs
jmp
ljmp
cmpsb
cli
shrb
add
xor
cmp
xchg
cwtl
lret
pop
inc
xor
dec
xor
lret
add
cld
and
or
sbb
out
dec
add
clc
fisttpll
and
push
lods
dec
push
mov
daa
mov
repnz
jno
imul
mov
cmp
aaa
push
xchg
xor
sbb
repnz
ret
pop
outsl
and
xchg
fcmovnu
addb
test
mov
inc
inc
aam
inc
stos
lds
ja
lret
mov
push
ret
lea
in
sub
int
jp
xchg
add
push
sbb
lods
dec
divl
in
fidivrs
int3
lock
cmp
sub
xor
jnp
xchg
stos
fildll
cmp
mov
cld
pop
filds
movsl
stos
fstl
mov
xlat
push
inc
jne
cs
jge
arpl
cmp
mov
push
addr16
jno
loop
pop
jecxz
and
xchg
loope
mov
sti
jae
aam
call
movl
cli
add
in
mov
fs
xchg
aam
mov
jbe
out
add
testb
pop
stos
scas
jns
xchg
mov
or
aas
mov
mov
push
cmp
sub
out
sub
adc
xor
std
push
or
cmp
out
lods
roll
push
mov
fisttpl
jae
or
mov
cmp
mov
jns
aaa
divl
imul
ret
adc
popa
out
nop
outsb
and
insl
sahf
mov
in
cmp
xor
xchg
ret
mulb
mov
mov
insb
leave
pop
fs
xor
add
cmpb
xor
sbb
mov
xor
leave
pop
pop
int3
sbb
test
cmpsb
dec
mov
test
sub
xor
fwait
pop
jmp
inc
cmpsb
adc
jl
cs
and
push
in
mov
mov
cmp
cmp
test
inc
or
hlt
xor
insb
cs
in
sbb
aaa
push
cmp
add
add
ror
fsubp
mov
sti
enter
sbbl
xor
or
inc
cmp
out
imull
mov
pop
add
repnz
add
andb
test
lods
xchg
lea
bound
dec
in
fucomip
pop
jnp
sahf
cltd
test
movsb
add
jecxz
movb
sub
jae
imul
fldcw
inc
or
dec
mov
pushl
scas
je
nop
bound
adc
jle
fdivl
cmp
js
aas
dec
push
daa
cmp
and
aaa
inc
loop
cli
and
lea
aaa
sub
lret
mov
and
cmp
test
fimuls
xor
lods
mov
cmpsl
lret
cmp
mov
and
arpl
inc
mull
movsl
push
cmp
inc
and
push
push
fisubrs
dec
aam
mov
jo
jbe
or
mov
lea
add
jl
inc
lret
lret
pxor
xor
mov
mov
jns
out
stos
lods
sbb
sub
ret
xor
jmp
mov
pop
push
int
test
mov
add
jp
sub
mov
and
imul
sbb
sti
popf
adc
inc
sbb
es
out
pop
push
pop
mov
sbb
enter
test
pop
mov
push
fwait
popf
jae
ja
mov
dec
roll
cltd
push
out
std
scas
mov
mov
data16
rclb
lret
loopne
and
cmpl
ljmp
or
loope
dec
and
cmpsb
fwait
cmp
or
push
scas
adc
push
xchg
jge
popa
movsb
push
xchg
add
jb
push
je
int3
fisubrl
inc
ret
in
jl
fnstsw
pop
in
out
xor
cltd
push
add
aam
icebp
inc
fnstsw
out
repz
and
inc
add
subl
sbb
lcall
lock
shll
popa
pop
xchg
lcall
fs
lret
daa
mov
inc
inc
mov
aam
mov
mov
mov
in
sbb
es
stc
adc
inc
adc
daa
mov
ds
aas
pop
pop
out
jae
inc
sbb
nop
fcomps
rclb
into
outsb
daa
add
fldl2t
lds
or
test
mov
bound
jmp
mov
inc
fsts
pop
sti
sub
test
xlat
xchg
pop
subl
xchg
xor
je
and
shrl
ja
cltd
fidivl
pop
sbb
ror
into
test
and
xor
pop
stos
ret
addl
dec
jl
sbbb
jbe
pop
or
push
daa
mov
and
xchg
mov
xchg
rcll
fwait
and
stos
mov
mov
adc
js
pop
das
dec
popf
ficoms
pop
mov
leave
sbb
push
into
cld
jae
pusha
dec
xchg
or
xor
ds
dec
dec
jbe
int
adc
arpl
inc
xchg
push
loop
pop
sbb
mov
lods
addr16
out
das
xchg
mov
lret
gs
add
push
push
loopne
mov
loop
stos
mov
mov
scas
fbld
rcll
inc
mov
xor
cmpsl
inc
imul
out
cmp
or
xchg
or
push
lahf
in
jmp
dec
mov
jle
mov
and
xor
xchg
repnz
cwtl
and
jg
arpl
outsb
bound
aad
loopne
dec
mov
mov
sbb
fidivrl
jp
test
and
imul
dec
jmp
popa
mov
lea
clc
in
and
xor
push
adc
data16
push
sbb
pop
out
out
add
mov
ss
dec
sti
push
data16
cmp
add
mov
xor
jo
xor
jp
and
fidivs
add
gs
loop
push
pop
leave
stc
icebp
sbb
dec
lahf
mov
popl
bnd
add
enter
outsl
jo
cltd
xor
dec
loop
mov
das
sbb
mov
jne
and
inc
push
clc
outsl
imul
lret
jecxz
rcr
jbe
cmpb
sbb
jge
aam
jno
sarb
adc
rcll
ja
shll
bound
sahf
mov
sbb
sbb
or
inc
cmp
add
jecxz
pop
pusha
cmpb
sub
stc
inc
int
adc
sub
pop
cmp
mov
fisubrl
mov
xchg
testl
jmp
scas
pop
xchg
jb
mov
and
test
cmc
enter
and
add
in
sbbb
ret
mov
cmp
es
jl
mov
add
movsb
aaa
or
iret
pop
negb
mov
daa
lods
push
push
loope
jno
jle
xchg
inc
jae
add
sub
lahf
jnp
jae
sahf
stc
ljmp
aam
or
cltd
iret
dec
inc
data16
fndisi(8087
pop
push
enter
clc
pop
mov
sub
aas
test
cmp
push
mov
in
mov
xchg
inc
xor
fs
rorb
movsb
pop
xchg
mov
push
movsb
xchg
xchg
sub
jmp
sar
jmp
pop
jbe
xchg
xchg
sbb
test
testb
sbb
in
xchg
dec
push
and
faddl
addr16
push
add
pop
push
adc
fcompl
outsl
iret
xchg
pop
in
xchg
jmp
outsb
cmpsb
add
mov
in
outsl
jmp
add
xor
and
mov
adc
sbb
inc
sub
mov
jae
dec
mov
mov
xlat
sahf
ficomps
rorl
jb
sub
mov
out
mov
adc
lret
mov
ja
lret
ret
subl
and
mov
in
sbb
push
jle
jbe
mov
jo
scas
push
test
nop
fs
inc
daa
mov
pop
push
pop
jae
imul
rcrb
xor
jl
sub
jle
cmpsl
fidivs
rcll
and
cmpsb
mov
or
inc
leave
mov
test
or
data16
jge
xor
cmpsl
cmp
sbb
lea
cmp
stc
std
scas
popf
addr16
es
in
fistps
movsb
insb
rcr
mov
xchg
in
adc
fisubl
sti
lock
sub
out
test
and
iret
cmp
test
shrb
jecxz
loope
xchg
test
inc
addr16
inc
andl
jp
inc
inc
scas
inc
sub
addr16
lock
inc
adc
mov
xor
mov
mov
xor
adc
rclb
addr16
mov
test
pop
out
jl
jbe
gs
sub
push
subl
lret
pop
mov
push
xor
test
xchg
push
popf
jge
adc
sbb
mov
test
mov
inc
pop
jp
add
ja
lcall
nop
int
add
mov
push
sbbl
aad
arpl
scas
in
jne
cli
xchg
add
shlb
les
in
ret
xchg
sbbl
leave
inc
sub
fimuls
or
hlt
mov
mov
pop
scas
sub
mov
stos
mov
loope
sbb
xor
lds
lods
or
push
mov
mov
sbb
push
and
enter
xchg
test
ds
push
jae
xorb
int3
mov
sbb
lods
push
xor
mov
jg
pop
or
lds
cwtl
push
jecxz
pop
movsb
fisttps
sbb
repz
cli
lock
xchg
and
fcomps
mov
pushf
imul
popa
mov
jbe
inc
loop
stc
loopw
mov
pusha
rorb
dec
add
inc
mov
xlat
andl
inc
je
xchg
mov
pop
xchg
cld
testb
pextrw
and
mov
insl
xor
in
lahf
ret
cld
mov
xor
enter
inc
bound
scas
xchg
popf
mov
data16
adc
clc
bound
leave
pop
xchg
pushf
push
loop
pop
inc
sbb
push
mov
enter
xchg
mov
xlat
scas
push
inc
inc
cmp
xchg
cmc
lods
or
cmpsl
xor
xor
test
testb
mov
negb
out
mov
idivl
test
cmp
movsl
cmp
and
pop
dec
xchg
mov
cmpsl
xchg
mov
mov
nop
jl
push
or
push
mov
cmp
das
call
imul
sbb
mov
jno
inc
xchg
cmp
in
call
popf
movmskps
loop
imul
dec
jb
ret
and
fucom
pushf
mov
inc
in
sub
mov
push
mov
pop
push
filds
insb
cmp
xor
data16
nop
cltd
or
mov
add
and
imul
xor
mov
mov
stos
ljmp
scas
add
lret
inc
inc
bound
dec
and
shrl
dec
ljmp
jmp
test
arpl
mov
rorb
test
dec
cmp
mov
mov
cmp
adc
pushf
jbe
dec
cmp
adc
push
movb
nop
cmp
dec
repnz
cmpsl
xor
test
sub
xor
or
and
incb
jne
jns
cmc
jmp
push
dec
leave
jg
int3
and
push
jae
cmp
mov
ret
int
bound
inc
and
xchg
arpl
cmpsl
repnz
mov
fimull
sbb
inc
jmp
xchg
push
or
movsl
sub
int3
sbb
fists
push
lea
push
jbe
jne
mov
pop
repnz
push
xor
fwait
loop
push
fnsave
xor
clc
aad
fdivl
mov
jg
lret
xor
notl
clc
jg
xor
loope
mov
inc
push
cmp
ret
cmpsl
dec
inc
int3
adcl
push
nop
pop
inc
fsubs
lret
pop
fisubrl
mov
addl
int
repnz
dec
nop
in
out
hlt
or
push
inc
rcl
sub
test
push
dec
mov
or
lods
inc
pop
push
repnz
mov
sbb
or
push
pop
inc
jl
call
sub
clc
test
stos
pusha
add
stos
out
sbb
cmpsb
fwait
pop
shr
and
sub
hlt
add
ds
push
dec
mov
inc
fisttpl
jge
pushf
mov
pop
stos
pop
mov
sti
into
movsb
popl
aam
pop
movsl
out
mov
in
insb
push
fcomps
lock
mov
loope
and
mov
xor
pop
jl
jmp
or
adc
mov
je
imul
add
addr16
dec
add
dec
dec
cmp
shrb
push
jns
ret
add
stc
imul
mov
fcompl
or
lahf
mov
dec
pop
cltd
lds
outsl
dec
jb
push
push
adc
sarl
xor
sbb
jo
clc
scas
lret
mov
leave
add
fstl
sub
and
scas
mov
or
cmp
popf
sbb
mov
add
inc
and
repz
jo
mov
xchg
test
outsb
jae
ds
lahf
int
jne
lret
dec
rcll
addr16
aad
fadds
fmuls
lds
scas
xor
imul
xchg
mov
adc
repz
push
mov
pop
adc
sub
gs
sbb
je
pop
mov
mov
xchg
adc
push
sbb
pop
lods
dec
je
mov
mov
or
jcxz
mov
xor
xor
hlt
sbb
add
test
inc
lret
mov
jecxz
mov
mov
mov
insb
pop
cltd
and
jmp
and
or
mov
nop
or
jecxz
aas
jbe
js
stos
out
imul
es
shlb
xchg
push
lods
adc
hlt
push
and
mov
and
fildl
scas
fwait
rcll
xor
inc
loope
mov
orb
pop
xor
xorl
mov
xchg
fs
repnz
incl
lcall
mov
popf
test
xor
divb
test
aas
xor
cmc
out
out
add
repnz
inc
and
imul
xor
sbb
sti
mov
or
xchg
loop
mov
sbb
test
mov
xchg
pop
inc
aam
dec
pop
out
pop
lahf
add
ss
pusha
call
cli
imul
add
stos
movsb
sub
sbb
jmp
xchg
sbb
adc
adc
pop
out
std
les
cwtl
jp
pop
aam
lret
clc
adc
pop
cltd
test
adc
jnp
xchg
inc
mov
adc
or
push
lock
jg
adc
jmp
pushf
ja
sbb
jp
insb
call
movsb
icebp
ret
insl
pop
xchg
testl
movsb
andb
sbb
jnp
lock
cwtl
pop
negl
jg
or
inc
inc
sub
ss
xor
mov
sub
dec
adc
iret
lea
sbb
dec
aad
daa
jnp
pop
mov
iret
aas
sub
xchg
scas
out
test
outsb
mov
push
lds
inc
xchg
mov
stc
les
jg
add
adc
popa
fdivs
mov
sahf
out
xchg
xchg
jmp
lea
ss
mov
addr16
adc
sub
stc
add
fstl
aad
je
push
adc
push
push
call
ret
aam
mov
das
xchg
mov
rcrl
mov
ds
jl
leave
das
lea
es
lods
negb
stos
iret
divb
mov
or
js
out
repnz
mov
push
rol
in
xlat
in
xchg
test
lcall
dec
les
aam
xchg
cmp
xchg
sbb
xchg
les
clc
xchg
inc
mov
cltd
mov
movsl
sbb
mov
jbe
xchg
or
test
cltd
aam
scas
orb
push
adc
mov
scas
jle
mov
mov
cwtl
movsl
lods
push
xchg
inc
xchg
std
stc
enter
leave
adc
lds
adc
out
int
xlat
ds
mov
popa
addr16
les
pusha
lahf
shr
test
out
mov
call
out
adc
outsl
jno
in
inc
arpl
xor
or
andb
xlat
negb
fnstenv
mov
inc
xor
negb
adc
or
icebp
cmp
aaa
push
out
or
mov
push
or
adc
mov
sbb
daa
fnstenv
fwait
and
int
pop
in
adc
pop
in
mov
enter
out
icebp
into
or
pop
cltd
mov
mov
mov
adc
test
mov
pop
jne
pop
inc
cmp
and
sub
lahf
hlt
loope
mov
mov
xor
out
cmp
shll
lds
push
mov
sbb
js
js
sub
arpl
dec
fisttpll
dec
lahf
inc
adc
stos
insb
push
cwtl
aam
hlt
das
pop
sbb
pop
xlat
push
mov
dec
test
sbbb
add
shlb
loop
daa
scas
xlat
mov
mov
fcompl
or
and
ret
dec
cmp
sbb
mov
fs
or
movsl
ret
testl
stc
cs
push
jmp
jp
js
xchg
lret
jg
inc
repz
pop
imul
movsb
mov
std
adc
mov
sbb
mov
sub
xor
stos
shrl
mov
mov
addl
cmc
sbb
sub
push
sub
inc
sbb
jecxz
int
jnp
sub
pop
subl
xchg
mov
dec
cmpsb
clc
inc
xor
lds
mov
and
cmc
inc
in
mov
mov
mov
xchg
or
movsb
in
xchg
mov
mov
inc
cmpl
dec
mov
test
jg
adc
jmp
call
mov
test
lahf
add
mov
call
test
xchg
push
inc
mull
gs
int
idivl
fwait
xor
repnz
loope
inc
mov
xchg
jno
mov
iret
adc
pop
mov
leave
ss
sub
shll
repnz
xchg
xor
xchg
sbb
jg
loope
pop
ret
xchg
lock
int3
mov
mov
lea
lahf
andb
sub
mov
imul
dec
bnd
ds
inc
xchg
mov
sub
dec
popa
dec
bound
test
fs
add
aas
test
ja
mov
js
mov
mov
lahf
pop
sub
ds
ret
mov
pop
lea
pop
and
fldt
into
jno
cltd
xchg
jns
lods
mov
int3
daa
cmpsb
add
mov
loop
js
rcrb
loope
mov
cmpsb
subl
jmp
add
adc
jmp
pop
xchg
mov
das
mov
xchg
mov
jmp
sbb
jb
mov
pop
enter
and
pushf
lahf
xchg
pop
imul
jne
lods
movsl
lock
adc
jg
rol
inc
mov
fucom
subl
imul
xor
mov
jmp
sbb
aas
cli
repnz
imul
adc
sbb
imull
push
clc
and
lret
cmp
aas
cmp
adc
les
inc
jge
mov
xchg
repnz
loopne
adc
mov
lret
mov
mov
xor
and
inc
pushf
adc
xlat
sbb
in
sti
cmp
js
pop
lock
push
popa
xor
stc
popa
mov
popf
lds
sub
adc
call
xor
jge
addr16
add
loopne
outsl
nop
xor
fs
int
ret
adc
pop
sub
das
push
dec
add
xchg
or
add
ljmp
cmp
pushf
in
fsts
mov
xchg
bound
repnz
std
mov
imul
push
xor
lds
mov
ficompl
mov
insl
xchg
sub
and
inc
daa
jns
out
xor
negb
mov
mov
outsb
jnp
ds
dec
mov
imul
mov
or
insb
cld
adc
movsb
test
adc
add
push
ss
stc
int3
mull
clc
pop
movsl
pop
ficoml
repnz
push
dec
lret
push
push
popa
gs
and
outsl
movsl
or
cwtl
enter
dec
dec
dec
jle
sbb
xlat
pop
test
adc
scas
pop
adc
dec
in
xchg
repnz
popa
xchg
stos
popf
mov
mov
sbb
jae
outsl
cmp
cmpsl
inc
repnz
push
and
and
enter
mov
jg
push
ja
outsl
jmp
ja
and
fiadds
pop
jne
mov
shlb
pop
test
loopne
mov
adc
and
loope
dec
xchg
sub
jno
orl
fisubs
ror
scas
ljmp
jns
in
pop
pop
xchg
sub
jecxz
std
sbb
arpl
xlat
fldl
mov
jg
imul
inc
mov
ss
add
sbb
test
xor
adc
or
mov
mov
add
cmp
stos
out
ss
dec
outsl
je
cmp
fldenv
clc
pop
jg
dec
ret
shrb
lea
mov
leave
rcrl
jo
jb
pop
cmp
leave
inc
inc
inc
and
pop
ret
push
pop
hlt
push
repz
dec
xor
cwtl
pop
movsl
shlb
sub
fimuls
pop
lret
xchg
cmp
adc
push
lret
jle
fisttps
sbb
popa
outsb
nop
fimuls
push
in
xlat
push
lret
pushf
and
mov
into
pop
lods
test
inc
mov
cmp
shr
mov
pop
mov
add
roll
mov
push
shlb
rorb
sbb
daa
adc
pop
inc
xor
pop
lret
push
sub
lods
clc
sub
sub
mov
sub
jecxz
loopne
subb
lcall
mov
inc
sub
or
hlt
xchg
fdivs
fsubrs
es
or
mov
out
int
fistpll
or
in
mov
cltd
test
pop
popa
sbb
cmpb
imul
test
aaa
or
ret
std
lret
jle
jbe
push
lock
cmpsl
insb
repnz
lds
arpl
sarl
pusha
rorb
xchg
fadd
pop
sbb
lds
popl
out
addl
add
sbb
jge
lret
jne
icebp
inc
add
popl
push
jp
rcrb
fiaddl
and
adc
movsb
inc
ds
cmp
xor
das
jp
sbb
sbb
repz
cmc
ffree
xchg
lds
pop
adc
sub
xor
cwtl
jg
inc
inc
int
cmpsl
shl
aam
and
std
jb
push
imul
xor
in
in
mov
adc
rcrl
adc
mov
rol
popf
xchg
jns
jne
pop
les
call
adcl
sbb
shlb
sub
bound
inc
aam
dec
sub
cmp
cmp
outsb
insb
std
int3
or
mov
push
add
lret
sti
lds
addl
orl
movsl
xchg
iret
adc
popf
push
fprem
jnp
das
cmp
mov
in
popa
scas
das
mov
hlt
jecxz
fistps
inc
shlb
sub
ds
shl
cld
push
pop
add
movsb
pusha
jle
mov
ljmp
sbb
push
inc
test
movsl
adc
sbb
setg
and
jle
scas
das
enter
push
lea
shll
mov
xchg
mul
add
in
adc
mov
movsl
cmp
lods
aad
sub
mov
lahf
sahf
add
or
imul
imul
mov
cmp
lock
movsb
and
xchg
sub
int
adc
in
ret
iret
mov
cmc
in
push
loope
pop
mov
pop
pop
xor
shl
jae
sbb
push
or
ds
or
in
in
fdivl
ljmp
xchg
iret
clc
ja
push
outsb
sahf
shll
sub
incb
mov
bound
lea
fisttpl
data16
jge
out
ficompl
shr
cwtl
push
pop
xchg
mov
nopl
inc
push
dec
push
test
mov
cmp
mov
es
xor
sub
sbb
jo
cld
cmpsb
int3
inc
in
adc
clc
pop
jmp
loop
xchg
xor
out
call
mov
data16
push
pop
in
and
push
inc
imul
fcomi
sub
sub
push
ja
jo
and
out
rcr
pop
mov
add
gs
arpl
cmp
inc
pop
mov
add
xor
lea
xchg
leave
dec
mov
cmp
cmpsb
dec
adc
aas
add
or
std
out
lods
push
dec
loop
mov
jns
cmc
rorl
mov
cmp
call
aaa
iret
sub
push
add
je
cmp
xchg
orl
jnp
or
inc
mov
mov
test
ret
mov
call
or
dec
aam
bound
scas
aam
mov
les
popf
dec
dec
sti
ds
out
xchg
idivl
repnz
push
mov
sbb
out
xlat
aam
sub
sub
call
cmp
roll
call
std
add
inc
rclb
pop
cmp
cmp
in
dec
xor
xchg
mov
jp
or
jno
cs
inc
out
int3
add
outsl
dec
sub
lods
aaa
clc
cs
adc
inc
and
xor
dec
in
and
test
push
sub
push
sbb
nop
ja
jp
inc
adc
aas
mov
push
fsubs
les
mov
push
pop
mov
movsl
and
mov
idiv
xorb
cmc
adc
inc
inc
push
xorb
and
test
dec
mov
and
mov
stos
mov
push
shr
pop
aam
ret
pop
or
fimull
sbb
xchg
fucompp
or
lods
push
fldt
out
lods
jecxz
jb
jle
mov
jne
push
in
loopne
xor
repnz
and
in
imul
dec
das
xorl
dec
imul
or
and
jns
pop
inc
pmovmskb
inc
shlb
pusha
dec
push
cmp
bound
cmpsb
and
sarl
adcl
push
out
sbb
out
sub
pusha
into
enter
hlt
and
push
jo
bnd
xor
pop
lret
shl
je
rcl
int3
lret
xchg
fcmovnu
sbb
fimuls
sbb
xchg
fildl
xchg
mov
out
mov
mov
jb
cwtl
aaa
lret
fdiv
push
es
cld
pop
or
mov
es
mov
xchg
dec
push
ja
fdiv
loope
icebp
and
pop
xor
xchg
pop
test
cwtl
jns
add
js
rorb
cmpsl
mov
add
and
xorl
popf
cs
fdivrs
js
mov
xor
jecxz
mov
inc
jnp
mov
dec
ja
jle
jg
imul
push
popa
data16
aad
or
add
mov
test
lock
nop
fldcw
mov
jbe
lret
pop
ja
push
jne
adc
nop
adc
inc
insl
sahf
jmp
push
std
push
xor
cs
lods
mov
mov
in
in
dec
ret
repnz
js
inc
mov
add
incl
push
sub
sbb
push
rcll
jmp
sbb
call
cmc
call
mov
jb,pn
fs
and
push
test
cmp
test
xchg
imul
push
sub
mov
js
sbb
inc
dec
ljmp
pop
leave
push
out
xchg
lds
insl
loopne
lods
sbb
repz
je
cmp
mov
mov
xchg
push
fidivl
lds
inc
xor
and
idivl
jno
imul
inc
in
shll
xor
in
mov
xor
add
out
add
insl
jl
out
xor
dec
icebp
inc
xchg
sbb
mov
lret
jne
leave
dec
test
addl
adc
daa
xor
and
xor
daa
mov
mov
pop
jne
or
inc
jp
sbb
int
dec
lahf
mov
mov
in
mov
cmp
in
inc
xor
int3
repnz
dec
push
fistps
repz
mov
mov
and
lahf
cmpsb
sub
and
flds
sub
xchg
jle
mov
inc
movb
outsl
loop
dec
enter
int3
adc
push
mov
std
iret
sub
hlt
sub
xchg
or
jnp
ja
test
aas
xchg
fiaddl
fsubl
jae
imul
insl
cmpsb
inc
and
into
jbe
xor
shrb
mov
or
xlat
or
lret
mov
lret
addr16
mov
inc
pop
jge
add
mov
lods
push
fmull
xorl
dec
lock
and
push
gs
loope
mov
jae
rorb
sub
mov
pop
repnz
fsubrs
fistl
loope
inc
daa
xchg
or
jecxz
mov
into
mov
ds
jge
push
subb
fwait
xchg
loope
in
xor
cmpsb
sti
xor
sub
in
sbb
mov
pusha
rorl
stos
int3
fnstenv
ret
xor
mov
jp
lods
clc
adc
mov
std
ja
xor
loop
cmp
loope
scas
sub
out
and
and
fbld
movsl
lock
pop
lods
pop
push
lods
iret
dec
xchg
shrb
xchg
or
xor
in
rep
cmp
outsl
mov
in
jo
xor
mov
movsl
in
enter
sbbl
iret
movl
lret
stc
cmp
das
sti
pop
mov
add
aas
pushl
mov
bound
push
or
add
xchg
rolb
repz
sahf
insl
imul
lahf
dec
out
movb
jb
pushf
ficomps
jg
push
daa
test
dec
lahf
and
test
and
xchg
shll
clc
or
cli
push
cmp
movsb
push
dec
rorb
pop
cmp
bound
mov
mov
mov
test
mov
pop
sbb
cmp
adc
jle
roll
mov
inc
imul
maskmovq
pop
pop
mov
cltd
arpl
hlt
lock
and
scas
out
lea
mov
iret
mov
and
adc
out
mov
mov
ret
fsubrl
push
call
mov
dec
test
lea
adc
adc
xlat
scas
rolb
and
mov
pop
inc
out
shlb
popf
add
lds
push
or
mov
leave
iret
nop
push
pushf
cmp
mov
dec
inc
imul
dec
pop
cs
lahf
xlat
dec
aam
inc
movsl
popf
jns
dec
insl
pop
mov
in
cld
or
cmp
adc
scas
test
test
or
cmp
mov
mov
pop
jo
sbb
ja
add
mov
cmc
rolb
xchg
mov
jbe
adc
adc
add
out
faddl
aas
arpl
lahf
add
xor
loope
inc
loopne
stos
sub
cmp
jae
jno
mov
out
add
adc
aam
mov
nop
mov
mov
std
jo
bound
mov
inc
andb
jge
cli
pop
rcl
dec
sbb
sbb
adc
idiv
ljmp
jne
cwtl
mov
or
adc
jb
push
cmp
cltd
cmc
repnz
filds
jne
aam
ret
xchg
into
pushf
jo
mov
fsub
and
add
jno
jecxz
push
sbb
adc
or
adc
cmpb
xor
jne
xor
cmpsb
aam
int3
mov
pusha
fadds
mull
rol
inc
cmp
mov
adc
hlt
mov
lds
pop
push
testl
cltd
cmc
es
xor
pop
test
sti
inc
xor
pop
test
cs
pop
cmc
out
out
mov
cmc
sub
dec
add
pusha
mov
repnz
sbb
ret
das
nop
mov
enter
loopne
orb
rolb
inc
push
int3
sarl
and
stos
orb
push
stc
mov
test
mov
inc
pop
shrb
cmc
xchg
lods
lods
jg
outsb
pop
dec
mov
add
shll
lret
aam
fucompp
scas
cmp
mov
cmp
out
mov
insb
or
xchg
pop
inc
leave
addr16
adc
roll
shrl
xor
sub
pop
mov
in
add
push
jne
sbb
adc
jmp
inc
adcl
rclb
rolb
push
rcl
cmpl
sbb
sti
mov
push
repz
outsb
push
inc
add
pop
or
or
xchg
loopne
xchg
das
mov
or
outsl
scas
or
cmp
pop
rcrl
jg
pop
out
leave
in
mov
sbb
jns
xor
iret
cmp
xchg
mov
jg
sub
ds
mov
test
and
inc
int3
pop
out
jge
rcrb
or
mov
lret
push
js
or
xchg
mov
into
sbb
or
inc
es
sbb
movsb
xor
dec
mov
imul
jmp
cli
or
aam
sub
out
call
and
incl
sbb
lods
push
xchg
int
jecxz
xor
xor
lea
inc
xchg
mov
dec
rcll
pop
xchg
xchg
dec
bnd
sbb
xor
ss
test
cmc
jb
mov
ss
mov
push
add
sub
ret
loope
stos
mov
outsb
inc
adc
xor
mov
lods
lods
jns
mov
ret
fwait
data16
or
adc
leave
add
mov
pandn
push
cwtl
popa
jmp
fwait
dec
xlat
rclb
push
pop
jnp
mov
sbb
cmp
cli
mov
ss
in
ds
mov
dec
inc
mov
jmp
lea
aas
lea
cmc
imul
in
mov
fildl
roll
lock
int3
pop
jge
in
scas
or
add
ficoms
and
sub
icebp
lods
sub
test
jmp
cs
aam
decb
imul
ljmp
pop
popf
xor
mov
jbe
cli
jge
int3
mov
lret
clc
pop
dec
loope
or
stos
mov
addr16
pop
add
roll
sub
adc
mov
sahf
mov
stc
bound
push
in
pop
rorl
and
and
test
insl
sub
cmc
sti
or
notb
daa
gs
pop
xchg
or
outsb
loopne
mov
fdivrs
jecxz
dec
mov
jnp
out
jb
push
cmp
imul
dec
xor
push
adc
jb
adc
add
subb
das
int3
and
cmp
dec
mov
int3
xchg
imul
sarb
sbb
cmp
push
mov
in
add
aas
aam
ret
push
dec
and
rorb
loop
dec
sbb
sahf
fsubrl
cmp
popa
cltd
xor
in
aaa
mov
jne
push
je
xlat
and
adc
xchg
sub
push
xor
pop
adc
cmp
adc
pusha
mulb
adc
dec
movsl
adc
call
pop
ljmp
push
add
adc
mov
in
imul
das
push
add
push
imul
scas
movsb
push
xchg
push
xor
ds
mov
pusha
out
pop
adc
bnd
add
xchg
lds
add
mov
leave
pusha
imul
inc
push
into
leave
aaa
mov
dec
xor
and
sbb
sub
fmull
and
or
pop
cmp
shr
cmp
adc
push
pushf
ror
jg
xor
add
jo
in
cmp
add
xor
pop
fcomip
or
cltd
out
cmp
pop
frstor
mov
push
dec
ficomps
cmpl
cmp
mov
dec
inc
out
out
js
xchg
ja
jbe
call
icebp
subb
add
adc
data16
test
jmp
add
push
sub
arpl
es
decl
mov
pop
dec
rcll
xchg
mov
and
adc
inc
imul
push
jb
push
jnp
mov
icebp
add
mov
mov
cmp
xor
sub
enter
out
hlt
sub
dec
dec
cmp
jns
nop
les
enter
dec
add
jo
xchg
sub
push
mov
jge
aaa
ss
and
mov
mov
cli
mov
dec
push
ja
cmp
mov
mov
or
adc
and
aad
imul
xor
adc
push
lret
je
mov
ljmp
rolb
mov
iret
in
movsl
xor
jecxz
lea
push
mov
shr
daa
mov
cmpb
lret
dec
das
push
adc
sub
in
jns
mov
pop
ror
nop
xchg
testl
inc
inc
aad
lcall
or
adc
dec
pushf
mov
lds
roll
jbe
ljmp
pop
xor
or
fldenv
out
mov
cmp
js
mov
pusha
sbb
out
cmp
sbb
insl
daa
sub
repz
cwtl
jne
into
and
test
pusha
popa
cmp
adc
inc
lods
sub
xorb
xor
divb
imul
xchg
in
mov
sbb
stos
pop
inc
mov
fmuls
jns
push
scas
sub
push
movsb
xchg
cld
jne
mov
adc
dec
cmp
inc
mov
inc
in
or
std
repz
pop
sbb
loop
sub
idiv
and
repnz
or
cs
mul
nop
push
loope
mov
js
mov
inc
pushf
push
ja
sarl
push
mov
add
mov
mov
inc
mov
xor
pushf
push
and
jno
mov
dec
or
jae
pop
pop
push
mov
js
dec
loop
dec
inc
push
fisubrl
movsl
xor
sub
pop
pop
mov
mov
mov
pop
sbb
xor
test
or
mov
pop
test
xor
clc
xor
cli
mov
ret
inc
in
pop
dec
sarl
imul
lods
add
cmp
fs
mov
pop
ret
add
push
icebp
scas
sbb
pushf
daa
add
adc
mov
loope
nop
jge
cmp
in
lret
add
pslld
xchg
int
cmp
jbe
arpl
mov
rcrb
lahf
xchg
gs
loopne
stos
repz
dec
or
popf
mov
cmp
fsubl
mov
xchg
lds
sub
adc
lds
sbb
pusha
lds
hlt
dec
pushf
inc
mov
sub
adc
push
rol
fwait
dec
cmp
loopne
in
ret
jg
push
call
add
sbb
ret
xor
cmpsb
mov
jmp
push
xor
fdivp
cld
dec
mov
xchg
mov
enter
xor
repnz
lcall
dec
mov
sbb
ljmp
mov
mov
mov
inc
ds
xchg
sti
scas
stos
in
inc
mov
sub
jo
mov
mov
push
repz
shrl
mov
inc
lahf
es
pusha
or
pop
mov
test
and
ret
add
repz
inc
aam
inc
mov
add
out
push
xor
stc
mov
pop
outsl
cmp
stc
loop
dec
mov
jp
cli
scas
leave
test
fs
mov
mov
mov
mov
dec
and
iret
enter
into
xor
inc
mov
aaa
fwait
les
pop
ss
lods
fiaddl
jecxz
dec
pop
inc
and
mov
lock
push
mov
cmc
mov
and
jl
arpl
pusha
nop
lds
shrd
inc
scas
push
iret
bound
movsb
outsl
es
mov
pop
xchg
xor
das
mov
pop
sbb
into
dec
movsl
clc
inc
imul
mov
stos
fmuls
xorb
mov
xchg
fiaddl
fsubs
div
inc
adc
pop
cmp
scas
test
jecxz
int3
in
jge
stc
shll
sbbb
mov
and
xchg
mov
jno
mov
pusha
fistl
aad
push
inc
data16
mov
lock
int3
adc
cmp
shl
xchg
cltd
mov
btr
or
sub
xchg
add
stos
push
inc
add
push
xlat
lods
sub
fsubrs
fs
pop
jg
shll
movsl
daa
add
add
xchg
xchg
pop
divl
inc
in
or
setns
shlb
cmpsl
cmp
sbb
ret
sahf
mov
mov
xchg
leave
adc
leave
and
fcmovnu
xchg
repnz
fistpll
nop
ljmp
test
inc
fildl
pop
icebp
cmp
push
xchg
jo
or
mov
fisttpl
out
xor
stos
rep
mov
pushf
push
ljmp
mov
xchg
inc
out
add
jne
mov
pop
xchg
sbb
cmp
mov
mov
inc
enter
and
cmp
decb
push
push
aaa
ret
push
pop
dec
iret
mov
xchg
jle
ljmp
xor
sub
or
jl
rcl
nop
mov
sti
lods
adc
pop
sub
pop
dec
mov
inc
leave
scas
push
xchg
sahf
daa
jbe
ficomps
xor
sbb
push
xor
xchg
enter
clc
and
ror
inc
int3
scas
cmp
out
pop
mov
int
mov
clc
xchg
cli
orl
fldenv
cltd
fnstcw
dec
ja
add
and
clc
xchg
sub
sub
adc
shlb
scas
cltd
movsb
sub
pop
mov
or
cmpsb
int
mov
and
and
mov
sub
cmpsb
std
sarb
cmp
das
fistpll
add
test
js
mov
dec
in
aad
stos
gs
pop
roll
jl
inc
add
mov
adc
mov
out
addr16
push
rcrb
xor
cmp
mov
outsb
sub
fisubrl
mul
push
push
loopne
test
aad
push
xchg
fucomip
fidivl
arpl
push
lods
insl
sbb
sub
push
and
mov
add
gs
cmp
push
mov
mov
rorl
mov
sti
je
pop
mov
inc
inc
inc
push
mov
popa
mov
jp
in
dec
ja
push
jne
dec
sub
aad
mov
aam
addl
sub
inc
mov
jb
popa
ret
fcom
gs
int3
ljmp
ret
aad
fdivrl
push
mov
je
in
les
test
jmp
lcall
fiadds
scas
cmp
mov
iret
mov
ss
xor
mov
clc
cmp
imul
push
bound
pop
addr16
inc
lock
push
sti
mov
cld
jecxz
outsb
mov
mov
and
ja
sbb
scas
test
xlat
repnz
shrl
in
test
cmpsb
cmpsl
pop
js
sbb
les
aam
add
xchg
xor
les
inc
sub
sbb
cmpsb
loopne
test
inc
leave
test
cmp
int3
sub
out
inc
fwait
add
test
mov
jno
aam
jb
inc
sub
jbe
cmp
loopne
shl
sbbb
mov
pop
imul
mov
push
stc
dec
sub
clc
popa
bound
lea
sbb
sbb
data16
jnp
loope
das
and
ror
popf
imulb
pop
mov
sbb
mov
dec
aaa
in
xor
dec
mov
sub
mov
in
push
jecxz
push
inc
sbb
xchg
jbe
hlt
cli
push
hlt
lcall
dec
shrl
sbb
cmp
insl
in
fcompl
add
fwait
in
sbb
mov
mov
loopne
jecxz
push
aas
dec
int3
aas
sub
push
ret
jb
sbb
xlat
in
test
mov
aam
add
pop
icebp
add
sahf
jae
mov
mov
jb
mov
shrl
test
faddl
cmp
pop
repz
add
adc
adc
and
or
mov
daa
jg
notb
mov
mov
clc
push
insb
jmp
xor
mov
xchg
fwait
popf
cltd
jecxz
mov
mov
push
pop
jle
and
cli
aad
xlat
xor
mov
dec
test
clc
iret
xchg
xchg
mov
dec
aad
cs
pop
addr16
jno
icebp
pop
cli
mov
xlat
xor
xchg
inc
orb
stc
sub
mov
inc
mov
mov
gs
out
mov
lods
push
adc
dec
push
mov
cmpsl
dec
out
les
pop
xorb
out
loopne
inc
bound
cmp
xchg
das
push
in
rorl
dec
mov
xor
iret
aad
mov
push
loope
js
jl
mov
pop
lods
mov
mov
fwait
pusha
jb
push
dec
or
adc
jecxz
into
out
push
sbb
sbb
mov
jb
pushf
ja
pop
or
mov
aaa
push
imul
stc
std
sarl
jnp
shr
pushf
stos
out
xchg
lea
dec
in
and
pop
cmpsb
dec
push
sbb
mov
movsb
es
mov
push
dec
leave
mov
daa
clc
pusha
or
jmp
xlat
xor
inc
xor
clc
and
mov
sbb
mov
fcoms
pop
dec
sub
jbe
and
ret
hlt
adc
iret
adc
movsl
sbb
push
xor
and
mov
mov
inc
cmp
aam
inc
cmp
std
inc
test
pop
jmp
sub
mov
mov
dec
inc
notb
sub
outsl
dec
arpl
push
cmpsb
jns
cwtl
adc
ror
lcall
mov
dec
and
xchg
mov
clc
cmp
shlb
insb
push
or
mov
jmp
sub
xchg
movsl
dec
or
rcrb
xor
es
subb
cmp
ret
xor
iret
fistps
sbb
mov
pop
push
fimuls
imul
jmp
in
push
popa
int3
les
pop
sub
xchg
insl
xor
fdivs
dec
xor
push
jecxz
or
xor
ficoml
jns
std
adc
mov
dec
test
push
lock
fwait
add
jmp
mov
das
xchg
or
add
pop
mov
lahf
ret
xor
jo
arpl
stc
pop
ja
jp
fnsetpm(287
jo
push
daa
dec
lret
out
shl
jb
xor
dec
bt
aad
iret
test
dec
sub
pop
int3
jne
push
sbb
inc
mov
mov
or
and
jnp
ffree
push
orb
pop
movsl
cmpsb
xchg
repz
jne
sbb
fstps
jnp
mov
mov
imul
sub
sbb
sub
xchg
lds
pop
inc
fsub
jle
lds
out
dec
push
jp,pt
jle
cwtl
xchg
inc
sbb
bound
add
xchg
jecxz
or
sbb
xor
jae
inc
push
jne
xchg
add
aaa
in
popa
mov
mov
xchg
push
cmp
inc
mov
mov
mov
jecxz
adc
sti
inc
xchg
or
repz
push
stos
dec
pop
mov
dec
lods
jp
in
xchg
lret
shl
cmp
daa
out
nop
stos
icebp
sub
adcb
fxch
sbb
cs
ljmp
cmpsb
test
mov
lock
pop
mov
and
mov
idivb
mov
push
add
sub
adc
jbe
ljmp
js
cwtl
xor
sub
push
fdivrp
mov
ds
mov
aam
or
adc
cmpsl
loope
add
xchg
ss
mov
repnz
xor
jne
xchg
mov
jb
mov
ljmp
xor
xorb
nop
data16
mov
scas
aad
jb
jns
scas
adc
mov
mov
fimuls
xchg
arpl
push
mov
aam
cmp
push
add
mov
icebp
sub
push
pop
push
aad
push
add
insb
fwait
sbb
out
mov
imul
int3
mov
pop
push
cmp
push
xchg
popa
sub
adcb
pop
mov
pop
and
js
jmp
ret
test
jmp
popa
cmp
jns
out
rorb
outsl
push
popl
sub
ja
pop
push
aas
jbe
mov
cmp
call
jp,pt
and
push
lock
xchg
mov
inc
packsswb
cmp
cmp
clc
es
mov
repnz
sbb
dec
dec
outsl
and
mov
loopne
sub
or
pop
sub
out
jnp
enter
add
mov
pusha
cmpsl
outsb
aas
mov
outsb
mov
adc
out
mov
inc
push
inc
jle
mov
adc
int
enter
test
mov
adc
icebp
fmul
clc
adc
mov
xor
out
aam
jp
push
lret
mov
mov
xchg
mov
testl
dec
push
xlat
je
cld
sub
test
pop
adcl
ret
stos
movb
rorb
pushw
aad
mov
jecxz
sbb
imul
jne,pt
mov
stos
sti
outsb
push
mov
mov
outsb
into
xchg
push
xchg
mov
mov
arpl
cmp
add
les
adc
fwait
sub
inc
sahf
sub
daa
pop
cmc
jb
in
cld
mov
mov
xlat
lock
pop
adc
xor
xor
jns
mov
or
inc
mov
and
sub
cwtl
jbe
stos
cmpsb
mov
call
int3
pop
cmp
arpl
sbb
std
xchg
fdivrp
xor
push
mov
sub
bnd
push
pushf
add
push
int3
jge
insb
push
jmp
inc
xchg
das
int3
lods
xor
xor
sub
sbb
dec
cmpsl
or
repnz
lods
aaa
cmpsb
mov
pushf
test
inc
push
push
xor
jl
mov
and
cld
clc
jg
out
cmp
and
push
xor
mov
inc
sub
test
insb
fidivrs
push
outsb
push
inc
pop
and
mov
or
jno
neg
add
fs
dec
out
jne,pn
lea
xchg
adc
mov
jle
mov
jae
and
popa
and
add
and
cmc
lea
insb
pushf
dec
movb
push
jp
in
outsl
pop
fiaddl
sub
mov
lcall
cli
aaa
dec
pop
mov
bound
insl
loope
cli
mov
push
cs
js
mov
mov
aas
xchg
pop
mov
cmp
int
insb
aam
xchg
push
and
mov
push
jmp
dec
add
aaa
mov
movsl
inc
out
inc
xchg
mov
out
mov
cli
loope
push
in
pop
sub
sbb
stos
mov
int3
and
cmp
push
pop
mov
jb
mov
xor
hlt
adc
xchg
adc
mov
data16
stos
push
sub
mov
push
aam
cld
mov
mov
stc
push
dec
sbb
jae
cmpsb
mov
pop
loop
loope
sub
out
call
fcmovb
fs
dec
out
mov
loopne
popf
jmp
push
mov
dec
push
xchg
ljmp
cmpsl
shlb
popf
lods
xchg
jmp
add
daa
fwait
mov
pop
popa
imul
int3
mov
pop
ss
sbb
loopne
push
fwait
pop
sub
imulb
cmp
and
addl
inc
sarb
repz
adc
loopne
ja
movsb
jb
jns
xchg
ss
jne
leave
pop
jge
je
jle
push
jnp
inc
push
clc
mov
in
pop
bound
mov
inc
mov
pop
sbb
loop
shrl
jmp
and
cs
pusha
in
rcll
or
xchg
out
cmp
lods
sahf
div
cwtl
cmc
les
jbe
inc
or
jno
outsl
xchg
pop
jl
cmp
popf
lock
sbb
cmp
jl
mov
fmul
adc
inc
into
les
xor
aad
xor
add
mov
lcall
mov
test
stos
mov
es
subl
inc
xor
cmp
mov
add
and
adc
push
movsb
mov
pusha
sbb
and
xor
nop
jno
mov
test
in
int
jp
mov
cld
xor
icebp
push
mov
xor
pop
fsubl
cmp
les
ficoml
dec
pusha
lea
out
hlt
ret
jg
mov
inc
sub
nop
pop
scas
jo
mov
repz
sbb
pop
es
add
xchg
leave
data16
pop
dec
xor
imul
inc
xchg
lahf
outsl
push
or
ret
repz
clc
aaa
xlat
test
cs
pop
jp
mov
jne
sub
js
inc
mov
nop
sbb
jo
push
pop
icebp
cmpsl
sub
pop
add
pop
push
jmp
push
sub
faddl
mov
jp
orl
mov
xchg
push
adc
sub
leave
sub
outsl
aam
add
push
push
cs
inc
xchg
inc
sub
out
push
in
shrb
fcmove
push
movsb
xchg
pop
mov
sti
insb
dec
cmp
fwait
scas
mov
stc
inc
rolb
mov
mov
loope
xor
push
sbb
push
xchg
out
mov
ljmp
jo
push
sub
push
adc
adcl
sbb
lret
xor
in
rorl
xchg
out
and
test
dec
jbe
lret
call
lods
push
push
jbe
or
mov
lods
lret
outsb
sub
dec
add
sub
ret
and
dec
inc
outsl
inc
leave
xor
mov
into
cmc
mov
rcrl
pop
sub
adc
push
leave
lock
popa
jp
xchg
icebp
pushf
int3
shrb
outsb
idiv
lock
jno
hlt
lcall
aas
push
xor
lods
test
mov
into
inc
xor
in
gs
fdivr
mov
inc
and
mov
movsb
insl
addr16
xchg
mov
loopne
or
jnp
cmp
clc
xchg
repz
std
inc
sub
inc
enter
xor
out
pusha
and
push
hlt
xchg
mov
mov
test
std
push
jp
sub
push
rcll
inc
cmc
fisttpll
mov
jo
pop
sub
dec
cld
push
sub
mov
inc
shll
ret
aaa
jae
fldcw
jmp
jg
push
push
dec
jo
jb
mov
enter
or
lods
jmp
jae
fsubs
shlb
sbb
xlat
mov
dec
cmp
pop
insl
add
daa
je
xor
loope
pop
test
rol
jecxz
sahf
jne
and
jns
scas
ss
push
std
mov
repnz
call
pop
divl
in
andl
pop
mov
mov
shlb
lcallw
jb
mov
into
push
insl
hlt
cmpsl
scas
scas
pop
mov
in
push
push
incl
cmp
inc
xchg
aas
mov
jge
dec
mov
mov
add
inc
hlt
sub
dec
inc
sub
mov
jg
jecxz
sbb
sahf
mov
inc
cmp
jge
adc
pop
xor
cwtl
jae
or
imul
mov
mov
adc
jno
fs
cs
repnz
sub
jmp
sub
icebp
jae
adc
pop
xor
out
je
mov
test
xchg
aad
cwtl
mov
mov
dec
add
mov
xchg
cs
sub
jno
mov
dec
pusha
out
stos
cmp
push
cwtl
push
sbb
add
ja
pop
in
cmpsb
aad
scas
mov
jmp
aas
out
mov
mov
push
jbe
dec
loop
arpl
add
das
pop
pop
lea
stos
push
and
cltd
inc
icebp
out
idivl
enter
aad
jmp
sahf
xlat
sub
xchg
repnz
jo
adc
popl
pop
and
dec
push
cld
xchg
in
and
inc
jo
faddl
outsb
aad
imul
aad
dec
sarl
sub
mov
mov
out
out
pop
and
mov
or
notb
dec
outsb
mov
jae
push
mov
mov
push
pop
push
repnz
cs
std
dec
roll
or
jle
adc
insb
cmp
mov
sbb
je
rorb
popa
test
inc
push
das
mov
sbb
hlt
call
push
inc
nop
ret
jle
out
loopne
mov
gs
mov
xchg
mov
sahf
mov
sbb
stos
xchg
cmpsb
fwait
jae
lahf
mov
xchg
xor
push
mov
mov
inc
stos
loope
add
mov
pop
xor
xor
mov
push
lods
push
int3
pop
imul
lret
data16
xchg
add
adc
aad
push
popf
mov
gs
push
push
inc
sbb
sahf
outsb
ds
xchg
add
cltd
mov
adc
lea
test
cmp
pop
jecxz
fs
xor
mov
pop
and
mov
lcall
scas
mov
rorl
sbb
cmp
movsb
cld
sub
subb
xor
push
xor
je
lods
adc
imul
sti
imul
hlt
sbb
pushf
imul
mov
loopne
lahf
lahf
jb
adc
cmp
adcb
cmp
into
hlt
mov
xchg
add
fimull
shlb
lcall
xor
pop
inc
je
xor
subb
fstl
outsl
ret
jne
hlt
mov
xlat
aas
fs
insb
ret
sbb
mov
mov
dec
jl
inc
xlat
or
jg
popa
adc
or
xor
out
inc
adc
pop
or
and
sub
adc
gs
jo
inc
gs
sbb
pop
mov
icebp
inc
ljmp
add
jne
out
sub
mov
rorl
jg
cld
push
sub
cltd
cmpsb
shrb
clc
test
add
push
lahf
shll
add
inc
pop
sbb
sub
rclb
fs
dec
sub
mov
test
pop
lret
mov
inc
int
jg
fisttpll
push
sbb
jns
cmpsl
stos
bound
fdivrs
divb
insb
inc
cmpsb
pop
dec
repz
les
lret
and
xchg
arpl
adc
sub
mov
inc
in
push
adc
jbe
sarb
xlat
jle
xchg
mov
hlt
push
rclb
and
cwtl
and
out
cmp
imul
sub
shld
add
push
add
icebp
scas
test
xchg
pop
inc
stc
dec
movsl
jge
adc
push
outsl
in
push
pop
sti
mov
pop
jg
repnz
scas
leave
xchg
or
dec
in
dec
popf
repnz
popa
add
pop
outsb
mov
mov
scas
test
cld
sbb
pop
das
jmp
clc
xchg
rcll
add
jmp
pop
data16
mov
stc
xchg
insl
sti
jno
cwtl
into
add
and
and
sbb
adc
out
mov
xchg
adc
rorl
lods
jp
mov
imul
out
cmp
cmp
add
sub
push
push
sti
addl
aad
mulb
sub
xchg
or
repz
fwait
rcrl
mov
imul
jl
mov
xchg
lret
and
jnp
dec
mov
jmp
jo
shr
mov
adc
fmull
das
or
cmc
jae
pop
in
add
cmp
fwait
aas
lahf
mov
dec
ss
dec
xorb
sti
add
repz
test
cmp
sbb
pop
cmp
mov
jno
imul
or
jne
es
movsl
adc
in
xor
inc
xchg
pushf
stos
adc
sbbl
mov
neg
mov
gs
rcl
sbb
jp
or
cmpl
jge
cmpsb
pop
inc
leave
and
in
stos
and
incb
ret
daa
nop
cwtl
pop
rcll
xchg
pop
cmpl
lcall
push
rclb
xor
orb
ret
addr16
xchg
pop
jnp
stos
nop
cs
or
das
mull
stos
mov
out
xchg
iret
xor
mov
scas
pop
sub
lret
jne
sub
and
ret
stc
xchg
cmpsb
stos
adc
xchg
adc
cwtl
in
jo
repz
inc
mov
std
movsl
in
xorb
pop
mov
xchg
dec
ffree
fisubs
fstl
fdivl
mov
mov
mov
clc
icebp
ljmp
std
ss
stos
ja
inc
cmp
cmpsl
inc
sbb
cli
das
mov
mov
jne
cmc
loopne
push
fstps
inc
imul
cmp
lahf
imul
or
mov
popf
negl
xchg
imul
adc
add
clc
imul
outsl
fnstcw
sbb
cwtl
dec
inc
enter
popf
in
dec
sub
inc
cwtl
ds
popa
jns
push
cmpsl
cltd
dec
sti
out
or
dec
mov
push
pop
add
daa
sbb
jns
jmp
es
int3
inc
lods
stc
cmp
sub
cmp
sub
cltd
mov
into
fcmovnu
jo
ja
mov
cli
or
fabs
sub
sti
jbe
subl
sti
js
repnz
xorl
xor
push
mov
xor
xor
stos
add
sti
fwait
shrl
cltd
cs
jbe
and
mov
cmc
cmp
aad
test
fdivrs
or
addr16
ret
incb
jecxz
insl
mov
xor
mov
pop
cmp
into
mov
lahf
dec
cmpsb
out
add
xchg
push
ds
cs
lret
enter
or
cmpsl
incb
mov
mov
pop
push
push
push
mov
cwtl
mov
cli
pop
sbb
or
pusha
mov
ljmp
pop
outsl
insl
sub
mov
test
int3
lods
or
jp
call
imul
imul
les
xlat
xchg
outsl
icebp
mov
ja
pop
mov
add
mov
cmc
pop
xchg
adcl
mov
lds
outsb
faddl
aad
sti
aam
imul
push
icebp
mov
fidivrl
adcl
push
xchg
and
arpl
adc
adc
mov
faddp
adc
adc
xorl
or
fnsave
adc
xor
fbld
stos
into
movsb
movsl
repz
xchg
cmp
cmp
sbb
stos
or
into
cltd
dec
pop
dec
fistps
sub
mov
mov
ja
sbb
sbb
push
pushf
notl
leave
adc
lods
sub
add
mov
bnd
or
sti
shrb
and
or
or
adc
cld
loope
jae
lea
aas
test
sub
jns
add
filds
imul
jp
inc
divl
jecxz
lds
loopne
xchg
inc
jns
test
lods
ja
xor
mov
xchg
sub
addl
and
sub
jb
jne
pop
mov
dec
lret
out
jbe
push
or
ljmp
sahf
add
ljmp
fcoml
xchg
add
popa
add
xor
popw
sub
faddp
sub
outsl
mov
aaa
push
xchg
repnz
scas
mov
cmp
dec
ret
ret
add
out
sbb
cmp
inc
lret
xchg
and
mov
imul
mov
xchg
cmp
ljmp
add
popa
shl
push
stc
sub
call
test
xor
xchg
pop
cli
adc
test
pop
rcrb
shrl
stc
negl
les
lock
cld
and
gs
cmp
popf
mov
call
fimull
jae
les
pop
pop
fwait
loop
notb
mov
sbb
fwait
mov
xor
flds
jp
in
mov
in
in
test
xor
sub
jge
insl
mov
xchg
add
out
pop
mov
fwait
xchg
push
sub
push
lods
rcrl
or
dec
movsb
repz
adc
sbb
lret
mov
test
ficompl
aam
xchg
add
xchg
xchg
mov
repnz
jnp
xchg
sbb
sub
push
add
popf
dec
repz
mov
jb
sbb
add
mov
mov
pop
in
xchg
pop
lahf
mov
in
pop
dec
push
mov
inc
dec
in
loope
std
push
dec
adc
je
xor
fsubrl
lea
mov
enter
mov
mov
sbb
imul
movsb
dec
xchg
mov
jns
test
adc
mov
cmp
pop
jb
test
pushl
pop
adc
mov
xlat
movsl
ds
pop
push
cmp
in
lds
push
fcoml
fldenv
xor
scas
aam
cwtl
adc
je
es
inc
fdivs
add
pop
lahf
sbb
jns
loope
add
in
in
pop
test
mov
loopne
iret
adcb
scas
lahf
das
add
mov
or
adc
sub
ja
pop
inc
clc
cltd
xchg
add
cmp
scas
inc
xor
dec
xor
sti
arpl
xchg
mov
xor
les
sbb
imul
scas
sub
popa
jl
xchg
leave
cmp
or
ret
inc
movsb
ret
into
test
mov
imul
flds
insb
data16
mov
dec
sub
cmp
dec
call
cmpsb
dec
sub
mov
jns
mov
cmp
imul
sub
xor
daa
or
push
and
scas
add
xchg
ja
mov
rorb
mov
cmc
cli
mov
sub
cmp
dec
and
sbb
test
push
and
mov
cmp
mov
pop
add
loopne
push
arpl
dec
shrb
adc
fidivl
cmp
push
out
jmp
aas
popa
xor
and
dec
cmp
mov
lret
test
outsb
mov
jmp
orl
xor
scas
pop
inc
outsl
adc
push
daa
scas
xchg
test
scas
roll
js
cmp
mov
add
push
adc
push
mov
popf
push
add
cmp
xchg
mov
mov
cmp
cld
sbb
mov
out
lods
ds
cmp
fsub
cmpsl
sub
int
dec
cmp
not
pop
mov
fbld
xchg
aas
fdiv
insl
push
jbe
sbb
mov
push
dec
dec
mov
mov
push
rclb
pop
push
mov
cs
inc
int
mov
in
call
ds
hlt
push
xchg
mov
icebp
mov
popl
lahf
and
es
cmp
fidivrs
pop
xorl
mov
fmul
mov
and
push
dec
cmp
add
add
addl
sub
lods
in
shl
mov
pop
repz
jp
sbb
or
jmp
stos
push
push
xchg
orb
test
in
mov
aaa
js
shll
xchg
fwait
and
out
cmp
fxch
dec
bound
xor
jbe
mov
into
insl
sub
fistps
test
fnstcw
cmpsl
xchg
lcall
lds
pop
jns,pn
mov
cmp
push
je
ljmp
push
xorb
pop
in
inc
fcmovnu
mov
fbstp
testb
adc
and
add
packsswb
add
cltd
xchg
repz
cltd
mov
jg
add
movsl
int3
loope
mov
int
sbb
inc
push
test
inc
dec
cmp
test
and
jne
fcomps
jae
orb
pop
inc
jge
xchg
sub
mov
fbstp
andb
mov
in
sub
cmp
aad
arpl
cmp
xor
adc
in
adc
adc
add
dec
cmp
fldcw
enter
xchg
xchg
lods
gs
lcallw
add
in
loop
xchg
inc
aad
pop
adc
push
mov
jle
movsl
cmp
inc
mov
aad
cmpsl
ret
repnz
pop
jne
jl
or
es
jo
push
rclb
in
enter
cmp
ljmp
loopne
cwtl
cmp
vmwrite
jae
dec
cmpsl
imul
adc
jmp
ds
jns
icebp
pop
jmp
add
mov
sahf
imul
xchg
shl
add
iret
lcall
and
mov
jns
push
pop
test
mov
mov
notb
addr16
lods
pusha
pop
rcrl
or
cld
and
cmp
xchg
mov
xchg
std
js
mov
dec
nop
cmp
fimuls
sbb
dec
outsl
mov
rcrb
fisubrs
sarl
ss
mov
test
in
sbb
repnz
or
fcomps
call
insb
icebp
mov
cli
mov
sub
repz
dec
pop
pop
mov
and
test
mov
dec
sub
stos
push
dec
in
test
or
and
add
xlat
ss
int3
jp
bnd
sub
cmp
orb
sti
pop
rol
cmp
adc
out
jb
mov
mov
cmp
fdivl
ljmp
xor
outsb
lods
movsl
pushf
mov
sbb
pusha
repz
xchg
pop
test
pop
outsb
stos
lock
cwtl
add
xor
mov
push
lds
fstp
adc
fcmovu
push
ret
dec
stos
int3
mov
lods
fmul
mov
xchg
pusha
add
jbe
sbb
js
xchg
and
cs
push
test
sub
movsl
xchg
xorb
or
xchg
popa
jle
lods
inc
aad
xchg
div
and
xchg
dec
push
cwtl
mov
daa
fdivrs
in
pop
dec
pop
inc
push
aam
jmp
out
pop
pop
sbb
add
popf
mov
adc
push
insl
xchg
repnz
dec
or
mov
inc
mov
arpl
loop
les
push
movsl
jo
dec
ljmp
push
adc
fdivs
hlt
adc
cmp
int
scas
insb
pushf
les
push
mov
lods
lea
or
push
out
repz
cli
rcrb
fnstsw
inc
int
out
scas
add
std
xchg
or
shlb
fiadds
xor
into
sub
xorl
repnz
xchg
lods
fadd
sbb
push
imul
subb
ja
jne
push
std
dec
imul
pushf
out
lret
jne
lret
cwtl
jmp
sarb
test
mov
ljmp
arpl
jb
adc
push
mov
add
xor
adc
popa
push
add
dec
in
gs
and
ficompl
lods
mulb
push
repnz
pop
mulb
xchg
cmp
push
fists
xchg
inc
faddp
mov
cs
add
cs
mov
sahf
mov
fs
dec
ret
out
enter
hlt
in
aam
subl
dec
popa
push
fdiv
pop
iret
in
add
fs
lods
mov
xchg
fimuls
push
jb
mov
jmp
or
in
jl
pop
in
jbe
arpl
cwtl
cmc
inc
push
jne
or
popa
sahf
mov
lret
shrl
movsb
popa
push
and
movsl
lret
pop
xchg
fs
scas
stos
fistl
xor
stc
push
lods
mov
out
stc
lcall
mov
roll
cmp
jne
jle
fsubrl
aam
add
inc
insl
inc
mov
mov
stos
dec
hlt
cwtl
mov
dec
inc
mov
or
add
inc
rorl
out
jno
xchg
jne
sub
mov
repnz
add
enter
and
jle
dec
enter
rolb
fstps
xchg
fsubp
sbb
bound
xchg
xorl
aam
cmpsl
push
mov
insb
mov
sti
sub
rol
or
ljmp
push
or
shrl
inc
add
or
mov
adc
cwtl
test
pop
in
ja
daa
out
andl
push
jae
xorl
sbb
jae
test
inc
push
push
inc
xchg
mov
sub
adc
mov
or
mov
mov
mov
inc
adc
jl
fistpll
popa
pop
dec
pop
stos
pusha
pop
rsqrtps
iret
mov
repz
or
sti
xchg
and
xlat
xchg
mov
daa
xchg
out
daa
sub
mov
shlb
popf
in
stos
jle
xchg
push
in
dec
xchg
add
sti
rolb
adc
mov
fldenv
mov
lds
jp
psubd
cmc
test
cli
cmp
cltd
popf
std
mov
sbb
pop
les
and
inc
push
popf
sbb
adc
cltd
dec
sbb
test
rclb
loope
pop
mov
pop
mov
or
insb
xchg
in
pop
notl
scas
pop
cmp
ss
les
xchg
mov
inc
mov
pop
adc
xchg
dec
mov
loopne
addr16
sub
ret
inc
ja
add
cmp
adc
dec
inc
sbbb
xor
mov
inc
orb
mov
pop
or
jg
xor
xchg
add
sbb
popf
jnp
int3
inc
mov
mov
fiadds
pop
inc
aas
adc
cltd
orl
mov
and
popf
pop
movsb
rcrl
sub
mov
imul
xchg
hlt
scas
push
mov
imul
pop
xchg
jbe
jp
push
xchg
add
negb
aaa
jl
out
pushf
out
cwtl
jp
cmp
hlt
out
mov
aaa
or
mov
xchg
pop
adc
dec
xlat
lahf
jno
outsl
mov
stos
xor
add
std
push
pusha
push
or
pop
int
nop
rcrl
mov
movsb
stos
hlt
jae
push
aad
and
cmp
std
xchg
or
adc
fldl
mov
add
sub
aas
ja
scas
mov
loope
and
pushf
dec
stos
or
mov
xchg
jnp
xor
mov
js
mov
pop
ret
out
int3
test
cmc
pusha
fnsetpm(287
xchg
sbb
mov
xlat
push
add
push
shrl
cmp
sub
mov
xchg
jae
ret
int
xor
xor
dec
or
cld
shrl
fbld
mov
fcmovb
test
mov
adcl
aaa
mov
push
mov
mov
pop
pop
xchg
inc
stc
mov
cmp
popf
sbb
out
pop
push
jmp
jno
push
cmp
fistpl
jns
adc
jge
sub
mov
xchg
adc
xchg
push
sub
pop
cmp
sbb
addl
out
nop
and
dec
pushf
into
dec
scas
pushf
sub
xor
pop
dec
or
mov
mov
in
ret
adcb
mov
js
fstps
pop
in
and
pop
jg
aaa
mov
imul
in
sbb
out
push
and
fdivrl
xchg
into
icebp
jmp
push
in
inc
mov
pop
sarl
in
sbb
mov
mov
fcompl
jns
push
pop
les
adcl
mov
je
pop
nop
ljmp
pop
and
and
les
enter
pop
lahf
lahf
dec
sahf
sub
push
lea
outsw
fsubl
sbb
sbb
or
inc
mov
or
jl
xor
fidivl
hlt
repnz
in
adcb
push
fs
daa
nop
shlb
mov
mov
sbb
and
sahf
stos
xor
in
std
js
sarl
iret
and
sahf
gs
sti
icebp
jae
iret
jo
pop
add
push
xor
rcl
sbb
add
test
pushf
adc
and
lea
cmpl
and
sbb
jmp
add
scas
jle
lahf
jecxz
pop
pop
ja
test
jecxz
sub
rorl
dec
lock
fnstcw
loope
shr
test
mov
fcom
in
lods
mov
inc
dec
xor
lret
adc
aam
cmc
stos
shrl
ljmp
lds
punpckhwd
fs
cmpsl
out
hlt
lahf
adc
sub
mov
scas
pop
ljmp
cmp
sbb
pop
je
lret
sbb
lock
mov
shrl
xchg
popf
in
adc
push
or
sbb
add
mov
xchg
mov
lea
mov
add
mov
add
mov
mov
and
jg
and
push
lcall
push
ds
mov
insb
adc
sbbb
add
dec
daa
cwtl
cmp
mov
test
xlat
pop
jne
lds
repnz
fwait
je
xchg
or
outsl
ret
fstl
popa
sbb
inc
das
add
aaa
outsl
push
cmc
scas
xchg
shl
decl
dec
orb
loopne
cli
jmp
cmp
fldl2e
popa
push
loop
std
jle
and
rcr
lods
xor
push
push
pop
or
clc
jbe
lods
cmpsb
and
pop
cmpsl
pop
sbb
bound
hlt
arpl
out
sbb
cmpsb
pop
inc
adc
xor
leave
jno
imul
test
jae
add
loope
and
int3
xchg
clc
sbb
inc
pop
xchg
jl
jbe
sbb
sub
add
dec
xor
add
dec
in
into
push
push
dec
pop
imulb
xor
clc
push
jns
mov
push
out
sub
aam
or
mov
push
adc
mov
cwtl
inc
cmc
xor
mov
add
pop
pushf
fnsave
or
arpl
inc
loopne
testl
rolb
js
test
insb
inc
fcmovne
jo
rcrb
cmpsb
xor
outsl
sbb
into
adc
in
cltd
inc
notl
scas
push
cwtl
mov
lds
mov
pop
inc
xchg
mov
sub
popa
clc
sbb
mov
mov
jge
jns
bound
jmp
mov
sbb
jno
push
push
addr16
andb
lock
lods
pop
ret
out
pop
push
in
insb
outsl
cmp
add
jge
inc
mov
pop
add
push
mov
sub
pop
mov
pop
mov
aas
clc
mov
mov
rcrl
icebp
or
mov
sti
sub
push
dec
or
mov
ja
fld1
xchg
test
mov
shll
mov
hlt
in
ja
adc
or
push
bound
pop
mov
mov
shll
jp
outsb
inc
sub
icebp
jmp
mov
cmp
pop
jno
lods
jp
rcrb
add
lret
sti
xchg
pop
insl
mov
dec
or
sub
xor
push
mov
xchg
and
and
xor
sbb
sub
pop
mov
aas
cmp
outsb
test
in
sub
adc
sbb
inc
lock
sahf
sbb
mov
push
adcb
mov
es
add
scas
cmp
ss
scas
stos
mov
push
idivl
sub
imul
or
add
sub
ljmp
pop
push
shl
mov
leave
adc
aad
lods
xchg
mov
mov
and
or
leave
xchg
ret
pop
pop
mov
xchg
adcl
ss
test
push
dec
notb
pop
subl
shll
lods
jns
cwtl
pop
pop
mov
lods
push
xor
cmc
lock
fcoms
fmuls
xor
daa
lret
push
loope
pop
push
mov
stos
xor
cmpsb
test
scas
cli
aam
imul
js
pop
cld
xchg
sub
inc
or
ss
xor
aam
jl
or
pop
push
fnstsw
lock
test
testl
or
add
mulb
cmp
test
sub
addr16
inc
pop
mov
jl
jo
inc
pop
mov
stos
xchg
mov
cmpsl
add
inc
cmpb
js
xchg
movsb
ficoml
jl
sbb
mov
inc
pop
lahf
aas
sahf
in
inc
push
push
dec
arpl
mov
insb
mov
xlat
push
sbb
mov
jp
in
movsb
insl
sbb
jno
ds
pop
dec
mov
push
sub
ds
test
ja
sbb
in
test
out
dec
dec
je
imul
cmc
mov
mov
mov
sbb
jecxz
repnz
inc
push
pusha
sbb
arpl
std
fdivrl
dec
test
mov
jp
in
enter
inc
jl
int3
and
mov
sbb
jnp
adc
xchg
adc
fwait
add
lcall
lcall
mov
mov
dec
outsb
icebp
in
add
xor
movsl
and
call
mov
sahf
jb
fcomps
push
mov
hlt
js
jns
add
or
test
mov
out
scas
scas
test
mov
jle
ss
inc
add
jmp
push
mov
mov
shll
ja
cmp
or
arpl
push
mov
lahf
sub
xor
insl
out
lcall
adc
mov
mov
enter
stos
jge
xchg
scas
inc
xor
gs
popf
jp
outsl
add
jl
sahf
or
mov
aam
xor
ret
cmpsb
adc
inc
scas
test
imul
push
xchg
aaa
popa
std
sbb
xor
xchg
pop
push
jne
fildll
ja
mov
pop
add
aaa
fadds
jo
gs
loop
pushf
adc
int3
imul
enter
test
add
fstpt
out
jp
data16
ds
pop
insl
test
enter
mov
fcoml
jo
sub
ret
popa
dec
fs
in
lcall
in
das
pushf
fadds
out
and
sub
cmc
cmp
gs
jb
cwtl
aam
outsb
hlt
repnz
xchg
and
push
pop
leave
adc
clc
jp
pusha
mov
push
jmp
pop
and
aad
mov
adc
lret
inc
adcb
sahf
nop
pop
rorb
xor
jae
mov
or
shll
inc
shl
loopne
inc
incl
push
incl
pop
cmp
xchg
jmp
cld
inc
xchg
daa
mov
fcmovnbe
sar
les
mov
pop
jp
mov
ljmp
pop
leave
mov
es
sbb
xlat
add
insl
fcoml
pusha
cmp
or
mov
sbb
repz
iret
jmp
jl
sbb
push
or
into
rcl
hlt
sub
add
ret
and
lret
lods
jbe
imul
push
fistps
xor
ror
imul
add
loope
jnp
push
and
fdivrp
cmp
mov
loop
call
fiadds
subl
push
sbb
addr16
cs
fwait
dec
into
xor
in
jbe
mov
clc
int
repnz
mov
add
cmc
sub
and
gs
cmp
out
loop
xlat
mov
out
js
das
cmpb
mov
pop
add
cmp
shlb
pop
adc
loop
inc
lds
pusha
shll
mov
jg
jg
jg
out
xchg
xchg
push
jo
mov
lods
scas
inc
call
insb
inc
negb
mov
mov
das
aaa
cmpsb
jp
insb
leave
enter
and
test
mov
pop
pop
adcb
or
movsl
test
lock
cmpsb
xchg
rolb
sub
ret
fstpl
insl
nop
sub
xchg
push
ret
push
add
test
scas
jns
cmpl
pop
mov
fcmovu
adc
lods
push
call
bound
in
pop
push
pop
jp
sti
xchg
jbe
sub
in
push
test
addr16
sub
ss
pop
in
add
xor
jo
call
pop
xor
pop
outsb
cmpsl
mov
inc
mov
lcall
xchg
mov
popa
jbe
jle
or
sbb
bound
add
push
imul
mov
test
in
icebp
mov
xchg
call
clc
and
lcall
adc
push
insb
out
and
push
js
sti
lock
sub
ss
push
inc
mov
inc
inc
inc
aam
pop
sub
jo
iret
add
mov
pop
aad
jp
push
aam
pop
jmp
call
push
add
push
mov
lods
xchg
movsl
xorb
dec
push
out
push
cmp
mov
sub
mov
mov
add
aam
js
jb
pop
into
roll
daa
inc
xchg
mov
les
mov
idivl
data16
lock
mov
test
sub
push
inc
add
cmp
dec
addl
mov
and
push
mov
or
sbb
cmp
and
pop
js
pop
les
mov
inc
movsb
scas
out
addr16
xlat
addr16
cli
outsl
cs
cmp
jnp
sbb
aaa
ret
xor
mov
sub
adc
iret
sahf
scas
adc
jecxz
popa
dec
sbb
scas
or
in
sub
fnstsw
daa
sbb
sahf
out
and
dec
xchg
push
in
cmp
repz
int3
loopne
cmpsb
push
mov
xor
adc
hlt
push
jnp
andb
iret
adc
mov
sbb
in
mov
pop
lea
js
cs
out
mov
stc
add
push
cld
dec
mov
push
ds
lods
lods
push
xchg
inc
jmp
cmpsb
scas
mov
xor
mov
aaa
pop
mov
ret
fmuls
xlat
std
jo
popa
mov
and
lahf
inc
fbstp
or
push
dec
add
cltd
cmp
adc
or
lods
mov
mov
xchg
pusha
ds
cmpb
sbb
pop
in
inc
push
imul
push
outsl
and
repnz
movsl
push
pushf
in
mov
pop
ss
xchg
in
lret
es
sbb
mov
or
dec
xor
or
sbbb
enter
mov
xor
gs
aas
or
jecxz
inc
hlt
mov
cld
out
fists
or
xor
ret
outsb
fstps
sbb
lret
xlat
xor
mov
fidivs
in
sahf
push
ja
insl
nop
addl
mov
ret
add
mov
sbb
stos
push
fcmove
sub
rclb
jp
mov
lock
pop
add
data16
dec
jmp
hlt
xchg
sub
sbb
and
andl
fwait
xor
sub
sub
mov
push
sbb
add
add
or
mov
and
sbb
sarl
lret
inc
jbe
jb
sub
xchg
fwait
fwait
mov
fmul
ficomps
lods
nop
sub
lock
push
lcall
push
inc
push
mov
dec
inc
repnz
jns
add
out
arpl
sbb
xchg
icebp
negb
call
cmp
lret
dec
add
mov
xchg
pop
lds
xchg
adc
popf
pop
jbe
mov
sbb
mov
aam
push
fldcw
insl
push
xchg
mov
jae
jno
sahf
mov
pop
imul
pop
add
in
stos
nop
dec
lods
cmpsb
sbb
rcrb
mov
or
popa
cmp
sbb
inc
mov
mov
imul
scas
scas
jmp
scas
mov
movsl
mov
pop
dec
sbb
seto
or
jp
bt
sbb
add
mov
adc
mul
gs
jecxz
lods
push
insl
xor
ret
repnz
xor
adc
jne
dec
outsb
out
sbb
sbb
enter
sub
je
scas
xor
sub
jb
es
in
cmp
dec
xchg
aaa
xchg
sub
fildl
rcrl
scas
idivl
jle
mov
add
adc
das
cmc
pop
or
loope
mov
aad
push
out
bound
pop
shlb
lret
sub
mov
pop
pushf
adc
mov
pop
xchg
pop
lret
pop
jb
adc
out
jecxz
push
dec
lea
mov
mov
fnstcw
shlb
and
sub
pop
bound
add
gs
insl
jae
cli
jge
jo
movsb
lahf
loop
insl
orl
insb
popa
pinsrw
mov
test
scas
adc
mov
sbb
sbb
mov
les
cltd
jmp
mov
xchg
or
mov
jbe
cli
push
sarb
sub
aas
sbb
pusha
push
mov
mov
xchg
das
mov
int
xor
clc
out
or
in
xchg
aam
push
jl
clc
add
and
adc
call
xor
les
in
jecxz
cmp
fwait
lret
rcrb
or
push
popf
aaa
adc
into
add
cmp
add
ficomps
fbld
negb
and
xor
popa
pop
sti
sbb
data16
jmp
pop
sub
imul
and
jb
push
xchg
add
push
hlt
imul
push
sbb
mov
push
mov
mov
add
and
xchg
sbb
mov
lods
sbb
jge
dec
push
and
mov
lret
push
dec
movsl
stc
lods
xchg
ds
loopne
or
sahf
cmp
xchg
lret
or
into
sub
mov
aaa
in
fcom
or
jb
mov
mov
pop
fcomps
push
loop
sbb
sub
loopne
shrb
das
out
xchg
sub
pop
cmpxchg
xor
and
rcll
into
insl
cli
loopne
dec
rcrb
clc
jo
jge
mov
dec
adc
xchg
and
and
adc
fninit
and
cltd
mov
add
shll
sbbb
mov
mov
into
lods
cmp
xor
add
xchg
mov
cmp
movsb
addl
pop
jmp
push
fstpl
jno
mov
sbb
bound
mov
inc
push
jl
cli
pop
movsb
add
fistl
lea
and
data16
add
inc
xchg
nop
movsl
push
push
sub
and
jns
pushf
cmp
mov
and
ss
mov
inc
mov
call
mov
mov
inc
cmp
sbb
push
push
add
jno
or
xchg
lahf
iret
fsub
in
clc
fmuls
or
adc
and
xor
call
push
inc
out
sbb
das
fisttpll
mov
loope
or
jne
mov
out
add
sbb
fcom
dec
pop
rclb
xchg
cmpb
and
daa
inc
mov
repnz
fwait
dec
ljmp
ficomps
push
jecxz
mov
fldenv
jo
or
sbb
and
in
jne
cld
stos
mov
xchg
cmp
push
mov
test
fstps
add
lahf
push
insb
adc
sbb
lods
mov
cmp
or
xchg
imul
ljmp
cmp
das
sbb
imul
inc
stos
ds
add
mov
push
es
xchg
leave
mov
and
and
pop
sub
out
outsl
dec
mov
xor
popa
in
fcomps
pop
sti
push
popf
and
pop
loop,pt
sbb
into
sbb
xchg
test
cs
pop
add
sbb
scas
pushf
cmp
mov
sub
fnstcw
rclb
mov
mov
leave
push
fildll
test
xchg
outsl
jns
lock
jns
fmull
mov
outsl
dec
jnp
xchg
enter
mov
out
push
fsubl
adc
lret
cmp
or
sbbb
loop
lcall
stc
popa
aaa
add
in
mov
paddusb
adc
mov
dec
push
imul
push
jmp
mov
mov
push
xchg
jp
call
lea
sahf
aaa
adcb
fiaddl
jg
lock
or
xor
jl
push
add
and
sbb
outsl
mov
sub
imul
pop
outsl
jg
xor
push
pop
xor
into
fsubs
and
sbb
adc
pop
inc
xlat
test
andb
push
hlt
xchg
out
std
imul
std
sbb
dec
les
out
mov
aaa
jno
and
mov
jb
inc
es
pop
inc
stos
sbb
dec
mov
sbb
popa
cmpsl
out
xlat
push
push
cmp
dec
out
cmp
je
int3
loope
push
shrb
jl
mov
loope
and
fwait
pop
lock
decb
addr16
pop
in
movsb
ficomps
movsl
ja
push
in
lods
fwait
movsb
test
xlat
adc
and
stos
or
sub
std
int3
stos
mov
dec
push
pop
mov
scas
push
outsb
mov
int
inc
xchg
pushf
and
sarl
lret
cmp
cmp
stos
dec
repz
fucomi
sbbl
mov
subb
adc
scas
in
adc
xor
jp
or
push
leave
pop
sti
pop
push
popf
sbb
sub
nop
dec
mov
cs
push
lcall
pop
push
iret
stos
insb
dec
fwait
cmp
enter
es
cmp
xchg
divl
je
loopne
sbb
aaa
inc
xchg
sbb
pop
mov
neg
mov
lret
or
in
jne
jg
cmp
cmp
sbb
or
pusha
inc
ret
inc
arpl
dec
push
das
or
test
sbb
movsl
mov
mov
fstp
divb
subb
mov
mov
fstpt
adc
mov
pop
ficoml
inc
or
mov
imul
test
iret
fnstcw
hlt
mov
dec
xlat
push
dec
scas
sysenter
aas
std
xchg
mov
into
setnp
test
fsubrs
cmp
pop
jo
or
outsl
inc
inc
pop
scas
xor
imul
cmpl
fldl
inc
pusha
repnz
mov
popa
mov
test
gs
lea
pop
bound
add
xchg
aam
pusha
cmp
aaa
dec
enter
pop
pop
sarb
adc
cmp
rcl
jne
sub
fimull
mov
lds
add
lret
ds
addr16
jle
sub
push
or
inc
jb
xor
dec
and
fwait
jle
js
fisubs
movsl
push
pop
fsubr
dec
lret
out
scas
jae
cmp
rclb
rorl
cmp
mov
mul
xor
or
ret
pushf
test
popf
jbe
lea
test
mov
sti
sbb
cltd
fstps
lods
ds
push
outsb
inc
idivb
loop
enter
fcmovbe
sbb
mov
xor
or
lods
add
cld
jno
nop
inc
mov
jg
test
inc
sub
sub
cmpsl
adcl
push
out
xor
ret
jnp
jb
dec
or
push
mov
lret
pusha
shl
xbegin
cwtl
add
jnp
mov
jns
das
and
xchg
push
or
nop
aam
call
xor
dec
aaa
pop
mov
mov
cmp
pop
jp
xchg
xchg
stos
or
shll
adc
aas
mov
cltd
pop
push
es
test
cmp
fwait
inc
mov
stos
jge
scas
shr
stc
loop
loope
ficomps
mov
xchg
push
or
or
out
imul
ss
mov
scas
pop
bound
enter
mov
into
xor
xor
xchg
iret
lods
pop
mov
pop
clc
jle
in
pusha
fs
add
mov
cmp
mov
sub
in
dec
das
mov
jb
mov
and
jo
push
and
inc
and
adc
cmp
insb
push
jg
stos
sarb
push
lcall
icebp
inc
jg
nop
popf
icebp
jg
dec
out
sbb
negl
sarb
movsb
adc
jnp
sbb
fld
cmp
pop
sub
pop
cltd
mov
push
mov
into
je
icebp
xchg
cmp
mov
frstor
mov
ss
ret
je
ds
pop
add
lret
nop
adc
insb
popf
fsubr
pop
ret
loop
mov
lahf
cmp
scas
xchg
js
dec
arpl
cmpb
add
lods
insl
imul
loope
fscale
push
sub
push
pop
mov
pop
pop
fdivl
inc
loopne
adc
int
es
push
sbb
out
xor
lret
rol
arpl
fistpll
or
repz
xchg
cmp
pop
push
int
fisubs
call
cmpsb
push
pop
mov
insl
daa
xchg
fistl
jp
and
jns
fcompl
xchg
in
aad
in
adc
adc
inc
inc
cs
aas
call
imul
call
aas
lods
pop
into
mov
repz
and
push
std
imul
repz
lods
out
sub
mulb
gs
mov
pop
repz
js
xchg
and
sarl
mov
cmp
cld
ja
test
dec
fs
fcomps
xor
dec
test
dec
jmp
pop
adcl
imul
lahf
jne
xor
mov
jecxz
jge
movsb
cmp
inc
sub
stc
pop
stc
mov
out
sti
jb
lods
mov
xchg
in
repz
out
mov
mov
faddl
mov
jb
adc
lods
add
nop
mov
add
popf
stc
pop
adc
outsb
pop
iret
daa
dec
mov
xchg
mov
mov
mulb
ds
fcoms
mov
fimuls
mov
cmp
outsl
and
jae
xchg
jmp
add
lret
xchg
jl
mov
std
daa
inc
pop
sub
lcall
call
hlt
mov
rcl
mov
lock
cli
pop
ds
pop
jecxz
imul
jnp
push
mov
js
shll
fdivrp
outsl
mov
jnp
or
outsl
jnp
rorl
jno
xchg
sarb
pop
mov
cmpsb
ret
std
xchg
or
xchg
mov
sbb
lods
loopne
mov
add
or
jo
lret
mov
jmp
sahf
les
leave
cmp
sbb
dec
mov
cli
xchg
fstl
cld
cld
cltd
call
jg
stos
sahf
push
stos
lret
fcmovu
push
leave
push
push
cmp
loope
inc
je
andb
mov
gs
adcb
cmpsb
dec
and
mov
xchg
test
adc
in
mov
cmp
test
cmpl
xor
jmp
sbb
addl
bound
addr16
mov
out
sbb
mov
xchg
and
frstor
mov
int
into
ja
std
aad
leave
mov
sub
movsb
mov
sbb
pop
andb
jp
mov
lds
push
jl
push
fisttpl
xlat
ds
sub
outsb
pinsrw
stos
mov
rorl
clc
outsl
jno
push
andl
lods
mov
fimuls
mov
or
inc
lods
ja
mov
int
or
xor
data16
lods
dec
pop
sub
pusha
mov
jp
pushf
mov
in
push
into
arpl
fistpl
pop
jbe
ja
mov
inc
cmp
movsl
pop
popf
push
cltd
sti
mov
hlt
mov
lea
mov
fstps
daa
test
pop
cli
imul
lea
fisttps
pusha
adc
jecxz
aaa
repnz
add
add
xor
idivl
xorb
mov
xchg
je
or
sti
out
inc
into
fcompl
fstp
in
or
insb
mov
daa
sbb
sub
popa
mov
adc
enter
adc
sbb
and
fisttpl
xchg
into
mov
sub
mov
addr16
cs
dec
cmp
xor
or
sahf
add
xchg
shrb
sysexit
mov
adcl
jae
xchg
pop
popf
inc
enter
popf
pusha
pop
in
cmc
dec
dec
sub
cs
fldl
xor
jecxz
pushf
cwtl
cmp
repnz
test
inc
mov
cld
iret
cmc
imul
arpl
gs
add
rcrl
mov
push
rorl
dec
sbb
xor
sbb
push
inc
jmp
rorb
test
ret
pop
xchg
or
negb
cmp
add
sub
mov
sarb
inc
call
jge
add
xchg
rcrb
lcall
test
pop
fisubs
out
loopne
xlat
push
dec
dec
test
push
popf
ja
rclb
inc
xor
arpl
xchg
sbb
dec
leave
mov
stos
and
jge
insb
mov
jge
sti
enter
dec
lods
add
xchg
jecxz,pn
xchg
fsubrl
inc
mov
mov
dec
pop
cwtl
icebp
cwtl
mov
push
fisttpl
cmpsl
mov
movsl
adc
xchg
or
outsl
add
stos
xor
lods
stos
pop
mull
or
sub
lods
fcmovu
dec
push
idivb
or
test
paddsb
test
sti
and
adc
shlb
pop
push
jae
loope
shlb
cmp
in
mov
movsl
shll
es
jbe
mov
std
xor
or
imul
aas
cld
cltd
push
lods
xor
adc
hlt
mov
push
int3
loopne
hlt
or
mov
mov
sarl
mov
lds
icebp
and
repnz
dec
xor
pusha
lods
out
faddl
das
outsb
jle,pt
ds
aad
loope
cmp
paddusw
push
xchg
fiaddl
add
in
jp
or
cli
sbb
push
mov
add
push
adc
or
insl
push
inc
mov
stos
fstpl
xor
pop
aaa
test
xchg
pop
mov
enter
jp
sub
xchg
push
andl
fisubrs
daa
in
aam
cmpsb
fwait
call
push
pop
dec
into
rcrb
xor
std
cs
push
dec
jge
inc
inc
sub
add
and
scas
movsb
xchg
mov
notl
mov
test
jmp
movsl
ljmp
dec
push
push
inc
add
push
pop
push
stos
roll
push
push
rcr
jp
sub
fidivl
push
repz
clc
out
in
inc
rorb
shlb
loope
and
pop
push
loopne
lds
aas
lds
fisubl
add
test
cmc
xchg
mov
pusha
movsl
mov
mov
push
push
push
lcall
cmp
add
bound
xor
imul
push
mov
push
mov
push
aad
jle
jmp
mov
ss
fistps
pop
pop
xor
inc
sbb
xchg
ret
sahf
ret
lock
rolb
mov
mov
mov
pop
mov
lcall
faddl
and
mov
lret
jge
lods
dec
cmp
hlt
test
lret
and
das
fstps
xchg
xchg
lcall
aas
xchg
xorb
nop
jae
pop
dec
test
ds
mov
out
hlt
and
rorl
xchg
pushf
cmp
mov
dec
lods
jge
jmp
sbb
push
dec
inc
pop
in
sbb
stos
roll
mov
push
andl
xchg
sbb
pop
cmp
sahf
mov
mov
stos
mov
xchg
pushf
lods
nop
cs
cmp
xchg
mov
mov
sti
mov
or
arpl
js
das
mov
pop
es
dec
dec
push
arpl
xor
pop
pop
dec
shll
aam
pop
dec
ret
in
mov
aaa
ja
inc
rorb
mov
in
dec
jle
xor
jmp
mov
mov
jns
push
out
jnp
sub
push
mov
dec
hlt
hlt
inc
sub
loope
lea
sub
addb
lods
pop
sbb
fildll
sti
aad
jb
dec
dec
sub
mov
xor
xchg
loop
xor
or
mov
cld
rcrl
push
mov
mov
xlat
insl
dec
add
pop
aad
ljmp
mov
shrb
dec
popf
cmpsb
je
xchg
push
aad
sub
fildl
lods
inc
or
leave
jnp
repnz
jmp
fildl
mov
imul
cmp
fldl2e
mov
das
mov
repz
insl
adc
outsb
push
mov
pop
or
stos
popa
clc
imul
movsl
pop
add
sbb
sbb
imul
mov
dec
cmp
xor
cmp
fsubs
add
push
test
shll
pusha
test
repz
cwtd
xchg
shlb
cmc
and
fwait
add
jns
jg
scas
inc
or
mov
in
inc
sbb
push
xor
dec
push
adc
pop
jb
xchg
pop
in
addb
mov
lock
cmp
push
jno
cmc
arpl
cld
cltd
cwtl
repz
fcmovnb
pop
push
pop
add
add
je
int
push
hlt
jp
sti
lea
clc
xor
call
adc
and
adc
lods
scas
std
adcb
sar
cmpsl
inc
out
mov
loope
jnp
mov
pop
subl
mov
das
mov
xchg
hlt
mov
lods
aad
dec
loopne
enter
and
push
mov
mov
addr16
sbb
out
adc
aaa
and
mov
lcall
jle
daa
mov
ds
loop
add
fists
insl
outsl
push
icebp
cmc
inc
pop
and
in
dec
rorl
cmpsl
scas
pushf
push
xor
mov
je
icebp
cmpsl
xchg
xor
pop
and
mov
das
mov
loope
divb
clc
push
xorl
sbb
cltd
dec
fisubrs
pop
jp
cld
loopne
stos
inc
pop
pop
out
jno
push
xchg
popf
sub
lcall
xchg
loope
jae
dec
add
sbb
leave
push
or
add
cmc
out
jle
jne
inc
inc
push
test
jg
xchg
testb
ja
sbb
push
loop
add
push
mov
adc
or
loop
daa
push
add
sbb
inc
inc
mov
xchg
sahf
ret
cmp
jmp
pop
pop
ljmp
mov
sbb
mov
out
addr16
sbb
mov
popf
daa
inc
das
mov
jbe
repnz
mov
push
push
fstl
inc
or
mull
loope
pushf
adc
cmp
jle
dec
daa
jg
inc
mov
add
xlat
inc
loope
fs
loop
mov
out
orb
je
enter
mov
lock
fimull
sub
mov
test
sbb
push
mov
daa
jle
inc
jmp
sbb
fnsave
int3
xchg
sti
xlat
push
inc
and
mov
or
imul
decb
adc
push
aaa
jecxz
mov
dec
xor
cmp
test
and
int3
cmp
sub
test
mov
lds
cmp
aas
out
js
movsb
cmp
add
adc
push
mov
jbe
stc
inc
adc
shlb
mov
xchg
pop
and
mov
movsb
add
popl
push
or
inc
mulb
xlat
sub
cmc
sbb
lods
mov
push
dec
inc
cs
adc
fucom
xchg
lcall
or
aad
lods
out
mov
mov
mov
aad
lcall
push
jnp
stc
push
push
icebp
into
ja
xchg
jbe
pusha
jb
into
or
ss
and
aaa
lea
and
fdivl
ds
outsl
sti
movb
cmc
rcr
faddl
adc
mov
into
sub
push
xchg
sub
mov
pop
or
cs
arpl
inc
sub
dec
mov
pop
pop
xlat
mov
dec
adc
fidivrl
cmpsb
daa
into
mov
cmp
cwtl
test
shlb
loop
cmc
inc
pop
arpl
and
pop
or
or
xor
iret
ffree
lea
jne
and
pop
or
push
xchg
ja
rorb
pop
xor
mov
pushf
mov
hlt
dec
mov
aaa
in
insl
stos
mov
dec
movsb
xchg
mov
js
imul
pop
pop
mov
dec
std
test
je
dec
loope
out
inc
gs
pop
add
call
lds
fstl
push
roll
fcmovnu
loop
and
mov
sbb
repnz
mov
xor
std
sbb
test
leave
testb
inc
in
xor
es
icebp
psubw
pushl
inc
adc
pop
call
sbb
pop
push
hlt
test
inc
mov
dec
dec
repnz
cmp
rcrl
xchg
mov
test
mov
mov
or
das
std
dec
inc
inc
add
int3
mov
addr16
test
lea
arpl
adcb
popa
test
jge
out
dec
and
fs
jl
add
movsl
ss
mull
fstl
jmp
adc
int
leave
loop
pop
loop
inc
xchg
pop
and
dec
jae
pop
lret
int3
xlat
fs
vpandn
dec
mov
les
sbb
pop
test
and
cmp
pop
and
adc
mov
loop
jbe
inc
add
push
mov
fidivl
in
mov
out
ret
movsb
cwtl
xchg
xlat
cmp
dec
jecxz
xor
cmpsl
adc
xchg
int3
pop
mov
mov
inc
std
sbb
jmp
fidivrl
add
add
sbb
cld
addr16
in
jbe
dec
nop
addl
sahf
ror
mov
lcall
fisttps
sarb
aas
aam
jle
pop
clc
push
clc
sub
ljmp
arpl
pop
stc
jbe
ljmp
stos
add
jecxz
repnz
lds
fldln2
push
rorb
outsl
fstpt
and
rol
or
xchg
and
xor
add
xchg
bound
dec
add
or
loope
jl
or
repnz
aas
mov
in
mov
pop
mov
lcall
mov
and
test
out
xchg
push
test
cwtl
jo
jns
rcll
dec
adc
adc
mov
out
stos
leave
cmp
sbb
aas
test
jl
movsb
pushf
mov
ja
enter
test
cmpsl
aam
or
cmp
mov
ret
les
cmp
ds
adc
dec
push
cmpsb
test
test
mov
into
sbb
sti
fsubr
aaa
jae
mov
or
pop
out
mov
scas
fsubr
add
xchg
mov
test
mov
add
dec
dec
ficoml
imul
jbe
inc
xor
fwait
pop
fcomp
dec
into
mov
scas
pusha
std
cltd
pop
test
addl
sahf
push
aad
mov
sbb
xor
jge
cld
test
cmc
cwtl
jbe
stc
cmp
imul
jge
and
mov
mov
and
xchg
cwtl
dec
xchg
insb
jle
sbb
andb
daa
adc
stos
pop
insl
adc
sbbl
sbb
int
cmpsb
out
div
out
aas
rdpmc
adc
pop
sbb
xchg
movsl
imul
outsb
xchg
test
inc
lods
in
movb
pop
xor
fwait
cmp
adc
out
outsl
dec
push
js
xchg
rcrl
stos
roll
mov
pop
mov
xchg
and
call
fwait
cmp
adc
mov
xchg
sahf
xchg
fcompl
mov
xor
gs
pop
mov
arpl
xlat
ss
nop
jnp
pop
and
mov
jle
leave
fstpl
lods
arpl
movsl
pusha
push
cwtl
jecxz
fcmovnb
mov
sub
mov
rcrb
mov
push
or
jg
das
sub
mov
out
fwait
mov
mov
inc
mov
cmp
push
dec
cmpsl
notw
lret
mov
test
aas
jmp
movsb
mov
and
inc
jecxz
fdivrl
ljmp
cmp
arpl
testl
or
inc
xor
rcll
push
loop
xor
mov
or
mov
mov
add
frstor
sahf
cmp
btl
add
push
push
sahf
xchg
mov
bound
xchg
sub
pop
sbb
dec
jmp
cs
adc
xlat
mov
adc
push
popf
aad
or
dec
insl
imul
rcrl
add
mov
adc
cltd
sahf
xchg
or
pusha
rclb
mov
sbb
xchg
mulb
ds
cmpsl
jl
jnp
cltd
cmp
push
fisubs
inc
xor
aaa
cld
xor
push
sub
mov
in
or
and
arpl
fidivrs
xor
dec
mov
stos
mov
jo
sbb
push
icebp
clc
fmul
je
repnz
jo
scas
mov
scas
dec
add
adc
sti
pop
aam
fstpl
stos
test
cmpsb
and
fwait
gs
push
scas
cmp
pop
pop
inc
xchg
push
mov
pop
js
outsb
ret
dec
fs
es
ret
dec
jp
fdivs
sub
stos
fsubp
test
loope
popf
push
xchg
xor
cmp
jb
push
adc
xchg
stos
mov
mov
aaa
insb
fs
and
pop
icebp
aam
orl
into
adc
std
hlt
shrl
jl
test
jmp
cmpsb
fwait
imul
lea
mov
int3
lea
jmp
or
push
pop
adc
leave
pop
and
scas
inc
popa
arpl
push
push
call
xor
pusha
lods
xor
call
aas
cmpsb
mov
cmp
out
fwait
cmpl
cmp
sahf
sti
jb
push
fidivl
data16
jg
mov
xchg
ffreep
loop
std
mov
movsb
neg
sbb
xor
out
dec
xor
xchg
add
xchg
xchg
push
inc
inc
pop
push
aad
ss
out
push
push
in
scas
mov
adc
test
push
aaa
mov
clc
popa
loopne
xor
cltd
pop
ss
je
in
aad
addr16
dec
and
shlb
sbb
sbb
pop
xchg
lret
jg
sub
sub
rcl
mov
inc
ret
es
push
push
cmpsb
in
mov
cmp
jno
sbb
jge
xchg
sub
sahf
popf
add
lcall
test
jl
cwtl
nop
sbb
push
das
ret
addr16
ja
jmp
nop
jle
mov
jae
push
roll
jno
push
out
inc
in
in
push
sub
in
lret
sbb
ja
inc
xchg
sbb
mov
je
push
loop
sbb
cmc
fs
fwait
out
test
dec
cld
dec
or
or
pop
sarb
xchg
leave
inc
hlt
mov
data16
loopne
int
pop
lods
or
outsb
push
test
pop
sub
jns
nop
jae
popa
jp
rorb
xlat
int3
push
xchg
scas
push
cwtl
rolb
outsl
stc
dec
cmp
cld
mov
pushf
dec
loopne
push
mov
or
cmp
iret
mov
call
xchg
nop
sarl
push
pusha
addr16
cmc
jb
lret
shrb
nop
add
cmp
shl
call
and
inc
icebp
int
sub
mov
or
pop
push
jecxz
in
push
bnd
popf
cli
push
sbb
in
lahf
cmp
dec
inc
adc
xchg
fcomps
test
shlb
leave
test
pop
xchg
jl
adc
dec
xchg
arpl
inc
sub
daa
dec
out
popf
mov
dec
outsb
adc
jo
dec
iret
popa
lods
je
push
cwtl
push
out
or
fnstcw
jmp
lds
pop
leave
loopne
cmp
mov
pop
pop
clc
jl
loop
stc
fs
add
mov
sar
pop
cmp
fstps
iret
in
call
push
fdivrs
sbb
jns
jmp
dec
repz
movsb
sub
mov
scas
and
push
pop
test
xor
xor
lret
sbb
push
jmp
ret
xchg
mov
push
fimull
fistl
cmpsl
fcomp
outsl
clc
sti
fdivs
pop
popa
cld
fs
fistpl
test
xchg
scas
test
out
call
aas
in
sub
in
lcall
sti
mov
adc
das
dec
loopne
outsl
xchg
mov
in
and
ds
stos
icebp
fs
mov
cli
es
cmp
mov
mov
jns
imul
dec
dec
sub
popa
aam
inc
xchg
data16
fnstcw
test
jns
or
std
fbstp
xchg
adc
pop
sbb
or
imul
jne
push
and
scas
stos
adc
sti
add
std
pop
add
fs
sub
xchg
jne
lcall
mov
imul
rorb
or
inc
xor
sarl
mov
and
pop
fsubrl
lret
decb
fndisi(8087
popa
out
mov
insb
nop
dec
aad
in
cmpsl
cs
mov
mov
cwtl
cs
xchg
movsl
lret
enter
mov
repnz
mov
and
imul
popf
enter
or
scas
nop
add
lea
stc
mov
pusha
xchg
ja
add
std
cmp
push
xchg
xchg
shlb
nop
popa
push
mov
push
inc
pop
aam
js
loopne
mov
cmpsl
sbb
dec
lahf
andl
loopne
shl
aad
sub
std
push
or
mov
mov
fwait
sahf
mov
test
mov
lret
or
in
xor
pop
aad
cltd
jl
inc
sbb
loope
movsl
or
inc
and
adc
hlt
mov
fstl
xchg
insl
jb
xchg
mov
outsb
jns
imul
cmp
popa
cmp
cmpsl
dec
arpl
imul
in
test
clc
sbb
call
negb
in
fwait
sbb
stos
dec
rorb
ret
add
adc
cmp
xlat
jmp
and
mull
fistps
jns
add
arpl
push
call
test
dec
pop
jl
mov
fcmovb
lock
xlat
pop
std
push
movsb
scas
shll
sahf
adcl
mov
jo
mov
mov
xchg
mov
add
sbb
push
sub
ret
or
pop
lret
push
pop
xor
adc
cmpsl
aam
sbb
inc
adc
repnz
loope
sbbb
adc
inc
shll
sub
xchg
push
aaa
pop
loop
sbb
ss
pop
jo
sbb
adc
jne
out
push
push
or
dec
cs
jle
xor
ret
sub
out
sub
loop
pop
sbb
xchg
sub
xor
jnp
pop
fbstp
sub
data16
inc
ja
notb
dec
ds
jmp
push
mov
jg
inc
adc
xlat
mov
aam
insl
repnz
add
xchg
pop
xor
cmp
and
mov
js
stos
ret
icebp
out
sbb
int3
les
les
xlat
call
add
adc
call
adc
or
int3
cs
in
push
ret
lods
lea
pop
sub
lds
mov
stc
les
cmpsl
jb
in
jp
in
xchg
outsl
es
sub
pop
fsubs
jle
pusha
orb
addb
sub
or
dec
cs
repz
idivb
arpl
stos
ficoml
xchg
imul
popa
test
enter
xchg
gs
push
movsl
sqrtps
call
jae
pop
or
pop
push
pop
rcrb
adc
cmc
xor
xchg
jns
mov
movsb
test
stc
aas
and
sub
andl
rcll
push
jecxz
outsl
lret
xlat
mov
out
pop
adcl
testl
pop
aad
out
add
lods
jecxz
lret
psraw
test
mov
or
jno
enter
stos
push
xor
sbb
cmp
jbe
adc
daa
xor
or
or
pop
push
nop
xchg
xchg
std
jbe
loop
mov
loop
dec
call
add
and
jmp
add
mov
scas
cmp
xchg
jne
xor
add
dec
or
xchg
lods
mov
mov
sbb
fstps
orl
inc
icebp
pop
dec
add
cmp
out
mov
out
scas
jg
dec
push
dec
cltd
ss
lods
cld
mov
sub
dec
and
sbb
jno
mov
stos
xchg
add
mov
pushf
lea
dec
jle
mov
sbb
mov
add
xchg
fsubrl
lcall
filds
xlat
lret
push
iret
cltd
out
cmp
sbb
jecxz
insl
enter
hlt
sti
ret
mov
test
or
bound
lods
daa
push
push
xor
add
mov
xor
and
out
push
out
push
pop
lock
ret
shlb
sub
jmp
mov
scas
aas
xchg
hlt
lret
loopne
in
inc
dec
mov
ds
mov
xchg
inc
sbb
inc
icebp
lcall
jp
cli
sbb
xlat
leave
pop
or
ds
add
das
push
rcrb
mov
mov
xchg
cs
mov
dec
sbb
fst
gs
mov
mov
dec
lret
and
xchg
insl
jecxz
addr16
inc
in
lods
push
and
push
jns
outsl
cs
insb
mov
lahf
lcall
imul
xor
jge
adc
sarb
sub
loop
and
mov
adc
mov
push
aad
cmc
aaa
push
outsb
jo
jg
jmp
subl
inc
mov
inc
fildll
pop
dec
or
inc
push
insb
cmp
mov
jp
leave
jle
push
stos
dec
mov
mov
in
insb
push
mov
cs
int
punpckldq
dec
sti
adc
js
xchg
jmp
sbb
cwtl
push
mov
inc
add
mov
sahf
stos
stos
xchg
or
add
add
mov
sub
sub
add
cmp
mov
jo
dec
int3
sbb
or
or
pushl
xchg
mov
pushf
pusha
sub
mov
cmp
pushf
xor
clc
call
stos
xlat
pop
fstl
dec
les
pop
sub
aad
test
mov
cmp
out
lods
test
daa
mov
pop
dec
xor
pop
rcr
les
xor
test
push
pop
jno
arpl
in
stc
push
sbb
loopne
mov
js
fisttpl
cmp
and
sub
arpl
ficomps
out
scas
loope
mov
mov
sub
adcl
loope
daa
clc
push
fisttps
aam
cmp
inc
daa
push
adc
xor
fadds
inc
jnp
pop
and
or
pop
and
pop
jo
lock
or
out
stos
cmp
adc
sub
jbe
push
jns
mov
xchg
push
mov
ljmp
xor
mov
loope
xor
out
loopne
outsb
mov
icebp
push
cmp
jg
push
jns
fbld
adc
xor
imul
jg
or
push
ljmp
je
push
dec
mov
and
mov
jle
les
aaa
lods
jmp
pop
test
in
pop
in
mov
shl
lahf
cmpxchg
push
jne
in
sbb
lods
jbe
jne
ret
add
shrl
cmp
jne
dec
sub
xchg
xchg
push
jae
dec
daa
repnz
repz
xor
sbb
ja
sub
cld
arpl
and
insb
xor
pop
mov
adcl
lods
mov
iret
inc
out
push
adc
xor
or
push
cmp
inc
jp
add
inc
or
jo
movsb
sbb
add
andb
add
pop
sbb
bound
or
mov
sbb
imul
mov
clc
push
push
or
adc
out
mov
scas
imul
ret
add
mov
mov
fildl
mov
adc
mov
test
scas
jno
scas
cld
sub
push
pop
ret
scas
mov
jo
cld
roll
xor
jp
out
xor
lods
in
mov
sub
repz
xor
ljmp
mov
pushf
mov
cli
enter
cmp
mov
push
mov
jp
jecxz
cmp
fbld
lods
outsl
cmp
cwtl
popf
test
pop
dec
mov
sarl
xchg
xchg
in
xchg
xchg
jb
inc
lods
das
sbb
test
xchg
push
stc
sbb
popl
fistpl
cmp
pop
push
fwait
push
loopne
pop
test
pop
daa
aam
xor
or
xor
lret
push
movb
cmpsl
imul
std
movsb
fcmovb
andl
stos
mov
aad
mov
cld
clc
ret
popa
xchg
pop
xor
jo
mov
mov
out
dec
fists
mov
scas
jmp
dec
sti
xchg
jecxz
clc
mov
cmp
aam
xor
icebp
push
pop
icebp
dec
adc
add
adc
movsb
fnsave
ret
mov
jge
loope
mov
shrb
add
adc
inc
dec
mov
jmp
cmp
cwtl
jge
lea
jecxz
out
int3
xor
lahf
and
pop
xchg
cmp
adc
hlt
lock
jne
or
mov
jnp
pop
adc
sbb
outsb
pop
sbb
jb
jne
es
outsl
mov
cwtl
sub
jl
cmpsb
ret
cmpsb
mov
mov
dec
fldl
insl
sub
test
ficomps
pop
loope
sar
bswap
and
addb
movsl
pop
pop
repnz
ret
in
cld
add
pusha
andb
jmp
adc
insl
out
mov
test
enter
inc
mov
cs
insb
icebp
cld
mov
sbb
lret
fmulp
pop
pop
jnp
xchg
cmp
push
mov
mov
fcomip
mov
fbld
addr16
sub
cmp
jo
cmpb
jecxz
in
lcall
je
lea
subb
inc
popa
xchg
inc
test
dec
xor
xor
ljmp
int3
and
outsl
or
xchg
lret
xchg
sub
jp
jno,pt
stos
pop
inc
cmp
sti
fcomps
jno
std
test
imul
jbe
mov
andb
mov
adc
ja
ds
jne
xor
call
and
fldl
pop
ja
push
aaa
mov
and
pop
sti
or
neg
push
popa
cmp
sub
xchg
pop
adc
scas
dec
dec
int
test
inc
inc
ret
mov
hlt
mov
mov
aad
mov
xor
pop
das
call
lret
rcl
sub
fisubrs
dec
std
jno
dec
ret
pop
push
pop
shrb
testl
out
stc
add
add
popa
jl
shll
dec
popl
out
cmpsl
cmc
xchg
fcomi
repz
fisubrs
pop
sub
adc
fimull
sahf
pop
jmp
inc
adc
scas
cli
xchg
mov
call
test
xor
mov
sbb
or
inc
addb
arpl
leave
lahf
jae
jmp
mov
js
mov
loop
lods
jle
push
xchg
dec
fsubrp
popa
push
and
push
sbb
test
daa
mov
ret
xchg
fabs
lret
and
sub
mov
xchg
push
dec
out
xor
dec
xchg
icebp
loopne
push
repz
pop
cld
inc
add
iret
dec
adc
jno
cmp
xor
mov
dec
sub
shrb
aas
sbb
cmpsb
lret
xor
lock
ljmp
xchg
lea
cmpsl
shrb
pop
insl
test
bound
pop
pop
andb
mov
out
test
jb
and
jecxz
stc
xor
jns
add
addr16
dec
shll
les
xchg
xchg
cmp
xchg
pop
jne
xchg
das
test
push
jns
xchg
ljmp
xchg
and
sub
pop
or
xchg
mov
mov
mov
pop
inc
mov
ret
out
push
xor
lods
ljmp
inc
xchg
cmp
pop
push
sbb
arpl
mov
or
and
das
sahf
adc
dec
adc
ss
mov
lcall
push
or
xchg
pop
addr16
xor
loopne
add
xor
inc
cli
add
mov
dec
jg
cmp
and
ret
arpl
cmp
mov
test
xlat
sbb
mov
xchg
outsb
sub
sub
rcll
and
daa
outsl
and
shl
popf
sub
pop
push
mov
fstpl
add
lret
cmp
xlat
cmp
inc
xor
xchg
inc
mov
lcall
testl
or
lods
mov
test
in
pop
push
mov
jecxz
adc
mov
in
leave
xchg
inc
pop
mov
mov
xchg
mov
test
push
adc
fwait
mov
int
loop
mov
je
xchg
mov
aaa
jle
les
iret
or
daa
cwtl
inc
dec
scas
sti
mov
scas
pop
cmp
dec
or
jbe
out
push
stos
adc
lret
sub
mov
xchg
ds
xor
xchg
cli
stc
cmp
outsl
or
add
pop
cmpsl
cmp
out
jecxz
inc
sbb
jo
mov
movsb
xor
scas
xchg
push
push
sahf
sub
mov
sar
imul
loop
xlat
cli
dec
add
dec
scas
insb
mov
sub
xchg
and
and
or
hlt
mov
negl
lods
fnstsw
mov
mov
xor
pushf
cmpsl
mov
pop
mov
dec
leave
jl
and
push
dec
push
ficoms
pop
xchg
fstpt
cmp
adc
std
out
outsl
jp
movsl
es
mov
incb
out
aas
nop
jecxz
popa
pusha
cli
xchg
es
cmp
cmp
sbb
pop
shll
pop
push
sbb
xchg
int3
push
sub
sbb
or
mov
or
jnp
mull
ds
mov
or
into
imul
or
enter
or
xor
push
add
popf
shlb
jnp
fdiv
es
mov
stos
jne
fdivrl
mov
ss
testl
dec
sub
dec
dec
add
push
sub
sti
cld
clc
add
jns
push
inc
sar
sub
xchg
imul
cmp
mul
xor
xchg
xchg
ljmp
loopne
loopne
popf
popa
in
xor
push
cli
in
add
sub
dec
inc
add
mov
fstpl
testl
movsl
xor
movsl
pusha
test
add
dec
mov
pop
mov
adc
pop
xor
xchg
adcl
jl
inc
stos
mov
icebp
orb
mov
fldl
mov
int3
cmpsl
cmp
cmp
adc
cmc
add
push
lock
out
je
inc
out
xchg
sbb
pop
insb
arpl
clc
std
jp
adc
fists
movsl
daa
cli
mov
into
loop
pop
loop
fstl
lea
cltd
out
adc
mov
fs
pusha
mov
mov
jl
out
mov
js
fsubl
mov
movsl
push
insl
sbb
arpl
or
and
mov
push
xchg
movsb
loop
fisttpl
mov
adc
int3
mov
fcomi
jb
int3
leave
out
xchg
jp
daa
xor
decb
or
and
mov
dec
lea
pop
lods
mov
icebp
xor
scas
ja
cmp
mov
mov
stc
push
jno
imul
mov
idivb
addr16
icebp
pop
dec
cld
push
inc
and
and
jnp
jbe
cmc
ror
pop
dec
sub
fistpll
dec
xchg
mov
cmpsb
rorb
inc
flds
inc
xor
xor
ja
xor
dec
pusha
lret
mov
cmpsl
add
std
out
test
xchg
pop
imulb
dec
or
ljmp
sarb
pop
mov
and
inc
fisubs
imul
push
movsb
rorb
ret
testb
push
fcomip
jg
mov
rol
xchg
and
pop
insl
add
pop
mov
or
inc
add
pop
adc
sub
push
inc
out
loop
ss
sub
mov
aaa
outsb
inc
push
sbb
outsb
idiv
mov
test
aas
mov
and
sub
scas
dec
enter
xorb
test
add
pop
test
pop
push
mov
push
ljmp
out
in
ds
dec
ljmp
xchg
scas
adc
jge
das
jl
popa
je
lds
cmpsl
sub
push
enter
inc
pop
test
xor
lahf
scas
daa
aad
lds
popf
test
scas
mov
mov
adc
testl
popf
fs
dec
sahf
leave
outsb
lock
in
mov
sub
add
mov
xchg
lods
or
cli
mov
lcall
push
xchg
sub
ret
cwtl
xlat
pop
xor
or
movsl
push
dec
push
sub
pusha
sbb
ja
fwait
mov
xchg
cmp
cmp
nop
jb
cli
jge
push
push
jle
inc
sub
pop
sub
data16
repz
cmp
jle
ret
pop
sub
pop
adc
sub
add
mov
orb
xchg
movl
lret
ja
adc
aas
or
fdiv
xchg
add
jecxz
mov
xor
retw
cmpsl
pusha
addr16
xchg
std
out
inc
std
hlt
repnz
push
add
das
add
iret
xor
ja
or
xor
xchg
cmpsl
in
xor
cltd
lret
jecxz
ja
sti
das
xor
inc
jl
jbe
stc
inc
xlat
sbb
cld
xor
fisubrl
outsb
jmp
push
mov
insb
mov
jmp
adc
or
jo
cld
mov
lods
xchg
sti
push
lret
pop
mull
mov
inc
pop
mov
mov
in
jnp
xchg
xchg
push
adcl
jnp
arpl
in
jns
add
repz
mov
out
pop
mov
mov
adc
les
or
xlat
shr
cs
jge
fcompl
mov
mov
scas
and
mov
pop
loopne
add
test
out
jbe
and
out
lcall
dec
test
int
repnz
and
stos
add
fs
dec
jnp
mov
popa
jmp
inc
mov
popa
xor
push
adc
sub
mov
mov
mov
sub
fistpll
gs
in
out
popa
repnz
push
dec
xchg
push
data16
cmc
and
fs
testb
test
adc
stos
rorb
jp
push
nop
and
jmp
ss
test
subl
push
mov
shl
in
jno
ret
cmc
sub
cmpsb
out
iret
dec
movsl
sub
jno
dec
jmp
sub
add
popa
imul
and
mov
push
jb
sbb
or
mov
and
jp
bnd
scas
imul
dec
inc
aas
dec
mov
xor
dec
and
jno
push
xchg
sti
shrl
sbb
push
xor
aam
dec
cmp
xchg
imul
stc
leave
xchg
push
mov
fmuls
dec
push
gs
test
pop
insb
aas
lods
push
cmp
in
dec
shll
add
nop
pop
sbb
sub
stos
dec
movsl
jmp
xor
in
push
call
jmp
into
push
mov
in
pop
jno
sbb
inc
out
or
sub
or
cmp
jno
mov
xor
mov
push
fbstp
pop
jp
adc
push
push
add
call
jle
fldenv
cmp
push
sub
lret
pop
loop
loop
mov
pusha
cmpsb
jle
ss
cld
jae
pop
sahf
and
xor
mov
lods
addl
push
jg
rorb
adc
lock
mov
and
outsb
ja
or
fistps
pushf
mov
xor
or
jmp
xor
outsl
test
outsl
jecxz
xor
push
mov
cmpsb
jge
repnz
sbb
push
mov
xchg
cmpsl
xchg
xchg
in
dec
inc
jmp
xchg
fstpt
movsl
sbb
ljmp
mov
test
les
xor
stc
call
mov
fimull
incb
sbb
in
icebp
rorl
jns
popa
jbe
sti
cli
xor
mov
imul
pop
fidivl
mov
test
dec
lret
adc
mov
inc
dec
test
int
leave
push
or
adc
fcmovnu
cmp
shlb
mov
and
xor
mov
pop
jg
sbb
mov
stos
stc
pop
mov
lea
push
sub
push
rclb
jl
arpl
or
out
dec
aam
mov
aam
xchg
out
adc
mov
push
mov
scas
data16
and
lea
dec
loopne
mov
sub
mov
adc
loopne
mov
inc
shrl
pop
inc
mov
jno
xor
sbb
push
fldcw
test
je
sbb
sub
or
jp
cli
adc
mov
cmpsl
mov
shrl
push
shr
sbb
add
ret
lcall
mov
jbe
or
aam
cmp
ficoml
cmp
std
push
xchg
cld
pop
aad
std
pop
push
ficompl
leave
push
sahf
xchg
into
aad
cmpsb
rol
shll
mov
xchg
add
into
xcrypt-cfb
pop
push
mov
cmp
loop
push
cmp
push
hlt
xchg
daa
aas
xchg
mov
adc
pop
mov
lret
inc
cmpsl
lods
jg
fcompl
into
hlt
pop
push
faddp
testl
out
xor
into
mov
mov
push
inc
in
sbbb
pop
repz
adc
std
adc
stos
cld
mov
jecxz
divl
jae
jl
jbe
bound
sarb
or
jb
cmpsb
cmp
mov
push
push
pop
inc
adc
repz
sbb
xchg
das
mov
movsl
lret
subl
cwtl
jne
fwait
mov
sahf
cmp
test
in
dec
cld
mov
call
adc
xchg
adc
mov
int
adc
sbb
push
push
fdecstp
divl
cmp
sahf
pop
mov
addr16
inc
xlat
pop
ss
adc
pusha
or
call
lret
into
dec
int3
repz
aaa
xlat
fdivrs
sub
jecxz
dec
in
mov
adc
add
push
aas
mov
adc
pavgb
xor
push
mov
sbb
insl
incb
mov
daa
mov
mov
outsl
negb
adc
test
leave
fst
in
xlat
hlt
aas
es
and
adc
scas
aam
stc
mov
cmp
inc
adc
lahf
add
in
or
repz
aas
pop
jecxz
movsb
insb
iret
fisttps
jge
add
xor
mov
cmpsl
sub
or
shll
add
jns
inc
outsb
enter
loope
mov
test
sti
jns
and
xchg
fidivs
mov
cltd
add
sarl
and
mov
mov
movhlps
or
pop
cmp
xchg
xchg
fcmove
repz
ja
sub
cmp
pop
into
push
or
repnz
test
pop
mov
jp
xor
mov
jl
test
cmp
or
stos
pop
push
and
xor
jg
shlb
lret
adc
sbb
sub
out
outsb
jl
mov
js
cltd
lahf
repz
add
std
dec
pop
and
lods
enter
repz
rclb
pop
jae
lret
into
aam
shlb
or
or
aaa
mov
js
mov
push
push
mov
push
dec
add
sarb
mov
pop
lahf
insl
xor
and
dec
mov
push
js
jecxz
jg
xor
ljmp
xchg
gs
jns
xchg
popf
mov
xor
sub
pop
mov
lods
sti
mov
dec
jbe
push
loop
add
into
xchg
push
vmptrst
leave
js
pop
leave
sbb
int3
icebp
push
rorl
loope
pop
lock
inc
daa
cmp
jb
sbb
js
push
arpl
js
movswl
xor
mov
in
loopne
xchg
cmpsb
rorl
dec
or
cmpsb
cmp
mov
jno
icebp
jae
xchg
sbbb
aam
fidivrs
lahf
cmp
pop
das
sub
dec
add
lret
aaa
jmp
lret
adc
setae
adc
rorl
stos
test
add
clc
sti
sbb
add
push
rorl
fstps
sub
fwait
loopne
inc
sbb
lock
jg
cmp
testb
fs
call
sub
lcall
cmp
cld
add
mov
scas
call
iret
jl
mov
mov
or
iret
pop
divb
inc
fcomi
shll
ret
addb
in
out
negl
scas
mov
repz
mov
cld
lret
push
push
dec
iret
push
ja
adcl
das
adc
shr
adc
aaa
push
inc
dec
inc
jns
pop
xchg
ret
sbb
lea
dec
cmp
test
push
jge
inc
inc
pop
adc
push
and
iret
dec
inc
xchg
mov
push
cmc
outsl
mov
mov
testb
in
sub
hlt
pop
mov
or
jmp
dec
sbbl
test
and
or
or
mov
dec
arpl
cmp
pop
adc
nop
sarl
sbb
pop
aas
xchg
outsl
push
je
sti
jecxz
insl
aaa
or
add
pusha
add
push
js
sbb
popf
ret
xor
jl
adc
aaa
lret
sub
test
inc
je
pop
add
xor
pop
or
stc
dec
test
add
mov
add
lahf
stos
cmp
mov
stos
loopne
jl
jns
mov
sub
mov
pop
inc
adc
mov
inc
xor
xor
dec
and
cmp
test
mov
dec
or
fwait
mov
lahf
pop
sbbb
stc
cmc
test
add
ret
mov
outsb
lea
dec
or
xchg
and
mov
add
jns
jns
mov
mov
pop
add
mov
mov
in
push
xchg
jg
xor
int
inc
je
cld
jmp
dec
pop
cli
int
cmp
push
stos
daa
mov
mov
push
inc
or
daa
jbe
push
pop
leave
dec
insb
xchg
repnz
mov
gs
push
inc
xchg
test
outsb
lcall
push
jge
xor
aam
push
neg
testb
lea
js
add
mov
dec
mov
push
inc
mov
and
imul
leave
sub
inc
loopne
stos
fnstsw
pop
fldcw
mov
add
sbbl
jae
mov
incl
pop
out
sbb
sti
inc
mov
aas
cmp
mov
in
push
mov
xor
jecxz
inc
loop
test
push
jp
mov
dec
mov
sub
les
sbb
int3
and
adc
int3
cs
mov
fbstp
outsl
push
std
sub
push
inc
scas
mov
mov
xchg
push
xor
add
cwtl
mov
sub
icebp
test
pop
arpl
fdivrs
pop
mov
mov
push
ljmp
push
into
idivl
and
push
lods
pushf
push
cmc
mov
lahf
ffreep
cld
jae
cmp
jnp
call
cld
lods
mov
addr16
int3
cmp
dec
into
cmp
add
adc
mov
sarl
mov
jnp
push
sbb
inc
dec
pop
stc
test
fstl
mov
and
ljmp
sub
mov
pop
stos
xchg
pop
pop
adc
adcb
pop
pop
dec
jns
sub
loope
jb
adc
push
inc
pop
int
inc
mov
dec
ljmp
negl
rolb
sub
inc
rcll
ret
std
push
arpl
data16
repnz
jmp
ja
mov
mov
jl
sbb
jecxz
mov
pop
inc
outsl
add
cmp
push
gs
xchg
or
and
or
push
and
mov
or
mov
cmpsl
xor
jl
into
add
jo
lret
jecxz
jg
dec
push
cmpsl
mov
addr16
jle
sub
loopne
inc
mov
mov
pop
lahf
mov
xchg
jmp
adc
ljmp
sahf
inc
inc
sub
mov
in
push
rorb
stos
sub
shlb
push
jnp
xor
mov
push
in
scas
int3
addr16
cmp
mov
add
inc
testl
aas
aad
imull
sbb
test
mov
and
add
pusha
push
test
lret
sti
outsl
and
inc
mov
ror
jg
fstpt
sub
mov
dec
cmpb
jne
xchg
adc
mov
cs
popf
in
ret
xchg
mov
mov
add
adc
nop
cmp
mov
dec
test
pop
fistpll
shr
pushf
sarl
addb
dec
xor
aas
rclb
sbb
add
sub
push
mov
stc
movswl
mov
jbe
lds
fists
ja
dec
mov
js
xchg
push
fsubr
sub
pop
mov
cmp
test
leave
imul
das
push
jno
mov
aam
loopne
je
mov
adc
mov
in
mov
enter
dec
cmp
enter
test
pop
es
test
inc
mov
dec
fisubs
sub
xchg
movsb
sub
lret
or
mov
mov
shrb
dec
inc
scas
and
dec
das
lods
out
out
xor
test
sti
pop
push
sub
mov
cwtl
adc
add
mov
daa
js
orb
fldl
js
cli
das
fbld
push
leave
lcall
clc
insb
push
or
cli
scas
ds
sbb
loopne
mov
xor
mov
cltd
xchg
xchg
mov
inc
cmpsl
imul
aad
jns
in
loop
mov
add
pop
and
sbbb
fnstenv
loope
fdivr
scas
in
push
jecxz
scas
bswap
repz
sahf
or
and
pop
cwtl
scas
add
out
jne
add
or
add
test
and
ret
into
mov
pop
sbb
dec
or
dec
jb
mov
imull
mov
test
into
fnstsw
das
loop
out
jo
bswap
inc
inc
test
and
sub
add
ret
cmpsl
out
ds
xchg
vpaddd
mov
cwtl
jbe
fnstenv
fldl
jbe
mov
dec
stc
pop
pop
popa
movd
mov
icebp
stc
in
lock
fsubs
sbb
cmp
and
jno
push
and
xor
enter
sbb
mov
ds
lret
or
or
int3
jae
mov
loop
int
cmp
cltd
imul
ret
loop
cltd
aas
pop
shl
fdivrs
dec
enter
popa
rcll
jns
les
fs
mov
add
sbb
mov
fcomip
imul
lds
lret
inc
pop
sub
orb
imul
stos
dec
mov
or
lret
or
std
arpl
inc
mov
xorl
adc
jne
sbb
cmp
fstpt
hlt
or
mov
dec
mov
sbb
out
push
pusha
pop
psubusw
dec
inc
gs
pop
inc
loop
sub
mov
dec
and
fdiv
shl
aas
mov
cmp
push
repz
xor
cmp
pop
and
inc
adcb
js
cmp
les
cmc
cli
roll
pop
inc
xchg
fldt
pusha
test
lods
push
rolb
dec
or
mov
sbb
scas
aaa
mov
mov
jbe
aam
mov
enter
sbb
xchg
int
cmpsl
fmuls
mov
mov
fsubs
ror
lods
es
jl,pn
sub
xor
out
ljmp
arpl
jbe
ljmp
mov
push
repnz
mov
xor
test
add
xchg
int3
push
pop
add
jo
dec
add
fwait
lds
mov
xchg
movsb
mov
addr16
jmp
mov
pop
mov
les
cmp
sbb
lahf
test
and
jp
out
add
movsl
and
insl
outsb
gs
cwtl
out
shl
sub
fcomi
dec
lahf
push
fincstp
mov
imulb
icebp
call
out
pop
sub
adc
clc
aaa
mov
sti
mov
push
insb
push
dec
jle
pop
daa
lds
xor
and
xchg
popa
jbe
xchg
mov
push
aaa
adc
and
xchg
cld
cltd
fwait
sbb
lods
adc
mov
clc
and
and
jns
dec
xor
mov
int
mov
push
and
lds
fildl
cwtl
test
jno
mov
push
scas
push
hlt
push
shrb
enter
lcall
mov
inc
loop
das
aaa
pop
mov
dec
jo
push
inc
or
out
mov
outsl
movsl
fstp
jns
and
pop
imul
bound
sbb
popf
lods
cs
sbb
int
add
subb
sbbb
and
clc
jnp
and
das
jge
pop
cmp
adcl
mov
pop
add
sbb
dec
xchg
push
add
pop
in
cltd
cmc
sbb
pop
cld
insb
adc
ret
cmp
jp
cld
mov
int
sbb
insb
fsts
sbb
aam
pop
sbb
inc
xchg
scas
add
lods
inc
or
mov
ss
jecxz
and
push
test
jle
gs
inc
fsubl
roll
pop
in
test
movsb
mov
rorl
inc
cmp
mov
ss
je
out
pushf
out
push
test
cltd
jg
popa
clc
and
sub
les
mov
add
xor
les
pusha
jle
lret
add
add
or
arpl
pop
jb
xchg
cmp
dec
mov
inc
stos
fnsave
pop
notl
scas
mov
xlat
add
pop
dec
jp
ljmp
out
nop
inc
mov
cmp
es
and
inc
in
dec
or
jb
pop
or
push
xor
mov
mov
stos
jle
adc
lds
outsl
mov
cmp
and
mov
std
ficomps
test
xchg
jns
pusha
dec
cs
or
lcall
sbb
dec
dec
and
xchg
imul
sbb
popf
mov
dec
cmp
popf
arpl
sub
push
cmp
lcall
out
pop
lcall
hlt
lock
cmpl
outsl
sub
push
dec
fwait
pop
in
test
mov
je
and
xor
push
or
sbb
push
iret
call
xchg
rclb
test
add
mov
xor
adc
xor
mov
xor
cmp
xchg
mov
leave
push
pop
cmp
mov
add
cmp
clc
sub
and
push
cmp
cmp
inc
adc
mov
inc
cmp
aaa
leave
mov
mov
xchg
sub
lahf
ljmp
daa
pop
loope
in
jno
pop
add
movsb
push
adc
fldl
or
ds
es
mov
lret
lock
lcall
fs
rolb
popf
je
push
xchg
into
ficoml
jo
sub
jae
push
jbe
loope
cmp
sub
jo
mov
dec
xorb
cmpsl
jb
inc
adc
add
adc
xchg
insl
cwtl
jb
enter
pop
pop
dec
data16
cmc
and
ds
fwait
call
movsl
lcall
out
in
inc
mov
mov
sbb
mov
mov
xor
push
mov
lret
test
jns
shll
sub
fwait
ret
xor
jmp
add
insl
adc
sbb
iret
sbb
dec
dec
pop
inc
xlat
jne
cmp
aaa
xchg
sbb
fs
push
or
jb
loopne
es
sbb
sarb
sub
push
in
mov
or
pop
inc
loop
mov
loopne
cmpsb
imul
adc
mov
jnp
xor
js
mov
mov
mov
fadds
bound
adc
push
roll
rorl
lods
lcall
fwait
sub
xor
sbb
push
cld
cmp
aad
sbb
pop
aaa
lret
aad
jmp
std
movsl
cmp
pop
jg
adc
mov
lock
imul
movsb
inc
notb
sahf
pop
jp
scas
jnp
ret
xor
insl
icebp
jb
lods
ss
and
lods
jns
faddp
andb
loop
addr16
icebp
loopne
shlb
repz
push
pop
lods
mov
repnz
mov
jp
iret
jbe
sbb
loopw
orl
and
xchg
rcrl
pop
inc
lea
fs
insl
or
pop
or
fstl
cltd
pop
add
fs
xchg
int3
sbbb
aam
inc
lret
lods
mov
and
mov
in
outsb
nop
jmp
bnd
xchg
mov
cmc
ret
xchg
mov
mov
xchg
add
xchg
iret
addr16
sahf
sahf
jae
adc
shrb
hlt
adc
arpl
call
test
dec
adc
aam
repnz
mov
repnz
xchg
out
je
gs
adc
and
sbb
lds
jno
mov
xchg
jae
xlat
in
hlt
jnp
test
int3
mov
movsl
std
ret
lock
mov
out
mov
test
dec
popa
jnp
sub
mov
and
iret
add
test
mov
mov
ja
push
call
xor
jmp
ficomps
jp
push
sub
xchg
loop
test
mov
das
mov
inc
xorb
hlt
cmp
dec
mov
push
xchg
cmp
sbb
stos
iret
mov
jle
pop
add
int3
add
fstl
mov
jo
cmp
mov
insl
aaa
sub
add
mov
lret
push
out
inc
hlt
inc
xchg
xor
sub
jne
add
test
in
test
iret
fdivrl
insb
ja
in
fsubrs
xor
pushl
push
js
sbb
ds
sub
pushf
cmp
jb
int3
fldl2t
leave
xor
mov
sbb
insb
arpl
test
adc
aaa
lock
in
mov
insb
jnp
imul
data16
popa
in
mov
fstpt
mov
std
cli
inc
pushf
cmpsb
sti
imull
ljmp
and
fucomi
push
push
inc
push
push
cmp
addr16
and
lods
cmc
or
mov
int3
faddl
dec
bound
sub
bound
aam
and
arpl
scas
test
inc
test
aas
shlb
int3
mov
aas
mov
mov
in
mov
jge
xor
jnp
aas
les
ja
sub
popa
jbe
lret
mov
ss
dec
and
mov
push
mov
pop
inc
outsb
cli
adc
inc
xor
sbb
mov
sbb
mov
and
xor
mov
andb
test
add
xchg
mov
inc
fstl
pushf
ror
outsb
mov
les
ficompl
ret
repz
popa
ds
xchg
outsb
inc
pop
nop
mov
lock
shl
cmc
dec
stos
jge
cs
jno
jmp
scas
imul
sub
sbb
sub
mov
mov
pop
sbb
jmp
mov
in
fwait
mov
mov
pop
sub
testb
stos
shll
cmp
fstpt
add
rorl
push
out
roll
into
adc
mov
insb
cmpl
jb
push
and
leave
jbe
xchg
lret
clc
sbb
or
nop
and
outsb
cltd
jbe
int
bound
dec
repnz
pop
and
ret
cmp
jge
loop
xor
pop
loop
les
aam
mov
fmul
push
data16
popa
cmp
mov
aad
or
lahf
lcall
push
push
or
mov
ss
outsb
jle
lcall
insl
mov
sub
icebp
fs
inc
dec
sbb
xchg
dec
mov
adc
mov
or
cmp
push
and
imul
or
movsb
sbb
pop
pop
or
sbb
cli
cmp
sti
pushf
add
aaa
mov
dec
mov
into
or
movsl
cli
and
sub
jns
push
push
stos
adc
rep
loope
sahf
jns
pop
jp
cmp
insb
mov
jmp
jmp
dec
cmp
leave
dec
xchg
push
cmp
pop
insb
out
testl
inc
xchg
xor
or
sub
bound
into
jge
mov
push
ret
shrl
out
int3
adc
fmulp
fldl
mov
xchg
sahf
dec
aad
rorb
fisubs
lret
movsb
stos
sar
or
add
and
paddd
or
mov
cmp
in
adc
js
insl
sub
shll
shlb
xor
jae
xor
pop
daa
in
push
cli
and
pusha
test
sahf
fcompl
mov
xchg
push
fwait
inc
xchg
or
aas
pop
mov
cmpsb
loop
fcompl
rorl
lret
pop
xchg
icebp
cmc
lret
lret
xchg
clc
mov
call
xor
jl
mov
xchg
mov
jp
push
test
lcall
scas
daa
ret
xchg
aam
jle
or
push
jg
out
xor
sbb
inc
jmp
cmp
pop
into
and
dec
push
inc
dec
inc
lods
sub
xchg
mov
sbb
or
mov
lahf
sbb
dec
ret
test
out
arpl
mov
loop
add
stc
rcrl
xchg
lea
cmp
cmp
shlb
repz
fadd
xorl
xchg
pop
negb
addr16
push
jmp
adc
xor
cmpsl
stc
jg
xchg
push
cld
mov
dec
cmp
mov
add
inc
out
aaa
inc
and
ds
hlt
lahf
les
fnstenv
dec
adc
pushl
test
fcoms
sahf
das
outsb
loope
add
xor
addr16
mov
movsl
lcall
inc
push
loop
movsl
and
insl
adc
cmp
mov
push
fdivs
scas
push
cwtl
jne
or
xchg
je
or
js
cli
out
pop
insb
push
mov
int3
inc
js
mov
adc
adc
test
push
adc
fldcw
pop
bound
test
mov
xchg
jmp
sarl
test
dec
hlt
cli
xor
repnz
and
mov
mov
je
xchg
jmp
arpl
xchg
or
loope
outsl
sub
pop
ret
xchg
orl
test
iret
out
in
push
inc
test
and
stos
fwait
out
sub
addr16
je
push
push
add
xor
dec
cmp
test
and
ret
push
push
jne
flds
and
jmp
popa
loop
popa
adc
insl
jns
mov
add
es
jne
push
push
je
cmp
js
fistpll
cmpsl
ret
sbb
pushf
cmp
xchg
add
ljmp
pop
xor
xchg
pop
mov
pop
lfs
inc
mov
aaa
pushf
sbb
dec
mov
push
stos
jo
adc
mov
fisttps
add
push
push
mov
mov
push
adc
decb
mov
xchg
fwait
cli
inc
sbb
call
and
pop
mov
jne
out
iret
add
add
stos
shlb
xchg
scas
in
stc
xrelease
out
faddl
insb
stos
lock
insl
sbb
xor
cmp
jl
push
test
mov
cmp
mov
inc
sub
xchg
mov
sbb
inc
loopne
test
leave
popa
out
inc
lret
mov
pop
jne
add
data16
test
mov
jb
jge
fstpl
mov
sbb
ret
movsl
dec
pop
shl
pop
aad
jo
repnz
hlt
mov
mov
imul
int3
cmpsb
push
sbb
fcmovnb
jl
insl
fsubs
aaa
mov
or
inc
or
sub
xchg
jg
or
loope
push
and
xchg
inc
fcomip
pop
sbb
flds
fcoml
mov
sarb
sbb
outsb
lds
repnz
int
inc
mov
rorb
xor
dec
je
push
push
inc
or
shlb
push
xchg
jge
pop
dec
or
je
ret
push
mov
stos
adc
mov
mov
and
call
sbb
inc
fisubrs
cmpsb
sub
or
pop
jo
or
ds
jecxz
and
inc
repz
adc
ds
pop
pushf
mov
jge
les
jno
je
pop
or
lar
and
pusha
add
ret
cmp
add
insb
add
dec
loopne
addr16
dec
xchg
sub
mov
popa
clc
xchg
push
or
pop
cli
xchg
out
xchg
test
or
or
adc
cmp
aad
mov
fstl
addr16
nop
mov
add
push
scas
xlat
clc
enter
ud1
pushf
and
je
out
cltd
mov
and
jb
test
test
fwait
push
cmpsb
cmp
jno
shll
arpl
push
out
pop
sub
loopne
cs
inc
loop
fs
xor
loopne
jge
aas
mov
sbb
add
ds
fldcw
push
int3
fisttpll
in
xchg
or
adc
faddp
imul
lods
fiaddl
mov
cltd
lcall
icebp
lock
lret
xchg
scas
adc
js
lret
ljmp
fisubs
dec
mov
adc
xchg
ret
inc
xor
cmp
adc
iret
mov
nop
push
lret
sub
lods
and
adc
dec
test
mov
mov
xchg
inc
mov
mov
mov
jmp
shlb
jge
push
pusha
pop
add
xchg
or
in
cmp
scas
icebp
mov
jo
adc
sti
or
add
mov
fwait
xor
iret
pop
or
xor
jmp
outsl
sub
cwtl
dec
xor
gs
xchg
pop
mov
and
inc
xchg
inc
test
cmp
das
or
mov
cmp
xchg
jp
xchg
pop
inc
add
mov
aad
push
insb
push
add
out
clc
xor
jmp
pushf
mov
jb
stos
add
daa
ret
push
pop
mov
fdivs
cld
jecxz
ss
cmp
add
jnp
xor
fstp
jbe
adc
scas
fsubp
test
push
jg
xchg
lahf
in
int3
fdivr
add
xchg
xor
cmp
cmp
mov
inc
out
lds
mov
xchg
jnp
mov
pushf
dec
out
mov
std
test
inc
mov
adc
cmp
or
andl
rclb
cld
inc
cmp
in
fisttpll
pop
xor
lcall
dec
imul
inc
and
aaa
add
inc
mov
inc
das
out
int
inc
jecxz
mov
dec
xchg
adcb
dec
sub
xor
insb
inc
loop
xchg
sahf
lock
sub
mov
adc
insb
test
insl
sbb
fdivs
ja
or
psrlw
call
mov
dec
xchg
mov
imul
xchg
adc
popf
pop
jns
pop
jns
pop
jge
pop
adc
insl
or
push
les
rorb
std
xor
movsb
sbb
mov
scas
xchg
cwtl
push
inc
dec
adc
dec
outsl
addl
pusha
adc
fisubrs
ret
in
jo
popf
mov
into
sbb
xchg
xchg
jmp
adc
sbb
lret
lock
xchg
push
push
xor
fiaddl
sub
mov
sub
xor
or
sar
out
in
hlt
mov
mov
jl
or
mov
pop
mov
sub
aas
inc
inc
xor
es
fdivp
lock
xchg
or
mov
into
test
lock
push
add
xchg
mov
sub
sbb
pop
mov
or
or
fnstenv
clc
or
loop
jae
mov
pop
rcrl
dec
inc
cmpsl
fwait
ds
xchg
push
rol
clc
ret
cs
mov
cli
push
lds
xchg
leave
mov
mov
iret
bound
dec
mov
adc
jae
cmp
pop
lods
mov
vmfunc
test
adc
arpl
lahf
popa
cmpsb
inc
and
xor
mov
mov
int
sti
xchg
pop
pop
int3
shlb
fmul
jnp
js
fidivl
jbe
les
or
insb
jnp
xchg
sbb
jbe
sub
dec
int3
imul
mov
push
es
fsubs
shl
pop
pop
imul
and
xor
jmp
adc
adc
and
ljmp
push
xlat
push
jns
mov
mov
mov
sahf
jns
add
stc
cltd
mov
adc
pop
ds
mov
dec
lock
push
sub
stc
xchg
pop
push
pop
add
sbb
mulb
jo
into
push
mov
add
daa
jns
test
and
das
jno
xlat
nop
bound
xor
insb
pop
add
in
fwait
xchg
push
mov
fcomp
pushf
mov
sub
rol
push
je
aad
stc
inc
xchg
inc
sti
outsb
sub
ds
test
mov
das
xchg
pusha
insl
cli
xchg
mov
sub
bound
popf
rcrl
pop
stos
sbbb
lahf
push
mov
popf
mov
inc
sbb
jbe
imul
es
xor
cmp
cmp
out
outsb
out
mull
mov
ss
adc
dec
js
test
lcall
and
mov
xor
pop
jmp
xchg
mov
movb
push
mov
dec
rcll
sub
fs
js
or
mov
xor
xchg
rol
cmpsb
sub
sub
scas
jg
shlb
inc
ds
push
mov
jne
movsb
or
mov
dec
jge
cmp
xchg
or
xor
rcrb
mov
lret
push
jle
lcall
sarb
dec
mov
dec
lds
daa
xor
push
lret
data16
orl
cmp
mov
and
dec
xchg
cmp
in
cld
lret
test
jmp
xorl
sbb
cmp
jle
ja
rclb
inc
mov
fidivrs
sub
dec
js
sbb
xor
sbb
mov
dec
add
rolb
mov
sub
jne
mov
bound
xchg
dec
and
jno
xorb
push
push
movsb
and
fistpl
dec
lods
cltd
lahf
jne
loope
sahf
andl
ds
xlat
sbb
xor
insl
jnp
iret
and
xchg
ja
cmc
leave
sbb
out
outsl
xchg
xor
sbb
lahf
outsb
aam
ss
jle
sbb
nop
fadds
push
fcmovnbe
xchg
or
xor
add
arpl
shrb
xchg
das
into
jecxz
insb
pushf
andb
mov
cld
cmp
call
sarb
insb
xor
jbe
insb
jae
mov
and
push
sahf
pop
test
insl
adc
rorb
sub
out
jl
cmpsb
into
cmc
repz
cmpsb
mov
mov
fucomip
in
cmp
outsl
push
es
shrb
mov
push
jns
stos
pop
andb
xor
scas
leave
push
push
mov
in
xchg
push
out
add
clc
insb
popf
xchg
inc
sti
adc
add
jbe
repz
cmp
mov
xlat
xchg
scas
add
mov
sub
arpl
inc
jne
rcll
cmp
lods
jmp
and
pop
and
mov
mov
dec
xchg
dec
loope
ret
xor
add
xchg
repnz
jbe
or
jmp
insl
jg
and
xchg
std
cwtl
jle
push
inc
push
dec
sub
mov
test
and
and
jbe
repz
xorl
gs
popf
out
and
scas
out
cmp
lds
ficompl
cli
add
nop
push
adc
inc
mov
sahf
cmp
nop
xchg
or
push
mov
insl
xchg
mov
mov
ljmp
jne
movsl
pop
dec
clc
ja
ret
push
out
xor
icebp
inc
scas
sub
loope
mov
mov
ret
mov
dec
rorl
adc
in
lock
inc
mov
pushf
dec
scas
hlt
into
adc
add
aam
mov
out
aaa
jne
xlat
lods
push
fldcw
or
ja
cpuid
push
notw
fsts
mov
dec
or
cs
and
cmpsb
les
hlt
imul
mov
pop
jl
lods
jle
xor
and
daa
adc
xor
push
mov
stos
pop
jno
push
or
enter
repnz
je
fldenv
mov
xor
shll
mov
es
ret
popf
sbb
rorl
jmp
or
daa
mov
jmp
aam
cs
nop
lods
ds
std
mov
jmp
sbb
fistpl
jle
add
mov
movsl
push
mov
jb
xor
lea
dec
xchg
inc
aad
in
mov
jmp
mov
test
aas
jns
mov
jns
mov
pop
in
mov
lcall
ljmp
mov
stos
jg
push
sbb
adc
inc
xorb
cmpsl
das
jg
aad
imul
jl
jb
fisubrl
orl
pop
inc
or
sarb
add
jns
cmp
xor
test
jl
inc
adc
loopne
sub
sbb
add
cmp
insl
iret
xchg
fildll
shl
repnz
test
xorl
push
ds
test
shl
lods
and
dec
js
push
loop
xchg
stc
dec
aam
lock
pop
dec
dec
call
adc
pop
in
sub
fdivr
jg
cmpb
dec
int
stc
pop
rcrb
clc
adc
pop
push
push
or
xor
add
test
jbe
cs
mov
xchg
jp
das
and
sarb
mov
jl
pop
sahf
mov
into
push
lods
mov
out
xchg
sarl
cs
sub
lret
lods
sbb
arpl
and
out
in
xchg
dec
stos
dec
cltd
or
inc
inc
loop
pop
test
mov
and
das
pushf
adc
pop
xchg
mov
out
aam
xchg
jns
push
icebp
sub
jmp
inc
cltd
or
es
jge
test
pop
fnstcw
jge
jb
dec
icebp
mov
inc
mov
push
dec
dec
cmp
jbe
insl
outsb
sub
bound
push
mov
and
fdivl
lods
mov
push
pop
jbe
adc
into
es
imull
sub
popa
sbb
mov
sbb
test
rorb
popa
jle
ret
mov
out
sarb
test
leave
jo
les
jl
aaa
push
sbb
mov
addb
in
fstpl
and
or
mov
leave
push
dec
pop
push
clc
in
shrl
fdivs
adc
ret
sub
push
fsubl
in
stos
test
sub
push
mov
scas
fiadds
mov
int3
xchg
xchg
dec
shrl
lods
sub
mov
inc
sbb
repnz
ss
fucom
movsl
xor
xlat
jle
pop
sub
dec
mov
mov
fstl
jbe
mull
sub
fisubs
out
jae
xor
xor
pop
sub
pop
dec
test
pop
xchg
test
add
mov
jg
adc
imul
sub
cmc
add
out
mov
sub
xchg
mov
dec
ja
jecxz
loopne
jp
sbb
and
mov
dec
or
sarb
or
mov
aas
adc
sub
lret
lret
or
test
mov
cmc
cmp
sti
out
dec
lret
sub
out
sub
imulb
fwait
add
pop
dec
add
cmp
in
lahf
mov
aad
or
lock
das
mul
xlat
xchg
into
mov
into
daa
ja
movsl
push
int
lret
loopne
cmpsl
addr16
scas
jge
stos
mov
fsubr
cmp
ret
jno
and
ljmp
xor
adc
mov
and
mov
xor
inc
inc
pop
and
bound
test
scas
or
scas
leave
jl
jg
pop
mov
int
add
jbe
xchg
fsub
lret
jmp
xchg
add
pop
repnz
clc
pop
xchg
cmp
sti
mov
movsb
mul
jle
push
dec
stos
or
jae
ljmp
mov
fdivrl
xchg
dec
pop
daa
jg
dec
or
andb
scas
jge
inc
sbb
cmp
cmp
push
push
repz
lds
loop
and
inc
inc
sub
pop
push
or
int
sbb
fidivrs
mov
test
xor
insb
aas
xchg
test
xchg
das
movsb
addb
xchg
fwait
sbb
and
outsl
aad
sbb
imul
mov
negl
out
add
clc
cwtl
cmc
fs
mov
aam
test
popf
insl
ljmp
xchg
mov
fwait
in
clc
subl
mov
ret
cld
cld
add
je
enter
sbb
mov
mov
pushf
lock
mov
ret
lds
negb
fisttpll
fidivs
xchg
mov
sub
xchg
inc
insl
addr16
in
ds
pop
in
cmc
xor
dec
fs
dec
shrl
cli
roll
in
std
in
cli
push
orb
pop
mov
xchg
pop
dec
ss
mov
pop
and
test
call
fdiv
shrl
andb
fnstsw
test
mov
lea
js
jbe
mov
jns
add
data16
aam
jae
das
loopne
insb
fisubrl
int3
or
mov
and
xlat
subb
jle
mov
jmp
or
shlb
pop
xchg
aas
add
shlb
lods
repnz
cltd
sarl
stos
cmp
clc
sbb
lret
jp
stos
lods
push
popa
xor
inc
push
jg
lahf
or
sbb
sbb
inc
mov
xchg
dec
xor
test
mov
and
jnp
popa
xor
leave
pusha
or
jae
insl
jge
push
pop
outsb
rorb
pop
jg
fdivrp
cmp
popa
inc
loopne
test
je
pop
push
das
push
mov
fsubrp
add
cli
daa
push
out
fwait
lsl
out
xor
mov
jle
dec
mov
pushf
hlt
xchg
sub
inc
decb
mov
aas
push
cli
pushf
sub
mov
ds
mov
jge
adc
repz
sub
fcomp
push
push
stos
adc
push
sub
adc
lahf
cli
xlat
gs
sub
sub
jmp
cwtl
mov
pop
or
int3
xor
fisubs
add
popl
xchg
xor
repz
bnd
out
xchg
pop
xor
out
jns
cmpsb
dec
xchg
cmp
push
insl
adc
pop
mov
mov
mov
add
adc
jae
pop
subl
mov
stos
stos
cmc
adc
or
inc
cmpsb
xchg
cli
and
sbb
fnstenv
gs
xchg
push
int
sbbb
push
fisubrs
outsb
divb
xor
in
fwait
jbe
ffreep
dec
out
aaa
fldcw
mov
jge
jge
ljmp
mov
cmp
rcrl
cmpsb
inc
fiaddl
stc
xchg
popf
pop
fistl
fstl
dec
lods
jmp
mov
add
aaa
sub
dec
cwtl
jo
jbe
stos
pop
lock
sub
push
rorb
hlt
pop
or
inc
sub
out
in
jl
xchg
bound
and
hlt
pop
jge
adc
loope
add
fstps
xchg
or
sub
cmp
adc
jle
xchg
mov
out
lods
push
or
adc
loope
pop
lock
add
pop
xchg
mov
stos
pop
mov
cs
test
cmp
cmpb
sbb
mov
int
roll
mov
and
add
sbb
jp
jmp
shll
lods
push
loop
sbb
cmp
dec
dec
in
enter
xchg
loope
mov
pushf
mov
addl
loope
fdivp
push
mov
movsl
shll
movsb
xor
mov
lock
dec
lock
xchg
push
jo
es
rol
or
mov
gs
int
cmp
push
mov
sti
loop
pop
mov
xchg
sub
mov
rcrl
or
stos
inc
out
sti
bound
in
and
mov
fs
aad
adc
lock
xchg
cmp
push
sub
inc
or
repnz
cmpsl
inc
btc
into
xor
or
mov
stc
psubsb
idivl
test
sub
lea
jno
sahf
push
xor
push
or
lahf
es
inc
jmp
fistpl
je
mov
enter
loopne
sar
jle
sub
and
mov
cld
adc
sbb
lcall
repz
jne
adc
in
xlat
adc
lcall
jl
test
pop
sub
addr16
mov
push
sbb
out
sbb
mov
fdivs
pop
cmpl
outsb
js
lods
sbb
xor
push
cs
push
nop
dec
lds
fstpt
lods
ja
push
mov
sbb
ds
add
adc
push
repnz
dec
dec
xchg
fistpll
hlt
push
push
dec
cmp
daa
cmp
shll
stos
sbb
add
add
mov
xor
xorps
dec
push
lods
push
jmp
adc
mov
cmp
rcrb
into
test
mov
popf
sbb
shrl
mov
xor
add
push
jecxz
bound
les
stos
cmpsb
jge
arpl
jge
xchg
xchg
fmull
jg
inc
sub
inc
mov
add
or
mov
cmp
icebp
push
jo
xchg
sar
jb
sbb
jbe
aam
cs
mov
lahf
movsl
jg
push
mov
shl
pop
mov
mov
cld
sbb
xor
int
ret
inc
les
clc
sub
pop
fs
lods
mov
mov
xor
jbe
xchg
js
pop
mov
sbb
mov
mov
out
adc
std
and
mov
movsl
pop
mov
add
jo
shlb
xor
cmpsb
xor
inc
rorb
inc
stos
jbe
jmp
push
adc
cmp
pcmpeqb
inc
push
inc
movsb
mov
rcrl
mov
mov
jge
sub
jg
dec
in
inc
xchg
sar
or
mov
into
push
mov
lcall
jbe
xchg
aaa
int
push
cltd
and
lods
xchg
pop
sahf
and
sub
xchg
xchg
lds
xchg
sbb
add
sarl
rcrb
je
das
lods
in
outsb
pop
int
fucom
sub
faddl
repnz
outsl
xor
daa
stos
xor
sbb
xchg
xorb
std
into
sbb
hlt
dec
outsl
leave
jl
pop
lods
data16
jmp
push
mov
mov
sub
or
in
scas
cld
sub
pop
cli
jae
cmp
cmpsb
mov
pop
sar
or
mov
jnp
nop
mov
je
mov
and
xrelease
pop
mov
pop
test
sub
call
add
rclb
inc
and
mov
xchg
in
or
dec
stos
and
sub
aam
jge
loopew
stos
outsb
cwtl
lret
push
dec
adc
fsubp
and
ja
mov
xchg
push
hlt
leave
push
xrelease
cld
fwait
and
out
mov
sub
pop
fstpt
clc
or
pop
push
mov
xchg
rclb
sub
push
call
shll
add
nop
fdivs
clc
xor
bound
mov
jmp
or
in
or
sub
jnp
imul
ljmp
fnstenv
mov
fidivrl
cmpsb
addr16
mov
js
aam
test
push
adc
cld
jp
scas
mov
mov
iret
lcall
test
fstp
or
jg
fsubl
mov
dec
int
jle
push
and
lea
outsb
add
mov
test
in
rcl
adc
lret
gs
pop
pop
pop
xor
outsb
or
xchg
loop
jbe
push
fstpt
movsb
add
bound
clc
shll
pop
popa
or
data16
mov
or
in
fdivs
xchg
push
adc
push
xchg
jle
xor
inc
and
sti
push
nop
push
pop
cmpsl
rorb
mov
fwait
scas
addr16
sub
mov
xor
xlat
xor
xchg
mov
sbb
mov
mov
rcll
mov
fstps
mov
hlt
cmp
fidivrl
std
mov
cmp
sti
adc
je
stos
stc
mov
lods
jbe
test
icebp
pop
inc
push
xor
data16
xor
ret
mov
mov
icebp
mov
mov
loop
jno
jl
insl
cwtl
ds
sahf
dec
rolb
cmpsb
imul
movsb
push
hlt
sbb
mov
int
repz
aam
xlat
mov
imul
data16
inc
mov
mov
xchg
fdivrl
dec
add
mov
mov
push
xor
pop
jecxz
addb
xor
and
xor
inc
or
and
pop
adc
mov
jae
outsl
pop
mov
je
negb
outsl
faddl
mov
mov
sahf
dec
pop
data16
xchg
test
aaa
loop
imul
out
call
push
jo
jbe
mov
mov
test
xor
push
jecxz
iret
cmp
lods
mov
mov
xchg
popa
mov
push
mov
les
cmpsb
cmp
push
jmp
inc
mov
decl
and
gs
cmpsl
pop
sbb
in
jecxz
aam
jnp
sti
push
mov
mov
pop
pop
loopne
scas
aad
adc
push
lahf
mov
enter
repz
in
dec
aaa
adcl
outsb
push
mov
jle
mov
jp
sbb
stos
cmp
movsl
scas
push
pop
movsb
addr16
push
mov
lods
pop
test
aad
mov
neg
out
outsb
sti
dec
cmp
hlt
push
push
movsb
inc
sti
cmp
xor
loopne
lods
adc
mov
xor
fidivs
and
shr
lret
jg
mov
loopne
jg
dec
fcomip
not
sbb
mov
loop
jecxz
ret
jb
rclb
rcrl
lods
das
insl
movsl
addr16
dec
push
das
mov
push
lea
sbb
ja
add
sub
xchg
pop
fscale
sub
pop
aas
es
idivl
jmp
add
push
scas
cmp
in
fstps
push
jg
enter
std
sub
or
pop
push
fsubrs
lds
mov
push
inc
mov
repz
adc
cmp
imul
and
loope
mov
sbbb
adc
divb
mov
add
ror
mull
xchg
imul
push
xchg
xor
jg
pop
sbb
inc
mov
mov
es
jo
popf
sbb
fidivrs
test
das
xor
add
leave
lret
cmpsl
dec
loope
dec
movsl
fdivp
mov
imul
mov
cli
adc
js
jns
mov
mov
subb
fidivrl
xor
or
dec
add
lds
test
sti
insl
loope
sbb
ss
xor
outsl
and
clc
ficomps
inc
dec
daa
ficoml
lcall
idivb
xlat
filds
call
lcall
or
orl
aaa
loope
ret
jle
ficomps
imul
or
push
cwtl
cltd
or
xlat
xchg
outsl
sub
cmp
cmp
mov
add
add
nop
sub
mov
icebp
mov
add
test
stc
jp
outsl
sbb
icebp
xor
xor
cmp
inc
mov
xlat
sbb
adc
scas
push
sbb
insl
cwtl
fstpl
push
pop
mov
dec
imul
and
fs
sbb
lahf
popa
test
mov
mov
or
ret
mov
mov
fs
les
add
dec
aam
aaa
xor
mov
pop
pop
dec
mov
add
lds
dec
daa
push
or
stos
inc
dec
shl
add
xor
push
ja
push
lret
cmp
push
lret
xor
in
mov
fs
stos
sub
cmp
inc
int3
adc
jb
aaa
jp
ljmp
mov
add
jae
lea
adc
mov
out
and
ja
outsb
adc
pop
movsb
pop
std
cwtl
jle
add
cmp
cmc
cmpsb
mov
mov
xor
push
sarb
add
jne
or
in
sahf
shlb
in
pop
mov
lret
xchg
jle
mov
out
add
divl
cwtl
ret
clc
push
lods
sub
xchg
xchg
imul
lcall
idivb
test
mov
sbb
stos
cmp
xchg
inc
subl
push
movsb
inc
leave
mov
imull
jmp
repnz
dec
or
sti
fwait
push
aaa
push
push
mov
imul
dec
dec
lcall
arpl
dec
cmpl
stc
out
mov
outsb
sbb
adc
mov
cwtl
inc
sbb
mov
js
scas
push
sbb
mov
sub
adc
and
movsl
fwait
mov
rep
jb
jbe
sbb
or
adc
iret
data16
sahf
out
mov
xchg
cmpsb
outsb
imul
dec
imulb
push
mov
add
xor
rolb
push
and
push
lea
dec
loope
mov
cmp
pop
push
sub
cmp
cmp
jmp
movsl
std
cmp
cmp
add
daa
adc
out
dec
sbb
push
and
shrb
divb
pop
mov
inc
shll
dec
movsb
flds
add
or
in
push
push
scas
shll
dec
sbbb
xchg
in
cmc
sbb
aas
stos
xor
sub
cs
pop
mov
xor
jg
mov
ja
pop
mov
fildll
aad
sarl
lea
inc
lret
mov
int
push
inc
cmc
xor
and
or
mov
mov
in
sbb
sbb
cmp
cmp
adc
push
lcall
add
cmp
cmc
mov
out
mov
cmp
add
mov
push
je
insb
loop
ret
push
ds
xchg
clc
orb
sub
lods
test
xlat
frstpm(287
test
in
push
sbb
xchg
dec
mov
xchg
es
mov
inc
dec
hlt
ds
test
js
cltd
inc
push
adc
addr16
ret
ljmpw
lea
mov
outsl
xlat
mov
cs
dec
lcall
int
mov
in
outsl
mov
push
inc
loop
repnz
lret
testb
cmp
test
pop
xor
lods
pop
inc
popf
sbbb
xor
adc
inc
movsb
mov
outsb
cmpsl
mov
movsb
dec
pop
and
add
and
jo
mov
xor
popf
xchg
movsl
push
dec
adc
lahf
ror
jo
sub
sbb
sbb
add
or
pushf
mov
in
out
sarb
aad
adc
enter
lods
and
inc
addr16
cs
push
xchg
pop
push
pop
cmp
cmp
das
lea
jae
outsl
out
leave
mov
es
imul
and
push
int3
or
push
xchg
push
push
popa
xchg
es
pop
or
arpl
xchg
icebp
cld
mov
iret
mov
pop
mov
mov
adc
scas
and
mov
inc
xor
dec
imul
icebp
fmull
stos
testl
cmpb
add
xor
enter
pop
cltd
out
pop
and
js
fisttpll
sbb
arpl
push
push
icebp
sub
pop
outsl
cmp
mov
out
daa
in
loope
std
sbb
sub
or
mov
or
movsb
mov
xor
mov
ljmp
jb
jmp
std
mov
add
arpl
pop
jae
mov
mov
jb
add
lret
push
sarb
xchg
pop
ja
push
cmc
fidivl
cmpsl
leave
test
mov
dec
jp
jne
lea
inc
inc
push
inc
and
jb
enter
insb
sbb
mov
fcomps
pop
popf
mov
aad
mov
dec
mov
popf
push
dec
adc
iret
xor
aas
data16
lcall
push
mov
test
xorl
dec
or
sbb
roll
add
jno
jle
mov
cmpsb
push
cwtl
hlt
cmovae
xor
xor
lret
aad
lcall
add
ds
fwait
adc
cmpsb
pop
jnp
push
movsb
lahf
insb
pushf
or
das
sub
imul
xor
mov
shr
insl
mov
adc
movsl
scas
flds
sub
insb
dec
imul
in
pop
sub
sbb
or
outsl
fdivrs
ja
stc
outsb
mov
xchg
push
mov
lock
push
sbb
and
cltd
cmp
xor
dec
jne
into
mov
cmp
mov
stos
adc
fsubrl
je
sbb
adc
je
adcl
xor
cwtl
mov
in
xchg
push
or
dec
push
lahf
scas
or
cmp
push
mov
movsl
xchg
outsl
and
mov
addr16
rorb
pushf
sti
cmp
subb
ljmp
mov
sbb
mov
xlat
leave
test
and
lock
sub
mov
dec
fsts
add
enter
shrb
stc
js
pop
sahf
cwtl
xchg
out
cmp
xor
and
mov
pusha
popa
inc
test
loop
out
pop
or
xor
cmp
mov
orb
test
xor
fs
cmp
pop
loopne
aas
mov
push
pop
insb
cmpsb
dec
mov
cwtl
dec
dec
xlat
push
aaa
jg
ds
push
cmpsl
dec
loope
xor
pushf
icebp
push
outsb
and
jbe
adc
adc
leave
mov
sub
je
popf
mov
adc
mov
inc
xchg
mov
jno
mov
dec
jo
inc
sbbl
test
clc
and
jne
pop
or
std
xchg
push
stc
call
test
sub
or
mov
fisubl
lea
sbb
mov
lods
subb
std
sub
popa
hlt
lret
out
cld
or
popf
ror
jle
addl
mov
sub
push
addr16
fstpt
in
push
pop
ds
add
inc
int
incb
mov
arpl
test
sub
inc
clc
push
cmp
jecxz
mov
cltd
std
loope
lret
xchg
dec
gs
repnz
test
dec
enter
mov
adc
push
out
lret
xlat
movsl
pop
jle
inc
or
pop
call
pop
lods
pop
push
and
or
or
nop
nop
addr16
xlat
push
lret
adc
sbb
arpl
rcrb
sub
aas
adc
in
cld
outsl
adc
or
mov
sub
xchg
mov
pop
pop
pop
lret
popa
add
mov
cs
lahf
das
sub
gs
in
push
int
inc
add
clc
shrl
loop
and
adc
pop
mov
ret
fcos
test
ret
mov
pop
or
fidivl
popf
loopne
xchg
push
ss
sub
fstp
add
sub
sbb
mov
enter
xor
testl
ja
adc
stos
std
and
mov
sbb
and
cmpsb
jb
shlb
shrl
mov
push
sub
jecxz
mov
cmpsl
cmp
push
dec
into
mov
adc
mov
sub
notl
sub
mov
in
dec
mov
xor
or
insb
add
mov
fadds
gs
es
pop
incl
std
cmp
mov
andb
dec
mov
adc
push
das
out
jg
dec
icebp
lahf
fisubl
arpl
dec
popf
xchg
sub
sarb
arpl
ds
ss
cmp
cmp
movsb
test
pop
mov
mov
mov
fdivrp
ss
imul
imul
repnz
cmp
push
std
pushf
insb
aam
and
cwtl
pop
cmpsl
fnstcw
in
mov
fidivl
inc
adc
or
inc
mull
cmp
loopne
cli
out
mov
out
dec
addr16
xlat
xchg
inc
pop
orl
mov
mov
test
popf
sbb
gs
pop
pop
inc
pop
push
outsb
fucomi
add
lea
out
sti
pop
mov
enter
adc
je
or
lods
divb
jne,pn
inc
stc
xchg
dec
aad
sub
les
jno
pop
gs
mov
inc
aam
ret
in
xor
lods
mov
lods
dec
sbb
sub
mov
inc
push
ror
jle
lahf
nop
subl
emms
hlt
push
sub
lcall
aad
out
push
push
adc
repz
sbb
dec
mov
lcall
aaa
cmc
adc
dec
idivl
push
push
in
cmpsl
xchg
pop
push
loopne
shl
clc
pusha
pop
push
enter
xor
dec
push
out
pop
adc
iret
inc
in
imul
ja
cwtl
jno
sbb
and
stos
cmp
inc
inc
cmpsb
mov
pop
dec
push
mov
in
push
out
mov
mov
jg
mov
push
jne
push
xchg
cli
stos
pop
test
pusha
or
xlat
bound
jmp
dec
sbb
mov
imul
adc
ja
or
cld
or
jns
out
sbb
stos
lahf
pop
dec
cmp
fdivs
and
jnp
xor
sbbb
mov
jne
adc
cmp
nop
mov
lahf
jge
stos
and
xchg
xchg
pushf
roll
push
js,pt
jb
adc
pop
xchg
and
jo,pn
out
mov
push
pop
aam
jbe
xchg
ret
lahf
sbb
pop
dec
pop
dec
imul
aas
pop
push
jnp
pop
mov
jbe
arpl
gs
pop
sbb
sub
sub
xchg
scas
stc
cltd
ljmp
popa
movsb
inc
sub
out
arpl
push
cmpsb
outsb
dec
jge
fildl
fadd
push
arpl
jns
fisubs
stos
out
insb
dec
das
mov
adc
lret
add
xchg
add
insl
sbb
inc
sbb
dec
xchg
or
loopne
jne
xchg
roll
dec
fnsave
mov
add
nopl
call
adc
adc
daa
mov
call
mov
sti
push
sub
sti
out
scas
xchg
arpl
mov
pop
jle
popf
and
jbe
dec
fwait
xor
xor
inc
int
rcrb
jnp
mov
inc
lods
test
in
push
mov
popf
dec
les
xchg
icebp
repnz
rolb
scas
pop
mov
sbb
dec
pusha
mov
outsl
pop
mov
out
enter
in
fists
test
adc
les
outsb
enter
mov
ja
addb
lahf
aaa
sbbb
pop
adc
jp
ss
loope
xor
movsl
lods
jbe
inc
clc
int
mov
scas
mov
jae
into
xchg
add
jo
xchg
jbe
call
fldcw
movsl
and
in
enter
mov
cmp
jmp
pop
mov
cltd
jno
cmpl
int
push
into
int3
cmpsb
outsb
cltd
leave
add
adc
or
mov
aam
push
and
jo
and
outsb
out
fstpl
int3
xor
sbb
xchg
xor
push
ret
pop
jmp
es
pop
push
pop
gs
cmp
rorb
cmc
xchg
pop
mov
adc
dec
shl
xor
cmp
movsb
sub
mov
ja
push
inc
in
leave
aaa
sub
sbb
xchg
push
xchg
lahf
xor
fwait
jnp
and
pushf
add
jl
dec
mov
fadd
rcll
fsubr
add
push
js
add
xchg
insl
cmp
arpl
bound
xor
mov
jp
mov
cmpsl
inc
int3
lahf
add
dec
inc
add
jne
aas
idivb
adc
sub
cmpb
dec
dec
mov
push
cmp
lods
push
cmp
cltd
lock
mov
adc
shlb
sbb
fwait
xor
inc
xchg
fdivrp
ljmp
fs
inc
mov
jle
jno
xchg
fimuls
add
aad
sub
shl
lods
mov
mov
lock
dec
imul
std
add
add
shrl
daa
imul
inc
outsl
sub
in
mov
adc
mov
jae
mov
mov
adc
fwait
std
popf
and
inc
pop
fldl
addr16
pop
push
test
dec
ret
aam
scas
cmpsl
xor
or
jecxz
jg
rol
imul
shlb
cs
pushf
adc
leave
pop
inc
imul
dec
fld
mov
loopne
jmp
add
mov
xlat
sbb
pop
ret
daa
cmp
pop
sub
imul
xorl
mov
jo
jbe
ret
movsl
mov
push
cs
mov
xchg
vmread
test
sub
mov
ret
shlb
inc
jp
sub
es
pop
jg
outsl
in
mov
mov
adc
dec
push
jnp
push
cld
and
sbb
cmp
fmuls
add
adc
sbb
or
test
lods
subb
insl
ret
xor
xchg
xchg
xchg
cmp
xchg
mov
daa
pusha
sahf
lret
in
loop
fs
inc
push
pusha
mov
aad
xchg
cmp
mov
lret
lret
in
xor
data16
rorl
and
jno
pop
test
test
loop
jb
pop
or
sbb
aaa
movsl
test
sub
sbb
shrb
push
adc
aad
rorl
nop
add
push
and
xchg
inc
sub
inc
lar
sbb
fimuls
jmp
mov
cmpsl
enter
mov
xchg
jmp
orb
bnd
sbb
pop
ljmp
xor
lret
imul
sbb
adc
pop
aad
mov
or
inc
mov
dec
and
cmp
out
pop
gs
outsb
jo
leave
sbb
call
adc
xchg
lock
and
ljmp
adc
xor
out
int
fisubl
xchg
cmc
aas
jg
dec
adc
test
mov
add
lahf
in
bound
daa
sbb
aas
in
fmul
cwtl
push
ss
pop
mov
push
inc
repz
mov
push
dec
xchg
lret
cli
outsl
jnp
pop
jns
mov
addr16
pop
adc
pop
xor
add
mov
cmp
decb
into
fwait
cli
test
loop
xor
scas
int3
and
cs
ret
or
pushf
icebp
and
xlat
and
adc
leave
inc
movb
push
jb
mov
sub
imull
ret
and
or
mov
jp
dec
adc
fisttpll
push
aas
cmpsb
clc
jb
adc
je
mov
arpl
fbld
cmp
pop
in
xchg
ljmp
push
movsb
lret
gs
inc
mov
sbbl
adc
roll
fsubrs
mov
pusha
jae
mov
xor
inc
scas
stos
and
cs
sbb
inc
in
lret
bound
sbb
xchg
xlat
cmp
mov
inc
and
sub
popa
and
mov
mov
scas
ret
cli
in
and
lcall
mov
leave
cmp
cwtl
or
cmp
or
and
sub
fstl
and
mov
fabs
cmp
mov
add
push
and
into
push
or
testl
aas
addb
scas
repnz
fdivr
fwait
mov
stos
aad
out
xchg
xchg
test
jp
jae
in
inc
mov
xchg
pusha
mov
subl
loopne
mov
lahf
test
mov
xor
cmp
test
xchg
or
pushf
adc
mov
mov
sbb
shl
jle
fistl
dec
pushf
add
mov
fidivl
sub
or
xchg
repz
jge
lcall
mov
adc
mov
addr16
add
mov
xchg
inc
js
jb
mov
xor
loopne
loopne
inc
rclb
xchg
shrl
jge
std
sub
jmp
mov
movsl
push
imul
rolb
sbb
dec
or
pusha
dec
repnz
push
imul
add
xchg
dec
aad
mov
jno
and
jg
push
imul
cmp
adc
jecxz
pop
jo
cmp
xchg
insl
jne
push
test
inc
imul
xor
andb
push
rorl
lcall
xorb
mov
mov
cwtl
dec
mov
jno
xchg
push
data16
in
mov
xchg
or
jns
ds
inc
sti
out
mov
add
fcmovnbe
jb
xor
or
lahf
aad
pushf
cmc
cmp
or
mov
std
mov
jnp
test
inc
lods
fisubrl
mov
push
lock
divl
mov
subl
pop
inc
daa
add
test
add
pop
mov
les
mov
mov
xchg
xchg
push
std
fs
pop
aam
lret
adcb
repnz
fsubrp
mov
hlt
cmp
int3
stc
xchg
jbe
xor
inc
mov
pusha
mov
iret
mov
mov
mov
xor
or
xor
inc
arpl
mov
aas
mov
pop
lret
mov
inc
xchg
dec
stos
sub
in
cmp
xor
ja
hlt
orl
sbb
pop
jge
shrl
sub
jge
mov
out
push
mulb
ja
mov
lahf
xchg
lcall
repz
stc
mov
jbe
icebp
sub
sarl
jne
mov
sahf
cmp
jmp
or
and
int
xchg
in
cmp
jp
jg
pushf
push
adc
movsl
sub
jne
repnz
dec
int
xor
xor
cmp
or
mov
sbb
out
shll
fwait
cmp
inc
stc
aas
aad
xor
sub
mov
push
lods
ljmp
aad
push
scas
movsl
and
lods
cwtl
stos
lret
leave
sub
jmp
mov
xor
adc
inc
lea
lret
adc
xchg
gs
sub
pop
xchg
or
cmp
add
inc
mov
jle
cmpsb
xchg
dec
mov
cld
dec
mov
loop
adc
lds
gs
test
fcmovbe
inc
jl
mov
pushf
icebp
ds
das
pop
jmp
lods
test
push
mov
aas
movsb
shr
fldl
loop
mov
inc
daa
jno
jl
adc
fcomp
cmp
fimuls
jmp
jmp
sbb
xor
and
or
call
dec
jl
push
xor
mov
or
sbb
push
mov
mov
and
ss
push
xlat
inc
adc
xor
jae
add
in
push
pop
cld
inc
mov
inc
fwait
jne
jne
jge
and
mov
inc
movsb
mov
push
pop
call
ret
inc
mov
mov
push
add
enter
jp
pop
popa
jae
lods
add
into
xchg
sub
or
cmpl
dec
push
loope
xchg
jb
hlt
mov
pop
dec
test
pop
inc
loope
cmp
fcomp
addr16
call
jo
xchg
adc
xchg
rcrb
xor
sub
and
mov
mov
movsb
inc
cwtl
stos
mov
clc
fs
xchg
fstps
cmpsl
inc
xor
cs
aaa
inc
repz
loope
jae
stos
dec
scas
cs
cmc
aad
add
ja
pop
ret
mov
imul
jae
arpl
stc
mov
pop
pop
and
jns
int3
mov
inc
dec
xchg
adc
pushf
mov
jecxz
ljmp
ja
outsl
arpl
pop
fldenv
rorb
loopne
not
mov
shrl
cmp
push
add
insb
push
push
jg
inc
and
mov
jbe
ds
shrb
push
incb
sub
loop
loopne
dec
inc
mov
push
cmp
repz
or
imul
outsl
ja
cmp
mov
je
mov
cmp
push
ret
cli
pop
pop
inc
lock
sbb
loopne
cmp
adcl
add
pop
xorl
rcll
jno
test
mov
test
mov
cmpsb
xchg
fstpt
xchg
imul
xor
pop
ss
lock
adc
sbb
jns
pop
push
dec
xor
sbb
rcll
push
and
sbb
roll
scas
mov
sbb
mov
out
aam
out
or
inc
and
push
xchg
popf
test
sub
mov
cmp
xchg
rol
sbb
jp
imul
mov
add
add
fisubrs
out
loopne
test
mov
inc
enter
xchg
mov
fwait
das
sub
imul
xchg
adc
lret
jno
inc
addr16
jp
or
inc
in
clc
add
inc
insl
repz
in
les
pop
xchg
stos
xchg
mov
pop
inc
push
aad
rclb
insl
pushf
inc
rcrl
mov
push
inc
mov
mov
shr
and
or
rolb
enter
or
scas
push
push
sbb
inc
pop
in
push
rorb
mov
mov
mov
notb
mov
or
mov
mov
mov
jbe
out
and
add
aam
insl
mov
jb
subb
movsb
dec
xchg
add
cmp
xchg
sub
sub
aas
out
dec
insb
inc
aaa
sahf
sahf
sub
inc
rcl
or
inc
int3
mov
jp
mov
stc
inc
xchg
sarb
scas
jae
sahf
and
lock
add
in
xor
mov
add
data16
xchg
fistpll
push
rclb
pushf
cwtl
stos
fldt
loope
or
xchg
ret
stos
inc
sti
sahf
jmp
lds
dec
enter
sti
insl
sbb
sub
dec
aam
shlb
mov
sbb
es
pusha
mov
shll
jnp
adc
add
mov
bound
sarb
push
xlat
stc
stc
inc
sub
cmpsl
call
fiadds
sbb
sub
ds
into
shl
out
xchg
in
je
xor
outsb
iret
lock
pshufw
pop
gs
mov
xor
fsubrs
outsl
pop
pop
and
mov
lahf
mov
cs
cmp
xchg
addr16
ret
push
jo
dec
repnz
jp
lds
aas
sbb
cmp
push
inc
xchg
es
shrb
jb
pusha
je
push
add
setle
ljmp
int3
stc
pop
adc
les
mov
or
xlat
mov
dec
add
sub
push
scas
xchg
mov
mov
cmc
scas
fimuls
pop
mov
dec
enter
dec
ss
jp
cmp
cltd
sbbl
sti
pop
jmp
out
jmp
cmpb
dec
sub
movsl
mov
xchg
add
or
popa
insb
cli
cmp
cwtl
loopne
imul
xchg
in
or
cmp
jne
leave
mov
in
lods
ljmp
dec
ret
mov
xchg
sti
and
xchg
cmpsl
int3
dec
sbb
scas
ret
add
jnp
inc
mov
repz
pop
xchg
loope
cmp
out
sub
adc
imul
dec
cmp
xor
in
lock
inc
fmull
mov
dec
arpl
lret
sbb
or
out
xor
adcb
inc
sbb
dec
inc
add
out
addr16
and
add
sub
subb
mov
jns
push
mov
mov
xchg
or
mov
imul
sub
movsl
shll
cltd
outsb
ret
push
jbe
lret
repnz
mov
sahf
testl
jmp
test
mov
mov
js
movsb
or
rclb
mov
mov
push
push
mov
mov
outsl
fcomps
mov
rcrl
push
hlt
mov
sbb
push
dec
xchg
jmp
enter
mov
sub
xor
jns
lds
dec
jns
enter
ds
xor
ret
sbb
out
lret
popf
jg
mov
sti
scas
dec
imul
in
mov
mov
pop
cmpsb
push
bound
ljmp
sbb
pushf
xchg
mov
sub
xlat
mov
cmpsl
in
jl
addl
pop
jne
and
jne
cmpsb
jae
push
sbb
push
jb
cmp
shrl
dec
dec
cld
cwtl
ss
imul
cmp
into
mov
sub
push
std
add
nop
lea
scas
fnstcw
cli
dec
stos
jg
jae
jp
mov
push
push
jo
pop
icebp
aam
pop
scas
pop
daa
add
cs
and
outsb
insb
sbb
and
adc
in
rcl
fs
fwait
inc
iret
mov
int
sbb
xlat
cmp
jge
mov
insb
shlb
bound
aaa
xchg
aam
repnz
andb
push
lret
jge
dec
or
mov
push
dec
jl
adc
lea
add
repnz
mov
pop
mov
xor
sub
mov
mov
stos
sar
xorl
cmp
lret
push
lods
dec
fisubrl
les
ss
push
xchg
je
scas
mov
pop
call
aaa
std
fsubs
jle
pop
mov
aad
sub
js
adc
cwtl
fisubrl
adc
pop
and
adc
add
dec
mov
daa
int
ja
sbb
push
adc
jo
addr16
bound
jl
xor
push
jmp
je
push
add
adc
xchg
cmp
adc
push
movsl
xchg
shll
fucomi
lret
or
cmp
inc
xchg
fwait
lcall
stos
mov
sbb
mov
push
aam
pop
movsl
mov
ljmp
sub
out
cmpsb
cmp
adc
lods
pop
pop
pop
icebp
iret
subl
push
pop
sbbl
xor
mov
cli
inc
lods
sbb
fstps
add
mov
adc
jmp
pop
add
add
xchg
hlt
push
or
push
stos
xor
test
lods
bnd
lahf
loopne
stos
xorb
adc
in
push
sub
cltd
loop
ret
mov
fs
jecxz
xchg
bound
popf
adc
pop
mov
sub
leave
lahf
inc
xor
push
lds
in
inc
arpl
gs
sub
jg
mov
scas
sub
sahf
inc
push
cmc
push
test
fadds
pushf
add
test
push
gs
pop
mov
jle
cltd
out
mov
jl
js
fidivl
pop
mov
jno
rcll
rorl
jb
dec
inc
cmp
insl
sub
xchg
mov
sub
mov
nop
or
cs
push
negl
jae
xchg
mov
xlat
xchg
inc
sti
test
jmp
inc
sub
movsb
dec
push
mov
clc
mov
adc
ret
xchg
outsl
int3
arpl
popf
add
shll
mov
or
rcr
jle
jecxz
sbb
repz
inc
sti
loop
ret
das
mov
pop
dec
in
pop
call
mov
stc
movsb
movsb
out
mov
or
dec
gs
pop
xchg
lods
ror
outsl
xchg
cmpb
dec
addr16
andl
jg
shlb
adc
lahf
sbb
xchg
lods
filds
inc
xor
nop
inc
js
int
cli
mov
or
hlt
mov
aam
ret
ja
out
js
xchg
jbe
mov
cld
in
lcall
dec
gs
sub
insb
nop
popa
les
xor
lret
movsl
inc
inc
xchg
in
pop
adc
popf
xor
jns
jb
jae
pop
xchg
insl
popf
mov
pop
sbb
data16
ss
pushf
inc
mov
ja
jb
dec
mov
pop
lahf
inc
fimull
mov
test
push
xlat
in
fists
xchg
add
ljmp
or
outsl
mov
int
cmc
cmpl
ret
push
jmp
xor
xor
test
pop
daa
dec
mov
xchg
es
popa
mov
adc
cmpsl
mov
xor
in
pop
adc
cmpsl
pop
mov
push
xchg
out
incl
and
dec
and
enter
sti
ljmp
scas
dec
cmp
fnstsw
push
push
icebp
fwait
mov
inc
repz
mov
imul
dec
cwtl
imul
mov
sbbb
push
test
lcall
mov
pusha
mov
ror
mov
iret
xchg
jno
push
lsl
adc
add
cltd
xchg
lret
pop
mov
in
stos
xlat
jle
lcall
cmp
sbb
shlb
add
pop
pop
cltd
dec
data16
cmp
fld
dec
push
mov
adc
cmp
cmp
imulb
push
imul
std
push
insl
cmp
aas
jo
sub
push
in
adc
sub
gs
push
loop
cmpsb
push
ja
dec
add
inc
or
adc
aas
pop
stc
cmp
bound
loope
cmp
test
outsl
add
push
sub
xor
out
in
test
cwtl
out
sbb
cmpsb
aaa
fcomps
movl
add
push
or
adc
push
push
jns
stc
data16
imul
pop
mov
and
lsl
jle
imul
aam
pop
movsl
dec
inc
outsl
rorb
adc
shl
jl
add
dec
int3
add
nop
and
movsl
rolb
jb
stos
in
cmp
sbb
insl
inc
add
lahf
fbstp
fwait
add
cmp
jb
in
xchg
sbb
add
out
movsl
lods
mov
pop
mov
lea
dec
mov
iret
repz
push
orb
sbb
adc
jg
dec
imul
lods
sbb
sbb
mov
test
mov
fadd
je
or
xchg
adcb
icebp
lock
movsl
in
stos
dec
dec
sbb
loop
push
incb
cld
ja
frstor
push
sbb
iret
std
push
insb
xor
sub
push
adc
jecxz
push
aaa
leave
jl
xor
add
in
dec
pop
fisttps
xchg
add
scas
mov
dec
lods
mov
pop
faddl
mov
inc
push
adc
out
sahf
ljmp
in
in
data16
or
loope
jecxz
cld
pusha
loop
out
push
pop
pop
pop
test
sti
out
push
shlb
jg
aad
jp
in
mov
push
xchg
shl
xorb
loop
mov
dec
inc
test
mov
inc
mov
ss
sub
add
loop
push
pop
push
cmp
adc
hlt
jp
mov
ja
add
xor
aas
sub
sub
fsubp
jmp
test
cmp
sbb
inc
test
jmp
add
fldenv
inc
ficomps
mov
mov
sub
sahf
mov
sbb
testb
out
andl
movsl
pop
sub
mov
jnp
cmp
inc
jo
sbb
icebp
pushf
cmc
xchg
icebp
das
cmpsb
dec
sub
xchg
xchg
mul
sub
sub
call
clc
cmp
adc
lret
cmp
cmp
pop
imul
pop
cld
sub
sbb
dec
ret
dec
push
mov
jmp
jl
push
lcall
xchg
cmpsl
push
push
pop
lcall
mov
imul
sbb
dec
xchg
test
test
pop
js
dec
lods
push
dec
mov
in
arpl
test
outsb
cli
xor
loop
scas
mov
pop
test
push
shll
mov
add
jae
aad
inc
cwtl
lock
inc
cmpsb
mov
mov
xor
or
in
stos
cmp
push
push
push
in
jns
mov
dec
call
mov
call
mov
sub
lret
fdivrl
and
inc
rcrb
inc
jnp
cmp
iret
dec
xchg
leave
mov
aad
addr16
xchg
xchg
adc
ror
sub
dec
imul
shll
loopne
and
movsl
mov
out
cmp
test
cwtl
hlt
out
inc
push
dec
add
fisttpll
xchg
pop
jecxz
lahf
cmp
sub
fisttpl
in
sbb
xor
dec
ja
in
repz
aad
push
pop
fdivs
or
ljmp
sub
dec
hlt
or
xor
push
mov
es
lods
testl
test
lods
sbb
fildl
repz
pop
les
jl
movsl
jmp
daa
lea
or
or
push
pusha
xlat
stos
jbe
sub
std
dec
hlt
test
mov
mov
std
xor
shrb
mov
adc
or
insl
add
jle
mov
shll
and
sub
cs
or
popf
pop
mov
in
push
dec
xor
sbb
xor
in
ja
mov
jnp
mov
and
jne
cmp
pop
sub
xor
mov
and
rcr
add
dec
int
es
jmp
fdivr
sbb
mov
pusha
sarb
cld
inc
jnp
xchg
cli
xchg
push
inc
add
fcom
mov
pmuludq
repz
out
loop
inc
sbb
lods
inc
pop
or
mov
mov
sub
leave
cmp
ret
lcall
ds
aas
pop
loopne
sub
rolb
cwtl
sbb
jle
out
add
cmp
inc
sbb
inc
add
call
xor
ja
js
push
mov
mov
popf
fadds
xchg
jle
pop
out
stos
loopne
addr16
fcmovbe
sub
ljmp
jmp
xchg
scas
pop
outsb
jo
shl
cltd
jle
and
cmpsl
sbb
inc
imul
out
or
jae
bnd
ja
in
pop
into
shlb
mov
xor
imul
dec
das
cmp
das
lods
add
enter
lret
mov
bnd
sub
loop
stos
arpl
xchg
inc
mov
and
fldcw
lods
aam
mov
aad
test
mov
out
push
leave
pop
mov
sub
aaa
lea
push
lahf
in
imul
xchg
es
pop
sahf
dec
mov
cmp
xor
lock
leave
data16
stc
mov
aad
dec
mov
mov
aas
ret
xor
inc
rorl
into
sbb
mov
je
and
mov
and
and
dec
loopne
push
sbb
ljmp
iret
xor
xchg
mov
into
dec
into
mov
or
xchg
flds
pop
out
and
shrl
dec
and
jae
outsl
add
cmp
fcomp
pop
repz
lret
xor
sarl
push
jno
inc
loopne
ror
sbb
mov
jmp
add
stos
fld
fdivr
jmp
mov
push
idivl
mov
sbb
adc
jbe
and
pop
frstor
sbb
insl
test
loop
adc
or
sub
push
arpl
mov
xor
into
jp
jb
jmp
mov
xor
sub
cmp
push
jns
jo
pop
insb
jno
jl
out
dec
mov
inc
gs
jae
cmp
out
enter
xor
out
or
or
cld
xchg
ds
or
scas
xlat
mov
cmpsb
xchg
push
insl
pop
inc
mov
std
nop
cwtl
lret
or
mov
jns
jecxz
jno
icebp
outsl
adc
push
push
lods
inc
fldenv
add
insl
lea
sbb
cmpsb
sbb
pop
clc
dec
mov
mov
scas
fnstcw
push
jno,pt
loop
add
mov
daa
in
nop
rcrb
push
sahf
sbb
mov
imul
lds
mov
mov
pop
adc
adc
mov
fidivl
aas
push
into
int3
adc
push
movsb
call
rorl
shl
int3
mov
jnp
shrb
test
ret
test
lods
or
loop
inc
cmp
pop
add
mov
cmp
arpl
rolb
test
xlat
mov
sub
pop
fnstcw
inc
sub
push
or
xlat
ss
or
sub
jecxz
jbe
and
test
xchg
mov
push
cmp
pop
xchg
dec
ljmp
mov
call
pop
dec
shl
pop
pop
cmp
cmp
mov
or
adc
mov
mov
fsubrl
mov
dec
xor
stos
push
inc
bound
dec
pop
jns
popf
sbb
sub
fidivs
mov
ja
or
mov
cmp
insb
pop
jge
cwtl
daa
inc
and
loope
insb
push
fnstenv
jl
xor
lahf
sub
mov
add
insl
sub
or
sbb
insb
dec
ret
into
push
xor
xchg
lret
addr16
enter
imul
leave
sarb
fbld
xor
mov
mov
inc
in
repz
fdivrl
das
add
stos
mov
std
dec
rcll
loopne
mov
fistl
xchg
xchg
or
mov
rcrb
xor
and
add
shr
ljmp
cmp
add
jecxz
push
lss
cmovno
cs
jbe
sbb
xchg
loope
cld
or
mov
push
imul
xor
mov
fistl
inc
inc
xchg
outsl
mov
sbb
sub
push
in
int
xor
dec
mov
push
jg
cmc
jmp
fisttpl
jno
jmp
sahf
or
sub
lahf
jnp
and
in
mov
xchg
pusha
in
aas
out
xchg
into
sbb
mov
rorl
aam
fsubrs
sub
bound
and
mov
jp
pop
dec
cmp
icebp
dec
cmp
inc
stos
into
shl
push
outsb
mov
pop
xor
insb
int
adc
jmp
sbb
or
cwtl
and
mov
daa
stc
inc
ja
adc
mov
xchg
push
xchg
cmp
ret
test
jp
sub
mov
stos
ljmp
inc
add
or
stos
mov
lea
push
inc
push
lods
lahf
mov
jle
dec
xorb
inc
aam
daa
and
jb
xor
lret
enter
xor
sbb
testl
mov
popa
fmuls
in
cmp
jbe
sub
ds
popf
jg
cld
ret
gs
stos
divl
pushf
pop
imul
in
inc
divl
mov
push
gs
and
cltd
cmp
addb
ss
push
mov
aam
or
mov
cli
ja
loop
mov
jae
or
rcrb
test
jmp
add
sub
adc
jmp
and
jge
enter
and
add
pop
or
dec
xor
inc
outsb
out
sti
test
nop
cli
fsubp
jns
andl
jp
mov
hlt
mov
sub
inc
xchg
xorl
push
dec
mov
sbb
aad
pop
jae
or
adc
aaa
inc
jb
xchg
mov
inc
sub
pop
sub
pop
jmp
sub
dec
jp
mov
pop
rcl
mov
xchg
in
mov
push
push
aad
add
or
pop
in
and
jne
cld
cmp
sub
scas
stos
mov
repnz
xlat
mov
inc
pop
cld
and
lahf
xor
aad
lds
add
add
or
mov
orb
cmp
and
dec
arpl
sbb
sbb
in
iret
mov
orl
mov
pop
lock
mov
inc
push
cmp
push
jmp
ret
or
cmpb
dec
add
mov
shlb
mov
sbb
fidivrl
sahf
je
sti
rep
mov
push
aad
ds
push
rorb
ja
icebp
fstpt
lods
lea
jae
test
sbb
loopne
ss
xlat
mov
inc
pop
lret
sub
sub
adc
pop
dec
pop
mov
adc
jns
mov
jge
loopne
cwtl
jo
lods
loop
cltd
or
inc
iret
sbb
mov
pop
stc
lods
mov
clc
testb
inc
xor
xlat
lock
jg
inc
ficoml
jo
jle
mov
inc
aam
dec
mov
data16
shlb
mov
push
js
cmp
lods
popa
inc
stos
xchg
jg
push
pop
add
inc
ja
push
fimull
aad
cmp
jmp
or
test
lret
stos
or
jecxz
ss
repnz
mov
loope
xchg
into
sbb
iret
sbb
mov
and
dec
xchg
mov
decb
xchg
or
mov
and
cmp
fs
outsb
enter
push
push
outsb
jbe
lea
inc
jecxz
popa
cltd
jecxz
jo
pop
jg
lret
xchg
jae
arpl
in
loopne
fwait
lret
loopne
orl
xor
adc
bound
sbb
iret
sbb
rolb
in
cmpsl
inc
and
mov
adc
es
add
js
cmc
xor
xchg
icebp
test
pop
sbb
fisubrs
mov
nop
lret
lds
cmp
mov
cmp
pop
movsl
ret
test
lcall
pop
out
sti
cli
mov
shrb
sub
pusha
jae
adc
inc
scas
repnz
lret
add
sub
scas
mov
iret
xchg
nop
cli
adc
rorl
mov
jns
fimull
icebp
movsb
add
dec
pop
mov
mov
push
ret
add
icebp
setbe
mov
int
into
repz
loopne
xchg
lods
call
in
lret
shrl
stc
or
iret
sub
ljmp
mov
out
cmc
daa
mov
cmp
das
jb
inc
movsl
cmp
in
daa
faddp
xor
outsl
roll
aas
out
das
mov
fcoms
mov
dec
dec
add
dec
pop
aaa
dec
leave
jmp
jle
rcl
sub
mov
adc
iret
pop
xor
sahf
dec
test
cmp
mov
inc
loop
cwtl
out
inc
lock
jle
cmpsl
imul
ret
pop
insl
pop
icebp
mov
in
cmp
outsl
shrl
test
mov
adc
fisubrs
adc
lret
loope
popf
cli
in
add
mov
aas
mov
mov
xor
dec
add
lea
pop
cwtl
cwtl
out
lret
js
insl
mov
add
cmp
mov
lods
mov
inc
mov
imul
jge
push
lods
mov
in
cmp
mov
out
je
jne
dec
push
into
adc
lss
pop
jge
leave
cmp
xor
sbb
or
push
inc
insl
dec
lods
into
es
push
imul
inc
inc
mov
inc
jmp
scas
mov
pushf
and
lds
or
cmp
lds
fwait
cmp
inc
push
xor
cmp
cwtl
daa
mov
jle
push
fsubp
fldcw
push
test
cmp
add
mov
push
lock
lods
jmp
add
insb
cmp
sti
or
jmp
xchg
or
aam
rep
inc
mov
gs
rolb
mov
call
hlt
test
and
or
xchg
gs
sti
mov
cmp
dec
sub
cltd
stos
and
inc
sub
out
add
pop
dec
mov
lcall
push
lahf
jae
jl
jne
or
jl
pop
push
cmp
inc
pop
dec
mov
mov
sub
aad
jmp
mov
and
dec
mov
arpl
pop
add
jne
mov
mov
insb
mov
dec
jb
push
adc
rcr
xchg
push
cmpsb
into
xchg
bnd
inc
jno
imul
add
call
jmp
jl
fdivs
sbb
jg
test
xchg
lock
inc
add
aas
xor
sbb
adc
xor
call
ret
dec
test
repnz
dec
mull
js
outsl
das
scas
and
in
mov
inc
xchg
out
fists
cli
enter
and
push
pop
dec
xchg
inc
jbe
push
outsb
cltd
push
and
xor
mov
aaa
scas
dec
and
push
cs
cmc
in
push
mov
repnz
pusha
lahf
and
cmpsb
dec
aas
xor
mov
lds
lock
inc
icebp
add
and
mov
sahf
mov
push
jo
frstor
inc
mov
mov
or
pop
cwtl
movsb
imul
fucom
jg
pop
out
frstor
cs
xor
outsl
lahf
std
add
sbb
gs
repz
mov
outsl
clc
jo
push
cmpsb
out
imul
ret
cld
arpl
xchg
sub
and
stos
icebp
mov
out
ss
popa
inc
sti
into
sbb
adc
repz
iret
push
fdivrs
sub
rcr
ljmp
sti
adc
sbb
push
fwait
mov
mov
cmp
jbe
and
mov
mov
js
jbe
inc
iret
sub
test
shrb
dec
xchg
aas
scas
mov
xor
fstpt
movsb
add
aas
sbb
pop
cmc
push
fadd
sahf
cmp
je
popf
add
jmp
xchg
gs
sub
add
adc
clc
push
add
dec
mov
push
roll
out
inc
xlat
adc
aaa
push
jae
enter
adc
insl
push
jg
mov
pusha
mov
push
in
in
push
sub
push
gs
fildl
les
lods
outsl
jle
adc
push
xor
sub
lret
xchg
in
movsl
notb
repnz
mov
mov
ret
idivl
jmp
cmp
test
lods
cld
sub
cmp
or
pop
sbb
mov
cmp
test
rcrb
dec
push
pop
cmpsb
insb
mov
mov
jge
sbb
stos
jb
outsl
xorl
jl
popa
jp
aas
arpl
daa
wrmsr
pop
adc
mov
cmp
arpl
movsl
adc
rclb
and
adc
mov
stos
inc
cmp
adc
or
daa
or
shll
pop
fld
es
test
xchg
out
outsb
mov
mov
mov
arpl
or
xor
aaa
sbb
adc
inc
aaa
out
jle
imul
movsl
fsubr
sarb
and
stos
jp
jmp
jb
and
pushf
and
ljmp
mulb
sub
mov
jecxz
mov
in
outsb
imul
into
movsb
sbb
hlt
cmp
les
mov
inc
daa
bound
inc
mov
dec
dec
aam
js
fdivrl
xchg
xchg
mov
sub
xor
jle
aad
ljmp
sti
add
adc
mov
or
outsb
iret
or
imul
mov
out
dec
mov
adc
xor
ret
cmp
ret
and
mov
push
push
insl
xchg
inc
inc
pop
or
in
cltd
jbe
sub
int3
shll
repz
and
xchg
or
lahf
mov
ja
stc
jno
enter
adc
mov
lcall
cli
loopne
or
addr16
push
les
lock
sbb
lahf
add
fwait
stc
test
cwtl
test
shll
es
orb
add
pushf
cmp
insl
push
aas
push
inc
ror
rcrl
push
dec
and
dec
mov
stos
test
out
add
popa
jnp
sub
cltd
add
mov
std
lds
test
jl
cli
adc
aam
hlt
iret
adc
adc
shrl
cmp
ret
dec
cltd
xchg
sti
mov
fcmovb
scas
inc
and
xchg
push
adc
sbb
push
insb
mov
mov
push
mov
scas
cmpsb
cmp
or
inc
lahf
sar
dec
pushf
xor
jbe
jno
lds
xchg
popf
stos
lods
push
and
movsb
lock
cld
dec
pop
lds
cwtl
xchg
and
mov
lret
cwtl
lock
insb
mov
push
fs
mov
xor
ljmp
je
jg
dec
mov
popf
imul
mov
or
inc
cmp
sahf
sbb
outsl
cmp
dec
mov
pop
jns
jle
into
movb
lods
out
mov
and
fdivrp
or
decb
call
inc
dec
cmc
cmp
pop
mov
mov
lods
xchg
and
sbb
mov
outsb
sbb
jg
adc
mov
scas
shlb
and
movsb
dec
out
add
scas
push
je
add
lahf
mov
pop
pop
pop
std
repnz
loop
ret
in
xlat
ret
sbb
gs
dec
dec
mov
repnz
ss
adc
aas
enter
into
push
inc
push
dec
mov
push
add
enter
scas
and
movsl
fsubrl
mov
and
and
sub
call
mov
cmp
mov
enter
bound
imul
clc
popf
push
xchg
adcb
lods
ret
test
xor
push
jecxz
rol
je
push
and
xchg
push
clc
pushf
inc
xor
fwait
xchg
xor
sub
cmp
lret
push
push
mov
or
adc
nop
repnz
xlat
pop
fcmovu
mov
sub
push
shl
lahf
xchg
cltd
adc
sub
movl
bound
nop
stos
push
and
push
dec
push
and
pusha
std
and
or
addr16
insb
xchg
fcomip
insl
adc
lea
adc
incl
pop
hlt
out
push
or
mov
stos
push
xlat
jbe
adc
mov
push
inc
xor
cmp
mov
and
testb
add
pop
dec
mov
das
mov
lret
dec
movsl
push
jnp
std
dec
je
leave
stos
push
dec
daa
adc
and
dec
sbb
loop
inc
ss
es
jle
pusha
push
xor
daa
lock
lock
adc
mov
aaa
outsb
cld
out
mov
dec
cmpsb
sub
jbe
cs
push
hlt
xchg
out
rcrb
mov
mov
clc
outsb
pop
out
std
rep
cwtl
frstpm(287
and
fcoms
adc
rolb
sub
out
xchg
pop
leave
mov
sub
lock
jge
pop
cmpsb
call
subl
stc
bnd
sub
lea
dec
mov
loopne
test
scas
jmp
sub
fcoms
jnp
xor
sarl
xchg
cmp
jbe
or
cld
test
inc
push
push
fistl
aas
pop
shrl
and
and
and
ret
push
cmp
and
xchg
je
sub
lret
jp
mov
and
mov
lret
dec
leave
mov
movsl
icebp
xchg
inc
sbb
sbb
mov
pop
fildll
popa
add
adc
out
fwait
jle
rol
pop
test
or
pop
popf
and
push
pop
movsb
fsubrs
imul
aas
add
mov
imul
cli
lods
les
sahf
lds
pop
movsl
in
mov
adcb
mov
xchg
add
push
mov
or
rcll
mov
jae
and
jecxz
push
movsb
int3
inc
sbb
mov
lock
sub
push
adc
add
add
popf
lock
out
lret
xchg
ds
mov
inc
or
cli
pop
arpl
cmp
mov
das
xchg
inc
or
and
adc
ret
mov
movsl
xor
sahf
and
stc
test
push
mov
dec
push
rorb
mov
push
mov
fldenv
cmp
jno
mov
sahf
xor
adc
sbb
add
jl
pop
adc
cmp
rcr
movsb
pop
xchg
aas
loope
aaa
lahf
mov
das
iret
mov
xor
cmpsl
stos
in
pop
les
lea
mov
fadd
ret
and
push
idivl
movl
xchg
cmp
ret
mov
enter
push
pushf
adc
ficoml
sbb
or
adc
mov
insb
cmc
fs
das
dec
das
pop
add
cmpl
stos
inc
clc
jg
orl
js
add
mov
rorl
push
outsl
test
dec
fisubrs
pop
inc
dec
jbe
dec
xor
pop
push
mov
fistl
push
test
popa
push
mov
xchg
mov
mov
sub
mov
mov
mov
jns
mov
jge
cwtl
pushf
jae
filds
subl
dec
adc
jecxz
and
pop
nop
inc
sub
jle
repnz
enter
idiv
mov
pop
add
mov
shl
cmc
xlat
inc
outsl
jmp
outsl
pop
jnp
pop
jmp
dec
jb
fs
xor
iret
adc
xchg
jge
xchg
dec
jno
push
mov
mov
out
das
ret
mov
mov
xchg
cmp
int3
or
lea
cmp
pop
and
out
xchg
cmc
fwait
jge
int3
sbb
mov
fstpt
lret
push
das
cmp
or
sbb
scas
leave
aas
les
mov
inc
sbb
sbbl
aad
cmp
adc
pop
lcall
xor
in
into
ljmp
pop
mov
xchg
fdiv
xchg
mov
add
mov
addl
pushf
lcall
xchg
mov
icebp
jbe
scas
stos
jl,pn
dec
pusha
ds
push
sub
enter
cmp
pop
js
rolb
mov
mov
xor
mov
icebp
pop
call
movsl
shrb
xchg
shlb
leave
fdivrs
add
enter
repnz
aaa
imul
and
jp
scas
sbb
xor
pusha
add
popa
jb
lock
testl
inc
insl
dec
mov
notl
or
imull
ja
dec
or
jo
movsl
pop
cli
in
das
adc
pop
in
xor
adc
jae
out
mov
scas
pop
imul
mov
es
sbb
setge
jle
sbb
hlt
cmp
mov
xor
xlat
ffreep
pop
loope
adc
xchg
das
lret
mov
nop
in
aas
pop
cmp
mov
cmovns
sub
daa
jp
xor
jmp
push
mov
int3
sbb
mov
mov
loop
cmp
dec
loop
sbb
fisubs
push
jg
jg
sub
mov
cwtl
xchg
ret
lds
mov
pushf
jg
sbb
pop
add
inc
divb
in
insl
nop
stos
mov
ss
addr16
and
aam
fimuls
cmp
cli
cmpsl
inc
in
pop
shl
push
push
ss
aad
hlt
pop
push
pop
in
push
fdivp
mov
inc
jg
inc
inc
xchg
inc
lock
movsl
nop
jp
xchg
sub
jmp
cmp
mov
insb
sbb
xchg
cmpsl
mov
insl
jmp
test
cmc
insl
mov
xchg
lahf
sbb
and
popf
mov
xchg
xor
pop
sub
mov
pop
cmpsl
push
or
das
or
outsl
mov
and
sti
xor
cmp
shl
push
ror
adc
jbe
in
adc
lret
pusha
outsl
push
pop
mov
pop
cld
insl
dec
push
sar
rcrb
push
sbb
enter
ds
push
sti
int3
and
xor
popf
sbb
lods
clc
pop
adc
xchg
cmp
jo
dec
dec
subl
and
jno
incl
mov
std
jbe
fwait
and
push
outsb
testl
jns
jge
push
push
repz
test
scas
push
push
imul
or
mov
lds
ja
sub
dec
fidivs
or
xor
sub
add
sbb
lods
push
xchg
push
mov
mov
sub
push
stc
in
test
sbb
mov
pop
mov
mov
and
insb
xchg
loope
inc
data16
fwait
movl
and
addr16
pop
inc
test
pop
loopne
divb
movsl
mov
ja
sub
out
arpl
pop
in
pop
push
cmp
jns
cmp
cmpsl
cmp
mov
fsubp
nop
or
in
mov
or
push
outsl
add
cmp
lods
int3
stos
das
xchg
jno
sub
sub
aad
int3
loopne
push
mov
inc
filds
addr16
fwait
iret
popa
hlt
jns
dec
sub
xchg
insl
int3
fcmovbe
dec
push
aad
xchg
inc
jg
cli
push
xor
jno
pop
fbstp
xchg
ret
addb
les
inc
insl
addl
mov
insl
push
mov
repz
mov
cmp
out
xor
adc
xchg
inc
dec
mov
cmp
out
xor
in
mov
fildl
add
cmp
loopne
stos
push
inc
pop
call
adc
test
scas
cmp
lcall
mov
mov
test
sub
lcall
ret
cmp
mov
mov
add
add
push
xchg
and
shlb
and
and
iret
inc
jo
jb
inc
push
iret
aaa
je
imul
or
nop
push
into
xchg
sbb
push
adc
sbb
repz
pop
or
sub
stos
mov
test
cmpsb
or
pop
data16
pushf
lods
dec
aam
sub
fwait
imul
in
jo
xor
sub
and
and
enter
push
inc
stc
cmp
test
push
ljmp
std
xchg
mov
add
or
push
iret
fnstcw
add
mov
mov
outsb
pusha
and
scas
into
divb
imul
gs
out
cmpsl
lods
ja
pop
mov
mov
std
push
enter
aam
add
lcall
push
cmpl
inc
sub
icebp
or
dec
in
add
sahf
push
push
cld
cmpsb
or
mov
mov
test
test
movsb
loope
icebp
fstl
jbe
mov
call
and
pop
setae
int3
mov
cmpsb
lahf
arpl
fnsave
xchg
addb
repz
scas
and
es
popf
fs
push
mov
insb
push
push
adc
and
inc
enter
or
dec
mov
js
inc
jne
test
les
sbbl
popf
ret
jp
add
fwait
mov
xor
loopne
mov
pop
pop
subl
movsl
push
inc
test
enter
mov
and
in
rol
dec
decl
sub
sarl
mov
or
pushf
sbb
add
dec
decl
xor
fcoml
or
insb
dec
jnp
pop
hlt
fimuls
dec
cmp
and
pop
test
jl
cmp
xchg
in
ficoms
cmp
add
shrb
jnp
fwait
mov
fdivr
dec
adc
push
bound
push
push
or
xor
or
push
xor
xchg
jno
xchg
aam
add
nop
cmp
xchg
add
lea
sub
test
mov
rolb
push
in
cltd
or
adc
fwait
arpl
cmpsl
push
lcall
jns
xchg
mov
pop
cmp
in
inc
xchg
or
push
cmp
cwtl
clc
xlat
jbe
ljmp
js
fsubs
jno
pusha
sbb
das
fbld
ja
add
xor
dec
pop
jb
fistps
cmp
lods
gs
mov
dec
mov
outsl
jmp
push
adc
sbb
cmp
loop
in
fld
test
test
movsb
cwtl
push
shrl
adc
inc
mov
dec
popa
popl
jl
pop
dec
insl
test
push
mov
icebp
cli
push
dec
imul
idiv
jb
dec
xor
ret
stos
pop
adc
repnz
sbb
insb
xchg
icebp
pushf
jae
xchg
jge
cwtl
mov
and
fs
negl
push
fistps
mov
fsub
fadds
dec
repz
ret
add
mov
xor
mov
fs
adc
test
js
sahf
adc
jbe
jae
dec
jo
pop
add
sub
bound
cltd
and
leave
fildl
inc
mov
lcall
loop
stos
scas
sbb
les
inc
out
movsl
dec
lahf
sbb
sarb
cmp
mull
fimuls
mov
inc
dec
insl
ret
mov
sahf
cs
mov
in
dec
mov
cmpsb
stos
mov
sarb
sub
and
ja
movsb
sti
push
lcall
jae
icebp
js
imul
or
sub
rcrb
mov
pusha
cmpsl
lock
jnp
daa
push
lds
xchg
sbb
push
incb
cli
jns
shrb
in
jl
cmp
or
shrb
data16
into
fadds
mov
sbb
push
jge
sbb
pop
das
sbbl
push
inc
insl
cld
mov
cmp
test
loop
adc
mov
sub
mov
arpl
mov
jecxz
push
icebp
enter
ficoms
cmp
js
cmp
pop
lret
mov
cmp
cs
nop
lds
xchg
add
std
sbb
enter
inc
addr16
pusha
inc
outsb
pop
and
roll
imul
fs
pop
xchg
or
inc
ret
dec
les
or
ljmp
cltd
lock
push
sbbl
push
into
loope
xchg
dec
nop
xchg
push
sub
cld
je
shll
imul
shlb
rclb
jl
mov
pop
or
add
sbb
addr16
xorl
jle
add
add
mov
inc
add
stos
mov
out
sarb
aaa
pop
std
std
sub
pop
stos
pop
icebp
shll
xor
xor
hlt
xlat
lcall
or
cmpsb
jp
cmp
mov
sbb
testl
fadds
lahf
orb
faddl
dec
sub
xor
fwait
or
popf
cmp
imul
pop
call
fnstcw
ret
adcb
push
pop
movsl
test
adc
fldz
and
fidivs
mov
inc
sub
mov
push
bnd
mov
sbb
stc
test
sub
xchg
push
daa
xor
cmp
and
rol
scas
insl
jae
movsl
sbb
or
pop
sbb
xchg
mov
sub
das
sbb
scas
loope
lcall
add
lods
inc
mov
scas
adc
int
cmpb
or
cwtl
adc
sub
inc
popw
orb
jg
pop
mov
stos
add
push
add
cmpsl
dec
push
inc
add
cmp
xor
or
ljmp
shl
fstps
jo
sub
mov
xchg
mov
mov
icebp
and
outsb
fistl
push
das
nop
popl
out
cmp
push
push
push
mov
inc
add
xor
mov
repnz
repnz
pushf
cld
dec
xor
sbb
inc
dec
xchg
int3
int
cmp
push
push
mov
adc
or
jge
push
push
jno
aaa
int
bound
sti
pop
xor
ja
mov
mov
push
fildl
frstor
hlt
mov
push
icebp
ss
jge
sbb
push
repz
pop
notb
sahf
mov
adc
hlt
das
and
cmp
and
push
aam
mov
stos
ja
jne
pop
in
fcoms
stc
xchg
nop
or
add
add
push
sbb
adc
jb
sub
pop
mov
loope
pop
fcmovnbe
add
in
int
mov
and
mov
aad
iret
fs
incl
add
sub
scas
push
add
pop
xor
pop
mov
xchg
rcrb
jmp
push
mov
push
js
mov
ffree
test
and
xchg
in
js
dec
mov
notb
adc
add
cmp
xchg
xor
sbbb
loopne
les
and
enter
mov
popf
bound
ret
mov
mov
leave
lods
repnz
and
mov
out
sahf
inc
outsl
mov
xor
push
int3
inc
int
cmp
cmp
dec
dec
xchg
rcrb
or
call
xchg
movsb
xor
cmp
dec
ret
divb
movsb
push
jmp
or
loope
push
mov
leave
mov
cmp
sbb
in
cld
hlt
adc
sbb
jae
nop
pushf
mov
out
dec
mov
cs
pop
sbb
insl
stos
lea
call
out
xor
pop
xor
daa
stc
xchg
and
add
mov
jne
or
pop
stc
dec
inc
inc
ja
les
in
sub
std
call
sbb
fstpt
out
inc
in
and
aam
lret
jecxz
subb
cmp
shll
ret
and
jbe
or
add
jl
mov
cs
inc
imul
jbe
fstl
mov
fwait
cmpb
jle
pop
sub
xchg
inc
mov
ja
rorl
add
inc
add
movb
int3
int
sbb
int
push
sbb
jg
sub
icebp
xchg
cmp
fiadds
dec
cmpsb
popf
ret
cmp
mov
push
push
dec
sbb
test
mov
or
push
add
ds
push
push
ret
sub
push
loop
sbb
xchg
push
imul
fsubs
jmp
xchg
mov
push
nop
cmpsb
inc
jbe
cmp
and
shll
bound
adc
and
dec
out
scas
movsl
ds
into
cmp
movsl
call
jmp
sub
jle
cmp
add
das
out
ja
dec
mov
popf
push
push
pop
mov
jp
push
popf
jmp
enter
jb
addb
lret
or
jo
sbb
or
xlat
ljmp
mov
push
cwtl
jb
jp
xchg
arpl
inc
push
jge
out
mov
icebp
stos
icebp
clc
pop
push
dec
in
insl
xchg
pop
imul
cmp
jge
dec
push
xchg
fdivl
add
jo
in
sbb
data16
out
jmp
fucomi
lcall
adc
mov
mov
jne
ljmp
mov
lret
cs
dec
aaa
mov
cmpsl
popl
cmp
and
mov
and
sbb
cmp
pop
mov
lods
pop
cmp
inc
and
lret
mov
mov
or
push
jg
add
fadd
out
adc
inc
fdivl
call
sub
repnz
enter
xchg
lds
test
scas
xor
lahf
cmpsl
mov
or
mov
mov
mov
bound
jns
ret
stos
shlb
mov
inc
xchg
pop
or
aaa
adc
mov
pushl
jecxz
jge
mov
pushf
test
lds
xchg
dec
xchg
in
inc
mov
or
cld
adc
lods
cmpsl
je
idivb
jbe
pop
idiv
mov
bound
sbb
aaa
popf
ds
adc
negl
sbb
jb
inc
inc
pop
adc
pop
das
rol
mov
lea
ja
shll
jno
cmc
jl
jbe
dec
pop
xor
in
imul
mov
jle
xchg
adc
push
mov
push
cmp
and
xor
ret
xchg
inc
test
mov
outsl
cmp
push
push
or
rorb
jle
test
notb
iret
xor
sbb
mov
sbbb
outsl
clc
cwtl
push
pop
jge
cmpsl
mov
and
sahf
xor
xchg
out
gs
stc
fs
lcall
pop
in
pop
loop
repz
inc
sbb
adc
sub
mov
adcb
bound
push
adc
movsl
les
mov
dec
pop
sarb
or
test
jge,pn
ds
mov
in
imul
shrl
jno
sbb
xorl
hlt
icebp
pusha
aad
inc
lcall
pop
xor
stos
pushl
and
sbb
out
push
inc
jge
insl
add
xor
or
add
pop
dec
lods
jge
ja
insb
lcall
jno
adc
es
inc
xor
jg
mov
jb
push
mov
push
divl
fcomp
push
das
mov
in
test
ficoms
adc
cmp
xlat
pop
mov
dec
lds
hlt
mov
loop
mov
pusha
adc
ror
popa
std
mov
mov
mov
shrb
pushf
aaa
xor
mov
xchg
ljmp
sub
push
insb
ja
dec
out
bound
hlt
ljmp
call
andb
mov
xchg
pop
xor
rorb
pop
rolb
mov
arpl
pop
jns
repnz
fmulp
mov
mov
mov
nop
push
pop
adc
cmp
xor
and
cmp
adc
popa
jle
dec
sub
push
xchg
adc
out
pop
or
push
je
jmp
dec
mov
mov
aas
xchg
ja
sub
sarl
mov
mov
fimull
inc
mov
aam
inc
sbb
shrl
adc
hlt
dec
mov
pop
mov
or
pusha
repz
fs
movsl
clc
push
inc
jno
mov
sbb
fnstsw
dec
in
movsb
pop
hlt
mov
insl
jge
push
pop
idivl
rclb
ja
sbb
xadd
or
mov
jp
inc
sbb
sbb
sub
popf
lahf
leave
fistpll
push
sub
rcll
loope
mov
jg
pop
jecxz
jge
dec
jmp
xor
xchg
mov
inc
push
out
dec
lret
adc
xor
fisttpll
adc
scas
cmp
lcall
jb
jb
xor
bnd
sub
push
cmp
push
mov
cs
sti
push
lods
aam
jne
loopne
outsb
ret
add
aas
mov
notb
ret
hlt
lret
jecxz
cmp
add
es
icebp
adc
mov
push
xchg
pop
mov
mov
sbb
xchg
sbbb
sbb
lcall
dec
push
jmp
notl
mov
fcmovnb
and
gs
push
xor
aas
cmpsl
aaa
enter
mov
repz
xor
inc
dec
or
fdivl
and
out
sahf
xor
int
cmp
sub
loope
ficoml
xor
fsubrs
fistpll
jnp
mov
fbstp
xchg
ret
adc
mov
sbb
dec
xor
pop
idivb
xor
in
or
sbb
sahf
xchg
cmp
shlb
cmp
push
jge
lcall
sbb
mov
scas
jle
jb
cmp
fsubl
xor
imul
cmp
sar
xchg
or
push
cmpl
loop
hlt
inc
or
jnp
adc
pop
xchg
aam
loopne
idivb
jae
sbb
stos
xchg
xchg
js
hlt
shrl
xor
test
lahf
lahf
push
pop
and
ret
pop
cli
sub
iret
mov
mov
sub
stc
mov
ds
fs
mov
jmp
sub
cmp
aad
std
push
cmp
shrl
push
cli
lret
icebp
imul
mov
ja
pusha
cmc
ljmp
lret
fisttps
scas
fnstenv
jmp
int3
xchg
sub
push
mov
andb
fisttpl
mov
xchg
mov
pop
int
add
subb
mov
aad
pusha
negb
and
sbb
ds
mov
jmp
or
xor
jnp
push
xchg
adc
and
in
add
repnz
adc
popf
pop
sbb
mov
ds
cmp
mov
jle
adc
xor
aad
inc
add
xchg
enter
shll
push
rcl
in
pushw
cmp
and
lods
imulb
mulb
lock
outsl
xchg
dec
ret
sbb
adc
push
dec
in
subb
cmp
test
cmpsl
jecxz
les
add
testl
sub
xor
lods
xor
mov
push
jns
jnp
rcr
mov
outsb
hlt
push
aam
test
lock
shrb
iret
pushf
lret
lods
stc
adc
fidivl
jnp
push
cmc
xchg
jnp
loop
or
out
sub
fmulp
cli
cmp
aaa
mov
notl
jne
hlt
mov
test
out
addl
rcrb
add
loopne
push
sub
jbe
outsl
in
or
add
push
adc
ljmp
sbb
xorl
shll
pushl
rcll
in
dec
pop
mov
sahf
lcall
cmp
cmc
test
pop
mov
cmc
addl
xchg
fs
mov
push
dec
adc
cmc
mov
sbb
xchg
mov
push
jge
scas
jae
sbb
pop
call
lcall
jo
xor
lret
cmc
mov
pop
lahf
xchg
test
das
dec
les
cmp
cmc
jo
int3
mov
jne
stos
pop
inc
shrl
call
sahf
loope
xchg
cmp
or
sbb
leave
add
jmp
jmp
push
inc
inc
andl
out
xchg
in
jo
xor
pushf
out
cmp
mov
push
cmpsl
call
ss
or
scas
lods
fisubl
rorb
les
mov
out
sarb
mov
pop
aaa
fmull
call
jl
lods
negb
mov
push
sahf
ja
lret
mov
jmp
jl
add
rorb
scas
mov
jg
pushf
out
push
into
out
push
mov
data16
mov
in
cmp
adc
hlt
adc
xchg
addr16
sbb
lret
sar
sub
pop
inc
and
shlb
cmp
pop
hlt
xor
push
mov
mov
rorl
add
test
inc
pop
sub
mov
adc
xor
arpl
inc
mov
inc
into
shlb
imul
fistpll
stos
mov
inc
shl
adc
movsb
lods
cmp
dec
das
inc
stos
std
nop
adc
addr16
test
icebp
scas
outsb
or
jg
or
int
xchg
insl
sti
mov
mov
in
pop
test
pop
aaa
pop
scas
fsts
mov
or
push
fcomps
rorb
jl
push
dec
push
es
sbb
aam
imul
sub
pop
addl
movsb
int
sub
mov
jae
mov
int3
aam
push
mov
cwtl
popf
dec
mov
or
mov
xor
daa
pop
inc
xchg
cmp
out
jae
ret
or
enter
and
lea
imul
call
pop
out
shr
xchg
sahf
stc
loopne
popa
mov
imul
call
int
scas
jg
sarb
and
test
dec
sbb
es
andl
ljmp
mov
fiadds
mov
xor
xorb
or
mov
ror
adc
jne
add
mov
sti
sbb
inc
stc
adc
js
push
fisubrl
jecxz
sbb
imul
addr16
cmpsb
loopne
sub
xchg
enter
cmpsb
sub
xor
mov
cmp
jno
jecxz
cmpb
scas
lds
outsl
ja
push
scas
stos
xor
sbb
and
or
push
cltd
and
and
orb
ja
imul
lods
fistpl
cmp
shrl
mov
or
adc
sbb
cmpsb
fsubrp
dec
cmpsb
mov
and
stos
push
iret
mov
and
test
outsl
cmpsl
fmull
jl
leave
jnp
clc
inc
and
or
in
pop
push
push
mov
jae
pop
out
fnstenv
outsb
test
fildll
jno
ss
mov
pop
stc
xchg
ja
push
movsb
xor
lds
andl
pop
mov
mov
mov
lret
jle
sbb
jg
cmpsl
testl
ja
inc
dec
adc
jno
clc
adc
adc
into
arpl
pop
mov
mov
adc
jecxz
cs
ret
mov
or
inc
dec
push
xor
enter
xlat
add
into
loopne
cmp
mov
xor
push
inc
cs
or
push
jle
hlt
cmp
loope
movsb
in
outsl
push
pop
paddsb
adc
lret
sub
imul
dec
push
cmp
sub
xor
cmp
insl
fistpl
inc
and
fidivrl
push
xor
sub
sbb
cmp
cwtl
cmp
mov
dec
addr16
and
mov
jne
mov
inc
in
dec
aas
imul
xchg
xor
outsb
andl
xchg
mov
lahf
test
jl
cmpsb
stos
jle
icebp
ret
add
enter
les
jns
loope
cmp
jbe
pop
inc
or
ss
jmp
pop
or
mov
stos
or
lds
jle
sub
fsubl
pop
rorl
mov
icebp
mov
push
jmp
jg
mov
lods
mov
scas
fistpl
into
jnp
jbe
arpl
loopne
adc
loope
sbb
inc
ds
cmc
test
aam
push
mov
pop
arpl
xchg
insl
adc
gs
repnz
adc
inc
cltd
ret
xchg
push
call
rolb
aaa
or
xchg
outsb
mov
fisttpll
subl
or
jl
add
sti
scas
leave
sub
mov
leave
xlat
out
xor
repz
ret
and
mov
adc
mov
jno
rcrb
add
xlat
push
jbe
aaa
aas
mov
push
mov
jge
or
dec
lods
das
push
mov
or
push
sub
and
or
ret
dec
ja
push
scas
aas
pop
jnp
push
adc
cli
cmp
pop
xor
icebp
xchg
ret
orl
jne
cmpsb
movsl
nop
mov
cmp
cmp
into
insb
je
dec
dec
add
pop
push
sub
sbb
sub
and
mov
pop
mov
out
push
sub
stc
mov
rorb
mov
dec
xchg
fcoml
inc
mov
loope
int
pushl
dec
xor
mov
das
mov
sbb
inc
out
mov
xchg
mov
xbegin
movsl
sub
mov
mov
into
loop
ds
xlat
cmpb
cs
fcoms
cmp
bound
sub
les
test
or
fsubrs
mov
and
enter
sti
ljmp
and
fmuls
jl
repnz
fnstenv
mov
dec
mov
aaa
es
pop
je
iret
mov
test
adc
cmp
cmp
push
loope
cmpsb
sub
rol
lock
out
aaa
fcomi
cli
xor
nop
dec
fisubrs
push
enter
xor
adcl
aad
aad
mov
pusha
pop
or
movsl
bound
stos
je
popf
mov
sahf
sub
and
cmp
popf
gs
fcmovnbe
aaa
test
shl
les
add
sub
mov
movzbl
mov
mov
xchg
dec
inc
inc
inc
xor
lea
dec
sub
inc
inc
mov
mov
dec
jne
inc
mov
dec
lea
pop
add
dec
pop
or
imul
pop
mov
and
inc
mov
dec
lea
sub
lea
movsbl
lea
lea
add
ret
push
push
dec
add
push
add
dec
movzwl
lea
lea
mov
push
mov
or
or
and
push
dec
inc
imul
dec
sub
imul
inc
push
mov
mov
mov
push
add
inc
xor
mov
imul
push
movsbl
and
push
sub
mov
pushl
or
call
inc
add
add
dec
add
mov
sub
inc
or
pop
ret
dec
mov
cmp
jb
and
xor
dec
dec
mov
inc
mov
mov
inc
inc
lea
mov
inc
add
mov
add
cmp
jb
inc
pop
inc
mov
sub
dec
add
add
lea
sub
mov
imul
inc
xor
add
and
xor
dec
mov
and
dec
test
jbe
inc
dec
sub
mov
inc
inc
dec
add
sub
dec
xor
dec
and
inc
inc
mov
mov
sub
movzbl
dec
inc
add
or
lea
and
add
dec
mov
lea
dec
mov
mov
inc
mov
inc
sub
mov
dec
lea
dec
movzbl
mov
dec
jne
dec
mov
mov
sub
mov
mov
or
dec
sub
dec
dec
lea
mov
mov
mov
dec
mov
sub
mov
mov
mov
mov
inc
add
test
jbe
add
inc
inc
add
mov
add
lea
mov
inc
dec
inc
movzwl
movzbl
add
mov
inc
add
inc
lea
movsbl
add
inc
and
mov
movsbl
mov
mov
inc
movzbl
movsbl
or
add
dec
and
and
add
add
mov
or
lea
movzbl
dec
add
mov
dec
lea
mov
and
inc
movzbl
dec
or
add
mov
jmp
push
mov
mov
add
mov
add
sub
inc
sub
mov
add
inc
sub
mov
inc
dec
mov
dec
movswl
inc
imul
mov
mov
dec
xor
inc
inc
mov
inc
add
inc
and
xor
dec
mov
add
mov
mov
lea
or
cmp
je
lea
mov
xor
push
lea
call
call
dec
dec
call
call
mov
add
add
inc
imul
lea
xor
ret
add
sub
pop
lea
ret
push
add
dec
inc
lea
movsbl
push
inc
dec
push
mov
push
mov
push
add
imul
mov
add
add
call
lea
push
mov
dec
xor
mov
sub
mov
neg
imul
imul
inc
movzbl
add
mov
mov
mov
inc
mov
sub
mov
inc
dec
mov
dec
je
dec
imul
dec
mov
movzbl
inc
mov
mov
mov
sub
inc
repnz
inc
lea
add
mov
jmp
inc
lea
xor
lea
inc
lea
movswl
dec
add
dec
dec
mov
inc
movzwl
jmp
out
sti
jno
das
fisttpll
mov
imul
jmp
sbb
inc
pop
xrelease
mov
mov
jno
or
test
mov
pop
in
aam
jmp
add
push
ja
xchg
nop
imul
pop
and
pop
cmp
fnsave
cmp
jne
daa
subb
or
mov
inc
inc
jb
and
repnz
push
enter
cltd
lds
in
mov
shll
mov
stos
incl
add
int3
imul
add
push
inc
inc
sub
push
xchg
iret
cltd
xchg
xchg
rcl
aam
fmuls
aas
sub
push
fsubs
out
cld
push
jecxz
or
mov
inc
test
jg
sub
jno
sub
and
lea
cmp
sbb
sub
inc
rcrb
jae
data16
test
cmpsb
push
adc
dec
popa
insb
pop
fwait
adc
sahf
mov
cli
mov
andb
pop
xchg
clc
dec
mov
nop
cmc
add
insb
xor
fcmovb
and
pop
stc
data16
push
cltd
mov
int
dec
pop
daa
std
pushf
and
mov
cltd
cli
xchg
mov
pop
shlb
mov
mov
test
into
xor
int
cmp
xchg
push
pop
aad
cmp
in
dec
lock
sub
jge
fs
out
in
mov
aad
lds
int
in
mov
data16
or
lret
ja
dec
std
lcall
int3
idivb
xchg
add
cmp
push
iret
testb
cli
aam
inc
pushf
adc
out
adc
call
push
fsubs
jge
push
inc
and
fldt
les
insl
mov
shlb
dec
icebp
lcall
pop
fwait
jb
out
jo
inc
xchg
mov
pop
lea
mov
mov
pop
jmp
lock
adc
dec
sub
xor
inc
add
inc
filds
mov
mov
mov
pop
mov
loope
pop
insb
test
xor
inc
mov
sub
jge
pop
ljmp
outsb
aam
addr16
outsb
or
out
stos
call
jbe
push
mov
enter
mov
push
imul
sub
dec
jge
push
add
loop
xchg
sbb
clc
push
mov
rcll
and
pop
mov
jg
pop
cmp
push
cmp
les
test
imul
jl
movsb
pushf
in
push
testl
fucomi
std
and
out
mov
lret
mov
jb
push
inc
cs
and
jno
ja
push
cmp
repnz
mov
mov
xor
cmc
dec
sbb
stos
push
bound
sbb
stc
dec
aaa
and
jmp
sbb
shll
cmp
orl
addr16
xor
pop
dec
inc
clc
imul
adc
cwtl
mov
int3
and
bnd
cmp
push
mov
cmc
lock
insl
xor
add
lea
mov
and
outsl
fiaddl
xchg
out
fldcw
test
and
lcall
enter
or
test
cmp
pop
mov
out
and
and
lcall
inc
mov
pop
xor
push
mov
js
inc
test
jmp
in
bound
bound
adcb
lahf
fmuls
subl
jo
fadds
jnp
std
sub
fmul
jmp
std
push
outsl
and
mov
sub
xor
mov
stos
adc
or
xchg
sbb
jmp
mov
cmp
or
inc
aas
in
imul
mov
sbb
mov
pop
push
push
mov
and
test
and
lods
xlat
or
mov
fs
cmp
pop
add
mov
std
mov
jge
inc
jecxz
sahf
xchg
adc
loope
in
push
sub
insb
xlat
jns
and
dec
jb
jne
push
xchg
test
pop
mov
es
cwtl
sub
mov
lahf
jmp
fidivs
sub
adc
pusha
lret
mov
adc
adc
or
sbb
dec
adc
fbld
push
lahf
dec
scas
enter
add
rcrb
xor
leave
jle
mov
pop
cltd
movsl
add
inc
gs
sbb
mov
pop
stc
std
mov
and
aaa
mul
notl
loopne
jae
fimull
roll
add
scas
setge
mov
pop
jns
pop
aas
jae
sbb
hlt
inc
aad
in
jb
inc
int3
cli
adc
sbb
cmp
in
int
push
inc
cmp
mov
mov
add
jns
push
stc
push
jp
rep
mov
pop
je
adc
push
stos
arpl
rolb
inc
inc
gs
dec
in
xchg
xchg
enter
jbe
xchg
out
outsl
xor
xor
adc
cmp
pop
sar
mov
add
pushf
pushf
les
dec
adc
jle
xchg
cmp
imulb
call
fdiv
or
test
pop
repnz
xchg
mov
cmpsb
popa
push
sub
ljmp
cld
jo
xchg
inc
aaa
std
mov
mov
enter
lret
xchg
aam
pop
popa
data16
std
lds
mov
hlt
in
mov
pop
divl
int
scas
js
aaa
test
jp
mov
fmul
cwtl
testb
jmp
adcl
xor
ret
movsl
inc
std
xchg
sbbl
jnp
mov
shrb
nop
repz
mov
add
xor
ret
inc
sbb
mov
popa
in
scas
or
in
enter
mov
subb
fsubrs
outsb
nop
fistpll
pop
mov
mov
inc
jae
mov
sbb
fdivp
push
out
and
addb
int3
push
dec
je
subb
lods
and
add
adcb
mov
mov
inc
dec
push
daa
repnz
stc
test
cwtl
je
push
jp
sub
xor
sbb
inc
fsubs
in
enter
push
into
xchg
xor
push
imul
shll
clc
sbb
stos
push
add
add
cmp
mov
enter
sub
cmp
mov
rcr
cwtl
int
adc
push
mov
leave
std
adc
dec
fisttpl
les
adc
xor
pop
sub
das
mov
jecxz
subb
outsb
pop
call
repz
test
shr
in
adc
jmp
or
or
cmp
adc
lods
inc
bound
mov
push
les
push
mov
aad
insl
mov
into
loope
test
cmpsb
xchg
les
mulb
mov
in
add
sub
into
jecxz
outsl
pop
out
lods
xchg
mov
roll
ds
or
or
xor
pop
les
into
mov
mov
xor
and
push
push
push
cli
push
adc
dec
and
sub
dec
mov
mov
stos
call
fiaddl
cmp
add
adc
scas
insl
mov
push
xchg
sbb
mov
dec
imul
mov
push
push
mov
pop
std
shrl
cmp
ret
mov
cmove
mov
mov
movsb
scas
in
and
stc
sbb
mov
sbb
ss
mov
add
mov
pushf
sbb
sub
popa
icebp
mov
xor
negb
sub
and
push
xor
pop
mov
mov
mov
push
mov
or
jge
xchg
rcll
movb
out
je
pop
cmp
in
ss
cld
bound
idivb
jle
iret
pop
pop
mov
dec
sbb
fidivrs
mov
nop
int
push
in
push
or
lds
outsl
int3
inc
fsub
imul
pop
negb
iret
jbe
das
pop
arpl
push
xchg
fimuls
dec
adcb
mov
sti
lods
loop
cmp
test
xorb
fisubrs
fsubrs
out
push
ret
push
fcoms
push
cmp
sub
sbb
bound
sahf
arpl
iret
mov
repnz
sti
in
ds
sub
xor
jmp
xor
push
mov
repz
imul
ficoms
pushf
shl
imul
ljmp
lock
xchg
mov
pop
cltd
dec
scas
insl
sbb
mov
sub
lods
push
wrmsr
outsl
or
xor
sub
ret
xchg
mov
pop
xchg
cwtl
fidivrs
xchg
pop
mov
sub
mov
push
scas
stos
stos
and
sbb
push
pop
jbe
sub
pop
arpl
lods
clc
ret
sub
xor
inc
out
sub
xor
aam
iret
jae
cmpsb
loope
push
dec
fildll
and
out
push
cld
imul
imul
mov
xor
mov
mov
loopne
mov
jae
xchg
sub
push
jae
test
push
fwait
je
jb
mov
jbe
xchg
or
and
mov
mov
arpl
mov
leave
in
iret
push
arpl
loopne
mov
outsl
out
std
and
cltd
mov
mov
mov
adc
es
push
xor
xor
cwtl
xchg
jecxz
int
stos
movsb
leave
in
xor
cwtl
jb
incb
mov
ret
cwtl
aad
ja
and
jmp
pop
xchg
lds
jmp
inc
pop
pop
cld
aam
dec
imul
cmpsb
dec
popf
sbb
lds
adc
or
pushf
outsl
dec
pop
sub
xchg
mov
lret
xchg
sahf
aas
jge
dec
dec
fidivrl
stos
cmp
mov
pop
fadds
xchg
adc
cmpsb
repnz
outsb
enterw
sbbb
dec
stos
pop
movb
pop
sub
out
pushf
cmp
pop
fimull
mov
rolb
out
pop
lds
fildll
add
in
and
loopne
test
cmp
cmpsb
pop
add
call
push
mov
push
mov
mov
rolb
mov
roll
js
hlt
mov
ficompl
enter
pop
mov
adcl
xchg
gs
xchg
dec
mov
leave
dec
rcr
fsubr
xor
jg
lcall
adc
cmp
popf
xor
push
mov
aad
in
sahf
int3
add
xchg
scas
stos
mov
ja
mov
mov
xlat
and
fsubrl
xchg
mov
scas
sbb
mov
orb
std
mov
mov
ret
test
adc
movsb
test
cs
movsb
int
jl
sub
pop
lahf
jb
and
gs
xor
dec
add
adc
cmpsb
dec
lret
inc
mov
mov
loop
enter
mov
es
pop
or
push
and
fmull
xchg
ja
pushf
jge
mov
icebp
inc
jbe
stos
inc
in
cs
mov
aam
jne
add
fistps
gs
subb
dec
scas
imul
jmp
out
loope
nop
jo
cmp
hlt
lea
lods
pop
fistps
inc
adc
ror
inc
push
push
loope
les
inc
dec
jns
jg
dec
jge
cmp
xchg
test
cmp
ret
sub
das
and
out
sbb
sbb
xchg
push
imul
test
in
push
and
xchg
add
imul
clc
xor
mov
repz
adcl
mov
add
inc
push
or
pop
pop
jb
pop
mov
xlat
pop
xor
pop
inc
xchg
mov
pop
loopne
and
add
jg
mov
cmpsb
mov
sbb
stos
jne
push
mov
outsl
mov
push
orl
test
and
stos
sbb
mov
inc
std
icebp
imul
out
negb
popf
jb
jae
xor
dec
pop
iret
fstpl
aam
hlt
fidivs
fisttps
and
in
ljmp
stos
stos
scas
push
call
pop
dec
scas
shl
out
or
sbb
in
scas
adc
mov
iret
test
xchg
aaa
nop
dec
in
pop
inc
mov
aaa
cs
lods
arpl
shrb
inc
mov
aaa
imul
imul
in
fnstcw
das
imul
out
add
jnp
lahf
clc
jno
xor
mov
lods
xor
fimuls
ja
jp
loop
jns
pop
dec
mov
mov
mov
loope
jnp
mov
mov
jo
xor
jns
or
jne
inc
fcmovb
insl
shrb
jl
or
add
or
pusha
ds
les
mov
and
fs
sbb
popf
cmpsb
sahf
int3
int
in
ds
test
cltd
sbb
cmpsb
sarl
dec
pop
push
in
mov
fists
jecxz
das
xor
cld
mov
scas
sub
push
cmp
or
loop
fs
outsl
and
xor
out
sub
rcl
testl
mov
cmpsb
outsb
mov
lea
out
lea
scas
enter
sbb
in
jle
rorl
jae
xchg
or
add
sbb
ja
inc
imul
mov
dec
aas
pop
jno
lret
in
iret
pop
jg
imul
sbb
leave
lret
adc
je
cmpsl
icebp
add
xchg
cmp
popa
add
int
ret
fs
pop
iret
ret
pushf
loop
test
clc
fcoms
mov
cmpb
push
shlb
xchg
out
sub
mov
sbb
dec
push
out
jnp
repnz
ljmp
push
mov
mov
mov
call
movzbl
mov
call
mov
push
xor
call
imul
inc
xor
movzwl
lea
mov
call
add
and
mov
or
mov
add
mov
inc
movzwl
add
lea
add
imul
call
mov
add
mov
sub
lea
call
lea
imul
call
mov
inc
mov
imul
inc
mov
inc
dec
dec
pop
or
mov
mov
add
dec
pop
sub
lea
pop
mov
movswl
mov
movzbl
pop
mov
dec
dec
sub
movswl
dec
mov
dec
pop
lea
lea
pop
mov
movsbl
mov
inc
xor
call
inc
sub
mov
dec
ret
dec
inc
push
lea
mov
push
inc
inc
push
lea
push
dec
inc
push
mov
inc
mov
add
inc
push
mov
ret
push
inc
push
movzbl
dec
movzbl
push
dec
imul
dec
call
pop
ret
jmp
dec
lea
pop
pop
ret
push
inc
add
mov
or
dec
inc
inc
mov
mov
imul
dec
movsbl
inc
dec
sub
add
dec
inc
inc
mov
mov
lea
mov
lea
mov
dec
pop
ret
sub
and
mov
add
lea
mov
dec
dec
mov
inc
mov
mov
inc
lea
xor
imul
lea
mov
movzbl
dec
inc
dec
inc
dec
inc
dec
mov
cmp
jb
inc
push
sub
imul
push
add
mov
push
lea
inc
xor
mov
dec
xor
lea
xor
xor
add
add
push
lea
inc
push
inc
imul
pop
imul
or
dec
sub
imul
inc
or
movswl
mov
add
xor
mov
lea
mov
inc
mov
dec
lea
movzbl
add
lea
dec
imul
add
inc
sub
add
sub
movzbl
imul
xor
dec
mov
and
lea
imul
mov
inc
sub
inc
mov
inc
movzbl
dec
jmp
add
inc
add
add
add
xchg
inc
add
adc
add
and
and
add
inc
add
add
mov
inc
add
add
add
pop
mov
lret
movsl
push
call
or
in
adc
mov
add
adc
js
pop
sub
sarl
mov
subb
gs
add
test
imul
fwait
mov
loopne
ds
les
mov
xor
imul
mov
sahf
jnp
inc
jae
push
in
jo
sbb
xchg
out
mov
aaa
add
push
imul
pushf
popf
cmp
imul
push
pop
movsl
push
dec
dec
lahf
popf
and
stc
icebp
insb
enter
stc
xor
cmpsb
or
movsl
or
lret
sub
arpl
aad
mov
xchg
pop
push
repz
inc
jbe
mov
data16
call
dec
rolb
cld
clc
push
pop
and
mov
sbb
add
iret
sub
sarl
adc
and
pop
pusha
lock
test
sbb
mov
cmp
dec
pushl
xchg
mov
pop
imul
cmp
jbe
aad
mov
xchg
out
loop
xor
or
imul
mov
mov
addr16
xor
or
aas
divb
psubusw
mov
out
data16
lcall
or
fsub
jns
fisubrs
inc
push
mov
fstpl
imul
mov
pushf
lods
testl
out
test
std
js
imul
orl
adc
jnp
fsubrl
stos
movlhps
movsl
mov
sub
dec
pop
rol
das
retw
rcrl
mov
inc
and
xchg
xchg
fnstenv
pop
xchg
lods
mov
add
and
and
jnp
add
inc
popf
sbb
aas
xchg
rolb
cmp
jge
je
xor
dec
lock
rcrb
popa
mov
push
testl
dec
sub
iret
xchg
int
cmp
cmp
sets
dec
mov
stos
enter
dec
xor
scas
aad
icebp
aam
push
inc
push
cmp
fbld
fidivrs
inc
sub
inc
mov
je
cltd
pop
cmpsl
mov
add
push
xor
in
jnp
push
divb
aad
popa
cld
pop
fisttps
pop
and
loop
test
subb
icebp
stos
push
mov
loopne,pt
xchg
scas
neg
push
sahf
push
jb
test
sbb
dec
xchg
xor
jae
popf
loop
jae
push
sub
rclb
cmpsb
dec
ss
add
add
aaa
push
dec
push
ret
out
out
arpl
iret
sahf
je
pushf
fwait
aas
mov
mov
rolb
aam
xor
es
test
rolb
mov
xlat
mov
mov
and
pop
mov
xchg
add
outsl
out
pushf
push
xchg
add
mov
push
sbb
jge
adc
jecxz
fists
mov
add
or
mov
aam
sahf
jnp
jmp
cmp
dec
push
mov
lods
mov
outsb
out
test
in
push
sarl
mov
dec
sbb
jne
negb
jns
lds
sub
mov
mov
adc
pop
cmpb
sbb
cmpsb
adc
lock
bound
pop
pop
xchg
rep
fidivl
push
lea
lock
outsb
dec
rcll
scas
mov
fisubl
xor
jp
call
idivb
sahf
pusha
mov
fsubrs
sub
mov
cmp
xor
push
out
adc
out
cwtl
pop
aad
xlat
cltd
mov
and
inc
mov
repnz
xor
and
and
into
or
shrl
cmp
out
fnsave
icebp
adc
jmp
loop
jo
and
jp
cmp
lcall
xchg
nop
or
lahf
dec
inc
pusha
inc
cwtl
mov
xchg
pop
movsl
jo
outsl
sahf
in
mov
repnz
pop
mov
mov
dec
cmp
cmp
cli
add
sub
in
or
push
lahf
push
or
push
in
fmuls
data16
lret
cmc
jns
loope
dec
inc
aad
mov
ljmp
xchg
inc
sub
lea
pop
add
lods
mov
cmp
sbbb
add
cld
push
push
lods
das
loope
insb
jmp
push
ljmp
mov
leave
mov
cmpb
jne
fstpt
mov
mov
insl
mov
sbb
sahf
jecxz
push
adc
adc
addl
sti
insb
call
shrb
jno
popf
sub
xchg
inc
jecxz
test
mov
push
arpl
pop
iret
mov
or
cmpsl
lret
pushf
ja
leave
push
adc
flds
sub
cmp
stos
mov
aad
xor
gs
mov
les
insb
and
pop
cs
sub
outsl
push
aam
adcl
nop
jb
mov
cmp
xchg
loope
pop
add
test
push
xor
and
add
inc
leave
jmp
xchg
sub
sar
mov
mov
arpl
mov
negb
cmp
out
push
gs
pop
or
test
push
filds
ret
lret
out
mov
pusha
stos
mov
int
and
cmp
mov
mov
cmpsb
movsb
xchg
mov
pusha
mov
or
adc
xorb
pop
inc
or
or
sbb
nop
jg
mov
add
test
push
pop
into
push
int
leave
mov
sbb
push
mov
mov
pop
shll
loop
sahf
arpl
es
dec
xor
push
movsb
xor
loop
stos
xor
pop
mov
fidivl
jp
cs
add
out
cs
xor
sub
test
inc
dec
loopne
jp
iret
pop
add
movsl
dec
lods
mov
mov
test
fsubrl
xchg
jecxz
xchg
add
jno
push
jmp
add
jae
outsb
roll
int3
js
sarb
out
imul
int
cmp
xchg
mov
sbbb
mov
jmp
xor
and
xchg
stos
push
shll
xchg
jno
nop
hlt
lret
sbb
or
fbld
movsl
fistpl
mov
outsl
cmp
add
push
in
popf
test
sbb
arpl
jle
in
gs
sarb
mov
scas
xor
lahf
inc
jo
andb
add
pop
out
push
clc
xchg
and
outsl
mov
popa
orl
decb
fcompl
not
ret
sbb
sahf
or
push
push
in
mov
mov
push
pusha
lcall
cmpsl
js
lods
push
shrl
popa
outsb
ficompl
pop
pop
jnp
fstps
std
or
stc
repnz
shll
push
jp
lods
imul
fidivs
aad
pop
ret
faddl
pop
jnp
add
mov
in
adcl
ret
cwtl
fcoml
inc
test
add
sbb
das
mov
fcmovu
pop
lret
or
sub
lcall
pop
aaa
xchg
mov
sbb
cmp
mov
fnstsw
push
mov
icebp
popf
stos
xchg
pop
ret
add
xchg
adc
stos
enter
add
lock
jl
sub
cwtl
mov
mov
shrl
or
pop
sub
xchg
jmp
icebp
add
and
scas
xor
cmpsb
jae
and
push
jnp
mov
repz
ds
jae
mov
jbe
cmp
inc
insb
cli
lods
xchg
dec
aaa
push
mov
dec
test
mov
adc
sub
idivl
inc
pop
xor
xlat
pop
pop
dec
pop
and
cs
or
jle
repz
mov
pop
cmc
cmp
mov
aam
in
inc
xor
mov
jne
stos
add
dec
pop
push
inc
cltd
test
or
xor
cmp
jbe
addr16
lcall
push
sub
lods
outsl
push
cs
int
or
add
pop
into
orl
scas
xor
pop
fdiv
push
gs
idiv
inc
gs
adc
and
sarl
xor
xor
rorl
out
push
icebp
pop
ret
outsb
push
jge
jmp
stos
pop
nop
out
nop
pop
mov
sub
xor
mov
dec
sti
sbb
imul
pop
cltd
sbb
stc
les
jg
adc
dec
cmp
mov
ret
sub
pop
imul
dec
jg
sbb
sarl
push
mov
sbb
pop
aaa
xchg
fs
dec
rcl
mov
and
pop
fsubrs
in
push
xor
inc
fs
mov
jno
movsb
or
and
and
lcall
inc
sub
sub
or
jecxz
push
lods
dec
int
popf
int3
out
mov
push
fnstsw
pop
mov
lret
ret
ljmp
stos
outsb
push
jle
imul
push
hlt
xchg
movsb
out
mov
icebp
xor
or
xor
ret
std
test
pushf
inc
jns
jge
jno
mov
push
mul
lcall
arpl
repnz
push
mov
fldenv
out
mov
adcb
lret
addr16
mov
call
shr
sub
push
inc
stos
ret
fsubrp
add
std
aaa
test
lock
fldl2t
and
sarb
cld
xchg
inc
cld
sub
sbb
pop
push
aas
icebp
inc
shl
mov
icebp
push
stos
cli
fnstenv
jo
adc
aaa
movsb
bound
sub
fcmovnb
lcall
mov
cmp
lret
cmp
dec
movsl
xchg
and
or
mov
stos
sbb
inc
cwtl
stc
lock
mov
push
mov
icebp
add
sbb
mov
sbb
push
pop
icebp
bound
jl
cmp
subl
push
mov
inc
fcmovnb
or
mov
insb
fimull
dec
dec
or
dec
bound
add
fdivr
xchg
test
push
mull
pop
push
push
jmp
test
mov
hlt
pop
fldenv
dec
and
je
xor
add
mov
inc
mov
cmc
and
push
inc
mov
push
push
xor
jp
xlat
dec
cmp
mov
jl
sub
faddp
xor
rorl
mov
in
iret
test
push
push
xchg
sbb
scas
cld
xchg
pop
dec
lret
mov
xabort
or
jo
setno
popa
lock
imul
and
test
loop
out
mov
lret
insb
add
cmpsl
rcrl
push
xor
push
insl
mov
rcll
adcl
jno
je
loope
sub
arpl
mov
add
adc
add
mov
mov
je
fs
sbb
mov
jo
test
mov
paddb
jle
xor
insb
rcll
xchg
stc
mov
xchg
push
sbb
repnz
pop
mov
pusha
ds
sbb
mov
push
cmpsl
cmpsb
mov
push
mov
sub
sub
shlb
mov
dec
push
add
sub
push
aam
inc
in
inc
push
pop
test
sbb
xor
or
out
call
out
adc
jmp
pop
pushf
ds
mov
gs
mov
pusha
push
and
popf
out
mov
pop
push
sbb
push
pusha
ja
cwtl
xlat
ljmp
ja
stos
daa
repnz
push
mov
mov
pop
and
sarl
xor
cmp
xor
das
push
jb
loope
in
sbb
mov
pop
imul
mov
xor
lds
stos
lock
div
enter
loop
mov
xchg
mov
inc
mov
stc
pop
lods
pop
clc
outsb
in
mov
sbb
jo
add
cmpsl
sbbl
sub
add
cmp
push
ret
inc
xchg
and
pop
or
mov
or
fisubl
sub
adc
icebp
mov
jb
int3
mov
arpl
aas
pusha
sbb
insb
divb
push
test
rcll
in
movsb
shrb
fcmove
leave
xchg
cwtl
sub
and
cltd
jns
lods
decb
inc
push
scas
clc
jg
sub
push
pop
jb
pop
and
pushf
pop
mov
dec
adc
bound
or
cmp
adc
dec
inc
cmp
insb
repz
add
or
sbbb
mov
cmpsl
mov
mov
or
add
aaa
inc
jbe
push
mov
inc
in
jmp
cmpl
inc
cwtl
dec
flds
adc
inc
xor
insb
inc
icebp
xor
lret
repnz
pop
add
mov
xorb
dec
pop
dec
popa
cltd
push
mov
test
ss
addr16
scas
imul
or
sbb
frstor
inc
out
pop
add
xchg
jmp
cltd
xlat
mov
stos
dec
add
and
cmp
cld
sbb
lahf
icebp
push
push
cld
push
and
fs
or
test
mov
cld
lcall
pop
lahf
or
push
push
lcall
mov
add
cmp
inc
or
pop
mov
push
add
pop
lret
push
rol
xchg
sti
mov
sub
cmp
aad
lods
xchg
xchg
ficoml
sbb
insl
mov
sbb
mov
mov
push
cwtl
sbb
aam
xor
pop
movsl
cwtl
sbb
imul
push
jbe
pop
test
and
add
push
mov
decb
les
and
xchg
mov
and
sbb
and
cmp
stos
dec
push
xor
push
sbb
dec
out
mov
and
mov
pop
pop
test
testb
inc
cmpsb
in
fs
stc
mov
push
or
xor
stos
outsl
stos
adc
push
mov
lea
dec
test
pop
cmpsl
sti
jns
fwait
rcrb
enter
lock
rcrb
cld
pop
addr16
push
pop
ja
fstpt
sbb
adcb
leave
fwait
pusha
mov
or
push
out
push
xchg
out
push
pop
pop
and
loope
xchg
enter
lds
mov
mov
movl
mov
mov
dec
out
push
or
add
lock
gs
mov
addb
fsubrs
fdivr
les
aam
movsb
aaa
xor
idiv
cli
fs
xchg
mov
out
hlt
xor
push
push
jbe
nop
jno
dec
xorl
imul
hlt
stc
inc
sub
rolb
hlt
sbb
cmp
pop
bound
pusha
mov
push
aad
cltd
mov
test
push
inc
shrb
mov
jne
fs
movsl
jecxz
cmp
push
dec
and
addl
imull
repz
sar
mov
jge
xchg
js
fsts
jae
lret
adc
leave
fwait
sub
jmp
and
dec
and
imul
xchg
add
sbb
cmp
sub
out
xlat
or
push
sbb
push
fstpt
mov
xchg
daa
imul
imul
sbb
mov
pushf
sub
lods
imul
cli
notl
out
ud0
rcrl
jno
or
lock
fistpl
mov
ja
cld
add
push
or
cltd
jns
ss
dec
test
sub
stos
xchg
fldt
ficompl
sub
sbb
xchg
stos
mov
cvtps2pd
mov
cmp
and
ret
and
or
sbb
outsb
ret
cmp
dec
lods
cli
adc
push
sbb
insb
daa
xchg
hlt
addr16
cltd
push
add
shrb
pop
popa
and
rol
and
sub
das
insl
inc
dec
pop
insb
mov
ja
popf
push
mov
dec
adc
subl
psubw
sbb
inc
adc
cmpsl
dec
iret
pop
jbe
pop
bound
push
and
sbb
loop
cltd
js
adc
jmp
out
daa
gs
dec
xor
inc
leave
push
mov
inc
addr16
int
xor
sahf
das
fisubrs
dec
negl
xor
cmpb
insl
iret
notb
or
es
adc
stc
jo
pop
jecxz
int
inc
cltd
nop
lds
ret
mov
dec
inc
pusha
repnz
popf
sbb
and
add
or
aaa
push
pushf
data16
dec
int3
sti
cmp
fcoms
popf
lock
cmc
js
inc
and
xlat
xchg
sahf
sub
test
adc
or
mov
enter
xorl
in
fwait
or
mov
fcompl
mov
test
or
pop
fcoml
push
jmp
pop
pop
jg
lret
lcall
jecxz
jns
aam
int
xchg
xchg
push
or
jmp
sti
push
ficoml
aaa
stos
out
jne
xor
movsl
icebp
subl
lret
ret
in
mov
push
jno
push
cli
xor
repnz
aam
and
xchg
inc
xchg
inc
xlat
clc
fisttps
xchg
xor
das
cmp
and
jl
mov
imul
divl
inc
lds
rcll
and
and
pop
jns
fimuls
cmp
imul
or
cmp
aad
and
push
int
pop
cli
inc
adc
pandn
scas
adc
jo
xchg
sub
jae
pushf
fucomi
xchg
pop
sub
rclb
aam
out
mov
and
sub
sbb
inc
push
sub
inc
xchg
idiv
std
and
mov
xor
sbb
lret
in
in
xchg
out
setb
ret
lods
cmp
shl
fisttpll
popa
pop
mov
add
scas
xor
popf
or
js
add
ss
mov
fmuls
add
xor
add
push
sub
mov
pop
leave
out
mov
push
fyl2x
das
mov
add
test
shl
dec
fimull
lret
ret
cmp
fstpt
pop
jo
sub
mov
repnz
mov
mov
hlt
shrl
mov
mov
inc
movsb
mov
cld
push
hlt
mov
dec
inc
or
scas
in
icebp
sbb
fs
jbe
pop
sbb
stos
sbb
imul
jmp
call
sti
out
mov
out
mov
xchg
mov
popa
dec
loop
push
les
mov
int
lods
jnp
sub
jo
and
sbb
outsb
lcall
arpl
repnz
cmp
loopne
int3
pop
mov
int
loop
out
rcrl
xlat
jnp
mov
dec
xorl
fists
or
fmull
cmc
icebp
push
jg
divl
sbb
bnd
lcall
cwtl
pop
xchg
mov
mov
inc
les
mov
mov
lret
xchg
test
sbb
and
stc
pop
aad
lahf
pop
sub
aas
pop
push
inc
movsb
aad
outsb
cmp
push
xlat
inc
gs
out
call
pop
mov
test
jns
out
mov
jno
sti
loope
mov
addl
shll
jno
shll
or
inc
mov
icebp
mov
dec
mov
aas
test
jo
fsubrl
adc
and
mov
push
xor
xchg
cs
cmp
dec
mov
addr16
nop
push
stc
pop
loop
inc
mov
idivl
xor
xchg
jl
leave
ret
outsb
mov
fdivrs
fs
call
fstpt
imulb
mov
rolb
daa
add
arpl
cld
loope
aam
cli
push
or
adc
pop
outsb
adc
fmull
mov
push
pop
shrl
aas
jg
dec
aad
pop
loopne
imul
movsb
insb
loopne
inc
dec
push
jmp
mov
cmc
mov
sahf
jo
leave
hlt
pop
insb
ljmp
aam
ds
push
fimull
pop
pop
sub
xchg
xor
out
mov
scas
addr16
ja
inc
xchg
push
xor
out
aas
insl
fs
lods
fisubl
leave
leave
jecxz
mov
jne
cwtl
test
loop
lret
sbbl
bswap
and
jp
sbb
fdivrl
jne
sub
cmp
sub
and
add
inc
pop
shr
fcmovnu
xor
sbb
rorb
xor
xchg
enter
cmp
out
or
add
xlat
test
push
dec
nop
lcall
cmp
mov
arpl
mov
mov
pop
idivb
jnp
into
fiadds
adcl
pop
add
or
popa
fcoml
aad
imul
rep
cmpsl
or
ds
inc
push
sub
dec
xor
mov
push
mov
dec
adc
pushf
jg
outsl
and
adc
xor
outsb
outsb
dec
xor
push
and
cwtl
ja
mov
add
cwtl
lods
and
xor
movb
cmc
leave
mov
sahf
movsb
adc
inc
call
jnp
sub
pushf
test
pop
xor
movsb
xchg
in
outsb
es
ljmp
insl
mov
inc
imul
orb
add
mov
dec
add
repnz
push
push
jecxz
xchg
lret
push
imul
sub
in
clc
cmp
cmp
rcrl
sbb
les
mov
fcompl
lds
lods
aad
fs
dec
sarb
pop
pop
cmpsl
and
adc
sbb
xor
push
adc
sbb
mov
inc
mov
xchg
dec
loopne
jg
adc
decb
xlat
mov
pop
adc
sub
shll
lods
arpl
and
mov
mov
aad
mov
cwtl
and
mov
pop
nop
push
inc
sbb
pop
push
pop
fimull
xchg
fisubs
repnz
hlt
jae
pop
dec
push
sbb
push
loopne
adc
push
mov
jne
test
dec
push
std
mov
push
dec
ret
inc
inc
add
sbb
rclb
or
ret
and
inc
outsb
lods
daa
push
lcall
cmpsb
fcompl
ret
fistl
lret
nop
in
subb
dec
stc
ret
push
icebp
out
jp
dec
in
shl
and
jp
add
hlt
pusha
push
or
lret
dec
push
xchg
out
nop
xchg
add
jno
xchg
les
xor
dec
xor
cmp
jno
bnd
lock
ja
sub
xor
and
in
fadd
mov
mov
xor
jb
lock
cld
scas
aad
sti
sub
adc
call
push
and
aas
jmp
push
hlt
mov
imul
mov
sbb
loop
sub
xor
outsl
dec
mov
pop
fwait
cli
hlt
ror
mov
js
fdivp
mov
cwtl
xchg
jno
xchg
mov
fnsave
push
jno
push
aad
daa
jns
sub
int3
add
mov
fdivr
sti
and
rorb
shrb
pop
idivl
mov
cmp
cmp
out
jo
ja
loop
fildll
push
jl
mov
pop
psubb
sub
aam
pushf
je
loope
push
adc
fstpl
and
pop
movsb
loopne
pop
jbe
add
dec
ljmp
add
ret
jmp
cmp
ret
and
lds
loop
xchg
ficomps
test
imul
and
sbb
stos
cmp
adc
jns
sub
push
stos
dec
mov
cmp
rcrb
iret
adc
xor
andb
aas
fucomp
dec
push
and
icebp
ror
out
imul
jecxz
push
sub
lret
rorb
pop
popa
dec
test
jns
repnz
lods
subl
lahf
sub
mov
dec
lret
dec
sahf
cli
idiv
lods
push
repnz
mov
xlat
xchg
jmp
pop
test
sbb
mov
rolb
loop
push
push
cmp
mov
cld
pop
sub
mov
xchg
push
mov
or
pop
pop
adc
ljmp
jl
jae
roll
es
mov
sub
inc
sub
pop
mov
mov
shrl
popf
lock
sahf
ljmp
push
push
icebp
sub
inc
enter
add
lcall
add
in
inc
movntq
rolb
mov
sub
jmp
ss
lds
adcw
es
loopne
sub
in
cmp
sbbb
pop
loopne
stos
jg
adc
aad
mov
mov
imul
push
cmp
ljmp
sub
in
testb
xor
loopne
mov
lods
jbe
repnz
pushf
shrl
add
lahf
lcall
cmp
dec
loopne
flds
das
mov
adc
cld
xor
dec
jle
lahf
and
inc
jg
or
adc
cmpsb
mov
test
dec
push
dec
mov
push
push
jg
push
pop
sti
and
test
call
xchg
mov
xchg
aad
mov
dec
pop
sbb
pop
cwtl
adc
jge
cmp
and
push
divl
adc
sub
scas
mov
ficomps
popf
mov
sub
test
jno
ret
add
xchg
mov
mov
dec
jae
mov
dec
pusha
test
mov
lcall
lock
jle
inc
insl
mov
addl
ret
jle
into
or
jp
add
jnp
sbb
lret
push
inc
cs
and
xor
xchg
sub
std
mov
out
jb
ret
fidivs
xchg
mov
jb
sub
dec
movsb
xor
sahf
ret
cs
jmp
jl
or
ss
mov
je
sub
cmc
jecxz
cmp
push
ja
imul
pop
jmp
cld
push
inc
adc
sub
ja
sbb
cmp
shlb
cmp
das
shrl
test
mov
mov
in
insl
incl
sub
and
inc
and
mov
sub
test
dec
jae
mov
and
jne
icebp
shl
or
mulb
push
jle
mov
pop
mov
inc
xor
push
ret
xor
ror
pusha
cli
popf
xorl
and
mov
out
mov
cs
or
aas
and
leave
test
jno
mov
in
dec
jge
dec
inc
shll
js
fucomi
lea
mov
in
dec
mov
cmpsl
mov
jge
add
lcall
test
les
or
pop
or
push
int3
pop
sub
loop
pop
xchg
and
aaa
aaa
mov
call
lds
sysenter
xor
adc
push
out
mov
cmpsb
shlb
xor
jle
orb
decl
test
dec
and
and
mov
mov
test
xor
push
adc
ret
cmp
mov
dec
mov
add
sub
push
insb
and
int
sub
les
xor
dec
mov
loop
add
dec
dec
test
sti
pop
mov
ret
nop
sub
lods
cmp
add
sub
imul
lahf
fstpt
inc
arpl
dec
js
xor
cmpsl
fs
mov
xchg
mov
and
lds
cmc
inc
jo
imul
loop
xor
imul
push
lret
dec
cli
movsl
push
mov
aam
loope
mov
pusha
les
add
sbb
aaa
sahf
div
xchg
loope
ret
pushf
inc
adc
sbb
push
icebp
imul
shlb
imul
jne
sbb
push
push
pop
jne
ret
mov
inc
inc
inc
fdivl
lea
xlat
sub
mov
jmp
lea
sbb
push
sub
dec
dec
push
test
xchg
aam
rcrb
push
rcll
das
mov
pop
mov
gs
mov
ret
sub
cmc
test
cmp
lcall
pop
leave
mov
into
xor
sti
movsl
test
mov
paddb
lds
mov
mov
fwait
jo
mov
ss
dec
in
stos
inc
cmp
lret
daa
cwtl
rol
lock
mov
xchg
adc
dec
mov
and
test
push
mov
inc
jp
je
sbb
sbb
dec
rcrb
decl
stc
icebp
clc
scas
pusha
pop
inc
push
scas
outsb
popf
ficoms
xlat
jne,pn
test
or
lret
sbb
leave
ss
lahf
lret
cmp
jo
out
pop
in
scas
clc
hlt
add
in
int3
std
sbb
test
sbb
in
pop
mov
mov
ret
sub
sbbl
and
popf
or
sub
and
repnz
aad
insl
mov
dec
or
jl
inc
mov
dec
cmc
sub
out
imul
pop
stos
bound
sbb
rclb
push
roll
mov
jp
jmp
popa
mov
add
jmp
inc
xor
mov
pop
and
jae
cmpsl
pop
decb
and
aas
sub
pop
sub
dec
sub
mov
push
and
mov
fldt
cmp
shlw
mov
push
inc
mov
movsb
mov
push
pop
and
fimuls
adc
pop
sbb
out
mov
push
int
mov
movsl
jp
mov
mov
sbb
push
cmpsb
out
push
and
cmpl
bound
xor
aaa
imul
clc
idivb
cli
xor
insb
inc
mov
cmp
mov
cmpsb
pop
mov
sbbl
push
inc
inc
inc
sub
add
jle
mov
mov
popf
xor
roll
shlb
cmc
mov
jmp
push
mov
adc
aas
xchg
cmovne
add
iret
movsl
fstpt
inc
lret
fnstcw
pop
bound
push
addl
outsb
shl
mov
xchg
sbbl
xor
push
and
out
pop
bound
jnp
mov
jns
cltd
ficompl
pop
in
add
scas
add
sub
mov
fcoms
mov
lea
mov
jbe
aaa
aas
xchg
push
xor
sub
cs
sbb
daa
pop
push
cmp
in
cmp
aaa
or
dec
arpl
out
pop
mov
pop
insl
jb
inc
stc
mov
inc
mov
mov
mov
push
push
or
sbb
xchg
sbbl
aad
mov
inc
ret
in
jge
test
sar
cmp
pop
mov
rorb
mov
bound
or
pop
in
cmpsb
xor
fnsave
mov
es
xchg
mov
push
pop
les
fwait
adc
loope
ljmp
cmp
push
in
jb
int3
scas
ja
mov
jne
mov
mov
dec
out
mov
ret
arpl
sti
fld
and
js
cli
push
ds
js
inc
stc
mov
mov
adc
movl
sarb
pop
dec
inc
sub
sub
inc
lds
jg
scas
data16
dec
jae
es
xor
mov
in
test
ret
inc
int3
xor
stos
mov
sti
or
cli
andl
push
jecxz
sub
cli
push
shl
push
pop
es
shl
sahf
dec
es
push
popf
leave
mov
or
and
fldt
arpl
mov
jp
mov
push
outsl
sbbl
int3
lcall
jbe
stos
or
adc
notl
mov
add
mov
add
sbb
ficoml
stos
mov
pop
out
or
mov
push
push
mov
jbe
insl
xor
jmp
shr
mov
insl
enter
cmp
pop
mov
mov
bound
call
das
loopne
fdivrs
pop
cmp
push
jmp
pop
inc
adc
je
divb
fcoms
ljmp
inc
mov
into
ja
ja
jl
sub
push
push
add
leave
stc
inc
inc
loop
pop
dec
mov
lods
iret
adc
bound
pop
popf
je
js
inc
mov
jp
imul
xor
fnstsw
xor
push
or
or
jbe
push
push
fildl
les
lods
pop
sbb
cli
jl
orb
lock
int
bound
pop
and
pushl
mov
fsub
sub
lret
clc
fildl
jne
addr16
cmc
insl
xor
push
push
in
mov
inc
jb
out
push
shl
scas
imul
jge
push
sub
mov
lcall
out
movsb
int
and
int
adc
ret
cltd
adc
mov
ljmp
xchg
gs
xchg
add
inc
sbb
imul
add
cmp
sbb
cld
popf
aas
popa
mov
pop
sub
pop
bound
adc
xchg
jae
pop
daa
inc
dec
shl
mov
mov
test
fstpl
inc
inc
adc
mov
push
push
cmp
ljmp
call
mov
sbb
jbe
scas
or
push
mov
pop
mov
xchg
in
sub
xchg
mov
ficoms
stc
int
add
sub
stos
xchg
pop
xchg
inc
rcl
add
bound
stos
test
xchg
or
fnstcw
cmovbe
jne
jns
xor
sub
and
in
shr
inc
sbb
scas
mov
mov
ret
and
jbe
lret
movsl
cmp
cmp
lods
in
mov
imul
cld
arpl
xor
and
and
push
movsb
sub
sarb
call
jp
sti
imul
scas
repz
pushf
xor
stos
aad
ret
je
fwait
xchg
push
es
rorl
or
cmpsb
dec
je
sbb
mov
mov
or
pushf
icebp
jl
sbb
ror
int
outsl
lea
cs
ja
addr16
add
mov
icebp
sub
fxch
popf
mov
xchg
add
or
xor
mov
lret
jns
or
cmpsb
pop
call
out
lea
mov
jnp
into
fadds
xor
jmp
pop
jl
cmp
paddsw
and
pop
sbb
int3
movsb
cmpb
xor
mov
adc
scas
xchg
lret
add
pop
gs
mov
xor
outsb
add
mov
stos
stc
test
das
out
xchg
mov
pusha
xlat
mov
push
inc
mov
pop
call
mov
es
scas
or
mov
int3
push
mov
clc
mov
out
mov
or
stos
jae
xor
aaa
jmp
jmp
mov
repz
movsl
add
roll
nop
sarb
jmp
ja
mov
inc
sub
jp
and
idivl
push
jae
ret
loopne
xor
cmpsl
es
repz
or
mov
popa
repz
rcll
popa
xchg
adc
out
cmp
iret
int
or
sbb
into
ljmp
cmp
pop
fsubs
push
xor
pop
pop
aam
push
les
inc
pushf
push
subl
js
mov
mov
xor
movsl
inc
cmp
ja
arpl
add
bound
mov
mov
call
xor
movsl
out
mov
inc
lahf
sbb
xchg
test
fcompl
inc
sub
and
cwtl
pop
gs
dec
sbb
jae
call
out
add
mov
stc
jb
cli
es
push
es
sbb
pop
xchg
inc
movsl
jmp
mov
xor
clc
loop
andl
inc
mov
into
call
scas
or
or
mov
pushf
sbb
aas
mov
lds
dec
movsb
pop
into
cmp
pusha
std
sarl
repnz
cmp
aam
outsb
pop
jns
cmp
or
jnp
fadds
push
daa
and
in
imul
shll
sub
mov
sahf
test
aaa
clc
jle
ret
mov
cld
push
jle
jl
adc
sub
xchg
jmp
mov
ljmp
fsts
or
adc
clc
shlb
aas
xor
dec
sub
mov
and
and
mov
out
cltd
or
jnp
ret
jp
pop
cmc
jb
cmpsl
xchg
iret
pop
push
or
adc
sbb
insl
xchg
sub
scas
xor
push
lods
popa
dec
cmp
jmp
int
mov
cmp
icebp
push
adc
push
add
xchg
mov
dec
mov
jno
inc
mov
addb
enter
pop
dec
mulb
cmc
push
mov
fs
sub
and
push
inc
arpl
imul
arpl
ljmp
cld
je
fwait
imul
jbe,pn
inc
and
ja
lods
sbb
daa
xor
outsb
xchg
popf
ret
and
imul
das
daa
enter
mov
add
mov
or
loopne
mov
pop
aaa
or
fwait
or
ret
je
push
mov
sub
dec
data16
imul
pop
inc
test
cmpl
js
inc
xchg
dec
dec
popa
int
xchg
divl
fs
roll
dec
mov
sub
xchg
pushf
fs
imull
movsl
and
sbb
jbe
mov
pop
push
pop
xlat
jnp
scas
pop
adc
jb
xchg
and
pusha
insb
pop
adc
out
jne
cmp
cli
dec
add
jbe
cmp
and
sbb
repnz
and
pop
cmp
xor
inc
mov
in
sti
ror
jg
fdivr
push
jb
cli
pop
test
daa
fs
mov
imul
orb
test
sbb
shrb
out
icebp
dec
sub
call
or
cmp
leave
movsb
je
inc
pop
fstpt
xchg
loopne
fstp
incl
push
fildll
imul
imulb
es
mov
jecxz
jl
popf
aad
repnz
inc
inc
out
pop
test
outsb
xchg
sbb
and
stc
and
sub
ds
rorb
add
adc
dec
lods
sbb
in
inc
push
les
jge
mov
xchg
leave
inc
jns
xor
mov
pop
adc
inc
stos
not
push
push
mov
rcl
outsb
sbb
jp
das
hlt
clc
cmp
sbb
aaa
sarl
mov
into
in
jo
dec
jbe
aam
mov
adc
shlb
in
add
jg
out
repnz
movsb
loopne
fs
or
fprem
inc
cli
jb
insb
pop
test
mov
rorb
sbb
xchg
pop
mov
xchg
xchg
mov
cmc
adc
adcl
push
out
mov
insb
inc
mov
addr16
sub
jp
sub
mov
sbb
insb
aam
push
adc
out
cmp
add
scas
in
insb
insl
xlat
cltd
xor
mov
jle
ds
lret
xchg
call
push
add
sbbl
xchg
xor
adc
mov
insl
inc
gs
fstps
dec
dec
adc
push
call
mov
adc
mov
pop
push
add
push
in
jae
lcall
xchg
pop
in
pop
das
aad
mov
imul
les
add
sub
inc
xlat
cmpsl
push
fimull
dec
sahf
aad
addr16
mov
insl
cmp
push
mov
lock
daa
popa
fdivrs
in
popf
inc
cmpsb
arpl
jo
xor
lahf
popf
or
xor
lret
movsl
mov
sbb
sbb
lahf
pop
sbb
sub
inc
icebp
and
sub
jns
jno
adc
lods
cmp
add
je
cmp
or
je
addr16
pop
xor
mov
jne
inc
popf
mov
sub
nop
push
aas
mov
xor
push
mov
pop
add
es
fwait
jb
into
in
lcall
je
cmpsl
leave
cwtl
stos
dec
push
cs
sbb
jae
cs
inc
hlt
out
cmp
and
mov
push
mov
fimull
mov
lret
lcall
outsl
and
mov
xor
jl
jae
mov
dec
cwtl
push
dec
imul
xorl
stos
add
jg
notb
psraw
popf
cmp
cmp
shlb
inc
repnz
fdivl
je
pop
icebp
push
test
mov
push
pop
jns
mov
inc
rolb
mov
adcb
or
pop
test
ret
push
add
push
push
adc
inc
adc
push
ret
pop
xchg
fstps
scas
push
sub
out
jo
lcall
cld
lahf
sub
xchg
mov
cmpsb
fstp
jge
in
adc
test
push
pop
lret
sbb
outsl
jl
rcr
add
cltd
xor
lcall
imul
dec
addr16
xor
mov
xchg
lods
test
jle
popa
stos
mov
jo
rolb
jns
adc
xor
call
fisttpll
shrl
xor
dec
loop
sbb
inc
int3
mov
lea
pop
and
fld
fistl
add
shr
lea
mov
inc
xchg
aad
gs
mov
dec
movsb
or
in
sbb
daa
mov
sbb
pmaxub
js
inc
jecxz
add
or
jg
andb
push
mov
outsb
push
xchg
push
aad
inc
and
std
adc
sbb
lods
mov
or
icebp
pop
sbb
adc
xor
inc
sub
fiaddl
pop
int3
shll
mov
mov
mov
in
adc
shll
mov
lcall
sti
mov
sub
stos
and
mov
sbb
into
add
cli
fimull
lcall
sub
push
loopne
mov
stos
lods
in
xchg
or
xor
icebp
xchg
test
xchg
mov
mov
lock
dec
xor
cld
hlt
andb
push
je
and
ja
mov
sbb
push
shrl
cmp
je
push
xchg
cmp
adc
mov
sbb
nop
push
icebp
int3
rcrb
mov
lret
xchg
or
cmp
pop
daa
dec
ljmp
scas
mov
int3
jnp
xor
pop
imulb
stos
lahf
or
in
mov
pop
pop
cli
ds
xchg
sbb
or
std
imul
jbe
icebp
sub
xor
movsb
mov
outsl
sti
pop
push
arpl
sar
mov
sbb
lods
mov
fmull
xor
popw
adc
pushf
add
push
xchg
shlb
xchg
aaa
out
or
inc
xor
push
jnp,pn
inc
inc
or
xor
dec
ljmp
das
jle
cmp
mov
mov
mov
pop
push
push
jecxz
sbb
lahf
jmp
pop
nop
aas
mov
lods
jb
cld
stos
jmp
in
sahf
mov
cmp
xchg
cmp
jg
jns
xor
add
inc
out
lret
mov
in
cmp
or
xor
dec
mov
scas
mov
pop
inc
fcoml
jbe
data16
adc
mov
jns
pop
aam
pop
decb
push
dec
mov
loop
and
cwtl
xchg
addr16
clc
push
cmpsl
bswap
cmp
xchg
pop
sbb
aas
pop
mov
pushf
xor
jbe
mov
dec
push
inc
ret
stc
fistpll
or
insl
inc
cltd
pop
ret
mov
cmp
xor
enter
dec
or
or
dec
dec
inc
daa
xor
or
in
sbb
imul
mov
lret
mov
loop
lahf
inc
lea
lret
dec
jle
push
dec
dec
pop
rcr
clc
sbb
jnp
mov
lahf
or
add
jecxz
xacquire
xchg
fnstcw
cli
iret
cwtl
adc
mov
outsl
popa
xchg
je
push
or
push
in
or
scas
add
bound
imull
adc
imul
mov
mov
mov
fcompl
mov
jns
enter
lret
gs
lds
push
enter
or
or
movsb
bound
cmp
and
cltd
add
insl
out
fiaddl
push
pop
and
mov
nop
in
sahf
je
adc
outsl
ret
add
clc
js
out
push
aaa
xorb
sub
fwait
pop
dec
jl
xor
adc
lods
push
test
out
xor
push
jecxz
add
out
in
sahf
adc
cmovle
aaa
dec
adc
arpl
and
insl
fdivrs
push
popa
xchg
imul
xchg
pushf
mov
dec
pushf
and
int3
in
mov
mov
pushf
loop
mov
push
fdiv
div
loope
sbb
lock
xchg
mov
fsubl
sub
pop
hlt
shrb
pushf
jae
add
xor
ss
test
jmp
xlat
and
jmp
lds
pop
sub
or
in
jg
fstp
or
mov
xor
xchg
inc
lret
hlt
andl
ja
les
mov
inc
sbb
fwait
mov
fs
xchg
mov
sub
les
popa
push
imul
push
outsl
rcll
ret
adc
inc
add
cmp
inc
std
fbstp
jp
push
das
outsl
addl
jp
sub
sti
dec
sub
inc
cld
enter
mov
lret
adc
cmp
adc
mov
pop
call
cmp
fdivrl
push
test
lds
notl
dec
and
repz
dec
xlat
jmp
ficomps
insb
mov
pcmpeqd
shll
sub
dec
jmp
ds
xchg
mov
xor
jle
cltd
pusha
test
in
inc
and
pushf
cmpsb
cmp
sub
subl
clc
ja
push
ds
jecxz
mov
lods
dec
pop
mov
jp
jmp
outsb
ljmp
or
mov
lock
rcl
repnz
pop
nop
cs
jecxz
mov
xlat
test
icebp
add
ja
jg
mov
ficomps
xchg
fsubrl
aad
outsb
mov
mov
mov
lret
cs
jmp
mov
orl
ffree
pop
cmp
mov
mov
aaa
jmp
out
or
inc
add
lods
loopne
mov
test
loop
repnz
rclb
jl
pop
pop
testl
fbld
fsub
inc
jg
mov
sbb
jp
xchg
out
sbb
sub
inc
xchg
rorl
adc
push
add
add
in
push
mov
sbb
xor
xor
push
push
pusha
mov
mov
jo
repz
sub
mov
sbb
dec
sbb
adc
add
mov
jne
int
mov
dec
sub
mov
add
push
xchg
sbb
aaa
sbb
and
add
mov
mov
and
fistpl
or
test
in
ja
lea
stc
add
or
push
jmp
mov
sbb
lds
movsl
je
xabort
imul
stc
jl
mov
rolb
or
movsb
fisttpl
sub
mov
sub
or
int
movsb
stc
mov
jg
jmp
xchg
pusha
lret
fs
test
lret
insb
pop
hlt
fistpll
sub
sub
mov
imul
testb
fcomi
popf
addl
sub
in
dec
popf
inc
enter
in
das
pop
fldl
sub
mov
jmp
xchg
jns
cmp
adc
dec
inc
movsl
jmp
mov
stos
arpl
jecxz
xchg
out
jmp
mov
mov
adcb
mov
test
pop
xor
dec
mov
out
dec
cmp
cli
xchg
subb
andb
add
jne
dec
aaa
fildll
ret
cwtl
mov
xor
movsb
xlat
inc
push
std
xchg
out
mov
jbe
pop
insl
adc
imull
jae
leave
pop
stos
xor
lock
pop
cmpsb
jb
je
adc
mov
insl
and
mov
aad
xchg
sti
adc
inc
xor
out
fcom
ljmp
adc
sbb
jo
fsubp
mov
push
hlt
lret
iret
repz
cltd
dec
mov
mov
mov
jp
jl
ljmp
mov
gs
push
icebp
xor
daa
outsl
push
mov
push
loop
pop
or
mov
outsl
stc
mov
leave
mov
push
in
push
bound
clc
pop
xchg
mov
in
imull
xor
mov
aad
dec
push
jb
jne
adc
add
daa
xchg
insb
lret
jae
mov
add
jbe
and
xor
dec
lahf
int
pushf
repnz
inc
jle
enter
dec
inc
outsl
mov
jle
dec
jg
inc
cwtl
pop
in
jp
and
jle
xchg
arpl
xchg
pop
cmovb
scas
std
jo
ljmp
and
cwtl
mov
mov
cmpsb
outsb
flds
xchg
lds
dec
in
jb
mov
dec
es
dec
popa
jbe
jne
dec
cmpsl
imul
mov
dec
mov
inc
fadd
or
jg
xor
or
lock
inc
cmp
dec
and
mov
cmpl
rcll
push
xlat
adc
add
cmp
sub
lcall
sbb
push
sub
loopne
das
pushf
fwait
mov
pop
pop
jl
cmpsb
aaa
jbe
adc
fsubl
push
lret
pop
and
push
loop
mov
mov
push
xchg
fldl
out
xchg
mulb
loopne
or
jno
popf
jo
out
repz
xor
jg
jne
cmp
and
xchg
rcrb
cwtl
fsubrs
nop
mov
inc
xor
ret
stos
movsl
nop
mov
js
or
rclb
mov
insb
mov
jae
mull
nop
sub
xor
inc
aad
inc
mov
int
xchg
imul
and
jb
shlb
sub
mov
ret
push
stos
scas
pusha
push
mov
jmp
das
outsb
loop
push
dec
in
loopne
lea
or
ljmp
out
aam
clc
pusha
test
aaa
js
nop
das
xchg
dec
dec
dec
sub
sbb
in
mov
loopne
cltd
shl
ror
xor
stos
mov
and
push
sbb
shrb
in
add
jnp
lret
mov
out
ds
lahf
pusha
add
test
sbb
scas
xchg
push
mov
add
sub
add
aad
enter
icebp
cmp
rclb
inc
add
std
int3
cmp
jnp
mov
mov
xchg
dec
jecxz
dec
dec
shl
stc
push
in
addb
popf
lretw
push
xchg
push
lret
hlt
notl
int3
add
add
popf
xchg
mov
bound
fsubr
loop
mov
ficoms
das
dec
or
or
lcall
inc
pop
mov
movsb
cmpsl
push
repnz
movsb
or
ljmp
jbe
mov
scas
out
sbb
and
dec
shlb
adc
leave
mov
lahf
pop
jmp
inc
iret
and
shr
lods
lahf
mov
fcmovnbe
jl
sub
outsb
add
jg
adc
out
std
es
or
sbb
ret
xchg
sarl
jl
insl
mov
lahf
cmc
ret
jle
xor
lea
pop
outsb
mov
je
or
cmp
mov
mov
xor
sbb
jge
sub
cmc
repnz
insl
xor
je
into
cld
xchg
jo
sbb
ret
mov
insb
and
jnp
dec
pushf
xchg
popa
sbb
jmp
cmp
mov
iret
sti
ljmp
das
dec
pop
leave
notl
xchg
divb
mov
sub
dec
out
sahf
enter
sub
jb
lahf
fcoms
mov
or
push
shr
adc
call
mov
bound
mov
das
add
fsubr
push
push
or
sub
push
push
push
lods
mov
arpl
dec
dec
xchg
adc
adc
pop
lahf
in
mov
mov
xchg
dec
pop
or
in
icebp
into
add
mov
fxam
test
std
bound
fiaddl
sahf
aas
pop
xor
scas
scas
fidivrs
iret
cli
lcall
push
dec
adc
or
aaa
xor
mov
jnp
push
out
ret
scas
sbb
fimuls
and
cmp
loopne
shll
lahf
jns
ds
cmpsl
xlat
inc
out
insl
push
inc
inc
jp
jg
pop
movsl
bound
fdivs
loop
mov
mov
mov
mov
adc
enter
movsl
push
pop
les
addl
rcrb
loop
adc
and
push
and
lcall
popw
fiaddl
int3
jns
jmp
xchg
inc
sbb
or
xor
pop
daa
jp
popf
bound
pop
scas
adc
negb
out
sbb
testl
jo
out
add
pop
cld
popa
gs
add
test
arpl
in
jne
les
cltd
test
jnp
adc
ficoml
jno
mov
test
push
pop
jg
pop
imul
repz
in
lret
sbb
pop
mov
inc
aam
push
jns
repz
loop
jb
fidivs
scas
pop
jmp
add
in
hlt
outsl
dec
scas
sbb
test
into
fstp
jecxz
or
sahf
and
fidivrl
mov
pop
mov
jns
fwait
loop
cmp
adcb
sbb
ret
dec
in
imul
mov
dec
dec
adc
and
lcall
adc
scas
stc
and
add
push
mov
push
cmp
mov
mov
mov
bound
aas
push
inc
jo
loopne
cmpsl
push
jge
dec
clc
pop
clc
into
imul
sbb
aas
ret
aad
cwtl
aam
push
repz
add
dec
neg
or
lahf
mov
das
test
jg
test
mov
rclb
sbb
out
pop
test
xchg
jg
xchg
bound
mov
popa
push
lods
and
xchg
mov
jg
fwait
cmpsl
ds
inc
dec
jle
cmpsl
and
out
jg
imul
pop
mov
mov
fsub
hlt
inc
mov
fmuls
jle
lahf
push
cld
mov
adc
pop
or
fistpl
pop
scas
jae
inc
dec
sub
fsubrs
jmp
mov
push
and
xor
pavgb
xor
xchg
into
je
ss
xor
cmp
adc
out
pop
scas
inc
mov
sub
adc
push
jl
mov
ss
inc
cwtl
lds
mov
decl
imul
dec
sbb
add
sbb
or
push
adc
jle
fidivs
popf
stos
xchg
mov
std
enter
cli
sbb
mov
popa
pusha
jge
and
lret
mov
iret
ljmp
aad
fadd
iret
fsts
mov
data16
clc
ljmp
dec
dec
xchg
js
lods
xor
add
push
and
sbb
jge
shlb
sarl
out
and
or
inc
jecxz
xor
cs
iret
xchg
fsqrt
aad
xor
and
pop
or
cli
inc
lar
mov
inc
aad
jmp
or
lret
mov
xor
adc
xchg
imul
or
stc
ss
jae
in
lds
popa
push
add
adc
daa
push
cwtl
stos
mov
icebp
mov
pop
jmp
clc
pop
adcb
loope
ljmp
stos
out
dec
mov
mov
cs
xor
or
lods
adc
inc
pop
pop
lock
mov
inc
inc
inc
stos
xchg
jne
negl
pop
nop
mov
test
or
jp
cmp
lahf
xor
mov
mov
push
les
lds
shlb
loop
push
test
js
mov
shlb
icebp
cli
jp
sub
nop
mov
cmp
clc
dec
adc
jae
add
xlat
xchg
xchg
mov
in
aad
adcb
add
push
shll
xchg
imul
push
int3
test
or
or
pop
xchg
xchg
xchg
xchg
popa
fwait
js
jnp
pop
iret
mov
dec
punpckhdq
sub
push
dec
xor
mov
fs
push
ret
mov
mov
sti
in
out
mov
add
sahf
jmp
ja
test
mov
enter
movsl
gs
adc
lcall
add
sub
sub
dec
pop
pop
test
ljmp
or
sub
je
cltd
int3
jmp
icebp
cltd
add
and
add
orl
in
lds
and
cmpsb
cld
mov
stos
cli
jmp
ret
out
push
out
lods
es
scas
ficompl
cwtl
push
jmp
mov
aad
sub
and
sub
lret
rolb
sub
and
jle
sbb
in
jae
dec
arpl
push
cmp
xchg
aaa
mov
out
adc
jno
repnz
cmpsl
or
imul
cmc
mov
lahf
loope
add
push
add
cmp
push
xorb
sub
test
inc
or
mov
mov
mov
mov
addr16
and
out
push
jne
xchg
das
jmp
mov
adc
xchg
or
inc
adc
mov
or
sbb
fadds
gs
xchg
call
adcb
mov
push
gs
and
outsl
ret
jbe
repz
xchg
pop
mov
mov
pop
gs
das
subb
cmpsb
outsb
dec
icebp
push
inc
adc
pop
sarb
je
fwait
and
rorl
dec
push
ficoml
add
sbb
bound
mov
xchg
push
insl
mov
mov
fildl
sbb
fdivs
stc
cli
inc
imul
ss
jne
and
mov
jp
idiv
sub
push
stos
ja
pop
in
shlb
adcb
xchg
jp
sub
sbb
popa
ret
push
mov
rolb
fs
push
insb
jne
mov
xchg
and
pop
mov
mov
xchg
lods
adc
cvtdq2ps
add
sbb
adc
sbb
jno
mov
hlt
sub
dec
inc
add
mov
sahf
or
dec
cmp
mov
xchg
hlt
lea
aas
pop
popa
inc
jns
into
test
add
mov
add
or
jle
cmpsb
stos
hlt
pop
mov
ret
jae
or
or
andb
mov
and
dec
lock
or
jbe
imul
jge
sbb
hlt
leave
ja
adc
and
es
inc
ss
cld
inc
sahf
fcmovnb
jecxz
mov
cli
sub
sub
insl
dec
xchg
dec
mov
insl
or
pop
cltd
sub
lret
shlb
out
mov
fadd
outsl
push
inc
inc
ljmp
and
enter
and
mov
mov
xchg
inc
rclb
cmc
and
add
xorl
cmpb
sbb
push
cmp
jae
aad
and
add
push
or
push
adc
scas
aaa
push
testb
xchg
xchg
mov
lods
std
mov
jne
jo
shlb
rcrb
and
ja
es
mov
cmpsb
mov
daa
test
scas
arpl
mov
pop
fwait
bound
pusha
mov
sbb
mov
dec
xchg
sbb
cmp
sbb
xor
dec
adc
adc
in
rolb
dec
or
sbb
outsl
js
pushf
inc
jecxz
adc
dec
push
loopne
xchg
xchg
push
xchg
or
lret
and
sar
xchg
rcrl
sbb
fiaddl
cmp
andl
outsl
adc
shrb
adcl
push
mov
xchg
sub
xchg
jbe
push
and
pop
loopne
push
inc
xchg
std
xchg
in
ret
adc
sbb
jo
inc
shl
pop
or
xchg
sbb
jg
enter
sub
dec
cs
xchg
loopne
jns
and
inc
fdivrp
lds
repz
addb
jo
lock
sub
sub
jbe
rcrl
mov
jb
ficompl
cmc
shl
pop
sub
sbb
dec
lcall
mov
jb
hlt
daa
xchg
cmpsl
aas
jno
ret
mov
and
sahf
push
repnz
popa
dec
stos
in
pop
mov
fwait
movsl
enter
jo
add
lods
fwait
pop
fisubrs
xchg
in
inc
jp
adc
cmpsl
jl
ficoms
add
mov
pop
test
repz
xor
mov
and
mov
stc
and
mov
mov
pop
pop
call
cmp
push
out
push
cmp
fisttpll
cs
dec
test
mov
and
insl
cmp
mov
mov
cmp
inc
push
frstor
fsts
scas
xchg
inc
imul
out
fdiv
shr
stos
insl
inc
in
mov
stos
iret
addr16
xchg
jbe
and
outsb
leave
xor
sbb
fistpll
inc
mov
inc
loop
adc
andb
inc
pop
icebp
add
in
push
inc
and
adc
mov
fidivl
test
jle
xchg
aas
test
movl
mov
aam
inc
pop
repz
xchg
stc
sbb
out
adc
arpl
jle
adc
cmp
jae
adc
int3
pop
imul
cmpl
jp
fdivrl
fsubrl
sarl
sub
jo
cld
add
aas
cmp
popf
xchg
fisubs
aam
cld
fldt
xchg
out
dec
in
mov
cs
cmpsl
push
xor
pop
push
sbb
inc
dec
and
ljmp
test
pop
aaa
mov
sti
fimuls
push
jae
xchg
ss
xchg
shlb
movsb
dec
push
sub
gs
adc
xchg
pop
and
stos
je
push
xchg
cmp
lcall
int
mov
or
cmp
mov
xchg
dec
add
xchg
jp
pop
loope
lcall
dec
push
call
outsb
daa
notb
pushf
push
cmp
fisubs
push
sub
xor
sti
sub
aaa
mov
test
pop
add
inc
and
or
out
dec
or
pop
sbb
or
push
jmp
shlb
mov
aaa
shl
adc
dec
mov
sbb
jb
jne
std
pop
daa
inc
mov
fwait
mov
fsubl
xchg
xchg
ss
mov
mov
out
ja
dec
pop
jns
test
dec
mov
mov
or
cwtl
xchg
call
fcmovne
cmp
adc
inc
fneni(8087
inc
mov
jne
dec
cmp
adc
and
out
add
jbe
subl
test
mov
imul
jecxz
mov
pushl
addr16
iret
gs
mov
jp
daa
cmp
or
adc
in
mov
sti
xchg
add
imul
and
bound
fmul
leave
loope
mov
insb
sbb
sub
out
jl
loopne
lea
aaa
add
mov
inc
aam
into
mov
sbb
lods
sbb
mov
aad
rolb
push
jmp
push
aam
subl
fisubl
xor
cmpsb
rcrl
mov
cmc
xchg
loop
inc
adc
lcall
test
cmpsl
jne
lcall
out
jne
lcall
pop
std
or
clc
sbb
das
xchg
inc
in
mov
lret
cltd
ja
sahf
arpl
hlt
push
or
sub
dec
pop
rcrb
std
and
into
jg
adc
push
or
shlb
lock
or
xchg
divl
mov
or
push
dec
fstps
jns
arpl
testl
inc
jg
mov
imul
or
shlb
rolb
ficompl
push
and
add
scas
or
or
popf
ja
ret
in
dec
hlt
pop
add
into
test
es
push
repnz
and
cmpsl
lods
lea
btr
xorb
sbb
sub
adc
and
jle
jmp
lcall
movsb
pop
mov
inc
lea
or
inc
push
sub
or
mov
cmp
arpl
pop
push
ja
jno
add
inc
xor
cmp
mov
or
int3
cmp
inc
mov
out
dec
jno
pop
jmp
jbe
fisttpll
xchg
in
sahf
xor
imul
push
sbbb
sbb
or
daa
mov
sbb
fdivrs
and
lret
lods
les
cmc
mov
mov
jecxz
mov
int
arpl
and
dec
js
sti
int3
ret
cmc
mov
push
jp
cmp
add
inc
ss
inc
ljmp
xchg
fstps
clc
add
jb
in
push
out
scas
jo
in
sub
push
ljmp
insl
dec
inc
mov
add
push
cmp
xor
xor
pop
aaa
inc
outsb
xchg
ret
xchg
or
fiaddl
sbb
or
lret
inc
cmp
adc
test
or
aad
cmp
mov
gs
adc
ja
das
dec
movsb
outsb
sub
or
je
pop
dec
jg
mov
inc
inc
out
int3
les
fidivl
test
pop
loope
mov
xchg
rcrl
xlat
addr16
push
in
sub
lcall
js
icebp
aad
in
in
nop
add
arpl
xor
dec
mov
mov
mov
dec
fildl
into
cld
push
out
jecxz
adc
mov
dec
mov
mov
jge
inc
int3
in
xchg
neg
popf
frstor
into
lock
adc
push
mul
shr
mov
pop
into
push
nop
test
loope
cld
xchg
leave
testl
roll
idivl
mov
mov
movsl
dec
orb
fcmove
inc
notb
dec
inc
push
mov
outsb
std
push
xor
sbbl
sbb
xlat
out
or
es
jecxz
mov
sbb
pop
aad
insb
fnsave
add
jl,pt
popf
scas
fisttps
cmp
dec
fs
jecxz
call
js
lods
pop
dec
movsl
push
cmp
imul
enter
sbb
sarb
js
imul
sub
inc
push
jg
imul
ss
fcomps
sub
dec
aam
xor
mov
mov
push
push
push
hlt
imul
sti
jle
daa
dec
lret
popa
adc
dec
sbb
pushf
mov
xchg
dec
dec
ror
sahf
repz
dec
out
cmp
jl
xchg
aaa
fbstp
adc
mov
mov
loop
shll
pusha
imul
mov
add
push
repz
and
pop
sbb
cmp
sub
inc
adc
cs
pop
pop
push
xor
sbb
add
movl
fadds
jns
in
insl
push
and
adc
adc
adc
or
mov
mov
mov
stc
adc
pop
cmp
in
int3
xor
aas
xchg
popf
repz
mov
dec
pop
adc
imull
out
das
sub
cmc
fs
mov
sbb
frstor
loop
pop
or
add
and
mov
mov
mov
inc
mov
mov
pusha
pop
out
mov
jecxz
cmp
dec
into
stc
inc
popa
in
sub
loope
fistps
inc
ret
push
adc
loopne
lods
inc
arpl
lahf
pop
add
pop
and
je
repnz
out
int3
pop
lock
sbb
sbb
outsl
xchg
sbb
push
clc
inc
aad
sbb
xchg
jae
pusha
int3
out
mov
loopne
outsb
sbb
les
cmp
mov
cmp
pusha
sub
xor
test
inc
or
mov
scas
les
js
ss
and
pop
mov
dec
adc
inc
pop
les
mov
pop
arpl
add
fisttpl
and
mov
ror
stos
cmp
add
mov
cs
das
mov
dec
imul
out
dec
fdivs
xchg
nop
pop
and
fsubrl
or
xchg
or
mov
jp
mov
outsl
into
mov
out
cmp
int
dec
rol
mov
cli
dec
pop
dec
fwait
test
dec
add
pop
xchg
adc
jae
sbb
iret
iret
adc
dec
xlat
jmp
test
pop
mov
jl
ds
dec
ds
jmp
js
push
mov
or
push
cltd
pusha
out
lods
xchg
out
dec
int3
inc
ljmp
mov
mov
mov
arpl
push
cmp
ljmp
push
mov
dec
ficoms
cmp
xchg
jg
inc
xor
std
pop
call
lcall
dec
sub
push
push
mov
lods
push
faddl
int3
lcall
fiadds
dec
sbb
mov
pop
mov
inc
popf
mov
out
cs
jbe
pop
or
dec
icebp
iret
mov
insl
test
mov
call
mov
or
mov
mov
xor
fcompl
pusha
icebp
xor
cmp
add
sti
dec
inc
xchg
aad
sbb
idiv
mov
out
les
dec
movsb
mov
loope
push
cmp
cld
mov
test
xchg
jge
dec
dec
push
pop
mov
adcl
sbb
mov
shr
dec
jne
and
push
xchg
and
mov
in
jnp
icebp
ret
pop
inc
push
addl
cli
inc
mov
imul
mov
xor
mov
inc
push
add
or
dec
xor
arpl
in
inc
adc
sbb
jmp
adc
rol
pop
mov
stos
ja
or
arpl
add
pop
dec
push
js
push
loope
pop
mov
xchg
mov
in
rolb
xchg
sarb
cmp
shrl
mov
cmp
cwtl
sub
mov
jnp
sbb
push
xorb
sti
bound
mov
sub
push
ficoms
enter
movsb
std
dec
and
in
or
add
xor
out
jl
xchg
les
cmp
repnz
pushf
mov
je
repnz
nop
fninit
cli
out
testb
and
sbb
lea
nop
test
adcl
sbb
call
hlt
clc
jg
cli
sbb
pop
sub
outsl
add
lds
xor
jbe
repnz
mov
inc
push
scas
mov
mov
xchg
push
lret
jmp
lods
inc
pushf
sysenter
cltd
jle
loop
push
out
and
mov
and
movsb
mov
adc
pop
cs
push
xchg
and
xor
aaa
cli
mov
inc
dec
pop
pop
push
pop
dec
push
sbb
pop
xor
jp
jp
mov
xchg
insl
jmp
out
push
add
cli
inc
lods
push
ret
xchg
inc
mov
add
dec
hlt
or
neg
sub
fimuls
and
outsb
roll
movsl
mov
and
adc
mov
out
negl
add
dec
adc
sub
mov
jecxz
dec
sbb
enter
movsb
xchg
and
arpl
testb
stos
or
dec
xchg
mov
mov
es
rclb
mov
mov
stos
mov
pop
mov
aad
ja
push
inc
movsl
faddp
mov
jnp
test
sub
add
jno
bound
arpl
dec
push
push
popf
and
sti
ret
jnp
movsb
dec
sti
dec
mov
mov
add
push
or
mov
or
mov
and
push
pop
movsl
shlb
fdivr
bound
push
fdivrp
inc
and
fisttpll
dec
repnz
or
leave
sub
xchg
cmp
sub
mov
pop
pop
dec
and
je
lock
jg
sbb
push
sub
mov
imul
call
je
je
pop
outsb
insl
inc
and
out
std
test
cmp
subb
enter
push
mov
sub
or
xlat
insl
mov
xchg
inc
subb
inc
sub
mov
cmp
or
add
ss
or
adc
js
and
ds
lods
xorl
pop
sbb
jmp
out
ds
popf
push
scas
cmp
jecxz
adcb
fnstsw
out
gs
inc
out
sbb
fcompl
imul
enter
jmp
push
sbb
outsb
lock
fcmovb
jae
lcall
mov
sahf
lock
ljmp
inc
cmpl
xchg
mov
addr16
stos
sub
and
jns
mov
jo
dec
push
and
movsb
cmpsb
jge
call
jo
fnstenv
je
cld
imul
int
jecxz
int
out
mov
inc
sbb
mov
aad
pop
ljmp
push
pop
push
jp
jbe
or
int
test
test
xchg
jp
lret
notl
sbb
outsb
lods
fidivl
stos
movsl
lods
dec
or
imul
xchg
aam
inc
out
cltd
and
cmp
shrl
ss
leave
add
movsl
loopne
pushl
push
pop
cmp
cmpsl
and
pop
xchg
dec
pop
push
sahf
mov
mov
out
imul
mov
or
inc
idiv
shr
cmc
push
pop
ret
sbb
cmpsb
mov
add
insb
std
jge
stos
jbe
lret
out
je
and
push
jo
sub
xchg
push
fld
orl
fldz
data16
pop
movsb
test
cmc
inc
les
lods
xor
dec
enter
imul
insl
or
inc
or
cmp
jae
inc
dec
jbe
adc
fstl
or
mov
or
fdivr
add
inc
xor
push
aaa
mov
pop
shl
ds
cld
add
lds
jbe
xlat
xchg
fdivrl
imul
xor
test
pop
mov
sahf
sbb
mov
xchg
dec
inc
dec
icebp
lods
inc
pop
add
je
mov
in
jno
pop
push
andl
mov
push
pop
mov
jl
cs
add
test
pop
push
cmp
and
sbb
pop
jo
xchg
pusha
pop
mov
testl
xlat
fldcw
stos
inc
mov
mov
imul
repz
xchg
add
lods
loopne
shrb
dec
in
test
add
push
movsl
aam
cmp
push
dec
out
fs
cmp
push
test
lahf
cmpsl
test
loop
shl
insl
sbb
test
cs
mov
nop
pop
pop
testl
test
adcb
pop
mov
mov
sbb
stos
cmp
mov
in
jbe
mov
outsb
mov
stos
inc
push
cltd
imul
pop
dec
cld
add
sbbl
inc
cs
jo
insl
sbb
pop
mov
xor
add
push
sub
mov
test
pop
sti
cmp
inc
push
lods
clc
add
adc
out
dec
inc
xlat
ret
rcl
add
scas
xchg
jle
bound
push
pusha
inc
mov
js
dec
frstor
add
leave
dec
push
sahf
bound
mov
fisubs
in
xor
pop
ret
mov
inc
jb
xchg
ds
or
or
xchg
mov
adc
sub
test
fwait
pop
lret
outsb
cltd
mov
loopne
sbb
pusha
in
cmp
outsb
xchg
repz
lods
mov
push
pop
repz
sbb
or
mov
inc
mov
xchg
and
lret
jae
iret
mov
addr16
aas
xchg
loop
dec
ret
jge
cmp
shlb
dec
leave
cmp
jnp
orb
cli
popf
xor
sub
sub
add
loop
mov
add
out
mov
in
dec
sub
mov
sub
out
popa
ret
loop
addb
fldl
dec
cmp
int
jecxz
xchg
dec
scas
mov
push
loopne,pn
ret
js
lea
mov
cld
cmc
xor
xchg
inc
das
orl
ret
cmp
ds
inc
mov
imul
and
int
and
lret
or
ret
shrb
test
testl
push
jns
fsubr
iret
dec
scas
jae
out
jnp
add
push
and
sbb
fisubrs
insl
test
ret
leave
mov
add
add
push
js
int3
sbb
cmp
in
xchg
sub
mov
lret
pmaddwd
mov
adc
inc
adc
fdivrs
ret
mov
data16
cltd
xor
and
and
cltd
push
popa
iret
mov
incl
daa
or
mov
mov
and
fstpl
xor
push
add
xor
lea
mov
jmp
mov
arpl
pop
adc
stc
cs
mov
jp
cmp
xor
xchg
xor
xchg
ret
and
ljmp
fcmovnu
test
cmpsb
test
mov
pusha
mov
rorl
xchg
lds
fstps
mov
ja
mov
xorl
and
cmpsb
data16
mov
inc
ret
sub
push
mov
shr
inc
ljmp
mov
add
cmpsb
pop
inc
sbb
sub
mov
mov
fdivp
pop
and
repnz
fidivl
adc
fnstcw
jno
movsl
dec
loop
mov
mov
movsb
adc
scas
incb
ret
movsl
lcall
out
and
push
and
xchg
nop
in
mov
and
dec
or
adc
dec
inc
pushf
cli
je
arpl
sbb
sbb
mov
sub
cmpsl
dec
xadd
out
pop
btr
xorb
adcb
mov
icebp
ror
sti
or
test
stos
roll
sub
dec
xor
or
inc
rorb
add
mov
dec
inc
sbb
call
inc
dec
call
add
mov
fs
adc
adc
imul
movd
sbb
pusha
mov
pop
cltd
fdivr
xor
stos
iret
aaa
faddl
add
inc
push
xor
cltd
mov
aam
repnz
mov
push
jns
or
push
popa
push
mov
in
inc
out
call
mov
xor
inc
flds
test
mov
and
mov
or
mov
jne
hlt
enter
sarl
adc
mov
add
dec
stos
pushf
out
and
sbbl
fwait
and
fstpl
add
dec
loopne
push
dec
xchg
imul
mov
fists
sub
push
jno
mov
insl
cmp
add
insb
jne
fadd
jmp
push
jmp
cmp
negl
xor
push
xor
xor
sti
cmp
cmpsl
rep
cmp
out
sub
cmp
fcomps
sbb
scas
jns
das
push
pop
test
mov
aad
rcrb
adc
loope
cmp
mov
xor
jge
fsubrs
fstpt
push
jge
dec
test
add
push
adc
insl
xor
out
sub
loope
loopne
adc
les
shl
scas
sub
jae
fs
inc
loope
arpl
push
mov
push
pop
nop
or
mov
enter
ja
stos
dec
test
ret
jno
aad
insl
shrl
push
les
sub
mov
sub
mov
pop
fcmove
test
dec
mov
and
loope
xorl
shll
in
mov
roll
andb
mov
pushl
push
pop
push
mov
outsl
fcom
mov
call
hlt
ja
dec
jge
popf
and
test
xchg
sub
fisubrl
fdivs
into
loop
jl
push
add
mov
xchg
jl
xchg
mov
inc
aas
repz
add
sbb
xlat
adcl
xor
gs
jp
xor
xor
lods
mov
or
pop
mov
scas
dec
sub
mov
and
mov
fwait
inc
xchg
adc
jo
mov
imul
pop
jge
pop
aas
mov
sbb
inc
mov
test
lahf
popf
out
add
and
xor
std
push
xor
mov
test
icebp
negl
push
std
push
xor
mov
sbb
cli
pop
push
xor
add
decb
inc
inc
lock
inc
hlt
push
outsl
add
dec
fstpl
addr16
jne
add
loop
lods
sbb
pop
shll
test
push
xor
es
add
add
pop
cmp
je
stos
mov
std
mov
mov
dec
std
insb
mov
or
jne
xchg
cld
cmpsb
xor
and
test
mov
or
bound
sub
add
js
sub
popf
xchg
lods
sub
jo,pt
lods
fidivs
mov
xorb
movsb
xlat
xor
dec
mov
sahf
scas
or
in
push
jg
pusha
loopne
push
push
sub
jbe
out
pop
test
jo
push
mov
xchg
mov
xchg
push
pop
jl
shlb
push
mov
mov
ljmp
call
cli
rclb
stc
clc
sbb
mov
xor
nopl
sub
cli
push
cld
out
scas
repnz
and
into
sbb
sbb
shl
test
push
cmpsb
pushf
push
call
push
adc
push
dec
dec
adc
loopne
adc
mov
adc
movsl
les
jp
or
js
cmpl
cmp
inc
cmpsb
cmovno
mov
out
loopne
sub
xor
pop
es
lea
loopne
subl
shll
inc
icebp
pop
out
jmp
addr16
add
inc
or
popl
mov
jo
or
ljmp
pop
outsl
test
or
sbb
lods
jle
mov
clc
mov
inc
xchg
add
out
cmp
adc
push
push
clc
enter
pop
nop
mov
mov
arpl
imul
lock
push
cmp
mov
ljmp
lods
and
xchg
add
sti
dec
pushfw
or
dec
sub
in
scas
fstl
aam
jg
idivl
jp
inc
test
adc
jle
mov
sub
and
sbb
ret
call
inc
sbb
xor
mov
mov
xchg
cmp
pop
xor
mov
fsubrl
sbb
mov
adc
lods
nop
int
inc
mov
aam
dec
push
fcompl
lret
mov
in
inc
sbb
jl
and
aas
dec
sbb
fidivrs
insb
sub
fsubr
xor
roll
lret
sub
jmp
addr16
out
or
pop
cmc
scas
inc
insb
adcl
out
sbb
jns
outsl
jecxz
addr16
and
push
lds
iret
in
inc
mov
loope
dec
xchg
repz
call
stos
and
jg
in
xor
or
scas
jae
xchg
out
xor
js
cmp
add
cltd
mov
dec
les
loopne
pop
test
hlt
addr16
dec
stc
std
add
cmp
sbb
sbbl
cmp
xor
lret
test
js
aas
sub
xchg
or
mov
mov
icebp
out
pop
mov
dec
push
xor
scas
ret
lock
int
push
dec
mov
inc
mov
fldl
lds
and
out
xor
aaa
xor
mov
or
lods
cmc
cmp
cmpsb
and
mov
mov
push
push
dec
and
ja
cs
pop
mov
loope
lods
sub
jmp
push
jns
test
cmp
inc
ja
into
nop
or
jno
stos
adc
cmc
sbb
rcrb
pop
or
fsubrs
cmpsl
je
nop
pop
jnp
mov
out
aad
je
das
jle
into
xchg
cmp
daa
cmp
pop
push
adc
out
or
iret
aas
ljmp
pop
iret
add
mov
jle
in
test
xchg
std
mov
push
jbe
push
in
xchg
jle
roll
sbb
mov
jl
testb
mov
insb
jno
add
xchg
sahf
sbbb
jo
or
sbb
dec
push
out
push
mov
pop
and
mov
js
sti
inc
inc
movsl
rcrl
pop
repz
fisttps
dec
lahf
jae
mov
repz
popa
cmc
nop
fwait
jb
ljmp
mov
test
jmp
sub
xor
add
ja
lods
bound
add
or
xchg
jge
push
lods
cmp
jbe
ss
xor
or
imul
bound
jge
in
or
xor
leave
ret
jnp
popa
subl
imul
mov
or
ror
cli
mov
sub
xchg
ss
or
int3
xchg
pop
test
or
mov
gs
xchg
mov
sub
sub
arpl
inc
repnz
push
fbld
and
mov
mov
xchg
ds
imul
sbb
das
add
mov
jo
xchg
cmc
in
sbb
in
sti
push
xor
daa
ret
or
mov
lret
insb
mov
pop
std
xchg
icebp
popa
mov
jmp
in
shlb
xchg
test
pushl
adcl
stos
xchg
jmp
xchg
cltd
cli
mov
sbb
sbb
pop
inc
or
imul
addr16
rcrb
push
mov
cmp
lods
and
inc
lods
or
insb
adc
daa
inc
es
jl
fstpt
cwtl
mov
shrb
cmp
in
xchg
out
inc
ds
push
jecxz
add
dec
push
in
and
fsubrp
insb
jg
movsb
cmp
dec
push
cmp
adc
push
xchg
das
cmp
pop
push
out
fcom
mov
pop
jbe
adc
es
mov
stos
mov
and
push
stc
gs
jne
lods
popf
dec
mov
inc
incl
movsb
cmp
lods
mov
std
pop
lods
aas
mov
js
mov
int3
movsb
lock
inc
filds
sbb
mov
jl
push
sbb
mov
lahf
shlb
jle
pop
jae
call
jnp
test
ja
jnp
cld
into
xor
movsb
adcl
sub
inc
mov
stos
inc
jbe
aas
inc
into
mov
pop
jnp
sbb
add
push
push
popf
xchg
lret
jmp
xchg
and
mov
sysexit
xor
stc
xchg
mov
imul
jns
add
xor
jns
xchg
imul
dec
testb
mov
and
inc
dec
xchg
call
in
and
jno
jbe
stc
cmp
movsb
mov
inc
and
pop
cmp
jb
cmp
mov
pandn
mov
outsl
rcrl
xor
mov
xchg
imul
mov
lret
mov
loopne
inc
push
es
fdivrs
mov
test
pop
sbb
push
adc
scas
mov
arpl
ljmp
push
shlb
inc
inc
rcrl
xor
jmp
loopne
add
mov
mov
shlb
jp
daa
pop
pop
jecxz
cmpsl
test
stos
scas
jp
dec
int
insb
or
mov
mov
pop
mov
lret
adc
xchg
xchg
or
lret
xchg
and
jle
addr16
dec
xor
mov
add
test
mov
xchg
aam
mov
insl
adc
fdivrl
sub
xchg
fdivrl
mov
daa
dec
orl
into
test
xchg
xor
aad
pushf
fwait
xor
scas
fsub
mov
cmove
pop
adc
ljmp
push
aad
or
jg
xchg
leave
ljmp
ljmp
fwait
jl
cmp
leave
dec
adc
xor
call
pushf
inc
in
lcall
xor
push
fcmove
mov
lock
push
push
and
rcr
pop
mov
jns
stc
sbb
sbb
mov
xor
adc
mov
mov
test
jno
fs
xchg
sub
insb
push
push
sbb
jae
ret
adc
imul
or
das
jge
aad
stos
push
push
cmp
in
in
ret
stc
jecxz
jns
xchg
mov
cmp
add
xchg
and
fsubl
jge
or
adc
push
gs
cltd
or
call
add
rorb
stos
insl
jecxz
out
movsl
mov
mov
ja
es
xor
xchg
icebp
mov
shl
inc
test
into
fs
mov
int
fsts
les
sbb
xlat
inc
lods
lock
pop
jbe
push
adc
rol
sub
mov
cmp
mov
pop
sbbl
push
push
adc
rcr
fwait
loop
ficoms
sub
inc
icebp
xor
addb
sti
and
sti
incl
and
mov
ljmp
and
pusha
adc
cmp
xor
stc
add
pop
mov
loop
out
mov
dec
stos
add
js
xlat
mov
inc
popa
lods
push
sub
jmp
xchg
jp
aam
add
aad
inc
and
mov
movsb
mov
jo
outsb
dec
jns
js,pt
daa
inc
xor
ljmp
subb
scas
clc
xchg
add
xor
jp
pop
insb
xor
push
mov
cli
mov
or
pop
mov
jle
jne
daa
cmp
sahf
inc
repnz
scas
test
ljmp
test
add
cmp
pop
xchg
xchg
lock
cli
insl
cmp
mov
inc
test
inc
ffreep
fs
ret
xchg
fcmovbe
mov
adc
jne
repnz
push
test
xor
inc
push
lds
insb
or
add
jb
push
fstpl
and
cwtl
sub
mov
cmp
aam
adc
or
jg
sbbb
sbb
outsb
push
outsb
and
mov
mov
fwait
mov
mov
cld
enter
or
repnz
ljmp
rclb
outsl
cmp
pop
inc
dec
imul
dec
repnz
imul
mov
icebp
fisubrl
fnstsw
and
xor
loop
push
and
imul
cwtl
loopne
mov
cmp
dec
sahf
in
inc
jl
and
rolb
iret
jp
cld
jnp
repz
jno
mov
jle
test
out
mulb
and
xchg
sub
add
cmp
ret
mov
sbb
bound
add
push
dec
push
test
scas
xchg
notl
push
push
fisubrs
lea
outsl
jns
inc
repz
xchg
stos
xchg
scas
sbb
mov
xlat
mov
inc
add
jno
push
or
mov
add
insb
mull
add
mov
outsb
adc
and
dec
lcall
dec
jbe
fistl
push
shrb
cmp
xchg
sub
sub
in
add
out
rorl
icebp
lods
inc
fidivrl
lret
ret
cmp
sbb
mov
faddl
jp,pn
push
incb
push
add
xchg
or
enter
dec
pop
out
jb
xor
rcrb
leave
xor
test
cwtl
icebp
fsubl
mov
scas
xchg
dec
je
dec
lea
enter
xlat
xor
or
sub
cmp
mov
sub
push
aad
mov
divb
xchg
test
ret
out
sar
or
mov
in
insl
outsb
imul
popa
mov
jae,pn
mov
movsl
cmc
cmp
cmpsb
js
imul
es
sub
inc
mov
push
lock
mov
mov
in
test
xor
dec
repz
testl
jp
loope
push
lahf
int
imul
js
or
or
shll
jmp
and
xchg
ret
ret
and
fldl
leave
into
rcrb
jp
push
and
dec
inc
mov
jo
fwait
clc
inc
cmp
cmc
mov
add
cwtl
fsubp
pop
add
scas
adc
pop
pop
push
das
ja
fwait
icebp
cmp
mov
mulb
cmpb
fbstp
sahf
std
movsl
loope
sbb
dec
mov
ljmp
loop
and
cmpsb
push
inc
lods
stos
and
test
outsl
xchg
push
aas
mov
sarb
inc
xchg
repz
push
daa
mov
rcr
ret
lods
adc
ret
into
cmp
mov
int
jns
pushw
xor
mov
out
xor
add
stc
mov
mov
stos
xchg
arpl
cs
add
jl
mov
push
adc
lods
xlat
inc
xor
in
inc
xor
cmp
inc
pop
and
or
add
stos
jle
xlat
xor
loop
fisttps
iret
cmpsl
and
stos
xlat
push
inc
andb
xchg
jge
jge
stos
loope
inc
jl
xor
mov
pusha
cwtl
arpl
xor
cmp
movsb
cmp
cld
cli
or
and
mov
xchg
sbb
sbb
mov
xchg
fwait
xchg
mov
imul
jno
mov
std
aam
repz
rcrb
xor
push
lds
dec
jg
pushf
xchg
repz
ret
daa
adc
xlat
stc
mov
pop
scas
xchg
icebp
push
push
and
scas
jecxz
mov
jp
test
sub
xor
sub
bound
fistps
in
ret
jbe,pt
inc
fsubrp
add
jl
ss
jge
xchg
or
outsb
cwtl
cs
inc
aam
xor
mov
lods
adc
sbb
sahf
inc
jne
fildl
je
faddl
nop
dec
loopne
jge
push
mov
inc
add
xor
js
test
add
in
sbb
xchg
or
in
dec
xor
push
mov
mov
sub
push
xor
iret
sub
std
gs
stos
or
lods
ret
mov
cmp
xchg
dec
adcl
jb
dec
cmp
rclb
decl
mov
fs
lea
sub
jle
mov
clc
mov
out
in
xchg
push
jns
aas
mov
clc
xchg
pop
sarb
sti
shl
fldcw
jl
sub
pop
adc
mov
sub
sbb
lcall
sarl
pop
add
outsb
jbe
fidivl
sub
testl
lcall
hlt
dec
push
mov
pop
aas
shll
into
aas
jbe
aad
lea
adc
out
sub
fwait
in
movsb
mov
jmp
mov
call
subl
in
push
sub
test
ss
in
sbb
fs
ja
mov
pop
or
shll
jb
dec
inc
xor
dec
and
xchg
jo
rcrb
icebp
push
cmpsb
or
mov
popa
stc
mov
ret
mov
pop
add
mov
test
enter
pop
ds
in
lea
lahf
push
repz
sbb
cwtl
loopne
scas
leave
push
push
and
inc
daa
in
adc
lods
push
cwtl
inc
jmp
je
test
jae
subl
cmpb
fmull
jg
sbb
fsts
dec
and
xchg
and
mov
xchg
and
pop
pop
sub
push
xor
aad
movsl
roll
dec
jo
scas
lods
dec
dec
jmp
leave
sbb
jle
push
imull
cmp
sub
push
inc
jl
int3
or
in
fistpll
sbb
cmp
shll
sub
and
sti
mov
xor
shrb
pop
in
cmc
outsb
out
xchg
mov
jmp
in
ret
lock
jnp
dec
sar
outsb
ja
cmc
cmp
scas
std
cwtl
sub
pop
testl
xchg
cmp
pop
adc
mov
mov
out
mov
imul
js
out
xor
mov
push
push
and
mov
shl
je
adc
xor
sbb
icebp
pushf
jle
arpl
paddq
adc
std
in
or
gs
cmp
pop
ret
cmp
out
sbb
mov
insl
xchg
push
int
test
inc
push
cli
and
inc
in
or
jg
imul
loope
hlt
xchg
mov
inc
push
sbb
fildl
cmp
testb
nop
ret
shlb
inc
mov
xchg
jns
cmp
mov
adc
fs
fists
sahf
jl
cmp
js
xor
lds
fildl
repz
cmpsb
shlb
ss
pop
cmp
push
push
pop
inc
mov
out
and
or
mov
iret
aas
lods
test
inc
cld
loop
or
pop
cmp
mov
push
enter
int3
sub
test
mov
arpl
test
test
rorl
mov
cmc
xor
pop
rolb
into
outsb
or
cwtl
jge
inc
adc
xchg
mov
sbb
jl
es
lock
cmp
xchg
ljmp
loope
es
xchg
imul
sbb
adc
inc
jns
lahf
or
or
jns
sbb
aaa
fldt
add
sahf
insb
mov
sbb
lret
insl
arpl
clc
adc
fbld
cmp
fsub
add
push
mov
popa
sbb
stos
xor
arpl
icebp
bound
and
jmp
popf
hlt
xchg
ds
mov
pop
mov
repz
ds
out
mov
inc
nop
sbb
cmpsb
cli
xchg
sti
fstpt
fmuls
push
in
mov
jns
mov
jp
cmc
xchg
cltd
rorb
jmp
mov
das
shll
cmc
adc
pop
push
jecxz
pop
or
mov
pushf
and
lds
and
inc
mov
aaa
cmp
or
mov
cld
sub
jne
inc
test
hlt
cmp
mov
fimuls
xchg
scas
ffreep
ja
loopne
pop
adc
idivl
gs
cmp
cmp
inc
fidivrl
pop
ret
and
outsb
xor
mov
sbb
inc
orb
repnz
xlat
imul
gs
push
push
add
into
sbb
call
sti
clc
lock
fiaddl
mov
sub
mov
push
arpl
repnz
jb
sti
mov
or
jle
shrb
sbb
rorb
cmp
call
ret
sbb
cmp
cmp
mov
sbb
pop
popa
push
xlat
jge
fstpt
out
out
popa
lahf
mov
dec
dec
cmp
arpl
fsubs
test
test
rorb
cmp
pop
mov
xor
pushl
popf
movsl
xchg
outsl
adc
mov
sub
mov
dec
dec
jp
mov
in
dec
into
repnz
cmp
jns
and
and
pop
jmp
sbb
fsubs
pop
mov
stos
pop
js
cmpsl
adc
pushf
sub
jl
pop
lcall
cmpsl
mov
push
cli
inc
sarb
xchg
pop
dec
xor
ret
mov
test
push
dec
enter
or
mov
dec
push
push
ds
std
xor
pushf
repz
cmp
push
fsubrl
cmp
bound
pop
test
js
addr16
loopne
imul
cmpsl
inc
jmp
shrb
dec
nop
pop
fiaddl
jo
cli
repz
sbb
das
xchg
jnp
adcl
les
push
test
inc
adcl
xchg
call
adc
popa
add
xchg
ds
ret
or
clc
outsl
adc
scas
jnp
in
mov
daa
scas
lods
mov
hlt
sub
jecxz
dec
aaa
loope
outsb
int3
imul
pop
and
stc
insl
sub
shrl
sahf
or
mov
movsb
roll
lret
sub
lock
call
aam
popa
loope
rcr
sub
aas
xlat
mov
pop
cmp
aaa
adc
sbbb
lea
or
push
adc
jle
jo
jbe
xchg
cmp
stos
cmc
adc
ljmp
daa
in
in
xchg
jbe
mov
add
mov
adc
jmp
stos
jbe
test
pop
xchg
movsw
dec
imul
jno
jmp
sub
ret
insb
pop
mov
sti
iret
hlt
mov
add
or
mov
mov
mov
xorl
sti
test
lock
pop
movnti
js
xchg
lock
cmp
mov
ljmp
jecxz
cmp
inc
sarl
adc
mov
dec
clc
jg
dec
jbe
cmc
popf
rcr
out
push
lcall
dec
or
jmp
call
mov
pop
clc
lods
pop
push
xlat
sbb
or
cmp
xor
xchg
int
xchg
nop
jle
iret
mov
repnz
testb
push
test
mov
js
add
ret
enter
nop
out
out
sahf
jb
sub
cltd
mov
aam
pop
mov
dec
sub
lods
dec
push
dec
ret
lcall
jne
repz
sahf
or
dec
ds
ficoms
push
cs
movsl
sbb
cltd
stos
lahf
pop
pop
icebp
mov
rolb
mov
fildll
mov
les
lock
cmp
pop
and
push
xlat
xor
fadd
pusha
adc
xor
add
sbb
lea
std
jnp
sbb
clc
rorl
sub
lret
cmp
mov
mov
xor
sub
outsb
push
and
sub
fistps
xchg
andb
dec
cwtl
add
xchg
jb
sbb
int
cld
rorl
jecxz
movb
outsl
cmp
das
mov
or
mov
fidivrl
nop
jae
das
lea
repnz
dec
add
into
imul
pop
pusha
or
mov
push
shrb
adc
adc
aaa
bound
lock
imul
add
call
arpl
mov
mov
xchg
aam
loop
or
push
mov
sbb
mov
jb
cmp
clc
movsb
pop
arpl
into
std
int
cmp
mov
mov
sbb
and
jnp
repz
clc
addr16
push
bound
xchg
pop
sarl
inc
mov
xor
mov
mov
mov
inc
sub
adc
jbe
inc
mov
std
popa
sarl
cmp
lock
jbe
icebp
subb
ret
mov
or
add
cwtl
sbb
mov
cltd
mov
dec
lahf
scas
rcl
add
leave
jg
popf
pop
int
xchg
scas
jmp
sbb
inc
outsb
xor
test
or
xlat
shlb
bound
into
hlt
jp
push
cmp
cmpsl
inc
sahf
mov
loope
lods
aaa
lds
aaa
xor
imul
into
jmp
pop
cmp
fidivrl
in
pop
push
jge
in
adc
xor
pop
cld
add
pop
push
dec
dec
outsl
in
jo
pop
into
jmp
scas
in
cvtps2pi
imul
jge
lods
js
and
repz
decl
xor
adc
test
pop
fistpll
jns
sti
je
inc
clc
inc
out
pop
mov
xchg
mov
ds
repz
pop
or
ss
iret
push
je,pt
and
addb
shl
je
inc
adc
adc
aaa
or
insb
ds
sti
in
shr
jmp
mov
cmc
xor
or
popf
ds
jb
daa
movsb
mov
cld
sbb
pop
adc
aas
mov
adc
sub
and
fcomi
clc
or
jmp
arpl
push
sbb
popa
out
fsub
mov
push
mov
adc
add
inc
imul
scas
xor
int3
movsb
aam
sbb
stos
xchg
pop
mov
and
cmpsl
push
test
sub
mov
adc
dec
stos
daa
adc
sti
dec
out
dec
mov
in
mov
fiadds
mov
int
lea
dec
push
add
popa
ret
mov
out
rcrl
push
jp
jp
inc
addb
bound
push
shrb
and
mov
ret
push
mov
pop
sbb
pop
lock
dec
push
fdivrp
mov
dec
xchg
cli
ljmp
mov
stos
xchg
jecxz
mov
adc
xchg
lcall
aad
push
imul
mov
inc
lahf
das
lock
jbe
int3
addr16
nop
rorb
rol
mov
dec
and
push
clc
cmp
dec
jp
cmp
push
nop
pop
psubd
stc
mov
fsub
flds
cmpsb
or
pop
out
xchg
jge
cmp
shrb
hlt
les
xor
adc
xchg
push
push
xor
xor
stc
test
lahf
mov
xor
or
les
out
mov
xchg
push
xchg
add
dec
cmp
cmpsl
scas
aaa
sti
inc
lds
dec
in
inc
jmp
or
imul
sbb
or
push
aaa
mov
pushl
notl
xor
lea
pop
ficomps
pusha
lcall
cmpsl
adc
bound
mov
push
test
pop
es
add
stos
mov
mov
pushl
and
inc
clc
sub
fneni(8087
pop
lret
or
jmp
jo
je
lret
orl
in
mov
adc
and
xor
add
jp
fnstsw
shr
mov
fldl
idiv
enter
mov
xchg
insb
shr
stos
out
lods
lret
push
js
xchg
sub
loopne
jmp
cs
cmp
ljmp
stc
adc
push
xor
scas
les
sbb
stos
cmp
cltd
jb
pop
in
es
cwtl
mov
sub
dec
rolb
mov
fyl2x
sbb
fisubs
xchg
pop
push
mov
mov
pop
pop
jb
inc
sbb
cwtl
mov
lods
add
dec
sub
or
mov
adc
xor
cmpsl
cmc
mov
and
dec
fistpl
mov
push
and
push
cld
sub
out
sub
call
sbb
lret
jae
mov
mov
cmp
popf
jle
ret
rclb
roll
mov
insl
jl
pop
idivl
movsb
sbb
je
dec
aaa
rclb
mov
xor
inc
sub
or
mov
xchg
es
popa
fwait
pop
test
out
mov
ret
or
mov
or
popa
test
inc
adc
test
mov
xchg
pop
push
lret
in
push
mov
push
hlt
shll
fstpt
adc
and
cmp
push
cmc
jp
jno
lahf
pop
pusha
add
enter
in
mov
stos
clc
cltd
in
push
mov
ss
xor
in
xchg
aaa
clc
and
divb
or
pop
outsl
stos
xchg
or
push
or
mov
mov
sub
cmc
popa
pop
xor
sbb
lods
adc
add
mov
adc
jecxz
ror
sbb
cmp
cmpsl
roll
dec
fsubp
daa
int3
sub
cmpsb
xchg
rcrl
mov
lock
pusha
mov
add
mov
vmovd
fbstp
mov
inc
repnz
jns
pop
shl
cmp
je
cmp
mov
jae
pop
rol
push
xchg
xchg
inc
bound
pop
or
stos
cmpsl
pop
mov
mov
adc
js
adc
aas
rclb
sub
pop
bound
gs
lods
outsl
insl
roll
stos
add
push
dec
mov
imul
push
pop
sub
shlb
sub
call
sub
stos
mov
push
mov
lcall
psrlq
fwait
sarb
cwtl
iret
pop
and
scas
push
jno
dec
shlb
mov
pushf
dec
testb
loope
and
movsl
sbb
push
jmp
mov
dec
rorb
jo
jge
je
out
adc
jae
mov
outsb
mov
ja
jmp
mov
subl
mov
es
push
lds
movsb
ret
mov
and
xchg
mov
fsubrs
sahf
stc
movsb
imul
jnp
inc
insb
sub
sbb
sti
adc
fdivrl
gs
out
jne
jbe
mov
inc
adc
adc
jae
daa
pop
rcrl
push
rclb
cli
fcmovbe
repnz
loope
ret
or
divps
out
mov
adc
jne
push
lods
cmpsl
repnz
shrl
ljmp
mov
mov
mov
imulb
sbb
jmp
outsb
mov
mov
jae
lret
clc
bsr
and
ds
sub
jo
cmpsl
push
icebp
and
sbb
mov
xchg
adc
pop
int
xor
in
or
push
sbb
xchg
mov
outsb
mov
push
dec
loopne
cmp
out
aaa
rorb
cmp
imul
cmp
adc
fs
xchg
pop
cmpl
and
jo
push
jno
push
dec
adc
xor
inc
data16
pop
stos
xchg
push
lea
adc
stos
xchg
jb
sub
push
std
andl
add
mov
pop
mov
sbb
dec
out
data16
pop
sbb
and
mov
in
lcall
lret
cmp
adc
sbb
pop
push
pop
mov
cmp
testl
add
inc
cmp
inc
leave
dec
leave
lock
fucomp
mov
arpl
or
inc
out
hlt
sahf
into
outsl
popa
mov
popa
adc
mov
add
out
mov
push
xor
push
pop
add
andl
aaa
push
mov
lock
sub
in
sbb
fcoms
adc
mov
sub
jmp
sbb
rcr
pop
pop
cwtl
pop
outsl
insb
js
xchg
clc
in
jbe
into
mov
mov
xor
loopne
arpl
pop
pop
fmul
dec
push
push
sub
in
pop
push
test
sub
push
pop
and
les
xchg
mov
push
push
gs
lods
rorb
sbb
xchg
push
mov
push
fistpll
inc
mov
imul
imul
or
rcrb
xchg
fxch
mov
xchg
mov
jnp
inc
pop
jns
clc
xchg
bound
adc
insb
insb
data16
sbb
sbb
vdivpd
sti
cld
mov
xchg
dec
les
iret
mov
in
cmpsb
data16
out
mulb
pop
mov
daa
into
sub
data16
loopne
enter
add
lods
dec
xor
add
repnz
daa
fnsave
out
pushw
cmp
push
fs
inc
mov
sbb
pop
sbb
jecxz
and
mov
sti
inc
jae
leave
lret
cmp
adc
jae
inc
jg
jle
movsb
cmp
arpl
idivb
mov
lds
mov
test
jle
pop
shlb
sbb
jg
mov
insl
mov
inc
sarl
fisubs
sbb
out
fiaddl
inc
jbe
add
subb
lds
js
test
sbb
inc
iret
icebp
push
xchg
in
jle
mov
sbb
push
add
lahf
inc
imulb
or
mov
int3
inc
cwtl
push
mov
call
addr16
scas
pop
jb
arpl
testl
adc
jmp
outsl
imul
popf
pop
sbb
nop
fildll
mov
add
dec
xchg
xlat
push
cmpsl
subb
cmp
daa
push
or
pand
xchg
cmp
jb
sbb
addr16
fstps
negl
mov
loopne
mov
icebp
mov
add
cmc
add
std
incb
push
fisubs
and
dec
in
in
lock
pop
cli
xchg
hlt
sahf
fistps
adc
out
cs
into
jle
rclb
xchg
cmp
cs
cmc
fstpl
mov
ja
int3
and
jecxz
jge
das
pop
ret
ss
popa
mov
cmp
add
push
cmp
fwait
addr16
std
fdivrp
xchg
loop
test
inc
sbb
scas
ficoms
add
shr
scas
push
cmp
jge
or
andl
and
lods
mov
adcl
call
mov
ret
cmp
adc
push
jmp
push
das
add
sbb
pop
cmp
fcompl
push
pop
or
push
out
adc
mov
mov
push
mov
mov
inc
add
clc
loop
pop
mov
loope
repz
insb
aam
mov
ja
dec
jl
pop
sarl
mov
fwait
in
ret
xchg
fcoms
inc
pop
test
sti
xchg
out
jbe
gs
lods
xor
aad
inc
lds
jns
jo
adc
lock
repz
mov
outsb
pop
test
test
add
xor
lods
fildll
pop
mov
push
xchg
mov
jae
pushf
hlt
or
and
pusha
mov
add
lea
nop
insl
push
and
dec
jl
and
lret
cmovae
and
fcmove
xor
rolb
jns
inc
fildll
pop
fidivs
das
cli
mov
push
test
add
movsl
and
stos
outsl
jno
les
or
push
jno
hlt
cmp
ds
vcvtsd2ss
xor
roll
cmp
aas
mov
mov
js
xor
push
js
jmp
dec
pop
sub
iret
ror
lret
jbe
add
inc
pop
jmp
pop
cmp
mov
add
sahf
cmp
movsl
sbb
call
rorb
enter
in
rclb
push
sahf
cwtl
test
jae
fnsave
cmp
popf
cwtl
mov
jbe
jecxz
mov
dec
test
lods
icebp
xchg
inc
mov
sti
mov
lahf
cli
mov
hlt
mov
sbb
xor
fwait
jnp
lock
jge
add
cmp
jns
inc
or
nop
cmp
inc
push
pop
jae
adc
pop
mov
js
or
inc
fsubrl
dec
mov
sbbb
jg
and
js
repnz
addr16
cmc
hlt
in
push
dec
sbbb
xchg
xor
fisubs
scas
outsl
scas
negl
shrl
lock
loope
jmp
xor
aad
sub
mov
adc
pop
mov
ljmp
aam
cmpl
inc
mov
lcall
popa
xor
cmp
or
adc
fs
cmp
in
sub
xchg
cmp
pusha
lods
popf
fadd
jg
aaa
mov
cmp
add
and
sbb
jl
cmc
into
lea
jl,pt
loop
mov
adc
ret
xor
fs
mov
and
call
push
inc
arpl
adc
pcmpeqb
mov
jp
es
aam
inc
sub
pop
inc
jae
daa
movsl
cmp
insb
insl
add
sti
or
xor
pop
jmp
jl
pop
cmp
rolb
pop
mov
int3
fisubs
adc
pop
popf
ja
xlat
jp
sub
xchg
pop
std
std
stos
mov
out
lods
je
push
pop
lcall
js
add
aas
pop
enter
das
roll
mov
in
cli
jns
adc
xor
fiadds
aas
dec
mov
pop
sbb
cmp
mov
mov
stos
push
jle
stos
in
adc
ds
enter
jno
pusha
ret
add
sub
movsl
cmc
dec
inc
or
mov
add
adcl
shlb
push
xchg
ret
and
dec
enter
and
jecxz
jbe
sub
dec
adc
mov
pop
aas
test
and
jns
and
mov
test
or
repz
mov
int
cs
aaa
lods
sub
sub
addr16
adc
mov
and
or
fcompl
js
sti
fnstsw
das
loopne
dec
ljmp
jg
fcmovu
lcall
mov
or
ss
test
mov
clc
add
popf
incb
pop
push
mov
mov
jnp
cmpsb
adc
out
mov
or
iret
fists
cld
sti
add
out
stos
adc
in
cli
sbb
lock
lret
loopne
push
addr16
lock
xchg
lods
test
ret
jo
call
xchg
nop
jnp
cmpsl
sub
push
inc
sahf
ja
sbb
cmp
dec
insl
xchg
lret
cltd
mov
mov
dec
les
add
in
dec
push
dec
pause
es
scas
jp
lea
int
inc
lea
fbstp
sub
fs
movsb
jl
xchg
daa
stos
lds
mov
xlat
push
pop
push
shll
in
fdivrs
stos
repnz
shlb
xchg
scas
mov
stc
sbb
push
dec
dec
mov
mov
mov
out
lods
add
xchg
movsl
fstl
xchg
or
insl
add
nop
pop
lcall
out
push
dec
and
stc
into
push
xchg
fcomps
mov
push
add
cli
icebp
or
jno
cld
fdivrs
mov
dec
int
scas
mov
dec
add
sbb
lret
fstps
stos
int3
mov
sub
ljmp
mov
and
mov
and
jge
or
aaa
sub
stc
adc
aas
loope
pop
into
cs
mov
adc
mov
js
lahf
jl
or
sbb
adc
push
out
mov
popf
sub
push
inc
pop
fadds
into
cmp
int3
or
and
xchg
aaa
and
push
xchg
sti
sysenter
xor
lret
push
pop
fbld
jne
call
or
pop
aad
mov
insb
cltd
cmp
shll
lea
iret
xor
mov
lcall
movsb
xor
xor
test
dec
popa
inc
test
in
lods
enter
xor
mov
mov
inc
lret
jg
lods
hlt
add
iret
stos
or
out
inc
dec
add
mov
cld
mov
data16
jnp
fwait
jb
jmp
lea
push
stos
sub
cli
call
imul
xorb
pop
lock
cmp
cmp
xchg
mov
outsb
not
push
cli
shlb
add
clc
into
sarb
pop
subl
loop
daa
xor
or
and
sub
xchg
adc
orl
fstp
jbe
inc
cmpsb
or
jl
mov
dec
xchg
arpl
or
ret
xor
fnstsw
cmp
jp
andl
outsl
rolb
sub
pop
inc
xchg
lea
iret
push
add
sbb
test
es
mov
outsl
aaa
pop
inc
adcl
fdivrl
pop
sub
xor
movsb
out
pop
mov
dec
mov
push
xor
nop
int3
pop
mov
incl
repnz
lea
push
or
cmp
xchg
sbb
pop
imul
jne
sbb
mov
movsb
push
bound
xor
jnp
cmp
jle
push
adc
jmp
jecxz
ja
and
sbb
fidivs
je
mov
test
clc
lds
or
dec
pop
xchg
fists
mov
mov
rol
and
inc
xlat
cltd
and
mov
mov
ror
loopne
nop
leave
dec
jmp
mov
mov
adc
daa
int
fildll
push
aaa
and
pop
cmp
cmp
inc
in
ds
add
int
test
mov
or
jl
sub
lcall
inc
adc
dec
pop
push
inc
xchg
in
lds
push
cmp
mov
mov
addr16
xor
add
inc
dec
adc
mov
pushf
inc
sbb
icebp
push
aad
pushf
cmpsb
test
hlt
inc
add
test
lods
cs
cwtl
or
add
mov
add
push
ljmp
mov
lcall
jp
mov
pop
inc
icebp
in
fldt
std
das
ret
movsb
jmp
sub
mov
xor
popf
fucomi
dec
imull
jp
inc
loope
mov
cmc
movsl
ja
xor
pslld
add
outsl
cmpsb
xchg
pop
movsl
cmp
sti
adc
lds
cmp
aas
inc
fistpll
push
je
out
mov
pop
adcb
jae
cmp
std
adc
sbb
mov
mov
push
rcrl
push
ficoml
mov
repnz
jmp
daa
loope
mov
shll
pop
divb
inc
dec
pop
dec
mov
xchg
std
mov
push
xchg
out
ret
lods
jge
xchg
lock
xchg
stos
xchg
movsl
pop
lcall
pop
jp
xchg
cs
jg
cmpl
add
xor
test
in
mov
jno
inc
push
fldln2
or
push
xorb
cmpsb
sub
mov
aas
pop
incl
cmp
sbb
imul
stos
nop
push
xor
or
jno
aad
sbb
pop
mov
mov
jno
call
stos
je
add
add
ret
repnz
lods
inc
pop
ja
in
scas
mov
adc
sti
xor
push
pop
jmp
rcl
jmp
add
scas
xchg
pop
cmc
stos
push
xchg
cmpsb
add
jmp
dec
mov
faddl
xor
pop
push
add
xor
outsb
lret
push
int
outsb
fnsave
add
rcrl
jne
sbb
in
sub
fildl
leave
inc
mov
inc
cmp
jmp
lds
fsubrl
xor
pop
sti
jp
lods
pop
lods
roll
rcll
repnz
sub
rcrl
mov
pusha
xor
jae
ret
out
xor
cld
mov
cwtl
jno
adc
jecxz
ret
push
orb
and
fildll
dec
ss
arpl
pop
notl
int3
push
push
js
ljmp
jnp
flds
sbb
es
xchg
mov
jmp
sub
cmp
jp
add
out
rorb
cmc
jmp
mov
xor
lret
or
leave
jmp
lock
inc
out
dec
sub
adc
xor
adc
add
ret
xor
dec
mull
loope
inc
pop
dec
dec
jne
inc
pop
xlat
add
stos
xchg
sarl
out
sub
int
ret
adc
bound
adc
sub
lds
push
cli
sub
mov
fisubrs
sbb
mov
xchg
mov
stc
js
sub
or
loope
xchg
xlat
jnp
dec
out
in
jg
loopne
mov
lock
cltd
add
xlat
dec
js
mov
mov
jg
xchg
inc
repz
inc
mov
call
dec
jns
push
push
mov
stos
mov
inc
jnp
jmp
and
aad
pushf
push
fbstp
sub
fmuls
inc
jo
cwtl
fstps
mov
jo
je
mov
pop
push
dec
lock
sbb
into
pop
popf
push
hlt
test
out
pusha
cmpsb
dec
xchg
frstor
lock
push
lret
cmpsl
add
cmp
ret
test
mov
stos
popa
imul
insl
stc
ja
jg
icebp
int3
cli
sub
pop
and
adc
cmpsl
sbb
adc
xchg
push
ds
loope
bound
lods
pop
bound
push
jnp
and
mull
addl
sahf
cmp
inc
adc
mov
mov
inc
out
sbb
mov
cmp
mov
and
bound
sarb
lret
adc
cmp
lock
fwait
test
xlat
cmpsb
mov
in
jno
cmp
xor
pushf
iret
push
adc
inc
xchg
pop
sahf
test
xchg
jl
orl
lods
int
dec
aam
mov
dec
test
clc
pop
lret
js
js
add
jnp
xchg
push
or
btr
sbb
and
fwait
sbb
enter
xor
jnp
sbb
mov
and
dec
mov
ds
mov
je
xchg
nop
dec
ficompl
fdiv
jno
test
fistpll
push
leave
imul
pop
shlw
inc
push
insb
je
loopne
push
lret
jne
mov
les
mov
pop
ret
xor
call
aam
add
lea
fcoml
dec
mov
hlt
aam
aam
mov
cmpsw
out
inc
jo
inc
dec
jge
jmp
je
adc
push
add
out
bound
cld
in
rorl
inc
mov
mov
and
fidivrl
xchg
cwtl
dec
pushf
test
or
xchg
popf
adc
mov
xor
repnz
mov
std
cwtl
mov
in
mov
xchg
sbb
xchg
test
or
ds
fwait
negb
aam
jbe
xor
daa
popa
mov
xor
adcl
add
xchg
mov
adc
cli
sub
sbb
xor
jae
in
mov
push
aaa
jo
jb
cmpsl
fistps
in
jb
orl
pushf
adc
xor
stos
or
cmp
mov
loope
in
ss
shrl
test
rclb
dec
sub
out
xor
es
sub
outsl
les
aam
xor
push
sbb
pushf
aad
add
out
sbb
pop
xchg
mov
mov
inc
ret
push
or
sub
int3
push
lcall
test
jle
mov
fisttps
cld
mov
repnz
idivb
aaa
pop
xchg
adc
nop
jo
cmp
sarl
or
sub
mov
hlt
push
inc
shll
mov
das
popa
mov
cwtl
push
hlt
divps
cmpsl
pushf
call
scas
dec
ret
into
fdivr
sbb
jp
jge
jno
and
stos
mov
sub
adc
divps
fwait
jb
xchg
lret
xchg
shrb
jl
mov
push
add
scas
ljmp
in
lret
mov
ljmp
mov
or
lret
mov
push
cmc
mov
out
in
addl
pop
xlat
movsl
decl
xor
pop
add
jo
fisttps
push
jge
push
mov
xlat
mov
xor
mov
lcall
or
cltd
sbb
lret
shl
stos
push
mov
mov
and
pop
orb
dec
and
push
cmp
pop
jge
push
shrl
es
jle
sbb
lcall
xor
push
rcl
xchg
stc
push
cmp
push
fs
in
daa
mov
xor
push
sub
insl
xlat
int3
xchg
add
mov
xlat
push
xor
and
fcmovu
cmp
or
fstpl
subb
sbb
cltd
add
hlt
imul
bound
sub
adc
sbb
pop
sub
sbbb
out
jnp
xchg
movsl
mov
xor
scas
es
gs
and
aaa
loop
push
jl
rcll
pop
testl
pop
mov
test
xor
cmp
out
cmpsb
iret
je
pushf
sbb
lea
add
test
daa
inc
mov
inc
lock
mov
icebp
mov
lahf
adc
pushf
sub
fcmovb
mov
jmp
js
cmpsl
mov
jb
pop
adc
or
inc
jnp
xchg
adc
gs
in
push
mov
pushf
push
lock
sub
mov
jns
call
sub
jae
mov
inc
clc
xor
adcl
and
dec
cmpsl
dec
inc
pop
and
or
jo
inc
mov
sbbl
add
add
out
inc
into
jb
add
inc
or
jb
adc
arpl
fistps
clc
add
in
daa
mov
add
pop
sub
mov
sub
xchg
jge
in
xlat
xlat
call
cwtl
dec
pusha
mov
and
adc
icebp
adc
cmp
in
add
imul
hlt
cs
rorb
jl
mov
movl
jp
test
rorl
push
fists
je
inc
mov
lods
inc
test
loopne
test
fsts
std
and
dec
xchg
hlt
jp
jns
push
jae
inc
int3
imul
loop
mov
sub
lret
into
shrb
push
jle
add
cmp
jge
lock
loopne
sbb
lahf
mov
xor
sub
aaa
mov
and
or
xor
xchg
std
repz
daa
and
fcmove
jle
inc
or
push
aas
lahf
mov
imul
xor
pop
or
inc
push
in
clc
lret
aam
mov
enter
sbb
mov
ss
negl
cmp
int3
push
or
xor
inc
mov
mov
ds
adc
or
xor
int
lock
and
loopne
add
lahf
popa
dec
mov
inc
fstpt
cli
xchg
out
add
push
dec
inc
imul
cs
cmpsb
jp
sahf
cmp
shl
jecxz
stos
add
mov
cwtl
jb
cmpl
insb
push
push
rol
or
into
out
movsl
sarb
out
push
lea
stos
cmp
sub
mov
enter
imul
xlat
or
jae
cwtl
xchg
dec
test
fnstsw
inc
cmp
test
mov
insl
sbb
jecxz
mov
hlt
int
mov
es
lods
or
fs
in
sbb
icebp
sbb
push
sub
jo
imul
movsb
jno
mov
sbb
sbb
mov
stos
insb
popa
out
mov
negb
js
mov
and
xlat
mov
xchg
jmp
jp
shlb
mov
mov
mov
mov
mov
adc
and
xchg
adc
sbb
add
outsl
iret
sbb
sti
data16
lods
dec
stos
aas
pop
push
mov
pop
xchg
cmpl
push
cmp
stc
jb
fidivrs
daa
xor
push
jbe
les
int
das
cmpb
rolb
or
stc
and
mov
pop
mov
push
ljmp
dec
push
lods
fsubrp
xchg
adc
stc
mov
loop
cmp
ret
clc
inc
pop
pop
stos
jmp
push
mov
fnsave
ja
mov
mov
xor
inc
mov
mov
mov
pop
mov
mov
pop
mov
aad
inc
shrl
or
lahf
sub
enter
fistl
jbe
push
pop
mov
push
push
iret
mov
mov
and
leave
sub
mov
xchg
pop
or
stos
push
andl
fs
cmp
or
popf
cld
pop
lcall
push
stos
pop
mov
inc
imul
jae
ljmp
jp
sarb
sub
jg
sbb
jge
sub
int3
and
xchg
pop
xchg
pusha
xchg
sub
dec
bound
jmp
shl
aas
dec
and
inc
add
xchg
lea
jmp
pop
loopne
jg
dec
jb
mov
ret
mov
or
outsb
or
add
out
jecxz
dec
xchg
or
mov
jne
mov
jne
aad
aaa
mov
pop
mov
imul
sub
imul
lret
cwtl
nop
xchg
in
pop
das
sbb
adc
pushf
stos
fs
jne
mov
popf
or
mov
jns
inc
mov
roll
and
xchg
sub
cmp
movsl
sbb
jg
or
xchg
test
xor
pop
sub
dec
les
lret
leave
adc
mov
cs
mov
stos
aas
loop
xor
jns
test
rcll
add
adc
imul
mov
popa
adc
outsb
jb
sbb
mov
aam
call
loope
lods
pop
sbbb
cwtl
and
adc
mov
xchg
addr16
int
or
or
jne
pop
orl
in
mov
xchg
lea
jo
mov
out
push
test
es
icebp
int
push
mov
adc
fadds
stc
mov
sbb
inc
ljmp
ljmp
add
cmc
int3
mov
and
sub
aam
ret
sahf
mov
in
addr16
repz
mov
cmp
test
lret
pop
mov
in
bound
loop
mov
inc
into
in
sub
xchg
mov
adc
sahf
movsl
out
pop
ja
sbb
push
in
notl
sub
cs
jle
sbb
jbe
cmc
loop
in
out
repz
lds
bound
pop
rcrl
das
into
insb
cld
sbb
loop
mov
pop
mov
cmpsl
cmc
jae
popf
xchg
push
je
push
fistpl
jno
nop
and
lea
pushf
sub
pop
cmp
sbb
lock
test
xchg
inc
fisubs
cs
fistpl
push
push
bound
test
stos
scas
sarb
rol
jns
gs
dec
movsl
cmp
mov
into
jns
adc
sbbb
idiv
mov
cmpsb
cld
mov
das
out
mov
mov
jns
scas
or
das
inc
xor
jae
or
mov
fsubr
mov
sti
xchg
test
cmp
push
fimuls
rol
decb
bound
sub
add
mov
dec
out
mov
adc
jae
add
jnp
adc
lods
mov
aad
inc
or
jno
inc
mov
insb
and
jle
sbb
mov
inc
push
pusha
js
clc
mov
in
movsl
add
adc
mov
fisubs
jle
push
test
popa
push
fidivs
lret
int
sbbl
icebp
sub
or
push
cs
lcall
pop
test
mov
jmp
sbb
or
je
mov
fmuls
mov
out
pop
jecxz
jp
mov
mull
adc
in
loop
lock
mov
ss
push
mov
in
xor
loop
adc
adc
into
sub
xor
adcl
scas
cwtl
lods
stos
das
fstps
pop
cs
and
inc
mov
das
sbbb
stos
loopne
mov
xchg
imull
jns
arpl
dec
cmp
lret
aad
xor
aam
mov
mulb
xlat
cwtl
cs
fisubrl
std
sub
pusha
pop
adc
cmpsb
sbb
aam
push
inc
into
addl
das
mov
add
sbb
repz
jb
jae
dec
xchg
mov
imul
je
sbb
hlt
test
adc
cmp
sbb
and
div
mov
mov
repz
mov
ja
xchg
data16
push
or
push
dec
fildll
cltd
lret
stc
jae
arpl
add
fcmovbe
movsb
enter
jl
test
mul
and
jno
lds
idivb
or
or
xchg
fldenv
test
out
fcoms
test
sbb
sbb
je
sbb
pop
push
ja
mov
inc
xchg
addr16
sub
xlat
sbb
inc
fisttpl
call
xchg
cmp
mov
pushf
or
cwtl
je
push
lcall
jmp
pop
call
lods
jns
pop
add
or
test
push
inc
adc
inc
js
and
inc
imul
jbe
out
cmpsb
inc
das
xchg
mov
mov
mov
inc
xor
ret
jl
jmp
andb
dec
pop
pop
mov
ljmp
lcall
and
ja
dec
lahf
push
clc
mov
jp
lods
sbb
outsw
mov
idivl
add
mov
cs
and
xor
xchg
cmp
sub
imul
cmp
cli
mov
xor
jb
mov
mov
hlt
jle
scas
adc
jge
sti
sbb
out
fmull
das
ss
xchg
out
nop
mov
gs
daa
clc
inc
mov
adc
mov
dec
adc
and
push
cmp
xchg
mov
sub
mov
inc
aas
mov
jo
or
and
das
lock
push
jg
push
or
pop
dec
adc
jge
test
pop
das
mov
ss
add
in
imul
mov
push
sub
in
ret
and
bound
fmuls
sub
pop
aas
out
mov
and
jmp
push
mov
out
xchg
xchg
scas
mov
div
in
jnp
add
push
imul
push
pop
adc
jbe
clc
pop
or
ret
pop
fsubl
pop
sbb
mov
xor
imul
mov
add
hlt
mov
mov
jnp
pop
adc
mov
mov
into
bound
xchg
xlat
sahf
rolb
and
out
jo
in
or
or
cmp
pusha
xchg
sbb
mov
in
in
or
cli
inc
outsl
jle
lahf
testb
and
push
daa
rclb
das
aas
xor
dec
bound
mov
cmp
xor
aas
addr16
lret
stc
inc
int
xchg
xchg
pop
cmp
sub
mov
std
clc
adc
push
jno
rol
rclb
push
mov
jb
push
jle
gs
inc
pop
stos
jg
lcall
bound
or
pop
lea
outsb
test
or
je
add
ror
pop
ficompl
mov
hlt
daa
push
pop
addr16
movsb
test
sbb
xchg
out
jo
xor
jbe
mov
sub
cmp
into
sahf
or
fcom
shlb
sbb
rolb
push
adc
xlat
jp
cmpb
mov
pop
sbb
mov
sti
xchg
dec
inc
lock
push
xor
adc
fcoml
pop
dec
add
sub
push
les
dec
jp
jnp
psubsw
xchg
lret
scas
lcall
adc
mov
pop
lea
insl
sub
push
mov
callw
arpl
xchg
dec
cmpsb
fsubr
and
sub
cmp
jnp
movsl
sub
add
add
popa
mov
movsl
fcmovu
dec
pop
in
outsl
adc
ffreep
add
dec
orb
or
mov
out
cmc
jmp
add
jecxz
adc
xchg
loopne
shl
push
clc
hlt
dec
cmp
mov
aaa
mov
cmpsl
es
ror
aaa
jae
cmp
push
add
push
xor
mov
dec
pop
jmp
je
cmpsb
dec
inc
mov
inc
stos
dec
sar
aam
mov
sbb
dec
add
dec
cmp
aas
xor
aad
rcrl
mov
adc
int
pusha
sub
fnstcw
pop
and
push
cmpsl
mov
add
jl
cld
inc
pusha
jne
pop
shrl
lods
add
rol
ficoms
dec
cld
and
cwtl
or
cmp
mov
inc
cmp
mov
jo
xlat
xchg
arpl
pop
movsb
xor
adc
cs
cmp
into
fwait
sub
xchg
mov
cwtl
popf
jecxz
test
cmpsl
dec
add
mov
jle
outsl
sub
jge
sub
add
or
shl
add
lock
mov
xor
das
dec
adc
rorl
and
jmp
movsl
jno
movsl
dec
cmpsl
lds
pop
mov
push
xor
cmpsb
lret
mov
push
adc
or
mov
mov
push
pop
out
hlt
aas
xchg
add
inc
dec
fisttpl
lds
es
test
in
les
adc
iret
mov
aam
jae
int
repz
mov
aaa
outsl
mov
lahf
pop
and
in
shll
pop
push
mov
xchg
sub
mov
jmp
sub
mov
gs
push
pop
mov
xor
sbb
push
mov
mov
shlb
jge
fcmovu
inc
ss
jmp
mov
cmp
cmp
jae
ret
dec
scas
lock
add
xlat
lcall
das
loopne
loop
lcall
cmpl
mov
pop
in
mov
clc
push
pop
leave
fdivrs
popf
pop
popl
add
lret
jns
stos
inc
pop
or
xlat
sahf
sbb
jno
fcmovbe
ret
rolb
andb
push
jp
outsb
loope
movsb
and
es
adc
jmp
push
mov
std
mov
cli
adc
pop
popa
sub
cmpsb
cmp
enter
icebp
daa
fldt
xchg
aam
cmpsb
lret
std
adc
mov
popa
jno
shlb
cmp
fcomp
orb
rorl
je
jns
scas
xlat
mov
test
addr16
dec
jmp
push
mov
adc
xor
inc
xchg
cmp
pop
nop
movsb
jl
test
lods
dec
pusha
xor
ss
nop
push
les
daa
ja
mov
dec
inc
sbb
cltd
pop
mov
add
mov
lock
aam
nop
in
test
mov
push
inc
jbe
pop
inc
lods
push
lods
pusha
outsl
cmp
push
aas
sub
aam
mov
outsl
data16
mov
adc
fmulp
inc
push
fwait
jbe
in
push
mov
dec
cmp
aaa
xchg
rcll
cmp
xor
cmp
pushf
pop
je
daa
or
fnsave
xchg
add
daa
into
jno
xchg
in
xor
lock
sub
jno
xor
jl
cmpsl
mov
enter
dec
sub
mov
in
lea
mov
loope
divb
xorl
xor
or
sbb
xchg
loope
sahf
dec
test
sub
adc
out
data16
push
shlb
call
pop
push
imul
cmpsl
adc
outsb
add
testb
dec
mov
fwait
pop
mov
hlt
inc
mov
and
or
cmpl
ds
sahf
neg
pop
mov
ss
cmc
neg
and
jle
adc
subb
lcall
xchg
mov
adc
test
ret
push
pop
adc
scas
fstpt
leave
push
enter
cld
mov
cmpsb
or
add
rcrb
and
clc
push
mov
mov
test
movsb
fimull
pop
dec
fs
xor
and
idiv
jmp
into
and
sti
jae
ret
dec
aas
push
repnz
sbb
jns
aaa
cmp
out
icebp
mov
dec
scas
rcrl
add
mov
jl
stc
and
xchg
aam
mov
cmpps
or
xor
lcall
stos
mov
xchg
ds
adc
enter
js
xor
sbb
mov
jae
mov
cltd
test
lret
js
jle
push
jle
pop
stos
xchg
int3
int3
push
xchg
iret
dec
xor
iret
mov
sbb
sbb
adc
gs
xchg
sbb
repnz
push
sbb
xor
lret
jne
or
fisubs
repnz
cmp
mov
movsl
nop
shr
push
frstor
jae
int3
das
fimull
mov
or
jae
stos
es
mov
mov
addl
cmpsb
xor
xchg
add
push
imul
push
scas
push
pop
les
imul
pop
shrb
sahf
repz
leave
icebp
mov
sub
jecxz
dec
sub
out
sub
jns
xor
fists
lods
pop
stc
fcoml
andl
inc
into
dec
int3
or
popa
inc
sub
push
jb
stos
mov
push
ret
ret
jbe
lret
xor
hlt
rcrl
xchg
scas
xchg
adc
mov
and
in
leave
data16
cli
test
cmp
xchg
jae
jle
cmpsl
and
or
sbb
mov
adc
mov
or
sub
xchg
mov
repz
inc
into
popa
dec
outsb
push
lea
mov
clc
add
mov
mov
mov
push
jl
cld
sbb
rorb
push
push
sar
push
dec
cmp
aas
flds
xchg
inc
stos
or
cmpsl
inc
fstpt
push
pop
sub
jl
rcll
lds
or
movb
pop
pop
shll
dec
scas
aas
jno
imul
sub
add
int3
je
fsubr
pop
stc
sub
inc
pop
sbbl
mov
repz
pop
cmp
xchg
mov
dec
sarl
aam
rclb
cld
mov
cltd
mov
mov
sbb
es
push
enter
push
test
add
insb
pandn
in
mov
out
xchg
shl
pusha
sub
lahf
dec
jle
enter
mov
xlat
xor
int3
ss
adc
sbb
pushl
aam
cmpsl
inc
stc
movsl
jbe
mov
aas
mov
flds
jb
push
push
jno
js
imul
sub
mov
mov
mov
or
pusha
roll
cmp
jp
inc
cmpl
mov
push
cmc
inc
sbb
popa
inc
and
cmp
cli
scas
dec
sti
icebp
pop
add
mov
je
inc
mov
std
ret
adc
fmuls
mov
loop
add
pop
data16
sub
in
pop
jp
hlt
nop
mov
das
xchg
pmaddwd
cmp
int3
mov
xor
mov
push
push
xor
ret
into
lret
add
stos
mov
mov
roll
or
movsb
dec
xor
out
push
jmp
push
mov
jb
xchg
dec
jmp
rcr
shrb
repnz
cwtl
push
jo,pt
xor
push
in
xlat
pop
inc
jg
js
mov
mov
pop
int
fdivl
out
xchg
test
orb
sbb
test
stos
jmp
inc
inc
cmpsl
mov
shl
push
into
int
ljmp
jns
cmp
xchg
arpl
pop
and
dec
adc
inc
rorl
xchg
scas
out
pop
fldcw
xor
lahf
mov
jecxz
mov
xlat
popf
xor
lret
mov
imul
adc
mov
insb
xor
rclb
sub
mov
out
xchg
sub
pop
icebp
add
es
jns
icebp
lea
mov
int3
test
aas
pusha
cltd
xchg
pop
dec
jge
rcll
and
dec
or
cld
adc
mov
orl
xchg
arpl
xchg
pop
fimuls
mov
aam
push
stos
dec
and
gs
test
fcmovnu
jp
movsl
cmp
mov
jo
and
stos
int
push
fcoml
inc
idiv
adc
sbb
in
imul
aas
cmp
nop
leave
mov
mov
pop
xor
out
hlt
mov
out
add
mov
inc
add
xor
dec
mov
sbb
add
loope
dec
pop
jecxz
lret
leave
or
popf
gs
cwtl
mov
iret
insb
xor
dec
sahf
or
je
cmc
inc
jbe
mov
add
jb
xchg
jecxz
stos
cmp
lret
std
mull
cmp
ljmp
imul
aas
stos
jns
xchg
inc
test
test
mov
das
jne
push
mov
iret
mov
xchg
push
jmp
adc
mov
push
mov
jo
adc
ret
cmp
adc
mov
pop
cmc
lret
addr16
jb
mov
sbb
sahf
dec
mov
xchg
daa
pop
popl
outsl
loope
negl
jns
jge
mov
push
xchg
outsb
jbe
inc
shrb
mov
push
cld
ds
out
mov
mov
shlb
das
fwait
cld
sbb
push
adc
xchg
push
aas
pop
push
fwait
add
fsubr
shlb
leave
repz
dec
mov
xor
mov
sahf
les
je
into
mov
sbb
and
jae
test
sbb
and
xchg
clc
enter
movsb
add
mov
js
popf
iret
outsl
inc
xlat
pop
dec
aad
cmp
ret
adc
rorl
ja
in
jne
xorl
lds
lret
gs
testl
shr
pusha
mov
xor
or
jo
mov
mov
loope
mov
dec
insl
dec
adc
mov
rolb
lret
adc
inc
mov
mov
ret
sbb
repz
hlt
lret
cmovb
std
fsts
xchg
insl
bound
test
cs
bound
sbb
jge
stos
push
lcall
xchg
mov
iret
or
cmp
mov
popf
arpl
stos
aaa
lahf
cmp
ss
lcall
cwtl
out
push
and
inc
cmpl
inc
push
test
cmp
in
push
mov
jo
loopne
cmp
mov
inc
test
pop
jg
add
mov
mov
mov
xchg
adc
jnp
pushf
sub
sub
push
stos
sbb
aaa
mov
in
dec
rcr
push
test
push
sub
inc
out
add
xchg
lds
scas
mov
imul
cmp
ja
leave
jg
scas
inc
add
lret
push
and
shll
and
stc
cli
xor
jmp
aaa
andl
inc
cs
add
push
test
enter
push
data16
scas
and
js
loope
jp
lret
dec
fistl
push
adc
int3
push
mov
mov
sub
add
out
gs
push
flds
outsb
imul
rcll
rorb
xchg
or
mov
jp
mov
mov
movsl
mov
call
je
jle
lret
push
popf
xchg
cli
sub
andl
adc
xor
sub
fdivrp
dec
outsl
ss
mov
cmp
int3
mov
mov
test
sub
jno
inc
lods
int
enter
mov
aaa
jg
lret
or
jns
fstpt
dec
adc
and
jp
mov
inc
mov
iret
int
orb
dec
movsb
scas
or
mov
fisubs
mov
rclb
adc
std
push
out
insl
and
fs
mov
popf
out
mov
mov
test
mov
mov
sbb
jg
lcall
jae
push
cmpsl
enter
mov
push
inc
ret
sbb
adc
dec
int
fstpt
push
insl
cmp
push
xlat
adc
setns
sub
and
dec
mov
mov
push
stc
icebp
cltd
jl
or
popa
enter
popa
aas
inc
mov
pop
adc
psubb
ja
adcl
addl
imul
es
pop
fidivrl
ja
test
in
jnp
or
fmull
leave
aad
icebp
fnstcw
push
cmp
push
dec
fs
and
sbb
xchg
adc
lret
mov
cmp
push
stc
push
test
out
aad
push
lock
jecxz
or
stos
jg
popa
jmp
xor
sbb
frstor
in
jnp
shrb
testl
sub
jbe
sar
fdivrl
cmp
mul
pop
mov
and
or
imul
xchg
jnp
clc
push
dec
jno
aad
pop
push
outsl
shrb
sbb
and
mov
mov
outsb
iret
xchg
add
scas
dec
and
push
pop
inc
push
out
repz
jle
dec
adcb
xchg
test
les
jp
add
pop
push
pusha
lods
adc
hlt
sub
orl
fmul
outsb
sub
mov
call
push
leave
xor
roll
into
dec
andb
enter
imul
jle
mov
loop
xchg
test
mov
jmp
cmc
iret
or
shl
pop
push
cmp
sbb
push
jmp
cmp
rclb
pop
lock
pusha
fimull
push
mov
pop
loopne
mov
add
movsb
mov
jmp
mov
pop
xor
rcr
sti
jno
xor
adc
dec
add
jmp
ret
cmpsl
cltd
adc
inc
repnz
mov
jecxz
test
lods
pop
sbb
xchg
mov
push
hlt
jge
js
jb
sub
movsb
loope
xchg
pop
lahf
int
sar
cmp
jle
fists
stc
push
jo
mov
sub
dec
jecxz
xor
mov
mov
adc
cmp
xchg
sbbl
cld
push
push
je
mov
lea
mov
mov
sbb
xchg
imul
pop
test
js
outsl
mov
mov
sbb
sti
dec
fwait
pop
mov
add
imul
mov
or
or
mov
ret
sahf
mov
xchg
mov
fstp
cmpsl
ret
in
cmp
pop
test
adc
scas
mov
mov
xchg
lcall
fwait
push
adc
enter
dec
xlat
inc
stc
je
cmp
addr16
pop
jb
mov
and
sbb
jge
pop
shll
push
mov
mov
shrb
daa
bound
xchg
scas
pop
push
in
sbb
pop
sub
cmc
adc
mov
in
in
mov
or
sbb
daa
pop
sub
cmpsl
js
stos
xchg
mov
xor
lret
fisubrs
and
lahf
push
adc
out
lret
dec
roll
lcall
and
jns
aad
imul
hlt
call
jne
out
enter
repz
cld
cmp
rolb
jg
aas
ret
loope
push
loop
stc
mov
cli
pushf
std
sbb
in
ljmp
repz
xor
leave
xchg
jge
lock
int
pop
jmp
dec
lea
lds
shr
mov
cmp
mov
gs
jne
mov
xchg
push
in
std
or
sbb
in
and
adc
or
xor
add
mov
sti
jle
xchg
lods
mov
lock
insb
mov
cltd
xlat
test
adc
scas
lea
stc
arpl
stc
jno
call
sarb
mov
sub
rorb
lcall
aas
sub
jle
add
jmp
enter
imul
fdivl
mov
pop
sub
pop
or
push
sub
and
add
mov
jno
xchg
data16
test
inc
push
mov
int
mov
ret
into
dec
sti
adc
mov
rolb
shr
xor
stos
subb
cwtl
fcmovne
imul
cltd
lock
inc
call
sub
fstps
aam
mov
scas
or
std
jge
testb
cwtl
sbb
pop
add
push
mov
movlps
xlat
jg
jle
loope
and
lds
jmp
je
jmp
add
push
add
xchg
mov
scas
push
push
cmpsb
mov
int3
in
mov
aas
cmpsl
mov
dec
jmp
fiaddl
cltd
lods
add
inc
mov
pop
ret
daa
pop
sub
lahf
and
sbb
loope
push
mov
cmp
int
ja
in
addr16
mov
jmp
dec
pop
leave
xchg
jbe
loopne
sub
pop
mov
cmp
shlb
nop
mov
sub
add
gs
into
push
test
jle
es
push
nop
mov
sbbl
jp
push
jo
push
mov
les
dec
jns
dec
cld
fs
aaa
shrl
xorl
or
push
out
test
addr16
push
addr16
iret
xchg
fsubs
shl
pop
imul
lahf
jns
fldcw
cmp
or
mov
out
adc
or
test
lods
test
push
imulb
movsl
pop
mov
fdivs
adc
arpl
push
lcall
dec
movsl
ficoml
fisubl
test
mov
js
ret
rolb
test
fucomip
daa
inc
sbb
addr16
movsl
adc
repz
clc
stos
mov
test
pushf
pop
fwait
sub
jle
lods
ljmp
mov
and
xchg
and
daa
out
jno
inc
xlat
lea
inc
dec
dec
sahf
xor
leave
push
mov
and
hlt
adc
inc
ret
in
xorl
pushf
jne
mov
xchg
dec
les
divl
mov
dec
cwtd
daa
mov
mov
dec
push
ror
mov
out
and
inc
imul
mov
lea
test
fwait
xchg
xor
mov
or
ja
divl
rcrl
xor
push
cmp
cmpsl
lock
jae
mov
sbb
std
mov
mov
xor
sbb
in
pop
insl
icebp
clc
mov
cwtl
test
roll
sub
es
or
cmp
xchg
nop
xor
cmpb
pop
cmpsb
cmp
add
adcl
adc
imul
add
outsl
mov
pop
shrb
clc
xchg
rcrl
cs
push
ja
test
sub
dec
inc
clc
jecxz
fnstcw
data16
movsl
inc
sub
in
sbb
mov
push
adc
mov
sub
divb
xchg
ret
xchg
push
call
sub
or
mov
outsl
mov
jge
fsubrp
popf
xor
icebp
out
sub
mov
outsl
in
pop
stos
push
sub
or
int
orl
or
jmp
pop
mov
dec
xchg
fidivrs
xchg
jle
jno
mov
adc
aaa
jp
fcomps
xchg
loope
lods
mov
xor
mov
dec
sub
mov
add
int3
fsubl
rorb
mov
xchg
cltd
cmp
mul
or
sub
pop
cs
and
or
adc
inc
testb
jb
pop
and
adc
sbb
ljmp
add
test
mov
adc
push
rcll
sub
adc
sub
mov
push
fldcw
sarl
dec
adc
push
jo
cmp
pop
push
testb
jae
or
out
enter
lea
cltd
adc
clc
pop
jmp
test
dec
stos
and
gs
jb
pop
dec
inc
shlb
sarb
test
pop
fimull
push
cmp
rcr
cmpsl
dec
sarb
push
rcrb
call
xor
cs
es
xchg
call
sbb
mov
inc
cmp
sbbl
push
cmpl
mov
push
mov
mov
xor
shrl
enter
nop
test
sub
aam
pop
arpl
sub
jg
mov
ret
stos
outsb
je
cmp
decl
dec
outsb
je
push
addr16
fwait
insb
sub
add
dec
jae
jb
test
sbb
mov
adc
cwtl
gs
cld
cmpsb
je
inc
pop
mov
into
mov
cmp
push
add
mov
sbbl
loopne
inc
push
lds
jg
cmp
adc
dec
pop
and
mov
out
pushf
fnsave
daa
pop
jl
xchg
xchg
fsub
jmp
inc
test
fmuls
shl
arpl
sti
ss
xor
push
cmpsl
xchg
idivb
in
clc
fs
jnp
xchg
cmc
xchg
clc
dec
stc
jae
pop
das
cmc
or
roll
xlat
xchg
xor
cmpsb
sbb
mov
jmp
sub
fbld
out
pop
push
cltd
icebp
inc
insl
iret
cmp
xor
dec
or
sti
push
sti
jno
loope
adc
aad
sarl
sbb
mov
cmp
add
push
enter
enter
out
mov
shll
inc
cmp
mov
and
lahf
sarb
mov
or
jae
cmp
dec
mov
aam
jl
add
lahf
popf
or
sahf
data16
les
icebp
negl
sahf
pop
jb
sbb
adc
sti
sbbl
in
ljmp
leave
inc
sub
pop
out
xorb
leave
xchg
into
fimull
or
dec
clc
out
in
dec
push
adc
fidivrl
cmp
iret
sub
clc
cmp
pop
negb
mov
adc
cltd
lods
xchg
pusha
ret
imul
xchg
sbb
xchg
inc
repnz
mov
jb
push
mov
iret
mov
inc
xchg
gs
iret
sub
sub
loopne
jp
in
mov
sub
hlt
mov
pop
das
sbb
mov
aad
addr16
cmp
xlat
or
shrl
daa
mov
shl
fiadds
cmpb
inc
dec
dec
into
lock
ud2
scas
push
iret
repz
mov
movsl
sar
fimuls
pop
stc
test
fldcw
rcll
mov
sbb
xor
daa
bound
fisubrs
pushf
mov
sbb
insl
cmp
ret
sub
cmovnp
sarl
dec
mov
aas
xchg
fnsave
jnp
scas
mov
mov
dec
int
in
jbe
movsb
dec
movq
mov
incb
jae
ja
mov
pop
dec
loope
cmp
and
lret
shrw
xchg
cmp
pop
sahf
lahf
aas
sbb
or
pop
sahf
xchg
xor
xor
sahf
pusha
lcall
and
lret
lahf
js
mov
sub
hlt
sarl
imul
adc
ss
push
adc
jp
in
pop
rclw
cmp
dec
pop
cmpl
pop
mov
fs
ret
mov
cmp
xchg
cmp
sub
nop
in
jne
wbinvd
iret
adc
inc
adc
sub
push
mov
mov
and
in
sub
mov
testb
pop
sbb
jle
lret
fsts
stos
sbb
and
mov
es
add
test
dec
cltd
jecxz
xor
lock
add
xchg
push
pop
test
sbb
xor
or
sbb
fucompp
and
arpl
sbb
jecxz
mov
xor
jmp
int
mov
nop
xor
xor
pop
adc
in
mov
je
sub
dec
sub
cmp
jge
pop
cs
pushl
push
jb
cs
insl
loopne
mov
dec
add
push
outsl
and
data16
fimuls
sbb
ret
xchg
mov
jg
ljmp
jmp
repz
jmp
or
jl
imul
fldt
lahf
xor
rcrb
dec
push
add
js
adc
lret
cmp
pop
je
mov
jp
loop
rorb
adcl
std
bound
xor
and
sbb
jle
adc
scas
mov
out
sub
mov
fists
pop
loope
es
jnp
adc
inc
sub
cmp
cmp
mov
xor
inc
in
mov
pop
mov
nop
xchg
mov
in
inc
push
in
sub
in
fwait
js
sbb
out
clc
pop
mov
mov
outsl
xor
pop
mov
jae
ja
sbb
incb
ja
repnz
mov
scas
dec
and
test
fldl
xchg
lods
mov
jmp
xor
jns
adc
cmp
loopne
and
jns
adc
clc
add
and
or
hlt
adc
xor
jg
movsb
mov
insl
imul
fwait
cld
xlat
adc
sbb
pop
sbb
je
add
cltd
rcrb
push
fwait
xchg
push
std
pop
stos
xchg
icebp
push
cld
mov
mov
jp
sub
lea
out
pop
gs
test
jns
cs
je
imul
mov
dec
inc
ss
daa
dec
hlt
jne
cmpsb
loop
mov
add
sarb
pop
ljmp
push
push
int
jns
or
and
mulb
and
test
inc
rol
cmp
jmp
rcrl
loope
popf
mov
into
jno
sub
mov
pop
fcomp
lret
dec
jns
lret
push
pop
scas
cmp
iret
in
jp
movsl
mov
into
push
shl
jns
int3
sbb
ret
in
in
ret
pusha
cs
test
fildll
mov
sbb
movsb
sbb
mov
in
out
popf
cmc
add
fstpt
pop
popa
leave
es
test
ret
sbbb
cmpl
jmp
aas
and
jbe
cltd
mov
xor
bound
popf
add
ret
mov
push
xchg
imul
movsl
mov
dec
and
inc
add
xor
repnz
mov
nop
int
repnz
cli
or
mov
adc
sbb
mov
mov
ret
mov
fcmovnbe
push
leave
inc
mov
jne
fwait
jge
ret
into
imul
lods
popf
sub
test
or
jmp
xlat
bound
in
imull
mov
js
stc
pop
pop
scas
data16
scas
rcr
push
xchg
sub
adc
sub
movb
in
icebp
ss
rcll
iret
ror
mov
outsb
add
mov
jle
sub
add
icebp
and
push
mov
ss
lahf
fwait
das
test
filds
dec
and
cmp
fdivrl
jae
jmp
das
add
dec
in
add
in
add
out
add
adc
pop
mov
jbe
jecxz
aas
cmp
adc
bnd
pop
test
xchg
int
mov
pop
sar
stos
jns
mov
inc
into
dec
dec
mov
jb
cmp
xor
pushf
jle
shll
push
std
das
stos
rcll
jbe
aad
lahf
inc
pop
xchg
leave
inc
in
xlat
movsl
inc
pop
and
mov
lcall
icebp
xor
cmp
sub
pop
out
mov
cwtl
xchg
and
fadds
and
xor
xchg
pushl
mov
shr
dec
pop
test
popf
sbb
xchg
popa
xorl
les
push
sti
addl
pop
mov
cwtl
jge
mov
icebp
out
lods
lahf
mov
je
pop
add
mov
jb
aad
sub
xor
lock
and
int3
andl
or
adc
adc
xor
scas
xor
mov
mov
xchg
sbb
xor
sbb
pop
fdivl
enter
cmp
dec
push
mov
add
insl
outsl
dec
out
mov
xchg
or
xor
iret
pop
es
dec
andl
das
adc
ljmp
je
imul
mov
sub
lock
dec
frstor
roll
mov
int3
imul
fistpl
jnp,pn
fsubrl
lret
and
das
pop
pop
stos
popfw
dec
rolb
lds
xchg
fsubl
mov
jne
ror
mov
in
sti
stos
mov
jo
fnsave
push
sbb
adc
xor
fdivrs
inc
js
or
decl
sbb
outsl
imul
push
in
push
add
icebp
mov
in
out
in
cs
mov
xlat
mov
mov
add
jo
xchg
inc
xor
sbb
add
push
dec
mov
clc
mov
and
in
mov
out
pop
in
push
and
inc
jp
jbe
aam
fyl2x
lretw
out
cli
sbb
add
adc
dec
cmpsb
lret
jns
test
pop
popf
jp
popa
in
mov
add
mov
leave
jae
je
jl
mov
loop
popf
addr16
mov
int3
xor
stc
pop
lahf
adc
in
mov
adc
cmc
movsl
cld
int
std
sub
cmp
sbb
das
mov
push
dec
shr
sub
sub
mov
js
xchg
jle
pop
movsl
jne
mov
adc
add
mov
and
mov
lret
loopne
push
aas
dec
imul
jno
scas
imul
aas
test
stos
sbb
mov
std
mov
cmp
inc
movsl
sub
sbb
adc
mov
adc
shlb
add
lds
ficomps
mov
fcomip
xchg
and
push
pushf
incl
sub
jae
in
pop
outsb
rcrb
pusha
push
in
cld
jecxz
dec
inc
rcrl
pop
into
push
xchg
jmp
and
push
xchg
dec
les
icebp
je
sub
xchg
add
jge
pop
jno
sub
int3
stc
mov
int
xor
testb
cwtl
xchg
xchg
inc
mov
lret
fs
sub
rolb
js
mov
cltd
ja
mov
cmpsl
fnstsw
lcall
push
test
mov
jo
fiadds
xchg
push
mov
push
xchg
push
cwtl
aad
jle
xor
in
out
loope
adc
cmovo
adc
xchg
add
add
lcall
sbb
push
lahf
push
cmpsl
lods
push
push
xor
and
fcmovbe
fsubrl
cmp
mov
outsb
test
loopne
adc
mov
mov
add
outsl
xor
and
lahf
jg
dec
push
jno
mov
fs
inc
in
push
aam
inc
push
fisubl
int3
and
add
mov
xchg
lds
adc
jmp
xchg
sub
xor
adc
rcrb
sub
inc
je
mov
push
ss
inc
stos
leave
stos
add
aaa
in
push
jo
adc
mov
pop
cmp
xor
add
aaa
mov
addl
outsl
mov
jne
test
test
out
incl
mov
sti
je
popa
lahf
lods
pop
jecxz
out
sahf
push
push
sbb
dec
orl
xor
mov
jle
in
mov
inc
out
xchg
xchg
adc
add
ss
push
pop
or
jmp
inc
xchg
fstpl
leave
int
adc
data16
and
mov
dec
int3
pop
pop
sbb
dec
mov
fldenv
or
xor
lahf
sarl
pop
loop
adc
adc
inc
xor
push
daa
fsubrl
cli
ss
in
ss
into
fwait
inc
stos
sub
or
sbb
es
cmp
push
es
imul
mov
jo
icebp
add
mov
loopne
pop
inc
push
stos
xlat
xor
outsb
push
pop
jmp
fidivrs
mov
test
mov
lock
fldl
imul
arpl
xchg
push
call
mov
stc
xchg
fwait
es
push
cmovl
pop
push
shrl
outsl
sub
in
and
mov
xchg
push
mov
mov
data16
mov
mov
cs
cs
mov
fistps
aam
mov
jo
insl
sahf
popw
jmp
mov
xchg
mov
ss
mov
lods
mov
jp
fldt
xchg
in
iret
pushf
int3
adc
push
loop
jl
scas
cmovae
mov
outsl
stos
enter
mov
mov
jmp
add
lahf
lahf
and
push
pop
xchg
orb
cmpb
dec
sbb
and
mov
lds
sub
cltd
push
pop
sbb
les
insb
mov
repz
push
sbb
shll
sahf
dec
nop
adc
push
shrb
sbb
pop
mov
int3
mov
sbb
adc
nop
das
ret
nop
rorl
xchg
movsb
loopne
xlat
or
sbb
adc
enter
push
push
jno
stc
nop
cmp
popa
imul
jbe
mov
imul
outsl
in
dec
pop
jno
dec
xchg
pop
sarb
cld
hlt
pop
inc
pop
shll
fcom
imul
mov
push
lret
pushf
loope
cmpb
cmp
mov
addr16
jle
or
pop
sbb
stc
pop
ret
inc
push
or
out
push
jnp
mov
mov
xor
shrl
cld
test
cmpsb
jne
jge
sbb
cmpsb
insb
cld
aam
lods
lock
or
jno
leave
shr
test
sbb
sbb
mov
pop
jnp
add
push
xor
sub
push
stos
xor
outsb
imul
xor
in
push
aad
jns
lea
dec
iret
xchg
or
aam
mov
sub
push
and
fisubrs
xchg
insl
jo
or
sub
in
mov
jecxz
push
jnp
dec
push
mov
sub
xlat
dec
xchg
or
push
movsl
sub
sbb
test
xor
imul
push
in
push
add
push
cwtl
lods
mov
push
ljmp
lods
rcl
stos
inc
arpl
pop
aas
add
addr16
div
sub
into
test
dec
pop
xor
mov
mov
flds
test
aam
rcll
inc
xlat
mov
cwtl
repz
sahf
std
in
or
adc
push
loop
add
or
mov
mov
dec
lock
add
or
stos
mov
inc
mov
mov
push
jne
imul
out
divb
cmp
sub
mov
push
pop
in
icebp
and
arpl
out
cmp
push
js
add
and
or
movsl
stc
or
lock
popa
lock
xlat
or
cmp
push
xor
or
adc
xor
pop
mov
jmp
inc
dec
and
jp
pop
clc
push
jmp
je
xchg
test
and
icebp
xor
jne
dec
jb
inc
faddl
dec
lds
nop
imul
cs
jae
leave
test
leave
xor
add
inc
mov
icebp
dec
fbstp
outsl
subb
pop
mov
push
add
ret
icebp
push
adc
fimull
test
mov
testb
cmp
add
data16
dec
aaa
jnp
adc
sub
shlb
push
xchg
mov
lods
inc
mov
data16
cmp
xchg
push
cmpsb
out
jecxz
test
jbe
dec
adcl
outsb
pop
popf
das
dec
imul
cmpsl
sahf
out
lahf
push
aam
push
pop
lret
repnz
jge
ds
lret
loopne
xor
or
or
test
adc
sti
cmp
inc
mov
sbb
popf
pop
mov
and
push
lcall
in
and
nop
es
leave
mov
sub
sbb
out
fnstenv
adc
pop
sub
incb
mov
and
sbb
sbb
mov
xor
movsl
arpl
lock
cmpsb
jbe
add
push
mov
imul
inc
mov
testb
add
and
pushf
and
pop
imull
push
das
clc
xor
push
jge
imul
sub
xor
jle
push
and
sub
cmc
loop
dec
cmp
test
shlb
jmp
div
sub
fcmove
pushf
pop
adc
jp
mov
jno
jg
andl
sub
insb
hlt
mov
xor
or
adc
es
xor
cli
jae
mov
mov
ljmp
iret
push
outsl
clc
adc
dec
movsb
sahf
cmp
push
pop
cs
fs
mov
or
jge
pop
adc
testb
pop
pop
lahf
jne
scas
mov
aaa
pop
mov
iret
fwait
je
inc
jg
inc
inc
mov
xchg
xor
add
pop
data16
fcmovbe
mov
and
or
jae
loope
sbb
cli
imul
lcall
data16
lds
in
xchg
ficoml
add
cmp
rcrb
nop
dec
lds
test
jle
pop
stc
jb
mov
loop
js
cmc
pop
lret
repnz
mov
push
and
pop
mov
rcrl
inc
dec
xor
jne
add
pop
sub
aad
dec
push
jb
inc
imul
sbb
pushf
dec
movsb
cli
or
sbb
repz
in
jne
cmc
dec
adc
xchg
in
sub
mov
in
incl
jns
dec
mov
arpl
dec
push
xor
test
int
mov
ret
mov
xchg
leave
sub
and
ljmp
in
out
nop
jnp
mov
mov
xchg
xchg
nop
stc
xchg
mull
mov
or
cmp
jle
sbb
mov
std
sbb
cmp
in
icebp
lods
cmp
aaa
inc
rcl
test
pop
pushf
cmp
push
insb
dec
xchg
inc
js
mov
mov
clc
lret
inc
jns
fnstsw
mov
sbb
cmpsl
xor
cwtl
pop
mov
pop
movsb
cli
mov
pop
inc
inc
mov
add
xchg
loopne
cld
outsl
mov
scas
or
dec
mov
mov
insb
inc
in
iret
dec
jle
add
dec
imul
pop
jno
mov
push
sbb
divb
hlt
inc
rorl
dec
out
les
movsb
addb
lret
dec
push
cmc
arpl
push
outsb
jnp
int3
pushf
sbb
int
xchg
and
adc
xchg
push
push
insl
push
clc
pop
popf
mov
mov
idivl
mov
in
loop
xchg
add
pop
inc
ret
inc
push
pop
or
es
fimull
add
jnp
cmc
in
imul
scas
frstor
jl
xchg
mov
cmovnp
add
loope
out
jne
inc
or
add
jae
or
jbe
inc
xor
push
cmp
mov
dec
xchg
push
pop
push
and
push
fiadds
mov
sub
xchg
jecxz
test
xchg
mov
mov
cmp
jl
push
adc
xchg
clc
das
pop
xchg
adc
jl
out
mov
inc
push
sub
mov
mov
stos
cmc
mov
jne
lods
xlat
data16
add
insl
adc
pop
and
inc
cmp
mov
pusha
sub
hlt
xchg
mov
scas
repnz
jmp
in
dec
iret
je
mov
add
jge
movsb
mov
cmp
push
loopne
cmp
fcomip
jmp
sub
sub
mov
movsl
or
outsl
adc
sarb
scas
shl
cmpsb
dec
mov
insl
pop
jle
lds
pop
iret
dec
das
jmp
testb
xchg
ss
pusha
add
movsb
pop
sub
push
push
jns
fnstenv
push
sbb
cld
rcrl
bound
and
scas
into
mov
jge
jo
push
inc
sarb
out
inc
sbb
inc
push
cld
popf
dec
xchg
neg
out
fwait
mov
pop
in
pop
in
adc
in
jge
jecxz
out
jg
aam
movsb
dec
aaa
pop
or
push
popa
inc
xlat
or
jne
inc
das
mov
pop
rol
dec
push
push
pop
pop
test
ja
in
bound
rorl
into
push
stos
xor
jae
push
fsubl
enter
sbb
fdivrl
sbb
jno
push
das
dec
and
xchg
inc
cmp
mov
loop,pt
iret
pop
out
add
push
and
adc
outsl
mov
sub
xor
popf
and
repnz
add
cmp
les
cmp
add
adc
mov
dec
dec
out
lea
mov
dec
cmc
lcall
mov
dec
jg
data16
sub
lret
orl
inc
xchg
sbb
mov
repz
insb
adc
add
stos
cmp
mov
cltd
out
jnp
pop
repz
arpl
pop
in
cs
pop
mov
xchg
scas
gs
mov
push
push
dec
aaa
lahf
insb
mov
cmp
cli
das
sbb
fisubrl
dec
dec
mov
cwtl
sarl
xor
mov
sahf
pop
push
or
stos
cmp
sarl
add
inc
xor
sahf
movntq
out
jecxz
sub
mov
jle
mov
sarb
ss
push
mov
leave
mov
int
cld
inc
outsl
loop
sbb
ret
out
aas
test
pop
push
or
stos
out
xchg
jae
xchg
test
cli
icebp
int
inc
mov
fcomps
xchg
pop
bound
cmp
mov
fcomps
inc
push
cmp
mov
imul
inc
outsl
nop
insl
stc
addb
test
loope
daa
mov
jmp
divl
fnsave
fdivrl
subl
add
mov
pop
out
or
dec
inc
aas
cmp
dec
icebp
scas
stos
sub
std
push
pop
mov
add
adc
dec
cwtl
pand
and
daa
loopne
js
adc
aas
ss
xchg
in
hlt
pop
xchg
imul
jae
mov
xchg
test
hlt
ss
adc
arpl
push
jl
cltd
xchg
fimuls
cmpsb
sub
aam
or
pop
jmp
std
mov
sbb
insl
inc
dec
cli
pop
sbb
xor
iret
lahf
mov
xor
pop
mov
inc
sti
nop
jle
movnti
push
shl
dec
adc
xlat
and
jl
ljmp
dec
jle
push
clc
je
sub
enter
xor
push
addr16
sbb
popf
sahf
sub
adc
lret
jmp
and
ss
test
inc
xor
mov
xchg
or
jmp
jmp
add
xor
fsubl
sub
mov
cmp
mov
lods
call
pop
pop
dec
pop
lock
ret
leave
xor
xor
dec
inc
ret
cmp
push
inc
jg
sub
jbe
cmp
mov
jnp
xchg
inc
es
jns
in
add
loopne
mov
lods
int
mov
movsl
jb
sbb
lock
mov
lret
sar
mov
lret
push
pop
mov
and
outsl
sbb
adc
and
mov
sahf
add
and
das
inc
test
cmpl
inc
mov
int
sbb
out
fisubrs
stos
mov
jle
jne
imul
mov
inc
int
adc
loope
enter
xchg
nop
daa
fwait
pushf
push
and
or
ret
jb
jg
cmc
push
mov
push
jecxz
mov
or
jns
cwtl
int
mov
cmp
test
lret
push
dec
sub
stc
sub
sub
jle
sbb
xchg
mov
jmp
das
adc
xchg
imul
insl
sbb
jg
jo
out
out
int3
adc
out
add
ss
jns
fisubl
call
pop
stos
subl
adc
push
mov
push
test
rcl
lahf
and
aad
xor
outsl
sub
sub
sahf
pushf
call
ds
dec
int3
add
xor
mov
jecxz
dec
xor
mov
and
jne
adc
xchg
enter
pop
push
sarw
jo
cmovno
lods
sbb
jmp
shrl
xchg
leave
inc
out
dec
test
pop
mov
stos
popf
add
mov
cmp
fisttpl
addl
inc
insb
mov
mov
and
shlb
mov
in
jbe
out
and
aas
mov
int3
repz
push
loopne
jl
mov
and
ret
sub
adc
nop
js
fsub
sub
mov
stos
insl
sahf
pop
sbb
filds
jns
cmp
push
adc
xchg
mov
ljmp
jae
aam
punpcklbw
inc
jle
mov
xor
jg
je
jl
dec
dec
paddusw
push
inc
jo
jg
sbb
push
xchg
add
mov
xchg
mov
xor
push
and
mov
mov
jle
dec
and
mov
xor
push
sti
sbb
imul
or
push
test
std
iret
inc
mov
dec
or
mov
mov
cmc
and
xor
add
fdivrs
les
lods
test
jg
lods
or
in
pop
cmpsl
sbb
aam
sahf
add
xchg
sti
jmp
ljmp
sbbl
adc
sti
mov
adc
into
aad
adc
or
popf
inc
stc
dec
add
xchg
sti
xchg
sbbl
push
dec
xor
ret
aad
cmp
cmpsb
mov
dec
push
loope
mov
mov
lret
fldt
imul
mov
aad
xchg
mov
dec
jmp
sbb
rol
lret
stos
es
jmp
aam
aad
and
jmp
sahf
das
outsb
pop
jns
cmp
mov
push
leave
pop
jno
fistpll
out
add
addr16
pop
int
incb
cld
and
das
pop
mov
aam
xor
ds
sarb
adc
popl
in
adc
in
jno
ficoms
mov
nop
inc
or
jg
jno
xchg
push
out
or
jmp
and
lret
shll
jg
in
dec
loope,pt
pop
insb
pop
out
jb
in
push
mov
xchg
adc
jnp
sbb
in
data16
aas
cli
add
jg
in
into
test
into
lret
pushf
cmpsb
test
push
stos
xchg
int3
cli
or
xor
out
push
mov
scas
and
cmp
scas
clc
cmc
in
adc
call
ss
popa
push
int3
repnz
call
inc
push
stc
js
dec
sub
pop
mov
jge
imul
jmp
enter
cltd
push
or
mov
and
fldl
shl
icebp
lret
es
insb
in
stos
cmc
mov
mov
jmp
stos
ret
test
xchg
leave
xchg
jae
sbb
out
mov
mov
and
jo
adc
pop
dec
ret
add
push
cmpps
mov
or
neg
push
orb
andl
fidivrl
inc
shlb
popf
mov
xchg
push
mov
or
test
xchg
rclb
and
out
sub
jmp
das
adc
cli
adc
push
push
nop
inc
bnd
and
mov
call
mov
fcoml
jecxz
pop
enter
mov
rolb
add
sub
ret
inc
pushf
xlat
mov
push
js
test
shrb
add
ljmp
cmp
sbb
jne
jne
xchg
aaa
stc
das
pushf
inc
ds
jmp
popf
lock
mov
enter
ret
add
xor
mov
mov
inc
cmpsb
cmpsb
mov
sub
pop
push
lea
repz
push
test
test
inc
lret
mov
loop
pop
les
in
pop
sbb
scas
out
in
and
int3
aaa
dec
cmp
mov
outsb
cmp
sub
cmp
psubq
loopne
je
or
xchg
and
inc
imul
sbb
mov
jl
addr16
ret
pushf
bound
dec
cmp
scas
pusha
dec
sub
aam
hlt
sbb
xlat
out
inc
bound
je
loope
dec
pop
xchg
int
incb
loopne
xor
sbb
push
jge
jl
xchg
out
sbb
push
dec
or
xchg
sbb
adc
fisubrl
fimull
sub
aas
cmp
sbb
faddp
mov
std
adc
adc
inc
outsl
add
scas
pop
jns
iret
shrl
push
sub
int
stos
push
sarl
adc
fnstenv
mov
pop
jmp
sbb
js
shrl
cli
inc
add
lret
js
je
iret
pop
cmp
int
and
pop
int3
jmp
push
dec
imul
push
adc
mov
pop
mov
cld
test
mov
or
dec
mov
inc
jne
push
nop
pop
inc
daa
dec
fstpt
int3
dec
inc
aas
push
xor
inc
mov
add
ds
lahf
xchg
out
stos
cwtl
lret
add
adc
push
sbb
and
dec
push
mov
insl
clc
cmp
and
dec
fsubrl
fndisi(8087
push
jp
or
lods
int
xchg
xchg
testl
mov
cmp
lcall
inc
xor
dec
xchg
adc
cld
int3
cmpsl
mov
adc
repnz
aas
push
lahf
aad
mov
clc
test
add
inc
jmp
mov
adc
mov
popf
lock
lret
ret
orb
push
and
pop
lret
cli
imul
loope
cmp
sbb
mov
in
scas
fsts
lahf
dec
or
cmp
clc
lock
lods
lret
jp
jae
xchg
dec
xor
push
jecxz
aaa
jno
cltd
fs
jecxz
pop
sub
xor
cwtl
and
loopne
adc
jns
dec
add
jmp
gs
pop
mov
dec
mov
in
sub
jg
adc
sahf
mov
push
aam
adc
dec
mov
jl
lds
cmp
pop
sub
in
push
rolb
enter
fstpl
in
lods
mov
push
cltd
flds
fdiv
jno
mov
in
jmp
mov
dec
mov
ds
or
xor
sbb
movb
xor
cmp
ret
out
cltd
dec
cmpsl
xchg
mov
int
dec
jl
sub
push
mov
and
xchg
ret
pop
aaa
mov
add
pop
call
rol
inc
and
notb
arpl
dec
insl
add
jp
adc
divl
push
dec
mov
popf
pop
aas
stos
icebp
out
adc
bound
outsb
mov
orl
jo
jne
insb
mov
testl
daa
je
jnp
pop
loop
lret
xchg
push
std
push
mov
jmp
leave
ja
sub
gs
xor
xor
pop
jne
xchg
sub
jp
fwait
mov
adc
jnp
or
push
int
stc
lods
xor
sahf
into
div
dec
dec
stc
mov
aam
test
dec
xor
pop
sub
ja
movsb
pop
mov
pop
push
jle
dec
outsb
xchg
aaa
push
sub
adc
inc
jecxz
les
push
pop
jl
sub
adc
nop
rcpps
xchg
setp
addr16
pop
lods
pop
mov
pop
lea
out
push
push
fistl
push
inc
or
jmp
pop
in
sahf
and
add
popa
pop
cmp
mov
stos
mov
jmp
lea
and
fcmovnbe
cmpb
out
dec
aaa
xchg
aas
lret
xchg
pusha
scas
mov
lds
dec
xchg
and
push
fdivl
jb
stos
pushf
out
stos
int3
mov
mov
ja
pop
sub
js
jne,pt
movsl
dec
imul
test
in
or
popl
or
ljmp
dec
cmp
sbb
mov
jbe
movsb
dec
in
lods
pop
mov
add
stos
push
cmp
dec
push
hlt
push
push
adc
mov
mul
mov
cmp
add
ljmp
mov
jb
or
pop
mov
fdivl
sub
icebp
mov
int3
hlt
je
sub
fists
cltd
or
int
nop
jle
arpl
imul
cmpsl
in
cs
fwait
cmp
cwtl
and
jno
scas
push
xchg
cwtl
cli
mov
jo
dec
iret
hlt
fs
sub
pop
xchg
js
int
jp
xchg
xorb
aam
xchg
push
imul
gs
adc
sahf
xor
xorl
push
cmp
fdivrl
test
decl
test
inc
sbb
arpl
mov
mov
cmpsl
test
mov
scas
idivl
mov
xor
outsb
ljmp
cmp
fucom
outsb
or
sub
jae
inc
pop
lock
push
jnp
cmp
sbb
lods
pop
mov
and
adc
icebp
dec
push
sub
xorl
mov
lock
mov
insl
lcall
jl
movsl
fistps
push
inc
adcl
push
ss
cs
ss
jb
pop
cld
sub
and
xchg
sbb
divl
pop
sbb
pushf
sub
inc
mov
xor
sahf
lcall
hlt
mov
stos
dec
push
jl
ret
xor
ret
add
sar
repz
inc
mov
pop
loopne
fadd
iret
dec
mov
sub
scas
jp
int
mov
ljmp
or
mov
mov
insb
and
sbb
xchg
sti
xchg
add
dec
aad
push
sub
fs
sti
frstpm(287
lcall
hlt
rolb
or
inc
xchg
pop
jns
mov
xor
imul
jne
pusha
insl
sbb
pop
mov
or
gs
rcl
gs
jno
mov
jbe
pop
ret
imul
inc
mov
jns
pop
in
in
mov
leave
push
inc
xchg
in
mov
mov
clc
cmp
scas
in
inc
fsubr
in
mov
jmp
xchg
aad
sahf
sahf
loope
mov
push
xchg
xchg
dec
mov
std
shrb
jbe
popa
fistpll
sbb
std
dec
cmp
push
loop
adcl
mov
ret
cli
outsb
das
inc
xchg
lods
push
lock
push
mov
data16
movsb
data16
orl
outsl
lea
jecxz
notl
jne
mov
mov
mov
fcmovnu
outsl
push
mov
inc
stc
insb
inc
in
arpl
cli
les
outsb
pop
dec
in
stos
mov
pop
cli
cli
xor
sbb
cmp
aas
outsb
pop
jnp
xchg
mov
lcall
jmp
aaa
loop
ffreep
pushf
mov
adc
insl
enter
iret
mov
and
in
mov
or
pushf
test
mov
movsl
loop
mov
mov
mov
mov
jl
adc
or
test
ljmp
cltd
imul
pop
cmc
mov
movsl
sahf
arpl
push
inc
xor
aad
jecxz
ret
out
mov
mov
mov
nop
out
in
sbb
xor
mov
sub
imul
dec
jae
sbb
xlat
es
inc
mov
jns
push
outsl
sarl
jbe
out
xchg
jle
sbb
xchg
and
imul
movups
shlb
testl
mov
xor
dec
add
push
or
dec
daa
insl
cmp
stos
shrl
inc
cmpsl
mov
jle
pusha
cli
mov
or
shrb
jne
pop
mov
mov
dec
fldl
insl
pop
dec
ja
jecxz
mov
xor
movsl
jmp
jge
inc
inc
aas
adc
pop
dec
xor
lock
cmpsb
xor
mov
loope
mov
dec
aam
fcmovbe
xchg
or
mov
ljmp
scas
xchg
decl
mov
in
jb
cmpsl
sahf
lret
add
cmovle
xlat
out
inc
sub
aam
sbb
xorl
inc
push
dec
cmp
adc
pminub
xchg
pop
mov
push
cmpsl
xor
xlat
into
pop
and
cmp
bound
lods
scas
mov
pop
shll
les
or
fs
push
daa
and
nop
adc
shlb
and
in
enter
inc
enter
inc
icebp
jno
mov
jo
xchg
testb
push
pushf
aaa
cmp
sub
cli
push
shll
sti
loop
ss
pop
cmp
out
sub
popa
mov
aam
lret
shrl
fisttps
popl
sbb
ds
push
scas
call
or
jle
dec
dec
add
icebp
mov
dec
aas
dec
loop
cmpsl
mov
cmp
repnz
xlat
mov
aam
out
mov
fcoms
ret
rcl
fucom
inc
cmp
sub
mov
ret
pop
leave
gs
rcll
mov
jl
push
repz
clc
repz
and
mov
and
subl
imul
push
add
inc
jcxz
mov
and
xor
jbe
pop
mov
out
xor
jbe
push
push
add
mov
dec
daa
mov
shll
adc
daa
xor
xor
push
push
jmp
pushf
or
and
lcall
ret
xor
sbb
adc
inc
lods
fcmovnb
xchg
jp
push
jmp
mulb
and
out
adc
pop
movsl
jg
testl
cmc
loop
add
bound
ja
xchg
stos
cmc
data16
aaa
cmpsl
inc
cli
lea
jl
pop
sub
mov
xchg
outsb
mov
push
rcll
push
mov
ja
push
mov
sub
dec
mov
sub
das
dec
cmp
mov
aaa
stc
sahf
xor
mov
dec
pop
setno
or
sbb
nop
inc
outsb
lods
lret
mov
adc
jbe
in
jg
pop
push
in
pop
fwait
jno
insb
cvtpi2ps
das
fsts
testb
sub
repnz
pop
mov
xchg
jnp,pt
test
aam
ror
into
push
enter
jae
das
shll
cmp
testb
insl
jns
sar
repz
dec
xchg
nop
jmp
fwait
or
pop
mov
inc
add
xchg
adc
mov
stos
inc
js
xchg
xor
jecxz
fcoms
arpl
cmp
dec
xor
push
pop
lret
ja,pn
mov
pop
jp
jg
sbb
loopne
xor
lods
push
insb
push
in
outsl
movsl
mov
dec
mov
dec
add
loopne
cmp
into
in
popf
out
aaa
xchg
mov
popa
gs
pop
jg
loop
rcr
and
pop
out
cli
mov
popf
mov
xchg
pop
loope
je
jnp
mov
or
jns
xchg
shrb
test
in
mov
push
pop
mov
mov
add
sbb
loopne
enter
roll
xchg
and
mov
sub
inc
push
test
pop
jne
pop
daa
jo
das
inc
pop
mov
and
lret
faddp
jecxz
or
pop
dec
lock
imulb
cwtl
shl
push
inc
hlt
or
inc
sub
pop
das
imul
int3
jne
je
and
das
fwait
incl
lods
mov
imul
cmpsb
pop
ret
es
rclb
fwait
scas
cmpsb
pop
je
mov
push
cmc
nop
xlat
clc
out
inc
pop
scas
lods
movsl
cmp
loope
arpl
into
mov
adc
add
pop
and
lcall
stos
mov
sub
jo
fs
or
outsb
fsubs
cwtl
scas
sub
mov
mov
cmp
fwait
aad
xor
xor
xor
inc
loopne
xchg
lahf
adc
xchg
sbb
xchg
xor
leave
les
inc
pop
movsb
lea
in
jg
shl
cwtl
fcomps
mov
mov
sbb
fldl
repnz
test
aam
push
mov
cmp
mov
mov
cmp
mov
mov
jno
sbb
es
xbegin
mov
inc
mov
push
dec
mov
mov
xor
fdivp
mov
jmp
lds
xchg
inc
mov
ret
out
mov
lahf
div
push
dec
out
aam
cmp
push
test
jl
mov
mov
lahf
ficompl
xor
bound
cmpsb
jle
and
mov
arpl
pop
scas
add
xchg
lahf
sub
js
xchg
push
frstor
out
push
push
out
fwait
data16
inc
push
jle
leave
mov
inc
cmp
xor
inc
mov
es
pop
popa
jno
adc
lods
mov
icebp
mov
jno
jno
cmp
push
sub
in
lahf
orl
inc
scas
push
add
fistpll
shll
dec
fistpl
and
loop
dec
daa
dec
pop
fsubrs
cmp
mov
cltd
mov
cmc
mov
out
lods
ljmp
popf
sbb
mov
fwait
jmp
sub
les
loopne
add
scas
xchg
leave
sbb
pop
xor
out
push
movsb
aas
push
inc
add
repz
movsl
mov
jecxz
xor
mov
sub
mov
dec
ds
xchg
hlt
and
or
or
pusha
sbb
push
inc
fs
loopne
and
insb
cmpsb
test
push
fimuls
lret
sahf
scas
je
ds
shll
mov
stos
cld
or
cmp
inc
push
out
add
fisttpll
ret
cli
mov
ljmp
bound
sub
popa
mov
loopne
scas
cmp
ljmp
sti
test
andb
sub
cmp
and
sub
insb
xor
popf
mov
or
add
sub
stos
mov
dec
or
or
in
push
test
imul
push
dec
and
add
adcb
in
xor
loopne
insl
xchg
inc
insb
les
aad
sahf
call
lods
jp
mov
shrl
cmpsl
ja
rcl
inc
add
or
lods
cltd
and
out
jno
inc
ss
movsb
xchg
movsl
cwtl
mov
mov
pop
shll
ds
les
adc
and
cmp
outsl
out
gs
mov
mov
js
popf
testl
out
test
pushl
jae
lahf
scas
out
mov
mov
ljmp
mov
xor
dec
xchg
getsec
addr16
out
adc
insl
cmpsl
loope
fwait
jo
and
sub
and
jbe
and
push
cmp
add
xchg
add
call
pushf
iret
xchg
and
mov
jp
cmp
shll
cmp
daa
ja
pop
adc
mov
push
ret
mov
mov
pop
pop
mov
xchg
jge
pop
mov
xor
das
sub
popf
push
mov
lret
jne
fnstenv
movsl
sbb
or
lcall
lods
and
mov
mov
and
test
and
cwtl
xor
dec
cltd
clc
fdivrl
fistl
mov
jg
shll
adc
lahf
inc
aam
fbld
sarb
xor
nop
ret
inc
cmp
pop
add
test
insb
je
mov
or
jl
sahf
xor
stc
adc
sahf
fldl
or
jne
test
sti
xor
cmpsl
xchg
lods
dec
mov
inc
inc
nop
mov
jg
mov
lcall
shl
mov
movlps
mov
nop
addr16
psraw
mov
xor
inc
cmp
lods
lea
and
lds
cmp
cs
in
lock
cmc
std
inc
lods
pusha
jmp
mov
into
inc
arpl
cmc
aam
inc
xor
popf
notl
subb
ds
lods
lock
inc
mov
lret
psubusb
add
adc
xchg
mov
repz
dec
or
stos
or
and
mov
fs
imul
insb
cmpsl
es
sub
dec
push
fcompp
loope
pop
sti
dec
xchg
sbb
sbb
mov
push
jmp
repnz
stc
add
roll
test
mov
mov
xchg
testb
aas
fisubrl
add
shr
cld
lods
imul
and
js
mov
imul
push
mov
jl
sbb
in
pusha
out
sub
push
jns
mov
pushf
dec
jle
jo
dec
shlb
jno
adc
mov
mov
or
leave
mov
push
mov
aaa
stc
mov
nop
orb
int3
test
xchg
out
inc
in
loope
clc
data16
fisubl
pusha
popaw
or
fidivs
xlat
adc
add
pop
andl
jge
mov
jb
sti
push
pop
nop
pop
mov
decb
adc
or
xchg
sbb
cmp
rcr
les
jae
mov
mov
fcoml
lods
pop
inc
popf
hlt
inc
dec
mov
and
lcall
rcrl
out
shlb
xchg
push
pop
lods
jg
arpl
mov
in
xchg
mov
mov
adc
loope
adc
rcl
xchg
inc
cli
push
push
lea
pop
stos
lcall
jb
jg
or
repnz
enter
jnp
mov
mov
scas
xchg
xor
test
sti
xchg
rorb
aad
mov
sti
and
or
scas
sbb
or
out
mov
loope
push
lods
jnp
lock
jge
imul
dec
xor
sub
sub
es
cs
imul
mov
stc
xor
ret
sub
imul
and
cmp
pop
jp
add
ja
sub
sbb
push
sub
jno
cld
test
je
and
and
rolb
mov
leave
ljmp
push
arpl
adc
adc
imul
jge
push
lea
lahf
adc
xor
push
and
movsl
push
push
mov
mov
add
add
iret
test
mov
cmpsb
and
dec
mov
rcrl
push
sub
aas
sub
fwait
imul
mov
cli
xor
ret
inc
clc
cmp
push
mov
sbb
popa
dec
adc
mov
aaa
shrl
imul
lods
xchg
fcomps
jl
pusha
andl
mov
push
adc
lcall
sbb
aas
aas
into
cmc
sub
arpl
mov
cmpb
pop
jno
ret
jg
fs
dec
cmp
mov
in
or
mov
xchg
inc
sub
cmp
fincstp
jg
fisubrl
xorl
inc
shrl
pop
xchg
out
xchg
pop
adc
movsb
popf
lahf
adc
rcll
pop
and
in
call
jbe
fs
push
xor
jmp
or
ljmp
imul
pop
aad
cmp
lret
stc
aad
adc
ret
imul
arpl
mov
std
cmp
xchg
or
pop
jmp
bnd
fdivl
sub
cmp
push
adc
pop
pop
imul
sti
and
sbb
sub
repnz
mov
pop
scas
sub
pop
jp
imul
ret
adc
popf
icebp
ror
inc
and
xchg
loopne
xchg
in
jnp
xor
inc
xor
xchg
addr16
shll
cld
push
popa
jmp
mov
pop
push
mov
into
mov
stos
mov
xchg
inc
aaa
mov
int
ss
fdivrs
push
lock
sub
jae
or
push
jl
ss
cmp
push
mov
aaa
dec
sbb
pop
pop
aaa
js
fsts
pop
addb
test
cld
cwtl
mov
nop
daa
sarb
mov
pop
dec
clc
mov
xor
push
xchg
xor
test
test
out
pop
cmp
xlat
push
or
mov
inc
inc
cmpsb
xorl
test
jecxz
lds
push
mov
ds
inc
sbb
mov
xchg
xor
mov
ret
cwtl
xor
test
mov
aad
out
push
ret
jae
lods
cs
dec
int3
std
mov
lock
lds
cmp
pop
dec
push
xchg
dec
popa
test
sahf
iret
add
popa
xchg
cmpsb
pop
xchg
lods
and
scas
fcoml
push
sub
mov
outsl
inc
push
mov
fcmovnbe
int
xchg
and
sub
mov
adc
inc
or
into
add
int
sti
int3
aam
mov
mov
in
shlb
lods
jle
gs
jno
into
adc
pop
pop
dec
mov
push
repz
xor
mov
mov
ret
add
pop
mov
lcall
xchg
cmp
shll
js
xlat
lds
push
test
mov
and
ret
add
test
hlt
fucomip
adc
das
das
jg
cmp
pop
pushf
sahf
addl
stos
jge
xchg
pop
cmp
or
rorl
xchg
popa
xor
sub
mov
sub
xchg
sub
sti
popl
outsl
ret
cmp
outsl
scas
imul
imul
xor
inc
adc
test
jmp
clc
outsl
pop
dec
rolb
jo
jne
cmp
adc
pop
cwtl
adc
sub
jp
in
lahf
and
mov
jl
ds
out
cmc
add
mull
xor
push
sahf
inc
mov
pop
pop
sub
test
push
mov
aad
bound
rcll
add
mov
mov
loopne
clc
arpl
cs
movsb
in
mov
mov
negb
in
mov
scas
jnp
xchg
dec
pop
outsb
data16
jle
mov
ds
push
mov
mov
mov
dec
shl
push
cli
mov
sbb
insl
aas
or
pop
fs
lds
sbb
mov
test
popa
and
push
mov
push
fwait
lret
ds
cmp
add
int3
hlt
rorb
in
jle
sbb
dec
in
and
xchg
repnz
pop
testb
cmc
cwtl
mov
arpl
sbb
push
adc
lahf
pop
jo
cmp
adc
jp
xor
ret
cmp
add
jp
lods
cmp
mov
lcall
and
dec
mov
sub
popf
mov
pop
xor
scas
repnz
stc
push
xchg
pop
bound
sbb
pusha
repz
xchg
mov
cli
pusha
out
jmp
xor
orl
scas
xchg
or
sbb
out
jecxz
mull
mov
int
loopne
les
outsb
fcmovnbe
cmc
pop
adc
lret
pop
adc
rorl
pop
add
aas
iret
mov
fs
rorl
sbb
xchg
lret
pop
pushf
shlb
lahf
loopne
push
insb
jl
int
div
addr16
push
ret
sbb
aaa
mov
xchg
sti
xchg
fildll
cmp
std
icebp
repz
jg
xchg
mov
jbe
cmpsb
sahf
lahf
add
adc
xchg
cmpsb
lods
mov
insl
arpl
jg
imul
cmp
lods
pusha
xor
lock
lea
ljmp
dec
or
jecxz
testl
cmp
hlt
push
es
sbb
adc
popf
mov
cmc
jb
xchg
loope
xchg
icebp
mov
push
cltd
addr16
cmpsl
pop
iret
lods
fildll
pusha
push
ss
fdivp
and
cmpsl
xchg
or
or
in
out
xor
in
loopne
aaa
cltd
jmp
lock
adc
lods
enter
repnz
jno
fadds
insb
inc
pop
add
mov
movsl
fldenv
mov
cmpsb
and
push
pop
mov
popf
inc
leave
lea
lds
jmp
sbb
push
icebp
pop
lods
loopne
mov
sbb
cwtl
xchg
or
pop
int
sbb
roll
mov
pop
xchg
lods
jmp
jnp
loop
bound
ret
mov
push
std
stos
dec
push
jbe
inc
aas
fs
jge
pop
dec
dec
pusha
jecxz
jns
mov
test
fisubrl
add
shll
mov
adc
jecxz
int3
lock
pop
lds
or
adc
or
cmc
mov
pop
movsb
inc
xorl
lods
sub
cs
rcrb
cli
push
pop
leave
push
leave
sar
inc
inc
popf
dec
sbb
repnz
in
mov
arpl
fstl
sbb
jne
mov
xor
pop
shl
mov
jns
sti
sarl
mov
xor
xlat
arpl
add
icebp
jnp
bound
mov
push
shll
jb
negl
rcl
jecxz
subb
pop
ret
xchg
xchg
sti
hlt
cltd
lods
lcall
xor
test
jno
fbld
cwtl
pop
push
xchg
adc
sahf
fistl
ljmp
pop
mov
xor
lea
std
jne
xor
roll
mov
jae
and
xchg
and
icebp
decb
and
gs
testl
cld
xor
sub
xchg
ret
in
dec
mov
lea
insb
adc
jecxz
sub
ja
push
pop
fwait
loop
jle
movsl
mov
bound
jmp
movsb
ljmp
data16
daa
pop
or
sbb
or
ss
fwait
pop
ficompl
sub
imul
xchg
fistps
rep
out
cmc
in
ss
popf
add
jecxz
push
ds
ror
jle
pop
outsb
sub
mov
push
dec
inc
pop
aad
sub
jg
sbb
inc
jmp
push
int
dec
xor
test
lock
sbb
xchg
or
idivb
cmp
pop
leave
ret
cs
cltd
pop
gs
mov
lods
pop
mov
and
pushf
loope
sub
pusha
push
and
lods
and
ss
hlt
lea
adc
adc
sub
and
xchg
es
or
adc
and
enter
in
push
or
lcall
inc
xchg
cmp
or
and
shrl
out
push
cli
sahf
cmp
jae
mov
jmp
pop
int3
gs
fwait
lahf
divl
push
and
insl
stos
out
mov
cli
xor
or
adc
scas
inc
inc
xlat
sbb
and
popf
adc
push
sahf
and
mov
add
test
pusha
xchg
sub
jb
pop
aaa
cmp
adc
mov
mov
loopne
or
mov
pop
icebp
stc
cmp
xchg
sub
xchg
sub
cwtl
mov
xchg
add
aam
mov
movsl
cli
inc
cmp
std
imul
jecxz
fnstsw
xor
xchg
xor
movsl
and
cmp
adc
sbb
lahf
jbe
es
cmp
dec
mov
ljmp
in
mov
into
ja
xchg
push
mov
mov
pop
mov
add
rorb
mov
and
jb
notl
into
and
or
fcomps
out
push
ficoml
xchg
mov
sub
mov
enter
rclb
push
push
adc
hlt
sub
popf
jle
or
in
xchg
or
dec
popf
lds
add
cmp
jbe
mov
test
xchg
mov
jp
dec
out
xchg
xchg
adc
cwtl
lods
mov
pop
lahf
mov
sub
arpl
adc
movsb
loop
push
cmp
pop
lcall
push
in
loop
into
test
ds
sub
rclb
or
cmp
fdivs
int3
dec
xor
cmp
movsb
bound
dec
lds
daa
roll
add
adc
mov
xchg
mov
in
fucomp
stos
mov
and
rcrb
ljmp
out
xor
adc
mov
xor
in
sub
aam
popf
push
jmp
sub
dec
pusha
mov
mov
outsb
mov
imul
pop
repz
rcrl
cmp
repz
sub
lcall
enter
je
fdivrs
pop
and
mov
rorl
lret
popf
jns
loop
xorl
or
daa
ss
mov
mov
sbbl
jge
ja
pop
out
enter
xchg
and
mov
sub
movsl
cwtl
or
out
push
addl
data16
dec
push
int3
repz
pop
subl
hlt
push
loopne
rcr
sbb
pop
shlb
inc
add
arpl
push
mov
inc
stos
xchg
imull
in
add
lds
inc
jg
repz
and
mov
pop
fists
shl
popf
out
jmp
cmpsl
mov
push
lds
icebp
orb
mov
scas
and
xor
lock
cld
xlat
insb
pop
icebp
jl
add
add
adc
xor
idiv
adc
add
adc
and
inc
aad
test
fsubrs
jmp
rorb
push
gs
push
xor
sub
testb
outsl
and
sbb
cmpsl
dec
loop
mov
lds
test
jmp
mov
jl
pushf
adc
push
xchg
sarl
es
pop
push
sub
shlb
cmp
push
sbbl
in
add
jbe
mov
aad
xor
dec
and
jp
std
mov
pop
xchg
cmp
sub
adc
pop
outsb
ret
adc
inc
jnp
frstor
cmpsb
jo
dec
and
outsl
push
and
stc
dec
aam
rcll
ret
push
es
jno
lcall
or
movsl
push
jmp
daa
outsl
mov
and
jl
cli
or
push
cld
gs
in
push
popa
or
repz
jg
cmpsb
fyl2xp1
or
dec
jne
mov
lahf
aaa
test
jl
shlb
shll
mov
add
xchg
mov
sub
sbb
inc
cld
jg
cmpsl
clc
rcr
sbb
fwait
pop
nop
addr16
stos
add
xchg
repz
fistpll
push
cmp
fs
inc
pop
test
inc
repz
stc
sbb
xchg
test
int
test
or
fbstp
nop
enter
push
and
lahf
scas
xor
and
push
dec
pop
arpl
sub
rorl
bound
dec
jne
inc
inc
jne
push
sarb
cmpsl
mov
test
xchg
cmp
xchg
ret
shll
push
or
ljmp
adc
je
xchg
std
mov
gs
fwait
and
sub
mov
dec
pop
pop
in
and
cld
arpl
lcall
adc
mov
pop
and
xchg
daa
xchg
dec
sbb
push
sub
pop
xor
ret
adc
div
push
xchg
fisttpl
int
and
inc
loopne
test
movsb
xor
or
fisubrl
aam
or
pop
pop
mov
lahf
adc
dec
fmull
test
stos
mov
jae
popf
dec
shrb
nop
stos
popa
xorl
jp
pop
push
shlb
and
test
push
jno
clc
out
pop
cmpsb
lret
adc
loopne
pop
dec
out
clc
test
inc
mov
adc
into
xlat
loopne
sbb
dec
sub
bound
cmp
dec
dec
out
sti
movl
adcb
movsb
mov
or
loope
sbb
outsb
clc
jecxz
ds
lret
int3
cmp
xchg
cmp
pusha
loop
mov
xchg
xchg
in
inc
mov
push
cltd
pop
fs
mov
popf
lret
push
jne
push
and
js
loope
or
or
test
sbb
push
mov
mov
jb
mov
or
adc
das
dec
notb
rorl
iret
popa
push
dec
loopne
mull
jmp
sbb
cmc
mov
addr16
out
jne
pop
ja
pushf
insl
scas
pop
data16
lcall
and
rcrb
rclb
ret
aaa
outsb
push
in
test
pusha
repnz
pop
lods
aaa
fs
aas
insb
enter
xchg
enter
inc
inc
inc
dec
insb
stos
cmp
test
addr16
mov
push
cmp
and
cltd
pop
and
test
xchg
cmp
sahf
cs
ds
cmpsl
xchg
rcrl
pushf
cmp
mov
es
movsl
mov
lods
data16
int3
dec
fildll
loope
stos
fcom
popa
nop
sbb
cld
push
mov
cmp
mov
int
adc
push
jmp
push
dec
xchg
orb
daa
cmpsb
sub
and
cmp
adc
inc
sbb
add
rorb
enter
sbb
std
pop
test
popa
les
mov
fidivrl
shr
int
hlt
mov
fwait
imul
fistps
and
push
addl
cmc
push
mov
push
cmp
pop
loope
or
aaa
sub
mov
popf
in
dec
jmp
shl
sub
mov
insl
cld
das
cmp
addl
add
loope
mov
dec
push
lret
mov
outsb
ja
fcoml
and
aaa
faddl
movsl
data16
mov
fmull
inc
movsb
fimuls
push
rorb
xor
lock
jo
stc
xchg
sti
jle
add
loopne
pushf
xchg
dec
loopne
aaa
cmp
add
jnp
lret
clc
popf
adc
pop
add
inc
cwtl
cld
inc
decl
in
xor
jecxz
rclb
scas
xchg
adc
shrb
mov
vpshaw
outsl
xor
test
adc
dec
jbe
mov
xor
lods
inc
push
pushf
insl
out
leave
ror
gs
int3
daa
inc
std
mov
sbb
fwait
dec
into
cli
fsubrl
pop
or
les
mov
pop
hlt
test
in
xor
mov
mov
mov
lods
mov
mov
data16
push
out
scas
aad
cld
outsl
mov
jnp
push
push
push
add
cmp
in
adc
add
xor
stos
cmp
sub
in
cmp
push
mov
jae
sub
push
adc
xlat
cs
or
jmp
mov
xchg
gs
or
leave
lret
xchg
insb
pop
cwtl
inc
inc
or
mov
and
xor
cmpl
push
xchg
scas
adc
push
es
imul
mov
nop
xchg
mov
inc
imul
mov
cmp
mov
sub
enter
test
xor
cwtl
push
mov
inc
in
add
aaa
js
or
jne
mov
test
repnz
hlt
add
shl
jmp
xor
lock
in
sbb
scas
push
movsl
icebp
nop
cmpsl
dec
sbb
jne
push
jle
adc
jp
not
dec
imul
scas
sub
lcall
pusha
xchg
ror
fdivs
mov
aas
arpl
mov
mov
lods
pop
outsb
adc
lret
pop
mov
jne
xor
or
add
es
les
or
out
xor
mov
ds
jge
or
out
rcl
push
test
push
cs
ds
and
inc
into
popa
adcb
pop
jnp
popf
insl
mov
or
add
jp
repnz
sub
loop
sti
dec
mov
sbbb
les
xor
dec
movsl
mov
lods
adc
les
pop
out
mov
xor
cmp
mov
xchg
adc
cmpl
ret
insb
xchg
jbe
icebp
shrl
fdivl
or
testl
stos
in
fxsave
pop
pop
popa
arpl
and
xorl
lcall
mov
sub
loop
fs
mov
movb
add
testl
repz
and
setae
addr16
stos
push
add
mov
or
adcl
test
xor
add
jecxz
xor
xor
mov
add
cwtl
rolb
xor
loopne
out
jmp
outsl
lret
mov
push
jne
dec
add
sub
inc
pop
sbb
lcall
sub
stos
icebp
in
and
sbb
and
pop
jae
push
ja
jmp
pop
pop
stc
cmp
movsl
shlb
sbb
fidivrl
addb
dec
mov
cltd
xchg
or
jo
nop
shr
rcl
xor
and
gs
cli
mov
sti
stc
sbb
sarb
inc
cs
pop
sub
scas
int
test
push
xchg
mov
cmpsl
jg
int
es
push
adc
mov
setge
mov
add
cmp
push
fsubl
int3
aaa
sub
aad
das
enter
cmc
adc
jg
adc
sbb
call
or
dec
cmp
rorl
xor
das
jmp
dec
fsts
push
pop
adc
adc
or
lret
xor
adc
dec
lods
mov
push
cmp
mov
and
jle
mov
pop
ljmp
mov
pand
xchg
push
or
lds
std
dec
popf
test
iret
sarb
sar
adc
das
sub
cwtl
out
sahf
dec
jge
sbb
es
mov
jecxz
mov
test
mov
lea
push
sahf
cmp
enter
and
jnp
fucomip
xchg
pusha
mov
add
popf
iret
add
dec
push
leave
insb
loopne
inc
aaa
iret
daa
xchg
sub
in
jb
fldz
mov
pop
arpl
or
mov
mov
inc
daa
cwtl
in
mov
push
imul
xchg
xchg
scas
xchg
xor
out
ja
adc
mov
rolb
adc
push
jg
rcl
sbb
in
test
xchg
xchg
cmp
sub
in
jnp
sbb
cltd
mov
pop
jb
inc
stc
movsl
ss
int3
xchg
idivb
jecxz
mov
not
fnsave
dec
sub
dec
mov
pop
andb
sub
dec
jge
orl
mov
mov
sub
and
negl
push
or
int
outsl
mov
cwtl
cld
pop
cli
dec
ret
xchg
xor
dec
std
fldt
push
cmpsl
add
repnz
adc
movsb
aad
inc
imul
in
lahf
jnp
push
dec
lock
xor
fs
dec
mov
or
mov
or
lds
inc
gs
xor
ret
cmp
dec
mov
ljmp
xchg
add
nop
out
mulb
lcall
or
ret
sub
sub
loope
xchg
lea
out
or
mov
fmulp
rorb
mov
gs
lock
cltd
cltd
or
push
sub
das
sbb
cmp
sub
push
inc
mov
cltd
adc
movsl
xchg
jno
ds
add
into
jno
ret
inc
push
fnstsw
fstps
cmpsb
cwtl
std
push
mov
ret
cmp
or
sbb
jg
lea
mov
mov
push
aad
and
out
cmpsb
xor
xchg
pop
sub
imul
jne
mov
xchg
int3
inc
icebp
cmp
jle
outsb
adc
cmp
leave
or
int
xor
ret
ret
inc
movsb
imul
insl
dec
cmp
test
xor
pop
inc
adc
push
add
inc
ds
sbb
cmp
outsb
imul
jb
push
pop
mov
jmp
enter
outsl
inc
shrl
jecxz
je
push
adc
inc
jle
jo
lahf
cld
imul
adc
or
out
sbb
add
pop
inc
mov
test
imul
pop
std
int3
out
xchg
and
pop
in
stc
jg
imul
xchg
mov
push
std
or
int3
xor
rcrb
mov
fwait
inc
inc
cli
int
push
and
mov
push
mov
jae
sub
adc
mov
stos
sbb
push
sub
lds
in
lods
mov
adc
adc
push
scas
xchg
cld
ds
in
fnstcw
mov
loopne
dec
adc
xchg
sub
dec
in
movsl
jns
cmp
mov
shl
imul
adc
inc
ror
jbe
pop
lock
push
out
dec
jbe
ss
fwait
mov
int3
xchg
push
cwtl
cltd
mov
frstor
jp
adc
dec
add
xchg
cli
dec
jb
scas
jno
sbb
daa
imul
xor
subl
call
inc
out
cmp
lock
mov
aas
pop
push
mov
mov
in
outsb
cmp
popa
aad
xor
pop
inc
or
sbbb
jae
loopne
scas
fcmovne
or
aad
outsb
sbb
cwtl
fdivp
int
push
sub
xchg
sarb
int3
or
pop
push
rorb
insl
ffreep
pushf
fidivrl
pop
push
lods
push
cmp
ljmp
adc
jne
pop
push
sbb
lret
out
popa
fs
dec
packsswb
scas
scas
pop
stos
cmp
cwtl
jl
test
jecxz
cwtl
pop
cwtl
jg
inc
int3
fs
es
inc
sbb
and
add
mov
push
insl
push
fcompl
ja
xor
in
dec
sti
mov
xchg
or
lods
jmp
test
push
mov
dec
cltd
loopne
iret
sar
adc
out
pop
jg
jmp
loop
lods
push
xchg
fistl
cmpsl
or
cli
jmp
pop
and
cmpsl
sbb
out
xchg
xchg
lcall
lds
into
rorl
sti
inc
mov
adc
sub
jmp
popa
shll
sbb
mov
hlt
mov
mov
mov
iret
xor
call
out
in
mov
int3
jae
rcrl
lds
ljmp
in
and
mov
lea
and
mov
jns
arpl
rep
sbb
fadds
inc
push
jmp
mov
sub
jne
xor
xlat
jo
movsl
jge
mov
sub
or
daa
addl
mov
outsb
add
jp
adc
arpl
or
mov
dec
lret
mov
lret
cld
jns
push
ret
test
xor
jnp
popf
sbb
push
pop
push
push
mov
xchg
lret
lock
sbb
pusha
mov
xor
ret
cmp
lods
jmp
add
aam
ja
add
xchg
fcmovbe
adcl
push
dec
lcall
imul
sub
mov
or
fdivr
dec
xor
jl
dec
rcr
cltd
mov
repnz
add
sub
cmp
mov
inc
arpl
call
dec
mov
push
inc
inc
sub
sub
or
and
insl
pop
jmp
cmp
es
decb
dec
sarl
push
bswap
cmpsb
dec
jp
ret
outsl
inc
pushf
jnp
pop
loopne
shrl
mov
cwtl
fs
xor
out
ja
fucomi
mov
gs
add
inc
push
and
pop
inc
inc
pop
dec
insb
addl
cltd
mov
subb
jbe
aaa
cs
sbb
ds
fs
lahf
dec
inc
cmpsb
mov
mov
add
pop
adc
mov
movsl
out
dec
mov
jecxz
and
push
pusha
stos
mov
adc
jb
mov
jb
repz
jl
mov
scas
out
sbb
add
andl
dec
cmp
mov
leave
jb
inc
jne
cmp
lods
jne
popf
sub
xor
inc
cmp
jnp
dec
xchg
mov
jmp
ret
add
data16
push
fmul
xchg
fldt
pop
fisttps
and
cmp
push
lock
xchg
dec
insl
clc
in
rorb
adc
mov
push
push
mov
mov
sub
popf
mov
in
cltd
and
cmp
fcoml
jmp
jo
xlat
and
or
pop
add
jmp
xchg
add
or
lret
pop
fdivr
mov
aas
in
test
test
xchg
inc
test
std
enter
cmp
pusha
mov
push
lods
aaa
push
in
sarb
add
neg
jns
jecxz
ljmp
cli
jg
cmpl
cmp
push
sbb
xchg
and
pop
inc
jnp
cmpsb
fsubs
fstpt
in
lock
ret
jne
sti
shll
and
bound
adc
mov
sbb
sqrtps
cmpsb
jecxz
lret
mov
xchg
into
pop
pushf
in
js
imul
inc
adc
add
push
iret
lret
mov
jmp
fsubp
in
xor
or
adc
cmp
cmpsb
insl
daa
out
sbb
lock
outsb
fsubl
out
push
mov
add
ret
imul
mov
mov
dec
ja
sub
in
pop
sub
outsl
jb
inc
out
ss
scas
pop
inc
jb
div
or
insb
rorl
inc
cli
enter
dec
mov
js
shlb
inc
fwait
mov
push
inc
bound
push
inc
arpl
pusha
xor
lret
fcoms
mov
adc
mov
inc
ret
jb
leave
jns
cmp
in
hlt
out
dec
cld
enter
xchg
xor
stos
jl
mov
pushf
cld
fwait
mov
pmaxub
jae
hlt
xchg
sub
sbb
lock
jbe
pop
push
cmp
cli
jmp
mov
sbb
stos
xor
mov
cltd
int
jecxz
out
test
insl
push
movsb
sub
inc
cltd
loopne
fsts
fildl
loope
push
sub
ret
sub
test
fs
sub
ret
dec
into
leave
sub
fs
es
sbb
repz
and
aam
cltd
sbb
dec
scas
sub
mov
out
outsl
jle
mov
adc
dec
aaa
dec
enter
adc
sub
testl
nop
stc
ficomps
ficoms
lock
mov
and
cmpsl
adc
jp
in
leave
ja
iret
push
jmp
jnp
rorl
dec
js
or
outsl
push
pop
cmp
movl
sbb
push
add
js
movsb
lock
repnz
js
pop
jl
adc
pop
xor
rcrb
pop
es
mov
mov
or
jecxz
lret
inc
addr16
adc
cmp
sti
push
inc
notl
mov
std
stos
subb
jg
cs
movsl
cmp
xlat
sub
test
adc
aad
xchg
sti
cmpsl
arpl
scas
mov
and
push
bound
call
jecxz
adc
outsl
add
movsb
xor
loope
sub
dec
cmp
dec
dec
dec
outsl
mov
xchg
pop
out
gs
dec
call
imul
aam
xchg
jno
xor
divl
mov
out
xchg
add
ss
int3
sub
sbb
fistl
jne
jnp
in
push
dec
rclb
xor
js
js
adc
sbb
mov
mov
jae
ljmp
repnz
mov
imul
or
cmp
xor
and
push
jbe
repz
adc
movsb
pop
fdivl
jno
push
inc
xchg
or
cmp
dec
jecxz
jge
dec
push
sbb
xchg
aaa
sbb
xchg
adc
in
mov
js
test
mov
sbb
out
mov
lret
jecxz
insl
int3
aad
xor
fmuls
or
cs
fistps
repz
jg
out
cmp
xor
scas
push
fidivrl
push
ss
xor
test
jb
inc
push
inc
inc
cmp
test
lret
scas
clc
lahf
das
adc
mov
subb
jg
in
ds
xlat
repz
scas
pop
sbb
insb
pushf
mov
sahf
or
inc
adc
lret
imul
mov
pop
scas
mov
mov
cli
aas
jae
mov
add
push
cmp
inc
push
ds
cmpsb
loopne
stos
pushl
mov
test
es
mov
mov
and
test
mov
inc
xor
pop
ss
inc
testb
adc
mov
cmc
cmp
stos
mov
sbb
aaa
dec
ja
xor
out
fnstsw
mov
inc
sub
pushaw
lcall
loop
mov
jbe
inc
nop
cs
sahf
in
pop
sti
adc
adc
pushf
imul
mov
xlat
cs
shrb
pop
jne
cmc
adc
imul
xor
jnp
sbb
movsl
inc
mov
xchg
test
test
fldt
movsb
shlb
and
sbb
pop
sub
test
add
jb
mov
push
mov
fisttpll
lods
jg
aam
lock
lds
mov
and
lock
inc
aas
loop
daa
sub
and
shr
stc
xchg
add
or
lds
sbb
stos
imul
xlat
sub
leave
lock
push
xchg
fistps
fidivrl
mov
daa
ds
leave
jmp
pop
inc
gs
jle
dec
push
add
pop
negl
or
xor
push
mov
daa
sub
pushf
lret
jp
cmp
push
gs
sub
mov
cmp
lret
call
add
frstor
imull
adc
sub
loopne
pop
out
inc
in
call
sub
test
and
push
mov
in
xchg
xchg
cmp
or
lock
jb
aad
jmp
dec
or
sbb
pop
cmp
daa
lds
mov
arpl
fwait
in
xor
js
dec
fildll
xchg
pusha
mov
inc
mulb
inc
inc
int3
inc
mov
mov
call
aam
mov
sbbb
stc
jecxz
and
or
cmp
jnp
adc
jnp
popl
sti
dec
mov
push
mov
mov
jge
sbb
mov
jecxz
enter
rcl
pop
push
ret
in
or
mov
fs
cli
imul
push
inc
js
pop
push
xchg
fldenv
push
push
mov
leave
clc
cmpb
sahf
dec
aaa
fsubs
testb
stos
jae
shll
ficomps
xchg
cmp
dec
or
adc
call
or
stos
pop
into
repz
add
mov
fsubr
int
ret
sbb
hlt
sbb
jecxz
mov
jmp
outsb
roll
das
jne
mov
scas
outsl
pop
add
clc
ljmp
nop
into
sub
scas
movsb
pop
adc
xor
arpl
ja
outsb
sarb
xchg
movsb
popl
jg
push
mov
and
sbbl
shlb
or
dec
inc
insl
or
pop
mov
adc
cmp
in
test
xorb
aam
test
pop
daa
and
ljmp
mov
mov
scas
fidivrl
or
mov
outsb
jecxz
repz
outsb
xchg
xchg
pop
mov
jg
and
push
roll
mov
mov
sti
xorb
leave
push
inc
cmpl
jnp
adc
addr16
mov
and
arpl
fninit
cld
cmp
shr
lcall
addr16
jnp
aas
loopne
mov
or
jp
adc
adc
sub
mov
push
test
dec
dec
inc
lret
test
add
in
mov
cmp
or
bound
testb
xor
add
mov
gs
add
stc
clc
rorl
popf
adc
lret
and
push
push
cmc
sub
pop
andb
cmp
movsl
xor
xor
clc
mov
ret
mov
mov
incb
xchg
icebp
or
outsl
lahf
mov
adc
iret
repz
sbb
daa
xchg
pop
push
sahf
adc
jle
mov
je
and
pop
lret
sar
mov
nop
mov
ja
add
cmp
mov
repnz
xchg
mov
test
std
mov
xchg
in
mov
push
mov
fists
je
pushf
arpl
cwtl
iret
shll
push
mov
arpl
xchg
jmp
in
inc
lods
sbb
notl
int
dec
lret
mov
popa
fnstsw
stc
std
scas
xchg
or
in
inc
or
out
xor
fwait
fs
mov
inc
addl
or
sti
mov
push
cmp
lcall
push
repnz
dec
mov
pop
push
add
mov
ficomps
cmp
scas
adc
push
test
xchg
push
sbb
sbb
inc
or
int
loop
or
sub
data16
push
out
test
mov
testb
jne
mov
push
xchg
repz
leave
or
mov
inc
popa
pop
xor
xchg
aas
sub
adc
rcll
add
cmp
fistpll
cmpsb
xor
outsl
pop
and
jmp
test
fs
inc
adc
cld
push
mov
mov
inc
and
insb
mov
xchg
shlb
test
pop
adc
adc
aas
in
xor
call
cld
pop
sbb
mov
out
jnp
fwait
gs
out
push
or
xor
stos
mov
ds
loopne
adc
imull
leave
mov
out
mov
push
cmp
push
lret
mov
outsb
jno
mov
push
aaa
movsl
test
fisttps
jns
popa
mov
je
scas
mov
push
sbb
jns
mov
push
insb
scas
cmp
ret
adc
push
cmpsl
push
pop
int
fsubp
stos
push
and
inc
xchg
ljmp
pop
add
mov
test
stc
mov
pop
inc
mov
lret
xor
lret
mov
xchg
shll
jmp
bswap
out
fisubrs
loope
lock
sti
add
push
jg
xchg
mov
mov
dec
enter
pop
fstpt
shlb
insl
cmp
push
fwait
cld
cli
mov
int3
ljmp
icebp
lret
dec
cwtl
inc
loope
and
jecxz
cli
xchg
mov
xor
push
mov
into
jns
int3
sbb
test
inc
jnp
daa
imul
cmc
mov
lods
jl
xchg
mov
and
dec
cmp
and
inc
or
clc
add
add
movsl
fnstsw
movsl
cmc
jno
jp
outsb
sbb
push
es
movb
cli
out
and
jnp
test
shll
push
cmp
push
jnp
xchg
push
inc
fincstp
pushl
nop
nop
inc
hlt
pop
fildll
xchg
sti
ret
mov
rorb
and
push
bound
sub
mov
cmp
fidivrs
cltd
addb
test
cmp
lret
xchg
xor
xor
xor
stc
es
pop
out
mov
xchg
adc
xlat
adc
testb
out
sti
pop
call
call
mov
ja
jge
test
or
add
sbb
sbb
push
push
sbb
xor
idiv
cmp
cmpsb
mov
sub
mov
jecxz
add
jo
mov
clc
js
hlt
movsbl
enter
pop
loop
test
popf
scas
sarb
fdivl
es
addr16
jmp
cmp
pop
xchg
pop
or
fmuls
or
das
arpl
stos
std
pmulhuw
arpl
ret
addb
cmpsb
mov
pop
mov
push
aas
xchg
mov
enter
push
enter
pop
call
scas
sahf
push
dec
add
inc
leave
mov
bound
add
jae
call
fbld
stos
xor
or
repz
xchg
in
out
ljmp
aaa
push
dec
cwtl
in
movsb
sbb
mov
fsincos
pop
or
adc
mov
cmp
popa
loope
cmpsl
and
int3
dec
cmp
xchg
into
or
lods
cmp
mov
ljmp
xor
cmpsb
mov
hlt
jmp
test
and
cltd
mov
mov
das
push
imul
sbb
mulb
ss
pusha
out
xchg
xor
ss
cmp
xor
mov
or
pop
xchg
jno
test
jns
pop
fwait
jge
jge
mov
and
ds
jb,pt
sbb
outsb
dec
xchg
out
insl
xor
sub
sub
mov
xlat
xor
or
xchg
sbb
out
addl
inc
push
xor
add
add
jecxz
xor
push
push
mov
sbb
fwait
sub
popf
inc
ret
daa
stc
les
ljmp
pop
jg
pop
pusha
scas
sbbl
into
loopne
push
gs
pop
test
std
adc
cmp
sbb
or
mov
cmpsl
xor
xchg
lea
lea
xor
mov
aaa
push
les
in
sub
add
js
mov
out
inc
loop
fucomip
lcall
sbb
cld
sub
add
mov
ljmp
dec
repz
les
push
mov
lcall
mov
xchg
push
cltd
lcall
pop
mov
pop
xor
clc
adc
pop
sub
call
ficoml
cmp
add
mov
nop
mov
sbb
fimull
inc
push
push
xor
xchg
inc
lret
inc
jg
je
mov
sub
test
sub
movsl
adc
outsb
cmp
pop
pop
mov
lds
pop
lods
mov
jl
sbb
lcall
arpl
testb
pop
push
push
call
push
out
xchg
ss
ds
shrb
jle
int3
xchg
push
repnz
xor
push
push
mov
pop
out
insb
mov
mov
loope
pop
jecxz
into
sti
inc
push
xchg
mov
iret
ret
mov
xchg
xchg
outsl
repz
mov
rorb
imul
test
sub
mov
in
mov
push
xchg
sub
testl
jmp
sar
dec
or
mov
xchg
sub
adc
jbe
addb
sub
cmp
pop
inc
insl
int
mov
int
xchg
dec
cli
push
jecxz
xchg
xor
push
push
stos
iret
xor
das
movsl
adc
mov
data16
or
and
pop
mov
stc
in
xchg
sbb
in
inc
shl
popa
std
fsubr
mov
mov
in
xor
xchg
stc
ficomps
mov
pop
xchg
rcrb
in
test
cltd
pop
mov
lret
popf
mov
pusha
mov
adc
cmp
enter
ja
jbe
cs
mov
mov
jmp
jmp
clc
aad
insb
or
in
int
out
push
mov
cli
inc
aam
out
mov
inc
insl
inc
mov
xchg
test
fdiv
popa
ficompl
ss
sub
fidivrl
lahf
jmp
pop
or
push
xor
gs
dec
sti
mov
out
popf
cmc
in
dec
frstor
mov
adc
mov
mov
pop
and
sbb
xlat
roll
je
mov
jl
inc
mov
sbb
sbb
add
lea
dec
int3
movl
bound
dec
inc
shlb
test
pop
xor
dec
call
sahf
inc
push
mov
dec
fdivrs
inc
ja
outsb
sahf
loopne
loop
adc
dec
lret
add
sahf
out
jbe
addr16
pop
inc
pop
mov
pop
or
sub
mov
mov
out
push
mov
imul
js
test
adc
insb
mov
cmp
insl
push
sahf
adc
add
cmc
xor
pusha
sbb
stos
cmp
fdivl
lea
fwait
jno
roll
test
test
fisubl
sub
jbe
mov
mov
add
xlat
xchg
sarl
std
call
inc
push
xchg
gs
inc
sub
push
mov
nop
out
adc
cmp
jge
cmc
arpl
or
mov
push
adc
cmpsb
or
ror
stos
jecxz
pop
shr
or
inc
into
xor
cltd
aad
push
push
cwtl
mov
add
adc
lds
mov
movsl
mov
insl
add
int3
and
js
test
xchg
push
mov
int3
fistps
scas
hlt
xchg
loopne
xchg
mov
inc
add
xor
and
fbld
les
adc
stos
and
imul
repz
or
outsb
dec
fcompl
in
inc
lds
mov
jle
bound
sti
out
push
mov
cltd
aam
sbb
sub
add
hlt
mov
and
divl
div
ja
sub
repz
mov
xlat
xor
in
dec
mov
xor
rcr
mov
sbb
negb
sti
and
scas
jnp
rcl
dec
cld
mov
sub
int3
out
out
push
jo
fs
mov
ret
je
call
dec
repnz
data16
push
dec
mov
xchg
test
ds
dec
push
xchg
mov
dec
out
adc
sbb
xor
cmp
adc
mov
push
cld
jecxz
push
xor
xor
mov
dec
orl
or
fwait
lahf
jo
adc
mov
outsl
aas
pop
fnstenv
lock
dec
mov
shll
add
mov
xchg
imul
ds
outsb
inc
repz
fisttpl
jg
cmp
mulb
sub
fsubrl
jecxz
int
jmp
sbb
ret
sub
xor
popa
push
and
xchg
imull
sub
cmp
add
fisubrl
or
cltd
sub
add
das
inc
mov
mov
add
jbe
into
sbb
arpl
scas
adc
jo
sarl
lods
fmuls
aas
lods
dec
cs
push
sti
fldenv
mov
xor
das
pushf
movsl
pop
xlat
cmp
test
cwtl
loopne
push
es
orl
fisttpll
inc
xor
sbb
xorb
pop
mov
mov
movsl
scas
cs
and
sub
ret
sbb
pop
fists
lds
rcl
sub
jbe
arpl
es
dec
dec
fcompl
das
ds
push
fsubr
pop
cmp
sbb
aaa
fmul
sub
ljmp
push
sub
mull
inc
jp
movsb
push
pop
cmpl
data16
jg
stos
pop
dec
sbb
sbb
and
or
imul
loopne
psubd
sbb
and
imul
and
or
roll
out
in
int
fwait
pop
and
xchg
pop
mov
dec
push
adc
aaa
push
jg
mov
mov
ret
push
mov
mov
divl
xchg
popa
push
dec
sbb
pop
dec
cwtl
pusha
lret
loopne
push
mov
stos
push
lret
inc
inc
sub
sahf
cld
loope
cmp
loop
imul
cmp
loop
pop
jecxz
aaa
cmp
mov
pop
and
rorb
mov
sti
jmp
daa
clc
xchg
test
pop
orb
add
push
enter
pop
xlat
in
pop
jg
lcall
jno
jmp
cmpsl
mov
mov
iret
cmc
in
pop
push
xchg
mov
pop
xor
add
or
adc
scas
mov
cmp
out
out
cld
movsb
mov
add
mov
inc
push
push
shl
dec
jge
cltd
inc
adc
out
inc
popf
faddl
add
inc
dec
xor
fs
jno
jge
bound
jbe
xor
pop
push
push
cmc
pop
push
pop
rorl
repz
and
mov
or
add
rcrl
orb
out
inc
inc
pop
dec
push
adc
pop
xlat
sarl
jp
out
arpl
mov
push
and
icebp
scas
or
and
sti
mov
movaps
stos
mov
adc
inc
inc
ja
pop
sysexit
loope
push
jns
sahf
idivb
enter
push
push
leave
sub
inc
stc
in
sbb
pop
push
bound
mov
or
and
jnp
std
adc
add
add
xor
mov
mov
mov
mov
mov
adcb
cmp
mov
mov
cli
aam
loopne
das
stos
adc
xchg
mov
das
daa
adc
mov
iret
int3
out
push
sbb
aas
pop
jecxz
jae
lods
inc
negl
imul
cltd
mov
mov
mov
pop
jg
adc
pushf
or
xchg
shl
aaa
mov
fmull
cmovns
into
lret
fistps
add
icebp
inc
dec
nop
test
adcl
and
test
sti
jmp
imul
push
pop
dec
jb
cmp
fwait
lds
fsubr
sbbb
out
add
jne
inc
jno
or
add
sarb
sbb
fidivs
repz
ret
dec
pop
test
lods
or
jo
push
adc
jge
push
ror
les
shll
testb
push
mov
push
mov
cmp
test
mov
pusha
insb
les
push
push
pop
out
and
xchg
mov
add
push
dec
scas
jg
cmp
and
xchg
int3
xor
push
jecxz
jo
jl
sub
jae
outsl
out
push
mov
out
outsl
and
cltd
lahf
out
outsb
insb
hlt
rcrb
and
or
xchg
xor
mov
and
or
out
call
dec
sub
xor
loopne
fcmovbe
mov
test
faddl
adc
aas
jl
int
cltd
xchg
xchg
pop
sub
stos
jp
and
notb
lret
pop
jae
sbb
pusha
les
fs
mov
in
dec
outsl
pop
sub
scas
mov
shl
push
pop
jecxz
hlt
mov
ret
adcl
loop
in
int
adc
movsl
sub
xor
pop
sub
arpl
pop
lods
lret
ds
lret
movsb
loop
mov
mov
mov
imul
xor
add
in
lock
push
out
sbb
dec
ja
mov
enter
push
shrl
mov
mov
and
ret
jb
sub
mov
jl
jb
fldenv
add
mov
lds
aam
int
fsubs
cmpsb
mov
into
sub
lahf
and
ja
jmp
jbe
jnp
ja
sbb
sub
sbb
in
lea
mov
ja
dec
xchg
jp
fsts
in
rol
leave
mov
loope
pop
pop
add
pop
mov
popa
xchg
out
aaa
jmp
stos
push
dec
and
scas
xchg
jb
iret
dec
or
call
out
mov
bound
lret
test
push
sub
pop
push
push
lock
into
push
aam
mov
cmp
out
adc
mov
out
pushf
pop
and
rcl
lods
int3
dec
bound
sbb
pop
xor
sti
cmpsb
mov
rorb
fwait
out
cltd
push
pop
lret
push
pusha
sub
add
pop
jle
xor
mov
push
or
cltd
jns
hlt
dec
addb
stos
leave
or
push
push
nop
lds
dec
pushf
inc
das
jno
adc
mov
dec
inc
xchg
adc
clts
iret
jmp
imul
mov
push
adc
xchg
out
mov
outsb
dec
lret
adc
add
or
lds
cmp
mov
mov
push
adcb
xchg
mov
pop
lea
leave
cmp
lods
push
sahf
daa
pop
xchg
dec
mov
or
dec
cmc
bswap
adc
je
sub
test
lock
dec
inc
imul
repnz
cmp
and
pop
mov
jnp
dec
cmp
mov
pop
sbbl
lcall
in
mov
in
xor
and
insl
adc
dec
mov
cs
xchg
leave
push
mov
fisttpll
inc
sub
ljmp
das
test
or
in
inc
fwait
mov
xchg
in
in
jle
rolb
add
add
idivb
loopne
cmp
mov
ret
push
call
scas
mov
sbb
cmpsl
in
cmp
add
inc
sbb
call
repnz
repnz
repnz
jl
add
xchg
xchg
dec
ret
push
incb
or
pop
pop
lea
out
mov
cmp
push
ljmp
lcall
and
jg
call
xchg
jl
nop
leave
dec
fs
sub
pop
mov
mov
xchg
xchg
pop
jns
cmp
fs
pusha
pushf
add
push
aaa
sbb
adc
test
inc
push
loop
cmp
adc
adc
jno
ljmp
lods
ljmp
jge
sub
mov
and
push
mov
orb
call
arpl
pop
subb
lret
adc
sbb
je
mov
push
add
adc
sbb
int3
adcl
push
xor
jp
and
sub
jg
push
ret
sbb
push
aas
in
mov
jne
rclb
and
repz
jl
fistps
fs
mov
dec
cmp
sti
jns
inc
ficomps
inc
idivl
pusha
iret
lock
cmc
jmp
aas
adc
cmp
jp
popf
bound
mov
xchg
mov
mov
mov
jne
popf
gs
jle
popa
xchg
jno
cmc
cltd
fwait
lds
dec
rolb
jbe
cmc
dec
pop
push
test
push
and
subb
cli
add
inc
dec
imul
inc
subl
stc
add
sub
xor
test
cmp
aad
xor
cmpsb
lods
add
push
jo
push
repnz
dec
scas
mov
xor
je
imul
mov
nop
repz
cwtl
mov
lock
sub
mov
adc
jb
pop
sbb
jge
cmp
enter
int3
and
lret
repnz
movsl
dec
cmp
fdivrs
add
cmpsb
dec
iret
cli
inc
mov
outsb
jmp
ljmp
cmp
xchg
lret
fmull
xchg
push
push
pusha
in
cmp
inc
jne
aad
push
and
cli
fs
add
daa
push
shll
and
orb
mov
ss
out
mov
dec
scas
andl
or
jnp
mov
je
ret
movsl
add
or
push
or
inc
divb
mov
out
push
jmp
sub
dec
orb
lea
or
sub
xor
inc
jns
mov
out
popa
nop
sub
lea
mov
pop
pop
jg
sahf
add
insl
adc
ficoml
nop
cmp
inc
fsubrp
nop
add
inc
and
in
loop
fwait
out
ja
add
shrl
out
fxch
xchg
xchg
mov
adc
or
dec
mov
ficoms
adcl
pop
fwait
mov
pop
and
data16
sbb
jbe
xor
cmp
neg
sahf
mov
ss
lods
movsb
mov
xor
xchg
les
push
sar
jmp
xchg
cld
add
mov
or
pop
pop
mov
xor
pop
stos
mov
mov
mov
push
mov
push
and
sbb
mov
and
add
mov
xchg
lret
sbb
rcrb
pop
pop
cmp
mov
mov
mov
mov
cld
mov
cmp
inc
in
btr
pop
cmp
pop
andl
movsb
sti
mov
pushf
sub
aas
cmp
lods
insb
sbb
cmpsl
aaa
fdiv
xor
or
dec
adc
in
and
jns
cmp
lahf
int3
and
ret
icebp
js
push
ret
movsl
mov
imul
or
icebp
enter
push
xor
xchg
mov
mov
jecxz
and
inc
mov
mov
faddl
movsb
mulb
or
fisubrs
stos
pop
push
add
and
loop
jns
out
mov
aas
mov
adc
pop
cmp
lcall
fldcw
int
cmp
jl
call
xchg
push
push
sti
int3
pop
xlat
es
and
mov
sub
mov
xchg
fstl
cmc
and
iret
enter
cmpsb
push
dec
mov
arpl
mov
mov
mov
pop
pusha
sbb
adc
sub
insl
mov
hlt
loop
push
rcrl
adc
std
inc
and
lret
sbb
sahf
outsb
xchg
loope
push
shr
and
sbb
fildll
jmp
ficompl
iret
jbe
rorb
in
xchg
add
ss
mov
jecxz
movsl
dec
sarb
cs
divl
inc
nop
in
mov
inc
lret
mov
inc
inc
and
stos
rcll
repz
andl
jno
mov
xchg
cmp
adc
test
lahf
leave
adc
movsl
xchg
in
in
and
test
aam
repz
lods
mov
pop
aaa
hlt
mov
lret
mov
sbb
add
pushl
jg
lret
jb
leave
pop
adc
xchg
mov
add
pop
out
mov
and
xchg
je
mov
adc
lret
pop
or
inc
sub
jmp
dec
xchg
cmpsl
mov
addb
sbb
and
push
lock
jmp
fwait
adc
test
pop
mov
jle
and
sbb
in
stos
and
mov
jmp
rcr
jmp
jl
test
jbe
add
xchg
dec
fimull
je
loopne
or
dec
cmp
pop
sub
or
andl
xor
xor
leave
loopne
dec
lock
mov
mov
xor
cmp
or
arpl
mov
aam
pop
sbb
jl
inc
loope
int3
clc
divb
andl
or
mov
dec
dec
int3
lock
inc
or
lea
pop
dec
add
add
sub
fs
push
gs
and
pop
xchg
jnp
stos
repnz
lcall
or
mov
insb
add
bound
pop
icebp
bound
cs
pushf
das
sbb
jmp
sbb
cwtl
enter
mov
imull
shlb
pop
fs
cmpsl
or
xor
mov
sti
ja
stos
add
in
sbb
enter
jg
xorl
lcall
mov
adc
std
xchg
rcll
xor
inc
mov
mov
hlt
clc
je
xor
push
nopl
hlt
mov
xchg
dec
adcb
cmp
xor
sar
in
xchg
jp
xor
fistps
mov
xchg
or
insl
enter
out
and
mov
or
or
es
cs
jbe
movsb
cmp
lods
xor
loope
jecxz
fmuls
aam
xor
clc
popf
pop
and
in
inc
pop
xor
shrb
cmp
lods
test
push
lds
jecxz
cmp
dec
sahf
sti
scas
xchg
inc
and
inc
or
jo
mov
std
push
fwait
aaa
fcmovb
ljmp
fmull
mov
mov
imul
push
scas
dec
dec
add
jg
sub
popa
mov
xchg
test
jmp
es
push
xor
dec
sub
push
lahf
jbe
mov
mov
inc
and
xor
xor
adc
add
inc
test
fwait
shrl
in
inc
cmp
xchg
mov
xchg
push
sbb
sbb
cmpsb
jae
in
inc
cltd
xor
fisubrl
popa
pop
mov
addb
pop
jmp
das
insl
movsb
mov
lds
xchg
lea
popa
dec
fdivrs
fsub
dec
lcall
jg
xor
fmul
imul
dec
test
and
outsl
add
and
or
arpl
push
adc
test
add
jo
cmc
gs
push
lret
mov
sub
out
leave
jecxz
mov
arpl
sub
cmpsl
icebp
jne
mov
and
cmpsb
mov
jle
dec
cmpsl
sahf
js
jo
cltd
push
inc
inc
in
cltd
mov
outsb
movsl
mov
mov
lds
xchg
push
lea
push
push
out
pop
leave
popl
jne
dec
dec
scas
clc
insl
xchg
cmp
xchg
dec
inc
and
dec
fldcw
pop
pop
mov
adcb
scas
sbb
loop
push
shll
or
or
or
pop
mov
mov
jbe
pop
dec
add
pushf
mov
stc
outsl
lds
inc
fs
lret
fistpl
jbe
dec
loop
shll
and
insb
daa
ds
xchg
adc
out
add
ss
ret
out
wbinvd
and
sub
dec
jns
outsb
icebp
xor
or
mov
outsb
leave
pop
add
cmp
out
roll
fistpll
fimull
mov
sti
loopne
stc
in
ds
div
and
or
and
sbb
pop
sbb
inc
pop
stos
xor
push
cmpsb
arpl
xor
jb
call
loop
inc
jg
pop
sti
and
jb
pusha
push
dec
cmp
arpl
leave
add
jg
xlat
push
fcompl
out
cli
daa
test
xchg
add
scas
lds
xor
cmp
inc
cmp
outsl
and
sub
jmp
fldt
add
xchg
rclb
aam
adc
push
xchg
push
std
insb
lock
jae
pop
and
push
mov
or
int3
movsb
mov
xor
nop
cmpsb
std
rcrl
out
fwait
out
or
inc
sbb
leave
call
xchg
ret
es
inc
scas
inc
mov
xor
fiaddl
nop
stos
xchg
jmp
pop
inc
adc
sarl
or
xchg
inc
and
sbb
aad
fdivr
and
xor
in
push
test
pop
jmp
add
fsts
adc
mov
push
pop
test
dec
sbb
sar
fisubrl
and
mov
push
sbb
popf
xor
neg
cwtl
mov
dec
scas
mov
sbb
mov
shll
pop
fidivs
cltd
jge
push
pop
inc
pop
xchg
dec
movsl
test
pop
test
mov
push
mov
add
enter
inc
push
and
roll
rclb
mov
stos
not
nop
cwtl
std
dec
adc
and
jno
adc
jg
es
xlat
mov
lods
shll
div
mov
xchg
fwait
ja
arpl
je
test
aaa
fisttpll
js
and
in
lahf
xchg
mov
cmpsl
lods
fs
xor
ljmp
fiadds
aaa
push
lahf
cwtl
repnz
cli
mov
dec
enter
sbb
mov
mov
mov
inc
push
or
negb
xchg
stos
inc
repz
xchg
or
addl
add
leave
and
and
jno
mov
xor
shlb
jbe
iret
imul
mov
test
inc
xchg
push
mov
jno
sti
add
loop
in
mov
fsubs
insl
into
sti
lock
pop
jg
and
fwait
jns
pop
pop
jg
mov
adc
mov
jge
test
sub
mov
jne
push
sub
xor
pushf
pop
mov
test
mov
and
addr16
int3
outsl
sti
cs
jns
pop
cli
sbb
rcrb
mov
dec
adc
sub
dec
fwait
sub
pop
xor
jne
push
inc
xor
xor
push
push
jo
and
or
pop
out
pop
cld
mov
frstor
mov
insl
jge
push
push
mov
sub
scas
orb
leave
jge
pop
push
fcom
mov
jns
sbb
lock
lret
mov
movsb
movsb
or
jl
stc
pop
mov
in
aas
arpl
jmp
sbb
icebp
or
or
adcl
shlb
jns
aaa
js
dec
hlt
imul
sub
or
data16
jbe
dec
xchg
or
loopne
mov
adc
repnz
add
sub
add
jae
cmc
pusha
test
clc
repnz
push
push
adc
cmp
mov
sub
iret
fs
sbb
sbb
jmp
cmpl
fwait
xchg
sahf
add
test
pusha
xchg
mov
popa
xchg
push
stc
fcomps
or
and
sahf
cmp
insb
in
mov
add
jbe
cmc
adc
push
sti
inc
sub
adc
je
pop
jge
sbb
mov
out
dec
js
pop
xor
pop
sub
xor
dec
ret
mov
dec
daa
nop
pop
add
negl
jle
cld
shll
repz
xchg
pop
je
lahf
rcrl
scas
aas
ja
mov
xchg
test
jecxz
iret
in
inc
add
shlb
and
xchg
inc
loope
mov
lods
pop
rorl
mov
mov
xchg
fisttps
ja
mov
inc
mov
xor
pop
pop
sub
push
mov
popa
fucom
inc
pop
push
scas
ljmp
repz
sbb
xchg
repz
dec
mov
fisttps
popa
iret
les
xor
adc
and
xchg
add
dec
sub
addl
cmp
xchg
shl
popa
pop
js
out
or
sub
dec
leave
pushf
mov
je
daa
push
jbe
xchg
mov
inc
sub
daa
hlt
add
sbb
daa
pushf
negb
adc
or
aas
aad
adc
fiaddl
rcll
push
push
jnp
push
dec
or
and
xchg
inc
or
pop
popf
mov
aam
mov
imul
and
daa
add
popa
xchg
and
popf
stc
or
test
cld
pop
popf
call
in
xchg
inc
pop
add
jl
mov
jno
cmp
adc
adc
xor
pop
lods
cld
inc
icebp
insl
xor
xchg
inc
sbb
pop
mov
icebp
pop
leave
sbb
in
and
push
dec
lret
push
sbb
push
subl
je
aad
stos
cmp
aam
jo
fldl
cmc
mov
jno
sub
jns
mov
or
push
mov
mov
inc
mov
add
in
ficoms
fisubrl
pop
sub
pop
xor
mov
pop
xchg
mov
jns
iret
fildll
fldt
dec
push
jo
subl
jmp
std
xor
lahf
clc
int
fisubs
popa
push
dec
stc
lods
xchg
fsubp
pop
in
sbb
xchg
jo
das
inc
push
xor
jae
cmp
out
xor
orb
cld
test
andl
xchg
mov
and
sbb
jp
and
test
mov
out
ljmp
repz
push
dec
pop
mul
jp
andl
popa
pop
popa
inc
lock
imul
cld
pusha
in
dec
scas
ret
rorl
int
ffreep
test
push
xor
xchg
jmp
loop
int
aam
cmp
push
adc
in
inc
loopne
dec
iret
mov
sbb
jb
jne
inc
rcrl
xor
mov
mov
sub
insl
sub
cwtl
mov
mov
dec
push
imulb
xchg
popf
push
fnstsw
sarl
jge
or
pusha
lret
jmp
in
sbb
cmpsl
pop
pop
mov
pusha
lock
jns
and
pushf
mov
or
lea
rclb
dec
mov
sbb
nop
in
sub
test
jle
scas
rcrb
rcll
and
enter
mov
adc
inc
mov
sub
xchg
mov
das
std
or
int
cmc
sub
hlt
adc
clc
clc
shll
cmpsb
mov
repnz
xchg
pusha
mov
fsubrs
fistpll
addb
jo
inc
xor
ljmp
jle
cmp
jecxz
jmp
xchg
clc
sub
mov
fwait
stc
test
sti
insl
pop
ljmp
stc
jmp
cmp
stos
in
add
xor
jae
stc
and
cli
loopne
adc
pop
jge
sbb
dec
xor
scas
pop
lret
inc
push
out
test
scas
jmp
test
mov
nop
add
sbb
aad
and
jno
push
or
jp
mov
cltd
mov
pop
dec
movsl
lods
into
sahf
fld
push
jns
jae
add
and
in
mov
scas
pop
jecxz
fsubrl
jne
xorl
mov
jl
mov
push
mov
mov
mov
in
add
jl
sub
rcll
and
xchg
xchg
and
jae
jbe
sti
popa
push
stc
and
cltd
push
mov
cltd
aad
clc
cld
in
push
pop
idivl
mov
or
xor
ret
or
clc
push
cli
sti
push
inc
cmp
adc
dec
in
sbb
xchg
and
pusha
mov
js
test
aad
fists
sub
fildll
insl
jp
clc
or
xchg
test
adc
pop
pop
cmpsl
in
dec
dec
inc
sub
ret
pop
loope
js
loope
or
push
push
rcl
mov
cmp
adc
outsl
in
int3
int3
jae
adc
test
mov
jae
loope
cmp
xchg
out
dec
xor
repz
or
mov
pop
push
lret
stc
gs
cmp
pop
addr16
mov
dec
cs
imul
dec
sbb
or
jae
enter
vmwrite
adc
or
aam
adc
sub
fnstsw
lcall
inc
lds
or
sti
xchg
jo
pushf
pushf
outsb
rclb
pop
daa
jne
inc
lahf
push
out
mov
mov
push
stos
mov
pop
pop
clc
xor
insb
jae
jno
cmpsb
das
cmpb
stos
or
pushf
arpl
sub
scas
insb
add
jno
aad
xchg
pop
inc
mov
pop
xchg
mov
nop
mov
bound
or
out
inc
negl
sbb
in
call
adc
call
mov
loope
fs
xor
mull
push
inc
test
push
mov
movsl
movb
push
mov
or
pop
pop
cmp
mov
insl
stc
shll
mov
mov
imul
inc
jl
push
cmp
std
xor
sbb
clc
adc
fcompl
je
jb
lods
sbb
mov
jo
cmp
mov
test
sbb
hlt
adc
xor
mov
and
mov
dec
cmpsb
jb
imul
in
sub
fisubs
popa
cmp
jl
xor
or
ja
or
cmpsb
mov
mov
loopne
pop
cmpsb
cwtl
adc
cmp
mov
loope
cmpsl
imul
cmpsl
fisttps
adc
sub
in
call
mov
add
roll
dec
mov
sbb
mov
add
dec
xor
js
cmp
jmp
cmpl
and
xor
hlt
sahf
push
arpl
mov
loopne
hlt
mov
sbb
push
cltd
shrb
jg
jl
adc
sbb
lock
mov
inc
pop
sub
scas
popf
xor
push
jecxz
repnz
lcall
cmp
xlat
das
les
test
xchg
mov
adc
jae
or
cmp
add
adcl
mov
std
popa
adc
xor
cld
sub
test
rol
mov
push
lahf
and
sbb
and
insl
xor
cmp
xor
divb
stos
enter
and
dec
inc
pop
je
sbb
mov
xor
mov
pop
mov
dec
hlt
add
or
imul
repz
xchg
inc
pop
pushf
cmp
je
lahf
dec
leave
mov
fmull
add
ja
inc
dec
push
scas
imul
cmp
sbb
mov
adc
or
adc
cmp
jbe
repz
jecxz
cs
sbb
mov
orb
les
pop
lds
fmull
cmp
and
fstpt
iret
aas
mov
cmp
inc
and
mov
movsb
inc
shlb
jmp
jge
pop
imul
and
popf
cmpsl
fldcw
loop
lock
mov
mull
mov
or
lahf
cli
mov
outsb
in
push
filds
or
pop
xchg
jne
dec
outsb
dec
shl
push
cltd
adc
shlb
or
cmc
adc
jle
mov
lock
les
jge
mov
mov
adc
mov
cmc
adc
shll
mov
mov
adc
ret
inc
push
mov
in
iret
addr16
mov
xchg
dec
fistpl
mov
xor
aad
test
inc
jbe
aaa
fldcw
pop
xor
xor
sub
fldenv
and
mov
jb
push
sbb
div
sbb
out
in
mov
pop
pop
aaa
xchg
mov
test
in
xchg
xor
shlb
aaa
in
jbe
sub
mov
invd
push
jge
push
sbb
add
sub
ss
ficomps
iret
js
xor
aas
sub
inc
inc
or
push
add
dec
cli
hlt
dec
fistpl
jge
fbld
jmp
mov
sub
mov
int3
mov
fsubrl
fcoms
enter
cmp
pop
clc
int
rcll
cltd
int3
lea
xchg
cmp
or
ljmp
xchg
mov
and
cmp
adc
orl
pushf
ljmp
pop
jge
or
adcl
pop
imul
ficomps
arpl
mov
cmpsl
cltd
or
xor
cs
dec
loop
imul
cmpsl
mov
or
repz
jle
or
sub
dec
scas
insb
lea
dec
cld
fdivrp
push
lahf
sbb
or
icebp
xchg
das
pop
jno
xchg
or
sub
inc
loopne
and
add
clc
mov
jmp
and
dec
test
nop
add
xchg
xor
xor
push
ucomiss
or
mov
out
movsb
mov
scas
movsb
lcall
push
sbb
sub
pop
orl
rolb
or
notl
cmp
cltd
insb
ljmp
pop
out
mov
sti
fstpt
push
cwtl
jo
adc
mov
popl
cmp
mov
mov
fcompl
pop
cmc
xorl
addr16
xor
frstor
out
push
cmp
dec
rcrb
sub
test
in
jno
push
aad
aad
sbb
adc
sahf
add
jmp
pop
add
ret
mov
add
dec
aam
xor
or
lods
out
dec
fdivrs
pushf
and
cmp
add
xor
ret
stos
cli
lret
pop
pop
push
scas
or
les
sub
sbb
in
in
sarl
lods
decb
or
mov
rolb
andb
inc
scas
fists
xor
push
jo
lcall
push
mov
icebp
adc
div
jne
popl
cmc
add
cld
inc
fstp
mov
ret
inc
daa
shlb
imul
cld
pop
outsb
sbb
stos
push
test
adc
movl
and
push
add
pusha
jmp
sub
jbe
das
xchg
cmc
and
pop
js
loop
jns
xchg
lock
sti
lcall
push
inc
dec
xchg
andl
xor
mov
arpl
push
stc
jge
jmp
mov
pop
xchg
xor
mov
fwait
sbb
jecxz
in
add
outsl
fldenv
lods
pop
jg
sub
jl
cmp
cltd
loopne
and
rcrl
cmc
in
outsl
jge
push
sbb
inc
push
fwait
mov
mov
scas
in
mov
xchg
sbb
lahf
push
or
pop
xchg
cs
outsl
xlat
lahf
shlb
lret
mov
and
pop
or
mov
into
outsl
rolb
mov
imul
mov
mov
int3
pop
sub
jmp
mov
out
pop
inc
mov
in
pop
inc
mov
add
xlat
add
or
lds
or
call
push
sbb
shll
sbb
xchg
jp
out
outsb
push
into
dec
dec
cmp
adc
push
fdivs
push
push
mov
pop
mov
jl
hlt
dec
mov
cld
mov
fldcw
push
pop
add
data16
dec
mov
clc
and
inc
dec
add
xchg
dec
push
loop
dec
addr16
cwtl
cmp
leave
cmp
mov
ret
sub
aaa
loop
movsb
lcall
jle
push
mov
xchg
ficoml
xchg
lds
subl
mov
sbb
push
pop
push
jmp
push
roll
repz
mov
cli
scas
xchg
mov
inc
push
faddp
outsb
jo
sub
ss
fstps
mov
loope
or
sub
mov
add
movsb
jle
xlat
dec
pop
add
and
cltd
pop
add
xor
inc
cmpsl
add
cmp
sbb
mov
mov
adc
dec
cs
pushl
std
fbld
mov
lock
pop
xor
stos
idiv
push
adc
push
cmp
stos
push
sbb
sbb
repz
sarb
add
es
cmp
mov
sub
je
das
mov
cmp
jmp
sarl
mov
ds
mov
mov
inc
les
addl
add
jae
fwait
test
dec
stc
int
dec
pop
cmpb
jb
mov
inc
fimuls
decb
ss
stos
mov
add
lahf
and
into
mov
aaa
or
idivl
push
out
jp
push
push
fs
mov
jecxz
add
cli
xor
out
movsl
pop
sbb
pop
inc
imul
mov
aas
sarl
xchg
movsb
cmp
cmp
addr16
xchg
jmp
rolb
push
lcall
int3
mov
cmp
ret
pop
arpl
mov
mov
and
out
xchg
daa
and
lcall
loop
in
test
adc
sbb
add
cltd
push
loope
call
out
adc
inc
lret
mov
xorl
xchg
bound
mov
xor
push
aas
outsb
jg
add
xchg
cwtl
das
mov
jns
cmp
lds
inc
gs
pop
cltd
sti
and
mov
xchg
or
popf
fsubl
cmp
mov
pop
jg
xchg
es
push
ja
sbb
ror
mov
and
jg
bound
in
movb
pop
scas
jmp
ds
push
xchg
pop
popa
pop
mov
cwtl
mov
dec
shll
xor
popf
push
filds
pop
push
push
xor
test
fwait
insl
imul
lret
mov
push
add
pop
cld
lret
clc
in
leave
sbb
jnp
dec
pusha
mov
bndldx
adc
subl
adc
cmp
push
adc
dec
dec
ljmp
insl
out
and
mov
add
dec
int3
dec
fisttpll
daa
cmp
cmpsb
xor
je
mov
xchg
pop
int
ja
mov
adc
and
cmp
ljmp
and
jo
dec
sbb
mov
mov
xchg
inc
xor
jb
js
jge
outsl
sti
cltd
movsl
push
mov
fists
jl
lods
mov
bnd
jns
xor
movsl
leave
icebp
mov
lock
sub
cld
add
lock
mov
push
mov
ljmp
and
test
in
aaa
daa
ffree
andl
ds
xchg
adc
and
lcall
push
fstpt
fstl
sbb
pop
jge
cld
in
mov
aam
inc
nop
roll
ja
fdivs
mov
shrb
fcmovbe
lahf
push
mov
jbe
scas
add
cmc
jge
xchg
pop
mov
daa
jns
stc
sub
pop
test
outsb
outsb
xor
pop
cmpsb
mov
gs
lods
notl
or
cmp
in
lcall
dec
repz
jp
jns
push
data16
enter
rorb
mov
xor
mov
jb
xor
bound
lock
enter
pop
test
jmp
inc
enter
mov
imul
xchg
lea
or
push
js
or
mov
aad
test
dec
data16
inc
hlt
cmpsb
imul
hlt
or
mov
fildll
jmp
or
mov
outsl
cwtl
add
sbb
insb
pop
cmpsb
stc
lods
ror
fdivrl
mov
lea
jae
imul
lods
pop
jae
add
rcll
jecxz
test
jmp
out
and
loope,pn
out
sbb
and
gs
mov
scas
push
xchg
std
xchg
fidivs
lcall
out
fildll
fwait
adc
add
adc
push
into
insb
or
mov
aam
loop
xchg
in
push
lret
jae
jle
dec
xchg
stos
and
mov
sbb
repnz
cmp
add
sar
sub
subl
mov
pop
aam
dec
push
bound
push
jge
adc
pop
outsl
cs
cwtl
shlb
addr16
lds
lcall
popf
inc
xor
mov
out
int3
repnz
pop
xor
pop
pop
xlat
shl
adc
gs
cmp
dec
xchg
inc
aaa
push
and
out
mov
jecxz
push
mov
pop
mov
mov
das
add
sbb
ret
loop
cmpl
and
ds
pop
or
loope
mov
pop
push
dec
or
or
pop
inc
jae
adc
push
sub
iret
jo
movsl
mov
fdivrs
jae
cmp
pop
dec
cli
cwtl
or
mov
aas
loopne
stc
push
into
lods
and
adc
cmpsl
jecxz
pop
int
outsl
push
xchg
ljmp
out
icebp
mov
push
xor
testb
lock
push
jle
push
pop
jns
add
mov
imul
or
push
test
ss
in
movsl
loopne
mov
imul
in
or
stos
adc
cmp
cltd
sub
idivl
out
mov
scas
lods
mov
cmp
cmpsl
nop
xor
push
outsb
jmp
mov
mov
imul
add
inc
arpl
mov
or
push
cli
sub
jbe
jl
movsl
ffreep
add
jecxz
inc
inc
into
cmp
jmp
int
lret
leave
fnstsw
pop
addr16
nop
or
repz
jg
dec
data16
jmp
sbb
orb
xchg
in
mov
movsb
fwait
imull
lret
rcrb
jno
test
mov
push
xor
xor
cltd
jnp
jnp
adc
inc
inc
push
inc
pushf
pop
lods
dec
jno
push
push
pusha
or
gs
mov
xchg
incb
inc
push
pusha
dec
lret
loope
das
rorl
lcall
cmp
stos
or
movsl
les
push
mov
dec
pop
rcl
mov
arpl
aas
pop
fwait
xchg
jl
xor
and
inc
sub
pinsrw
test
rorb
pop
sbb
in
jo
sbb
push
jnp
push
mov
cmp
out
lock
jne
stos
movsl
aaa
ficoml
mov
mov
scas
std
nop
enter
mov
insb
in
pop
push
add
cmp
je
dec
dec
mov
push
ja
movntps
jge
add
sub
sbb
pop
push
lahf
adc
or
js
cmp
lock
fdivrl
xlat
mov
arpl
adc
lods
or
insb
test
jl
enter
jne
mov
push
xlat
popf
mov
mov
xor
add
stos
fbld
or
and
fmul
roll
cmp
inc
ljmp
js
stc
lods
dec
ljmp
dec
and
ss
sti
rep
push
popa
out
cmp
call
inc
lds
aam
popf
jmp
push
dec
pop
dec
pop
js
pop
mov
xchg
daa
lret
leave
pop
dec
and
cli
pop
cmp
stos
add
nop
xchg
adc
sub
cwtl
cmp
cmpsb
lea
mov
std
loopne
sti
pop
mov
push
cmp
mov
or
jle
ja
xchg
push
in
les
sahf
repnz
or
ss
lock
icebp
repz
data16
stos
lods
enter
ret
in
shrl
fwait
sub
mov
inc
mov
mov
sbb
push
out
push
pop
sbb
scas
mov
sbb
out
xchg
pop
xor
sahf
xchg
mov
mov
es
or
ss
mov
ds
leave
fstl
adc
fbld
ss
rcl
fwait
repnz
xlat
mov
dec
mov
pop
inc
sbb
adc
jmp
add
pop
lea
mov
arpl
jg
insl
lret
mov
stos
dec
shll
dec
mov
sarb
into
pushf
ret
push
cld
xor
scas
xor
inc
xor
or
sbb
adc
jbe
mov
pop
mov
popf
mov
insl
sbb
cltd
inc
jbe
mov
sbb
pop
mov
xor
ja
mov
push
cmp
adc
cli
pop
shlb
push
mov
mov
xorl
in
pop
shl
loope
mov
ja
push
insb
in
lahf
xor
and
jg
enter
xor
hlt
scas
inc
mov
adc
push
dec
cmc
push
ljmp
jne
in
inc
add
push
jl
loopne
mov
fsubl
and
push
cld
mov
fwait
inc
pop
pop
fildl
ss
repz
test
pop
xchg
aaa
pop
movsl
and
into
call
jne
adc
icebp
or
cmp
roll
pop
pop
adc
xchg
xor
cmc
sarl
xchg
jg
sbb
or
add
inc
nop
push
movsb
push
out
jno
popf
daa
das
mov
mov
xor
movsl
mov
pop
pop
xchg
push
les
ret
mov
std
or
sbb
mov
xchg
inc
push
push
pop
push
push
pop
and
sbb
sub
or
jecxz
cwtl
ljmp
xchg
dec
movsl
mov
inc
test
or
ret
xchg
sbb
outsb
cli
mov
scas
xor
dec
jp
xlat
popa
mov
sti
mov
mov
test
push
adc
cmp
dec
cmp
imul
push
cmc
sub
outsb
xchg
mov
std
lods
cmovbe
outsl
inc
adc
das
cmc
xor
lcall
aad
scas
call
add
pop
ds
mov
mov
mov
stc
jmp
cmp
shll
out
or
cld
inc
loopne
adc
test
dec
xor
adc
subb
jg
mov
adc
cltd
inc
fcomps
ljmp
pop
push
xor
fildll
inc
arpl
sub
outsl
scas
aaa
jp
push
icebp
mov
ds
ss
std
sbb
or
cmp
xchg
ljmp
test
add
test
mov
push
mov
pusha
lret
cmpsl
push
and
icebp
loope
sbb
xchg
arpl
cmp
fcom
xor
and
cmc
mov
arpl
pop
scas
or
rorl
xor
ljmp
stos
mov
pop
and
pop
sbb
cmc
sub
loope
iret
sahf
dec
int3
xchg
popf
adc
sbb
enter
pop
xor
cs
jne
or
adc
movsb
xor
cmp
mov
mov
fcomps
push
dec
scas
sbb
inc
in
and
subl
inc
ret
popf
adc
call
push
sbb
into
ja
cmp
nop
icebp
out
movsl
jp
test
xchg
add
ficoms
lock
add
fwait
xchg
test
mov
addr16
fwait
mov
xor
or
in
lcall
cmp
xchg
cmp
sub
fstpt
push
push
test
aad
xor
outsl
enter
sbb
enter
lahf
mov
and
mov
dec
mov
std
and
test
xchg
push
jne
cmpsb
xchg
cwtl
pusha
pop
push
cmp
cmpsl
cmpsb
imul
sti
inc
add
or
out
in
icebp
jp
cmpsb
stos
in
mov
and
pop
mov
mov
loop
sub
push
call
jns
imul
jge
xor
pop
cmp
clc
xchg
shll
aad
loopne
pop
test
jns
cmp
in
xchg
loopne
fsubrs
fwait
pop
jns
enter
xlat
sbb
add
and
fbstp
insl
sbb
dec
pusha
in
or
xchg
sbb
hlt
xchg
in
mov
fsts
lcall
arpl
adc
xchg
lea
ja
mov
movsl
push
scas
mov
pop
lret
loop
int
out
mov
pop
xchg
mov
in
push
ret
in
pusha
out
outsb
cmpsb
test
mov
leave
xchg
ljmp
cmp
cmp
inc
notl
and
test
or
mov
xchg
and
sbb
adc
je
mov
mov
jne
orl
in
pop
or
inc
je
out
mov
repz
lcall
sbb
adcb
push
or
scas
out
loop
lds
sbb
sub
mov
fisttpll
pop
dec
and
arpl
xor
mov
mov
mov
sub
jns
pop
icebp
ss
cwtl
cmp
andb
test
mov
push
decb
sbb
test
sarb
fs
inc
sub
ja
cmp
arpl
mov
rcr
ja
jno
adc
or
or
adc
loopne
jne
inc
xchg
inc
jp
push
scas
arpl
fdiv
in
dec
mov
movups
mov
mov
subl
into
pop
sarb
mov
dec
repnz
sub
addb
xor
xchg
mov
adc
and
mov
push
rolb
dec
jno
hlt
andb
push
mov
push
xchg
xchg
push
popf
in
repz
data16
cmp
mov
dec
push
cmp
loopne
in
sbb
xchg
pop
loope
push
xor
js
addr16
mov
mov
and
or
loopne
rolb
or
insl
or
aaa
out
pop
fcmovne
push
cli
ret
shll
rolb
mov
fidivrl
sahf
sub
or
pop
push
out
stos
or
xchg
rolb
adc
jg
jne
pop
inc
pop
test
fsubrs
cmc
andl
mov
jns
lods
mov
mov
sbb
mov
add
mov
jg
add
rolb
xor
addr16
insl
push
lods
xchg
dec
jle
cmp
out
dec
pop
ret
xchg
in
fwait
insb
clc
xchg
push
or
rclb
int
sbb
insb
inc
fwait
mov
mov
scas
or
and
test
and
adc
ljmp
popa
imul
je
pop
sub
frstor
or
stos
pop
mov
popf
sbb
lds
and
fsubrl
outsb
test
enter
loop
out
ljmp
out
xor
cmpsb
pop
push
xchg
cmpsb
cmp
xchg
les
cmpsb
movsb
and
push
push
outsb
in
es
out
dec
push
jl
inc
xor
pop
dec
ret
pop
lods
jp
xor
rclb
jae
mov
dec
push
lret
xchg
lret
test
pop
lea
cmpsb
add
sti
mov
or
xchg
xor
loopne
add
cmp
sti
in
int3
cmc
imul
sbb
cmp
pushf
lock
ficoml
mov
pop
stos
xor
insb
cmp
adc
popf
jae
icebp
xchg
mov
xchg
mov
jb
stos
cwtl
call
fstps
out
dec
lock
imul
aas
dec
xchg
mov
rcrl
inc
lock
mov
jle
mov
jmp
out
pop
pop
loopne
jb
mov
out
mov
or
dec
mov
sti
mov
inc
inc
incb
sbb
adc
sub
fstpl
push
cltd
inc
int
sbb
lods
loop
pop
sub
mov
mov
test
loope
fisubrs
and
sbb
lea
ficoml
test
jo
dec
xchg
aam
test
fwait
cwtl
inc
test
pushf
jnp
addr16
inc
adc
dec
into
adc
loop
push
scas
fistl
jnp
in
pop
cltd
sbb
jns
negb
pop
and
push
and
mov
pushf
sti
movsb
push
push
pop
cmc
addl
enter
xor
adc
cs
rol
movsb
sub
and
test
lods
outsl
push
sbb
jae
test
push
outsl
sbbl
and
imul
cli
aad
pusha
xchg
rcrl
pop
shll
and
and
rolb
inc
jl
pop
adc
pop
inc
jl
aaa
jno
fldt
pusha
cmc
inc
push
fimull
lret
out
pop
popa
mov
mov
push
mov
daa
fistpl
xor
pushf
das
push
stc
inc
test
sar
jbe
mov
ror
inc
cwtl
rclb
xor
sub
lods
lds
adc
je
sub
ss
adc
lahf
jle
pusha
xchg
push
mov
sub
mov
pop
lds
xchg
cmp
aaa
jmp
push
cld
pop
mov
xchg
mov
cmp
popf
ret
sub
shlb
fnstenv
imul
xchg
shrb
jl
sub
cld
rorb
mov
enter
je
dec
les
jns
lods
inc
xlat
movb
jbe
pushf
rol
lock
lods
xor
lret
cld
sbbl
sub
adc
and
pslld
add
insb
inc
fcomps
xor
xorl
fistpl
jle
xchg
cmp
jns
or
cmp
push
sti
ret
fcompl
push
movsl
mov
or
xchg
mov
inc
int
out
cli
clc
rcrb
sti
adc
outsb
mov
mov
inc
ret
inc
and
push
pop
out
fmuls
in
pushf
test
add
adc
jge
jmp
testl
pop
lea
lock
repz
ja
enter
push
inc
xor
lahf
int3
xchg
aas
loope
mov
imul
call
imul
mov
lret
xchg
add
cmpsl
pop
in
push
sub
mov
pop
idivb
xchg
gs
adc
push
sbb
les
push
iret
sar
cli
add
cwtl
or
mov
cs
push
ss
dec
and
shl
cmp
dec
daa
jno
out
jecxz
inc
mov
aas
lcall
lcall
pop
sarl
jbe
pushf
xchg
clc
cmp
sub
jmp
test
rorb
rorl
jmp
stc
cwtl
fwait
jo
add
scas
lret
lods
jmp
ds
push
mov
xlat
je
and
aaa
mov
sbb
adc
ret
into
test
lcall
sti
mov
insb
int
popf
shl
dec
xchg
loope
mov
je
pushf
cmp
push
mov
mov
and
jo
icebp
lcall
mov
rolb
mov
add
add
sti
in
mov
xchg
xor
inc
addr16
orb
fs
lret
push
jle
shlb
mov
pop
lret
cmpl
int
nop
aad
and
jmp
lahf
push
xchg
xlat
sub
mov
mov
ljmp
sbb
jg
xchg
dec
icebp
sbb
inc
loope
jmp
les
bswap
sbb
jmp
stos
rcll
or
imul
xchg
idivb
pop
imulb
pop
ror
bound
decb
sbb
outsl
jno
in
lret
dec
dec
push
xlat
mov
mov
mov
mov
popf
test
mov
test
sbb
imul
mov
push
or
push
sbb
push
rorb
mov
xchg
inc
or
ja
les
cmc
cmpsb
push
xchg
add
jmp
faddl
pushl
ret
mov
outsl
int
pop
out
lcall
xlat
pop
loope
push
mov
xor
and
xchg
in
adc
jbe
pop
rcrl
cld
popa
cmp
rorb
unpckhps
pmulhw
and
lret
or
pop
adc
xchg
sub
out
pop
enter
mov
push
ror
mov
cwtl
ds
lock
fimuls
sbb
push
or
fwait
xor
mov
arpl
mov
pop
xchg
inc
out
aad
jle
int
in
in
sbb
mov
stos
aaa
rcll
dec
and
in
cmc
or
pop
sbb
sub
into
sahf
adc
push
mull
or
insl
aaa
mov
xlat
sub
dec
ja
or
les
jp
jge
arpl
sub
jb
fs
pop
sahf
cs
pop
shr
das
jo
rol
popa
lea
add
mov
adc
icebp
mov
nop
mov
es
add
ds
and
jne
pop
push
push
mov
and
lret
add
dec
xor
mov
inc
lds
pushl
ficomps
lret
jnp
imul
fnsave
mov
jno
dec
xor
xor
sarb
fnsave
xchg
and
scas
iret
lock
insl
imul
add
scas
xor
cltd
fcoms
fs
jl
cmp
cltd
inc
add
mov
add
jg
testl
int3
sub
andl
mov
data16
cmp
inc
addr16
cmc
push
movsl
adc
ret
mov
pop
daa
lods
outsl
rol
xlat
or
enter
inc
in
inc
test
cli
jnp
cmp
out
jno
mov
push
pop
push
in
jo
push
out
iret
push
dec
cmp
aam
or
sbb
mov
ficompl
jl
fcmovnu
xchg
jp
mov
les
adc
xchg
and
lahf
aam
dec
mov
cmp
cwtl
sbb
data16
mov
jne
movl
stc
push
es
dec
imul
outsl
mov
pop
imul
out
clc
cmp
movsb
cs
sub
ss
sbb
loopne
sub
pop
jl
cmp
mov
jmp
lahf
xor
add
xlat
push
or
cltd
dec
jecxz
test
jno
push
cmp
xchg
mov
pop
inc
sub
or
iret
imul
fsubrp
dec
decl
ret
insb
xor
rcrl
or
sbb
inc
push
cmc
push
iret
ds
dec
icebp
shll
or
cmp
dec
cmp
jge
sub
add
push
xchg
into
cld
sahf
or
pop
iret
lds
fmuls
pop
fcomps
sub
push
rcrb
add
jns
and
aaa
or
popa
imul
push
mov
jle
mov
das
sub
nop
aaa
out
ja
xchg
xchg
lds
mov
mov
test
movsb
or
jne
lahf
out
push
cmp
push
pop
rclb
dec
fisubrs
ljmp
lret
mov
add
cld
enter
push
xchg
lret
and
push
pop
mov
ljmp
cli
cmc
sub
mov
xor
mov
mov
cwtl
pop
sub
mov
mov
aad
iret
test
lods
stos
aaa
adc
hlt
inc
add
jge
xor
shrl
hlt
in
cmp
lock
dec
fidivrl
lds
mov
cli
pop
pop
mov
movsl
mov
or
cmp
pop
out
push
popa
jle
es
push
mov
lods
or
xchg
add
aaa
xabort
push
lahf
xorb
jno
daa
daa
push
fildll
sub
lock
lods
es
in
mov
and
cmpsl
push
mov
pop
mov
cmc
pop
jmp
mov
cmc
mov
test
fcoml
dec
mov
dec
int3
sub
shl
out
xor
xor
mov
xor
movsl
pop
fwait
sub
test
out
lahf
pusha
or
popa
sub
lods
adc
popa
popf
mov
cmp
push
pop
pop
cmc
or
xchg
mov
cmp
subb
sbb
pushf
icebp
andb
xlat
pop
pop
add
arpl
sbb
jno
mov
add
dec
or
jecxz
fs
shlb
mov
or
push
es
xchg
push
lcall
je
outsb
inc
fldt
scas
lods
fstps
jle
dec
mov
xor
add
dec
add
sub
clc
add
xor
xchg
xchg
cli
cmp
jno
mov
sbb
cmp
mov
addb
fidivrl
subb
adc
leave
scas
fdivl
fadds
mov
mov
rclb
inc
xchg
ss
dec
sbb
lcall
xchg
cwtl
pop
add
inc
test
sbb
or
push
out
or
je
shll
adcl
jle
cmp
add
xor
movl
cltd
inc
idiv
repz
in
mov
enter
xor
or
xchg
aas
lods
inc
clc
add
adc
je
inc
jns
adc
rcrl
fidivl
mov
pop
mov
adc
inc
out
cmp
test
xchg
aas
aam
jecxz
dec
inc
ja
flds
ret
push
orb
cbtw
xor
ret
mov
and
and
cwtl
inc
mov
xchg
int3
rcr
mov
mov
call
clc
push
and
mov
mov
pop
stc
arpl
jmp
arpl
mov
enter
pusha
sbb
das
mov
mov
dec
mov
add
int3
and
int3
mov
inc
xchg
mov
sbbb
ret
mov
fstl
adc
andl
dec
cmpsb
jnp
and
ret
xorl
shr
aam
pop
sar
sbb
mov
fbld
daa
shlb
add
add
sbb
xor
add
sub
out
dec
xor
pop
repz
outsl
push
jecxz
lcall
dec
mov
or
mov
inc
push
movsb
cs
pop
mov
dec
and
stos
test
arpl
jg
in
mov
cmpsb
std
daa
push
mov
sub
sbb
fsubrl
stos
sti
loopne
imulb
pop
cmp
scas
popa
rorl
sahf
lea
xchg
fld
nop
out
mov
mov
cs
mov
xor
stc
inc
out
pop
xorb
sbb
pushl
xor
mov
lea
leave
scas
int3
add
stc
mov
in
pusha
jecxz
xchg
dec
push
jge
stos
inc
dec
fsubs
fchs
push
call
scas
pop
jmp
lds
pop
das
mov
adc
xchg
lcall
inc
lret
movsb
jnp
das
popa
and
mov
fisubl
xchg
or
mov
xchg
inc
jno
fsubp
loopne
push
andb
sub
sbb
bound
iret
pop
add
lock
rcrl
mov
rcrb
xchg
lret
ficoml
sub
repz
movsb
clc
xor
les
sbb
les
cmp
xchg
in
xor
push
mov
sub
lea
out
das
out
es
lea
pop
fstps
push
outsl
jg
enter
scas
cmpsb
addb
push
jl
push
jmp
jnp
orb
mov
lret
sar
adc
test
sub
jle
sbb
es
cwtl
icebp
push
cmp
mov
cltd
jl
aam
sub
in
inc
insb
mov
outsl
cwtl
fimuls
dec
pop
xchg
les
loope
inc
fwait
cmpsb
ret
sarb
and
mov
sahf
sti
enter
mov
add
popa
jecxz
clc
fcoml
sbb
mov
jnp
xor
pop
pop
fwait
jb
div
icebp
scas
test
and
sbb
pusha
aam
lahf
pop
jne
cmpsl
shll
decl
inc
lea
sbb
gs
jno
dec
jne
je
test
idivb
cltd
out
mov
and
pop
test
test
sub
sub
jo
adc
cmp
or
xor
fnsave
aas
out
or
inc
and
xchg
fstpt
arpl
and
dec
cmpsb
add
dec
xlat
pusha
xlat
mov
dec
pop
arpl
mov
stc
enter
insl
adc
pop
ret
jno
fstpl
xchg
and
lods
inc
xor
negb
mov
out
jae
lcall
lcall
rcl
mov
pop
push
or
and
mov
repnz
addl
aam
lock
jns
or
outsl
cltd
pop
je
pushf
inc
icebp
movsb
xchg
push
xchg
pop
push
push
sbb
jmp
adcb
clc
xor
adc
mov
mov
inc
pop
mov
decl
inc
shl
xor
dec
adc
sbb
jno
arpl
insb
test
dec
sbb
lods
dec
shll
push
ds
mov
dec
iret
fiadds
aad
or
xor
add
bound
test
push
loopnew
aaa
je
aaa
lock
inc
pusha
in
popf
es
or
lock
cwtl
sbb
sbb
movsl
imul
sbb
pop
hlt
cli
and
insl
test
mov
xchg
push
cli
dec
sub
into
push
lret
dec
xor
sahf
out
mov
pushf
xor
mov
cmp
ficompl
sub
jecxz
xchg
leave
adc
shll
xor
mov
pop
add
outsl
push
test
add
clc
aad
int3
stc
sub
cli
dec
notl
xchg
sbb
sbb
addr16
or
daa
mov
inc
pop
fldt
sti
es
push
imul
adc
ja
and
pop
movsb
push
xchg
inc
mov
mov
stos
pusha
push
xor
adc
out
adc
pop
stc
les
sub
dec
dec
and
or
jg
jno
aaa
jg
push
jg,pt
mov
cmp
add
mov
pushf
cmpsb
mov
mov
jp
xchg
shl
sub
inc
xchg
sbb
push
enter
stc
nop
das
scas
sbb
pop
nop
gs
mov
repnz
add
jae
dec
aad
jl
jp
cwtl
cmpsb
inc
adc
cmpsb
inc
mov
push
pop
cld
lahf
jge
push
or
mov
ss
dec
mov
cmp
xchg
call
popf
add
jbe
dec
mov
cmpsb
ljmp
lret
jb
mov
inc
cmp
call
push
out
pop
pushf
cltd
dec
jmp
pop
repnz
jmp
mov
jo
add
mov
push
or
mov
dec
mov
mov
sbb
out
cmpsb
inc
mov
movsl
mov
rcrl
popf
and
xchg
fisttpll
mov
ss
std
sbb
cltd
dec
cmpsb
mov
hlt
sub
bound
mov
mov
xchg
mov
mov
inc
and
aam
aam
test
fstps
loop
mov
push
scas
jecxz
or
sub
mov
mov
testb
or
in
shl
lock
push
test
adc
stc
pop
mov
push
bswap
add
add
cmp
js
aam
movsl
popf
dec
aas
dec
and
cmpsl
xor
inc
popl
mov
imul
pushf
xchg
lds
xchg
or
icebp
mov
jnp
es
ss
shlb
or
sbb
dec
mov
clc
es
ljmp
scas
test
jp
push
mov
test
dec
jge
xor
inc
lds
nop
mov
nop
push
push
loopne
sub
stos
scas
scas
imul
ss
jle
sarl
enter
popa
rorl
movsb
jne
fdiv
sbb
lahf
push
je
add
jle
cltd
ret
loopne
push
add
pushf
cwtl
xchg
inc
push
dec
or
mov
xchg
and
clc
loope
push
cltd
pop
mov
loope
arpl
mov
inc
leave
sub
cmp
inc
cmpsl
nop
sub
icebp
sub
cwtl
or
movsb
and
xlat
shl
sub
push
shrl
xchg
pop
mov
pop
int
xor
jge
nop
cmpsb
mulb
scas
bound
clc
inc
xchg
and
cmp
mov
pop
je
push
jns
dec
adc
push
mov
xchg
pop
ret
adc
mov
lods
cmp
in
fs
mov
mov
push
flds
test
jp
stos
dec
push
pop
insb
into
xchg
cmpsl
mov
jbe
into
add
lods
mov
inc
mov
in
gs
test
lods
add
adc
pop
lcall
fcomps
dec
jle
dec
js
mov
mov
xor
std
mov
add
out
fiadds
repnz
pushf
cwtl
out
add
jmp
shll
pop
jne
pop
les
rclb
mov
xor
orb
add
jnp
add
subl
dec
dec
popf
rolb
jp
je
sbb
push
cmp
lock
mov
or
enter
mov
negb
push
pop
leave
divl
sub
scas
xorl
push
ja
push
sub
stc
sarl
cmp
mov
cmp
int
ret
and
scas
and
stos
pop
fmuls
xchg
into
movsl
push
add
cmpsl
test
xchg
cltd
fldt
dec
cmpl
xlat
sbbb
sahf
mov
cmp
popa
leave
sbb
andb
mov
adc
and
mov
fnstcw
add
outsl
out
verr
das
jl
scas
cmc
sbb
inc
pcmpgtw
test
mov
lahf
icebp
sub
in
out
icebp
mov
mov
jp
loopne
jno
jle
cld
roll
mov
jp
loopne
jl
xor
js
xor
sub
imul
jns
inc
dec
popa
or
inc
adc
or
bound
mov
lret
and
mov
xor
push
cmp
mov
dec
jle
repz
cltd
add
sub
jne
mov
jg
xchg
cli
inc
sti
xchg
or
inc
repnz
je
sub
mov
xchg
adc
pusha
es
xchg
sub
iret
push
cmpb
rorb
push
insb
mov
pop
sbb
into
and
adc
fwait
jecxz
pop
push
add
pop
mov
fiaddl
test
inc
jle
add
std
stos
add
xchg
shl
into
mov
lds
jp
out
cmp
in
push
iret
ljmp
je
jmp
test
testl
mov
imul
xor
push
popa
jnp
outsl
pop
sbb
sbb
lods
bound
mov
bound
sahf
mov
mov
inc
push
sub
mov
jmp
jecxz
mov
lcall
ljmp
adc
and
push
mov
test
mov
fwait
push
sub
push
out
cs
mov
imul
popf
cli
insb
mull
cmp
sbb
cli
and
pop
ret
mov
pop
or
loope
pop
adc
ret
dec
jb
pop
lret
test
aam
ss
pop
cmpsl
rcl
cmp
data16
xor
in
inc
xchg
or
enter
dec
lods
imul
daa
pop
lret
sub
sbb
mov
fcoml
pop
and
jb
in
sub
data16
cltd
add
loopne
pop
pushl
sub
add
faddl
dec
mov
cmpsb
xor
xor
imul
std
mov
sub
cli
sbb
inc
outsb
push
cld
push
push
cmpsb
loope
ss
mov
pop
aad
push
xchg
in
push
cmpsl
imul
pop
jo
cwtl
push
xchg
lahf
jne
push
mov
inc
icebp
repnz
cmpsl
mov
aas
jo
stc
mov
movsb
pop
outsb
sub
mov
ds
push
sbb
jne
pop
scas
push
fidivl
dec
fcmovnb
shrl
push
push
pop
jl
in
ja
xchg
cmp
cmc
jo
mov
dec
data16
cs
fnsave
in
ja
mov
scas
mov
pop
stos
inc
xor
ret
and
adc
xorl
push
movsl
xor
enter
test
push
sahf
sub
ret
dec
mov
pop
pop
inc
add
fwait
lea
mov
mov
jle
jle
inc
andl
jmp
push
mov
movsb
cmp
fwait
mov
push
loopne
ja
rcr
sarb
sub
sti
push
jp
in
aam
xchg
mov
aaa
mov
pop
stos
inc
insb
pop
incb
lock
mov
in
inc
cld
int
jb
jo
cltd
fsubrl
popf
loop
sub
lret
outsl
push
int
iret
sbbb
cmpsl
mov
sti
test
mov
ja
pop
iret
push
sbb
push
les
inc
icebp
mov
jo
inc
je
mov
xor
mov
jp
insb
sbb
push
pop
lock
xor
scas
cltd
stos
inc
jae
ss
ja
inc
xor
and
lret
push
mov
dec
fstl
mov
add
inc
mov
fsubl
nop
test
mov
mov
add
xor
ja
xor
ds
addr16
shll
inc
inc
dec
or
mov
xchg
sub
mov
sub
or
fwait
cs
int
pop
jle
in
adc
sbb
inc
jae
sub
cld
jle
stc
mov
inc
and
jecxz
or
dec
pop
add
rcll
sbb
in
in
fmull
adc
int3
lds
cld
aaa
movsl
xchg
js
pop
xor
nop
inc
dec
mov
inc
xchg
sti
mov
jae
fimuls
lock
scas
and
loop
fdivs
fdivl
jae
pop
jb
pop
shrl
jnp
mov
leave
lea
xor
or
lods
mov
xchg
cwtl
filds
or
push
mov
mov
roll
mov
out
rcl
xor
or
ret
mov
xchg
add
and
faddl
adc
or
mov
test
mov
adc
dec
or
int
pop
int
sbb
leave
sbb
fwait
dec
leave
lret
pop
scas
push
mov
mov
xchg
pop
xchg
jno
mov
add
in
psrlq
cmp
push
adc
and
sub
jnp
jl
sub
cmpsl
aam
pop
addl
movsl
ds
mov
sti
mov
cli
stos
aad
or
aaa
push
leave
repz
aas
aam
jl
and
xor
jl,pn
push
lret
cmpsl
jae
dec
aad
mov
shlb
shrb
mov
push
outsb
fdivrs
cmpsb
ja
push
sbb
int
lret
in
arpl
arpl
sahf
mov
cmpsb
jl
mov
fcmovu
je
mov
rorb
hlt
imul
imul
pop
repz
mov
sbb
fwait
push
jge
mov
loopne
les
xor
xchg
test
mov
loope
popf
scas
push
mov
sub
sub
mov
xchg
and
push
into
ljmp
jecxz
loop
inc
outsl
mov
mov
or
lret
rcrl
inc
pop
aad
in
lret
into
nop
mov
xchg
add
push
fwait
cmp
jb
xor
push
ja
inc
push
test
out
mov
neg
push
decl
outsl
jns
fnsave
lahf
bsf
mov
ja
mov
rcll
adc
shrl
jno
xor
xchg
xchg
jne
and
cmc
fsubrl
fs
or
sub
sti
stos
into
clc
test
shlb
push
out
add
xchg
sarl
inc
mov
lods
leave
jl
rol
lds
mov
ret
add
mov
test
and
mov
cli
xchg
icebp
fcomps
dec
xchg
int
mov
push
sahf
pop
ljmp
fs
push
xchg
add
push
pusha
add
pop
test
cmpb
jmp
and
and
sbb
fisttpll
jge
jp
mov
lret
out
rdtsc
ret
je
mov
mov
movsb
clc
inc
inc
add
cmc
xchg
dec
repz
inc
dec
pop
fcoms
mov
jg
dec
cwtl
repnz
fsubrl
mov
lret
or
xor
rolb
lods
lret
adc
clc
pop
or
or
bound
das
ficoml
jns
and
push
out
lock
lret
xor
cld
jl
imul
scas
leave
and
dec
addr16
jno
dec
xor
lahf
adc
mov
test
out
xchg
add
pop
pop
cmpl
out
ss
shlb
adc
xchg
add
lret
ret
dec
icebp
scas
gs
add
mov
jp
pop
in
into
mov
pop
mov
shlb
rcl
imul
xchg
shrb
and
or
dec
in
and
aam
paddusw
mov
stos
test
pop
and
and
sarb
lods
filds
and
ret
push
into
mov
outsl
fwait
enter
mov
arpl
sbb
jo
jae
mov
add
push
dec
lcall
sub
jl
roll
stos
or
sahf
call
add
jb
ds
in
mov
fdivs
aas
mov
js
negb
std
xchg
lock
xchg
push
lods
pop
sbb
fimull
les
repz
sub
jne
stos
clc
pop
mov
xchg
push
xlat
mov
mov
push
orl
test
outsb
sbb
adc
fwait
jge
sub
add
mov
int
aas
subl
test
mov
test
outsl
sub
xor
cwtl
jae
stos
mov
jb
out
loopne
sub
loopne
ret
push
push
pop
pop
mov
adc
popf
pop
fsubs
add
mov
es
push
jae
and
sbb
fwait
popf
push
or
mov
xchg
jno
dec
cmp
push
inc
xor
mov
out
pop
imul
cltd
pop
mov
out
cs
fdivrl
fsubr
addr16
loope
mov
mov
xor
mov
lods
addr16
cs
lea
aam
inc
push
inc
adc
and
xchg
sub
hlt
or
add
push
daa
aad
and
jnp
or
sbb
push
addr16
dec
imul
les
jnp
test
or
dec
pop
in
mov
mov
inc
gs
mov
ss
xor
mov
dec
sub
std
mov
mov
push
push
pop
mul
adc
lea
pop
inc
adc
stc
cmpsb
sbb
fadds
sbb
nop
outsl
dec
stos
cld
xchg
mov
test
out
imul
pop
xor
lret
cmp
or
cmpsl
mov
in
out
mov
inc
inc
or
and
pop
ds
xchg
lods
dec
pusha
scas
lock
xlat
inc
js
push
jp
pop
mov
loopne
push
leave
mov
popf
aad
cmpsl
xchg
lea
test
and
iret
outsb
xor
add
imul
jge
nop
in
pop
ds
mov
lret
push
push
xchg
push
push
les
sarl
into
fcoms
ja
mov
dec
xchg
xchg
cwtl
popa
aad
xor
jecxz
fcmove
popa
dec
shlb
fldenv
push
out
cmp
daa
rcrb
outsl
push
iret
scas
push
and
cmp
inc
add
pushf
xchg
mov
jl
in
movsl
pop
mov
imul
push
mov
ficoms
mov
fldcw
imul
aaa
insb
test
fstps
add
xchg
cltd
jae
bound
test
or
jmp
outsl
sarb
pop
push
cwtl
push
shll
mov
test
mov
ret
mov
mov
jne
leave
cmp
lahf
jge
mov
es
xchg
mov
cmp
or
mov
and
shll
mov
dec
pop
pop
cmp
subl
xor
loop
jl
xchg
arpl
out
sub
das
adc
ds
fs
ljmp
js
adc
lds
cmp
lods
jmp
fstpt
imul
es
mov
cmpsl
xchg
jb
cmp
std
dec
xchg
jmp
dec
repz
xor
jg
insb
ja
add
jne
push
popf
pop
lret
jno
jnp
push
push
je
mov
add
mov
adc
pop
fildl
and
jl
cmc
push
repz
push
mov
mov
fcoml
jecxz
and
add
push
out
push
fwait
jmp
int
movsb
rcr
push
cmp
jge
jo
jo
cli
mul
rclb
jae
jnp
pop
inc
dec
aaa
pop
test
inc
out
lods
inc
shlb
loopne
xlat
test
lret
bound
dec
cmpsl
fs
ljmp
xor
mov
mov
mov
mov
lea
jb
jecxz
mov
mov
enter
popa
xchg
mov
pop
lcall
arpl
sbb
popf
ret
mov
jp
mov
aaa
dec
add
fs
insb
in
mov
jnp
xorb
xchg
adc
jmp
cltd
or
cmpsb
cmp
lea
shl
lcall
or
je
mov
testb
mov
stc
mov
sbb
mov
cmc
lea
adc
jnp
lahf
sbb
inc
nop
loop
ds
ficomps
cs
rorl
rcll
xchg
test
mov
loopne
sub
cwtl
cld
es
push
sbb
jo
dec
adc
cmp
lahf
push
jg
mov
enter
jne
clc
xchg
pop
pop
sub
pop
xor
pop
fisttpll
xchg
stos
sub
cmp
repz
mov
inc
rcl
cli
cmpsl
jecxz
dec
xor
shl
popf
je
gs
jmp
or
aad
popa
fidivrl
xchg
inc
fdivrs
sub
pop
push
cs
in
mov
jmp
lods
jbe
mov
pop
testl
imul
xor
daa
in
jo
inc
lret
popaw
cmpsl
mov
mov
shlb
mov
cmc
mov
xor
xchg
push
xlat
outsl
mov
dec
mov
sbb
sbb
cmp
call
repz
sarl
das
and
inc
mov
mov
outsb
inc
xlat
andl
stos
mov
mulb
pop
ljmp
sti
xlat
imul
daa
pop
pop
xchg
xor
dec
push
adc
or
lock
rol
enter
fstl
outsl
sub
cmpsl
fstps
pusha
mov
mov
push
mov
mov
dec
jae
inc
int
pop
adc
pop
out
lea
stos
mov
jp
mov
adc
pop
in
adc
mov
pop
sub
xor
lock
gs
jb
repz
stos
rcrl
cmp
lret
push
sbb
out
imul
mov
test
pushf
jno
pop
and
cli
imul
test
push
loopnew
pop
sbb
mov
inc
xor
and
sti
lahf
jp
pop
jmp
shll
fisubrl
push
popf
pop
adc
and
adc
pushf
mov
loopne
xor
push
jne
dec
rcrl
push
jle
iret
mov
sbb
mov
mov
adc
loope
mov
adc
jno
ja
pop
mov
pop
adc
push
dec
sub
daa
xchg
cmp
push
jno
imul
ret
addl
iret
fmuls
mov
dec
stos
cmp
and
adc
mov
inc
fidivrs
sbb
in
inc
out
jg
dec
leave
int
out
hlt
lcall
and
fistps
test
std
test
arpl
cmp
mov
mov
popf
lahf
clc
mov
mov
orl
pmulhw
fimull
cmp
mov
push
add
cmp
scas
pop
leave
and
inc
push
std
lea
or
push
pop
into
push
imul
xchg
mov
aaa
rcr
jmp
jae
inc
fwait
pop
aas
sbb
pop
push
into
in
add
aas
daa
clc
aaa
pop
push
jns
fisttpll
xlat
lcall
cmp
sub
sub
in
int
inc
mov
popa
dec
sub
mov
add
dec
loope
mov
push
fildll
or
and
ja,pn
lods
xor
xor
dec
adc
dec
popf
push
jns
ficoms
cmp
xchg
xor
test
inc
pop
pop
xor
mov
loop
push
int
enter
cld
orl
inc
inc
adc
pop
sbb
push
in
popf
jle
or
or
fwait
fidivs
mov
sarb
xor
mov
push
and
add
fs
les
pop
enter
pusha
add
mov
out
inc
sbb
sub
imul
stc
inc
or
pop
lods
add
in
mov
data16
mov
mov
inc
push
sarb
sub
cmp
xchg
inc
inc
pop
das
insb
pop
cmp
fcoms
cmp
jecxz
or
daa
jnp
push
add
mov
js
add
lcall
ljmp
or
push
into
outsl
xor
lcall
sub
mov
clc
sahf
shrl
lcall
jl,pt
sbb
insl
std
jns
int3
stos
mov
mov
aad
inc
adc
push
lcall
cmp
dec
lcall
push
sbb
pop
insb
bnd
push
mov
test
jnp
adc
les
pop
cmpsl
loope
push
fwait
jo
addr16
mov
stos
jmp
mov
mov
xor
and
rcll
jp
scas
or
jb
sbb
rep
stos
int
aas
xchg
xor
test
std
test
jbe
sub
mov
sarb
or
cld
in
pop
dec
mov
mull
xlat
pop
cmpsb
insl
ds
sahf
hlt
jle
std
pop
call
mov
mov
outsb
js
into
jmp
out
cmp
fisubrs
mov
int3
jo
shrb
shll
in
into
inc
gs
and
adc
fdivrs
movsb
sti
add
rorb
fsub
mov
loope
out
nop
daa
mov
in
out
or
test
mov
das
sbb
xchg
push
idivl
jp
pop
jle
sub
xorl
inc
scas
add
adc
lcall
adc
and
sub
xor
adc
inc
scas
mov
mov
out
cmp
inc
aad
and
cmpl
sbb
push
scas
xchg
pop
jge
push
sbbl
jge
fnsave
or
mov
jle
dec
pop
mov
or
shr
jo
inc
inc
aam
push
lret
dec
sub
mov
mov
mov
sti
subl
imul
into
test
add
add
sbb
mov
inc
sub
ret
xchg
push
lahf
std
out
push
push
xlat
mov
xor
inc
fsubs
jnp
dec
lds
adc
jnp
imul
xorb
ja
cmpsb
cltd
xchg
dec
dec
cmp
imulb
mov
sti
cltd
jns
pop
pusha
les
xor
inc
add
ljmp
in
loop
mov
aad
cmpsb
clc
jmp
mov
stos
ret
mov
fnsave
pop
subl
rcrl
adc
xchg
push
je
sub
pop
jl
and
cmpsb
and
adc
xchg
stc
leave
scas
pop
imul
lds
push
pop
imul
xchg
pop
jp
xor
addl
pop
push
cmc
ja
ljmp
fcompl
jle
data16
mov
xchg
dec
neg
sbb
fsubrs
fisttps
daa
daa
jmp
add
mov
cmc
lahf
mov
outsb
mov
sbb
xchg
pop
aad
arpl
scas
rcr
cltd
inc
jno
into
inc
ret
xor
cmp
xchg
jo
es
cmp
imul
imul
push
mov
lods
insl
fbstp
dec
fmul
mov
aad
mov
shl
sti
add
sub
pop
data16
sbb
aad
mov
cmp
adc
iret
lock
xor
daa
int3
movsb
call
dec
xor
or
sarb
leave
mov
pop
leave
mov
fimuls
or
and
aad
or
adc
jecxz
or
loope
scas
cmp
mov
mov
stos
stos
cmp
not
std
cmp
int
xchg
push
mov
cmp
insb
xchg
sub
mov
xlat
ret
inc
inc
fiaddl
jge
cmp
or
mov
sahf
cli
lods
popa
push
enter
loop
xchg
shlb
cli
sbb
outsl
repnz
inc
pop
push
xchg
pop
clc
mov
push
push
dec
jbe
inc
mov
pop
lock
push
inc
jno
dec
shl
mov
ss
dec
pop
push
arpl
push
test
cmp
jle
mov
test
dec
and
cmp
inc
out
stos
pop
daa
cld
sbb
fsts
pop
jo
push
dec
ret
cmp
cmp
fists
in
pop
lods
je
fcompl
mov
in
mov
jnp
mov
test
jg
push
jnp
in
shll
in
es
xchg
push
pop
cmpsb
sahf
mov
sbb
lds
mov
cmc
stos
rolb
inc
xchg
test
ficoml
arpl
mov
mov
pop
dec
add
xor
inc
xchg
mov
jo
movsl
mov
movsb
xchg
push
push
sti
pop
mov
adc
lods
push
lock
ret
insl
xchg
inc
ret
adc
push
dec
nop
adc
loope
fnstsw
xor
insl
lods
dec
mov
cli
dec
rcll
inc
popl
mov
mov
sarb
jae
pop
and
ja
inc
jbe
ja
movsb
jmp
lret
notl
push
test
cld
pushf
inc
inc
jl
ljmp
cld
and
pop
mov
xchg
lea
cmp
cwtl
push
jnp
cwtl
add
jbe
mov
dec
and
rcll
ds
gs
in
mov
imul
cmp
js
mov
mov
dec
mov
outsb
cmp
adc
jbe
xchg
mov
aas
aad
aam
mov
dec
out
xchg
idivb
aas
outsb
cmp
sub
les
adc
test
addr16
jge
ja
adc
push
ret
out
cltd
jecxz
adc
lock
sbb
das
and
addr16
mov
mov
jnp
inc
outsl
mov
orl
add
xor
mov
imul
or
inc
fildll
xchg
pop
mov
cmpsl
pushf
je
mov
inc
xchg
inc
cmp
pop
popa
nop
ljmp
hlt
stc
push
xor
adcl
andb
inc
pop
fnstsw
ret
xchg
cmp
dec
or
loopne
mov
lea
sbb
sub
ret
push
aaa
jl
fscale
lret
rcrb
inc
xchg
insb
bound
jno
insb
fistps
pop
sbb
call
and
push
pop
mov
xor
shlb
jge
push
test
xor
jmp
add
or
lods
push
sub
loope
addr16
int
or
mov
js
mov
cmp
data16
pushf
xor
out
xor
pop
xorl
inc
dec
rclb
orb
shr
call
cmpsb
push
add
lahf
lcall
and
inc
or
pop
xchg
pop
sbb
push
fistpll
pusha
pop
sbb
roll
scas
push
push
and
and
mov
jp
sbb
cmp
mov
or
mov
imul
rorb
mov
jl
stos
adc
aad
movsb
adc
pop
mov
mov
mov
aaa
push
aas
inc
js
aad
fstpt
pop
clc
sub
inc
push
and
mov
aad
jo
ljmp
pusha
xchg
test
std
sbb
popf
rclb
mov
mov
aas
cmp
mov
push
test
add
icebp
aaa
adc
push
xor
sti
cmp
jl
add
push
jle
lods
fwait
or
pop
push
loopne
sbb
es
cli
sub
out
pop
push
js
or
dec
ret
inc
adc
les
ja
sbb
popa
lods
enter
out
adc
lods
jb
movsl
jp
out
or
jge
fldl
rcrl
cltd
jnp
sbb
dec
jp
sub
fiaddl
sub
adc
in
repnz
rorl
sub
das
leave
or
loopne
call
scas
js
mov
xor
mov
xor
mov
repnz
into
dec
ja
cld
sahf
scas
mov
pop
push
fdiv
mov
inc
and
sbb
out
cld
mov
xchg
out
sub
pusha
adc
mov
dec
jecxz
into
dec
dec
fxch
int
mov
mov
push
ljmp
mov
jbe
dec
and
rcr
sub
push
xor
lods
pop
jmp
pop
dec
cmpsl
adc
cmpsb
jae
sub
xor
sti
ret
xchg
movsl
mov
fs
faddl
arpl
jns
jno
push
ljmp
lods
fsubs
jns
stos
ds
fsts
stc
xchg
repnz
pop
inc
cli
or
lret
dec
sbb
imul
mov
in
mov
fimuls
divb
sbb
jmp
mov
mov
pop
jbe
mov
push
out
in
mov
rcrb
sahf
test
cli
dec
je
js
mov
out
xchg
sbb
test
in
pop
jecxz
movsl
sbb
mov
sbb
testl
stc
xchg
adc
insl
leave
push
clc
andb
and
inc
cmc
sbb
shlb
aaa
fwait
ret
rcr
cli
dec
jge
adc
mov
mov
mov
mov
adcl
inc
sub
dec
xchg
aas
rcrl
sub
in
clc
shll
movd
icebp
sahf
daa
push
push
pusha
jno
mov
or
add
dec
xchg
lea
cmp
rol
fisubrl
add
mov
jp
sub
cli
add
stc
pop
jmp
sbb
push
or
aaa
add
xchg
aaa
ljmp
loopne
insl
push
jmp
cmc
aaa
out
inc
nop
int3
mov
pusha
sbb
into
imul
push
imul
leave
incb
cmp
mov
test
mov
shrb
pop
addr16
out
fisubrs
sub
mov
loope
aas
lahf
data16
outsb
test
add
data16
inc
xor
test
mov
movsl
jle
sub
push
pop
ret
lods
pop
xor
push
shlb
aaa
push
mov
xor
adc
dec
lock
ljmp
jne
xchg
sub
xor
jae
ja
jg
fisttpl
insb
cli
lods
pop
add
cld
xchg
pop
xor
adc
push
mov
clc
jns
xchg
hlt
mov
xchg
fildll
cltd
std
leave
dec
rcr
rclb
test
loope
jg
xchg
repz
mov
stc
popf
fst
fbld
sub
testb
and
xchg
jb
pushf
push
movsb
mov
out
ljmp
mov
cltd
push
lret
adcb
arpl
stos
fldt
xchg
cltd
cmp
mov
push
cld
lock
in
inc
xchg
daa
and
loope
sub
add
mov
dec
pushf
imul
jge,pn
and
repnz
cmp
popa
or
xor
mov
inc
les
addr16
push
push
dec
or
and
pop
andl
add
fsubp
sub
in
mov
lahf
outsl
icebp
or
insl
pop
push
test
and
lcall
test
push
add
push
cmc
push
arpl
ljmp
mov
pop
mov
in
movsl
or
pop
inc
fisttps
push
pop
push
xchg
ret
jo
jns
jecxz
aaa
out
lret
adcb
sub
fadds
mov
fisttpl
js
adc
jnp
sbb
mov
pop
sahf
xchg
mov
sub
jp
inc
and
nop
test
pop
dec
pop
aam
mov
xor
add
sbb
ljmp
push
int3
in
push
mov
imul
inc
hlt
rcrb
pop
pop
and
jns
and
cwtl
outsb
mov
mov
pop
jne
sbbl
lea
jmp
fisubrl
js
call
lods
cmp
xchg
popa
sub
icebp
push
pop
lcall
mov
mov
lea
loop
and
and
loop
mov
mov
mov
cmp
fdivl
fisubs
xlat
cmpsl
rorl
add
mov
add
cmp
add
xlat
cmp
lahf
mov
call
hlt
mov
and
fwait
scas
inc
loope
sbb
fwait
cmp
shll
xchg
or
cmp
insb
inc
nop
pusha
ret
cmp
inc
daa
lret
mov
paddsw
mov
fwait
outsb
out
shlb
cltd
pop
push
int
lret
mov
lcall
aam
notb
test
fdivrs
and
loop
mov
scas
icebp
in
fisubrs
dec
std
inc
lahf
lahf
out
and
jns
mov
test
lret
scas
loopne
fstl
int3
rcrl
jl
loopne
add
jle
or
das
cmp
imul
scas
pop
jns
mov
cli
xor
cmp
xchg
xchg
lock
sbb
fldenv
scas
int3
mov
cld
mov
out
mov
dec
addr16
shlb
test
js
mov
push
out
xchg
jge
shl
mov
push
jge
xor
out
dec
sbb
cmp
mov
jne
inc
and
sahf
pop
stos
push
sbb
lods
movlps
lcall
mov
ss
adc
jmp
test
out
nop
xchg
push
popa
movsb
test
mov
insb
or
and
aas
mov
pop
sbb
cltd
cli
in
and
sub
aaa
and
jnp
test
xor
sbb
push
aam
pop
lods
push
jl
aam
insl
jl
dec
pop
mov
xchg
das
adc
insb
cmp
sbb
stos
mov
es
xor
xchg
ss
pop
les
jge
inc
push
in
insb
lret
jl
push
stos
imul
lret
mov
bound
jo
add
enter
sbb
lods
scas
stos
adcb
push
cmc
jmp
mov
je
mov
xor
inc
inc
jae
shl
inc
and
ds
stos
arpl
mov
test
ret
xor
nop
fs
ret
ja
imul
lods
mov
pop
repnz
push
sbbb
jne
sbb
cmp
jecxz
sbb
jle
out
adc
aas
addb
adc
push
stc
pop
mov
push
adc
jg
pusha
push
mov
xchg
and
fadds
add
mov
or
std
jae
and
mov
iret
inc
pop
add
ret
or
xchg
in
int
mov
dec
jle
adc
jecxz
mov
adc
out
test
pop
std
lret
dec
scas
rcrl
mov
popa
push
lock
in
pop
mov
mov
js
dec
inc
stos
add
xor
stos
dec
and
push
pop
pop
xchg
stc
jle
fs
movsl
inc
lds
js
push
loop
and
fcoms
cld
mov
out
xchg
pop
add
and
pop
dec
ret
fimuls
mov
enter
jle
jg
fsubs
mov
icebp
cmp
hlt
movsb
pop
xor
popa
in
shlb
or
sarb
scas
mov
lock
ficoml
std
jg
das
movsb
test
xchg
add
pusha
sub
jl
adcl
inc
imul
nop
dec
xchg
or
cmpb
pop
addr16
add
sti
repz
push
js
mov
testb
arpl
and
imul
lods
popa
rcrb
push
fs
int
pushf
pop
jb
sub
inc
jmp
rcll
dec
dec
repnz
out
shlb
shr
rolb
mov
not
jecxz
dec
adc
lahf
loopne
outsl
mov
aaa
clc
xchg
cmc
xor
push
imul
test
sub
jmp
xchg
mov
aad
imul
mov
ret
xchg
sbb
mov
cmc
sub
push
mov
push
daa
movsb
popf
sub
arpl
sub
iret
scas
cmpl
aam
repnz
cli
out
lods
mov
out
sub
push
or
shlb
mul
lea
lret
pop
xlat
out
insb
mov
aas
add
sub
xor
enter
sbb
loop
dec
jbe
adc
int
test
insl
int3
xchg
jns
mov
in
mov
enter
lds
mov
jg
push
adc
pop
stos
lret
jmp
inc
cmp
stos
rorb
mov
jle
jecxz
leave
mov
push
iret
and
dec
dec
and
dec
fsubrp
stc
xchg
mov
push
aad
lret
shl
stc
outsl
add
jg
mov
popf
ds
pop
fisubrl
push
fs
movsl
push
loop
and
aaa
cltd
push
pop
xchg
inc
pop
push
clc
add
adcl
or
xchg
cwtl
shlb
dec
sbb
inc
xor
cmp
push
mov
pop
lods
or
fnstenv
cmp
sbb
fcoms
jne
mov
xor
out
mov
mov
sbb
sub
add
add
dec
hlt
es
pusha
movl
popa
xchg
dec
mov
lahf
and
and
stos
push
repz
je
add
or
fidivs
dec
lea
push
pop
pop
cmpsb
and
gs
dec
hlt
or
jnp
jbe
outsl
lods
fdiv
xor
adc
push
jmp
outsb
cli
dec
dec
or
adc
inc
arpl
cld
sbb
sti
push
imul
jne
add
std
je
rclb
fildl
push
and
cmovg
jnp
cld
imul
mov
ljmp
inc
xor
hlt
add
jbe
pushf
adc
adc
mov
clc
pusha
int
ljmp
fs
jnp
aam
adcb
into
lret
insb
test
mov
fwait
jb
sbb
push
push
adc
dec
loop
xchg
jno
je
cmpb
mov
int3
add
mov
mov
pushf
dec
fs
je
mov
dec
and
test
xor
int
loopne
stos
fwait
stos
enter
scas
mov
jns
pusha
sbb
fsts
outsl
sbb
mov
fs
cli
ja
and
lret
and
xor
adc
and
out
bound
cmpsb
flds
sti
inc
std
ja
push
movsl
inc
in
add
adc
inc
and
xor
or
in
xor
mov
mov
cmp
inc
stos
dec
ret
dec
out
inc
leave
insb
repz
jecxz
loop
pop
xor
fisubs
sahf
xchg
xchg
test
fmull
test
out
xor
push
sbb
iret
rcrl
push
mov
xor
push
sub
add
xor
lds
gs
je
lahf
orb
push
jae
ret
mov
jle
mov
sahf
in
arpl
icebp
push
out
pop
or
jl
push
rorl
cmpsl
sbb
xlat
jae
adc
inc
jno
ljmp
pop
pop
jecxz
lret
loop
or
aas
jmp
sbbb
dec
nop
gs
clc
into
decl
ss
fnstsw
sbbl
stos
ss
lret
outsb
fsubl
mov
xchg
outsl
std
push
repz
sbb
ss
icebp
sbb
xchg
inc
mov
fwait
and
mov
test
nop
sbb
cmp
sub
adc
insl
add
and
popa
xor
int3
imul
adc
xlat
das
fstps
in
sar
inc
pop
xchg
imulb
leave
loope
enter
pop
mov
sarb
insl
rcrb
stos
imul
mov
movb
sub
mov
movsl
add
pop
movsb
pop
lret
bound
push
stos
xchg
add
das
cmpsb
negl
mov
mov
mov
mov
pop
dec
jo
or
mov
dec
lds
add
nop
ja
stc
pop
sub
ja
push
outsl
xchg
mov
inc
mov
imul
sbb
or
adc
sub
ret
rcrl
jp
adc
cld
push
iret
movsl
or
mov
adc
mov
inc
das
int
cmpsb
cmp
mov
xor
and
sub
iret
sbb
scas
mov
dec
mov
adcb
sbb
orl
xor
inc
lods
shr
mov
stos
mov
inc
xchg
or
popa
add
xchg
movsb
xor
mov
jb
fisttpll
mov
mov
cltd
inc
sub
out
sub
push
pop
cmpl
pop
out
jmp
test
repz
cltd
add
les
jmp
or
gs
stos
test
jecxz
xchg
dec
mov
popf
out
mov
adc
sub
push
mov
out
insb
mov
mov
test
popa
pusha
aad
dec
and
imul
ja
test
jne
xchg
xchg
je
ret
mov
mov
xchg
ss
inc
adc
negb
add
fxch
popf
jae
enter
or
add
ss
mov
push
lret
aas
fstps
push
add
add
shl
jo
aaa
jns
add
adc
and
mov
inc
add
aam
fisubrs
dec
ljmp
push
sub
je
scas
xchg
sub
gs
loop
shrl
data16
lock
fdivrp
jo
arpl
cmp
pop
cmpsl
aad
nop
xor
jno
and
cmp
sbb
ja
out
das
push
jae
daa
lret
dec
imul
out
sub
sahf
pop
in
cmp
xor
and
sub
int
loop
xchg
hlt
mov
iret
cmp
leave
jbe
push
add
add
mov
stc
rcll
push
jo
es
mov
mov
movsb
lret
cmpb
pop
lock
and
test
data16
out
push
cmp
mov
in
insb
jmp
jne
rorb
nop
scas
ja
sub
pushf
jae
cmp
scas
mov
scas
sub
sti
iret
in
push
inc
dec
repz
incl
xor
and
push
cmp
add
cmp
insb
cmp
xor
pushl
and
adc
dec
in
mov
clc
in
mov
repnz
nop
and
lock
jno
jns
or
dec
icebp
outsl
jle
inc
xchg
sub
add
sbb
pop
rorl
lret
test
je
push
ret
cmp
jb
and
fmull
in
dec
out
fildll
sub
mov
mov
mov
mov
scas
and
aam
out
loopne
fwait
std
mov
in
xchg
xor
push
xchg
mov
jb
mov
lods
and
es
sahf
movsl
nop
mov
sub
push
inc
cld
out
lock
mov
mov
negl
clc
js
xchg
addr16
mov
or
adc
in
jle
or
lock
subb
nop
call
push
out
sub
xor
ljmp
aad
and
fidivrl
mov
jl
mov
in
add
pop
sub
iret
testb
mov
mov
sbb
sbb
ret
add
sbb
sbb
pop
jmp
xchg
or
mov
push
popa
jge
lock
jno
pop
out
outsb
cli
out
adc
mov
push
out
inc
add
pop
imul
jo
pop
inc
cmc
sahf
fisttpl
out
sub
pusha
xor
ds
scas
inc
push
jg
mov
fistpll
pop
lret
jp
cmc
psrlq
sbb
mov
mov
pop
xchg
cs
jnp
call
inc
cli
pusha
rolb
jae
aam
ja
rorb
lret
rolb
arpl
repz
sahf
sahf
lods
sti
repz
inc
adc
aam
sub
popf
insb
push
enter
sbb
pop
xchg
jge
jl
shl
push
or
dec
jmp
je
and
or
aam
sbb
xor
adc
fimuls
shl
mov
stos
shr
push
push
fistps
add
jecxz
push
cmp
iret
roll
adc
jmp
mov
mov
insl
add
jmp
push
push
nop
add
jb
std
jge
jmp
ds
push
fwait
adc
rcrb
enter
mov
inc
mov
inc
and
data16
inc
add
jmp
mov
sbb
mov
cmp
test
repnz
xchg
mov
movsl
or
enter
mov
icebp
test
fmulp
sahf
and
cltd
jae
inc
es
mov
out
pop
test
push
xor
xor
enter
pop
pop
mov
jge
jg
enter
mov
dec
adc
orl
lcall
lea
nop
cli
insb
leave
hlt
sub
aaa
aam
xchg
arpl
jge
cmp
fdivrs
sbb
jecxz
aad
jl
inc
inc
mov
mov
ds
mov
stos
nop
jp
mov
jmp
jl
push
movsb
ljmp
inc
mov
stos
shr
repz
pop
movsb
and
std
or
jg
push
push
mov
jae
popa
pop
popa
push
pop
pop
mov
or
loop
pop
add
xor
sbb
mov
cmp
fwait
dec
xor
xor
add
adc
mov
dec
adc
pop
es
lret
lock
xchg
sub
lret
pop
rorb
ret
jbe
mov
aaa
push
or
je
pop
repz
mov
pop
cmc
fcmovu
jecxz
inc
mov
cltd
outsl
loope
shlb
and
mov
mov
mov
icebp
fists
jl
adc
push
mov
cmp
mov
adc
dec
insl
arpl
mov
fmull
adc
popa
xchg
dec
or
xchg
clc
into
mov
push
cwtl
mov
mov
push
xchg
fnstcw
inc
pop
push
mov
out
and
mov
xorb
sub
mov
xor
sbb
and
iret
imul
xor
aad
ds
lea
test
fucompp
jbe
sbb
inc
sbbb
test
xor
jb
cld
call
das
pop
and
mov
andl
out
xor
gs
orl
scas
sahf
les
pushf
adc
insl
repz
insl
pop
cwtl
fwait
inc
dec
lock
shr
ja
out
idivl
push
je
xorl
rcl
push
sbb
stos
orb
addb
sbb
jl
imul
fwait
push
test
rcll
mov
adc
or
shl
xchg
ret
out
out
cmpsl
js
icebp
xlat
clc
inc
out
imull
push
je
or
pushl
jg
cwtl
xor
popf
jns
add
das
fisubs
inc
in
and
icebp
dec
out
jno
fdivs
sub
lds
or
xchg
fcomps
or
xor
inc
pusha
or
inc
mov
insl
or
lods
ficoms
cmp
cltd
push
into
and
insl
dec
shll
push
inc
xchg
jno
adc
cmpsl
adc
mov
pop
xchg
data16
loop
rcll
cmp
add
mov
sti
enter
shlb
ficomps
std
fldcw
mov
push
mov
lock
cmp
sub
xchg
scas
jg
or
jg
xor
dec
jmp
iret
xchg
pop
daa
lret
loop
stos
insb
xchg
sbb
pusha
dec
push
das
lret
jbe
out
mov
sub
and
mov
scas
sub
dec
inc
cmpsl
cltd
sub
dec
fiadds
aam
inc
shl
shlb
fistpll
enter
out
lret
mov
scas
xchg
aad
movsl
gs
aaa
shll
fcmove
cmc
outsb
scas
add
outsl
xchg
push
mov
cmp
stos
or
mov
mov
mov
and
pop
inc
xor
imul
cmp
fistps
jb
jnp
or
sub
inc
leave
xchg
fdivr
jne
push
movsb
push
and
xchg
lcall
jg
and
das
push
jle
dec
scas
xor
xchg
es
mov
rcr
inc
adc
jmp
xorb
or
pop
xor
pop
and
stos
pop
call
pushf
sbb
and
push
mov
push
rcrb
push
xchg
or
jl
cmp
sub
sub
cs
push
cmp
add
push
data16
sbb
and
mov
scas
inc
bound
inc
sub
jg
mov
lods
lret
dec
nop
mov
adc
cs
into
add
and
lods
mov
sub
push
in
sbb
jmp
shrl
mov
adc
mov
js
jmp
sbb
addr16
pop
fnstcw
cmp
aad
cmp
mov
or
mov
fildll
add
enter
dec
pushf
xchg
jg
inc
loop
dec
andl
or
adc
and
fwait
lock
pop
jb
in
je
dec
inc
cld
adc
inc
jmp
pop
rcr
mov
inc
push
add
sahf
and
push
ficompl
aas
faddl
or
cmp
dec
sub
lea
ljmp
je
dec
sbb
cmp
mov
outsl
and
cmp
scas
roll
lds
aaa
and
mov
scas
xchg
fldenv
fs
mov
sub
je
seta
dec
mov
push
and
add
cmp
shrb
cmp
xor
adc
mov
sub
pop
mov
test
mov
fldt
rcrl
push
fisubs
sbb
or
sub
imul
ds
or
idiv
cmp
add
sbb
mov
pop
sbb
mov
jo
out
subl
aaa
je
xchg
jecxz
nop
test
iret
fucomp
arpl
pandn
mov
mov
ret
sbb
sub
mov
push
mov
out
jg
or
lcall
roll
out
cmp
gs
cmp
subb
pop
pushf
jp
iret
xor
cmp
data16
xchg
add
inc
out
xchg
add
xchg
cmp
filds
adc
sarb
movsl
ret
scas
jg
ret
sti
jne
movsl
cmp
push
fdivr
daa
jo
xor
lcall
das
outsl
pushf
outsb
mov
mov
fdivrs
mov
sub
std
push
push
adc
sbb
cmp
push
icebp
jl
aad
pop
imul
mov
jno
ljmp
daa
cmp
jo
inc
mov
into
outsl
inc
fcoms
outsl
pop
shlb
jo
cmc
cltd
mov
into
pop
stos
and
sub
ljmp
int
mov
std
inc
stos
mov
cmp
adc
shl
adc
xlat
test
and
ss
mov
mov
jp
push
push
xchg
xchg
mov
rorb
dec
push
call
fiadds
loopne
lret
cmc
jb
mov
cwtl
and
lahf
xchg
arpl
cmpsl
cs
popa
inc
test
lock
push
sar
fsubrp
aas
jns
sub
add
or
pop
xchg
mov
xor
xlat
movsl
dec
fistl
jecxz
push
int
cmp
xor
cmp
fiadds
shll
insb
add
enter
insb
fbstp
push
pop
inc
data16
mov
stos
push
imul
or
pop
into
aaa
adc
push
mov
mov
mov
xchg
test
std
mov
pop
pop
cmpb
push
or
xor
cltd
mov
jnp
cmp
xor
lret
cltd
jle
inc
adc
mov
lcall
ljmp
dec
das
hlt
fyl2xp1
filds
lds
mov
movsl
lock
loope
out
int
lds
push
shrb
cwtl
mov
daa
cwtl
lahf
dec
rorl
mov
rcr
adc
mov
pop
movsb
inc
jb
dec
mov
cli
xor
out
cmp
leave
fisttps
fadds
fsubl
inc
fsts
and
or
loopne
or
sub
imul
cmp
arpl
out
fsubrl
bound
add
sti
lds
cltd
push
cmc
pop
xor
in
add
push
fistps
mull
push
jmp
fistps
inc
ficomps
movsl
fidivs
xchg
push
subb
mov
jns
rolb
addb
sub
xchg
shlw
sbb
push
mov
popf
jns
inc
add
and
pop
cwtl
ds
add
sub
push
aam
dec
push
or
clc
lret
in
push
shll
xchg
or
cltd
push
jb
inc
cmp
or
push
mov
sbb
or
inc
adc
cltd
lods
adc
mov
pushf
pop
jb
fldenv
xor
mov
dec
adc
adcl
jle
stc
xchg
stos
push
adc
pop
add
fyl2xp1
ret
inc
pop
or
popa
stc
loopne
sbb
lret
ret
add
pushw
mov
mov
fdivl
jg
sarl
mov
ljmp
mov
stos
frstor
lods
add
aad
mov
call
sti
xor
movl
adc
sub
aaa
sbb
sbb
or
cmp
repz
sbb
mov
pop
xorps
int
bound
and
popf
mov
jne
dec
das
add
jae
adcl
xor
push
hlt
int3
adc
inc
and
xor
scas
fld
int3
mov
or
jle
jle
lds
pop
out
push
xor
pop
mov
adcl
inc
pusha
rcrb
push
sahf
and
orb
ret
insb
fs
sbb
pop
jbe
sub
bound
mov
test
clc
cmp
stos
xor
inc
scas
mov
sbb
cmp
std
sar
cwtl
xchg
mov
pop
ficoms
popa
jnp
push
adc
into
mov
jge
push
mov
mov
movsb
mov
push
lock
inc
sub
movl
and
adc
jge
or
rcrb
push
jo
cld
ja
popa
xchg
cmp
sub
fildl
ret
mov
mov
fisubrs
fnstsw
jno
test
dec
lods
fwait
cmpsb
pop
lods
adc
call
xorl
enter
fisubrs
sub
sbb
push
mov
lret
repnz
in
inc
and
push
lcall
ja
sbbl
daa
or
in
mov
adc
mov
icebp
jmp
call
and
mov
pop
aad
inc
push
mov
out
jbe
mov
test
call
gs
movsb
loopne
inc
int
sbb
dec
rorb
xchg
jg
ljmp
add
mov
xchg
add
jo
mov
push
mov
ljmp
subl
jb
mov
inc
scas
pusha
xchg
pop
call
and
mov
ret
inc
arpl
pushf
ds
mov
or
sbb
jno
add
mov
or
xchg
rcl
xor
jge
movsl
idivb
pushf
pop
push
shlb
adc
xlat
or
es
dec
arpl
push
xchg
cmp
mov
mov
mov
imul
push
popf
imul
sub
xor
jge
jmp
test
shlb
fmuls
ss
or
in
test
lea
xchg
ss
pop
and
dec
xchg
jp
mov
ljmp
gs
leave
mov
mov
jmp
add
mov
cmp
xchg
imul
scas
inc
xorb
mov
arpl
mov
into
or
sub
sub
sahf
mov
pop
in
mov
pop
mov
test
xchg
into
mov
testl
inc
shll
adc
cmp
setg
movsl
aaa
jl,pn
mov
mov
or
xlat
sti
push
scas
push
pop
mov
sahf
test
das
cli
es
mov
and
jnp
inc
add
add
mov
imul
push
int
cwtl
or
inc
lahf
into
nop
shlb
fistpll
inc
je
adc
les
fcmovnu
and
push
mov
icebp
jmp
jl
lods
inc
mov
xor
outsl
outsb
sub
cld
xor
mov
jb
push
mov
mov
push
addl
pop
subb
fiadds
mov
pop
sarl
mov
ret
ret
outsb
dec
ljmp
cmc
out
rorb
testb
pop
add
or
mov
xchg
or
push
cmp
mov
cltd
sarl
pop
mov
rcrb
dec
pop
int
daa
inc
hlt
cld
imul
inc
and
add
xlat
sbbl
fcomps
out
popf
mov
pop
call
stc
push
and
dec
adc
push
or
hlt
push
dec
mov
mov
popa
in
mov
xchg
pop
pop
or
cwtl
mov
mov
mov
out
movsb
pop
rcrb
inc
enter
dec
popa
cs
fcompl
data16
cmpsb
repz
sub
mov
mov
ror
jle,pn
fcomps
shlb
jbe
fcomip
dec
lahf
inc
or
movsl
push
xchg
je
sbb
jnp
lahf
js
add
je
pop
xchg
xchg
in
repz
scas
jns
stos
adc
fucomip
icebp
inc
dec
pusha
sbb
or
fwait
sbb
jecxz
and
push
mov
mov
scas
out
test
xchg
scas
cmp
xor
sub
test
cmpsb
dec
into
xchg
mov
push
sahf
arpl
mov
push
dec
mov
xorb
pop
pop
addr16
scas
arpl
and
loopne
frstor
push
es
mov
iret
sbb
iret
aad
data16
data16
sub
pop
lds
pop
jp
push
jbe
ret
or
push
cmpsl
outsl
inc
in
xor
test
fnsave
push
cmc
lock
mov
inc
in
mov
scas
or
cmp
mov
cmpsb
jmp
ret
add
sbb
mov
mov
pop
sbbb
orl
add
jns
lods
mov
ljmp
hlt
daa
xor
pop
in
mov
jge
aas
jb
xor
add
mov
mov
xchg
rcr
sbb
sbb
enter
data16
lock
xchg
lcall
mov
repz
mov
arpl
cwtl
push
iret
clc
mov
mov
or
nop
lcall
mov
jecxz
addb
jp
movb
mov
ja
icebp
ret
imul
sbb
and
push
mov
add
cmp
cmpl
test
out
in
sahf
sbb
test
test
xor
sbbb
or
sahf
pop
mov
dec
xchg
push
push
fimuls
data16
out
mov
std
and
mov
push
or
rcrl
sbb
gs
xor
mov
shlb
mov
test
aas
push
push
mov
cmc
dec
scas
or
test
xor
adc
jp
ljmp
testb
dec
xor
out
sti
pop
sbb
push
mov
in
pop
or
subl
das
sbb
push
and
and
sub
test
out
xchg
cltd
sub
loop,pt
daa
dec
in
jp
adc
out
ror
jg
lods
dec
jne
loop
cmc
mov
mov
pop
enter
dec
and
push
dec
dec
cmp
push
mov
jne
test
sbb
call
ss
push
add
das
xchg
cmpsb
scas
fimull
xchg
jo
mov
xor
or
incb
mov
xor
push
sbb
sub
leave
xchg
push
sub
xchg
fbld
adc
stos
hlt
and
in
inc
ja
mov
sub
sbb
ret
test
cmp
std
fnsave
repnz
pop
adc
pop
mov
jne
mov
cmpsb
mov
add
fnstsw
push
imul
cmp
or
push
sarl
fdivrs
add
jnp
jae
pop
jp
adc
aas
xchg
arpl
push
jb
pop
sbb
xor
adcl
add
fldenv
push
xchg
fstpt
mov
fwait
bound
bound
dec
shlb
xchg
mov
mov
into
fistl
xor
inc
adc
adc
xchg
mov
or
fcmovnbe
jg
pop
dec
jge
imul
aaa
sbb
cmp
or
insb
insl
sbb
aad
cmp
add
pop
xchg
rcll
jmp
or
mov
mov
jle
and
push
jge
sarl
and
mov
lea
fstl
adc
jno
sub
lea
rcr
stos
ds
aam
mov
fdivrl
fcoml
pusha
jg
sti
testl
icebp
xor
addb
add
shll
dec
rcrl
scas
cmpsl
inc
pop
cs
fisubrl
addr16
mov
sbb
inc
sbb
jns
faddl
psrlw
inc
imul
cmpsb
dec
les
xchg
cld
mov
ret
fsubs
leave
pop
outsl
popl
jmp
sub
imul
dec
dec
imull
and
hlt
insl
cld
mov
push
lahf
out
mov
das
dec
jno
pop
aas
adc
sbb
hlt
push
inc
outsl
nop
adcb
or
xchg
push
loopne
add
scas
and
repz
les
cld
jns
sub
jl
inc
jecxz
out
pop
movsb
sbb
pop
call
mov
cltd
xor
scas
mov
pushf
cmp
icebp
sub
enter
outsb
or
xrelease
pop
sub
mov
adc
and
insl
mov
adc
add
icebp
dec
sbb
dec
cmp
inc
aas
andb
and
frstor
std
ja
jg
imull
pusha
push
jmp
mov
xor
je
ds
sbb
dec
mov
fdivrs
xor
and
out
ss
aad
test
loop
jne
cmp
dec
pop
add
lods
push
mov
dec
daa
addr16
test
push
push
lds
mov
dec
sbb
daa
dec
in
sub
dec
repnz
out
sub
sbb
dec
nop
mov
addr16
dec
push
xchg
inc
lret
xor
mov
cmpsb
rclb
adc
cmp
cld
test
xchg
jb
idiv
pop
pop
cwtl
pusha
and
cwtl
mov
inc
add
xor
insl
mov
fidivl
scas
push
fnop
xor
push
pop
mov
xchg
jmp
ja
movsb
fcomip
mov
rorb
lret
fs
jbe
mov
push
inc
inc
push
loope
or
stos
cmp
lods
lock
leave
and
ljmp
inc
mov
in
mov
cmp
sbb
test
pop
mov
clc
mov
das
or
ret
data16
jle
repnz
test
inc
fcoml
ss
push
push
mov
add
cmp
clc
jae
sete
je
inc
in
daa
pop
jne
sub
jno
icebp
hlt
dec
push
and
test
out
lahf
push
popa
fisttpll
dec
addb
cmp
cwtl
icebp
jl
cmp
push
aad
and
and
jmp
jb,pn
inc
movsl
sbb
and
push
mov
sbb
pop
mov
and
loop
shll
xor
loope
xchg
jbe
into
dec
mov
int
std
pop
pop
push
movaps
add
adc
or
adc
insl
inc
push
daa
out
xchg
jg
stc
sub
lahf
es
mov
ja
pop
rol
add
sti
aaa
mov
cmp
lds
ds
add
loope
loope
jmp
xchg
lods
cmp
jbe
les
pop
repnz
lock
mov
push
xchg
jnp
les
arpl
daa
inc
or
out
outsl
adc
adc
xor
dec
jbe
mov
cmpsl
xor
pop
push
push
jne
adcb
xchg
fs
rorl
cltd
adc
add
jmp
push
fsubp
mov
xchg
and
orl
cmp
cs
aad
jmp
cmp
jg
imul
jge
sub
pop
jb
push
scas
xchg
mov
push
aam
jne
pop
dec
fwait
addr16
int3
rol
fldt
push
js
cmp
add
call
push
xchg
pminsw
andb
inc
mov
xor
push
or
mov
add
inc
and
fidivs
push
xor
ja
rcrb
sub
loope
imul
sbb
mov
jl
fsubl
movsl
push
les
mov
push
push
cmpsl
add
fstpl
xor
or
jbe
push
and
daa
pop
mov
mov
cmc
and
adc
sbb
lods
in
and
sub
rorb
xor
fwait
inc
jecxz
in
iret
lds
outsl
decl
das
dec
test
jne
xchg
stc
rcll
jb
movsb
imul
stos
leave
xor
pusha
in
les
rclb
pop
mov
rcr
pop
and
hlt
sub
pop
cmp
in
adc
repnz
outsl
shrl
and
imul
dec
xchg
btr
fisttps
les
das
es
test
mov
cmpsl
out
mov
mov
rorl
mov
and
aaa
cmp
cli
data16
mov
js
iret
sub
xchg
in
jno
mov
mov
pop
pop
add
sbb
addr16
push
xor
lret
or
or
cmp
movsb
out
cmp
sub
aam
sub
or
into
cmp
loop
jo
aam
rcr
mov
shll
in
push
xchg
out
aam
mov
aad
mov
inc
mov
icebp
push
sub
jge
insl
jae
movsb
push
add
mov
jg
mov
pop
mov
mov
rcr
pusha
rorb
jno
popf
sbb
aas
mov
jne
aas
adcb
jne
xchg
cli
test
bound
jnp
sbb
mov
arpl
mov
out
and
jb
les
inc
lock
dec
in
mov
mov
and
push
aas
int
dec
aas
add
addr16
jae
dec
int3
mov
dec
andb
daa
mov
in
fsts
lea
adc
mov
sarb
leave
and
fwait
jmp
mov
loope
sub
cmpsl
mov
and
adc
lahf
lods
rcll
movsl
imul
call
scas
or
push
push
or
cmpsl
jl
scas
lea
scas
mov
out
jne
jbe
enter
lds
cltd
popf
pop
aaa
dec
insb
inc
repnz
ljmp
adc
dec
popa
loopne
xor
jo
lahf
icebp
and
sbb
stos
leave
sub
fcomp
sbb
xor
xor
add
sbb
jnp
testl
fsubl
inc
arpl
cmp
sbb
add
in
lea
test
clc
jg
fcoml
arpl
xchg
push
dec
out
test
rolb
push
push
inc
jle
das
aaa
mov
cmp
adc
mov
push
cmp
test
xor
iret
cwtl
inc
out
loope
jl
pop
sub
repz
in
mov
out
xchg
xchg
jmp
mov
lods
cmp
mov
int3
or
cmp
fbstp
mov
push
shrb
jb
xchg
push
xchg
jne
pop
in
mov
out
dec
out
imul
pop
push
push
fsubs
stos
pop
aad
bnd
dec
cmpsb
mov
aas
hlt
es
sbb
xchg
gs
jbe
iret
cli
out
gs
int
dec
sti
or
xor
addb
or
adc
adc
cmpsl
es
fwait
pop
outsb
subb
mov
ret
or
mov
in
ds
stos
cmp
arpl
pop
jae
test
cli
stos
test
cwtl
mov
xor
stos
lods
push
push
loope
and
movsl
adc
daa
movsb
push
int3
dec
ss
sbb
cmp
lock
lret
and
data16
or
fldln2
adc
dec
add
inc
mov
es
xor
xor
cmc
inc
push
lret
int3
inc
idivl
push
rolb
movsl
and
adc
xor
dec
jg
mov
push
cmp
push
mov
movsb
imull
sti
es
popf
jae
xor
pop
test
sarb
aas
dec
adc
and
mov
jmp
cltd
adc
loop
push
push
push
sbb
xor
int
mov
mov
sbbl
insl
bound
je
dec
jge
movsl
mov
jge
inc
pop
add
cmp
and
add
scas
mov
push
es
sbb
cwtl
scas
movsb
sti
imul
insb
cmp
inc
inc
xchg
dec
sbb
xlat
ret
sbb
mov
add
mov
repz
mov
pop
xchg
cmpsb
mov
push
push
enter
ret
sbb
jns
sub
or
dec
test
or
dec
mov
out
movsb
xchg
test
inc
lds
mov
leave
cltd
lea
ret
inc
outsb
cmpsb
scas
or
aaa
jae
ret
imull
repnz
jae
mov
pushf
ljmp
scas
sub
in
scas
xchg
aam
fwait
mov
push
mulb
cmp
cli
sub
lea
in
andl
scas
add
clc
leave
rcll
gs
in
cmc
dec
popf
stc
shlb
shll
xor
iret
mov
inc
mov
cmp
cmpl
cmpsb
mov
or
pop
shrl
adc
repnz
mov
push
xchg
adc
pop
dec
mov
icebp
jno
or
adc
out
imul
or
xchg
fisubrl
dec
popa
mov
sub
xor
hlt
cmp
push
sbb
scas
loop
pop
lea
adc
dec
sub
pop
stos
pop
cmp
ret
repnz
pop
pop
mov
stc
xchg
mov
xchg
pop
pop
cmpsb
inc
add
test
mov
inc
insl
jg
jnp
stc
aam
iret
add
arpl
repnz
loope
inc
outsl
sbb
jg
das
pop
or
je
or
adc
xchg
push
and
cltd
mov
fiadds
scas
fs
pop
aad
test
jo
pop
push
pop
shll
add
jae
inc
jmp
repnz
pop
repz
ret
clc
shll
adc
mov
pop
fildll
push
call
ret
in
sub
test
leave
push
stos
insl
in
mov
cmp
loopne
out
pop
ljmp
fmuls
mov
mov
jo
push
andb
jecxz
push
inc
dec
sub
adc
aaa
xor
mov
dec
out
shll
add
xchg
sti
ret
fcmovne
xchg
jmp
gs
push
arpl
pop
ljmp
mov
dec
push
cli
mov
inc
lahf
pop
inc
into
sarl
aaa
dec
cltd
leave
fcmovnu
ss
sbb
mov
xor
mov
aam
fiaddl
aas
xchg
fisubl
in
mov
enter
pop
je
daa
std
pop
out
std
stc
outsb
xchg
cmpsb
add
into
clc
out
adc
sti
dec
sub
mov
scas
xchg
insl
scas
jnp
xor
mov
cs
cmp
call
mov
ret
ror
or
cmc
gs
mov
shrb
or
and
outsb
bt
clc
insl
mov
call
jle
adc
jae
xlat
xchg
test
jg
adc
addr16
sub
lcall
lahf
mov
pop
pop
movsl
dec
xchg
add
jbe
xorb
add
dec
imul
add
mov
jmp
mov
adc
xchg
jl
mov
cs
out
and
sub
lret
jecxz
xchg
push
js
insl
fbstp
cmp
lahf
and
add
imul
or
fimull
icebp
xchg
mov
cmp
aaa
js
sbb
fdivs
mov
sarl
jle
push
pop
pushw
ljmp
fcompl
push
inc
cmp
js
dec
test
xchg
dec
mov
or
push
imul
xchg
push
mov
std
clc
popa
divl
movsb
cli
mov
mov
sub
mov
xor
out
or
fiaddl
das
ret
leavew
rclb
rcrb
ds
sbb
out
imul
js
ret
das
je
cmpsb
iret
jmp
mov
daa
in
sub
jle
pusha
testl
inc
jbe
lds
jp
std
scas
lahf
jnp
js
sbb
sbb
daa
xor
scas
pop
jno
or
addl
sbbl
imul
jno
shrb
inc
sub
inc
mov
pop
ret
add
xchg
test
pop
adcb
mov
out
lcallw
inc
fucom
jb
pop
test
orl
add
std
fdivr
stos
jno,pn
insl
jge
sub
mov
inc
sbb
add
adc
xchg
jle
loopne
push
faddp
repz
or
inc
pop
add
mov
movsb
adc
stc
into
rorl
popl
lret
divl
or
add
pushf
pop
hlt
sbb
in
sbb
pop
sti
dec
push
mov
mov
or
in
loop
mov
testl
pop
setb
in
mov
out
cs
cld
pop
leave
cmp
in
push
inc
mov
lock
pop
inc
cmp
arpl
fninit
dec
cltd
rorb
inc
ret
mov
test
sahf
mov
xor
jecxz
in
in
inc
pop
mov
or
mov
andb
and
xorb
mov
enter
jb
lea
mov
jge
add
cmp
push
or
mov
les
insl
orb
std
push
imul
jge
sub
xchg
sbb
and
push
aas
pop
out
test
fiaddl
pop
push
daa
or
bound
fs
jmp
movsb
jle
push
jl
xor
cmp
jnp
lods
roll
lods
out
xchg
lcall
test
outsl
mov
sbb
mov
jns
repnz
adc
fnsave
add
shlb
add
in
negb
jmp
jmp
aad
gs
or
lods
mov
in
sub
test
aad
lock
mov
lods
fwait
push
fisubrl
clc
scas
bound
int
mov
or
or
inc
mov
add
popf
js
mov
mov
flds
cs
mov
pusha
push
rol
pop
imul
fs
repnz
xchg
jo
xchg
inc
pop
or
xor
jnp
pop
mov
rcl
mov
jl
sub
pop
aam
mov
push
push
stos
mov
enter
mov
ds
fwait
pop
loopne
add
add
mov
pop
jno
lret
add
mov
rcrb
dec
fsubs
loop
sbb
iret
fwait
add
cmp
cmc
in
jno
or
bnd
lods
jnp
mov
and
inc
adc
push
or
out
sub
dec
test
movb
icebp
sbb
and
mov
jge
cmpb
ficoms
mov
mov
push
imul
or
repz
or
push
pop
mov
jns
leave
in
mov
ret
sbb
cli
pop
mov
insl
or
cld
in
cld
pop
mov
in
lods
mulb
dec
mov
ja
lds
or
jmp
sbb
into
es
movsb
mov
mov
cld
add
repz
out
je
mov
xlat
adc
xor
in
jo
aam
fs
stc
and
or
mov
push
and
mov
mov
add
jg
cmp
mov
aaa
jg
xchg
mov
dec
divw
push
imul
mov
movsb
divl
xchg
mov
clc
mov
inc
js
jmp
aam
adc
jne
into
subl
fs
sarb
int3
or
je
daa
jg
outsl
mov
xchg
sar
xchg
pushl
cmp
imul
or
fmuls
jnp
adc
fists
sbb
and
xor
push
sbb
pushf
scas
sub
sub
mov
test
stc
jne
out
or
push
sbb
testb
shlb
jl
sub
fists
sarb
sbb
dec
addb
rolw
jmp
xchg
push
aad
pop
addl
mul
push
jno
sub
mov
bound
into
enter
ds
leave
mov
pop
pushf
fistl
lods
push
jbe
dec
pop
jp
adc
mov
adc
mov
inc
xchg
dec
xchg
xchg
call
dec
xlat
and
mov
xor
loopne
add
mov
add
in
lods
pop
sub
sbb
out
pop
mov
push
inc
push
xor
cltd
cmp
sbb
in
push
push
pop
jmp
mov
jae
push
in
jne
xor
adc
cmpsb
fistpl
dec
jmp
popa
sub
shl
test
mov
out
roll
pop
mov
rolb
adcl
cmp
adc
js
xchg
jbe
adc
daa
test
dec
jle
inc
fistpl
or
cmpsl
xor
xchg
je,pn
adc
sub
mov
icebp
cmp
subb
sti
mov
lret
sub
or
jg
dec
test
das
test
inc
mov
stos
jb
lods
rcrb
jns
leave
adc
jns
jb
xor
in
test
leave
movsl
inc
dec
pop
jle
lcall
repz
mov
mov
inc
and
inc
dec
or
iret
jno
mov
xchg
inc
push
sbb
ljmp
dec
lret
out
add
xor
xchg
inc
push
icebp
ds
ds
in
ret
mov
dec
jg
push
dec
cltd
push
mov
sbb
sbb
in
sub
pop
cs
leave
cmpsl
shlb
sahf
mov
mov
push
push
lea
jge
xorb
add
leave
add
mov
call
inc
pop
or
outsl
and
push
adc
fisubrs
mov
andl
ljmp
adc
push
xchg
adc
stos
movups
in
sbbl
or
pop
test
mov
gs
and
jno
js
in
mov
dec
xor
cmpsl
ss
jg
call
lods
pop
sti
and
add
lock
ret
mov
test
fcoml
sub
mov
lods
bound
lea
lahf
fcmovnu
int3
push
mov
push
pop
imulb
fs
bound
mov
cli
jecxz
jl
repnz
xchg
inc
stos
xor
dec
sarb
adc
mov
rorl
std
xchg
xor
js
sar
lea
cld
mov
dec
mov
pop
xchg
popa
cmp
mov
mov
xor
xchg
nop
push
mov
xlat
sbb
push
pop
sbb
sbb
pop
xchg
sbb
inc
outsl
rorl
xor
mov
mov
mov
xor
pop
dec
sarb
ss
pushf
lahf
icebp
pop
lahf
dec
in
enter
scas
jmp
out
rclb
push
xor
xchg
scas
adc
scas
scas
pop
lahf
out
lods
shrb
negb
outsb
push
call
adc
daa
pop
xchg
movsb
sahf
ja
push
cld
cs
pushf
mov
sbb
loop
pop
push
aas
gs
xchg
xlat
push
mov
add
int3
rolb
aad
dec
ja
dec
mov
inc
subl
movsb
or
xor
sbb
push
addr16
int3
jle
sbb
xchg
loop
sbb
mov
lods
outsl
adcb
call
cs
mov
pop
sbb
scas
test
enter
fwait
dec
xor
adc
pushf
sub
adc
xchg
stc
test
jge
movsl
push
mov
fcoms
addr16
sbb
loopne
in
xor
pop
pop
mov
div
in
lahf
cmpsb
jl
jmp
roll
push
jmp
add
mov
enter
les
fistpll
xor
mov
cli
imul
aad
repz
icebp
adc
pop
popa
or
and
imulb
into
inc
xor
inc
movb
aad
fwait
popa
movsb
cmc
lods
imul
outsl
sbb
iret
es
fs
repnz
std
mov
mov
cwtl
mov
nop
repnz
fnstsw
push
daa
jecxz
xor
jle
push
subl
decb
test
or
in
hlt
or
xchg
push
and
in
adc
pop
sarl
xor
test
scas
xchg
xchg
pusha
mov
xchg
jbe
jne
loop
cmpsl
push
loope
and
mov
adc
jno
pop
push
rorl
xor
scas
cmpsb
inc
ret
mov
ljmp
mov
fistpll
jecxz
fimull
mov
aaa
dec
cmp
fs
jle
xor
sarb
push
xchg
or
xchg
xchg
out
xchg
inc
faddl
test
sub
mov
dec
xor
jmp
push
scas
cmpsl
popa
jbe
pop
mov
mov
and
sub
lret
xchg
out
shll
and
sub
cwtl
shrb
ret
ret
inc
insb
cli
and
or
xor
pop
pushf
lcall
cmp
push
cld
cli
cmp
repnz
sub
scas
xchg
fbstp
mov
es
gs
sub
nop
ss
push
jecxz
aad
gs
pop
lahf
xchg
cld
outsb
dec
add
adc
jl
xor
xchg
or
test
xor
or
lahf
xor
push
fnstsw
jno
scas
jle
int
xchg
add
pop
int
mov
outsl
cmp
ret
aas
dec
sub
bound
movsl
jns
into
push
in
adc
sahf
xchg
inc
mov
repnz
das
cmp
or
mov
and
popf
mov
xor
or
mov
nop
sbb
lret
loope
dec
in
mov
js
mov
jno
lods
bound
shrl
sbb
les
aad
fidivrs
jno
movl
and
xchg
jo
mov
in
jl
test
and
fwait
cmp
and
in
lahf
jne
out
xor
loop
mov
js
sbb
sbb
xor
enter
sbb
cld
push
test
or
ficompl
inc
fldenv
fsubs
stos
inc
test
inc
das
sahf
inc
mov
jb
adcb
loope
cmp
pop
cmp
test
ret
xor
rclb
cmp
jle
in
jb
mov
in
in
inc
jo
push
push
cmp
daa
loop
mov
pop
in
pop
sbb
cmp
fldl
daa
push
mov
inc
or
mov
mov
test
inc
pop
cmp
fsubs
jle
sahf
mov
jge
packssdw
mov
pop
nop
inc
imul
lcall
in
xchg
clc
sub
bound
pop
cmp
cltd
xor
daa
cmp
ja
jnp
push
push
push
pop
mov
sub
int3
fwait
cmpsb
lock
sub
lods
adc
inc
hlt
and
roll
inc
aaa
sub
jns
sahf
repnz
xchg
les
push
into
cli
and
cmp
sti
inc
cwtl
fwait
push
inc
fcmovnb
idivl
or
sbb
mov
sar
shll
xchg
das
inc
xor
idivl
inc
add
sbb
and
xchg
adc
dec
mov
fs
pop
les
idivb
add
icebp
hlt
mov
add
xchg
aad
pop
ljmp
add
lock
pop
mov
fcompl
xor
loop
int3
xchg
mov
fmull
mov
and
push
mov
rcrl
dec
push
push
sbb
xor
sub
jo
jno
ret
jb
mulb
inc
xchg
out
adc
aaa
rolb
fidivrl
dec
loope
ja
filds
mov
sti
or
in
ljmp
cmp
dec
fbstp
jnp
jne
mov
notl
jae
icebp
and
shr
jb
subb
adc
in
cmc
cmp
cmpsl
lret
popf
sub
dec
sub
jo
cmp
pop
sub
jmp
pop
popf
adc
in
popa
adcb
int
fistl
jg
mov
xchg
xchg
mov
add
xchg
in
or
bound
and
iret
lds
imulb
xchg
repnz
sbb
dec
xor
mov
out
scas
cmp
dec
imulb
xchg
test
mov
mov
lea
lods
pop
mov
pop
pop
pop
inc
pop
jns
ror
sbb
pop
insl
push
push
inc
cmpsb
inc
out
shll
cltd
js
dec
sti
dec
inc
daa
call
nop
adc
jecxz,pt
pop
push
sub
jno
mov
into
xor
xor
lcall
mov
jae
std
test
dec
test
test
jnp,pn
and
inc
in
les
stc
xchg
paddb
faddl
push
push
daa
cltd
fwait
pop
sbb
or
pushf
addb
pusha
mov
outsb
cld
add
mov
orl
sub
mov
and
pop
lea
add
cs
push
jns
jg
leave
stc
stos
push
push
push
arpl
mov
fst
nop
sbb
and
cmp
mov
aad
pop
sahf
mov
sub
fstpt
fwait
mov
inc
aaa
insb
push
pop
fdiv
orb
outsb
xchg
in
adc
iret
lods
enter
mov
and
pop
and
sbb
adc
ficoml
cld
mov
mov
xor
subb
data16
xchg
jne
aad
mov
xchg
mov
sub
movl
test
fstps
xlat
enter
sbb
jge
cli
pop
cli
dec
or
jmp
push
push
mov
popf
outsb
out
adc
in
xor
test
adc
in
mov
test
addr16
enter
dec
xchg
and
sub
mov
xchg
push
jo
js
jg
fbstp
pop
nop
loope
add
and
add
xor
fcoms
add
bound
mov
iret
xor
stc
cmpb
add
jbe
inc
aaa
or
jg
jecxz
jnp
divb
sbb
orl
jmp
popa
test
push
lcall
arpl
in
xor
dec
ljmp
mov
xchg
inc
xchg
icebp
cld
lea
inc
push
lahf
iret
sub
lock
jle
xchg
dec
pop
in
aas
push
data16
test
mov
mov
mov
cmc
daa
clc
and
scas
rorb
or
or
test
xor
insl
push
xor
xlat
xlat
cmp
inc
popf
andl
xor
jge
xchg
cmp
fisubrs
les
push
icebp
aaa
in
es
lcall
jns
inc
rcrl
mov
lds
push
push
mov
or
test
adc
lods
pop
adc
mov
cmpsb
int
cmpl
and
xor
std
ss
clc
cmp
into
push
sahf
lret
xor
push
mov
lods
movsb
pcmpeqd
dec
or
test
push
hlt
into
sub
push
lcall
imul
mov
jmp
repz
fmuls
scas
adc
cmp
pop
push
xor
mov
je
jbe
roll
pop
das
out
jae
outsb
je
nop
push
mov
repz
xor
adc
push
dec
or
out
lock
ror
mov
push
cs
xor
pop
imul
fcoml
jp
mov
and
cmp
add
add
rcrl
pop
lret
pop
cmp
push
xor
int3
xlat
push
xchg
out
pop
xor
cli
push
adc
cli
aas
inc
dec
cmc
sahf
pop
ret
mov
aam
stos
pop
jb
and
sbb
lret
cmpsl
add
es
cltd
imul
mov
sub
call
mov
je
pop
cli
and
out
jb
mov
dec
movsb
inc
xchg
test
jo
adc
js
mov
lahf
pop
dec
gs
add
xchg
call
mov
imul
xor
jmp
xchg
push
shrb
shl
lret
xor
cld
pop
dec
jns
lahf
push
push
dec
outsl
inc
xchg
mov
enter
loope
sbb
test
and
pop
inc
xchg
fisubrs
xchg
repnz
loope
cmp
sbb
push
ss
scas
xchg
add
add
stos
mov
sbb
mov
lods
js
mov
pop
fcmove
cmpsb
hlt
dec
mov
idiv
xor
pop
shlb
pop
jecxz
iret
jmp
jge
mov
dec
add
sub
ficoms
ret
call
or
movsl
clc
mov
mov
cmp
xchg
push
sbb
arpl
dec
mov
out
es
push
xchg
xor
add
call
mov
cmp
mov
popf
imul
cmpsb
sbbl
xor
sbb
das
stc
adc
addr16
dec
jno
jmp
aad
test
sahf
adc
jge
cli
and
int
adc
orb
xor
enter
or
sub
mov
fsubl
sub
pop
or
push
xor
cltd
mov
cmpsl
mov
popf
or
rclb
movups
outsb
fsubs
cwtl
sahf
mov
out
mov
out
and
pop
pop
pop
add
add
mov
add
inc
lret
ret
xor
mov
push
cmp
pop
jb
movsl
fcompp
push
popa
push
or
mov
lock
mov
or
pop
icebp
or
test
add
sub
inc
test
push
xor
imul
mov
inc
lds
inc
mov
les
or
dec
jmp
addb
mov
add
in
jmp
test
mov
dec
dec
cwtl
stos
cwtl
cld
inc
or
dec
and
enter
dec
imull
and
jge
and
pop
adc
ja
sub
lcall
inc
js
mov
ljmp
ret
idivb
cwtl
mov
dec
jg
ficoml
stos
sub
imul
out
je
les
sahf
fidivrs
ror
or
lock
test
jecxz
push
push
cwtl
insb
dec
idivb
mov
pop
jl
xchg
rclb
sub
sbb
mov
jmp
test
mov
add
push
mov
dec
pop
testb
jmp
mov
mov
adc
in
sahf
push
cmp
mov
jbe
inc
sub
push
scas
call
jp
outsl
movsl
cmc
test
adc
xchg
fistpl
rcrl
scas
jo
ficoml
mov
in
icebp
fwait
dec
imul
jl
xchg
jnp
pop
or
leave
std
les
jp
xchg
aam
sub
push
cmp
adc
push
out
shrb
xchg
bound
test
je
and
push
aam
cmpb
nop
jmp
fldenv
outsl
dec
fs
or
mov
inc
stc
sub
scas
jmp
jg
mov
adc
jne
pop
rorb
or
pusha
inc
ss
cmp
das
aam
push
or
inc
leave
xchg
adc
repz
sti
adc
xchg
inc
add
cmp
out
loopne
iret
push
adc
push
xchg
xor
fiaddl
fwait
es
divb
adc
dec
xor
mov
push
push
je
popf
lock
adc
fwait
and
sub
sbb
nop
cmpsb
and
pop
bound
ja
xchg
popl
mov
add
cwtl
xlat
inc
and
stos
testl
cmp
inc
lods
fwait
scas
sub
and
jbe
lahf
pop
lcall
fistpl
sbb
lahf
lea
cmp
jb
mov
push
pop
xor
out
std
insb
cmpsb
jb
mov
jne
fistpl
pop
and
dec
fldl
xchg
pop
push
mov
cmpsl
loop
out
fstpt
ficomps
sahf
push
sarl
test
test
pop
add
stos
and
sbb
xor
insl
lcall
mov
faddl
jg
xorl
push
pop
insl
lea
adc
push
pop
sbb
in
mov
push
mov
outsb
loope
xchg
test
push
cld
repnz
xlat
pushf
adc
ljmp
adc
addr16
push
inc
mov
mov
mov
adc
sbb
mov
dec
pop
and
adcb
sbb
push
push
insb
push
iret
idivl
orl
jmp
ffreep
rcrl
ret
in
or
ljmp
add
aaa
loop
fwait
sbbl
mov
mov
mov
or
mov
xor
dec
sub
popa
cmp
cmp
addl
jecxz
inc
sub
pop
sub
mov
and
aam
xor
int3
inc
daa
ljmp
ja
sub
popa
jg
in
std
inc
push
sarb
out
adc
push
rcrl
xor
mov
or
xchg
popf
push
popa
push
mov
jae
mov
imul
dec
clc
sbb
cld
outsb
fwait
inc
xchg
stc
push
jl
inc
dec
mov
cmp
pop
insb
rclb
cwtl
inc
push
push
lods
lea
pop
mov
aam
mov
dec
shll
test
imul
or
xor
rcrb
js
scas
cmpb
jne
loopne
push
push
jmp
les
adc
lret
into
push
add
sbb
jge
dec
sbb
lret
out
fists
test
stc
push
pop
mov
mov
and
and
nop
out
xor
icebp
shll
mov
push
dec
mov
mov
aad
icebp
adc
into
mov
daa
add
or
mov
inc
pop
pop
test
inc
loopne
rcll
xchg
push
testb
or
or
insb
mov
xor
sbb
push
push
idivl
cmpsb
jg
test
push
mov
or
pop
jae
test
xchg
add
leave
and
ja
xlat
cmp
xor
cmp
ficomps
outsb
inc
cmp
cli
mov
mov
xchg
add
add
dec
sbb
lahf
adc
xor
sbb
xor
int3
or
jae
fistl
sub
push
lret
fisttpl
sub
sub
call
xchg
ficoms
out
push
inc
leave
add
sbb
pop
or
adc
aas
or
popa
adc
scas
leave
add
iret
mov
lea
sbb
sub
sbb
sub
dec
sub
out
mov
push
lock
add
mov
inc
inc
jno
dec
jge
mov
out
dec
rcl
add
xchg
cmpsb
into
dec
jle
test
lret
js
inc
jae
mov
sbb
jne
daa
inc
mov
out
loope
ret
jno
adc
addr16
sub
movsl
shrl
mov
hlt
sbb
sub
xor
or
push
rol
outsl
sbb
ficompl
divb
xor
xlat
ficompl
mov
mov
push
inc
push
sub
xor
in
xchg
loope
xchg
dec
mov
stos
jg
orb
cmp
lea
sub
movsb
mov
int3
push
shl
pop
inc
jo
scas
lret
jae
addr16
fstpl
mov
call
or
cwtl
jno
aad
sbb
lods
sub
in
mov
in
mov
jle
sub
cmp
pop
movsl
lds
jns
jg
mov
mov
and
pusha
cltd
pushl
ss
lea
insl
loop
adc
lea
sbbb
in
jns
jns
sbb
shlb
lret
popl
mov
dec
rcl
mov
sbb
aam
mov
popf
mov
loopne
xchg
test
lcall
es
stc
ds
fstpl
lcall
xor
mov
scas
das
fs
shrb
dec
cmc
jb
mov
in
in
sbb
cli
dec
adc
and
movsl
fisubs
stos
xchg
push
repnz
les
and
add
cmpsl
add
push
jle
stos
add
aas
into
cmp
fbstp
cli
xor
stc
mov
lahf
repz
mov
in
push
bound
mov
aaa
dec
andl
dec
adc
sbb
test
dec
jmp
cmp
jno
ds
mov
in
add
xchg
add
sbb
fwait
lret
mov
adc
jbe
sub
pop
inc
lds
or
shll
mov
jmp
aad
xchg
jnp
subl
addr16
ja
add
jle
adc
cs
cltd
pop
clc
sar
loopne
movl
cs
jle
in
scas
push
inc
call
xchg
xchg
sbb
fidivrs
mov
imul
sub
or
clc
jo
cli
cwtl
ret
fs
imul
or
xchg
int
daa
stc
test
fbstp
stos
lahf
shlb
adc
mov
dec
stos
xchg
add
xor
xchg
pop
mov
add
insl
push
inc
sahf
shrb
sahf
mov
ss
push
pop
cmp
add
neg
test
fwait
mov
shll
push
das
mov
rolb
addr16
sbb
or
test
pop
push
out
sbb
jl
loope
push
int3
jge
push
cmpsl
cmp
adc
lret
mov
out
sub
sub
ds
and
jecxz
jl
add
mov
in
cmp
iret
sbb
in
insl
shl
clc
xor
lds
push
into
lahf
sub
pop
add
fs
xchg
lds
gs
andl
sbb
sbb
stc
adc
xchg
pushf
cmc
xor
pushf
cli
movsb
movsb
cwtl
js
pop
std
out
add
into
dec
in
xor
jb
ss
push
in
scas
popa
mov
cmpsl
pop
out
sti
fsubp
aas
pop
divb
jge
xchg
popa
xchg
mov
popa
jno
imul
popa
jbe
push
xor
aam
mov
out
dec
adc
or
push
test
push
loope
cmp
xchg
fistl
jl
push
idiv
fs
lock
adc
aaa
add
mov
inc
in
js
or
cmp
test
mov
dec
add
imul
mov
leave
mov
dec
xchg
inc
cwtl
arpl
sbb
jb
pop
ja
and
mov
sub
call
push
push
push
lcall
dec
cltd
xor
add
push
jnp
repz
in
popa
test
push
ss
mov
sub
popf
outsb
add
inc
mov
adc
xchg
push
mov
push
leave
mov
inc
ret
push
push
sbb
setg
out
dec
jl
mov
int3
aas
icebp
fldl
imulb
aaa
xor
add
daa
es
pushf
cmpsb
jb
lods
jp
ret
rclb
jp
out
pop
std
cwtl
movb
aad
pop
enter
mov
popl
ret
mov
sub
cli
in
stc
pop
out
fucomp
jge
push
xchg
int
fstps
dec
test
mov
sbb
sub
xchg
loop
push
add
jb
sti
aaa
and
test
jle
pop
nop
or
xor
push
aam
dec
sub
inc
add
mov
sbb
pop
aaa
insb
je
push
fsubrl
xor
lods
mov
outsb
aaa
sbb
int
cwtl
out
pop
test
xchg
dec
xchg
adc
or
sub
jle
cmp
or
inc
push
pop
popf
jp
loope,pn
adc
imul
adc
gs
in
push
push
pop
sbb
adc
pop
push
js
xor
pop
jae
pop
test
int
or
mov
jnp
aam
add
cmpsb
push
in
mov
mov
fwait
cs
xor
pop
cmpsl
ds
pop
or
push
mov
adc
test
or
cltd
mov
xchg
daa
fnstsw
daa
rcll
fistps
sbb
sbb
jge
mov
inc
bound
gs
fisttps
jle
xor
push
push
lea
adc
sub
iret
in
add
clc
mov
dec
gs
sub
or
jg
or
xor
xor
mov
movl
into
dec
or
lods
mov
shll
shl
mov
imul
les
daa
dec
mov
jp
add
js
loope
test
adc
je,pn
scas
fnstenv
push
test
mov
add
xor
push
adc
sar
mov
lds
ljmp
xor
dec
cmp
je
xor
sbb
or
fstpt
pushf
sahf
dec
jae
adcl
repz
test
cli
jecxz
xor
out
mov
or
fmuls
stc
pop
mov
add
cmpsb
mov
and
cmp
movsb
clc
ljmp
mov
jg
dec
cs
pop
push
data16
dec
inc
ret
test
dec
flds
mov
push
jle
or
and
movsl
pop
lret
hlt
pop
mov
fisubs
xchg
sti
push
aam
mov
pop
std
pop
aam
cmpsl
dec
insl
fucomi
int3
mov
dec
lock
push
mov
call
lahf
jecxz
push
ja
lretw
jmp
aaa
sub
cltd
sbb
scas
lret
jne
push
and
cmp
mov
stos
add
sbb
test
adc
xor
dec
fwait
adc
test
sbb
xor
or
jae
jp
fists
mov
xchg
and
cmp
je
stc
xchg
cmp
pusha
es
sbb
adc
or
mov
loop
push
inc
shr
sarb
incl
and
mov
insb
mov
jbe
mov
sbb
cmpsl
cmp
mov
dec
out
rolb
leave
xor
in
mov
xor
sub
loope
mov
adcb
cmp
movq
pop
mov
cs
out
lods
cmp
mov
and
fwait
je
sarl
push
fdivl
ljmp
and
push
dec
scas
dec
xchg
xchg
push
es
mov
inc
dec
mov
imul
aad
jmp
sub
add
sub
in
add
add
mov
mov
mov
es
push
daa
adc
pop
scas
xchg
or
clc
pop
test
out
mov
fadds
dec
outsb
and
negl
pop
incb
pop
insb
jle
sbb
cld
jo
bound
test
mov
das
insl
jmp
add
pop
fistpll
sti
fists
push
add
out
adc
jne
xor
test
or
xchg
in
in
pop
xchg
mov
add
jno
and
jge
pop
mov
xor
cld
je
andb
add
pop
mov
adc
loop
in
lock
lret
fidivs
push
jg
inc
cmp
cmc
and
outsl
fcom
cltd
sbb
xor
jno
daa
mov
rorb
imul
add
imul
pop
add
mov
cmp
xchg
pop
repnz
push
xlat
in
ror
cli
mov
sbb
inc
jnp
push
je
scas
leave
test
inc
ret
mov
fstpt
xchg
lret
dec
jb
mov
ret
mov
and
add
or
insl
int3
repnz
inc
and
sub
or
mov
nop
push
mov
int3
pop
xor
jmp
jnp
cs
push
add
in
loopne
insl
sbb
fcomip
dec
and
js
xor
aaa
loope
inc
imul
insb
ret
movsl
test
push
popf
push
pop
mov
test
mov
jbe
shrb
and
jmp
into
add
xchg
sbb
mov
xchg
push
mov
pop
in
das
mov
mov
mov
push
and
pusha
mov
lret
negl
add
sub
rorl
push
lcall
inc
mov
and
lods
pop
mov
imul
popf
insl
dec
sub
jne
hlt
mov
mov
lock
aam
cmp
sub
add
or
mov
cmp
sbb
enter
movb
pop
ja
ljmp
int
cmp
adc
mov
add
mov
pop
insl
cs
cli
xchg
mov
pop
mov
push
call
inc
push
add
inc
shl
das
xor
popf
pop
mov
jg
jmp
adc
sbb
jne
cmp
test
mov
pop
stos
lcall
fnstcw
in
or
lret
or
push
in
and
adc
pusha
ljmp
fiadds
jb
imul
icebp
dec
pop
inc
cmp
sub
aad
and
cli
les
inc
jmp
out
and
test
cmp
icebp
mov
cmp
adc
enter
and
mov
and
je
stc
pop
mov
xchg
nop
pop
push
idiv
push
xchg
adc
fistps
ljmp
aad
insl
into
cli
and
or
add
js
dec
mov
push
imul
xor
pop
mov
push
mov
movsl
pushf
punpcklwd
repnz
movsl
fldt
ljmp
loop
jecxz
lret
inc
dec
nop
fwait
push
adc
enter
lahf
push
js
sar
pop
fwait
popa
out
jae
lock
jl
add
mov
movsl
dec
ja
inc
dec
lret
lods
clc
adc
pop
xlat
mov
fs
push
pusha
push
sbb
sbb
outsb
adc
mov
push
or
lods
shrb
or
test
les
mov
cmp
push
push
pusha
inc
mov
pop
mov
pop
js
test
xchg
add
ja
jb
popa
mov
pop
mov
dec
sub
jne
popa
mov
mov
mov
pop
jo
rcrl
mov
shll
stos
out
inc
lds
mov
sub
xor
xor
sub
sub
aam
movsl
loop
aas
push
xchg
pop
jnp
push
and
jle
jbe
inc
mov
cmp
adc
mov
dec
clc
rcr
pushf
inc
fdivrs
repz
cmpsb
leave
mov
or
add
xchg
pop
test
shl
lock
push
sub
jecxz
mov
mov
scas
mov
inc
push
orb
outsl
ficoml
xor
jne
sti
mov
xor
ds
dec
and
shrl
pushf
or
and
jmp
and
es
mov
pop
imul
adcl
jge
pop
mov
sub
repz
and
pop
jbe
popf
sbb
les
leave
adc
xchg
jl
mov
adc
mov
mov
mov
pushf
roll
inc
push
and
xchg
push
push
fiadds
xchg
push
and
cmp
mov
xchg
iret
in
aaa
sbbl
and
xchg
lahf
stos
mov
in
dec
jp
movsb
popa
add
or
pop
out
or
pop
inc
mov
jbe
push
push
popa
dec
mov
xchg
mov
in
repnz
aam
gs
cmp
and
mov
out
out
cmp
xor
popa
sbb
ss
dec
sarb
push
mov
and
fsincos
inc
lods
add
aaa
popl
lods
popa
jne
cmp
adc
sub
movsb
jae
in
ret
cmp
jne
mov
in
lods
sub
mov
imul
adc
xor
pop
cld
or
xchg
out
sub
add
inc
movsb
add
or
mov
out
ja
xlat
stos
dec
enter
mov
xor
mov
clc
jbe
xchg
dec
cmp
movsb
push
xchg
inc
je
cltd
js
xor
jae
xchg
jge
lret
xor
negb
mov
mov
jg
rol
dec
xchg
inc
out
mov
movsb
mov
cltd
fnstcw
shl
faddl
in
dec
mov
xchg
imul
cmpsl
pop
div
jno
pop
adc
inc
fwait
jg
imul
int
add
popa
mov
notb
lock
stos
fistl
jmp
jo
mov
inc
cltd
enter
mov
or
add
dec
je
pop
mov
sti
xor
es
lods
sbb
push
jecxz
into
pop
add
js
repz
xor
adc
xchg
lock
fstpt
pop
cmpsb
mov
xlat
or
ja
mov
xchg
add
daa
ret
inc
mov
fisttpll
adc
xor
in
sub
cmp
push
push
mov
xchg
mov
popf
out
ror
or
jecxz
jb
rorb
dec
sub
mov
jnp
mov
push
cmp
dec
sub
xchg
pop
rcll
jbe
scas
pop
out
dec
fidivrl
ljmp
xor
icebp
movsl
sub
mov
test
addr16
popa
rcrb
or
stc
das
lock
jg
repnz
lods
sub
int3
jnp
test
shlb
dec
xchg
in
fists
sbb
sbb
aad
movsb
stos
movsb
shr
sub
fldt
ja
cs
into
imul
adc
scas
push
jmp
adc
repz
mov
jg
pop
test
test
enter
sbb
testb
loope
cltd
aas
xor
mov
pop
lods
mov
xlat
mov
xchg
adc
into
or
addr16
hlt
or
pop
pop
mov
ljmp
jle
es
dec
int
sub
idivl
inc
or
scas
mov
xor
out
dec
int3
in
insl
sub
lds
pop
lods
and
cmp
xor
cmpsb
lods
out
push
out
push
loopne
jae
xchg
les
pop
out
jnp
add
cmp
push
ss
cmp
jge
gs
cmp
iret
adc
orl
push
icebp
xchg
mov
adc
enter
adc
dec
mov
cmpsl
shrb
cltd
pop
push
mov
push
popf
mov
loopne
mov
or
mov
jnp
push
push
shll
pop
push
mov
mov
shr
dec
ja
push
mov
lods
cs
or
cmpb
rolb
inc
jmp
mov
cli
mov
cmp
imul
test
imul
mov
clc
mov
ds
les
loope
adc
pop
pop
out
fcmovu
lds
shr
pop
pause
in
lods
int
sbb
add
in
cmp
or
add
repz
or
inc
rcl
xlat
ljmp
and
mov
xlat
sub
repnz
ror
pop
enter
pop
mov
and
popa
sbb
inc
fwait
sub
inc
jae
sub
lods
rcll
bound
imul
jbe
or
das
inc
jns
clc
leave
mov
push
shll
out
jo
js
cs
in
jbe
mov
aad
out
cmpsb
pop
xor
ffree
mov
fisubs
leave
test
stos
outsb
leave
shr
test
outsb
jge
xor
push
push
sub
xchg
fwait
inc
push
jbe
cmp
push
dec
inc
jnp
lods
sub
lret
inc
enter
insb
inc
pop
adc
xor
fmul
test
mov
or
pop
xor
jns
mov
ret
pop
sub
fwait
icebp
gs
push
or
mov
dec
das
nop
aas
inc
out
mov
mov
iret
xchg
cli
mov
aad
cmp
sahf
shrb
and
popf
pushf
les
sub
or
jl
hlt
into
xor
pushf
ret
add
jae
testb
cmp
sbb
jo
cmpsl
clc
cmp
mov
in
push
imul
and
scas
lret
mov
sbb
jbe
and
mov
mov
push
lcall
mov
xlat
xchg
cmp
mov
mov
addb
mov
fnstcw
rcll
frstor
adc
inc
das
pop
or
push
mov
sbbl
cli
shrl
mov
incb
push
shrl
cmpsl
sub
or
int
cmp
adc
mov
clc
xchg
adc
pop
lods
xchg
lock
and
jmp
dec
les
jns
cmp
cmpsl
ljmp
and
adc
pop
rolb
inc
dec
cmp
scas
std
push
aad
cmpsb
jno
scas
arpl
inc
adc
rclb
repz
aad
stos
pusha
or
iret
arpl
popa
pop
dec
mov
xor
mov
xchg
std
icebp
mov
push
out
ja
outsl
or
shl
mov
or
push
jp
add
out
je
arpl
rcrl
lcall
pop
call
dec
movsl
mov
sbb
loopne
roll
mov
iret
std
les
cld
loopne
or
push
sti
movsl
repnz
push
pop
mov
sarb
and
adc
sbb
daa
or
in
dec
push
xchg
hlt
or
pusha
mov
movsl
sbb
movsl
sub
lds
inc
xor
cmpsb
dec
cmp
mov
jle
add
adc
adc
stc
xor
push
aaa
xchg
mov
outsl
daa
lods
push
pop
test
call
addr16
mov
dec
mov
repz
icebp
test
nopl
notl
mov
push
clc
or
enter
ss
mov
lods
mov
pop
jmp
pop
xor
mov
bts
xor
outsl
das
adc
dec
push
pop
push
stos
pop
cld
xor
fldcw
test
sarb
lahf
iret
fwait
mov
jae
jmp
push
jecxz
mov
lret
pop
fnstcw
push
push
lahf
mov
roll
pop
imul
loope
and
pop
out
stos
cmp
mov
jg
sbb
repz
mov
jg
sbb
cmp
mov
aam
jb
aad
or
imul
cmp
push
hlt
movsb
push
jno
xor
addr16
sbb
test
cmpsl
ret
stos
xchg
mov
jae
lds
xchg
xor
add
cmp
mov
addr16
scas
in
mov
pop
stos
push
cmp
imul
in
mov
rcl
inc
mov
das
cmp
jle
xor
lahf
jb
mov
jl
pop
xor
jno
enter
pop
call
mov
add
nop
adc
mov
arpl
add
push
lds
jp
cmp
repnz
lods
xor
cmp
pop
jecxz
sbb
lea
cmc
in
jo
es
imul
pop
cmpsl
dec
outsb
push
jp
popl
mov
mov
dec
ja
jecxz
and
dec
or
jb
cmp
scas
mov
pop
mov
mov
add
ficoml
jg
aad
ja
js
stc
sub
mov
call
icebp
leave
push
scas
outsl
fcom
mov
pop
stc
pop
repnz
sub
inc
add
dec
dec
dec
sbb
sbb
mul
cmp
mov
add
test
adcl
ret
jmp
xchg
push
pop
outsl
jl
rclb
jecxz
shll
mov
jge
lea
imul
sub
push
jae
xchg
inc
jge
ror
outsl
push
clc
push
gs
stc
call
and
xchg
clc
xchg
je
mov
data16
shlb
test
mov
insl
sub
rcrl
cld
mov
nop
cmp
push
push
inc
push
pop
or
sti
dec
mov
leave
and
jg
xor
push
sub
test
jmp
cmp
cmp
push
mov
xchg
sarb
sub
cmp
out
xchg
cmp
or
insl
sbb
rcrb
leave
inc
fisubs
rcll
loope
scas
adc
jne
pusha
push
dec
lret
mov
enter
add
mov
fnstsw
pop
test
push
and
outsb
gs
or
push
cwtl
adc
scas
mov
in
movsl
in
jp
push
divb
into
pushf
in
dec
push
inc
imulb
test
jno
push
out
test
stos
mov
in
fistpll
push
mov
movsl
jns
push
ret
enter
add
mov
outsl
out
mov
popa
mov
inc
cmp
and
jns
outsl
or
les
pop
mov
inc
push
aaa
les
lret
lret
adc
cmp
adc
inc
cltd
mov
mov
sub
push
jmp
cs
xor
mov
adc
push
fsubp
data16
dec
notb
nopl
inc
xchg
xor
push
push
add
sub
outsb
pop
arpl
jne
aad
je
pop
pop
jecxz
mov
sbb
cmp
cli
xchg
out
cmp
mov
ror
insb
inc
push
inc
add
insb
sbb
mov
mov
mov
out
or
or
xchg
popa
arpl
add
xchg
cmp
sub
lea
inc
cmp
push
aas
shlb
out
xchg
sahf
jno
stos
cld
test
ret
stos
pop
and
xchg
iret
outsl
rol
mov
push
mov
jle
xchg
sub
bound
push
add
adc
add
test
cltd
mov
ds
cli
daa
cli
ds
hlt
add
sub
cltd
jns
in
test
pop
mov
and
push
ret
jb
test
adc
aad
jno
lea
inc
mov
lahf
mov
and
xor
and
stos
or
lcall
cmp
sub
mov
repz
mov
hlt
or
mov
jmp
xor
mov
push
jl
inc
and
jmp
dec
jns
lcall
aas
mov
cmp
stos
aaa
pop
add
xor
sub
lcall
inc
and
pop
out
xchg
test
mov
sbb
dec
iret
adc
add
movsbl
jb
pop
dec
mov
or
mov
es
xlat
in
push
adc
jle
push
pop
dec
xchg
movsl
ret
xor
mov
xchg
cmp
jmp
pop
jno
mov
pusha
test
lods
pop
decb
cmc
adc
jg
xor
xor
pop
jnp
cmp
xor
pop
and
push
bound
cwtl
mov
out
adc
mov
bound
jbe
enter
aas
push
cmp
jp
pop
cmp
andb
lea
cwtl
les
push
dec
rorl
in
cli
push
push
orb
cmp
sub
test
sub
cs
jnp
sub
test
loopne
sahf
push
popf
and
roll
inc
call
cmpsl
cs
mov
xor
mov
jnp
insb
and
mov
bound
inc
icebp
dec
stos
add
pop
push
aam
test
dec
or
flds
bound
mov
ljmp
test
shrl
sbb
and
in
lret
lds
enter
test
push
movsb
push
xchg
sub
lods
sahf
stc
mov
xchg
push
xchg
or
scas
outsl
sahf
sbb
jl
mov
push
orl
push
aam
lea
xchg
mov
mov
je
mov
adc
add
out
je
pusha
jb
mov
cmpsb
out
cmp
enter
in
out
mov
loope
dec
je
aam
hlt
dec
and
add
mov
jns
pop
movsl
push
add
mov
xchg
iret
inc
and
lcall
pop
loop
add
test
jle
dec
and
aad
ljmp
push
mov
pop
imul
mov
dec
scas
lret
sub
mov
ss
fldcw
inc
add
ja
cmpsb
frstor
aaa
iret
hlt
and
or
mov
movsl
ret
roll
pop
inc
push
dec
dec
fists
push
idiv
adc
fnstsw
or
out
mov
pop
mov
scas
mov
pushf
dec
push
mov
mov
jo
mov
std
jae
inc
jno
xor
dec
ds
dec
push
jl
jne
cli
xor
lock
mov
jns
out
push
mov
pop
sub
inc
pop
add
cmp
fistl
jnp
popl
shl
dec
inc
in
aad
inc
fsubrs
pmaddwd
adc
shlb
adc
inc
loopne
cmpsb
in
pop
fisttps
and
scas
jb
inc
jg,pn
dec
mov
xchg
inc
sbb
and
outsl
or
ret
sub
imul
imul
repz
pop
sbb
jge
sbb
and
and
mov
popf
sbb
dec
sbb
repnz
ret
adc
mov
jns
mov
push
cltd
clc
andl
mov
sub
and
adc
sti
cmp
cmp
cld
cmp
js
stc
inc
les
add
cmp
xchg
shll
xor
or
sub
orb
jg
in
xchg
and
fidivl
sti
shll
dec
inc
mov
lods
fnstenv
push
push
fwait
and
ljmp
pop
fists
dec
push
jnp
addl
test
or
jle
stos
cli
xchg
pop
xor
test
subl
push
outsl
in
ficompl
lret
xchg
inc
xchg
sub
inc
xor
imul
enter
loope
les
repnz
lea
repz
ss
icebp
cmpsl
pop
or
mov
out
jbe
shrl
into
push
pop
jnp
jns
mov
je
sub
and
xor
mov
push
sti
and
pop
popf
lods
dec
std
std
sbb
cltd
and
mov
dec
cld
sbb
je
dec
nop
jo
cmp
dec
ja
loop
sub
call
cmp
pusha
lret
rcll
in
xor
add
mov
ret
push
cmc
sbb
sub
fsubrs
mov
das
js
fisubs
lcall
mov
rcrb
or
push
cld
mov
dec
adc
sbb
sbb
mov
fisubs
mov
cld
fdivrs
inc
or
adc
popf
notl
rcrl
add
fcmovnbe
js
testb
arpl
movd
stos
fildl
mov
into
cmp
fsub
or
mov
cmpsb
enter
pop
mov
testb
pop
push
cmp
fs
mov
enter
das
lahf
lods
fisttpl
push
inc
pop
add
imul
mov
cli
push
sub
sbb
imul
shrb
cmp
xor
aas
xlat
hlt
jbe
mov
mulb
jl
add
pop
outsb
dec
push
test
push
lcall
xchg
mov
mov
stc
arpl
stc
and
xchg
inc
cmp
paddusw
arpl
aad
out
push
xor
pop
mov
push
sub
xor
outsb
inc
jnp
jg
xor
xor
cmpl
pop
cmp
aad
int
pop
loop
fiaddl
sbb
fnsave
outsl
mov
in
scas
push
dec
daa
fs
iret
push
lret
iret
bound
mov
lcall
hlt
in
stos
dec
aam
mov
aas
jbe
xchg
int3
icebp
push
lods
loopne
insl
and
pop
push
sbb
push
in
mov
jge
push
or
inc
loop
cmp
push
pop
loopne
push
outsl
cmp
or
push
lock
push
pop
dec
adc
sbb
adc
int3
fsts
mov
movsb
imul
push
xor
icebp
add
dec
xor
xor
inc
adc
and
fwait
sbbb
push
roll
cmc
fwait
or
mov
inc
cmp
dec
xchg
xchg
xchg
cmpsl
pop
pop
ja
aad
and
and
xor
fwait
out
sub
mov
mov
popa
mov
jmp
sbbb
cltd
frstor
jp
aam
repz
xchg
das
mov
jmp
mov
cmp
cmc
or
or
and
fs
pushf
adcl
popa
add
xchg
or
push
ds
aaa
scas
jmp
stos
push
xor
je
das
and
mov
into
pop
mov
shlb
mov
xchg
pop
jg
out
xor
or
es
out
cmp
clc
fbld
add
stc
xlat
iret
aam
aam
shll
push
push
jg
test
icebp
mov
orb
mov
ljmp
mov
fwait
dec
xchg
pushf
sbb
push
faddl
js
cmp
int3
dec
inc
fs
gs
sub
cmp
mov
jbe
inc
cltd
es
lcall
je
pop
inc
ret
int
xchg
movsl
inc
cmpps
outsl
mov
mov
push
xchg
fnstsw
adcb
mov
sbb
xchg
andb
xor
adc
loopne
xchg
ss
adc
in
xchg
ss
mov
push
aad
mov
inc
ret
push
sub
jge
in
decb
bound
adc
jg
daa
imul
xchg
repnz
ja
mov
mov
sub
out
scas
loop
dec
in
inc
idivl
rcl
pusha
mov
aad
jno
mov
movsl
hlt
or
or
sbb
icebp
jecxz
ret
popa
imul
push
jg
cmp
fldcw
and
mov
or
jle,pt
cmp
sahf
pop
test
xor
jno
sbb
sbb
fnstcw
jle
test
jecxz
jne
mov
push
pop
inc
adc
movsl
shlb
hlt
cs
and
adc
mov
push
add
int3
jecxz
and
fsub
xlat
hlt
xchg
pop
ret
aas
pop
je
xor
xchg
or
inc
or
frstor
dec
pop
test
xor
pop
insl
cmp
push
mov
pushf
mov
test
mov
js
cltd
or
sub
jge
cmp
shlb
js
jbe
std
jl
xchg
and
pop
movnti
xor
decb
repnz
pop
fcoml
sub
sbb
ja
dec
insb
adc
xchg
sbb
or
inc
lds
lret
bnd
es
ficoml
inc
pop
out
stos
pop
pop
lods
mov
aaa
and
lods
jmp
jp
outsl
in
test
inc
inc
ret
inc
jo
lahf
jp
xchg
mov
xchg
out
jno
or
jnp
mov
dec
pop
loopne
inc
add
mov
cli
aas
or
hlt
adcb
mov
mov
dec
sub
scas
sub
repz
xchg
incb
shrb
fstpl
leave
mov
ljmp
jns
sbb
arpl
mov
negb
xchg
mov
lea
xor
arpl
ss
test
out
cltd
inc
aad
addr16
push
mov
test
jbe
daa
movsb
push
or
and
or
outsb
sbb
mov
jbe,pt
repnz
jmp
cmc
jmp
ds
repz
xchg
stos
fistps
jno
mov
pop
cmp
sub
xchg
pop
jno
pushf
adc
inc
push
mov
jp
sbb
push
rcrl
iret
or
scas
mov
jecxz
repz
add
mov
cmp
push
inc
xor
cmpsb
and
and
xchg
push
addr16
and
sahf
mov
lcall
add
adc
test
fdivrl
dec
mov
ror
icebp
loope
cltd
mov
js
out
int
push
lret
sbb
std
fimuls
sbbb
mov
mov
cmp
and
pushl
mov
jmp
mov
mov
mov
mov
subb
xlat
ja
sub
mov
jb
pop
or
inc
inc
mov
and
ja
or
das
divl
lods
lods
xchg
and
xchg
pop
jb
mov
ja
pop
adc
mov
in
ja
negl
sub
fdivrl
out
outsl
scas
out
cmpl
sbb
or
jecxz
or
dec
pop
sbb
mov
pop
dec
in
nop
cmpsb
inc
cmp
jns
jl
fs
mov
pop
out
adc
call
mov
and
and
addr16
sub
out
pusha
repnz
test
aas
leave
xor
pop
shlb
sbb
pop
pushf
and
adc
cmpsl
xchg
inc
pop
testb
daa
pop
jl,pn
gs
pop
out
dec
lds
pop
fs
add
inc
pushf
mov
nop
mov
test
repz
fisubl
pop
or
and
jmp
jnp
push
push
addb
pop
rcr
mov
subb
inc
imul
pop
scas
add
mov
pushf
out
fistpl
mov
stc
iret
ret
ficomps
mov
dec
adc
mov
adc
and
and
aam
xorl
add
mov
nop
imul
push
push
test
sbb
push
or
sub
enter
int3
mov
sbb
leave
ja
js
sbb
sbb
hlt
lds
push
loop
outsl
mov
sti
je
into
dec
ja
imul
ret
xchg
mov
xchg
pop
sub
cmp
insl
dec
enter
in
xor
sbb
imul
adc
rolb
sti
xor
jnp
popl
mov
and
insb
sub
inc
pop
xor
dec
pop
ss
leave
jp
out
das
xlat
xor
lahf
mov
dec
inc
xor
out
pusha
std
cmc
mov
lds
mov
stos
in
ret
fs
adc
xchg
fdivrs
add
out
movb
test
adc
and
sub
xchg
sub
lds
pop
inc
aas
push
or
mov
push
ds
mov
popa
arpl
imul
in
pushf
test
mov
daa
xchg
loopne
std
xchg
inc
out
mov
push
stos
shll
arpl
lea
mov
or
or
mov
sbb
aaa
jns
add
lret
daa
jge
xchg
int3
sbb
dec
in
pop
filds
movsw
mov
sub
xor
mov
inc
lock
xchg
fadds
fsubrl
sbb
cmp
iret
jns
nop
arpl
push
rcrl
jae
dec
mov
cmc
jmp
sub
icebp
int
mov
cmp
popa
push
std
ja
call
xor
loope
sub
sbb
std
jg
pop
sub
scas
add
roll
adc
adc
fdivr
add
lods
adc
dec
into
lcall
ret
fisttpll
adc
mov
imul
dec
frstor
mov
pusha
int3
mov
push
pop
fsubl
mov
mov
mov
inc
mov
ja
mov
aad
inc
mov
mov
js
pop
mov
push
push
xor
bnd
popf
or
cld
ss
mov
jle
stc
sub
cmpsl
mov
mov
mov
pop
dec
pop
add
cmc
addl
adc
pop
xlat
pop
mov
orl
xor
outsb
sub
push
movsb
sbb
inc
dec
push
add
push
xchg
inc
xlat
inc
iret
pusha
sub
and
outsb
arpl
inc
std
adc
loop
dec
add
in
data16
movl
imul
jne
or
xchg
mov
sbb
cwtl
jl
inc
xor
xor
arpl
dec
mov
mov
fwait
add
or
dec
fcoms
xchg
xor
push
fmuls
in
jp
mov
int
insl
mov
mov
movsb
sub
inc
aaa
jg
mov
mov
and
xchg
ljmp
jns
stos
fwait
sbb
movsl
push
in
adc
inc
push
in
push
cvtps2pi
shlb
jno
cmpl
iret
inc
and
add
call
shr
pop
sub
cmpsb
pushf
pop
cmpsb
idivb
aas
and
inc
xchg
cwtl
and
add
insb
push
jb
iret
js
movsb
push
add
jecxz
sbbb
cmp
das
loop
ljmp
sbb
out
cli
lahf
mov
jecxz
lret
push
outsl
mov
aas
or
sub
loop
mov
sub
popa
out
stos
aaa
stc
orb
add
lods
xorb
or
mov
cwtl
adc
test
inc
mov
in
in
mov
sub
jnp
xchg
test
or
add
xchg
mov
lcall
push
lods
sub
mov
shl
jp
mov
inc
fbld
fidivl
popf
les
inc
jo
mov
dec
repz
out
ror
cmp
jg
loope
ljmp
or
rolb
aaa
out
xor
mov
lcall
pop
lret
movsb
lret
es
out
inc
loop
fscale
and
ljmp
cmpsb
push
insl
mov
xchg
mov
ss
inc
fiaddl
loopne
or
ljmp
adc
xlat
cmp
out
jg
sub
cmp
andb
pushf
cmpsb
lcall
xchg
movsb
push
adc
jno
mov
shll
xchg
cmpsl
ja
mov
jns
shl
pop
xor
je
pop
cmp
mov
aad
cwtl
mov
das
mov
shl
inc
stos
stos
gs
mov
pop
sub
adc
pop
jbe
nop
arpl
and
cmp
xchg
sbb
loopne
add
dec
or
sub
mov
cmp
push
fistl
pop
adc
cmc
cmp
rorb
jmp
fucom
push
cmp
cld
in
jnp
in
add
bndstx
roll
lods
mov
or
int3
dec
jno
push
and
fisubrs
cs
ljmp
les
clc
pop
ljmp
fisttpl
mov
ret
push
fwait
jns
jo
in
cltd
lcall
pop
jp
xchg
cmp
shrl
mov
enter
cmp
test
outsb
sub
divl
or
mov
adc
test
dec
add
lea
mov
int
or
mov
roll
pop
xor
ss
scas
outsl
cmp
push
sbb
push
cltd
add
lds
jns
sub
leave
cli
outsl
push
popf
dec
vmulps
push
into
nop
adc
pusha
fnstcw
repz
jb
fisubs
mov
push
lods
inc
jle
cltd
in
xorb
xchg
movb
dec
push
cmp
pop
adc
outsb
pushf
xor
jl
or
dec
mov
jg
xor
and
cli
stos
dec
sbb
jo
or
sti
dec
test
push
push
sti
jp
sbb
fsubs
pop
pop
in
ds
add
push
cmp
notl
jp
pop
insl
mov
cmpsl
xchg
pusha
pop
pop
in
cmp
inc
xchg
rorl
mov
adc
inc
lretw
pop
mov
xchg
test
cmp
cmpsl
std
out
insl
lds
push
test
jp
push
roll
dec
pop
lret
rcrb
jbe
lret
mov
addr16
in
mov
jne
xchg
add
jecxz
std
pop
mov
add
push
xchg
jno
jle
fistl
cs
loope
lret
xlat
jle
add
popf
jg
xchg
loopne
fisubs
rcrb
mov
out
add
cwtl
and
cmpsl
ds
in
xchg
aas
data16
pop
pop
inc
sti
stos
je
pop
daa
xor
jno
lock
jne
ss
out
in
dec
loopne
xor
out
jmp
aaa
and
mov
push
mov
ss
mov
in
and
fisubl
and
dec
call
in
iret
mov
inc
jns
rcrb
movsb
mov
sbb
data16
push
mov
cmp
sbb
movsb
mov
out
outsb
rcll
cmpsl
loopne
ret
jg
cmpsl
xchg
sub
into
inc
loopne
sbb
test
fsubrl
jecxz
add
aam
and
pop
stos
ja
dec
pop
leave
jbe
rclb
adc
js
mov
dec
xor
push
mov
mov
and
push
add
mov
lds
jmp
sub
pushf
jecxz
pop
test
cltd
call
popf
int
and
inc
es
sahf
push
lds
ret
test
inc
scas
mov
pop
in
setns
jl
mov
aam
mov
ret
push
dec
push
jg
and
cwtl
mov
sub
pop
pushf
iret
enter
lahf
mov
or
dec
dec
add
into
sub
shll
fcompl
inc
or
pandn
filds
push
mov
mov
inc
cmp
in
int
lcall
mov
jp
gs
insb
lods
sub
aam
sub
push
or
xor
lods
fisttpll
sbb
adc
shrb
fldt
ja
mov
mov
push
pop
fcompl
adc
adc
jo
cs
mov
jp
xchg
ljmp
dec
cmp
into
icebp
or
ljmp
pop
mov
push
out
jbe
mov
bound
fs
insb
add
adc
iret
cmp
repz
stos
incb
add
jecxz
jp
test
std
fucom
mov
stos
addb
nop
leave
nop
rcl
push
push
int3
orl
push
cli
or
fildl
scas
cmpsb
cmp
mov
dec
rcrb
repz
add
adc
cmpsl
dec
outsl
lcall
jno
int
sbb
mov
popa
pop
cltd
push
sbb
xchg
nopl
decb
push
testl
ja
lock
loop
push
push
sub
fs
js
std
xchg
mov
fldt
cltd
mov
pop
loope
fsubs
bnd
adc
ja
adc
xlat
ds
lret
fimull
push
shl
pop
test
cmc
pop
es
mov
call
popf
push
xchg
cmp
inc
jns
cmp
orl
loop
cmp
push
nop
ljmp
fadd
mov
pop
mov
fisubrs
hlt
rcl
cmp
stos
mov
xor
jle
jne
jecxz
pusha
lret
outsl
aas
inc
inc
cmp
loope
inc
mov
mov
sbb
pop
push
sbb
jae
push
sbb
adc
popl
mov
popf
stos
mov
sbb
into
das
jns
fidivl
imul
push
mov
dec
ds
inc
adc
rcrl
adc
out
mov
xchg
rcrb
mov
jle
rcrl
int
outsl
mov
push
fnstenv
xchg
imul
jbe
mov
jl
xchg
sbb
mov
lods
or
xchg
add
push
mov
negb
lds
lods
sbb
jbe
xor
out
fistps
pop
add
cmpsl
sub
adc
adc
lea
aas
jp
xchg
pop
xor
and
mov
fadds
mov
pop
xchg
iret
rcll
sub
test
mov
pushf
cmp
outsb
push
add
sbb
or
movsb
fisttpl
xchg
in
mov
mov
mov
inc
lods
pop
test
pop
sahf
mov
pop
dec
xchg
in
add
in
cwtl
mov
lea
mov
shl
mov
xchg
les
sbb
lcall
outsl
loop
fs
clc
pushf
enter
jno
sbb
fisubl
imul
dec
jge
insl
scas
out
outsb
sbb
repnz
stos
pop
add
xchg
pusha
dec
lea
mov
sbb
sub
bound
mov
mov
mov
jg
repnz
push
mov
inc
mov
fimuls
xor
sbb
call
dec
clc
lods
jecxz
sbb
inc
mov
dec
gs
enter
xchg
dec
mov
mul
pop
mov
jge
inc
bound
dec
and
push
xor
push
enter
mov
mov
dec
test
dec
repz
push
mov
das
scas
dec
pop
bound
add
xchg
aad
popa
cmp
push
lds
imulb
inc
fbstp
pop
in
sbb
pop
pop
jb
stos
xor
jg
mov
test
js
jno
cmp
xor
xor
sti
or
push
sbb
je
xor
push
jmp
insb
mov
mov
xchg
std
xor
sti
pop
js
ret
push
fldcw
or
cmp
ds
push
addb
daa
or
adc
adc
dec
push
stc
add
and
ljmp
add
rcrl
inc
xchg
sti
cmp
std
in
pop
pop
mov
and
stos
pop
fistpll
cmpsb
jl
cmp
push
lods
dec
stos
jle,pn
insl
lret
lcall
mov
push
cltd
mov
push
dec
xchg
arpl
pop
in
jge
sub
pop
mov
lods
aas
lea
pop
pop
cmp
pop
lret
pusha
jbe
cmpsl
pushf
or
or
imul
xor
orl
movsl
inc
loop
mov
push
sub
fwait
icebp
loopne
xor
ss
ficoml
cmpsb
arpl
in
inc
lods
pop
gs
mov
adc
test
adc
pop
push
jle
sbb
test
data16
mov
adc
xor
dec
iret
push
inc
push
movsb
or
xchg
lods
cmpsb
pop
inc
add
and
push
push
loop
adc
movsl
sbb
out
out
lret
aas
popa
jmp
adc
outsb
cmpsl
sub
ds
xchg
xor
movsl
pop
in
ficompl
leave
xchg
mov
int3
mov
cmp
int
inc
xor
inc
jp
sub
negl
cs
cmp
xor
mov
xor
cmc
dec
xchg
and
jle
rcrl
pop
dec
clc
add
les
hlt
pusha
nop
mov
fiadds
shrb
add
mov
aam
xchg
insb
push
xlat
mov
pop
ds
jno
mov
test
cmpsl
jecxz
xchg
inc
push
mov
rcrb
aaa
inc
shlb
and
mov
cmp
xchg
mov
lret
shlb
cli
imul
dec
jmp
dec
lcall
cmp
sbb
push
jnp
xor
mov
dec
sub
leave
lods
mov
int
faddl
loope
dec
and
mov
fsubrp
dec
push
stc
std
mov
dec
adc
pop
jno
jb
xchg
xchg
dec
lods
ret
leave
test
mov
imul
pop
xchg
rep
push
scas
es
mov
or
imul
and
push
mov
and
mov
lds
in
into
jns
jb
inc
push
arpl
mov
pop
ljmp
ja
and
pusha
adc
jbe
push
jns
bound
add
push
add
mov
sbb
outsl
test
mov
sub
ja
mov
cmpsb
leave
jo
sbb
fists
cmp
mov
repz
ljmp
scas
loopne
mov
adc
mov
sarl
cli
pop
cmp
lahf
dec
out
inc
filds
cmp
testl
xchg
aam
pop
nop
mov
inc
mov
popa
jae
push
mov
push
cmp
fsts
bound
inc
imul
rcll
jle
jbe
mov
sub
mov
fwait
push
cmp
popf
add
jge
ljmp
lods
movb
xchg
push
mov
sub
add
aas
scas
push
cmp
sbb
lret
sbb
or
or
add
repnz
aam
test
popf
ds
ljmp
add
cmp
and
cltd
xchg
int3
sub
js
shlb
cmp
xor
mov
cmp
lret
cld
sub
outsb
enter
or
insl
sbb
mov
or
mov
adc
rorl
inc
in
sub
dec
std
and
es
pop
stos
out
and
popa
cli
inc
xchg
jg
mov
pop
in
das
dec
mov
adc
loope
dec
jl
clc
movsl
push
dec
mov
pop
clc
mov
ljmp
fwait
mov
int
push
sbb
or
leave
stc
mov
sub
repnz
lret
xchg
mov
mov
and
xchg
xchg
and
pop
insb
outsl
icebp
imul
mov
mov
push
mov
sub
in
dec
jg
dec
cmp
or
dec
cmp
daa
sub
imul
add
mov
inc
out
leave
in
inc
push
mov
sbb
movsl
pop
pop
mov
sbb
jmp
repnz
and
cmp
mov
sub
jmp
xchg
out
shll
xor
dec
add
jno
in
call
fsub
mov
or
pop
cwtl
xor
or
jp
mov
loop
xor
xcrypt-ctr
cmpsl
popf
add
or
cld
movsb
bnd
sbb
in
sbb
loope
daa
into
arpl
sub
mov
aad
sar
xchg
and
jae
popf
fcmovu
pop
int3
jnp
inc
inc
mov
lods
rcll
dec
sahf
cmpsl
dec
aaa
adc
das
hlt
sbb
je
xor
std
es
jle
insl
mov
stos
mov
and
loopne
in
push
push
test
inc
add
jnp
cmp
fwait
pop
jnp
lahf
cmp
dec
mov
xor
sub
test
outsl
movsb
bound
mov
mov
inc
xchg
rorb
xchg
imul
and
dec
rcrb
loopne
icebp
jae
pop
outsl
pushf
pop
sub
or
hlt
xor
jno
push
mov
mov
jae
xchg
loop
imul
jns
lea
insb
cmp
mov
push
rclb
dec
decl
mov
jns
jge
outsl
clc
mov
arpl
jbe
jp
jmp
ficoml
jge
loope
lods
and
mov
rorl
das
pop
outsl
jo
int3
sub
sbb
cmc
pop
adc
inc
or
lret
mov
sub
into
imul
or
fs
loop
ret
jg
loope
xor
xchg
mov
dec
cs
sub
in
cltd
jl
shlb
cmpsb
xorl
jge
dec
int3
jo
mov
inc
pop
aam
lods
jb
inc
push
xchg
daa
push
mov
push
enter
xchg
pop
dec
jo
test
int
mov
push
mov
xchg
outsl
pop
jnp
inc
pop
aam
xor
fsts
or
not
pop
cwtl
mov
das
pusha
fs
lea
fdivrp
push
mov
icebp
add
xchg
push
sub
ljmp
out
and
nop
dec
les
mov
or
xchg
shll
data16
sub
fcmovb
or
int
popa
jae
fs
hlt
xor
fadd
jo
and
sub
movsl
cmpsb
push
sbb
test
jge
jnp
adc
pushf
adc
mov
cmpsl
dec
insb
fistpll
lahf
stos
nop
js
mov
inc
inc
scas
jno
out
xchg
xor
loope
outsl
and
mov
xchg
popl
mov
ds
xchg
and
and
repnz
sub
and
nop
xor
adc
bound
sbb
jle
jo
inc
data16
sub
xor
test
idivb
and
outsl
adc
push
jecxz
sbb
xchg
sbb
out
bound
pop
push
jo
sahf
aaa
add
lcall
js
scas
mov
jecxz
lret
mov
enter
cmp
out
rorl
sbb
shrb
inc
scas
xchg
in
inc
or
and
stc
js
andl
xchg
rorb
cld
xor
jg
inc
mov
push
pusha
sbb
mov
subb
push
scas
popa
add
mov
roll
xchg
xor
test
addb
jb
and
pusha
sarb
cmp
sub
rol
push
movsb
int3
mov
mov
andl
push
fdivr
insb
aad
out
aaa
or
loopne
mov
cmp
xchg
inc
cltd
aad
sub
rolb
dec
icebp
mov
jge
inc
loope
inc
adc
leave
pop
mov
mov
pop
adc
inc
scas
loopne
xchg
mov
adc
inc
popf
sbb
push
adc
or
out
mov
out
fnsave
push
outsb
rcrb
jmp
dec
adc
or
in
test
out
stc
cmp
dec
sub
fwait
sti
cmpl
mov
or
xor
outsl
shrl
jbe
ret
push
and
nop
adc
inc
and
aam
loopne
das
sub
push
xchg
ret
push
ljmp
push
es
push
inc
ret
lds
mov
lds
lcall
cmp
daa
outsl
sbb
cwtl
aaa
mov
lods
jnp
negl
lret
cmp
pop
jb
and
add
adc
jbe
sbb
fmull
orl
mov
dec
mov
sbb
pop
cmp
sbb
adc
lods
xor
push
inc
int3
das
or
ljmpw
jge
ds
ret
or
adc
push
fucom
inc
int3
shlb
loop
loop
out
int
call
mov
arpl
lahf
xchg
fidivrs
xor
jmp
stos
int
xor
pop
sub
aas
sbb
out
mov
mov
mov
out
lret
les
lods
loopne
sbb
in
pop
loopne
call
xlat
or
mov
push
imul
ja
bound
pop
mov
jp
lods
lea
mov
mov
out
mov
orb
shrl
lods
adc
mov
mov
pop
xor
out
pop
push
and
adc
mov
fcomp
stc
iret
call
arpl
inc
cld
cmp
fstp
sti
pop
inc
bound
aam
adc
and
cmp
shlb
dec
fs
push
loope
adcl
out
out
pop
insb
add
jp
or
repz
ss
adc
jbe
nop
and
cmp
fdivrl
testb
mov
test
dec
mov
in
out
mov
push
xchg
xor
ret
hlt
xchg
push
or
lret
or
bound
pop
outsl
push
loop
fildl
jmp
xor
push
sub
dec
aas
dec
pop
push
imul
into
movsb
mov
or
and
outsb
test
test
xlat
hlt
imul
aad
inc
xor
pop
out
inc
push
pop
mov
mov
cld
mov
out
dec
ret
int3
ja
dec
and
jb
shr
fwait
fadd
and
popa
jmp
cld
or
filds
outsb
cmp
push
and
in
xchg
lods
xchg
lds
call
nop
xchg
xchg
sub
sub
mov
push
jno
daa
xchg
dec
mov
dec
mov
scas
push
xor
push
xchg
mov
aas
das
pop
cli
cmp
aas
scas
pop
push
mov
pop
mov
xor
add
dec
dec
mov
icebp
sub
xor
test
sbb
adc
pop
inc
jg
add
sub
jne
xchg
int
pushf
dec
push
in
out
imul
fmuls
stos
and
icebp
sbb
stc
lock
xor
arpl
jo
test
adc
push
cmp
mov
dec
movsl
mov
push
loop
xchg
fs
jne
sbb
std
in
in
mov
aam
dec
addr16
add
outsb
sub
add
imul
xor
fidivrl
sub
test
jl
adcl
xchg
pop
dec
cmp
and
sub
scas
je
rcrb
mov
or
sar
je
cltd
jae
push
jmp
and
add
outsb
mov
inc
fiadds
xor
les
xchg
loope
dec
inc
jo
xchg
jbe
stc
xchg
clc
cmp
sar
add
inc
mul
leave
lea
sbb
mov
jp
shrb
cmp
out
fwait
cmp
jne
stos
sub
mov
push
inc
pop
dec
xor
mov
jle
sub
notb
aaa
es
mov
or
ret
je
dec
test
mov
bound
sbb
stos
shll
insl
dec
cld
push
push
xor
push
or
ljmp
leave
arpl
cs
repz
or
loope
jle
je
std
icebp
xchg
aas
mov
xor
jo
xchg
sub
js
push
push
mov
movsl
push
and
ljmp
add
jb
mov
add
hlt
push
into
mov
xor
loope
mov
add
jle
inc
mov
and
cli
and
flds
in
mov
sti
sbb
loop
xchg
cmp
scas
cmc
sbb
aaa
sub
lahf
insl
and
mulb
rorb
pop
push
ds
add
mov
sahf
enter
fcomp
in
inc
mul
or
insb
inc
mov
testb
int
jp
or
cmp
sbb
add
ss
xlat
sbb
push
adc
mov
xor
sbb
jmp
or
push
inc
inc
cmp
sbb
push
sbb
in
mov
mov
cmp
inc
lret
and
dec
cmc
or
push
aad
xor
imul
sub
cli
inc
and
rolb
test
push
jae
push
repz
xor
xchg
xor
and
rcr
pushf
mov
ud1
push
cli
popa
push
xchg
dec
scas
pop
andl
aad
popf
imull
loop
mov
mov
je
ds
mov
jge
fsubrl
addr16
repnz
inc
inc
inc
push
sub
fs
ffree
clc
out
pop
call
call
xor
js
xlat
out
jecxz
ror
dec
cmc
loop
push
push
aas
xorb
into
xchg
mov
cld
jnp
or
int3
or
sbbl
or
mov
dec
aad
xchg
xchg
adcb
jae
lods
popf
lret
jnp
int3
pushf
adc
addr16
fdivrs
or
jne
push
aad
xchg
jge
dec
ss
cmp
sbb
pop
cwtl
hlt
push
pop
sbb
pop
out
and
pusha
mov
add
cmp
lock
sub
js
faddp
inc
fidivrs
dec
adc
pmuludq
cmc
mov
insb
jmp
jbe
leave
push
outsb
stos
sub
xchg
jecxz
cmp
dec
push
loopne
inc
clc
mov
mov
lret
pop
xchg
mov
mov
cmp
int
adc
jecxz
dec
sbb
jne
fistl
clc
cld
ror
in
mov
ljmp
dec
fsub
addl
gs
xchg
ret
add
jns,pn
js,pt
cs
inc
and
cmpb
insl
addr16
and
add
add
jge
xor
dec
out
adc
mov
or
iret
lahf
mov
and
jb
sar
ss
ds
das
data16
lahf
loopne
and
pop
das
inc
dec
inc
mov
adc
and
push
xchg
jno
mov
or
out
xchg
jne
stc
loope
daa
ret
jno
hlt
push
jg
mov
mov
jno
repz
jl
bound
add
loop
pop
scas
pop
sbb
jmp
pop
mov
scas
inc
or
pop
sbb
lea
xor
dec
xor
xchg
push
mov
std
add
int
loop
xlat
std
subl
mov
jmp
mov
push
fidivs
jnp
hlt
lcall
roll
push
or
mov
sbb
or
out
adc
dec
mov
ss
enterw
adc
xlat
sub
sbb
arpl
sbb
jb
cltd
sar
loope
inc
fadds
outsb
inc
clc
imul
mov
sbb
test
xor
push
rcr
int3
sahf
and
fimull
pushf
insl
insb
mov
popf
sti
test
dec
les
clc
mov
test
inc
push
jo
xchg
int3
popa
pop
repnz
xor
mov
xchg
push
dec
inc
add
repz
mov
outsl
or
and
pop
ljmp
testl
roll
mov
mov
jecxz
ret
mov
inc
daa
imul
cli
sbb
xor
push
fwait
pop
scas
mov
bound
out
mov
xchg
xor
lock
js
jge
enter
imul
or
xchg
xchg
into
idiv
lret
fwait
stc
popa
dec
aas
jnp
add
push
push
icebp
inc
popf
dec
mov
mov
outsb
lcall
mov
enter
ret
dec
cmp
jle
xlat
sub
mov
mov
enter
adc
andps
popa
fldcw
fnstenv
pop
add
dec
jno
add
cmpsl
std
mov
movsl
lea
jb
ljmp
in
pop
add
mov
lret
cli
dec
pop
test
cld
xlat
loop
outsb
and
xchg
mov
jmp
ds
out
or
xchg
lods
outsl
sub
jge
aaa
pop
inc
add
jbe
bound
movsb
jecxz
mov
cmp
ds
pop
and
pusha
daa
clc
bound
test
xor
xor
cmpsl
cs
test
cmp
testl
mov
pop
stc
xchg
cld
mov
adcb
in
lods
mov
mov
out
stos
mov
jmp
cld
outsb
mov
lcall
jle
mov
pop
mov
movsl
mov
aam
push
popa
sub
cwtl
jle
xchg
sbb
out
scas
fmuls
ljmp
rep
data16
xchg
mov
xor
push
or
push
sub
je
cmp
movsl
mov
daa
rclb
sub
out
pop
pop
pushf
pop
mov
fildll
loop
xchg
jno
lods
mov
scas
adc
dec
cmp
cwtl
xchg
mov
lcall
int3
push
repnz
cmp
testl
xchg
push
sub
ret
aas
out
les
inc
xor
loopne
sub
hlt
and
sub
jmp
mov
test
fwait
dec
mov
xor
push
dec
xchg
jbe
lds
inc
aad
fwait
rcl
xor
lahf
rol
add
and
int3
push
mov
push
in
fs
sub
or
pop
xchg
leave
sub
pop
stos
jle
icebp
test
pop
sbb
sbb
push
xchg
lret
loope
pop
dec
inc
or
lods
pusha
cli
in
out
dec
fbstp
or
inc
xchg
jmp
lock
dec
and
call
mov
jmp
test
mov
out
call
mov
nop
call
roll
fsubrs
inc
aam
pop
dec
add
int
xchg
add
dec
sbb
in
mov
push
insb
leave
fildll
mov
sub
ljmp
inc
outsl
data16
cmp
mov
pop
ljmp
movsl
roll
lcall
xchg
fists
mov
push
sbb
adc
push
jp
xor
das
cmp
and
xlat
enter
inc
out
ljmp
fistl
mov
mov
cmpsl
aas
xorl
and
jl
pop
and
cwtl
mov
jecxz
cmp
incl
call
cli
mov
mov
outsl
faddl
cmpsl
push
ja
push
lods
and
jne
sub
sbbb
add
cmpsl
sub
dec
lock
enter
or
scas
sub
in
mov
sti
inc
dec
imulb
inc
dec
dec
cmp
push
repz
test
rorl
push
rcll
and
sbb
in
add
adcb
enter
arpl
mov
push
adc
stos
mul
cmp
stos
sarl
mov
add
cltd
push
jl
sbb
enter
add
mov
xor
inc
insb
ja
stos
jp
jae
loope
mov
pop
ret
test
push
sub
adc
out
add
mov
aam
adc
sbb
inc
rclb
mov
jnp
and
add
cmp
cmc
cmp
outsb
xor
pop
cmc
cmpb
and
mov
mov
adc
mov
stos
xlat
cmp
inc
pop
jmp
adc
or
pop
mov
stc
ret
daa
mov
sti
push
cltd
push
pop
pop
faddl
out
ret
pop
gs
xchg
stos
jge
jne
aam
fcmovnb
sbb
or
out
arpl
mov
loope
mov
adc
xchg
mov
sbb
and
rcll
cmpsl
icebp
xor
cli
push
mov
clc
lock
call
in
aas
adc
mov
aas
ja
jp
out
cmp
les
dec
xchg
fistpl
push
xor
push
filds
movsb
outsl
or
loopne
dec
mov
lds
xchg
mov
int
std
add
gs
push
xchg
push
sbbb
xor
arpl
sti
sub
cmp
ss
jns
outsb
cmp
sbb
sub
repnz
data16
pushf
or
fwait
dec
lret
ret
into
in
xlat
bound
pop
cmpb
movl
mov
push
xchg
and
jne
iret
fisubs
cwtl
shrb
push
icebp
fsubrs
xlat
or
lea
repnz
jo
add
pop
repnz
aam
scas
out
mov
fadds
repz
mov
lea
test
enter
imul
mov
lahf
dec
sub
xchg
mov
stc
jne
insl
adcl
lods
add
mov
out
jne
mov
lock
xor
je
jle
push
xchg
push
xchg
stos
nop
sub
dec
dec
leave
dec
cltd
or
push
aas
loope
mov
push
push
scas
cmp
hlt
es
add
pop
stc
addr16
pop
ds
out
mov
dec
adc
pop
mov
mov
call
jo
das
sub
mov
xchg
andl
lock
pop
scas
int3
jbe
in
push
mov
xchg
xor
sahf
test
add
mov
cmp
cmc
cmp
repnz
lods
repz
test
lods
popf
idivl
scas
adc
add
loope
push
cltd
andl
push
cmpsl
cltd
inc
add
sub
stos
aaa
push
mov
mov
ss
or
lds
push
dec
inc
jmp
mov
jp
in
subl
pushl
push
stos
test
popa
ret
mov
dec
jmp
dec
fs
cs
xor
sahf
negl
stos
lret
scas
adc
sub
loop
push
add
xchg
sub
pushf
xchg
push
cwtl
mov
mov
mov
jg
aam
testl
fistpll
in
je
pusha
dec
push
jnp
cld
pushl
push
mov
repnz
pusha
xor
fwait
mov
out
call
mov
aad
rcll
insl
mov
xchg
add
mov
les
pop
lods
adc
insl
dec
fwait
in
xchg
icebp
cmp
xchg
cwtl
mov
imulb
jns
aas
sub
pop
jo
mov
mov
xchg
pop
mov
push
aas
filds
cltd
lea
sbb
inc
inc
mov
cld
pop
stos
jnp
ds
stos
mov
push
pop
outsb
push
idivl
cli
mov
sarl
jmp
loope
rclb
int3
mov
inc
jge
jge
add
bound
jo
test
push
mov
mov
or
repz
fadds
dec
out
stc
les
push
pop
xchg
cmp
negl
data16
and
daa
mov
outsl
clc
clc
icebp
repz
subb
das
push
pop
jp
fisubs
dec
cmp
insb
outsl
and
rolb
bound
xchg
xor
pop
or
lea
sahf
push
repz
scas
mov
sbb
mov
sti
dec
test
xchg
adc
inc
jne
stos
sub
ffree
aad
xchg
push
dec
cmc
loop
xchg
sub
or
cli
adc
popa
out
xor
jle
aas
jp
mov
shll
pusha
data16
mov
icebp
ret
jno
lds
addb
imul
push
sub
xor
lds
andb
pop
lock
dec
popf
scas
lea
aas
divb
xor
sbb
movb
ds
push
repz
mov
and
cmp
test
cmc
cmp
cmp
jo
xor
mov
cwtl
testb
dec
xchg
adc
mov
lcall
iret
lret
ficoms
cli
push
gs
mov
addr16
mov
bound
mov
cmc
repz
scas
sbb
pop
stos
xlat
int3
pop
push
test
imul
mov
cmp
xor
adcl
cmp
pushf
hlt
js
ds
inc
orb
std
iret
mov
jbe
mov
xchg
mov
add
call
cwtl
fisttpll
or
pop
insb
push
xor
sti
push
xor
inc
roll
or
loop
pop
insl
inc
sub
pop
pop
add
push
mov
pop
mov
mov
stos
rcrl
lret
dec
test
mov
test
sbb
push
xchg
xlat
add
lahf
mov
repnz
push
push
incb
in
dec
sar
jg
jle
sti
ret
or
xchg
mov
arpl
mov
sub
ds
jle
xchg
pop
inc
mov
sbb
sub
cmp
or
clc
inc
fs
sahf
mov
pushf
sahf
shll
in
add
inc
adc
ret
shlb
lcall
mov
inc
cmc
jbe
jnp
ja
es
pushf
sbb
ret
pop
or
jle
lret
nop
dec
or
and
xchg
mov
mov
mov
mov
cmp
enter
outsb
mov
xchg
ljmp
leave
jmp
cmpsb
int
movzwl
pop
and
push
mov
scas
test
mov
jecxz
cmp
sub
xchg
mov
lret
loope
mov
loope
arpl
jmp
inc
add
jno
pop
sbb
xor
cmpsb
cli
leave
mov
aaa
aaa
push
sub
jg
mov
pop
popf
dec
ss
in
inc
pop
test
and
pop
enter
mov
sahf
aaa
clc
jno
fmull
shl
leave
pop
fwait
jmp
xor
lret
dec
addb
mov
sti
sbb
push
rorb
jae
or
sub
lret
call
cmpsl
dec
and
cmpsb
mov
jl
mov
and
mov
push
lods
sbb
xchg
dec
lods
out
dec
inc
mov
mov
dec
adc
jl
xchg
or
lods
sbb
mov
mulb
add
or
xchg
fucom
rolb
add
and
xlat
jg
push
sti
fadds
mov
call
jp
cmp
mov
test
repz
cmp
lret
add
xlat
cmp
pop
push
int3
cli
sub
dec
pushf
push
repz
icebp
mov
cmpsb
mov
fistpll
mov
xchg
jno
ja
clc
outsl
pusha
sub
and
add
movsb
in
cld
sub
fcom
cmc
in
add
mov
data16
jp
cmp
mov
shll
and
cld
sub
insb
test
dec
xchg
pop
outsb
ret
call
gs
testl
push
inc
pop
xchg
mov
ljmp
not
sub
inc
lds
iret
and
inc
pop
cli
in
and
xor
int3
sub
adc
mov
push
inc
jl
enter
in
test
push
lea
insb
rorl
sub
or
mov
lods
or
lahf
imul
js
mov
pushf
inc
dec
in
fistl
sbb
push
jecxz
sub
cwtl
cltd
fsubrl
mov
lret
dec
adc
fldcw
push
or
dec
jp
push
push
push
jmp
jmp
or
inc
data16
mov
stc
sbb
fldl
xchg
pop
mov
xor
fdivl
imulb
or
clc
bound
sub
push
cmc
lods
arpl
mov
push
adc
jo
jb
ljmp
sbb
jb
test
add
rcll
adc
popf
mov
xor
test
or
popa
data16
adc
push
out
cld
add
sbb
sbb
add
lds
in
pop
sbb
xor
xlat
inc
push
push
addb
cwtl
adc
sub
enter
jl
mov
rclb
inc
add
xchg
in
imul
jns
xor
cmp
xchg
push
cmp
lret
aad
xor
xor
enter
dec
nop
push
out
push
shrl
and
fstpl
cmp
addl
add
cmp
xchg
add
and
or
pop
rcrb
pop
jo
xchg
daa
sbb
js
push
push
cmp
jge
adc
test
adc
test
std
fstps
cli
pop
jmp
mulb
pop
jbe
add
hlt
xchg
xor
pmaddwd
inc
pop
insl
ljmp
jge
push
iret
xchg
and
stos
lahf
and
sub
mov
push
orb
loop
push
insl
dec
xchg
mov
fnstcw
mov
pop
decb
push
data16
adc
decl
xchg
out
jbe
cmpsb
fwait
xor
add
pop
popf
dec
push
mov
test
mov
push
jnp
pop
jns
test
aad
cmp
pop
arpl
and
das
sbbb
jbe
xchg
add
rcr
jl
mov
pop
xlat
in
test
add
add
mov
fwait
adc
jmp
icebp
add
ljmp
jns
mov
add
subb
lods
sbb
cmc
mov
xor
outsb
ficompl
pushf
iret
pop
xchg
insb
scas
pushf
or
or
mov
lcall
mov
jmp
lcall
fwait
pop
in
add
fimull
outsl
hlt
aad
fmul
sbbl
into
mov
pushf
and
mov
sbb
dec
adc
jmp
cmpsl
dec
mov
aad
inc
js
in
add
mov
cmp
jno
aaa
xchg
divb
addr16
repz
mov
and
addb
adc
cmp
rcll
mov
dec
leave
aaa
leave
pop
out
sbb
dec
adc
scas
mov
add
push
inc
aaa
stos
inc
movsb
add
pop
mov
pop
ds
inc
push
int
jae
test
jle
jmp
jae
xchg
and
dec
push
xor
inc
push
mov
loop
nop
cmpsl
mov
mov
inc
lock
jp
cmp
daa
data16
jno
movsb
sbbb
imul
in
sbb
xchg
push
cltd
mov
aad
mov
xchg
or
jp
dec
lret
sub
inc
cmc
ds
jmp
xchg
lret
fs
dec
add
add
push
fdivrs
out
out
shlb
mov
mov
into
int3
ja
jns
dec
mov
mov
xchg
pop
mov
ds
and
je
andl
push
out
int
mov
ja
stc
mov
push
repz
jne
dec
nop
rcll
mov
cld
cli
icebp
xchg
popa
adc
xor
sbb
out
stos
push
push
ja
js
stos
rolb
repz
pop
lret
dec
das
daa
mov
mov
or
sub
mov
shr
into
aad
leave
push
repz
jle
imul
pop
bound
push
push
mov
mov
mov
or
outsl
jl
adc
xchg
mov
xchg
or
add
push
pop
dec
mov
cmpsb
and
stc
dec
repz
cmp
inc
xlat
or
jnp
loope
pop
and
sub
cwtl
push
mov
rcrl
ja
ret
xchg
lret
cmp
mov
mov
aam
inc
xor
mov
or
or
call
mov
movsb
xor
in
std
mov
js
xchg
sub
arpl
imul
mov
jb
test
inc
sub
cmp
insl
xor
mov
xor
mov
mov
fwait
mov
mov
insl
dec
std
sbb
xor
or
lds
cmp
pusha
xchg
shlb
aam
lcall
mov
sbb
fucom
push
out
out
or
aaa
scas
jns
jo
popf
push
movsl
cmc
pop
rclb
insl
jno
ss
push
xchg
dec
arpl
sbbb
leave
pushl
push
stc
pop
shrl
pushf
jae
pop
fs
outsb
adc
sti
xchg
inc
push
pop
inc
inc
push
or
pop
or
call
daa
loopne
push
pop
mov
inc
xchg
lahf
add
add
and
pop
mov
cmp
cmpsb
fdivrl
and
mov
ss
out
into
adc
jo
xchg
sbb
pop
cld
rcrb
dec
into
in
pop
xchg
int
cltd
mov
cmp
sub
adc
xor
jmp
cmp
inc
leave
out
ret
bound
fs
push
addr16
xor
scas
adc
inc
leave
add
scas
xor
push
test
imul
mov
in
cmc
push
out
or
and
push
dec
push
dec
push
outsl
fmull
mov
cmpsb
sbb
je
sbb
xchg
push
sub
loopne
or
cmp
shl
mov
aam
add
xchg
jnp
dec
leave
and
inc
push
mov
inc
dec
jae
outsb
pop
les
movb
subb
aam
scas
push
mov
xlat
ss
xor
fs
xchg
fadds
std
dec
xor
mov
rclb
fldt
pop
mov
sahf
orl
cwtl
sbb
lock
lods
push
lds
push
pop
int
mov
adc
mov
cmc
in
xchg
pop
std
xchg
sub
push
xor
out
sbb
arpl
jmp
fwait
iret
and
xlat
push
cmp
out
fdivrl
in
enter
mov
cmpsb
pop
mov
bound
mov
cmp
ja
inc
jbe
cmp
sahf
mov
pop
sbb
outsb
push
jmp
ljmp
in
add
sbb
imul
adc
mov
or
add
and
int3
or
in
add
and
fsubp
mov
inc
sbbb
dec
sti
add
mov
sbb
xchg
push
xacquire
jecxz
cmp
sub
jmp
cltd
int
mov
roll
sub
repz
sbbb
xchg
sti
push
addb
adc
mov
xor
cmc
sub
or
xlat
je
inc
jl
fistpll
loopne
imul
cmc
jge
repz
cs
pop
or
add
mov
cli
sbb
std
jge
ss
jmp
mov
scas
aam
in
and
mov
dec
repnz
xchg
lds
fdivrs
int
xchg
test
sbb
pop
test
cmpsl
xor
subb
cld
sub
js
out
fwait
mov
inc
cwtl
sub
push
aaa
fldenv
and
xchg
popa
inc
mov
adc
lods
push
or
std
sbb
pop
lock
inc
cs
int3
sbb
fidivrs
rorb
sti
mov
call
shrb
pop
in
repnz
call
push
int3
mov
push
loopne
xlat
dec
add
xor
es
out
movsb
xor
jbe
pop
dec
bound
negl
cbtw
es
xchg
push
inc
enter
fimuls
and
mov
popa
addr16
mov
lds
insl
and
lahf
mov
push
int3
or
xchg
xor
sbb
xchg
imul
mov
add
adc
fldcw
cmpsb
mov
outsl
sbb
mov
cs
iret
jne,pt
test
xchg
lods
and
cwtl
test
inc
jae
out
push
pushf
fdiv
xchg
stc
cli
repz
and
cld
inc
jb
xchg
push
mov
std
data16
fwait
data16
inc
or
ret
lods
scas
push
outsl
test
imul
push
mov
js
mov
lcall
scas
jns
or
xlat
in
pop
mov
stos
xor
mov
mov
jmp
inc
dec
aaa
mov
pop
dec
dec
dec
pop
pushf
jo
das
adc
push
push
mov
lret
push
xor
mov
rcll
das
inc
inc
sti
xchg
sub
call
hlt
mov
cmp
xor
push
imul
pop
inc
push
fstl
js
fdivr
aad
sbb
xchg
movsl
mov
jecxz
dec
push
fdivl
inc
lds
icebp
mov
insl
gs
test
jmp
into
nop
xchg
add
pop
pushf
sbb
dec
subl
sub
dec
add
ja,pn
mov
sbb
test
in
xchg
adc
test
mov
sub
and
pop
add
imul
sub
popa
clc
mov
mov
stos
jo
dec
test
mov
mov
nop
xor
mov
arpl
add
in
clc
mov
sub
movsl
sub
add
in
insb
xor
jb
xchg
cmpsl
dec
decl
add
fs
xchg
leave
fdivr
outsl
lods
mov
mov
inc
push
sub
dec
dec
mov
fistpl
pop
push
ret
in
push
xor
scas
xchg
pop
mov
xor
outsl
ficompl
and
cmp
insl
je
into
bound
push
jbe
data16
pop
and
or
xor
adc
and
outsl
dec
inc
arpl
lret
lds
out
int3
and
jbe
dec
jge
ret
mov
popa
dec
pop
sbb
int3
sahf
loop
lea
inc
loop
lret
jbe
add
or
gs
mov
insb
aam
sbb
or
adc
ja
mov
movb
xlat
nop
outsl
dec
dec
scas
inc
lcall
push
cmp
and
mov
and
xor
pop
in
arpl
mov
jp
xor
test
mov
cmp
movsl
rol
cmpb
rcrb
push
hlt
mov
sbb
push
or
sbb
fnstsw
xor
xchg
data16
mov
mov
xor
das
push
mov
test
movsb
and
or
popa
sahf
cmc
mov
jge
mov
push
push
jp
int
dec
cmp
mov
or
rcrl
stc
dec
cmp
xlat
push
test
idiv
mov
or
mov
inc
sbb
and
out
ret
lods
repnz
jo
and
out
fstpl
push
cmp
inc
jge
fistpl
out
mov
std
roll
adc
and
mov
mov
fmull
mov
divb
daa
mov
mov
std
insl
aad
movsb
push
mov
and
pop
mov
popf
cwtl
mov
push
sbb
ret
in
mov
jne
aam
fstpt
adc
js
push
rorb
daa
cwtl
pop
mov
mov
das
mov
cmp
cs
adc
sub
add
mov
jne
push
push
xorl
iret
jb
add
fwait
jmp
inc
xchg
int3
andl
sub
cmp
xorl
adc
loopne
and
sub
pushf
mul
orb
mov
dec
mov
arpl
sub
movsb
test
test
es
ja
cmpsb
aas
std
imul
ss
mov
out
add
adc
in
jg
insb
fnstsw
cmpsl
add
clc
shll
sub
sbb
out
xchg
and
out
jp
inc
pushf
jle
jge
pop
pushf
pop
out
jl
cmc
lock
insb
mov
and
rclb
jge
xchg
lds
pop
data16
mov
pop
movsl
ljmp
repz
fstps
jp
push
cltd
mov
addb
repnz
test
mov
or
mov
sub
lcall
cmp
dec
inc
push
pushf
lock
dec
bound
lods
adc
aas
lret
push
icebp
sub
pop
aad
das
ja,pn
inc
fwait
das
sbb
shl
loope
xchg
and
pop
mov
call
and
add
fstpt
mov
lcall
cwtl
rcrl
xorb
push
das
and
or
jbe
cmp
push
adc
in
sub
call
into
out
lret
out
mov
mov
xor
xchg
lea
and
add
adc
jp
int3
sub
movsl
xor
xchg
inc
sbb
es
mov
aad
lods
iret
and
fdivs
xchg
jne
pop
push
test
mov
mov
insl
arpl
push
out
loopne
sahf
push
daa
out
movsb
jne
daa
sti
add
and
push
aas
cs
arpl
in
add
push
jmp
add
jg
dec
test
dec
adc
mov
daa
adc
dec
stc
add
mov
sub
push
dec
push
mov
mov
pop
push
gs
insb
adc
add
rorb
in
loope
and
loopne
lock
ret
mov
bound
divl
inc
iret
out
xchg
daa
mov
sbbb
add
orl
cmpb
pop
push
push
pand
dec
loop
mov
sahf
mov
or
icebp
orb
mov
mov
push
cmpsl
filds
ss
mov
push
jnp
jg
push
leave
sub
mov
fmulp
pop
dec
adc
add
jle
xor
out
cmp
loop
in
lods
sbb
mov
test
stos
lahf
mov
lret
test
out
xchg
sahf
xor
pop
mov
es
xchg
inc
jnp
xor
movsl
cli
push
xchg
mov
jb
inc
jg,pt
in
ss
or
fidivs
mov
mov
push
inc
fdivrs
mov
stos
push
pop
loope
mov
jb
sbb
cld
fidivs
cmp
jecxz
mul
aam
xor
loopne,pt
jno
xor
mov
flds
xor
or
inc
inc
outsl
je
dec
shlb
sbb
xchg
push
int3
add
sub
aam
fiadds
dec
adc
cmp
adc
jbe
jns
jecxz
out
mov
jp
xchg
push
and
rsqrtps
dec
sarl
mov
dec
test
ret
jge
fcoml
test
jmp
push
movsl
in
inc
sub
decb
mov
popa
pop
out
ss
fdivl
jg
xorb
mov
jno
sbb
fwait
in
sbb
cwtl
in
xor
mov
ret
stc
fwait
xor
cld
shl
xor
je
imulb
test
sarb
addr16
mov
sub
lods
pop
sbb
dec
mov
sbb
add
out
xchg
lock
dec
movsb
mov
fs
pusha
xlat
xchg
push
and
xchg
rcrl
pop
or
fsubp
rcrl
test
std
lret
or
mov
or
push
and
cmpsb
cmpsl
push
or
outsb
call
mov
mov
sbb
mov
cmp
iret
xor
fildll
jnp
test
cmpsb
add
sub
int3
movb
fiadds
lret
sbb
in
and
push
jne
in
pop
pop
clc
mov
cmp
and
sahf
scas
test
cmp
fmul
pop
mov
jae
mov
and
jecxz
pop
repnz
add
adc
arpl
addb
mov
cmp
mov
ja
int
sahf
push
cld
pop
pop
cmpb
push
mov
pop
mov
daa
sbb
fnstsw
mov
add
fildl
xor
cli
pop
js
neg
pop
inc
lcall
dec
dec
aas
xchg
inc
mov
push
mull
dec
bound
jae
shll
fs
fcompl
jl
push
add
dec
icebp
test
inc
stc
repz
and
mov
inc
mov
popa
dec
aad
cmp
aas
pop
xor
aaa
pop
mov
and
pop
lods
idivb
pop
fisttpl
cmp
int
inc
ja
leave
mov
dec
mov
jns
xchg
outsb
mov
orb
flds
movsl
mov
push
lock
loope
mov
sbb
pusha
subl
and
mov
push
ja
jg
xchg
xchg
jae
dec
sub
sbb
aaa
or
dec
idivb
icebp
and
dec
jae
insl
insb
add
int3
js
cs
cmp
rcl
sub
popf
push
scas
inc
repnz
mov
repz
test
arpl
das
incl
dec
adc
adc
pushf
push
mov
adc
pop
into
push
push
pusha
idivl
aaa
in
icebp
test
arpl
aaa
inc
gs
xor
lcall
movsl
add
dec
cmp
rorl
out
scas
push
and
sub
arpl
sbbb
inc
cwtl
mov
mov
pop
nop
aam
pop
repnz
into
inc
mov
jbe
inc
mov
sub
jne
or
cmpsl
sbb
dec
pop
xchg
jmp
test
cmpsb
imul
ljmp
jnp
add
in
inc
mov
outsb
fldenv
imull
fwait
negb
outsb
mov
rolb
fimull
call
movsb
mov
xchg
jmp
es
sahf
scas
call
mov
mov
cmp
scas
cmc
movsl
js
stos
imul
jl
mov
xchg
outsb
xchg
js
cmp
stos
test
sti
mov
lods
mov
or
in
sbb
mov
test
mov
mov
cmp
outsb
push
inc
xchg
mov
int
pop
pop
push
and
jg
out
divb
xlat
xor
xor
sbb
aam
cmp
or
leave
in
pop
filds
jbe
lcall
pop
out
mov
stos
pop
or
gs
push
and
push
repnz
jle
inc
mov
mov
lods
gs
push
push
jne
mov
push
xlat
add
jne
push
fsubr
and
dec
stc
test
adc
movsl
lahf
clc
sub
add
push
mov
adc
sbb
stos
sahf
jle
xor
pop
push
pusha
pusha
test
sub
scas
repnz
dec
mov
popl
adc
jge
idivb
aam
xor
cmp
mov
sub
stos
inc
or
ss
mov
test
roll
fldl
cmc
cld
addr16
mov
das
lret
cmove
stos
lea
aad
add
je
outsl
addr16
push
add
adc
aad
dec
or
xor
sbbb
cli
sbb
mov
and
mov
xor
mov
cmp
jp
sbb
aad
rol
jno
pop
lret
movsl
pushf
xchg
icebp
hlt
mov
insl
mov
hlt
mov
sub
pop
aam
and
lret
cmp
inc
lahf
test
dec
mov
xor
push
cmp
je
idivb
aad
mov
push
outsl
movl
jo
inc
fidivl
decl
out
inc
lods
fmuls
mov
sub
mov
in
dec
cmp
cmp
cmp
mov
test
dec
pop
mov
aad
xorl
lds
cmp
ds
jle
repz
popf
ret
aad
jns
sub
cmpsl
push
jb
sbb
test
aas
push
imul
sarb
test
ret
pop
xor
xchg
bts
stos
out
cmc
stos
fisubl
sub
add
inc
lcall
sub
xchg
xlat
cs
fwait
add
lea
add
pop
mov
mov
mov
popf
add
pop
adc
adc
incl
aaa
sub
and
mov
ret
dec
jno
dec
outsb
and
sbb
in
fdivs
mov
out
and
or
fucomip
add
pop
pop
adc
pop
mov
xor
jg
insl
add
adc
adc
mov
adc
mov
in
out
lahf
pop
mov
lret
pop
lods
stos
jae
cli
jg
cmp
fldcw
mov
repz
es
orl
xlat
dec
imul
test
jnp
gs
lods
lcall
dec
adc
cmc
xchg
or
ret
ds
pop
mov
push
mov
outsl
sbb
and
or
sbb
data16
rolb
xor
push
loope
in
jae
icebp
mov
pop
ret
in
leave
out
adc
imul
adc
xchg
mov
bound
pop
leave
xchg
scas
adc
rclb
sti
out
cwtl
jl
cmpsb
push
cmpsb
mov
inc
jne
lods
ficoml
das
adc
or
jo
rorl
jge
dec
hlt
jne
cmp
fcom
out
xchg
push
ja
inc
xor
adc
outsl
popa
or
sbb
adc
lock
ffreep
inc
adc
repz
sahf
and
mov
pop
jge
ret
jo
scas
push
aam
fildl
push
dec
enter
sub
out
mov
test
pop
dec
dec
movb
jbe
rcll
test
or
or
push
jnp
loope
lea
mov
jge
ds
bnd
xor
or
dec
enter
pop
dec
es
mov
pop
aaa
inc
int3
adc
mov
xor
fildll
into
out
dec
inc
jb
adc
mov
adc
xchg
cli
push
ljmp
mov
xchg
pop
mov
jmp
cld
push
insl
lret
bound
imul
mov
int
mov
pop
mov
pop
mov
mov
pusha
mov
aaa
cltd
movsl
sub
repnz
or
arpl
lret
mov
movsl
sub
mov
aad
inc
loopne
cwtd
jp
fs
jp
testb
mov
int3
shrl
jg
nop
add
pop
loop
test
movsl
push
and
pushf
or
mov
mov
icebp
dec
xchg
scas
lret
popa
insb
jmp
push
pop
or
dec
pop
test
dec
fbld
add
aas
scas
dec
insb
dec
xlat
push
cld
jb
mov
rorl
mov
icebp
xor
popf
repz
xchg
enter
or
xchg
pop
mov
loop
and
cmp
push
testl
shll
xchg
xchg
das
cmpsb
aaa
sti
cmpsl
loop
mov
enter
sarl
lds
cmpsb
adc
xlat
mov
sahf
cmc
test
xor
pushf
shl
cmp
mov
adc
push
sub
xor
fldl
xor
std
pushf
imul
shll
mov
xchg
cmp
fldenv
rcrb
push
test
xchg
imul
stos
outsl
fwait
cmp
mov
sbb
mov
mov
loop
cmpsb
pushf
adc
jle
stc
cli
dec
xchg
fisubl
sbb
sub
pushf
popf
lods
inc
ret
pusha
fsubl
rcrl
mov
jg
fcoml
and
sub
push
adc
fxch
pop
or
adc
cmpsl
hlt
inc
or
fldl
mov
and
arpl
add
ja
imul
mov
xchg
sub
cmc
and
push
jle
or
xchg
push
jns
stos
lea
flds
les
xor
mov
jb
stos
and
inc
inc
fiaddl
loope
fsubrl
jecxz
xchg
mov
inc
xchg
std
cmc
ret
lds
sub
lcall
test
add
fs
cmp
int3
sbb
mov
pushf
lret
inc
lahf
sub
mov
sub
cmp
out
cmp
inc
repz
push
xorl
sbb
sub
pop
jo
testl
test
jge
mov
int3
mov
push
and
xor
das
add
mov
xchg
add
lahf
mov
or
lcall
inc
fstp
push
fdivs
xchg
and
inc
loopne
test
xor
aaa
jne
jbe
mov
pop
cmpsl
add
sub
jmp
cmpsl
xchg
lret
out
adc
pop
cmp
mov
mov
jns
pop
rclb
xchg
mov
sbb
dec
inc
dec
inc
iret
sbb
movsl
popa
xchg
cmp
dec
jne
test
and
mov
aas
xchg
inc
push
xor
fadds
sub
xor
jb
jmp
push
dec
lds
fwait
add
pop
cwtl
shlb
sbb
pop
insb
push
mov
out
lods
dec
sbb
adc
ss
fistps
or
loope
jp
adc
adc
add
les
sub
xor
les
popf
repnz
dec
jnp
jecxz
add
push
lock
aas
leave
push
dec
pop
xchg
mov
dec
shlb
outsb
xchg
ss
add
adc
cmp
sub
scas
ja
push
adc
jmp
lods
shrb
xor
sub
or
jae
test
add
aas
xchg
jmp
push
sbb
nop
pop
addr16
stos
cltd
int3
lahf
xor
mov
movsb
testb
gs
jecxz
mov
and
jo
add
jno
mov
les
pop
adc
or
and
mov
jl
fisubrl
movsl
inc
mov
inc
xchg
push
or
pop
add
rcll
dec
sbb
sarl
jno
jp
xor
fisubrl
insb
icebp
jle
pop
push
jno
clc
ret
xchg
repz
testl
lods
mov
cmpsl
aaa
pop
in
mov
mov
mov
pop
xchg
jns
aad
mov
dec
jnp
push
pop
sbbb
inc
sub
orb
rolb
stos
shrb
cmp
xor
fdivrs
jb
xchg
aam
pop
adc
pop
mov
adc
imul
gs
test
clc
scas
mov
jmp
cmp
push
xchg
sub
or
ds
movsb
popf
int3
mov
into
mov
imul
and
aam
xchg
rcll
addr16
enter
outsb
rorl
sysenter
outsb
adc
mov
xchg
les
dec
mov
fnstsw
jno
xchg
pop
inc
pop
pop
ss
mov
int3
test
scas
mov
xchg
adc
enter
gs
xchg
push
bound
sbb
sti
pop
les
div
mov
and
add
mov
jbe
in
test
xor
push
popa
sbb
shl
pop
cli
aaa
mov
addr16
cmpsb
sahf
std
mov
out
inc
test
cmp
testl
mov
sub
in
rolb
pop
jns
xchg
mov
movsb
sub
mov
repnz
iret
fadds
notl
jnp
pop
pop
sub
adc
les
add
fs
jg
lea
and
mov
cmp
fadd
sub
aam
movsl
jg
push
xchg
addr16
sbb
loop
fdivs
lea
das
mov
int
inc
sub
cltd
jle
mov
unpckhps
ja
inc
addr16
jbe
pop
adc
inc
stc
fwait
mov
int3
movsl
rorb
and
push
sahf
lds
push
lret
push
sti
inc
in
jle
les
ljmp
imul
pop
sub
sar
jle
imul
test
mov
jle
adc
or
imul
das
push
lret
add
subl
imul
scas
cmp
mov
jmp
faddl
fcmovnu
bound
fcmovnb
pop
sub
xchg
or
int
mov
cmp
out
adc
push
ror
push
cwtl
sbb
xchg
or
fsubl
out
stos
or
ss
xorl
inc
popa
cmp
cmpsl
rcll
imul
shll
pop
ljmp
daa
repnz
push
shll
in
push
in
bound
arpl
shrb
pop
xor
fs
and
push
arpl
roll
jns
loopne,pn
pop
rdtsc
repz
add
xchg
push
pop
xchg
xor
sbb
adc
push
jnp
clc
adc
aad
pop
or
lret
ficoml
jg
mov
lcall
push
clc
fistpl
leave
insb
adc
sbb
mov
and
repnz
std
popa
xor
idivb
xchg
insl
fs
pop
jle
int3
pop
add
mov
sub
loopne
enter
cltd
inc
scas
sarl
dec
adc
jp
mov
sub
lret
pop
xor
pop
xchg
es
xchg
ds
aaa
cwtl
loope
out
cmp
jb
pop
clc
and
mov
xor
in
imull
sar
jl
hlt
mov
mov
pop
inc
sbbl
dec
and
mov
stc
pop
xrelease
popa
and
gs
mov
mov
push
jl
push
inc
mov
add
jge
int
or
faddl
das
in
scas
jmp
cmpsb
xor
xchg
sub
rolb
enter
inc
jg
cmp
leave
pop
int3
push
push
xor
inc
jno
es
sub
insl
and
push
push
addr16
fs
sbb
sbb
xor
push
mov
ret
push
jle
adc
pop
and
jne
mov
mov
mov
ljmp
pushf
push
mov
ljmp
bound
mov
mov
mov
insl
inc
jb
daa
mov
lea
or
inc
add
sbb
sub
add
loope
jmp
jecxz
fstps
add
imul
insl
rclb
out
jge
jne
cli
mov
loopne
dec
fcmovu
or
rclb
lahf
mov
outsl
xchg
pushf
daa
cmp
sub
jle
push
lret
push
lret
dec
cmpl
pop
ja
call
or
cmp
mov
pop
adc
sti
enter
loop
ret
cmp
sbb
ds
add
dec
les
cmc
dec
push
mov
mov
and
push
lret
mov
xchg
aas
hlt
fs
cmc
pop
lods
sub
out
rclb
inc
cmp
movsl
sahf
stc
dec
std
mov
dec
or
add
mov
pop
and
dec
jo
add
ljmp
jle
nop
mov
xor
jnp
dec
mov
cmp
pop
repz
and
fs
add
xchg
cld
dec
stos
add
xchg
add
mov
out
cmp
jne
pusha
adc
or
addb
idivl
das
int
jo
loopne
lods
jo
push
xchg
in
rolb
jp
xor
bound
out
sub
ja
push
push
lods
xchg
and
jbe
dec
dec
in
pop
push
test
aaa
pop
sarb
insb
or
push
cmp
inc
std
out
xchg
sbb
mov
sbb
dec
jno
pop
sbb
add
clc
jae
add
jns
mov
ljmp
adc
xchg
ja
jmp
and
clc
and
loopne
orb
stc
rcll
cmp
imul
sbb
ret
outsl
aad
jmp
imul
shl
xchg
fmull
push
lahf
xchg
push
dec
or
mov
clc
pop
add
mov
xor
es
stos
sbb
mov
jbe
xchg
push
iret
leave
xchg
mov
or
movsb
lods
sbbb
popa
arpl
aad
arpl
cmp
cmp
test
imul
pushf
jl
mov
sbbb
xchg
icebp
in
lahf
push
ja
in
xor
push
rolb
xor
jo
and
jg
stos
xchg
adc
mov
in
je
or
dec
fs
xchg
mov
xchg
cmpsb
popf
or
adc
mov
mov
icebp
test
addr16
call
insl
ret
out
and
loope
mov
shll
and
outsb
cmp
lock
sub
sahf
mov
jge
aam
into
out
xor
int
pop
aam
das
insl
movsb
iret
int3
int3
sti
insb
jmp
xor
je
and
and
add
fldl
stos
fcomp
lods
out
into
cli
xor
stc
adc
adc
and
mov
in
dec
sbb
mov
jae
imul
mov
ror
dec
out
sub
std
and
cmp
or
in
push
aad
jno
pop
fcompl
das
clc
jo
movsl
sahf
dec
inc
add
push
aaa
stos
push
in
xchg
sub
pusha
inc
adc
cs
mov
cltd
pop
jb
jmp
mov
lcall
sub
xor
jecxz
fidivl
xchg
pop
imul
pop
imul
pop
push
stos
outsb
xlat
fiadds
sub
or
out
pop
movsb
sbb
jns
ret
inc
out
mov
int
or
jg
jns
lahf
bound
enter
push
lret
xchg
fwait
pop
inc
sub
xchg
stc
cs
mov
xor
push
jecxz
lret
xor
mov
add
clc
addr16
pop
aad
pusha
mov
aam
xchg
dec
fs
cmp
xor
ror
or
push
xchg
add
mov
add
adc
add
xchg
in
and
pushf
xor
jecxz
insb
nop
imul
push
fsubrs
cmpsb
push
inc
inc
lods
fadds
jge
cmovp
sbb
jo
sti
cmp
push
cmp
lock
push
aas
pop
and
hlt
add
dec
sub
jg
xor
mov
aas
pusha
jne
push
pop
lcall
mov
xchg
cmc
aam
mov
xor
shlb
out
enter
or
notb
shll
cwtl
dec
sub
push
jne
push
jp
cmp
out
icebp
jmp
lds
xor
xor
pop
jp
imul
xor
inc
test
sbb
cmpsb
inc
fimull
dec
test
pop
mov
add
jb
lret
fistpl
cs
mov
mov
mov
xor
adc
or
add
inc
faddl
neg
add
clc
mov
jae
adc
movsl
pop
jae
call
pop
ficomps
dec
ljmp
fistpl
daa
lea
sub
jno
mov
xor
mov
mov
inc
jb
jo
xchg
and
pop
std
jo
push
inc
push
mov
adc
movsb
push
add
leave
adc
lock
fldcw
dec
fsts
jle
jo
inc
cmp
or
popa
pusha
or
outsl
add
xchg
and
adc
stos
lods
mov
mov
gs
mov
aad
push
gs
and
inc
sahf
inc
adc
mov
test
mov
inc
jbe
pusha
bound
stos
dec
es
stc
sbb
les
divb
inc
jmp
adc
stos
sub
aad
fs
mov
ljmp
jne
jns
mov
outsb
out
cmp
test
enter
mov
sub
aad
dec
cld
adc
in
ret
mov
pop
test
jecxz
push
push
mov
mov
add
cmp
out
sbb
xchg
fwait
dec
cmp
mov
out
fidivl
sub
das
fstpt
lock
xor
or
pop
push
pop
stc
gs
push
cmp
out
jg,pt
insl
pushf
lret
andb
in
int
ss
std
pop
std
jbe
rcl
sub
push
cltd
xchg
cld
into
addr16
push
ret
mov
fldt
outsb
adc
or
lods
and
cltd
idivb
push
mov
daa
push
ja
sbb
mov
pop
push
mov
fisttpl
or
lcall
sub
push
negb
xchg
mov
sub
and
mov
dec
xlat
push
xchg
faddl
leave
das
jae
add
dec
push
stos
lods
clc
and
mov
in
dec
push
icebp
mov
jmp
in
in
leave
stos
mov
sbb
loope
lock
insb
aas
shrb
lret
lods
lcall
lds
nop
xor
sbb
or
fldl
xor
cmpsl
daa
cltd
add
sub
popa
jl
add
adc
xchg
mov
bound
adc
pop
jo
sbb
adc
das
aad
imul
inc
rorb
subb
xor
fldt
lods
or
xchg
dec
leave
sub
lods
pop
das
fbld
mov
lret
pop
push
loope
xchg
push
cs
aad
mov
xor
push
mov
pushf
repnz
leave
mov
lds
lret
pop
cmp
out
mov
fwait
icebp
imul
pop
xchg
or
hlt
mov
ret
popf
lds
jno
in
dec
insb
in
aad
and
xlat
pop
dec
into
adc
sbb
adc
sbb
bound
gs
shrb
in
jno
pop
sub
pop
fdivp
lcall
lods
leave
xor
mov
push
loop
and
jne
inc
std
in
lock
jns
aad
mov
jno
mov
jle
loope
add
lret
mov
shll
nop
inc
insl
push
mov
imul
fildl
push
movsb
mov
mov
jbe
loop
popf
ljmp
mov
enter
cld
fstpt
mov
mov
fsubrs
aas
in
xchg
xor
or
adc
popf
shrl
sarl
pushf
add
add
sbb
arpl
enter
dec
xor
aad
or
hlt
test
hlt
sti
jle
inc
sbb
scas
adc
mov
and
inc
pop
into
cwtl
adc
aad
mov
in
lret
test
pop
sub
add
rolb
pop
pop
loop
repz
pop
cmp
jp
js
enter
jne
pop
popa
stc
cltd
or
push
sbb
out
push
push
stos
mov
inc
cmpsb
inc
mov
jp
push
out
shlb
pop
adc
push
cmpsl
lock
ret
cmp
insl
in
push
inc
mov
mov
popf
xchg
push
push
inc
nop
cwtl
mov
aam
pop
and
ja
add
enter
das
popa
push
hlt
stos
lret
cmp
add
dec
rol
decl
insl
mov
or
cmp
outsl
in
neg
sbb
xor
pop
pop
sub
cmp
dec
dec
mov
sbb
scas
dec
jl
xchg
mov
or
jl
in
cmp
xchg
or
xlat
test
mov
dec
mov
int3
fs
push
jle
fbstp
inc
push
mov
mov
mov
xchg
aad
add
iret
mov
sbb
hlt
cltd
lahf
outsb
jae
sbb
bound
imul
std
fyl2x
es
mov
cmp
cmp
or
pusha
mov
push
imul
push
fimull
or
sbb
sti
sub
xor
jo
sbb
jge
test
and
stos
sbb
mov
subb
mov
jb
adc
es
aaa
cltd
incb
data16
inc
pop
test
mov
popf
ret
mov
mov
cltd
daa
mov
aad
mov
std
xorl
test
test
aas
rcr
dec
fcoml
movsl
cmp
cmp
mov
sahf
lea
push
ret
loope
inc
adc
leave
sub
cmp
outsb
data16
mov
rcll
mov
mov
xchg
adcl
push
inc
pop
xor
sub
mov
jbe
pop
gs
in
dec
cmp
inc
mov
and
xor
ficoml
push
pushf
and
and
or
pop
gs
and
lret
clc
jl
cmpsl
or
and
ret
jo
add
scas
iret
xor
sti
cmp
ljmp
xchg
pop
test
jbe
lret
xor
cmpsl
pop
ret
xlat
xor
jp
test
nop
lret
cs
inc
cltd
and
clc
call
js
cwtl
adc
cs
stos
imul
lret
or
and
cmp
mov
fadds
popf
sbb
movsl
or
test
sbb
nop
jae
or
mov
lcall
movsb
jp
pop
data16
lret
in
lea
mov
pop
jp
jmp
pop
or
lcall
push
sub
outsl
pop
mov
lahf
inc
or
mov
jecxz
arpl
cwtl
push
pop
mov
push
xchg
stc
movsl
jbe
add
sahf
aad
in
fwait
stos
stc
cmp
sti
lock
pop
fsubl
mov
loop
movsb
inc
or
mov
pop
push
in
inc
mov
or
loope
jmp
daa
mov
bnd
add
stos
dec
cmp
repnz
out
mov
dec
andl
dec
ljmp
out
mov
mull
mov
pop
dec
sub
mov
mov
stc
sub
orl
pop
or
mov
fwait
jns
push
jg
sbb
lret
sbb
cmpb
mov
mov
sub
or
mov
dec
rcl
mov
aas
xlat
mov
bound
aam
and
movsb
out
push
orl
xchg
cmpsl
cmp
jno
sub
jg
sbb
test
mov
mov
jp
aam
icebp
pop
xor
sti
outsb
cmp
negl
sbb
xorb
repnz
sub
test
stc
out
cs
sbb
cli
sub
mov
push
jb
sbb
popf
xor
cmpsb
add
add
add
or
mov
in
sbb
add
pop
sbb
sub
xor
add
sarl
pop
xchg
call
aas
jle
xor
or
rorb
jle
push
pop
cmp
movsl
sbb
addr16
xchg
fbld
ret
movsb
xor
das
fdivs
jle
lret
jbe
pop
test
ja
aas
adc
fptan
js
shl
sub
xlat
jg
push
pop
xchg
sbbb
dec
test
insl
push
ret
out
or
mov
or
rorb
xor
addr16
mov
or
popf
test
pop
push
cmp
int3
adc
push
inc
jns
stos
inc
and
lcall
test
push
into
js
popa
fxam
sbb
jae
mov
inc
mov
jecxz
cwtl
jae
cmp
and
xchg
or
cmp
out
cmp
adc
or
mov
pop
addr16
pop
sub
out
adc
in
ret
inc
cmc
mov
lahf
repz
cmp
mov
daa
ja
test
aad
xor
sub
mov
arpl
andb
stos
lahf
cld
fsubl
fs
add
xchg
sub
clc
push
les
data16
xchg
movsl
hlt
fadds
xor
sbb
jge
jmp
add
xor
dec
cltd
mov
into
ja,pt
test
dec
mov
pop
fstpt
xchg
dec
fistpll
inc
imul
into
xor
icebp
sub
das
in
stos
stc
cli
pusha
cmp
dec
shr
push
scas
dec
pop
jns
or
loope
lret
cs
bound
pushf
sub
pushf
sbb
lea
mov
pop
and
std
fcomps
pop
adc
pop
jne
adc
arpl
fwait
adc
subb
jle
sarl
push
repz
push
xor
mov
test
sahf
data16
sub
mov
sbb
mov
and
pop
cmp
inc
cmp
mov
mov
mov
xchg
loope
inc
jno
addb
add
or
mov
outsl
jmp
addr16
mov
jo
jne
mov
sbb
cmp
cmpl
xchg
or
lahf
jp
push
fstps
jl
clc
je
aas
push
test
mov
dec
mov
cmpsl
scas
push
out
mov
mov
xlat
or
jnp
adc
mov
and
xchg
pop
repz
aam
push
mov
out
cmpsb
loop
cmpl
lods
push
sarb
imul
sub
and
das
xchg
mov
scas
sub
lods
push
cwtl
lret
mov
inc
cli
mov
movsb
jns
popa
jl
xchg
pop
jo
xor
adc
add
testl
or
mov
mov
insb
sub
and
test
cmc
icebp
outsl
test
push
xor
adc
shl
repz
mov
test
or
ds
mov
fnstsw
and
push
orl
jg
and
mov
add
mov
icebp
cld
fldl
sahf
push
push
pop
xchg
mov
push
push
push
outsb
xor
andb
movsb
test
and
push
enter
stos
dec
xchg
mov
jge
das
insb
data16
jb
jg
mov
jmp
mov
pop
aaa
inc
push
insl
orl
leave
andl
fldenv
jg
test
pusha
das
push
popa
cmp
es
xlat
mov
cmp
add
inc
aaa
imul
pushf
jns
xor
inc
out
xor
mov
in
or
out
rol
mov
mov
testb
adc
loop
outsb
insb
or
stc
shr
loopne
lds
ret
gs
adc
lds
lret
inc
xor
sarl
pop
shll
test
xchg
xchg
sub
ds
or
mov
repz
dec
or
je
imul
cmp
mov
xor
rcrb
xchg
cwtl
inc
and
divl
cmp
cltd
pop
cmc
xchg
lods
add
outsl
mov
and
frstor
or
movsl
cmc
sbb
stos
sub
aaa
addr16
cmp
and
iret
je
lods
ljmp
fdivs
inc
ja
sbb
sbb
cmp
sub
xor
or
jb
push
jae
fwait
cld
cmp
aam
inc
js
sbb
sarb
dec
add
and
cmc
call
add
gs
mov
lds
or
pop
xchg
enter
push
repnz
mov
aam
xchg
sbb
movsb
into
pushf
xor
jno
scas
les
aaa
orl
push
test
aas
test
sub
ret
push
pushf
sub
in
notb
ja
cltd
inc
fimuls
dec
arpl
sbb
add
pusha
mov
sbb
push
inc
inc
movsb
fildl
lret
cwtl
out
aas
popa
ret
shlb
xlat
decl
out
pop
aad
mov
fbstp
xchg
mov
sbb
stos
clc
pop
rol
lcall
push
and
xchg
gs
adc
add
mov
test
movb
out
cmp
or
add
inc
xabort
xor
mov
fdivs
ffreep
popf
shlb
xchg
mov
xor
cs
sub
das
mov
pop
enter
push
sub
jl
sub
xor
fidivs
mov
das
mov
sti
lret
xchg
mov
mov
out
clc
fnstenv
addr16
add
sahf
sbb
fs
cwtl
hlt
mov
or
nop
dec
dec
mov
mov
xchg
ret
imull
add
fisubrs
lds
adc
fs
cmp
in
mov
xchg
mov
adc
into
jmp
rcrl
popa
pushl
cmp
js
cmp
jns
imull
push
jo
in
push
sub
es
xor
jb
subb
mov
pop
aad
pop
fadds
pop
mov
fwait
and
movb
aas
jle
test
shlb
ja
or
pop
sahf
inc
test
enter
xchg
mov
in
dec
je
sbb
nop
and
lea
rcrb
hlt
mov
test
lea
xchg
repz
repz
call
xor
imul
pop
pop
test
negb
cmp
pop
pop
pop
lods
jae
sbb
or
mov
or
call
xor
sub
insl
shlb
shrl
xorl
loope
js
xchg
je
adc
and
cmp
adc
lret
idivl
mov
daa
ret
fwait
xor
jp
outsl
popf
cltd
repz
inc
lahf
adc
push
sbb
push
cwtl
xor
xor
fwait
outsl
xchg
mov
loop
inc
sbb
je
cmc
cld
jp
or
clc
out
push
mov
in
jno
and
mov
into
push
stc
inc
in
jo
sti
push
dec
xorb
test
adc
inc
repnz
pusha
leave
pop
test
dec
mov
cli
out
js
dec
mov
adc
out
icebp
xchg
gs
sbb
or
mov
push
insb
ja
daa
jnp
insl
push
fstpl
push
and
jne,pt
inc
pop
adc
std
ljmp
mov
pushf
fiadds
push
scas
mov
mov
imul
push
push
mov
mov
call
jmp
sub
mov
add
mov
insb
push
pop
cltd
add
jmp
lret
inc
pop
in
test
jecxz
aad
insl
jecxz
in
popf
aam
pusha
adc
xchg
mov
pushf
jge
xor
js
dec
das
mov
dec
arpl
and
mov
mov
cmp
add
jecxz
testb
mov
or
test
loopne
in
dec
es
enter
pop
fisttpll
addl
push
repnz
rorl
sbb
test
rcpps
push
dec
xchg
loop
inc
or
cmp
stos
push
mov
add
cmpsl
ds
in
dec
inc
les
mov
mov
inc
rolb
insl
addr16
fidivrl
push
pop
test
jg
mov
rcr
cld
xchg
jo
adc
rolb
sub
stc
sbb
inc
jmp
mov
mov
sbb
js
nop
adc
ja
hlt
test
pop
jecxz
sbbb
test
lcall
sbb
cmp
stos
cwtl
popa
setle
mov
cltd
jle
cmpsb
iret
inc
mov
data16
sbb
xchg
mov
sbb
pop
xor
in
push
lret
push
ret
test
add
inc
mov
jno
or
sub
cmp
cld
fistps
mov
addb
mov
out
xor
add
es
inc
mov
sarl
ss
mov
jge
mov
roll
dec
mov
pop
sub
addr16
mov
pop
push
push
pop
pop
push
scas
std
mov
scas
push
clc
js
inc
xor
dec
dec
rolb
sub
outsl
jno
sbb
push
xchg
sahf
push
mov
pop
push
dec
outsl
dec
and
scas
sub
out
popa
jns
adc
aad
add
fldenv
xor
cmp
or
test
jecxz
test
cmp
jl
push
fiadds
jne
mov
iret
mov
movsb
sbb
out
aas
pop
jp
aas
negb
add
and
or
and
pop
add
pop
mov
pop
stc
lahf
pop
inc
jbe
test
xchg
insb
xchg
jmp
gs
lds
push
mov
shll
sbb
repnz
xor
insb
inc
stos
xor
and
push
enter
loop
hlt
and
add
lret
cltd
or
mov
mov
aad
xlat
xchg
sarl
sbb
sub
in
xchg
xor
clc
mov
in
xchg
xchg
mov
iret
lods
inc
pop
xchg
mov
mov
shlb
fs
mov
addr16
mov
aaa
adc
and
data16
sbb
add
sub
jns
test
and
fldenv
out
nop
and
pop
gs
sub
out
gs
cmp
inc
test
fdivrs
push
dec
cmpsl
lahf
insb
mov
pop
xchg
and
fcoml
sbb
mov
daa
mov
int3
ret
decl
jecxz
xchg
and
stos
lods
push
pop
adc
rolb
mov
adc
shlb
mov
xor
inc
mov
mov
jg
jge
sbb
andb
movsb
and
dec
cmp
sbb
lods
fs
insb
mov
dec
rclb
sti
inc
les
in
inc
xor
push
lret
mov
test
and
or
loop
out
loop
sti
sub
mov
mov
jg
xorb
adc
dec
pop
cs
fistpl
xlat
mov
lds
add
mov
mov
pop
mov
xor
aaa
cmp
sahf
insb
adc
fldt
je
in
mov
pushf
jmp
xor
cmp
xor
lock
iret
mov
iret
andl
push
mov
dec
les
loopne
and
ret
xor
adc
mov
icebp
xor
cwtl
cmp
faddl
jo
ret
mov
shlb
movsb
inc
cwtl
xor
and
inc
mov
test
pop
fidivrs
cmpsb
sbb
sbb
addr16
in
add
insl
test
mov
mov
mov
lahf
mov
push
lahf
push
pop
repnz
cmp
std
loope
xchg
jle
jg
shr
sbb
scas
adc
xor
filds
orb
ret
hlt
pusha
cmp
js
ss
aas
and
out
push
jno
sbb
test
jbe
add
pop
jg
outsl
dec
fisttpl
scas
nop
adc
movb
int
or
shrb
adc
in
push
ljmp
mov
cli
push
ret
jns
xor
push
cltd
cmpsl
ss
dec
cmp
dec
imul
pusha
jnp
leave
add
lods
std
call
xchg
pop
out
jmp
shlb
xchg
push
adc
mov
icebp
dec
jnp
xorb
mov
pop
seto
cs
push
in
iret
or
out
sbb
outsb
mov
jb
ss
sub
sbb
adc
mov
out
out
or
cmpsb
out
jl
fildl
dec
jmp
sbb
push
and
popf
mov
inc
cld
mov
pop
lods
push
aad
cmpsl
mov
mov
pop
xlat
leave
xchg
stos
sbbb
fisubrl
mov
mov
ss
adc
jle
sahf
ds
scas
test
movsb
mov
mov
push
arpl
push
shr
pop
inc
out
out
fidivs
shll
mov
pop
jne
mov
std
pop
nop
ds
pop
repz
pop
enter
jl
test
mov
ss
not
sub
into
xor
xchg
inc
mov
insl
cwtl
fcompl
jns
adc
in
xchg
mov
xchg
or
movsl
sub
lds
xchg
pop
pop
add
dec
dec
pop
je
iret
aas
inc
lock
add
mov
jp
ds
lods
imul
out
push
jp
repz
jb
and
jb
sbb
mov
stos
in
aas
mov
mov
mov
rorl
outsl
jne
idivl
push
cs
lock
mov
imull
xor
in
scas
and
mov
jo
cmp
movsb
xchg
addr16
iret
jo
insb
xor
push
jmp
out
ret
es
lret
je
insb
imul
ljmp
jbe
inc
pop
jno
push
ret
icebp
jne
rcr
pop
es
mov
and
inc
lock
popf
clc
sbb
cmc
lret
mov
hlt
dec
int
adc
mul
icebp
lods
out
mov
ds
xchg
icebp
pop
mov
jg
push
push
mov
scas
push
lret
cmp
in
adc
add
ret
dec
icebp
sbb
shll
and
sbb
into
fcompp
insb
cmp
jb
sbb
popa
or
cmp
ljmp
mov
out
movsb
out
out
mov
or
push
sbb
loope
push
adc
or
sbb
add
adcl
popf
out
repnz
xchg
push
lahf
aad
icebp
xlat
outsb
sub
pop
outsb
mov
aam
sub
dec
int3
shll
negb
aam
ss
aas
adcb
lods
xchg
dec
mov
mov
insl
jbe
popf
sub
leave
and
mov
xchg
dec
push
lods
data16
fnstenv
fistpl
sbb
inc
dec
xor
fwait
repz
cmp
aad
repnz
xor
adc
scas
out
pop
lret
fildl
jg
mov
push
push
adc
icebp
mov
pop
adc
cli
xor
sbb
xorb
push
iret
outsl
push
repz
cmp
sbb
adc
inc
dec
or
inc
and
mov
mov
gs
fsubrl
xchg
push
push
inc
ret
mov
sub
push
mov
sub
sbb
xchg
insl
push
mov
inc
xor
outsl
sub
lods
sub
sbb
dec
or
filds
pop
scas
inc
aas
xchg
push
mov
int
xlat
in
xchg
dec
mov
cmpsl
lret
scas
out
dec
xor
in
lds
int3
xchg
push
fwait
inc
int
es
or
negl
and
push
sub
mov
pop
xchg
mov
dec
add
cmp
ja
jp
int
xchg
jbe
sub
push
xchg
mov
push
inc
jg
pop
dec
dec
mov
cli
or
push
inc
or
fsubrs
and
imul
pop
sarb
mov
out
adc
in
ja
repnz
out
push
out
jl
push
icebp
sarl
les
inc
hlt
and
push
dec
xchg
or
cltd
and
sbb
fistpl
fwait
std
pop
clc
ja
or
mov
bound
or
cmp
adc
bnd
mov
test
rcll
insl
test
push
aaa
imul
rorb
mov
adc
inc
cli
mov
sbb
or
ds
shlb
pop
inc
mov
fstl
es
xchg
add
or
sahf
mov
xchg
mov
adc
pusha
dec
fdivrl
xchg
clc
mov
test
and
cmpsl
imul
leave
xchg
mov
test
rorl
or
mov
iret
mov
xlat
lret
jnp
cmp
cmp
xchg
xor
push
inc
cmc
stc
pop
int
cli
in
sub
iret
scas
imul
ss
sahf
ljmp
clc
jb
mov
call
adc
into
cmpsb
outsl
pop
and
sbb
adc
pushf
out
sub
dec
into
lock
sbb
add
das
cmp
mov
ret
cmpsb
jno
mov
loopne
stos
and
sti
loopne
insl
or
mov
scas
cmpl
imul
add
cmc
mov
or
cmpsl
icebp
mov
fdiv
mov
add
mov
scas
mov
mov
lods
or
mov
pusha
mov
xor
mov
dec
jp
hlt
mov
lret
mov
gs
jg
jp
and
not
out
mov
jbe
mov
mov
clc
push
jnp
stc
out
cltd
js
rcrl
mov
mov
iret
jmp
mov
cs
ja
and
sub
mov
mov
aad
sbb
stc
lods
sbb
jmp
and
js
or
xchg
sub
mov
hlt
in
cmp
or
insb
dec
test
push
xchg
insl
loop
mov
mov
xchg
divl
add
add
xchg
add
pop
out
roll
and
dec
movsl
cmp
nop
je
sub
dec
lea
cmpsb
xor
lret
pop
inc
xor
and
scas
or
and
jnp
push
inc
or
daa
in
and
xchg
and
test
icebp
ss
aam
ljmp
je
mov
jb
enter
dec
fisttps
test
call
sbb
ffree
xor
add
nop
fs
add
jg
xchg
and
js
mov
cmp
pop
mov
lods
out
les
pop
sub
lahf
clc
fildll
mov
mov
xor
hlt
add
pop
sub
pushf
sbb
inc
cmp
and
xor
filds
jl
xor
arpl
mov
adc
out
dec
lock
iret
int3
ja
add
jmp
and
mov
adc
adc
mov
sub
mov
das
lods
fs
sub
pop
lret
cmpsb
push
cmp
scas
mov
mov
inc
jmp
mov
inc
jnp
scas
dec
adc
out
xchg
subb
std
push
sub
cmp
or
daa
cmp
ds
pop
xchg
outsb
or
mov
and
sahf
mov
movsl
pop
es
mov
sti
pop
mov
mov
movsb
mov
inc
pop
loop
push
lcall
test
mov
pop
xchg
push
in
mov
jnp
adc
adc
mov
dec
mov
mov
cwtl
out
pop
sbb
sar
jecxz
adc
cwtl
add
mov
cwtl
push
cli
sbb
mov
repz
and
inc
jmp
imul
sahf
jmp
sarb
test
hlt
cmpsl
sbbb
xchg
in
jecxz
mov
jmp
outsb
daa
push
mov
or
mov
lcall
sbb
dec
or
shrb
jnp
shlb
imul
sub
mov
push
int
xchg
cli
popw
clc
xchg
xchg
stos
push
jl
dec
inc
ja
scas
cmp
orb
mov
fnstcw
icebp
cmpsb
pusha
decl
sbb
jnp
call
mov
fsubl
repz
dec
in
shll
cwtl
ja
xchg
mov
call
jbe
push
pusha
xor
clc
repnz
pop
cmp
cmp
jno
mov
push
xchg
inc
xor
lods
add
js
stos
sbb
sbb
loop
iret
jg
fdivrs
frstor
aad
and
and
mov
addb
lods
sarl
icebp
push
xchg
dec
nop
pop
mov
ja
out
ret
fcomip
call
test
popf
rcrl
xchg
popf
sahf
mov
in
out
mov
mov
jmp
jnp
sbb
inc
mov
mov
sbb
scas
adc
and
cs
vpbroadcastmw2d
xor
out
sub
fadds
xor
xor
fdivrl
pop
push
adc
cwtl
mov
pop
xchg
repnz
cmc
inc
mov
jne
push
outsb
or
jbe
rolb
xchg
sub
push
in
pop
aas
pop
push
shll
loop
and
inc
jle
shrl
xchg
rolb
aas
inc
ficompl
outsl
sbb
loopne
mov
loopne
push
cs
outsl
sub
cmp
daa
adc
sarl
mov
aaa
xchg
addb
mov
aas
jge
nop
xor
cld
rolb
addr16
sbb
mov
dec
mov
fcomip
pop
lds
mov
pop
dec
ret
lret
test
cld
pushf
mov
xlat
nop
cmp
rcr
ljmp
ret
shr
pop
mov
mov
mulb
ljmp
sarl
xor
scas
in
loope
mov
and
xchg
jl
xor
cltd
xchg
repz
sahf
mov
cmp
subl
cmpsb
stos
lods
cmp
adc
stos
xor
add
clc
jle
in
inc
sar
inc
sti
lock
mov
sub
clc
fidivrs
addb
in
xor
push
mov
xchg
dec
call
je
push
fdivrl
movsl
jle
jns
cltd
aad
or
push
sbb
andl
mov
addl
mov
and
cmp
xlat
lret
movsb
addr16
ljmp
mov
adc
dec
mov
xor
jp
ja
div
adc
xor
pop
jnp
push
repz
cmp
inc
nop
ja
xor
inc
jnp
push
jg
xor
lea
pop
inc
and
inc
mov
dec
mov
add
cmpb
lret
leave
add
push
cld
push
jbe
stos
xchg
fsubrl
inc
jo
test
lret
loopne
mov
mov
scas
pop
jmp
cmp
idivb
mov
daa
mov
aam
sbb
iret
inc
nop
ret
test
dec
sti
mov
in
stc
rclb
int
or
push
imulb
in
mov
outsb
and
movsb
pop
mov
xchg
xor
sub
sarl
sti
jmp
or
cmp
dec
shlb
addl
jle
adc
add
gs
cltd
fbstp
mov
dec
lds
je
pop
fisttpl
jbe
or
push
xor
xor
add
sbb
inc
push
dec
lods
and
popf
outsl
insl
cli
push
das
push
adc
inc
shrb
ds
push
fwait
in
push
jle
jmp
ds
add
xor
in
xor
adc
loope
int
insl
sub
sbb
das
jb
add
enter
int
push
addr16
and
cmpl
pop
lret
shlb
ret
mov
insb
leave
in
push
imulb
cmp
cmpsl
xchg
cmpsl
xchg
add
pop
call
enter
add
into
mov
xchg
xor
jp
cmpsb
loope
icebp
scas
jg
sbb
mov
gs
xor
les
and
add
stos
push
ljmp
enter
cmp
pop
xor
adc
dec
and
push
push
sbb
or
mov
push
fsubrp
test
jg
xor
mov
add
sub
out
sahf
sahf
xor
pop
xor
aad
push
sbb
or
imull
mov
scas
frstor
or
leave
je
shrl
jo
lds
xchg
cwtl
push
or
pop
inc
int
pushf
std
push
andl
movsl
xchg
fsts
gs
out
imul
mov
or
cwtl
js
pusha
add
jmp
mov
sbb
push
or
stos
pop
fsubr
test
int3
movsb
jo
scas
dec
adc
sub
jle
sbbl
popa
mov
out
mov
mov
sbb
jmp
lods
adcl
push
movsb
jg
not
int3
sbb
aam
xchg
xorb
jne
cmpsb
insl
inc
push
in
shr
aad
jb
xchg
pop
xchg
push
aaa
roll
outsl
and
notl
dec
xor
test
mov
or
mov
call
lods
push
lods
stc
fists
xchg
lods
in
xor
lret
scas
xchg
aam
lock
jbe
scas
into
mov
lcall
das
lds
imul
roll
add
in
dec
out
aam
xorb
aaa
push
jnp
mov
stc
iret
push
insl
or
mov
sub
stc
out
push
stos
mov
cmp
sti
lods
imul
in
icebp
roll
mov
jno
jno
test
clc
push
out
mov
lcall
lret
mov
sub
dec
add
or
call
cs
inc
mov
aam
fmul
dec
inc
or
mov
scas
lcall
popa
or
mov
pop
iret
add
lcall
fs
int
adc
adc
subb
xchg
lret
imul
pop
mov
clc
xor
sahf
cwtl
mov
outsl
pop
insb
cwtl
ljmp
push
repz
loop
std
nop
mov
adc
cmp
iret
push
lcall
lahf
out
pop
imul
aam
loopne
fwait
lret
test
cmp
loope
es
cli
lods
add
dec
lahf
push
xor
add
pop
push
dec
inc
outsb
mov
sahf
scas
xchg
mov
push
and
mov
cwtl
cmp
addr16
jns
dec
aaa
xchg
cwtl
xchg
leave
dec
lret
mov
push
outsl
jge
inc
dec
out
jne
incl
mov
stc
loop
inc
xchg
mov
xchg
subb
lret
sub
inc
rcl
mov
loopne
or
iret
movsb
push
lcall
mov
xchg
lods
cs
jp
andl
fs
dec
adcl
mov
dec
cs
or
inc
stos
xchg
xorl
mov
mov
aad
ds
mov
outsb
divl
xlat
ljmp
xchg
jg
movsb
int3
pop
push
jno
std
movsb
shrb
js
pop
lea
das
f2xm1
pop
out
pushf
and
loopne
fldt
loop
xor
xchg
push
mov
shll
int3
pop
mov
and
sbb
in
mov
sbb
movsb
sti
sbb
out
lea
dec
mov
sbb
jmp
push
push
xchg
addr16
hlt
mov
mov
lods
std
insb
fldcw
arpl
pusha
sbbl
pop
jmp
icebp
shlb
pop
mov
sub
xchg
out
outsl
push
arpl
add
sbb
mov
icebp
cli
int
sbb
xor
inc
aad
jne
dec
cmp
cmp
jecxz
ss
roll
nop
sub
push
ss
test
test
cld
or
jle
test
out
in
mov
rcrl
les
push
fcmovbe
test
cli
mov
iret
mov
cmp
sbb
movsl
or
push
xor
pop
push
outsl
lea
in
fildl
dec
adc
and
pop
inc
fwait
xchg
lret
xor
mov
iret
loope
in
add
mov
mov
push
test
scas
out
jae
sbb
imul
xchg
inc
outsl
xchg
out
into
flds
fwait
push
pop
mov
ljmp
cwtl
call
inc
sbb
pop
loopne
push
loope
lret
mov
xor
push
mov
xchg
fbld
sub
add
sub
outsl
cltd
mov
xchg
bound
push
xchg
notl
jp
xor
lock
cli
daa
outsl
fstl
popf
lea
pop
addb
xor
gs
mov
test
sbb
adc
adc
mov
fcmovbe
arpl
scas
lret
jmp
sub
or
mov
out
mov
pop
adc
cmp
dec
push
in
addl
mov
icebp
int
sub
out
cmp
sti
addl
mov
adc
cmc
push
xchg
xchg
inc
sarb
and
in
inc
xchg
out
enter
pop
mov
stc
int3
add
mov
loopne
jecxz
into
ljmp
stc
cmp
jno
addl
aaa
cs
mov
sub
movsb
mov
aad
xchg
loop
mov
cmp
mov
mov
fs
aaa
jnp
adc
jecxz
test
mov
mov
and
cmpsl
mov
fst
jae
push
xchg
pop
cmpsl
andb
int
mov
outsb
outsb
mov
push
movsb
dec
sub
xchg
pop
ret
orl
call
dec
pop
lahf
mov
jle
pop
or
mov
dec
push
dec
es
dec
or
lcall
std
stc
dec
scas
mov
push
jnp
iret
push
sub
sbb
cmp
das
xor
jge
cmp
jp
jo
ror
cmp
xchg
jl
mov
stos
gs
lcall
xor
stc
mov
mov
push
lods
jnp
xchg
dec
movsl
xor
in
jle
jmp
les
test
adc
jecxz
in
push
sbb
cmp
sub
pop
in
push
sahf
mov
inc
repnz
mov
daa
mov
shll
push
ljmp
jmpw
push
cltd
cmp
and
shl
adc
or
mov
test
sbb
inc
jl
jge
aas
inc
dec
je
out
mov
loopne
push
xchg
aas
push
scas
push
adc
push
mov
loopne
lods
push
repnz
sub
lock
repz
dec
inc
add
mov
aas
int
mov
jl
es
lock
pop
ret
inc
push
add
lcall
xchg
iret
addr16
mov
lret
test
jmp
mov
popf
lcall
hlt
adc
inc
fcmovb
jae
pop
jbe
xor
sbb
xchg
movsb
in
insl
mov
js
sbb
cs
dec
jnp
pop
into
aas
pop
mov
sbb
mov
popa
xchg
jge
fisubl
sbb
roll
adc
icebp
fs
in
adc
sub
dec
mov
daa
shrb
popa
test
xchg
cmp
mov
je
loop
cld
mov
mov
lock
pop
push
jmp
ror
outsb
push
pop
lret
xchg
fstps
bsr
xchg
mov
inc
ret
fnstenv
sbb
fcomps
push
xor
in
pop
lds
pop
jnp
adc
sbb
sub
je
xor
adc
inc
lock
mov
dec
cmc
nop
sahf
loopne
xchg
mov
call
nop
ds
nop
adc
mov
push
ja
mov
mov
fnstsw
cmc
adc
shrb
mov
mov
xchg
enter
mov
dec
adc
outsb
pop
xor
xchg
push
fadds
jb
shll
gs
insb
rcll
mov
adc
push
pop
jae
leave
sbb
in
add
or
out
sbb
cmp
jno
mov
or
fldcw
jg
popa
daa
mov
push
inc
aas
cmp
in
xchg
imul
shrl
push
cmp
inc
roll
insb
ficoms
add
call
push
pop
sub
mov
sbb
es
repz
push
xchg
add
push
jbe
jp
pop
fdivrs
add
adc
arpl
or
xchg
mov
in
sbb
push
lret
movsl
aam
insb
testb
fistpl
adcl
pop
lock
stos
outsl
lods
sahf
pop
cmpsb
and
scas
fwait
sbb
fwait
loopne
push
pop
cltd
and
adc
ja
fisttpll
shlb
jp
jnp
loop
pop
repz
xor
mov
dec
xchg
call
test
into
je
add
mov
shll
xlat
sub
into
popf
jle
mov
sub
xchg
fistpl
jns
clc
inc
lock
or
lods
push
push
push
out
mov
addl
das
and
pusha
cli
xchg
mov
mov
jmp
push
int
pop
mov
jl
mov
inc
mov
jl
lods
mov
mov
sahf
adc
dec
lock
fadds
or
fnstsw
testb
test
jae
pop
stc
dec
xchg
jg
pop
cmp
adc
cmp
and
mov
iret
into
or
push
jne
mov
push
mov
mov
out
mov
mov
sub
pop
in
mov
mov
pop
inc
fisubrs
fidivrs
mov
in
sahf
xor
jecxz
cli
int3
cmpsb
insl
or
aam
push
dec
popw
cmp
pushf
jbe
bnd
fdivrl
jmp
pop
pop
lods
sub
adc
pop
into
ja
push
adc
sbb
and
sbb
loope
ja
dec
inc
jg
pop
es
jo
hlt
lds
test
xor
cmp
sub
adcl
cmp
mov
repz
sarl
jae
push
inc
mov
popf
push
and
add
jno
out
aaa
ja
jg
mov
jbe
adc
scas
jmp
sub
adc
rcrl
js
sarl
mov
jl
inc
mov
in
sub
sbb
rorl
mov
es
bound
add
mov
jo
hlt
adc
inc
sub
fcoms
jl
repnz
outsb
mov
in
adc
mov
jp
movsl
mov
ss
sarl
sbb
cmp
xor
mov
jmp
les
pop
lret
shll
dec
pop
pop
jae
add
lods
mov
pop
bound
repz
scas
mov
dec
xchg
xor
lods
mov
mov
lock
inc
mov
repz
jbe
testl
ret
mov
mov
push
aam
jne
adc
inc
fdivrs
into
add
mov
cwtl
rorb
xchg
mov
lock
mov
gs
push
and
push
popf
sar
filds
inc
pop
inc
lods
add
pop
adc
push
std
dec
dec
popf
out
aam
push
imull
mov
jno
adc
and
sub
mov
add
push
pop
inc
xchg
xchg
adc
cld
out
sbb
mov
ret
xchg
xchg
ret
push
filds
lock
push
cmpsl
sti
xchg
cwtl
pop
jb
pop
stos
inc
and
hlt
push
pusha
inc
mov
push
adc
adc
sbb
mov
inc
xchg
jge
lahf
xor
mov
lock
shl
addr16
in
add
das
cmc
and
addb
push
sti
add
jge
vpunpckhwd
cs
or
fistl
mov
inc
sbb
inc
ret
fisubrl
pop
movb
callw
out
aam
pop
in
dec
sub
xchg
cmc
std
test
xchg
aam
adc
jnp
xor
xor
nop
ss
imul
cmp
push
add
jmp
push
pop
cld
xchg
shll
jmp
testb
jg
icebp
repnz
xchg
push
movsb
imul
cmp
push
fstpl
stos
and
bound
cmp
push
cmpsb
push
xchg
dec
lcall
test
sub
jb
ficompl
sub
shll
jg
cmp
or
lret
insl
push
roll
pusha
jbe
insl
xor
mov
adc
jb
cmp
pushf
leave
jbe
or
into
cli
lret
inc
mov
add
stos
add
icebp
jle
popa
xchg
jne
icebp
mov
ds
scas
push
adc
popf
add
pop
xchg
aad
inc
cmove
sub
jbe
pop
mov
add
nop
mov
pop
in
pop
adc
sub
popa
adc
mov
mov
mov
enter
int
cmp
insl
adc
mov
js
in
mov
sub
pop
mov
adc
pop
mov
repz
cltd
stos
scas
icebp
dec
enter
adcl
sub
jo
rcl
fs
cltd
mov
jl
or
xchg
mov
or
pushf
and
sbb
push
sbb
push
in
add
add
dec
mov
in
mov
outsl
add
rorb
mov
jmp
hlt
shll
dec
test
jmp
push
jne
add
pop
aad
xor
xlat
in
mov
mov
into
mov
sub
filds
outsl
adc
and
and
mov
add
aad
pop
mov
sahf
test
test
out
pushf
inc
fstps
add
or
mov
testb
sub
and
in
sbb
xchg
fisubs
mov
dec
push
jbe
cmp
imul
stc
das
movsl
popa
xchg
insb
aam
push
out
or
or
fistps
mov
ss
test
jae
test
xchg
out
aaa
or
cmpsl
pushf
jae
or
mov
push
xor
dec
test
stos
aas
imul
inc
and
sbb
fnstenv
out
std
les
adc
jecxz
mov
in
clc
sti
push
xor
lahf
dec
icebp
lds
sbb
sbb
mov
sub
icebp
push
xchg
test
rcll
insb
int
arpl
int
imul
jne
fstpl
mov
fisubl
xchg
dec
jp
jl
jmp
cmpsb
lods
and
dec
pop
inc
dec
inc
out
js
out
push
adc
ljmp
jb
or
xor
jo
push
daa
repnz
dec
insl
or
jns
data16
test
xchg
lcall
fnstcw
or
or
repz
cmp
daa
jg
xchg
mov
cs
xchg
mov
je
xor
xchg
stos
bound
sti
pop
xchg
mov
inc
xchg
call
lcall
cmp
movsl
popa
scas
adc
dec
fdivs
xchg
xchg
movsb
imul
mov
fisttpl
push
test
adc
cmp
lcall
pop
push
jecxz
xor
cltd
mov
mov
mov
in
add
jle
or
leave
int
sbb
imul
das
out
pop
and
xchg
ficoms
cmpsb
jns
add
xor
dec
inc
test
inc
xchg
xor
cmpsb
imul
xor
pop
iret
ljmp
cmp
mov
xor
mov
enter
xor
and
ja
cmp
fistps
frstor
lods
adc
out
popl
mov
clc
pusha
xchg
pop
das
and
insl
jge
adc
in
insb
xor
push
jbe
sub
lock
push
sbb
xchg
mov
cmpsb
xchg
xchg
js
mov
lock
mov
outsl
add
pusha
dec
mov
mov
cmc
mov
loope
mov
lcall
mov
push
fbstp
xchg
jns
dec
and
push
stc
mov
pop
fs
or
cld
lds
push
mov
xchg
xorb
mov
js
lods
aam
out
bound
add
adc
xor
mov
and
leave
test
sarl
out
test
data16
test
jnp
popf
push
or
jmp
mov
imul
sub
lret
sbb
xchg
dec
sbb
adc
insl
dec
rol
inc
fsubrp
lahf
repz
jb
or
popa
mov
push
hlt
mov
outsb
cltd
cmc
or
fchs
mov
sub
fmull
inc
movsb
push
add
xlat
ss
fwait
in
jnp
in
push
xor
pop
aas
test
pop
popf
ljmp
mov
dec
out
pop
mul
les
mov
movb
add
sub
mov
mull
aas
fs
sub
xor
xchg
inc
adcb
cmp
mov
and
sbb
jg
aad
jns
test
dec
stos
imul
lock
adc
push
subl
xchg
aad
dec
xor
mov
cmp
sbb
cmpsb
movsl
imul
add
or
cmp
sub
push
adc
mov
es
fdivp
dec
jo
or
cwtl
mov
add
add
pop
xchg
mov
xlat
mov
jge
lods
xor
jae
pushf
mov
pushf
les
std
xor
jnp
rcrb
inc
rclb
aas
pop
sbb
bound
jb
pop
fidivrs
repnz
inc
shl
mov
mov
hlt
stos
mov
das
dec
cmpsl
pop
mov
fisttpll
push
sub
cs
sub
dec
xchg
mov
iret
incb
fucom
push
pop
push
and
stos
fwait
vrcpss
sbb
fbld
push
pop
negb
cltd
mov
adcl
jb
in
shl
out
add
dec
enter
or
test
pop
sbb
sub
xchg
dec
pop
shrl
push
mov
mov
ret
inc
out
xchg
cmpsl
icebp
sub
sbb
mov
fldt
dec
push
xchg
fs
sub
inc
int3
andl
cmp
and
xchg
add
xchg
xchg
jmp
ljmp
fisubs
stos
stos
jae
lret
jnp
cmp
sbb
stos
and
dec
adc
sub
or
jnp
adcl
sbb
jne
pop
sti
mov
jbe
pop
pop
test
inc
mov
inc
jle
iret
dec
inc
and
out
sub
mov
hlt
jmp
xlat
les
mov
fistps
sar
jbe
xchg
add
pop
out
inc
cmp
sti
mov
adc
les
inc
aam
sbb
out
inc
inc
pushl
call
jmp
aas
fidivl
call
in
add
mov
mov
scas
xchg
je
je
rorb
mov
pusha
jecxz
aas
xchg
jae
or
sahf
xlat
mov
les
sahf
out
pop
jno
nop
hlt
jae
and
adc
cwtl
xchg
adc
test
jo
xor
pop
lock
or
mov
fdivr
dec
les
aas
cmp
cmp
inc
mull
das
jne
repz
and
pop
pop
jmp
push
pop
sub
lahf
and
inc
mov
repz
mov
inc
clc
shrb
rolb
xchg
fstpt
mov
rorb
xchg
jecxz
xchg
mov
mov
flds
adc
xchg
and
push
jg
sti
lahf
cld
sub
stc
mov
cmc
addr16
cmpsl
push
sahf
neg
in
pushf
mov
testb
mov
or
js
xor
cwtl
std
or
or
sti
movl
cmpsl
adc
jl
push
mov
and
lods
mov
jnp
and
hlt
mov
mov
call
dec
push
push
movsb
sbb
xchg
xchg
jecxz
sbb
lods
insb
pop
xorl
adc
adc
sub
pushf
dec
add
imull
loopne
mov
out
cmp
imul
xor
cmpb
mov
js
in
xor
decl
scas
enter
adcl
mov
mov
stos
mov
jle
cmp
rorb
icebp
add
lret
jne
xor
cmpl
push
mov
cli
and
cs
mov
das
test
and
xor
and
out
mov
std
nop
sti
rcll
cmc
cmp
xchg
jmp
sub
pop
mov
stc
dec
ja
jb
sbb
outsl
lock
sbb
xlat
pop
adc
sub
call
jb
mov
push
add
mov
rcrl
jo
shlb
adc
pop
les
mulb
js
iret
jl
in
aas
mov
jmp
xchg
push
pop
cmp
stc
outsb
sbb
jmp
dec
cwtl
sbb
pop
sub
dec
jg
xchg
shrb
lcall
call
out
xchg
ss
push
int3
popa
mov
rcr
mov
sahf
mov
das
add
movsb
mov
jp
movsl
sub
add
jne
lods
dec
cwtl
stc
jno
xchg
out
xor
inc
adcl
jns
leave
ds
jg
cwtl
mull
out
add
xor
sub
into
xchg
xor
cmp
pushf
or
push
inc
and
xchg
cmpsb
jecxz
adc
std
sbb
pusha
imul
push
mov
das
cmp
xor
sti
js
mov
test
mov
sbbb
test
xor
test
sub
in
scas
inc
or
jb
dec
popa
jmp
xorl
insb
cmp
movsb
lea
mov
mov
cmpsb
and
imul
lea
repnz
fidivrs
rol
inc
int3
test
mov
orb
sbb
sub
sub
test
pop
scas
rcrb
or
ja
or
add
or
fcoml
inc
sbb
inc
push
icebp
adc
xor
rorl
cmp
mov
jp
imull
inc
in
mov
inc
xchg
jge
sti
neg
mov
iret
mov
leave
and
dec
je
fdivrl
roll
lret
lds
fsubs
cmp
nop
fimuls
adc
jnp
inc
fsubl
mov
jmp
iret
mov
data16
lcall
pop
inc
sbb
dec
pop
xchg
push
pop
popa
aaa
sti
add
nop
movb
fwait
xchg
inc
sbb
jmp
jmp
xchg
rorl
jecxz
dec
xor
stc
mov
jg
adc
jle
mov
pushf
leave
inc
daa
cmpsl
or
adc
das
out
loopne
pop
cltd
stc
mov
addr16
jg
xor
ja
cli
xor
aam
dec
dec
ds
mov
insb
out
pop
dec
xchg
outsb
ret
std
ror
sub
add
cmp
ret
sti
fiadds
loop
xlat
daa
test
fnstenv
jno
jmp
xor
in
jne
ja
adc
test
movsl
js
push
faddp
add
mov
mov
icebp
rorl
push
push
outsb
sub
scas
lods
inc
cmp
ss
movsb
movsl
mov
lret
adc
imul
and
test
pop
scas
into
insl
pop
enterw
cmpsl
aam
lods
iret
lcall
sbb
pop
sub
mov
pop
sti
sarb
inc
mov
add
pop
sbb
fwait
decb
adcb
cltd
ret
hlt
testb
fs
and
rclb
lahf
add
fwait
cmp
mov
pop
imul
jns
or
adc
call
xchg
daa
int3
sub
mov
xchg
add
inc
mov
jb
into
das
shl
sub
or
mov
jl
xchg
adc
in
and
in
pop
sub
outsb
sbb
mov
jbe
das
loope
mov
fidivrs
arpl
loop
xor
add
js
scas
das
or
hlt
mov
out
stos
jg
data16
scas
sub
mov
mov
int
jp
jo
pushf
inc
popa
cmp
subl
shlb
int
sub
push
loopne
scas
pop
cmpsb
mov
in
dec
sbb
xor
jns
mov
or
push
or
sbb
xchg
add
outsl
mov
out
sbb
mov
sti
dec
inc
xorb
or
xlat
sbb
sbb
mov
test
push
dec
std
mov
pop
mov
sub
inc
and
scas
lret
xchg
add
dec
fsubr
sbb
jnp
shrb
mov
sbb
and
jnp,pt
scas
xchg
jns
cmp
jg
push
lods
xlat
cmp
sub
outsl
adc
inc
cmpsl
cs
mov
dec
cmp
ss
mov
test
inc
aaa
lods
adcl
and
sbb
mov
inc
imulb
shrb
jp
lahf
jmp
out
dec
add
inc
pushf
xchg
jne
rolb
pop
pop
ljmp
push
mov
push
out
sahf
js
sub
hlt
fidivrl
cmpsl
adc
fstpl
mov
push
leave
and
movsl
jae
outsb
xchg
push
out
les
jg
jns
mov
xor
push
dec
sti
pop
test
loopne
xor
adc
or
in
cwtl
test
out
nop
sbb
push
pop
dec
mov
mov
jg
cli
jecxz
jmp
xor
lods
cmp
fs
cmp
lock
jbe
les
pushf
mov
xchg
jp
adc
sbb
adc
jle
sarb
adc
sub
xchg
stos
dec
test
jp
jbe
test
inc
mov
mov
enter
add
dec
aaa
sbb
dec
sbb
fstl
imul
nop
pop
inc
lahf
push
or
cmpsb
icebp
mov
mov
or
in
ss
xor
ffree
push
cmpsb
push
das
mov
dec
inc
loope
std
sbb
mov
jbe
insb
adc
add
pop
and
repnz
jle
popf
pop
push
imul
adc
sbb
cwtl
adc
pop
dec
xor
pop
outsb
fcompp
jl
pop
and
fcomps
push
mov
push
outsl
jno
lea
xchg
rcrl
and
icebp
cld
lods
mov
faddp
icebp
ja
pop
adc
mov
ficomps
pusha
jg,pt
jb
pop
divb
nop
test
mov
test
pusha
iret
xor
jg
int
xor
and
out
cmpsl
cmp
test
push
fmulp
pop
or
shl
dec
sbb
jbe
cmp
das
push
fidivrs
outsb
cmpsl
dec
es
lcall
aad
jb
dec
adc
cmp
int
pop
movsb
sahf
jbe
lcall
nop
outsb
lds
sbb
outsl
mov
mov
sub
adc
adc
mov
pop
inc
mov
mov
cltd
mov
adc
push
cld
or
aad
in
mov
cwtl
sub
inc
stos
ja
das
and
fsts
xchg
inc
lahf
dec
ficoms
int
dec
xor
cmp
push
push
xchg
call
sub
jno
push
mov
or
mov
fcmovbe
mov
les
mov
insl
sbb
mov
mov
stos
push
jl
rol
and
shlb
sbb
lret
cltd
and
sbb
mov
gs
or
das
add
daa
daa
scas
stos
neg
orb
cmp
imul
adc
mov
js
xorl
dec
clc
inc
xor
push
xor
pop
movsb
xchg
and
add
xchg
jp
cmp
lret
test
jo
mov
push
xchg
ja
sbb
mov
pushf
mov
sahf
push
add
push
imul
mov
ret
pop
and
sahf
and
outsb
sbb
in
inc
xor
mov
cmp
xchg
nop
inc
mov
cmp
push
dec
call
xchg
loope
mov
cltd
cmpxchg
rep
lods
push
pop
xchg
lods
rorl
jbe
ss
enter
cmp
cli
mov
inc
sbbl
sub
inc
jmp
xchg
stc
xor
adc
adc
cmp
sbb
sbb
sbb
pop
call
xchg
mov
cwtl
push
sarl
add
mov
or
andb
pusha
add
out
mov
call
sub
mov
mov
sub
cmp
dec
or
jbe
mov
fnstenv
adc
and
mov
cmc
add
mov
add
add
dec
lcall
pop
mov
sbb
popa
adc
pop
mov
push
mov
cmp
iret
adc
jle
pop
pushf
adc
xchg
inc
mov
mov
inc
rolb
xor
jecxz
sub
and
outsb
inc
mov
mov
out
adc
repz
push
std
mov
les
or
sarb
fucomi
iret
outsl
insb
push
int3
fdivrs
sub
movsb
es
and
pop
jg
inc
ja
and
movsb
jl
jns
fimull
adc
sub
sti
cmp
insb
arpl
hlt
xorl
imul
inc
jbe
aas
sbb
orl
cmp
add
cs
ret
stos
fnstcw
add
into
cmc
daa
xchg
in
leave
decb
aas
sbb
or
loop
mov
in
movsl
jg
mov
adc
dec
pusha
jne
add
hlt
xchg
mov
test
xchg
movsw
jno
sub
mov
xor
aas
aam
mov
add
jnp
mov
fwait
sti
ja
xor
dec
push
outsl
call
int3
repnz
inc
loop
ss
dec
js
jmp
sub
cmp
dec
stc
and
pop
out
mov
ret
inc
mov
push
xor
aaa
push
jle
sbb
add
loope
lret
test
xchg
fcompp
mov
jnp
gs
xchg
ljmp
and
xchg
lret
gs
or
xchg
les
or
and
jb
sub
cmp
dec
cs
push
and
mov
imul
divb
lock
inc
xchg
pop
cmp
testl
inc
fiadds
mov
dec
pop
scas
mov
mov
or
cmp
sbb
sub
inc
mov
sub
pusha
or
xchg
aaa
arpl
adc
shrl
pop
test
fcomip
hlt
xchg
test
xchg
loopne
push
sahf
xlat
aam
cmpsb
pop
addl
popa
ja
push
js
and
lret
in
outsl
or
xor
cmp
sbb
fcmovne
jle
ret
pop
lock
jg
shll
jb
jns
rcrl
lods
data16
icebp
pop
hlt
dec
dec
mov
sbb
xchg
push
call
pop
lods
pop
mov
mov
sbb
sarb
adc
sub
cmp
xchg
or
or
and
dec
jmp
inc
adc
int3
adc
mov
daa
in
in
push
repnz
xchg
dec
jl
aaa
mul
andl
jnp
lods
mov
lret
pop
or
jae
mov
insl
dec
inc
pop
and
sti
inc
mov
stos
mov
pop
sub
add
inc
sub
ret
lds
roll
mov
or
add
sti
and
test
push
in
int
negl
cltd
popa
push
sub
push
aas
clc
sbb
outsb
sbb
xor
or
and
inc
iret
in
imul
out
scas
bound
fwait
ja
push
push
push
sahf
sbbb
jl
lds
ret
outsl
ja
jo
es
mov
clc
stos
fimull
repz
setbe
movsb
aam
or
pushf
aam
shlb
jecxz
lock
or
ret
pop
dec
lods
repz
xchg
xchg
adc
pop
loope
or
sub
aad
adc
aad
push
dec
add
or
imul
ljmp
fiaddl
shr
sti
mov
pop
sbb
mov
dec
adc
sbb
pushf
and
push
sub
pop
pop
xchg
adc
icebp
mov
push
add
int
inc
mov
inc
pop
mov
leave
pop
sbb
iret
xchg
mov
ljmp
xor
scas
add
mov
pop
xor
dec
movsb
xor
lods
movsl
or
inc
fsubs
dec
dec
xlat
xor
push
roll
mov
xor
xchg
insb
lcall
enter
sbb
dec
lcall
gs
cmp
loop
rorl
je
sbb
test
fbstp
scas
in
mov
jp
movntq
scas
test
mov
into
scas
mov
adc
jecxz
test
vpxor
xchg
sub
inc
insb
dec
cli
popa
xchg
xchg
cltd
xor
sub
pop
mov
rclb
mov
xchg
iret
outsb
or
dec
imul
mov
stc
dec
cmp
cs
mov
sbb
jg
xor
out
xchg
push
orl
adc
and
sbb
inc
dec
sbb
lcall
aad
push
fidivl
pusha
and
xchg
jle
mov
inc
and
lahf
or
add
mov
shll
jae
xor
sbb
jbe
and
add
mov
or
pop
jns
addr16
xor
test
xor
mov
cmp
nop
push
and
pop
push
mov
jno
dec
mov
jb
daa
or
pop
push
insl
icebp
test
mov
push
sub
xchg
and
sahf
shlb
mov
sub
adc
movl
cli
pop
imul
shr
pushf
das
jb
adc
fisubl
or
mov
jge
mov
inc
bound
xor
sti
push
mov
pop
or
cld
aad
notl
push
clc
pushf
int3
addb
push
sbb
add
mov
mov
sbb
xlat
popf
sub
fcompl
mov
pusha
daa
enter
jg
out
jl
inc
ret
fnstcw
leave
add
stos
cpuid
lret
fstl
mov
fiadds
shrl
mov
stos
push
sub
stc
xchg
inc
sti
je
jmp
push
in
inc
and
mov
push
push
cmp
jno
xchg
jmp
xor
adc
pmulhuw
xchg
inc
push
into
lcall
cmp
push
sub
add
jl
jp
sub
add
sub
ss
test
dec
xor
out
in
ror
sbb
loopne
in
adc
movsb
pop
into
sbb
push
dec
dec
pop
in
xor
lds
aam
dec
lret
push
pop
or
fmull
mov
sar
jmp
push
insb
fsubp
sub
test
jbe
adc
ljmp
xchg
and
mov
add
mov
pusha
xchg
cmpsb
cs
aam
bound
mov
js
pop
clc
stos
mov
pop
std
shl
xor
dec
adc
mov
je
int
add
lret
lods
rclb
cmp
xchg
cmp
cmp
pop
jp
flds
popf
push
mov
lea
iret
lahf
mov
push
mov
inc
popa
jmp
js
daa
in
dec
mov
nop
mov
loopne
enter
sbb
lock
and
stos
arpl
hlt
fcmovb
arpl
dec
loop
inc
and
adc
insb
out
fisubrs
inc
rcrl
inc
dec
loop
dec
adc
xor
mov
push
insb
aaa
mov
cli
sub
sub
sbb
mov
fadd
xlat
xor
mov
jbe
test
adc
pop
loopne
xor
sbb
mov
in
loope
mov
sbb
cmpsb
call
xchg
dec
daa
jge
xchg
pop
scas
or
xchg
std
xor
cmp
pop
dec
or
subl
loopne
pop
clc
xlat
andb
mov
inc
loopne
xchg
out
push
fbstp
pop
dec
push
into
lret
add
xlat
push
dec
mov
inc
cwtl
xor
fnstenv
lahf
mov
cmp
and
inc
shll
mov
cmp
pop
cmc
mov
mov
sbb
aas
mov
push
mov
xchg
push
mov
pop
mov
lea
mov
fnsave
inc
repnz
gs
mov
fiadds
lods
mov
xor
lods
je
dec
inc
mov
push
mov
dec
mov
mov
mov
aam
xchg
fs
vunpckhps
adc
mov
mov
or
loopne
xchg
mov
sub
movsb
push
jle
sti
jbe
add
cmp
jbe
ja
mov
adc
out
adc
ret
in
xor
mull
pop
xchg
sub
sub
push
loop
imul
loopne
or
sbb
pop
add
movsl
dec
rorb
pop
xlat
imul
push
ds
xor
dec
out
hlt
jecxz
pusha
and
jb
jae
outsb
fwait
or
adc
xor
ficoml
scas
aam
mov
mov
adc
or
fistl
mov
push
xchg
cmp
repz
push
dec
cs
bound
clc
leave
lock
out
icebp
notl
jns
and
xlat
mov
pop
lcall
call
outsl
scas
mov
pop
fisttpl
cmp
hlt
jmp
leave
shlb
sub
pop
xor
out
cld
fisubl
dec
adc
or
std
mov
jno
mov
pop
movsl
xor
pushl
lods
add
inc
jno
xchg
pop
push
jmp
cmp
pop
and
cltd
stos
fisubl
jg
jmp
mov
das
ror
scas
gs
push
insl
outsb
mov
aaa
jb
xchg
cmp
pop
jge
push
gs
mov
addr16
cld
adc
dec
lods
adc
jns
test
cs
call
sbb
sbb
test
stos
aaa
popf
imul
pop
into
cmpsl
outsb
rcrb
mov
dec
xchg
pop
and
popl
sub
or
jae
lahf
mov
jp
mov
xor
dec
imul
mov
fmull
repnz
lods
subb
pop
jecxz
std
xor
pop
jns
or
neg
bound
pop
pop
mov
mov
andl
pop
lret
jne
dec
jno
frstor
insb
jbe
aaa
and
outsl
mov
dec
sbbb
push
inc
fsts
xchg
pop
addr16
pop
dec
aam
pop
int3
ja
adc
jecxz
lods
cli
push
enter
sub
jl
jge
cmpsl
push
cmp
outsb
xchg
iret
mov
push
addb
mov
sarb
enter
ficompl
bound
adc
add
jne
ja
ret
sbbb
jae
xor
mov
cmp
rorl
out
andl
pop
scas
cmp
jb
jae
xchg
jbe
in
enter
push
mov
mov
andb
subl
aaa
out
adc
sub
adc
shrl
pop
aam
stos
jo
and
loop
fistl
lea
or
aad
push
dec
das
mov
sbb
push
int
popf
idivl
jbe
and
xchg
xor
add
out
sbb
mov
jp
jl
inc
mov
jno
sub
insl
aam
rcrb
jmp
sub
cld
push
inc
pop
push
xchg
inc
cmp
cmp
cmp
cmp
pusha
pop
mov
pop
cmc
ja
sub
js
mov
push
data16
sub
mov
jmp
lret
sbb
testl
in
jne
jb
pop
enter
loope
lds
jg
out
xchg
xor
fnstcw
push
rorb
xorb
mov
adc
flds
fildl
push
xor
or
pusha
mov
xchg
jge
mov
fldl
lret
pop
mov
pop
sbb
pop
dec
pop
pop
mov
mov
int3
inc
xchg
aas
dec
and
imul
xor
outsl
out
or
mov
test
mov
jo
mulb
iret
xor
add
fidivrl
inc
pop
push
jmp
scas
imul
sub
lret
pop
jge
shll
in
pop
mov
repnz
int3
mov
or
stos
sub
pop
mov
add
mov
out
pop
rcl
stos
arpl
cmp
jge
cli
xor
and
pushf
out
xlat
mov
xchg
rorb
mov
je
ret
les
xchg
sub
dec
fiaddl
icebp
popf
mov
sub
push
stos
nop
fwait
stos
jl
nop
pop
fistpll
jl
mov
xchg
add
movsl
movsb
divb
adc
out
xchg
inc
mov
jne
sbb
test
out
push
mov
nop
cld
inc
dec
fcmovnb
jae
dec
and
cmpsl
pop
flds
or
jg
dec
ljmp
dec
movsl
inc
lock
pop
loopne
sbb
xor
jo
adc
sbb
or
pop
rcrl
cmp
and
sbb
pusha
shr
inc
add
idiv
mov
cs
test
bound
push
cmp
mov
and
mov
pusha
xchg
ret
pop
dec
cltd
fmuls
xchg
nop
jle
sub
or
rorb
out
shrl
aad
outsb
out
mov
sbb
xchg
mov
lea
add
fs
or
testl
fstpt
pop
xchg
mov
sbb
sub
inc
adc
std
int3
mov
mov
cmpl
cli
into
pop
sub
sbb
data16
lret
sub
cmc
cwtl
jle
push
cmp
sbb
add
imul
shlb
cwtl
mov
inc
insb
push
cmpl
inc
add
mov
jg
mov
out
nop
cmp
pop
pop
int
jg
adc
add
insb
sub
jne
fiaddl
xchg
loope
mov
push
fbstp
sti
insb
push
std
mov
xorl
out
xor
stos
or
cld
sub
daa
popa
addr16
rolb
dec
sub
xor
inc
mov
sbb
cmc
pop
sub
movsl
xchg
cmpsb
mov
enter
cld
push
mov
dec
nop
dec
fs
jae
ljmp
cltd
xor
aaa
sbb
ret
test
fs
dec
ljmp
out
daa
mov
xor
pushf
sti
xor
cld
mov
xchg
add
aaa
push
xor
jl
mov
lods
dec
dec
shrb
test
sub
les
shlb
pushf
mov
sub
mov
xor
jmp
cmp
jle
pusha
mov
hlt
mov
cmc
fwait
mov
sub
add
rcll
jne
xchg
mov
ss
scas
popa
or
adc
jo
cmp
mov
mov
cmc
dec
scas
or
push
inc
hlt
jle
stos
stc
lods
cwtl
adc
cmpsb
fists
sbb
stc
repnz
jecxz
pop
xor
xor
sbb
sub
xor
xchg
fiadds
inc
filds
xor
sbb
loopne
out
inc
in
jmp
js
push
cs
or
lock
or
adc
lods
push
push
aam
inc
inc
push
push
adc
aas
lahf
sub
loop
ret
arpl
lock
out
rep
sub
orl
in
in
popf
scas
imul
aad
movsb
lcall
mov
inc
lods
mov
push
rcrb
lahf
out
push
xor
push
dec
adc
es
push
jnp
or
mov
xchg
add
lock
push
pop
out
in
leave
jmp
out
fisubrs
fcompl
int
xchg
outsb
push
lods
fs
xchg
lds
cs
lret
scas
xchg
fwait
or
loopne
inc
popf
sbb
inc
mov
jg
xchg
jb
cltd
and
push
xchg
adc
leave
sbb
std
daa
sti
adc
gs
jmp
data16
push
mov
push
pop
int3
mov
xchg
xchg
pusha
pop
jecxz
inc
mov
bound
popa
outsl
iret
add
xor
stos
xchg
hlt
aas
sub
ficoml
push
pop
int
xor
jmp
popl
mov
cltd
mov
pop
mov
sbb
mov
jl
movsb
mov
in
cmp
shrl
insb
inc
mov
adc
test
ljmp
loop
fstpl
add
or
mov
mov
jnp
rcll
test
cmp
test
rcrb
cmp
inc
dec
mov
push
add
mov
stc
add
add
out
mov
loope
incb
cmp
movsb
add
mov
bound
sub
aam
mov
std
in
sbb
add
inc
push
loop
jmp
xor
push
jle
dec
cmp
mov
adc
cmc
xor
loope
aad
add
ret
mov
jmp
pop
xor
insl
and
pop
insl
call
popf
dec
push
cmc
hlt
jnp
add
or
or
pop
pop
mov
lods
dec
in
cmp
fisubrl
lods
popa
fidivs
xchg
cmc
in
lock
dec
sub
int
arpl
dec
lahf
ficoms
mov
popa
js
and
inc
mov
fidivl
adc
scas
cmp
movsb
loop
fcompl
or
daa
add
cwtl
sub
enter
frstor
mov
xorl
cld
lods
sub
dec
imul
mov
pop
pop
mov
jmp
imulb
xorb
push
jnp
pop
scas
rcll
in
mov
sti
push
pop
push
ds
and
sub
cwtl
dec
mov
lret
adc
xlat
mov
outsl
loope
stos
mov
xchg
stos
fldenv
stos
pop
mov
dec
xchg
jge
enter
scas
aas
xchg
cmc
pop
test
in
push
mov
add
fisubl
out
xchg
cmp
or
jmp
sub
xlat
testl
xor
cwtl
nop
xchg
into
test
sub
adc
and
mov
dec
in
mov
bound
loop
out
rcr
loopne
and
add
dec
mov
jo
mov
mov
jecxz
test
loope
movsl
adc
frstor
int3
lret
movsb
mov
outsb
sub
ds
mov
ret
loope,pn
jns
mov
sbb
dec
inc
mov
sub
cmc
js
out
int3
push
sbb
pop
pop
xchg
add
stos
sbb
and
ret
into
rcr
popa
sti
inc
mov
adc
xchg
lods
stos
movl
inc
pusha
shll
xchg
xchg
mov
adc
test
fisttps
cmc
dec
inc
pop
test
inc
xor
ret
data16
mov
sarl
stos
pop
dec
lcall
and
push
pop
loope
gs
jbe
out
ficoms
xor
fdivrs
test
cltd
popf
jb
mov
divl
pusha
movb
sbb
std
add
inc
lock
push
cmc
les
push
fdivl
cli
pop
xorb
insl
std
push
sti
jb
das
jge
fbstp
push
stos
js
addr16
cmpsl
sbb
icebp
lods
adc
dec
daa
fs
lock
bound
pop
insb
std
sbb
pop
mov
mov
or
fcmovu
mov
enter
ja
xchg
sbb
aas
push
in
push
push
leave
xor
gs
scas
add
jp
mov
add
jp
jae
adc
push
inc
or
vcvtpd2dqy
ja
mov
cmc
test
cmp
les
iret
aad
adc
mov
call
ja
add
adc
cmp
and
test
int3
pop
mov
out
sbb
pop
inc
cmp
and
lds
hlt
or
mov
stc
inc
shl
imul
xor
imul
icebp
in
in
aad
ss
imul
sub
jle
cld
xchg
mov
sub
or
es
cmp
out
dec
sbbl
xchg
jnp
ficomps
mov
cltd
jnp
aas
out
rcll
popa
mov
fdivs
push
into
add
and
add
xor
rorb
push
loop
add
sbb
sub
adc
xor
outsb
sub
loopne
adc
push
cmp
rcrl
mov
jae
jnp
cmp
adc
sti
push
mov
pop
jnp
mov
xchg
jbe
outsl
cmp
mov
loopne
mov
loop
xor
mov
dec
sbb
and
pop
xchg
shlb
fsubl
cli
cmpb
test
rol
imul
sbb
dec
arpl
sub
mulb
xchg
sub
jb,pn
jne
test
xchg
mov
sbb
insl
js
add
cs
test
out
std
add
mov
jge
outsb
in
pusha
in
imul
loopne
outsl
add
jno
xor
addr16
pop
xor
rclb
test
pop
stos
fmull
mov
add
addr16
popa
nop
lret
xchg
call
int
fcmovu
scas
insb
cmp
gs
test
jns
and
movl
xchg
outsl
sub
int
movsb
xchg
mov
or
in
push
dec
dec
dec
mov
iret
jmp
repz
pop
rcrb
dec
xor
je
mov
insl
fucom
aaa
cmp
jae
jge
in
int3
push
inc
mov
sbb
ret
pop
push
sbb
test
xchg
mov
cmp
jns
aaa
lds
dec
and
stos
push
clc
mov
cwtl
pmuludq
jae
mov
sub
jle
mov
xchg
xchg
cmp
out
pop
inc
repz
mov
int
mov
pop
xor
aas
out
jno
arpl
push
xchg
xor
dec
push
push
loop
cwtl
jmp
mov
adc
nop
mov
xlat
pushf
adc
mov
cld
lods
sub
jecxz
jl
es
out
xor
fldenv
lret
imul
inc
out
pushf
push
push
xor
sarb
mov
add
add
sub
mov
call
scas
fdivrl
movsl
rorb
lods
pop
mov
repnz
jmp
shll
das
jo,pt
dec
mov
push
ja
pushf
add
and
xchg
repz
jne
dec
cmp
int
jae
xlat
xchg
fwait
cmp
into
adc
test
or
adc
sbb
insb
popa
sub
insl
cs
mov
mov
outsb
rorb
daa
idivl
test
inc
int
mov
jns
xchg
jmp
cld
xchg
stc
fsubr
pusha
popa
out
xor
jo
cmp
mov
aam
nop
pop
mov
mov
fsubrl
call
mov
dec
pop
pop
repnz
daa
mov
cmp
and
mov
fmulp
pop
repz
mov
cltd
mov
ret
lcall
adc
scas
xlat
dec
shll
rorl
clc
and
loopne
in
dec
test
sbb
rorb
rcr
js
iret
icebp
int
cmp
cmpsb
pushf
repnz
xor
jbe
pop
sbb
cli
cmp
dec
cltd
cmp
ja
push
mov
sti
adc
jo
and
out
jle
inc
and
cmpsl
xor
mov
jns
cwtl
sbb
inc
fistpl
out
outsb
xor
lods
stc
test
mov
js
testl
mov
rol
les
lods
addb
push
fstpt
stos
and
inc
inc
std
lret
jge
mov
movsb
into
insl
add
xor
mov
push
decb
bound
mov
pop
push
imulb
mov
pop
jb
roll
mov
inc
push
ds
leave
addr16
faddp
pop
inc
loope
mov
add
fcompl
sbbb
fists
out
mov
jnp
lea
outsl
lret
hlt
and
jne
aad
cli
adc
stos
sub
jl
xchg
fwait
out
pop
aas
into
push
sub
jo
dec
stos
test
lahf
cmc
js
in
jle
pusha
cmpsl
scas
clc
jge
imul
sbb
mov
ds
lret
loop
or
push
xor
mov
lret
sbb
jbe
adc
push
arpl
adcl
fbld
repz
lret
sub
cmpsl
inc
ja
push
pop
insl
fcmovu
pop
clc
je
dec
movsl
xor
ret
sub
ss
inc
repnz
mov
and
xor
mov
test
subl
sahf
cwtl
push
pushf
push
dec
add
shll
jle
sbb
and
in
dec
std
lock
ds
jno
ds
fimull
jo
adc
pop
setnp
loope
mov
adc
movsl
mov
add
add
mov
or
jno
enter
les
out
mov
addr16
in
out
test
mov
xor
dec
lahf
jo
jge
mov
pop
lret
sub
or
push
sbb
stos
in
and
xchg
insb
pusha
aam
mov
fwait
or
mov
inc
dec
push
jp
cmp
in
sub
or
out
imull
es
sub
jge
scas
fwait
mov
cltd
std
xchg
fwait
dec
mov
stos
out
movsl
lahf
lahf
inc
cmp
and
in
pushw
inc
repz
pop
mov
out
icebp
cmpsb
rcll
push
and
xchg
push
sub
fnstenv
jle
dec
sahf
lods
inc
inc
daa
stc
leave
inc
push
shlb
sahf
push
mov
xchg
inc
and
out
xchg
and
lods
arpl
inc
push
dec
popa
sahf
fnstsw
mov
pop
outsl
mov
imul
adc
out
arpl
in
gs
dec
xor
mov
sbb
push
jo
int3
iret
sbb
repnz
enter
xchg
sahf
iret
inc
shl
shlb
jnp
jne
xchg
jne
cld
xor
imul
ret
addr16
or
fisttps
adc
pop
xor
pop
out
bound
into
push
jle
int3
mov
ljmp
mov
jb
lahf
push
movsl
inc
and
or
xor
cmpsb
mov
push
jbe
mov
or
mov
aam
mov
inc
ret
mov
fldenv
fistpl
mov
pop
imul
outsb
xchg
fbld
or
inc
and
dec
adc
js
popa
pushf
in
push
inc
in
jnp
or
andl
inc
push
sbb
addl
test
insb
add
fwait
and
add
push
pextrw
mov
push
dec
leave
nop
jno
lahf
loop
lods
ds
or
rcr
cmc
int3
push
out
adc
inc
mov
push
jg
std
lret
test
dec
mov
nop
jbe
and
lret
subl
into
sbb
arpl
jmp
inc
scas
pand
mov
sbb
jp
aas
mov
les
mov
outsl
mov
je
jmp
in
mov
pop
adc
sub
int
out
adc
pusha
js
jbe
rcrl
jnp
pop
or
les
xchg
es
sub
out
cmp
mov
mov
xor
lret
bound
lea
addr16
mov
inc
mov
aam
xchg
cs
loopne
mov
cmp
fs
adc
inc
push
cwtl
mov
jp
push
aaa
popa
adc
test
inc
fdivrp
mov
add
cltd
leave
inc
repnz
lahf
xchg
xchg
sbb
out
sbbb
divb
test
sbb
fbld
xor
out
xchg
ficompl
adc
mov
pop
jl
or
ret
out
push
sub
lret
lods
mov
and
mov
ret
push
fcomi
test
outsb
dec
popf
push
jl
imul
popf
add
xchg
xor
adc
sbb
push
jno
cmpsb
loopne
push
cmp
repz
sub
cli
in
xor
movsl
pop
sub
mov
jcxz
pop
sub
addl
fsubl
xlat
adc
inc
sbb
data16
jo
or
das
pushf
xlat
cmp
das
int
mov
xor
cmp
xchg
in
or
push
dec
push
jle
or
shrb
xchg
in
shrb
addr16
mov
and
notb
inc
test
scas
push
stc
jle
sub
cwtl
add
sbb
or
rcr
push
jmp
xorl
dec
repnz
pop
sub
les
cmp
pushf
xchg
xor
scas
into
sarl
push
push
push
cs
pop
ret
dec
pusha
inc
inc
inc
lcall
cmp
aaa
jno
rcrl
das
scas
push
cwtl
seto
jne
cmpsl
push
stc
xchg
jle
or
jl,pt
push
out
repz
xor
ds
xor
push
int
mov
cld
stos
and
enter
cmpsl
js
push
mov
push
fdivrs
pop
dec
pop
mov
daa
add
jmp
push
dec
mov
sarb
js
add
ret
dec
pop
hlt
popf
push
bound
mov
pop
repnz
sbb
push
dec
dec
xchg
lret
cmp
std
loopne
sub
mov
mov
enter
dec
add
xor
iret
lock
push
insl
adc
sub
mov
icebp
gs
bound
js
std
xchg
ret
mov
xchg
adc
xchg
cmp
and
mov
or
mov
xchg
outsl
mov
pop
xor
xor
sbb
jecxz
movsl
je
xlat
jle
cld
data16
pop
mov
orb
insb
addr16
and
or
cmpsb
inc
add
mov
jmp
mov
ds
mov
mov
add
in
jg
pop
push
jae
push
ficoml
fmull
fsubrl
fstpl
xchg
dec
jns
jmp
daa
mov
lcall
jle
outsb
mov
adc
out
scas
push
fcomp
and
xor
sub
xor
or
xlat
les
cmp
jne
icebp
outsl
rcrb
leave
in
pop
adc
stc
sti
mov
cmp
and
addr16
or
popa
dec
sub
or
xchg
mov
dec
cmp
das
sub
clc
xchg
mov
fcomp
popl
test
loopne
imul
and
inc
insb
adc
push
icebp
mov
push
jae
rorl
ljmp
enter
mov
dec
sub
dec
js
adc
orb
je
add
stc
jae
pop
je
mov
cli
dec
loope
xor
add
js
fldenvs
inc
in
clc
sbb
pusha
jp
mov
addr16
sub
jbe
insb
mov
and
inc
push
fcmovnb
adc
test
push
mov
xchg
movsl
sbb
test
jne
push
push
loop
test
shlb
pop
lcall
and
fsubrs
stc
jmp
out
aaa
mov
or
cmp
mov
jbe
add
daa
cli
and
fdiv
leave
in
pop
mov
enter
cmpsb
shrl
mov
stc
enter
mov
out
test
in
jge
pop
bound
jno
adc
push
add
pop
pop
lret
xchg
dec
mov
jo
test
aaa
gs
push
int3
cs
gs
unpcklps
lds
adc
stos
sub
fs
and
cmp
aam
cmp
pop
adc
pop
pop
pop
std
push
cmp
push
pop
pushl
push
inc
mov
and
insl
cmc
shl
mov
jnp
mov
cmpsl
lds
bound
fucomi
and
pop
xlat
mov
sub
xchg
ss
mov
cmp
mov
push
pop
push
xlat
outsl
add
sub
xor
enter
xchg
pop
mov
push
dec
adc
lock
mov
jp
mov
frstor
xchg
jne
and
out
xor
add
ret
xchg
int
push
jno
jp
aas
shrb
sub
je
xchg
cmp
cmpsl
mov
mov
and
test
mov
imul
mov
add
dec
mov
mov
pop
stos
nop/reserved
xor
hlt
mov
addr16
inc
enter
int
and
mov
sbbb
mov
enter
out
inc
outsb
mov
loopne
mov
jae
and
stc
orb
push
clc
ret
daa
mov
jae
add
dec
cmp
fmul
mov
ja
into
pop
sbb
pop
mov
div
push
adc
pop
imul
or
fwait
iret
lea
punpckhbw
imul
jmp
repnz
mov
ss
jbe
movsl
cs
or
out
inc
xchg
xchg
xchg
mov
stos
jmp
pop
fstpt
mov
gs
js
mov
mov
push
lods
cwtl
nop
out
loope
xor
or
pusha
sub
push
hlt
ss
sbb
imulb
push
sbb
jbe
dec
daa
mov
xor
push
or
je
ret
arpl
add
sub
sahf
xlat
jbe
clc
je
xor
inc
bound
sarl
ret
cltd
movsl
jb
jae
movsl
add
cmp
test
push
lock
stos
xor
stos
jp
and
je
ds
popf
leave
push
and
out
stos
sub
in
insb
mov
call
jecxz
xor
inc
rcrb
fsts
ror
pop
int
lret
pop
sti
mov
or
outsl
rolb
or
dec
add
cmp
roll
mov
in
loope
idivl
shll
sbb
mov
xchg
andb
test
sarl
shlb
xchg
movsb
lcall
push
aad
push
sub
repnz
and
and
ljmp
add
lcall
jmp
cmpsl
jmp
or
jge
cmpsb
dec
sub
int3
mov
dec
cmp
cmp
test
xor
movsl
pop
out
ja
adc
pop
cmp
shll
test
arpl
cmp
sarl
sbb
ljmp
daa
icebp
imul
jmp
std
dec
jmp
in
cld
fdivp
in
pop
mov
add
int3
je
sbb
int3
cmp
cmp
xchg
cltd
cmp
or
pop
rorb
sub
andb
push
clc
nop
frstor
mov
or
sahf
push
xor
mov
lods
imul
adc
pop
xchg
bound
cmp
xor
dec
push
fstpl
aam
fstpl
ss
nop
vphadduwq
sbb
and
imul
push
xchg
mov
add
sub
setl
lds
sarl
cli
lret
push
or
sbb
cmp
push
xchg
mov
inc
gs
mov
and
pop
andl
shlb
add
mov
mov
mov
push
test
lea
xchg
jns
or
stos
mov
stos
cmp
psllq
sub
sbb
fists
xor
jns
adc
scas
cmp
mov
addl
daa
clc
bound
cmp
out
and
pop
shll
xchg
jb
dec
and
lcall
call
iret
jbe
sub
cld
mov
sub
or
adc
sub
add
mov
pusha
nop
cmpsb
mov
sub
or
les
test
lea
lret
add
jo
jle
sub
xor
fmul
insb
jne
jo
scas
cltd
loopne
and
mov
imul
leave
flds
aam
std
cmp
jmp
in
ret
jo
pop
fimull
cmp
cmp
dec
xor
mov
jns
gs
mov
pop
sub
in
movsb
or
and
nop
leave
imul
lods
ret
test
out
call
add
xchg
or
add
mov
sub
shlb
shll
jecxz
bound
movsl
add
mov
out
sahf
not
outsb
mov
jg
test
rcll
mov
mov
xchg
jb
test
add
xchg
and
adc
es
mov
ss
popa
sahf
fcom
cmpsl
mov
loopne
xchg
and
insl
sbb
stos
cli
push
xor
sbb
into
push
mov
int
test
pop
push
mov
xlat
pop
xchg
aam
add
daa
inc
out
es
into
mov
pop
mov
xor
stos
movsl
cmpsl
add
fwait
sub
lret
push
and
push
pop
mov
bswap
inc
sub
dec
xchg
push
mov
test
adc
in
ljmp
stc
fisubs
mov
inc
mov
fdivs
push
xor
aas
ficoms
adc
iret
sahf
dec
insb
call
jno
cmpsb
adcb
rolb
or
mov
sbb
sbbb
inc
xchg
sub
mov
aas
test
add
loope
dec
add
cmc
lret
or
or
cld
cmp
pop
jl
pop
gs
clc
cmpsl
jl
and
and
mov
jecxz
jno
aad
push
outsb
mov
out
or
fnstenv
fcmovbe
pop
movsb
adc
dec
push
loope
pushf
fldenv
insl
scas
dec
mov
out
mov
insl
jnp
jno
lock
mov
push
jmp
sub
jl
dec
cmp
lret
int
int3
and
add
xchg
xchg
rcr
push
enter
sbb
nop
mov
inc
xor
cmp
xor
mov
aad
shlb
out
xor
xchg
fnstenv
cmp
and
int3
xchg
sub
sbb
popl
hlt
jbe
imul
xbegin
test
xor
mov
xchg
in
fcompl
data16
inc
mov
in
pop
sbb
or
ja
mov
or
daa
mov
dec
stos
jbe
pop
dec
aaa
or
sub
xchg
jb
xor
dec
scas
les
mov
out
jb
mov
std
frstor
insl
aad
or
mov
out
imul
lret
inc
scas
lds
or
mov
cmp
mov
mov
xchg
add
rcll
mov
inc
int3
jb
mov
jb
push
sub
je
jg
dec
or
push
inc
push
lea
and
pushf
and
stc
test
jnp
pop
mov
jb,pt
stc
push
jecxz
cmp
mov
lods
xchg
arpl
pop
insb
pop
in
inc
mov
inc
mov
xor
sub
mov
lahf
jbe
mov
jle
push
rcll
cld
js
mov
jl
repnz
jl
ret
shl
push
das
cmc
popa
repz
out
jg
ficomps
rorl
and
add
lcall
mov
jne
push
call
jecxz
add
out
sbb
mov
cmp
fmull
push
inc
add
pop
sbb
cmpsb
push
xor
xchg
xchg
or
adc
push
xchg
fnstenv
push
xor
jmp
fsubp
mov
push
mov
std
mov
sarb
pop
pop
dec
dec
inc
ret
bswap
iret
xchg
cmpsb
es
push
jmp
inc
jge
xor
cmp
jge
cmpsl
xchg
sub
cmpsb
mov
adcl
cmp
sti
mov
lods
or
test
lret
cmp
xor
push
mov
inc
sbb
cmp
xlat
loope
pop
sbb
xor
mov
andb
nop
xor
pop
add
jns
mov
pop
test
cwtl
or
iret
add
cltd
push
add
mull
adc
fimuls
sub
jg
or
jl
jo
mov
pop
push
insw
fisttpl
adc
ret
dec
push
mov
mov
lods
fldl
les
cs
aaa
and
and
xchg
stos
xor
lds
data16
adc
jl
push
add
orl
adc
dec
push
insb
push
rorl
pop
jecxz
mov
push
dec
fisubrs
adc
cld
subb
add
in
xorl
mov
movsb
mov
hlt
loopne
sti
inc
pop
mov
repz
aam
sub
rcrb
lahf
fsts
bound
loope
repnz
out
scas
add
pop
push
xchg
mov
js
cmp
pop
fstps
mov
pop
outsl
out
jo
lods
mov
pop
jae
arpl
fnstcw
lret
jbe
adc
cmc
nop
sub
inc
add
add
xor
js
movsb
iret
std
pushf
das
loop
roll
dec
outsb
test
sti
ret
movsb
push
in
pop
mov
arpl
scas
sbb
int3
clc
cs
mov
jmp
out
mov
and
mov
adc
jg
dec
call
mov
mov
cltd
jne
inc
fsubr
cmpsb
shl
jb
cmpsl
pop
fs
or
mov
sbb
fdivrs
push
sti
shrl
pop
xchg
int
xor
push
xchg
jle
add
fmuls
inc
orl
les
add
jmp
cmp
add
dec
adc
xor
lds
mov
arpl
hlt
inc
divb
mov
sbbl
mov
jne
cwtl
repz
movsb
orb
scas
adc
lods
pop
cmp
adc
mov
out
stc
sub
or
pop
push
pop
addr16
sub
jnp
sti
cltd
mov
je
fdivrl
xchg
mov
push
cmc
add
ret
mov
or
mull
sahf
test
push
fwait
ja
xchg
imul
inc
push
dec
sbb
into
push
xor
mov
loop
test
adc
out
ret
xchg
repz
xor
xchg
or
jl
jmp
fwait
clc
sub
jge
inc
out
lock
xor
pushf
test
stc
push
mov
icebp
inc
dec
loop
rol
add
push
or
jns
dec
orl
ret
outsl
pop
inc
and
int3
int
lods
fnstsw
mov
cmp
add
clc
cwtl
fs
lds
fwait
mov
movsl
dec
pop
mov
subl
xorl
mov
loop
dec
loop
je
jg
adc
fstps
jmp
test
fnstcw
cld
dec
ret
inc
push
cmp
in
lcall
shl
inc
testw
ret
cmp
push
scas
cmpsb
mov
xchg
xchg
loop
jmp
in
pop
outsl
and
mov
mov
pop
cmp
lods
push
jp
xor
ret
sub
hlt
mov
loop
and
mov
outsl
int3
add
pop
int
xlat
lods
cmpl
push
hlt
push
addl
mov
adc
pop
pop
rol
ss
mov
outsb
enter
loope
xchg
popl
pop
js
in
push
jne
sar
adc
out
ljmp
dec
fimuls
loopne
jmp
pop
pop
fnsetpm(287
out
gs
scas
xchg
lea
mov
lods
fistps
push
test
push
call
fistps
inc
and
sbb
or
movsb
mov
pop
js
or
cmp
mov
idivb
shr
notl
mov
inc
into
xchg
jno
jns
mov
int3
cmp
test
jbe
lret
fucomp
sti
negl
mov
loopne
mov
xchg
outsb
mov
jb
jl
daa
sub
sbbb
jb
or
decl
loope,pt
jbe
mov
mov
fs
push
sbb
jmp
sbb
jl
loope
xlat
aas
imul
inc
test
test
add
hlt
test
sub
xchg
movsb
ljmp
in
mov
add
fstps
sbb
fs
je
jl
sub
ds
gs
xchg
pop
jne
sub
sub
inc
adc
jecxz
dec
push
call
dec
cmpsl
push
jl
xor
dec
jno
push
roll
mov
gs
setae
jle
std
xlat
jb
test
enter
mov
movsl
and
pop
mov
and
pop
fs
and
or
xor
mov
and
inc
pop
jge
loop
adc
mov
fwait
sbbb
lret
rcrb
lahf
bound
add
test
loop
sub
xchg
xchg
aas
inc
sub
xor
movsl
jb
imul
xchg
rorl
lcall
js
jmp
or
sub
aad
or
iret
inc
push
dec
jg
mov
push
insb
pop
mov
or
lahf
testb
dec
push
sbb
popa
mov
gs
xor
mov
neg
xor
stc
data16
or
and
pop
lcall
sbb
lret
fidivl
xchg
push
pop
mov
and
adc
cmp
pusha
sub
xor
push
lock
insb
div
test
add
cmpsb
add
inc
cmp
popa
pop
fchs
popa
adc
pop
mov
loop
sub
xor
aad
cmp
test
jb
adc
test
push
pop
xor
sub
repnz
jl
lahf
push
mov
push
dec
sahf
adc
inc
cwtl
push
pop
test
adc
mov
adc
add
fiaddl
mov
shlb
xor
pusha
cmp
and
test
mov
adc
mov
popa
fmull
lods
cmp
xlat
popl
mov
push
mov
imul
roll
in
repnz
mov
icebp
pusha
popf
pop
push
push
dec
add
adc
mov
sub
xchg
mov
packssdw
dec
aad
lock
jge
fldenv
das
dec
push
inc
cmp
jl
shl
out
mov
popf
sti
and
clc
xor
cmp
ret
aad
xchg
sti
xchg
mov
fwait
push
dec
push
fwait
orb
dec
add
adc
ljmp
add
sbb
cli
dec
leavew
aas
cs
inc
mov
sub
push
rcr
push
lret
jne
or
sub
call
mov
arpl
mov
lods
sub
popa
dec
pop
lahf
xor
push
xchg
jge
fstps
push
insb
sub
aad
push
into
out
mov
sub
sbb
push
mov
aas
into
adc
xor
int
cmc
mov
out
xor
xorl
adc
test
bound
je
loope
cmp
fidivs
jno
mov
push
popf
lods
in
test
xchg
test
addr16
or
fcompl
out
jl
inc
insl
fstps
daa
aam
jno
adc
dec
mov
pop
cmp
imul
and
repz
stos
ds
cvtpi2ps
addr16
mov
and
cmp
adc
mov
xchg
dec
lret
aas
mov
xchg
xchg
insb
imul
dec
cmp
movsb
and
pushf
std
jl
push
xor
mov
int3
or
rclb
in
push
ret
add
lods
in
mov
fsubl
pop
lcall
cmp
adc
iret
cmp
adc
in
decl
mov
push
ds
movsl
fwait
mov
ret
xor
jne
cmp
sbb
movntq
out
mov
in
stc
mov
js
xorb
mov
xchg
cmpsl
sub
add
repz
mov
test
into
sub
icebp
sbb
gs
test
aas
cmp
jns
xor
pop
adc
push
sti
out
clc
pop
ds
jmp
aas
out
movsb
out
mul
pop
movsl
fldcw
or
lds
or
sbb
fbstp
mov
das
sarb
mov
gs
push
push
loop
or
mov
out
or
pop
lock
mov
mov
inc
imul
js
cmp
daa
xchg
sub
push
sub
xor
stos
push
je
les
sti
pop
sbb
xchg
les
lock
sub
inc
movsl
inc
and
jl
call
dec
sbb
jle
stos
fs
pop
or
mov
sbb
push
mov
xlat
pop
fisttpl
adc
or
jl
and
scas
dec
xor
mov
jae
aaa
jne
in
std
mov
ljmp
lret
push
adc
adc
into
test
popa
jno
cmp
aas
mov
int
frstor
cmpl
icebp
push
sub
arpl
sub
movsb
cli
cmp
adc
addl
jnp
rcll
out
push
or
cmp
cmp
jp
in
movl
jmp
mov
repnz
sub
lds
mov
dec
insl
jle
inc
imul
jo
cmp
stos
fwait
adc
sti
out
inc
mov
xchg
push
jecxz
jg
mov
in
imul
pop
in
dec
and
mov
or
shlb
scas
in
imul
add
nop
sar
push
into
add
shl
push
pop
nop
fidivl
outsb
icebp
jg
pusha
sub
cmp
jbe
sub
loope
dec
int
sar
cltd
mov
loop
jno
mov
mov
cmp
fistps
add
stos
stos
jno
mov
inc
jbe
cmp
push
mov
jbe
lahf
addl
push
aad
xchg
dec
pop
push
aas
lds
mov
faddp
add
cltd
clts
pusha
pop
in
mov
imul
loopne
xchg
ss
int3
lods
pop
ret
dec
cmp
xchg
push
mov
jns
das
icebp
mov
mov
cld
movsb
xchg
add
cmp
push
sbb
insb
xchg
jne
scas
lret
imul
or
jg
dec
shll
xchg
jecxz
aad
ret
rcll
inc
mov
sbbl
aad
inc
pop
push
jle
cltd
std
push
inc
and
js
adc
add
cld
add
test
lock
mov
lea
add
xor
or
imul
stos
aad
pop
inc
mov
push
cmp
out
inc
inc
fmull
sbb
xchg
cmp
aam
sub
cli
xor
cs
push
in
mov
sahf
test
mov
ja
clc
out
in
xchg
dec
mov
in
mov
push
pop
pop
neg
xchg
das
add
inc
jecxz
push
das
add
addr16
jae
sbb
fstps
arpl
pop
cmp
repz
jecxz
popf
ja
sbb
out
or
jle
and
aas
pop
dec
and
xchg
xor
sub
mov
aad
pop
subb
insl
mov
lret
jecxz
out
sub
shlb
dec
jbe
insb
ds
movsb
das
push
shrl
add
jle
adc
xchg
stos
daa
dec
bound
ljmp
jecxz
sub
mov
push
enter
fiaddl
pop
push
inc
push
cmp
ret
sbb
clc
jne
pop
xchg
aas
push
daa
push
mov
adc
in
xchg
loop
scas
ljmp
sbb
faddl
or
fidivl
jmp
cltd
cmp
lahf
bound
testl
out
js
loopne
stos
lahf
out
loope
das
sub
aam
jle
dec
aad
cs
sub
pop
inc
xor
insb
insl
pop
xchg
repz
mov
mov
pop
test
jg
sub
imul
push
mov
sbb
pop
add
repz
dec
lods
dec
jmp
icebp
and
jl
out
stc
pop
push
cmpl
cmp
sahf
sbb
int
mov
stos
lahf
xchg
sti
ds
loope
lods
ds
test
daa
pop
aaa
lahf
imul
sub
dec
xor
jnp
mov
inc
sub
movsb
adc
pop
pop
cld
cmpsl
ret
fcompl
rorl
and
inc
pop
icebp
xor
mov
stc
mov
scas
mov
adc
mov
mov
fadd
mov
fs
out
sti
inc
sbb
mov
xor
dec
xchg
xchg
cmp
iret
cld
mov
xor
push
aam
pop
push
test
mov
pop
jp
call
adcl
fists
pop
mov
dec
ja
and
or
clc
movsb
jg
add
cld
xor
xor
xchg
jno
aaa
mov
into
aas
mov
sub
sub
nop
das
clc
insl
aas
push
aas
jge
aad
jo
adc
insb
inc
inc
into
mov
ja
popa
push
testb
lods
aas
fcompl
repnz
inc
decl
fmull
icebp
mov
sbbl
or
and
mov
mov
push
push
dec
lds
ja
xor
pop
dec
push
scas
add
mov
lods
int
xchg
jmp
test
in
outsl
mov
lret
xor
int3
dec
fisubrl
rol
cmc
mov
das
cmp
sub
cli
iret
ljmp
scas
inc
push
stos
std
push
pusha
jo
mov
inc
sahf
mov
xchg
insb
inc
std
out
ds
fdivl
out
repnz
sbbb
mov
icebp
or
or
inc
sbb
clc
mov
dec
cmp
in
mov
push
lea
mov
xor
js
xchg
test
and
push
insl
out
fcmove
push
inc
sbb
jle
sbb
cmp
add
rcrl
cltd
fs
xor
xor
xor
fwait
sub
xor
dec
ss
pop
adc
pop
loop
fisubrl
aam
nop
add
add
fcomip
mov
mov
adc
test
lcall
roll
sbb
mov
mov
adc
jns
mov
jg
ja
push
fimuls
mov
cmp
leave
mov
and
sti
mov
sti
out
xor
add
xor
pop
mov
and
or
mov
pop
stos
or
sub
subl
movsb
cld
sbb
xchg
fstl
fisttpl
cli
dec
cltd
movsl
pop
popl
arpl
lock
addr16
sahf
cmp
push
data16
or
push
and
cmpsb
hlt
jmp
stc
mov
sub
test
aaa
loope
decb
dec
add
lods
popa
pop
enter
cmp
xor
subb
mov
shl
aaa
inc
xor
cwtl
adc
add
gs
fdiv
cmp
mov
jno
in
inc
loop
pop
jle
mov
inc
push
push
inc
into
or
outsl
lahf
or
push
aas
icebp
or
orb
mov
mov
push
nop
punpckldq
out
cmp
pop
xchg
mov
sahf
pop
cmp
add
cmpsb
out
jmp
push
inc
lahf
lret
or
andl
jno
aad
arpl
xchg
imul
outsl
outsb
mov
mov
mov
mov
push
repnz
fimull
dec
ss
fs
lret
insl
push
inc
lret
lods
pusha
mov
push
ja
sbb
loopne
les
jmp
cmp
imul
rcll
mov
out
push
call
adc
mov
jl
jmp
fsubrp
mov
mov
sub
jnp
lock
scas
push
push
sbb
ret
xor
jmp
inc
insl
icebp
cmp
test
jecxz
mov
test
mov
in
das
push
ss
mov
cmp
mov
sbb
js
adc
in
scas
jae
ficompl
mov
jo
jo
mov
sub
cmpb
test
pushf
in
andl
shlb
dec
pop
xor
xor
cs
test
pop
jno
nop
test
nop
jg
fs
mov
add
mov
jnp
xchg
mov
add
addr16
pop
iret
idivb
xchg
jge
inc
jns
and
fnstsw
mov
add
icebp
or
xor
dec
test
addr16
iret
int3
and
sbb
add
ficompl
jecxz
and
lods
sbb
lahf
pop
push
insb
push
test
insl
stos
dec
out
stos
pop
rorb
sti
and
adc
or
mov
xchg
imul
xor
jp
push
popa
or
ss
mov
xchg
rorb
ret
xchg
inc
mov
mov
pop
pop
xchg
jecxz
xor
fadds
jbe
xor
pop
xchg
cmp
cltd
in
inc
mov
adc
add
fucomp
rcrb
inc
fiaddl
popf
cmp
