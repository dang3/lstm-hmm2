push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
out
orl
xchg
add
shll
icebp
xchg
pop
fs
addr16
pop
jbe
sahf
dec
mov
repz
rcll
xchg
js
add
pushf
cmp
jns
dec
sub
push
jb
mov
into
xchg
xor
dec
rolb
pop
fistl
mov
cli
loope
lods
test
mov
es
xchg
test
push
adc
jns
mov
push
pop
mov
out
ret
pop
loopne
mov
inc
jb
or
cmpsl
shll
sbb
sub
test
cmp
mov
dec
sub
add
fidivrl
jge
mov
ret
inc
lea
sbb
jl
mov
sbb
jecxz
push
inc
ds
pusha
dec
xor
or
mov
aad
test
cld
sbb
pop
cmc
adc
popl
push
and
jns
add
cld
and
int3
push
add
scas
sub
fwait
jl
lahf
pushl
xchg
mov
insl
sbb
dec
fcompl
pop
cs
and
add
pop
mov
jne
xchg
mov
adc
inc
or
jno
dec
xor
inc
jns
add
lock
adc
cld
xor
lret
in
push
pop
outsl
jno
rolb
in
js
outsb
mov
xor
mov
mov
cmp
jne
lret
or
fs
imull
add
pop
mov
cmp
insl
inc
dec
outsl
cmpb
add
cmp
and
add
mov
jecxz
jmp
mov
xor
cltd
sub
inc
sub
or
rcl
inc
cltd
sbb
or
test
push
imul
mov
fwait
gs
pop
and
mov
sub
sub
dec
jecxz
or
nop
push
lcall
cwtl
ficoml
popf
cld
add
pop
fldz
sti
in
sahf
fstpl
add
or
rorb
or
fsubrp
mov
xchg
xor
push
inc
and
inc
lret
fistpl
fldcw
cwtl
pop
inc
pop
push
adc
inc
add
sahf
fs
jns
into
test
cmp
and
pushf
jae
insb
imul
jl
xlat
cmp
cltd
inc
aam
out
sub
xchg
aad
movl
xor
push
xchg
je
popl
inc
sbb
add
popf
and
stos
bound
add
add
fistl
int3
les
das
ret
sbb
hlt
ljmp
jbe
out
xor
xor
scas
stc
mov
jb
xlat
and
sbbb
test
jns
cmpsl
or
fs
mov
lds
pop
or
add
ret
or
test
fs
inc
mov
xor
and
xchg
xchg
pop
scas
sbb
lret
jmp
sbb
sahf
arpl
jmp
adc
stos
bound
push
scas
mov
jne
fs
lds
push
leave
fs
lds
sub
mov
sub
ja
mov
inc
push
je
hlt
aad
in
xor
scas
mov
mov
mov
pop
xor
out
jg
xchg
cmp
outsl
inc
negl
rcrl
stos
call
mov
add
jge
jle
mov
xchg
outsl
not
xor
fdiv
xlat
inc
inc
mov
sub
mov
push
adc
fistpll
notb
arpl
in
enter
std
mov
ljmp
clc
adc
ret
pop
jle
rcrl
xchg
jno
icebp
pop
push
into
jmp
pop
xchg
lret
rorb
sbb
or
cltd
cmc
icebp
add
add
int3
or
clc
add
xor
iret
into
clc
aas
push
inc
lcall
dec
jge
aaa
out
sbb
or
sub
bound
test
fisttpll
adc
and
adc
jmp
jae
test
imulb
and
fs
cmpsb
add
push
cmpb
leave
js
push
sub
stc
in
and
dec
movsb
jl
jl
aas
cwtl
jg
stos
add
adc
jg
icebp
in
movsb
out
push
repz
and
aas
xchg
arpl
int3
mov
int3
pusha
xor
jbe
call
lea
test
aad
mov
mov
popf
xchg
out
js
pop
inc
lahf
xor
mov
add
cs
sbb
push
jns
and
xchg
sbb
jmp
mov
push
mov
pushf
dec
into
adc
xor
sbb
hlt
add
mov
aas
add
clc
jo
sub
ljmp
ret
xorl
jecxz
mov
fsubrs
xor
rclb
add
add
mov
or
push
inc
jg
in
out
cli
and
in
arpl
xlat
jl
xchg
adc
shlb
sti
es
push
add
add
add
lret
mov
inc
inc
mov
inc
push
or
movsb
dec
lea
xor
test
cmpsl
or
inc
repz
push
xchg
pop
jns
cltd
and
test
or
xor
sbb
xchg
repz
sarb
aaa
ds
imul
leave
out
loopne
pop
cmovge
fldt
test
gs
sbb
mov
pop
imul
cmp
ljmp
mov
je
mov
lret
xor
out
clc
out
add
into
fisttps
mov
and
lea
fs
mov
xor
push
mov
mov
and
js
or
std
inc
push
mov
add
int
in
add
and
mov
inc
jp
or
ret
jno
sub
cmp
mov
dec
imul
stc
movb
lock
out
adc
inc
das
outsl
push
imul
ja
add
mov
lahf
mov
lea
lock
out
sub
cmp
adc
mov
and
or
jge
cwtl
or
call
mov
popa
stos
pop
add
jno
sub
lock
add
and
stc
fwait
mov
pop
push
mov
repnz
jo
pop
push
flds
adc
dec
rsm
cmpsl
push
insl
scas
xor
sub
adc
adc
push
dec
mov
lods
pop
mov
fnsave
dec
leave
adc
fistl
mov
out
in
jp
adc
stos
jb
mov
and
addb
popa
sub
and
pop
xchg
push
add
bound
or
and
or
sub
jbe
sbb
or
and
xchg
int
lret
imul
add
add
xor
cld
mov
xchg
xor
fmuls
fmull
jae
push
call
fcoml
sub
mov
test
lcall
inc
cmp
jecxz
pop
pop
mov
andb
mov
stos
iret
mov
xor
sar
jne
imul
add
add
mov
js
movsb
inc
and
sub
push
and
lret
push
sti
fcoml
xor
fbld
jne
insl
movsl
aam
mov
out
sahf
scas
in
add
adc
stc
push
add
outsl
dec
jle
aad
scas
add
add
or
jle
jbe
fwait
cltd
xor
je
push
xchg
ret
push
jno
xor
dec
ret
add
pop
mov
pop
sub
stos
js
out
popf
std
pushf
jle
ss
adc
mov
xor
es
sub
outsl
jle
dec
push
in
outsl
xchg
sub
shlb
xchg
in
stos
mov
mov
xchg
jns
js
jnp
xchg
jne
and
mov
sbb
cli
pop
lahf
fsubl
xchg
sbb
xor
inc
add
repz
icebp
fs
aad
lcall
mov
clc
insl
add
aaa
dec
xorb
imul
mov
fcmovnb
fs
popa
xor
push
xchg
sub
sti
push
push
in
push
repz
arpl
ret
clc
sub
xor
lret
movl
stos
daa
outsb
and
in
mov
mov
insl
divb
icebp
cmp
adc
jmp
add
loope
inc
rolb
dec
fcomp
lret
pop
out
imul
dec
aaa
cmpb
mov
or
int
mov
out
aaa
gs
inc
mov
xor
test
push
fiaddl
pop
xor
out
push
push
lahf
inc
ja
push
mov
xor
leave
scas
sbb
inc
sub
aaa
test
cmpxchg
sbb
push
dec
jl
inc
ja
and
jmp
ljmp
sbb
fistps
jge
fisttpll
mov
fidivrs
add
fidivs
sbb
pop
lahf
dec
jns
pop
jge
xchg
dec
popf
push
ljmp
ja
lods
in
xchg
pop
push
pop
mov
or
sbb
pusha
ret
test
mov
out
loope
imul
lret
add
lea
push
xchg
mov
lds
and
das
ffreep
mov
arpl
xor
xchg
bound
pop
dec
lahf
das
lea
cld
iret
xor
cltd
cwtl
jae
dec
mov
cmp
stos
mov
xchg
cli
into
pushf
xor
les
sti
jl
sbb
jp
in
mov
dec
scas
outsb
inc
add
mov
mov
fidivs
sub
repz
xor
repnz
mov
add
mov
xchg
cmp
lods
into
and
lahf
repnz
jl
repnz
out
pop
insb
push
mov
daa
test
mov
cmp
jle
cmp
insb
cwtl
xchg
shlb
mov
lock
jle
div
jp
sub
sub
out
jne
or
out
rorb
pop
jp
and
jmp
insl
scas
sbb
in
or
pop
sbb
push
sub
xlat
jb
mov
filds
add
js
mov
roll
lahf
add
mov
add
xchg
inc
ret
addb
fsubs
sbb
or
jle
pop
mov
push
repz
cmp
adc
add
mov
sub
mov
xchg
fs
cld
inc
inc
dec
mov
pop
or
js
xor
adc
and
fwait
xor
and
mov
push
add
add
icebp
repnz
or
dec
cmp
addr16
add
xchg
in
test
pop
stc
add
jo
int3
cmp
jne
and
adc
mov
push
mov
mov
push
cmp
jbe
mov
push
inc
and
fcoms
sbb
and
and
mov
in
xor
jb
pop
mov
mov
push
cli
jne
add
js
popf
dec
mov
mov
add
mov
int3
mov
jo
mov
mov
push
loop
jecxz
mov
repz
sub
xor
lahf
loop
sub
call
scas
and
push
mov
push
mov
sahf
jecxz
testl
or
jns
or
in
stc
adc
lahf
sub
adc
fstpl
pop
push
ret
mov
adc
adc
adc
imul
cmp
out
and
test
push
fisubrs
xchg
sub
sub
pop
sti
jmp
lods
lock
nop
xchg
testl
and
sub
inc
into
jp
sbb
inc
int3
in
stc
in
ret
sbb
xor
subb
fnsave
pop
daa
icebp
xchg
ss
pop
fsincos
int3
sbb
ret
shr
push
je
sahf
imulb
adc
cltd
mov
loop
inc
ds
repz
in
stc
dec
shrl
mov
push
ror
lret
inc
sti
cli
fimull
sub
mov
add
jl
repnz
xchg
jno
mull
dec
rcrl
in
cmp
dec
xor
mov
push
inc
fisttpll
popa
xor
mov
stos
sub
dec
out
mov
cmc
adc
and
xchg
mov
mov
repnz
push
jmp
decb
push
repnz
mov
mov
pop
lea
add
add
sub
add
shll
fbld
aad
mov
jecxz
inc
xchg
mov
loop
shll
push
pushf
sahf
arpl
inc
test
jno
jg
sub
mov
out
pop
fildl
iret
fisubs
stos
mov
sub
int
pop
xchg
aad
sarb
and
mov
int3
push
lret
sub
xchg
scas
pop
push
and
mov
repnz
jne
lds
dec
lock
mov
pusha
popf
addr16
or
mov
push
pop
rol
mov
cltd
adc
fdivs
and
js
dec
pop
adc
inc
mov
or
mov
imul
or
lods
lea
jbe
pusha
call
pop
push
pop
pop
aaa
xor
dec
popf
push
push
imul
fs
mov
xchg
ficoml
xor
mov
test
sbb
add
test
lret
rorl
mov
dec
mov
pop
clc
std
into
nop
xor
test
shl
paddsb
lods
mov
sbb
sahf
inc
sbb
bound
ljmp
cld
aad
pop
sbb
shrb
mov
repnz
jno
push
mov
mov
sarl
or
xor
clc
add
rcll
jbe
adc
mov
aad
jge
call
sub
ds
fcomps
in
mov
incb
jbe
frstor
jae
sbb
sahf
decl
or
neg
mov
bound
or
dec
loopne
int3
mov
jo
rorl
or
jbe
mov
leave
pop
or
push
ja
mov
jmp
inc
sub
sbb
iret
out
mov
add
add
jg
mov
mov
cltd
subl
sahf
push
xor
mov
or
sub
in
popa
icebp
sub
in
lret
pop
arpl
add
or
aas
push
sbb
fdivrl
mov
pop
into
imul
or
push
xchg
sbbl
aaa
shlb
mov
test
or
add
test
in
orb
cli
xchg
push
aas
test
cs
mov
pop
sti
jge
shl
cmp
inc
add
cmpsl
lahf
popl
shrl
testb
hlt
call
cmc
aam
in
adc
lcall
mull
xlat
in
aaa
jno
repnz
sbb
mov
xor
fwait
lret
cmp
mov
leave
loope
ret
add
dec
dec
sub
les
mov
lds
jae
lret
cli
add
mov
cmpsl
or
cwtl
pusha
dec
xchg
push
fisubl
sub
or
mov
js
cmc
mov
xchg
in
jmp
pop
sub
stc
mov
jle
les
xlat
inc
in
dec
pop
and
sub
pop
movsl
dec
out
das
jle
data16
push
jecxz
jecxz
insl
jmp
xchg
xchg
les
add
mov
xlat
stos
mov
sbb
out
jns
push
mov
in
ret
add
popa
imulb
or
gs
inc
mov
xchg
jo
out
and
fsubl
inc
mov
and
jmp
push
out
sub
test
stos
and
dec
cmpl
dec
popf
clc
test
insl
pop
inc
ljmp
repz
hlt
fld
inc
add
shrl
stos
mov
xor
push
dec
mov
jge
sbb
mov
test
mov
ljmp
pop
js
lock
dec
out
inc
pop
ret
xchg
outsl
mov
popa
insl
dec
in
push
xchg
bound
es
mov
pop
mov
popf
xorb
stos
xor
insb
adc
sbb
repz
sbb
xchg
mov
repnz
test
fisubrs
stos
xor
lods
sub
insl
lret
add
jbe
and
push
jge
adc
orb
test
adc
test
addr16
dec
push
add
and
dec
loop
xlat
jo
lock
clc
pop
jg
arpl
pop
push
xchg
dec
pop
mov
mov
pop
inc
call
cmp
cwtl
cmpb
inc
jecxz
adc
add
mov
jo
mov
xchg
les
out
dec
std
test
add
mov
adc
inc
inc
xor
scas
or
cmp
movl
aad
dec
stc
hlt
sub
jle
cmp
clc
stos
ret
xor
mov
mov
xchg
outsb
xlat
out
mov
rcll
hlt
jbe
dec
or
lds
mov
int
adc
sub
pop
pusha
fwait
add
pop
xchg
cld
sub
add
mov
filds
pop
call
aam
or
loope
cltd
stc
adc
cmp
sbb
repnz
fisttpl
enter
mov
arpl
pusha
pop
inc
sbb
addb
loop
jae
xor
add
in
test
adc
cmp
cmp
lods
add
sbb
inc
lret
sbb
fldl
add
sbb
push
mov
sbb
ret
fildll
dec
insb
out
adc
inc
aam
icebp
test
push
add
les
in
mov
sbb
pop
xorl
mov
cmp
insb
fdivrp
popf
push
int
cwtl
inc
inc
xchg
pushf
xchg
bound
ret
sub
mov
js
fdivl
lret
dec
test
sub
adc
inc
dec
sub
dec
add
add
adcl
mov
lret
insb
mov
mov
cmp
addl
xor
repz
cmp
push
lea
and
add
test
push
pop
cmc
fs
sbb
xor
scas
inc
xchg
pop
cmpb
inc
push
sub
pop
mov
cld
shr
pushf
xor
outsb
imul
sub
sub
and
lea
movsl
dec
or
jnp
and
scas
xchg
add
rcll
mov
jmp
adc
mulb
add
jae
xchg
loope
dec
xor
cwtl
cs
orl
test
pop
sti
scas
jns
stos
mov
mov
leave
insl
sbb
iret
inc
inc
adc
out
test
pop
dec
les
inc
add
inc
mov
pop
fmull
inc
add
leave
adcl
ret
jne
fidivl
aam
jne
je
jl
fmul
or
xlat
ljmp
or
daa
aas
icebp
negb
jl
out
jmp
imul
jbe
gs
out
sbb
cmp
and
out
les
popl
cmp
pop
push
hlt
mov
cmp
push
mov
xor
scas
loopne
outsb
rcrb
dec
adc
push
or
add
mov
leave
mov
push
cwtl
sahf
imul
sysenter
cmpsl
xor
pop
gs
fstpl
xchg
xor
sbb
mov
inc
push
jae
cmp
popf
pop
mov
mov
scas
mov
inc
scas
xlat
ja
xor
mov
or
popa
es
imul
sbbb
inc
sub
jno
add
add
cmp
lret
lods
cli
out
mov
xchg
fadd
out
mov
lea
gs
inc
inc
rclb
mov
in
sbb
add
mov
and
rol
adc
outsl
inc
cmpsb
mov
movsb
push
xlat
leave
pop
outsb
sub
dec
mov
add
stos
cmpb
dec
pop
lds
je
adc
dec
mov
and
sbb
push
pop
icebp
xor
push
pop
add
add
xchg
cmp
ret
jns
push
insl
xor
hlt
add
pop
or
out
insb
or
out
test
outsb
sti
cmp
ja
mov
xor
sub
imul
arpl
and
adc
in
cli
xor
subl
and
add
and
loope
mov
pop
ret
leave
andps
loop
push
mov
loopne
mov
out
mov
pop
je
cmp
add
sub
loopne
mov
xorl
pop
aam
xchg
and
lahf
sbb
fisttps
std
fmuls
rclb
fstps
mov
sbb
popf
leave
ss
call
mov
in
lea
test
les
dec
add
mov
jp
mov
xor
cmp
mov
add
xchg
pop
push
pop
pop
ret
adc
js
aaa
shrb
inc
jmp
push
mov
jp
xor
add
add
inc
fimull
cmp
push
iret
in
sub
jg
or
xor
and
in
add
sbb
or
shlb
mov
xlat
pop
and
sbb
xorl
dec
ret
lret
push
jmp
pushf
mov
loop
in
mov
jg
lock
pop
bound
scas
xlat
jns
and
cli
jb
push
adc
lds
mov
xchg
cmp
xchg
mov
adc
cmp
xor
add
sbb
push
push
xlat
sahf
fstps
push
adcb
lock
nop
lahf
sub
xor
cwtl
cmpsb
es
std
negl
mov
push
jg
mov
push
adc
dec
pop
xchg
dec
mulb
pop
in
mov
xchg
fucomp
inc
pop
xorl
fsubrs
cmp
mov
or
out
lods
sahf
inc
cmc
adc
pusha
add
mov
fs
inc
mov
sbb
pop
orb
mov
mov
stos
call
fwait
xchg
or
add
loop
mov
sbbb
jo
js
xchg
mov
xlat
dec
lahf
ficoms
mov
jns
je
das
cmp
mov
or
cmp
push
xor
xchg
push
jne
dec
cmp
scas
jne
xlat
mov
add
push
lea
xor
clc
insb
mov
stos
fldl
ljmp
dec
enter
mov
mov
cmp
pop
mov
cs
push
shlb
or
push
cmp
lea
pushf
inc
cmp
sbb
adc
dec
fdiv
cmpsb
jl
ds
cmp
out
cmp
enter
scas
cmpsl
and
add
mov
lret
mov
fbld
jne
push
daa
cmp
jbe
mov
adc
out
subb
push
push
imul
jbe
add
es
push
loopne
fwait
popa
mov
sbb
je
inc
int3
lret
add
jbe
insb
sar
aad
jg
scas
jo
xchg
add
push
out
repz
add
ret
mov
cld
add
cmp
rcrb
sub
add
add
rorb
adc
jb
mov
roll
and
xor
and
and
mov
mov
xchg
adc
fs
sbb
out
fisubrs
loopne
jmp
sub
in
adc
mov
pop
mov
cmp
mov
shl
repnz
int
sbb
pusha
xchg
pop
lods
fadds
add
mov
push
pop
mov
jmp
or
daa
mov
fwait
adc
pop
mov
stc
insl
pop
loop
sub
xor
dec
lret
arpl
xchg
sarl
jge
orl
push
pop
mov
int
mov
push
shr
push
and
mov
repnz
mov
push
lret
mov
xchg
or
add
mov
xchg
arpl
nop
cmp
in
pop
cmp
push
push
sti
jle
xchg
lods
fisttpll
xor
and
add
push
call
sbb
es
mov
pop
in
popa
arpl
pop
mov
fidivrs
scas
adc
dec
push
test
pop
aam
data16
in
insb
cld
sbb
test
xor
outsb
cmc
xchg
mov
and
mov
addb
cmpsb
xchg
jmp
add
mov
add
lret
aas
push
jns
icebp
mov
lock
int3
in
jno
shll
cld
and
xchg
xchg
cmp
or
inc
mov
jmp
adc
test
push
lock
xchg
mov
or
gs
outsb
xchg
mov
arpl
das
add
jno
jb
outsl
in
loope
mov
pop
xlat
ret
or
jmp
js
pop
dec
mov
shl
cmpsl
mov
std
out
fs
fcoml
call
jbe
mov
jecxz
add
mov
loopne
push
stos
push
push
push
aam
loopne
cs
shlb
mov
jp
inc
push
sbb
and
mov
and
sub
mov
sub
sbbl
add
sbb
cmp
sbb
stc
xchg
in
sbb
cmp
imul
xchg
adc
sbb
fistpl
mov
add
imul
pop
cli
push
mov
int3
sbb
cmp
sti
jbe
mov
fbstp
xor
shll
cmp
lret
adc
push
lea
les
adc
cs
ja
sub
xchg
pushf
movsl
push
inc
fisttpll
int
fsubp
push
add
dec
sbb
sbb
aaa
and
sbb
add
add
cltd
clc
in
jg
out
jbe
pop
aaa
mov
or
sub
inc
and
dec
add
lret
mov
push
adc
sub
xor
call
or
add
test
and
aad
ret
cltd
incb
cmpsb
into
into
mov
mov
adc
jecxz
sbbb
ja
lods
call
addr16
mov
xchg
sbb
cli
arpl
sbb
gs
mov
add
mov
push
in
shlb
inc
adc
dec
sbb
repnz
imul
in
movsb
mov
aad
jnp
pop
dec
sbb
xor
pop
pop
mov
pop
dec
in
test
mov
cmp
jns,pt
adc
xchg
adc
outsb
dec
push
xchg
fidivl
mov
xchg
sub
cs
mov
insb
cmp
pushf
in
lods
cmp
std
push
lock
rorb
lds
fbstp
enter
add
xchg
das
xchg
and
push
aas
rcrb
or
ds
ja
fdivrl
xchg
pushf
mov
in
and
stos
xor
mov
incl
jmp
scas
divl
sbb
sbb
sub
dec
pop
inc
subl
sbb
fcompl
repnz
cltd
cmc
mov
mov
mov
popf
movsl
enter
movsb
mov
hlt
jle
jge
fmull
sbb
add
add
add
sarl
lret
xchg
mov
add
cmp
pushf
mov
mov
push
loop
jmp
jmp
cmc
int3
lret
mov
or
movsb
imul
aas
mov
jns
stos
mov
in
xchg
fsubrs
int
add
and
lds
and
into
shlb
imul
mov
lret
mov
adc
mov
pop
xor
jne
inc
ljmp
frstor
jl
mov
push
adc
test
les
fcmovu
das
mov
cmp
test
insb
or
xchg
or
jo
filds
push
sub
inc
testl
sbb
mov
adc
push
inc
rorl
lret
mov
into
mov
pop
imul
leave
daa
add
adc
dec
test
outsb
dec
xor
inc
cmpsb
lods
into
fnstcw
iret
iret
dec
fst
or
mov
es
test
add
and
icebp
jb
xor
mov
lret
push
daa
jae
or
mov
jb
sub
adc
sub
mov
dec
mov
sub
pop
movsb
cs
rol
js
mov
mov
scas
in
jle
mov
jp
bound
das
int
repnz
xchg
jp
pop
dec
mov
lock
sbb
mov
dec
or
sbb
fs
aam
dec
bound
ret
add
add
cwtl
lret
mov
push
insb
loope
gs
fildl
mov
adc
pusha
or
sbb
jle
pop
push
stc
cld
cmpsl
mov
adcb
fsubs
rolb
jl
jmp
enter
dec
cmp
push
movsb
popf
cmpsl
pusha
test
sbb
into
scas
daa
out
popa
add
and
fdivrs
inc
or
sbb
push
sub
mov
add
add
jecxz
test
movsb
sub
ss
test
mov
xchg
shll
inc
jno
decb
stc
xor
adc
sbb
cli
add
stc
flds
in
movsl
fimuls
into
inc
mov
or
mov
aas
push
xor
and
xchg
xchg
rorb
add
outsl
enter
ss
xchg
lock
cmp
push
scas
mov
sbb
add
