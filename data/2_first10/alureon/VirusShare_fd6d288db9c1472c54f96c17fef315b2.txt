dec
mov
aaa
mov
pop
sbb
arpl
cmp
nop
sbb
inc
mov
sbb
je
mov
xor
dec
int3
call
lods
inc
mov
add
fiaddl
sub
sub
sub
xchg
xchg
leave
fs
jge
mov
mov
fldcw
sub
mov
adc
sbb
inc
daa
or
out
mov
adc
int
outsb
xor
cmc
ret
nop
mov
inc
and
lret
in
in
jae
xor
popf
dec
pusha
push
fsubl
leave
jbe
cld
stc
fildl
mov
sbbl
leave
mov
data16
pop
cmpsb
inc
repz
mov
xchg
jp
fisttpll
xchg
popa
lahf
test
aad
fs
adc
xchg
mov
fdivr
cmp
cmp
push
dec
shll
sub
sbb
movsb
mov
jl
adc
cli
in
stc
lret
xor
test
dec
cltd
adc
int
inc
push
test
lahf
inc
lahf
push
xchg
xchg
inc
xchg
push
in
or
loop
sub
jl
sbb
dec
or
cltd
jg
dec
pusha
adc
mov
adc
daa
adc
arpl
cmp
add
shrb
xchg
and
lods
add
xchg
lds
pop
lock
out
pop
notl
jae
dec
or
mov
ficoms
ljmp
xlat
in
mov
pop
inc
xchg
and
cwtl
fstl
rep
out
repz
push
ds
mov
int
add
mov
loopne
mov
inc
sbb
nop
in
outsl
sbb
cs
insl
movsb
aas
lea
stc
ret
in
inc
push
adc
sahf
xchg
jnp
aaa
add
leave
mov
loopne
das
cmp
ret
push
incl
mov
mov
mov
test
lret
outsl
sbb
rcrb
mov
sbb
loop
mov
fiadds
push
neg
cmp
inc
in
into
je
mov
mov
ss
pushf
mov
in
iret
dec
imul
cmp
dec
pushw
decb
inc
push
sub
and
pop
es
lcall
int
stos
inc
mov
rolb
cmpsb
cmp
xor
cmp
imul
fucompp
lods
xor
pop
lods
mov
cltd
mov
ljmp
inc
mov
insb
stos
pop
rcrb
cwtl
pop
and
push
es
dec
ljmp
nop
call
pop
js
mov
int
aam
mov
xchg
clc
push
fimuls
dec
mov
fsubrs
push
popf
xchg
pop
dec
out
lahf
outsl
popf
shl
mov
add
pop
or
ffreep
inc
mov
xchg
in
cld
pop
fsts
sbb
cmpsl
push
hlt
xchg
xlat
sub
dec
inc
cmp
adc
cmp
ds
in
jmp
pop
and
adc
insl
enter
push
call
stc
negb
ret
out
mov
fcomi
mov
xor
dec
mov
push
out
faddl
lods
push
testb
mov
in
jp
rolb
or
and
gs
mov
and
dec
lcall
push
pop
inc
jae
sbb
push
sub
rcr
mov
xchg
xchg
aam
dec
leave
leave
pop
or
xchg
adc
adc
mov
movsl
dec
aas
push
test
dec
loop
nop
ja
test
push
and
mov
and
jmp
mov
mov
jl
leave
jo
ret
xlat
aaa
lahf
lods
int3
mov
ret
and
es
and
sub
mov
jnp
mov
out
push
mov
shrl
sbb
testb
addb
add
jp
iret
jge
xchg
jmp
fistpll
or
stc
lcall
repnz
adc
mov
clc
inc
mov
rol
sub
sbbb
push
mov
pop
out
add
jmp
xor
jb
pop
sbb
dec
into
mov
mov
inc
pusha
or
outsl
mov
dec
fsts
and
nop
int3
or
lods
fisubs
clc
shrb
aam
adc
iret
dec
shl
mov
test
test
cmp
fwait
push
pop
cmp
sub
and
ret
addr16
addr16
pushf
ret
pushf
scas
mov
push
loope
sahf
mov
jl
jne
and
ds
pop
or
insb
mov
imul
cmpsl
add
inc
fbstp
aad
sub
sub
rcrl
cmp
jo
xchg
xchg
xlat
and
xor
stos
pop
add
imul
pop
or
adc
mov
imul
sub
mov
mov
xchg
adc
aam
add
dec
lret
mov
sub
push
mov
stos
andb
and
lock
dec
sbbb
cltd
inc
add
dec
push
movntps
mov
inc
cld
add
mov
cmpl
movsbl
pop
sub
add
jae
and
mov
add
inc
outsl
addr16
push
mov
push
fidivl
adc
adc
lea
xchg
mov
aam
fstpl
xchg
ret
mov
ljmp
ja
mov
inc
mov
cmp
or
sub
test
mov
jno
sbb
call
push
scas
or
cmp
dec
pushf
sub
cwtl
enter
movsb
pop
cmp
imul
sub
ds
xchg
es
insl
int
cli
dec
pop
jecxz
and
in
and
mov
xchg
or
nop
sahf
or
add
stc
push
cmc
dec
cs
dec
mov
popf
shlb
mov
ja
cmpsb
mov
jmp
dec
pop
arpl
fcom
push
jns
xchg
push
jl
dec
push
sub
pop
adc
cmpsl
jo
jmp
outsl
fmuls
stc
lock
jmp
lcall
jecxz
sbb
outsl
cmp
xchg
rol
movsl
inc
aad
xor
add
ffreep
xchg
cld
fwait
mov
push
aam
and
popf
sbbb
push
adc
jo
sbb
add
or
insl
es
mov
pop
inc
dec
lret
xor
push
mov
or
mov
push
xlat
pmaddwd
popa
or
ljmp
push
pop
and
fidivs
addr16
stos
push
mov
inc
jle
dec
cmp
repz
sbb
pop
and
cmpsb
mov
mov
mov
fucomip
cmp
cld
loopne
arpl
lock
push
test
pop
fmul
scas
aad
add
cld
push
jno
test
push
shll
subb
movsl
push
cmp
cmc
mov
sbb
mov
sub
sbb
mov
inc
in
pop
cld
jle
xor
into
jg
xor
mov
add
out
in
sbb
and
pop
daa
xor
shr
rolb
lds
and
movsl
repnz
xchg
test
push
jl
bound
les
and
jo
imul
add
xchg
push
pop
jae
cwtl
inc
arpl
repnz
in
ficomps
enter
mov
adc
rorl
ljmp
iret
mov
cmp
jno
cmp
cwtl
jne
fcomip
add
nop
jbe
xor
aas
or
jl
mov
aas
outsb
adc
jbe
cltd
xlat
push
jb
jge
xchg
pop
aam
iret
lretw
ret
sub
cmp
cmp
fiadds
add
roll
pop
fildll
shr
test
mov
roll
int
jae
lret
sub
jae
shll
jecxz
xchg
gs
sbb
or
cli
add
sub
in
in
lahf
lret
xchg
mov
shr
loop
xchg
or
int
leave
nop
mov
jo
jp
pop
or
xchg
cltd
sub
mov
loope
xorl
mull
xchg
test
mov
or
adc
jp
or
stos
xchg
ficompl
dec
ret
out
cmp
add
inc
mov
push
adc
and
jmp
xchg
clc
lret
adc
mov
inc
push
movsl
jmp
fwait
adc
xchg
lods
mov
lahf
fcompl
aam
mov
dec
bound
xchg
add
xchg
fidivrs
xchg
push
sub
scas
popf
es
push
and
push
pusha
adc
push
mov
adc
add
js
stos
sbb
push
xchg
cmpsl
inc
popa
add
jge
das
or
daa
in
sbb
outsb
aam
mov
out
and
fs
lret
inc
js
pop
cld
xor
cwtl
mov
or
iret
mov
push
imul
lcall
cli
aam
xchg
shlb
repz
sub
jg
jmp
sahf
outsl
outsb
adc
adc
sub
push
repz
fistpll
sub
leave
int3
negl
push
imul
mov
mov
data16
mov
jmp
call
push
repnz
xor
insb
or
repnz
mov
stos
xchg
jl
dec
cli
clc
rcr
loopne
jmp
jge
inc
xlat
adc
mov
stc
xchg
push
call
pop
jbe
xchg
cmpsl
xchg
jg
or
sub
mov
pop
cwtl
out
xchg
pop
es
dec
xchg
pop
inc
and
imul
jmp
xchg
test
sbb
add
outsl
and
imul
aas
int
fldl
int3
es
into
mov
cmp
pop
inc
loopne
out
pop
imul
push
sbb
adc
pop
call
mov
insb
ljmp
pop
adc
dec
mov
in
pop
fcmovb
mov
or
rcll
and
in
mov
xchg
push
imul
test
out
or
paddusw
xchg
shrb
pop
inc
lret
mov
ficompl
jno
xchg
dec
inc
sbbl
sub
in
popa
push
dec
test
push
lret
out
mov
testl
push
movb
add
shl
xchg
ds
jg
jno
add
sahf
les
out
int3
mov
pop
call
rcrb
xchg
dec
movsl
std
pop
popa
xor
and
mov
dec
mov
scas
insl
adc
mov
jno
push
test
cmp
aad
xor
xor
adc
loope
or
decb
aaa
stos
xor
adc
lcall
mov
cltd
mov
xchg
push
in
lret
cmp
sub
inc
hlt
out
out
jo
jge
pop
jo
subl
test
pop
xor
mov
push
sbb
xchg
cltd
cmp
mov
inc
stos
jp
loop
leave
ss
or
and
cmp
and
jb
inc
adc
in
jmp
imul
dec
jecxz
xchg
and
fcoms
mov
jb
lods
jne
jl
mov
sbb
out
mov
mov
adc
es
loope
cmp
nop
xor
push
data16
dec
es
or
sub
lock
adc
xchg
aam
sahf
incl
sti
in
mov
mov
int3
mov
mov
xchg
call
cltd
xor
inc
in
andb
scas
pop
imul
cwtl
jae
cmpsl
and
jl
aad
mov
mov
cmp
mov
pop
stos
xchg
xchg
or
ret
aad
pop
mov
clc
iret
gs
mov
mov
repz
outsl
xor
ds
loop
mov
sbb
int3
cmp
xchg
ret
outsl
adc
adcl
in
dec
imul
loopne
pop
and
sarb
cmpsb
dec
xor
test
jns
pop
xchg
mov
in
psubw
jmp
push
adc
test
mov
push
mov
sub
dec
call
mov
dec
call
inc
push
mov
call
lea
add
movswl
inc
sub
inc
call
xor
mov
xor
imul
dec
mov
mov
inc
add
add
dec
lea
and
add
call
sub
add
lea
imul
movzbl
call
inc
dec
call
add
inc
dec
lea
mov
dec
xor
pop
dec
lea
add
add
dec
pop
dec
mov
pop
mov
dec
inc
dec
pop
add
mov
sub
movswl
sub
dec
mov
mov
pop
dec
mov
pop
add
add
mov
inc
movsbl
call
dec
add
add
imul
ret
lea
sub
push
inc
dec
push
inc
push
sub
inc
push
sub
dec
push
lea
mov
mov
mov
inc
push
lea
ret
push
dec
inc
xor
lea
sub
imul
lea
push
lea
lea
imul
call
pop
ret
jmp
lea
mov
or
sub
movzbl
mov
lea
add
xor
inc
and
mov
inc
movzbl
or
mov
xchg
mov
inc
inc
add
xor
or
dec
imul
mov
inc
inc
inc
dec
jne
lea
mov
lea
lea
pop
lea
dec
pop
sub
inc
pop
movsbl
lea
lea
mov
add
and
mov
and
mov
inc
inc
add
ret
push
and
add
lea
dec
mov
inc
mov
lea
push
push
push
push
xor
mov
mov
push
add
dec
mov
add
mov
inc
lea
add
dec
mov
lea
push
lea
imul
xor
mov
dec
push
mov
mov
push
lea
mov
pushl
and
call
dec
add
sub
inc
xor
mov
dec
dec
add
pop
ret
imul
mov
sub
mov
movzbl
inc
mov
movsbl
movswl
mov
lea
lea
dec
cmp
jb
dec
xor
dec
dec
mov
imul
or
mov
imul
mov
inc
imul
dec
dec
dec
movsbl
mov
dec
and
cmp
jb
inc
pop
inc
dec
imul
dec
sub
mov
lea
lea
dec
add
or
lea
imul
dec
xor
inc
imul
xor
dec
lea
mov
lea
add
test
jbe
add
dec
mov
dec
mov
inc
sub
or
sub
dec
xor
inc
and
mov
xor
mov
mov
add
movzbl
add
sub
add
and
dec
and
mov
mov
mov
dec
dec
mov
movzwl
dec
mov
dec
sub
mov
or
imul
mov
sub
lea
imul
dec
jne
mov
mov
movzwl
dec
add
and
sub
mov
movsbl
mov
mov
xor
mov
imul
mov
mov
lea
inc
inc
mov
inc
add
test
jbe
sub
inc
add
mov
dec
mov
dec
inc
sub
dec
lea
dec
imul
dec
lea
inc
inc
inc
xor
imul
sub
inc
and
dec
inc
mov
lea
inc
movzbl
sub
lea
add
or
mov
and
mov
add
mov
inc
add
movzbl
mov
mov
mov
inc
jmp
push
dec
add
dec
mov
mov
mov
mov
lea
dec
sub
lea
movswl
add
add
movswl
dec
add
xor
mov
inc
lea
mov
lea
dec
mov
inc
add
inc
movsbl
dec
mov
dec
mov
mov
inc
inc
mov
dec
dec
cmp
je
call
call
imul
mov
imul
mov
dec
movsbl
add
mov
dec
inc
inc
sub
mov
lea
add
dec
mov
dec
xor
add
mov
movzwl
dec
mov
mov
dec
movzbl
mov
mov
mov
movzwl
inc
dec
sub
mov
movzwl
or
dec
or
add
add
lea
mov
mov
mov
mov
sub
ret
inc
and
pop
add
ret
push
dec
imul
inc
xor
sub
push
mov
sub
push
dec
push
mov
push
dec
inc
inc
add
add
call
mov
push
imul
add
xor
sub
sub
mov
neg
add
mov
imul
or
add
sub
mov
inc
mov
mov
add
imul
inc
xor
or
dec
je
dec
inc
inc
mov
mov
jmp
inc
mov
imul
mov
mov
lea
repnz
sub
dec
add
dec
jmp
imul
lea
sub
mov
inc
lea
inc
lea
mov
add
dec
and
lea
inc
lea
mov
pop
pop
ret
push
and
inc
mov
dec
lea
or
add
sub
dec
movzwl
mov
dec
mov
sub
inc
dec
lea
imul
sub
mov
inc
lea
sub
inc
add
add
mov
pop
ret
sub
inc
mov
lea
inc
mov
inc
inc
mov
lea
or
mov
mov
sub
xor
mov
inc
mov
mov
movzbl
inc
imul
mov
mov
dec
mov
dec
cmp
jb
inc
push
lea
add
push
inc
lea
push
dec
sub
xor
imul
movsbl
xor
or
and
xor
mov
lea
push
and
add
mov
inc
mov
xor
lea
dec
mov
or
dec
mov
mov
movzbl
or
inc
add
add
add
mov
dec
movzbl
dec
xor
jmp
add
push
mov
pop
jmp
push
scas
mov
adc
cli
out
inc
out
outsb
sbb
or
js
mov
mov
adc
fldenv
ja
or
jg
out
cs
cwtl
pop
xchg
jne
sbb
loope
pop
cmp
das
fxam
in
mov
xchg
mov
lahf
stos
repz
xchg
pop
cmp
fimuls
mov
in
fistl
adc
push
dec
call
xchg
ja
outsl
cmp
sub
xchg
call
push
fnstsw
dec
xchg
push
mov
call
or
mov
inc
sub
fwait
addr16
mov
out
mov
pop
and
imul
insb
hlt
inc
hlt
ret
mov
les
dec
lea
test
nop
mov
mov
int3
sub
pop
popf
lods
negb
dec
push
add
jo
mov
sub
xchg
test
ret
es
daa
sbb
inc
sbb
push
mov
mov
sub
in
cmpsb
dec
jmp
jmp
out
and
repz
adc
bound
sbb
loopne
or
rclb
pop
in
insb
daa
push
notl
xchg
testl
insb
mov
aad
and
and
xchg
scas
imul
ss
mov
test
jg
jnp
dec
jns
call
pop
mov
testb
push
cmpsl
pop
shlb
das
add
out
jne
loop
ret
test
mov
jno
out
mov
and
scas
loopne
stos
xchg
out
adc
fcmovnb
jmp
sub
lret
mov
sbb
fidivs
pusha
jl
mov
xchg
add
push
lar
rolb
mov
call
popf
push
popf
stc
les
inc
fmul
xchg
int
mov
jl
dec
lods
cmpsl
test
pop
outsb
fs
jb
fsts
push
add
add
imul
push
push
test
test
gs
mov
push
xchg
repnz
enter
cmp
xor
shrb
out
sbb
fdivs
jp
mov
je
add
aad
cmp
cmpsl
clc
cmc
ljmp
or
leave
jge
jl
test
sarl
jmp
adc
mov
mov
fldcw
int
xor
jecxz
xlat
pop
repz
shlb
sub
mov
push
jb
or
stc
mov
sub
cmp
movsl
movhps
dec
rcll
inc
ret
push
add
sub
add
test
inc
mov
mov
mov
dec
mov
pop
imul
loopne
pop
fidivl
lock
test
cmpl
in
push
pcmpgtb
out
lods
inc
int
fnsave
mov
call
or
mov
mov
and
fisubs
adc
sub
adc
sti
sub
push
lods
fidivrl
cmp
aaa
es
out
aam
dec
imul
popf
mov
push
add
test
ret
add
pop
roll
sbb
int3
add
push
jge
or
insb
mov
pusha
repnz
loope
popa
insb
loopne
popf
dec
popa
testb
add
mov
iret
xor
and
mov
arpl
or
mov
lds
test
push
rorl
scas
mov
shrb
dec
mov
mov
pop
dec
movsb
mov
call
mov
lahf
lcall
pushf
in
je
fisubs
jno
aam
sub
stos
jge
ja
ss
flds
fbstp
xor
mov
cmp
into
out
sbb
pushf
insl
popf
inc
mov
push
repnz
in
cmp
cli
mov
aas
sub
xchg
push
mov
mov
aas
or
jb
aad
fld
mov
sub
cmp
xor
and
mov
mov
or
lods
movsl
cmp
fsubrl
rcrl
xchg
ljmp
cltd
fs
jge
push
sbb
cmpl
cwtl
push
and
jl
pop
orps
imul
cmpsl
test
cmp
ja
mov
loope
adc
movsb
aaa
jecxz
fwait
fwait
in
loop
in
xchg
ficoms
pop
xchg
in
popf
ss
xchg
mov
cmp
xchg
inc
jle
push
mov
cltd
sub
lods
xlat
ljmp
fwait
adc
enter
or
jmp
daa
push
push
mov
insb
xor
lods
mov
arpl
lcall
loop
jecxz
andb
push
push
adc
shrl
mov
and
cmp
movsl
addb
or
call
movsb
fs
aaa
mov
push
sbb
add
mov
loopnew
mov
shll
out
dec
mov
cmp
sbb
push
pop
xor
inc
xor
mov
mov
cmp
push
loope
jae
fstp
stc
add
lret
pusha
test
mov
inc
lds
int3
cld
jp
dec
addr16
lret
lea
loop
push
mov
lret
mov
lea
nop
into
cmpsb
xchg
xchg
test
or
lret
xorl
sub
pushf
mov
push
add
push
lods
subl
into
daa
inc
dec
mov
mov
jle
and
mov
addl
cld
sub
fmul
sub
loopne
popf
push
stos
cmc
std
shll
pop
pop
adc
cmp
ss
in
ss
xchg
popa
or
cmp
mov
inc
out
test
jns
fnstsw
fidivl
insb
mov
dec
clc
test
push
imul
jecxz
sti
inc
sahf
std
ja
lcall
lods
mov
xchg
pop
cs
andl
mov
imulb
cmp
int3
xor
push
divl
fadds
hlt
jno
data16
hlt
pop
imul
cmp
or
dec
adc
lret
and
ss
xchg
add
lret
mov
nop
pop
faddl
aaa
sahf
rcrl
or
push
pmaddwd
imul
aaa
ret
adc
inc
mov
xchg
xor
add
leave
adc
in
ret
dec
mov
xlat
or
test
cmp
jb
xor
test
into
sbbl
xchg
ja
dec
mov
xchg
sub
pop
fs
jg
repz
mov
popa
inc
arpl
cltd
mov
test
pop
lret
dec
push
fwait
push
sbb
adc
orb
dec
outsb
pop
mov
cmp
outsl
rorb
push
xor
mov
enter
jmp
ret
mov
sbb
mov
lret
xchg
inc
lahf
bound
cmc
int
jg
out
lret
jo
mov
cmpsl
push
repz
pop
push
pop
inc
ret
movsb
inc
mov
mov
push
lea
and
and
inc
xlat
inc
push
or
add
inc
inc
call
xor
pop
js
mov
push
aaa
and
mov
arpl
adc
sbb
mov
mov
icebp
inc
lds
inc
adc
mov
out
fdivl
xchg
scas
arpl
scas
sbb
bnd
xchg
aam
sti
mov
cmp
clc
xor
popa
clc
mov
mulb
aad
aad
mov
pop
icebp
les
jb
pop
enter
cmp
mov
xchg
ljmp
fs
fwait
or
and
imul
sbb
or
mov
push
sbb
mov
outsl
inc
adc
push
adc
sbb
in
cvttps2pi
in
xor
stos
mov
clc
sbb
andl
subb
mov
ja
ds
xor
pop
xor
mov
cmp
movsb
sar
outsb
or
inc
and
and
js
lret
loopne
xchg
add
es
mov
or
popf
icebp
pushf
jo
stos
cmp
ss
call
mov
dec
xorb
repnz
imul
xchg
andl
in
inc
push
shrb
inc
lods
pop
data16
push
data16
addr16
xlat
push
sti
cmp
scas
icebp
add
and
push
or
sbb
push
enter
jnp
mov
pop
test
jne
bound
mov
pop
sbb
arpl
call
dec
mov
or
test
push
or
jecxz
jmp
pop
dec
xchg
push
int
scas
push
pop
clc
inc
jbe
sbb
mov
pop
rcrb
inc
jo
in
jae
in
cmp
mov
fisttps
mov
cmpsb
daa
jne
lret
mov
add
mov
sbb
fdivs
stos
jp
push
push
or
add
inc
xchg
adc
mov
repz
pop
aad
fdivr
test
ljmp
test
mov
sbb
dec
std
sub
pop
adc
and
mov
inc
nop
in
add
test
inc
notl
inc
mov
dec
or
fisubl
and
lods
insb
cmp
leave
push
and
pusha
lea
enter
push
cmpsb
imul
nop
popf
mov
out
xchg
cmp
pop
push
frstor
bound
mov
cmp
hlt
das
idivl
cmp
xchg
sub
scas
xchg
dec
cwtl
push
cltd
daa
cmc
mov
sbb
adc
push
inc
mov
mov
push
dec
mov
push
and
scas
xor
or
pop
out
sbbl
xor
mov
adcl
cltd
cs
sahf
inc
push
cmc
jne
ret
aaa
fs
inc
cs
fbstp
or
cs
movsb
jl
xchg
aad
divps
cmpsb
movsl
or
rcr
inc
jl
das
inc
repnz
or
adc
mov
lods
pop
in
pop
in
pop
pop
stc
int3
or
fsts
ror
inc
cmc
in
test
jbe
xchg
ja
negl
mov
repnz
arpl
inc
jmp
mov
fsubs
push
repnz
jp
fisttpll
jecxz
sub
enter
jae
adc
ss
notb
pop
adc
imul
call
pushf
xchg
and
mov
shlb
dec
scas
ret
jmp
xchg
hlt
ljmp
lret
and
outsl
ja
pushf
push
les
dec
pop
and
push
gs
mov
dec
pushl
lahf
lcall
imul
mov
filds
jg
icebp
mov
jle
addr16
pusha
lock
jl
or
nop
cmp
add
imul
insl
fmull
mov
jbe
ror
arpl
arpl
pop
cli
out
xchg
xor
pop
sub
aad
pop
push
inc
and
mov
mov
pop
push
pop
xor
pop
repnz
sub
in
pmullw
imul
fcomps
jle
enter
xor
mov
jae
pop
jo
movsb
lods
popf
dec
lret
push
lahf
or
jae
mov
mov
mov
neg
insb
mov
jbe
movsb
fldcw
sahf
cltd
xchg
ljmp
cwtl
sbb
test
inc
xlat
pop
push
mov
xchg
dec
movsb
rcll
js
gs
leave
inc
in
call
mov
mov
loop
or
es
push
jbe
push
cmpsb
mov
jg
in
scas
dec
jg
sub
aam
sub
adc
lahf
and
dec
or
mov
mov
xchg
mov
jge
test
clc
jg
aas
or
movsl
dec
or
or
ss
ljmp
scas
in
push
int
testl
stos
xorb
cmp
mov
orl
das
dec
inc
or
loopne
mov
dec
ja
je
jmp
in
leave
in
sbb
dec
fs
sti
and
lods
inc
jbe
outsb
test
jb
fldcw
fs
lret
outsb
mov
rolb
popa
dec
jge
or
inc
pop
mov
aad
xchg
lea
fcoml
adc
sbb
in
je
push
push
pop
ss
mov
cltd
adc
xor
insb
pusha
add
movsb
iret
pushf
cmp
and
mov
sub
int
enter
ss
out
stos
ja
daa
sbb
dec
add
push
pop
inc
into
push
cmpsl
pop
lahf
gs
cmp
cmp
xchg
or
mov
aam
push
mov
adc
and
push
insl
dec
mov
mov
aad
gs
loop
mov
hlt
mov
in
pop
jae
outsl
in
ret
bound
jne
dec
push
cmp
mov
pop
test
jp
add
mov
lcall
add
movsl
movsl
inc
lea
loopne
xor
sahf
rclb
push
fistps
dec
ds
inc
xchg
sbb
out
jb
out
rorl
sub
jno
mov
and
addb
and
push
jl
add
cmpsl
inc
insb
add
inc
fwait
mov
insl
int
add
in
sub
push
add
xor
push
rolb
mov
jmp
cli
aam
jno
pop
fwait
push
mov
loop
push
outsb
cmp
jmp
daa
aad
test
xorb
stos
push
add
testl
mov
lds
xor
mov
jbe
dec
enter
cmp
sahf
mov
cmp
addl
jmp
lcall
pop
mov
xor
repnz
repz
pop
inc
ret
fildl
pop
cmpl
fiadds
in
add
add
or
neg
xor
adc
inc
std
dec
fcom
mov
das
cwtl
pop
mov
je
sub
pop
jne
outsl
sub
ret
lock
mov
js
or
jmp
fwait
push
sahf
xor
sub
adc
xorb
pop
sahf
sub
inc
gs
push
adc
mov
jbe
pop
mov
lods
imul
cwtl
jmp
xor
aas
in
mov
daa
daa
in
pop
dec
out
mov
orb
adc
mov
push
push
mov
and
sbb
pop
int
mov
aas
pusha
sbb
push
loope
test
add
mov
inc
pushl
cmp
loop
sahf
out
pop
push
gs
into
xlat
push
test
add
iret
fisttpll
mov
frstor
mov
mov
icebp
fmulp
sub
xchg
mov
inc
sbb
cmp
cs
adc
mov
into
xor
lcall
inc
mov
mov
push
or
push
fwait
sub
mov
xor
popa
shlb
or
in
jno
sbb
imul
fidivrs
push
mov
dec
out
insb
ss
jle
inc
sarb
xchg
stos
jl
ret
jne
cmpsb
jnp
sub
jno
xchg
ret
fcomps
stc
lock
pop
or
js
adc
cmc
in
fstpt
leave
push
insb
pop
jne
jo
shr
jle
add
mov
std
sbb
and
cmp
xor
sbbb
xchg
mov
cmpsb
arpl
into
xor
lods
jnp
inc
jo
adc
repnz
mov
inc
add
pop
jnp
cs
jg
add
jo
add
mov
mov
pop
xchg
andl
mov
in
xchg
int
repz
mov
mov
test
or
jl
sbb
dec
cmpsl
mov
add
repz
in
inc
pop
sub
xor
cld
pop
sub
loop
out
in
test
mov
or
pop
lods
orb
and
sahf
adc
push
mov
adc
mov
pop
cmc
clts
jo
imul
xlat
cld
in
jecxz
pop
mov
loope
sub
dec
sti
lock
mov
orb
fistpll
xor
test
fidivl
enter
popf
cmpl
sarb
rol
jmp
or
shrb
jg
lea
imul
sub
jns
xchg
add
hlt
andb
inc
mov
sub
add
xor
cmp
cwtl
movsl
out
or
pcmpgtw
call
cmp
pop
repnz
jecxz
dec
xchg
lods
ror
add
cld
inc
jns
cwtl
mov
fistpll
mov
ljmp
cmc
mov
jle
pop
insl
ret
xor
and
adc
clc
adc
push
or
mov
fstpl
cmp
lcall
aaa
inc
mov
lds
loope
jl
sub
push
cwtl
fcmovne
inc
cltd
lret
test
adc
mov
xor
add
xchg
lock
outsb
or
pop
xlat
shlb
or
cmc
adc
or
dec
sub
cmc
call
xchg
cmp
mov
jno
inc
pop
inc
test
orb
lds
sbb
jns
sub
lds
test
and
jae
mov
ja
popf
mov
inc
lea
icebp
jecxz
lds
xchg
mov
outsb
nop
das
dec
push
cltd
mov
vmread
jp
imul
movsl
jmp
out
stos
clc
pop
mov
fs
outsl
or
sbb
xchg
ret
iret
out
mov
push
sbb
push
pushf
sub
arpl
and
mov
negb
repnz
jecxz
jns
enter
or
jo
mov
cmpsb
cwtl
arpl
xor
jg
mov
jmp
scas
out
cmp
or
mov
mov
push
sbb
pop
and
mov
and
push
ljmp
insl
scas
inc
mov
stos
mov
ret
clc
xchg
pop
negb
add
pop
cmp
inc
bound
push
inc
jae
inc
add
cmp
cmp
mov
inc
pop
xor
arpl
stc
push
fldt
mov
xor
stc
cwtl
jmp
inc
lods
jae
inc
pop
cmpsl
nop
adc
jl
pop
and
inc
sbb
adc
ret
push
pop
jle
test
jge
sub
mov
push
inc
jae
jae
adc
hlt
mov
mov
sbb
in
push
mov
mov
in
mov
push
mov
in
ja
dec
mov
in
aam
pushf
jg
mull
push
mov
in
adc
call
lods
and
pop
hlt
daa
lcall
insb
fists
sub
nopl
dec
mov
xchg
lds
adc
mov
inc
test
gs
repz
mov
mov
shrb
or
popf
aas
out
mov
movsl
stc
xchg
mov
das
mov
fcomps
jmp
ss
inc
pusha
stos
sbb
insl
jl
and
fwait
and
test
call
outsl
ficoms
inc
mov
jg
fldt
dec
adc
ret
jmp
xor
pusha
mov
aad
sti
jbe
dec
xor
xchg
and
jnp
xchg
filds
xor
and
and
sti
roll
arpl
and
pop
pop
cltd
insb
cmp
mov
inc
rorb
fimuls
scas
xchg
cmp
jne
ss
jns
push
add
mov
xor
mov
std
add
adc
repnz
aaa
shll
cmp
push
sar
aaa
lock
aam
pcmpgtb
jnp
sub
in
adc
xor
jne
mov
inc
rcrl
jo
jns
jne
or
xchg
nopl
mov
or
int3
xor
sbb
andl
push
lea
lods
add
push
stos
gs
and
adc
push
lahf
sub
mov
and
imul
jno
and
sub
mov
mov
fisttpl
sti
icebp
xor
aam
jae,pt
inc
repz
out
loope
adc
add
xor
and
repz
jnp
or
and
xchg
cmp
pushf
and
movsl
fistps
inc
cmpb
add
jle
movsb
push
sub
xlat
or
or
dec
aaa
into
add
stc
mov
inc
add
cltd
jmp
mov
cli
dec
jnp
xchg
test
cli
sub
loop
lds
and
mov
fs
xchg
push
dec
adc
aad
nop
xor
cld
inc
cmp
cmpsl
or
stos
jp
xor
jne
pop
int3
xchg
imulb
shrb
bnd
xor
push
ret
cld
push
hlt
jo
pop
adc
sahf
push
mov
or
and
pop
or
jbe
and
adc
push
mov
ja
addl
jge
fidivrl
pushl
push
push
inc
jae
cmc
mov
push
aas
imul
jnp
pop
ficompl
fistps
lahf
scas
jmp
xchg
insl
sbb
jns
outsb
lods
pop
es
cmc
add
xchg
dec
notb
inc
jnp
das
out
lds
call
push
xchg
hlt
and
pop
cmp
fidivs
mov
out
and
cmpsl
loop
mov
test
hlt
movsl
adc
xchg
pop
in
jne,pn
push
cwtl
mov
in
bound
imul
push
mov
pushf
andb
mov
cmp
jp
cs
mov
xor
mov
das
enter
jecxz
inc
mov
lahf
stos
inc
in
nop
jle
test
enter
xchg
push
ss
jmp
jmp
loope
jmp
adc
iret
fidivs
inc
rorl
repz
sbb
sbb
ds
push
xor
scas
movsl
xor
jmp
out
mov
dec
insb
outsb
mov
imul
sti
int3
xor
movb
lcall
xor
pop
adc
jl
mov
cli
in
cwtl
add
jecxz
out
imul
push
mov
jb
push
mov
sub
ds
sbb
test
mov
sbb
push
test
into
adc
shlb
push
add
outsl
or
in
imul
pop
pop
jl
rol
mov
loopne
jecxz
xchg
xchg
hlt
jo
mov
hlt
enter
add
aaa
jle
pop
cs
fwait
lahf
fadd
mov
lahf
clc
stos
imul
mov
ret
fistps
outsb
dec
cmp
or
and
adc
and
rep
cli
jecxz
setae
mov
mov
pop
insl
jo
dec
pushf
or
outsb
or
dec
popa
adc
std
push
cmpsb
sahf
imull
or
dec
jecxz
or
pop
adc
or
sub
inc
mull
push
lea
imul
sbb
aaa
pop
aad
aam
mov
sub
mov
cltd
cwtl
mov
cwtl
test
dec
pushl
xor
push
and
incl
lea
int
or
push
addb
hlt
imul
adc
add
icebp
xor
int
xchg
gs
mov
fidivs
rorb
hlt
fisubl
mov
popf
cmc
lcall
mov
sbb
cmp
mov
add
pop
push
mov
stc
cli
sub
lock
mov
call
cwtl
xor
xorb
jle
push
outsl
idiv
repz
enter
dec
push
fwait
ja
icebp
sti
pop
les
test
push
sub
rorl
int
test
xor
jb
scas
out
imulb
neg
dec
daa
jle
xor
pusha
push
sub
inc
pop
jecxz
xchg
imulb
mov
push
mov
sub
pusha
lahf
xlat
pause
xchg
push
mulb
and
hlt
mov
mov
adc
lahf
repz
push
adc
fidivrs
push
lea
pop
dec
ds
inc
dec
dec
and
jb
psubsw
cmp
sbb
stos
out
add
icebp
das
xor
repz
lock
mov
xchg
dec
ss
push
test
sub
xchg
loop
ss
mov
dec
and
xlat
and
xchg
pop
cmp
adc
jnp
sub
hlt
sar
mov
xor
push
cs
inc
movb
xchg
jb
enter
cwtl
push
mov
mov
addr16
cmp
pop
xor
cmpl
pushf
xchg
xchg
mov
enter
mov
push
mov
hlt
test
mov
push
clc
arpl
pop
mov
mov
mov
in
sub
out
cs
cmpl
lcall
faddl
bound
push
jecxz
push
in
push
xor
cs
sub
mov
hlt
xchg
xor
xchg
mov
mov
scas
push
push
mov
mov
inc
fld
loope
cmp
jae
pop
mov
cld
push
loop
mov
lea
fisubs
jo
push
cmpl
mov
inc
sbb
mov
sbb
int3
loope
out
loope
xor
repnz
mov
rcr
inc
lcall
pushf
push
gs
cmp
pop
sahf
int
cmp
mov
call
lcall
pop
into
xor
xchg
add
rcrb
xor
inc
jnp
dec
gs
stc
loopne
in
pop
xchg
jb
inc
pop
and
cmp
and
gs
sbb
mov
ljmp
inc
mov
imul
cmpb
cli
sahf
mov
pop
es
or
mov
inc
cmp
sub
xor
das
lret
pushf
popf
sbb
dec
pop
lods
mov
cmp
loopne
popf
push
mov
pop
andb
jae,pn
adc
int
mov
arpl
scas
iret
arpl
pop
rclb
out
pop
dec
push
inc
loope
sbb
ja
pop
into
mov
shl
xor
pop
push
adc
and
iret
imul
loop
lods
ljmp
mov
loope
out
jnp
sti
jp
inc
sahf
jnp
jno
or
leave
mov
sub
hlt
sarb
jno
pop
cmp
mov
out
or
mov
or
or
push
xlat
push
out
aas
mov
lods
and
dec
jnp
inc
dec
jge
lock
out
data16
or
mov
daa
js
les
subb
jl
test
xor
pop
out
xchg
addr16
sub
push
aaa
aaa
and
ds
adc
scas
imul
out
lock
repz
shrb
sub
cltd
mov
imul
push
mov
shlb
pop
es
idivl
inc
sub
xor
pusha
aas
ret
jge
fiaddl
pop
pop
sub
dec
mov
xor
mov
sbb
cwtl
leave
adc
mov
lea
push
test
xor
cwtl
jl
daa
gs
jmp
jmp
iret
sbb
adc
dec
mov
ret
xchg
mov
lock
push
push
ja
and
shll
mov
sbb
mov
lea
leave
test
xchg
add
xchg
dec
push
pop
jns
xchg
test
data16
lods
outsl
push
cltd
or
in
and
aad
loop
ret
mov
adc
ljmp
ret
and
shl
sbb
addr16
pushl
sub
fwait
pop
jle
sbb
cmpsl
xor
insb
dec
mov
loope
pop
mov
pop
xor
popf
dec
sarb
dec
cltd
pop
shl
jle
jns
push
in
or
divb
sub
lahf
mov
push
push
xor
cltd
xchg
mov
push
mov
pop
sbb
xchg
mov
ficomps
jmp
xor
pushf
mov
popa
cmp
mov
pcmpeqd
rcrb
adc
xlat
fldenv
rcr
js
inc
push
push
fiadds
pop
push
insl
push
pusha
test
aam
sub
shr
imul
dec
in
or
aas
push
mov
movsl
scas
dec
int3
bnd
or
imul
or
inc
sarb
mov
flds
mov
rorl
xchg
inc
mov
or
repnz
lock
jge
out
sub
pop
mov
xchg
ret
cmpl
mov
aaa
jmp
xchg
dec
mov
sub
adc
jno
aad
add
xor
sbb
lods
jns
pop
daa
and
xchg
jl
test
test
sbb
pop
lods
clc
jmp
shll
mov
cmp
cltd
cmp
adc
mov
mov
inc
js
pop
or
xchg
jnp
jle
test
mov
data16
and
sub
dec
hlt
jmp
lret
or
mov
arpl
cwtl
cmp
in
js
sarl
ret
fildl
cld
jle
or
cmp
fwait
pop
hlt
dec
out
scas
mov
mov
rcrl
loop
xor
subb
add
jl
add
adc
push
sarl
scas
or
bound
mov
push
nop
fwait
sbb
mov
push
adc
movsl
hlt
sub
xchg
pop
rcrb
or
aam
mov
dec
js
into
sbb
cmpsl
dec
push
or
lcall
aaa
jl
icebp
dec
fwait
xchg
push
dec
fmulp
adc
out
out
cld
cmp
mov
not
sahf
sub
decb
jp
out
add
mov
and
adc
mov
std
sbb
bswap
arpl
mov
repnz
repz
mov
repnz
data16
mov
jne
add
or
aas
adc
inc
in
mov
scas
xchg
lret
mov
pop
shlb
push
mov
test
xlat
je
adc
dec
push
xchg
ror
test
nop
push
gs
mov
jp
insl
add
jmp
and
cmp
dec
and
stos
cli
fimuls
mov
cmpsl
add
cwtd
iret
inc
push
imul
sub
cli
jb
mov
or
mov
sub
pop
jns
out
les
dec
shlb
sbb
int
adcb
mov
xchg
fdivs
xchg
push
daa
in
lock
rcrl
xchg
insl
das
bound
les
sahf
jb
vdivps
sub
rcrl
es
mov
push
ret
xchg
ljmp
cwtl
jecxz
or
or
mov
or
insb
dec
nop
or
mov
pop
mov
data16
clc
and
stos
popa
sbb
mov
out
pop
or
lock
mov
test
sub
in
outsl
xor
sub
imul
push
popf
ss
sbb
cmpsl
fsubrl
pop
xlat
fcoml
push
shr
jl
xor
pusha
xlat
fimuls
inc
loope
push
dec
in
inc
jo
lock
pop
fwait
addr16
mov
mov
insb
lds
mov
sbb
pop
dec
mov
dec
push
jl
xor
loope
movsb
mov
mov
mov
jnp
bound
das
scas
repz
cmp
push
mov
mov
mov
cmp
insl
scas
adc
xchg
jmp
fildll
out
or
pop
flds
mov
ja
sub
mov
push
pop
cmp
mov
inc
jmp
add
and
hlt
mull
pop
fs
pop
cmp
shll
repz
ret
xlat
sahf
andl
push
insl
jno
fidivl
ror
inc
arpl
mov
mov
dec
ljmp
jg
mov
cmc
xor
xor
pop
xchg
iret
loopne
mov
loope
and
xchg
rcr
inc
lea
mov
fildll
lods
imul
push
ja
test
jae
sub
inc
loope
subb
add
adcb
lods
mov
lret
test
mov
pop
mov
mov
out
jae
popf
filds
cmp
pop
xchg
mov
xchg
sbb
pop
inc
pusha
popf
ljmp
dec
adc
dec
cmc
and
aaa
loop
in
or
cwtl
call
push
or
sub
fwait
or
scas
adcl
dec
mov
icebp
sbb
or
xchg
or
aaa
lea
push
cmp
mov
lock
cmpsl
loop
lea
inc
loopne
pop
movsb
out
jo
nop
comiss
lods
out
jnp,pn
cld
push
into
push
sarb
dec
inc
cmp
sbb
xorl
cwtl
or
or
inc
cmp
stos
jno
rorl
push
test
hlt
push
or
add
pop
mov
ret
sub
cmp
cwtl
mov
stc
sub
add
popa
or
in
sbb
hlt
fistl
dec
pop
popf
fildl
fdiv
mov
jmp
repnz
mov
mov
out
or
fdivrl
xor
xchg
pop
mov
inc
int
or
jge
mov
call
sub
add
xor
xor
jb
add
or
jno
mov
pop
pushf
pop
loop
inc
lea
lea
xor
mov
jecxz
repz
dec
in
mov
fbld
mov
jns
iret
mov
inc
jne
loopne
fsubr
aad
ljmp
mov
mov
mov
xor
aad
mov
cmp
out
cmpsb
push
inc
jmp
cwtl
xor
mov
insl
and
lret
mov
sahf
jl
in
aad
cmpsl
add
ja
pusha
cmp
mov
sub
sti
ja
mov
push
out
and
scas
into
in
push
push
stc
int3
inc
dec
jbe
ja
lahf
scas
lahf
or
mov
test
pop
mov
mov
mov
push
test
dec
sub
fisttpl
mov
and
imul
push
dec
imul
adc
push
stc
stc
xorb
xor
stos
gs
pop
and
test
test
mov
push
outsb
aad
insb
jo
sub
xchg
and
xor
sbb
jne
xchg
or
jo
xchg
xchg
ficomps
clc
sub
scas
jb
repz
ret
ret
sbb
rorl
lret
cmp
sub
mov
loope
fcomps
xor
jbe
out
mov
push
dec
loope
sbb
out
loopne
add
pusha
add
dec
pop
cmp
push
pushf
das
push
fdivs
ret
imul
jno
dec
adc
inc
pop
dec
jl
sbb
insl
sbb
jne
add
or
jge
cmp
add
popa
out
imul
out
call
add
mov
jmp
mov
sbb
leave
mov
pop
mov
fidivl
popa
adc
push
scas
fldenv
inc
jg
and
jge
cld
xchg
xlat
clc
orl
adc
imul
cltd
pop
and
lret
push
sub
icebp
inc
adc
jns
cltd
pop
add
subb
repz
push
cmp
push
aam
arpl
push
cmp
push
ljmp
fimuls
pop
xchg
jmp
xchg
int3
les
dec
pop
sub
jne
daa
dec
pop
dec
xchg
fs
add
inc
cmc
sbb
jbe
jmp
jnp
xor
sub
ret
jae
xchg
fildl
into
clc
jle
mov
push
xchg
mov
jb
mov
cli
push
jb
or
add
jae
loope
mov
leave
mov
adc
rolb
add
xchg
repnz
dec
shrb
jb
xchg
xchg
scas
cmp
jo
mov
lods
loope
push
and
decb
icebp
or
jae
and
jl
movl
dec
dec
add
xor
and
bound
push
sub
fnstenv
mov
ret
jbe
and
xchg
jge
enter
inc
stc
insl
xchg
jle
inc
loope
mov
mov
faddl
mov
lods
fdivrl
xchg
push
xor
pop
cmc
sahf
fxch
mov
add
insl
inc
cmp
pop
or
mov
xor
push
mov
mov
pop
pop
imul
mov
sub
add
cmp
cmpsl
cmpsl
dec
hlt
shll
das
or
outsl
dec
push
add
mov
lods
dec
push
shlb
and
dec
lcall
in
jmp
pop
aaa
lods
add
pushf
jge
push
xor
mov
jl
mov
mov
nop
mov
push
add
mov
aad
js
mov
pop
cmp
cld
sbb
add
mov
fst
xchg
fldl
cmp
cmp
xor
sbb
stos
or
push
lret
jecxz
outsl
rcr
sarb
pusha
or
xor
sbb
sub
adc
cltd
cmp
adc
mov
ds
jbe
sti
shl
xor
jns
inc
icebp
xor
jo
cmp
cmp
popf
mov
fs
mov
divb
mov
movsb
je
sar
cmp
pop
fwait
cmp
pop
addr16
mov
ret
push
xor
arpl
add
dec
inc
loope
lahf
xchg
lea
pop
sbb
lock
mov
leave
or
out
cmpsl
mov
lods
jmp
les
cld
xchg
in
mov
or
push
cltd
mov
pop
inc
and
paddb
sub
in
or
xchg
jmp
out
mov
mov
mov
jle
imul
cli
shrb
pop
push
dec
xlat
xchg
cs
test
stc
add
dec
and
fs
subl
xor
fs
mov
out
in
orb
mov
pushf
cmp
shll
cmp
dec
xchg
pop
jne
loopne
aad
mov
mov
xchg
inc
out
rol
stc
lods
movsb
insl
and
mov
cli
mov
in
push
imull
pop
and
adc
mov
cmpsl
mov
lods
inc
sub
daa
mov
add
xchg
push
cmpsb
mov
jo
jnp
fisubrl
lret
and
xchg
mov
les
cs
fisttps
out
sbb
subps
pop
setnp
xor
cli
les
outsl
pop
adc
and
xor
ror
lods
dec
imul
inc
fwait
xor
inc
push
std
and
adc
mov
sub
push
xchg
sahf
xchg
loop
pop
lock
jns
mov
dec
sub
mov
and
mov
jg
mov
daa
ds
into
sub
ficoml
lock
cmpsw
xchg
jmp
inc
outsl
pop
mov
jge
addr16
adc
clc
lret
xor
jne
xchg
sbb
jns
cmovl
pushf
push
push
adc
loope
pop
outsl
adc
and
clc
and
and
sub
hlt
stos
psrlw
sbb
popf
cmp
mov
sarb
xchg
rorl
test
cwtl
sbb
test
mov
push
jnp
je
inc
pop
aam
int
jl
mov
and
sahf
je
pop
cltd
xor
xchg
xchg
cmpsb
add
mov
cmc
scas
or
icebp
push
outsl
cmp
inc
push
cmc
xchg
xchg
lea
jecxz
into
and
sti
cltd
dec
je
mov
mov
jmp
fidivrs
dec
jge
sub
imul
sub
push
push
nop
dec
shlb
gs
xlat
clc
fmuls
test
dec
xchg
enter
mov
xchg
cmpsb
fcoms
cmp
inc
push
int3
lods
sbb
and
fdivrl
cmp
rorl
add
pop
cs
stos
lret
leave
push
sbb
jge
sbb
mov
insl
cmp
hlt
and
mov
adc
in
cmp
dec
jae
std
sub
add
das
cmc
push
mov
jne
push
dec
push
inc
cmp
dec
push
fldt
push
mov
mov
stos
call
stos
mov
sbb
test
stos
jbe
outsl
cld
fisubl
aas
sub
or
daa
xor
jge
sbb
mov
pop
xchg
cld
push
scas
inc
mov
xor
cli
cmpsl
aaa
inc
setg
xor
dec
add
mov
mov
ds
std
movsl
out
jl
int
leave
repz
lock
movsl
test
xor
push
sbb
push
movb
cwtl
sub
push
mov
outsl
rolb
xchg
mov
or
movsb
cmp
push
fsubr
sbb
popa
adc
sbb
ljmp
loopne
and
or
dec
push
inc
callw
dec
pop
add
adc
xchg
xchg
adc
push
mov
sub
mov
outsl
enter
xchg
mov
jl
mov
or
sbb
adcl
sub
jo
mov
fmulp
stos
inc
scas
add
insl
xor
jno
ds
jmp
mov
lahf
xlat
cmp
ja
test
scas
push
gs
movsb
popl
dec
hlt
inc
sub
je
sub
dec
cmp
es
sub
lret
xor
sub
mov
xor
ja
xchg
mov
mov
mov
sbb
cmp
outsb
sbb
cmp
subl
in
cld
xor
scas
in
ror
lods
or
test
mov
add
adc
fs
fisttps
or
pop
xchg
pop
dec
out
jp
sbb
jb
fldl
adc
push
mov
out
cld
inc
mov
in
xchg
and
popa
aad
clc
xchg
dec
pop
mov
sahf
popf
sbb
sbb
mov
bound
add
int3
cltd
mov
adc
and
push
ret
mov
xor
dec
fsubrs
add
cld
js
testb
xchg
call
jecxz
pop
in
push
fcompl
sahf
sub
and
lret
jo
dec
dec
cmpsb
ret
inc
mov
out
test
popa
cmpl
pop
dec
pop
aam
cmp
mov
ljmp
pop
or
sub
add
xlat
or
ss
aam
adc
andl
push
cvtpd2pi
cs
xchg
mov
jo
loope
das
pop
fiadds
mov
lods
mov
lahf
pusha
mov
sbb
loop
lcall
dec
adc
or
movsb
ficompl
xchg
or
pop
js
call
pop
pop
adc
cmp
cmpsl
addr16
push
add
add
mov
sub
popf
test
lret
fimuls
loopne
jae
push
arpl
shrb
faddl
loop
mov
mov
outsl
mov
inc
in
or
sahf
pop
sub
xor
jnp
outsl
mov
dec
cld
jmp
add
push
mov
jl
and
fistpl
test
adcl
dec
stc
daa
aam
test
add
popf
pop
sub
in
loopne
addr16
jns
cmpsb
sub
mov
push
inc
mov
out
mov
mov
jmp
stos
js
lock
out
into
iret
adc
repz
inc
popa
xchg
dec
sub
gs
movsb
sub
mov
mov
mov
sbb
mov
ret
loop
sbb
adc
in
mov
loop
enter
repz
clc
push
lods
xchg
std
mov
adc
idivl
les
push
mov
cmp
or
cltd
adc
inc
or
xor
sbb
leave
dec
rclb
js
fldenv
cmp
iret
cltd
pop
addr16
xor
cld
dec
push
dec
pop
mov
push
push
outsl
int3
fisttpll
orb
ds
mov
ja
dec
fwait
xchg
or
mov
enter
pop
mov
lds
daa
dec
insl
sbb
adc
aad
scas
mov
add
jmp
shlb
xor
xchg
out
mov
lahf
mull
lahf
cmpsl
dec
inc
std
pop
xchg
sub
arpl
push
std
pop
cmpsl
sbb
sahf
xor
dec
sub
jne
sub
lcall
inc
aam
clc
pop
in
mov
jmp
shr
aam
outsl
lock
and
or
add
movsb
mov
cmc
xchg
icebp
add
cltd
inc
push
cmpsb
mov
jbe
loope
insb
test
xchg
out
fcoml
ja
xor
pop
ret
cmc
pop
sbb
arpl
imul
mov
and
xor
sbb
add
into
fistpll
lock
dec
cltd
cmpsl
test
pop
mov
lcall
mov
push
or
or
sub
jb
out
jmp
and
dec
inc
cmp
gs
add
psrlq
cld
xor
jns
add
pop
jnp
sahf
mov
in
jns
mov
cli
loop
rorb
vmovups
arpl
lods
adc
add
leave
jno
push
inc
stc
xchg
and
insb
xchg
pop
hlt
adc
jne
call
add
mov
sbb
mov
in
mov
and
out
stos
and
repnz
cmp
mov
out
stos
es
lods
in
sub
fistl
pop
ret
cmp
pop
test
jge
rcll
int3
shll
sbb
test
clc
inc
loop
inc
pop
mov
mov
push
inc
xor
inc
or
and
or
ja
jp
adc
dec
lret
bound
std
gs
je
ret
loope
cs
call
popf
adc
dec
sbb
test
sub
mov
repz
mov
mov
add
sarl
pop
xor
aas
je
adc
push
cmp
pop
sbb
xchg
gs
ss
leave
lret
cmp
sbb
je
leave
cmp
push
add
pushf
scas
in
jo
mov
add
mov
push
or
lds
add
push
add
fsubs
cltd
rcll
subb
or
insl
jmp
gs
jae
or
mov
xchg
jae
xchg
and
xchg
inc
pop
inc
xchg
test
adc
arpl
cmpsb
fsubl
sub
and
jnp
cmp
repz
or
stc
pop
adc
dec
adc
mov
sti
leave
fstpt
jmp
insl
jmp
and
stos
dec
cmp
pop
mov
int
jmp
pop
fsubs
mov
or
mov
mov
adc
inc
add
test
test
ja
inc
int
popa
jbe
cmc
inc
out
ds
into
mov
pop
lods
mov
cmp
xor
xchg
xor
push
xchg
mov
gs
ss
mov
jb
inc
int3
repz
clc
std
xchg
iret
lods
shl
mov
xchg
cli
sbb
and
fistpll
clc
fwait
ds
int
sarl
inc
push
rolb
negb
popa
shrl
enter
cmpsb
lret
mov
add
xchg
daa
pop
fstl
mov
cmp
sti
mov
int3
or
mov
cmp
lds
jo
repz
call
push
pop
insb
out
push
jb
decb
pop
xchg
outsl
ffree
pop
nop
ds
cmp
xor
das
ret
insb
lock
push
and
lds
out
mov
gs
xacquire
scas
and
popf
push
testl
nop
and
add
sub
adc
int3
push
mov
cmp
cmp
cwtl
sub
aas
cmp
lods
mov
aas
or
aas
adc
jge
out
push
xchg
cmp
pop
and
push
outsl
call
ficoms
sbb
mov
lret
push
repnz
enter
add
mov
scas
mov
clc
cmpsb
sar
lods
rcrl
cmp
test
leave
jne
dec
cmp
and
lds
lods
sbb
xor
adc
cmpsb
mov
xchg
xor
mov
outsl
inc
rclb
xchg
add
stos
cwtl
or
arpl
scas
mov
fwait
and
adc
and
mov
movsl
js
add
add
mov
add
add
add
stos
xor
adc
push
adc
scas
add
lods
add
into
mov
dec
fwait
xor
push
inc
fwait
loopne
lea
ja
pop
add
sbb
mov
pop
ljmp
mov
sahf
mov
dec
push
into
fcoms
std
int3
lock
daa
push
or
push
loopne
push
enter
lret
and
mov
sbb
mov
roll
dec
lea
jecxz
push
push
inc
sbb
mov
and
jnp
push
pop
inc
out
rcll
mov
fdivs
pop
sbb
mov
stos
repnz
stc
or
adc
test
dec
ret
jle
dec
in
fsts
es
and
xlat
push
pop
mov
push
and
outsl
mov
rorl
in
jle
inc
imul
out
stos
or
out
push
push
out
and
inc
jne
sub
adc
rcrb
jbe
jecxz
jbe
inc
pushf
and
fs
jbe
xor
repz
icebp
nop
in
pop
pop
loopne
mov
jb
fcmovne
add
add
dec
mov
test
int
xor
cmp
fs
mov
xchg
cmp
push
and
hlt
cmpsb
add
xchg
mov
roll
test
ret
imul
fdiv
ds
cmp
push
dec
adc
cmpb
lea
pop
push
mov
aaa
cmp
mov
jbe
cmp
aas
or
or
xchg
jmp
push
js
sbb
les
sti
fwait
or
mov
addr16
jno
icebp
sub
push
cwtl
orb
aam
push
pop
push
data16
repnz
xchg
pop
cmp
adc
xchg
push
cmp
aas
xor
repz
sbb
add
adc
lcall
xchg
mov
cli
xorb
stos
lods
ret
loopne
mov
mov
repnz
jo
sbb
ljmp
pushf
push
or
jecxz
and
xor
mov
adc
int
mov
mov
in
push
or
jne
mov
sub
stos
test
fwait
addr16
ds
arpl
out
pushf
shrl
call
ja
int3
mull
daa
add
fdivr
mov
push
daa
push
popa
das
daa
jl
les
push
lret
pop
mov
jle
push
mov
in
fwait
xor
sub
lea
les
fcmovnbe
sub
xchg
mov
mov
aaa
rcl
repnz
and
cmp
or
push
add
mov
insb
idivb
sub
push
sbb
and
mov
xor
pusha
mov
inc
add
fdivl
add
adc
fwait
aas
loopne
mov
mov
movsb
jnp
cmc
roll
imul
dec
lods
or
mov
adc
mov
xor
mov
jecxz
in
aas
subl
adc
adc
xlat
mov
in
fwait
xchg
xchg
xor
adc
dec
clc
cmp
nop
or
push
cmp
bswap
mov
xchg
inc
add
in
xor
sbb
inc
mov
hlt
mov
mov
inc
xor
sbb
jp
lods
ljmp
call
fldcw
xor
cmpsl
mov
pushf
push
mov
lahf
in
xchg
jmp
or
push
sbb
lret
test
sbb
aam
cmp
xchg
and
push
fisubl
sahf
push
xchg
cmp
push
mov
stc
and
les
pop
pop
mov
pop
inc
data16
inc
aas
mov
lock
int
inc
cli
cmpsl
and
pop
jnp
cmp
cmp
nop
mov
fsubl
out
jg
mov
int
test
xor
decl
mov
cmp
icebp
or
mov
cmp
jns,pt
push
movsl
add
or
sub
cmp
out
stos
mov
fistpl
rcll
jb
insb
fdiv
inc
data16
lret
outsb
xchg
call
push
jne
sbb
xchg
pop
das
push
push
mov
cltd
jne
lret
je
sbb
std
fidivl
dec
mov
xchg
adc
inc
imul
and
ja
jae
das
movsb
cltd
rorb
mov
aaa
lcall
repnz
xor
add
push
xchg
shlw
jae
or
and
pop
sub
int3
xchg
push
cmc
fcoml
pop
jnp
cmp
dec
push
clc
jnp
pop
dec
ljmp
sub
xor
ret
sbb
iret
cli
addr16
pop
sahf
mov
push
stc
adc
cmp
xchg
rcrb
icebp
aaa
push
push
ja
jno
jecxz
incl
lods
sbb
xor
dec
adc
mov
popa
lock
push
or
sbb
clc
xorb
inc
pop
stos
dec
mov
loop
push
int
sbb
jp
push
sbb
xchg
nop
gs
mov
mov
mov
jno
lret
xchg
mov
hlt
xlat
adc
xchg
cli
push
daa
int3
push
mov
sbb
loopne
lods
pop
adc
mov
imul
mov
test
sti
push
notl
test
leave
jmp
js
data16
push
iret
jnp
mov
or
paddsb
mov
xchg
in
cmp
push
inc
call
and
dec
mov
in
sar
iret
repnz
rcrb
ss
mov
ss
test
pop
daa
xor
or
aad
bound
movsl
mov
imul
xchg
adc
and
call
daa
ds
xchg
push
shll
mov
movaps
aas
mov
fisubrs
mov
les
xchg
xlat
shll
mov
std
xor
jge
pusha
pop
cmp
ret
mov
mov
push
das
sbb
outsl
decl
cld
test
fs
cmp
sub
pop
or
pop
gs
sahf
push
dec
movsb
xchg
or
cmpsl
int
loop
loop
pushf
push
xchg
push
clc
push
sub
add
dec
call
scas
sub
pop
ret
and
mov
sbb
inc
insl
test
lret
nop
push
shrl
mov
orb
daa
sti
dec
stos
dec
push
fwait
addr16
adc
push
xor
cmpsl
fs
and
pop
push
aam
repnz
mov
and
pop
push
sbb
fadd
push
mov
sub
sbb
mov
out
rorb
out
test
movsl
jo
test
push
js
das
fbstp
or
or
pop
dec
mov
and
fbld
push
pop
decl
or
push
icebp
push
loope
cli
shlb
movsb
aas
and
mov
mov
add
insb
push
test
sahf
arpl
jno
orb
adc
mov
mov
sti
and
out
mov
xchg
xchg
mov
lods
mov
mov
mov
dec
mov
jbe
or
jbe
sbbl
pop
xchg
aaa
ss
xchg
xchg
cmp
out
jo
and
pop
stos
xlat
xchg
lods
add
mov
in
push
mov
dec
jg
cmp
lock
push
add
iret
leave
jno
shll
fldenv
sbb
mov
or
int
xor
jmp
lret
add
mov
xor
jmp
das
jb
test
inc
mov
insb
add
mov
imul
sahf
shl
imul
andb
pop
mov
arpl
cmp
jne
xor
shlb
xchg
cmp
sarl
push
push
out
jo
ficomps
jmp
fcmovu
add
sbb
adc
sub
mov
clc
lret
mov
scas
rcll
in
adc
jnp
shll
sbb
and
lea
sbb
mov
jo
je
shrl
ror
and
cmpsb
inc
ja
ficompl
or
rcrl
gs
mov
pop
sbbl
jb
or
cmp
fs
sub
mov
ret
int3
pop
pop
jp
sbb
jne
out
mov
mov
pop
ss
pop
sub
cmpsb
cwtl
fs
ds
adc
mov
mov
inc
cmpsb
push
in
or
cmpsl
push
das
mov
mov
fs
js
cwtl
inc
je
fsts
sti
ret
int3
int3
jl
outsl
dec
mov
jmp
xor
mov
int
xor
push
outsb
push
daa
subb
mov
sarl
stc
add
adc
mov
dec
hlt
cmp
sti
push
adc
inc
jmp
cmp
filds
and
jmp
inc
jnp
push
jl
sub
mull
insl
jo
jecxz
fwait
imul
cmp
lods
xchg
sub
loopw
jle
mov
ret
aas
pop
out
xlat
mov
inc
mov
daa
mov
lea
cmpsb
aas
xlat
sub
mov
cmp
ret
xchg
mov
aad
addr16
sbb
mov
jo
add
addr16
jo
push
std
data16
shlb
lret
lcall
leave
out
lret
inc
push
lahf
ret
xchg
aad
add
insb
pop
std
stos
or
dec
cltd
pop
inc
cmp
adc
and
xor
dec
rorl
movsl
repz
inc
push
xchg
repz
sub
mov
shrb
push
cmc
dec
ret
xor
push
mov
xlat
das
in
je
fstcw
imul
andl
sysexit
psrlw
xchg
iret
adc
xor
dec
cltd
ficompl
mov
sahf
xchg
scas
popf
cmc
repz
pop
mov
lahf
repnz
mov
sub
cmpsl
pop
or
push
sub
adc
ds
sub
loope
ret
fs
inc
ja
jbe
push
icebp
push
adcb
and
fadds
add
cmp
mov
stos
xor
ret
inc
aad
enter
xchg
popf
cmc
inc
mov
fwait
push
pop
lods
cmpsl
adc
les
les
cmp
dec
xchg
divl
inc
jmp
das
and
outsl
scas
push
adc
pop
ret
sub
test
cmp
and
lcall
cs
movsl
dec
sahf
psrlw
dec
mov
sbb
push
jl
push
pop
adc
testb
fidivrl
mov
sub
mov
bound
push
dec
lock
call
dec
pop
inc
gs
stc
adc
jg
ret
js
xchg
mov
outsl
pop
jno
inc
xchg
jle
imul
out
sbb
dec
push
dec
push
idivb
mov
sbb
jb
sub
hlt
sub
adc
and
and
cmp
int3
mov
inc
inc
outsb
test
push
mov
mov
sub
mov
xchg
fbld
clc
mov
bound
sub
shll
mov
loop
xchg
imull
fs
jno
jo
jo
mov
scas
mov
addl
and
dec
in
in
adc
pop
in
rorl
rcll
sub
stos
fstpl
lea
out
inc
mov
mov
aam
and
xchg
enter
mov
sub
sti
std
pop
dec
xor
mov
sbb
test
ret
push
push
dec
fldcw
pop
stos
mov
dec
jle
scas
mov
das
fbstp
xchg
or
xor
lds
loope
fs
into
mov
sub
clc
jo
repz
sbb
mov
lods
mov
bound
out
push
sub
js
sub
nop
mov
shrl
jo
xor
outsl
adc
inc
repnz
sti
test
loope
fdivl
or
bound
mov
mov
xor
cmpl
mov
stos
jle
or
inc
push
stos
pop
mov
popf
dec
bound
or
pop
andb
xchg
xor
push
jmp
gs
add
cmp
add
gs
push
nop
test
and
mov
or
cmp
mov
lret
sub
cmp
pop
out
mov
icebp
and
sub
mov
aam
fiadds
jnp
rcrl
xor
sti
inc
repz
push
rol
outsb
jg
sub
cmc
xchg
pusha
inc
shl
stc
scas
push
push
push
sbb
shrb
inc
aas
lea
rolb
outsl
xchg
xor
insl
mov
test
add
push
push
push
mov
ret
arpl
mov
push
push
sub
and
mov
aad
xlat
dec
and
jo
scas
and
pop
inc
pop
cld
in
push
test
les
ds
std
push
or
std
push
pop
jp
cli
jb
mov
daa
mov
repz
test
inc
loope
cld
add
inc
fs
lods
or
add
mov
je,pn
test
cltd
inc
jge
jne
cmp
negb
xor
mov
and
movaps
imul
or
cmp
cmp
test
push
mov
in
sbb
fdivl
pop
imul
test
fwait
movsl
push
std
xor
sub
jmp
addr16
pop
out
pop
and
mov
dec
scas
or
test
jbe
cmpl
subb
ret
movsl
and
mov
mov
jecxz
mov
stos
mov
mov
or
idivl
mov
lock
sbb
mov
out
inc
cwtl
je
ret
jnp
mov
fs
int3
jmp
pop
les
and
cmp
pop
mov
pop
iret
orl
mov
int3
outsb
mov
int3
outsb
dec
add
sbb
push
js
stos
xor
out
popa
stos
jnp
outsb
jbe
xlat
lcall
jae
int
dec
or
orl
sub
clc
mov
add
cmp
enter
xchg
pushl
inc
les
std
pop
imul
pop
adc
sub
loopne
int3
fstps
insb
xor
xchg
push
cs
enter
sbb
add
fcompl
fimuls
adc
sar
sar
xlat
insb
inc
pusha
sub
popf
mov
push
int3
dec
push
jmp
ds
adc
sahf
mov
fmuls
fsubs
outsl
adc
out
cmp
cmp
jnp
xor
cltd
fwait
pop
cmp
test
loop
or
es
ja
frstor
dec
test
aas
fstpl
sub
out
jg
inc
push
orb
lods
insl
push
inc
or
push
xchg
pop
pop
mov
mov
movsb
lds
jne
imul
mov
and
or
cs
loopne
push
or
out
cmp
mov
add
cmp
ret
out
sbb
sahf
lea
in
xchg
mov
pop
pop
or
dec
mov
outsb
ds
or
scas
mov
aam
mov
sarb
and
sub
in
or
aas
jne
sub
xor
jl
sub
les
push
xchg
cmp
repnz
and
into
sub
mov
and
mov
mov
sub
rolb
xor
pusha
jno
pop
jge
insl
cmp
xchg
ret
jo
mov
idivl
jbe
mov
repz
repnz
xor
inc
xor
and
jmp
rorb
lods
stos
push
sub
ja
and
mov
jg
clc
add
mov
arpl
lret
mov
jg
dec
push
xor
or
cmp
sbbl
add
gs
aad
sbb
jl
lea
leave
jnp
pop
add
add
nop
cmpsb
sbb
cltd
in
dec
mov
inc
and
mov
sbb
add
inc
xor
or
sbb
mov
fistl
mov
jb
jb
xor
nop
je
outsb
cmpsb
in
clc
iret
pop
cli
rcll
or
jecxz
test
push
xchg
dec
daa
push
outsb
adc
sub
fisttpl
push
push
dec
sub
adc
jecxz
push
dec
mov
scas
add
jns
out
cli
pop
and
push
pop
ret
scas
test
icebp
or
pop
jae
enter
or
inc
sti
xchg
and
stos
scas
add
andb
xchg
jno
or
cmp
es
ljmp
and
push
test
pop
int3
mov
cmp
pop
dec
fs
add
sub
push
shlb
test
call
fucomp
gs
inc
clc
jno
in
mov
inc
pop
and
sub
test
mov
repnz
cmpsl
fmuls
sti
insb
sarl
jnp
hlt
hlt
testl
and
es
leave
lahf
cs
daa
push
jle
into
shll
pop
sbb
aas
andl
add
repz
mov
je
cmp
clc
in
sub
inc
movsl
loopne
sti
ja
cs
mov
shlb
mov
bound
mov
cmp
stos
cs
add
popa
jmp
sti
xor
jge
lds
int3
inc
dec
dec
pop
pop
jo
popf
ss
in
shlb
test
mov
add
lds
xlat
lret
popa
test
jae
push
enter
dec
es
out
fsubrl
cmp
and
aam
push
jl
push
arpl
or
dec
xchg
mov
push
pop
int
inc
pop
scas
cmpsb
mov
xchg
psrlq
push
clc
enter
mov
cmp
and
xchg
int3
cltd
repz
dec
fistl
cmpsl
pop
repz
mov
ljmp
lahf
or
jl
pop
rorb
js
into
popa
popa
pushf
mov
repnz
pop
insl
out
call
and
lret
jmp
fsubrl
sub
mov
mov
pop
xor
je
es
fcomip
jecxz
pop
aad
sbb
jns
cmp
xor
cld
fisubrl
call
fwait
jne
arpl
push
lahf
jne
pop
mov
sbb
cli
lods
lea
jl
add
mov
push
aaa
lods
inc
sbb
cltd
fdivrs
mov
mov
pop
adc
test
mov
addl
add
call
mov
sub
push
mov
inc
pusha
dec
mov
cmovno
hlt
in
enter
mov
je
lods
sbb
jge
sbb
nop
test
jnp
daa
and
lcall
push
insb
aaa
jp
xchg
cmpsb
arpl
mov
pop
cmp
jnp
or
dec
fistl
pop
mov
int3
subb
add
cmp
rep
divb
mov
pop
sbb
je
fcomps
shlb
xchg
push
fsts
arpl
aam
push
mov
in
cmpsl
scas
icebp
pop
jns
int3
scas
outsl
fs
lret
jl
adc
rcrl
pop
mov
inc
test
rorb
mov
in
push
in
in
insl
xchg
cmp
loop
xchg
mov
stc
mov
or
adc
or
hlt
movsb
pop
sub
inc
pop
scas
xchg
push
aam
into
xchg
xor
cltd
mov
clc
nop
sub
xor
dec
imul
fsubrs
sbb
aam
sti
adc
aaa
pop
iret
cmpsb
pop
mov
cli
pop
lahf
movsl
adc
mov
decl
add
daa
sarl
adc
popa
mov
idivl
mov
pop
lds
sarl
call
mov
scas
pushf
cmpsb
shrb
push
xchg
mov
xor
jo
xchg
sub
jl
push
jle
aad
ret
lds
push
and
clc
xor
ret
imul
mov
push
data16
add
icebp
js
fcoml
inc
inc
movsb
adc
adc
cmpsb
leave
shr
cmc
inc
pop
mov
push
icebp
into
aad
rorb
lret
add
imul
and
and
in
mov
aas
adc
and
push
mov
out
dec
add
test
out
xchg
mov
js
repnz
test
jns
and
xlat
leave
xchg
sti
loope
inc
int3
outsb
jns
scas
xchg
stos
sbb
das
cmp
mov
or
sbb
shrb
enter
ljmp
fldenv
xchg
in
shufps
sub
or
in
lea
lods
pop
cld
sub
cld
sbb
lcall
xchg
jmp
cli
jecxz
mov
jp
mov
fstpt
jmp
jp
sahf
push
nop
jecxz
imul
mov
add
jae
mov
pop
fsubp
fidivs
mov
inc
ffree
adc
aad
xchg
adc
mov
mov
and
stos
repnz
cmpsb
scas
jno
adc
jo
inc
jo
pop
pop
inc
fldenv
adc
inc
fbstp
mov
cmpsb
sti
sub
aaa
push
pop
pop
mov
push
cwtl
push
or
mov
inc
out
inc
dec
cmpsb
into
and
andb
lcall
pop
fmull
test
inc
addr16
sti
mov
pop
nop
mov
add
cmpsl
das
cmp
mov
cmp
pop
ror
dec
inc
sahf
daa
and
push
or
inc
jg
sbb
sub
mov
nopl
push
fwait
dec
push
sub
xchg
movsl
enter
jo
jae
jbe
xchg
cmp
cmp
rolb
and
jns
and
out
fidivs
in
mov
inc
dec
xor
aad
push
fstpt
or
sbb
lods
inc
sbb
sbb
lea
aaa
push
mov
add
jle
pop
les
jne
adc
loop
or
pop
sbb
sbb
pop
jae
ljmp
or
lahf
call
pop
pop
dec
sub
mov
sub
xchg
fdivp
out
std
cmp
aaa
mov
inc
out
and
stos
sbb
fistpl
add
das
rorb
iret
aas
sbb
in
es
cs
inc
call
and
call
scas
out
xor
xor
mov
dec
mov
mov
cmp
jnp
xlat
nop
outsl
add
pop
cwtl
lods
pop
mov
loopne
dec
or
test
test
pusha
movb
jno
sti
inc
jmp
je,pn
push
stc
das
fimull
push
out
pop
add
mov
js
lcall
adc
in
dec
test
fildll
dec
jmp
xor
push
mov
cltd
push
push
lea
nop
fwait
testb
xorb
add
mov
xorb
or
sub
mov
xchg
jae
push
mov
sti
dec
jg
mov
dec
aaa
cld
or
inc
push
aaa
inc
call
push
jnp
push
push
mov
mov
aas
jb
mov
in
xchg
mov
add
negb
cmp
stc
sbb
divl
lahf
sbb
and
shr
xor
and
divb
add
mov
ljmp
scas
cmp
xchg
testb
aaa
sahf
rcll
mov
addr16
mov
pushf
xchg
inc
pop
inc
icebp
popa
test
cli
sbb
or
orl
inc
decl
pop
or
insl
push
insl
les
mov
fsts
mov
sar
xor
mov
xorps
je
xchg
cmp
aas
cmp
push
and
icebp
stos
mov
xchg
shr
add
in
and
or
insl
and
or
testl
bound
pop
push
test
testb
rcrb
daa
push
sahf
aam
pop
scas
dec
loope
inc
mov
mov
jecxz
fcoms
sarl
or
test
test
push
clc
neg
scas
xchg
insb
sarb
icebp
inc
fdivs
xchg
mov
sbb
xchg
pusha
and
add
sbb
imul
jb
pop
call
pop
cmp
mov
mov
orl
fwait
mov
loop
push
sbbb
push
popf
jo
cmpb
lds
dec
mov
push
mov
or
stos
push
fildll
cmp
push
cmp
test
push
shlb
movsb
test
cmp
insb
adc
outsl
decl
fsubrs
inc
xchg
sub
sub
mov
popa
shll
jge
add
lcall
ret
in
mov
sub
movsb
testb
pop
dec
in
cwtl
mov
aaa
daa
xchg
push
cmpsb
push
int3
xchg
stos
dec
push
orl
or
add
in
lret
add
jne
sub
mov
pop
inc
mov
adc
xchg
mov
js
insb
sbb
cmp
imul
mov
test
sub
add
xor
cmc
ret
arpl
jbe
and
xorb
pop
jmp
and
dec
mov
xchg
or
stos
xor
ret
jle
add
mov
jbe
jbe
sub
pop
inc
cmpsl
fwait
shlb
lods
clc
add
ficomps
pop
push
lock
fs
adc
mov
je
mull
pop
inc
mov
sub
lods
mov
jg
xchg
insl
ficoms
mov
push
xchg
sub
and
rclb
or
inc
out
test
jmp
mov
fildl
cmp
xlat
ret
push
fimull
xchg
dec
mov
mov
add
pop
shrl
jle
mov
jb
push
lock
dec
test
jle
std
ficomps
xor
pop
mov
jb
roll
stc
mov
int3
push
loop
call
sub
inc
mov
inc
push
jnp
push
inc
insl
ror
and
sahf
cmp
xor
pop
inc
pushf
mov
sarb
or
and
xor
cmp
mov
andb
arpl
fsubl
push
fidivs
xchg
sahf
repnz
jns
out
or
std
mov
movsl
arpl
aad
adc
adc
mov
insb
mov
ss
dec
aam
aam
sbbb
push
outsb
and
iret
lret
vpmovzxbw
cltd
mov
fnstenv
add
scas
scas
or
stos
dec
ljmp
nop
cmp
outsl
cmp
jp
dec
stc
test
push
inc
push
jae
cmpsl
pop
int
pushf
pushf
mov
mov
ljmp
bound
dec
subl
adc
call
xchg
and
jne
lahf
shrl
mov
into
iret
sbb
ja
test
xchg
mov
les
int3
push
sbb
xchg
adc
pop
jle
xchg
and
cmpsl
mov
jo
push
xor
fistpll
cmp
addb
or
test
leave
mov
popf
loope
add
into
ss
dec
inc
sbb
fcmovbe
push
rorl
xorl
fidivrl
sub
dec
sti
jp
in
loope
sbb
cs
pop
mov
mov
out
push
mov
sti
test
xor
imul
es
ret
and
dec
mov
cwtl
pop
fcoms
push
cli
mov
lods
mov
adc
sub
xor
dec
xchg
in
xchg
jp
lahf
xor
sub
cmp
aaa
sbb
rcll
imul
int3
sub
int
ljmp
mov
sub
sbb
into
mov
xchg
lods
push
or
xchg
jnp
push
xor
adc
les
inc
cmp
cmpsl
adc
push
fisubrs
pop
aam
test
call
push
in
mov
xchg
add
or
or
sbb
sub
cmpsb
lock
jle
mov
inc
sub
sti
ss
test
out
pop
fsubrl
in
xor
push
das
mov
ljmp
aas
dec
mov
popa
xchg
movsl
testb
aaa
xchg
inc
mov
push
outsl
jp
pop
es
lods
adc
push
enter
out
jae
sbb
loope
cmpsb
xchg
dec
arpl
fldt
lock
mov
or
jle
gs
insb
stos
mov
sbb
das
je
sbb
jnp
stc
mov
mov
jbe
sarl
into
push
je
ret
inc
es
popf
outsl
fimull
pop
or
add
xchg
xor
lock
stos
fcmovnu
add
sub
inc
mov
push
pop
push
or
and
sbb
stos
les
les
mov
out
push
mov
daa
add
cld
idivl
jbe
dec
leave
sahf
les
sahf
dec
fwait
sarl
add
sub
or
icebp
mov
ja
mov
pusha
jl
inc
out
cmp
or
sbb
scas
lahf
out
mov
test
test
cli
out
lahf
add
popl
lahf
xchg
ljmp
outsb
add
test
cmp
pop
jno
sahf
out
jb
jb
fiaddl
or
pop
inc
mov
sbb
ljmp
shrb
cmp
jae
fnstenv
adc
pop
and
fwait
xchg
ret
xchg
or
jecxz
sarb
push
cmc
lea
pop
ret
popl
mov
jb
roll
mov
sbb
push
inc
mov
pop
sub
jle
jp
out
mov
nop
daa
ret
ss
sbb
lret
mov
jno
sub
push
mov
mov
fld
fidivrl
addr16
lea
into
rorl
xchg
int
or
adcl
mov
in
js
adc
push
sub
adc
or
nop
mov
hlt
mov
push
daa
xor
mov
int3
cmp
mov
jns
pop
pop
aaa
pop
lock
dec
sahf
cmp
inc
cmp
mov
jmp
pop
adc
in
pop
push
loope
dec
push
adc
sbb
rorb
or
dec
inc
enter
pop
mov
dec
dec
push
arpl
sub
mov
insl
sar
push
adc
jbe
push
pop
push
pop
dec
rclb
cmp
mov
aad
push
shll
adc
mov
dec
int
mov
add
mov
inc
inc
xor
push
adc
jns
sbb
add
pop
leave
mov
daa
and
aas
jo
stos
jle
fs
or
inc
mov
and
xor
xor
push
aas
push
or
adc
cld
sub
push
fistpl
sbbb
xor
mov
mov
pop
daa
xlat
dec
mov
mov
inc
push
gs
push
enter
mov
test
fs
fimull
aad
add
cwtl
push
in
fadds
movsl
movsb
lock
fwait
test
les
nop
cmpsl
adc
pop
jl
cwtl
adc
lea
xor
dec
sahf
call
mov
mov
xor
jle
jle
cmp
jp
jecxz
cmpsl
fwait
lods
and
mov
push
arpl
pop
mov
dec
mov
roll
imul
lods
or
xchg
pop
mov
lds
jg
outsb
out
cmpsb
jbe
mov
shr
jb
fisubs
stc
lahf
shll
lea
enter
je
loop
and
ljmp
inc
das
les
cmpsb
or
add
jbe
orb
mov
xchg
xchg
dec
pop
push
push
out
shll
push
push
xor
dec
insb
jle
mov
xor
adc
jl
pop
shlb
dec
cmc
je
push
xor
jns
and
std
je
cltd
test
mov
inc
call
jle
jge
dec
sub
push
xor
and
push
stos
mov
arpl
das
mov
and
out
mov
in
pop
and
out
data16
mov
push
fistl
outsl
and
data16
and
lahf
in
fs
mov
test
cmc
and
sub
sahf
arpl
adc
mov
lods
testb
iret
xchg
mov
xchg
dec
loop
mov
pop
push
sbb
icebp
jno
inc
cmp
adc
rclb
jbe
loope
lock
xchg
pop
sahf
or
sub
pop
adc
in
xchg
in
les
mov
xor
mov
and
add
mov
jmp
push
fnstsw
jle
cmp
ljmp
popa
nop
dec
push
fstl
push
in
ret
mov
or
mov
and
cmp
inc
fwait
movsl
cli
or
adc
jl
jns
push
dec
sub
push
push
adc
in
or
jns
insb
mov
adc
nop
insb
lods
sub
out
scas
jnp
test
das
test
xlat
mov
and
insl
fdivs
loope
xchg
pop
inc
cmp
out
inc
sub
mov
ss
add
out
pop
movsb
jmp
sub
add
out
pop
jle
lret
cmovnp
js
and
mov
lcall
sbb
lds
mov
les
mov
imul
jecxz
jb
cmp
cmp
das
bound
dec
jg
loop
add
cmp
dec
sahf
mov
shrl
sub
dec
idivb
xor
push
jne
imul
fcomps
xchg
sub
mov
enter
lea
pop
xchg
inc
rcll
icebp
out
and
adc
es
add
mov
popf
and
daa
and
cmp
mov
dec
sbb
jl
and
sbb
ds
push
push
addr16
xchg
hlt
xor
hlt
ljmp
insl
scas
fwait
addl
iret
lret
repz
push
enter
mov
xor
pop
jmp
sub
push
stc
nop
cmp
mov
pop
pop
sub
sahf
add
insl
fadd
cwtl
mov
les
or
int3
pop
jl
jg
iret
loope
leave
mov
pop
fdivrs
cmp
and
xchg
gs
pop
xchg
mov
sub
mov
mov
fcmovnu
inc
xchg
test
addr16
fimuls
pushf
mov
insb
mov
add
insb
or
ficomps
xchg
inc
ficoml
je
mov
jle
loope
fsubrs
lds
mov
pop
std
icebp
push
xchg
push
xchg
fimull
or
out
lock
cli
mov
dec
xor
stc
popf
aaa
cmpsb
je
jle
lret
mov
test
pop
fwait
push
insb
fs
or
cmp
les
call
loop
mov
cli
sub
cmp
or
in
dec
ret
lods
push
cld
int
pop
jmp
outsl
xor
xor
sub
xchg
test
test
sahf
lret
ja
out
mov
int
mov
push
popf
add
pop
cmp
xor
pop
adc
movsb
pop
add
cwtl
mov
push
lds
mov
sbb
mov
push
rorb
cmp
adc
push
jne
shrb
xchg
bnd
push
dec
fnstenv
xchg
inc
outsb
sbb
mov
mov
mov
dec
cmp
int3
mov
ret
in
in
cmp
cmp
jge
nop
mov
jl
in
or
ret
jp
jae
int
bound
shrl
shll
sbb
hlt
mov
jne
insl
getsec
or
pop
sbb
dec
fistps
jno
add
int
xor
sub
dec
shll
jmp
enter
jecxz
cmpsl
in
negb
push
and
gs
bound
shrb
add
mov
clc
out
mov
xchg
es
cltd
mov
mov
xor
mov
mov
fs
movsb
ret
cli
xor
es
ljmp
rclb
mov
push
imul
roll
jae
cmp
int3
shrb
jb
sub
test
int3
sti
stos
mov
cmc
jne
mov
xor
inc
xchg
call
pop
in
repz
mov
mov
add
jns
ret
push
or
sub
lret
in
rcll
mov
jecxz
inc
nop
sub
out
pushf
mov
cltd
pop
int
lods
test
or
in
lcall
arpl
nop
cs
jmp
pop
popa
stc
push
je
or
hlt
test
pop
push
jle
rclb
loop
clc
xor
inc
xlat
cmp
rcrb
xchg
mov
dec
fbld
add
cli
cmc
push
jl
mov
cmp
jbe,pn
rolb
shrl
jae
movsl
rorl
pop
aam
cmp
jg
mov
repz
push
dec
cmpsb
xchg
dec
roll
push
les
fwait
jo
pop
mov
lods
lcall
sub
shll
sub
in
push
je
fwait
sub
jnp
mov
ja
mov
mov
cs
in
xchg
fwait
xchg
sub
xchg
pushf
add
or
out
jl
dec
pop
and
jge
add
dec
aad
js
xchg
nop
cmpsb
lds
pop
not
inc
daa
mov
and
mov
cmp
mov
les
pop
insb
push
adc
lahf
cmp
sahf
rclb
shrl
ljmp
add
push
push
inc
cmpsl
bound
not
and
in
dec
push
cmc
adc
dec
xorb
jnp
lods
xor
movsb
xor
insl
test
mov
mov
test
lcall
jecxz
mov
sub
int
movsb
pop
int
daa
lret
jmp
add
push
std
popa
dec
dec
jb
into
inc
out
cs
and
les
out
lock
or
test
inc
mov
outsb
add
sbb
and
addl
mov
dec
dec
cmp
push
or
into
insl
xchg
leave
fstp
lock
jl
pop
mul
iret
sub
xchg
out
push
push
adc
negl
into
dec
and
push
in
out
mov
sarl
xlat
fidivrl
ds
pop
jmp
sub
mov
add
mov
dec
mov
out
adc
dec
icebp
inc
loop
adc
jp
mov
cmp
and
pop
sbb
ret
movsl
rcrl
fists
push
jo
lcall
mov
push
pop
clc
jg
in
cwtl
pushf
loop
pop
pop
aad
mov
pop
lahf
aas
fmuls
pop
sub
js
jno
cwtl
lret
and
sbb
push
lds
call
adc
jns
insl
lods
ja
test
lcall
cmp
lods
mov
sbb
jp
cwtl
cld
push
pop
cmp
xchg
inc
mulb
lods
test
push
xor
add
adc
xlat
cli
push
hlt
test
add
mov
xor
es
into
adc
push
out
dec
fldenv
jns
mov
and
out
jmp
mov
add
cltd
cltd
addr16
mov
ficoml
pop
idivb
mov
mov
sbb
cmpsb
lcall
dec
lcall
inc
fcoml
xchg
add
sbb
int3
rcl
mov
push
xchg
pop
cli
dec
push
xor
xchg
jno
in
leave
sbb
loop
push
mov
cmc
lods
shlb
adc
sti
inc
jo
aas
mov
imul
inc
mov
add
push
aaa
xchg
lods
push
lahf
dec
aaa
mov
mov
push
inc
sub
mov
xlat
or
data16
sbb
stos
cmpsl
cmc
xor
out
testb
cmc
insl
ja
stos
xor
dec
jno
ret
jge
aad
jl
mov
xchg
lds
xchg
mov
mov
test
cmp
movsb
mov
push
loope
mov
std
mul
jb
clc
jnp
adc
xchg
cmp
orl
sub
cmp
lods
jmp
mov
ds
inc
std
and
xchg
es
xor
mov
in
aad
jmp
mov
adc
daa
add
and
lods
push
in
in
sbb
mov
sub
jnp
and
pop
pop
adcb
cmp
test
mov
aas
dec
ljmp
rcrb
add
mov
dec
sbb
push
test
inc
test
push
add
sti
xchg
out
repz
pop
add
push
xor
xchg
and
jae
aad
jns
clc
sub
lahf
dec
mov
lahf
shrb
enter
sbb
xchg
sub
adc
shrl
arpl
sbb
pop
push
add
in
sbb
push
addr16
mov
data16
cld
insb
sbb
fcmovnb
decl
mov
push
dec
adc
shll
sub
add
lods
mov
rcr
mov
pop
pop
fistl
out
insb
cld
arpl
mov
sub
add
lds
in
add
loop
and
iret
jge
aam
je
orl
xorl
pop
and
test
xor
aad
mov
sbb
sub
push
or
add
cmp
push
sarl
mov
insb
lcall
lods
cmp
fmul
aas
jmp
loop
jp
test
mov
xor
sbb
sbb
int
mov
je
and
xchg
adc
mov
leave
cs
jg
dec
fbstp
mov
mull
jmp
pushf
and
rcr
clc
sbb
sub
dec
fs
popa
popf
mov
arpl
inc
inc
test
jb
xchg
or
dec
xchg
add
dec
jmp
and
pop
jo
inc
sahf
daa
push
gs
or
push
popa
or
sbb
cmpsl
and
pop
test
adc
xchg
lock
jno
out
jge
loop
cli
fistps
jne
inc
subl
jle
pop
popf
insl
sbb
push
fisubl
cmp
std
ja
gs
dec
mov
and
xchg
lods
ja
sub
push
dec
repz
jle
jne
insb
sub
bound
inc
cwtl
test
aad
cs
out
mov
cld
mov
insl
aam
xchg
xchg
arpl
mov
cmp
jb
add
xchg
cld
add
hlt
movsl
rol
mov
adc
loop
push
enter
mov
inc
loop
or
jne
in
mov
jns
mov
push
push
fwait
mov
bound
sbb
ret
jb
insl
fbstp
mov
sub
shlb
andl
adc
mov
stos
lds
loop
stos
mov
sub
mov
dec
ss
orb
or
or
out
dec
cmp
push
cmpsl
in
rcrb
pcmpgtw
call
pop
xchg
fsubr
mov
lods
ja
cmpsl
pop
pop
lds
ret
push
xchg
out
xchg
cld
rorb
insl
jmp
insb
popa
sub
pushf
movl
movb
mov
add
dec
lock
and
push
loopne
in
in
and
ljmp
jle
push
stc
cmp
subb
xchg
xchg
dec
sub
xor
add
fnstsw
lds
xchg
cmpsl
outsl
stc
mov
gs
popf
out
ret
pusha
nop
cmp
mov
mov
push
nop
mov
das
xor
aas
clc
xor
xchg
repz
ret
push
mov
in
xlat
xor
incl
enter
mov
lock
dec
cs
iret
dec
inc
cmp
sub
jg
push
lds
jno
popf
out
popa
xor
push
lcall
cmpsb
movsb
mov
shll
pop
jecxz
cld
fwait
push
pop
movsl
pop
sbbl
pop
stos
add
jp
sub
pop
das
in
inc
cs
fwait
jb
mov
sbb
pop
out
into
pop
into
sahf
in
and
jae
sbb
mov
jo
or
in
jae
add
jo
ds
mov
add
testl
cmp
push
adc
add
dec
cmp
js
stc
test
mov
pusha
jl
jle
push
out
xlat
mov
adc
sbb
adc
cmpsl
jmp
push
jo
in
mov
sbb
mov
mov
mov
into
pop
cmpsl
cli
das
pop
xchg
jo
int3
test
sbb
lret
cwtl
mov
mov
add
mov
mov
and
mov
and
push
sbb
movsb
jg
mov
push
orl
inc
adc
pop
js
into
test
jmp
mov
sub
jb
or
ds
sub
fsubs
fidivrs
mov
fidivs
push
cmpsl
xor
cli
out
mov
ficompl
fdivrs
leave
dec
js
dec
ror
shrb
pop
sbb
mov
sub
dec
push
addb
in
xchg
out
add
push
ds
inc
lock
sti
inc
mov
cmp
data16
dec
ret
push
out
mov
aam
adc
jl
aaa
rol
cmc
pushf
or
jle
in
ret
int3
lods
mov
not
lret
fstps
call
jne
mov
subl
push
outsl
or
fdivp
icebp
or
sub
iret
push
js
test
or
loope
and
rcr
pop
fstps
inc
cwtl
adcb
lahf
push
jl
jle
mov
imul
xchg
xor
cmp
pop
loope
repz
std
push
ja
jle
fwait
shlb
pop
cmpsb
sbb
out
out
mov
dec
mov
pop
push
mov
hlt
ficompl
cli
sbb
jmp
or
sbb
test
pop
into
repz
push
jno
unpcklps
push
mov
rep
leave
mov
sub
dec
outsb
jbe
loope
push
inc
in
rorb
jmp
add
outsb
loope
aad
test
test
mov
cmp
cld
mov
xchg
cmp
stc
mov
push
mov
jmp
negl
divl
fcmovu
mov
push
pop
fwait
aad
dec
dec
rcl
pop
in
repz
aad
xchg
dec
xchg
or
pop
les
fadds
adcb
mov
das
xchg
xor
stc
jge
mov
push
jno
in
inc
pop
mov
je
addb
fwait
das
out
add
jbe
fdivrs
repnz
xor
call
and
mov
push
lods
fs
cmp
icebp
rclb
xchg
mov
jg
push
lcall
loopne
ja
add
cwtl
in
xchg
pop
mov
fucom
jmp
sub
imul
push
stc
xor
cmp
sub
enter
mov
outsb
and
adc
inc
xchg
das
xor
movsb
mov
lock
jno
jp
or
jge
inc
leave
pushf
cmp
adcl
dec
or
shlb
mov
cli
lcall
movsb
out
mov
pop
lcall
mov
xchg
movsb
popa
dec
lea
int3
cmp
fisubs
dec
das
mov
add
stos
mov
xor
add
pushf
jp
dec
das
sbb
test
xchg
xor
sahf
loope
mov
mov
cltd
mov
xchg
loope
mov
push
lods
xchg
mov
or
cmp
in
or
lods
movsl
or
add
jge
push
scas
gs
push
mov
xor
push
pop
repnz
inc
idiv
or
dec
xchg
fwait
mov
dec
sub
pop
fwait
bound
rcll
xor
jmp
cmp
fwait
cmp
ss
iret
fwait
pop
aaa
and
test
or
jbe
int
add
out
scas
call
imull
out
ljmp
sub
push
mov
xchg
imul
push
add
rcll
sub
out
sbb
call
repz
xchg
or
test
test
xchg
xchg
sbb
fs
pop
add
jle
push
bound
mov
cltd
adc
enter
fadd
outsl
mov
mov
in
in
mov
addr16
orl
sub
pop
jmp
stos
mov
jmp
xlat
shl
arpl
lahf
push
and
pushf
adc
cmpsl
cmp
cmpsb
and
cwtl
lret
stos
jle
cmc
add
fbstp
aad
inc
sbb
xchg
cmc
repz
sub
outsl
and
pop
sub
cli
xlat
ds
int
add
dec
pop
or
push
enter
jle
or
jg
xor
xchg
adc
push
mov
inc
add
pop
xchg
aad
sub
inc
cmc
mov
call
lock
std
cmp
aam
lret
and
mov
pop
and
and
cmpsb
dec
inc
or
adc
adc
mov
rcl
clc
mov
jecxz
cmc
aas
in
xor
and
xchg
test
fildl
mov
leave
pop
jae
in
dec
aaa
dec
and
xchg
dec
xchg
fcoms
mov
cmp
loop
bound
in
mov
out
aam
pop
pop
mov
lods
into
or
mov
popf
out
rolb
add
push
sub
jle
out
in
jbe
mov
sub
ret
add
out
dec
sbb
pminub
mov
xchg
xchg
inc
std
mov
loopne
sbb
cs
mov
in
out
in
in
fisubl
iret
cmp
xchg
mov
jp
pop
sbb
lods
jae
pop
invd
push
xchg
adcl
mov
sbb
loope
or
cmc
or
mov
cmp
pop
cmp
fwait
lods
aam
inc
push
xor
pop
inc
and
inc
mov
addr16
idivb
mov
test
and
stc
mov
sub
mov
jb
mov
cli
cmpsl
jbe
and
movsb
push
mov
loopne
divl
call
pop
cli
inc
call
sti
adc
mov
aas
in
iret
cmc
in
icebp
loope
ss
cmp
loopne
rol
inc
fs
jne
mov
int
stc
pop
sbb
enter
jne
arpl
xchg
mov
mov
out
shlb
in
add
cwtl
inc
pushf
pop
fnstsw
fs
js
leave
sbb
xchg
cwtl
sbbb
fnstenv
ret
shll
cltd
dec
rolb
xor
sub
push
xchg
adc
test
shlb
mov
arpl
imul
cwtl
and
shl
in
jle
js
add
xor
outsl
jae
pop
cmp
xchg
repz
mov
stos
push
rol
jo
inc
xor
lcall
jb
movsl
fcmovnb
scas
mov
divl
lret
inc
push
xor
les
inc
sti
adc
jge
insl
jl
mov
xor
loope
addb
pushf
jg
and
loope
stos
xchg
mov
mov
pop
or
push
jmp
xchg
jno
dec
fcmovne
jge
hlt
jle
add
fmuls
cwtl
push
cwtl
pop
xor
inc
or
jp
xor
adc
out
push
sbb
push
cmc
int
pop
ficompl
test
mov
clc
int
sahf
sbb
imul
add
cmp
scas
shr
fs
push
pusha
adc
sub
push
rorb
push
inc
cmpsb
adc
xor
imul
addr16
out
sub
and
push
and
lcall
hlt
notb
push
pop
adc
pop
fs
lret
fsubl
in
jo
faddp
loop
pusha
mov
mov
lret
jp
mov
xlat
nop
int
lods
pop
ret
sahf
lea
or
push
sbb
iret
cwtl
stc
pusha
negb
push
and
or
movsb
inc
or
xchg
psubb
lret
inc
loope
push
mov
sub
lds
call
cmp
out
rolb
mov
push
xor
jno
out
ljmp
cmpl
pop
fsubrl
push
mov
sar
sahf
adc
sbb
cmp
jmp
pop
sahf
aas
into
rclb
enter
jne
fstpt
popa
out
popf
push
cmp
xchg
or
mov
or
xchg
dec
mov
and
mov
push
cmp
mov
and
sbb
and
mov
movsl
mov
add
clc
mov
mov
insb
pop
add
out
xor
and
shr
mov
jle
push
push
push
loopne
shlb
ss
xchg
push
push
data16
adc
jle,pn
push
sub
ja
pop
pop
rcll
pop
fcoms
adc
jmp
ret
xchg
sub
or
jp
scas
adcl
mov
fwait
xor
ds
sbbb
cmpsb
inc
jmp
inc
in
jmp
sub
aas
jge
into
fcoml
push
sti
popf
push
dec
out
inc
pop
cmp
aaa
ja
mov
or
sahf
gs
filds
sahf
mov
cmp
xor
sbb
and
ljmp
push
out
rcr
lret
loop
inc
bound
out
adc
adc
stos
sub
in
ficomps
jnp
mov
enter
xchg
pop
or
mov
sbb
or
ss
sarl
std
popa
cmp
sbb
dec
mov
mov
and
pushf
popf
mov
push
dec
mov
fiadds
xchg
jae
push
imul
and
lock
daa
push
jmp
xor
int
enter
xchg
xor
fistpl
lea
xchg
and
adc
push
sbb
push
mov
ljmp
cmpsb
push
out
xchg
mov
out
mov
cmp
in
pusha
dec
mov
int
dec
rolb
push
or
jo
cmpl
jp
aaa
fnstcw
ret
jb
ror
insl
cwtl
cmp
fistl
jnp
xor
scas
push
dec
test
into
mov
add
dec
push
mov
lea
and
xor
mov
je
jge
bnd
leave
in
mov
sbb
pop
and
jle
jecxz
addb
sbb
or
inc
imul
sbb
es
roll
xchg
push
pslld
pop
jnp
jge
cli
mov
sbb
out
dec
hlt
jbe
insb
cmp
and
movsl
mov
repnz
pop
out
jns
cli
arpl
mov
pushf
push
cmp
addr16
mov
sbb
xlat
inc
lahf
jecxz
xchg
cltd
add
xchg
pushf
ja
aad
push
rorb
mov
sub
lods
xor
loopne
xlat
scas
mov
sub
mov
js
and
mov
sub
mov
cmp
add
mov
lret
data16
mov
test
arpl
mov
cmp
adc
scas
loop
stos
dec
xlat
push
int3
mov
sub
jmp
xor
jb
mov
dec
loopne
jle
jbe
idivb
sbb
aaa
xchg
test
and
fidivrl
hlt
mov
loope
loope
mulb
adc
add
jno
mov
test
cmp
fimull
fwait
cmp
fldt
insb
xchg
out
lea
jae
sbb
mov
das
ret
sub
xchg
xor
push
xchg
fs
std
inc
push
into
mov
aaa
clc
inc
sub
mov
jns
or
dec
cmpsb
fidivrl
test
nop
pop
jp
push
into
add
jmp
xchg
mov
not
or
cltd
cmpsb
and
push
pop
mov
sbb
adc
loope
push
cmp
subb
outsb
pop
pop
stos
mov
dec
pop
mov
mov
nop
xchg
mov
cmp
hlt
inc
arpl
lret
cwtl
out
subl
or
push
mov
imul
adc
sub
or
in
jnp
cld
int
addr16
mov
xchg
faddl
xor
ret
or
xor
ret
decl
test
cmp
ja
dec
test
mov
roll
add
push
sbb
stos
xor
test
pop
xlat
adc
inc
add
ss
loope
mov
cmp
pop
in
inc
cmp
int
or
fidivrs
sub
sub
sub
nop
or
push
push
out
sahf
add
rcrb
xchg
clc
repz
std
aad
jne
loope
in
nop
or
cmp
fcomps
hlt
xor
xor
sbb
mov
arpl
fwait
and
push
pop
inc
cmp
nop
insl
cmp
lods
arpl
inc
aad
push
inc
cmc
cmpl
cmp
aad
pop
and
adc
test
inc
mov
addr16
addr16
add
sbb
ficomps
into
sbb
stc
jbe
mov
mov
nop
add
jnp
loopne
ror
push
icebp
mov
mov
mov
movb
xor
xor
insl
jge
mov
loopne
cmpsl
push
mov
in
xor
sbb
jne
adc
fdivs
dec
push
jmp
jecxz
ljmp
dec
ja
faddl
adc
out
lds
mov
notl
stos
popf
and
lods
pushf
mov
repz
cmp
push
pusha
sub
jne
sub
gs
cltd
sbb
iret
inc
clc
in
mov
daa
mov
inc
data16
jmp
pusha
xchg
nop
leave
pop
sbb
pusha
shlb
mov
addr16
popf
mov
jns
std
adc
cs
outsl
stos
or
test
inc
stos
or
mov
cwtl
cli
aas
sub
js
mov
dec
add
fs
fiaddl
rcr
in
in
inc
pushf
sub
rorb
negb
mov
addr16
repz
adc
mov
mov
aam
inc
rep
mov
xchg
push
push
dec
pop
cmp
out
mov
xchg
lods
mov
and
add
cmpsl
xor
push
pop
sub
dec
push
outsl
orl
mov
decb
enter
jne
and
add
mov
mov
fwait
xor
dec
loop
pop
sbb
leave
mov
xchg
adc
das
cld
out
daa
mov
adc
pop
test
std
mull
ja
rclb
pop
push
mov
insl
mov
popf
aas
cmc
loopne
cmp
cs
js
cwtl
jne
or
jl
pop
or
sub
inc
and
ficomps
repz
pop
lahf
aas
mov
xchg
or
and
lret
jo,pt
test
test
push
adc
jmp
ret
jl
sti
sbb
xchg
jge
adc
inc
sub
imul
cmp
mov
iret
mov
bound
dec
cli
inc
cs
cld
cmp
push
js
dec
pop
es
mov
pop
sub
fdivl
lret
dec
and
out
inc
pop
fs
adc
enter
cs
lods
jns
and
ret
test
stos
adc
jecxz
push
daa
jae
orl
pop
sahf
sbb
rcl
daa
lods
adc
adc
mov
mov
inc
cmpsl
loopne
inc
loop
lcall
jae
mov
ret
xor
pushf
loop
idivl
push
stos
pop
aam
ret
decl
es
mov
in
pop
and
mov
jae
test
notb
js
jl
jecxz
out
in
fsub
aas
pop
dec
lahf
mov
dec
sbb
out
push
cmp
jecxz
push
push
push
jl
bound
orb
fsts
mov
add
add
js
mov
subb
fimuls
fstpt
push
adc
je
jbe
and
and
decl
pop
lret
xchg
mov
mov
xchg
mov
xchg
xchg
lods
rolb
or
daa
add
out
pop
test
push
pop
hlt
popa
ss
pop
popf
nop
aas
and
xchg
dec
lret
ss
nop
test
arpl
cltd
xchg
xchg
sarb
and
lea
insb
mov
mov
pop
cmc
jl
xor
and
lock
or
mov
inc
fwait
push
xor
mov
xor
jmp
frstor
jo
push
sar
add
enter
inc
insb
notb
jns
pop
mov
loope
cltd
lea
mov
jbe
mov
mov
and
into
bound
adc
js
sub
sarl
ret
mov
push
cmc
leave
enter
xchg
int
scas
test
add
lea
fsubs
push
in
jmp
lods
jmp
cs
cltd
dec
mov
jle
into
push
and
fidivl
cmc
mov
testb
pop
add
cmp
repnz
jmp
popa
or
mov
repnz
sub
ficompl
call
inc
into
mov
lds
lods
lock
inc
cli
js
dec
dec
adc
pop
enter
daa
call
cmp
fildl
popf
or
cs
mov
dec
fldenv
and
jb
cmp
adc
adc
je
cmp
data16
jge
bnd
cmp
jle
loopne
mov
dec
mov
je
mov
xor
mov
push
xor
sub
pusha
mov
outsl
loope
dec
or
jle
nop
xchg
out
movsl
xchg
push
xor
arpl
nop
and
lock
in
mov
cmp
mov
add
cmp
cmpsb
push
xchg
loop
mov
pop
jnp
inc
shl
addr16
adc
jl
repz
js
pop
xor
loop
push
fnsave
ja
inc
ficoms
cs
xchg
jp
cltd
clc
mov
jmp
cmp
orb
adc
fs
adc
push
fildll
rorl
sub
shl
mov
or
mov
xor
xchg
popf
insb
mov
js
scas
pop
cltd
testl
out
lcall
movsb
fcomps
cs
aad
push
or
insl
shr
xchg
dec
and
test
pop
lock
xchg
mov
in
pop
cwtl
pop
adc
flds
mov
rcrl
mov
pop
sbb
inc
cmp
icebp
test
minps
ficoml
xchg
fcmovne
roll
add
das
shl
cmp
sti
test
inc
pop
add
cwtl
movb
call
pop
push
fistpl
adc
xchg
jae
out
dec
mov
jnp
dec
fdivs
scas
jge
inc
loop
sbbl
xchg
mov
movsb
ja
push
rcl
sbb
gs
fld
push
rcr
cli
stos
or
addr16
sbb
sbb
cmp
cmp
pop
ret
push
xor
inc
ljmp
cmpsb
mov
cmpl
andl
ljmp
mov
mov
js
xor
decb
rcrb
mov
in
jp
sub
mov
lahf
mov
xchg
pop
arpl
in
inc
lods
jge
iret
xchg
push
das
imul
int3
sub
int3
inc
stos
dec
pusha
and
pop
iret
xor
or
and
sbb
or
mov
xlat
or
hlt
and
js
inc
xchg
adcl
mov
pop
sub
mov
mov
jo
loope
aas
xor
lods
filds
test
sub
repz
sbb
mov
pop
ds
adc
and
pop
jno
das
into
shrb
xor
cmp
lahf
lret
mov
mov
ja
jp
push
lret
pop
ljmp
fildl
in
sub
sbb
sbb
shlb
pop
adc
mov
icebp
add
out
inc
or
fldcw
add
test
sbb
arpl
jo
mov
pop
imul
stc
and
scas
pop
insl
xchg
push
pop
xchg
aad
ret
cmovae
nop
aad
mov
inc
aas
movsb
dec
xchg
inc
int
imul
inc
clc
daa
cmp
or
loop
fidivrl
aad
or
inc
call
pop
call
mov
add
cmp
jge
pop
ljmp
test
mov
iret
jl
add
or
sub
jae
adc
rolb
es
lods
imul
inc
clc
cmp
fcoms
and
pushf
pop
lret
aaa
xor
lret
xchg
jle
push
mov
int3
rcll
imul
ret
pop
popf
popf
out
mov
and
cmpsl
dec
sbb
inc
push
cs
mov
scas
pop
or
cwtl
xor
jo
or
lret
imul
xchg
test
push
xorb
pushf
fxam
faddl
enter
and
lret
pushf
adc
sti
repz
pop
cmp
add
in
pcmpeqd
mov
rol
or
repnz
cmpsl
sahf
popa
push
pusha
ficoml
mov
scas
arpl
push
lret
dec
into
sbb
fs
and
movsl
sub
add
fwait
hlt
fnstsw
xor
inc
mov
jecxz
jle
push
les
mov
inc
enter
in
pop
icebp
jns
shrb
arpl
aad
add
in
sti
or
int
lcall
aaa
xor
inc
aam
mov
and
cmpsl
pop
loop
push
cmp
dec
loop
mov
rol
cmp
loop
call
pop
xchg
mov
rolb
or
test
adc
les
push
xor
pop
arpl
int3
jne
sbb
aas
pop
jnp
adc
lock
testl
pusha
sub
sbb
sbb
out
mov
rol
and
and
jbe
rorb
cmp
fwait
pop
fisubrl
push
sbb
cli
mov
das
outsl
push
or
call
ret
xchg
ret
xchg
sbb
movsb
nop
mov
dec
jb
pop
stos
fst
dec
pushf
xchg
dec
lock
adc
xchg
or
fldcw
push
xchg
sbb
shrl
pop
xchg
jg
adc
jle
inc
or
xchg
in
and
aaa
gs
jo
push
adc
enter
clc
sahf
dec
dec
gs
mov
int3
dec
xchg
outsl
push
xchg
lcall
outsb
aas
dec
jl
fstl
xchg
pop
cmp
fstl
mov
or
add
leave
movsb
xor
xor
jecxz
mov
arpl
movsl
cmp
cmc
pop
mov
xchg
cmc
sbb
inc
jmp
punpcklbw
je
test
insl
jl
jno
shrl
or
int
adc
lret
les
icebp
push
lods
jl
mov
fdivs
fcoms
push
mov
addl
cs
testb
jnp
andb
imul
mov
jl
xchg
mov
and
push
xchg
jnp
outsb
iret
adc
push
out
addr16
push
add
dec
inc
lods
mov
jne
inc
stc
cwtl
mov
out
cmp
shlb
mov
dec
movsb
loopne
xchg
arpl
fwait
or
in
push
xor
test
push
pop
mov
mov
mov
or
xor
addr16
subl
cld
nop
mov
push
cmc
push
subb
hlt
inc
xor
dec
adc
push
daa
mov
xchg
pop
dec
add
mov
jl
ficoms
add
mov
push
ljmp
aam
xor
int
imul
xchg
push
or
adc
ss
mov
cli
cmpsl
mov
pop
sub
push
add
mov
js
in
lds
push
mov
push
fisttpll
mov
cwtl
jecxz
test
adcl
leave
inc
stc
scas
push
or
cmp
and
aas
aad
out
loop
es
ror
lret
or
das
loop
loopne
cli
or
inc
out
or
or
stos
adc
jp
xor
insl
pop
xchg
lds
insl
mov
inc
and
mov
sub
imul
push
mov
cld
mov
dec
clc
mov
mov
dec
jle
push
pushfw
mov
mov
push
iret
sbb
and
push
icebp
sbb
pushf
mov
leave
jns
dec
bound
call
notl
pop
add
lcall
ror
sub
aam
jp
mov
xor
ret
mov
mov
bound
ret
cmp
pop
je
add
jne
jecxz
inc
stos
fld
inc
sbb
inc
repnz
pop
jno
adc
stos
pop
pusha
ds
sbb
mov
dec
int3
pop
sub
rcll
dec
pop
aam
sbb
stos
pop
jl
xlat
call
scas
out
test
add
and
cmp
push
cmpl
sub
mov
rcl
insb
pop
dec
movsb
ja
bound
or
lahf
jo
je
xor
push
pop
rolb
dec
arpl
jge
push
mov
mulb
sbb
dec
xchg
xor
insb
push
cmp
sbb
mull
jmp
hlt
cmp
aam
popf
call
aad
mov
add
subl
push
xchg
aaa
lods
roll
enter
sbb
and
xchg
pushf
jmp
pop
out
mov
fistpll
mov
out
sub
and
mov
adc
aad
fildll
ret
add
mov
loopne
pop
aaa
mov
inc
insl
pop
cmpsl
push
dec
dec
cli
sbb
in
dec
inc
and
clc
push
push
movsb
push
ljmp
add
mov
jg
repnz
hlt
gs
mov
je
mov
mov
jg
hlt
std
jbe
addb
mov
out
test
pop
jne
bound
inc
insb
shr
inc
mov
loop
into
nop
jge
jbe
cmc
into
out
aas
jl
pop
dec
sbb
push
cmpsb
imul
sti
jecxz
or
loope
sbb
jbe
jb
mov
sub
and
popf
xor
cwtl
push
adc
push
adc
xchg
jl
lahf
fildl
add
cmp
inc
je
fistps
mov
lret
pusha
mov
mov
test
sbbb
push
leave
into
mov
push
sub
sub
pop
mov
es
out
jmp
sbb
add
sbb
ljmp
jmp
xchg
pop
jge
and
out
lods
imul
add
jge
xchg
clc
push
fistpll
lahf
leave
pusha
or
sbb
inc
leave
cmpsb
push
cli
sub
insb
mov
inc
xlat
fs
and
out
andl
sbb
bound
dec
insb
nop
leave
mov
add
xchg
lock
std
fmuls
test
out
push
imul
fisttpll
inc
stc
stos
push
mov
in
sahf
inc
mov
popa
sub
jp
inc
dec
xchg
jnp
outsb
xchg
push
clc
mov
sub
and
jecxz
aaa
mov
daa
popf
or
loop
mov
and
aaa
in
jb
fadds
jbe
inc
loopne
lahf
cli
adc
clc
fstpl
aad
xchg
sub
or
aas
xor
enter
scas
add
mov
sub
ljmp
mov
aas
sahf
movsl
jae
rcll
lods
cmp
aas
xchg
adcb
out
jge
out
xchg
add
or
mov
mul
rclb
lret
sahf
or
aam
sub
pusha
xor
dec
stc
in
pushf
cmpsb
aaa
scas
pop
or
xchg
xor
insb
inc
loope
adc
mov
dec
hlt
pop
int
jl
push
rcl
pop
jl
lods
testb
repnz
clc
xor
jnp
jmp
les
test
and
mov
and
xchg
mov
hlt
add
movsl
push
or
pusha
push
pop
and
movsb
cmp
cmpsl
mov
jge
addl
or
lret
push
dec
shll
ret
push
movsl
lods
adc
daa
fists
xchg
xlat
jg
faddl
ds
dec
inc
xor
inc
pop
mov
ficoml
jecxz
sub
lods
mov
push
clc
mov
test
mov
bndldx
lods
mov
mov
lods
jmp
push
sbb
lret
jne
pop
mov
dec
mov
push
lods
add
jg
push
sti
push
aaa
add
loope
add
ret
int3
mov
cld
dec
mov
adc
pop
lret
sahf
jae
int3
or
sub
pop
cmp
int3
or
jecxz
testb
enter
xchg
sub
arpl
sub
xor
mov
mov
call
inc
pop
or
push
jl
mov
lret
scas
mov
or
dec
cltd
pop
dec
fcomp
fsts
inc
jae
shrl
out
aaa
xchg
mov
add
sbb
mov
or
sbbb
pop
iret
xchg
les
pushf
rcrl
enter
fxch
lea
and
lods
decl
xchg
insb
int
movsl
fstpt
in
pop
inc
cs
clc
movsl
out
mov
out
mov
mov
sti
out
pop
ds
or
cmp
aad
lea
subb
mov
psllq
cwtl
stos
lea
sbb
xlat
push
xchg
sub
sub
dec
outsb
and
fst
jg
stos
and
repnz
adc
cmp
xchg
mov
mov
mov
push
aad
sbb
jne
mov
js
decl
dec
loop
cwtl
and
insl
in
popa
add
hlt
mov
jle
sub
fsubrs
inc
inc
push
daa
or
lahf
sbb
ja
loop
xchg
jmp
inc
pusha
sub
xor
idivb
pop
jns
push
pop
push
mov
jnp
fst
movsl
stos
aaa
in
cmp
orb
int3
mov
in
int
sub
arpl
lcall
imul
push
aaa
pop
ss
mov
addl
div
adc
jl
xchg
add
jg
mov
aaa
pop
sbb
ss
out
adc
push
mov
adc
fdivl
sub
jns
and
stos
cmpsl
dec
dec
lahf
out
add
ja
dec
xor
sub
shll
mov
rcl
dec
and
jbe
add
nop
xchg
mov
adc
sbb
lahf
in
movsl
dec
push
scas
es
pop
scas
xorb
sub
mov
xlat
add
es
pop
jb
fsubrs
push
cs
loope
jne
mov
fcmovb
or
and
add
addr16
push
ljmp
adc
cmpsl
jl
or
test
loop
mov
imul
arpl
test
fistps
movsl
shlb
pop
mov
and
mov
jg
js
rcl
clc
mov
dec
int
test
inc
es
and
mov
std
push
push
pop
inc
gs
mov
shll
xchg
add
fistpll
cli
xor
fnstsw
lods
outsb
xor
dec
clc
cld
add
mov
push
inc
ljmp
repnz
push
sub
in
or
in
pop
mov
ljmp
lds
push
repz
dec
inc
lret
repnz
movsb
test
fldenv
lret
adc
lods
jno
stos
in
xchg
outsl
filds
mov
add
cmp
ds
jne
ss
or
add
pop
pop
jne
ja
data16
mov
test
push
sub
push
aas
div
ja
outsb
sub
push
mov
lods
sub
inc
push
clc
shlb
pop
movsb
or
mov
pop
enter
out
pushf
in
mov
rcrl
bound
push
popf
fcompl
imul
mov
test
in
and
cmp
mov
sub
or
hlt
scas
inc
sub
jl
mov
ja
jae
mov
jmp
and
lea
mov
movsl
xchg
ret
push
or
push
pop
push
je
rcrl
or
push
push
hlt
call
orl
loope
jge
cli
or
xchg
mov
mov
or
std
cmp
arpl
stos
stos
xlat
jnp
adc
repz
addr16
test
adc
or
and
mov
sti
sub
jg
aam
push
sti
out
jae
jbe
and
data16
dec
inc
mov
in
mov
sbb
pusha
je
add
je
test
daa
outsb
outsl
call
mov
mov
call
flds
push
enter
lds
pop
aas
xlat
test
xor
fucomp
into
or
ficomps
data16
ret
ja
das
iret
mov
nop
cmp
xchg
mov
test
stos
jg
xor
jnp
sahf
push
mov
popa
test
jno
fmul
in
sub
arpl
cmpsl
dec
mov
sarb
adc
lret
pop
mov
test
imul
fsubs
andl
dec
enter
jge
jnp
pop
aaa
push
sub
sbb
lock
sbb
sbb
pop
push
cmpsl
cmp
pop
loop
jmp
fwait
dec
mov
scas
imul
push
adc
fucomi
sti
pop
xor
add
scas
pop
add
lods
or
and
dec
lods
pop
iret
cld
out
push
ljmp
ret
loope
push
in
mov
pop
sub
xor
je
adc
xlat
iret
mulb
jno
out
bound
inc
int
cwtl
sbbl
inc
js
jo
mov
sub
test
add
das
jae
fistps
inc
and
push
dec
xor
shrl
push
adc
pop
fnsave
dec
or
and
push
jg
jns
loopne
stos
bound
movups
mov
or
shr
mov
stos
lea
es
fcoml
jno
outsl
adc
jle
aaa
imul
mov
inc
ret
pop
pushf
inc
xor
fisubl
xor
jmp
mov
out
das
negb
cmp
ret
inc
cmp
sti
dec
call
loope
add
mov
add
mov
outsl
or
jo
dec
mov
in
push
and
ljmp
sti
movsb
and
clc
xchg
repnz
jae
xorb
mov
cli
sub
ja
mov
lock
xor
push
nop
mov
int3
js
filds
cmp
ds
nop
sbb
mov
jae
xor
sub
jmp
imul
movsl
jecxz
xchg
sub
xchg
push
and
fadd
pop
mov
rep
lret
jno
in
and
mov
or
xchg
dec
adc
call
outsb
jle
aas
andb
fsubp
sbb
inc
xorl
movsb
pop
xchg
cmpsl
nop
jecxz
or
jecxz
movsl
push
push
mov
sbb
jb
add
fiaddl
cmp
pusha
ss
mov
push
push
aam
mov
imul
clc
sbbb
inc
mov
aaa
and
cmpl
loope
mov
jae
test
ds
mov
jp
dec
ja
dec
add
or
sub
cmp
sbb
loop
cmp
inc
xchg
inc
xor
insb
cmpsb
mov
ss
xchg
sub
loopne
xor
test
nop
sub
xchg
sbb
sub
and
sbb
andb
call
rolb
test
xchg
loope
cmp
pop
lds
xchg
scas
add
mov
xchg
in
push
xchg
pop
sub
mov
cmc
int
mov
pushf
push
insl
adc
mov
xor
cmc
and
int
aad
sbb
in
jo
in
es
push
xchg
dec
enter
push
adc
je
sub
int3
and
pop
cmp
shrb
and
pop
and
mov
sub
sub
sub
jns
or
xor
int
pop
bnd
mov
mov
in
inc
jbe
fildll
add
in
subb
pop
stos
sbb
flds
repnz
in
shrl
inc
daa
test
xchg
jmp
cmp
xchg
cld
pop
leave
inc
dec
in
jae
cmpl
cltd
loop
jnp
lods
cmpsb
cmp
pop
push
aam
cmc
lds
add
mov
adc
dec
add
add
sub
cmp
clc
clc
xorl
out
xchg
cmpsb
loopne
mov
ret
js
js
xor
sbb
idivl
pop
mov
movl
mov
mov
scas
xorb
lret
stos
sbb
push
shl
aaa
sub
or
push
loop
cmp
mov
mov
add
sub
sub
ljmp
dec
pushl
loopne
in
imul
mov
hlt
int3
xor
fcmovu
mov
fiadds
inc
cmp
sub
mov
cli
clc
jge
cltd
sub
lahf
pop
pop
je
push
ja
pop
fldl
cli
pop
inc
cmpsl
push
sub
enter
xlat
push
adc
push
inc
movb
cmp
jp
test
mov
jmp
inc
in
ds
mov
aas
mov
jne
mov
fstpt
sbb
fistl
inc
and
pop
in
jnp
push
movsb
mov
mov
dec
cmpl
aaa
and
and
mov
sbb
and
pop
out
or
xchg
pusha
mov
xchg
xchg
pop
fstps
mov
fsubs
ja
lds
into
xor
fiaddl
insb
fstl
and
ret
mov
mov
dec
jecxz
and
sahf
icebp
mov
pop
dec
cmp
test
pop
lock
aaa
fisubs
sub
pushl
cli
jge
sar
js
adc
lds
pop
mov
mov
push
fidivrl
lock
and
mov
dec
pushf
mov
in
insb
movsb
jecxz
sbb
push
int3
dec
lahf
sbb
lret
inc
jge
push
cmp
and
mov
mov
test
cli
mov
loop
mov
ljmp
loopne
movsl
or
cmp
leave
fnsave
mov
mov
fucomi
sbb
dec
in
mov
adc
jnp
ja
jl
test
pushf
rcl
sarl
sbb
and
and
jg
mov
dec
xchg
pop
add
and
pop
cmp
cmc
rolb
les
shrb
cmp
adc
mov
mov
adc
fs
movsb
xor
gs
push
sbb
mov
jecxz
xchg
lcall
push
add
mov
jnp
xchg
dec
lods
mov
xor
adc
adc
test
sub
pop
mov
fs
lcall
mov
rclb
bound
jo
adc
or
sub
fsts
pop
or
add
call
pop
pop
pop
mov
aas
je
push
cli
and
mov
fisubs
out
xor
lea
in
dec
mov
pop
xor
cwtl
pop
inc
mov
cltd
inc
cmp
inc
add
iret
ficoms
push
xor
mov
jge
dec
test
jno
pop
pusha
xor
daa
fsts
repnz
pop
outsb
icebp
data16
in
add
mov
insb
test
test
sbb
xor
sti
cs
jecxz
sahf
pop
push
push
lret
cld
pop
or
scas
movsl
mov
fistl
cmpsb
ds
sbb
into
int
cltd
mov
aam
jne
cmpsl
jnp
push
idivl
out
inc
mov
xor
jle
cmp
negl
scas
test
pop
jecxz
or
cmp
push
adc
mov
ffreep
mov
or
xlat
aam
push
pop
cmp
mov
push
sahf
jbe
inc
xchg
pop
sbb
push
fimuls
xchg
ret
jge
mov
cmp
jge
out
jp
fstps
ja
std
mov
xchg
sahf
rdtsc
imul
rclb
test
addl
dec
mov
mov
sbb
xchg
imul
xchg
dec
mov
clc
adc
jge
push
int3
clc
sahf
jae
insl
lahf
sbb
push
scas
addb
pop
decl
dec
mov
ss
jne
sub
mov
aad
pop
out
fcoms
lahf
test
je
movsl
mov
add
sub
mov
sub
lock
out
pop
test
jmp
outsb
dec
adc
pop
sub
out
xchg
sbb
mov
test
push
insl
fisubl
adc
add
dec
mov
jmp
mov
or
jnp
sub
xor
mov
repnz
xchg
test
mov
imul
xchg
mov
sub
sub
xlat
inc
out
int3
push
out
or
add
dec
idiv
loopne
jmp
adc
imul
inc
iret
cmp
test
lret
and
or
mov
mov
in
fistpll
hlt
test
icebp
push
cmp
cmp
daa
ds
jbe
mov
mov
hlt
push
popa
subl
scas
and
leave
pop
xchg
or
push
fiadds
cmp
out
int3
adc
or
clc
out
outsb
pop
divl
test
cmp
inc
out
roll
jb
jo
mov
call
push
and
jne
or
sub
fstpl
dec
inc
and
lds
cmp
pop
dec
mov
mov
push
mov
xor
popf
mov
sbb
jge
test
bound
or
cld
mov
and
lcall
jb
adc
mov
into
cmp
mov
loopne
inc
sub
lods
sub
test
out
xchg
adc
add
stos
mov
stc
js
lahf
mov
jne
loopne
mov
sub
ss
jae
imul
xor
mov
mov
pop
in
call
rorl
mov
add
test
jecxz
ljmp
add
dec
inc
in
cwtl
icebp
sub
add
aad
into
push
insb
jmp
and
test
mov
sahf
inc
ljmp
cmpsl
pop
repz
xchg
cmpsl
popf
ds
inc
std
xor
stos
jmp
adc
sub
imul
lahf
je
mov
mov
push
jnp
in
ja,pt
daa
cmp
aaa
mov
adc
jle
sbb
mov
cmp
bound
sub
mov
jbe
mov
fsubrl
outsl
and
aam
adc
push
inc
pop
jo
bound
push
lret
inc
sub
movsl
daa
decl
bound
xchg
dec
cmp
mov
or
rcl
shlb
movl
cld
adc
sbb
ss
arpl
subl
jae
push
sbb
subl
imul
push
les
mov
sub
imul
lcall
jo
xor
iret
cmp
jns
leave
mov
sti
inc
adc
cmpsb
jae
sahf
mov
or
fisttpll
push
xchg
call
icebp
call
cmp
pop
xchg
cwtl
ret
sub
dec
mov
pop
stos
xor
add
or
pop
push
stos
jmp
mov
jnp
es
les
jae
xor
xchg
or
add
fwait
les
loopne
push
iret
shl
test
imul
add
in
std
dec
xor
mov
push
mov
sbb
movsl
jecxz
ljmp
add
cli
sbb
adc
imul
je
push
jbe
pop
and
sub
in
cmp
loopne
das
pop
and
movsl
int
faddl
push
mov
bound
mov
movsl
mov
gs
mov
pop
dec
test
lret
pop
inc
and
dec
rcll
jns
cli
sarb
das
inc
repz
bound
sbb
sub
popf
sbb
dec
cli
cmp
dec
int3
imul
das
bound
mov
or
stos
stos
or
test
cs
clc
mov
insl
mov
out
sbb
loop
xor
mov
pop
dec
mov
inc
loope
push
js
adc
lods
rorl
mov
jmp
mov
push
jle
cwtl
cmp
fbstp
aaa
jmp
xlat
out
or
push
cltd
scas
movsl
jmp
subb
test
adc
test
shll
xor
fidivrl
pop
sub
add
loopne
pop
lahf
fld1
mov
or
push
xor
xor
pop
neg
or
cmpsb
pop
mov
xor
and
mov
test
pop
lcall
mov
loop
pop
decl
mov
jns
xchg
cmp
jbe
xchg
pop
cmpsb
mov
call
or
mov
push
bound
bound
sub
push
cs
mov
test
xor
mov
and
pop
dec
sbb
mov
sbb
leave
or
jle
out
loop
mov
adc
out
jb
pop
dec
leave
add
xchg
mov
xor
dec
dec
aam
jb
mov
stos
test
movsl
mov
xor
ret
sub
nop
stc
mov
aas
icebp
jb
and
jnp
xchg
mov
mov
sahf
pop
xor
xchg
sub
lock
or
sub
mov
push
pop
inc
sub
sbb
jge
jo
test
je
lds
in
nop
jecxz
insb
out
ss
jg
and
jo
sbb
inc
adc
sbb
shll
ljmpw
mov
or
dec
seta
add
int
dec
in
jle
sbb
loope
pop
and
sub
adc
enter
orl
mov
jecxz
test
loopne
stos
sbb
hlt
mov
xchg
add
loope
lods
rep
pop
outsl
xor
lods
int3
fdivl
js
je
clc
jne
es
or
lods
xor
xchg
movsb
cs
addr16
pop
mov
lea
jp
cmp
fstps
lock
mov
sbb
cmp
adc
push
cltd
push
fisttpl
push
or
pop
or
aam
pop
jbe
push
in
jnp
psubsw
in
fucomip
mov
mov
leave
rcrl
fs
mov
mov
sub
loope
into
jns
xchg
mov
jg
push
xchg
cmp
mov
inc
push
push
loopne
cmc
mov
sub
adc
test
data16
dec
mov
push
sub
and
dec
sbb
lds
imul
lret
sbb
ror
mov
sti
cwtl
mov
loope
sarb
adc
dec
fsubrp
mov
iret
cld
cs
adc
mov
sbb
jp
movsl
lret
jae
mov
mov
inc
dec
xchg
sub
adc
cmp
das
insl
cmc
or
mov
mov
int
pop
sti
xor
jl
xchg
cmpsl
dec
insb
mov
js
rcrb
xchg
ret
rcll
or
sub
push
mov
push
inc
jns
mov
xor
dec
jp
dec
add
add
aam
cmp
icebp
dec
ud1
push
xchg
sub
push
mov
addr16
mov
stos
imul
dec
inc
cltd
mov
cli
gs
fisubrl
cltd
cltd
int
mov
ljmp
lock
pusha
xchg
testl
std
add
or
or
icebp
and
aaa
cmpsb
adc
mov
mov
push
ret
cmp
loop
push
loop
dec
xchg
mov
or
mov
pop
ret
or
enter
xchg
xchg
das
adcl
scas
add
cmp
pop
lret
das
jo
xchg
inc
push
mov
dec
sub
lods
adc
fimull
lahf
mov
js
mov
cmpsl
scas
and
mov
push
ja
sbb
sub
iret
inc
pusha
pop
notl
xchg
popa
fbld
sub
fbstp
jl
das
jp
sar
int
mov
rclb
mov
fnsave
movsl
lods
fistpll
xchg
jle
out
and
aas
mov
int
movsb
pushf
in
jle
push
fs
leave
aas
xchg
movsl
mov
loopne
or
dec
inc
pop
mov
inc
arpl
lods
shlb
sarl
loop
mov
lret
push
pop
inc
mov
adc
lds
or
lock
pop
out
outsl
jbe
xor
cmp
into
aas
inc
dec
pusha
push
iret
in
ret
sti
mov
insb
arpl
movsl
mov
sub
mov
inc
mov
stc
jbe
mov
mov
adc
cltd
inc
or
fucomip
insl
outsl
mov
mov
stc
es
or
std
in
xchg
lods
fs
aas
sbb
insb
loop
popf
test
testb
and
aad
lcall
push
addr16
push
out
je
mov
lods
mov
ds
push
and
lock
mov
ret
jno
cs
js
js
mov
jbe
sarl
fstpl
sbbb
fwait
pop
imul
jbe
mov
xchg
mov
add
cmpsb
jl
xchg
data16
push
ds
mov
mov
popa
out
mov
jmp
xor
sbb
rcr
sbb
xchg
cmc
push
xchg
pop
or
lret
jns
imul
je
xor
mov
mov
out
hlt
adc
jnp
pop
lds
icebp
xor
std
mov
andl
sbb
mov
or
inc
add
add
jo
inc
mov
mov
mov
jno
xchg
push
jb
in
xor
out
dec
cmp
test
cmp
mov
sahf
pop
in
ret
jnp
inc
out
push
xchg
sbb
adc
add
lret
mov
fwait
insb
shrl
mov
mov
mov
fs
iret
or
mov
insb
jmp
mov
pop
mov
adc
aas
insb
cmpb
and
push
mov
frstor
mov
or
outsl
shlb
jge
ret
push
dec
adc
jg
movlps
adc
icebp
loope
mov
lock
clc
jge
inc
imul
dec
mov
xchg
mov
pop
les
in
lret
jp
mov
dec
xlat
loop
dec
xor
cli
jne
ret
jbe
mov
push
lcall
sbb
hlt
hlt
pop
clc
jp
mov
test
and
das
pop
mov
mov
xchg
xor
push
mov
out
xor
push
cmp
cmp
mov
or
mov
outsb
mov
mov
or
jb
jge
sub
fs
xchg
outsl
out
cmpsb
jae
nop
mov
cmc
test
mov
push
or
dec
nop
sub
mov
sbb
adc
bound
dec
ds
flds
pop
dec
popf
inc
xor
lds
jp
sti
push
fisttps
int
imul
inc
or
mov
test
test
adc
int3
adc
adc
xchg
pop
jno
pop
jno
cmp
popf
pop
xor
aaa
es
fs
popf
jnp
cmove
in
mov
stos
cmpsb
pop
push
imul
mov
negl
aam
sub
mov
xor
stos
nop
mov
jge
subl
sub
jl
adc
sub
push
cld
pop
test
pop
jb
fwait
iret
aad
and
xchg
mov
jo
cmpsl
mov
adc
push
xor
mov
js
out
push
mov
aas
nop
xor
pop
mov
adc
xchg
fbld
pop
add
mov
mov
loopne
mov
cli
xor
mov
jbe
stos
cld
pop
repnz
cmc
push
mov
or
mov
xor
inc
cld
sbb
jmp
adc
cltd
push
push
insb
mov
pushf
pop
cmp
xchg
push
xor
sbb
out
lcall
repz
push
ficompl
sbb
subl
jp
xchg
ljmp
rcrb
mov
ret
mov
loop
fsubrl
or
jnp
notl
xchg
imul
inc
mov
add
mov
iret
mov
loop,pn
out
and
sub
mov
sub
jmp
push
and
es
in
test
inc
xor
stc
lods
lds
sbb
mov
mov
daa
mov
jecxz
fwait
shld
xchg
xor
cmp
mov
jmp
mov
sbb
cld
cs
mov
les
ret
std
mov
sub
adc
xor
fdivs
push
cltd
bound
push
lods
mov
jmp
add
outsb
dec
mov
decb
dec
jecxz
or
inc
insb
rorb
rol
leave
out
iret
adc
mov
mov
cwtl
in
popf
fwait
push
pushf
dec
mov
xor
int
into
inc
loopne
push
ja
loopne
or
xorb
js
sti
enter
xchg
mov
jnp
cld
mov
dec
loope
mov
test
outsb
push
add
inc
pop
push
add
js
jmp
pop
or
pop
xor
lock
jb
iret
pop
push
sub
mov
imul
scas
or
jbe
les
xor
jle
into
movl
xor
mov
cld
lret
imul
cmc
divb
hlt
cmp
add
adc
cltd
push
out
xchg
pop
lock
jp
inc
in
ja
mov
or
lret
mov
sub
gs
jbe
push
adc
into
mov
fmul
test
sub
mov
cs
mov
dec
lret
cmp
push
add
xchg
xlat
js
lods
in
ds
jle
aaa
jne
push
sbb
lea
sbb
outsl
sbb
sub
das
psubusw
and
mov
cltd
push
add
xor
or
dec
mov
inc
push
sub
in
ja
pop
sub
xchg
in
xor
and
andl
fs
cmp
js
add
push
ror
test
or
shll
not
rcl
mov
jbe
dec
imul
and
mov
mov
icebp
adc
mov
adc
inc
cltd
lock
data16
mov
jecxz
outsl
lahf
mov
mov
icebp
dec
call
dec
je
cmp
sub
lret
in
ds
fisubs
jp
in
pop
dec
popf
mov
xchg
std
iret
xchg
movl
sub
mov
and
cmc
xchg
insb
inc
bound
lret
fiaddl
insl
add
xchg
sbb
fisttpl
dec
xor
mov
xchg
push
das
jo
insb
jg
dec
ljmp
dec
jnp
jle
push
pop
leave
pop
xchg
and
cmp
lods
adcl
xlat
xchg
push
pop
pushf
jmp
test
mov
imul
mov
xor
adc
enter
mov
icebp
pop
pusha
mov
shrb
cmpsb
mov
jl
ds
lock
lods
lods
std
ret
aas
popf
out
cmc
std
push
add
cmc
ss
inc
ror
into
dec
in
int3
push
ljmp
fisubs
dec
leave
sti
les
sbb
shrl
pusha
inc
push
into
imul
divl
orl
xor
sbb
bnd
movl
push
pmaxsw
mov
xchg
pop
jl
mov
dec
mov
neg
outsb
xor
aaa
pusha
xchg
iret
sub
popf
int
gs
sahf
pop
dec
cs
les
bound
lcall
jg
mov
push
jle
inc
mov
jb
jp
push
inc
hlt
dec
mov
sub
cld
adc
jecxz
push
lds
add
arpl
fs
cltd
xchg
out
sbb
add
xchg
push
fwait
insl
jmp
mov
scas
imul
arpl
sarl
mov
out
xor
adcb
jmp
add
adc
sub
dec
pop
sub
or
mov
aad
imul
iret
outsb
dec
int3
int3
clc
inc
pop
sti
sub
mov
mov
dec
loop
into
mov
dec
add
cld
scas
jae
ret
test
inc
sbb
dec
sbb
xchg
push
mov
fmull
stos
outsb
or
lock
adc
loopne
jo
pop
xor
out
cld
imulb
repnz
aaa
mov
lret
test
push
shrb
xchg
lods
xchg
push
repz
and
stos
sahf
jno
sahf
movsb
xchg
ds
test
aad
fists
push
stc
adc
jo
cmp
in
xchg
test
out
sub
mov
xchg
jg
adc
scas
sub
or
pop
ds
cmp
mov
sahf
xchg
scas
jg
insb
jno
pop
push
test
and
nop
push
inc
ret
aam
push
dec
jno
dec
cld
stc
movsl
mov
mov
or
add
mov
mov
or
test
mov
pop
sti
mov
jle
jb
adc
mov
test
outsb
iret
and
add
in
jmp
outsb
neg
pop
cmp
movlhps
pop
cmp
pusha
std
std
add
add
xor
add
fnstsw
je
jb
mov
int
push
adc
stos
js
dec
cltd
arpl
cmp
inc
icebp
insl
addr16
insl
sti
cmp
dec
bnd
inc
int3
dec
and
dec
out
adc
cmpsb
add
pop
push
mov
xchg
aad
push
adc
outsb
mov
je
mov
cmp
fnstcw
icebp
dec
lods
sub
cli
pop
xor
in
arpl
fcmovbe
loope
inc
rcrb
es
inc
negb
arpl
jbe
push
int
inc
jmp
lods
dec
cmp
popa
in
ret
fcomi
mov
inc
mov
jae
pop
outsl
and
out
notl
nop
daa
sbb
push
xor
imul
fwait
sub
pop
push
movsl
mov
sub
incl
scas
ljmp
cltd
xor
push
out
mov
mov
pop
or
and
into
mov
mov
sbb
ljmp
je
dec
ror
in
or
jge
or
pop
adc
and
pop
sbb
sub
mov
or
mov
add
inc
push
add
push
idivb
xor
or
loop
repnz
mov
arpl
arpl
mov
ret
test
sub
add
sub
dec
bound
lock
fs
push
lock
or
adc
adc
inc
add
xor
ss
repnz
enter
out
in
inc
cmp
dec
jecxz
push
lock
nop
clc
push
and
jle
xchg
test
dec
mov
sbb
mov
sub
pop
lods
int3
mov
jo
or
dec
cs
ret
pop
shr
xor
mov
push
je
sub
addr16
push
or
in
gs
inc
inc
pop
test
cmp
mov
stc
mov
sbb
jge
mov
mov
jmp
mov
add
adc
or
aas
inc
sbb
push
nop
or
fstpt
sbb
adc
loopne
push
fdivrs
mov
test
icebp
bound
stos
lock
mov
mov
sub
shlb
cmpl
data16
push
xchg
imul
cmpsb
aaa
aaa
out
popa
les
xchg
dec
lds
jecxz
movsl
pop
sbb
sbb
ljmp
mov
inc
jo
mov
sbb
adc
je
cwtl
mov
fcom
fists
je
jmp
jmp
cmp
jno
fcmovbe
adc
cmpsb
xchg
aas
nop
sub
lds
ja
lds
adc
daa
lcall
cmp
mov
negb
dec
mov
push
adc
js
mov
cmp
cmpb
clc
jno
aas
sbb
outsl
das
repnz
cwtl
xchg
xor
icebp
push
add
add
add
lods
jmp
ret
test
lods
dec
enter
pop
or
cmp
cltd
or
or
xor
mov
jl
gs
fistpl
mov
sub
es
mov
jge
xor
xchg
pop
dec
mov
fcomip
sahf
test
sti
pop
in
pop
mov
push
dec
sub
fxch
lea
lret
mov
cld
sarb
xchg
rolb
js
xchg
pop
xor
leave
inc
or
decb
sub
mov
mov
test
cmpsl
sub
and
push
xor
inc
clc
lahf
pop
lods
das
xor
lods
mov
cmp
mov
or
dec
jnp
mov
jb
das
xchg
sub
lods
in
xor
and
scas
orb
mov
ja
inc
cmp
dec
sbb
mov
push
stos
pushf
mov
xorl
int
pushf
fisubrl
adc
icebp
inc
mov
cmp
inc
or
add
jbe
mov
lea
inc
test
adc
lods
cli
xor
popa
dec
sahf
lock
xor
cmp
scas
and
arpl
cmp
jecxz
jno
ficoml
repnz
std
nop
push
pop
jge
or
mov
mov
add
pushl
ljmp
in
push
xorl
addr16
orps
subb
pushf
sbb
pop
add
xchg
sub
xorl
push
inc
cltd
stos
xchg
jno
imul
imul
push
popf
jae
mov
ja
xor
push
imul
ret
cmc
decl
and
popf
cmpsl
and
dec
jne
call
cmpsl
adc
daa
mov
scas
daa
inc
fwait
pop
jmp
outsb
pop
mov
xor
das
dec
cmpsl
jnp
rcrl
jae
cwtl
and
stos
adc
lds
or
ret
sti
cmp
sub
pop
ss
cmp
or
pop
lods
stos
int3
outsb
out
or
jb
out
outsl
jnp
jge
test
jns
pop
imul
push
popf
movl
ja
add
filds
sbb
xchg
callw
or
arpl
xor
imul
jno
push
imul
out
mov
push
pop
daa
jno
mov
dec
adc
mov
sub
sbb
dec
outsb
clc
lahf
outsb
sbb
dec
ja
inc
stc
fbstp
mov
pushf
sbb
inc
and
enter
and
rcll
mov
lods
jo
cld
mov
movsb
jle
scas
add
push
pop
dec
adc
leave
cmp
mov
xchg
lcall
pop
out
mov
jecxz
sbb
sbb
and
mov
and
jbe
lret
inc
clc
mov
pusha
fadds
lea
cwtl
xor
lret
fildll
fwait
movsb
jle
pusha
gs
int
jge
dec
jmp
data16
aaa
adc
or
mov
leave
push
push
popf
mov
mov
test
sub
stos
jae
sbb
insl
push
cld
xor
outsl
push
or
shrb
sbb
pusha
pushf
hlt
fcompl
and
aaa
repz
hlt
xor
loopne
addr16
outsl
daa
fwait
loope
ds
ds
pop
clc
fcompl
and
pop
and
das
mov
cmp
loop
adc
imul
ljmp
in
lcall
mov
push
jno
aad
push
rorl
stc
test
push
lods
int
int3
lcall
push
pop
inc
dec
inc
lods
pop
push
jbe
sub
xor
imul
leave
lods
scas
mov
jge
icebp
aad
push
sub
xor
imul
sbb
fwait
mov
dec
repz
jns
push
sub
or
call
mov
add
mov
jle
mov
push
inc
stc
test
in
stc
or
add
dec
jno
jno,pn
dec
mov
scas
enter
insb
hlt
pusha
scas
das
xor
shrl
mov
sub
xor
cmpsb
iret
es
add
nop
out
add
out
push
xchg
stos
mov
add
pop
out
inc
or
xor
xor
repnz
data16
mov
sub
pop
mov
mov
les
test
scas
arpl
