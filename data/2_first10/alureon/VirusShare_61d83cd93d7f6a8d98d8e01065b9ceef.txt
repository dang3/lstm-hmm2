push
xor
cmp
jbe
lea
push
mov
add
mov
add
push
add
pop
add
add
cmp
jb
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
add
cmp
jb
mov
add
xor
cmp
jbe
add
add
cmp
jb
pop
pop
xor
push
add
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
add
lods
xor
stos
sub
cmpl
sub
sub
sub
rorl
sub
push
add
pop
jne
pop
pop
pop
ret
push
mov
sub
sub
push
mov
mov
add
mov
test
jne
add
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
sub
pop
pop
pop
leave
ret
xor
jmp
mov
or
push
movzbl
push
add
pop
inc
push
add
pop
mov
shl
imul
imul
dec
decl
mov
jne
add
add
pop
ret
mov
xor
cmp
je
sub
sub
cmpb
jne
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
lea
test
cmpb
jne
push
lea
push
push
mov
call
sub
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
andl
push
lea
push
movb
mov
mov
mov
mov
rep
mov
mov
rdtsc
mov
mov
mov
mov
not
ror
not
movzbl
lea
cmpb
jne
mov
push
push
push
movb
call
push
call
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
lea
test
pop
leave
ret
mov
jmp
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
sub
cmp
jb
pop
pop
pop
pop
ret
push
mov
add
sub
mov
add
mov
xor
mov
cmp
je
add
add
sub
add
mov
cmp
je
push
mov
push
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
push
add
pop
mov
mov
test
jne
jmp
mov
lea
mov
mov
add
add
cmpl
jne
pop
pop
lea
push
mov
movb
movb
movb
call
leave
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
sub
push
lea
push
mov
call
add
add
mov
mov
mov
mov
push
popl
sub
cmp
sub
lods
xor
stos
add
test
sub
add
sub
rorl
sub
add
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
push
push
xor
call
mov
lea
test
jbe
mov
movzwl
mov
and
rol
add
dec
jne
test
jns
lea
and
or
pop
mov
pop
ret
push
mov
sub
sub
push
mov
push
xor
push
mov
cmp
jne
push
mov
call
mov
push
lea
push
xor
lea
test
push
mov
push
mov
call
push
mov
call
mov
mov
call
cmp
jne
cmp
jne
cmpw
jne
push
push
push
push
mov
call
push
push
mov
push
mov
call
cmp
je
mov
jmp
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmp
jne
lea
call
pushl
mov
pushl
mov
push
mov
call
mov
sub
mov
xor
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
mov
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
pop
push
mov
call
push
mov
call
push
call
pop
push
mov
call
push
mov
call
mov
mov
call
cmpl
push
jne
mov
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
test
je
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
mov
call
push
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
mov
call
pop
pop
jmp
mov
call
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
call
pop
pop
mov
mov
mov
add
push
lea
push
call
mov
mov
add
sub
add
push
pushl
and
add
mov
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
add
add
push
mov
call
test
je
mov
push
mov
call
mov
push
mov
call
pop
pop
push
mov
call
push
call
push
call
pop
pop
mov
call
push
mov
call
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
sub
addl
add
push
mov
call
push
mov
call
push
mov
call
pop
pop
push
call
push
mov
call
push
call
pop
pop
mov
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
cmp
je
mov
add
lea
mov
mov
mov
mov
add
push
push
push
call
mov
or
sub
mov
mov
sub
push
push
mov
call
pushl
call
test
je
cmp
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
call
push
lea
push
push
pushl
mov
call
mov
call
mov
mov
mov
mov
mov
mov
xor
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
mov
mov
add
sub
add
add
mov
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
xor
pop
pop
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
push
xor
push
mov
call
mov
push
push
mov
call
push
mov
call
mov
xor
push
add
pop
cmp
jne
push
pushl
push
mov
call
jmp
cmp
jne
push
push
push
push
push
push
mov
call
test
je
push
call
push
call
push
jmp
cmp
jne
testl
jne
cmp
je
push
mov
call
pop
test
jne
mov
call
jmp
cmp
je
push
push
push
xor
call
push
mov
call
xor
pop
pop
ret
ds
stos
cld
mov
pop
add
add
add
pop
in
add
pop
push
push
shl
pop
xchg
nop
outsl
in
cmpsb
outsl
or
push
xchg
lcall
cmp
js
push
mov
push
add
jnp
lcall
pop
push
stos
out
inc
nop
sub
testb
andl
stos
rolb
xchg
sbb
sbb
cmp
cmp
xchg
test
push
cmpsl
mov
push
push
cmp
pushf
cmp
cmpsb
mov
xchg
mov
insb
xor
cli
lcall
push
pop
shlb
je
repnz
jb
in
mov
fistpl
imul
jne
int
aad
adc
dec
sarl
or
arpl
std
shlb
cltd
pop
and
push
insl
xchg
cmpsl
or
inc
push
dec
and
clc
fimuls
std
and
sub
mov
es
pop
into
in
dec
aam
lahf
mov
stos
mov
lahf
push
out
mov
push
aad
outsl
mov
repz
je
fisttpl
mov
mov
pop
lret
sub
lods
inc
push
pushf
jp
sub
add
ds
pop
inc
sarl
sarl
leave
int
and
lcall
inc
fildll
dec
aas
ja
pusha
in
fildll
jle
lds
enter
test
dec
hlt
mov
mov
in
inc
mov
xor
jle
imul
sbb
jb
es
stos
loop
cwtl
mov
or
lret
lcall
out
lahf
dec
loopne
inc
aaa
mov
xor
nop
into
pop
dec
loope
inc
jg
clc
and
adc
out
adc
je
adc
shl
xchg
daa
enter
shr
mov
mov
jl
es
lcall
insb
mov
mov
popa
hlt
ja
out
sub
jb
dec
dec
jbe
fs
test
fiaddl
out
adc
push
lods
jno
mov
popf
int
int3
lods
sub
sbb
push
repnz
je
sbb
test
adc
add
call
mov
lods
rol
sub
movsb
jge
icebp
inc
gs
pop
push
fldcw
cmpsl
inc
out
dec
addl
sbb
cmp
jg
lods
inc
mov
cli
arpl
lret
push
inc
cltd
aam
mov
and
hlt
mov
lods
shrb
xchg
dec
adc
pop
push
test
ja
or
repz
in
aam
test
sbb
rorl
push
ds
ffree
dec
push
mov
mov
out
push
adc
jnp
lods
fisttpll
stos
shrl
fcomps
clc
or
pop
mov
fidivl
dec
xchg
std
dec
sbb
das
stos
inc
add
ja
push
fdivrl
dec
out
insb
xor
out
sub
adc
aas
fcmovne
pop
andl
and
dec
lods
add
lods
cltd
imul
add
push
jp
sbb
insb
xabort
sub
mov
daa
out
jnp
mov
dec
push
daa
pop
clc
cwtl
int
daa
sti
pop
xlat
fwait
pop
int
adc
dec
or
aaa
ds
imul
pop
imul
sub
adc
stc
jg
ss
mov
adc
push
std
mov
jg
fs
mov
mov
lock
sub
in
sarb
scas
adc
jle
movsl
rcll
mov
push
jnp,pn
popf
push
test
cmc
add
jl
out
jmp
scas
mov
mov
sti
inc
mov
aam
inc
mov
enter
sub
cmp
sbb
sti
test
inc
roll
dec
aas
push
or
stos
add
xchg
mov
jae
fbld
xchg
stos
sbb
mov
inc
les
je
mov
insb
sub
sysexit
aaa
mov
sbb
xlat
dec
xchg
mov
or
lahf
dec
data16
jmp
add
clc
mov
adc
repz
mov
test
xlat
jp
sti
sahf
rcrb
loopne
pop
cmp
jae
xor
jl
sbb
shrb
jae
addl
sbb
ja
lock
filds
mov
xchg
and
mov
test
cwtl
in
sbb
mov
mov
icebp
fmull
int3
mov
pusha
add
pop
lock
pop
or
fs
fdivrs
iret
jnp
sub
lret
pop
shlb
test
mov
xchg
add
pushf
adc
mov
hlt
xor
sub
cltd
adc
cmpsb
cmp
and
call
or
cmpsb
mov
sbb
mov
or
mov
hlt
jo
insb
mov
or
into
dec
sub
pop
repz
sbb
adc
or
jl
and
push
cmpsb
nop
pop
push
mov
sbb
aad
lods
mov
sub
out
pop
lret
sub
mov
xchg
adc
xchg
in
mov
mov
mov
jmp
xchg
xchg
push
sbb
jp
icebp
enter
jl
push
cmpsl
psubusw
cmp
adc
inc
xor
pushf
bound
lods
repnz
outsl
out
mov
inc
imul
enter
push
xor
xor
cmpsl
dec
add
sub
jmp
xchg
cmp
jnp
inc
fprem
cmpsb
push
imul
mov
mov
rcrl
xor
sbb
dec
sbb
adcb
push
cmp
pop
pop
mov
pop
mov
jnp
movsb
scas
add
js
push
int
pop
das
cmp
xor
pop
das
cmp
cmc
mov
pop
mov
inc
or
push
stc
hlt
mov
lds
popf
fimull
sti
cltd
fcompl
and
inc
jb
dec
jnp
inc
inc
mov
push
jno
adc
adcl
mov
popf
cwtl
jp
ljmp
adc
daa
aam
bound
repz
cltd
bnd
jne
das
pop
cmpl
jns
fnstsw
pop
xor
mov
cmp
adc
xor
mov
adc
inc
jae
das
mov
adc
inc
add
je
or
shrl
xchg
cmpsl
js
mov
loope
inc
aad
inc
popa
dec
testl
dec
cmp
cmc
lods
jbe
xor
popf
and
sub
or
inc
cwtl
xchg
mov
jne
add
out
pop
jmp
cmpsb
shl
push
mov
mov
cmpsl
jo
mov
jg
int3
adc
sahf
xor
insl
lea
insb
mov
cmp
dec
mov
sti
xchg
push
outsb
daa
mov
das
xlat
add
gs
mov
or
cmp
aaa
pop
push
pop
pop
addl
xchg
mov
add
mov
pop
xchg
adc
jbe
lcall
dec
test
mulw
pop
popa
push
lahf
push
jns
out
arpl
sub
mov
xor
popa
pop
je
xchg
imul
out
sar
lds
and
add
cmp
adc
or
popf
push
cmp
mov
pop
add
inc
or
stos
vpmulhw
jmp
lods
sarl
mov
inc
aaa
lds
mov
dec
push
adc
xchg
and
mov
xchg
dec
sub
sahf
std
popf
inc
mov
or
dec
mov
inc
sbb
xlat
add
jae
out
insb
mov
jp
test
ss
mov
xor
jb
iret
ret
sti
lret
sbb
repz
pop
aam
dec
jo
lea
mov
daa
mov
mov
in
sub
mov
movsl
lods
imul
ss
outsb
add
icebp
fisubs
cmp
pop
pop
pop
ret
fists
mov
mov
dec
or
stos
xor
js
adc
xchg
cmp
and
movsb
add
pop
sti
call
push
mov
inc
fisubl
dec
jl
pop
out
js
test
jl
mov
loopne
jns
je
add
jmp
sbb
inc
rcll
jg
cmp
je
and
addr16
mov
dec
popf
loope
pop
pop
mov
mov
push
ficompl
pop
addr16
lea
inc
sbb
sahf
mov
inc
add
int
packuswb
scas
cwtl
pop
jnp
sbb
jl
stos
sbb
in
or
mov
imul
pushf
cltd
mov
cs
and
sub
mov
out
shl
cmp
push
orl
icebp
sahf
or
jp
adc
pop
and
test
into
std
sbb
rolb
ja
push
insl
and
inc
out
insb
jle
out
inc
mov
cmp
daa
inc
push
cmp
test
mov
xor
test
jmp
xchg
and
cwtl
fistpl
inc
mov
ret
sahf
ret
inc
stos
xchg
mov
repnz
aam
and
jmp
sub
mov
and
and
int3
test
adc
sub
fstpt
mov
pop
sbb
pop
fisubs
pop
mov
or
pushw
xor
mov
rclb
outsb
adc
mov
es
and
shlb
in
repnz
mov
and
shrl
mov
inc
add
xchg
adc
inc
mov
inc
mov
sbb
add
sub
dec
lods
out
movsb
add
stc
inc
cmpsl
sub
cmp
jl
sub
sbb
imul
outsb
insl
mov
or
xchg
and
cmp
push
outsb
jmp
mov
mov
fsubs
push
xchg
pop
mov
sub
andb
mov
mov
mov
mov
mov
adc
jbe
jge
icebp
cmp
push
mov
jae
cltd
mov
push
jle
test
sar
lret
mov
push
or
sub
imul
and
cmp
into
mov
gs
xor
adc
cmc
icebp
test
add
addr16
jp
inc
push
lods
jae
add
aam
pop
inc
fwait
sbb
mov
mov
sbb
push
rorb
sub
mov
pusha
mov
sub
jnp
mov
aas
mov
sub
lods
arpl
pop
sarb
push
jmp
rclb
jae
push
or
test
inc
and
fs
movb
sub
cmp
or
dec
ss
xor
dec
mov
out
add
or
jge
dec
xchg
daa
cli
or
repz
test
stos
mov
mov
ret
int
out
xchg
icebp
dec
adc
mov
cwtl
in
xor
fcmovu
loopne
xor
mov
int
or
std
jle
popa
xlat
mov
gs
pop
sti
dec
push
mov
jecxz
adc
pop
out
insl
jle
xchg
popa
xorl
out
jbe
shl
add
pop
clc
popf
or
sub
jp,pt
stc
les
lods
iret
pop
mov
adc
cld
and
and
jge
cmc
cmp
push
aad
mov
addr16
mov
add
pop
scas
mov
fnsave
std
ret
mov
std
lahf
dec
rol
test
jg
iret
dec
dec
jnp
int
fistps
sub
das
dec
pop
lods
push
xor
xchg
sbb
add
mov
sbbb
insb
arpl
fsts
fs
incb
ja
fcomp
inc
sub
imul
popa
aad
mov
cmp
adc
stos
subb
test
lcall
stos
sbbb
jl
aas
cmp
or
out
repnz
and
or
mov
mov
cmp
sub
cmp
sbb
clc
mov
loope
insl
mov
jg
mov
sub
es
cmp
leave
mov
aaa
sti
je
loope
or
dec
out
fwait
adc
mov
dec
push
lds
lock
out
push
add
enter
imull
inc
ds
bound
scas
pop
pop
in
cmp
je
sbb
xor
or
pushf
mov
loop
and
jg
or
repz
cmp
pop
mov
sub
mov
sbb
inc
sub
popf
sbb
xchg
adc
jmp
loope
pop
inc
dec
sbb
ret
stos
dec
mov
ret
jmp
insb
mov
cmc
xor
stos
adc
ss
stos
sbb
xchg
mov
out
mov
xchg
fistps
mov
mov
mov
mov
insl
push
aaa
sbb
jg
xor
jb
scas
mov
mov
adc
jo
pusha
jmp
cwtl
xchg
js
add
cs
mov
int3
sarl
dec
pop
push
and
xchg
stos
mov
arpl
mov
pop
push
push
mov
movb
jbe
clc
or
fs
pop
mov
dec
and
push
test
mov
out
dec
cmp
repz
mov
mov
inc
push
add
mov
sbb
jo
lds
roll
shlb
jae
cltd
sti
out
sbb
pop
or
das
mov
mov
call
je
fiaddl
mov
push
ljmp
pop
inc
aam
imul
mov
mov
repnz
test
shrl
xchg
outsb
nop
pop
inc
add
or
ss
inc
fcomps
jecxz
jns
repz
movsb
clc
outsl
gs
jge
aas
fldenv
xor
sub
loope
jb
push
add
cmp
cmp
mov
mov
scas
sbb
adc
mov
sub
ret
mov
aas
fs
dec
notb
mov
push
insl
lcall
and
fidivrl
cmp
jmp
sbb
inc
arpl
in
jnp
mov
jb
cltd
dec
fcomi
or
shrb
sbb
cmp
mov
test
xchg
repz
pop
insb
or
into
sub
into
movswl
leave
in
mov
mov
out
push
push
inc
add
sbb
sbb
insb
jecxz
mov
es
sub
fildll
fisubl
sbb
lea
mov
mov
mov
sub
test
leave
leave
xor
inc
fs
push
pop
pop
jecxz
and
dec
ds
lcall
out
and
pop
mov
jp
jp
mov
popa
out
es
jb
in
bound
xchg
mov
ss
fstps
pop
xchg
mov
mov
mov
das
add
test
push
or
pop
mov
push
mov
in
sti
rolb
push
into
cmpsb
inc
pop
jb
jnp
sbb
cltd
cmc
pop
repnz
inc
enter
into
sbb
inc
out
std
mov
insl
outsb
pop
mov
or
xor
dec
and
dec
sub
push
out
cmp
push
push
and
sahf
push
aaa
notb
sbb
sub
sbbb
and
js
cli
inc
mov
loop
mov
push
movsb
sub
dec
add
negl
into
shlb
ret
mov
data16
fiadds
sub
movsl
cmp
sub
enter
hlt
test
in
xchg
repz
into
shr
pushf
lock
testl
xchg
xor
sbb
dec
and
icebp
add
or
pop
mov
sbbl
out
out
cmpsb
movsl
mov
dec
aas
dec
icebp
outsb
xchg
rcrl
add
push
push
push
jecxz
jo
adc
imul
push
pop
lock
repnz
adc
mov
dec
jns
push
and
jmp
and
xchg
pushf
pop
jnp
out
adc
and
inc
pop
xor
negl
dec
iret
cmp
sbb
adc
loop
mov
mov
lahf
push
sub
jb
pop
movsl
push
lcall
rcr
dec
or
xor
insb
mov
fstl
arpl
cmp
sbb
addl
ret
daa
mov
rorl
sbb
and
out
jno
prefetchnta
xlat
mov
add
sub
xor
cmpl
xchg
aam
dec
mov
adc
fdivs
xchg
daa
or
mulb
scas
mov
rorb
in
out
mov
je
call
add
sbb
add
sub
dec
jne
sub
pop
mov
idivl
cmc
or
test
mov
lods
lahf
pop
add
shll
and
mov
out
pop
lds
push
mov
sti
aaa
mov
or
adc
in
dec
ja
fdivrl
xchg
push
or
mov
nop
stos
sbb
pop
sti
dec
pop
or
pop
push
pop
xor
repz
testl
jg
dec
fs
in
xor
in
enter
js
xchg
add
mov
outsb
sbb
scas
icebp
insb
inc
addl
leave
push
push
inc
test
cs
loop
jp
arpl
and
mov
fiadds
pusha
lock
inc
cmpsl
mov
mov
inc
ficompl
inc
in
and
mov
rolb
ss
jns
push
into
clc
arpl
lcall
sbb
rcl
dec
xchg
and
cmp
setge
cwtl
pop
mov
mov
xchg
test
sub
fstps
jne
repnz
ljmp
adc
mov
fdivrs
inc
int
sbbb
out
pop
cmpsb
loopne
cmp
inc
mov
out
test
test
sub
adc
mov
in
arpl
stos
scas
insl
test
push
push
ror
or
pop
ret
loopne
mov
sub
stc
popf
imul
jnp
lcall
sahf
add
mov
jno
dec
idivb
jne
cld
test
cmpsl
hlt
sub
std
mov
addr16
imul
pop
aas
jns
lahf
das
pop
dec
in
push
or
lods
pop
mov
jns
pop
mov
mov
mov
sbb
or
call
leave
jns
cs
push
std
int
and
dec
cmp
jmp
popf
imul
int3
outsb
ja
sbb
cld
inc
jbe
dec
mov
push
mov
lods
dec
and
and
xor
shr
mov
jecxz
xchg
cmp
mov
scas
fmulp
jbe
pop
xchg
pop
jl
outsl
or
out
dec
iret
cmpsb
mov
and
test
jmp
arpl
nop
mov
aam
int
sahf
in
lods
sbb
fisubl
push
pop
fsubrl
pop
inc
clc
out
imulb
addr16
mov
imul
pusha
fidivl
popf
dec
jecxz
xlat
add
lret
fdivr
sahf
or
mov
stos
inc
cmp
add
leave
sbb
imul
jae
fucomp
xor
xor
je
in
nop
imul
xchg
lods
bound
inc
loope
aas
pop
lret
sub
ja
test
sbb
test
dec
add
daa
mov
fistl
mov
or
imul
jmp
loop
cmpl
test
stos
xchg
fs
jbe
dec
adc
adc
popa
fcompl
cmp
ret
jle
or
repnz
out
rolb
cmp
push
enter
test
enter
sti
pusha
or
inc
lahf
mov
aaa
call
fidivrs
cmpsb
mov
cli
adc
mov
or
ss
push
xchg
jg
pop
adc
push
fildl
cmp
test
add
xor
stos
repz
popf
mov
lea
jecxz
mov
cld
pusha
jp
jp
out
test
fstpt
in
inc
aaa
push
add
outsb
js
xchg
aad
pop
jns
inc
in
mov
sbb
gs
lret
add
lea
je,pn
scas
iret
js
jl
test
test
shll
xchg
test
fadds
jo
add
sub
sub
pushf
push
pop
iret
mov
push
push
fs
dec
imul
cltd
clc
pop
mov
pop
or
and
aas
leave
lretw
adc
sub
add
lods
sbb
mov
lods
pop
or
push
pop
sub
cltd
jecxz
lret
cli
fbld
fcmovnbe
xor
sahf
je
repnz
xor
arpl
jb
xchg
fs
jno
add
fldcw
adc
cltd
cmp
mov
and
sbb
add
sub
cs
push
je
sbb
xchg
in
insb
scas
leave
jno
push
leave
adc
inc
dec
enter
xchg
data16
mov
shll
jae
lock
pushw
sub
push
sub
aad
and
sbb
popa
shll
xchg
notl
data16
xchg
out
frstor
mov
cmc
push
dec
dec
lret
pop
xor
dec
lock
mov
leave
fcoml
and
les
cmpl
mov
aam
sub
sahf
mov
mov
nop
dec
xchg
rolb
gs
push
ljmp
adc
push
sti
out
repnz
pop
repnz
test
mov
lret
neg
adcl
mov
insb
cmp
cmpsb
jecxz
into
mov
in
rorl
mov
arpl
sbb
or
sub
dec
pop
mov
movb
fildll
push
xchg
cmp
dec
jl
xlat
imul
mov
xor
imul
mov
jae
aad
stos
in
std
cmp
and
repz
mov
jne
and
and
mov
aas
jb
sbb
xor
popf
in
bound
push
pop
and
cli
ja
inc
fmull
dec
bsf
inc
sahf
add
cli
push
jle
push
call
adcl
loope
jns
clc
test
or
hlt
out
cmp
and
fsts
dec
jns
pop
push
call
ret
dec
stos
xchg
cmp
in
push
test
add
mov
push
and
frstor
cmpsb
xor
dec
fistpll
and
xlat
lea
mov
rcrb
xchg
xchg
jne
lea
push
xchg
pusha
sbb
add
mov
test
xor
inc
push
hlt
out
pop
push
orl
dec
pop
dec
movsl
out
pop
mov
jno
add
rorl
sbb
jle
or
cmpb
sub
sbb
loope
add
sub
fwait
imul
push
mov
test
fisubl
pop
icebp
mov
cwtl
mov
aam
scas
push
pop
xor
jecxz
mov
inc
cmp
insl
mov
cli
jno
cli
push
lret
fiaddl
xor
sti
add
inc
and
inc
sub
negl
jecxz
dec
dec
inc
push
push
mov
jne
xchg
sub
loopne
mov
mov
jmp
fsts
std
inc
adc
ss
js
push
les
adc
hlt
inc
adc
cwtl
pop
out
test
cwtl
mov
push
aam
fsts
and
popf
push
sbb
stos
in
cli
adc
pop
mov
and
mov
sarl
clc
or
leave
xchg
aaa
jmp
cmp
cmc
cld
or
js
xor
sub
pusha
cmovle
ss
aas
idiv
sbb
cmp
icebp
popl
push
xor
fsubl
sbb
imul
inc
cwtl
bound
fildl
in
adc
es
out
or
jo
cmp
pop
pop
xor
mov
xchg
sub
xor
or
hlt
mov
int
mov
mov
adc
lods
scas
test
xchg
cltd
adc
xchg
sti
sbb
dec
in
scas
mov
sub
cmpsl
fisubs
gs
mov
pop
mov
test
pop
dec
insl
test
or
xor
sub
aas
xchg
push
inc
adc
jl
push
push
lea
push
ds
xchg
ds
fnstsw
xchg
xchg
lret
stos
pop
into
jg
push
sbb
cld
cmp
inc
aam
pushf
repz
xor
xchg
mov
dec
xchg
shlb
fisttpll
lea
sub
jl
or
mov
inc
popf
into
test
in
sbb
xchg
test
mov
pop
mov
in
mov
sbb
jb
and
xlat
mov
icebp
inc
scas
xchg
fsubrs
iret
pop
outsl
jns
lret
sub
push
fcomi
xor
fmul
mov
mov
fisttpll
test
mov
mov
cmpl
push
jno
enter
loop
loope
or
icebp
das
enter
xchg
or
bound
popa
sbb
jns
gs
clc
cmp
fistpll
in
std
dec
push
push
and
adcb
or
cmp
jno
lret
mov
sub
cld
jnp
pusha
mov
pop
sahf
inc
data16
or
daa
push
je
dec
ret
cs
sub
mov
mov
xor
lds
xor
dec
and
adc
lret
sbb
xor
adc
xor
sahf
lods
add
das
cld
xor
and
jae
es
mov
xchg
mov
test
lahf
pusha
in
ror
dec
testl
xchg
rcll
mov
xorb
ljmp
data16
js
inc
pop
xor
test
sub
or
stos
bound
push
pop
dec
rcr
in
jae
pop
aad
out
sub
insl
std
lret
jge
sbb
icebp
ljmp
cmp
inc
lods
stos
cmc
lret
enter
mov
or
xor
loop
loope
sbb
add
push
fdivl
js
pop
fdivrs
mov
adc
call
lcall
aas
fisubl
jmp
ja
jmp
dec
mov
mov
sub
xchg
loopne
jge
mov
dec
rcrb
jne
call
ficoml
fdivrp
and
pop
out
xchg
ljmp
xchg
ds
and
lods
pushl
mov
cmc
sub
rol
fnstsw
enter
std
jmp
mov
add
mov
jp
jno
pop
pop
std
das
or
out
and
adc
mov
mov
aam
push
push
mov
jecxz
cmp
dec
push
mov
jo
or
xlat
mov
test
push
and
dec
inc
mov
pop
dec
mov
jbe
aas
inc
lret
xchg
adc
mov
cmpsb
call
rcll
cmpb
cmp
jl
addr16
xchg
mov
stos
iret
lds
mov
sub
in
push
dec
cmp
inc
mov
adc
pop
into
rcrl
scas
inc
les
xchg
xor
popa
xchg
sub
adc
out
sbb
test
xchg
orb
fdivrs
scas
cmp
sti
sub
jmp
and
xor
rolb
adc
add
ror
cmp
sub
pop
vpmacsdd
aam
inc
sbb
les
ficoml
lods
pop
fbstp
jnp
add
divb
cmp
mov
xchg
jns
push
inc
xor
mov
fwait
cmpxchg
clc
loope
pop
mov
into
add
mov
push
lcall
mov
insb
dec
mov
sub
dec
or
or
mov
sbb
rorb
cmp
add
rcrb
adc
fcompl
xchg
mov
dec
add
mov
and
push
aad
jnp
imul
sti
add
mov
insl
push
and
mov
add
cmc
mov
mov
pinsrw
mov
imul
mov
cmp
inc
out
mov
shrb
dec
add
jmp
loope
pop
push
push
jp
pop
out
mov
in
inc
daa
mov
xlat
nop
mov
test
mov
sarb
nop
sub
push
pop
dec
std
nop
pop
sarl
and
mov
arpl
mov
push
pusha
xchg
jge
nop
xor
mov
loope
ret
mov
repnz
and
out
jg
inc
jge
dec
cmpsl
popf
inc
and
rclb
lcall
mov
mov
icebp
dec
add
in
scas
imul
rcr
push
and
in
pop
push
es
add
out
lods
xchg
jnp
or
jmp
in
and
xor
push
and
jae
loop
sar
stc
and
movsb
xchg
aas
and
inc
adc
pop
loop
pop
pop
xchg
pop
pinsrw
mov
jmp
mov
push
xchg
js
mov
stos
pushl
test
test
add
pop
ds
in
fbstp
in
fiadds
xor
xchg
push
and
icebp
push
int
and
push
sti
dec
sbb
xlat
fimull
and
fstpl
adc
push
clc
mov
sbb
jmp
xchg
pop
jge
push
out
sbb
in
pop
insl
outsb
lcall
or
sub
stos
sub
loopne
jl
xlat
sahf
out
insb
lods
inc
pop
sbbb
adcb
sub
pusha
and
inc
push
adc
cld
lahf
std
xorb
adc
xchg
inc
pop
mov
and
pop
mov
add
lahf
mov
pop
pop
jge
sub
mov
into
daa
pop
inc
repnz
fsubrl
iret
jp
enter
lret
das
add
pop
push
std
mov
adcl
sub
mov
fiaddl
inc
mov
out
mov
sbb
and
mov
sub
lret
jnp
cld
dec
inc
inc
shlb
ret
call
lods
sub
mov
sbb
in
imul
popf
aad
pop
add
addb
std
cltd
mov
and
xlat
xchg
adc
sbb
sti
cli
shll
add
test
mov
pop
pop
push
movsb
movsb
dec
adc
fdivr
mov
mov
aaa
mov
or
add
mov
cmc
jno
xchg
sti
push
mov
nop
xchg
js
adc
add
mov
mov
inc
and
cmp
mov
inc
fwait
mov
es
cmp
mov
aaa
xor
push
or
lea
movsl
pop
sub
push
pop
bnd
ds
mov
sub
dec
movsb
adc
dec
sbb
ja
insl
repnz
clc
jp
in
pop
inc
mov
sub
lods
lret
xchg
dec
loopne
or
adc
test
xchg
imul
add
fidivrl
aaa
hlt
ret
jb
hlt
test
inc
cli
inc
lret
gs
jmp
xchg
outsl
lods
push
and
aad
mov
fsts
xlat
fwait
jnp
lods
adc
out
fbld
push
mov
push
xlat
sub
fnsave
add
imul
xchg
sub
jnp
imul
clc
inc
jmp
xlat
movsl
ret
or
add
xchg
repz
xor
mull
jns
test
push
pop
or
test
out
movsb
add
out
sahf
mov
ret
into
pusha
ret
fdivs
xor
mov
fcmovnb
sbb
test
fsubl
stos
adc
es
lea
out
clc
pop
pop
es
xor
ss
ds
cmp
outsl
push
and
rclb
xor
sbb
movsb
pop
std
shll
xlat
adc
dec
mov
ds
inc
rorb
pop
out
clc
pop
rcrl
icebp
scas
mov
sar
insb
out
pop
test
iret
subb
shrb
sbb
or
inc
xchg
movsl
jnp
fs
pop
jno
adc
jne
mov
mov
aas
mov
xchg
jg
in
pop
nop
xchg
cmp
add
push
scas
pop
sarl
push
jmp
bound
ds
into
add
cmp
xor
push
sub
je
pop
pop
shll
and
sahf
inc
or
subl
loopne
mov
cmpsb
out
and
lahf
jbe
in
and
dec
xchg
dec
out
jl
jb
jecxz
lcall
mov
mov
inc
inc
jp
inc
mov
jbe
movb
push
loopne
mov
sub
pushf
test
jg
xchg
lea
or
add
add
stc
lahf
mov
testl
and
dec
xor
decl
jmp
stc
mov
sub
cmp
pop
sub
loopne
xchg
fadd
cs
push
aaa
das
jecxz
in
or
pop
cmpb
adc
pop
aaa
cmp
adc
cmpsl
xor
lahf
mov
add
mov
push
fsubp
mov
das
push
or
add
outsb
push
movsb
ret
lock
adc
or
fidivrs
lret
mov
test
outsl
add
dec
clc
mov
int3
mov
mov
sahf
mov
sub
test
pushf
psubb
mov
das
out
inc
mov
sub
enter
ret
scas
scas
adc
push
mov
cmp
dec
decl
icebp
cmp
push
push
push
sbb
push
lds
ds
mov
jp
cmpsb
push
insb
mov
jb
adc
xor
icebp
mov
cmpsl
cmc
xchg
or
addr16
mov
cmp
mov
mov
sbb
out
int
xor
or
mov
aas
int3
into
sbb
int3
test
cmp
mov
lods
push
insl
mov
cmp
adc
nop
xchg
xchg
pop
mov
xchg
movsb
scas
adc
test
lcall
adc
outsl
jns
in
ss
xchg
add
sub
loopne
xor
test
pop
jae
aam
pop
adc
loope
mov
out
stos
stos
push
mov
out
push
insb
mov
mov
pop
adc
sbb
dec
rol
mov
pop
subb
sub
add
clc
or
popf
push
pop
pop
cmpsb
test
cltd
pushf
lcall
ffree
xor
lret
cmp
jnp
popa
cmp
shl
nop
dec
clc
mov
cltd
movl
and
mov
fiaddl
movsl
xchg
loopne
fidivrs
bound
lods
out
sub
in
adc
pop
dec
sbbb
or
fwait
cmpsl
pop
push
popa
xchg
add
mov
mov
cli
jnp
xchg
adc
nop
pop
negb
push
ljmp
or
out
sbb
jno
dec
lret
movsl
lret
pusha
or
sbb
push
ljmp
hlt
fstpl
js
pop
inc
sbb
sbb
insb
fwait
xor
fstpt
fwait
xchg
loop
inc
imul
jmp
ljmp
movsl
xor
sti
cld
hlt
mov
outsb
les
adc
cmpsl
add
and
mov
push
pop
sbb
lahf
sub
fcoms
lahf
cld
movsl
fnop
jo
sbb
loopne
jl
jbe
cmp
cmp
mov
jae
sub
add
add
cwtl
sbb
mov
sub
pushl
jecxz
mov
sub
int
dec
ret
les
gs
test
fsubs
sbb
repnz
push
sub
adc
xchg
nop
dec
jge
fsts
pusha
pop
ja
popf
add
push
adc
pop
and
pop
mov
cli
add
imul
inc
push
push
cmp
fcoml
jae
pop
shl
add
std
inc
cmp
ret
push
leave
sub
fisubrl
jo
in
mov
hlt
pop
and
jb
mov
sbb
jno
add
inc
out
sbb
jecxz
and
icebp
jg
fdivs
push
push
sub
dec
in
xchg
loopne
adc
xchg
dec
pop
lcall
hlt
mov
aad
pop
dec
enter
cmp
xchg
movsl
int
fwait
cmp
adc
ss
pop
xchg
mov
notl
shl
xor
int3
mov
and
xor
data16
les
add
fwait
insl
jg
shl
add
push
sbb
cmp
ret
fs
imul
mov
jl
xchg
sub
mov
inc
ds
jbe
outsl
popa
loope
jle
fistpll
popf
pop
pop
pop
or
mov
scas
ja
xchg
or
sub
mov
fsub
or
xchg
mov
sbbl
mov
sahf
push
insb
mov
jbe
fldt
fsubrs
out
mov
cmpb
xor
data16
xchg
das
mov
out
cmp
jl
imul
dec
sbb
adc
adc
mov
mov
and
jge
testb
adc
lods
aaa
and
cmp
loope
addr16
stos
xchg
lds
adc
mov
push
mov
or
stc
push
xorb
pop
cmc
jle
outsb
loopne
fdivrs
repnz
hlt
repz
xor
adc
mov
push
sub
mov
test
movb
roll
ficomps
and
dec
jns
fwait
aaa
xchg
es
clc
mov
sti
and
repz
testb
in
mov
fiaddl
sub
mov
ljmp
inc
dec
popf
mov
mov
lods
dec
sbbb
mov
enter
cmp
lahf
xor
lea
xchg
or
add
and
movsb
bound
test
xor
aam
adc
cmp
jmp
popf
dec
mov
int
not
sbb
out
sbb
xor
icebp
xor
in
and
xchg
mov
js
pop
frstor
or
stos
ss
pop
and
mov
adc
stc
push
cmp
iret
ret
push
rolb
sub
notl
push
js
push
and
or
sbb
lahf
loopne
adc
adc
mov
mov
xchg
push
int
loopne
enter
pusha
fst
push
sahf
cwtl
xchg
adc
in
pop
fdivrl
imul
test
int
inc
xchg
or
push
sub
insl
xchg
sub
jl
ljmp
daa
aas
sbb
or
aas
jb
lahf
leave
movb
mov
or
push
mov
push
push
mov
pop
mov
push
xor
pop
sbbl
jl
jl
mov
int3
inc
movsb
sbb
cmpsl
jge
sbb
loopne
leave
or
lock
faddp
dec
sbb
xchg
in
push
out
ret
sub
sub
pop
ja
fs
fsubs
xor
jecxz
scas
cmpsl
adc
pop
nop
mov
xor
mov
test
cmp
jno
mov
inc
pop
jg
mov
std
adc
push
data16
int
out
push
icebp
and
xor
pop
mov
jnp
sub
aaa
jae
mov
mov
lcall
mov
aas
add
cs
dec
lods
out
mov
sub
daa
daa
or
mov
out
mov
or
ljmp
mov
test
test
adc
and
ljmp
sahf
jmp
or
sub
dec
sub
dec
nop
add
xorl
cld
gs
lock
cld
jl
adc
and
ljmp
dec
adc
cwtl
hlt
enter
jo
test
cmpsl
jp
cmp
cmp
in
fsubrl
pushf
fdivrs
inc
jno
cmp
mov
js
xor
jmp
xor
jbe
cwtl
gs
imul
adc
cmp
push
movsl
dec
insl
xchg
xor
daa
mov
sub
fwait
into
jle
lret
add
mov
into
pop
mov
inc
imul
pop
pop
pop
xchg
mov
cmp
mov
int3
das
mov
std
adc
dec
mov
mov
xchg
push
dec
xor
aad
sub
dec
jle
jge
sub
xor
fwait
push
insl
dec
repnz
or
mull
sbb
imul
mov
rclb
out
mov
cmp
inc
mov
adc
and
jmp
pop
cmp
in
in
add
out
aaa
nop
outsb
rcrb
loope
test
test
call
fidivrl
mov
addb
stos
jno
jp
lret
fistl
xchg
inc
push
cld
test
stos
fs
insl
mov
adc
cli
fwait
xor
fistpl
sti
pop
gs
mov
subl
in
enter
add
lcall
inc
jns
negl
pop
popf
mov
int3
repz
fisubs
push
ficoms
mov
cli
inc
in
cmp
mov
mov
pop
push
add
push
call
loopne
add
pop
inc
jg
cmp
imul
ret
sbb
or
sti
cwtl
mov
mov
aas
add
sbb
movsl
adc
shrb
in
mov
fisubl
lea
mov
sbb
inc
cli
dec
into
pop
pop
and
dec
dec
adc
aaa
lds
das
sahf
ret
mov
leave
mov
mov
xchg
stos
subl
add
shrb
dec
sbb
or
adc
aam
mov
dec
insb
rcrb
test
pop
sbb
frstor
inc
scas
jbe
xor
loopne
jl
in
jbe
xlat
xlat
mov
mov
ds
pop
faddl
loopne
push
stc
adc
sub
shl
roll
dec
pop
pop
movl
lcall
pop
and
push
ret
lret
mov
sub
icebp
mov
scas
jp
mov
add
dec
mov
imul
cmp
jl
push
imul
loopne
test
sbb
fwait
sbb
pop
push
sti
test
xor
mov
push
daa
cli
test
movsl
xor
and
bound
xchg
mov
mov
dec
icebp
imul
pop
repnz
fnsave
lret
xlat
jmpw
int
arpl
je
cmp
push
sub
or
cwtl
popf
adc
xchg
mov
movsl
sbb
mov
arpl
jmp
cmpsl
push
cmp
aaa
in
daa
sub
stos
outsb
push
push
fs
pop
lods
mov
pop
pop
stos
fdivr
test
pop
inc
ds
push
mov
pushf
adc
pop
or
adc
ds
les
sar
repnz
insb
xchg
inc
test
stc
in
and
outsb
clc
push
in
fidivs
data16
jo
and
push
mov
jmp
xchg
into
nop
shll
out
enter
daa
ljmp
fisttpll
dec
lret
xor
mov
push
adc
cmpsb
call
and
mov
cmc
dec
pop
push
out
mov
jae
xchg
sbb
fs
xor
push
mov
repnz
dec
out
push
add
cld
test
inc
sbb
and
mov
fs
sahf
push
dec
sub
xchg
imulb
mov
in
lods
xchg
cmp
or
push
adc
loopne
inc
test
push
es
orl
or
fwait
add
fs
or
enter
adc
test
jne
sahf
add
jmp
pop
lods
pop
lods
mov
in
fcomip
cmpsl
insb
aad
test
mov
add
xchg
fisubrl
lods
lea
mov
adc
jmp
mov
xor
sub
cmp
idiv
xor
aad
pop
xchg
sub
cli
jns
cmp
test
xor
xchg
push
inc
or
and
shll
adc
adc
xchg
das
add
push
lods
ja
fstl
or
es
fnsaves
scas
in
sarl
and
stos
data16
data16
leave
adc
or
add
stos
hlt
test
adc
cmpsl
cmp
sbb
arpl
sub
or
out
mov
xor
jl
sub
fbld
loopne
out
push
insb
mov
addr16
push
xchg
cwtl
lret
popf
add
mov
shlb
mov
xchg
pop
mov
mov
mov
cmpl
hlt
mov
loop
sbb
jle
out
test
inc
mov
loop
push
int
or
cmp
jnp
mov
add
push
mov
dec
push
push
pop
lea
cmp
cli
adc
pop
dec
lea
into
mov
push
xchg
addr16
cmp
mov
aas
sbbl
adc
pop
test
repnz
popl
xchg
sbb
xorb
push
fcompl
stc
mov
xchg
out
out
dec
dec
push
mov
insl
jo
jp
pop
dec
or
call
push
pop
movsl
imul
mov
jle
fidivrs
jno
lods
add
call
dec
xor
push
test
test
jecxz
inc
push
popf
adc
pop
iret
cmpsb
aam
xchg
mov
les
lret
pop
xchg
adc
shlb
fwait
adcb
mov
test
push
push
aad
dec
mov
sbb
in
cs
aam
in
dec
cmp
stos
test
clc
add
mov
xchg
stos
jo
mov
rclb
lahf
push
neg
scas
jmp
cmp
xlat
fs
jae
fcomps
pushf
lods
scas
cli
ljmp
adc
sbb
mov
cli
dec
sub
fisubl
loopne
xor
cltd
enter
loop
and
push
add
sbb
ja
or
addl
lahf
cmp
arpl
int3
dec
xor
scas
dec
mov
xor
ja
pop
repnz
repnz
rcl
fs
sbb
adc
pop
stos
int
aas
in
push
incl
pop
fucomi
pusha
push
cmpsl
rcl
imul
scas
insb
add
leave
cmpsb
cmp
mov
push
pop
push
push
xor
jns
mov
loope
and
or
jge
lret
out
loope
out
mov
xchg
inc
lods
gs
jle
ret
repz
pop
dec
jb
or
sub
mull
gs
cmc
je
call
mov
fadd
loope
push
cmp
or
adc
fmulp
adc
loop
arpl
outsl
add
imul
ret
lahf
cltd
jge
data16
sub
pop
cmp
sub
jns
enter
mov
divb
insl
aam
push
cmp
push
outsl
mov
stc
or
push
in
push
or
push
or
mov
es
push
sub
mov
inc
push
fsts
xchg
mov
pop
clc
add
sbb
jecxz
and
xor
dec
lahf
adc
mov
int
add
dec
push
mov
pushf
jb
leave
push
jb
fs
or
clc
repnz
das
cli
add
fistps
aas
lods
dec
shll
popf
notl
mov
push
stos
jo
lods
jecxz
inc
shrl
sbb
jle
mov
sbb
mov
out
mov
sub
mov
pop
repz
jge
push
dec
lahf
outsl
scas
jecxz
mov
mov
mov
test
rcll
mov
xadd
shrb
xchg
jae
fcmovb
stos
push
inc
or
mov
lret
sub
and
call
mov
lock
mov
adc
push
cmpsb
jb
mov
aaa
ret
and
insb
fwait
rol
in
fsubr
inc
mov
bound
mov
dec
xchg
mov
dec
cltd
push
dec
fistpll
or
cmp
repnz
push
arpl
push
push
xchg
pop
pop
inc
imul
icebp
jae
xorl
sbb
scas
jb
testb
xchg
int3
adc
and
in
cmp
stos
push
addb
pop
push
mov
xchg
jae
xchg
out
jle
int3
push
adc
pop
out
sub
sbb
xor
sub
mov
jp
test
orl
sahf
int
lret
mov
adc
fst
lahf
daa
insl
pop
jle
ds
jno
adc
push
pop
int3
shrb
sti
scas
mov
pop
cmpsb
aas
adc
mov
in
mov
cmp
ja
mov
outsl
inc
xorb
fstl
cltd
ret
aad
xchg
out
push
aam
ss
mov
stc
rorl
rcr
lret
adc
dec
mov
jo
fcmovnb
sbb
leave
cmp
pop
nop
out
inc
mov
mov
push
and
cmp
adc
repz
adc
gs
call
stos
divb
sbb
adc
xorl
jno
out
int3
sbb
inc
fwait
and
jp
in
ret
adc
hlt
xchg
mov
xor
xchg
pusha
xor
testl
push
dec
add
cli
mov
jns
stc
test
mov
negb
mulps
add
int
enter
sbb
pusha
scas
mov
xor
xchg
mov
adc
jno
dec
sub
stos
orl
adc
or
jb
lock
inc
cmc
mov
imul
ss
mov
in
outsl
push
fbld
push
mov
clc
mov
fs
cwtl
push
dec
js
and
mov
add
or
push
add
cmp
sahf
das
loop
mov
jg
int
add
push
mov
cmpsb
inc
sarb
mov
subb
ret
inc
cmc
adc
outsb
xchg
mov
inc
push
scas
jnp
lock
aaa
inc
mull
repz
inc
sub
das
lea
xchg
out
out
mov
adc
lods
daa
mov
mov
cmp
shl
test
ret
or
popa
dec
ficoml
add
pop
popf
jo
inc
lahf
mov
push
mov
cwtl
adc
test
ror
ret
mov
leave
fdivr
mov
cmp
inc
out
xor
popf
pop
and
mov
xor
sub
stos
sbb
int
repz
lock
daa
and
pop
ficoml
adc
mov
loope
lret
sbb
mov
lds
cli
push
sub
cmp
jle,pn
xor
add
mov
fisttpl
sbb
outsl
pusha
inc
movsl
in
push
push
movsl
cmpsl
cmp
mov
in
mov
xchg
mov
cli
out
xlat
mov
sbb
sbb
jecxz
push
rcrb
inc
xchg
imul
lods
mov
and
ss
sub
leave
lods
xchg
cmpsb
mov
enter
leave
jnp
adc
cmp
inc
push
icebp
stos
push
mov
fucomip
sbb
mov
in
sub
sbb
imul
adc
roll
and
iret
loopne
adc
lcall
movsl
fs
sub
mov
sub
jns
cmp
or
sahf
xchg
push
daa
mov
push
push
pushf
dec
mov
add
ret
mov
shl
cld
xor
jge
inc
test
push
rolb
or
sbbb
xchg
or
or
sahf
into
out
dec
cmp
pop
sbb
sbb
mov
in
ljmp
add
pop
add
mov
push
daa
movsb
popl
scas
dec
repnz
mov
sub
loop
sbb
xchg
push
sub
add
je
sbb
sbb
arpl
cmp
push
dec
lret
jnp
pop
loopne
mov
and
inc
cmc
add
dec
ret
cmp
sub
inc
sbb
and
mov
fwait
push
pop
pop
nop
mov
fldl
cmp
sti
dec
or
mov
cld
es
loopne
xchg
in
push
scas
jns
movsb
bound
popf
pop
jecxz
lds
int3
mov
xchg
add
pushf
cmc
add
mov
xor
inc
mov
mov
lret
add
add
je
lock
lret
mov
das
jecxz
jne
rorb
rol
icebp
in
cmp
es
pop
rcrb
push
insl
addr16
divb
mov
aas
cwtl
mov
push
es
cmp
scas
xlat
cmp
dec
std
add
sbb
cwtl
loopne
xor
enter
ja
les
pop
mov
xor
out
test
repnz
pmaxsw
les
lretw
lods
in
pop
push
mov
mov
aas
pop
and
sub
out
bound
or
cld
subl
xor
and
jnp
out
mov
lock
testl
outsb
test
xlat
int3
cmc
push
xchg
xor
jno
dec
imul
shll
packsswb
mov
ficoml
lds
pop
into
jne
add
and
subl
notb
pop
in
xor
int
adcb
mov
pop
cltd
cmp
sub
ret
jmp
aam
mov
cmp
test
data16
pop
pop
mov
sub
pop
and
jne
int3
ljmp
repz
jo
add
sub
sbbb
cmc
popf
mov
pop
fadd
test
push
out
or
jns
mov
push
mov
jnp
pop
out
or
jecxz
sbb
mov
in
in
out
adc
adc
xor
dec
fsubl
mov
xchg
and
jecxz
or
sub
dec
sub
mov
in
jnp
cmpsb
jb
xor
insl
jmp
jo
jns
pop
dec
sub
mov
loope
dec
adc
call
cltd
shll
xor
pop
test
push
inc
mov
insb
push
and
xchg
leave
mov
and
lret
mov
jo
insb
jae
or
sbb
leave
xchg
xlat
rcrb
inc
xchg
out
arpl
cmp
cmc
popa
loop
pushf
inc
adc
dec
push
insl
xlat
inc
stc
cmpsb
int3
test
js
scas
pop
mov
xor
add
xor
cmp
rclb
push
adc
pop
test
cli
imul
push
cmp
aam
fcoml
jbe
jbe
pop
xchg
xchg
aad
mov
jg
aaa
pop
outsl
lods
out
enter
xchg
loope
ds
mov
hlt
mov
aam
lea
mov
popf
lods
cmp
enter
push
push
int3
fildll
enter
pop
sub
add
mov
fs
sub
cmp
mov
push
xchg
ljmp
jge
int3
in
xchg
out
jns
clc
aam
loope
mov
in
mov
xchg
idivl
fildl
bound
in
lods
cmp
add
jg
rorl
cmpsl
ja
sub
js
out
les
fmull
mov
cld
dec
gs
mov
std
cmp
mov
fmull
xchg
jge
into
sub
sub
repz
int3
inc
fcomi
xchg
push
push
cmpsb
movsb
imul
mov
popf
clc
rorl
in
mov
jns
imul
adc
add
jno
addb
add
lahf
jmp
push
into
jns
out
adc
mov
jl
sub
fcoml
xchg
subl
test
inc
mov
movsb
cmp
mov
and
adc
and
mov
in
lahf
adc
inc
scas
je
xor
imul
leave
mov
scas
pop
fs
mov
push
jg
test
dec
ret
inc
mov
ret
add
clc
jecxz
xchg
add
daa
jge
adc
aad
xor
adc
scas
pop
jo
cmp
stos
dec
push
imul
lret
inc
clc
mov
roll
mov
stos
icebp
and
into
cli
cmpsb
fmuls
pushf
xchg
jno
enter
addb
dec
and
loope
pop
jbe
mov
jns
mov
sub
out
xor
sbbl
lock
add
bound
stos
imul
das
sar
rep
jbe
mov
pop
repnz
xchg
jae
in
xchg
ror
lock
push
xchg
xor
jbe
jns
dec
mov
push
sub
out
fs
sbb
int3
sub
mov
mov
mov
and
jns
pop
sub
cmp
cltd
aad
fcmovnbe
pop
sub
pop
ror
and
xchg
lds
xchg
jg
lahf
mov
xchg
xchg
arpl
sbb
xchg
cmpsb
mov
push
jo
aaa
cmpsl
movsb
jecxz
jno
jg
pop
leave
movb
add
mov
cld
sbb
or
push
jbe
jno
cmp
pop
mov
cmp
loop
outsb
add
fwait
add
jae
add
adc
rol
and
inc
and
mov
dec
movsb
push
xor
js
and
xchg
movsl
add
inc
jns
push
sbb
bound
lods
dec
data16
add
icebp
push
mov
ljmp
fsubl
push
out
icebp
jle
pop
into
adc
repz
push
adc
add
add
inc
test
xchg
sbb
sub
and
data16
jnp
and
ss
imul
cmp
or
dec
stos
push
stc
and
out
sahf
in
sub
insl
jecxz
cmpl
fcoml
push
xchg
mov
or
loop
das
inc
fimuls
sub
and
lods
in
fs
movsb
repnz
popl
or
je
mov
or
and
xchg
mov
in
xor
jo
cmp
dec
or
mov
pushf
mov
and
shrb
cwtl
loope
inc
rorb
push
shll
push
leave
lret
out
cwtl
loope
sti
test
test
in
out
sbbb
mov
cld
dec
das
les
out
and
mov
inc
jo
inc
mov
orb
mov
mov
ret
jecxz
lahf
push
jo
lds
and
ja
scas
pop
add
inc
pop
cs
xor
popf
aam
bound
jbe
jp
out
pop
xchg
fst
pop
sub
mov
les
rcrl
stos
aam
sub
mov
dec
and
sub
xchg
xchg
ljmp
xlat
cwtl
in
dec
jns
inc
pop
and
and
adc
jg
push
jbe
sub
cs
push
icebp
xchg
lcall
js
roll
jecxz
dec
shrb
inc
or
aad
cmp
nop
out
cmp
pop
adc
sbb
and
cmp
or
sti
sub
xchg
dec
push
lods
loope
outsb
lret
movsb
test
pop
fisubl
enter
in
ret
ret
xchg
xchg
push
dec
pop
dec
fcoms
pop
jns
push
fisttpll
cmpsl
ljmp
shll
fmull
or
xor
jl
jecxz
stos
icebp
dec
mov
dec
adc
cmp
pop
xchg
mov
add
test
sub
cmp
jb
jmp
int
divb
negb
sub
pop
dec
das
xor
push
test
and
pop
xchg
test
xor
scas
xchg
dec
cmpsl
and
adc
shrl
hlt
cmp
mov
mov
adc
or
aam
or
pop
dec
ljmp
scas
pop
xchg
sub
xchg
jns
pop
sub
ljmp
cli
jle
ja
push
push
jo
ljmp
pop
clc
xor
inc
inc
inc
subb
imul
std
mov
or
stos
jae
sbb
and
cltd
dec
lock
outsb
mov
daa
movsl
hlt
fwait
sub
outsl
inc
mov
testl
dec
in
mov
in
fs
fisubl
jge,pn
repz
pusha
xchg
iret
test
lret
cmp
add
fimull
insb
mov
daa
jae
inc
or
lret
and
push
lahf
cltd
int
inc
js
mov
adc
insb
sub
dec
dec
dec
insl
push
mov
adc
int
out
adc
and
negb
mov
xor
nop
flds
jmp
or
pop
testl
addl
in
sub
xor
aaa
rolb
enter
push
imul
or
adc
insl
pop
test
pop
and
jnp
cmp
pop
inc
bound
std
xor
mov
mov
adc
cmp
fucom
pop
inc
sub
scas
xchg
loopne
lahf
cmp
pop
mov
inc
repnz
scas
add
out
xor
adc
jecxz
in
add
jecxz
dec
fs
xor
mov
mov
and
sarb
sbb
mov
mov
iret
nop
jp
out
xchg
inc
lods
loope
je
setle
mov
stc
dec
adc
outsb
xor
stc
mov
mov
insb
sub
add
jno
shlb
inc
popa
cmp
cmp
pop
pop
mov
lds
es
xchg
push
popa
jne
js
or
mov
scas
or
mov
bound
test
test
pusha
test
addb
repnz
xchg
jb
fcomps
aaa
adc
or
shll
push
lock
pop
xchg
mov
cmp
pop
xor
push
ljmp
sbb
das
lret
lods
out
rorb
aaa
lods
sub
cmp
call
xor
cmp
cltd
xorl
incb
adc
test
repz
sahf
cwtl
mov
push
lea
mov
cmp
adc
add
push
inc
pop
repz
push
mov
pushf
pushf
xchg
pop
cmp
cld
mov
jae
in
repz
inc
popa
mov
loopne
std
cwtl
lret
cmp
cwtl
mov
or
inc
out
sub
inc
mov
pop
std
inc
push
stos
push
pop
repz
add
pop
add
rcrl
jle
lds
xor
mov
dec
mov
cmp
test
mov
dec
into
test
movsl
xchg
enter
mov
adc
cmp
lock
and
jae
ljmp
es
push
mov
out
mov
in
jns
jae
pop
rcl
or
mov
dec
iret
add
aaa
pusha
mov
pushf
adc
adc
mov
std
adc
push
pop
repnz
mov
mov
lock
cmp
inc
adc
add
push
xor
mov
jbe
testb
gs
mov
call
sub
addr16
in
push
xor
out
stos
fsubrp
addb
imul
dec
lods
insb
jl
rclb
mov
cmpsl
test
lock
nop
stos
adc
push
cmp
bound
mov
xchg
cmp
cwtl
cltd
shll
push
add
jle
test
jne
mov
or
mov
adc
cmp
sub
sbb
movsb
pop
push
std
xchg
sar
dec
ret
push
add
jb
pop
in
mov
arpl
xchg
fwait
mov
xor
dec
and
idivb
lock
shrb
xor
sbb
inc
icebp
mov
aam
jmp
and
xlat
mov
shlb
xchg
jge
rclb
mov
int3
xchg
dec
hlt
adc
daa
movsb
clc
test
pop
cmpsb
and
outsb
and
sti
inc
xchg
cmpsb
enter
cmpsl
stc
repnz
ss
aam
cld
jo
into
xor
jo
jecxz
inc
sub
inc
call
cmpsb
push
jle
ljmp
mov
pop
popa
add
in
pop
lea
dec
js
jmp
push
daa
in
mov
enter
roll
ljmp
out
popa
inc
add
or
jae
dec
mov
cmpsb
in
out
jecxz
in
sub
mov
andb
xor
cmpl
and
adc
sub
shr
lahf
negl
loopne
inc
mov
fisubrs
sub
sti
push
push
aam
popa
pop
lret
mov
add
sub
sbb
mov
sub
sub
imul
xor
stc
jecxz
jl
pop
pop
sub
popf
jge
dec
xchg
fs
bound
insb
jl
jbe
mov
xchg
adc
cmp
mov
or
pop
xchg
lea
mov
movsl
pusha
cmp
jne
int3
jg
sub
push
cmpsb
loop
cli
mov
andl
pop
cmpsb
push
sbb
lret
daa
push
or
jne
fcmovnbe
cwtl
lods
call
or
int
mov
cmpsl
aam
push
xchg
repnz
mov
cltd
movsb
scas
movsl
jnp
rcll
lahf
mov
in
aaa
gs
dec
test
xorb
test
lret
inc
mov
leave
shl
sbbb
or
arpl
stos
xor
shrb
jb
mov
jbe
mov
pop
inc
mov
jl
mov
rorl
dec
daa
orb
and
rcll
push
mov
test
out
in
xlat
xchg
xor
mov
sbb
mov
test
lock
les
push
dec
jbe
sbb
pushf
jmp
adc
into
inc
movsb
pop
fsubrs
aad
add
das
ja
stos
dec
push
add
mov
enter
lahf
ret
lds
fimull
sub
into
jo
pop
in
xchg
xor
out
sti
dec
mov
push
mov
ds
shlb
cltd
cmp
std
data16
mov
fdivrl
push
das
inc
xchg
dec
jns
mov
out
jmp
test
cmpsl
jge
pop
and
mov
cmc
stc
xor
inc
mov
xchg
dec
jl
das
sbb
and
dec
movsb
cmp
std
mov
inc
jle
push
xchg
repnz
cmpsl
push
ret
orl
add
dec
add
and
out
mov
jge
andb
adc
add
sbb
sub
pop
mov
mov
loope
int
test
xchg
pop
aas
mov
gs
aaa
sub
lret
cltd
or
xor
push
cmp
fwait
sub
lds
movl
in
dec
jno
scas
xor
mov
adc
je
push
std
out
subl
or
pop
jb
frstor
jp
ret
pushf
pop
das
das
ja
ja
lds
outsb
outsb
xchg
xchg
ja
rcl
jp
xor
cmp
sbbb
dec
mov
bound
ror
into
out
fsubrs
ret
pop
inc
sub
mov
leave
xchg
dec
shrb
js
imul
ret
lea
in
mov
scas
nop
sub
sahf
roll
mov
je
push
int3
sbbl
sahf
dec
xor
mov
and
fiaddl
inc
arpl
and
mov
mov
add
fadd
enter
repz
into
in
clc
pusha
stos
jge
xchg
ret
push
cmpsb
jmp
sti
scas
inc
push
nop
pusha
mov
in
xchg
add
and
popl
sbb
sbb
dec
rcr
adc
jp
test
and
cltd
mov
mov
mov
hlt
mov
loop
mov
popa
loopne
mov
mov
rep
lcall
fsubr
enter
leave
bound
cmp
xchg
push
cmp
fsubrl
icebp
push
xlat
cmpb
out
fisttpl
pop
repnz
adc
jno
cmp
mov
insb
sub
rolb
xchg
mov
mov
dec
dec
rcl
pop
insb
les
lea
push
in
sti
lds
aas
mov
ret
mov
rorb
repnz
or
and
jbe
repz
mov
jae
jl
jae
cmpsl
sbb
xchg
adc
xor
jp
cs
jge
push
mov
or
push
sub
push
iret
mov
addl
stos
imul
imul
push
add
add
add
cmp
call
push
aad
push
mov
pop
mov
filds
adc
jl
dec
jo
adc
sbb
push
mov
mov
push
fwait
mov
cmp
js
int3
je
pushf
mov
cld
add
jne
into
ss
sarl
scas
ljmp
add
add
fstpl
inc
push
push
jg
ffreep
mov
mov
xchg
xchg
sub
adc
add
stc
inc
fs
add
loope
std
jno
filds
mov
or
repz
mov
adc
scas
xlat
mov
aam
loop
push
shlb
pop
pop
test
idivb
add
pushf
xor
or
ret
adc
adc
int3
insl
std
and
jp
jbe
repz
sar
rorl
and
loop
add
es
jno
jl
scas
mov
mov
mov
xor
mov
movsl
pop
dec
es
mov
mov
test
add
js
int3
call
sub
adc
cli
daa
cmpsb
push
in
dec
movswl
test
mov
fiadds
addl
adc
out
mov
push
bound
imul
push
test
js
mov
fisubs
test
repz
jae
xchg
cmp
js
sbb
sub
sbb
in
cmp
stos
pusha
mov
pop
sbb
sub
adc
clc
aaa
imul
mov
lods
mov
mov
ret
in
xchg
jno
xchg
cmc
leave
lret
adc
jmp
xchg
rcl
adc
add
jbe
cmp
out
pop
cmp
repnz
dec
js
add
sahf
ljmpw
mov
int3
fmull
mov
stos
addr16
sbb
sbb
sbb
push
mov
stos
push
pop
mov
lds
mov
mov
push
cmp
daa
add
out
jecxz
pop
inc
xchg
sbb
jl
hlt
lock
in
sbb
dec
sub
and
sub
pop
push
aaa
lret
rorl
dec
outsb
scas
jge
cltd
int
shll
sbb
xchg
add
inc
pop
mov
fs
das
enter
xor
mov
decb
add
imul
adc
int3
and
addr16
std
ja
movsl
adc
inc
cmpsl
mov
pop
lds
cltd
out
push
out
lea
mov
dec
sub
dec
cmp
xchg
bound
mulb
xchg
inc
sahf
dec
loop
push
stos
in
mov
mov
cli
and
jg
jp
insb
xor
mov
ljmp
cmp
je
jo
into
sub
lahf
shl
pop
neg
pusha
in
test
sbb
push
fdivs
dec
mov
dec
add
push
enter
subl
rol
int
inc
mov
add
imul
cmp
mov
pop
insl
test
aad
mov
punpcklwd
pop
push
test
push
lock
mov
dec
int3
loop
aas
mov
ss
or
in
cmc
incb
test
xor
lea
jmp
movsb
test
test
sbb
xor
enter
les
call
repnz
pop
insl
or
mov
outsl
add
fistl
cltd
das
in
xchg
add
lods
decl
pop
mov
jnp
lea
cmp
mov
sbb
pop
xchg
and
dec
add
add
adc
sahf
sar
int
mov
jmp
xor
addr16
dec
mov
dec
mov
stos
aam
pop
mov
sbb
cmpl
push
repz
or
xchg
in
jle
xor
out
jae
arpl
xchg
nop
fstpl
mov
mov
adc
sub
mov
repz
push
daa
pop
popf
in
jge
icebp
rorb
push
sbb
cmp
push
out
lahf
cmp
sub
mov
xchg
xchg
push
stos
inc
xlat
add
mov
or
xchg
lret
mov
or
push
ds
es
mov
xor
jne
push
hlt
pop
sti
inc
jmp
jbe
mov
xlat
test
cmp
mov
push
and
push
push
push
pop
fmull
cmp
add
insl
das
inc
out
inc
adc
xchg
rcll
imul
xchg
imul
loopne
push
push
ljmp
push
and
dec
cwtl
imul
in
sub
mov
subl
shrl
pop
repnz
jmp
fildll
and
cmp
cltd
decl
in
cmp
ja
mov
into
or
or
cwtl
pop
or
xchg
les
outsl
fmull
jo
outsb
neg
mov
aas
mov
aad
fmuls
xlat
or
jg
ss
xor
pop
jae
aam
popf
sub
push
or
aaa
adc
xor
cmp
sbbl
add
jbe
sbb
insb
test
adc
push
sbb
add
cltd
mov
imul
cmpsb
cwtl
mov
js,pn
mov
lods
push
xchg
icebp
bound
sti
dec
dec
fstps
cs
sub
xor
dec
and
in
push
xchg
jecxz
cmp
pop
jnp
pop
lret
jnp
loope
sbb
inc
sbb
or
add
jns
out
xchg
fisubrs
sarb
lea
jo
inc
jg
pop
lods
in
or
and
mov
out
loop
shlb
and
inc
lock
jmp
jle
sahf
addr16
cmp
in
fwait
cmp
sbb
scas
nop
push
fistl
daa
mov
pop
jp
push
inc
mov
push
pop
lret
add
inc
jns
xchg
lret
ret
rclb
mov
arpl
mov
sti
add
mov
add
test
js
push
mov
movl
subb
enter
ret
out
add
cwtl
popf
das
insb
pop
sbb
in
into
sbb
stc
and
rclb
fcmovb
les
or
rol
mov
imul
pushf
mov
das
clc
lds
scas
mov
push
pop
sbb
ja
or
dec
mov
push
xor
inc
sarb
add
inc
mov
pop
dec
cli
aaa
mov
fs
fidivs
lea
cmp
inc
xchg
lock
cmp
mov
sbb
fistps
aas
adcb
lock
xor
cld
gs
js
inc
mov
outsb
xchg
lret
mov
mov
addr16
decl
push
lcall
dec
push
add
cmp
bound
test
sub
dec
mov
xor
add
jnp
cwtl
mov
push
jge
jecxz
sub
hlt
fisttps
push
xchg
inc
int3
leave
mov
sbb
fucomi
in
xchg
mov
into
mov
jb
sbb
sub
jmp
cmp
push
or
dec
sub
call
mov
subb
sub
push
call
and
adc
ret
cmpsb
dec
inc
test
pushl
jns
inc
dec
jbe
mov
mov
in
jne
data16
dec
into
add
in
pop
lret
jl
pop
and
mov
pop
shll
and
stos
jge
lcall
cmp
hlt
pop
adc
pop
jns
sarb
dec
dec
and
mov
test
in
out
jae
dec
jg,pn
popf
dec
inc
repz
dec
mov
aas
xchg
jg
mov
dec
fidivs
push
rclb
nop
xchg
mov
jo
dec
sbb
cmpsb
inc
cmp
xlat
adc
popa
fisttps
popf
push
fldl
jge
lods
imul
sub
dec
test
xor
dec
lcall
or
xchg
lds
xchg
inc
cmc
pop
push
sti
push
cld
jp
or
enter
aam
data16
cmp
push
and
add
add
pop
adcl
jmp
sbb
inc
aas
orb
jb
inc
and
js
fwait
mov
cmp
pop
test
push
int
cmpb
adc
xor
dec
stos
sub
xchg
inc
sub
mov
ret
outsl
in
push
adc
int3
out
dec
arpl
ss
mov
hlt
jae
pop
pop
dec
aas
mov
sub
test
lret
jl
push
inc
cmp
arpl
mov
lock
or
xchg
movsb
hlt
in
faddl
movsb
gs
pop
out
das
mov
xor
bnd
mov
mov
clc
pop
sbb
mov
ja
mov
fcoms
repnz
movsl
mov
xchg
mov
les
test
in
aas
xor
or
in
cmpsb
xchg
cld
dec
movsl
mov
pop
jo
cmp
mov
push
sub
push
scas
adc
mov
scas
push
push
mov
aad
lcall
dec
dec
fadds
insb
jnp
fidivrs
xchg
jge
sbb
repz
mov
mov
pop
xor
jmp
mov
pusha
add
and
or
lret
rcr
mov
inc
in
xlat
push
mov
and
movsb
fnsave
cli
scas
xchg
mov
sbb
push
mov
push
movsl
test
cmp
mov
test
pop
pop
jo
jecxz
sub
out
mov
out
arpl
or
and
je
mov
loope
xor
fmuls
std
sub
rol
xchg
mov
sbb
fcmovne
push
mov
pusha
arpl
push
pop
sbb
dec
mov
pop
or
mov
fdivs
jbe
jmp
lods
push
aad
fwait
or
pop
mov
shl
adc
pop
imull
pop
icebp
sbb
cmpsl
int3
or
das
gs
xchg
and
repz
mov
sbb
cmp
cmp
add
sub
in
aas
dec
fiaddl
scas
std
push
or
les
mov
sub
inc
fs
fistpl
push
mov
es
dec
int3
lahf
lahf
or
mov
loop
popa
aam
xor
stos
out
in
sbb
pop
loop
sub
jne
dec
into
fs
fisubs
inc
sti
mov
ret
xlat
mov
xlat
lcall
sub
mov
fucomip
xor
cmc
mov
into
mov
jle
cmc
rcrl
or
xor
cmp
mov
or
aas
lcall
mov
jne
and
pop
lds
test
fwait
or
mov
dec
cmp
stos
pop
test
xchg
mov
cwtl
sbb
sub
sahf
insb
movsl
enter
cmp
sahf
add
dec
inc
movsl
sar
mov
and
aam
sbb
daa
xor
xchg
mov
fiadds
imul
dec
pop
mov
sbb
push
arpl
mov
push
lock
mov
lcall
push
dec
pop
cld
xchg
push
repz
xchg
xchg
xor
sahf
cmp
push
jp
int
xchg
std
push
mov
adc
sahf
jg
ja
xchg
int3
insl
adc
xchg
push
cmp
mov
stos
pop
dec
sarb
xchg
jle
inc
or
add
sub
aam
outsb
mov
xlat
push
cmp
pusha
jbe
jge
mov
push
push
test
inc
out
divb
push
mov
fistpl
int3
scas
xor
cmc
jmp
popf
pop
icebp
and
jmp
push
mov
ss
jg
cs
jae
lods
and
fsubp
cltd
push
fnstenv
cld
jae
dec
sub
dec
shlb
mov
in
fdivrp
mov
sub
xchg
inc
ficoml
cmpsb
shlb
notl
sbb
fidivrs
adc
dec
pop
and
jb
jg
lcall
les
pop
sub
sbb
sub
jmp
jbe
fimull
pop
dec
dec
mov
inc
jae
xchg
test
mov
mov
sbb
and
xchg
out
fwait
mov
clc
arpl
rcrb
leave
mov
sbb
les
xchg
sbb
insl
and
popa
cmpsl
cmp
les
sbb
cmp
jae
inc
or
bound
sub
push
mov
push
lds
xlat
gs
sbb
inc
leave
mov
ret
push
mov
inc
jge
push
dec
xor
inc
mov
out
pop
xchg
mov
mov
inc
aas
ds
loope
dec
pusha
xlat
scas
mov
in
adc
mov
xor
xor
sbb
dec
xchg
mov
stc
add
cmp
push
push
push
adc
or
sbb
clc
and
lret
push
ja
add
outsl
jb
jo
jb
outsl
add
add
je
jns
add
je
push
add
popa
insl
add
add
jne
jae
je
add
inc
insb
insb
popa
push
add
data16
insb
add
add
add
jo
outsl
add
jb
add
outsw
jae
gs
jae
jae
gs
add
add
jns
add
add
jae
add
outsb
outsl
je
add
jae
outsb
add
imul
ja
jae
je
outsl
add
popa
jb
popa
add
add
add
jne
add
add
jne
add
bound
bound
jb
outsl
add
add
jb
add
je
push
add
add
jne
outsb
add
jae
push
add
je
add
push
add
add
outsl
data16
outsl
jo
jb
jns
add
data16
add
outsb
add
popa
outsb
add
imul
imul
popa
add
add
add
add
add
add
je
gs
add
add
add
outsl
push
gs
insb
popa
push
add
add
je
ja
imul
add
data16
outsb
add
add
je
gs
jae
jb
add
add
jae
add
popa
arpl
gs
insl
outsb
je
outsl
data16
insb
add
add
