pop
mov
xchg
xor
cmpsl
cld
dec
dec
xchg
push
out
outsl
push
add
lods
mov
test
shr
sbb
xchg
daa
in
cmp
and
xchg
jmp
test
test
sahf
mov
or
push
xor
jne
cwtl
ss
push
cli
fisttps
add
inc
xor
iret
shll
cltd
repnz
cmpb
cmpsl
mov
mov
adc
sub
test
movsl
in
mov
lret
loop
and
and
aaa
add
and
je
fdivp
jge
or
repz
lea
in
pop
int3
sub
xchg
std
pop
sti
mov
fidivrl
int3
jno
or
and
sbb
aad
jnp
clc
cmpsl
sbb
mov
sub
or
xchg
inc
lret
fldcw
add
push
fsub
faddl
xchg
cwtl
adc
gs
idiv
mov
in
mov
int3
lds
mov
or
fists
int
in
mov
push
int3
xor
popa
hlt
inc
shll
out
bound
mov
test
icebp
adc
jle
sarb
pushf
mov
or
insb
add
out
rorl
dec
das
fstpl
cmc
das
or
inc
testb
jge
xor
mov
fbld
js
jne
pushf
cs
push
jae
fldt
dec
sbb
dec
nop
jno
hlt
cs
cli
subb
push
movsl
mov
jo
mov
push
inc
popf
mov
add
push
test
mov
dec
insb
pop
dec
cwtl
or
xchg
int
xlat
mov
test
mov
dec
mov
dec
cmp
pushf
fs
inc
pop
stc
jb
dec
sti
jne
pop
das
negb
sub
sarb
icebp
or
sbb
and
shl
cmp
push
cwtl
adc
jecxz
push
pusha
es
mov
add
mov
aam
pusha
inc
mov
scas
pop
scas
or
mov
xor
in
aaa
dec
xchg
xchg
sbb
xchg
ja
or
sbb
jg
and
out
fldcw
sub
sbb
shrb
mov
adc
push
mov
lcall
xchg
rcr
icebp
fiadds
jnp
cmpsl
test
cmp
pushf
cmc
pushf
pop
sbb
cltd
sub
daa
pop
cmpsl
add
adc
mov
outsb
sbb
movsb
and
xchg
or
or
add
sbb
bound
shlb
inc
mov
pop
int
cmpsb
gs
or
pop
push
jbe
push
test
push
cmpsl
sarl
sub
fidivrl
xchg
out
inc
std
loopne
pop
icebp
cmpsb
sub
addr16
pusha
and
ljmp
shrl
in
jo
ret
cmpsb
popa
test
into
lock
scas
pop
add
mov
shlb
inc
ljmp
mov
jnp
mov
mov
dec
fbstp
arpl
icebp
jmp
pop
ror
and
sbb
mov
jb
inc
push
and
int3
lret
sarb
add
imul
push
xlat
inc
push
sub
push
pop
push
out
mov
add
jge
int
je
pushf
jbe
in
iret
in
or
arpl
and
ja
ja
sbb
sub
jne
je
adc
xchg
orb
std
jne
repz
jnp
frstor
and
cmp
call
in
subl
in
xor
dec
add
imul
xchg
sbb
xlat
out
mov
inc
daa
jl
cmp
sbb
aaa
ss
mov
pop
in
jno
lea
mov
sub
cmp
out
aas
scas
cld
daa
pop
std
pop
mov
mov
push
je
jle
int
or
push
test
inc
icebp
ja
add
xor
sbbb
dec
test
cmp
in
ds
es
inc
imulb
in
movb
or
xchg
cld
stos
xchg
cmpsl
cltd
pop
mov
jecxz
and
jo
adc
das
and
sti
js
adc
mov
andl
push
dec
push
push
jno
jo
or
adc
pop
adc
gs
jns
and
imul
push
mov
andb
and
scas
sbbl
ds
inc
sbb
adc
leave
push
push
jnp
ds
int3
pop
fs
mov
xor
dec
int
mov
xlat
push
ss
mov
lds
xchg
insl
mov
repz
xchg
aaa
mov
ds
fisubrs
addr16
out
stos
popa
int
out
ret
test
daa
mov
out
fxch
pop
inc
cmpsl
in
sbb
cmpsb
mov
ficoml
lcall
adc
mov
ljmp
orb
mov
negl
jmp
clc
loope
add
stc
or
loop
jmp
xchg
pop
push
insl
push
dec
or
pusha
sti
call
xchg
loop
leave
icebp
jecxz
or
cmp
icebp
inc
inc
loope
fsubs
popa
pop
adc
lahf
outsb
or
das
lret
aaa
xchg
repnz
sbb
cmp
mov
and
std
mov
loopne
push
xor
sub
mov
adc
mov
mov
xchg
lahf
ret
mov
icebp
sub
popa
sti
fisttpl
lods
jno
stc
inc
rcrl
adc
sbb
test
push
xor
es
out
push
out
and
jns
jne
es
adc
dec
push
xor
xchg
mov
jge
pop
lret
pop
aas
clc
repnz
mov
das
subb
cmp
cltd
adc
and
popa
cmp
icebp
mov
pusha
test
mov
push
jne
jecxz
lcall
mov
stos
mov
sub
fdivs
push
mov
xchg
test
push
in
xlat
loop
js
adc
jnp
jo
sti
je
loopne
xor
insb
stc
rcrb
sbb
xor
test
adc
sub
cmp
cmp
cli
out
adc
es
push
xchg
sbb
or
add
adc
add
stos
loop
icebp
test
or
mov
cmp
push
in
mov
movsl
ret
pop
in
cmp
jae
stos
test
out
inc
test
in
xchg
mov
lea
xor
rclb
mov
jno
jl
enter
lret
scas
mov
fdivr
mov
in
mov
inc
mov
loopne
jnp
cli
fists
pop
stos
jg
dec
mov
adc
ret
xchg
adc
mov
mov
daa
ret
test
jp
cmpsb
in
push
insl
lea
dec
jmp
je
lds
pop
push
js
in
mov
loop
mov
fs
push
stc
jns
pushl
adc
icebp
fildl
lock
jno
fbld
cli
js
mov
sbb
xor
fwait
cmp
lock
push
adc
stos
xor
push
mov
inc
add
call
sub
mov
call
movswl
push
movsbl
call
dec
sub
or
mov
mov
lea
call
mov
inc
mov
add
lea
sub
and
dec
dec
inc
and
sub
dec
call
sub
add
add
movsbl
sub
call
mov
inc
call
dec
dec
movzwl
add
add
lea
lea
or
mov
pop
or
add
lea
add
sub
pop
sub
inc
pop
inc
mov
xor
lea
pop
sub
xor
imul
sub
mov
sub
sub
dec
pop
dec
dec
pop
dec
sub
mov
movswl
mov
call
xor
add
mov
add
ret
dec
mov
push
and
dec
push
inc
movzbl
push
imul
inc
push
lea
sub
push
inc
dec
mov
mov
and
push
dec
ret
push
mov
sub
imul
mov
dec
mov
inc
push
add
dec
dec
call
pop
ret
jmp
lea
and
add
movsbl
movzbl
mov
lea
xchg
or
and
or
dec
xor
or
lea
and
add
inc
mov
or
dec
jne
mov
mov
mov
and
pop
dec
inc
pop
and
dec
pop
inc
imul
or
inc
lea
sub
mov
imul
mov
lea
mov
add
ret
push
push
and
add
push
sub
dec
add
xor
mov
dec
push
add
inc
mov
add
push
mov
sub
lea
sub
inc
inc
mov
push
mov
mov
add
push
dec
imul
xor
movzbl
movzwl
push
mov
lea
push
sub
sub
pushl
add
call
add
add
dec
movzbl
dec
lea
movsbl
add
add
pop
ret
dec
cmp
jb
mov
xor
lea
dec
mov
dec
dec
mov
add
dec
inc
add
dec
inc
mov
sub
mov
lea
or
cmp
jb
mov
pop
lea
dec
dec
add
mov
dec
add
inc
sub
xor
mov
xor
inc
dec
xor
xor
dec
mov
imul
imul
test
jbe
dec
sub
sub
and
movzbl
inc
add
lea
xor
inc
add
inc
and
add
imul
mov
movzbl
add
movzbl
add
dec
add
imul
sub
and
movswl
inc
mov
add
sub
mov
dec
sub
mov
add
sub
mov
add
or
inc
inc
dec
inc
dec
jne
lea
mov
add
add
sub
xor
sub
mov
inc
dec
mov
mov
mov
movswl
lea
inc
or
inc
dec
lea
mov
inc
dec
test
jbe
lea
inc
sub
lea
mov
lea
sub
mov
imul
xor
movzwl
inc
lea
mov
lea
inc
mov
imul
mov
add
inc
add
and
dec
movzwl
mov
inc
imul
movzbl
add
imul
add
dec
and
and
imul
mov
mov
dec
mov
movzbl
and
inc
mov
dec
inc
mov
mov
mov
movzbl
dec
mov
add
imul
jmp
push
dec
inc
add
mov
inc
add
add
add
imul
lea
or
lea
inc
xor
imul
inc
sub
inc
dec
sub
inc
mov
lea
lea
inc
mov
mov
mov
movzbl
mov
inc
inc
xor
movzbl
inc
mov
lea
mov
mov
cmp
je
add
inc
dec
push
sub
call
call
lea
inc
call
call
add
or
movswl
mov
dec
mov
inc
ret
mov
movzbl
pop
add
ret
push
mov
inc
mov
inc
and
push
imul
inc
push
inc
push
dec
push
mov
mov
imul
add
or
call
mov
push
dec
add
xor
lea
sub
sub
neg
mov
movzwl
dec
sub
inc
mov
mov
and
dec
mov
inc
dec
inc
dec
dec
dec
je
inc
xor
movswl
mov
lea
dec
mov
sub
lea
and
mov
repnz
lea
movswl
add
sub
jmp
dec
lea
dec
inc
dec
inc
inc
mov
jmp
dec
mov
mov
add
xor
and
sub
lea
pop
pop
ret
push
dec
inc
add
add
add
imul
and
inc
inc
mov
add
mov
imul
or
inc
dec
mov
dec
xor
add
dec
dec
mov
inc
xor
inc
pop
ret
sub
mov
mov
and
sub
mov
imul
mov
mov
add
mov
mov
and
dec
xor
sub
inc
mov
sub
mov
inc
dec
or
add
add
mov
xor
cmp
jb
imul
push
lea
sub
push
inc
inc
push
dec
add
xor
lea
sub
xor
add
add
xor
dec
dec
push
add
mov
mov
mov
sub
xor
movzbl
add
mov
mov
xor
add
movzbl
movswl
lea
mov
xor
add
and
mov
add
lea
dec
movzbl
inc
dec
lea
inc
imul
inc
inc
sub
mov
add
inc
imul
movzwl
dec
jmp
dec
jmp
jb
jle
push
ror
or
add
filds
ret
sbb
mov
add
leave
jecxz
pop
movsl
adc
mov
lods
jo
negb
mov
enter
sbbl
aad
xchg
sub
push
mov
insl
mov
sarb
lea
xchg
scas
push
mov
xchg
xchg
dec
dec
test
hlt
mov
andb
scas
push
xchg
shlb
adc
fs
aam
call
or
xor
outsb
pushl
shlb
test
stos
je
fistl
lret
sub
cmc
mov
out
pop
out
adc
test
out
inc
lods
jns
cmc
sub
aad
nop
ds
cmp
jg
add
sar
and
imul
sarb
imulb
add
push
inc
sub
push
test
inc
int3
xchg
lods
xchg
jae
or
sbb
push
and
and
mov
sub
mov
dec
dec
fwait
xor
jmp
lcall
jno
jg
fiaddl
inc
stos
mov
adc
mov
pop
xor
cmpsb
jns
mov
outsb
xchg
fwait
sub
mov
daa
cmpsb
pop
cmp
sub
cmpl
out
mov
mulb
inc
push
popf
or
data16
dec
push
out
mov
sbb
mov
or
mov
loopne
lods
cs
fwait
pop
shl
inc
cmp
cmp
add
sub
idiv
or
mov
imul
scas
sub
aaa
inc
mov
jle
add
jo
jl
fcompl
push
movsb
mov
insl
push
xchg
mov
adc
jnp
push
outsl
adc
and
cmc
ret
inc
movsb
mov
test
ja
ror
add
jne
jle
daa
adc
test
movl
arpl
jl
mov
push
add
scas
mov
loop
mov
stos
aam
xlat
out
xor
mov
lods
jp
sbb
lods
mov
lcall
and
cld
jecxz
jne
xchg
mov
sbb
inc
lock
shrl
jo
fdivrl
inc
mov
cmp
and
xchg
cmpl
xchg
jle
jne
mov
xchg
lods
pop
mov
pop
sarb
lods
push
imul
lahf
xchg
shlb
sub
aaa
sbb
mov
xorl
rol
mov
lds
dec
dec
xchg
in
xor
jnp
stc
xor
push
leave
not
push
repz
mov
aas
leave
mov
adc
mov
push
mov
ds
aas
push
mov
xchg
jbe
imul
lret
aaa
pop
push
loop
imul
movsl
popf
mov
xor
repnz
inc
popa
stc
mov
sbb
xor
cwtl
cmc
ror
aam
jb
jbe
in
fildl
push
xchg
lods
xchg
cmpsb
add
mov
adc
into
loop
pop
fstpl
pop
add
mov
fimuls
xchg
jo
lds
inc
push
adc
xchg
loopne
add
je
fcmove
test
int3
test
data16
cmpsl
clc
enter
dec
ds
adc
xor
ret
repnz
inc
xor
cmpl
add
xor
rcrb
jb
adc
mov
add
lcall
inc
sub
aad
insl
decb
jne
movsl
push
xchg
mov
cmpsl
pop
mov
cwtl
xchg
movb
imul
dec
adc
shrl
or
cmp
sbb
fstl
pop
mov
jb
out
imul
xchg
cwtl
repnz
fwait
ja
hlt
mov
mov
xor
jns
and
arpl
jne
adc
movsl
pop
subb
jge
sub
ffreep
mov
nop
xchg
iret
sub
stc
xchg
ret
and
jecxz
mov
popa
xchg
sarl
pop
arpl
add
popa
leave
arpl
std
movsb
call
rcll
dec
jle
jno
stos
mov
rcll
adc
mov
inc
stos
arpl
mov
jae
jne
adc
xchg
jmp
mov
ret
add
addl
xlat
inc
mov
fcomps
arpl
xor
shrl
jbe
int3
push
xchg
rorl
test
jmp
lods
repnz
mov
scas
shl
aam
dec
push
mov
andl
pop
out
dec
inc
leave
pop
es
enter
pop
dec
pop
dec
sub
jge
cmp
cmpb
fdivrs
aad
push
xor
lods
pushf
out
into
jns
enter
pop
aas
sub
jbe
fcomps
sub
mov
pop
ljmp
jecxz
jp
bound
add
sbb
xor
mov
pop
xchg
and
out
add
mov
and
mov
fnstenv
or
into
in
lock
sti
xor
das
sbb
mov
xor
mov
inc
fimull
inc
out
add
rclb
ds
mov
xlat
push
nop
xchg
jge
js
adc
mov
push
adc
mov
jecxz
out
dec
pop
lea
popw
out
xchg
jl
out
jmp
aaa
cmp
insl
sbb
sbb
testl
mov
sbb
sahf
jnp
pusha
orb
test
inc
fs
shlb
inc
cld
out
pop
jne
mov
fcomip
lds
add
xor
shll
in
lret
xchg
jb
aas
sarb
mov
ss
sub
push
nop
or
mov
mov
push
pusha
xor
lods
stos
xorb
out
jg
jp
jge
xchg
cmpsl
mov
lret
loope
pop
test
cmpsb
inc
in
orb
mov
fdivrl
test
ret
cmpsb
xchg
push
dec
add
inc
push
pop
je
add
adc
jmp
ret
scas
insb
jnp
push
jge
out
jnp
jnp
push
xor
dec
mov
fs
inc
or
sub
mov
in
lret
mov
xchg
dec
lcall
and
push
icebp
mov
add
jg
out
ss
stos
adc
test
shrl
pop
jb
ljmp
enter
les
pop
mov
mov
mov
mov
movsl
lret
mov
inc
mov
aas
fistl
cs
popl
scas
addr16
call
test
cwtl
sub
cmp
sub
mov
jg
mov
cwtl
pop
mov
cmp
in
call
cmp
pushf
sbb
xchg
xchg
je
jne
aam
stc
dec
cmp
fdivrs
loop
pusha
cwtl
adc
jp
iret
push
mov
popf
adc
or
out
dec
sbb
pop
adc
cs
daa
add
es
dec
lea
push
lret
pop
rolb
add
jbe
mov
mov
test
shlb
cmp
push
cmpsb
xor
stos
lods
xor
jae
test
jnp
mov
inc
mov
cs
shrb
mov
pop
ss
aas
pop
mov
data16
and
add
pop
pop
mov
sub
cmp
sub
lahf
sar
xchg
push
or
push
dec
xor
add
icebp
push
sub
cld
dec
repnz
add
movsb
jmp
cli
push
pop
movsl
jge
cmp
mov
mov
ss
pop
push
jecxz
lea
mov
pop
mov
mov
loope
cmc
xor
inc
hlt
or
mov
lea
cwtl
mov
add
mov
out
dec
inc
adc
adcl
roll
stos
mov
add
inc
mov
aam
sub
popf
cmp
outsb
push
jb
ds
in
push
outsb
loop
shrl
insl
sub
shll
pop
and
enter
push
leave
push
add
and
push
cmp
jae
loope
inc
iret
fmuls
imul
mov
lods
and
push
sub
adc
fmull
adc
mov
jbe
lcall
xchg
push
std
cmp
int3
nop
out
stos
pusha
and
test
adc
cmp
sbb
xchg
mov
repz
daa
stos
lods
jmp
stc
mov
sbb
stc
pop
ret
imul
mov
vmovaps
sub
js
xchg
add
fsubl
mov
in
jo
xchg
cmp
dec
push
adc
pop
mov
xor
imul
stos
sub
pop
add
inc
lds
add
xor
sub
lods
dec
iret
adc
xchg
in
lret
jle
jecxz
jmp
dec
shl
imul
pop
xchg
bnd
inc
adc
jg
sub
call
mov
or
add
mov
pop
lret
popf
add
mov
inc
mov
sub
adc
or
jp
scas
imul
mov
roll
cltd
sarb
push
popf
pop
sahf
ret
sti
xor
leave
mov
xor
mov
fadd
fwait
adc
xchg
imulb
call
aaa
dec
cmp
lretw
arpl
add
sbb
pop
ds
in
adc
push
in
lods
imul
pop
daa
mov
push
loopne
iret
fnstcw
mov
mov
test
add
lods
insl
add
jl
arpl
jle
xor
pusha
and
pop
push
sbb
jp
fldl
mov
lret
int
fs
lcall
js
out
loop
imulb
sbb
mov
inc
dec
jns
in
mov
out
mov
inc
fistpl
cld
es
les
fldcw
cmp
insl
jae
imul
xchg
or
adc
adcb
ret
dec
popa
cmc
js
pop
std
or
dec
push
add
and
arpl
cld
add
lods
mov
outsl
rcr
adc
fisttpll
or
pop
jecxz
mov
sub
cmp
std
lret
xor
sub
les
into
aad
pop
outsb
lahf
xlat
add
loopne
sub
in
ret
rorb
jmp
mov
and
cmp
inc
lcall
dec
filds
loop
jbe
mov
pushf
and
repnz
out
and
and
jo
mov
dec
sub
cmp
fs
std
fsubs
das
sbb
sbb
or
aad
lods
cmpsb
cmpsb
xchg
jnp
inc
or
inc
mov
cltd
xchg
xchg
or
or
push
imul
cmp
dec
in
mul
mov
mov
mov
rol
sbb
in
or
nop
es
bound
jne
sbb
cmp
les
pop
pop
dec
inc
leave
rcrb
pop
out
xchg
out
and
jne
out
xchg
xlat
shrb
mov
cmpsb
ljmp
rcrl
mov
jbe
scas
push
mov
add
inc
rcll
inc
add
xor
sbb
loopne
dec
or
and
insb
jle
ret
and
jl
test
dec
rolb
pop
jg
mov
sahf
lahf
push
arpl
int3
pop
push
sub
mov
ret
test
ja
push
cmpsb
xchg
jnp
and
mov
pop
xorb
cmc
and
pop
mov
or
cli
scas
shll
jo
sbb
mov
outsb
jmp
cmp
imul
sbb
push
push
jae
es
fldl
push
aaa
jns
pop
dec
add
arpl
or
adc
xor
xor
hlt
pop
mov
arpl
inc
cmp
lock
jp
add
ficoms
cmp
call
jns
addr16
notl
cmc
or
jl
test
fcomip
and
jno
out
jl
enter
lds
outsb
testb
jle
clc
lcall
mov
divb
mov
adc
cmp
fcompl
outsb
lea
rcr
call
je
pop
gs
insb
xchg
call
inc
sbb
adc
mov
jbe
cmpl
xchg
popa
and
dec
lret
mov
cmpsb
lods
addl
cmp
mov
sahf
adc
ljmp
fildll
fwait
leave
mov
test
pop
ljmp
pop
fldcw
jns
adc
inc
test
inc
orb
jno
nop
cld
adc
pop
mov
add
addb
into
cwtl
push
pop
vpandn
rcrl
add
pop
stos
mov
stc
sub
lods
pop
andl
mov
mov
inc
cmp
push
and
cmpsl
ficoms
roll
jo
lods
sarl
push
insb
enter
ljmp
outsl
clc
orb
inc
out
mov
inc
flds
jecxz
mov
pop
lds
push
std
iret
out
rorl
mov
adc
mov
push
dec
ss
mov
jmp
popa
std
mov
leave
adc
jecxz
lea
fwait
aaa
pop
pop
repnz
mov
outsl
bound
ficomps
xchg
push
ds
push
inc
pop
jp
or
aas
mov
fucomi
cmc
stos
sub
std
test
push
sub
mov
daa
inc
mov
push
and
push
and
adc
mov
add
test
imul
adc
dec
enter
jmp
in
shrl
arpl
lret
out
mov
cs
rorl
lds
adc
add
adc
lods
adc
subl
sub
enter
movl
scas
ljmp
movsl
lods
dec
or
int3
pop
rcr
int
das
sbb
sub
dec
aam
jno
sahf
sbb
xchg
dec
mov
push
sti
mov
sbb
ficoms
or
push
js
add
ljmp
xchg
fsubrs
push
push
data16
mov
push
shrl
lods
sub
in
out
sbb
cmp
in
loopne
ret
and
push
sbb
leave
sub
aam
push
adc
push
jne
movb
xchg
push
xchg
xor
push
in
mov
data16
jmp
xor
das
lahf
fdiv
popf
rcl
adc
shrl
mull
xchg
ficoml
add
leave
cmpsb
stos
enter
inc
stos
fildl
cmp
mov
mov
icebp
cmp
sub
imul
shlb
insl
jno
mov
push
shl
call
stos
mov
mov
aam
push
push
xchg
sbb
xchg
pop
add
sbb
cs
xor
push
loope
mov
pop
xchg
inc
xchg
adc
insl
popa
and
push
pop
mov
pop
push
je
cmp
cmp
pop
or
push
icebp
orb
or
insl
cli
cltd
lret
repnz
stos
test
scas
push
lock
xchg
test
push
mov
sbb
iret
mov
mov
sahf
es
xchg
push
sbb
cld
rorl
sahf
rcll
sti
rclb
jnp
cmc
sbb
mov
in
jecxz
pushf
mov
out
or
iret
lods
sbb
std
pushf
cmp
cmpsl
cmp
push
and
test
sar
ret
test
mov
dec
gs
inc
xchg
test
mov
imul
loopne
inc
shl
pushf
es
in
nop
xchg
rcr
ret
push
pop
sbb
xor
add
mov
fs
xchg
jcxz
popf
jp
loope
mov
adc
mov
in
fsubrs
jns
ss
jge
or
jp
enter
dec
jp
cwtl
imul
sbb
mov
sub
jne
iret
jl
in
dec
aam
push
inc
sub
js
mov
lret
mov
out
cmp
jge
jbe
je
movsl
repz
xchg
lea
and
xor
mov
xchg
pop
and
xchg
adc
pop
in
adc
dec
aaa
int
pushl
fmuls
and
fscale
leave
mov
insl
loopne
out
mov
sbb
iret
mov
jle
adc
sub
aad
mov
and
cmp
imul
and
jl
jno
push
or
ja
jp
sub
cs
xchg
sbb
jg
cmpsb
lea
mov
sub
scas
sbb
das
xor
mov
cmp
sahf
stos
pusha
lods
js
arpl
test
popa
pop
imul
scas
mov
and
or
push
sub
loopne
lret
mov
add
stos
jle
popf
out
push
fnstsw
inc
lock
pop
push
push
aad
mov
jle
lock
ja
or
cmpsl
ljmp
test
and
push
aaa
mov
bswap
int
aad
loope
mov
stos
jmp
add
dec
scas
sub
jl
xlat
dec
xor
leave
lcall
and
lcall
sub
cwtl
jge
inc
fs
xchg
pop
add
dec
pop
popa
sahf
adc
out
js
iret
pop
rorl
mov
out
xor
rclb
inc
jmp
mov
shrl
mov
out
out
mov
popf
sahf
and
mov
hlt
xor
dec
dec
shl
add
mov
jae
aam
xchg
xor
mov
push
fistl
jae
addl
loope
push
cmp
test
mov
mov
adc
aaa
push
out
mov
pop
jmp
stc
xchg
daa
xor
inc
dec
gs
imul
pop
pop
js
pop
imul
js
xor
mov
xor
in
cmp
sbb
mov
lret
xchg
mov
add
icebp
add
ficoml
jmp
aas
into
push
jecxz
inc
sti
xchg
sarb
push
pop
xchg
mov
addr16
jae
sub
sub
stos
push
repz
in
lods
push
outsl
push
lods
in
xchg
mov
dec
sub
and
sbbb
jp
xchg
in
into
lret
movsb
lea
push
adc
xchg
add
jp
mov
in
sub
cmpsb
pop
fisttpl
or
das
jae
cmc
adc
rorl
sbbb
nop
inc
or
or
mov
xchg
inc
or
xchg
mov
mov
jne
xchg
mov
xchg
or
sbb
test
xchg
mov
ficoml
test
xor
std
sub
cmp
adc
pushf
enter
mov
lret
mov
adc
add
shll
shl
ljmp
pop
aam
xor
xchg
test
sbb
mov
outsl
adc
addr16
push
sub
dec
push
dec
out
clc
dec
dec
in
pop
sub
incl
push
test
leave
fwait
push
sti
mov
cs
fidivs
adc
addr16
xor
sti
out
popa
mov
in
pop
int
jecxz
clc
add
cltd
mov
xor
push
dec
imul
jl
xchg
mov
test
sbb
pop
xor
leave
jno
int
fs
pop
aas
inc
fistps
cmp
and
stos
lcall
inc
mov
cmp
arpl
jmp
push
xchg
call
dec
mov
mov
or
inc
mov
mov
or
rcrb
cltd
mov
xor
sar
icebp
inc
push
cmpsl
add
or
icebp
inc
add
ljmp
sti
fstl
imul
pop
int
xor
jnp
gs
shrb
cld
push
negb
insl
test
push
mov
leave
add
and
sub
notl
xchg
push
aaa
or
in
fiaddl
movsb
sbb
leave
push
xor
outsl
xchg
mov
repnz
sbb
sub
jmp
xchg
pop
mov
lahf
sbb
fdivp
sub
mov
sub
loop
pop
mov
xor
sub
cmp
mov
or
push
pop
insb
hlt
or
and
lret
cmpl
mov
jo
mov
popa
adc
fs
mov
dec
mov
leave
addr16
add
int3
cmc
bnd
mov
pop
aas
inc
lahf
ret
sub
dec
sub
stos
push
in
in
js
shl
insl
out
in
jne
loope
sub
mov
and
sub
out
mov
clc
jecxz
loopne
xor
sub
lea
mov
ret
mov
push
jg
cmpsb
add
dec
xchg
imull
je
cmpb
fldl2e
push
xor
in
or
sub
mov
lds
xlat
jge
sbb
add
jp
imul
xchg
cld
or
pushf
int3
push
add
push
adc
movl
mov
adc
das
or
and
aas
jne
ret
push
ja
mov
dec
fistpl
xchg
aam
leave
dec
sbb
mov
and
or
pushf
cltd
pop
inc
sub
loopne
test
movsb
add
repnz
stos
loope
xchg
leave
ror
sub
mov
adc
cmpsl
cmp
ds
ds
push
pushf
or
inc
or
sub
push
mov
ja
imul
jb
xchg
std
insl
push
pop
mov
pop
sub
test
lock
jo
jle
add
pop
ds
idivb
arpl
xor
in
int3
dec
pop
cmpsb
push
adc
dec
std
neg
cli
ja
frstor
ss
test
sub
int
and
push
and
pop
pop
into
aas
test
mov
jg
in
sbb
aam
movsl
adc
mov
xchg
mov
add
or
dec
dec
stos
in
mov
ljmp
in
in
push
ret
nop
lods
test
push
push
stc
and
adc
jge
lahf
in
movsl
push
adc
jne
mov
cld
inc
mov
in
call
out
add
pop
pop
faddp
xor
mov
inc
adc
lock
xor
adc
jbe
fists
setl
mov
or
add
mov
cmc
fs
decb
insb
push
or
cltd
inc
mov
mov
and
xchg
jbe
inc
or
xchg
gs
repnz
iret
ret
jle
adc
mov
xchg
aaa
cmc
roll
fildl
xor
push
pop
ss
xlat
in
inc
imul
xchg
gs
pop
push
dec
fisubs
mov
cmp
jmp
and
push
or
add
mov
mov
jp
out
repnz
pop
mov
jge
cli
imul
mov
les
push
mov
mov
stos
aas
jae
mov
dec
jl
in
daa
repnz
or
in
repnz
inc
mov
adc
mov
mov
and
insb
cli
out
jae
or
ret
cltd
dec
dec
cs
add
mov
pop
mov
sub
clc
insl
add
push
lahf
push
push
into
jb
and
cs
loope
icebp
movsl
rol
pop
icebp
push
push
jl
loope
stc
lods
inc
mov
sub
xchg
or
stc
test
insl
cli
adc
fs
inc
fucomp
add
ret
ficoms
imul
outsl
dec
dec
fldpi
pop
sub
lds
icebp
cmc
insl
leave
dec
mov
mov
fcoml
sahf
dec
cld
outsb
mov
pop
call
adc
jge
out
push
sub
sbbb
int
jns
mov
iret
aaa
fs
jmp
mov
mov
push
cmp
dec
into
mov
mov
sbb
jle
dec
add
fidivrs
rolb
lds
mov
pop
push
mov
push
nop
push
jmp
or
lods
hlt
sub
add
jmp
jnp
or
stos
xor
push
fsubrs
imul
bound
xor
rcr
loope
pop
lret
sbb
pop
push
pop
out
scas
movsb
xchg
push
movsl
push
cli
mov
fxch
std
sbb
movsb
and
xchg
xlat
push
divps
insl
push
fcoms
push
adc
mov
push
clc
mov
mov
jle
dec
or
pushl
imul
arpl
cmpsb
jnp
pop
aad
fiaddl
dec
iret
add
lret
xchg
pushf
and
shrb
lret
fs
mov
out
movsb
loop
ret
loop
jae
pop
fwait
xchg
cmpl
jge
and
push
shr
jg
imul
xor
call
in
fcoml
incb
hlt
test
add
and
xorl
pop
cmp
xchg
aaa
cmp
lods
insb
and
aad
xor
sbb
ds
cwtl
enter
rep
cmpl
popa
loop
xchg
stc
pop
mov
jecxz
xchg
lret
push
int
xchg
push
into
adc
fs
mov
outsb
lcall
rolb
pop
negl
pop
div
mov
das
mov
data16
mov
cmpsb
mov
data16
lret
mov
add
outsb
outsb
std
jg
sbb
pop
ds
mov
mov
cld
sbb
jne
insl
ret
push
out
stos
fstps
add
cwtl
add
out
stc
outsb
or
imul
mov
push
mov
inc
fbstp
scas
ja
inc
inc
pop
inc
test
imul
xor
inc
mov
xlat
imul
xor
push
inc
adc
jl
mov
movsl
sbb
iret
int
sub
ret
out
arpl
or
jl
mov
jno
lahf
push
push
imul
xchg
sub
in
mov
pop
or
rcrb
mov
and
pop
sbb
jnp
mov
add
inc
fbstp
out
jae
mov
es
repz
sbb
jns
pop
outsb
cmpsb
hlt
gs
sbb
ss
aad
xchg
vmread
xchg
mov
lock
cli
push
in
out
pop
sbb
ljmp
mov
insl
flds
mov
sub
jno
sahf
sbb
jb
xchg
std
repnz
xchg
cmp
ja
daa
outsb
pop
js
and
stc
adc
cld
in
add
rol
stc
jns
or
inc
dec
and
mov
jle
jb
jno
subb
das
bound
into
ss
mov
daa
sbb
push
mov
adc
lea
pop
out
cmp
or
mov
int3
jb
sbb
inc
movsb
pop
outsb
pusha
testl
adc
inc
mov
rcrl
lcall
xchg
dec
sbbb
notb
xlat
and
dec
xchg
imul
jg
mov
mov
pop
jno
mov
pop
fcoml
shll
ja
jb
add
xor
sbb
inc
mov
sub
icebp
or
out
sub
mov
insb
mov
movntq
out
mov
aam
xchg
sbb
sbb
sarl
xchg
dec
les
shlb
ret
lret
lds
in
dec
adc
mov
lahf
addb
mov
int3
mov
in
mov
jle
inc
pop
xchg
movsl
cmp
stc
sub
sub
pop
out
insl
dec
cmp
dec
or
fisubrs
pop
push
adc
adc
shll
inc
loopne
push
sbb
cmp
cmp
in
jno
bound
jl
loopne
mov
xchg
cltd
fsubs
clc
jle
push
movsb
or
pop
push
loopne
into
test
std
mov
or
and
insb
xor
mov
sbb
data16
push
aam
or
insl
pop
dec
xchg
add
or
add
xor
pop
jge
and
ret
cmpsb
cli
daa
jg
xorl
es
int
outsb
dec
out
sub
leave
xacquire
into
out
ja
pop
pushf
jne
mov
jb
sti
mov
arpl
push
fcompl
xchg
add
lahf
gs
outsb
inc
mov
cmp
push
loopne
out
sbb
jno
pusha
push
mov
push
mov
js
mov
test
adc
les
mov
sbb
and
scas
scas
jnp,pn
cmp
inc
adcl
outsl
mov
gs
xor
xchg
adc
xor
mov
fs
mov
cmp
test
xor
out
xor
pop
fcmovne
adc
loope
push
bound
pop
rol
jne
cli
mov
xor
xor
adc
mov
inc
stos
shrb
lret
jmp
pop
jns
mov
les
cld
add
inc
cmp
dec
jecxz
jg
les
pop
iret
jns
insb
inc
xlat
icebp
mov
sub
pop
and
mov
jns
iret
fists
aas
popa
js
mov
jp
shll
mov
add
andb
sbbb
sub
push
push
sbb
test
mov
inc
adc
mov
mov
outsl
fstpt
mov
stc
cltd
jo
ja
adcb
xor
js
lods
cmpsl
fadds
mov
insb
jmp
pop
aas
push
cmp
xor
push
fdivr
sub
cmp
aad
loop
push
iret
dec
add
clc
jbe
icebp
xchg
out
or
in
mov
stc
cmpsl
push
outsl
in
sbb
jmp
andl
sbb
mov
fcmovnbe
rcrl
insl
sbb
insl
push
ret
cltd
call
fnstsw
cltd
es
mov
ss
xchg
and
js
dec
ffreep
pop
scas
and
xorb
jno
ret
mov
add
into
sahf
fwait
lods
xor
insl
mov
inc
xchg
dec
pop
cmp
pop
dec
pop
mov
cli
mov
cmc
cmp
cmp
jbe
sbb
js
cld
jbe
xor
cmp
jo
movsl
lods
mov
fwait
mul
mov
cmpsl
pop
jne
or
add
pusha
sahf
aaa
push
aas
mov
repnz
push
adc
ret
jbe
xchg
sti
add
adc
in
ret
cmp
mov
mov
dec
loopne
xchg
pop
xor
jmp
sti
cmp
scas
pop
repz
aam
push
inc
add
push
adc
inc
repnz
dec
ret
in
adc
or
push
jne
jmp
xor
add
enter
push
jbe
xchg
xor
push
pop
pop
aas
sub
jle
or
sahf
cwtd
push
cmpsl
mov
mov
stos
popf
dec
cmp
and
sbb
xor
or
xlat
dec
frstor
dec
icebp
arpl
fsubrl
pop
mov
add
mov
xchg
jg
out
dec
jnp
push
in
push
cmp
mov
lcall
fs
sahf
jecxz
lretw
jmp
js
fidivrl
mov
jp
out
insl
out
nop
xchg
xchg
fwait
or
fsubr
xchg
or
sbb
hlt
sub
push
add
push
inc
push
pop
inc
into
push
movsl
mov
out
push
xor
lods
clc
cltd
or
sbb
xchg
mov
adc
les
mov
xchg
jl
or
mov
mov
jl
shl
inc
fdivp
or
push
push
and
cmc
and
push
movsl
sbb
or
in
dec
push
and
fldt
and
mov
nop
or
add
or
mov
add
imul
mov
cmp
mov
add
lods
push
shlb
fs
and
stos
cmp
pusha
sub
and
xchg
sbb
pop
push
sarb
in
adc
push
mov
jl
push
or
mov
bound
push
jne
lock
mov
cmc
jb
cmp
or
jg
in
mov
popf
mov
xor
shl
push
sbb
inc
ja
sbb
mov
in
add
ja
mov
push
lret
int
int
iret
xchg
dec
push
sub
mov
inc
imul
sub
push
xchg
inc
jo
and
push
addb
pushf
cltd
jns
out
dec
jecxz
jp
inc
xchg
adc
cmpsb
adc
mov
add
stos
incl
fcom
lock
cltd
cld
adc
or
repnz
sahf
xchg
in
push
inc
sar
test
mov
mov
mov
das
jecxz
push
cmp
mov
jmp
jge
push
push
mov
push
cmpsb
sub
sub
scas
test
pusha
icebp
mov
out
out
cmc
lcall
fadds
mov
out
arpl
mov
in
sub
push
push
xor
cmp
push
jle
mov
test
nop
sub
mov
scas
popa
es
ja
add
add
sbb
mov
add
movsl
rclb
adc
jns
push
in
mov
sbb
arpl
fstps
mov
fcomi
outsb
dec
ljmp
roll
adc
cmp
loopne
ja
ret
jmp
lods
test
sub
inc
sub
xchg
loopne
das
call
mov
push
adc
mov
dec
fadds
push
dec
or
xor
adc
insl
push
mov
pop
cmp
sub
add
cmpsl
xchg
jle
shll
cmp
mov
push
push
jmp
jno
xchg
cltd
jle
pop
or
fistpl
jmp
add
mov
test
pop
mov
rclb
mov
lret
inc
push
fisubs
ret
pop
pop
popf
ret
mov
cmc
lds
xor
out
pop
and
adc
cld
ret
fs
mov
jb
ds
out
xlat
adc
sbb
dec
iret
cmp
jmp
cli
sbb
mov
fdiv
dec
sbb
fistpl
add
mov
shrb
insl
jg
sbb
xor
icebp
mov
pop
jae
sbb
adc
adc
inc
xchg
sub
call
adc
cmp
sbb
and
jmp
cmpsl
call
mov
outsl
push
sbb
sub
int3
cmp
push
adc
dec
inc
pop
lret
cmp
das
outsl
dec
add
or
aad
rcrl
insb
ds
mov
xchg
scas
and
mov
jge
inc
pushf
inc
pop
push
sarb
stos
test
add
or
cmpsb
ret
sub
mov
push
jbe
adc
outsb
dec
out
xor
push
ljmp
xchg
out
xchg
pop
movsl
cmp
and
jle
fbld
pop
lret
insb
inc
rcrl
dec
pop
add
dec
inc
les
icebp
mov
dec
les
inc
sub
call
xchg
mov
cs
iret
orw
out
add
lret
scas
sub
mov
jge
push
adc
sub
outsb
in
and
sbb
movsl
cmpsl
mov
or
cltd
sarb
push
inc
in
jmp
mov
stc
fs
jno
add
jge
mov
out
pop
icebp
cmp
push
test
mov
inc
repz
push
ficoms
mov
xchg
sub
dec
cmpb
lret
cs
adc
mov
adcl
jo
and
pop
xchg
sub
jmp
andb
mov
faddl
cmp
rclb
and
add
roll
ljmp
push
jmp
and
test
sti
or
pop
pop
pop
xchg
sub
adc
nop
dec
out
repnz
sub
dec
data16
cs
dec
sub
push
jmp
cs
arpl
jb
in
in
sbb
xor
jnp
popf
inc
mov
aam
add
loopne
lret
add
fwait
das
insl
std
cmp
add
ljmp
adc
lret
add
jg
fistl
mov
fiaddl
push
sti
xchg
daa
fcoms
jns
stc
push
in
jno
ja
jne
adc
push
orb
mov
inc
and
sub
cmp
leave
mov
jb
ds
stos
jge
mov
enter
mov
js
out
insl
dec
stc
adc
jg
loope
out
flds
xchg
movsb
mov
jg
into
test
pop
xor
mov
jge
inc
push
cmp
sti
mov
scas
xchg
mov
or
cli
xor
sub
mov
cmp
inc
sbb
xor
pop
jns
in
stc
fstps
mov
test
xchg
inc
sub
pop
jbe
mov
and
inc
adc
and
outsl
repnz
ret
or
cmp
pushf
jg
lret
repz
cmp
rdmsr
mov
int
cltd
mov
mov
ret
push
aaa
xchg
inc
cmp
cli
rcrb
xchg
lret
xchg
pushf
and
push
jl
xchg
repnz
call
arpl
push
or
ljmp
xchg
les
out
pop
cmpsl
mov
push
inc
push
outsl
sub
sbb
pop
stc
mov
shrb
dec
stc
inc
hlt
scas
cwtl
test
sahf
mov
sbb
inc
xchg
sbbb
bound
jle
sbb
and
dec
pushl
dec
inc
jmp
mov
out
imul
push
mov
and
arpl
fs
in
jno
and
xchg
daa
sbb
sbb
push
lret
sbb
mov
and
gs
push
push
lods
stc
stos
lds
jo
sbb
inc
scas
cmp
rorb
jo
push
push
mov
popf
dec
mov
xchg
inc
jg
inc
lcall
or
adc
cmp
loopne
loope
adc
xchg
popf
xchg
out
insb
jno
inc
lret
adc
xchg
ds
lcall
stos
push
aad
adc
jmp
in
mov
fsubrl
mov
shll
cltd
mov
out
push
data16
dec
sar
movsl
sub
cmp
movsl
dec
xorb
dec
lods
jle
int
adc
das
jecxz
xor
xchg
outsb
xlat
movl
in
ficomps
jne
hlt
or
into
xor
dec
pop
std
push
dec
and
adc
fldt
pop
lods
inc
mov
mov
cmp
test
ret
jne
sub
in
arpl
or
int
push
ds
stos
sbb
push
addr16
inc
cmp
dec
adc
jae
pop
pop
sbb
xchg
cwtl
movsb
push
scas
inc
ret
jo
hlt
jl
mov
and
dec
sarb
int3
jnp
xchg
dec
cmp
xchg
adc
into
incb
sub
pop
jg
mov
jl
das
aad
mov
iret
pop
jle
dec
push
push
addr16
mov
push
daa
imulb
icebp
enter
jns
and
je
jne
js
jbe
mov
sbb
cwtl
insb
jns
mov
jle
scas
hlt
fstl
cltd
test
jle
stc
sub
xor
movsb
mov
test
nop
cld
jle
xchg
cwtl
movsl
pop
sarb
sub
out
xchg
push
psubw
pop
into
loopne
rorl
outsb
push
xchg
sub
xchg
push
inc
adc
jl
push
mov
stos
aas
add
ret
sbb
and
out
mov
fstl
lods
mov
push
mov
fcomi
sub
pusha
std
popa
fcos
ds
push
jmp
rcll
push
xchg
loope
lds
pop
cli
fdivrl
sti
aad
lods
movsl
fwait
pop
dec
rcll
orl
jp
iret
fistpl
decl
loop,pn
mov
scas
sub
enter
adc
xorb
jae
lea
adcl
enter
mov
xchg
mov
sub
xor
xchg
jno
pop
cmp
sbb
dec
push
fwait
dec
rcrl
mov
mov
je
cs
adc
sub
or
dec
jg
inc
scas
push
hlt
sti
add
arpl
enter
inc
lods
mov
or
jns
adc
sbb
jb
cmpl
sbb
mov
mov
cmc
imul
vmread
sarl
push
jle
dec
insb
jns
add
jmp
inc
push
mov
and
jmp
adc
mov
outsl
lods
cmc
fimuls
aam
or
inc
movsl
dec
sub
inc
xchg
dec
daa
cs
cli
aas
rcrl
mov
cmp
movsl
add
inc
lock
lret
xlat
mov
mov
mov
sub
ret
scas
push
sub
cmpsl
arpl
mov
bound
and
jge,pn
inc
jle
iret
pop
bound
lods
ret
in
repnz
scas
popf
fimull
jmp
andb
mov
sub
int3
xor
shl
jnp
jns
ds
xchg
lods
mov
aad
jge
in
inc
adc
fwait
stc
adc
hlt
xor
stos
mov
mull
lret
add
push
adc
in
and
sti
jns
rcrl
sub
or
cmpsl
fisttps
mov
jmp
mov
inc
es
fdiv
mov
or
leave
xor
ss
pop
jle
hlt
inc
dec
in
scas
into
dec
inc
ret
adc
jmp
dec
sbb
xchg
push
test
lcall
fs
mov
pop
dec
pop
repz
push
mov
inc
mov
jne
je
pusha
jbe
and
push
cmc
lea
ret
in
daa
inc
enter
cmp
stc
popf
int3
sbb
ds
cwtl
ljmp
shlb
cwtl
stc
or
cld
add
sbb
outsb
out
enter
adcl
cmpsl
dec
push
add
dec
lock
and
mov
pop
xor
addr16
and
xchg
mov
inc
out
jb
out
ss
jge
repz
out
out
test
pop
data16
scas
out
xor
shll
mov
cmpl
ds
insb
jl
shrl
test
mov
xor
jo
icebp
xor
add
scas
xor
mov
xchg
push
sbb
es
push
sub
mov
cmp
mov
lahf
cpuid
adc
jge
sbb
pop
xor
les
pop
mov
cmp
xchg
les
std
xchg
jecxz
push
aad
lcall
mov
aad
xchg
subb
inc
subl
inc
lods
jge
mov
pushf
or
cmp
mov
pop
inc
mov
into
jns
inc
ds
or
inc
or
popa
outsb
popa
mov
xor
dec
pop
add
xor
push
ret
xor
lret
shll
jo
sub
push
and
fld
insb
pop
xchg
mov
or
cmp
daa
push
imul
xlat
pop
mov
les
sbb
and
icebp
and
pop
mov
add
fisubs
mov
addb
stos
and
hlt
jl
das
cmp
aam
adc
add
adc
mov
mov
push
pop
in
mov
sub
mov
push
fscale
xchg
hlt
rcll
mov
lret
test
inc
test
repz
fwait
movsb
ljmp
xchg
movsb
pop
lock
inc
repz
popf
into
push
out
push
and
sar
or
xor
mov
ss
aad
jnp
mov
xchg
jne
iret
cltd
jp
mov
das
or
pushf
fstl
pusha
and
add
pop
push
cmp
lods
int
mov
jl
cld
mov
jnp
mov
data16
lods
push
dec
jbe
and
xchg
insl
ret
push
mov
cmp
lods
in
enter
or
dec
test
fidivrs
mov
or
sbb
push
enter
fmul
cmc
cld
sbb
imul
xchg
and
outsb
and
sub
inc
mov
jmp
xor
sbb
test
in
aaa
aam
inc
nop
jp
mov
mov
adc
shlb
xchg
mov
dec
pusha
xor
dec
repnz
fistl
lret
push
lea
fistps
bound
test
cwtl
shll
xchg
inc
insb
push
cmp
or
mov
jmp
imul
repnz
ss
cmpsb
movsb
inc
dec
out
lock
pop
int
cmp
xor
lcall
mov
js
pop
ret
and
xor
bound
xor
xchg
dec
xchg
jnp
pop
stc
add
jne
es
insb
sahf
pop
dec
cmp
jno
xchg
inc
pop
inc
hlt
rorl
xor
mov
xlat
adc
xchg
pop
push
out
jg
cmp
dec
insl
nop
jnp
jmp
cli
int3
mov
add
push
outsb
mov
pcmpgtd
cmp
pusha
insb
mov
in
aad
adcb
cmp
mov
pop
ficoml
ss
out
aas
test
cmc
cwtl
out
or
add
sbb
cmp
int3
or
lock
test
or
mov
and
ret
jbe
mov
mov
es
inc
sbb
mov
sub
mov
xchg
aam
lret
push
sti
pop
cmp
adc
xchg
jo
cmp
cmp
and
cld
out
incl
inc
adc
mov
lods
xchg
cmpsl
jae
pop
fcoms
rcrl
in
sub
jecxz
xchg
fnstcw
pop
lret
std
pop
inc
inc
sub
out
cmpsl
testb
popf
mov
add
sbb
nop
cs
jno
xor
ds
imul
fwait
add
jle
stos
dec
jg
fs
inc
jl
sub
sub
out
xchg
jecxz
mov
jmp
push
cmp
xchg
mov
insb
jg
mov
sbb
inc
mov
movl
pop
rcrb
mov
mov
cmp
xor
mov
push
lea
inc
scas
outsb
pop
jmp
push
sbb
and
scas
popf
dec
fidivrs
icebp
lret
out
dec
ds
packsswb
cmp
sbb
sub
mov
xor
sbb
dec
loopne
mov
mov
cmp
mov
sbb
popf
xchg
imulb
mov
clc
rcl
int3
inc
dec
mov
push
fisubl
push
shlb
mov
dec
es
mov
sbb
lret
ja
shlb
add
mov
xchg
hlt
xor
std
pop
dec
dec
and
cmp
fstpl
das
dec
pop
ja
outsb
jo
push
or
and
nop
fidivrs
mov
mov
cltd
shlb
ror
jl
and
ja
out
pop
sub
add
aad
pop
pusha
xchg
insb
or
xchg
icebp
stos
imul
sub
enter
pushf
jge
std
fmuls
adc
xor
jns
pop
sub
mov
je
push
add
or
js
out
adc
sub
fs
ret
inc
repnz
add
rclb
jb
and
outsl
test
sbb
mov
shrb
out
cmp
xor
js
mov
cmc
sahf
dec
cmpsb
mov
fisubl
and
sub
cmc
mov
xlat
sarl
fists
xchg
imul
or
dec
daa
cmp
pop
mov
and
scas
fdivs
xchg
divl
pop
stos
pop
mov
out
add
mov
inc
sub
adc
call
call
mov
jns
inc
adc
testl
dec
lock
insb
pushf
sub
push
fisttps
lds
ret
sub
cmp
jae
xchg
loopne
enter
and
sub
jp
rclb
mov
or
or
mov
insb
inc
ds
insl
jg
adc
mov
mov
jecxz
and
test
jns
lds
mov
leave
int3
sbb
ljmp
gs
pushf
sub
xlat
sbb
pushf
cld
xlat
fistpll
mov
mov
push
int
mov
mov
jg
lock
push
movsb
mov
xor
xor
jmp
sbb
add
xchg
gs
test
leave
lahf
loop
rorl
popf
inc
sbb
mov
movsl
arpl
lret
add
mov
cld
and
dec
xor
stos
or
mov
add
add
sub
or
out
scas
and
xor
imul
pop
jno
dec
sub
bound
sub
cmp
loop
inc
popf
lret
dec
mov
or
adc
add
ljmp
and
pop
push
sbb
vsubpd
pop
test
or
fs
mov
cmp
jle
es
outsb
in
aam
or
add
aas
mov
or
inc
scas
sub
fwait
cmp
mov
or
decb
lahf
out
jno
mov
call
adc
inc
nop
out
lock
xchg
mov
insb
mov
arpl
aad
mov
test
cmp
and
xor
cwtl
mov
call
jne
mov
cld
jecxz
adc
test
xor
in
loope
mov
rorl
cs
push
mov
ret
xchg
sub
cltd
inc
add
mov
xchg
xchg
scas
adc
push
test
cwtl
pop
ja
xchg
pop
out
test
mov
xor
je
sar
loop
in
leave
pop
cltd
roll
push
xorb
inc
repz
mov
cmp
test
mov
pop
negb
repz
aaa
jbe
loope
and
xchg
pushf
push
add
xchg
pop
es
call
hlt
mov
fadd
mov
adc
sub
cmc
fwait
xor
fisubl
ret
ret
lcall
sub
testl
xchg
and
push
push
mov
outsl
mov
test
mov
and
jo
shrb
jge
cmp
test
jge
cmp
test
jmp
cmp
sub
pop
push
add
mov
insl
jg
sub
dec
inc
loop
insl
imul
jno
or
xor
dec
lods
iret
push
pop
in
adc
mov
aad
cmp
dec
adc
daa
pop
movsl
ljmp
dec
add
mov
or
xchg
sub
dec
bound
push
mov
jmp
and
jnp
xor
pop
jl
hlt
and
fcoml
jg
loopne
divb
pop
in
leave
fdivs
stc
pop
sub
leave
dec
aad
stc
adc
iret
insb
sub
cmc
cmpsl
out
lret
test
and
icebp
iret
push
mov
add
repz
movsb
mov
sub
jle
pop
orl
pop
ds
xor
stos
dec
mov
ja
fimuls
dec
dec
adc
push
cmpb
mov
ret
test
inc
and
ret
inc
fidivrs
sub
jg
cmpsl
mov
mov
loope
xchg
jge
dec
push
mov
je
xor
cld
scas
std
dec
push
orl
int
xchg
ja
jl
mov
repnz
pop
data16
push
or
mov
pop
adc
scas
scas
out
imul
mov
aas
cmp
stos
push
mov
xchg
lock
fcom
cmpsl
add
sbb
xchg
insb
outsb
pop
mov
shlb
jno
pop
jno
dec
sbb
or
mov
mov
cmp
push
inc
push
std
aam
mov
mov
or
cmp
dec
and
push
jo
movsl
les
jp
imul
pushl
and
cmp
cmp
sub
jle
stos
pop
inc
jmp
inc
lock
and
xorb
sar
cli
mov
lcall
cmpsb
int
cs
mov
and
addr16
shl
pop
out
jp
adc
imul
adcl
int3
jle
test
adc
and
or
cmpsl
lcall
ja
int
fstps
out
pop
lcall
nop
in
mov
ret
lods
push
lret
into
std
insl
push
or
test
xchg
andb
leave
xor
xor
lret
call
pop
outsb
int3
pop
aam
push
inc
mov
movsb
repnz
and
mov
sbb
or
xchg
lods
aas
pop
sbbl
pop
inc
jbe
adc
push
sbb
adcl
iret
mov
fimuls
in
xor
jge
js
mov
inc
mov
fnstenv
inc
xor
pop
subb
rorb
sub
insb
dec
loope
rcl
push
cmp
adc
mov
imull
inc
push
mov
les
jecxz
fisttpll
lods
fwait
jae
jo
or
mov
lcall
repnz
mov
idivb
sub
scas
inc
mov
pop
repnz
js
push
dec
jb
sti
cmp
pop
pop
or
push
stos
insl
push
cltd
xchg
mov
and
and
inc
lods
pop
lret
inc
jg
mov
mov
mov
dec
sbb
clc
pop
ljmp
repnz
xor
mov
xchg
jne
adc
adc
mov
mov
cmc
cmpsl
fnsave
int
sbb
ret
mov
lock
popa
out
ret
jo
pop
pop
sub
in
jno
push
pop
pop
sbb
repz
stos
loop
stos
cmpsb
lcall
pop
mov
and
sahf
and
dec
push
scas
fists
pop
mov
out
cs
dec
rcll
inc
xchg
push
push
data16
fldl
jle
and
clc
xorb
test
leave
mov
rorb
mov
pop
and
jns
cltd
repnz
pop
add
push
pop
js
or
fwait
pop
dec
and
repz
cmpb
pop
cltd
inc
xor
insl
sub
das
test
sbb
xchg
ds
jo
jge
push
and
jne
sbb
xorl
inc
leave
shll
jb
int
aad
call
cmp
xchg
insb
cmpsb
xchg
jbe
jbe
popf
and
lcall
std
in
mov
add
xchg
inc
call
dec
and
mov
sbb
mov
cld
int3
pop
pop
ret
cmpsl
outsl
mov
jl
jbe
insb
pop
bound
pop
pop
adc
aam
push
addr16
pop
pop
xor
pop
inc
adc
js
les
lds
sbb
cmp
add
pop
or
cmpsb
push
inc
adc
mov
jle
pop
ljmp
hlt
insb
mov
and
lcall
xchg
and
mov
repnz
les
sbb
pop
lret
rolb
nop
and
daa
xchg
leave
dec
nop
into
mov
and
xchg
fsubrs
jbe
pusha
jge
arpl
shrb
outsb
and
push
popf
negl
jb
and
gs
arpl
push
arpl
imul
push
dec
pusha
ds
push
fsubl
jae
sub
jle
int
jg
out
cld
pop
pop
loop
jg
mov
jg
xchg
xchg
xchg
dec
int3
xchg
cmp
clc
lahf
xchg
mov
repz
add
adc
mov
in
xor
ljmp
into
pop
cmpsl
jl
push
imul
cmc
sub
pusha
sub
and
add
pop
int3
mov
xor
pop
out
bsf
int3
and
lea
dec
imul
jnp
push
sub
mov
imul
xor
cmc
inc
cs
in
jmp
push
inc
das
shrb
push
add
sbb
fwait
dec
or
jp
pop
and
int3
out
jmp
and
cmp
mov
xchg
pop
sub
dec
dec
clc
mov
pop
fwait
push
lahf
inc
out
lods
aam
inc
jmp
jbe
imul
repnz
pop
dec
add
leave
adc
jae
ss
cmpsl
sub
dec
outsb
xchg
outsb
jp
js
out
mov
jl
push
cmp
pop
lret
inc
mov
scas
jbe
mull
je
fs
pop
lret
mov
js
aaa
cmp
add
lods
push
push
dec
ss
mov
ss
mov
mov
sub
stos
mov
pop
and
cmc
mov
dec
stc
mov
push
lahf
or
mov
cld
jae
stos
loop
sub
add
in
mov
lock
dec
jmp
mov
jle
add
adc
cltd
outsl
inc
fnstsw
pop
mov
fisubrl
jecxz,pn
divl
cmp
or
ret
mov
shll
cmp
fbstp
jge
sub
sbb
iret
inc
int3
and
xchg
popa
inc
push
loop
repz
add
inc
or
in
mull
cs
jg
addr16
jecxz
lock
mov
push
ja
jo
in
out
dec
sub
fcoms
xor
dec
je
in
fstl
pop
jmp
into
sahf
in
push
push
mov
cld
jl
pop
dec
pop
hlt
data16
xchg
cmpsl
or
xchg
inc
inc
pop
push
fcomip
je
or
xor
fstps
pop
push
das
fstps
leave
ljmp
int
out
and
les
movsl
popf
ret
jmp
into
xor
xchg
das
std
out
xlat
mov
mov
sbb
pushf
mov
incb
xchg
rclb
mov
jns
xchg
mov
mov
sbb
jmp
jmp
adc
fdiv
outsl
pop
add
orl
jbe
pop
dec
sbb
lahf
sbbb
jmp
pop
dec
bound
cmpsb
mov
dec
jns
jne
fistpl
push
inc
sbb
and
jne
ljmp
mov
lret
mov
cs
mov
cmp
push
shrl
inc
lock
mov
mov
jl
in
jno
inc
clc
add
icebp
jecxz
lahf
pop
int3
addb
lcall
jp
lea
mov
adc
sbb
jle
push
cli
or
cmp
cmpsl
adc
cld
inc
xor
sub
lahf
ret
jbe
fisubrs
imul
or
or
sbb
out
sbb
divl
ret
push
lock
jg
xchg
pop
lock
rorb
test
xor
mov
arpl
add
scas
or
jmp
cmpsl
je
repz
in
push
mov
mov
shrb
push
jb
stos
mov
jae
mov
lcall
lods
cmp
inc
pop
dec
xchg
leave
cltd
rcrl
add
lahf
mov
dec
test
mov
dec
es
xor
dec
movsb
enter
adc
in
ss
mov
adc
jnp
inc
sub
xlat
inc
push
mov
dec
add
sub
push
fcmovnbe
insl
dec
or
fwait
pop
scas
sbb
insl
sub
notb
lock
sub
lret
int3
dec
icebp
in
pop
adc
and
or
jo
sub
adc
add
mov
inc
lahf
loopne
loop
push
xlat
pop
cmp
cwtl
or
movsb
mov
mov
stos
inc
xchg
aaa
mov
cmp
fldcw
adc
push
xor
mov
cwtl
mov
push
sub
hlt
adc
xchg
movsl
sbb
es
es
pusha
lods
mulb
leave
jge
in
lahf
out
cmp
int
cmp
fs
mov
and
lds
lahf
jmp
xchg
jg
push
addl
aas
out
aad
popa
rcrb
cmp
imul
jmp
popa
cs
mov
mov
sbb
cmp
ret
jo
sub
fadd
pop
jmp
xchg
adc
orb
scas
pop
hlt
out
pop
dec
jmp
jmp
adc
mov
pop
sub
neg
jge
aad
sahf
sub
movsb
movsb
push
ljmp
or
test
shrb
xchg
xchg
sub
shlb
xchg
repz
fcmovu
rcll
cltd
xor
cmc
pop
or
sbb
fstpl
fucom
fwait
jge
push
stos
xchg
sub
shl
out
mov
das
mov
mov
and
mov
cwtl
js
and
dec
stos
rcl
aam
sarl
and
enter
les
pop
xor
idivb
sub
movsb
je
scas
adc
ljmp
outsb
or
dec
inc
and
jge
push
jmp
sub
and
or
scas
sti
adc
cmpsb
add
test
adc
jl
fmul
pop
cs
add
xchg
lahf
rclb
iret
popf
or
pop
pop
shl
mov
shrb
mov
mov
push
add
add
mov
std
xchg
dec
sbbb
jo
inc
bound
call
movsl
add
pop
ds
push
enter
adc
enter
fndisi(8087
sbb
es
mov
jo
stc
rolb
xchg
pop
movsb
jle
and
push
mov
or
adc
sub
lock
dec
aad
es
enter
repnz
repz
rclb
sbb
dec
mov
push
adc
fildl
cmpsl
push
pop
jno
cwtl
add
test
shl
ret
pop
inc
int
add
dec
fcmovne
xor
mov
mov
inc
mov
je
add
pop
jge
enter
int3
pop
stos
shl
push
ror
or
into
sub
outsl
mov
xor
cltd
adc
sub
jmp
test
cwtl
sbb
adc
mov
push
std
inc
sub
jns
add
mov
ret
cli
aad
sbb
sub
jp
mov
mov
xor
cmp
pop
inc
xchg
xchg
dec
or
imul
dec
arpl
dec
jno
and
cmp
pushf
xchg
jns
add
filds
xchg
adc
sbb
vmread
xchg
mov
call
jl
adc
into
cmc
hlt
jb
inc
push
add
jo
icebp
cwtl
cmpsl
out
or
push
cli
shrb
adc
outsl
mov
cmp
xchg
jmp
jno
xor
cmpsl
xchg
mov
mov
enter
call
push
cmpsb
lcall
mov
push
rcrb
xor
mov
and
fdivrs
sarl
mov
fcomps
cmp
mov
hlt
add
outsb
loop
and
jmp
lds
jbe
mov
ss
rolb
mov
jnp
jl
mov
pop
sbb
pop
jecxz
aas
test
cmp
mov
testl
add
pop
je
add
mov
and
pop
fsubrl
js
mov
cs
lods
and
xchg
xlat
lods
xchg
outsb
mov
int3
jbe
xor
fwait
jg
jo
cmc
mov
div
fnstenv
push
test
xor
add
ficomps
stc
jmp
xorl
and
mov
outsl
out
sbb
in
stos
in
push
cmpsb
jns
adcb
cltd
dec
dec
test
ss
sbb
js
inc
pop
cwtl
inc
cmc
jle
ret
jno
or
mov
in
cmpsl
mov
xchg
pop
cld
ss
or
xor
mov
cmp
icebp
push
add
rcll
ljmp
dec
aad
dec
add
or
xor
jno
dec
adc
add
push
sbb
mov
or
adc
pop
pop
sub
mov
loopne
inc
jbe
pop
aaa
fmul
add
push
jno
loope
test
add
es
xchg
mov
and
fwait
xchg
test
lret
sbb
mov
and
inc
push
inc
pushf
mov
and
or
pop
pusha
into
fldenv
popf
out
inc
xchg
xor
sbb
pop
xlat
cmp
adc
jnp
loopne
dec
subb
cmp
fbstp
stos
sti
stc
sbb
es
cmpsb
push
sarb
dec
pop
rolb
mov
cmp
xlat
lret
and
xchg
add
into
pop
adc
sub
mov
lea
pop
int
xor
or
jecxz
push
popf
xor
mov
scas
push
mov
xchg
jle
mov
cmc
movsb
ja
or
mov
lahf
and
inc
push
sahf
movsl
mov
pusha
adc
mov
cld
in
sbb
mov
pop
and
inc
aas
pusha
xor
cmpsb
add
insl
stos
shlb
or
dec
loope
jle
push
orb
sti
in
sbb
push
xchg
xor
nop
dec
ljmp
in
popf
dec
inc
lcall
popa
xchg
lretw
aam
movsl
jae
loop
outsb
pusha
sbb
gs
into
ds
xor
dec
adc
adc
imul
push
daa
out
mov
test
out
pop
mov
fwait
add
cli
xor
fstl
sbb
xchg
sub
add
inc
cmp
add
lods
es
mov
das
cmp
pop
xor
cmp
das
dec
pop
cmp
sbb
inc
out
loop
add
inc
je
mov
push
iret
sub
and
lds
mov
and
fdivl
mov
xor
aas
mov
nop
xchg
cmpl
or
cmp
mov
call
jno
cmp
sub
xor
inc
sahf
adc
xchg
xchg
jecxz
push
sbb
movsl
nop
push
ds
pxor
add
fisubl
pop
insl
arpl
mov
add
jb
inc
mov
test
cld
outsl
push
jle
xchg
lods
inc
xchg
and
xor
imul
imul
arpl
imul
jnp
movsl
sub
and
dec
push
xor
std
stc
out
xor
mov
out
add
dec
cwtl
rolb
and
sub
xchg
pop
pushf
jns
inc
pop
mov
movl
test
in
mov
mov
xchg
mov
mov
dec
sub
jo
in
jnp,pt
jg
inc
lea
pop
mov
push
std
imul
add
int3
leave
xchg
je
sbb
gs
sub
sub
inc
push
jecxz
xor
mov
loopne
in
push
hlt
shrb
xor
js
icebp
leave
sub
sbb
sbb
insl
sub
xor
idivb
pushf
add
and
ds
push
push
mov
les
sbb
pop
mov
mov
mov
push
sub
in
xchg
adcb
lret
cld
mov
mov
or
sub
inc
xor
imul
inc
stos
sarb
adc
pusha
adc
test
mov
jle
jmp
test
mov
mov
lret
inc
dec
mov
xlat
das
adc
dec
pop
mov
add
inc
aad
fcmovnu
and
loop
jl
pop
pop
push
cs
pxor
dec
jp
adc
sub
lock
frstor
jno
movsl
inc
sbb
xchg
mov
inc
pushf
test
xchg
jle
addr16
xor
push
pop
inc
insb
fstpl
dec
pop
pop
jne
std
mov
xchg
enter
push
adc
pop
jp
sbb
shlb
call
mov
dec
jmp
push
sub
push
shll
sbb
adc
daa
xor
sub
pusha
cmp
mov
pushf
imul
mov
add
jge
cmp
pop
test
inc
int3
dec
dec
jb
test
mov
and
sbb
fdivrl
test
jge
jecxz
jle
setb
lret
mov
push
jp
data16
daa
mov
inc
pop
mov
pop
shr
push
mov
dec
test
out
orb
mov
sahf
mov
pushf
or
ja
mov
inc
test
xlat
movsb
jbe
int3
inc
push
add
rcrl
pop
xor
pop
repnz
xchg
mov
adc
pop
cwtl
test
ljmp
sbb
lcall
in
ds
mov
xchg
mov
mov
out
jp
lcall
or
fiadds
push
ljmp
negl
cmp
inc
dec
mov
ss
cltd
cs
mov
inc
xchg
sub
rcrb
aam
je
iret
xchg
pop
fs
mov
les
push
sbb
test
add
adc
mov
pop
rorl
lds
sub
adc
xchg
push
jg
aas
push
fwait
jecxz
mov
in
sbb
dec
push
cmpb
fcomip
incl
in
mov
dec
push
cwtl
jne
dec
cmp
jae
subb
sub
sub
iret
insb
push
inc
sti
pushf
adc
gs
push
inc
movsl
ss
aad
xor
dec
inc
loope
cmp
movsl
test
shrb
dec
fsubl
dec
or
xchg
jne
movsl
std
in
sti
out
arpl
pop
dec
fmuls
inc
fimull
jbe
fisubs
add
jnp
es
xchg
or
xchg
mov
pop
add
out
aas
mov
jb
xchg
add
mov
add
jo
shlb
cmp
adc
mov
mov
lea
inc
adc
pop
lret
pop
shl
fcmovne
and
inc
ljmp
test
jge
lret
jmp
ds
shll
lahf
adc
cld
test
jae
mov
jp
lods
jns
lcall
add
in
xor
mov
movsb
inc
push
iret
xor
in
cli
stc
adc
lods
sub
sbb
rcl
dec
mov
xchg
clc
pop
rorl
fsubr
adc
lods
cmp
divb
sub
call
pop
test
jp
loope
and
ja
movsl
sbb
xchg
add
shr
adc
idivl
cltd
cmp
mov
mov
push
cmpsb
movsl
pop
outsl
lahf
sahf
xchg
push
scas
mov
push
lcallw
gs
cmc
js
fs
or
inc
int3
in
xor
mov
jb
pop
icebp
hlt
pop
fwait
cmp
out
push
ljmp
or
hlt
shl
popa
sub
outsl
in
pop
cmpsl
add
js
adc
xor
jno
outsl
dec
mov
fildll
adc
mov
xchg
xor
ror
ljmp
iret
sbb
es
xchg
mov
rcrb
mov
outsb
jne
insb
mov
aaa
outsl
test
je
jb
jo
mov
aaa
push
daa
push
dec
xor
cwtl
ljmp
mov
fidivs
in
pop
mov
stc
xor
repnz
mov
push
adc
inc
mov
imul
mov
addr16
mov
push
adc
jmp
pop
into
lock
cmp
dec
popa
inc
and
bswap
mov
mov
filds
int
mov
cmpb
add
roll
js
lds
mov
les
xorb
shrl
lock
adc
cmp
lret
cwtl
cmp
sbb
or
cmpsl
test
xchg
push
lret
popa
dec
bound
inc
jbe
out
dec
or
mov
cmp
pop
fidivrs
mov
ficoml
lret
clc
hlt
jp
insl
cmp
lea
push
adc
outsl
lea
pop
dec
out
and
imul
push
and
clc
shlb
jo
test
sti
shll
pusha
mov
lods
scas
stos
fisttps
xor
xchg
test
ds
pop
jne
and
inc
test
es
cmp
icebp
jle
inc
inc
fsubrl
fwait
xchg
and
mov
sbb
sahf
test
fwait
add
mov
xchg
int
adc
and
mov
pop
pop
in
into
inc
jmp
mov
mov
dec
fsts
lcall
inc
mov
test
dec
jno
pop
clc
bound
jecxz
jo
mov
test
push
adc
xor
jmp
sahf
cli
pop
mov
push
scas
dec
inc
out
ret
jne
dec
mov
enter
or
loop
sbb
mov
sbb
les
jae
pop
pop
js
jl
sti
call
lock
mov
outsb
decl
pop
mov
jp
mov
iret
jl
lcall
test
xchg
xor
cwtl
mov
cmpsb
adc
fnsave
dec
shll
shlb
mov
rcrl
xor
in
xor
addl
mov
je
iret
in
frstor
mov
ret
sbb
jg
lds
mov
sub
mov
jnp
popa
pushf
and
mov
dec
ficompl
stos
mov
cmpsb
push
cmpsl
sub
xchg
pop
sbb
bound
push
jecxz
fucomi
fs
popa
add
mov
adc
mov
mov
mov
fs
xchg
das
adc
cmp
sbb
or
add
loopne
jecxz
fwait
mov
and
jb
add
adc
int3
jae
mov
dec
rolb
in
xchg
lret
xor
mov
adc
mov
fidivl
cmp
sbb
ret
dec
xor
sahf
push
shll
cltd
pop
xchg
xor
data16
ja
loopne
outsl
sbb
pop
fdivp
mov
enter
pusha
xchg
xor
loop
call
aad
or
jmp
outsb
push
stos
and
call
pop
cmp
push
xchg
mov
dec
sub
je
sbb
push
adc
fildl
cmpsl
mov
sbb
ljmp
xchg
fstpl
sub
jnp
scas
outsl
jno
xlat
movl
jnp
adc
jle
mov
mov
or
cmp
cmp
mov
stos
gs
pusha
sti
out
lock
add
fstl
pop
xor
orb
push
les
scas
or
xchg
int3
test
fcmovne
test
pop
add
xchg
xor
lods
xor
jne
push
data16
sahf
xor
xor
loop
adc
mov
outsb
push
jne
pop
push
jg
pop
pop
mov
lods
hlt
lret
mov
or
add
sbb
pop
or
scas
loop
popa
gs
arpl
shl
stos
jp
adc
xchg
add
pop
adc
mov
or
nop
adc
cmp
mov
mov
jecxz
ds
mov
push
dec
mull
cmp
xchg
jnp
sub
pushf
andb
and
pop
mov
mov
ret
cmp
push
jae
popa
mov
xchg
lods
loop
jne
lock
fs
shll
js
jae
mull
push
fdiv
sub
rclb
pop
jne
imul
sub
pop
or
cmp
sub
pop
pop
inc
ret
hlt
enter
outsb
sbb
out
gs
and
leave
aam
addr16
push
mov
in
jp
mov
xchg
aad
icebp
jl
push
ret
or
mov
fs
cwtl
add
pop
stc
cmp
popa
push
cmp
ret
add
fucomi
lods
adc
dec
sub
arpl
xchg
xchg
xorb
lock
sub
test
movsb
push
cmp
pop
mov
mov
inc
pop
push
test
add
adc
loopne
pop
int
and
out
push
in
movsl
in
cmpb
nop
cmp
sti
sbb
cmp
ror
fwait
pop
loopne
data16
in
mov
js
in
push
jno
mov
inc
cli
into
rorl
mov
popa
fldl
lods
pop
or
rolb
outsl
push
cmpsb
in
dec
inc
and
inc
cld
cmp
mov
sub
add
dec
pop
or
lret
popf
je
cmp
adc
orl
sbb
es
add
cmpsl
aad
cmpl
pushf
fidivrs
pop
out
sbb
ret
push
adc
xor
stc
jmp
push
aas
add
adc
aam
cmp
into
dec
loope
mov
jnp
jae
stos
xlat
orl
divl
idivb
xchg
pop
negb
lcall
pop
inc
push
xchg
mov
icebp
and
sahf
out
adc
add
mov
scas
sbb
push
add
mov
pop
cmpsl
sub
pop
inc
xchg
loope
sub
aad
mov
cli
and
and
and
mov
sbb
pop
fisttps
pop
inc
test
mov
lods
rolb
sysenter
dec
cltd
filds
cwtl
mov
mul
push
push
lcall
ljmp
xchg
push
out
xlat
mov
adc
sbb
aam
in
pusha
out
sbb
fdivp
imul
stc
mov
stc
ss
sub
xor
adc
divl
iret
leave
mov
push
dec
cmp
sarb
sti
or
and
xorb
or
sbb
lods
ljmp
push
jecxz
push
sub
push
and
sarb
xor
mov
sbb
lea
adc
and
inc
popa
pusha
or
movsl
xlat
cwtl
dec
mov
and
add
jnp
in
push
and
pop
pop
mov
jl
fisubs
add
and
lret
dec
dec
xchg
inc
stc
js
dec
add
repnz
daa
jecxz
addr16
decb
lcall
adc
lret
sbb
xor
ljmp
leave
add
lock
ret
das
cli
xor
out
add
jmp
push
cwtl
test
mov
cmpb
push
fmull
insl
cmp
inc
movsl
fcmovnb
add
sbb
push
adc
adc
dec
es
mov
movsl
push
nop
dec
out
push
and
and
mov
inc
push
lods
popf
inc
dec
pop
es
lods
loope
pop
ss
xor
jge
pop
repz
push
test
mov
and
call
inc
lcall
push
dec
xchg
push
jge
or
xor
sub
rcrb
ret
stos
jb
lea
adc
rcrl
clc
insb
pusha
push
pusha
ja
fwait
bound
inc
sbb
sbbl
repnz
je
xchg
jl
mov
mov
cmp
jno
icebp
loope
jl
inc
mov
mov
and
pushf
incl
js
xlat
add
ret
push
cmp
mov
cld
jno
dec
xchg
sub
aas
xchg
xchg
mov
cmpb
outsb
jle
xor
orb
and
sbb
pop
lret
popa
inc
xor
sqrtps
xorb
or
cli
repnz
adc
in
repnz
and
cmpsl
icebp
cmp
adc
hlt
loop
cltd
out
ja
mov
and
mov
icebp
sub
in
xchg
movsl
sbb
sub
dec
stos
test
movsl
loope
pop
jns
fistpll
test
push
push
pop
or
push
fdivs
je
sbbl
push
mov
popa
push
imul
pop
inc
inc
in
cli
inc
fs
iret
out
pop
xchg
mov
pop
lret
mov
sub
js
cmp
sbb
xchg
xchg
insb
das
fmuls
sbb
ret
sbb
sbb
sub
ret
arpl
cltd
mov
pop
imul
jg
sbbb
xor
sub
dec
sarl
jecxz
adc
mov
cmp
not
in
adc
aam
dec
js
fnstcw
mulb
inc
fstpl
shlb
or
pusha
and
fnstcw
test
mov
aam
test
jae
dec
imul
add
sub
mov
int
or
divl
sub
fs
ret
xchg
push
xchg
mov
xchg
dec
cwtl
mov
andb
xor
jne
add
int
out
test
incb
mov
inc
aad
push
adc
push
comiss
fucomi
cmp
jge
add
jns
cmc
mov
xchg
lret
movsb
mov
inc
dec
scas
aas
inc
add
sbbl
mov
sbb
in
cli
ss
xor
add
es
xchg
test
adc
dec
dec
fwait
inc
mov
pop
dec
mov
mov
dec
xor
xor
push
bnd
leave
rorl
insb
fisubrs
rorb
pop
movsl
mov
stos
mov
sarb
xor
loopne
sub
push
adc
outsl
sti
in
stos
aad
xchg
fmul
sbb
and
inc
fdivs
xor
arpl
loopne
aad
subb
test
ljmp
out
and
pop
imul
fstl
mov
bound
xor
jecxz
mov
mov
mov
into
fsubrs
pop
sub
lea
in
mov
ret
push
push
sahf
mov
jns
js
rclb
pop
adc
les
or
fwait
es
outsb
mov
pop
add
xchg
xchg
or
or
out
cs
test
fs
movl
pop
push
mov
fnstenv
inc
mov
mov
movsb
inc
ret
mov
shll
out
fdiv
jmp
pushf
dec
mov
scas
sahf
iret
scas
and
inc
adc
mov
jmp
xchg
stos
lcall
ret
ss
pushf
cld
aas
shl
popl
jne
jbe
push
or
push
pop
loop
xor
cmpb
xor
jp
pop
jnp
sub
and
loopne
xchg
daa
push
xor
loope
xor
and
cmp
jo
int
mov
jge
jmp
inc
add
mov
mov
das
jbe
pusha
cmp
fwait
mov
jmp
fnsave
cmpsb
cmp
lcall
out
lds
jns
pop
or
fisubs
cmpsl
sub
imul
les
push
cmp
aas
cmp
add
je
lods
ret
aam
push
mov
into
pop
sahf
xor
aad
je
xchg
fsubs
adc
into
sub
lret
insb
mov
adc
xlat
fldenv
jge
mov
cld
mov
and
sbb
scas
push
inc
leave
sub
xor
arpl
adc
push
popa
mov
out
add
xor
inc
mov
xchg
roll
add
lcall
push
mov
sub
add
xor
test
xchg
in
push
mov
mov
retw
imul
loopne
sub
repnz
mov
fs
lods
sbb
pusha
mov
sub
mov
sti
int3
insl
pop
mov
mov
add
lret
popf
movsl
lahf
xor
cmp
add
sahf
pusha
adc
gs
cld
movsb
mov
mov
sbb
inc
cmp
push
mov
imul
push
adc
stc
mov
outsl
cld
stc
das
aaa
adc
mov
std
jo
aaa
jnp
push
inc
aaa
loopne
sahf
aas
cmp
cmpsl
std
add
scas
or
aad
movsb
stos
bound
ret
lahf
ret
and
dec
dec
in
fcomp
arpl
lods
cmp
push
xor
lcall
xchg
or
out
add
test
cmp
sub
mov
shrl
into
scas
dec
add
pop
data16
popl
inc
in
cmp
movsl
cmp
pushf
into
cmp
inc
into
frstor
jg
outsl
ss
ret
sbb
pop
das
pusha
ret
dec
xchg
subb
xor
inc
mov
sub
and
adc
jmp
xchg
and
std
mov
push
add
fmuls
lahf
or
dec
imul
add
inc
int3
sub
jo
cs
ljmp
sahf
daa
das
sub
inc
testb
cmp
push
cmp
xor
mov
scas
cld
imul
fucomp
jnp
cltd
leave
test
and
push
sub
xchg
leave
jbe
dec
sub
insl
inc
push
pop
loope
pop
and
shlb
push
sbb
adcl
jo
mov
mov
fwait
dec
je
bound
push
ret
xchg
movsb
jb
rorl
rcll
inc
bt
in
mov
pop
data16
das
leave
dec
imul
cmp
pop
jecxz
std
pop
std
inc
fsubrl
loope
adc
and
clc
out
ret
jg
xchg
add
scas
jle
sbb
push
or
sub
leave
nop
adc
in
jg
bswap
fldenv
out
lcall
mov
add
xor
rolb
lock
mov
pop
ret
adc
fcomi
bnd
hlt
icebp
or
xchg
mov
in
inc
jae
xchg
cwtl
pop
lock
mov
jg
lahf
mov
add
pop
push
sbb
push
call
into
cs
xchg
mov
xlat
jae
sub
cmp
pop
int
icebp
mov
shll
push
shl
out
push
jb
pop
ds
outsl
out
pop
dec
jo
add
ss
mov
stc
filds
ror
mov
ds
scas
mov
dec
xor
andb
into
test
popa
enter
dec
inc
sub
fwait
mov
dec
cmpsl
imul
shll
sbb
and
sub
stos
repnz
in
xchg
cltd
jecxz
sbb
mov
cmp
popf
xorb
inc
pop
repnz
cmp
xor
ds
es
adc
dec
in
push
dec
ljmp
add
mov
sub
mov
pop
cld
iret
sub
cld
jmp
sbb
adc
lds
popf
ja
incb
pop
inc
sub
imul
outsl
imul
nop
aam
dec
sbbl
push
outsb
dec
test
aam
cmpsl
add
pop
cmp
in
mov
or
sbb
sub
cmp
adc
lods
cmpb
stos
pusha
repz
lcall
mov
dec
fistpl
pop
and
pop
cmpsl
mov
pop
jg
mov
out
testl
push
leave
inc
mov
bound
xor
rcrb
in
leave
mov
mov
xlat
fs
out
cwtl
hlt
shrb
push
cld
movsl
stos
fwait
lds
adc
pop
pop
add
lods
sar
adc
aam
push
cmp
xor
or
xchg
xchg
int
mov
sbb
nop
pop
orl
or
movsb
jge
adc
mov
xchg
ret
les
inc
mov
loope
add
inc
mov
sub
addb
pop
loop
xor
xchg
nop
and
jecxz
pop
lret
in
repnz
inc
mov
sub
fisttpll
mov
in
into
fdivrs
in
je
push
and
pop
ficoms
out
lods
idiv
xchg
inc
cmp
aad
pushf
imul
add
add
xorb
jmp
fistps
inc
lea
js
int
jnp
leave
mov
jl
leave
mov
adc
push
push
rcll
testb
adcb
lret
adc
cwtl
cmp
sbb
push
xor
pop
adc
add
bound
and
in
in
es
xor
mov
dec
mov
out
mov
push
jb
fcmovnb
lret
jno
ret
imul
enter
jle
clc
inc
sti
insb
aaa
out
push
lods
xchg
int3
stc
and
vxorps
dec
fmuls
mov
punpckhbw
idivl
mov
test
jo
addl
mov
int
mov
mov
popa
sbb
jno
imul
inc
mov
mov
iret
cs
pop
adc
pop
inc
mov
pop
aas
in
cmp
jne
inc
push
xchg
sub
ret
ret
mov
cwtl
outsb
push
xchg
lea
aas
movsb
inc
add
adc
nop
xlat
lret
mov
lcall
xchg
mov
jg
mov
inc
mov
mov
fstpl
out
dec
out
jecxz
adc
or
stc
les
hlt
loope
add
mov
and
mov
scas
repz
movsb
cmpsl
cmp
xor
repnz
std
xor
sub
jg
call
movsl
pop
and
mov
in
hlt
dec
sbbb
mov
lock
rcll
nop
aam
jmp
mov
mov
jmp
xchg
insl
jno
mov
out
cmpsl
jno
jae
inc
mov
dec
inc
mov
jnp
add
dec
lret
pusha
push
and
pusha
rep
shrb
jnp
fldcw
adc
jb
sbb
mov
dec
in
lcall
fnstsw
and
idiv
mul
jae
add
and
in
dec
and
inc
sub
pop
mov
cmp
push
gs
and
fidivs
xchg
cmp
leave
notl
push
in
xor
mov
mov
orl
push
outsl
lcall
pop
push
xor
mov
push
aad
adcl
test
mov
jne
test
das
mov
push
clc
imul
add
pop
aaa
sbb
xor
imulb
ja
sarl
bound
jbe
in
insb
stos
lock
push
les
push
ret
ret
mov
out
in
ja
jno
cmc
negb
int
mov
cmp
adc
mov
adc
push
xor
idivl
push
je
sahf
dec
sahf
stos
fbld
std
sub
mov
xor
insb
pop
lock
dec
xchg
push
inc
cmc
leave
sub
mov
sub
in
mov
rcrb
mov
jle
jns
repnz
rcrb
lret
add
cmc
xor
sti
lods
adc
sub
or
bound
xchg
sub
xor
pop
aaa
pop
xchg
es
lret
mov
dec
push
mov
sbb
hlt
cmp
inc
jbe
mov
mov
pop
pop
mov
dec
jle
aad
push
fmull
icebp
mov
ffree
mov
aad
push
sahf
gs
lcall
jno
int
lret
adc
push
or
std
jns
inc
lcall
jmp
stc
scas
jmp
or
jne
aas
push
fidivrl
sub
inc
or
jns
shlb
add
fs
dec
aad
xlat
ror
dec
negl
aam
add
ret
aaa
inc
xchg
rcrl
mov
pop
mov
fisubs
adc
movsb
sbbl
scas
push
lahf
sbb
pop
adc
rclb
movsb
pop
out
mov
cmp
push
mov
xchg
cld
leave
fldcw
imul
ret
cmpb
mov
ret
mull
loop
sub
push
mov
out
jge
in
cmp
sub
popa
push
int3
or
cld
pop
les
xchg
push
mov
push
cmp
mov
xor
pop
pop
insb
adc
adc
leave
inc
push
subl
cmpsl
add
xor
cmp
divl
mov
xchg
adc
mov
popa
shll
push
xchg
addl
cltd
bound
jecxz
dec
ljmp
adc
leave
dec
lahf
sub
add
mov
push
dec
shrl
shl
sbb
movsb
popf
inc
xor
push
push
cmp
sub
lahf
fnstcw
lods
out
stos
push
insl
xchg
cld
std
cs
repz
sub
loop
push
sub
xor
inc
sub
dec
cltd
loopne
fwait
pop
xchg
cmp
mov
insb
pop
push
add
mov
cmp
push
or
mov
or
lods
or
jge
add
adc
mov
lahf
dec
and
mov
lock
clc
pusha
jns
jae
cmpsb
enter
xor
rcrb
xor
imul
scas
mov
and
test
clc
ljmp
jp
sub
enter
push
push
popf
jnp
cmpsl
adc
and
fcoms
je
push
ss
std
lds
lahf
mov
nop
cbtw
leave
inc
sarb
outsl
data16
movsl
xor
mov
aas
int3
xchg
outsl
push
sbb
jp
scas
fdivs
dec
inc
pop
cli
pop
push
jge
adc
add
sub
dec
ja
inc
lret
mov
clc
pusha
jns
mov
xchg
pop
loopne
popa
fcompl
les
xchg
test
ss
fs
mov
ss
sahf
addr16
out
dec
daa
andl
adcl
mov
lods
xchg
inc
pop
out
in
out
jmp
mov
into
lcall
xor
cmpsl
dec
xchg
out
test
pop
xchg
cld
sbb
jge
arpl
out
adc
and
pushf
add
xchg
shrl
mov
shr
jge
mov
test
pop
shlb
icebp
mov
pushf
xchg
in
pop
les
std
loope
mov
cs
add
pop
aas
sarl
cld
inc
push
gs
stc
cmp
sub
xor
cli
pop
mov
aaa
xchg
jno
jmp
adc
pop
dec
cmc
jae
jns
notl
cmp
xchg
push
or
sbb
add
inc
imul
cmp
addl
jp
jnp
ja
test
and
add
gs
arpl
pop
cmp
mov
push
cmp
popf
or
cmp
mov
dec
xor
xchg
push
ss
popf
cmp
roll
icebp
add
mov
or
xchg
jmp
adc
and
add
stos
in
inc
mov
pop
fdivl
cmp
cmp
push
imul
in
pusha
js
push
ret
sub
popf
pushf
sbb
add
stc
addr16
popf
inc
adc
cmp
cmp
stos
mov
lret
xor
or
mov
js
cmp
and
mov
sbb
leave
adc
mov
iret
cwtl
jge
cmpsl
sbb
mov
mov
out
xor
cmp
js
inc
icebp
add
cli
xor
lods
jge
scas
dec
test
into
out
sbb
sbb
test
inc
xor
jno
mov
cmp
push
stc
push
dec
jns
dec
insb
sbb
sub
push
rcrl
lods
mov
gs
arpl
push
and
pop
loop
xchg
jl
xchg
xchg
cltd
and
enter
shlb
mov
arpl
xlat
and
jne
mov
popf
or
insl
mov
cs
cli
mov
pop
scas
lea
and
daa
xchg
jle
jge
mov
fdivrl
pushf
mov
xor
int3
dec
mov
sbb
push
sti
or
popf
les
out
xor
cltd
cs
cmp
js
je
mov
cltd
mov
inc
test
inc
xor
and
mov
jecxz
cmp
mov
insb
mov
pop
add
pop
pop
xor
mov
outsl
ds
or
cmp
mov
pop
or
or
cltd
popf
mov
imul
adc
jne
fwait
loopne
das
addr16
call
outsb
flds
test
ds
mov
or
inc
xchg
inc
xchg
pop
aad
fstpl
mov
lock
inc
push
fildl
add
sbb
sti
insb
sub
pop
add
cld
inc
fwait
jns
sbb
mov
ss
adc
repz
push
int
out
scas
movsl
lods
je
adc
inc
bnd
fdivrs
mov
mov
std
and
mov
cld
xor
sbb
adc
sbb
sub
and
movsb
cmpsl
inc
bound
std
mov
loope
std
dec
aam
call
cli
adc
jge
jnp
test
pop
vdivps
mov
inc
movsl
imul
xchg
fistpll
lods
xchg
arpl
outsb
int3
lret
in
neg
std
iret
mov
inc
pushf
xor
scas
push
sub
adcb
push
insb
jnp
jle
jnp
xor
and
inc
in
icebp
jl
jnp
incb
sub
icebp
inc
dec
and
in
adc
mov
dec
arpl
ret
pop
add
lock
sahf
sbb
fs
push
cmpl
jnp
ret
push
pop
adc
clc
jne
mov
lea
test
out
mov
and
ret
cmp
ret
jo
mov
dec
pop
mov
hlt
jmp
jp
push
mov
dec
scas
cmp
jo
sbb
loopne
xchg
aam
das
shrb
add
cmp
jg
push
leave
stos
dec
sbb
and
inc
js
das
mov
das
lret
inc
ds
xchg
push
add
cwtl
sub
testw
jecxz
mov
add
les
mov
imul
into
insb
fdivs
loopne
mov
pusha
sbb
dec
dec
mov
jno
aam
sbb
es
mov
xchg
bound
ds
xor
out
enter
mov
push
repnz
pop
in
in
aas
int
fmuls
daa
vpaddusw
add
push
inc
pushf
cli
xor
data16
in
mov
lods
daa
dec
or
sahf
dec
sbb
mov
dec
hlt
ja
jnp
nop
xor
mov
mov
out
sti
lods
mov
faddl
rclb
scas
pop
dec
or
cld
inc
xor
cwtl
rcll
loope
mov
mov
iret
daa
mov
jae
scas
xchg
push
push
mov
nop
stc
loopne
add
cltd
sub
stos
fbstp
pop
push
jbe
enter
xlat
sub
xchg
adc
xor
inc
sahf
jge
jae
adc
cmp
mov
in
inc
pop
ds
aas
pop
fimuls
mov
ftst
dec
xchg
sub
lock
mov
gs
and
test
aaa
lcall
pop
es
cmp
jnp
pop
lock
stos
xlat
inc
jecxz
lock
nop
orps
xchg
insl
imul
lcall
xor
repnz
push
xor
dec
cltd
xchg
cli
mul
inc
fsubrs
push
stos
js
push
push
push
fdivl
pop
adc
divl
nop
sub
xchg
push
mov
popf
dec
jge
mov
cltd
lea
jns
mov
repnz
adc
mov
insb
in
insl
add
or
xchg
popa
jmp
popa
faddl
mov
sahf
aas
daa
xchg
push
or
add
jmp
in
aas
stc
jl
or
xor
stc
ret
icebp
mov
adc
mov
inc
in
insb
push
or
adc
subl
pop
push
push
sub
adc
xchg
push
fnstcw
into
hlt
cltd
data16
cmpsb
push
lahf
imul
and
int3
stos
xor
addl
imul
mov
ja
cwtl
sub
adc
fdiv
cmp
out
shlb
mov
dec
sbb
or
add
mov
lock
cld
add
xchg
xchg
lds
call
xor
jmp
out
sbb
sub
xor
fisttpll
hlt
xchg
jecxz
ljmp
push
lcall
push
in
mov
push
push
gs
cmc
clc
sub
leave
jo
cwtl
popl
or
fidivl
xchg
cs
dec
sub
scas
mov
cmp
sahf
mov
push
mov
dec
adc
popa
or
test
mov
mov
in
and
mov
xchg
sti
scas
xorl
dec
imul
dec
mov
pop
xchg
push
cmp
xchg
cmove
mov
pushf
mov
fidivl
es
jno
pop
es
mov
xchg
xor
push
or
stos
mov
das
push
int3
ss
fldenv
bound
xor
ljmp
dec
xchg
fwait
pushfw
cmpsl
lds
xlat
dec
xor
in
sbb
outsl
rclb
sbb
lds
mov
xchg
dec
aam
adc
std
shlb
das
push
adc
mov
aaa
lds
add
inc
imul
shl
sbbl
add
into
mov
pop
scas
popf
mov
sub
jle
lea
mov
mov
das
fldt
xor
std
push
inc
movl
ljmp
cmpsb
push
out
dec
jg
mov
mov
movsl
pushf
add
icebp
outsl
cmc
push
xchg
fildl
xor
xor
pop
mov
dec
push
jg
test
fs
pusha
inc
fidivs
xchg
add
xor
pop
and
fs
int
sbb
and
or
out
pop
pop
jnp
sub
xchg
xchg
ja
out
jb
jbe
shlb
outsb
sti
mov
and
jp
mov
push
dec
addr16
add
xchg
out
out
jp
lods
mov
dec
adc
adc
mov
dec
movsl
or
cs
mov
into
in
xor
xchg
test
jmp
jp
cwtl
popf
lret
out
jp
and
mov
dec
fwait
push
sbb
add
pop
rol
aam
push
in
lock
scas
hlt
stos
mov
aas
rep
movsl
int3
stc
lods
out
or
pop
push
add
dec
xor
adc
cmp
pop
nop
popl
push
push
aad
aas
test
stos
cmp
lcall
in
jb
xchg
repnz
bound
adc
inc
rcrb
stc
dec
mov
jp
mov
insb
sbb
lock
movsl
int3
jecxz
mov
shrl
and
xchg
add
cwtl
jnp
xlat
push
inc
sbb
or
jmp
pushf
inc
out
in
inc
stc
lea
and
cmpsl
xchg
std
sub
push
repnz
mov
cmp
sub
sub
leave
cli
cli
mov
jecxz
and
negb
enter
fidivl
xchg
test
cmpsl
js
lock
xchg
jmp
lock
pop
xor
into
fs
mov
ljmp
mov
test
jp
sub
adc
sbb
aad
cli
pop
fcompl
sti
jae
cwtl
imul
icebp
mul
fwait
int3
out
arpl
inc
testl
sbb
es
nop
test
jae
jbe
lods
clc
fmul
xchg
je
and
in
mov
aaa
in
sbb
cmc
aam
pop
loopne
mov
out
cmp
fs
cmp
xchg
filds
cmpl
push
adc
cmp
fsincos
popf
jnp
outsl
jns
lret
cmp
dec
push
sti
vmread
insl
add
push
pop
icebp
jnp
mov
js
pop
cmp
inc
cmpsb
movsl
mov
fst
pop
xchg
enter
cwtl
ss
push
dec
push
jle
stc
into
lret
jo
xchg
or
rcll
outsl
inc
mov
push
sbb
cmp
pop
cltd
les
fs
mov
fwait
xor
inc
mov
fldcw
arpl
js
or
push
ror
jl
fisttps
scas
jbe
icebp
push
sti
adc
icebp
fsubrs
call
or
test
loop
dec
push
xchg
scas
lods
add
movsb
ret
cs
lods
out
or
lods
push
jmp
cmp
loope
cmp
cs
lahf
sub
and
jge
add
inc
fisttpll
jle
ds
stos
repnz
sbb
sub
aaa
std
movsl
and
inc
mov
inc
sbb
popf
sub
dec
lahf
sub
hlt
xor
mov
adc
sti
fsubl
ds
icebp
push
shrl
inc
dec
outsl
lock
mov
cltd
jno
cmpsb
pusha
adc
cmp
mov
pop
or
push
xor
mov
push
push
aaa
add
pop
sub
add
and
or
push
and
push
aas
movsb
shll
lods
lcall
pop
cmp
stos
inc
and
xchg
adc
sub
ret
mov
call
adc
call
dec
mov
mov
xchg
xor
mov
sub
sub
js
push
inc
test
and
sbb
sub
fdivr
or
sub
adc
in
cmpsb
jl
fldl
sbb
xchg
pop
in
js
and
divl
jns
aas
fwait
jle
sbb
ret
cmp
sub
and
sti
aam
sbb
movsl
and
jno
pop
mov
loopne
movsl
fs
movsl
ds
mov
sbb
ss
push
mov
push
xchg
or
sub
insl
cmpl
xchg
xchg
loop
dec
lods
xor
xor
cmp
clc
dec
test
xchg
mov
popa
push
jne
fcomi
and
mov
push
dec
push
popf
inc
inc
fsubrl
xchg
out
mov
cmovb
jp
fisubs
jg
push
and
fdivrs
push
jbe
and
adc
add
ficompl
test
mov
sub
js
xchg
push
gs
fmul
rcrl
inc
dec
and
adc
std
sbb
imul
add
lock
ds
cmp
jno
inc
iret
inc
les
in
imul
xlat
xlat
dec
fmul
jne
insb
mov
hlt
popf
pop
lret
fbstp
jb
lds
mov
push
out
push
fisubrs
rol
sbb
push
mov
sti
xor
ficoms
stc
cmp
andl
xchg
adc
stos
or
pop
xchg
psubusb
fbld
push
scas
xchg
lds
outsl
insl
ss
push
sar
ljmp
jae
pop
mov
cltd
or
xchg
adc
shlb
cmp
pop
mov
pop
adc
and
js
test
out
cmc
push
lds
push
ja
aam
or
mov
mov
sub
mul
sub
or
mov
loopne
sbb
or
and
jnp
or
dec
mov
cmp
lcall
push
rcll
push
inc
and
xchg
jp
push
xor
lret
cmc
ja
mov
rcrl
mov
lcall
popw
push
mov
mov
outsl
adcb
lret
test
pop
imul
stc
cltd
inc
pop
leave
call
dec
inc
mov
sti
jns
mov
xchg
sub
inc
jo
pushf
dec
insb
pusha
cwtl
or
das
jmp
push
inc
xlat
lret
rclb
add
aaa
xlat
in
pop
mov
rolb
enter
or
loop
fnsave
icebp
daa
and
inc
pop
dec
mov
mov
fidivrl
xchg
mov
arpl
ljmp
xchg
lds
dec
popf
iret
or
xchg
js
std
push
dec
call
sbb
dec
enter
or
and
fiadds
cmp
fists
addr16
mov
fdivl
std
leave
push
lea
cmp
xchg
out
out
fucomip
fists
mov
dec
or
dec
cmp
pop
and
adc
add
sbb
loop
ja
pop
test
xchg
xor
adc
mov
scas
push
sti
sbb
mov
in
sarb
fdiv
loopne
pushl
pop
pop
movsb
mov
aas
mov
push
lods
xchg
mov
fsubp
mov
stos
cmp
adc
mov
add
in
aas
lret
jnp
ss
sub
icebp
lret
test
cmpsl
mov
lods
scas
mov
jno
push
pop
inc
push
fisubl
test
scas
adc
sbb
cs
add
push
ficoms
or
shll
jns
mov
xor
lret
xchg
push
xchg
inc
nop
add
out
jne
pop
and
stos
movsb
int
push
test
lea
inc
out
inc
sbb
call
pop
sub
mov
gs
mov
inc
jno
jmp
mov
outsl
lret
mov
mov
cli
mov
out
xchg
mov
mov
in
idiv
cmp
aas
into
call
lret
xchg
jo
andl
test
insl
movsl
push
or
mov
dec
addr16
repz
daa
mov
lea
push
stc
or
lret
arpl
icebp
mov
mov
jae
sbb
jnp
jns
fcmovnbe
jbe
pop
cmpsb
imul
mov
mov
sbb
ja
cmpsl
jae
mov
or
shll
jp
test
pop
push
in
out
jb
cwtl
jg
cli
dec
mov
sbb
les
fmuls
mov
ret
inc
cmp
mov
insb
sbb
add
push
jnp
out
inc
movsb
jno
adc
push
andb
adc
hlt
push
or
sbbl
aad
xor
xchg
xchg
gs
and
push
and
xchg
mov
sbb
xchg
into
push
and
insl
sti
loope
arpl
movb
fwait
mov
sbb
data16
test
lock
fidivl
gs
pop
js
enter
jnp
mov
or
sbb
jg
movsb
mov
mov
inc
inc
or
scas
es
sti
sbb
mov
mov
sbb
cmp
mov
push
pop
in
dec
pop
xchg
sbb
shl
sbb
adcl
test
push
and
daa
mov
leave
jge
xchg
xor
mov
jle
push
mov
push
inc
jle
mov
mov
pusha
jle
mov
shrb
in
nop
and
loope
cmc
pop
dec
pop
ja
or
or
fs
adc
push
inc
pusha
sbb
mov
add
shrb
call
mov
scas
inc
push
arpl
lret
data16
push
mov
sub
cmp
push
nop
mov
out
adc
popf
add
push
in
cmpsb
sub
mov
and
pusha
pop
mov
rorb
mov
outsl
mov
sub
and
mov
add
lea
addr16
loop
dec
jg
mov
aas
cmpb
ret
jle
out
test
push
popa
mov
push
xchg
adc
out
push
xchg
das
outsl
jecxz
cmpsb
ljmp
push
xchg
and
les
inc
outsb
cld
mov
push
mov
cmp
or
out
rcrl
rclb
pop
lret
std
jne
xchg
jne
xor
insb
push
pop
mov
add
mov
xor
sti
add
jb
bound
pop
and
out
jo
nop
sub
test
lahf
inc
xchg
cmp
pushf
lahf
scas
mov
mov
addr16
mov
mov
cmpsb
in
add
dec
push
jne
pop
fnstcw
mov
push
cmp
out
cmpsb
je
sahf
ss
adc
call
pop
lods
pop
cmp
imull
pushf
frstor
scas
mov
push
testb
loope
xor
stos
sbbb
xor
fildl
push
and
lret
loop
cli
iret
cmpl
ja
cmp
mov
jmp
xlat
fsub
in
in
test
mov
jno
add
test
mov
mov
add
insl
and
ret
cltd
mov
faddp
xor
int3
es
stos
jno
mov
add
add
pusha
xchg
sub
jmp
xor
jno
push
or
ret
mov
pop
cmp
and
jns
add
dec
mov
lret
mov
mov
fistpl
adc
pop
stos
ret
inc
leave
xchg
sbb
test
test
pop
mov
andb
pop
movsb
push
jne
pop
sbb
mov
rcll
dec
mov
and
add
out
les
data16
ljmp
mov
mov
cmp
mov
je
pop
daa
sub
pop
aad
sub
adc
adc
outsl
jne
cmp
jbe
data16
adc
in
out
and
movsb
mov
jmp
aas
stos
es
cwtl
das
push
mov
pop
pop
jle
leave
int
xchg
or
ja
faddp
push
push
and
pushl
mov
dec
sarl
popa
cmpsl
sbb
inc
ds
cmp
test
xor
mov
cmp
pushf
mov
pop
inc
dec
scas
mov
rol
and
xchg
cli
psubb
jmp
sub
insb
xchg
push
jne
out
out
std
lock
and
popa
mov
jne
xor
xorl
rorl
xchg
mov
mov
ret
dec
ds
jecxz
jl
and
xor
and
das
int3
lock
and
scas
nop
das
jle
ret
bound
dec
push
push
adcb
insb
xchg
mov
push
pop
adc
scas
mov
mov
pop
pop
jge
rorl
in
jmp
shlb
shll
mov
out
in
mov
or
jns
mov
aam
sub
jo
cmp
fsubl
xchg
movsb
pop
mov
jecxz
je
enter
jg
xor
pop
dec
mov
and
push
lods
ds
mov
iret
inc
insl
jno
or
xor
mov
in
jae
mov
or
fwait
xor
adc
aaa
sbb
add
in
loop
out
int3
xchg
dec
ja
jb
mov
lcall
and
ds
xor
mov
inc
lret
pushf
jne
ljmp
leave
mov
bound
outsl
add
mov
outsl
jo
mov
enter
lret
jns
or
dec
pop
cld
daa
lea
std
pop
mov
loop
dec
stos
out
adc
jecxz
nop
fdivl
sbbb
in
in
push
iret
int3
pop
mov
mov
test
add
pop
dec
or
ds
xor
out
movsb
mov
out
dec
in
loope
fdivl
mov
dec
or
adc
shll
fstp
push
inc
loop
dec
popa
insb
xlat
icebp
jecxz
lret
movb
ret
ret
jno
int3
xor
adc
daa
in
xor
out
js
xchg
pop
mov
pop
mov
ds
sti
pushf
push
mov
es
cmp
jbe
jae
push
dec
mov
out
scas
jle
into
jae
ljmp
push
test
fisttpll
cmp
loope
mov
js
cmpb
decb
inc
add
into
cmp
jne
das
lret
dec
xchg
repnz
push
push
xor
outsl
lcall
sahf
xchg
or
adc
in
xor
cmc
loope
frstor
pop
idiv
das
mov
mov
inc
xor
or
cwtl
add
bound
mov
outsb
andl
adc
cld
stos
mov
cmpsb
and
std
outsl
cs
loope
scas
repz
push
stos
fcomp
inc
into
test
aam
aad
arpl
mov
dec
mov
incb
push
les
xchg
les
lret
popf
jae
inc
or
lods
ret
sbb
sarb
jmp
mov
adcl
not
shrl
lods
enter
imul
daa
xor
mov
fwait
jnp
sbb
arpl
xor
fildl
dec
sbb
testb
aaa
fidivrs
loopne
or
and
mov
and
push
jmp
or
xchg
roll
sub
adc
dec
or
xchg
and
and
lock
mov
push
and
inc
sbbl
cmpsb
push
call
pop
mov
pop
pop
cwtl
incb
mov
hlt
out
inc
dec
lds
lds
or
pop
ljmp
jo
insl
out
pop
insl
mov
pop
mov
jb
fs
sub
out
mov
xor
fldl
bound
aaa
fnstcw
cltd
rorl
jb
test
cmc
add
loopne
jbe
std
das
in
mov
sbb
in
mov
fstl
lret
out
mov
stos
mov
sti
sbb
lock
lcall
mov
jle
push
scas
bound
sahf
pop
push
inc
adc
rorl
fld1
jge
pop
jno
xchg
cwtl
add
jmp
aaa
sub
cmp
inc
pop
arpl
popf
xchg
jmp
jns
mov
cwtl
out
in
hlt
push
fidivrs
adc
xchg
dec
inc
outsl
push
outsl
aad
out
add
sub
lds
push
popf
bound
aas
dec
pop
sub
daa
adc
or
inc
sbb
arpl
lahf
arpl
divl
stos
repnz
roll
lods
mov
fidivrl
sub
push
sub
outsl
mov
jnp
scas
pop
jmp
daa
push
cltd
inc
jne
outsl
pop
and
cmp
sub
and
test
ljmp
sahf
out
das
and
hlt
or
aad
retw
xchg
call
je
sub
sub
xchg
sub
test
jg
nop
orb
pop
fisttps
xchg
mov
mov
clc
mov
ret
call
push
pusha
mov
cmp
ret
dec
xbegin
les
mov
xchg
in
push
fucom
sti
xor
cmp
not
mov
cmpsl
das
push
mov
fsubl
jno
pop
imul
sahf
push
dec
add
data16
mov
sbbb
fistpll
in
adc
mov
inc
xchg
dec
in
sbb
sub
ljmp
mov
jp
pop
inc
rcll
inc
test
test
std
jmp
push
jnp
sub
xchg
pusha
out
ficoml
mov
dec
mov
sahf
adc
out
scas
and
test
mov
repnz
shll
and
sub
pusha
adc
mov
aaa
loopne
shlb
push
inc
mov
fmull
mov
and
sub
popa
fcoml
sub
loope
push
pop
mov
orb
sbb
lret
dec
addr16
pop
aas
std
int3
mov
loop
in
ret
in
and
fs
rcrb
lret
in
lcall
mov
adc
bound
sbb
jl
add
pop
mov
dec
push
and
pop
cmp
in
mov
or
xchg
cwtl
mov
dec
and
xor
cmp
xor
or
jp
pop
aam
std
fildll
lods
pop
aas
ficompl
xchg
cmpsl
jb
int3
inc
mov
lret
aaa
sbb
mov
jne
out
jne
push
ds
out
in
es
das
test
mov
xlat
add
cli
lea
ror
addr16
mov
push
mov
jge
ljmp
add
jns
sub
mov
inc
cs
gs
mov
or
mov
into
rorb
mov
scas
rcrl
xlat
out
push
xchg
int3
xchg
fnstcw
push
jp
mov
fidivs
fcmovnb
scas
mov
ret
xchg
sub
mov
outsb
dec
sub
push
incb
and
jecxz
xchg
push
lods
mov
dec
sbb
push
mov
lret
xchg
in
nop
sub
jns
loop
xchg
or
jae
dec
aas
dec
adc
xchg
cld
and
xchg
lods
dec
mov
lock
fistl
pop
mov
aam
popf
mov
xchg
std
ss
rcll
or
enter
imul
mov
dec
jns
imul
out
push
repnz
cs
xor
in
mov
test
or
add
cmp
dec
sub
aam
out
outsb
nop
push
add
pop
int
cmp
frstor
adc
cmpsb
and
mov
mov
xchg
jle
sbb
pop
xor
imul
cli
das
jno
push
mov
and
rclb
add
lret
loop
data16
cltd
mov
xor
sub
xchg
arpl
mull
sbb
fisubl
xchg
push
jae
push
idivb
rol
fwait
in
sarb
dec
jp
sbb
in
inc
jge
cmp
push
xor
loopne
das
cmp
hlt
int
pop
push
inc
dec
imul
movsb
or
adc
mov
sub
pop
sub
inc
scas
cmpsl
jnp
outsb
pusha
xchg
aam
sub
push
pop
testl
enter
out
nop
mov
scas
imul
ret
and
xorb
insb
jecxz
jae
stos
cmpsb
pop
lea
sbb
pop
xchg
outsl
lods
mov
add
adc
sbb
xor
cli
and
scas
arpl
std
jmp
sub
ja
orl
adc
test
push
jg
cld
pop
mov
movsl
xor
call
xor
xor
xchg
jp
pop
rclb
sbbb
push
test
hlt
mov
and
mulb
mov
es
add
or
jp
imul
fisubs
lret
mov
pop
js
or
adc
sub
inc
push
xor
scas
add
scas
inc
push
in
push
rcrb
ja
std
pop
lds
ret
call
imul
fdivs
fwait
add
lds
stc
sub
mov
stc
mov
pop
mov
mov
lcall
xchg
stos
and
jmp
mov
push
ret
and
and
inc
inc
loop
push
jae
ljmp
out
jl
addb
inc
pop
mov
sub
jnp
push
mov
mov
mov
mov
jnp
in
mov
sti
sub
xor
aad
xchg
jae
in
lods
sbb
das
aaa
arpl
popf
sub
les
jbe
cmp
enter
xor
add
push
inc
pusha
xor
into
daa
mov
push
imul
mov
mov
inc
fsqrt
xor
sbb
jp
in
mov
fdivr
fdivrs
jnp
nop
ficoml
add
loope
stc
inc
dec
nop
out
jns
jp
addl
rcrl
scas
xor
mov
in
inc
push
and
push
cwtl
xor
mov
mov
cli
cmpsb
pop
aas
jnp
xchg
add
push
dec
inc
outsb
test
pushf
sbb
mov
int3
cmp
cld
aas
das
dec
push
push
mov
pop
inc
pop
jg
inc
das
sidtl
mov
jecxz
or
cmpsb
rcr
mov
pop
cmpl
jmp
jb
call
js
and
sub
jne
mov
pop
xlat
or
mov
cmp
mov
sub
cs
jae
mov
pop
jbe
stos
loop,pt
xchg
jo
out
mov
jl
movsb
movsb
lea
dec
nop
dec
cmp
sub
std
addr16
mov
xchg
push
mov
xor
inc
ror
clc
push
xchg
js
ret
fidivl
pop
test
loope
push
sbb
std
jmp
ja
idivb
clc
jp
pop
xchg
fs
iret
mov
cmp
jbe
xchg
xchg
xchg
out
in
pop
cmc
pop
popa
inc
sarb
mov
hlt
dec
xchg
xchg
ds
imul
imul
mov
mov
into
xor
cmp
lock
mov
xchg
and
xchg
ret
out
xchg
xlat
enter
mov
test
clc
inc
fidivrs
sub
jg
call
std
inc
out
jo
pop
jmp
inc
inc
iret
push
dec
in
add
jae,pn
mov
cltd
aas
add
jp
pusha
cmpsb
xchg
nop
mov
leave
push
jg
xor
or
inc
sbb
and
push
pop
dec
es
mov
mov
ret
test
aas
ret
mov
jl
ds
addr16
jecxz
and
or
add
or
arpl
ret
sbb
movsl
hlt
push
pop
cmp
jbe
push
addl
lcall
sub
lods
jne
bnd
stos
in
xor
cmp
adc
pop
insl
ss
push
outsl
sub
mov
hlt
xor
mov
mov
es
jae
mov
shlb
add
cmp
pop
repnz
mov
mov
add
pop
pop
dec
xor
mov
adc
adc
mov
sti
addr16
in
add
adc
mov
xor
sub
and
push
mov
xchg
inc
adc
mov
and
cli
in
inc
lea
add
xchg
fidivrs
jmp
pusha
add
aad
nop
int3
js
dec
xor
add
out
decl
add
insb
loop
lods
or
sbb
rorl
adc
sbb
pop
bound
sub
jle
repz
inc
and
xchg
stos
subb
dec
add
fstpl
jns
push
jnp
fisubl
mov
repnz
mov
fucomi
and
cltd
sub
mov
mov
add
dec
add
inc
sub
aaa
sbb
ds
pop
imul
pop
cmpl
mov
cmp
and
pop
repnz
mov
js
sbb
hlt
loop
sub
leave
out
sub
xor
movsb
stos
sbb
jb
push
testb
fnstcw
in
flds
inc
mov
dec
inc
out
push
pop
shlb
lods
jns
bound
cmc
subl
jns
mov
in
pop
mov
jge
cld
push
dec
std
pop
sub
loope
ds
insl
mov
pop
rcr
and
adc
out
nop
jecxz
push
pop
push
sbb
and
ja
dec
mov
jo
hlt
or
mov
enter
pop
mulb
iret
jmp
xchg
aad
xor
shlb
imul
cmpsl
inc
test
pop
les
shll
jp
ror
data16
dec
addr16
pop
adc
or
dec
cmp
or
add
arpl
shrl
stos
test
cltd
sbb
cmpsl
ljmp
sub
mov
push
mov
mov
lret
sub
inc
rolb
loope
popf
cmp
jg
stc
lea
mov
mov
ljmp
mov
xchg
mov
mov
mov
in
fs
push
pop
test
xchg
mov
or
mov
pushf
mov
aam
int
insb
sub
xchg
lcall
add
sub
out
sbb
sbb
int3
cmp
add
jge
pop
xchg
sbb
enter
xchg
jb
pop
pop
adc
cs
push
sub
xlat
call
out
push
cld
stos
cmc
fwait
xor
imul
push
sub
fcmovne
sti
xchg
pop
loop
stos
ljmp
and
adc
pop
out
xor
xor
xchg
sbb
or
sbb
sbb
jo
sub
add
sti
ret
in
adc
pop
or
iret
stc
jecxz
pop
lock
cmpsb
jmp
sub
pop
mov
xchg
mov
push
test
inc
ljmp
iret
in
push
bound
stc
das
xor
adc
les
ja
int3
into
or
mov
xor
lahf
sub
fiadds
push
push
pop
jnp
stc
in
pop
add
dec
cltd
out
sbb
push
lods
sub
daa
sbb
std
mov
mov
std
pushf
add
decb
rcll
push
push
jnp
into
xor
cmpsl
pop
xchg
jb
jle
cltd
jae
inc
and
pop
pop
or
hlt
les
arpl
inc
lcall
out
or
notl
fxam
in
js
mov
fwait
or
ja
pop
out
stc
cvtdq2ps
outsb
lods
xor
insl
cmpsl
and
jbe
cmp
mov
in
push
cli
addr16
xchg
fs
pusha
mov
int
loopne
test
pop
xchg
inc
inc
adc
adc
inc
lock
mov
sub
lock
or
clc
xchg
lea
popf
aad
dec
das
sbb
jle
jle
xor
mov
mov
mov
adc
xchg
inc
jl
movsl
insb
add
inc
xlat
stos
push
int3
out
jp
outsl
and
dec
pop
insl
outsb
insb
enter
and
leave
jne
cld
mov
ljmp
jl
lret
fsubl
rol
inc
xchg
out
cmc
cmpsb
pop
push
push
mov
pop
packssdw
lock
sbb
bound
ret
popa
leave
xor
lret
mov
cmp
mov
adc
mov
cmp
mov
mov
xor
dec
dec
iret
adc
stc
xorb
pop
js
mov
dec
mov
xor
mov
dec
jbe
je
stc
cmp
mov
iret
jb
xchg
ret
push
fistpl
sub
inc
mov
loop
movb
fsubl
mov
mov
imul
iret
push
xorb
iret
arpl
mov
sub
mov
fistps
testb
cmpsl
cld
inc
loop
mov
popf
ret
or
into
imul
lock
push
imul
arpl
es
call
jl
ss
mov
sbb
fldt
movsl
push
jns
xlat
gs
flds
xor
sbb
xchg
xchg
imulb
mov
leave
and
mov
pop
add
arpl
cmp
pop
mov
xor
xchg
or
js
mov
sbb
fsubrs
pusha
int
and
xor
lcall
mov
mov
jne
sti
ficoms
mov
and
xchg
dec
clc
xchg
stc
sub
leave
aad
xchg
int
fwait
mov
cmp
mov
adc
pusha
sbb
pop
scas
aas
add
rolb
outsb
int
sub
inc
or
jmp
inc
stos
inc
adc
dec
and
fstpl
arpl
outsb
and
das
jb
dec
test
int
mov
loope
popf
jns
orl
push
add
sub
sbb
adc
rorb
and
fstpl
out
add
or
xor
xor
je
add
cld
repnz
icebp
mulb
es
movsb
cli
dec
cld
xor
and
insl
xor
or
jno
ja
sub
jecxz
sub
cmp
pop
mov
jnp
xchg
push
out
in
xchg
sub
jno
adc
mov
cmp
cmp
inc
stc
push
sbb
js
out
jne
popf
out
push
lret
std
pop
lret
flds
inc
fs
lret
int3
unpcklps
xchg
outsl
notl
or
scas
pop
xchg
imul
sub
ja
pop
sbb
xchg
rcrb
arpl
mov
ret
cmp
insb
fstpl
push
adc
hlt
cs
mov
les
dec
data16
fistl
lds
loopne
scas
jnp
sbb
add
mov
or
or
out
cmp
lea
mov
lods
inc
push
ljmp
test
addr16
lds
hlt
test
scas
push
adc
push
and
movsl
loop
es
jne
lret
paddd
pop
jb
popf
or
loope
popf
xlat
call
xchg
xor
daa
jle
ljmp
faddl
dec
stos
stos
stos
mov
ret
sub
push
mov
orb
inc
and
loop
lret
mov
addl
mov
cmpl
mov
cmp
pop
jo
cmpsl
mov
mov
scas
jo
push
ret
shrb
rorb
adc
dec
ja
in
clc
xchg
mov
insl
lods
mov
jp
mov
in
notrack
xchg
and
fldenv
dec
and
and
test
mov
jg
sub
out
imul
pop
mov
jb
or
shrl
inc
fsubrs
and
cmp
cli
hlt
fstl
jbe,pn
call
test
test
mov
mov
wrmsr
mov
add
test
or
or
dec
pop
push
pop
cmp
mov
push
sarl
int3
and
bound
in
sahf
inc
mov
sti
fsubs
pop
out
les
xchg
pushf
sbb
subl
xor
lcall
pop
dec
bound
clc
lods
std
push
lret
cltd
add
ljmp
dec
addr16
push
inc
std
xor
mov
nop
les
mov
shl
aas
mov
lahf
sub
xor
movsl
cmp
loopne
popa
pushl
mov
jns
adc
movsl
push
fisubl
sbb
jecxz
movsl
sub
push
insl
push
insl
cmp
push
fnsave
adc
sbb
dec
mov
data16
cmc
add
popf
clc
arpl
cmpsb
ja
mov
and
aam
outsb
std
cmp
mov
ljmp
and
jo
enter
sub
jns
jae
add
cmp
testb
cmc
dec
push
add
cmp
daa
stos
pop
and
push
jg
aaa
call
leave
dec
enter
outsl
rcrb
ret
imul
imul
fidivrl
pop
iret
sbbl
out
in
xor
and
repnz
icebp
and
pop
and
mov
mov
arpl
xlat
adc
sbb
pop
mov
iret
pop
xor
dec
sub
pusha
iret
sub
mov
lahf
fcompl
push
scas
subb
and
add
cltd
jb
arpl
lods
push
xor
cmp
sub
dec
lret
mov
jns
mov
mov
and
shlb
dec
dec
push
jnp
call
jmp
sub
push
xchg
and
stos
push
add
aaa
ret
jne
pop
pop
inc
sti
ficompl
inc
xchg
test
mov
inc
or
aaa
cmp
mov
rcll
paddq
lock
add
mov
sub
xor
mov
or
and
mov
pop
dec
jecxz
mov
cld
mov
adc
test
sbb
fmuls
repnz
nop
cmp
sbb
push
mov
test
out
mov
push
pusha
cmp
call
sahf
out
sbb
xchg
adc
out
out
pop
stc
xchg
push
adc
mov
in
ds
mov
or
mov
pop
jne
mov
push
int
icebp
sbb
inc
pop
or
push
mov
adc
sbb
push
stc
mov
push
push
scas
pop
movsb
mov
pushw
pop
ljmp
test
lds
pop
pushf
add
inc
add
pop
add
mov
inc
add
adc
add
sub
add
sub
inc
add
jo
add
add
add
dec
lock
das
scas
popf
lret
nop
loop
add
idivb
pop
test
popa
add
out
sub
xorb
or
loopne
call
adc
ret
inc
xchg
jg
pop
in
push
aas
jl
sbb
jbe
add
jp
les
fsubrl
fildll
cmpsl
push
xor
mov
mov
mov
jb
repz
cmp
jne
testb
or
ret
out
leave
sbb
cli
mov
inc
mov
cld
and
fs
mov
nop
push
mov
popf
xorb
mov
sbb
mov
mov
push
jae
lret
xchg
xchg
les
loop
push
movsb
aam
fldl
or
clc
ja
imul
inc
push
enter
mov
sti
pop
add
and
jle
inc
push
out
adc
xchg
or
cltd
push
ret
pop
adc
mov
adc
sahf
or
or
jne
inc
push
or
add
cmp
jmpw
sbb
lea
icebp
adc
add
ret
addr16
push
mov
mov
pop
fmuls
dec
cmp
daa
cltd
fcmovnu
mov
frstor
xchg
dec
scas
sub
movsl
mov
popa
mov
cld
xchg
push
rclb
adcl
repz
lret
cld
jne
mov
sti
and
in
pop
mov
pop
jmp
in
loope
mov
xchg
aad
loope
sbbl
push
int3
xorl
or
call
lds
sahf
imul
add
jecxz
jo
stc
inc
jmp
lcall
xor
pop
jbe
xor
push
ja
inc
outsl
and
pop
dec
cmp
in
icebp
jbe
mov
add
addl
sbb
xor
mov
jecxz
cmp
push
mov
pop
adc
adc
lret
sub
fisubrs
cmpl
or
sbb
leave
add
sbb
dec
fstp
mov
add
cmpsb
loop,pt
jnp
in
cwtl
movsl
mov
hlt
pop
lret
add
mov
jle
sub
call
lret
pop
pop
cld
jg
notb
or
lods
cmp
and
sub
das
in
dec
ficoml
inc
and
xor
out
mov
inc
xchg
arpl
mov
mov
mov
lods
push
iret
movsb
mov
add
hlt
jno
inc
sbb
jecxz
inc
jle
imul
lods
fwait
pop
push
cmc
sub
movsb
cmp
cli
mov
sbb
dec
inc
adc
in
push
adc
sahf
insl
pusha
mov
dec
mov
cmp
call
xor
mov
std
sbb
inc
pop
loope
test
or
lds
push
lahf
mov
aam
cmp
dec
xor
mov
arpl
out
inc
fdivrl
and
popf
cli
pop
lret
push
push
mov
and
adc
jmp
inc
xchg
push
sbb
pusha
xchg
das
mov
andb
ror
imul
push
cmpsl
cmp
mov
movsl
jnp
mov
push
jae
adc
fisubl
mov
pop
movsb
outsb
sbb
cmp
sarl
shlb
ficomps
inc
sub
popl
mov
sbb
fisubrs
dec
inc
mov
cmp
dec
shlb
pop
sub
xor
jo
addr16
pop
lds
data16
fs
push
push
push
inc
insb
movsl
ret
aam
mov
mov
inc
sbb
add
nop
xchg
in
mov
mov
les
cmp
pop
xchg
push
and
adc
sbb
mov
dec
std
andb
cmp
jnp
sbb
or
cmpsb
insb
mov
add
sub
mov
mov
mov
lret
cmp
popf
cmp
pop
bound
pop
push
mov
outsl
pop
sbb
mov
clc
mov
ret
inc
loope
adc
sbb
jno
enter
dec
mov
or
mov
cmp
popa
push
pop
dec
push
sbb
pop
clc
cmpsl
or
pop
stc
sub
push
or
movsl
imul
push
mov
gs
jo
imulb
outsl
data16
jns
pop
cwtl
dec
imul
stos
add
push
insb
xchg
cmpl
sbbb
sbb
mov
cld
lds
ja
ret
nop
ljmp
stos
dec
push
push
imul
adc
in
aaa
xor
cs
test
xchg
scas
mov
add
adc
cmc
dec
or
mov
push
sahf
or
mov
pop
jge
push
sub
mov
test
mov
and
and
insb
out
stc
push
sub
cmp
push
pop
mov
mov
lahf
adc
test
xor
mov
insl
out
lret
lahf
je
jo
ds
scas
fdivr
xchg
and
pop
xchg
imul
cmpsb
cltd
xchg
sbbb
add
inc
test
ds
cmp
out
fninit
sub
xchg
jnp
adc
in
sbbl
sbb
xor
filds
push
fsubl
cld
call
aas
sub
xchg
test
shll
cs
and
xor
xchg
jns
hlt
dec
push
or
push
dec
fisubrs
mov
repnz
jecxz
jl
xchg
lahf
cmp
add
pop
and
jae
popa
inc
add
pusha
fdivs
push
out
dec
fcmovu
enter
iret
cmp
inc
xchg
push
pop
shl
stos
addb
out
in
push
jecxz
popa
inc
test
jne
inc
mov
sub
iret
pop
cmpsb
sbb
cmc
rcll
mov
lcall
inc
faddp
fwait
jecxz
xchg
popa
sbb
je
scas
inc
inc
mov
cmp
addr16
inc
lods
cmp
cmp
push
xchg
or
es
sarl
sbb
dec
stos
jae,pt
push
sarb
ljmp
in
xchg
adc
inc
in
pop
iret
imul
shlb
jne
shr
fs
test
scas
pusha
shll
ljmp
sub
lods
mov
mov
dec
and
cmp
add
cmp
jg
push
push
negb
add
fs
lock
xor
mov
ja
xchg
cmc
les
arpl
mov
inc
dec
out
fs
adc
or
sahf
fld
addr16
pop
sub
lock
cmc
ljmp
jle
add
mov
enter
adc
lret
cmp
das
cmp
jne
out
jo
call
divl
add
xchg
or
dec
std
mov
jl
jns
std
xchg
repz
hlt
lret
jne
inc
jg
cmp
gs
loop
int
pop
pop
mov
cli
movsb
cld
xchg
mov
nop
inc
sub
mov
xorb
push
or
mov
lret
clc
dec
call
sarl
insl
shrb
aam
mov
pop
push
and
es
jg
mov
dec
jno
push
jnp
jle
push
xor
push
pushf
add
pop
cmpsl
imul
xchg
mov
dec
or
ljmp
daa
js
scas
cmp
fimuls
pusha
dec
or
sarb
add
jae
and
popa
call
mov
jp
or
out
cmpsb
nop
jecxz
imul
mov
mov
sub
out
stc
mov
outsb
testb
mov
inc
aaa
pop
iret
ja
test
xrelease
dec
cmp
fidivrs
jp
mov
scas
nop
dec
xlat
aam
or
lahf
rcrb
mov
jbe
leave
lret
xor
jne
inc
outsb
test
xchg
or
mov
je
inc
or
inc
les
pop
in
sbb
push
inc
pop
loopne
dec
xor
fwait
loopne
fstps
dec
mov
mov
call
dec
outsl
cmpsl
mov
cmc
cli
jae
mov
adc
fstps
dec
or
inc
cs
push
xor
push
fucomi
mov
lods
mov
jl
xor
add
mov
mov
xor
out
das
push
mov
xchg
xchg
push
test
fsubrs
jmp
xor
call
lock
fs
mov
loope
gs
xchg
cltd
xchg
dec
mov
jecxz
push
lret
lahf
mov
xor
lds
push
jae
stos
adc
stc
mov
jmp
pop
pop
inc
mov
xor
push
mov
add
add
cs
loop
add
aas
xor
cmp
push
mov
lcall
or
into
xchg
xchg
outsb
inc
dec
jbe
and
ljmp
jne
inc
push
bound
cmp
and
mov
inc
cli
adc
lret
movsl
xor
jg
ret
leave
push
enter
loopne
mov
ret
lret
outsl
cld
leave
aaa
cwtl
stc
dec
iret
push
pop
insb
or
add
pop
xchg
cmp
cmpsl
mov
rol
inc
sub
outsb
xor
das
fistpll
inc
push
or
sbb
mov
xor
xor
imul
jge
dec
movb
push
push
adc
pop
test
add
pop
adc
lret
lods
and
inc
xor
push
or
push
or
lret
or
jmp
mov
cli
mov
mov
jns
add
xchg
in
dec
loope
stc
pop
mov
mov
jl
xchg
call
pop
jecxz
in
pop
push
call
pop
and
rorb
ss
dec
sti
testb
out
sub
fbld
xchg
xchg
mov
or
mov
fnsave
stos
sub
orl
pop
pop
mov
mov
xchg
or
mov
pushf
hlt
aad
xchg
mov
nop
test
inc
inc
fsubl
outsb
cwtl
daa
test
jmp
jge
cwtl
pusha
aam
mov
cltd
fadd
and
push
adc
imul
fidivl
and
test
hlt
call
adc
testb
jbe
insl
fcmovne
aad
aaa
movsl
sti
mov
dec
aas
adc
add
sub
push
cmp
jno
and
test
pop
add
and
and
adc
fldcw
loop
in
nop
inc
push
lret
cmp
jmp
push
cmp
mov
test
icebp
add
outsl
pop
stos
lods
mov
ljmp
sti
outsl
xlat
leave
pop
jno
xor
jp
mov
loopne
pop
addr16
sahf
mov
arpl
ds
jge
and
imul
int
into
pop
sahf
lret
mov
cmpsl
pop
pushf
or
aam
in
shlb
add
pop
sti
push
xchg
pop
stos
test
rorl
xlat
mov
mov
xor
xchg
cmp
loop
xchg
xor
test
dec
push
lds
test
aad
cld
and
add
lret
xchg
push
push
roll
inc
push
fstpt
mov
sub
sti
inc
jnp
inc
adc
fstpt
mov
jl
inc
stos
xor
lahf
loopne
add
or
daa
or
lock
jae
or
xor
outsb
orps
xchg
push
mov
mov
add
pusha
dec
addb
repnz
cmp
scas
add
mov
outsl
pcmpeqb
stos
push
out
xor
dec
addr16
dec
imul
mov
jle
mov
sti
xor
xchg
pop
orps
mov
pop
sbb
shrl
inc
mov
jecxz
mov
xchg
sbb
xchg
mov
mov
inc
test
push
xchg
and
cwtl
inc
mov
out
jmp
push
or
pop
dec
lret
mov
cmc
inc
scas
mov
sahf
xor
ss
push
mov
mov
into
pop
fwait
and
mov
pop
in
add
notl
pop
jg
into
xchg
jne
in
xchg
out
lods
insb
lds
inc
dec
das
outsb
mov
clc
insl
orl
lret
dec
push
fwait
in
sbb
das
inc
js
cmp
mov
pop
loopne
jo
mov
lock
inc
dec
xchg
clc
nop
mov
sub
mov
push
pop
scas
jg
dec
mov
lcall
add
or
nop
mov
aas
pop
or
jb
mov
push
pop
les
shrl
call
ja
bound
shlb
imul
add
ret
pop
and
notl
sbb
lods
inc
jnp
icebp
in
leave
and
xchg
fdivrs
jl
outsb
and
int3
int3
mov
cmp
xor
push
xchg
fs
xchg
cmp
fidivrl
pushf
cltd
pop
dec
jae
scas
sub
xor
rcl
mov
xchg
cmp
xchg
fildl
mov
cmc
mov
xor
jno
pop
les
cmp
inc
pop
push
rol
in
ficoms
push
add
cmpl
jns
leave
dec
jge
mov
std
and
js
cwtl
sub
cs
cmp
lods
jmp
dec
shll
fwait
adc
test
stos
sub
loopne
xchg
push
cmp
std
dec
fldt
mov
mov
leave
clc
mov
sbb
push
xor
jecxz
jae
sub
mov
loop
xor
fisubl
jb
sti
clc
in
es
inc
and
movsb
push
dec
dec
addr16
std
mov
das
imul
mov
dec
clc
sti
data16
gs
and
mov
test
xorl
insl
sbb
push
mov
xchg
xor
xor
jle
cmpb
daa
outsl
pusha
adc
cltd
dec
pushf
cwtl
jle
mov
insl
stos
xchg
fs
jns
mov
fcoms
pop
repnz
xchg
stos
insl
xchg
int
and
dec
sbb
fistps
xchg
push
pusha
lods
stos
stos
dec
adc
and
cs
mov
adc
dec
daa
repz
nop
inc
icebp
pop
adc
mov
xchg
xor
imull
test
push
cmp
cld
and
mov
push
lret
out
inc
shlb
inc
aaa
or
in
scas
xchg
lahf
vmread
sub
inc
push
dec
or
rcl
mov
sub
or
cmpl
dec
loop
fmulp
xchg
xor
inc
mov
and
mov
lahf
cs
aaa
mov
int
arpl
xchg
jne
push
les
push
xor
sbb
fmull
pop
arpl
lods
or
or
call
or
mov
lods
fcompl
stc
call
inc
shrl
add
mov
test
ds
or
jbe
pop
out
lods
stos
cltd
decb
sub
data16
add
sbb
mov
das
xchg
mov
cltd
push
addr16
mov
cmp
pop
lods
stos
push
gs
and
out
inc
insl
fldenv
and
add
idivl
cs
jl
filds
or
sbb
cld
divl
divb
pop
ffreep
pop
stos
pop
adc
inc
inc
rclw
or
aam
add
pushf
and
mov
mov
aaa
iret
test
aaa
jae,pn
in
mov
cmp
nop
sti
leave
mov
adc
fs
jo
add
jl
push
leave
fcoml
cmp
stos
xchg
cltd
imul
and
adc
das
movsb
add
adc
mov
jmp
xor
popa
fs
mov
and
sbb
sub
inc
pop
inc
inc
mov
int
cs
cli
cmc
out
scas
xchg
xor
in
cmp
and
push
das
leave
sbb
jb
and
push
leave
in
dec
lahf
sbb
or
in
mov
pop
lret
icebp
xchg
jo
sbb
int
inc
mov
lds
push
mov
divl
leave
aad
hlt
clc
pop
mov
mov
adc
loope
test
xor
repnz
mov
pop
out
xlat
scas
cs
dec
cs
scas
and
adc
test
fisubl
push
lds
lea
push
mov
js
sub
mov
mov
lcall
mov
addr16
les
jno
repnz
cmpsb
mov
push
pusha
lcall
adc
and
js
pop
scas
fcoml
mov
sub
adc
mov
sub
fdivl
push
pop
or
sub
seto
repz
sub
ss
repz
add
pop
ljmp
scas
xor
lret
xchg
test
mov
lds
pop
mov
xchg
mov
sbb
je
je
popa
js
mov
aaa
xchg
sbb
clc
or
cmpsl
jl
xchg
adc
xor
rorb
sti
mov
or
lcall
adcl
roll
or
cli
gs
ret
sub
xchg
popa
mov
aad
notb
push
pop
pusha
mov
out
push
addr16
orb
cmp
mov
fildll
add
sbb
mov
jmp
out
aam
jecxz
push
fstpl
imul
pusha
mov
sti
pop
scas
push
add
je
and
pop
xlat
cld
pusha
push
test
std
dec
mov
mov
and
mov
mov
inc
mov
ret
jp
or
adc
cli
adc
repnz
pop
icebp
cmpsw
sarb
jbe
sub
cmpsl
or
aaa
fadds
or
cmp
mov
sarl
es
add
adc
cltd
push
subl
push
mov
test
mov
mov
in
lret
sub
fnstcw
insb
mov
jp
aaa
jecxz
sbb
or
xchg
and
cwtl
lahf
xchg
lret
test
pop
add
add
sbb
test
dec
aad
out
test
mov
cltd
fsubs
or
cltd
mov
adc
pop
arpl
push
mov
push
jbe
sub
push
wrmsr
out
and
xchg
mov
xor
ficoml
xor
test
rcrl
sub
mov
inc
sbb
lcall
addr16
jg
push
pop
xor
xchg
inc
inc
sti
adc
lods
add
mov
mov
ja
cmpsl
fdivs
lea
cmc
push
mov
jno
pop
fisttpl
cmp
pop
add
xchg
rorl
int
inc
out
mov
sahf
pop
aaa
cmp
repz
shr
out
fidivs
mov
push
inc
pop
cmpsb
sbb
repnz
fsubrp
addb
mov
lcall
in
insb
lds
mov
out
sub
xor
repz
dec
es
loopne
and
jo
sub
sub
fldl
dec
inc
fs
pop
xchg
std
ret
sub
dec
or
mov
cld
add
mov
std
insb
or
loop
dec
and
push
fisttpll
xor
and
xor
popf
push
or
and
jmp
jne
popa
daa
sub
push
jo
scas
add
adc
push
or
dec
fucomp
daa
insl
lods
add
mov
andl
pusha
mov
das
xchg
insb
pop
roll
pop
mov
or
jmp
xchg
sub
or
call
enter
cmc
inc
sbb
loopne
xor
xchg
jns
imul
iret
repnz
stos
add
push
lahf
inc
orb
xor
adc
adcb
adc
pushf
cmpsl
adc
int
or
mov
push
adc
push
mov
insl
sub
addr16
imul
cld
test
push
dec
xor
jns
or
decl
cmp
cmpl
js
ret
cwtl
sbb
cltd
cmp
mov
push
adcl
incb
push
test
lret
cli
and
xchg
bound
push
adc
test
lret
cs
bound
or
das
sbb
scas
mov
std
push
jg
lock
cmp
loopew
inc
jp
lods
xor
cs
jecxz
pop
inc
jbe
push
cmp
gs
inc
icebp
add
cmp
imul
rolb
ljmp
sbb
fstps
mov
out
adc
lds
sbb
fmull
andb
push
cmpsl
imul
jmp
push
jb
mov
pop
pop
push
xchg
mov
int
mov
fs
xchg
cmp
imul
sub
xchg
mov
jno
test
mov
mov
inc
mov
outsb
sub
pop
jl
negl
xor
xchg
nop
cmc
or
dec
or
sbb
adc
mov
and
xorb
rcrl
cli
sbbl
icebp
mov
bound
jnp
mov
inc
inc
mov
cmp
or
pop
add
sti
pop
fdivr
daa
cmp
add
adc
inc
push
cld
rcrb
add
mov
mov
rorl
xchg
mov
iret
jl
je
push
pop
test
sbb
dec
roll
jns
pop
and
icebp
xor
cmpsl
popa
mov
cmpsb
cs
cmp
fcmovu
jns
inc
sub
hlt
sbb
pusha
inc
mov
xor
in
lods
sti
mov
and
stc
jge
lods
jg
xchg
inc
sbb
movsb
inc
ret
lret
xchg
push
stos
shrb
hlt
in
xor
loope
daa
data16
or
cmpsl
out
int
je
push
inc
xor
in
jge
push
mov
and
mov
dec
shlb
mov
fsubs
inc
cmp
mov
xor
loopne
inc
arpl
pop
mov
or
ret
and
loop
cld
imul
int3
adc
inc
shlb
nop
fistpl
mov
out
dec
ljmp
fdivrl
mov
cltd
icebp
xlat
xchg
xchg
orl
and
jne
cld
mov
in
les
fisubrl
out
ret
das
xchg
jge
popf
or
dec
decb
mov
xchg
mov
inc
dec
cli
jg
jmp
fdivrs
mov
jbe
and
ds
jmp
mov
cmp
inc
daa
mov
cmp
dec
lret
data16
mov
iret
mov
lods
sbb
jo
jp
out
cs
mov
inc
inc
out
das
ret
push
jno
es
js,pn
rol
sub
mov
xchg
punpckhwd
ret
push
ja
cld
pusha
inc
mov
sti
imul
cli
lods
scas
test
jo
in
push
test
sub
cld
lock
fistps
push
mov
pop
cmp
cmpsl
pusha
add
pushf
sbb
or
adc
imul
das
sahf
ret
xchg
jne
and
or
sub
adc
mov
pusha
out
pop
sar
ljmp
jge
jbe
pop
or
inc
loopne
or
orl
das
pop
ret
xchg
loope
adc
add
fsubrl
cmp
add
ljmp
push
mov
fstpl
addl
inc
dec
fwait
out
or
adc
jmp
out
mov
lcall
and
or
scas
adc
pop
dec
out
cmp
test
dec
jle
dec
xor
daa
aas
je
movsl
sahf
into
and
pop
int
test
pop
lcall
mov
jmp
mov
fbstp
sub
xchg
and
cli
add
lcall
pop
dec
clc
retw
jno
mov
and
repz
or
jnp
mov
sahf
pop
jnp
xor
loop
mov
lea
aad
sub
sub
outsl
jb
negl
mov
lretw
scas
dec
mov
and
sbb
dec
and
neg
jg
jns
aaa
xchg
dec
sub
pop
pop
imul
bt
pop
cmp
inc
cmp
out
sub
mov
icebp
and
adc
mov
dec
fldt
fstp
cmpsb
insl
mov
pop
cltd
xchg
lds
or
pop
in
loopne
jne
mov
sbbl
dec
jge
cld
in
adc
into
out
mov
adc
pop
or
lcall
dec
andb
in
sti
ror
aad
data16
cmpsb
cli
add
inc
mov
xor
and
adc
dec
rcll
xorb
test
xor
pushf
lock
jne
lret
aad
pop
rcrl
mov
or
test
push
jae
push
sub
hlt
sub
movsl
repz
test
cmc
inc
insl
aad
les
xchg
or
adc
xor
cmpsb
popa
add
mov
pop
out
adc
lods
lods
cmpsl
rcll
fwait
or
shl
mov
movsb
pop
mov
test
mov
pop
fmul
sub
push
mov
sub
and
outsl
arpl
cld
and
mov
ret
sub
add
jae
lods
adc
insl
lds
mov
lods
into
fwait
cmp
or
in
push
rorl
cld
xchg
sbb
outsb
fisttpl
ret
lods
pushf
xor
stc
cmp
sub
cmp
xchg
out
filds
add
jge
xchg
and
popf
push
inc
stc
add
jne
xlat
xlat
dec
pusha
hlt
je
or
scas
sbb
sarb
scas
fucomip
dec
sub
cltd
in
popa
in
jecxz
ret
lods
xchg
adc
fisttps
pushf
lret
and
mov
gs
xchg
jg
inc
lea
sub
cmp
rorb
cs
jge
lods
scas
mov
pop
je
pop
shlb
xchg
sub
outsl
rcll
mov
fsubl
ds
jle
cmpsl
mov
mov
call
les
in
cli
mov
jl
xor
and
xlat
mov
out
jle
aas
gs
inc
cmc
sbb
stc
decb
faddl
cld
add
fistpll
xor
lcall
sub
or
aas
fadd
dec
cmp
fdiv
mov
and
cwtl
fsubrs
sbb
cmp
cli
into
push
push
sahf
mov
loopne
jbe
lahf
mov
push
inc
iret
pusha
push
sub
jo
jmp
int
and
pop
aad
dec
dec
stc
add
mov
outsb
and
cli
mov
int
mov
jmp
loopne
cmp
les
out
inc
lds
into
sub
cmc
inc
shlb
icebp
movsb
sbb
sbb
cs
dec
xchg
sbb
mov
cmpsb
xor
xchg
mov
out
mov
xor
addl
jnp
mov
test
notb
push
in
inc
gs
bound
and
jecxz
cmp
adc
and
neg
xor
push
sbb
lcall
xchg
mov
pop
pop
clc
cmp
imul
loop
lods
add
push
insb
rep
test
imul
scas
mov
mov
je
out
aam
test
int
jecxz
xor
cmpsb
xor
sbb
movsb
adc
gs
or
in
and
cwtl
aam
jge,pt
fwait
inc
inc
adc
sbb
shrb
adc
push
out
fidivs
cmp
in
sub
in
xor
rorl
repz
js
mov
addr16
pop
ret
hlt
cmp
xchg
enter
mov
popa
icebp
cmp
out
rclb
sbb
add
xchg
jbe
dec
jp
fwait
std
or
or
and
daa
leave
sub
dec
xchg
mov
mov
and
cmp
jb
ret
idivl
inc
pop
mov
dec
dec
negb
or
jg
ljmp
lods
dec
out
fdivs
mov
inc
cltd
je
cmp
sub
adc
add
test
fs
ljmp
dec
mov
subb
xchg
in
mov
daa
sub
pop
and
dec
jmp
xchg
xchg
shlb
push
arpl
lcall
mov
nop
adcl
and
pop
lds
shrb
add
adc
push
lea
sub
adc
jmp
jnp
and
push
leave
enter
add
in
arpl
fs
inc
dec
push
jno
push
jp
push
out
sti
iret
push
filds
pop
stos
int3
test
push
mov
add
sbb
icebp
inc
cmc
jle
test
aam
bound
push
and
leave
aas
jp
push
rcrl
sbbb
inc
outsb
dec
add
mov
cli
rorb
jmp
mov
inc
sub
fistps
test
add
dec
xor
inc
cmc
sar
inc
adc
add
nop
mov
arpl
mov
popf
nop
insl
psllw
jmp
ror
notl
sub
das
sarl
es
lods
addb
or
mov
arpl
push
out
rorl
incl
incl
mov
movsl
xor
jne
notl
adc
adc
adc
stos
dec
mov
or
icebp
inc
xor
ljmp
cmp
or
stc
and
xchg
aam
xor
sti
cmc
pop
in
xchg
cmp
movsb
push
orl
jmp
jb
shlb
iret
test
pop
xlat
dec
mov
addr16
push
fs
call
pop
dec
adc
std
pop
roll
jae
mov
icebp
clc
and
cld
xor
lcall
test
cli
jb
sti
sbb
addl
xlat
mov
mov
je
inc
mov
cs
lea
push
fidivl
fwait
adc
fimull
in
lret
cmp
in
cltd
shrb
pop
mov
mov
cmp
pop
cwtl
lea
xchg
xchg
mov
jo
call
ds
test
movsb
repnz
pop
popf
or
ljmp
fsubrl
pusha
outsl
xchg
xchg
sub
pop
es
pop
jmp
sti
aad
mov
repz
pusha
push
mov
sbb
mov
dec
pop
pop
pop
or
pop
jae
inc
mov
shrb
jg
mov
add
sbb
rcl
push
dec
daa
cld
xchg
push
lcall
je
imul
and
ret
repz
mov
iret
lea
cmpsl
in
and
add
insb
mov
pop
mov
mov
int3
gs
popf
repz
popf
mov
xchg
out
mov
loopne
sub
lock
adc
adc
adc
adc
mov
les
jbe
outsb
les
xchg
mov
jmp
sbb
divb
push
push
sti
jmp
fisubrs
mov
fldenv
movsb
enter
aad
lock
sbb
mov
sbb
or
dec
xchg
icebp
or
out
movsb
orl
cmpsb
aam
out
push
cmp
fstps
adc
and
add
mov
clc
ss
mov
loopne,pn
orb
sbb
jno
jecxz
add
adc
lods
std
test
das
int3
ret
pop
arpl
sub
push
sar
sub
mov
test
mov
mov
xor
cmp
lcall
dec
adc
rclb
jecxz
jo
or
jp
outsb
add
rcrl
test
out
mov
xorl
pop
ljmp
jbe
pop
mov
pop
mov
cld
push
xchg
adc
mov
inc
mov
mov
and
xor
inc
out
popa
jl
xor
adc
jl
mov
pop
dec
xlat
mov
jae,pn
stc
sarb
jnp
mov
lret
lods
aam
lret
mov
sti
imul
push
mov
arpl
das
jbe
xchg
jb
jmp
fistpl
les
dec
sub
in
int3
lods
test
mov
xchg
out
loop
mov
sub
cmp
or
cwtl
loop
jmp
jno
push
pushf
push
inc
and
xchg
gs
adc
push
adcb
xorl
stc
pop
sub
jne
stos
push
xchg
push
notl
push
dec
and
xstore-rng
cmc
icebp
sbb
stos
call
adc
cltd
mov
pop
ficomps
dec
sub
sbb
mov
fst
mov
add
rcrl
mov
xor
sbb
lahf
out
sbb
mov
dec
nop
adcb
mov
xor
mov
das
pop
pop
hlt
mov
push
or
movsb
xchg
scas
lods
lock
add
cmp
sahf
add
ret
xchg
xlat
ds
mov
outsl
scas
movsl
cs
push
jae
jp
cmpsb
mov
stos
aaa
in
aaa
cmp
mov
xor
ja
cmp
adc
adc
cld
popf
scas
xor
sahf
stos
push
mov
push
pop
pop
inc
dec
add
ss
aam
in
cwtl
or
stos
pop
es
int
xor
or
xchg
daa
inc
aad
pop
adc
or
inc
in
incb
es
push
dec
je
lea
cmp
xchg
ljmp
cld
lret
int3
in
popf
das
int
mov
outsb
sub
and
push
out
and
mov
mov
and
repnz
sbb
inc
xlat
xor
push
in
xor
scas
loopne
pop
in
dec
adc
mov
inc
lret
xchg
es
hlt
dec
mov
sub
xor
mov
pusha
sub
sbb
adc
dec
jbe
aaa
pop
arpl
fs
xchg
sub
scas
lds
rol
fnsave
xchg
scas
jbe
sbb
mov
nop
xor
out
sahf
es
fidivrl
jno
iret
add
or
std
aas
add
ret
pop
jns
mov
fdivr
mov
dec
xchg
sahf
jno
daa
outsb
pop
fists
mov
push
push
cmp
xlat
mov
ljmp
sbb
or
adc
ficoms
movsl
bound
pop
sarl
cmp
jle
loop
cmpsl
dec
pop
mov
adc
jle
jnp
fisttps
int3
lock
dec
ds
pop
pop
das
or
test
sub
jns
popf
out
or
mov
mov
sbb
push
inc
lock
sub
push
gs
dec
jbe
add
xor
inc
xchg
adc
leave
adc
mov
push
push
jecxz
xchg
pop
mov
dec
imul
jmp
xor
sbb
mov
sbb
jbe
add
xchg
push
clc
lcall
mov
in
mov
push
xor
pop
cli
fisttps
popf
dec
movsb
cmp
insb
in
cmpsl
xchg
and
mov
cmp
lret
int
lcall
xchg
mov
int
cltd
xchg
stos
lds
ja
mov
add
xchg
and
mov
sub
sub
xchg
pop
push
push
addr16
popa
mov
pop
sbb
jae
adc
cmp
lahf
mov
jl
add
mov
movsb
scas
mov
or
mov
xchg
add
add
out
aam
orl
hlt
ret
add
cmp
lods
arpl
sbb
xchg
adc
test
out
inc
pop
mov
stc
cwtl
fcoms
pop
push
popa
xchg
aas
les
pop
lea
inc
popa
inc
into
add
jno
or
cmp
sub
mov
or
push
add
sbb
fadds
outsb
xor
data16
inc
mov
fidivrl
out
test
push
cmc
ud0
dec
pusha
repz
dec
test
or
out
fucom
sbb
cltd
cmp
cmp
je
insb
jne,pn
mov
jg
mov
add
cli
and
fidivs
mov
cwtl
xchg
ficoml
push
push
sub
and
into
push
mov
cwtl
int
xor
rorl
ljmp
add
xor
pop
sbb
test
jne
xchg
cmc
add
and
push
add
call
es
cmp
and
inc
pusha
fistpl
or
dec
iret
jne
xchg
popf
cmp
out
xchg
aam
push
enter
ja
sub
adc
add
push
jo
push
xchg
push
sub
jb
xor
mov
das
add
cld
dec
inc
bound
jno
cmc
movsl
and
or
push
bnd
sub
add
lods
call
stos
and
les
pop
cli
rorb
mov
div
ss
lock
mov
mov
call
shrb
dec
test
sbbl
adc
movsl
icebp
jbe
lret
cmp
push
push
or
xor
add
mov
push
shll
lcall
cs
jb
cmp
cld
rorl
or
js
xor
mov
les
xchg
into
cmp
das
cmpb
fstpt
call
and
in
loope
loope
into
or
div
mov
ljmp
xchg
cli
xor
adc
mov
push
lret
in
add
repz
xor
imul
and
out
insl
in
inc
jp
add
cwtl
fidivrs
sarb
dec
das
loope
pop
test
push
mov
loope
add
and
faddl
in
and
scas
shrl
stos
data16
in
aaa
cmp
mov
dec
data16
movsb
js
sti
mov
jne
cli
pop
ret
push
pop
dec
and
dec
test
push
outsl
in
cmp
push
das
mov
add
movsb
xchg
add
push
cli
les
les
stc
cmc
adc
mov
xchg
sbb
ffree
xor
dec
mov
in
std
popf
jecxz
mov
and
push
iret
sub
push
pop
xchg
sub
push
xchg
mov
xchg
jmp
cmp
lods
mov
push
sbb
mov
sub
or
mov
sahf
addr16
inc
cmp
inc
mov
push
test
aaa
or
mov
xor
xchg
dec
loopne
mov
mov
sbb
test
int
int3
push
aaa
sbb
fcoml
pusha
cmp
adc
jbe
std
jns
lock
cmp
movsl
insl
sbb
mov
aad
and
inc
mov
mov
stos
pushf
je
dec
in
jecxz
push
or
adc
pushf
imul
ss
mov
adc
outsl
dec
dec
jns
jnp
dec
xchg
fsub
xor
inc
insl
pop
popl
out
adc
push
pusha
fstl
out
cmp
push
jns
inc
or
pop
popf
cmp
mov
cmp
daa
pop
jp
dec
lret
xchg
in
gs
pop
imul
dec
ljmp
ret
or
imul
clc
push
or
cmpb
popa
adc
dec
scas
mov
mov
add
sbb
pop
shl
cmp
xchg
mov
cltd
pop
je
aaa
jb
popf
sub
in
sbb
mov
inc
mov
popl
cmp
or
stos
repnz
xchg
mov
es
gs
ss
adc
inc
push
mov
push
xchg
addr16
test
lods
mov
inc
and
mov
dec
insl
mov
js
shlb
je
pop
inc
push
call
fnstenv
call
leave
arpl
push
mov
aam
int
fs
divb
test
xchg
sbb
push
lea
cmp
cmc
dec
xchg
or
adc
jecxz
pop
neg
lock
or
fstpt
add
or
sahf
stos
pop
add
push
adc
outsl
xor
dec
dec
test
cmp
adc
in
mov
out
lods
rorb
xchg
pushf
scas
insl
daa
mov
xorb
bound
pop
popf
or
jno
sub
mov
scas
dec
gs
cmp
xchg
aad
idivl
sbb
aas
push
xchg
mov
or
aaa
ret
mov
or
push
push
jae
xchg
mov
push
and
mov
subl
xchg
aam
xchg
in
sar
aad
push
or
xor
fmull
test
pop
nop
push
iret
push
push
sbb
cld
inc
idivb
fcomps
or
mov
adc
dec
add
inc
rorb
out
addr16
cmc
or
daa
stc
int
xchg
mov
dec
addl
dec
cmp
loopne
or
ret
outsl
and
movsb
xchg
int3
jge
cmp
inc
xchg
insl
cmp
mov
inc
pop
shll
and
out
les
or
sarl
addr16
nop
mov
lock
or
fiaddl
mov
pop
add
insl
into
adc
scas
lds
mov
dec
js
shll
mov
jo
popf
cmp
mov
dec
dec
mov
in
test
cmp
mov
icebp
xchg
inc
push
loopne
add
mov
popa
cmc
ja
dec
std
mov
fst
out
xchg
mov
jle
add
push
loopne
dec
sub
subb
inc
adc
and
xorb
sti
cmp
repz
xchg
andl
pop
fwait
les
std
dec
std
or
cwtl
adc
sbb
mov
or
mov
insb
cwtl
out
popf
sub
mov
enter
cmp
sarl
dec
fidivs
mov
mov
jp
cmp
sub
mov
cmc
adc
push
dec
loope
pop
xchg
fidivl
int
call
dec
mov
daa
iret
outsl
adc
div
test
divl
xor
lods
sbb
daa
mov
add
cltd
sub
scas
loope
aaa
mov
cmc
into
pmaddwd
inc
or
inc
cmovle
mov
xchg
test
add
mov
loopne
dec
test
jb
arpl
jle
shlb
sbb
jg
pop
andb
jecxz
xor
repnz
cwtl
mov
mov
aad
movsl
dec
adc
adc
insb
xchg
jecxz
cld
add
outsb
sub
jns
imul
in
sub
adc
pop
popf
ret
xor
jno
hlt
shll
fwait
inc
mov
cld
xchg
pop
cmp
xchg
sub
orb
aas
push
and
push
int3
insl
xchg
cmp
xor
mov
jb
mov
in
rcrl
nop
es
xchg
cli
pop
data16
fstpl
dec
inc
xlat
frstors
daa
adc
outsl
repnz
push
in
and
add
rcll
fmuls
lcall
lock
fwait
imul
push
stos
dec
or
loop
xchg
pop
mov
daa
rcrl
add
lcall
mov
xorl
mov
push
repz
in
mov
sbb
dec
mov
test
out
rclb
outsl
cmpb
mov
inc
push
mov
and
jmp
inc
sub
mull
jmp
pop
push
mov
xor
fildl
mov
outsb
loop
scas
jb
sbb
ja
mov
and
sub
jge
and
and
loope
dec
mov
dec
nop
bound
jge
pop
pop
shlb
xor
aaa
leave
fmull
das
imul
aaa
cmovbe
lahf
das
add
outsl
pusha
inc
push
mov
jl
data16
inc
mov
dec
sbb
mov
jo
repnz
aas
or
jns
movsl
jo
or
mov
push
aas
nop
dec
mov
push
push
stos
add
call
int
js
call
push
xchg
jb
pop
lds
arpl
cmp
push
mov
jg
pop
shlb
sbb
lahf
loop
and
out
and
es
lcall
rcll
fisubrs
pop
gs
mov
jmp
xor
mov
rolb
xchg
cmp
xchg
or
ja
and
inc
in
fiaddl
cmpl
adc
mov
je
rolb
cli
mov
lcall
jecxz
pop
das
mov
movsl
cmc
sbb
push
dec
imul
xchg
mov
into
leave
jno
xchg
popf
test
add
pushf
mov
cmp
mov
ds
or
loopne
or
gs
dec
jno
mov
and
test
dec
faddl
lods
mov
movsl
je
test
mov
test
mov
orb
xchg
cmc
jbe
test
imul
dec
pop
ja
pop
call
lret
pop
xchg
scas
bound
dec
insl
pop
push
pop
scas
lock
lods
cld
fwait
adc
or
dec
adc
lret
ja
fmul
outsb
and
xor
lock
jno
xor
aas
sti
mov
or
pop
fst
jecxz
adc
pushf
dec
das
push
mov
dec
adc
dec
push
add
addr16
f2xm1
jl
sub
aam
enter
cs
sbb
stc
add
or
je
and
push
mov
mov
movsb
shll
sub
arpl
and
or
sti
xchg
jns
mov
sub
stc
jb
add
adc
dec
int3
cs
adc
or
xchg
mov
decl
repnz
lds
inc
rcr
push
xor
mov
pop
fists
mov
cli
popf
test
in
mov
or
inc
lds
addr16
mov
xchg
xor
popa
jb
and
shr
ljmp
lret
aam
loope
mov
scas
sbb
shrb
and
mov
subl
push
push
or
gs
jo
mov
into
lods
add
add
sbb
mov
dec
xchg
adc
pop
mov
icebp
dec
pop
pop
mov
fdivrl
lods
jmp
mov
inc
adc
pushf
gs
and
or
adc
add
insl
jo
fnstenv
sbb
cmpsb
rolb
dec
in
add
mov
fisubs
sub
mov
in
aaa
insl
out
push
cld
aam
push
ret
xor
outsb
mov
scas
ret
mov
mov
sbb
out
fwait
sbb
push
jmp
pop
ss
push
xor
dec
jo
xchg
and
inc
mov
enter
aaa
fs
mov
adc
aad
sbb
push
push
add
scas
pushf
and
bound
adc
xlat
imul
and
push
inc
jae
mov
out
rcrl
hlt
fwait
mov
jns
push
inc
pushf
das
sbb
and
push
pop
xchg
inc
mov
sub
loopne
cs
sti
shlb
push
mov
std
mov
ja
aad
pop
decl
mov
notb
or
cmp
jecxz
cltd
aam
mov
insl
dec
mov
loop
add
fs
aaa
cs
loopne
inc
rorl
mov
imul
mov
adc
adc
pop
add
out
pop
out
add
mov
aam
sub
call
jns
in
cmpsb
add
pushf
aas
xor
mov
in
shr
add
pop
add
sbb
mov
pop
loopne
jae
mov
mov
push
xchg
loop
mov
fisttpll
in
mov
sti
mov
popf
pop
fcomps
cmpsl
sahf
ds
aam
mov
nop
pop
or
pop
mov
mov
insb
xchg
dec
call
imul
das
pop
jno
mov
adc
in
jmp
ja
lahf
movsb
out
inc
xchg
pop
push
add
add
and
insb
out
push
inc
popf
mov
mov
and
popa
call
imul
jg
xor
rorb
mov
movsl
sbb
fisttpll
out
insl
call
leave
mov
or
fcomps
push
out
leave
push
fisttpll
pop
mov
xor
and
inc
mov
fidivrs
jmp
shlb
push
inc
xchg
inc
pop
or
mov
lds
cmp
sub
cltd
pop
add
and
inc
mov
and
int3
adc
mov
outsb
mov
out
cltd
jg
pop
jnp,pn
or
pop
mov
fldenv
xchg
sbb
push
mov
mov
es
mov
std
ror
popa
mov
dec
addb
inc
mov
nop
dec
jle
cmp
jne
and
and
cli
ds
fidivrs
sub
dec
lahf
add
movsb
mov
lcall
xchg
sbb
in
gs
dec
jle
pop
jnp
lods
xor
jp
inc
inc
insl
sbb
mov
pop
ljmp
lahf
rorb
inc
sti
in
es
loopne
divl
jno
ret
insl
jge
dec
xor
cmp
pusha
addr16
push
fldt
mov
mov
aas
es
int3
sub
jge
fwait
pop
sbb
outsb
addr16
aad
out
jno
into
jb,pt
divb
sti
xchg
out
add
jp
and
mov
stos
js
or
aas
in
sbb
les
add
add
add
ss
push
jbe
leave
fidivrl
scas
xorb
xchg
ret
mov
fldl
dec
ffree
mov
mov
pushw
push
test
data16
add
jbe
fisttpl
mov
and
popl
cld
sub
test
inc
lock
mov
pusha
roll
mov
fstpl
and
ljmp
pop
sub
jmp
pop
dec
daa
fildll
inc
mov
movsl
mov
xchg
ljmp
ret
xchg
mov
push
das
inc
and
clc
not
aaa
clc
sub
outsl
ss
dec
loop
roll
push
push
call
jne
cmpsl
cmp
pop
out
lret
popa
push
ds
daa
add
xchg
mov
es
jbe
push
cltd
pop
stos
shl
adc
loop
or
or
or
nop
jle
test
dec
xchg
stos
loopne
xchg
in
jo
mov
mov
sarl
jmp
pop
sti
inc
pop
or
pop
les
test
pop
mov
fsubrp
push
dec
std
mov
sub
or
loopne
and
adc
pop
fdivr
test
xor
flds
jb
loopne
adc
mov
fcmovne
jge
orb
test
inc
or
push
fistps
bound
mov
fwait
dec
test
and
mov
lcall
jp
and
add
shrl
mov
loop
fcoml
adc
mov
pop
inc
jno
fcomps
hlt
pushl
fucom
push
push
xchg
ja
mov
stos
icebp
mov
cmp
cmp
lcall
int
jb
pop
mov
int
add
inc
out
arpl
lcall
loope
add
fcmovne
scas
js
xchg
cltd
mov
adc
cmp
pop
mov
mov
xchg
adc
adc
sub
sub
mov
mov
std
rorb
js
sub
and
sarl
dec
push
loopne
dec
pop
rcl
into
mov
pop
mov
pusha
in
ss
cmp
jne
and
cmp
daa
jb
mov
add
jae
cmp
or
aad
add
cli
add
fadd
out
das
sub
test
ljmp
orb
cmc
dec
lret
in
jle
add
int
cmp
jnp
in
or
es
stc
mov
es
fs
movsb
xor
scas
sub
into
fstp
ja
xor
push
mov
xor
mov
push
loopne
scas
dec
sub
and
insl
cmc
sub
test
jns
les
mov
sbb
add
pop
cmp
xchg
cli
push
cwtl
ss
pop
push
cld
out
mov
mov
adc
aas
sub
or
jle
xchg
clc
jg
mov
sub
out
pop
popa
cs
int3
in
or
xchg
fildll
inc
inc
nop
clc
idivb
fimull
dec
pop
or
aaa
xchg
mov
xchg
pop
popf
jp
ds
in
cmpsl
cmc
repnz
sbb
arpl
stos
or
mulb
or
mov
test
lock
pop
lea
push
mov
inc
and
mov
movsb
or
fwait
addl
fbstp
pop
jno
inc
pop
dec
xchg
cmp
dec
push
or
mov
repz
lods
sbb
xchg
mov
filds
out
jno
movsl
jl
rol
ret
mov
mov
push
pop
popa
inc
in
les
or
adc
out
add
loope
xchg
xor
sub
test
cmp
or
or
out
and
xlat
sbb
mov
int
cmpsl
cld
cmpsl
jno
pop
pusha
adc
jne
rorl
loop
scas
mov
sbb
fiadds
negl
insb
ja
cld
int
sbb
testb
inc
sahf
lcall
and
jns
cli
popf
sbb
repnz
and
data16
test
sbb
addr16
or
inc
fildll
push
in
xchg
sub
outsb
mov
and
dec
jg
out
repnz
jmp
xchg
in
fstl
mov
jl
mov
lret
fildl
cmp
in
lahf
lahf
jns
in
mov
or
int
js
cmc
lcall
jmp
mov
mov
adc
or
aaa
inc
mov
addr16
sahf
xchg
push
xchg
or
lods
shrl
add
adc
inc
jb
jp
cmp
test
sbbl
xchg
cmpsb
cmp
test
in
imulb
test
adc
out
jns
rclb
add
add
addr16
arpl
cmp
mov
jmp
test
ja
std
int
pop
in
mov
xor
mov
jns
imul
pop
jp
mov
add
xor
jnp
xor
popa
sub
lds
imul
cwtl
lock
xor
outsl
mov
ljmp
sub
mov
call
mov
xor
or
mov
dec
pusha
adc
dec
push
nop
stos
jns
in
sub
xorb
inc
xor
ds
test
dec
lods
fimuls
cli
mov
clc
out
push
mov
cmp
pop
daa
xchg
sbb
into
xchg
cmp
into
adc
sub
push
xchg
daa
scas
ljmp
or
pop
push
add
fwait
jmp
daa
dec
in
inc
test
es
repnz
mov
mov
imul
loope
xor
lods
imul
mov
add
ficoms
cmp
es
testl
outsb
js
pop
ficoms
arpl
insb
lock
in
push
cmp
divps
test
cmp
loope
lahf
into
out
aam
push
insl
mov
ja
fistpl
mov
xor
pop
mov
push
fldenv
and
leave
cmc
iret
lock
lahf
xchg
mull
sub
jns
js
jge
cmpsb
jo
das
outsb
pop
outsl
orb
int3
leave
in
repnz
jge
stos
mov
mov
imulb
xchg
add
mov
scas
cmpsb
push
adcb
cmpsb
loope
sbb
or
out
stc
xor
inc
mov
je
pusha
or
test
je
jne
xchg
adc
test
jns
sahf
mov
je
les
inc
jbe
rcll
pop
mov
lret
shrb
sbb
or
xorl
mov
mov
aaa
fbstp
ds
xchg
subl
mov
jecxz
mov
cmc
cmp
out
ret
cli
add
scas
fsubrl
out
and
inc
mov
mov
xchg
arpl
shl
in
adc
dec
inc
push
iret
testl
xor
popf
into
popf
push
imul
test
pop
pop
imul
add
or
xchg
orb
mov
xchg
xor
mov
dec
sti
sub
xchg
in
inc
and
fwait
sub
mov
lret
adcl
pop
pop
xchg
lea
or
addb
cmpsb
movsl
test
fildl
xchg
ja
xlat
mov
sub
mov
adc
and
mov
ss
inc
in
into
cltd
gs
adc
dec
sub
frstor
pop
jo
xchg
sbb
jo
mov
nop
push
mov
and
js
aaa
xchg
loop
in
lret
cli
xchg
loope
inc
add
push
in
and
pop
pop
lea
mov
das
xchg
lock
add
or
jbe
popa
mov
ss
imulb
jbe
fcomps
mov
xor
scas
sbb
fbld
pop
mov
movsb
stos
pop
cmpsl
sbb
lods
push
dec
sti
aam
negb
mov
push
sbb
jg
test
xchg
aam
sub
and
outsb
call
push
movsl
out
test
pop
loope
lahf
leave
fdivr
lods
add
xchg
pushf
cli
daa
xchg
jecxz
lock
aam
pop
jmp
xor
aaa
pop
in
or
adc
and
ss
or
rorb
lock
pop
aaa
push
and
xchg
xlat
sarl
xor
out
push
adc
cs
dec
gs
or
xchg
inc
pop
jne
sub
leave
rorl
test
mov
testl
mov
jg
lods
loop
stos
shll
pop
push
iret
rcr
lret
push
lea
cmc
ja
rclb
data16
xchg
pop
add
ret
add
std
add
aad
out
push
stos
mul
nop
mov
xchg
cmp
cmp
ja
adc
mov
je
add
aas
jle
push
das
cmp
push
das
loop
nop
push
and
or
inc
stos
jo
pop
repz
loop,pn
shlb
int
repz
es
mov
hlt
mov
int3
cmpsb
pop
imul
cmpsl
add
or
jl
imul
mov
mov
test
sbb
and
mov
out
bound
mov
push
faddp
testl
or
in
lea
add
jo
or
ljmp
pop
add
lods
sbb
dec
adc
ret
mov
pop
jle
cmp
scas
mov
pushf
fistl
pop
out
std
fstpt
ja
lret
pop
pop
xor
mov
inc
dec
rclb
mov
mov
sarl
push
jecxz
inc
cwtl
in
xor
inc
in
inc
rorb
outsb
lcall
sub
imul
mov
adc
sti
ror
shrb
jecxz
fsts
add
pop
je
jmp
ret
leave
int
lahf
sar
xor
in
loope
pop
lods
popf
test
icebp
xchg
pop
inc
dec
loopne
mov
mov
popf
outsl
and
mov
lcall
push
and
insb
sub
mov
sub
fdivs
adc
ret
jmp
lods
iret
push
mov
icebp
and
test
jle
jae
loope
scas
mov
rolb
jo
gs
out
insl
enter
and
fwait
jmp
rcll
pop
add
aaa
mov
in
push
mov
push
imul
fisttpll
mov
jmp
ret
and
jl
add
push
mov
sub
movsb
jns
push
and
std
loopne
cmpsl
fsts
dec
pop
outsl
cltd
pop
shrb
cmp
std
mov
movb
adc
iret
cmp
insl
mov
xor
test
cwtl
pop
repnz
inc
sbb
pusha
ljmp
sarb
pop
pop
sbb
jmp
mov
vmread
imulb
cmp
shrb
les
and
rcll
std
cmpsb
inc
out
jnp
jno
mov
hlt
popa
mov
mov
pop
cld
jno
movsl
repz
cmpsl
cli
or
scas
xchg
xchg
jmp
pop
popa
arpl
adc
fistpll
mov
inc
or
xor
xor
sbb
cmpsl
aad
pushf
jp
jno
jnp
das
mov
test
jne
mov
xchg
jle
call
cmp
bound
cwtl
cmp
ror
xlat
add
xchg
mov
loop
push
jbe
mov
add
and
inc
adc
std
mov
cmp
in
jge
add
or
frstor
jo
pusha
pop
imul
mov
add
hlt
rcr
shrl
js
jle
not
inc
into
gs
xchg
mov
push
fwait
adc
iret
fstl
jle
sub
inc
push
dec
fcmovnbe
add
iret
rolb
jmp
lret
cmp
dec
jnp
xor
arpl
push
inc
cltd
jno
lret
jae
call
sahf
cmp
fcomps
inc
cmpsb
call
mov
aaa
cmp
loop
arpl
sbb
jle
add
jecxz
xchg
xor
add
xor
mov
sarb
std
pop
pop
cmp
hlt
pop
inc
mov
into
push
ja
nop
pop
and
mov
lret
je
xchg
sub
cmc
mov
sbb
cmp
loop
fs
mov
cmp
ret
push
icebp
sbbl
pop
movsb
imul
mov
mov
mov
jno
inc
sub
fdivs
xor
pop
jbe
and
pop
int3
cmpsb
sub
inc
sti
mov
arpl
orl
or
jnp
or
les
xchg
or
test
int
jae
adc
mov
mov
add
pop
ja
xchg
daa
sub
cmpl
pop
dec
das
mov
dec
dec
js
fstl
insl
loop
jne
dec
mov
fnstcw
push
inc
enter
clc
arpl
xchg
enter
outsb
subl
insl
sub
push
xor
mov
ja
jns
test
add
gs
mov
xor
pop
inc
fidivrl
fwait
mov
mov
inc
fisubrs
in
dec
jns
sbb
repnz
pop
shll
mov
das
mov
cmp
sub
jns
rcrb
mov
hlt
imul
push
mov
or
into
popa
ret
fwait
outsl
and
cmp
ja
mov
sar
out
add
pop
mov
push
sub
aam
out
bound
mov
movsl
cwtl
into
out
call
add
bound
xor
vmread
and
pop
outsb
inc
mov
dec
cmp
lods
mov
cmpb
add
sub
adc
test
pop
pop
mov
mov
mov
mov
movsb
xchg
mov
scas
sbbb
cmp
sbb
xor
xchg
sub
adc
dec
pusha
mov
sbb
hlt
inc
pop
pop
cmp
xchg
and
out
stos
mov
sbb
aas
dec
out
dec
mov
shll
mov
das
in
lcall
mov
sbb
add
dec
imul
add
iret
add
ja
mov
popa
stos
mov
cmp
das
xchg
sub
and
sarb
iret
bound
or
fisttpl
adc
jb
sahf
cli
test
xchg
mov
clc
mov
jg
inc
dec
icebp
hlt
add
popa
movups
lea
mov
xchg
or
xchg
adc
int3
mov
push
stos
inc
jbe
je
js
xchg
pop
sahf
or
sbb
xchg
pop
cmp
push
stos
ror
xchg
frstor
ja
ja
cmp
loope
lods
nop
cmp
icebp
xor
sbb
mov
or
inc
cltd
stc
ljmp
js
xchg
jl
sub
test
jle
xchg
push
add
loopne
ljmp
mov
jmp
imul
xchg
cmpsb
andl
fistps
sbb
stos
les
add
stos
addb
inc
mov
dec
insl
loopne
adc
cmp
xchg
xor
es
push
loop
jns
xor
sbb
pop
jns
or
add
andl
cltd
adc
dec
jbe
in
repnz
lock
xor
push
fstps
imul
data16
jecxz
jg
dec
out
cmp
in
aaa
pop
add
cmp
imul
mov
mov
cmp
rclb
dec
adc
mov
test
adc
adc
cmpsl
pop
jns
test
andb
sub
cmp
xor
sub
test
inc
mov
mov
jo
out
or
in
mov
rcl
sbb
xchg
cld
dec
es
cld
mov
in
loope
aas
adc
rorl
mov
outsl
shll
ja
add
int3
pop
sub
and
rcr
mov
sub
cwtl
cmp
or
aad
jge
nop
aaa
mov
mov
and
push
js
test
out
xchg
in
adc
jnp
xor
mov
xor
push
sub
int3
jg
mov
xchg
fldt
inc
dec
sub
notb
mov
fwait
jno
jns,pn
cmp
xor
loopne
aad
sub
cmp
cltd
outsb
lea
xor
adc
cmc
test
push
int3
ffreep
jns
sbb
lds
jae
imul
fimuls
jo
cmp
push
mov
pop
mov
push
cld
insl
pop
add
insl
sub
ret
in
aam
frstor
dec
dec
cmp
jp
loope
adc
mov
adc
pop
ss
mov
test
xor
pop
xor
daa
ja
out
rcl
mov
popf
pop
arpl
pop
fsubl
cmpsb
fstpl
mov
icebp
jge
fs
mov
sbb
mov
loopne
pushf
lods
jg
sub
mov
jb
pop
pop
xor
popf
cmpsb
bound
mov
push
xchg
scas
adc
rorb
cli
push
inc
or
push
pushf
dec
mov
mov
mov
in
data16
pop
mov
int3
popa
or
mov
cmp
ret
cmp
out
dec
add
jns
mov
push
les
xchg
ljmp
mov
adc
stc
rcr
xchg
adc
and
ret
mov
das
pop
adc
cmpb
push
gs
add
mov
mov
inc
insl
sbbl
test
add
inc
in
jle
insb
jl
icebp
cmpsb
sub
leave
xor
or
dec
arpl
popa
or
inc
aaa
dec
add
or
inc
dec
fisubrs
lret
fcoml
cli
and
pop
xchg
incl
arpl
mov
orl
rcll
and
in
jo
aad
pusha
dec
aam
sti
sub
add
inc
sbb
popl
pop
jno
pop
jle
fsubs
hlt
and
mov
mov
xor
mov
scas
pusha
jnp
bound
repz
xor
outsb
ljmp
aad
or
and
push
xchg
repnz
je
daa
pushf
mul
daa
shll
fists
ljmp
cli
jmp
test
xor
mov
jle
scas
dec
std
pop
divb
adc
jbe,pn
fdivp
stos
add
jo
arpl
mov
pop
add
mov
or
push
out
push
mov
jnp
lcall
stc
mov
inc
cmc
jae
mov
aam
roll
popf
mov
adc
pop
push
jae
mov
sub
inc
pop
stos
loopne
or
sti
push
inc
dec
push
loope
cld
call
daa
pop
lock
push
insb
mov
xchg
imul
sbb
iret
add
in
in
mov
cli
push
mov
faddl
mov
add
cs
and
movsb
or
out
mov
fs
addr16
push
mov
aaa
popf
lret
and
out
addps
icebp
pop
and
lret
dec
adc
mov
cld
push
sarl
push
js
jle
push
sub
movsl
xor
add
push
in
pop
insb
mov
int3
sahf
div
push
mov
xlat
movsl
mov
imul
push
and
dec
ret
dec
aam
bound
or
in
roll
lds
sarl
push
std
dec
fisubrl
enter
cli
fstl
mov
cs
xchg
xchg
movsl
aam
pop
ljmp
mov
sub
mov
dec
rcr
decb
sub
inc
mull
in
pop
pop
je
inc
loopne
dec
inc
sbb
push
sub
in
int3
mov
xor
dec
lock
mov
out
xor
mov
pop
inc
test
mov
dec
add
inc
popa
adc
jmp
jnp
call
pop
push
add
and
repz
fnstcw
imul
sub
es
inc
adc
pop
fldt
jmp
nop
jne
das
mov
fs
in
fcom
sti
fcompl
mov
pop
or
in
adc
add
in
fisttpll
add
push
sahf
inc
in
nop
inc
xor
pop
repnz
add
iret
jo
cmpsb
xor
les
arpl
fdiv
scas
mov
jmp
repnz
and
mov
ljmp
inc
ja
std
ss
jge
cltd
insl
cs
cld
out
mov
mov
xlat
arpl
lea
xchg
stos
fbstp
lcall
inc
ss
cltd
xchg
mov
setbe
ffree
aad
mov
fists
jge
inc
das
fdivl
mov
in
stos
clc
push
aas
dec
pop
jne
pop
add
jno
outsl
dec
adc
pop
lret
or
aad
enter
lret
push
cmp
add
cmp
fsubrp
in
add
icebp
retw
aas
or
sbb
je
sub
xor
add
sarb
mov
inc
daa
mov
mov
xchg
push
lret
xchg
cltd
pop
scas
push
lret
pop
in
sbb
iret
pop
aaa
lods
bound
dec
stos
adc
adc
popf
loop
sbb
mov
add
ljmp
stos
dec
xchg
push
or
push
int
sbb
lahf
and
xor
repz
pop
mov
mov
xchg
rclb
mov
xchg
les
mov
leave
movsb
and
jo
popa
outsb
push
out
inc
pop
fidivrl
and
lock
sarl
pop
or
and
push
ss
sub
cmc
sbb
icebp
sbb
icebp
jge
dec
ja
mov
jl
or
and
add
xor
dec
and
test
in
les
orl
iret
jb
push
sub
jns
cmpsl
mov
mov
jnp
jno
adc
mov
and
lcall
inc
cmpsl
lock
shll
lods
inc
fistps
push
int
lahf
mov
cs
jae
mov
insl
sbb
movsb
enter
negb
pop
in
ret
shrb
loopne
add
stos
adc
clc
sub
and
dec
xor
dec
mov
mov
das
sbb
mov
subl
mov
sub
xchg
ret
add
jo
xor
dec
into
sbb
mull
dec
lret
jbe,pt
mov
sub
jbe
adc
push
and
mov
clc
fst
pop
dec
cmp
xor
popf
jg
nop
cld
repnz
mov
mov
adcl
sbb
fcompl
inc
movswl
call
or
es
add
sbb
fisubrs
push
xor
xchg
in
mov
test
dec
std
cmp
fiaddl
ja
mov
in
ljmp
cwtl
fidivl
cmp
or
stc
adc
jnp
add
mov
les
fs
rcll
addb
ffree
js
jae
jecxz
lret
scas
out
push
sarl
out
jno
les
andnps
pop
or
xchg
add
les
push
cmp
adc
lds
bnd
lret
insb
sbb
mov
cs
movsb
lock
je
pushf
daa
pop
arpl
jno
mov
sbb
sbb
lods
xor
sahf
xor
out
push
xchg
adc
xlat
lgs
fcomp
xchg
int3
enter
push
adc
addl
fsubs
jcxz
hlt
test
cli
pop
bound
outsl
jmp
cmc
mov
mov
js
fs
rcll
sarl
sub
hlt
pop
adc
push
cmp
pop
std
inc
shrb
dec
push
push
ret
mov
aaa
shll
ret
in
add
cmp
dec
fbstp
lods
mov
mov
scas
fld
fidivrl
fldt
fsubrs
ret
shll
xor
enter
xchg
pop
push
xlat
mov
int3
insl
add
sub
jns
mov
inc
jge
das
stos
or
dec
add
and
fidivs
fucomi
pusha
push
xor
mov
pushf
add
bound
aam
and
cmc
outsb
rol
cmpl
scas
repnz
pop
das
test
push
insl
jle
sub
add
fdivs
push
mov
ljmp
push
jo
mov
push
ja
push
push
lock
or
scas
cmp
xor
add
mov
insl
fidivs
push
xlat
dec
repnz
pushf
js
popf
iret
mov
insl
aaa
adc
inc
jb
or
xchg
lret
scas
xchg
or
rcll
pop
pop
xchg
imul
inc
mov
add
sub
popa
dec
or
push
xchg
jle
rolb
iret
in
adc
lahf
in
lds
push
pushl
push
sbb
call
mov
push
inc
fstps
adc
add
ror
push
out
scas
int
leave
dec
insb
lods
iret
out
and
add
dec
xor
pop
subl
mov
in
and
imul
cmp
rolb
pop
or
cmpsl
cmp
clc
fldcw
mov
adc
dec
xor
js
cwtl
decl
ret
mov
fadds
fldt
inc
ret
pop
add
int3
or
pop
or
inc
mov
inc
mov
scas
idivl
or
fwait
xchg
push
add
loope
dec
mov
push
scas
push
insl
xor
insl
aam
dec
and
in
sbb
inc
fiadds
cmp
pop
loopne
mov
dec
jo
add
add
fstpt
mov
dec
sub
cmp
jge
bts
lods
dec
fwait
decb
mov
fdivrl
mov
fisubrs
or
mov
adc
jno
in
xor
mov
mov
mov
adc
mov
movsb
xchg
mov
out
xchg
clc
dec
add
scas
fadds
cmc
out
xchg
jnp
sub
inc
fldenv
pop
mov
icebp
pop
lret
ret
push
mov
mov
mov
popf
call
jns
cmp
and
xor
aas
test
data16
shlb
gs
fsubrp
xchg
jne
dec
inc
xchg
inc
push
roll
in
xor
or
mov
rorl
fimull
cmp
adc
pop
lock
enter
xorb
mov
lds
push
mov
popa
inc
movsl
xor
cmp
filds
push
out
mov
rolb
or
mov
xchg
int3
or
stos
mov
and
ret
bound
dec
sub
inc
scas
adc
dec
xchg
xchg
loop
ror
add
adc
inc
dec
jl
addb
lcall
add
mov
test
mov
xlat
pop
stos
mov
rol
into
enter
lret
sub
clc
stc
popa
test
inc
icebp
ret
inc
int
cmp
aaa
lock
mov
loope
inc
add
leave
adc
cmc
mov
stc
xor
cmp
and
and
jmp
sub
inc
mov
adc
mov
xchg
mov
jae
xchg
cmp
mov
xor
aad
jp
mov
nop
cmc
sbb
iret
rsqrtps
je
mov
dec
mov
xchg
sbb
push
sub
and
push
add
enter
xchg
ret
repz
add
push
dec
sub
or
cmp
sub
push
pop
icebp
and
push
pop
pushf
xchg
or
cmp
or
nop
pop
pusha
test
mov
push
out
test
jle
stc
sub
test
nop
into
mov
outsb
xchg
fdiv
inc
pop
idivl
test
testb
inc
mov
mov
fisttpl
pop
sub
les
mov
and
testb
stos
add
sbb
jg
cmc
mov
inc
sbb
in
sbb
mov
mov
test
adc
jmp
lret
lods
gs
jge
fldcw
fadd
xchg
cmpsl
lea
mov
cmp
mov
inc
loop
fwait
push
inc
and
jecxz
mov
fldcw
pop
adc
lock
push
cmp
push
pop
outsl
inc
ret
xchg
push
divps
sbbb
andl
and
imul
mov
mov
idiv
gs
sbb
stc
sahf
push
push
aaa
inc
cld
test
jle
push
cmp
pop
lcall
xor
and
pop
fwait
aad
and
push
lods
and
or
in
inc
mov
lods
leave
push
cld
aad
push
das
in
mov
adc
lds
data16
sbb
dec
mov
adc
xchg
mov
aam
dec
rolb
xor
add
jp
xchg
cwtl
test
and
in
adc
dec
sbb
call
sti
xchg
jb
cmpb
clc
aas
shll
dec
int
faddl
arpl
mov
push
inc
adc
adc
jbe
xrelease
rcl
push
add
js
mov
les
lods
sub
jge
mov
leave
in
movsl
int3
cli
mov
jp
stc
popa
add
sub
ds
pop
or
push
shr
mov
lods
sub
pusha
sbb
jb
push
mov
adc
leave
sub
xchg
lea
inc
pop
mov
shlb
loope
pop
and
jbe
xlat
pop
sub
roll
xchg
mov
push
add
mov
rcrl
push
aas
sahf
adc
and
enter
mov
test
rcrl
lahf
ret
push
cmp
insb
inc
fnstenv
push
enter
mov
out
cmpsb
sahf
jge
mov
data16
dec
push
and
aas
sahf
push
xor
icebp
pop
lahf
icebp
push
daa
iret
movsl
add
cmpb
divb
push
jmp
imul
cmpsl
loope
out
push
and
ds
and
pop
xor
cmc
rolb
mov
lods
sahf
mov
into
xchg
mov
lods
xchg
stos
push
rep
inc
jg
sbb
push
cmpsb
les
pop
pop
pop
repz
pushf
or
jle
lods
adc
mov
jb
xor
jp
jecxz
xchg
fs
cmp
push
out
int
hlt
jp
orl
popa
cld
out
sub
push
fwait
or
hlt
imull
push
shlb
jp
sarb
lea
jecxz
mov
enter
mov
mov
cmp
mov
jmp
popw
push
inc
fcomip
push
pop
jns
pop
xchg
test
outsl
cwtl
mov
std
ss
fistl
push
xchg
out
stos
cmp
dec
dec
xor
loop
xor
mov
adc
fimuls
pop
and
mov
jmp
outsl
mov
bound
hlt
add
dec
mov
mov
cmc
pusha
mov
je
dec
pop
jb
je
pop
sbbl
cmp
mov
adc
cmp
insl
popa
mov
sub
jnp
in
das
imulb
out
or
push
not
and
daa
cs
push
jecxz
jo
dec
xchg
push
clc
gs
in
jnp
pop
es
mov
lcall
outsl
adc
fstl
int
loopne
sarb
subb
ss
jg
imul
pop
js
stos
out
jb
lds
aad
or
jae
jp
add
inc
sbb
test
shr
pop
sub
dec
push
stc
test
push
fisubrl
push
sub
sbb
sbb
out
xor
mov
sub
ja
push
push
push
decb
pop
push
xchg
in
pop
pop
in
loope
pop
insl
adc
mov
enter
dec
lods
inc
outsb
aad
repnz
add
idivl
xchg
out
scas
dec
ret
and
cwtl
or
loope
hlt
xchg
sub
repz
bound
outsl
test
pop
lock
dec
or
xor
adc
adc
ss
jg
es
xor
cmp
add
gs
stos
and
lret
leave
and
add
and
jg
mov
call
cmp
iret
sub
movl
test
gs
and
je
mov
das
scas
repz
sub
fisubrl
dec
sub
xchg
mov
jb
iret
push
dec
pop
sub
mov
pop
and
shlb
in
mov
fistpl
adcb
dec
pop
xorl
neg
std
or
fwait
pop
inc
pop
fsubrl
pop
jbe
filds
into
stc
xorl
shlb
xchg
dec
inc
xchg
call
sbb
push
out
sub
push
in
jb
adc
enter
shlb
push
loop
lahf
adc
sbb
inc
sbb
add
out
cmp
adc
in
push
jle
insl
xchg
xchg
loope
adc
adc
mov
out
ds
jnp
jns
int3
fistpll
stos
sub
adc
mov
jb
enter
add
in
jne
ljmp
sub
cs
das
xor
ret
adc
mov
loopne
fstps
lahf
mov
and
sub
push
int3
cmpb
cld
cmp
shlb
insb
mov
data16
pop
mov
fsubr
call
add
xchg
sbb
mov
outsl
jne
fldcw
sbb
lock
sti
add
adc
loopne
leave
outsl
loop
dec
je
or
pop
push
movsl
repz
loopne
fisttpl
jle
cmp
cwtl
jno
mov
je
icebp
sub
mov
pop
or
sbbb
pop
inc
mov
rorl
stos
dec
shrb
push
and
repz
aad
jo
ljmp
xor
in
pop
mov
xor
mov
sbb
popa
das
ret
xchg
sub
test
mov
stos
loopne
mov
xchg
ljmp
iret
push
cltd
mov
jmp
mov
packuswb
xor
add
and
jmp
push
mov
xchg
ja
push
mov
xor
les
and
dec
mov
sbb
imul
aas
hlt
incb
mov
or
ljmp
add
popf
mov
adc
aad
cmpsb
aaa
leave
cmc
mov
ret
jge
in
mov
pushf
mov
fisttpl
sub
xchg
cmpl
les
push
daa
sub
xchg
lock
js
cmp
je
mov
in
dec
push
mov
push
outsb
sub
mov
cmpsb
je
cmpsl
sbb
lcall
push
and
mov
sahf
lret
loop
mov
xor
pop
scas
dec
xor
adc
inc
jl
sbb
movl
cld
push
fld
cmc
in
loop
popa
sti
xor
jne
inc
arpl
subb
mov
orb
pop
or
mov
in
sbb
repz
sub
fbstp
pop
mov
dec
adc
test
jbe
add
xchg
push
cmpsb
clc
mov
outsb
sub
mov
xorl
cmp
xchg
xor
inc
sub
lock
xchg
push
in
in
pop
dec
rcrl
adc
iret
cmp
pop
mov
adc
xchg
lahf
push
or
loop
mov
test
jne
shll
adc
inc
fs
int3
sbb
das
pusha
push
icebp
sbb
jmp
cmp
popa
lret
ja
jnp
or
add
rclb
fimuls
imul
adc
sub
pop
lods
cwtl
adc
pop
cmpsl
repz
hlt
pop
or
xor
lahf
sbb
das
dec
fdivrl
sti
testl
fwait
dec
sub
test
push
daa
mov
enter
jno
xchg
xor
sbbb
mov
pop
movsl
test
rcll
hlt
cmc
mov
xchg
push
xchg
and
daa
jnp
test
mov
sub
xor
mov
ret
mov
adc
pop
pop
mov
mov
or
sub
je
lods
mov
mov
int
dec
dec
xchg
jg
hlt
xor
jmp
xorb
xor
ljmp
push
outsl
xor
and
jge
out
mov
fs
dec
gs
repnz
mov
sub
adc
mov
lods
out
insb
out
repz
in
into
mov
push
mov
incb
mov
mov
jbe
iret
ret
push
cli
pop
std
popf
mov
arpl
sbb
aaa
dec
out
fnsave
mov
and
jl
popa
js
mov
sub
or
xchg
mov
pop
add
fmulp
sub
sbb
das
sti
mov
xchg
lods
es
sub
mov
push
sub
fdivrs
xchg
inc
xchg
out
nop
mov
mov
dec
inc
sbb
stos
addr16
jnp
insl
jbe
jnp
std
pop
movsb
cwtl
int3
lods
not
inc
mov
clc
jo
imull
cli
xor
ja
jno
xor
int3
pop
mov
lcall
push
scas
push
xlat
dec
or
repz
orl
or
adc
and
push
pop
imul
test
stc
inc
jmp
mov
pusha
outsl
jnp
pop
shlb
shl
add
mov
cmpb
xchg
sahf
adc
mov
enter
lret
in
out
jge
test
das
outsb
sub
das
add
inc
add
lea
mov
stc
mov
out
inc
ret
and
inc
inc
xchg
push
cmp
add
sub
aam
mov
or
je
jo
mov
lock
in
mov
mov
or
jb
loopne
xchg
or
push
sbb
sub
jmp
mov
test
std
mov
outsb
movsl
lea
in
mov
mov
cmp
inc
in
pop
das
adc
notl
fs
push
inc
pop
mov
test
mov
in
push
mov
movsl
fimull
jbe
or
push
outsb
mov
shlb
loope
adc
gs
aad
nop
das
or
pop
imul
push
pop
jno
push
sub
out
add
inc
push
stos
sahf
xchg
test
jl
xor
and
inc
popa
jmp
andb
sbb
sbb
jne
clc
test
xchg
ret
mov
aad
xchg
pop
jle
fbstp
xor
mov
fnsave
adc
lods
pop
dec
mov
lret
jle
pop
out
adc
mov
cmp
out
pop
aad
sbb
mov
cmp
pushl
imul
outsl
insl
mov
int3
repnz
push
rcll
jns
iret
mov
paddsw
cmc
fisubrl
mov
cmp
mov
aam
adc
push
hlt
mov
ret
or
je
sub
xor
fadd
mov
cltd
lret
adcl
scas
stos
mov
jbe
sub
icebp
call
push
fsubrp
dec
imul
cs
and
dec
call
mov
dec
sub
push
xchg
in
sahf
test
shll
mov
leave
mov
fsubrs
nop
push
js
int3
adc
and
cmp
adc
cmpl
call
xchg
mov
pop
decl
sub
mov
and
ds
jmp
fsubrl
xchg
jbe
adc
and
pop
or
scas
push
daa
dec
cmp
fimull
lock
inc
mov
jne
lods
cmpb
adc
push
int
es
and
in
cmc
pop
addb
mov
xorb
stos
and
cmpsl
jle
inc
sbb
xchg
mov
pop
fdivs
mov
fcomi
adc
mov
jae
jmp
sub
ljmp
loope
xchg
out
xchg
cltd
fstl
je
sbb
jp
jmp
mov
pop
movb
jg
xor
rcl
pop
sbbl
lea
in
shlb
idivl
ficompl
outsb
insb
roll
xchg
loope
pop
push
rclb
push
mov
cmpb
stos
sub
out
mov
in
pushf
rcll
sub
nop
mov
or
mov
jg
scas
push
test
cmp
pop
in
andb
sbb
mov
or
xor
and
enter
out
nop
into
outsb
pop
ss
ljmp
sub
or
and
xor
clc
lods
loop,pn
fimull
sub
and
orb
jo
pop
add
dec
inc
std
or
jb
xchg
push
rcll
xchg
inc
lret
adc
push
sbb
adc
gs
cmp
push
mov
popa
mov
push
jo
test
idivb
cmp
xchg
push
inc
lcall
lods
out
sbb
jno
dec
in
and
pop
inc
clc
jmp
cli
mov
lock
jge
adc
mov
mov
lock
sub
or
shl
cmp
mov
pop
push
xchg
sbb
test
ret
and
dec
xchg
add
cmc
clc
iret
add
xchg
or
fisubrs
testl
sub
or
mov
icebp
stc
jb
out
dec
out
xchg
jecxz
adc
mov
test
xlat
xchg
dec
gs
sarl
and
sub
in
ret
lret
inc
loop
cmpsb
push
xor
or
add
and
jne
inc
ja
sar
mov
std
out
scas
scas
lods
scas
or
sbb
jnp
sub
andb
les
es
mov
lea
jp
es
out
adc
lcall
sub
cmc
and
imull
push
pop
mov
cmp
dec
movsl
hlt
sahf
test
aad
test
mov
and
and
adc
lods
pop
outsl
jnp
xlat
mov
inc
adc
es
arpl
sahf
shll
jle
add
addr16
xchg
mov
scas
sbb
lods
pop
inc
and
es
insb
daa
scas
lds
rcrl
adc
leave
xor
add
add
xchg
sbb
stos
cmp
xorb
dec
push
xor
mov
inc
dec
cwtl
in
sbb
inc
in
mov
dec
jnp
jae
sub
adc
adc
jno
mov
cwtl
xorb
repz
cs
sub
push
jmp
dec
ret
inc
loop
inc
pop
stc
das
sub
or
add
es
pop
pop
pop
jg
inc
inc
push
cmp
dec
adc
or
stos
xor
mov
imul
maxps
lock
imul
lret
or
push
clc
outsl
aas
jle
popa
ret
notb
iret
dec
mov
cld
insl
cmpsb
cmp
pop
mov
sub
push
mov
pop
sub
test
shr
jp
push
aaa
inc
push
les
adc
push
lret
out
xor
xchg
in
mov
pop
adc
out
cld
mov
xchg
nop
jbe
fcmove
mov
aaa
rcll
dec
push
mov
sbb
or
repz
push
adc
pop
rclb
xor
pop
push
pop
dec
loop
cmp
mov
je
arpl
cmp
popa
outsb
push
pusha
test
cs
pop
mov
lds
sbb
pop
push
jge
push
and
test
mov
negb
inc
xor
ja
push
or
movsl
or
jbe
rcrl
shll
inc
adc
mov
mov
xchg
sti
fistpl
jp
jbe
stc
mov
int
xor
lcall
test
pushf
mov
mov
sbb
xor
sbb
adc
enter
xor
fisttpll
cmc
lcall
repnz
push
jge
xchg
mov
sbb
add
jne
test
rcll
mov
outsb
mov
xchg
mov
pusha
sbbb
icebp
lcall
gs
gs
sub
call
or
andb
or
popf
adc
or
adc
xor
mov
in
push
sbb
push
push
push
inc
call
cmp
add
xor
popf
lahf
imul
cltd
out
push
lock
fimuls
movsb
mov
push
mov
addr16
loopne
dec
adc
dec
xor
mov
or
adc
dec
cmp
stc
adc
dec
int
lea
jne
push
scas
sbb
loop
sbb
sub
or
loop
xchg
sbb
jnp
pop
out
sbbb
cmpxchg
mov
out
adc
adc
jl
fimuls
sub
jo
enter
int3
push
hlt
xor
adc
outsb
add
arpl
out
add
imul
push
stos
cmpsb
jge
testb
adc
push
push
lahf
and
repz
imul
lods
sub
mov
xor
daa
xor
in
bound
dec
cmp
and
mov
add
jecxz
pop
sahf
add
inc
dec
fwait
lahf
test
sbb
or
cmp
adc
cs
fcompl
repnz
fsubs
jbe
jo
in
std
arpl
sub
push
cmpb
push
xor
lahf
or
lock
sti
jns
jle
in
pop
rcr
sbb
jge
xchg
and
mov
rorl
jne
cmp
das
xor
lcall
outsl
or
in
xor
xchg
ds
je
mov
je
sahf
in
rcrb
jle
push
xchg
out
push
iret
inc
adc
add
lock
jae
roll
in
lret
bnd
ud2
pop
cmp
jae
loope
push
push
rolb
inc
aam
mov
adc
movntq
mov
in
xchg
push
cmp
aam
and
xchg
push
or
mov
sbb
das
sub
cmc
and
mov
sti
mov
adc
sahf
addr16
in
insl
ret
call
add
js
jl
cmc
adc
sahf
sub
aam
mov
ss
sub
push
dec
lods
jae
jno
aas
mov
test
cmpsl
mov
pusha
pop
inc
js
mov
ret
xchg
mov
inc
fcompl
fistpl
andb
stos
jp
test
xorl
jb,pt
pop
add
dec
in
inc
outsb
repz
je
addr16
fwait
dec
add
jp
inc
dec
pop
fucom
pushf
or
push
subl
sti
mov
loop
inc
add
mov
aas
mov
into
lcall
push
fidivl
shrl
jb
lods
xor
cvtps2pi
sbb
mov
inc
lock
pop
lds
mov
aad
mov
inc
xchg
wrmsr
cmp
addb
xchg
mov
sbb
push
pushf
popl
mov
ljmp
enter
cld
jb
lcall
pop
xchg
es
jae
cli
jne
insb
xchg
loope
push
cmpsb
push
outsb
pop
int
mov
addb
pop
mov
cld
sub
add
push
cwtl
jg
jle
daa
jl
adc
cwtl
mov
popa
outsl
mov
repz
test
jp
jmp
sti
mov
mov
sar
in
shrb
cmpsb
sub
mov
cli
call
jbe
sub
jae
xchg
mov
arpl
dec
push
call
sub
scas
jne
adc
insl
std
out
inc
cs
mov
pop
dec
cltd
fnstenv
dec
dec
ss
rol
shr
clc
jecxz
add
out
ret
pushf
or
xor
xchg
cmp
xor
test
xchg
jg
nop
repz
sbb
pusha
int
sub
mov
bound
popa
jae
rorb
mov
sub
aad
jle
sub
mov
pop
cli
jecxz
movsl
fldl
popf
sbb
popf
clc
rcrl
push
mov
jg
mov
mov
ds
mov
fnstcw
loopne,pt
push
pop
cld
mov
jl
lock
call
lock
loope
mov
adc
push
scas
lods
insl
mov
ljmp
stc
push
sbb
inc
ljmp
lcall
cmp
in
push
insl
daa
xchg
test
pop
xchg
mov
icebp
mov
es
and
add
jno
mov
mov
aam
out
call
cmp
add
cwtl
pop
bound
aad
popa
pop
pusha
lcall
lahf
cmp
pop
mov
aaa
fsqrt
jno
lret
xchg
adc
mov
push
add
loopne
mul
mov
fucomp
xor
xor
cs
mov
inc
pop
jl
lods
outsb
mov
arpl
cwtl
pop
push
xor
cmpsb
ret
lods
shrb
in
in
mov
lods
jle
xchg
and
aaa
xlat
xorb
shll
aad
out
sbb
xor
jo
aam
lret
mov
fidivs
xor
icebp
cmp
mov
popf
cmovs
in
fmulp
ja
xor
sub
adc
mov
movsl
jl
add
sbb
jo,pt
mov
js
pop
mov
and
jl
popf
jl
out
mov
sahf
and
jmp
std
dec
cmp
hlt
and
repz
dec
out
shrb
push
mov
test
cmp
cli
push
je
jo
testl
xchg
xor
je
cmp
in
scas
pop
outsb
loope
or
adc
adc
insl
mov
scas
and
pop
pop
push
in
insl
inc
and
mov
test
jle
shrl
out
insb
outsl
jae
stos
loope
mov
dec
xor
jns
decl
xor
popf
xor
outsb
into
scas
fwait
cmp
lds
btc
mov
lds
inc
insb
in
imul
insl
fisubrs
clc
adc
adc
jo
push
add
and
add
movsb
sbb
mov
mov
lahf
add
xchg
mov
cmpsl
adc
inc
dec
ljmp
mov
loope
js
xchg
mov
mov
cld
add
popa
mov
in
fdivs
adc
mov
cmp
jecxz
push
pop
gs
stc
mov
mov
jns
pop
repz
xchg
in
popa
rcr
frstor
sub
jbe
test
insl
jmp
outsb
mov
dec
push
shlb
sub
add
sbb
jb
mov
cmpsl
mov
push
inc
icebp
pop
aad
jecxz
leave
push
call
in
pop
xchg
out
xorl
sub
fiaddl
lds
and
xchg
xchg
mov
test
das
cmp
push
mov
mov
xor
xor
and
in
sbb
jno
insb
roll
sbb
or
stos
push
push
xchg
inc
jp
loopne
sbb
popa
adc
xor
xor
adc
stc
and
add
and
mov
js
in
rorl
dec
stc
sahf
leave
roll
enter
jbe
imul
sub
sub
sbb
inc
pop
jg
cmp
iret
outsl
adc
mov
out
nop
jmp
lahf
lret
leave
or
in
fstps
imul
cmp
mov
xor
mov
lods
rclb
fwait
push
and
cwtl
ret
arpl
cltd
bound
push
jge
and
mov
sub
xchg
test
stc
sbb
and
notl
data16
insl
fadds
sub
rcrl
add
mov
jmp
fisubs
cli
ret
inc
mov
pop
push
imul
mov
mov
imul
xor
xchg
sub
aam
fidivl
test
les
lahf
mov
flds
frstor
aas
sub
scas
lods
push
mov
lock
leave
movsb
inc
add
mov
inc
inc
daa
mov
aam
fcoms
push
xchg
mov
pop
scas
scas
aam
lea
or
fidivl
test
cmp
sarl
push
popa
popf
jns
aam
jg
shll
call
outsb
sub
mov
repz
in
fiadds
loop
popl
jns
or
enter
xor
mov
lds
es
imul
dec
rcl
dec
dec
leave
out
fnstenv
or
jns
fwait
mov
lea
and
or
push
inc
inc
or
lret
vmovaps
sub
fs
lea
fsubrl
fs
dec
cmp
shll
mov
xor
adc
shrl
push
fnsave
clc
fsubl
lock
mov
ss
xor
sbb
adc
and
ret
ret
icebp
pop
sahf
or
icebp
xchg
xor
inc
les
dec
mov
lods
dec
cmp
sub
mov
loopne
pop
push
mov
xchg
and
pop
and
aas
mov
nop
popf
xor
ret
mov
mov
pop
popa
or
stos
mov
pop
cmc
xor
mov
or
cmp
pop
in
or
mov
pusha
shll
out
out
out
push
push
push
mov
addr16
and
adc
pusha
loop
and
pusha
imul
cmp
cwtl
push
out
xchg
mov
cmp
test
flds
push
dec
fistpll
push
mov
mov
inc
scas
push
pop
notb
jg
rcrl
pop
sbb
clc
movsb
popa
sarb
and
icebp
pop
scas
out
insl
add
test
bound
ds
and
push
insl
or
cmc
pop
leave
pop
mov
rcll
gs
xlat
sbb
rol
xchg
and
int
scas
xchg
enter
scas
xchg
sbb
arpl
lea
loopne
jp
pushw
cwtl
ljmp
push
stos
js
ja
push
cmp
movsb
mov
stos
bound
and
ljmp
test
mov
cmpsb
and
and
stc
mov
in
in
add
sbb
xorl
sbb
add
or
frstor
jp
test
test
lahf
mov
icebp
xor
out
and
outsb
xor
xchg
pop
scas
movsl
push
xor
bound
or
aas
xor
mov
jl
push
jp
sbbl
pop
sti
jns
sbb
add
mov
sbb
cmpsb
push
push
mov
femms
adc
enter
sub
inc
je
xor
xor
iret
movsl
test
orl
loope
jne
mov
xchg
out
push
mov
add
or
loopne
mov
lret
cmp
mov
jg
mov
or
test
or
std
push
stos
push
lock
pop
shrb
cmp
inc
dec
in
aaa
mov
sbb
mov
inc
les
add
fst
jle
scas
mov
and
sbb
or
xchg
fdivs
add
sbb
fs
mov
shrl
mov
je
insl
or
icebp
ficompl
push
dec
push
lods
cld
pop
arpl
jno
xchg
sbb
add
sub
adc
fbstp
faddl
outsb
inc
movsl
push
cmovl
out
test
and
stc
cltd
cli
pop
dec
scas
xchg
xor
add
jae
mov
or
pop
and
mov
push
mov
push
push
inc
mov
sub
cmpsb
enter
dec
xchg
jae
in
lock
dec
mov
lock
pop
jae
sbb
xorb
adc
fcmovu
daa
cmp
or
cld
frstor
dec
arpl
rcr
push
sbb
and
int
aas
sbb
rorb
loope
push
add
lret
mov
xor
stc
xchg
inc
in
xor
in
aad
add
xor
cs
pop
outsb
jno
cltd
and
dec
inc
push
mov
incb
mov
pop
andl
mov
push
mov
ffree
jmp
mov
mov
jg
adc
fwait
cwtl
jp
xchg
loop,pn
cmp
fbstp
jecxz
std
imul
inc
xchg
int
pop
daa
pop
and
ret
or
push
data16
out
int3
sahf
mov
jmp
repz
imul
jbe
xchg
mov
les
aam
lcall
inc
mov
push
xor
ret
add
daa
fcmovne
xor
inc
mov
arpl
sub
inc
popf
outsl
push
out
mov
jmp
vcvtsi2sdl
sub
pop
cltd
les
mov
inc
fiadds
sbb
pop
hlt
inc
xor
adc
mov
xor
jb
adc
addr16
inc
cmp
inc
dec
stc
sub
xor
xchg
mov
lcall
fdiv
and
push
inc
push
sarl
lods
lar
fdivrp
lea
dec
push
std
dec
xchg
shl
rcrl
lcall
inc
hlt
mov
in
cwtl
roll
cmpsl
test
xchg
les
xchg
pop
mov
sbb
in
hlt
push
sbb
cmp
and
pop
out
stc
shrb
inc
test
jbe
xchg
push
xchg
inc
fists
aad
dec
xchg
push
xor
xlat
aas
mov
or
divl
inc
mov
enter
sti
dec
pop
dec
dec
xchg
push
ds
lea
cmp
fisubrs
dec
sbb
pop
lret
pushf
pop
pusha
fistps
bound
movntq
out
jge
out
in
xor
mov
xchg
or
mov
mov
adc
jmp
sbb
insb
into
testl
in
sub
xor
adc
xor
movl
test
push
inc
aad
jo
sti
xchg
cli
xor
mull
ja
mulb
mov
rorl
scas
in
out
jle
dec
fimuls
test
lods
into
ss
jo
inc
inc
adc
ja
cs
push
cmc
dec
dec
jle
frstor
in
cmp
dec
pop
addr16
mov
lock
ja
adc
jns
iret
mov
sahf
vmread
xor
and
insl
and
push
out
xor
scas
adc
jl
outsb
outsb
or
mov
cmpb
pop
imul
insl
js
aas
pop
dec
mov
sahf
shlb
mov
inc
mov
cltd
ss
rcrb
decb
loope
push
hlt
ja
xchg
cmpsb
sahf
jp
ffree
mov
arpl
imul
stos
repz
jns
into
xor
insl
push
ss
sub
outsl
pop
arpl
hlt
mov
cmp
push
nop
or
aaa
lds
hlt
sbb
jnp
push
add
or
fwait
ret
pop
add
cmpl
sub
sbb
mov
mov
pminsw
sbb
stc
adc
rcrl
test
enter
mov
mov
add
or
push
xchg
xor
mov
shrl
dec
fs
out
aas
mov
push
xchg
or
xor
daa
mov
std
shll
mov
cmp
jae
sub
sarl
test
jg
daa
cs
or
and
push
or
xor
sbb
dec
mov
popf
mov
adc
add
pop
push
pushf
and
xor
loope
aaa
or
push
or
adc
lret
and
cmpsl
dec
push
add
testb
pop
adc
sbb
add
sbb
out
cmp
push
mov
bswap
xchg
mov
mov
jnp
icebp
leave
imul
sarl
jae
mov
pop
pop
outsb
cmp
mov
sar
pushf
xor
or
dec
aam
mov
or
push
push
out
stc
mov
sbb
xlat
aas
es
cmp
push
jb
sub
adc
jae
jmp
daa
sbb
ja
or
lods
sbb
mov
sbb
jnp
fidivrs
mov
sbb
jge
pop
sub
push
lods
inc
ss
inc
cmpsl
xlat
data16
int3
dec
cmpsl
lcall
dec
test
negb
insl
mov
pushl
dec
pop
rcl
shrb
mov
sbb
or
jecxz
mov
push
adc
data16
das
inc
mov
rorb
es
inc
lods
test
std
add
inc
addr16
mov
jge
sub
movsb
std
shrl
dec
test
sbb
inc
mov
xlat
and
scas
jnp
jno
popf
dec
sbb
js
data16
or
cli
fisubs
testl
jp
sarl
push
in
mov
aam
sarb
and
out
lods
or
fadds
pop
mov
in
jl,pt
popf
and
jo
push
fsubr
xchg
adc
sub
cmp
ja
arpl
das
call
std
xor
and
mov
in
mov
fistps
cmp
lods
and
xor
les
jns
adc
ds
daa
out
call
or
xchg
push
add
fstpt
push
gs
sahf
in
sbb
pop
mov
mov
gs
and
or
pop
ss
jns
lahf
mov
inc
fsubl
fiaddl
fcompl
fucom
out
or
repz
lret
mov
xor
mov
mov
pop
mov
cltd
dec
cld
mov
push
je
clc
push
jmp
mov
leave
inc
stc
jae
inc
call
mov
in
out
or
mov
icebp
jb
xor
xor
jle
jb
sbb
push
ljmp
repz
and
xchg
stos
jle
imul
sbb
mov
sub
add
pusha
mov
push
mov
in
test
cmp
push
add
add
xor
push
fldt
pop
sbb
dec
sub
push
fmull
int3
lods
fwait
push
in
cmp
xchg
sbb
mov
sarb
aaa
popf
and
add
icebp
pusha
out
or
xor
call
mov
iret
mov
xchg
sti
cltd
pushf
test
add
jns
loopne
cld
fldl2e
push
ja
push
cwtl
xlat
jle
int3
mov
or
jae
push
pop
iret
scas
push
mov
inc
stos
popa
insl
in
mov
stos
xchg
ds
aaa
movsl
sub
lds
mov
mov
adc
inc
imul
add
jmp
fwait
push
clc
test
cs
in
or
out
cmp
cwtl
leave
inc
fimull
inc
cltd
pmuludq
jge
dec
push
jbe
pop
mov
jno
lcall
cli
sub
aaa
add
test
daa
out
lds
shrb
mov
adc
fimull
mov
xchg
icebp
movsl
mov
xchg
or
lds
cwtl
movsl
lret
xor
cli
addb
xlat
add
es
or
jle
dec
xchg
and
jge
cmc
ja
insb
movntq
out
movsl
jnp
xchg
push
ss
test
jmp
ds
or
mov
shr
shlb
popa
mov
mov
and
nop
and
iret
pop
aad
inc
test
sbb
pop
pop
loopne
push
jmp
xor
es
lahf
int3
and
jne
inc
sbb
jmp
mov
adcl
and
xlat
sub
xchg
push
xchg
call
pop
sub
iret
jmp
sbb
sahf
cmpsb
cmpsb
xor
jmp
adc
mov
inc
cmc
adc
add
pushf
and
je
jge
cmp
lods
out
mov
outsb
pop
add
sbb
ljmp
cmp
mov
jns
ljmp
les
js
rcr
stos
aas
call
mov
test
mov
adc
jnp
arpl
pop
and
unpckhps
movsl
cmp
inc
fnstenv
inc
imul
cmp
jns
test
ds
cltd
sbb
mov
sub
adc
mov
mov
mov
or
lea
jecxz
push
into
movsl
sub
mov
cmpsl
mov
fidivrl
mov
in
pop
pushf
xor
dec
addb
fbstp
ja
mov
sbb
les
fs
push
subb
dec
sbb
mov
pop
mov
lods
inc
cmpsb
mov
sub
or
adc
test
cmp
hlt
in
or
sbb
shr
stos
inc
fs
add
sbb
mov
mov
es
xor
roll
bound
xor
out
fcmovnu
sub
repz
mov
into
ret
jle
or
or
popf
xchg
push
cmc
adc
xor
inc
enter
test
jb
and
sbb
hlt
adc
inc
popa
adc
mov
sbb
movsb
push
or
add
sbb
add
jp
mov
addl
shr
xlat
mov
ss
jge
dec
xor
ds
iret
adc
mov
jno
mov
fisttpl
rorb
lret
jnp
fcmovu
inc
into
loope
lahf
lcall
loope
arpl
jbe
jecxz
jle
movsl
dec
xlat
sbb
xor
enter
inc
push
orl
cmpsb
mov
mov
dec
mov
int
fnsave
xor
cmp
out
dec
repnz
orb
aam
stc
sarl
jp
test
pop
xor
cmpsb
test
leave
cltd
mov
add
xchg
lret
movsl
int3
lahf
sbb
push
mov
jecxz
cmc
push
jns
aad
xor
pop
fcomi
jns
ss
pop
push
call
int3
repz
or
rclb
ret
and
outsb
sub
jle
stc
ret
icebp
pop
mov
add
and
mov
add
cmpl
daa
mov
jno
inc
push
adc
add
jmp
aam
imul
ret
mov
jp
push
mov
and
or
or
and
inc
ds
pop
cmp
lds
dec
inc
lock
insb
jb
mov
cltd
mov
sarl
jle
test
mov
jae
push
cmpsb
pop
or
insl
fsubl
icebp
dec
xchg
adcb
and
cmp
test
pushf
jb
in
ret
add
mov
fwait
dec
in
jle
std
cwtl
fstps
ds
test
scas
mov
add
jl
dec
mov
push
xor
add
in
inc
pop
andl
daa
cmpl
popa
clc
jns
inc
pop
insb
inc
outsb
push
push
ja
or
push
nop
cld
lock
test
mov
out
adc
stc
aaa
xchg
insl
mov
fwait
dec
out
sub
shrb
jnp
sub
repz
pop
iret
popa
sar
dec
pop
jl
adc
rol
mov
test
ret
or
pop
in
sarb
test
push
mov
das
loop
out
cmc
lods
mov
pop
sbb
jecxz
clc
xlat
mov
adc
movsl
fs
push
iret
fistps
jmp
sbb
cs
orl
repz
cmc
movsb
cmc
sahf
mov
xorb
sub
rorl
js
outsb
int
nop
pop
dec
insb
mov
leave
mov
test
mov
notl
mov
in
adc
push
es
fcmovu
pop
dec
scas
jge
cs
mov
mov
inc
fsubs
test
adc
cli
add
xchg
stc
push
in
out
push
pop
loope
push
dec
sub
movsb
cmp
and
cli
loop
dec
mov
dec
jae
pushf
jge
mov
mov
pop
loope
nop
dec
fwait
mov
scas
sahf
push
in
ret
daa
aad
push
sbb
cwtl
and
lcall
adc
sub
jns
jmp
popf
mov
outsl
ss
daa
push
push
subl
les
packssdw
clc
mov
cmp
ljmp
and
pop
sbb
cwtl
inc
xorb
jmp
scas
pop
sub
push
xor
cwtl
mov
dec
lock
jp,pn
and
ret
sbb
lods
inc
push
bound
jns
into
ret
insb
rcrl
ret
sbb
shlb
rcr
dec
inc
fcomps
or
jecxz
mov
ja
jnp
cmp
add
das
imull
cs
es
push
and
cs
sbb
add
and
mov
outsl
jle
mov
pop
jg
les
mov
notl
cmpl
lcall
mov
popa
sub
push
movb
test
test
addr16
repnz
lea
shrb
ss
loop
xchg
fildl
leave
and
xor
mov
adc
std
push
or
mov
mov
inc
sub
rcrl
pop
inc
clc
movsb
leave
pop
fcomip
mov
mov
aam
cmp
ja
push
cmpsb
sahf
pop
pop
jg
and
mov
pop
xor
lods
sti
arpl
test
ret
inc
lds
lret
jecxz
push
shlb
dec
stos
push
fistpll
mov
ret
aaa
xchg
vmread
daa
shll
xchg
xor
xchg
fmull
sbbl
les
nop
sbb
push
popa
xchg
jmp
je
jge
or
mov
fists
push
inc
xchg
and
mov
jge
jns
xchg
adc
mov
ja
mov
dec
in
insb
inc
sbb
push
pop
push
popf
pop
pop
outsl
xchg
nop
leave
cld
dec
pop
jne
jp
push
hlt
test
lahf
lds
cld
rcrb
jg
jo
xor
or
cmpsl
ss
push
dec
mov
clc
mov
inc
and
lcall
jg
divl
sarb
test
xchg
adc
ds
rcl
dec
daa
hlt
push
stos
jp
pop
push
mov
mov
dec
sub
mov
sbb
hlt
push
sbb
roll
dec
cmp
ret
dec
daa
inc
push
and
jno
sti
dec
mov
stos
das
leave
cmp
stos
repnz
add
iret
mov
scas
sbb
fstps
or
jnp
pusha
lods
popa
cs
inc
xor
int
and
iret
push
cmc
ss
out
incb
add
insl
inc
add
cmpsb
fmull
cli
aaa
xor
xor
dec
pop
stc
ret
or
daa
idivl
cmp
rcr
jb,pn
mov
or
insl
mov
daa
je
add
test
cmp
pop
xor
scas
sbb
movsl
je
out
dec
cmp
ret
sub
cmp
push
adc
mov
std
insl
mov
cmpsb
out
in
or
in
mov
call
dec
sub
mov
or
dec
add
aaa
inc
xchg
inc
xor
sbb
aas
push
loope
pop
add
fmulp
xchg
jbe
adc
data16
fmul
je
clc
stos
mov
bound
add
ret
xor
mov
mov
xchg
push
sbb
insl
jl
dec
mov
stos
fcoml
jne
push
repnz
cs
and
xor
adc
mov
in
cwtl
into
sbb
cmpsl
into
mov
stos
sub
mov
xchg
push
xchg
adcb
in
jge
xor
jg
mov
lea
shrl
adc
icebp
cmp
fistps
arpl
cmpsb
shll
cwtl
adc
scas
popf
cwtl
psubb
lret
popf
ret
out
jb
or
sahf
lret
adc
jg
movsl
and
sub
pop
rcrb
xchg
push
int
stc
adc
xchg
sub
mov
mov
jbe
sub
pop
or
lret
into
iret
stc
adc
shl
xor
mov
fsubs
mov
push
fiaddl
repnz
push
js
xor
dec
cmpsl
daa
movsl
dec
xchg
sahf
or
je
bound
and
jp
adc
xor
mov
jne
jno
int3
test
fwait
pop
mov
iret
or
jp
pop
clc
outsl
push
xor
xchg
pop
push
add
adcl
loop
mov
cmp
cmc
fucomp
cmp
jae
adc
lock
imul
call
sbb
push
mov
rorl
cli
mov
insb
inc
xorb
adc
clc
jle
mov
cmp
cmpsl
sub
sahf
in
iret
mov
or
adc
imul
and
setns
add
xor
and
mov
sub
sbbl
mov
imul
lea
cmp
xchg
test
out
repz
push
test
lcall
lret
sub
cmc
outsl
scas
insl
mov
push
sahf
fiaddl
inc
loop
dec
pop
lret
push
cmpsl
stos
add
or
mov
and
mov
loope
gs
jmp
cwtl
xor
sbb
and
sbb
cld
rorb
movb
mov
aam
cmp
sub
add
lods
shlb
add
xor
loop
fidivs
dec
push
insl
push
xchg
push
pop
dec
push
jge
pop
pop
jo
jge
hlt
adc
lock
and
out
stos
pop
out
mov
imul
xchg
push
inc
push
sub
jp
out
jb
xchg
xlat
fsubrs
pop
pop
add
or
ljmp
sti
mov
cmp
lret
xchg
scas
mov
and
into
outsb
pop
mov
adc
push
jl
jge
ja
daa
xor
xor
push
xchg
sbbb
xchg
gs
out
outsb
and
push
nop
xor
mov
xchg
fdivl
daa
xchg
and
dec
pop
adc
sbb
and
loopne
cli
cli
sti
or
movsb
jl
les
andl
popf
add
stos
ja
push
testl
stos
aad
mov
mov
rolb
adc
adc
push
add
inc
pavgw
lea
add
jp
lcall
or
lds
mov
std
jnp
data16
clc
and
in
lods
lcall
pop
aas
mov
aad
cwtl
lods
xchg
ja
es
adc
andl
mov
push
movsl
icebp
lret
std
jl
xor
push
es
cmp
fbstp
xor
stos
xor
nop
stos
inc
fptan
loopne
push
std
stos
and
icebp
adc
int3
push
add
push
dec
int
call
push
ret
pop
mov
andb
cmp
aas
dec
sbb
pop
test
mov
loop
push
rclb
popf
lcall
lret
dec
mov
cmp
call
jne
push
pop
cmp
int
pusha
cmp
in
mov
push
sub
pop
fistpl
mov
fwait
lcall
in
sahf
sbb
cmp
lea
xorl
aam
xor
xchg
aad
xor
dec
ret
cmp
fs
dec
popf
sbb
add
mov
jge
push
mov
dec
inc
shrl
hlt
sub
sbb
repnz
add
jecxz
test
clc
sahf
lahf
aad
pop
sub
xor
sub
test
xorb
mov
pop
stc
iret
pop
arpl
mov
sahf
incl
ja
insb
sbb
idivl
or
adc
insb
loopne
enter
repnz
notb
sbb
add
rep
add
lods
stos
sti
sub
in
out
sti
lds
lret
jo
mov
out
imul
stc
ja
pop
jge
push
add
out
pop
dec
js
cmpsl
addr16
mov
mov
fidivrs
pop
cmp
xchg
fsts
imul
pop
es
sbb
fstl
rclb
pusha
scas
sub
loope
and
fbld
notb
jb
jbe
fcoml
pop
dec
pop
inc
inc
pop
movsb
ja
adc
sub
out
pop
cmc
push
loopne
jge
xor
stc
dec
mov
pop
aaa
loopne
lret
sub
in
inc
xchg
aaa
mov
cs
or
adc
or
test
jmp
xor
and
xor
push
sub
or
test
jle
cmc
roll
adcb
push
mov
enter
pop
and
mov
push
int3
orb
out
outsb
and
pop
orl
scas
xor
jne
aad
outsl
rep
pop
and
jb
adc
stc
fisubl
or
pop
in
enter
lret
jle
stc
mov
ret
cmp
mov
mov
gs
cmp
add
stos
push
pop
pop
orl
xor
mov
adc
insl
and
xchg
mov
pop
daa
mov
int
dec
out
rcrb
fstps
xor
dec
or
mov
rcrb
jle
ja
or
xor
rcll
rcl
mov
mov
jge
insl
lods
aas
dec
je
insb
or
inc
jg
jmp
inc
xor
aas
fstpl
mov
das
jbe
jo
fnstenv
mov
push
movsb
sbb
lret
mov
popa
inc
jns
int3
jo
or
xor
sahf
cmpsb
out
inc
xchg
cs
jmp
loop
lock
fcmovnu
jmp
in
and
sub
cmp
cmpsl
test
mov
inc
in
sbb
sbb
mov
ljmp
out
cmp
repz
stos
clc
or
cmp
aaa
mov
cmp
gs
mov
test
push
jnp
adc
sbb
mov
jns
or
fdivrl
les
mov
cmpsb
xchg
or
lock
les
loop
dec
imul
pop
pop
xor
orb
pop
pop
rol
vmaxss
cmp
push
or
cmp
loopne
mov
inc
dec
repz
ljmp
jbe
dec
out
popa
aas
adc
pop
pop
and
imul
mov
dec
pop
je
fldenv
rcrb
mov
xchg
jns
mov
lods
adc
dec
leave
sbb
mov
xor
inc
test
sbb
xchg
dec
movsb
mov
stos
cltd
jbe
push
loope
mov
sbb
fstpl
clc
iret
xor
pop
push
mov
push
xchg
ljmp
push
mov
jg
in
jae
cmp
outsl
in
call
dec
repnz
xor
sbb
mov
sbb
addl
in
xchg
subb
mov
pusha
jo
movsl
add
loop
xchg
push
ret
inc
stc
lcall
fsubrs
call
xor
movsb
ja
out
jbe
sbb
mov
cld
inc
mov
adc
in
jbe
sahf
mov
mov
xor
aam
in
xor
add
jmp
inc
leave
mov
add
and
popf
mov
hlt
dec
cli
xchg
inc
test
and
idivb
sti
cmp
inc
dec
es
xchg
and
mov
or
mov
repz
mov
adc
shlb
jae
mov
lock
and
cmp
stos
mov
mov
mov
es
jecxz
pushf
jbe
stos
cltd
movsl
sub
mov
inc
mov
jmp
test
xchg
adcl
ret
pop
cmp
popa
or
lock
xor
or
repz
mov
outsl
ds
mov
lock
out
stos
cli
mov
in
and
out
jle
push
mov
jmp
mulb
xchg
and
cmpsl
adc
shl
lds
ja
ret
push
outsb
clc
enter
xchg
testl
dec
push
xor
outsl
add
inc
shrb
and
add
mov
fldt
sub
dec
orb
cmp
lahf
test
pop
shlb
imul
ret
add
sar
test
mov
dec
mov
les
mov
pop
out
sahf
sbb
sbb
mov
sub
pushf
mov
jae
outsl
inc
loope
shll
jl
xor
xorb
and
and
out
enter
dec
ds
pusha
push
pop
inc
adc
xchg
inc
popa
xchg
sbb
dec
dec
sub
adc
adc
nop
xchg
stos
jmp
push
stos
mov
bswap
mov
sub
cmpsb
ja
ss
pop
sub
jae
lcall
adc
je
inc
cmc
sbb
js
int3
cltd
and
test
outsb
std
aad
outsb
ja
jp
enter
aad
xchg
add
bound
jb
mov
insb
insb
outsb
notl
shr
cmpsb
pop
push
and
inc
mov
jno
or
sbb
jecxz
xchg
out
je
inc
inc
sbb
push
repnz
ljmp
or
jmp
and
loope
notl
in
data16
std
push
jl
push
imul
push
loopne
mov
outsb
cltd
pop
push
xchg
mov
inc
clc
jle
add
lret
mov
jle
imul
rorl
sub
mov
or
sarb
pop
or
mov
pop
mov
jnp
add
push
popa
decl
mov
lods
cmp
in
sbb
or
jecxz
jae
sbb
rcrl
jnp
jge
push
mov
cmp
hlt
push
leave
fs
add
test
int3
jns
and
inc
and
call
rol
clc
adc
push
fmul
inc
sbb
sbb
scas
ret
mov
push
loopne
cmpsl
jb
xchg
dec
aad
mov
icebp
mov
sub
nop
cmp
pop
xchg
sub
daa
mov
sub
mov
or
dec
jg
xchg
inc
sub
psubw
inc
pop
and
mov
outsl
mov
loopne
push
push
cmp
xchg
mov
stc
insl
cld
mov
fwait
scas
push
or
lods
aam
cltd
enter
jno
pusha
out
mov
adcb
add
sbb
inc
inc
xchg
sbb
sub
xor
fs
repz
jbe
mov
mov
test
pop
or
cli
pop
clc
les
ss
in
or
mov
inc
pop
push
jmp
and
xchg
sbb
add
cwtl
adc
fstl
cmc
push
inc
sbbl
sti
mov
in
fimuls
in
lds
sub
push
mov
add
push
jne,pt
inc
aad
or
sub
in
pusha
mov
mov
xorl
mov
cmp
call
mov
mov
xchg
arpl
adc
bound
lahf
pop
push
mov
pop
loopne
sbb
test
inc
or
inc
and
pop
lahf
imul
jmp
sub
push
push
inc
mov
inc
or
scas
jle
and
pop
adc
xor
xor
dec
subb
femms
xchg
push
repz
mov
mov
push
test
fists
add
jle
or
mov
in
dec
mov
push
adc
sbb
xchg
add
xchg
loope
adc
out
ds
push
push
and
arpl
dec
jmp
loope
dec
mov
rcrb
sahf
scas
xor
outsl
jmp
test
sarb
sub
or
fsts
pop
sbb
adc
mov
fs
ljmp
int3
dec
pusha
xor
lahf
cmp
test
adc
loopne
repnz
mov
cmp
sub
int
cmpsb
push
stc
push
dec
sbb
cmp
jno
pushf
xor
xor
xor
cmpsl
aam
mov
pop
lods
xor
add
sbb
test
and
popa
mov
mov
mov
loope
mov
xchg
cmp
xchg
add
and
out
inc
and
fs
lcall
and
add
movl
inc
insb
cmp
dec
inc
jne
outsl
jl
mov
shlb
jg
ficoms
add
xor
cmp
aad
ja
jae
push
outsl
xchg
inc
mov
push
jb
mov
pop
add
jecxz
add
and
jne
stos
popa
sbb
or
lds
adc
inc
negb
sub
or
pop
jp
inc
stos
lret
mov
aaa
jns
xor
call
and
data16
sbbl
xor
push
mov
sarb
test
push
xor
call
sub
cmp
jbe
cmpsl
cli
push
stos
fwait
imul
dec
hlt
xor
inc
pop
inc
int3
sbb
divb
sbbb
mov
icebp
mov
mov
push
jmp
out
pop
push
jl
pop
cmp
fisttpll
andb
add
addr16
or
xchg
xchg
in
jnp
dec
mov
push
les
cmpsb
mov
inc
ljmp
xor
and
ret
aas
in
repz
enter
inc
add
add
mov
mov
iret
lea
decl
dec
addr16
int3
lods
adc
insb
dec
es
push
or
insb
cmp
pop
movb
mov
mov
add
dec
mov
mov
mov
jb
aad
dec
imul
in
stos
pop
js
sbb
subl
loop
add
add
push
add
aaa
gs
jmp
lret
ficomps
pop
or
pop
sub
popf
fcoms
pop
lret
sub
and
movsl
fdivl
cmpsl
icebp
test
stos
mov
inc
cltd
addr16
movsl
inc
cmpsb
mov
inc
push
in
or
adc
sub
inc
in
or
arpl
mov
rcl
leave
cmpb
rclb
arpl
repz
and
and
adc
test
neg
or
gs
mov
paddb
push
popa
adc
jecxz
loop
pushl
nop
out
add
test
std
add
jecxz
insl
jg
dec
imul
sub
or
test
jne
arpl
mov
insb
push
push
jl
and
scas
cmp
mov
push
dec
sbb
mov
pop
into
imul
sub
test
jp
ret
inc
mov
sbb
xor
sbb
xlat
pop
negl
dec
and
jbe
adc
incl
mov
jl
andl
push
mov
inc
adc
lods
dec
pop
cmpsl
in
and
mov
push
mov
imul
jmp
adc
cmp
mov
lods
push
in
jecxz
call
test
repnz
fisttpll
sti
or
je
add
mov
rclb
pop
jo
cli
loopne
xchg
ficompl
and
fadds
dec
add
test
xor
xchg
jl
mov
test
pop
mov
sub
and
mov
jo
jle
mov
outsb
jno
xchg
dec
sahf
testl
in
inc
test
test
sub
icebp
mov
dec
jl
jb
or
popf
lcall
test
mov
cmp
enter
xchg
or
and
lds
cmpsl
int3
arpl
adcl
loop
mov
and
fwait
push
icebp
cmp
adc
int
mov
scas
jle
arpl
xchg
push
cmpsl
in
in
in
test
dec
push
push
dec
jbe
inc
mov
daa
push
test
pop
fwait
int3
mov
push
lods
fldenv
mov
inc
mov
pop
in
test
addb
popf
adc
mov
fmul
lret
sbbb
cltd
leave
bound
into
outsb
push
push
cmpsl
jne
aas
sub
outsb
int
in
add
sbb
mov
in
jns
fldt
mov
outsb
push
push
ficomps
leave
cmpsl
pop
js
push
xchg
push
xchg
mov
adc
ja
adc
fcoms
adc
scas
jl
xor
jge
xchg
jmp
jl
cwtl
mov
loopne
cmp
jl
add
pop
je
aam
xlat
inc
push
jp
jo
sub
pop
in
pop
sahf
nop
push
insl
fistl
xchg
sbb
into
loopne
leave
sbb
push
pop
rcrl
pop
cmp
test
sub
mov
mov
xorl
jge
cmc
pop
sbb
fimuls
mov
std
and
xor
loop
cwtl
sbb
xchg
pop
cmp
mov
jae
out
idivl
and
xchg
xor
mov
repz
iret
leave
pop
xor
movsb
sbb
or
movsl
cmp
add
mov
jmp
and
int
pop
sub
daa
ffree
add
clc
fs
fidivl
notb
xor
jne
and
mov
jmp
jle
inc
xchg
rcrl
stos
imul
xor
push
ds
xor
xor
ljmp
add
add
dec
sahf
out
sbb
mov
out
sti
inc
lret
mov
ds
outsb
jae
loope
jecxz
jbe
xchg
movsb
xchg
fimuls
shll
push
test
jne
push
jnp
test
rclb
lahf
loopne
leave
inc
mov
xchg
aad
jge
hlt
cmc
aad
hlt
sub
jns
jg
xchg
cs
popf
mov
or
lret
mov
fsubrl
add
dec
jp
fscale
jae
push
movsb
cmp
aad
inc
push
sahf
jno
xlat
mov
loope
xlat
mov
push
sahf
jne
sbb
lea
push
lret
fisttps
fcmovnb
enter
fldl
shl
in
inc
scas
mov
jle
add
test
xchg
lahf
push
test
dec
lods
jmp
in
mov
out
pusha
es
mov
out
ret
dec
lods
and
mov
cs
push
push
cmp
or
fstpl
jmp
mull
sbb
sub
into
cmp
scas
insl
icebp
adc
dec
adc
push
xchg
daa
inc
inc
and
pushf
cwtl
or
push
cwtl
mov
pop
aad
push
pop
iret
mov
jle
cmpsl
mov
ljmp
faddp
jecxz
push
inc
jbe
mov
loop
insl
jmp
test
mov
jbe
into
scas
dec
or
xchg
imulb
adc
stos
dec
dec
sub
xchg
xchg
mov
in
loope
scas
cwtl
outsb
lock
mov
mull
sahf
jg
lods
cmp
pop
mov
ficoms
in
lea
les
add
jae
pop
xor
cmp
lea
push
mov
jo
pushf
jmp
das
imul
aaa
and
add
and
daa
and
or
push
push
ss
cmc
out
xor
pop
cmpsl
jns
xchg
popa
das
addr16
mov
xchg
add
pop
popa
sahf
arpl
mov
in
pop
mull
into
push
sbb
adc
aas
lahf
test
jns
push
mov
xchg
repz
and
push
dec
add
xchg
bound
int
ss
pop
pushf
dec
sub
loope
fdivs
jnp
ret
movsl
jmp
clc
add
xchg
xchg
test
gs
lahf
in
cmp
clc
push
jo
gs
dec
insb
sbb
daa
psubb
mov
jno
mov
cmc
or
and
mov
pop
jne
adc
mov
mov
test
and
aam
sub
cmp
jle
fldenv
rorb
inc
add
cmp
adc
out
or
mov
les
push
dec
icebp
mov
gs
inc
fcoml
jle
jno
and
push
ss
data16
xchg
mov
cmp
ljmp
mov
repz
lcall
or
push
fcmovnu
test
mov
pop
or
cs
rorb
inc
sub
test
sarb
xlat
cs
shll
inc
rcll
pop
cmp
nop
es
pushf
push
cmp
and
mov
adc
ret
test
mov
test
lods
jno
aam
iret
dec
lahf
mov
inc
sub
ficoml
aaa
test
mov
xchg
push
in
push
lret
insl
dec
lret
jecxz
mov
cwtl
pop
push
clc
add
sahf
test
xor
rclb
stos
pop
xchg
xor
std
pop
push
jp
cld
cwtl
jne
insb
dec
pop
mov
push
into
lock
dec
into
pop
ror
sub
xlat
xor
ficoms
xchg
push
cmp
and
mov
mov
adc
cmpsl
jp
push
outsb
loopne
and
pop
pop
jnp
outsb
pop
mov
fwait
xchg
adc
nop
insb
arpl
push
cltd
xchg
ja
scas
into
or
call
cmpb
test
sbb
insl
mov
cltd
sbb
aad
inc
add
icebp
fst
xor
and
push
sbb
cmp
jne
jb
xor
imul
mov
dec
cli
ficoml
lahf
and
rol
pop
mov
add
nop
es
jg
mov
inc
cmpsb
fisubs
ret
mov
lods
into
pop
mov
icebp
pop
stos
subb
sbb
lcall
cli
and
push
outsl
sbbb
lret
addr16
jg
lahf
mov
les
ffreep
aam
add
cmpsb
jne
mov
xchg
in
popf
mov
dec
in
lret
jb
int
push
xchg
repnz
inc
repz
test
and
cmpsb
inc
lock
jmp
daa
push
mov
shl
push
mov
arpl
or
lds
push
bound
testb
test
mov
xorl
cmpsb
movsl
lret
cmp
aad
fwait
jne
testb
mov
xchg
pop
xchg
test
cmpsb
popa
xlat
popf
ss
mov
insb
mov
fsubrl
cmp
lds
out
call
pop
faddl
jg
jle
sub
add
andb
adc
mov
add
sbb
out
sub
mov
jmp
add
pop
cmc
cli
js
ret
push
mov
mov
dec
xlat
xchg
mov
push
gs
inc
and
sub
jae
add
cmp
mov
pop
mov
arpl
leave
leave
stos
fdivrs
sub
icebp
lods
xor
pop
rolb
leave
sbb
fstpt
pop
push
imul
fistps
mov
orl
aam
push
out
cli
subb
dec
xchg
out
rol
or
push
test
les
mov
jb
push
addr16
push
dec
popa
rcll
pop
sbb
ja
push
pop
xor
mov
sbb
shll
mov
dec
test
jbe
pop
bound
fistl
fldl
or
notl
ret
pop
imul
sub
inc
mov
pop
mov
fstpl
cltd
insl
addl
jmp
mov
incl
std
aas
fsubl
sbb
out
mov
loope
adc
dec
insb
mov
dec
add
rorl
stc
psllq
rcl
inc
jbe
add
and
mov
push
inc
mov
loopne
and
sub
scas
xor
sub
mov
adc
dec
jmp
divl
fidivs
xchg
in
stos
je
sbb
popw
sub
cmpsl
mov
mov
xorl
out
pop
push
xor
iret
cmp
in
xchg
shl
push
pop
jne
imul
cmpsb
bound
mov
push
into
mov
mov
xchg
sub
in
repnz
cmpsb
mov
mov
mov
sub
sbb
negb
pushf
arpl
or
cmp
mov
outsb
lock
mov
imul
xchg
jmp
cmp
sub
sub
mov
cmp
lods
xchg
pop
xchg
or
inc
fs
std
js
xchg
mov
xor
xchg
push
pop
std
lret
push
loope
inc
loop
in
xorl
test
out
imul
sub
cld
xchg
aam
dec
inc
js
xor
out
adc
outsl
in
sub
pop
je
or
cmpsl
bound
sahf
ds
les
sbb
inc
jnp
mov
push
jno
and
fwait
fiaddl
jns
jae
sub
int
adc
pop
shlb
js
xor
ss
in
sub
testb
mov
sbb
adc
addl
xor
stos
sti
mov
cmp
sbb
push
and
int3
divb
jecxz
jne
jo
cltd
sub
jne
subl
shl
jg
pop
js
int3
xorb
cmovbe
sbb
movb
or
mov
mov
jge
jmp
cli
into
dec
test
jle
aas
jl
push
sbb
outsb
aam
je
inc
ds
outsb
push
imul
aaa
sub
and
cmp
xor
in
sub
stc
sub
mov
push
call
test
les
and
pop
sub
stc
mov
pop
das
sahf
xor
jnp
cmpsl
cmpsl
mov
rorl
rcrb
or
dec
jno
inc
addr16
add
insl
inc
lahf
sbb
sti
inc
mov
jecxz
mov
ds
js
pop
scas
bound
mov
in
dec
and
xchg
aam
out
cmp
mov
sbb
pop
mov
xor
push
fisttps
in
aad
mov
ja
mov
arpl
xlat
rcrb
sahf
jg
xchg
lock
rcrb
cmp
pop
adc
aaa
sub
je
clc
xchg
mull
jnp
and
out
xor
inc
xor
or
jp
and
or
sub
nop
sub
inc
cli
cmpl
adc
xchg
mov
fstl
sbb
sub
scas
fwait
pop
outsl
pop
mov
out
test
pop
xchg
flds
jecxz
es
mov
cli
outsl
std
push
sarl
mov
push
mov
mov
mov
cmp
arpl
lahf
dec
imul
adc
cmp
pop
aas
sub
inc
xlat
mov
rorl
adc
dec
loop
cmp
xchg
xor
fmuls
test
push
arpl
stos
lock
rcrb
jmp
lods
push
dec
pop
cmc
mov
jmp
test
jge
dec
add
iret
dec
mov
fdivr
and
nop
mov
frstor
sub
test
lret
in
push
pop
xor
inc
push
lock
imul
rorb
or
in
fldenv
push
sub
mov
cmp
lcall
mov
pop
pop
movsb
jno
ljmp
stc
cmpsl
or
mov
push
cltd
arpl
stos
mov
in
sarl
sbb
push
adc
into
mov
inc
in
cmpsb
push
mov
mov
cmpsb
xor
and
push
ljmp
lock
jo
jb
mov
xchg
ljmp
out
iret
add
mov
xchg
jg
adc
mov
in
std
rclb
scas
mov
jbe
mov
ret
cmpsl
pop
push
ds
popf
je
xor
push
in
mov
pushf
popf
dec
mov
out
fnstcw
imul
add
jg
mov
divl
insb
xor
mov
dec
lfs
sti
into
push
mov
in
sbb
outsl
add
xchg
push
lock
scas
jns
pop
stos
sub
aaa
inc
ret
nop
movsb
addr16
hlt
outsb
mov
imul
xchg
push
test
push
xchg
test
inc
pusha
fs
loopne
outsb
out
sub
pop
and
add
das
cmpsl
pop
jo
add
add
jle
pop
jge
inc
int3
dec
xchg
das
mov
xchg
mov
mov
imul
xchg
cwtl
fidivrl
push
inc
cmpsl
cmp
lods
roll
data16
dec
cwtl
jo
add
mov
pop
mov
xor
mov
sahf
gs
jbe
loope
dec
into
rorb
jmp
cmpsb
pop
xchg
push
push
lcall
sub
and
pop
imul
cli
icebp
pushf
cld
outsl
push
aam
push
ret
inc
mov
inc
sub
add
push
and
xor
inc
push
xchg
ficoms
pop
mov
int3
push
ret
fmuls
mov
test
in
sbb
in
mov
jecxz
pushf
adc
lock
scas
rclb
aad
push
add
bound
push
std
imul
cli
and
pop
xchg
imul
xchg
mov
lret
add
pusha
sub
sub
mov
push
sbb
pop
dec
fsubl
inc
sbb
mov
mov
loop
jae
sub
mov
fcmovnbe
cmp
icebp
push
pusha
push
inc
xchg
xchg
lods
xchg
leave
shl
cli
xchg
loop
push
outsb
rorb
mov
fstpl
jl
subb
mov
movsb
fldcw
addr16
in
xor
pop
inc
rol
push
int3
push
dec
sbb
xor
add
out
outsl
lods
jg
sbb
roll
pusha
in
loope
dec
pop
popf
popf
push
out
test
les
dec
call
je
movsl
jnp
cmpsl
addb
shlb
ret
popa
cmp
fmull
bound
push
and
jmp
and
fidivl
and
cmp
mov
cmp
adcb
fwait
mov
and
addr16
xchg
fwait
inc
mov
mov
mov
popf
mov
and
ret
adcl
mov
imul
cmp
mov
movsl
push
mov
cwtl
lahf
nop
push
push
jne
test
test
leave
inc
rolb
mov
pop
pop
lods
jns
dec
in
sub
and
pop
icebp
adc
fstps
sbb
popf
std
sbb
adc
xchg
xchg
je
addr16
test
sbb
xor
jne
mov
gs
mov
jg
iret
cwtl
outsl
clc
mov
ret
shll
fmul
in
mov
mov
outsl
push
pop
pop
and
xor
ja
test
vpsllq
lock
adc
lods
xchg
lcall
mov
in
bound
xchg
xor
push
lods
cmp
push
cmp
scas
xlat
ret
pop
xchg
cmpsl
push
add
js
jl
sbb
cmp
mov
mov
or
rcrl
imul
roll
sub
fsubl
hlt
mov
jb
mov
jno
divb
jp
test
je
mov
mov
or
in
mov
lret
add
cmp
inc
xchg
clc
cmp
mov
scas
outsb
xchg
push
mov
cld
push
pop
addl
or
arpl
dec
scas
test
in
xchg
cmp
hlt
mov
test
inc
lods
xchg
in
js
fwait
sub
pop
dec
pop
in
cli
xor
or
adc
lret
dec
push
xchg
pushw
scas
pop
test
cmp
mov
cmpsl
int
sub
jecxz
sti
xchg
jns
fs
mov
fistps
in
add
cwtl
leave
mov
cmp
or
xlat
fildl
icebp
jge
gs
sub
jne
add
jg
movsb
aam
pusha
jae
add
inc
sub
pop
lahf
push
imul
cmp
dec
xor
pop
sub
mov
je
sub
adc
cwtl
push
lret
push
or
cmc
hlt
dec
push
jmp
inc
pop
mov
mulb
mov
bound
pop
fmul
xor
jae
scas
std
scas
in
fcompl
xchg
and
dec
outsl
push
lret
sti
test
rclb
sbb
aaa
sub
aaa
adc
mov
cmp
sbbl
shll
inc
shl
rcl
lret
sbb
loopne
inc
xor
inc
jecxz
mov
js
es
push
xor
call
sbb
mov
bnd
fisubrs
aam
jb
sbb
mov
cld
mov
lods
jle
pop
sti
pusha
add
pop
mov
xchg
call
arpl
in
test
pop
push
lret
repz
sbb
add
inc
in
jmp
and
hlt
push
rep
pop
inc
add
adcb
rcrl
into
es
jle
dec
incb
xchg
adc
push
fcomp
mov
lods
rolb
xchg
xchg
jo
sub
mov
xchg
xchg
pushf
mov
push
add
stos
les
arpl
mov
jne
fidivrl
or
push
mov
mov
outsl
adc
pop
xlat
ffree
pop
sbbl
arpl
jmp
push
add
loop
orl
cmp
jp
out
fimuls
sbb
cmp
xchg
mov
mov
outsb
outsb
or
sub
das
in
xorb
mov
outsb
or
es
sbb
enter
mov
and
out
pop
sub
lods
inc
std
push
ljmp
lds
mov
cmp
mov
sub
xor
pop
int3
hlt
inc
xchg
test
cmpl
stos
xchg
xor
outsb
ret
fwait
lret
ds
push
popa
mov
inc
stc
sahf
in
lret
iret
js
lds
in
std
dec
mov
sbb
iret
sub
or
dec
push
imul
mov
repz
popa
xor
pop
pop
cmp
xor
jmp
adc
mov
and
and
dec
inc
mov
stc
into
cld
xor
sti
sarl
sub
fs
jle
sub
imul
xchg
mov
daa
xchg
adc
pop
jnp
cmpb
insl
jp
inc
jg
adc
push
inc
xchg
in
jo
lds
push
insb
hlt
or
mov
xor
pushf
iret
test
pop
jg
loope
inc
dec
sbb
stos
cmp
repz
push
sti
sub
hlt
xchg
or
add
into
push
jle
push
mov
rclb
mov
mov
jnp
add
cmc
pop
scas
mov
jno
std
xchg
lds
fcomp
pop
or
jg
es
cmp
shl
push
pop
out
and
cmp
in
cmp
cmp
cmp
jbe
mov
sbb
pop
into
xor
fldcw
jo
or
je
push
fcmovu
jno
adc
test
lret
cmp
dec
in
jl
aas
pop
cltd
sub
inc
das
hlt
fsubrs
lods
and
sahf
sbb
push
mov
cmp
and
nop
pop
cmpsl
push
jg
imul
loop
test
dec
mov
scas
cmp
clc
imul
imul
jnp
loop
push
fisttpll
cld
aam
testb
stc
mov
cmp
mov
mov
repz
inc
xchg
push
sarl
mov
lods
je
dec
pop
sbb
pop
jecxz
xor
lds
scas
cwtl
lahf
out
lock
mov
mov
adc
adc
in
xchg
nop
fnsetpm(287
push
or
clc
call
mov
mov
mov
fwait
aaa
aad
dec
icebp
push
fistpl
shll
repz
pop
lret
call
notl
mov
dec
insl
enter
push
jecxz
lahf
cmp
fnstenv
lret
pop
or
push
cld
mov
fmul
inc
xchg
jbe
adc
sbb
xchg
jge
add
test
adc
dec
enter
arpl
data16
dec
push
mov
or
adc
mov
mov
push
fidivl
lea
sub
push
inc
push
pop
and
dec
jns
sahf
scas
jecxz
jnp
sub
xor
js
add
arpl
jo
int
loope
and
mov
xchg
mov
rorb
mov
lahf
and
js
xor
push
add
xchg
mov
dec
decl
fldenv
outsb
stc
popa
mov
sbb
mov
pusha
mov
pop
arpl
lods
pop
or
test
into
fcmovb
aad
jecxz
xchg
pop
loope
cmp
sbb
mov
and
cmc
pop
pop
lret
pop
leave
cltd
lret
stos
push
int3
scas
pop
addr16
sbb
or
rcl
jle
cmpsl
clc
mov
xchg
ljmp
fiadds
push
xchg
fimull
pusha
enter
aad
push
xchg
je
in
cmp
fsubrs
ficoms
add
add
pop
sub
jp
lds
loope
mov
sti
pop
sbb
ret
or
adc
imul
dec
aad
add
pop
push
mov
add
mov
adc
cmpsl
enter
int
push
test
jne
int3
lea
popf
sbb
inc
inc
jnp
insl
xor
inc
push
jno
cltd
sbb
add
fistpll
sub
sbb
stc
xor
pop
aam
movsb
push
dec
jge
fadds
xchg
jg
adc
or
lahf
and
xchg
stos
mov
jge
aas
test
cmp
int
cltd
pop
loope
mov
jp
in
push
js
inc
imul
mov
out
dec
imul
inc
mov
fdivl
mov
xor
data16
adc
dec
nop
inc
test
xor
xchg
lds
jne
add
xchg
hlt
push
dec
mov
dec
dec
negl
aaa
inc
add
push
push
aaa
lods
add
push
xchg
vmread
push
xchg
lahf
fbld
fstps
test
or
xor
xchg
addr16
leave
insb
xchg
push
push
pop
out
fsubrs
aaa
push
cvtpi2ps
fisubl
jne
test
dec
rorl
out
sub
dec
inc
imul
add
cmp
mov
ja
pop
dec
or
jnp
mov
and
into
push
arpl
jno
mov
xor
mov
mov
dec
jecxz
pop
fidivrs
jo
pop
mov
pusha
movq
and
inc
insb
xchg
cltd
or
mov
repnz
idivl
pop
js
xor
cmp
cmp
jns
in
push
les
fdiv
call
xchg
ljmp
in
ficompl
cltd
sarl
mov
xchg
and
jno
fwait
mov
pop
fdivs
js
fistpll
fmull
add
push
dec
mov
mov
mov
xchg
mov
pop
pusha
add
decb
xor
sbb
cld
pop
mov
pop
xor
out
repnz
outsb
outsl
scas
imul
and
and
mov
lods
pop
dec
mov
movsl
orl
pop
cmpsl
icebp
sti
sbb
sarl
ja
nop
mov
lea
cmp
mov
enter
aad
inc
jo
xor
mov
mov
call
insl
je
fwait
dec
imul
cmpsb
pop
es
outsb
mov
iret
push
sbb
mov
jo
dec
inc
xchg
xor
js
fstpt
mov
xchg
inc
mov
fistps
jns
xchg
jle
dec
imul
sbbb
movsb
dec
ja
inc
out
dec
js
or
rorb
mov
jmp
lods
shl
pushf
ljmp
outsb
fldenv
gs
test
iret
and
push
add
sub
test
testl
lcall
test
aas
xor
out
pop
dec
inc
mov
es
xchg
xor
mov
jno
in
lcall
dec
pop
cmp
sbb
andl
movsb
es
mov
fs
xchg
in
clc
jbe
jle
je
imul
jg
cmp
das
or
mov
mov
outsb
gs
lret
pusha
or
jbe
mov
lret
stos
adc
and
dec
fcmovne
pushf
jle
mov
clc
pushf
mov
pop
adc
mov
insb
cmpsl
jmp
faddp
inc
dec
rcrl
test
nop
repnz
mov
fcmovu
imul
popa
mov
pop
jo
xchg
cs
lea
loope
sub
sub
push
lods
push
adc
inc
inc
nop
nop
push
lret
pop
mov
inc
aam
lock
cmpsb
arpl
fidivl
mov
std
add
out
test
xor
dec
lods
jbe
daa
negb
lods
pop
mov
test
push
push
sbb
pusha
jl
gs
mov
push
pop
cwtl
mov
push
pop
inc
jmp
mov
pop
mov
push
sbbl
cmp
push
pop
jecxz
mov
or
fiadds
xor
xchg
adc
jge
pusha
in
icebp
sub
push
pop
stos
push
mov
outsb
sub
shrb
mov
xchg
jmp
fwait
lret
fcmovb
mov
dec
out
iret
aam
dec
xchg
imul
sarl
inc
cli
mov
ljmp
out
imul
mov
push
mov
into
push
test
push
popa
imul
addb
sti
mov
es
ret
mov
push
sarb
adc
adc
sti
mov
push
cmp
in
mov
inc
jnp
jns
or
ror
adc
push
xchg
pop
lcall
xor
aaa
mov
leave
xchg
sbb
mov
jae
mov
jmp
jae
jle
lock
push
and
pop
sbb
idivb
dec
in
out
sbb
pop
and
mov
cmp
test
aaa
or
stc
imul
add
movsb
xlat
xor
dec
mov
test
dec
imul
mov
and
pop
sti
jae
bound
dec
faddl
push
and
daa
jp
pop
lea
daa
pop
lret
push
cmp
sub
call
filds
orl
jecxz
push
jno
notb
fldcw
in
push
inc
adc
or
in
cmp
sti
adc
inc
jl
xor
js
insl
push
iret
sbb
ficoml
adc
sub
repz
adc
or
adc
or
loop
xor
mov
dec
into
push
xor
mov
das
adc
jb
and
inc
add
mov
push
pop
mov
xchg
inc
pop
cmp
in
xorl
xchg
add
pop
jo
bound
jb
xor
pop
lock
pop
stc
fs
fcmovne
dec
jge
inc
xlat
divb
mov
orps
insb
test
mov
dec
adc
jbe
cld
popa
mov
mov
adcl
xor
ljmp
call
xchg
push
icebp
mov
adc
jmp
fildll
or
aad
das
imull
adc
nop
lret
imul
insl
imul
sbb
hlt
mov
mov
mull
sub
pop
mov
shrb
ret
fstpt
es
push
inc
jecxz
sbbb
mov
nop
and
mov
mov
add
into
push
xor
cmp
jb
cmpsl
je
rcrl
mov
cli
clc
test
xor
push
js
mov
imul
loope
cmpl
pop
iret
xchg
and
jl
cmp
ja
cltd
inc
popf
out
pop
xor
dec
inc
stc
push
lcall
jmp
mov
add
ja
clc
cmpsb
cmp
add
ss
inc
int3
jnp
push
fnstsw
push
aaa
dec
jnp
mov
jno
dec
push
xor
inc
mov
ljmp
in
ja
dec
rolb
outsl
adc
dec
add
outsl
mov
sbb
xor
mov
or
xchg
inc
push
es
in
inc
dec
pop
jb
inc
into
lcall
stos
mov
int
shrl
mov
dec
cmp
xor
push
lcall
dec
addr16
sbb
repnz
jmp
inc
adc
lret
out
push
int3
iret
out
into
jno
sub
lret
cmp
loop
in
stos
jae
fisttpll
adc
or
dec
pusha
or
push
subb
out
out
add
test
lcall
lea
inc
mov
rolb
lret
sub
or
mov
sbb
dec
sbb
dec
repz
mov
push
lret
add
aaa
loopne
mov
cmpsb
mulb
mov
movsb
movsb
dec
mov
enter
scas
lcall
mov
xor
dec
xchg
mov
repnz
jle
stos
cmpsl
and
nop
ds
les
adc
sahf
jno
xor
adc
cmp
pop
dec
mov
lahf
gs
out
arpl
dec
cmp
hlt
jnp
fcomps
mov
mov
imul
dec
push
sbb
bound
cltd
stc
xchg
stos
dec
popf
nop
adc
movsb
mov
stos
sahf
movsl
mov
or
xor
cmc
aam
inc
and
jp
pop
sbb
mov
mov
pop
sarl
push
and
shll
sub
js
sarl
lcall
aad
xor
xlat
gs
imul
jl
and
xchg
fwait
dec
stos
loop
call
aad
jns
fbstp
dec
push
push
mov
into
jg
lock
sub
mov
test
pop
jb
sahf
call
fcomps
stc
sub
test
iret
aad
cmp
frstor
pop
je
xor
fmul
insl
cwtl
mulb
stos
or
pop
xor
lods
xor
push
push
cmp
out
fcmovne
push
arpl
das
cmp
push
push
cmp
push
hlt
inc
dec
add
test
lods
sarb
insb
and
xlat
xchg
test
mov
dec
or
mov
sub
scas
or
imul
cltd
xchg
lret
xor
pop
ljmp
dec
or
pop
data16
iret
adc
add
loop
gs
mov
and
fstl
test
inc
jl
rcl
mov
pop
push
inc
add
jns
mov
popa
pop
adc
pop
sub
loop
rcrb
jle
stc
adc
int3
mov
test
cmp
lret
fistps
cli
sbb
mov
mov
fidivs
mov
lcall
or
hlt
lret
xchg
aad
fsubr
push
cs
cmp
dec
test
sub
loop
out
pop
ret
outsl
sub
push
or
or
out
pop
xor
mov
lds
push
push
fisttps
jb
mov
idivl
or
cld
nop
scas
arpl
xchg
mov
cmp
ret
int3
mov
mov
dec
xor
cs
pop
jp
lods
mov
xor
push
push
add
sbb
add
xor
sbb
inc
jecxz
inc
std
jg
mov
dec
add
sbb
xchg
sub
xchg
enter
fcoms
bound
mov
mov
mov
rcrl
jecxz
mov
cmp
insl
loop
jb
in
roll
stc
inc
test
mov
test
std
pop
jae
sbb
cmp
test
arpl
xor
js
sbb
cwtl
rcl
lret
das
outsb
test
iret
xor
add
sbb
rcrl
pop
scas
lock
int3
cmp
jge
cmp
imul
cmp
fwait
and
push
nop
jb
ja
push
push
sub
sub
lds
sub
fmull
sbb
push
mov
xchg
and
lods
pop
repnz
popa
mov
xchg
add
ds
sub
movsl
sbb
or
rclb
ror
lcall
hlt
outsl
xchg
mov
cltd
push
stos
fiadds
stc
jg
add
push
popf
icebp
out
clc
int3
insb
adc
clc
test
mov
arpl
mov
inc
or
mov
loope
sub
imul
sbb
push
jnp
inc
sub
mov
shlb
xor
ret
ret
jecxz
mov
sbb
jl,pn
pop
rcrl
stos
xor
mov
mov
dec
out
push
cmp
jecxz
popf
jp
push
iret
pop
or
bound
rcrb
cmp
or
and
orb
push
mov
xchg
and
shrb
add
jb
and
mov
notl
ja
jnp
loope
mov
ret
sbb
mov
xchg
adc
lcall
mov
push
cwtl
xchg
cmp
imul
xchg
test
xchg
and
aam
aaa
inc
inc
test
jp
sbb
and
adc
mov
xlat
push
ja
int3
inc
mov
dec
stos
sbb
xlat
lea
sahf
into
hlt
adc
adc
aaa
mov
fstl
sbb
mov
adc
aaa
or
mov
mov
or
cmc
sbb
pop
push
sbb
fstl
and
inc
pop
mov
rcl
jns
in
xchg
test
rorb
rorl
out
xor
cmpsb
sub
or
xor
mov
pop
inc
aaa
std
out
imul
pop
movsl
dec
fldcw
mov
fnstsw
in
pop
rol
mov
sub
jno
pop
aaa
xchg
lret
mov
pop
inc
and
mov
ret
repnz
test
nop
out
in
sbb
outsl
fdivrs
cld
sub
cmpsl
sub
ret
incb
and
in
insb
sub
outsb
xor
popl
mov
loop
dec
aas
sbb
jle
cmp
mov
shlb
xlat
or
mov
inc
sbb
das
test
inc
clc
sbb
mov
shrl
jecxz
push
roll
arpl
inc
imull
andl
sti
fstl
mov
sarb
leave
rorb
fistpll
stos
lock
jle
popf
xor
js
fcompl
or
and
mov
add
fcomp
mov
movsl
test
adc
push
mov
inc
push
and
mov
add
jbe
outsl
add
test
xchg
test
je
dec
imul
cmp
outsb
sbb
and
xor
sub
mov
push
push
jg
shlb
lret
push
mov
cvtpi2ps
notb
adcl
jae
push
cmp
jmp
and
sbb
fadd
pop
and
js
adc
and
outsb
mov
repz
lret
inc
fbstp
mov
jmp
cmpl
or
push
in
mov
aad
gs
push
popa
icebp
mov
testb
stos
mov
je
mov
xor
movsb
inc
rorl
push
popa
loopne
pop
sbb
scas
scas
xchg
sar
dec
mov
popa
inc
hlt
test
xchg
aam
push
cmc
rclb
enter
cmpsl
aas
shr
push
shl
mov
xchg
lret
clc
push
dec
cli
inc
mov
divl
fistl
xchg
fwait
mov
jo
push
mov
mov
jg
shlb
adc
insl
push
mov
mov
popf
es
pop
pop
inc
imul
sub
in
sub
xchg
in
incb
sub
cltd
and
insl
push
orl
mov
push
mov
adc
cltd
fnsave
arpl
jo
mov
shl
cmp
icebp
out
sbb
sub
scas
pop
dec
mov
add
pushf
and
xlat
insb
ja
dec
push
adc
xor
cmc
lret
stos
add
loop
cli
lds
pop
insb
jle
xchg
or
cli
jg
mov
sbb
into
movsl
dec
fisttpll
xor
or
fcomps
add
jne
lds
imul
clc
push
in
shrb
jno
inc
push
bound
aam
aaa
mov
adc
cmp
cmp
rorl
lods
out
sub
adc
inc
mov
sti
fs
cmpsl
mov
lret
mov
xchg
dec
mov
cwtl
aas
lret
add
push
mov
ret
add
or
mov
push
pop
dec
adc
sar
and
adc
fwait
test
lods
out
jp
jg
xchg
daa
and
pop
jbe
lods
daa
cmp
imul
sub
popf
std
repz
pop
pushf
insb
push
flds
loop
inc
pop
subb
or
sbb
shlb
in
jne
mov
dec
out
xchg
mov
xchg
mov
xchg
inc
cmp
or
push
jbe
je
or
xor
pop
dec
in
add
fcomps
ljmp
xchg
pop
cmc
addr16
xchg
sti
inc
mov
fidivs
mov
test
xchg
inc
enter
pop
in
adc
test
mov
jns
stos
cli
push
mov
adc
dec
adc
jecxz
movsb
fists
mov
push
out
xor
les
hlt
cwtl
or
mov
xor
enter
fs
jno
call
mov
lahf
cmp
lret
test
jg
imul
jae
adc
mov
and
add
or
cmp
pop
inc
lret
jns
xchg
inc
aad
cs
add
mov
test
je
addr16
xor
fcoml
sub
pusha
testl
xchg
scas
cmove
sahf
xor
popf
cs
xor
xor
or
mov
push
lret
icebp
stos
and
lret
inc
arpl
xor
xor
stos
add
pop
sti
cmp
jno
pop
and
stos
or
stos
add
cs
dec
pop
xchg
mov
jns
pop
orl
decb
jge
cmc
cmp
or
iret
dec
xchg
cmp
mov
fsubrs
pushf
pop
cmp
int
xlat
in
in
cmp
push
fdivp
and
xchg
cmpsb
lcall
leave
dec
aaa
aad
loope
adc
mov
movsl
jl
push
enter
inc
test
gs
adc
mov
cmpsb
shrb
repnz
and
mov
sub
andl
stos
cli
test
mov
or
fistpll
dec
mov
repnz
sub
shrl
pop
and
out
and
cmp
sbb
mov
cmp
sub
mov
in
loope
cmp
stos
ret
cmp
lret
enter
mov
cmpsl
movsb
pop
cmc
outsb
xlat
aas
dec
lea
popa
cmp
jp
sbbl
and
shlb
mov
or
inc
jb
sbb
mov
cmc
or
mov
repz
xor
mov
mov
dec
cmp
pushl
xor
lods
ror
int3
cmp
mov
mov
xor
addr16
imul
dec
sahf
jb
jge
push
pop
sbb
sub
sub
inc
loopne
xchg
test
in
pop
xchg
div
add
testl
push
shll
xchg
lea
test
lea
adc
sub
xor
mov
mov
mov
je
jecxz
sbb
dec
or
cld
fxch
pusha
sub
loop
mov
or
jno
test
idiv
stos
pandn
mov
mov
and
mov
dec
negb
mov
dec
fimuls
aas
adc
lret
mov
dec
es
lods
jle
sarl
or
scas
call
push
inc
adc
lret
shlb
dec
shlb
inc
xor
cmp
dec
cld
enter
sub
pop
orb
nop
lahf
call
xchg
dec
push
pop
pop
sahf
lret
jno
rorl
js
or
adc
lock
jp
je
cmpsl
mov
insl
out
cld
fldcw
lret
mov
icebp
scas
jl
or
sub
mov
daa
cmp
outsl
push
gs
push
add
and
pop
lds
fwait
aad
mov
pop
fiaddl
cmc
mov
lock
inc
adc
dec
aas
xor
popf
or
inc
mov
dec
sbb
inc
mov
and
mov
fs
rolb
lock
pop
je
mov
stos
add
into
pop
in
out
xor
inc
push
out
out
ja
leave
sbb
fs
lods
xchg
movsl
fwait
cld
mov
mov
mov
daa
nop/reserved
inc
dec
jb
cmp
aas
cmpb
gs
or
cmp
inc
mov
shll
sub
shll
inc
outsb
and
rorl
xor
sti
aas
or
pop
push
insl
push
pop
and
or
pop
push
sbb
arpl
mov
xor
inc
icebp
jmp
sbb
push
sbb
loopne
cltd
or
rcr
les
and
dec
xor
sti
lds
inc
rorb
lret
push
mov
pushf
inc
test
lea
in
jle
mov
test
jns
inc
fcoms
out
pushf
cmp
gs
cld
insb
cli
popa
jae
loop
add
ficoms
pop
sbb
mov
add
add
mov
enter
in
adc
mov
cmc
mov
fcmovbe
mov
cmp
ds
xor
or
iret
xor
cld
pop
add
or
test
ret
fcmovu
test
dec
or
gs
mov
hlt
add
mov
add
push
lret
in
jae
xor
mov
cli
xchg
enter
cmc
pop
clc
mov
out
adc
and
inc
mov
icebp
jb
push
outsl
mov
and
pop
pop
push
lds
jnp
cmp
add
sub
sbb
and
jge
lock
mov
fidivs
add
dec
loop
mov
cmpsl
mov
adc
xor
in
inc
jns
inc
and
test
test
outsl
xor
add
dec
and
hlt
jbe
jb
stc
out
dec
loop
ja
je
xlat
mov
and
out
add
mov
ret
mov
pop
je
call
add
or
jp
aad
xor
shll
jae
lret
push
pop
mov
push
pop
mov
popl
dec
bound
or
outsl
shld
cmp
je
sbb
out
pop
addr16
push
push
jo
in
imul
cs
jp
jl
adc
add
sbb
js
and
loope
fisubl
pushf
xchg
dec
xchg
push
cmpb
xor
test
adc
cs
fs
fs
fcmovu
and
pop
inc
loop
or
xchg
jne
pop
mov
std
lret
ficoms
mov
mov
sbb
push
or
scas
push
cmp
xchg
add
outsl
pop
popa
faddp
es
data16
stos
test
test
mov
ficoml
es
pop
jp
cmp
xor
leave
xchg
and
cs
inc
js
jecxz
cs
mov
repz
xor
adc
mov
push
enter
mov
js
sub
das
movsb
movsb
or
mov
pop
push
mov
stc
jle
stc
xor
pop
sub
push
lahf
adc
cmp
mov
push
add
and
daa
mov
in
lret
jnp
ret
jo
jp
cmp
inc
push
pushf
dec
rorl
jl
ljmp
and
int3
sbb
adc
out
add
mov
loopne
mov
inc
cmp
ja
pop
xchg
mov
push
push
fsubrs
mov
lcall
pop
lods
push
daa
adc
or
cmpsb
inc
xchg
adc
mov
test
lahf
adc
scas
pop
cmp
push
sub
fsubrs
out
add
loope
xor
and
loopne
test
fwait
ss
cmp
dec
movsl
in
dec
cmp
sub
mov
sub
pop
jecxz
mov
ficoms
push
repnz
jno
xorb
cmp
and
jge
adc
cmp
and
dec
adc
fidivl
out
out
sbb
fwait
movsb
enter
hlt
arpl
pop
in
mov
aaa
dec
rcrb
dec
mov
and
mov
lahf
and
repz
pop
cs
jbe
dec
jns
push
xchg
mov
xor
out
jb
or
add
subl
xchg
jns
push
shl
jmp
mov
adc
outsb
insl
enter
pop
and
dec
sub
loope
pop
and
adc
ljmp
adc
adc
xchg
lods
jo
mov
or
jg
lea
cli
xchg
add
jnp
mov
daa
cltd
or
push
xchg
pop
test
inc
ucomiss
dec
inc
dec
test
nop
ret
cmc
std
push
mov
subl
xchg
dec
cltd
enter
mov
fxch
adc
sbb
push
ret
add
loop
or
aad
mov
out
dec
sbb
call
inc
jp
add
push
push
cmp
and
sub
xchg
push
pushf
mov
mov
leave
mov
xlat
push
sub
inc
test
mov
cmpsl
xchg
fistpll
jno
xor
or
int
fbld
rclb
mov
aad
sbb
rcrl
fsubrl
and
fbld
dec
lahf
lods
sbb
mov
and
inc
add
jo
negb
xchg
arpl
adc
aad
scas
cmpl
mov
enter
into
pushf
jecxz
jle
lahf
sbb
dec
add
int
sub
negl
aam
jne
loope
loope
adc
cmp
ret
loop
xchg
int3
movlps
nop
aad
mov
rorb
adc
mov
pop
inc
jbe
or
aam
mov
testl
repnz
out
push
or
pop
sti
imul
cmp
adc
sti
add
shl
cs
mov
push
sarl
lcall
sbb
push
test
add
out
push
jp
xchg
xchg
xorl
sub
mov
pushf
ljmp
push
loope
repnz
out
data16
fimull
movsb
mov
fsubp
lds
andb
sub
fs
sub
in
pushf
addr16
add
rcrl
ss
mov
mov
sbb
ja
sub
std
stos
popf
test
out
dec
movsl
push
sub
sbbl
sarb
inc
mov
cld
hlt
sub
dec
or
in
inc
mov
adc
scas
les
lods
aad
add
xor
scas
lock
pushf
scas
add
pop
mov
int
pop
jno
xchg
mov
stos
bound
cmp
xor
lea
aad
pop
loopne
loop
push
into
addb
mov
stos
inc
xchg
fadd
push
add
out
lret
sub
out
adc
add
sub
fwait
mov
fnstcw
call
sub
std
push
mov
add
push
cmp
mov
mov
mov
cld
imul
shll
daa
dec
dec
jbe
sub
ss
fistl
cwtl
push
cli
shr
lock
jne
movsl
cmp
das
movsb
sarb
add
dec
ret
aas
data16
jmp
jl
push
ds
les
sbb
loope
ret
jae
push
cmp
mov
jl
shrb
cmp
lods
es
mov
sub
mov
scas
sub
add
outsb
sbb
lock
add
mov
in
ret
outsl
xchg
aad
push
or
inc
sahf
out
les
das
in
daa
mov
ja
iret
xor
test
fisttpll
add
mov
std
dec
scas
out
js
call
xchg
pop
cs
mov
outsb
jns
push
iret
mov
arpl
loop
pop
lods
inc
dec
mov
push
into
cwtl
xor
sub
dec
adc
rorl
sub
mov
pushf
jnp
pop
adc
or
mov
push
stos
jmp
std
ret
popa
sbb
mov
dec
lret
dec
js
shlb
jge
bsf
sub
jecxz
xchg
mov
push
adc
popf
jbe
inc
fldenv
inc
mov
add
shlb
and
aas
cmp
icebp
sti
mov
iret
mov
cmp
mov
add
xchg
xor
clc
mov
sti
jb
pmaxub
or
mov
sbb
mov
mov
mov
mov
mov
adc
cmp
loope
aas
xchg
fs
mov
cld
dec
and
cmp
mov
dec
xorl
push
push
lret
out
sub
adc
fisubrl
fimuls
enter
cwtl
outsl
pop
push
cmp
inc
sub
push
dec
push
and
pop
pop
or
enter
dec
adc
aad
cmp
cmp
push
ljmp
dec
or
mov
mov
js
rcrb
popf
sahf
jmp
pop
cmc
cld
mov
gs
push
fildll
mov
or
mov
and
pop
outsl
adcl
in
in
fidivrs
into
loop
mov
xor
cmp
xor
imul
out
mov
stc
lea
sbb
xor
xor
dec
pop
sbb
loopne
sahf
adc
rorb
dec
lock
cmpsb
lret
lahf
mov
daa
xor
xor
notl
cs
ret
adc
pop
adcl
sbb
or
mov
scas
cmpsb
sbb
xchg
mov
mov
int
idiv
iret
fbld
sub
rcll
sub
push
xchg
pop
aas
add
dec
jno
mov
jle
mov
cltd
dec
dec
dec
push
out
lahf
adc
ljmp
scas
dec
out
fiaddl
scas
dec
scas
rorb
lahf
jmp
lods
adc
imul
shl
push
lahf
and
es
xor
mov
pop
dec
sub
mov
cmp
adc
xchg
lcall
rcl
inc
lock
pop
popa
cs
mov
and
sbb
sub
repz
mov
ljmp
lods
mov
test
out
test
push
fadds
movsb
test
jnp
sub
sub
ss
push
mov
cmpl
dec
push
psrld
mov
nop
sbb
dec
xchg
push
iret
jp
imul
dec
xchg
cmc
and
xor
mov
lock
xor
and
xchg
stos
out
les
mulb
stos
mov
dec
icebp
das
add
xchg
mov
outsb
pop
push
sarl
jb
scas
daa
out
jno
mov
inc
pop
daa
stos
lcall
xor
popa
stos
and
pop
sbbb
or
sub
cmc
lcall
adc
xchg
loope
jmp
pop
add
fisttps
jecxz
pop
les
daa
cs
cld
das
push
gs
add
fstpt
xchg
fildl
sub
push
bound
dec
das
lea
jge
adc
sbb
std
jbe
xchg
cmp
fwait
icebp
push
and
pusha
adc
pop
iret
push
outsl
aas
stc
dec
test
icebp
jle
dec
int3
mov
mov
mov
test
repz
iret
push
and
mov
sbb
pop
dec
cmp
ret
ja
pop
adc
push
repnz
in
mov
jmp
xchg
movsl
mov
cmpb
inc
pusha
mov
adc
sbb
push
or
out
outsl
lret
loop
rcll
mov
push
lahf
loope
fstps
push
mov
inc
stos
or
movsb
test
inc
mov
lods
out
jle
inc
xor
jmp
add
adc
shll
pushf
cmp
mov
or
mov
aam
loop
fs
cwtl
cmp
aaa
mov
int3
adc
iret
add
iret
xchg
push
sbb
inc
cmpsl
or
inc
cmp
dec
inc
dec
or
out
into
pop
cwtl
push
jmp
int
push
pop
hlt
js
stc
hlt
xlat
test
out
insb
adc
aas
dec
icebp
hlt
dec
nop
mov
cmp
dec
mov
adc
or
imull
add
insl
pop
sbb
jb,pt
fcoml
inc
push
sti
fcomp
lods
lds
and
xchg
add
jl
test
jg
lock
push
dec
and
daa
sbb
fildl
dec
jecxz
aam
xchg
jg
mov
dec
rcrl
sbbb
mov
pop
mov
jge
pop
xor
stos
xchg
sarb
xchg
into
sarl
add
adc
pop
lret
lret
lods
loope
mov
stc
inc
pop
jmp
mov
mov
xchg
pop
adc
cmpsl
sbb
movsb
pop
inc
mov
test
fisttpll
das
xor
pop
and
shl
or
mov
insl
jnp
hlt
movsl
ds
ss
popf
shrl
xor
hlt
cmc
push
out
scas
rol
sub
clc
arpl
mov
enter
sarb
inc
cwtl
shlb
jno
adc
jns
pop
sub
push
aaa
cltd
aas
int3
inc
or
aaa
outsb
cmp
sti
cmp
cmp
lock
push
loope
fistpll
jae
jl
fst
pop
rol
mov
test
shlb
jns,pn
push
pop
and
push
out
or
cli
add
rol
gs
add
notl
test
lret
and
outsb
mov
loop
push
push
insb
mov
add
push
fdivl
sbb
mov
loope
enter
sbb
add
fiaddl
lds
pop
or
les
or
and
lock
xor
imul
mov
sbb
fsub
enter
fdivs
or
into
add
dec
fimull
adc
hlt
sub
fldenv
jo
addr16
aaa
dec
clc
fsubl
rcr
ss
shlb
push
dec
push
cmp
jo
mov
and
int
idivb
stos
imul
jns
arpl
mov
mov
cmp
cmp
and
or
inc
mov
mov
sbb
sbb
sub
lea
test
push
cmp
adc
fsts
in
rcll
es
popf
sub
pop
in
shrl
xchg
adc
adc
pop
and
or
adc
adc
mov
gs
pop
xor
call
das
mov
cld
inc
dec
fmuls
or
pop
add
mov
jp
inc
cli
xchg
ljmp
pop
and
cmc
in
inc
pop
push
or
jle
les
ja
sub
and
in
iret
pop
push
std
push
out
hlt
das
aam
xchg
cmpsb
and
or
es
pop
int
jmp
daa
ja,pt
cmp
scas
movsl
sbb
cmc
push
fmuls
out
out
add
sub
adc
cmpsl
bound
push
cmp
mov
iret
add
xchg
into
loopne
jne
jle
sbb
out
addl
and
mov
stc
jl
pushf
stos
leave
cmc
xchg
and
add
out
add
mov
cmp
icebp
sti
mov
add
mov
cmp
or
pop
xchg
lea
ljmp
loop
pop
push
jmp
pop
mov
lcall
int3
in
xchg
sbb
jne
sti
loope
fiaddl
int
add
ret
fidivrs
cltd
xchg
sti
enter
mov
sub
mov
movl
inc
stos
cmp
jl
xor
sub
push
lods
add
add
cwtl
imul
or
std
sbb
fcmovnb
dec
pop
or
jns
fldt
adc
add
push
jbe
dec
mov
mov
jp
rclb
mov
jne
sub
sub
imul
xchg
pop
arpl
arpl
jnp
lods
in
push
enter
mov
orl
sub
ljmp
adc
cwtl
jne
jle
pop
popf
int
lock
icebp
ret
fsubl
rcrl
das
shlb
in
or
and
inc
repnz
mov
stc
xor
add
sbb
mov
mov
cli
jae
out
inc
xor
repnz
les
xorb
testl
or
mov
ret
in
and
add
push
cmp
aas
mov
aam
clc
mov
pop
call
jae
pop
dec
fnstsw
iret
repnz
aas
jecxz
fs
test
aam
or
pop
adc
and
mov
mov
jmp
es
cli
pop
aad
mov
push
in
mov
xor
dec
scas
rcll
mov
inc
inc
in
sbb
pop
sbb
pushf
sbb
jg
mov
shrb
sub
cmp
and
mov
jno
jne
lss
jp
test
fsubp
mov
imul
scas
out
mov
or
and
fwait
pop
sahf
sahf
push
lds
cmp
imul
movsl
out
test
jne
jmp
push
dec
add
push
ja
test
jge
and
fistpl
fidivrs
inc
es
rcrb
push
adc
fcoms
mov
and
and
mov
repz
test
int
inc
push
jg
incl
sub
bound
flds
cmpl
mov
ljmp
sahf
jae
mov
xchg
inc
mov
mov
subb
sbbl
xor
clc
imulb
mov
pop
adc
or
sub
sti
xchg
adc
out
pop
ljmp
mov
pop
fisttps
cmp
push
fs
fs
das
sbb
arpl
lods
adc
push
push
in
xor
adc
xchg
push
xchg
dec
jp
mov
cmpsl
and
or
lods
sbb
add
add
leave
pop
inc
in
outsl
and
xchg
cmp
fldl
push
xchg
pop
dec
test
and
cltd
mov
push
push
jo
jecxz
fistps
xchg
idivb
cwtl
xor
call
ljmp
xchg
sub
gs
jnp
jne
mov
negl
ss
dec
in
repnz
xor
mov
sub
xor
cmp
mov
lret
aas
repnz
sti
xchg
sahf
mov
or
cld
movsb
and
inc
jne
push
cmp
xchg
jae
add
les
dec
das
int
lods
lods
mov
ficompl
pop
repz
mov
xor
movsb
dec
cmp
sbb
out
repz
test
iret
xor
orb
ja
mov
and
mov
adc
arpl
out
lea
add
lret
mov
cmovne
out
subb
xabort
add
sub
movsb
and
xor
popa
jmp
push
lock
fistl
xchg
pop
xor
es
mov
enter
loopne
mov
sub
and
or
sbb
mov
out
push
mov
add
sub
jge
dec
add
in
jbe
pop
xor
cmp
jge
jne
jge
and
or
push
aad
xor
xchg
into
loopne
jo
inc
mov
lea
ja
mov
clc
mov
pop
pop
insl
call
xchg
repz
testb
xchg
cmp
in
xlat
jge
inc
add
pop
fwait
dec
xor
sbbl
mov
sbb
mov
fdiv
cmpsb
in
mov
inc
push
out
mov
cld
mov
scas
or
scas
adc
pop
je
mull
sub
fadds
mov
mov
mov
mov
ret
push
jo
adc
inc
dec
mov
and
pop
ds
xor
int3
pop
ds
repnz
iret
movsb
int3
jne
icebp
adc
jnp
loop
movsl
add
and
les
inc
jbe
inc
cmpb
sub
outsb
jae
jae
xchg
in
cmp
idivl
xchg
shl
adc
xchg
mov
test
inc
jg
lock
dec
fimuls
jmp
mov
or
es
pop
push
sub
stc
sarb
or
imul
and
popa
pop
sbb
les
push
popf
lret
mov
lcall
idivb
mov
pop
or
adc
sbb
add
sbbl
int3
pusha
in
pcmpgtb
mov
xor
mov
cli
mov
mov
mov
xor
sub
cld
adc
mov
push
adcb
xchg
icebp
mov
inc
dec
jmp
int3
cmp
mov
loopne
lcall
call
subps
push
mov
sbbl
xor
cmp
insl
pop
mov
mov
in
cld
push
jno
popf
sub
push
jnp
out
ret
mov
icebp
jecxz
push
jp
sbbb
test
pop
mov
push
cmp
and
out
in
into
inc
arpl
ffree
sbb
lock
faddp
or
gs
mov
pop
lcall
fdivrl
mov
dec
roll
inc
inc
push
xor
inc
jge
sbb
int3
or
push
add
pusha
jno
hlt
pop
stc
dec
data16
faddp
jle
out
nop
bound
stos
aaa
cmp
cmc
les
test
xor
clc
push
mov
and
sbb
sbb
mov
ds
pop
cs
jns
ljmp
xlat
jno
ss
cwtl
or
xor
mull
sbb
xchg
negb
cmp
out
mov
inc
aam
dec
sar
xchg
dec
test
push
dec
shll
push
add
mov
jp
outsb
not
movsb
lret
out
hlt
out
cmp
mov
dec
cs
pop
nop
inc
xchg
push
mov
enter
out
cmpl
pop
scas
or
test
inc
xchg
aaa
loopne
push
fsubr
and
jg
lret
mov
cmp
jae
leave
and
sub
ja
pop
ret
lods
sbb
jno
jg
jnp
sub
scas
push
out
fs
mov
jl
shlb
hlt
pop
pop
dec
push
lahf
adc
adc
pminsw
xchg
in
mov
add
adc
fdivrl
lods
jo
jl
enter
sub
incl
aad
in
lock
pop
cmp
inc
push
fwait
loopne
add
adc
pop
or
cmp
adc
icebp
mov
inc
jecxz
cvtpi2ps
adc
jl
fnstcw
dec
mov
sub
sub
fdivp
rol
sbb
adc
loop
mov
jne
jbe
or
addr16
fbstp
in
xchg
jecxz
test
lods
and
sbb
cmp
inc
loopne
mov
je
cmc
push
sbb
les
add
popa
mov
push
cmc
outsb
sub
adc
mov
mov
sub
mov
or
orl
or
push
insb
rcr
sbb
data16
mov
stos
imul
scas
dec
mov
nop
mov
cmp
sub
pop
in
test
test
push
mov
pop
sub
push
outsb
fistl
or
lock
cmp
fdivrl
into
pop
gs
xchg
mov
test
sub
ljmp
movsl
xchg
mov
mov
inc
jne
ds
lods
add
ds
clc
sti
icebp
xchg
jne
sub
jecxz
or
pop
cmp
add
or
push
scas
add
inc
xorl
rcr
add
mov
sub
xchg
pop
xchg
repz
pop
cmp
int3
fnsave
fwait
adc
stos
inc
aam
lahf
add
jno
cmc
mov
push
jb
dec
pusha
adc
iret
push
fs
int
xchg
xor
inc
js
stos
dec
adc
dec
shlb
xor
in
sub
int
push
push
pop
hlt
shll
shrb
les
ret
imul
sti
dec
fs
outsl
mov
into
mov
pop
and
mov
mov
mov
sub
pusha
push
pusha
cmpsb
rclb
sbb
test
fs
or
xor
jle
add
xor
jo
enter
or
stos
hlt
ja
lods
and
out
popf
jmp
int
nop
sub
sbb
test
imul
xor
or
and
ja
ss
stos
fucomp
pushf
xchg
and
addr16
sbb
pop
stos
jb
jl
test
mov
inc
mov
inc
xor
cmp
fstl
ljmp
roll
mov
jae
sub
push
inc
cld
repnz
imul
cmp
addb
jl
fsubrp
mov
inc
push
push
cmp
iret
or
mov
subl
mov
and
fcomip
push
mov
dec
mov
ss
scas
adc
loopne
int3
imul
jae
hlt
sti
mov
and
notb
shll
adc
add
dec
test
mov
data16
icebp
pop
mov
les
adc
adc
push
xor
sbb
lret
xor
mov
and
lods
mov
cli
jbe
jmp
inc
mov
enter
or
mov
push
lcall
lcall
imul
mov
sub
aam
mov
out
lret
fstpl
dec
pop
inc
xchg
push
mov
xchg
jmp
out
xlat
xchg
pop
sbb
daa
aaa
jae
cltd
pusha
lea
cwtl
lcall
push
pushl
sub
sub
dec
std
pop
push
fsubs
add
in
subb
jge
sti
sbb
addr16
xor
sti
rol
dec
push
mov
gs
push
sar
mov
adc
aad
jnp
add
pop
decl
sub
mov
in
inc
lahf
jge
sbb
sbb
jp
cmp
xorl
insb
pop
jae
scas
sub
faddl
jg
xchg
pop
mov
ljmp
sub
popa
jge
xchg
mov
push
lock
orb
popa
les
sub
lock
jo
iret
loope
clc
cmpsb
vmwrite
dec
dec
mov
je
out
sub
fs
push
int
xor
test
leave
stc
inc
jnp
repz
outsb
stos
push
mov
outsl
movsb
cli
mov
mov
imul
xchg
das
int
test
lds
push
add
cmpsb
xor
iret
ret
xor
xchg
fcomps
pop
mov
lock
add
jg
dec
xchg
jg
fwait
in
push
mov
or
sahf
push
mov
testl
pop
js
jo
pop
mov
jp
xchg
and
mov
sub
hlt
or
sbb
dec
jns
inc
fldt
sub
push
mov
inc
iret
xor
xchg
aas
loopne
ret
add
dec
int
sub
pop
ss
pop
lock
cmp
dec
mov
lcall
push
stos
inc
ds
push
jns
jmp
lea
push
sub
mov
ljmp
xor
gs
mov
adc
adc
xchg
dec
sbb
fsubrl
add
sahf
push
aas
iret
push
outsb
xlat
cltd
mov
xchg
cwtl
jmp
push
outsb
lahf
or
ja
es
fwait
rorl
imul
dec
push
sahf
mov
mov
and
inc
jmp
mov
lds
mov
inc
xchg
cmp
pop
inc
loop
lret
ss
lds
cld
adc
sbb
inc
addr16
fisubrl
inc
sub
stc
stos
xorl
sti
das
mov
insl
jb
sti
jp
inc
xor
aam
inc
outsl
xchg
arpl
dec
loopne
jl
jnp
cmc
hlt
mov
int
iret
ljmp
mov
inc
jp
data16
in
dec
mov
pop
cwtl
popa
imul
jmp
hlt
xor
pusha
test
or
sub
push
cmp
je
and
fwait
in
lods
sub
lea
rorb
arpl
push
in
stos
int3
mov
push
fsubl
and
sbb
cli
xor
push
int
cmp
repz
xchg
cs
jg
dec
out
test
cmp
dec
imul
jge
dec
mov
xchg
lea
xchg
neg
test
ror
mov
clc
outsl
pop
pusha
in
out
xchg
repz
xor
and
mov
inc
pop
cwtl
lret
lahf
sbb
movsb
mov
push
imul
jge
jnp
jno
outsb
out
test
sub
adc
stos
outsl
pop
sbb
addl
gs
sbb
jmp
cmp
mov
imul
mov
xchg
sbb
push
or
jg
scas
cmc
leave
aam
les
shl
loop
and
lock
cli
std
enter
clc
cmp
lahf
inc
jb
push
cli
sbb
pop
mov
add
jmp
dec
clc
lods
shll
jle
stos
dec
scas
mov
cmp
sbb
jns
mov
lret
jno
mov
sub
orb
dec
xchg
cs
and
repz
sti
xor
jo
mov
addr16
cld
pop
call
dec
addb
sbb
sahf
cmp
roll
adc
inc
xor
movsb
into
ss
shr
mov
out
sbb
cmp
ds
and
jl
into
repnz
lcall
imul
inc
rcrl
leave
xor
lcall
push
ja
pop
sbb
push
jmp
rorb
orl
mov
loopne
dec
lods
pop
xorb
int
loope
pop
in
fnstenv
xchg
pop
push
adc
fidivs
aas
test
mov
xlat
inc
mov
inc
scas
add
ret
lea
loope
xor
mov
cmc
shlb
xor
fidivs
cli
jo
jl
pop
jmp
pop
pop
int
fadd
cmc
int
cwtl
jl
fildl
sub
pop
xchg
subl
aaa
imul
sub
sub
int3
dec
cltd
movsl
jge
fbstp
add
push
cmp
clc
or
xchg
into
jg
imul
js
lea
lods
mov
push
mov
mov
pushf
and
and
pop
xchg
outsb
mov
pop
shll
sahf
hlt
mov
into
das
or
out
push
mov
xchg
pusha
loopne
mov
dec
subl
stc
mov
test
aam
sbb
arpl
sbb
cmpb
jb
mov
cltd
shlb
fbld
cli
movsl
or
xor
sbb
enter
out
pusha
sbb
iret
cmp
push
fwait
xchg
mov
fucomp
lret
fcmovnu
mov
xchg
int
pop
shlb
fildl
cs
sbb
push
sub
sub
arpl
mov
int
popa
xchg
add
add
xor
pop
add
xor
cmp
adc
sbb
bound
add
ret
add
sbb
xor
xlat
xchg
inc
xor
lods
jmp
mov
in
lcall
out
inc
adc
decl
testl
clc
push
adc
or
loop
mov
push
or
lea
enter
xor
popf
stc
dec
sbb
test
push
sbb
sbb
cmp
nop
jnp
movsb
mov
dec
ja
icebp
jae
daa
or
das
push
insb
push
popf
sub
xor
insb
adc
cmpsb
stos
int
sub
and
and
xchg
adc
arpl
pop
push
call
adcl
adc
add
rorl
test
and
pop
repz
lock
clc
sti
mul
pop
test
jne
adc
int
pop
mov
lret
xor
cs
mov
add
jnp
jo
cmp
iret
repnz
xchg
push
sub
rcrl
pop
ret
int
mov
adc
mov
sub
dec
lret
in
push
rorl
mov
fcomp
jae
add
mov
jl
stos
imull
jg
adc
rclb
jnp
pop
mov
lcall
push
lret
popf
movsb
mov
incl
push
cmp
stc
xchg
sub
xchg
js
jbe
testb
mov
pop
inc
push
into
pop
lret
mov
ret
mov
sarl
cmp
adc
movsl
sub
stos
adc
std
je
sub
das
imul
dec
ljmp
aaa
imul
addr16
push
js
mov
iret
lods
and
shl
dec
ret
adc
movsl
stos
push
xor
ljmp
mov
stos
sbb
or
mov
loopne
xchg
sbb
mov
mov
mov
das
rcr
lds
clc
lea
dec
faddl
rsm
push
or
mov
mov
mov
sti
xor
xchg
jge
sahf
mov
mov
cmp
lea
jnp
out
fyl2xp1
pop
mov
xor
jp
pop
cmp
jb
shlb
xor
jns
shll
xchg
mov
xchg
push
adc
movsb
sahf
xchg
cmp
scas
pop
rcrb
sub
insb
mov
push
pop
pop
push
mov
inc
jmp
adc
push
imull
mov
inc
sbb
mov
addb
fsubp
rolb
push
push
iret
jl
in
sub
pop
xchg
pushf
inc
cmp
sub
out
and
out
pop
repnz
push
jbe
call
sbb
and
ds
mov
test
inc
mov
in
mov
mov
xor
insb
aad
mov
push
stos
repnz
xor
ss
mov
inc
fadd
jns
jo
mov
scas
jecxz
mov
addb
imul
push
lds
inc
sub
out
inc
test
sti
not
jae
and
cmp
cmp
rclb
ja
pushf
je,pt
out
int3
and
mov
mov
push
pop
dec
out
pop
pop
hlt
enter
cmp
aad
popa
adc
cli
dec
out
jae
xor
test
test
mov
loope
jp
sbbb
int3
test
pop
dec
loopne
push
imulb
jl
or
jae
mov
dec
jb,pn
jne
int
sbb
pop
sub
pop
push
xchg
in
in
int
repz
out
fxch
push
push
fsubrl
or
scas
lds
ficoml
sahf
lea
cli
addr16
push
insb
dec
adc
fcompl
jl
xor
dec
dec
adc
out
inc
xchg
js
push
jne
hlt
xchg
or
push
ds
push
xchg
cmp
dec
mov
popa
out
sub
cmp
pop
xor
inc
fs
pushf
push
jecxz
rorl
push
pop
pop
test
jnp
mov
sbb
into
jns
pop
fdivrs
adc
sbb
xor
mov
xchg
es
sbb
mov
push
xchg
test
xchg
mov
les
aam
cmp
lahf
cmpsl
stos
pop
js
les
call
jb
out
or
imul
mov
add
shrl
lret
dec
sahf
dec
jecxz
pop
or
inc
cwtl
sub
movsl
push
and
adc
scas
push
pop
xor
daa
icebp
ss
cld
mov
stos
or
sbb
sub
inc
sahf
into
mov
popa
sarl
pop
stos
mov
lret
jbe
dec
in
jbe
cwtl
addr16
xchg
xor
or
call
xor
stc
sbb
jnp
sub
xchg
les
shrl
jp
mov
jle
sbb
jnp
sbb
or
scas
lock
sti
testl
or
scas
sbb
pushaw
pop
inc
loope
stc
addl
pop
clc
pop
mov
push
inc
lock
push
xchg
into
and
jmp
andl
fnstsw
mov
cltd
stc
fcompl
pusha
sbb
mov
mov
sti
mov
xchg
out
pop
and
arpl
sbb
push
cmpb
mov
test
push
or
insb
mov
dec
bound
cmc
jnp
jb
mov
pop
mov
inc
and
inc
push
lods
pop
and
lret
xchg
imul
cmpsl
push
ds
insb
adc
mov
push
mov
mov
lods
sbbb
cmp
push
xor
and
push
mov
mov
xchg
push
dec
sbbb
icebp
pmuludq
adc
movsl
inc
call
loopne
pop
mov
call
inc
jno
jne
movsb
out
sbb
lods
jg
pop
imul
sarb
fiadds
fadds
shlb
cmp
or
inc
pop
cmp
jecxz
xchg
and
arpl
dec
lret
sub
jle
sbb
shl
add
or
testb
stos
dec
sbb
mov
rorb
xor
ja
mov
outsb
mov
test
mov
xorb
xchg
fstp
aaa
push
xchg
insl
icebp
and
cmc
sti
in
inc
out
mov
mov
fs
pop
dec
in
or
pop
push
push
out
xchg
cmc
filds
movsl
adc
fmulp
shufps
jb
sub
mov
aaa
data16
gs
nop
cmc
sti
fbld
mov
or
and
mov
lret
dec
jecxz
or
imul
xchg
addr16
and
insl
pop
or
push
pop
hlt
js
fnstenv
mov
notl
sbb
xchg
int3
daa
outsb
movsb
aaa
inc
inc
xchg
add
call
in
aam
addb
out
push
imul
jns
cmpsb
ds
adcl
rcl
scas
push
in
mov
inc
dec
inc
loopne
push
mov
shll
add
sbb
xchg
ret
push
cmp
inc
mov
adc
out
stos
loop
xchg
stc
in
jle
clc
les
movsl
inc
sub
sub
mov
mov
xchg
or
inc
and
insb
sub
imul
outsb
insb
mov
xor
adc
and
jge
jle
mov
xchg
xchg
scas
xchg
lods
mov
jle
sub
adc
and
lds
ret
dec
and
xor
add
or
cmp
mov
lods
push
stos
inc
int3
cld
pop
push
cltd
mov
pop
inc
pop
ss
scas
stos
xchg
popa
int
pop
and
iret
add
loope
not
cltd
sub
pop
les
aas
lock
jnp
fnstsw
xchg
push
int
and
sbb
xchg
xor
sbb
out
and
sub
pusha
sbb
out
dec
pop
sbb
lret
call
cs
enter
dec
out
or
fsubr
roll
icebp
push
fmull
stos
push
mov
fsts
cmp
dec
dec
pop
jns
xor
inc
xor
push
add
mov
lret
arpl
dec
cli
addr16
fstps
mov
sub
pop
jbe
fcompl
loopne
mov
mov
mov
jge
cmpsl
arpl
int3
rcl
lret
bound
rcrb
sbb
cmc
adc
mov
mov
adc
imul
sbb
fs
pop
dec
inc
xor
mov
dec
insl
test
retw
cmp
icebp
lahf
imul
into
int
in
ljmp
xchg
mov
lods
lcall
popf
jnp
outsl
test
adc
iret
pop
test
sub
adc
fdivl
icebp
adc
fcoml
dec
adc
dec
xlat
jg
xor
lret
ja
sbb
arpl
push
aaa
fnstenv
add
das
push
or
bound
xlat
enter
mov
mov
gs
add
lahf
xor
test
xor
stc
add
mov
jns
decl
xchg
and
sahf
and
jae
sub
mov
cmpl
mov
adc
mov
in
cmp
mov
jl
fmull
push
cmp
mov
bound
xchg
jo
ret
fsubr
dec
mov
scas
outsl
aas
outsl
jnp
addr16
stc
xchg
xor
and
and
mov
lret
pushl
cmp
pop
xor
mov
xchg
ret
ljmp
cmpsb
adc
sub
out
dec
add
clc
les
sbb
pop
sahf
pop
fcmovne
sbbl
es
std
movsb
push
or
sub
xor
cmc
orl
leave
lods
ja
sbb
lea
iret
stos
ret
ja
into
mov
movsb
add
inc
int
mov
adc
ret
jle
mov
mov
push
ss
vphadduwq
arpl
movsl
mov
mov
lods
push
mov
stc
push
mov
sub
lcall
scas
loope
rolb
adc
push
leave
lahf
sub
bound
add
rcl
sub
sub
push
xchg
and
aaa
inc
fcmovnb
orb
sub
imul
jno
push
jmp
jge
pop
loopne
enter
test
mov
and
jecxz
jg
dec
mov
sub
jb
lds
pop
scas
mov
aad
inc
rclb
xchg
out
shrl
dec
lds
xchg
mov
in
cmc
shr
cmp
das
sbb
fnstcw
push
inc
pop
mov
pop
lahf
adc
push
sbb
aaa
imul
pop
into
rolb
repz
test
push
push
iret
or
cmp
jp
fimuls
mov
sarb
fnstsw
mov
sub
push
xchg
mov
ljmp
pop
daa
cwtl
lret
jo
repnz
lods
jge
cmpsl
dec
test
lods
fistpll
ret
int
ficomps
xchg
and
fs
pop
aad
fistl
dec
jl
push
scas
cmp
or
fcoml
sbb
imul
test
lock
stos
inc
cld
std
pusha
push
dec
jns
les
cwtl
dec
xchg
push
push
clc
scas
es
pop
in
lods
cli
cmp
cmp
mov
rorl
jl
aad
jne
mov
or
adc
shr
jno
fildll
sahf
push
les
sahf
or
sub
rolb
fucomi
sub
adc
std
cmp
cmp
or
fcmovnbe
mov
pop
rorl
data16
sarb
inc
enter
mov
aam
insl
test
mov
fldenv
ret
jb,pt
xchg
xchg
test
xchg
cld
fnstcw
cmp
shll
mov
cwtl
popa
into
sbb
loopne
imulb
xchg
xor
mov
push
xchg
adc
xchg
jle
push
cld
mov
push
outsl
jp
dec
sbb
sarl
loopne
scas
jno
aas
jl
outsl
cltd
lret
jmp
xchg
push
mov
xchg
adc
inc
inc
fidivrl
mov
ljmp
inc
lea
pop
mov
cld
test
cmpl
rolb
or
psubusb
lret
sbb
push
rorl
clc
xor
sti
or
scas
lods
lods
xor
mov
xchg
xchg
cmp
cmpsb
mov
xchg
das
add
xchg
cli
mov
into
les
sub
fnsave
fcomi
lock
lahf
and
bound
fwait
mov
test
lret
jae
adc
or
or
dec
push
cmp
lret
or
imull
out
mov
cmp
in
pop
sub
ror
lcall
mov
jge
lds
jmp
cmpsl
in
sbb
sbb
dec
lret
jecxz
xchg
shll
cmp
lea
ds
xorl
jne
imul
aas
adc
xchg
pop
inc
mov
add
pop
add
and
mov
adc
inc
xor
xchg
mov
test
xor
jp
push
and
mov
adc
sub
push
out
fs
mov
pop
cld
aas
cmpsb
jmp
xchg
sub
scas
call
dec
push
lock
push
push
scas
cli
leave
sub
xor
cmp
clc
cmp
fstpl
mov
ss
jnp
cmp
test
xlat
shll
mov
xchg
dec
pop
add
js
dec
dec
push
loope
fists
fdivrs
out
cli
xchg
xchg
add
outsl
push
inc
inc
and
sti
jle
or
sbb
xor
cmp
sbb
xor
push
jns
jg
sbb
add
shr
rcr
adc
xchg
das
mov
push
pushf
xchg
pusha
dec
jb
test
mov
sbb
or
gs
dec
repz
sub
scas
xchg
push
adcl
loopne
sahf
and
and
ret
ss
std
movsb
cmp
lock
pop
fstpt
sbb
sarb
aam
jbe
out
out
hlt
and
arpl
dec
pop
mov
mov
jo
cmc
cmc
std
push
repnz
cmp
arpl
cmp
mov
leave
and
test
stc
dec
dec
and
push
push
mov
addr16
outsl
mov
xchg
and
dec
dec
jno
cmp
inc
lret
cmpsb
cwtl
xor
aas
push
sub
insl
cmpsl
daa
hlt
fs
xchg
out
push
fs
pop
xchg
dec
jae
inc
sub
xor
movsb
xor
icebp
xchg
mov
loopne
in
mov
xor
and
xor
or
lahf
mov
mov
dec
adc
sarb
popf
orb
fnstcw
push
pop
or
mov
jo
or
inc
sbb
cs
pop
inc
aad
pop
inc
sbb
jge
push
adc
mov
pop
and
jbe
aad
add
popf
lret
gs
imul
shrb
clc
lar
mov
subb
xchg
push
xor
les
or
lcall
pop
sbb
enter
jno
jle
dec
push
outsb
mov
mov
inc
xorps
jge
cmp
ret
add
pop
push
shll
cltd
test
lods
push
fistpl
jmp
xor
lcall
add
sbb
pusha
ret
add
shrb
dec
fsubr
mov
daa
xchg
push
loope
jae
mov
mov
mov
test
mov
mov
popa
imul
mov
jnp
cmc
lret
xor
rorb
mov
gs
mov
xor
xlat
iret
xchg
stos
in
les
cld
or
inc
sub
inc
sbb
repnz
mov
dec
xchg
sarl
stos
inc
sarb
pop
sub
test
fucom
imul
inc
outsl
mov
jne
in
add
inc
stos
cmp
push
mov
movsb
mov
repnz
out
pushf
or
fcom
xor
ficomps
std
xchg
fisubs
adc
push
mov
in
adc
inc
add
adc
xchg
data16
xchg
lock
sub
ds
clc
aaa
sub
stos
fnsave
cmp
sub
pop
mov
repnz
pushl
pop
sbb
into
out
lret
int3
push
outsl
ret
mov
and
fidivl
mov
mov
call
add
inc
inc
jmp
mov
mov
pop
imul
jg
dec
mov
fstpt
xor
push
cmpsb
pop
test
cwtl
sub
nop
insb
jecxz
cmp
mov
arpl
js
iret
call
inc
cmp
ret
pop
test
pop
mov
pop
das
es
clc
pop
xor
push
sbb
scas
add
adc
xchg
mov
pop
mov
mov
push
mulb
mov
leave
xor
call
shlb
xor
repz
pop
lock
or
aam
adc
jno
lea
jle
inc
dec
sti
add
jb
mov
adc
out
insl
push
xchg
std
insb
pop
jbe
mov
mov
xor
sti
or
push
inc
fs
push
xchg
sub
xlat
test
mov
int3
pop
cwtl
es
or
fs
push
fsts
xor
and
push
xchg
loop
and
adc
xchg
cs
dec
inc
xor
inc
jg
call
cmp
add
inc
mov
pop
sbb
add
sbb
ror
xor
adc
push
iret
add
ret
pop
rep
xchg
pop
inc
out
mov
icebp
xchg
jg
scas
test
inc
lods
int3
push
cwtl
xchg
faddp
stos
jno
fs
push
mov
pushf
dec
dec
stos
sub
sub
out
mov
add
sti
out
jmp
xlat
jne
xor
imul
jbe
xchg
and
lret
and
fsubr
fwait
push
mov
enter
mov
pushf
idiv
sub
push
dec
jo
aas
push
fimull
jg
lahf
pop
jmp
cld
cmp
aad
movsb
push
pop
inc
push
test
iret
cmove
push
xor
adc
adc
addr16
add
ds
and
xor
pop
dec
jae
repnz
cs
pop
jae
mov
adcb
or
jle
or
pop
add
pusha
jne
sahf
out
imul
test
xchg
pop
popf
sbb
mov
subps
in
add
arpl
jns
sti
mov
jle
adc
mov
repnz
mov
jg
mov
stc
sti
sub
rorl
add
test
in
ud0
dec
push
jge
lods
add
insb
sbb
cltd
adc
clc
mov
and
mov
repz
pusha
shll
hlt
int3
jp
cwtl
push
test
into
clc
push
popa
test
push
icebp
jecxz
push
test
dec
jmp
test
jl
ret
js
xor
loopne
jle
mov
out
lret
es
test
jae
sub
cli
loopne
xabort
xor
arpl
jo
xor
and
xchg
fnstenv
cs
sbb
xor
fiaddl
test
xchg
add
and
in
jne
mov
push
clc
fcmovb
imul
push
cs
xchg
outsl
and
sub
pop
xlat
xchg
xlat
decl
mov
shl
and
xchg
lret
cs
cmc
fcoms
pop
adc
mulb
inc
mov
mov
jo
fdivrs
xchg
add
popf
pop
sbb
mov
inc
nop
std
daa
push
adc
daa
mov
loope
leave
xchg
jno
jp
loopne
hlt
add
cwtl
icebp
push
dec
sub
ret
insl
int3
fucomip
and
insl
xor
scas
sahf
xchg
push
add
xchg
mov
lea
out
repz
stc
or
popa
sub
sub
or
fsubs
mov
mov
dec
inc
dec
cwtl
mov
jb
popa
leave
push
jecxz
mov
and
mov
std
mov
inc
dec
in
adc
fs
and
pop
insb
arpl
sbb
arpl
jb
fs
ljmp
lods
jb
xchg
xchg
imull
int
leave
insb
popa
push
data16
jo
jg
js
cmc
es
mov
push
mov
adc
xchg
pop
inc
adc
lods
adc
fwait
sub
mov
test
rclb
or
iret
insb
addr16
sbb
dec
jo
mov
popw
ds
and
in
daa
je
xor
fistps
and
jnp
fdiv
push
xor
add
ficompl
pop
dec
repnz
aad
cld
xchg
cltd
out
lret
jne
add
aam
xor
lock
and
and
inc
sbb
inc
sub
add
repz
scas
popf
or
das
movsl
push
int3
and
adc
negl
cmp
dec
or
fisttps
dec
rolb
in
icebp
add
mov
movsb
mov
rclb
or
cmc
dec
fsubrl
test
ja
mov
adc
aas
mov
mov
imul
push
data16
inc
fcomps
add
in
xor
push
popa
aam
cmp
shlb
das
leave
sarl
and
cmp
ret
push
stc
scas
std
std
cwtl
cmc
jg
sub
lcall
loop
out
icebp
mov
adc
and
push
pop
ja
sti
sbb
mov
aaa
lods
mov
push
ret
and
fisubrs
jnp
mov
jno
aad
mov
add
fisttps
dec
and
cld
cmc
fisubl
pusha
cmp
cmp
xor
mov
arpl
push
stc
lcall
popf
fwait
ss
ss
xchg
add
addb
ljmp
pop
add
ret
pop
sarl
cmp
aad
pop
mov
mov
xlat
inc
out
and
inc
hlt
clc
js
insl
fildl
and
dec
xchg
les
push
nop
ds
mov
push
filds
or
rcll
ja
pop
pop
je
and
cmp
or
outsb
leave
xchg
outsl
sbb
adc
es
xor
das
dec
iret
xchg
add
scas
pop
lods
mov
sbb
xor
in
add
lcall
sahf
mov
push
dec
jns
cmp
stos
imul
aam
js
imul
sub
jecxz
dec
jae
mov
sub
clc
mov
fimuls
cs
or
pop
jmp
adc
pop
push
lea
fisttpl
push
jae
fstpl
jmp
pop
sub
ja
and
jle
adc
mov
outsb
xor
sub
insb
daa
sbb
mov
mov
dec
dec
cs
sub
pushf
scas
jmp
jne
aas
cmp
sbb
fadd
cltd
jns
sbb
mov
push
and
lret
add
cmc
cmp
dec
xor
mov
push
jecxz
add
dec
mov
mov
faddl
xor
xchg
push
pop
mul
jle
ljmp
scas
mov
mov
cmp
jmp
push
inc
rcll
pop
es
call
push
bound
imul
fwait
sti
jg
fistl
jae
loope
jle
rorb
enter
sub
orb
mov
nop
aaa
mov
pop
mov
xchg
mov
sbb
inc
lods
ljmp
xor
pop
int
ret
adc
xchg
mov
out
jnp
repnz
add
movsb
xchg
icebp
jnp
sahf
mov
xchg
xor
lret
lock
and
scas
push
dec
ljmp
xchg
lods
bound
or
and
movsl
scas
adc
ret
lods
rcr
subl
pop
fwait
pop
out
flds
add
and
daa
mov
arpl
add
dec
mov
pop
lret
int
xchg
out
inc
popf
movsb
lea
cmpsl
outsl
fbld
xchg
lret
xchg
adcb
jbe
ljmp
cwtl
or
cmc
lea
jg
mov
dec
adcl
sarb
ret
add
out
movsb
inc
ds
pop
push
and
pop
cmp
in
xchg
or
dec
jecxz
jno
jmp
mov
addr16
jmp
or
jae
mov
je
fwait
mov
lret
cmp
xor
repz
test
mov
sbb
mov
in
sbb
jns
mov
ljmp
cmp
xchg
fiaddl
cmp
mov
inc
mov
jl
sbb
aam
movsb
or
dec
add
or
iret
ficomps
test
aaa
xor
push
pop
test
dec
std
adc
sub
xchg
jae
cli
xchg
cs
sti
pusha
mov
into
popa
negb
pushf
mov
nop
adc
aaa
add
sub
jecxz
ret
or
idivb
lcall
ds
or
mov
add
pop
outsl
push
shl
cmc
loope
lcall
fbld
xchg
jbe
pop
stos
jnp
mov
mov
inc
call
hlt
sbb
jns
fsubl
lret
adc
xchg
adc
test
xchg
aam
inc
xchg
or
into
cmp
xlat
mov
addr16
add
add
sub
sub
or
xor
nop
cli
rorl
ss
pop
movsl
jl
or
jbe
pop
imul
scas
loopne
pop
cwtl
arpl
pop
aad
pop
mov
mov
mov
dec
pop
jp
jecxz
pop
fstpl
sub
fildll
es
push
stos
adcb
adc
sub
out
div
jo
sub
testl
adc
scas
mulb
shr
out
fdivrs
xchg
cs
cmp
pushf
pushf
nop
push
jmp
cmp
pop
xor
push
cmp
fimull
adcl
popf
pop
sahf
pop
pusha
sbb
and
adc
lcall
outsb
xchg
popl
or
int
out
or
push
jg
test
mov
push
sub
xchg
ljmp
inc
ret
xor
dec
movl
or
rcrb
outsl
sahf
mov
adc
or
mov
jb
movsb
mov
pop
mov
sahf
in
out
jge
pop
sti
xor
mov
sbb
jle
jge
sub
lret
sbb
sbb
addr16
ja
pop
mov
aaa
movsb
out
pusha
mov
test
lock
xchg
shlb
xor
xor
scas
push
jecxz
and
fwait
cwtl
xchg
test
xor
mull
scas
clc
add
insb
jp
mov
mov
xor
into
dec
push
inc
cmp
xchg
scas
cmp
dec
add
fwait
push
xor
pop
out
mov
loop
and
ret
pop
sbb
lahf
push
sub
gs
sbb
stc
cmc
xchg
jae
sbb
and
mov
cmc
dec
dec
dec
cmpsb
repnz
adc
add
jo
addr16
pushf
out
sbb
xchg
or
jecxz
mov
add
inc
mov
jb
call
out
xor
fst
popl
pop
pop
adc
and
xor
into
mov
fucom
adc
mov
cmp
les
out
lods
mov
dec
mov
shlb
cwtl
adcb
adc
sub
es
fldcw
mov
and
or
dec
cmp
or
mov
repnz
mov
mov
mov
js
leave
mov
out
sbb
sbb
mov
or
and
pop
sti
cmc
push
iret
inc
inc
popa
jb
fildl
mov
movsl
push
das
cmc
pop
push
mov
push
cmp
fnsaves
sub
push
mov
cwtl
dec
mov
cli
sti
inc
xor
push
test
lea
mov
sarl
or
jl
hlt
dec
arpl
shl
xor
bound
sub
stc
ss
xlat
and
pop
pop
mov
testl
dec
or
push
pop
icebp
jmp
fistl
add
loopne
inc
mov
fidivrs
push
dec
es
testb
push
aas
shl
roll
out
push
ret
and
jns
lret
mov
adc
notb
mov
daa
scas
and
scas
inc
mov
push
dec
xchg
push
fadd
lcall
and
xchg
cmp
mulb
testl
lret
cwtl
sahf
adcl
adc
loop
sub
fmull
das
test
or
test
xchg
mov
xor
jle
scas
jecxz
and
adc
fimuls
pop
pop
inc
icebp
ss
add
mov
push
mov
ja
cmp
nop
sub
int3
or
dec
lea
mov
add
mov
jb
fs
mov
sbb
fidivl
and
adc
imul
cmp
lea
ret
mov
cmpsb
les
push
int3
jmp
rclb
loop
mov
mov
sbb
pop
fwait
or
int3
gs
jae
sub
sbb
lret
cmpsl
or
inc
jnp
jae
inc
in
xor
pop
inc
mov
setl
popf
add
inc
sbb
loopne
sbb
or
mov
push
pusha
test
inc
lcall
pop
cld
mov
jl
pop
les
out
mov
jl
add
inc
xchg
mov
jns
add
adc
out
xchg
jmp
adc
push
enter
aam
mov
pop
jb
std
fucom
ret
xor
xor
push
cld
mov
stos
sarb
rolb
mov
bound
mov
xchg
sub
pop
mov
mov
jmp
ficoml
jo
lahf
pop
jle
push
pop
pop
sbb
or
mov
loope
fimuls
scas
dec
jl
mov
fsubl
xor
xchg
adc
adc
push
adcl
icebp
sbb
xor
push
into
and
dec
sub
mov
arpl
cli
cmp
ds
jnp
int3
jns
movsb
adc
adc
mov
les
pop
xor
scas
add
in
outsl
lret
mov
jne
shl
dec
push
jno
stc
dec
lret
jge
test
and
ss
cmp
fwait
leave
dec
sbb
hlt
test
jbe
mov
sbb
call
jg
arpl
jo
xchg
mov
pop
and
cmp
lret
jo
xor
jp
aad
fcmovu
pop
repz
push
push
out
sbb
fldpi
xor
insb
inc
dec
dec
cmp
popa
test
jmp
and
fsub
sub
cwtl
and
sbb
jnp
fimuls
mov
insb
cmp
enter
lock
fcmovne
mov
sbb
push
les
fidivl
sbb
loopne
insb
adc
aad
sub
fldenv
sar
cld
inc
mov
ds
inc
sub
in
sub
mov
add
scas
sbb
dec
xchg
adc
push
lods
outsl
and
lods
inc
mov
cli
inc
inc
jecxz
out
pop
in
in
cmc
jnp
div
aad
stc
xchg
jno
sub
loope
xchg
push
cmpsb
mov
mov
inc
cld
xchg
inc
xor
xchg
and
xchg
mov
clc
push
xor
fmulp
lret
cmpb
enter
sbb
fcmovnbe
lock
movsl
int3
or
js
mov
and
mulb
sub
mov
or
cmpsb
fnstcw
mov
loopne
add
test
dec
popa
lret
jbe
pop
les
mov
shll
xlat
mov
jnp
sbbl
sbb
addr16
jns
aam
rcll
leave
arpl
xlat
test
push
insl
cmp
xchg
test
movsl
es
mov
add
mov
or
lods
jnp
push
push
vdivps
out
mov
pop
jnp
es
jne
test
cmpsl
cmpb
fisttpll
push
mov
cmp
addr16
iret
stos
das
out
or
sub
stos
int
inc
jmp
mov
fldenv
mov
rorb
shll
inc
outsb
sbb
mov
push
xchg
arpl
clc
adc
mov
dec
sub
mov
sub
lods
pop
mov
adc
sbb
cmp
xor
jmp
cwtl
stc
add
repz
push
lret
inc
and
sub
cmp
div
push
inc
loop
push
clc
jae
lahf
fstpt
or
ret
aad
scas
stos
lds
pop
sti
xchg
or
lock
xchg
cmp
add
or
and
test
sbb
out
cltd
dec
mov
xchg
stos
ret
add
mov
mov
popa
test
cltd
adc
sbb
add
adc
dec
sbb
test
cmpsl
add
in
inc
push
sub
sub
shll
andl
pushf
std
jbe
cmpsl
bound
or
rcrl
xchg
push
mov
xchg
pop
xchg
xchg
aaa
inc
or
xor
adc
gs
insb
sub
inc
pop
ljmp
xlat
loop
cmpsb
xor
int3
cmp
or
add
call
insl
sub
or
ljmp
mov
mov
rcl
or
pusha
adc
dec
jo
xor
movsl
data16
js
dec
stos
dec
mov
jo
jge
mov
push
loop
adcb
mov
mov
xlat
pop
shlb
xor
sbb
jge
or
arpl
roll
cmp
ds
xchg
inc
loop
mov
cmp
outsb
cltd
divb
pop
popa
ret
push
cld
xchg
jbe
orb
add
xor
inc
jp
mov
push
pop
mov
jno
bound
fwait
xchg
int3
dec
stos
in
rcrl
int3
pop
jbe
dec
xor
and
divb
xchg
sbb
mov
xor
ret
adc
pop
gs
test
scas
and
dec
mov
nop
mov
loopne
fbld
inc
es
cltd
or
pop
or
aas
or
shlb
in
mov
andb
je
enter
jnp
sub
mov
pop
pop
insl
jae
aas
jmp
imul
out
add
jle
std
not
push
data16
enter
cmp
in
loop
xchg
es
xchg
push
mov
pop
jbe
mov
test
dec
or
lret
push
aaa
cld
xchg
jge
enter
ljmp
out
addb
in
ds
ret
jmp
stc
mov
aam
into
jle
imul
fcoms
pop
addr16
ret
and
lea
inc
movsl
xor
or
mov
mov
cmp
lea
pop
rorb
mov
jl
stos
ret
pop
jno
push
push
jno
jae
mov
testl
or
call
outsl
jnp
pop
in
cwtl
inc
push
ljmp
cmpsb
push
mov
insl
jl
std
pop
icebp
ret
jb
cmp
dec
push
notl
daa
fs
mov
imul
jl
xlat
cli
cwtl
push
xchg
mov
add
inc
mov
add
mov
or
cmp
outsb
in
ja
mov
lcall
lret
push
or
inc
int
sub
nop
clc
pop
lock
aam
lods
mov
add
mov
in
adc
pop
into
mov
inc
lcall
scas
aaa
dec
dec
popa
push
leave
inc
aas
arpl
rcr
vsqrtsd
inc
lret
mov
or
fidivl
pop
cltd
sbb
repnz
inc
in
xchg
rol
mov
sub
cmc
in
sbb
lahf
sbb
inc
stos
repnz
jp
pushf
jo
fistps
sti
cmp
popa
lcall
icebp
or
xor
sub
cmc
push
cmpsb
jmp
jg
dec
decb
hlt
add
push
xchg
lret
or
or
pop
jbe
iret
sub
mov
mov
out
xlat
mov
mov
push
sbb
mov
xchg
adc
rol
lcall
add
repz
lcall
adc
fwait
loopne
insb
jge
test
pop
nop
ficoms
pop
pop
lcall
mov
in
sbb
xchg
fs
cli
mov
pop
or
sub
push
rolb
dec
pop
jns
or
aaa
testb
into
shlb
imul
inc
out
adc
mulb
fisubs
ret
test
xchg
lea
jmp
mov
cmp
push
ja
cli
push
aam
mov
add
add
lret
inc
mov
loop
test
push
rclb
inc
clc
mov
and
xorl
add
lret
push
cmp
or
mov
imul
rcl
std
cmp
fldcw
cmp
inc
or
mov
fcoml
jecxz
push
add
xor
and
push
mov
or
jge
push
adc
packuswb
push
or
and
test
and
xchg
dec
negl
clc
adc
adc
fsubs
mov
inc
out
pop
pop
add
sub
jg
pop
push
pusha
mov
divb
sbb
insl
xchg
xchg
test
call
loop
je
push
aaa
sti
shlb
stos
mov
testb
mov
aaa
add
cld
lock
fmull
add
add
xchg
cmp
subl
dec
mov
stos
inc
in
daa
daa
repnz
and
loop
andl
fwait
inc
mov
push
jbe
cmpsl
repnz
aam
jne
shr
push
scas
or
and
jae
aam
aaa
arpl
xor
in
and
mov
sbbb
mov
cmp
xchg
popa
inc
xchg
addr16
mov
insl
inc
pop
adc
adc
and
sahf
addl
nop
fldenv
push
add
adc
inc
sub
cmp
les
push
mov
adc
pop
sub
inc
mov
xor
int3
stos
das
mov
dec
dec
dec
and
cli
jae
insb
push
jmp
xorl
imul
in
adc
pop
ja
jns
sub
dec
popa
mov
pop
ja
inc
cltd
mov
aaa
shlb
mov
push
xchg
and
cmp
aam
inc
filds
push
inc
or
ljmp
ds
push
mov
cmp
sti
inc
pop
pop
adcb
lea
cmp
sub
adc
pop
icebp
nop
inc
ja
adc
mov
testl
and
data16
cmp
lods
les
jo
mul
ds
xchg
in
enter
fdiv
int
sub
ja
push
into
push
jle
inc
jle
dec
push
pop
mov
sbb
cmp
adc
les
scas
adc
out
xlat
xor
xchg
andl
mov
jecxz
mov
sub
and
cmp
sbb
std
aad
shll
nop
cmpsl
aam
iret
int
mov
jge
fidivrs
cmp
mov
xchg
mov
xchg
push
fisttpl
xchg
push
pop
fucom
inc
xchg
sub
cmpsb
sub
stc
or
or
cmp
cmp
xchg
ljmp
das
out
and
lcall
add
out
out
pop
repz
hlt
leave
out
jmp
push
loopne
cmpsl
test
movsb
sbb
loopne
sub
mov
enter
inc
sbb
shrl
fstps
adc
lods
repnz
in
gs
xor
dec
notb
daa
cmp
mov
xchg
jb
xchg
cs
cmp
mov
cmpsb
inc
hlt
ds
iret
cmp
stc
incb
cs
hlt
inc
or
xchg
jbe
sti
aad
pushf
sbb
mov
mov
sub
add
and
push
jmp
fs
decl
lret
loopne
fwait
mov
add
inc
mov
aas
mov
mov
test
test
pop
sub
mov
pop
imul
and
jle
sbbb
adc
push
mov
rcrl
data16
sbb
in
or
dec
jae
dec
sbb
mov
test
mov
or
add
les
std
adc
mov
cmp
mov
adc
and
loopne
cli
data16
imul
mov
ret
out
fs
daa
sbb
mov
lock
aam
xchg
rolb
test
inc
lret
jbe
test
sbb
mov
mov
and
xor
push
xchg
int3
aad
push
pop
dec
pop
jno
adc
jbe
insb
ror
out
fdivr
xchg
sub
lods
insl
sbb
lods
xor
popf
arpl
clc
push
fs
sbb
fimuls
loope
lea
mulb
xor
inc
add
pop
cld
mov
aam
push
adc
pop
fnstenv
sbb
push
push
ljmp
cmp
das
mov
pop
or
lods
arpl
mov
into
add
sarl
push
repz
cwtl
cltd
sbb
leave
sub
popf
hlt
add
je
push
and
in
scas
subl
push
sbb
xchg
inc
out
fucom
xchg
jl
fldcw
mov
push
push
push
mov
icebp
js
xchg
aam
push
fs
incb
or
je
cmpsl
mov
xchg
fildll
dec
xchg
mov
add
fnsave
jae
sub
adc
mov
xor
adc
inc
jo
ficoms
jnp
rclb
mov
ret
cmc
xchg
fs
inc
shl
push
dec
cltd
out
push
xor
data16
lods
cld
ja
cmp
out
stc
xor
adc
rorb
orl
xchg
pushf
and
xor
pop
adc
sahf
test
mov
pop
inc
enter
sub
or
add
sarl
out
mov
sub
and
xor
scas
lret
adc
out
daa
gs
mov
xor
dec
cld
das
mov
jecxz
lds
iret
and
sub
or
sub
jecxz
and
ret
sbb
push
cmp
pusha
push
inc
inc
sbb
push
lea
popa
outsl
rolb
stos
cmp
mov
leave
aas
repnz
lret
mov
mov
loopne
in
sbb
push
inc
adc
pop
dec
inc
push
mov
int
cmp
rorb
mov
out
das
fs
fstpl
xor
roll
adc
decb
test
dec
ljmp
sbb
or
js
lea
fstpt
push
pushf
xchg
testl
pusha
out
inc
popa
adc
xchg
shrb
cmp
cmp
mov
fs
adc
mov
fsub
repz
sbb
dec
sbb
inc
sti
psubusw
cmc
fwait
and
adc
xor
cmpsb
pop
inc
mov
jae
sti
fwait
inc
pop
inc
push
or
mov
push
pop
mov
jbe
dec
imul
out
xchg
xchg
sbb
xchg
inc
adc
cld
sub
popa
push
push
gs
dec
jne
add
stos
jge
ficompl
cli
out
arpl
inc
cmp
ds
inc
mov
aaa
fmull
xor
dec
jb
push
push
cmpsb
inc
outsb
cmc
add
loope
cltd
das
imul
cmpsl
cmp
test
jge
push
ljmp
dec
xchg
in
xor
jne
sbb
mov
and
js
aad
xchg
js
push
data16
lock
pop
cmp
mov
cmp
mov
dec
les
mov
xchg
inc
and
mov
jp
fldlg2
add
iret
insb
mov
push
pop
mov
xor
push
jmp
gs
mov
mov
mov
gs
popa
fwait
cmp
jb
jb
add
call
ja
shr
test
sbb
dec
cmpsl
repz
js
mov
pop
lea
xor
jl
pop
mov
inc
loop
ret
mov
fiaddl
jl
jp
insb
loop
cmp
push
xor
jbe
dec
add
add
scas
lret
xchg
ds
mov
mov
push
and
push
enter
mov
mov
or
roll
sub
xchg
pusha
mov
and
bound
jle
negl
mov
inc
sub
push
jmp
add
sub
repz
lret
popf
cmp
fdivrs
jbe
sub
pop
pusha
mov
xor
decl
mov
jge
push
sbb
loopne
fs
test
push
adc
out
rolb
mov
mov
dec
shlb
dec
xchg
or
lcall
fidivrs
mov
inc
ljmp
pop
lcall
loopne
int
mov
lods
fldenv
and
mov
cmp
sbb
push
cli
push
push
dec
mov
jmp
ret
inc
jo
mov
stc
gs
out
xchg
or
lods
dec
out
pop
enter
adc
je
adc
and
mulb
and
sbb
enter
mov
mov
icebp
jle
imul
cld
mov
lock
jbe
push
dec
fidivl
les
das
pop
in
adc
lods
xchg
jecxz
ljmp
sub
sbb
stos
adc
jnp
dec
mov
or
rcr
