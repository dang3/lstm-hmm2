push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jnp
mov
ficomps
lods
aad
xorb
cmp
xlat
jp
je
inc
lds
pushf
roll
data16
ljmp
push
jo
pusha
fwait
repz
add
and
cmp
cltd
pop
in
ret
mov
cs
addr16
jne
or
sarl
popf
adc
inc
sbb
shl
jo
lea
xchg
jp
notb
ja
jae
adc
popf
int3
stc
aas
or
addr16
jp
jge
scas
lock
sub
push
mov
xchg
pop
out
mov
inc
std
or
out
inc
inc
enter
imul
mov
xchg
fs
add
aam
outsl
dec
jmp
cltd
add
fistps
mov
adcb
loope
pop
pop
or
xor
push
sbb
popf
lahf
pushf
repnz
pusha
sbb
aas
int3
pusha
aas
xchg
push
add
jecxz
pushf
lret
ret
inc
in
push
and
ljmp
leave
mov
movsl
dec
pop
aad
lret
add
sbb
sub
lods
pop
cmc
ret
dec
fldcw
add
sub
sub
add
xchg
adc
lods
sub
fs
rolb
adc
repnz
cmp
pop
pusha
pop
cmp
lret
xchg
repnz
xchg
mov
inc
add
repz
es
lret
add
jno
sbb
push
jnp
ret
cmp
sbb
lcall
imul
push
jne
faddp
push
mov
xor
or
cltd
pop
fs
or
pop
inc
xchg
pop
arpl
push
xchg
xchg
nop
mov
adc
arpl
daa
div
repnz
or
sub
push
inc
je
pop
mov
push
imul
pop
push
jle
ret
jecxz
add
repz
mov
lods
xchg
and
lds
xchg
jg
mov
sti
mov
ja
cmp
push
inc
rorl
adcb
in
enter
mov
xchg
mov
jge
lret
add
cmp
out
jbe
inc
pop
inc
loopne
lcall
mov
aaa
cli
jp
mov
xor
cld
loope
popa
int3
ja
inc
jge
xchg
pmuludq
mov
aaa
inc
daa
sbb
fsubs
push
outsl
mov
fadds
lea
cmp
lcall
or
lock
fdivs
lds
jmp
jbe
xor
and
and
cmp
fcmove
arpl
mov
addr16
mov
or
ror
add
mov
test
inc
pop
rcrb
fdivrp
fsubrp
add
adc
inc
adc
pop
and
int
adc
clc
or
xchg
pop
or
jl
std
sub
jno
jecxz
mov
inc
insl
or
sahf
add
add
and
iret
ret
imulb
mov
fdivp
or
push
aam
rep
sbb
push
data16
mov
fwait
xchg
sbb
sbb
push
xor
rorb
lret
pop
cmp
das
loopne
mov
push
push
sbbl
rorl
push
orl
popa
fidivs
inc
ljmp
sbb
dec
pop
add
jp
and
dec
inc
ret
mov
nop
sub
add
xchg
mov
cmp
jmp
fldenv
stc
jge
mov
push
push
scas
or
or
adc
push
push
jb
pop
gs
bound
movsb
adc
add
dec
or
sbb
jae
xchg
adc
lods
xor
and
in
mov
loope
aaa
outsl
outsl
pop
repnz
add
insl
lods
pushf
fbld
stos
pusha
es
pop
mov
shr
cwtl
add
cs
sub
cmp
inc
and
lock
lcall
call
ljmp
mov
pop
orb
out
inc
push
sbb
lods
int3
fistpll
xor
stos
stos
mov
lret
adc
lret
negb
ja
and
popa
cli
xchg
rolb
add
int
cmpsb
enter
mov
cwtl
push
mov
jo
daa
jo
das
mov
jg
push
mov
sbb
add
out
and
loopne
aaa
dec
mov
mov
insb
xor
aas
pop
sbb
stos
gs
xchg
insl
add
sub
jb
xchg
lret
mov
pavgw
test
call
push
and
add
popl
or
and
dec
xchg
fildl
add
pushf
shll
pop
push
jmp
movsb
add
insb
popa
ss
fistps
cmpsb
push
pop
push
push
pushf
add
fldlg2
mov
or
cmpsb
adc
mov
cmp
push
mov
icebp
adc
xchg
jle
js
jp
xchg
jae
dec
and
lea
push
sub
mov
xor
ja
dec
sub
mov
add
inc
xor
mov
adc
sbb
outsb
cld
or
call
mov
fldt
and
mov
test
xchg
jno
mov
jno
push
jecxz
arpl
push
jb
xor
mov
pop
sub
inc
mov
push
in
xor
or
icebp
pop
movsb
mov
scas
aaa
pop
int3
subb
and
add
lods
pop
movsb
fsubrs
out
sub
pop
or
dec
adc
popa
test
jne
xchg
dec
out
pusha
push
mov
loope
notb
push
xchg
cmp
out
add
mov
pop
data16
pop
jge
ss
daa
sub
add
lods
cs
icebp
dec
mov
push
xor
push
mov
test
mov
jno
xchg
add
sbb
mov
xchg
in
adc
mov
jb
add
add
lds
lret
jo
sbb
loopne
jb
jp
iret
fists
push
loop
loop
fisubl
add
sbb
lods
mov
sub
cmp
mov
cli
or
adc
push
cld
cmpsl
sub
int3
mov
fbstp
jmp
cwtl
pusha
or
imul
jbe
es
add
js
in
out
xchg
or
dec
xchg
xchg
xchg
jno
sbb
aam
xor
test
and
add
add
pop
cmp
cld
insl
cltd
idiv
int
mov
inc
inc
add
add
fdivl
scas
and
dec
das
fdivrl
mov
shl
cmpsb
ja
xchg
or
popa
dec
test
repz
jmp
adc
inc
lahf
push
incb
xchg
fisubrl
out
test
subb
hlt
pop
dec
cmp
out
adc
push
daa
push
adc
add
mov
cs
lcall
cld
sbbb
mov
xchg
pop
stos
mov
push
cmp
jnp
mov
cmp
icebp
incb
push
dec
mov
sub
mov
insl
out
inc
mov
push
cli
pop
adc
or
mov
add
dec
push
inc
loope
or
fisttps
push
sarb
fistps
jns
pop
dec
adc
pushf
jp
pushf
dec
sti
out
mov
mov
mov
stc
fidivs
ljmp
pop
xchg
bound
test
mov
add
stc
mov
sub
inc
aas
jmp
xchg
xchg
lds
and
roll
inc
mov
push
stc
repz
lods
mov
add
pop
pusha
push
ret
out
das
popa
cld
test
xor
add
ss
jno
sub
pop
push
leave
fcoml
and
nop
xchg
out
call
out
jae
mov
push
push
movsl
jnp
mov
xor
xchg
cmc
pop
jb
pushf
cmp
xor
pop
xchg
mov
jecxz
dec
and
cmp
fimull
inc
push
popa
pop
xor
ljmp
es
inc
cmpsb
fidivrs
add
rclb
push
scas
mov
mov
or
les
testl
mov
aas
jno
loope
test
cli
sahf
retw
mov
mov
mov
mov
mov
adc
push
cmp
add
movsl
ja
stos
mov
inc
pop
jp
movsl
les
adc
xor
xlat
jae
divl
outsl
push
test
push
sahf
fwait
add
sub
push
add
add
shll
ljmp
mov
or
jecxz
bswap
xlat
clc
loopne
fstps
and
je
pop
cld
xor
mov
imul
rcll
sahf
lds
out
popa
sub
ret
push
cltd
inc
rol
cmc
add
stc
pop
out
sahf
adc
int3
aam
and
lret
mov
xor
fs
xor
or
xchg
add
mov
jno
aaa
mov
cwtl
dec
pop
lahf
iret
or
lea
push
nop
add
jg
pop
bound
aad
and
pop
and
js
push
sbb
mov
push
lcall
dec
int3
adc
xor
or
mov
aaa
scas
or
xor
inc
jnp
popl
das
inc
mov
xchg
fldt
dec
push
addb
add
add
and
jp
xchg
test
sub
in
xchg
cltd
pusha
mov
inc
stc
inc
fs
mov
mulb
xchg
rcll
jl
mov
inc
mov
pop
mov
outsb
and
fwait
xor
cld
call
arpl
insl
mov
cmpl
mov
cmp
adc
adc
stc
out
jp
popa
adc
incb
add
mov
sbb
cltd
aas
mov
into
adc
jnp
data16
and
pop
scas
in
fwait
vsubsd
repz
cli
nop
outsb
sbb
cmp
lret
push
insb
pop
shrl
and
adc
test
xchg
cmp
dec
push
jns
lock
xor
sbb
push
out
enter
data16
stos
mov
push
sbb
push
push
xorb
pop
xor
mov
sub
mov
loopne
and
add
inc
push
aad
xor
outsl
sub
pop
sub
push
ljmp
jg
je
fstpl
out
sbb
leave
push
addr16
push
xor
cli
mov
pop
and
call
xchg
das
or
inc
out
pop
lret
inc
insl
dec
inc
sbb
sub
aam
mov
test
xchg
insb
sbb
ds
popa
je
dec
les
cltd
adc
xchg
add
test
adc
addr16
fstps
in
or
cmpsb
out
roll
sub
lods
xor
jae
daa
test
push
sub
and
test
lcall
or
sbb
outsl
popf
decl
add
adc
ficoms
inc
xchg
bound
add
mov
cli
cli
out
jg
add
adc
cmpsl
jp
pusha
push
pop
sbb
add
int
leave
inc
ret
test
clc
cmc
dec
sub
mov
dec
mov
movsl
into
mov
add
and
inc
lds
xchg
je
mov
ficomps
sbb
pop
add
loope
push
push
addr16
add
mov
inc
mov
aas
mov
sub
xor
adc
sub
mov
add
add
mov
cwtl
sub
dec
xchg
push
aaa
fmuls
cld
cmpb
sbb
jo
test
mov
movsb
mov
out
sbb
and
rorb
rolb
ja
sbb
out
add
xlat
or
ret
jg
xchg
inc
ret
jge
pop
fs
out
mov
in
test
xor
cmp
stos
insl
xor
es
or
jb
add
inc
loope
xor
pop
lock
xor
xor
outsb
push
popf
inc
mov
mov
fidivrs
push
scas
mov
insl
sti
mov
cmp
dec
fmuls
jmp
leave
icebp
cmp
decl
push
adc
daa
and
or
or
xchg
cwtl
out
push
fwait
ljmp
and
daa
mov
xchg
outsb
ljmp
pop
mov
push
mov
add
es
jg
fldcw
iret
xchg
test
or
lods
adc
add
ja
iret
ret
or
pop
cmpsl
iret
aaa
clc
leave
pop
mov
or
cwtl
lds
hlt
aas
loopne
push
jno
sbb
adc
dec
xchg
jg
jbe
mov
arpl
lahf
test
fmulp
adc
mov
insb
add
pop
add
movsb
jnp
inc
lods
mov
call
aaa
adc
xchg
dec
aaa
push
cmp
jl
scas
scas
outsb
fistpll
mov
lcall
fnstsw
fsubrl
js
cli
pop
lea
mulb
or
lea
cmpsb
mov
mov
scas
popa
sub
pop
add
mov
fcoml
aas
or
mov
adc
popa
fnstcw
cld
jp
xor
inc
jecxz
xor
push
ret
pop
pushf
sub
test
mov
loop
inc
push
push
inc
xchg
dec
push
jle
clc
push
das
rorb
lea
rcrb
icebp
push
es
mov
mov
dec
mov
add
add
bound
mov
jmp
lret
icebp
int3
push
push
mov
bound
insb
add
ret
in
rcll
inc
fadds
shlb
sub
test
add
xor
fnstsw
loope
adc
cld
sub
mov
test
cmpsl
mov
orl
ljmp
dec
movsb
push
mov
js
cld
movsb
jnp
in
sarl
stos
push
call
sbb
std
insb
mov
or
stos
mov
bound
dec
frstor
mov
sbb
sub
sub
imul
add
xor
es
or
sub
in
repz
scas
clc
cs
sub
push
push
movsl
mov
lcall
add
out
jl
pop
repnz
movsb
and
xchg
jbe
dec
call
mov
mov
cld
mov
pop
adc
bound
cmpb
lahf
mov
mov
int
sbb
xchg
dec
push
jle
jno
mov
xor
fisubs
adcb
nop
jbe
dec
push
jnp
fcoml
or
sbb
add
pop
stos
or
push
adc
add
cmp
loope
loope
es
pop
jns
insb
xor
cwtl
lds
call
lret
mov
dec
dec
test
sbb
cmpsb
or
adc
aas
dec
adc
xchg
or
subb
push
movsl
adc
sbb
leave
dec
xor
pop
push
repnz
mov
addl
cmp
pop
inc
data16
add
insl
and
or
sbb
mov
movsl
inc
ret
das
xchg
notl
push
jnp
sbb
popa
stos
jne
lea
orl
xchg
cmp
ret
xchg
inc
adc
scas
lock
inc
sub
or
rol
sahf
xchg
stc
xor
sti
mov
ret
pop
mov
dec
sbb
lea
mov
cmp
inc
xchg
fbld
nop
jno
stc
int
mov
or
rcr
mov
hlt
outsb
xchg
xor
add
add
push
inc
nop
push
pop
aad
movsl
inc
xlat
ljmp
outsb
pop
sbb
scas
pop
iret
push
or
ljmp
xchg
subl
outsl
dec
sbb
xchg
jge
fistpl
xor
rsqrtps
sub
in
xchg
add
inc
aam
mov
or
adc
jle
in
mov
pop
stos
ljmp
sub
dec
sub
clc
mov
mov
jp
jmp
je
push
mov
or
jp
fimull
sbb
int3
add
adc
in
daa
adc
inc
sub
pop
fwait
add
popa
jns
push
fisubl
fiadds
sub
cs
mov
out
pop
cs
out
xchg
rclb
xchg
sub
push
stos
xchg
loopne
add
dec
sbb
add
add
imul
pop
fsubl
mov
mov
mov
cmp
adc
and
mov
cmp
test
pop
or
push
adc
jno
sub
out
ret
sahf
jl
sub
pop
and
mov
sbb
xlat
fmull
data16
sbb
out
data16
stos
mov
in
xorl
loope
int
pop
push
sbb
dec
lods
aaa
sub
xor
inc
int3
xor
xchg
or
add
add
mov
jecxz
jle
xor
in
pop
pop
xor
mov
enter
cmpsl
mov
cld
fwait
sub
jp
xchg
test
jo
inc
cmc
jns
bound
into
out
and
xor
fistl
xlat
mov
cmc
lds
jle
insb
or
cwtl
or
jnp
aas
mov
clc
push
loopne
pop
daa
sbbl
dec
or
cmp
test
push
add
add
pop
mov
mov
fucomi
adcb
mov
or
emms
push
adc
fxch
popa
outsb
adc
cmp
imul
jo
mov
push
adc
in
xchg
shll
sbb
lock
sub
imul
outsb
ffree
out
out
cmp
jecxz
sbb
jo
out
xchg
inc
lds
in
out
xlat
enter
mov
icebp
xor
push
mov
aaa
xor
imul
and
cmpsb
jb
xchg
pop
xorb
iret
in
or
loope
in
ficomps
rclb
xchg
lds
loope
cwtl
jbe
aaa
repnz
mov
xor
jle
push
push
or
adc
sub
mov
pop
insb
xchg
std
aas
mov
xchg
stos
inc
jg
ljmp
leave
fwait
fs
add
sub
daa
mov
xor
sbb
xchg
mov
fisubrl
push
dec
movb
mov
leave
das
push
ljmp
pop
bndstx
and
mov
cs
inc
das
push
mov
aam
imul
inc
inc
insb
push
adc
rolb
xor
pop
outsl
jnp
mov
ljmp
mov
mov
pop
sbb
fsubl
idivl
mov
into
adc
dec
adc
adc
outsl
iret
cwtl
pop
push
call
push
fildl
lds
jecxz
sbb
pop
pop
in
fwait
test
fcoms
push
test
imul
mov
jo
or
and
dec
jae
mov
loope
cli
push
dec
dec
pop
adc
add
inc
mov
hlt
push
jbe
add
mov
sti
lahf
ljmp
addr16
mov
sbb
insb
jb
mov
addl
adc
mov
xor
sub
pop
daa
xchg
mov
stos
insl
pop
out
loope
or
jmp
sbbb
sub
and
lret
imul
adc
mov
adc
add
add
dec
mov
scas
mov
mov
iret
ljmp
pop
test
dec
fidivrs
inc
dec
or
push
push
lock
rorl
sub
jmp
lods
jg
add
mov
push
cmpsl
lock
jl
cmp
dec
dec
mov
aas
xchg
sub
fstpt
test
insb
xor
xor
jecxz
loopne
cwtl
mov
cld
add
fs
pop
mov
push
insl
aam
xor
fwait
xchg
test
stos
inc
push
xchg
cmp
sub
sub
mov
mov
xchg
repnz
icebp
jno
sbb
test
mov
insl
add
aad
mov
jmp
in
pop
or
in
call
lret
add
pushf
push
cmp
ljmp
xor
dec
dec
out
ljmp
fstl
xor
faddl
inc
je
add
add
push
cs
push
enter
das
sub
cld
out
je
push
inc
mov
jle
outsb
sbb
inc
fwait
adc
pop
ret
sbb
dec
in
pop
dec
in
lods
popa
jno
repz
mov
fwait
mov
sub
jnp
cmpsb
mov
push
jecxz
out
mov
repnz
aas
xlat
adc
pop
push
outsl
cmp
pop
aam
popa
mov
mov
aaa
xchg
pop
call
cs
dec
stc
xchg
pop
xchg
pop
addr16
loop
movsl
inc
or
aad
push
or
je
ljmp
inc
or
cltd
sbb
mov
gs
mov
cli
les
xchg
shr
pop
mov
pop
imul
adc
stos
outsb
jb
cmpsb
movb
dec
xchg
imul
pop
mov
les
lods
mov
scas
mov
loopne
std
mov
stos
inc
mov
add
loop
movsb
inc
push
cmc
mov
cs
arpl
inc
iret
outsl
lea
fistps
imul
scas
gs
or
xchg
je
push
sub
orb
xlat
rorl
mov
mov
push
lods
rolb
lret
icebp
xor
pop
fistl
pextrw
xchg
mov
dec
lcall
push
incb
in
sti
js
sub
popf
sbbb
jmp
push
push
mov
add
add
adc
inc
adc
adc
and
mov
addr16
dec
stos
fistl
pop
mov
enter
int
mov
lcall
dec
in
and
mov
cltd
mov
ds
scas
std
jo
cmp
je
add
push
out
push
daa
sub
idiv
stc
lods
cmp
lods
jo
mov
fldt
mov
mov
mov
pushf
loope
inc
psllq
shr
sbb
movl
add
loopne
dec
loope
aad
dec
cltd
sbb
sarb
dec
int
sub
outsl
out
lcall
xor
cmp
xor
jmp
dec
or
sarb
mov
mov
cmpsl
lret
mov
cs
loope
into
xor
xchg
pop
jnp
adc
mov
mov
adc
xor
cmp
xchg
add
imul
sbb
das
lods
sbb
push
hlt
test
das
insb
repz
jl
popf
ljmp
lock
push
pop
xchg
testb
dec
or
xor
paddusb
dec
sbb
testb
pusha
mov
movsl
in
testb
cmp
mov
mov
jne
or
dec
sahf
pusha
shll
dec
or
fidivrl
adc
adc
adc
pop
cmp
dec
cmpsb
lret
add
jmp
push
ja
and
push
inc
mov
mov
insl
or
cmp
das
clc
xor
or
test
repz
fbld
xchg
mov
inc
pop
inc
adc
or
lods
lret
xor
dec
sarb
jae
inc
jmp
sub
pop
hlt
imul
sbb
push
mov
popf
push
cmp
stc
dec
pop
int
aas
push
lock
jo
mov
or
out
push
pop
adc
ror
dec
sarl
aas
push
mov
and
cmp
ds
mov
jnp
pop
add
insl
enter
inc
je
call
call
popf
das
or
cmp
xorb
jo
aad
daa
and
sbb
adc
mov
int3
cmp
push
pop
fdivrl
loopne
sbbl
pusha
xchg
mov
adc
inc
sub
into
xlat
sbb
and
xchg
scas
sbb
sti
sbb
movsl
outsb
arpl
jmp
add
pop
xor
scas
hlt
and
decl
jmp
and
aaa
cmpsl
xor
xlat
cmp
stos
push
dec
inc
out
aad
arpl
test
ret
les
mov
lock
lcall
movsl
fidivrs
dec
xchg
jbe
fwait
ss
mov
and
adc
test
jmp
das
and
xlat
mov
enter
stos
xlat
fs
std
cwtl
sub
mov
hlt
mov
dec
stc
cld
pop
xchg
inc
mov
inc
stc
decl
gs
push
scas
jp
dec
notl
jb
and
and
sbb
sub
insb
and
pop
mov
inc
sti
xor
test
mov
cli
push
xchg
imul
insb
cs
lcall
arpl
or
push
adcb
inc
ljmp
add
mov
lods
lret
jae
push
cmp
popf
pushf
imul
sub
mov
ret
out
jne
xchg
repnz
jmp
inc
inc
jns
push
push
cmp
out
sahf
inc
int
testb
add
clc
jnp
add
cld
mov
adc
pop
xchg
clc
dec
adc
cmpsb
lret
mov
adc
sub
pop
cmp
and
dec
rcrb
lock
and
cltd
mov
push
in
jb
sbb
push
loopne
movsb
leave
push
xchg
ret
aaa
mov
andl
cmpsb
jbe
in
call
out
add
mov
push
lcall
push
cltd
js
push
test
sbb
jl
lds
jbe
and
es
lcall
shlb
sub
dec
lea
xchg
test
mov
pop
inc
ss
test
xchg
mov
icebp
mov
add
loop
pusha
imul
js
and
xor
addb
sbb
sub
je
popl
sarb
in
mov
push
insb
gs
hlt
mov
push
je
stos
mov
movsl
xchg
cld
mull
sahf
shrl
mov
sbb
stos
cmp
pop
sbb
sbb
imul
xorl
dec
out
stc
and
push
jge
mov
add
add
fildl
xor
push
add
cmp
out
cmp
push
adc
jns
daa
repz
inc
cltd
push
xor
jns
sbb
fcmovnu
into
aam
xlat
lock
inc
test
xchg
scas
and
rcl
repnz
aam
int3
xchg
add
inc
adc
in
jmp
fcmovb
sub
jbe
dec
jp
mov
xchg
adc
out
aaa
js
addr16
in
pop
dec
dec
adc
xorb
xchg
push
inc
sbb
and
cmp
mov
xor
mov
and
cmp
pop
imul
pop
or
jb
les
sub
idivl
or
jge
rolb
dec
inc
in
jp
sub
repz
adc
add
lds
lods
lret
mov
hlt
in
lods
mov
jmp
es
popa
test
add
adc
lahf
sbb
fimuls
fxsave
fdivp
cmp
dec
mov
xchg
aam
xor
and
xchg
ljmp
sub
push
push
push
test
xlat
jo
mov
xor
mov
mov
xor
dec
cmp
movsl
inc
movswl
push
inc
imul
outsb
cwtl
lcall
fcmovne
lret
int
loop
jg
dec
das
test
xor
pop
cmp
add
add
sub
test
jl
outsl
pushl
xor
sbbb
or
sub
loopne
in
sahf
and
sub
bound
into
mov
loope
ret
cmp
cmc
clc
push
imul
fnstsw
fldenv
sbb
mov
addr16
repnz
frstor
lcall
inc
add
push
fidivrl
cwtl
cmc
sub
je
and
adc
int3
jnp
sti
sbb
cli
mov
or
shlb
in
bound
cmovg
stc
dec
lret
mov
push
mov
fidivl
lods
sbb
repz
jle
xchg
addb
insl
test
xchg
dec
pop
scas
mov
inc
xchg
sub
jl
rcrl
xchg
jecxz
cmp
push
mov
stos
fdivl
movsl
test
scas
sbb
inc
mov
and
dec
xlat
ss
mov
dec
and
and
addb
jp
or
jecxz
cmp
movsl
leave
adc
hlt
cmp
fsubrp
add
pop
in
inc
push
xor
in
insl
mov
in
cmp
call
pop
cwtl
gs
add
movsl
xchg
sbb
xchg
mov
or
lahf
mov
mov
shll
stos
jp
ljmp
push
jb
lret
fwait
rolb
addr16
and
lret
aaa
pop
lret
sbb
mov
pop
aaa
in
and
test
test
pushf
add
lret
ja
sbb
paddsb
xorl
fucomi
jl
mov
icebp
jbe
add
pop
push
std
aaa
sarb
mov
xlat
mov
mov
or
xchg
cmp
jecxz
fs
cmp
andb
scas
or
faddl
mov
test
add
add
pop
push
testl
mov
dec
mov
jo
mov
xchg
fwait
jge
dec
lock
adc
mov
fucomp
mov
outsb
inc
iret
cmpsl
jp
out
shll
stc
xor
jge
rol
fisttpll
mov
pop
adc
