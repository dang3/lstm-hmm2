push
mov
mov
add
mov
sub
add
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
add
leave
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
xchg
add
cmp
jb
pop
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
inc
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
push
add
pop
add
add
cmp
jb
pop
pop
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
sub
mov
add
xchg
add
mov
mov
not
mov
add
xchg
add
not
shl
imul
sub
xchg
add
imul
add
decl
mov
jne
pop
mov
pop
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
sub
lods
xor
stos
sub
xchg
sub
sub
sub
rorl
sub
add
jne
pop
pop
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
add
not
add
not
shr
add
push
mov
add
add
push
lea
push
mov
call
sub
add
mov
mov
mov
mov
push
popl
sub
xchg
add
lods
xor
stos
sub
xchg
add
sub
nop
add
rorl
sub
push
add
pop
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
sub
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
push
lea
push
push
xor
inc
push
push
push
push
mov
call
push
mov
call
mov
nop
lea
test
jne
mov
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
push
call
push
mov
jmp
push
push
push
push
push
push
mov
call
test
je
push
mov
call
xor
pop
pop
leave
ret
push
mov
sub
xchg
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
add
pop
leave
ret
push
mov
add
sub
mov
mov
add
mov
push
xor
mov
cmp
je
push
push
lea
mov
push
mov
mov
call
push
mov
call
push
mov
call
push
call
add
xchg
add
mov
push
mov
call
push
mov
call
push
mov
call
mov
call
push
mov
call
push
mov
call
push
mov
call
lea
cmp
je
mov
cmp
jne
mov
add
push
mov
call
pushl
push
mov
call
mov
cmp
je
mov
add
mov
jmp
cmp
je
inc
mov
mov
cmp
jne
jmp
lea
mov
mov
mov
add
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
sub
push
push
push
push
xor
lea
push
push
mov
call
sub
add
push
push
push
push
push
push
push
lea
push
mov
mov
call
cmp
je
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
mov
cmp
je
mov
jmp
push
mov
call
push
lea
push
push
mov
push
mov
mov
call
mov
call
push
push
push
mov
lea
push
mov
push
push
push
lea
push
call
mov
cmp
je
mov
call
cmpl
jne
cmp
je
cmp
jne
push
push
push
push
mov
call
mov
lea
push
mov
mov
push
pushl
push
mov
call
cmp
je
cmpl
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
xchg
add
push
mov
and
add
push
add
call
mov
push
mov
call
pop
test
jne
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
call
add
add
push
mov
call
test
je
push
mov
call
push
jmp
push
mov
call
mov
call
push
mov
call
push
mov
call
mov
mov
add
pop
pop
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
push
mov
call
pop
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
mov
call
push
mov
call
push
mov
call
pop
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
push
lea
push
pushl
call
push
mov
call
pop
mov
push
mov
call
push
lea
push
push
pushl
mov
call
push
mov
call
push
lea
push
push
pushl
mov
call
push
call
push
mov
call
mov
mov
xor
xor
pop
cmp
jae
mov
mov
mov
subl
xchg
addl
push
pop
rep
mov
add
add
add
mov
mov
movzwl
add
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
push
push
pushl
mov
call
jmp
pushl
pushl
pushl
jmp
push
mov
call
xor
pop
pop
pop
leave
ret
stc
mov
dec
push
addb
add
add
inc
jg
add
insl
mov
cmc
imul
shrb
and
and
lea
mov
fucomp
cmpsl
int
gs
ds
mov
mov
test
call
lgs
mov
inc
mov
mov
or
movsl
mov
mov
rorb
pop
fstl
and
enter
sub
and
test
js
insl
add
dec
jmp
push
jecxz
dec
sbb
and
mov
fcmovne
or
cmc
rolb
sub
mov
mov
jb
negb
subb
adc
jns
inc
mov
pop
je
ja
cmp
mov
ja
lea
xchg
xor
data16
nop
cmp
add
sub
std
sti
loop
aam
or
cmp
xchg
cmc
fcmovnb
test
adcb
gs
sub
xchg
mov
mov
lahf
movsl
xor
lods
cli
lods
call
daa
pusha
in
adc
dec
sbb
insl
add
mov
icebp
jge,pt
decb
lock
ret
cli
pop
xchg
push
daa
ljmp
push
add
ss
int
inc
push
sbb
clc
mov
inc
mov
sarb
hlt
xchg
sub
sbb
pop
adc
mov
cs
mov
cmpsb
lcall
mov
push
and
jno
shrl
sbb
cli
inc
mov
mov
daa
jge
adc
adc
insb
mov
sbb
stos
xor
xor
repz
jns
mov
mov
in
cwtl
fstl
inc
leave
cli
pop
mov
cmp
loope
sub
mov
rol
sbb
pushf
rcll
xchg
jo
cmp
inc
and
inc
pop
out
fcompl
push
int3
and
mov
and
fadd
xchg
sti
out
rcrl
int
xor
insl
rcrl
sub
faddl
xchg
hlt
faddl
adc
adc
dec
push
clc
pop
imul
push
sti
add
insl
sub
sbb
fmull
mov
aas
popa
lock
mov
pop
sub
nop
and
sbb
repnz
rcll
cmp
movsb
lret
adc
addb
aaa
mov
sarl
stos
dec
stos
push
fwait
aas
push
sub
out
icebp
jbe
into
jb
int
cmpsb
inc
aas
sub
and
dec
ja
mov
fwait
push
xor
sahf
fstl
loope
ja
pop
xchg
jecxz
iret
sub
ljmp
sub
push
test
xor
leave
push
and
cmp
inc
mov
in
cmpsl
mov
fwait
or
int
ja
loopne
lcall
ja
andb
pop
mov
inc
inc
push
popa
xor
sbbb
add
mov
les
lcall
je
pop
mov
xchg
cld
sbb
mov
lea
mov
mov
add
inc
test
push
xor
inc
push
mov
jae
jne
lock
adcl
jcxz
push
test
in
xchg
pop
cmp
xchg
fdivrs
std
pop
xor
mov
push
lret
ja
and
and
subb
jne
sbb
sub
sbb
adc
aad
push
aas
rcrb
or
ja
cli
dec
aad
cmp
and
sub
cmp
sub
jo
sbb
inc
jp
dec
test
or
sbb
push
sahf
pop
mov
jno
push
pop
imul
mov
js
xor
loope
and
adc
jae
adc
lds
mov
psubsb
mov
lea
and
pop
jno
lcall
rolb
and
or
je
push
jg
mov
mov
xor
adc
pop
scas
dec
daa
insb
scas
sub
cwtl
adc
loopne
dec
mov
xchg
frstor
push
or
or
aas
jmp
loop
test
inc
ret
mov
cmpsl
sub
int3
mov
pop
lret
aam
xor
pop
adc
pusha
add
popf
popa
mov
lahf
inc
add
in
loop
mov
out
pusha
lret
into
test
mov
gs
or
aas
push
incl
fists
lods
movsl
add
movsl
jmp
jo
jmp
add
scas
fbld
rcl
mov
scas
inc
pop
ljmp
in
jae
xchg
daa
jmp
inc
cmp
cmc
mov
push
xchg
aam
daa
adc
jnp
sbb
cmpsl
leave
mov
test
shlb
push
div
adc
sub
mov
xchg
mov
fsts
insb
loope
mov
xchg
mov
fnstcw
in
movsl
adc
sahf
idivb
sbb
int3
pusha
cs
pop
rcr
nop
dec
adc
inc
xlat
mov
inc
sub
iret
stos
jge
xor
dec
add
dec
adc
mov
lods
mov
cmpsl
cmc
mov
push
pop
mov
les
aad
sub
jl
and
xor
push
mov
xor
stos
fnstenv
mov
cmpsb
rcrl
push
outsl
pushw
xchg
addr16
xchg
and
jno
dec
addr16
push
jmp
xchg
aam
inc
ss
and
xor
jae
lret
repz
push
inc
sub
andb
mov
ss
mov
cmc
sbb
cmpsl
mov
push
scas
cld
adc
ret
lcall
sti
adc
cmp
add
mov
imul
push
sub
js
jns
clc
adc
jbe
gs
sahf
inc
mov
push
jo
or
push
mov
sbb
sbb
adc
mov
sbb
inc
shl
popa
lret
in
fiadds
xor
adc
xor
shll
dec
push
push
mov
fucomi
lds
push
div
mov
in
test
xor
nop
jmp
mov
aam
jae
les
sub
sub
fcoms
fsubl
inc
and
and
adc
and
sarl
push
sbb
push
xchg
jmp
cmp
and
rcl
jbe
es
mov
repz
xchg
or
xor
pop
cli
pop
mov
stos
cmc
inc
pop
inc
adc
xchg
icebp
ljmp
lods
cmc
pop
and
je
test
cmpsl
mov
cld
pop
sub
push
jae
cmp
push
loop
push
sti
jg
fmulp
icebp
push
mov
push
shr
loop
divb
dec
jl
sbb
sbb
enter
dec
dec
fsubrs
jns
mov
mov
cmp
jae
sbb
fs
sub
mov
jge
scas
mov
fsqrt
dec
popf
rcll
in
mov
xorl
shrl
shl
scas
addr16
les
sbb
dec
mov
stos
lea
pop
shlb
lock
sbb
mov
cmp
inc
sub
jecxz
cmp
push
dec
jecxz
push
sub
xchg
xchg
push
mov
hlt
pop
mov
bound
notb
dec
push
rcrb
mov
xchg
push
dec
enter
push
pop
push
jg
mov
and
insw
bound
mov
out
adc
sub
out
inc
adc
add
in
hlt
sbb
in
dec
int3
movsl
add
push
mov
test
popa
inc
push
clc
cmpsb
std
xor
push
jnp
negb
iret
out
insl
js
sbb
pop
sarl
mov
pop
ja
ds
sbb
jp
retw
fldt
inc
movsl
loopne
shrb
mov
push
mov
pusha
inc
xchg
push
les
mov
mov
mov
bound
popf
mov
mov
sbb
in
push
push
sbb
inc
cs
leave
mov
ret
idivl
les
xorb
shrl
ret
sbb
push
xchg
insl
mov
pop
xchg
cltd
rolb
fmull
iret
es
sub
cwtl
sarb
sbb
add
mov
cs
dec
mov
cmp
xor
shrl
add
cmp
add
cmp
add
cmp
repnz
and
ja
lahf
cmp
add
js
popa
mov
ss
xchg
addb
sbb
scas
pop
out
push
jmp
pop
dec
mov
jb
fidivs
dec
add
insl
test
in
xchg
in
mov
pusha
push
pcmpgtd
mov
fmull
xor
stc
inc
cld
test
pop
repnz
fsts
lcall
mov
mov
sub
test
outsl
push
jae
adc
add
sub
repnz
cmc
insb
cmp
sub
sti
rcr
pop
mov
xchg
subl
out
dec
or
mov
inc
add
mov
xor
push
xlat
cmp
negb
add
jp
xchg
jno
mov
xchg
aam
pop
and
leave
mov
movsl
ret
fwait
rol
and
inc
fs
add
out
out
dec
scas
sub
sub
sti
repnz
jne
jne
adc
lcall
enter
inc
inc
movb
arpl
and
andl
xor
push
add
fisubl
or
or
sbb
mov
nop
pusha
and
xchg
xor
icebp
xlat
imulb
cmpsb
lds
and
xor
adc
aaa
iret
call
aam
in
mov
add
jmp
cmpsl
push
xchg
in
xchg
in
not
pop
inc
rcl
jl
test
notl
cli
out
pop
jbe
insl
sbb
andb
repnz
movsl
getsec
jmp
pop
lock
test
test
mov
mov
shr
or
stos
add
stos
mov
adc
nop
in
mov
in
and
add
mov
and
adc
xchg
ss
mov
jecxz
mov
rol
outsl
jecxz
in
sub
pop
inc
addl
xchg
adc
pusha
shll
dec
lcall
pop
inc
push
mov
out
lret
ljmp
pop
xchg
xchg
in
shll
stos
push
jge
jmp
nop
call
lock
xor
dec
adcb
mov
jnp
call
jmp
call
in
loop
je
mov
push
mov
push
cmpsl
popa
aad
xor
sti
pop
jbe
clc
stos
adc
pop
sbb
dec
dec
mov
popa
or
stos
push
sti
mov
cmpl
int3
pop
pop
add
jne
inc
sahf
cmc
sbb
in
xor
inc
movsl
mov
filds
push
imul
test
push
popf
jg
and
sub
cwtl
shll
hlt
dec
mov
mov
rorl
jnp
ss
hlt
js
cmpsb
jb
or
jge
or
inc
addr16
inc
xor
cmc
adc
xor
outsb
xchg
lods
flds
or
lods
xchg
xchg
in
movsb
xchg
push
dec
or
jno
decb
cld
cmc
xor
add
jne
enter
mov
test
mov
push
lock
cmp
xchg
mov
aad
dec
mov
push
mov
arpl
adc
stc
mov
sbb
sub
jge
leave
pop
jl
fs
xchg
loop
addr16
movsl
jge
adc
data16
jg
std
xor
stos
daa
sbb
or
or
sub
scas
lahf
push
xchg
xorb
scas
add
xchg
pop
call
cmp
dec
decl
and
inc
xchg
mov
push
aad
push
jae
sub
xchg
jmp
es
pop
xor
mov
mov
jnp
iret
in
fsubl
xchg
pop
es
xchg
data16
movsl
icebp
jge
pop
rcrb
push
pop
fildll
mov
xor
sar
push
loope
mov
inc
xchg
xchg
add
push
push
jnp
sbb
fwait
and
movsl
out
andb
push
fucomp
sbb
ljmp
ficoms
jg
pop
shll
pop
cmp
js
cmp
outsl
les
sbb
lods
xor
imul
dec
out
xlat
inc
sub
addr16
stos
push
mov
push
rclb
pop
mov
add
inc
dec
dec
mov
dec
loopne
nop
sub
movsb
fcomps
sbb
push
out
mov
fnsave
aas
ja
adc
jno
inc
nop
stos
pop
imul
mov
fimuls
fcoml
mov
and
mov
xchg
inc
aaa
addr16
fidivs
add
mov
sti
rcl
mov
mov
adc
fcmovbe
adc
sub
or
subl
mov
in
imul
cmp
or
inc
insb
scas
fistpl
loopne
jns
add
cld
cwtl
or
push
adc
mov
xchg
xchg
fs
fdivrp
mov
mov
lahf
lds
mov
cmp
movsb
dec
shr
push
jg
out
inc
std
and
push
xor
xor
pop
test
addr16
fldenv
sti
negb
or
std
idivl
mov
pop
dec
out
sub
dec
scas
push
inc
inc
add
cs
pop
mov
xor
icebp
sbb
or
in
orb
push
sti
nop
adc
out
and
xchg
xchg
insb
push
add
push
mov
mov
and
mov
hlt
lret
sub
jne
enter
lcall
loop
imul
cmp
push
jbe
pop
xchg
loopne
lahf
and
adc
fbld
sub
push
mov
ret
mov
roll
mov
aaa
call
mov
pop
aad
xchg
stc
mov
xchg
sub
push
lret
lcall
jmp
jp
fprem1
adc
test
push
roll
mov
out
popfw
stc
test
cmpsl
xchg
or
imul
pop
in
out
or
cmp
cmpsl
xchg
scas
xor
and
rorb
popf
sbbl
call
repz
sub
xor
inc
fwait
addr16
add
jne
lea
mov
aas
sub
mov
mov
jge
es
and
pusha
xor
xor
mov
adc
adc
or
inc
add
jecxz
jns
sub
repz
cli
aam
and
gs
call
cltd
dec
pop
and
popa
push
aas
dec
les
aam
repz
lahf
movsb
pop
stos
mov
add
dec
addl
cld
popf
jmp
mov
pop
stos
push
sbb
leave
dec
add
lcall
aam
repnz
pop
xchg
pop
bound
pop
fcmovb
xchg
out
sub
cli
push
adc
adc
pop
push
jae
lret
mov
adc
orb
adc
call
dec
mov
adc
loope
xchg
mov
pushf
enter
iret
mov
stc
jle
dec
ljmp
test
add
fnstsw
out
shll
push
xor
cli
outsb
pop
jne
adc
fadd
insb
data16
sbb
push
test
out
jne
add
mov
andl
cltd
and
roll
loope
dec
dec
idiv
fs
iret
arpl
sub
push
cmpsb
mov
repz
sbb
jbe
and
adc
lock
sub
push
cwtl
add
icebp
cmp
pusha
fidivrl
mov
out
xchg
cs
pushf
scas
mov
sti
mov
mov
ja
xchg
pop
mov
inc
or
push
dec
push
xor
jb
iret
les
sub
not
and
pop
inc
cmpsb
in
mov
insb
rclb
popf
pop
repnz
cmpsl
test
cmp
call
mov
sbb
prefetch
or
xchg
std
adc
mov
sti
shr
ret
mov
cmp
dec
fwait
aad
lods
insb
iret
popa
cmpsb
aas
cmp
adc
mov
shr
sub
sbb
ljmp
shlb
ja
popl
xor
repnz
loope
mov
dec
lock
xchg
adc
jp
out
stos
push
fwait
xor
pop
xchg
in
sub
ret
add
call
pusha
fsubrl
mov
sarb
inc
pop
xchg
push
cmp
xchg
adc
push
mov
push
pop
pop
and
mov
insl
add
imul
inc
mov
in
pop
fistl
adc
mov
mov
in
dec
test
xchg
sbb
cmpsl
add
sti
cmc
aam
ficomps
dec
fsts
lcall
mov
movsb
mov
push
clc
xchg
sti
int
or
fdivrl
pop
movsl
inc
inc
bound
jns
adc
popa
inc
cmp
pop
adc
loop
leave
sub
clc
jge
jg
jle
dec
sbb
aas
pusha
cs
xchg
jmp
std
or
dec
in
repnz
movsl
adcb
iret
jae
scas
pop
sti
aas
dec
rcl
rcrl
jle
jge
lahf
jnp
and
shrb
sub
ja
jae
loopne
aam
xchg
jae
leave
in
fdivl
daa
lcall
push
lret
xchg
insb
mov
and
icebp
mov
xor
int3
xchg
clc
jbe
push
js
in
pop
inc
adc
scas
xchg
sbb
int3
out
outsb
cmp
xchg
daa
out
inc
jno
xchg
into
rcll
or
in
sbb
ret
pop
pop
cmp
mov
cmp
iret
popa
andl
push
mov
outsl
ja
jns
sbbb
and
daa
sbb
jge
sbb
clc
or
push
sbb
mov
es
aas
xlat
cmp
cmp
xor
or
sub
inc
xchg
pusha
mov
xchg
or
jg
sbb
sbb
adc
loop
mov
lea
inc
scas
inc
mov
pop
mov
xor
cmp
ss
repz
pop
hlt
movl
xor
sarl
pop
add
test
icebp
arpl
cmp
cmpsl
and
or
jno
fcoml
fidivl
push
dec
sub
push
insb
jg
xchg
andb
mov
lret
sti
lock
pop
mov
cmp
popa
and
xor
pop
dec
and
and
roll
adc
jp
mov
idiv
scas
loopne
xchg
int3
or
insb
in
dec
js
and
cltd
xor
cld
sub
nop
lods
sbb
mov
sub
insb
dec
jo
clc
jno
pop
pop
dec
mov
enter
and
dec
stos
jge
or
inc
or
or
outsb
xor
in
adc
dec
sbb
into
sub
std
dec
orb
and
jecxz
addr16
add
dec
adc
aam
aaa
inc
sbb
push
cmp
lret
sub
sti
mov
xchg
mov
pop
or
inc
ss
gs
jg
clc
loopne
sbb
rcr
cmc
xchg
shrl
fistpl
ficoml
lods
adc
xchg
adc
jne
pop
xchg
sahf
sub
addb
inc
dec
pop
add
xor
scas
icebp
inc
clc
push
xchg
or
jns
adc
cmp
sbb
and
sub
jb
cmp
out
or
cmp
pop
rorl
bound
lods
xchg
mov
push
push
fisubl
xchg
sub
ss
add
jle
sub
mov
adc
xchg
frstor
fwait
out
mov
ret
cmp
pushf
pop
cmp
dec
cli
pop
mov
js
inc
fiaddl
iret
movsb
aas
pop
adc
dec
aam
ja
add
mov
imul
test
in
shl
mov
push
lret
stc
mov
iret
loop
and
jns
add
mov
arpl
test
leave
dec
cltd
adc
lahf
popa
mov
inc
shl
jns
scas
mov
cmp
data16
adc
xor
mov
mov
mov
and
iret
nop
das
sbbl
jp
test
xchg
sub
fcomps
sub
sbb
js
pop
stos
sbb
xchg
dec
and
jmp
jmp
repz
clc
ret
xchg
and
test
dec
add
lods
call
aad
mov
hlt
pop
or
shr
hlt
cs
daa
inc
xchg
jecxz
sub
icebp
pop
mov
leave
dec
xor
dec
push
xor
rclb
jb
xchg
lock
push
mov
stc
xchg
add
jnp
pop
bound
mov
mulps
cmpsl
pop
subb
fwait
push
sub
stos
pop
xor
sub
test
mov
xor
ljmp
fscale
loop
pop
mov
adc
loop
in
leave
jp
cmpsl
add
adc
xchg
sbb
mov
movsl
outsl
inc
int
add
xor
sbb
fldcw
push
mov
dec
orl
or
sub
outsl
adc
sub
xchg
adc
std
mov
sbb
rol
pop
sahf
outsl
dec
and
xor
hlt
jne
in
sbb
es
rcl
popa
shr
test
rolb
add
jb
lcall
testl
popf
inc
int3
xchg
push
mov
shll
lds
push
jge
mov
enter
addl
adc
cmp
outsl
pushf
sub
pop
std
sbb
dec
adc
stos
pop
mov
sahf
adc
mov
inc
push
movsl
shl
adc
mov
lcall
icebp
rcrb
mov
xchg
int
outsb
xor
bound
xchg
lock
repz
fldl
xchg
je
repnz
sub
push
punpckldq
movsl
mov
xchg
sub
pushf
inc
adc
sbb
cld
push
pop
pmaxub
aam
push
inc
int3
sti
stos
out
popa
mov
subl
jne
incb
push
xor
and
mov
sub
dec
push
test
xor
aad
jns
cmpl
and
rcll
insl
repnz
cmc
out
adc
fstl
ret
sub
inc
insb
popa
push
sti
jb
dec
insb
and
inc
jmp
rcll
pop
jecxz
addr16
and
cmp
sub
cmp
jmp
test
jne
add
jg
movsl
scas
cmpb
mov
jbe
pushl
ret
test
fisubs
std
sti
push
fst
lods
cmpsb
xor
jae
out
in
pop
imul
fwait
js
out
mov
cmpsl
pop
mov
jb
mov
movb
insb
push
fidivrl
jo
ret
mov
loopne
lods
push
aam
sbb
shrl
inc
pop
je
mov
push
cmp
pop
pop
lret
in
inc
adc
andl
and
fs
and
inc
adc
ficomps
xchg
and
xor
mov
lea
scas
pcmpeqd
jno
lahf
and
in
push
subl
psubsb
ljmp
out
xor
mov
in
cmp
adc
ficompl
cmc
and
lods
ret
push
inc
mov
dec
dec
dec
je
mov
shrl
xchg
sub
nop
lret
in
jb
scas
aad
adc
je
sahf
add
cld
in
test
ret
pop
mov
mov
gs
add
push
lcall
mov
cwtl
push
lret
lea
mov
jo
pusha
movsb
in
retw
popf
fs
and
push
push
aaa
and
jne
dec
gs
inc
sub
sub
cmp
add
xchg
inc
fmuls
dec
fwait
or
xchg
xor
jno
mov
jnp
pop
stos
bound
cltd
inc
adc
scas
and
aam
sub
pop
gs
and
clc
fcoms
sub
mov
jb
test
stc
cmp
inc
xor
into
out
scas
cmp
add
leave
imul
mov
es
in
cli
subb
cmp
push
xor
shr
test
punpckhbw
push
xchg
or
insb
push
push
inc
add
js
stos
xchg
lds
jge
inc
pop
fs
shrl
sub
xor
dec
fisttpll
hlt
add
jb
cmp
pusha
aad
out
sub
mov
xchg
jge
lahf
fsubr
xchg
ljmp
or
outsl
mov
add
enter
sub
add
dec
or
xchg
mov
lret
aad
repnz
imul
inc
rorb
aaa
lods
xchg
mov
aam
mov
pop
daa
icebp
das
mov
inc
and
mov
add
lea
fs
repnz
sbb
cwtl
dec
mov
inc
int3
das
loope
xchg
sub
mov
sahf
mov
bound
adc
mov
int3
or
ds
cmc
ficoms
std
cmpsl
mov
xchg
jl
or
dec
inc
movhps
jne
testb
mov
mov
xor
rcrl
adc
test
inc
insb
movzwl
enter
lret
clc
cli
movsl
inc
daa
mov
lock
jp
rcrl
jle
jg
aam
mov
rorb
mov
sub
stc
cmp
jg
pop
pop
scas
sbb
mov
sbb
mov
out
out
rcr
adc
push
repnz
fisttps
popa
push
adc
cli
cmpsb
pinsrw
sbb
pop
jmp
ljmp
or
insb
es
lcall
sti
pop
mov
add
test
sub
push
xchg
nop
subl
popa
es
stos
aaa
ds
cmp
imul
pop
mov
inc
mov
mov
ret
mov
arpl
mov
divl
pop
loopne
mov
loopne
xor
mov
insl
or
inc
fs
movsl
out
cmc
push
cmp
repnz
rsqrtps
cwtl
lods
insl
cli
leave
adc
cmp
ds
dec
loop
es
dec
repnz
mov
das
in
push
push
sub
inc
arpl
sti
push
out
pop
jg
jae
push
xor
lods
loope
lods
pop
fistl
lock
shr
filds
lret
pop
cmp
and
lock
int3
and
nop
push
add
mov
mov
fidivs
outsb
sbb
lock
sbb
mov
push
push
sub
outsb
lea
push
or
je
fsubs
cli
push
push
jae
xchg
popa
jb
push
push
shlb
inc
in
cli
sub
mov
push
mov
mov
adc
adc
mov
inc
out
pop
xchg
mov
mov
xchg
test
or
inc
sbb
jnp
mov
add
test
flds
xchg
push
in
mov
mov
and
cltd
out
xor
cmpsl
push
adc
cmp
sbb
adc
lods
push
ffreep
fsubrp
fsubs
sub
aad
pop
ret
sarb
insb
cmp
mov
dec
push
xor
imul
adc
xchg
mov
and
jmp
push
aad
cld
add
add
push
jg
fcomi
loope
mov
clc
ret
inc
pop
in
lcall
dec
push
sub
mov
test
sahf
jl
je
movsb
push
pop
inc
cmc
adc
lahf
push
mov
cs
loopne
dec
dec
add
pop
mov
iret
jne
testl
aad
jle
lea
mov
mov
xor
rcr
pop
call
movsl
dec
pop
inc
mov
nop
fldt
cmp
js
or
xor
iret
xchg
and
sbb
scas
in
arpl
cmp
mov
push
add
pop
mov
fnstenv
mov
inc
jge
stos
push
stos
inc
cmp
inc
aad
add
xchg
dec
and
push
dec
cmpsb
mov
subb
mov
lock
dec
cmp
adc
rolb
mov
pop
jg
add
dec
pushf
inc
mov
std
mov
push
or
inc
stc
sarl
outsb
out
mull
adc
es
mov
hlt
adc
repnz
int
mov
push
jbe
sbb
cmp
xor
push
cld
scas
ja
and
xchg
cmp
int3
cld
sbb
xor
xor
sahf
xchg
cli
jge
xchg
xor
and
xchg
xor
lret
mov
mov
push
push
push
mov
pushf
aaa
adc
in
fwait
pop
add
je
cwtd
mov
aam
xchg
inc
jmp
pop
je
test
mov
push
std
loope
int3
sbb
repz
fcmove
xchg
jo
sti
inc
pop
insb
mov
sub
mov
mov
mov
int
xor
mov
iret
jb
in
xchg
cmp
xchg
push
dec
jg
inc
xor
adcl
xchg
add
aaa
dec
popf
repnz
xchg
inc
aas
adc
cli
jne
andl
fs
cmp
xchg
jecxz
sbb
pop
cmpsl
rorb
sub
xchg
je
lahf
inc
out
xlat
add
pop
ds
js
aaa
sbb
fsubr
addl
fcompp
jge
jle
xor
repnz
stc
les
mov
pop
cmp
loop
push
scas
add
jmp
jle
add
out
repnz
shrl
sub
out
adc
out
mov
sbb
xorb
das
aad
testb
mov
cmpsl
loop
adc
xchg
imulb
jae
int
rcll
rolb
add
push
fidivl
add
js
repz
and
inc
sbb
out
push
jle
inc
mulb
push
rolb
cmpsb
add
bound
lcall
icebp
inc
add
and
imul
dec
ret
aas
mov
dec
jno
enter
aad
xchg
xchg
in
push
mov
ds
fldcw
loop
adc
in
data16
push
div
xor
inc
insb
xchg
mov
xchg
jno
push
sahf
push
or
xchg
push
add
dec
or
jg
sub
addb
pop
xor
repz
in
fwait
divb
lds
das
mov
jle
bound
imul
add
lea
push
in
inc
lds
andl
fsubrs
xlat
lds
lock
and
mov
lods
loope
rcrl
data16
xchg
mov
dec
jecxz
fsub
add
push
imul
add
jp
repnz
mov
in
inc
jmp
test
inc
lods
push
movsl
imul
mov
jnp
outsl
out
sarl
clc
movsl
int
push
dec
mov
cld
test
cld
pop
and
cwtl
xor
es
dec
iret
pushf
loope
divb
fisubl
sub
mov
and
nop
sub
or
std
and
ja
je
in
test
lcall
enter
mov
adc
cld
and
movsb
fcompl
dec
out
pushf
incl
cltd
popa
out
mov
jg
and
pop
sbb
cmp
pop
add
addr16
enter
push
out
and
push
orb
dec
fstpl
fcoms
movsb
adc
pop
cmp
and
fcompl
inc
adc
aam
imul
inc
std
push
and
fcoms
pop
xorl
mov
dec
das
jp
mov
out
pop
or
dec
out
ja
dec
pop
sbb
xlat
cmp
push
push
sub
cmpl
leave
xchg
add
mov
cld
ficompl
jb
dec
movsl
lods
push
leave
xor
std
nop
jo
push
sub
imul
out
mov
outsl
insl
pop
lea
pushf
mov
loop
jb
sbb
and
fimull
stos
lcall
sub
hlt
ret
scas
outsl
in
xchg
sar
iret
sbb
iret
mov
lret
mov
and
xchg
aam
sub
push
add
mov
or
lods
inc
pushf
ja
cld
push
cmp
lret
imul
jmp
dec
push
in
sbb
imul
sti
ss
lahf
and
xlat
cmpsl
fwait
lret
icebp
xchg
std
mov
lahf
sub
ja
lods
xor
sahf
jno
push
inc
jbe
adc
fstpl
push
mov
jge
leave
sub
cmp
dec
out
in
aaa
inc
outsb
xchg
js
test
int
mov
cmpsb
mov
push
fs
in
pop
jle
repnz
sub
shl
mov
negb
cltd
dec
movsb
ljmp
enter
push
shll
out
cs
inc
lret
push
push
stos
sub
lret
xor
pop
mov
enter
cmp
scas
push
stos
out
mov
xchg
push
inc
popf
jns
ja
lock
in
ljmp
push
mov
iret
je
and
adc
test
inc
test
movsb
add
xor
xchg
cmpsl
sbb
mull
cmp
or
jmp
mov
adc
pop
sub
xchg
out
sti
jmp
mov
mov
mov
mov
test
cmpl
mov
jecxz
or
fldl2e
xlat
dec
jecxz
xchg
cmp
sub
insl
sbb
mov
sbb
nop
and
aam
subb
lods
fiaddl
push
lret
jo
mov
repz
mov
mov
xchg
cs
sbb
aaa
popf
push
lret
jmp
xchg
fisttpll
shl
lea
sbb
icebp
jno
arpl
mov
jne
movl
neg
aaa
add
pop
je
sub
mov
fdivr
mov
sbb
push
fcmovnbe
add
div
andnps
fistpl
jo
xchg
pop
sbb
xor
sbb
push
xchg
cmp
in
sub
stos
mov
cs
sub
jl
je
stos
movb
xchg
sbb
mov
add
mov
dec
dec
data16
mov
push
jne
add
push
aam
clc
jmp
cmp
xchg
or
insl
jecxz
push
sbb
icebp
pop
lock
add
lds
lret
inc
xor
shl
das
push
jnp
add
lods
jl
jmp
xchg
or
push
and
pop
cld
xchg
dec
pop
sub
mov
and
aam
in
xor
mov
mov
xchg
push
mov
cmp
mov
lods
push
ficoms
out
repz
pop
adc
shrl
adc
inc
fdivr
test
fwait
je
mov
aad
jo
push
pop
mov
inc
pop
sbb
mov
loopne
push
jnp
out
mov
stc
pop
inc
dec
xchg
inc
pop
bound
dec
in
fmull
cmp
dec
fildl
mov
lock
xchg
adc
mov
add
rcl
jns
stos
xchg
test
test
adc
and
iret
cmc
xor
sub
in
cmp
fdivrs
or
add
push
out
cmp
rcr
sub
mulb
shlb
adc
mov
mov
mov
jo
mov
inc
sbbb
or
aam
sbb
and
jnp
in
pop
mov
shlb
dec
adc
mov
ss
jo
sub
dec
addr16
rclb
and
test
int
lahf
stos
pop
or
pop
sub
nop
mov
jo
dec
std
push
icebp
in
sub
outsl
pop
add
inc
push
mov
test
xchg
mov
outsl
cmp
or
push
sub
push
sbbb
push
jns
sbb
mov
mov
adc
test
mov
pop
push
pop
lea
mov
std
xor
pop
xchg
adc
cld
xchg
fnstenv
cmc
cmp
lods
insl
dec
mov
push
cwtl
or
enter
pop
cmp
stos
mov
ficoms
stos
pop
fcmovnb
stos
icebp
outsb
push
int3
ficompl
dec
sub
push
add
cmp
cs
mull
sbb
mov
inc
add
gs
mov
rcl
adc
leave
inc
sbb
imul
inc
ljmp
sub
ficoms
xchg
lcall
and
fisubl
sbb
es
rorl
ja
data16
int
int
mov
scas
outsl
test
sahf
xchg
jle
fdivr
addr16
sbb
ja
out
aad
jecxz
push
movsb
or
mov
jae
ds
mov
jmp
sub
mov
test
testl
xchg
arpl
pusha
daa
mov
stos
sbb
in
jp
lret
call
push
push
adc
int
scas
pop
lea
lods
lds
mov
lcall
inc
daa
lahf
xor
pop
add
pop
cltd
pop
jno
sahf
or
cmp
filds
mov
dec
inc
in
push
sub
jecxz
sti
xchg
push
sub
divb
mov
imul
adc
mov
push
sarb
pop
cld
fdivrl
into
in
push
xlat
sbb
fnstsw
adc
enter
pop
and
xchg
dec
fld
xchg
mov
mov
lret
iret
xchg
jnp
rol
push
mov
fldlg2
jns
mov
testl
xor
mov
fisttpll
sbb
jp
fsubrl
push
int
aam
push
mov
inc
xlat
adc
jmp
jl
mov
push
mov
insl
ljmp
popf
insb
test
push
mov
repnz
ficoms
mov
sbb
and
icebp
jae
pop
dec
cmpsl
pop
sub
out
dec
gs
daa
outsl
adcl
sub
add
pop
scas
mov
mov
and
test
cwtl
test
call
xor
stc
jle
jne
dec
fs
cmp
ds
jns
inc
aam
push
add
cmp
clc
mov
out
or
lret
negb
dec
lock
pop
fidivrs
sbb
inc
or
ss
fstpt
cmc
pop
adc
jl
call
mov
movaps
xorb
in
pop
mov
stos
or
mov
out
xor
add
je
dec
out
dec
adc
mov
lcall
fcoml
lcall
sbb
gs
lcall
adc
pop
scas
jnp
movsl
in
jmp
push
pop
dec
sarb
dec
inc
out
rorb
jb
enter
call
out
js
out
icebp
xchg
loope
adc
xchg
jg
dec
xchg
mov
cmp
xchg
cmpsl
cld
or
pop
cld
pop
xchg
add
imul
cwtl
in
addl
mov
jge
imul
and
jno
ss
gs
jnp
dec
inc
xchg
int3
lods
inc
xchg
pop
mov
mov
clc
xor
loope
jae
jmp
push
aam
or
insb
mov
mov
push
push
frstor
shll
stc
imul
or
out
or
jno
int3
andl
dec
adc
lahf
push
subl
ss
les
shrb
bnd
xchg
lret
movsb
aas
int
repnz
loope
in
imul
outsl
dec
insl
nop
push
clc
mov
sub
pop
cmp
xchg
ret
or
test
push
pop
adcl
or
sub
xchg
mov
push
shrl
pop
or
in
dec
iret
ret
lea
mov
dec
insb
jo
ja
cmp
daa
sbb
test
leave
sub
fwait
in
sbb
nop
add
sub
mov
xor
iret
dec
pop
xor
dec
sub
adc
loope
frstor
pop
cmp
filds
sbb
sub
fcoml
sbb
xchg
and
xor
adc
into
mov
mov
fs
mov
shrl
cli
lods
xchg
push
and
push
lea
lods
fisttpl
out
sbb
adc
or
mov
pop
xorl
out
test
aam
test
pop
repnz
shrl
mov
push
addr16
xor
out
scas
pop
daa
mov
es
pushf
sub
inc
ss
sub
add
arpl
sbbl
imull
mov
and
mov
das
in
fwait
inc
xchg
jge
and
push
in
cmc
lcall
xchg
dec
std
or
xor
mov
gs
popw
mov
pop
rcrl
fimuls
movsb
pop
push
dec
push
mov
roll
stos
shl
sub
mov
test
cmpsl
jo
mov
xor
and
cmpsl
xchg
arpl
and
pop
adc
imul
mov
rorb
push
mov
in
lcall
stos
push
mov
mov
mov
lcall
xor
data16
test
dec
lock
or
aas
mov
xchg
xchg
adc
sub
mov
nopl
fcmovbe
movsl
jmp
adc
xor
or
loop
cmp
test
adc
addr16
mov
mov
cmp
ret
mov
adc
cltd
jne
cmpsb
aaa
mov
shl
test
gs
jmp
out
xchg
or
cmp
mov
mov
popa
leave
call
andl
pop
clc
sub
leave
nop
ds
arpl
mov
sahf
cmp
subb
mov
and
fstpl
inc
inc
lcall
dec
imul
leave
cmp
mov
mov
xchg
pop
add
jnp
iret
pop
xor
xlat
aaa
sarb
out
loope
xor
test
mov
xchg
mov
lock
sahf
cmp
sbb
add
lahf
into
or
aam
push
cmpsl
or
in
rorb
adc
fwait
mov
cld
pop
xchg
int
jecxz
scas
imul
gs
mov
mov
or
jecxz
aas
aaa
mov
cmp
or
aam
add
push
test
push
or
popa
mull
adc
mov
imull
or
jmp
fidivs
dec
insb
and
dec
cli
lcall
test
or
movsl
repz
pop
jmp
sbb
fisubrl
push
test
cwtl
xchg
add
cmpsl
mov
loope
andb
jno
ret
je
and
lcall
adc
xor
adc
dec
js
mov
jb
insl
mov
into
stos
int3
in
jne
pop
jno
mov
inc
pop
aas
adc
sbb
adc
add
pop
xchg
fsubl
std
js
movsl
lea
or
pop
pop
insl
fstpl
mov
jne
mov
ret
out
lods
mov
clc
push
cmp
and
daa
ret
push
push
lods
push
into
add
pop
ss
int3
lret
inc
std
pop
sbbl
dec
xchg
aas
add
adc
ljmp
pop
jecxz
adc
in
cli
notb
shlb
int
mov
pop
add
and
adc
iret
mov
clc
int3
icebp
push
inc
mov
lahf
push
or
add
fwait
xor
or
mov
outsl
push
lock
inc
div
cltd
or
cmp
lds
lret
mov
repnz
je
xchg
inc
mov
and
pop
pop
pop
pop
pop
add
das
mov
mov
inc
insb
or
and
add
add
insl
ljmp
cwtl
loope
push
imul
inc
mov
pop
test
scas
mov
jns
dec
cmp
cltd
mov
push
lds
dec
out
mov
movsb
movsl
cmp
xchg
add
sub
push
xchg
sbb
fidivrl
sbbb
jge
sbb
outsl
shr
jnp
fs
jns
inc
mov
cmpsb
fnstsw
cltd
add
and
xor
pop
call
add
mov
stc
xchg
cmpsb
ljmp
sub
pop
rcrl
dec
cltd
cwtl
loopne
mov
mov
out
mov
mov
stc
pop
xchg
mov
or
out
jae
bound
xchg
mov
and
push
mov
addb
push
loopne
sub
inc
rcrb
imul
addr16
call
sub
in
mov
repz
pop
mov
sub
add
mov
call
cwtl
mov
jns
and
adc
adc
xor
shll
or
sbb
lea
or
aam
and
adc
push
popa
arpl
dec
test
sub
imul
sbb
out
cwtl
inc
ret
jae
mov
aad
cmc
aam
out
mov
or
ja
mov
xchg
imul
mov
movsl
inc
fistl
push
int3
inc
xchg
fisubl
dec
aam
dec
pusha
fistpl
mov
sbb
inc
pusha
cmpsl
push
rcll
jl
ucomiss
or
mov
imul
jmp
dec
or
outsl
mov
dec
pop
daa
js
ja
adc
pop
jb
jecxz
ret
inc
push
ja
into
inc
mov
ljmp
sbb
lret
adc
sbb
idivl
and
mov
mov
pusha
movsl
push
xchg
or
mulb
mov
dec
xor
enter
add
xor
pop
jnp
adc
fs
imul
and
insl
inc
push
lods
shr
push
lret
mov
lods
dec
sbb
roll
sbb
test
push
xchg
popaw
xchg
xor
pop
cltd
dec
xchg
imul
enter
xor
cmpsb
adc
cmp
repnz
clc
repz
pop
inc
inc
cmp
push
pop
fcmovb
rorl
pop
sub
cmp
lahf
ja
xor
addr16
jno
fxch
aad
sub
scas
sbb
insl
sub
insb
aad
mov
xchg
jo
pop
push
xor
inc
adc
and
test
movsl
popa
and
jle
mov
ret
and
xchg
pop
pop
push
out
sub
inc
in
sbb
in
aad
inc
sbb
push
sbb
nop
aad
push
mov
mov
push
sub
pop
rcll
jecxz
outsl
fisubl
ss
cmp
jp
jmp
jne
mov
cmpsl
push
or
dec
and
or
sub
adc
mov
inc
out
jno
or
inc
iret
addr16
mov
xorb
out
add
sbb
mov
lods
js
jnp
out
inc
xor
or
int
dec
int
dec
mov
xor
add
adc
fucompp
pop
mov
mov
aad
pop
loop
int3
insb
adc
addl
popa
sub
push
dec
xchg
mulps
out
roll
fidivrl
xor
addr16
add
pop
sub
nop
jmp
test
adc
ret
outsb
rcrl
lods
orl
hlt
dec
pop
aad
sahf
mov
out
xchg
dec
inc
subb
jae
out
or
repnz
pop
mov
push
xchg
popf
xchg
add
int
jg
jb
lods
out
mov
jecxz
nop
in
cmc
scas
sbb
pop
push
mov
mov
dec
mov
sbb
mov
scas
adc
xchg
and
mov
and
or
outsl
movsl
xor
mov
gs
sub
or
push
sub
push
add
mov
sbb
sbb
movsl
inc
and
das
rol
jecxz
push
ljmp
rclb
mov
ret
pop
pusha
jl
into
adc
and
xchg
jne
cmp
dec
cmp
repz
jae
push
dec
xor
out
sbb
in
push
sub
sbb
movsl
faddl
sti
pop
sub
sahf
push
adc
mov
out
mov
mov
cld
inc
dec
aas
sbb
and
xlat
cmp
mov
loope
dec
sbb
test
adc
xorl
jne
stc
int3
mov
push
div
roll
push
xchg
and
repz
lcall
int3
xchg
rorl
loopne
sbb
incb
aam
call
cs
sub
aad
mov
mov
insb
movsb
or
rcrl
pop
mov
xor
sub
xchg
cwtl
dec
icebp
mov
lahf
pop
sbbl
mov
add
icebp
push
popf
rclb
icebp
xchg
mov
jl
sbb
adcb
aam
insb
jmp
fistpll
repnz
out
xchg
imul
out
and
mov
and
cmp
xor
shll
inc
or
ja
xchg
adc
cli
in
cwtl
out
test
jbe
mov
fdivl
adc
pop
movsl
test
mov
loop
mov
dec
lea
add
xchg
and
int
repz
push
pop
sbb
inc
roll
and
push
pop
sbb
cli
rcrl
cmc
ds
ja
sbb
inc
mov
add
pop
cmp
ret
lock
loop
repz
jl
jno
mov
ret
filds
aas
xor
inc
bound
ret
pop
in
cmp
dec
adc
icebp
out
cmp
lahf
jo
xchg
dec
xchg
mov
clc
lock
push
mov
jg
xchg
aaa
mov
pop
push
mov
push
adc
iret
movb
or
jmp
into
dec
mov
mov
xchg
xor
jp
mov
adc
xchg
addb
shrb
iret
icebp
popf
lock
pop
mov
xor
mov
pop
xor
popf
sbb
inc
xor
jp
test
mov
ucomiss
out
gs
and
push
cwtl
pop
bound
jne
and
sbb
jns
dec
fnsave
call
jecxz
sub
into
js
orb
inc
xor
jge
insl
ss
stos
xchg
lods
adc
jo
stc
xchg
rolb
mov
hlt
std
das
push
in
cmpsb
int3
les
or
push
dec
lahf
fsub
adc
in
pop
sub
adc
ret
popa
fidivrs
adc
test
das
mov
xor
test
push
jmp
insb
xchg
xlat
jne
xchg
int
xlat
sub
mov
lea
pop
mov
push
movsl
push
ror
icebp
in
and
mov
sub
xor
pop
daa
sti
in
ret
adc
jno
or
xchg
xchg
mov
outsb
mov
sbb
push
cmp
int
or
aas
mov
sbb
in
jmp
jo
cmpsl
mov
dec
outsl
js
in
outsl
pop
imul
sub
jl
popl
test
add
add
out
mov
xchg
cmpb
cmp
lret
pushf
ja
stos
rcll
mov
cs
test
subb
jecxz
mov
or
jmp
imul
lret
xor
fsubrs
mov
mov
xchg
push
movsb
stos
sub
add
cmpsl
mov
mov
addr16
enter
arpl
jle
out
pop
xor
mov
sbb
ja
mov
jge
push
xor
xlat
test
pop
in
jle
mov
mov
imul
add
pop
idivl
imul
sbb
mov
xchg
and
aad
dec
das
loopne
arpl
sbb
out
mov
int3
xchg
in
testb
inc
cmp
cld
lcall
pop
cltd
cltd
cltd
outsb
repnz
mov
cmp
lea
pop
aad
pushf
or
test
sbb
push
mov
sub
outsl
adc
xchg
lods
mov
push
daa
mov
or
fmul
imul
sbb
lret
cltd
stos
mov
push
mov
or
jno
jge
out
jge
jb
mov
orl
cmp
adcb
push
or
xchg
dec
inc
mov
stos
cmp
repnz
fcoms
push
test
fisubl
imul
or
pop
data16
mov
and
add
fs
out
jecxz
pop
jnp
lcall
int3
insb
pop
adc
iret
mov
sbb
xor
out
push
adc
push
jns
dec
ljmp
or
mov
cmp
push
add
hlt
inc
xor
xchg
scas
cli
mov
push
sbb
data16
cmc
cmp
testb
shll
arpl
arpl
or
stos
xchg
lret
mov
pop
lock
pop
movsl
js
adc
int3
mov
out
sbb
cmp
mov
int3
xchg
imul
pop
sbb
addr16
data16
cmc
loope
fdivl
adc
popl
fsub
mov
inc
dec
mov
add
inc
repnz
out
cmp
sbb
dec
popf
cmp
call
push
add
sbb
sti
mov
fsubrs
mulb
mov
outsl
inc
imul
sub
icebp
popa
push
xor
sbb
cld
and
fimull
sbbl
pop
loopne
adc
mov
insb
adc
xor
enter
cmp
out
push
mov
mov
sbb
enter
sbb
movsl
inc
pop
aas
aad
insl
lock
jg
imul
ja
and
or
daa
sbb
pop
out
popa
xchg
push
cmp
lret
sbb
out
repz
push
fstl
in
xor
insl
fstl
out
les
cmp
pop
dec
iret
inc
test
xchg
xor
dec
mov
es
hlt
js
cmp
cltd
call
jb
push
lret
lock
flds
or
sub
jb
push
dec
sbb
out
test
scas
fstl
cmc
fldl
xchg
pop
leave
cli
int3
jno
lret
inc
rcr
mov
ja
pop
push
add
int
pop
int3
add
dec
or
fisubrl
pop
out
je
popl
das
testl
jge
popa
outsl
cli
add
jne
sbb
cmp
mov
push
mov
test
jecxz
jns
mov
adc
lcall
fdivr
into
std
xlat
je
std
push
std
cmp
and
decl
cmp
push
clc
pop
mov
lret
mov
adc
inc
scas
repz
les
mov
cwtl
das
inc
mov
lock
mov
fists
xchg
out
dec
arpl
push
lret
jnp
je
cmpsb
pop
leave
mov
shrb
scas
xchg
pushf
fcmovbe
add
ljmp
jae
orl
xor
pop
not
push
mov
mov
add
pusha
popf
adc
mov
imul
outsb
inc
mov
jmp
jno
daa
jecxz
negb
and
xchg
loope
jecxz
cs
inc
pop
imul
adc
sub
mov
popa
nop
push
imul
scas
dec
mov
jecxz
jbe
outsl
mov
xor
inc
inc
inc
dec
in
dec
hlt
add
fldt
aas
xor
call
fcompl
sbb
lret
out
sbb
sarl
lds
pop
arpl
dec
add
mov
push
fnstsw
adc
push
incb
inc
and
insl
sbb
clc
cmpsb
sub
in
cmpsb
and
aad
mov
push
mov
xor
or
ja
cmp
es
dec
in
inc
dec
sub
push
mov
jae
paddsb
fmul
cmpsl
xor
inc
add
outsb
inc
mov
pop
jmp
iret
repnz
mov
jae
xchg
mov
stos
mov
movsl
sub
xlat
loopne
in
out
adc
jg
mov
mov
mov
lds
adc
fdivrl
jmp
pop
sarl
sub
sub
xchg
mov
and
mov
inc
mov
lret
jnp
lock
dec
mov
test
jl
pusha
add
in
mov
ss
push
or
sbb
or
or
mov
pop
imul
lret
mov
push
lret
in
ficoml
pop
mov
gs
jmp
dec
mov
or
jge
rcr
addl
imul
jbe
or
test
xchg
ret
hlt
adc
icebp
idivb
cwtl
dec
pop
jle
pop
cmp
andl
pop
fists
inc
pusha
jecxz
and
arpl
nop
jnp
fwait
sub
shl
dec
add
movsb
mov
outsl
xor
in
lods
sbb
movsb
and
jbe
lds
inc
inc
data16
pop
ljmp
xchg
test
je
cli
cmpsl
test
jnp
mov
pop
mov
sub
ljmp
mov
and
cmpsb
stos
xlat
int
fbstp
fwait
mov
pushf
jge
std
loope
lods
rcrl
pop
lea
mov
push
sti
mov
stc
jl
mov
pop
xchg
pop
cmp
sbb
in
negb
mov
hlt
pop
cmp
addr16
add
imulb
je
loope
loopne
rolb
fwait
das
data16
xchg
inc
mov
mov
js
repnz
cmc
jmp
addb
outsl
imul
out
aam
or
and
push
seta
cwtl
into
fnstenv
cld
mov
mov
xchg
in
cmpsb
pause
sahf
arpl
cltd
leave
subb
inc
scas
cmpb
movl
and
iret
inc
push
jae
test
push
ljmp
mov
fdivs
sbb
pop
mov
push
fadds
int
dec
out
mov
test
dec
es
inc
addr16
lahf
pop
jo
fisubrl
dec
bound
dec
xor
or
jb
mov
adc
fs
add
or
jno
loope
bound
out
cwtl
sbb
imul
js
xchg
fsubrl
xchg
xchg
fsubs
insb
icebp
icebp
mov
cli
xchg
adc
pop
pop
fnsave
jge,pt
add
sub
fs
cmpsb
mov
dec
insl
psrld
mov
pop
test
std
jge
inc
decb
add
xchg
jg
and
inc
movsb
adc
stc
pop
incl
scas
lock
das
gs
sub
pop
bound
xor
fs
xchg
insl
mov
repnz
cs
adc
push
lods
xchg
jb
sbbl
das
das
lds
xchg
push
nop
push
dec
inc
pop
loopne
push
shlb
mov
jmp
out
mov
fwait
arpl
sarl
mov
jo
in
sub
mov
test
aas
repz
stc
adcl
sub
insl
sbb
push
and
push
movsl
dec
inc
pop
push
filds
jns
or
dec
outsb
std
push
ljmp
sahf
cwtl
xchg
sarb
mov
out
insl
jns
mov
pop
jl
ror
inc
insl
aaa
xchg
pop
mov
outsl
nop
int3
mov
dec
mov
imul
sahf
sahf
and
repz
jns
in
xchg
pop
adc
bound
icebp
push
jmp
fisttps
imul
xchg
push
dec
xchg
lcall
mov
fcoms
fs
jno
movsb
mov
mov
xchg
sti
in
outsb
aas
mov
push
xor
cwtl
mov
or
pop
jne
pop
jecxz
mov
inc
clc
outsb
xchg
xchg
fldl
pop
lcall
push
mov
leave
pop
xchg
pop
mov
ss
negl
add
push
push
pop
and
out
mov
xchg
mov
mov
push
xor
push
cli
xor
jbe
xlat
dec
addr16
mov
shl
in
mov
je
popf
adc
test
out
outsl
scas
cmp
pusha
cld
sub
xchg
repnz
and
sub
sti
and
xchg
loopne
or
mov
leave
mov
incb
sarl
pop
dec
loopne
mov
xor
and
iret
andl
test
dec
jmp
dec
lret
cmp
sarl
test
jp
lock
inc
and
jns
xlat
mov
stos
push
popa
sar
sahf
xor
adc
fs
dec
xchg
or
jns
rcll
mov
sub
mov
imul
inc
push
jp
xchg
repz
and
and
cmp
lock
pop
add
in
int3
sbb
insb
scas
mov
sbb
push
out
xorl
insl
repz
adc
push
and
sub
sub
jnp
xlat
pop
cmp
pop
and
adc
push
popa
scas
sbb
shrl
pop
mov
div
nop
sbb
popa
mov
sbb
dec
xchg
jle
cmp
aad
add
jo
push
dec
ds
xor
dec
xor
add
aaa
jno
fcmovu
iret
lret
sbb
push
jne
pop
loop
adc
mov
int3
pusha
lods
jbe
pop
es
pop
ret
jae
fs
or
or
jb
sti
sbb
rcrb
sub
lea
push
fsubr
fidivrs
mov
in
lahf
lds
sbb
add
xchg
test
jge
call
hlt
adc
push
test
jmp
insb
lret
sub
push
jge
sub
das
repz
cli
and
inc
cmpsb
dec
add
aad
fs
add
shrb
push
lock
inc
and
fisubs
sub
mov
lret
lds
icebp
push
pop
iret
lahf
pop
dec
movsb
ss
or
out
bound
test
hlt
rol
and
divl
inc
lret
loopew
outsb
xchg
push
shll
mov
sub
xor
in
mov
jns
inc
iret
push
push
insl
jae
movsl
mov
jo
pop
jno
and
or
aam
dec
lret
sub
fidivrs
jo
dec
inc
adc
daa
lahf
ret
pop
xchg
add
mov
cmp
cmp
push
ret
arpl
fs
dec
sbb
xor
jb
repnz
xchg
fstps
pop
clc
jbe
mov
mov
andl
in
fisttps
orb
call
imul
loope
dec
into
and
xchg
mov
scas
jae
cli
ss
xor
jp
js
loop
sub
test
and
mov
sbb
lret
mov
rolb
sub
xor
xchg
cmp
jb
or
mov
sbb
clc
or
mov
sbb
push
push
mov
lgs
rcll
or
jo
lcall
test
scas
popa
push
push
inc
dec
and
jmp
mov
xchg
subl
leave
jae
jl
repz
pushf
inc
or
xor
mov
sub
mov
cld
in
add
adc
mov
icebp
subl
sbb
and
cmpl
insb
imul
dec
mov
ds
xor
shll
movsb
push
arpl
and
inc
inc
mov
and
xchg
scas
push
pop
mov
andps
negb
jo
pop
in
jle
sarl
xchg
xchg
pop
push
scas
fwait
mov
mov
adc
movsb
jo
adc
aam
movsb
jp
rcrl
hlt
mov
mov
add
jg
jns
outsl
sbb
mov
js
push
arpl
inc
push
das
xor
dec
pop
scas
mov
xchg
in
and
jo
xchg
les
xor
call
mov
enter
sahf
cmp
sti
out
movsl
adc
inc
out
mov
or
xchg
or
cmp
xchg
ja
imul
enter
and
lret
sbb
cs
xor
sub
shl
jne
pop
test
push
insb
cltd
or
mov
pop
and
dec
push
js
inc
std
adc
test
sahf
sub
sbbl
enter
dec
push
iret
mov
pushf
cmp
outsb
sub
xchg
mov
sbb
cwtl
add
adc
xor
pop
inc
mov
pop
cmpsl
or
sbb
imul
rcrl
dec
jae
or
lahf
in
addr16
cs
mov
push
lahf
push
cmp
andl
loopne
sbb
fistps
mov
jl
fisttpl
sbb
inc
ljmp
fisttps
push
add
xchg
inc
sub
scas
and
add
pop
mov
xor
jne
cmpb
xchg
lret
cwtl
loop
aad
fwait
add
xchg
das
loopne
sbbb
pushf
lods
ret
inc
fisubs
fiaddl
push
push
xchg
mov
les
cmp
sub
bound
cwtl
std
enter
in
in
fldenv
add
sbb
xor
cltd
pop
add
push
popw
mov
lods
aam
cmp
sbb
push
pushw
pop
into
push
push
inc
loopne
dec
repnz
inc
xchg
mov
mov
jno
or
dec
or
movsb
les
add
aaa
arpl
xor
push
jge
test
xchg
and
xchg
test
fistpl
pop
cmp
hlt
inc
leave
pop
inc
pop
xchg
lret
and
sbb
rcl
imul
dec
xchg
jnp
icebp
pusha
adc
fs
es
test
pop
rorl
xchg
lahf
xchg
icebp
insl
dec
negb
add
mov
or
mov
mov
push
sbb
cltd
xchg
push
cli
xchg
sbb
sub
push
data16
jl
push
xchg
add
imul
in
adc
sub
test
cld
xor
and
je
mov
imul
mov
push
cmp
sbb
lea
aas
xor
ja
inc
add
les
mov
out
sub
inc
adc
push
mov
pop
dec
or
mov
add
mov
int
std
dec
and
push
push
push
inc
movl
adc
mov
jp
stc
xlat
imul
js
mov
les
lods
das
insb
adc
jmp
aaa
jge
addr16
test
mov
mov
insl
inc
into
rcrb
xor
and
push
mov
mov
xor
shrb
sbb
jmp
cmp
sahf
push
jne
ret
xchg
dec
daa
ret
aam
mov
jae
inc
daa
pop
adc
in
jbe
dec
and
iret
cmpb
cwtl
cld
jmp
adc
je
lock
sarl
inc
hlt
rorb
ss
push
in
xchg
or
test
mov
ljmp
adc
mov
iret
ficomps
xchg
mov
lret
mov
mov
lods
push
imul
add
cmp
adc
loope
scas
mov
fwait
leave
mov
mov
jp
idiv
or
idivl
xlat
xchg
call
subl
dec
or
mov
pop
mov
cltd
sbb
xor
adc
testb
dec
ja
or
dec
leave
pusha
mov
xor
push
inc
cmp
clc
push
leave
lahf
dec
cmp
loopne
inc
lds
cs
sbb
loop
lret
jbe
jle
sub
pop
pop
adc
fwait
jge
push
inc
xchg
push
test
test
mov
adc
add
insb
lock
loope
dec
lods
xchg
mov
fidivrl
adc
int
jnp
lods
call
pop
or
arpl
fdivr
push
push
cmp
bound
and
movsl
adc
fs
lret
sbb
and
and
jle
push
xor
xlat
add
fldcw
cmc
push
mov
dec
aad
xor
ficompl
or
mov
into
out
jl
int3
or
inc
mov
decb
adc
lock
jns
loopne
loopne
jmp
daa
les
mov
inc
inc
push
push
repz
ljmp
test
std
aas
and
mov
fidivs
in
pushf
jecxz
and
mov
imull
fidivrs
add
jbe
lcall
jle
cmp
movsl
jb
gs
mov
aam
xlat
mov
cmp
jmp
or
movsb
sbb
mov
xchg
leave
adc
pop
cwtl
adc
push
add
mov
add
jp
xor
stc
or
adc
cli
in
lods
pop
dec
inc
sbb
lock
scas
mov
adc
mov
jns
test
inc
sbb
aaa
pop
out
test
push
cld
enter
mov
movsb
dec
ss
aam
fnstcw
mov
push
clc
inc
dec
mov
ja
push
sbb
scas
mov
jle
ds
or
jp
mov
mov
mov
xchg
fbld
dec
adc
mov
pop
and
cmpb
push
xchg
sarl
movsb
sub
out
jle
int
lock
sbb
pop
in
in
cmp
jmp
push
mov
or
clc
gs
mov
scas
xchg
sub
mov
in
fcomi
shrl
adc
inc
fs
mov
fisubs
js
xor
xchg
loop
push
inc
lods
fldl
jmp
fs
mov
push
push
inc
jae
enter
mov
neg
je
lret
bound
add
mov
rorb
pop
mov
xchg
int
fisttpl
push
mov
push
add
mov
mov
jae
fstpt
out
fsts
dec
push
inc
push
in
enter
add
lock
iret
scas
lret
repnz
outsb
jg
cmp
xor
jnp
sbb
repz
lahf
push
fldcw
adc
ss
dec
adc
fwait
leave
repz
adc
int3
cwtl
sub
mov
pop
or
xlat
adc
push
dec
pop
iret
rorb
inc
js
into
jp
scas
fnstenv
insb
mov
cmp
cmp
dec
out
mov
inc
xor
cld
idivb
scas
mov
mov
jns
xor
fsubrp
xor
inc
sbb
leave
cmpsl
mov
test
xchg
out
push
pop
scas
push
sbb
and
dec
pop
ljmp
mov
mov
fsts
mov
fs
add
mov
sub
fstl
xor
dec
add
fcoms
imulb
pop
daa
cmpsb
mov
fnstenv
arpl
or
push
and
xor
shl
pop
pop
pusha
cmc
imul
jbe
sub
dec
das
aad
dec
add
bound
push
dec
shr
mov
pop
push
fmul
push
add
dec
movsb
cmp
push
pop
fisttpll
mov
add
fldenv
push
bound
loopne
dec
pop
sbb
cmp
movsb
xchg
pop
lret
test
lcall
jmp
scas
cmp
pop
pop
dec
daa
push
aaa
mov
aam
adc
add
jnp
jnp
rcrb
lock
push
cmp
sbb
xchg
cmp
in
sbb
cmp
adc
and
mov
leave
jnp
or
sub
pop
ret
dec
shr
inc
push
jl
and
inc
inc
xchg
outsl
jae
dec
sub
testl
dec
inc
ja
lcall
in
dec
int
adcb
push
stos
lret
insb
pop
sbb
cmp
inc
outsl
jb
xchg
push
adc
dec
js
xor
fwait
inc
add
lcall
cwtl
xchg
int3
outsl
stos
je
lcall
xor
mov
xchg
mov
addr16
push
movsb
jge
scas
lret
add
adc
cmp
outsl
lods
pop
jne
cmp
lcall
mov
imul
jo
movw
add
enter
pop
ljmp
mov
xchg
test
jmp
and
inc
icebp
ss
sbb
inc
ret
and
cwtl
dec
xlat
outsl
nop
inc
pushf
mov
pop
ficoms
and
pop
rorl
jo
push
cwtl
fldl
je
pop
lahf
fdivr
mov
or
ret
mov
cmp
jbe
pushf
jbe
call
imul
fwait
popf
popf
daa
jle
std
lret
popa
sbb
pop
test
mov
cmp
ds
scas
pop
push
sub
or
fnstenv
mov
mov
xor
ss
inc
add
rcrl
mov
fwait
xchg
sbb
push
insb
roll
mov
ret
into
jp
jb
dec
je
data16
xorb
pop
xchg
loop
jnp
pushf
lock
pop
push
push
aaa
mov
inc
pop
sub
and
fmull
sbb
out
mov
hlt
cmp
push
movsl
cmp
js
or
daa
cmp
push
loope
mov
outsl
pop
in
mov
pop
cmpsl
xor
push
enter
xor
jnp
jmp
frstor
xlat
jle
je
repnz
aas
nop
rcrl
imul
xchg
leave
in
jnp
bound
frstor
jns
and
test
stc
sbb
ror
fistpl
jmp
or
cmp
fsts
or
fwait
mov
mov
in
xchg
push
sub
icebp
mov
and
test
mov
sub
xor
pushl
shlb
test
adc
push
xchg
inc
lret
xchg
pop
testl
mov
int
cmpsl
push
and
adcb
lds
jae
cli
mov
or
add
and
loope
and
sbb
xchg
cwtl
loopne
xchg
xor
push
jne
push
mov
in
cs
cmpsl
repnz
aas
adc
dec
xchg
pop
xlat
fcoms
inc
cmp
fiadds
add
pop
inc
push
test
into
scas
pop
rcrb
adc
rcll
imul
insl
sub
mov
cld
and
push
xorb
sbb
xchg
in
sbb
sbb
adc
mov
cs
or
mov
mov
fidivl
repz
imul
aam
pop
popf
pushf
cld
in
movsb
mov
cmpsl
lds
cli
stc
mov
mov
mov
fs
in
lea
je
outsb
out
fs
xchg
mov
mov
xchg
pop
test
xchg
shr
adc
sahf
ds
lret
add
sahf
aaa
pop
mov
loopne
lret
ljmp
pop
push
mov
rorb
mov
dec
and
push
xor
jno
add
cmp
insb
fcompl
dec
cmp
mov
cli
jmp
movmskps
push
ds
sbb
mov
roll
xchg
mov
minps
mov
or
pop
dec
das
inc
nop
mov
sbb
imul
iret
lret
fstpt
repz
xor
xchg
ss
ja
and
aas
subb
xor
sbb
jbe
jbe
in
sti
test
je
pop
mov
xchg
mov
cmp
xor
jge
sub
mov
mov
scas
aas
inc
repnz
mov
inc
movsl
call
leave
lret
pushf
in
and
popf
cmp
popa
xchg
xor
xchg
hlt
loope
jmp
jns
lods
shr
pop
add
add
nop
push
and
add
test
xchg
stos
cltd
xchg
and
cltd
lret
adc
inc
ja
cld
mov
daa
pop
ss
pop
lods
pop
nop
popf
mov
cltd
add
xor
cmp
xchg
dec
icebp
jecxz
roll
xlat
jp
jp
or
test
jecxz
int3
dec
sbb
inc
in
fs
sbb
mov
sahf
sub
rcrl
jbe
dec
xchg
xchg
pop
mov
icebp
mov
cmp
stos
outsb
divl
mov
lods
arpl
pusha
pop
cmpsl
out
test
jmp
imul
divb
cmp
jne
rclb
dec
or
je
clc
push
lds
pop
outsb
test
mov
icebp
scas
outsl
pop
adc
push
sub
mov
cmpsl
aaa
xchg
push
mov
jle
add
nop
fwait
iret
adc
lcall
and
ficoml
cmpsb
stc
clc
push
mov
std
rol
cmp
insl
js
xchg
xlat
fs
shll
icebp
add
mov
xchg
sub
test
test
and
sub
and
jne
or
xchg
mov
ret
pop
mov
push
mov
pop
mov
sub
and
imul
fwait
int3
cmp
fstps
js
and
out
pop
addr16
mov
xchg
push
jle
sbb
mov
adc
mov
pop
mov
xchg
out
cmpsb
gs
pop
scas
lods
mov
add
inc
in
movsl
addb
xor
jl
loope
inc
sbb
jmp
dec
cltd
dec
in
insb
pop
into
flds
cltd
jne
call
in
jp
in
fs
adc
jge
rorb
xchg
aam
jnp
push
imul
adcl
and
mov
shl
mov
jae
jo
into
testb
sbb
iret
imul
jl
das
xor
stc
push
pop
int3
push
mov
lcall
out
std
mov
in
sub
jno
sub
stc
ss
xchg
pop
lea
insl
and
cmp
xor
vmovd
in
xchg
lcall
pop
movsb
ret
cmp
xchg
or
fwait
dec
push
nop
mov
call
mov
fimuls
xor
mov
jae
add
loop
xchg
arpl
inc
mov
shrb
dec
clc
enter
sbb
mov
xchg
outsb
js
fs
movsb
out
xor
rol
mov
push
add
dec
cmovae
or
or
lock
adc
cltd
push
or
outsl
mov
adc
add
leave
pop
adc
rcrb
shrb
pop
in
fs
jmp
mov
outsl
scas
mov
or
push
rcrb
int
mov
or
dec
aam
movsl
aad
mov
xchg
out
and
out
mov
data16
adc
out
cmpsb
xchg
push
jns
sbb
add
dec
daa
cmp
in
mov
scas
lret
popa
mov
pop
pushf
in
pusha
dec
fcoml
testb
add
js
xchg
pop
dec
bound
or
jno
hlt
aaa
jae
or
pop
push
addr16
pusha
cmpsb
mov
sub
dec
sahf
push
dec
jae
das
xchg
xchg
cmc
lods
push
fnstcw
cmpsl
mov
fdivrl
and
xor
mov
adc
push
or
push
mov
es
sub
mov
repz
adc
pop
cs
sub
mov
jns
wrmsr
cmp
mov
mov
xor
repz
gs
sbb
pop
idivl
add
sbbb
sti
mov
xchg
dec
insl
pop
dec
enter
popa
lods
mov
xchg
mov
sub
pusha
sti
xchg
outsl
icebp
pop
and
mov
call
push
sub
lea
xchg
sti
cltd
loop
xor
push
mov
test
test
jmp
imul
cmpsb
inc
mov
mov
dec
adc
in
pop
ret
sub
pop
cli
fstps
ja
xor
mov
mov
shlb
sbb
push
repz
inc
or
mov
and
inc
into
cmpsb
adc
roll
sbb
or
imul
or
mov
xchg
arpl
push
addr16
mov
dec
inc
es
lds
clc
inc
fmul
popf
inc
or
iret
test
mov
cmpsb
loop
mov
sbb
inc
dec
jecxz
inc
sub
divb
xchg
ret
adc
out
inc
jbe
ret
les
dec
push
fidivrs
xchg
cmp
ljmp
popa
ret
shrb
es
out
gs
bound
daa
sub
mov
inc
or
jno
leave
or
call
dec
mov
xor
dec
adc
popa
int
adc
or
rclb
cmp
lret
add
outsb
mov
dec
mov
test
xor
aam
push
and
cli
add
mov
adc
movsl
mov
stos
push
sub
xchg
mov
fldcw
frstor
dec
pop
test
test
or
scas
scas
rolb
mov
mov
roll
test
mov
rcll
clc
jl
int
es
jmp
out
xchg
movsl
cli
into
rcrl
jl
stos
mov
mov
fbstp
addr16
imul
in
pop
aas
std
and
fbstp
in
das
cltd
rcrl
pop
cwtl
mov
xchg
in
in
push
mov
mov
shr
mov
ror
jnp
xchg
mov
mov
xor
xor
je
out
aad
mov
int
and
sbb
fsubrs
xchg
outsb
test
lret
rcrl
stos
pop
testl
into
adc
hlt
shll
adc
rolb
adcl
jno
cmp
or
push
sub
aad
cmp
lret
xchg
cmp
mov
stos
shlb
cmpsl
inc
cwtl
push
jo
stc
div
in
lret
ja
ljmp
mov
les
mov
fwait
mov
push
add
mov
icebp
adc
dec
inc
aad
pop
mov
adc
xchg
shrl
mov
movsl
xchg
xor
and
sub
pop
pop
and
mov
cmp
loope
dec
mov
mull
ljmp
sub
iret
stos
pusha
or
popa
stos
jno
fldcw
insl
ljmp
xchg
add
jo
ljmp
das
pop
out
loop
inc
repz
pop
and
pop
push
xor
inc
and
jp
mov
and
mov
dec
in
jecxz
out
sbb
adc
cmp
xchg
fistl
cli
jp
push
xchg
loopne
cmp
inc
add
int
xor
sub
add
outsb
rcrb
cld
cmp
enter
aaa
ss
jne
dec
in
icebp
lea
pusha
sar
ljmp
and
mov
or
ret
je
jecxz
inc
pop
xor
roll
jnp
leave
fsin
cli
push
sub
adc
mov
xchg
pop
aam
mov
mov
xor
sub
mov
xchg
adc
xlat
insb
mov
jle
test
ss
data16
xchg
in
dec
pop
in
stos
roll
fildll
dec
fisubs
pop
sub
lock
dec
and
aam
inc
mov
jl
out
sahf
arpl
jne
xchg
xchg
fists
lcall
or
pusha
jbe
mov
jno
aam
les
lea
out
mov
lahf
xchg
stc
add
loop
imul
test
aaa
and
sbb
push
jbe
pop
imul
sub
fcomip
add
leave
add
jle
rorb
mov
movsb
push
inc
lcall
inc
into
mov
cmp
add
mov
pushf
stc
dec
pop
insl
scas
outsl
add
push
mov
mov
push
mov
mov
gs
push
mov
popf
or
adc
jne
ficoml
insb
push
bound
inc
adc
cltd
ja
imul
push
call
movsb
push
pop
leave
mov
adc
ficoml
and
leave
dec
mov
pop
fwait
sahf
insl
imul
cmpsb
imull
lcall
and
cmp
push
fcmovnbe
andl
fldln2
adc
repnz
repnz
xchg
push
out
dec
jmp
mov
cmp
xor
test
fisttps
cwtl
jno
mov
out
jl
jmp
mov
pop
imul
sub
or
pop
popf
lcall
hlt
pop
daa
les
xor
mov
cmp
mov
aaa
mov
inc
dec
fucomip
cwtl
bound
jl
gs
jo
inc
popa
inc
das
push
sub
stos
mov
aaa
adc
xor
in
ror
xchg
push
mov
cmp
out
mov
ret
mov
mov
jo
ds
jge
das
outsb
jbe,pn
mov
sub
clc
lods
xchg
adc
das
xchg
jb
stos
cmpsl
lea
in
ja
ja
and
sbb
cltd
sub
mov
stos
or
cmp
rolw
jne
insb
lea
sbb
leave
jne
xchg
int
imul
sahf
aaa
mov
mov
xchg
and
dec
pushf
shll
pop
mov
sbb
or
push
sub
nop
pushf
fidivs
ja
inc
add
xor
jo
insb
mov
icebp
sub
add
jmp
inc
dec
clc
shrl
lcall
popa
sti
sbb
out
inc
sbb
adc
daa
fisttpll
push
mov
sbb
or
pop
sub
shll
cltd
jo
sub
fisubs
adc
jmp
cs
lock
imul
sub
sub
pop
fcmovnb
pop
or
rorb
and
add
int3
mov
adc
xor
push
in
jp
mov
ret
push
adc
cmp
push
dec
xchg
sahf
push
push
mov
stos
loop
cltd
pop
inc
xor
adc
sbb
les
imul
ljmp
int3
adc
in
in
fimuls
adc
mov
mov
enter
mov
test
out
push
push
in
mov
sub
and
insl
pushf
ret
popf
xor
ret
cmp
jnp
int3
loope
and
jl
aas
dec
sub
xchg
dec
lods
pop
push
sbb
es
and
into
mov
out
cmp
xor
sub
mov
iret
mov
jae
jbe
cmp
inc
xlat
fdivr
std
lds
dec
imul
fmull
and
push
mov
mov
mov
inc
mov
and
movsl
sbb
aas
addr16
push
in
popf
ja
and
jo
mov
mov
cs
movsb
inc
int
pop
imul
sub
fwait
out
mov
outsl
cmp
outsl
leave
xor
out
test
pop
adcb
jo
mov
loopne
xor
inc
xor
inc
stos
movsb
xchg
insl
add
out
adc
mov
addr16
std
xlat
sbb
dec
repz
mov
test
sub
inc
fdivrl
incl
sub
fistpll
add
mov
or
or
pop
push
jp
nop
adc
jo
or
out
push
aaa
sbbb
pop
push
mov
ficompl
rcrl
xor
imul
lret
dec
sbb
out
fdivl
fcoms
rcrb
gs
out
mov
cwtl
dec
dec
mov
pop
lock
or
dec
mov
divl
cmp
pushf
fldenv
dec
mov
hlt
push
mov
pop
xchg
jg
lret
test
and
testb
fmuls
popf
cmc
jmp
cmp
stos
aam
and
mov
adc
in
in
mov
add
xchg
mov
imul
dec
add
data16
xlat
xlat
int
or
stos
lods
add
nop
sbb
jbe
mov
xchg
cmp
in
mull
push
iret
sub
sbb
push
aaa
leave
xchg
push
inc
movsl
ja
mov
jb
lea
jbe
daa
outsb
push
cmp
xchg
jge
int
push
ljmp
shll
cmpsb
mov
push
mov
xchg
outsb
mov
fnsave
add
dec
xchg
push
leave
mov
cld
cli
neg
jno
bound
cmp
das
and
cmp
push
mov
shrl
aam
xlat
insb
adc
adc
sub
adc
sbb
sbb
iret
inc
stos
aas
subb
call
or
and
push
imull
push
push
or
scas
hlt
push
popaw
addr16
pop
mov
mov
pop
and
rorl
mov
out
or
inc
mov
pushf
notb
pushf
and
pop
aad
aam
mov
jne
pop
xchg
cmpsb
imul
test
mov
cmp
mov
outsl
rcrb
xor
cmc
xchg
adc
and
aam
jb
mov
dec
lret
mov
scas
cmp
xorl
je,pt
aaa
mov
and
adc
ret
and
mov
movnti
popa
ja
mov
push
je
and
pop
mov
cmp
xor
pop
and
xchg
test
mov
iret
insb
nop
jnp
mov
sub
les
loope
pushf
cwtl
cmp
mov
mov
inc
add
add
addr16
dec
das
xor
and
stos
mov
and
pop
mov
mov
fdivl
mov
pop
nop
pop
mov
xchg
xchg
in
push
fs
or
xchg
movsb
lret
inc
pop
scas
xchg
push
ss
sti
loopne
mov
pusha
in
mov
dec
mov
and
push
bound
push
cld
mov
daa
or
test
sbb
iret
dec
xchg
cmc
lcall
xchg
rorl
ja
add
ret
cmp
jle
dec
xchg
jle
mov
xchg
jnp
sub
cmpsb
jb
mov
in
sbb
in
pop
in
mov
mov
lds
call
jae
pop
inc
les
inc
stos
mov
pop
push
shl
aam
out
push
sbb
cld
insl
aam
shrb
or
and
sbb
mov
mov
ljmp
aam
jb
mov
or
add
int
pop
pop
sbb
inc
pop
fsubrl
lods
repnz
inc
mov
sbb
cwtl
cmp
jae
ror
xchg
lcall
inc
jns
stos
stos
lock
xchg
lcall
pop
mov
popa
cli
or
ss
ss
add
or
call
sbb
add
jae
adc
call
clc
mov
inc
jge
cmpsl
inc
jp
setg
in
popf
in
or
sbb
pushf
outsl
std
mov
loop
lea
cmp
jae
xchg
lods
xlat
cli
mov
pop
jns
mov
sbb
rcl
jle
add
mov
mov
sub
add
sub
adc
or
repz
or
add
and
subl
xlat
pop
cmpsb
mov
loopne
sub
mov
mov
xchg
mov
mov
mov
ret
and
lcall
lea
clc
sub
daa
popa
and
inc
adc
insb
stos
mov
push
loopne
pop
or
xchg
dec
stc
or
xchg
push
jns
jg
mov
jne
mov
in
jns
mov
mov
jmp
mov
jmp
notl
adc
jp
test
iret
scas
jnp
push
and
and
rcrl
testb
cmp
mov
lock
fbld
adc
pop
pusha
mov
iret
pop
pop
fldenv
dec
bound
pop
xchg
cmp
xchg
std
shrb
add
mov
cmp
and
es
lock
mov
notl
hlt
sbb
mov
mov
jp
addl
xor
insl
xchg
and
std
aaa
lcall
imul
adc
lret
pusha
push
leave
cmp
cmovle
outsl
adc
cmp
clc
inc
testl
mov
jnp
mov
out
cmp
dec
and
ret
pop
nop
popf
loop
sbb
lods
cli
daa
ss
lret
dec
call
dec
pop
adc
xor
mov
cmp
sti
lods
inc
inc
lea
in
push
sub
pop
inc
or
mov
jl
ljmp
push
adc
jbe
rcrb
test
xor
mov
sub
pop
xor
notb
mov
cmpsl
add
movmskps
xor
mov
fcmovbe
pop
lock
mov
cmc
sbb
add
into
jle
pop
lret
addr16
inc
sbb
pop
mov
jno
cmp
aam
adc
cmp
xchg
aam
lea
jnp
or
sarl
or
cmp
out
fcompl
inc
add
idivb
fisubrs
repnz
clc
iret
mov
xlat
cmp
mov
jnp
mov
sub
dec
scas
push
pusha
je
ss
ljmp
cmpsl
xchg
inc
pop
sub
enter
cli
and
mov
mov
out
out
imull
mov
push
mov
test
js
popa
int
sub
test
add
movsb
inc
push
into
enter
outsb
lods
pop
ret
and
out
xchg
fisttps
cmpsb
jns
xor
inc
cmpsb
sub
jge
insb
fldcw
cmpsb
xor
in
adc
mov
in
addb
outsb
xchg
ret
scas
add
das
loope
into
and
in
push
pop
insl
rcrb
jbe
push
inc
lds
fs
es
xchg
xor
sbb
push
xchg
xchg
rorl
test
out
push
aam
outsb
push
fs
pushf
call
jae
inc
addr16
mov
mov
cmpsb
pop
sub
pop
sub
in
push
ficomps
out
and
andb
lods
in
xor
fnstcw
std
mov
or
cmpsb
inc
or
lahf
fnstenv
loop
mov
mov
hlt
popf
mov
and
add
fildll
jl
dec
mov
xor
shrl
mov
je
outsl
xchg
and
mov
enter
and
inc
out
dec
xor
cmp
mov
push
es
xlat
sub
pop
leave
icebp
xchg
inc
ds
gs
pop
test
in
dec
dec
mov
cmp
mov
cmp
add
repz
push
mov
ds
faddp
push
pop
bound
mov
inc
fnop
push
in
adc
or
sbb
dec
insb
stos
xchg
and
jle
pusha
adc
outsb
lods
aaa
dec
sbb
call
lea
stos
adc
xchg
inc
pusha
xor
xchg
sbb
adc
pop
cwtl
arpl
and
and
das
mov
pop
ljmp
test
pop
pop
xchg
inc
fdivrp
jle
add
movsl
xchg
push
push
sarb
push
cmp
sti
fisttpll
mov
outsb
add
adc
movb
and
cmp
or
pop
pusha
jecxz
dec
aad
xchg
hlt
popf
fisttpll
sbb
xchg
out
sbb
in
jnp
cli
or
add
mov
sti
adc
mov
or
or
out
mov
add
sub
cli
les
mov
xor
mov
cmpsb
push
loopne
fstpl
cld
xlat
dec
nop
out
popf
inc
insl
push
into
insb
push
push
pop
cmp
fcomps
insl
test
cmp
dec
push
repz
gs
test
sub
test
testb
dec
lret
insb
bound
ffree
or
in
dec
xchg
pop
imul
mov
sbb
cmp
fcmovb
fisubrs
dec
jmp
jle
push
sbb
sahf
pop
mov
push
ljmp
adc
jae
pop
inc
xchg
es
push
pop
or
xor
cltd
pop
xchg
dec
mov
rcrb
sub
inc
fnstsw
mov
addr16
adc
aaa
popa
xchg
cld
shll
addb
rcrb
sbb
call
push
cmpsl
push
and
sti
xlat
lret
mov
inc
mov
in
sub
movl
cwtl
shlb
outsb
iret
fildll
in
push
or
inc
data16
dec
jns
jno
pop
and
mov
pop
push
push
xor
out
int
movlps
aaa
pop
cwtl
sbb
cmpsb
push
enter
cmc
push
stos
and
dec
movsl
cld
sarl
cmpb
aaa
xchg
outsb
mov
ret
lock
cmp
sahf
sbb
inc
mov
stos
imul
and
mov
mov
nop
xchg
mov
leave
jmp
sbb
jp
rol
scas
inc
fwait
or
orl
inc
add
in
pop
cmp
cwtl
pop
stos
incb
aad
fwait
or
punpckldq
movsl
lret
aad
push
movsl
stos
outsl
mov
add
lret
repnz
pop
hlt
xchg
add
cmp
fstl
sbb
lret
inc
inc
sub
outsb
pop
mov
jmp
ret
mov
mov
leave
dec
cmp
pop
lods
mov
or
cs
hlt
pop
dec
aas
andb
xchg
lret
ss
sbb
xchg
push
cmp
dec
cli
sub
orl
xor
and
loop
jl
xor
push
data16
inc
push
jge
jmp
rorb
mov
cmp
fcmovbe
mov
mov
inc
dec
test
sbb
push
jnp
das
pop
adc
in
xchg
stc
mov
imul
outsb
xchg
sahf
mov
sub
aaa
and
sub
fisttpll
pop
repz
dec
test
push
mov
jns
insb
leave
xchg
add
insb
jg
inc
dec
shrl
mov
mov
sub
cwtl
mov
bound
fildll
dec
sub
mov
call
add
ret
loopne
xor
add
lret
sbb
jb
pop
lea
mov
lahf
js
ret
or
outsb
cmp
rorb
cmp
push
xor
out
push
add
int3
xor
push
push
push
out
jbe
mov
cmp
ret
push
xor
dec
lcall
repnz
push
dec
test
dec
xor
or
fists
inc
or
xchg
push
or
mov
lcall
sub
jecxz
in
ret
add
sub
dec
addb
lods
pop
push
push
sub
inc
cmp
and
int
xor
sub
test
mov
int
lret
sbb
fbld
inc
inc
mov
fcompl
mov
dec
lahf
sar
mov
xchg
pusha
mov
aas
sub
jecxz
or
outsb
repnz
and
aad
mov
push
mov
inc
mov
icebp
subb
fwait
fsubs
je
and
jp
xchg
aas
dec
into
dec
sbb
pop
in
jmp
imul
mov
dec
lahf
dec
jg
int3
push
sbbb
xor
ss
test
aas
push
scas
or
push
insl
xchg
xchg
adc
jge
mov
loop
fucomp
int3
lret
cltd
adc
sbbb
rclb
pop
mov
mov
std
adc
cmp
and
outsl
ficoms
dec
nop
and
cmp
loop
pop
push
cwtl
clc
out
push
in
dec
cmpsl
dec
push
pop
out
js
in
mov
mov
sahf
xlat
jns
repz
add
jae
movsb
push
inc
daa
sahf
imull
xor
mov
je
loop
mov
jmp
je
lods
out
xchg
pusha
popa
lods
push
aas
fdivrs
mov
jl,pn
cmp
lcall
pop
xor
aam
push
xor
cltd
mov
outsb
xor
mov
hlt
xor
call
mov
popf
cmpb
loop
ret
dec
test
daa
out
dec
push
jmp
sbb
and
xchg
mov
mov
insb
out
push
dec
jno
or
outsb
pop
paddw
mov
jg
outsl
pop
xor
mov
imul
pop
aam
pop
jp
add
es
jnp
je
enter
jno
aad
fstl
mov
out
push
out
bound
cmp
jle
mov
inc
add
cmpsb
xor
ljmp
std
movsb
ret
cwtl
enter
js
mov
arpl
mov
xchg
and
mov
mov
xor
adc
xchg
dec
adc
xchg
add
lcall
adc
jnp
lret
outsb
sbb
pop
sbb
aad
into
repnz
jecxz,pn
ja
mov
cmpsb
rol
adc
enter
inc
sarl
test
outsl
repnz
ljmp
mov
mov
fsubrs
cmp
es
std
push
subl
xchg
cmpsl
data16
mov
repz
in
jns
sbb
stos
xor
loop
jle
xchg
test
cltd
add
std
daa
push
jge
push
das
stos
addr16
sbb
push
outsb
dec
pop
adcb
repz
sbb
dec
fs
ljmp
xor
cmpsb
xlat
inc
and
xor
test
mov
pop
nop
dec
pop
sub
mov
sub
sub
jl
cmp
pop
dec
loop
inc
das
xor
jo
mov
cli
mov
xchg
aad
cltd
cwtl
js
xor
xor
daa
test
icebp
test
sbb
movsb
sbb
fsubs
test
les
add
lret
xor
aas
fwait
xchg
xchg
gs
mov
cmp
dec
dec
sbb
pop
pop
xchg
rolb
inc
scas
mov
dec
outsb
pop
lock
and
mov
adc
sub
jns
fs
out
mov
mov
mov
sbb
add
sbb
adc
pop
hlt
in
pop
add
sbb
mov
in
bndldx
jbe
push
xchg
jnp
pop
mov
pop
int3
mov
lock
scas
scas
push
jae
pop
stos
inc
lahf
leave
pop
adc
in
xchg
orl
lcall
outsl
pcmpgtb
fldt
pop
pop
xor
add
inc
repnz
cmp
test
dec
aas
loope
dec
ret
sbb
sbb
stc
fldt
fmull
ja
jl
lea
add
pusha
repnz
dec
xor
xchg
es
fsubl
sahf
insl
sbb
fwait
push
jo
jbe
ret
in
test
dec
mov
int3
xchg
orb
out
mov
shrb
adc
push
mov
xchg
pop
dec
out
add
sti
fsubr
push
data16
and
cmp
out
js
daa
fs
add
lods
out
jbe
stc
mov
lods
into
mov
ret
movsb
push
repnz
xchg
out
shrl
adc
gs
push
inc
adc
dec
sbb
sub
shll
movsb
xchg
fisttpll
sub
movsb
aad
fst
lea
dec
in
rorl
mov
mov
clc
cmp
xor
mov
scas
rorl
mov
int3
dec
int
inc
add
jo
jmp
popa
mov
mov
out
push
cmpsb
enter
and
jge
out
xchg
and
mov
rcrb
mov
pusha
inc
int3
mov
adc
movaps
mov
decb
jge
das
neg
or
xchg
pop
mov
int
test
mov
stos
in
mov
shll
adc
sbb
rorb
test
mov
fisubs
sub
cwtl
or
jbe
fnstenv
js
sub
fmulp
out
sub
fistpll
xchg
addr16
fadds
aad
outsb
push
push
ljmp
setb
xor
fldenv
jl
pop
movsb
sbb
push
es
or
cmp
dec
mov
call
es
sub
nop
pusha
stos
lret
pop
sub
jno
setp
xchg
xchg
pusha
stc
jne
jl
sti
xor
insb
call
icebp
arpl
int3
out
jmp
xchg
imulb
shll
fwait
popa
and
stos
js
in
dec
ljmp
cld
push
and
popa
or
dec
and
mov
adc
push
cmpsb
jg
jecxz
jbe
or
aas
stc
adc
orl
pushf
inc
test
or
mov
test
push
iret
xor
hlt
stc
jbe
imul
stos
imul
dec
push
push
xlat
sbb
insl
mov
jle
movl
xchg
jns
adc
lds
mov
push
cmp
test
lea
dec
mov
sbb
mov
xchg
jmp
cmp
xor
sbb
scas
arpl
inc
rorl
pop
sbb
sbb
out
lahf
inc
lods
enter
mov
gs
out
mov
pop
mov
call
jb
mov
mov
xlat
incb
sub
and
mov
push
xor
cmp
and
xor
and
nop
insb
push
sbb
and
aaa
imul
mov
pop
and
or
lret
aas
xchg
into
das
jb
or
inc
fdivrp
push
outsl
and
aaa
pop
lods
dec
sahf
loop
mov
mov
out
repz
xor
mov
xor
sbb
arpl
std
cmpsl
popf
ficoml
in
lret
jne
inc
mov
cli
psraw
cmp
push
dec
lahf
stos
aaa
jne
lods
mov
and
jl
sahf
dec
push
cltd
js
lea
sbb
enter
sbb
js
xor
xor
dec
mov
mov
into
enter
xor
cmp
sub
rcl
inc
shl
xor
pop
cmp
enter
repnz
mov
ss
mov
mov
jne
ret
mov
mov
subl
pop
mov
jae
sahf
xor
or
mov
mov
mov
shlb
imul
xor
cs
add
mov
mov
ja
push
jb
movsb
iret
mov
es
out
aam
dec
pop
jge,pn
mov
cltd
imulb
lcall
sub
pop
mov
aaa
imul
or
mov
jl
fisttps
xchg
popf
mov
sbbl
scas
out
sbb
sti
arpl
dec
mov
jmp
push
sbb
es
xchg
je
xor
dec
mov
xor
mov
sub
das
jecxz
stos
iret
and
jo
leave
xchg
xor
push
mov
mov
xor
cmpsb
push
xchg
jne
js
sbb
jl
or
mov
cmp
xor
inc
cmpsl
mov
jge
mov
sub
sbb
imul
mov
add
pop
loopne
dec
scas
int3
and
inc
andb
pop
dec
aas
and
arpl
mov
imul
push
test
imul
addl
lret
aas
jl
xchg
mov
cmp
out
mov
lahf
pop
add
test
cld
add
or
test
cmp
cld
sub
iret
stos
mov
out
inc
jecxz
jns
jmp
in
popf
adc
imul
pop
mov
cmp
movsl
xchg
push
in
or
mov
mov
inc
cmp
test
push
or
mov
jmp
int
icebp
popf
mov
out
enter
xchg
mov
add
in
mov
inc
jle
inc
mov
pop
xchg
xchg
xchg
orb
sahf
mov
dec
xor
xchg
dec
jo
dec
or
fists
lock
adc
hlt
pop
test
inc
lcall
in
sbb
mov
xchg
mov
mov
sub
dec
sahf
xlat
xchg
ss
fcoml
sahf
inc
sub
icebp
ret
cmp
jns
mov
jno
mov
mov
rorb
loopne
and
pusha
hlt
dec
int
outsl
push
inc
cmpsb
stos
sahf
lret
loop
mov
data16
cs
es
mov
adc
fs
push
xor
lods
cmp
clc
and
mov
inc
imul
jbe
rcr
popl
pop
inc
add
test
mov
or
cmp
mov
add
xchg
xchg
das
ret
mov
pop
cwtl
rclb
mov
arpl
inc
cmpsb
dec
inc
subl
cmpsl
pop
cmp
pop
into
mov
cmp
inc
jns
ret
sub
xchg
movsb
mov
prefetch
and
add
addr16
adc
mov
pusha
jo
xchg
mov
or
ljmp
int
in
addl
rorb
negl
cmp
xchg
push
or
push
mov
xchg
in
rcrb
call
mov
or
xchg
sar
fbld
and
xor
loope
addb
jmp
cmpsb
movb
imul
addr16
add
mov
loop
xor
bound
lds
dec
dec
sbb
xor
xor
inc
inc
outsb
push
and
out
lret
arpl
pop
mov
xchg
xchg
sbb
shlb
jp
nop
jb
clc
xor
enter
mov
jge
repz
adc
jno
xor
scas
mov
pop
mov
out
push
sbb
pusha
rolb
dec
cmp
stc
xchg
inc
das
sub
divl
ja
sub
loop
jno
mov
ss
add
repz
outsb
mov
insl
mov
aaa
mov
cmpsb
or
iret
sbb
mov
dec
roll
into
dec
addb
pop
in
adc
cmp
es
dec
movb
das
mov
pop
pop
jne
xor
lret
pop
or
dec
pop
xchg
push
fsub
cmp
xchg
push
and
out
aad
inc
adc
dec
lods
ss
aas
jmp
cltd
jbe
inc
cs
xor
pop
ss
pusha
jb
xchg
out
xchg
mov
push
imul
push
aam
out
mov
fsubl
add
dec
outsb
test
push
xchg
dec
push
cmp
pop
sbb
sub
lret
inc
add
sbb
imul
ja
sub
add
sub
enter
xor
lcall
jge
jne
in
adcl
lods
fwait
cmp
adcb
inc
fistps
ljmp
fstpt
inc
and
sarb
push
inc
jg
test
pop
hlt
divl
jbe
repnz
adc
and
or
pop
jle
mov
mov
fisubl
insl
lods
mov
push
ss
outsl
xchg
xchg
loopne
sub
std
and
std
mov
inc
dec
out
and
sbb
sbb
std
mov
out
mov
mov
cmp
hlt
mov
pop
dec
push
push
sbb
cmp
fldenv
out
fisubl
xchg
fstpl
cmc
push
popa
dec
pop
mov
push
push
dec
dec
xchg
and
mov
jmp
pusha
jns
cmovne
icebp
mov
sub
ret
cli
int3
xchg
insb
jmp
add
test
adc
xor
insb
aad
adc
mov
divl
cs
in
aas
dec
aad
and
cmc
sbb
jg
popa
dec
mov
into
xchg
ds
ror
lods
por
jae
ljmp
and
loopne
inc
sub
fimull
mov
mov
mov
jl
add
lds
inc
dec
pop
test
mov
pop
push
push
inc
imulb
das
push
xchg
mov
xchg
sub
ret
leave
push
ret
jb
xchg
jg
pop
iret
cmp
and
int3
fdivrp
sub
out
outsl
mov
sahf
adc
repz
cs
fs
loopne
les
add
or
lret
dec
test
xor
faddp
popf
push
sub
das
pop
push
dec
sbb
shr
mov
sbb
shll
les
jo
in
mov
lock
mov
cmp
mov
lret
js
in
mov
ret
lahf
out
cli
pop
jno
stos
dec
loopne
mov
push
lcall
scas
ror
or
xor
imul
xchg
cmp
jl
mov
jle
in
inc
pop
outsl
push
inc
pop
mov
sti
cmp
jb
std
xchg
in
and
xchg
fiaddl
enter
add
and
imul
hlt
or
add
or
inc
addb
ja
outsb
jmp
cs
fildl
fsts
pop
fisubs
and
mov
or
push
mov
mov
fs
xor
xchg
jmp
pop
inc
and
xchg
std
dec
or
sbbb
loopne
sbb
mov
rol
aaa
iret
mov
leave
mov
mov
jmp
dec
or
pop
lcall
jge
xor
sbb
add
scas
pop
orb
sub
je
push
add
add
add
add
add
jae
push
add
imul
add
add
add
bound
add
outsl
add
add
add
add
insl
add
add
je
push
add
add
add
add
popa
addr16
add
insl
add
popa
insb
insb
add
outsb
add
add
outsl
insl
add
add
jne
je
add
add
imul
add
add
jb
outsl
add
add
add
popa
add
add
bound
addr16
data16
add
insb
add
add
add
add
add
imul
imul
add
add
outsb
add
add
add
add
outsb
add
add
imul
add
add
jb
outsl
add
jns
sub
add
insb
add
jo
jb
outsl
add
jns
add
jne
jo
add
jae
outsl
data16
add
add
data16
add
add
jb
imul
je
fs
jb
add
add
jb
popa
add
jae
popa
jns
push
add
add
push
add
add
outsl
outsb
outsl
jne
arpl
jb
ja
jne
arpl
outsb
cmp
outsl
add
add
popa
outsb
jns
add
add
jo
jb
imul
je
add
jns
add
add
add
add
imul
push
add
add
