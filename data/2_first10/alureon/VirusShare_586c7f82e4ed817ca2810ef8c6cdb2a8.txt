jae
shl
lods
dec
jnp
lret
sbb
mov
hlt
adc
arpl
and
or
mov
shr
cmp
repnz
ss
cmp
xor
sbb
xlat
xchg
inc
repz
aam
out
sbb
nop
or
xor
jne
jb
mov
adc
out
xor
lock
xchg
int3
daa
divl
or
add
imul
xor
out
sbb
lret
scas
popl
fildl
into
cmp
sahf
jmp
icebp
cmp
stc
add
je
add
dec
rclb
loopne
pop
jecxz
rolb
inc
stos
gs
test
push
dec
jge
sub
sahf
outsl
dec
cmp
outsb
repnz
loop
loope
sbb
cmp
add
dec
daa
insb
shr
ret
pop
lret
push
in
dec
ret
inc
imul
jecxz
mov
push
sbb
dec
mov
loop
mov
push
shrl
test
push
in
jnp
imull
inc
pop
or
fwait
ret
orb
push
push
mov
sar
stc
shlb
inc
jbe
imul
fisubs
lea
lcall
popf
arpl
clc
xchg
pop
inc
fadd
cmp
iret
add
mov
fldcw
push
push
ja
inc
xchg
add
xchg
sub
mov
sub
xchg
dec
push
mov
clc
push
mov
fldlg2
mov
cltd
xchg
into
add
cmp
ja
cmp
ja
subb
ds
test
push
mov
cli
xor
lea
sub
int
lds
insb
lret
push
adc
adc
daa
xchg
cwtl
inc
shlb
jnp
xchg
call
ficoms
dec
scas
jecxz
jo
std
pop
into
inc
inc
sub
scas
inc
push
popf
sti
mov
sbb
mov
mov
pop
mov
add
and
lods
lcall
dec
mov
sbb
push
xchg
mov
jge
jne
adc
cmp
bndstx
stos
mov
movsb
adcb
and
sub
mov
inc
sub
fldt
sti
cwtl
xor
hlt
lods
repnz
push
in
push
mov
mov
in
xor
mov
call
cwtl
addl
cmpsl
mov
dec
inc
or
dec
sub
sub
pop
sub
or
sub
dec
imul
push
aaa
push
addr16
xor
mov
xorl
mov
popa
ret
cmp
adc
lock
cmp
xchg
fldt
inc
adc
test
dec
test
aas
je
mov
sbb
nop/reserved
mov
mov
push
jo
test
cmc
mov
push
cmp
je
mov
and
add
mov
leave
dec
xchg
leave
rcrb
push
mov
lock
pop
aas
popa
mov
push
ret
ds
adc
adcb
xchg
sub
mov
ja
popa
jl
adc
or
add
push
arpl
pop
pop
mov
push
or
inc
jo
lods
dec
push
fsubrs
xchg
mov
lds
xchg
insb
icebp
adc
pusha
mov
dec
mov
sub
iret
xlat
daa
aaa
pmaxsw
mov
jns
out
or
sbb
mov
adc
cmp
and
inc
inc
push
daa
clc
rcrb
sub
ljmp
shrl
stos
loopne
subl
enter
lcall
pop
loop
shll
dec
cli
shll
into
and
or
aad
lea
push
push
arpl
jo
les
movhps
pop
rcr
and
in
mov
xor
mov
adc
dec
scas
sbb
loop
ficoms
inc
cs
movsl
mov
out
cs
les
inc
sub
xchg
mov
xchg
shl
lds
shrl
adc
es
popa
push
test
sbb
clc
ljmp
loopne
out
sub
movsb
ja
jge
aaa
mov
rcrb
mov
add
and
js
inc
pop
dec
or
jmp
dec
sti
add
xor
pushf
stos
cs
jl
cwtl
lods
repnz
mov
mov
das
cld
imul
cmp
hlt
sub
fisubs
mov
fcmovnbe
dec
mov
xchg
mov
iret
inc
nop
shrb
pop
pop
dec
std
xchg
and
lock
adc
js
cld
insb
jmp
xor
jecxz
out
cmpb
xor
mov
test
sub
mov
jmp
or
jne
add
mov
sbb
or
aaa
add
push
nop
popf
out
cmp
leave
sbb
and
push
rolb
cld
push
xchg
ljmp
mov
inc
mov
inc
add
adc
popf
mov
lods
cmc
popf
popa
hlt
pop
lea
ret
pop
sub
scas
pop
jp
sarl
jge
insb
data16
ds
mov
loope
xchg
scas
cmpsl
push
adc
or
pop
xor
pop
rolb
cmp
not
push
push
jbe
push
arpl
mov
jnp
inc
in
add
push
aam
hlt
jo
mov
addr16
mov
xchg
xchg
dec
pop
xor
dec
add
or
and
push
insb
loope
lods
push
inc
or
cld
icebp
fiadds
mov
js
fwait
mov
inc
test
mov
lds
fsubr
dec
and
in
pop
pusha
cmp
pop
hlt
int
cmpl
mull
sub
mov
xlat
sbb
mov
mov
inc
das
or
dec
xchg
push
arpl
hlt
inc
fwait
xlat
in
or
jbe
mov
mov
mov
pop
movsb
rorl
mov
imul
cmp
insl
inc
xlat
in
mov
push
daa
addr16
negb
pop
cmc
and
push
xchg
call
sbb
push
and
pop
test
aaa
hlt
mov
cltd
rclb
test
fisubs
cltd
mov
push
in
cmp
mov
push
xlat
jo
aas
pop
icebp
je
and
push
sub
shl
dec
daa
popf
pop
fs
gs
out
jbe
clc
or
and
aas
stos
push
pop
imulb
jbe
test
mov
mov
jo
xchg
popa
test
push
and
fbstp
add
push
test
les
jo
add
jns
xchg
repz
stos
cmp
in
cwtl
push
inc
loope
test
cld
sub
inc
jno
xchg
mov
adc
ret
cmp
mov
bound
sub
add
adc
imull
ret
inc
push
out
push
inc
sub
mov
std
mov
dec
add
mov
pushf
push
repnz
pop
jbe
jecxz
dec
cmp
into
mov
test
sbb
mov
pop
stos
jb
mov
shll
add
test
shll
xor
push
iret
out
or
shrb
push
movsb
inc
fcmovne
or
mov
add
dec
or
bound
test
pop
movsb
push
mov
jp
xchg
add
fisubrs
mov
decb
xchg
call
adc
pop
add
sbb
fmuls
je
pop
fwait
jae
ret
fdiv
repz
xor
adc
in
xchg
cmpsb
rclb
jp
enter
not
sti
test
jp
outsl
es
es
scas
pushf
test
mov
sbb
hlt
jns
sub
push
subl
mov
ljmp
shlb
add
xor
divb
sub
repz
cmp
sbb
pushf
xchg
lret
xor
bound
jns
lret
sbb
or
dec
push
adc
lock
sub
and
into
adc
fsubrp
iret
lret
cltd
in
and
lcall
xchg
sub
mov
dec
lods
mov
movsb
pop
push
pop
and
test
add
jbe
gs
mov
ljmp
jno
int
pop
loope
out
lea
jnp
xchg
mov
jae
xor
fbstp
cmp
inc
cwtl
xlat
pop
xchg
pop
cs
in
aam
jle
push
js
xchg
fsub
test
mov
sub
add
mov
loope
dec
inc
in
jecxz
shl
repnz
or
or
insb
pop
andl
call
scas
dec
pop
cld
mov
adc
push
xchg
sub
pop
inc
add
mov
in
lods
out
repz
cmpsl
sub
and
outsl
ds
pop
js
es
lcall
pop
xchg
mov
mov
das
shrl
hlt
sub
add
adc
inc
dec
inc
add
xchg
xchg
adc
xchg
jmp
jmp
xchg
dec
sub
cmpb
inc
gs
test
gs
fildll
pop
mov
lods
inc
dec
push
leave
cs
lret
mov
pop
fwait
push
push
imul
pop
lds
or
wrmsr
xor
fdivs
inc
pop
lcall
loopne
hlt
pop
bound
lds
aad
adc
imul
sbb
mov
and
sti
aaa
fcmovne
ljmp
cmp
jo
arpl
jo
sub
mov
ss
ret
into
cmpsl
xor
je
dec
outsl
lret
sub
insb
popa
sub
movsl
fldt
rcl
pop
test
in
pop
clc
push
ret
ss
jb
xor
adc
push
dec
popf
sub
xchg
fstpl
mov
cltd
lods
or
mov
shll
lock
pop
or
jl
loopne
scas
pop
nop
loop
xchg
sbb
bound
shrl
outsb
jno
es
adc
and
je
mov
imul
aaa
cmpsl
jmp
add
pop
dec
mov
inc
rorl
pop
dec
test
sbb
int
cwtl
clc
adc
rcrb
testl
and
stc
and
pop
leave
je
stos
push
fdecstp
xor
cs
push
dec
xchg
into
add
jb
fistl
test
mov
mov
cs
imul
pop
pop
inc
fidivl
xor
imul
cmp
cltd
ljmp
sbb
jecxz
sti
int3
sub
mov
mov
dec
in
std
sub
inc
test
repnz
and
fcoms
rorb
ficoml
les
and
arpl
add
daa
fsubrs
imull
std
xor
repz
scas
mov
add
or
dec
sbb
adc
sbb
cmc
out
ljmp
aas
call
fldcw
sub
lret
xchg
jg
inc
sub
sarb
sbb
push
adc
loopne
xor
xor
mov
out
push
inc
push
movsl
mov
jmp
imul
aam
and
sub
dec
frstpm(287
dec
jp
mov
xor
push
sub
sbb
inc
xor
ss
pop
adc
cmp
out
adc
push
daa
fwait
mov
test
je
sbb
jmp
adc
in
pop
xchg
push
cmpsl
and
dec
ljmp
aas
jp
pop
aam
fstpl
mov
loop
xchg
icebp
lret
aas
fcoml
xchg
mov
loop
cmp
mov
ja
jns
shlb
nop
push
sbb
popa
sbb
rorl
sub
sub
insl
bound
or
jo
arpl
lahf
jne
lds
movsb
sbbl
or
sarb
imull
sahf
out
lea
fsubp
dec
dec
jnp
jl
xor
fwait
inc
addr16
pop
arpl
sub
js
pop
in
arpl
jecxz
sbb
adc
jnp
ficoml
lods
xchg
into
out
rcrl
push
inc
mov
xchg
ljmp
sbb
xor
xor
lods
dec
xchg
add
adc
push
sahf
and
mov
cmc
mov
je
fwait
es
mov
sub
dec
mov
repnz
std
fistps
loopne
dec
imull
fcoml
mov
out
ja
dec
lea
std
jmp
leave
stos
hlt
and
pop
cmp
and
push
rolb
mov
dec
loopne
push
int
popa
jmp
pop
lods
imul
and
mov
dec
cmp
lret
shr
add
mov
xor
ss
mov
sbb
sarl
jl
dec
call
fs
cmpsb
daa
test
arpl
repz
and
out
xchg
mov
jno
arpl
aaa
sbb
and
cmp
adc
out
in
inc
scas
int
test
push
les
pop
insl
pop
or
mov
sarb
dec
or
fbstp
pop
lret
mov
lcall
mov
mov
hlt
shrl
mov
and
neg
cmp
jmp
ljmp
pop
jp
subl
aad
inc
movb
adcb
inc
xchg
mov
ljmp
inc
lea
cmpb
add
lods
cmpsl
xor
mov
mov
jo
call
sub
and
dec
mov
push
sbb
adc
cmp
dec
mov
jb
push
add
lahf
dec
add
cltd
adc
das
ret
jbe
mov
xor
jb
mov
adcb
enter
movsl
insb
outsl
mov
insb
push
xor
cmp
dec
mov
adc
cmp
out
inc
fisttpl
mov
mov
sbb
mov
cmp
iret
rcr
aad
fadds
or
clc
outsb
imul
inc
or
jmp
imul
into
int
std
or
cwtl
mov
leave
sub
cmp
popa
lods
into
out
sub
mov
dec
push
movsl
dec
fnstenv
xchg
roll
inc
pop
add
cmp
rorb
lret
or
inc
jle
icebp
es
in
mov
jnp
xor
and
daa
lds
iret
or
push
or
mul
ret
pop
sbb
jecxz
or
lods
fistl
lock
add
repz
jp
push
pop
idivb
je
leave
dec
scas
pop
repnz
dec
insb
fnstcw
in
inc
loop
popf
pop
sahf
xchg
fistl
imul
xor
orl
dec
lds
lock
cmp
push
inc
inc
stos
dec
inc
imul
int3
test
sub
in
pop
stos
repnz
clc
rcrl
jmp
aad
pop
sub
push
xchg
movsl
gs
sti
push
jg
std
shlb
dec
sbb
push
imul
testb
mov
aaa
add
fcomi
ror
into
mov
sbb
mov
xchg
test
dec
mov
xchg
push
mov
sbb
xchg
push
into
std
dec
jnp
movsb
pop
adc
bound
inc
aas
sahf
and
adc
mul
adc
lahf
jmp
push
mov
mov
mov
xchg
pop
pop
cmp
inc
pop
xchg
push
push
jae
ljmp
loop
pop
ljmp
push
mov
cmc
xchg
dec
cmp
ret
jne
add
adc
addr16
insb
cmpsb
mov
movsb
cmp
bound
adc
mov
in
mov
push
adc
mov
or
jl
cwtl
repz
or
sub
cmp
add
icebp
sub
enter
or
push
inc
adcb
xorb
pop
lret
lcall
mov
pop
shll
pop
and
hlt
xor
lock
add
sub
dec
andb
outsl
data16
testl
in
pop
cmp
bound
ret
sub
jne
push
dec
add
test
sub
iret
mov
push
adc
fsubs
clc
mov
scas
push
sbb
stos
jbe
cmp
loope
and
adc
mov
std
add
mov
int3
in
imull
imul
gs
int
out
lcall
jl
xor
cli
lret
int
mov
inc
icebp
and
test
into
dec
jae
ljmp
sahf
lods
movsb
add
adc
das
inc
pop
jnp
scas
jbe
push
mov
test
imul
mov
mov
add
add
scas
lea
push
movsb
nop
out
arpl
arpl
icebp
out
out
in
dec
ficomps
push
cld
movsl
xor
adc
pop
xchg
add
in
in
add
push
lods
xor
aaa
in
rcrb
push
cmpsb
dec
into
mov
xor
xor
shrl
orl
cmpsl
mov
dec
stc
push
sub
call
pop
adc
or
loope
ja
in
rorb
cmp
dec
es
mov
mov
jno
sbb
mov
and
and
dec
out
mov
inc
daa
rcrb
add
pushf
pusha
dec
pop
idivl
inc
ds
pushf
fs
lret
inc
ljmp
pop
sub
xchg
push
push
mov
imul
int3
aas
les
jg
cwtl
rcrl
xchg
sbb
in
mov
cli
daa
mov
jo
lahf
lds
in
ljmp
stos
inc
fisttpll
fdivrs
xchg
cmp
inc
loopne
in
or
mov
pop
jle
xor
shlb
in
push
imul
add
dec
repnz
pop
js
lods
mov
jns
fs
or
jo
dec
mov
xchg
pop
xor
popa
adc
lea
push
aad
test
pop
jne
xchg
test
jnp
dec
fildll
and
sbb
fistpll
jp,pn
cld
jnp
xor
xor
rcll
test
bound
cmp
xchg
popa
mov
clc
into
imul
jg
popa
mov
idivl
rclw
insl
dec
pop
and
pop
subb
pop
mov
popa
addl
int
iret
mov
pop
pop
fstpl
push
out
je
and
das
jle
xlat
pop
in
push
mov
sbb
ja
dec
sarb
enter
mov
push
mov
insl
das
xor
xor
popa
pop
xlat
fsubl
sbb
xor
outsl
into
fisttps
clc
nop
js
push
xlat
mov
jecxz
int
cmp
xchg
loop
and
js
push
mov
add
adc
push
sub
lret
insl
xchg
pop
sbb
or
sub
pop
into
nop
xchg
sbb
fildl
jmp
xchg
xor
outsb
mov
push
movsb
test
or
loope
icebp
and
std
in
xchg
imul
jns
pusha
aaa
sbb
xchg
ja
test
pop
jo
hlt
add
cltd
into
cmp
xor
daa
gs
imul
push
movsl
sub
popf
sub
fidivrl
hlt
adc
sti
sub
les
js
daa
cmp
cmp
jecxz
jae
into
pop
pop
add
and
leave
outsl
icebp
cld
jmp
dec
adc
sarb
in
test
adc
je
and
mov
and
push
sbb
mov
out
mov
das
xchg
and
mov
loopne
xor
mov
sbb
movsb
mov
out
xor
and
out
xchg
fs
ret
jbe
mov
aad
mov
outsl
jbe
mov
stos
sbb
femms
jae
orl
out
insb
sub
mov
fst
and
mov
inc
push
stos
imul
andl
xchg
mov
lcall
cmpsl
sub
fimull
jmp
push
negl
mov
or
mov
add
inc
xorb
mov
mov
cld
fs
cmc
addr16
adc
arpl
sbbb
fidivrs
xor
mov
mov
jg
lcall
and
cmpsb
das
mov
mov
mov
inc
push
cmc
add
les
cmp
test
xor
push
jno
push
cmpsl
add
pusha
mov
lea
stos
xor
jl
outsl
push
test
aad
xabort
pop
std
mov
inc
jne
fmuls
scas
call
jb
repnz
or
lahf
pop
mov
mov
cmp
pop
popa
flds
or
fs
mov
sub
rolb
jno
icebp
and
stc
dec
enter
mov
mov
mov
aad
sbb
stos
or
sbb
rcrl
in
mov
mov
pop
js
int3
and
xorl
aam
ss
xchg
inc
pop
or
adc
iret
gs
push
xchg
or
stos
add
cmc
or
add
jg
mov
in
xchg
mov
cld
mov
cmp
pop
cmpsl
fwait
inc
int
pop
cltd
ficoml
imul
pop
pop
jg
inc
and
pop
xchg
fcmovbe
clc
in
add
je
push
mov
pop
out
jle
inc
mov
test
mov
sub
sbb
arpl
loope
js
cwtl
add
inc
nop
jne
in
add
push
mov
in
dec
jne
sbb
fadds
cmp
xor
shl
push
dec
inc
mov
jp
movsl
mov
pop
cld
jo
popf
aad
in
push
sarb
fs
sub
shll
test
mov
jns
rcrl
dec
movsb
rcrb
add
push
int
addb
lods
mov
pop
cwtl
or
inc
arpl
test
aad
andl
scas
mov
bound
test
insl
and
push
cwtl
out
es
add
mov
loope
mov
pop
fwait
leave
fs
loope
cwtl
pop
cld
shrb
jo
push
sarl
adc
mov
mov
ds
sbb
xor
js
mov
lret
sahf
arpl
mov
mov
xchg
inc
inc
pusha
push
bnd
movsl
test
icebp
add
data16
in
mov
xlat
adc
sarb
push
add
rcrb
loop
push
insb
inc
sub
lea
adc
mov
mov
cmp
sbb
lea
xchg
or
or
pop
and
fcompl
xor
mov
cli
in
into
pop
mov
push
movsl
inc
jnp
sbb
rcr
cwtl
xor
or
xor
cmpsl
inc
sbb
jns
cltd
lahf
movsl
les
inc
out
dec
jbe
xor
leave
push
cmp
mov
test
rcr
or
ljmp
sbb
push
pushf
or
and
nop
sub
movsl
dec
roll
xchg
das
int3
inc
bound
insl
sbbb
aaa
cmpsb
repz
aad
test
ss
lcall
sub
in
loope
and
js
call
mov
in
hlt
ror
mov
jmp
jl
daa
outsl
out
xchg
jge
xlat
je
nop
jge
cmp
out
les
pop
ds
outsl
pop
sbb
out
add
xchg
inc
popa
in
xor
push
sbb
and
addl
sti
sub
clc
movsb
dec
or
data16
insl
repnz
push
mov
and
sahf
push
cld
sti
fnsave
push
loopne
cmp
and
dec
in
xchg
adc
jg
aas
fnstsw
push
cs
in
jecxz
test
jp
fisubl
jnp
jp
mov
shrl
jne
orb
mov
add
jge
xor
push
mov
aas
cmp
fcmovbe
adc
lret
lods
loopne
icebp
cmpsl
popl
xchg
ja
cwtl
outsl
jno
mov
mov
push
movsb
push
add
adc
test
repz
dec
shrl
mov
mov
mov
push
test
out
popf
mov
fimull
pushf
lods
mov
test
gs
cwtl
sahf
test
and
int3
lods
lcall
int3
xorl
add
repnz
dec
ret
rorl
leave
fsubrs
jbe
jae
mov
xor
rcll
iret
ffreep
test
pop
cmpsb
mov
out
loope
stos
repnz
inc
pop
adc
jae
fs
mov
iret
ret
out
mov
pop
push
xchg
jmp
shll
fcmovnbe
loopne
adc
in
add
mov
mov
xchg
lret
adc
iret
push
dec
xor
cmc
popa
xchg
xchg
cli
push
fsubr
rorl
sub
mov
test
outsb
jns
pop
bound
pop
movsb
lock
dec
xchg
in
jle
repnz
pop
push
pop
ret
pop
shrb
cmpsb
xor
int
push
or
jl
cmp
dec
mov
xchg
fcomp
loop
sub
inc
dec
push
popa
sahf
sbb
aas
push
sbb
stos
or
cli
inc
push
or
push
xor
es
or
outsl
sbb
jbe
cmc
mov
sub
push
jne
cmpsl
nop
sahf
sahf
lea
lahf
aam
into
rcrb
add
fcoms
mov
es
sahf
out
fistl
or
adc
xchg
adc
push
fnstcw
xor
arpl
mov
xor
dec
xor
nop
pop
lods
and
xchg
iret
iret
fildl
ret
cltd
or
sbb
inc
pop
es
and
jns
and
out
push
xchg
call
nop
push
lcall
sbb
ret
out
push
repnz
sti
fistps
push
js
daa
into
and
xchg
or
pop
rcrb
push
out
xor
scas
cld
inc
pop
jno
incl
jbe
xor
daa
ds
andl
sbb
xchg
jle
scas
addr16
mov
ja
xor
or
xor
push
aad
xchg
mov
fbstp
xor
push
mov
xor
mov
xor
pop
stos
ds
mov
and
mov
filds
mov
sbb
in
jno
pop
sub
pop
scas
test
arpl
sub
cmp
add
into
scas
shr
and
cmp
test
ds
repnz
add
or
out
pop
mov
mov
dec
mov
push
push
lock
inc
inc
inc
push
xchg
sub
jmp
and
xchg
xor
or
pop
mov
leave
jl
insl
repz
inc
xchg
decb
xchg
jecxz
mov
mov
mov
mov
call
sbb
out
popf
pop
push
in
cli
xchg
in
pop
push
aaa
into
iret
hlt
enter
and
and
aaa
lods
scas
cmp
pushf
jge
leave
mov
xchg
fwait
jge
test
outsb
lods
cwtl
shl
dec
leave
fbld
loope
js
push
push
incb
mov
mov
pushf
fwait
jl
xchg
push
ja
cmp
mov
xchg
into
add
in
xor
or
xchg
mov
into
dec
jecxz
outsl
pop
pop
adc
mov
enter
nop
ss
dec
cltd
lea
xchg
adc
xlat
hlt
push
jns
lcall
jo
test
iret
cmp
pop
mov
jbe
clc
fsubrs
test
push
pop
dec
mov
ds
cltd
add
popa
and
dec
jge
out
arpl
loope
shll
test
repnz
fldcw
add
adc
pusha
aam
mov
sbb
sbb
mov
clc
cmpsl
jbe
add
loope
and
jl
xchg
ret
xor
test
xor
mov
and
or
sbb
mov
mov
push
dec
and
mov
xchg
mov
adc
jecxz
jg
cwtl
mov
popa
test
pop
mov
mov
les
pop
loop
push
lea
popa
add
mov
dec
int3
sbb
cld
fdivr
mov
xlat
rolb
sub
cmpsb
jecxz
inc
js
sbb
icebp
scas
adc
cli
iret
or
lods
sbb
inc
push
sub
dec
loop
rol
and
pop
jge
jnp
dec
aas
pop
popf
sub
add
lret
add
leave
jle
pop
loopne
int
ss
enter
repz
xchg
push
in
sub
xchg
mov
or
inc
lods
mov
mov
jl
sub
outsb
add
pop
sarl
sahf
mov
call
mov
push
and
stos
lds
mov
les
push
sub
aam
sub
fistpll
test
push
popf
xchg
xchg
ret
std
rcl
lret
lods
aam
cwtl
jmp
sub
mov
loop
clc
out
daa
xor
shl
test
inc
imul
ss
push
cmp
pop
leave
inc
int3
dec
sbb
rolb
mov
xchg
in
or
xor
xor
push
inc
ljmp
das
aam
outsl
pop
call
xlat
in
pop
mov
loop
xchg
andb
xlat
push
mov
lret
icebp
xchg
xchg
sub
lcall
mov
push
jl
test
mov
cmpsl
ss
mov
loope
add
dec
sub
sti
es
fwait
jg
sti
fmul
mov
pop
lcall
popl
mov
or
idivl
lahf
pop
arpl
je
and
pop
clc
pop
movsb
sbb
dec
icebp
xor
ljmp
fbld
jbe
fs
dec
adc
or
push
scas
and
push
in
cmpsl
or
mov
add
std
pop
ret
mov
mov
push
pop
popa
test
sub
lcall
and
and
pop
enter
add
or
add
fs
pop
lret
push
add
push
fistpll
mov
mov
in
mov
push
loopne
iret
pop
add
fdivrs
mov
add
cli
daa
adc
movb
popf
add
jmp
adcb
or
xchg
cmpsb
xor
call
out
decb
stos
cmp
cmp
dec
jge
test
ror
or
std
outsb
sar
sub
test
and
ret
and
mov
popf
pusha
rorb
jge
mov
mov
push
ss
mov
push
sahf
fnstcw
pop
cmp
arpl
fdecstp
gs
gs
jo
hlt
stos
cmp
pop
inc
in
inc
fcmove
fs
int
lret
inc
adc
push
movsb
mov
aad
pop
pop
scas
add
jp
ds
outsb
push
add
into
popf
icebp
or
iret
xor
mov
xor
and
and
push
sub
xchg
jp
xchg
jp
cltd
pop
in
cld
mov
mov
mov
lahf
dec
sub
jp
and
sahf
inc
lahf
imul
push
imul
lahf
pop
rorl
stos
aaa
mov
pop
lods
xor
aaa
pushf
ljmp
lret
loope
dec
cmp
notb
popf
dec
pop
jnp
fcompl
rorl
movsb
mov
int
je
lahf
sahf
aas
xchg
sbbl
out
rolb
movsb
fcmovne
mov
pop
scas
inc
push
sbb
and
push
shlb
inc
popa
jnp
decl
stos
subb
push
hlt
cli
xorl
insl
xchg
repnz
cltd
dec
ljmp
sub
popa
aam
pop
add
jg
or
mov
or
movsb
sbb
aas
jbe
ficoms
mov
cltd
jnp
mov
mov
jb
bound
jp
sbb
and
push
test
or
inc
jl
mov
imul
loopne
lea
mov
add
push
repnz
push
insl
inc
push
test
sbb
add
ja
cwtl
ret
adc
xorb
push
add
or
into
fldenv
cmp
nop
test
aas
jbe
add
xor
jnp
cmpsl
mov
sbb
dec
stos
pop
out
ret
sbb
mov
xchg
mov
pop
adc
push
and
mov
inc
jns
and
pop
inc
cwtl
sbb
jb
or
push
jae
dec
cli
cld
int3
dec
mov
push
and
pop
dec
fidivl
and
pusha
ret
pop
test
xor
pop
adc
call
dec
xlat
mov
imul
push
push
mov
scas
ljmp
or
leave
jmp
jecxz
ja
ret
loope
dec
add
sbb
insl
insl
lods
sub
cmpsb
es
test
cmp
in
jne
cltd
add
sub
fdiv
mov
fs
and
mull
xchg
pushf
shrb
pop
lock
jmp
icebp
mov
xchg
rorb
push
iret
mov
fsqrt
dec
imul
cmp
dec
dec
popa
test
pop
pop
mov
in
mov
fs
inc
jl
xchg
sbb
add
jl
adc
jae
pop
or
push
sub
es
mov
imul
push
call
aam
xchg
cli
sti
cltd
sub
pop
aas
loop
add
push
ja
xor
mov
add
dec
scas
mov
leave
push
jl
mov
mov
ret
jno
push
test
insb
pushl
imul
notl
jae
dec
push
scas
idivb
dec
push
cmp
mov
mov
push
jge
repz
fs
aas
sbb
mov
in
je
test
movsl
dec
out
test
xchg
mov
cmp
enter
mov
add
hlt
lds
jmp
shlb
push
cmc
push
lods
sub
cmp
test
xchg
dec
ja
in
or
daa
outsb
notl
xchg
cwtl
sub
insl
mov
or
pop
or
repnz
and
divl
dec
cmp
xlat
dec
jg
movsl
scas
push
add
fwait
shlb
sbb
mov
test
dec
cli
jo
push
add
push
xor
andb
xor
dec
mov
inc
loop
fidivs
mov
mov
dec
imul
lds
adc
lahf
mov
lods
loopne
icebp
push
lock
mov
adc
cli
das
adc
cli
add
shrl
aad
movb
or
cmpsb
adc
retw
std
xchg
and
sti
jle
repz
out
out
lcall
into
mov
sub
sub
mov
pop
imul
cmpsl
xlat
insb
xchg
add
shl
and
pop
stc
fstpt
out
xchg
lahf
into
xchg
lods
cmc
shl
hlt
in
mov
ljmp
cmp
sbb
mov
push
cmp
inc
flds
jo
stos
lcall
push
sbb
es
xchg
push
jbe
cmc
pop
sub
nop
mov
sbb
inc
push
outsb
stc
sub
inc
adc
frstpm(287
and
push
fisttpl
inc
and
lcall
xor
bound
or
lea
adc
frstor
and
cmpsl
push
xchg
outsl
push
pusha
ds
xor
imul
daa
cli
cli
arpl
inc
ljmp
sub
cmp
mov
rolb
xlat
in
adc
into
push
xchg
call
cmc
sub
fstpt
lods
adc
push
frstor
es
insl
adc
xor
std
pop
fbld
mov
xchg
negl
negl
sbb
aas
out
mov
mov
adc
xchg
mov
in
nop
lods
movsb
test
push
sbb
repz
xchg
int3
out
mov
sbb
sbb
fimull
xlat
out
pusha
mov
push
sarl
insl
jle
hlt
ret
push
pop
mov
movsb
cmc
ret
ss
and
test
out
fxch
jle
push
int3
and
daa
cmpsb
aaa
es
out
cmpsl
enter
mov
cmp
jo
popa
test
cld
push
inc
mov
hlt
shll
out
or
inc
out
lock
lock
sahf
mov
cmpsl
shrb
mov
mov
push
hlt
aaa
pop
int
mov
mov
mov
fidivrl
pop
movsb
cmp
lock
inc
test
aam
dec
std
dec
pop
test
out
fsubrp
and
bound
xor
outsb
xor
pop
es
js
mov
xor
mov
push
ljmp
fnsave
pusha
divl
scas
mov
pop
js
nop
sub
dec
mov
enter
imul
stos
jg
das
push
jae
xor
data16
jno
mov
ljmp
ja
and
ja
inc
xchg
push
and
and
mov
push
or
push
jnp
inc
mov
out
xor
dec
das
cmp
data16
lods
idivl
rorb
mov
and
xor
roll
jns
out
je
adc
mov
sub
dec
adc
mov
pushf
icebp
sbb
imulb
xchg
gs
lret
lock
and
orl
sbb
fistpl
test
xchg
sub
cld
adc
stos
inc
xor
test
movsb
mov
shufps
adc
test
sbb
sub
xlat
cmpsl
idiv
adc
pusha
mov
push
mul
test
pop
mov
rcrb
insb
fcomps
das
cld
lods
mov
pop
into
movsl
aaa
xchg
pop
loop
xchg
jo
mov
sub
inc
lds
push
arpl
orl
mov
std
dec
test
xor
movsl
cmp
js
gs
jbe
pop
xchg
aas
imul
pop
sub
jno
es
cwtl
lea
cmp
inc
mov
mov
xor
fstpl
mov
xor
xchg
lahf
and
mov
jae
in
lock
xor
pushl
mov
jbe,pn
pop
push
jnp
push
test
std
xchg
sbb
mov
jns
fcomp
mov
fnstenv
ljmp
aas
sub
cmp
sub
sub
add
mov
int
mov
rcl
movsb
jns
sahf
shrb
testb
sub
jge
ss
add
xlat
mov
mov
ficoml
jge
popa
xor
cli
push
inc
test
xchg
push
mov
push
loop
inc
mov
aaa
stos
push
add
loop
ret
push
sub
or
ficoms
enter
sbb
into
mov
fs
dec
xor
aad
xchg
push
dec
lea
in
ror
add
mov
cmp
ja
into
xchg
mov
sub
push
sbb
nop
sub
mov
sbb
sbb
inc
jbe
sub
jne
sti
mov
lcall
xor
dec
mov
sbb
test
test
sub
ret
arpl
cmpsb
rcll
fstps
pop
add
cmp
inc
dec
push
push
sub
xor
and
add
adc
inc
addb
in
mov
outsl
rclb
and
fnop
int
das
xchg
push
mov
outsb
int
bound
sarb
jae
testb
dec
inc
mov
loopne
sbb
xor
notl
jno
insb
push
int3
ja
mov
popf
outsb
sub
sbb
cmp
push
mov
out
pop
cmp
adc
add
cs
pushf
mov
in
sbb
movsl
pop
pop
push
imul
in
jnp
mov
lret
and
sbb
xor
dec
faddl
dec
adc
xchg
cmc
pop
jb
sbb
lock
hlt
jnp
adc
cli
into
inc
mov
xchg
cwtl
arpl
sub
and
xchg
movl
ret
cmp
ds
push
stos
lret
push
push
cmp
or
push
stc
divl
cli
loopne
fsin
jno
lods
push
push
lcall
sar
lea
inc
xor
xor
scas
jmp
mov
mov
in
dec
addb
test
xor
lret
hlt
adc
and
sub
mov
push
push
mov
dec
stos
mov
and
cmpsb
xchg
push
mov
lods
jne
inc
stc
pop
repnz
adc
push
mov
inc
test
push
jae
xlat
clc
adc
cmp
pop
xchg
leave
popf
mov
enter
sub
xor
push
push
mov
jmp
jecxz
mov
push
ljmp
leave
sbb
adc
dec
ficoml
sub
test
dec
mov
mov
lret
add
sbb
hlt
pusha
mov
xor
icebp
mov
popa
mov
imul
add
jbe
mov
out
mov
bound
test
mov
xor
lret
icebp
inc
dec
movsb
int
mov
call
pop
mov
or
lahf
xchg
adc
lods
rcrb
pop
dec
int3
shll
cmp
scas
fists
lahf
je
and
mov
pushf
xchg
out
sahf
jns
pusha
jbe
nop
mov
bound
aam
adc
xor
ret
stc
andb
lods
andb
je
push
scas
enter
je
jo
inc
test
lock
dec
push
iret
sbb
dec
xor
push
ljmp
aaa
and
cmp
xchg
dec
jb
pop
add
fs
into
enter
mov
or
or
test
das
imul
pop
cs
das
vmovd
ljmp
jge
bound
fwait
pop
sbbl
push
mov
mov
fmuls
mov
and
and
inc
xchg
adc
inc
stos
lock
ljmp
sahf
out
imulb
int
sub
stc
sbb
iret
pop
push
mov
repz
out
inc
jnp
pop
aas
push
test
xchg
imulb
mov
sahf
std
pop
call
sbb
insb
insl
inc
add
dec
das
mov
popf
xchg
and
inc
or
repnz
dec
cmpb
mov
jge
dec
out
dec
leave
and
add
cmp
sti
dec
cmpsb
aam
push
mov
out
push
dec
cmp
fwait
mov
add
aaa
xor
and
cwtl
adc
xchg
mov
je
inc
hlt
loopne
or
lcall
mov
fld
push
daa
rol
sbb
shll
out
lea
movsb
pop
icebp
in
icebp
dec
and
mov
jnp
pop
cmp
rcll
add
or
std
sbb
mov
mov
push
sub
pop
int3
dec
mov
shll
push
in
int3
aas
int3
push
jmp
dec
jmp
stos
pusha
outsb
ljmp
js
call
mov
iret
addr16
lea
repnz
data16
mov
pop
addr16
mov
jnp
cmp
clc
in
pop
cli
lea
mov
xchg
ss
outsl
les
into
repz
mov
inc
mov
dec
dec
stc
and
mov
cmp
jle
adc
jg
cmpsl
into
in
add
xlat
pop
mov
sti
xlat
movsb
push
mov
push
imul
js
xlat
sub
dec
push
add
int
jecxz
in
mov
insb
fucomip
repnz
inc
sub
into
or
imul
in
xchg
xchg
push
inc
sbb
ss
fs
lcall
aas
rorb
femms
jne
ja
and
jg
ljmp
push
push
inc
gs
mov
inc
jmp
lahf
inc
in
lods
lea
loope
inc
fwait
inc
jno
stc
xchg
mov
mov
cli
xchg
out
add
mov
sub
jp
mov
inc
hlt
xchg
pop
icebp
std
push
push
pop
in
xchg
xchg
xchg
loop
and
in
jge
and
sbb
push
fwait
add
leave
cmp
jl
add
repz
jmp
in
js
sub
imul
and
push
mov
cmp
or
psllq
push
in
out
imul
fsts
add
xchg
mov
addr16
mov
pusha
add
pop
or
lcall
movsb
das
mov
and
mov
addb
push
dec
mov
sbb
rorb
xor
stos
jge
mov
jb
xlat
pop
lock
aaa
int3
arpl
and
pushf
push
pop
ds
loopne
imul
jl
sarb
xchg
shrb
gs
lea
and
shrl
stc
cmovp
mov
popa
jo
roll
dec
cmp
cli
jno
mov
sub
add
insl
pop
lahf
pushf
or
out
repnz
xchg
mov
addr16
outsb
test
adc
xor
xchg
in
cs
cmc
push
adc
and
mov
nop
mov
adc
in
jo
inc
push
inc
xor
push
int3
ss
std
int
sbb
and
cwtl
mov
jbe
jbe
in
aam
xor
xor
mov
stos
xorl
mov
test
pop
xor
andb
mov
push
xor
xacquire
test
aad
push
shrb
int
aam
scas
ss
xlat
jns
fldenv
mov
mov
adc
add
insb
pop
cmp
into
xchg
cmp
mov
mov
mov
dec
aam
cld
loop
cmp
stc
clc
sub
xchg
pusha
jle
jmp
loope
add
dec
lret
push
mov
pop
mov
ret
inc
addr16
push
or
ret
xorb
add
fdivrl
enter
scas
push
cmc
mov
pop
or
jbe
inc
out
std
mov
fmull
mov
sarl
xchg
and
xchg
sub
pop
movsb
pop
jae
cmpb
lea
jae
call
mov
and
mov
sbb
mov
mul
xchg
pop
or
jle
das
cwtl
test
xchg
and
cmp
mov
inc
stos
dec
sbb
and
repnz
scas
jno
or
insb
push
sbb
gs
into
arpl
cmp
and
daa
data16
es
pop
inc
fildl
and
scas
outsb
dec
jp
ret
es
and
inc
add
fs
jae
jecxz
cmpsb
push
es
nop
jo
out
push
gs
lret
rorl
xchg
jbe
enter
lret
in
in
in
cwtl
ljmp
lods
fcoms
test
stos
mov
inc
xchg
cmpsl
jo
pop
sahf
in
jnp
pop
inc
pop
pop
in
push
inc
outsl
or
movb
outsb
or
sbb
mov
jb
mull
call
push
adc
jge
or
mov
imul
out
or
jg
mov
sarl
mov
push
lock
jecxz
push
pop
xchg
mov
or
imul
cmp
ret
cld
idivl
rolb
into
jge
notl
dec
or
loopne
adc
push
insb
in
in
cwtl
mov
push
push
dec
mov
lds
add
sbb
pop
add
out
adcl
repnz
mov
jne
jnp
iret
xorl
insb
int
fnsave
lods
mov
enter
in
mov
xor
enter
dec
rcl
aam
pop
ret
aaa
mov
push
adc
dec
jp
push
dec
loope
sahf
push
cwtl
test
ret
adc
pop
add
pmulhw
repnz
ret
adc
sbb
cmp
push
inc
fistps
pop
mov
testl
pop
xchg
ds
push
repz
mov
sbb
xor
out
int
in
iret
pop
repnz
and
xchg
inc
mov
push
clc
out
divb
pusha
ds
shrl
xchg
lds
cmp
dec
test
add
adc
dec
test
dec
pop
insl
dec
popf
jae
pop
push
jle
pop
pushl
leave
and
loop
aas
pop
repnz
shlb
stos
sub
adc
lret
orl
ljmp
out
jnp
cld
dec
hlt
mov
stc
dec
je
ret
je
mov
xchg
subb
lock
jp
cmp
xor
icebp
push
ss
xchg
andl
xchg
and
xchg
adc
fisttps
xchg
in
imul
sub
addr16
mov
hlt
test
jb
iret
mov
outsb
cmp
push
push
jae
dec
dec
cmp
xor
ljmp
or
cwtl
sub
arpl
aad
add
jl
out
rcrb
aas
sbb
leave
jge
adc
test
scas
mov
mov
out
dec
subb
mov
bound
jp
and
rcll
mov
pop
cmp
dec
in
shl
xor
inc
xor
in
mov
pop
adc
and
mov
inc
or
jle
cli
inc
insl
mov
out
jae
xchg
push
xchg
push
cmp
push
es
sti
mov
aam
mov
dec
and
fs
movsb
cwtl
ja
xchg
mov
iret
mov
mov
or
ja
jne
lods
nop
inc
imul
pop
ss
lods
lock
pushf
mov
xchg
and
mov
or
xchg
sbb
lds
xor
sub
test
pop
nop
scas
cmp
and
pop
int
dec
xchg
inc
movsb
ucomisd
not
push
and
lret
mov
fnstenv
pop
inc
stos
dec
pop
or
jns
push
sub
pusha
adc
jecxz
scas
outsl
aam
xchg
mov
push
pop
test
jl
outsb
cmp
xor
xlat
inc
mov
xor
fisubrl
repnz
mov
rsqrtps
mov
inc
pop
into
dec
pop
push
rcrb
jno
test
dec
jge
data16
mov
pop
jne
stos
test
xchg
and
sti
xchg
mov
or
cmpsb
pop
mov
mov
outsl
call
lds
icebp
jnp
mov
out
inc
push
fs
fisubrs
dec
pop
push
mov
ret
or
adc
jecxz
ret
shrb
mov
fcom
popa
int3
fiaddl
dec
cmp
call
pusha
test
inc
xor
sub
lcall
mov
inc
and
push
and
iret
nop
icebp
scas
outsl
jno
sbb
push
lds
jns
push
or
pop
adc
sar
fstps
push
mov
pop
inc
out
stc
out
inc
add
xor
ficoml
clc
mov
testb
mov
rcrl
jle
inc
mov
cli
test
nop
xchg
rdpmc
int3
pop
popa
add
int
cs
pop
das
imul
aam
dec
lret
fwait
mov
insb
call
subb
xor
xlat
or
mov
jae
ficoml
sbb
sbb
out
push
std
sub
jge
mov
bound
mov
pop
fists
fnstsw
push
pop
movsb
pop
push
loope
sub
xchg
repz
mov
mov
mov
lret
xchg
cltd
in
xchg
xchg
inc
adc
data16
mov
add
mov
cmp
cmp
out
addl
and
in
in
pop
jne
loope
outsb
mov
jl
push
ss
sbb
jne,pn
addr16
mov
jae
add
and
mov
jne
push
arpl
orl
add
leave
rclb
stc
addl
inc
and
sbb
push
inc
add
test
loope
and
rorb
push
das
push
outsb
add
jecxz
stos
sub
mov
call
push
xchg
icebp
fdivp
ss
mov
lret
fst
cmp
pminsw
xor
ss
xor
inc
lods
mov
inc
cmpsb
pop
repz
fwait
push
rcl
or
adc
push
cmp
in
js
xorl
subl
xchg
push
pop
pusha
stos
pop
loop
call
dec
jns
inc
pop
push
flds
cmp
adc
jo
fcomps
xchg
icebp
xchg
mov
or
and
popa
dec
fdivl
sahf
sub
out
test
subl
cmp
shrl
and
jl
mov
insb
lods
pop
push
dec
push
jle
jmp
sahf
sub
fmull
loope
lret
add
add
test
add
outsb
adc
gs
sbb
inc
aas
fs
sub
xchg
test
and
sahf
ds
xchg
pop
jl
push
es
daa
rcll
push
call
xorb
shll
mov
out
cmpsb
sar
or
dec
imul
cmp
jmp
add
push
jne
push
xchg
and
leave
add
cltd
cmovge
jmp
rorl
ss
lcall
add
jnp
pusha
mov
xchg
jmp
cmp
jno
adc
addr16
adc
sbb
sbb
lods
push
and
ja
jns
jp
ja
adc
or
jbe
shrb
push
out
xor
jno
inc
push
orl
mov
push
stc
push
add
sarb
cmp
pushf
adc
cmpsb
fistpll
cmc
outsl
shll
cmpsb
add
sub
mov
mov
pop
sub
std
sub
ret
jnp
jae
popf
push
enter
icebp
pop
das
sbb
jne
stos
and
lods
arpl
pushf
ret
subl
cmp
repz
xor
dec
dec
jo
xor
mov
inc
xchg
jae
pop
popa
enter
clc
jg
fimull
push
pop
mov
jp
jp
mov
sti
adc
dec
loop
bound
test
mov
mov
xchg
mov
out
adc
add
mov
cwtl
push
jp
push
add
pop
adc
insb
sti
out
pop
in
push
loopne
mov
mov
not
stos
add
cmpl
loop
or
hlt
sbb
fcompl
jmp
adc
mov
gs
mov
clc
mov
lods
sub
shr
fcom
ret
inc
xchg
cld
or
xchg
xchg
dec
sub
shrb
adcb
movsb
jns
stos
sbb
jno
jne
leave
pop
aam
in
scas
adc
loope
sbb
bound
sub
push
push
sbb
jecxz
xor
sbb
imul
mov
xor
setle
mov
hlt
fiadds
xor
or
inc
cmpsl
adc
jecxz
adcb
out
addr16
decl
sub
dec
push
lcall
loop
cwtl
aas
add
pusha
bound
lcall
xchg
and
xchg
push
mov
hlt
cs
mov
data16
cli
stos
mov
aas
addr16
addr16
popa
adc
out
std
push
test
das
adc
cmp
imul
lock
imul
push
mov
add
jp
icebp
mov
bound
mov
jne
cmp
lds
imul
and
in
xor
or
leave
pop
jne
fwait
jo
out
in
dec
dec
mov
insb
push
add
xchg
out
cmp
xchg
push
inc
mov
decl
clc
mov
dec
xchg
fs
repnz
add
pop
loop
jbe
mov
es
cs
mov
push
data16
into
rorl
hlt
xor
aam
sub
cs
jo
gs
std
popa
insb
lock
fwait
out
repnz
cmp
fiaddl
pop
subb
mov
mov
in
sub
aaa
es
mov
cwtl
shrb
je
cmpsl
inc
sub
mov
das
out
jnp
jecxz
scas
sub
add
leave
in
filds
lret
jle
jecxz
testl
roll
sub
dec
push
fmull
mov
adc
mov
xchg
xchg
cmp
cmc
dec
icebp
inc
inc
sbb
push
push
aaa
shrl
or
sbb
adc
jge
add
mov
icebp
movsb
test
cli
in
imul
inc
fdivr
fmull
jmp
jge
leave
rorl
add
test
adcl
xchg
ror
cmp
fistps
jecxz
and
imulb
or
pop
int3
data16
mov
jno
testb
mov
and
adc
pop
aam
notb
mov
xchg
ret
xor
cmp
cmp
ret
or
mov
pushf
int3
push
mov
add
jo
pop
aad
cwtl
sub
orl
lock
lret
jb
mov
dec
cmp
lock
xchg
push
pop
in
inc
fcomip
fnsave
mov
inc
dec
ljmp
mov
rolb
sbb
lea
mov
cmp
xchg
ret
mov
xchg
sbbl
cmp
jg
aad
or
loopne
aaa
test
fadd
ss
mov
jbe
jg
mov
sbbb
in
leave
mov
xlat
jecxz
inc
cmp
xor
flds
ljmp
cli
jb
xor
sbb
jecxz
daa
inc
mov
mov
es
or
lret
aas
insb
xchg
ja
icebp
lea
stc
sti
test
cmpsb
mov
cmpsl
orb
arpl
jg
and
and
hlt
xchg
orl
test
jmp
mov
cmc
push
inc
shrb
mov
rcrb
lahf
seto
jbe
xchg
mulb
and
mov
sub
sub
adc
or
es
xlat
mov
inc
fcmovb
lds
push
adc
xor
pop
mov
and
jmp
fwait
mov
test
or
lods
int
xchg
jecxz
mov
jge
cld
aaa
ficoml
mov
sub
cmp
or
pop
push
mov
jae
mov
fstpl
jno
pop
ret
sub
add
push
movsb
xchg
pop
gs
movb
mov
imul
rorl
mov
ja
jb
bound
mov
pushf
mov
pop
pop
xorl
sar
xchg
call
loope
inc
shrl
xchg
shrb
imul
sbb
aad
lock
fnstenv
pop
add
adc
sbb
loop
dec
pop
fmuls
jmp
ret
ret
mov
imul
mov
sub
dec
cmp
jae
xor
nop
imul
mov
loop
repnz
mov
mov
ret
fwait
pop
imul
lahf
into
lret
add
mov
pop
sbb
mov
push
call
pop
lahf
pop
outsb
cmc
push
out
adc
and
out
pop
inc
pop
push
inc
mov
or
andb
add
sub
or
idivb
jbe
xlat
jle
in
sahf
dec
out
adc
pop
outsb
cmpsb
ja
gs
add
or
mov
or
push
jecxz
or
pushf
imulb
aas
aas
xchg
ss
dec
xlat
shlb
adc
shll
push
pop
out
stos
lods
xchg
sti
cmc
out
xchg
jno
sub
sbb
rorl
push
xchg
hlt
rorb
fstpt
sbb
push
sub
xchg
movsb
xchg
mov
push
mov
cmp
aad
and
xor
loopne
cwtl
hlt
sub
cmpsl
sbb
fisubrs
aad
loope
dec
ficomps
inc
or
inc
cmp
mov
xor
sbb
mov
xor
es
lret
mov
rolb
mov
push
test
inc
cmc
mov
push
pop
sub
add
arpl
ss
xchg
jecxz
imulb
clc
cs
dec
pop
ja
test
les
push
dec
adc
pop
mov
push
aas
push
push
sub
fiaddl
cs
mull
cld
xor
in
fcoms
mov
pop
pop
xchg
loopne
inc
mov
sti
in
fiadds
sbb
shlb
adc
bswap
mov
jae
push
movhps
mov
dec
mov
mov
mov
out
mov
ljmp
xchg
std
ss
insl
jg
jl
insb
pop
push
push
mov
lods
popa
js
lods
test
add
dec
xorl
cmp
roll
int
mov
mov
and
fiaddl
outsb
mov
mov
xchg
stos
out
push
dec
lret
pop
inc
cmpsb
pushf
xchg
subl
mov
mov
adc
and
add
fdiv
and
in
dec
dec
jge
xchg
or
jge
clc
sub
xor
inc
in
inc
pop
adc
cld
add
cwtl
stc
add
lret
scas
add
fildl
fwait
test
inc
mov
daa
xorl
out
mov
pushf
dec
ss
jae
xchg
xlat
or
push
fsubrs
xchg
push
push
mov
xchg
fmul
or
mov
std
sub
xor
andb
pop
mov
xor
cwtl
shr
or
and
sarl
rorb
push
cmc
sbb
arpl
in
dec
cmp
and
lea
js
mov
adc
imul
repz
clc
enter
and
or
aaa
push
xchg
imul
imul
dec
mov
cmp
inc
aas
sbbb
or
mov
pop
lock
ja
insl
mov
roll
xchg
je
pop
or
adc
add
cmp
cmc
mov
cmp
pop
inc
adc
js
movsb
cmp
arpl
sbb
push
mov
dec
insl
mov
inc
xor
imul
xchg
inc
out
lea
mov
out
fdivrl
adc
mov
in
inc
stc
daa
mov
fisttps
jae
xchg
inc
out
dec
sub
fucomi
jle
mov
push
lea
aas
cmpsb
js
faddl
imul
mov
and
movsb
in
push
add
ret
sub
insl
cmp
insl
mov
cmpsl
iret
out
fdivl
ret
add
push
sti
fwait
lock
sahf
lret
jne
out
pop
or
jecxz
dec
inc
movsb
dec
fcmovne
xor
stc
adc
outsb
mov
imul
dec
stos
cltd
in
xchg
stos
xchg
mov
push
mov
cmp
std
imull
pop
jge
lret
and
pop
cmpsb
push
xlat
inc
mov
add
ret
mov
nop
fdivrl
fcomp
sbb
jnp
cwtl
setg
push
cmc
jns
xchg
or
inc
mov
cmp
pusha
push
sbb
paddsw
fisubl
sarl
sbb
fldcw
sarb
pop
or
add
inc
pop
repz
lahf
dec
xchg
scas
xchg
pop
pop
mov
push
cmc
fisubs
push
cmp
inc
and
test
daa
jae
fidivs
bound
add
shll
gs
mov
or
jg
cmp
pop
ljmp
mov
add
mov
add
mov
loopne
or
cmc
cmp
mov
lods
insb
arpl
test
out
stos
sti
gs
mov
subl
imul
pop
lahf
stos
xchg
add
add
cmp
adc
xchg
test
jp
cmpsl
sub
push
jns
ljmp
jae
mov
jge
adc
adcl
pop
out
lahf
lods
out
mov
int3
loop
aam
fwait
movl
dec
sbb
fcmovbe
addl
xchg
subb
mov
xchg
lahf
pushl
pop
out
movl
shr
imul
xlat
ja
sbb
fnclex
pop
adc
adc
dec
inc
roll
rcrb
mov
outsb
xchg
sbb
aas
push
push
xchg
inc
push
and
in
pop
js
xor
scas
rclb
out
dec
push
pop
movsl
sbb
cmp
jo
ret
dec
shrb
jnp
dec
mov
ds
clc
pop
pop
insl
testb
inc
pushf
pushf
stos
sti
add
test
dec
pop
inc
add
or
and
inc
dec
jl
push
test
cwtl
bound
aaa
out
sbb
xor
dec
sbb
fstpt
mov
nop
mov
test
divb
nop
movsl
lret
push
bound
arpl
int
das
xchg
in
sbb
imul
testl
cmp
adc
xlat
outsl
shll
jp
xor
fwait
in
pop
mov
mov
mov
popf
loopne
mov
mov
adc
icebp
push
js
dec
dec
loopne
out
loopne
popa
rcrl
ret
fcoml
inc
and
fidivs
xor
xchg
mov
xchg
je
repnz
fs
not
push
daa
cmp
je
mov
in
adc
aam
and
jno
sub
xor
fists
jb
sbb
mov
dec
ljmp
and
xor
stc
push
mov
sub
inc
pop
mov
dec
arpl
fldt
jne
mov
imul
mov
out
int
adc
ljmp
jge
shl
outsl
pusha
int
daa
scas
jbe
cld
es
movsb
repz
adc
js
popf
adc
daa
lahf
mov
add
data16
mov
outsl
inc
sub
orl
repnz
xchg
outsl
inc
sbb
jae
dec
adcl
lods
mov
ss
fwait
fs
or
mov
xor
pusha
lret
enter
ss
jns
fildl
aas
pushf
mov
xor
std
xchg
pop
push
xchg
cmp
shll
test
repz
in
jns
jbe
into
leave
les
into
in
aas
cmp
lea
push
jb
xchg
or
push
dec
xor
cli
pop
rcrl
sbbb
hlt
push
jbe
mov
pop
mov
mov
sahf
jmp
pop
mov
je
icebp
dec
dec
add
mov
xor
mov
insb
xor
ret
fnstenv
inc
sub
pop
int3
fwait
clc
aas
jae
insl
test
sub
dec
into
fdivl
or
fiadds
dec
or
fwait
stos
mul
aad
push
xchg
sbb
add
jmp
stos
jl
imul
or
mov
rol
mov
pop
xchg
int3
pop
inc
out
mov
sub
cmp
lret
xor
test
inc
mov
sbb
xchg
xor
dec
fstps
add
pop
cltd
mov
sbb
inc
scas
mov
mov
dec
out
adc
jecxz
aas
sti
mov
loope
sbbb
in
es
xchg
pop
xchg
loope
cmp
gs
cltd
push
bound
arpl
jmp
or
nop
out
cmpsl
jbe
mov
and
cmp
adc
inc
aad
js
push
out
add
sub
cmp
adc
or
test
mov
or
jle
fistl
stos
and
xchg
add
mov
rclb
sbb
popa
fbld
sbb
or
mov
jae
xchg
js
xor
adc
ficoml
sti
incl
add
dec
and
mov
mov
cmpsb
iret
pop
mov
pop
pop
leave
pop
or
mov
cs
scas
push
xchg
sbb
fdivrs
fldl
sub
clc
clc
fmuls
movsl
jno
in
fcomps
or
dec
pop
adc
jae
int
fimuls
loope
idiv
xor
jl
pop
and
roll
cmp
or
jno
jge
or
inc
jns
adc
fcomps
adc
inc
mov
jo
mov
ret
mov
inc
fcomps
cmc
iret
jae
in
movsl
into
inc
push
mov
xchg
mov
movsl
call
mov
fsubs
sub
ret
mov
xchg
jmp
pusha
push
xchg
call
mov
push
dec
xchg
in
and
mov
xor
ja
loopne
inc
xor
in
in
jnp
mov
lret
jbe
xor
mov
push
mov
into
das
mov
inc
pop
or
dec
push
jmp
hlt
inc
inc
cld
ss
push
cmp
stc
push
in
push
xor
and
and
dec
cwtl
stos
fcompl
in
leave
roll
cmp
inc
mov
mov
movsb
idivl
lret
int3
push
push
mov
lea
in
sub
mov
push
mov
jl
pusha
cmpsb
fdivs
xchg
and
outsb
mov
call
dec
imul
xor
shll
push
sarb
repnz
inc
mov
mov
mov
lcall
lods
ljmp
jno
xchg
int3
mov
addb
clc
and
xchg
jp
lret
je
inc
sbb
imul
ret
shlb
jp
js
push
jae
movb
and
adc
imul
shll
push
aam
inc
cmp
sub
sbb
pop
loope
int
in
ret
inc
aad
cmp
into
stos
jbe
jmp
jg
inc
cs
rorl
mov
xor
icebp
mov
test
and
repnz
adc
notl
and
xor
mov
ss
pop
xor
jmp
js
cmp
mov
ret
fistps
bound
xor
mov
xor
xchg
cmc
dec
push
leave
and
test
sub
movsl
cli
adc
call
cli
imul
or
and
adc
shll
loope
icebp
jo
iret
mov
out
and
sbb
scas
inc
jmp
add
or
lods
pop
negb
fiaddl
dec
push
inc
mov
idivl
insl
jno
xor
push
dec
pop
loope
xor
repz
outsb
mov
adc
fiaddl
jno
pop
push
mov
lds
movsb
xor
addr16
sahf
xchg
or
pop
pop
int
scas
pop
sub
test
cltd
dec
xor
pop
shlb
or
imul
ret
out
loop
sysret
jge
cmpsb
sbb
mov
push
jns
into
scas
xchg
out
and
sub
in
shr
mov
pop
repz
mov
jo
loop
adcl
das
add
data16
push
popa
xchg
std
neg
xchg
pop
xor
pusha
test
cmp
sub
test
lcall
movl
inc
adc
pop
and
in
das
faddl
cmp
sbb
mov
insl
cmp
in
lds
cmpsb
pushf
cltd
stc
cwtl
mov
fcmovu
add
xchg
test
xor
sub
mov
mov
cmp
add
icebp
pop
push
cwtl
out
add
pop
push
mov
clc
mov
fmull
and
out
out
xchg
pop
mov
pop
jl
sahf
pop
inc
pop
adc
test
mov
xor
pop
daa
addl
mov
xor
inc
out
push
cmp
fwait
jbe
fcomps
inc
repz
enter
lahf
int3
ret
loop
mov
push
imulb
xchg
push
outsb
es
or
xchg
outsl
out
jle
mov
or
cmp
xor
lock
and
pop
inc
repz
enter
pop
fwait
inc
pop
add
insb
and
and
ret
int
mov
fcomip
fcomi
pop
lods
mov
stos
adc
cmovae
sub
mov
hlt
xor
cmpl
xchg
mov
outsb
in
pop
jl
add
in
add
negl
lods
push
ja
shrb
mov
out
lahf
xor
aam
pop
fmull
mov
mov
sbb
mov
adc
cmp
cli
jg
aad
lds
cli
adc
jmp
cmp
gs
add
pop
repnz
cwtl
out
ss
je
xchg
das
adc
cmp
bound
xlat
jmp
inc
pop
int
test
test
loopne
cmp
xor
aam
cmpsl
jecxz
loope
out
lcall
dec
adc
fs
jns
imul
test
push
in
jl
jle
push
mov
sub
mov
clc
clc
pop
and
mov
mov
push
lds
jp
int3
movlhps
loope
shll
jns
test
psraw
mov
stos
mov
pop
out
mov
sar
lea
adc
xor
xchg
cmp
sub
xor
dec
test
dec
mov
shl
jo
jecxz
jp
cmp
jmp
lret
and
add
fcmovb
fcomi
inc
sbb
loopne
cmp
jae
fimull
sub
int3
mov
fdivrs
mov
pop
xor
push
sub
adc
jb
enter
jge
mov
and
out
mov
sahf
add
aam
jg
mov
or
pop
cwtl
and
mov
adc
or
in
push
movsl
pop
fnstcw
xchg
or
out
loopne
jbe
adc
pop
cmp
imul
add
xor
repz
xchg
loop
dec
imul
jno
fldl2e
testl
les
loope
sub
xchg
dec
adc
xchg
jne
adc
ljmp
adc
into
jmp
and
ret
xchg
popf
add
mov
xchg
insb
pop
jbe
jecxz
cmp
cmc
mov
jle
sub
mov
imul
push
lock
sub
push
stc
lds
and
mov
jge
inc
inc
aad
mov
scas
adc
cs
mov
mov
push
dec
lods
jb
cmp
jmp
sub
mov
cmp
ljmp
and
data16
sti
mov
mov
daa
xlat
enter
pop
outsb
stos
rclb
insl
into
adc
pop
fstps
inc
scas
lahf
ret
xchg
icebp
jb
cwtl
lahf
scas
xchg
or
pop
cmp
shl
or
mov
mov
lretw
cwtl
fnsave
movsl
mov
pop
cmp
dec
sub
pushl
push
mov
clc
cltd
jle
xchg
mov
jl
mov
inc
push
pop
mov
jmp
jecxz
ds
andb
fwait
cmp
xor
dec
adc
inc
call
jno
loop
shlb
adc
jbe
nop
sub
hlt
mov
xlat
inc
cmp
jo
mov
inc
ljmp
cmp
or
jns
dec
cltd
faddp
xor
test
loopne
fsts
sbb
mov
fcoml
dec
cmp
push
push
and
bound
insb
mov
jmp
cmc
fiaddl
leave
repz
sbb
xchg
arpl
mov
mov
ret
cmp
clc
push
pop
repnz
sahf
mov
add
enter
or
jae
rclb
aad
mov
ret
mov
jl
dec
pop
pusha
mov
pusha
scas
adc
call
pop
jnp
jecxz
push
push
mov
icebp
xchg
jne
fs
xorb
jne
mov
push
loop
cld
std
and
jns
push
jle
push
inc
rcrl
mov
je
xchg
adc
inc
mov
add
repnz
test
lds
xor
sbb
shr
rolb
and
mov
cmp
pop
cltd
in
popf
loopne
imul
outsb
loopne
mov
ficompl
sub
cmp
cmc
mov
lods
cmp
je
or
mov
out
pop
mov
std
xchg
hlt
arpl
iret
adc
add
lret
mov
dec
js
mov
add
jno
imul
lods
sbb
mov
popf
popa
jnp
mov
inc
das
lock
repnz
pop
movsl
jge
and
pusha
stc
dec
in
decb
jle
inc
pop
lea
dec
jecxz
xchg
pop
pop
and
ljmp
push
fwait
icebp
cmp
jg
mov
cmc
pop
cmp
int3
push
loope
inc
add
adc
cmp
xchg
sub
shlb
dec
ret
xor
inc
gs
dec
mov
jbe
in
push
icebp
add
sbb
xchg
cmp
test
mov
push
xchg
fnstcw
hlt
outsb
mull
mov
loopne
mov
cli
and
sarb
test
xor
mov
icebp
aas
add
sbb
loopne
jno
add
pop
insl
cmp
adc
push
xchg
dec
jecxz
sub
dec
pop
cmp
push
cmp
and
mov
insl
adc
xchg
dec
sub
aas
call
stos
aad
int
push
jle
jle
test
or
fisubrs
lret
mov
lcall
xchg
iret
std
jb
and
popf
cli
fs
sub
mov
and
fidivrl
shll
arpl
dec
push
sahf
push
daa
inc
cltd
cmc
mov
in
loope
or
int3
aam
negb
jo
out
adcl
fisubrs
scas
mov
cmpl
sahf
pop
flds
push
cli
and
rcrb
adc
es
pop
repz
jnp
mov
cltd
sbb
jecxz
shll
inc
push
cld
lock
add
ljmp
lcall
popa
push
fnstcw
add
jnp
pop
shr
lods
lods
sub
js
or
scas
inc
jae
pop
ficoml
xor
daa
fs
stos
test
sti
cmp
repz
mov
lahf
lds
shrb
and
mov
pop
inc
insl
sbb
imul
in
arpl
loop
mov
test
divl
fidivrs
mov
leave
pop
fistps
xchg
iret
fistpl
loopne
pop
jnp
mov
xchg
and
outsb
subl
dec
enter
mov
add
push
cmp
jne
fldt
mov
push
xor
fiadds
mov
popa
outsb
or
dec
addr16
xlat
stc
cmpl
jo
sahf
sbb
pop
adc
fs
insl
push
fs
je
daa
es
hlt
daa
in
xchg
mov
cli
add
add
cmp
in
mov
das
fimuls
out
loopne
js
ljmp
xchg
pop
sub
notl
setl
sahf
cmp
daa
pop
fdivr
arpl
popa
sbb
dec
sbb
pop
or
push
push
ss
sbb
mov
and
sbb
es
xchg
pushf
cmp
sub
rolb
mov
into
gs
pop
test
fldt
std
and
sbb
dec
push
es
jle
nop
xchg
popf
sbb
stos
test
inc
sub
es
cmp
jge
cwtl
inc
inc
mov
mov
jno
mov
sub
and
jns
jl
popf
dec
dec
adc
jle
sbb
cmp
xlat
mov
sbbl
pop
adc
add
enter
loop
daa
sahf
jo
jmp
cmpsl
dec
int
int3
xchg
mov
fidivs
cld
pop
and
mov
mov
xor
dec
dec
jns
jo
cltd
pop
dec
cmp
pop
cwtl
jg
loope
sbb
jmp
inc
jecxz
sub
pop
dec
sahf
stos
mov
push
xlat
jmp
aaa
les
cmp
mov
dec
imul
jg
inc
fiadds
inc
sub
ja
stos
pop
out
sub
xchg
jne
jp
dec
jl
pop
jg
std
lods
fsts
add
rcr
push
push
push
icebp
lahf
sub
out
repz
mov
jg
inc
inc
mov
hlt
jne
sbb
inc
rep
mov
pop
je
cwtl
push
jbe
jle
cmpsl
push
adcb
ja
pop
leavew
dec
fwait
mov
ds
xor
ljmp
push
loope
dec
xor
jg
sbb
cmp
or
sub
inc
or
pop
or
je
leave
cs
sarl
lds
mov
ljmp
iret
xchg
insb
ja
jae
or
imul
pop
out
enter
pop
sbb
add
cs
lods
pop
jecxz
xchg
pop
je
scas
jmp
jle
orl
inc
imul
pop
pop
pushl
fnstcw
mov
test
int
bound
leave
sub
or
push
test
les
pop
jmp
cli
push
arpl
xor
lahf
js
add
inc
inc
xor
lret
mov
repnz
jmp
iret
pop
dec
and
imul
scas
fldl
lods
stos
adc
lahf
lock
in
and
sbb
loopne
xor
xor
outsb
scas
cmp
mov
in
dec
dec
and
frstpm(287
lahf
cmp
iret
in
lds
push
sub
sbb
xchg
inc
adc
scas
ret
stos
push
test
and
jge
outsb
mov
jecxz
fildll
jnp
adc
pop
jecxz
cli
imul
loop
xchg
xchg
addr16
mov
test
sub
lret
jl
push
movsb
aam
sub
adc
cld
jecxz
adc
popf
out
xor
adc
jmp
pop
mov
pop
loop
cli
pop
pop
add
sub
cltd
dec
or
adc
sbb
mov
jmp
add
movsl
mov
pop
add
inc
pop
popa
pushw
dec
cli
inc
sub
push
flds
mov
les
sbb
loope
mov
in
xchg
inc
in
add
xchg
xlat
int3
into
push
pusha
jl
xorl
sub
aas
cmp
sbb
dec
adc
andl
pop
rorb
xlat
jge
das
or
push
repz
mov
lock
fidivl
pop
dec
lahf
ret
pop
arpl
shr
adc
and
das
mov
inc
mov
or
out
mov
imull
decl
pop
aas
fwait
mov
popa
out
rorl
pop
push
xchg
inc
mov
xor
and
movsb
pop
ljmp
sbb
mov
mov
push
adc
adc
insl
mov
mov
mov
imul
shll
pushf
dec
pmullw
fs
cld
movsb
int
call
imul
mov
sub
repz
out
dec
cmp
push
xor
cmp
jns
jl
sub
pushf
insb
push
hlt
inc
mov
mov
push
dec
inc
lock
idivb
and
pop
adc
test
aas
xorb
repnz
jmp
xor
fidivrl
fcmove
rcr
cli
flds
lret
dec
jne
mov
and
enter
lock
xchg
mov
notb
jbe
xchg
out
or
push
mov
jns
test
or
cwtl
and
xor
push
in
outsb
xchg
in
inc
test
ret
lock
mov
xchg
nop
inc
dec
dec
mov
scas
je
cs
in
and
jne
pop
iret
push
mov
dec
sbb
adc
nop
inc
adc
xor
repz
jl
pop
int3
insb
cmp
xchg
test
cmp
movsl
stos
es
fcomps
dec
subl
push
js
pop
movsb
cmpsl
ret
cmp
dec
shll
pop
push
shrb
aas
cmp
lret
dec
xchg
dec
shll
js
subl
jae
adcb
push
bnd
dec
or
xor
xor
dec
fxch
mov
xchg
sbb
xorl
pushw
add
or
in
scas
je
fldcw
add
int3
cmpsl
jp
mov
arpl
ss
xchg
cltd
andb
roll
std
stc
xchg
jmp
sbb
cmc
jle
outsb
and
out
push
scas
add
test
push
rclb
pop
sub
jns
int3
jbe
leave
cld
loopne
lods
jbe
es
jmp
pop
pop
popa
push
cmp
mov
dec
xor
bsr
mov
inc
movsl
xor
cmp
subl
ficoml
inc
dec
cmpsl
jmp
imul
jmp
pop
sub
and
jo
xchg
jle
test
inc
xor
jp
inc
idivl
inc
and
xor
repz
out
jl
or
xchg
jle
lret
hlt
enter
lods
ret
lock
jg
icebp
inc
cmpsl
inc
sbb
push
cmp
clc
aam
and
fwait
in
out
mov
aad
movl
pop
xor
and
sbbb
add
and
loope
notl
mov
popa
add
in
mov
shll
clc
push
mov
fists
mov
inc
sbb
pop
fwait
rcrl
lret
cmp
mov
cmp
sahf
leave
or
mov
adc
enter
insb
lret
es
and
sub
jge
div
mov
in
scas
cmp
fcomp
xchg
pop
rolb
aam
es
push
mov
das
out
stc
test
ret
xchg
mov
dec
add
push
sub
rcll
xchg
adc
dec
mov
xchg
imul
leave
mov
or
in
add
and
sub
sub
dec
xor
push
cwtl
outsb
js
nop
cltd
sahf
pop
mov
lret
and
xor
xchg
gs
dec
rcrb
push
pop
mov
add
sahf
xchg
jnp
dec
js
cmpsl
cmp
ret
push
pop
xchg
fdivr
sbb
je
fistpl
and
xchg
push
inc
gs
nop
adc
ret
pusha
mulb
gs
fwait
mov
loopne
cwtl
xor
psubusw
push
xor
ret
xchg
or
int
cmp
test
or
test
neg
pop
test
leave
mov
loop
add
and
shrl
hlt
or
dec
mov
mov
loopne
loope
inc
pop
and
popf
push
fs
gs
aaa
out
cwtl
fdiv
adc
sarl
xchg
ds
cmp
das
adc
lcall
fs
icebp
inc
xchg
mov
cwtl
test
aas
xlat
cli
mov
int
and
xor
jne
xchg
test
gs
sahf
pusha
xchg
push
fsts
sar
clc
lret
dec
or
cli
jnp
stc
mov
test
orb
lcall
push
stos
jae
mov
imul
popa
pop
push
cmc
and
test
lea
subl
cmpsb
lods
lret
jbe
insb
lods
pop
lods
les
repz
mov
aad
dec
mov
mov
or
sub
mov
stos
mov
adc
das
or
gs
movsb
mov
jno
jle
addl
test
je
in
mov
lahf
pushf
sub
fs
and
sbb
sbbl
and
out
popa
pop
add
leave
jg
pop
adc
cwtl
pop
js
pop
cltd
pop
js
insb
div
xchg
cmp
xor
cltd
int
mov
ja
lret
punpckldq
int
adc
sbb
popf
push
rcll
in
cli
sub
cmp
dec
sbb
cmpsl
mov
add
je
stc
imul
ja
les
sub
sub
jecxz
push
dec
xchg
loopne
insb
push
cmpsl
fwait
es
sahf
movsb
and
sub
xchg
push
xchg
pop
sbb
mov
pop
gs
lods
pushf
repnz
in
add
jmp
lcall
je
outsb
adc
pop
adc
xor
jo
push
pop
inc
das
push
lods
dec
push
pop
xchg
push
xchg
jmp
pop
push
xlat
inc
pop
xchg
test
mov
push
cld
and
ljmp
inc
idivb
in
push
hlt
push
xchg
lds
ds
pop
call
ret
les
dec
mov
ds
lods
flds
das
or
cld
pop
inc
cmc
outsl
jbe
sub
fstpl
push
mov
pop
add
gs
push
jo
ds
sub
mov
add
push
or
xor
jl
mov
mov
dec
mov
shl
rclb
sub
out
lret
mov
es
cli
out
gs
jae
xlat
adc
test
cmp
shl
cltd
adc
mov
push
add
sub
dec
mov
xor
aad
arpl
aas
shlb
mov
and
lods
cli
sbb
jg
inc
mov
nop
repnz
mov
push
loopne
and
sub
mov
jns
aaa
jbe
aas
cmp
into
fsubl
xorl
jmp
push
popa
cld
or
lock
mov
lods
push
subb
jge
fs
jmp
jge
cmp
scas
mov
mov
jmp
imul
loopne
jle
outsb
aam
sbb
test
mov
lods
iret
xchg
out
repz
lret
data16
push
js
daa
push
mov
xchg
movsb
lret
fldcw
fnsave
mulb
or
inc
mov
test
outsb
in
daa
inc
add
dec
sbbl
faddp
lret
out
mov
cmp
mov
lock
mov
jge
pop
mov
push
loop
sahf
jmp
cmpsl
jecxz
iret
insb
pop
cmp
cld
jle
das
shrl
add
or
shr
lds
sub
fwait
mov
hlt
sub
mov
shlb
push
push
fstpl
test
mov
ja
imul
les
pop
into
xor
movsb
orl
dec
adcb
stos
mov
popf
in
insb
inc
pusha
push
mull
cltd
push
test
cmp
sbb
push
push
lods
cmc
fsubs
aad
shll
imul
or
and
jl
fwait
scas
lock
pop
inc
hlt
fsubrs
aas
mov
xor
inc
pop
clc
test
icebp
push
ja
dec
push
jg
xchg
jmp
xchg
rolb
rorl
sahf
sbb
mov
push
dec
mov
ret
jne
mov
popf
or
pop
jo
call
in
push
inc
in
or
bound
adc
pop
or
xchg
adc
enter
cwtl
or
loop
out
push
cmp
jl
push
mov
shll
xchg
cltd
je
mov
and
mov
dec
cli
int
sub
fldcw
dec
sub
push
cmpsb
gs
jge
and
pop
xchg
clc
stos
cmp
xchg
mov
aas
std
js
dec
xchg
mov
stos
and
int
cld
pop
popa
int3
push
push
sarl
rol
xchg
and
sbb
xchg
je
xchg
in
pop
fst
push
sbbb
push
arpl
dec
xlat
inc
mov
fistpll
lds
iret
mov
mov
jno
scas
jg
push
xchg
out
rcll
in
std
jge
pop
jl
out
fldl
or
and
gs
cld
adc
xchg
icebp
push
cmp
and
sar
fucomp
mov
mov
imul
push
sub
push
rolb
jmp
inc
xchg
scas
mov
inc
xor
vmread
in
dec
and
fisttps
subl
cmp
and
jno
lock
xor
and
movsl
mov
jno
gs
loop
int3
cmp
dec
dec
into
adc
rcrb
in
push
mov
or
into
add
lods
jmp
jle
movsb
fdivs
js
xchg
push
cmp
jle
sbb
jge
mov
idiv
xor
es
adcl
inc
push
mov
add
pop
xchg
test
enter
mov
dec
xor
imul
test
shl
push
gs
jmp
jg
fnstsw
mov
jl
fdivrl
add
sub
push
cld
int
push
rcll
xchg
dec
ret
inc
sbbl
sub
test
or
lods
ret
pop
jecxz
lcall
xor
imul
inc
and
mov
mov
popf
inc
cmc
mov
pop
je
roll
les
pop
cmc
xor
cltd
stc
mov
mov
out
or
cmpsb
push
cmp
out
sub
fadds
fwait
and
popa
and
push
cld
push
jb
mov
movsb
sbbb
cld
sbb
pop
into
sub
fs
pop
mov
add
movsl
mov
xor
out
test
xchg
jp
icebp
xchg
repz
xorb
dec
pop
sub
xlat
sbb
mov
lea
jle
pop
mov
sbbl
add
mov
lcall
out
fnstcw
bound
pop
push
test
cmpsb
es
add
fistpll
repz
xlat
mov
test
aad
sbb
or
mov
sti
or
jge
pop
add
stc
pushf
sbb
push
pushf
daa
je
orl
idivl
jns
insb
push
inc
xchg
aam
lock
fsubrp
inc
ret
ficoms
shlb
add
fstps
pusha
mov
ret
jnp
xchg
or
or
or
xchg
repz
int
stos
pushf
aas
lea
and
addr16
xchg
and
ficoml
xchg
adc
add
add
shrl
and
divb
or
das
mov
push
inc
jno
das
xor
or
and
in
adc
mov
jcxz
aas
loope
mov
mov
into
inc
mov
jle
call
xchg
push
fwait
mov
scas
mov
and
cmpb
and
mov
imul
mov
or
or
pop
push
dec
es
dec
aad
rorb
clc
and
mov
orb
gs
jp
or
inc
fs
or
call
dec
mov
dec
lcall
cmp
arpl
stc
xchg
fwait
in
insl
jae
mov
sub
sbb
or
mov
insb
fldcw
xchg
dec
and
mov
jo
mov
pop
mov
int3
pop
icebp
lahf
push
decl
mov
fimuls
inc
outsb
inc
idivb
ja
adc
sbb
xchg
aas
sbbb
xor
int
fwait
std
dec
pop
lret
xchg
xchg
push
punpckhdq
dec
push
jle
jp
cmpsb
fistl
pusha
mov
mov
or
aam
mov
cmpsl
outsl
cs
neg
test
out
jo
sbb
add
lods
mov
out
jp
cmpsl
dec
and
push
jae
add
xchg
dec
sar
and
js
in
xor
daa
or
shrl
or
mov
or
push
cmpsl
dec
and
in
mov
fs
nop
mulb
adc
test
jl
mov
aad
aas
int
jns
inc
xchg
add
addr16
aas
or
push
cmpsl
sti
mov
jg
roll
arpl
ret
push
jb
dec
jg
roll
or
or
pop
mov
int3
lahf
xor
mov
mov
les
loop
sbb
fists
out
inc
jnp
in
inc
int
es
ficomps
js
pushf
aaa
orl
loop
aas
nop
inc
sbb
shll
clc
je
mov
imul
loopne
push
pop
jmp
sbb
mov
cmp
jge
pushw
inc
inc
hlt
xchg
mov
out
rcrb
data16
repnz
lcall
pop
sti
dec
pushl
pop
sbb
mov
mov
subb
mov
sarb
call
or
insb
push
xor
std
adc
pushf
mov
pop
hlt
pop
pop
arpl
test
in
cmp
subb
adc
frstor
jo
fnstcw
fdivrs
cwtl
or
pop
scas
jmp
jae
sarl
xor
xchg
test
push
push
cmp
mov
pop
jae,pn
pop
xor
jge
pusha
bound
aaa
and
mov
fucomp
mov
cmpsl
push
inc
fs
jp
or
insl
add
mov
mov
rcll
int
mov
dec
fcoml
and
and
xor
daa
mov
and
xchg
cmpsl
fmul
inc
fidivs
loopne
into
dec
dec
xchg
mov
mov
mov
shlb
inc
mov
push
loop
xchg
int3
cmpsb
and
sbb
fsubl
sub
cld
loopne
push
pushf
sbb
mov
dec
xchg
mov
push
bound
mov
lods
stos
add
xchg
lcall
int3
scas
addb
push
aaa
fisubs
scas
inc
sub
inc
jb
je
insl
ja
xor
sub
adc
mov
iret
inc
cmp
addr16
cmp
jp
lret
orl
sub
mov
or
pop
mov
inc
and
cs
jbe
int
push
mov
adc
popa
inc
mov
in
cmp
mov
ljmp
bound
lcall
add
jae
adc
pop
je
jmp
jae
or
cmp
loop
movsb
mov
aam
pop
mov
adc
dec
pop
insb
mov
cmpsb
in
pshufw
jae
mov
subl
rorl
push
fldcw
sub
fs
stos
test
mov
mov
pop
dec
inc
sbb
xor
mov
aad
mov
mov
mov
jo
lods
popa
cwtl
fimuls
fwait
push
cwtl
jne
sbb
nop
stos
add
out
or
popf
push
loop
popf
movsb
cmp
push
jns
sub
or
nop
shrl
push
xchg
loope
add
popf
vmwrite
aas
roll
jne
popa
add
lods
add
xchg
lret
shrb
xchg
aaa
cwtl
bound
add
xchg
mov
notb
ljmp
data16
xchg
and
pop
mov
bound
xchg
in
xor
std
movsb
mov
push
mov
sub
pusha
loop
cmp
push
inc
imul
dec
cld
pusha
out
cli
inc
fnstenv
pop
xorb
es
fnstenv
outsl
int
mov
dec
stos
jo
les
cli
lret
inc
daa
jnp
lods
pop
adc
sub
cmpsb
inc
popa
loopne
stc
sub
call
ds
dec
jbe
xor
pop
xchg
ficoms
adc
push
adc
daa
popa
push
inc
push
ret
shrb
push
inc
mov
jb
pop
add
les
ficomps
cmc
call
fwait
jno
out
ljmp
icebp
adc
aaa
fnstcw
iret
fcomp
jmp
cmpsb
push
lock
cmpl
int
adc
sahf
aaa
sti
push
cmpb
mov
repz
js
add
pop
mov
mov
and
cmp
stc
mov
push
or
cmpsb
jns
movsl
setp
xor
cmpsb
lahf
loopne
shlb
bound
lret
dec
pop
mov
movsl
repnz
dec
add
iret
ljmp
jne
lret
adc
sbb
popf
add
fwait
lods
iret
fistpll
push
ljmp
sub
push
inc
sub
outsl
fcoml
mov
add
imul
or
sbb
pop
add
pop
mov
push
push
add
test
jno
pop
sbb
fucomip
nop
pop
out
stos
ret
movsb
mov
mov
push
imul
jmp
add
xchg
pop
test
in
xchg
adc
mov
fprem1
lcall
sbb
nop
xchg
pop
fimull
adc
loope
inc
jnp
mov
ret
repnz
and
add
mov
cmpl
pop
jae
ljmp
loopne
sub
add
repnz
pop
mov
vpaddsb
cld
arpl
or
stos
adcl
cli
dec
dec
mov
or
mov
jle
pusha
inc
inc
sahf
and
leave
lcall
bound
xchg
cmc
out
lcall
jne
and
popa
jmp
xor
jnp
out
xor
test
test
clc
repnz
je
sbb
add
and
bound
and
push
xchg
dec
popf
cmp
xor
pushl
xchg
fnstcw
out
pop
jle
add
mov
icebp
jbe
cmpsb
inc
daa
xchg
sub
and
xor
addr16
cli
das
enter
mov
lds
mov
push
sub
cmp
jmp
or
mov
decl
xor
pop
bound
pop
xchg
xchg
mov
mov
push
xchg
pop
mov
fs
jecxz
and
xor
adc
and
cmpsb
out
pushf
test
sbbb
dec
cld
inc
or
dec
add
stc
mov
sub
imulb
mov
sub
insb
data16
add
fwait
cltd
pop
ret
ja
mov
or
pop
sahf
or
push
dec
jmp
mov
adc
dec
imul
pop
pop
popf
or
cmp
add
dec
inc
pop
mov
sahf
les
daa
xor
aaa
in
mov
ljmp
push
nop
push
stos
dec
xchg
faddl
rcrb
test
stos
jae
pop
mov
lds
add
cs
enter
cmp
sti
in
jno
stc
in
inc
sbb
mov
ss
aaa
push
xchg
push
in
cli
xchg
adc
out
inc
mov
sahf
pusha
sahf
mov
idivl
test
add
les
rolb
xchg
daa
xchg
ret
scas
fstpl
out
loop
sub
mov
cs
lods
adcl
pop
jns
mov
xchg
push
imul
mov
add
cltd
jge
lock
icebp
in
push
sub
cwtl
xor
dec
xchg
mov
cmp
pop
xchg
insl
pop
mov
data16
iret
sbb
xchg
mov
fcmovne
add
push
loop
loop
aaa
cmp
jb
out
outsl
outsl
adcb
jno
hlt
xor
addr16
addl
jne
fcompl
addr16
addr16
mov
aaa
mov
popa
jle
push
pop
and
fcompl
cmp
adc
jg
push
outsl
and
pop
push
adc
dec
sub
pop
addl
outsb
lsl
mov
jo
adc
outsb
mov
cmc
addl
pop
outsb
xchg
cmc
and
xchg
lret
and
pop
mov
xor
xchg
mov
insl
push
les
dec
or
or
mov
sti
insl
inc
inc
aam
push
adc
cmp
mov
push
mov
ds
sub
mov
jmp
mov
adc
sub
pop
es
shll
or
adc
fs
push
movsb
in
leave
jmp
mov
movsb
fisttpll
pop
lret
aam
in
cltd
mov
enter
loopne
cmp
xchg
push
pop
mov
mov
xor
sbb
clc
sbb
jmp
subl
jns
inc
mov
add
dec
push
ljmp
arpl
cld
mov
adc
jl
stos
cmp
test
mov
or
or
lret
cmovge
jecxz
cmpsb
shll
pop
aad
insb
aam
jae
jnp
scas
je
call
aaa
jmp
shlb
pushl
mov
or
cli
lret
sbb
cmpsb
ret
xor
sti
out
xchg
pop
push
out
mov
js
fstpl
les
stc
dec
fs
jo
popa
ds
cmp
and
adc
and
push
mov
pop
fnstcw
inc
jbe
in
xchg
and
sbb
lcall
jnp
sbb
mull
ljmp
je
xor
jge
and
jno
dec
roll
stos
ss
movsb
mov
es
sub
lds
mov
push
popa
push
or
jp
fnsave
push
rorb
repnz
mov
mov
fmul
pop
test
pop
lods
sti
loop
pusha
mov
out
clc
popf
jmp
mov
nop
dec
iret
insl
sbb
dec
dec
push
cli
ret
out
adc
aaa
and
sub
in
push
xor
cmp
iret
push
scas
mov
in
gs
pop
test
cwtl
and
add
in
xor
jae,pt
lds
pop
add
xchg
jbe
mov
out
inc
mov
push
pop
sub
jg
shl
pop
push
or
scas
jp
cmpsb
lods
repnz
test
jbe
ds
pop
push
outsl
ficomps
in
into
bound
popf
inc
notb
lea
rcrl
push
icebp
jae
xchg
xor
and
push
js
test
xor
out
xchg
lahf
adc
xlat
ds
int3
test
les
leave
push
out
ficoml
mov
or
orb
ret
add
ds
jge
ficompl
cltd
pop
add
push
mov
sub
fwait
xor
and
mov
pop
outsb
sbb
and
jle
fisubl
pop
or
in
pop
add
clc
push
insb
out
sbb
xor
loopne
push
loopne
leave
push
sub
sahf
mov
orb
pop
sbb
pushw
push
sar
lret
loop
int
jg
jbe
fistpll
sbb
out
arpl
pop
out
loop
dec
mov
mov
cmp
shlb
sbb
or
cmp
inc
ja
out
xchg
sub
mov
aas
sub
lods
pop
jl
bound
out
jmp
jle
dec
iret
xchg
push
adc
ret
popf
in
pop
sbb
loopne
jl
mov
cmp
lcall
aaa
test
hlt
mov
pop
cmp
ficoms
popf
stos
mov
xlat
fwait
out
pushf
lcall
jecxz
adc
fucom
dec
xlat
ds
cs
mov
pop
pop
xchg
fisubs
mov
cmpl
je
lods
jne
pusha
imul
leave
fnsave
aad
mov
dec
insl
inc
add
insb
xor
add
xchg
mov
or
jge
sub
pop
sub
nop
decl
cmovne
fnstsw
inc
je
cmpb
aad
pop
push
enter
sub
and
xchg
cmpsl
arpl
add
enter
add
sbb
xor
mov
popf
sbb
and
sbb
adc
push
cmp
pop
xchg
mov
add
xchg
jno
jmp
lahf
out
fcomi
xchg
lods
jo
outsb
push
je
daa
orb
mov
loop
fldcw
mov
mov
pop
negl
mov
cli
loop
cli
xchg
fldenv
cmpsl
pop
cmp
or
cwtl
mov
cmp
adc
jg
jmp
in
addr16
jmp
dec
add
adc
mov
cmp
insl
fcomps
nop
fs
jnp
arpl
push
push
aaa
scas
mov
pusha
adc
dec
cmp
inc
rcr
xchg
mov
int
push
push
negb
fldcw
mov
adc
and
sub
movsl
mov
and
test
push
insb
bound
mov
sub
jmp
shll
sbb
sbb
xor
mov
sahf
test
leave
rorl
dec
iret
jae
fwait
mov
push
jo
in
lcall
pop
and
divl
cld
ret
push
ds
pop
cmp
cmp
pop
ljmp
shl
push
movb
push
imul
xor
shl
hlt
ret
mov
enter
loopne
pop
adc
adc
mov
cli
add
outsb
pop
jae
hlt
stos
jo
mov
cmc
pop
xor
ret
popf
imul
dec
sbb
adc
cs
push
xchg
call
les
incb
lcall
and
into
stos
shll
mov
jae
jae
in
mov
adc
adc
mov
pop
jns
jnp
xchg
add
dec
push
lods
les
hlt
sbb
add
out
push
js
jg
jae
mov
inc
xchg
sub
sub
adc
add
out
aaa
push
xchg
inc
je
jp
cld
adc
lods
mov
orb
ret
xor
andb
or
push
aad
std
js
aad
sbb
pop
sbb
mov
sbb
mov
rcrl
inc
adc
jne
push
xor
jo
pop
outsb
inc
adc
pop
push
dec
std
fstl
outsl
mov
jl
push
xchg
xchg
movl
push
push
out
sbb
inc
add
jp
ss
or
out
jecxz
in
mov
out
mov
test
pop
and
adc
adc
add
sbb
les
mov
arpl
mov
push
add
pop
push
pop
sub
stc
cltd
insl
jo
push
xor
sbb
xchg
ljmp
add
push
orl
jg
adc
or
add
pop
rolb
loopne
aam
jmp
sahf
push
daa
mov
test
mov
insl
scas
or
fwait
pop
sub
jno
mov
pop
fnstsw
inc
movsl
jmp
jbe
push
inc
xor
xchg
dec
das
out
stc
mov
and
add
aad
xorl
cmp
in
inc
ljmp
lahf
pop
pop
fwait
mov
xchg
enter
mov
pop
out
fs
mov
pusha
test
pop
add
shlb
or
int3
xchg
fcomps
lret
and
rcl
push
mov
or
jbe
lahf
inc
lahf
inc
cmp
inc
hlt
add
cltd
add
dec
mov
sub
je
lock
pop
xchg
sub
hlt
push
push
leave
ror
xlat
je
add
adc
outsb
popf
xchg
ljmp
out
jecxz
icebp
fcmovnb
ds
leave
fcmovnbe
push
mov
int3
xor
xchg
mov
cltd
pop
sbb
or
into
hlt
add
movsb
icebp
mov
imul
adc
call
stos
sub
cmp
cld
or
xor
xor
fs
cmp
add
sahf
daa
pop
scas
data16
jae
cmp
out
cmpsb
sub
jo
std
outsl
xor
sbb
incl
rol
out
sarl
mov
scas
push
fs
adc
and
mov
pop
mov
mov
mov
xchg
adc
or
lods
cltd
and
push
inc
jecxz
ja
jb
out
fcompl
add
sbb
test
dec
ds
xlat
xor
push
or
out
mov
mov
sti
pop
jl
add
stos
lahf
xorl
stos
call
ss
adc
leave
push
loope
int
in
lock
xchg
bound
outsl
shrl
outsl
icebp
es
xorl
outsl
stc
jge
and
clc
jne
enter
pop
rcrb
stos
cmpl
sarb
sub
fnsave
dec
mov
mov
mov
testb
jae
mov
pushf
ret
cld
clc
push
stos
dec
popa
sbb
cmp
mov
nop
in
cmp
jecxz
xchg
addr16
jle
aad
stos
or
sti
dec
rclb
or
cmpsb
ja
xchg
mov
xor
test
or
fildll
cltd
shll
lods
push
mov
or
insl
fdivrs
push
adc
mov
rorb
push
or
shl
andl
sbb
loopne
sub
iret
pop
icebp
inc
xchg
mov
jl
xor
xor
pop
mov
jb
repz
cs
subb
leave
lret
or
jg
sbb
test
cmpsb
cmpsl
mov
or
inc
inc
cld
ljmp
inc
andl
push
bound
cmp
fmuls
ret
sbb
adc
xchg
loope
jge
pop
cltd
jl
int
xor
mov
rcrl
xchg
loop
dec
loopne
insl
cmp
xchg
mov
int
call
add
inc
lret
jl
das
jle
subb
lods
inc
mov
mov
das
outsl
push
test
xchg
dec
lret
push
mov
divb
out
dec
cmp
inc
ret
mov
das
lret
stos
jecxz
cmp
roll
mov
fdivrl
push
sub
or
push
mov
repz
out
mov
adc
loope
lcall
mov
js
sub
jbe
adc
jae
push
pop
inc
jns
arpl
movsb
fstl
shrb
xchg
mov
arpl
mov
mov
xchg
sub
inc
or
mov
clc
cmpsl
scas
sbb
mov
jge
jnp
out
xor
sbb
or
add
je
cmp
leave
xchg
pop
pop
out
inc
xchg
mov
ret
negb
push
lret
ret
cmp
jo
sahf
lea
fsub
pop
jb
out
js
fsubs
mov
xchg
mov
jmp
push
or
mov
xchg
stc
xchg
jae
jg
jg
pushf
sbb
pop
dec
push
outsb
and
adc
iret
xchg
sahf
pop
push
leave
mov
push
mov
sbb
cmp
push
int
loope
outsl
test
out
rcr
es
xchg
sub
scas
icebp
lcall
data16
add
cli
out
shrb
push
mov
mov
inc
mov
cmp
aam
inc
out
je
adc
test
mov
testb
pop
scas
icebp
fdivrs
das
mov
jl
hlt
mov
xchg
cmp
les
and
es
aad
rolb
inc
jne
dec
data16
je
imul
push
mov
das
das
or
dec
pop
inc
xchg
jns
ret
add
adc
cs
call
inc
xchg
loope
imul
stc
lcall
dec
inc
scas
negb
sub
push
test
cmp
movsl
lcall
cmp
sub
push
pop
push
sub
fwait
out
mov
pop
or
inc
lcall
aam
pop
int3
pop
sahf
enter
push
pop
xor
nop
xchg
jg
in
mov
insb
in
or
pop
mov
jb
mov
jle
pop
mov
iret
jp
iret
sbb
int3
push
xchg
in
pop
mov
cmp
popa
jecxz
xchg
sub
xchg
rcrl
xchg
addr16
push
pop
test
inc
fildl
movsl
and
dec
xor
arpl
and
dec
jecxz
call
leave
dec
ljmp
pusha
int
mov
pop
and
sbb
out
adc
lods
add
push
aaa
adc
arpl
sbb
andb
aad
jbe
or
fcmovne
ret
mov
push
inc
ret
jnp
gs
insl
jmp
popa
and
mov
add
xchg
push
movsb
add
out
sbb
mov
inc
and
jo
cwtl
cld
sbb
cwtl
cvttps2pi
jns
sbbb
xchg
or
ret
int
push
clts
mov
clc
xchg
push
sbb
mov
cs
cmp
push
mov
pop
xchg
sti
push
arpl
mov
or
and
ret
outsl
lods
imul
mov
dec
inc
pop
or
xchg
divps
push
jecxz
cmp
push
mov
mov
daa
cmp
push
pop
aaa
out
push
inc
mov
iret
push
push
dec
mov
inc
ljmp
jno
xlat
leave
pushf
jns
popf
adc
jbe
lock
stos
jns
outsb
cmpsb
sbb
pushf
sub
push
push
int3
lock
cmp
lods
cld
sub
addr16
cmp
das
or
mov
divb
cmp
add
xchg
cld
fcomp
lds
int
stc
add
add
lea
rcrl
adc
outsl
jle
lock
scas
frstor
fmuls
add
mov
fistpl
jle
cmp
aaa
test
leave
in
lcall
test
pushf
sub
js
xlat
xor
add
mov
ja
das
movsl
inc
pusha
mov
loop
jno
test
int3
push
sub
and
shrb
jb
mov
mov
test
cmp
inc
mov
inc
lds
repnz
les
dec
out
mov
dec
ljmp
inc
cmp
adc
scas
fst
xor
add
ret
lods
or
adc
and
rorl
or
cli
fnstsw
call
dec
ret
sub
cmp
inc
xchg
cmp
and
push
or
cmp
addr16
cmp
xor
daa
jno
adc
sub
rorb
movsb
arpl
cmp
push
jno
or
movl
jle
mov
rcrl
mov
and
dec
loopne
push
or
fadd
sub
sar
sbb
cmc
pusha
cld
scas
imul
push
xchg
pop
lock
mov
inc
pop
mov
repz
pop
lret
ss
imul
test
add
cmpsl
sub
int3
xchg
adc
mov
xchg
mov
int3
pusha
xor
pop
hlt
roll
pop
adc
jo
xor
scas
adc
push
imul
add
mov
les
mov
pop
shl
fstps
xlat
push
pop
hlt
jae
call
addr16
xchg
pop
push
mov
lcall
lea
adc
mov
loope
stos
inc
decb
inc
pop
clc
movsl
aad
dec
jp
out
push
lahf
jge
jo
ret
enter
jp
xchg
aaa
cmp
pop
fidivrs
insl
mov
int3
push
scas
movsb
cmp
sti
and
sub
dec
das
xor
and
ret
mov
ficoml
in
cmp
mov
adc
add
xchg
mov
outsb
mov
orl
stos
inc
dec
cmc
and
xchg
in
jnp
push
dec
add
ficomps
mov
lock
xor
push
adc
pushf
ret
outsb
sub
out
add
mov
add
scas
cmp
xchg
loope
sub
cwtl
shl
mov
jp
fcoms
cmpsb
cmc
or
dec
dec
daa
pop
and
or
dec
inc
fsubr
pop
das
mov
push
adc
cltd
ss
orb
adc
sar
in
add
scas
mov
lahf
ljmp
push
xor
decl
xor
add
rolb
push
das
addr16
push
mov
es
mov
or
out
sbb
pop
insb
push
jle
imul
push
pop
mov
dec
ljmp
fsubrl
lea
fsts
lods
lods
scas
xor
fistpll
into
adc
mov
mov
jp
mov
xor
out
stos
pusha
and
incl
cmp
xor
pop
dec
je
mov
pop
out
adc
popf
insb
cmpb
cld
icebp
push
aam
mov
lahf
pop
aam
lahf
lahf
mov
push
dec
in
ds
xchg
cmp
sbb
das
aaa
mov
add
js
xor
repnz
jecxz
adcb
jno
test
stos
popf
jg
jmp
out
adc
ja
xor
testl
jne
cmp
test
addr16
loop
stc
pop
sub
push
mov
scas
aaa
dec
adc
pop
or
orb
add
mov
ret
inc
sbb
fldcw
and
in
lret
xchg
jl
out
dec
lds
xchg
ret
mov
inc
shll
rcl
inc
hlt
repnz
cmc
xor
push
xchg
mov
insb
inc
int
pop
xor
or
aad
data16
ja
jmp
or
movsb
in
xchg
xor
xlat
popa
or
jnp
xlat
popl
ret
repnz
int3
aaa
push
imulb
cmpsl
and
iret
or
push
sub
ljmp
mov
sub
push
outsb
insb
ljmp
inc
std
jmp
jge
fmull
or
out
icebp
orb
or
test
fisttpl
rol
and
aas
mov
outsl
sub
mov
movl
in
cmp
pop
popf
or
sbb
xor
std
mov
mov
pop
sub
loopne
imul
mov
sbb
jl
popf
in
fwait
subb
aad
enter
push
adc
sub
jae
outsb
repnz
sbb
mov
fcoml
pop
lea
jle
test
call
xchg
je
pop
mov
movsb
adc
pop
out
faddl
xor
ds
fistpl
test
xor
orl
scas
and
shrl
push
or
pop
sbb
imul
xchg
inc
adcl
cmp
shr
mov
push
fwait
push
movsb
ror
sub
bound
inc
fwait
xchg
lret
in
adc
xor
pop
movsl
adc
jns
rclb
fucom
fldl
mov
pop
insb
pop
sbb
sub
cmp
bound
jmp
xlat
mov
mov
cld
xor
xchg
jmp
daa
or
hlt
push
imul
iret
lock
jo
out
ret
and
mov
push
bound
xchg
daa
mov
lea
test
cmpsb
shrb
repnz
ret
js
out
jmp
add
xchg
xchg
mov
arpl
leave
rorl
into
subl
fdivs
ret
std
or
cld
je
xor
int3
jg
fsubl
fistps
push
sub
test
ficompl
movsb
jmp
cmp
stc
aas
and
sub
pusha
mov
std
or
xor
fidivs
enter
bound
movsl
xor
in
test
jbe
loope
cs
xor
push
test
loope
jl
notl
add
cmp
cmp
test
push
jl
inc
insl
fstl
rorl
adc
lret
jmp
lock
je
pop
repz
inc
fwait
nopl
cmpsb
cs
sarl
xchg
inc
adc
test
iret
lcall
push
stc
fbstp
xchg
xchg
cmp
in
out
jno
dec
sub
xorb
gs
std
jae
mov
popf
sarl
push
clc
int3
fwait
or
stos
mov
test
cmp
sub
dec
xor
fcmovb
xlat
repz
sti
mov
mov
cmpb
dec
jae
mov
dec
adc
mov
fsub
push
cmpsb
aaa
sbb
jne
or
shll
in
cwtl
mov
xor
pop
sti
cmp
out
xchg
cmp
test
shrl
sbb
aad
mov
movsb
cltd
stos
jno
adc
jns
jbe
lret
cltd
cwtl
test
xchg
enter
out
sahf
mov
pushf
popa
test
sub
sbb
pop
cmpsb
mov
bound
cmp
lahf
insl
cmc
into
jno
repnz
lods
adc
mov
fidivrl
into
bound
cmp
add
mov
pushf
dec
mov
std
cmp
movsb
and
shrb
fimull
mov
hlt
vmread
into
in
stos
repz
inc
pop
pop
push
inc
cmp
out
pop
fwait
mov
xchg
pop
loop
cmpsl
jb
pop
movsb
push
mov
sub
imul
pushf
push
popa
sbb
dec
sti
pop
lods
ret
js
int3
cmpsb
cltd
pop
add
ret
mov
jno
pop
insb
add
jl
in
push
fbstp
incl
ja
scas
cmp
data16
arpl
lret
sbb
adc
fisttpll
push
frstor
fnsave
sarb
out
out
mov
xor
or
es
imul
clc
rep
loope
xor
push
jnp
jl
dec
mov
and
pop
in
sbb
fldenv
stos
ja
stc
rorl
faddl
dec
bound
xchg
and
out
loopne
jle
push
jmp
cmp
or
repnz
xchg
xor
adc
cmpsl
mov
fsubs
loope
sahf
or
test
pop
sub
sbb
mov
cmc
in
insl
shll
sub
dec
push
cmp
mov
push
ds
repz
mov
adc
push
mov
inc
mov
movsl
jmp
pushf
les
mov
adc
pop
test
add
cltd
cmp
stos
pop
ljmp
neg
pop
sbb
sub
xchg
xchg
xor
and
icebp
cmp
or
dec
cmp
jecxz
dec
adc
xor
mov
data16
mov
loopne
movsb
sti
mov
jg
cwtl
push
pop
jnp
lcall
flds
flds
xchg
or
mov
scas
pop
dec
and
dec
xchg
sbb
sbb
in
sbb
mov
test
nop
cmpl
pop
gs
movsl
stos
insb
mov
ret
call
mov
in
mov
mov
decl
rorb
xchg
fwait
nop
aad
mull
cmp
pop
mov
lods
adc
dec
mov
push
xchg
roll
lods
in
daa
mov
and
pop
or
std
or
cli
adc
pop
xlat
loop
clc
xchg
aam
sbb
stos
add
mov
outsb
mov
cmpsl
and
and
es
jae
je
xchg
sbbl
xchg
pop
push
cmp
jne
mov
daa
test
and
mov
rol
fcmovne
cmp
cmp
or
inc
lahf
pop
sub
cli
push
xchg
cld
ss
out
inc
std
inc
ss
mov
js
xchg
and
inc
repnz
in
std
bound
fstpt
aad
xor
or
mov
fidivl
mov
mov
mov
sub
xor
addr16
mov
and
in
loope
stos
push
lret
out
sub
ja
test
popa
or
cwtl
jecxz
jmp
cmp
data16
insb
push
xor
test
bound
and
jbe
xchg
nop
mov
adc
pop
push
xor
and
or
xor
cmpsb
or
adc
lods
mov
mov
xlat
sub
into
add
xor
cmp
xchg
int
adc
test
adc
xlat
fwait
shlb
sbb
cmpsl
inc
sub
int
ret
sbb
sbb
fstpl
lahf
ljmp
xorl
fs
xchg
lods
xchg
sbb
jne
leave
out
jne
push
push
pop
mov
jp
inc
popf
iret
xchg
jnp
stc
ret
pop
rorl
fs
mov
movsb
fistl
mov
mov
pinsrw
xchg
push
test
mov
stos
ret
xchg
adc
push
fmull
xlat
mull
inc
fcoml
and
or
sahf
pop
jo
push
sbb
add
rcll
mov
test
jle
cmpsb
sub
jecxz
sub
jns
je
sub
ret
push
rorb
aaa
jae
xchg
repz
stos
mov
inc
lea
adc
insb
aad
cwtl
and
mov
loop
ret
cmp
in
clc
xorps
cltd
or
cmp
xor
dec
mov
inc
cmp
mov
rcrb
adc
xchg
or
push
cmpsb
or
popa
xor
mov
hlt
sbb
scas
pop
jp
sarb
fcmovnb
xchg
into
pop
jno
xchg
push
loop
mov
je
mov
jno
aas
outsb
aas
icebp
or
pop
add
insl
xchg
andb
cltd
repnz
cmp
pop
loope
adc
mov
sub
pop
adc
xor
bound
mov
inc
loopne
push
fmull
nop
cmp
in
xchg
stos
loopne
xchg
xchg
lret
out
rcl
bound
enter
add
cmp
dec
xor
mov
scas
xchg
stos
sbb
push
pop
mov
inc
and
enter
inc
mov
je
cld
add
xor
pop
in
outsl
hlt
jecxz
insl
repnz
mov
cwtl
xlat
rclb
inc
add
icebp
aaa
fwait
and
mov
push
scas
negl
sbb
clc
cmp
push
cs
lock
std
pop
xchg
xchg
std
adc
lea
jmp
push
aaa
pop
xor
stc
adc
inc
mov
adc
in
add
scas
xorl
je
mov
xor
push
sbb
cmp
add
xchg
imul
jae
or
test
pop
mov
add
sbb
mov
addb
push
add
xor
test
lods
or
xchg
mov
leave
movsb
cmp
dec
pop
aas
jecxz
ret
or
push
mov
hlt
jg
int
sti
dec
inc
xchg
adc
or
out
vpshufd
push
jae
data16
pop
or
movsb
jbe
lret
addr16
arpl
inc
and
popf
jo
mov
imul
inc
pop
push
mov
xor
in
mov
das
dec
dec
mov
mov
loop
jbe
pop
adc
sbb
add
test
push
push
mov
cmpsl
sbb
mov
push
pop
dec
push
adc
cli
mov
mov
mov
loop
bound
int3
jns
dec
stc
sub
xchg
ja
cmp
out
push
inc
out
pop
add
adc
rolb
mov
dec
ds
dec
lods
test
in
mov
int3
in
xchg
std
mov
cmpsl
cmp
lret
and
dec
add
mov
outsb
or
loope
loop
dec
out
lret
push
mov
jg
cmpsb
xor
pop
lods
pop
add
cwtl
cmp
push
sub
mov
pop
rcrb
sub
pop
ror
fsubl
dec
sbb
std
or
mov
andb
movsl
test
roll
or
ss
add
outsb
push
jle
push
push
fcoms
push
add
pop
nop
push
push
out
xchg
mov
lea
into
dec
cld
mov
jp
xchg
jns
aad
push
cs
sbb
fsubr
jl,pt
cmp
xchg
mov
dec
xchg
gs
cwtl
gs
push
test
push
ror
sbb
out
pusha
pop
and
mov
xor
rorb
add
sub
push
and
fucomp
push
mov
dec
sbb
jns
jae
outsl
push
mov
popa
lcall
mov
mov
fdivl
call
fists
pop
cwtl
ret
jo
mov
jg
std
movsl
mov
int
pop
fsubs
jmp
cmp
in
rcrl
test
imul
out
xchg
lds
mov
pop
cld
mov
mov
cmp
cmp
adc
inc
add
cmp
aam
call
shll
popa
add
pop
pop
ret
cmpsl
push
lcall
out
dec
hlt
test
fisubrs
sub
scas
sub
xchg
mov
ficoml
push
les
std
aam
out
lods
jle
dec
enter
sbb
je
push
xchg
es
mov
mov
in
movsb
ret
ret
mov
cmp
pop
das
jmp
xchg
xchg
mov
pop
sbb
dec
in
jecxz
inc
imul
xor
outsb
aam
mov
jecxz
xor
pop
jno
jp
xor
aaa
fnsave
add
lods
aad
psllq
cmpb
mov
lock
inc
pop
loope
lods
addr16
mov
int
mov
sub
aas
inc
or
es
add
icebp
lcallw
int
gs
dec
adc
xor
dec
loope
into
xor
hlt
cmp
insb
sub
fwait
mov
mov
sbb
loopne
aaa
adc
mov
pop
movsl
cwtl
leave
iret
or
sub
push
repnz
dec
cwtl
push
adc
cs
leave
cmp
mov
jno
movsl
mov
push
pop
aad
lds
push
aaa
xor
mov
decl
cli
ftst
enter
push
inc
dec
in
lea
add
lock
je
push
loopne
movsl
xor
lret
call
pop
mov
pop
adc
add
inc
dec
mov
push
push
cmp
sbb
data16
sbb
cmpsb
inc
jecxz
aaa
out
mov
addr16
out
add
push
andl
imul
mov
pop
jg
ret
and
int
daa
push
loopne
mov
mov
jae
jno
xor
and
je
pop
fs
insl
mov
cmp
fdivs
shlb
mov
aaa
mov
jmp
sub
inc
cmp
imul
jp
in
mov
sub
adc
and
mov
jns
mov
sbb
dec
mov
ss
rorb
add
in
xlat
push
movsb
addr16
aad
inc
dec
mov
mov
mov
out
jmp
je
enter
stc
or
call
mov
mov
xor
movsl
inc
push
push
sahf
adc
and
scas
fwait
imul
mov
lret
das
daa
mov
pop
inc
movsb
add
inc
jo
jle
es
jo
dec
pop
push
sub
das
mov
test
dec
inc
repz
dec
mov
mov
mov
mov
and
mov
int3
fldl
call
push
jl
cmpsl
fadds
push
stos
lret
rolb
jp
out
nop
fsub
sti
mov
sbb
xchg
imul
ss
dec
lahf
stos
daa
jns
or
xchg
test
mov
pop
mov
and
xchg
scas
sbb
test
cmc
imul
dec
sti
jnp
rorl
push
sbb
inc
inc
icebp
mov
lods
mov
icebp
testl
mov
mov
cmp
push
and
les
push
mov
rcrl
cmp
jle
and
lea
xchg
xchg
xor
or
int3
jmp
inc
xchg
jno
mov
dec
xchg
out
jnp
adc
daa
jns
rorl
loop
jp
push
ds
mov
shlb
cltd
mov
jne
push
rorb
push
icebp
or
ljmp
mov
into
jge
mov
lahf
bound
xor
dec
stc
lock
mov
xchg
mov
xor
sub
insl
sbb
inc
or
js
adc
in
inc
adc
jecxz
inc
test
mov
lret
pop
push
push
or
inc
cmp
sbb
inc
imul
xchg
jae
into
pop
sbb
popf
mov
mov
roll
addr16
and
jg
and
cwtl
sbb
dec
push
fs
lds
or
pusha
aaa
xchg
in
cli
mov
fs
mov
lret
shl
dec
adc
lret
mov
adc
sbb
sarb
pop
ret
jecxz
in
aad
inc
mov
sub
lods
mov
rcll
xchg
xor
pop
out
pop
push
ror
or
pop
aam
cs
mov
adc
mov
inc
adc
pop
sbb
inc
lcall
push
out
jbe
mov
mov
and
pusha
fcmovu
cmp
mov
rorl
xor
stos
leave
repz
push
cmp
and
sub
sti
cltd
pusha
rorb
sbb
mov
in
mov
cmp
and
mov
jmp
add
jo
push
fbstp
popf
sub
dec
mov
ret
mov
mov
out
adc
in
ja
es
into
pop
outsl
sahf
lcall
shll
cld
mov
shrl
mov
insb
mov
out
jg
stos
add
lahf
adc
lock
lret
mov
pusha
push
lods
pop
adc
lods
mov
dec
or
xchg
sti
into
stos
iret
cwtl
sub
jecxz
pop
fldcw
add
cwtl
or
lods
clc
rorl
ja
fwait
outsl
incb
mov
jne
jmp
lret
jno
pusha
in
fildl
addr16
fists
mov
xor
mov
lcall
xchg
mov
scas
sbb
mov
aad
push
dec
push
mov
inc
mov
ljmp
test
imul
sbb
arpl
sub
iret
es
inc
rcrl
rcll
stos
jbe
mov
or
push
sbb
and
sbb
mov
test
in
mov
xchg
cmc
pop
cmpsb
cmp
mov
addr16
sub
data16
das
or
cmp
pop
cltd
sbb
pop
pop
in
push
cmpsl
dec
cmpl
mov
jno
push
pusha
pop
push
into
jp
add
imul
add
or
or
dec
mov
dec
lcall
pop
cltd
icebp
adc
negl
sti
in
nop
adc
mov
and
add
jns
pop
enter
movsb
divl
sbb
jle
adc
inc
or
jg
xor
mov
adc
mov
lods
push
adc
ret
sbbl
cmpsl
push
sub
cmc
jmp
shl
repnz
int
jb
ret
dec
out
push
cmpsb
fnsave
and
lds
sub
push
nop
dec
ret
sub
jo
inc
push
and
stos
test
inc
push
loopne
jmp
push
lods
jecxz
mov
ret
mov
jg
iret
or
dec
xchg
stos
jl
cmp
out
dec
mov
in
leave
mov
mov
xor
mov
and
dec
nop
je
scas
out
ficoms
and
cwtl
test
shrb
and
insb
xchg
ret
fnstsw
in
mov
ja
dec
aas
call
call
push
sbb
or
dec
outsb
push
clc
dec
jae
sbb
pusha
scas
ljmp
xchg
mov
adc
fwait
push
jns
add
aam
call
push
xorl
sbb
aaa
sbb
fidivrs
jbe
cmp
hlt
test
hlt
popa
in
adc
or
mov
pop
mov
xchg
popa
rcrb
jecxz
outsl
aas
icebp
loope
cmc
mov
movsl
or
push
xlat
cmc
loope
clc
add
into
fsub
and
sbb
pop
nop
fidivl
mov
int
out
add
xor
icebp
dec
popf
mov
addr16
inc
push
fidivrs
jo
mov
dec
sahf
cld
scas
pushf
add
arpl
dec
repnz
dec
inc
sub
insb
or
add
bsf
out
sub
sbb
aas
sbb
in
mov
inc
rorb
data16
out
push
in
pop
xchg
xor
xchg
mov
mov
mov
mov
rclb
add
xchg
xor
dec
mov
lahf
les
adc
cmpsl
daa
push
jg
xchg
shrl
mov
daa
dec
shlb
jmp
cwtl
subl
fbld
lods
cli
pop
popf
hlt
sbb
cmp
or
mov
sbb
xchg
out
jecxz
stc
ljmp
hlt
mov
lds
lret
cmpsb
lock
lds
push
in
mov
rcrb
pop
mov
test
lods
outsl
jbe
mov
ss
cmp
dec
clc
mov
mov
sahf
lods
push
sub
jp
push
imul
sub
mov
sar
xchg
adc
aam
popf
popf
push
lods
jl
ss
mov
cmpsl
xchg
xor
jmp
dec
mov
test
xor
mov
fisttps
mov
repnz
dec
or
push
push
stos
test
or
or
dec
cld
jl
imul
lds
loopne
sti
adc
pop
testl
cltd
loope
ljmp
lea
sub
or
stc
cmpsb
sbb
cmp
dec
fcoml
movsl
shl
popa
repz
push
bound
lcall
sbb
in
incl
sbb
fstpl
xchg
xor
mov
lahf
adc
jg
mov
mulb
cmp
inc
xor
popf
jbe
or
sub
enter
cmp
dec
into
adc
xchg
enter
xchg
gs
popl
fldt
sub
add
jecxz,pt
into
and
scas
mov
sbb
in
les
mov
push
dec
leave
stos
flds
insl
dec
popf
ljmp
outsl
mov
jnp
test
or
stos
xchg
pop
lret
bound
or
xchg
popa
lock
or
and
cmc
ficomps
bound
xchg
add
sub
repz
mov
fbstp
imul
movsb
lret
ds
and
ss
xor
lock
adc
sti
cmc
insb
les
fidivl
dec
cld
into
add
pop
xor
mov
or
mov
mov
out
mov
inc
push
movsb
addr16
mov
stos
push
add
and
push
mov
subb
lret
xor
popf
mov
mov
add
repz
push
rorb
xchg
sub
dec
jecxz
mov
test
out
sub
call
rcrb
lahf
pusha
pop
bound
add
aam
inc
mov
stos
shr
pop
mov
mov
pop
xchg
fs
sarl
mov
sarb
jle
push
xchg
lock
fbstp
ds
or
cli
repz
sub
or
fdivrs
in
pushf
add
add
pushf
lret
popf
cmpsb
cmp
cmp
jbe
scas
fcoms
lods
call
xlat
ffreep
dec
and
sar
shl
inc
xor
mov
movsb
leave
outsb
pushf
test
jecxz
inc
shlb
adc
fiadds
and
sarb
sub
jle
pushf
out
mov
daa
or
adc
scas
insl
fs
sub
hlt
mov
or
and
inc
fsts
jne
mov
je
imul
sub
clc
imul
cmp
add
or
test
sti
fisttpl
and
int
imul
and
sbb
call
sub
inc
fidivrl
and
adc
inc
adc
fdivrl
sub
adc
xchg
adc
push
push
inc
jg
jae
push
inc
xor
fdivrp
pop
ljmp
inc
outsl
dec
jno
scas
insl
outsb
and
lahf
lahf
cs
ja
movsl
int3
sbb
sbb
cmp
das
aam
add
scas
cmp
sbb
jnp
mov
pop
imul
inc
mov
jne
adc
push
bound
xchg
mov
and
xchg
xchg
repz
pushf
sub
pop
adc
mov
stos
loope
addr16
xchg
sub
subb
cltd
mov
push
iret
in
pop
push
lock
xchg
dec
out
adc
jne
lds
mov
sbb
sbb
je
aaa
xchg
xchg
mov
negb
jl
lcall
test
inc
dec
jnp
aas
or
mov
es
scas
sti
sub
idivl
js
adc
xchg
jnp
push
push
clc
inc
lock
pop
push
movsl
sub
push
xor
mov
int
fnstsw
jnp
xor
fdivrs
leave
testb
out
mov
lcall
mov
insb
test
pop
jp
cmp
sbb
push
js
xor
mov
push
mov
jns
dec
dec
dec
xchg
popl
loopne
jae
xlat
in
mov
mul
cmp
jo
insl
sbb
mov
movsb
cltd
enter
mov
outsl
addr16
mov
into
daa
mov
int
push
lahf
and
push
jbe
mov
aad
push
or
mov
lret
xor
arpl
pusha
add
aam
xadd
cmpsl
insl
push
imul
xor
push
test
into
out
sbb
dec
cmc
fidivl
mov
mov
ret
out
jg
mov
or
add
xchg
mov
scas
xchg
stos
sahf
fcmovne
testb
xlat
xchg
sahf
pop
mov
ret
pop
fdivp
and
movsl
or
bound
sbb
jno
dec
mov
int3
or
dec
add
arpl
leave
dec
repz
inc
adc
add
test
fimuls
and
fs
xchg
lock
cmp
les
lret
sub
jmp
mov
sbb
xchg
cmp
mov
cmp
mov
jmp
sbb
rorb
mov
std
test
rclb
pop
shl
xchg
jle
insb
and
sbb
das
xchg
cltd
xor
out
ret
lods
mov
sbb
sub
add
inc
fistl
pop
mov
push
pop
mov
mov
imul
cmp
push
mov
or
mov
out
mov
popa
movsl
js
push
test
or
frstor
int3
mov
and
divl
outsl
jecxz
xor
xchg
pop
dec
push
out
adc
push
cmp
dec
lcall
mov
add
rol
dec
stos
xor
scas
call
cmp
mov
and
test
adc
and
push
aam
lock
rcl
jne
sti
cmp
pop
jo
inc
fs
mov
jne
in
arpl
out
push
and
fstpt
fisttpl
adc
xor
loope
fcomps
mov
out
push
insb
fcomps
enter
ficoml
cmpsl
repz
push
lods
push
mov
jne
xchg
xchg
jae
and
int3
xchg
insb
daa
jne
or
ljmp
aas
mov
or
xchg
rol
sti
mov
pop
movsl
mov
push
push
das
and
aas
xchg
or
xor
or
hlt
mov
scas
lods
cmpsl
jle
aaa
mov
icebp
sbb
test
inc
push
test
andl
mov
in
sub
jae
movsb
mov
add
arpl
daa
dec
fisttpl
push
cmp
xchg
xchg
pop
jge
cld
imulb
mov
shll
push
xchg
loop
cmp
and
sar
dec
lahf
fucom
fsubr
hlt
lret
mov
sahf
popa
shlb
and
sub
js
mov
mov
lret
data16
and
jle
push
pop
mov
fucomip
push
add
fcmove
jg
ss
sbb
pop
push
sbb
pop
je
or
arpl
outsl
inc
addl
inc
xchg
aam
sbb
aam
add
into
insb
sub
or
aaa
xchg
or
sub
mov
pop
mov
cmp
rol
cmpsl
dec
sub
outsb
xchg
fidivrs
aaa
cmp
push
adc
sbb
mov
sub
ja
sbb
xor
xor
pop
push
inc
ja
adc
push
popa
sbb
mov
and
clc
shll
fcoml
xchg
pop
orl
std
adc
cli
clc
adc
mov
jge
imul
aad
inc
xor
or
sub
jecxz
sub
mov
in
or
loope
ficompl
mov
iret
test
in
mov
pop
and
mov
stc
pop
xchg
xchg
mov
xorl
dec
cmpsb
pusha
jecxz
pop
jne
adc
fdiv
cmp
xor
lcall
xchg
loop
fmuls
cli
jae
cli
and
push
clc
add
imul
int
icebp
cltd
arpl
inc
mov
les
call
jmp
aam
inc
hlt
repnz
sbb
rcrl
dec
pop
jns
cli
mov
sbb
dec
add
jno
mov
mov
dec
jp
push
mov
push
or
inc
aaa
add
cmp
sub
imul
and
mov
out
popf
push
int3
jno
movsl
cwtl
rorl
enter
pop
sbb
inc
test
rcrb
push
push
pop
data16
jno
or
mov
adc
addr16
repnz
movsb
inc
sub
ja
aaa
stos
lcall
fisttpl
fiadds
sbb
movsl
inc
adc
test
jbe
mov
jg
xor
dec
lret
mov
xchg
push
and
movsb
inc
stos
in
imulb
cli
jp
cld
mov
mov
mov
xchg
mov
ficomps
sub
out
mov
or
pushf
xchg
jmp
dec
enter
mov
dec
adc
xchg
rcll
mov
in
test
mov
insl
add
roll
testl
mov
call
inc
mov
dec
mov
pop
inc
inc
jno
pusha
mov
or
aaa
mov
ds
hlt
add
es
mov
lods
xchg
sbb
mov
scas
push
push
es
lods
pop
out
int
or
test
jl
jmp
xor
mov
aad
loope
mov
push
sbbb
inc
pusha
jbe
fwait
pusha
mov
jg
and
and
out
nop
adc
imul
jmp
movsl
int3
mov
adc
mov
jge
push
push
fdivrl
dec
pop
sub
addr16
shlb
mov
ret
jae
jle
movsl
sub
pop
mov
into
mov
fbld
and
icebp
in
fdivrl
mov
add
mov
mov
mov
adc
or
fs
dec
lock
in
lock
sbb
cmpb
movsl
cmpl
mov
nop
scas
add
sbb
add
xor
sub
sti
idivl
test
push
push
insw
mov
and
fisubrl
ss
jle
clc
out
lret
push
pop
hlt
push
push
xchg
aad
test
loope
lahf
xor
cmpsb
repnz
sub
ja
sub
pusha
fwait
jle
int3
iret
inc
dec
jmp
fcom
lods
cmp
aaa
ret
mov
mov
test
fstps
jb
xor
lret
repz
fldenv
xchg
mov
std
outsl
mov
sub
or
lret
xor
pop
scas
cmpl
inc
xchg
test
fsts
scas
incb
rcll
pop
cwtl
lds
push
shr
cmp
push
orl
dec
dec
idivl
push
sbbb
cld
jbe
arpl
push
insb
test
inc
ret
out
fcomi
lods
mov
movsl
sub
mov
mov
push
pusha
testl
jo
cmpsl
mov
adc
inc
stos
add
dec
aas
cmp
loop
jmp
cmp
lods
insl
and
push
add
mov
fnsave
ds
add
jg
or
inc
inc
pop
rorl
inc
pop
roll
dec
mov
sub
test
push
and
mov
andl
outsb
cmpsl
sbb
sbb
std
jmp
imul
xlat
lret
fidivrl
cmpsl
insl
shrl
mov
mov
jb
pop
dec
pop
fsubl
sub
das
fsubp
les
sub
mov
fadd
adc
jge
sub
xchg
leave
insl
xchg
or
inc
dec
test
jmp
mov
xchg
test
and
lret
jge
jno
fsubp
push
nop
jo
out
mov
jmp
mov
imull
cmp
cltd
movsl
xlat
stos
dec
dec
pop
cmpsl
fidivrl
inc
add
xchg
sbb
stc
sub
cmpsb
aas
inc
mov
imulb
mov
jle
test
jae
dec
push
roll
lds
add
adc
cltd
call
in
andl
or
sub
loop
jb
jl
sbbb
add
add
add
add
inc
sahf
and
xchg
jb
lret
les
or
push
das
pop
push
dec
xor
lret
in
arpl
in
mov
int
sbb
add
cmp
rclb
jmp
push
sub
xchg
dec
fnstcw
rorb
cmp
cmp
and
shll
ret
movsb
add
popa
lea
push
movb
test
or
xor
xor
fdivs
xchg
mov
add
adc
pop
mov
stos
dec
test
popf
sbb
xchg
repnz
loopne
jnp
inc
inc
add
aam
popf
dec
mov
out
pop
cmp
push
dec
push
xor
inc
out
orl
repnz
ret
xlat
adc
insb
xlat
leave
push
mov
mov
cmp
sub
pushf
fdivl
pop
cld
sbb
rolb
or
mov
adc
and
mov
push
lahf
ss
or
adc
call
inc
sub
fnsave
push
shl
adc
bnd
jno
inc
cwtl
jo
pop
mov
mov
lahf
push
push
push
pop
inc
in
sahf
adc
aam
fmull
fiaddl
pop
ss
pop
pop
sub
sbb
insl
dec
xor
and
ja
add
cwtl
mov
dec
pop
testl
nop
loope
int
leave
or
int
mov
fistpl
jge
rolb
xor
push
mov
and
pop
dec
in
call
sub
dec
les
adc
mov
scas
xor
insb
cmpsb
mov
jno
sti
or
sbb
ja
outsb
and
add
mov
rcrb
mov
jmp
cmp
arpl
mov
inc
jecxz
int3
in
fdivl
xchg
xchg
movsl
call
mov
pminsw
mov
xchg
clc
jbe
and
xchg
lods
adc
mov
jg
sbb
ds
cmp
lcall
loopne
lods
outsl
pop
pushf
cwtl
test
jae
adc
xchg
lea
xor
fildl
cmpl
adc
sbb
pop
movsl
adc
outsb
inc
out
shlb
rorl
out
xchg
rolb
repz
in
int3
mov
jno
cmc
imul
mov
in
cmpsb
push
dec
loop
or
xchg
data16
loop
movsb
mov
mov
in
arpl
or
cmc
pop
inc
lahf
xor
xor
jb
es
ror
lret
ja
pop
lret
push
neg
and
jo
or
fisttpl
xor
push
dec
push
sbb
lret
push
mov
push
or
jbe
jg
lods
std
movsb
inc
xchg
sub
jne
icebp
scas
loop
jne
js
pop
stos
add
or
xlat
jnp
xor
dec
xchg
mov
xchg
pop
add
movsb
xchg
sbb
xlat
push
out
cltd
rclb
adc
mov
movsb
loop
cmp
dec
add
push
sbb
inc
and
cs
sarb
xchg
dec
in
xchg
std
leave
int
inc
ja
repnz
push
mov
fistl
sub
jp
cmp
dec
push
incl
sub
jl
int3
test
jnp
lock
fwait
loop
push
push
leave
dec
xchg
mov
leave
stc
xchg
inc
insl
dec
lea
or
std
jp
lods
mov
sub
bound
imul
mov
xlat
xor
mov
cli
mov
mov
movsl
inc
popa
mov
push
mov
pop
les
leave
add
xchg
mov
shlb
lods
cmpsb
sahf
mov
adc
cmp
dec
imul
dec
sbb
ret
imul
sbb
std
loop
int
loope
or
cmp
mov
mov
xor
mov
push
push
dec
pop
lret
in
mov
into
int
xchg
incb
sub
push
add
push
test
cmp
movsb
cmc
aaa
cmpsb
aaa
jnp
cmp
inc
cld
mov
jo
ret
sub
test
lods
push
lods
mov
bound
or
mov
addr16
and
cs
scas
cmp
mov
mov
or
push
in
mov
pusha
dec
jno
loopne
rcl
ljmp
xor
nop
inc
outsb
outsb
mov
cmc
fcmovb
les
cltd
sbb
in
jne
pop
mov
push
movaps
subl
mov
das
adc
add
fcmovnu
out
mov
loopne
pop
xchg
inc
jns
and
jae
push
call
push
adc
imul
pop
mov
mov
mov
ret
or
inc
mov
stos
mov
or
int
mov
fmuls
push
lahf
loopne
adc
jo
mov
cmc
rorb
cmpsb
cs
cmp
in
mov
mov
xchg
jne
mov
cmpsb
sbb
in
fcoms
repz
shlb
pop
aad
add
pop
xchg
inc
push
stc
inc
jnp
enter
scas
or
or
xchg
das
and
jp
push
dec
rol
fdivl
inc
mov
lods
adc
mov
les
outsb
lock
mov
adc
dec
or
and
mov
sub
push
inc
lods
add
test
pop
in
int
cmpsb
or
push
orb
push
jle
cmp
mov
pop
mov
inc
in
dec
cmp
xor
rclb
push
nop
push
lock
mov
es
js
ret
flds
out
adc
out
add
xchg
mul
aaa
sbbb
xchg
cmp
gs
mov
mov
sub
shll
loop
movsl
int
ljmp
jno
jl
cvttps2pi
insl
fwait
gs
xchg
in
insl
imull
sbb
and
jne
aam
jge
fisubl
sti
sbb
mov
fadd
rolb
cld
in
mov
popa
das
cmovae
rcrb
ret
xchg
fcomps
int
lret
mov
mov
testl
ja
movsl
sbb
mov
fnstsw
pop
repz
cmp
cli
fsubl
sub
mov
ss
ret
xchg
addb
jp
out
pushf
stos
jbe
lret
in
outsb
jbe
aam
mov
push
dec
sbb
mov
adc
out
test
ret
dec
loop
jg
pop
aam
imulb
jecxz
dec
scas
sahf
jmp
in
imul
push
ds
rcl
pusha
cmp
sub
xor
fwait
jecxz
addb
aas
push
jp
int
aad
xlat
inc
or
mov
ja
inc
into
push
jnp
cmpsb
shlb
sub
xor
xchg
inc
cmpsb
dec
ret
adc
ljmp
popa
adc
push
xor
aam
fidivl
push
push
test
mov
cmpl
stos
pop
and
nop
mov
leave
aam
pop
orb
repnz
outsl
ds
mov
sub
sahf
icebp
xchg
insb
add
pop
xchg
out
sbb
fs
mov
clc
shll
loope
cmc
inc
pop
dec
cltd
loop
cwtl
sbbl
repz
loope
popl
fldz
pop
xchg
pop
cltd
or
fistpll
rcrb
outsl
sbbl
push
loopne
sar
enter
and
add
push
xor
pop
movb
fwait
push
mov
out
pusha
mov
dec
aam
or
int
sub
divl
out
sbb
or
jge
cs
daa
mov
push
les
add
xchg
bound
fwait
cmpsl
lock
ret
mov
jecxz
cmp
test
sub
iret
insb
mov
sbb
sub
lcall
daa
cld
loop
or
xchg
js
decl
aam
fldl
push
pop
movsl
lret
xchg
pop
out
imul
hlt
and
fsubl
arpl
iret
imul
pop
dec
movsl
cmc
pushf
push
cmpsl
mov
jg
cld
js
sbbb
xchg
inc
push
ds
xor
jae
cwtl
mov
fucomp
inc
sahf
loop
mov
and
xor
mov
xchg
pop
mov
fidivl
mov
lret
xchg
adc
gs
aam
stos
mov
dec
mov
repz
loope
std
push
cli
cwtl
jecxz
jae
mov
sti
xchg
cli
lock
ds
mov
dec
pushf
xchg
mov
xchg
insl
mov
loopne
mov
icebp
shrl
xchg
cli
movsl
xlat
lods
add
stos
cwtl
add
pop
out
ret
mov
fs
aam
pop
bound
pop
movsl
aad
ljmp
lret
push
or
and
cmp
mov
popa
test
scas
jge
lock
xor
lcall
mov
jl
xchg
push
aam
jp
mov
insl
pop
mov
xor
cld
imul
cwtl
jae
pop
mov
int3
adc
test
loop
loopne
scas
mov
cmp
sbb
adcb
fs
and
nop
scas
in
mov
add
cs
test
cmpsl
push
cmc
jns
xchg
pop
stc
push
add
push
into
roll
cld
jno
mov
ss
inc
loop
insl
push
icebp
and
movsl
enter
mov
sub
and
sub
ja
in
and
mov
aam
mov
sbb
xchg
xchg
ret
mov
pop
sub
outsl
dec
inc
dec
or
jbe
jae
int
mov
rorb
cmp
pop
and
lret
pop
xchg
jnp
xor
jb
lods
adc
push
fs
dec
xchg
mov
roll
xlat
jecxz
scas
push
loopne
pop
fcoml
sbb
dec
lods
push
pop
push
icebp
jg
mov
lea
xor
into
not
or
mov
lds
sbb
dec
scas
xchg
inc
lds
ret
ljmp
sarb
mov
mov
mov
int3
sub
pop
dec
jecxz
adc
cmc
ds
sub
push
sub
mov
ds
fbld
lret
or
pushf
sub
arpl
les
lea
push
in
stos
inc
aaa
scas
outsl
sbb
vrcpps
mov
push
lret
pop
xor
sub
pushf
test
mov
popa
idivb
add
sbb
xor
fildl
les
or
jle
pop
rolb
sbb
rol
or
push
int3
push
sub
in
aas
fld
fwait
sbb
push
add
dec
push
ljmp
mov
das
lret
fstl
sbb
xchg
fsubrs
or
xchg
insb
testl
dec
ljmp
pop
sti
pop
out
fwait
mov
sbb
adc
pop
xor
insb
pop
or
hlt
add
out
cmp
in
in
ret
andl
mov
cmpsl
add
leave
sbb
sbb
pushf
xchg
test
push
push
mov
ljmp
xorb
add
and
xchg
dec
fsubrl
push
push
cmp
inc
movsb
mov
cmp
rorb
rclb
ds
xlat
mov
ss
adc
scas
icebp
mov
pop
je
and
shll
inc
fcoml
mov
pop
push
xchg
cmp
insl
and
sub
dec
jmp
repnz
fstpt
mov
sbb
enter
imul
inc
imull
dec
add
add
cmpb
bound
push
xchg
xor
mov
xchg
mov
into
mov
mov
lcall
xchg
pop
pop
or
call
in
xchg
dec
aaa
sub
add
jae
dec
cmp
push
ror
int
jmp
or
mov
dec
inc
insl
xchg
add
repz
nop
repz
imul
leave
pusha
in
add
and
mov
sbb
dec
aaa
aad
addb
frstor
adc
xchg
data16
xor
or
jg
push
or
neg
cltd
lods
lahf
sbb
pop
cmp
add
in
cli
xchg
mov
jbe
and
push
push
repnz
mov
or
cltd
inc
push
out
hlt
sub
sbb
leave
add
pop
stos
loope
mov
xor
shrl
imul
nop
jns
cmp
push
cmp
lret
orb
or
sub
push
pop
loopne
daa
jmp
outsb
pop
jle
adc
test
pop
add
sbb
scas
xor
ret
dec
xchg
sub
mov
imul
arpl
repnz
repnz
pop
xchg
mov
test
jp
mov
rcr
push
out
mov
jno
decl
xor
inc
sub
or
push
sub
lret
test
xor
sbb
xchg
mov
jno
xor
pop
outsb
sub
adc
mov
xchg
cmpsb
xor
and
pop
enter
sub
addr16
in
adc
jnp
mov
orl
jbe
rorb
xchg
stc
aam
xchg
stos
enter
dec
adc
int
jns
mov
sub
shll
jmp
xchg
cmp
push
in
adc
incb
xor
popa
in
enter
mov
mov
push
enter
nop
mov
ficompl
lods
pushf
pop
cli
gs
add
or
imull
test
mov
dec
into
nop
pushf
stos
jle
xchg
inc
cmpsl
jmp
call
pop
xchg
pop
jmp
and
cmpb
add
ja
cmp
clc
ss
or
mov
das
jecxz
das
sbb
and
sbb
sahf
push
jne
mov
imul
xchg
popf
out
dec
add
scas
ret
xchg
dec
divb
add
and
mov
cmp
sub
pushf
test
ds
jnp
mov
cmp
shll
xor
stc
add
mov
inc
adc
aaa
push
mov
data16
sbb
mov
in
dec
das
mov
xchg
mov
sbbl
mov
ret
sti
inc
pop
rol
cltd
cmpsl
jp
test
cmp
shll
mov
add
pop
mov
xchg
mov
add
loope
sbb
int
lcall
push
loop
pop
cmp
add
inc
jne
popa
lret
jbe
aaa
inc
sub
dec
frstor
fdivrs
test
cmc
pop
inc
mov
mov
dec
pop
sub
scas
pop
loop
insl
sbb
pushf
add
sub
ficoml
mov
in
xlat
cs
xorl
pusha
push
cmpsb
rol
scas
and
or
add
add
push
fwait
cltd
cmp
std
in
push
sub
jnp
push
sbb
insl
sub
jo
fadd
jg
sub
push
je
dec
pop
dec
pushl
or
jge
insl
in
adc
dec
cmc
shrb
sub
pop
ficoms
jmp
es
bound
rcr
leave
adc
xor
adc
pop
sbb
cmp
or
pop
adc
out
scas
fcompl
sbb
psllw
ret
mov
cmp
out
cmpl
mov
fimull
pop
cmp
mov
sbb
ret
dec
jne
pushl
cmp
gs
out
push
loop
xor
imul
subl
and
or
pop
inc
inc
or
cmp
pop
lock
fmuls
xchg
rol
lcall
dec
xchg
stc
dec
jmp
verw
sbb
enter
popf
mov
jmp
and
cmp
dec
and
fimuls
scas
in
add
xchg
push
cmp
dec
out
icebp
dec
adc
xor
push
cld
lea
outsl
xchg
add
mov
aas
push
das
ret
add
nop
sbb
repnz
push
mov
add
aam
add
stos
and
mov
cmp
rcll
int
adc
jge
dec
mov
lock
test
gs
mov
imul
test
xchg
add
js
pop
ss
lock
pop
mov
call
or
push
jg
icebp
sbb
xchg
aam
sub
xchg
xorl
inc
push
xor
pop
sub
xor
jmp
jecxz
cmp
les
pop
jg
add
pop
std
lret
and
push
xchg
jns
cmp
aaa
dec
push
test
mov
sbb
mov
sub
test
aaa
push
mov
mov
ret
popf
flds
outsb
mov
and
push
ljmp
add
push
mov
test
xchg
into
sti
loope
rcll
cmp
add
arpl
pushf
push
pop
bound
rorl
in
add
mov
icebp
jecxz
mov
mov
xchg
jb
ret
scas
ficoms
xchg
mov
inc
pop
mov
aam
lds
dec
or
out
mov
daa
in
jns
sub
movsl
inc
scas
jno
cmc
aaa
testb
inc
xchg
add
xchg
pop
shl
add
js
pop
adc
rorb
sti
lret
inc
in
mov
addr16
in
xor
stos
sbb
je
icebp
cmpl
ds
cmp
icebp
out
std
mov
dec
sbb
sub
mov
loop
push
mov
xchg
jne
add
adcb
rcrl
cmp
sub
jmp
fcomip
lock
sbb
push
sbb
pushf
dec
sarb
sbb
mov
push
rorl
addr16
std
lods
cmpsl
cmp
cwtl
cmpb
jb
push
repnz
jl
rcrl
dec
shl
mov
dec
fsubl
jmp
iret
scas
dec
add
pop
enter
movsl
lret
mov
pop
xorl
pop
call
test
call
lahf
ja
adc
adcb
adc
xchg
jne
movsl
pop
xchg
rolb
jno
inc
bound
and
icebp
mov
lea
addr16
or
lods
scas
mov
fcmove
sbb
xor
jecxz
outsb
mov
ja
cmp
shll
push
imulb
jns
insb
stos
jb
cwtl
popa
in
xchg
insl
cmp
xchg
daa
jl
shll
or
adc
out
mov
shr
push
imul
dec
jle
xor
lds
lods
addb
mov
lds
jo
xor
cwtl
inc
and
or
pop
push
push
fisubrl
sbb
repnz
pop
es
sahf
ss
test
lahf
cs
or
sti
cmpsl
mov
out
cmc
inc
pop
mov
dec
cwtl
adc
lret
mov
push
enter
pushf
inc
mov
int3
sbb
adc
insb
or
repz
mov
fdivr
sbb
mov
sbb
enter
out
ret
je
movsb
jo
inc
lcall
loop
ss
jae
push
lock
insb
push
out
mov
jae
inc
movsb
cmp
int3
lock
in
sbb
pop
aas
xchg
sbb
fs
mov
nop
dec
jae
or
popf
sub
mov
inc
je
inc
xor
jae
repnz
pop
into
hlt
rclb
aaa
mov
lcall
mov
mov
in
xchg
add
adc
adc
jnp
jb
push
data16
inc
mov
xlat
lret
movsb
pop
push
mov
ss
jp
div
inc
xchg
pop
pop
es
das
xchg
cmp
call
iret
mov
inc
pop
daa
das
test
lret
js
adc
inc
mov
movsl
insl
add
lods
sbb
push
pop
popa
imul
test
dec
imul
xlat
jb
lock
sbbb
jge
push
xchg
aad
jnp
pop
out
xchg
sbb
mov
add
std
sbbl
enter
jl
xor
or
mov
or
pop
push
push
adc
shrb
inc
fs
inc
and
arpl
into
push
popf
xchg
cli
test
test
test
arpl
dec
pop
lret
sub
pop
mov
enter
sub
test
push
subl
fstl
add
popf
data16
mov
adcl
fwait
test
push
adc
sbb
ret
pop
jl
dec
push
xchg
daa
icebp
sarb
sub
mov
push
lcall
mov
fidivrs
in
out
leave
pop
jge
dec
movq
mov
add
nop
xchg
pusha
aas
jp
adc
pop
push
out
sahf
sarl
mov
or
mov
iret
dec
cltd
adc
and
push
inc
aam
mov
insl
jo
stc
mov
scas
fstps
lods
or
jne
adc
xchg
or
mov
mov
pop
mov
add
mov
fidivrl
out
insl
add
jp
sarb
adc
test
pop
inc
lret
jle
adc
scas
cmp
mov
and
outsl
add
push
ss
stos
or
inc
pusha
roll
push
mov
jo
mov
adc
mov
mov
sbb
xor
dec
mov
fxch
int3
adc
imul
xchg
sub
xor
shlb
cmpsb
enter
inc
mov
sub
push
fnstsw
xor
cmp
and
sahf
jmp
and
push
xchg
clc
sbb
ss
lock
mov
push
popf
negl
dec
fwait
std
pushf
push
inc
xchg
jge
cltd
push
inc
cs
fsts
pop
stos
lret
hlt
lods
enter
lret
sub
mov
xlat
mov
sub
mov
lods
lret
push
jbe
dec
or
jmp
dec
in
subl
hlt
inc
scas
add
sbb
pop
cmovne
aas
push
cmp
mov
lods
jp
cmp
cld
fcmove
imul
pminsw
fmul
mov
insl
cmp
shrb
test
and
pop
xor
pop
xchg
fisttpl
inc
mov
dec
inc
adc
adc
mov
and
mov
imul
sub
in
in
jbe
ds
dec
pusha
cli
dec
jl
pop
push
data16
dec
adc
addr16
outsl
and
in
jg
sti
aad
mov
dec
adc
xor
or
xor
adc
ret
mov
or
popf
inc
adc
imul
lods
icebp
and
lods
cs
or
xlat
sub
out
repz
add
dec
aam
sub
stos
add
adc
dec
inc
mov
mov
push
dec
pusha
out
xchg
scas
cmp
ret
cltd
es
icebp
jno
sub
adc
adc
and
or
mov
int
popa
cmp
lds
das
jb
mov
lcall
enter
out
add
adc
mov
add
jecxz
xlat
xchg
xor
sub
inc
hlt
cmc
je
lds
jns
mov
int
push
aaa
fisubs
xchg
sub
loop
dec
stos
xor
in
fstp
push
andl
outsl
cmpsb
xor
div
repz
adc
fs
sarl
xchg
cwtl
cmpsb
ja
scas
stc
adc
xchg
mov
mov
mov
jp
aad
shl
add
testb
shll
std
xor
mov
pop
sbbl
inc
cmpsl
lcall
push
movsl
mov
jle
sbb
rorb
in
bnd
inc
enter
sbb
imul
cmp
cmp
dec
nop
out
fisubrl
xor
call
into
test
inc
aas
mov
pop
out
cli
xor
jl
cmc
int
xor
mov
pop
sbb
and
xchg
inc
ljmp
push
adc
xchg
rolb
es
or
inc
shrl
pop
nop
mov
mov
ret
sub
dec
and
fcoms
and
stos
jo
dec
and
cld
pop
jecxz
lahf
sarb
mov
fistl
test
ror
cs
add
dec
adc
out
xchg
mov
cmpsl
cmp
xchg
dec
in
mov
les
in
test
jnp
mov
sub
add
repz
ror
dec
mov
loopne
jp
inc
pop
sbb
dec
in
dec
pandn
cmc
adc
inc
push
je
insl
dec
outsb
xor
inc
insb
mov
ljmp
sub
xchg
dec
bound
int
inc
dec
loope
pop
out
mov
popa
sahf
pop
arpl
jmp
add
jb
pushf
fistpl
and
out
fisubs
inc
mov
adc
es
notl
xchg
cmpsl
sbb
test
fisttpll
inc
movsb
jl
and
insb
and
push
cld
mov
dec
in
xchg
mov
jmp
inc
xor
fs
aad
stos
push
test
or
ss
imul
mov
add
sbb
and
test
pop
rcl
sub
movb
fdivl
mov
js
xor
sub
dec
adc
xor
stc
sub
fcmovb
cmpsl
fsubrs
push
and
sub
inc
popa
xchg
enter
cltd
filds
push
pop
xchg
cmp
push
jnp
mov
or
jo
or
int3
sbb
nop
jb
xchg
sahf
test
adc
cmpsl
xchg
das
idivb
jmp
mov
pusha
aad
sbb
mov
or
and
repnz
shr
xchg
loopne
fnstcw
pushf
cmp
sbb
inc
push
bnd
repz
mov
xor
fildl
outsl
fiaddl
or
pop
data16
push
pop
sub
aas
lahf
popl
cs
mov
jle
cmp
add
cmpsl
xchg
mov
or
out
ret
dec
aam
jecxz
pop
imull
dec
jp
push
mov
out
fld
jecxz
movaps
push
inc
rcll
cltd
fwait
mov
cmp
leave
mov
pop
int3
icebp
add
xor
shlb
clc
ja
addl
lcall
jmp
cwtl
xchg
mov
shr
movsl
jp
das
or
sub
push
dec
lahf
imul
ret
idivl
mov
test
xor
adc
gs
aas
xlat
pusha
pop
cld
mov
jo
xchg
xor
jne
push
adc
loope
sub
adc
lea
pop
outsl
mov
cs
sub
fbstp
xchg
push
rorb
xor
cmp
push
jl
imul
aaa
jp
and
cmc
sub
es
cld
xchg
cmp
xlat
jne
outsl
js
loop
loopne
fildll
sbb
icebp
xor
inc
shl
pop
fisttpll
pop
xor
mov
pop
or
or
sarl
pop
aaa
test
pop
jmp
inc
cmp
xor
jge
add
push
arpl
andl
mov
imul
aas
mov
push
sub
pop
movsl
add
xchg
lea
pop
adc
iret
xchg
add
daa
sbb
xchg
xchg
add
xchg
lret
nop
frstor
stos
jb
mov
xchg
mov
daa
push
pop
inc
cmp
int3
jmp
sub
mov
push
int
dec
adc
add
repz
add
sbb
test
mov
xor
ljmp
inc
pushf
dec
pop
iret
mov
fisttpl
pop
daa
mov
loopne
shlb
mulb
or
stos
enter
sbbb
lds
aam
cmp
push
dec
or
fsubs
gs
mov
inc
gs
jl
xor
shl
xor
sub
dec
ret
gs
push
mov
aaa
adc
xchg
js
xchg
cmp
or
push
dec
jne
and
jbe
shll
lret
testl
or
popa
mov
inc
sbb
sbbb
stos
nopl
in
jle
mov
push
sbb
sti
mov
movsb
jb
pop
movsl
xor
xor
sbb
ret
inc
in
enter
int
mov
stc
imul
lret
pop
mov
or
xchg
lods
mov
xchg
subl
lds
adc
push
std
ret
xchg
cmp
push
cld
lds
xorl
in
lods
ret
dec
add
out
popa
mov
into
cmp
cmp
ds
addr16
in
jne
les
adc
dec
sub
fwait
in
stos
stos
daa
cwtl
fadds
ret
mov
jae
sti
or
xchg
shrl
push
jnp
jnp
add
aad
jb
xchg
gs
push
cltd
jnp
stos
or
sahf
ret
xor
cmp
xor
lea
dec
dec
push
adc
ljmp
dec
cmc
cmpsl
or
sbb
ja
or
ds
sub
push
mov
and
lods
adc
mov
xor
scas
push
cs
xchg
inc
call
push
gs
scas
jecxz
jp
inc
je
ja
push
jecxz
cltd
push
pop
fisubl
ljmpw
add
fstpl
push
or
xor
test
call
dec
xor
adc
inc
mov
in
insb
jl
fwait
push
ret
mov
jle
dec
imul
sub
jns
fistl
movsl
xchg
sbb
lds
imull
xchg
clc
inc
mov
sub
pop
mov
and
sbb
jge
fisubl
mov
sahf
dec
add
icebp
cmp
fcomps
icebp
mov
out
jo
inc
gs
sbb
sbbb
xchg
fimull
push
sub
or
mov
in
mov
out
mov
sub
test
add
stos
sub
mov
add
inc
or
add
enter
push
in
pop
dec
fildl
insl
lods
push
dec
xor
mov
push
cltd
mov
and
xlat
icebp
fists
cs
pop
lock
shll
dec
and
jo
mov
lcall
fwait
mov
cmpsb
inc
loop
lods
mov
fcmovnb
add
shlb
gs
or
push
mov
dec
divl
mov
lock
int3
push
xchg
mov
xor
xor
notl
or
lock
stos
add
int3
pcmpeqb
add
bswap
shr
inc
mov
in
sbb
adc
cltd
int
xor
add
std
mov
mov
inc
fildl
xor
mov
call
adc
stc
mov
add
lar
or
or
mov
stos
mov
movsb
add
mov
aad
push
popa
sbb
lcall
into
popf
outsb
mov
adc
subb
inc
push
hlt
scas
push
pop
mov
sarl
out
cmpsl
push
xlat
shlb
xorb
cli
mov
cmpsl
add
cmp
push
or
lods
xor
lret
mov
sti
sar
imul
fnstcw
mov
in
push
stc
shlb
and
mov
jns
fnstcw
inc
loopne
push
cld
aad
pop
stc
push
test
pop
mov
xor
popa
outsl
cmpsl
add
popa
xor
push
pop
pop
mov
push
pusha
xchg
and
adc
lods
inc
xchg
push
xchg
std
cmp
fdivs
dec
stos
ljmp
or
jo
loope
dec
push
inc
mov
push
int
lea
and
repz
pop
shrl
popf
mov
loope
cmp
dec
mov
pop
jge
mov
lds
mov
dec
jmp
inc
cmp
lahf
inc
sbb
add
incl
insl
mov
pop
loope
mov
add
dec
or
out
nop
dec
fstps
in
pop
adc
outsl
aas
loope
bound
cmp
pop
rcll
or
popf
adc
fcompl
test
or
lret
popf
fs
lea
repnz
lea
jb
jae
shlb
out
mov
xchg
nop
lock
cltd
jb
fwait
icebp
aaa
fcoms
push
xchg
push
lret
imull
push
mov
xor
popa
xlat
rol
test
and
mov
mov
outsl
jne
sub
pop
xor
pushf
mov
js
jg
jge
jg
sbb
pop
mov
xchg
hlt
fcmovnbe
int
cs
sbb
repnz
sub
mov
popl
movsb
xchg
xor
pushf
imull
insl
sbb
andl
lods
inc
inc
popa
inc
xchg
pop
jl
shrb
dec
mov
or
cmp
xchg
iret
call
hlt
mov
fcmovu
in
cmpsb
loopne
testl
aam
cmc
popf
pop
xchg
mov
je
xchg
sub
jno
inc
jge
cld
adc
ss
ret
es
push
aas
xchg
xchg
aad
push
add
xchg
sbb
test
sub
mov
mov
add
fcoms
outsb
and
das
scas
inc
ss
jp
xchg
mov
sbb
pop
cwtl
aaa
xchg
sbb
in
xor
out
cwtl
aas
aam
mov
je
push
std
movsb
push
xchg
jmp
int
imul
and
pop
loopne
clc
jnp
inc
addr16
insb
sub
sti
sbb
jns
cmp
or
and
loop
mov
jae
xchg
mov
gs
stos
das
pop
rorl
es
push
mov
xchg
mov
lock
pusha
loop
push
int3
in
test
lods
ror
loop
movsb
in
call
lret
imul
loope
leave
xchg
pusha
and
xchg
sub
sbb
xor
clc
inc
addr16
pop
addl
pop
mov
push
addr16
pop
adc
push
xchg
xor
shlb
add
scas
sub
inc
sbb
cld
test
stos
push
ss
mov
cmpsb
adc
xchg
imul
rcr
sub
push
int3
aaa
icebp
jo
xor
or
lahf
inc
push
jge
and
mov
lock
call
addb
cmp
add
add
out
lock
jae
adc
pop
xchg
out
pop
inc
cmpsl
add
jmp
or
mov
fdivrp
or
in
xor
iret
inc
and
or
xchg
shrb
xchg
leave
push
or
inc
push
lock
test
cltd
jne
push
shrl
ss
lahf
xor
add
pop
ret
xor
rcl
mov
adc
dec
sub
or
rcrb
loope
jb
adc
add
dec
loopne
adc
test
mov
xchg
or
pop
mov
sbb
jg
cltd
negl
aad
mov
js
mov
jb
cmp
sahf
in
fsubs
sbb
das
in
outsb
adc
cmc
add
pop
jb
lahf
fnsave
test
add
cltd
xor
pop
inc
push
pop
addb
xor
cmp
mov
sahf
cmpsb
mov
dec
add
imul
dec
mov
in
sub
or
xor
mov
mov
jmp
cltd
inc
cmp
idiv
xchg
loop
cwtl
rol
jno
inc
pop
xor
cmovns
call
mov
adcb
aas
out
adc
mov
and
and
xor
imul
mov
xchg
loopne
dec
push
popf
lds
mov
aaa
fildll
xchg
mov
sub
cmp
cmp
adc
rolb
cli
mov
movsb
jno
lock
outsb
insl
pop
pop
pop
adc
mov
sbb
xchg
mov
mov
mov
out
jo
scas
mov
adc
insl
lds
negl
jle
or
cmp
cltd
adc
pop
jecxz,pn
mov
push
lea
push
setne
and
push
mov
adc
mov
pop
and
pop
aaa
dec
fsubs
test
add
je
push
and
pusha
and
jmp
jb
pusha
pminsw
inc
jne
clc
addr16
icebp
jo
out
pop
ret
in
mov
lcall
pusha
jge
arpl
mov
mov
or
inc
outsl
fwait
out
jae
ficompl
push
jl
cmp
and
jmp
push
sarl
in
push
xchg
test
sub
inc
add
jns
aaa
push
sbb
shrl
aam
iret
out
stos
xchg
cmp
cmpsl
or
nop
cmp
mov
pop
mulb
inc
dec
fwait
pop
test
lcall
into
int3
daa
pushf
push
jne
and
shl
mov
jg
pop
lods
adc
pop
clc
into
fbld
addr16
ja
shl
and
xchg
push
vmulss
mov
stc
scas
xor
jo
enter
or
cmp
in
rclb
push
inc
es
jecxz
jae
nop
inc
adc
ds
sbb
sbb
dec
pop
hlt
out
or
mov
mov
je
push
fsubl
add
xor
out
fisttpll
daa
pop
sbb
push
int
dec
stos
pop
or
aaa
jg
insb
and
xor
sarl
ja
cs
mov
jge
pop
push
outsl
cld
jmp
sub
insl
aad
incb
xor
add
sbb
std
loope
fisttps
dec
push
int
xchg
cmpb
aam
push
insl
enter
jmp
mov
adc
incb
sub
call
mov
add
or
pop
int
xlat
jg
loope
mov
in
xchg
inc
mov
dec
add
jnp
sbb
testb
jmp
shl
xor
xchg
pop
das
enter
outsb
in
xchg
lock
bound
dec
jns
enter
aaa
jne
cmp
sti
cmp
notb
inc
cmp
mov
pop
rcl
pushf
aam
jecxz
out
outsb
cmp
or
addr16
lahf
ds
jno
movl
jmp
es
dec
or
mov
imul
int3
jl
insb
stos
xor
out
leave
lret
imul
mov
xor
or
dec
add
mov
lret
dec
sbb
sub
rcr
xorb
mov
dec
jl
pop
xor
stos
mov
ja
sub
in
sub
das
jo
sar
out
pop
inc
int
fimuls
sbb
sbb
js
xchg
dec
fimull
mov
pop
lods
pop
rcrb
xor
lss
inc
mov
js
cltd
ret
iret
inc
je
jl
mov
mov
movsb
jp
shl
fcomi
xchg
movsb
pmullw
aas
pop
in
inc
push
mov
mov
xor
add
dec
push
fwait
push
jbe
aas
repnz
sbb
enter
in
xor
pop
add
or
out
loop
or
shlb
lahf
xchg
inc
aam
xchg
rcrl
fisttps
push
aaa
inc
sbb
cld
clc
fstpl
addb
aam
xchg
push
mov
jge
shrl
dec
fmull
or
inc
add
pop
xchg
mov
loope
lds
push
xor
inc
bound
xchg
jge
adcl
popa
fisttps
aaa
nop
mov
inc
cmp
insl
sahf
push
addr16
add
add
xor
arpl
dec
mull
daa
mov
mov
jmp
fxch
int3
loopne
mov
rorl
mov
adc
or
mov
shlb
mov
sti
fstpl
cs
ficoms
xchg
ret
inc
test
pop
out
lea
inc
xchg
fiaddl
mov
or
and
pop
stos
or
ja
push
pop
push
movsb
sahf
xor
jb
ds
inc
cmpsl
mov
cmp
test
push
push
sbb
aas
inc
pop
test
ss
and
std
push
mov
xor
out
mov
jle
rol
and
mov
inc
rcl
lret
adc
add
pop
push
inc
subl
jns
movsl
ja
stos
pushf
push
fwait
sub
push
mov
pop
dec
sahf
clc
les
faddl
pop
dec
jl
data16
cmpb
popf
rcrl
fadds
lods
jg
out
ror
das
or
movsb
adc
sub
jp
dec
xchg
fdivl
pop
inc
sti
adc
sbb
mov
in
mov
pushl
rcrb
ss
jns
in
mov
push
xlat
lds
sub
mov
lea
sub
sub
mov
inc
insl
movsb
clc
insl
push
add
sti
cmp
dec
outsb
dec
mov
cmp
loop
enter
mov
test
aad
sti
jns
out
mov
mov
mov
ret
mov
sub
jbe
fidivrs
fistps
adc
inc
loope
gs
test
sbb
fdivs
inc
ja
outsl
ja
jne
je
xchg
nop
lock
in
loopne
cmp
fisttpl
nop
add
inc
mul
pusha
hlt
pop
imul
fwait
out
adcl
xor
xchg
lock
cltd
lds
jmp
or
imull
cmp
dec
jne
outsb
jne
xor
xor
xor
fldl
daa
cmp
pop
lcall
lods
sbb
inc
dec
add
cmp
fsubrp
sbb
pop
sub
das
adc
das
adc
mov
sbb
mov
in
mov
stos
or
dec
and
bound
arpl
scas
push
outsl
ja
add
pop
sub
mov
dec
fldenv
cmc
repz
push
cltd
nop
fldenv
in
push
ret
jnp
mov
shrl
repnz
dec
inc
ds
xrelease
lods
pop
aas
jb
repz
loopne
subb
scas
mov
mov
stos
mov
aad
mov
mov
or
and
fsubl
mov
add
add
jb
pop
xor
add
out
in
pusha
sub
mov
pusha
sbb
and
push
imul
push
mov
mov
rolb
cmp
or
pop
or
in
lret
outsb
pop
pop
sbb
test
out
popf
or
push
pop
out
stos
cmc
mov
sbbb
stc
add
shrb
outsb
cwtl
mov
sbb
jg
ja
dec
mov
inc
push
pop
das
mov
sub
arpl
aam
mov
imul
int3
push
loope
adc
add
pop
jb
xchg
xchg
in
enter
das
call
scas
or
into
shlw
adc
jae
iret
sbb
outsl
pause
outsb
fistpl
mov
mov
jne
mov
sub
aaa
push
xor
mov
cs
mov
and
dec
loop
push
ret
and
or
mov
jae
push
xor
outsb
sbbb
jne
pop
psubq
lret
adc
mov
jo
ljmp
sbb
pop
jno
mov
dec
cmc
inc
shrl
repz
mov
push
aaa
and
lret
insl
js
jp
or
jno
cmp
fstpt
and
adc
lock
scas
add
lret
jmp
add
cmpsb
xor
jae
sti
mov
fbld
ss
xor
mov
movsb
outsl
or
roll
enter
stos
jge
lock
push
aad
mov
pushf
push
int3
sub
ds
mov
lock
lahf
mov
adc
in
or
cmp
xchg
xchg
push
rcrl
ret
nop
xchg
and
repz
enter
decl
imul
mov
imul
xchg
push
arpl
xchg
pop
pop
sub
scas
lahf
mov
ret
pop
push
mov
inc
xchg
int
andb
or
in
pusha
dec
inc
xor
mov
movsb
push
mov
leave
sbb
rcrb
loope
ret
adc
jb
mov
int
lds
pushf
jne
xor
mov
ljmp
aam
jno
mov
add
sbb
stos
and
sub
fidivrs
push
or
jb
mov
loopne
fmull
xor
loopne
or
dec
into
out
add
in
xchg
insb
cmp
push
scas
or
mov
pop
fwait
lods
ja
jecxz
pop
adc
test
or
rcl
imul
bound
jp
fwait
sarl
inc
andl
push
cltd
cltd
pop
jns
push
les
push
cmpsl
mov
in
shll
mov
inc
in
xchg
rcrl
call
rclb
shrb
mov
daa
adc
lods
xor
lea
shlb
push
jns
psubw
xchg
fst
jo
sbb
lret
xchg
inc
sub
jb
or
cmp
mov
xor
sbb
pop
sbb
std
mov
xor
cmpsb
sub
jecxz
cmp
ffree
fnstsw
in
pop
pop
movsl
xchg
adc
adc
mov
mov
adc
ret
or
sub
adc
sub
jae
mov
push
or
dec
push
adc
dec
enter
sbb
sub
mov
jmp
pop
dec
or
ja
clc
stc
fcoml
fnsave
shl
outsl
shrb
push
cmp
push
push
into
mov
fstpl
iret
popa
mov
and
into
mov
xchg
cmp
scas
cmpsl
mov
inc
fsubr
sub
mov
ret
xor
mov
cmp
sub
pop
mov
ret
push
sbb
mov
jns
insl
cmc
sbb
jae
pushf
push
add
adc
jmp
xor
mov
js
mov
dec
jns
xor
pop
xchg
mov
push
mov
and
mov
push
sub
nop
mov
dec
cltd
and
add
ja
mov
lods
mulb
sub
sub
int
out
jno
popa
xlat
cmc
nop
mov
push
mov
sahf
lods
jbe
imul
iret
andl
aam
movb
icebp
scas
and
shl
arpl
adc
jmp
stos
dec
bound
add
lods
fistpll
pop
int3
mov
inc
sub
jge
sub
fdivl
push
sub
in
fucomi
shrb
insb
lea
sub
sbb
andb
mov
insb
lds
pushf
aaa
ds
mov
mov
adc
xchg
inc
inc
sub
scas
int
push
and
in
sub
int
lret
pop
test
fnstsw
in
mov
je
aaa
movsb
jb
pusha
jmp
orl
sub
cwtl
in
loopne
es
inc
mov
sbb
pop
imul
iret
cmpsb
and
adc
filds
sarb
arpl
push
mov
and
das
movsb
pop
xchg
int3
loope
repnz
jno
loop
aad
adc
sahf
jle
lds
inc
clc
push
xchg
add
cs
out
dec
test
pop
jo
mov
fimull
xchg
sbbb
or
push
sarb
xchg
push
lcall
push
fistl
test
rcrb
mov
or
lret
fwait
hlt
pop
pop
add
dec
test
mov
mov
mov
cmp
sub
jle
push
cli
cmp
jnp
push
push
stos
fcmovnb
lds
mov
shll
fnsave
fcomp
inc
xchg
dec
push
subb
iret
repz
or
iret
cmp
cmpb
mov
cwtl
cld
jae
je
sub
lods
mov
mov
mov
fcompl
les
out
pop
jge
and
and
jl
out
aaa
mov
int
call
notb
mov
popf
int
sti
jp
fstpt
mov
xchg
cmp
mov
and
loope
push
int
out
stc
cmp
lds
jae
xlat
xchg
sbb
or
nop
in
or
inc
add
dec
out
inc
xchg
mov
push
push
mov
xchg
jle
negb
insb
cmp
xor
jmp
dec
call
cs
mov
add
ror
and
push
pusha
sti
jns
push
sbb
rorl
addr16
or
bound
dec
fnstenv
add
xor
adc
fs
div
in
or
out
icebp
jmp
mov
int
mov
mov
int3
fstpt
dec
pop
inc
pop
adc
push
cwtl
gs
mov
xor
test
stos
out
sub
adc
mov
jae
jecxz
insl
jne
in
lods
cmp
push
add
fcmovb
inc
dec
test
sub
es
int
enter
test
push
lds
push
pushf
mov
inc
xor
add
in
and
icebp
ret
adc
and
out
jmp
mov
sbb
cmpl
or
das
cmp
fistpl
mov
nop
dec
sbb
jmp
push
ret
add
cmp
popa
shll
jmp
sbb
cmp
sub
in
decb
pop
sahf
sbb
pop
arpl
test
lods
push
sub
inc
mov
mov
cld
shlb
out
nopl
fbstp
imul
imul
xchg
dec
pop
inc
lea
xlat
xchg
outsb
push
mov
mov
lds
dec
and
xchg
rorb
outsb
jbe
test
fildll
mov
vpsubsw
pushf
aaa
mov
gs
fidivs
mov
or
shll
leave
adc
jmp
and
xchg
popa
jecxz
int
add
or
and
aam
in
cld
insb
into
int
cld
xor
in
repnz
add
xchg
out
lahf
xor
sahf
icebp
insl
pop
popf
mov
negl
aas
pop
pop
jg
lods
adc
out
or
dec
mov
es
adc
rclb
bound
fisttpl
jge
pop
adc
mov
fisubrs
jmp
dec
sbb
lock
imull
and
adc
loop
mov
arpl
mov
rcr
sbb
sbb
jne
mov
das
cmp
fs
jl
rorl
in
sub
jnp
jnp
mov
inc
test
and
pusha
inc
push
inc
pop
sbb
inc
popa
jg
cmp
nop
pop
push
sbb
adc
push
sbbb
xor
mov
xor
push
int
and
jg
xor
sub
adc
jp
out
insl
out
mov
repz
mov
mov
adc
insb
and
mov
test
sahf
negl
dec
in
test
out
pop
push
dec
aas
fsubl
mov
ljmp
aaa
cmpb
sti
adc
pop
int
inc
xchg
subl
add
cmp
mov
mov
hlt
xchg
ja
aaa
xor
or
cmp
push
push
mov
int
paddb
push
jmp
cmp
xchg
movsl
lock
cmp
iret
pusha
fistps
mov
ja
sub
negl
mov
pushf
hlt
add
sbb
lcall
pushf
lock
xor
in
inc
inc
test
and
or
cli
scas
sub
xor
adc
mov
cwtl
lock
test
cmpsl
push
into
push
adc
int3
xor
push
and
inc
mov
and
stos
or
aam
movsl
out
mov
in
fdivl
cmp
mov
mov
mov
xchg
fidivrs
jae
sti
gs
and
sbb
xchg
sahf
xchg
gs
add
jb
mov
mov
cmp
in
adc
outsb
leave
pop
shlb
xor
inc
sbb
icebp
je
cmp
and
insl
test
pop
mov
add
xchg
inc
sub
pop
je
inc
lock
sbb
iret
pop
xlat
in
lods
xor
cmp
cmp
cwtl
add
outsl
push
dec
inc
push
mov
jge,pn
and
cmp
cld
pusha
aad
les
and
ret
or
ret
mov
inc
movsl
pop
inc
pop
mov
fstpt
sub
sub
jo
inc
adc
mov
lretw
dec
jns
sbbl
mov
xchg
xor
cld
sub
dec
leave
aaa
in
push
shll
decl
jae
dec
or
fsubl
or
jbe
push
fistpll
cmc
sbb
xchg
lds
pop
mov
pop
mov
inc
lds
push
lret
jnp
push
ret
xor
dec
mov
idivl
scas
add
out
push
sbb
lods
sbb
add
outsl
dec
inc
pop
push
cli
sti
cmp
insl
sub
mov
push
jbe
outsl
pop
sbb
decb
jne
icebp
and
nop
addr16
xor
mov
lret
inc
mov
xor
dec
push
call
ficoml
fisttpll
mov
xor
je
cmpsb
or
jg
xchg
sbb
pop
cltd
call
leave
dec
adc
aam
mov
rcr
mov
mov
cli
subl
jns
push
sbb
gs
jmp
mov
dec
jnp
int3
push
xchg
mov
xchg
sub
fcmovnbe
insl
cmp
hlt
sub
out
and
pushl
pop
and
scas
sub
imul
xchg
mov
dec
sahf
jl
push
shl
lods
jne
mov
mov
aam
aam
push
mov
push
jle
imul
paddq
pop
jne
pop
ljmp
add
mov
lret
loopne
cli
xor
pop
pop
sarb
aad
mov
test
pushf
addr16
inc
iret
cmp
add
stos
test
and
notb
dec
pop
test
jmp
dec
insb
sti
cmp
xlat
and
and
sub
cmc
pop
xchg
adc
test
jb
adc
push
ret
cld
push
sbb
lret
ffree
adc
mov
sbb
pop
add
cmp
nop
lods
inc
pushf
lods
arpl
adc
mov
movsb
pushf
insl
je
ret
fsubp
dec
int3
bound
test
nop
jmp
jl
xchg
or
sbb
aam
inc
pop
inc
add
sub
leave
push
icebp
sarb
fmull
cwtl
outsb
or
adc
lods
mul
inc
fsubs
xor
imul
fbstp
xchg
and
movsb
dec
leave
setle
fs
stos
mov
mov
adc
rcll
std
push
mov
push
mov
jno
dec
inc
out
dec
jae
push
or
mov
pop
cmp
mov
sub
lock
inc
jl
xchg
adc
inc
fwait
xlat
add
insb
mov
rol
cltd
xor
in
mov
push
pushf
ljmp
jne
and
fstpl
push
in
pop
sbb
sbb
mov
stos
js
rcrb
mov
popa
dec
cwtl
dec
pop
inc
fbstp
sbbb
cmp
mov
pop
dec
insb
outsl
fmull
push
jg
aas
call
orb
fmull
xor
sub
adc
or
adc
arpl
xor
loopne
add
mov
mov
mov
push
inc
sub
mov
cmpsb
shrl
mov
sub
popf
push
aad
lods
sar
xor
notb
or
adc
fwait
push
int3
inc
xchg
stos
push
das
mov
fimull
ror
dec
mov
lds
adc
pop
mov
jl
adc
mov
pop
jno
stc
fwait
or
cmp
push
adc
dec
addr16
pop
mov
xchg
or
ss
sub
xchg
pop
mov
dec
sarb
mov
jns
xlat
inc
stos
sub
cmpsl
rcrl
movsl
jmp
xor
or
mov
les
cmp
lods
push
mov
jns
pop
loop
and
cmpsb
cmc
cmp
aam
dec
scas
inc
pop
ds
sub
mov
in
insl
int
std
fdivrs
ret
fidivrs
ss
jecxz
and
cwtl
stos
lahf
pushf
jo
ss
cmp
std
fisttpll
dec
xor
xor
aam
pushf
push
lds
dec
lods
mov
add
cld
mov
jns
aad
aam
outsb
inc
cmp
lcall
push
fnstsw
negb
jge
in
pop
fwait
sbb
rcll
ja
movsb
lock
cmp
movsb
cli
aad
pop
add
add
scas
push
rcr
sti
arpl
xor
push
mull
sub
mov
in
jmp
scas
add
test
andl
loop
push
inc
ret
add
leave
jne
jge
mov
push
xlat
xchg
and
setne
jae
daa
adc
sbbb
dec
jo
cld
jp
in
inc
imul
shrl
sub
sbb
dec
mov
sub
jle
mov
lock
mov
stos
sbb
cs
sbb
xor
jbe
cmpsl
adc
adc
stos
inc
mov
mov
mov
test
scas
pop
arpl
or
dec
mov
mov
push
andb
idiv
lcall
inc
aad
push
js
dec
cltd
jle
out
sub
in
xchg
out
shrl
push
mov
mov
icebp
loopne
xchg
push
dec
in
xchg
mov
xorb
aaa
push
xor
orl
inc
jnp
mov
cs
test
jmp
mov
test
and
pop
pop
mov
or
sbb
jo
fnsave
adc
fs
mov
sbb
adc
in
sbb
jp
fimuls
stos
ja
xor
mov
ss
dec
gs
aaa
mov
add
shlb
fsubrl
sbb
pop
jl
mov
call
add
mov
xchg
sahf
in
leave
mov
lea
cmp
push
mov
sar
and
cmpsl
in
and
loop
lahf
jbe
rcrb
sbb
test
fists
enter
sbb
push
sbb
int3
jecxz
fmull
hlt
xchg
xchg
cmpsb
pop
jl
aad
sub
sarb
mov
push
push
sbb
mov
mov
and
test
js
and
adc
cmp
pop
sub
call
jne
lcall
dec
popa
dec
outsl
push
sub
pop
mov
scas
pop
dec
xchg
sbb
shlb
mov
bound
rcrl
sbb
pop
insl
mov
outsl
sbb
adc
add
in
mov
or
orl
mov
ret
in
fldt
mov
cld
cld
rcrb
scas
sbb
inc
pusha
push
push
imul
push
add
jmp
aam
push
pop
call
mov
xchg
subb
lock
stc
xor
aam
and
mov
icebp
pop
cwtl
mov
jge
daa
stos
in
jbe
mov
mov
pop
adc
daa
inc
ds
sub
cmp
jge
lahf
mov
cmp
sub
insb
loope
push
sub
inc
sbb
shl
adc
pop
loop
mov
mov
enter
pop
insl
repz
push
pop
push
and
mov
xchg
inc
mov
sahf
popf
adc
ds
into
int
xor
popf
ret
mov
xchg
test
sahf
aam
mov
pop
aaa
push
fs
scas
jmp
push
sbb
in
nop
push
cmp
mov
lahf
and
test
push
scas
rcrl
arpl
cmpsb
jb
subl
repz
fimull
cltd
loope
popf
lret
jno
fcom
cmp
jne
mov
cs
call
add
loope
lods
cmp
pop
outsl
repnz
sahf
pop
xchg
ljmp
push
aaa
xor
lret
repnz
adc
xchg
cmp
mov
rcr
sbb
and
jmp
adc
repz
ja
fwait
ja,pt
push
inc
xor
push
scas
xor
inc
mov
mov
fnsave
idivb
add
call
sarb
pop
mov
shll
and
and
mov
sub
sub
movsl
repz
jp
adc
jecxz
mov
ss
and
jp
adc
add
imul
addr16
add
into
add
xchg
mov
enter
mov
lret
ficompl
jb
out
cmp
xor
xchg
mov
jmp
fsubp
je
andb
loope
xor
iret
clc
cmpsl
clc
inc
pop
and
fwait
in
dec
fcoml
add
add
add
sar
call
leave
cmp
jmp
dec
xlat
nop
lret
rcll
int3
sbb
cltd
xchg
push
mov
in
repz
inc
pop
jge
ds
enter
dec
lret
incl
push
mov
or
and
cmp
or
jmp
inc
cmp
fucomip
data16
push
inc
lret
daa
mov
gs
mov
dec
mov
inc
stos
mov
mov
mov
shl
aad
rcll
sti
push
xor
mov
dec
ss
int
out
in
iret
in
adc
xor
sbb
jmp
test
cmp
jle
pop
mov
add
iret
push
pop
xor
mov
xor
jle
orb
daa
mov
ds
or
sbb
pop
hlt
repz
daa
pop
mov
int
insl
mov
stos
jmp
xchg
inc
lret
and
test
sub
jmp
rorb
lods
add
push
loopne
xchg
or
push
jl
out
not
push
call
or
ljmp
lahf
push
aaa
fstl
mov
xor
pop
and
roll
lcall
xchg
cmp
sbb
jge
subb
fdivr
stos
cmp
fwait
cmp
push
nop
xor
insb
xor
push
inc
cmpsb
push
in
pop
sub
mov
cmp
sbb
add
xor
pop
pop
fadd
mov
cmp
dec
repnz
imul
frstor
lret
lock
pop
jecxz
fnstcw
jl
inc
and
aaa
pop
mov
imull
subl
sar
pop
mov
aaa
hlt
adc
std
arpl
adc
adcb
pop
sub
dec
xor
in
insl
mov
pushf
popl
cld
pop
jne
ja
dec
test
fstpl
cmp
addr16
stos
jecxz
add
inc
popf
popf
jmp
lock
or
cmc
xlat
pop
mov
lds
rcll
sub
add
xor
popf
dec
das
hlt
push
pop
out
inc
and
or
add
pop
mov
jmp
xchg
cmpsb
sub
xchg
and
and
aaa
push
jnp
lea
bound
in
or
lcall
dec
or
jmp
dec
jns
cmp
sahf
leave
das
cmp
fcompl
ret
addr16
ds
push
or
push
pop
pusha
push
push
fsubs
dec
mov
xchg
adcl
sbb
aas
repz
jg
in
scas
xchg
sub
push
inc
aam
dec
lds
xchg
mov
outsb
ljmp
mov
jle
out
aam
xor
hlt
mov
aad
test
in
iret
sti
pop
pop
sbb
cmp
out
into
subl
test
mov
fucomp
push
stos
out
inc
iret
sbb
mov
int3
add
cwtl
cmpsl
repz
lds
adc
sub
mov
in
shlb
pop
or
pop
ficoml
mov
loop
leave
jb
mov
pop
xor
lret
adc
sbb
pushf
scas
out
fimull
rcrb
jl
add
sbb
mov
fcmovb
sbb
jne
out
xor
mov
jnp
popa
lret
or
lret
xchg
jnp
xchg
jns
imul
push
pop
xchg
sahf
shlb
pop
shlb
pusha
hlt
and
sub
xchg
sub
repz
imul
hlt
sahf
scas
cwtl
fiadds
movsl
js
insb
mov
mov
stos
enter
push
loop
loope
ss
jns
insl
cmp
pushf
pusha
movsl
leave
inc
lods
xor
lock
adc
ret
push
jae
inc
pop
clc
xchg
pop
sub
adc
adc
inc
popf
cli
cmp
adc
xlat
mov
fimull
addr16
or
loopne
test
mov
xor
int
daa
inc
pop
lock
xchg
xchg
jecxz
push
ljmp
test
push
push
fnstcw
daa
xor
in
mov
sub
loope
dec
jae
mov
loope
in
xchg
xchg
cmp
adc
mov
fs
int3
stos
jg
sti
adc
lea
xchg
xor
and
xorl
cltd
dec
mov
out
adc
aad
push
sub
push
or
and
jo
mov
out
mov
dec
movsl
bound
ljmp
add
and
add
push
mov
rcrl
roll
jnp
mov
icebp
jbe
popa
mov
xchg
shrb
jmp
int
jns
or
mov
add
enter
adcb
cmc
jns
pop
mov
jns
sbb
lret
cmp
sahf
incb
int
outsb
sub
imul
cltd
cmp
or
xor
and
mov
pop
clc
les
cmpsb
or
push
xchg
sub
fmuls
lock
push
stc
cmpl
lcall
push
cmp
pop
mov
insl
push
adc
in
loop
insb
sub
lods
push
or
push
je
out
cmpl
push
mov
mov
or
dec
mov
lahf
or
sbbb
mov
sbb
pop
das
push
stc
ljmp
jecxz
push
ror
jge
mov
out
faddl
mov
jp
ficoms
mov
inc
roll
dec
sbb
sub
fwait
mov
mov
jne
mov
rcll
xlat
js
or
pop
rolb
js
ljmp
scas
sarb
push
and
sub
inc
int
rep
and
jnp
and
int
sbb
or
mov
dec
insb
mov
and
mov
xor
pop
sbb
mov
sub
mov
in
add
dec
sbb
aas
jno
cmpl
popf
int3
jae
lahf
inc
mov
mov
stc
mov
test
ds
pop
icebp
jl,pt
inc
cmp
mov
lods
xor
xor
test
fisttpll
sbb
ret
sahf
jno
inc
ds
js
sbb
jne
hlt
test
add
mov
jge
scas
dec
mov
sub
push
iret
out
add
into
outsb
jns
jg
pop
movsb
iret
sub
lcall
cmp
pop
dec
je
cmp
jg
das
das
clc
negl
adc
adc
addr16
pushw
sahf
jb
mov
outsb
aaa
test
jae
mov
adc
int3
testl
push
in
mov
shll
lret
xor
outsl
sbb
xor
sbb
rorb
xor
sub
in
jno
xchg
mov
and
or
into
lock
jg
jnp
imul
pop
mov
sub
jns
mov
push
xor
push
test
cli
fbstp
in
fs
mov
test
xor
jnp
mov
jnp
cmpsl
and
inc
test
and
mov
imul
pop
and
dec
loopne
push
out
pop
xchg
repz
cwtl
rcrl
add
xchg
sbb
mov
or
sub
inc
and
inc
aam
push
mov
mov
pop
adc
pusha
ret
rol
sbb
push
cs
loopne
mov
lods
stos
jo
rol
out
dec
cmp
out
subb
jg
test
sarb
sub
push
test
nop
and
sti
or
add
mov
lcall
mov
stos
cwtl
mov
dec
ljmp
lret
push
jbe
pop
lds
rolb
xorl
cld
add
add
sub
mov
ss
push
jl
stc
insl
adc
cmc
daa
jmp
iret
sbb
imul
mov
icebp
and
sbb
imul
sbb
pop
lods
cmp
adcb
sbb
or
dec
xchg
add
sbb
dec
fsubrl
inc
arpl
mov
mov
sub
xor
int
clc
aas
push
and
mov
pusha
aam
jbe
mov
adc
mov
or
xchg
jecxz
pusha
mov
shl
int3
fcomps
loopne
xor
and
lods
out
ljmp
sub
mov
adc
pop
pop
daa
push
cmp
mov
sbb
jmp
cmp
add
fiaddl
cwtl
fcoms
push
roll
push
fbld
cmc
mov
stos
imul
sbb
icebp
in
sub
mov
fildll
cmp
out
jns
push
xchg
lods
jbe
cmp
cmp
push
inc
stos
push
rcrl
inc
lret
sub
test
or
leave
repz
dec
popf
test
fsubrl
mov
inc
jl
loop,pt
jmp
mov
adc
neg
daa
mov
sbb
cmp
out
cmp
dec
into
pop
test
lret
and
push
out
out
cmp
or
ljmp
jg
fimull
insl
insb
xor
jmp
loop
popf
jne
jns
mov
dec
adc
lahf
sub
je
sahf
mov
outsl
ret
or
bound
push
in
iret
mov
xlat
mov
jmp
add
dec
jb
cmpb
leave
sbbl
mov
dec
jmp
lock
or
mov
inc
add
xchg
xchg
jns
adc
out
mov
sub
mov
pushf
xor
ret
sub
mov
mov
test
push
inc
leave
adc
lcall
add
out
or
es
xor
jge
cs
push
jne
push
fnsave
stos
add
cmpsl
push
jg
sti
ret
decb
and
cltd
ljmp
leave
scas
or
dec
repz
xchg
inc
hlt
test
rcrl
push
push
lret
xchg
push
js
sbb
jl
xchg
xchg
jecxz
popa
js
iret
cmp
int
arpl
fcoms
mov
or
bndldx
xlat
fisubrl
sbb
jmp
inc
mov
shl
or
shl
and
adc
and
sbb
lahf
nop
cmpb
insb
cmp
cltd
xor
mov
dec
das
pop
mov
fistps
mov
cltd
mov
sub
notb
rcll
cmp
adc
push
cmp
pop
scas
pop
add
addr16
or
or
jmp
inc
and
lahf
push
loopne
xchg
sbb
sub
dec
xchg
sub
jge
sbb
lret
mov
out
mov
popf
dec
call
std
cli
daa
xchg
lret
pop
lds
into
dec
cwtl
jp
fildll
sbb
sub
sub
imul
jecxz
stos
mov
mov
sbb
int
mov
and
push
pop
jp
pusha
cld
mov
daa
aad
into
cmpsl
jno
push
pop
iret
pop
insl
test
inc
fnsave
clc
popa
call
imul
pop
aad
sub
rol
lahf
call
cld
adc
leave
add
jbe
jb
adc
xor
dec
fisubrl
in
fisubs
sahf
xor
int
cmp
cmpsl
or
int
hlt
jl
pop
sahf
push
and
cmp
movsb
mov
cs
shlb
arpl
loopne
fldcw
dec
push
shrb
dec
sbb
mov
dec
in
shrl
loopne
mov
mov
sbb
push
jl
lcall
xchg
enter
jno
loope
mov
cmp
push
or
lds
shl
pop
cmc
cmc
test
push
sti
add
ljmp
or
and
mov
xor
push
nop
pop
add
sub
lock
push
mov
shr
and
xchg
dec
push
mov
ds
mov
mov
in
push
mov
scas
cltd
xchg
fidivl
lret
sarb
xor
add
out
jne
imul
test
mov
jbe
addr16
inc
pop
xor
dec
hlt
and
popf
repz
mov
cmp
insl
inc
sub
xor
xchg
cmp
pop
adc
mov
sub
scas
push
jmp
aad
pop
insl
aas
jo
fstpt
jl
dec
leave
sub
xlat
clc
sub
and
aaa
and
stc
mov
mov
sahf
popa
imul
inc
enter
movsl
pop
pop
movsl
out
js
popa
xor
jbe
xor
sbb
leave
lret
test
sub
sbb
fsubl
mov
xlat
pop
pop
iret
inc
fldt
or
movsl
sbb
dec
sarb
ljmp
dec
gs
push
sub
mov
nop
cmpsl
enter
mov
mov
dec
push
mov
nop
pop
sbbl
bound
sub
xchg
jae
loope
in
mov
pop
ret
xor
and
js
mov
adc
insb
mov
mov
divl
push
and
lock
lods
repz
sbb
push
hlt
sbb
in
not
neg
cs
inc
mov
sarb
scas
pop
or
jecxz,pn
push
jne
popf
outsl
mov
test
outsb
cmp
movsl
pop
stos
pop
test
lods
xchg
pushf
ret
roll
dec
mov
push
lods
mov
xchg
insl
std
into
lds
cwtl
loopne
notb
add
push
pop
or
call
aas
xlat
aam
mov
xchg
loope
loope
adc
cmp
inc
repz
jmp
xchg
xor
push
es
mul
xchg
insb
sub
inc
test
xchg
or
mov
jle
mov
pop
adc
cld
into
imul
je
cmpsb
inc
adc
or
aaa
push
fsubrp
fs
cmpsb
lcall
scas
adcl
xchg
jp
push
dec
and
out
and
sbbb
js
test
ret
jp
jg
cmp
adc
repz
and
xchg
loopne
mov
hlt
lds
insl
cmp
add
fcmovbe
dec
scas
aas
cmp
push
fimull
mov
in
or
outsb
mov
shll
fiaddl
int
loopne
aad
mov
xor
jl
icebp
adc
daa
orb
mov
inc
ja
mov
xchg
jbe
ss
in
adc
inc
sbb
addr16
push
adc
shlb
add
cmp
das
test
iret
jg
movsl
add
jle
inc
andw
push
xchg
out
stos
and
out
jecxz
xor
pop
aad
add
insl
push
dec
mov
test
fdivr
ds
arpl
es
cmpl
push
into
mov
inc
cmp
cmp
push
xchg
out
std
pop
xchg
cltd
les
stos
sub
inc
or
inc
clc
push
or
arpl
out
or
jle
pop
sbb
cmp
pop
into
pop
aad
fwait
stos
sub
jnp
test
mov
cmp
xchg
arpl
pusha
sahf
adc
ss
rclb
jg
and
lods
rol
cmpsl
dec
adc
in
clc
into
icebp
stc
jge
dec
push
mov
shll
adc
test
mov
pop
test
mov
rcl
pop
mov
mov
movsl
xor
arpl
cmpsl
add
xchg
roll
rcll
add
jo
mov
dec
js
add
movsl
cmpsl
in
xchg
pop
pop
adc
imul
les
push
xchg
js
inc
adc
jno
inc
repnz
push
ret
scas
xor
sti
pop
adc
pop
cmpsl
xor
scas
ja
imul
xchg
jne
mov
aam
ja
cmp
fwait
in
mov
jnp
inc
mov
loop
xchg
fsubrl
pop
movb
push
loope
inc
push
sub
stc
cmp
aas
dec
cwtl
mov
fldcw
in
sub
jae
jp
xor
loope
out
mov
outsb
mov
sbb
cmp
sub
sarl
mov
inc
setnp
xor
xorb
mov
sub
xor
cmp
or
mov
push
xor
fcoml
fbld
int
add
mov
call
sub
addb
or
movsl
cmp
ss
out
sub
mov
pop
jne
mov
xor
repz
pop
sbb
insb
movsl
xor
out
int
pop
notb
loop
dec
push
lret
inc
adc
call
add
aaa
mov
push
and
cmp
dec
shll
into
jmp
xchg
pop
dec
or
mov
loop
sub
dec
sbb
stc
bndldx
adc
out
inc
dec
out
jns
push
imul
inc
stc
jb
out
bound
jae
jmp
stos
aaa
dec
jecxz
das
cli
adcb
nop
mov
xchg
stc
sbb
and
add
repz
jne
ja
adc
sbb
sbb
adc
inc
mov
aaa
call
dec
or
mov
subl
test
decl
xor
aad
mov
loop
push
popa
leave
stc
int
fcoms
push
pop
mov
sti
jno
out
add
xchg
add
xchg
stc
sti
rcll
mov
xor
inc
clc
cmpsb
or
daa
cmp
mov
sbbl
mov
test
or
or
lret
jne
push
xchg
lea
or
add
inc
int
jmp
inc
adc
or
adc
int
dec
decb
mul
inc
cli
hlt
xorb
inc
jae
mov
xor
hlt
lcall
pusha
adc
inc
lods
cs
mov
jmp
xchg
dec
jg
mov
xchg
es
or
jp
ret
mov
rcll
mov
push
repnz
push
imul
les
lret
add
lret
sbb
add
enter
adc
xchg
sub
add
jbe
push
rcll
fsubrs
ss
push
sub
mov
jp
pop
outsl
push
mov
test
incb
sub
adc
ret
stos
repnz
negb
lds
mov
ja
xchg
pop
ds
lret
ret
sbb
iret
stc
cmp
je
punpckhwd
mov
icebp
add
cmpl
clc
faddl
in
int3
lods
mov
loope
xor
xor
out
mov
dec
inc
fwait
test
jmp
adc
and
cwtl
fsubs
push
sbb
stos
or
das
je
mov
out
jg
pop
mov
mov
popa
mov
mov
jns,pn
sahf
lock
xlat
into
adc
inc
or
in
mov
loopne
jno
icebp
jnp
out
push
add
cmc
xor
fs
cltd
adc
out
icebp
lahf
mov
mov
sti
call
pusha
jecxz
cmp
sti
pushf
push
lods
xchg
xchg
xchg
cmp
and
icebp
pop
jmp
push
lods
pop
and
std
int
mov
push
pop
or
mov
lods
movsl
push
fadds
sub
lcall
stos
xchg
imul
or
jnp
mov
sub
jno
mov
out
pop
adc
int3
and
xlat
or
outsl
mov
inc
mov
orl
sarb
inc
and
lods
clts
sub
and
out
out
aas
cs
test
fsub
das
jo
pmullw
xor
mov
pop
cmp
je
push
mov
int
in
jno
inc
sub
sarl
sbb
or
mov
pop
sub
push
sub
mov
dec
jno
scas
push
dec
lcall
popf
jnp
jae
rorb
add
mov
shl
mov
pop
xchg
shlb
mov
cmp
call
test
cs
frstor
rclb
js
dec
mov
mov
add
sbb
adc
lods
pop
jb
mov
or
roll
mov
ljmp
pushl
inc
movsb
mov
sub
mov
mov
jnp
xor
lcall
inc
jno
hlt
cmp
loope
xchg
cmp
jb
xchg
mov
adc
jge
xchg
xchg
mov
clc
inc
adc
scas
or
repz
cli
mov
jbe
scas
cmc
adc
stc
test
sar
bound
jle
scas
pop
loope
clc
mov
jmp
lret
sarb
add
cmpb
lods
push
xchg
or
inc
add
rorb
ja
pop
adc
test
fucom
xor
or
adc
xlat
xlat
andb
pop
sub
mov
imul
mov
insb
call
loope
movb
add
cmovno
xchg
xchg
std
mov
pop
into
cld
ljmp
jb
movsb
sub
movsbl
mov
jp
jg
jne
iret
adc
fadds
js
or
inc
mov
fld
out
in
sbb
pushf
dec
or
adc
cmpsb
push
xor
daa
negb
dec
and
sub
inc
ds
pop
xor
sbb
jo
pop
xor
data16
pushf
jl
les
les
pop
pop
scas
cmpsb
shr
js
ret
mov
add
in
sbb
fistpl
fldenv
sub
inc
sub
xchg
dec
pop
ss
outsb
pop
sub
push
xor
jmp
jg
sub
pushf
scas
scas
xlat
jge
sbb
cmp
pop
cld
jno
inc
mov
sub
or
addr16
in
std
sub
inc
xchg
cmp
add
test
mov
ljmp
jbe
fnstenv
add
shll
pop
push
stos
pop
cmc
jecxz
cmp
shll
push
das
icebp
fwait
mov
mov
ret
push
or
out
xor
clc
pop
aas
and
push
pop
je
lret
ret
jb
sbb
cmpsb
sbb
stc
scas
push
shll
lea
xchg
xor
sbb
sub
insl
jo
or
lods
jnp
call
lcall
push
inc
xchg
xchg
cli
jns
out
cmpsl
stos
scas
sbb
ret
jp
test
jge
and
push
jg
mov
aas
sub
addr16
enter
adc
fwait
cli
jno
mov
sbb
sbb
faddp
sub
notl
pop
push
push
cltd
push
loope
rclb
stc
mov
out
and
cmp
push
cmpsb
pop
adc
in
lahf
test
push
mov
lods
aam
or
aaa
add
loop
jne
outsb
outsb
lcall
jb
lret
jecxz
clc
sbb
jns
arpl
addr16
pop
rclb
push
inc
mov
xchg
mull
push
mov
dec
lods
cwtl
out
xor
adcl
sub
pminsw
xor
outsb
mov
cli
cltd
lret
push
fcompl
pusha
scas
enter
lcall
inc
mov
lock
sub
jne
cld
sarl
les
inc
imul
insb
fists
movsl
les
loop
sahf
lods
testl
sub
mov
or
out
or
ja
je
lods
mov
sbb
push
in
xchg
test
or
adc
mov
nop
cs
sub
dec
xchg
fcmovbe
jg
std
adc
ds
mov
inc
mov
push
es
insl
dec
sbb
js
inc
iret
mov
inc
lods
cmp
in
cmpsl
addr16
pop
xor
test
xor
mov
cs
mov
inc
xchg
aad
cmp
sub
es
aam
pop
pop
cwtl
mov
out
cld
xchg
cmp
cs
aam
testl
ds
outsl
push
inc
jb
shrl
push
pop
imul
dec
in
rolb
clc
bound
push
sub
les
mov
iret
notb
push
xlat
jg
adc
mov
and
push
mov
adc
andl
testl
and
loopne
mov
in
mov
pop
and
out
xchg
mov
in
xadd
mov
mov
xor
pop
std
mull
xlat
jmp
xchg
xor
repnz
ret
int
xchg
aaa
inc
iret
push
jno
scas
lods
loopne
adcl
sub
fbld
lock
scas
add
andb
pop
lahf
stos
jg
jb
cmp
ret
std
repz
inc
push
jmp
adc
sub
xor
push
fnstenv
pop
insl
and
cli
adc
in
pop
cmp
test
fdivl
inc
push
jle
loop
xor
xchg
dec
fcompl
int3
sub
loop
repnz
insb
imul
jbe
aam
cmp
and
push
jno
push
test
jge
shr
push
sub
add
mov
stos
inc
sub
jnp
cmpl
int3
stos
push
clc
cmpsb
mov
jo,pt
xor
out
cwtl
es
xchg
imul
loop
mov
lcall
shr
adc
and
add
flds
hlt
in
jle
insb
roll
icebp
mov
enter
xor
xchg
pop
dec
pop
adc
aam
lods
addr16
jmp
sbb
xor
popf
pushf
aad
shlb
adc
pop
lock
mov
sub
adc
add
adc
pop
and
dec
xor
pop
and
mov
bound
or
push
jns
les
inc
test
scas
jecxz
in
adc
dec
mov
repz
add
lods
repz
lret
in
mov
and
addr16
rorl
cmp
insl
xlat
pop
push
mov
fnstenv
nop
xchg
and
movsl
fildll
in
xchg
xor
test
adc
dec
ds
mov
inc
loope
xlat
cmp
cs
jmp
int
and
dec
jne
sub
enter
test
bound
je
adc
sbb
flds
sbb
ss
jge
cwtl
cld
and
cmp
cmpl
push
inc
das
loopne
fildl
fwait
inc
push
inc
xor
mov
fildll
xchg
mov
clc
mov
mov
les
daa
xchg
add
push
sub
pop
sbb
jo
std
cmp
jb
or
jne
outsb
jl
xor
mov
repnz
cmp
aam
icebp
and
dec
mov
popa
inc
test
pop
btr
cmp
pop
pop
std
jbe
sub
jne
outsb
stos
adc
fisubrs
jl
test
adc
lock
dec
mov
lret
loop
push
jl
inc
imul
sbb
mov
test
mov
mov
mov
push
cmpsl
xor
inc
nop
pop
clc
push
imul
in
mov
add
subb
jecxz
and
jns
rcr
enter
loope
adcb
xchg
lods
bswap
push
dec
test
jge
int3
adc
in
test
dec
sbb
dec
jle
and
cmp
outsb
loope
fs
jnp
bound
cmp
mov
arpl
fwait
sbb
stos
test
lret
add
xchg
adcb
hlt
insb
inc
inc
cmp
lock
push
pop
dec
or
xchg
adc
shlb
sub
dec
cmp
fdivs
daa
cmpsl
adc
add
push
fsubrl
xor
add
add
sbb
inc
out
aam
sub
pop
pop
push
xor
dec
shrl
xor
js
movsb
pop
fwait
or
lret
jno
insb
inc
push
xchg
lret
sbb
dec
mov
hlt
insl
or
push
test
cli
sub
clc
or
xchg
sete
fiadds
fmuls
loop
lods
enter
xchg
inc
dec
adc
xchg
pushl
aad
ljmp
jecxz
dec
mov
pop
insl
fwait
fs
jnp
ret
and
sbb
stos
ss
cmp
ret
push
pop
push
sbb
leave
lds
xchg
xchg
pusha
fstpl
scas
ss
ss
aad
fsts
jmp
sub
inc
fldl
popf
popf
push
mov
or
push
xchg
xchg
inc
imul
sub
sub
cmp
sti
addl
les
inc
mov
pop
mov
cli
mov
push
mov
pop
add
mov
adc
sbb
cmp
icebp
aam
repnz
cmc
sub
cmpsb
cld
adc
mov
push
pop
push
jo
jo
adc
or
jge
xchg
cld
mov
dec
fistps
and
fsubrl
lock
aad
push
aaa
inc
xchg
outsb
cmpsl
into
xor
out
cmp
or
bnd
fldenv
sarl
test
jmp
cmp
rcll
or
fldl
dec
jg
lret
in
push
mov
dec
mov
mov
or
jecxz
inc
into
ljmp
imul
ret
fs
aaa
xchg
add
mov
sbb
cmp
cs
lret
add
mov
in
jne
cmp
mov
lea
in
cmp
mov
or
lock
int
inc
movsb
insl
movsl
jp
std
aam
cmp
cwtl
fs
dec
and
sbb
dec
std
jp
mov
and
bound
pop
and
outsb
push
jo
in
push
cmp
sahf
jb
mov
xchg
sub
mov
in
in
arpl
fsubrs
cmp
jg
jne
push
cli
cwtl
mov
sub
mov
outsl
test
dec
cmp
cltd
fistpl
leave
jbe
add
or
mov
lcall
cmp
shlb
aad
mov
add
in
addr16
sbb
add
fistpll
call
mov
data16
fisubrl
mov
sub
pop
jno
jge
push
sub
mov
mov
cmp
dec
fcmovnbe
out
inc
push
push
push
sarb
addl
pop
jge
pop
loope
or
leave
cmp
shl
lahf
cmp
rcrl
pop
repnz
test
dec
adc
mov
lahf
jle
in
loope
dec
test
out
pop
mov
or
das
dec
inc
nop
fcompl
sub
sub
inc
mov
ds
cmp
decl
add
xorl
xchg
xchg
nop
mov
js
cmp
pop
sub
jbe
dec
shll
xchg
repnz
inc
inc
and
insb
ljmp
mov
cs
cmpb
pop
jle
jns
icebp
cmpsl
push
pop
jmp
push
dec
stos
dec
out
mov
and
data16
sbb
loope
shr
pop
pop
cmc
mov
in
mov
lret
cmp
cmp
adc
ljmp
mov
or
ljmp
lahf
imulb
shl
mov
daa
lds
sbb
lcall
dec
cmp
scas
outsb
vmread
sbb
movsl
xchg
lcall
and
sub
sub
mov
ljmp
cs
repz
rcll
xlat
in
in
ds
les
dec
test
fsubs
pop
add
les
mov
test
int3
leave
inc
lock
dec
inc
mov
inc
ret
dec
fprem
aaa
xchg
inc
mov
clc
enter
push
iret
xor
xchg
cmpsl
lock
mov
push
mov
lcall
push
add
sbb
adc
push
cmp
cmp
bound
int3
push
jl
test
jnp
outsl
ja
and
fdivrl
popf
imul
test
mov
inc
jg
inc
cmp
cmp
addr16
dec
iret
xor
add
ja
xchg
mov
inc
mov
mov
sub
int3
and
cmc
pop
xor
mov
fisubrs
lcall
jae
fistpll
jb
sbb
xchg
shrb
adc
cmpsl
inc
push
iret
rcrl
cmp
push
mov
xlat
mov
mov
testl
das
sub
mov
sbb
xor
jp
inc
xchg
insl
xchg
inc
insl
and
mov
lahf
pop
cmpsb
push
pop
call
lret
jp
fcoml
in
cmpsb
push
sub
lods
sbbl
data16
dec
mov
insb
adc
adc
mov
pop
loop
pop
pop
mull
pushf
mov
insl
cmp
fdivs
out
fwait
xchg
pop
outsl
bound
insb
mov
mov
pop
mov
mov
adc
sbb
movsb
mov
push
inc
rorl
sbb
stos
xchg
ljmp
pushf
adc
or
scas
jp
push
dec
mov
pop
push
push
jg
mov
adc
aad
lahf
mov
and
scas
push
pop
mov
arpl
lret
add
fistpll
sahf
jg
jo
push
or
jnp
xor
fnstcw
jp
fstpl
lcall
xchg
div
jb
jmp
fisubs
mov
or
into
nop
stos
xor
lret
in
ficomps
cmp
in
adc
jb
cmp
dec
add
popf
adc
outsb
lcall
pusha
pop
aas
pop
imul
inc
addl
cmpb
pop
sbb
pop
mov
push
pusha
insl
aas
and
sbb
scas
mov
cmp
jp
xchg
jmp
int3
dec
lods
jl
fisubrs
xor
cmp
mov
insb
xor
sar
arpl
fimuls
mov
sbb
loopne
out
jmp
outsl
and
mov
insl
lret
mov
mov
sub
xchg
add
mov
lods
cmpsb
rclb
adc
aam
jne
mov
xor
pusha
jns
jnp
outsb
faddl
sbb
xor
inc
xchg
sar
push
or
jno
test
outsl
xor
mov
lods
dec
mov
loope
add
xor
xlat
jmp
lods
rol
fisttpll
stc
cmp
dec
xor
cltd
rcll
lret
mov
divb
add
pop
in
aad
sbbb
aaa
xchg
xchg
cmp
push
lahf
pop
fisubrl
xchg
stos
sbb
jno
cmp
jge
aas
pop
in
popf
scas
sbbl
cmpsb
inc
or
push
popf
and
lods
xor
in
xchg
dec
add
xchg
frndint
ss
fisttpl
lock
pop
aad
adc
jmp
pop
push
push
mov
mov
adc
stos
les
lret
cmp
sbb
xlat
sbb
push
cli
jo
push
loopne
in
scas
adc
sub
inc
xor
mov
cmpb
jb
shl
cs
pop
lea
pop
push
mov
ret
test
int
sbb
mov
mov
pop
loope
sahf
push
sbb
lock
into
imull
les
lea
ret
les
repz
inc
js
leave
dec
sbb
xchg
adc
scas
jle
test
mov
xchg
sub
or
mov
xor
test
rcll
jne
mov
pop
or
daa
scas
push
lock
aad
test
add
and
clc
mov
jle
cmp
loope
fsubr
or
ret
loopne
ret
lahf
fcoms
subb
xchg
in
loop
inc
dec
inc
push
jb
inc
pop
lods
and
insb
pusha
pop
pop
add
push
pusha
jae
mov
xor
xchg
dec
mov
ret
in
cwtl
cmpb
popa
xor
pop
js
addb
inc
into
xor
xor
popa
out
or
imul
jg
in
mov
adc
or
jle
push
sub
add
loope
jbe
outsl
push
icebp
test
das
push
ljmp
jmp
mov
gs
or
adc
lret
out
fsubs
addr16
test
cmp
loope
push
jle
enter
mov
arpl
mov
stos
fistps
cli
pop
inc
pop
lea
int
cmpsb
lea
imul
insl
mov
xor
daa
adc
jb
ja
mov
lahf
test
test
stos
and
mov
adc
xchg
es
adc
adc
out
lret
push
repnz
mov
sbb
cli
mov
pop
mov
mov
test
lret
mov
adc
sbb
insl
sub
mov
lahf
dec
add
stc
pop
outsl
inc
xchg
add
fmull
inc
jmp
mov
fiaddl
xchg
adc
and
frstor
pop
lcall
ja
sub
xor
and
or
sub
push
lcall
sbb
xchg
jge
xor
xchg
xchg
push
sbb
ret
sub
mov
mov
dec
adc
repnz
mov
push
js
add
mov
mov
dec
ret
and
dec
push
inc
insl
or
fimull
mov
xchg
andl
xor
cmp
inc
inc
cwtl
mov
divl
ljmp
cmp
iret
inc
hlt
aam
jp
into
testl
jne
and
and
and
lea
and
mov
xchg
sbb
xchg
adc
fistpll
add
repnz
aad
xchg
and
nop
mov
addr16
fmulp
or
inc
jl
test
add
mov
sbb
aam
pop
xor
rcl
fistpl
shrl
cmp
add
or
adc
add
jbe
jg
adc
imul
lods
mov
pop
jnp
inc
bound
test
inc
movsl
mov
jle
pop
mov
divl
cmp
cmc
mov
add
movsb
fbstp
jle
addr16
xchg
andl
xchg
inc
sub
add
fistl
mov
ljmp
cli
js
push
ljmp
xor
clc
cmpl
dec
add
dec
xor
icebp
mov
jno
shrl
pop
ret
sbb
xor
aas
add
mov
stc
or
adc
mov
jp
mov
pop
sub
in
lea
xlat
lock
aaa
jecxz
jnp
pop
mov
ja
out
cmp
cltd
mov
nop
dec
push
push
xchg
xchg
cltd
xchg
xor
jo
mov
or
sub
jle
inc
cs
dec
push
addr16
mov
shll
jp
adc
fdivl
sahf
pop
sbb
pop
imul
xlat
pop
cmpsb
push
scas
bound
inc
shlb
and
fnstsw
loop
add
mov
cmpl
and
xor
sti
xchg
dec
xchg
dec
outsb
adc
iret
mov
lahf
adc
sub
cmp
cld
sbb
cwtl
cmp
add
clc
jbe
idiv
aaa
call
adc
sub
pop
adc
scas
je
jecxz
mov
rclb
mov
cmp
mov
in
lock
inc
mov
jne
pop
lock
pop
shll
rcrb
inc
xor
iret
mov
mull
xchg
out
mov
enter
shlb
pop
mov
xchg
stc
pop
stos
stos
or
push
shlb
mov
push
loop
je
xchg
in
out
jno
dec
arpl
push
cmpsl
movsl
pop
lcall
jbe
mov
mov
ficoms
into
lds
mov
xchg
stos
add
adc
xchg
test
xchg
mov
xor
push
das
loope
popa
scas
jl
add
stc
xorb
cs
cli
adc
lahf
push
xchg
jnp
dec
and
mov
mov
xchg
lods
adc
cmp
cmp
and
xor
insb
dec
es
sub
pop
jg
subl
insl
cmp
sbb
push
xchg
mov
sbb
les
lock
dec
popl
xchg
jp
out
mov
dec
das
xchg
lret
test
test
dec
scas
jge
pushf
mov
jbe
sahf
dec
and
clc
mov
xor
sti
xchg
sub
daa
fiadds
imul
std
inc
test
inc
in
mov
inc
and
sbb
lret
ret
out
repnz
lods
jno
and
in
in
rol
dec
cmpsl
dec
imul
or
xchg
scas
mov
xchg
lods
lea
in
cs
xor
movsb
ljmp
fisttpll
leave
push
shll
pop
icebp
or
jge
dec
aam
std
test
bnd
mul
das
jns
mov
jae,pn
inc
cmp
lret
and
cmc
sti
data16
test
sub
pop
inc
dec
xchg
incb
dec
jbe
dec
pop
les
adc
push
pop
xchg
cmp
fisttps
xchg
or
push
add
xlat
sti
xor
dec
cwtl
jl
xchg
push
adc
out
sub
mov
test
jge
mov
out
cwtl
insb
cmp
cld
pop
jb
inc
mov
xorl
stc
shl
enter
push
xchg
insl
mov
cs
jg
xchg
xor
or
pop
cmc
push
jb
and
sub
sarl
mull
daa
ret
xor
movsl
loopne
xchg
sub
lds
mov
xchg
sbb
fcoms
aam
lock
aad
scas
cwtl
rcr
stos
inc
dec
lret
or
jno
sbb
or
push
sub
and
fisttpl
std
mov
iret
in
sbb
push
mov
jno
fimull
jg
dec
or
pop
xchg
pop
xor
cld
fstl
subl
hlt
mov
fldt
inc
xchg
sub
out
add
cmp
imul
inc
xchg
adc
mov
fldenv
cmpsb
jl
mov
fistl
add
pop
adcb
repnz
aas
cmpsb
and
jb
adc
sarb
dec
lahf
add
push
and
jb
leave
gs
and
data16
pop
jbe
fwait
mov
or
adc
xchg
fneni(8087
mov
pop
jne
and
in
push
sub
pusha
ret
rol
mov
pushf
test
stc
dec
mov
mov
push
shlb
scas
shlb
outsb
xlat
pop
pushl
sbb
inc
insb
sbb
cwtl
cmpsl
dec
add
shl
pop
loop
repnz
addb
jg
imul
sub
pop
cmp
cmpsl
inc
imul
push
mov
movb
add
insb
jbe
push
mov
sbb
mov
int
lods
in
enter
repz
fcmovb
fistpl
xchg
xchg
in
mov
inc
cltd
cmc
test
stos
mov
adc
std
mov
and
iret
rcrb
mov
scas
pop
dec
jle
rclb
int
movsb
lcall
mov
dec
cltd
ss
and
inc
push
inc
sbb
push
cmp
mull
outsl
inc
cmp
jg
in
stos
mov
mov
sbb
rorb
inc
jbe
sti
push
stc
adc
mov
sbb
and
in
int
pop
sbbb
push
nop
or
data16
dec
inc
xor
fildll
sub
dec
xchg
leave
insb
cmp
adc
js
or
pop
mov
iret
std
orb
sti
pop
or
xchg
aaa
mov
cmp
sti
hlt
repz
icebp
dec
stos
in
xchg
ret
dec
add
sub
jecxz
jp
mov
adc
sub
decl
lret
jl
aas
idivl
test
cli
jno
jb
pop
inc
mov
insb
inc
pop
pop
lahf
test
mov
rolb
mov
pop
jo
cli
or
mov
movsl
sbb
sbb
xor
lcall
jg
scas
das
es
ljmp
mov
test
add
mov
mov
sbbb
gs
sub
xchg
fnstcw
sub
mov
and
dec
pop
mov
lods
dec
icebp
xchg
leave
int3
fildl
pop
cli
jmp
insl
sbbb
inc
dec
sub
mov
imul
bound
movsl
jne
sub
or
ret
dec
sub
icebp
cmp
lock
orl
mov
aam
test
mov
cwtl
dec
aas
enter
pop
outsb
sbb
sbb
jmp
mov
or
xor
movsb
sub
dec
adc
and
mov
stos
popf
arpl
fsubr
xor
sbb
scas
xchg
outsl
cli
ja
add
mov
rcr
aas
mov
pop
cs
xchg
xchg
sub
mov
xlat
ds
xor
clc
xchg
out
cli
jmp
and
jg
imul
xchg
sar
and
xorb
lahf
imul
mov
fists
push
mov
sbb
mov
sbb
push
pop
and
testb
sbb
push
fcomps
daa
shl
push
or
sbb
mov
cs
dec
repz
mov
stc
inc
push
les
jecxz
sbb
sub
lret
and
mov
sbb
or
cmp
xor
shrb
nop
sub
cvtps2pd
add
in
sub
or
adc
mov
pop
jbe
idiv
stos
mov
test
inc
pushf
inc
out
adc
sti
dec
dec
jge
mov
pop
mov
sbb
aaa
pop
xchg
add
xor
push
jne
jo
jmp
cli
adc
and
lock
test
lcall
xor
shlb
lahf
ja
fnstenv
in
pop
cwtl
fistpl
rol
inc
cld
lret
jmp
adc
dec
sahf
hlt
iret
cmp
mov
loopne
scas
or
lods
mov
stc
out
shrb
mov
mov
pushl
ss
dec
xorl
sarb
push
lcall
jbe
call
aas
xor
insl
sbb
bound
testl
lcall
movsl
out
mov
jo
imul
mov
xor
ja
imul
jmp
mov
mov
inc
push
sub
push
sbb
push
push
stc
jmp
and
push
mov
pop
sbb
mov
test
mov
cld
ds
movsb
and
pop
cmc
std
ds
mov
and
or
add
or
xchg
push
in
test
and
pop
rcrb
sub
std
das
loop
pop
pop
popf
inc
aad
mov
les
out
sbb
ss
cmp
adc
lock
mov
xchg
movsl
mov
std
aas
sti
ds
shrl
in
out
frstor
xchg
push
pmaddwd
loope
ja
inc
or
in
out
leave
and
aam
xchg
loopne
jnp
fdivrl
add
xor
xor
sbb
cmp
inc
negb
pop
mov
jmp
jmp
adc
stos
adc
adc
xchg
int
push
pop
push
adc
std
sti
movsb
xchg
pop
inc
fsubs
dec
nop
std
out
repz
icebp
cmpb
xchg
mov
mov
push
sbb
daa
mov
outsl
mov
push
adc
xor
mov
push
popf
dec
out
movsb
cmp
jl
movsb
adc
aam
add
pop
stc
pop
pop
mov
subb
pop
test
jecxz
lock
aaa
lods
call
mov
sbb
push
mov
std
call
lods
or
xor
mov
test
pop
xorl
dec
sbb
adc
adc
mov
mov
xchg
sahf
lock
in
roll
or
add
das
int
popf
inc
jnp
pop
sub
inc
shl
mov
pop
je
xor
jnp
scas
xor
imul
push
adc
daa
popa
pop
add
jns
mov
xorl
mov
fsubr
clc
out
xchg
cld
sub
push
out
cmp
adc
pop
aas
jecxz
mov
mov
jne
insl
sub
in
push
pop
repnz
jne
sbb
mov
dec
ss
int3
xchg
out
leave
dec
mov
loopne
aas
mov
test
and
jae
mov
daa
data16
faddl
cmc
es
xor
lret
pop
inc
push
daa
push
jg
outsb
push
je
xor
mov
and
cmp
jge
xor
das
test
shlb
fdivs
imul
outsl
jbe
cmovb
addr16
push
lret
jbe
and
push
mov
mov
nop
mov
push
adc
sbb
es
inc
dec
sbb
outsl
sbb
outsl
pop
push
inc
test
jecxz
jo
sbb
xor
and
dec
lcall
mov
and
sub
adc
cli
mov
leave
sbb
dec
loopne
jne
or
or
sub
push
test
xchg
insb
push
add
mov
testb
mov
mov
hlt
sub
xchg
xchg
inc
stos
or
pop
xchg
sbb
adc
imul
xchg
in
add
inc
mov
xchg
or
dec
and
cmp
xchg
push
jp
mov
lock
loop
dec
push
scas
daa
xchg
pop
fbstp
imul
cmp
pop
pop
fsubrp
or
ljmp
icebp
loope
iret
nop
ret
aaa
xchg
lret
dec
xor
testb
mov
pop
mov
mov
add
add
dec
das
add
pop
sbb
sbbb
ljmp
ret
fildl
push
add
mov
mov
insb
cmc
mov
test
xor
xchg
cmpsl
test
xorb
sub
mov
xchg
push
and
into
dec
out
scas
std
lcall
stc
mov
mov
or
sbb
push
cmp
jl
push
and
jle
inc
mov
jb
adcl
xor
loope
in
add
fisttps
push
push
cmp
inc
inc
pop
shlb
push
and
adc
push
jne
stc
and
xlat
out
xchg
int3
add
lock
addr16
xchg
in
inc
imul
pusha
mov
mov
fucom
mov
or
loope
mov
int3
imul
adc
add
js
xor
sbb
mov
out
inc
divb
cltd
and
and
mov
jp
push
push
push
inc
and
clc
shll
mov
add
push
test
cwtl
dec
mov
adc
pop
push
enter
repnz
mov
sub
jo
push
lcall
mov
inc
push
mov
mov
jne
imul
or
mov
push
jge
add
int
jo
add
jl
jge
xchg
push
int3
dec
int
mov
mov
aad
es
repz
xchg
cld
jecxz
movsl
daa
jnp
push
in
mov
das
push
mov
xor
xchg
mull
fcompl
in
xor
sbb
sub
lahf
sti
xor
push
jg
insl
repz
inc
mov
adc
cmp
push
popl
je
jb
xchg
adc
xor
xchg
test
ret
mov
lret
stc
adc
in
aaa
mov
rorb
xchg
dec
inc
imul
jnp
or
sbbl
xor
xchg
mov
lahf
and
pop
mov
cmp
adc
cwtl
xor
outsb
and
into
ds
data16
std
jecxz
push
sub
push
idiv
or
cmp
mov
pop
jnp
mov
sbb
push
jg
mov
aaa
jge
cmpb
mov
gs
ret
jecxz
xor
loopne
lds
jmp
leave
subl
mov
cmp
mov
adc
jle
or
xchg
iret
mov
mov
leave
mov
mov
aaa
call
pop
jmp
js
jae
jb
adc
out
pushf
filds
pop
push
out
fwait
pop
fiaddl
orb
scas
xlat
xchg
arpl
push
out
pop
push
jmp
xchg
bound
dec
outsb
mov
and
outsl
cmp
lock
ret
mov
sbb
fwait
in
jg
mov
and
out
loope
js
mov
loope
cmpsl
cmp
cwtl
adc
sarb
shrl
sbbb
lahf
pop
adc
inc
or
scas
sbb
mov
pop
pushf
insl
push
jo
imul
shrl
in
mov
mov
lahf
call
mov
fwait
mov
movsb
ret
mov
sar
std
cmp
adc
in
popa
mov
jnp
pop
bound
fwait
ss
pop
jle
leave
rcrb
inc
roll
inc
shll
pushf
and
out
dec
jmp
dec
add
out
adc
jmp
mov
or
dec
xor
sub
push
in
and
pop
push
pop
imul
push
std
jp
xchg
jg
sbb
and
das
sbb
pop
dec
das
sub
loopne
mov
arpl
xor
push
outsl
movsl
mov
je
pop
les
aam
jae
fsubr
inc
into
scas
dec
in
fs
pop
jo
mov
jg
ds
sbb
loope
lahf
lahf
int
xchg
and
dec
jno
repnz
or
sub
mov
lahf
gs
mov
mov
mov
xchg
mov
imul
cmp
cmp
mov
sub
fnstenv
aam
inc
int3
ror
test
out
pop
xchg
clc
pusha
push
add
jns
scas
push
jp
in
inc
das
leave
jno
jno
fisttps
in
jmp
dec
insb
addr16
popa
jecxz
mov
cli
icebp
icebp
inc
mov
fmull
lea
jle
iret
fcmovnb
rorb
ljmp
xor
icebp
repnz
or
mov
mov
xchg
push
jbe
dec
test
and
add
push
arpl
sub
cmp
pop
insb
repnz
std
aaa
push
pop
imul
or
rorb
gs
add
cmp
pop
popf
jns
outsl
in
fs
sarl
add
sahf
mov
xchg
add
or
fadd
rcll
nop
xchg
data16
mov
xchg
xor
add
cli
jmpw
and
sub
adc
mov
mov
mov
push
pop
or
and
fisubrl
psllq
add
mov
mov
mov
mov
dec
aas
xor
dec
add
mov
mov
or
sub
mov
test
adc
push
mov
jg
dec
mov
out
iret
jo
cmp
lea
imul
add
stos
pop
jl
arpl
push
adc
stos
jne
std
jae
test
pop
xlat
mov
sbb
cli
and
movsl
ja
mov
and
xor
mov
lret
sbb
pop
outsb
sbb
mov
hlt
mov
incl
or
jb
lods
mov
xor
push
dec
adcb
icebp
incl
pop
xchg
xchg
hlt
pop
mov
pop
movups
stc
in
loope
cmp
idiv
or
mov
inc
ficomps
adc
leave
test
flds
data16
cmp
lock
push
sbb
prefetch
sbb
shrb
xor
inc
popa
movsl
mov
jl
lock
inc
dec
lds
cltd
pushf
jle
cmp
fisttpll
loop
pop
dec
or
scas
lahf
sub
xor
sarl
testl
notl
int
lods
push
stos
adc
mov
pop
push
cmpsb
negb
add
sub
push
in
pop
push
cmc
sti
push
subl
pushl
adc
add
mov
fucomp
pop
pop
xor
mov
incb
mov
fs
push
or
adc
mov
leave
adc
dec
push
sub
push
loop
movsl
pop
out
xor
hlt
rcr
adc
mov
out
push
push
add
xlat
test
stos
xor
or
loop
bound
inc
push
mov
and
pop
inc
add
sbb
jns
xchg
sti
fnsave
movl
mov
scas
int
int3
add
je
addb
fcmove
lods
ja
mov
sub
jmp
bound
cmp
xor
jmp
loop
push
test
in
fisubs
addr16
and
int3
xlat
mov
insb
out
or
mov
sub
cmp
adc
inc
mov
aam
popa
pop
popf
xor
in
push
or
movsb
ret
and
lcall
lea
cmpsb
test
rolb
push
push
push
leave
inc
push
and
cwtl
mov
sbb
data16
mov
leave
push
push
scas
je
test
fimull
test
and
mov
xor
inc
and
push
shrb
insl
cltd
mov
pop
xchg
xchg
das
out
add
add
xor
test
loopne
push
mov
dec
jl
sub
mov
fistl
pop
rcrl
lahf
xchg
outsb
callw
orl
jle
mov
jmp
cmp
test
repnz
or
mov
pop
cmp
push
lahf
pusha
pop
js
xor
es
lahf
clc
mov
pop
xor
outsb
testb
dec
inc
mov
push
addb
imulb
test
int
mov
lods
mov
mov
mov
iret
push
ljmpw
lret
pop
shll
and
sbb
xor
icebp
das
xor
xlat
xor
hlt
adc
xchg
adc
in
and
push
push
push
push
fnstenv
lods
int
mov
mov
aas
shl
sti
mov
jb
rcr
sbb
mov
mov
adc
and
in
add
mov
sti
xchg
pusha
bound
cmp
mov
sub
cmpsl
push
pop
fsub
dec
mov
cltd
cmc
mov
jp
push
or
lcall
insl
arpl
sbb
std
rcrl
leave
dec
and
push
andl
rclb
hlt
outsl
jno
popa
dec
aas
cltd
jp
mov
pop
insb
je
call
js
mov
push
sub
push
rclb
jb
lahf
or
arpl
xor
add
mov
addl
mov
fimull
into
fld
test
mov
hlt
xchg
and
lds
or
std
das
fisttpll
pop
or
out
sub
out
das
das
mov
lea
js
push
fs
sbb
into
cld
xchg
rcll
mov
stc
push
xchg
cmpsb
push
cli
ret
adc
jns
lcall
into
mov
adc
push
push
loope
dec
push
xor
jg
iret
dec
mov
ja
rorl
sbb
int
jge
imul
jo
lea
cmpsl
ror
in
out
aad
lods
sahf
ja
into
sub
lods
add
data16
adc
jecxz
sbb
pusha
lret
jbe
popa
pop
sbb
sub
out
xor
ja
cmp
iret
movsb
rcr
mov
xchg
push
push
lock
push
jle
ds
sub
movl
xchg
dec
data16
cmpsb
push
rorb
jns
lods
lds
mov
xchg
ret
stos
or
sbb
lahf
push
inc
ja
mov
add
loope
jb
adc
pop
leave
aad
movsl
or
sahf
mov
dec
cmp
outsl
outsb
addb
push
in
into
cwtl
out
out
insb
inc
mov
mov
cli
sti
dec
pop
xor
aad
adc
js
and
mov
xchg
dec
pushf
sub
aaa
repnz
lock
lahf
pop
push
dec
mull
popa
jp
sub
scas
in
or
push
test
cmpl
mov
jnp
cmp
adc
outsl
xchg
or
adc
negl
push
movl
inc
ror
mov
adc
cwtl
imul
fidivs
sub
mov
mov
inc
pop
stc
lea
sub
in
aad
loop
push
sbb
inc
ficomps
xchg
adc
adc
mov
jg
cmpsb
cmp
push
mov
jne
loop
popf
mov
dec
sbb
xchg
xchg
inc
lock
je
ss
or
cmp
and
imul
xchg
cmp
test
sbb
rcll
xchg
imul
loop
out
addr16
sub
and
shll
jg
and
dec
sub
aad
outsb
shll
cmp
rcr
pop
fcmovnb
aas
push
out
daa
aaa
aas
push
xchg
out
jmp
arpl
jle
fyl2x
into
dec
leave
fstpt
push
movsb
sub
pop
test
scas
and
imul
add
mov
cmp
and
shlb
push
clc
xor
test
test
sbb
call
loop
popf
imull
dec
mov
jg
mov
mov
leave
mov
insb
mov
test
aas
out
hlt
xorb
sbb
adc
int3
sarl
outsb
add
inc
jb
pop
loopne
mov
sub
xchg
mov
inc
in
ljmp
call
gs
xor
dec
dec
adc
pop
push
and
or
mov
pop
in
int
loop
aam
fcoml
adc
test
dec
mov
and
test
push
cmc
xchg
inc
mov
dec
loopne
or
sbb
fstps
inc
add
loop
imul
mov
das
leave
push
push
ret
lcall
lods
xor
cs
rcrl
aaa
xor
jp
sub
stos
and
lock
push
out
adc
cmpsb
xor
dec
mov
ficoml
lret
lcall
jmp
mov
fidivl
inc
inc
xor
mov
or
xor
aad
scas
mov
inc
fiaddl
sbb
or
pop
out
cli
imul
loopne
aam
xchg
movsb
push
mov
int
mov
cli
mov
mov
ret
mov
rorb
mov
lock
ljmp
loope
pusha
mov
push
cli
std
xorb
dec
mov
mov
mov
cs
mov
adc
mov
mov
jp
movsb
jmp
cmp
push
pusha
scas
push
dec
pop
das
movsb
jno
pop
shl
mov
xchg
pop
or
lcall
int3
push
mov
imul
gs
std
xor
inc
scas
pushf
jno
out
push
out
xlat
jb
jne
jne
xor
inc
pushf
stos
cli
mov
in
lock
mov
pop
sbb
jmp
hlt
xlat
jp
or
jp
and
dec
flds
or
iret
jp
lock
and
sub
push
ror
adc
adc
ret
mov
mov
cmp
xlat
pop
adc
imulb
jo
inc
enter
cltd
mov
setae
dec
dec
jge
int
push
cmc
aas
ret
cmp
jmp
mov
cmp
loopne
or
leave
insb
roll
pop
xor
or
add
cltd
cli
sub
shlb
jo
mov
out
rcll
stos
das
lcall
pusha
ljmp
scas
or
cmpsb
mov
sub
push
in
push
clc
inc
or
add
rsqrtps
pop
sub
jne
addb
out
in
loopne
popf
insb
lret
mov
scas
mov
daa
cmp
ljmp
mov
ret
sbb
mov
testl
xchg
dec
out
jle
inc
jns
mov
pushf
push
cld
add
xor
movsb
add
int
enter
inc
xor
sbb
sub
pop
testl
cmpsl
push
out
xor
fdivl
jo
lret
fdiv
jbe
xor
cmp
hlt
jp
sarb
xchg
mov
jb
sahf
ret
push
bound
loope
fstps
xchg
pop
xchg
xor
push
mov
jmp
sub
add
dec
out
popf
cli
mov
outsb
into
mov
sbb
jle
xchg
xor
inc
imul
add
in
jmp
int
push
aaa
es
pop
sbb
jp
push
adc
and
lret
test
inc
jmp
cmp
nop
stc
and
jne
into
into
inc
xor
leave
inc
mov
adc
and
enter
inc
mov
mov
cltd
leave
xor
or
sbb
gs
nop
add
movsl
jg
push
xorb
fldcw
mov
sbb
mov
and
lods
inc
mov
or
dec
mov
cmpsl
in
psrad
fldcw
dec
cmp
and
mov
pop
dec
sarb
adcb
push
lock
fidivrs
je
cmp
mov
jae
loope
mov
cmp
fbstp
mov
test
movsb
mov
lahf
or
sbb
fs
pop
lret
xchg
ljmp
add
fwait
es
mov
push
arpl
dec
ror
addr16
push
dec
mov
data16
stos
aad
jno
test
and
dec
add
test
mov
cwtl
ret
mov
jp
or
enter
and
xchg
sbb
lcall
jbe
mov
sbb
adc
enter
sub
clc
lock
sbb
roll
orl
cmp
mov
fst
outsl
push
movl
jle
sbb
movsl
sub
pusha
mov
sahf
mov
bound
add
sub
addb
ja
cmp
mov
loope
enter
lahf
out
and
pop
dec
add
mov
stos
pop
aad
in
mov
callw
xor
sub
lret
ja
shrl
sbb
stos
mov
dec
daa
sbb
xchg
jne
lret
pop
jne
xchg
stc
or
push
enter
fisubrl
jecxz
mov
xor
pushf
dec
xlat
mov
or
ret
mov
pxor
jb
inc
lahf
pop
and
push
arpl
pusha
mov
in
bound
sti
push
mov
arpl
sub
lret
into
fs
cmp
xor
ds
fcompp
inc
sbb
or
cmpsb
adc
xchg
cltd
jno
fisubrs
decl
dec
into
add
mov
or
sbb
mov
insl
dec
sub
js
and
cmpsl
lea
aaa
fistpl
lret
mov
dec
xchg
arpl
dec
inc
pop
nop
sub
and
cmp
cltd
addr16
jbe
lea
insb
cmp
xor
mov
and
mov
notb
inc
and
shlb
xchg
test
pop
fwait
or
lret
out
out
stos
call
call
push
inc
ljmp
inc
shlb
leave
notl
stos
inc
orb
mov
in
pop
jbe
sbb
dec
add
sbb
test
dec
dec
mov
pop
jle
scas
pop
js
cmp
popf
cld
sbb
lahf
jnp
jb
push
push
sub
es
stc
mov
jbe
scas
jno
out
inc
outsb
jge
cmp
pop
add
ret
lcall
cmp
or
stc
rcr
pusha
cmp
sub
shrb
xor
xchg
iret
or
xlat
mov
popf
outsl
cld
and
or
mov
and
inc
pushf
or
or
orl
cld
das
jno
inc
jecxz
inc
jbe
je
and
pop
nop
fadd
sbb
sub
xor
jmp
jnp
into
dec
testl
xor
lea
jp
pop
xorl
fildll
lods
xor
and
xchg
hlt
aad
dec
test
nop
cmpsb
mov
ffreep
data16
ja
mov
dec
pop
xlat
mov
mov
add
in
fcoml
leave
jecxz
mov
push
lods
fimull
ss
mov
mov
jns
fcoms
sbb
sub
or
pop
movsl
push
jp
push
bnd
test
pop
mov
push
inc
imul
sbb
mov
mov
inc
rep
std
pop
xor
out
movsl
test
and
mov
fcoml
sub
inc
adc
jne
mov
test
lret
pop
or
or
hlt
mov
daa
sub
popf
ficomps
std
fwait
add
dec
pop
arpl
sbb
push
xchg
aaa
push
scas
pop
pop
xorl
hlt
imull
dec
movl
sahf
sarb
and
cld
jl
push
push
int3
sbbl
divw
xchg
insb
xchg
lds
xchg
cmp
sub
sbb
test
not
pop
mov
fistl
and
vsubpd
pop
cmpsl
add
stos
xchg
in
jl
rcrl
repnz
inc
push
pop
addr16
test
jmp
push
fcoms
in
daa
xchg
xor
lcall
xor
int3
scas
into
inc
stos
dec
pop
lret
jle
jle
shr
cmp
xor
xchg
sub
inc
repnz
push
pop
push
push
punpcklwd
push
incl
xchg
call
popf
inc
jg
mov
push
sbb
mov
cmpsb
mov
test
adcl
mov
data16
outsb
leave
push
sub
xchg
inc
rolb
mov
adc
fs
aas
je
cmp
mov
enter
xchg
dec
or
add
leave
sbb
dec
lret
jb
mov
mov
push
xchg
adc
dec
and
lahf
sub
push
leave
dec
fnsave
lret
loopne
adc
xor
out
arpl
outsl
in
mov
negb
rorl
test
inc
jl
mov
in
in
outsb
dec
insb
add
inc
mov
push
call
or
insl
das
mov
insb
pop
test
push
jge
rcll
test
cmpsb
mov
adc
imul
cmovno
jbe
fnop
lea
mov
adc
loop
cmp
shll
loop
call
cmp
pop
push
sbb
sahf
mov
cmpl
rcrl
sbb
mov
and
ss
hlt
pop
addr16
or
addr16
mov
fbstp
add
sub
xchg
sahf
ds
or
in
pushf
mov
cmp
xor
cltd
or
cmp
scas
inc
xor
sbb
sub
loope
fiadds
iret
pusha
mov
mov
fldl
push
imul
sub
ljmp
fsts
aad
stos
and
jns
cmp
xor
insl
dec
cmp
mov
hlt
xchg
les
sbb
mov
xor
loop
xchg
clc
inc
mov
push
xor
lea
adc
fwait
mov
in
push
xor
sub
sub
adc
imul
mov
shlb
dec
add
in
mov
mov
imul
or
sti
adc
icebp
dec
clc
subl
ljmp
fcomip
add
adc
mov
pusha
std
les
icebp
cmc
fs
mov
dec
enter
adc
sbb
mov
scas
fldcw
mov
iret
addl
jo
xchg
sbb
mov
lret
test
mov
jle
stos
testb
pushf
faddl
mov
add
scas
test
jmp
cmp
fildll
and
hlt
pusha
jnp
pop
pop
jo
push
add
inc
rol
imul
mov
lcall
cmp
scas
cmp
imul
or
adc
std
cltd
mov
pop
leave
test
mull
dec
push
mov
add
inc
push
push
cmpsl
cmpsb
leave
es
insl
sahf
adc
push
fxch
and
mov
lock
push
pusha
jl
jg
mov
addb
sti
dec
push
mov
or
dec
push
or
rolb
mov
or
aaa
jle
das
dec
dec
or
mov
pop
push
push
dec
add
ljmp
pop
cwtl
dec
dec
in
ret
arpl
mov
aad
lret
std
sub
mov
xchg
fisttps
and
jns
imul
mov
stc
sub
aad
sub
push
push
jno
icebp
mov
pop
xchg
movsl
pop
sub
out
jbe
adc
and
dec
mov
movb
dec
aad
imul
or
test
fnsave
ss
sbb
les
stos
mov
jne
inc
pusha
cmc
out
imul
or
je
mov
xor
inc
inc
ss
popa
xchg
repnz
push
xchg
inc
std
lahf
arpl
std
or
in
scas
mov
xor
dec
push
dec
pushf
mov
cmpsl
icebp
ss
push
out
xchg
unpckhps
or
dec
lds
push
das
mov
test
mov
or
lods
gs
xor
iret
into
jge
test
push
dec
sbb
lods
xchg
rclb
scas
xchg
push
xor
clc
or
inc
fsts
sarb
inc
mov
mov
loop
in
xchg
cltd
jge
mov
jle
jbe
or
stc
jb
mov
pop
insb
xor
fisttpll
adc
cmp
in
stos
or
call
aad
push
out
fidivrl
jns
inc
repnz
hlt
js
jnp
aad
sub
add
lods
lods
lret
adc
stos
or
test
push
jp
gs
cs
out
sbb
fs
mov
lods
and
push
jne
mov
mov
lcall
jp
outsl
or
sahf
dec
inc
shlb
andb
out
int
pop
xor
out
add
mov
or
push
xor
inc
inc
xor
and
clc
and
test
es
hlt
sub
neg
add
shrl
sub
add
inc
movsl
lods
cmp
xchg
fdiv
movsb
push
test
scas
jo
xchg
pop
mov
and
adc
enter
clc
leave
hlt
mov
rorb
jmp
push
inc
insl
into
mov
scas
mov
sub
cmp
mov
dec
dec
sbb
pop
lret
jp
pop
add
inc
sbb
jb
jno
cmpsb
in
adc
push
hlt
jle
mulb
gs
or
js
and
push
pop
jmp
pop
jp
jecxz
fistl
mov
test
popf
sbb
pop
out
xchg
divl
ret
ret
daa
js
inc
mov
add
jmp
movswl
mov
imull
rorb
adc
mov
pop
jne
and
bound
mov
push
insb
mov
repz
xchg
ret
sub
mull
outsl
mov
nop
xor
xchg
test
iret
adc
test
lahf
in
rcrl
jg
pop
dec
dec
inc
dec
mov
sub
movsl
call
add
mul
or
stc
movsl
pop
xchg
shlb
lret
or
xchg
scas
jno
cmc
mov
inc
into
lds
bound
out
and
bnd
pop
mov
mov
mov
xchg
orb
mov
xchg
mov
lahf
rcll
sbb
dec
imul
inc
xor
xchg
jbe
jle
mov
pop
push
cli
divps
and
inc
cld
mov
addr16
xor
rolb
cmp
scas
icebp
fcoml
shl
sbb
insl
sub
adc
sbb
pop
stos
out
sbb
adc
and
cmp
hlt
pop
sbb
mov
outsl
pop
dec
testb
loopne
mov
sbb
ror
ss
jecxz
test
dec
push
lret
sahf
sub
or
repz
add
sub
loope
jle
inc
pop
lret
jl
cwtl
pop
lods
aaa
jle
stos
fstpl
fcmovb
adc
sub
xchg
subl
sub
jo
lea
fimuls
mov
stos
dec
cmp
push
xor
ja
ret
loop
push
sbbb
lock
adc
fstp
sub
inc
push
dec
shll
xchg
clc
or
out
out
outsl
ror
push
mov
cltd
push
int
cwtl
jbe
testl
popf
jne
xchg
jge
and
call
mov
ljmp
insl
xchg
push
lods
test
lock
sub
and
mov
adc
daa
stc
mov
pavgw
icebp
mov
and
jb
int
and
subl
mov
pop
inc
cwtl
mov
inc
add
in
imul
test
and
push
push
pop
add
ds
es
xchg
divl
or
jae
icebp
icebp
lods
jo
jmp
push
movsl
adc
xlat
in
ljmp
pop
jne
lahf
push
cltd
outsl
adc
test
lea
mov
dec
jmp
inc
cmc
fiaddl
movsb
dec
popf
dec
aas
iret
xchg
and
or
mov
cwtl
mov
out
mov
shrb
jno
jl
inc
jg
std
inc
orl
xor
ret
cmpsb
loope
pop
pop
mov
lret
fwait
repz
jp
push
int
mov
inc
dec
fiadds
mov
stos
add
dec
aas
adcl
cs
xor
pop
aad
push
dec
orl
stos
into
fisttpl
jnp
mov
inc
ret
rcrl
dec
jne
mov
iret
ret
andb
and
jno
pushf
pop
mov
jecxz
cmp
dec
enter
pop
mov
jl
mov
addl
jle
sarl
fs
push
pop
fsub
xchg
or
fildl
sbb
clc
mov
dec
cltd
dec
scas
jg
cld
xor
jno
mov
ror
or
or
mov
sbb
mov
dec
push
arpl
nop
push
and
adc
int3
clc
mov
push
arpl
or
cs
cmp
add
loop
jne
xchg
sbb
data16
xchg
dec
push
fbld
sbb
sub
fmull
ret
mov
pop
xchg
adc
pop
psrlq
xchg
adc
mov
sub
lahf
sub
or
inc
sub
jo
or
add
ja
stc
hsubps
mov
pop
out
scas
std
mov
xlat
es
or
fisttpl
mov
in
pusha
push
xor
lret
rcrb
xchg
sbb
es
pop
mov
sbb
push
cmp
shl
insb
scas
mov
sbb
shll
insb
mov
hlt
jno
sub
test
mov
mov
push
ss
or
mov
jae
imul
inc
mov
fnstsw
xchg
pop
popa
lahf
sub
jl
adc
dec
ds
popf
sahf
out
sti
xchg
mov
mov
mov
add
xchg
test
jge
sbb
xchg
sub
cltd
xor
std
outsb
insl
push
mulb
sbb
pop
jbe
and
aaa
in
mov
pop
es
add
into
addr16
test
mov
aam
ret
fildl
in
mov
cld
testb
inc
jp
sub
adc
fcomp
stc
fs
cmc
addr16
and
jl
shlb
gs
dec
dec
fistpll
cmp
mov
faddl
xchg
cwtl
xchg
xor
push
jo
dec
gs
xor
addr16
bound
fisubrs
imul
das
icebp
or
enter
sti
pushf
adc
mov
into
pop
shr
or
sbb
mov
lahf
cmpsl
js
ret
push
in
sub
in
push
mov
push
das
sub
dec
mov
fs
aad
jmp
pop
popa
sarb
sbb
xchg
pop
pusha
icebp
cwtl
out
pop
lret
outsl
inc
lods
xchg
test
adc
jae
sub
mov
addb
dec
mov
loopne
pushf
out
dec
scas
or
clc
and
pop
cltd
xchg
jbe
mov
rcll
jae
int3
fildll
sbb
or
ss
out
xchg
pop
lea
mov
js
push
test
pop
xor
mov
test
cmp
adc
mov
scas
fstl
pop
test
sub
cs
pop
out
scas
sbb
dec
sbbb
xchg
xor
pop
pop
or
call
xchg
dec
out
imul
aas
iret
fidivrl
adc
jno
scas
into
push
int3
fildl
jecxz
add
stos
lock
xchg
xchg
mov
cmp
sub
jmp
jne
push
add
fidivs
xchg
ds
inc
call
xor
popf
cmp
mov
mov
jg
mov
push
xchg
mov
mov
insl
adc
dec
jmp
and
inc
fsubs
mov
xchg
push
inc
mov
adc
pop
push
inc
icebp
push
xor
jl
jnp
jno
push
in
int3
mov
movsl
mov
push
mov
xor
jg
sbb
fs
push
jmp
arpl
js
sub
dec
push
rolb
and
mov
xchg
pop
push
jmp
mov
inc
aaa
in
adc
bound
pushf
mov
pop
jle
imul
mov
mov
scas
in
pushfw
sbb
cli
mov
mov
add
jb
test
mov
and
push
xchg
movsb
fldl
andl
inc
sub
nop
test
adc
int3
loopne
shlb
mov
addl
lret
mov
mov
in
jns
cmc
jno
movsb
out
jae
movsl
movsb
adc
xchg
xor
movb
in
in
pop
push
stos
rcll
mov
cwtl
imulb
lret
inc
std
lahf
jg
add
bnd
fsubs
mov
xor
pop
xor
cs
pop
mov
add
cmp
scas
cmc
lea
jmp
push
cmp
inc
mov
or
ljmp
movsl
hlt
outsl
jno
and
mov
mov
idivb
adc
stos
mov
add
lahf
or
data16
lea
loop
pusha
inc
xchg
pop
out
pop
std
aas
jmp
inc
xor
aam
fdivrs
cltd
loope
mov
sahf
daa
insl
mov
push
loopne
faddl
lret
push
aam
ret
adc
test
mov
and
cmpsb
dec
fs
push
test
icebp
inc
sbb
fdivrl
mov
stos
ficoml
push
adc
mov
je
lret
adc
lcall
addl
sbb
adc
pop
test
pop
ss
dec
pushf
pop
sub
not
cld
cmp
mov
lds
jbe
xchg
mov
adc
loope
ljmp
jl
xor
inc
in
cmpsb
sbb
jno
int3
in
pop
push
jmp
cmp
imul
mov
add
and
mov
jbe
mov
cltd
scas
push
rol
fsubl
mov
pop
push
and
mov
imull
shll
divl
fnstenv
dec
adc
fcom
bound
nop
scas
cmp
cmpsb
icebp
ficoms
mov
stc
in
inc
stos
les
jg
fdivl
imull
add
inc
enter
xor
std
aad
pop
sub
and
push
or
pop
sub
loop
xor
adc
adc
mov
adc
mov
cli
xchg
stos
inc
dec
pop
fs
call
iret
adc
pop
mov
pop
adcl
mov
inc
cwtl
and
in
loop
sub
rol
lahf
xchg
scas
mov
sub
dec
jb
xchg
push
shll
imul
push
xchg
cltd
mov
in
xor
push
addl
mov
jp
pop
leave
pop
jne
mov
je
inc
repnz
mov
nop
lahf
andb
mov
aaa
jl
adc
mov
push
ret
xor
out
inc
pop
das
test
aam
aas
adc
xchg
imul
arpl
dec
xchg
jnp
std
cmc
mov
push
and
fistl
fs
xor
ret
or
mov
mov
clc
jbe
or
leave
jo
dec
or
cmpsb
add
mov
xchg
add
in
jge
stos
inc
and
rcll
adc
aam
sub
add
ret
repnz
cmpsb
mov
pop
dec
pop
icebp
add
sti
stos
sbb
mov
insl
mov
insb
sub
cld
xor
lea
leave
out
cs
aam
fsubrs
out
push
repz
add
pop
adc
es
out
push
mov
add
xchg
push
loope
mov
cmp
in
leave
and
test
fcom
dec
aam
inc
sarl
jge
sarb
repnz
push
add
icebp
sub
mov
pop
pop
inc
into
inc
jle
adc
inc
inc
xchg
rorl
iret
adc
fprem1
pop
inc
les
sbb
push
mov
and
out
jge
vpsubusw
xor
and
xlat
mov
cmp
and
nop
bound
loope
cmp
add
pop
pop
pop
jno
xor
pop
and
inc
mov
ret
sub
sar
push
xchg
jp
jno
fcmovnb
pusha
sbb
arpl
lock
loope
outsl
xor
orl
jg
xor
cmp
and
sysexit
loope
incl
jecxz
push
jp
jmp
cli
inc
inc
dec
push
movsl
sbb
sti
cmpsl
cmp
mov
stos
sub
push
testl
mov
mov
xor
or
in
hlt
xor
fisttps
or
push
ror
lret
sub
jne
dec
xor
mov
and
adc
jle
jge
and
jne
mov
in
ss
adc
lret
cmp
jecxz
lods
xor
cmpsb
sbb
sbbb
jmp
lret
inc
and
js
sub
push
es
dec
sbb
mov
cmpsb
push
mov
iret
xchg
imul
fucomp
divb
cmp
sahf
or
lods
out
pop
mov
pop
popa
jmp
fsubrs
sub
mov
nop
loope
and
rolb
jp
es
push
add
popf
jns
pop
stc
movsl
xchg
movsl
cmc
aas
or
in
je
stos
loopne
js
fildll
and
mov
stos
pop
outsl
fidivrs
imul
sbb
adc
cld
ja
addl
lcall
xchg
test
lea
dec
xchg
dec
push
pop
mov
data16
add
popf
iret
cmpl
and
dec
mov
push
stos
aaa
mov
mov
xor
xchg
add
icebp
test
xchg
cmp
nop
mov
outsl
insb
lods
xchg
inc
leave
jb
mov
aaa
cmp
test
fdiv
out
and
and
pushf
stos
pop
fimull
lock
es
push
mov
mov
jb
fadds
insl
adc
lcall
mov
or
ret
xor
sub
adc
stc
aam
xchg
dec
push
sahf
sub
sub
dec
sub
adc
xor
add
sub
push
imul
sub
out
sub
leave
cld
pop
ret
push
out
gs
loop
xor
or
loope
sar
pusha
cmp
fstpt
loop
leave
mov
gs
rcrl
lcall
mov
in
xor
rorb
shlb
mov
daa
pop
fsubl
into
adc
dec
jns
sub
imul
push
jb
repz
mov
dec
fs
test
and
push
jnp
xlat
repnz
lcall
cmp
dec
frstor
shlb
call
add
addl
jle,pn
lods
mov
imul
sbb
sub
pushf
aad
sbb
xor
xor
mov
out
pop
sub
jne
mov
ret
fistpll
mov
pop
in
push
add
pop
push
in
sub
pop
aam
xchg
push
pop
cld
popf
and
pop
pop
xor
aam
mov
cmp
outsb
push
pop
mov
and
sbb
adc
bound
repnz
pop
aaa
std
mov
jnp
aad
neg
mov
adc
push
mov
scas
jp
test
inc
mov
mov
mov
or
scas
pusha
pop
xor
sub
cmp
add
sbbb
dec
add
out
js
sahf
loopne
cmp
pusha
jno
negl
sbb
fiadds
push
out
out
popf
mov
jl
loopne
mov
and
cmp
dec
aas
mov
adc
sbb
mov
lods
cltd
repnz
icebp
sub
aam
mov
enter
into
xchg
sub
sbb
xor
dec
sbb
pop
mov
sbb
mov
pop
lret
sbb
aaa
call
mull
push
bound
dec
add
scas
daa
push
mov
adc
or
fstpt
lcall
jbe
scas
push
pop
or
outsl
mov
das
add
jecxz
mov
ja
sbb
test
stc
icebp
push
mov
cwtl
jae
push
sub
pop
sahf
hlt
jp
push
sub
pushf
fildl
cmpsb
sub
stc
outsl
cmp
pop
or
shll
clc
movsb
icebp
divl
xchg
stc
stc
es
sub
scas
mov
jo
test
test
das
sbb
sarl
mov
lcall
shlb
inc
popa
mov
pop
dec
pop
rclb
fs
sahf
mov
sti
fstl
lds
addb
mov
adc
test
imul
adc
cwtl
roll
adc
mov
dec
push
stos
outsb
imul
mov
and
jns
sti
jne
jmp
inc
push
mov
rolb
adc
mul
sbbb
adc
push
cmpsb
test
scas
push
xlat
aam
cltd
xor
rclb
sub
adc
push
mov
and
cli
xchg
mov
int
mov
push
pop
cmp
repnz
and
jo
aas
or
mov
pop
std
lds
and
scas
aam
mov
loop
jbe
xor
jge
movsb
push
stos
cmp
jle
adcb
sub
fdivrs
pop
mov
pushf
push
mov
mov
mov
call
jecxz
jae
insl
sbbl
push
jmp
mov
pop
add
add
lcall
jmp
fcompl
and
lret
xor
push
ljmp
cmp
and
imul
cld
xor
dec
and
adcb
or
cmpsl
pop
add
stc
mov
sub
test
and
bound
test
and
roll
sbb
out
in
inc
sbb
jbe
rclb
mov
jg
adc
and
mov
xchg
cmpsl
pusha
pop
pop
in
das
repz
cmp
hlt
jp
cmc
xchg
xor
fwait
lcall
pop
imul
xchg
xchg
adc
mov
mov
ss
jne
pop
push
loope
dec
sbb
orl
cwtl
mov
clc
jge
push
das
adc
movsl
in
jae
mov
dec
pusha
loop
lcall
xchg
call
fwait
outsl
sbb
xlat
popf
mov
dec
add
ret
cs
js
sub
lods
and
push
icebp
sub
add
jne
pop
jmp
jge
jg
leave
out
cmpsl
jno
fcoml
mov
shlb
and
ljmp
lret
sbb
bound
in
stc
fsub
rorl
lea
push
lret
adc
loop
jmp
add
push
mov
into
mov
ret
call
pop
inc
mov
jno
jb
icebp
pusha
sub
xor
push
js
pop
rcll
arpl
sti
mov
mov
and
daa
pushf
aam
pushf
xchg
mov
lods
jmp
jnp
or
bound
mov
add
pop
mov
cli
inc
stos
pop
test
mov
push
push
sbb
inc
sub
cmpsl
aam
xchg
mov
mov
lods
repnz
rcrb
push
xchg
mov
loop
jle
stc
rol
fisubl
push
push
adc
push
hlt
mov
mov
cltd
push
mov
and
fwait
push
mov
mov
sub
sub
ret
adc
xor
sbb
out
mov
rorb
push
ljmp
xchg
mov
or
pop
mov
inc
dec
pop
mov
xchg
add
test
mov
std
or
add
mov
jmp
push
mov
inc
std
pop
add
jge
mov
mov
nop
mov
adc
add
insb
pop
repz
cmpb
mov
fs
mov
shl
jge
pop
jae
lea
pop
movsl
mov
pop
ret
push
fadd
dec
mov
xor
cmc
add
dec
adc
add
mov
add
xor
and
pop
pop
ds
lcall
xor
cmc
call
push
inc
int
lods
imul
mov
insl
xlat
sbb
mov
dec
fucom
out
adc
xchg
ss
push
popa
pop
sbb
in
std
dec
or
inc
scas
or
pop
adc
ss
clc
into
jne
xor
push
leave
cwtl
add
test
pop
adc
xchg
sub
dec
jns
jmp
jmp
shlb
jge
adc
xor
pop
das
adc
test
pop
push
fwait
xor
xchg
jae
jne
mov
test
js
dec
loop
cmp
mov
imul
add
mov
mov
imull
add
and
and
repnz
push
mov
push
cmp
das
mov
push
and
cli
or
mov
nop
imul
popa
leave
push
out
shrl
icebp
mov
inc
into
and
int3
bound
add
clc
jnp
sub
mov
outsl
xor
repz
push
mov
loop
dec
fmull
and
outsl
dec
mov
jo
bound
loop
mov
jae
jg
push
cmovs
cmp
sbb
aaa
or
cmp
inc
mov
mov
insb
or
xor
test
or
call
mov
ljmp
or
push
shl
push
push
bound
adc
push
jb
nop
orl
out
mov
inc
ficoms
mov
sbb
push
xchg
xlat
sbb
popf
mov
int
push
out
mov
mov
decl
add
add
sbb
xchg
clc
cmp
adc
add
cmpsb
cs
rcll
in
das
push
xchg
fldt
xor
stos
inc
repnz
or
loop
je
and
add
mov
sbb
or
inc
xchg
xor
repnz
scas
icebp
sbb
sub
jle
cld
scas
mov
rcll
xchg
jl
inc
dec
lret
mov
mov
ja
scas
push
insl
daa
mov
out
push
aas
cmp
add
and
repnz
popf
push
loopne
xor
xchg
mov
rolb
xor
push
pop
or
dec
xlat
add
adc
bound
add
dec
dec
xchg
mov
pop
jg
xchg
add
dec
test
fdivrs
mov
push
mov
inc
fiadds
lds
out
xchg
add
or
or
dec
test
js
xor
test
or
stc
jle
call
sub
lods
enter
adc
add
xor
mov
and
out
mov
lret
xor
aad
sbb
jnp
in
or
in
jo
push
jno
shlb
sbb
or
push
insl
js
xchg
rorl
mov
mov
outsb
mov
addr16
sbb
gs
mov
ret
aaa
out
pop
jno
pop
jnp
inc
lods
push
cmp
in
xlat
into
inc
mov
testl
cwtl
leave
int
push
in
mov
cmpsb
xlat
mov
mov
fbstp
xchg
out
add
adc
push
mov
fwait
pop
push
xchg
lds
shrl
sub
jbe
adc
addr16
cmp
dec
mov
jb
inc
js
stc
push
cld
jp
lods
adc
sbb
sbb
mov
lcall
test
pop
jecxz
dec
mov
sub
stc
dec
rcrb
out
out
in
jp
and
sahf
inc
mov
mov
mov
pop
rcrl
addr16
hlt
scas
inc
aad
xor
xor
rorb
jbe
or
fstpt
dec
sbb
push
cld
jge
int3
cmp
mov
jg
mov
pop
ds
out
and
sub
in
inc
roll
xchg
dec
insl
adc
xchg
aaa
jg
adc
inc
jnp
cli
jb
push
gs
imul
in
shll
add
fcoms
nop
jg
inc
xor
daa
fisttps
dec
push
cmpsl
inc
sbb
inc
inc
xchg
and
dec
xor
push
jp
push
cmpsb
inc
pop
push
cld
xlat
pop
mov
lods
out
mov
jns
mov
mov
xorb
addb
pop
adcb
pusha
sub
rcr
add
xchg
mov
inc
jno
pusha
xchg
loope
cltd
das
cmp
pop
and
in
xor
stos
mov
push
xchg
inc
mov
push
sbb
jg
lea
std
hlt
inc
out
fmuls
les
xchg
pop
inc
mov
ret
bound
lret
sub
jl
aas
insl
movsl
mov
mov
clc
aaa
in
adc
inc
cs
sub
jbe
push
mov
inc
lock
int3
or
mov
stos
out
lods
inc
enter
add
scas
gs
cmpsl
nop
aam
mov
out
adc
pop
clc
imulb
idivb
cli
loopne
imul
sub
cmp
imul
push
cmp
iret
pushf
shr
inc
push
ja
push
imul
test
push
pop
cmpsb
js
popf
out
push
cmp
xor
sbb
out
and
jp
mov
mov
in
jno
repnz
inc
sub
dec
xchg
dec
xchg
push
out
push
mov
ret
and
mov
adc
mov
mov
rcr
xor
jb
sub
sub
mov
shl
arpl
out
sbb
push
xor
inc
leave
mov
cld
outsb
dec
add
xchg
sbb
lret
and
aas
repz
mov
jbe
ss
cmp
sbbl
in
mov
cmp
mov
mov
popa
and
push
add
jmp
pop
push
sub
xchg
cmpsb
shl
stos
push
mov
adc
inc
jno
movsl
rcrl
xchg
push
pop
fiaddl
fisubrs
shll
cmp
or
cmpsl
out
jo
or
dec
testb
out
jno
nop
xchg
add
fwait
ljmp
dec
inc
fdivr
cmc
stos
dec
lds
cld
arpl
jno
js
xchg
es
movsl
rcr
insb
int
ret
jg
cmp
test
in
or
std
add
addr16
lods
and
daa
pop
or
pop
cwtl
test
and
mov
jno
int
repnz
lret
lds
jnp
scas
enter
loope
rol
adc
mov
lret
aam
push
stc
and
ljmp
in
out
adc
pop
mov
add
fimuls
dec
fisttpll
push
adc
xchg
insb
add
ljmp
jae
adc
lea
xor
sbb
mov
les
enter
lock
or
sub
roll
dec
pop
lahf
xchg
add
dec
subl
jo
daa
jae
pop
adc
mov
js
push
test
fstl
sub
ljmp
inc
add
ja
and
inc
aad
lods
dec
jle
repz
in
lcall
push
xlat
sbb
or
fs
imul
out
mov
pop
dec
jmp
iret
repnz
jb
jg
loopne
dec
aam
lret
or
stos
leave
fbstp
jg
mov
fiadds
jmp
adc
enter
call
mov
cmpsl
in
jb
add
pop
mov
cmp
jg
cmpsl
sbb
and
jnp
cmpsl
or
sub
jo
xchg
lods
fimuls
fsts
call
arpl
fstl
add
jge
mov
mov
call
xchg
addr16
into
sti
push
in
fxch
mov
hlt
iret
mov
hlt
pop
push
data16
mov
sti
pop
in
push
dec
ljmp
jne
add
mov
leave
scas
mov
mov
or
stos
ss
mov
sbb
mov
icebp
mov
repnz
cmpsl
fldcw
nop
fninit
popa
cwtl
xchg
and
js
push
inc
mov
loope
add
js
stos
je
xchg
and
nop
jmp
aaa
and
rcll
and
push
jg
int3
bound
jl
mov
jp
pusha
cmc
cltd
jl
mov
sub
ljmp
and
ljmp
in
mov
cmpb
mov
xlat
jnp
int3
les
push
adc
sbb
sbb
xchg
sub
jmp
jmp
addr16
sti
xchg
adc
jecxz
lea
fimuls
jp
xchg
jno
xor
jo
dec
jo
mov
pusha
mov
addl
xchg
lret
stos
jp
rcrl
mov
mov
sbb
rcl
add
das
jne
push
out
mov
push
xor
daa
sub
cld
xchg
mov
dec
es
notb
sti
pop
pop
in
xchg
pop
repz
jbe
mov
push
test
jle
insl
dec
add
adc
xchg
mov
push
out
mov
aas
stos
inc
or
mov
inc
repz
sub
repz
adc
xchg
dec
ret
push
push
sbb
mov
pop
es
jns
and
mov
inc
mov
or
mov
xchg
add
and
sub
test
cmp
pop
stc
ds
sahf
cmp
push
pop
sbb
ljmp
cmp
out
mov
push
das
cmpsl
sbb
pop
mov
pushf
xchg
xchg
fimull
popa
orb
xor
inc
addb
lahf
clc
mov
push
push
xchg
mov
mov
mov
jae
push
jp
xor
and
and
add
stos
sub
bnd
mov
mov
add
dec
pop
jecxz
out
cld
mov
movsb
xchg
jge
addb
sbb
cwtl
ret
jo
test
fwait
xlat
push
lods
mov
mov
or
cli
mov
jmp
or
sub
mov
stos
in
stc
fistps
sbb
xchg
lods
jns
pop
leave
jg
add
gs
rorl
mov
loope
mov
inc
xchg
pop
xor
and
jb
sti
xlat
mov
cmpsl
int3
ljmp
adc
sar
add
sub
scas
mov
in
mov
jae
into
mov
xchg
mov
gs
shl
or
mov
pop
xchg
repnz
mov
sub
adc
shll
jmp
lock
push
fdiv
xorl
sub
in
hlt
jno
ror
in
xor
sbb
stos
sub
sbb
addb
cmp
shll
pop
clc
mov
push
adc
les
shll
mov
enter
shlb
mov
add
jno
jle
mov
pop
mov
popa
out
and
mov
pop
aam
sahf
in
aas
dec
mov
sbb
cmpsl
gs
inc
sub
push
sub
jge
int3
sti
aam
cmp
idiv
jae
push
lea
repnz
pop
pop
xchg
sub
pushf
sbb
xor
push
sub
call
or
lret
mov
jp,pt
pop
das
xor
pop
cs
popl
rcll
test
ss
enter
outsl
dec
cmp
iret
and
cmp
addr16
lcall
stos
mov
pushf
sahf
jle
inc
jnp
cmp
push
xor
cltd
sti
cwtl
push
fstp
sub
fsts
test
popa
mov
orl
mov
les
add
imulb
jo
xlat
notb
ret
dec
xor
ja
sbb
call
fwait
push
rorb
fistl
cmpsb
jge
fstl
mov
fildl
mov
std
pop
push
in
xchg
xchg
and
cmp
inc
mov
pusha
xchg
add
mov
scas
xchg
pop
lock
ret
mov
das
inc
lret
jno
lds
sbb
es
test
mov
jge
inc
outsl
jge
arpl
xor
es
sbb
das
push
testb
lods
push
xlat
or
dec
ljmp
sub
adc
pusha
mov
or
ds
rorb
add
cmp
aaa
sub
mov
dec
xchg
data16
xchg
movsl
ljmp
pop
sub
adc
lods
repnz
xchg
xchg
jbe
cld
push
addb
popa
daa
pop
mov
mov
sti
sti
cmc
inc
int
cmp
xor
cmpsl
pop
xor
xor
mov
inc
vucomiss
std
inc
xor
add
bound
pop
push
orl
mov
lods
addb
mov
jle
jle
mov
andl
xchg
dec
shr
jo
jno
pop
dec
out
cmc
pusha
mov
mov
xchg
repz
xchg
adc
in
push
jno
rorl
aas
add
mov
xchg
cs
jb
xor
loope
cltd
pushf
push
jmp
jno
rcr
sbb
push
sub
mov
push
adc
sub
enter
cmpsl
out
pop
test
pop
dec
cwtl
or
popa
and
or
add
iret
mov
adc
imul
pop
icebp
ljmp
int
out
call
mov
jge
in
cmp
sbb
jns
stos
jl
lret
xchg
adc
dec
out
xor
sbb
xchg
cld
add
popa
popa
sahf
pushf
mov
cld
or
pop
pop
jnp
sti
push
cmp
mov
aas
enter
sti
cmp
int3
cld
jno
fadd
sub
sbb
fdivl
rcrl
fcompl
push
scas
cmp
out
fwait
adc
xchg
push
cmp
push
push
cmpsl
pop
mov
in
mov
add
jecxz
ret
jp
mov
std
outsb
lods
jl
mov
scas
rorb
ja
test
enter
int3
sbb
shlb
shlb
call
cmp
push
sbb
ja
sub
push
push
rcll
and
sbb
dec
testl
xor
in
and
rorb
inc
adc
movsl
sub
sub
jbe
and
fists
cmpsw
push
decl
int3
jno
inc
jnp
lods
out
xchg
adc
push
into
cmpsb
jns
lret
cmp
or
jp
movsb
icebp
or
je
test
mov
xor
lods
pop
inc
rcr
pop
xchg
ja
pop
inc
mov
push
pop
repz
imul
add
and
cmp
adc
jne
xchg
jnp
cmpsl
xchg
adc
cmp
xor
rorl
jno
nop
cmp
sarb
popf
cld
das
ret
pop
mov
movsb
icebp
xor
or
add
or
and
scas
push
sub
pop
xor
das
call
mov
mov
out
pop
shl
out
pop
pop
ret
sub
aaa
pop
stc
and
sub
jmp
in
xor
loope
fwait
add
jg
fcomps
arpl
mov
fidivl
mov
push
mov
ret
cmp
imull
xor
xchg
imul
mov
mov
cmp
leave
push
lods
mov
cs
jo
movsl
and
sub
cld
mov
imul
jmp
mov
subl
imul
in
jecxz
push
test
mov
rsqrtps
popf
ficoml
loop
cwtl
add
test
aas
fistps
rorl
test
pop
aad
add
stos
es
ret
adc
add
cmpsl
push
pop
in
ds
inc
or
pop
fwait
jno
subl
iret
aaa
cs
call
inc
rcll
inc
sub
loop
outsb
not
mov
fstps
jbe
rol
test
sbb
rcll
pop
jp
and
leave
jecxz
add
fs
pop
sbb
xor
sti
adc
into
lods
push
dec
adcb
mov
pop
push
sbb
std
xlat
movsb
ret
je
xchg
jae
mov
jno
add
repz
inc
push
add
mov
addr16
in
in
ror
fistpl
xchg
test
cmp
mov
enter
adc
add
mov
sti
shll
pop
mov
mov
inc
or
mov
adc
push
loopne
or
or
sbb
push
testb
fdivs
add
pop
pop
adc
push
popa
add
sub
ret
and
cmp
xchg
ljmp
add
mov
cmp
sbb
icebp
arpl
xchg
mov
mov
xor
jbe
mov
shl
push
adc
lcall
xchg
insb
in
clc
mov
or
ret
jmp
dec
push
xchg
pop
xchg
or
ret
mov
inc
jp
je
jne
in
mov
mov
or
dec
lock
mov
sbb
dec
lret
out
bound
shrl
test
dec
lds
xchg
jns
addr16
cmp
ret
inc
test
in
adc
addb
mov
aas
outsb
cmp
lods
add
pop
jo
dec
lahf
ret
and
jle
hlt
jl
bound
or
adc
jns
pop
mov
ss
pop
mov
pop
stos
testl
mov
sbb
xchg
dec
popa
ret
mov
leave
mov
shrl
fninit
pop
orl
mov
inc
lds
or
out
ror
test
jmp
out
mov
arpl
or
xor
mov
out
xchg
xchg
fwait
lret
test
adc
into
aam
mov
xchg
sahf
cmp
inc
sbb
test
jo
pop
add
pop
push
test
sbb
nop
sti
sbb
in
dec
movsb
sbb
jmp
lcall
jmp
xchg
fisttpl
dec
cltd
rolb
or
test
adc
das
jns
lahf
pushf
mov
clc
movsl
add
fildll
jne
push
sbb
pop
daa
test
call
pushf
shl
lea
out
movsb
xor
lds
mull
or
mov
mov
ja
sub
cmp
or
jge
incb
add
inc
push
jp
cmp
sub
pop
jae
sub
imul
inc
xor
pop
push
push
mov
cmc
movsb
inc
fnstsw
sbb
sbb
adc
inc
mov
addr16
or
push
insl
mov
jle
push
ljmp
das
mov
clc
jnp
mov
mov
push
xchg
mov
movl
testb
adc
pop
jo
dec
xchg
outsb
mov
push
xchg
inc
mov
subl
xchg
dec
push
dec
jnp
or
popa
bound
pop
pop
adcl
in
cmp
sub
adc
loope
dec
xchg
repnz
int
xor
out
loope
sbb
sbb
into
popa
outsl
push
inc
lock
loop
shlb
mov
xchg
or
dec
ljmp
pop
inc
retw
adc
sbb
mov
outsb
lock
xchg
bound
repz
sbbb
push
insl
andl
int
xorb
gs
loopne
mov
push
xor
mov
idivl
jge
mov
fisubs
paddw
sub
hlt
jne
mov
jae
jmp
cli
in
lods
lods
ljmp
mov
scas
repz
add
xchg
ret
sahf
aam
jno
dec
int
pop
xsaveopt
jmp
in
mov
adc
popa
lahf
and
lret
shll
xchg
cmp
scas
sbb
cwtl
and
jae
mov
into
xchg
and
dec
pop
adc
lea
mov
in
pop
add
pop
nop
outsb
stos
lahf
cmp
dec
push
std
pop
stos
mov
add
cmp
mov
xor
cmp
jbe
lea
mov
adc
cmpb
sbb
sarb
rorb
repz
pusha
pop
fisubs
adc
insb
inc
adc
rep
test
hlt
pop
push
subl
adcb
adcb
cli
mov
icebp
mov
mov
jb
aad
in
aad
push
sbb
loope
add
adc
xchg
pop
test
pop
mov
imul
aam
bound
cltd
jecxz
pop
adc
xor
nop
mov
jo
lods
xchg
cmp
mov
aad
sub
test
adc
fcompl
mov
aam
in
jo
mov
or
lods
mov
mov
xchg
pop
fsubrp
xchg
in
sub
imul
movq
adc
cmp
jb
push
sbb
jecxz
stc
stc
add
test
and
xorl
mov
add
sub
enter
xorl
push
push
cmp
inc
pop
jecxz
xchg
pop
xchg
push
mov
in
insl
sbb
pop
mov
mov
adc
das
xchg
pop
lods
mov
sti
dec
imul
insb
pushf
jge
inc
daa
icebp
mov
mov
inc
fiadds
cmpsl
mov
dec
dec
rcl
stos
mov
sub
cmp
inc
inc
mov
std
xchg
inc
xor
xlat
push
mov
pop
loopne
fists
es
ja
mov
cmp
push
and
sti
js
lods
mov
sbb
int3
and
mov
sbb
shrl
cmp
in
inc
repz
jmp
lcall
cmc
jbe
adc
sarl
push
cmc
rorl
les
push
mov
xor
pop
or
jbe
cmp
loopne
push
inc
ljmp
insl
inc
xchg
ret
jnp
les
pop
ja
outsb
sub
sbb
cmpsb
sbb
dec
mov
push
fucomp
push
add
sbb
shll
rcrl
xchg
test
cmc
mov
push
orl
jns
mov
inc
adc
jg
sub
pop
enter
push
xchg
mov
add
add
test
jmp
jo
and
push
mov
scas
lea
andb
lock
jae
xor
add
xchg
rcl
lods
xchg
rorl
lahf
outsl
xchg
or
mov
test
outsb
lock
mov
pop
lea
popa
push
clc
sar
dec
fidivrs
fs
loop
sbbb
cmpl
nop
andb
xor
mov
cld
inc
ret
je
jb
and
pop
stc
ret
cli
loope
stos
and
fnstcw
inc
sar
out
enter
pusha
aad
xchg
test
std
add
and
divb
je
lds
ret
mov
jge
shll
aam
and
push
pop
dec
push
stos
int3
xor
pop
in
ljmp
movsb
push
xchg
fs
xor
mov
rcll
loopne
lods
call
dec
int
cmp
mov
imul
in
das
imul
popa
dec
aad
push
xor
xor
or
or
pushf
cmpsl
or
mov
enter
add
sbbl
insb
jae
dec
push
or
mov
add
mov
outsl
lcall
inc
mov
lds
ret
dec
imul
add
and
pop
icebp
sarb
xchg
push
sub
fdecstp
push
pop
cli
cmp
cmp
jb
das
dec
arpl
xchg
pop
arpl
xchg
jmp
pop
push
sub
insl
shlb
jmp
call
and
ret
sub
cmpsb
pmaxsw
sbb
es
sub
or
xor
dec
pushf
es
stos
xchg
pop
arpl
inc
or
mov
xchg
loop
inc
add
sbb
lods
mov
fwait
mov
leave
ds
mov
xor
inc
dec
mov
push
mov
mov
adc
or
cwtl
adc
lea
xchg
mov
in
push
out
inc
adc
mull
mov
insb
inc
push
out
ret
test
in
lea
dec
mov
xchg
outsl
xor
insl
xor
add
mov
cmc
mov
lret
movsb
ss
out
cmp
and
out
pop
sub
mov
cmpb
insl
xchg
lds
push
pop
sub
jg
xchg
dec
add
jb
bound
jg
sbbb
xchg
adc
dec
jl
mov
fwait
xchg
and
mov
test
pusha
repz
lods
ss
fwait
lahf
push
lret
mov
hlt
outsl
outsb
scas
lcall
ljmp
cmp
mov
addb
fsubs
loopne
je
lea
outsl
cwtl
sbb
jecxz
or
cmp
mov
mov
xchg
pop
iret
sub
mov
and
pop
adcl
mov
mov
leave
bound
out
cltd
gs
or
push
in
je
or
in
popa
mov
push
outsb
mov
xor
insb
fcompl
pop
xor
xor
cmc
pop
filds
call
xchg
jne
pop
mov
cmp
nop
sahf
imul
jecxz
movsl
lods
sub
inc
xor
mov
jo
sahf
test
jg
sub
push
and
mov
lahf
mov
cmp
aaa
push
fidivrl
js
push
fstps
cld
xorb
jns
mov
scas
idivb
cld
mov
lds
mov
jg
mov
cmp
xor
dec
std
hlt
or
mov
mov
mov
mov
xor
jmp
cmc
incb
cltd
outsb
pushf
xor
imul
adc
fsubs
push
dec
jo
fmull
lods
sub
sahf
mov
jge
fmuls
popf
or
push
mov
add
pushf
cwtl
lret
mov
push
clc
sub
cwtl
xchg
add
mov
push
cli
cmp
and
lods
fadds
popfw
lea
xor
adcb
pop
insb
mov
push
mov
sbb
push
aad
gs
mov
js
cwtl
leave
inc
or
cld
outsb
add
mov
mov
push
aam
in
popf
mov
push
dec
pushf
add
inc
leave
sub
cmp
mov
pusha
jle
sub
lret
outsl
leave
enter
mov
jns
dec
enter
jmp
adc
mov
fmull
xchg
in
mov
in
sbbl
cmp
lret
add
cmp
push
mov
dec
cwtl
pop
stc
outsb
adc
jb
xchg
sbb
sbb
push
ja
stos
or
testl
arpl
mov
dec
ljmp
aaa
pop
and
hlt
popf
loopne
jne
mov
pop
in
ss
fwait
arpl
shll
fs
mov
insl
data16
push
daa
mov
insb
mov
mov
push
fadds
stc
adc
syscall
xchg
ljmp
int
mov
dec
or
xor
lret
mov
lret
je
cmp
push
sbb
jns
or
sahf
ja
jecxz
cmpsl
jbe
mov
outsl
xlat
jl
pusha
in
bound
mov
rep
icebp
mov
mov
ds
pop
daa
jle
es
pop
repz
rcrb
cmp
cli
jae
imul
int
aaa
xlat
cli
jns
imul
mov
movzwl
jne
ds
sbb
jae
mov
pop
jl
xor
cld
pop
sahf
mov
es
or
mov
test
cmp
dec
popf
xorl
jmp
insl
xchg
mov
stc
in
and
inc
aas
decl
bnd
ja
arpl
mov
cmp
loop
cmc
adc
xor
int3
pushl
fadds
sub
pop
int3
fsubrs
push
sub
fstpt
lea
cmp
adc
aas
fisubrl
imulb
dec
rorb
loopne
pop
cld
or
xor
in
sbb
sti
xchg
jmp
inc
test
push
mov
lret
in
imul
cmpsl
mov
orb
fistps
push
nop
in
test
add
or
push
pusha
jns
push
jmp
test
adc
inc
loopne
add
add
rolw
scas
mov
xlat
sahf
loopne
xchg
mov
loopne
jecxz
dec
mov
pop
imulb
test
jbe
pop
jb
pop
cmpsb
pop
shll
adc
lret
cmp
xchg
sub
mov
inc
faddl
das
fidivl
repz
aam
sar
idivb
int3
test
icebp
mov
pop
push
inc
sbb
fwait
mov
jne
fwait
call
popa
inc
mov
aad
inc
push
mov
stc
mov
test
arpl
fistps
or
mov
bound
sbb
pushf
mov
rcr
xor
pop
mov
mov
nop
jg
aaa
mov
in
scas
or
out
inc
out
sub
in
push
into
bound
iret
lock
or
mov
mov
push
scas
out
push
push
lahf
mov
mov
out
out
push
xor
xor
sbb
js
sub
lds
push
scas
mov
mov
or
dec
test
dec
mov
test
enter
dec
lock
mov
pop
insb
mov
mov
popf
outsb
push
lret
ljmp
test
mov
sub
adc
in
pop
cmp
pushf
add
rdpmc
dec
cltd
dec
mov
shrl
sub
scas
aam
cli
daa
inc
cwtl
push
push
mov
cmp
mov
jmp
mov
inc
aam
pushf
or
or
inc
jno
jg
push
mov
leave
mov
dec
ss
jmp
lods
add
adc
shlb
in
push
mov
sub
jo
repnz
jne
leave
inc
int
jns
lds
jnp
shll
or
icebp
push
int3
daa
mov
mov
jae
fimuls
scas
into
xor
les
xchg
sbb
jae
pop
fwait
xor
sub
movsl
leave
push
es
aaa
dec
cwtl
daa
fstpl
mov
or
push
push
stos
mov
aad
in
push
leave
icebp
dec
push
stos
or
dec
jmp
xchg
cld
mov
test
outsl
xchg
mov
pop
dec
lock
mov
sbbl
sub
or
sub
iret
xchg
pop
mov
inc
out
or
pop
sub
adc
dec
cli
push
sub
mov
xlat
jnp
orb
inc
sbbl
pop
mov
fwait
mov
das
test
dec
mov
push
mov
loop
xor
into
pop
fiadds
incb
popf
mov
incb
repz
mov
pop
mov
jecxz
mov
and
rcl
mov
pop
mov
movsl
pop
xchg
mov
dec
inc
in
stc
inc
xchg
popa
cmp
ret
fsts
leave
aam
pop
mov
divb
dec
jo
push
or
int3
xor
add
lds
jne
popa
lods
push
and
sahf
ret
out
pop
and
push
jbe
mov
notb
mov
xor
xchg
adc
mov
call
pop
rolb
test
add
stc
push
push
mov
adc
push
lea
addr16
js
push
clc
mov
aaa
rclb
xor
dec
aaa
std
in
stc
ficomps
mov
inc
cwtl
shl
movsl
adc
repnz
sub
sahf
inc
aad
mov
dec
cltd
popa
jbe
mov
jp
xchg
insl
out
or
sbb
ljmp
aas
push
mov
jg
test
test
xchg
fisubs
daa
int
dec
jge
icebp
and
sbb
mov
je
sub
jecxz
and
lods
sti
insb
jnp
fldt
mov
in
and
dec
fcoml
cmp
test
pop
fiadds
rorl
aam
pop
mov
leave
inc
cli
kmovd
xchg
dec
adc
inc
sbb
insb
lcall
jb
es
icebp
aas
or
lds
pop
lods
lahf
mov
jae
jp
push
nop
lock
pop
mov
je
add
das
sbb
pop
sahf
mov
mov
mov
or
jge
pop
aad
inc
mov
arpl
add
hlt
jnp
push
add
call
stos
out
popa
aam
sbb
sub
xor
test
dec
mov
movsb
xor
or
or
aad
lock
pushf
jmp
arpl
sbb
fidivrs
out
fmul
adc
push
inc
add
mov
je
cmpsb
or
leave
into
test
xchg
test
xor
mov
loope
stos
out
aam
pop
xchg
mov
fcoml
imul
fldenv
out
add
cmp
movsl
inc
andl
ja
push
add
add
ss
jle
ja
iret
dec
mov
test
out
js
jmp
pop
icebp
push
outsl
mov
mov
push
or
das
pop
or
add
dec
dec
outsl
outsl
sbb
fnstcw
pop
into
add
cs
adc
sbb
repz
xor
cwtl
mov
dec
push
push
clc
sbb
cmovge
xchg
adc
shrb
ret
insb
es
xchg
cli
inc
sbb
mov
divl
mov
and
or
lds
jbe
loop
pop
std
int3
pop
sub
and
inc
and
sub
flds
mov
mov
sahf
cmpsw
jae
cld
test
lret
repnz
mov
cmp
pop
cmp
mov
lret
jbe
push
adc
cmpsb
fcmovu
add
imul
sar
mov
fwait
in
lahf
sbbb
dec
push
dec
push
push
inc
pop
push
cmc
test
adc
mov
ss
push
movsl
pop
cld
mov
sub
mov
mov
sbbb
int
pop
dec
scas
scas
popa
ret
push
stos
xchg
cmc
sbb
sbb
xor
loopne
ds
and
out
pop
push
data16
stc
mov
shrl
int3
je
push
sbb
rorb
jp
xchg
addr16
icebp
xor
loopne
int3
cld
add
pop
fmul
adc
jmp
jno
cmp
xor
std
push
lret
or
pop
and
fbstp
insl
jle
cmpsb
fcmovne
sbb
xchg
jae
lock
clc
mov
test
addr16
or
sbb
cmpsl
imul
push
jmp
xchg
push
popa
mov
gs
scas
rolb
sbb
scas
aas
cmpl
in
inc
inc
dec
ud2
xor
mov
xor
aam
rcr
loop
lea
les
push
inc
lcall
scas
shrl
cmpsl
mov
cmp
pop
mov
sbb
lock
adc
idivl
mov
out
mov
into
lcall
xor
orb
mov
adc
divb
jb
mov
lcall
stc
test
ljmp
mov
inc
jno
jo
fwait
adc
mov
and
je
pop
cmpsl
std
andb
xchg
push
lahf
mov
pusha
das
call
push
pusha
stc
jno
ret
jecxz
pop
std
in
roll
and
or
sub
cmp
hlt
hlt
mov
prefetchwt1
or
xchg
cmp
les
jb
mov
mov
rep
scas
mov
jns
mov
lds
outsl
ficomps
or
loope
lock
int3
rcrb
adc
or
mov
xor
adc
xchg
shl
in
aad
gs
mov
pop
dec
push
and
sbb
dec
jno
sahf
popf
test
frstor
loopne
and
mov
ljmp
outsl
repz
jg
lret
jne
mov
ss
inc
ret
jle
or
lea
jle
shr
sti
sbb
sbb
adc
insb
insl
imul
jmp
test
mov
add
addb
pop
pop
xor
lahf
pop
jne
xor
call
icebp
ds
fiaddl
dec
shll
jo
dec
cmp
pop
cld
jo
daa
ffreep
xchg
aad
mov
movsl
stos
adc
add
cmpsb
or
iret
lods
fs
popf
mov
imul
shrl
or
mov
mov
mov
add
adc
das
outsb
jg
mov
fdivrp
mov
insl
xchg
pushl
xor
cmc
push
mov
mov
push
std
push
in
push
sbb
jl
mov
mov
sti
or
inc
jp
arpl
xlat
ficomps
outsb
push
mov
mov
inc
and
push
enter
repz
fiadds
and
arpl
and
add
or
inc
ficoml
movsl
or
cmpsb
fldcw
xor
repz
fnsave
fsubrs
mov
rcrb
sub
pop
jmp
fmull
std
mov
cli
jne
inc
or
fisubl
cmpsb
scas
jge
rclb
je
xor
push
pmaxsw
ficoml
add
xorl
insl
fidivl
mov
xchg
jg
cmpsl
inc
push
xchg
fildll
fistpll
add
outsl
cmp
inc
outsl
iret
scas
push
lds
sar
inc
adc
ds
mov
dec
aaa
push
lsl
movsb
sub
outsb
cli
cmp
nop
lret
push
pop
sub
test
inc
and
sbb
movsb
sbb
lret
into
rclb
jmp
rep
push
int3
std
test
dec
gs
inc
lds
xchg
sub
and
push
push
xchg
cmp
and
xor
or
je
mov
sbb
mov
bound
jne
lret
jns
jb
inc
mov
or
push
inc
push
imul
cs
shll
rcrb
shr
mov
or
int
stos
pop
push
push
std
cmp
pop
ret
call
sub
ret
push
idivb
fwait
aaa
lock
int
add
ljmp
aas
sbb
ret
int3
out
imul
dec
sub
daa
rorl
outsl
mov
gs
loope
jle
in
je
pushf
je
add
clc
mov
push
mov
push
divl
jg
pop
movsl
int3
pop
inc
fnsetpm(287
sub
hlt
add
xor
fbstp
jne
int
cmpsl
inc
cli
shl
outsl
cli
popf
sbb
cmp
testb
fsubp
fldl2e
ds
addr16
sbb
cmpsb
aam
mov
inc
xchg
add
in
xchg
adc
mov
cmp
push
mov
or
inc
stos
sub
fs
push
or
pop
lret
xor
cmp
xchg
call
dec
lea
push
fcomps
jecxz
and
insl
into
and
shlw
aaa
push
and
repnz
in
jl
pop
jae
push
sbb
dec
sbb
mov
and
jle
idivl
aas
leave
pop
int
xlat
decb
sub
jge
rolb
jecxz
inc
mov
push
rol
popl
sub
movsb
out
leave
shr
add
cmp
cmp
or
loope
jg
xlat
rolb
lods
lea
cmp
sarl
xchg
pop
xchg
jo
cwtl
lods
idivb
cmp
lcall
mov
testb
push
in
and
out
mov
scas
xchg
scas
push
adc
ret
sbb
in
pop
sub
dec
gs
addr16
xchg
or
jne
dec
inc
cmpsl
cmp
sbb
into
cmc
insl
xor
push
pop
lcall
inc
push
xchg
adc
mulb
leave
aas
mov
and
jns
arpl
rorb
pop
inc
mov
push
pop
mov
xor
mov
leave
out
mov
enter
push
jne
rcrl
rorb
and
push
jno
pushl
test
mov
pop
leave
push
sbb
call
inc
out
jno
add
cmc
dec
loope
jnp
dec
jb
loopne
push
test
xor
and
mov
jmp
push
adc
jno
dec
js
cmpsb
hlt
out
fisubrs
jnp
sahf
xor
fnstsw
dec
imul
shlb
lret
mov
xor
mov
out
sub
enter
test
int3
push
sbb
push
mov
loope
and
push
adc
das
xchg
or
xchg
stc
xchg
cmp
xor
jns
int3
jmp
jbe
mov
and
imul
xorb
add
adc
mov
push
popf
icebp
fstl
mov
test
jp
pop
mov
scas
jge
sub
movsb
pop
lods
scas
popf
in
push
mov
fwait
js
not
inc
sub
rol
testl
repz
mov
xor
test
ds
cwtl
sub
andl
lods
es
push
sub
lds
in
add
xor
adc
adc
adc
daa
popa
jl
les
pusha
cmp
xchg
inc
mov
add
movsb
outsb
mov
sbb
mov
bswap
cltd
sbb
inc
mov
cltd
or
mov
daa
js
out
and
cmp
and
aad
arpl
and
jp
adc
aad
dec
stos
adc
push
test
in
mov
std
mov
jl
js
dec
lock
xor
xor
sub
mov
sbb
fists
sub
popf
and
mov
lock
push
scas
mov
in
addb
jo
scas
add
push
lea
xor
out
dec
lahf
or
inc
sub
mov
or
in
mov
je
jns
sbb
call
shrl
push
push
sbb
dec
dec
fcoml
int3
lods
lahf
push
sbb
test
mov
push
scas
imul
sbb
adc
adc
xchg
jb
popa
push
lahf
pop
xor
movb
enter
sbb
cmp
into
jl
mov
inc
cmp
push
mov
mov
lods
out
stos
jb
test
mov
xor
lds
ds
adc
ja
mov
lds
or
dec
sbb
cmp
mov
sbb
and
jp
or
cmp
mov
jle
mov
xor
dec
add
mov
sbb
add
mov
repz
cmp
dec
jbe
lahf
mov
cld
leave
jge
shl
and
adc
pop
or
xchg
jp
cltd
stos
pop
pop
std
popa
into
sub
call
sbb
jge
xchg
jmp
aad
shll
pop
int
out
fcoms
dec
mov
pushf
das
fwait
cmpsb
lret
idivb
pop
sub
mov
cwtl
aas
test
les
dec
call
iret
adc
subps
enter
pop
nop
inc
adc
mov
push
sahf
jl
insl
scas
loopne
add
and
mov
out
push
loop
cli
and
dec
in
pop
ja
jg
cmp
mov
inc
ret
stos
jne
jge
sub
jae
and
cmc
push
ret
mov
pop
mov
xchg
jnp
jmp
adcl
and
roll
pop
insl
je
dec
add
xchg
pop
mov
imul
cs
push
insl
dec
xchg
bound
mov
sbb
fidivrs
or
cli
pop
or
jae
aas
dec
xchg
mov
mov
aad
adc
jne
mov
jecxz
scas
adc
arpl
mov
shll
mov
xchg
cmpsb
inc
adc
cmp
sti
inc
dec
mov
mov
sub
adc
add
sub
cmpsb
jnp
jg
dec
repz
out
adc
fbstp
and
sbb
test
adc
bound
push
int
push
insl
inc
ror
mov
jne
insl
push
cltd
add
inc
pop
push
mov
cltd
cli
mov
mov
fidivrs
movsb
add
fists
add
pop
push
push
mov
sahf
mov
cmpsl
cmp
xchg
loope
test
ja
in
loope
xor
cmp
push
vpackssdw
loope
std
dec
enter
rorl
fidivs
mov
push
jae
imul
imul
out
sub
ror
cmc
lahf
jo
mov
sub
mov
popa
xor
repz
jmp
data16
cld
sbb
xor
cli
dec
lahf
ja
cmp
negb
push
cld
dec
cmpsl
ret
pop
mov
add
in
mov
pushf
mov
xor
sbb
in
cltd
addb
ffree
jno
sbb
ret
sub
scas
inc
adc
sarl
cltd
push
add
xchg
push
rcrl
or
std
push
push
or
xchg
leave
sbb
add
cltd
xchg
aaa
inc
dec
repz
xlat
aaa
lahf
aas
lock
fcoml
mov
xlat
mov
sti
mov
push
loop
jl
decl
cmp
xor
leave
in
into
movsb
cmpsl
test
out
push
lods
pusha
in
xchg
jg
test
rcrb
mov
rclb
jecxz
dec
cmpl
je
sbb
in
add
xor
and
mov
cld
cmp
notb
inc
mov
call
pop
pop
mov
jmp
or
pop
lock
xchg
fcompl
cwtl
clc
dec
push
and
lret
adc
cmp
pop
insb
add
mov
subl
sbb
mov
sbb
stc
xchg
out
test
add
in
pusha
clc
aam
fs
adc
icebp
and
mov
scas
in
int
xchg
scas
rcrl
jns
aam
adcl
mov
scas
xor
push
mov
leave
mov
into
push
fwait
in
jg
inc
mov
cld
inc
outsl
adc
lahf
inc
or
or
pop
mov
ljmp
cmp
xchg
jle
negl
and
pusha
xlat
inc
push
sarl
push
adc
xor
jmp
xchg
xchg
and
repz
repnz
fidivrl
pop
xchg
hlt
testb
sbb
xor
inc
xchg
xor
sbbb
pop
sbb
fcmovnb
ficoml
fchs
inc
aam
ja
jae
xchg
push
pop
sbb
cmp
test
shrb
cwtl
mov
ret
push
lret
inc
pop
xchg
rcrl
and
jmp
icebp
movsl
les
mov
adc
mov
decl
rorb
mov
xor
or
dec
sarl
xchg
hlt
out
lret
bound
test
je
jnp
insl
xchg
test
lret
fwait
adc
repnz
or
mov
mov
cmc
gs
cmp
je
fistpl
adc
leave
daa
adc
inc
insb
push
add
sbb
push
xor
dec
mov
repz
shr
pop
mov
xor
fisubl
repz
icebp
and
movsb
jo
rorl
push
stos
loopne
inc
xchg
repz
push
lods
cmp
iret
cs
ret
pop
pop
add
push
pushf
push
xor
sub
jle
hlt
jno
outsl
test
aas
aaa
or
insl
pop
jl
xchg
gs
adc
outsb
pop
add
jp
mov
dec
mov
fs
cli
jl
or
and
in
pop
jl
mov
inc
inc
push
and
push
in
scas
push
inc
rcrb
pop
inc
xchg
in
aas
pop
inc
decl
inc
faddl
dec
pop
push
lret
add
adc
cmp
mov
lea
or
adc
xor
cmp
cli
sbb
stc
sbb
clc
cmp
stc
push
ror
vpunpckhwd
lret
div
pop
mov
sub
cli
stos
imul
pop
bts
out
stos
cmp
cld
mov
hlt
and
xor
sub
bound
iret
jo
lahf
cmpsl
cld
daa
inc
stos
loop
mov
fs
mov
imul
jns
mov
ljmp
lret
stos
jne
sbb
add
pop
dec
sub
insl
mov
adc
ret
mov
xchg
enter
add
rcrl
aaa
mov
sbb
nop
jle
pop
cmp
int
xor
rcll
ret
mov
stc
cmp
adc
adc
or
pushf
rorb
testb
bound
pop
fisubrs
ds
dec
and
inc
pop
insl
jg
or
sub
mov
shll
test
inc
push
inc
sbb
jne
outsl
stos
cmp
cmpl
ds
js
mov
sbb
mov
dec
xor
push
fcoml
mov
movb
push
sbb
push
loope
or
push
movsb
mov
mov
inc
mov
mov
adc
jl
pop
out
nop
aaa
sbb
ret
out
jge
shlb
outsb
cmp
push
lcall
push
ja
push
imul
daa
mov
adc
jnp
xchg
and
test
xor
pusha
jge
xchg
lods
imul
fs
pop
ror
fsubr
xchg
cmp
and
enter
xchg
inc
inc
pop
dec
je
inc
xchg
jbe
lcall
lahf
loopne
push
mov
cltd
mov
mov
inc
loope
jecxz
sti
inc
jnp
mov
lods
push
imul
jecxz
dec
aas
into
shrl
xor
inc
sub
data16
ljmp
js
test
aas
out
push
add
dec
adc
in
xorl
aad
xchg
pop
pop
sub
je
out
int
andl
mov
ret
dec
popa
xor
int
fisttps
xchg
scas
add
repnz
lret
add
cmp
test
test
adc
scas
push
mov
lods
loop
addr16
add
and
push
adc
add
cmp
jno
or
sbb
xchg
dec
pop
or
sub
sub
mov
xchg
lcall
or
jecxz
sbb
sub
xchg
arpl
dec
addb
add
sub
fwait
push
push
jge
push
call
mov
cmc
add
mov
dec
cmp
fisttps
mov
int
xchg
imul
inc
aas
mov
lret
sahf
popa
adc
test
jne
mov
out
cmp
xchg
sbb
pop
in
xor
push
mov
sahf
lods
pop
scas
and
cmp
adc
pop
cmp
mov
pop
sbb
neg
adc
repnz
out
in
fsubs
int3
xlat
enter
xor
jne
dec
mov
loopne
jne
xchg
cmpsl
les
push
push
xor
pop
sbb
cltd
jo
addr16
xor
nop
addr16
add
xchg
imul
daa
out
cltd
inc
imul
test
testl
sub
dec
into
sub
sub
mov
data16
int3
test
aam
test
jne
repz
sar
xchg
mov
jmp
push
insb
jle
push
push
mov
push
xor
lock
and
inc
aam
in
fdivrs
pop
dec
push
push
jle
imul
pop
imul
jne
ds
adc
adc
ss
cmp
int3
push
and
repz
sti
sbb
push
sbb
aam
add
xor
ret
mov
cmp
jecxz
dec
sar
xchg
enter
and
xchg
adc
mov
dec
nop
sti
scas
aaa
pop
mov
mov
sbb
add
movsb
sahf
in
add
in
lds
stc
mov
test
loop
push
and
pop
mov
out
data16
repnz
aaa
pusha
add
aad
rclb
push
mov
notl
mov
push
mov
jbe
inc
mov
ret
shlb
add
mov
std
push
mov
test
mov
ret
mov
mov
loope
movb
mov
std
mov
xlat
and
xor
sub
sbb
sbb
and
mov
add
pop
pushw
lret
and
enter
xchg
je
ds
push
sub
push
shrl
aam
adc
jno
into
in
push
ja
add
test
cld
add
imul
ljmp
fldcw
fsubrl
jge
mov
jne
or
and
pop
inc
je
cmp
pop
mov
xchg
movsl
and
or
and
lahf
inc
sub
mov
push
push
bound
xchg
xor
xor
out
cmc
add
out
xchg
es
cmc
jl
jne
call
repz
and
hlt
fisttpll
out
mov
xchg
popa
popf
dec
xlat
lret
inc
xlat
je
mov
xchg
dec
jmp
fucomp
loop
js
fists
pop
push
mov
mov
dec
mov
frstor
addr16
jne
leave
ret
or
xchg
add
mov
mov
sbb
mov
and
scas
test
mov
push
dec
adc
xor
mov
bound
mov
outsl
sub
xchg
cmp
aas
lahf
sbb
jo
fisubs
jmp
dec
dec
xor
sbb
push
js
dec
mov
jne
jno
out
scas
insb
movb
int3
out
icebp
sti
bound
push
test
dec
adcb
in
inc
leave
rorl
es
sub
mov
adc
add
out
test
cmc
outsl
test
jecxz
jl
and
int3
xor
pushf
notl
scas
xchg
cltd
push
sub
cwtl
lret
call
cmc
scas
out
test
jns
and
dec
mov
sbb
xchg
mov
cmp
and
aad
pop
fimull
pop
xlat
scas
push
test
sbb
jl
mov
fs
cbtw
sub
mov
push
pop
push
insb
mov
jg
cmp
js
sub
enter
and
add
pop
std
xor
push
popf
cwtl
mov
mov
out
mov
push
nop
pop
jecxz
aam
lahf
lcall
loope
lods
push
fdivl
aas
icebp
loope
mov
xor
adc
icebp
mov
shrb
mov
aas
push
arpl
js
insl
xchg
jae
or
hlt
pop
dec
dec
jno
pop
addr16
imul
scas
scas
ljmp
inc
push
outsb
js
out
imul
pop
sub
iret
xchg
push
and
insb
shl
and
fucomp
sahf
cmp
cltd
inc
dec
push
shlb
or
push
es
jge
sbb
daa
or
ret
shll
arpl
sbb
push
std
lods
pop
dec
daa
and
adc
test
pop
pusha
adc
add
sub
mov
or
mov
mov
adc
dec
xchg
jns
js
xor
call
arpl
scas
xchg
movsl
movl
cwtl
sub
sub
pop
jge
std
jbe
or
mov
scas
xor
or
incb
push
add
loop
int
shll
xchg
repnz
fwait
stos
cld
xor
scas
lods
xlat
sbb
clc
inc
sub
sub
push
push
dec
adc
xor
pop
daa
mov
jl
test
xchg
cmp
rcl
dec
popf
xchg
cvtps2pi
mov
outsl
jle
lds
les
add
jnp
mov
ljmp
or
fwait
leave
xor
arpl
imul
push
push
rorb
icebp
xchg
mov
or
das
mov
icebp
xchg
stc
filds
inc
jl
dec
shrl
repnz
in
fsubp
iret
aam
aad
jns
xchg
loopne
lods
mov
icebp
xchg
popa
ljmp
cmp
hlt
aam
in
push
outsb
or
sub
sbb
in
push
mov
or
stos
pop
xchg
cli
lds
fdivr
jns
repnz
movsl
loop
enter
addr16
jg
mov
mov
mov
test
jo
mov
rorl
add
imull
dec
daa
cmc
fidivl
icebp
lock
xchg
ret
lahf
push
mov
aas
inc
xor
push
insb
push
stos
shr
enter
fsubl
jecxz
sbb
leave
push
xchg
jno
das
cmp
inc
pop
repz
xchg
inc
jg
mov
xor
lock
addr16
pusha
cwtl
ljmp
sub
es
dec
out
adc
xor
inc
push
sbb
out
fwait
push
xchg
popa
pop
loopne
mov
xchg
inc
fbld
mov
mov
inc
pop
xchg
xor
and
cwtl
in
or
mov
sbb
lds
jge
js
push
out
pop
movsb
ds
movsl
aam
xchg
in
push
mov
sbbb
or
pop
jnp
pop
sub
push
pop
jbe
fwait
addr16
dec
aas
dec
movsl
jp
dec
iret
test
subb
sub
in
jecxz
dec
rolb
or
js
cmp
outsl
mov
sbb
jle
fists
adc
pop
mov
and
fs
mov
paddsb
push
ja
into
nop
and
mov
int
mov
inc
out
fs
jp
cmp
stc
mov
fsubr
lods
das
mov
pop
rorl
js
aaa
data16
jnp
loope
outsl
inc
fldcw
into
flds
loop
cmpsb
and
sar
mov
push
stos
inc
mov
inc
jmp
jo
stos
fwait
mov
out
leave
mov
pop
sub
xlat
dec
out
loop
bound
push
mov
sub
inc
adc
adc
mov
inc
cmp
sub
js
push
pop
xor
mov
notl
popa
cmp
sbb
testb
add
jo
in
fwait
pop
clc
xor
dec
jne
jl
inc
stc
lods
pop
cmpsl
pop
adc
pushf
pusha
or
adc
es
bound
les
lret
fcomip
mov
mov
ljmp
enter
lods
adcl
pop
in
pop
fisubrs
or
loop
int
push
andl
inc
jae
mov
sub
sbbl
fld
scas
pop
hlt
mov
xchg
subb
sti
sub
sub
lea
mov
mov
mov
sarl
dec
cmpsb
or
jns
push
pop
dec
push
int
push
xor
ret
and
mov
or
hlt
xor
xchg
cwtl
mov
lea
mov
sbb
fdivp
test
clc
addb
lods
scas
adc
mov
out
neg
stos
out
out
jge
pop
jno
add
std
pop
push
jecxz
pop
push
es
cltd
std
in
orl
nop
mov
jp
cld
push
sarb
loopne
out
jbe
jae
and
and
and
cmp
js
js
jecxz
push
iret
push
stos
icebp
fsubrs
jb
or
mov
jmp
fsubs
divb
push
mov
push
notb
or
or
cmpsl
jecxz
fcompl
push
hlt
jg
and
adc
jnp
add
pop
dec
sub
inc
or
xor
notb
fcmovnb
jmp
push
or
mov
cwtl
cmp
mov
fldt
mov
je
imul
adc
inc
stos
jmp
cmpsb
outsl
imul
sbb
xor
imul
lock
mov
adc
insb
add
nop
sub
ret
jge
xchg
je
cmp
cmp
sub
shlb
pop
testl
call
mov
push
cmpb
sbb
pop
cmp
in
popa
movsl
das
mov
jbe
popl
pop
jmp
push
or
lret
and
lahf
or
test
fidivs
xlat
push
pop
mov
adc
lea
leave
and
ljmp
inc
enter
pop
clc
xchg
enter
test
rolb
sbb
fisubs
cwtl
push
jecxz
adc
stos
rcrl
xorl
jl
pop
xchg
push
push
push
cmpsl
mov
sub
test
add
es
lea
fwait
pop
orb
jns
call
daa
mov
fs
jl
sarl
popa
xor
popf
or
inc
xchg
xchg
arpl
sbb
mov
xor
jae
mov
mov
pop
add
lods
aad
mov
nop
outsl
mov
negb
stc
jo
aaa
wbinvd
fdivr
les
jb
jg
cmc
lds
jae
mov
iret
push
push
jnp
aaa
sub
testb
sbb
sbb
and
jbe
sti
inc
pop
mov
stos
xor
ds
test
add
les
and
mov
pop
xchg
shlb
subl
dec
sub
cmp
outsb
test
push
fmulp
inc
arpl
adc
popa
xchg
and
pop
cwtl
sbb
jmp
mov
sbb
adc
sbb
mov
movsl
mov
aas
insb
lahf
clc
arpl
sub
ja
std
sti
decl
jne
xchg
mov
mov
call
sbb
inc
lods
jl
adc
cmp
daa
loop
aad
xchg
add
out
inc
dec
nop
lea
daa
stc
mov
mov
mov
xchg
bound
cmpsb
or
addr16
fcoml
not
or
pop
push
cmp
ds
jle
cmp
enter
and
sbb
add
mov
lea
mov
mov
das
or
xlat
ret
ljmp
in
push
aad
add
xchg
adc
movsl
cwtl
or
int3
popa
loop
pop
sub
mov
shlb
mov
mov
lods
push
sti
subb
sub
lcall
jg
mov
push
in
inc
out
inc
test
hlt
sbb
lock
push
cmp
aad
shl
mov
in
xchg
cmpb
repz
mov
jg
sbb
and
insb
or
pop
in
mov
jne
fnstenv
les
sbb
xchg
pop
test
or
int
jecxz
adc
sub
mov
cld
mov
jae
ss
xor
dec
pop
xchg
mov
mov
xchg
lahf
sbb
fstpt
inc
fsubrl
dec
cs
fnstenv
pop
jle
imul
movsl
shrl
xchg
mov
mov
mov
shrl
add
rcrl
pop
sub
out
jns
daa
push
ss
or
pusha
push
jl
gs
movsb
popf
jno
xchg
adc
fsubrl
cmp
and
mov
dec
adc
xchg
stc
dec
push
lods
aam
mov
push
sbb
jl
repnz
xor
add
add
mov
dec
sti
aam
dec
push
js
cmc
ret
pop
call
jg
jne
rep
pop
imul
test
sub
or
mov
and
lds
xchg
ss
stos
push
mov
adc
pop
jmp
sbb
fnsave
push
dec
and
decl
dec
mov
jle
jnp
lea
xor
and
xchg
xchg
ret
insl
xor
std
fwait
lahf
fmuls
xchg
and
dec
cmp
dec
test
xchg
jne
ja
jbe
xor
pop
xor
and
pop
xchg
outsb
sbb
addr16
adc
push
ret
mov
out
es
and
popf
inc
sbb
out
inc
scas
xor
adc
xor
shll
jae
sub
xor
add
loopne
sub
inc
xor
iret
or
aad
es
fsts
dec
cmp
dec
jecxz
mov
jp
orl
cmp
or
fcmovnb
push
jp
insl
imul
mov
pop
imull
movsl
inc
mov
jle
lcall
inc
icebp
sbb
orb
fisubrl
notl
test
jbe
cmp
sbb
scas
lcall
jl
fisttpl
ljmp
out
add
shr
and
jl
fdivs
xchg
imul
jno
das
outsl
pop
stos
rclb
sub
aad
mov
imul
fadd
int
mov
mov
subl
stos
lock
aas
jecxz
push
das
je
pop
out
mov
ret
cmp
out
clc
mov
dec
scas
mov
out
sbb
aad
jmp
inc
and
sbb
insl
pop
inc
adc
mov
push
hlt
mov
lock
cmpsb
jbe
jmp
inc
add
and
pop
pop
mov
cmp
cmp
fs
les
hlt
stos
inc
test
mov
jecxz
cmp
mov
add
pop
mov
cmpsl
loope
xchg
loope
not
pushf
cmp
fsubr
filds
hlt
sub
js
jbe,pt
mov
inc
sbbl
sti
mov
mov
arpl
push
jge
shr
jmp
bound
lock
mov
push
xor
lods
adc
in
push
xor
int3
loope
les
push
test
inc
push
ror
dec
cmp
lea
ret
dec
dec
mov
lods
mov
xor
mov
fld
adc
cli
cld
mov
xchg
xor
inc
adc
add
adc
mov
xchg
mov
xchg
mov
xchg
sbb
ret
sub
jmp
loopne
fwait
or
fnsave
test
mov
dec
dec
mov
aad
shl
daa
ss
sbb
sub
roll
das
mov
mov
inc
mov
std
sub
lahf
mov
ds
test
into
mov
jl
and
stos
jmp
dec
lcall
or
xchg
add
arpl
fsts
add
iret
mov
fisttps
sahf
sbb
loop
pop
fsubs
sub
mov
xchg
and
inc
jge
mov
pop
aam
pop
xor
mov
aaa
clc
in
xchg
push
and
mov
dec
dec
loope
test
or
std
jmp
jl
xor
ds
rcr
ss
or
iret
jae
ljmp
lods
xchg
stc
jno
push
mov
scas
stc
ret
pop
dec
outsb
sbb
pop
and
mov
add
in
pop
pop
lret
xchg
xchg
jmp
jne
adc
inc
ds
movsl
out
rolb
les
adc
dec
and
das
sbb
mov
in
mov
xchg
in
std
gs
negl
pop
or
pop
cs
ret
jmpw
mov
mov
in
or
and
and
aam
lods
in
jmp
push
ret
pop
jle
dec
das
push
dec
ds
jae
dec
sbb
xor
dec
cmpsl
cwtl
cmpl
jb
imul
popf
ret
adc
push
sbbl
lods
cmpsl
adc
add
adc
dec
cld
in
sahf
mov
add
cmp
test
cmp
ja
popf
in
push
jae
cmp
jo
jecxz
push
lock
cmpsb
pushf
mov
or
scas
inc
xor
aad
gs
daa
fs
jb
cld
cli
add
pop
shll
idivl
lret
mov
xor
aam
xor
shlb
std
inc
adcl
pusha
icebp
and
repz
fiadds
inc
ljmp
sbb
xor
shlb
mov
jno
xchg
inc
test
cs
and
lock
add
jbe
test
or
and
sbb
scas
scas
sub
add
pop
les
mov
add
loop
xchg
movsb
addb
and
test
mov
fnstenv
cli
ds
add
pop
xchg
push
adc
xor
loop
mov
in
arpl
mov
outsl
and
out
mov
rcrb
pop
pop
lock
stc
mov
adc
popa
cwtl
pop
aam
pop
scas
in
ss
jb
xlat
rcll
push
mov
mov
lret
sbb
xlat
xor
push
xor
lret
mov
jo
mov
jp
push
or
out
sbb
fsubs
adc
test
je
cld
popa
mov
pop
dec
mov
xchg
xchg
neg
cld
sbb
cmp
sub
pop
push
scas
in
push
or
adc
inc
aam
das
mov
stos
shrl
lcall
insb
pop
cltd
out
or
jae
and
push
shlb
std
pop
cli
or
adc
or
pop
call
cli
xor
dec
bound
mov
or
or
mov
into
cmp
cmc
sub
dec
lahf
imul
inc
xchg
inc
dec
out
into
lret
or
sub
add
les
sbb
mov
dec
call
pop
or
test
int
jl
mov
test
repz
mov
cmpsl
aam
loopne
push
dec
pop
pop
mov
sbb
addb
aaa
fldlg2
cmpsl
out
movsl
xor
je
mov
lret
adc
in
adc
sahf
pop
pop
lahf
pop
sub
push
pop
inc
and
mov
vpshaw
inc
xchg
xchg
jp
pop
ja
pop
or
xor
adc
lcall
pop
aad
add
mov
xchg
imul
faddp
dec
imul
mov
lods
push
mov
clc
fsubr
fstps
xchg
pop
fucomp
test
rol
cs
test
addr16
fucomip
xchg
in
adc
mov
outsl
in
fbstp
repz
js
sbb
dec
pusha
in
pop
xorb
insl
push
push
xor
out
jo
jns
clc
lcall
mov
stos
or
pushf
inc
jge
mov
loopne
pop
subl
sbb
and
and
xchg
cmpl
or
out
mov
xor
lea
leave
pop
mov
mov
mov
mov
repz
clc
daa
fs
jecxz
repz
cs
fwait
mov
sbb
mov
fucomi
xor
pop
out
or
sub
lahf
inc
pushf
fcompl
aas
cmp
shrb
xchg
testl
add
mov
imul
and
add
shll
mov
les
ret
outsb
cwtl
orl
and
mov
scas
sbb
sub
jge
or
loope
dec
adc
lds
mov
dec
or
xorb
push
sbb
sub
lods
enter
push
push
cmp
movsl
xlat
pop
in
mov
hlt
out
bound
notl
xchg
test
hlt
lret
dec
fs
sahf
imul
or
and
lcall
adc
call
pop
int
dec
fldpi
sbb
test
ffreep
add
les
das
push
repnz
adc
or
test
popa
stc
sub
dec
imul
idivb
push
leave
fdivrl
fbstp
repnz
in
rcrb
in
rcr
mov
aam
fimuls
mov
mov
ficoml
xchg
test
das
out
jl
dec
into
add
fwait
in
cmp
notb
sbb
and
shll
jbe
mov
push
fists
insl
xchg
xchg
es
xchg
sub
pop
cmp
popf
ja
ljmp
add
in
jg
dec
leave
mov
test
inc
dec
mov
mov
jns
decb
pop
xchg
jne
xchg
push
movzbl
push
fs
icebp
ret
loop
outsl
negl
cmp
add
es
test
pop
add
xlat
ljmp
addr16
movsl
mov
mov
lret
push
xchg
shlb
js
cmp
jg
inc
pop
cmc
pop
outsl
imul
out
inc
nop
pop
repz
mov
jle
add
cmp
mov
push
inc
aad
sub
adc
out
testl
imul
repnz
out
clc
pop
mov
pop
pop
sub
inc
int
xor
ljmp
scas
addb
push
push
and
scas
cli
sub
sub
hlt
aaa
cvtdq2ps
xlat
testb
rol
jecxz
test
pushf
push
pusha
push
push
and
fcoml
hlt
ljmp
push
fcmovnbe
or
cmc
xchg
inc
sbb
dec
arpl
xor
imul
xor
test
sarb
mov
pop
ret
popf
sbb
inc
mull
rclb
jecxz,pn
ss
lods
fwait
int
adc
test
mov
push
sbb
push
xchg
test
mov
mov
and
inc
push
cmc
data16
mov
push
mov
jns
xchg
pop
lahf
cs
stos
jmp
notb
outsb
cmp
mov
mov
dec
mov
in
subl
xchg
insl
sbbl
cmpsl
test
lahf
or
enter
dec
iret
call
cmp
xor
lcall
xor
icebp
add
mov
mov
icebp
mov
dec
jle
push
fistl
rcrl
mov
ja
inc
inc
rolb
sbb
xorb
inc
sub
pop
aad
test
cmp
adcl
rcrb
mov
loopne
cmpsb
loop
cmp
sbb
sarb
or
pop
dec
cmp
fidivrl
add
inc
mov
pop
pop
jnp
inc
icebp
xchg
adc
mov
aas
mov
test
cmp
loopne
clc
inc
orl
push
dec
sbb
dec
mov
jmp
aad
test
mov
clc
inc
mov
cmp
rorl
add
inc
fbld
movsb
mov
and
sbb
jbe
ljmp
jns
push
xchg
test
stos
jo
gs
leave
shlb
inc
in
jb
daa
rclb
mov
xchg
mov
outsb
in
xor
add
mov
adc
inc
mov
xchg
lea
dec
lea
lea
xor
mov
sub
xor
dec
inc
xor
and
dec
jne
inc
mov
inc
lea
pop
imul
add
pop
mov
inc
pop
lea
add
movzwl
dec
movzbl
mov
sub
mov
mov
lea
inc
add
ret
push
push
mov
or
push
dec
inc
dec
dec
mov
mov
push
dec
movsbl
movswl
mov
push
and
mov
mov
mov
imul
imul
mov
push
xor
mov
sub
push
lea
inc
xor
movzbl
lea
push
sub
and
push
xor
inc
pushl
movzwl
call
mov
add
xor
lea
inc
sub
sub
dec
dec
pop
ret
mov
dec
cmp
jb
inc
xor
inc
inc
mov
add
inc
mov
dec
mov
inc
add
inc
sub
movzbl
and
sub
mov
sub
cmp
jb
or
pop
lea
movzwl
sub
dec
or
and
sub
sub
inc
inc
lea
add
lea
xor
inc
add
xor
add
xor
mov
imul
dec
test
jbe
add
sub
sub
lea
mov
inc
add
dec
add
dec
dec
add
and
lea
lea
mov
dec
add
movzbl
dec
imul
add
lea
add
and
or
movsbl
mov
sub
inc
mov
inc
add
mov
movsbl
inc
mov
or
mov
add
inc
mov
imul
dec
jne
sub
mov
lea
dec
add
lea
add
dec
mov
inc
add
imul
mov
lea
mov
mov
lea
inc
mov
sub
dec
mov
lea
imul
test
jbe
dec
add
lea
inc
inc
sub
and
movswl
or
xor
dec
lea
or
mov
mov
inc
sub
mov
mov
inc
inc
inc
and
add
mov
mov
dec
dec
movzbl
or
dec
add
mov
dec
and
imul
dec
mov
dec
dec
movzbl
sub
mov
mov
dec
dec
mov
imul
add
movzbl
add
mov
add
inc
jmp
push
mov
lea
lea
imul
dec
mov
movswl
lea
sub
dec
imul
lea
inc
movswl
lea
or
mov
sub
add
inc
mov
mov
inc
movzwl
mov
mov
mov
add
lea
lea
dec
dec
dec
mov
lea
mov
inc
dec
lea
cmp
je
sub
xor
mov
push
and
call
call
movsbl
mov
call
call
movzwl
sub
sub
xor
imul
movswl
dec
ret
mov
xor
pop
inc
ret
push
mov
add
and
imul
mov
push
dec
imul
push
mov
push
imul
push
lea
lea
lea
and
add
call
and
push
inc
imul
xor
add
sub
inc
neg
inc
mov
dec
mov
inc
inc
mov
mov
movsbl
mov
dec
sub
inc
xor
add
dec
je
lea
mov
lea
mov
mov
dec
mov
add
mov
dec
dec
repnz
add
dec
add
mov
jmp
inc
movzbl
dec
mov
dec
movzbl
inc
dec
sub
imul
add
or
inc
mov
jmp
dec
push
mov
xchg
aas
lods
and
xor
mov
shll
in
add
dec
lds
sub
push
jmp
jo
lods
test
adc
iret
lods
xor
jg
adc
mov
repnz
cs
inc
xor
cltd
ret
dec
inc
das
and
dec
lds
push
xor
test
repnz
fs
inc
fidivrl
repz
sub
or
mulb
and
push
out
jmp
pop
adc
inc
testl
les
out
and
mov
and
int
lea
inc
fadds
fstpl
inc
jnp
daa
cld
fcmove
mov
and
jns
cmp
and
pop
jae
popa
fimuls
push
mov
fs
cmc
out
xchg
cmp
sub
jle
lods
ss
sub
mov
les
icebp
movsl
cli
xor
jmp
and
test
aaa
ss
add
imul
jnp
jno
enter
pop
cmc
frstor
lods
add
sbbb
aam
xor
lahf
loop
lret
test
or
cmpsb
pop
push
adc
insl
repz
and
lcall
jbe
push
popl
out
push
cwtl
shll
test
sbb
push
sub
push
dec
addr16
push
daa
loope
arpl
sbb
sub
mov
in
xor
imul
fdivs
sub
arpl
xor
ljmp
jl
and
dec
lock
mov
cld
and
loop
cld
xorb
imul
fdivrp
xchg
push
daa
ja
push
loopne
mov
das
xor
repnz
fwait
sub
cmp
pop
test
fwait
out
jg
addb
xor
notb
imul
fld
enter
mov
outsb
out
fwait
xor
adc
jno
movsb
sbb
push
lret
lret
inc
jecxz
xorl
push
fnstenv
clc
int
hlt
dec
inc
in
lahf
rcr
pop
jmp
xor
xor
clc
jb
inc
dec
xchg
and
imul
pop
sub
stos
lds
hlt
xlat
filds
out
and
add
aad
out
push
push
dec
inc
push
or
inc
mov
xor
xlat
sub
push
inc
cmpsl
out
xor
xor
push
lea
adc
pop
in
adc
fwait
xor
xchg
xor
lahf
inc
push
cmp
sbb
or
stos
and
lods
mov
or
lret
jnp
mov
add
testb
push
jbe
sarb
iret
inc
nop
loope
loopne
cld
cld
adc
jg
sti
outsb
in
jle
cwtl
push
push
les
dec
add
xchg
jnp
pop
mov
dec
cmpsb
rolb
mov
jp
sub
dec
adc
loopne
mov
xchg
lods
jg
test
arpl
jmp
in
push
xor
inc
std
adc
cld
adc
stos
loop
call
inc
mov
xchg
xchg
add
sub
xchg
dec
mov
lds
stos
fs
mull
insl
and
inc
out
mov
xor
insl
add
pop
cld
fcoms
mov
sbb
inc
and
fiaddl
insl
xor
js
sbb
inc
lret
stc
sub
popf
jne
jle
es
inc
pusha
mov
and
xcrypt-ofb
cmpsl
ljmp
and
rcrb
xchg
ljmp
push
xchg
out
adc
std
or
in
sarl
movsl
pop
mov
pop
jne
popf
cmpsb
sbb
xor
add
sbb
ret
nop
cmpsl
fsubrp
loope
in
ljmp
push
mov
push
stos
cmp
sbbb
sub
je
ljmp
es
adc
lds
outsl
repnz
scas
pop
cmp
push
mov
inc
fs
add
pop
jle
pop
fs
not
loopne
les
inc
les
cmpsb
sbb
mov
add
subb
mov
cmp
pusha
stos
pushf
lds
inc
das
popa
popf
aad
xor
fsubrs
cmpsb
xor
addr16
into
imul
inc
aad
sub
and
bound
in
mov
or
add
rclb
sar
mov
adc
cwtl
mulb
int3
loop
inc
push
enter
xchg
stos
movsb
cvttps2pi
mov
or
push
arpl
inc
fbstp
mov
mov
popf
pop
jno
adc
stc
adc
loop
inc
mov
in
jecxz
sahf
cmpsl
aam
xchg
push
lret
pop
mov
insl
xor
xchg
xchg
data16
dec
cmc
sbb
aaa
enter
test
cs
lcall
xchg
nop
inc
aam
cmp
nop
dec
jno
ret
push
mov
mov
loop
sub
imul
add
mov
ret
sub
push
mov
cmpsb
sbb
jb
mov
pop
lea
mov
lods
xor
push
mov
in
sub
gs
adc
dec
or
jbe
fcoml
outsl
pop
pushf
cwtl
daa
je
lods
xor
jnp
mov
adc
xchg
xor
or
xor
mov
aaa
addr16
or
jmp
push
addr16
cmp
hlt
mov
cmp
push
daa
mov
inc
jbe
add
dec
aas
or
lods
ljmp
adc
xchg
jg
shlb
dec
push
mov
lret
imulb
sbb
push
jnp
push
jns
test
cmc
pop
push
lock
add
sub
mov
movsb
movsb
pop
aaa
sub
jo
bound
fdivrl
push
in
add
pop
rcll
idivl
cld
pop
push
pop
push
popf
mov
sbb
dec
mov
and
inc
xchg
cmp
mov
sbb
dec
movsl
xchg
test
mov
xchg
and
imul
pop
roll
push
fcoms
cmp
ret
jne
call
lea
filds
out
mov
sahf
les
sub
sub
xor
int
mov
mov
push
sub
shl
loop
gs
push
mov
push
out
repz
pop
or
mov
push
sahf
sbb
outsb
fs
gs
std
mov
das
pop
loop
xor
repz
jecxz
enter
mov
mov
or
mov
jno
pop
pop
scas
xchg
jo
call
into
and
mov
ljmp
xor
bound
js
jo
pop
rcl
jle
adc
ret
loope
mull
daa
xchg
mov
test
mov
dec
dec
enter
pushf
push
xor
dec
rcll
imul
xchg
push
daa
ret
dec
pop
ror
adc
popf
mov
xchg
cmp
mov
xor
test
mov
jg
dec
shr
cmc
fs
pop
mov
cmpsb
cmpsb
pop
fstpl
mov
sti
ret
jnp
nop
and
cli
dec
xchg
aaa
incb
jle
sub
sbb
out
aaa
lcall
jle
mov
test
sub
cmp
dec
ja
adc
rcr
test
push
sbb
jnp
mov
push
dec
push
popa
mov
aas
scas
in
jno
sbb
xlat
or
sbb
ret
jbe
aad
and
int3
cmc
aaa
xchg
jne
sbb
sarl
cwtl
pop
lds
add
ljmp
and
lret
sub
mov
pop
repz
loopne
dec
cmpb
jae
add
push
sbb
lds
cmp
and
jns
mov
jmp
dec
jo
inc
jp
fldenv
outsb
add
sub
sbb
jae
insl
jo
sub
and
mov
mov
aad
test
mov
sbb
push
push
in
pop
loope
add
and
call
jle
inc
mov
shl
pop
sbb
xor
popf
mov
sub
sub
sbb
fcoms
loope
sbb
fwait
pusha
xchg
mov
and
pop
rcll
mov
and
push
cmp
repnz
enter
js
adc
andb
fidivs
out
sbb
lret
stos
mov
in
imulb
js
aad
xlat
mov
xor
into
mov
jl
mov
and
xor
sub
insl
cmpsl
repz
xor
xor
mov
xorb
imul
int
imul
push
sub
ss
cs
xchg
testl
sub
inc
pop
out
scas
jnp
and
js
push
mov
cld
int
adc
pop
mov
pop
ss
push
push
test
loope
ja
cmpps
sub
imull
mov
lcall
push
pop
rolb
mov
xor
cmc
cmpsl
or
xor
mov
in
pop
xor
lods
xchg
dec
push
xchg
je
or
arpl
into
lods
jo
roll
jnp
dec
adc
enter
popa
or
or
stos
xchg
jmp
push
in
lcall
xlat
xor
inc
push
in
clc
jnp
sbb
or
mov
xchg
push
fs
jp
xchg
jno
mov
xor
out
dec
jecxz
std
adc
mov
xor
ret
pop
pusha
loope
add
mov
pop
inc
xchg
popl
orb
arpl
or
cmc
adc
inc
sar
push
mov
mov
clc
ss
adc
lret
mov
sbb
xchg
cmp
dec
test
clc
ljmp
dec
les
inc
int3
movsb
call
dec
dec
js
sbb
cmc
pusha
aam
aam
pop
sub
into
cmc
fiadds
test
imul
clc
inc
insb
out
fldl
test
mov
leave
jecxz
stos
arpl
ficompl
pop
and
xchg
into
xchg
pusha
sub
sti
jl
mov
out
lods
out
ficompl
fucom
enter
push
std
xchg
mov
les
int
lea
dec
mov
int
and
pusha
push
int3
shlb
dec
adc
fldt
adc
sub
gs
dec
jmp
inc
push
xor
jl
xor
xor
ret
popa
fisttps
sbb
or
sub
jnp
push
bound
mov
stos
mov
test
adc
repz
inc
lods
mov
test
mov
or
sbb
mov
sbb
or
insb
lds
sub
sbb
aad
or
mov
push
dec
sub
es
rcrb
push
out
mov
call
pop
mov
mov
cmp
xchg
imul
adc
and
push
cmc
or
adc
jns
dec
incb
in
stc
mov
sahf
sbb
aas
shl
idivl
pop
xchg
push
rorb
jmp
push
sub
lock
adc
fs
imul
sub
jno
mov
call
cld
cmp
xor
adc
mov
cmc
adc
xchg
gs
push
dec
push
mov
pop
rorl
mov
jecxz
sbb
pop
sarb
mov
inc
adc
clc
loope
pop
jl
adc
dec
add
mov
inc
jnp
icebp
lock
stos
ficoml
add
test
pop
and
sub
bnd
inc
pop
out
push
jns
icebp
shll
imul
je
hlt
in
movsb
in
mov
loopne
stos
sbb
mov
in
push
out
dec
ficoml
xchg
icebp
in
pusha
jbe
insl
dec
icebp
es
mov
sbb
pop
mov
adcl
std
jb
inc
jns
adc
pop
jmp
enter
xchg
ret
int3
inc
inc
add
mov
or
add
stos
mov
mov
ret
js
sub
ds
aam
sub
sbb
loopne
icebp
loope
xchg
cld
push
mov
xor
cltd
add
xor
cmp
loop
imul
repnz
xor
cmp
lret
mov
popa
mov
sbb
xchg
inc
in
fnsave
jge
sub
pop
jle
imul
in
in
xchg
fs
nop
lret
nop
enter
jbe
lret
cmp
lds
sub
jge
bound
dec
sahf
jecxz
fiaddl
outsl
mov
int
push
or
int
or
adc
sbb
call
into
lea
loopne
sbb
repz
cli
movsl
dec
xor
adc
ja
dec
add
and
and
mov
jae
xchg
dec
add
xchg
cwtl
cs
inc
adc
inc
pushw
sbb
pop
dec
or
imulb
into
punpcklbw
sub
jecxz
jp
movb
nop
inc
lea
dec
aam
fcom
jns
and
pop
or
aad
xor
in
push
push
rorl
jle
pop
pushf
shlb
pop
and
sysexit
mov
imul
mov
jp
cli
and
push
std
adc
clc
aam
imul
cmpl
xor
faddp
mov
movb
and
jo
inc
cmc
fst
out
test
dec
push
push
dec
adc
push
std
imull
or
daa
scas
mov
sub
int
addr16
cmp
fnstsw
cmp
pop
rclb
test
xchg
mov
jmp
call
lret
pop
ds
pop
daa
pop
cmp
mov
and
js
cwtl
rorb
loop
jb
pop
cwtl
test
inc
mov
push
das
insl
les
jbe
pop
xchg
adc
ret
cmp
mov
inc
mov
push
add
adcl
rcll
lds
scas
mov
ret
ds
arpl
repnz
clc
loop
aaa
push
aas
adc
cmp
pop
cmpsl
jb
int
mov
aad
dec
add
outsl
add
hlt
or
out
divl
adc
sarb
push
xchg
sbb
push
mov
dec
add
call
inc
dec
call
mov
push
movzbl
call
inc
sub
dec
inc
lea
call
add
movsbl
lea
mov
sub
lea
mov
imul
lea
xor
dec
dec
or
call
add
inc
mov
lea
call
lea
movzbl
call
mov
dec
add
mov
or
mov
mov
dec
mov
pop
movsbl
inc
sub
add
mov
pop
add
and
pop
dec
dec
inc
or
pop
dec
lea
mov
lea
add
imul
mov
sub
pop
add
or
pop
lea
mov
mov
imul
dec
call
dec
dec
inc
lea
ret
dec
mov
push
dec
dec
push
dec
and
push
lea
dec
push
and
add
push
inc
mov
mov
dec
dec
push
inc
ret
push
lea
push
or
dec
dec
add
push
or
mov
mov
call
pop
ret
jmp
imul
add
pop
pop
ret
push
dec
mov
dec
inc
dec
mov
dec
mov
sub
mov
mov
mov
imul
imul
add
imul
mov
dec
add
inc
dec
mov
mov
add
movswl
lea
pop
ret
sub
sub
mov
inc
movzbl
mov
add
inc
mov
sub
mov
mov
dec
dec
xor
lea
imul
mov
inc
lea
inc
imul
and
mov
mov
sub
dec
cmp
jb
mov
push
mov
add
push
inc
add
push
mov
mov
xor
imul
mov
xor
and
dec
xor
mov
lea
push
dec
imul
push
imul
inc
pop
mov
inc
mov
mov
mov
mov
inc
inc
lea
add
xor
add
and
mov
and
mov
inc
movsbl
movzbl
add
mov
mov
add
add
lea
add
or
mov
movzbl
dec
inc
dec
inc
add
movzbl
inc
inc
mov
sub
mov
imul
jmp
add
inc
add
or
add
roll
add
add
imulb
inc
add
add
xchg
in
add
add
loop
inc
add
add
popa
mov
dec
loop
outsl
int
int
push
lret
jl
and
lea
test
lahf
loopne
hlt
mov
push
sbb
cmpsb
gs
xor
xor
movsl
aam
pop
mov
in
and
movsl
sub
push
xchg
test
loopne
out
jno
dec
ret
push
or
in
ret
cmp
push
adc
movsb
pop
sub
xor
xor
ss
lock
mov
pop
dec
ss
sbbb
or
stc
cwtl
ficomps
imul
jo
xchg
mov
dec
in
adc
push
into
loop
jae
jno
xchg
rclb
adc
xchg
loope
stos
cmp
xchg
movsb
mov
inc
jl
xchg
xchg
popf
cltd
jb
popa
stos
insl
xchg
sbb
negl
sahf
addr16
or
int3
popf
xchg
test
mov
cltd
xlat
and
testb
cwtl
push
lds
sarl
sbb
psraw
addr16
lcall
cld
or
jne
pushf
dec
inc
fs
inc
imul
dec
push
mov
xor
inc
adc
xor
push
inc
jae
scas
jecxz
mov
cmp
xchg
popa
outsl
fcoms
xlat
dec
push
frstor
xchg
and
sub
inc
out
adc
xchg
adc
xchg
or
testb
inc
insl
mov
lret
or
mov
sub
cmp
clc
data16
ds
xor
clc
xor
push
xchg
mov
mov
fmul
mov
in
mov
sbb
mov
aas
mov
push
js
sub
xor
add
adc
cwtl
cmpb
dec
pushf
xchg
ja
call
inc
leave
adc
outsl
pop
pop
dec
repz
mov
lods
pushf
cmp
push
add
scas
jno
nop
loope
xorb
test
jbe
cmp
push
insl
pop
sub
add
into
scas
cli
pop
repz
mov
sti
mov
xlat
lock
sbb
aad
repnz
or
inc
je
or
pop
and
sub
and
mov
cmpsl
xchg
fst
insl
sbb
push
xor
mov
jae
jmp
cwtl
sbb
inc
inc
mov
fisubl
fwait
dec
pop
xchg
jmp
mov
inc
jno
push
int
and
ret
inc
jle
out
xchg
sbb
mov
add
cs
mov
sub
push
push
or
lds
sbb
dec
mov
or
dec
adc
icebp
pop
jnp
sbb
aaa
xor
add
sub
inc
aas
dec
jmp
lcall
add
mov
mov
xor
ret
lahf
shl
aam
push
pushl
loop
stos
jl
and
dec
pop
mov
mov
sbb
shll
lea
push
mov
test
jle
mov
call
sbb
in
test
xchg
pusha
sub
push
sbb
in
pop
or
cmp
mov
xchg
inc
scas
div
mov
test
ljmp
sbb
lret
mov
dec
and
rcll
rorl
outsb
sbb
adc
ds
inc
cmp
jns
push
stos
xbegin
data16
xlat
inc
test
cmp
mov
sahf
fnstsw
shlb
jns
fmulp
std
aas
add
test
dec
loop
xor
inc
imul
and
iret
psrlw
jae
add
subl
imul
mov
popa
lret
cmc
aam
add
insl
xchg
mov
and
in
pop
imul
mov
mov
les
int3
daa
jbe
mov
mov
inc
xlat
mov
aam
imul
cli
call
and
ret
sub
in
xor
xchg
jge
rorl
jae
push
pop
add
les
inc
rorb
adc
push
stos
adc
push
inc
pop
mov
sbb
into
sarb
out
jne
mov
jns
dec
mov
xchg
xchg
mov
icebp
mov
lret
aaa
jmp
btr
cmp
and
fcmovnb
pop
push
inc
or
jecxz
rcrb
cltd
add
enter
std
out
call
in
dec
sub
sbb
popa
insl
sarb
mov
test
pusha
dec
cmp
in
adc
pushf
dec
xchg
cmc
push
das
jmp
mov
in
mov
leave
cmc
das
popa
inc
std
in
insb
sbb
cmc
sub
sub
dec
in
pop
aaa
pop
outsb
cmp
mov
mov
fiadds
or
dec
jnp
or
sub
in
cmp
cmp
fsubs
jbe
orb
adc
dec
divb
pop
cmc
subl
jo
js
lret
das
xchg
das
sar
les
lods
mov
xchg
cmp
js
and
mov
neg
mov
and
add
push
lea
in
mov
inc
jb
aas
pushf
dec
or
and
enter
movsl
jle
cmpsl
mov
leave
mov
mov
sarb
xchg
rcrl
cmc
lret
dec
jg
jae
data16
add
pusha
dec
mov
pop
mov
test
test
mov
pop
xor
hlt
mov
test
jl
dec
inc
jae
cmp
and
sbb
es
arpl
mov
sbb
imul
loop
adc
xor
fs
int3
xor
iret
inc
gs
mov
movsl
cmp
adc
mov
in
hlt
sbb
xchg
aaa
cmp
cmp
xchg
jns
xor
cmp
test
inc
pop
fidivl
mov
or
mov
iret
jmp
lods
inc
mov
pop
movsl
push
xor
inc
pop
lds
in
inc
call
cmp
xor
mov
sub
cmpsb
add
and
xor
push
xor
popf
lds
add
and
bound
add
pop
cmp
and
es
and
movsl
pusha
loop
test
subb
cmp
xchg
pushf
ret
mov
and
push
sub
scas
dec
jns
popa
dec
fists
lds
mov
jle
mov
pop
popf
ss
xor
adc
cmp
repnz
ss
cmc
imul
addr16
mov
outsb
insl
call
clc
shlb
xchg
fnsave
or
iret
decl
pop
insb
cli
xor
call
imul
cld
and
dec
ret
loop
jno
lea
rcr
cmp
pop
sbbl
pop
ds
xchg
mov
pmaddwd
xchg
mov
pop
jecxz
mov
or
sbb
fisubs
in
test
in
jmp
addr16
daa
aas
inc
or
xchg
scas
cmp
sbb
je
ljmp
cmp
sub
popf
adcl
adc
sbb
iret
ret
xchg
mov
test
test
into
out
cmp
xchg
xchg
push
push
jbe
mov
ret
addb
add
shlb
scas
int
xorl
roll
cmp
inc
imul
lcall
jge
or
pushf
shlb
out
sti
shrb
orb
mov
push
bound
mov
cwtl
jbe
mov
andb
xchg
adc
xchg
movsl
jae
imul
cmp
lock
pushl
mov
into
or
subl
pop
addl
pusha
sub
test
arpl
scas
jne
inc
rcll
add
std
cltd
jmp
mov
mov
sub
outsl
ret
jmp
pusha
lods
shl
xchg
mov
add
and
xor
cwtl
sub
xor
shll
xor
scas
and
int
sbb
jecxz
sub
jns
xchg
shrl
mov
cmp
cs
int3
mov
lret
sarb
orb
bound
test
test
sbb
les
out
hlt
mov
repz
in
dec
jl
mov
fisttpl
or
enter
sbb
push
shrb
aad
xor
xlat
mov
and
and
addr16
xor
jp
xlat
sbb
dec
lock
out
popf
das
mov
add
cmp
add
addr16
insl
xor
push
xchg
mov
adc
iret
inc
dec
cli
sub
rolb
js
arpl
xor
pop
ljmp
mov
stos
por
push
js
dec
jmp
leave
sbb
dec
add
inc
lods
shlb
xchg
shr
clc
push
out
or
or
gs
cmc
std
dec
movsb
ret
inc
out
movsb
xchg
or
in
xor
push
fidivrl
insb
fwait
inc
pop
cwtl
mov
js
sbb
iret
outsl
es
adc
ja
mov
cmp
ds
out
fwait
outsb
xlat
cs
sbbb
sub
and
inc
negl
mul
mov
subb
mov
xlat
decb
sub
xor
xchg
ret
cli
cs
cwtl
mov
and
lret
cli
add
sub
mov
lret
ja
imul
stc
adc
scas
test
xor
push
jl
leave
hlt
mov
add
jno
mov
pop
enter
sub
push
gs
xor
dec
sbbl
gs
mov
push
jecxz
lds
call
add
stos
pusha
mov
adc
in
adc
outsl
mov
jle
in
push
sbb
jne
xor
or
xor
add
xchg
and
xor
out
addr16
add
mov
js
icebp
shlb
xor
pop
mov
or
shrb
imul
dec
sbb
add
fwait
mov
dec
cld
notl
push
push
add
push
cmpsb
movsl
mov
and
sub
ficompl
fdivr
js
bound
and
dec
rcrb
push
repnz
mov
in
outsb
and
cmpsb
mov
loopne
xor
or
jns
icebp
mov
and
mov
sbb
sbb
or
cs
add
arpl
pop
sub
mov
rolb
lret
mov
mov
or
out
push
mov
pop
shlb
lret
and
pushf
enter
loop
scas
bound
jo
mov
sub
loopne
inc
jp
adc
mov
repnz
addr16
nop
inc
mov
scas
in
dec
popf
xchg
adc
imul
cld
dec
lcall
jp
xchg
dec
sub
test
es
andb
or
and
negl
xor
mov
dec
mov
dec
dec
sbb
dec
mov
add
leave
inc
add
push
jb
mov
push
rol
pop
out
fldt
or
fiadds
mov
push
xchg
negl
cmc
jo
jo
sbbl
xchg
lods
add
or
jecxz
pop
lea
jae
pop
dec
jnp
add
stos
test
in
xor
lea
xchg
popa
dec
dec
mov
cmp
jmp
pmaxsw
sub
jno
notl
inc
mov
nop
mov
movsb
mov
arpl
xor
ficoms
scas
test
jae
add
fnstsw
cs
psubq
inc
cmc
or
mov
push
test
jne
push
add
push
icebp
decl
aad
mov
pop
add
inc
lock
cmpsl
adc
push
inc
mov
lds
adc
ret
cmp
cltd
mov
xor
repnz
cmp
rorl
clc
sub
scas
adc
xchg
jbe
repnz
arpl
data16
fwait
ss
xlat
and
inc
in
ljmp
sub
mov
loopne
mov
mov
pop
arpl
lds
out
movsl
jbe
das
or
push
jl
inc
push
jo
cmc
movb
cli
push
jne
int
frstor
push
shll
jns
jnp
ret
pop
gs
mov
orl
rorb
jne
push
or
mov
clc
dec
jnp
and
repnz
adc
dec
xchg
inc
add
cmpsb
xchg
cltd
addr16
and
pop
enter
mov
sub
test
dec
bound
pop
icebp
mov
cmc
cltd
cmp
nop
shrl
sbb
call
pop
in
je
adc
adc
movsb
mov
mov
sbb
xchg
mov
or
cmpsb
dec
mov
cmp
shrb
add
test
test
jns
push
push
je
push
cmp
jne
sub
loopne
cmpb
subl
testb
pop
lcall
sub
jle
push
jecxz
push
bswap
add
ss
bound
outsl
mov
sub
repz
mov
cltd
shlb
mov
subb
adc
pop
fnstenv
ja
inc
cli
pop
lahf
aas
gs
outsb
adc
and
pop
mov
imul
push
in
adc
and
push
push
sbb
data16
std
add
fldt
fdivrs
ja
imul
cs
add
inc
xchg
fimull
cltd
xchg
push
test
push
lds
xchg
jns
push
test
arpl
dec
xor
push
int3
ds
insb
movsl
xchg
fadds
push
jle
in
femms
or
arpl
int
cmp
lahf
mov
in
pushf
in
jmp
insb
pop
xchg
bound
adc
movsb
jno
mov
mov
fstps
adc
and
push
push
scas
imul
and
push
hlt
sub
dec
ljmp
cmp
jl
ret
rclb
shlb
cmp
jg
aas
scas
in
shr
scas
arpl
imulb
cmp
mov
es
mov
jae
push
dec
push
xchg
sbb
stos
xchg
ss
fiaddl
add
int
popl
insb
mov
in
decl
mov
adc
stos
cltd
mov
mov
mov
cmp
jp
and
jp
xor
hlt
inc
loope
not
mov
pop
jge
cmp
add
into
sbb
mov
insb
fisttps
out
sbb
sub
add
push
inc
decl
dec
imul
and
loopnew
imul
ret
loope
les
cltd
mov
aad
xor
daa
in
test
mov
fwait
cmc
pop
loopne
jp
xchg
addr16
inc
xchg
sbb
cwtl
xchg
mov
xchg
pop
xor
jb
les
pop
orb
jecxz
sti
test
adc
mov
outsl
aam
xchg
sbb
xor
pop
cli
jae
sbb
jno
cmp
cmp
mov
cwtl
ja
jecxz
mov
xor
jle
mov
adc
cld
rclb
mov
lahf
push
cmpsb
mov
cmp
push
std
sub
xchg
aas
mov
inc
lret
ret
push
dec
test
or
xor
nop
dec
nop
sbb
sub
jmp
flds
sub
sbb
fsubl
popf
jle
outsl
mov
fnstsw
lahf
adc
jbe
mov
dec
pop
fildl
pop
push
or
xchg
pop
inc
addr16
sub
add
xor
rcll
repz
lret
xchg
aaa
jl
mulb
inc
test
arpl
add
jle
xlat
mov
adc
shll
inc
aas
adcl
lods
sbb
xchg
pusha
mov
mov
mov
push
test
cmp
mov
sbb
push
cmpsb
sbb
loope
cld
dec
roll
xor
ss
sbb
xchg
int
and
je
out
jns
sbb
or
leave
jmp
xchg
ret
mov
xchg
popa
loop
aad
insb
push
mov
outsb
insb
outsl
push
sub
jae
xor
ss
setle
shrb
adc
jecxz
and
loopne
xor
add
push
scas
jnp
jge
pop
xor
sbb
fisubl
dec
adc
jl
insl
sub
mov
roll
outsb
pop
adc
pop
fcmovbe
mov
scas
adc
pop
insl
mov
icebp
fstpl
sbb
fimull
jns
dec
push
xor
lcall
and
test
insb
into
inc
cmp
cmpsb
jno
mov
pop
ss
test
imul
es
mov
or
jo
pop
jg
fidivl
add
jo
testl
cltd
mov
sbb
lea
in
pop
iret
cld
jne
ret
imul
outsb
mov
test
mov
cmp
ret
push
lods
in
inc
insl
push
xor
lret
xor
mov
mov
jl
inc
pop
mov
pop
loopne
es
jno
sbb
xchg
int3
scas
aaa
outsl
int3
xlat
outsb
fadds
mov
add
cs
cli
sub
push
jecxz
or
movsb
daa
jge
call
rorb
cmpsl
xchg
xchg
jo
mov
mov
data16
in
repnz
ret
inc
sbb
inc
fists
dec
icebp
out
iret
add
fidivl
and
sar
push
jnp
jb
pop
outsl
xor
and
pop
inc
mov
push
les
lret
pop
cmc
ja
mov
add
insb
cs
and
out
dec
scas
movsb
inc
fsubs
or
add
orl
cld
mov
mov
xchg
jle
test
xor
das
stos
subl
jp
mov
fs
push
inc
push
cli
mov
xor
sub
rorb
sbb
lds
mov
faddl
adc
or
inc
xor
lock
add
jmp
xor
rcrb
mov
sbb
xchg
sbb
gs
pop
mov
imul
dec
mov
iret
jns
loope
mov
test
dec
mov
add
mov
ja
addl
pop
cli
incl
or
lahf
xchg
adc
push
and
mov
int
xchg
lret
jns
adc
mov
push
adcb
add
cmp
inc
imul
jo
or
rcr
pushf
rol
pop
mov
jnp
push
push
jp
fldl
xor
imul
mov
lahf
ffree
push
idiv
orb
fiaddl
insb
xor
mov
dec
mull
and
sub
rcr
hlt
cmp
mov
xlat
sti
stos
loope
jae
pop
jo
lea
test
out
mov
inc
mov
or
fidivl
inc
sar
pusha
jae
jno
stos
sbb
add
add
aas
xchg
push
pusha
lret
pop
mov
mov
lahf
pop
dec
mov
pop
sub
mov
and
xor
rolb
xchg
jmp
gs
mov
cmc
cmc
push
adc
sub
leave
ljmp
movsb
lock
lret
fnsave
sub
hlt
clc
movsb
dec
outsl
rorl
cmp
gs
leave
jbe
aaa
cmp
enter
stos
sbb
int3
decl
test
xchg
call
int3
adc
or
in
cmp
push
arpl
pusha
or
clc
arpl
jns,pt
and
push
ucomiss
cld
sub
imul
daa
mov
mov
les
test
cmp
jnp
adc
outsl
cmc
lods
outsl
test
sti
int3
push
pop
stos
jae
lock
xor
flds
push
mov
bound
pop
pop
jge
popf
xchg
cmp
rcrb
arpl
sbb
mov
push
push
out
out
mov
add
scas
or
pop
scas
sbb
into
pop
repz
sub
pmulhuw
out
in
pop
jmp
mov
adc
xor
jbe
jb
jg
or
movsl
mov
sahf
push
clc
les
fdivrs
bnd
dec
insb
lods
adcl
sbb
and
pop
xlat
dec
cmc
outsl
ss
int3
xchg
xchg
loopne
push
notb
scas
jo
ret
xchg
out
sbb
mov
stos
xor
sbbl
sti
adc
jmp
mov
in
pop
shlb
dec
mov
jo
stc
rcrl
sbb
mov
sub
movsl
mov
aaa
adc
cmpsb
call
ret
xor
xor
add
cmp
sub
add
fcmove
addr16
mov
push
andb
mov
cld
je
sub
in
sub
movsb
xor
mov
mov
pop
xlat
push
mov
xor
cmp
enter
into
je
mov
adc
pop
add
pop
cli
std
cs
mov
inc
dec
cmp
pusha
jge
out
xchg
clc
shrb
jb
push
add
addl
xor
fs
push
repz
pop
mov
xlat
xchg
inc
cld
lret
mov
test
sbb
and
lock
clc
divps
mov
pop
bound
mov
pushf
sbb
insl
insb
mov
shr
add
sub
cld
cmpsl
in
push
xchg
xor
inc
mov
fcomp
or
inc
pushf
or
push
inc
dec
mov
leave
mov
call
mov
and
mov
xchg
cltd
inc
popf
sub
pop
rclb
xor
or
jmp
cmpsb
les
in
jae
cmp
shll
ja
inc
sarb
aas
mov
loopne
xchg
ror
aad
adc
xor
inc
mov
clc
out
pop
js
cli
insb
mov
push
sbb
into
cltd
pop
sub
ja
nop
in
mov
push
jge
adc
dec
cmp
mov
xor
or
push
test
xchg
or
in
push
jb
dec
testb
icebp
loope
jg
dec
xor
cmp
fdivrl
rclb
sub
mov
stc
leave
mov
mov
stos
push
pop
push
jne
mov
or
jle
dec
std
cmp
add
dec
call
cmp
push
test
in
ret
nop
fisubl
cli
jns
fs
ja
in
cmp
sub
shr
shrb
xchg
sbb
lret
sub
nop
ja
rcr
outsb
cmp
lahf
cmp
jb
jne
mov
xchg
movsl
popf
jg
dec
out
and
sahf
or
cs
movsl
add
testl
or
pop
xor
jnp
in
pop
or
lret
lcall
mov
into
popf
not
mov
roll
bound
dec
pusha
add
jle
subl
or
ror
pop
ljmp
fwait
xchg
jmp
jmp
fisubrl
mov
fstpl
adc
daa
les
fidivl
pusha
or
out
jl
jno
stos
stc
loope
sbb
inc
xchg
repz
push
mov
outsb
sbb
push
clc
adc
add
lea
lret
or
rorb
jne
out
or
mov
adc
sbb
pop
cmpsl
mov
cs
inc
dec
mov
lret
int3
stos
loopne
cltd
mov
jecxz
dec
aaa
popa
clc
fistl
push
mov
loope
or
fbstp
cmpsb
dec
shll
mov
repnz
lcall
mov
test
sub
push
push
jne
jmp
push
mov
decb
mov
in
jne
inc
mov
lock
je
in
lods
sbb
dec
in
bound
outsb
loopne
or
xor
mov
aam
push
mov
lret
xor
xchg
scas
outsb
lods
loop
xchg
je
inc
cld
push
out
loope
roll
cmpb
mov
and
add
in
imul
jnp
lret
add
lret
pusha
mov
cmc
cmp
addr16
stc
into
call
sbb
mov
mov
sub
jmp
xchg
adc
pop
dec
sbb
outsl
sarl
jno
cmpsb
sub
xor
mov
push
sti
mov
xor
jge
es
out
fcomps
int3
inc
dec
lds
mov
stos
ret
mov
jno
test
xor
fisttpl
pop
cmp
nopl
cmp
shrl
xchg
pop
add
scas
dec
loope
push
xor
jb
jo
cmp
test
dec
lret
pop
add
dec
subb
jge
xor
dec
mov
cmp
cmp
int
xchg
pop
in
dec
adc
adc
push
mov
cmc
fdivl
mov
or
ret
pusha
out
aas
lods
pop
sbb
and
pop
push
dec
jle
loopne
pop
or
jae
mov
jbe
push
or
in
and
or
movl
rcrl
fsubl
in
mov
gs
lret
mov
mov
dec
clc
mov
into
in
flds
jae
mov
push
cmc
fwait
jno
sahf
shlb
adc
stc
fidivrs
imull
adc
mov
xchg
std
jle
dec
jne
movsl
inc
lock
lcall
add
push
mov
cmp
xor
rclb
sbb
pop
cmp
adc
dec
mov
add
mov
mov
dec
lahf
out
cli
mov
js
mov
xor
cwtl
sub
scas
cmp
ds
int3
mov
and
and
sub
sub
xor
arpl
mov
inc
mov
inc
add
xor
cld
xchg
jecxz
or
das
push
sub
in
out
fimuls
leave
arpl
sub
sbb
jg
or
sbb
jbe
out
repz
es
ds
pop
imul
mov
pop
dec
pop
and
loope
push
or
adc
ja
aam
cltd
popf
add
insl
mov
bound
gs
and
test
push
adc
je
fsubrl
xor
bound
xchg
jl
jnp
mov
scas
mov
cmp
mov
cwtl
cmp
push
stc
shr
sub
mov
sbb
adc
cmpsb
sub
sbb
hlt
lcall
sbb
and
clc
push
cmp
repz
sar
cmpsb
dec
pop
loop
dec
fsubrl
adc
adc
stos
out
push
lcall
gs
mov
enter
aaa
push
dec
inc
jl
or
popa
pusha
xor
add
adc
in
lock
cmp
outsl
sbb
dec
push
shrl
add
mov
shlb
insb
mov
mov
enter
cmp
cmc
sti
mov
adc
sbb
lea
xchg
fldcw
in
dec
clc
ret
iret
adc
jmp
pusha
out
clc
mov
lret
jp
jmp
jo
mov
xchg
cs
scas
adc
jge
in
dec
or
cmp
mov
add
add
inc
test
lcall
dec
xor
or
imul
xor
loopne
imul
pop
icebp
xor
xor
push
xchg
mov
push
xchg
sbb
std
lret
sub
pop
das
mov
jl
rol
icebp
mov
hlt
adc
push
rolb
mov
push
cmp
adc
test
ret
in
mov
ljmp
out
test
jbe
and
jne
xchg
or
dec
dec
testl
test
xchg
pop
mov
push
jle
lcall
mov
pop
mov
add
repnz
jbe
jo
and
stos
push
cli
psadbw
fs
jle
stos
cld
xlat
lret
pop
outsb
adc
fwait
pop
cmp
in
bound
in
pop
loop
adc
in
and
push
push
xchg
cmp
imulb
xor
cli
cmpsb
sbb
mov
mov
ror
add
stos
mov
addl
lcall
mov
add
mov
mov
mov
push
daa
lds
scas
sbb
push
test
add
ret
or
push
fsubrs
sbb
and
mov
pop
daa
int
sub
push
jmp
sub
add
mov
stos
dec
add
idivl
nop
call
fwait
lahf
outsb
dec
fs
in
adc
pop
sub
push
and
in
jbe
pop
pop
insl
inc
sbb
mov
fdiv
das
pop
jb
mov
adc
shlb
clc
push
ja
lds
pop
xchg
loopne
int3
fs
lahf
jne
jbe
fbld
ret
inc
aas
cmpl
or
shr
fwait
push
ret
xor
mov
insb
push
iret
sub
scas
popa
mov
mov
mov
adc
pop
mov
sbb
fwait
mov
cmp
getsec
lds
cld
std
jle
cmp
ljmp
jne
xchg
fimull
movsb
mov
pop
scas
push
call
cmp
xor
mov
pop
lahf
xor
fisttpl
push
and
sub
cmp
jmp
mov
sub
movsl
dec
cmpsl
and
mov
pusha
imul
popf
leave
aad
adc
stos
leave
mov
push
sub
mov
sub
and
sbb
hlt
loope
iret
or
scas
xchg
mov
test
pop
pop
mov
xor
cs
enter
js
imul
xor
in
out
rcrb
test
clc
push
pop
cmp
inc
jl
push
dec
add
jno
inc
les
jbe
cld
mov
imul
pop
xchg
jne
out
fsubl
sub
pop
adc
sbb
loopne
gs
aaa
scas
je
jo
dec
hlt
addb
or
inc
mov
sti
sbb
adc
jb
pop
cmc
lock
push
rclb
je
mov
jns
dec
mov
sbb
pop
mov
and
out
movsl
xchg
or
scas
xor
ror
xor
es
and
out
lret
ljmp
lret
movsl
mov
push
mov
lds
pop
mov
cmpsb
mov
pop
push
loop
inc
inc
xor
mov
lahf
stc
mov
mov
add
lea
pop
movsb
stos
lret
sbb
and
in
adc
into
jbe
aas
mov
pop
loope
mov
lret
push
mov
cmp
mov
cmpsl
loop
sub
adc
push
xchg
jbe
lret
dec
and
pushf
mov
testl
and
out
dec
fiadds
loopne
cmp
mov
and
mov
jb
dec
sub
or
fnsave
fnsave
pop
xchg
mov
cli
inc
pop
push
divl
pop
out
inc
daa
movsl
cmp
xchg
mov
cmpsl
push
in
lcall
sub
and
sub
test
or
mov
call
fs
mov
cli
fisubrl
xchg
loop
loop
cmp
mov
xlat
aaa
cmp
or
test
sub
cmc
push
pushf
lods
sbb
fstps
test
test
sub
sbb
dec
add
sub
push
pop
bound
xchg
dec
cmpb
imul
sahf
arpl
stos
test
dec
fsubrl
mov
lods
mov
mov
jp
pop
push
mov
sbb
ja
jae
jno
ret
iret
xor
aaa
mov
movsb
test
jmp
jbe
cmp
cmp
lock
pusha
test
xor
adcl
and
fists
jmp
popf
mov
sub
dec
pop
xor
fldl
fs
inc
xchg
fidivrl
loope
shlb
sub
pop
or
fwait
mov
dec
xlat
adc
adc
inc
sub
sarl
push
popf
nop
aam
aas
ret
mulb
mov
push
jne
cs
inc
fisttps
enter
dec
jb
sti
jns
or
add
push
in
hlt
int3
mov
add
inc
mov
mov
xchg
and
push
jns
and
push
mov
mov
imul
sahf
push
fwait
jp
hlt
repnz
push
mov
scas
in
inc
jb
popl
push
clc
leave
fsubl
out
jne
hlt
filds
and
out
repnz
xchg
and
mov
sub
push
sub
int
rcll
xchg
lcall
mov
shlb
dec
pop
xchg
push
dec
jnp
or
rorl
test
sbb
jmp
imul
out
mov
out
jecxz
ljmp
sbb
je
insl
subl
cmc
push
scas
hlt
pushf
push
adc
xchg
sub
aaa
inc
faddl
xlat
int3
ds
orb
nop
data16
dec
test
xchg
push
sub
and
jl
adc
inc
dec
es
xchg
test
in
or
js
shrl
adc
sbb
jecxz
adc
test
es
cmc
add
jecxz
lcall
cs
js
inc
lcall
dec
jno
mov
daa
jmp
je
icebp
inc
aam
jle
aam
ret
xchg
pop
rorl
or
or
push
je
mov
nop
jl
xor
lds
push
pop
int
push
jno
inc
jge
imul
dec
dec
sub
xchg
jmp
cltd
shl
ja
fidivs
xchg
sub
adc
in
xchg
add
movsl
inc
xor
test
out
je
adc
inc
inc
loopne
roll
je
inc
fwait
xor
inc
mov
push
ret
in
sbb
sbb
push
outsb
adc
sahf
int
add
inc
xor
sub
xchg
jno
hlt
pop
scas
js
cmp
shl
mov
fisubrl
sarl
outsl
pushl
mov
inc
pop
cmpsb
and
xlat
xor
mov
repz
xchg
sub
mov
das
in
out
cld
mov
rcl
pop
lret
arpl
fwait
inc
xor
sti
ret
jo
insb
cwtl
dec
pusha
pushf
out
and
lea
mov
shrd
cmp
mov
lods
jg
add
sbb
cmpl
fildll
out
pop
mov
fdiv
sbb
jle
cmp
nop
xor
popl
into
xor
rcll
fdivl
sbb
fldl
inc
pop
jle
mov
mov
push
sub
add
mov
ds
jmp
lock
dec
lahf
jnp
scas
jns
xchg
jbe
jno
inc
inc
xor
ja
mov
and
dec
enter
gs
stc
ljmp
addb
enter
movsb
mov
adc
icebp
and
cwtl
insb
movsb
adc
xchg
enter
adc
xchg
test
imul
pop
loope
adc
adc
js
mov
add
repz
and
xor
das
out
test
mov
into
sbb
das
lods
sbb
sbb
aaa
push
imul
mov
je
cmp
mov
insl
fistl
fistl
sbb
fimull
lcall
sub
scas
movl
addr16
cmc
sub
xor
mov
mov
ljmp
fs
dec
mov
mov
fidivrs
pusha
int
xchg
outsl
inc
inc
inc
cmc
sahf
imulb
aam
std
xlat
push
insb
xchg
pop
xchg
push
mov
call
mov
pop
outsl
cli
bswap
pop
push
inc
test
mov
outsb
pop
dec
and
cmpsb
je
in
mov
push
and
fidivs
jo
push
or
or
or
mov
xor
pop
cmp
mov
pop
lcall
mov
insb
les
dec
push
xchg
or
mov
xor
fists
sti
bound
sub
in
sbb
popa
jnp
ret
xchg
xchg
int
addr16
push
nop
iret
jne
rcrb
and
inc
fwait
das
cmpsl
fisubl
fcomip
imulb
ret
js
imul
inc
movsb
rcll
jl
addb
jecxz
sub
imul
mov
sbb
ss
inc
push
pusha
frstor
in
xchg
inc
xchg
ret
outsb
mov
out
ljmpw
jge
insb
icebp
mov
mov
test
mov
out
cld
or
das
inc
dec
in
cmp
outsb
mov
repnz
mov
add
sub
mov
jb
inc
cmp
jle
xchg
lret
pusha
xchg
or
sub
data16
aas
repz
ret
dec
ret
jmp
in
adc
pop
xor
mov
mov
push
fsubp
fcompl
out
and
mov
rcr
ds
mov
jl
cmc
sahf
or
mov
inc
sbb
movsb
shr
jbe
or
pop
fsubrl
sub
aaa
mov
xchg
in
rcl
sbb
sti
arpl
lock
cmc
mov
js
jp
clc
sahf
inc
lcall
call
inc
sbb
dec
push
jl
adc
adcl
test
inc
sbb
fadds
ret
xor
mov
data16
dec
pop
int3
fildl
fst
test
andb
and
rclb
xchg
and
int3
ficoms
insl
pop
insb
pop
mov
jle
jle
cmp
mov
push
shll
lahf
nop
xor
xchg
dec
cmp
rcrl
pop
cmp
icebp
jmp
mov
fistl
arpl
clc
js
data16
icebp
pinsrw
jno
loopne
rcll
ljmp
mov
mov
mull
sbb
sbb
mov
jmp
mov
fsubl
sahf
int
cmpb
stos
sub
lods
je
add
dec
mov
rorb
jmp
mov
jb
sub
lahf
or
loop
mov
push
into
rcrl
les
sarb
push
jge
cltd
movsb
ret
leave
icebp
aas
mov
add
hlt
dec
cmpsb
sti
mov
outsb
jp
jae
xchg
jno
inc
mov
hlt
dec
push
cwtl
inc
fsub
insl
push
cwtl
les
adc
push
je
xchg
cmp
out
cmc
shll
or
aad
addr16
leave
sub
lret
push
xor
mov
cld
jl
sbb
mov
dec
aaa
js
js
xor
jecxz
subb
enter
pushf
cmp
loopne
jge
fwait
loop
and
and
out
pop
clc
cltd
loop
push
dec
xor
lea
jns
pop
jmp
mov
xchg
add
shlb
jb
and
lahf
lods
cmp
ss
jae
and
fwait
enter
sub
jge
repnz
pminsw
xor
pcmpgtd
fistl
mov
pushf
pop
or
andb
xchg
mov
cmp
dec
or
iret
or
stc
inc
int3
sahf
fs
xor
push
xor
pop
bound
add
pushf
popf
out
cmp
movsb
inc
sub
xor
jecxz
inc
movsb
jge
leave
dec
das
xor
cmp
push
add
mov
adc
xchg
push
loopne
mov
clc
fucomi
xor
daa
xlat
out
mov
insl
popa
das
std
pop
aad
xchg
addl
add
jle
cld
xchg
mov
les
or
sti
ljmp
sub
xor
jp
jno
fs
icebp
cmp
mov
xchg
inc
fldl
mov
sbb
inc
cs
sub
ljmp
and
sub
ljmp
mov
mov
std
push
and
js
clc
mov
pusha
push
arpl
dec
pop
pop
cmpb
sub
add
leave
sub
push
int3
inc
sti
lret
fdivrs
push
iret
and
fistpll
inc
push
cmpl
dec
dec
sbb
stos
idivb
popf
iret
jp
xchg
push
sbb
push
or
jecxz
jae
cmpsb
sbb
std
fsubrs
fildl
mov
ds
dec
add
and
cltd
add
div
add
ja
pop
call
jp
sub
push
lret
rcr
sbb
mov
and
mov
rclb
test
push
xor
fmull
pop
jnp
stc
aam
pop
enter
mov
adc
jge
ret
lahf
pop
pop
ret
or
es
adc
mov
pop
mov
repnz
cs
jp
xor
ds
jns
ja
sbb
push
jns
mov
scas
sub
inc
mov
xchg
js
or
outsl
push
decl
test
pop
negl
loop
jl
xchg
negb
daa
and
mov
fsubrl
jl
pop
sti
xchg
je
sbb
imul
adc
dec
out
push
add
popa
pushf
arpl
icebp
or
ret
clc
push
push
jno
sti
cld
cltd
inc
pop
adc
out
push
std
into
mov
xchg
dec
pop
push
jg
xchg
add
mov
jbe
mov
mov
dec
popf
lods
lds
and
mov
inc
out
inc
and
fwait
jb
lock
sub
ljmp
call
dec
mov
xchg
mov
push
movb
pop
movsl
and
xor
sub
inc
mov
ds
imul
xlat
aaa
fldenvs
mov
and
dec
clc
rorb
mov
loope
inc
jnp
js
inc
aas
sub
fimuls
insl
jb
out
out
cmp
dec
xchg
push
scas
dec
xlat
iret
shlb
mov
pop
mov
es
push
fstl
and
and
xchg
mov
xorl
lds
popa
pop
ss
cmp
fcompl
out
into
xor
or
bound
arpl
mull
push
adc
inc
cmc
jae
sbb
and
imul
cmp
mov
repz
enter
fdiv
push
test
pop
add
testl
iret
stc
inc
lret
test
out
add
aaa
sbb
sbb
mov
or
je
aas
pop
imul
insl
push
test
add
pcmpgtw
push
jl,pt
and
addl
fwait
icebp
fidivrl
dec
or
lcall
cmpsl
cltd
xchg
pop
inc
loope
mov
push
cmpsb
or
icebp
in
out
loop
je
fs
shrb
roll
and
mov
mov
add
adc
dec
jae
ret
xor
add
rol
inc
sub
add
jbe
aas
mov
push
sbb
punpckhwd
cwtl
and
ffreep
leave
push
dec
cwtl
mov
popf
notb
sahf
das
jbe
xchg
loope
and
cmp
clc
arpl
add
stos
mov
mov
mov
cmp
dec
inc
adc
or
fmulp
pop
push
std
and
in
fistl
inc
xor
pop
push
les
xchg
dec
xchg
and
cmp
fisttps
adc
sub
sub
data16
cmp
sbb
ret
jl
test
jb
xor
jle
rorb
add
and
xchg
fsub
int3
xchg
xlat
fstps
sbb
xchg
pop
in
movsb
mov
sbb
cmp
in
xor
hlt
xchg
pushf
sbb
jb
icebp
sub
ret
sbb
aaa
and
loopne
and
lods
push
lahf
cli
mov
mov
leave
loopne
fs
pop
cmpsb
aas
and
ret
das
pop
inc
xor
shrl
mov
jmp
int3
ja
mov
jns
fnstsw
sahf
dec
xchg
cmpb
mov
lcall
int3
subb
cld
sub
call
lea
sub
push
mov
dec
sarl
push
sub
icebp
adc
imul
and
mov
mov
push
or
push
les
sbb
movb
mov
xchg
movsl
popf
push
pushf
aam
mov
nop
mov
popf
out
test
dec
dec
cmp
ds
lret
in
imul
or
pushf
add
sbb
add
push
out
into
sbb
insl
sbb
mov
cwtl
loope
pop
repz
gs
maskmovq
imull
mov
inc
inc
inc
int3
adc
mov
mov
loopne
imulb
in
push
and
cmp
into
lahf
or
cmp
inc
or
sbb
mov
dec
imul
fiaddl
pushf
jg
and
cmpsb
adc
xchg
cwtl
pop
sahf
mov
mov
pop
in
xchg
cld
sub
xchg
cmp
faddl
in
mov
lds
aas
mov
pop
lods
lcall
hlt
pop
jne
xor
sbb
bnd
lea
cltd
ljmp
cmc
clc
fdivs
add
adc
mov
or
dec
mov
adc
xchg
movsl
add
mov
push
aaa
cs
ret
and
push
add
xchg
and
push
add
js
out
cmp
cmp
addr16
cs
xor
push
ljmp
cld
xchg
loop
test
mulb
scas
ret
cwtl
out
into
xchg
rcrb
hlt
rcll
sbb
outsb
jecxz
rorl
jo,pn
mov
in
inc
mov
or
rorl
cmpsb
adc
gs
cmp
insb
xchg
inc
mov
jns
pop
cwtl
adc
xorb
in
add
out
xchg
in
cmp
lret
push
movsl
ret
xchg
mov
movlps
pop
lea
cwtl
cmp
cltd
out
xchg
shrb
dec
stos
lcall
in
or
lret
sbbl
sbb
loope
cli
in
ret
movsl
cmpsl
sarb
outsl
jnp
dec
repz
repnz
loope
mov
pop
fcmovne
test
xchg
push
clc
rcll
andb
loope
stos
bound
ss
call
xor
cmp
adc
mov
imul
xchg
fidivrs
jne
sub
aad
outsb
rorl
mov
push
lret
adc
sbb
bound
xlat
lahf
movsb
test
xchg
or
repz
adc
imul
loop
loope
divl
mov
cmc
adc
adc
mov
cs
or
fstl
xor
js
pop
mov
jns
mov
jg
inc
aaa
xchg
mov
jne
ret
movsl
mov
and
push
addr16
cmpb
out
lods
jle
add
orb
mov
lret
and
fdivrp
addr16
sbb
mov
sbb
mov
sbb
inc
dec
and
jno,pt
pop
inc
push
movsb
push
out
pop
inc
adcl
cmp
mov
lds
xor
leave
xorl
fcoms
sbb
cwtl
jmp
cmp
hlt
rcll
jns
dec
mov
sub
mov
mov
xor
mov
fcmovnu
dec
jnp
xlat
xor
pop
int
test
and
nop
out
mov
cmp
test
adc
imul
stc
insl
push
adc
and
pop
leave
xor
sbb
xchg
inc
into
cwtl
jne
paddb
push
test
int
neg
jle
incl
xchg
outsl
xor
mov
sbb
lahf
test
in
ret
bound
sahf
add
movsl
jmp
fs
add
sarb
mov
les
push
test
jle
hlt
mov
rclb
add
ret
jbe
xlat
pop
idiv
push
dec
or
pop
xchg
aad
ret
add
cltd
mov
sub
xchg
imul
addl
xchg
xor
lods
dec
outsl
decl
fsqrt
mov
ss
imul
adc
mov
ljmp
mov
arpl
addl
mov
std
shll
leave
mov
push
insl
xor
or
pushf
xchg
test
sbb
jbe
push
inc
mov
in
inc
popf
stc
aad
cmc
inc
jnp
dec
inc
pop
inc
cld
cmp
pop
fstpt
lds
bound
xchg
shlb
sbb
mov
inc
lds
jbe
or
or
dec
mov
sub
add
mov
jne
jno
cmpsl
lret
dec
mov
loopne
stc
aas
inc
cwtl
fstpl
inc
mov
fprem1
int3
xchg
adc
js
sub
xor
shll
jg
push
pop
into
test
aam
mov
stc
popf
cmp
adc
cmpsb
adc
mov
mov
stos
mov
stc
adc
push
inc
mov
and
rcll
mov
int
sbb
cmp
pop
int
out
jbe
adc
adc
xorb
scas
inc
or
outsl
push
mov
les
cmp
jmp
push
in
aas
lds
cli
inc
stc
mov
test
mov
ror
loope
pop
cmp
pop
sti
jmp
dec
cmp
dec
add
cld
mov
sub
insb
mov
test
pop
stc
or
cld
nop
push
pop
xor
cli
ljmp
mov
dec
loop
cmpl
int3
sahf
cli
jns
jo
pop
loope
imul
std
jl
scas
dec
add
cld
fmuls
push
mov
add
cmp
push
cmpsb
inc
fisttpl
or
jnp
adc
xor
in
cmc
inc
push
add
lahf
pop
lret
push
adc
sbb
fildl
loopne
dec
insb
adc
fsubs
mov
or
les
movsl
mov
test
jne
sbb
xchg
pop
cmp
cmp
lret
test
inc
cs
fmulp
dec
je
fisubs
and
xchg
add
aad
jl
repnz
ret
mov
orb
jbe
es
pop
call
fwait
mov
sub
add
cmp
jnp
push
dec
in
mov
cmpl
stc
hlt
dec
test
xchg
sub
push
cmp
movb
adc
arpl
jmp
mov
scas
sub
sbb
sbb
mov
movsl
rcrl
test
mov
fcoml
jne
arpl
cmp
push
mov
icebp
in
dec
loope
sbb
mov
mov
sub
dec
push
xor
std
xor
shlb
outsb
rorl
repz
shr
xchg
jp
push
pusha
push
sub
insl
aam
lds
pusha
mov
xor
push
mov
adc
mov
lea
lret
or
pushf
imul
loope
shll
pop
sar
movsl
dec
pop
mov
in
sub
adc
outsl
and
pop
popa
push
mov
adc
pop
pop
jne
inc
jp
pop
mov
mov
loopne
pop
or
cli
imul
ds
fdivs
pop
das
pop
mov
push
cmp
das
sub
xchg
xor
ds
pop
rcr
mov
into
dec
lds
mov
popf
mov
sub
or
fdiv
mov
cwtl
push
fidivs
ds
mov
sub
ljmp
stos
push
test
fildl
das
pop
loope
sbb
lds
mov
data16
rolb
lret
mov
icebp
pop
xchg
test
adc
add
pop
xrelease
cmpsb
cmp
adc
imulb
push
pop
and
imul
sbb
out
aam
sbb
mov
mov
push
mov
out
sbb
in
inc
movsl
pop
pop
int3
in
xchg
lods
fidivrs
mov
inc
js
and
xor
fcoml
mov
adc
xor
dec
mov
je
lods
jp
inc
mov
cs
ret
test
gs
mov
inc
jb
test
push
shrl
add
mov
cmp
adc
mov
scas
push
leave
mov
cmp
add
dec
inc
push
nop
les
or
sti
arpl
push
sub
iret
push
inc
aaa
push
pop
cmp
add
dec
rclb
adc
sub
ljmp
sbb
xlat
xchg
into
add
je
sbb
movsb
mov
fdivrs
mov
xchg
jb
mov
jle
ret
shlb
sbb
mov
icebp
push
pop
xchg
pop
cli
leave
pop
sub
pusha
mov
out
mov
jg
test
sbb
mov
lock
push
ljmp
jecxz
repnz
cmpsl
sysexit
pop
ja
pop
cmpsb
dec
mov
mov
in
gs
mov
scas
cmp
cmp
jnp
mov
mov
xlat
ss
adc
aad
popf
js
pop
arpl
add
xchg
xlat
dec
in
fsts
lret
pushf
dec
sub
and
ret
cmc
test
enter
xor
call
jp
mov
cs
test
pushf
pop
das
mov
cmp
bound
bnd
in
call
ret
xchg
mov
xor
outsb
in
out
add
cmp
and
lods
inc
cmp
adc
popa
mov
out
or
dec
lret
fsubrs
sahf
push
mov
aaa
shrl
int
inc
xlat
jns
and
sbb
icebp
push
sub
aad
scas
dec
xchg
mov
hlt
cmpb
mov
jmp
adc
mov
sbb
cmp
push
mov
mov
add
insb
or
xchg
mov
mov
push
jae
mov
stc
mov
rcll
mov
enter
gs
fcoml
movsl
gs
and
xchg
push
inc
pop
or
lcall
cmpsl
adc
movsl
pop
cwtl
dec
xchg
xchg
mov
and
daa
mov
imul
or
clc
imul
notb
sbb
cli
push
jne
push
lahf
subb
fs
jl
movsb
repz
fildl
mov
dec
mov
cwtl
fidivrl
ja
fs
out
pop
stos
lds
cmp
std
popa
fnstcw
daa
sbb
cmp
push
std
sub
cld
mov
and
popf
clc
addl
or
fistpl
loopne
mov
mov
pop
leave
or
cmp
sub
cmp
jnp
call
cmc
or
ss
jnp
sub
enter
ljmp
mov
lods
xchg
xchg
sub
xchg
xor
inc
add
and
repz
leave
jp
pop
inc
popf
pusha
lcall
push
call
sub
jle
jbe
add
out
adc
in
sub
dec
xor
pop
mov
clc
subb
and
sbb
fdivrs
sbb
stc
add
pop
jl
cwtl
divb
in
cmp
sbb
cmp
fildll
add
jmp
fisubl
notl
pop
es
adc
adc
aad
pop
add
sub
mov
or
movsl
subl
hlt
mov
notl
ljmp
push
add
or
insl
jl
arpl
xlat
mov
loop
sbb
xor
js
push
cltd
mov
lea
add
jmp
fistpl
sub
lret
xor
jo
adc
jp
adc
mov
repz
out
out
outsb
push
fadds
mov
sti
int3
imul
inc
pop
add
fdivs
push
cs
fdivs
mov
xchg
into
movsl
and
les
lret
std
mov
decb
sahf
jecxz
cld
leave
inc
aaa
and
xchg
add
fldt
cmc
sub
cmpl
and
mov
mov
add
dec
pop
xchg
sti
mov
outsb
mov
stc
fsqrt
inc
movsb
xchg
mov
hlt
or
shl
cltd
fsub
and
mov
push
lock
pop
adc
lahf
push
mulb
sbb
mov
fsubrs
mov
js
in
jl
arpl
gs
out
enter
dec
aas
out
jbe
pop
push
sti
adc
rcll
arpl
mov
movsb
xchg
sub
xchg
mov
sbb
push
lret
jle
insb
fisttps
sbb
rorb
es
imul
cmp
mov
int
push
jge
push
outsl
push
add
les
sub
sbb
or
dec
dec
push
cmp
sbb
jbe
xor
pop
mov
mov
inc
enter
xor
and
in
push
pop
daa
ljmp
adc
fadd
pusha
ljmp
loop
mov
imul
lret
aas
xor
and
jo
insl
cld
nop
stc
cwtl
icebp
aad
jne
jmp
pop
das
leave
mov
ficoms
lods
lds
movsb
dec
add
xor
lret
inc
clc
outsl
mov
push
cmp
mov
mov
fwait
test
pop
insl
cmp
or
mov
add
xor
adc
mov
cli
test
in
xlat
sub
and
push
decb
leave
data16
das
pop
adc
cltd
fistpll
inc
pop
add
xchg
cmpsb
call
test
inc
or
mov
ljmp
cmp
outsb
jb
xchg
cmp
ds
imul
push
or
jmp
mov
icebp
int3
push
xor
inc
xchg
lahf
mov
ljmp
xlat
fdivrs
dec
lds
int3
pusha
dec
ret
dec
inc
leave
cltd
jge
sbb
out
dec
sti
sbb
ds
test
pop
inc
jp
mov
and
sub
push
mov
sub
and
cltd
mov
lea
jmp
lret
sahf
sar
std
ds
sub
sbb
mov
loopne
lock
js
out
push
mov
inc
sub
adc
mov
stos
mov
adc
inc
les
cmp
adc
imul
push
ja
pop
push
mov
gs
or
push
lods
das
sbb
fisubrs
xchg
imul
lock
jp
sbb
cmc
es
mov
stos
and
in
and
mov
adc
cmp
jnp
pop
push
dec
in
cld
lods
mov
pop
in
xchg
loop
xchg
dec
cmp
mov
mov
mov
jl
push
mov
in
mov
xor
mov
pusha
cmpsb
jge
icebp
xor
xchg
aaa
jecxz
and
int
xor
lret
push
out
jecxz
lods
xor
mov
mov
int
mov
incb
fdivrs
sub
jmp
sub
mov
aaa
sub
mov
push
shr
lods
notb
aas
cld
das
push
mov
lcall
clc
xchg
inc
loopne
loop
dec
orl
jecxz
push
sbb
pop
scas
sbb
mov
out
imul
xchg
jne
inc
repz
ret
into
js
xlat
enter
addr16
mov
ss
outsb
xor
push
popf
or
lods
jnp
ja
jns
icebp
icebp
adc
enter
pop
lahf
xor
scas
out
dec
lea
aad
sbb
loopne
sub
xlat
mov
loope
lret
adc
mov
dec
ret
mov
cltd
out
test
xor
sbb
fisubs
mov
xchg
push
sbb
sub
lea
popa
or
ljmp
adc
out
mov
pushf
mov
ret
jge
push
jnp
out
xchg
ljmp
push
push
insb
imul
lea
xchg
mov
pop
sbb
add
cld
pop
or
fsubrs
mov
add
repz
xor
roll
ds
repnz
push
mov
jmp
and
in
mov
lahf
inc
xchg
je
pop
or
adc
loop
out
int
shll
sbb
inc
and
fisttpl
mov
int
jp
mulb
cli
ret
hlt
enter
xor
outsl
jecxz
jnp
pop
mov
cmp
jmp
lahf
fdivl
inc
and
jg
mov
jg
cltd
dec
lea
repnz
aad
mov
xchg
pop
mov
pop
add
je
adc
xor
adc
mov
es
lret
test
ds
aad
or
fsubl
clc
add
mov
mov
movsb
mov
xchg
test
xchg
push
sub
inc
push
adc
or
xchg
lret
mov
xor
les
pop
add
mov
jecxz
jns
jmp
imul
test
les
fsub
cli
fs
data16
fimuls
pusha
sub
push
into
pop
test
cmpsl
dec
inc
in
mov
mov
icebp
sahf
push
aam
hlt
rorb
sub
inc
push
push
add
or
data16
aad
and
pop
dec
mov
rolb
call
jbe
enterw
inc
sbb
mov
movsl
loop
mov
or
mov
mov
jp
dec
mov
out
lock
nop
enter
js
pop
fists
sub
pop
mov
out
mov
insb
jmp
xor
out
jo
push
xor
inc
and
xchg
jp
or
aas
mov
and
mov
inc
and
stc
and
ret
sahf
sub
sbb
jns
aad
mov
sbb
lds
lret
addr16
mov
xor
test
add
mov
mov
add
addr16
rcrl
ficoml
je
mov
out
fstps
mov
ds
adc
add
ret
mov
pop
fwait
push
andb
movsl
repz
fldcw
sbb
adc
xor
mov
mov
shr
and
adc
es
dec
xchg
cmp
mov
jbe
leave
inc
mov
idivb
insl
xchg
movsb
out
lea
adc
xchg
hlt
adc
push
inc
xchg
mov
lret
es
ljmp
sub
popa
mov
dec
xor
loope
addb
testb
je
in
adc
push
push
push
xchg
jmp
sbb
mov
ss
xor
pushf
lcall
push
mov
lea
mov
and
push
dec
movsl
push
lea
jno
adc
rol
pop
orl
js
jne
inc
clc
sbb
sbb
fs
jecxz
leave
jle
sbb
mov
aas
outsb
and
sub
or
ret
std
mov
inc
xor
or
add
inc
xor
xchg
push
jl
jecxz,pn
cmp
and
pop
sets
int3
inc
xor
fs
sub
nop
pushf
sbb
sub
inc
mov
pop
lds
push
jns
outsb
iret
in
out
stc
sbb
test
sub
xchg
repnz
pushf
dec
push
or
mov
push
test
add
jmp
dec
fldt
scas
test
xchg
fs
je
lods
sub
stos
test
dec
dec
jns
or
or
jbe
jns
fwait
mov
jmp
push
and
xchg
xor
and
shlb
test
mov
cld
add
sub
add
aad
mov
cmc
mov
pop
lret
fs
or
std
inc
leave
dec
cmc
push
mov
push
cmp
mov
jnp
xor
inc
mov
inc
imul
sbb
sahf
push
jle
sti
hlt
mov
rorl
divl
jg
rcr
cmp
pop
cwtl
les
cmp
mov
mov
iret
std
jno
inc
pop
mov
lea
lods
add
pop
mov
add
in
mov
mov
sub
stos
dec
hlt
jecxz
pop
and
lods
inc
inc
cmp
or
lea
mov
cld
add
mov
cmp
adc
mov
outsb
js
or
lea
les
xchg
into
mov
mov
and
pop
dec
and
iret
push
jbe
mov
mov
repz
jge
jp
pop
and
sahf
pop
xor
sub
loope
jo
or
sbb
sub
push
std
xor
push
pop
mov
lcall
ds
test
push
mov
pop
push
div
in
mov
sbb
out
test
pop
cltd
pop
sbb
pop
test
dec
mov
imul
cltd
es
push
outsl
lea
ret
sbb
cmc
dec
and
xchg
xor
push
idivl
mov
daa
cld
fisubl
push
cld
add
call
pop
dec
sub
xor
clc
ds
not
lods
xchg
gs
jmp
imul
insb
jecxz
mov
lcall
ret
popa
sbb
test
gs
cld
mov
xlat
pop
clc
movsl
fidivrs
or
sbb
lods
mov
xchg
jo
mov
movsw
and
cli
push
int3
fxch
bswap
push
cs
xchg
scas
aaa
popa
or
push
faddp
jo
imul
ret
sahf
inc
popf
lret
cli
js
mov
mov
out
xor
movsb
or
pop
xor
ret
sarb
adc
popa
out
sbb
mov
sub
fdivrp
fdivl
movsb
xlat
adc
add
sete
dec
mov
dec
inc
loope
mov
pop
bound
int3
or
test
sti
push
and
andl
in
fdivrl
xchg
lods
leave
testl
es
lahf
xchg
and
xor
mov
mov
push
cmpsb
xor
pop
push
neg
lds
sahf
adc
inc
mov
jge
lret
in
stos
jge
xor
xchg
sub
or
leave
lea
add
cmp
adc
aaa
ffree
les
add
xchg
rcll
fs
fistpll
iret
add
xchg
in
or
arpl
cmp
xchg
dec
sbb
dec
xchg
shrl
lods
mov
push
mov
jne
pop
sbb
faddl
push
cmpb
insl
inc
popa
test
lret
cld
push
mov
add
daa
cmp
jecxz
mov
or
jne
cmc
or
das
in
mov
ss
cmp
das
and
push
cld
xchg
inc
mov
pop
or
mov
sbb
mov
sub
in
add
daa
adc
leave
xor
scas
and
xchg
push
fs
cmpsb
repnz
bound
outsl
mov
nop
arpl
push
cld
cmp
insl
and
inc
mov
cmp
lods
scas
push
mov
dec
in
js
mov
mov
sbb
stos
xchg
cmp
fcmove
inc
popf
daa
mov
adc
rcr
lods
dec
dec
sbb
je
sbb
in
pushf
adc
dec
push
adc
test
push
or
fs
adc
shlb
iret
mov
faddl
jg
movsb
xor
push
sbb
lretw
cs
inc
scas
imul
pop
aas
sub
sub
orb
inc
mov
sub
adc
lret
sbb
sub
movsb
ret
xchg
sti
push
lcall
mov
aaa
sub
in
shll
sbb
and
pop
inc
orb
push
add
jnp
cmp
scas
imul
mov
sbb
push
mov
jmp
adc
sub
cmpl
pop
xor
or
jge
test
inc
jl
test
push
inc
jmp
mov
or
sub
ds
invd
or
fneni(8087
push
sarb
int
dec
in
or
add
and
sub
mov
jo
test
test
push
shrb
and
es
ljmp
inc
jnp
fisttpl
inc
rclb
sbb
aas
mov
test
pop
cmp
dec
pop
testl
adc
nop
insb
sub
jns
bound
push
dec
aam
sti
lcall
cwtl
lret
stos
popa
pop
xchg
push
dec
and
mov
and
ds
es
lods
sub
lcall
push
in
scas
pop
push
adc
add
pop
nop
and
mov
cmp
lret
jle
and
cmp
jb
and
lcall
add
sbb
cwtl
and
or
cmp
scas
lret
xor
out
inc
xchg
inc
or
sub
sti
inc
push
sbb
and
outsl
mov
pop
out
fwait
and
pop
sub
and
addr16
flds
fmul
xchg
ja
shlb
xlat
mov
aad
sahf
sbb
xchg
call
std
test
daa
clc
cmp
ja
xor
jnp
rcr
xorl
ret
sub
pop
sub
sub
push
xchg
cwtl
adc
inc
dec
outsl
xchg
lcall
sbb
in
xchg
jnp
mov
xor
pop
aad
add
dec
repz
add
clc
adc
insb
adc
cwtl
sub
pop
imul
ret
es
inc
sub
sub
cwtl
hlt
cmp
inc
pop
inc
dec
mov
inc
test
pusha
faddl
jmp
out
cmpsb
xor
jnp
outsl
popf
dec
pop
mov
inc
orb
lahf
lret
outsb
dec
adc
push
je
xorb
push
enter
push
xchg
hlt
adc
mov
or
movsl
cmp
insb
mov
mov
call
adc
lds
cmp
mov
and
in
jmp
inc
inc
pop
fbld
push
je
mov
jecxz
les
insb
xchg
or
lods
xchg
jl
ret
aaa
sbb
cmp
mov
sbb
push
cmp
loopne
pop
push
movsl
sub
leave
addr16
jmp
push
hlt
mov
repz
addl
sbb
andl
or
enterw
sbbl
jo
pop
bound
in
call
inc
pop
cmp
dec
and
xchg
pop
popa
int
or
or
test
sub
mul
jecxz
jge
cmc
xchg
testl
jecxz
or
es
sbb
cmpsb
loopne
xchg
inc
xchg
pop
scas
add
xchg
push
sar
pop
pop
int3
hlt
adc
sub
pop
hlt
out
push
enter
push
popf
push
jle
xchg
loopne
and
clc
jbe
loope
cmpsl
out
dec
inc
insl
push
fstpt
or
shrl
stc
dec
sbb
adc
daa
ljmp
pop
cmp
leave
or
jns
pop
and
and
mov
mov
fwait
out
mov
xor
mov
rolb
and
cmp
loopne
sub
mov
or
nop
mov
ret
gs
push
adc
and
scas
push
cwtl
xchg
fucomi
cmp
fcoml
jmp
sar
push
lea
jle
out
mov
push
lret
imul
push
mov
cltd
jl
add
jp
mov
mov
fildll
sbb
fbstp
je
gs
insl
pop
enter
push
popa
cltd
dec
xor
out
mov
das
pusha
sub
xor
repz
push
insb
push
mov
jnp
jae
dec
fsubl
jecxz
pop
bound
cmp
jecxz
dec
je
outsl
push
or
fistps
lea
aas
popf
pop
mov
loop
scas
add
xor
mov
add
movsb
sahf
cmp
arpl
xchg
loope
in
icebp
aad
mov
stc
push
ljmp
mov
xor
popa
and
xchg
jmp
movsb
rclb
jmp
cmpl
addr16
sbb
call
ror
leave
adc
in
int
fidivl
jl
lahf
imul
inc
enter
pop
push
sub
rolb
fstps
fucom
pop
and
jne
cmpsb
cld
sub
adcb
fnsave
in
fbld
or
fstpl
and
cmpsl
jb
sub
add
xchg
popa
sbb
test
test
iret
push
mov
icebp
xchg
in
cmpsl
enter
jecxz
in
fildll
mov
adc
sub
stc
daa
push
enter
fldenv
sbbb
aad
mov
insb
or
sti
lret
pusha
cmp
cltd
jns
jae
inc
adc
add
test
push
dec
push
repz
pop
sbb
push
push
pusha
clc
mov
pop
in
push
mov
notl
mov
imul
pand
cmp
inc
icebp
out
nop
and
ljmp
jo
addl
dec
mov
test
scas
je
shlb
push
cmp
push
jbe
cmpsl
xor
pop
sub
xor
mov
xor
inc
arpl
mov
je
mov
ja
cmc
push
or
ds
mov
push
sbb
fcmovb
mov
lret
sub
inc
cmpsb
mov
loope
push
mov
aam
pop
inc
and
sub
std
mov
out
mov
lock
or
shll
lods
call
pop
std
stos
ds
jg
das
mov
mov
xchg
adc
push
sbb
in
rolb
imul
adc
je
out
mov
pop
outsl
scas
push
outsl
pop
popf
das
out
push
adc
aas
add
fistps
jo
jb
mov
or
fwait
int
push
cmp
jle
inc
pop
pop
and
jmp
aam
xor
and
add
mov
or
sbb
jmp
mov
fisttps
testb
mov
test
or
test
and
out
notb
rcll
pop
movsl
xor
mov
movzbl
enter
mov
push
jl
sub
icebp
jl
es
into
mov
rcrl
xchg
sti
xchg
jbe
jo
sbb
pmaddwd
lret
inc
push
sub
mov
ror
inc
loop
jecxz
lcall
nop
cld
rcrl
or
les
fidivs
test
test
dec
push
outsl
adc
adc
jae
mov
imul
imul
test
cs
test
mov
jno
push
not
mov
std
in
repnz
jp
xchg
mov
lret
sbb
xlat
cmp
mov
jge
ljmp
pusha
lods
dec
mov
stos
cmp
sti
shl
xor
inc
rcrb
nop
fists
out
mov
xor
cvtdq2ps
in
pushf
dec
mov
nop
test
leave
jp
pop
xchg
inc
in
fsubl
cltd
out
decb
lds
lock
xchg
inc
arpl
push
push
lcall
sbb
pop
in
inc
cltd
pop
or
mov
lea
js
push
leave
adc
fiaddl
int
inc
nop
inc
test
fdivrs
imul
aas
ljmp
cmp
jl
sbb
in
inc
fiaddl
jo
lea
das
aas
js
outsl
mov
xor
test
std
jge
xchg
sub
movsl
rcl
jmp
jl
movsl
repz
adc
jecxz
jae
loopne
mov
incb
pop
mov
push
mov
fidivl
ljmp
bound
popf
insb
outsb
lods
lock
xor
push
fimull
cwtl
decb
xchg
orl
in
or
xchg
das
stos
inc
insb
ja
xor
pusha
pop
outsl
pop
idiv
scas
push
movsb
in
push
call
pop
cmp
jns
sbb
sbb
mov
imul
insl
mov
cmp
mov
cmpl
cltd
enter
inc
jge
inc
jbe
daa
adc
pop
inc
dec
mov
scas
or
and
enter
push
mov
lahf
shl
inc
flds
stc
nop
jno
out
sub
sub
dec
mov
cmp
pop
add
mov
mov
jnp
sti
or
jge
mov
sbb
ret
cld
ret
adc
sbb
test
mov
mov
add
outsl
and
cmp
lods
bound
ljmp
call
pop
lock
jae
add
call
xchg
jo
push
sub
lret
or
inc
push
lock
js
shl
jecxz
stos
dec
pop
sbb
mov
push
inc
sub
sbb
sub
sub
cmp
test
dec
pop
push
faddl
add
xlat
mov
mov
jge
in
loopne
push
add
jl
loope
mov
les
and
add
je
jo
mov
cmpsl
scas
fldt
push
mov
adcb
cmpsb
push
popa
push
dec
xchg
jmp
int
adc
int3
leave
cli
bound
jns
adc
movsl
sbb
jbe
cmpsl
leave
pop
mov
sbb
cld
lea
cmc
pop
testl
cmpl
or
cmp
or
cmc
cwtl
icebp
in
dec
enter
sbb
dec
test
popf
sbb
fsubl
xorl
lds
movsb
jns
and
hlt
or
loope
rcr
test
jl
and
sub
jns
or
cmp
outsl
test
add
call
add
inc
jp
rclb
pushf
push
inc
xlat
ja
xor
stos
jl
fdiv
in
rorb
push
int
in
mov
cs
mov
sub
dec
rcll
out
mov
call
mov
loopne
cmc
sti
inc
and
subb
pop
lock
and
ret
mov
test
andb
jb
sub
xorl
repnz
mov
xor
rol
fdivrs
pop
dec
lret
les
xchg
push
adc
cltd
xor
and
adc
repz
fnstcw
sarb
inc
mov
outsl
out
insb
stc
xor
rcll
clc
pusha
lods
lock
nop
dec
add
cli
xor
mov
cmc
ror
inc
shr
subb
mov
mov
stos
cmp
push
and
shll
outsb
or
jl
cmp
mov
push
mov
inc
icebp
cmpsl
mov
xchg
and
and
leave
push
dec
xchg
shrl
pusha
jmp
vpmaxub
rol
xlat
cmc
push
xchg
sub
out
add
sbb
add
jg
test
ret
insb
fcomip
arpl
lods
jle
push
gs
hlt
mov
ja
ret
lds
add
testl
lret
pop
mov
aam
mov
pop
add
pop
lods
or
or
lods
xor
out
outsl
xor
ret
in
fmuls
andl
fmull
sbb
icebp
or
xchg
mov
inc
jl
pop
shll
jge
dec
lods
xchg
push
push
into
lret
xor
ret
sbb
jmp
sub
xchg
sbb
stos
cli
or
adc
mov
or
insl
out
pusha
mov
bound
inc
jl
or
xchg
adcb
add
ret
mull
adc
inc
loop
cmp
cltd
and
and
das
fwait
shll
out
pop
jle
mov
cmp
insb
in
pop
inc
add
push
push
jecxz
je
inc
jecxz
jmp
outsl
popf
loop
mov
cmpl
xchg
and
mov
into
jp
add
movl
rclb
sbb
dec
sub
daa
push
aad
lahf
pusha
mov
jl
adc
mov
jmp
push
adc
movb
je
aad
stc
out
sahf
jo,pt
and
movsb
mov
or
jno
cmp
testb
or
sbbb
fldenv
jb
jl
or
daa
xchg
imul
mov
test
stos
rorl
cmpsl
mov
add
add
mov
add
test
xchg
dec
adc
test
das
mov
mov
repnz
rolb
cmp
add
mov
enter
and
or
cld
jno
adc
cmc
cmp
js
cmp
push
adcl
xchg
in
mov
loop
stc
add
cli
movsb
pop
mov
lods
jb
xor
shlb
cld
or
add
dec
outsl
push
sub
cmp
mov
gs
push
push
ret
push
inc
lahf
dec
call
pusha
jecxz
xor
imul
adc
bound
and
shrl
outsb
adc
insl
and
je
mov
jae
mov
aam
push
jae
stos
insl
adc
data16
sub
mov
sbb
inc
dec
ret
and
lock
popa
fsubl
je
push
mov
cmp
lret
pop
xor
sbb
ds
mov
xor
mov
stc
loopne
out
sbb
add
or
stos
fisubrs
lahf
movsb
outsb
out
cld
fs
pop
sub
call
jne
imul
sbb
sub
mov
xor
and
fdivrs
mov
subb
adc
sahf
pop
inc
in
inc
adc
add
out
imul
lods
std
in
mov
mov
xchg
cltd
mov
movsw
push
setae
shrl
push
rcrl
aaa
mov
pusha
add
or
mov
je
push
jo
dec
popf
psrlw
jno
imulb
scas
orl
stc
adc
inc
scas
add
popa
testb
in
add
mov
mov
xor
sbb
orb
cmp
stc
cltd
or
pusha
lods
inc
push
jp
xor
sbb
enter
mov
jne
jmp
or
stc
js
jbe
mov
mov
fidivrs
mul
inc
inc
add
dec
jne
push
out
push
add
sti
sbb
or
insl
add
adcl
cwtl
lcall
sub
or
lods
sbb
ljmp
sbb
or
cmpsb
jae
mov
fs
sbb
sub
inc
cmc
addr16
and
pop
or
pop
xchg
gs
add
gs
mov
clc
jns
out
dec
inc
call
ret
movq
mov
mov
out
fadd
clc
int
pop
mov
pop
push
adc
shr
loopne
jb
adc
test
movsb
lret
aam
dec
mov
stos
loope
pop
fsubrs
loop
push
pusha
imul
decl
dec
jno
pop
into
cltd
lods
fcoms
scas
dec
in
insl
jns
ficomps
sub
into
stos
xor
adcb
or
adc
daa
repnz
sbb
scas
stc
dec
sbb
inc
nop
sub
xchg
jbe
dec
jnp
and
outsb
push
or
fcoml
iret
fsubrs
mov
add
mov
pop
mov
jge
pop
cmpsl
cwtl
pop
sub
ds
mov
push
xchg
in
cmc
lods
ds
xchg
repz
mov
push
icebp
out
pop
inc
in
push
mov
fistpl
jb
in
adc
push
dec
testl
repz
push
in
mov
adc
mov
arpl
movsb
int3
mov
lds
in
add
mov
add
and
js
jno
repz
scas
jnp
xchg
push
std
test
shr
mov
rcl
out
repz
rclb
xchg
leave
adc
repnz
test
faddl
jg
out
jne
add
push
jp
jle
loop
push
cmp
xor
mov
lds
jg
fcompl
adc
lret
jae
mov
lahf
cmp
mov
and
dec
fwait
out
das
mov
jg
sbb
call
pop
xor
pop
jg
adc
inc
push
pop
movsl
inc
mov
add
push
sub
mov
push
sbb
addr16
jbe
pop
cmp
sub
loope
mov
lcall
sbb
pop
mov
fbstp
sarl
in
jecxz
comiss
dec
jg
push
sub
and
gs
nop
inc
out
test
mov
loopne
mov
sub
push
cmpsl
mov
fdivrl
arpl
ret
adc
in
arpl
dec
push
mov
xchg
cs
mov
xor
sbb
and
inc
cltd
ljmp
jp
aas
xor
call
dec
push
or
push
cwtl
jno
mov
cmp
add
loop
or
xor
int
mov
cmp
lock
push
mov
movsb
and
adc
dec
sbb
xchg
orb
xor
test
add
push
and
mov
icebp
and
dec
std
inc
out
push
rcll
lea
inc
inc
pop
mov
push
xor
cmp
jge
ds
out
sti
fistpl
iret
pop
dec
push
dec
and
mull
sahf
pop
stos
repz
pop
mov
cltd
cli
jo
hlt
es
subl
and
cld
or
insb
jmp
cs
ret
mov
and
inc
loop
les
push
jmp
sahf
add
sbb
cmp
mov
jp
sbb
cmc
mov
xlat
mov
add
dec
outsb
pop
push
push
sub
or
ret
jecxz
xor
mov
mov
pop
or
in
cmp
loop
or
or
les
mov
cld
ljmp
lret
es
loopne
stc
and
cmp
mov
push
pushf
repnz
into
mov
fcomps
sub
fsubs
in
jecxz
cmpsb
cmp
fcmovnu
cltd
xchg
cli
push
sbb
add
addl
mov
adc
mov
sbb
push
mov
mov
pop
ja
dec
out
inc
cltd
sbb
xor
sbb
in
mov
cmp
into
xor
pop
cld
jbe
jo
imul
dec
movsl
cwtl
fnsave
mov
push
jns
jnp
sbb
cmpsl
test
out
add
dec
sub
cmp
mov
sbb
xchg
inc
sub
lret
leave
and
pop
jae
push
mov
push
dec
loop
repnz
int3
or
inc
push
push
jl
mov
imul
cmp
fbld
lea
rolb
call
add
test
repnz
adc
lock
sbbb
jg
popf
jp
jno
aad
cmp
movsl
inc
adc
mov
and
xlat
xor
xor
push
pop
and
test
dec
ret
jl
xor
lret
mov
xlat
pop
scas
push
enter
push
pop
xchg
mov
add
sub
cltd
sbb
call
sub
adc
rol
xlat
push
xchg
sub
fnstenv
and
scas
jge
cmp
jl
test
shlb
jne
ret
lcall
mov
xchg
xchg
jb
and
lods
jno
loop
aaa
mov
das
sbb
dec
mov
imul
bound
xchg
jl
lret
jo
mov
dec
fdivl
xchg
pop
add
rorb
shll
cs
aas
xchg
repnz
lock
dec
aad
ficompl
mov
sub
fs
xlat
jne
arpl
fildl
fmul
jl
sbb
pop
sub
mov
fadd
xor
inc
scas
leave
cmp
in
mov
push
fstps
jg
push
ret
fisubs
and
sahf
xchg
mov
inc
sub
add
aas
pusha
hlt
xorl
scas
out
dec
repz
xlat
jbe
and
xchg
testb
pushf
insb
sbb
cld
insb
mov
jl
push
xor
mov
shl
lods
leave
push
xchg
adcb
adc
outsb
sbb
in
subl
in
inc
cmp
lahf
jae
dec
insl
cmp
mov
dec
pusha
sbb
push
pop
push
mov
adc
addl
mov
ljmp
fcomps
cli
mov
xor
mov
shlb
sub
lea
loopne
inc
test
std
cmp
push
js
mov
fs
mov
data16
sbb
cs
in
inc
stc
xchg
shrb
sub
jbe
popa
arpl
xchg
das
shll
ret
push
inc
movsb
fistpll
incl
in
xchg
rcll
pop
flds
and
rcrl
pop
mov
push
fucomp
xchg
inc
cmp
gs
jbe
xor
mov
mov
out
test
mov
mov
push
cmp
push
xchg
or
cmp
js
icebp
mov
sub
cwtl
mov
sbb
mov
mov
push
out
and
ret
roll
jae
pop
mov
push
push
pop
sub
jecxz
adc
movsb
outsb
cmpsl
sbb
aam
nop
mov
push
jecxz
sbb
sarb
cmpsb
dec
lea
and
fs
mov
rcrl
and
jg
sub
xchg
out
mov
cmpl
jecxz
xchg
enter
lock
xchg
xchg
and
inc
int3
xchg
add
jecxz
imul
xchg
dec
mov
movsl
or
add
movsl
push
xchg
jmp
xlat
xchg
mov
mov
mov
call
sti
mov
dec
dec
pop
cmp
push
xchg
frstpm(287
imulb
insb
push
stos
cltd
lods
movsl
add
xchg
das
jecxz
or
adc
xor
filds
pcmpeqd
sbb
sub
fistpl
xchg
ds
jns
stc
jne
mov
popf
or
push
sub
jl
icebp
jle
and
cmp
add
xchg
imulb
cltd
test
sub
in
and
adc
xchg
push
mov
scas
xor
lock
out
hlt
ja
into
ja
lret
es
ds
cli
and
stos
mov
rcl
cmp
push
dec
sbb
sti
mov
std
cmpsl
sar
xor
adc
xchg
jo
and
ss
dec
adc
dec
pushf
clc
pop
out
mov
rorb
in
and
xchg
mov
mov
fstpl
xchg
sub
cli
es
pop
dec
outsl
ror
gs
in
les
pop
and
movsl
lea
inc
pop
sub
dec
xchg
mov
idivl
and
mov
mov
sahf
je
jno
movsb
rcll
xor
sub
inc
sbb
sbb
adc
stc
jmp
adc
fbld
push
cmpsb
fistps
and
aaa
push
push
mov
pop
mov
sub
mov
out
repz
cmp
mov
push
mov
aaa
orb
push
cmp
aam
in
fidivs
addr16
shl
pop
aad
add
pop
pop
sbb
xchg
mov
mov
pop
mov
enter
pop
fidivl
cltd
add
into
test
fs
insb
add
js
cmpsb
mov
and
mov
in
sar
inc
mov
sub
jae
int3
xor
sub
gs
xlat
inc
and
rcll
fistpll
pop
push
pop
or
les
out
or
fcomip
cli
push
push
xor
mov
lods
out
cmp
cwtl
inc
and
fucomi
push
in
iret
jp
lret
pop
xorl
sbb
int3
pop
adc
jns
jp
mov
sbb
push
push
mov
pop
sbb
aas
fimull
push
idivl
inc
cs
push
fsubrl
jg
sub
scas
pop
or
fmull
jae
lods
xchg
sbb
mov
insb
push
push
fsubs
pop
test
mov
popa
mov
sahf
or
addr16
xchg
xchg
adc
or
fmul
insl
mov
gs
inc
sbb
cld
and
sub
ret
sbb
ret
xor
outsl
loopne
aam
cmp
push
push
xor
jne
in
rclb
fisubl
or
xlat
and
insl
cmp
mov
sahf
add
aaa
or
call
ljmp
loopne
mov
int3
xor
sti
push
adc
bswap
idiv
inc
daa
push
jmp
out
or
and
movsl
dec
dec
mov
outsl
pop
sub
mov
mov
test
lret
jo
bt
xor
push
lahf
stos
and
in
mov
enter
dec
adc
daa
outsb
sub
repnz
and
lahf
pop
cmpl
loop
fxch
sbb
jno
lea
inc
shrb
arpl
ljmp
mov
add
xlat
sub
cld
aad
pop
jp
add
sti
and
xlat
push
mov
cmp
ret
xor
inc
jne
xor
or
ds
mov
loop
pop
cltd
pusha
lds
adc
xor
stos
loop
jae
cmp
cwtl
mov
mov
push
out
pop
in
push
or
les
ss
out
mov
sbb
xor
lret
and
jg
mov
fisttpl
ja
ljmp
jne
adc
fmull
add
mov
sbb
nop
fwait
pop
jnp
jae
int
repz
shll
or
and
fs
sub
jecxz
fmull
popf
outsb
pop
jne
push
xchg
xor
aaa
push
sbb
push
negb
ljmp
sub
mov
mov
mov
movsl
divb
push
or
push
fisttps
pop
adc
mov
lret
push
dec
arpl
sbb
push
data16
dec
mov
out
pop
outsl
push
pop
sub
gs
mov
repnz
stos
leave
lcall
pop
add
dec
xor
clc
adc
out
push
ds
es
add
pop
popf
fcoml
add
push
xor
and
mov
addb
dec
std
xor
daa
jno
inc
flds
rcrb
add
hlt
bound
rcl
dec
roll
and
and
push
cmpl
aaa
pop
arpl
push
and
ret
inc
mov
sub
scas
push
lret
xchg
and
add
leave
call
cli
mul
data16
inc
dec
mov
inc
jo
mulb
pusha
xor
push
scas
nop
lahf
ss
rol
fidivs
dec
shll
cmp
mov
or
mov
stos
lret
jns
insb
pop
mov
in
jnp
inc
mov
sub
inc
stc
dec
movsb
mov
pop
sarl
cmp
insl
jno
sub
js
xor
xchg
call
clc
je
xchg
gs
jne
jecxz
xchg
sbb
mov
std
mov
das
outsb
dec
aas
ret
out
jb
mov
pop
int
std
jmp
xchg
xor
mov
out
sub
pop
push
aaa
xor
inc
push
inc
inc
mov
in
mov
xor
push
in
test
leave
mov
xor
int3
std
mov
pop
cwtl
dec
jg
sbb
sbb
daa
mov
push
int
arpl
adc
mov
pop
pop
jno
pop
push
aam
fistpl
popa
loop
pop
shl
repnz
xor
xor
mov
xlat
std
push
mov
divl
sbb
xor
or
pop
jo
sbb
mov
sub
mov
xlat
dec
jecxz
add
test
dec
or
inc
fwait
sub
stos
xchg
push
out
xchg
xor
sub
pop
aaa
dec
push
push
sub
xchg
xorl
dec
and
outsl
test
pop
int
mov
or
sbb
divl
cmpsb
cmc
push
jge
lcall
aad
test
jmp
jns
fldl
xchg
adc
and
mov
mov
xchg
xchg
jae
testb
push
sti
jo
push
in
scas
push
push
mov
sub
dec
mov
push
mov
scas
jge
je
pop
dec
stc
jp
or
ret
hlt
fstpl
movsb
jg
fs
jmp
fiaddl
hlt
and
pop
cmpsb
insb
jp
call
pop
push
xchg
cmpsb
in
rcl
mov
scas
popa
push
mov
fidivrl
push
mov
xlat
pop
iret
pusha
nop
outsl
mov
out
aaa
mov
push
mov
mov
xor
movsb
into
dec
inc
aas
and
sbb
pop
or
inc
pop
lods
mov
mov
cli
adc
push
inc
pop
fildl
dec
jae
xor
cli
mov
push
adc
shl
jno
mov
outsb
loop
sbb
push
mov
mov
test
negl
sbb
fidivl
jmp
dec
shld
fwait
cmp
and
push
mov
test
inc
mov
loop
test
push
push
aaa
mov
and
xlat
or
dec
mov
les
xchg
inc
push
les
stos
daa
lock
call
es
xchg
adc
mov
adc
pop
or
xchg
sbb
jp
pop
sub
mov
mov
mov
mov
icebp
in
loope
pop
pop
mov
das
and
insl
test
push
dec
pop
jge
scas
pop
in
push
inc
inc
test
ficompl
push
or
sub
xor
das
test
and
pop
dec
dec
je
fs
mov
das
sbb
xchg
mov
imul
int
sbb
mov
call
movl
out
jns
or
pop
cmp
cmpsl
fnstsw
lcall
inc
pop
push
leave
push
dec
nop
mov
ret
movsb
lods
xchg
imul
ret
xor
adc
fsubrp
int
sub
es
mov
bound
adc
inc
test
xchg
and
sub
push
and
fwait
jle
test
int
stc
pusha
and
out
icebp
stc
fwait
std
pop
mov
add
out
and
into
xchg
lock
fcompl
or
loopne
scas
xor
adc
pop
sub
add
xchg
mov
imull
sub
sbb
movsl
mov
cmpsb
fdivrs
jge
inc
xchg
add
mov
mov
cmp
ss
xchg
jno
xor
mov
imul
mov
sub
or
pop
mov
pop
cmp
pop
cmp
popa
mov
adc
ljmp
sbb
je
push
int
mov
jle
mov
xchg
lock
mov
adc
in
loop
rol
imul
add
js
jbe
xchg
push
or
jns
movsb
jmp
inc
lods
sbb
mov
push
shll
push
int
rclb
out
lret
mov
mov
movsl
push
mov
lds
xchg
loopne
decb
popl
repz
xor
mov
jp
es
stos
jnp
push
cmp
mov
inc
repz
jl
lret
ljmp
out
fistps
xchg
push
and
nop
pop
mov
ds
lcall
mov
xchg
test
pop
cld
shll
xor
test
ret
test
jno
stc
cwtl
movsl
add
mov
subl
xchg
fsubp
in
rolb
lds
sub
adc
roll
loope
mov
sar
in
or
decl
pop
leave
jp
pop
push
ss
mov
mov
aad
xchg
and
pushf
nop
xor
sub
dec
sub
test
inc
outsl
xchg
mov
call
xchg
mov
mov
mov
dec
xchg
mov
inc
adc
and
inc
out
add
or
dec
push
adc
div
inc
in
fstps
subb
dec
outsl
inc
xchg
add
mov
lods
inc
ljmp
inc
dec
in
xchg
inc
jae
test
sbb
jne
or
stos
dec
fistpl
pushf
pusha
aaa
pop
inc
cmp
mov
pop
les
adc
scas
das
lea
aaa
popa
xor
cs
decb
imul
mov
aas
mov
in
jne
insl
push
push
cmp
sti
mov
xor
sub
movsb
sahf
and
add
and
lods
out
int
mov
mov
jnp
loopne
out
mov
cs
sub
sbb
or
cmc
jne
lcall
lret
jl
out
into
and
test
jg
fwait
sbb
scas
lahf
and
sub
add
push
inc
add
imul
cltd
sbb
ret
or
mov
insb
cmp
imul
pop
lret
outsl
sub
adc
stos
mov
sub
cmp
pop
insb
and
mov
jns
jo
dec
pop
imul
and
in
int3
or
rol
and
sbb
ficompl
rcrl
ja
mov
xchg
adcb
jbe
push
push
push
in
nop
je
insl
mov
add
push
inc
sti
push
sbb
mov
fwait
leave
add
ret
xchg
dec
punpckhdq
lahf
rep
mov
lret
push
cwtl
jp
sbb
xchg
xchg
imul
push
jo
mov
xor
and
xor
xor
mov
mov
xchg
nop
leave
out
sub
xor
cmp
stc
mov
sbbb
clc
and
push
ljmp
mov
stos
shrl
in
cs
push
insb
xchg
cli
sub
mov
stc
repz
rcrb
ret
mov
push
push
pop
push
popf
jo
and
pop
ss
push
add
sbb
mov
stc
xchg
lock
loop
inc
scas
fwait
xchg
mov
pop
jp
mov
adc
ret
and
pop
jmp
sub
push
mov
jg
and
icebp
pop
sti
popf
ds
xchg
inc
icebp
pop
add
gs
add
inc
cmp
mov
and
inc
pop
pop
in
lods
inc
sbb
adc
sbb
arpl
inc
xchg
cmp
push
repnz
adcl
xlat
into
ds
pmaxub
dec
stc
enter
ljmp
in
lods
and
jle
jecxz
dec
inc
or
inc
lock
es
out
xchg
xlat
popf
xchg
rcr
lods
cmp
cmp
push
jo
dec
stos
jb
push
xchg
push
xchg
ret
xchg
fiadds
jns
dec
xor
dec
pop
repnz
jle
push
gs
dec
cmp
mulb
mov
xchg
jp
lea
fdivl
push
and
inc
adc
je
sub
pop
int
pop
scas
js
sub
aam
cli
and
jnp
or
scas
fsubrs
cwtl
push
sbb
ljmp
insb
int3
stc
push
clc
outsl
shrl
adc
xor
test
mov
and
sahf
les
mov
sub
jo
jno
jl
loope
cs
lock
pop
pop
sahf
in
es
test
xchg
inc
out
into
fnsave
mov
outsl
xor
xorb
push
sub
lock
dec
push
jp
lret
imul
adc
mov
xchg
fs
and
push
cmp
push
pop
mov
cmp
jle,pn
dec
stos
aad
inc
in
loopne
or
dec
call
mov
leave
movsb
mov
and
out
cmp
enter
xchg
sahf
and
xchg
pop
mov
jge
cmp
pop
lods
push
stos
jo
sub
cltd
sbb
xor
mov
lret
je
sbb
pop
pop
daa
mov
shr
test
lahf
mov
stos
xlat
add
add
add
mov
jge
dec
and
push
test
mov
or
in
pop
ds
sahf
pop
push
inc
mov
cmp
cmc
loopne
xchg
mov
mov
dec
xchg
out
xor
dec
mov
and
out
insl
mov
dec
into
pop
xor
jl
mov
data16
mov
add
stos
loope
cltd
adc
xor
loopne
jb
add
imul
pushf
inc
add
test
push
enter
cmp
dec
inc
pop
adc
test
jae
je,pt
bound
dec
mov
test
das
pop
dec
mov
daa
xchg
lret
cmc
cmp
cmp
fldcw
mov
stos
movsl
lods
xor
sbb
ficompl
or
jns
lock
das
stc
inc
sti
enter
lahf
jo
mov
movb
mov
or
shrb
sbb
cwtl
dec
testb
addr16
outsl
daa
pop
in
jecxz
loopne
fldcw
adc
adc
jo
or
inc
cld
cmp
sub
pop
jbe
mov
call
jmp
jmp
jmp
adc
test
pop
bound
mov
cli
mov
sub
push
adc
aaa
dec
cmp
mov
dec
sub
sahf
mov
inc
or
mov
inc
loopne
je
fisttpll
mov
lahf
popa
pop
mov
negb
mov
in
jno
lods
stc
inc
mov
jg
push
sbb
jne
testl
xchg
aam
movsb
call
or
inc
ret
mov
enter
jle
cwtl
imul
in
xchg
xlat
test
xchg
cs
leave
inc
mov
jbe
push
or
mov
aaa
sbb
aas
xor
add
mov
jns
cmp
and
fsubrl
xchg
outsb
rcrb
and
adc
fistpl
xchg
mov
adc
repnz
pushf
fcoml
push
int3
mov
fdivs
xchg
xor
je
bound
sbb
push
xchg
movsl
and
jno
mov
sbb
and
lea
cld
mov
jmp
dec
sbb
and
mov
jae
data16
push
lock
lret
lahf
sbb
insb
test
out
adc
mov
cmp
adcb
cmc
fwait
daa
add
iret
pop
jmp
mov
daa
mov
lret
scas
mov
mov
push
or
or
jbe
dec
daa
fisubl
ss
aas
xor
or
push
fmul
jecxz
insb
jmp
loopne
stos
push
aas
sbb
xchg
js
pop
insl
adc
jo
jle
jb
mov
es
cwtl
mov
lret
ret
mov
call
xchg
std
movd
mov
lods
pop
xor
pushf
test
push
cli
lcall
fs
pop
mov
jb
dec
xor
xor
add
jbe
test
cmpl
sub
sub
mov
loop
mov
gs
repnz
clc
lds
pushf
push
jb
out
mov
mov
insl
jbe
cmpsl
loopne
inc
inc
jecxz
leave
mov
popf
mov
shlb
pusha
push
mov
pop
inc
or
push
jae
ret
lcall
ljmp
xchg
sti
pop
in
mov
cmc
xchg
aaa
sub
add
sbb
data16
adc
or
pop
in
xchg
gs
enter
cmp
bound
pop
jge
cmpsb
jp
bound
rcrl
das
inc
mov
das
push
leave
jae
jns
lcall
and
jg
push
sub
notb
fwait
sarl
fiadds
rorb
push
std
dec
movl
jmp
loop
sbb
sahf
fcompl
int3
xor
divl
ds
fsts
dec
imul
fnstsw
inc
push
in
adc
push
cld
adc
push
dec
leave
mov
call
ds
lret
fisttpl
mov
stc
mov
dec
jmp
inc
pop
mov
test
shlb
jae
loopne
pop
imul
je
xchg
pusha
out
leave
push
mov
mov
jns,pn
pop
or
test
pop
in
pop
rcll
push
out
lret
xchg
and
sbb
adc
add
push
lahf
mov
inc
add
call
lcall
shl
lods
pop
adc
roll
push
cmp
nop
or
push
lea
mov
jmp
push
dec
mov
jmp
mov
cld
adc
out
in
lcall
push
mov
repz
pop
lcall
adc
scas
dec
loop
inc
lea
and
cwtl
add
jnp
xchg
push
imul
in
movups
push
inc
jbe
mov
pop
xchg
inc
mov
addr16
sbb
xchg
cmpsl
and
lcall
adc
jns
loop
mov
mov
jns
movsb
pop
in
dec
nop
jnp
std
xchg
dec
inc
call
sbb
sahf
repnz
test
pop
incb
inc
xchg
aam
imull
sbb
cmpsl
or
mov
pop
cmp
stos
lods
xor
rep
out
dec
or
add
and
mov
push
jnp
out
jl
sbb
jno
add
cmp
aaa
and
xchg
into
xor
jle
in
sub
mov
mov
mov
fildl
jl
xchg
lret
ftst
sub
stc
inc
mov
sbb
xor
js
fs
pusha
xlat
xor
pop
pusha
jae
adc
js
sahf
cmp
mov
cmp
data16
movsl
or
lock
enter
cmc
mov
rorb
outsl
mov
mov
rcl
fwait
cmpsl
mov
icebp
mov
scas
jle
lds
xchg
ja
mov
inc
jg
fs
jno
mov
int3
lcall
push
xchg
addl
cmp
loopne
add
call
sub
out
es
pop
xor
sbb
aad
jnp
xor
lret
aad
fsubrs
sbb
adc
pop
cmc
push
int3
add
push
add
push
lock
cmc
inc
xchg
inc
jns
sbb
mov
cmp
es
mov
and
aas
mov
adc
push
or
pop
jl
imul
sbb
dec
jge
xchg
mov
and
sbb
cli
mov
clc
cltd
fsubs
mov
in
sub
jno
test
idivb
dec
fwait
mov
ljmp
or
dec
stos
sub
push
sub
clc
fpatan
push
enter
push
push
int
jp
lods
scas
mov
aad
lahf
push
in
insb
mov
or
stos
fs
cmp
lcall
pusha
cli
hlt
filds
sub
clc
xchg
icebp
cmp
lahf
aam
push
movsl
pop
xor
stc
mov
fadds
cmp
in
mov
aad
xchg
xor
jmp
lahf
sub
cmovae
and
sbb
icebp
or
add
nop
push
mov
mov
es
adc
movsl
jl
aad
push
nop
pop
jb
sti
cmp
shll
push
mov
xchg
pop
insb
stos
cmp
adc
ja
or
mov
jns
adc
jge
xlat
fimuls
nop
mov
or
xchg
insl
push
dec
mov
popa
sub
lea
add
dec
pop
outsl
mov
mov
shlb
ret
mov
insb
rcll
stc
cli
inc
mov
fstpt
stos
inc
hlt
shr
dec
decb
jbe
iret
inc
dec
inc
imul
pandn
clc
mov
xor
jle
movsb
push
fwait
mov
fcmovu
fwait
sub
xchg
lcall
jno
or
cwtl
mov
lods
inc
xchg
repz
test
sarl
imul
cltd
sbb
dec
inc
cmc
movsl
dec
testb
mov
xor
dec
pusha
inc
dec
jae
lret
fidivl
or
pop
aaa
adc
jnp
mov
push
add
mov
mov
jmp
out
push
lds
jge
xchg
popa
negb
mov
rclb
push
xchg
cmp
push
dec
fimuls
lcall
sbb
and
outsl
mov
fdivs
jg
sbb
sbb
lock
inc
dec
movsl
cmp
pop
xchg
aas
addr16
ljmp
jo
fsubp
xchg
inc
rcrl
fwait
mov
inc
frstor
jecxz
jno
dec
adc
out
hlt
and
mov
lret
neg
lcall
pop
fimuls
push
ret
aam
pop
pop
xlat
daa
ljmp
mov
push
dec
xchg
movsl
jnp
ret
mov
repnz
aam
and
pop
xchg
fwait
adc
out
mov
push
aam
enter
mov
repnz
in
jo
jecxz
lock
sub
jp
xchg
mov
pop
mov
gs
mov
pop
xchg
mov
cmpsl
ret
pop
cmp
cmp
stos
mov
sbb
mov
jns
jae
scas
bswap
xor
lahf
and
xchg
cwtl
addl
ret
adc
sbb
jne
out
adc
test
fimull
mov
inc
adc
cwtl
hlt
movl
fst
jns
jl
mov
scas
jl
or
hlt
lahf
cli
adc
jno
jae
xchg
int3
add
mov
in
dec
sub
mov
enter
popa
fidivl
cmpsl
imul
adc
mov
lret
cmp
push
icebp
movsb
sub
mov
jmp
and
jg
clc
in
leave
push
lods
jp
add
sbb
xor
mov
clc
sub
pop
rolb
arpl
add
dec
pop
clc
cmp
add
xor
mov
xchg
pop
pop
mov
insb
or
imul
outsb
xchg
add
adc
adc
ljmp
fldenv
shrb
cmp
add
loopne
iret
sbb
mov
mov
int3
sub
pop
adc
xchg
lcall
pop
mov
mov
xor
cltd
lods
loop
pushf
add
divb
mulb
dec
cmp
sbb
xchg
push
and
rclb
lods
pop
adc
or
cmp
rolb
sbb
outsl
pop
les
jle
and
or
jnp
enter
aad
xor
sub
test
jl
pop
aam
inc
xchg
jb
mov
ss
jl
daa
into
stc
pop
sbb
mov
dec
fists
mov
cmovp
sub
cmpsl
sub
xor
cmpl
inc
sub
xchg
shrl
loopne
xor
mov
cmpb
xor
je
jmp
or
jp
pop
imul
adc
aaa
in
int3
sahf
cmp
sbb
cmp
cltd
lret
ds
push
daa
xchg
daa
cmp
cli
cmpsb
xor
push
fs
jae
mov
out
mov
xchg
icebp
jp
mov
push
fsubrs
cli
filds
dec
or
addr16
test
in
xchg
fmul
pop
xchg
cmpb
cmpsb
adc
mov
lret
cmpsb
inc
inc
insl
mov
das
xor
nop
fwait
lock
jae
aad
mov
scas
or
cmp
repz
test
shrb
outsl
icebp
xor
mov
jb
cltd
popa
data16
pop
push
inc
push
arpl
fbstp
notb
sbb
lret
mov
sarb
xchg
pop
mov
addr16
push
mov
mov
xchg
xchg
xor
xlat
dec
fisubrl
jge
andl
aam
pushf
cmpsb
push
fists
fldl
adc
jmp
pop
dec
aam
iret
mov
sub
xchg
std
lods
xor
jle
sahf
add
pushf
out
push
jecxz
adc
loope
mov
test
popf
cs
mov
xchg
stos
adc
mov
push
sahf
test
pusha
adc
rorl
lock
movsb
xchg
mov
scas
cmp
adc
iret
inc
xchg
dec
sar
pop
xchg
fs
mov
pop
enter
adc
xor
mov
xchg
loop
test
outsw
lret
pop
cwtl
dec
clc
cld
push
push
adc
pop
lock
xchg
xchg
dec
scas
cli
addr16
lret
int
ret
sbb
cmpsl
aam
cmpb
pushf
push
jge
push
or
shrb
pop
lods
into
iret
adc
scas
in
adc
arpl
xchg
mov
fidivl
or
xchg
test
out
jo
out
lcall
or
xchg
pop
out
xchg
cmp
mov
aam
sub
xchg
adc
adc
daa
cld
inc
shlb
pop
in
jle
sub
andl
leave
and
jo
aam
mov
jmp
das
pop
fidivs
outsb
cmp
out
cs
rcr
aaa
fiadds
mov
sub
sbb
dec
mov
in
sti
push
mov
ds
pushf
cmp
xchg
jg,pn
xchg
test
cld
scas
das
mov
stc
push
test
mov
je
add
jl
adcl
inc
sub
test
pop
cmpsb
in
rorl
mov
xchg
lret
out
jno
xor
add
faddp
inc
ds
and
sbb
inc
jl
movsl
ret
add
mov
gs
add
sahf
and
push
gs
fwait
push
push
fldt
js
jg
adc
jbe
repz
push
mov
mov
dec
sub
xchg
sbb
mov
push
xlat
xchg
add
aaa
popa
adc
mov
mulb
ds
scas
adc
loope
sbb
outsb
scas
test
repz
sbb
dec
insl
adc
adc
adc
xorl
push
cmp
push
xor
mov
jne
dec
jb
or
je
xlat
xor
pop
sahf
add
shlb
xor
stos
jmp
xchg
adc
push
inc
gs
push
lret
adc
test
inc
addb
jb
push
cmp
cmp
mov
adc
fwait
or
addr16
mov
rorl
push
jg
inc
loop
lds
andl
ficompl
roll
dec
jbe
in
jge
jg
fimuls
andb
data16
movsl
push
cltd
bound
lock
incl
lahf
dec
test
ss
iret
jo
gs
or
sbb
xlat
in
fld
icebp
push
push
outsb
sahf
cmp
sub
jecxz
fistpl
out
ret
push
ljmp
lds
loop
ja
sahf
aas
jmp
sbb
aaa
mov
and
adc
pop
lret
outsb
pop
aaa
sub
or
stos
push
movsb
and
mov
jnp
cmp
call
outsb
std
add
add
test
sub
mov
sub
hlt
pop
out
into
rorl
fs
decl
mov
subb
ret
iret
xchg
push
pop
aam
mov
xor
cmp
ret
shrl
in
mov
mov
mov
xchg
xchg
mov
stos
or
loope
lret
frstor
aam
add
cli
or
std
pop
hlt
fidivs
jle
daa
rcrl
cmpsb
lret
jecxz
push
or
clc
sbbb
lret
cmp
gs
mov
mov
pop
testl
cmovle
mov
pop
mov
data16
jnp
mov
in
mov
dec
ljmp
mov
mov
insl
lods
adc
ljmp
jmp
into
int3
popa
in
mov
mov
stos
adc
dec
add
pop
push
mov
xor
or
mov
sarb
mov
adc
xor
pop
hlt
push
inc
ror
xchg
rolb
jne
subb
xor
or
mov
mov
add
leave
es
mov
cwtl
out
popf
cmp
cmc
call
cli
cmpsl
cmp
pop
sbb
cld
sub
notl
lods
push
in
jnp
outsb
inc
and
lcall
stos
fdivp
dec
loope
fcoms
in
and
shr
lahf
jle
mov
rclb
insl
pusha
flds
or
or
imul
negl
and
int
jne
lods
add
pop
cmp
insl
fiadds
push
or
or
jbe
mov
or
movsl
stc
shll
mov
daa
lahf
jp
push
and
mov
mov
xorb
loope
data16
popf
cmpsl
jecxz
das
mov
in
aad
cmpsb
mov
cmp
add
arpl
cli
jmp
sti
jae
jo
mov
inc
test
pop
imul
push
cmp
cmp
jns
xor
movsb
lahf
aas
sti
jecxz
mov
stos
sbb
lret
mov
subb
aas
lods
sarl
or
andl
sub
lcall
fmul
dec
popf
pop
out
sbb
mov
cmp
out
outsl
jb
ret
push
dec
loope
mov
sub
jl
out
cmpsl
sti
add
mov
xchg
jle
outsl
xchg
jne
push
push
sbb
cmp
and
in
cmp
xchg
pusha
loopne
cmp
insb
iret
jae
mov
insb
dec
aaa
testl
sub
add
xor
mov
into
ljmp
adc
mov
add
aam
xchg
xchg
push
xchg
lock
and
push
rol
dec
mov
test
add
xor
iret
mov
jp
inc
sbbb
out
add
xor
scas
push
xchg
mov
insl
sub
jo
cmp
mov
arpl
outsl
push
jo
lret
stos
cs
andl
xor
mov
ret
xor
xchg
jne
sub
sbb
aas
fcmovu
mov
popa
fisubrs
sbb
xor
test
cmp
test
jbe
je
les
mov
mov
das
xor
cmp
notb
jae
test
cmp
jns
mov
xchg
or
sbbl
mov
pop
outsb
and
ja
and
push
mov
or
or
jno
mov
iret
sbb
out
adc
bnd
mov
out
xor
subb
and
out
aam
xchg
mov
dec
cmpsb
inc
or
outsl
xor
pop
xchg
fsts
stos
jne
int3
mov
and
xchg
insl
pop
shll
lret
jae
ljmp
dec
daa
movlps
and
aas
daa
aaa
sub
mov
stos
pop
scas
out
adc
adc
or
pop
mov
xchg
dec
and
pop
clc
imul
cli
inc
sbb
jmp
les
inc
sar
xchg
push
pop
pusha
sbb
adc
les
xchg
test
and
inc
xor
mov
movsl
xchg
sbbl
in
xor
add
jp
popf
cmp
addr16
rorl
cld
aas
xor
lods
ficomps
cwtl
and
add
sahf
sbb
scas
sub
sbb
rcrl
mov
stos
jge
jecxz
sub
mov
inc
popa
mov
cmpsb
rorb
and
mov
je
insl
aaa
outsl
or
xor
lods
xchg
imull
fcomps
or
pop
mov
insl
inc
or
lea
jno
inc
shll
sbb
push
dec
jo
aam
out
ja
mov
mov
scas
orl
fcomp
or
mov
jmp
dec
mov
mov
bound
mov
popa
inc
dec
in
mov
pop
sbb
xchg
sub
cmpsl
pop
and
mov
pop
iret
std
test
jnp
adc
or
popa
cmc
xchg
mov
sbb
xchg
push
mov
lds
in
xchg
lcall
jp
pop
xchg
loopne
lcall
ja
sahf
mov
ficomps
xchg
dec
cmpsl
ret
push
push
mov
jno
adc
cmp
adc
roll
sub
orb
mov
push
nop
roll
adc
xlat
pop
xor
jle
push
addr16
mov
leave
adcb
rorl
ret
sti
stos
add
mov
mov
mov
repz
add
and
loopne
mov
imul
test
aad
inc
fnstcw
mov
cltd
adc
cli
in
sub
outsl
aas
or
jne
mov
nop
or
and
lock
jl
and
push
xor
clc
mov
jp
imul
into
roll
insb
dec
xchg
notl
xchg
inc
inc
lret
in
jle
in
mov
lods
iret
addr16
mov
ror
psrld
pop
lahf
jno
repz
shrl
repz
hlt
and
jbe
insl
leave
xchg
mov
mov
mov
pusha
insl
dec
or
fidivs
dec
add
sbb
arpl
dec
jno
xlat
and
jno
data16
push
shlb
mov
adc
and
add
insb
jmp
sub
mov
arpl
push
sub
in
mov
cmc
inc
push
sub
mov
lret
or
adc
adc
clc
test
mov
fistps
or
hlt
adc
dec
inc
jecxz
aaa
pop
mov
outsb
mov
mov
mov
mov
mov
mulb
lcall
jmp
js
xchg
shr
add
cmp
inc
stc
cmp
xchg
repnz
xchg
sbb
mov
xor
inc
or
jmp
jns
mov
inc
sbb
stos
sar
call
lds
lahf
lock
push
sub
and
cmp
loope
cmp
xlat
ss
push
lea
add
stos
jmp
sti
leave
insl
fistps
test
add
shrl
int3
lock
xchg
xchg
mov
push
pop
pushf
push
cmpsb
mov
jecxz
cmp
jg
mov
leave
dec
dec
mov
fnstcw
test
cli
in
push
cli
mov
stos
in
pop
inc
mov
popa
mov
push
loop
loope
jecxz
push
inc
mov
adc
adcl
movsb
cmpsl
sbb
lock
scas
cmp
sub
iret
fwait
mov
push
les
xchg
fmuls
cmp
dec
ret
incl
mov
jecxz
or
mov
icebp
jge
mov
js
cld
data16
mov
push
aas
or
sub
sub
inc
rolb
adc
hlt
mov
in
test
loopne
stc
lret
dec
mov
dec
addr16
xorl
insl
and
jge
into
iret
lods
xlat
inc
xchg
lods
inc
push
ret
adc
mov
mov
sbb
insb
orb
jmp
mov
sahf
pop
mov
les
sub
rcrb
ds
and
jp
cld
sbb
and
or
call
inc
aas
jo
stos
xor
bnd
fists
sti
or
aaa
stos
adc
fadds
int
push
das
add
outsb
pop
test
out
pop
cmp
ljmp
aam
sbb
mov
clc
outsl
sub
sbb
push
out
add
jns
enter
cli
add
loope
sti
pop
dec
rcr
jne
inc
icebp
idiv
fists
sub
mov
test
mov
and
clc
pop
lahf
icebp
fistps
js
loop
data16
mov
cli
fildll
stos
add
es
mov
outsb
outsl
testl
and
dec
sub
adc
js
ror
mov
adc
sbb
pop
mov
adc
into
dec
test
pop
and
mov
add
pop
outsl
xor
jns
scas
movsl
add
je
inc
inc
lock
aaa
aaa
mov
movsb
nop
pop
incl
mov
sub
mov
jmp
and
jne
cmpsl
cmpsl
std
insl
lods
xchg
nop
mov
xor
jg
add
xchg
sbb
or
push
lds
shr
sub
xor
es
and
pop
pop
push
adc
xchg
ret
dec
lods
leave
ds
scas
loope
test
test
and
mov
mov
std
nop
out
xchg
mov
jnp
adc
mov
dec
pop
outsl
xchg
inc
pop
xor
pop
and
test
ret
mov
pusha
aam
push
loop
push
mov
pop
lret
test
clc
test
scas
mov
rcr
push
ja
mov
mov
mov
sbb
and
sub
dec
pop
call
add
inc
cmp
int3
mov
cli
cmp
cs
and
mov
js
or
mov
pop
test
in
stos
jnp
mov
jns
mov
push
mov
lods
pop
sub
stos
movb
jmp
xchg
lret
pop
scas
sub
sub
push
call
add
cmc
aaa
adc
stc
movsb
adcb
dec
jp
loopne
mov
out
mov
jl
pop
lret
aam
xchg
push
loopne
mov
mov
lahf
inc
insl
push
push
sahf
insb
jnp
mov
popa
pop
in
out
cmp
cmc
add
iret
into
out
or
mov
jae
jecxz
jp
cmp
outsl
popa
call
loop
je
xchg
int
fildll
jo
popf
in
fbstp
jne
jbe
mov
sbb
ret
lret
jbe
aam
sbb
notl
imul
rorb
pop
fdiv
loopne
push
mov
cs
sbb
loop
jg
dec
cli
mov
mov
outsl
inc
cmp
jmp
push
in
js
adc
or
add
scas
and
push
divb
adc
and
cmp
mov
lock
cld
out
lcall
xor
jl
lcall
test
arpl
and
and
mov
gs
cli
lea
jae
fstpl
imul
mov
mov
jl
arpl
sbb
ljmp
sub
add
jno
aas
push
xchg
adc
pop
jl
sub
adc
inc
imul
xor
fstp
in
cmp
dec
dec
inc
rclb
scas
cmpsb
mov
fbld
cmpsl
xchg
jb
rcrl
push
xchg
rorb
jp
test
sub
and
and
mov
inc
push
mov
xchg
sbb
adc
pop
pop
pop
mov
cmpl
out
push
mov
cs
subb
daa
adc
push
mov
push
mov
std
mov
mov
jmp
mov
and
std
inc
insb
push
lret
addb
test
jg
cmc
pop
out
jge
in
js
lcall
test
dec
fcomp
inc
adc
jb
xor
adc
cmp
sbb
cmp
in
shlb
enter
xor
jnp
aad
popf
and
ss
and
dec
dec
pop
cmp
js
enter
das
aam
xor
shrl
mov
jbe
data16
cmpsb
sub
stos
dec
push
pop
pop
mov
xor
push
mov
into
mull
stc
imul
lret
xor
mov
xor
stos
cmp
into
pop
adc
sbb
xchg
mov
mov
mov
imul
ret
push
je
mov
fs
dec
inc
jmp
je
dec
dec
sbb
push
jecxz
adcb
popa
notb
loop
jbe
and
idiv
mov
pop
or
add
push
add
aas
dec
sti
and
lret
test
or
xchg
mov
xchg
pcmpgtd
inc
lods
xchg
and
mov
mov
lea
insl
loopne
les
sub
sbb
and
mov
xchg
sbb
add
sbb
imul
pop
lods
mov
leave
cwtl
xlat
xchg
mov
xchg
jle
fnstsw
outsb
ds
nop
adc
mov
outsl
push
lret
add
pop
mov
pusha
call
mov
mov
add
int
rcr
lret
sbb
jne
pop
push
push
shrb
jbe
fsubrs
push
sahf
pop
fiadds
mov
daa
xchg
sub
loop
push
cmp
bound
ret
andl
cmp
int3
pop
push
push
loop
ja
mov
sbb
lcall
leave
test
push
rcll
cmp
test
inc
fs
ljmp
adc
fdivl
or
pop
xchg
in
loop
fs
push
jmp
cld
aas
or
cmpl
outsl
arpl
imul
sahf
lahf
cmp
in
dec
loopne
ret
mov
mov
xchg
jno
mov
and
imul
xchg
mov
mov
sbb
or
mov
jne
data16
xor
push
movb
mov
or
push
mov
xor
nop
add
cli
jae
scas
xchg
stos
mov
movsb
add
mov
cld
or
and
scas
test
jae
pop
in
nop
subb
dec
lahf
clc
movsl
jno
mov
cs
pop
data16
or
mov
push
or
das
or
pop
daa
rolb
mov
push
ljmp
sub
hlt
jl
roll
xchg
sbb
jae
lds
mov
mov
int
je
je,pt
nop
sub
shrb
sub
sbb
mov
stc
cmp
rorb
sub
pop
fisubl
sub
out
aam
lea
xor
xor
fistl
and
inc
fistl
cld
and
in
add
jle
cmpsb
push
clc
clc
jbe
imul
xor
adc
xor
cmc
pop
rorl
jecxz
cmp
inc
xor
xchg
sub
mov
into
jns
inc
jp
pop
sbb
aad
sbb
sbb
sub
mov
gs
jns
in
pop
push
insb
push
mov
dec
and
icebp
lahf
sbb
out
add
dec
inc
sub
xchg
mov
cmc
out
adc
out
sbb
jno
mov
jl
push
sbb
dec
or
jle
inc
jae
jp
add
xor
adcb
xlat
mov
icebp
mov
xor
in
std
inc
aaa
rorb
mov
test
scas
iret
inc
jns
fidivrl
and
popa
push
icebp
rcll
lcall
push
inc
cmp
sbbl
jbe
ja
sub
xor
mov
fbstp
mull
scas
or
push
out
cli
cmp
popa
test
lret
mov
push
fmulp
dec
idivb
dec
xchg
bound
add
leave
arpl
scas
dec
push
cmpsl
daa
push
ror
mov
adc
mov
xchg
js
fsubr
mov
xor
sub
xlat
sbb
outsb
mov
ret
xchg
testb
imul
lock
mov
add
and
sub
jb
cltd
add
cmp
cwtl
loope
aad
pop
loope
popa
dec
lret
jle
fiaddl
sbb
xor
dec
sub
cwtl
sub
mov
cmc
cmp
js
sub
enter
icebp
cmp
jmp
in
pop
pop
mov
enter
shll
shl
add
ljmp
adc
pop
jo
push
sbb
test
into
popa
shrl
aaa
xchg
popf
xchg
inc
jg
add
jmp
test
add
scas
jmp
in
mov
mov
pusha
inc
sbb
shrl
ds
xchg
xor
les
jle
rcrb
shlb
sbb
addr16
test
lods
jecxz
xor
test
aam
lock
cs
push
xchg
test
mov
cmp
fs
sub
les
mov
jbe
cmpsl
xchg
lods
add
xchg
sti
movsl
lcall
outsb
filds
arpl
into
adc
imul
popa
ja
push
ficoms
gs
or
adc
int3
adc
fnstenv
pop
and
adc
aad
push
aas
jge
pop
pop
pop
fisttpl
and
rol
push
aam
mov
xchg
shll
inc
daa
test
push
jp
mov
mov
mov
out
add
shrl
nop
mov
fidivl
int3
fdivr
test
jg
lds
adc
fildll
xorb
icebp
sbbl
imul
mov
mov
pop
fmull
test
js
xorb
dec
lcall
aam
mov
pop
aas
adc
mov
adc
jae
inc
and
out
add
add
pop
mov
dec
lods
or
rcrl
icebp
imul
jge
xchg
push
pop
or
in
jge
nop
or
jbe
push
cmpsb
inc
xor
test
sarl
adcl
jne
pop
sbb
pusha
jo
jge
sbb
mov
jns
in
outsb
jbe
in
xor
jl
cmp
mov
ret
push
lret
lret
jge
xor
cmp
ja
add
jecxz
jns
sarl
add
xchg
or
add
mov
adc
or
push
mov
sbb
frstor
into
xchg
mov
sahf
adc
cli
push
test
pop
or
ljmp
push
jb
ret
cmpb
fldenv
push
ret
or
push
sbb
stos
cwtl
js
repz
cli
dec
fisubrs
sub
mov
push
ljmp
push
clc
imul
lods
push
dec
xor
in
add
adc
loopne
xchg
nopl
fstp
lcall
cmpsb
dec
dec
imul
inc
and
mov
mov
cwtl
lea
lds
push
inc
cmp
jo
or
movsb
pop
rcll
ror
jmp
aam
cmc
push
movb
push
inc
push
scas
outsb
pop
scas
and
jns
sub
je
aas
lea
pop
pop
aas
mov
jnp
std
dec
mov
inc
out
lret
data16
cmp
test
cmp
mov
xor
into
cmp
int
and
mov
addl
xchg
push
push
mov
jge
loopne
pop
addr16
lret
push
mov
pop
xchg
enter
fiadds
or
add
mov
xor
aad
mov
lods
add
psubq
add
add
add
push
xor
ljmp
push
repnz
dec
mov
call
imul
pop
dec
shl
and
mull
sbb
test
es
xchg
push
and
dec
aad
xor
lock
jb
in
mov
mov
fwait
push
mov
jecxz
jmp
adc
cmp
xchg
jns
fs
push
lods
push
scas
jae
sahf
mov
stc
inc
ret
pop
jg
xchg
shlb
jg
push
loopne
push
or
fbstp
add
pop
aas
test
fidivrl
inc
mov
pop
lock
inc
mov
pusha
fidivl
nop
jnp
and
cmp
in
pop
cmp
sub
jae
push
push
in
dec
sarl
leave
dec
pop
stos
pushl
stos
out
stos
or
outsb
sbb
test
add
jecxz
push
mov
repz
or
mov
addr16
mov
call
xchg
bound
mov
dec
popa
lret
repz
leave
or
xlat
out
xchg
mov
mov
inc
xor
outsl
push
rcll
movsl
pop
pop
adc
addr16
adc
ror
or
xor
push
pop
rclb
mov
ss
lahf
cmp
shll
cli
add
push
lds
addb
sub
imul
push
nop
cmp
sbb
adcb
lds
or
sbb
sbb
jl
push
add
inc
pushaw
pop
sub
les
movsb
dec
ss
dec
aas
lret
je
leave
cmp
and
mov
enter
rcrl
fs
inc
push
popa
scas
adc
mov
cmp
repnz
outsl
out
sub
mov
imul
mov
push
xchg
pop
mov
je
mov
pushf
rorb
xor
mov
insl
inc
xchg
int
sub
test
xchg
pop
int3
pusha
orl
stos
xchg
or
in
into
add
data16
xchg
aas
and
mov
pop
xor
xor
leave
jns
mov
lea
jnp
push
insl
or
push
lods
ljmp
imul
sarb
push
pusha
push
sbb
xchg
sbb
push
mov
insl
fdivs
jne
push
imul
fs
cwtl
dec
push
into
jmp
leave
loop
repz
cmpsb
daa
mov
arpl
lock
das
dec
xor
out
cs
out
lods
jecxz
daa
icebp
or
fisttpll
rorb
mov
in
push
adc
xchg
sub
repz
insl
dec
xchg
xchg
cmp
xchg
adc
sbb
inc
shll
mov
adc
push
shl
lods
int3
lcall
fidivrs
lock
mov
fsubrl
loope
jl
clc
pop
mov
jmp
lock
leave
mov
xchg
jp
mov
and
stc
pop
dec
scas
xchg
mov
cwtl
stos
fidivrs
ja
into
fsubrl
nop
movsb
jle
cld
stos
sbb
out
neg
sbb
cmp
ds
cmp
inc
int
fdivrs
mov
push
push
sub
shr
lret
fisubl
inc
ja
fadd
xchg
push
loopne
aad
insl
fdivrl
int
jl
xor
pop
xor
rclb
sti
test
ret
sub
out
ds
mov
inc
jl
pop
sahf
mov
dec
icebp
pop
daa
loop
cmp
push
insb
cs
popa
popf
movsl
lods
xor
popa
negb
sub
gs
or
add
and
jns
cli
test
mov
push
out
sahf
and
and
arpl
cmp
movsb
mov
sub
jnp
dec
sub
adc
shlb
enter
jecxz
mov
xor
movsl
and
push
arpl
icebp
sti
and
inc
xsha1
cmpsb
mov
lods
and
aaa
xchg
stos
lret
lock
xor
xchg
aad
fnstsw
cs
cmp
or
cltd
out
cmpsb
loop
pop
adc
aam
stos
sbb
ss
jmp
leave
fcompl
cmpsl
loopne
cmp
lret
loop
loop
repz
je
fdiv
lret
lcall
mov
andb
mov
pop
mov
fldenv
shlb
add
and
dec
cmp
sub
cltd
pop
hlt
int
lcall
xchg
mov
mov
ja
inc
xorl
inc
jg
sarl
clc
bound
call
sahf
cmp
xor
loope
movsb
in
call
icebp
rclb
push
pop
rorl
iret
mov
push
cltd
jmp
andl
aam
jge
test
cmp
ss
stc
jp
nop
mov
shr
push
fstpt
in
inc
fmul
and
xchg
popa
fs
mov
lahf
shlb
add
shll
cmp
pop
int3
jl
mov
and
ud0
mov
shlb
sbb
cltd
add
out
addr16
fmuls
inc
aas
je
jne
sbb
inc
sbb
repz
mov
mov
cli
sbb
out
xchg
jecxz
cs
adc
cltd
and
aam
nop
popa
sbb
push
dec
aad
inc
push
fsub
mov
sub
popa
add
and
and
enter
addl
mov
mov
popf
int3
xor
mov
xchg
dec
xchg
pop
mov
movsl
int3
sti
mov
sub
jmp
dec
xchg
frstor
jecxz
aam
loopne
sbb
ret
out
repz
loop
cmp
and
adc
jbe
xchg
xchg
inc
add
loope
sub
sbb
mov
pop
shr
das
icebp
dec
fdiv
lret
not
jae
mov
fbstp
test
sub
xor
sbb
test
add
ss
pop
mov
outsb
in
pop
stos
mov
popf
cmp
dec
es
adc
mov
pop
call
inc
les
cmp
xor
mov
pusha
cmc
aas
mov
inc
jge
popa
push
mov
test
jl
sub
icebp
loop
pop
cmp
adc
push
jbe
and
inc
jp
cltd
pop
pop
clc
cmc
mov
xchg
nop
cmp
nop
repnz
mov
cmp
addl
out
out
shll
js
inc
mov
add
mov
adc
movsl
dec
mov
lea
shll
subb
xor
adc
sbb
mov
push
xchg
out
jbe
xchg
loop
mov
mov
loop
sahf
push
gs
dec
into
data16
mov
ja
adc
into
popf
dec
or
xor
pop
jne
out
add
xchg
shl
stc
lods
ror
scas
outsb
addr16
loopne
jno
rorb
push
jg
cmc
lret
cmp
mov
pop
stos
ljmp
pop
cmp
stc
jbe
cmpsl
xchg
outsl
mov
imul
inc
mov
out
shll
rclb
pushf
jne
repz
gs
mov
xchg
shrl
lods
and
lds
mov
mov
ret
fimuls
dec
mov
or
mov
jge
pop
xchg
push
sbb
and
push
dec
ds
xor
xchg
pop
inc
int3
or
notl
pushf
dec
test
aas
es
cli
fnstsw
dec
bound
out
jbe
popa
pop
mov
cmc
into
jg
dec
and
cmpsb
add
cltd
and
and
repz
or
xor
dec
and
leave
icebp
mov
push
cwtl
jg
leave
or
sbb
xchg
push
mov
cmpsl
push
jecxz
call
lods
fldcw
inc
and
inc
jnp
xchg
rclb
pop
mov
jmp
aam
pop
aad
cmp
sbb
xor
pop
inc
cmpsb
loopne
xor
xor
push
movsl
xchg
mov
in
mov
xchg
pop
test
je
jnp
jbe
mov
fbld
xchg
lcall
insl
mov
pushf
insl
idiv
rorb
sahf
mov
inc
xchg
movsl
subb
add
jecxz
in
jle
idivl
stos
rorl
and
push
push
movsl
jl
cmp
cmp
mov
push
inc
call
jnp
sti
shrb
sbb
sub
sub
push
cli
jle
add
pusha
dec
lcall
int
rolb
pusha
imul
imul
jecxz
and
cmp
int
mov
jno
dec
inc
jecxz
int
cltd
and
jle
clc
lret
xor
mov
xchg
inc
in
ja
xchg
and
les
push
inc
mov
or
imul
cli
xchg
mov
ret
addb
dec
dec
cmp
push
mov
jmp
mov
push
inc
loop
adc
push
jmp
inc
insl
push
mov
enter
mov
mov
bound
jbe
mov
cli
sarb
call
pop
or
sbb
inc
call
std
leave
into
xor
cmpsl
xlat
mov
mov
lods
inc
addr16
insl
jo
mov
aas
test
xchg
mov
andl
xchg
mov
es
scas
xchg
jns
loop
stc
inc
xchg
xchg
sbb
cmp
lds
lea
mov
fs
push
cld
xchg
jb
mov
aad
call
mov
xchg
out
add
mov
stos
cwtl
repnz
sbb
jmp
insl
js
repz
xchg
ret
jnp
in
mov
cli
jns
jmp
aaa
lcall
aas
mov
dec
pop
jge
jge
fucompp
sbb
add
repz
pop
xor
out
cmp
sbb
cmp
popf
orb
or
lods
and
inc
and
in
mov
leave
cli
jns
xlat
xchg
jno
sbb
loope
test
cmc
test
dec
insl
shl
lret
stos
inc
shl
or
popw
cmp
daa
cmpsb
stc
add
inc
add
fsubr
mov
flds
cmp
push
lds
xchg
in
cmp
aam
insb
into
inc
xor
bound
add
loop
jnp
cli
mov
jmp
pop
jg
jns
testl
inc
divb
ds
cli
daa
xor
push
int3
or
pusha
mov
icebp
stos
test
jecxz
sbb
fucomi
xchg
out
mov
fiadds
sub
test
or
flds
sbb
push
adc
stos
mov
arpl
stc
in
mov
jns
repz
jmp
addr16
cmp
sub
int
lret
mov
sub
pusha
mov
inc
and
ss
jl
sti
popa
sbb
adc
clc
fdivs
into
pushf
sbb
test
and
subb
sub
sub
lock
add
out
adc
and
addl
pminsw
or
inc
std
into
fldl
andb
inc
addr16
push
sbb
outsl
fisubrs
push
mov
out
fiaddl
mov
and
data16
cmp
jge
popf
out
lahf
test
loope
jmp
adc
sbb
aas
sahf
push
jne
stos
imul
out
int
dec
lahf
js
sub
inc
pop
and
ja
sub
pop
ret
mov
xchg
lahf
xchg
and
push
movsb
inc
adc
fsubrl
iret
std
bound
insl
xchg
mov
xor
mov
data16
jle
inc
lret
pop
jb
cld
and
arpl
adc
cmc
pop
jmp
mov
pop
xor
jecxz
pop
inc
call
out
pop
fdivl
movsb
dec
jne
sbb
add
iret
xor
lahf
push
pop
aam
nop
mov
sub
outsl
outsl
mov
repnz
sub
jecxz
test
sbb
mov
idiv
inc
sti
shrl
out
ds
push
sahf
add
mov
movsl
inc
shr
fidivrl
jo
vpaddb
mov
mov
out
fstps
inc
adc
xor
rcrl
loopne
popa
adc
aas
push
fucom
in
pop
inc
xlat
and
int
clc
pop
dec
mov
mov
mov
test
pusha
push
imulb
shlb
pop
sub
dec
repnz
lret
adc
and
add
imul
push
test
das
std
mov
les
repz
mov
dec
add
xor
xchg
jae
call
mov
sbb
lods
jne
imul
es
pop
call
push
jns
loopne
push
popa
aaa
mov
dec
sbb
xor
mov
ljmp
out
loop
pop
fists
or
adc
pop
cld
clc
xor
daa
stos
mov
dec
cmc
rcll
stc
adc
lret
and
pop
stos
cld
ja
adc
sbb
and
mov
pop
sahf
je
pop
push
shll
std
adc
out
sbb
stos
imul
push
lods
push
push
and
rorl
into
test
lods
idiv
xor
dec
mov
pop
pop
or
pop
sub
outsb
les
mov
dec
jp
pop
pop
std
cld
int
push
test
insl
adc
stos
sub
jns
insl
add
push
leave
cmc
mov
loop
sub
mov
imul
dec
jno
dec
popf
push
lcall
push
int3
sub
mov
dec
sub
bound
inc
push
cmp
push
push
mov
inc
sub
adc
ret
mov
mov
aas
adc
fisubrs
nop
dec
push
sub
arpl
pop
pop
out
xchg
mov
scas
fadds
push
or
aas
lods
out
mov
lret
jl
arpl
inc
add
pop
inc
in
je
stc
cli
aam
pop
cmpsb
mov
movsl
lret
ret
ret
test
movsb
cmp
cli
pop
push
cs
xchg
sbb
dec
imul
adc
loop
xchg
dec
adc
adc
fldt
mov
push
or
lods
and
jno
xchg
roll
aaa
loopne
incb
leave
jne
mov
sar
pop
stos
shl
xchg
inc
xchg
sub
daa
fwait
dec
add
popa
loopne
jmp
into
mov
xlat
and
testl
aaa
dec
enter
lret
lcall
xchg
cmc
movsl
xchg
int3
rclb
push
test
fnstcw
xchg
pop
stos
loopne
mov
out
sbb
adc
xor
int
or
mul
fucomi
scas
dec
out
leave
cmp
loop
xchg
ficomps
lds
or
hlt
adc
insl
gs
and
fucomip
push
push
cwtl
push
pop
lods
adc
dec
iret
add
jnp
and
pop
xor
and
cmp
adc
jmp
ss
das
push
outsb
bound
xor
push
xchg
lcall
push
xor
cmpsl
adc
dec
lock
aaa
xchg
and
movntq
lea
int
sub
sub
enter
inc
mov
mov
mov
cmc
cmp
fiadds
lret
test
outsl
lret
mov
inc
mov
rcrl
xchg
sahf
dec
cmp
enter
xor
test
cmpb
flds
mov
adcl
enter
jae
mov
test
mov
fidivrl
loope
cld
inc
add
mov
jbe
std
test
mov
mov
sahf
or
shrl
aad
rorl
push
sbb
sbb
insb
pop
in
sbb
test
andl
add
and
pop
jns
orb
xor
xchg
fnstcw
data16
aam
enter
lret
pop
mov
mov
xor
and
xor
pop
and
ss
fimuls
push
gs
cmp
jbe
mov
sub
es
lret
dec
xchg
pop
icebp
pop
jge
int
loopne
cmpsb
xchg
pop
in
adc
shrb
adc
xchg
pop
neg
jecxz
pop
out
icebp
fldl
addr16
in
lods
pop
fpatan
dec
dec
xchg
dec
and
adc
das
rorl
in
ret
pop
mov
mov
clc
iret
adc
subb
push
adc
pop
cmpsl
and
lea
pop
iret
and
in
outsl
stos
xchg
adc
in
xor
xchg
enter
icebp
mov
sbb
test
or
mov
mov
jecxz
and
or
cmp
nop
add
push
xor
loope
push
pop
fidivrl
xchg
jl
inc
out
in
stos
jmp
sub
testl
pop
int
mov
mov
fsubrs
push
and
sti
push
adc
mov
jecxz
nop
lea
inc
js
cmp
xchg
xchg
hlt
jecxz
out
in
adc
pushf
cmp
dec
test
shrb
cmpsl
scas
xchg
stc
fistpl
icebp
mov
mov
fmul
dec
and
and
sub
addr16
and
push
adc
dec
push
jbe
dec
or
lea
cmp
fiadds
mov
mov
mulb
xlat
adc
sub
inc
imul
mov
pushf
cmpsb
add
clc
mov
jo
ja
inc
jg
out
jle
mov
ljmp
jnp
xchg
icebp
enter
mov
jno
inc
sbb
imul
in
xchg
in
in
xor
xchg
cmp
shrl
clc
cmc
lret
cmpb
addr16
lret
ficoml
or
sbb
les
fs
mov
add
xchg
push
inc
rolb
adc
lea
fnstcw
rcrb
xchg
stos
jbe
sbb
popf
jb
adc
in
dec
outsb
outsl
icebp
push
lcall
dec
sub
xor
cwtl
push
xor
test
inc
sbb
popf
mov
inc
test
xlat
test
mov
cmc
adc
cmpsb
test
or
jl
lcall
pop
popf
lcall
iret
mov
pop
test
add
roll
icebp
test
sbb
mov
lods
mov
cli
out
rcr
in
test
pushf
or
push
loop
lret
adc
repnz
xor
in
mov
pop
xlat
ret
sub
push
xchg
mov
leave
movsb
pop
jmp
sub
jmp
push
or
mov
inc
call
jns
sbb
sub
mov
in
in
nop
test
dec
lea
daa
push
mov
sahf
jecxz
adc
push
push
mov
or
clc
mov
jae
enter
aad
adc
mov
divb
xchg
je
push
loopne
arpl
pop
test
stos
popa
test
pop
les
hlt
push
mov
pop
push
enter
sbb
pop
jmp
xor
ret
data16
xor
jns
push
jmp
scas
ja
subb
in
mov
stos
rcrb
sbb
add
or
adc
rorl
jne
add
insl
push
sub
in
std
adc
cmp
out
popf
lret
rcrb
inc
jmp
sahf
cmpsl
cs
out
int
and
jb
or
testb
int3
mov
dec
cmp
lods
cwtl
fidivrl
push
push
rol
jle
mov
mov
shrb
sbb
lods
bound
sbb
dec
adc
push
aaa
push
addr16
dec
sub
repnz
jne
pop
in
pusha
arpl
leave
push
mov
bound
mov
cwtl
dec
inc
jecxz
adc
push
push
push
testl
out
mov
sub
stc
ljmp
push
push
cld
inc
out
push
lea
fsubs
repnz
test
fcoms
mov
xchg
push
dec
mov
xchg
out
popf
ret
mov
xlat
mov
add
mov
mov
jecxz
pop
pop
jecxz
aad
xchg
mov
repz
cs
scas
fwait
push
das
jnp
sti
aaa
out
dec
jecxz
xchg
mov
pop
enter
fucomi
jo
leave
aam
in
mov
iret
xchg
sbb
jecxz
inc
movsb
cmc
bound
mov
inc
iret
or
xor
sahf
mov
lods
lret
cmp
mov
notl
mov
repz
movsb
mov
jge
sbb
sub
push
mov
xchg
inc
icebp
clc
pop
cmpsl
imul
push
dec
inc
jbe
sbb
cltd
jns
add
jl
enter
mov
stc
xor
jbe
inc
pop
cwtl
dec
xchg
push
pop
xor
scas
movsb
cmp
xchg
mov
mov
lcall
lret
mov
sbb
mov
pop
inc
test
and
xor
faddl
jbe
icebp
mov
testl
test
fmuls
pop
test
push
xlat
int3
xor
cmp
and
inc
in
cmp
test
or
xchg
mov
pop
sbb
and
sbb
sbb
dec
push
jl
jo
sub
fdivrl
lcall
sbb
ds
push
inc
lea
lret
xchg
cmp
mov
outsb
jge
popa
add
and
subl
pusha
mov
pop
and
fs
dec
leave
cmc
sbb
addr16
ss
fs
popa
shrl
sub
xor
jne
push
xchg
push
xor
sbb
mov
cmp
aam
or
add
push
pop
iret
ljmp
cmpsl
mov
out
cltd
fdivrs
push
mov
imul
cltd
cmpsb
inc
bound
dec
xor
push
push
pop
shlb
pop
aam
lds
inc
xchg
mov
jo
xchg
es
xchg
cmp
sbb
enter
es
cmpsb
in
mov
xor
dec
or
pop
cmpsl
or
push
sbb
icebp
jns
test
and
fdivl
sub
dec
mov
repz
pop
cmp
movsl
pslld
ds
rol
xchg
ljmp
mov
inc
sbb
pusha
cmp
stc
lahf
xchg
outsb
inc
out
rcrl
fldenv
xlat
pop
test
addr16
push
push
stc
loop
push
jge
mov
dec
cmp
dec
adc
push
adcl
pop
xor
mov
das
scas
jbe
inc
or
fimuls
shlb
pop
lret
sbb
and
mul
test
inc
lds
mov
repz
mov
clc
push
ret
xor
jnp
push
in
int
or
pop
push
push
ja
lods
inc
cmp
in
aaa
adc
imul
pop
add
pop
sbb
out
fwait
test
fisubrl
inc
aam
push
leave
fiadds
jno
je
aad
cld
jp
push
outsl
leave
xor
jg
in
push
lods
xor
pusha
cs
arpl
xchg
iret
pop
sbb
outsb
inc
sbbb
fcoms
ljmp
adc
mov
in
cmp
mov
lret
lds
bnd
mov
mov
xchg
and
cmp
jl
aas
sub
std
mov
xor
add
aas
mov
jmp
lret
push
inc
jbe
daa
out
or
mov
mov
int3
and
push
xor
or
imul
insb
in
in
in
pop
mov
out
sub
mov
xlat
fsubl
ret
lahf
ljmp
lahf
ss
sub
ret
cmp
shll
cmc
mov
xchg
mov
lret
scas
lods
divb
cmpsl
js
daa
into
lahf
test
mov
dec
push
sub
push
xchg
xchg
sbb
movsl
jg
adc
leave
push
jne
adc
sub
stos
add
xchg
out
sbb
shl
push
loopne
aam
fsubp
and
out
mov
mov
inc
fdivr
adc
pushl
or
fstpl
dec
jmp
lret
cmpsw
pop
jb
pop
dec
int3
aaa
aad
fdivs
lret
shrl
jne
mov
fsub
and
pop
sub
mov
inc
rol
sbb
fst
jmp
xchg
pop
mov
inc
fwait
scas
push
or
dec
je
adc
inc
add
sbb
vshufpd
fwait
lds
jg
pop
lea
ds
cwtl
push
hlt
inc
clc
lds
mov
jmp
and
dec
in
out
fwait
dec
add
jge
pop
les
rcl
pusha
jno
ss
xchg
sbb
pop
or
xor
stc
or
xchg
xchg
lock
pop
lahf
scas
fadds
mov
lret
incb
xchg
mov
sbb
clc
and
push
mov
xor
xor
mov
neg
pop
clc
test
hlt
lods
and
add
cmp
iret
xchg
mov
data16
cmp
sarb
sbb
shll
add
ljmp
gs
dec
leave
dec
scas
in
xchg
popa
aas
sbb
cmc
mov
mov
add
push
inc
lahf
pop
std
aad
xor
fsubl
push
cwtd
mov
dec
dec
fldcw
movsb
ret
ret
sbb
notl
call
inc
inc
das
divb
imul
xor
test
or
addr16
subl
sub
add
dec
push
push
mov
addl
loopne
xchg
and
xchg
xchg
mov
sub
stc
cmp
mov
gs
and
xchg
xadd
imul
pop
testl
push
and
clc
pop
and
fcoml
jge
sub
loop
jge
pop
repz
sub
jg
xchg
repnz
push
jae
adc
cmp
add
or
ret
pop
mov
xchg
subl
cs
fldl
test
shrb
mov
and
mov
cmpsb
adc
sbb
shlb
call
push
aaa
js
lcall
jae
dec
mov
push
into
push
out
mov
dec
movsl
fmul
sbb
mov
repz
add
pop
xchg
pop
sub
in
sbb
sahf
or
arpl
negb
sub
aas
xchg
pop
ja
or
add
dec
cmpsb
ficompl
mov
xor
adc
xor
mov
xor
pushl
xlat
pop
pop
adc
pop
cmp
mov
movb
aam
cmpsb
ja
add
adc
ljmp
xchg
push
bound
dec
daa
push
clc
out
repz
dec
into
fstps
push
ja
aad
adc
stos
cmc
inc
addl
push
movsl
sub
add
pop
jge
adc
rorl
les
arpl
or
stc
pushf
add
mov
push
bound
mov
sahf
push
scas
or
sub
cli
aaa
cld
push
rcr
adc
add
out
hlt
jns
cmpb
jmp
movsb
xchg
fwait
dec
sti
sahf
push
mov
cli
mov
pop
fisubl
shll
jle
lret
outsb
xor
adc
ror
inc
jns
fdiv
sbb
shll
dec
jns
rol
push
mov
push
jmp
cld
sahf
lods
mov
and
nop
sahf
or
insb
jno
cmp
daa
dec
int3
xor
adc
push
cmp
push
fnstsw
mov
aas
icebp
lret
js
out
mov
push
mov
bound
xchg
inc
push
xor
inc
xchg
nop
pusha
lods
push
push
lock
aad
sbb
mov
frstor
mov
je
imul
push
xor
insb
mov
xchg
pushf
sahf
or
daa
or
sbb
push
xchg
cmp
xchg
sarb
mov
sbb
cmpsl
leave
push
push
mov
pop
dec
test
push
push
push
cmp
fadds
adc
mov
imul
fs
bound
scas
or
mov
fisubs
mov
xchg
sbb
add
lahf
dec
jns
fnstsw
cli
push
gs
or
movsl
xor
loop
enter
mov
mov
decb
pop
pop
cmp
or
movsl
adc
mov
mov
sub
mov
fstpt
stos
cmp
cltd
ja
je
cld
cs
sbb
movsl
jo
xor
sbb
mov
or
mov
and
sarl
push
ret
mov
cmp
jno
cwtl
jbe
aad
xchg
add
push
and
sub
movsl
in
xor
sti
xor
out
push
insl
ljmp
mov
or
pop
rcrl
hlt
outsb
jp
cmp
inc
popl
xor
aas
test
inc
and
lea
scas
sub
lds
mov
cltd
adcb
mov
add
mov
ja
scas
inc
or
mov
add
adc
jg
jg
fbstp
rorb
in
jb
push
dec
or
mov
inc
add
jb
cmp
sbb
daa
push
xchg
ret
push
xor
rcll
loopne
pop
push
push
inc
push
push
mov
aad
out
mov
xor
cmp
cld
push
cwtl
xchg
jg,pt
pop
je
bound
imul
in
stos
and
xchg
adc
nop
mov
loope
xchg
fwait
out
hlt
xor
or
sarb
insb
pop
lock
jecxz
jecxz
stos
xchg
dec
pmulhuw
mov
neg
adc
xchg
adc
pop
lret
dec
jecxz
dec
mov
test
and
add
rcr
add
ja
pop
mov
push
sub
aad
loope
sahf
lods
xchg
jno
sbb
cmp
mov
insb
popf
pop
dec
mov
dec
aam
js
test
imul
out
xchg
popa
xchg
add
or
lcall
mov
add
shrb
popa
xchg
mov
test
jmp
outsl
adc
xorb
pop
mov
out
mov
jmp
mov
push
out
push
sti
jns
mov
mov
pop
jecxz
cmp
jb
cmpsb
inc
pop
je
ficoml
sbb
sbb
xor
fildll
push
push
imul
pushf
ja
pop
fstpl
jo
lret
pop
jecxz
push
enter
call
jl
pop
add
movl
mov
mov
pop
add
dec
pop
sub
jg
add
push
data16
sub
add
push
cmp
pop
cmp
inc
xlat
sbb
jge
popa
xchg
sub
imul
add
imul
xchg
jg
add
xor
scas
mov
mov
lret
cli
pop
test
and
shr
cmp
mov
jmp
add
imul
jb
test
sub
push
popl
lret
cltd
bound
dec
inc
jns
adc
dec
dec
mov
lret
popf
xchg
frstor
xchg
fcmovnbe
hlt
xor
outsl
adcl
out
fisubs
les
xchg
popa
or
fwait
mov
popf
push
and
jns
dec
and
andl
or
movsb
xchg
sbb
lret
data16
daa
xchg
cmp
fcmovnbe
fimuls
dec
orl
movsl
sbb
mov
sub
jle
pushf
push
mov
cs
xchg
js
popf
pop
cmp
sbb
lcall
inc
push
aad
sbb
int
push
sbb
repnz
es
dec
lea
loopne
ror
inc
lcall
push
lds
addr16
outsb
pusha
ljmp
rcrl
sbb
fdivl
loope
adc
arpl
das
lods
push
hlt
div
sbb
adc
xchg
mov
ljmp
cmp
adc
repz
fistpll
mov
fiaddl
mov
pop
rcr
fnsave
push
popa
pop
mov
cmp
jb
xchg
xchg
inc
nop
or
cmp
sub
dec
ljmp
cmc
sbb
pop
aas
add
sbbb
pop
in
shll
cmp
ss
and
mov
call
mov
xchg
pusha
mov
and
sub
ret
pop
sub
adc
dec
cli
jbe
imul
mov
jecxz
pop
sub
pop
cmpsb
loopne
mov
cs
mov
mov
setl
mov
imul
adc
push
je
aad
lods
sahf
cmp
mov
sbb
in
mov
adc
stc
mov
push
out
mov
and
ljmp
pusha
aam
not
mov
data16
dec
filds
jle
in
out
jecxz
imul
sub
push
stos
lahf
scas
jmp
dec
cmp
push
mov
push
pop
jne
pop
imul
add
mov
fadd
sti
mov
shll
gs
adc
xchg
jns
or
arpl
and
adc
lret
xchg
test
pop
jg
adcl
dec
cmc
jnp
jl
roll
stos
adc
jnp
cld
jg
or
imul
jge
pop
lcall
ljmp
and
dec
xlat
sbb
int3
sub
inc
ss
imul
fsts
rcll
jns
mov
jns
in
mov
fnsave
call
mov
jnp
outsb
push
outsb
dec
repnz
fistpll
enter
jl
and
in
int3
nop
lock
mov
insl
xchg
mov
mov
jle
cmp
out
sahf
dec
movsl
in
adc
adc
mov
jnp
or
add
or
popf
pop
scas
jl
decl
pop
sbb
out
sbb
fdivl
lcall
nop
cs
adc
lea
in
sub
mov
jb
test
xchg
sbbb
mov
sbb
arpl
adc
inc
mov
mov
fdivrl
and
push
loopne
lcall
enter
jae
ja
sti
out
aaa
pushf
clc
cmpsl
sbb
add
push
jno
packsswb
xchg
orb
imul
inc
xor
shlb
pop
icebp
pusha
das
sub
into
sub
mov
fcmovbe
add
pop
outsb
add
test
and
lahf
dec
inc
mov
daa
and
cmp
mov
or
ret
arpl
sbb
pop
insl
scas
in
outsb
push
cmpsl
mov
add
ffree
addb
xchg
push
mov
dec
dec
lcall
fld
add
mov
hlt
test
hlt
addr16
roll
js
jns
mov
aad
hlt
inc
sbb
mov
mov
or
and
push
test
scas
xchg
outsl
mov
mov
inc
jno
lret
jp
aad
js
leave
popf
sbb
insl
fs
sbb
pop
and
jge
lock
cmpsl
xchg
outsb
hlt
leave
pusha
sub
into
xor
pop
arpl
push
pusha
jo
pop
jp
cmc
outsl
mov
gs
out
data16
xchg
or
into
mov
jb
xchg
pop
outsb
lret
inc
sbb
adc
mov
loope
cwtl
ljmp
cmpsl
out
xchg
jo
xchg
rcl
shlb
or
mov
push
aas
xor
or
lock
xchg
cmp
outsl
or
pop
movsl
pop
shlb
js
int
inc
push
sbb
mov
sub
jg
mov
mov
mov
pop
xor
add
pop
sbb
int
int
inc
jp
mov
cld
pop
scas
sbb
je
int3
cld
shrl
xor
dec
cmpsb
ror
lcall
mov
inc
pop
push
in
idivl
into
gs
out
sbb
jl
imul
popa
cmpsb
sub
mov
pop
and
pop
xchg
stos
and
inc
xchg
xor
fdivrl
xchg
fists
ss
cmp
sub
sub
sbb
cltd
in
dec
pop
adc
addr16
cmc
jp
mov
xor
mov
pop
call
add
jae
shrb
jl
fsub
enter
in
sbb
shll
sub
or
sbb
or
test
ret
lds
xchg
ror
insl
push
lods
shrb
xor
jns
nop
in
jnp
adc
sbb
xchg
imul
lods
fs
jne
push
or
or
cmp
sbb
out
dec
in
mov
sbb
push
xor
pop
incb
out
sbb
jp
enter
in
xor
les
repz
sub
out
mov
jp
jno
aam
loop,pn
inc
adc
adc
in
add
jns
mov
inc
xor
mov
jg
movsl
push
es
out
sbb
mov
jnp,pn
dec
nop
jl
mov
push
cmc
pop
addr16
dec
test
xor
and
rorl
outsb
pop
in
in
cmc
jnp
shll
mov
xor
lahf
add
sub
mov
test
push
repnz
adc
jmp
cmp
les
insl
aad
jl
jo
pop
xchg
jle
sqrtps
dec
sub
iret
mov
mov
sub
lods
pop
mov
adcb
insb
xchg
fistl
adc
in
jne
leave
mov
cwtl
test
pop
cmp
idivb
lret
lret
scas
stc
jbe
orl
inc
dec
dec
sbb
mov
out
ret
repz
sub
pop
xchg
sbb
in
xchg
mov
lcall
ret
out
xchg
in
push
and
adc
stos
mov
into
xchg
ss
mov
xchg
test
mov
ss
pop
loopne
dec
out
and
or
out
xor
fiaddl
or
push
scas
xchg
xchg
sti
fbld
inc
mov
clc
push
jnp
stc
repnz
and
mov
jmp
gs
dec
mov
shr
cmpsl
mov
insl
or
sub
xchg
inc
dec
mov
icebp
adc
iret
inc
jbe
mov
scas
arpl
xchg
jae
sbb
or
push
mov
push
push
pop
mov
cmp
add
out
lret
cltd
pop
rorl
mov
add
divb
movsb
xlat
mov
cltd
mov
xlat
test
leave
and
jecxz
jg
fiadds
sub
jp
cmpps
scas
jne
mov
add
add
xchg
xor
add
aas
addl
dec
pushf
sub
daa
cmpb
inc
fiadds
or
je
in
pop
outsl
mov
mov
inc
adc
mov
sub
cmp
cmp
stos
inc
dec
dec
bound
loope
punpckhdq
add
sbb
addb
fdivrs
lods
jecxz
fucom
shll
push
xor
mov
cltd
adc
xchg
jns
cld
mov
stc
inc
mov
in
sub
cmpsl
push
and
mov
xchg
test
cmp
mov
filds
mov
jecxz
stos
cmp
fbstp
pop
popf
mov
xchg
mov
adc
dec
loopne
or
loopew,pn
xchg
sbb
add
mov
mov
ret
shlb
jns
mov
pop
add
dec
inc
push
xor
fcoml
loope
sub
arpl
je
mov
loop
int
pop
sub
adc
push
pop
sahf
jecxz
mov
lds
cmp
mov
pusha
xchg
mov
mov
cltd
int3
jbe
sub
gs
daa
mov
loope
adc
sahf
mov
hlt
idiv
loop
cmp
repz
leave
repz
je
and
xor
jle
push
popf
loope
cs
xorl
out
int
stc
mov
dec
push
mov
lds
arpl
sbb
in
aas
pushf
jbe
int3
enter
push
hlt
rolb
jne
sbb
mov
mov
mov
imul
sbb
pop
into
mov
fs
icebp
popa
mov
cmp
sbb
jle
das
pop
fistl
and
adcl
mov
lds
sti
inc
xchg
cmpsl
mov
sahf
cmpsl
nop
divb
stos
inc
je
and
insb
fidivrl
push
out
aad
jnp
lock
mov
mov
or
fildll
jg
or
inc
rolb
add
lret
xchg
add
mov
xor
pop
push
es
stc
lcall
fcompl
in
popa
xor
jg
add
or
scas
mov
pop
loop
fbstp
cmc
lret
dec
sub
push
push
icebp
mov
inc
sbb
mov
and
mov
out
mov
dec
push
jmp
jg
divl
mov
jne,pn
xchg
push
inc
dec
movsb
mov
sub
in
xchg
loope
iret
mov
xchg
in
fwait
cmc
lret
enter
test
adc
lods
clc
aam
mov
roll
shlb
aaa
cmp
cmpsb
subl
and
sub
dec
dec
adc
arpl
mov
loop
xchg
cmp
lahf
sahf
sbb
aaa
xor
stc
jg
std
cli
sbb
xchg
leave
ret
out
mov
scas
xor
out
int3
ds
xchg
mov
lahf
mov
mov
insb
and
cmp
loope
rorl
pop
repnz
pop
iret
add
pop
aam
aas
inc
shll
jo
adc
adc
mov
js
add
insb
lcall
push
add
enter
outsb
mov
iret
out
addr16
and
sahf
insb
mov
repnz
push
push
push
adc
add
push
xchg
mov
mulb
in
and
aaa
in
out
jae
cli
and
mov
xor
imul
pusha
out
mull
add
nop
sbbl
jecxz
fisubrl
jno
pop
nop
std
jno
std
push
jge
or
xor
xor
mov
inc
adc
std
cs
add
shll
inc
out
sub
call
sub
sbb
out
xor
data16
jmp
jns
cmp
add
sti
inc
pop
sub
fstps
in
imul
add
int3
test
stc
xchg
lahf
icebp
cli
push
fcoms
jg
ret
ret
dec
dec
mov
pop
mov
and
sti
xor
or
insb
dec
addr16
mov
mov
imul
lods
int3
add
and
mov
push
mov
in
in
test
stos
lds
mov
sbb
jmp
sarb
popa
and
and
lret
outsl
or
xchg
xchg
cwtl
sahf
mov
fidivrs
fisubrl
cwtl
insb
and
adc
or
popf
or
test
xor
xchg
loopne
jo
mov
jne
push
pop
fistpl
add
sbb
push
lret
inc
in
stos
pop
sub
les
jl
pusha
test
cmpsb
aaa
fdiv
mov
push
sub
pop
cmc
stc
mov
mov
mov
jnp
mov
sarl
push
or
push
mov
mov
ljmp
shlb
sarb
cmp
int3
mov
mov
lret
push
clc
mov
inc
xchg
ja
sub
add
stc
icebp
add
cmp
icebp
in
pop
mov
mov
and
xor
cmpsb
int
jnp
pop
mov
in
sbb
push
add
and
mov
cmc
sarb
fidivl
xor
test
jp
and
pusha
pop
xor
mov
in
test
mov
nop
push
add
xchg
push
push
cmp
idiv
ljmp
adc
fs
sarl
xchg
pushf
dec
or
outsl
or
ret
lahf
dec
frstor
push
cmpl
cmp
lea
or
dec
test
sahf
dec
mov
xchg
in
cmp
lahf
fisttpl
jmp
mov
imul
cmpsb
dec
cmp
out
jb
xor
jne
jle
jecxz
pop
pop
rcr
rclb
xor
js
jnp
in
add
sub
inc
jmp
xchg
xchg
jmp
cmpsb
xchg
or
dec
add
adc
pop
mov
push
and
out
ficomps
loope
mov
lcall
gs
cmpl
lods
mov
cmpsl
mov
mov
mov
fstpl
rclb
lods
popf
mov
out
sarl
xor
xor
adc
lret
jecxz
xchg
push
push
movsl
mov
in
aas
das
std
test
lcall
push
cmp
hlt
sub
dec
xor
ror
out
and
shll
push
out
inc
and
xor
push
adc
jne
and
lahf
sub
cmovnp
lock
mov
or
mov
cltd
fs
lcall
jns
mov
out
pop
jge
mov
aam
sbb
out
popf
xor
lcall
scas
lods
mov
cmp
fmuls
xchg
sbb
mov
push
push
aaa
out
test
ret
repz
mov
ret
mov
xchg
mov
push
popf
lret
iret
dec
cmp
cmp
out
aaa
push
jne
push
adc
xchg
xchg
mov
imul
push
fsub
fucomp
pop
outsl
or
mov
add
sub
sub
sub
stos
adc
mov
pop
push
jae
int3
mov
dec
cmpl
mov
mov
test
add
mov
xor
mov
adc
jge
xchg
out
mov
popw
sbb
jg
sahf
pop
adc
lds
rol
mov
ret
sahf
or
sbb
je
jns
adc
sbb
xchg
add
and
lahf
pop
mov
sbb
cli
jo
sahf
pushf
cmpsl
mov
xchg
lret
fcmovnb
movsb
cmp
pop
jns
sub
divl
xchg
aaa
jge
cmpsb
jle
sti
popa
dec
xor
rorb
cli
jle
outsb
pop
cmp
hlt
leave
inc
test
cld
xor
pop
xor
divb
test
add
pop
add
sbb
je
add
cwtl
xor
mov
mov
mov
sub
sti
shrl
cwtl
lock
and
cmpsl
dec
hlt
cli
scas
in
push
outsb
mov
call
xchg
push
fdiv
test
xchg
test
push
ljmp
xor
in
hlt
icebp
dec
out
add
out
inc
dec
arpl
pop
adc
addl
lahf
sarb
xchg
es
jb
scas
inc
test
jecxz
jo
std
fs
std
cli
sbb
mov
mov
and
mov
dec
xor
pop
fnstsw
outsl
js
or
js
mov
dec
xor
icebp
cmp
inc
lods
pop
dec
xor
fyl2xp1
mov
cmp
jae
add
addb
call
loop
jnp
inc
inc
pop
push
in
mov
sar
ret
mov
leave
movsb
xchg
mov
repz
rcll
lods
mov
or
idivl
popa
sarl
mov
mov
js
mov
shrl
out
xor
push
jbe
fisttpll
sub
js
imul
pop
test
mov
jge
loop
popl
sbb
sbb
mov
or
cli
cltd
mov
cwtl
and
inc
dec
mov
inc
pop
lods
jns
mov
push
push
push
sbb
lret
and
cmp
jmp
mov
jge
mov
jge
inc
test
cmp
je
imul
stos
xchg
pop
mov
scas
sub
mov
leave
iret
and
mov
scas
cld
push
mul
divb
mov
pop
pop
cmpsl
mov
arpl
das
sub
in
call
pop
out
push
pusha
aam
jno
cmp
lea
xchg
pop
inc
repnz
push
jmp
jg
jb
jmp
popf
xor
or
movsl
add
xor
fwait
cwtl
imulb
push
jg
mov
adc
push
mov
inc
mov
insl
mov
rcrb
jmp
inc
mov
dec
sbb
jo,pn
add
lcall
shrl
divb
dec
dec
aaa
fildl
sub
in
bound
test
or
cmp
sub
push
dec
sarl
pop
insb
mov
inc
xchg
repz
push
mov
push
in
enter
adc
mov
repz
scas
test
test
or
mov
jle
xchg
mov
ficompl
fcomps
jno
cld
and
cmpsb
insl
lock
pop
pop
nop
lret
xor
int3
subb
fiaddl
mov
test
jns
cmp
sbb
pop
cs
push
and
cmpb
and
cmp
cmpsb
ljmp
stos
daa
ret
or
lods
dec
mov
clc
test
bound
sbb
nop
inc
popf
es
or
dec
inc
in
popf
sub
xchg
sbb
dec
cmp
gs
sub
sbb
addr16
je
hlt
mov
js
adc
push
cmp
and
stc
inc
mov
cmp
cld
out
stc
cmp
fistl
out
push
pop
nop
inc
pop
bnd
repnz
in
sub
xchg
mov
mov
xchg
push
pop
push
sti
xor
nop
mov
dec
lea
int3
sub
jge
push
outsb
stos
pop
popf
jmp
pop
fldenv
loope
mov
pop
fstp
lret
fs
into
sarl
sbb
mov
fmuls
cwtl
mov
cmpsb
pop
outsb
fucomip
into
daa
add
imul
pusha
fsts
or
jge
lahf
mov
std
icebp
lret
mov
mov
aaa
adc
mov
lods
sahf
mov
lahf
add
jg
cmpsb
jmp
push
out
call
pop
lret
mov
or
iret
cwtl
pop
out
ljmp
or
aad
fdivr
adc
and
pop
xchg
dec
push
loop
out
pop
add
lcall
cmc
shll
xchg
pop
mov
mov
lds
inc
sbb
cmc
adc
jmp
daa
repnz
sub
sub
mov
pop
dec
and
cmp
insl
cmp
sub
and
mov
jl
rclb
jne
aaa
std
mov
mov
sub
rorb
js
out
in
outsb
insl
and
inc
adc
pop
ds
or
lods
mov
ss
nop
jg
data16
xchg
mov
inc
mov
lcall
cmc
jns
lods
fwait
stos
nop
mov
push
into
ljmp
sti
dec
icebp
add
lods
jne
rclb
push
xchg
scas
arpl
and
cmc
ljmp
jp
push
pop
mov
ror
xlat
mov
cltd
mov
jno
stos
add
dec
mov
xchg
call
loop
sahf
jmp
xchg
bswap
xor
decl
push
pop
mov
into
jge
pop
mov
rol
test
xchg
xlat
hlt
sbb
push
mov
rcr
in
movsl
mov
or
inc
xor
adc
decl
out
lahf
and
scas
inc
in
lock
jg
in
das
into
lods
jl
int
mov
xchg
out
xchg
dec
mov
inc
dec
negb
aad
push
negb
cmpsb
fisttps
ja
out
sbb
xor
cmp
call
ljmp
add
add
pop
std
mov
push
dec
or
bound
and
movsl
sahf
dec
aam
aas
pop
or
cmp
adc
mov
int
cld
jl
jo
xor
cmpsl
repz
out
sbb
xchg
fidivs
std
adc
push
stos
stc
out
mov
aaa
cmp
popa
mov
dec
enter
xor
mov
cli
data16
inc
test
adc
in
adc
sub
jg
clc
xlat
or
sahf
mov
insb
pop
cmp
push
data16
dec
ds
pop
scas
push
cmpsb
jle
mov
xchg
inc
pop
subb
shl
sub
add
pop
test
sbb
xorb
xor
fs
gs
rcrb
jne
int3
or
int3
fidivl
xor
andl
in
lret
rolb
ja
mov
sub
lret
ret
push
into
lock
insl
imul
sub
xchg
lret
pop
fcomps
mov
pop
cmp
test
and
dec
jl
mov
hlt
jmp
add
stos
pop
inc
mov
repz
and
test
mov
push
fists
xchg
xchg
or
mov
lcall
xchg
jmp
pop
test
jp
jge
cmc
movsb
jmp
ret
jl
jle
lcall
dec
dec
je
push
aam
push
and
cmp
add
xchg
pop
rolb
or
lcall
jo
outsl
es
add
inc
roll
scas
cmp
cli
les
adc
and
cmp
mov
xor
in
inc
mov
cwtl
scas
test
mov
popf
pop
cmp
sbb
push
shll
and
sbb
mov
dec
imull
repnz
pop
dec
mov
dec
fsubrs
out
mov
rorb
popf
adc
cmp
popf
mov
xchg
sbb
out
lock
loope
ffreep
ss
xor
insl
cmp
scas
inc
sub
inc
or
loopne
enter
ds
mov
jns
xor
inc
aas
or
sub
push
dec
imul
jno
pop
pusha
sub
xor
aas
dec
mov
xor
fwait
jp
fidivrl
push
rorb
or
dec
in
ljmp
in
jbe
stos
pop
adc
push
sub
xchg
data16
mov
pushf
add
pop
popa
testl
dec
out
push
add
scas
or
and
add
int
sbb
insl
mov
ret
insb
ret
mov
cltd
scas
lock
xchg
ret
jns
pop
cmp
pop
push
test
xchg
das
cli
out
cmp
mov
pop
sub
rcl
sub
fcomip
sub
push
dec
ds
int3
ficompl
out
mov
leave
cmp
push
add
sahf
push
stos
jb
fstpt
fadds
mov
mov
stos
imul
aad
adc
push
lds
imul
out
pop
xor
or
pop
ss
jae
mov
ljmp
inc
loop
daa
dec
test
subb
mov
into
push
jae
ljmp
andb
js
movsl
and
pusha
inc
lahf
rcrl
jge
pop
add
popa
pop
cmp
out
repz
dec
out
call
sbb
cmpsb
mov
jecxz
cmovge
cmpsb
leave
imul
cs
inc
push
sahf
out
ja
mov
std
cmp
push
xlat
jmp
or
mov
cmp
mov
cld
pop
add
dec
xorl
rclb
pushf
outsl
mov
push
int
pop
mov
stos
inc
ljmp
jnp
pop
int
inc
jbe
xchg
jno
push
mov
fldl
dec
les
fcoml
fcompl
xor
lods
ret
push
mov
mov
or
iret
xchg
fwait
call
sbb
lcall
xchg
mov
out
cs
cmp
mov
je
adc
cmp
push
lahf
js
mov
movl
call
push
or
mov
scas
xor
frstor
nop
shl
push
ss
sub
pop
sbb
or
xor
xor
cld
xchg
sbb
fisubs
insl
jp
jl
test
fidivrs
jo
and
dec
add
or
sahf
fists
call
insb
in
ds
pop
xchg
jbe
leave
jnp
lcall
test
mov
mov
mov
dec
push
sti
lret
lods
inc
movsb
inc
test
sbb
push
test
outsl
cld
xchg
xchg
ss
out
or
dec
clc
mov
push
cmp
mov
jmp
dec
and
cmp
lahf
popf
je
add
fdivrl
out
les
ret
roll
xchg
or
push
or
and
jl
mov
pop
clc
daa
cmpsb
jnp
sub
ret
mov
or
ffreep
sbb
xchg
push
sub
add
bound
push
fwait
inc
lds
jb
fnstcw
push
sub
sbb
mov
fcmovu
inc
dec
insb
xor
sbb
and
xchg
xchg
mov
pop
pop
dec
mov
sbb
mov
lcall
ret
sub
pop
pop
mov
sahf
fdivrs
outsb
pushl
cmp
xchg
mov
ret
cmp
in
mov
testl
mov
inc
cwtl
sahf
sarl
bound
cmpsl
lcall
shrb
mov
dec
dec
lahf
fmuls
mov
sub
pop
lods
cs
add
inc
xchg
jp
lahf
sub
roll
xlat
daa
sbb
xchg
fstl
jbe
push
add
daa
enter
clc
les
sub
push
mov
cs
fadd
dec
sbb
jge
xchg
add
push
lds
mov
bound
dec
jmp
out
out
lcall
movsl
pop
shl
das
push
pop
test
jmp
ret
enter
fcomi
arpl
push
aam
sub
cmpsl
inc
ss
into
std
out
jle
fmul
aaa
push
fsubs
int3
mov
add
es
fisubl
push
into
mov
and
xchg
pop
dec
insb
loop
adc
sbb
adc
sbb
scas
dec
mov
inc
test
adc
xor
popf
lds
push
pop
pop
pusha
sub
inc
fmul
outsb
pop
loope
cmp
push
enter
out
add
scas
iret
jg
jo
xchg
or
fwait
push
jl
push
addr16
jno
push
mov
dec
lahf
add
dec
sub
pop
cmp
aam
and
dec
stc
or
cld
es
int3
les
aaa
mov
ds
adc
fnstenv
xor
rcr
aad
cmp
fstpt
dec
stc
lds
mov
sbb
dec
dec
imul
fnsetpm(287
xchg
call
aas
push
sub
enter
fidivs
ds
push
push
jp
dec
adc
mov
adc
sub
insb
pop
push
outsl
loope
mov
mov
dec
call
sbb
cmc
popf
fimull
cmp
cltd
repnz
ret
cmp
nop
mull
shrl
inc
addl
rorl
inc
pop
stos
mov
lahf
mov
movsb
shl
shlb
push
pusha
cmpsb
push
test
jae
popa
movsb
test
push
mov
jmp
jb
and
bound
adc
cmp
fildll
js
and
dec
cmp
in
and
sbb
xor
pop
xor
push
pop
mov
ljmp
lock
adc
lods
adc
adcb
push
mov
ret
xchg
mov
in
leave
lahf
sbb
xor
sub
cmc
dec
jnp
mov
mov
inc
dec
xor
lods
dec
mov
pop
cmp
lea
ss
loop
jno
ret
fimull
cmp
stos
lods
insb
jb
icebp
adcb
popa
ffreep
sti
or
movsl
jl
je
aas
imul
clc
int3
inc
mov
sub
lahf
jnp
sbb
hlt
push
mov
cs
test
leave
lahf
sub
fwait
mov
lret
aaa
mov
xchg
pusha
ss
daa
lock
push
fisubs
pop
std
mov
addr16
nop
sar
cmc
push
push
push
aad
sub
mov
mov
dec
xchg
xchg
cld
adc
sarl
or
mov
es
cmpb
add
add
mov
mov
in
adcb
push
imul
xor
fisttps
aad
inc
js
adc
and
xchg
xor
cmpxchg
cmpsb
icebp
in
or
in
gs
cmp
loop
xor
xor
dec
mov
cld
scas
pop
lods
jbe
mov
mov
sub
aaa
insb
push
test
mov
lods
jge
sti
mov
mov
jne
andl
inc
or
xchg
sub
xchg
add
dec
cmpsb
lcall
inc
cmp
push
addr16
fdivl
in
lahf
sub
and
pop
aam
ljmp
arpl
mov
and
lret
or
aaa
dec
mov
or
push
xchg
push
out
nop
mov
xchg
mov
pop
add
or
and
shll
or
test
gs
inc
mov
xchg
lahf
rcrl
imul
daa
cld
bound
test
adc
add
xor
shl
or
fisubrs
gs
cmp
insl
scas
pop
cmp
sbb
ja
mov
je
icebp
sub
mov
adc
aad
imul
in
insl
mov
fdiv
leave
addr16
mov
mov
mov
mov
mov
xchg
sub
xor
inc
shlb
cmp
out
jnp
mov
pop
imul
add
inc
mov
xchg
daa
outsl
in
dec
int3
movsb
stc
scas
loope
gs
stos
imul
int3
pop
push
repz
jmp
test
cld
sarb
nop
stos
add
add
test
dec
sub
jl
gs
push
dec
xor
leave
es
mov
popa
lret
xor
popf
adc
push
or
pop
and
push
in
fs
sarb
xorb
jo
push
mov
int
dec
mov
mov
aaa
mov
iret
roll
mov
lds
adc
cmp
push
add
test
pop
adcl
push
adc
pop
pop
inc
xor
ljmp
push
notl
test
insb
int
loopne
xchg
dec
sbb
adc
mov
jl
xlat
fstpt
pop
stos
movsl
bnd
scas
into
out
mov
mov
jp
and
loop
fldt
and
mov
xor
cmpb
ret
adc
add
dec
pushf
fiaddl
fisttps
ljmp
imul
push
lahf
adc
mov
ss
nop
fisubrs
inc
pop
cs
mov
fidivrl
pop
lock
fsub
shll
outsl
dec
imul
add
and
jecxz
lds
inc
pop
sbb
dec
lea
xchg
mov
shrb
mov
xor
sti
out
popa
push
sbb
lcall
and
jp,pn
leave
xchg
fwait
iret
psubusw
loope
dec
push
cmp
add
sarb
shrb
ret
or
dec
and
xor
mov
mov
clc
jge
lahf
rcrl
or
sbb
pop
sbb
mov
fdivl
int
pop
jp
stc
int3
loop
cmp
fnstenv
in
in
sbb
data16
insb
xchg
nop
add
inc
movsb
dec
lods
std
fdivr
into
dec
xor
fs
cli
cmc
mov
test
das
mov
popa
sub
std
fnstsw
ss
mov
ss
push
int3
incl
shll
inc
push
imul
jmp
inc
mov
mov
movsl
xchg
mov
jle
outsb
xchg
std
fsubs
gs
dec
add
dec
cmp
mov
jp
jge
push
xchg
inc
push
test
cmp
jne
mov
mov
pop
and
ljmp
cmp
adc
jb
xchg
and
dec
mov
pop
sub
insb
jg
and
pusha
cwtl
xor
jne
xorl
cmp
cltd
movl
pop
pushf
or
loopne
sub
lcall
fisubrl
dec
ja
sub
xchg
mov
xchg
push
sub
out
or
cmpl
cmp
jl
inc
push
jns
adc
inc
mov
adcl
push
add
shrb
fwait
push
imul
push
aam
pop
jae
das
aas
outsb
or
int3
scas
mov
cwtl
adc
stos
jp
pop
or
imul
lret
repnz
xchg
gs
mov
xor
jns
push
mov
dec
mov
or
bound
mov
jg
lock
or
sbb
lods
xchg
lret
fldcw
xlat
inc
mov
jmp
mov
mov
or
add
fsubl
pop
insb
shlb
adc
cltd
and
loope
mov
popa
pop
das
aad
shrl
adc
adc
aaa
sbb
scas
inc
sbb
xchg
je
push
pop
iret
push
xchg
adc
sub
mov
and
fisttpl
imul
and
nop
testb
or
lcall
ja
dec
jno
jae
test
ret
push
fwait
sub
push
or
fcomip
or
pop
sub
sti
pop
movsl
cmp
lret
mov
repnz
sbb
shl
inc
cmp
js
cmpsb
adc
cmp
lock
mov
in
sbb
rcrb
std
mov
orl
subl
bound
and
dec
mov
xchg
xor
je
xor
add
rcrb
mov
es
mov
and
stos
jne
sbb
dec
xlat
sti
aam
loopne
mov
mov
sub
test
leave
pop
dec
inc
rclb
xor
cmp
ljmp
mov
sbb
mov
int
jp
inc
mov
sub
inc
inc
scas
xor
mov
ss
and
inc
sbb
testl
cmp
sbb
imul
mov
ja
shll
and
test
dec
daa
dec
adc
dec
std
lcall
daa
mov
or
fimull
out
sbb
in
ret
mov
cmp
sbb
xlat
jo
lcall
mov
js
push
out
loopne
in
adc
cmp
stos
leave
mov
jle
sub
sbb
sbb
jecxz
mov
gs
cld
notl
mov
lahf
out
and
fcomi
cmc
pop
mov
in
mov
les
lcall
repnz
xchg
repnz
push
ret
pop
xchg
lea
popf
or
or
xor
jmp
rcr
push
inc
xchg
clc
icebp
mulb
ret
xchg
outsl
pop
sbb
inc
outsb
stos
movsb
jmp
xchg
mov
sti
inc
xlat
stos
test
pop
stos
into
in
add
lcall
notl
ss
sbb
loop
aad
out
sub
sbb
jmp
lret
jle
xchg
test
out
xchg
bnd
dec
cltd
xor
inc
movsb
cwtl
mov
dec
aam
dec
bound
jecxz
fdivrp
push
push
ret
addr16
daa
add
aam
sub
xlat
pop
sbb
inc
out
aaa
hlt
pop
mov
mov
nop
xchg
ljmp
add
repnz
mov
pushf
mov
fwait
scas
cmpsl
lea
jle
hlt
pop
in
test
int3
mov
pop
stc
xchg
ds
hlt
mov
es
adc
jmp
lock
inc
test
lahf
add
jmp
cmpl
sahf
mov
pop
aaa
in
lcall
inc
push
pop
sbb
push
shlb
lret
ja
stc
pop
mov
jbe
sbb
fcomi
out
test
lock
inc
addr16
scas
dec
xchg
dec
into
push
dec
lock
daa
cmp
and
nop
inc
inc
mov
mov
or
aaa
or
pop
or
sub
lds
fiaddl
imul
push
cmp
testl
out
push
rolb
mov
out
mov
xchg
aam
fsubr
jno
mov
xor
xorb
xchg
push
es
mov
lods
push
xchg
push
sbb
out
in
mov
scas
inc
bound
pop
mov
inc
sbb
jnp
ret
pop
int
lods
mov
add
dec
mov
imul
and
pop
and
mov
cld
adc
shlb
push
jbe
loop
push
arpl
std
rcl
mov
adc
test
push
aas
ds
mov
out
stos
mov
dec
ffree
mov
push
les
hlt
adc
cmp
aad
xchg
and
arpl
dec
jle
outsb
cmpl
mov
cmpsb
inc
lods
insl
cmp
aam
addb
xlat
cmp
jmp
add
bound
insl
xchg
push
or
sub
add
mov
fs
fnop
decl
in
mov
xchg
mov
sub
pop
sti
dec
inc
addr16
outsl
out
popa
mov
pop
and
imul
sbb
mov
jns
test
jg
or
std
mov
je
mov
ret
adc
push
daa
jnp
push
fimuls
loope
adcl
jg
popf
push
mov
fdivs
rorl
cli
xlat
jb
xchg
lret
mov
sbb
shlb
outsb
das
in
es
adc
mov
insb
pusha
mov
or
xor
mov
sub
ds
jnp
lahf
loopne
rolb
and
lea
jne
pop
lea
lds
fnstsw
insl
dec
aad
insl
fwait
popa
inc
cmp
rolb
fnsave
insb
mov
test
adc
push
dec
outsb
fwait
sbb
flds
lahf
pop
xchg
or
es
mov
das
and
jbe
enter
mov
ret
inc
mov
les
mov
push
jnp
lret
lret
xchg
and
push
push
movb
mov
mov
ficoml
cmpsb
repz
hlt
clc
pop
push
fistpll
dec
cmc
ss
lds
sub
jb
jns
add
cmp
rol
sub
pop
in
xor
xchg
sub
mov
jg
add
pop
pop
aam
sub
outsl
in
xor
or
es
mov
jmp
dec
push
lock
mov
sahf
daa
jl
mov
inc
mov
lock
insl
mov
sub
rcll
pop
in
stos
ret
adcl
movsb
shlb
cwtl
jo
mov
stos
in
add
xor
jg
sbb
cmp
sub
cmpsb
jge
cmp
push
cmp
pop
or
pop
ja
data16
adc
mov
movsb
sub
loopne
icebp
sbb
jge
mov
mov
xchg
stos
pop
add
aam
testl
cmpsl
dec
cmp
jmp
ds
les
mov
dec
sub
or
ret
jae
mov
lret
xchg
jb
loop
icebp
jp
add
cmc
sbbb
aas
in
push
mov
or
mov
pop
movsb
shrl
or
ja
jnp
repnz
movsl
idivl
jbe
push
cwtl
pop
int3
adc
push
shrl
sbb
lea
test
and
inc
mov
les
sbb
pop
out
stos
mov
pop
data16
std
xlat
fwait
or
jmp
mov
inc
add
imul
daa
sub
ljmp
jg
jmp
cltd
sbb
sub
cld
addr16
pop
rcrl
sbb
hlt
test
js
pop
aas
adc
xlat
mov
insl
out
data16
cmp
push
or
add
loop
push
scas
lahf
cli
rcr
and
pop
dec
mov
mov
addr16
fisubs
mov
cmp
pop
lods
pop
cwtl
lea
inc
mov
rclb
add
cmp
sbb
rorl
push
jge
cmpsl
sbb
rcrb
fst
mov
mov
cli
push
scas
push
cmp
mov
dec
popf
xor
lds
sbb
lds
pop
push
les
scas
or
cmp
cld
xchg
pusha
cmp
sub
sbb
int3
xchg
inc
mov
pop
sbb
adcb
ss
icebp
fdivr
sti
cltd
mov
jbe
test
mov
inc
push
aas
cmc
cli
cmp
in
aas
shlb
incb
imul
pop
add
mov
xchg
icebp
and
jno
sti
call
mov
scas
and
push
dec
cli
adc
jns
or
pop
dec
push
push
add
cmp
test
xchg
or
sub
mov
aaa
das
fisubl
dec
mov
dec
sbb
mov
pop
outsl
jb
lret
ss
mov
insl
push
mov
pop
scas
jge
in
add
filds
mov
inc
orl
pop
cld
push
leave
mov
inc
inc
or
out
gs
in
cmp
icebp
mov
jae
sbb
shll
mov
call
push
push
data16
sbb
arpl
inc
pop
fldt
scas
fildll
cwtl
pop
ret
enter
int3
mov
out
pop
lcall
xchg
cmp
int
and
sub
push
nop
fstpt
and
cs
int
lods
push
mov
or
jne
movsl
mov
push
popa
inc
ja
inc
inc
or
out
jno
nop
lea
sahf
nop
ficomps
push
add
jnp
inc
arpl
movsb
pop
pusha
push
iret
stos
ret
cmp
sbb
out
dec
mov
push
out
sarl
lret
mov
lods
pop
sbb
pop
xor
sbb
stos
insb
pop
sarl
mov
aas
jb
add
lds
rorl
cld
mov
mov
jecxz
out
inc
pop
pop
mov
addb
cmp
jmp
inc
inc
push
movsb
mov
xor
mov
bound
jb
testb
jg
and
pop
mov
daa
pop
jb
mov
mov
or
dec
jge
pop
jge
icebp
loop
cmp
cli
mov
lret
idivb
dec
ja
cmp
arpl
mov
and
sub
out
dec
in
out
dec
bnd
inc
ret
mov
jle
test
pusha
popf
inc
push
aaa
sti
pop
popa
mov
out
arpl
aaa
out
jne
clc
outsl
sti
cld
addb
dec
popa
subl
push
pop
dec
shlb
sub
sub
orb
nop
cmp
lea
cmp
xchg
xchg
mov
push
xor
push
xor
sub
mov
repz
loop
mov
imul
lea
rorb
les
mov
into
adc
sub
and
dec
mov
dec
pop
jnp
inc
repnz
jnp
xor
cmp
jge
int3
js
jmp
aam
sbb
xchg
mov
pop
sub
push
inc
dec
adc
out
ss
and
jl
lahf
lods
leave
xor
callw
int3
xor
ret
imul
lret
mov
cmp
sub
ret
fs
outsb
sti
xchg
fldl
pop
lods
aad
ret
subl
jae
inc
hlt
sbb
test
cmp
sbb
decl
xchg
adc
jle
pop
jbe
mov
imulb
cmpsb
pop
mov
xchg
jmp
ficoms
mov
cltd
jmp
jecxz
pop
les
and
cmc
js
jo
pop
cli
aam
mov
mov
mov
cmp
add
cmp
mov
add
mov
arpl
mov
pop
daa
cmpsl
jmp
aam
mov
push
cmpsl
adc
lods
insl
jae
mov
imul
pop
lret
lds
xchg
cmp
lock
pop
or
repnz
push
cld
mov
les
dec
jecxz
xchg
cmc
aas
insl
sbb
into
or
push
pop
repnz
and
mov
and
shll
or
mov
add
data16
pop
ss
dec
mov
je
inc
mov
imul
lahf
sub
mov
jne
in
dec
mov
and
cwtl
loop
pop
mov
bound
cwtl
push
in
outsl
push
and
jg
bnd
or
mov
cmp
sbb
push
gs
add
insl
hlt
jmp
xor
adc
test
inc
xchg
fstpl
into
repnz
jo
mov
mov
test
jl
add
jge
push
movsl
adc
stos
popl
dec
and
xchg
pop
push
xlat
ret
mov
rcll
idivb
enter
pop
icebp
push
mov
lret
push
into
fnsave
push
xchg
addr16
outsb
rcrl
das
enter
dec
mov
mov
and
in
push
dec
jg
push
adcb
sbb
movsl
and
xchg
add
cmp
insl
ds
pop
pop
or
test
add
out
inc
pop
int
mov
xchg
enter
xor
push
inc
out
repnz
jo
or
pop
cld
sbb
cmpsb
sub
adcl
cmp
jecxz
add
addb
in
mov
bound
pushf
and
cli
or
and
les
clc
stos
or
lds
aaa
xchg
int3
rcrl
shll
enter
scas
mov
pop
cld
xchg
xor
push
pop
les
stos
mov
shlb
mov
mov
movsl
mov
push
dec
scas
jne
std
mov
push
lock
scas
loop
std
ljmp
lds
xor
aas
outsb
mov
or
pop
fldenv
leave
pop
repz
dec
lea
xchg
fst
mov
or
test
imul
inc
jae
lret
jb
fs
fcmovne
test
cmp
dec
pop
sarb
scas
cmp
mov
xchg
sub
pop
test
daa
aam
les
pop
xor
fstl
js
in
je
stos
push
iret
jg
adc
cmp
push
es
addb
adc
movl
and
movsb
jno
stos
test
sub
pop
mov
jmp
fisubs
inc
out
pop
rorl
push
cmp
pop
ja
or
fmul
or
fwait
lret
dec
adc
xchg
add
fst
icebp
dec
je
fwait
cmp
jmp
cmpsb
es
mov
push
cld
decb
mov
icebp
in
mov
mov
cmp
cld
and
out
jge
shlb
dec
jg
mov
pushf
notb
push
inc
or
loope
jl
out
fisubl
and
mov
pop
ljmp
push
push
or
sbb
stos
subl
sbb
or
jbe
add
xchg
dec
cmpsl
je
push
into
fldln2
pop
mov
jle
arpl
scas
and
adc
mov
rcl
rolb
movsl
adc
adc
or
jnp
ja
xor
pop
aas
mov
aam
push
icebp
call
mov
mov
add
mov
fbld
mov
sbb
mov
sub
mov
call
xchg
loop
daa
jg
sbb
or
push
repnz
sbb
sti
std
in
jp
out
and
jle
filds
cltd
mov
sbb
ljmp
mul
xchg
fdivl
pop
rorl
int3
adc
inc
jmp
lahf
mov
pop
flds
roll
dec
ja
inc
xchg
scas
movsl
cli
repnz
inc
in
cmc
dec
aaa
adc
push
jns
mov
mov
fldenv
pop
ss
and
std
jge
jp
xor
clc
mov
add
jo
and
mov
dec
pop
repz
loope
mov
cmpsb
leave
xchg
mov
imull
or
inc
cmp
jo
lea
push
mov
mov
lret
cmp
repnz
push
in
jle
xchg
popa
jmp
jno
sti
sbb
and
push
push
xor
adc
rolb
mov
adc
or
cmp
mov
or
in
ds
cmp
cmp
vandnpd
popa
add
push
inc
lea
jmp
push
fcomps
cmp
lahf
fidivrl
insl
fstps
shrb
add
mov
mov
and
xchg
pop
add
xchg
jp
lret
adc
clc
popa
mov
ss
inc
mov
sub
test
rolb
mov
clc
sahf
jmp
xchg
add
dec
push
or
mov
daa
mov
jle
adc
call
and
push
xor
pop
xchg
mov
fiadds
addl
nop
inc
cmp
fsubr
adc
fimuls
pop
and
push
mov
addr16
push
stos
push
or
test
push
xchg
or
pop
idivl
lret
scas
fcmove
sub
loope
and
cmpsl
imul
leave
dec
jmp
addr16
mov
inc
jo
push
movsb
mov
iret
mov
subb
movsb
call
sbb
xor
jnp
cmp
jg
imul
inc
fsubr
lock
ret
dec
ja
jae
in
sbb
inc
and
and
ret
int3
mov
mov
hlt
mov
push
in
rcrb
and
lcall
mov
xchg
jl
addr16
insl
push
fwait
sub
popa
icebp
arpl
call
jl
pop
xor
clc
mov
pop
les
aaa
cltd
ss
mov
mov
daa
inc
jbe
inc
push
subl
scas
xchg
dec
pop
dec
xchg
addr16
pop
mov
pop
dec
pop
cmp
sbb
pop
mov
inc
pop
iret
jg
push
lahf
pushf
sub
jmp
push
fstpl
cli
mov
cld
fs
jb
xor
scas
inc
sub
mov
and
xchg
pop
pop
jno
iret
repnz
sub
xorl
scas
lahf
push
mov
ja
hlt
sti
fs
add
lret
push
aaa
xchg
adc
cmpsb
fmuls
sub
jmp
pop
imul
jl
sti
ficomps
adc
pop
jns
fs
mov
fcmovnb
dec
inc
inc
pop
xor
jl
push
xor
jno
in
pop
xchg
mov
xlat
push
jg
in
and
and
inc
addr16
fstpl
ret
pop
insl
test
inc
jns
pushl
mov
inc
xor
jo
push
cwtl
sub
js
push
xor
adc
clc
imul
insl
xor
and
or
daa
stos
cltd
xchg
sbb
mov
push
mov
fdiv
das
xor
aam
lods
pushf
mov
lea
mov
cld
mov
adc
aad
bound
cs
aad
adc
jnp
xor
ret
sbb
popf
aaa
adc
xchg
and
lret
test
mov
cld
pop
ret
cmp
aam
mov
wbinvd
push
mov
push
std
mov
fsubl
xor
std
push
aad
imull
subb
jnp
iret
push
jle
xor
sar
fcomi
cmp
push
push
jmp
mov
insl
mov
sti
aam
aam
inc
mov
std
data16
sub
rolb
xchg
fs
pop
mov
push
ret
and
mov
or
int
fstpl
shrl
lcall
inc
xchg
xor
xchg
cmp
mov
mov
mov
xchg
mov
fisubl
push
stos
mov
mov
adc
fisubrs
pop
inc
test
jge
inc
lret
dec
aad
push
cmp
orl
mov
shll
dec
lcall
push
mov
sarl
mov
fwait
out
pop
out
add
cltd
dec
mov
pop
je
cmpsl
fidivl
adc
incl
clc
movsb
stos
stos
stc
xchg
cmpl
mov
dec
mov
mov
bnd
in
jne
cmp
jge
test
out
pop
ffree
mov
pop
add
push
xchg
push
ret
lret
sub
sub
mov
bound
in
testl
mov
test
test
mov
dec
outsl
lret
mov
add
andl
filds
mov
aaa
and
mov
cmp
cwtl
loopne
mov
dec
push
scas
pusha
sub
mov
jo
cwtl
std
sbbl
inc
lahf
lahf
pop
adc
lds
ficomps
xor
sbb
push
xchg
gs
arpl
push
mov
jle
cmc
fnstcw
pop
insl
ficoml
insl
dec
xor
cmp
jp
shll
rcr
insl
jnp
rolb
mov
out
sahf
or
sbb
adc
cmpsb
int
sub
add
xor
sbb
call
dec
xchg
std
mov
mov
dec
lahf
sub
adc
in
loope
adc
push
cmc
push
daa
pop
xor
jmp
scas
xlat
or
arpl
and
push
mov
loop
inc
rolb
ds
dec
push
jecxz
pop
mov
loopne
xor
repnz
stc
mov
cmp
fs
enter
and
dec
lods
dec
divl
fcomps
lods
adc
push
add
jno
lods
xor
jo
inc
aad
fldlg2
or
dec
cmpl
mov
jmp
cmc
xchg
inc
push
adc
xor
loop
in
lock
lock
push
dec
mov
test
fstpl
sbb
sub
mov
ficomps
decl
lcall
xchg
jp
or
outsb
inc
xchg
clc
mov
icebp
cmp
cmp
cmp
inc
js
in
lods
xchg
or
out
xor
mov
push
aas
repnz
inc
sbb
or
dec
stc
xor
xchg
popf
lret
aam
int3
mov
xlat
out
lods
push
stos
xchg
subl
push
mov
stos
lods
push
or
aam
jecxz
xchg
jns
sbb
xchg
adc
and
pop
out
jge
dec
test
outsl
jge
outsl
lea
jmp
loopne
xor
test
mov
push
pop
out
in
mov
add
test
cmpsb
jns
outsl
xor
jns
adc
in
rcll
push
sub
add
push
cmp
shr
sbb
dec
ror
pop
jno
mov
repnz
xchg
mov
clc
popf
push
mov
or
add
pusha
test
imul
ss
fcompp
dec
push
inc
sti
fnstsw
jae
mov
lcall
ss
enter
adcl
push
sub
cs
mov
mov
ret
cwtl
xchg
ficomps
pop
ljmp
add
mov
mov
jbe
pop
repz
sbb
popa
ja
repnz
pushw
lods
sbb
aam
cmp
shll
test
sbb
mov
test
cli
mov
lea
mov
aam
ja
xor
mov
sbb
filds
out
nop
lods
in
mov
sub
push
in
sub
or
dec
inc
mov
jmp
mov
sbb
mov
push
bswap
test
lock
ss
imul
pop
shlb
push
or
fs
in
sub
mov
fisubrl
mov
mov
xchg
mov
cli
push
int3
push
sahf
jmp
cwtl
lock
addr16
dec
test
fadd
push
xor
rorb
loope
jns
sub
mov
and
aad
xor
and
mov
mov
cmpsb
inc
data16
pop
ds
addb
adc
or
add
push
rcrb
adc
or
test
and
jl
movsb
outsl
outsb
pop
inc
scas
fmull
adc
mov
sbb
push
pop
or
cltd
push
rcll
clc
adc
insl
dec
ds
mov
negb
fisubs
mov
or
jecxz
addr16
out
outsl
xchg
insb
xchg
jae
movsl
fistps
mov
shlb
shrb
icebp
and
push
mov
push
mov
xlat
pop
in
and
fistpl
pusha
mov
rcll
lods
jns
daa
lock
in
push
push
mov
fwait
add
mov
fnstcw
mov
mov
bound
arpl
inc
sub
mov
hlt
loop
jb
push
cwtl
jnp
push
xchg
jno
shrl
rorb
pushl
jns
xchg
pop
rcrl
enter
repz
pushf
shll
js
outsl
mull
ret
mul
ret
dec
cmpsl
shrl
orb
movsl
call
aam
addr16
sti
adc
dec
mov
push
sub
andl
cltd
inc
rcrb
lret
sbb
test
popf
sub
mov
stc
xchg
jl
add
sbb
leave
test
ljmp
adc
je
jnp
or
fisubrl
pop
sbb
es
popfw
stos
loope
xor
sbb
xchg
push
mov
icebp
cwtl
mov
jl
dec
aaa
popf
enter
das
out
loope
loope
out
mov
icebp
lods
inc
fdiv
test
popa
xor
fcmove
jle
popa
dec
sbb
cs
jg
stos
mov
lock
cmp
adc
jne
push
insb
call
bound
subb
stos
daa
mov
ljmp
inc
shlb
jg
lret
lods
mov
loop
cmpl
lahf
xor
xchg
leave
add
adc
ficoms
rol
mov
add
cld
mov
cmpsb
cmp
push
pusha
sahf
push
outsl
inc
inc
adc
inc
sub
or
ror
clc
adc
cli
loope
mov
add
int3
pushf
pop
lret
xor
aaa
loopne
jo
pusha
or
pusha
xor
cmp
pop
lock
dec
nop
nopl
sahf
mov
add
jno
nop
aam
out
shrl
pop
cmpsl
out
push
and
mov
cmp
mov
and
int
xor
out
inc
and
mov
in
lock
je
push
add
adc
inc
stos
xchg
mov
xor
sar
sub
testl
jnp
jns
inc
and
insl
mov
lds
pop
hlt
ljmp
aad
inc
cld
xor
jno
lods
mov
popf
aad
xor
lods
ja
lret
test
or
outsl
mov
lret
es
imul
fdivrl
fcomps
rorl
adc
mov
cmpsb
flds
ljmp
mul
pop
test
adc
aam
mov
jp
pushf
xor
push
daa
nop
aaa
xlat
lret
add
lods
int
cwtl
jp
je
inc
rorl
addl
pop
out
fcompl
jmp
or
rclb
xchg
xor
repz
push
jle
inc
pop
loopne
int
mov
loopne
dec
dec
enter
je
psllw
push
rcr
pop
repnz
popa
mov
xchg
cwtl
mov
dec
rorl
loop
or
push
xchg
cmp
sub
mov
push
and
or
pusha
adc
popa
push
fwait
cli
add
stos
out
das
faddl
movsl
push
sbb
mov
mov
enter
dec
pushf
or
add
jo
cmp
lods
or
in
in
xor
cmc
outsb
call
sub
dec
fs
loop
leave
popa
into
sbb
adc
test
add
daa
jns
adc
and
sbb
pop
dec
pop
dec
popa
and
jmp
pop
or
in
jmp
outsl
rcrb
ss
lret
int
pop
repz
push
aaa
jg
mov
jnp
scas
daa
pop
jmp
jecxz
mov
xchg
and
sub
jne
test
sub
fwait
arpl
movsb
mov
or
in
mov
out
push
fisubs
mov
dec
mov
nop
orb
cmp
outsl
dec
cmp
fs
cmp
insb
add
in
jnp
movsl
push
pop
mov
ja
pop
adcl
dec
outsb
loop
mov
mov
aam
sbb
jne
shrb
dec
xor
ret
popa
sahf
rorb
xchg
ret
adc
mov
jnp
sub
pop
incl
aaa
lods
sub
mov
mov
cmpsb
jmp
xor
arpl
pop
loope
je
mov
scas
inc
aas
or
and
sub
push
sub
movsl
or
or
pop
jle
out
into
mov
and
out
shrl
enter
push
push
xor
je
test
lods
inc
out
adc
insl
pop
leave
cmp
aam
fisubrs
cwtl
pop
lds
cmpsl
pop
cmpsb
push
jo
in
arpl
arpl
mov
mov
push
leave
xor
adc
enter
stos
mov
loop
scas
scas
and
cmc
fcmovb
or
mov
dec
or
lds
subl
fldl
and
push
inc
adc
mov
pop
stos
pop
outsb
add
mov
fidivrl
sarb
fidivrl
enter
je
stos
stos
adc
movsl
pop
lods
mov
mov
sub
lock
repnz
mov
loop
cmp
mov
test
jno
mov
add
shrb
pushf
stos
jnp
cmpsb
and
loope
fcompl
dec
loope
inc
pusha
cmpsb
stc
out
fadd
jl
xchg
jno
mov
cmp
addb
cli
loopne
fs
or
mov
fdivrs
popa
pushf
mov
push
mov
pmovmskb
jbe
mull
fcompl
cmpsb
cmc
and
sarb
leave
pop
xor
add
std
jbe
jle
inc
in
lahf
repz
fisttpll
hlt
pop
adc
add
xor
xor
insl
das
dec
jns
dec
xchg
int
out
test
mov
mov
fadd
pop
lahf
dec
lret
loop
adc
out
pop
sbb
fldcw
adc
pop
faddl
dec
cmp
mov
inc
sahf
add
std
pop
sbb
inc
lods
int3
xchg
sbb
popf
add
mov
xlat
lahf
pushaw
ffreep
push
xor
out
cs
mov
push
and
call
adc
or
test
mov
dec
cmp
call
pop
fldt
lock
insb
je
cmpsb
pusha
xchg
imul
fcomi
les
fldl
out
jnp
mov
frstor
cmp
xor
xlat
mov
sub
xor
add
test
and
or
push
mov
adc
lods
sub
rolb
push
or
jb
jo
cmp
sub
clc
sbb
daa
jle
xchg
bound
mov
out
adc
insl
ljmp
aad
inc
sub
jg
mov
cmc
dec
dec
arpl
subl
inc
sahf
jge
mov
lret
mov
mov
cmp
pop
in
sbb
ja
add
lret
inc
int3
xchg
movsl
int3
ss
enter
jo
xor
sarb
push
stos
push
push
imul
dec
sbb
pop
jb
push
push
data16
iret
popf
orb
loop
inc
adc
mov
out
iret
and
or
lcall
xchg
xchg
sahf
int3
lret
ret
lods
jp
leave
aad
jle
mov
or
loope
cld
dec
and
fstpl
popa
and
xchg
pop
dec
cmp
and
je
and
mov
mov
repnz
iret
mov
cmp
repz
int
aas
fldt
or
cmp
add
jle
push
fsubl
and
fisttps
pop
incb
lret
imul
inc
lret
push
push
sbb
adc
mov
aam
mov
lods
insl
cmp
mov
fadds
enter
sub
pop
push
mov
imul
imul
icebp
xor
jb
jo
cmpsb
xor
es
ljmp
aad
xchg
pop
and
fwait
sarb
cvtps2pd
lret
jae
push
dec
popf
orl
push
inc
pop
aaa
call
jbe
jmp
sbb
popf
loope
mov
dec
stos
pop
and
movsl
add
mov
dec
and
pusha
add
cli
jp
bnd
xchg
pushf
sub
mov
dec
jae
daa
mov
mov
mov
jle
out
pop
stos
lock
ja
and
loop
out
dec
pop
jg
pop
addl
pop
fwait
call
fnstenv
cltd
xlat
jnp
xor
pop
jg
mov
enter
xor
add
mov
scas
repz
push
jl
xor
and
mov
das
sbb
mov
sbb
movsl
mov
jno
mov
push
mov
data16
ret
or
push
insl
stc
xlat
pop
cmp
stos
xor
push
pop
mov
dec
dec
gs
iret
enter
cmp
loopne
push
lret
cmp
test
add
bnd
out
pop
ja
pop
fistps
cmp
aas
sahf
loope
out
push
rcll
lock
popa
dec
cld
std
fsubrl
xor
fadd
daa
xor
gs
mov
xchg
jmp
xlat
ss
mov
xchg
pop
inc
lcall
push
jae
ret
loop
inc
dec
fcmove
out
push
imul
lret
mov
adc
and
imul
in
jb
xchg
inc
mov
cltd
inc
xchg
mov
incb
hlt
int3
pop
push
or
or
jl
divb
cli
or
xor
das
imul
mov
jmp
cmp
fisttpl
dec
dec
sub
adc
push
adc
jae
aad
lods
mov
pop
jbe
ret
roll
aad
into
mov
jo
or
mov
cltd
lds
repnz
add
mov
xchg
loop
jge
pushf
fldt
mov
xor
sub
jl
xchg
push
mov
mov
shr
stos
xor
adc
cmp
fidivrl
adc
xchg
inc
cltd
sbb
jb
adc
stos
jl
push
testl
lods
je
sbb
fdivr
das
mov
xor
loope
cs
push
insb
in
bound
das
sub
jb
out
fstl
add
fwait
mov
add
sbb
adc
add
stc
jbe
fidivrl
sbb
xchg
add
add
xchg
xor
in
jl
sahf
out
imul
addl
cmp
or
fsubrl
sti
je
mov
jb
jnp
movl
out
pop
divl
loopne
arpl
out
stos
mov
test
test
aaa
fdivs
pusha
fcmovbe
jmp
push
enter
dec
pop
dec
scas
nop
xchg
in
aas
xchg
test
ja
push
xor
mov
sbb
lea
lahf
aam
loope
sbb
cwtl
or
and
push
popa
push
dec
cmp
inc
ss
sub
pop
out
add
sbb
dec
mov
adc
mov
and
mov
std
sbb
cmp
ret
jo
mov
xchg
shlb
sub
lret
ljmp
adc
mov
cld
ret
and
mov
cmpsb
xchg
loop
mov
jb
dec
add
pop
jo
mov
orl
cmpsl
or
push
aaa
repnz
icebp
dec
lock
sahf
add
xorl
xlat
mov
sub
push
pushf
sub
test
lds
enter
sbb
dec
bound
out
cwtl
bound
jle
sarb
cmp
dec
shlb
cmpsb
inc
jbe
in
mov
mov
leave
sbb
aad
push
lret
shrl
jl
movsl
data16
xor
push
in
or
xchg
lods
test
xor
jne
and
dec
and
stos
movsl
jne
adc
push
jecxz
fdivrs
pop
gs
sub
dec
mov
roll
push
or
in
loop
sti
add
push
imul
dec
xchg
mov
sti
movsb
dec
cmpsl
ret
fbstp
jge
test
cmp
in
clc
bound
bound
mov
xlat
sub
test
sbb
or
lcall
mov
cmp
test
fwait
imul
mov
mov
mov
ljmp
push
xor
xchg
out
fcmovbe
push
das
lahf
jl
fidivrl
and
imul
xchg
test
scas
cmpsl
sarl
xor
movsb
fldt
fistps
gs
hlt
call
sub
and
outsb
xor
sub
push
cmp
lahf
pop
fsub
sbb
inc
pop
xchg
stos
sbb
leave
cli
xchg
out
pop
add
fidivs
sbb
jbe
dec
mov
daa
cld
in
mov
sbb
cmp
loope
sub
in
jmp
xor
popa
cmp
cmpsb
aaa
xlat
jns
mov
jne
xor
push
xchg
sub
xchg
or
mov
adc
test
out
mov
outsl
ljmp
add
lcall
dec
rcrb
cmpsb
jp
testl
push
adc
bound
add
daa
jae
jmp
jno
test
mov
add
jge
pop
fbld
push
pop
mov
push
clc
xor
sbb
loop
test
mov
call
repz
mov
pusha
push
outsl
xchg
or
or
xchg
push
inc
jecxz
dec
pushf
in
movb
call
pop
xchg
paddw
push
jnp
scas
popf
push
in
sub
dec
cltd
ret
and
in
jne
push
sub
push
aam
mov
or
test
add
sbb
fiadds
jmp
movsb
add
lcall
sbb
pop
jecxz
icebp
ss
das
fsubrl
notl
or
mov
inc
fists
call
sarb
jmp
xor
call
lcall
mov
or
lds
pop
and
popf
pop
cmpsb
adc
rcl
fiadds
fstpt
cld
jge
in
xor
pop
in
jns
sbb
jmp
loop
dec
lahf
lods
cmp
mov
or
sub
inc
cmpsb
push
ja
call
jae
pushw
add
fcoml
xchg
lcall
pop
lahf
popf
clc
pop
out
in
lods
mov
adc
and
loopne
xchg
cli
les
jl
fistps
sbb
shrl
or
cltd
test
push
out
insb
mov
loopne
mov
aaa
pushf
out
mov
repz
lds
mov
xchg
scas
ret
dec
and
jle
jns
ret
dec
in
test
je
sahf
sti
orb
insb
out
fs
pop
push
imulb
add
repnz
sbbb
sbb
xchg
and
outsl
push
hlt
ret
rcrl
or
clc
in
xchg
mul
sub
mov
push
xchg
les
cmc
dec
jnp
jnp
push
dec
testb
sbb
sti
ja
lahf
int
xor
push
sbb
dec
aas
xor
jb
push
jns
pop
jmp
jb
push
cltd
xchg
xor
jae
fsubr
out
sub
sub
lahf
adc
ja
push
test
in
push
mov
call
fadd
rcrl
pop
test
and
mov
xor
iret
cmpsl
jnp
mov
mov
jge
ljmp
mov
hlt
xchg
mov
sub
orl
call
ffreep
dec
sub
outsb
loope
dec
mov
and
in
stc
jecxz
aas
mov
lods
andb
pop
into
and
mov
les
xchg
fsubl
and
xlat
hlt
cmp
mov
xchg
sub
std
sahf
test
mov
mov
xchg
loop
dec
xchg
pop
outsb
iret
dec
ret
jp
out
add
popl
xchg
inc
sbb
lret
call
negb
mov
out
dec
leave
adc
xchg
xchg
movsl
adc
xchg
inc
cmp
fadds
test
imul
adcl
inc
inc
in
mov
dec
sub
in
and
mov
call
stos
rol
fs
iret
dec
stos
jp
fisttps
and
clc
cmp
cltd
jle
test
dec
pop
jg
adc
int3
jge
xor
jp,pt
fisttpl
fsub
and
push
adc
lret
and
ds
hlt
cmp
repz
add
pop
adc
add
pop
adc
xchg
into
loop
jne
push
or
inc
adc
scas
pop
cmp
sbb
ror
jp
pop
aas
fstpl
daa
scas
cmc
inc
mov
mov
aas
loop
mov
pop
and
mov
inc
dec
inc
pop
in
rcrb
aad
jp
xchg
gs
imul
dec
popl
sub
fiadds
mov
lods
dec
sub
stos
shlb
cmpsl
test
cwtl
or
fs
les
jb
lret
sub
fiaddl
pop
sub
inc
loop
xor
cmc
cmp
fdivrs
ja
inc
shrl
or
adc
dec
ss
xchg
psubsb
mov
addr16
sbb
int
rol
je
jns
shr
shrd
lods
ja
out
pop
jbe
movsl
aas
jp
sbb
cmpsl
xchg
notb
jge
int3
mov
shrb
pop
mov
std
outsl
jmp
test
mov
leave
inc
mov
mov
hlt
pop
mov
and
mov
js
jecxz
mov
shll
repnz
xchg
fadds
jp
jns
shrl
lods
pushf
mov
mov
fadd
mov
das
fldz
add
jae
lods
lea
mov
insb
fldenv
pop
dec
jmp
fs
or
sar
pushf
test
xchg
dec
mov
cmp
in
test
lods
fisttpl
data16
icebp
repnz
inc
addl
mov
orb
repz
jle
movb
repz
imull
mov
adcb
mov
xchg
inc
out
jmp
sbb
stos
inc
in
repz
ja
cmpsl
int3
arpl
outsl
dec
les
mov
cwtl
mov
cwtl
push
lock
push
out
adcl
jmp
xorl
or
loope
xchg
arpl
fwait
outsb
mov
in
and
and
nop
lret
out
fs
or
sarb
push
and
inc
pop
fwait
xchg
mov
outsl
mov
jmp
adc
rorb
xchg
add
aas
scas
mov
ret
enter
das
mov
je
negb
jmp
dec
aaa
add
xor
add
pop
xor
iret
jno
nop
lret
repz
stc
nop
mov
cmpsl
mov
or
push
pop
mov
xor
lds
pop
or
adc
pushl
xchg
lods
out
std
and
stc
dec
xlat
lods
mov
cld
rcll
pushf
rcrb
jecxz
mov
push
mov
sarb
cmpsb
enter
mov
xchg
xor
scas
repz
lret
scas
adc
aad
cli
adc
mov
mov
xchg
cmp
add
pop
mov
mov
inc
mov
push
cmp
aam
or
pop
je
mov
xor
jae
out
mov
loop
data16
or
testb
mov
jns
mov
adc
inc
mov
push
fadd
loop
mov
jae
adc
pop
out
ljmp
js
sti
outsl
xor
out
inc
movsl
jb
xchg
mov
mov
push
test
cltd
xor
pop
mov
es
xchg
mov
push
jl
pop
xchg
adc
gs
mov
lea
out
and
xor
sarl
and
push
dec
adc
ret
lock
outsb
outsb
sbb
lds
addb
sbb
insl
stos
cli
outsl
ret
pop
aaa
rcr
imul
cmc
stos
mov
inc
rcll
rorb
push
mov
outsb
sbb
pop
je
les
jnp
sbb
add
cmpsb
stc
mov
repz
out
mov
in
mov
xchg
xor
gs
orb
mov
jbe
ds
imul
mov
test
and
negl
pop
xchg
imul
adc
push
cmp
push
stc
icebp
adc
not
or
push
lods
push
popa
pop
stos
stos
scas
and
push
cmpsl
fstpl
mov
js
adc
std
sbb
sbb
pop
mov
mov
sub
sbb
outsl
mull
jl
push
mov
inc
pop
in
xor
dec
mov
repnz
std
sbb
in
mov
adc
fmuls
pop
scas
adc
sbb
mov
xor
pop
add
lods
adc
movsb
cmpsl
inc
or
ds
subb
mov
dec
fidivrl
int
sbb
jne
sub
or
icebp
xchg
cmp
pop
imul
xchg
fsubrs
mov
xchg
das
pop
push
mov
add
cmpsb
sahf
mov
movsl
dec
dec
jb
sub
rclb
inc
mov
mov
jns
or
rol
mov
cmp
sbb
lods
mov
xor
and
mov
sub
cltd
fsubl
jmp
jnp
faddl
mov
adc
pop
inc
fistps
std
pop
sbb
neg
dec
jno
lret
mov
lods
jnp
out
aam
mov
lds
mov
loope
sbb
add
cltd
sbb
stos
bound
clc
lcall
sbbb
pop
icebp
push
inc
xor
popa
fs
adc
arpl
xor
jns
cmpsl
pop
pushf
shlb
inc
idivl
pop
push
xchg
testl
out
sbb
dec
sub
lock
mov
mov
into
sbb
adc
outsb
sbb
cmp
insl
repnz
dec
clc
jne
dec
mov
xor
pop
xchg
inc
push
inc
jno
cmp
mov
sbb
mov
lds
mov
pop
dec
or
cs
shll
fdivrs
mov
fsubp
push
sti
xchg
test
addb
clc
jmp
loope
cmp
popa
cwtl
loop
add
cs
mov
or
ja
cs
mov
lret
pop
mov
sbb
jnp
cld
test
pop
cltd
fstpl
adc
jbe
leave
adc
mov
mov
and
or
sahf
divb
test
sbb
imul
rcrb
fldl
sbb
test
das
or
lods
aad
adc
push
ret
xchg
setbe
sti
jle
punpcklbw
push
jb
cmpsl
movsb
add
push
or
aad
dec
xor
sub
sub
xchg
mull
sbb
push
mov
inc
push
xchg
pop
sub
xor
inc
enter
add
mov
xchg
pop
lret
aaa
mov
sub
xchg
inc
mov
cmpsl
in
sbb
lret
rcr
or
push
arpl
mov
xchg
mov
sti
out
and
xor
shll
pop
dec
call
jecxz
out
lea
dec
push
mov
xor
mov
gs
outsl
or
and
lahf
lea
mov
jb
push
stc
call
js
divl
mov
fsubr
lods
mov
mov
bound
hlt
int
xchg
dec
and
or
std
nop
sub
stos
xchg
out
test
repnz
cli
pop
push
leave
sahf
adc
lods
inc
mov
pushf
sbb
sbb
jno
jb
aam
sbb
pop
pop
dec
cwtl
mov
mov
das
and
cmp
fldl
add
mov
jb
pop
add
das
or
rcl
loopne
fimuls
jae
ficoml
or
adc
fstl
subb
mov
fwait
xor
adc
rorb
int
mov
push
lods
xchg
adc
ror
add
dec
sbb
or
fs
inc
adc
push
dec
ret
add
xchg
int
mov
mov
cs
dec
lock
jbe
outsb
adc
stos
mov
iret
dec
fwait
popf
mov
test
daa
inc
ds
int
aas
mov
in
icebp
add
dec
mov
insl
js
inc
cmp
push
jnp
xor
jne
xchg
or
fnstenv
call
push
adc
push
pop
fcomp
int
push
cmpsb
mov
lahf
lock
pop
les
pusha
dec
xchg
addr16
int
and
lret
dec
dec
push
mov
jo
lret
aaa
push
js
ret
es
pop
jo
mov
movups
jge
adc
mov
xchg
add
fcompl
imul
test
vpunpckhbw
stc
add
add
roll
imul
pop
mov
jecxz
in
adc
shl
sub
sbb
pop
adc
fwait
rolb
ljmp
jno
pop
push
iret
add
insl
in
pop
adc
dec
and
jg
lcall
pop
sub
sbb
dec
outsl
test
sub
clc
adc
push
or
orl
sub
jb
push
in
inc
xchg
cmp
inc
mov
sbb
stos
inc
dec
add
push
dec
inc
les
rcrl
and
out
insl
test
dec
mov
mov
aam
iret
test
flds
sti
mov
outsb
mov
mov
rolb
jnp
lahf
stos
andb
pop
xor
mov
inc
sbb
mov
inc
mov
notb
imul
pop
cmp
cwtl
addl
mov
add
dec
aas
out
xchg
adc
test
js
mov
mov
enter
inc
dec
inc
add
aas
adc
xor
sub
rcl
shr
cmpsl
pushf
push
lret
sub
cmpsl
lea
add
push
jg
daa
ja
mov
adc
sahf
cmc
hlt
adc
repnz
pushf
mov
push
mov
add
mov
shr
pop
pop
push
out
bnd
lock
xor
mov
push
xchg
jno
psubusb
xchg
dec
in
in
jbe
divb
cmp
mov
dec
leave
mov
mov
sub
add
jle
cmp
mov
pop
sub
sub
cltd
nop
xor
adc
les
xchg
mov
adc
fistpl
jge
xchg
jp
mov
adc
pop
sarl
xchg
mov
lods
push
or
adc
push
adc
int3
roll
lret
mov
ljmp
sub
adc
mov
imul
add
xlat
mov
cmc
lea
mov
popw
mov
pop
pop
shl
xor
jl
dec
imul
lock
out
ficompl
sbb
sbb
sbb
mov
xlat
xchg
or
arpl
sub
xchg
sbb
mov
test
pop
mov
loop
inc
adc
push
iret
mov
imul
xor
push
ficomps
jae
jnp
es
jg
movsb
dec
and
int3
add
cmc
xchg
outsb
sbb
outsb
enter
cmp
xchg
cmpsb
inc
lret
clc
subb
inc
sbb
repnz
loope
sbb
mov
sbb
pushf
stos
mov
xchg
ss
leave
ljmp
jg
mov
cmp
sbb
das
xor
mov
inc
inc
outsb
sub
mov
popa
add
mov
mov
fisubs
repz
out
out
xor
pop
fcompl
out
inc
loop
jns
aas
mov
stos
fldenv
loope
pop
or
pop
nop
sti
pop
pop
test
movsl
test
or
inc
add
mov
jbe
sbb
jp
cmp
outsl
hlt
or
sbb
pop
sbb
mov
xchg
mov
mov
shrb
mov
movsb
or
jae
mov
and
xchg
lret
sub
mov
addr16
in
stos
iret
inc
iret
push
out
mov
jg,pn
cmc
out
dec
bound
and
pop
test
and
mov
push
rorl
jno
pop
pop
cmp
ljmp
lret
pop
adc
shl
addl
jecxz
cmpsl
adc
inc
out
in
mov
xchg
loope
xchg
adc
sar
mov
cmp
add
sti
lret
add
shrl
or
cmc
jo
push
fwait
rorl
push
sbb
xchg
and
sbb
pop
pop
jae
scas
or
cmp
sub
push
ljmp
or
ficompl
push
fisubs
test
xor
popl
std
push
int3
lods
jo
arpl
jo
inc
icebp
jl
pop
cwtl
flds
mov
cld
xchg
mov
mov
mov
inc
movsb
mov
aaa
xor
scas
inc
push
jb
ret
dec
sub
xor
repz
lret
pushf
add
decl
mov
icebp
or
push
es
or
int
cmp
and
test
cld
andb
aad
pop
mov
cs
mov
mov
mov
sub
mov
inc
pop
pushf
lahf
aam
popa
bound
stc
aad
push
std
enter
pop
addr16
bound
push
or
fs
fwait
sahf
ljmp
jmp
out
mov
jnp
jmp
out
or
roll
sub
ljmp
sbb
rcll
es
imul
out
dec
out
aad
xor
js
arpl
outsb
imul
push
clc
mov
push
xchg
cmp
mov
sbb
lods
stc
dec
clc
jb
lds
cs
mov
adcb
pop
outsb
ret
pop
mov
mov
insl
int3
loopne
push
jecxz
orl
push
aaa
xchg
rcl
lock
popa
pop
push
jg
je
jle
jno
add
add
dec
pusha
and
scas
fisttpll
or
outsb
aam
aad
pop
dec
jge
mov
mov
mov
vandnps
out
jae
cmp
in
or
scas
inc
loope
mov
jb
lods
cs
mov
repnz
mov
xchg
stos
sub
out
loope
jb
notl
mov
aas
push
mov
xadd
int
shl
sbb
mov
aam
data16
inc
sahf
sub
clc
mov
mov
mov
filds
jne
ss
ljmp
in
fcomi
lea
jne
xchg
repz
pop
push
mul
xchg
xor
jae
loop
adc
add
ljmp
mov
int
nop
adc
popa
cmp
in
cmp
mov
inc
mov
xchg
je
arpl
jae
ljmp
cmpsl
mov
dec
xor
sbb
hlt
adc
jns
fildl
mov
sti
sub
inc
cmp
test
in
mov
lea
arpl
cmpsl
inc
add
icebp
inc
inc
mov
adcb
inc
cwtl
inc
int3
inc
cmp
sbb
push
push
cmc
stos
in
adc
mov
shlb
adc
or
es
aam
mov
xorl
adc
sub
dec
xchg
addl
aad
push
sub
pop
or
jns
dec
enter
push
fbld
xor
imul
cld
insb
sub
mov
mov
cwtl
mov
jge
cmpsl
xor
sub
fists
aas
daa
xchg
stos
bound
inc
jb
fcoml
and
nop
in
jecxz
mov
fsub
jb
inc
repnz
and
pop
and
jg
mov
xlat
icebp
mov
movsb
out
dec
xor
push
cmp
in
sub
bound
fldenv
cmp
or
push
les
xlat
in
loopne
fwait
sub
mov
inc
adc
ret
push
mov
out
in
sti
inc
sbb
aam
push
mov
mov
dec
xor
bound
push
lcall
sti
nop
dec
pop
mov
roll
add
pop
pop
out
dec
jg
lds
bound
cmp
lds
mov
jno
or
loopne
pushf
jbe
movsb
jns
jb
push
dec
pop
sbb
mov
rcrl
add
inc
sbb
or
xor
cli
jns
lret
cmpsb
arpl
sub
xor
shrb
mov
or
add
addb
push
js
push
cli
scas
negl
mov
sti
xchg
jbe
pop
or
cmc
iret
and
cli
sub
test
pop
and
add
out
stos
inc
jle
call
push
in
xor
jecxz
xchg
dec
test
push
adc
jae
aaa
jae
push
mov
jl
insl
push
dec
test
rclb
frstor
jmp
mov
and
mov
adc
enter
push
mov
mov
cmc
pop
clc
mov
mov
xchg
lahf
jmp
daa
imul
fwait
and
imul
arpl
mov
inc
aam
fidivl
out
mov
fsubp
push
ret
pop
mov
mov
mov
cmpsl
push
and
mov
out
sbb
or
sbb
rcll
bound
adc
jmp
hlt
addr16
xor
add
push
imul
push
xchg
mov
loop
push
push
outsb
mov
push
jp
xchg
test
lea
and
mov
outsb
js
jo
sub
test
repnz
push
xlat
or
adc
sub
mov
inc
mov
sti
cld
inc
aad
pop
test
fs
push
jl
push
ja
sbb
stos
jp
jmp
add
mov
mov
mov
mov
sarb
cmp
jae
das
adcl
xor
ret
pop
fstpt
cwtl
fneni(8087
jnp
fdivrs
lods
shrb
mov
test
jns
lock
ljmp
mov
xchg
jb
filds
sbb
jo
pmulhw
mov
inc
fs
lret
dec
mov
outsb
inc
add
in
mov
pop
into
in
adc
loope
mov
and
fstpl
mov
ret
and
inc
push
mov
rol
cmp
dec
rorb
ds
push
push
into
mov
ljmp
xchg
dec
jp
jge
clc
push
adc
in
xchg
push
jb
lock
xchg
dec
mov
push
repz
mov
lods
enter
push
xchg
loop
inc
outsl
sbb
loope
fs
push
xchg
testl
mov
pop
es
or
pop
shrl
mov
push
add
data16
cld
stos
push
in
nop
dec
ror
dec
push
cmp
pop
sub
push
jno
jge
ja
lcall
cmp
inc
popf
leave
cmp
mov
lcall
daa
testb
mov
insb
and
jns
adc
sti
mov
pop
push
xor
add
jmp
loopne
cwtl
sub
xor
stc
fadds
mov
dec
add
arpl
mov
fnstcw
sub
sbb
ret
cmp
addr16
adc
push
dec
lods
cmpsl
or
repnz
leave
sbb
scas
cmpl
push
shll
adcl
loopne
add
mov
jnp
mov
xchg
push
movsb
cmpsb
cwtl
jmp
mov
lods
adc
xchg
loope
das
dec
or
lahf
xchg
sub
push
outsl
test
loope
rolb
sbbl
cmpsb
mov
mov
fsubr
pop
pop
iret
rcll
dec
divl
jmp
out
testl
popa
sbb
stc
xlat
hlt
inc
cmp
gs
sbb
and
lea
xor
jno
fmuls
dec
sub
dec
adc
ret
push
loopne
add
dec
jp
push
pop
int3
sub
inc
and
adc
popf
adc
in
outsb
popa
sarl
inc
push
arpl
icebp
mov
rep
imul
lods
inc
xchg
or
sub
push
scas
xchg
cmp
fs
cmpsl
idivl
cmp
push
cmp
hlt
inc
gs
or
pop
inc
cwtl
and
popf
aaa
sub
loope
cmp
push
addr16
mov
fcmovne
fs
ret
mov
sbb
inc
push
ss
dec
cmp
jno
lahf
inc
add
jb
xchg
dec
int
in
push
adc
adc
test
and
inc
add
lret
mov
rorl
cmp
sub
in
pusha
add
sub
xchg
xor
lds
rorl
aad
hlt
jle
mov
pop
dec
nop
repz
xor
push
jo
xor
cwtl
out
push
stc
dec
fiaddl
jo
js
cmpsb
test
inc
cltd
jmp
jle
aad
aaa
mov
mov
dec
mov
stos
lods
fs
mov
out
mov
imul
pop
insl
jg
stos
stc
cmp
push
cmp
pop
mov
dec
inc
mov
inc
xor
js
inc
or
adc
enter
add
inc
mov
or
and
dec
cmp
repz
sub
mov
outsb
adc
call
xlat
pusha
outsl
jp
fiaddl
xchg
pop
das
sahf
mov
xchg
jo
xchg
xor
or
daa
cwtl
and
mov
push
fnstcw
aam
fistpll
ss
mov
sub
mov
xchg
dec
scas
cmp
repnz
arpl
pop
add
dec
jp
sub
sti
repz
out
ljmp
in
fcoml
cmp
clc
push
sub
xor
notl
xchg
xor
cs
or
sub
xchg
and
loop
fisubrl
or
aas
stc
es
and
xor
pop
gs
xchg
in
pop
sub
pop
fcoms
adc
lods
ret
pop
and
add
movsl
cmp
sbbl
push
xchg
xchg
mov
aas
xor
cmp
gs
movsl
dec
sti
and
fists
enter
and
inc
cmc
loopne
lds
sahf
inc
mul
xor
out
in
or
arpl
cmp
mov
pop
push
stos
in
sbb
in
les
lods
cmc
call
cmpsl
sbb
fisubrl
dec
ja
negl
or
std
gs
mov
push
jge
mov
imul
or
int
xorl
pop
out
push
mov
mov
or
pop
jo
mov
mov
adc
cmpsl
loope
in
adc
stos
repz
add
xchg
push
es
jae,pt
rorb
pop
xor
and
in
mov
vmwrite
dec
pop
xchg
cmc
loope
sbb
lds
fadds
clc
out
sub
jecxz
jge
dec
pop
and
dec
pop
ljmp
mov
jge
ss
jno
or
ret
shl
lock
xchg
pop
lret
push
rcll
sbb
mov
push
inc
mov
adc
dec
jns
out
adc
repnz
aad
adc
dec
call
ss
sbb
mov
pop
mov
lock
test
sub
dec
lds
or
punpcklbw
inc
lock
xabort
add
xor
xchg
sub
mov
arpl
dec
pop
pop
das
sti
mov
jo
cmp
in
aaa
mov
incl
shlb
mov
push
mov
lds
xor
and
nop
xchg
mov
xor
fwait
mov
dec
or
jo
fsubs
movsb
mov
je
mov
aam
fistpl
jbe
or
adc
out
in
ds
and
test
shrb
xor
inc
aas
in
jae
in
inc
mov
gs
push
aam
lods
movsl
pushf
mov
jecxz
pop
push
outsb
pop
bound
ja
mov
jp
mov
adc
mov
loop
pop
mov
pop
dec
jmp
ret
add
int
mov
cmpsl
sub
push
mov
lret
in
dec
push
es
insl
imul
push
test
imul
mov
sbb
inc
test
cmp
loope
pop
and
into
mov
sbb
cmp
cmp
inc
aaa
test
sbb
pushf
iret
jbe
inc
pop
and
mov
and
or
push
mov
dec
ss
cmpsb
sbb
popl
imul
aad
les
dec
jl
add
sbb
mov
jl
sbb
push
xchg
push
mov
test
iret
mov
lock
repz
xor
dec
push
cld
sbb
and
lds
inc
lea
aam
adc
mov
lds
cltd
sbb
aad
or
mov
daa
inc
sbb
pop
push
sahf
adc
inc
arpl
jno
mov
es
push
stos
insb
in
pop
cmp
push
shr
xorb
negb
sti
pop
fstpt
mov
jae
mov
mov
mov
cld
pop
inc
pop
int
push
mov
and
movsl
decb
push
push
lock
add
mul
jo
cmpsl
mov
fsts
pop
mov
adc
rclb
mov
popf
pop
stos
arpl
cmp
xchg
nop
leave
ret
stc
lea
inc
xor
scas
lock
stc
int
cmp
jb
fs
idiv
xor
and
jmp
mov
stc
test
in
test
loope
cltd
imul
cli
jo
insb
mov
cmp
xchg
addr16
in
mov
jnp
inc
stc
mov
sub
adc
mov
sti
cmc
adc
dec
ficomps
shrb
push
add
ret
testl
test
sbb
clc
jo
int
cmp
sbb
ljmp
mov
mov
push
fs
mov
pop
or
or
cmpsb
pop
push
aam
ss
push
jne
mov
jo
push
arpl
std
adc
rcl
loopne
jb
mov
pop
stos
cltd
adc
xorl
xor
mov
mov
aas
sub
xor
jle
adc
jl
cld
push
ds
sub
mov
xchg
sbb
bound
or
pop
arpl
int
mov
mov
shrl
xchg
mov
lcall
ds
into
push
cmpsb
xchg
inc
cli
sbb
scas
pop
inc
stos
lods
imul
fstl
add
mov
jbe
fmuls
adc
add
and
sbb
int
ss
hlt
jp
cmpb
pop
and
inc
cwtl
jo
hlt
sti
rcrl
lods
rcrl
and
repz
inc
inc
das
cwtl
out
mov
sub
lods
jne
mov
lods
cli
jnp
sbb
pop
lea
pushf
imul
adc
mov
jnp
sub
jne
lods
sbb
cmp
ficomps
mov
push
pop
adc
xlat
adc
sbb
daa
mov
adcl
inc
sbb
inc
in
adc
nop
or
fs
and
imul
mov
jg
pop
repz
iret
cs
and
fcompl
or
push
pop
adc
pop
movsb
push
movsb
xor
sahf
xor
push
cli
adc
inc
jg
or
cmp
jle
loop
adc
and
in
jns
sbb
scas
in
aaa
andb
inc
jecxz
xor
les
dec
jnp
out
shrb
sub
push
mov
orl
fdivrp
adc
ret
neg
cmc
daa
call
cmpsb
fucomp
add
sahf
mov
adc
fstpt
test
shrl
jl
mov
cmp
push
jp
lods
cmp
push
mov
mov
jmp
inc
scas
xor
mov
icebp
and
mov
or
jo
sahf
leave
mov
ret
mov
fildll
xlat
aam
xchg
ss
xchg
je
push
xchg
dec
pusha
out
in
fildll
add
cs
or
ljmp
sub
cwtl
xchg
roll
sti
mov
pop
cld
mov
mov
pop
dec
inc
mov
push
push
mov
and
xchg
adc
popa
mov
js
lods
imul
push
push
pop
and
push
push
dec
xor
jp
repnz
sar
roll
call
jbe
jns
or
test
pop
sub
in
xchg
jae
dec
push
cmp
sbb
mov
mov
les
cltd
insl
shr
mov
pusha
aaa
xor
gs
out
add
jns
push
popa
inc
cmp
adc
jbe
xor
sbb
dec
jmp
addr16
xor
test
jmp
xchg
outsl
jbe
pop
cmpsl
push
gs
shr
das
imul
dec
pusha
in
jecxz
dec
rol
push
adc
lret
in
mov
clc
stc
iret
pop
sbb
pop
sahf
pop
inc
cmp
jns
out
repz
insb
jb
jge
cli
pop
push
or
push
ja
daa
jmp
loope
notb
xor
popa
sub
mov
sti
lds
push
in
and
hlt
add
and
in
clc
and
sub
jb
pop
jne
adc
xorl
dec
lahf
xchg
or
and
jbe
pop
cmp
roll
daa
in
mov
inc
rcrl
or
pop
int
push
insl
andb
adc
test
mov
and
fnstenv
or
adc
stos
loope
outsb
aas
dec
sti
xor
add
sbb
sub
adc
pop
jno
cmp
lcall
insb
test
adcl
fstl
movsl
xor
sahf
daa
dec
es
and
call
jg
or
cmp
push
xchg
popa
cs
fwait
mov
test
adc
test
out
ret
mov
jle
xchg
popf
sbb
or
ss
sub
gs
lods
bound
or
dec
or
sub
cmp
pop
adc
test
and
mov
in
ret
inc
je
xchg
push
and
pop
test
lods
nop
inc
fwait
movsb
mov
mov
fbld
rcll
movsl
dec
popf
sbb
push
ds
iret
xor
or
mov
xchg
mov
adc
test
fadds
adc
popa
dec
popf
add
inc
rcrl
pop
dec
pop
leave
scas
jo
outsl
mov
mov
and
jne
jmp
push
dec
notl
gs
add
imul
movsl
and
xor
arpl
mov
pop
rorl
imul
adc
or
adc
popf
adc
push
pusha
jp
mov
iret
movsb
hlt
fmull
sub
rolb
cmpsl
dec
push
dec
or
loop
inc
mov
mov
pop
push
out
addr16
sub
mov
mov
jno
dec
or
or
fcoml
sbb
dec
cmc
xor
aam
mov
and
cmc
ja
insl
ja
adc
ja
out
mov
or
pop
js
in
push
xchg
imul
xchg
inc
adc
out
aaa
add
ja
iret
add
push
in
outsb
sub
mov
sbb
jae
stc
in
push
ret
mov
inc
mov
addr16
pop
ror
fstps
mov
lds
jb
inc
loopne
dec
mov
lret
lret
jge
int
pushw
pusha
sub
cmp
imul
lock
push
pushf
jl
notb
jb
hlt
in
flds
outsb
push
aam
imul
aam
dec
sbb
inc
dec
inc
mov
out
out
popa
mov
je
push
bound
hlt
or
in
lods
or
out
mov
ret
out
aas
imul
pop
dec
xorb
and
mov
orl
ja
jns
shrb
mov
xor
outsl
cli
aad
push
test
test
cmovae
data16
cmp
fscale
dec
mov
test
lea
mov
icebp
cmp
or
xor
cmpsb
xor
shl
dec
sahf
icebp
dec
mov
int3
sub
leave
fmull
add
sbb
stos
mov
addl
sub
xchg
test
loopne
out
inc
adc
out
aam
arpl
das
jns
stc
test
call
inc
popa
fldt
inc
and
movsl
fs
pushl
mov
aam
cs
push
int3
and
mov
mov
sub
mov
and
fucom
rcrl
xlat
mov
jp
push
mov
push
test
sub
insl
clc
sbb
cmpsb
xchg
icebp
in
inc
jmp
lcall
sahf
inc
shr
cli
sahf
in
lahf
mov
imul
or
cli
aad
inc
lea
xor
inc
test
dec
add
aad
push
jo
xchg
clc
pusha
jns
shll
ret
popf
leave
xchg
push
xchg
sbb
adcl
stos
notl
add
loopne
add
pop
je
inc
dec
mov
ror
push
icebp
aad
pop
idivb
mov
idivl
arpl
notb
mov
jg
rcll
fisubs
mov
lods
mov
cwtl
leave
daa
insl
xor
or
xor
or
jns
stc
js
into
hlt
rcrl
into
mov
mov
mov
mov
inc
pop
mov
es
pop
dec
clc
mov
and
xor
loopne
push
jmp
xor
das
mov
add
push
lock
je
pop
arpl
add
cmp
push
aad
dec
xor
xchg
push
mov
inc
orps
push
pop
adc
jne
cmp
mov
cltd
fdivr
into
lock
sahf
pop
mov
std
mov
inc
sbb
les
jbe
cli
stc
cmpsl
into
pop
jne
movsl
dec
add
pop
dec
pop
mov
xor
loopne
loope
dec
pop
mov
jmp
loope
add
and
adc
add
pop
out
jge
repz
stc
mov
lcall
jns
jp
ljmp
lods
pop
jns
in
lods
mov
bound
loopne
sub
insb
xor
pop
or
in
dec
lock
jmp
inc
sarb
push
and
aaa
pop
mov
mov
push
popa
mov
cs
cld
loopne
xorb
ja
and
push
imul
shll
test
aas
or
inc
xor
je
sub
imul
jo
repz
cmp
pop
mov
enter
jbe
pop
and
pop
sub
mov
jb
ljmp
insb
sub
or
leave
subb
cmpsb
cltd
push
lods
and
imul
add
jmp
cs
lahf
mov
sar
lcall
repnz
add
jb
mov
movsl
out
adc
in
xchg
outsb
pop
decb
adc
or
jae
subl
lods
loop
jge
add
hlt
sbb
in
shll
nop
dec
adc
addr16
cmp
pop
mov
inc
pop
add
and
fstl
xchg
rclb
adc
dec
push
stos
pusha
mov
inc
shll
adc
xchg
push
pop
sbb
xor
fwait
fst
inc
sub
push
dec
push
sbb
xchg
outsb
mov
mov
cmp
shrb
cltd
ror
xchg
jle
jo
lcallw
mov
add
mov
inc
ret
sbbb
xchg
sub
fiadds
jecxz
add
out
ja
ret
daa
mov
out
cmp
jp
mov
xchg
out
sub
mov
leave
push
xchg
imul
xchg
sub
add
pop
xor
cmp
in
adc
das
pop
xchg
fdivs
mov
mov
mov
pop
fmulp
sbb
imul
pop
cs
mov
andl
sahf
adc
mov
xchg
pop
out
rolb
mov
pop
testb
call
data16
in
xchg
cltd
mov
xchg
imul
xchg
push
mov
cwtl
mov
pop
fcomi
call
push
divb
xor
mov
ret
push
imul
stos
inc
xlat
int
loop
adc
xchg
into
mov
scas
or
dec
fsubl
loopne
and
cmc
int3
and
inc
sbb
adc
push
cmpsb
and
addr16
test
dec
pop
repnz
mov
stos
sbb
jb
cltd
cmpsl
outsl
lahf
mov
shll
fcomps
mov
cli
lds
jge
test
xchg
lods
push
and
insb
dec
add
or
jo
mov
movsl
lcall
sbb
and
dec
xor
fcomp
or
pop
cmpsl
insl
cmp
jl
lcall
ffree
and
pushl
pop
fistl
mov
mov
add
sti
xor
imul
stos
outsb
pop
dec
push
xor
shlb
stos
into
dec
push
push
stos
cmpsl
out
hlt
jmp
mov
add
cli
orb
mov
mov
insb
call
sub
test
mov
pusha
or
scas
je
pop
sahf
in
jo
movsl
dec
cmc
xlat
repz
dec
ja
xchg
or
stos
xchg
test
out
outsl
in
out
scas
into
rorl
gs
xchg
or
dec
lret
mov
cli
das
xchg
cmpsl
xor
out
loopne
fstl
and
sub
or
popf
and
pusha
and
je
cmp
xchg
sub
push
scas
adc
sub
and
mov
jl
dec
lahf
sahf
xchg
xor
dec
cmp
jbe
push
cwtl
adc
sbb
lea
pop
mov
outsb
imul
xor
dec
gs
loop
cltd
test
sbb
ret
add
push
sahf
bound
jg
popf
ds
or
aad
lea
mov
rcl
fcom
pop
jmp
sub
mov
dec
mov
xor
cmpsl
mov
push
stos
xchg
iret
xchg
mov
ja
out
in
nop
push
sahf
fsts
inc
jnp
mov
xor
jns
jne
push
and
stos
mul
push
clc
mov
sahf
mov
push
sbb
sbb
pop
cwtl
add
popf
jno
sub
xchg
imulb
mov
das
cmpb
lret
jo
cmp
sahf
pop
idivb
ds
int3
data16
aaa
cs
ljmp
or
loope
xchg
and
cltd
mov
arpl
das
add
push
pop
jne
mov
in
js
rorl
sti
fcoms
cwtl
push
mov
adc
sub
andb
in
push
out
push
sahf
not
mov
mov
mov
sti
sbb
call
pop
xchg
call
cld
pop
xchg
xchg
mov
jae
push
imul
addr16
mov
stos
cmpsl
dec
jp
mov
jo
xchg
ret
mov
xor
fildl
push
jbe
pop
jecxz
jae
std
rorl
jns
mov
xor
insl
xchg
jl
sbb
cmp
insb
xor
je
xchg
inc
and
mov
cmp
xor
call
or
or
stos
mov
stos
cmc
adc
jns
jecxz
mov
adc
lret
js
mov
lea
mov
mov
xor
sbb
andl
mov
loopne
mov
loop
ja
fucomi
sbb
add
cli
lods
into
stos
stos
sarl
lret
xor
test
lahf
test
in
jge
cmp
cmp
jle
mov
cmp
scas
ret
add
ret
movsb
das
cmp
fidivrl
push
movsl
sub
shll
jno
in
mov
cli
std
inc
filds
xor
clc
xchg
cmp
data16
dec
shl
mov
jbe
and
cmc
and
lods
cltd
dec
ds
negl
decl
jo,pt
adc
push
sahf
movsl
mov
loope
adcl
mov
in
xchg
repz
das
out
out
mov
lret
cli
icebp
aaa
jns
add
cli
outsb
inc
gs
mov
adc
es
scas
and
push
imul
xchg
inc
pop
jb
pop
roll
mov
jo
mov
jmp
lcall
dec
adc
cmpsl
dec
push
mov
dec
ret
std
adc
add
push
cmc
xchg
sbb
mov
imul
icebp
push
cwtl
sub
pop
add
pop
jmp
mov
int3
shrl
loop
mov
mov
out
fisubrl
xor
mov
hlt
nop
mov
pop
push
mov
cmpsl
jne
cmp
jl
fcompl
sti
push
mov
mov
pop
sbb
push
repnz
aaa
cwtl
arpl
mov
cwtl
jbe
xor
pop
jl
or
dec
inc
test
mov
mov
stc
xor
repz
push
jp
mov
adc
aaa
leave
leave
roll
cli
mov
sbbb
mov
inc
jno
addl
in
scas
mov
popf
movsl
aas
sbb
and
icebp
je
or
inc
arpl
pop
vmread
mov
cmp
or
mov
stos
jmp
push
mov
cld
mov
lret
rcrb
sbb
ljmp
dec
sarl
lret
lods
pop
les
push
sub
jno
roll
cmpsl
mov
mov
int3
mov
mov
loope
lret
lret
jecxz
mov
adc
push
movsb
or
imul
negl
cli
dec
mov
add
insl
add
mov
lock
mov
andb
jmp
popa
es
push
xchg
or
adc
orb
sub
push
inc
adc
loope
pop
gs
mov
xchg
push
fmul
mov
mov
jnp
fs
inc
test
cmpb
rcll
sbb
out
inc
mov
push
jb
pop
call
mov
and
xor
jp
test
into
lods
mov
pop
in
push
fwait
into
cmp
ss
sbb
imul
xchg
xor
mov
inc
mov
and
push
xor
cli
dec
dec
inc
imul
dec
mov
push
fprem1
fadds
mov
and
scas
mov
inc
pop
push
or
cmp
mov
push
mov
jae
into
popf
fbstp
push
sub
xchg
ss
xor
in
sub
fisubs
lret
push
imul
test
test
loopne
es
fsubs
add
or
xchg
test
lock
xchg
jb
test
jmp
push
cmp
or
add
out
ds
mov
jmp
nop
mov
rcr
nop
add
push
cmpsl
push
lret
mov
jae
sbb
adc
adc
or
pop
cmpsb
xor
popa
dec
push
out
mov
inc
rorl
jno
daa
xor
inc
mov
jge
lahf
dec
mov
sbb
inc
pop
push
dec
inc
cli
mov
ja
dec
jg
push
ljmp
adc
fistl
inc
mov
stos
subl
je
call
les
fnstenv
pop
or
fcompl
test
ja
jbe
enter
or
mov
add
cs
test
dec
or
je
pop
or
pop
cld
notb
add
jne
imul
jmp
xor
outsb
int3
adc
imul
cmp
dec
mov
inc
inc
clc
cmp
jbe
lock
pop
inc
xor
xchg
andl
mov
jo
sub
mulps
inc
out
dec
popf
aaa
insl
jne
rclb
popa
mov
xor
mov
inc
mov
sub
movsl
dec
ret
xor
repnz
sbb
icebp
jp
mov
scas
stc
in
bound
addb
into
jp
mov
push
insl
jmp
push
dec
test
pop
icebp
aas
or
es
jae
orb
mov
push
add
cmp
stos
mov
mov
test
out
daa
mulps
dec
pop
mov
add
add
or
shlb
sbb
aam
ds
shl
xor
es
adc
lea
in
inc
and
or
into
inc
loop
xchg
aam
inc
fnstsw
flds
jae
push
xchg
imul
aam
out
pop
inc
xor
cli
push
add
mov
enter
subb
fsubl
pushl
jmp
jg
dec
sbb
dec
push
jno
data16
dec
fsubs
hlt
or
push
test
fisttpll
scas
daa
jo
stos
xchg
dec
movl
jno
loopnew
adc
pop
or
push
into
add
stc
sahf
push
shlb
aad
shll
jge
cmp
ss
xorl
pcmpgtd
daa
cmp
jb
adc
sbb
loopne
sbb
adcb
fsts
cmp
daa
or
adc
xchg
mov
rsqrtps
jns
daa
jbe
cmc
push
or
clc
mov
int3
test
jno
pop
mov
jmp
ret
sbb
push
mov
adc
and
nop
out
or
sbb
test
inc
ja
fistpll
xchg
cmp
shlb
into
cltd
pop
mov
dec
aaa
in
stc
pop
mov
ljmp
dec
push
dec
or
cmpsb
cmpsb
roll
jb
pop
add
jnp
fdivl
mov
adc
dec
mov
add
jne
stc
fld
xor
cmp
das
and
out
mov
int3
pop
push
loope
mov
and
pop
lods
rcll
stc
mov
adc
cli
fldl
sbb
out
jb
mov
xor
push
mov
jbe
mov
out
insl
push
push
lret
xchg
push
bound
insb
daa
adc
in
out
mov
lea
lds
adc
mov
sbb
out
xor
jns
push
sti
fs
sti
daa
cmp
xchg
sub
sbb
bound
sub
fldl
insl
stos
push
sub
fisubrs
pop
sahf
or
push
fimuls
push
cmc
subl
loope
xchg
lcall
sbb
push
stos
mov
out
repnz
cs
jecxz
xchg
fwait
cmpsl
fwait
popa
xchg
pushl
addl
jb
inc
jmp
insb
jnp
sbb
mov
clc
push
scas
lock
push
decl
outsb
stos
pop
mov
sbb
aad
dec
je
dec
std
outsb
out
jle
fidivrl
adc
das
sub
xor
and
arpl
data16
les
in
aam
pop
jnp
sbb
or
sti
imul
js
cmp
test
fsubrl
lock
push
and
mov
mov
push
and
mov
ret
mov
test
stos
push
lods
addr16
dec
jle
xchg
xchg
sub
test
out
adc
push
shrl
lock
mov
xchg
notb
pop
andb
aas
js
sahf
aam
xchg
lahf
imul
movsl
out
cmp
or
sti
add
or
aas
ss
and
pushf
mov
cmp
cmp
mov
dec
jmp
push
push
push
xor
leave
js
dec
out
push
int3
push
adc
cmpb
sarl
mov
push
sbb
imul
sti
loop
mov
sub
lea
add
push
pop
loope
adc
sub
filds
out
jmp
ja
sub
dec
out
inc
sbb
frstor
scas
fstl
pop
mov
jle
cmp
ss
inc
mov
and
mov
in
filds
test
and
into
out
aad
call
enter
dec
mov
arpl
dec
cmp
pop
fcmovnu
push
xchg
push
and
mov
sub
xor
call
outsl
adc
mov
jae
fcoms
sysret
jecxz
mov
mov
shlb
xchg
xchg
pop
arpl
push
lds
push
push
mov
imul
xor
fwait
dec
mov
rcr
in
mov
scas
loope
es
outsl
outsb
inc
cmpsb
dec
push
imul
add
lods
arpl
cmp
mov
in
jmp
jge
cli
mov
popa
xlat
cwtl
cmpsb
mov
cld
mov
add
or
arpl
mov
aaa
cs
add
add
adc
aas
or
pop
jecxz
mov
fidivl
mov
das
or
inc
pushf
pop
cmpsb
lret
xchg
fwait
pop
xchg
arpl
jmp
dec
jle
sub
outsb
inc
dec
sbb
sbb
fwait
lods
mov
inc
mov
fsubl
enter
mov
fbld
mov
stos
imul
cs
push
hlt
pop
push
leave
jecxz
xor
pop
mov
pop
adc
cmp
out
mov
pop
mov
add
ds
and
add
jb
jnp
dec
dec
or
fildll
xor
fstl
xchg
add
dec
adc
xchg
je
fisubrl
xchg
std
xor
pop
mov
cmp
xor
push
aas
adc
repz
in
repz
test
jg
push
loope
je
rcrb
sbb
push
je
jl
cwtl
pop
pop
jnp
ret
int
cmp
daa
pop
jl
hlt
aas
xchg
and
push
pop
push
subl
repz
xchg
jl
testb
add
mov
mov
and
sub
inc
sbb
out
mov
lret
push
push
xor
mov
adc
daa
dec
out
cld
xor
pushf
and
loope
loop
nop
cli
in
jns
fs
jle
or
pushf
out
out
insl
enter
mov
cmp
and
scas
loope
cld
jns
std
rcrb
sbb
jo
aad
out
fmul
outsl
jmp
loopne
pop
push
or
loop
pop
insb
jne
shll
shlb
inc
or
mov
arpl
push
addr16
fsubrs
jmp
incl
push
xchg
add
enter
movsl
rcr
sub
sahf
inc
or
clc
out
push
mov
push
adc
inc
stos
mov
xchg
cli
and
lret
add
mov
push
mov
adc
sub
pop
aam
mov
test
jae
xchg
faddl
data16
filds
push
es
sbb
mov
aam
cmp
sub
jmp
lock
popf
dec
xor
shrl
inc
fsubp
mov
jo
fsubs
cwtl
mov
js
cld
mov
sbb
sti
pop
xor
repz
bound
rol
xor
xor
xchg
and
xchg
call
jl
cmpsl
int3
fidivrl
xchg
xor
mov
in
mov
cltd
movsb
xor
rol
push
mov
push
neg
fwait
leave
inc
cwtl
mov
mov
mov
push
add
je
dec
adc
mov
es
mov
lcall
push
add
adc
inc
stos
das
and
pop
inc
je
inc
mov
cmp
mov
or
ret
pop
inc
jb
cmp
mov
mov
int
mov
lea
pop
enter
mov
inc
shl
pop
popa
add
shrl
dec
or
pop
dec
push
mov
test
neg
jb
fidivl
fbstp
iret
dec
loopne
das
repnz
fcoml
xchg
pop
sti
inc
movsb
jbe
in
je
mov
pop
pop
std
into
in
sbb
mov
adc
lea
push
shrb
push
jb
pop
mov
notl
test
fstenv
add
das
xor
shrb
fbld
fidivrs
popa
std
jp
mov
stos
loope
lahf
push
mov
scas
mov
sarl
mov
mov
push
sahf
xchg
repnz
cmp
out
loope
das
clc
loopne
lret
gs
cltd
scas
clc
cmc
aaa
ja
and
shlb
rcl
mov
push
dec
cmp
ret
and
mov
pop
or
adc
xchg
pop
push
xchg
sbb
int3
ret
or
mov
cwtl
scas
sti
stc
aas
adc
push
mov
repnz
push
or
dec
dec
or
popa
sbb
sahf
popa
mov
or
int3
fidivrl
outsl
adc
dec
jo
gs
loopne
ja
push
rolb
xchg
mov
dec
adc
shll
push
jb
jnp
pop
inc
and
clc
inc
xchg
repnz
jmp
push
imul
pop
push
in
mov
ja
in
rep
jge
out
jge
test
stos
stos
mov
test
ja
js
mov
bound
or
pop
data16
add
fistpl
mov
inc
add
shlb
mov
fsubr
xchg
inc
out
sbb
fsubr
imulb
mov
adc
inc
push
xor
sti
ljmp
mov
cwtl
in
std
dec
mov
jp
inc
lock
lods
jae
int
out
fisttps
ss
cltd
inc
dec
out
adc
xor
mov
es
lahf
sub
and
ret
pop
stos
cmp
xchg
or
mov
xchg
sbb
pop
rcrl
out
mov
out
aam
or
ret
pop
mov
inc
push
ret
add
es
add
mov
sbb
inc
jae
iret
add
pop
pop
lret
cmp
cmpl
scas
lcall
inc
imul
add
mov
inc
mov
and
stc
imul
jecxz,pt
adc
ja
stos
test
jb
aad
dec
lcall
mov
inc
rcr
das
es
jo
out
jbe
sbb
outsl
push
mov
std
lret
inc
rclb
out
mov
xor
jmp
movsl
sbb
pop
clc
pusha
fcoml
jle
jne
fnstsw
sti
sbb
imul
fsubr
xchg
mov
add
test
jb
adc
pop
and
xchg
lds
hlt
push
je
sbb
cli
sbb
loopne
and
aam
addb
inc
mov
or
add
mov
push
mov
int
and
jo
imul
pop
xchg
insb
mov
xchg
jae
cmpsl
sar
jl
lcall
js
inc
nop
pop
rorb
pop
repz
and
daa
cmp
std
and
pop
jne
mov
pop
pop
lret
xorl
in
aam
and
shlb
cmp
je
mov
loopne
cmp
push
or
add
loopne
sarl
mov
cmp
fdivrl
cmp
rcr
mov
aas
mov
adc
loop
mov
inc
test
stos
loope
mov
out
out
outsl
lret
sub
fcmovu
inc
test
fcomps
shlb
dec
inc
ljmp
jmp
icebp
cmp
stos
mov
xor
stos
cmp
inc
iret
sti
pop
dec
call
insl
push
insl
les
sub
push
sub
rcl
mov
inc
fsts
dec
ljmp
fcomip
or
xor
cmc
cld
cwtl
pop
cld
js
dec
add
inc
push
imul
lcall
inc
into
pop
mov
mov
jbe
jmp
mov
loop
js
pop
mov
jnp
das
test
mov
cwtl
mov
sub
cmp
cmpsl
mov
addr16
mov
out
pushf
adc
inc
push
andb
imul
mov
insb
aaa
shrb
in
jl
dec
cs
arpl
inc
pop
scas
inc
jo
push
cmc
cmc
cmpsw
scas
mov
fdivr
add
xor
fstps
lret
cld
dec
sbb
jge
cwtl
xlat
mov
push
jae
test
enter
cmp
repnz
adc
sub
cwtl
cmp
mov
cmpsb
add
clc
add
sub
leave
das
adc
dec
in
cs
cmp
movsl
jae
test
fdivs
arpl
xchg
push
packuswb
push
insl
add
decb
sbb
mov
and
icebp
insl
fsubrl
daa
mov
dec
imul
inc
push
or
cmpsl
aam
lds
adc
xchg
popa
ss
shlb
jne
testl
dec
xchg
frstor
mov
aaa
mov
fdivrl
in
sub
mov
mov
pop
xor
adc
adc
cmp
push
jnp
popa
stos
xchg
insl
mov
cwtl
mov
out
or
subb
push
pushf
lods
and
adc
nop
int
cwtl
call
outsl
xchg
mov
mulb
sub
sbb
shlb
sbb
clc
jno
fadds
jmp
ret
mov
test
hlt
mov
inc
push
idivb
jmp
gs
mov
or
and
lods
push
leave
adc
mov
push
mov
imul
mov
mov
stos
repz
add
loopne
mov
dec
inc
cltd
push
xchg
scas
sub
cmpsb
data16
sbb
mov
stos
jle
mov
adc
movsl
out
dec
adc
imul
or
and
data16
out
push
adc
arpl
testb
jge
cmp
pop
movsb
lods
aad
dec
out
test
jnp
dec
notl
cmpsl
jmp
and
xor
stc
lahf
and
push
setbe
lret
test
std
add
mov
push
rcr
aas
xchg
or
adc
adc
mov
push
shll
sbbb
insl
inc
mov
mov
sbb
adc
push
movsb
jmp
xor
jns
mov
fldt
push
push
scas
test
jb
push
out
pop
xor
and
repz
adc
sarl
xor
cltd
xor
repz
popf
cmpsb
outsb
inc
sub
sub
in
jns
pop
pop
stos
mov
clc
or
mov
sti
inc
jg
in
mov
add
or
dec
jle
lods
mov
movsl
jnp
loop
inc
rorb
stos
sbb
fwait
int3
dec
or
push
add
pusha
stos
inc
out
sbbl
mov
clc
rcrb
psraw
pop
mov
and
mov
mov
xlat
pop
sub
nop
iret
rorb
dec
aam
pop
mov
pop
and
sub
or
mov
aas
push
filds
mov
inc
sub
mov
adc
gs
xchg
pop
cmp
lahf
jae
icebp
aam
pop
inc
ror
addr16
mov
sub
pop
jns,pt
push
popf
out
ljmp
out
mov
xorb
jmp
lods
pop
mov
fwait
cld
mov
lds
repnz
or
inc
push
mov
jp
mov
pushf
mov
jge
or
pushf
outsb
push
sarb
testl
sub
iret
mov
fdivrs
icebp
lahf
inc
lret
mov
or
cli
cmp
xchg
pop
int3
orl
add
mov
inc
pop
cmpl
jle
lea
ljmp
orb
add
dec
pop
cs
and
lcall
adc
test
out
cli
push
add
test
and
lock
icebp
sub
icebp
rcr
stc
bnd
out
mov
sti
xor
pop
gs
enter
add
adc
insb
mov
adc
push
and
xlat
adc
inc
insb
mov
xchg
fsubr
mov
xchg
inc
sbb
jne
or
imul
ds
mov
lods
stos
fs
jle
dec
sbb
mov
cwtl
scas
add
adc
or
out
mov
xchg
dec
jmp
cmp
cltd
in
mov
dec
xchg
mov
inc
cmp
int
shrl
ljmpw
test
call
xor
push
inc
xor
or
sub
xor
xor
xchg
adc
lods
cmp
fldenv
mov
push
add
lods
sub
mov
xor
insb
fwait
enter
imul
cmp
add
inc
decl
lret
jle
sbb
mov
es
push
pop
sub
inc
stos
or
sbb
test
js
into
ror
int3
pop
nop
movntps
scas
das
mov
cmp
push
or
repnz
std
addr16
jp
or
mov
push
sbb
push
cs
or
adc
dec
dec
sub
scas
imul
and
js
sub
arpl
jmp
or
ljmp
hlt
sbb
add
fmull
and
xchg
imul
dec
and
int
sti
push
imul
pop
jp
mov
mull
mov
cmp
cmpsl
pop
ret
jo
fs
jbe
mov
mov
jo
js
movl
mov
xchg
push
xor
test
jecxz
sbb
jbe
and
lret
es
dec
sub
lock
stos
or
push
fisubrl
fs
add
xchg
ficompl
xchg
mov
mov
aas
and
cmp
push
inc
cmp
dec
sahf
int
push
dec
int
ret
sahf
in
dec
mov
adc
jb
iret
adc
inc
lcall
fmuls
roll
mov
fs
idivl
in
xlat
mov
and
stos
pusha
cmp
mov
mov
pop
scas
je
push
repz
xor
rorl
push
inc
mov
testl
rorb
loop
cltd
leave
inc
pop
dec
movsb
movsb
xor
push
pop
sub
loope
rcr
gs
ret
pop
dec
xchg
cmp
xor
sub
or
and
outsb
mov
adc
adc
jae
mov
sbb
repz
sub
lds
push
jp
es
inc
lahf
lods
testl
lock
pop
push
filds
add
test
clc
repnz
in
testl
movsb
and
arpl
push
add
stos
pop
inc
add
mov
pop
push
nop
push
mul
xchg
lock
cwtl
sub
daa
lock
aam
dec
movsb
push
aaa
addr16
add
mov
and
or
mov
fmul
pop
add
inc
and
into
jae
test
test
rcrl
mov
scas
jle
out
push
cmpsl
arpl
sub
adc
pop
jl
sub
push
movsb
rcrl
aas
loope
cs
insl
add
xchg
ret
cmp
xchg
pop
mov
sbb
inc
mov
and
and
and
push
out
push
gs
sub
clc
shrl
outsb
inc
mov
inc
jecxz
add
inc
dec
xchg
out
pop
arpl
es
dec
stos
cmc
mov
xchg
pop
push
rolb
cwtl
sahf
xor
inc
out
mov
mov
mov
mov
dec
adc
loopne
push
sub
jg
pop
inc
lcall
jl
mov
call
mov
mov
push
mov
fs
mov
pop
ret
sub
int3
sub
pop
inc
mov
dec
sahf
mov
sbb
clc
add
dec
cli
mov
mov
out
push
dec
jle
and
pop
testl
dec
and
in
adc
mov
or
dec
mov
dec
sbb
std
stos
imul
jae
sub
dec
xor
mov
sbb
movsl
jne
cmpsb
jp
loope
add
loop
pop
sti
test
imul
imul
fs
xorb
sub
cmp
mov
test
shrl
add
loopne
hlt
and
aaa
dec
mov
jge
ss
or
cmp
scas
popa
xor
rolb
xchg
scas
cmpsl
sbb
pop
xor
les
mov
repz
addr16
ljmp
gs
sbb
scas
and
sub
scas
subl
lcall
test
pop
lds
ret
cld
cmp
inc
lret
je
decl
lea
pop
adc
xchg
pop
cld
fsubrs
xchg
jns
add
shll
xchg
hlt
icebp
mov
into
stc
imul
das
mov
ds
stos
adc
negl
jge
inc
jmp
je
pop
mov
jo
or
movsl
pop
xor
or
xchg
jne
sub
cmpsb
rcll
xor
push
or
mov
mov
fdivrl
in
adc
xchg
mov
jmp
pop
mov
jo
js
add
inc
sahf
jns
jb
push
mov
aad
xchg
movsl
jmp
andl
add
cmp
js
ds
xchg
mov
notb
enter
xchg
testl
ljmp
out
push
push
cmp
pop
jb
imul
sbb
xchg
add
fwait
ret
and
pushf
mov
xor
and
test
out
dec
xlat
dec
std
sbb
lock
mov
or
imul
in
lods
and
mov
stos
dec
xlat
sub
dec
pusha
int
stos
jno
data16
rorb
pop
xor
aam
insb
add
xchg
ret
cs
inc
mov
pop
xlat
push
insb
xchg
push
cli
rcrl
test
xorb
mov
js
or
xor
fcmovnu
mov
imul
pop
imul
pop
in
mov
idivl
lds
sahf
or
scas
adc
jp
mov
shr
fpatan
sub
sbbl
fnstenv
leave
stos
iret
roll
mov
sbb
jno
scas
cmp
int
bound
jb
icebp
pop
decb
push
add
sbb
adc
mov
xchg
int3
fstps
ret
arpl
shlb
ja
das
adc
inc
ljmp
sbb
adc
es
lock
adc
dec
cli
insb
mov
enter
movsl
pop
stc
std
dec
push
xchg
and
cmpsb
sbb
jg
or
data16
jmp
mov
loope
cltd
mov
push
mov
and
jnp
mov
inc
pop
imul
scas
call
jns
xor
test
fsubs
dec
jmp
in
fcmovu
out
fdivrs
adc
push
jae
iret
jmp
and
orl
les
into
fwait
pop
fdivrl
push
shll
mov
dec
and
insl
pop
inc
xchg
jp
sub
stos
pusha
and
mov
dec
lcall
sub
out
es
pop
loope
sbb
stos
or
mov
test
das
xchg
xlat
mov
imul
add
push
xor
into
aaa
dec
fadds
add
lods
mov
jle
xchg
loop
push
iret
out
loopne
mov
xchg
std
or
fbstp
mov
xchg
push
xor
fcompl
mov
pop
int3
mov
xchg
sahf
xchg
fsts
bound
add
inc
dec
and
das
add
bound
jmp
dec
sbb
shlb
cmc
jg
mov
xchg
addl
jl
push
cmpsl
mov
loope
clc
cmc
loopne,pt
and
sbb
adc
ljmp
or
in
jbe
dec
pop
gs
rclb
jmp
dec
mov
and
insb
std
loop
mov
mov
inc
mov
lret
sub
lret
add
dec
fsubrs
mov
mov
and
push
jno
jecxz
xchg
call
icebp
fsubp
neg
inc
xor
sub
xchg
push
push
loope
mov
mov
or
inc
data16
test
jecxz
push
push
push
nop
sbb
in
je
movsb
push
mov
sub
xor
push
lret
into
movsb
sti
mov
cmp
ljmp
xchg
sub
int3
fsubs
sbb
mov
hlt
ja
cwtl
inc
das
mov
orl
ja
cmpsb
mov
xor
out
imul
lcall
js
scas
xchg
movsb
jp
dec
stc
push
fxtract
pop
addr16
mov
mov
test
cmp
and
push
mov
push
mov
push
xor
xchg
insl
sahf
adc
addb
xchg
xor
sub
or
add
lea
iret
bound
stos
adc
xchg
push
adc
dec
dec
movsl
and
mov
xchg
mov
pop
and
out
or
test
mov
add
pusha
inc
and
inc
sub
mov
scas
sub
inc
outsl
loope
cmp
sub
aas
adc
movsb
rorb
loopne
add
sub
fisttps
aad
adcl
test
outsb
shl
dec
fcompl
add
jge
nop
ret
loopne
aam
dec
or
std
sub
mov
sbb
out
inc
neg
popf
cmpsl
and
sti
xor
stos
inc
fildl
jecxz
mov
fistps
divb
pop
inc
pop
cli
enter
lcall
mov
repnz
adc
xchg
arpl
mov
push
fs
into
push
mov
dec
js
cmp
int3
pop
mov
sar
xchg
cs
xor
xor
cli
insl
jns
imul
sahf
fs
adc
inc
loope
cmpsb
add
aaa
das
ljmp
xor
cmp
mov
arpl
add
xchg
cmp
push
xchg
xorl
jle
inc
and
xorl
lret
pusha
sahf
lds
test
xlat
adc
movsb
push
data16
dec
inc
outsb
dec
push
mov
aam
dec
xchg
das
cmpsl
jo
xchg
inc
pop
push
mov
hlt
das
mov
aad
jo
mov
mov
dec
out
stos
pop
stos
hlt
fwait
jns
dec
icebp
sbb
cmp
xchg
add
dec
mov
cmc
xchg
pop
push
orb
outsl
loopne
pop
lods
or
ss
cmp
inc
test
mov
jne
xchg
lods
orl
arpl
xor
push
imulb
mov
adc
sbb
push
xchg
mov
loopne
data16
sub
jns
lock
sbb
and
into
dec
and
fisttpl
in
fnstcw
push
stos
fsubr
rcrl
bnd
adc
adc
jg
pop
repnz
xor
mov
rol
cmp
sbb
push
scas
std
frstor
rcrb
pusha
pushf
cmp
outsb
fs
out
mov
lcall
test
insl
dec
fnsave
mov
adc
mov
push
xchg
lods
jle
in
sub
je
test
fldenv
mov
cmp
addr16
jp
shrl
outsl
ja
stc
in
sahf
dec
pop
ljmp
xor
pop
add
mov
addr16
mov
push
mov
or
leave
mov
sub
ret
add
scas
jbe
dec
xor
out
pop
sbb
mov
dec
push
cmp
ret
mov
dec
jb
cltd
push
and
adc
outsl
dec
aas
cmp
push
in
xor
or
cmpsl
int3
pop
outsl
ljmp
dec
cmp
cwtl
movsb
dec
adc
stc
lock
stos
cmp
and
cmp
aas
hlt
xlat
pushf
jnp
fisttpll
mov
js
jns
cwtl
and
das
test
sub
inc
sbb
jbe
shll
lret
aad
test
push
fistps
xor
sub
hlt
stc
std
mov
sub
ret
cmp
imul
dec
addl
sbb
xor
pop
repnz
lret
inc
aas
jo
and
pop
adc
xor
and
imul
jae
mov
data16
mov
and
pop
ret
les
test
xlat
adc
lahf
dec
xor
lea
out
ljmp
jge
fildl
fdivs
jne
cmp
pop
loopne
lock
adc
pop
xchg
push
pop
cmp
xchg
rclb
cltd
add
lods
dec
xor
jne
jne
popa
or
pop
adcb
xor
jo
sub
push
adcb
shl
mov
repz
leave
das
lea
cmp
mov
cmc
add
pusha
mov
push
mov
insl
inc
adc
pusha
lcallw
int
shll
repz
pop
push
push
mov
sbb
cmp
cwtl
push
jne
push
mov
cld
cmpsb
jo
hlt
movsl
int
ret
js
sub
jb
in
cmpsl
mov
sub
and
test
repz
push
inc
pop
repz
push
inc
ja
mov
hlt
sbb
or
pop
stc
pop
std
shrb
fists
xchg
into
mov
and
adc
jge
imul
sbb
pop
scas
lea
loop
leave
mov
fs
das
rol
jge
arpl
sub
js,pt
sbb
fs
lds
insl
or
mov
jns
fnstcw
and
xchg
dec
mov
call
shrl
mov
inc
out
test
sbb
icebp
xchg
clc
cmc
jnp
xor
jmp
int3
stc
cmpsl
adc
gs
cmp
insl
dec
ss
lock
adc
fdivrl
ror
xchg
mov
inc
jne
or
sbb
xchg
stos
dec
sub
sub
xchg
inc
mov
popf
and
push
and
mov
inc
out
inc
test
or
shl
cmp
pusha
mov
jg
loop
cmp
test
dec
dec
inc
jmp
imul
mov
sbb
sbb
xchg
add
or
add
lods
push
dec
sbb
and
popf
adcl
stos
xchg
lods
cmc
scas
cld
mov
and
outsl
lret
pushl
lret
je
jp
xor
lret
mov
mov
addr16
addb
jne
out
sub
pop
mov
jmp
fildl
xchg
sub
negl
cmp
inc
andl
jns
scas
push
adc
xchg
testb
mov
decl
or
sbb
sub
mov
decb
and
mov
ljmp
int
int3
add
out
dec
lcall
nop
xchg
outsl
ret
jle
push
in
or
xchg
xchg
popf
test
jmp
lds
sbb
xor
imul
outsl
outsl
stc
rcrb
pop
dec
sarb
lahf
shrl
mov
je
cmpsb
fcmovne
fcoml
lcall
and
xchg
jns
rcrb
inc
cmp
popa
sarb
aaa
xor
ret
out
mov
lods
jbe
mov
push
dec
js
cs
bound
sbb
and
outsb
cltd
inc
sbb
jg
stc
es
insb
mov
mov
fcoml
imul
call
popa
cld
popf
mov
imul
cs
out
mov
pop
arpl
sub
enter
push
xchg
les
pop
and
mov
out
lods
repz
and
jge
add
aaa
jne
jbe
and
stos
xor
add
arpl
mov
push
imul
xchg
inc
mov
cmp
int3
sbb
sbb
stos
push
bound
sub
cmpsl
mov
mov
cli
add
in
dec
dec
sarl
and
aaa
and
gs
out
push
loopne
out
imulb
sub
roll
add
push
je
xorl
aam
iret
lret
jo
subb
fs
fs
sub
pushl
aad
and
stos
mov
sub
mov
pop
jno
in
aas
jo
pop
push
sarl
loopew
in
enter
out
xchg
ss
push
mov
mov
cmp
mov
dec
and
fmull
in
jae
pop
inc
mov
mov
shl
ficoms
lds
mov
sub
iret
sbb
cmc
ret
or
in
pop
popf
xlat
mov
mov
inc
jge
mov
cwtl
dec
stos
jmp
pop
repnz
repnz
lcall
xchg
sahf
jecxz
out
mov
call
ret
ret
loopne
inc
sub
push
dec
pushf
addl
push
ret
xchg
pop
xor
cld
jp
xor
sarl
in
or
pop
lret
in
pop
lea
aam
ret
lret
call
jle
rorb
sbb
push
mov
fsub
aad
in
das
cmp
shll
fnsave
hlt
lret
adc
xlat
inc
lret
stos
lret
or
pop
pop
inc
outsb
test
stc
in
lret
out
mov
pusha
mov
or
arpl
inc
xor
cmc
rcrb
lahf
cmp
add
pop
inc
pop
jo
add
mov
mov
push
mov
scas
pop
ret
and
les
loop
adc
or
inc
out
adc
inc
adc
mov
out
xchg
adc
push
mov
sub
stos
les
loop
and
inc
fnsave
xchg
jmp
push
or
fs
int3
std
aad
scas
fimull
in
js
xor
xor
push
and
cltd
xor
push
or
jle
cmpsl
mov
fsubrl
adcl
cli
and
repz
in
lds
sti
adc
popa
mov
outsb
add
stos
popf
fmull
shrl
mov
pop
mov
sub
jns,pt
int3
mov
adc
pop
iret
xchg
imul
movsl
cmpsb
xor
stos
add
or
popa
arpl
adc
xchg
fscale
leave
lods
sub
rolb
daa
test
fisttps
dec
inc
fldt
pop
mul
cli
out
and
push
cli
push
int3
xor
movsb
into
ja
mov
sar
enter
sahf
cmp
cli
test
xor
mov
push
imul
sub
mov
jmp
mov
pop
in
dec
lahf
and
insb
mov
inc
lahf
cmpsl
pop
sub
mov
dec
pop
repz
movsl
lock
dec
aad
adc
fldt
dec
add
jo
imul
out
xor
add
je
in
daa
ljmp
sarl
mov
add
dec
ret
mov
ss
add
mov
push
push
sti
rorb
loop
push
jge
into
dec
lahf
jno
and
std
fsts
mov
cmp
in
rcl
ss
pop
shl
repnz
sahf
test
sub
mov
push
dec
insl
push
and
test
pop
data16
jmp
int
push
sar
inc
mov
mov
js
js
inc
mov
pop
sub
pusha
xorb
sub
mov
fsubrs
das
int
ret
mov
jge
push
mov
fldcw
mov
mov
iret
loope,pn
jecxz
mov
rcr
mov
test
inc
mov
xor
leave
movsl
cld
sub
mov
mov
or
jg
scas
jnp
pop
sbb
sbb
popf
xchg
adc
jecxz
in
xchg
dec
pop
rcl
adc
fstps
mov
scas
mov
mov
inc
test
or
jns
icebp
mov
mov
aam
outsl
in
dec
mov
add
push
push
clc
xchg
daa
aam
ljmp
into
nop
jmp
mov
in
std
mov
ret
addb
int
jp
xchg
fimuls
pop
aas
push
xchg
vunpckhps
sub
xchg
mov
lahf
stc
xchg
pop
fdivrs
stos
and
clc
xchg
std
movsl
inc
and
sub
ret
xlat
rol
mull
lret
jle
jns
or
hlt
sbb
ja
xchg
jns
inc
js
shrl
mov
adc
aaa
jecxz
pop
or
dec
fiaddl
and
sbb
mov
ljmp
sub
inc
push
push
repz
sti
xlat
pop
push
push
jg
aaa
jno
xorb
xchg
pop
jle
add
mov
aaa
scas
add
mov
mov
and
push
push
sbb
inc
out
clc
push
adc
lea
test
mov
int3
push
xor
into
ss
xchg
or
popa
add
and
cmp
add
in
cwtl
or
outsl
adc
out
outsb
shll
dec
push
xchg
dec
dec
xchg
xor
and
push
sbb
ljmp
aad
data16
loop
addr16
or
pop
test
shlb
les
adc
rcrb
fdivl
and
js
sbb
xchg
sbbb
jmp
sbb
jbe
shll
mov
mov
add
fwait
pushf
xchg
or
lea
mov
cwtl
insb
xchg
mov
and
jmp
add
dec
xor
xchg
test
int
pop
mov
push
jmp
test
push
loope
cmovs
popf
xor
xlat
loope
mov
jmp
pop
add
ljmp
aas
push
add
cmp
add
scas
xor
pop
loope
pop
movsl
ss
clc
xor
popf
pcmpgtd
mov
sahf
pusha
out
pop
jmp
stc
jl
pop
mov
imul
mov
rorl
adc
sub
and
std
jns
scas
dec
jno
in
mov
int
push
cmp
dec
aas
mov
jp
ret
nop
jp
fisubrs
or
cmc
cmp
mov
inc
jl
xchg
and
mov
mov
fcomi
inc
or
mov
jmp
das
incl
daa
xlat
scas
jbe
leave
rcll
jo
push
pop
popa
insl
lods
push
pop
aam
jecxz
insl
adc
sub
xchg
sbb
lock
push
push
xchg
inc
movsb
mov
push
lcall
pop
loopne
repz
or
stos
cmp
xor
dec
or
outsb
xchg
sub
loopne
add
frstor
jne
mov
ljmp
sub
jno
rolb
pop
and
jmp
adc
clc
cmp
das
sarl
mov
sbb
or
mov
jnp
inc
mov
into
sbb
push
push
adc
lods
pop
dec
rclb
cmp
dec
fwait
mov
jecxz
mov
pop
lds
mov
xchg
mov
inc
loopne
xchg
cli
jns
inc
outsb
int
pop
fisttpl
adc
or
push
fucom
push
mov
arpl
pop
xchg
mov
mov
mov
add
xor
push
aad
call
inc
adcl
into
movsl
leave
leave
and
pop
cmc
mov
cld
je
inc
fdivrp
sub
sbb
shrl
sbb
arpl
dec
ret
cmp
mov
cmc
fstpt
fwait
xchg
jecxz
adc
idivb
xchg
ficoml
mov
cmc
pushl
and
add
lock
iret
push
adc
aas
inc
cmp
add
popf
xor
fxch
sub
fisubrs
and
sti
popa
xchg
dec
cs
mov
rcll
subb
jb
in
loop
sbb
inc
dec
cs
out
push
mov
inc
pushf
mov
das
enter
rolb
jno
pop
test
push
nop
aaa
cmpsb
frstor
fbld
xchg
pusha
nop
xchg
cmpsb
or
into
mov
xlat
daa
inc
mov
js
mov
mov
fldcw
inc
js
hlt
mov
cld
outsl
int
mov
in
in
imul
cwtl
frndint
mov
test
mov
lcall
les
or
insb
mov
sub
sub
dec
sbb
sub
cmp
xor
xor
orb
mov
test
sbb
mov
add
jnp
push
mov
pop
lods
xor
lcall
add
cmpb
cmc
jge
outsb
dec
xor
add
mov
pop
pusha
jle
lret
mov
sbb
insl
out
xor
pop
dec
cltd
movb
xchg
xorb
xchg
pop
sti
cmp
mov
insl
pop
xchg
aam
add
sbb
cltd
adc
mov
inc
xchg
ljmp
mov
xchg
test
rcr
out
add
add
ljmp
fs
icebp
inc
leave
and
adc
dec
mov
pop
cmp
mov
stc
jmp
pop
sub
pop
int
sbb
mov
stos
inc
inc
jmp
inc
addr16
loop
es
daa
gs
add
xchg
add
subb
insl
mov
cwtl
sub
jecxz
sub
cmp
sahf
cmc
push
adc
addr16
mov
pop
sbb
mov
outsb
outsb
ror
fadds
mov
les
cmpl
scas
lahf
leave
cld
mov
aam
mov
adc
aaa
mov
sbb
cmp
xor
xor
xchg
outsl
dec
inc
sahf
ret
xchg
test
add
mov
mov
jg
or
dec
adc
fidivl
out
cmp
pop
cmp
out
pop
add
out
outsb
rcl
hlt
sbb
cmpsb
popa
add
xchg
movsb
xchg
push
int3
les
pop
sbb
mov
cltd
lods
inc
and
jmp
mov
movsb
pop
pop
notb
jb
mov
xor
pop
or
or
sbb
inc
jb
cmp
arpl
outsl
gs
sahf
std
or
lds
jne
dec
cmc
mov
popa
jle
xor
and
pushf
sbb
jnp
cld
and
jne
addr16
xchg
movsl
cmp
adc
jp
div
adc
jmp
pusha
bound
imul
xchg
fmull
addr16
sahf
or
in
jmp
repz
pop
xchg
pop
push
ss
and
movsb
push
and
shl
inc
nop
int3
pop
call
stos
dec
push
fidivrl
jl
inc
add
imul
adc
dec
scas
loope
inc
out
jnp
mov
leave
shlb
push
dec
jnp
xchg
jnp
imul
nop
aad
dec
and
sub
lret
fs
pop
push
sub
xchg
fisubs
arpl
bound
loope
push
xorb
fidivrl
jp
stc
inc
sbb
fiadds
and
inc
bound
push
adc
add
leave
mov
xchg
in
arpl
fwait
shll
xchg
mov
divb
pop
mov
pop
add
jge
push
je
lret
or
notl
pop
aad
jae
and
fidivs
imul
jl
mov
add
jae
sbb
loopne
fisubrs
cmpl
repz
outsb
lods
pop
sub
pop
push
cmp
or
aad
pusha
inc
int3
jno
out
xchg
in
shrb
scas
fldt
or
mov
test
aas
cmp
push
push
dec
lods
inc
and
sub
pop
in
cwtl
xchg
sti
pop
in
stc
pop
cmp
andb
scas
dec
and
test
mov
aas
cmp
mov
pop
sbb
sub
fwait
scas
push
bndstx
dec
orl
daa
lods
cltd
leave
insl
sub
leave
jo
cmp
cmp
pop
mov
push
cmp
and
or
push
out
test
ss
push
and
and
stc
fucom
mov
cmp
pop
pop
push
mov
fs
dec
and
mov
push
nop
adc
lods
push
xchg
mov
xchg
popf
out
ret
pop
sub
pop
adc
mov
cmp
test
push
cltd
in
pop
or
xor
pop
mov
cld
jnp
aam
jmp
xchg
lret
scas
mov
inc
enter
add
pop
sub
orl
popf
sbb
fldcw
pop
xchg
test
jecxz
cli
adc
and
jl
lret
and
jnp
pop
fs
sbbl
dec
xor
xchg
add
fldenv
xor
aaa
sbb
xor
dec
mov
mov
or
jp
dec
arpl
pusha
leave
fcompl
je
mov
lods
mov
into
jo
aas
clc
fwait
inc
push
jp
mov
xlat
clc
xchg
cltd
test
xchg
out
pop
test
movsb
lods
pop
lret
test
mov
xlat
fisttpl
pushf
add
xchg
test
jle
ret
comiss
lret
xor
into
inc
pop
xchg
out
int
jo
inc
fstps
idivl
leave
or
push
mov
loope
outsl
incl
cmp
test
mov
adc
adc
mov
fs
mov
cmpsb
sbb
mov
adcb
pop
aam
mov
andl
pop
lret
fnstcw
rcrl
andb
xor
mov
sbb
mov
mov
mov
popa
add
pop
shlb
cmp
or
or
cmp
mov
lahf
cltd
sub
and
or
mov
adc
push
dec
test
xor
push
jecxz
sbb
sub
dec
test
dec
test
xor
divb
into
scas
ja
add
fdivrl
outsb
pop
pop
daa
dec
or
or
inc
dec
cmp
mov
xchg
inc
sbb
jl
add
push
and
test
sete
cli
push
leave
xchg
lock
xchg
andb
adc
or
push
std
lsl
jb
in
fadds
aam
mov
mov
xor
push
out
jecxz
or
jg
ret
mov
push
jns
push
cmc
scas
sbb
or
cmp
in
adc
subb
jb
outsb
pushf
jg
mov
popf
jne
and
int3
xor
arpl
xchg
orb
dec
fisubs
mov
loopne
push
out
mov
hlt
call
imul
jg
lret
addb
cmpl
lret
mov
inc
and
push
mov
sbb
push
ljmp
fistpll
xchg
dec
add
ss
cmpsb
arpl
lea
cmp
test
fildll
insb
mov
cmp
and
cmp
dec
aam
enter
xchg
or
sbb
lea
enter
mov
cmpl
outsb
xor
and
adc
add
and
push
mov
xchg
sbb
stc
adcl
xchg
sbb
iret
add
or
imul
pop
jns
and
out
and
icebp
in
pushf
inc
ljmp
mov
xor
mov
add
stos
mov
cmp
xor
outsb
ja
arpl
dec
xlat
push
test
mov
in
dec
fistpl
sub
cld
rcrb
stc
mov
in
pop
xchg
lods
mov
add
lahf
int3
rclb
add
xchg
decl
loop
and
mov
push
aam
add
push
add
inc
rclb
sub
imul
popf
ljmp
mov
cli
jle
movsb
jg
loop
es
xor
pop
mov
sti
mov
mov
in
add
repz
lds
jnp
je
insl
xor
mov
mov
jbe
and
xchg
inc
rol
add
call
sub
add
ss
cmpsl
test
mov
or
or
pop
popf
jne
push
mov
or
scas
push
push
sub
notl
dec
and
mov
cld
testb
adc
hlt
ss
xor
fildl
push
aaa
int
jl
push
mov
jge
inc
xchg
subb
sub
jnp
incl
in
cmp
cli
sbb
iret
filds
sbb
inc
or
add
cmp
inc
out
adc
push
test
dec
movl
lods
pop
in
mov
stos
pop
shlb
sarl
sbb
xchg
mov
xchg
es
enter
mov
andl
sahf
mov
adc
stos
inc
sub
mov
out
or
mov
jbe
shrl
aas
and
outsb
ja
aas
ror
sbb
add
jns
pop
fcomi
addr16
std
dec
sbb
mov
jp
rclb
and
sub
lock
and
mov
jbe
pop
into
and
xchg
jmp
sub
mov
enter
daa
das
std
jp
dec
mov
cltd
repz
popa
dec
ja
shrl
hlt
pop
dec
cltd
lahf
mov
out
lret
ficompl
test
inc
pop
add
jmp
mov
pop
enter
add
xchg
cmp
add
push
cmc
adc
repnz
pop
rclb
fidivrs
cmp
or
push
or
dec
stos
les
push
dec
or
jnp
xor
addb
adc
and
aam
sub
pop
shll
push
shll
lcall
inc
dec
stos
pusha
sbbl
pop
sub
xor
test
ja
dec
and
or
sahf
jb
fiadds
mov
out
pop
int3
loop
sbb
je
jae
adc
inc
fwait
xor
dec
test
push
add
mov
fstpt
insb
add
pop
mov
xchg
mov
std
inc
popa
rcrb
push
hlt
fildll
ds
pushf
push
mov
test
rclb
cs
mov
xor
xlat
or
push
fdivrl
ret
scas
shll
sbb
arpl
mov
push
dec
mov
mov
xor
inc
add
dec
mov
adc
add
mov
jns
sub
cwtl
bound
shll
sahf
imul
xor
xor
cmpsb
mov
movsb
xchg
pop
add
mov
shl
push
in
fildll
jns
xchg
and
das
push
subb
sti
push
rcrb
sbb
push
roll
or
mov
sbb
sbb
push
mov
fistl
adc
jecxz
cmpsl
jno
sub
ds
pop
lcall
jnp
insl
ja
int3
pop
popf
stos
pop
mov
mov
cmp
mov
push
arpl
sbb
jbe
sub
popa
ret
nop
pushf
cltd
out
popa
jmp
fsubrl
scas
mov
cld
cmp
mov
pop
mov
fcmovbe
xchg
sbb
int
lret
xlat
lret
outsb
sub
das
push
cmp
mov
divb
icebp
pop
insl
pop
jo
fsubrl
repz
push
add
insl
lret
sub
sbb
scas
push
dec
call
mov
ret
sahf
mov
into
adc
call
loope
dec
loope
sub
repnz
out
or
xchg
xchg
fimull
fidivrs
imul
clc
xor
add
adc
call
ss
cmp
cwtl
sub
fwait
and
mov
xlat
sub
push
adc
inc
test
loope
mov
lret
xchg
iret
adc
es
rolb
cmp
dec
xchg
jae
ss
into
sub
mov
mov
mov
sub
testl
rcrl
mov
adc
test
xlat
and
push
cmpsb
or
sbb
hlt
jecxz
push
adc
inc
mov
jbe
add
shlb
mov
sub
das
fsts
jmp
stos
jle
sub
dec
jg
dec
dec
or
jp
xor
or
dec
jle
cmp
xchg
inc
push
xchg
sbb
in
jle
cmpb
dec
sub
pop
dec
lock
sarb
pusha
ret
pop
and
xlat
pop
mov
add
loope
xchg
push
jle
test
loopne
mov
xor
in
and
out
fpatan
popa
mov
and
mov
cmp
mov
jg
outsb
cld
out
mov
inc
scas
mov
pop
pop
jp
push
mov
loop
mov
leave
or
mov
mov
push
mov
xchg
imul
push
add
add
cwtl
pop
leave
push
adc
addr16
dec
rolb
aaa
add
out
mov
pop
test
outsl
or
add
mov
scas
lea
mov
cmp
push
out
fadd
xchg
pop
in
mov
pop
pop
pop
fnsave
test
jne
outsl
fldenv
nop
mov
in
inc
out
xor
jno
add
nop
out
or
gs
sbb
int
imull
pop
add
mov
ror
pop
out
shrb
fidivrl
scas
xchg
lds
ficoms
mov
sarb
in
das
js
lds
into
mov
push
mul
nop
adc
ret
shll
push
jae
mov
faddl
imul
in
add
imul
jbe
pusha
mov
fmul
ss
cs
dec
in
push
push
push
cmp
xchg
in
add
lock
push
movsb
mov
cmp
mov
or
mov
and
or
aam
push
pop
dec
fmul
fdivp
mov
js
adc
dec
push
ljmp
inc
mov
sub
push
dec
xor
cmp
test
xchg
xchg
mov
in
scas
mov
ja
cmp
std
bound
cs
int3
push
test
jp
cs
bound
enter
xchg
pusha
js
into
out
stos
adc
jmp
xchg
mov
mov
test
shl
adc
fcomps
shlb
cs
cvttps2pi
pop
xlat
push
push
mov
mov
loop
iret
outsb
mov
jnp
faddl
add
push
nop
push
adc
sbb
leave
mov
cmp
sbb
adc
or
push
or
push
fidivrs
cwtl
testl
sar
mov
jb
jge
dec
arpl
popf
das
aad
jbe
leave
mov
fwait
aam
loope
shlb
push
dec
out
dec
jmp
std
int3
leave
mov
fldt
lock
bound
loopne
dec
outsb
insb
es
popa
xor
jge
inc
xor
cld
out
inc
mov
cmc
imul
jmp
int
pop
mov
dec
push
arpl
fcmovnb
in
and
add
adc
sub
jb
sub
outsb
icebp
add
loop
stc
adc
inc
insb
loop
cmpb
xchg
and
mov
cmp
dec
rorb
jnp
pushf
ret
adc
jne
mov
sbb
loopne
dec
out
dec
int
loopne
test
pop
outsb
decb
push
outsb
sbb
leave
es
mov
jmp
cmp
sbbb
cld
into
sbb
adc
cmp
xchg
jg
sub
je
mov
test
jl
mov
inc
jecxz
stos
out
faddl
xchg
sub
enter
jl
cmp
adc
jno
dec
mov
call
cld
sub
cltd
jae
lret
xor
pop
sti
scas
adc
fisttpll
hlt
shll
dec
jo
xor
scas
sbb
int3
cmp
int
mov
or
or
dec
jle
cmp
lock
addr16
cmc
inc
add
jae
repnz
push
daa
cmp
mov
bound
repnz
pusha
lret
sbb
or
jbe
lds
mov
fidivrl
lret
inc
push
and
scas
sbb
loope
mov
mov
bswap
jns
negl
cwtl
loopne
sbb
xor
loopne
aam
ret
mov
dec
mov
jle
mov
inc
push
addr16
and
jg
xchg
push
sahf
imul
mov
push
adcb
mov
and
sbb
and
xchg
insb
mov
mov
xchg
mov
ror
inc
mov
repz
and
mov
push
imul
jno
pop
cli
icebp
fadds
push
push
mov
push
cmp
xor
aaa
push
and
sub
add
mov
hlt
mov
add
fs
sbb
ret
daa
cmp
mov
test
scas
lahf
stos
inc
mov
push
aas
push
out
sub
sahf
push
imul
xchg
mov
in
dec
insb
and
into
movsb
adc
icebp
bnd
sub
inc
xor
out
mov
mov
or
les
int
jae
cld
jo
pop
cmp
pop
sbb
sub
call
mov
test
cmp
movsb
aaa
adc
ss
jge,pt
adc
bound
cltd
mov
dec
pop
xchg
out
jge
and
int3
mov
andl
dec
aas
adc
xor
cli
and
or
sahf
mov
xor
orb
fs
ret
xor
fidivrs
xchg
cmp
movsl
mov
xor
add
lock
aam
and
pop
pusha
mov
dec
rolb
ds
cmpsl
enter
xchg
cmp
adc
push
hlt
lret
mov
leave
rorb
pop
fmulp
sbb
xchg
push
sbb
incl
in
sbb
push
dec
into
hlt
push
adc
xchg
stos
or
sub
lahf
xchg
jle
ss
or
xchg
jle
pop
test
mov
xor
sub
add
xchg
data16
mov
and
ljmp
movsl
add
or
jbe
test
mov
cli
push
xor
lret
ds
dec
movsb
roll
enter
std
and
xlat
imul
cld
mov
daa
insb
movsb
scas
dec
int3
sbb
in
push
roll
shl
sub
rorl
sbb
cmp
jo
lock
fadds
sub
lock
cli
or
out
rcl
adc
and
aaa
push
or
test
outsl
xchg
pop
out
imulb
aam
test
xchg
into
pop
xchg
lahf
sub
mov
pop
cmp
scas
or
sub
push
in
imul
sub
xchg
cmp
movsb
lret
sarl
lret
stc
and
xor
fwait
mov
in
popl
leave
xchg
adc
sbb
xchg
mov
movsb
pop
pushf
cmp
inc
std
xor
outsl
movsl
ja
sbb
lcall
sbb
out
add
xor
add
sub
push
notb
cmpsb
xchg
out
and
cli
mov
inc
gs
and
adc
adc
int
lods
inc
xchg
hlt
ja
push
cltd
cmp
repnz
pop
adc
in
or
dec
jmp
add
xor
aas
xchg
test
xor
mov
sub
sbb
out
mov
pop
ss
cmp
icebp
xor
mov
jae
in
jl
repnz
inc
xchg
xchg
mov
inc
int
and
lock
hlt
mov
call
adc
sbb
push
aas
xchg
xlat
adc
mov
decb
xchg
jo
add
scas
xor
mov
push
aaa
mov
push
sbb
cmove
cmp
mov
in
loopne
inc
fsts
fs
insl
sub
movsb
and
pop
jp
mov
push
push
mov
sbbl
sbb
mov
shll
fcom
pop
jae
lods
push
ss
iret
test
movsl
lods
lcall
shl
pop
jbe
into
in
add
sub
icebp
call
sbb
push
in
inc
insl
or
xchg
mov
insb
inc
adc
inc
inc
xchg
call
push
dec
imul
into
cmp
or
fnstenv
test
shrb
lods
jae
xchg
imul
mov
cld
fnsave
pushf
xor
shll
pop
cmp
sub
sub
jns
in
push
jae
das
jecxz
xchg
push
call
gs
sub
mov
or
adc
mov
jg
push
repz
jb
stos
jmp
cltd
ret
mov
push
push
push
imul
imul
push
and
aaa
fdivl
sahf
pop
daa
ffree
stos
xchg
sbb
or
fsubs
sbb
or
lods
adc
idivb
dec
xor
inc
add
outsl
addr16
cmp
sub
cmp
mov
pop
loopne
jle
cmpsl
xor
xor
push
push
jnp
pop
stos
sarb
sub
lock
cmpsl
cwtl
mov
bound
add
cmc
in
mov
ja
push
xchg
jo
iret
lock
and
adcb
mov
sar
or
div
inc
cmpsb
dec
movsl
outsl
test
out
popa
lret
lcall
test
cmp
push
cmpsl
add
in
les
or
mov
xchg
std
call
es
icebp
jb
stos
add
jecxz
lret
mov
xor
xchg
cmc
sub
mov
pop
cwtl
scas
jns
sti
push
int
fcmovu
imul
stos
int
push
add
push
pop
cltd
sbbl
adc
or
nop
fprem
pop
xor
insb
sbb
sbb
stos
into
aas
cmpsb
xlat
pop
cli
loope
mov
jg
movl
enter
and
push
fxch
adc
shrb
pop
and
cltd
jno
ret
loopne
inc
adc
loope
pop
mov
mov
outsl
call
sbb
fwait
dec
cwtl
mov
and
mov
push
inc
xor
push
sbb
mov
gs
sti
test
jecxz
nop
xchg
or
mov
dec
or
lds
dec
mov
outsl
aam
call
push
adc
adc
mov
and
jmp
mov
cwtl
ret
or
push
ret
mov
jecxz
mov
inc
mov
xor
jmp
mov
cmp
sub
shlb
and
insl
push
and
sub
sbb
jnp
pushf
sub
adc
int3
imul
pop
push
jnp
or
or
adc
xorb
and
repz
aad
cmp
daa
xlat
push
je
mov
sub
lret
push
cld
aaa
je
push
jge
lcall
inc
adc
cmpsb
aas
inc
dec
daa
ja
insl
pop
test
enter
jl
push
inc
push
mov
rcrb
in
pop
outsl
xchg
inc
cltd
shrl
xchg
xchg
sub
push
rcrb
cmpsl
push
out
xchg
adc
pop
lods
popf
call
inc
aas
movl
mov
lcall
lock
divl
mov
push
daa
insb
mov
cli
pusha
leave
xchg
out
adc
xchg
gs
in
dec
or
mov
hlt
or
jne
pop
fistps
into
sub
int3
pop
pop
test
test
clc
xchg
aad
lret
lock
push
adc
cmp
popf
mov
loope
fisttpl
xchg
fisttpll
xchg
inc
sahf
xor
add
cmp
jns
jmp
lods
shlb
dec
add
scas
dec
xor
and
loopne
add
loope
scas
sbb
cwtl
outsb
xchg
cmp
test
pushf
pop
jp
sti
aam
mov
xor
stos
pushf
enterw
leave
cmp
int
jbe
mov
and
js
popf
lret
adc
adc
pop
or
xlat
dec
cmpsb
aaa
outsb
adc
fwait
sbb
push
leave
push
int
jmp
sbb
adcl
mov
add
aas
or
bound
imul
push
cmpsb
dec
pop
fwait
int
repz
push
test
or
roll
push
bound
inc
arpl
cmp
xor
ret
mov
mov
lds
push
or
out
pop
clc
sahf
mov
push
das
cmpsb
mov
sbb
les
jl
mov
lret
dec
xor
rolb
pop
fldl
mov
in
movsb
fs
dec
mov
cmpl
sub
adcb
adc
insl
out
xchg
jmp
imul
sub
adc
mov
imull
sbb
dec
jns
push
fsubrl
jg
out
mov
stos
sub
push
das
orl
xchg
enter
stos
outsb
dec
lret
xor
dec
and
fdivrs
scas
popf
mov
in
movsb
jmp
inc
inc
clc
lahf
outsl
and
mov
test
and
lret
jmp
out
pop
xchg
xor
faddl
mov
in
std
stc
in
ja
adc
pop
les
push
push
mov
test
rclb
adc
sahf
add
cmp
lock
repz
jp
pop
push
mov
in
jno
jno
adc
mov
shrb
jo
mov
push
mov
in
int
dec
add
inc
jo
sbb
pop
jno
out
mov
or
jecxz
jp
ffree
or
mov
repnz
movsl
in
push
inc
jb
inc
jnp
inc
xchg
adc
cltd
testl
ds
or
and
iret
dec
mov
mov
insb
andl
loopne
dec
xchg
pop
cmp
pop
stos
cmp
xchg
adc
pop
mov
fwait
push
jo
sub
bound
sbb
xor
repnz
xchg
cmpsb
negb
push
fcmovnu
xor
cmp
data16
mov
xchg
rorl
js
pushf
mulb
int
push
jne
or
push
inc
mov
mov
addr16
sub
ljmp
cmp
stc
push
fidivs
sub
push
mov
and
push
pop
push
cmp
cmpsl
cmp
jmp
mov
push
ret
movsl
cli
jecxz
dec
mov
sbb
dec
cmp
test
add
test
cmp
movsl
loop
sbb
mov
push
cmp
js
and
lods
ret
stc
cmp
push
addr16
fistpl
jge
outsb
jno
int3
xor
mov
das
cmp
pop
xchg
jne
les
pop
out
pop
lret
mov
fbstp
ja
fldt
cmpsb
inc
mov
into
mov
push
inc
sahf
cmp
and
pop
jmp
ror
xchg
push
lea
nop
lret
rolb
les
aas
imul
sbb
and
cmp
enter
loopne
ljmp
xor
mov
sub
mov
xor
pop
add
add
test
loope
in
xor
and
push
inc
lret
out
mov
cmc
andb
icebp
icebp
push
jno
nop
mov
push
sarl
mov
inc
daa
push
stos
fs
je
jmp
dec
mov
pop
sbb
pop
add
fldcw
push
xchg
mov
jle
fldcw
or
fwait
ret
jns
pop
mov
lahf
scas
xchg
inc
xchg
les
loope
test
popf
arpl
daa
jns
addr16
push
test
mov
xchg
jne
leave
icebp
notl
mov
sarb
test
fdivr
mov
jno
cmp
mov
mov
cmp
icebp
data16
lods
xor
daa
call
dec
or
aad
lret
pop
std
sub
addr16
jbe
and
jae
repz
les
cmp
out
sbb
call
lahf
adc
cmp
sarl
mov
in
sbb
out
cmpsb
sub
or
jecxz
insl
fwait
in
shrl
fwait
xor
push
in
ret
mov
jne
inc
ror
lods
sub
dec
mov
test
lcall
jp
rorl
into
pop
and
dec
scas
icebp
xchg
shlb
mov
orb
inc
xchg
repz
sub
icebp
mov
xchg
jbe
add
lret
xchg
sahf
dec
orl
movsl
mov
loope
push
xor
jae
pop
dec
daa
aam
inc
aaa
and
pop
test
lahf
mov
movsl
out
or
cmp
push
fistpll
loop
pop
cld
jbe
mov
mov
test
pop
jg
nop
sub
mov
ja
in
enter
ljmp
adc
mov
and
out
inc
popf
mov
sbb
insb
mov
inc
jb
daa
dec
xor
movsl
cmp
add
popf
lods
lds
push
ljmp
leave
add
orl
cmp
inc
pop
pop
inc
and
dec
subl
mov
push
xchg
sti
pop
mov
sbb
cmc
mov
movsb
sahf
pop
xchg
ja
mov
outsl
jle
fwait
fs
int3
jns
adc
mov
fidivrs
shlb
lcall
mov
std
cmpsb
cmpsl
jb
popa
xchg
pop
mov
out
sbb
jb
xorb
push
mov
push
movl
in
push
jns
xor
xchg
popa
imul
scas
inc
ss
mov
pop
ret
jmp
insl
pop
ja
jns
mov
jl
js
insb
mov
jl
pop
and
mov
cmpb
lret
movl
adc
push
sbb
gs
push
out
sti
fisubl
das
fidivrs
imul
loop
das
outsl
test
dec
rcll
mov
xchg
insl
cmp
or
xor
cld
leave
clc
adc
lret
mov
cmp
pop
jp
pop
xor
adc
jmp
jp
es
popf
lock
mov
sbb
in
fisubrs
pop
jmp
es
xchg
dec
arpl
jno
push
imul
jne
sbb
inc
test
cmp
orb
and
adc
into
int3
outsl
or
add
sub
test
dec
sbb
dec
or
fwait
iret
sub
xchg
push
jecxz
and
mov
dec
stos
fnstsw
push
mov
sub
dec
je
lea
rcrl
lea
sbb
in
loope
cmc
loope
ss
test
bound
dec
aad
or
sub
repnz
dec
fwait
addr16
cmp
les
inc
popa
and
xor
pop
ret
push
push
dec
cmp
push
aad
jge
ret
dec
f2xm1
jbe
psraw
repz
mov
ret
or
jbe
lahf
jnp
bound
lret
popa
and
xchg
js
lods
in
out
sub
sbb
aad
mov
and
pop
popa
mov
cmp
test
cmp
cmpb
mov
fiaddl
jbe
mov
cs
pop
insl
add
pusha
sbb
incb
dec
lock
adc
mov
test
icebp
xor
and
jno
stc
js
rcrb
pop
and
pop
xor
lss
push
xor
xor
pop
and
into
xchg
pop
in
jecxz
jo
imul
or
lcall
sahf
xor
pop
inc
push
push
in
aad
in
jl
cmp
xor
cmc
and
adc
adc
inc
ds
lock
cltd
fcmovbe
popf
or
lds
sub
mov
shr
mov
jno
mov
pop
fadd
cmpsl
jnp
js
xor
sarb
leave
mov
or
add
jl
pop
fwait
das
lods
mov
arpl
inc
sub
xor
add
mov
pop
pop
mov
fsubrl
pop
sub
shll
gs
ljmp
negb
pop
rorl
pop
bound
loope
lea
cltd
sti
inc
popa
iret
iret
push
ss
inc
push
pop
lret
addr16
mov
sbb
sub
ret
pop
mov
xchg
sub
cmp
push
or
in
loop
and
fidivs
cmpsb
fmul
popa
mov
mov
out
push
in
cmc
mov
xchg
adc
inc
pop
mov
or
insl
push
sbbb
out
jl
bound
in
insb
es
test
test
hlt
xor
add
mov
pop
inc
int3
mov
sbb
sub
mov
inc
pop
pop
jmp
mov
test
jp
data16
xchg
dec
scas
js
test
stos
adc
aad
roll
int
das
add
jno
aaa
lret
je
outsl
rcrb
xor
test
sub
add
cmp
decl
in
xchg
popf
test
nop
pop
aaa
jns
or
fisttpll
cwtl
mov
sub
cs
repz
push
jb
insb
xchg
mov
xlat
jne
arpl
mov
xor
fdivl
xor
movsb
xchg
cmp
cmp
pop
mull
adc
negl
ljmp
vpmuludq
mov
stc
dec
or
mov
nop
mov
mov
leave
sti
popf
jl
jge
cld
xchg
dec
mov
movsb
aaa
outsl
data16
jae
mov
pushl
mov
xor
aad
decb
js
add
mov
gs
xor
popf
or
xchg
je
pop
xchg
and
test
mov
push
stc
arpl
and
icebp
xchg
pop
sub
ss
xchg
and
inc
sub
out
stc
fadds
scas
outsl
daa
movsl
roll
imul
test
or
lcall
not
cli
jg
cmpsb
addr16
loope
mov
gs
cmpsl
pop
cmp
adc
arpl
inc
fistl
in
mov
lret
movsb
dec
dec
scas
jp
pop
mov
out
sarb
test
pop
repnz
mov
movsb
std
popf
sbb
ljmp
xchg
or
sub
add
push
mov
test
xor
jbe
cmp
sub
mov
mov
mov
outsl
mov
pop
decb
push
scas
add
fists
push
dec
test
mov
in
dec
cmp
cltd
mov
or
loopne
jmp
pop
nop
mov
sub
jns
jg
out
jae
and
cmpsb
shlb
sub
cltd
ds
shrb
inc
imul
xchg
pop
dec
xchg
insb
jl
imul
fsincos
and
in
adc
int
nop
xor
mov
sbb
xlat
imul
add
bound
cltd
sub
lahf
xor
test
cli
les
xor
push
mov
loopne
int
sbbl
sub
xor
test
cltd
add
adc
rol
addr16
cmp
fs
cmpsb
or
pop
xchg
jg
int3
sub
out
cltd
into
cmp
popf
outsl
fisubl
sub
push
cmp
ficompl
je
addl
push
push
push
mov
and
les
sub
ret
mov
jp
fldt
sahf
lret
shrb
sahf
sub
cmpsb
mov
jo
out
adc
mov
arpl
fstp
mov
add
cmc
lods
push
cwtl
stos
add
cli
adc
pop
fisubs
repnz
hlt
pop
scas
ljmp
mov
sub
inc
cli
es
das
ffree
xor
stos
pop
shlb
and
cld
inc
sbb
into
push
out
aaa
xor
pop
fwait
notl
cmc
outsl
sbb
mov
sub
idivl
cmpsl
out
jecxz
in
pop
cltd
mov
and
fs
rcl
ss
inc
cwtl
lret
mov
and
ret
test
sub
dec
mov
ss
and
out
orl
jge
inc
dec
add
and
loope
sbb
aas
fstpt
les
lahf
lahf
pop
fistl
mov
dec
mov
in
adc
repz
jbe
adc
pop
cli
lahf
lret
jl
je
popf
popa
xor
dec
repz
and
and
pop
arpl
push
mov
stc
fisttps
imul
aad
lahf
sbb
lahf
pusha
push
push
push
bnd
push
int3
push
push
xor
pop
je
in
mov
ret
jp
dec
dec
dec
mov
test
push
inc
mov
sub
xchg
pmulhw
sbb
iret
add
xchg
or
mov
xor
xchg
loopne
jp
es
mov
push
scas
ret
mov
call
adc
add
insb
and
jne
mov
or
addr16
jle
jge
daa
add
xchg
imul
insb
or
out
mov
cltd
mov
and
xor
sub
lock
and
xchg
dec
and
adc
shrl
stos
lret
xchg
lret
imul
dec
jp
cltd
pop
mov
repz
mov
mov
lods
sbb
movsl
xchg
cmpsb
push
imul
stos
test
loope
mov
iret
bound
data16
xchg
cmc
cltd
xchg
dec
mov
xchg
and
int3
sarb
inc
loopne
into
push
ja
int
inc
lds
daa
jle
push
dec
sbb
inc
pop
sub
aas
cmc
jbe
insb
sub
sti
in
cmpsb
in
scas
hlt
insb
cmc
lahf
push
sub
push
mov
std
lock
pusha
push
gs
and
mov
aaa
out
push
pop
lret
ret
add
and
jge
mov
adc
daa
or
or
orl
scas
push
cld
imul
ret
adc
mov
repnz
add
pop
jge
push
rol
push
jl
and
pop
popf
cmp
addl
push
push
xchg
cld
lea
lcall
mov
fwait
cmp
mov
jge
mov
or
or
lret
scas
cltd
cmpsb
sbb
jnp
lea
call
dec
jle
xchg
hlt
dec
adc
xchg
loope
xor
jo
xchg
bnd
stos
fisubs
fmul
mov
icebp
sbb
or
inc
ficompl
mov
mov
push
mov
sbb
xor
mov
jne
and
bound
sub
sub
xlat
bsf
and
mov
adc
addl
or
xor
call
xchg
dec
pusha
or
xchg
mov
push
mov
and
stos
insb
incl
add
int
rcr
mov
push
ja
push
fnsave
lahf
xlat
sub
inc
ljmp
rclb
loope
cmp
cmpsb
jge
aad
shlb
ds
pop
popf
scas
inc
push
pop
push
pop
shlb
cld
out
jmp
add
fmull
dec
pushf
in
jnp
inc
lahf
loopne
mov
pop
ror
push
pop
mov
insl
int3
push
jge
icebp
rolb
xchg
xor
js
jb
int3
sarl
xor
cli
jge
jge
icebp
adc
loopne
pop
mov
mov
stc
fxch
lock
test
cmp
sbb
jne
aad
aam
enter
mov
aam
mov
inc
add
push
stc
push
xor
cmpsb
movsb
cmp
mov
xchg
xchg
and
push
scas
addl
out
pushf
cmc
outsb
xor
jae
out
out
lea
pushf
pusha
aad
cmp
xchg
ds
mov
clc
stos
push
cmpsl
pusha
pusha
jno
test
dec
or
fstpl
xor
ret
roll
sbb
add
adc
xchg
loope
lret
arpl
sub
push
cmp
fildl
sbb
scas
das
lea
repz
inc
jae
insb
jbe
in
int
pop
xchg
jl
mov
cli
daa
cmp
scas
out
jecxz
int3
call
nop
inc
sub
lods
jbe
inc
xchg
out
in
mov
aad
or
cmpsb
cmp
jo
xchg
mov
sub
outsb
mov
stos
pop
push
sub
mov
push
test
and
dec
out
stos
icebp
mov
or
add
imul
cld
mov
mov
enter
in
test
test
mov
mov
cmp
xor
and
push
hlt
cmc
lret
jnp
mov
xor
jbe
addb
sbb
lock
test
add
pop
test
sarl
cmp
test
pop
fld1
ljmp
sbb
rcrl
dec
xor
ret
push
cli
dec
jae
pop
fucomip
lahf
fs
imul
push
adc
mov
rclb
sti
imul
push
push
clc
xor
stc
je
adc
enter
insb
jns
push
jne
popf
sub
pop
mov
les
fs
and
sbb
adcb
jge
pop
cmp
xorl
add
xor
out
fdivrl
sub
icebp
add
pop
mov
insb
fimuls
jmp
mov
out
xor
dec
cwtl
shrl
daa
ss
jg
mov
jns
mov
hlt
pop
and
js
and
stc
in
add
inc
mov
pop
cwtl
cmp
icebp
mov
adc
jecxz
xchg
jg
inc
adc
hlt
out
call
pushf
movsb
or
hlt
lahf
sub
shr
xchg
or
sbb
sbb
xor
inc
jmp
shll
out
movsb
cli
pop
mov
addb
sbb
mov
xchg
jecxz
rorb
push
int
xchg
sub
insb
mov
mov
in
fs
pop
les
ror
adc
aaa
jb
jp
cli
iret
loopne
movsl
out
mulb
in
add
stos
int3
jmp
shr
sub
punpckhwd
nop
test
pushf
sti
loope
sub
jl
andl
fstps
test
lds
add
lcall
insb
std
outsb
pop
leave
add
sbb
jne
sbbb
test
sbb
aaa
jnp
imulb
cmp
scas
mov
cmp
jno
inc
jns
imul
or
outsb
pop
rol
xor
mov
pusha
in
cmp
push
dec
sub
out
add
sub
pushf
ds
fwait
daa
fdivrl
jp
ds
mov
xchg
test
add
xchg
and
pop
mov
sbbl
mov
into
push
stc
in
aaa
cwtl
or
ljmp
xor
aaa
push
inc
pop
cli
mov
shlb
lcall
movsl
ret
lret
mov
xchg
cmp
test
xor
ficoms
int3
dec
mov
imul
lea
xor
stc
jb
push
ja
in
pop
mov
lret
pop
popf
jb
jnp
cmp
stos
mov
aad
roll
jo
ret
inc
xor
push
adc
scas
repnz
adc
repz
ss
out
cmpsb
push
out
out
lret
mov
mov
sub
test
push
dec
sbb
jnp
call
pop
clc
lret
jno
outsl
nop
jbe
push
xorl
add
das
push
mov
or
mov
inc
setnp
or
push
sbb
push
and
pusha
push
xchg
scas
mov
sub
movb
push
lret
aaa
mov
test
fld
ss
mov
lds
mov
ret
add
jmp
mov
push
xchg
xlat
out
lret
sub
or
js
jmp
movsb
loop
adc
mov
pop
and
lahf
outsb
fwait
push
in
dec
mov
ss
je
mov
cmp
loopew
xor
in
inc
test
cmpsl
inc
loop
lods
sarb
movsb
and
jmp
das
notb
xlat
jne
ljmp
jns
testb
mov
pop
notb
aas
aaa
clc
cmp
fcomps
mov
adc
int
rcl
mov
inc
gs
fistpll
rcrl
sbb
and
mov
pop
loope
or
dec
imul
add
enter
jo
outsl
sub
push
es
jle
xor
push
in
or
mov
xlat
shlb
jmp
jns
imul
dec
cmp
daa
ljmp
xchg
insb
inc
add
pop
xchg
and
jl
push
xchg
adc
jmp
ficompl
in
adc
jbe
push
lods
int
pusha
orl
cmp
ret
insb
hlt
sbb
xlat
adc
out
out
pop
mov
fisubrl
and
or
sbbl
fsubl
pmuludq
aam
in
mov
lahf
pushl
outsb
dec
aas
inc
scas
push
xchg
mov
ret
sub
inc
cmpsl
sbb
cli
xchg
cmp
iret
roll
xchg
bound
js
mov
jl
insb
dec
adc
shrl
dec
clc
push
pop
adc
es
mov
inc
jle
inc
outsl
nop
mov
fdivl
iret
sbb
movsl
dec
lahf
or
dec
xor
movsl
and
enter
mov
jne
mov
push
push
inc
mov
dec
mov
push
hlt
fst
adc
xchg
pusha
xor
add
loop
push
xlat
or
xor
cwtl
fcoms
cmp
clc
gs
jle
sub
jle
cmpb
imul
or
movsb
lods
out
je
rcrb
rclb
dec
adc
nop
adc
data16
lret
lock
dec
mov
cmp
outsw
cmp
push
ds
int
cld
sub
daa
adc
push
dec
dec
mov
repnz
adc
call
loop
sti
pop
fmul
xor
lock
xchg
scas
fisubrl
xor
jp
adc
mov
pop
xchg
aas
jne
js
push
popf
rcll
mov
cli
ror
push
add
pop
xchg
fcomp
iret
inc
sub
lods
cmp
popf
jl
inc
ds
shll
fdivrl
mov
sbb
nop
xchg
outsb
mov
hlt
mov
dec
fistpll
std
es
add
stos
aad
xor
cmp
das
push
loope
cmpsb
xor
not
js
sbb
mov
mov
aas
sub
ficoms
cs
adc
mov
sub
sbb
or
or
ja
mov
rol
inc
sub
ret
push
std
sbb
iret
int3
xor
sar
mov
mov
stos
mov
sub
cmp
inc
sbb
orb
pop
xlat
lods
xor
pslld
add
rolb
xchg
mov
cs
sbb
xor
dec
and
sbb
out
rorb
bound
shlb
out
out
mov
aaa
std
mov
add
mov
dec
loopne
dec
flds
test
cltd
or
push
mov
leave
push
in
push
stos
push
and
lods
fidivrl
push
pop
sbb
stos
mov
xchg
in
lock
test
xchg
jp
inc
dec
enter
cmp
add
sub
mov
jg
mov
in
mov
pop
fistps
xor
mov
aas
cmp
mov
imul
jne,pt
data16
jnp
dec
inc
push
sahf
dec
sahf
popa
and
or
add
lret
hlt
pusha
daa
mov
icebp
or
std
inc
int3
lods
jp
arpl
aas
xor
mov
xchg
cs
xchg
inc
aad
xchg
add
repz
or
mull
jmp
lods
push
jle
push
shlb
cmp
cmp
orl
jge
jns
loopne
lods
push
xlat
pop
ljmp
sub
xor
les
enter
test
into
aas
aaa
xor
out
and
leave
ja
mov
mov
andl
push
out
inc
rorb
or
out
pushf
inc
cmpsl
aaa
lods
iret
adc
jge
jbe
test
xorb
shll
and
xor
dec
or
nop
les
mov
jns
sti
lea
inc
add
out
cmp
test
and
repnz
mov
scas
xchg
test
dec
dec
mov
lret
dec
fildll
ret
xor
cmp
shl
ds
mov
arpl
add
push
mov
xchg
and
pop
ja
add
jmp
cmp
pusha
ret
mov
sahf
xchg
xor
mov
jae
push
repz
sahf
iret
int
outsb
stos
adc
lods
aaa
mov
mov
movsl
add
sub
dec
leave
pop
ss
cmp
or
dec
adc
aad
cmp
lahf
inc
sub
out
fcmovnb
or
adc
jge
mov
pop
mov
pushf
jg
loop
mov
aas
mov
pop
push
jns
jmp
xchg
inc
xor
bound
xor
xchg
and
fpatan
pop
ret
int3
nop
or
xor
dec
xor
fidivrl
mov
mov
or
jnp
jecxz
movsl
clc
and
loopne
les
out
into
push
rcrb
sub
add
rolb
dec
mov
push
push
push
aam
xchg
loope
add
bound
adc
cltd
pop
es
lret
imul
jae
mov
ds
xor
pusha
test
mov
cld
xor
mov
sbb
outsl
pop
out
adcb
fwait
fwait
mov
dec
in
insl
or
aad
jmp
inc
add
iret
mov
pop
xor
add
bnd
mov
pop
inc
pop
movsb
or
shll
stos
or
cmpsb
cmp
shrb
cld
xor
adc
sub
fnclex
mov
out
sub
stos
test
cmp
or
mov
aad
sub
push
pop
dec
cmp
and
push
in
and
ds
push
inc
fsubl
push
dec
aad
mov
idivl
mov
inc
and
adcl
pusha
lock
jp
sbb
mull
lods
sbb
push
add
test
mov
or
jnp
push
lods
in
pop
push
mov
sbb
adcb
mov
fcomps
loopne
in
sbb
jb
loope
jg
int3
inc
sub
push
pusha
pop
mov
les
adcb
fs
sbb
cmc
push
pop
pop
xchg
jae
fldcw
loope
xor
sbb
mov
nop
data16
xchg
cmp
sub
lds
clc
and
xor
xor
inc
inc
mov
jle
inc
mov
repz
mov
xchg
xchg
push
sbb
mov
movsl
sbb
out
in
fisttps
cld
test
data16
xchg
mov
mov
cmp
xchg
hlt
inc
pop
jecxz
pop
cli
and
out
or
in
imul
fstps
adc
popa
testl
push
inc
ja
mov
sub
mov
xchg
pushf
jno
stos
int
pop
sub
aas
leave
icebp
mov
push
filds
call
pusha
add
mov
pop
xchg
xchg
cmp
scas
pop
and
test
dec
insl
push
jl
or
scas
bnd
stc
gs
mov
ds
push
xchg
lret
or
popa
cltd
outsl
hlt
push
jge
mov
push
xchg
pop
cmp
sbb
mov
xchg
pop
cmp
mov
or
cmp
mov
inc
shl
cmp
aam
push
fnstcw
and
inc
rol
or
cwtl
dec
xchg
jnp
das
xchg
fs
mov
fcompl
sub
out
divw
pushf
insb
xchg
sarb
mov
add
sub
imul
jae
fcomp
xchg
mov
popa
jmp
outsb
test
mov
rol
data16
out
inc
jns
sub
mov
sbb
mov
pop
pop
pop
cmp
test
jbe
call
ror
in
jecxz
sbb
push
and
or
mov
aam
aam
rcl
pop
pop
and
enter
add
in
cmpsl
loopne
cmp
push
in
ret
call
xor
push
push
popf
mov
lods
inc
and
and
xchg
jno
mov
push
lcall
ror
dec
repnz
push
outsb
std
or
xor
pop
sbb
push
jl
dec
shlb
dec
pop
add
ss
adc
sbb
xrelease
sti
mov
pushf
rorl
test
mov
inc
sarb
out
inc
repz
sub
ja
mov
sub
adc
mov
mov
fucomip
and
pop
roll
push
pop
cmc
cmp
je
dec
pop
adc
shrl
and
xchg
lahf
jg
xor
in
jge
andb
mov
fwait
pop
outsb
cmp
jne
je
pop
sub
lret
repnz
push
push
xor
push
add
mov
mov
xor
enter
mov
mov
rcrl
lods
sub
jmp
mov
inc
pop
mov
jmp
or
std
fisttpll
lock
dec
sub
pop
mov
xchg
sub
cmpsb
fisttpll
test
jnp
jnp
arpl
cs
dec
lahf
or
addr16
das
pop
pop
cli
cmpsl
push
inc
cwtl
sarb
mov
mov
movsb
jne
push
xchg
xorl
clc
push
lods
aad
or
je
xchg
push
jp
xchg
pop
jecxz
pop
nop
out
inc
pop
ret
or
xlat
mov
cwtl
mov
add
mov
cmp
push
insl
lahf
pop
dec
cmc
fnsave
cld
aam
xchg
sarb
popf
cmc
cmp
and
dec
stos
push
pop
or
inc
les
fmull
pusha
fndisi(8087
dec
test
and
ljmp
clc
jl
inc
lahf
cmp
cmpsb
mov
rcrl
cmp
mov
int3
icebp
cmp
cmp
lahf
sub
sub
out
insb
enter
mov
dec
dec
ficompl
icebp
enter
cli
jo
shrl
cli
inc
ljmp
mov
mov
mov
test
not
mov
or
fmull
dec
outsb
mov
call
or
cmp
or
mov
mov
les
pop
inc
shll
in
orl
add
xor
cmp
fisubrs
sbb
enter
dec
mov
and
or
daa
mov
loope
adc
cmp
in
and
xor
in
jnp
in
int3
jo
int3
xchg
push
dec
pop
data16
imul
fcomps
inc
popf
mov
inc
fisubs
ficoml
adc
mov
pop
fstl
ljmp
mov
push
psllw
push
mov
pop
cmc
mov
lcall
gs
negl
stos
fwait
pop
cmp
jl
ljmp
adc
add
mov
ds
adc
data16
filds
dec
rcll
lods
je
jne
cld
inc
insb
mov
xor
jb
push
sub
xchg
out
cwtl
inc
mov
sti
clc
std
movsl
mov
sub
jge
jns
pop
mov
and
cmp
cld
cmpsb
inc
pop
rcrl
ficomps
cmpsb
pop
repnz
rclb
pop
in
repnz
jbe
lods
cwtl
mov
dec
mov
sub
mov
xchg
andb
out
hlt
jp
loop
mov
xchg
mov
push
mov
popf
sbb
outsl
aam
movsb
icebp
dec
fldcw
popa
leave
mov
inc
inc
push
sub
jo
mov
imul
adcb
daa
test
lahf
in
xor
lcall
push
jp
nop
sbb
add
stos
sub
pop
push
add
add
jmp
clc
addb
sbb
xor
add
clc
jbe
int3
cmp
pop
push
ljmp
in
sti
jne
ret
insl
mov
in
dec
sub
sbb
jo
out
mov
and
and
loopne
sbb
xor
andl
jnp
sbb
mov
out
dec
sub
outsb
in
jnp
rcrb
pop
inc
sbb
mov
cmp
sbb
sti
shl
cmp
or
jmp
cmc
adc
in
mov
adc
lea
movb
aaa
neg
mov
xchg
iret
aas
insb
outsl
and
jnp
cmp
jb
lcall
inc
push
jno
mov
shl
int
ficoms
pop
in
leave
mov
xchg
mov
icebp
lret
mov
daa
push
aaa
add
mov
xchg
mov
mov
sbb
xchg
in
mov
push
enter
sti
cwtl
lock
lea
lea
sub
ja
cmp
xchg
test
xor
and
sub
sbb
icebp
mov
cmc
scas
and
xchg
lret
pop
mov
ss
fwait
xor
fmull
jg
or
cmpsb
gs
js
adc
mov
adc
xlat
loopne
in
mov
or
mov
lret
jb
pusha
pop
lock
dec
cmp
add
and
inc
xor
sahf
je
sbb
pop
lcall
in
xchg
lahf
loopne
dec
arpl
dec
mov
adc
sbb
nop
lret
clc
imul
out
inc
rorl
movsb
sar
sub
andl
data16
rcl
dec
pop
dec
out
xchg
fmull
inc
xor
in
loopne
add
add
aas
loop
xlat
cmc
dec
push
adc
cmpsb
rclb
or
sbb
push
jle
aam
loope
in
sarb
or
ret
and
push
jmp
dec
test
dec
movd
mov
add
sub
xchg
xor
cmpsl
jp
pop
push
mov
push
push
push
xor
inc
inc
push
cmp
mov
xor
inc
jb
sbb
xchg
push
shll
or
xlat
stos
cmpsb
test
jo
es
cmp
cmpsl
jecxz
sub
sub
push
inc
es
movb
xchg
jo
mov
inc
or
imul
lea
cmp
pop
into
aad
loopne
aam
pop
xchg
arpl
imul
fadd
insl
enter
lahf
jae
xchg
ljmp
hlt
pop
or
das
jne
jmp
xchg
stos
mov
xchg
sbb
mov
leave
ds
lock
testl
pop
mov
push
or
or
cs
xchg
cs
lret
jge
lahf
sbbb
imul
inc
push
in
call
popa
clc
cld
xor
xor
cmp
outsl
mov
in
into
ljmp
cmpsb
mov
mov
mov
sarl
hlt
sbb
stc
mov
adcl
or
mov
das
dec
xchg
mov
sbb
bound
aaa
xchg
xor
imul
sub
outsb
mov
push
faddl
mov
leave
js
aad
push
inc
pushf
shlb
cs
roll
mov
dec
jns
cs
mov
push
mov
gs
lret
and
out
lods
aas
sub
in
pop
sti
shrb
jns
jge
fsts
or
push
xor
cmp
in
ds
pushf
mov
sub
jnp
mov
fwait
clc
jmp
pop
inc
lods
xchg
jb
enter
movsl
inc
add
or
adc
pop
mov
jle
pop
adc
aad
cltd
or
jnp
inc
test
insl
mov
js
jb
mov
mov
pop
out
fnstsw
aam
xchg
jmp
lret
pop
rclb
insb
push
out
or
out
sub
jbe
popf
ret
sub
lea
pop
add
fcmove
xchg
data16
mov
inc
push
fldln2
or
stos
loop
test
lret
mov
mov
aaa
sti
mov
icebp
lret
ds
jg
cmp
lds
mov
int
mov
pop
mov
ret
les
mov
cmpsb
roll
out
and
and
mov
mov
pop
pop
sub
xor
mov
push
test
jo
cmc
sahf
loopne
insl
popa
jmp
cs
cmp
adc
pusha
lcall
loopne
es
das
jg
jp
sub
push
mov
shr
mov
inc
lds
jo
stc
sbb
ret
push
lcall
bound
add
mov
call
cmpsb
addb
sahf
je
push
mov
dec
or
lock
ljmp
sbb
dec
pop
movsb
cli
jmp
mov
xchg
fucomip
dec
cmp
mov
mov
xor
dec
sub
xor
inc
inc
pop
js
sahf
jo
shlb
fbstp
pop
and
sti
pop
iret
cmp
aad
mov
sbb
and
rolb
add
mov
cltd
sub
pop
xor
insb
loope
stos
stos
sub
imull
ja
push
pop
test
sbb
iret
pop
loopne
das
push
es
in
adc
fisttps
insl
fwait
jnp
shl
fisttps
mov
xchg
repnz
adc
pop
adcl
add
adc
shll
jno
add
jnp
jl
fadds
sub
mov
push
lods
mov
insb
sub
cmp
push
jnp
and
push
xchg
cltd
mov
sub
cmp
xor
adc
icebp
dec
or
test
xchg
push
movsl
adc
mov
cmc
out
inc
imul
inc
inc
push
add
xor
and
rorb
and
popl
data16
test
xchg
xor
filds
lods
sbb
icebp
push
mov
jo
cli
jl
push
lret
xor
add
jae
or
add
ffree
jmp
sub
loope
test
addr16
xchg
push
xor
inc
lahf
stc
push
cmpsb
popf
sbb
push
ds
dec
fldcw
arpl
je
pop
scas
xor
ss
pop
and
inc
inc
call
rolb
dec
mov
cld
mov
adc
fstp
dec
mov
lea
and
push
xchg
push
ss
add
push
sbb
ficompl
jns
sbb
cmpb
jmp
push
add
push
pop
inc
xor
sbb
xchg
lds
fldl
jle
ss
sbb
enter
adc
shlb
dec
imul
cli
daa
add
iret
push
jp
jecxz
and
daa
lahf
es
int3
out
pop
sbb
sbb
jns
stos
sub
pop
fcompl
enter
xchg
movsl
daa
lcall
mov
mov
ret
data16
lods
or
shll
mov
inc
adc
adc
pop
faddl
subb
repnz
and
popa
adc
adc
inc
inc
dec
popa
mov
fidivrs
mov
jb
shl
mov
pop
push
xchg
push
and
adc
or
and
lock
push
jae
push
repz
popa
sub
or
test
rcll
mov
add
stos
ret
add
push
inc
testb
xchg
lahf
ret
mov
xchg
jl
fbld
fisttpl
ss
jbe
out
pop
arpl
push
fwait
mov
dec
repz
mov
push
mov
mov
rcr
hlt
xchg
cmp
dec
ljmp
push
xchg
pusha
mov
bts
scas
push
and
scas
int
stos
cli
mov
sbb
xchg
mov
pop
sbb
test
mov
pusha
sbb
lods
fcomp
cwtl
xor
sbb
cmp
xor
or
shl
push
mov
mov
sbb
lea
into
stc
ficompl
cmc
fbld
movsb
dec
mov
push
out
ret
ljmp
dec
fcoms
test
filds
mov
cmp
or
imul
jp
cmpsb
dec
jnp
shlb
fisttps
ja
xchg
inc
sbb
ret
adc
pop
shlb
push
mov
arpl
outsb
fcoms
js
es
sti
jmp
dec
xchg
push
ud2
out
das
mov
and
mov
mov
add
sub
adc
pop
movsb
dec
ret
cmp
ja
dec
cmpsb
sbb
in
adc
or
mov
jmp
pop
in
mov
sub
adc
pusha
add
xor
lret
and
and
rol
aad
cltd
sub
sub
fists
inc
iret
mov
fidivs
push
decb
into
push
xchg
pop
rcll
bound
clc
out
cwtl
push
aaa
push
pop
inc
es
loope
push
and
arpl
xor
ljmp
mov
and
add
and
outsl
stos
pop
test
sbb
mov
or
js
bound
sti
jae
inc
jg
nop
aaa
jge
scas
mov
aad
imul
add
dec
daa
scas
mov
push
dec
add
sub
or
push
scas
adcl
xchg
mov
lret
outsl
push
pop
cmp
xor
and
and
pop
mov
inc
cmp
xchg
and
cmp
pop
sub
pop
inc
out
shl
cmp
stc
xor
imul
into
dec
out
scas
arpl
inc
les
hlt
pusha
in
sahf
ljmp
xchg
dec
lahf
out
sbb
imul
pop
lds
js
dec
cmpsl
mov
sti
loope
out
insb
imul
push
add
mov
aas
into
shrl
xor
pop
cmp
or
shlb
clc
cmp
leave
sbb
cli
jg
in
mov
inc
cmpsl
jmp
push
out
jg
cmc
loope
in
inc
push
xorb
jo
je
pop
imulb
rorb
pop
loopne
lods
sbb
roll
or
sbb
loope
orl
inc
popa
les
sbb
mov
push
mov
and
xor
xor
stc
fsubrs
dec
sub
xchg
or
test
xor
imul
push
xchg
jl
stc
icebp
xchg
mov
cmpsl
cli
sub
and
mov
fcoml
fdiv
sub
aam
lds
mov
popl
cltd
push
mov
mov
sbb
add
shll
xchg
push
dec
data16
out
cmpsl
add
xchg
jno
mov
sub
push
out
jl
push
xchg
in
cmp
in
xor
leave
int
mov
rep
sbb
in
fstpt
pusha
mov
sub
arpl
repz
test
xchg
xchg
sbb
cltd
dec
sub
xor
mov
xchg
fwait
test
cmpsb
repnz
or
es
nop
mov
or
ret
jmp
rep
dec
xchg
dec
push
jb
push
cwtl
cmp
dec
mov
mov
mov
cmp
sti
sbb
std
xor
ljmp
cwtl
mov
jg
jne
test
xchg
aaa
mov
and
pop
cli
dec
jae
scas
xchg
xchg
pop
pushl
insb
ds
xor
jp
cltd
adc
pop
jmp
mov
mov
dec
pop
call
xor
mov
mov
pop
sti
lret
adc
je
ja
inc
add
imul
dec
mov
pop
adc
jne
xor
xor
push
sub
sti
lcall
sti
lret
cmp
push
mov
inc
xor
lret
mov
xor
mov
mov
cmp
mov
test
cmp
mov
dec
inc
loopne
lods
lahf
add
add
jb
xchg
mov
out
cmpsl
lds
pop
movsb
jns
add
jl
mov
mov
testb
mov
sahf
daa
push
data16
jb
cmp
lret
adc
hlt
mov
mov
pop
enter
scas
mov
ja
mov
clc
pop
adc
aad
fidivl
addl
adc
cmp
pop
cli
je
lahf
lret
jmp
jp
cmp
jmp
inc
in
pop
push
hlt
cmpsl
sub
mov
dec
adc
xchg
xchg
daa
jbe
fs
push
sbb
xchg
push
inc
sub
bound
sub
cmp
loopne
jmp
cmp
fstpl
clc
cmp
pop
cmp
sbb
add
pusha
xchg
jmp
xchg
mov
les
pop
cmpsb
adc
pop
in
dec
sub
and
pop
pop
cwtl
mov
sbb
add
xchg
jge
jnp
pop
outsl
cld
gs
mov
cmc
and
test
mov
adc
jecxz
outsl
fadds
cmp
or
cld
cli
in
sbb
inc
mov
gs
sub
jbe
lret
mov
pop
xchg
pop
sub
call
inc
dec
test
mov
lret
xor
fcmovne
insb
rcrb
or
jae
insl
fdiv
pushf
daa
adc
test
imul
hlt
cmp
adc
iret
popf
xor
nop
push
adcb
push
jecxz
scas
jne
mov
fistl
jle
push
sub
pusha
lahf
pop
mov
call
cmpsb
xchg
int3
rorl
test
inc
xchg
jae
lods
sbb
sub
rcr
fstps
sub
cmp
aaa
push
aad
lea
dec
jb
mov
pop
push
ss
push
push
pop
arpl
jle
push
ret
add
cmp
cmp
ret
dec
jne
xchg
xchg
test
push
ficoml
xchg
xchg
fucomip
xchg
jmp
add
jo
negb
clc
xchg
lcall
dec
mov
mov
js
sub
mov
pushf
test
in
fnsave
loop,pn
dec
imul
jne,pn
cwtl
cmp
xor
stc
push
pop
ljmp
mov
xlat
negl
ss
idiv
in
out
jo
out
mov
xchg
in
add
push
rcll
insl
mov
and
mov
repnz
sub
inc
test
lahf
xchg
imul
xlat
mov
imul
lods
scas
test
cli
mov
sub
mov
subl
ret
stos
in
cmp
decl
pop
ja
test
fadd
or
movsb
adc
dec
jnp
sub
popl
and
mov
jle
pop
and
sub
enter
ret
push
cmp
mov
cmovge
cmp
mov
mull
sub
inc
loope
sub
ffree
ljmp
nop
pop
mov
lret
dec
in
fdivs
sbb
sbb
add
cmp
jno
cmc
mov
js
push
sbb
pop
push
fsts
dec
or
sbb
push
mov
scas
js
xor
inc
and
sbb
jg
or
push
pop
xchg
mov
mov
push
jne
rolb
fidivrs
pusha
mov
bound
into
pop
repz
lret
in
call
loope
fwait
rorb
hlt
cmpsb
mov
std
enter
push
xor
push
mov
mov
mov
into
add
jp
mov
jl
mov
test
cwtl
ljmp
jecxz
pop
xchg
outsb
push
xchg
mov
inc
mov
cli
xchg
out
outsl
sub
push
iret
cmp
repz
push
inc
xlat
or
lea
mov
fs
push
mov
jae
mov
lcall
les
in
test
hlt
stos
sbb
lds
shrl
gs
push
outsb
ja
lahf
xlat
push
or
push
mov
push
dec
les
cli
dec
mov
out
jg
sub
filds
lret
test
lret
mov
scas
inc
cli
cltd
jl
jle
pushf
push
mov
daa
mov
dec
push
xor
inc
xor
add
mov
push
mov
inc
xchg
in
or
imul
and
loop
fiadds
jge
mov
inc
cmpsl
add
nop
mov
mov
add
adc
insb
enter
and
push
push
jmp
adc
mov
int3
ret
out
push
mov
adc
les
arpl
call
fidivl
mov
sahf
mulb
ret
scas
sub
xlat
mov
mov
test
loop
mov
pop
out
xchg
push
push
daa
jne
movsb
push
inc
sub
call
das
xchg
xchg
inc
push
jae
and
movsb
pop
imul
stc
imul
push
mov
subl
xchg
bound
sub
pop
jbe
push
addl
ficompl
cwtl
rcrb
stc
mov
dec
add
inc
decb
add
stos
lock
jbe
cs
mov
dec
outsl
adc
lds
pop
jbe
xor
leave
decb
and
ffreep
jns
lock
xor
mov
add
mov
dec
in
sbb
mov
xor
cmp
cmpl
out
arpl
stos
out
mov
popf
push
jae
add
popf
push
pop
clc
mov
mov
mov
mov
rorb
scas
inc
jb
mov
mov
mov
arpl
lret
mov
mov
and
into
mov
sub
lds
mov
push
xor
push
mov
js
mov
mov
jecxz
sbb
repz
push
shlb
adc
cs
mov
js
bound
xchg
mov
pop
pop
daa
xor
into
call
aaa
loopne
aad
imul
mov
push
lds
pop
leave
xchg
ja
pop
arpl
sahf
jns
jo
push
cld
mov
out
in
jle
out
adc
push
cltd
sbb
repnz
cmc
imul
xchg
pop
or
or
jle
es
cltd
jge
out
xchg
fwait
cmp
jp
pop
in
pop
jbe
icebp
stos
pop
xor
mov
pop
std
xlat
movaps
xor
jno
xor
sub
cmc
sub
aaa
inc
enter
cmp
mov
sub
loopne
xlat
pop
sub
and
adcl
cmpsl
cmp
pusha
jnp
jl
pop
movsb
andl
mov
add
neg
stos
or
mov
jno
cmp
mov
nop
sbb
ret
cmp
dec
cwtl
testl
in
cmc
popf
cmp
ja
inc
mov
sub
mov
ret
or
outsb
ss
leave
dec
dec
cmp
jo
add
cs
sub
aam
and
add
jne
frstpm(287
lea
push
cwtl
jg
push
pop
mov
dec
sbb
inc
in
pop
jae
pusha
push
sti
inc
sub
mov
jg
pop
mov
mov
mov
mov
or
xor
sub
mov
mov
sbb
cmc
adc
outsb
cmp
test
xcrypt-ecb
cmpsl
lea
clc
cmp
xchg
xchg
lds
dec
jbe
cs
subb
mov
rcr
inc
jmp
mov
adc
adc
cwtl
js
cltd
or
xchg
mulb
fstpt
ja
aad
xchg
imul
pop
adc
stos
pop
dec
jnp
cwtl
and
and
inc
inc
xor
out
mov
mov
or
dec
xlat
cmp
cltd
cmpsb
and
ud0
fsubs
lods
inc
push
popa
xchg
movsb
dec
push
subl
cld
mov
ja
popf
mov
into
repnz
cli
jl
outsl
inc
sub
popf
aad
sbbl
xor
sub
jno
mov
ficomps
mov
jae
mov
xlat
mov
inc
and
dec
pop
iret
inc
mov
xor
pop
stos
dec
mov
outsb
sbb
mov
push
dec
imul
enter
fmuls
decb
xor
pop
mov
jo
fldcw
mov
ret
or
sbb
ja
test
loop
push
adc
pop
sahf
iret
pop
xchg
sub
cmp
jae
push
lea
enter
adc
or
test
dec
rclb
mov
rcrl
lret
mov
mov
ret
jmp
or
insb
sbb
jo
popf
imul
adc
fimull
leave
sub
aad
xor
push
int3
adc
fdivr
mov
and
jle
lea
sub
mov
mov
add
push
into
lds
ss
std
adc
push
mov
mov
pop
orl
pop
or
test
xchg
dec
sub
and
add
jle
jmp
xchg
and
in
scas
xchg
mov
cwtl
cs
jo
inc
lret
in
pop
je
mov
repz
jne
mov
fxch
loope
jecxz
cmp
not
mov
cld
int
jae
or
push
lock
mov
or
mov
sti
cmp
jb
xchg
and
lret
jl
mov
jle
int
mov
xorl
loop
push
mov
rolb
push
xchg
adcb
mov
or
scas
test
outsb
xor
push
loop
and
xlat
nop
cmpb
loopne
lock
sbb
bnd
jns
insb
pop
test
pop
cmpsl
add
loop
dec
out
mov
pop
mov
nop
repnz
ret
pop
out
adc
inc
les
pop
insb
icebp
test
daa
ficomps
xor
mov
jge
cmp
test
cmc
hlt
nop
std
cmp
cwtl
pop
movsb
add
fistl
mov
cmp
lahf
aaa
jecxz
xchg
jae
lcall
dec
test
sbb
imul
imul
jle
shlb
lahf
lret
push
popf
jb
sub
cmp
xchg
lahf
enter
dec
sbb
test
ljmp
sbb
pop
je
shlb
add
nop
pusha
rclb
and
sbb
cmp
aam
xchg
mov
in
in
bound
xchg
xor
subl
bound
into
add
push
mov
jb
gs
fistpll
xchg
loopne
leave
shll
cs
inc
fwait
jno
xorb
idivb
nop
mov
std
lret
aad
dec
out
jb
shl
dec
sbb
adc
dec
dec
fs
dec
and
icebp
inc
test
xor
xor
aam
into
aaa
movsl
gs
inc
sbb
dec
push
loope
sub
adc
push
stc
test
mov
insb
cmp
cld
icebp
xchg
sub
fisubl
jl
pop
iret
fiaddl
rclb
xchg
loopne
xchg
push
addr16
pop
imul
dec
dec
add
xchg
add
int
ss
sahf
mov
or
jnp
push
jns
nop
pop
xchg
sbbl
pop
mov
mov
jb
lock
fimuls
stos
movsl
jns
mov
in
sub
pop
insl
and
mov
roll
cmp
jle
add
jo
jnp
orl
dec
call
xor
mov
into
pop
icebp
js
mov
outsb
and
push
in
push
or
outsl
and
cs
sbb
xchg
dec
xor
dec
sbb
xlat
dec
sti
sub
mov
pop
sbb
inc
adc
mov
xchg
or
push
pop
gs
sahf
int3
pushf
fcmovnbe
sub
js
add
fisubl
mov
jnp
pop
aas
pop
mov
popf
shlb
dec
dec
push
roll
add
sub
sub
add
sahf
sub
add
and
and
xor
cmpsb
test
inc
cli
pop
cltd
jg
test
ret
dec
push
lret
xchg
rol
lods
scas
loopne
mov
inc
inc
dec
cltd
push
icebp
jb
outsb
cmp
mov
inc
andb
mov
adc
mov
xor
push
dec
fwait
mov
test
ds
cmp
dec
out
mov
mov
cmp
icebp
xchg
ds
inc
inc
leave
push
pop
jno
or
jmp
xchg
jecxz
bound
aas
push
shrb
push
jns
repnz
jo
mov
push
push
and
in
ds
mov
xlat
jae
jmp
mov
lods
sub
icebp
and
xorl
xor
leave
jl
pushf
je
xchg
jo
lds
jae
rorb
adc
popf
leave
mov
add
cltd
pop
xor
test
cmc
lock
cmp
sub
repnz
pop
xor
dec
inc
std
mov
addl
mov
jo
push
icebp
mov
cmpsl
mov
cmp
popf
test
lret
adc
pop
push
dec
repz
mov
jno
mov
int3
popa
sbb
faddp
outsb
cmp
test
push
push
dec
or
xchg
into
ret
popa
push
negb
inc
testb
mov
test
xrelease
and
movsb
or
dec
icebp
jle
in
adc
jg
push
adc
adc
ret
bound
test
rcll
ja
cmp
inc
or
stos
insl
inc
mov
cs
scas
jne
lods
pop
sbb
orl
dec
cmp
test
addr16
or
add
dec
jae
xor
ret
enter
mov
dec
xor
mov
int3
mov
inc
imul
push
in
cs
pop
popf
insb
push
imul
lret
xchg
sub
lret
mov
loop
out
icebp
jmp
push
dec
pop
push
aam
adc
fdivrl
pop
inc
push
pusha
test
mov
pop
pop
sbb
push
ds
movsl
aad
push
flds
sarw
lods
inc
mov
int
fisttpll
icebp
push
test
jmp
add
in
xchg
adc
fisubs
arpl
inc
cld
aad
int
jmp
jl
rorb
xchg
xor
add
std
adc
dec
scas
xchg
mov
nop
xchg
imul
dec
mov
outsb
mov
or
pop
inc
dec
std
xor
fmul
and
stos
jnp
jl
daa
stos
cmpsb
sti
in
aad
cmpsl
cmp
xchg
and
dec
into
lods
jae
decb
adc
cmpsl
sbb
filds
pop
mov
pop
add
sbb
xchg
or
adc
cld
cwtl
cmpsb
daa
int3
sti
lods
mov
mov
xchg
fstps
cmpsb
lds
into
daa
mov
scas
xchg
jp
inc
jge
rcr
sbb
sbb
push
pop
sub
push
cmpsb
fsubrl
mov
pushl
repnz
sarl
cmp
pop
mov
mov
popf
add
cltd
pop
xchg
leave
xor
xor
dec
and
xchg
scas
jle
xchg
cmp
cmp
mov
sahf
mov
imul
dec
stc
push
mov
into
xor
fcmovb
mov
xchg
or
cmp
jno
add
fidivl
out
pop
push
dec
sbb
repnz
push
sub
sub
data16
fcmovnb
sub
sahf
jge
test
inc
loopne
dec
xchg
add
sub
int
mov
scas
sbb
lahf
pop
jb
lea
ljmp
ljmp
stc
mov
cli
jle
cmp
mov
cmc
aam
cs
jns
push
xchg
fistl
and
cmp
out
shrb
pop
sbb
pushl
lods
not
sub
cli
stos
pop
data16
cltd
ret
test
aas
lret
adc
dec
lock
mov
out
jp
sub
stc
leave
inc
push
psubusb
and
je
popa
ljmp
fistpl
scas
bound
out
ret
mull
mov
arpl
xchg
mov
lahf
movsb
hlt
popl
sbb
dec
dec
fdivs
jp
lock
repnz
dec
mov
mull
notl
jecxz
inc
mov
cs
dec
scas
andl
jb
push
ja
bound
fwait
push
rol
push
xor
fs
fsubrs
push
add
cmp
ds
inc
and
push
or
ja
xchg
lods
jp
mov
outsb
inc
sub
xchg
mov
mov
scas
sub
aam
pop
lret
sbb
loope
pop
inc
push
dec
cwtl
subb
dec
inc
and
mov
adc
xchg
and
xchg
cli
nop
test
int3
fwait
cmp
lds
movsl
arpl
imul
fwait
or
sbb
mulb
mov
in
pop
mov
outsb
in
pop
rcl
push
dec
cli
shl
lds
movsl
jb
imul
cld
push
push
or
movsb
mov
jnp
test
dec
inc
and
xor
jl
insb
xchg
sbbb
xrstors
stc
xchg
das
and
jns
pop
dec
and
movsb
sub
push
in
into
xchg
cltd
js
scas
hlt
adc
ja
xchg
pop
push
ljmp
add
dec
out
das
adc
xchg
rorb
lea
jo
movsl
out
fsubl
fdivr
xchg
xchg
stos
clc
jnp
mov
xchg
and
push
sbb
jp
jo
cmpsb
xor
scas
xlat
xor
jne
cmp
fnstsw
push
lods
stos
or
add
xor
jge
sub
movsb
popa
out
and
mov
dec
cmp
lret
lods
sbb
jmp
jecxz,pn
inc
enter
xchg
sbb
push
shll
rorb
movsb
cwtl
fld
fisttpl
or
out
test
in
lcall
xor
out
mov
loop
cwtl
in
mull
sbb
mov
test
subb
cmc
or
mov
xchg
dec
mov
inc
mov
imul
ss
movsl
mov
jnp
out
add
je
stos
arpl
cmp
fists
hlt
imul
daa
jno
xchg
jge
fiaddl
stos
sub
aaa
repnz
out
pop
dec
jb
dec
jo
nop
cmpps
sub
mov
clc
clc
or
add
mov
adc
movsb
lods
daa
lea
sub
add
into
inc
sub
repnz
rcl
jl
jo
sbb
bswap
into
and
mov
stc
mov
sbb
inc
mov
adc
adc
js
sub
add
jbe
mov
push
jecxz
mov
shlb
movsl
lods
das
jl
aam
hlt
sub
shrb
add
jl
outsl
loopne
divps
mov
xchg
xor
inc
push
lret
adcl
pop
push
adc
into
stos
sbb
iret
movsb
adc
mov
iret
ss
inc
stc
xor
and
mov
lea
mov
xor
rcrl
cmp
and
lds
push
hlt
cmp
cmp
lods
cltd
shll
sbb
mov
aaa
addr16
out
gs
sub
fs
imul
dec
jmp
pop
out
lret
pop
jo
out
push
les
lcall
addr16
xor
js
push
aam
cld
add
lods
push
imul
lret
mov
dec
add
lds
inc
hlt
jl
jg
cwtl
cmp
clc
sub
push
and
ret
inc
mov
adc
dec
cmpb
and
pop
ret
xchg
stos
fst
fnstsw
daa
testb
cmpsb
xorb
or
cmp
adc
jae
xor
je
jp
shll
pop
aaa
mov
mov
adc
insb
lahf
jmp
xor
dec
in
xadd
adc
rorl
mov
or
mov
dec
sahf
lds
xchg
cmpsb
mov
aad
fistps
aas
clc
inc
jp
and
idiv
dec
lock
mov
sbb
xchg
adc
in
sub
sahf
das
cmp
xchg
bound
pop
aaa
and
inc
stc
fcmovnbe
sbb
xchg
into
jne
pop
xor
adc
xchg
push
popa
mov
xchg
hlt
push
add
std
jno
ja
jbe
xchg
cli
lods
stos
jecxz
pushf
out
inc
and
movsb
mov
pop
mov
fldl
cmc
pop
test
add
fnstcw
sti
test
gs
out
dec
insb
outsl
pop
pop
outsb
notb
cmp
inc
xchg
and
test
shrl
mov
aam
push
aaa
sub
push
dec
xor
imul
mov
lahf
lahf
popf
add
ds
into
xchg
js
aam
test
inc
sub
testl
mov
pop
mul
test
inc
cmpsl
sahf
out
dec
mov
xchg
iret
ficoml
loope
xor
int3
xchg
pop
sub
cs
arpl
add
int
pop
jmp
mov
rcll
mov
jno
inc
jbe
mov
movsl
pop
or
fldl2t
fdivr
nop
and
inc
sti
test
fdivs
je
cltd
add
push
push
jge
adc
dec
fcmove
push
xchg
pop
or
xchg
mov
imul
arpl
inc
jne
jl
test
and
addr16
ret
xlat
sub
pop
mov
into
mov
sbb
jae
adc
lea
jo
js
jae
outsb
push
mov
lock
fcomps
push
jg
jns
inc
ret
lea
cltd
test
hlt
lcall
jg
rorl
sub
je
popf
jns
mov
add
xchg
cmp
jg
xchg
inc
pop
fidivl
sub
or
lret
mov
add
les
pop
cmpsb
movsb
mov
jg
or
push
pop
fsubl
movsl
add
sahf
pop
inc
cmp
lcall
push
ja
insb
insl
addr16
xorl
loop
mov
dec
lret
jecxz
sti
insb
mov
mov
cmpxchg
jbe
xchg
test
stc
jns
imul
mov
ja
push
or
or
out
push
sbb
and
add
sub
es
and
pusha
mov
gs
rcrl
push
dec
add
es
cmpsl
iret
arpl
nop
sti
sub
cli
negb
fs
movsl
pop
stc
in
dec
add
or
js
jnp
xor
mov
jae
mov
or
xor
cmpsl
lahf
sbb
xchg
movsb
imul
test
or
jmp
dec
loope
fwait
stos
mov
jp
push
lret
clc
adc
lods
push
sub
leave
xor
outsl
or
imul
in
xchg
dec
jp
jae
and
mov
inc
test
repz
ss
lret
add
ret
lret
pop
ret
xchg
and
pop
mov
xchg
push
cmp
sub
divl
scas
imul
pop
enter
cmp
xchg
cld
inc
es
mov
push
out
and
cli
inc
es
and
push
aad
sti
xor
mov
lret
push
mov
xchg
push
pop
cmc
fdivs
push
ss
inc
std
pop
sub
clc
jo
push
out
sbb
push
or
hlt
addr16
mov
xchg
xchg
in
push
cwtl
dec
pmaxub
inc
mov
lea
faddl
cmpsb
xor
sub
scas
dec
out
add
leave
and
inc
xor
or
icebp
jb
lods
lds
and
pushf
jp
ja
data16
loop
xchg
sub
sub
push
add
lret
xor
sbb
dec
movsb
push
pop
xchg
cmp
stos
insb
pop
push
push
ficoml
add
pop
or
call
fmulp
inc
insb
mov
pop
je
into
je
aam
push
bound
out
bound
cmp
rclb
insl
sti
mulb
adc
cli
inc
out
sti
xorl
push
inc
jno
xorl
movsb
in
jecxz
add
cltd
fstpl
mov
push
ds
lock
jge
in
adc
dec
lea
repz
rorb
push
ret
mov
fmul
adc
sbb
and
outsb
push
loopne
xchg
xor
insl
test
sbb
cltd
out
fildll
xor
inc
lcall
call
cmp
mov
movsb
js
mov
cmc
sahf
xchg
jne
loopne
jno
stc
push
mov
xor
xor
lahf
mov
or
pop
sbb
and
sbb
popf
xor
fsubl
mov
and
out
int
and
sub
sbb
ja
mov
cmp
imul
cmp
nop
inc
push
aaa
les
in
and
js
pop
enter
xchg
shlb
popf
sub
aam
add
lods
mov
aad
mov
mov
pop
pop
mov
fs
das
mov
das
cmp
jns
cmp
ds
aaa
in
pop
mov
loop
push
ljmp
push
cmc
aas
lods
cmp
out
dec
sarl
fnsave
push
dec
in
cmc
pop
movsl
into
dec
mov
or
or
mov
xchg
iret
push
push
dec
and
insb
adc
sub
pop
lahf
or
jge
mov
cli
or
popa
mov
std
data16
les
ljmp
mov
jp
divb
sbb
add
stc
add
sub
outsb
hlt
pop
js,pn
cltd
push
inc
xor
push
fnstcw
sub
jmp
and
ss
hlt
xlat
mov
cmp
mov
xchg
dec
sbb
pop
lock
push
lea
cmp
mov
imul
inc
stos
and
imul
cmpb
ljmp
hlt
outsl
lahf
sbb
push
fcmove
sub
cmp
jnp
jl
jl
push
jne
movsb
repnz
jb
scas
inc
pop
mov
inc
bound
jg
sarb
xchg
outsb
or
in
outsl
outsb
mov
cli
fwait
in
xchg
jae
dec
sarl
dec
call
or
cmp
mov
jno
ret
lea
sub
and
sbb
in
xchg
xor
out
aad
adc
or
test
shrb
sub
cmc
mov
push
fwait
clc
push
ljmp
mov
sti
pushf
sbb
enter
or
in
mov
andb
aad
pop
mov
mov
adc
shr
mov
mov
push
aam
add
cmp
fistpll
push
insl
add
cmpsl
sahf
cwtl
dec
mov
jmp
inc
push
inc
dec
dec
xchg
testl
into
xlat
push
cmp
jnp
das
xor
inc
sbb
dec
xor
xchg
dec
sbb
es
lods
es
xchg
pop
dec
sub
data16
and
lret
test
andl
aam
cmp
sub
jne
jp
add
insl
lods
jle
inc
inc
xor
dec
aaa
cmp
test
fs
and
rcll
ffreep
push
mov
ljmp
mov
jmp
loopne
call
lods
xchg
mov
xor
mov
cmp
stos
insl
loope
xor
fidivl
mov
xchg
rol
push
jmp
lods
xor
push
add
data16
sub
inc
imul
in
scas
inc
test
or
cmp
xchg
or
jmp
lods
pushf
dec
mov
sbb
and
xor
rcr
mov
mov
inc
push
add
and
push
insl
lcall
call
push
jne
xchg
enter
mov
stc
cmc
rcrb
cmp
adc
pushl
add
subl
mov
jno
subl
cmc
fnstcw
out
and
les
jne
repnz
aad
jb
xchg
dec
out
nop
push
lods
cmp
sub
sbb
addl
call
std
fdiv
and
or
mov
pop
leave
push
cli
push
adc
stos
fstl
arpl
lods
add
ret
scas
add
sti
xorb
popf
xor
mov
aad
cltd
and
mov
fldenv
lock
mov
cmp
cmpsb
jbe
lret
adc
stos
mov
push
sub
sub
push
mov
jnp
leave
jae
sbb
and
cmpsl
mov
jecxz
shll
inc
gs
lahf
xchg
lods
or
lcall
lret
cmp
movsl
pop
pop
inc
jbe
loope
das
add
scas
add
aas
push
or
push
mov
pop
jle
adcb
lods
out
lahf
outsl
fistpll
pop
int3
mov
mov
xchg
lods
outsb
lods
stos
loop
ficoml
in
aas
add
adc
or
repnz
xor
rorb
mov
pop
pop
sbb
out
icebp
addr16
pop
or
test
out
jl
mov
adcb
dec
pop
shrl
loop
pop
fstps
int
ror
scas
dec
loopne
ds
push
mov
xchg
jmp
mov
pop
std
cwtl
push
mov
call
mov
loop
sbb
xor
je
sub
fcmovnb
imul
scas
jbe
cs
mov
fldl
or
dec
in
ss
cmp
mov
and
pop
ljmp
fwait
out
cmpsl
mov
in
loope
sarb
dec
in
push
push
sub
lock
imul
jl
inc
repz
fbstp
xchg
xchg
lods
out
pushf
mov
cmp
dec
insb
andb
sbb
stos
into
into
push
insl
popf
fs
outsb
mov
sub
test
cltd
sub
push
clc
inc
mov
cmp
rcll
into
inc
rcrl
mov
das
sub
xor
into
fidivrl
and
fisubs
fnsave
mov
mov
pop
out
jne
dec
cli
inc
shrb
and
add
jbe
test
mov
jbe
xchg
int
and
or
js
in
fidivl
mov
cltd
lock
adc
cltd
popf
call
iret
sbb
add
ds
jp
and
jo
mov
sbb
inc
mov
jae
jecxz
out
sub
lret
ret
push
outsb
movsl
scas
push
ds
xor
testl
out
push
sbb
jmp
outsb
pop
ficoms
pop
invd
pop
mov
push
ljmp
jae
and
mov
daa
mov
dec
dec
fisttpll
loope
cmp
nop
sub
aas
pop
mov
repz
lret
push
lds
or
inc
repnz
fistps
mov
mov
inc
or
xor
icebp
jb
fdivrl
xor
imul
sar
push
mov
lcall
orl
loopne
xor
or
rorb
push
andb
cli
jp
or
fnstcw
sub
fisubrl
dec
inc
dec
mov
mov
int
xorl
hlt
xor
or
jo
adc
and
fcmovnb
ret
pop
jmp
jmp
mov
bnd
cmp
cmp
pushf
cmc
inc
and
stc
mov
cmp
imulb
mov
or
adc
or
inc
cmp
inc
ds
into
mov
jge
pop
or
jmp
pop
data16
sahf
xor
or
sarl
cmp
pop
mul
aas
lea
adc
sbb
aad
mov
add
rcrl
cmp
clc
mov
push
mov
insb
pushf
fsubl
jge
mov
mov
jle
mov
out
sbb
push
mov
lea
jnp
jne
hlt
imul
mov
mov
mov
rorl
mov
mov
dec
fadds
sub
xchg
jbe
test
imul
inc
push
lods
mov
lret
sbb
lock
sbbl
or
push
adc
jno
jecxz
and
and
push
out
test
push
dec
mov
add
inc
jge
insb
in
add
push
xor
xchg
and
arpl
sbb
xor
cmpb
pop
mov
ss
jp
sarb
push
jmp
push
stos
pop
fisubl
mov
pushl
push
je
push
repz
repz
inc
je
inc
ds
add
gs
push
sbb
rcrb
push
xor
mov
xor
jg
push
xchg
mov
mov
cmp
push
adc
inc
rcr
stc
xor
or
sub
mov
jnp
add
clc
repz
pushw
lret
mov
inc
cmp
sub
out
std
add
xchg
xchg
sub
subb
inc
and
xchg
cmp
in
lods
mov
add
push
mov
cmp
mov
mov
or
jg
pop
bound
sub
mov
out
xlat
lea
push
loope
sti
in
lock
mov
sti
sub
mov
pop
or
xor
push
sub
mov
insb
adc
inc
cmp
popf
cs
jl
dec
enter
fsubs
push
shll
lods
enter
mov
shrb
jo
and
and
test
in
rcrb
adc
jns
shrb
push
and
nop
push
inc
fistpll
decb
test
out
sub
push
in
dec
push
jae
movsb
mov
inc
xchg
test
xor
or
insb
xor
cmp
xchg
aaa
das
out
or
jb
xor
push
pop
mov
xor
cld
jmp
push
andl
cmp
dec
cld
mov
sbb
pop
addr16
cwtl
sub
pop
mov
outsl
cli
mov
sub
dec
xchg
xchg
pop
js
fwait
cli
sbb
lds
ror
ret
insl
sbb
rolb
out
adc
mov
lds
js
adc
sbb
iret
push
arpl
std
mov
jg
mov
dec
mov
inc
aaa
fs
aas
pop
jecxz
js
dec
pop
inc
insl
pop
pop
sub
jle
or
fmuls
or
mov
imul
jae
dec
mov
mov
ror
fwait
cmp
mov
js
enter
rclb
cmp
aam
mov
cltd
hlt
loope,pt
movsl
test
dec
push
mov
aaa
call
aas
stos
xchg
lcall
mov
mov
mov
sub
in
into
cs
mov
lock
mov
imul
fildl
add
adcb
pop
repz
xchg
xor
mov
aas
add
cmpsl
xchg
xchg
stos
adc
ja
adc
inc
insl
push
push
push
ret
lret
imul
and
add
into
faddl
out
jge
scas
sub
mov
jbe
outsl
popf
outsl
out
pop
jne
jae
xchg
mov
ja
ljmp
xorl
xchg
shrb
sub
cltd
enter
lds
scas
pop
mov
push
mov
ja
out
inc
in
push
adc
jno
out
fs
sub
adc
adc
lret
cmp
cmpb
flds
hlt
or
push
addl
jns
shrb
fidivrs
push
push
test
ja
repz
dec
sub
push
cmp
int
jnp
sub
lret
scas
sbb
add
and
fmull
imul
add
xchg
push
cmpsl
push
push
mov
jns
not
stc
pop
int
push
sub
sbb
pop
outsb
lea
and
out
dec
xor
ljmp
mov
cmc
pop
pop
xchg
in
xor
pop
dec
sbb
sbb
xor
adc
out
mov
xchg
rcr
das
or
emms
loop
dec
icebp
sbb
pop
push
mov
or
inc
loopne
pop
mov
imul
jno,pn
bound
icebp
push
jbe
pusha
mov
adc
loop
pop
mov
adc
mov
mov
or
jb
les
int3
popl
lea
das
stos
push
mov
add
stos
inc
int
cli
enter
or
mov
add
sbb
xchg
mov
mov
es
ja
aaa
rclb
addr16
popf
jns
loop
je
repnz
test
fimull
jle
ljmp
lahf
aam
in
sub
loop
jge
push
and
inc
mov
pop
mov
loopne
stos
test
lret
push
mov
push
call
jg
out
movsb
adc
push
dec
add
aas
adc
daa
outsb
pop
shrb
mov
xor
ds
in
es
mov
push
mov
xchg
arpl
fstpl
rcrb
dec
inc
cwtl
lret
mov
dec
leave
xchg
mov
aas
xor
sub
movsl
movsl
jmp
push
sbb
inc
lods
inc
jne
cwtl
push
adc
ja
and
hlt
pop
sub
jb
pop
sub
pop
cmp
mov
hlt
inc
mov
loopne
push
inc
sbb
mov
push
sbb
xor
stos
xor
push
inc
pop
in
mov
push
sbb
xor
sbb
les
sbb
mov
mov
inc
leave
jnp
xor
les
jno
cwtl
cmp
pop
das
stos
repz
lea
push
insb
jno
icebp
lahf
outsb
push
or
adc
jg
divb
sahf
mov
insl
cmp
scas
gs
sbb
cs
add
or
out
or
in
repnz
mov
pop
inc
cltd
movsl
and
inc
pop
add
inc
xchg
int3
ret
mov
mov
mov
loopne
repnz
jo
loop
push
aas
adc
dec
push
inc
sub
sub
ficoms
push
dec
pop
and
test
jns
dec
lahf
adc
mov
test
dec
jecxz
test
sub
dec
pop
add
mov
mov
pop
sti
pusha
pop
cmp
test
xchg
adc
pop
arpl
cs
mov
mov
in
inc
lods
imul
imul
and
xorb
lahf
loopne
push
insl
inc
xchg
cld
rcrb
push
add
lea
sub
mov
fwait
aam
jg
sbb
loopne
subl
arpl
xchg
jae
push
inc
add
fisubrl
push
das
in
mov
cmp
loope
fs
xor
mov
data16
xor
mov
or
andl
leave
stos
movsb
xor
loopne
dec
mov
das
cmp
sub
sarb
dec
out
jnp
or
lcall
pop
mov
fdivrs
lods
imulb
jno
sub
sar
or
out
sbb
pop
cmpsb
loope,pt
jg
push
cmpsl
out
sbb
mov
pop
into
lods
xchg
arpl
sbb
testl
xchg
jae,pn
jo
xchg
daa
not
mov
add
pop
sbb
lret
cmpsb
aas
add
cwtl
icebp
cli
add
mov
mov
jmp
jne
pusha
test
and
mov
div
cmp
testb
int3
pusha
ja
push
test
mov
push
ljmp
out
dec
or
ret
cmp
pop
push
dec
mov
call
mov
outsb
imulb
xor
cld
mov
stos
loop
or
push
inc
loop
dec
jp
test
sbb
pop
mov
aam
or
repnz
sub
xorl
push
inc
adc
lahf
nop
lcall
ret
test
add
outsl
xchg
sbb
fidivl
icebp
sub
jmp
stc
clc
xchg
stc
push
movsb
jne
dec
pop
push
sbb
loop
cld
aas
mov
pop
push
cmpb
les
xchg
xchg
dec
cwtl
xchg
dec
fsubl
out
fisttpl
adc
sub
dec
mov
add
test
xor
mov
inc
ss
std
movsb
xor
test
hlt
adcb
imull
aam
xor
pop
and
aas
mov
int3
push
cmp
mov
imul
inc
iret
sti
jne
push
scas
ret
sbb
or
shll
or
push
inc
and
mov
lret
cs
push
sti
negb
hlt
in
cmc
fisttps
jge
lahf
pop
mov
das
inc
aaa
test
jg
subl
pop
pop
add
push
push
push
jg
sub
sti
push
adc
jno
mov
inc
mov
mov
call
adc
clc
mov
pop
or
add
div
add
dec
shr
enter
mov
test
inc
jmp
lcall
or
jns
mov
inc
jno
mov
popa
pusha
imul
iret
sbb
fadds
fwait
dec
push
je
cmp
sbb
subl
hlt
add
pop
mov
into
fdivrl
sub
arpl
repnz
aam
push
or
push
or
or
lret
ficomps
adc
jp
dec
scas
sahf
xor
jg
lods
cmc
sbb
call
inc
iret
fdivp
in
lret
pushf
mov
add
mov
jno
mov
fs
or
push
jecxz
and
jl
cmp
in
sbb
insb
adc
loop
xchg
inc
outsl
lret
xchg
push
mov
xchg
jecxz
sbb
or
scas
outsb
xlat
mov
cwtl
add
pop
fnstcw
fdivrl
push
sbb
outsb
daa
fdiv
mov
pusha
cmp
xchg
loope
mov
cmp
and
mov
or
adc
fisubrl
mov
pop
mov
adc
adc
mov
or
sahf
call
pop
frstor
inc
pop
adc
cmp
in
adc
mov
not
inc
sub
sbb
mov
xlat
push
sbb
and
daa
lock
test
xorl
ss
int3
push
mov
sbb
fimuls
jecxz
cmp
loopne
test
je
xchg
lcall
repz
lds
cmp
pop
sbb
mov
adc
cmp
dec
mov
inc
negb
xchg
rcrl
pop
loop
mov
mov
int3
arpl
dec
mov
sub
pop
enter
pop
jecxz
mov
fwait
mov
cmp
xchg
push
iret
sar
and
mov
sub
lods
adc
or
mov
arpl
je
inc
hlt
test
mov
xor
xor
mov
mov
inc
pop
incl
adc
mov
fidivrl
dec
inc
or
sbb
and
mov
loopne
pop
icebp
or
test
aaa
stc
push
dec
lcall
cmp
push
fisubl
out
add
movsb
pushf
in
mov
mov
fcoms
rcrb
out
sub
loope
dec
mov
or
pop
mov
mov
inc
xor
xor
push
push
mov
mov
pop
or
and
mov
push
stos
mov
insb
sub
or
fmul
mov
sbb
mov
xorb
xorb
daa
lret
call
in
inc
movsb
sahf
mov
mov
jg
sbb
pop
inc
sbb
jns
lret
inc
lock
and
adc
xchg
loope
fisubrs
push
mov
mov
outsb
jae
add
xorb
ljmp
mov
jns
mull
xchg
pop
clc
sti
mov
movsl
incl
mov
mov
jbe
cmp
sbb
inc
mov
or
jecxz
shl
jne
mov
loope
dec
mov
and
push
inc
cmp
lods
sbb
xchg
jp
push
fwait
je
pop
cwtl
sbb
xor
pop
lds
addl
xchg
fdivrl
or
inc
dec
ds
or
cmpsb
test
and
push
jae
sub
dec
xor
daa
inc
outsb
les
xchg
sbb
mov
call
push
dec
cmp
nop
dec
push
mov
aad
sub
adc
test
pushf
xor
int
sbb
aad
movsb
rolb
test
pop
jnp
loope
cli
mov
scas
les
insb
faddl
mov
arpl
sbb
sub
lcall
out
int3
negl
push
imul
aam
ljmp
test
jb
sub
mov
in
or
ja
sti
js
jp
cwtl
xor
sub
xchg
jg
loopne
inc
test
lret
shlb
push
test
les
mov
fsubrl
or
shl
test
and
mov
ffree
gs
imul
or
addr16
inc
xchg
imul
in
mov
pop
lods
fistpll
es
movsl
cmpsl
push
popf
dec
lahf
dec
jmp
mov
jne
mov
sbb
cmp
mov
cmp
jle
mov
mov
push
sub
movsl
rcl
mov
pop
stos
fisubs
jg
jbe
test
dec
sbb
outsb
sti
jge
pop
lcall
mov
aad
pop
and
ds
cltd
adc
dec
push
repnz
pop
dec
shlb
stos
push
pop
jecxz
outsl
and
leave
rcrl
sahf
enter
call
dec
push
das
sbb
sbb
roll
sub
lea
push
lcall
mov
cmp
sbb
jl
sbb
mov
loop
shrl
sbb
dec
std
adc
mov
popa
lods
enter
pop
arpl
jg
pop
addr16
xor
jle
imulb
loop
testl
mov
ret
in
sbb
xchg
cltd
outsb
std
jmp
mov
scas
mov
sbb
lea
xchg
imul
movsl
xchg
out
nop
lea
aaa
or
lods
jecxz
ja
mov
cltd
dec
cli
jg
jecxz
lods
scas
faddl
and
and
or
pop
stc
xor
xchg
js
rorb
xchg
push
addl
push
lret
out
movsb
mov
rcl
aad
int
iret
push
ljmp
cwtl
les
cmpb
out
xchg
bound
lea
lcall
std
xchg
sbb
dec
bound
inc
inc
pop
in
and
testb
mov
or
call
sub
mov
jns
cmp
aaa
lods
scas
movl
insl
out
jge
fisubrs
cmp
pop
lock
cmp
in
adc
mov
or
fiaddl
das
fwait
xchg
add
fistpll
sbb
push
call
cmp
inc
flds
mov
int
cmc
add
int3
add
lods
add
mov
scas
dec
xchg
fmull
jl
push
imul
insb
cld
inc
dec
mov
stc
pop
sarb
pop
xchg
dec
mov
nop
pop
stos
xchg
xorl
push
cmpsb
and
pop
sbb
pop
lods
dec
rol
movsb
aad
sbb
mov
ja
mov
inc
mov
icebp
not
andb
lds
jmp
lods
sti
sarb
xor
idivl
pop
data16
adc
xor
jecxz
jno
jbe
and
adc
sbb
push
adc
insb
xor
jnp
stc
call
lods
xor
lret
cli
jl
lock
jmp
inc
scas
xchg
loopne
inc
adc
mov
js
cld
adc
add
jle
jecxz
jno
ret
stos
fs
xor
sti
xchg
mov
lahf
adc
sub
filds
fmull
adc
sub
cmp
xchg
rorl
lods
jo
fmuls
pop
stos
push
sbb
xchg
cmp
jb
dec
inc
pop
jae
mov
xor
int
icebp
scas
push
outsl
mul
int3
xchg
jg
lcall
mov
in
and
xor
addr16
sbb
shl
aad
sub
lret
or
dec
icebp
das
ficoms
pop
dec
clc
push
pop
rorb
in
in
xlat
xchg
dec
push
loopne
pop
and
std
and
dec
adc
pop
addr16
cmp
fisubs
dec
sub
pop
rcll
out
mov
inc
mov
adc
pop
sub
in
inc
outsb
repnz
inc
mov
mov
cmp
xchg
and
cli
mov
sbb
or
mov
sbb
mov
sub
pop
and
mov
mov
andb
sbb
shlb
inc
inc
xchg
pop
ret
out
out
shrb
inc
icebp
xor
cltd
jo
test
pop
xchg
lods
or
repnz
and
mov
push
fs
fcmovne
mov
fistpll
jne
sti
xchg
jns
adc
cmp
push
jl
push
mov
adc
push
aad
outsl
xor
pop
mov
push
ljmp
mov
inc
lds
cmp
lcall
cwtl
pop
mov
dec
in
notl
dec
repz
stc
push
es
cmp
insb
rclb
cld
mov
lock
outsl
and
add
push
mov
sbb
leave
pushw
sarl
sbb
mov
fcoml
mov
cld
sti
test
repnz
fcmovbe
in
mov
mov
pop
dec
and
fstp
jb
bound
stos
sub
adcb
push
les
jle
xchg
push
push
xor
and
or
inc
inc
mov
sub
aaa
cmp
rcll
push
lret
lock
sahf
fsubrl
mov
loope
mov
sub
les
mov
stos
mov
scas
mov
js
int3
movsl
mov
xchg
enter
sbb
arpl
jl
scas
aaa
cmpl
sarb
iret
icebp
int
or
push
push
adc
dec
sbb
cmp
push
dec
std
add
nopl
int
push
inc
xor
add
ljmp
xchg
and
or
dec
dec
push
rcl
mov
cmpsl
out
mov
sub
jle
cltd
lahf
dec
mov
shrb
sbb
aam
call
mov
xor
dec
inc
xorb
rcrb
ljmp
iret
out
es
aas
lahf
incb
cmpsb
int
bnd
outsb
outsb
jp
sbb
and
xor
fldl
mov
cmpsb
insb
sub
add
dec
jbe
lret
sub
daa
xchg
sbbb
inc
out
and
xor
and
sbb
lods
and
out
xchg
pop
data16
mov
jecxz
fwait
dec
inc
ss
jecxz
or
into
ret
inc
pop
dec
paddsb
cmp
or
or
cmc
xor
mov
xchg
ds
mov
scas
stos
jno
xor
dec
shlb
pop
icebp
lea
jle
int3
xchg
stc
add
and
ljmp
dec
inc
mov
lret
pop
rorb
jb
mov
cs
and
xchg
add
cmp
outsl
mov
sub
leave
cmp
outsl
es
add
fcoms
dec
push
scas
xlat
xor
popa
mov
mov
nop
inc
mov
es
orl
sahf
pop
pop
sub
and
fisttpl
pushl
dec
jmp
sbb
cmp
ds
leave
push
insb
xor
sub
jmp
mov
jecxz
filds
add
shl
enter
mov
pop
out
imul
test
ja
xchg
inc
cld
test
mov
call
stc
mov
fnstsw
mov
rol
mov
pop
mov
sbb
in
jecxz
push
int
and
fldcw
pop
mov
sbb
xor
mov
addps
fcoms
jecxz
xchg
repz
iret
inc
push
inc
imull
adc
xchg
add
cmp
push
ret
xor
pop
jecxz
aaa
jne
or
in
rclb
mov
pop
lds
test
mov
sbb
cmp
cmp
mov
in
pop
jmp
mov
test
xchg
push
addr16
adc
movsl
movsb
push
pminub
addl
insl
int3
push
dec
cmp
hlt
clc
in
mov
mov
ss
xchg
lea
push
mov
mov
mov
xor
dec
bound
test
jno
pop
sbb
movsb
pop
int
push
push
xor
jle
leave
inc
lods
fcom
push
out
test
sub
out
mov
lcall
arpl
jo
pop
mov
or
adc
lahf
daa
lret
int3
in
aam
mov
fildll
jg
adc
sbb
mov
and
xchg
stc
or
mov
or
xchg
add
dec
xor
jne
icebp
in
rcrl
icebp
pop
imulb
aad
xchg
lret
les
push
imul
add
loopne
adc
push
add
pushf
sbb
cmp
xor
push
xor
scas
push
rorb
or
and
stos
adc
mov
int
jo
mov
pop
out
dec
sub
or
push
pop
sarb
loope
mov
hlt
dec
outsb
clc
in
stos
xor
add
jae
jl
or
cmp
push
icebp
cmpsl
test
aam
add
aam
push
lret
jge
dec
and
lcall
jne
jecxz
dec
test
jbe
insl
adc
loopne
aad
push
lret
xchg
mov
rclb
push
stos
shlb
sbb
mov
adc
adc
stos
outsl
and
ss
orl
xor
jae
cmc
mov
mov
sbb
jo
addb
rcrl
cli
les
scas
in
xor
and
sub
push
inc
fimull
jge
cltd
fidivl
mov
fldenv
push
sbb
cmp
in
imul
inc
cmc
je
mov
insb
inc
leave
punpckhdq
inc
mov
imul
movsb
mov
adc
sbb
and
cmc
dec
sub
jp
mov
inc
test
icebp
in
push
cltd
cld
in
adc
ror
sub
mov
jg
adc
fisubrl
mov
nop
jmp
outsb
add
push
lret
andl
fadd
aas
inc
adc
repz
adc
dec
mov
out
or
and
or
cwtl
xchg
mov
dec
xor
es
stos
cmp
fcmovu
mov
repz
cltd
cli
adc
cmpw
ror
push
inc
insl
jg
push
cmp
dec
push
sbb
and
cmp
push
leave
insl
stos
push
ret
fs
iret
aaa
lcall
inc
insb
outsl
cmpsl
mov
pushw
mov
aaa
pop
sbb
subb
fbld
es
push
push
mov
std
es
mov
aad
mov
cmp
adc
jmp
push
cmpsl
xor
dec
mov
adc
mov
aad
imul
mov
push
fs
mov
stos
xchg
cmp
test
xchg
subb
mov
lock
sahf
sbb
sub
daa
mov
pop
cmp
xchg
loopne
dec
cmp
inc
addr16
bound
xchg
jns
dec
mov
mov
push
cmp
ljmp
xchg
xlat
inc
jge
jl
bound
pop
push
negl
jo
cwtl
xchg
hlt
cs
fistps
mov
sbb
or
cmc
es
scas
popa
loopne
add
js
dec
xor
mov
je
adc
in
pop
push
icebp
pushf
cmpsl
pop
adc
jg
sub
dec
adc
mov
xchg
jg
lret
sub
in
ds
jmp
inc
add
adc
sarb
mov
shl
cmp
sub
jb
inc
and
push
cmp
int3
lret
cmpsl
push
lcall
arpl
jne
pop
xlat
pop
jmp
cli
xchg
lds
dec
jp
pcmpeqw
mov
imul
dec
xchg
or
and
dec
push
loope
shlb
and
pop
sub
movsb
push
ds
sub
cmp
ficoml
dec
sbb
adc
mov
movsl
mov
add
imul
cs
add
cmp
inc
jge
jns
mov
imul
adc
in
adc
pop
ja
inc
subl
push
lds
in
outsb
pop
imull
push
dec
or
pop
call
or
mov
fdiv
js
and
scas
cmc
idivl
mov
jp
fcomps
aaa
xor
cmp
jae
xchg
sub
lret
pop
jmp
jbe
sbb
pop
hlt
jne
test
jno
pop
std
frstor
push
mov
jp
mov
mov
subb
push
dec
add
sub
cmp
js
pop
add
outsl
adc
int3
mov
cmc
pop
cmpb
sub
adc
fists
testb
jo
dec
cmp
leave
or
mov
insl
cmp
push
incl
roll
mov
xor
dec
adc
add
ret
cmpsb
lahf
ret
cmp
cwtl
jne
loope
mov
adc
js
inc
jo
add
lods
gs
ljmp
cmc
pop
out
inc
lea
cs
outsb
test
fildll
fs
loopne
pop
outsb
push
mov
dec
scas
insb
inc
gs
clc
xchg
xor
cmc
testl
outsl
push
in
outsl
div
sub
mov
jle
sub
cmp
inc
arpl
cwtl
jns
or
sbb
lret
ret
adc
clc
xchg
and
adc
loopne
sub
dec
or
mov
in
mov
xchg
insb
sarl
rcr
pop
dec
aam
jle
or
orl
and
aas
in
pop
lea
nop
jae
dec
push
mov
cmp
scas
mov
mov
shlb
cwtl
xorl
sbb
jle
dec
and
adc
pop
outsl
xchg
jecxz
xchg
nop
fdivs
mov
stos
scas
andl
loop
inc
jno
pusha
rcll
leave
add
dec
lcall
ret
push
adc
jge
loop
add
aas
or
ret
pop
mov
ret
jge
push
js
ja
popa
lea
fcmovnu
sbbl
push
jmp
pushl
adc
repz
cs
dec
mov
pop
enter
dec
subl
cwtl
repnz
lret
cmpsl
lods
scas
adc
sbb
mov
xchg
sub
out
jg
or
loopne
insl
in
out
adc
xchg
pop
lret
push
cmp
mov
popf
cli
and
les
xor
mov
out
test
add
lds
scas
cltd
inc
insb
sbb
add
mov
jmp
push
sub
pop
xchg
push
cld
jp
out
pop
sahf
aam
xor
mov
or
mov
cmc
stos
lea
leave
adc
cs
mov
mov
push
xor
in
cmp
mov
mov
cmp
outsb
imulb
repnz
fmuls
push
pop
mov
inc
aaa
pop
loop
sub
jae
int3
xlat
mov
xchg
jp
sbb
ljmp
mov
fwait
loopne
addb
ja
cmp
push
or
sbb
sbb
aad
mov
pushf
test
shr
sahf
push
pop
adc
push
jo
pop
rolb
idivb
mov
in
cmp
aaa
push
push
cmp
fsubrl
outsb
pusha
dec
fimuls
loop
lods
insb
sub
xor
xchg
ffreep
mov
cwtl
out
sbb
repnz
enter
outsl
mov
inc
lret
fimull
ret
or
in
outsl
cmc
sbb
inc
fistpll
push
fst
in
inc
pop
jp
and
xchg
xorl
rol
mov
xor
pushf
mov
inc
push
popf
mov
jge
int
outsb
cltd
rcrl
mov
icebp
cltd
sahf
or
insb
js
sub
pop
add
aam
mov
adc
mov
int
mov
stos
mov
dec
mov
sbb
xor
fstp
gs
add
pop
inc
mov
dec
mov
mov
cmpl
jl
stos
adc
mov
movhlps
out
xlat
mov
into
or
jae
ss
mov
sbb
clc
jp
sbb
mov
shrl
add
xorb
in
js
cmp
xor
jb
pop
data16
es
ffreep
push
pop
js
add
cmp
imul
mov
jns
push
jecxz
insl
push
add
pop
mov
leave
xchg
dec
mov
mov
in
pop
test
repnz
inc
lcall
pop
int3
in
cmp
into
and
rcll
or
mov
das
push
inc
push
xchg
sbb
imul
jg
adc
mov
stos
andl
cmpsl
xchg
sbb
cmp
fldcw
in
test
out
cmp
iret
xorl
mov
sub
pop
in
loopne
add
mov
sbb
js
lret
je
dec
xchg
mov
mov
mov
cwtl
jne
in
sbb
dec
sbb
nop
addr16
mov
repnz
test
stc
clc
jb
daa
test
repnz
jns
jecxz
dec
in
jns
fisubs
xchg
sbb
dec
sbb
int3
testl
adc
jns
pushf
xor
dec
pop
scas
jno
push
test
dec
mov
push
ljmp
jl
and
xchg
jns
mov
cltd
or
jne
pop
stc
push
pop
mov
imull
jp
stos
out
mov
or
jno
mov
or
pop
into
jnp
add
jmp
icebp
rol
leave
imul
addr16
xor
das
sub
mov
loop
stos
push
jo
aaa
mov
mov
and
adc
aad
jbe
jmp
mov
mov
aam
dec
mov
jne
ljmp
jmp
mov
sub
ret
std
adc
je
mov
movsl
scas
addr16
lret
outsl
enter
push
test
xchg
inc
divl
mov
inc
jb
jb,pt
and
jle
mov
mov
jmp
out
inc
xorb
es
xchg
lahf
inc
std
push
pop
and
insl
cmp
sahf
out
xchg
push
push
dec
or
sbb
add
jno
cmpps
enter
test
push
xor
jae
add
out
push
stos
rcrb
dec
sti
xchg
add
imul
sti
iret
mov
ljmp
jno
aad
push
clc
js
es
jne
stos
jo
xchg
test
les
push
dec
lcall
jno
jo
cmp
into
sti
icebp
ds
inc
cmp
fs
inc
insl
hlt
xchg
bound
adc
ss
pusha
adc
jle
mov
inc
cmp
aas
std
test
fdivrl
xor
jecxz
movsb
mov
sub
or
add
sti
cmp
sub
lret
inc
inc
test
test
xchg
decl
jo
insb
add
pop
and
sub
xchg
scas
mov
pop
mov
jnp
stos
cmp
call
out
pop
push
out
cmp
xchg
inc
insl
lcall
fsubrs
lahf
xor
cmp
sub
scas
dec
pushf
lds
xor
cmovne
inc
movsb
fiaddl
mov
dec
jns
cmpsl
loopne
aam
mov
push
enter
mov
pop
pop
insb
xlat
aas
pop
repnz
or
or
xchg
jmp
pop
add
xor
divl
out
and
xor
cmc
push
aas
cs
cmpsb
and
daa
shr
test
cmp
cwtl
jecxz
mov
sub
hlt
dec
or
jecxz
xor
mov
xor
js
jl
mov
rolb
in
fstpt
and
fisubrl
dec
push
insb
fs
and
mov
lcall
add
mov
jecxz
frstor
cmp
inc
in
lds
and
pop
inc
adc
xor
push
mov
dec
hlt
dec
cmp
sbb
out
or
dec
and
jmp
pop
int
mov
sub
lds
dec
push
outsl
mov
sub
test
mov
sub
lock
scas
jle
repz
je
dec
in
leave
push
jmp
pusha
or
sbb
pop
sbb
lahf
fistps
int
out
iret
and
rolb
add
je
xor
push
loopne
jecxz
push
sti
and
xor
xchg
scas
cli
lcall
pop
in
pop
in
pop
in
test
repnz
mov
dec
mov
xchg
lods
cmc
jle
mov
stos
mov
movsl
lock
jecxz
ret
add
jns
shrl
xchg
out
lods
adc
fidivl
xor
aad
sbb
mov
lahf
std
mov
cmc
movsb
sub
mov
dec
pushf
dec
adcl
cli
pushl
aam
scas
cmp
jmp
adc
mov
es
leave
outsb
dec
adc
adc
or
aas
xchg
movsl
sbbl
adc
xchg
imul
addl
rorl
aas
push
aaa
shll
notl
jo
lret
shlb
scas
mov
stos
sub
push
jmp
or
out
mov
push
mov
addb
jo
dec
adc
cmp
pop
adc
jnp
stc
insl
iret
leave
repz
mov
das
mov
fdivp
jns
outsb
mov
jg
mov
sbb
std
xor
mov
inc
repnz
jne
jb
ja
push
aad
stc
lods
adc
test
add
add
adc
aas
jno
fdivl
mov
mov
fnstenv
ficoml
mov
out
pop
lods
push
hlt
push
sbb
push
fisttpl
je
and
xchg
jmp
xchg
sub
mov
cwtl
lds
nop
test
in
cmp
pop
xchg
jp
cmp
xor
and
ss
rorb
jno
repz
iret
push
inc
out
hlt
icebp
movsb
stos
incl
adc
fsub
push
test
decl
jg
gs
add
aaa
inc
les
in
clc
add
and
jl
adcl
cmp
ljmp
xchg
aad
in
stc
stos
into
cmpl
aam
cltd
cltd
add
fsubl
leave
adc
or
cmp
fsts
out
sub
dec
aad
sbb
ficoms
out
lds
push
sub
mov
imul
inc
add
loope
les
aad
pop
cltd
mov
pop
rcrb
mov
mov
loop
push
bound
inc
inc
repz
mov
xchg
aad
dec
dec
stos
mov
cmp
adc
jl
and
clc
pop
xor
je
les
pop
jb
and
xchg
je
in
and
sub
rcrl
sub
sti
add
jge
lea
out
jnp
push
jb
lea
jae
dec
notb
loop
sbb
mov
mov
loop
outsl
mov
fidivrs
mov
mov
cli
sti
stc
jae
cs
inc
mov
into
pop
cmpsb
cli
stos
cmp
fwait
adc
test
sub
push
pop
in
hlt
adc
in
stos
sahf
gs
jp
mov
js
jle
addl
xor
add
add
mov
out
pop
push
jo
push
xchg
or
adc
adc
mov
rcll
orl
xor
pusha
int3
pop
lahf
lcall
daa
xlat
mov
adc
outsb
and
sahf
test
aam
sbb
or
arpl
cmpsb
loope
sbb
gs
inc
jno
push
mov
push
pop
push
les
dec
rcll
pop
sarb
mov
pushf
xor
jne
addl
or
cltd
jbe
jg
push
fldl
jbe
inc
cltd
imul
test
enter
jb
cmp
adc
sub
rorb
fstpt
pop
popa
shlb
out
aaa
stos
sbb
xchg
dec
ja
push
jl
dec
xor
and
gs
sbb
aam
pusha
pop
or
and
lret
inc
cmpsl
dec
ljmp
mov
fucom
into
push
pop
imul
sbb
cs
add
cmp
cmp
pop
push
ror
in
addr16
mov
popa
cmp
in
xor
movsb
jle
xlat
and
pushf
inc
ret
xor
cmp
cli
ds
sbb
mov
jge
mov
incl
sub
sbb
mov
pop
ds
sub
lods
loopne
mov
mov
or
mov
mov
gs
clc
insl
insl
cmp
cmp
mov
or
pusha
and
hlt
popa
jg
push
dec
cmp
jno
iret
push
pop
xor
fwait
cmc
ficoml
mov
ficompl
ds
jmp
pop
xchg
repz
mov
mov
sbb
mov
mov
lea
ljmp
xor
rolb
rorl
lcall
in
cmp
inc
mov
shrb
leave
test
popa
pop
sahf
adc
aam
mov
test
dec
xlat
fldt
mov
insl
mov
mov
fstps
pop
xor
dec
inc
out
pop
adc
notb
mov
cmpsl
daa
jp
movsl
js
mov
mov
inc
xchg
inc
test
mov
sbb
sti
jmp
cmp
rcl
leave
imul
repnz
xchg
push
xchg
mov
rcrl
ficoml
pop
and
dec
enter
mov
scas
out
push
mov
mov
cmp
mov
xchg
fldl
in
cwtl
or
out
sbb
cmpsl
xchg
pop
ja
xor
mov
into
aad
jge
cmp
push
iret
cmp
enter
push
and
jmp
insl
jmp
pop
leave
jb
daa
inc
inc
aas
sub
outsb
lret
fcompl
inc
nop/reserved
xor
and
sbb
in
add
push
jo
ds
push
dec
les
testl
aad
fiadds
pop
ror
lods
testl
add
mov
jb
leave
push
push
insb
push
sbb
je
inc
sbb
movsb
and
daa
rcl
test
xchg
cmp
cli
or
jns
xor
js
mov
mov
xchg
leave
mov
out
jno
lds
ja
inc
outsl
add
cmp
pop
pop
pushf
popf
nop
sub
pop
and
cld
insb
mov
nop
dec
mov
int3
and
popf
cmpsl
les
sbbl
mov
sub
inc
mov
clc
or
jle
ja
xchg
pop
sbb
lock
jb
add
cmp
cltd
bound
aas
cmp
in
not
and
sbb
or
xor
push
ss
xor
cmp
mov
imul
jae
xchg
inc
add
lock
xor
mov
jecxz
arpl
arpl
aad
and
inc
sbb
jecxz
ret
rorb
lds
mov
push
outsl
in
pop
rcl
loopne
adcb
mov
push
andl
and
push
inc
popf
jae
es
push
adc
cmp
mov
imull
add
pop
mov
sub
xor
btr
xor
mov
dec
and
xchg
and
push
cmp
inc
push
sbb
hlt
pop
pop
mov
fnsave
xchg
dec
in
jg
arpl
xor
jl
jno
stc
pop
aaa
push
mov
sbbb
sub
ret
int3
test
cs
mov
mov
sub
in
fsubrp
inc
sbb
ss
mov
mov
xlat
mov
inc
aaa
rolb
mov
sub
flds
mov
xchg
push
adc
sbb
frstor
imul
leave
aas
das
cwtl
inc
gs
inc
scas
jmp
mov
ret
stc
scas
fwait
mov
aam
inc
xor
cmp
jp
roll
xchg
iret
sub
leave
adc
int
scas
and
rcll
loop
jle
bnd
mov
call
push
in
xor
add
push
sti
adc
sar
clc
pop
cmpsb
add
push
stos
pop
int3
cli
test
cmc
repz
push
ror
bound
stos
mov
or
inc
daa
movsb
cltd
test
dec
sbb
cmp
in
xor
je
out
rcll
test
loop
je
push
das
xor
mov
hlt
push
inc
movsb
aaa
jg
jecxz
lods
cld
add
dec
mov
arpl
inc
xor
fidivl
pop
inc
scas
lods
adc
scas
arpl
mov
stos
push
push
std
and
data16
popa
and
xor
lretw
xchg
rol
xchg
lock
testb
mov
mov
scas
sub
mov
and
push
addb
push
sbb
mov
imul
mov
mov
mov
stc
mov
call
dec
repnz
xchg
pop
and
nop
lds
movsb
mov
and
sub
fiaddl
cld
mov
icebp
outsl
test
mov
outsb
or
pop
cmp
sub
xchg
roll
aad
out
pop
fucomip
mov
cmp
jbe
in
iret
dec
stc
je
imul
test
sub
xchg
mov
out
pop
or
mov
dec
nop
adcb
leave
imul
adc
mov
fsubl
adc
pop
push
push
pop
sbb
bound
dec
lahf
mov
mov
dec
add
sbb
in
and
shll
packuswb
inc
sub
loopne
mov
pop
lods
enter
jp
repz
loopne
xorl
stc
pop
cmp
mov
xor
divb
pop
pop
sarl
mov
mov
sahf
push
adc
movsb
out
dec
sbb
bound
pop
lret
inc
mov
push
xchg
in
or
pop
sbb
pop
cld
add
int3
xor
loop
loope
or
sti
sub
inc
inc
insl
adc
aad
ja
mov
cmc
insb
lock
cli
ret
nop
mov
ret
or
in
push
ret
adc
sub
movsb
mov
jo
add
mov
or
xorb
pop
mov
cltd
cs
xchg
or
cmp
and
les
lahf
imul
sub
es
push
shrb
les
jne
jo
push
or
stos
adc
jb
cmp
ljmp
adcb
xchg
xchg
adc
lods
cmp
cs
out
insb
push
js
sbb
ret
sub
add
inc
lods
xchg
imul
xchg
and
push
in
ficomps
xchg
add
ds
iret
xchg
repz
inc
sbb
jmp
push
std
xchg
mov
shlb
movsl
adc
rclb
fcoms
add
test
rclb
mov
leave
xchg
imul
pop
in
xchg
dec
xlat
ret
and
dec
testl
int
sub
cmc
add
shl
adc
fcmovnu
mov
jl
xchg
dec
lock
les
dec
push
sbb
test
scas
mov
mov
ret
mov
sub
push
sarb
adc
shrl
mov
dec
xchg
push
stos
rclb
cmp
lahf
xchg
aam
mov
sbb
stc
aad
test
cwtl
js
aaa
mov
mov
sbb
in
and
scas
test
and
fnstsw
jns
je
je
mov
je
ficompl
int3
cli
xchg
adcb
fsubs
add
jnp
ja
in
loop
jmp
repz
or
sbb
test
cmp
push
pop
int3
insl
insb
dec
mov
xor
or
shl
out
hlt
mov
shll
sbb
nop
scas
sbb
xor
inc
test
sbb
push
mov
fstl
jo
sti
inc
and
inc
jp
push
or
and
xor
push
dec
andl
in
mov
sbb
movsb
fld
test
out
testb
mov
mov
fcompl
loopne
popa
out
stos
in
adc
faddl
push
xchg
repz
inc
or
mov
dec
aas
movsl
dec
pushf
pop
push
adcb
aaa
mov
fcom
mov
dec
pushf
pop
cmc
and
enter
jo
ret
sahf
pop
sbb
subb
cltd
lret
xor
dec
std
inc
and
sbb
in
push
mov
mov
push
mov
les
popa
mov
mov
leave
jl
loopne
cmp
imul
dec
jle
xchg
cmc
ret
rorb
test
jns
sahf
fcomip
and
xor
jp
mov
test
push
aam
stc
js
jbe
or
lcall
sub
aam
or
lods
sbb
inc
call
test
inc
outsl
fs
mov
jg
jae
ret
ss
xor
jp
cs
in
push
lds
mov
add
jg
dec
lods
popf
xorl
sti
mov
rorl
sbbb
inc
mov
in
xor
jmp
je
sbb
nop
aaa
popf
inc
fwait
or
sahf
pop
loop
pop
mov
mov
mov
dec
mov
adc
sbb
dec
sub
in
mov
jne
cltd
mov
xor
aad
adc
cli
sbb
xor
leave
sti
not
dec
or
push
sub
scas
int3
pop
xlat
push
leave
mov
loope
add
iret
rorb
aas
iret
mov
test
pushf
mov
daa
stc
sbb
push
xchg
fists
push
xchg
inc
xor
cmp
sub
cmp
mov
movsl
push
scas
out
cmpsb
jecxz
and
cmp
sahf
repnz
call
lods
or
popa
mov
lret
data16
mov
lahf
scas
cwtl
add
lds
xor
loope
dec
mov
in
pop
mov
test
jae
fimull
lret
adc
mov
in
ret
add
das
mov
fsubrl
frstor
xor
in
icebp
jnp
or
outsb
insb
xchg
adc
xchg
pop
mov
in
push
int
mov
mov
aaa
and
ret
fstpl
pop
xor
push
popf
push
add
pop
mov
inc
add
pop
dec
fcomi
inc
int
cltd
pop
push
in
daa
in
ret
clc
mov
movhps
mov
pop
sbb
clc
daa
jle
std
test
jl
iret
mov
pushf
mov
mov
xchg
lds
in
ss
stos
aad
dec
push
mov
sub
mov
lds
sbb
mov
lcall
dec
shl
pushf
icebp
xlat
push
cmp
shl
xchg
roll
or
arpl
fsubrp
scas
cmp
mov
lods
sbb
add
inc
pushw
mov
rcl
pop
sahf
xchg
test
mov
mov
jno
mov
arpl
pop
cld
and
inc
out
daa
cwtl
insb
xchg
sahf
dec
mov
syscall
test
push
pushf
outsb
mov
push
fsubr
or
test
or
inc
sbb
mulb
and
aaa
pushf
rcrl
int
jle
sarl
mov
jl
dec
cmp
add
xchg
mov
sbb
imul
cmc
clc
push
add
mov
fstsw
mov
in
pop
cmpsb
loope
push
jne
mov
jmp
out
inc
hlt
add
push
xchg
mov
sbb
mov
imul
jbe
repz
sub
lea
lock
push
rcrb
mov
rclb
push
mov
mov
hlt
lea
or
fdiv
mov
les
push
pusha
pushf
xchg
mov
mov
xchg
cmp
and
data16
push
lret
xchg
jbe
dec
mov
add
push
ja
xor
cmp
sar
in
dec
sahf
in
pop
ficompl
add
xchg
sti
outsb
in
add
sub
push
insl
mov
stos
cs
mov
and
ficompl
iret
movsl
sbb
jns
insb
fbstp
cmp
mov
dec
adc
out
cltd
cmp
dec
pop
icebp
test
ret
pushf
out
mov
pop
push
cld
fdivrs
outsl
ja
push
sbbl
adc
inc
pop
shll
xchg
and
mov
inc
mov
into
lods
jge
lcall
lret
jns
sbb
stc
ja
rorl
jmp
push
ds
mov
xor
in
inc
inc
and
dec
dec
cmpsb
push
jo
sbb
lcall
mov
add
and
jg
inc
add
ljmp
mov
cwtl
mov
mov
mov
mov
xchg
sub
cmpsb
scas
out
aad
fmul
push
add
popa
sub
jno
and
out
rcrl
lahf
aad
xor
pop
cmc
push
mov
subb
aad
sbb
xor
adcb
orb
dec
das
test
mov
or
pop
stc
out
mov
push
pop
iret
cld
pop
cmc
mov
or
leave
jl
lcall
lret
add
cltd
cmp
outsb
notb
mov
xchg
jb
adc
jae
test
icebp
xor
adc
push
nop
xor
cld
and
add
sti
dec
or
mov
add
popa
jne
push
push
xchg
popa
jmp
ljmp
fisttps
inc
mov
xchg
add
insl
adc
sbb
int3
mov
ret
pop
addr16
scas
inc
mov
pop
stc
push
xor
cmp
ficomps
lock
fcom
and
xchg
iret
mov
xchg
inc
vmovupd
lea
pop
jg
fs
add
or
std
mov
jae
jbe
out
subl
cwtl
mov
pushf
lcall
mov
ret
sub
mov
cmp
stos
pop
scas
and
push
stos
in
cmp
lods
and
sti
push
test
nop
repz
pop
std
insl
inc
bound
cmpsb
mov
lahf
pop
fs
icebp
push
dec
pop
inc
sub
push
mov
xchg
idiv
cmp
dec
fcom
test
jnp
hlt
lods
add
xor
loope
sbb
pop
and
ret
dec
jecxz
out
into
xorb
xor
pop
fs
pusha
lods
dec
std
and
xor
repnz
adc
pop
cmp
leave
movsl
sub
xor
mov
gs
in
push
xlat
test
loope
adc
push
mov
in
push
mov
mov
cmp
inc
idiv
cmp
cwtl
push
stc
movsb
xor
dec
movsb
mov
push
pop
pop
fidivrl
pop
push
test
lret
xor
xor
push
shrl
pop
clc
cwtl
mov
sbb
sub
addr16
jge
dec
inc
xchg
pop
iret
xor
je
xchg
fmul
mov
test
imul
cmpl
sbb
stc
fidivl
sub
dec
fldl
roll
mov
dec
stos
xchg
int3
popa
or
movsb
incl
out
cwtl
cmp
and
shr
dec
call
adc
dec
cmp
adc
jno
fs
and
pop
shlb
aas
sub
pop
test
xchg
or
outsl
dec
mov
and
shlb
mov
adc
sbb
cli
int3
or
jmp
das
mov
push
sbb
jmp
test
sub
adc
dec
inc
xchg
out
adc
ret
in
rolb
xchg
idivb
lahf
test
scas
jns
cmp
nop
loope
outsb
das
pop
sub
lock
xor
cwtl
xor
mov
fdivl
push
jecxz
and
jns
sub
andb
sub
sub
loopne
and
push
shl
xor
add
or
lret
adc
push
lock
scas
mov
xchg
nop
dec
mov
jns
cltd
xchg
adc
push
and
cmp
cld
repnz
and
mov
cmpsb
mov
dec
aad
cmc
mov
add
mov
fs
incb
xor
mov
scas
sub
push
xor
sub
mov
lock
dec
sbb
cltd
aaa
sub
fldl
int
sbb
xor
xor
andb
add
enter
stos
pushf
pop
jae
or
dec
popf
mov
sub
xlat
sbb
hlt
push
xor
add
icebp
mov
faddl
push
jmp
pop
in
dec
in
data16
lock
pop
push
mov
sahf
int3
pushf
insl
cmpsb
add
movsl
mov
jo
push
mov
xor
dec
sub
mov
push
mov
dec
push
pop
out
mov
or
xchg
rcrl
in
pop
pop
jp
push
mov
je
imulb
fisubrl
pop
into
out
adc
das
call
mov
cmp
shrl
shlb
push
push
popl
ds
inc
jae
movsb
gs
gs
adc
aad
addl
stos
sbb
mov
adc
fmul
push
or
fisubs
lods
fimuls
jg
orl
inc
sub
xor
cmpsb
aad
bound
sbb
add
pop
paddw
ret
jl
inc
mov
ja
pusha
inc
mov
mov
aad
xor
sbb
inc
sbb
or
mov
mov
cwtl
pop
gs
ficoms
cmp
mov
cmp
test
fcmovne
jb
xchg
mov
xor
pop
in
iret
inc
test
inc
call
popa
push
les
aam
daa
mulb
les
push
pop
loop
adc
mov
inc
test
in
dec
test
fstp
mov
push
out
xchg
mov
dec
cli
loopne
ds
call
sub
adc
out
mov
test
pop
mov
repnz
enter
out
lock
adc
mov
inc
cmp
mov
inc
xor
sti
loope
clc
aas
aad
ret
aad
pop
rcll
push
sbb
mov
int
add
hlt
mov
sbb
pop
lret
scas
aam
and
inc
loop
fdivrl
loopne
mov
fadds
mov
mov
push
push
outsb
mov
ret
inc
rcrl
sbb
xchg
cs
jg
insb
imul
xchg
sbb
outsb
nop
lock
repz
fisubrl
arpl
sti
imul
loope
jns
pop
bound
outsb
ja
mov
test
lahf
inc
mov
imul
int3
leave
push
adc
or
imul
pop
cwtl
add
cmc
movsb
in
ret
imul
ds
nop
enter
mov
leave
xor
cwtl
outsb
jbe
imul
adc
xlat
push
jo
negl
mov
ret
out
lahf
into
pushf
dec
leave
xlat
sbb
jl
push
orl
push
enter
inc
sbb
stos
fs
jno
xor
inc
cwtl
inc
cmp
je
sbbb
fisttpll
mov
add
data16
mov
shlb
sar
dec
sbb
xchg
loop
popf
jle
aad
or
outsb
lret
xor
mov
cmpsl
bound
push
aad
js
dec
and
loop
pop
sub
shlb
insb
daa
into
icebp
sbb
inc
ljmp
jp
and
inc
push
fstpl
pop
push
sar
mov
add
sbb
cmp
ret
add
xchg
scas
repnz
cld
fisttpll
and
scas
lock
inc
outsb
sbbl
dec
cmp
sbb
dec
int3
pop
popf
fldl
add
push
fidivrs
sbb
xlat
or
lret
enter
lods
rcll
dec
dec
mov
fsubl
mov
shl
inc
and
je
test
pop
xchg
mov
shll
in
sahf
rol
rclb
fdivs
pop
xor
in
push
mov
xor
add
pushl
nop
push
pop
out
hlt
iret
sbb
dec
movsb
lds
sbb
xor
ret
int
sahf
test
sbb
push
adc
test
cmp
xchg
push
sbb
fucom
imul
shll
ret
dec
bound
test
lcall
daa
mov
loopne,pt
push
hlt
xor
dec
xchg
add
ljmp
les
movsb
in
mov
xchg
rclw
incl
hlt
lods
xchg
movsb
push
in
mov
mov
cmpsl
push
xchg
in
inc
jb
arpl
and
daa
push
or
je
pop
add
mov
dec
add
aam
fsts
xorl
and
cwtl
idiv
rorb
adc
int3
icebp
popa
movsl
daa
ret
add
in
je
sbb
das
daa
iret
sbb
mov
push
dec
jle
mov
shll
es
cltd
sub
scas
mov
cmp
sub
in
pop
and
nop
jmp
movsl
popa
push
jmp
jg
xchg
lret
cwtl
mov
adc
int
vsubss
jns
xchg
sahf
xor
repnz
and
stc
movsl
andl
out
mov
mov
pop
pop
fisttpl
dec
push
mov
or
mov
push
lahf
dec
test
loope
mov
mov
test
mov
aam
push
pop
inc
aaa
pop
xor
loope
pop
das
dec
xor
por
cmp
or
or
shll
sub
or
inc
std
dec
and
mov
lcall
xlat
cli
sahf
mov
out
popf
add
xchg
fsubrs
pop
adc
xchg
into
inc
aas
insb
shl
mov
push
or
je
mov
mov
push
jno
adc
div
test
je
shrb
lock
pop
cs
mov
fcomip
and
and
and
ror
dec
xchg
cwtl
mov
arpl
mov
sub
jns
cmp
rolb
cmp
repz
pop
out
sbb
addr16
sbb
scas
add
lods
mov
aam
adc
add
adc
sarb
sbb
bound
jns
loopne
push
sarb
bswap
pushf
popa
adc
mov
xor
fimuls
sub
stc
in
pushf
test
sahf
jno
or
jae
sub
sub
mov
cli
dec
sti
cmp
int3
adc
int3
sub
call
clc
jmp
sar
jmp
pop
inc
push
lods
data16
xrelease
pop
in
iret
ficoml
jno
jno
lcall
lea
sarw
jl
or
test
adc
ficompl
mov
pop
cltd
ret
loop
je
inc
bound
xor
mov
inc
mov
test
pop
jb
les
mov
jle
lcall
xchg
out
imul
in
out
call
test
inc
xor
ljmp
xchg
repnz
jbe
ljmp
roll
call
adc
jl
cli
push
mov
cwtl
push
jg
popf
stc
sbb
adc
pop
out
jecxz
lds
popa
dec
jae
inc
jg
jle
dec
adc
or
cmp
or
inc
filds
jo
test
mov
out
and
push
stos
out
sub
inc
pushf
jmp
in
jmp
imul
scas
pop
js
adc
push
push
loop
ja
fstl
inc
sub
mov
lds
push
les
sbb
jnp
scas
dec
testb
lea
inc
fs
mov
xor
mov
xlat
push
lods
or
insl
xchg
aad
jne
into
xchg
sub
ret
dec
ret
insl
not
mov
pop
stos
push
sar
cmp
add
xor
sbb
jo
pop
sub
nop
push
cld
test
aas
xor
lock
mov
pop
jle
sub
mov
insl
imul
cmpl
jb
or
pushf
in
cs
push
sti
jae
pop
jns
mov
mov
sbb
lods
sub
fsubl
xchg
dec
dec
push
lock
cmp
std
push
sub
int
in
vpcomub
shr
jge
fsubs
xchg
dec
push
arpl
jg
mov
popf
in
call
les
scas
jns
adc
sbb
mov
notb
add
aam
fnstcw
push
jno
mov
xor
or
adc
xlat
mov
xor
lock
add
mov
int3
leave
mov
aad
mov
jecxz
add
ja
pop
or
mov
bound
fdivrl
scas
cmp
pop
test
xor
lock
pop
sbb
jg
dec
ljmp
jle
lea
pushf
add
xor
dec
scas
addb
in
pop
and
mov
sbb
fildll
mov
ljmp
mov
mov
and
stc
jl
arpl
xchg
lock
lret
dec
jecxz
adc
ja
lea
outsb
fcmovnu
sti
nop
sti
adc
lahf
lret
inc
iret
lret
fimull
inc
bound
incl
outsb
rcl
repz
cmp
js
adcb
xor
ljmp
lret
jmp
mov
cmp
dec
mov
lahf
jecxz
xor
lods
sbbb
sub
or
and
out
adc
inc
pop
mov
call
or
cmp
add
xchg
add
pusha
pop
and
inc
jl
pop
adcl
insl
xchg
arpl
lds
ffreep
call
mov
mov
mov
fcoml
jae
movsl
sar
xchg
add
aad
test
and
mov
xor
mov
loopne
jg
rcll
mov
pusha
jecxz
inc
lahf
shr
outsl
arpl
cmpsb
nop
in
lods
test
mov
out
mov
out
fimull
push
push
sub
sub
popa
pop
scas
fs
sbb
cmc
mov
ret
cmpsb
stc
pop
fs
dec
mulb
xor
jne
sbb
jo
jne
movsl
sub
sbb
mov
pop
xchg
push
insb
sub
cmpsb
cmp
cmp
xchg
pop
add
jge
daa
rorb
xchg
in
add
or
jecxz
xchg
add
out
ja
jp
test
mov
lahf
aam
jg
or
push
bound
sbb
push
jecxz
fidivrl
inc
out
repnz
xor
push
push
sub
popa
enter
lcall
push
int3
fisttps
pop
and
sub
loop
push
aam
mov
ret
sti
div
ja
in
cmp
mov
orl
and
rclb
sub
ss
subl
hlt
cmp
add
outsl
ljmp
and
push
daa
scas
stos
fadd
xchg
cmp
in
inc
adc
call
bound
lret
leave
out
push
and
dec
rcrl
or
mov
mov
and
dec
inc
mov
add
mov
movsb
das
sbb
jecxz
mov
jae
jns
js
movb
fiaddl
xchg
jb
cmp
pop
pop
inc
xchg
cmp
pusha
pushf
imul
pop
sbb
or
sbb
pop
and
cmp
cmpsb
inc
mov
rcl
inc
ret
adc
sbb
xchg
jno
jo
adc
jb
pop
and
movsb
cmp
add
and
in
xor
xor
scas
sub
dec
adc
iret
mov
xchg
ds
pop
push
scas
mov
add
fbstp
mov
addr16
fdivrs
fstps
jp
das
cs
jno,pn
or
lea
fldl
mov
lcall
xchg
cmp
cmp
adcl
fldl
inc
fsts
push
xor
popa
pop
cwtl
inc
push
ret
xchg
jl
or
movswl
and
pop
inc
add
scas
or
lods
dec
fcmovu
and
scas
sub
aas
xchg
mov
xor
dec
inc
push
hlt
lcall
and
ljmp
jae
and
and
cmc
into
sahf
cs
jb
add
mov
test
cmp
int3
xorl
clc
loopne,pn
scas
adc
mov
fildl
repz
ret
jp
cmp
sbb
in
and
lods
or
mov
adc
in
or
cmpsb
std
out
les
jbe
popa
fbld
lds
inc
mov
dec
jmp
addr16
in
jl
jo
shl
and
xchg
cmp
mov
iret
lret
fucomi
sbb
sti
mov
push
mov
sbbb
data16
out
js
mov
int
or
mov
jne
pushf
in
rorl
mov
jle
lahf
fwait
jnp
ret
cmp
sbb
out
inc
jl
cmpb
mov
ret
adc
lock
mov
mov
push
mov
pop
add
into
movsb
cmpsb
std
popa
loopne
cmp
jo
lock
push
push
and
leave
and
cmp
out
test
push
mov
aam
std
lahf
or
test
lret
mov
jns
xor
dec
add
jns
mov
dec
fmulp
pop
shl
les
je
xchg
das
scas
jno
ss
bound
out
notb
sub
push
add
xor
xchg
popf
int
mov
aad
sub
lds
sbb
cltd
xor
jmp
jge
or
jo
aaa
add
inc
jnp
lods
mov
imul
sub
xorb
cmpsb
hlt
orb
jbe
adc
aad
dec
add
mov
out
ljmp
sarl
add
xchg
inc
out
mov
mov
stos
dec
jmp
cli
stos
mov
leave
ja
lcall
movsl
xor
out
dec
xchg
es
pop
sbb
mov
out
xchg
fwait
jbe
test
xor
stc
lcall
sbb
dec
cmp
or
xor
cmp
xchg
fisttps
add
sti
jl
sbb
cmp
adc
mov
gs
sub
insl
or
test
mov
repz
fsubrs
xor
mov
imul
in
mov
mov
stos
jnp
jmp
xlat
repnz
pop
fisubs
add
lods
jp
andl
loope
mov
or
arpl
and
cld
inc
shll
pop
aas
lock
xchg
mov
adc
mov
pop
adc
das
fildll
rol
add
pop
pop
xchg
xlat
js
sub
js
cltd
addr16
dec
jb
addr16
shll
jmp
out
popa
cmpsl
adc
mov
jmp
adc
insl
in
mov
loopne
sbb
push
popa
push
pop
add
xchg
jnp
aas
mov
sub
pop
sbb
or
das
push
out
stos
scas
lock
or
and
pop
roll
mov
adc
test
xchg
xchg
fldenv
test
mov
push
stos
push
fcompl
jp
fsubrl
and
out
cmp
in
test
or
cmpsl
push
aaa
fwait
xchg
icebp
jmp
jge
fs
pop
pop
mov
mov
fdivrl
cmp
in
insl
imul
sub
daa
cmpsb
add
pop
inc
cli
xor
pop
jbe
fistl
test
outsb
nop
cmpsl
fisubl
mov
sbb
pop
xchg
ficomps
stos
movsb
lret
mov
sbb
push
xchg
into
xor
xchg
dec
mov
lock
adc
or
fidivl
xchg
into
cmpsb
and
test
push
mov
xlat
fnstsw
ficoml
adc
movsl
fimull
add
xchg
push
addr16
dec
mov
jle
add
mov
fisttps
dec
enter
cmpsw
pushl
into
adc
and
jo
jno
je
add
repnz
nop
fists
xchg
in
orb
add
or
push
push
mov
inc
jo
je
pop
adc
fnstcw
lret
adc
add
sti
xlat
push
pop
fcoms
lret
mull
sti
add
push
or
cmp
fsubrp
cld
mov
mov
xor
mov
orl
andl
rcll
xor
mov
cmpsl
push
ret
push
jnp
mov
or
xor
repz
std
sbb
or
add
loopne
ficoms
push
jbe
mov
push
or
add
into
fldl
cmp
rorl
or
xor
jge
xor
pushf
adc
add
psubsb
in
jge
xor
fcoms
loop
fs
call
ss
dec
nop
xchg
outsb
hlt
mov
dec
mov
cmp
cmpsl
jns
jl
int3
jge
xor
mov
mov
sbb
sub
ja
test
pushf
jno,pt
sti
stos
je
mov
test
jno
lcall
dec
dec
iret
shl
sub
or
pop
inc
outsb
inc
fnstenv
popa
xor
inc
push
xchg
inc
stc
popa
pminsw
pushl
movsl
jge
aas
lods
dec
aaa
mov
adc
push
icebp
lret
sahf
push
dec
jmp
jns
mov
rorl
adc
fwait
mov
rolb
bound
cmp
repnz
sub
jl
sti
and
jp
lds
test
mov
rolb
lcall
aad
mov
out
dec
jmp
add
xor
cmpsb
xor
push
inc
addr16
push
inc
jl
adc
mov
test
and
pop
ret
scas
in
ljmp
sahf
xchg
mov
sarl
outsl
cltd
cli
out
data16
fwait
call
data16
mov
pop
mov
mov
or
and
iret
scas
xchg
sarb
xchg
add
mov
pushf
shll
test
push
or
xchg
out
mov
hlt
sub
add
fidivrs
out
pop
dec
aas
inc
shlb
and
icebp
sahf
jl
scas
lret
shll
fwait
mov
xchg
xlat
popf
jnp
cmp
notb
hlt
jnp
out
mov
aaa
cmpsl
jo
sbb
inc
mov
cli
xchg
jecxz
fwait
mov
mov
push
xchg
jl
jno
add
addb
jg
xor
cs
mov
mov
sti
adc
fidivs
cld
xor
gs
out
popa
sub
addr16
aaa
bound
push
or
fsts
mov
sahf
outsl
mov
mov
enter
jmp
jb
jne
es
mov
sti
mov
std
scas
test
cwtl
jmp
fimull
push
xchg
xchg
mov
rcrb
add
jmp
xchg
adc
negb
in
xor
fsubl
enter
mov
out
icebp
adc
leave
and
das
lea
jecxz
mov
push
lods
xchg
push
or
sahf
jp
cmpsl
jmp
add
je
jge
mov
test
pushf
mov
mov
std
out
push
leave
cmp
cltd
mov
lods
ljmp
pop
xchg
and
negb
aas
daa
push
fwait
dec
pusha
sub
pop
sbb
leave
jecxz
adc
jne
sbb
lret
push
call
mov
test
push
inc
sub
imul
mov
xor
mov
mov
inc
clc
ret
arpl
dec
ret
ja
test
sarb
cmc
mov
out
push
or
into
cli
lock
repz
gs
pop
pop
mov
pop
pop
pop
negl
mov
movsb
movsl
push
rorb
scas
jmp
push
loop
add
adc
mov
pop
es
push
lret
mov
lret
mov
pop
imul
or
ret
and
in
inc
rorl
repnz
push
push
out
mov
movsb
inc
lods
testl
pop
adc
mov
arpl
jne
dec
testb
push
lret
lods
pusha
test
fs
push
bound
jge
aad
or
xchg
outsb
jae
xchg
sub
or
movsb
push
ss
cmpb
add
mov
loope
inc
imul
adc
push
movl
xchg
pop
sub
leave
fldl
sub
xor
jae
test
fadds
shlb
movsl
adc
sti
lcall
in
sahf
xchg
mov
scas
std
jp
sub
xchg
and
cmp
movsb
sub
scas
nop
cmpsb
xchg
push
lods
and
cli
push
in
mov
cs
mov
xchg
sbb
stos
or
xor
inc
test
scas
mov
sub
movsl
pop
shrl
movsl
daa
daa
aaa
mov
repnz
or
testl
pop
cmp
or
mov
sbb
jb
inc
push
jbe
insb
scas
or
cwtl
xor
push
psubsb
mov
stos
gs
clc
fs
aas
ljmp
xchg
jle
jo
in
cmp
mov
jle
sbb
cli
jae
push
or
mov
cmp
and
add
sbb
in
pop
and
daa
inc
fs
mov
mov
hlt
xchg
jle
inc
add
and
leave
dec
rcrb
push
lods
stc
jbe
ljmp
push
mov
sbb
add
xchg
sub
rorl
mov
lods
or
ds
xchg
mov
sbb
lock
aaa
dec
sub
push
cs
push
xor
or
xchg
sbb
test
in
scas
mov
test
jl
fs
jb
jae
xchg
xchg
std
pop
mov
in
dec
call
ret
lock
or
add
dec
loope
fdiv
lds
push
lods
adc
fistps
adc
cmp
call
mov
push
pop
and
cmpsb
or
cmp
fistl
mov
sbb
xchg
inc
cmp
sbb
cmp
imull
pop
push
cld
hlt
sbb
dec
jns
lods
and
fsubl
stc
mov
loop
out
mov
dec
int
icebp
xchg
push
or
jmp
mov
mov
rorb
mov
outsl
and
mov
inc
je
outsb
add
test
adc
test
xor
or
bnd
ss
mov
push
aaa
push
xchg
sub
enter
xorb
pop
sub
xor
add
mov
jne
mov
xor
daa
push
mov
xchg
and
cmp
dec
or
xlat
push
add
mov
adc
and
lahf
pop
pushf
hlt
sub
fld
adc
lea
imul
fsqrt
insl
cltd
push
popf
xchg
pop
mov
pop
xchg
mov
enter
pop
sbb
inc
in
jnp
fs
jmp
pop
mov
dec
dec
outsb
shr
mov
divb
sbb
lcall
lods
test
sub
mov
jnp
dec
pusha
cmp
sbb
sub
pop
in
cmpsl
cmp
les
popa
in
sbb
out
aaa
push
repnz
daa
mov
inc
mov
inc
faddl
jl
jmp
movsl
mov
jecxz
hlt
add
popf
ret
hlt
mov
dec
mov
xor
les
mov
or
lds
xor
jae
xorb
repnz
shrb
mov
adc
fs
sub
sbb
movsl
adcl
repnz
ljmp
in
inc
jp
push
adcl
pushf
sub
rcll
adc
jl
xchg
adc
cmp
pop
in
and
inc
jbe
add
insl
adc
nop
test
je
in
ret
and
in
cltd
lods
imul
jl
jmp
cli
xor
popa
dec
jnp
in
jo
stos
pop
dec
cli
inc
rcr
les
mov
cmpsb
dec
in
sub
mov
cmp
add
aam
int3
sti
into
xchg
aad
mov
sbb
sub
mov
fsubrp
mov
int3
pusha
flds
pop
lods
adc
std
or
pop
xchg
cmp
and
sub
or
stc
stc
cmp
jns
mov
sub
mov
loope
je
int
push
leave
scas
lcall
add
push
adc
or
or
lds
stos
iret
jg
mov
out
xchg
addr16
adc
dec
test
mov
mov
push
fsubr
icebp
inc
mov
repnz
jp
xor
or
xor
popa
insb
popf
add
in
mov
sti
ds
enter
lret
test
rclb
dec
daa
cmp
pop
test
jecxz
fwait
mov
arpl
pop
xchg
add
movsb
fists
xor
sub
xchg
lods
xor
and
pop
rorl
sub
jno
mov
jl
dec
leave
fsubrs
gs
cltd
shlb
add
roll
loope
fimuls
js
mov
sub
cmp
aaa
or
jmp
loopne
xchg
lods
bound
stos
int
loopne
xor
or
ja
or
push
in
xchg
scas
sub
pusha
shr
cltd
fmull
sbb
in
pop
jmp
sub
jnp
sub
cld
das
lock
xor
shll
xchg
push
fdivrp
leave
push
lods
push
sub
int3
test
add
dec
mov
mov
inc
in
add
scas
adc
and
mov
jp
andl
and
sbb
sti
pushl
dec
stos
fs
inc
and
lock
jmp
inc
or
icebp
stos
cmp
cmp
xchg
lcall
or
movsb
dec
aaa
sbb
imul
in
inc
testb
push
cmp
xchg
xchg
pop
inc
fmull
mov
jne
bound
imul
cmpl
inc
clc
add
je
dec
pop
push
mov
adc
dec
sub
movsb
fwait
cli
mov
sbb
sti
xor
sub
in
gs
inc
mov
enter
std
mov
inc
in
pop
jge
sub
xor
push
or
mov
inc
lcall
insl
dec
aas
xor
dec
pop
hlt
shr
sub
insl
negb
push
mov
icebp
mov
test
xchg
test
cmpsb
in
shrl
outsb
xchg
add
jp
out
jae
mov
sbb
add
xor
lret
push
fsubl
mov
test
inc
mov
loop
mov
sbb
cli
cmpsb
push
push
mov
and
lods
mov
nop
mov
je
rclb
movsl
xchg
and
sbb
call
cli
cwtl
mov
imul
mov
out
xchg
push
ja
xchg
mov
mov
cmp
mov
in
jp
or
cmpsb
push
adc
fidivl
fbstp
addr16
decb
ljmp
jl
jbe
clc
movsb
mov
data16
out
divl
dec
inc
scas
dec
push
inc
cmpsl
out
test
ror
sub
sub
dec
andb
and
inc
adc
clc
orb
imul
stos
enter
in
xor
push
add
sbbb
dec
nop
add
jge
xor
jae
mov
movsb
std
jp
push
hlt
loopne
xchg
scas
cmp
ret
jecxz
lret
inc
pop
sar
xchg
sbb
rcrl
shlb
jge
fldcw
testb
mov
or
out
sub
inc
data16
addr16
lret
dec
mov
sbb
sarb
mov
and
adc
xchg
dec
mov
mov
arpl
mov
push
xlat
test
xchg
insl
jne
adc
mov
imul
mov
lretw
fdivrs
mov
mov
adc
scas
xchg
sub
movsl
lods
push
sti
xor
fldt
jmp
xor
inc
int3
cmpsl
push
push
and
and
iret
sahf
inc
shrl
in
lret
in
inc
movsb
fsubs
sbb
push
jns
push
jo
inc
mov
xlat
mov
sbb
jae
addl
add
push
push
jb
aad
ss
dec
pop
jo
aaa
ss
cmpsb
or
outsl
andb
outsl
pop
movsl
or
pop
push
test
mov
jae
pop
adc
ret
daa
push
jle
cmpsl
sbb
es
data16
push
cmp
dec
add
test
jb
enter
ds
sar
iret
sub
dec
inc
jl
lods
adc
lods
fisubl
mov
rcrb
dec
jae
adc
test
xor
pop
xor
xlat
mov
and
pop
imul
mov
fadds
rorl
lret
mov
movsb
jae
loopne
sti
sbb
cmp
fiadds
mov
fs
aaa
icebp
mov
test
mov
aad
mov
and
xchg
lcall
mov
cmc
test
cmp
aaa
sub
dec
mov
outsb
inc
jne
dec
xlat
jbe
and
jecxz
adc
and
push
cmc
xlat
dec
add
test
jge
std
cli
arpl
sarb
pop
test
mov
jp
mov
in
subl
mov
subb
lods
fcoml
mov
ljmp
cltd
mov
sbb
push
add
jno
mov
mov
out
xchg
rorb
clc
jne
movsl
fists
jbe
sahf
xchg
xchg
out
in
inc
xchg
fldl
or
test
dec
jge
cwtl
push
and
lret
in
les
cmp
stc
jb
and
or
fcmovne
scas
and
in
out
shlb
sahf
popf
xchg
add
cmpsl
stos
pop
add
mov
jle
lret
enter
out
mov
xchg
mov
ljmp
xor
inc
jnp
bound
add
xlat
outsl
js
push
inc
add
leave
and
mov
sahf
inc
and
ljmp
and
aas
push
xlat
js
and
aas
add
fcomps
mov
or
jbe
popf
pop
inc
ljmp
cmp
adc
push
inc
int
lret
mov
fmuls
mov
add
aaa
mov
mov
popf
rcr
mov
cltd
jp
out
cli
das
jae
cs
add
and
aam
sbb
fld
push
repnz
lcall
mov
clc
and
jmp
mov
sbbb
scas
sbb
pop
lret
es
push
add
call
and
pop
fcos
mov
sub
call
imul
lods
sbb
das
add
in
xor
jnp
cmp
js
out
sarb
stc
mov
mov
push
imul
dec
xor
cmpsb
into
stos
pop
test
fisubrl
pop
xchg
addr16
int
loopne
pushf
or
mov
mov
fsubs
push
add
push
ds
sahf
jmp
sub
call
scas
push
ror
add
jg
dec
push
es
sub
test
cmp
lahf
stos
xchg
pusha
bound
rorl
jnp
out
ds
mov
insl
jl
fldl
sub
fs
shrb
fcmove
je
pop
stc
add
stos
inc
lret
jecxz
insl
insl
scas
xchg
fimuls
jne
das
pop
inc
std
jo
add
loopne
stc
inc
stos
lods
aas
mov
andb
jmp
adc
call
imul
add
xchg
pop
dec
addl
adc
or
lods
and
call
sub
daa
mov
in
xchg
idivb
lcall
andb
inc
sbb
ficoms
stos
jns
int3
adcb
addr16
mov
out
orl
dec
clc
popf
and
leave
enter
out
mov
movhps
popf
cwtl
fistpll
adc
popf
mov
pop
inc
ret
and
adc
jmp
lods
sub
pop
pop
mov
and
pusha
test
mov
repz
push
or
sbb
xchg
lret
aaa
nop
mov
cltd
add
mov
or
lods
sets
and
bswap
mov
mov
jl
sbb
xchg
add
out
xchg
adc
inc
jge
lods
adc
scas
adc
js
mov
add
push
stos
push
and
sub
cmpsl
pop
mov
mov
xchg
push
mov
push
add
movsb
mov
jb
cmpsb
fdivr
sub
andb
sub
sub
sbb
cmp
subb
shlb
jmp
mov
pusha
push
xchg
icebp
out
cmp
xchg
xorb
adc
jl
sbb
repnz
adc
cmp
movsb
repz
das
xor
mov
sti
adcl
lcall
lcall
xchg
adc
xor
gs
dec
cmp
clc
js
testb
mov
jns
adc
push
xor
bound
stc
data16
int
cmp
push
cmp
cmp
add
mov
push
in
cld
jg
enter
dec
xor
outsl
ficompl
repz
pop
stc
sarb
adcl
xor
ret
fstpt
ret
cmc
mov
sub
mov
fdivs
sub
xorb
and
jp
les
add
ret
pushf
repz
movsl
leave
sahf
cmp
sub
movsb
lea
mov
sub
push
or
xchg
cli
push
into
xchg
push
insb
pushf
sahf
xchg
stc
pop
xchg
mov
mov
adc
fwait
and
aam
rorl
pop
movsb
cli
rcll
imul
mov
xchg
xlat
or
aas
gs
push
daa
rorb
xor
and
mov
idivl
negb
test
hlt
rcrb
mov
roll
subb
movsl
xchg
stos
xchg
stc
sbb
in
jae
sub
test
push
xor
out
insb
lret
adc
out
leave
sbb
cmc
fcomp
xor
ljmp
es
push
mov
mov
bound
pushf
enter
fdivr
sub
dec
cmp
insb
or
cli
or
insb
int3
hlt
cmp
cmp
push
inc
setge
cltd
lea
mov
iret
insl
test
mov
inc
mov
fwait
lds
cltd
inc
xchg
mov
dec
pop
inc
pop
ja
nop
mov
arpl
sbb
jle
cmc
iret
fdivrp
push
loop
stos
or
iret
add
pop
daa
sbb
and
add
stos
sub
jge
test
cmpsb
shr
sti
push
jp
sbb
leave
les
or
lea
js
ficomps
adc
sbb
cmp
movsl
mov
idivl
jno
sub
cmp
adc
das
pop
dec
cmc
xchg
mov
jns
aad
jg
and
lea
arpl
jle
push
inc
and
and
mov
nop
pop
js
into
sub
out
xchg
xchg
pop
lret
xchg
inc
xlat
pop
push
hlt
and
mov
loopne
pop
in
aad
mov
insl
daa
lods
imul
cwtl
imul
jbe
mov
aaa
inc
scas
mov
push
test
sti
mov
mov
bound
adc
les
cmp
sahf
ret
scas
std
xchg
jo
push
out
stos
sub
sbb
in
out
xchg
xor
sbb
in
xchg
jl
cmp
test
test
cmp
mov
in
jp
iret
iret
push
fs
dec
outsb
cmp
jno
outsb
sahf
jecxz
outsl
pop
adc
popf
out
lcall
outsl
jns
pop
in
loop
xor
add
outsb
jle
or
mov
aam
rorb
lahf
cmp
pop
call
xchg
jae
xor
icebp
cmp
sbb
bound
cmp
call
sub
aad
enter
push
cmp
mov
adc
ficompl
arpl
sub
jmp
or
add
add
pusha
aaa
pusha
bndstx
mov
inc
out
inc
stos
faddl
mov
jmp
adc
out
pusha
mov
std
jg
in
dec
testl
jg
lahf
cmp
pop
mov
clc
adc
add
pop
jnp
push
ret
mov
testb
or
or
pop
jb
or
pop
mov
add
xchg
mov
cld
xchg
je
inc
mov
fnsave
insl
out
jmp
push
mov
dec
cs
lods
push
loopne
jne
aad
add
mov
xlat
pusha
shll
data16
sub
je
es
stos
into
add
in
mov
xor
xchg
push
adc
inc
sbb
mov
gs
push
iret
mov
mov
jle
lcall
xor
mov
jae
mov
fadds
pop
test
fmulp
repz
jmp
shlb
aas
decb
jmp
fldcw
inc
pop
cmp
mov
je
insl
out
out
pop
movsb
or
jns
push
out
out
rcr
outsb
inc
inc
jecxz
mov
cli
mov
push
fsub
aas
jmp
and
push
cmp
mov
inc
or
stos
sbbb
imul
dec
xor
pop
std
xor
addb
scas
test
arpl
mov
and
es
mov
jno
movsb
mov
hlt
ficoml
and
cmp
inc
xchg
mov
out
xchg
dec
mov
mov
cmp
out
js
push
push
jp
inc
jae
jns
push
xchg
fucomi
lahf
ja
fidivrs
insb
mov
xor
jle
adc
mov
pop
dec
or
mov
xchg
dec
push
ja
into
outsb
ret
push
and
pushf
push
xor
push
adc
pushf
xchg
and
pop
loope
mov
int
push
lret
mov
mov
inc
ret
aad
mov
ss
xor
inc
sarl
int3
popf
adc
sub
sti
jne
xor
aaa
lds
lret
cmpsl
add
xchg
outsl
comiss
fdivl
push
fs
and
sarl
add
in
int
test
adc
mov
sbb
jmp
mov
mov
in
pushf
jmp
cwtl
push
or
inc
xchg
jl
rolb
xchg
in
loopne
jl
cli
negl
inc
aaa
js
rcr
add
aaa
jge
or
mov
or
mov
inc
mov
call
mov
fs
loope
in
and
push
pause
iret
fistps
rcrb
shll
lods
mov
mov
mov
mov
aam
mov
rcrl
jns
stos
dec
xor
xchg
test
fsubs
xor
imul
mov
out
ficoms
jae
pop
fisubrl
mov
mov
icebp
popa
sub
roll
fnstsw
lea
push
sti
shrl
pop
out
push
push
dec
test
rcl
xor
sarb
adc
adc
xchg
jne
leave
pop
loope
popf
mov
xchg
outsl
mov
jns
fldenv
ret
out
mov
add
and
jnp
add
test
ret
in
xor
rcll
xor
mov
pushf
dec
jge
into
ret
cmp
mov
not
cwtl
test
sub
adc
ja
mov
nop
mov
fadds
push
pop
lock
insb
push
ja
enter
mov
mov
fnstenv
dec
dec
int
pop
pop
lret
mov
mov
orl
sbb
lea
cmc
jecxz
shlb
push
lods
dec
sar
roll
int3
cmp
cmp
cmp
jb
and
aam
add
sub
icebp
cmp
testl
ret
inc
push
mull
dec
into
pop
ja
fcoml
or
in
xchg
in
in
pop
cltd
inc
xor
adc
les
mov
popa
das
jge
mov
xchg
out
aas
mov
push
sub
or
arpl
jns
and
jne
cvtps2pd
push
fwait
gs
push
ja
push
inc
inc
iret
outsl
mov
fstpl
jb
xor
repz
jo
mov
sub
pop
push
adc
cmp
nop
xor
pop
mov
rol
movsb
xchg
call
xchg
xchg
cs
sub
sub
sbb
cltd
test
in
clc
out
bts
push
sbb
sbb
mov
dec
push
jle
inc
mov
push
pushf
jp
in
inc
fdivrs
xchg
xchg
test
pop
or
roll
push
mov
xlat
and
test
mov
scas
outsb
repnz
cmp
fdivl
in
je
jg
xor
repz
mov
push
xchg
ffree
lds
lods
adc
adc
fldenv
mov
sbb
add
dec
negb
loopne
loope
paddq
jno
lock
ret
sti
daa
and
and
ljmp
repz
sbb
xchg
pop
pop
clc
mov
out
mov
inc
add
mov
pop
xor
leave
ret
addb
xchg
or
out
xor
test
sub
dec
daa
mov
pusha
add
rol
insb
sub
cmp
in
lds
addr16
out
mov
add
adc
mov
jmp
xchg
and
popa
pop
push
mov
sub
sub
hlt
mov
jp
mov
sub
cmpsb
out
inc
sbb
clc
fdivs
or
lahf
push
adc
and
out
xor
sbb
jecxz
pop
jle
pop
std
js
xor
or
adc
insl
aaa
rclb
pop
inc
adc
fistps
insl
nop
out
adc
popf
inc
xor
add
xchg
fbld
dec
jno
xchg
int
inc
mov
leave
aad
lret
nop
popa
add
jmp
pop
xchg
clc
int3
mov
mov
in
sub
xor
imul
pop
lcall
pop
jne
sbb
mov
push
sbb
dec
ja
sbb
jnp
or
repnz
lcall
andl
in
inc
xchg
jae
pop
push
popf
inc
or
pop
cmpsl
stos
xor
pop
pop
cmp
sbb
bound
pop
or
mov
pop
dec
xor
aam
in
js
add
aad
push
mov
push
daa
int3
mov
roll
jb
outsl
imul
jnp
pop
jecxz
faddl
mov
nop
aas
jle
in
movsl
repz
or
or
rcl
and
xor
cmpsl
jle
mov
arpl
es
testb
iret
adc
add
shl
mov
sub
movb
push
add
sahf
in
and
test
xor
xor
insl
lea
sbb
popa
or
and
es
lds
xchg
and
and
pusha
mov
movsb
jmp
in
pusha
sbb
cmpsb
rdpmc
in
cmp
mov
subl
daa
add
sub
and
sub
push
mov
jl
cmp
daa
adc
subb
nop
mov
pop
pop
adc
fidivs
mov
test
inc
ja
std
mov
stc
mov
addr16
stos
int
add
scas
push
jg
rcrb
xchg
insl
push
ret
shlb
inc
mov
call
movsb
scas
hlt
push
xchg
pop
insl
xchg
sahf
and
insl
mov
lahf
mov
test
out
loop
jg
mov
mov
or
xchg
mov
fcmovb
ficoml
imul
mov
rol
ja
ret
pop
xor
push
dec
mov
rorl
xchg
xchg
loopne
pop
ljmp
mov
inc
movsb
pop
int3
fimull
fcomip
cltd
mov
sbb
mov
mov
jmp
aam
in
inc
cmp
in
xchg
and
sbbb
mov
lods
faddp
icebp
je
call
pop
xchg
testl
mov
outsb
xchg
lods
in
popf
out
dec
shl
movsb
in
jmp
sbb
xchg
fiaddl
or
sbb
or
clc
rolb
lahf
push
mov
iret
push
ja
xor
inc
mov
inc
jo
lea
pop
adc
lods
add
or
mov
mov
out
inc
pop
inc
and
push
add
xlat
jb
es
push
ret
xor
pop
fwait
les
jmp
ret
add
lcall
inc
jb
fdivrp
jmp
or
aaa
mov
xor
sub
sahf
mov
xor
lea
int3
xchg
push
dec
fcmovne
cwtl
out
mov
push
pop
lods
xchg
mov
daa
mov
addl
shrb
nop
pop
adc
lods
xchg
test
gs
ret
or
loopne
fildll
bnd
mov
aam
stc
xor
xchg
ret
aam
add
dec
pop
mov
filds
xchg
mov
sbb
sbb
mov
shrb
push
hlt
sbb
xor
pop
adc
xor
pop
daa
dec
or
sbb
int3
cwtl
mov
inc
push
adc
cltd
aas
xchg
imul
aas
xor
mov
in
push
bound
jge
mov
sub
in
inc
and
pop
call
fistpll
insb
xchg
pop
call
and
xor
mov
dec
sbb
ja
std
aam
push
xchg
mov
loope
xor
sbb
repnz
iret
loope
jne
cmp
scas
jecxz
mov
ss
add
and
mov
into
sub
cmp
adc
jns
jle
sub
stc
mov
jmp
daa
sbb
fstpt
cmpsb
pop
aad
pop
gs
cmpsl
lret
mov
pop
xor
jne
pop
jns
or
out
rcrl
inc
subb
sub
xor
mov
frstor
icebp
out
cs
fucom
ljmp
cwtl
gs
jmp
jo
xor
push
rcl
mov
imul
mov
jge
data16
xor
pop
mov
hlt
push
popa
sub
pop
xchg
rorl
aas
aaa
je
popa
or
and
xchg
sub
push
lock
popf
shrd
adc
iret
jne
test
push
adc
addl
repnz
test
fs
dec
push
push
xor
push
nop
daa
jo
cmpsb
or
data16
or
icebp
loop
xchg
hlt
dec
jmp
push
push
xlat
lret
shr
outsb
jae
pop
dec
jmp
jno
int
dec
cld
push
loope
inc
enter
repz
shrl
sbb
in
mov
jns
pop
lcall
cli
imul
stos
js
pushf
repnz
adc
out
or
push
subl
add
test
rclb
nop
in
and
xchg
dec
add
xor
push
mov
inc
popa
stos
pop
jp
mov
jns
cwtl
int
dec
adc
adc
push
cmp
xchg
and
dec
aam
cwtl
js
cmp
out
xchg
push
lahf
xor
add
push
mov
mov
and
sbbl
cld
aam
mov
cltd
out
and
adc
stc
and
ret
xor
lret
call
adc
xor
pop
push
fbstp
xor
add
dec
jecxz
outsl
xchg
dec
nop
add
lea
push
call
add
xlat
jne
adc
cwtl
out
fcompl
or
mov
pop
imul
inc
mov
sub
mov
mov
int
orl
in
jns
xchg
cmp
mov
xor
lods
out
xor
sub
jecxz
jecxz
sbb
xchg
rcll
fdivrs
push
sti
addb
and
stc
cmp
ss
push
out
push
mov
mov
jmp
outsb
pop
fldln2
pusha
stos
push
sub
add
dec
std
pop
data16
cli
add
clc
bound
or
nop
pop
lea
cmc
sub
test
test
les
test
mov
inc
fildl
mov
gs
dec
push
test
cs
ja
pop
imul
push
ja
pusha
je
fidivrl
out
push
movsb
loop
mov
jp
inc
roll
or
rorb
xor
pop
mov
mov
cwtl
dec
lret
pop
cmc
arpl
pop
jne
mov
adc
fs
and
ss
sbb
adc
imul
iret
fs
sbb
jge
popa
pop
aaa
clc
adc
or
fdivl
cmp
cwtl
jecxz
sbb
pop
or
ret
out
out
sti
xchg
xchg
into
mov
mov
fcomps
push
into
das
es
stos
es
fbstp
call
push
pusha
mov
in
enter
xor
aaa
add
sbb
pop
mov
push
pop
movsl
stc
xor
cld
dec
cmp
jecxz
xchg
ret
mov
push
scas
pop
xor
mull
jb
pop
sti
cmc
inc
popf
sarl
push
or
jmp
in
stos
call
rol
mov
fnstsw
cmp
mov
and
sub
or
jnp
or
cld
jecxz
das
arpl
add
dec
jnp
jg
lcall
cld
mov
outsl
jecxz
inc
sarl
adc
adc
ret
mov
adc
fmul
lcall
js
pop
push
pop
pop
cmpsb
call
inc
xchg
mov
je
das
xchg
ss
scas
int
inc
or
or
pushf
imul
adc
sbb
lcall
fwait
in
movhpd
sbb
movb
orl
test
pop
mov
stos
mov
stos
add
stos
out
adc
push
fnstcw
cltd
sahf
mov
xchg
gs
xor
mov
incl
in
lock
push
sub
mov
dec
pop
push
imul
enter
arpl
mov
xchg
sbb
mov
sbb
loope
push
or
xorl
fstpl
cmp
inc
or
jbe
mov
xchg
push
popf
or
inc
jno
outsb
adc
fiaddl
pushf
fidivl
test
fsts
int
dec
ret
xor
cmp
fmull
inc
push
xchg
xchg
push
jg
mov
aad
loopne
gs
sub
push
adc
rcrl
cltd
and
push
mov
mov
push
lea
and
lea
lahf
fnsave
cltd
popf
pop
rol
jg
into
sub
out
and
or
std
sub
pop
mov
pushf
sub
into
jno
call
ja
mov
pushf
imul
test
push
or
lret
cmc
mov
cmp
add
in
pushf
cmp
or
nop
ret
mov
fsts
arpl
jmp
mov
lods
sub
lret
sti
adc
lea
pop
xchg
je
cmpsb
mov
dec
ja
fsubrs
pushf
addr16
ja,pn
cbtw
mov
cmc
daa
jno
and
ss
sahf
pushf
or
push
imul
dec
test
dec
nop
mov
push
pop
cwtl
or
and
mov
mov
shll
sbb
jne
or
mov
mov
xchg
loopne
or
lods
movsl
inc
jge
mov
dec
out
ret
pop
outsl
jecxz
call
movsl
lcall
jmp
inc
repnz
rcrl
xchg
jle
push
sbb
add
mov
sbb
int
pop
and
fdivr
js
sbb
jns
in
idivl
xchg
out
loope
adc
or
xchg
jecxz
int3
xor
mov
mov
xor
jg
rorl
cmp
lcall
and
fwait
ja
mov
out
mov
rcl
fwait
jb
lahf
add
imul
add
popa
lds
inc
inc
and
mov
jne
push
std
cmp
push
adc
cmp
inc
fisttpl
std
fwait
mov
xchg
push
or
inc
cld
jge
inc
mov
xor
std
inc
test
adc
es
loopne
pop
xor
stos
ljmp
mov
mov
scas
aas
pop
sub
aad
inc
je
nop
sub
xor
in
or
loope
out
jno
lds
lods
xadd
sub
cmp
imul
push
in
out
dec
xchg
mov
dec
or
ljmp
push
movsl
xchg
test
out
cmc
popa
mov
mov
loope
in
aas
mov
into
mov
cs
fidivrs
lret
dec
icebp
mov
push
aaa
icebp
pop
loop
jne
or
mov
and
adc
hlt
int3
pushf
das
mov
je
cmp
stos
je
adc
cmpsl
out
jno
mov
sti
scas
or
jecxz
push
jns
pop
test
add
loope
xchg
add
sub
add
sub
cmp
aam
mov
add
in
adc
mov
lods
movb
clc
cli
jecxz
pop
dec
cmp
mov
fistl
movsl
nop
stc
fiadds
popf
and
cs
dec
testl
js
das
ss
subb
mov
popf
xor
out
and
aam
sub
xchg
cmovp
ret
mov
dec
inc
sar
xchg
imul
and
adc
fadds
mov
sbb
movsl
add
mov
sar
hlt
mov
ror
xchg
sub
std
ljmp
or
cmp
ljmp
push
xor
and
jo
ror
insl
clc
in
xorl
in
jecxz
data16
mov
scas
loope
add
pop
jmp
icebp
pop
inc
fidivl
sbb
ss
inc
or
xor
push
arpl
les
leave
fmul
jae
jmp
xchg
stc
fst
add
sub
mov
add
call
push
dec
hlt
jp
push
aad
stc
mov
lcall
mov
xchg
xchg
jno
adc
cmp
inc
int3
sbb
lea
stos
mov
push
sbb
fsubl
in
push
test
xchg
nop
jnp
in
shrl
mov
aam
pop
jne
lret
shlb
in
rcl
fsubl
jecxz
dec
out
jb
jge
pop
sub
mov
mov
add
cltd
or
mov
cmpsb
orb
movsb
pop
or
or
test
jbe
pop
cmp
fsubs
xchg
jp
and
fdivl
sub
leave
out
pop
sti
add
add
lock
in
in
test
loope
je
or
pop
ror
mov
fbld
inc
xor
inc
outsb
mov
out
sbb
lcall
popa
pop
xlat
fcmovbe
iret
inc
sarb
jbe
testb
inc
pop
int
sbb
icebp
loop
lods
xor
push
imul
fdivl
into
enter
pop
popa
xor
xchg
popf
adc
enter
fcmovbe
xchg
daa
push
mov
sub
test
add
lret
xor
inc
jns
fwait
pushf
mov
mov
push
cmpsl
mov
mov
dec
sub
jo
sub
repnz
dec
js
cs
mov
fildl
cltd
and
or
out
or
pop
dec
incb
mov
lahf
mov
call
adc
aam
and
push
les
fwait
out
incb
sbb
enter
mov
inc
shrb
add
orl
mov
std
test
adc
jl
inc
test
in
repz
repz
ror
push
mov
movsl
push
shll
jg
xchg
adc
das
xchg
mov
sbb
pushf
test
pop
jecxz
lret
mov
sub
sbb
out
int
pusha
jnp
addr16
add
push
add
sahf
inc
loop
cmp
dec
pop
jno
mov
mov
jns
rcrl
add
mov
jg
ljmp
stos
notl
and
push
xor
fisubs
icebp
push
add
jp
scas
arpl
or
scas
in
sbb
adc
inc
rol
mov
dec
jb
sbb
ja
mull
into
movsb
repnz
pop
sub
faddl
jb
mov
js
push
mov
outsl
mov
std
lcall
movsb
insb
and
dec
jmp
movsb
icebp
sbb
pop
ja
rcl
xchg
mov
aad
or
cmp
out
mov
inc
adcl
adc
cmpsl
mov
into
test
addr16
adc
sbb
push
addr16
aam
xor
cmp
aas
in
push
sub
cmp
repz
fidivl
cs
jne
xchg
fs
cld
xor
push
mov
enter
mov
pop
fcoml
jnp
fwait
sahf
mov
sbb
shrl
data16
mov
and
xchg
sar
sbb
adc
push
repnz
sub
lcall
xchg
out
sbb
mov
xor
dec
pop
and
fimuls
sub
xchg
divl
and
test
mov
sbbl
fxch
repz
fnstenv
mov
add
mov
int3
imul
scas
adc
fsubr
or
sbbb
lods
js
mov
lahf
shlb
cmp
ljmp
and
shrb
pop
mov
lods
hlt
add
and
xor
inc
daa
push
scas
push
das
aad
mov
xor
fstp
jbe
push
dec
adc
adc
loope
jecxz
sarb
out
mov
ror
jnp
cmc
sarl
mov
jl
inc
imul
call
add
pop
in
pop
cmc
jp
mov
cmp
pop
mov
out
inc
shlb
xor
arpl
sbbb
dec
scas
dec
pop
aam
mov
xchg
inc
incb
js
dec
xchg
loop
or
ss
add
popa
adc
popa
mov
jecxz
or
ret
fldenv
bound
nop
pop
jp
xor
sub
sbb
dec
gs
adc
das
lods
jno
and
lea
or
sub
shr
jg
pop
std
stos
faddl
cmp
loop
das
or
sub
jp
ret
dec
lods
out
rorl
pop
inc
xorl
lcall
cmpl
mov
clc
movsb
push
addl
cmpsl
bound
ss
movb
push
cwtl
mov
mov
test
jo
repz
jmp
sbb
inc
idiv
lahf
es
lods
test
dec
roll
aas
cmpsl
sub
mov
cmp
mov
bound
aas
ds
or
mov
cmp
in
scas
sti
sahf
fisttpl
and
in
mov
out
sub
mov
daa
push
adc
mov
and
repz
or
adc
sahf
stc
fnstcw
xchg
mov
hlt
dec
popa
push
sub
sub
pcmpeqb
mov
jmp
pop
jb
push
mov
bswap
mov
loope
daa
pop
mov
ja
leave
shl
inc
fsubr
js
cmpsb
lock
dec
xor
cmp
rcll
and
cmp
data16
in
icebp
mov
mov
lahf
and
xorb
fisttpll
xorb
aam
movaps
mov
fisttpll
sbbl
loop
enter
xor
and
jnp
aaa
jp
dec
sub
pusha
jg
jmp
pop
repz
mull
icebp
test
or
aas
scas
out
rcrb
and
pop
repz
sub
addl
adc
dec
push
mov
pusha
mov
pop
lret
hlt
aam
jmp
mov
push
std
xchg
inc
loope
adc
mov
lds
adc
dec
xchg
lea
repz
sti
nop
xchg
movsl
pop
out
push
jne
adc
shrl
pop
inc
mov
push
sbb
push
mov
cmp
repnz
sbb
mov
jmp
lods
or
push
adc
lret
pop
stc
add
cmp
aas
ja
xor
jmp
push
jecxz
lea
add
out
std
lock
jecxz
in
adc
xchg
jne
pcmpgtb
bndstx
inc
mov
pushl
or
cmpsl
hlt
loopne
decl
mov
xor
mov
lods
rolb
sti
mov
out
xchg
jg
sub
xchg
push
pop
in
imul
cmc
jg
xchg
pop
adc
adc
dec
adc
xor
popl
mov
mov
test
stos
mov
pushf
ljmp
push
push
add
xor
jge
rolb
arpl
mov
and
addl
insb
cmpsb
jmp
adc
loop
arpl
bound
xlat
inc
xchg
call
cmpsl
or
dec
xlat
pop
xchg
cwtl
jbe
mov
push
lcallw
imul
push
mov
sahf
xor
loop
add
adc
jp
cs
add
xchg
cmp
lods
shl
xor
cmpsb
jo
mov
hlt
ljmp
xlat
sub
mov
test
push
mov
loop
inc
xchg
mov
cld
ret
cs
icebp
inc
inc
test
push
out
je
cmpsl
insl
xchg
inc
or
ljmp
mov
mov
ss
push
sti
inc
xchg
les
enter
cltd
pop
xchg
repnz
frstor
das
xor
mov
fildll
xchg
adc
out
sbb
scas
stos
and
or
pop
in
jl
bound
push
rcll
cli
psubw
lods
adc
test
xchg
cmp
xorl
shll
mov
aad
dec
mov
cmp
and
jae
js
dec
lcall
xchg
scas
mov
cmc
addr16
in
push
pop
inc
call
je
pinsrw
mov
fisubs
iret
repz
outsl
arpl
or
mov
repnz
or
loop
mov
cmp
stos
cltd
sbb
push
mov
mov
xor
xor
in
xchg
and
vunpcklps
fwait
sub
sbb
add
pop
sub
inc
loope
sarl
inc
add
popf
inc
dec
cwtl
aaa
add
jnp
ja
mov
add
imul
or
mov
loopne
xor
out
cmpsl
scas
cltd
jge
sub
inc
push
xor
fisubrl
inc
add
iret
mov
mov
sub
sub
pushl
jne
adc
pop
push
sub
dec
and
test
stc
test
add
out
mov
test
idivl
xorb
testl
incb
lcall
jo
shlb
cmp
pop
ds
fwait
push
je
and
shll
fs
leave
aaa
cmp
out
sub
mov
lock
stos
jae
and
mov
mov
je
out
loope
je
imul
in
mov
data16
addr16
outsb
dec
inc
scas
scas
or
jo
loope
lea
jnp
bound
dec
or
out
jb
test
scas
mov
inc
ljmp
das
adc
mov
jnp
or
jg
mov
mov
fimuls
lret
pop
loop
mov
ljmp
or
mov
push
sti
sbb
sahf
ds
mov
subl
test
xchg
inc
push
push
stos
adc
xor
fstpl
adc
aas
and
movsb
mov
dec
mov
fisubrs
aam
jle
sub
sbbb
in
pop
js
clc
cmp
aaa
pop
stos
jg
add
int3
xchg
fdivl
xchg
push
nop
imulb
pop
rol
addr16
pop
ds
aam
and
inc
cwtl
and
les
daa
cmpsb
xor
add
cli
adc
addr16
sbb
lea
push
or
test
sub
sbbl
pop
stos
sbb
add
jp
jno
mov
mov
cwtl
adc
ja
rcrb
or
add
mov
divl
and
sahf
enter
ljmp
sub
pop
ljmp
filds
mov
adc
dec
outsl
fbld
pop
stos
mov
test
inc
sbbl
push
fimull
push
jae
jl
lahf
movsb
fcompl
mov
mov
cmp
add
pop
imul
mov
mov
stos
stos
xor
mov
cmp
xchg
push
out
or
push
or
push
or
and
inc
aam
dec
pop
out
divb
sub
in
mov
cmp
sbb
pusha
add
dec
addr16
arpl
xchg
clc
jg
push
clc
add
mov
cld
or
lods
mov
xchg
inc
push
cmp
dec
inc
push
xor
in
loope
out
jle
rorl
inc
in
lds
sbb
mov
jmp
fildll
cmp
xorb
add
lock
insb
jge
das
hlt
call
movsb
movsl
cmp
fisubl
js
movsl
jne
repz
add
mov
aam
lea
xor
mov
stc
mov
push
imul
dec
xchg
fiaddl
inc
lds
pop
dec
cmp
popa
mov
pop
arpl
scas
popf
xor
sar
aad
movsl
call
jne
sub
fs
or
dec
aam
xor
push
jp
mov
sti
pop
dec
push
dec
subb
xchg
inc
xchg
stc
ret
add
shll
iret
lret
out
or
fsubrs
shrl
aaa
loopne
sbb
shrb
ficoms
in
push
jno
pop
mov
mov
adc
dec
mov
lret
and
sbb
xor
inc
cmp
fidivs
out
cmp
mov
mov
test
sub
sbb
lret
movsb
fmul
sbb
clc
out
popa
cmp
rorb
rcrb
xor
cmpsl
cmp
push
clc
pop
cltd
jo
pop
leave
sub
outsb
push
adc
insl
lret
out
add
jmp
and
das
add
sbb
dec
push
popa
adc
xlat
add
mov
add
pop
pop
sbb
ljmp
jne
aam
testl
or
js
mov
mov
mov
jne
cmpsb
fwait
jp
incb
nop
push
fwait
mov
int
cld
push
aad
addb
push
mov
xor
imul
ds
sbb
cmc
pop
inc
cltd
mov
dec
sbb
test
sti
aas
and
adc
fdivs
pop
mov
lock
push
jb
lock
test
adc
ja
addb
aaa
mov
lods
sub
gs
addr16
add
inc
clc
mov
xlat
inc
ficomps
es
ficomps
out
lcall
imul
inc
xor
sbb
insb
cmp
xor
popf
adc
mov
or
mov
sbb
fldenv
clc
mov
dec
and
loope
jb
aam
cmp
jle
dec
cmp
inc
sub
inc
mov
cmpsb
aas
in
adc
sbb
sbb
and
inc
and
sub
pushf
fists
cmp
dec
in
addb
mov
xor
pop
push
and
sbb
loope
jno
sub
in
or
push
nop
xor
mov
stc
inc
movsb
add
in
jnp
arpl
dec
mov
repnz
pop
jae
leave
push
push
pop
xor
mov
xchg
fbstp
jns
into
jns
arpl
loopne
xor
jns
in
inc
repz
addr16
imul
iret
mov
invd
mov
mov
repz
pop
add
repz
or
loope
mov
push
xchg
sbb
mov
jmp
sbb
aaa
push
and
xor
popa
xor
or
mov
es
cmp
hlt
out
mov
inc
push
rcll
fcmovnb
sub
stos
je
mov
es
in
push
loope
lods
test
inc
jo
aaa
in
idivb
cwtl
fwait
lret
fstpt
or
add
in
clc
or
inc
andb
inc
add
adc
adc
cmp
popa
sahf
or
pop
push
mov
xchg
sahf
cmp
mov
add
sahf
sarb
mov
clc
in
mov
cmc
outsb
mov
aas
jo
jno
cmc
and
loope
lods
fdivl
sbb
negb
sbb
mov
sub
mov
ja
rcll
aaa
add
xor
dec
pop
stos
jge
icebp
xchg
adc
jo
int
cmp
outsb
daa
test
icebp
jnp
mov
mov
movsb
fwait
cmpsl
jae
inc
enter
and
adc
sbb
mov
int
add
fldlg2
mov
aas
int3
mov
or
pop
sbb
pop
jp
xor
dec
lods
inc
clc
fdivrs
imull
push
out
jmp
mov
cmp
xor
mov
mov
inc
cmp
mov
sbb
jle
addr16
aaa
xchg
cwtl
jnp
dec
lret
aam
mov
sti
adc
pop
sti
stos
stos
outsl
cs
sub
mov
imul
and
sbb
int3
loopne
add
mov
dec
mulb
into
xor
cwtl
or
add
pop
push
leave
gs
sub
adc
rclb
push
sub
sahf
inc
and
dec
outsb
into
pushf
outsb
daa
std
adc
adc
xor
sub
lcall
cs
js
lea
out
mov
mov
pop
test
xchg
inc
insb
jno
fwait
push
fcompl
sub
pop
loopne
mov
jne
pop
mov
xor
dec
inc
dec
shll
pop
outsl
test
xlat
pusha
xorl
lods
push
mov
insl
mov
outsl
add
cld
fistpll
lds
out
cltd
fwait
sub
jecxz
fldt
push
ret
dec
cmp
and
clc
iret
push
pop
daa
jecxz
out
push
sbb
add
pop
rorl
push
jecxz
rolb
jecxz
adc
outsb
in
mov
arpl
mov
or
gs
or
insb
rcr
ds
inc
das
fstpl
add
adc
xchg
cld
jge,pt
pop
or
mov
dec
mov
and
sbb
negb
jmp
push
out
aas
push
leave
xchg
fidivrs
loope
push
mov
or
and
push
and
sbb
sti
xor
mov
lret
add
popf
in
and
test
into
mov
data16
xchg
and
imul
in
gs
mov
pop
das
es
sti
not
mov
rcrl
cli
imul
add
ret
in
mov
mov
movl
jnp
or
pop
or
and
mov
stos
ss
outsb
es
xchg
pop
negl
jno
xchg
aad
adc
shlb
mov
fs
mov
call
mov
add
into
mov
fwait
add
push
or
mov
pop
mov
adc
sub
push
xchg
pop
sub
arpl
sbb
sbb
lds
inc
jb
mov
jle
movsl
stc
cmpsb
inc
push
sbb
sti
mov
pop
loop
xchg
jge
or
inc
mov
dec
stc
xchg
unpcklps
out
inc
add
mov
xchg
aad
lea
dec
add
cmp
jns
pop
cmp
ja
xor
sbb
lea
out
push
jmp
sub
xchg
sbb
sbb
popf
cmp
push
sti
fwait
in
dec
test
and
loope
dec
cmpsb
add
ret
mov
pop
jmp
and
jmp
jbe
push
repz
ja
sub
and
movl
rcr
gs
push
filds
call
lds
xchg
push
push
pushf
mov
popa
int3
test
cwtl
dec
fucomip
inc
push
adc
stc
inc
adc
shr
adc
stos
xchg
movsb
int
sub
lock
cmp
sub
pusha
mov
cmp
sub
test
hlt
std
pusha
loopne
jmp
xlat
out
dec
es
push
mov
pusha
pop
mov
fcompl
mov
xchg
push
mov
fnsave
imull
popf
shl
movsb
sub
cmp
inc
ss
lahf
jae
inc
dec
inc
leave
ret
jno
testb
push
jb
xchg
fs
ret
and
cmp
fmul
ret
lret
repz
insb
pusha
sub
sbb
mov
cltd
adc
sbb
xchg
or
hlt
popf
xchg
imul
xchg
push
push
imul
inc
dec
cmpsl
nop
jno
xchg
or
jnp
dec
stc
cmp
pop
insl
lods
mov
mov
das
mov
mov
sub
xor
and
test
mov
enter
scas
les
xchg
loope
or
mov
dec
dec
mov
xchg
add
mov
cmpsw
add
jnp
or
mov
mov
ljmp
mov
push
cmp
std
mov
pop
icebp
mov
pop
mov
repnz
mov
xchg
mov
test
mov
outsb
jae
push
fistpl
fucomip
cmp
jge
sub
arpl
cmp
cli
orb
pusha
jns
mov
sbb
mov
into
ret
dec
sub
leave
std
in
shll
mov
push
push
shrd
in
mov
push
inc
js
jns
mov
inc
inc
mov
push
cmp
sbb
test
xor
sbb
jge
adc
mov
inc
xchg
andb
or
mov
fsubrl
lock
xor
ljmp
scas
sti
lret
xor
mov
insl
lcall
scas
push
popa
mov
shlb
imul
cmp
frstor
leave
out
or
xchg
movsl
icebp
movsb
cltd
jle
in
fucomip
mov
into
out
pop
sbb
loopne
stos
scas
lods
inc
dec
jecxz
jl
outsb
aas
imul
rorl
popa
jns
and
adc
es
scas
inc
cmp
pop
mov
sahf
sub
in
movsb
aas
scas
js
xchg
jl
mov
sub
mov
jle
lret
fucom
out
daa
outsl
xor
ljmp
mov
pop
or
and
aad
fs
push
push
enter
dec
cmp
cmp
mov
std
test
mov
fidivrl
out
push
popa
scas
mov
sub
jne
lret
nop
add
dec
es
stos
out
lods
add
cltd
push
cltd
test
loopne
mov
aaa
imul
pop
daa
call
in
push
adc
ljmp
fucom
das
das
push
leave
divl
jns
jg
xchg
xchg
lret
mov
inc
mov
leave
xor
mov
insb
sbb
sbb
ss
aad
arpl
sahf
dec
or
xchg
jnp
lcall
and
fimull
inc
mov
push
mov
push
push
push
dec
dec
lahf
push
sbb
scas
loopne
jge
sbb
mov
sub
pusha
ror
or
pop
out
sub
xor
dec
pusha
les
cltd
pushf
and
or
test
xor
stos
or
cwtl
mov
pop
fidivs
ficompl
mov
and
jne
or
adc
lods
push
push
lret
dec
fidivl
jmp
inc
mov
push
stc
jne
popl
lea
mov
jmp
movsl
in
adc
cmp
rcrl
lret
out
std
ja
loopne
mov
icebp
aas
fdivl
cmp
cmp
nop
push
lock
iret
in
and
ljmp
dec
and
ret
mov
push
pop
pop
insl
popa
lods
xchg
mov
dec
vmwrite
les
add
jecxz
add
mov
cltd
lret
inc
push
dec
fimuls
mov
bound
jo
push
cs
aam
jno
daa
insb
adc
in
loopne
es
in
icebp
mov
mov
jle
mov
fidivl
jne
fnsave
call
sbb
jb
cmpb
push
test
push
stos
test
sahf
mov
int
xchg
in
inc
dec
xor
ss
and
enter
and
jnp
stos
sub
jg
inc
xor
mov
xchg
jle
stc
pop
in
pop
pop
cmp
dec
xlat
hlt
das
pop
mov
repnz
loop
arpl
ja
lea
mov
ja
add
jbe
scas
cmp
addr16
out
lds
test
pop
xchg
xor
mov
dec
iret
dec
stc
or
push
sub
dec
and
repnz
xchg
mov
lods
push
sbb
in
push
sub
sbb
cltd
fcoml
mov
imul
dec
aad
fdiv
inc
pop
fiaddl
dec
jl
loopne
movsb
repz
rolb
idiv
shll
fiadds
pop
dec
inc
rolb
sbb
mov
mov
repz
mov
lret
popf
pop
pop
pusha
rol
std
repnz
out
fisubrs
dec
popf
inc
mov
xor
inc
stos
pop
ja
in
insl
xor
adc
mov
xchg
out
jecxz
pushf
movl
mov
fldenv
xchg
cmp
push
cmp
mov
pop
es
es
push
cmp
mov
mov
leave
aad
dec
sub
stos
std
das
mov
test
sbb
ljmp
push
in
jge
stc
lods
cmpsb
mov
pusha
cltd
mov
jae
dec
push
inc
imul
or
dec
fadd
cmp
sbb
inc
and
and
sbbl
adc
jb
insb
fsubp
in
cmp
je
repnz
mov
sub
enter
sbbl
pop
xchg
adc
faddl
mov
dec
cmp
cmp
xchg
lret
inc
mov
mov
pop
xchg
and
or
jno
mov
out
cli
or
daa
das
dec
jp
andl
test
jmp
cmp
jmp
and
xchg
out
mov
in
fwait
pop
mov
push
loopne
cltd
out
inc
xor
je
outsl
shrb
jne
bound
pop
cwtl
and
in
andl
and
lret
das
add
clc
pop
addb
push
gs
fnstenv
sti
mov
cmp
xchg
repnz
in
jge
lock
sbb
add
push
or
rcrb
clc
dec
adc
and
movsb
xlat
aam
push
pop
inc
dec
scas
add
sub
fs
add
pop
xor
pop
aaa
add
addr16
ret
cmp
loope
fwait
insb
sub
and
mov
mov
shlb
xor
mov
addr16
in
and
or
sbb
mov
and
xchg
int
add
cmp
mov
adc
out
ficomps
pop
sbb
jne
xor
hlt
add
shlb
int3
std
mov
ret
gs
fucomp
mov
push
inc
lret
hlt
lret
rclb
adc
outsb
sahf
hlt
stos
pop
or
fldcw
push
lret
pop
arpl
inc
sub
inc
push
aad
imul
stos
lds
scas
xlat
or
mov
pop
mov
stos
or
jae
xchg
xchg
sbb
fisubl
movb
scas
dec
push
and
aaa
cmpl
push
and
jge
insl
std
jnp
or
or
lret
pop
andb
mov
outsb
add
xchg
outsb
repz
lds
dec
or
movsb
mov
dec
push
outsb
fistps
rorb
jecxz
add
push
popa
mov
jg
push
pushf
xor
add
mov
add
or
dec
in
movsb
adc
push
int3
push
lcall
add
sbb
sahf
in
std
in
push
sub
gs
pop
fld
out
adc
test
sbb
lret
stc
jmp
push
test
outsl
cmc
xchg
push
add
jmp
inc
jp
sbbl
add
leave
es
roll
shll
fmul
push
pop
sub
xchg
call
jne
rorl
inc
popa
icebp
push
mov
ss
es
add
pop
pop
mov
enter
mov
xor
push
jne
arpl
cmp
inc
shrb
stos
jp
cmp
mov
add
cmp
xlat
insb
xor
pop
imul
pop
dec
out
push
and
inc
ds
adc
cmc
xor
jbe
lcall
mov
inc
inc
push
jo
pop
mov
inc
or
mov
ljmp
mov
cmp
les
popf
mov
xor
adc
mov
stos
dec
dec
cs
lcall
pop
roll
inc
daa
mov
sbb
sub
dec
add
inc
scas
cmp
out
addb
testb
ss
adc
iret
xor
push
jne
cmp
or
out
scas
jmp
jp
jns
stos
movsl
sub
int
sbb
jnp
or
sbb
addr16
push
data16
mov
mov
xor
out
stos
sub
lret
daa
xchg
fldcw
cmp
aaa
lcall
xorl
stos
sti
xor
fnsave
imul
fstpt
enter
test
cmp
sub
xchg
out
in
xor
gs
cmpb
cmp
repz
jbe
popa
fisubl
ljmp
mov
into
stos
clc
jnp
jae,pt
stc
adc
dec
lea
push
enter
adc
test
pushf
inc
imul
sub
sbb
fstpt
lcall
gs
stos
push
or
sub
xor
xor
jg
shl
jg
enter
arpl
xlat
hlt
push
lea
daa
es
sub
aad
and
jge
stc
dec
mov
jge
cmp
stc
mov
dec
shl
hlt
mov
std
sbb
lcall
mov
sbb
in
sbb
mov
imul
xchg
hlt
mov
jle
cwtl
sbb
clc
inc
je
sub
cld
jnp
mov
push
cmp
cmp
sbb
dec
testl
leave
not
incl
movsb
sbb
loope
cld
out
shlb
rcr
cld
iret
mov
mov
mov
xchg
or
out
dec
fimuls
rclb
fsubrl
xor
xchg
mov
xlat
test
rorl
sbb
add
jge
das
mov
sub
fsubrs
inc
push
cwtl
leave
imul
enter
inc
jp
xor
aaa
sbb
jo
lock
push
test
test
scas
std
adc
pushf
adc
mov
xorl
ja
push
loope
into
imul
lock
push
scas
mov
je
mov
xchg
testl
loope
dec
xor
adc
mov
sti
sbb
and
sbb
ljmp
jae
push
xchg
add
or
insl
dec
pop
test
clc
mov
iret
or
mov
add
xor
stos
shl
fstpl
dec
sahf
scas
lods
jle
lea
jae
loopne
in
sbb
ficompl
lods
xchg
adc
pop
insl
out
or
sub
lock
mov
dec
aam
add
insb
mov
ss
mov
int3
mov
movsl
mov
mov
cltd
sub
push
mov
test
jle,pt
jo
lret
sbb
jl
mov
adc
add
and
ds
cmp
sbb
movsb
inc
arpl
imul
fistpl
xor
or
sbb
loop
cmp
dec
cmpsb
dec
xchg
addb
mov
mov
push
cmp
stos
xor
jmp
push
push
mov
adc
dec
jmp
mov
pop
jo
sub
call
aas
loopne
rclb
jo
and
pop
sbb
pop
stc
cmpsl
in
cs
jbe
jecxz
fld
sbb
dec
mov
test
hlt
imul
scas
jmp
shrb
into
jae
shl
cs
scas
pop
mov
aaa
xor
dec
leave
lods
jmp
cld
movsl
ret
push
test
pop
das
das
and
leave
fbld
or
test
clc
leave
ficoms
push
xchg
jns
in
jns
mov
outsb
inc
mov
lods
sub
aaa
ds
push
cli
push
es
repz
or
je
in
test
fwait
dec
cmp
out
popa
nop
pushf
fadds
mov
in
mov
xlat
jns
imul
ljmp
inc
rolb
cmp
test
add
je
xchg
mov
dec
sbb
sahf
repz
fldcw
fidivl
pop
aam
push
or
pop
lods
fdivr
xor
dec
fnstcw
mov
arpl
icebp
je
pushf
pop
lds
add
lea
xor
cltd
rorb
or
sbb
pop
fwait
stos
out
inc
lahf
xchg
and
in
jno
sub
repnz
cmp
gs
getsec
dec
push
and
cmc
jecxz
stos
cmp
sarb
pop
es
cwtl
pop
and
xchg
cs
inc
icebp
cwtl
imul
lret
inc
andps
inc
sub
outsb
jb
inc
ffree
xchg
lret
xor
xor
xor
cmp
test
outsb
mov
cmpb
push
push
pushf
or
xor
cltd
fwait
rol
sub
lock
add
pusha
lcall
adc
out
xor
in
repz
xor
pop
jl
inc
mov
dec
addr16
and
xchg
mov
jns
dec
lods
push
lods
cmp
push
and
jle
mov
out
mov
out
pop
push
xor
xchg
pop
push
fwait
pop
xchg
imul
mov
jbe
rclb
mov
sbb
in
or
sarl
dec
and
mov
mov
daa
hlt
adc
call
push
je
fs
mov
xor
cmpsl
mov
movsb
sub
push
push
andl
adc
addr16
pop
push
xchg
divl
mov
jle
pop
hlt
xchg
push
pop
out
and
cmp
push
je
fnstenv
loop
pushf
mull
mov
mov
mov
es
jns
pop
mov
dec
movsb
lret
movsb
mov
mov
mov
lods
xchg
sbb
push
and
add
inc
rolb
sbb
inc
nop
ficomps
adc
cmpsl
mulb
popf
jmp
icebp
xchg
jmp
inc
ss
cli
and
jns
scas
inc
iret
and
sub
or
sub
imul
inc
sub
mov
iret
xor
ss
and
fdivrs
andb
lock
not
mov
ja
xlat
int3
dec
das
add
fdivs
leave
push
fbstp
enter
sbb
inc
xchg
or
lods
and
cld
in
lods
cmp
adc
mov
test
lret
lods
mov
pop
and
bound
push
or
cltd
adc
dec
xchg
or
mov
loopne
cmp
mov
fisttpll
push
imul
jg
in
fsubrs
mov
hlt
sbb
sbb
cld
cltd
hlt
mov
or
pop
mov
push
and
mov
xchg
sbb
out
popa
xchg
hlt
div
add
popf
and
adc
xor
and
mov
xor
bt
movsb
test
je
les
jmp
xchg
fidivs
aam
jno
cmpsl
aas
xchg
mov
adc
imul
lea
iret
cmc
pop
imulb
push
jo
aad
fs
mov
sti
mov
xchg
popf
or
mov
pop
jae
mov
ljmp
mov
xor
jl
in
add
jns
jmp
rcr
shl
ljmp
stos
jae
push
lods
or
das
adc
outsl
sbb
outsb
push
jnp
leave
fstl
dec
cmpsl
sbb
stos
lods
fucomp
xchg
sub
addr16
or
jg
sbb
add
cmp
cltd
shl
adc
fisttpll
xchg
or
mov
clc
sub
fwait
pop
cmpsb
sub
mov
mov
lcall
xchg
and
aam
popf
andl
shrl
dec
mov
sahf
cmp
mov
mov
lcall
mov
pop
cwtl
mov
mov
and
fnstsw
push
repz
inc
sub
es
jmp
or
xchg
dec
popf
fs
cmpsl
lret
push
gs
dec
mov
lcall
dec
inc
popf
push
aas
ds
jnp
sbb
mov
add
fstpt
push
dec
mov
dec
in
sub
shrb
loopne
pop
adc
cs
add
daa
repnz
and
add
push
mov
push
je
into
mov
sub
xchg
mov
push
imul
repnz
push
pop
mov
vmaxps
stos
fadds
or
and
mov
clc
adc
xlat
test
xchg
pop
sub
sub
fucomp
lret
add
mul
push
xor
test
push
rolb
push
dec
out
ss
mov
ljmp
loope
mov
in
sbb
push
rcrb
ljmp
sbb
pop
out
jbe
sub
mov
sahf
pop
sbb
leave
pop
jle
pop
mov
jmp
mov
jb
pop
lods
inc
lcall
inc
mov
sbb
insl
stc
xor
daa
jae
mov
xchg
test
mov
fwait
imul
pop
subb
fwait
ret
repz
fcom
xchg
adc
cmp
iret
sub
loope
xor
popa
cli
outsl
js
push
cltd
cltd
leave
cli
dec
pop
adc
pop
js
out
stos
dec
pushl
mov
xchg
lods
xchg
cmc
leave
jne
aad
mov
cmp
out
lods
adc
lret
xchg
in
jg
add
mov
mov
or
push
mov
lahf
pop
jbe
out
aaa
dec
dec
je
xchg
aam
rcl
dec
gs
data16
sarb
ds
imul
nop
push
sub
test
gs
prefetcht0
scas
int
mov
movsl
mov
in
ret
incb
test
cmpsb
dec
aad
iret
lea
push
outsb
xchg
xor
sub
ljmp
inc
xor
movsb
inc
sbb
in
xor
pop
mov
ss
imul
add
repz
and
cltd
hlt
mov
jnp
xchg
loope
jle
int
sbb
enter
xchg
push
std
mov
fistpll
pop
int3
bound
mov
ljmp
jae
cmpsl
or
fwait
xlat
dec
jbe
mov
xor
int3
cmp
sbb
sbb
scas
lret
out
dec
mov
cmp
insb
push
loop
push
adc
lahf
lret
int
dec
insl
dec
ja
in
pusha
add
or
icebp
sub
aam
inc
and
or
out
pop
pop
and
lods
aaa
xor
shrb
mov
in
out
or
mov
inc
mov
into
lea
xchg
xchg
js
loopne
push
and
sub
jno
sbb
pop
or
ret
xchg
shlb
test
mov
cld
push
fsubrl
sub
lret
in
or
add
aas
pop
lds
mov
xchg
mov
mov
lea
hlt
nop
adc
inc
gs
inc
stos
clc
shl
cmp
sub
mov
pop
sub
pop
push
scas
sbb
adc
inc
mov
mov
enter
or
pop
dec
out
sub
sub
mov
add
pop
test
cmpsb
cli
cltd
jno
outsb
push
jb
sbb
adc
mov
xchg
add
popl
fisttpl
add
mov
mov
dec
rcrl
mov
js
mov
in
xchg
push
xor
jg
test
aas
mov
imul
rcll
in
bound
sbb
out
out
add
mov
hlt
mov
and
in
gs
shlb
pop
jp
mov
repz
dec
into
mov
adc
jns
scas
add
mov
sarb
cs
xor
out
sbb
mov
or
test
gs
popa
in
sbb
pop
jo
notb
xor
orl
fldl
add
or
std
xchg
mov
mov
shlb
push
inc
out
add
cmp
adc
das
scas
aad
fdivs
adc
xchg
jp
rcl
pop
test
and
xchg
push
adc
aas
pop
xchg
mov
loope
ds
sbb
test
popa
repz
hlt
sub
aas
jae
leave
scas
or
mov
xor
in
jne
in
sub
push
pop
je
pop
mov
add
push
pushf
mov
jmp
cmp
mov
push
loope
inc
xor
imul
insb
adc
cmp
movsb
jne
push
sahf
add
test
clc
pop
xor
addl
add
out
insb
test
push
das
hlt
mov
add
inc
push
xchg
jge
shlb
push
negb
sahf
pushf
mov
leave
xchg
sub
cs
rclb
jl
sub
leave
mov
out
lcall
mov
xor
dec
xor
dec
in
mov
mov
inc
mul
cmp
fadd
clc
mov
loope
cmp
decl
insl
mov
xor
add
xor
outsb
or
outsb
push
pushf
and
push
ret
xor
sub
adc
jne
jp
jns
jb
jmp
mov
cmp
and
or
dec
push
sarl
cmp
jle
subb
aaa
sub
mov
into
movsl
clc
or
adc
in
ja
cwtl
mov
sti
outsl
popa
in
shl
ret
sub
inc
sar
jmp
mov
xchg
fs
or
nop
fwait
lds
adc
xchg
push
dec
movsl
mov
mov
cmp
mov
ss
ret
mov
ret
dec
faddp
imul
stos
int3
push
aaa
sbb
pop
in
dec
dec
inc
cmc
mov
push
fcompl
outsb
std
cli
scas
pop
pop
fcomip
cs
mov
scas
pop
xchg
jle
fidivs
push
mov
out
cmpl
pop
mov
pop
or
xchg
scas
inc
scas
call
movsl
inc
dec
lock
imul
addr16
lret
inc
xchg
mov
icebp
shll
mov
pop
sub
jbe
loope
cmp
scas
sub
rcrb
repz
js
push
push
add
xor
daa
cmp
inc
jb
out
add
and
pop
orb
xchg
loope
inc
mov
jae
ficomps
xchg
push
add
lret
xchg
test
and
mov
or
or
mov
xchg
iret
jecxz
lret
pop
mov
std
jae
inc
leave
mov
imull
jmp
pushf
jbe
das
aas
cld
test
outsl
fimull
mov
fdivrl
sbb
aas
sbb
ficoml
sahf
lods
out
mov
dec
fwait
lcall
pop
push
mov
cmp
jns
pop
xchg
lahf
add
cmp
pop
xchg
imul
add
mov
bound
imul
cmc
negl
sub
pop
mov
cmpsb
xchg
shll
shrb
push
mov
xor
jo
xor
inc
jno
shlb
jp
andb
ds
shrl
in
add
adc
mov
cwtl
cmp
pop
int
sub
xor
shll
xchg
insl
push
subb
dec
popl
mov
xchg
outsl
adc
scas
loope
and
andl
inc
xchg
pop
adc
mov
repz
aam
push
not
inc
lahf
dec
fsubl
inc
lea
loopne
fdivrs
and
inc
pop
call
mov
and
mov
sbb
imul
in
fcmovne
loope
inc
aas
push
mov
xor
inc
js
xchg
mov
cmp
out
aaa
pop
fstps
fimull
cmp
xor
sub
xchg
out
test
ja
in
adc
push
cmpsl
roll
hlt
fbstp
xchg
stos
iret
mov
mov
xchg
mov
sub
mov
dec
push
sub
mov
les
ljmp
mov
aaa
test
sbb
sbb
test
cmpsl
loop
jg
sbb
fsubl
mov
addr16
cmc
xor
std
xchg
outsl
mov
fmul
add
inc
and
inc
shr
xor
inc
mov
mov
sbb
xchg
rep
jecxz
scas
push
fisubrs
arpl
jo
std
push
jae
out
dec
pop
pop
std
cmp
mov
imul
push
cmc
mov
incb
push
vmovaps
fcomps
mov
jo
lahf
jg
sbbl
std
push
jo
xor
scas
mov
imul
push
je
cmpsb
jg
divb
mov
dec
jmp
dec
sahf
daa
cld
inc
shrl
jmp
pusha
and
inc
outsl
push
fldenv
jno
add
pop
pop
in
add
addr16
push
cmp
xchg
mov
das
in
and
add
aas
cltd
inc
pop
xor
cltd
push
ret
fisubl
ja
repz
sbb
fidivrs
xchg
mov
sub
addb
pop
sbb
ss
push
mov
cwtl
xor
shrb
xchg
fistl
mov
rcr
lods
xchg
mov
adc
nop
lods
cltd
ficoml
fmul
cs
fadd
movsb
fildl
int
push
arpl
fcmovu
push
mov
addr16
mov
sub
adc
fbld
push
mov
sbb
aam
scas
es
inc
push
mov
aad
adc
sahf
and
mov
hlt
sti
fcmovbe
mov
dec
data16
sbb
mov
or
and
and
dec
repz
repz
je
bnd
cltd
add
adc
sbb
test
leave
adc
dec
push
jge
push
loopne
inc
test
sbb
out
add
loopne
ja,pt
or
inc
cmp
push
dec
out
push
out
xor
jno
cmp
xchg
sub
pop
xchg
popf
jns
xorl
mov
pop
adc
mov
cmpsb
fisubs
mov
out
je
mov
cmp
test
or
inc
pop
bound
loope
popa
rorb
mov
out
pop
push
jnp
mov
scas
pusha
imul
cmc
lcall
cmp
gs
test
mov
lret
jp
test
or
stos
jg
pushf
js
push
in
call
in
mov
sub
mov
scas
mov
sub
xor
lock
mov
shrb
in
pusha
gs
inc
pop
addl
mov
cmpl
jb
fisubrs
jo
xor
inc
das
and
leave
jmp
out
adc
mov
or
lea
or
andl
xor
and
xchg
orb
jnp
aaa
orl
loope
mov
add
mov
movsb
mov
jmp
or
pop
insl
sub
repz
ret
mov
iret
cmpl
pop
sbb
ret
sbb
out
call
in
es
pop
rcrl
and
iret
pop
or
push
xor
pop
cwtl
ret
xor
add
mov
xor
fimuls
test
call
ret
arpl
hlt
test
decb
mov
inc
or
xchg
jne
cmc
xchg
mov
loop
fstpl
push
test
ja
xchg
cmc
add
divl
test
lods
imul
push
int
roll
dec
sarl
les
xor
adc
cltd
mov
std
rolb
lods
es
je
dec
stos
shlb
sbb
stos
and
sbb
test
sbbb
jmp
mov
fcompl
sub
int3
adc
jnp
push
push
jo
ret
lea
xlat
aad
push
std
push
fbstp
cmpsl
outsb
push
inc
loopne
pop
test
cmpl
push
and
and
sub
dec
fsubr
jo
dec
push
out
jbe
pop
cmp
mov
mov
sbb
leave
cmp
fdivr
add
dec
dec
or
add
pop
sbb
mov
add
ja
push
push
pop
add
fbld
and
add
loop
inc
sub
xorb
shl
xchg
mov
ss
push
shl
adc
sbb
pop
add
sti
scas
and
outsl
std
gs
push
lods
mov
cmp
xor
xor
fcomps
js
outsl
sbbb
push
enter
incb
jmp
mov
mov
lcall
sub
sahf
clc
mov
xchg
leave
addr16
das
dec
xlat
mov
loope
add
sub
push
aaa
addb
int
negb
push
scas
add
insl
inc
icebp
std
jbe
fstpl
and
jp
imul
mov
push
insl
mov
mov
inc
aas
pop
icebp
incb
mov
pop
shl
sub
jp
test
popf
fdivr
hlt
xchg
mov
push
js
and
jl
out
sbb
push
outsl
inc
dec
cmc
pop
test
stos
into
jecxz
dec
mov
push
xor
inc
add
mov
push
scas
xchg
int
movsl
jg
mov
ret
xchg
aaa
ja
sub
mov
mov
test
in
mov
dec
xchg
enter
jo
sbb
pop
or
out
fisubs
es
je
repz
xor
test
mov
ljmp
mov
mov
add
stc
les
cmpsl
jg
jmp
jmp
jge
out
fldt
sbb
lahf
xchg
test
in
aad
lods
cmp
inc
push
pop
lea
adc
xor
jne
jg
nop
adc
addl
inc
int
jl
sub
icebp
rclb
outsb
popf
popa
inc
inc
jge
push
lcall
shlb
scas
scas
out
mov
and
jne
mov
dec
push
les
cli
pushf
test
jmp
xor
mov
sbb
xor
xor
loopne
and
andl
mov
ss
sub
mov
mov
test
jns,pn
movsb
mov
idiv
jne
xorl
gs
add
adc
add
in
mov
jmp
inc
movsl
pop
repz
xchg
sub
or
cli
cmpb
jns
mov
and
jl
jne
mov
pop
mov
lret
xor
mov
inc
pusha
cld
or
mov
adcl
sub
mov
or
add
cmpsl
fincstp
and
lock
aam
dec
inc
push
outsl
shrb
xorl
in
stos
mov
push
dec
dec
int3
ljmp
mov
cmp
decb
cmp
addr16
popa
adcb
sbb
or
aam
movsl
mulb
cmpsl
test
in
pop
add
inc
sub
or
dec
sub
testl
xchg
xor
mov
lods
and
fwait
xchg
mov
mov
sarb
push
pop
int
inc
xchg
and
xor
xchg
sub
adc
pop
pop
sbb
fsubrp
mov
subl
sti
and
push
jle
cmpsl
mov
mov
mov
xor
dec
mov
fimull
or
test
sub
fisttps
scas
lea
es
roll
jbe
sbb
pop
stos
mov
cmp
mov
in
jl
dec
xchg
std
push
orb
test
add
xchg
add
test
adc
fwait
ss
jl
sub
mov
mov
outsb
stc
clc
insb
mov
ret
out
add
mov
mov
es
popf
add
sbb
js
test
mov
jge
cwtl
push
aas
mov
mov
dec
out
jns
cmp
loopne
xor
lods
in
dec
pop
mov
iret
shl
fnstenv
pop
xor
shlb
out
sbb
cli
xchg
inc
cmp
scas
xor
leave
mov
arpl
daa
call
sbb
sub
lods
mov
inc
ds
in
lods
push
pop
xlat
enter
sub
scas
idiv
pushw
dec
jecxz
and
cmp
mov
outsl
inc
dec
aaa
cwtl
insb
adc
cmp
pop
mov
aad
cwtl
sbb
sbbb
insb
std
test
sub
mov
dec
cltd
ss
repz
cwtl
cmc
ret
add
imul
cli
push
mov
inc
ss
cmc
mov
ljmp
outsl
xchg
add
insl
xchg
push
xchg
sarb
and
push
inc
fidivrs
mov
cmp
sbb
in
out
pop
je
lods
pusha
fimuls
push
jl
mov
rorb
mov
pop
pop
sarb
hlt
stc
mull
and
inc
scas
in
cli
ret
jo
data16
ficompl
and
mov
popf
and
sbb
imul
cmpsl
inc
jns
mov
vrcpps
add
mov
dec
cltd
xlat
xor
das
icebp
adc
xlat
mov
movsb
imul
stos
stos
pop
mov
lret
mov
mul
add
dec
inc
push
imul
xor
lret
out
mov
pop
mov
push
jnp
adc
xchg
cmp
add
js
stos
fistpll
adc
ficoml
fstps
cmc
lahf
nop
and
push
and
addb
cmp
sub
stc
push
icebp
ss
sbb
or
and
test
aad
push
mov
jno
jge
lods
aad
jp
jl
pop
fldenv
mov
mov
pop
mov
inc
add
cs
push
iret
xor
cmc
ja
fcmovnu
pop
push
out
push
ret
dec
lods
scas
mov
and
fidivrs
cmp
xor
mov
xor
aam
aaa
cmpsl
or
cwtl
inc
into
lcall
pop
and
xor
or
repnz
fistps
ja
mov
mov
jecxz
inc
js
or
xor
or
daa
lock
sahf
imul
jp
inc
pop
mov
xchg
xor
imul
jmp
or
testl
pop
std
mov
aam
rorl
mov
repz
xchg
add
decb
icebp
push
loope
test
push
mov
add
xchg
xchg
in
shlb
je
arpl
test
jp
cmp
cli
cmpsb
ss
push
adc
push
xor
jbe
clc
mov
rcrb
push
imul
jo
fmull
xchg
xor
cmpsb
cmp
dec
cmpsl
mov
js
lcall
outsl
sub
push
stos
cli
add
out
int
lahf
imul
push
fwait
in
jo
jecxz
hlt
dec
adc
pushf
and
lcall
pop
push
fsts
sbb
cmp
test
add
lret
push
gs
dec
popa
mov
sbb
in
ljmp
dec
in
sub
or
or
mov
sarl
mov
xor
jecxz
fwait
xchg
push
dec
push
fdivrs
mov
xchg
mov
in
jle
xchg
pushf
cmp
inc
mov
mov
cmp
jl
in
mov
lahf
aad
push
cmp
out
mov
out
jge
ljmp
cmp
jmp
enter
jno
cltd
lcall
fsubl
mov
loopne
cmpsb
and
test
jb
add
sub
adc
fs
and
mov
xchg
or
cld
cmp
mov
mov
pop
sub
shlb
outsl
and
out
mov
cmp
aam
outsl
shl
fisubrl
xchg
hlt
xor
dec
mov
cmp
dec
int3
inc
push
pop
hlt
pop
push
mov
or
adc
add
aas
xor
or
faddl
inc
test
mov
orl
jne
sbb
mov
jecxz
mov
dec
fcmovne
ret
into
fisubs
and
inc
addl
mov
jo
mov
add
dec
xchg
dec
arpl
imul
icebp
dec
movsb
test
and
pop
push
dec
jns
sbb
arpl
xor
jns
inc
push
repnz
mov
mov
mov
xchg
xchg
pop
and
pop
imul
inc
dec
pop
pop
push
adc
aas
stc
jo
lahf
adc
xchg
xor
xchg
lods
inc
stc
dec
cmp
imul
push
dec
leave
fst
inc
std
push
add
mov
add
mov
stos
outsl
mov
sbbb
dec
sbb
jle
repz
add
and
sbbb
ret
mov
mov
loopne
mov
pop
call
cmpsl
adc
sbb
sub
mov
lahf
cmp
loope
ficoml
ja
fdivrp
adc
mov
adc
mov
xor
xchg
xor
mov
lods
add
dec
jge
fidivrs
call
inc
xchg
xchg
ret
pop
mov
and
ss
pop
cmpsl
ret
jno
ljmp
mov
lret
dec
sub
sbbb
out
out
cmp
dec
fwait
lcall
xchg
fnstenv
pop
call
aaa
or
cmp
cmc
lahf
insl
push
icebp
xlat
std
gs
mov
sbb
out
hlt
cmp
xor
dec
and
icebp
ret
lods
mov
jns
adc
sub
cmp
into
idivl
inc
mov
mov
jecxz
aam
push
fcompl
rorb
sarl
cmp
pop
push
dec
js
lds
out
jle
or
je
out
icebp
decb
jbe
pop
mov
pop
or
cltd
scas
fwait
mov
std
xchg
add
sbbb
jnp
sbb
out
lret
adc
shrl
push
or
inc
jbe
xor
hlt
inc
sti
inc
scas
aam
inc
ficompl
jb
pop
movsb
lret
arpl
cs
in
lahf
test
dec
jae
mov
and
inc
test
xor
jg
shll
pop
ljmp
jns
nop
icebp
sbb
pushl
cmpsb
fidivrl
push
cmpsl
rcrl
sbb
xchg
test
pop
jne
cmp
lds
fmul
dec
push
adc
mov
cmp
add
jb
sub
xor
pop
lods
ss
push
push
xchg
arpl
jmp
dec
dec
es
inc
adc
mov
mov
pop
cs
sbb
cmp
cmp
xchg
and
out
shlb
sti
sbb
adc
insb
aam
notl
insb
and
jns
sbb
pop
pop
out
or
in
hlt
repnz
adc
outsb
push
cwtl
nop
lods
xchg
je
fbld
insb
xor
sbb
jle
add
outsl
and
ljmp
or
loop
sbb
mov
daa
and
dec
add
movsl
cld
push
test
add
pop
pop
xchg
ds
inc
cld
xor
jnp
into
outsb
outsb
jecxz
push
arpl
sbb
jl
push
jno
movsb
nop
lds
jo
push
mov
leave
or
xor
enter
cmp
push
add
es
or
js
ss
add
imul
cmpsb
sub
stos
mov
sub
daa
xchg
cs
dec
cwtl
sub
push
pop
ds
sub
xchg
push
mov
xchg
xchg
aas
div
ds
out
cmpsb
sahf
data16
inc
pop
movsb
ss
or
call
lods
xor
adc
jle
cmp
mov
sbb
and
test
int
jnp
adcl
aam
mov
popa
adc
rol
fwait
jge
push
mov
push
js
jo
add
in
stc
outsl
int
filds
mov
adc
pop
cs
out
stc
sbb
stc
xchg
xor
clc
cmp
adc
dec
cmp
rcrb
mov
ja
jle
mov
push
inc
jo
adcl
mov
imul
adc
cmc
mov
mov
adc
xchg
das
mov
and
rorl
dec
and
insb
pop
sub
icebp
scas
out
scas
out
adc
cltd
dec
cltd
shlb
xor
pop
xchg
xchg
push
pop
inc
stos
mov
push
sub
sahf
mov
fwait
mov
ds
negb
fistpll
jae
lret
push
add
movsl
shrb
push
mov
call
add
es
aad
mov
push
push
jmp
loope
adc
jmp
mov
js
sbb
add
dec
xchg
xchg
fmuls
gs
and
jecxz
mov
or
popa
and
sub
xchg
stc
scas
mov
lcall
outsb
insl
sub
xor
lcall
sbb
xor
mov
ss
and
negb
stos
adc
imul
pop
add
test
xor
pop
mov
dec
movb
pop
xchg
sbb
mov
cmp
dec
je
cmp
test
jo
sarl
loope
mov
pop
mov
mov
add
enter
inc
dec
cmp
sarl
das
xor
push
push
test
lcall
and
enter
imul
aam
adc
jbe
pop
push
cmp
xchg
push
les
test
imul
adc
repnz
xor
nop
les
lcall
mov
std
inc
fistpl
scas
jecxz
mov
or
add
mov
jecxz
mov
aaa
shrl
fwait
pop
scas
cltd
sbb
fstps
divl
es
enter
cmp
and
inc
fnstenv
inc
dec
mov
jae
mov
pop
mov
xor
repz
and
test
popf
mov
mov
jnp
jl
fldt
cld
inc
xor
adc
into
sahf
cpuid
dec
mov
movsl
sarb
out
add
mov
pop
adc
fwait
or
xchg
dec
jnp
inc
dec
sbb
mov
addr16
cmp
fsubrp
adc
gs
out
xlat
in
xchg
xor
in
icebp
xor
int3
and
scas
push
sub
sub
pop
clc
sarb
xchg
das
adc
xchg
pop
pusha
in
push
jbe
das
loopne
rorb
jmp
push
mov
jl
jae,pn
daa
das
cmp
mov
cmpsb
stc
mov
and
jg
mov
cmp
mov
jge
clc
rcr
mov
xchg
pop
rcrb
cmpsb
sbb
fsubl
insl
xor
lret
mov
pop
mov
sbb
stc
and
es
xchg
sti
popf
icebp
xor
enter
clc
mov
mov
xor
push
daa
push
iret
stc
aaa
subl
sub
xchg
mov
or
dec
cld
mov
sub
arpl
sbb
jmp
fwait
mov
or
mov
rorb
leave
arpl
mov
rol
das
or
int3
inc
add
push
sub
lret
push
nop
roll
or
test
pop
arpl
and
dec
push
mov
or
pop
add
int3
movsb
stc
data16
and
push
stos
jo
ret
fbstp
pusha
sbb
cmpsl
scas
mov
pop
cld
pop
fs
fidivrl
cmp
mov
frstor
cmp
iret
and
arpl
or
insl
stc
sti
movsl
jns
dec
out
adc
sar
mov
mov
xor
pop
aaa
stc
popf
mov
sbb
sbb
mov
jecxz
popf
ljmp
jl
sub
repnz
and
shrl
xor
ljmp
nop
adc
mov
dec
jb
add
clc
dec
mov
stc
repz
enter
mov
stc
movsb
inc
out
jns
pop
or
push
fisubs
adc
jle
jae
mov
ja
lret
dec
dec
inc
outsl
add
mov
jae
mov
lock
lahf
sub
test
pop
loop
pop
hlt
lcall
test
mov
nop
shlb
mov
mov
scas
enter
jl
jecxz
and
dec
pop
or
fadds
and
imul
movsl
data16
cmc
and
xor
in
andb
gs
xor
lods
dec
arpl
mov
scas
imul
xchg
jg
xor
ret
xor
mov
pop
gs
xchg
xor
add
insb
adc
push
into
sub
add
daa
mov
in
lahf
fistpll
sub
addr16
xor
mov
jl
insb
es
das
mov
push
shl
into
add
aas
jge
aaa
mov
cmp
data16
scas
ds
cmpsl
xchg
xchg
xorb
sub
mov
or
inc
inc
adc
pop
les
jae
arpl
jp
in
cmp
mov
lret
movsb
inc
jg
mov
sub
andb
xchg
xchg
mov
mov
xchg
or
test
add
jmp
fsubrs
stc
fists
sub
jbe
scas
lods
js
stos
pop
test
jmp
xor
jp
pop
adc
push
mov
test
mov
mov
and
push
rorb
lods
in
dec
jp
jmp
mov
jp
cmpsb
mov
inc
jno
fldt
lea
in
rorb
es
sarl
lcall
sbb
mov
fmulp
inc
mov
in
out
jbe
mov
addl
or
and
cmpsl
scas
mov
lds
or
xchg
dec
or
xchg
idivb
je
or
mov
mov
mov
faddl
xor
mov
aam
sbb
inc
push
rclb
xor
add
add
dec
mov
scas
inc
repz
ljmp
dec
aam
stos
xor
xchg
in
mov
fwait
les
dec
mov
or
dec
sub
pop
loop
int3
or
pop
inc
gs
xchg
xchg
rol
jl
rclb
test
push
or
jo
aam
jb
mov
es
je
add
mov
xor
js
popw
pop
popa
dec
push
dec
cli
jns
cwtl
cmpsb
lea
sub
andl
mov
push
and
clc
das
pop
fnstcw
adc
mov
mull
rcr
loopne
int
subb
mov
dec
mov
mov
cmp
push
push
mov
movsb
xchg
push
mov
jmp
add
stos
ret
add
mul
mov
ljmp
sub
xor
hlt
xor
out
push
fsub
out
loope
add
sub
cmpsb
es
out
xchg
clc
jge
popf
ja
arpl
jae
loop
test
aaa
shrb
outsb
jmp
xor
out
mov
push
js
in
fildl
xor
pop
cs
das
push
in
mov
popf
push
and
cwtl
and
xor
clc
test
rorl
sub
test
and
dec
lcall
pop
sbb
jae
inc
int3
loop
loopne
inc
sbb
stc
dec
out
xchg
adcl
gs
arpl
jo
dec
leave
dec
inc
and
xchg
xchg
mov
sahf
leave
cmp
or
ja
cmpsl
mov
ljmp
inc
lock
pop
cltd
mov
pop
jl
shlb
and
out
xchg
push
ljmp
cmp
ja
xchg
cmp
fs
cmpsl
add
cmp
mov
pop
pop
jb
xor
icebp
stos
sbb
test
sub
or
ss
or
pop
nop
addr16
enter
adc
jl
dec
pop
adc
adc
cmpsl
addl
cmp
in
sub
xor
mov
push
xchg
xor
add
dec
fisttps
jne
repz
adc
mulps
daa
xor
jbe
jnp
fidivl
mov
or
addr16
sbb
xchg
jg
cmpsb
shrl
clc
stos
mov
enter
sbbl
jae
push
scas
loopne
dec
push
js
add
adc
dec
sub
mov
sub
pop
insb
aas
sbb
sti
mov
sahf
cld
and
xor
clc
jne
lock
dec
cmp
pop
xchg
fcomps
gs
outsb
dec
mov
fwait
pop
nop
mov
or
mov
mov
mov
out
data16
aam
lret
fs
mov
dec
dec
cld
cmp
push
iret
jmp
clc
sub
scas
roll
sub
jne
cmpsl
hlt
rcll
add
dec
std
out
movswl
cmp
jecxz
and
xor
push
idivb
jno
sbb
jbe
jae
xchg
push
arpl
loopne
cmp
cmp
aad
xchg
add
ljmp
aad
rcr
inc
call
sti
cli
dec
insl
xor
cmp
fsubs
out
mov
cld
cmp
push
and
pmuludq
jl
jmp
xlat
xchg
add
movsb
sahf
sbb
xchg
int
repnz
add
mov
push
ja
xchg
jg
es
and
cmp
ret
lret
jae
cltd
sahf
mov
adc
push
dec
std
pop
insb
repz
les
es
shll
lret
mov
mov
frstor
dec
mov
addl
push
decb
cmpsb
dec
ljmp
out
cli
loopne
scas
mov
and
enter
ret
aam
lcall
and
subl
repz
movsl
jle
mov
xchg
ja
hlt
cmp
into
data16
mov
adc
lock
aas
ret
cmp
outsl
jmp
xchg
loopne
lcall
mov
inc
outsl
pop
add
or
inc
std
leave
xor
or
rorb
jnp
mov
call
clc
sti
nop
push
push
add
add
std
fdivrl
lcall
ljmp
fwait
pop
testl
add
jno
xchg
stos
xchg
hlt
aas
and
je
jecxz
mov
stos
popa
lods
mov
cmp
outsb
movsb
dec
mov
inc
mov
xor
ficoms
or
mov
ja
mov
push
push
xchg
outsb
nop
and
push
in
lods
movsb
add
into
out
adc
push
adc
push
vphsubwd
into
into
mov
or
pop
sbb
and
fsubl
adc
xor
xchg
xchg
imul
xor
imul
fwait
clc
rcl
xor
into
jae
cltd
mov
call
sbb
loope
jge
inc
jmp
incb
push
jne
enter
sub
xchg
call
dec
iret
bound
test
popf
push
pop
and
sub
lret
mov
inc
rorl
cltd
in
mov
aam
es
push
mov
cmpsl
lea
or
mov
sub
rcl
xor
dec
xor
or
dec
int3
in
xor
push
cli
ss
lret
fldenv
xor
lret
adc
ret
das
sti
push
push
sbb
adc
je
sbb
or
iret
js
call
fwait
add
mov
mov
add
enter
sub
cmp
adc
fcmovne
add
adc
lcall
cmp
mov
cltd
dec
fbld
lahf
pop
sbb
not
push
in
sbb
loop
shrl
inc
in
cmp
ds
jecxz
fst
jo
inc
std
add
out
push
jb
pop
xor
sbb
and
inc
cmp
sub
repnz
notb
fucomp
mov
mov
mov
dec
enter
sub
call
in
add
xchg
scas
dec
dec
sarl
je
xchg
add
mov
add
cmp
mov
dec
int3
out
rclb
clc
out
sti
test
jl
ret
enter
xor
jge
lods
mov
dec
pop
mov
xor
push
cmpsl
or
jge
adc
icebp
xbegin
ds
out
pop
add
out
ja
lods
lret
lods
mov
dec
xchg
stc
jecxz
fidivrl
xcrypt-cbc
cmpsl
pop
dec
push
scas
addl
cmpsb
aas
mov
inc
fadds
add
add
sahf
pushf
jno
xchg
mov
cmp
pop
and
cmpsb
ret
subl
insl
push
xorb
repnz
xor
xchg
lcall
mov
es
xchg
sbb
mov
mov
dec
and
in
cmp
and
xchg
mov
aas
imul
test
mov
rcr
push
in
sbb
das
adc
lret
gs
repz
pop
rorb
sub
mov
pop
dec
test
inc
pop
mov
aad
xchg
adc
popa
pop
repz
pop
adc
fimull
cmp
inc
aam
int
mov
roll
add
and
aam
cmc
or
dec
adc
pop
out
cmp
ljmp
inc
sub
lock
arpl
insb
lret
lret
stos
mov
mov
and
mov
test
sahf
cmp
arpl
cs
mov
lea
mov
add
jmp
cs
test
push
sti
jmp
jge
jnp
inc
pop
outsb
adc
cmp
in
sti
loope
lret
cmp
xor
shrl
sbb
push
adcl
xchg
stos
js
fadd
dec
or
imul
xor
mov
jecxz
mov
sub
out
adc
out
shll
or
add
iret
push
dec
jns
fstpt
sahf
in
adc
out
test
add
negl
jg
mov
mov
in
cmp
mov
mov
out
jecxz
testb
ja
inc
enter
int3
and
sbb
jno
xchg
mov
mov
mov
ljmp
xor
ret
push
pop
loopne
pop
out
stos
out
pop
fwait
movsl
mov
sbb
rorl
dec
jmp
rolb
add
popf
xchg
cli
mov
ret
cmp
fsubs
and
cmc
xchg
jmp
testb
cmpsb
insl
push
dec
push
lds
push
xor
out
xor
pop
jmp
mov
or
add
stos
andl
out
mov
mov
adc
out
vpavgb
and
adc
sub
adc
ret
fidivrs
pop
or
jnp
lods
imul
fcmovb
adc
mov
and
ficoml
aad
jge
adc
dec
dec
jl
nop
daa
dec
pusha
into
scas
loope
xchg
lret
mov
pop
inc
popf
add
test
jo
stos
pop
sub
mov
sbb
addr16
pop
cwtl
inc
cltd
enter
mov
ljmp
push
ret
fdivs
leave
imul
out
arpl
jno
fcomps
icebp
xor
mov
subl
or
push
cld
sub
fidivs
jbe
mov
mov
push
aad
jnp
fwait
or
repz
lods
push
dec
jmp
ds
mov
push
pushf
lock
jno
cmp
mov
fprem1
dec
je
bound
pop
sub
jl
lret
or
push
jae
fsts
xlat
pop
imul
xor
pop
add
and
loope
test
sub
pop
faddl
jnp
or
lods
dec
or
ficoms
sub
or
xchg
loopne
cmp
dec
mov
js
movsb
push
jne
inc
jmp
popa
mov
outsb
sub
and
pop
stos
jns
pop
mov
int3
sub
pop
sti
sub
pop
loop
scas
push
or
cmp
mov
pop
inc
mov
nop
inc
mov
sbb
fisttps
jmp
push
dec
sbb
aaa
jno
mov
incb
bound
cld
in
test
test
gs
stos
rolb
rcrb
mov
ret
in
sbb
cs
inc
mov
inc
stos
mov
mov
and
inc
or
pop
ja
adc
sbbb
jne
aam
push
imul
lret
mov
or
xchg
dec
mov
mov
or
fimull
inc
push
js
sbb
lcall
jne
add
pop
fldenv
cltd
inc
dec
sub
add
xor
fisttps
mov
cs
in
mov
testl
xchg
mov
pop
xchg
xchg
test
test
je
add
lods
inc
inc
lret
daa
add
sbb
push
pop
lea
ja
mov
in
push
mov
lret
add
mov
xchg
daa
lcall
push
scas
and
inc
xchg
sahf
add
rcr
mov
sbb
pop
aas
cwtl
mov
xchg
addr16
cmp
cmpsb
sub
lds
mov
push
mov
xchg
and
xor
fs
ds
cmp
mov
ja
mov
push
fildl
js
dec
stos
lret
aad
test
xchg
cmp
jbe
mov
mov
dec
shlb
mov
cltd
jp
adc
movsb
loop
testl
inc
or
sub
and
stos
jge
xchg
clc
xchg
lock
ret
jge
sahf
cmp
ljmp
xchg
repz
mov
cmp
sub
xor
aaa
jmp
or
pop
xchg
sub
xchg
or
xlat
sub
pop
scas
cmp
cmp
push
loop
add
sarb
in
cmp
sti
js
mov
push
lret
fcomps
jbe
sbb
insl
pop
add
cmp
sbb
movsl
in
adc
fisubrs
and
out
or
daa
adc
imul
mov
daa
or
cmovp
pop
push
idiv
pop
push
push
gs
jle
jne
pushf
int
fcomi
jnp
clc
je
inc
jp
icebp
and
dec
push
into
gs
xor
push
aad
icebp
mov
cmpl
mov
sarl
xchg
pop
jmp
mov
ds
xchg
adc
push
loop,pn
cmpsb
hlt
into
sub
pop
lahf
sbb
movsl
dec
rcrl
and
sub
xchg
dec
add
aad
iret
paddd
daa
pusha
xchg
mov
pop
shll
pop
and
adc
andb
jl
je
cs
adc
aad
cmp
pop
pop
iret
sub
add
push
adc
mov
arpl
fcomp
and
inc
mov
test
fsubrl
push
mov
mov
cmp
or
xchg
sub
arpl
sti
ljmp
or
or
ds
bound
sahf
test
es
into
mov
and
sbb
loope
xor
pushf
popf
aaa
push
outsl
stc
rorb
mov
mov
jno
jbe
rol
pop
dec
rclb
mov
push
adc
pop
insb
xor
mov
push
jge
xchg
push
bound
sbb
in
pop
mov
inc
add
xchg
xlat
lret
pusha
xor
js
stos
and
mov
adc
insl
mov
jnp
pop
test
cmp
dec
imul
cmovno
out
popcnt
ja
add
xlat
sti
mov
scas
mov
nop
mov
gs
mov
in
add
aam
das
in
pop
inc
popa
xchg
inc
clc
lock
push
fxch
mov
repnz
fdivrs
shll
push
sar
inc
sbb
inc
cli
mov
mov
out
sbb
push
jg
fisubrs
inc
inc
sub
mov
jno
out
lods
mov
sbb
sarl
dec
shll
push
xchg
xlat
pushl
adc
fsubp
lods
stos
loope
loope
sbb
inc
lcall
adc
pushf
jae
lret
in
aam
por
xor
icebp
mul
outsl
xor
xchg
or
xchg
cmpsl
js
cmpsb
iret
lret
ljmp
sbb
push
jo
mov
adc
jae
adc
and
shl
mov
xchg
xlat
insb
insb
lods
arpl
iret
jg
sbb
mov
mov
into
push
add
cmp
std
lds
clc
xor
cmpsl
xchg
loop
int
sbb
push
negl
xchg
dec
aaa
das
jnp
das
cmpsl
xor
ret
out
push
cmp
fcmovnb
rclb
shll
dec
mov
push
mov
jle
loope
adc
cmpsb
sti
pop
clc
sub
call
imul
arpl
stos
repz
aaa
aam
or
jmp
nop
das
cs
mov
out
ja
and
inc
gs
xor
in
incb
mov
cli
add
fisttps
shlb
cmp
es
and
sbb
cli
cltd
or
fnsave
pop
sbb
test
mov
pop
cmpsb
loope
lea
repz
fimuls
mov
push
pushf
push
cmc
shlb
and
inc
fnstenv
test
leave
jecxz
add
or
push
jecxz
insl
stos
dec
dec
xor
push
and
xchg
ljmp
cmp
jg
and
sbb
imul
xor
cmpsb
fsub
nop
xchg
pop
ss
inc
movl
aas
cmp
aas
push
out
and
shlb
mov
sub
out
ret
and
lock
int
or
clc
daa
arpl
lcall
jns
dec
dec
repz
shld
mov
cltd
add
pop
dec
test
xchg
dec
sub
in
inc
sbb
outsb
sbb
push
mov
mov
btc
xchg
push
sbb
and
jg
inc
push
jl
cmpsl
dec
or
sub
push
xor
ja
mov
es
loopne
pop
pop
mov
fstl
pop
popf
popa
mov
pop
jns
push
out
pop
xor
push
cld
jnp
insb
mov
adc
push
mov
es
mov
repnz
dec
in
icebp
sbb
addl
test
add
imul
push
js
sbb
pop
add
addr16
and
mov
xor
push
sbb
ljmp
adc
stos
mov
call
and
adc
fistl
sahf
push
cltd
push
pop
dec
inc
fwait
mov
jmp
mov
jo
dec
push
je
dec
and
pop
push
ja
mov
ljmp
fnstsw
testl
adcb
jne
xor
ljmp
xor
sbb
dec
or
mov
sbbl
cli
sbb
mov
enter
dec
jnp
or
cmpsb
add
bswap
imul
test
mov
pop
sahf
dec
xchg
mov
fdivs
jl
push
out
sub
cmpsb
mov
xchg
outsb
aas
ds
test
push
cmp
arpl
cmp
sbb
mov
bnd
cmc
or
or
leave
adc
mov
pop
push
scas
aad
aad
outsl
cltd
je
out
mov
stc
sahf
inc
sub
pushf
push
pushf
pusha
and
fnstsw
int3
add
push
mov
js
mov
cmp
pusha
lock
push
jg
push
mov
clc
sub
lds
sub
lods
pop
ret
and
fdivr
hlt
mov
shlb
push
xchg
add
in
push
pop
adc
and
stos
lods
fcmove
jmp
rcrb
stos
lock
aaa
xor
mov
add
sub
mov
rclb
push
call
add
repnz
cmc
sub
add
popf
test
std
push
adc
pushf
mov
dec
lock
mov
pop
push
cmp
push
adc
lret
lods
ljmp
stos
ret
scas
negb
inc
cmpsb
test
xor
adc
je
lret
stos
and
cmp
cwtl
arpl
sub
std
xchg
mov
mov
lods
and
push
pop
and
movsl
sub
xor
or
push
cld
js
cmp
repz
add
pushw
push
mov
repnz
add
or
add
mov
sbb
fdivs
cs
and
popa
pandn
cwtl
mov
lock
inc
lret
or
lods
cmp
dec
inc
add
in
sbb
push
dec
xchg
xor
sub
jmp
std
xor
mov
fldt
or
fnsave
sahf
dec
mov
add
fildll
std
jge
sbb
sub
inc
lods
pushl
xchg
mov
sub
insb
std
mov
push
mov
cmpsb
jmp
leave
aas
decb
pushl
and
and
int3
push
cmp
inc
loope
aad
pop
pop
xchg
pop
daa
push
cmp
adc
pop
mov
aad
gs
ja
ds
pop
cmp
inc
cli
movsb
inc
cltd
mov
jg
in
xor
rcrb
jbe
cmc
aas
lret
mov
pop
cmp
divl
mov
lock
xor
xlat
mov
push
xor
xor
loopne
in
adc
popf
cltd
call
insb
in
lcall
push
pop
xchg
faddl
sbb
mov
and
mov
inc
xchg
pop
inc
stos
xchg
aaa
and
jg
lcall
pop
mov
mov
xor
inc
adc
sub
aaa
sbb
pop
mov
mov
popf
mov
cmp
aad
push
call
pop
xrelease
adc
sbb
pop
dec
loop
mov
mov
dec
xor
mov
lahf
insb
hlt
mov
add
cmp
add
mov
into
adcl
push
movsb
addr16
fwait
hlt
pop
in
pop
cltd
fisubl
pop
scas
in
adc
mov
jl
inc
pop
in
lds
test
inc
lea
hlt
je
aam
pop
fwait
mov
das
test
and
mov
pop
or
add
lahf
aaa
test
mov
cltd
lods
jne
xor
lds
fistl
push
push
movsl
repz
push
in
and
mov
mov
loope
mov
add
pop
js
loopne
inc
jo,pn
scas
sub
outsb
fnstenv
in
jl
add
add
xor
mov
enter
mov
xchg
mov
in
jo
sahf
xorl
inc
mov
mov
scas
and
fwait
orb
mov
nop
test
test
lock
sub
ret
jne
out
pusha
out
pop
sbb
xor
cmp
sub
fs
xchg
add
mov
out
in
into
pop
mov
in
sarl
imull
ja
addl
lret
sub
out
jno
loopne
mov
push
fstl
cmp
stos
sbb
xchg
pusha
pop
test
cmp
mov
scas
dec
pop
jno
das
add
gs
aaa
ljmp
mov
and
mov
push
and
pop
insb
pop
pop
mov
stos
mov
sbb
outsl
pop
dec
pushf
jo
enter
cmp
testb
pop
test
lret
shll
dec
repz
push
sbb
out
push
xor
out
in
insl
stc
mov
imul
pop
daa
mulb
pop
testb
jp
push
lahf
clc
push
inc
or
sahf
sub
data16
ljmp
xchg
adc
clc
sub
push
jnp
adc
jl
test
inc
xchg
sub
test
jns
inc
mov
insl
out
js
mov
es
mov
push
hlt
mov
mov
and
and
xlat
jne
inc
xlat
or
mov
add
sbb
fadd
xor
lret
dec
aaa
leave
inc
iret
xchg
push
call
mov
mov
sbbb
daa
test
enter
iret
xlat
pop
stos
inc
in
xlat
pop
fisubs
adc
mov
mov
add
hlt
pop
mov
mov
lcall
dec
rorl
sub
loopne
mov
xchg
add
jne
lds
test
fnsave
push
pop
movsl
or
or
fdivrs
push
xchg
sbb
jo
test
push
arpl
sbb
insb
cmc
imul
xorl
xor
mov
inc
adc
xchg
mov
fwait
jns
xchg
xchg
iret
sti
addr16
dec
xchg
flds
repnz
or
icebp
out
call
imul
mulb
not
xchg
sahf
fsts
stos
mov
pop
xchg
in
not
jbe
aas
stc
scas
ds
sbb
dec
mov
mov
sahf
sub
rcl
mov
int3
shl
call
fwait
outsl
in
jbe
push
in
rolb
push
xor
or
lods
push
ljmpw
push
negl
push
add
mov
insl
in
inc
loop
inc
imul
inc
cli
pop
mov
aas
cmp
jecxz
pop
mov
dec
xor
out
lods
cmp
jl
aas
inc
add
scas
ljmp
push
mov
add
inc
in
cmp
jnp
xchg
stc
xchg
lret
pop
outsb
gs
push
mov
jge
xchg
lea
inc
daa
or
clc
js
jne
xlat
mov
add
push
dec
out
pop
push
cmc
mov
or
or
sti
push
test
cmp
hlt
mov
adc
addl
jo
sti
out
sub
in
lock
lret
int
lcall
nop
add
jmp
ljmp
dec
repz
jmp
loop
push
je
cmp
adc
lcall
jnp
ds
xor
clc
scas
neg
mov
sbb
lret
or
adc
add
fsubrl
ss
in
retw
cmp
and
rcrl
test
js
repz
xchg
jo
lcall
sti
out
mov
push
jne
lods
jge
sub
ss
fcomps
into
test
outsl
inc
pop
inc
int
add
lret
stc
mov
incl
inc
sub
sbb
sbbb
mov
jmp
flds
and
sub
pop
xchg
mov
divl
bound
sahf
test
mov
addr16
out
dec
jg
enter
adc
jl
jns
push
inc
xor
xchg
loope
push
add
imul
mov
test
in
jne
mov
enter
shlb
adc
sub
arpl
fcomip
loopne
stos
int3
mov
add
mov
mov
mov
xchg
sub
adc
jb
arpl
cli
sub
push
sbb
xor
inc
aaa
sbb
subb
cld
push
hlt
jns
xor
call
pop
lret
jmp
add
inc
repz
insl
les
insb
loopne
repnz
fdivrs
jl
insl
sub
push
fs
fdivr
lds
movb
mov
jb
inc
mov
popa
pop
divl
pop
out
clc
xchg
shll
lds
xchg
rorl
push
sbb
xchg
jno
xchg
push
mov
out
mov
ljmp
mov
jbe
pop
outsb
movsl
inc
loope
add
out
bound
jbe
push
in
cmp
iret
mov
pop
mov
or
mov
rep
push
mov
subb
nop
lods
dec
ljmp
jo
inc
in
test
out
xlat
out
scas
pop
data16
push
shlb
cltd
iret
ljmp
cwtl
jecxz
shll
push
push
popf
mov
cli
fwait
ret
scas
cmp
and
mov
aad
out
xchg
lods
outsb
dec
int
xchg
add
xchg
enter
test
mov
addl
adc
jne
adc
and
imul
add
repz
jp
push
sahf
sqrtps
xor
pop
orl
lret
xchg
dec
data16
or
rorb
sbb
dec
push
pop
pop
adc
cltd
push
hlt
jae
scas
jns
aad
std
mov
cmpsb
arpl
sub
push
push
mov
adc
pop
jno
xchg
cmp
sbbb
pop
and
cltd
addr16
mov
fwait
and
xlat
test
cld
push
lret
xor
cs
stos
mov
mov
gs
shlb
fwait
repz
sti
jp
push
loop
cmp
int3
je
sub
ljmp
xchg
es
and
jge
imul
push
icebp
adc
add
adcb
xor
movsl
jae
xchg
pop
shrb
mov
shll
fmuls
cmp
adc
pushf
dec
scas
loop
add
ja
test
rorl
adc
outsb
jmp
xlat
icebp
jne
push
int
add
hlt
fisttpll
ficomps
jno
jb
dec
xchg
adc
push
mov
loop
outsl
movsb
push
negb
pop
sbb
movsb
mov
cmp
xchg
int
push
outsl
xchg
push
jno
dec
xlat
sub
mov
sub
out
pop
adc
movb
or
jg
ret
aad
mov
lahf
xor
add
pop
lea
loop
inc
mov
sti
jge
inc
adcl
bound
addl
mov
add
mov
jg
aad
inc
inc
imul
jecxz
pop
add
mov
xchg
call
add
xchg
mul
lds
cli
mov
xor
mov
call
xor
sbb
lret
rcrb
aas
imul
mov
lock
test
cmp
sarb
push
add
mov
xor
rcl
pop
sti
or
mov
inc
mov
inc
scas
xor
sti
stc
insl
mov
imul
lea
into
or
inc
adc
push
mov
in
lods
add
xorb
or
dec
ds
cmp
dec
xchg
mov
cmp
adc
pushf
inc
xor
loope
mov
pushf
adc
jno
sbb
lods
fmuls
in
imul
enter
adc
inc
jbe
adc
jo
in
repz
dec
outsl
hlt
inc
xchg
inc
ret
rcrl
add
scas
fadd
rolb
test
sahf
adc
mov
jnp
push
out
push
adc
dec
lcall
and
push
call
outsl
iret
jne
clc
pop
mov
xor
jg
int
lea
push
and
xchg
dec
ret
pop
xchg
mov
rorb
mov
inc
mov
xor
dec
sub
mov
xchg
leave
or
cmp
cmpsb
xor
mov
mov
push
adc
sbb
push
scas
sbb
rcr
dec
fildll
xor
cmp
or
in
inc
push
decl
imul
out
sub
out
aas
ja
xchg
sub
and
pop
in
mov
push
jnp
fs
push
xor
cltd
sbb
mov
popf
xor
push
adc
inc
jl
out
add
ret
in
aam
pop
fisubrl
add
inc
inc
xlat
js
dec
dec
or
fnstenv
pop
arpl
pop
faddl
jmp
fsubrl
inc
sbb
outsl
iret
es
jmp
inc
push
sub
mov
hlt
cltd
shlb
pusha
daa
enter
in
jl
jmp
movsl
dec
ds
mov
mov
xchg
pop
or
pop
xor
imul
hlt
test
mov
jno
cmc
lret
ret
fcoml
jnp,pt
cltd
and
popa
fwait
and
sub
popf
aaa
mov
push
and
xor
dec
iret
test
ss
clc
dec
xor
sbb
loop
sub
push
aas
js
out
xchg
scas
mov
bound
stos
mov
mov
mov
add
cli
xchg
in
or
xchg
mov
sbb
in
add
jnp
sti
lret
add
inc
movsl
lods
dec
inc
and
cli
fisttps
jb
popf
mov
gs
mov
and
mov
addl
push
mov
mov
frstor
aad
push
mov
xchg
cld
cmp
add
lahf
push
icebp
cwtl
scas
push
adc
cli
ret
andb
fdivl
mov
icebp
cmp
pop
jp
stc
pop
xor
or
test
loopne
test
add
cmovnp
inc
pop
inc
push
int3
mov
popa
add
push
clc
cmp
mov
movsl
ljmp
outsl
pop
scas
hlt
pop
ja
decl
ret
pop
int3
je
lahf
sub
inc
inc
cwtl
fucomi
dec
cli
jmp
dec
sub
rorb
loop
ret
insb
sbb
loope
mov
lret
sub
pop
push
jge
idivb
adc
mov
add
out
mov
pop
call
dec
mov
dec
notl
pop
fndisi(8087
idivb
add
in
dec
pop
sbb
cmp
es
mov
xchg
cwtl
or
mov
cs
or
pop
inc
int
pop
fisubs
push
andb
inc
sbb
rclb
xor
cltd
dec
gs
pop
and
iret
jg
or
jl
dec
nop
stc
xchg
cmp
les
mov
arpl
or
adc
xor
push
dec
pop
fxch
loope
xor
and
into
mov
cmp
jo
loopne
mov
loope
jo
xor
xlat
adc
notl
pop
add
push
and
lret
cmp
aad
loopne
mov
inc
jae
daa
xchg
repnz
dec
rcrl
jns
out
push
fsubp
sub
fidivrl
scas
leave
imul
pop
fistpl
xchg
mov
sub
add
add
inc
mov
movsl
shrb
pop
jne
das
pop
adc
bound
add
dec
jmp
cmp
jne
int
jae
ljmp
inc
cwtl
xor
add
mov
jne
mov
insl
aas
icebp
lret
mov
lods
lock
xlat
pop
test
mov
roll
jge
mov
hlt
mov
clc
jle
imul
cwtl
mov
xchg
push
test
dec
std
mov
ss
cltd
cs
lea
xlat
jb
jno
push
mov
out
data16
and
inc
push
push
pop
lea
dec
inc
cmp
or
mov
or
jbe
dec
push
pop
repnz
jne
int3
repz
mov
jo
pop
jo
jbe
lcall
scas
xor
pop
and
shll
addl
pop
xchg
ret
mov
mov
mov
pop
jo
mov
sub
jne
movsl
sar
xlat
push
fstpt
cmpsb
jnp
bound
sti
fstl
pop
jmp
iret
stos
call
cmpb
sub
jno
dec
push
lods
stos
sub
jns
fdivl
jns
in
loop
mov
mov
or
loope
or
cld
dec
lock
jb
stos
sbb
pop
fbstp
aam
push
xchg
add
sahf
adc
arpl
rcl
cmpsl
rep
gs
jg
pop
and
mov
inc
mov
bound
pop
pop
cmc
in
dec
cld
shlb
sbb
add
jne
adc
mov
sti
adc
push
xorb
mov
sbb
cmp
lret
adc
xchg
jmp
sub
cmp
push
mov
call
cmp
pop
mov
xchg
and
mov
mov
psubw
mov
or
mov
inc
cld
addr16
xchg
fs
popf
adc
leave
and
addr16
stc
aas
les
push
inc
movsb
cmp
lahf
sub
imul
pop
aam
cmp
in
cmp
hlt
fucom
and
pop
sub
mov
imul
in
es
push
pop
icebp
xor
shll
testl
pushl
dec
push
inc
into
ss
pop
jle
xchg
sub
shll
jl
lods
xor
mov
mov
mov
mov
fildll
repz
jmp
lahf
in
and
and
cli
mov
mov
and
aas
shll
cli
fcmovb
scas
idiv
dec
test
fcmovnbe
xchg
fildll
stos
pop
cmpl
mov
dec
fimuls
xor
call
ja
ret
in
fyl2xp1
jmp
xchg
or
jecxz
push
and
aad
fsubrs
or
mov
dec
clc
icebp
sbb
out
cmp
ret
leave
in
pop
jmp
arpl
lcall
adc
xchg
inc
pop
pop
xchg
sub
ret
or
ja,pn
sbb
insb
cs
add
aas
mov
mov
fcmovnu
stc
cltd
in
test
aam
test
fdivs
cltd
add
int3
mov
or
sbb
pop
cmp
fs
pop
fcoml
pusha
shl
insb
popf
adc
jns
mov
mov
inc
mov
pop
movsb
adc
or
push
incb
ds
call
push
stos
inc
cld
sarl
rorb
jae
lcall
aam
cld
xor
adc
insl
ljmp
push
adc
xchg
add
stos
xor
roll
and
in
lcall
fdivr
rorl
or
add
ljmp
or
inc
add
xchg
das
repz
push
ret
xchg
xchg
sbb
das
cmpsl
mov
gs
scas
push
in
dec
adc
cmpsb
stos
mov
pop
test
add
cli
leave
arpl
fstl
jb
int3
sbbl
add
pop
cmc
push
adc
pop
mov
jl
or
sub
cli
dec
xor
sbb
cmp
ss
push
ret
push
xchg
sub
mov
icebp
divl
test
dec
jg
imul
lcall
inc
cltd
and
mov
cli
push
sbb
nop
mov
movsb
mov
roll
xor
dec
pop
xlat
dec
mov
cmc
dec
push
dec
sti
push
int
pop
push
and
xor
cmp
dec
mov
mov
xchg
dec
js
mov
xlat
sub
push
fidivs
push
call
fwait
xchg
ffreep
cmp
fbld
sub
push
xchg
inc
das
cmpsb
js
cmp
sbb
mov
xchg
add
cmpsb
dec
push
push
mov
jp
pop
dec
out
cmp
pop
fwait
sub
stc
ret
in
dec
adc
push
clc
aas
lret
shl
imul
adc
dec
les
or
cmp
scas
dec
add
push
xchg
inc
and
jecxz
movsl
jnp
icebp
or
stc
je
dec
push
jg
and
pusha
push
sub
pushf
pushf
xor
decb
fcomp
iret
test
dec
dec
sub
mov
lret
lock
lret
xor
sahf
pop
stos
in
insb
pop
jne
popa
adc
mov
scas
test
fwait
mov
xorb
or
data16
xor
jge
movsb
jle
das
scas
xchg
fwait
inc
dec
not
loop
mov
insl
jecxz
adcl
sub
pop
cmp
jp
nop
in
push
push
adc
imul
pop
xchg
fisubs
ljmp
and
subb
addr16
shlb
adc
push
or
scas
sub
out
ss
in
movsl
call
dec
mov
pop
cmp
imul
add
lahf
test
fwait
rol
sub
scas
mov
lret
scas
mov
mov
mov
and
je
paddusw
loop
xchg
adc
pop
sahf
jle
subl
jl
cmp
sub
bound
lds
sarl
outsl
mov
dec
leave
lods
jns
stos
js
or
into
push
lods
xor
push
sub
into
add
push
jae
stc
in
sbb
insb
mov
test
js
add
mov
and
sbb
inc
cmpsl
inc
mov
scas
add
pop
loop
out
aas
fsubrs
mov
jno
loope
pop
lock
lahf
hlt
sub
mov
pop
stos
mov
imul
push
loop
cs
mov
jne
push
stc
sbb
xchg
test
add
cmp
test
aaa
test
dec
sbb
cmp
xchg
mov
mov
call
dec
lcall
or
adc
cmp
stc
mov
xchg
inc
pop
xchg
push
and
aam
mov
push
mull
jl
add
add
or
mov
insl
mov
aaa
sub
out
loopne
loop
repnz
sub
xchg
imul
dec
and
mov
cmpb
pop
imul
out
cmp
les
cmp
test
add
jne
aam
ret
ja
or
sbb
sub
or
movsl
add
orb
lea
cmp
adc
adc
sbb
sbbl
insl
das
enterw
cmpsl
inc
aad
push
jg
jns
je
and
sbb
xchg
jbe
outsb
lcall
xor
pusha
or
xchg
subl
pop
dec
repz
std
push
icebp
push
hlt
loope
cs
mov
mov
sbb
testb
and
dec
pop
mov
sbb
bound
push
mov
xchg
daa
inc
insb
pop
xchg
adc
push
jo
xlat
sbb
sub
push
pop
out
add
lret
inc
cmp
mov
sti
ss
popf
add
sbb
inc
fimuls
sti
push
sbb
jecxz
pop
in
sbb
inc
inc
sbb
in
pusha
dec
jbe
pop
xchg
cmpsb
cs
sub
rcrb
sbb
xchg
xchg
test
adc
cmovbe
in
xchg
in
fcomps
pop
cmp
out
inc
or
cmovb
out
je
xorl
lea
mov
xchg
pop
cs
jmp
push
ret
jae
pop
pushf
xchg
and
imull
shrb
cmpsb
jae
xchg
mov
pop
test
psubw
pop
mov
aas
or
shrb
not
repz
movsl
mov
mov
aaa
and
sub
fbld
push
repnz
pop
js
jge
mov
mov
inc
inc
jo
sbb
dec
test
inc
fldl
fdivr
pop
inc
cmp
aam
sarb
cmp
ret
sbb
ret
mov
rorb
push
loopne
cmpsl
addr16
jnp
mov
push
jmp
movsb
ret
mov
mov
jg
mov
inc
jns
xchg
mov
leave
or
sbb
loope
mov
lods
clc
ret
fdivs
jmp
adc
pusha
jmp
sarl
mov
xchg
lds
add
xor
mov
pop
adc
jg,pn
xchg
in
enter
inc
stos
mov
lods
les
arpl
test
scas
hlt
and
xchg
jge
xor
insl
add
xor
scas
and
add
add
pushf
dec
cmp
int
ss
cli
dec
mov
adc
mov
cmp
sbb
les
fisubs
repnz
cmp
aas
sbb
popf
add
jecxz
or
pop
mov
push
js
rcll
xchg
cltd
into
sbb
fwait
dec
daa
out
xor
scas
into
nop
push
or
mov
stos
add
mov
push
sbb
mov
mov
pop
sti
xchg
mov
xchg
ret
mov
mov
mov
xchg
ja
int
push
push
push
cmp
mov
xor
std
push
and
xchg
scas
adc
ret
cmpsb
pop
lea
pusha
ficomps
popa
inc
xchg
jns
xor
and
push
mov
je
sbb
ja,pt
jmp
gs
dec
push
or
jg
xor
and
jl
mov
ss
push
aaa
lea
xor
popa
cli
shll
mov
push
ljmp
or
mov
sysenter
stc
mov
cmpsb
outsb
inc
mov
and
push
mov
ja
jb
and
jecxz
jo
xchg
fwait
enter
icebp
repz
xchg
js
inc
or
inc
iret
testl
jbe
insl
or
pop
xor
leave
sub
cmc
xor
adc
push
dec
xchg
pop
and
adc
enter
pushf
jecxz
loope
pop
mov
loop
sub
dec
sbb
out
and
cli
pop
sub
lds
push
jne
icebp
mov
add
and
mov
push
sub
sub
adc
or
test
loop
pop
movsb
iret
lock
adc
sub
sub
fs
or
lahf
mov
inc
sarb
aaa
fwait
imul
ljmp
xchg
cmp
xor
rcrl
cli
xchg
fisttps
lahf
sahf
jp
jge
leave
pop
lret
pop
inc
mov
cmc
xor
jnp
adc
mov
movsb
push
arpl
push
jbe
jl
ss
cmpsb
stos
dec
xchg
or
mov
jl
mov
lahf
int
ja
movsb
pop
imulb
adc
arpl
in
imul
dec
enter
pop
push
sbb
scas
lock
in
nop
repnz
idivl
sti
cmc
popf
push
out
push
jae
icebp
dec
loop
mov
lret
jno
shrb
jno
jl
mov
mov
stos
int3
cwtl
ficomps
gs
cli
push
sarl
pop
and
inc
xchg
pop
jb
std
out
cwtl
push
mov
negb
dec
psraw
jecxz
lret
mov
ds
pop
int
in
xor
pop
add
xor
mov
adc
pop
dec
inc
mov
jnp
stc
cmp
inc
dec
ja
and
jo
lods
jb
insb
xchg
pop
xor
mov
lahf
cltd
fnsave
fsubs
cli
mov
mov
mov
in
dec
out
mov
jle
icebp
fdivs
ret
push
pop
jg
add
jb
mov
scas
cmp
in
xchg
je
adc
add
sarl
dec
cmp
jp
and
cmpsl
cld
pcmpeqd
fstl
repnz
mov
fimull
jne
cmpsl
pop
cli
dec
push
jnp
adc
or
stc
loope
leave
out
aad
jg
scas
ja
orl
mov
pop
stc
mov
testl
jmp
loope
mov
pop
and
ret
push
sbb
psubsw
or
sbb
fildll
fldcw
int
stc
pop
dec
sbb
fisubrl
mov
sbb
push
xchg
inc
inc
xorl
lea
dec
and
sub
push
mov
cmp
jge
call
xchg
sahf
pushf
and
pop
cmpsb
jecxz
jecxz
and
dec
idivl
jns
cmpsb
call
cs
out
jl
ret
popa
mov
push
imul
aaa
jge
inc
addr16
cmp
out
push
shll
sbb
rcrb
in
xchg
mov
cld
and
cmc
inc
in
cltd
test
movsb
cld
lahf
dec
mov
dec
mov
inc
or
stos
sub
out
xchg
jne
xchg
pop
or
gs
mov
xchg
iret
xorl
cmc
or
stos
adc
sbb
adc
inc
xchg
pop
add
xchg
aaa
imul
cmp
pusha
out
repnz
adc
or
dec
mov
jb
lret
xor
out
stos
scas
popa
arpl
inc
mov
popf
sbb
daa
lods
jecxz
or
or
cld
add
lahf
shlb
lret
mov
lods
adc
sahf
sbb
dec
fdivs
pop
jae
sbbl
sbb
data16
fs
aaa
dec
sub
ficompl
jnp
inc
clc
orl
jnp
mov
sbb
mov
cmpsl
push
insl
dec
mov
loop
lock
inc
rcll
mov
pop
push
pusha
inc
mov
gs
and
lret
add
cmp
push
popl
mov
in
and
loop
jo
pop
out
into
outsl
sbb
inc
xchg
jmp
mov
bswap
lds
adc
mov
mov
mov
das
inc
mov
mov
or
aas
cmp
not
in
jl
out
icebp
push
push
cmp
mov
mov
and
out
push
mov
adc
xchg
mov
cs
adc
cld
call
mov
sbb
or
fisubrl
pop
mov
mov
cmp
add
pop
sbb
outsb
leave
jecxz
pop
es
es
div
out
mov
and
ja
add
outsl
push
pop
xchg
cli
dec
scas
sbb
aad
leave
push
inc
dec
cmp
sbb
sbb
and
sub
data16
and
mov
or
sub
mov
and
inc
stos
xchg
push
jo
jnp
icebp
in
in
xchg
stos
pop
fs
es
loop
jbe
daa
xchg
sub
nop
in
lods
add
js
inc
cli
jl
cmp
fiadds
js
or
cmp
icebp
fsubs
cmp
push
fcoml
lods
sub
out
icebp
or
mov
pop
ja
subl
dec
aam
mov
xor
shll
shlb
dec
cli
stc
sbb
jmp
lret
inc
xchg
insb
push
out
or
mov
sub
and
es
ret
pop
dec
or
sbb
lods
icebp
sbb
xchg
insb
dec
add
xor
push
push
jmp
out
mov
mulb
sti
aam
pop
jo
scas
mov
dec
scas
test
mov
push
das
enter
xor
xchg
mov
fsubrs
test
mov
pop
lahf
sbb
pop
inc
pop
inc
cmpsb
mov
push
inc
loop
inc
mov
push
repnz
or
or
pusha
pop
loopne
shlb
add
xchg
inc
mov
add
push
xor
sub
pushf
lock
lret
xlat
add
xlat
incb
les
adc
push
push
mov
shl
stos
xor
sti
ss
loop
jbe,pn
inc
icebp
and
gs
iret
sub
test
gs
xor
stos
arpl
and
in
sbb
rcr
push
jl
nop
xchg
shr
js
adc
jp
pop
into
sahf
inc
and
mov
add
mov
xor
push
aaa
xchg
jne
insl
or
rep
mov
adc
les
mov
loop
pop
nop
sub
mov
jl
cld
lret
mov
js
xor
pop
stos
loop
add
cmp
test
in
and
popa
xchg
jle
and
test
add
lock
push
int3
sub
or
xor
leave
push
sub
jns
inc
pop
and
mov
fmull
sub
ret
insl
out
cld
ja
xor
je
dec
loope
xchg
add
addb
push
jo
cli
bound
scas
lock
or
pop
sub
cwtl
inc
test
mov
pop
jle
outsl
jmp
lret
aas
imul
in
lret
mov
xor
mov
pop
clc
sub
xchg
dec
sbb
testb
shl
lds
test
decl
es
jae
jmp
xchg
xorl
and
pop
movsb
or
cmp
andb
xchg
dec
inc
push
mov
xchg
mov
push
pop
cmc
mov
ss
cld
xchg
or
pop
and
jnp
sub
pop
push
icebp
loope
or
push
push
mov
pusha
sub
fldl
pop
push
mov
inc
fimuls
sti
xor
sub
pop
cmp
push
push
pop
add
inc
fisubrl
out
push
add
sahf
in
int
xchg
xor
xlat
push
lcall
inc
lret
push
dec
jb
cmpsl
sub
add
mov
stos
or
aas
jp
jns
imul
pop
lea
clc
mov
push
pop
ss
mov
cmp
inc
xchg
jae
mov
push
test
imul
jecxz
mov
and
push
ret
outsb
sbb
subl
orl
fs
mov
shl
xchg
test
jns
pop
mov
push
inc
mov
divb
popa
in
addb
das
jb
sbb
outsb
out
dec
push
mov
shlb
lods
negl
mov
inc
adc
call
and
ffreep
jae
mov
jg
xor
shlb
std
xor
fld
adc
bound
jge
inc
clc
pop
lds
xchg
mull
sbb
jge
dec
addr16
test
and
shll
in
clc
jle
or
cltd
jle
xchg
add
add
iret
xor
arpl
stos
mov
inc
arpl
and
xchg
and
loope
and
sbbb
fs
jge
int
pop
rol
insb
pop
xchg
adc
add
pop
xor
pop
fisubl
jmp
fnsave
xchg
push
int3
popf
jl
dec
mov
andb
fmulp
or
mov
jns
lret
or
sbb
push
mov
movsb
mov
sub
fcmovnb
loop
into
inc
mov
stos
andb
ds
pusha
fnstcw
ja
aaa
xchg
pop
pop
inc
out
push
test
aaa
adc
jae
inc
mov
test
inc
and
add
pop
cmpsb
frstor
gs
jmp
aam
popa
xchg
mov
lcall
shrb
and
test
jnp
mov
ret
mov
aam
pop
lock
sbb
add
push
add
fidivrl
adc
lock
das
test
jle
dec
cmp
and
sub
xor
lret
push
or
ljmp
cmpb
xchg
cmp
fxch
jo
push
sbb
cmp
loopne
or
insb
dec
cmc
jmp
mov
push
mov
sbb
sarl
scas
mov
mov
iret
jge
jecxz
and
and
sbb
ss
cmpsl
pushf
popf
fcomps
dec
pop
push
jmp
xor
push
and
xor
or
lahf
xchg
dec
adc
push
xor
add
das
pop
sbb
cmp
fdivrl
xchg
and
testl
ljmp
daa
and
cld
push
jp,pn
ljmp
gs
mov
and
push
ror
lods
test
test
sbb
into
dec
and
xchg
mov
cmp
imul
out
adc
jle
add
fldenv
lock
mov
push
fs
mov
xlat
fidivl
mov
aas
dec
inc
mov
add
call
aad
out
add
xor
sbb
sub
enter
sub
and
push
pop
ljmp
dec
pop
adc
lret
cmp
fucomp
cmp
or
sub
les
stos
test
xchg
or
rorl
lods
pusha
gs
dec
push
outsb
aas
ret
pop
inc
add
push
push
cmpsb
popa
sub
add
mov
cs
adc
or
pop
sahf
lods
mov
adc
jns
cwtl
push
jo
aaa
inc
leave
mov
mov
sub
cmpsb
aas
imul
addr16
movsb
adc
sti
jae
fistl
jg
xor
dec
jns
fnstsw
pop
popa
mov
cmpl
int
push
mov
bound
aam
or
adc
gs
enter
xchg
adc
pop
mov
or
dec
dec
sti
movsb
mov
jns
jmp
cs
add
pop
arpl
or
push
add
push
gs
fcompl
gs
fldenv
js
pop
xchg
sahf
mov
mov
or
bound
orb
pop
fadd
xchg
es
sub
xchg
inc
push
out
add
xor
shlb
dec
out
test
inc
mov
ds
sub
or
mov
or
lock
leave
adc
sbb
aam
out
sub
cwtl
mov
lcall
loopne
inc
ror
mov
dec
and
test
cmpsb
add
in
jns
loope
jge
sbb
outsb
ljmp
pop
std
pushf
xchg
push
or
int3
outsl
test
sahf
mov
dec
out
cmp
loope
pop
sub
cli
bound
movsl
and
jb
jle
pop
inc
or
rcrl
loope
inc
push
and
or
cmp
cmp
insl
lock
jl
in
ds
or
mov
jno
mov
sbb
lcall
std
into
push
sub
jb
mov
outsl
jmp
bound
sub
fdivl
push
pop
mov
cmp
mov
inc
repnz
pop
leave
frstor
mov
add
nop
scas
push
test
or
daa
pop
mov
loope
mov
xchg
push
gs
inc
stos
psubd
fs
inc
jns
jns
mov
imul
rcrb
pusha
je
jns
inc
lcall
and
ror
push
outsb
aas
jmp
mov
ljmp
mov
xchg
adc
maxps
jnp
mov
clc
out
fsubl
out
fdivl
fbstp
pop
push
mov
adc
push
or
jl
cmpb
cmpsb
mov
jle
ljmp
or
mov
jp,pn
mov
les
xchg
mov
mov
ret
pop
out
cli
rcrb
and
ret
inc
xchg
or
ljmp
adc
mov
jle
pushf
fimuls
scas
xchg
pop
xor
push
sbb
enter
ljmp
scas
ss
test
pop
orl
jo
lcall
mov
arpl
push
loope
or
pop
push
lds
ret
or
cmpsb
js
sub
jmp
jp
adc
in
enter
pop
xor
mov
mov
mov
cs
and
adc
jne
push
insb
mov
dec
cltd
rcl
mov
jle
jbe
pop
call
jmp
mov
test
or
in
xor
dec
dec
test
mov
xor
addl
xchg
arpl
or
add
in
and
test
or
in
rcrb
xchg
pop
dec
pop
icebp
stos
subb
rorl
pop
roll
ret
in
xlat
mov
or
pusha
dec
sub
int
cmpsb
sub
int
icebp
or
jl
or
lods
sub
inc
ss
sbb
jl
and
arpl
mov
in
ror
mov
push
jnp
inc
dec
stos
mov
push
aaa
dec
adc
addb
mov
nop
push
inc
pop
dec
rcrl
add
daa
je
jmp
lea
cmpsl
add
aad
xchg
roll
out
in
imul
or
mov
xor
test
pop
or
ret
inc
xlat
sbb
cmp
jecxz
xor
pop
jbe
cmp
lret
inc
xchg
in
and
mov
std
in
out
adc
pusha
lret
pop
cmp
mov
dec
lcall
lds
sub
rcrl
mov
and
push
inc
int3
sub
mov
jp
lret
rorl
cmp
or
and
cld
cmp
in
xchg
pop
inc
popf
ss
sub
xor
jmp
jecxz
aas
ficompl
lods
sub
add
push
push
pop
xor
ljmp
and
xchg
js,pt
ja
aaa
mov
inc
popf
cmc
movsb
imul
test
dec
scas
adc
pop
sbb
jo
pop
cmpsl
cmp
jmp
cmp
inc
pusha
pop
fcom
push
push
mov
loope
dec
pop
clc
pop
inc
push
ljmp
enter
fwait
adc
xchg
call
js
shll
int
push
cmpsl
xlat
decb
movsb
mov
or
scas
and
ds
cmp
fucomp
mov
xchg
push
cmp
push
outsl
les
xchg
sub
cmp
jmp
add
in
xor
push
aad
mov
mov
fcmovb
mov
xlat
rolb
fisubrl
mov
mov
leave
sbb
push
mov
js
jl
jb
sub
mov
inc
sbb
dec
imul
sbb
and
mov
xor
out
arpl
and
and
or
stos
pushf
mov
in
push
inc
jge
mov
inc
cmpsl
xor
lds
loop
jmp
scas
in
xor
mov
and
xchg
sarb
iret
ja
and
xchg
lock
and
push
adc
movsl
std
mov
mov
add
popf
mulb
pushf
popa
pop
dec
xchg
stos
movsb
xorb
xchg
add
pusha
cmpsl
outsb
fsubrs
in
iret
push
adc
push
jp
sbb
dec
mov
in
add
jp
ret
lock
shrb
mov
imul
sbb
mov
jp
add
fstl
test
scas
adc
in
les
mov
mov
jp
sbb
lcall
xlat
push
or
insl
jmp
pop
jp
testl
dec
inc
jns
sbbl
outsl
pop
pop
dec
imul
or
aad
inc
mov
sbb
lods
pop
leave
shr
mov
mov
fwait
inc
dec
jae
roll
inc
pop
inc
or
stos
imul
lock
fs
imul
sbb
or
cmpsb
mov
insl
mov
mov
xor
adc
roll
lcall
ss
std
mov
jge
xor
int3
sub
inc
mov
sub
mov
not
into
xor
mov
mov
dec
popf
or
test
xor
insb
mov
shl
and
and
sub
sbb
sti
daa
aaa
adc
andl
outsl
pushf
mov
sbb
call
cwtl
pusha
jb
mov
jge
scas
lahf
lahf
sbb
repnz
rol
mov
adc
xor
adc
adc
push
xor
scas
fisubl
sbb
out
cld
add
repz
pusha
std
jne
lods
fadds
or
test
inc
shll
je
adc
ss
xor
loope
cmp
dec
scas
fdivp
inc
aad
pop
sahf
mov
arpl
cltd
add
and
stos
cmp
xchg
mov
lret
cmpsl
or
mov
or
into
xor
movsb
and
ret
pop
test
push
imul
cli
jle
push
addr16
jno
and
cwtl
mulb
lock
pop
stc
popa
push
mov
cmpsl
fbstp
fisttpll
lods
sub
push
test
lret
mov
mov
shrb
jmp
inc
inc
pop
and
xorb
xor
in
or
popa
loope
or
mov
push
xlat
dec
pop
mov
inc
jno
clc
push
adcl
dec
fcomi
cmpsb
imul
push
imul
cs
daa
imul
sarl
dec
mov
xor
enter
push
sbb
ret
mov
fistpll
ret
xchg
dec
je
xchg
movsl
and
and
jns
and
addb
jg
popf
addr16
repz
xchg
push
mov
jb
push
xchg
fisttps
stc
mov
into
movsl
xor
fidivrs
fstpt
mov
icebp
push
sbb
cmp
lahf
jns
pop
cld
loope
icebp
or
dec
sbb
mov
dec
pushfw
out
ljmp
test
in
scas
sbb
xlat
inc
sub
cmpsl
xchg
pop
xchg
add
mov
pop
cmp
mov
pop
sub
lret
bound
sbb
xchg
dec
imul
ret
inc
cltd
lahf
lahf
xchg
jnp
xor
fcmovnu
adc
lods
hlt
rcr
jge
lods
aas
ds
fiaddl
cmpsl
cmpsl
ret
mov
gs
popf
push
mov
negb
int3
mov
pop
sbb
xchg
loope
mov
mov
mov
lret
data16
shrl
das
mov
leave
dec
xchg
sti
xchg
push
test
mov
jecxz
fisttps
xchg
mov
scas
xor
movsb
mov
sarb
mov
insl
and
push
pushf
lods
mov
push
cmp
jmp
sbb
xchg
inc
movsl
loopne
call
fisttpl
dec
fdivrs
frstor
test
jle
imul
repnz
pop
cmp
xor
ficoml
sub
fbld
lret
mov
mov
add
jne
sub
and
mov
cmpsb
sbb
jle
cmpsl
popf
pop
test
adc
inc
in
fiadds
hlt
xchg
dec
jmp
mov
out
xor
das
fsubs
cmp
stc
sub
lock
add
lods
in
sub
adc
push
ret
ret
aad
rolb
mov
and
loop
jmp
bnd
push
add
mov
out
xchg
pop
daa
test
inc
movsl
call
jo
mov
inc
lods
sbb
ret
sub
sub
scas
push
repnz
addb
lcall
push
mov
pusha
push
mov
fucomp
inc
mov
incl
xor
decl
loope
je
xor
jno
xchg
xor
pop
sub
in
lds
pushf
shrl
jnp
xchg
sti
and
jmp
adc
mov
inc
in
popf
aas
cmc
xchg
inc
lds
xor
lret
test
repnz
fs
sbb
mov
fnsave
icebp
inc
add
cmp
push
test
or
sbb
in
jb
fwait
divl
adc
mov
lds
insl
pop
pop
xchg
or
push
int3
or
cmp
mov
movsl
xchg
mov
movsb
push
or
xor
or
adc
rorb
mov
adc
jmp
in
into
add
shll
enter
inc
jmp
pop
lea
add
jl
outsb
ret
decb
mulb
dec
pop
out
pusha
cmp
mov
fisubs
and
sub
mov
push
cmpsb
repz
lret
int3
popf
jno
pop
lock
lret
and
not
pop
xchg
sub
mov
lea
pushf
xor
xchg
notl
mov
mov
cwtl
rcl
cs
cmp
lret
cs
jmp
mov
insl
dec
cli
dec
nop
mov
xchg
lods
shrl
jb
fnstcw
jb
leave
pusha
jecxz
je
icebp
ljmp
pop
jb
jnp
and
dec
ret
aam
ljmp
xor
or
xlat
adc
int
fimuls
push
loop
mov
lcall
fdivrl
setb
inc
jne
hlt
push
imul
arpl
sub
idivl
and
mov
rorb
sbb
ss
xor
mov
dec
inc
dec
pop
aaa
pop
sub
fisttpl
adc
and
ret
jecxz
adc
lods
add
push
fidivrl
lock
stc
or
sub
pop
or
rcrl
add
inc
inc
inc
push
cmp
xor
in
gs
or
mov
xchg
sbb
leave
mov
jno
imul
out
push
add
movl
adc
fcomps
mov
mov
push
or
addb
sbb
lret
insl
shll
fcmovnb
jecxz
fwait
addb
sbb
cmp
push
std
inc
fidivs
out
fucomip
ret
add
dec
pop
inc
add
imul
add
frstor
fcoml
repz
fs
aam
sbb
cmpsl
and
pop
lock
mov
sahf
jb
test
push
cmpsl
mov
mov
repz
std
ljmp
sbb
icebp
push
psubsw
jns
push
mov
mov
add
outsb
and
pop
xor
cmpsl
sbb
mov
xor
sbb
negb
jmp
and
adc
jg
scas
xor
inc
and
mov
mov
xchg
mov
ror
js
or
xor
out
sub
xor
pushf
and
or
mov
aaa
cmp
sbb
out
add
ljmp
sti
or
mov
loopne
aad
add
ret
mov
scas
sarb
sbb
mov
out
sub
push
rorl
pop
push
fldcw
gs
scas
scas
lret
push
es
mov
dec
mov
clc
sbb
movsl
rclb
sahf
fistpl
lods
test
outsb
int
negl
movsl
adc
out
pop
cmp
lea
aad
or
outsl
in
lds
mov
jns
jae
xor
shll
shl
dec
jno
adc
outsl
test
mov
lret
jne
test
push
aaa
das
dec
movsb
adc
add
xchg
jb
test
fsubs
test
mov
clc
cmpsl
add
sub
xchg
jo
je
rcll
inc
dec
scas
push
add
push
mov
fwait
sbb
adc
pop
lcall
jb
xchg
das
lods
cmpsl
and
push
jo
cmp
ja
nop
dec
cmp
cltd
hlt
and
fnstsw
fists
loop
imul
ja
xchg
pop
sub
adc
mov
out
mov
fbstp
add
inc
jae
push
push
scas
mov
mov
pop
mov
addr16
mov
hlt
and
mov
pop
rolb
mov
jecxz
addr16
stos
stc
loope
test
mov
int
or
mov
push
jmp
and
ret
out
dec
lds
dec
pop
and
inc
jmp
lret
mov
loopne
push
dec
push
pusha
in
prefetchwt1
mov
mov
out
push
sbb
sub
loop
sahf
stc
mov
push
ret
inc
sub
xchg
lods
out
push
repz
ss
cmpsb
std
jns
stc
lret
aad
lret
aam
aaa
scas
ss
sub
scas
lods
jle
fs
shrl
xchg
les
sbb
pop
mov
shr
fsts
xlat
add
adc
sbbl
add
les
adc
in
dec
cmp
mov
sti
mov
dec
sti
xor
aas
mov
cwtl
mov
adc
testb
sub
cmp
int
jns
outsl
mov
lahf
and
pop
out
dec
cmp
mov
jmp
ss
cltd
xor
cmc
jmp
add
push
xor
sbb
int3
xor
clc
into
fildl
imul
outsb
pop
add
dec
cmp
sbb
nop
xor
and
and
push
stos
orl
ret
sahf
sahf
orb
dec
inc
sub
mov
movsl
aaa
stc
fisubs
xchg
sbb
fdivl
inc
cwtl
jne
mov
clc
insb
fnstsw
cwtl
imul
jg
xor
xor
js
push
lods
sahf
outsl
insb
icebp
sbb
pop
push
xor
jge
mov
bound
or
inc
ret
leave
fwait
add
out
add
dec
ret
xchg
test
add
mov
shr
pop
sbb
xor
out
jnp
cmpsl
jmp
dec
jns
lds
adc
stc
push
lock
push
inc
sbb
lret
sbb
enter
push
sbb
push
test
xor
xor
cwtl
or
jmp
stos
aad
or
subl
dec
and
cwtl
lods
insl
cmp
adc
pop
sbbb
push
aaa
add
aad
aad
iret
xchg
es
cmpsl
pop
jl
adc
shlb
ret
dec
mov
movsb
xchg
out
add
xor
jp
pushf
jecxz
mov
sub
mov
mov
sti
cmp
jmp
stos
pop
gs
movsl
data16
lret
and
sahf
push
pop
aam
jmp
scas
mov
stos
enter
or
scas
xchg
fmull
leave
jg
cmovbe
les
jno
dec
sti
adc
bnd
push
adc
add
jg
adc
in
lock
push
add
js
sarl
cmp
enter
rcl
adc
out
or
cmp
hlt
push
arpl
push
popf
cmpsl
push
bnd
add
repz
adc
mov
jmp
mulb
test
xchg
in
cmp
gs
mov
mov
stos
aas
pop
mov
cmp
stos
mov
rorl
or
rorb
daa
leave
sbb
stos
sub
mov
xchg
frstor
inc
in
dec
xchg
into
xor
add
pop
xor
testl
ljmp
sub
aaa
inc
xchg
sub
sbb
sub
cld
sub
push
pushf
jl
jno
mov
mov
shrl
mov
or
movl
xorb
in
pushf
jp
stos
mov
pusha
adc
xchg
pop
push
lods
int3
sub
cmp
add
adc
fsubs
int
xor
mov
xchg
mov
daa
xlat
add
xor
fcoml
aam
mov
xor
mov
rcr
mov
out
addr16
sbb
das
repz
sahf
es
test
out
and
sbb
ret
adc
sub
cmpsb
loop
sub
jnp
into
in
andl
bound
int3
sub
or
jecxz
adc
and
les
sbb
shl
test
mov
enter
mov
test
movsb
sbb
adc
aas
cmp
inc
push
add
adc
jns
aam
xchg
mov
mov
dec
out
outsb
push
inc
pop
aad
adcl
sahf
aas
les
mov
lahf
mov
cs
lods
xchg
pop
fistpll
mov
add
mov
or
movl
mov
int
std
mov
dec
xor
mov
shr
adc
fcmove
testb
dec
mov
xchg
xchg
adcl
scas
add
out
cmpsl
push
outsl
dec
sahf
mov
scas
mov
lods
push
stc
dec
inc
loopne
mov
sbb
adc
dec
popf
mov
fcoms
test
mov
clc
sbb
aam
fdivrp
inc
or
cmp
xor
rcr
inc
frstor
adc
xor
pop
movsl
shlb
jnp
loop
pop
cmp
cmc
in
mov
lea
xor
daa
stos
loope
dec
enter
mov
fbstp
sarb
testb
mov
into
push
sbb
adc
add
outsb
xchg
dec
dec
cwtl
lcall
xchg
xor
mov
mov
add
push
push
jo
popa
or
push
or
movsl
push
leave
mov
dec
mov
stos
jecxz
mov
add
xchg
sbb
inc
mov
or
lods
roll
mov
jno
es
mov
lods
jecxz
mov
dec
push
xor
cltd
out
or
mov
jg
in
mov
pand
or
mov
ja
out
jbe
rcr
mov
jbe
je
adc
bound
aas
jnp
and
add
fisttps
cwtl
cvtpi2ps
cmovs
popfw
sbb
xor
inc
jecxz
hlt
lcall
into
inc
push
add
sbb
lahf
gs
jns
add
pop
mov
test
xchg
test
in
push
mov
xor
outsl
test
mov
adc
scas
shlb
xchg
mov
aaa
adc
lahf
fistps
mov
insl
out
or
test
pop
repz
inc
aad
lcall
xor
jl
mov
inc
jle
rclb
xor
pop
dec
aad
out
push
push
lea
in
cli
das
fisttpl
mov
pop
and
push
cltd
jns
movsb
rorb
sbb
insl
stc
jg
fwait
jecxz
inc
test
jp
adc
inc
cmp
and
dec
in
loop
push
or
test
mov
ret
in
loope
pop
pop
scas
inc
pop
sub
pop
popa
dec
xor
pcmpeqd
lret
daa
sub
jecxz
cld
inc
mov
xchg
fwait
inc
xor
add
das
xchg
push
in
xchg
ss
mov
cld
lret
subl
loope
push
mov
hlt
imul
jmp
out
mov
push
fistl
dec
jge
mov
scas
lock
enter
inc
or
shll
ret
xlat
ljmp
data16
mov
sbb
lahf
sub
dec
mov
push
mov
mov
sub
mov
test
mov
sahf
div
cmp
mov
push
sahf
inc
int
insl
loopne
or
sbb
cs
aad
mov
xchg
out
mov
and
and
pop
xor
iret
and
leave
std
mov
and
lock
jp
lock
rorb
adc
lcall
add
or
push
fcoml
mov
mov
pop
jae
je
adc
out
mov
stc
inc
mov
fdivs
movsb
popf
push
je
ret
inc
and
adc
xlat
rolb
sub
ret
push
xchg
imul
repnz
nop
sub
fisttpl
lahf
lods
xchg
das
cmp
xchg
mov
add
sub
inc
movsl
pop
inc
push
sub
push
jno
sbb
pusha
pop
test
ljmp
xchg
mov
mov
mov
test
out
inc
xor
and
cmp
or
mov
sbb
mov
dec
arpl
push
fwait
jbe
ds
cmp
int3
jmp
pop
fcomps
leave
call
insw
call
enter
cltd
or
insl
sti
gs
lds
pushf
sub
inc
jge
cli
cld
mov
fisttpll
pop
xor
movsl
dec
dec
push
and
mov
test
jl
jmp
pop
jp
jns
add
xchg
ljmp
dec
out
popf
insl
test
popf
mov
pop
push
int
mov
in
loop
sbb
shll
lcall
jbe
and
cmc
jg
inc
jo
mov
xor
pop
jae
test
xorb
xchg
dec
rcrb
shrl
jo
out
mov
jbe
in
das
push
xor
jl
aas
or
out
testb
movl
dec
or
int
xchg
push
add
xchg
and
dec
mov
pop
inc
jne
orl
arpl
add
jge
sub
fdivr
push
rcll
rorb
pop
loopne
aad
in
push
jns
mov
add
sub
add
aas
in
pop
add
rolb
cmpsb
or
lock
and
mov
cmpsl
or
fs
push
imul
fsub
xor
push
push
ljmp
inc
mov
pusha
clc
daa
out
lahf
lret
push
mov
in
adc
or
push
mov
add
sbb
inc
mov
addl
jns
sbb
popf
hlt
mov
rcr
subl
fucomip
mov
fbld
mov
sbb
or
cmc
js
mov
es
lcall
mov
div
pop
cmp
cmp
or
outsl
mov
xor
aad
cmp
out
mov
push
popa
adc
cmp
sahf
sub
sub
dec
cmpb
lahf
popw
xchg
jae
mov
adc
inc
mov
xor
adc
jge
jmp
outsb
outsb
inc
and
jmp
add
divl
and
outsl
nop
xchg
fstpl
add
fwait
stos
test
mov
lret
xor
ljmp
xor
cmp
mov
mov
mov
xchg
xchg
sbb
outsl
jl
test
repnz
cmpsb
sahf
xchg
cmpl
sbb
ja
sbb
sbb
push
jae
scas
mov
and
in
push
test
test
cmp
fsubp
lret
lcall
xor
leave
addl
fsubrs
lahf
lds
out
adc
xchg
pop
fimuls
and
or
add
xchg
imul
mov
cmpsb
int3
fs
or
repz
cmp
sub
je
lcall
test
pop
jp
or
cld
call
es
pop
pop
xchg
imul
xlat
jnp
push
sub
test
inc
add
cmp
pop
mov
daa
repz
sbb
mov
sti
out
jnp
dec
jle
mov
mov
mulb
xlat
sar
test
add
mov
enter
mov
pop
addr16
mov
das
loop
add
push
xchg
or
adc
pop
sbbb
out
rolb
jle
cmp
inc
push
ljmp
andl
push
mov
and
popa
jl
cmp
push
repnz
cmp
push
add
fmuls
and
xchg
mov
sub
and
adc
sbb
xchg
je
out
mov
mov
mov
mov
into
sub
pushf
sti
inc
cmpsl
adc
and
push
arpl
movsb
jnp
movsl
jg
shl
jbe
and
and
pushf
xchg
or
js
stos
cld
bndldx
out
jg
inc
jb
fisttpl
fildll
div
jmp
addr16
repz
lahf
xor
out
mov
aam
push
cld
add
imul
clts
pop
jmp
stc
aad
pop
mov
subb
outsb
lods
sub
mov
dec
xchg
push
push
adc
leave
jmp
push
jge
xor
fistps
push
lods
pop
out
xor
xor
mov
int
stc
inc
cmp
cmp
xchg
test
inc
jge
lcall
lcall
andb
into
inc
into
cld
mov
imul
sahf
inc
push
or
fidivs
sub
or
je
fsubrs
push
xchg
test
cmc
cmc
aam
inc
div
jmp
lods
push
inc
cs
mov
sbb
insb
sti
sbb
cmc
loop
or
subl
outsl
mov
add
adc
lock
and
inc
ret
orl
repz
sub
push
sbb
push
incl
sbb
sub
loop
mov
movsb
or
stc
adc
pop
sub
dec
xchg
dec
add
mov
insb
sub
mov
in
rol
popf
repnz
aam
aas
data16
adc
inc
or
out
scas
ficompl
pop
jbe
mov
in
movsl
cltd
data16
aaa
jns
mov
loopne
jae
lock
push
in
ret
ds
xchg
and
dec
rcrl
loop
sub
pop
rcrl
out
outsb
into
pop
ficompl
in
test
xchg
xchg
xor
out
popa
rcl
jg
or
ret
pop
pop
adc
movl
or
adc
sbbb
andb
mov
sbb
lret
rorl
imul
xchg
in
pushf
inc
jb
cld
cmp
push
inc
outsl
loope
add
ja
jg
adc
xchg
add
roll
or
push
lods
inc
dec
jecxz
sbb
jge
mov
sbb
or
dec
push
repz
sub
jo
aam
bound
mov
aaa
mov
push
shlb
xchg
xchg
setle
pushf
cmp
cmpsb
ds
fisubl
adc
fwait
pop
xor
sub
shll
dec
mov
inc
test
dec
push
shrd
js
pop
dec
pop
je
stc
lock
xchg
data16
bound
fstps
push
pop
std
mov
mov
mov
mov
sub
fdivl
mov
add
pop
jne
mov
push
mov
adc
inc
ret
pusha
lock
into
inc
cld
int
mov
xchg
inc
xor
popf
sbb
std
sbb
cmp
xchg
ret
icebp
dec
xor
insb
arpl
test
ror
pop
inc
sbb
xchg
rolb
xchg
icebp
inc
scas
jp
cmp
push
xchg
test
xchg
std
cmp
jbe
xchg
xchg
ss
inc
push
mov
lcall
fwait
cwtl
xchg
je
aaa
jecxz
add
imul
in
and
cmpsl
or
jo
mov
dec
jmp
push
les
adc
pop
clc
cwtl
adc
xor
loope,pn
fldl
inc
int
xor
cmp
hlt
dec
jne
pop
sub
shll
sti
xor
push
add
adc
adc
loope
push
stc
jp
mov
fidivs
out
cmc
imul
dec
hlt
ret
add
insl
in
pop
and
fsub
lret
scas
cmpsb
scas
lock
mov
not
les
into
add
jmp
push
inc
mov
sbb
cmp
jmp
jne
jmp
mov
cmp
lret
test
inc
aaa
mov
loop
mov
sub
out
or
lods
cwtl
out
or
divl
mov
cmovs
mov
repnz
je
pop
xor
dec
fimull
xor
aaa
adc
or
clc
ds
mov
inc
and
subb
scas
ja
shrl
xor
aam
inc
fdivr
pushf
popf
add
repz
adc
fcompl
inc
sub
call
jnp
jne
mov
fidivs
fsubs
ds
cmp
movsl
xchg
ret
adc
and
ds
mov
jne
jp
push
scas
jge
sarb
daa
je
lods
inc
fdivs
pop
gs
and
dec
push
pop
std
xchg
mov
mov
push
lock
xchg
scas
push
aaa
cmpsl
adc
test
xchg
pop
or
or
push
mov
jge
sbb
das
nop
lods
xlat
stc
in
and
bound
addr16
lock
outsl
jbe
shll
pop
mov
pusha
jl
test
adc
in
ja
mov
inc
fnstsw
mov
lods
int
and
sbb
ret
ja
loopne
add
cltd
jl
stc
shr
ret
cmpsl
fucom
mov
mov
icebp
sub
mov
rorb
aas
pop
rorb
cmp
jo
mov
and
add
fdivs
inc
mov
nop
add
stc
mov
xlat
loopne
stos
mov
aam
xchg
xorb
pop
aaa
adcb
jb
mov
push
out
mov
push
push
inc
in
lcall
xlat
stc
adc
add
mov
dec
push
adc
mov
xor
fstpl
dec
jo
pop
jl
call
add
fdivl
jecxz
inc
mov
mov
fidivrs
sub
inc
addb
mov
push
pop
xlat
les
jno
push
movsl
lret
mov
mov
stos
or
sbb
ja
xor
testl
fdivl
mov
sub
leave
mov
lahf
lock
mov
scas
xchg
aam
cmc
add
jo
js
test
loopne
adc
in
sub
jp
jno
lahf
in
in
lcall
cmp
or
xchg
fcmovnb
gs
jb
cmp
mov
fwait
cltd
cmp
jl
or
test
stc
cmp
pushf
cltd
push
clc
in
mov
sbb
cs
in
adc
loop
jno
sub
fldt
leave
scas
fs
push
aas
or
cli
mov
pop
mov
imul
cmp
das
insl
ret
sub
sub
inc
mov
std
loope
and
data16
sbb
idivl
cmp
sahf
ret
into
popa
repnz
in
xchg
inc
push
mov
xchg
xchg
mov
stc
sub
xchg
mov
and
mov
cmpsl
push
aas
dec
jl
popf
mov
jnp
int3
and
jge
mov
cli
and
js
inc
xrelease
cltd
jg
dec
sarl
pushf
stos
testl
dec
sar
js
scas
sub
pop
repz
sub
adc
mov
cmp
scas
cs
iret
jp
stc
lock
cmp
xor
cmc
aam
inc
cmp
mov
jmp
cmp
test
xchg
sub
push
mov
xchg
ficompl
sbb
int3
loope
fucomp
push
mov
insb
lea
lret
iret
stos
and
adc
aam
xchg
dec
push
pop
movl
xor
mov
in
cmp
push
add
iret
lret
push
lcall
add
inc
ret
cs
ja
int
sbb
inc
loope
movsb
jge
pop
cmc
les
push
lret
mov
xor
mov
filds
test
mov
loop
xchg
cld
xlat
movsl
cld
and
arpl
xorl
cmp
cwtl
rep
fsub
mov
mov
cmp
adc
ret
lcall
je
js
push
jne
out
and
or
movsl
fildl
stos
add
xor
xchg
fs
mov
setne
bound
das
sahf
cmp
and
outsl
or
or
fstl
xor
or
cmpsb
xlat
mov
not
sahf
cmp
ds
roll
pushf
stos
scas
jo
dec
test
daa
mov
dec
push
push
ret
mov
lods
sbb
mov
inc
sub
xchg
icebp
loope
and
ds
insl
in
nop
or
pop
in
sub
or
inc
repz
and
push
jmp
loopne
lods
xchg
movsl
fnstenv
shl
int
cmp
adc
ror
push
ret
and
addr16
or
cmc
cmp
add
dec
por
jnp
push
jecxz
jle
imul
shlb
jns
in
aad
mov
stos
insb
fsubrl
inc
mov
pop
mov
xchg
push
inc
xchg
sbb
or
fwait
aad
es
idivb
fldenv
cmc
xor
mov
gs
rcrl
xor
pop
fcompl
int3
fldcw
dec
pop
jmp
repnz
pop
lds
sbb
hlt
ds
decb
pop
sbb
movsb
enter
xchg
mov
test
ss
or
insl
leave
test
cltd
push
fwait
lds
ds
ds
push
and
mov
test
sbb
adc
lds
push
mov
inc
ret
gs
js
adc
fstpl
sbb
inc
pusha
daa
inc
push
pop
xor
sbb
mov
test
daa
fistl
aaa
stc
adc
dec
jne
mov
dec
mov
popf
jb
or
shrb
call
xchg
sub
arpl
and
stc
das
add
popa
loop
data16
inc
lods
scas
andb
lods
jae
pop
rcll
adc
stos
sti
mov
push
dec
sbb
xor
push
xlat
cli
xor
lods
data16
arpl
inc
or
scas
fwait
add
stos
jmp
mov
outsl
xorb
cli
adc
adc
fsubs
insl
xchg
sti
fimuls
add
sbb
xchg
xchg
insl
push
dec
fldcw
insl
xchg
xor
push
ret
lret
add
sbb
fldcw
ds
leave
insb
mov
hlt
pop
push
aam
shll
je
jbe
icebp
repnz
cltd
repz
push
dec
push
push
cmp
sbb
pop
xchg
lret
add
cmp
outsb
cmp
jae
test
pop
inc
push
sub
jae
fucomip
mov
inc
pop
inc
xchg
pop
dec
mov
in
pop
fsubrp
in
xor
dec
cld
xchg
mov
cmpsl
int3
sub
and
cmp
mov
movsl
sahf
adc
cmp
mov
mov
das
out
mov
cmp
pop
aas
lret
push
xchg
push
mov
fstps
sar
jo
fnstcw
lds
inc
loope
ret
pop
sub
call
xchg
stos
dec
or
iret
mov
push
out
test
enter
push
adc
fwait
cmp
or
inc
inc
lcall
push
scas
pop
stc
stc
movsb
rcrb
jp
xchg
loopne
es
fs
popa
sub
jno
sub
popf
mov
jno
inc
or
ljmp
sub
sahf
mov
jbe
jo
mov
dec
popf
pushf
cmp
scas
hlt
in
jl
fs
aaa
mov
sub
sbb
testb
int
xor
jno
or
jmp
mov
adc
fimuls
or
andb
ja
int
jno
push
icebp
ret
outsb
stc
arpl
add
loope
rorl
xor
cmp
mov
jne
cmp
rcrb
sbb
fldt
out
ja
inc
fsubl
dec
dec
jnp
jge
nop
push
add
xlat
jle
ret
push
xor
xlat
xor
imul
repz
sub
and
pushl
hlt
sub
sbb
cltd
add
insb
jb
sub
cmp
enter
repz
push
jnp
push
ljmp
mov
aas
push
jecxz
sub
dec
je
jae,pn
inc
lods
cwtl
out
subb
sub
hlt
test
loope
bound
sub
jl
fstpt
iret
rcrb
mov
sub
sbb
fcmovu
xor
cmp
push
xchg
cli
add
aad
rorb
lea
sbb
aad
jmp
mov
fcomp
jbe
std
out
scas
adc
add
mov
popa
or
jnp
add
sbb
and
lahf
fmul
addr16
dec
inc
sbb
fstl
test
adc
out
std
xor
pushf
mov
dec
pop
xchg
adc
scas
and
mov
das
lret
je
lcall
mov
jno
inc
loop
dec
fnstenv
mov
pop
ficomps
in
sbb
push
loopne
loope
mov
pop
cmp
mov
sub
and
jp
lret
repnz
add
inc
lods
xor
in
cwtl
stos
jg
neg
into
pop
sbb
movsb
and
dec
mov
stos
jno
repnz
test
push
inc
rorb
mov
pop
sub
xchg
insl
ss
out
xor
pop
xorl
fcomps
jne
cli
in
inc
in
iret
inc
push
push
mov
pop
sti
xor
cmp
shlb
lds
fsubr
dec
jnp
fwait
testb
fcmovnu
inc
std
mov
mov
leave
pop
addr16
mov
popa
lods
push
xchg
lret
jbe
iret
mov
sbb
or
mov
sbbl
inc
mov
cwtl
and
mov
dec
pop
pop
jle
shr
pop
mov
ja
cs
popw
data16
gs
inc
notl
mov
mov
out
aam
in
xchg
aam
push
inc
in
mov
jp
jo
test
sbb
mov
mov
scas
lcall
rorl
cld
mov
adc
shrb
push
ret
sbb
sbb
inc
push
les
js
imul
mov
insl
test
test
icebp
call
pop
sub
sub
dec
test
inc
pop
test
inc
push
or
pusha
js
imul
out
notl
and
ror
xor
adc
mov
mov
stos
push
mov
xor
in
mov
mov
ja
pop
mov
or
jae
mov
ds
jae
mov
push
frstor
pop
sbb
jmp
dec
push
jmp
fmull
dec
pop
sbb
add
jecxz
dec
adc
popa
enter
out
cwtl
out
xor
roll
or
je
jo
fistpll
and
nopl
cmp
pop
arpl
aad
push
lret
in
push
mov
popf
daa
xchg
shlb
sbb
scas
rcr
dec
pop
add
jp
xchg
and
aad
bound
ret
dec
lret
into
inc
and
cli
sub
mov
mov
pop
int
fsub
cltd
add
sub
push
sbb
mov
sbb
pop
add
sub
sub
push
pop
lahf
lock
dec
pop
int3
push
push
and
minps
jp
mov
lods
inc
cmp
orl
jmp
insl
in
icebp
mov
xchg
aad
sub
sahf
inc
cli
dec
cmpb
lods
jb
fnsave
sar
aad
fildl
test
mov
outsl
stos
inc
insb
rolb
push
xchg
mov
mov
sahf
jne
lahf
or
mov
loope
jne
adc
mov
popf
test
mov
inc
cwtl
ret
fisubrs
fsubrp
mov
xor
cli
mov
mov
inc
jmp
lods
mov
push
xor
nop
fcmovnbe
lock
dec
out
cmp
mov
aas
repz
loopne
and
pop
cmp
adc
aas
in
push
jb
sub
mov
mov
add
jno
adc
pushf
repz
xchg
mov
std
dec
mov
lds
test
loop
leave
push
xchg
loope
pop
insl
iret
mov
clc
insb
add
and
jge
outsl
ficomps
jmp
mul
jnp
add
imul
pushf
pop
mov
sbb
out
scas
aam
ret
jbe
mov
imul
push
sbbl
cmp
inc
roll
jg
fisubrl
mov
jmp
popf
test
mov
mov
fsubrl
mov
xchg
or
iret
sbb
movsl
mov
add
inc
je
fistpl
sub
lea
call
or
push
xor
pop
in
or
cmp
shrb
cmpsb
jl
pushf
pop
outsl
loopne
adc
sahf
rcrb
pusha
sub
and
out
movsb
in
dec
repnz
out
out
cltd
cmp
daa
jecxz
add
adc
mov
lds
lock
loope
xchg
sbb
lds
inc
stc
cmpsl
mov
lea
jmp
icebp
add
ffree
sub
mov
push
push
jp
cs
mov
or
jo
xlat
lods
jae
insl
adc
xchg
out
mov
sti
call
scas
jno
push
cmp
pop
popa
mov
cmp
pop
pop
sbb
pop
adc
mov
xchg
cmp
call
jo
cmp
roll
jo
mov
filds
xor
in
xchg
ja
mov
in
jae
adcb
fmull
outsl
outsb
test
mov
or
test
mov
fnstenv
dec
xlat
mov
mov
inc
xchg
add
cmp
jl
and
nop
jae
pop
int3
push
loope
mov
test
and
iret
or
or
jne
bound
xchg
mov
test
insl
insb
pop
jp
add
fsubrl
repz
stos
in
dec
cmp
outsl
pop
or
cmpsl
out
mov
aam
popf
dec
popf
in
mov
roll
push
push
loope
dec
inc
fs
xchg
jae
adc
xchg
es
sbb
scas
orb
cmpsb
push
int3
lods
ret
add
cmp
cwtl
pop
push
mov
test
mov
out
out
popa
sbb
arpl
and
cmpsl
clc
insl
aad
popf
lea
adc
sbb
data16
add
leave
fdivs
mov
pop
xor
pop
inc
test
push
cmc
scas
xor
mov
cmp
add
mov
sub
and
cwtl
hlt
pop
outsl
xchg
test
jmp
cltd
sbb
lods
xchg
cmpsl
les
icebp
sub
dec
rcrb
fwait
and
xor
pop
shrl
cmp
out
cmp
push
in
outsl
cli
repnz
pop
inc
frstor
in
shll
or
fdiv
cmp
aas
push
mov
testl
test
and
lea
clc
out
sahf
jmp
mov
fwait
mov
shlb
jno
jle
imul
out
cld
pop
mov
cmp
ds
and
clc
push
mov
jmp
adc
fmul
fincstp
mov
hlt
jp
insb
pop
ret
jno
lahf
rcll
mov
add
imul
mov
inc
icebp
sub
mov
mov
popf
mov
add
cmp
flds
inc
adc
mov
sarb
rol
or
add
push
data16
jo
push
sub
dec
lcall
lcall
rol
enter
adc
sub
ret
xlat
iret
inc
jecxz
in
aad
xlat
icebp
mul
ret
cld
idivb
xchg
jae
push
mov
imull
pop
push
inc
dec
sub
adc
jae
mov
and
add
lods
pop
mov
movsl
and
pop
movsb
iret
lret
lret
jecxz
mull
inc
in
inc
sub
push
shl
fnstenv
in
jae
add
into
and
test
or
cmp
test
out
dec
lock
cmp
inc
cltd
sahf
xchg
mov
dec
aas
sbb
cmpsb
pop
push
jnp
adc
cmp
leave
ret
out
fwait
jge
arpl
scas
xchg
push
push
adc
pushf
pop
mov
aam
pop
sbb
cmc
sbbb
sbb
push
aaa
inc
inc
mov
mov
jnp
mov
fists
cmp
xor
jno
sub
xchg
decl
and
add
repz
and
or
fnsave
fmul
cmp
int
mov
test
jmp
sbb
mov
inc
jno
or
aad
sti
pop
cmpsl
ljmp
jae
and
movsl
push
icebp
out
or
popa
pop
sbb
mov
dec
push
fs
mov
inc
loopne
ljmp
jmp
jmp
loopne
lods
add
cltd
ror
pop
jns
inc
stos
outsl
insl
cmp
fdivl
pop
out
fs
dec
jbe
cmp
inc
xor
sub
aaa
imul
mov
fs
movd
inc
sbb
movsb
cs
sub
rcr
adc
sbb
loop
jno
out
clc
mov
push
data16
into
xor
lret
nop
std
push
dec
dec
cmp
pop
dec
mov
repnz
push
lods
add
fnsave
xchg
sbb
decl
in
out
in
adc
sbb
mov
lock
and
sarb
movsb
in
jbe
jae
jno
gs
shll
push
or
roll
mov
sbb
cs
sub
in
pop
je
adc
jno
lea
or
cltd
push
das
fdivrs
outsb
mov
les
lcall
repz
push
stos
xlat
lds
mov
test
xor
xorb
xor
js
out
outsb
js
out
and
sti
pop
jmp
dec
inc
sbb
pushf
test
repnz
repz
pop
sub
push
xor
mov
das
mov
iret
or
or
adc
cs
fdivrl
cmp
cmp
inc
gs
cld
add
and
ds
pop
aad
xchg
cltd
hlt
aaa
pop
test
mov
inc
xchg
cs
je
add
sbb
aas
xchg
loopne
out
and
cld
test
adc
jns
loopne
mov
xor
incl
push
cli
stos
pop
and
sti
movsl
xchg
rcr
pop
pop
push
push
aam
mov
insl
int3
adc
arpl
jmp
sub
xchg
and
sub
cmc
mov
frstor
shll
jmp
jo
cmp
mov
cs
jae
push
fst
pop
aam
push
sarb
inc
mov
mov
inc
mov
sbb
pop
loope
inc
repz
dec
mulb
lcall
addr16
push
imul
cli
test
push
lahf
sbb
cmp
xchg
xor
push
mov
lods
or
bound
xor
jne
sarl
rclb
jnp
sbb
in
loope
in
push
popa
js
ret
inc
aas
repz
and
in
inc
cmp
mov
divl
cwtl
push
cltd
mov
out
or
pop
adc
dec
loope
mov
inc
mov
fwait
pop
push
fsubrl
push
mov
ljmp
out
xchg
pop
dec
ds
pop
mov
mov
dec
mov
lock
and
add
mov
sbb
outsb
mov
scas
mov
int3
loopne
in
mov
fs
mov
into
mov
pop
vpminsw
addr16
repz
or
mov
incb
ds
inc
insb
imul
aaa
xchg
mov
fmull
inc
aad
inc
bound
div
out
lea
xor
in
shrb
leave
jb
decl
ficompl
in
pop
sbb
stc
mov
lock
inc
xor
repnz
add
mov
jmp
rcrb
jnp
push
into
pop
and
mov
scas
dec
pop
sub
pop
iret
xlat
pop
inc
push
push
adc
add
pop
dec
addr16
fwait
push
mov
sahf
push
jno
stc
sub
mov
hlt
sbb
jecxz
std
or
inc
cmc
push
cmc
xchg
add
aam
sub
imul
jo
cmp
cmp
dec
iret
mov
xchg
xchg
jl
fdivp
jne
insb
push
mov
nop
add
aaa
repz
fdivrl
shr
adc
sahf
mov
lret
add
sbb
pop
nop
cmc
cmp
ret
sti
mov
aam
pop
mov
lcall
push
lea
xor
ja
add
mov
mov
iret
mov
mov
cld
sbb
pop
add
dec
mov
add
scas
inc
mov
dec
das
ja,pn
sub
enter
lret
movsb
fldcw
cmp
aaa
push
cmp
xor
xor
mov
push
push
pop
test
mov
aad
inc
or
xor
daa
cmp
cmp
lahf
jbe
lahf
imul
orb
dec
stos
sbb
arpl
pop
xor
ja
fistpl
mov
pusha
mov
cmp
incb
add
aas
test
push
mov
adc
inc
jne
or
shll
xchg
cld
sub
inc
aad
aad
jnp
cmp
daa
std
mov
js
rclb
mov
mov
lea
lret
maxps
adcb
pop
xlat
dec
sub
mov
mov
movsb
jo
movl
aas
xchg
imul
lods
dec
mov
rcll
add
and
orb
movb
fisttpll
mov
ret
outsb
fisubs
jle
les
ret
adc
jno
mov
push
add
fdivrl
inc
and
or
adc
mov
xor
pushf
inc
nop
mov
insl
inc
mov
xchg
shlb
dec
into
xor
xchg
mov
mov
roll
add
sbbl
imul
into
pop
outsb
sti
cmp
addb
lods
dec
ja
sub
and
pop
int3
ret
mov
xchg
sbb
adc
pushl
pop
xchg
add
leave
pop
dec
inc
lods
cmp
loope
je
or
mov
xor
and
push
cli
add
push
fidivrs
dec
jb
in
lret
mov
ss
push
xchg
cs
loop
cmp
adc
and
jae
hlt
cmp
add
movsb
jge
lcall
push
cld
sbb
gs
int
in
sbbl
popl
pop
and
stc
insb
std
notb
aam
icebp
pop
xor
cmp
clc
push
pop
rcrb
push
cli
testb
mov
mov
xchg
stos
and
testl
rorl
push
xlat
inc
pop
ss
jmp
xchg
test
rorb
jle
mov
xlat
enter
adc
enter
leave
mov
out
add
enter
mov
test
clc
in
imul
push
jecxz
mov
and
rorl
lahf
std
push
push
mov
jmp
aas
scas
push
aaa
cmpsl
out
mov
sbb
test
pop
sbb
or
dec
pop
cltd
dec
mov
rorl
dec
adc
xchg
aad
jno
push
mov
jne
sub
cmpsb
mov
xor
roll
adc
sub
sub
and
jne
pop
jg
sti
pop
aam
push
dec
jno
addr16
stc
and
dec
adc
sbb
lods
ret
jge
fildl
idivl
add
call
or
es
dec
inc
dec
and
lret
fildl
mov
icebp
lahf
push
mov
loope
mov
outsb
fst
sti
inc
sahf
enter
and
sub
clc
adc
jne
dec
dec
mov
arpl
lahf
mov
push
pop
jp
cmp
dec
mov
lds
inc
popa
jns
cmp
lret
iret
ljmp
call
call
inc
xchg
add
jb
cmp
outsb
dec
dec
push
js
rcl
adc
xchg
xchg
insb
dec
jmp
out
dec
xchg
adc
ds
jl
or
add
in
jl
aas
movsb
dec
into
pop
sub
cld
mov
aad
addr16
popf
mov
stc
outsl
es
jle
and
fimull
in
vmovmskps
adc
and
cmp
pop
add
bound
rolb
mov
cmc
mov
lods
cmp
sbb
mov
repnz
and
sub
loop
stc
int3
test
mov
imul
push
dec
ja
das
in
fwait
cmp
fiaddl
xor
lea
loopne
inc
inc
pop
cli
daa
or
push
test
stos
lods
es
cmp
pop
push
push
mov
lock
mov
cmp
cwtl
mov
sbb
test
sahf
jecxz
pop
mov
shrb
loop
jno
add
add
ret
jns
iret
jbe
sub
sbb
add
into
pop
xorl
out
mov
mov
fcoml
sbb
push
gs
adc
dec
push
adc
dec
dec
out
sub
jl
push
cli
and
iret
adc
cmp
and
gs
into
cmp
pop
nop
sub
pop
adc
pop
sbb
add
and
mov
xchg
mov
lahf
ja
rcll
cmp
mov
fsubrp
mov
add
arpl
outsl
imul
lcall
dec
adc
xor
fidivs
inc
adc
and
xor
sub
xchg
mov
data16
clc
cmp
icebp
ret
dec
ror
nop
call
jbe
jno
or
fadd
inc
sbb
mov
ljmp
lret
mov
xchg
lcall
xchg
stos
mov
push
dec
inc
or
nop
mov
mov
orl
in
add
and
daa
ror
xor
ret
push
push
mov
adc
xchg
fimull
push
ret
dec
mov
xchg
aas
filds
out
mov
pushf
sub
add
sti
push
lock
xor
or
shlb
fs
leave
stc
stos
dec
loopne
frstor
cld
ret
fsubrs
scas
loopne
push
hlt
ds
cmp
jecxz
cmpsl
cli
jbe
lock
mov
test
xor
adc
movsb
inc
cmp
cli
jb
js
repz
dec
push
mov
jo
ficomps
aaa
dec
push
dec
push
test
or
sbb
daa
idivl
into
pusha
in
push
add
lahf
fwait
sub
mov
pop
leave
mov
cmp
rcll
add
xor
test
or
adc
repz
lahf
in
and
sub
mov
fwait
movsb
addr16
xor
jge
imul
sub
sbb
add
or
sahf
mov
cmc
mov
inc
fwait
test
sub
add
insb
sbb
cmp
add
fcompl
iret
jg
in
fdivp
xchg
sahf
lock
mov
je
mov
out
mov
pop
fbld
push
insb
jecxz
mov
inc
xlat
ljmp
inc
stos
pusha
ret
xor
push
jp
repz
dec
dec
add
or
je
dec
sub
pop
shlb
or
in
inc
or
pop
imul
mov
mov
loop
mov
push
jb
lods
xchg
sahf
out
roll
jl
ror
xchg
xchg
subb
test
cld
fcoml
insb
fsubp
dec
scas
cmp
int
fistpll
nop
insb
imul
adc
lahf
aaa
jnp
mov
repz
cmpsb
fucompp
xorl
pop
jno
data16
rcl
cs
xor
cmp
ljmp
imulb
xchg
bound
mov
outsb
popa
cmp
mov
push
std
mov
pop
fistpl
add
add
lret
or
sahf
cmpsb
cmpsl
stc
dec
jle
inc
dec
movsb
lret
test
rcrb
cmp
insl
cli
or
test
inc
mov
push
cmp
push
loope
pop
jbe
aas
shl
movsb
int3
les
fsubs
mov
mov
and
fstpl
push
cmpsb
and
sub
cmp
clc
xlat
push
pushf
push
xor
subl
cmp
out
dec
imul
data16
cmp
dec
adc
mov
out
fimull
sub
je
fs
mov
jp
push
sar
out
stos
popa
dec
mov
pop
in
fisubrs
dec
mov
xchg
mov
aam
insl
pop
aas
jg
and
cltd
push
xchg
adc
xlat
push
cmp
push
jo
jge
ja
push
test
das
rolb
push
lods
aas
mov
dec
or
cmpsb
hlt
pop
sti
push
imul
mov
cmpsl
and
add
jo
lea
out
xchg
pop
call
sbb
jae
pop
ficompl
push
in
les
pop
imul
pushf
popf
cmp
dec
mov
mov
je
inc
pop
std
jg
pop
cmp
cwtl
jl
and
inc
pop
pop
xor
sbb
dec
or
or
iret
xor
hlt
and
outsb
dec
cli
push
and
lods
aad
mov
call
fdivl
cwtl
rcr
cmp
shlb
daa
lret
push
pushf
and
cld
xor
dec
inc
ss
loop
out
mov
ljmp
popf
fiadds
inc
sub
jl
shl
out
cmp
movsb
movb
mov
std
sub
dec
fldenv
leave
pop
push
mov
sub
add
loopne
je
mov
jmp
jne
sbb
add
hlt
gs
out
sub
adc
sbb
repnz
dec
or
movsb
or
and
push
or
pop
call
ja
cmpsl
dec
dec
dec
xlat
fcoms
cmp
fildll
in
int
cs
lea
and
pop
lods
movsl
pop
popw
lods
cmp
jmp
aaa
or
add
test
repz
jb
out
mov
mov
xchg
cmp
inc
inc
je
dec
mov
out
sbb
out
cmpsl
sub
fxch
popa
les
adc
pop
jmp
addr16
inc
mov
push
xor
test
jp
mov
ret
ficoms
cmpsb
ret
imul
out
stos
lret
loope
out
repnz
inc
jge
xor
popf
loopne
mov
stc
pop
into
ret
xchg
in
in
negb
cmp
mov
test
pop
pop
mov
cmp
cs
push
pop
add
jge
aaa
nop
or
cmp
std
push
lock
outsl
inc
cmp
cmpsl
push
or
lds
test
and
icebp
inc
outsl
jmp
add
cld
push
cmpsb
jbe
xchg
aas
xor
xchg
arpl
sub
flds
stc
add
ret
pop
xlat
sbb
jmp
push
insl
and
push
mov
mov
cwtl
push
cwtl
sub
push
scas
add
push
pop
popf
mov
cmp
inc
jb
push
xchg
sbb
cmp
loopne
inc
adc
push
xorb
jmp
sub
insb
mov
scas
adc
hlt
out
ljmp
sti
jae
xchg
lcall
lahf
xchg
popf
mov
dec
push
pop
data16
daa
inc
lea
sub
xor
js
ja
add
mov
fsub
adc
push
cmp
cwtl
xor
mov
fisubrs
cmpsb
jecxz
sub
lock
mov
inc
arpl
pop
push
sbb
mov
sub
xchg
ret
imul
jns
stc
subl
call
lret
xchg
adc
pop
lods
orl
jne
les
stc
dec
mov
cltd
into
cmpsl
jle
push
jb
lock
add
mov
cwtl
es
test
repnz
cmc
dec
imul
or
sbb
cmp
popf
mov
xchg
and
xchg
adc
aam
pop
hlt
dec
sub
mov
scas
out
imul
cmc
imul
mov
lock
icebp
and
fld
push
popa
pop
loope
repnz
aas
sub
sbb
and
cmp
lock
in
notl
out
int3
push
xchg
jo
inc
movsl
aad
and
inc
dec
nop
xor
inc
scas
add
xchg
icebp
fwait
shl
cmp
cltd
repnz
ja
sbb
repnz
popf
int3
add
sbbb
fildll
dec
call
jne
sbb
mov
mov
cmp
dec
dec
js
mov
stc
ss
xchg
sub
xor
xlat
xchg
xor
lock
mov
lcall
test
enter
adc
sti
dec
jp
and
sub
xchg
inc
or
test
add
outsl
push
das
test
lahf
adc
in
xlat
movsb
dec
stos
push
or
inc
or
dec
or
xor
xchg
pop
imull
outsb
lret
pop
lcall
shrl
push
or
gs
xor
adc
inc
xchg
xlat
gs
sbb
hlt
pop
dec
xchg
add
gs
mov
or
dec
mov
imull
testb
daa
addr16
jbe
loope
mov
imul
lret
ret
in
addb
xchg
pop
les
cmp
and
mov
inc
gs
pop
mov
cmp
cmp
jge
jnp
cmpl
mov
loope
sub
cmp
jne
push
inc
arpl
dec
lods
or
fistpll
mov
jecxz
cmp
inc
cmp
js
stc
ds
mov
adc
clc
outsb
fidivrs
add
ja
sub
xor
xchg
aas
mov
sbb
or
push
xor
insl
outsl
out
dec
xchg
out
xchg
call
out
dec
dec
cmp
incl
inc
mov
xor
adc
xchg
cli
xchg
xchg
repnz
shr
and
dec
or
sub
out
xor
inc
sbb
orb
dec
mov
mov
test
int
out
lea
jo
insl
hlt
pop
lea
ret
mov
cs
mov
popf
sub
xchg
pop
test
lcall
mov
in
push
repz
jmp
mov
clc
js
xor
ds
pop
addr16
jnp
fwait
test
fst
xor
xor
dec
push
sub
cmpsl
sbb
jle,pt
movl
push
fs
mov
cmp
arpl
test
and
into
nop
addb
mov
cld
imul
cld
jecxz
xchg
popf
inc
cmp
jge
and
out
arpl
xor
xchg
cmp
dec
jnp
add
xchg
or
pop
lea
pusha
ret
adc
ret
lcall
add
idiv
or
dec
enter
mov
xchg
xor
push
pop
inc
pop
jo
mov
sub
xor
subb
xlat
cs
aad
adc
and
add
jb
pop
xor
clc
mov
hlt
test
lret
gs
pop
stc
lcall
cmp
push
mov
incb
inc
jle
mov
lea
xor
in
jnp
in
sti
rol
js
sbb
imul
cmp
fstpt
out
jbe
cmp
pop
out
pop
addb
mov
es
jle
divl
sbb
pushl
faddl
inc
stos
out
into
outsl
cltd
lret
cmp
cmp
mov
movsb
mov
push
out
mov
adc
out
inc
iret
cmpb
pop
test
push
cmpsl
xor
pop
inc
aas
sbbl
cmp
leave
push
mov
jns
mov
mov
add
or
sbb
cmpb
popa
push
lret
dec
ret
lods
mov
popf
pop
cmc
sbb
push
test
mov
adc
pushf
mov
xchg
jb
cmc
loope
into
dec
ret
push
adc
aaa
or
mov
xor
pop
rcll
add
arpl
cmp
jmp
cmpsb
mov
enter
push
push
mov
mov
pop
scas
sub
dec
jns
dec
int
dec
pop
dec
scas
sbb
pop
jno
inc
mov
rep
pop
xchg
shlb
xor
bound
inc
aad
inc
cld
push
cmp
sbb
dec
jb
out
mov
sbb
push
out
xchg
add
cs
jb
sbb
out
aam
fldcw
jne
jnp
ja
out
mov
mov
outsb
mov
scas
mov
xlat
add
popf
orb
fnstcw
lcall
sub
or
pop
jno
popa
scas
in
mov
ds
stos
mov
pop
push
pop
or
mov
cltd
imul
insb
add
loope
mov
xchg
inc
cld
add
pop
or
adc
sub
mov
mov
jne
inc
or
xchg
aad
mov
cmp
pop
frstor
or
aas
lcall
icebp
jo
pop
cld
push
sbb
data16
addr16
stc
xchg
sbb
inc
in
push
add
xchg
loope
push
nop
push
hlt
xchg
or
dec
cs
push
inc
dec
sbb
inc
push
cli
and
adc
cmp
fsubrs
les
adc
mov
dec
mov
inc
push
add
xchg
mov
mov
and
mov
and
sbb
xchg
add
cmpsb
add
add
addr16
dec
sahf
dec
pop
bound
js
mov
and
stos
arpl
imul
in
cmp
es
int
outsl
pop
scas
push
mov
inc
and
mov
incl
in
fsubs
add
dec
cmp
push
leave
outsl
add
push
pushl
repnz
lods
arpl
mov
pop
sbb
imul
cwtl
dec
push
dec
jle,pt
mov
dec
mov
dec
xor
cmp
rolb
call
in
dec
andl
sub
cmc
in
and
inc
push
out
adc
jbe
in
add
xchg
push
push
push
fsubs
scas
jp
test
xor
pop
test
insb
dec
stos
inc
lock
xchg
adc
xchg
xchg
std
stc
pop
and
enter
xchg
hlt
push
add
add
movsl
lret
out
das
inc
ja
into
addr16
push
xor
pop
and
push
les
cs
fwait
or
es
out
iret
jmp
ret
xor
stos
je
test
xor
fisttpll
mov
and
arpl
fisubs
fbstp
fbld
mov
or
sbbb
push
stos
loope
out
sub
lods
xchg
xchg
repnz
test
subb
imull
jecxz
mov
jb
ljmp
cmp
push
xor
std
fsubs
mov
fcmovnb
test
xchg
sub
inc
push
lahf
mov
fwait
pop
pop
mov
call
sbb
clc
mov
orb
xchg
push
cmp
jb
scas
sbbl
addb
scas
push
into
mov
mov
ffree
in
divl
mov
gs
fmull
arpl
mov
push
jne
aaa
sub
and
popa
dec
fsts
mov
mov
cmp
mov
sub
pop
push
or
add
push
int3
les
mov
or
jb
jae
jns
sbb
adc
inc
jmp
jg
pop
dec
jl
fisubrs
add
out
lods
in
inc
jmp
add
sub
in
fstpl
shll
jbe
jno
sbb
pop
mov
sub
aas
add
int
fistpll
mov
mov
stc
dec
aaa
xchg
xor
sbb
loope
adc
adc
ret
xchg
lods
sti
adc
mov
fisubl
and
fwait
in
lea
int
sub
dec
jl
xchg
bound
test
lds
jae
xchg
inc
clc
lahf
sbb
sbb
fwait
mov
jp
pop
lret
add
in
jmp
ss
dec
xchg
push
lods
mov
or
dec
aaa
push
push
enter
enter
into
add
mov
in
or
push
sub
add
mov
pop
iret
add
sub
pop
lods
jp
div
movsb
adc
pushf
inc
jno
adc
inc
shl
mov
xchg
test
sbb
es
pop
pusha
pusha
into
inc
push
clc
pop
ss
sub
ret
repnz
sbb
lcall
fcompl
cmp
sarl
or
daa
ja
cmpsb
lds
add
jmp
mov
in
fs
cmp
idivb
ja
ret
pop
rolb
loop
mov
repnz
imul
mov
mov
subl
dec
mov
xchg
xor
mov
lock
xchg
and
les
dec
pusha
jmp
pusha
sti
sbb
add
push
loope
cmpsl
and
pop
mov
cs
rcr
pop
je
add
cmp
test
sarl
xchg
les
cmp
push
jecxz
and
add
xorb
push
aaa
addb
leave
add
arpl
sub
mov
pop
je
add
fisubs
jle
addr16
fmuls
test
xor
add
xor
pop
jle
fs
popa
push
jge
cmp
lret
xchg
mov
roll
fisttps
pop
jg
test
push
add
in
das
push
fs
push
sub
les
and
xchg
lret
ss
arpl
sbb
cmpsl
adc
inc
lods
outsl
or
mov
inc
je
iret
cmc
and
pushf
adc
lret
pop
mov
dec
xchg
cmp
pop
add
mov
mov
in
dec
cmp
cmp
sbb
jne
mov
xor
inc
inc
jo
pop
mov
add
std
in
ljmp
dec
clc
lock
ret
enter
mov
loopne
je
repnz
imul
cli
push
cmc
jp
sub
mov
jmp
negl
loop
and
sbb
xchg
out
imul
stos
push
test
jmp
fisubl
ja
pop
mov
sbb
outsl
mov
test
inc
test
stos
loopne
lods
and
and
cmp
outsl
jle
push
push
test
popf
es
btc
push
mov
cmpsl
sub
mull
xchg
mov
dec
mov
push
cmpsl
fidivrl
sbb
out
push
add
mov
imul
in
inc
nop
xchg
popf
cmc
lods
inc
mov
mov
dec
mov
xchg
sbb
fcoml
xchg
push
and
add
cmc
scas
scas
bound
cmpsb
mov
leave
je
add
je
pop
in
adc
movsb
inc
mov
xchg
addb
int3
cmp
jl
or
aad
stc
rorl
sub
jecxz
jb
cmp
add
xchg
nop
sbb
mov
pop
sbb
and
clc
xor
xor
call
add
sar
shlb
cltd
mov
inc
add
pop
dec
adc
mov
clc
lea
cs
cmp
jl
push
les
pop
inc
push
loop
iret
mov
in
xor
pop
popa
mov
test
sub
mov
int
jbe
pop
movsb
sahf
push
mov
fwait
insb
and
clc
orb
rcl
and
push
cmp
push
in
pusha
adc
jbe
lret
fstpt
and
sbb
xchg
jmp
shrb
fmuls
test
dec
outsb
xor
insl
cmp
arpl
mov
js
mov
sbb
mov
sbb
int3
daa
and
xor
je
sbb
es
stos
sbb
jb
test
popa
push
and
call
xor
mov
and
pop
cmp
cmp
movsb
int3
jecxz
pop
jo
mov
je
cltd
fwait
inc
mov
xor
or
shrl
inc
mov
or
ret
mov
sarl
hlt
xchg
mov
clc
jp
cmp
jmp
test
adc
shll
pop
loope
pusha
idivl
mov
arpl
or
xor
bnd
cmp
mov
sbb
mov
and
std
mov
mov
and
test
lahf
jae
xrelease
cld
push
mov
push
jbe
jge
mov
xor
popa
popa
pop
outsb
cmc
aaa
cmpsl
adcl
dec
call
push
leave
push
pop
pop
xor
dec
inc
in
iret
out
stos
jns
xor
inc
mov
xor
jne
mov
movl
push
dec
dec
ficomps
adc
mov
add
andl
mov
xchg
pop
sub
loopne
rcl
fisubs
movsb
mov
inc
outsl
rol
aam
outsl
ds
xchg
aad
aas
rorl
cmpsb
rcl
fwait
pop
mov
test
mov
sub
sti
clc
out
add
sub
mov
nop
mov
cli
mov
movsb
and
cld
incl
pop
fwait
mov
push
popf
jge
stos
push
mov
sahf
and
pop
pop
loope
push
jne
testb
inc
push
adc
insl
mov
push
xchg
and
xchg
mov
rcrl
cmp
imul
sbb
mov
pop
into
inc
xchg
cmp
cmp
mov
inc
mov
dec
dec
lods
cltd
fs
ret
ljmp
enter
jp
inc
add
in
push
daa
sbbl
cmc
mov
out
adc
aad
inc
mov
shl
pop
mov
xchg
sbb
sbb
adc
outsl
xor
pop
mov
mov
addl
pusha
loopne
push
push
fstpt
push
frstor
push
in
or
pushf
aam
push
dec
lcall
cltd
push
mov
test
fisttps
pop
mov
rcr
mov
inc
ja
xchg
and
mov
pop
jno
ss
cs
inc
push
cmpsb
fistps
fdivl
dec
fwait
cli
pop
jge
xor
ret
fldl
test
js
daa
pop
xchg
mov
push
iret
in
push
iret
inc
les
mov
daa
mov
add
shl
mov
int
rcll
sub
adc
dec
fsub
ss
mov
imul
xchg
jnp
or
js
push
cltd
cwtl
and
jge
jae
ja
mov
adc
dec
mov
out
popa
xor
fldenv
stos
pop
xchg
enter
dec
aam
mov
arpl
lea
rorl
mov
push
push
shrb
fiaddl
andl
inc
out
sub
mov
mov
add
mov
xor
cmpsl
std
sub
shll
xlat
mov
cmp
mov
mov
cmp
dec
xchg
cmp
jb
clc
in
add
jne
es
lret
bound
mov
xchg
jge
shrl
mov
jle
incl
adc
mov
dec
stc
xor
or
mov
mov
fists
sub
push
xorl
add
mov
ja
sahf
xchg
out
lods
mov
pop
fimull
iret
decl
test
xchg
loope
lahf
clc
mov
xlat
cwtl
les
std
test
add
rcrb
idivb
iret
cmp
into
lds
addr16
cwtl
dec
outsl
addb
imulb
push
test
push
lock
sub
pop
dec
pusha
inc
out
or
imul
popa
fists
aas
rcll
popf
arpl
and
xor
out
mov
mov
shll
les
jns
mov
jle
gs
repz
dec
repnz
adc
ret
dec
mov
dec
jecxz
test
xchg
sub
bound
dec
mov
int3
cmp
cmc
xor
lret
in
rcr
pop
xor
mov
movsl
and
and
fld
dec
xor
and
inc
adc
mov
cwtl
int
leave
jb
inc
xchg
shrl
lret
push
mov
add
arpl
stos
dec
aam
mov
mov
lret
test
pop
push
xor
mov
ljmp
outsb
repnz
fwait
xor
jecxz
xchg
mov
data16
lahf
inc
push
jmp
ja
les
nop
lcall
cmp
lea
pop
jecxz
aam
es
pop
roll
cmc
ss
std
jnp
sbb
and
mov
push
jmp
test
push
sahf
push
test
push
xor
push
out
ror
lret
bound
loopne
mov
sahf
xlat
test
lods
xchg
int3
or
jo
pop
lods
fidivrl
shlb
ret
frstor
das
fists
fbld
daa
flds
dec
out
fimull
mov
sub
add
dec
sbbl
data16
push
push
lcall
in
bound
adc
pop
dec
pop
les
mov
shll
push
testl
shrb
je
adc
mov
dec
sub
dec
pop
xchg
out
out
dec
loopne
cmc
incb
in
sub
rcrb
gs
mov
stos
push
push
fimull
pop
adc
insl
push
mov
jae
push
sub
mov
repz
add
fwait
mov
mov
mov
out
cli
push
jecxz
repz
fnstenv
xor
call
mov
push
gs
in
cmpsl
pop
sbb
sbb
sarl
and
aas
jle
aad
xor
cmpsl
and
inc
jle
addr16
add
cs
adc
add
add
push
adc
fstpt
adc
pop
nop
lods
ljmp
cmp
add
add
xchg
mov
icebp
and
push
arpl
std
jns
in
int
xchg
fsub
into
test
test
movsl
push
pop
push
mov
cmp
fildll
mov
ds
call
dec
int
xor
cmp
and
leave
sub
bound
dec
jecxz
push
insl
sub
pop
daa
mov
rorl
loop
dec
xchg
aas
push
ljmp
xchg
in
leave
mov
mov
sub
mov
subl
ficompl
pop
xor
adc
dec
xor
out
mov
mov
ds
je
std
cmp
stos
xor
aaa
loopne
pop
lea
push
lahf
out
mov
into
es
fs
loope
outsb
out
push
add
sbb
add
bound
fisttpll
push
nop
add
mov
pop
out
in
push
es
out
add
add
pop
xchg
jg
das
add
and
and
sub
jge
xchg
xor
jbe
mov
inc
jle
pop
scas
in
icebp
xlat
or
jle
mov
fsubrs
in
notl
dec
dec
inc
push
daa
in
dec
loopne
cmp
ja
repz
in
push
mov
insb
xor
inc
sarl
pop
clc
adc
xchg
adc
mov
dec
aam
sti
add
in
dec
das
mov
push
dec
stos
lods
sbb
js
mov
push
fwait
and
or
lea
loop
push
cwtl
xchg
cli
aam
ret
sbb
jmp
jno
mov
mov
xchg
inc
outsb
inc
xchg
add
ljmp
sub
bound
das
ds
mov
fsubp
add
