push
mov
sub
push
movl
add
call
mov
mov
add
push
addl
call
mov
push
movl
addl
sub
call
mov
add
inc
mov
add
cmp
jne
add
add
sub
jmp
mov
add
sub
movl
add
ret
mov
add
lea
mov
add
mov
add
cmp
jae
add
nop
inc
add
jmp
mov
add
mov
add
add
jmp
or
xchg
ljmp
push
fyl2x
mov
xchg
dec
cmc
test
pop
decl
scas
lods
mov
fdiv
ja
jge
xor
sarb
xchg
fdivs
jae
xor
fcomps
sbb
icebp
nop
pop
fcompp
push
xchg
fdiv
push
cmc
fyl2x
insl
jnp
hlt
insb
xchg
arpl
and
jle
xchg
fdivs
push
xchg
lret
xchg
out
fiaddl
movsl
xchg
add
gs
pop
mov
sbb
jmp
sarb
imul
xor
mov
icebp
jmp
xchg
fdivs
pop
rolb
pop
xchg
arpl
and
repnz
rcr
jb
mov
dec
cli
cmp
push
cs
add
jl
iret
gs
or
xchg
dec
push
fiaddl
icebp
mov
dec
add
fisubrl
fdiv
shr
sarb
xchg
fdivs
inc
rolb
inc
xchg
arpl
xchg
mov
push
rcr
addb
movsb
push
movsl
sbb
clc
mov
icebp
xchg
xchg
mov
jne
fdivl
repnz
sbb
xchg
fdiv
sbb
icebp
ss
fdiv
xor
les
and
push
or
arpl
or
lretw
pop
les
and
gs
or
pop
or
popa
lret
sub
das
es
inc
push
mov
inc
push
cltd
hlt
dec
imul
dec
pop
movsl
pop
push
cwtl
jecxz
popa
xchg
cmp
xchg
clc
dec
and
das
es
inc
fs
or
pop
pop
incl
xchg
push
dec
push
movsl
cs
lea
dec
push
xchg
dec
push
jle
push
dec
addl
ds
mov
pop
push
xor
fcoms
adc
adc
push
loopne
setae
icebp
stc
test
push
movsl
sbb
cltd
adc
sub
mov
jnp
repnz
sbb
xchg
adc
sub
mov
ljmp
xchg
popa
je
movsl
sbb
lea
sub
mov
ljmp
xchg
popa
je
movsl
sbb
xchg
sub
stos
pushf
ljmp
xchg
popa
je
movsl
sbb
adcl
ljmp
xchg
popa
je
movsl
sbb
mov
arpl
inc
ljmp
push
adc
aas
inc
mov
fdiv
pop
iret
pop
xor
fcomp
icebp
pop
pop
outsl
icebp
dec
outsl
repnz
or
or
or
inc
call
out
loopne
sahf
push
adc
pop
fwait
arpl
jecxz
cwtl
push
cwtl
pop
mov
jge
dec
pop
push
fnsave
adc
lock
or
ret
and
add
sub
add
aad
xchg
enter
arpl
pop
or
int
arpl
rcll
sbb
mov
out
xor
pop
fwait
cli
sbb
or
les
sbb
dec
sub
adc
pop
loop
pushl
ret
idivl
fs
mov
push
out
or
sbb
mov
fyl2x
notl
jmp
mov
fs
lods
idivl
mov
fdivrs
arpl
mov
rcr
sub
stos
dec
jne
hlt
aas
rcl
fdiv
cld
scas
ret
imull
push
fs
shlb
lahf
fadds
sub
pop
repnz
rcr
push
int3
sbb
inc
mov
xchg
arpl
sbb
sti
mov
fdivrs
xchg
fdivs
popf
adc
sbb
pop
mov
lcall
repz
xchg
dec
add
xchg
loope
or
xor
scas
mov
icebp
xchg
xchg
sub
inc
loop
rcll
sbb
sbb
ret
pop
sbb
pop
fnsave
stos
pop
mov
jecxz
icebp
cmp
cmp
rcr
jp
sbb
lahf
testb
fnstsw
test
cmpsl
rorl
fdivs
cld
xchg
fsubs
sbb
loope
fs
pop
jmp
pop
adc
xlat
out
ficomps
fldenv
fcoml
aam
movsl
pop
clc
push
cltd
xchg
call
xor
les
pusha
xchg
fdiv
mov
fiaddl
mov
and
push
push
fsubl
jge
mov
out
jg
scas
push
xor
sbb
fsubrs
sbb
xchg
fsubl
mov
mov
bound
inc
repnz
xchg
fcomps
xchg
xchg
xlat
test
out
jnp
xchg
ljmp
inc
fiadds
xchg
xchg
gs
fcomps
repnz
sub
fdivs
arpl
and
jb
mov
mov
pop
rcr
stos
dec
xchg
ds
inc
repnz
inc
inc
fiadds
xchg
sbb
shl
shlb
addr16
mov
insl
jge
inc
jp
repnz
xchg
dec
call
cmp
ret
cwtl
ficoml
mov
hlt
jp
jmp
icebp
inc
push
dec
jmp
or
repnz
add
test
shlb
fcomp
pop
ds
fisubl
imul
adc
iret
fsubrs
xchg
dec
cld
stos
mov
fs
adc
sbb
mov
call
int3
xchg
cmpb
cmc
pop
fidivrs
fsubr
ret
in
mov
icebp
push
movsb
mov
icebp
popl
jnp
mov
push
fldl
