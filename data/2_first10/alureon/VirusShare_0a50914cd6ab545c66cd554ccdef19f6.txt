xchg
xchg
push
sub
mov
mov
pop
xchg
xchg
push
push
pop
pop
mov
xchg
xchg
sub
xchg
xchg
sub
mov
sub
mov
push
pop
pop
sub
mov
sub
mov
pop
pop
call
and
pop
nop
push
sbb
add
jno
call
pop
ret
xlat
or
dec
inc
ret
add
testl
add
stc
pop
and
adc
push
adc
out
gs
add
sub
js
push
lcall
clc
pop
fimull
jg
xor
iret
xor
mov
sbb
mov
adc
inc
imul
pop
xchg
nopl
inc
pusha
inc
adc
or
adc
gs
adc
inc
push
inc
pop
inc
push
daa
pop
jbe
lods
std
mov
xor
or
mov
add
push
sub
add
sbb
and
push
xchg
or
insl
jae
or
pop
cmp
pop
arpl
aad
mov
push
dec
and
imul
stc
fildll
rcrb
push
mov
push
or
or
or
loopne
rorb
pop
mov
subl
aas
push
pop
jecxz
data16
pop
testb
xchg
in
or
out
or
adc
lea
mov
jmp
or
or
and
fists
sbb
push
lock
or
or
nopl
in
test
sbb
xor
sub
orl
or
ret
push
sbb
xchg
push
mov
decl
pop
stos
dec
mov
std
sub
add
lret
rcll
mov
pop
cmp
and
xchg
inc
fsubrs
pop
shrl
add
fidivs
adc
jle
sub
hlt
ret
hlt
push
push
push
sub
jne
jne
in
lcall
std
outsl
outsb
adc
pushf
repz
cmp
push
adc
bts
in
fbstp
push
inc
pop
ss
aaa
inc
ret
push
push
stc
inc
sub
insl
mov
in
in
mov
push
dec
push
push
shll
cmpl
enter
jne
cmpsl
mov
xchg
dec
call
addl
out
ds
xchg
push
add
ret
scas
int
sbb
lods
sbb
sbb
cmp
push
mov
and
xchg
movl
push
adc
and
scas
imul
and
cmp
and
push
jo
cmp
fcoml
cmp
pop
cmpsb
adc
into
inc
cmp
pop
ficoms
push
arpl
push
aas
xchg
sbb
les
push
loop
adc
test
mov
push
or
in
int
jecxz
dec
add
roll
sub
inc
adc
add
pop
fucomip
add
xchg
lea
mov
jmp
sub
push
mov
sbb
mov
sbb
adc
prefetchnta
dec
push
push
pop
xchg
sbb
push
loope
add
inc
cltd
stos
xlat
aaa
cmp
mov
cmp
pop
imul
leave
or
pusha
sti
sbb
add
ret
ret
in
or
sub
call
divl
in
xchg
or
dec
mov
pop
testl
jae
sub
pop
lods
fistl
mov
push
xor
sub
add
int
ret
andl
ret
inc
stos
por
out
dec
dec
jecxz
adcb
adc
hlt
dec
and
dec
cld
scas
out
mov
sbb
adc
sbb
mov
insl
mov
mov
rorl
rcrl
aaa
stos
pop
cmp
sub
adc
mov
aad
andb
int
into
rorl
jb
rcrl
jmp
ds
lahf
aad
jmp
sbb
pop
mov
sbb
sahf
fmull
mov
or
pusha
or
mov
adc
mov
jecxz
popa
xchg
in
addl
ljmp
es
pop
pop
out
ss
outsl
lock
lahf
icebp
sub
in
cmp
aaa
in
add
jecxz
add
dec
xor
inc
adcl
add
jne
or
or
out
xor
mov
and
pop
mov
jmp
xchg
ss
dec
mov
xor
cmp
fcmovne
xchg
repz
xchg
cltd
jmp
popa
jle
add
sbb
push
sub
adc
push
inc
mov
adc
gs
pop
dec
push
mov
xchg
das
mull
test
inc
mov
xor
repnz
hlt
add
sbb
cld
xor
sbb
or
lcall
arpl
out
inc
pop
loopne
xchg
or
jge
and
adc
sub
sbb
cmp
inc
cmp
add
movsb
into
test
and
add
clc
dec
cmpsl
addl
mov
dec
add
loop
cmp
pop
jns
into
push
fwait
mov
push
xlat
jne
jo
inc
or
and
js
dec
mov
xchg
lahf
jecxz
xlat
arpl
xorb
mov
jno
or
repz
or
dec
pop
xchg
ret
pop
or
dec
inc
int3
xchg
cmp
call
xor
xor
rcrb
fs
pop
sbb
lcall
inc
mov
les
fmull
add
ret
mov
adc
pop
dec
lds
ja
push
cmp
mov
sbb
dec
les
mov
dec
fmul
add
sub
loop
into
ja
sbb
and
push
inc
sub
fsubl
xlat
nop
push
das
sbb
je
xlat
or
in
iret
fnstcw
out
in
dec
shll
mov
cmp
popf
and
hlt
pop
call
jge
insl
push
test
or
sbb
divl
cmp
inc
popa
push
ja
in
add
mov
sti
hlt
mov
mov
notb
pop
and
dec
adc
xor
lock
add
sbb
sub
dec
push
dec
test
cmp
mov
mov
lds
push
mov
xor
push
rcll
imul
add
xor
data16
lea
dec
insl
leave
jno
ja
es
push
mov
imul
xor
add
jne
sbb
cmpsb
dec
sub
aas
dec
mov
movsb
popa
push
cmp
mov
inc
popa
push
std
jle
adc
push
lods
and
outsl
mov
jne
insb
push
aad
gs
addl
sbb
or
xor
in
adcb
pop
or
adc
mov
push
test
push
pop
cmp
and
pusha
lcall
loop
rcll
push
push
outsl
movzbl
pop
or
pop
push
gs
fisttps
popa
push
or
mov
pushf
and
decb
inc
jo
cmp
mov
lcall
mov
dec
push
or
fsubp
adc
xor
jne
push
push
pushf
incb
inc
out
insb
xchg
call
fadds
push
js
and
popl
mov
xchg
mov
sbb
sub
hlt
cltd
inc
and
xchg
jbe
dec
sub
stos
adc
and
xchg
divb
jno
mov
sub
mov
push
loopne
cmp
adc
jns
inc
and
jge
int
xchg
aad
adc
xor
adc
call
insb
stos
test
je
int
lahf
adc
adc
xor
divl
pop
sbb
and
out
xor
dec
mov
mov
and
push
cltd
movsb
pop
cmp
in
fisttpll
pop
pushf
fistpl
jne
test
cwtl
xchg
adc
xchg
insb
pop
dec
lods
loop
sub
or
cmp
and
xor
sbb
dec
push
sbb
xchg
jge
xor
push
test
dec
lods
pop
and
pop
sub
dec
movsb
insl
add
and
mov
sbb
mov
or
and
mov
sbb
jmp
stos
or
and
sti
cltd
in
insl
adc
or
jbe
lea
fs
jbe
ret
xchg
sub
popf
sbbb
xchg
inc
insb
inc
gs
pop
and
dec
push
pop
adc
add
push
loopne
push
xchg
pushf
jmp
inc
adc
push
ja
lds
arpl
leavew
pop
imul
leave
pushf
repz
push
push
mov
popf
adc
in
mov
das
cld
inc
cmpsb
sub
and
add
dec
iret
push
out
sti
cmp
inc
lds
cs
stos
std
imul
push
xor
int
imul
cmp
cmp
lods
xor
cmpsl
aaa
and
cmc
adc
inc
or
mov
push
mov
jge
imull
dec
bound
push
push
xlat
mov
xchg
mov
dec
fwait
addr16
in
inc
pushl
or
loop
mov
inc
xchg
push
push
fistps
and
sub
loopne
inc
mov
lea
xor
fldenv
mov
sub
adc
xor
loop
push
and
mov
subl
or
mov
fisttps
inc
mov
ds
sub
vcmpps
xchg
xlat
lods
inc
push
bound
loop
mov
adc
jns
or
call
jno,pn
pushf
adc
pop
xor
lret
out
push
push
popf
sub
or
pop
ret
in
lea
loop
or
pop
insb
xor
mov
sub
loopne
in
xor
adc
pop
or
and
jbe
push
sbb
andb
popf
shrb
push
lcall
add
or
imul
in
inc
and
xor
jbe
nop/reserved
xor
add
call
sahf
jmp
jo
cs
cmpl
xchg
ja
pop
and
adc
sbb
int3
jns
movsb
pop
mov
imul
cmp
arpl
orb
xchg
loopne
cwtl
ds
sbb
jmp
xlat
popa
xor
jns
push
jp
addr16
lcall
push
arpl
and
push
mov
mov
lahf
test
add
push
inc
aas
and
out
mov
mov
adc
jo
cmpl
or
or
pop
inc
mov
sub
mov
adc
dec
testl
enter
sbb
and
pop
xchg
iret
dec
fdivr
repz
movups
pusha
pop
sub
loopne
adc
ja
jbe
xchg
and
xchg
or
add
std
cmp
or
jmp
scas
inc
pop
adc
pop
xor
push
dec
push
or
ds
xor
cmpsb
pushf
cmc
push
push
jle
sub
or
mov
bound
sti
jle
pusha
test
xchg
loop
xchg
cmp
or
sub
and
pop
xor
add
ret
sbb
fs
das
hlt
outsl
pop
pusha
data16
clc
fldt
or
add
pop
cs
gs
repz
pop
jo
movb
adc
push
or
or
adc
sbb
popa
popa
in
jbe
es
jns
iret
insb
sti
fwait
mov
imul
xor
push
das
push
cmp
mov
inc
sbb
cmp
or
sub
inc
stc
int
inc
mov
cmp
insl
push
cmpsl
mov
es
add
push
inc
xor
sbb
jl
lock
sbb
xchg
or
push
popf
imul
daa
sahf
sbb
movsb
enter
lret
pop
push
popa
add
push
push
cmp
push
gs
add
xor
push
inc
inc
push
pop
popl
insl
hlt
test
outsl
or
sbb
orb
jne
jno
dec
outsb
mov
sbb
bound
xor
inc
or
dec
insl
pop
sbb
xor
jns
mov
cmp
imulb
inc
xor
inc
push
jb
movsb
pop
test
adc
addr16
cmp
imul
outsb
andb
subl
jl
ja
adc
pop
dec
imul
sahf
lcall
adc
jae
dec
push
cmp
nop
and
pop
dec
jns
icebp
adc
add
push
jno
es
rcrl
mov
arpl
sbb
and
sbb
and
and
and
dec
xchg
ret
ds
loop
cmp
and
cmp
or
sub
aaa
roll
sub
pop
sub
cmp
mov
sbb
test
cwtl
mov
add
or
and
pop
popf
xchg
add
pop
xor
inc
push
sarb
xor
clc
jbe
jbe
add
cs
dec
sbbl
push
xor
cli
dec
or
xchg
and
lcall
lods
pop
lcall
imul
dec
shlb
repnz
cmpsl
cmp
pop
or
jno
or
or
add
rcll
mov
dec
dec
push
mov
pop
dec
insb
jno
insb
mov
fdivrs
movsl
cmp
inc
cmp
cmp
adc
xor
push
pop
push
dec
add
dec
dec
xorb
rclb
dec
mov
push
jae
icebp
pusha
push
dec
mov
xchg
inc
and
mov
adc
jne
stc
or
fs
popa
pop
inc
lea
sub
cltd
push
jmp
das
enter
and
dec
sbb
sub
add
cld
xchg
pushf
cmpsb
add
add
jl
xorl
push
or
lahf
in
mov
sub
push
pop
into
mov
pushf
arpl
mov
rolb
sub
lahf
xor
in
sahf
xchg
xchg
pop
xchg
in
dec
jno
and
outsb
jb
mov
mov
aas
or
jp
mov
xsha1
cmpsb
push
out
dec
outsl
stc
jnp
dec
cmp
push
nop
and
mov
sbb
cmc
sbb
sub
jb
out
pop
out
ret
push
xchg
add
in
xlat
sub
jp
mov
test
sub
pop
lret
jne
and
psubsw
push
jns
jo
push
pop
jnp
inc
add
ret
push
insb
stos
jnp
insl
sbb
mov
pop
push
cmp
shl
outsb
xchg
mov
sub
cmpsl
std
jns
stc
jo
xor
adc
mov
or
pop
daa
aad
mov
dec
mov
pop
dec
push
inc
cmp
jno
cs
sbb
out
nop
adc
popf
jmp
adc
mov
sub
cmp
push
orl
push
jp
scas
add
cmpsb
insl
or
lods
and
mov
fistpl
adc
lcall
movsb
dec
or
dec
sbb
jne
add
rcrb
and
jge
or
sbb
lahf
or
adc
or
xchg
clc
aaa
in
jl
pop
ja
es
adc
jge
sub
push
pop
pop
jae
cmp
icebp
or
cmp
add
js
push
ljmp
mov
xchg
cmpsb
adc
push
xchg
imul
in
add
jns
shll
dec
or
add
jo
lret
push
and
mov
push
std
add
and
and
ret
dec
mov
xlat
mov
mov
jmp
imul
pop
xor
sbb
testb
pushw
icebp
lods
push
xor
pop
jo
jno
inc
add
push
jl
adc
jg
call
lcall
in
lea
cli
cmp
xchg
jno
and
je
add
jmp
sbb
fldcw
mov
mov
mov
add
cmpl
clc
cld
test
les
ror
sarb
xlat
std
fbstp
notl
icebp
jmp
loop
sti
in
je
or
hlt
aad
in
xchg
sahf
lock
fwait
in
hlt
sbb
nop
in
or
loope
sarb
add
pop
and
or
gs
push
movlpd
stc
push
adc
jmp
pop
test
jbe
add
dec
cmp
movsl
dec
cmp
add
xchg
xorl
xor
sub
aaa
push
cmp
push
pop
cmp
inc
sub
inc
das
pop
pop
dec
and
and
dec
push
cmp
push
pusha
sbb
add
popa
add
jp
push
insb
push
ja
out
adc
mov
lcall
mov
movsl
iret
aaa
cmpsl
test
pop
stos
lods
aam
scas
je
lods
add
shll
mov
ret
lds
sbb
mov
and
aaa
mov
leave
add
shl
in
call
in
xchg
add
cwtl
in
xchg
mov
outsl
sbb
or
bound
or
adc
jae
add
push
gs
sub
cmp
dec
push
cmp
lods
xor
lods
sub
and
subb
orl
xor
es
add
cmpsl
push
add
cmp
add
xor
inc
pop
push
adc
mov
imul
mov
adc
cmp
mov
shll
add
aad
mov
dec
add
add
pushf
jmp
add
insb
sbb
pop
imul
add
cmp
and
cs
adc
push
add
and
push
add
and
add
pop
jle
pop
push
insl
and
test
sub
mov
jl
mov
cvtpi2ps
lods
sbb
mov
pop
cmpsl
or
xor
pop
popf
jg
pop
cltd
and
cmp
out
or
push
loopne
sub
push
aaa
int3
inc
call
or
js
es
add
leave
sub
mov
add
pop
sbb
xor
imul
outsb
pop
xchg
aad
movsb
in
rolb
xor
in
scas
andnps
stos
dec
pop
jp
cmpl
jge
lods
inc
repnz
sahf
sbb
incl
adc
add
loope
push
adc
outsl
fwait
mov
add
fistpl
fs
popa
sti
insb
add
push
or
clc
out
push
imul
cmp
inc
sub
pop
or
arpl
mov
ret
faddp
cltd
out
add
sub
fdivrl
xor
mov
lds
dec
shll
aaa
cmc
pop
add
out
adc
pop
push
fidivrl
xchg
cmpsl
in
mulb
push
xchg
sbb
outsb
xchg
sbb
adc
mov
adc
psllq
cmp
out
sbb
pop
inc
mov
loope
pop
data16
or
in
cltd
add
call
mov
rol
jl
test
imul
rcr
sbb
test
mov
add
int3
add
std
mov
dec
repnz
mov
sub
push
movsb
cltd
pusha
dec
scas
xchg
sub
lods
xchg
imul
pop
mov
push
bound
lcall
aaa
ret
push
or
jbe
call
cmp
adc
jno
and
sbb
pop
arpl
push
pop
lret
or
imull
push
fstpl
pop
adc
xchg
jecxz
out
loope
nop
or
stos
bound
jmp
jb
add
push
fsubrs
push
jg
adc
inc
int3
push
jb
sbb
out
mov
xchg
imul
stos
in
subb
cli
pop
mov
icebp
iret
or
xchg
outsl
pop
pop
ret
pop
test
add
jns
andb
test
leave
xor
mov
or
popa
xor
call
jmp
pop
repnz
cld
insb
xchg
ljmp
in
aam
xchg
push
sub
insl
push
jle
daa
xchg
arpl
add
mov
lea
dec
in
push
mov
or
sub
mov
stc
imul
add
dec
mov
add
xchg
jg
pop
mov
pop
das
ss
jb
add
mov
xchg
push
nop
lcall
ds
cltd
imul
xor
cwtl
punpcklbw
arpl
test
ror
fistpl
decb
imul
mov
cmp
sbb
je
add
adcb
pusha
jl
sbb
loope
sbbb
sbb
push
add
adc
addr16
or
adc
ja
dec
and
les
icebp
cld
popf
or
push
repnz
shrl
or
into
fcompl
mov
out
imul
push
pop
pop
pop
sub
cmpsb
dec
xorb
nop
bound
nop
inc
andl
cmp
loop
push
sbb
sbbl
dec
sbb
ret
and
and
xor
push
sti
add
mov
xor
and
je
push
imul
and
lret
mov
pop
push
scas
in
add
cmp
mov
xchg
pop
ds
aam
cld
shl
rcrb
insb
push
out
lahf
daa
ret
pxor
js
jmp
xor
repnz
xorb
scas
loope
fldenv
fwait
insl
add
cmp
mov
in
aam
add
inc
daa
mov
loope
push
mov
adc
sub
mov
pop
roll
push
sbb
cmp
push
sbb
testb
movsb
shrb
push
filds
mov
repz
sub
jge
std
nop
subl
int
add
mov
jge
inc
lds
mov
inc
aam
andl
adc
push
pop
cmp
daa
push
lahf
clc
and
rcrl
fcmovu
inc
ficoms
jb
and
cld
aaa
ror
popa
imul
xchg
push
push
push
and
cmpsl
insl
mov
insb
xor
insl
or
loop
pop
mov
pop
cmp
xchg
push
pusha
add
sub
mov
lods
iret
shl
xchg
loopne
in
jae
inc
jo
inc
add
std
xor
adc
pop
test
xchg
aam
xchg
lds
jns
shlb
movsl
or
xchg
pushl
jne
popa
add
jg
mov
lahf
cltd
and
push
lock
adc
jecxz
mov
pop
push
xor
inc
mov
mov
mov
add
push
enter
add
or
fmuls
push
clc
mov
sub
or
shlb
lock
sub
cmp
das
add
sbb
inc
xor
mov
mov
mov
imul
icebp
xor
adc
mov
inc
cmp
inc
add
mov
push
test
enter
jmp
scas
mov
inc
add
inc
ss
in
mov
sub
mov
push
push
ficoms
nop
les
fst
ja
pusha
jge
add
xorb
lock
into
imul
dec
lock
push
test
bound
mov
shlb
xchg
add
xchg
lock
cmovbe
fsubl
xchg
add
adc
adc
xor
dec
or
out
ret
inc
push
stc
fldenv
jns
test
add
icebp
cmpsl
xlat
add
insb
mov
push
movb
add
loopne
mov
adc
jecxz
pop
shll
imul
loopne
cmpsl
outsb
das
xor
inc
pop
clc
lock
push
iret
rclb
mov
push
cmp
jp
jle
test
add
xchg
xor
lods
js
mov
fs
lret
mov
jo
sbb
loopne
dec
inc
mov
push
ja
imul
pop
aaa
mov
xor
imul
clc
mov
mov
add
mov
mov
xchg
insb
cmp
and
adc
jae
inc
sbb
cmpsl
lds
jbe
or
call
rorb
mov
in
add
movsl
add
adc
push
add
lahf
pop
sti
addr16
inc
lods
sysret
cli
enter
lret
daa
mov
mov
vmovmskps
and
xor
fiaddl
gs
imul
scas
push
sub
jg
aad
pop
dec
mov
or
add
xchg
data16
jne
dec
push
sub
fadds
jb
push
add
or
pushf
subb
rorl
lea
mov
ljmp
andb
mov
mov
leave
imul
xchg
testl
mov
mov
repnz
jae
push
pushl
xor
dec
xor
jo
sbb
and
repnz
jno
shrb
es
movl
dec
movsl
sbb
std
sbb
mov
cli
sbb
ret
daa
lret
lds
mov
xor
insb
cwtl
popa
add
pop
xor
imul
pop
push
jge
mov
sti
sbb
adc
jmp
adc
sbb
jb
and
pxor
xchg
test
inc
add
adc
test
cwtl
mov
jbe
adc
add
ss
mov
xchg
add
pop
pop
cmp
outsb
popa
mov
xchg
sbbl
bound
imul
insb
mov
sbb
mov
push
and
sbb
adc
cmp
and
pop
mov
push
add
mov
call
pop
mov
mov
lcall
ljmp
jecxz
xchg
into
add
cmp
dec
aam
lods
js
sbb
pop
cmp
sbb
pop
outsl
push
add
jg
loop
les
adc
in
jb
mov
les
mov
insl
out
in
cmp
inc
mov
rolb
stos
pushf
aas
loope
pushf
or
or
call
sti
cmp
loope
mov
scas
add
mov
push
sub
and
frstor
push
fsubrl
pop
push
add
dec
lods
mov
jnp
ds
pop
and
fistpl
lods
xor
pop
fld
lock
or
jge
testb
dec
mov
testb
and
out
jmp
test
xchg
stos
inc
arpl
int3
jecxz
mov
outsl
add
sub
mov
push
imul
xchg
sbb
push
fs
pop
shlb
movsb
imul
lods
mov
mov
cmp
pminsw
mov
rcl
mov
xchg
pop
and
lods
fidivl
dec
pop
sub
mov
into
jnp
mov
inc
pop
test
lea
or
cwtl
std
repz
sbb
mov
jns
sub
js
jb
mov
mov
jmp
imul
mov
lcall
add
inc
add
imul
push
xchg
jle
add
push
int
fcomps
cmpsb
je
add
push
add
sub
jl
cmp
fstpl
out
aas
or
imul
les
scas
scas
add
and
mov
imul
pop
mov
cmc
pushf
xchg
sbb
push
loop
xchg
loope
dec
jecxz
rorb
inc
xchg
faddl
jmp
insl
out
mov
mov
add
popa
jl
nop
jle
aad
in
mov
adc
addr16
sbb
dec
dec
pop
push
testb
stos
iret
pop
mov
test
pop
mov
xor
notl
push
aas
aaa
loopne
shlb
jb
push
dec
cmp
lock
cmp
cmp
imul
stos
jno
pop
sbb
leave
hlt
loope
test
add
push
jp
or
jecxz
cltd
hlt
inc
shr
add
jno
sbb
int3
fs
out
push
pop
pop
push
mov
or
mov
pop
fnsave
int3
ret
scas
and
sbb
pop
addr16
subl
imul
negl
jl
inc
iret
push
jo
shlb
sbb
push
add
add
mov
aas
movsb
push
aas
add
sub
jo
loope
pop
xchg
nop
out
pop
scas
xchg
mov
imul
sahf
push
rolb
pop
out
push
mov
inc
fs
inc
fwait
dec
pop
mov
push
and
inc
pop
push
int3
cmp
jge
sub
jne
add
push
and
inc
adc
or
push
popf
add
xchg
pop
and
gs
or
dec
pop
adc
push
xchg
mov
outsl
scas
or
jno
xchg
hlt
add
adc
push
jne
cmp
mov
sahf
jmp
fiadds
push
mov
das
in
addb
adc
add
imul
add
sub
stos
sti
shrl
imul
inc
hlt
mov
int
jnp
outsl
imul
rcr
pop
mov
push
xchg
xor
lahf
movsl
icebp
xor
sbb
stos
add
push
orb
shlb
clc
lcall
jno
inc
pusha
add
xchg
sbb
stc
and
xchg
insl
sbb
sbb
cltd
stos
mov
add
and
add
fstpl
xor
test
jne
es
lahf
stos
pusha
fiadds
scas
mov
test
adc
dec
add
stos
or
add
outsb
xchg
int3
jmp
rol
sub
int3
add
std
adc
jb
sub
ja
das
sbb
add
stos
fdivp
or
pop
jo
xchg
mov
aad
test
or
sbb
xor
clc
repz
out
pop
xchg
in
mov
add
lret
jmp
dec
test
fisubs
pop
addr16
aaa
jl
imul
int3
lret
mov
faddl
das
cltd
lods
stos
xor
lcall
and
lret
adc
imul
in
push
out
pop
test
jo
or
pop
xchg
xchg
std
pop
scas
pop
dec
cmpsl
add
fiaddl
cmc
cmp
cmpl
ja
test
jnp,pn
or
insl
jno
imul
mov
aaa
bnd
popa
adc
test
movsl
dec
jns
pop
jmp
stos
sub
fmuls
dec
inc
cld
mov
add
sub
hlt
mov
std
cltd
jne
xor
push
cmp
add
jns
loope
and
pop
add
xchg
lock
push
inc
out
mov
imul
insb
xchg
pop
negl
jnp
xchg
push
jb
mov
fildl
xchg
repnz
pop
dec
sbb
dec
cmp
or
push
add
into
mov
shlb
test
subb
mov
jae
imul
push
rclb
pop
lret
jmp
pop
add
jecxz
mov
imul
add
push
and
cmp
push
jae
mov
xchg
or
mov
in
push
and
ljmp
pop
adc
push
imul
testb
jb
or
add
add
add
repnz
add
imull
pop
imul
pop
add
sahf
xor
shrl
push
cmp
movb
rcrl
inc
xor
push
imul
fmuls
xor
pop
je
imul
adc
inc
add
adc
xlat
hlt
mov
in
stc
mov
xchg
xchg
std
pop
loopne
mov
mov
add
xor
pop
insb
mov
mov
repz
sub
repnz
adc
push
mov
fistpll
imull
inc
and
add
pop
ret
add
and
adc
push
loopne
xlat
or
xor
xchg
mov
jg
test
iret
mov
or
ret
jmp
dec
add
sbb
cmp
jmp
jnp
popf
subl
xchg
cltd
pop
outsb
adc
cmpsb
std
adc
add
sbb
imul
dec
mov
popf
shll
sbb
pop
mov
jno
jbe
ss
adc
xor
adcl
movsl
nop
clc
mov
scas
mov
sub
ds
in
dec
cmp
fucom
lcall
push
push
cmpsb
cld
dec
pop
pusha
add
and
je
lahf
add
adc
in
pavgb
dec
enter
push
shll
or
add
hlt
jmp
xor
adc
hlt
add
movsl
lods
aaa
pop
mov
inc
aas
push
add
dec
clc
xchg
pop
test
pop
cmp
mov
add
sub
adc
frstor
xchg
ds
notl
mov
add
les
bound
cmp
imul
push
rolb
mov
js
pusha
jo
sbb
loop
out
pop
add
jmp
and
pusha
xor
push
mov
out
sbb
insl
add
xchg
adc
bound
out
sbb
mov
mov
test
cmp
fwait
xor
xor
out
mov
sahf
ror
adc
and
out
xorb
rcr
or
clts
or
push
femms
push
pop
jle
bound
or
iret
roll
push
push
adc
jmp
jo
movsl
sbb
or
mov
or
enter
loop
mov
sub
xchg
add
mov
pop
inc
out
adc
sbb
rclb
arpl
daa
pop
mov
hlt
pusha
das
jnp
push
or
cwtl
movsl
insl
lret
leave
pop
xchg
popf
call
daa
add
cld
addr16
jb
push
inc
mov
pop
adc
add
lock
data16
jmp
xchg
and
mov
imul
rcrl
loope
fstpt
data16
xchg
jp
and
inc
icebp
or
sahf
xor
mov
dec
push
xchg
hlt
pop
aaa
mov
scas
xor
stos
out
pop
pop
popf
inc
sub
testl
setle
es
sub
add
dec
add
add
xlat
xor
pop
dec
fs
mov
fs
outsb
or
adc
insl
out
lods
call
jp
ljmp
push
addps
imul
push
outsb
cmp
push
pop
adc
repz
mov
int3
paddsb
jns
stos
adc
add
cwtl
xlat
leave
mov
xchg
cmp
call
add
and
ds
or
lds
xor
pop
inc
imul
mov
sahf
repnz
lcall
xor
popa
mov
add
aas
repnz
lahf
jne
enter
mov
mov
sub
mov
adc
test
fldenv
daa
xor
pop
pop
push
xor
pop
sub
push
imul
inc
clc
imul
mov
int3
pop
rolb
xor
cmp
adc
aas
pop
pusha
jb
out
cli
call
enter
add
push
repnz
mov
push
imul
or
in
notl
add
shrb
lods
push
out
mov
push
inc
pop
iret
add
lret
fisubl
jo
sub
and
daa
call
arpl
fmuls
cmpsb
xchg
je
mov
mov
jo
pop
mov
lret
outsw
push
pop
js
xor
jmp
pop
psubq
jo
lahf
into
pop
test
jle
cmc
add
jp
pop
jecxz
push
or
pop
add
jb
movsb
in
mov
xchg
inc
mov
add
lret
and
loopne
shl
adcb
mov
in
and
add
imul
mov
jb
mov
imul
cltd
mov
sbb
pop
or
ja
mov
lret
ret
bound
loop
pop
pop
rcr
loope
adc
in
xchg
test
pop
xor
daa
aam
js
add
jmp
add
xor
sub
xlat
xchg
sti
add
dec
adc
sbb
into
mov
mov
jg
mov
xchg
sub
stos
cmp
add
dec
enter
mov
faddl
add
mov
add
outsl
mov
inc
and
aaa
xchg
jbe
dec
xchg
add
loopne
and
xchg
inc
cmpsl
pop
imul
sub
push
mov
xchg
sub
add
mov
xchg
or
stc
fwait
adc
gs
add
js
dec
cmpl
addr16
push
fwait
mov
repz
popf
add
jg
lret
mov
cmp
inc
sub
xor
cli
mov
loop
imul
jae
push
shrl
mov
xchg
je
inc
mov
cmp
add
push
sti
jle
or
cmpsl
sbb
add
cmp
lock
mov
flds
loopne
push
add
out
pop
imul
mov
js
in
fadd
mov
pop
es
dec
scas
jecxz
push
iret
movsb
rcll
add
adc
ja
or
add
and
loop
roll
dec
push
outsb
fsubrl
xor
dec
movsb
int3
aas
ja
mov
sbbb
clc
out
sti
mov
and
pop
insb
dec
add
sti
jmp
imul
flds
cwtl
adc
jl
xchg
cwtl
into
cltd
repz
pop
xchg
add
pop
jns
scas
jo
pop
cmpsb
cmpsl
cmpsl
aaa
daa
ret
cmp
push
popa
scas
xor
mov
mov
and
push
cmp
adc
pop
popf
inc
pop
ret
push
dec
inc
mov
mov
xlat
pop
imul
add
pop
fstpt
roll
loopne
dec
pusha
sub
jno
push
or
outsl
pop
pop
mov
insl
div
fwait
xor
aas
adc
add
dec
pop
or
mov
push
daa
pusha
sbb
in
or
sub
mov
jnp
xor
scas
pop
adc
cmpsb
std
dec
pop
pop
aas
subl
addb
cmp
sar
mov
add
aam
mov
jne
cmp
je
aam
sub
sbb
xchg
shrb
rorl
cwtl
mov
adc
scas
cli
outsb
push
cmc
popf
fists
xchg
pushf
inc
or
mov
pop
xchg
shl
popl
pop
jl
add
jp
xchg
jno
pusha
ss
das
es
filds
pop
xchg
cmp
jecxz
pop
add
push
jecxz
loop
mov
test
aas
iret
dec
xchg
push
and
or
pop
stos
dec
sub
das
cs
mov
addb
add
add
test
and
pop
out
adc
shrb
and
ljmp
xorl
pop
sbb
adc
outsl
dec
int3
sub
adc
lea
add
movl
xor
scas
in
add
mov
lds
lahf
std
fisubrl
and
andl
pop
mov
fimull
lds
stos
data16
push
sbb
lds
scas
movsb
js
pusha
js
setp
add
pop
xor
outsb
push
ss
ljmp
sub
enter
jg
sub
add
sbb
or
jg
cmp
rorl
loop
push
mov
mov
sub
int
jl
adc
rclb
lods
out
rol
mov
js
jno
push
pop
add
sub
ds
hlt
iret
pop
leave
pop
dec
test
and
bound
inc
cwtl
push
jmp
adc
in
xor
pusha
daa
std
add
test
rorb
push
sbbb
rcrb
jmp
test
rclb
jp
jae
inc
or
add
xor
sbb
imul
cmpsb
mov
mov
xor
dec
out
loopne
fucom
shrl
nop
inc
pop
inc
test
int
jmp
pop
cli
nop
push
int3
xchg
add
dec
push
rclb
rcrb
gs
push
sti
dec
loopne
push
add
leave
negb
xchg
push
jno
cs
xchg
add
lcall
pop
jne
icebp
adc
lahf
jg
outsl
popf
push
xlat
xchg
sahf
add
imul
xchg
xchg
rclb
fs
pop
icebp
push
std
cmp
push
dec
dec
sub
dec
into
add
mov
je
mov
xor
and
mov
push
xor
jno
repnz
outsb
dec
pusha
jb
cs
cltd
pop
adc
imul
fcomps
push
sbb
jno
fisubrs
ret
in
repz
and
pop
sti
xchg
sbb
mov
insl
imul
xchg
add
and
add
leave
fwait
push
imul
xchg
xor
das
out
mov
int
maxps
mov
xchg
push
pop
push
das
int
xchg
pusha
add
or
xchg
pop
mov
addr16
je
add
mov
imul
or
dec
dec
xchg
and
loop
mov
push
sbbl
mov
iret
push
stc
cld
test
daa
jg
imul
add
pop
loopne
imul
insb
push
cld
and
lcall
daa
add
cmp
dec
add
les
and
mov
pop
daa
in
pop
pop
xor
adc
out
sub
xor
push
aad
or
aam
or
pop
test
sbb
and
pop
add
clc
call
data16
jg
xor
bound
add
xchg
out
add
sub
or
add
mov
adc
lea
inc
inc
sbb
imul
imul
sbb
fisubrl
arpl
rorb
int
scas
jne
loopne
sbb
add
arpl
pop
pop
add
dec
jecxz
lcall
add
inc
nop
mov
popa
negb
lahf
add
mov
and
repnz
jg
adc
xchg
or
aaa
adc
add
xor
xor
sbb
push
jg
bound
dec
mov
sub
sub
lods
imul
data16
xor
iret
add
cmp
pop
dec
imul
push
and
jb
push
sbb
adc
xchg
adc
ds
insl
js
dec
pop
lcall
pop
cmp
call
ret
add
push
cli
add
add
xlat
inc
cmp
cmpsb
ljmp
pop
xchg
sub
into
lret
mov
inc
mov
andb
mov
xor
add
sub
add
js
cmp
and
aam
loopne
dec
addb
jp
push
add
aaa
notb
mov
imul
addb
pop
mov
ss
sbb
push
call
rolb
ret
jmp
scas
and
movsl
xor
pop
out
mov
into
dec
or
xor
pop
adc
lahf
cmp
imul
scas
and
arpl
pop
fildll
inc
fcoml
jne
and
mov
lock
or
add
outsb
sti
imul
or
jbe
test
imul
out
add
dec
push
push
push
add
cmp
xchg
fnsave
pop
call
jns
add
loopne
inc
pop
scas
shll
and
arpl
or
and
enter
mov
bound
add
or
lahf
push
jo
jg
dec
and
int3
sbb
push
push
cld
pop
add
pop
inc
orb
mov
hlt
stos
add
out
ljmp
jne
negl
decl
int3
cpuid
jns
imul
adc
insl
nop
imul
dec
aam
loopne
mov
push
inc
push
movsl
in
test
mov
inc
lret
fstpt
insl
push
imul
mov
shrb
les
lods
ljmp
test
subb
pop
jnp
ja
push
mov
mov
out
out
mov
outsl
jle
test
imul
stc
pop
xchg
movsb
icebp
xlat
lds
pop
jmp
dec
or
or
outsb
pushf
mov
cld
cmp
mov
decb
sahf
xchg
xchg
jne
pusha
imul
aad
mov
test
lock
xchg
push
int3
fwait
mov
stos
jo
mov
enter
pop
fidivs
push
dec
outsl
lret
add
ja
ljmp
inc
and
and
int3
lods
add
push
fsts
or
pop
add
je
outsl
insb
icebp
sub
popf
imul
fnsave
inc
pop
fmull
and
inc
and
xor
cld
repnz
add
aam
mov
add
inc
stos
cmp
cmpsl
xor
imul
adc
sub
loopne
aam
pop
mov
fwait
popa
adc
fisttps
in
fisubrl
mov
mov
cmp
popa
mov
icebp
hlt
pop
arpl
xchg
and
hlt
or
cli
or
pop
ret
xchg
imul
jb
imul
and
inc
mov
lods
stos
cli
repz
jne
pop
add
mov
movsl
jb
adc
lea
imul
daa
push
xor
shrb
fstps
inc
hlt
in
mov
pop
in
jg
add
xchg
mov
or
addr16
push
mov
psadbw
mov
and
lcall
sbb
jb
sbb
loop
imul
mov
imul
sub
cmpsb
add
inc
pop
add
pop
mov
add
and
push
or
dec
loop
pop
add
aaa
sub
dec
cmp
adc
inc
int3
subb
call
sbb
add
push
pcmpgtw
or
out
lret
adcl
test
loop
loopne
imul
xor
gs
jmp
test
xchg
and
or
ja
adc
adc
xor
or
fbstp
sub
push
testb
mov
jmp
std
mov
shufps
push
inc
pop
popf
xor
cmpsb
cmp
dec
add
inc
add
sub
sbb
sub
mov
adc
repz
inc
sub
mov
in
add
orb
inc
filds
cmpb
and
stos
mov
pushf
xchg
mov
test
cmp
xor
push
lret
xor
loope
push
sub
sbb
mov
cmpsl
dec
into
sbb
fadds
pusha
mov
push
incb
dec
cltd
dec
bound
sbb
add
gs
inc
add
lahf
sub
subb
jo
sbb
or
mov
mov
clc
adc
add
push
or
jle
mul
out
cmpxchg
ja
inc
adc
int3
lcall
cmc
stos
push
push
jno
add
lahf
or
cmp
fmul
sbb
and
push
jl
inc
stos
xchg
xchg
imul
pop
dec
lcall
jecxz
xchg
cmpsl
fcom
xor
inc
sub
pop
push
xor
sbb
jmp
addr16
xrelease
xor
cmpl
jnp
fs
mov
inc
xchg
mov
mov
cmp
and
jns
jb
lea
mov
sar
pop
xor
pop
test
xor
shrb
and
rcll
dec
pop
dec
test
add
add
data16
js
push
mov
int
cmpsl
push
das
xchg
mov
inc
add
enter
je
and
jmp
arpl
lahf
jb
mov
push
jo
imul
stos
add
dec
add
and
jnp
mov
test
sbb
lock
add
ret
and
imul
jbe
ficomps
div
mov
orl
imul
add
xchg
inc
push
sbbl
pop
inc
imul
bound
es
rolb
add
movsl
xor
lea
add
loope
sub
js
imul
mov
sbb
mov
cltd
jp
mov
dec
or
mov
out
scas
iret
mov
cmp
dec
pop
test
pop
mov
loope
mov
xlat
push
xor
gs
es
and
jbe
insl
lret
push
push
sarb
and
dec
in
pusha
and
push
imul
xor
inc
mov
imul
mov
or
stc
and
adc
or
in
sbb
pop
pop
mov
cmc
adc
stos
inc
addb
sti
push
fsubrl
fsubs
mov
adc
adc
movsb
daa
and
xlat
add
xchg
nop
test
cmp
push
add
jecxz
xchg
std
cwtl
movsl
and
dec
fadds
jne
sbb
sub
popf
cwtl
imul
add
je
orl
mov
push
xchg
xchg
cmp
add
pop
dec
negl
out
mov
and
xor
pop
imul
fiadds
jnp
push
or
sub
out
scas
mov
shrb
cmp
rol
pop
mov
push
xlat
cmpsl
dec
dec
push
or
pop
jecxz
push
xor
stc
fcmovnu
mov
sbb
popl
push
cmp
cmp
pop
push
test
push
fdivl
add
hlt
add
orb
push
icebp
cmp
imul
out
decb
imul
test
filds
xor
aas
sbb
jns
mov
clc
imul
sarb
out
mov
mov
sbb
xchg
stos
shlb
pop
daa
in
pop
fcomps
add
lds
jecxz
add
fiadds
cwtl
imul
mov
pop
imul
call
insb
dec
je
pop
xor
nop
arpl
adc
imul
xor
incl
pop
popf
pop
sub
xchg
dec
add
hlt
aas
lret
adc
mov
cmpb
call
sub
rcrl
lock
cmp
add
mov
roll
ja
dec
cmp
pop
sub
fnstenv
adc
lock
or
sahf
push
arpl
and
add
imul
out
mov
int3
sbb
push
xorl
sbb
sub
pop
add
sarl
outsl
add
sub
cmp
stc
mov
mov
call
pop
jnp
dec
stos
mov
imul
lods
stos
ret
or
in
das
mov
pop
das
imul
or
sbb
shrb
repnz
or
xor
cli
imul
adcl
xor
cld
sahf
testb
movsl
xchg
xchg
inc
push
inc
add
out
jns
push
sbb
add
or
cmp
push
mov
xor
cs
enter
cltd
imul
jecxz
add
mov
test
pop
add
ret
mov
testl
push
cltd
cmp
add
notb
cs
hlt
push
sbb
xchg
pop
lahf
xchg
testl
outsb
dec
cmp
or
add
xchg
mov
mov
mov
push
dec
ret
stc
jno
push
or
mov
pop
pop
xchg
mov
add
inc
mov
push
sub
inc
add
add
ljmp
jecxz
mov
roll
sti
sub
pop
add
sub
add
xchg
mov
push
mov
mov
jg
hlt
add
aam
repnz
lock
push
stc
cmp
mov
dec
icebp
pop
pop
push
rcrl
iret
inc
mov
pop
loopne
imul
rcl
mov
add
push
popa
lock
fwait
add
sub
add
cmpb
std
in
add
loope
jb
decb
or
aas
cli
xchg
and
cmp
pop
xchg
and
jmp
pop
or
mov
jne
pop
xchg
xchg
lret
add
and
sahf
sti
pop
mov
mov
push
mov
mov
shrb
and
es
pop
fadds
jo
out
je
imul
fdivrl
test
or
pop
push
add
xor
adc
cmp
jp
ljmp
cs
outsb
pop
and
out
aas
divl
orb
jle
fidivrl
or
jmp
sahf
add
insb
mov
cs
xchg
rcrb
mulb
lahf
add
test
xchg
ja
imul
add
push
dec
mov
imul
loopne
imul
mov
push
jnp
aam
mov
movsb
fadds
imul
sbb
adc
mov
xchg
xor
xor
pop
js
iret
jno
add
ds
xchg
enter
aas
and
nop
sti
mov
outsb
cltd
mov
scas
add
imul
sbb
pop
lcall
xor
aas
rol
add
or
push
scas
roll
xlat
sub
decb
pop
sbb
xchg
push
mov
int
cmp
imul
pop
inc
push
add
mov
inc
mov
stc
repnz
add
inc
jns
add
dec
gs
add
sub
out
subb
add
pop
fsubr
pop
movsl
cli
movsl
ret
inc
or
pop
scas
add
push
cmp
addb
and
add
cld
movsb
scas
xlat
mov
jno
sbb
rcrb
dec
inc
loope
pop
mov
push
jle
cmp
dec
mov
inc
and
inc
xchg
sub
fstl
mov
cld
mov
dec
gs
add
faddl
repnz
nop
sbb
sti
test
mov
jmp
ljmp
lea
dec
sbb
add
dec
xchg
inc
js
daa
jb
std
xchg
jmp
bnd
aas
cmc
xor
stos
jbe
das
sub
popa
loope
cmp
inc
mov
push
xchg
inc
inc
mov
push
js
movsb
cld
imul
test
pop
decl
mov
xchg
cmp
push
mov
jns
cwtl
imul
test
push
int
jmp
add
ret
adc
jne
mov
cmpb
pop
ds
aad
pminsw
das
lcallw
add
add
mov
shrb
and
add
fistpl
fmuls
sub
add
fldenv
add
jb
or
sarb
fidivs
in
loope
pop
cmp
in
sahf
aaa
xchg
rcl
loopne
fnstcw
dec
pop
and
mov
pop
xchg
pushf
stos
pop
mov
xor
sbb
and
cmp
add
shrb
push
imul
push
mov
mov
add
arpl
add
xor
mov
sub
loope
inc
fistpl
fwait
pop
arpl
stc
js
fs
scas
inc
jns
pop
add
addr16
jge
pop
mov
add
rcrb
push
xchg
add
jno
test
pushl
bswap
push
popa
pushf
pop
mov
cmp
jo
movmskps
hlt
pop
mov
jmp
cmp
or
inc
icebp
insb
and
add
repnz
mov
sbb
icebp
jb
jbe
push
cmp
pop
nop
imul
sub
cmpsb
aaa
add
xor
outsb
add
jl
lahf
pop
mov
pop
out
lods
mov
mov
test
ds
pop
sbb
sbb
mov
pop
imul
sub
loopne
pop
add
xor
cmp
add
xor
xchg
inc
inc
mov
lock
adc
sbb
pusha
inc
imul
xor
jns
jle
push
in
rol
sbb
and
hlt
ja
adc
std
pop
adc
mov
adc
imul
mov
xchg
imul
pusha
adc
out
mov
pusha
imul
int
das
loopne
das
jbe
imul
xchg
mov
enter
cli
push
inc
sub
out
and
pop
call
fisubl
sbb
add
cli
dec
out
fs
pop
adc
pop
jecxz
stc
xchg
outsb
dec
and
mov
xchg
sbb
imul
jae
add
test
cmp
shrd
aas
fcomip
mov
and
repnz
pop
ret
add
xor
cmp
aad
pop
sub
and
or
inc
and
cmpl
int
stos
mov
lock
xlat
sbb
test
add
outsb
push
adc
push
icebp
std
xacquire
sbb
cld
cli
push
pushf
out
mov
cltd
in
lahf
mov
pop
cli
pop
cmp
jecxz
popf
sti
loope
bound
scas
test
jp
or
icebp
test
or
inc
add
add
fldenv
add
aas
lret
inc
sub
rcl
int3
aad
push
dec
mov
decl
rclb
test
push
aaa
cmp
adc
shlb
jle
sarb
push
fcomps
cli
push
es
xchg
pop
inc
dec
sub
add
xchg
out
outsb
pop
sbb
xchg
pop
or
addr16
movsb
dec
hlt
add
add
test
jp
loop
push
and
imul
add
sub
pop
std
xchg
rcrl
repnz
adc
mov
and
mov
repnz
xchg
icebp
pop
push
bound
dec
mov
xchg
mov
sbb
ret
add
mov
sbb
ret
imul
pushf
jnp
mov
lret
dec
stos
push
add
je
sub
in
lds
jne
loope
nop
mov
pushf
cmp
mov
mov
inc
rcll
pop
cltd
pop
cli
in
jne
jns
sub
cmp
lahf
xchg
fildl
imul
and
mov
inc
adc
cmc
adc
adc
jmp
push
sbb
lods
add
les
xchg
inc
pop
add
pushf
ficompl
add
adcb
cmpsl
ror
das
rorl
out
repnz
scas
and
pop
out
scas
dec
cmp
add
lods
xor
fwait
mov
outsb
push
pop
xor
and
rorb
lahf
add
lret
daa
mov
rolb
mov
cld
and
add
sbb
pop
jae
cwtl
or
subb
cmc
std
pop
jne
in
dec
add
sahf
add
mov
xchg
ret
add
or
shrb
in
xchg
sub
js
dec
xchg
xor
jne
cmpb
pop
sbb
push
sbb
movsl
pop
sti
fldenv
mov
stos
push
sub
clc
add
and
out
aam
cltd
mov
sahf
in
mov
xchg
lret
test
loop
enter
cmpb
mov
repnz
sbb
call
xchg
cmp
dec
gs
inc
add
add
xchg
push
dec
adc
stc
cmpsb
and
add
test
test
cmpsb
leave
cs
jnp
add
or
pop
neg
lods
xor
xor
in
xor
in
mov
push
inc
xor
pop
mov
js
push
imul
jge
jbe
fldcw
lcall
add
pop
call
insl
pop
stc
cltd
jp
inc
mov
jp
fimull
pop
or
imul
push
add
popa
add
lret
int3
sahf
mov
pop
lcall
mov
lds
loopne
lods
es
imul
add
xlat
out
push
imul
loope
mov
mov
das
inc
lahf
or
xor
add
cmp
mov
jb
punpckhwd
movsb
mov
add
cltd
lds
enter
add
mov
push
daa
and
popa
add
mov
hlt
lcall
cmp
or
push
jge
xor
daa
fnsave
adc
cmp
mov
scas
jnp
pop
mov
int3
sub
jl
push
adc
imul
arpl
das
xchg
icebp
jp
mov
mov
rcrb
push
aas
or
mov
je
bound
outsl
jo
out
adc
data16
mov
dec
add
testl
sub
add
cs
dec
pushf
inc
pusha
xor
inc
jb
jnp,pn
pop
cltd
fcomi
mov
fldl
testl
xchg
jne
adc
das
mov
cmp
dec
fstps
cmp
push
or
pop
loopne
punpckhwd
enter
jge
push
mov
cmpl
dec
xor
sub
xor
iret
stc
outsl
cmp
les
jmp
outsb
xor
sub
loopne
mov
jl
jmp
adc
sti
stc
xchg
or
sub
addb
pop
cltd
cwtl
and
add
and
xor
xor
jmp
sub
jno,pn
add
stc
add
stos
iret
idiv
mov
mov
add
xchg
dec
dec
and
ret
mov
xlat
daa
aam
jo
imul
sub
sbbl
inc
pop
jle
and
and
dec
xchg
push
ds
dec
in
dec
out
pop
sub
lcall
call
push
mov
xchg
sbb
or
out
cltd
loope
mov
and
rcrl
add
jns
mov
mov
jno
outsb
movsb
sti
mov
loope
xor
imul
fmuls
jne
sub
imul
repz
and
jo
jnp
jne
test
add
mov
jmp
xchg
mov
adc
ds
in
stos
cmpb
rdpmc
aas
jecxz
add
insl
xchg
dec
lahf
jmp
and
fwait
mov
add
push
lock
ja
add
add
mov
push
sub
imul
xor
cmp
daa
add
xlat
push
or
and
ret
sbb
pop
sbb
popa
cmc
add
enter
cmp
fcoms
imul
fs
mov
subb
loope
pop
add
lea
cmc
popf
mov
jge
inc
testl
xchg
or
add
rcrl
jnp
and
push
sbb
repz
es
or
pop
push
or
fsubrs
out
pop
push
fldl
jnp
pop
add
out
inc
leave
sbb
rcll
mov
mov
cltd
fmuls
xor
push
std
aaa
pop
or
imul
push
cmp
in
add
arpl
lahf
add
imul
sub
adc
jnp
mov
xor
add
addr16
or
xorb
add
sub
je
mov
das
leave
pop
jp
mov
xor
xor
pop
jmp
jo
xor
mov
imul
inc
push
mov
popl
cmp
xor
pop
adc
push
jmp
add
sti
mov
cli
lea
out
hlt
outsb
in
mov
jmp
jg
test
incl
aad
pop
ret
pop
mov
lahf
xchg
cmc
xchg
add
repnz
subb
or
and
scas
pop
pop
mov
movsb
pop
das
sbb
sub
mov
push
or
shrl
inc
lea
add
lret
add
mov
pop
push
pop
sub
mov
xor
rorb
cmp
arpl
pop
cli
subb
es
jne
or
loopne
in
pusha
sbb
push
nop
lds
sbb
pop
test
imul
add
stc
xor
add
sbb
pop
cltd
addb
sbb
add
aad
stos
loopne
mov
stos
mov
lret
add
shlb
int3
dec
sub
adc
imul
adc
add
pop
rcr
pop
fildl
dec
je
mov
es
pop
add
lods
cmp
add
add
push
dec
daa
or
inc
pop
insl
adc
mov
addb
mov
push
add
or
imul
test
std
adc
cltd
repnz
dec
push
jo
imul
daa
mov
daa
xor
mov
add
lods
in
mov
cmpsb
enter
aam
inc
adc
push
clc
imul
and
test
add
jb
adc
pop
add
loopne
xchg
push
push
ljmp
ret
adc
or
inc
imul
loop
imul
sbb
mov
dec
clc
mov
or
adc
jmp
mov
adc
hlt
pop
sbb
repnz
insl
sahf
xchg
fisubs
xor
adc
pop
mov
inc
add
inc
push
adc
icebp
int
cmp
hlt
dec
mov
add
jle
ja
mov
cmp
push
in
in
add
outsb
pop
das
popf
or
add
add
loop
pop
add
idiv
add
adc
mov
lcall
bound
int
add
adc
cmpsl
inc
rcl
add
scas
xchg
adc
call
mov
pop
lods
out
pop
cmp
sbb
add
fmull
incb
shl
inc
pop
cmp
shrl
add
jl
test
add
call
sbb
inc
in
push
cmc
and
and
daa
push
test
leave
popf
fcomi
push
xor
add
aad
mov
xchg
imul
add
push
or
and
sub
cmpsb
or
arpl
or
fsubl
adc
mov
lods
ss
imul
pop
andl
repz
push
fiaddl
push
or
imul
jno
and
je
pop
xchg
pusha
stos
add
test
outsb
xor
xchg
iret
push
mov
insb
mov
das
adc
testb
test
cwtl
rorl
sbb
imul
cmpsl
inc
fbld
dec
pop
inc
mov
aam
js
je
cltd
ljmp
lds
mov
sub
push
inc
cmpsb
pop
sub
xor
push
pop
test
ljmp
jbe
pop
mov
and
mov
push
xchg
aas
test
jl
notl
int
pusha
imul
fmuls
imul
add
jmp
or
fwait
pop
cmp
or
xchg
out
sbb
lret
cli
nop
mov
mov
add
out
sub
and
mov
insl
or
add
dec
rcr
push
lahf
sahf
or
cmp
icebp
xchg
jmp
add
outsl
icebp
dec
fldt
clc
imul
push
mov
push
push
push
mov
out
adc
xchg
and
mov
adc
adc
add
scas
or
inc
pop
pop
data16
lret
jno
das
or
inc
das
cmp
mov
fisttpl
mov
or
or
imul
dec
and
dec
cmp
aam
add
jle
les
loop
iret
and
fidivl
cmp
loope
inc
cmp
test
enter
jb
jge
pop
fidivrs
pop
inc
or
icebp
movups
or
test
inc
lret
inc
mov
addr16
fistps
push
xor
test
sahf
xor
addb
cmpsb
xchg
pop
xchg
sbb
outsb
sub
inc
add
mov
inc
add
mov
jns
mov
mov
mov
shlb
add
cmpsl
lahf
add
in
add
sub
outsl
push
add
addl
dec
loop
add
lods
hlt
add
push
fcomi
mov
jecxz
pop
aaa
mov
insl
mov
out
sbb
test
dec
insb
nop
ja
pop
subb
imul
add
pop
and
insb
cwtl
movl
push
fcmovnbe
bnd
lock
test
loop
call
pop
movlps
pop
add
imul
incb
xchg
jecxz
out
add
or
jl
push
imul
out
outsb
push
lcall
call
cmpsb
lret
sbb
jg
pop
adc
out
adc
jno
sub
outsl
xchg
inc
js
imul
scas
mov
add
lcall
dec
adc
push
mov
call
test
filds
insl
arpl
imul
jb
aam
push
inc
imul
add
xchg
pop
mov
into
mov
sbb
ret
ja
and
mov
mov
jb
pop
subl
cmpsl
add
jl
fs
inc
subb
inc
imul
cmp
in
jecxz
cmp
add
shrl
xchg
dec
add
mov
mov
jp
loopne
mov
in
xchg
shl
adc
add
out
das
mov
add
cli
sbb
pop
sub
sub
loopne
or
rolb
js
jne
leave
sub
push
pop
pop
cs
add
jg
cmp
xor
das
sub
push
mov
sahf
test
mov
push
pop
add
and
or
jb
cmpsl
mov
add
jbe
adc
xor
push
dec
call
das
jl
enter
out
sbb
add
add
lahf
shr
cmp
add
test
test
fcomp
incb
movsl
xchg
mov
cmc
negb
subb
push
mov
fisubrs
aaa
mov
inc
pop
sarl
incl
test
subl
fisubrl
xor
loopne
mov
dec
xchg
shrb
dec
test
add
sub
add
inc
xor
adc
inc
or
rcr
push
daa
mov
bound
imul
adc
push
fldenv
test
xor
xchg
loop
mov
pop
idiv
pop
pop
movl
std
jmp
ficoml
icebp
dec
adc
add
adc
lret
pushf
and
push
fistpll
sbb
jae
inc
cmpsb
lahf
jnp
pop
ret
adc
shrl
shrb
pop
subb
daa
mov
dec
mov
gs
sahf
add
inc
xor
ja
sub
xlat
push
add
and
cmp
xchg
inc
movsb
add
dec
sub
inc
or
adc
inc
movsb
add
popa
mov
mov
sbb
das
xchg
mov
xchg
mov
nop
dec
out
jle
enter
push
cltd
and
cmp
or
and
imul
add
and
movsl
lret
imul
pop
pop
xor
jle
aas
add
insl
sub
movsb
iret
sti
add
xor
imul
push
popf
test
or
aam
sbb
subb
push
pop
pusha
mov
out
repnz
pushf
bound
sahf
add
imul
and
mov
sub
pop
ljmp
add
pop
and
daa
inc
mov
fmul
push
jmp
sahf
or
movsl
in
lock
fidivs
push
adc
pop
push
int3
test
add
ljmp
add
push
mov
ret
imul
pushf
dec
mov
add
xchg
add
pop
or
fildl
adc
fsubrl
xchg
icebp
pop
dec
sbb
cmp
and
popa
push
mov
fidivrl
add
and
mov
in
int
pop
fmuls
imul
push
and
rolb
fcomi
xorb
and
dec
jp
and
add
inc
xchg
int
cld
xor
push
adc
cmp
xchg
fnstenv
call
sbb
int3
pop
and
les
pop
data16
clc
or
loopne
sbb
cmpsl
sub
data16
lea
addl
cld
cli
jns
testb
sub
cmp
sub
aas
pushf
add
ror
jle
loop
test
and
inc
dec
and
divl
fisttpll
pop
pop
xor
jl
mov
mov
sub
je
shlb
pop
clc
ret
mov
lret
mov
in
add
stc
push
mov
jnp
adc
ret
add
mov
mov
mov
mov
pusha
clc
add
sub
sbb
incl
and
xor
mov
aas
sub
loopne
lods
pop
add
jmp
imul
dec
fisubrl
pop
dec
adc
add
std
int3
mov
add
fs
lahf
add
inc
fiaddl
sub
mov
jbe
cltd
incl
loope
sub
sub
mov
push
in
sub
jns
xchg
adc
in
sbb
lea
lcall
xor
add
das
xor
cmp
add
fisttps
mov
lods
aam
fsubrs
in
into
jb
pop
adc
adc
sbb
xor
pop
ret
addb
mov
cmpl
xchg
sub
mov
lock
insl
cmp
jnp
adc
add
mov
sbb
pop
add
inc
shrl
fbld
pusha
xor
fstl
add
jmp
dec
inc
imul
or
and
jnp
loopne
push
dec
adc
sub
inc
scas
push
xchg
inc
sarb
daa
daa
add
or
xor
cmp
pop
mov
pop
addr16
fadds
and
inc
in
rcll
add
test
fbld
add
hlt
pop
fstpl
xchg
xor
movsb
add
push
in
imul
addb
mov
jnp
push
add
imul
lret
mov
rcrl
es
inc
fsts
dec
pusha
push
int3
loopne
jmp
pushf
jnp
sbb
jbe
add
pop
push
mov
xlat
mov
adc
sub
add
and
push
xchg
add
mov
jmp
je
popf
mov
xlat
or
add
cltd
pop
adc
decb
adc
add
xchg
push
aas
jl
mov
xchg
test
imul
dec
sahf
test
mov
test
pusha
pop
dec
bound
or
add
int
daa
xor
loope
mov
icebp
pushf
xlat
xorb
ljmp
or
add
add
sti
fnstsw
ltr
pop
pushf
lock
cmp
adc
inc
jg
add
aaa
pop
adc
and
xor
push
pushf
int3
pop
loopne
pop
pop
stos
stos
std
lret
add
add
cmp
cmp
dec
scas
add
mov
aam
in
insl
lcall
mov
jbe
insl
ret
fbld
mov
sbb
or
push
dec
mov
incb
imul
jbe
outsl
filds
imul
jb
pop
jbe
out
pop
add
jno
imul
pop
mov
push
and
dec
pop
scas
icebp
fldlg2
pop
lret
or
pop
add
lcall
sub
cmp
pop
or
pushf
cmp
imul
inc
add
add
sub
imul
ds
loop
add
push
into
and
pop
jmp
jae
outsb
add
in
mov
repnz
sub
jl
xor
cmp
les
or
insl
xchg
adc
sub
jle
mov
pop
adc
outsb
or
arpl
add
fxch
mov
clc
icebp
pop
inc
mov
sbb
shll
cs
add
push
pop
mov
push
add
aam
movsb
jns
or
push
fisttpl
notl
imul
loop
push
les
add
je
fsubs
push
in
inc
jne
add
mov
mov
add
stos
rcrl
xchg
cld
filds
mov
pop
inc
xchg
dec
sub
imul
mov
das
js
push
xor
inc
imul
arpl
in
add
add
add
testb
or
dec
pop
add
pusha
jl
jno
inc
add
in
pusha
add
jae
sbb
mov
jnp
xchg
mov
jo
cltd
in
imul
pop
stos
inc
add
repz
jnp
adc
dec
sbb
les
sbb
adc
cmc
rcl
roll
subb
popa
xlat
out
mov
mov
fcompl
mov
add
out
jp
iret
cld
fwait
xchg
pushf
dec
sub
imul
es
dec
push
call
pop
lret
pop
cmpsl
inc
add
pop
popl
jne
pop
add
fldt
imul
add
dec
cwtl
jnp
adc
or
mov
push
jo
xchg
stos
xchg
xchg
call
and
add
outsb
mov
xor
add
hlt
testb
sub
in
imul
add
and
adc
int
and
xchg
xorb
pop
add
jp
xor
ror
adc
or
stos
pop
rolb
int3
cmpb
mov
lret
add
cmpsb
pop
lea
filds
sub
sub
add
fcompl
mov
or
or
pop
repz
inc
nop
or
dec
lahf
inc
mov
mov
add
xor
jne
and
orb
jl
imul
xor
mov
mov
add
arpl
lds
add
cmc
flds
pop
mov
adc
xor
mov
add
add
xchg
inc
pcmpeqw
dec
loope
cld
mov
movb
add
pop
scas
lcall
xchg
pusha
imul
add
out
jo
jg
subb
les
mov
hlt
iret
jp
push
push
lds
or
arpl
dec
add
mov
sbb
into
sbb
adc
fst
jg
fwait
mov
cltd
hlt
adc
outsl
sbb
add
imul
sbb
add
adc
push
in
mov
cmp
ds
pop
scas
test
dec
xchg
movnti
popa
or
mov
rcl
ficoms
jecxz
out
xor
sbb
loop
sahf
pop
add
and
lea
int
add
mov
insl
lahf
mov
dec
lcall
pop
push
sbb
js
adc
cli
jnp
xchg
test
add
testb
cmp
or
cmp
pop
add
stc
js
jg
addb
lods
filds
imul
gs
push
mov
imul
push
dec
fisubrl
mov
push
ss
loopne
push
inc
push
add
pop
test
xor
das
sbbb
hlt
arpl
or
sbb
add
cld
addr16
dec
imul
sahf
stc
out
fmull
pop
push
aam
fildll
lds
out
add
jmp
in
icebp
push
cltd
or
adc
mov
int3
hlt
lods
daa
mov
pop
dec
inc
iret
mov
test
sub
lea
inc
push
sub
stos
aaa
sbb
or
rolb
sbb
push
inc
add
pop
pop
sbb
int3
pop
push
int
mov
mov
std
xchg
and
popa
add
push
clc
inc
cmpsl
xchg
addb
push
loope
xchg
mov
call
arpl
dec
addr16
shr
je
and
fildl
popa
pop
mov
int3
das
or
cmp
lret
xor
into
jl
pop
ss
xchg
mov
pop
push
push
push
jne
pop
hlt
dec
js
add
sbb
dec
mov
add
sub
cmc
pop
filds
addl
pop
out
insb
xor
je
mov
fbstp
mov
into
add
push
mov
loope
xor
imul
in
jmp
push
aam
cmc
ja
add
ds
jmp
or
lahf
add
bound
adc
es
jg
add
imul
add
mov
jne
imul
sbb
setno
jl
lock
pop
lock
dec
addr16
clc
mov
pop
subb
mov
imul
and
xchg
outsl
xchg
inc
adc
movsl
or
inc
pop
or
pop
add
in
js
xor
cmp
mov
pop
dec
call
repz
popf
stos
or
push
rcr
fdivr
out
daa
dec
enter
mov
test
and
in
dec
pop
gs
in
iret
aas
nop
insb
jae
rcrb
aas
mov
test
pop
sub
push
pop
and
sbb
int3
out
test
xchg
mov
push
sbb
out
adc
add
into
gs
rcll
jnp
mov
shlb
clc
pop
rclb
sarb
dec
jnp
imul
add
int3
xchg
imul
push
int3
or
pop
inc
pop
pop
add
dec
pop
jecxz
call
and
dec
mov
push
imul
imul
jmp
addr16
pop
dec
test
xchg
or
lods
mov
add
insb
mov
cli
test
add
xor
addr16
test
or
pop
aaa
jbe
push
xchg
shrb
inc
clc
fisttpl
int3
loopne
leave
lcall
subb
enter
inc
add
xchg
adc
xor
xor
add
xor
xor
ja
rcrl
jns
popf
fldl
enter
push
pop
punpcklwd
xchg
rcrb
adc
inc
push
pop
imul
mov
shld
outsb
sub
sbb
add
xor
mov
adc
inc
xor
add
roll
pop
dec
fwait
rsm
add
xchg
stos
pop
hlt
pop
or
cmpsl
cmpsb
jnp
movsb
mov
push
pop
add
rclb
and
or
mov
pop
in
pop
push
add
imul
aad
xchg
in
popf
imul
add
add
sahf
mulb
mov
lret
mov
inc
into
add
push
push
imul
movsl
fbld
dec
mov
pop
subb
add
movsl
test
imul
std
ror
call
imul
movsb
into
add
mov
cwtl
pop
insl
mov
add
and
lock
push
pop
add
push
push
jg
add
bound
sbb
insl
pop
arpl
js
fidivs
ljmp
or
data16
add
add
pop
sbb
lea
add
pop
pop
sbb
pop
push
outsl
cli
inc
insl
jae
inc
push
int3
and
add
lds
xchg
imul
lret
inc
movsb
mov
vmovaps
les
out
stc
add
add
cwtl
push
or
push
cli
add
push
int3
pushf
push
mov
xchg
push
mov
pop
addb
push
inc
rorl
mov
pop
mov
sub
cmpsl
add
push
push
pop
push
dec
add
push
lcall
pop
add
push
insb
add
pop
push
sub
jno
inc
bound
push
sbb
add
inc
adc
adc
adc
imul
jns,pt
cmp
jmp
adc
jg
adc
push
adc
loope
shl
adc
movups
jns
cmc
adc
sti
xor
roll
fiaddl
pop
mov
pop
lods
rcl
rolb
fcom
loop
fisubs
mov
xchg
scas
aad
mov
das
jo
dec
mov
xchg
push
cmpsb
xchg
mov
lahf
test
movsl
mov
ret
lea
fwait
jne
stc
call
adc
inc
sti
mov
nop
sbb
add
ja
je
faddl
imul
subl
imul
push
outsb
adc
dec
push
inc
jae
lcall
dec
sub
push
dec
pop
out
cmp
aaa
imul
inc
add
cli
jl
cmp
dec
sbb
and
gs
dec
xchg
cmp
inc
sbb
inc
sub
pop
push
das
sub
dec
add
fdivs
push
push
adc
jl
and
jne
pop
xor
adc
jp
in
mov
icebp
nop
loope
je
add
out
mov
ret
jmp
xchg
push
cwtl
roll
fneni(8087
pop
test
movsb
inc
inc
mov
fsubr
outsl
aam
les
fcmovu
mov
stc
cli
divb
enter
in
mov
push
xchg
cmpsl
fistpll
test
stc
lods
test
std
imul
mov
cmpsl
pusha
add
repnz
stc
mov
lock
inc
sbb
pop
imul
lea
inc
and
adc
push
sbb
jae
dec
pop
jmp
in
sbb
cmp
lret
pop
unpckhps
pop
neg
inc
dec
or
jns
push
jae
sbb
adc
dec
lahf
adc
sub
inc
jb,pt
jns
push
adc
and
int
imul
imul
or
adc
arpl
and
or
aad
jecxz
sbb
jns
sub
jbe
fdivrs
outsl
pop
sbb
popf
jmp
pop
xchg
in
ljmp
dec
repnz
dec
fadds
imul
ficompl
sbb
pop
add
mov
rcr
inc
enter
ret
jg
cmp
xchg
mov
xchg
test
hlt
fldcw
ficompl
mov
jmp
je
imul
xchg
or
xchg
fwait
stc
xlat
xchg
mov
sbb
jo
push
push
pop
or
pop
arpl
enter
imul
movq
push
push
sbb
push
rclb
pop
arpl
pop
add
inc
bound
xor
in
add
and
and
and
xor
dec
sbb
push
push
sbb
pop
and
and
or
add
inc
and
dec
inc
pop
inc
jmp
outsb
cmp
jnp
adc
insb
adc
xor
cli
repnz
cwtl
sub
mov
je
jne
lock
sti
repnz
lock
mov
enter
mov
lods
ret
fsubrl
vcmpleps
stos
mov
xchg
shlb
mov
aad
scas
jle
fists
fldcw
mov
cltd
fsubs
jecxz
cli
mov
out
pop
aas
stos
roll
test
cli
pusha
pop
stc
add
stos
pushf
or
inc
call
sbb
jnp
and
unpcklps
push
adc
outsb
add
jbe
jbe
pop
outsb
in
pop
and
pop
sub
inc
xor
std
and
xor
xor
pop
outsl
xor
adc
push
xor
mov
jbe
sub
js
and
pop
xor
cmpb
adc
pop
cmp
fldcw
adc
adc
sbb
ja
or
jp
cmp
add
or
pop
loopne
sti
jecxz
mov
test
out
lock
mov
fdivl
sbb
push
repnz
adc
rcl
fcmove
cmp
ror
stc
mov
stos
mov
lret
jmp
cwtl
sti
rcrl
or
sbb
pop
test
rcrb
in
and
cmpsl
adc
ret
add
xchg
loop
ljmp
add
lahf
adcl
movsb
mov
repz
cld
add
sbb
add
adc
insl
or
jne
aam
add
outsl
bound
arpl
push
push
push
outsb
dec
add
dec
cmp
sub
pop
inc
pop
popa
pop
inc
push
cmp
xchg
add
clc
sub
push
push
icebp
push
nop
sbb
add
cmp
push
and
xor
adc
add
mov
jo
adc
inc
push
das
sbb
outsb
dec
jb
sldt
pop
adc
or
or
or
pop
mov
jmp
xchg
iret
mov
mov
out
pushf
testb
pop
std
sub
jno
arpl
or
or
inc
imul
fstp
imul
mov
jbe
mov
clc
mov
fdivl
enter
add
mov
test
jbe
mov
xor
stos
enter
jecxz
lahf
xchg
cmpsb
ret
add
repnz
xchg
imul
mov
jp
mov
imul
pop
jno
mov
jg
mov
push
and
insl
imul
jb
loop
dec
sub
push
dec
sbb
daa
pop
pop
inc
mov
sub
push
add
pop
cmp
pop
pop
hlt
xor
adc
xor
dec
cmp
sti
pop
push
sub
sub
or
aas
adc
cmp
or
daa
bound
add
outsb
adc
mov
adc
or
push
jne
nopl
push
out
jo
cli
enter
andl
lds
lds
fwait
jns
in
js
mov
sbbl
xchg
fadds
jmp
stos
ret
sub
rcl
and
pop
int3
rcll
ret
mov
stos
pusha
out
lds
test
into
nop
lret
rol
mov
ljmp
lahf
lret
shlb
mov
add
test
xchg
hlt
lahf
scas
sahf
in
xchg
lock
scas
pop
dec
xchg
insb
push
or
jg
movsb
pop
and
sbb
insl
and
push
and
xor
aad
insl
fistps
pop
data16
push
inc
inc
dec
add
pop
es
add
sbb
jge
mov
push
push
mov
mov
pop
xor
dec
pop
ss
xchg
push
gs
or
adc
xor
jnp
pop
pop
je,pt
pop
and
pop
pop
cmp
jp
sbb
adc
jmp
repz
cltd
xchg
add
mov
filds
lahf
clc
out
cltd
loop
lcall
aam
push
outsb
jmp
mov
shrd
scas
and
not
mov
inc
imul
mov
cld
mov
aam
jp
stos
pcmpgtb
add
stc
test
pop
popf
out
push
sub
jmp
xchg
xchg
pop
sti
mov
or
or
imul
xor
dec
dec
xor
add
jo
imul
push
in
cwtl
dec
cmp
cwtl
dec
dec
xor
dec
cmp
xor
pop
pop
xor
pop
push
sbb
or
rolb
sub
add
pop
dec
jae
and
outsb
push
cmp
pop
cmp
pop
add
sub
bswap
sbb
push
outsb
push
pop
jno
push
or
or
cmp
jbe
mov
jne
lret
mov
dec
imul
mov
outsl
add
pop
add
push
je
jns
cltd
xchg
inc
or
adcb
mov
mov
pop
js
adc
pusha
xchg
add
pop
or
imul
cwtl
push
pop
jne
js
add
or
inc
lret
mov
mov
cld
mov
in
push
pop
or
out
and
inc
outsb
add
insl
push
xchg
insb
ror
in
pop
or
call
add
and
inc
imul
aas
or
lods
adc
sub
pop
pop
sbb
iret
aad
fadd
lea
dec
mov
xor
sbb
mov
cmp
push
dec
mov
add
mov
jmp
pop
add
push
test
outsb
ror
inc
cmpsb
test
add
cmpsb
loopne
sahf
pop
lahf
jl
add
addr16
lcall
inc
inc
in
xor
xlat
imul
xorl
push
cmp
jb
cli
mov
mov
jmp
xchg
jnp
add
imul
stc
adc
mov
xchg
add
cmp
out
push
std
lods
out
shlb
pop
adc
dec
pop
cld
mov
inc
add
test
pushf
stos
inc
imul
decl
sbb
and
mov
cli
fidivl
orb
dec
add
xchg
fnstsw
push
dec
inc
cmp
in
in
leave
in
sbbb
fbstp
sub
js
inc
lea
jle
jns
fsubrs
daa
mov
mov
pop
bound
adc
mov
sahf
std
into
rcrl
lahf
dec
inc
int
add
movsb
subb
daa
mov
xchg
imul
jnp
negl
shl
xchg
iret
jo
push
adc
add
int3
fldt
repz
xor
lret
mov
jmp
lahf
insl
add
add
negl
jecxz
out
sub
cmp
jl
cmp
xor
ret
or
mov
int3
pop
rcrb
icebp
cmp
shlb
inc
das
push
or
or
dec
add
dec
xor
cmp
push
add
cmp
push
stos
add
sbb
pop
lds
push
leave
or
aaa
jecxz
jno
push
mov
imul
stos
xor
fstps
xor
adc
dec
nop
fldt
mov
pop
jo
movb
or
std
incl
add
add
mov
hlt
push
xchg
sub
sbb
daa
scas
cmpsb
jmp
icebp
sbb
sbb
stc
xchg
sarl
pop
dec
adc
mov
outsb
lret
sub
mov
lahf
lret
add
inc
daa
add
icebp
into
or
movsl
int
mov
popf
lret
add
sub
push
int3
sti
je
jo
es
dec
and
aas
fiadds
mov
jmp
test
cli
cmp
test
stc
iret
pop
dec
ficoml
pop
mov
shll
push
xor
mov
je
cmp
cmpsl
in
mov
stc
add
arpl
mov
add
mov
jnp
into
pop
imul
xor
xchg
mov
lds
ljmp
imul
jne
test
dec
sbb
cmpsb
push
orb
fstpt
push
int3
ret
imul
gs
gs
jae
xchg
mov
xchg
push
cwtl
push
push
mov
pop
dec
pop
jge
xor
inc
dec
push
pop
pop
push
nop
add
jmp
xchg
imul
mov
imul
push
test
aad
sbb
gs
lock
and
aam
test
or
lret
xchg
xor
scas
in
add
cmp
or
dec
lock
lcall
adc
inc
add
test
inc
push
aas
lcall
mov
clc
movsl
mov
sti
outsl
jmp
mov
cltd
push
shrb
idivl
adc
out
aad
sub
xor
psubq
shrb
pop
push
ret
das
xchg
sbb
hlt
cmpsl
jbe
cmc
and
add
xchg
jns
insl
outsl
xchg
dec
pop
sub
fwait
sub
jb
push
les
mov
movsl
mov
mov
aad
xchg
cmp
test
sahf
add
mov
filds
xchg
cwtl
pusha
inc
loope
mov
mov
adc
pop
dec
js
lret
add
mov
call
in
ljmp
dec
cmp
pusha
pop
jo
or
cmp
jmp
repnz
cmp
pop
ret
and
inc
cld
add
sbb
push
mov
cmp
test
cmp
daa
jge
push
aas
jnp
add
fwait
in
fidivrl
cmp
imul
das
pop
cmpsb
jmp
insl
imul
inc
adc
add
adc
test
add
push
sub
imul
push
shld
pop
popa
and
push
in
cmp
add
dec
les
movsl
outsb
clc
push
and
dec
bound
inc
cmp
jne
jo
pop
jle
pusha
pop
jbe
sub
cmpsb
ljmp
and
test
inc
out
inc
fcmovnbe
adc
push
and
imul
mov
popl
shlb
data16
movb
adc
inc
dec
lods
leave
and
pop
fwait
mov
mov
and
lahf
cmpb
push
stc
sub
or
pushf
push
push
add
cmpsb
ljmp
push
lahf
pusha
jne
loop
stos
cmp
add
rcrb
sti
push
mov
sub
fdivs
cmpsl
adc
push
mov
fs
push
dec
and
sub
add
mov
test
push
add
sub
add
test
repz
sub
jmp
in
ret
imul
or
icebp
pop
adc
sbb
fwait
mov
test
pop
hlt
pop
mov
push
pop
pop
insb
push
cwtl
lret
lcall
add
js
out
sbb
mov
dec
lods
add
xchg
fldt
dec
mov
cmpsb
cmp
cli
pop
scas
mov
shr
add
pop
jle
mov
mov
cmc
xchg
or
loop
aad
xlat
pop
sbb
push
pop
mov
iret
xor
xor
arpl
pop
push
mov
add
es
cmp
fistps
sahf
mov
sbb
jmp
jg
inc
dec
loope
dec
add
cmp
in
pop
mov
pop
mov
fbld
push
enter
fidivs
dec
xchg
rcll
pop
lret
add
fld
cmc
call
test
add
or
dec
jnp
mov
jbe
xchg
pop
out
sub
int3
stc
pop
out
mov
jle
sub
cs
and
imul
sub
insl
mov
xchg
push
les
jmp
gs
push
movmskps
mov
fstpt
add
mov
insl
ror
push
jno
inc
pop
int3
leave
sarl
out
add
or
repz
stc
cmp
nop
add
sbbb
jnp
enter
rorb
addr16
lahf
stos
fidivl
jnp
pusha
out
int3
xor
loopne
pop
mov
fstpt
push
insl
mov
add
mov
jmp
addr16
popa
jmp
jge
pop
in
sbb
sub
jp
jne
imul
out
pop
sub
adc
adc
sub
test
push
stos
add
push
das
or
pusha
orl
jne
pop
ficoms
xor
popf
pop
inc
add
xor
xchg
and
or
mov
mov
cmp
sub
push
mov
repz
sub
out
mov
push
xchg
cmp
leave
pop
sbbl
into
in
add
jne
fcompl
xchg
add
mov
add
push
fildll
and
sbb
imul
fnstenv
pop
cmpl
and
fcoms
adc
fcompl
xchg
dec
mov
bound
iret
imul
loop
out
pop
imul
or
push
lods
lahf
and
enter
mov
sub
jnp
call
insb
fsubs
jge
sub
hlt
data16
inc
stos
or
loope
pop
push
test
ss
jmp
lods
add
mov
jmp
ror
orb
push
pop
pop
pop
add
daa
push
mov
mov
xor
add
fs
and
cmp
ljmp
fnstcw
mov
popa
dec
ds
push
dec
repnz
addr16
sarl
cwtl
ss
sbb
enter
rcrl
clc
aam
add
add
cli
xchg
addb
fwait
iret
pop
popf
or
cmp
lahf
push
sub
inc
add
std
push
mov
aaa
mov
orb
add
in
sbb
orl
pop
jge
cmp
in
xor
push
or
fsts
fmul
pushl
addl
cs
js
pop
pop
sub
xor
arpl
jge
fmull
loope
jno
sbb
push
pop
jp
insb
lods
rcrl
in
sarb
iret
movsb
addl
mov
test
imul
pushf
inc
addl
pop
pop
xlat
dec
sub
add
aaa
ret
fbstp
fwait
xchg
add
iret
nop
mov
mov
add
xchg
fisubrl
in
lret
pop
into
aaa
xchg
fisubl
addr16
sbb
sti
or
mov
adc
push
add
pop
pop
pop
adc
push
loopne
iret
shlb
fs
jge
add
sub
scas
add
push
xor
and
cmp
add
jb
lock
enter
iret
imul
pop
adc
ss
inc
leave
mov
cmp
inc
cwtl
inc
inc
fidivl
or
xor
cmp
push
insl
jmp
push
dec
add
ds
inc
sub
imul
icebp
test
sbb
mov
and
outsb
imul
pop
inc
mov
mov
jne
inc
movsl
sub
daa
movsl
in
mov
and
imul
sub
xor
jae
imul
iret
mov
pop
mov
and
fdiv
pop
xor
and
xchg
add
idiv
imull
sub
adcl
enter
cmpsl
lds
push
flds
mov
pop
stos
xchg
jo
inc
mov
jg
clc
and
jnp
pop
iret
cmp
push
mov
enter
loopne
fcmovnb
outsl
or
rclb
adcl
orb
mov
cmp
fistps
push
mov
cld
mov
mov
push
iret
popa
or
imul
test
sbb
inc
call
push
in
add
imul
pop
inc
lds
lahf
pop
outsl
jbe
dec
stos
imul
add
mov
fisttps
pop
sbbl
sbb
push
mov
pushf
sbb
adc
add
cmp
add
dec
test
pop
pushl
pusha
push
add
aad
popa
aas
jae
add
lods
movsb
mov
pop
int
lods
push
ljmp
dec
lods
jae
jl
or
outsl
js
and
in
pop
adc
sbb
int
pop
mov
sbb
xchg
xchg
mov
push
subb
pop
subb
lods
add
rorb
cmp
adc
int
fldenvs
ljmp
fbstp
pop
adc
jns
loopne
adc
shlb
mov
bound
arpl
mov
sti
or
fbld
imul
movsl
push
out
and
jg
fisubrl
flds
jae
fnsave
jbe
loope
xchg
shll
gs
mov
int
testl
or
pop
les
lahf
js
cld
mov
adc
ljmp
outsl
adc
insb
rorl
inc
gs
adc
xor
cmp
cmc
enter
push
or
sub
mov
pop
sbb
lcall
inc
es
push
fcos
daa
sub
fdivs
roll
or
pop
insl
and
mov
dec
pop
pop
outsl
adc
jo
pusha
add
sbb
mov
and
sub
sub
aad
hlt
pop
call
cmpsl
mov
jbe
push
jae
inc
pop
cmc
mov
mov
loopne
xchg
cli
and
adc
sbb
pop
adc
pop
jae
aaa
pop
cwtl
mov
dec
popf
mov
mov
adc
scas
test
cltd
imul
sar
ret
rclb
lcall
out
clc
dec
movsb
add
or
lea
or
outsl
testb
stos
out
mov
imul
mov
stos
sub
insb
in
andb
loop
jns
jmp
les
pop
pop
cmp
sbb
out
incb
test
mov
xchg
sub
ljmp
add
dec
cwtl
and
add
loop
add
adcl
pop
inc
push
xchg
into
pusha
les
xchg
leave
cs
loope
pop
int3
ja
pop
jle
les
add
xchg
sub
ds
scas
fldcw
inc
push
dec
sbb
add
bnd
add
adc
pusha
imul
aas
dec
fnstcw
clc
es
inc
stos
cwtl
cmc
pop
add
je
sub
repz
jb
jno
pop
sbb
fstpl
mov
adc
mov
scas
lods
aad
cmp
add
dec
mov
xor
inc
and
add
jmp
add
enter
repz
lods
stos
insb
push
bound
pop
add
mov
dec
and
in
xor
into
mov
ss
or
cwtl
mov
popf
sti
test
push
dec
sbb
mov
aas
push
xlat
push
imul
loopne
out
jg
ret
and
mov
xor
add
add
mov
in
add
in
xchg
push
imul
fidivs
cli
imul
cmpsl
adc
cmp
adc
nop
iret
daa
call
cmp
in
out
inc
adc
xor
lahf
mov
outsb
js
ret
add
lret
pop
xor
push
mov
aaa
add
cmpsb
addb
andb
ljmp
imul
jge
mov
add
cmp
push
fiaddl
sbb
and
adc
mov
jge
stc
adcb
cld
das
dec
ret
scas
mov
test
in
add
out
lods
mov
pop
xlat
daa
sbb
inc
add
sub
push
cmp
rcl
add
jnp
inc
mov
lea
push
in
mov
mov
jg
jb
lret
rcrb
add
repz
jmp
jae
push
in
xchg
push
leavew
shrl
das
and
pop
sbb
jl
ret
mov
outsb
jge
mov
out
daa
andb
test
rclb
stos
xchg
jbe
push
shr
movsb
fs
int3
roll
add
sub
inc
sub
hlt
sub
subl
loopne
mov
into
jns
cmp
add
cmp
jp
imul
add
mov
addb
rorb
mov
jbe
add
mov
xchg
imul
mov
icebp
and
inc
je
sub
add
inc
dec
push
fwait
js
pop
call
jp
mov
lds
fnstcw
aam
push
icebp
push
dec
out
or
add
push
and
add
cli
and
jg
cld
std
dec
jge
xchg
sarl
je
add
movsl
ja
xchg
filds
mov
in
adc
jl
add
push
mov
ds
jb
dec
lods
or
mov
xchg
xor
and
xchg
add
sub
mov
and
out
sbb
imul
lock
pop
push
mov
mov
mov
mov
mov
pop
cmp
ja
std
hlt
and
lods
and
int3
in
mov
adc
and
jns
pop
jle
int
jp
pop
xchg
sbbl
fisttpl
jns
insl
insb
add
xlat
xlat
cmp
push
js
scas
jo
xchg
sbb
cmpsl
pop
repnz
in
cmc
or
sbb
out
sub
add
loope
jnp
cmp
addr16
xorl
or
fisubs
outsb
mov
mov
pop
sbb
cwtl
xchg
sar
mov
popf
in
mov
push
adc
popa
sbb
inc
push
jge
fwait
imul
sbb
mov
pop
int
lods
or
jnp
jg
pushf
mov
pop
pop
cld
mov
ret
movsb
loopne
sub
xchg
adc
dec
adcl
or
test
add
mov
mov
push
sbb
rcrl
jo
jne
loopne
jp
ds
mov
jl
cli
mov
sub
cmpl
dec
les
in
das
outsb
pop
imul
dec
out
lahf
daa
pop
sbb
xchg
icebp
fwait
rcl
jnp
adc
sbb
xchg
rcl
push
mov
push
pop
sbb
mov
or
cmp
stos
call
add
push
mov
sbb
xchg
imul
cmp
pop
sub
loope
pop
mov
jno
mov
push
add
sub
cmp
inc
jge
add
push
mov
lret
mov
cmpsl
pop
imul
mov
repnz
mov
imul
push
push
push
push
inc
hlt
xchg
inc
add
sbb
jmp
add
loope
xchg
je
mov
stc
jae
rol
arpl
mov
and
mov
stc
push
xchg
push
sbb
cmp
xchg
imul
sub
sub
push
adc
xchg
repz
jns
cmpsl
pop
inc
jge
adc
aas
roll
fsubrs
ljmp
push
fldcw
jne
imul
push
aam
or
add
aaa
cwtl
ret
mov
mov
and
fcomps
or
sbb
stos
addr16
je
dec
imul
pop
rcll
add
pop
lds
cmp
imul
jp
inc
push
inc
fwait
es
jns
das
mov
ret
jnp
insb
mov
imul
loop
sahf
mov
addl
out
jo
fstpt
push
and
mov
sbb
cli
xchg
dec
add
aad
scas
add
xor
iret
jl
dec
push
xchg
out
jecxz
dec
pop
rclb
dec
imul
push
addr16
jp
xchg
repnz
dec
aam
insl
push
mov
out
mov
stos
std
out
or
stos
test
pop
icebp
imul
cmp
mov
add
add
inc
add
pop
add
pop
add
rcll
xchg
fadd
ret
out
outsb
test
jmp
mov
add
push
push
imul
sahf
insl
or
pop
pop
flds
inc
push
aad
xchg
mov
fisubl
pusha
mov
mov
sbb
cmp
xchg
imul
and
cmc
or
xor
je
push
repz
bound
add
movsb
add
lcall
inc
and
movsl
sub
out
out
add
pop
jo
mov
adc
add
jecxz
mov
imul
in
push
sbb
push
lods
add
fistpll
mov
or
lcall
pop
cmp
fiadds
loop
cmp
add
pop
add
int3
inc
lock
xchg
pop
sbb
xchg
popf
fsubrl
pop
std
iret
add
loop
cmc
imul
fxch
cs
xlat
pop
push
mov
nop
pop
cmp
add
test
and
pop
test
sbb
cmpxchg
ja
scas
add
arpl
mov
lcall
mov
stc
out
cmp
mov
addr16
pop
lock
sahf
pop
dec
jne
imul
pop
xlat
mov
jmp
sbb
cld
pop
push
pushf
nop
bound
pop
loopne
sahf
test
roll
loop
mov
in
dec
jl
push
and
ret
push
xchg
ljmp
mov
dec
dec
or
add
jecxz
fs
aad
imul
clc
movsb
scas
cmp
sub
xchg
unpckhps
push
fidivrl
bsf
lret
sbb
pop
mov
sbb
cmpsb
add
adc
pop
xlat
pop
or
fwait
jb
decl
add
sbb
loope
mov
fsubrs
mov
xchg
push
push
lods
pop
cmp
sti
xor
aaa
jno
lods
movsl
mov
dec
lahf
xlat
jecxz
ja
shrb
push
bound
push
jle
pop
icebp
js
enter
xor
xchg
sub
popa
and
bound
pop
clc
jmp
test
mov
pop
add
mov
sbb
xor
loope
mov
imul
out
fldenv
jno
sbb
sbb
push
jge
add
outsb
sbb
les
mov
dec
push
test
jle
cmp
or
or
xchg
popf
loop
mov
daa
aas
push
jnp
mov
and
test
rorb
add
stc
cmp
sahf
imul
push
imul
in
mov
in
lods
adc
jno
or
jo
xchg
dec
or
add
inc
sbb
ss
or
mov
mov
rcrl
lds
iret
cmp
add
inc
xchg
xchg
mov
mov
loopne
sub
test
or
and
or
lea
inc
jne
ds
sub
inc
insb
jmp
mov
or
mov
lret
sahf
imul
and
and
add
rol
dec
sub
mov
adc
cld
sbb
xlat
push
mov
aam
push
xorb
pop
xchg
pop
dec
arpl
mov
inc
sub
popa
dec
out
stos
stos
imul
divl
pop
dec
lcall
add
inc
js
pop
mov
sarb
lcall
mov
mov
lock
jg
sbb
or
mov
xor
mov
fisubs
test
mov
sub
clc
cld
ffreep
pop
sbb
jmp
mov
sbb
sub
push
inc
add
adc
mov
xchg
adc
arpl
cs
fcmove
pusha
stos
sbb
jge
imul
pop
data16
jmp
pop
lret
or
xchg
xchg
dec
mov
cmpsb
cmp
mov
aaa
in
imul
stos
orl
sub
in
push
mov
fimuls
lock
rcrl
pop
or
and
mov
out
push
sub
bndstx
jbe
xor
xor
xor
out
leave
cmp
add
mov
test
xchg
xchg
jge
cmc
rcrl
adc
mov
sub
mov
mov
jp
mov
sarb
mov
imul
shr
in
sti
or
mov
lret
mov
add
sbb
xor
rolb
inc
add
mov
push
test
sti
imul
cld
inc
add
inc
mov
clc
jecxz
adc
mov
sub
sbb
pop
nop
inc
shl
std
out
scas
imul
sub
mov
aad
push
shll
mov
adcb
cmc
or
shr
and
adc
insl
imul
pop
cmp
pop
xor
out
mov
add
aam
cld
in
lds
sub
scas
mov
sarb
shll
fs
repnz
sbb
push
data16
add
mov
mov
scas
dec
add
cli
fwait
pop
pop
inc
add
jb
add
ficompl
xchg
and
mov
jnp
adc
xchg
cmc
fadds
and
ss
imul
les
xor
or
mov
and
xchg
sar
orb
outsb
rolb
xor
repnz
mov
pop
loope
jns
call
add
das
rcll
sahf
or
clc
push
outsb
pop
jne
fsubrl
pop
add
mov
push
sbb
xlat
jo
stos
push
cmp
jge
fnop
mov
or
add
cmpsl
hlt
cmc
jae
imul
and
shl
aaa
arpl
add
sbb
cmp
push
adc
pop
in
sbb
mov
les
shl
out
inc
jp
pop
sub
inc
hlt
add
jmp
push
pop
xor
add
mov
ror
gs
jl
adc
jp
inc
mov
loopne
push
mov
lods
outsb
fistps
fidivl
mov
sub
mov
jnp
and
cwtl
imul
sbb
sbb
sbb
out
adcl
lods
and
or
bound
adc
jne
fs
add
mov
cmpb
push
jl
sbb
xor
imul
cwtl
jle
add
mov
lahf
jecxz
add
loopne
imul
rcrl
lods
jb
imul
mov
dec
sub
pusha
xlat
pop
popa
nop
imul
cmp
mov
push
jp
pop
aad
addb
les
xchg
mov
add
jnp
loope
loope
push
mov
inc
test
call
push
and
popf
loopne
xchg
add
loope
and
mov
sub
aam
clc
pop
sbb
or
sti
push
nop
or
push
mov
pop
push
and
xchg
and
stc
sub
xchg
mov
jecxz
cmp
rorl
dec
loopne
jg
jmp
sbb
jmp
jge
pusha
cli
sbb
mov
fnstsw
push
add
jecxz
xor
pusha
pop
adc
xlat
cli
xor
add
push
arpl
jns
adc
out
test
loope
add
popf
and
cmp
dec
pop
mov
inc
insb
gs
clc
jge
ficoml
inc
jno
adcl
push
adc
lret
ljmp
or
imul
or
testl
xchg
jle
add
test
pop
ret
lods
pop
imul
adc
and
mov
shll
pusha
scas
sub
aam
testb
lock
mov
or
pusha
mov
int3
pop
mov
jge
outsl
dec
fisttps
jo
xlat
add
stos
inc
mov
sbb
sbb
in
mov
lods
cwtl
push
adc
sti
pop
loopne
add
xor
sub
rcll
mov
shrl
int
cltd
push
add
aam
sub
cmp
adc
mov
add
inc
pop
loope
and
cmp
lock
mov
push
or
jno
add
jno
repnz
jb
outsb
xor
inc
push
inc
mov
push
lods
mov
mov
and
cmp
lock
jle
pop
rcll
dec
push
ror
add
jmp
imul
call
scas
mov
xchg
mov
mov
test
cmpsl
clc
ja
aaa
cli
push
js
or
pop
aaa
data16
inc
sbb
or
mov
xor
mov
add
pusha
and
pop
or
push
dec
adc
and
xor
mov
call
mov
xor
clc
push
into
cmp
andb
mov
add
push
clc
cltd
sbb
rcll
dec
fists
ret
insb
or
out
adc
test
mov
fs
mov
or
cmp
shrb
push
jo
mov
mov
jne
add
adc
add
or
stc
jae
imul
fdivrs
mov
inc
enter
ret
mov
xchg
dec
out
push
mov
xchg
idivb
data16
push
cmp
mov
sub
adc
fsubrl
mov
pop
jae
cwtl
sbb
mov
mov
and
inc
inc
and
push
adc
lret
or
enter
bound
cmp
pop
inc
or
add
xchg
out
dec
jb
dec
mov
dec
cltd
pop
cmpsl
mov
add
and
ret
adc
inc
sbb
call
adc
int3
lcall
daa
mov
jns
jge
pusha
popf
mov
mov
adc
call
in
bound
out
gs
inc
add
fwait
enter
add
jb
sub
or
andb
and
mov
fwait
adc
adc
out
pop
jnp
and
or
imul
sub
adc
nop
fs
xchg
push
push
cmpsl
iret
subb
jle
fmull
sbb
rclb
push
push
fwait
mov
dec
dec
pop
shlb
jg
into
add
mov
pandn
pop
repnz
add
addr16
add
jbe
jp
sub
mov
aad
mov
fs
xor
in
mov
push
mov
jae
xlat
push
jg
es
imul
in
cmp
jge
push
or
sub
mov
daa
cld
enter
stos
and
imul
sbb
adc
stos
imul
ja
and
out
idivl
xor
lret
fisubl
fiaddl
mov
in
ja
das
aad
addb
mov
add
add
nop
call
jb
mov
mul
lret
cmp
leave
cmp
sbb
sbb
lock
pop
jge
popl
mov
dec
mov
movsl
xchg
add
ficomps
imul
icebp
sbb
loop
sub
xchg
andb
imul
mov
add
adc
mov
jns
add
std
and
jp
push
cmp
mov
ret
jno
add
mov
jnp
mov
push
in
sub
subl
jmp
sarb
mov
add
fstpt
and
pop
push
aad
insb
xor
add
mov
pushf
jns
and
ljmp
add
xor
in
ljmp
pop
cmc
xchg
add
int3
sub
sbb
int
stos
in
cmp
lea
mov
mov
adc
bound
dec
sub
aas
ljmp
les
push
pop
cmp
or
loope
scas
add
std
and
loope,pt
jge
add
dec
in
jle
in
push
test
mov
repz
pop
xchg
cld
sar
sbb
mov
sub
cwtl
imul
xor
mov
cltd
push
mov
sbb
sub
inc
and
outsb
and
out
insb
sbb
in
xchg
adc
push
push
adc
push
ret
xor
xor
jg
negl
imul
mov
add
push
cmp
push
minps
std
out
fimull
mov
into
mov
fsubr
jmp
adc
dec
pushl
sub
cmpsb
cmc
push
pop
fnstenv
mov
je
imul
xchg
mov
xchg
mov
or
fmul
fwait
add
ss
idiv
mov
xor
adc
jle
mov
xchg
ret
lret
leave
lahf
mov
add
fisubs
mov
shlb
stos
cmp
adc
mov
xchg
adc
rcrl
fs
or
jecxz
scas
mov
and
loopne
mov
inc
cmpsb
pop
or
sub
add
jno
imul
mov
adc
icebp
or
mov
popf
cs
xchg
add
lds
pop
xor
jmp
add
shrl
add
int
xchg
fistps
inc
mov
imul
inc
mov
dec
scas
gs
loope
ja
sbb
mov
dec
into
nop
jmp
and
jnp
js
test
mov
adc
pop
mov
add
sbb
and
shll
insb
jle
adc
cs
push
add
mov
movl
mov
aad
xor
add
das
mov
sub
jae
lahf
jle
stos
or
js
stos
mov
fwait
cmp
stc
in
and
add
xlat
sti
ficomps
mov
add
sbb
bound
ja
lds
mov
fs
ret
mov
out
addr16
rcl
jg
or
jmp
jno
stos
aam
call
adc
popf
stos
lahf
les
in
add
loope
push
repnz
gs
add
neg
test
push
pop
fstps
pushf
cmp
rcr
mov
dec
inc
pop
test
mov
aad
and
jne
stc
sbb
jnp
adcb
cli
ss
bound
imul
notb
testl
cmpsb
daa
inc
popa
sub
adc
jecxz
fmul
scas
add
rcrb
and
add
mov
outsb
xchg
outsl
loopne
shrb
jle
fnsave
mov
and
jnp
jb
jmp
jno
leave
stos
popf
mov
pop
stc
iret
pop
mov
les
ficoml
add
in
add
arpl
xlat
dec
test
mov
sbb
les
mov
clc
pop
cmp
cmp
inc
jae
mov
add
gs
jmp
xor
cmp
sbb
sub
lret
push
adc
pop
jne
and
and
cmpsl
mov
cmp
xor
ret
cmp
lret
loop
movsb
ss
or
push
jne
pop
inc
mov
jae
xor
pop
inc
leave
cmpsl
mov
lcall
imul
cs
push
sbb
sbb
outsb
jp
mov
add
mov
adc
nop
pop
mov
push
popa
lods
js
imul
xlat
mov
or
movsb
jnp
cmpsb
imul
push
cmp
fimuls
dec
jge
dec
xchg
mov
mov
mov
jg
ret
sub
push
jge
mov
imul
or
pop
lret
push
dec
push
dec
inc
shlb
sbb
fidivs
mov
mov
push
pop
cs
fwait
pop
mov
cmpsl
mov
and
imul
out
imul
nop
cmpsb
test
icebp
mov
cmpl
jo
cwtl
adc
inc
xor
lds
xchg
shrb
js
push
in
test
pop
outsb
lods
sbb
cmp
out
mov
cmpsl
inc
int3
hlt
sub
ja
mul
cltd
shll
and
inc
movsl
add
sbb
outsb
jo
sbb
lods
fisubrs
lcall
enter
dec
in
in
rcll
in
movsb
mov
add
orb
testb
jne
ret
mov
pop
and
xor
add
fsubrs
sbb
adc
and
subl
xlat
sub
jnp
jle
pop
cmp
mov
pop
jns
or
stos
sbb
pop
pop
jl
roll
in
sbb
and
clc
mov
add
jnp
test
ret
adc
into
and
enter
jle
stos
lea
icebp
aaa
adc
push
sbb
mov
stos
pop
popa
mov
adc
push
out
mov
aam
js
pop
lods
pop
mov
add
jmp
stos
sbb
mov
xor
pop
rol
popa
add
xor
jmp
inc
add
jmp
sbb
sub
repz
add
inc
or
movsl
jg
mov
outsb
jl
xor
jecxz
jle
fsub
inc
mov
cmpsl
sti
iret
sbb
pop
cmp
add
icebp
lret
js
imul
mov
add
ja
pop
ja
xchg
test
cmc
cltd
hlt
aaa
les
lds
inc
call
imul
push
mov
xlat
add
cmp
push
int
pop
jbe
adc
pop
cli
and
lods
lahf
shll
mov
mov
pop
out
in
or
int3
add
mov
call
pop
add
pop
dec
push
push
aas
xorb
add
jecxz
sahf
test
ja
pop
xor
rcl
sub
and
cld
pop
aas
jmp
sub
xor
mov
sub
lock
or
lret
mov
add
or
jg
sahf
test
dec
adc
imul
push
xchg
pop
mov
ja
xchg
ficompl
test
insl
xchg
push
out
ret
test
cltd
mov
sbb
jns
adc
cmp
dec
stos
imul
popf
orb
and
lret
sbb
mov
dec
jp
add
add
shll
push
mov
mov
imul
pop
inc
es
sbb
adc
dec
aas
jge
mov
pop
das
cmp
xor
dec
ficoml
dec
cmp
mov
cmp
dec
inc
leave
mov
xor
pop
sbb
add
jne
es
mov
cmpsl
insb
xor
imul
adc
push
add
cwtl
test
test
add
int3
sahf
inc
add
es
bound
push
nop
fisttps
xor
mov
jl
ljmp
seta
lea
cltd
xor
ds
adc
mov
mov
mov
fld
out
jl
add
js
fwait
and
pop
sbb
add
xchg
gs
push
xchg
add
xor
stos
dec
jge
fdivr
push
pop
adc
test
xchg
pop
inc
cs
sbb
pop
add
xor
sub
or
rorl
add
lods
lock
movsl
push
add
insl
subb
xor
cmp
push
pop
imul
sbbb
xchg
fstl
jno
imul
stc
inc
call
jg
mov
add
mov
pop
insl
fidivrs
es
jo
mov
or
xchg
shr
push
inc
scas
into
dec
sub
dec
repz
and
pop
add
enter
pop
sbb
cmpsl
je
in
xchg
add
fcomip
dec
cmc
std
dec
cli
add
jo
pop
scas
adc
and
int
mov
mov
fidivl
repnz
sahf
adcb
add
sbb
repz
jge
dec
inc
pusha
sub
cmc
add
push
mov
sub
push
fbld
dec
xchg
hlt
mov
icebp
mov
xor
pop
mov
daa
and
popf
ret
mov
sahf
dec
pop
fiaddl
adc
add
push
pop
js
clc
mov
add
in
mov
out
imull
inc
stos
or
popa
sbb
xchg
aam
push
adc
cmp
add
jae
sbb
mov
divl
inc
orb
pop
lcall
push
jns
aaa
pop
aam
cwtl
pushf
hlt
mov
fldenv
jmp
sub
shll
push
xchg
sub
mov
pop
pop
and
fcomps
clc
cltd
in
jge
test
jg
daa
sbb
pop
mov
or
ret
addr16
inc
dec
adc
inc
movups
add
hlt
cmp
imul
test
pop
stc
and
push
adc
inc
in
or
std
inc
shl
push
pop
jp
mov
push
or
pop
push
adc
test
and
movb
rclb
fisubrl
sub
insb
loop
cwtl
sbb
cmpsb
fcomp
call
icebp
jg
add
and
pop
sarl
aam
wbinvd
outsb
mov
stos
out
jo
daa
adc
push
bound
mov
aaa
add
inc
hlt
rolb
test
daa
cs
imul
push
push
xchg
sbb
mov
or
jne
or
dec
add
push
jmp
sbb
add
sub
cmp
add
shrl
pushf
imul
jne
sbb
mov
inc
jmp
push
imulb
loop
inc
add
out
push
push
xchg
pop
xor
lods
adc
cmp
jae
add
sub
sub
jg
adc
jae
mov
pop
mov
cltd
addl
stos
test
in
or
add
sub
jp
test
and
icebp
icebp
add
lds
insl
add
jge
add
push
cmp
out
fwait
mov
loop
mov
pop
xorl
out
sub
mov
add
push
pop
fildll
daa
dec
sbb
sbb
icebp
push
add
mov
loopne
out
mov
out
insl
cmp
std
inc
jo
gs
xor
cli
mov
sub
jmp
pop
pop
and
out
add
lret
xor
lock
stos
test
pop
mov
push
orl
xchg
mov
or
or
dec
outsb
xchg
fmulp
clc
sub
mov
imul
outsl
add
addr16
loope
imul
out
divb
loopne
lds
sub
lock
jo,pn
nop
loop
cltd
ljmp
inc
pop
cld
mov
in
cmp
xorb
ljmp
out
lock
imul
and
rolb
mov
inc
adc
push
push
xchg
cmp
cvtpi2ps
imul
and
mov
sub
mov
clc
add
ds
mov
lock
dec
icebp
cmp
dec
xchg
or
cmp
push
cmpb
out
dec
test
inc
int
inc
jl
mov
dec
and
aas
enter
pop
stos
adc
inc
inc
ficoms
cmp
loope
nop
inc
mov
and
add
jb
dec
not
pop
je
das
in
jl
jno
pop
lret
int3
iret
mov
lahf
rcl
sbb
push
pop
out
in
out
pop
das
lret
mov
outsb
inc
lahf
lods
inc
in
cmp
fidivrl
jne
cwtl
add
cmpsl
sub
popf
addb
outsl
pop
out
loope
add
int
dec
loop
test
hlt
ret
dec
and
fwait
mov
xchg
pop
xor
jnp
out
loopne
imul
and
sub
sbb
sahf
jecxz
les
lea
pop
push
or
in
std
js
out
pop
je
cmp
sub
cmc
cmp
push
ret
add
popf
js
xchg
js
push
movsb
movsb
sbbl
add
dec
imul
cmp
call
mov
aas
pop
fwait
imul
dec
inc
pop
push
jae
sub
sbb
or
pop
push
imul
push
add
pop
and
jno
push
jnp
mov
arpl
add
dec
mov
push
imul
je
dec
sub
ljmp
add
cmpsb
sbb
fcomi
imul
subl
xchg
or
das
inc
xor
stos
fisubrl
out
add
dec
pop
inc
outsb
adc
fldt
jmp
jns
lock
lea
jno
popa
lods
sahf
dec
imul
popa
ja
pop
clc
cmp
xchg
cmp
lods
insb
add
cld
mov
imul
push
adc
divl
jns
push
pop
orb
mov
ss
add
mov
shll
inc
and
push
adc
in
pop
pop
mov
imul
adc
mov
filds
xlat
sub
roll
loopne
adc
mov
pop
sbb
hlt
outsl
clc
imul
and
sbb
pop
pop
adc
imul
sahf
sub
addb
jge
dec
inc
sbb
shl
pop
xchg
adcb
sahf
imul
cltd
add
xchg
cmpsb
mov
les
sub
icebp
lahf
fbstp
pop
outsb
push
pop
in
cwtl
xchg
imul
jle
cwtl
pop
lds
ljmp
inc
fsubrs
add
xchg
cmpsb
cmpb
je
sbb
shl
jns
lods
imul
in
add
enter
sbb
mov
xchg
lds
push
pop
pusha
jmp
and
ret
adc
out
xlat
pop
add
jbe
sbb
xor
dec
add
cld
push
in
cwtl
pop
loope
pop
lock
push
sar
push
outsb
sarl
sub
pop
das
mov
imul
mov
jae
add
repnz
push
add
jbe
loope
pusha
cmp
xor
jecxz
and
insl
cmp
add
enter
inc
mov
push
cld
and
lcall
adc
shrb
je
sti
test
cmp
mov
shl
xor
adc
add
mov
inc
mov
stos
lea
scas
lret
add
sar
adcl
stc
or
inc
popa
pop
inc
clc
sbbl
add
mov
xchg
mov
fcomps
movsl
pop
out
push
or
or
pop
or
out
ltr
jb
cmp
inc
push
inc
cmp
inc
or
pop
push
cmp
push
les
sbb
jg
push
rcr
fwait
loope
js
lret
jmp
inc
fstpl
xor
pop
lods
add
adc
loop
fcompl
lret
jbe
out
mov
insl
cs
icebp
add
or
ljmp
xlat
add
jo
shrb
sbb
mov
hlt
loope
imul
cmc
adc
add
xor
in
fisttps
and
or
push
lcall
ret
add
pop
mov
pop
into
std
int
or
inc
ja
or
push
mov
or
imul
sub
shrb
mov
push
xor
pusha
push
sub
or
ss
push
into
jge
cwtl
add
sub
cld
mov
jmp
out
ljmp
adc
mov
and
sub
add
stc
mov
and
push
mov
xor
adc
sbb
xchg
sub
les
stos
aam
cmpsl
pop
outsb
outsb
adc
sub
xorb
and
das
call
cwtl
into
imul
jne
adc
pop
sub
enter
fwait
sub
enter
in
icebp
dec
pop
std
test
pop
daa
push
sbb
lcall
shl
pop
pop
mov
gs
add
movsl
and
add
in
je
arpl
loop
fs
les
shlb
add
jp
cld
dec
cmpsl
les
add
inc
in
push
pusha
mov
fnstcw
clc
and
push
imul
mov
cli
pop
int3
jne
mov
sub
adc
pop
push
and
into
jb
pop
jg
ja
add
mov
mov
sbb
cmpsb
sbb
xchg
out
add
sar
xor
push
inc
fnstsw
push
pop
push
push
pop
std
in
lods
or
repz
shl
cmp
add
dec
mov
push
sbb
xor
add
inc
test
je
lds
adc
fs
ljmp
add
in
push
das
xor
outsb
dec
mov
pop
lret
mov
ja
xor
lret
xor
shl
sbb
add
push
cmpsl
jbe
mov
enter
and
sub
push
xchg
imul
mov
clc
movsl
mov
das
xchg
jno
add
dec
loopne
sbb
inc
dec
jecxz
add
aad
mov
dec
into
jl
rclb
push
int3
mov
cld
sub
rol
out
lahf
or
cwtl
out
xor
loopne
pop
lahf
or
imul
jne
out
mov
inc
rcll
adcb
sahf
fsubs
xor
mov
pop
iret
and
fisttpl
rclb
hlt
inc
out
xor
add
or
shrb
sbbb
sub
aam
shlb
jb
and
fcompl
imulb
call
orb
push
xchg
lock
push
cwtl
out
xor
or
jp
test
imul
inc
push
adc
cmp
test
aad
mov
push
ja
push
or
xchg
test
jg
jg
pop
xchg
mov
stc
subb
loopne
pop
xor
addr16
pop
push
lods
jns
movsl
in
clc
jae
xor
aad
cmp
add
xchg
mov
in
imul
mov
sbb
ds
sahf
lods
dec
test
js
fcom
outsl
push
add
shlb
stos
pop
adc
push
push
int3
jnp
imul
sub
xchg
mov
jmp
mov
imul
scas
pop
pop
mov
xor
enter
add
sub
lock
outsb
add
outsl
ja
fs
dec
cmpsl
shrb
xor
out
mov
sbb
mov
cld
xor
rcrl
xchg
sbb
jp
call
shlb
sbb
pop
pop
xchg
lcall
daa
adc
ljmp
push
fisubrs
or
clc
inc
jmp
test
cmpl
mov
xor
adc
iret
insl
mov
xor
push
rorb
add
je
jmp
lock
rcrb
cmp
sub
repnz
dec
enter
imul
xlat
jno
push
pop
daa
mov
add
mov
add
ds
daa
xorb
add
fstpt
xor
xor
inc
mov
push
add
lds
fs
sarl
flds
hlt
popa
ret
hlt
mov
mov
adc
mov
add
test
ficomps
addr16
pop
mov
cmpsb
mov
pop
pop
popf
lods
jb
imul
sub
xchg
push
cld
iret
cmp
inc
jle
mov
mov
pop
call
add
and
pop
cmp
sbb
sbb
mov
lock
fcoms
test
xor
daa
dec
imul
sub
pop
shlb
adc
nop
pop
insb
mov
xor
add
icebp
stos
ljmp
push
je
xor
sbb
ljmp
adc
pop
and
push
jg
sti
add
andl
fwait
xor
add
dec
pushl
ror
jne
adc
push
pop
push
call
test
bound
xchg
test
mov
xchg
loop
mov
jo
arpl
iret
inc
sbb
jo
xchg
stc
subl
das
stos
lds
sahf
add
jmp
mov
iret
bswap
push
pop
xchg
fistpl
dec
mov
bound
xchg
js
loop
cmp
sub
call
add
lcall
jns
test
fnsave
out
inc
test
and
into
cmpsl
int3
mov
fisttps
ficomps
xor
add
in
imul
mov
mov
xor
cmp
cmpsl
jnp
push
mov
xor
sub
adc
push
mov
xor
add
or
aad
xchg
decl
mov
lahf
add
mov
shlb
xchg
xor
nop
lods
pusha
lcall
ja
call
es
push
pop
mov
dec
add
loope
aam
cmpsb
pop
mov
pop
sub
filds
pushf
add
xchg
adc
lods
add
repz
sub
sub
lret
cwtl
sti
test
fldl
shrb
mov
pop
sbb
sbb
mov
ljmp
or
pop
mov
insb
xor
or
dec
xchg
and
adc
dec
ror
aaa
xor
pop
imul
enter
inc
testb
cltd
test
cmp
mov
pop
add
in
scas
xchg
sub
mov
fs
mov
es
sbb
mov
push
pop
mov
push
xor
enter
dec
dec
aad
add
mov
jg
xchg
add
inc
test
insl
push
ss
inc
mov
pop
cmp
jno
mov
mov
loopne
rorl
pop
xlat
mov
imul
ret
inc
pop
shr
mov
mov
sub
lahf
stos
and
clc
clc
push
or
notl
imul
jle
xor
mov
ja
or
movsb
je
mov
sbb
stc
imul
mov
sbb
clc
xchg
lret
mov
fsubs
cwtl
mov
lret
sbb
push
rorb
ret
xchg
ds
in
add
cmpl
enter
add
push
pop
and
subl
or
clc
xor
xor
lods
push
or
add
frndint
loopne
mov
mov
enter
add
add
scas
xor
or
das
add
mov
xor
adc
jbe
pusha
add
aam
popf
add
mov
xor
xchg
jno
mov
cmc
out
add
inc
fs
sub
mov
add
xchg
or
jmp
cmp
jbe
mov
jle
rclb
and
pop
lahf
daa
aad
add
fmull
jne
mov
lods
insl
cli
out
push
jmp
orb
adc
mov
ret
lock
adc
cltd
lods
clc
jg
rolb
add
mov
subl
mov
loopne
mov
adc
or
and
test
push
add
data16
loop
js
sti
add
mov
xor
xchg
jns
sub
pop
aas
push
mov
inc
call
push
repnz
mov
xchg
fnstsw
es
cmpsb
mov
cwtl
popw
shl
adc
sbb
dec
sbb
pushf
and
or
imul
sbb
inc
dec
mov
jo
sti
jp
push
or
mov
xchg
lea
xchg
mov
imul
lds
push
jmp
pop
push
scas
adc
ja
imul
and
push
pop
jl
div
ss
cmpsl
add
or
add
fxam
test
jo
jmp
dec
ffreep
outsb
xor
popf
adc
push
test
imul
cmpsl
and
movb
adc
rorb
cmpsl
xchg
sahf
outsb
fistpl
and
xlat
adc
mov
cmp
dec
in
jl
out
cmp
add
inc
adcb
cmp
addr16
lret
pop
add
push
pop
lret
sbb
lahf
loopne
pop
adc
imul
lahf
jne
adc
cmp
cmp
into
ds
sbb
add
inc
cmp
aad
inc
arpl
imul
cmp
fistps
sub
pop
iret
dec
ds
bound
dec
mov
mov
call
cmpsb
add
fisttps
popf
fldl
mov
and
add
xchg
adcb
pop
out
imul
xchg
mov
dec
iret
rcrl
jno
pushf
add
inc
fcomp
adc
inc
ror
imul
push
dec
xchg
pop
imul
daa
adc
cwtl
jmp
in
and
in
sarl
or
or
insb
add
inc
mov
jno
ds
xchg
sbbl
add
jg
mov
xchg
pop
imul
cwtl
inc
scas
inc
push
add
cmp
movsl
ds
addr16
ret
adc
add
enter
std
add
sti
xor
fstpl
xchg
add
lret
lahf
nop
mov
xor
stc
cmp
push
xor
add
push
cmpsb
xchg
stos
xchg
mov
push
call
and
cld
out
cld
lea
fiadds
dec
push
cmp
imul
sub
rcrl
fst
daa
rolb
dec
sbb
sub
dec
sbb
arpl
loopne
fsubs
jb
sub
popa
int3
cli
inc
cmp
dec
add
sub
add
repnz
xchg
sub
mov
xchg
pop
inc
cmp
xor
adc
pushf
sarl
mov
scas
pop
rclb
je
pop
or
andl
lcall
adc
sub
mov
mov
arpl
fsubs
xchg
lds
add
and
adc
fisttps
imul
popf
xchg
push
jno
sbb
jae
fildll
pop
adc
cli
enter
mov
push
xlat
scas
cltd
cmp
fdivrs
outsb
stc
pop
and
mov
rcrl
push
ret
pop
int3
addr16
sbbb
fisubl
das
divb
adc
cmp
pop
push
adc
xchg
sbb
jle
push
imul
adc
nop
mov
scas
je
mov
add
push
fbld
add
sbb
ljmp
iret
and
lods
dec
adc
xor
jle
add
js
roll
int3
cmp
xchg
push
mov
addl
popl
push
aaa
ret
xchg
adc
outsb
fsubrp
xor
xor
or
pop
cmp
testl
add
nop
jge
daa
add
jmp
int3
mov
mov
mov
enter
push
pop
les
cmp
call
daa
push
sbb
inc
inc
lcall
enter
fisttps
pop
movsl
ljmp
add
sub
leave
mov
aaa
sbb
imul
add
jmp
and
sub
mov
add
mov
sbb
lock
jge
xchg
add
xchg
mov
lcall
pop
insb
in
mov
pop
jl
pop
cmp
ja
sbb
and
ret
leave
adc
mov
add
push
jp
clc
sub
push
dec
jbe
xor
sub
in
pushf
out
addl
jns
push
or
cmp
bound
dec
push
mov
jecxz
sbb
iret
movsb
rclb
mov
lods
adc
adcl
popa
add
lock
fmull
jns
lcall
add
cmp
add
out
jo
dec
mov
push
cs
and
adc
inc
push
push
pop
shll
iret
sti
dec
outsb
adc
rorb
negb
sbbb
loopne
and
ja
cli
adc
ja
sbb
clc
loop
insl
xor
mov
mov
add
lods
cmp
int
aaa
mov
mov
inc
adc
push
jns
inc
adc
mov
adc
push
lahf
pop
xor
lock
mov
pusha
test
mov
push
fwait
xchg
pop
and
push
sub
loopne
scas
fnstenv
rcrb
movsb
fimuls
aad
sub
es
add
sub
cmpsb
cmp
testl
or
pop
inc
mov
mov
inc
das
shlb
cwtl
add
inc
jmp
daa
subl
jmp
rorb
in
sbb
lret
addl
sbb
insl
nop
int
imul
sbb
adc
mov
jb
dec
hlt
mov
dec
sub
pop
xchg
aad
pop
stc
icebp
pusha
or
js
add
sub
add
cmp
add
push
jp
ljmp
sub
mov
mov
pusha
lock
add
inc
jbe
iret
mov
in
das
add
jne
clc
cwtl
push
lea
pop
sbb
jl
sbb
fmull
into
mov
xchg
test
pusha
xchg
pop
mov
mov
addb
mulb
dec
sahf
roll
cli
in
pop
insl
out
and
push
add
scas
rorl
pop
push
testb
push
adc
add
push
cld
movsl
ljmp
inc
scas
jl
in
sub
gs
pop
sub
dec
popf
lods
adc
xchg
loop
jmp
cmp
les
outsb
mov
xchg
int
add
mov
mov
test
lret
add
add
cmc
fs
add
adc
cmp
mov
xchg
pop
or
mov
mov
pop
pop
push
imul
iret
lock
add
cmpb
cmpsl
repz
adc
jae
jg
stos
cmp
cmpsb
adc
addr16
adc
out
sub
icebp
inc
lret
bound
jno
cltd
mov
outsb
ss
mov
jmp
add
test
xchg
jge
imul
sbbl
mov
add
cmp
rcr
adc
imul
clc
andl
and
xchg
in
or
in
inc
lods
test
rorb
out
cmp
sbb
mov
add
lock
imul
ret
jle
pop
mov
jmp
jle
decb
das
add
fists
in
add
pop
fistps
push
sub
add
xor
sbb
icebp
cld
mov
mov
iret
aaa
imul
icebp
rolb
cmc
cltd
push
inc
das
rorb
and
sbb
idiv
fiaddl
adc
push
rcrb
pushf
leave
cltd
or
iret
scas
pop
js
push
fldlg2
add
cmp
dec
adc
lret
aad
dec
adc
bound
iret
mov
add
inc
xor
jecxz
jnp
fucom
jle
je
je
test
cmpsb
fildl
push
scas
and
call
maxps
add
ret
outsl
scas
fwait
aaa
dec
add
cltd
cmp
xor
movsb
test
cli
outsb
xchg
add
int3
xchg
insb
or
in
add
imulb
mov
mov
jp
add
shl
ret
bound
ss
rcrl
lret
int
adc
scas
cwtl
shrb
imul
add
sub
loopne
push
out
mov
sbbb
rorb
mov
imul
sti
sbb
inc
push
inc
pop
cld
or
and
push
sbb
jno
jecxz
cmc
or
addr16
ds
cmp
xor
addl
cmp
or
pop
adc
hlt
imul
dec
add
fs
sbb
repnz
ja
in
add
pop
push
test
pop
inc
jp
bound
push
xchg
movsb
mov
data16
enter
and
inc
cli
or
test
aad
lret
and
icebp
outsl
xchg
in
or
stos
cld
lcall
das
push
bound
pop
mov
pop
push
sahf
lods
je
out
xor
push
adc
nop
imul
mov
out
adc
pop
enter
push
xor
bound
in
mov
in
pop
push
jae
aas
packsswb
shll
insb
pop
sub
inc
pop
int3
sbb
mov
mov
cmp
push
repnz
xchg
pushf
dec
and
sbb
lods
rcrl
inc
imul
repnz
clc
fsubl
pop
xchg
mov
pop
mov
and
pop
clc
pop
add
jne
jno
sub
shl
cmpsb
mov
pop
adc
pop
xor
fildl
sub
sbb
out
mov
fistpl
lcall
jmp
ret
mov
ret
bound
adc
add
test
push
add
loopne
sbb
add
ds
cmp
xorb
push
in
imul
bound
sub
test
dec
pusha
push
insl
fistl
iret
es
loopne
mov
or
idiv
lods
jmp
pop
add
and
faddl
imul
and
pop
or
movsb
cltd
dec
ss
add
cmp
ret
sbb
andl
jb
cmpsl
data16
cmc
xchg
je
jnp
test
ss
add
cmp
dec
stos
je
enter
mov
js
mov
subl
out
sbb
aas
pushf
rclb
pop
pop
ljmp
add
sbb
jge
js
std
cmc
push
pop
nop
in
cmp
scas
dec
imul
icebp
aas
add
es
xor
das
shll
push
push
pop
jge
add
jmp
add
jecxz
clc
add
adc
mov
imul
mov
adc
sahf
add
push
test
cmp
push
mov
les
movsl
jne
popa
pop
dec
push
pushf
jae
sub
enter
sub
imul
mov
xor
clc
loopne
sbb
cmp
cli
pop
jg
adc
movsl
lahf
bound
push
cmp
insb
cld
jle
pop
mov
cmp
xor
add
mov
mov
cld
dec
mov
add
jle
sti
sbb
sub
rclb
mov
add
push
test
push
pop
loopne
push
jo
sub
mov
jp
add
mov
rolb
jg
sahf
or
mov
das
push
and
add
sub
out
aaa
pop
imul
xchg
push
scas
mov
jae
mov
push
imul
scas
add
arpl
fistps
jle
sub
in
add
mov
out
cmpsl
push
lock
add
or
xchg
shll
imul
sub
in
jmp
stos
inc
rcl
jmp
test
mov
mov
mov
je
popa
shll
mov
add
or
daa
push
dec
xor
add
dec
out
push
shlb
mov
addr16
add
adc
daa
fsubr
dec
or
push
dec
cld
push
in
xadd
icebp
pop
leave
push
loope
cmp
pop
das
xchg
sub
jmp
pop
push
add
sahf
add
or
jle
shlb
add
sbb
pusha
ret
lahf
dec
add
cmp
rolb
sbb
push
imul
dec
add
loop
js
cmp
mov
icebp
inc
into
add
lahf
iret
js
enter
adc
lahf
shll
out
adc
addr16
pop
pop
ljmp
lds
sub
cld
stos
push
call
add
out
dec
dec
data16
in
inc
call
filds
mov
sahf
or
imul
xchg
push
add
pop
cmpsl
jmp
mov
inc
cmp
sbb
xchg
jg
or
lret
mov
out
mov
bound
and
std
orl
movsl
add
cld
or
scas
add
add
fbld
loop
mov
jno
ret
cmpsb
push
in
cmp
sarb
ds
or
ljmp
incl
cltd
xchg
add
add
fldt
jg
pop
adc
xlat
and
andb
setno
es
adc
in
push
sbbl
pop
iret
aas
dec
cli
test
push
jne
lods
ss
iret
adc
mov
push
add
lods
adc
add
jno
stc
insl
jo
push
jmp
and
call
jp
xchg
dec
into
out
pop
repnz
cltd
loope
repz
inc
add
mov
imul
mov
xchg
aas
cmp
and
pop
add
std
push
pop
mov
inc
sbb
mov
sub
loop
loop
rclb
xorb
add
out
imul
mov
pop
pop
inc
loop
sub
incb
mov
or
int3
test
nop
cmp
xchg
cld
movsl
imul
dec
stos
push
lcall
inc
pop
sbb
out
addr16
cmp
jbe
pop
in
sub
rcll
xchg
mull
into
addb
sbb
adc
mov
sbb
mov
or
cli
cld
mov
add
or
test
sbb
or
ja
lcall
cltd
mov
lret
inc
pusha
cmp
sbb
pop
pcmpgtb
jmp
aaa
pop
cmp
push
lock
imul
xchg
add
xchg
dec
pop
aad
aad
mov
cwtl
and
imul
shlb
pushl
fiadds
lahf
stc
xchg
outsb
push
cmpsb
sbb
add
pop
cmpsb
add
filds
aas
out
pusha
jno
cmp
xor
or
push
shrl
cmp
lods
add
inc
repz
sbb
pop
les
and
sbb
andl
imul
or
mov
xchg
mov
add
notl
mov
or
jge
aam
mov
push
hlt
pop
inc
pop
sbb
pushf
roll
xchg
in
or
insl
dec
sbb
and
je
cmp
jg
xchg
pop
cmp
sahf
js
movl
push
add
mov
nop
loopne
inc
add
mov
jmp
xchg
negl
imul
jo
cmp
lds
push
movsb
mov
add
ss
stc
sbb
jb
aad
mov
xchg
imul
push
in
adc
call
andb
test
and
pop
dec
sbb
jmp
das
push
lahf
fcoml
jb
enter
xchg
xchg
stos
imul
sub
sarl
inc
into
insl
or
jbe
adc
int
push
cmp
add
dec
in
orl
divb
fwait
inc
leave
mov
push
outsb
and
inc
xchg
enter
addb
mov
sahf
add
out
vaddss
mov
ret
roll
neg
ret
cmp
dec
rclb
and
xchg
add
mov
mov
add
push
cmp
jecxz
das
mov
inc
rcrb
ret
mov
and
aam
test
aaa
jmp
sub
or
and
dec
mov
sbb
lods
fists
adc
std
xor
mov
sahf
add
addr16
iret
stc
add
lcall
pop
add
enter
lds
in
insl
jl
pop
daa
nop
mov
movsb
sahf
bound
cmp
inc
sahf
pop
pop
mov
imul
in
jg
jl
loope
andb
mov
bound
mov
push
sub
orb
data16
pop
mov
call
add
decl
pop
adc
mov
imul
add
push
mov
adc
sti
mov
adc
and
jns
xchg
adc
adc
nop
inc
js
movsb
rolb
inc
xchg
scas
stc
pusha
cmp
mov
xchg
mull
es
jmp
mov
out
lock
inc
xchg
stos
shll
arpl
fldenvs
mov
enter
leave
pop
jmp
lret
addr16
lods
arpl
popf
or
jae
and
xlat
pop
and
das
push
push
add
dec
pop
aaa
or
fdivs
pop
add
movsl
cmpsl
xchg
pop
push
pop
cwtl
inc
or
adcl
jp
orl
pop
pop
imul
fimull
inc
mov
sti
out
mov
fildll
push
insl
mov
stc
test
test
or
cmp
aad
aad
push
pop
scas
jnp
stos
inc
or
shrb
dec
jp
and
cmpsl
rorl
or
sbb
mov
add
xlat
in
add
fildl
sbb
aad
add
xor
pushl
clc
add
xchg
int
outsb
or
imul
cmpsl
iret
and
jo
push
add
jle
xchg
and
ja
outsl
or
popa
sbb
iret
movsl
add
out
and
lods
jnp
mov
outsb
mov
add
je
outsl
add
cmp
xchg
add
mov
movsb
sbb
jl
sbb
push
aas
mov
cmp
pushf
insl
in
enter
ss
les
mov
mov
push
or
pop
xchg
sbb
sub
xchg
pop
jno
lods
dec
xchg
sbb
je
lahf
inc
add
iret
jl
or
mov
xlat
mov
adc
add
xor
stc
lahf
add
add
pop
pop
cmp
leave
xor
add
push
div
rcrb
mov
mov
inc
int3
ror
cli
cmpb
and
push
pop
sbb
rcll
add
or
mov
dec
fsubl
mov
dec
mov
inc
jl
loop
cmp
fisubs
in
adc
test
xchg
bound
pop
neg
dec
aaa
mov
mov
mov
imul
loopne
adc
out
inc
jl
add
iret
push
in
arpl
loop
icebp
lea
pop
shlb
pushf
and
cmp
out
divl
pop
adc
inc
push
fsubl
add
push
imul
imul
icebp
pop
add
jp
movsl
jae
mov
rcr
orb
popa
jle
add
add
cli
push
jns
add
jnp
repnz
icebp
pop
adc
das
and
or
jge
inc
test
adc
add
or
divb
in
cmc
or
push
out
mov
arpl
push
pop
or
andb
cmp
sbb
lock
push
sub
aam
outsl
jo
fwait
loop
aas
mov
ljmpw
xchg
or
mov
shll
mov
push
xchg
stos
sbb
dec
push
push
insl
xor
add
in
push
fcoml
dec
jno
outsb
mov
add
pop
push
subl
cmp
or
adc
imul
cld
and
cli
mov
repz
movl
jmpw
imul
loope
imul
push
outsb
xchg
pop
popa
clc
js
and
jmp
repz
and
iret
add
jno
cwtl
add
mov
cmp
cmp
movsl
push
out
test
inc
sbb
mov
push
push
and
nop
add
adc
push
dec
cmpb
cmp
das
pop
adc
push
mov
mov
stc
aaa
adc
or
push
sub
subl
sub
xor
sahf
imul
aas
cmpsl
cltd
pop
mov
or
jg
lahf
add
add
mov
add
xor
fnsave
adc
xchg
mov
sbb
scas
xchg
add
xor
icebp
pop
pop
adc
mov
mov
add
mov
dec
add
int3
add
mov
xor
enter
mov
pop
pop
int
ljmp
cwtl
cltd
mov
pop
or
inc
les
ret
xchg
add
incl
imul
lcall
and
cwtl
cmp
jl
sub
dec
adc
sbb
sbb
and
add
adc
jg
insb
js
xchg
dec
mov
add
xor
iret
orb
and
and
xchg
mov
das
inc
and
negb
dec
add
hlt
adc
mov
push
shll
dec
pop
xor
jb
rolb
movsl
int
jecxz
outsl
in
add
movsl
nop
int3
push
mov
enter
add
leave
push
cmp
sub
adc
jnp
mov
add
pop
adc
xor
dec
lcall
lock
std
icebp
add
cmpsb
in
aad
mov
mov
push
fwait
sbb
add
jg
cld
mov
iret
inc
imul
ficoms
cmc
insl
add
xor
jl
es
outsl
aaa
inc
lea
and
out
or
jae
fsub
lahf
aaa
mov
add
movsb
in
icebp
imul
arpl
and
inc
cmc
push
inc
jnp
jbe
sbb
pop
adc
mov
sub
subl
sbb
popf
sub
push
mov
or
popa
jb
shlb
sub
cli
adc
in
test
in
xor
dec
push
push
jo
push
pop
inc
and
adc
pusha
mov
lcall
xchg
das
sbb
mov
push
lods
pop
jp
push
stos
jo
mov
frndint
mov
sbb
jp
scas
sti
fsubl
jne
loopne
dec
imul
sub
imul
insb
into
aas
fidivs
std
inc
dec
icebp
and
stos
mov
pop
lds
leave
imul
bnd
inc
pop
or
push
lcall
jmp
cli
sub
mov
sub
rcrb
sbb
cs
sbb
or
cmp
ljmp
test
jmp
mov
jp
imulb
cmp
pop
stc
insb
jle
push
cmpsb
sub
add
mov
inc
jae
int
push
pop
cmp
mov
add
sub
push
mov
out
add
jmp
pop
scas
add
inc
enter
repz
js
les
mov
outsl
mov
fnstcw
jno
aam
mov
xchg
in
jbe
mov
imul
mov
add
push
insb
outsb
sub
dec
imul
xchg
inc
add
and
inc
cs
scas
pop
inc
push
das
arpl
mov
int3
add
add
insb
xor
loop
sbb
add
fimull
xor
push
sbb
out
xchg
jle
jmp
adcl
icebp
mov
or
gs
jno
and
imul
movb
xor
cmp
push
ljmp
stos
in
int3
repz
jb
sub
imul
sbb
lea
inc
pop
repnz
cmc
aas
stos
mov
gs
jnp
mov
add
mov
and
lret
shlb
roll
imul
dec
mov
cli
outsb
fs
outsb
into
pop
xlat
lahf
pop
cli
adc
add
test
out
add
hlt
shlb
cmp
cmpsl
cmpb
ret
xor
adc
add
fldenv
sbb
dec
out
cwtl
lahf
sbb
adc
dec
ret
test
mov
shll
sbb
xchg
lock
mov
inc
lahf
test
cli
xchg
jp
sbb
lock
mov
imul
repnz
pop
sub
ja
cmp
push
sub
ss
mov
jg
mov
imul
and
fistpl
push
cltd
add
insl
icebp
call
pop
stc
pop
cmp
and
inc
fs
imul
leave
stc
pop
call
ret
add
pop
insl
mov
and
adc
push
repnz
stos
imul
rcrb
movsl
outsl
adc
jmp
mov
mov
lds
sbb
mov
xchg
and
adc
fs
int
push
ja
xchg
or
dec
cmp
test
or
in
lret
inc
adc
dec
mov
jge
jmp
xlat
cmp
xlat
lahf
push
xchg
push
hlt
sbb
cwtl
sbb
rcrb
stos
adc
dec
sub
clc
add
jge
pop
and
add
mov
test
fadds
in
adc
push
sar
cld
push
push
js
imul
testb
jl
sbbl
insl
and
or
jo
pop
ss
arpl
jnp
push
shrl
mov
cli
xchg
add
add
outsb
jmp
adc
cwtl
aaa
xor
hlt
jg
je
lods
add
repnz
pop
dec
adc
arpl
mov
ljmp
in
mov
js
fs
iret
mov
scas
push
inc
mov
xlat
mul
jo,pn
pop
mov
add
jmp
ss
add
hlt
jb
adc
adc
lds
sbb
in
popa
sub
fwait
orl
imul
stc
aam
inc
pop
and
add
int
xchg
daa
test
inc
add
jmp
xchg
test
cmp
imul
sbb
dec
movsl
ficoms
add
sti
aas
mov
sbb
inc
pop
sub
cmpsl
jae
daa
xchg
rorl
sbb
mov
adc
inc
push
or
dec
int
fldl
mov
iret
sub
mov
sbb
jnp
pop
shll
imul
mov
movl
add
iret
or
and
xchg
out
adc
mov
shl
dec
iret
aad
outsb
jge
pop
cltd
adc
jge
cmp
dec
leave
adc
xchg
push
ja
jp
or
fcmovu
mov
cli
int
xchg
cld
cltd
mov
push
jno
push
mov
lahf
xorb
subb
xchg
pop
rolb
inc
cmp
cld
fisttpl
add
daa
and
scas
push
add
mov
int
mov
sub
les
ficompl
pmuludq
jp
imul
cltd
pusha
pop
lods
xor
add
je
out
nop
scas
hlt
jmp
pop
inc
pop
add
orb
mov
push
mov
or
and
add
push
scas
in
insl
movaps
mov
and
inc
jp
sub
stc
push
es
add
fsubs
inc
call
lods
movsb
add
sub
pushf
adc
cmp
das
lahf
mov
push
sub
sub
sbbl
ret
fiadds
push
cli
pop
test
mov
aad
mov
loop
add
push
xor
out
add
popa
adc
jb
mull
push
push
adcb
leave
repnz
mov
popa
jae
mov
xorl
sahf
movsl
jmp
add
paddb
insb
std
push
sbb
or
dec
out
test
xor
lods
popf
sti
add
add
int
sti
add
divl
loop
fs
inc
mov
aad
iret
jne
in
or
lods
data16
push
jo
stos
fdivs
xor
mov
adc
push
or
filds
subl
repz
fistps
ljmp
cltd
add
push
rcrl
js
add
pminub
mov
sub
sub
adc
sbb
dec
scas
leave
add
push
inc
mov
jle
cmp
and
adc
imul
sbb
enter
call
pop
repnz
stos
or
iret
pop
ja
sub
imul
sbb
pop
xor
out
call
fcomps
jl
push
xor
sarb
push
fucomi
push
xchg
stc
into
mov
pusha
ljmp
pop
ss
in
cli
int3
mov
pop
sti
jle
inc
or
lahf
je
adc
and
loope
cmp
add
call
xchg
add
or
and
insl
add
cmpsl
push
rol
sub
das
fstl
movsb
jg
add
imul
or
pop
xchg
sbb
dec
add
and
movsl
jno
push
sub
or
push
jle
stos
addr16
comiss
xchg
shrb
ss
lds
dec
add
inc
push
jae
out
in
xchg
xchg
dec
add
lcall
fcmovnb
out
adc
add
lahf
pop
or
cmp
adc
push
add
adc
jl
pushf
daa
add
or
das
mov
fs
imul
std
and
cmp
mov
or
sub
and
lods
fisttpl
add
mov
popf
iret
add
scas
int
test
scas
inc
fisubrs
mov
arpl
test
stos
and
repnz
push
jne
shrb
push
add
loopne
inc
add
pop
xor
je
cmpsb
insb
xchg
pop
mov
add
mov
mov
push
xchg
mov
jo
or
and
pop
lret
add
xchg
sub
outsb
sub
sbb
fs
or
push
adcb
pop
call
sub
outsb
pop
ljmp
pop
add
or
ljmp
push
pop
and
mov
in
scas
cmp
out
int3
jne
xor
mov
sbb
inc
jo
xchg
in
adc
popa
add
ja
pop
lea
imul
bound
mov
add
jns
jecxz
aam
pop
and
or
cmp
cmpsl
loopne
imul
jo
inc
pop
sahf
cwtl
into
jmp
mov
xchg
adc
mov
jecxz
mov
adc
test
jns
aaa
aas
push
mov
mov
add
popf
xchg
negl
mov
fnstcw
jnp
jmp
dec
dec
mov
add
sbb
inc
mov
cmp
orl
push
pop
arpl
pop
mov
jmp
cmp
cmp
push
pop
out
imul
push
xlat
or
xchg
stos
sti
push
jge
dec
add
add
stos
es
aam
test
sti
mov
arpl
lock
sbb
fldl
ret
in
aam
add
jb
or
xchg
mov
push
insl
sahf
add
sahf
rcrl
push
xchg
mov
std
pop
hlt
fmull
mov
pop
add
daa
mov
addr16
lock
add
xor
or
add
inc
lea
mov
popf
mov
inc
sbb
push
adc
pop
jo
pushf
addr16
sahf
jp
test
or
in
gs
imul
and
xchg
aam
lock
sbb
xor
sbb
lock
add
sub
filds
imul
or
adc
data16
js
add
nop
xchg
cmp
ret
fisubs
push
rcll
add
adc
sub
jl
or
aam
or
fisubl
lahf
push
in
xchg
cmc
jno
stc
add
test
popa
movsl
rcl
sub
add
xchg
fisttps
and
pop
jo
push
xchg
fstp
aaa
lds
and
imul
lahf
jo
pop
and
add
add
xchg
dec
xchg
mov
add
sub
mov
push
pusha
cmpsl
jg
inc
inc
jecxz
mov
mov
add
inc
stos
subb
or
test
shlb
mov
add
xchg
lea
cmpb
mov
les
sub
or
rclb
xor
mov
mov
add
push
sbb
aas
jbe,pn
sarl
and
and
or
pop
jecxz
imul
sub
add
loope
aas
bound
xchg
test
xchg
pop
mov
jl
cmpsl
mov
and
rclb
pop
bsf
add
pop
enter
aas
inc
push
xchg
fmull
adc
ficomps
mov
int3
mov
add
fwait
push
sbbb
xor
notl
push
jmp
jg
pop
outsl
jg
and
xor
prefetchnta
add
clc
loop
imul
jns
aaa
mov
add
shll
fldcw
fstl
cmp
add
cltd
cmpsb
pushf
add
cld
mov
mov
pop
xchg
negb
mov
incl
xor
out
and
bound
arpl
sub
sub
popa
scas
add
jne
jns
aad
test
iret
ret
je
add
add
fwait
imul
stc
push
push
pop
outsb
inc
les
pop
jno
add
lret
xchg
loope
push
jae
pop
dec
inc
lahf
sub
xchg
push
mov
xchg
stos
mov
push
add
add
leave
adc
cmp
cmp
outsb
add
insb
into
push
js
push
movsb
jnp
nop
rcrb
or
pop
xchg
sbbl
ljmp
adcl
mov
fcoml
imul
inc
and
icebp
mov
fadds
test
mov
sti
mov
jo
mov
mov
jecxz
mov
cmp
imul
pop
pop
jnp
fidivrs
mov
jg
imul
dec
sbb
clc
add
mov
sub
enter
dec
hlt
cltd
push
mov
and
xor
fdivrl
pop
cmpl
insl
add
add
mov
prefetch
and
add
adc
xchg
in
pop
xchg
repz
mov
jmp
xchg
add
fs
stos
mov
aad
add
xorl
add
xchg
in
xchg
aaa
je
xchg
lret
adc
mov
xor
frstpm(287
xchg
pop
jnp,pt
scas
cmp
and
loopne
imul
push
push
cli
sbb
ljmp
sbb
jnp
xor
lcall
ficoml
pop
pusha
mov
test
pop
push
mov
mov
add
fmull
gs
jno
shlb
adc
frstor
add
out
imul
dec
outsl
jg
sbb
inc
mov
and
cmp
stos
imul
cld
mov
inc
and
mov
les
cwtl
add
je
fisubrs
cmp
pop
dec
outsl
clc
cld
lahf
pusha
mov
ror
xor
inc
and
imul
push
adc
xor
int3
rolb
pop
pusha
rcrb
and
pop
pusha
cli
inc
int3
scas
jl
inc
add
cli
jge
std
or
loopne
rclb
adc
pop
sub
dec
movb
scas
and
jbe
fwait
add
fs
fcomip
sub
fisubrs
data16
cs
adc
mov
or
adc
mov
inc
mov
add
cmpsb
sub
sbb
inc
std
fcos
iret
xchg
pop
pop
jnp
aas
rorl
lock
hlt
imul
mov
jne
lea
push
movups
stos
hlt
pop
sub
js
mov
sbb
jg
setnp
icebp
dec
add
mov
loope
stos
inc
outsl
add
fistps
orl
mov
add
pop
in
adc
xchg
mov
adc
or
sbb
push
cmc
mov
xchg
pop
ficomps
mov
cltd
in
or
push
mov
mov
xor
push
sahf
test
pop
inc
fwait
pop
orb
rclb
xchg
sub
add
andl
jg
lcall
out
cmp
stos
adc
dec
filds
out
and
pushf
cld
movb
cmpsb
sub
adc
sarb
add
sti
lods
adc
push
add
divb
ja
imul
mov
jg
inc
clc
pop
cld
dec
roll
imul
fxch
xchg
loope
pop
loop
and
addr16
ret
scas
inc
pop
imul
add
xor
test
test
je
jle
dec
jmp
cmc
xchg
imul
jmp
imul
rcr
scas
sbb
add
ret
addr16
push
incb
jl
call
movsb
fwait
push
outsb
inc
push
rclb
pusha
mov
imul
or
addr16
push
sub
pop
mov
pop
mov
jns
imul
outsl
xor
mov
stos
xchg
cs
pop
add
dec
ret
lds
insb
cmp
sti
jg
xchg
add
or
test
iret
cmpsb
loope
lcall
dec
rcll
jnp
mov
cmc
gs
loope
lcall
mov
jge
imul
mov
pop
xchg
push
ficoms
imul
popf
push
mov
insl
ror
in
mov
into
lahf
imul
loop
add
cs
sub
inc
or
adc
mov
sti
inc
mov
add
push
in
add
or
add
icebp
push
xor
clc
adc
cli
sbb
and
dec
push
push
jl,pn
cli
frstor
test
adc
adc
imul
push
adc
mov
mov
scas
cld
mov
push
xchg
mov
cmc
jne
adc
add
lock
push
mov
cmc
jno
jbe
gs
add
xor
pop
push
dec
out
mov
insl
add
fucom
cmp
iret
xor
mov
cmpsl
xor
add
mov
pop
pop
jne
rcrb
pop
pop
lock
psubusb
ljmp
data16
push
sbb
and
repz
dec
pop
xor
sahf
sbb
imul
jns
sbb
popf
lea
in
fildl
mov
xchg
xlat
adc
cwtl
adcl
sub
loope
pop
pop
add
lcall
imul
aaa
mov
push
inc
movsl
les
add
jmp
pushf
add
mov
xor
movb
mov
push
mov
lret
pop
out
lock
aam
insl
inc
dec
jp
es
shrl
jo
or
jmp
sbb
imul
adc
dec
aaa
cmp
push
fwait
adc
or
repnz
push
fcoml
push
repnz
leave
int
pop
fldcw
jl
push
call
std
repnz
imul
aaa
jl
lods
dec
ja
and
sbb
out
xchg
scas
add
sub
pushf
adc
mov
rolb
push
pop
push
jle
lret
pop
stos
add
cmp
roll
add
pop
lock
add
sub
loop
inc
cmp
or
pop
scas
jp
cmpsb
inc
cmpsb
data16
out
pushf
jg
sub
push
pop
jle
sbb
fmull
outsb
dec
or
jnp
ds
add
nop
test
imul
in
scas
xchg
loopne
mov
xor
pop
sub
pop
cli
add
mov
in
movsl
xorl
and
push
pop
bswap
push
loope
mov
arpl
flds
push
xchg
add
mov
pop
test
jnp
cmc
sbb
jns
pop
lea
mov
dec
es
sbb
mov
lods
dec
push
mov
and
sub
inc
mov
rcrb
in
lds
aam
insl
or
cmc
out
push
jbe
and
mov
jmp
js
add
mov
mov
inc
fldt
test
imul
dec
adc
push
jbe,pn
cmp
popf
mov
outsl
aas
popf
pusha
jne
jbe
sub
mov
or
lret
dec
push
jg
sub
and
lods
and
pop
repnz
inc
add
adc
in
add
cwtl
gs
sbb
sahf
dec
scas
inc
lret
sbb
imul
arpl
arpl
pop
jmp
loope
jp
lods
xchg
fwait
push
sub
mov
int3
cwtl
add
cmpsb
jmp
rcrl
dec
mov
pop
test
pop
add
aad
in
mov
int3
sbb
insl
outsb
add
aas
inc
cmp
outsb
in
outsb
mov
or
enter
inc
add
pop
pop
sahf
pop
fdivl
decl
pop
cltd
push
fimull
and
pop
inc
xor
xchg
lret
roll
fisubrl
sbb
xor
jne
push
enter
add
xor
scas
fsubr
jae
mov
outsb
outsl
ftst
in
jnp
xchg
push
add
sub
cmp
outsl
xchg
mov
mov
push
rcl
pop
outsl
sub
add
ljmp
flds
out
ja
mov
inc
add
hlt
mov
aas
and
lods
enter
and
add
adc
inc
dec
add
or
lret
setnp
ret
aad
mov
adc
aas
add
xor
icebp
sub
jno
nop
std
sahf
jnp
sbb
rclb
xchg
gs
inc
repz
push
pop
and
jno
fwait
add
push
pop
push
and
pop
cs
leave
fsts
xchg
dec
mov
lock
popw
sti
in
xlat
movsl
nop
out
push
lods
add
sub
xor
out
gs
in
push
testl
iret
call
mov
js
and
aaa
jle
addl
mov
mov
jb
ret
out
jbe
xor
es
cld
mov
pop
pop
iret
popa
inc
pop
adc
jnp
mov
add
sub
mov
add
gs
sub
mov
das
daa
out
enter
orb
popf
mov
pop
pop
jle
negl
ret
cmp
pop
bound
test
loopne
ds
mov
pusha
or
fs
fstpt
cmpsb
imul
fidivs
sub
mov
imul
or
outsl
pop
xor
push
inc
mov
in
iret
mov
test
sub
fnsave
imul
jg
jbe
leave
mov
lods
pop
sbb
fsubrs
cmpsl
mov
shll
out
push
add
andl
jecxz
push
mov
call
rclb
mov
inc
pop
lods
jno
movsl
dec
push
add
hlt
xchg
imul
push
test
sub
das
cli
add
repz
add
mov
jo
das
or
sbb
iret
and
lahf
cwtl
ja
lock
or
add
mov
pop
imul
add
pop
jns
imul
dec
mov
push
add
test
mov
testl
xlat
in
mov
shr
push
pop
mov
mov
pop
add
outsl
call
cmp
aas
and
sub
dec
cmp
test
adc
cmp
in
call
jne
aad
cmp
sbb
lock
cmp
pop
das
dec
movsl
call
cmp
dec
jmp
fdivr
dec
loope
sti
mov
jecxz
cmp
sbb
mov
scas
frstor
sub
leave
push
pop
movaps
sarb
daa
add
jg
add
mov
outsb
jb
std
jae
mov
mov
fiaddl
scas
push
test
lahf
cmp
std
les
adc
iret
test
loope
out
add
cmpsl
xchg
imul
cmp
js
push
ja
pop
cmp
push
sbb
add
xchg
add
mov
enter
add
sbb
lds
push
add
or
push
pop
push
push
add
ss
inc
gs
imul
pop
add
mov
daa
fiaddl
cmp
fnstenv
enter
scas
pop
test
cli
add
xor
loopne
loopne
les
add
movsl
stos
imul
sahf
loopne
pop
mov
push
cmc
in
mov
aas
inc
xchg
scas
sti
and
fcomps
addr16
push
rcrb
mov
loopne
loop
fistpl
or
lret
fdivr
lret
add
aad
add
testb
jb
sub
xchg
into
push
lods
cmc
data16
loopne
push
xlat
jge
jecxz
pop
mov
pop
in
mov
aaa
push
pop
mov
enter
test
cs
adc
ljmp
xor
popa
into
xchg
dec
ret
fiaddl
inc
negl
pop
imul
out
lea
xor
pushf
xchg
add
push
mov
inc
pop
mov
mov
add
out
pop
cmp
andb
lret
adcb
adc
cmp
inc
test
add
cld
or
sahf
push
mov
mov
add
jle
adc
lret
xchg
fcoml
scas
test
cmp
iret
cmp
mov
stos
xchg
or
inc
inc
mov
sub
fimull
es
sbb
jne
popa
push
test
or
xchg
rorl
pop
jnp
jno
mov
mov
inc
xchg
idivl
fistpll
mov
loopne
outsb
mov
add
jb
adc
sbb
mov
test
sbb
hlt
je
add
loopne
insb
movsl
rolb
ljmp
inc
add
iret
or
jl
stos
add
jg
imul
xlat
push
sub
cmpsl
jl
sbb
iret
inc
in
testl
incl
addb
into
mov
lret
or
inc
pop
out
out
push
in
add
xor
ja
or
mov
in
xchg
dec
dec
and
into
jg
insb
pop
adc
lahf
fidivrs
lods
stos
in
lahf
mov
addb
pop
push
xchg
mov
in
push
ds
mov
sbb
mov
or
mov
mov
add
fsubs
fdivl
pop
sbb
test
out
into
into
es
int3
sub
ss
sbb
push
add
sti
lods
adc
add
leave
push
int
adc
mov
mov
or
push
mov
rorl
pop
repz
mov
jl
fchs
add
jp
push
ret
jns
pop
pop
pop
sub
jmp
lea
fdiv
push
adc
mov
xor
or
and
orb
fidivrl
test
pop
mov
pop
cwtl
inc
jg
sbb
push
ds
into
cmp
fsubrl
dec
jne
idivl
xchg
and
jmp
xchg
mov
pop
cmpl
ljmp
fistpll
xor
out
imul
add
pop
clc
vpmadcsswd
xor
cld
pop
hlt
push
add
cmpsl
divb
inc
add
int3
adc
add
sbb
mov
xchg
test
shlb
xor
push
pop
stos
add
lods
xlat
add
fadds
sub
cmpsl
add
mov
lahf
int
mov
inc
add
sbb
ljmp
aas
insl
lret
or
sti
andl
gs
dec
dec
in
pop
out
into
add
mov
rcr
jp
imul
cwtl
dec
pop
popa
int
dec
mov
and
pusha
push
add
das
imul
inc
bound
add
dec
mov
mov
out
cmc
fildl
push
sub
imul
and
mov
imul
cltd
lret
xor
jg
mov
inc
add
outsl
xchg
pop
push
pop
test
xor
add
xor
stos
aaa
test
mov
xchg
into
adc
adc
add
dec
add
mov
imull
mov
dec
ds
add
out
add
icebp
repz
fildl
inc
or
push
inc
pop
call
xlat
fs
fwait
lock
imul
sbb
pop
jb
subl
mov
out
popf
pop
iret
cli
adc
adc
push
adc
adc
push
mov
and
daa
pop
pop
fisttps
push
jae
roll
stos
push
scas
sub
pusha
leave
dec
and
nop
sub
and
pop
stos
xchg
mov
repz
mov
rcrb
and
jmp
jp
jmp
jge
call
jbe
fwait
shlb
jecxz
inc
sbb
fdivp
xchg
jmp
add
pop
in
jge
mov
leave
rolb
and
lods
pop
dec
call
imul
jns
cli
mov
aas
movsl
sub
fcompl
mov
jmp
pop
pop
inc
mov
insl
add
dec
push
mov
dec
jmp
or
cltd
xchg
idivb
xor
fwait
or
nop
pop
sbb
add
das
lock
stos
insl
mov
scas
mov
repnz
out
push
roll
push
push
lahf
inc
sub
pop
cmpsl
hlt
rorl
shl
imul
cli
xlat
in
xchg
stos
sbb
scas
jo
sub
mov
neg
decb
pushf
cmpsl
xchg
call
imul
iret
fwait
mov
fs
adc
int3
flds
pushl
mov
scas
in
popl
xlat
mov
aad
repz
add
push
cmp
in
or
add
push
stos
aam
adcb
popa
andb
pop
cmpsl
mov
rcrb
add
push
int
fcmove
sbb
inc
sbb
or
jmp
lock
es
jg
pop
push
aad
dec
mov
mov
inc
dec
aaa
pop
pop
adc
cmc
aaa
andl
pop
scas
xchg
andb
imul
fiaddl
dec
icebp
xchg
nop
xlat
xchg
clc
cld
les
add
pop
leave
mov
xchg
call
testl
push
push
daa
in
je
imul
dec
xchg
int
ja
out
jmp
in
int
fstl
jbe
pop
push
add
int3
and
cli
add
pop
out
data16
ja
jl
test
or
das
push
xchg
lds
mov
adc
imul
call
loope
scas
fmull
dec
xchg
jnp
test
adc
enter
movsb
pop
dec
dec
xchg
loope,pn
adc
stos
mov
adc
fidivrl
lcall
push
fidivrs
stc
imul
mov
fstpl
int3
add
mov
xchg
add
shl
dec
call
xchg
cmp
testb
mov
stos
out
test
add
and
fsubl
pop
aaa
or
and
leave
mov
inc
and
ret
adc
cmpsb
jno
inc
imul
sbb
pop
filds
and
dec
shrb
mov
dec
stos
cwtl
cli
xchg
push
addb
cmp
sbb
imul
xor
jg
fwait
out
aam
gs
pop
cmpsl
jns
mov
dec
lret
aaa
adc
fst
jbe
lahf
ss
scas
data16
test
or
ficompl
loop
fwait
notl
add
ret
cmp
inc
cmpsb
movsl
dec
jb
imul
mov
add
loope
ljmp
or
cs
sbb
or
push
xor
jne
pusha
pushf
cmp
dec
add
rolb
jp
xor
lods
sub
shrl
pop
mov
test
cwtl
push
cltd
imul
jmp
mov
js
repz
dec
and
adc
adc
jecxz
jge
jbe
cld
pop
lods
inc
test
cmp
std
mov
cmp
add
cmc
jmp
cmp
out
aam
lahf
dec
sub
pop
adc
mov
sub
jmp
pop
sbb
out
divb
add
cltd
xorl
icebp
push
inc
push
sbbb
jge
sbb
and
push
insb
or
jbe
mov
and
or
xor
clc
out
xchg
push
ret
fstp
fisubl
stos
sbb
popa
lret
and
iret
pusha
sbb
int
pop
mov
fldl
sub
imul
lods
mov
fisubrs
aas
jb
ja
add
icebp
add
imul
or
ds
lods
into
shrb
and
mov
xlat
and
jo
ljmp
or
add
push
adc
cmc
call
push
mov
fsubrs
lcall
das
sti
mov
mov
cwtl
cmc
or
cmp
push
lret
inc
jb
inc
faddl
pop
loopne
pop
push
push
je
nop
dec
adc
mov
fisttpll
mov
clc
push
into
imul
out
repnz
pop
cmp
add
push
cmp
add
daa
and
gs
rclb
add
aam
sub
rsm
into
ljmp
add
mov
jp
add
or
jne
cltd
int
dec
pop
mov
dec
fnstsw
pop
insl
aam
mov
add
sub
cld
dec
pop
mov
add
cs
xchg
xor
cld
fstl
lods
push
adc
inc
and
inc
bound
bound
fists
in
test
rorl
jb
test
pushf
cli
dec
imul
inc
sub
mov
aad
test
jns
mov
iret
jle
or
sub
add
cmp
add
push
inc
pop
add
sbb
je
imul
sbb
enter
mov
ljmp
mov
ja
je
sub
xlat
sbb
pop
aad
in
mov
lcall
mov
sub
jg
inc
leave
or
mov
in
dec
fstpl
jp
add
push
rcr
pop
mov
jl
testl
mov
mov
loop
clc
sbb
inc
jle
and
sub
imul
mov
mov
cmp
outsl
sub
mov
or
lods
int3
pop
push
ficompl
mov
jb
into
push
push
movsb
cld
adc
dec
adc
cmpsl
movl
or
movsl
jmp
shll
scas
inc
mov
xor
stos
out
clc
adc
mov
pop
mov
add
incl
adc
out
jb
jnp
ret
xchg
repz
jb
push
push
pop
add
lock
mov
lahf
adc
sub
fstps
insl
mov
lock
jns
sti
sbb
test
pop
lret
stc
dec
cwtl
shl
push
testl
repnz
aad
addb
push
enter
add
sbb
insl
dec
push
xchg
pop
rorb
std
add
cmp
mov
jmp
push
pop
js
test
les
jg
lret
cmp
out
pop
mov
xchg
xchg
adc
or
pop
out
stc
add
and
xchg
adc
or
add
jecxz
add
pop
loop
push
adc
and
xchg
stos
addl
int
aaa
and
lods
push
es
int3
rcrb
cmp
mov
fs
and
fsubl
or
push
pop
inc
call
inc
xchg
mov
inc
pusha
movsb
pop
cld
fcompl
out
dec
pop
mov
cmp
push
cmpsl
dec
dec
jae
mov
hlt
gs
inc
outsl
lods
fcmovnb
in
add
fwait
or
inc
into
stc
or
aaa
add
sbb
jns
or
xchg
iret
fiadds
movsl
pop
dec
xchg
ficoml
push
jbe
add
fwait
movsb
or
sahf
pop
mov
imul
sub
or
icebp
or
add
fs
adc
mov
iret
cmp
ljmp
arpl
rolb
add
add
mov
push
sbb
rcll
jo
push
pop
clc
int3
movsl
clc
add
sub
or
sub
add
jle
sbb
push
add
out
imul
dec
cmp
mov
mov
sub
mov
pop
or
jnp
sbb
pop
in
loopne
test
sbb
call
aas
ss
ret
mov
hlt
in
repz
xlat
push
or
sti
cld
jge,pn
int
push
mov
add
imul
adc
adc
add
ret
sahf
jmp
lds
pop
pop
mov
imul
cmpsb
xchg
dec
loop
add
pop
rcrb
mov
idivl
imul
ret
lea
js
add
add
sub
add
arpl
in
and
and
sbb
jg
psllw
data16
push
jbe
int
mov
clc
push
aas
popf
shl
movsl
and
out
add
pop
adc
mov
sub
loope
cmpsb
incl
pop
cmp
jg
inc
pop
test
or
lods
ja
icebp
push
pushl
mov
add
mov
push
mov
jge
in
cmp
ss
dec
test
pushf
cmp
imul
xchg
mov
adc
loop
imul
test
xor
popa
pop
ret
aam
negl
mov
cmp
and
mull
adc
insb
pop
and
in
ja
adc
adc
mov
cmp
mov
dec
arpl
movl
jge
addb
add
aad
or
sahf
je
shlb
imul
pop
repnz
xchg
add
mov
pop
or
sbb
or
jbe
pop
in
jnp
jle
add
pop
mov
jge
int3
pop
cli
sub
call
test
sub
adc
int
xchg
cmp
xchg
lret
add
sub
xchg
rcrl
pusha
mov
sahf
add
sbb
rcll
adc
jge
pop
add
bswap
cs
cmp
in
sbb
shll
and
mov
dec
jle
inc
lock
cmp
cmp
setae
popa
cmc
test
pop
mov
shlb
inc
mov
bound
arpl
inc
int3
mov
mov
pop
pop
cmp
and
arpl
add
adc
repz
sub
sahf
pop
test
nop
rcl
popf
sbb
mov
mov
cmp
cmpsl
pop
stc
cmpb
into
cld
pop
call
dec
push
add
push
jns
jo
decb
push
xor
or
cld
or
xchg
add
loopne
mov
loopne
add
sbb
je
and
lods
mov
cmp
adc
lahf
in
imul
pushf
fcoms
arpl
out
add
in
jp
add
repz
inc
sbbb
int
jp
mov
sub
jno
xor
sbb
mov
sbbl
pusha
sbb
std
push
leave
sub
repz
inc
xlat
mov
pop
cltd
lds
dec
loop
xchg
les
push
sbb
push
sbb
shrl
js
dec
and
sub
fs
xchg
cltd
jno
lret
movb
sbb
ds
sbb
xchg
mov
imul
ret
mov
dec
dec
sub
bound
cmp
out
adc
dec
cmp
ret
xor
push
loopne
jns
gs
test
add
cmp
or
push
rcrl
mov
loope
pop
es
sbb
jne
push
add
mov
imul
lret
sbb
dec
stos
or
rcr
pop
xor
jno
mov
xchg
push
push
cmpsb
sysret
add
push
jae
add
loop
mov
aas
shlb
add
pushf
lea
pop
pop
push
enter
adc
xor
push
lds
add
mov
sbb
testl
hlt
bound
mov
mov
repnz
pusha
mov
add
sbb
es
or
ljmp
in
dec
out
ds
out
mov
or
and
inc
je
mull
ljmp
inc
repnz
mov
ss
xor
sbb
jo
lds
and
pop
or
imul
push
and
mov
in
das
jl
mov
jmp
movsb
adcb
cmp
or
cmc
and
lods
add
nop
in
mov
inc
popa
inc
add
roll
ret
pusha
daa
mov
mov
sub
xchg
fnstsw
imul
aad
std
mov
cmp
add
loope
mov
dec
arpl
out
add
lahf
jne
inc
loop
loop
sbb
add
movsl
mov
imul
lahf
adc
lret
popa
dec
dec
enter
add
inc
adc
idivb
pop
dec
cld
rclb
les
lods
aas
xchg
popf
iret
inc
adc
xchg
punpcklbw
sbb
pop
packsswb
cli
stos
mov
mov
and
mov
dec
lea
pop
sidtl
pop
mov
testl
and
pop
mov
inc
data16
popa
aaa
pop
outsb
popf
dec
sbb
mul
jno
insb
lret
andl
imul
pusha
mov
xchg
cmc
mov
imul
pop
jno
pop
xchg
lret
jle
aas
cmp
add
inc
add
add
jge
imul
and
sbb
mov
lods
pop
dec
insl
loope
mov
push
scas
out
adc
push
or
test
sbb
xchg
test
push
imul
and
prefetchw
xor
dec
lret
jns
xchg
imul
inc
lahf
mov
imul
cwtl
mov
or
push
fisubrs
add
sbb
jo
jle
jl
in
jno
push
sbb
dec
inc
idivb
rcrb
mov
cltd
add
push
loopne
xchg
fmul
push
scas
jge
add
out
adc
jp
add
mov
in
pop
pop
sub
cmp
lahf
imul
loope
pop
adc
xor
psubq
inc
mov
xchg
mov
testl
mov
aas
mov
jo
add
mov
xchg
cmp
imul
xor
pushf
in
pop
or
and
sub
in
dec
add
jmp
iret
push
test
call
subl
pop
pop
jbe
push
inc
mov
data16
cmp
dec
pop
fmul
adc
pop
mov
jmp
mov
jnp
in
fwait
out
insb
push
jns
les
mov
js
xchg
es
sbb
test
popa
adc
test
and
add
mov
stc
leave
mov
icebp
mov
loope
repz
jmp
xchg
shl
adc
je
add
les
xor
add
lahf
arpl
or
xchg
ja
and
imul
cmpl
jmp
pop
or
imul
daa
add
ret
pushf
rorb
in
jge
xor
sbbb
push
xchg
mov
loopne
mov
pushf
loop
aas
jecxz
out
add
xchg
enter
popa
imul
fwait
add
in
in
inc
sbbb
push
nop
pop
dec
scas
add
xor
or
and
mov
mov
imul
mov
pop
rcll
add
jmp
dec
dec
sub
and
mov
inc
pop
push
icebp
jns
movsl
push
adc
clc
sbb
jnp
xchg
cmp
adc
lock
inc
xchg
add
aaa
xor
imul
mov
sbb
jecxz
adc
imul
sti
dec
mov
add
sbbl
or
clc
jecxz
jge
add
or
add
rcl
mov
cmp
push
pop
cli
xchg
mov
or
xchg
lcall
outsl
lahf
sbb
pop
sub
dec
mov
mov
adc
push
outsb
pop
inc
sub
dec
js
ds
adc
int
add
pop
jo
and
add
mov
shll
cli
ds
sbb
add
mov
out
jbe
pushf
mov
mov
push
mov
pop
pop
jbe
div
push
push
ds
xchg
push
shl
lea
xor
inc
jg
fwait
adc
add
mov
push
xchg
pop
mov
mov
push
fldcw
push
pop
mov
clc
out
into
pop
push
dec
mov
mov
enter
stos
push
inc
fildl
dec
xchg
imul
icebp
call
mov
mov
xor
sub
lock
add
ss
imul
incl
sub
ficoms
mov
mov
mov
sbb
mov
icebp
cmp
push
or
xchg
mov
xchg
movsb
into
push
sbb
stos
push
addr16
cmpsb
imul
fs
dec
ret
call
jmp
aam
out
shll
dec
mov
mov
pop
push
arpl
loope
test
rol
imul
sbb
mov
mov
test
cmp
aam
daa
movsl
pop
cmpsb
and
xchg
add
add
enter
ja
sahf
pop
test
test
dec
add
js
add
jb
adc
insl
push
ss
pop
lahf
js
mov
sbb
xchg
sti
sbb
jl
push
hlt
out
sub
sbb
pop
push
fimull
imul
or
mov
adc
push
sbb
loopne
in
aaa
inc
call
push
inc
mulb
push
dec
stos
bound
mov
imul
sub
adc
push
jno
push
add
fnsave
rorl
imul
stc
or
sbb
call
fistps
shlb
cmp
in
sub
imul
stc
xor
pop
in
fsubl
add
pop
adcl
bound
mov
inc
and
test
jl
push
stos
ja
lret
lds
sbb
insl
mov
shrb
mov
mov
cwtl
adc
loop
mov
data16
sub
mov
add
cmpsl
sti
ja
add
mov
mov
mov
xor
sbb
loop
add
xlat
and
add
stos
cmp
sub
jle
add
aam
data16
dec
sbb
ss
outsl
js
xor
fs
lock
xor
sub
inc
pop
imul
iret
mov
xor
movsl
loop
add
dec
fstpt
fs
add
dec
add
push
mov
cli
scas
je
xor
mov
pop
xchg
mov
cmp
clc
mov
scas
push
movsl
js
das
add
popa
xchg
mov
test
add
add
and
jg
push
mov
idivl
or
into
xor
push
pusha
pusha
mov
in
jo
dec
sub
out
jbe
cmp
xor
jg
loopne
loope
jle
imul
iret
add
sbb
push
push
sbb
imul
sbb
add
add
mov
hlt
inc
shrl
enter
xor
or
push
xchg
pop
movsb
inc
mov
rolb
call
shlb
cli
stos
or
xor
add
shll
imul
lods
ljmp
dec
pop
in
pop
scas
add
fwait
adc
sbb
push
xchg
shrb
loope
out
push
xchg
shl
je
jmp
jb
add
das
aad
arpl
fwait
ljmp
fst
cld
bound
ljmp
sbb
mov
in
sarb
or
dec
cmp
sti
add
shrb
in
repnz
xchg
insb
xchg
add
testb
pop
or
sbbl
add
adc
adc
imul
fsubr
dec
imul
aaa
push
mov
jl
mov
pop
fs
std
add
pop
mov
leave
pop
sub
enter
jmp
imul
stos
mov
pop
cld
or
in
mov
lods
mov
stos
leave
testl
pushf
lahf
or
imul
inc
adc
stos
aad
jle
mov
jge
imul
hlt
push
pop
xchg
ljmp
mov
push
hlt
cwtl
cmp
call
dec
pop
sahf
fisttpll
fsubrl
shld
and
push
jae
lods
aad
and
mov
sbbl
rol
aam
sub
or
imul
in
mov
adc
mov
cmp
insb
call
jae
xchg
leave
pop
inc
gs
pop
add
mov
sbb
push
mov
jnp
pop
int
xor
test
push
bswap
cmc
and
scas
int3
lds
ret
inc
xchg
xchg
push
add
adc
sti
inc
add
cmp
push
push
popa
and
dec
fmul
add
out
dec
add
je
add
sbb
or
adc
sbb
jge
inc
push
xchg
das
out
negl
push
or
xchg
out
sbb
es
xor
adc
pop
rorl
lcall
push
rcl
sub
dec
add
xor
pop
imull
mov
int
fstpl
pop
shll
icebp
mov
popf
cmp
fwait
sub
dec
sbb
es
push
and
ficomps
scas
add
mov
and
lods
add
or
insb
fs
jbe
andl
xor
not
pop
bound
and
add
or
ja
pop
dec
popl
js
mov
jle
imul
pop
xchg
in
inc
jl
imul
sub
mov
adc
add
adc
add
clc
add
mov
fsubrs
add
int
jg
xorb
mov
xchg
mov
mov
mov
dec
pop
aaa
aas
arpl
push
add
add
out
lret
pusha
xor
lldt
dec
mov
sub
into
sbb
repnz
mov
push
dec
and
xchg
dec
test
add
add
dec
cld
test
ljmp
imul
mov
or
ss
add
cli
cwtl
dec
and
add
dec
repnz
dec
loopne
add
sub
fbld
mov
sbb
cmp
inc
iret
add
add
inc
jl
xchg
sub
fwait
mov
inc
mov
loopne
mov
andb
mov
shl
sbb
jge
lahf
xchg
sub
jno
add
xchg
lret
ljmp
lods
lcall
fwait
pop
and
dec
mov
cltd
mov
je
fcoml
test
out
fnstenv
fisubrs
imul
and
mov
in
xchg
ljmp
int3
and
jecxz
andl
or
cmp
lret
cmp
jne
add
and
stos
add
sbbl
xor
jge
inc
les
mov
cmp
pop
popa
pushf
inc
mov
imul
rorl
jmp
ss
xor
add
aas
gs
and
add
out
inc
sbb
mull
or
lret
aas
push
pushf
orl
sub
bound
mov
fnstsw
incl
inc
or
stc
sbb
jns
stc
mov
nop
insl
out
stc
loopne
icebp
imul
mov
sub
out
fadds
stos
nop
ljmp
add
adc
dec
imul
push
cmp
push
das
mov
and
cmpsl
sahf
orb
jmp
pop
cld
and
outsl
add
add
and
sbb
nop
adc
push
sbb
mov
mov
mov
jle
cld
stos
repnz
sbb
fst
pop
mov
daa
cmp
popa
sub
scas
adc
mov
add
xchg
ret
mov
jecxz
iret
add
cmc
pop
mov
jno
imul
js
daa
push
dec
dec
mov
cmp
imul
bound
fcomps
cwtl
dec
add
loope
pushf
fbstp
adc
push
cwtl
outsb
cmp
pop
ds
test
out
dec
inc
mov
mov
and
scas
arpl
call
push
popa
push
out
call
jg
xchg
mov
or
mov
roll
xchg
sbb
jle
add
inc
inc
mov
outsb
xchg
mov
jnp
filds
sbb
arpl
mov
or
imul
addl
movsb
jg
fimuls
imul
pop
pop
sbb
lods
pop
xor
pavgb
ret
xor
cmp
insl
add
enter
rorl
xchg
jle
or
cs
inc
out
out
orl
add
dec
test
xor
add
repz
ret
lods
pop
add
iret
pop
bound
pop
sbb
and
or
dec
pop
fstpt
push
jmp
popa
loop
xor
add
pop
mov
imul
icebp
pop
pop
in
pushw
inc
or
sbb
clc
mov
leave
xchg
mov
stc
add
outsl
dec
iret
imul
sbb
imul
roll
outsb
mov
push
sbb
outsl
add
sbb
jns
popf
lock
xchg
lret
mov
mov
mov
and
sub
pop
mov
or
aas
in
dec
add
roll
inc
call
sub
in
repnz
pop
mov
movups
and
pushl
push
push
sbb
mov
shlb
add
loope
test
cmc
adc
mov
adc
notl
lea
jl
cmp
and
jmp
imul
pop
sbb
jge
call
fwait
imul
ficomps
inc
inc
and
mov
push
sbb
push
xchg
mov
fcoml
andb
das
push
aam
out
cli
sub
sbb
pop
adc
add
mov
mov
filds
mov
push
xchg
push
push
nopl
xor
jg
sbb
mov
andl
lcall
mov
lods
mov
fs
data16
imul
adc
mov
add
lahf
cmp
add
add
and
push
lret
out
mov
lods
bnd
mov
test
insb
add
arpl
cltd
lahf
adc
imul
adc
push
push
aaa
xor
push
out
sub
cs
xchg
cwtl
and
cwtl
jb
pop
sarb
or
mov
push
cmc
sub
and
xchg
bound
or
imull
out
sbb
fdivp
sbb
mov
popf
push
and
loope
fcmovu
mov
loopne
inc
jne
mov
out
push
add
pop
cmp
push
sbb
outsb
xchg
add
sub
les
sub
scas
mov
or
bound
pop
sub
jecxz
test
out
or
call
test
int3
xlat
loope
mov
sbbb
jae
inc
gs
fisttps
popa
cmp
sti
mov
test
cmp
sub
pop
lret
clc
cmpsb
add
cs
mov
sbb
or
pushf
nop
mov
mov
xor
or
out
mov
data16
fisttps
cmpl
fisubs
or
add
push
jle
pop
inc
mov
add
arpl
jecxz
cld
imul
xchg
outsb
pop
inc
jnp
xor
mov
cmp
sahf
mov
xchg
jno
stos
rcll
push
imul
jno
xor
iret
cmpsb
xor
or
sub
pop
leave
lock
fiadds
jge
add
lds
mov
cli
jmp
dec
cmp
out
jp
cmp
push
andl
or
arpl
ljmp
imulb
pop
imul
stos
push
mov
push
lods
in
enter
in
push
imul
out
test
mov
xorb
and
aaa
xor
xchg
pop
enter
and
icebp
push
in
out
test
imul
out
dec
fstl
mov
outsl
sbb
cmp
push
in
leave
jmp
icebp
loope
popa
cld
pop
or
pushf
pop
mov
mov
das
imulb
lret
add
fwait
test
pop
sbb
fs
pop
int3
shrb
arpl
outsb
popa
xchg
mov
push
add
lret
sbb
mov
dec
inc
sbb
stos
push
cmpl
test
in
loopne
aad
or
pop
add
lds
push
push
mov
sbb
cmp
push
push
popf
cmpsb
shll
pop
out
and
mov
lods
xor
add
clc
jne
cltd
call
jmp
xor
cltd
ja
outsb
sti
insb
imul
push
leave
mov
push
push
fldt
or
cli
imul
cltd
mov
clc
std
xor
cmp
xchg
addr16
inc
or
push
jae
xchg
push
add
cltd
enter
jnp
pop
stc
mov
ljmp
mov
add
mov
pusha
sbb
arpl
jno
pop
mov
adcl
enter
test
movlps
inc
stos
repnz
repnz
imul
jg
push
pop
ret
into
fsubr
mov
data16
sub
mov
dec
mov
pop
insb
mov
sbb
jecxz
cmpsl
andb
hlt
cmp
adc
sbb
out
leave
lcall
xor
int3
pop
mov
cmp
adc
add
cmp
clc
ss
jo
push
shll
xlat
enter
xor
jg
sbb
dec
mov
mov
outsl
push
mov
add
inc
jg
add
add
inc
and
test
jbe
nop
scas
push
and
add
daa
and
imul
xchg
xchg
mov
imul
pusha
dec
pop
sahf
inc
test
loop
roll
cmp
shll
mov
dec
mov
push
imul
ja
mov
out
dec
dec
data16
shlb
xor
pop
jae
push
es
test
add
mov
mov
xchg
mov
scas
push
sbb
fsub
sub
imul
mov
jl
enter
inc
jae
shl
jnp
fs
vmptrld
and
cmp
fbstp
pop
pop
rep
add
sub
inc
push
sbb
push
sbb
ret
jne
mov
and
push
sbb
dec
sahf
fcom
cmpsl
xor
fisubs
sbb
add
push
andl
jno
dec
cmp
inc
imul
cs
loope
cmp
testb
push
add
jle
mov
test
sbb
mov
pop
test
lds
leave
nop
add
pop
pop
xor
add
add
sbb
loopne
out
shll
xlat
lods
test
and
sahf
cmp
insb
sbb
mov
xchg
arpl
xchg
maskmovq
negl
cmp
ds
and
adc
push
add
mov
fldt
mov
outsb
or
aam
pop
pop
lods
mov
mov
xchg
sbb
cld
jo
xor
nop
adc
sti
fwait
add
stos
jge
sub
inc
push
or
fcomps
fnstcw
xor
and
add
les
xor
stc
jno
push
sti
pop
or
out
dec
pop
fnstsw
inc
rcrl
xchg
mov
sbb
stc
jb
outsl
popf
xchg
cld
mov
jnp
cmp
ljmp
leave
pop
fdivrl
adc
gs
or
iret
imul
or
stos
pop
ret
add
shll
push
lods
add
lock
repz
cmp
xchg
mov
movsb
lahf
das
xor
push
movsb
mov
mov
scas
xor
jl
leave
popa
popf
sbb
sub
pushf
sti
outsl
inc
cmp
popf
push
pusha
stc
push
dec
rcll
shlb
nop
fildll
pop
jno
popa
fldt
stos
ss
xor
out
add
sub
aas
add
cmp
sub
mov
adc
inc
inc
cmpsb
subb
push
stos
loope
out
sub
mov
xchg
lahf
cld
sbb
push
scas
sub
jle
das
mov
loope
lods
inc
fistpl
lcall
xchg
cmp
add
or
pop
lret
insl
push
sub
jecxz
add
push
test
stos
push
outsb
adc
rorb
mov
pop
mov
out
cmp
push
lcall
jbe
cltd
insl
xchg
add
repz
jmp
jnp
pop
push
pop
dec
test
jl
push
fcmovbe
imul
in
ja
mov
jno
jmp
scas
aam
popf
jae
out
push
sbb
jns
sub
lret
arpl
mov
cld
xlat
pop
push
xchg
mov
adc
jmp
adc
jmp
scas
pop
push
mov
and
sbb
repnz
jae
iret
fldcw
add
jb
mov
cs
pushf
push
movsb
fistps
add
and
imul
in
xchg
mov
mov
sbb
push
inc
xchg
add
outsb
in
push
clc
xor
sti
jno
sbb
add
std
mov
sbb
ret
add
pop
movsb
xor
sti
int3
test
xor
dec
or
filds
std
mov
dec
jle
cmc
movsl
mov
hlt
xchg
push
loope
add
pop
adc
imul
pushf
jne
mov
add
cmp
dec
mov
sbb
hlt
xor
rclb
mov
cmpsl
aam
fistl
jb
push
filds
and
mov
pop
cmpb
iret
sbb
bound
sub
int
adc
push
daa
ljmp
lcall
and
in
mov
int3
sbb
xor
scas
and
or
dec
mov
push
add
jb
sub
imul
test
pop
jns
aaa
mov
sbb
popa
push
xchg
out
pop
inc
iret
aas
sub
push
lahf
add
pop
add
addl
ret
outsl
cmpl
clc
sbb
push
pop
push
push
inc
adc
xor
cwtl
mov
jmp
fcmovnb
adc
pop
repnz
jg
cmc
icebp
rdmsr
mov
xor
add
mov
jb
fiaddl
add
sbb
dec
push
xor
cmp
lock
xchg
sahf
cmpsb
push
xlat
jmp
out
negl
fists
es
imul
mov
mov
lods
ficoms
mov
outsb
or
inc
add
cmpb
fcompl
icebp
mov
cmp
pop
or
cmp
scas
daa
and
pushf
pushf
add
jge
pop
loopne
sbb
js
pop
jge
addl
push
imul
add
lods
fwait
cli
jae
push
sub
mov
fisttpl
ja
inc
leave
aas
cmp
insb
mov
push
sti
icebp
push
pusha
or
push
sub
sub
fucomip
icebp
dec
push
cmp
lcall
sbb
cs
fcomp
push
mov
lods
adc
cmpsb
pop
mov
rorl
ret
out
in
mov
ret
mov
test
mov
clc
hlt
cltd
inc
mov
mov
mov
xor
sbb
add
sbb
xlat
out
or
xor
xchg
push
inc
shlb
adc
imul
push
cmp
mov
mov
sbb
sub
je
add
jp
mov
and
sbb
adc
pop
subl
jo
xor
or
lock
add
pop
add
popf
jne
repz
jbe
imul
movsl
sub
push
ret
push
or
add
jge
push
push
fdivl
insl
hlt
mov
pop
out
sbb
imul
mov
mov
nop
push
add
cs
push
in
cmpb
sbb
inc
test
cmpsl
testl
jp
push
add
xor
xchg
cwtl
push
sbb
add
xor
xor
adc
orb
adc
enter
sub
in
int
adc
add
xchg
cmp
add
mov
bound
mov
aad
push
inc
out
pop
push
popf
into
adc
lods
pop
imul
andb
pop
adc
cmp
test
add
push
fildl
iret
mov
cmp
rcrl
cwtl
imul
fistl
adc
sarl
dec
out
add
adc
filds
hlt
test
cltd
fsubrs
loop
out
ror
test
neg
add
das
dec
xchg
mov
loop
imul
pop
cwtl
lds
mov
icebp
jg
mov
push
fcompl
scas
mov
or
cmc
js
leave
jle
jle
lea
cmp
jecxz
push
testl
jg
rcll
sub
fs
jb
pop
fdivr
test
mov
push
std
pop
mov
lock
es
xchg
add
test
push
xchg
push
xlat
push
add
sub
push
mov
inc
push
pop
add
mov
lcall
push
jl
xchg
pop
xchg
fidivl
add
push
fwait
outsb
push
mov
jge
mov
fisubrs
or
out
xchg
jnp
lcall
pop
push
insl
fdivrs
sub
dec
add
ljmp
lock
rclb
push
stc
add
inc
and
jno
and
mov
das
fdivs
push
pop
sub
int3
ficoms
enter
addr16
pop
iret
sti
mov
xchg
addr16
add
xchg
lea
mov
scas
sti
loope
add
test
ljmp
sub
xchg
popf
pop
add
xlat
int3
mov
mov
adc
imul
scas
add
aad
scas
mov
xor
daa
orb
test
adc
mov
std
add
jnp
imul
popf
repz
mov
add
scas
sub
push
push
sub
inc
xor
mov
or
xchg
pop
inc
loope
pop
insb
inc
scas
inc
jmp
mov
js
mov
inc
mov
mov
and
sub
cli
pop
in
in
jnp
jmp
rolb
out
popa
insl
imul
clc
adc
dec
dec
std
inc
sahf
jo
test
imul
dec
push
inc
push
add
jno
insl
push
and
fsubrs
push
or
incl
dec
and
iret
imul
fstpt
icebp
int
sbb
dec
adc
push
add
inc
jnp
push
push
fdivr
cld
negb
sub
adc
mov
jecxz
outsb
jne
cmp
lods
jg
push
loopne
cmp
jo
je
push
imul
out
or
call
adc
sbb
mov
int3
pusha
mov
out
pushf
cltd
push
mov
or
push
pop
inc
adc
divl
incb
mov
pop
jb
mov
adc
sbb
sbb
cmp
sub
and
in
imul
jb
mov
pop
test
out
mov
loopne
lods
lods
or
add
mov
js
test
pop
xor
data16
inc
movsl
cmc
sti
add
xlat
sub
add
scas
dec
jbe
cltd
sahf
fldt
xor
fiadds
sbb
sub
sub
or
stos
adcb
adc
shrl
popf
pop
psubb
dec
or
sub
push
das
adc
imul
jae
movzwl
cmp
loop
imul
lahf
or
das
sbb
inc
mov
sbbl
or
cs
imulb
out
xor
test
in
roll
add
mov
scas
add
mov
xchg
pusha
sub
rolb
in
aaa
xor
add
ljmp
xor
fmuls
sahf
aas
shrl
fs
jg
inc
pop
ds
xor
pop
push
fsts
andl
and
cli
rcll
cmpsb
xchg
fcomps
xchg
ret
or
ret
imul
dec
mov
test
or
movl
fs
enter
mov
loop
xor
fadd
adc
or
inc
cmpsb
lock
dec
inc
sbb
mov
jmp
adc
and
push
iret
push
xchg
jecxz
leave
xchg
add
nop
xor
adc
add
negl
aaa
push
jmp
add
xchg
stos
sub
push
mov
pop
xchg
lahf
divb
es
roll
inc
test
add
insb
inc
jle
inc
dec
sbb
fs
mov
leave
clc
sbb
mov
cs
mov
pusha
adc
pop
mov
cltd
in
movsl
jl
bound
outsb
add
push
sti
inc
or
lahf
cmp
mov
pop
test
aas
dec
and
pop
cmp
push
adc
dec
inc
fnstcw
mov
fistps
mov
movsl
addr16
rcrb
mov
jge
addr16
xchg
sub
mov
lock
add
mov
jmp
lock
decb
xchg
fildl
std
xchg
lcall
pop
cli
adc
imul
jbe
lea
cmp
rcrl
fcomip
add
loopne
jmp
pop
stos
mov
icebp
pop
sub
adc
jb
jg
or
xor
push
aam
lahf
pop
aaa
pop
xlat
movsl
pop
clc
je
lahf
sub
sub
push
cmp
push
mov
pop
xchg
jge
int3
pop
insl
iret
push
add
or
add
fsubl
mov
gs
add
add
inc
push
aas
add
pop
pop
pusha
push
orl
inc
mov
loope
or
pop
lret
sub
and
sbb
ss
sub
add
dec
cmp
sub
cmp
lea
sahf
pop
shlb
sbb
and
ja
cmp
pop
arpl
sub
or
lahf
repz
or
adcl
pop
pushf
in
imul
popa
sub
mov
leave
adc
and
call
xchg
xchg
clc
cmp
dec
adc
mov
sbb
sub
sub
repnz
inc
movhps
push
push
lret
loop
dec
imul
sbb
pop
push
outsb
pop
sbb
push
shll
sub
smsw
lods
sub
add
push
mov
cmp
ss
sbb
jns
out
mov
pop
cmp
mov
icebp
sarl
adc
dec
hlt
pusha
pop
and
push
mov
xlat
mov
and
pusha
sbb
adc
sarb
push
push
xor
jae
bnd
add
loop
or
xchg
fsubr
xor
xchg
push
rorb
sbb
data16
add
fiaddl
test
aaa
inc
and
mov
ds
ljmp
add
test
add
jge
pop
cmp
pusha
test
mov
ds
and
setbe
cmp
sti
lahf
fstpt
push
mov
jmp
mov
dec
lret
std
add
mov
xchg
incb
cmp
mov
pop
addr16
sub
cmp
jg
lret
ret
xchg
sbb
lods
and
dec
imul
in
adc
aas
inc
dec
adc
xchg
and
daa
sub
lcall
andl
add
inc
cmp
jp
rorb
gs
xchg
mov
imul
enter
outsb
push
insb
mov
bnd
cmp
jmp
popa
mov
inc
jge
call
sub
push
pushf
cld
mov
inc
mov
test
pop
adc
popa
push
rcrl
xchg
movsb
sarl
push
aas
repz
add
loop
mov
dec
cmp
stos
pop
bound
push
insl
test
shlb
jmp
pop
pop
lods
mov
push
adc
add
jle
adc
std
repz
or
add
mov
sbb
jl
clc
add
nop
cmc
enter
mov
jbe
pop
sbb
sbb
xor
lds
push
out
stos
mov
add
inc
xlat
add
pop
add
sbb
adc
insb
adc
add
cmp
js
imul
sbb
xor
xchg
lods
pop
or
mov
xor
je
adc
imul
repnz
add
insl
insl
cmp
call
dec
push
flds
inc
test
mov
add
mov
jne
dec
add
sub
je
cmpsl
outsb
cmpsl
sub
cmp
std
scas
mov
pop
imul
add
fst
or
pop
inc
push
sub
into
ret
imul
mov
leave
shll
aaa
jp
pop
repnz
jne
mov
xor
mov
repz
xchg
mov
xchg
das
sub
pop
pop
push
add
pop
sub
je
cmc
mov
imul
jae
lahf
hlt
jmp
loopne
add
sahf
mov
xlat
and
pop
xor
loop
adc
push
lret
jae
push
push
jnp
fstpl
jbe
push
orl
pop
pop
shll
punpckhbw
push
mov
js
ret
jns
jne
push
and
roll
cltd
push
push
mov
in
mov
fwait
popa
mov
add
jmp
popf
push
decb
mov
jnp
pop
aaa
loop
addr16
and
and
fsubrs
xor
and
dec
scas
sub
shrb
std
arpl
add
push
loope
dec
divl
imul
sbb
ja
pop
push
into
daa
xorl
mov
mov
push
scas
enter
mov
enter
mov
push
stc
xchg
loop
test
sbb
mov
ds
jle
loopne
sahf
jmp
mov
mov
popf
add
sbb
jecxz
xchg
jno
cs
inc
aam
pop
lods
and
jns
mov
jge
ja
leave
mov
mov
push
adc
pop
push
xor
and
xor
insb
mov
scas
pop
cwtl
cmpsb
int3
mov
pushf
mov
cs
loop
test
pop
jne
insl
je
adc
shll
std
pop
add
fsts
push
clc
xchg
push
or
push
xchg
roll
insl
mov
stos
dec
jae
pop
sub
sub
mov
fwait
mov
inc
imul
popf
jae
mov
mov
outsb
sub
push
aas
pop
adc
dec
je
call
cmp
add
test
push
pop
pop
mov
xor
pop
jle
mov
xor
clc
mov
and
das
sbb
add
and
sti
addb
xor
pop
addb
lret
subb
mov
cs
add
aam
jl
inc
cmp
add
fs
jmp
imul
test
jns
ds
adc
daa
pop
mov
sub
pop
push
imul
or
ja
sbbb
outsb
push
das
leave
stos
inc
jecxz
push
jg
loope
adc
cmp
das
pop
inc
jnp
push
jno
insl
out
hlt
out
repnz
jmp
popl
dec
insl
mov
inc
push
scas
mov
movsl
push
movsb
add
adc
loope
push
ja
push
popf
mov
repz
mov
jns
inc
fimuls
pop
adc
lcall
addr16
and
outsb
push
mov
pop
add
jae
leave
pop
jg
pop
jecxz
idivl
mov
stc
orb
inc
mov
es
lcall
std
push
icebp
and
pop
inc
or
dec
faddl
add
jle
adc
sub
and
sbb
lret
inc
enter
inc
sbb
sub
jmp
and
cmp
in
jmp
sarb
pop
lds
sbb
sar
cld
stos
push
or
rorb
lahf
add
daa
incl
data16
push
jmp
cmp
test
adc
sbb
xchg
loop
pusha
imul
mov
push
xchg
add
repz
push
add
push
sbb
negl
mov
aam
jle
rcrl
add
faddl
add
icebp
pushf
test
ror
addr16
lret
cmp
sbb
xor
add
and
adc
loopne
imul
cmpl
rclb
pop
inc
cwtl
jmp
mov
stos
sbb
adc
push
aas
cmp
sbb
add
rcrl
add
add
dec
jl
scas
pop
negl
add
jns
inc
and
fwait
and
dec
add
ja
push
mov
pop
imul
cmp
xchg
inc
lock
js
and
xor
or
add
lds
push
add
fstpt
ja
xchg
js
sbb
insl
pop
lret
jb
addl
imul
pop
cmpsb
xchg
scas
mov
test
add
push
pop
push
popf
sbb
dec
adc
pop
mov
add
lods
dec
sbb
or
xor
rcrl
inc
clc
testb
out
add
mov
mov
js
insl
fwait
adc
cs
inc
inc
dec
sbb
cmp
push
ss
adc
push
sub
or
add
cmp
inc
mov
sbb
test
int
add
add
out
cmp
push
lds
fnstenv
es
in
mov
sti
inc
cmp
add
inc
sbb
or
mov
add
fucomi
mov
and
add
sbb
inc
cmp
call
pop
movsb
add
loope
stos
sub
sbb
add
mov
ljmp
movaps
shrl
cmc
add
adc
es
dec
inc
mov
add
stc
mov
mov
add
imul
rcrb
scas
sbb
add
jae
push
lea
inc
push
mov
repz
fsts
rol
push
inc
cmovne
jmp
int3
add
adc
pop
icebp
pop
add
inc
push
push
mov
pop
gs
sbb
sbb
out
jns
movl
jmp
push
pop
js
imul
mov
and
pop
lahf
in
inc
mov
add
orb
pop
push
mov
push
or
pop
or
int3
aam
add
cmp
jge
gs
pop
es
sub
push
sub
lods
mov
xor
imul
cmp
xor
jns
imul
xchg
lcall
pusha
add
inc
test
pop
add
out
adc
mov
aad
cmpsl
ss
mov
mov
sti
std
pusha
rcrb
add
pop
cmpb
pop
mov
sti
leave
add
mov
jae
add
cmc
xlat
jae
pop
adc
adc
fistps
jg
mov
adc
cld
scas
subb
pop
fistps
pslld
ror
push
adc
xchg
imul
ja
shrb
jae
pusha
and
decb
adc
lea
xchg
mov
mov
jb
sbb
loopne
mov
lods
xor
add
and
add
sbb
lahf
rorl
jle
arpl
inc
outsb
test
js
push
adc
add
into
sbb
mov
std
js
push
dec
mov
pop
xchg
mov
gs
hlt
in
lcall
cs
sbb
add
aaa
stos
fwait
shrl
mov
imul
fisubl
add
cltd
data16
push
rolb
push
inc
cmp
movsl
rolb
and
xchg
lret
mov
inc
out
pop
pop
adc
xchg
sub
cwtl
adc
aaa
call
mov
pusha
push
lds
push
adc
add
sub
add
iret
mov
sbb
add
mov
jge
imul
test
fcomps
add
dec
mov
inc
adc
lahf
and
add
lock
add
lahf
adc
mov
and
les
call
adc
imul
aad
mov
imul
pop
push
fneni(8087
lods
inc
cmp
iret
push
je
pushf
add
jl
push
cmc
lock
mov
testb
jae
cs
movsb
pop
adcb
pop
ret
mov
add
add
out
ret
movsl
pop
fwait
js
mov
add
inc
clc
pop
repz
fwait
les
add
fdivl
jbe
mov
lret
fldenv
add
or
or
out
loopne
pop
xor
scas
lds
sbb
add
scas
jecxz
jg
in
adc
ja
filds
in
sbb
add
sub
or
loopne
pop
add
dec
sub
out
movl
outsb
xchg
jmp
inc
sub
ficoms
lods
add
mov
push
addl
pop
mov
lret
mov
push
imul
fs
mov
jns
pop
jo
pusha
sbb
ja
add
stos
repnz
dec
insb
cmp
add
xor
js
sbb
rorl
jbe
fwait
mov
outsb
mov
pop
add
xor
in
push
or
push
imul
jb
shll
cltd
or
xchg
loopne
cs
repnz
inc
add
dec
inc
sbb
add
pop
negb
add
test
lret
cwtl
std
adc
sbb
mov
sbb
xor
xchg
out
mov
roll
dec
fidivrs
test
jp
fcomps
ja
sub
outsb
test
call
sahf
dec
or
mov
add
ret
lds
pop
xchg
mov
xor
pop
cli
cmpsb
fildll
into
lds
dec
mov
js
int
mov
pop
sbb
add
inc
dec
sahf
call
pop
mov
pop
cmpsl
call
out
repnz
bound
imul
add
popf
sti
mov
inc
xor
add
adc
cwtl
loopne
dec
adc
negl
xor
cltd
jb
mov
xlat
imul
add
arpl
push
movsl
add
fimull
sahf
std
push
addr16
aam
loope
lds
fcomi
mov
imul
cmp
mov
imul
gs
sti
in
test
xchg
push
pop
loope
add
mov
push
and
sub
or
shlb
dec
lahf
cmpsb
loope
pop
add
cltd
mov
psubusb
daa
cmp
or
sub
add
fwait
push
rolb
hlt
mov
dec
scas
dec
jbe
icebp
xlat
mov
dec
push
pop
mov
frstor
jmp
mov
imul
add
in
cwtl
out
jb
daa
jne
jmp
mov
add
lods
jns
jns
movsb
mov
testl
orl
cltd
mov
push
sbb
xor
xchg
xlat
das
xchg
pop
imul
imul
pusha
into
mov
lcall
iret
pop
push
push
push
test
popl
mov
pop
or
jne
add
xor
daa
insb
fsubrl
loopne
ss
sbb
cli
mov
inc
leave
data16
sbb
add
add
iret
pop
mov
cmp
mov
dec
movsb
jmp
sbb
xor
loop
imul
imul
fucomip
add
push
jmp
inc
push
test
and
mov
push
add
jmp
stos
pop
stos
outsb
mov
adcb
ret
imul
js
insl
push
movsl
jp
and
out
adc
cli
lock
cmc
adc
bound
mov
inc
jg
or
jge
pusha
mov
lods
add
pop
cmp
pop
cmp
shrb
aas
js
js
fcmove
lcall
and
aaa
decl
xchg
add
int3
in
and
dec
aaa
daa
pop
pop
rcll
mov
push
in
imul
add
imul
push
rcrl
sahf
enter
push
sub
pop
adc
out
test
xchg
aam
cmp
push
data16
lret
ficoml
mov
outsb
add
sti
sbb
imul
xchg
push
int
hlt
sbb
pop
daa
push
jae
mov
or
or
loopne
and
roll
test
jno
pop
ja
push
xor
imul
lcall
imul
loopne
xchg
add
mov
pop
inc
arpl
jbe
inc
stos
mov
sub
ret
add
insl
adc
test
sbb
mov
sub
es
push
aas
sbbb
sbb
iret
shll
outsl
hlt
xchg
jmp
push
push
mov
mov
mov
xchg
cmp
not
ds
inc
adc
adc
popa
lds
rorb
sbb
int3
das
pop
rcr
mov
or
cs
sbb
mov
imul
add
push
mov
les
fdivrp
bound
sub
stos
fisubs
pop
mov
sarl
out
hlt
popa
bound
cmpsl
int
inc
adcl
cmp
pop
jo
push
add
call
pop
or
add
fwait
test
push
outsl
imul
and
pop
stc
pop
imul
dec
dec
pop
add
cld
loopne
scas
js
imul
ret
add
mov
xchg
cmpsb
pop
ljmp
out
shll
rcrl
or
in
subl
lods
sub
imul
xor
push
jns
xor
inc
push
add
les
add
add
int
xchg
jns
inc
shrl
lods
push
inc
inc
and
inc
mov
push
rcrb
rcrb
dec
rcll
loop
imul
shl
inc
fmull
mov
fmulp
fmuls
xchg
imul
mov
push
clc
jns
xor
lea
ret
add
dec
subb
adc
push
sbb
add
enter
inc
lock
jmp
hlt
xchg
daa
dec
adc
cmp
popa
xchg
cmp
jp
cmp
imul
ds
sub
add
es
cmpsb
sbb
add
js
push
or
insl
dec
xchg
pop
add
jo
push
loop
out
in
dec
push
lret
sti
cli
xorl
add
xlat
adc
push
pusha
fstpt
pop
dec
mov
push
mov
mov
push
leave
pop
in
push
imul
or
addb
add
imul
dec
jmp
jmp
es
insb
cmp
pop
jle
ds
jmp
jecxz
fsts
mov
ss
fisubrl
pushf
shl
loopne
jb
cmp
adc
in
out
rolb
sahf
clc
jns
insl
mov
add
arpl
add
xlat
lcall
pop
mov
aaa
popf
or
sbbl
fwait
mov
add
cmpsb
lock
lods
jp
lock
xchg
out
filds
ret
pusha
pop
dec
into
and
mov
mov
mov
push
subb
fwait
jmp
sbb
or
add
leave
cmp
shl
mov
in
push
mov
mov
pop
mov
gs
push
pop
push
sbb
cmpsl
imul
xchg
mov
inc
inc
add
adc
leave
pop
les
fcmove
repnz
add
lahf
or
and
mov
xchg
nop
inc
add
sub
stc
pop
cmp
out
dec
imul
mov
popl
sbb
xchg
xchg
popa
incl
lcall
cmp
xchg
loopne
lock
jmp
sbb
mov
inc
idivl
test
add
in
outsb
mov
pushf
stos
add
out
dec
add
imul
ds
sub
addb
out
mov
mov
idivl
pop
push
cmp
xchg
lahf
and
fdivl
jae
loope
imul
jge
negl
add
fmull
add
add
cmp
repz
imul
negl
mov
insb
add
push
rolb
mov
mov
adc
mov
fs
sub
xchg
add
daa
frstor
inc
add
negb
shl
hlt
pop
jge
jecxz
nop
xchg
pop
fnsave
add
xchg
imul
adc
mov
sbb
adc
popa
mov
xor
and
xor
or
repz
mov
pop
imul
rclb
imul
lods
add
mov
xlat
pushf
mov
cwtl
mov
cmp
push
imul
dec
mov
inc
sbb
imul
dec
movsb
cmp
pop
pop
insb
xchg
repz
jmp
sbb
mov
stos
jle
aas
push
inc
inc
inc
sbb
pusha
imul
add
imul
clc
gs
loopne
push
adc
sub
xor
lods
in
leave
out
pop
andb
loope
or
add
pop
push
xchg
mov
decl
aam
int
dec
dec
stos
xchg
idivb
push
js
sbb
add
cmp
adc
push
fcoml
dec
icebp
sbb
jecxz
jg
xor
mov
add
jb
push
repz
cwtl
popf
push
pop
mov
mov
mov
out
insb
mov
pop
fwait
sbbb
lods
sub
mov
inc
dec
pop
fscale
mov
sub
loope
sbb
sbb
out
fwait
aad
push
bound
pusha
lods
std
icebp
or
pop
dec
shl
sub
jae
adc
leave
pop
sbb
adc
adc
mov
xchg
xor
test
or
cwtl
add
test
push
shl
outsb
pop
das
fsubrl
shrl
iret
test
xor
mov
xor
cmp
in
popa
or
je
in
sbbl
daa
push
std
mov
push
sbb
jo
pop
inc
shll
add
or
pop
cmp
push
push
repz
fsts
or
inc
add
cmpsl
js
pop
pop
adc
xor
fxch
ret
repz
fwait
cs
mov
scas
push
cmpsl
inc
lods
xchg
cmpb
push
dec
xor
fiadds
outsb
cmpsl
or
adc
std
xchg
push
jg
push
imul
lods
pop
mov
push
or
add
notl
lea
mov
pop
pop
stos
sub
ror
pop
add
lret
outsb
pop
cmpsl
andb
rolb
inc
pop
sub
cld
popl
cli
lret
mov
xchg
or
cmp
adc
lds
imul
lods
cld
push
push
jle
hlt
leave
mov
or
int
sub
rorb
test
push
mov
or
in
dec
les
pop
jno
out
jnp
pop
and
es
pusha
push
jnp
or
clc
lock
ljmp
cmp
cwtl
xchg
test
repnz
mov
or
leave
pop
cmpsl
and
sbbb
mov
mov
std
out
mov
push
inc
popa
rolb
push
or
rcrb
rorb
xor
push
xorb
or
jbe
mov
fistpll
int3
push
jl
imul
gs
pop
and
push
jmp
add
shl
cmp
sub
aas
add
in
cmpsl
cmpl
mov
loop
mov
cmp
sub
xchg
stos
cmpsb
xor
insl
mov
push
aaa
loope
sbb
int3
pop
jg
fucom
or
dec
or
sub
in
add
inc
icebp
push
jne
pop
or
xor
mov
mov
add
mov
fwait
out
popf
jmp
in
cli
in
test
xchg
push
add
sub
pop
and
movaps
out
pop
or
pop
in
int3
cmp
adc
repz
imul
dec
xor
push
arpl
out
inc
lock
pusha
imul
push
in
dec
incl
dec
jp
and
cltd
pop
movsl
cmpsl
leave
sub
std
or
add
jbe
mov
pushf
mov
inc
fistps
xchg
sbb
pop
nop
movsl
pusha
lock
inc
das
xchg
pop
jg
cmpsb
pop
ja
pop
push
inc
cmp
push
loope
add
pop
pusha
lcall
pop
sub
xchg
pop
add
sub
aaa
pop
sbb
cs
sub
add
push
ret
pop
pop
xor
movb
or
sbb
xor
incb
imul
es
add
mov
or
sbb
pop
jmp
mov
je
cli
sub
sub
add
fstps
clc
xor
repnz
pop
lret
imul
pop
pop
cmp
sub
pop
add
dec
pop
or
jbe
or
mov
lods
xor
imul
sar
out
stos
add
clc
popa
pop
and
fs
fistpl
pop
insb
loope
dec
add
push
inc
mov
imul
mov
pop
push
mov
imul
push
shrb
add
call
popf
pop
push
jle
aas
lret
fwait
jle
push
insl
scas
pop
push
pusha
shr
lods
mov
cmc
lods
add
pop
rcrb
add
call
push
ja
arpl
add
sbb
lock
pop
inc
mov
pusha
add
aas
test
imul
lods
mov
insb
sbb
and
fistps
mov
pop
jecxz
imul
mov
and
adc
add
or
adc
sub
ss
std
popf
imul
in
pop
mov
imul
push
fsubrl
lock
sbb
movsl
pop
pop
add
imul
push
loop
xor
mov
mov
mov
ret
dec
mov
stos
mov
jle
iret
adc
leave
pop
lahf
in
je
ss
add
fwait
jnp
out
int3
xchg
pop
pop
add
pushf
sbb
push
add
push
loop
push
push
mov
dec
adc
scas
pop
add
sbb
pop
inc
cmc
shlb
lods
lret
imul
push
pop
add
rclb
stos
add
clc
cmp
or
maxps
add
lock
hlt
push
sbb
mov
sub
loopne
out
test
or
push
int
mov
mov
imul
nop
mov
daa
mov
notl
cmp
mov
das
sub
stc
push
lahf
imul
daa
xchg
mov
in
or
sub
mov
in
rol
push
sbb
add
mov
add
dec
push
dec
adc
adc
jb
add
cld
arpl
xchg
jg
test
sub
mov
xor
iret
mov
loop
es
int
dec
pop
mov
pop
mov
outsl
and
call
icebp
jb
rclb
add
sti
arpl
add
pop
dec
pop
jle
lds
or
adc
add
mov
or
es
xor
add
loopne
jge
clc
fisubrl
mov
cmpps
add
inc
push
imul
lods
icebp
stos
pop
lahf
and
mov
mov
les
jno
pop
push
or
add
ret
mov
leave
and
xchg
xchg
call
sbb
lods
iret
or
cmp
pop
push
add
sahf
loopne
jp
or
out
add
sbb
push
or
call
imul
arpl
scas
outsl
clc
vpsrlw
je
test
mov
inc
dec
imul
xchg
push
pop
cli
mov
std
rdmsr
loope
dec
pusha
testb
out
dec
rcrb
add
cmpsl
dec
add
and
lret
inc
mov
daa
mov
pop
inc
lock
add
xlat
scas
cmp
jne
inc
sbb
add
clc
std
jne
pop
cmp
mov
cmpb
loope
lcall
dec
mov
out
jl
call
mov
repnz
icebp
or
out
add
xor
stos
jae
push
cmp
filds
mov
push
incb
icebp
and
pop
mov
sbb
imul
sti
aas
fcompl
pop
ror
jge
add
add
cmp
jl
pop
int
repz
cli
cld
enter
mov
mov
add
mov
push
imul
mov
mov
add
sub
ss
sbb
pop
loop
mov
sar
and
mov
push
adc
dec
imul
sti
in
xchg
nop
rcll
fildl
dec
jl
jns
cmp
sub
jle
imul
sti
push
movsl
out
add
ja
imul
ljmp
mov
in
pop
aas
or
lahf
sbb
aad
outsb
aas
ss
fdiv
outsb
movsl
ret
inc
sarl
pop
dec
outsl
cmpl
sbb
imul
jg
jle
add
insl
sar
push
pop
add
mov
sbb
push
and
fbstp
inc
repz
shl
xchg
and
js
or
int
add
enter
testb
sbb
cwtl
sub
pop
inc
sbb
jns
imul
mov
mov
loope
jns
loope
in
nop
scas
imul
jo
xchg
jnp
pop
imul
addl
push
out
add
add
enter
sbb
add
popa
inc
inc
fisubrl
mov
push
inc
repz
lret
pop
inc
orb
shrl
add
lret
test
lcall
jno
push
push
and
xchg
shlb
mov
int
sbb
xchg
and
andb
imul
push
pop
xlat
rcl
xchg
add
ret
inc
push
imul
pushf
xor
movsl
add
add
test
fbld
aas
cmc
lret
add
mov
loopne
repnz
imul
inc
leave
sub
int3
lods
dec
rcrl
jge
lds
sbb
push
sbb
test
pop
bound
jo
add
insb
js
std
sarl
mov
pop
ljmp
punpcklbw
and
and
ja
sub
lret
cmc
ret
xor
cld
fiadds
int3
sub
pop
push
call
ret
mov
rcll
jg
xor
xor
das
inc
mov
xchg
les
adc
push
movsl
in
aam
jns
daa
stos
std
add
mov
pop
nop
ja
outsb
or
add
rcrb
push
cltd
imul
fxch
and
daa
imul
call
dec
jb
pop
inc
icebp
lea
pushf
es
rol
sub
pop
and
jo
sub
jns
insb
push
push
xor
inc
jnp
ret
inc
sbb
data16
ja
or
lret
mov
add
cld
popa
fidivl
ret
push
push
adcb
inc
mov
sahf
rolb
add
gs
out
sub
andnps
add
hlt
out
pop
shll
xchg
mov
and
xor
xor
out
loope
hlt
shll
test
hlt
fsubrs
xchg
and
sti
add
scas
mov
aaa
and
test
xlat
pushf
push
imul
cs
mov
mov
pop
lock
shlb
sbb
add
push
jg
fs
imul
insl
pop
mov
dec
out
push
movb
xlat
dec
jp
sub
sbb
das
lods
inc
cs
mov
mov
sub
sub
sbb
pop
sbb
pop
sub
mov
loop
mov
add
push
lods
out
adc
inc
cld
or
aad
xchg
pop
xchg
push
cld
insb
fldl
sahf
nop
add
dec
xor
adc
lods
les
and
sbb
jmp
imul
lea
add
loopne
xor
adc
or
or
popa
ss
insl
push
jo
xchg
ud2
adc
imul
xor
sbbl
stos
sub
add
cwtl
mov
lahf
out
out
sbb
pop
xor
das
xor
jmp
push
xchg
push
pop
jl
aaa
scas
jge
and
push
dec
cmp
repnz
pop
icebp
push
and
pop
mov
std
sub
xchg
setne
pop
addl
add
and
sub
int
loop
imul
jmp
mov
pop
fldenv
mov
dec
pop
rclb
adc
rcpps
jno
mov
subb
push
je
les
pushf
or
xor
test
aad
dec
imul
repnz
pop
cmpsb
iret
mov
jo
fwait
dec
jmp
push
jmp
outsb
pop
push
in
mov
mov
push
add
sub
stc
add
adc
imul
cmp
sahf
pop
sub
pusha
lds
add
adc
fwait
mov
mov
jno
imul
in
lret
push
aaa
inc
cmp
cld
lock
stos
nop
xchg
sbb
mov
in
iret
arpl
nop
jns
pop
jecxz
sahf
out
out
ljmp
mov
fldcw
and
imul
pusha
push
cli
mov
in
daa
add
in
clc
stc
cmp
and
subb
and
imul
stos
mov
sub
ja
push
fcomp
imul
and
fcom
lock
xor
sbb
int
push
add
mov
cmp
subl
mov
leave
and
add
imul
rorb
mov
fldcw
ljmp
pop
xorl
scas
sbb
arpl
sub
push
imul
add
mov
dec
pop
out
sbb
ret
pop
jmp
clc
lods
sub
cmp
loope
ret
insb
xchg
into
dec
dec
xor
xor
testb
bswap
rcr
xor
push
xchg
add
xchg
dec
mov
jb
and
dec
mov
gs
cmp
jl
push
inc
fisttpll
int3
jge
push
mov
test
dec
hlt
add
sahf
dec
sbb
mov
and
je
stos
loope
lock
pop
and
sub
push
imul
jecxz
inc
jge
add
js
and
out
lock
shrb
push
add
insb
or
ja
les
ljmp
and
les
in
sbb
ret
imul
bound
pop
jle
jg
dec
call
fnstsw
insl
pop
pop
sub
add
push
movsl
ret
aad
clc
imul
es
add
lods
imul
outsb
fldcw
lcall
mull
pop
sub
sub
jp
scas
ds
sahf
test
push
sbb
sarl
push
mov
lea
pushf
sbb
outsl
nop
test
xor
sbb
repnz
inc
inc
test
test
nop
imul
rclb
cwtl
add
in
shlb
and
lea
jno
xchg
or
add
je
insb
mov
mov
iret
mov
repnz
mov
aam
and
mov
mov
mov
imul
or
lret
sbb
or
sbb
adc
cmp
rcr
jecxz
add
call
aam
ja
cmp
mov
cwtl
fwait
addr16
lea
imul
popa
scas
mov
popf
mov
dec
xchg
loop
pop
movsb
out
xchg
daa
jo
add
jno
or
mov
adc
pop
push
xor
lods
imul
mov
jle
inc
add
ljmp
cmp
fildl
fstpt
rcll
popa
sub
mov
std
pop
popf
je
movsl
les
xor
hlt
dec
add
and
out
add
sub
dec
cmp
dec
add
mov
cmp
pop
int3
fs
loopne
pushf
sbb
sarl
add
jne
xor
imul
sub
hlt
cmpsb
lock
leave
jle
add
scas
lcall
in
subb
jns
out
outsl
mov
jl
or
data16
mov
insb
jecxz
hlt
inc
mov
push
lods
dec
jle
dec
imul
add
mov
leave
sbb
jle
inc
mov
rol
fdivp
pop
imul
popf
mov
dec
pop
fldt
imul
and
xchg
mov
fiadds
fdivl
imul
ss
in
cmp
fiaddl
pusha
inc
rcrb
push
push
sbb
dec
lds
rcll
mov
in
addr16
mov
pop
add
push
xchg
cmpsb
add
inc
pop
and
mov
stos
aad
lock
shll
ret
out
movsb
imul
outsb
or
mov
mov
sbb
lahf
mov
pop
or
shr
xor
or
cmpsb
lret
out
and
dec
iret
repnz
out
scas
ja
mov
inc
pushf
add
cmp
or
add
sub
lock
lea
das
cltd
out
rorb
insb
pop
sub
xor
adc
int3
sbbb
jne
aas
or
sub
xchg
in
test
into
test
fcomi
and
push
hlt
cld
push
add
pop
imul
jne
mov
dec
add
sub
pop
in
add
mov
je
and
push
test
ret
push
push
andb
mov
xor
pusha
mov
dec
jne
pop
mov
sbb
adc
or
leave
in
jmp
pop
je
adc
movsl
stos
inc
je
mov
push
jecxz
addb
aas
push
and
xchg
xchg
add
push
dec
sub
adc
in
xchg
inc
inc
and
inc
adc
in
and
cmpb
jmp
push
iret
les
adc
inc
jp
mov
add
ss
sarl
data16
mov
pop
or
outsb
js
mov
ss
mov
cmpsb
inc
pop
rcrl
jg
adc
iret
ret
fisubrs
cmp
xchg
mov
add
inc
mov
push
xchg
ret
mov
add
pusha
or
fidivs
aam
ret
mov
add
dec
xor
mov
imul
cmp
or
jns
mov
cli
aas
add
inc
rol
in
mov
mov
adc
push
push
inc
aam
jg
enter
mov
dec
cmpsl
pop
in
sub
xorb
jbe
mov
or
test
bound
lret
lahf
dec
data16
add
stos
push
push
xchg
and
rorl
add
clc
pop
xchg
ficompl
sbb
scas
mov
adc
xor
into
das
push
scas
mov
mov
orb
enter
pop
gs
xchg
dec
and
pop
mov
imul
adc
or
and
nop
scas
lock
lahf
xlat
mov
stos
push
cmp
jb
fucom
pop
out
rolb
cmp
movups
cwtl
mov
rorl
adcl
into
and
insl
pop
imul
or
ds
jns
insl
push
in
sub
jp
imul
in
adc
sbb
jo
cmpsl
subl
push
int3
push
insb
pop
mov
outsb
in
pusha
cmp
inc
lock
inc
sbb
repz
adc
xchg
xchg
leave
sub
xor
fsubrl
add
push
bound
imul
sbb
xor
xchg
xchg
mov
cltd
cmp
in
pop
inc
sbb
or
bound
movsl
sbb
xchg
dec
sub
mov
pop
or
cmpsl
pop
sub
inc
mov
movsl
add
pop
push
and
fucomp
daa
cmp
imul
je
pop
insl
xor
and
in
inc
adc
mov
mov
mov
ret
negl
pop
push
lcall
movsb
js
icebp
jmp
faddl
test
cmp
in
pop
sbb
fldt
dec
aam
imul
adc
mov
xor
inc
push
jne
shrb
arpl
sub
mov
leave
add
mov
add
loop
pushf
out
mov
xchg
or
movsb
adc
sub
xchg
popa
imul
in
mov
jnp
les
addb
xchg
imul
lcall
push
fsubl
xchg
loop
inc
add
aad
fs
cltd
inc
mov
ficoms
shrl
mov
mov
lock
pop
stc
sbb
jb
mov
mov
xor
cmp
dec
inc
sti
std
push
add
fbld
add
pushf
icebp
clc
orb
pop
ficomps
sub
int
mov
push
add
xchg
imul
lock
icebp
test
dec
adc
fbstp
imul
push
inc
inc
out
stos
insb
das
xlat
fsubrs
fcmovbe
shl
call
rorl
pop
loop
aas
nop
ss
push
out
jge
cmp
sbb
in
pop
lock
dec
mov
rcrl
xchg
lock
push
fsubs
nop
dec
and
arpl
hlt
sub
or
sub
push
bswap
jmp
pop
mov
imul
or
inc
imul
pop
pop
mov
mov
imul
scas
stos
mull
add
cmp
std
out
imul
dec
call
cld
scas
orl
nop
iret
enter
cli
in
shll
sbb
xor
sti
and
icebp
imul
insl
mov
push
outsb
xchg
push
push
test
push
data16
ret
fwait
fwait
add
and
add
jecxz
sub
xchg
mov
std
adc
filds
mov
xchg
pop
lock
add
ds
fdivrl
flds
xchg
call
inc
xor
add
movsb
aad
imul
cmp
mov
push
xor
mov
mov
mov
jg
subl
push
out
pop
lret
jo
movsl
push
jns
stos
fdivrp
testl
mov
popf
inc
push
addl
inc
imul
in
aas
pop
xchg
fsubrl
into
or
push
mov
addl
inc
ljmp
pop
in
mov
push
fidivl
inc
jecxz
mov
mov
pop
xchg
dec
add
pop
xchg
add
mov
call
js
sub
std
push
sbb
jo
pop
imul
sbb
stc
cli
ja
cmpsl
fistps
stos
add
test
pop
adc
ljmp
sub
add
add
leave
out
test
or
jns
or
mov
pop
test
sbb
ror
add
add
xchg
out
push
ljmp
xchg
push
arpl
lds
sbb
jge
rol
lds
sbb
jmp
xlat
cwtl
and
mov
lret
push
stos
outsl
jmp
mov
imul
and
movsl
jnp
aas
pop
orb
rclb
fcmovbe
cmp
pop
push
push
aas
mov
cltd
jnp
pop
aad
inc
call
push
dec
jne
outsb
cmp
pop
rol
xor
pop
fsubl
push
mov
xor
xchg
jmp
and
test
loope
and
cmc
adc
rol
xchg
xchg
imul
shrl
pop
sbb
mov
outsb
and
push
push
into
mov
rclb
push
and
adc
aas
add
outsl
out
add
divb
mov
sbb
push
ljmp
outsl
imul
add
pop
inc
sarl
nop
pop
add
sbb
out
outsb
add
je
mov
pop
pop
cmp
push
xchg
mov
popf
mov
mov
pop
inc
fists
pop
xchg
and
push
or
aam
push
fs
xor
loope
enter
test
adc
xlat
and
jmp
shrl
in
loopne
xorl
pop
add
mov
add
cli
pushf
and
pop
xchg
test
fwait
adc
pop
add
scas
inc
sbb
out
push
push
imul
imul
or
inc
imul
sub
jp
jl
flds
mov
sub
sbb
mov
push
mov
push
inc
push
inc
pop
scas
xchg
incl
in
subb
emms
inc
jl
add
test
idivb
test
jle
push
pushf
ja
mov
imul
cmpsb
movntps
fsubr
jl
cmc
mov
hlt
adc
sbb
dec
fwait
das
xor
inc
mov
mov
xor
push
add
inc
add
push
rcr
int3
lahf
std
mov
in
je
out
mov
iret
cltd
ja
loopne
stc
add
ja
pop
add
in
fildl
xchg
push
sbb
push
jl
and
or
in
test
mov
push
pop
dec
mov
and
pop
jecxz
xchg
sti
xor
or
sub
push
outsb
sti
or
mov
mov
dec
xchg
push
add
or
cmp
cltd
pop
dec
gs
sbb
cli
out
pop
insb
jp
sbb
mov
pop
jmp
dec
aas
in
in
js
data16
and
aas
cltd
lret
add
shll
shrl
imul
inc
xchg
loopne
adc
data16
jmp
aas
lds
sbb
pop
xchg
loopne
scas
fisubs
ja
mov
sbb
cmp
cmp
scas
mov
adc
jo
cmp
lods
insb
pop
notb
dec
out
notb
ret
test
scas
mov
divl
movsb
mov
popf
pop
filds
adc
mov
or
stc
mov
mov
dec
sbb
add
ret
xor
inc
mov
jbe
lret
pop
xor
cmc
cmp
jg
repz
outsl
xor
es
mov
imul
add
ds
mov
popa
sahf
lahf
push
mov
rcrb
mov
push
jnp
xchg
pop
lds
outsb
sub
add
stos
xor
xorb
pop
icebp
fsubrs
stc
gs
mov
mov
push
aad
out
adc
repz
xchg
arpl
pop
xchg
cmp
mov
mov
mov
lret
jb
pop
sahf
jmp
fisttpl
mov
add
pop
loopne
stc
jmp
adc
ja
mov
sbb
push
loop
add
cs
or
add
mov
inc
loop
cmp
push
mov
jb
pop
xor
call
add
push
rorl
sbb
jbe
imul
mov
pop
jle
enter
popa
adc
or
inc
push
push
aas
mov
cmp
push
ret
dec
xchg
push
sub
lock
ss
addb
mov
lods
xor
or
insb
mov
mov
movb
push
popa
adc
push
addr16
lret
xor
sub
iret
sub
jno
pop
mov
scas
sahf
cmp
cmp
mov
fstpt
cltd
pop
sub
ja
adc
push
or
lods
push
dec
testl
and
imul
into
imul
mov
xor
testb
in
and
add
sbb
push
pop
push
jo
cmp
in
adcl
mov
jne
jo
testl
inc
out
sub
es
adc
sub
movsl
mov
arpl
xor
push
enter
and
push
leave
jae
sbb
pop
rol
adc
sahf
xchg
push
jge
lret
xchg
sub
push
mov
xor
push
push
mov
fsubrp
xor
pushw
fdivrs
out
lea
aas
sbb
push
jecxz
testb
mov
testb
arpl
mov
imul
in
cmp
xor
xchg
gs
bound
imul
or
or
lret
sbb
push
aaa
adcl
push
xchg
mov
push
sarl
mov
mov
mov
imul
cmp
clc
insb
cld
cmpsb
sub
xor
jae
jg
leave
outsb
mov
xchg
add
and
imul
lahf
xchg
cmp
pop
mov
push
add
mov
cmp
add
jno
fisubrs
jne
imul
add
or
sub
and
cltd
ficomps
dec
imul
sti
fisubrs
sbb
jg
data16
lahf
mov
roll
lahf
xchg
movsl
jbe
add
mov
xchg
inc
xchg
lret
call
mov
rolb
pop
rcrb
cmpsb
les
xorb
stos
or
loope
leave
imul
sub
add
push
movsl
pop
mov
cmpsl
pop
sub
jne
xchg
sub
jecxz
orl
push
in
lods
mov
add
repnz
pop
or
dec
dec
mov
movsb
jne
pop
negl
pop
in
cwtl
outsb
es
dec
add
rorl
mov
nop
icebp
push
andl
xor
loop
and
add
pusha
cmp
js
jns
pop
sbb
lods
jp
jge
push
aas
xor
shlb
out
jge
ficoml
add
cmpsl
movb
ret
imull
test
stos
ljmp
add
adc
xchg
sarl
test
xorb
cmp
inc
add
add
std
xor
andb
in
jle
add
daa
jno
js
xorl
cmp
fiadds
imul
push
jg
pop
mov
add
xchg
pusha
or
insb
mov
test
imul
cwtl
sbbb
incb
lods
jae
out
sbb
mov
daa
test
pop
xchg
mov
pop
stos
cmpsb
ljmp
add
sbb
stos
mov
clc
imul
or
mov
imul
xchg
out
cwtl
mov
mov
push
ret
fmuls
in
mov
outsl
add
fbstp
inc
out
shr
mov
xchg
sub
sbb
jns,pn
clc
adc
imull
es
pop
enter
les
push
cmp
mov
xchg
cmp
add
movsl
mull
inc
pop
imul
pushf
out
pop
ljmp
xchg
add
mov
sbb
dec
aam
cwtl
adc
xor
test
mov
mov
add
pop
or
inc
ret
add
xchg
movsb
and
inc
add
push
inc
imul
cmpsl
cmp
insb
dec
lods
adc
push
rorb
sbb
js
jg
or
sbbb
out
add
push
js
jns
rolb
sbb
movsb
repz
and
popf
xchg
or
add
fstpl
pop
dec
idiv
add
rorl
xor
test
gs
fstps
add
mov
sbb
jno
lcall
add
dec
pop
stc
arpl
aad
js
cmp
shll
add
dec
imul
inc
pop
shr
inc
out
pop
sarl
push
ficoml
loop
shlb
test
imul
shl
movsb
pop
outsb
sbb
jecxz
add
sub
shrl
fisttps
fwait
aam
popf
push
mov
sbb
pop
or
push
xchg
xor
iret
dec
mov
cmp
pop
cmp
sub
adc
test
pusha
stos
dec
inc
ret
into
ficomps
inc
ficomps
shrb
lahf
jecxz
push
orl
scas
nop
fstps
mov
fs
insb
cmp
mov
pop
loop
jo
add
in
adc
xchg
sub
cmp
add
push
jno
ds
push
std
pop
je
test
cli
out
roll
and
xor
jmp
jo
subb
add
xchg
mov
push
repnz
dec
in
pop
cmp
int
gs
add
cmc
daa
insb
push
mov
add
shl
js
jbe
lock
sub
xchg
dec
xlat
lret
shlb
jno
in
lret
sub
stos
imul
sub
lret
pop
mov
lahf
imul
enter
add
push
loopne
roll
data16
push
add
pop
adc
into
movsl
loop
xchg
mov
dec
xor
icebp
sbb
aaa
mov
shrb
jmp
loopne
dec
adc
pushf
mov
add
cmpsb
jp
mov
mov
sub
and
inc
imul
jp
pop
xchg
scas
and
jne
stc
daa
ljmp
insb
push
in
add
cli
jmp
xchg
rcrb
pop
dec
pop
lret
jns
sub
das
jmp
popa
sbb
stos
mov
lock
vcvttpd2dq
mov
inc
gs
fistpl
pop
loop
push
ss
add
jbe
adc
sbb
aas
lcall
lds
xchg
add
rorl
in
add
addl
pop
icebp
jp
lret
push
inc
aaa
jb
mov
fcomp
fdivl
jbe
adc
pushf
out
xchg
jb
xchg
incl
ss
icebp
add
stc
pusha
sub
fxch
pusha
add
arpl
xchg
inc
add
mov
call
sbb
jmp
test
push
push
das
lds
add
pop
rolb
movsb
test
pop
xchg
je
aas
add
push
sub
adc
xchg
popf
in
add
sahf
scas
stos
sti
loope
clc
lds
add
cmp
sbbl
mov
push
pusha
add
push
shlb
xchg
add
push
pop
jne
clc
xor
fstl
ja
pop
xor
push
imul
fisubl
mov
dec
add
lahf
je
xchg
js
adc
stos
aas
lds
cmpsl
shl
insb
outsl
xchg
into
and
enter
add
mov
and
testb
cmp
add
cmp
add
sbb
je
xchg
cmp
mov
popl
je
jno
or
sub
add
shll
xchg
adc
shrb
movsl
mov
bswap
sbb
or
imul
aad
das
fwait
imul
loopne
sbb
inc
jns
sbb
sbb
iret
mov
repnz
aaa
pop
out
add
adcb
hlt
ljmp
daa
xchg
rcrb
movsl
out
dec
roll
sub
add
jle
stos
add
sbb
push
hlt
cmc
scas
cltd
and
cmpsl
int3
fisubl
mov
lock
push
rol
adc
add
movsl
push
fadds
popa
pop
ret
xchg
mov
jmp
inc
ds
cmp
cmpl
mov
out
imul
add
cmp
add
imul
arpl
pop
pusha
push
sub
and
xchg
sbb
xor
pop
leave
lods
sub
pusha
pop
test
rolb
mov
mov
cmp
xchg
lret
or
hlt
out
ret
adc
out
sub
adc
lcall
pop
inc
dec
and
pop
pop
cmpsl
or
mov
cmp
ss
call
lahf
add
xchg
cwtl
ret
insl
inc
dec
mov
out
pop
sbb
and
dec
fs
orb
xchg
sbb
aam
add
push
cmpsb
xor
pop
fs
fldt
icebp
imul
cmp
pop
fisubl
loope
jo
jge
add
sbb
push
push
jbe,pn
lock
and
dec
cmp
sub
icebp
xor
hlt
popw
sub
fcomip
push
sbb
rcr
lods
jmp
adc
mov
sub
aaa
and
scas
bnd
cmpsl
in
add
orl
xchg
data16
fldt
cld
cmpsl
xor
and
test
pop
cmp
pop
adc
inc
sub
jno
pop
push
xchg
add
xchg
and
jne
push
xchg
xor
pop
sarb
mov
bnd
add
mov
dec
incl
mov
sbb
ja
xorb
mov
add
mov
xchg
mov
out
das
adc
cmp
ss
dec
addr16
jb
imul
in
sbb
mov
jle
daa
imul
or
pop
repz
out
lret
push
out
cmp
loope
inc
xor
or
sbb
cmp
add
add
add
andb
add
dec
mov
dec
and
mov
lret
adc
pushf
sub
in
ds
sbb
pop
leave
divb
lret
pop
dec
add
in
lahf
insb
xchg
ss
add
inc
and
inc
dec
out
xchg
jmp
shrl
cmc
inc
sbb
dec
loopne
pusha
das
push
sbb
cltd
mov
xor
lods
enter
incb
pop
js
mov
xchg
sti
pop
divb
add
int
call
mov
add
jmp
lret
cltd
in
out
outsl
fucomip
imul
push
outsl
scas
push
fcmovnb
push
push
add
cmp
test
fwait
pop
push
scas
mov
push
movsl
dec
roll
dec
cs
dec
jns
and
andl
flds
mov
jp
lods
stc
pop
jns
cltd
cmp
xchg
addb
test
pop
jbe
and
std
or
cmp
sbb
xchg
push
xor
xor
mov
cmpl
inc
push
in
dec
inc
pop
jmp
xor
add
mov
mov
pop
mov
inc
pop
xadd
dec
and
cmpsl
imul
fildl
mov
mov
inc
mov
xchg
pop
outsl
ljmp
push
in
add
js
or
ja
pop
dec
xchg
mov
in
adc
fistps
jg
add
or
into
loop
outsl
mov
jg
and
xchg
les
fs
xor
pop
lds
shr
xlat
loop
lock
inc
jne
inc
das
imul
gs
inc
aam
cltd
aam
cmp
xor
cli
scas
in
mov
sbb
lahf
out
ja
cld
mov
imul
enter
add
mov
insl
xchg
rolb
jne
fadds
insl
and
sub
test
jp
mov
mov
mov
push
mov
inc
mov
pop
dec
loop
jo
out
pop
popf
xchg
aam
mov
imul
sub
mov
pop
xchg
enter
pop
add
ja
sub
fcomi
sbb
pop
pop
mov
push
adc
stc
insl
add
adc
clc
or
cmpsb
pop
jmp
push
pusha
inc
fwait
mov
or
jo
dec
nop
dec
xor
xlat
mov
imul
xchg
daa
mov
jmp
lret
sahf
xor
lds
or
xchg
shl
pushf
xor
dec
or
add
loopne
cmpl
pop
mov
sbb
mov
inc
xlat
pop
aam
sbb
daa
and
imull
mov
imulb
dec
push
pop
add
mov
or
rorb
add
sub
cltd
data16
stos
add
xor
lcall
inc
stos
or
pop
mov
icebp
jg
xchg
cmc
loopne
jmp
scas
mov
outsb
fnstcw
add
shr
std
fnstsw
in
bswap
sub
enter
push
inc
mov
daa
dec
notl
fsubp
ficomps
inc
lret
xor
ret
sarl
cmp
mov
add
orl
imul
flds
pop
adc
scas
push
cwtl
enter
mov
dec
sbb
jnp
sub
and
out
sub
push
idivb
fadd
clc
fildl
xchg
ficompl
in
cmp
mov
test
add
xor
push
inc
fstl
mov
mov
mov
sbb
cs
test
nop
jecxz
repz
scas
sbb
push
lret
or
xor
push
mov
in
xchg
sbbb
loop
pop
pop
fwait
repz
or
sub
pop
cwtl
inc
sbb
lods
adc
jge
sbb
adc
outsb
sahf
push
fnstsw
call
movsb
outsl
repnz
rcll
pop
dec
ss
pop
push
popa
xchg
and
add
add
push
or
push
enter
xchg
jo
pop
sahf
add
fdivrs
dec
add
dec
mov
lret
lgs
adc
mov
nop
imul
jae
imul
fiaddl
sbb
pop
ret
inc
push
inc
add
push
jge
mov
mov
or
xor
add
sub
fldt
into
arpl
and
lds
in
xchg
sbb
xor
cmpsb
add
test
pop
adc
sub
out
orb
cmp
imul
ljmp
xchg
in
jmp
jnp
pop
pop
testl
pop
jbe
out
shl
cli
sbb
jp
jns
loope
scas
sbb
inc
add
js
mov
rol
pop
jb
hlt
mov
nop
cmpsl
add
aaa
mov
data16
out
stos
push
loope
dec
and
cmp
cmp
repnz
outsl
cmp
nop
inc
sarb
imul
mov
cmpb
imul
or
cmpsb
sbb
nop
ficoml
movsl
gs
mov
test
jne
loopne
repnz
jns
ret
lcall
pop
jnp
mov
in
add
out
shll
gs
ret
adc
jge
or
mov
cltd
mov
lock
pop
adc
cli
mov
push
scas
add
ja
jno
dec
movsb
out
mov
mov
insl
xchg
in
scas
mov
mov
pop
adc
adc
fidivrs
push
test
mov
loop
ljmp
cmp
pop
sub
adc
insl
pop
jae
hlt
psubsb
mov
rcrb
add
push
in
adc
mov
data16
push
inc
pop
and
inc
add
or
jnp
in
out
adc
add
sub
mov
ljmp
sub
pop
push
popf
aas
int
sbb
mov
lret
jmp
mov
push
into
add
cld
repz
push
das
push
jae
push
pushf
jecxz
gs
sahf
jmp
push
imul
loop
arpl
daa
mov
ret
orb
sub
adc
fsubs
pop
pop
aam
in
inc
adc
add
pop
and
and
adc
js
ficompl
imul
gs
inc
mov
add
mov
push
dec
je
pop
int3
fldl
imul
jecxz
imul
xchg
fiadds
xor
in
inc
jmp
jnp
cltd
ja
outsb
cmpsl
sub
push
inc
push
bound
stc
movl
lret
push
jo
sahf
add
enter
mov
pop
popf
mov
out
sbb
and
adc
inc
lods
lahf
mov
pop
dec
test
add
add
cmp
nop
jbe
mov
or
popf
inc
and
out
repz
in
sti
cmp
insb
jbe
pop
addl
push
push
test
scas
and
in
mov
dec
jg
stos
outsb
or
rcll
add
loopne
loopne
jo
das
out
repz
push
pop
mov
imul
fs
pop
mov
xchg
fisubl
shl
or
scas
push
orb
out
mov
int
fwait
add
jmp
or
push
dec
repz
adcl
mov
daa
push
sub
pushf
stos
cmpsl
push
sub
add
sub
and
call
pop
popf
cmpsl
dec
push
insl
mov
inc
inc
imul
jo
iret
mov
imul
arpl
pop
adc
cs
xchg
add
or
add
add
loop
cmp
popa
push
int3
adc
in
neg
cmpsl
arpl
stos
sbb
mov
jne
jle
jecxz
in
insb
rdmsr
and
imul
pop
sbb
sub
stc
or
test
and
in
jae
dec
jmp
xchg
scas
sbbb
pop
adc
mov
cltd
inc
push
ljmp
out
scas
push
push
pop
xchg
and
je
testl
jecxz
repz
js
dec
mov
insb
pop
das
push
jp
adc
jo
aad
and
fst
pop
in
jmp
jp
pop
adc
pop
aam
xchg
push
test
jg
xchg
mov
jge
add
shlb
dec
cmp
cli
or
imul
je
adc
test
outsl
and
push
sti
mov
notl
xlat
pop
pop
mov
call
outsb
jns
leave
jo
sti
dec
xchg
imul
call
bound
add
sbb
push
in
call
xor
aam
jg
imulb
cmpsl
shll
test
jg
aas
shll
jnp
mov
icebp
push
push
xor
rcrl
pop
jle
mov
lret
cli
pop
adc
xor
mov
inc
jge
outsl
lea
in
pusha
and
test
fcompl
les
sbb
pop
push
jecxz
pop
dec
mov
add
lahf
adc
pusha
sub
push
sbb
push
cltd
test
fiaddl
pushf
inc
push
sbb
fbstp
xchg
daa
iret
xor
add
pusha
xorb
cmc
clc
adc
pop
xchg
pop
add
mov
jb
add
shlb
add
fstl
push
cmpl
leave
xlat
mov
test
test
pop
fistl
pop
sbb
xchg
filds
sbb
js
pop
and
scas
push
xor
fcmovnbe
jge
imul
repz
add
jmp
mov
loopne
loop
pop
add
cmp
jg
icebp
stos
pop
imul
rorl
pop
daa
scas
sbb
scas
das
or
jle
pop
sbb
mov
cs
imul
pop
xchg
mov
jmp
shll
out
ljmp
add
push
pop
mov
mov
xchg
sub
int
mov
push
add
mov
or
or
fs
xchg
add
xor
loop
lods
rcrb
andl
jmp
pusha
das
or
cli
shlb
sbb
mov
ljmp
in
mov
sbb
sbb
xor
cmp
aas
sub
gs
and
mov
cs
aas
and
fldt
js
pop
int3
rcrb
ret
adc
ja
imul
dec
addb
pop
add
das
adcb
popa
add
fstps
js
jns
divl
imul
pop
scas
push
sbb
push
add
popf
pusha
mov
pop
icebp
dec
jmp
popf
add
jo
cmp
cmc
sub
dec
subb
mov
sbb
aaa
push
mov
add
test
cld
mov
add
adc
mov
add
cli
jge
or
add
adc
xor
vpsubusw
mov
iret
or
lret
pop
lcall
enter
test
jl
pushf
xor
jg
inc
cs
ss
scas
arpl
lock
inc
aam
mov
push
mov
add
lret
sbbl
loop
fldcw
cmpsl
add
add
fst
push
cmp
icebp
aad
pop
dec
mov
adc
test
add
cmp
mov
inc
add
jg
add
and
pusha
mov
repnz
jno
repz
pop
and
push
flds
add
mov
push
jbe
int
fidivrs
les
movl
cld
pop
xchg
adc
jmp
sub
and
sbb
inc
push
jo
adc
add
stos
dec
pushf
or
sahf
imul
repz
gs
and
xor
call
dec
pop
cmp
mov
gs
cli
adc
and
or
jge
rorl
jbe
fisubrl
push
int3
imul
movl
adc
insl
push
test
add
imul
add
sarl
mov
clc
mov
add
je
nop
sahf
push
xchg
push
lods
pushf
adc
add
xchg
cmp
dec
add
adc
sarl
sub
hlt
mov
sub
inc
jnp
add
fisubs
ljmp
add
mov
pop
pop
push
out
add
jge
push
je
push
dec
outsb
dec
iret
test
push
ja
add
pop
jnp
int
bound
xchg
jns
mov
out
notb
pop
mov
dec
xor
roll
xchg
test
inc
jmp
add
imul
mov
dec
inc
sahf
pop
scas
push
jmp
flds
icebp
mov
lock
and
jmp
add
shll
sbb
imul
in
mov
cmp
addr16
cld
or
pop
sbb
pop
call
xchg
shlb
or
out
add
xchg
int
mov
aad
fists
add
jle
and
xchg
cltd
sub
jne
ja
add
fucomi
movsl
imul
roll
mov
dec
push
push
es
or
inc
add
pop
add
push
add
add
fs
jmp
mov
aad
add
lods
xchg
loop
and
outsb
ror
xor
imul
jg
push
pop
and
loopne
and
outsb
cmp
mov
nop
cmp
pop
jo
sbb
or
scas
iret
out
jns
add
shrl
clc
dec
fwait
add
in
sub
add
xchg
jl
or
test
pushf
mov
jo
lcall
xchg
push
jmp
dec
inc
pop
add
jno
jp
mov
in
mov
insb
sarl
or
shlb
xor
out
lea
push
jae
inc
add
xchg
mov
xor
cmp
pop
sbb
xchg
add
roll
push
pop
lahf
ds
add
fcomps
pop
lcall
add
popa
leave
cltd
mov
xchg
add
add
jnp
sbb
shrb
or
jge
ret
mov
addb
mov
mov
jbe
cmpsl
arpl
sbb
lock
imul
lret
push
adc
pop
icebp
arpl
sbb
nop
or
and
xchg
or
jb
sub
imul
lea
out
pop
movsl
ret
and
out
sbb
jmp
shrb
sbb
jge
loopne
add
sbb
dec
cmpsl
jbe
in
test
pop
repz
mov
inc
mov
gs
xchg
add
add
sbb
int3
pushf
mov
pop
pop
in
xchg
mov
popl
mov
push
in
pop
and
hlt
dec
sub
jae
adc
jecxz
lcall
imul
insl
daa
mull
mov
movsb
pop
je
and
cmp
xorb
sub
lahf
lods
jge
and
push
fwait
add
cmp
mov
pop
stos
mov
or
adc
leave
lea
test
fwait
inc
jae
scas
fadd
call
pop
stc
movsl
add
pusha
xlat
push
lahf
or
popf
das
test
xchg
push
js
imul
mov
add
out
shrl
out
call
jns
or
lcall
or
cmp
into
repz
das
cmpsb
cmp
sbb
and
pushf
and
mov
push
aad
bound
je
loop
jae
push
jbe
mov
xchg
xchg
out
add
mov
cli
add
addr16
popf
mov
aam
in
aaa
adc
add
jo
jne
test
xor
fdivrs
mov
and
mov
sub
jns
or
out
pop
stos
in
dec
push
pop
adc
mov
adc
dec
mov
cmp
in
std
sbb
fucomi
int3
push
push
popf
out
imul
push
mov
mov
or
dec
xchg
pusha
aad
or
jmp
add
fbld
adcb
leave
cmpsl
pop
cmp
ljmp
mov
jl
outsb
incb
fwait
cmp
xchg
orl
add
iret
and
ficoms
loopne
mov
ficoms
xchg
xor
cmp
pop
not
xor
inc
sbb
sbb
int3
loopne
sbb
sbb
mov
pop
cli
int3
push
sbb
add
ret
je
add
add
imul
aam
fisubl
xor
fsubs
jmp
and
pushw
roll
cmp
push
xorl
or
jl
jmp
add
mov
xlat
stos
mov
les
pop
pop
push
ljmp
scas
ret
fldt
insl
adc
add
push
repnz
insl
or
adc
jp
xchg
pop
insl
fwait
sbb
stc
add
scas
mov
int3
out
imul
adc
push
or
in
inc
incb
fldl
scas
sbb
insl
scas
leave
add
lret
mov
das
flds
mov
cmp
loope
jo
imul
adc
movups
dec
out
add
scas
in
jecxz
outsb
jecxz
mull
rclb
shlb
mov
test
or
insl
mov
stc
mov
xchg
out
adcl
pushf
lea
mov
mov
mov
mov
mov
inc
daa
pop
aas
jmp
aad
ds
jmp
mov
mov
pushf
xchg
jb
data16
pop
jnp
add
pop
data16
popa
pop
jl
pop
adc
jp
jo
sbb
fistpll
add
inc
pop
pop
js
adc
inc
and
xchg
inc
jp
bound
adc
cmp
push
imul
push
insl
dec
pop
xor
sub
cld
daa
push
sub
mov
adc
negl
xor
sbb
imul
or
add
pop
push
sbb
nop
adc
xor
sti
jl
mov
andl
fwait
jecxz
shl
xchg
ljmp
imul
dec
fcom
out
iret
aad
mov
std
and
stos
push
aam
fimull
fbld
lds
push
ficomps
xchg
test
sbb
fisubs
mov
mov
in
mov
cwtl
mov
lea
xor
xchg
pushf
sahf
sub
popf
ljmp
punpckhwd
pushf
mov
pop
je
cmpsl
jl
test
fs
imul
push
add
or
adc
int
je
ret
incl
dec
dec
push
dec
add
andl
pop
pop
jno
bound
cmp
push
or
ret
sbb
add
and
dec
aas
and
adc
dec
and
cmp
pop
sbb
insb
cmp
add
adc
imul
add
cmp
mov
adc
jge,pn
push
sbb
fsubp
mov
loope
xchg
icebp
hlt
nop
imul
shlb
xchg
in
xlat
sti
and
aad
sub
pop
add
movsl
rcl
mov
movl
mov
enter
in
or
or
sub
cmpsl
idivb
lods
mov
stc
add
cmp
lods
pop
add
mov
dec
sahf
jbe
addb
sahf
push
xchg
lea
arpl
fldt
jnp
jg
outsb
xor
das
push
bound
leave
imul
add
imul
dec
and
sub
pop
dec
or
jbe
in
sbb
inc
push
inc
adc
inc
push
and
outsb
imul
aas
sub
shrb
add
add
inc
aas
sbb
xorl
pop
xor
push
or
jecxz
pop
push
add
movd
or
adc
lret
mov
sysret
lock
cmpsl
push
xchg
xchg
jg
pop
adc
pop
xor
dec
inc
inc
pop
adc
push
jns
imul
mov
ficomps
push
mov
lods
nop
mov
shrl
cmpsb
enter
mov
mov
xchg
or
or
add
test
inc
in
mov
out
ljmp
pop
rorb
cmp
jp
jl
pop
sti
add
ss
cli
vorps
loopne
xchg
in
cwtl
subl
aam
int
shrb
fisubrs
mov
fiaddl
mov
shrb
lds
xchg
push
mov
aas
add
sub
aaa
push
sub
inc
adc
inc
cmp
sub
cmp
mov
roll
push
add
adc
jge
push
add
adc
or
push
pop
push
jnp
data16
jg
bound
iret
sbb
jno
push
out
add
jo
insl
imul
inc
xor
and
push
imul
push
test
hlt
push
test
add
jnp
pop
sub
fidivrs
imul
mov
les
scas
inc
mov
stos
stc
mov
mov
rcl
cwtl
sbb
test
sahf
lea
fxam
fmull
add
xchg
jp
push
adc
add
sub
fdiv
mov
repnz
stc
icebp
add
mov
add
shlb
les
imul
mov
loopne
push
test
ror
int3
xlat
mov
ret
shlb
cmp
push
pop
mov
xor
add
cmp
andb
xor
dec
xor
pop
inc
insl
adc
inc
adc
sbb
add
sbb
push
add
add
pop
js
or
add
sbb
je
pop
out
repnz
mov
push
arpl
jle
insb
push
or
add
imul
movsb
dec
mov
fisttps
mov
xor
jno
pop
cmp
pop
pop
inc
xchg
pop
add
and
dec
lret
dec
add
lods
imul
shll
rcl
movsl
add
mov
scas
pop
rcrb
cld
pop
mov
out
popf
xchg
mov
cwtl
test
pop
and
inc
popf
sbb
sbb
or
out
clc
push
and
std
leave
in
stc
out
clc
add
pop
jecxz
mov
add
or
xlat
push
add
rcr
mov
faddl
aad
mov
icebp
scas
add
fldl
ja
jns
dec
movsl
pop
lret
xlat
fidivl
subl
xor
xor
pop
push
xor
stc
aaa
add
ss
sub
xor
imul
sbb
addl
adc
adc
jge
push
or
je
push
adc
and
mov
cmpsb
outsl
std
js
adc
adc
and
jne
je
add
pop
outsl
cmp
arpl
imul
pop
iret
add
fistps
pop
push
pop
sbb
add
sub
push
add
hlt
sub
inc
iret
sub
cmpsl
jge
jmp
xchg
faddl
mov
imul
movsl
sbb
pop
mov
pop
imul
xchg
xchg
cmp
mov
add
add
jmp
pop
incb
xor
jmp
imulb
lock
int3
out
flds
add
clc
cli
mov
imul
dec
fnstcw
enter
jb
jg
outsl
add
addl
insl
adc
or
movsl
sbb
sub
dec
data16
adc
push
dec
adc
dec
dec
out
lcall
sbb
mov
xchg
pop
dec
add
mov
add
or
imul
jp
mov
jns
outsl
dec
push
push
mov
push
push
or
push
or
mov
xor
jl
dec
sbb
outsb
fs
and
or
pushf
add
or
dec
sub
sbb
sub
pop
push
push
sub
dec
inc
adc
add
mov
test
adc
pop
sbb
cmp
dec
loopne
roll
cmp
lods
inc
pusha
adc
or
int3
cld
inc
xor
lret
mov
and
scas
mov
lret
aas
push
std
xlat
inc
and
fstp
mov
jo
jp
dec
sbb
std
cmp
pop
dec
movsl
bound
jg
dec
sub
insl
cltd
adc
add
jns
cmp
add
pushf
call
mov
jno
add
das
push
leave
bswap
outsl
fsts
decb
stc
into
out
stc
xlat
out
xor
or
sub
adc
ja
lcall
pop
int3
jle
pop
loop
add
outsb
push
xor
add
xor
mov
adc
adc
xchg
movsb
mov
loope
pop
or
daa
mov
push
jmp
pusha
nop
jns
insb
nop
insl
stc
js
popa
stc
test
xlat
stc
into
xchg
sbb
jb
imul
sub
jp
arpl
jle
add
cmp
xor
std
cwtl
xor
inc
sarl
xchg
icebp
pop
cmp
sbb
js
xchg
jb
sar
lret
clc
sti
loope
and
leave
es
mov
mov
and
sbb
pusha
jp
adc
in
ds
inc
popf
addr16
sahf
jge
xchg
lahf
lahf
jbe
lahf
mov
fistpl
mov
inc
sbb
lret
iret
cs
addr16
or
out
sub
add
and
ret
pop
sub
mov
mov
pop
mov
push
mov
pop
push
sub
mov
pop
pop
sub
mov
mov
pop
xchg
lea
sub
mov
mov
pop
sub
mov
push
pop
pop
xchg
sub
mov
push
pop
pop
push
sub
mov
mov
pop
push
mov
pop
xchg
sub
mov
sub
mov
pop
pop
push
sub
mov
sub
mov
pop
pop
xchg
push
push
pop
pop
xchg
push
push
mov
pop
xchg
push
mov
pop
push
sub
mov
pop
pop
lea
sub
mov
mov
pop
push
mov
pop
push
sub
mov
pop
pop
xchg
sub
mov
push
push
pop
pop
sub
mov
mov
pop
push
mov
pop
sub
mov
push
pop
pop
popl
xchg
sub
mov
mov
pop
add
xchg
sub
mov
mov
pop
mov
push
mov
pop
xchg
sub
mov
push
pop
pop
sub
mov
sub
mov
pop
pop
mov
sub
mov
mov
pop
push
push
pop
pop
xchg
sub
mov
sub
mov
pop
pop
movl
xchg
xchg
inc
incl
sub
mov
push
pop
pop
push
mov
pop
mov
push
mov
pop
sub
mov
sub
mov
pop
pop
call
cmp
jne
push
mov
pop
sub
mov
mov
pop
mov
sub
mov
mov
pop
push
mov
pop
inc
xchg
xchg
mov
push
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
call
cmp
jne
xchg
xchg
mov
xchg
push
mov
pop
push
mov
pop
sub
mov
mov
pop
mov
push
sub
mov
pop
pop
sub
mov
push
pop
pop
add
add
jmp
jmp
push
sub
mov
pop
pop
xchg
mov
xchg
sub
mov
mov
pop
push
sub
mov
pop
pop
sub
mov
mov
pop
lea
sub
mov
mov
pop
push
mov
pop
xchg
sub
mov
push
pop
pop
push
xchg
xchg
xchg
xchg
push
xchg
sub
mov
push
pop
pop
push
mov
pop
xchg
sub
movl
sub
mov
mov
pop
xchg
sub
mov
push
pop
pop
push
mov
pop
lea
push
sub
mov
pop
pop
push
mov
pop
xchg
xchg
sub
mov
sub
mov
sub
mov
pop
pop
xchg
sub
mov
mov
pop
push
push
pop
pop
lea
push
push
pop
pop
sub
mov
mov
pop
call
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
xchg
sub
mov
mov
pop
xchg
xchg
lea
xchg
push
push
pop
pop
push
mov
pop
push
push
pop
pop
mov
sub
mov
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
xchg
push
push
pop
pop
xorl
push
mov
pop
sub
mov
mov
pop
add
cmp
jb
jmp
push
mov
pop
sub
mov
sub
mov
pop
pop
sub
mov
push
sub
mov
pop
pop
sub
mov
mov
pop
xchg
xchg
mov
xchg
push
mov
pop
sub
mov
mov
pop
push
push
pop
pop
mov
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
xchg
xchg
mov
xchg
xchg
add
subl
push
mov
pop
push
mov
pop
pop
xchg
push
push
pop
pop
push
push
pop
pop
push
push
pop
pop
mov
xchg
xchg
ret
push
push
pop
pop
push
mov
pop
pop
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
sub
xchg
sub
mov
mov
pop
mov
push
sub
mov
pop
pop
xchg
xchg
sub
mov
mov
pop
push
xchg
push
mov
pop
addl
push
mov
pop
xchg
pushl
sub
mov
push
pop
pop
xchg
push
push
pop
pop
push
mov
pop
mov
push
push
pop
pop
push
mov
pop
xchg
sub
mov
sub
mov
pop
pop
mov
xchg
push
mov
pop
add
incb
addl
