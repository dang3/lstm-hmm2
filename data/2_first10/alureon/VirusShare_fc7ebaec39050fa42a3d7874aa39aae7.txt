hlt
repz
cltd
in
adc
xor
jle
inc
jne
into
arpl
inc
clc
mov
dec
jbe
push
add
jl
gs
lcall
std
mov
add
lcall
add
pop
fldcw
and
imul
jns
arpl
fwait
int
xor
mov
pop
loope
cmp
push
jl
mov
mov
not
inc
lods
popa
jns
fisttpll
xlat
pop
mov
fisubrl
int3
icebp
and
mov
lea
mov
lahf
cmp
dec
call
std
js
cli
pop
jbe
adc
cmp
adc
mov
push
sub
outsl
dec
jbe
rorb
sbb
ret
not
xchg
mov
ficomps
stc
push
das
mov
mov
xor
leave
imulb
mov
cmp
adc
lea
in
adc
fidivrl
mov
dec
ret
jns
loopne,pt
cli
and
push
in
cs
fnsave
in
dec
stos
nop
inc
jmp
dec
push
mov
dec
call
cld
cmovns
mov
dec
rorb
push
cmpsl
popa
lcall
hlt
mov
mov
cmpsb
cmp
fstps
orb
int
pop
sbb
aas
out
adc
pop
add
and
sahf
mov
scas
insl
mov
sbb
mov
cmc
xchg
out
popf
das
scas
in
push
push
dec
loop
pop
aad
out
insl
incb
add
inc
xchg
xor
jbe
mov
dec
xorl
es
repnz
push
adcb
push
arpl
testb
mov
lea
xrelease
das
data16
jl
lock
push
adc
arpl
adc
add
iret
jnp
adcb
add
add
es
pop
sub
lret
xchg
sub
pushf
or
or
jo
push
push
push
fisttpll
lret
fwait
testl
rcrb
je
cli
mov
push
mov
and
mov
mov
mov
mov
out
mov
push
in
or
jl
cld
push
mov
mov
xor
xchg
inc
add
inc
or
jo
mov
imul
dec
loope
popf
push
mov
xor
push
es
in
fldl
mov
or
fisubrs
sub
sub
in
pushf
and
adc
inc
xor
jo
jne
inc
inc
icebp
and
or
gs
push
inc
fisttps
int
mov
mov
bound
cmp
out
pop
jmp
or
loopne
adc
jp
mov
test
test
cs
adc
jnp
repnz
lret
inc
data16
jg
sti
outsb
mov
jp
cli
xorl
test
cmp
or
lcall
mov
push
dec
xor
test
push
adcl
in
cmp
fldenv
jo
xor
out
mov
jle
pushf
cmp
pop
lea
cmpsl
fdivl
push
xchg
cmpsl
flds
inc
jb
mov
sbb
jle
movsb
addl
std
fisubl
and
push
iret
push
fistps
pop
push
mov
loopne
in
or
rcrb
enter
mov
call
add
and
popa
mov
jecxz
les
mov
sti
lds
jmp
les
sti
lods
push
in
mov
shrl
sbb
dec
add
or
xchg
pop
out
inc
iret
jne
inc
outsl
clc
repnz
push
push
add
pusha
mov
insl
sub
fisttpll
clc
xor
mov
dec
dec
out
pop
inc
icebp
sub
and
sbb
scas
or
lock
sub
addb
xor
loop
and
inc
adc
shll
prefetcht1
fldcw
mov
push
mov
jo
rolb
inc
nop
js
fistl
in
mov
ret
lret
add
adc
mov
out
loopne
xchg
xchg
adc
in
pop
push
in
push
xor
jl
mov
sahf
fisubl
sbb
lds
or
xchg
xchg
pushf
test
or
outsb
test
push
or
pop
lret
fucompp
fnstcw
mov
shl
push
inc
in
out
imul
xor
ss
sub
imul
sbb
mov
push
test
inc
adc
loop
sbb
jb
sub
imul
xchg
das
lods
insb
add
lret
jp
out
cmp
pop
mov
stos
repz
pop
fcompl
and
xchg
sti
cmpsb
fcomps
or
mov
loop
rorl
subl
clc
push
push
xor
ds
adc
inc
push
dec
jns
sub
cs
push
push
loop
add
aaa
and
and
sbb
add
pop
jmp
cltd
in
sub
add
sarl
jmp
xor
mov
cld
cmp
fstpl
sub
pop
push
cmp
les
iret
fwait
jp
fs
sub
outsl
ret
adc
aaa
push
ds
cmpl
lea
iret
imul
lds
ja
scas
repz
imul
pushf
subl
mov
jb
ficompl
pop
imul
or
test
jae
and
notb
push
pusha
jmp
nop
in
mov
insl
inc
movsb
out
cli
repnz
jge
cltd
clc
inc
aam
sbb
pop
sti
jno
js
dec
mov
push
mov
aaa
mov
pop
cmp
clc
in
inc
icebp
pop
cmpsl
and
push
cli
ficoml
call
out
or
movsl
or
mov
cld
push
sti
ret
or
jmp
cwtl
test
lea
xlat
out
mov
fadds
and
std
adc
fwait
mov
sbb
xor
cmp
ficompl
pop
imul
xor
pop
imul
jbe
fisttps
xor
test
pop
inc
cmp
stos
adc
cmp
stos
icebp
xchg
mov
add
and
js
and
fwait
test
mov
sbb
clc
out
add
pushf
aad
xor
shll
jmp
or
mov
xor
inc
out
fiadds
insb
rolb
jecxz
mov
mov
adc
cmp
je
outsb
sahf
es
fsubs
outsl
inc
stc
sub
mov
sub
sbb
or
aad
sbb
push
dec
roll
js
jo
mov
in
and
mov
sbb
rcr
loope
fisubl
arpl
nop
xchg
mov
sbb
sahf
movsb
mov
es
jp
inc
sub
cmp
pop
mov
mov
fimuls
adc
shlb
stos
lock
xchg
mov
les
mov
and
in
adc
pop
fdivrl
sbb
jae
mov
popa
shlb
xchg
cli
jmp
cmp
sbb
mov
in
and
pop
das
notb
loop
bound
into
rclb
cmpsl
sub
mov
subb
pop
sbb
dec
in
lcall
lret
pop
dec
mov
mov
enter
xchg
xchg
aas
pop
in
mov
mov
movsl
mov
ret
insb
cmp
push
push
aaa
lea
pop
into
lret
adc
fists
sbbl
sub
lahf
shrb
insl
inc
adc
and
stos
scas
and
xor
dec
cmpsb
pop
sahf
xor
cltd
aas
test
cmp
int
mov
repz
jns
adc
mov
popf
rcr
cmp
outsl
and
adc
hlt
xchg
mov
gs
xchg
jnp
jl
adcb
stc
test
push
enter
and
adc
jnp
cmp
mov
add
jmp
mov
xlat
and
aaa
add
adc
fsubl
and
sbb
mov
rorl
mov
aas
test
dec
mov
imul
sbb
add
mov
js
pop
adc
jns
cmc
ljmp
add
adc
dec
fbstp
aad
inc
xchg
loopne
jns
cmpsl
xchg
ret
pop
pop
or
cmp
jecxz
jne
sub
mull
shrb
mov
loopne
outsl
push
or
int3
push
xchg
fs
mov
stc
mov
adcb
jne
adc
mov
sub
cmp
clc
cmp
hlt
cmp
lock
pop
push
push
in
sub
inc
inc
fnstcw
inc
sbb
sbbl
shlb
lods
xor
cmpsl
or
and
loopne
lea
sahf
scas
or
pop
pushf
cltd
and
out
and
sti
fidivrs
xchg
out
xorb
jo
ret
pop
arpl
jbe
stos
ror
scas
roll
cmpb
subb
sub
ja
out
adc
and
push
add
xchg
test
addb
xor
push
lahf
sub
in
bound
xchg
clc
out
or
gs
jne
incl
nop
sub
sub
mov
out
or
push
in
mov
adc
jne
xor
cmp
mov
fistpl
lret
imul
gs
push
loopne
cmp
dec
cmc
mov
mov
sbb
sub
push
jno
rcrl
out
push
sti
mov
data16
xchg
lods
outsb
into
popf
cmp
fstps
jae
push
scas
jo
push
pop
int
pop
orb
icebp
lret
pop
adc
pop
lods
fcmovnbe
sub
ret
ljmp
sbb
push
dec
xchg
sbb
popa
mov
lcall
mov
loop
sub
mov
cmpsl
flds
lods
add
inc
test
aad
pop
stos
and
xchg
lods
adc
push
loope
fnop
xchg
sbb
mov
mov
push
js
ret
je
dec
mov
pop
aam
outsl
mov
jo
pop
sub
out
inc
movsl
mov
int3
sti
mov
mov
add
xorb
repnz
xlat
ds
clc
into
cmc
sarl
fmull
test
or
add
xor
outsl
pop
mov
gs
idivl
adc
dec
sub
cld
mov
clc
int3
outsl
jb
das
ljmp
pushf
push
enter
xorl
mov
loopne
clc
ja
mov
rorl
lds
mov
out
cmpsl
pop
pop
popf
mov
jg
push
int3
push
mov
lods
jns
icebp
adc
nop
xor
dec
mov
push
test
mov
push
inc
cwtl
jbe
sbb
les
cmp
adc
bound
es
add
push
int3
hlt
mov
leave
into
jmp
add
testb
cmp
imul
shlb
aad
fwait
test
or
mov
push
dec
lea
push
add
inc
sbb
stos
pop
mov
es
pop
testb
imul
ja
jno
in
das
cmp
xchg
mov
pop
or
imul
cwtl
repz
xlat
sbb
dec
inc
dec
test
sbb
mov
imul
fbstp
ja
adc
fidivl
test
push
clc
cld
add
mov
fidivrs
leave
xchg
bt
orb
mov
cli
test
cmpsb
outsb
sub
mov
repz
pop
jecxz
imul
loope
inc
mov
pop
push
test
jno
mov
mov
sbb
and
fnsave
push
pushf
jb
push
fistpl
nop
xchg
mov
or
jecxz
cmp
xchg
js
push
push
push
mov
dec
je
mov
icebp
jbe
je
adc
jne
mov
fidivs
and
je
or
scas
xchg
cmp
popf
xor
cmpsb
test
mov
lret
or
and
ficompl
dec
push
inc
ds
jmp
mov
lret
xor
fcomps
cmp
xlat
jmp
cmp
adc
movsb
mov
out
ss
ds
and
or
push
inc
loope
cmp
iret
insb
enter
popl
lods
jp
cmpsl
jbe
mov
cmp
emms
jo
fucompp
mov
push
pop
pop
inc
and
cmpsb
mov
into
lea
push
mov
mov
sub
jmp
add
in
filds
idivl
cmpl
pop
iret
mov
lea
test
jae
fsubl
out
mov
pop
xchg
icebp
xchg
insb
fwait
mov
xchg
xchg
shll
push
adc
jno
fldz
outsl
xchg
iret
imul
icebp
aaa
es
inc
mov
gs
int3
fnstcw
out
push
pusha
faddl
cltd
cmp
jl
pop
arpl
mov
lods
sub
or
dec
pop
jb
push
pop
mov
int
outsl
decl
sub
xchg
jl
xor
lahf
mov
cli
mov
pop
add
push
sbb
pop
ds
lea
sub
aad
jle
adc
lods
sahf
cld
mov
sub
pop
popf
cwtl
dec
mov
ja
fdivr
pop
test
xor
adc
insl
mov
jbe
add
subl
ficompl
sahf
call
sbb
lea
jge
test
addl
repz
loope
xchg
sbb
sub
jbe
jo
push
call
test
lea
popf
mov
ret
push
add
movsl
or
sbb
stc
sub
pop
out
cli
add
stos
outsl
cwtl
xchg
les
imul
push
push
or
divl
out
jmp
test
dec
int3
lahf
aad
addr16
inc
mov
sbb
lods
rcrl
or
into
aas
jns
pop
icebp
dec
fldt
ja
shr
test
sub
xchg
out
cld
push
mov
add
inc
sbb
mov
adc
adc
daa
loope
xchg
in
xchg
outsb
push
push
fdivr
loopne
push
push
jnp
into
pusha
test
sub
popf
test
xor
inc
loope
inc
cmp
gs
inc
in
xchg
addr16
outsl
push
sub
fldt
repnz
push
cld
or
sub
insl
dec
outsb
lds
adc
cmp
fadd
xor
adc
stc
xorl
xchg
nop
jnp
ret
dec
jmp
jle
push
out
jmp
test
sti
cltd
mov
lcall
loope
insl
adc
icebp
lahf
aas
jno
xor
mov
push
or
movsb
push
in
sbb
sbb
xchg
test
mov
cwtl
ds
ret
lods
es
mov
xchg
jmp
std
xor
cld
leave
loopne
addr16
out
dec
mov
xchg
and
sbb
movsl
stos
outsl
adc
and
push
jae
jns
push
inc
outsl
mov
ja
mov
and
movl
ss
inc
add
scas
xor
out
outsb
inc
mov
mov
xchg
loope
enter
imul
mov
cmc
out
dec
cmp
push
pusha
out
insb
and
lods
mov
pop
cwtl
mov
lret
xchg
and
adcb
inc
outsb
inc
cwtl
xchg
pop
ss
inc
ljmp
cli
sub
jge
in
inc
inc
rcrl
rolb
ljmp
aaa
xchg
mov
iret
loope
js
mov
pop
arpl
sub
or
add
push
aam
lods
iret
das
loopne
stos
mov
cmpsl
hlt
adc
lock
sub
mov
aad
jns
lea
mov
and
push
cmpsb
xchg
mov
sahf
cmp
mov
or
mov
nop
cmp
jl
nop
sbb
push
mov
test
xchg
mov
or
mov
stos
jnp
xor
sbb
cs
insb
push
or
jns
jbe
push
mov
in
aaa
pop
jbe
sbb
leave
xor
adc
xor
dec
adc
imul
jb
sbb
insb
add
xor
scas
xchg
and
jno
jmp
adc
aaa
push
loopne
out
sbb
stos
fstpl
sbbb
sbb
aam
mov
sbb
pop
dec
push
in
mov
xor
sub
mov
xor
loop
sbb
sub
jae
jle
push
xchg
rcll
sub
test
stos
cmp
cmpsb
frstor
pop
sbb
push
std
js
sahf
popf
cmp
jnp
mov
mov
xchg
or
xchg
push
pop
add
loopne
andl
sub
push
fidivl
mov
flds
stos
pop
loope
in
dec
int
mov
xor
orl
imul
xchg
sti
mov
ljmp
out
inc
jle
movsl
ret
movsl
fistpl
inc
daa
imul
loopne
addr16
call
or
or
adc
test
pop
pop
cld
jo
dec
icebp
cmc
movsb
pop
sbb
sahf
aaa
inc
mull
jle
xchg
fistps
lcall
leave
loopne
cltd
in
inc
js
or
xor
mov
lret
fisubrs
push
push
sbb
out
cwtl
insb
cmp
mov
repz
dec
mov
push
adc
mov
fldl
repz
jge
popa
sbb
fnstenv
xor
popf
xorb
push
hlt
pop
xchg
jae
or
jb
testl
stos
mov
mov
addr16
push
sbb
xlat
sub
out
jmp
sbbl
and
and
sbb
push
sti
fildl
inc
sub
mov
insb
stos
lret
jecxz
dec
pusha
sbb
xor
jecxz
shr
mov
ret
jmp
pop
push
aad
lods
adcl
and
rcrb
sbb
sbb
insl
js
in
mov
push
adc
popa
clc
inc
fstl
push
nop
push
orl
mov
add
fmull
roll
std
mov
jnp
pop
int3
je
mov
scas
test
movsl
scas
or
ljmp
xor
dec
in
lock
mov
add
sbb
mov
jl
roll
or
inc
enter
mov
inc
lret
sahf
push
and
mov
nop
clc
je
fbld
cmpsb
xchg
inc
dec
add
frstpm(287
push
mov
or
jl
dec
pop
ret
sbb
xlat
push
loope
pop
loope
out
in
std
je
pop
push
or
cli
adc
dec
in
flds
pop
and
std
int
add
fistl
cmp
bound
lcall
push
or
enter
imul
cmc
stos
or
arpl
aam
xor
gs
jecxz
inc
jo
push
cmp
cmp
lret
into
fisubrs
fwait
mov
imul
adc
xorb
cwtl
inc
add
sub
dec
push
adcb
mov
cmp
popf
outsl
hlt
sub
jl
push
sub
stos
mov
jmp
mov
cltd
mov
mov
mov
std
test
cmp
sbb
xorb
std
lods
test
jae
pop
arpl
roll
push
out
dec
scas
adc
fsubr
andb
pop
xchg
inc
les
sub
mov
mov
pop
imul
mov
mov
ljmp
mov
cli
dec
and
outsb
shrl
call
inc
mov
mov
clc
fwait
push
fsubs
push
and
mov
ljmp
test
ds
lods
clc
dec
sbb
sub
cmp
andb
xchg
or
out
imul
test
mov
inc
sahf
fwait
lcall
cmpsb
cmc
push
sbb
jecxz
push
cmp
mov
stos
addr16
movb
fs
leave
ljmp
cltd
jmp
sub
fstps
shll
in
jae
xor
hlt
pop
pop
sar
jne
sub
test
pusha
jg
testl
or
jb
nop
iret
mov
xchg
imul
jecxz
push
sub
push
insl
outsl
add
sub
lods
scas
cmpsb
adc
cltd
mov
stc
sti
test
mov
daa
outsb
and
call
mov
push
push
mov
mov
aaa
in
dec
sbb
mov
jmp
adc
push
decb
popf
test
pop
push
jl
or
idiv
out
or
xor
icebp
jo
mov
stos
xchg
mov
outsl
sahf
and
imul
cmpsb
mov
adc
xor
rcr
fistl
sub
adc
mov
xor
scas
pop
push
ja
loopne
sbb
mov
sbb
test
jb
fldcw
outsl
mov
stc
shl
mov
jno
jecxz
lock
test
and
add
mov
aas
data16
fdivrl
jbe
outsl
pop
dec
imul
and
test
fwait
pop
mov
dec
dec
sbb
subl
adc
add
xor
test
int
xor
int3
aas
xor
adc
icebp
ror
push
cltd
push
mov
hlt
and
xor
repnz
cmp
cs
push
je
int3
dec
xor
xor
and
sbb
pop
movsl
fisubrl
lahf
gs
inc
adc
xor
cld
pop
adcl
pop
or
mov
inc
mov
pop
adc
icebp
sbb
push
testb
pop
push
outsb
sti
xchg
xor
out
test
shll
fcompl
pop
push
popf
adc
sub
xchg
fbstp
xor
xor
mov
xlat
lods
cltd
fstps
push
ljmp
mov
leave
pop
pusha
insl
dec
sbb
xlat
fucomip
ljmp
std
andb
and
mov
jle
push
inc
mov
pop
mov
or
sub
jns
xlat
xor
loopne
sbb
mov
lds
jle
ja
movsl
fcomps
pop
add
dec
pop
insl
lgs
out
int3
sub
stos
jge
inc
add
inc
insl
add
sbb
cmp
popa
out
loope
repnz
lret
xchg
sub
cltd
jecxz
stc
aad
lret
pushf
inc
mov
sbb
cmc
cli
cld
jae
pop
push
mov
mov
adc
xor
icebp
dec
and
and
pop
popf
aas
push
mov
cmc
leave
fiaddl
push
stos
or
and
fistpl
add
aam
add
pushw
scas
test
inc
adc
mov
sbb
mov
int3
fwait
add
jo
repnz
icebp
test
adc
xchg
inc
cmp
add
mov
sbb
lret
addr16
lods
cmpsl
xor
or
rcll
lock
mov
xchg
cltd
adc
mov
xchg
lds
pop
mov
mov
push
pop
sub
ret
js
mov
movl
mov
lret
dec
xchg
pop
sbb
dec
aam
movsb
lret
pushf
cs
sub
jl
sbb
lret
xor
jecxz
jge
int3
or
inc
repz
popa
pusha
pop
pop
nop
stos
insl
xchg
leave
mov
and
negl
test
add
push
adc
in
mov
mov
mov
movsl
push
xchg
pop
sbb
mov
gs
cmp
and
sbb
and
mov
mov
jl
pop
sbb
ret
xchg
add
arpl
lods
dec
stos
cmp
negb
xchg
enter
jo
jo
je
inc
or
into
jns
lea
or
lahf
pminub
cltd
add
mov
pop
cmpsl
and
mov
roll
imul
movsl
sub
out
out
sub
or
andl
fwait
xchg
xor
adc
xor
xchg
imul
inc
mov
insl
mov
enter
js
out
and
xchg
test
cld
xor
aad
add
push
rolb
loop
fldl
fidivl
movsb
push
push
lea
pushf
jne
and
scas
xor
lahf
jl
cld
xor
cli
in
nop
xor
or
popl
popf
sub
or
ljmp
cld
lahf
push
adc
pop
aad
fsub
jle
push
cwtl
sbb
ss
out
and
fnstenv
cs
fimuls
divl
in
adc
pop
mov
in
les
mov
cli
mov
ret
rol
mov
mov
mov
mov
sbb
mov
popa
and
lret
lods
in
iret
jmp
mov
add
imul
inc
cwtl
xor
mov
popa
jo
cmp
xchg
paddsw
push
xlat
xor
jecxz
fsubrp
sbb
jp
jns
int3
add
rclb
sbb
xor
mov
xchg
push
into
movsb
add
push
sub
inc
cmp
loop
test
std
or
mov
dec
or
pop
aas
imul
iret
les
and
cmp
dec
out
pusha
jb
addr16
iret
dec
xchg
idivl
adc
shrb
or
imul
or
dec
imul
mov
and
loop
mov
outsb
and
lret
addr16
fwait
jnp
cltd
sub
jne
mov
int3
push
shrb
aam
loope
mov
dec
dec
jecxz
pop
add
out
in
push
icebp
pop
mov
mov
sub
inc
stos
xor
add
dec
shr
xorb
cmc
repz
add
push
rcl
lea
je
pop
fs
pop
mov
cmp
andl
push
clc
dec
mov
loop
push
addl
lret
jb
pop
out
cwtl
ror
lahf
inc
dec
and
sbb
addr16
xchg
xchg
adc
dec
fmull
aam
mov
sub
inc
add
xor
bnd
iret
leave
hlt
xchg
aaa
mov
xchg
sub
mov
sub
sbb
subb
es
mov
out
inc
mov
in
jo
or
mov
pop
jno
inc
cmp
stc
mov
sub
mov
mov
loop
adc
push
stc
sub
jg
dec
faddl
rcrb
jne
sub
jo
leave
sbb
fmuls
les
ja
clc
xor
iret
enter
mov
inc
out
push
inc
xor
push
add
xchg
rorb
push
dec
enter
sub
inc
mov
lret
inc
testl
cmp
inc
fiaddl
push
push
mov
pop
movswl
xor
mov
fs
popa
inc
cmc
int
js
pop
add
mov
jp
fidivs
add
nop
jg
cmp
adc
xor
dec
lret
jnp
imul
push
cmp
pop
roll
adc
js
ljmp
in
popf
mov
test
mov
pop
pop
push
xor
iret
mov
sbb
mov
adc
insb
enter
sub
pop
push
sbbl
js
das
sbbl
jbe
adc
sti
xchg
inc
loope
or
cld
icebp
mov
mov
out
filds
dec
jbe
mov
sbb
ja
clc
lcall
outsl
aad
dec
xchg
xor
fs
xchg
insb
lock
hlt
int
popa
inc
aaa
mov
xchg
mov
or
movsl
lret
repz
xor
fimuls
sub
stos
xchg
mov
rcrb
sarl
pop
dec
ss
dec
push
loop
ror
cwtl
push
and
cltd
pop
lods
adc
cmp
jp,pt
movsl
fsts
daa
mov
sbb
fsubrl
or
cmpsl
push
xor
jne
inc
sub
and
std
aad
xor
sbb
andl
xor
shll
ss
mov
leave
sbb
daa
pushf
cli
mov
sub
pop
mul
aas
pop
popf
sub
test
mov
ljmp
mov
in
cmpsl
and
lcall
mov
je
imul
shll
rol
stos
incw
jle
lds
fisubrl
test
push
loop
lods
add
xchg
mov
xchg
into
out
dec
sbb
xchg
mov
jle
divb
or
jle
cmp
and
pop
adc
add
pop
jae
pop
inc
test
cltd
test
sbb
rcl
nop
loope
add
mov
addr16
xchg
sbb
xor
mov
mov
xor
push
lock
and
cmp
dec
aas
jmp
ss
cltd
dec
addps
xlat
dec
mov
pop
loope
outsb
xchg
shlb
sbb
les
jl
xor
mov
jp
mulb
out
fwait
gs
and
sub
imul
sti
push
sbb
addb
scas
ret
ret
xchg
jl
jmp
inc
dec
mov
addl
movsb
and
movsb
scas
sarl
loope
mov
loop
mov
repnz
push
lea
stos
in
pop
or
in
scas
repnz
mov
xor
sbb
adc
pop
ds
inc
push
fcmove
pminsw
xchg
xor
rclb
imul
sub
sbb
popf
or
iret
ret
rcrl
cmp
out
sti
mov
int3
mov
jg
divl
sub
mov
jno
shr
ja
sti
jl
xchg
sbb
or
push
mov
pop
add
xor
inc
cmp
sbb
hlt
inc
scas
scas
sbb
lods
adc
cmpsb
adc
loop
mov
xchg
mov
add
in
fiaddl
and
sub
shlb
jbe
lea
xor
cmp
push
jae
add
xor
jg
insb
adc
xchg
push
ret
sahf
mov
or
in
movsl
pop
inc
pop
xor
lret
fistpll
sub
mov
aaa
xchg
mull
cwtl
test
jmp
xchg
sbb
xchg
es
or
mov
test
popa
fisttpll
lds
cmp
cmc
fidivrl
or
cwtl
lret
rorb
stc
cmp
and
cli
cli
mov
xchg
lretw
in
push
leave
ljmp
loop
es
adc
jae
repz
hlt
test
mov
xchg
sti
sbb
xor
inc
mov
and
scas
mov
push
mov
scas
cmp
mov
out
mov
mov
mov
lods
adc
lret
mov
sub
pop
std
add
iret
add
daa
lahf
mov
repz
jb
mov
in
imul
jns
inc
xchg
push
mov
loopne
jb
pop
ret
or
stos
mov
aaa
cmp
sub
pop
test
sub
cmp
popa
cld
jle
aad
or
cmpsb
lods
mov
or
scas
sub
lea
jmp
movsl
xchg
or
iret
fwait
pop
lods
sub
push
add
push
inc
dec
push
pop
dec
jg
pop
xchg
mov
imul
xor
sbb
cmp
jecxz
xor
into
sub
fs
dec
push
xchg
lea
imul
lea
outsb
clc
inc
outsb
addl
inc
sbb
fcomi
fisubrl
mov
xchg
dec
mov
xchg
outsb
cmp
jmp
out
fistl
ds
xchg
cmp
mov
loop
and
push
xchg
mov
dec
fnstenv
js
add
mov
iret
fcompl
cmc
and
push
adc
std
bound
and
iret
lds
sti
xchg
pop
test
cmc
hlt
push
lret
sub
sub
xor
out
mov
push
aas
int
lds
inc
mov
stos
mov
sub
add
mov
mov
inc
mov
test
les
jg
jmp
jae
aam
decb
push
mov
xchg
inc
jns
pop
les
int3
lcall
jb
xchg
dec
fistl
sti
aad
mov
loopne
push
lods
xchg
fidivrl
jne
xchg
icebp
repz
test
pop
arpl
xor
adc
aaa
mov
and
pop
cmp
xchg
cltd
in
dec
cmc
cmp
int3
jge
push
out
push
mov
xchg
or
rep
sbb
call
scas
int3
jge
hlt
xor
and
adc
lea
int3
lret
push
mov
xorl
jge
ljmp
pop
jmp
xchg
sbbl
and
push
inc
test
lods
clc
mov
jg
jb
xor
and
xchg
ret
push
or
addr16
pushf
out
sti
and
sbbb
jg
mov
sbb
mov
into
sbb
sbb
push
sbb
sbb
test
lods
lret
mov
fisubl
xor
imul
push
cld
aam
in
or
push
jbe
cli
or
in
and
push
test
fsts
xchg
adc
mov
jmp
adc
sbb
in
mov
into
jg
xchg
push
popf
stos
xor
pushf
insb
and
fs
faddp
jmp
and
js
leave
sub
dec
or
mov
stc
daa
mov
jns
stos
leave
pop
gs
push
popa
cs
cmc
push
pop
push
sub
lock
mov
and
xor
sbb
lret
mov
jne
pop
in
out
outsb
mov
testb
lods
rcrl
xchg
insl
cld
sbb
xorb
or
add
add
in
out
cmpsb
or
hlt
fwait
mov
fucomip
jl
nop
add
xchg
jmp
fstps
out
lahf
popa
sbb
sub
sub
jecxz
xchg
jne
gs
inc
or
sbbl
test
mov
outsl
fcmovu
rol
mov
cltd
inc
scas
xor
or
aad
adc
push
sbb
addl
mov
icebp
andl
mov
xlat
orl
out
xchg
dec
in
sbb
stos
xor
jae
cmp
xor
inc
jmp
dec
sbb
in
inc
push
mov
or
sarl
in
cmp
push
rclb
cmc
cmp
aad
and
fstpl
adc
ss
pop
lds
and
inc
loop
test
ret
adc
aas
ficoml
fwait
mov
scas
stc
xchg
es
mov
or
mov
pop
outsl
popf
fldl
mov
add
add
dec
inc
xor
or
push
jl
xor
mov
std
inc
adc
xchg
fsubl
pop
ret
xchg
xor
cmpsl
xchg
insl
or
adc
hlt
jb
lret
sbb
shll
nop
cmp
jle
idivb
pop
in
jmp
xorb
xchg
inc
jb
sbb
add
add
movsb
fwait
movsb
outsl
inc
adc
out
mov
cmp
xchg
jecxz
stc
cmpsl
inc
pop
cs
das
add
cltd
loop
lea
jg
xor
adc
pop
stos
addb
sub
in
lods
cmc
and
jno
add
leave
xor
stc
dec
imul
jl
inc
popa
push
icebp
cmp
xlat
push
xchg
pop
push
test
ficoms
roll
and
push
movsl
arpl
cmp
out
cld
xchg
dec
push
and
ljmp
pop
outsb
addr16
mov
dec
and
pop
popa
rorb
ljmp
pusha
test
push
xchg
mov
fwait
jb
or
adc
push
mov
and
aaa
pop
adc
mov
mov
int3
loopne
xor
movsb
in
pusha
enter
mov
pushf
dec
ja
mov
xchg
orb
pop
repz
inc
jne
jno
ret
xchg
js
xlat
cmpsb
xchg
adc
int3
dec
call
push
loop
insb
adc
and
les
outsl
lds
push
aaa
rorl
cmp
imul
test
pop
xchg
lods
lock
jno
cld
cli
sbb
insl
dec
out
call
xor
sub
pop
aaa
inc
pop
in
cmpsl
stos
int
mov
sbb
daa
negb
sbb
les
xchg
flds
lret
loop
inc
call
je
pop
dec
xchg
pop
vextracti64x2
lods
pop
cmp
inc
jae
cmc
add
test
mov
jmp
mov
rol
in
cmp
rolb
and
pushf
ret
scas
das
sahf
sub
mov
fnstenv
std
imul
rsqrtps
or
cli
pop
mov
cs
outsb
xor
cmp
and
in
js
xchg
out
in
stos
pop
ds
lock
mov
decl
data16
and
dec
mov
out
test
repz
mov
mov
je
sub
shr
cmpsb
ljmp
push
inc
pop
iret
stos
mov
xchg
hlt
xor
push
inc
ret
adc
push
add
mov
xor
into
lock
icebp
cmc
inc
adc
clc
leave
loopne
sub
movsb
sub
lods
dec
je
jmp
push
fcomi
pop
cmp
mov
jne
int
outsl
push
adc
in
cli
or
outsb
ficoms
pop
ret
sbb
fdiv
daa
pop
sbb
mov
push
lret
jnp
cmp
cmc
dec
cli
mov
jg,pt
xlat
mov
xchg
enter
mov
sahf
leave
cli
ret
ljmp
loope
sub
movsl
cld
in
pop
jl
mov
jle
inc
jns
pop
gs
mov
aam
push
inc
add
lods
xor
testl
lea
sub
scas
mov
aad
jg,pn
es
mov
adc
pop
cli
inc
pop
bound
lea
into
cmp
fmuls
scas
fldenv
xchg
inc
adc
aaa
jnp
jg
push
xor
ds
add
int
lods
stos
adc
jp
sub
pop
adc
mov
jp
mov
lea
pop
jbe
pop
nop
adc
jno
or
in
mov
dec
mov
add
test
xchg
data16
sub
mov
mov
sub
and
xorb
pop
popa
int3
lods
ret
push
and
stos
and
daa
or
and
inc
fdivrs
notb
scas
bnd
js
pushf
sub
mov
xor
testl
add
pop
stos
das
cmp
and
scas
fdivs
lock
push
aas
ret
jg
mov
pop
sbb
xchg
mov
popa
iret
sub
sbb
add
dec
xchg
mov
xor
aam
inc
in
sub
cmpsb
sbb
jne
or
loope
add
sub
cmp
pushf
mov
add
pop
and
dec
inc
push
xchg
push
sub
inc
ret
xchg
cmp
xor
and
lods
dec
xor
lret
mov
sbb
in
insb
pop
dec
push
cwtl
jmp
sbbl
and
mov
push
sahf
lret
xor
cmp
jp
xchg
ja
xchg
jbe
out
cmpb
mov
inc
cmp
ret
mov
imul
sbb
mov
xlat
cmp
fdivrs
and
lcall
scas
stos
push
je
sahf
lret
mov
mov
data16
pop
cmc
adc
in
lods
sbb
push
sbb
lods
cmp
sbb
jnp
and
movl
push
js
and
mov
xchg
jle
dec
loop
imul
mov
test
mov
add
jl,pt
mov
push
push
icebp
push
inc
jmp
lock
out
xchg
ss
arpl
cmp
xchg
or
xchg
inc
js
pop
fildll
and
lret
sbb
nop
inc
leave
scas
out
mov
pop
and
mov
sbb
aad
cmp
mov
mov
out
push
cmp
ja
push
shl
or
dec
es
mov
in
addr16
outsb
ret
pop
add
push
cmp
lods
inc
int
loopne
mov
es
mull
arpl
rorb
adc
add
test
or
push
neg
in
in
movsb
enter
out
or
mov
push
scas
xchg
mov
xor
fsubrs
stc
mov
mov
je
out
cmpsb
jge
fwait
sub
jo
pop
add
xor
jne
dec
repz
lcall
pop
test
mov
push
in
sbb
dec
int
dec
ret
mov
add
inc
fdiv
xchg
cli
xchg
ret
scas
push
and
push
int3
loopne
mov
or
aam
stos
out
cli
mulb
sub
fldcw
jle
fbstp
sahf
ret
pop
sub
pop
mov
daa
pop
pop
sbb
dec
inc
pop
cwtl
push
je
pop
sbb
mov
and
or
dec
or
adc
xchg
das
push
ret
lea
dec
gs
xchg
cmp
aaa
movsl
fildll
mov
push
mov
cmp
lods
fwait
roll
xchg
sub
jp
inc
add
scas
pop
push
aaa
jecxz
loopne
imull
ss
jmp
lock
pop
loop
or
mov
cmp
test
sub
pop
int
fidivrs
adc
mov
popa
clc
lods
jmp
and
and
dec
fnstsw
sub
test
sbb
mov
dec
shlb
loope
push
pop
iret
loopne
mov
add
cmp
fwait
push
popf
and
rcrl
mov
jle
sub
js
nop
cmp
cmp
jne
aad
ss
push
pushf
mov
mov
pop
mov
in
mov
push
or
dec
push
push
mov
ja
dec
out
cwtl
jne
jo
push
ret
sahf
lcall
pop
shlb
icebp
add
outsb
sarb
mov
add
je
stos
and
call
jmp
sbb
add
inc
ljmp
or
dec
pop
loop
add
shll
scas
xor
int
sub
jg
pop
pop
and
add
test
gs
cs
jmp
add
into
stos
std
mov
mov
mov
mov
push
pop
jb
mov
in
cmp
nop
push
jns
imul
fnstenv
mov
outsl
adc
dec
mov
loope
fwait
push
stos
cs
adc
inc
mov
mov
lcall
cmp
sarb
xchg
cmp
fsts
out
mov
loope
xchg
test
xor
xor
movsb
movsl
adc
clc
outsb
lods
out
call
clc
jmp
and
into
fdivr
cmp
arpl
sbb
push
clc
rol
cli
cmp
jl
inc
ds
jb
xor
pop
or
jns
std
jne
xchg
push
mov
mov
je
pop
cmp
cmp
sbb
in
aas
and
push
sub
stos
lods
ds
cmp
mov
xchg
inc
mov
aam
clc
roll
cld
xor
jbe
xchg
lcall
mov
mov
aaa
push
shr
or
dec
or
fists
lds
push
inc
repnz
dec
in
and
and
xor
nop
sahf
aam
out
hlt
inc
cmp
inc
outsb
mov
inc
or
lock
imul
minps
outsl
push
cmp
outsb
xchg
adc
add
cld
mov
or
push
addr16
dec
push
push
sub
mov
pop
outsb
out
lds
int3
in
xor
lcall
das
xor
push
mov
add
xchg
mov
popa
inc
aaa
xchg
popa
pop
cwtl
pop
inc
test
push
scas
das
icebp
pop
sbb
sahf
push
test
xor
cmc
cmp
in
xchg
mov
mov
sti
xchg
int3
sub
jb
push
pop
std
cmp
leave
ret
das
les
cmp
pushf
sarl
test
pop
push
mov
mov
out
ja
cmp
jmp
push
pop
stc
adc
pop
sti
ret
popf
gs
and
popf
das
imull
mov
jns
stc
into
scas
xchg
or
repnz
dec
cmp
dec
jg
mul
ja
cmp
pop
fs
pop
test
rclb
inc
mulb
xor
mov
cmp
sbb
enter
loopne
leave
bound
loopne
shll
testl
std
or
ret
cmpsl
push
xchg
lods
clc
push
jle
mov
daa
mov
mov
pop
sub
dec
ret
inc
or
shlb
mov
out
cld
out
pop
or
addr16
popa
sub
das
inc
push
js
js
cltd
ds
and
inc
mov
mov
cmp
icebp
dec
or
mov
and
lahf
sbb
js
mov
rsqrtps
xor
les
scas
rcl
imul
repz
movsl
and
add
jmp
test
loop
jp
out
pop
jbe
jge
dec
sbb
fistps
in
and
add
dec
incb
pop
mov
push
xchg
repnz
sub
push
dec
inc
dec
sub
mov
push
and
sbb
dec
jnp
xchg
push
insl
sbb
inc
xor
stc
inc
jg
sti
inc
cs
dec
mov
scas
mov
dec
fwait
mov
adc
sub
jno
dec
xchg
stos
sub
stos
mov
xchg
sub
sub
cmp
add
insb
pop
xlat
movsl
test
out
pop
mov
or
dec
shrl
jne
push
mov
out
xchg
lock
push
and
icebp
fstpt
or
add
sub
in
lcall
out
shll
cld
dec
push
mov
jp
inc
dec
push
sbbb
negb
push
int3
and
aad
addr16
mov
unpcklps
sub
push
jg
mov
or
in
rol
push
xchg
xchg
gs
imul
out
ja
or
fmulp
mov
pcmpgtb
inc
daa
pop
flds
popa
call
xchg
jmp
xchg
mov
cmp
stos
into
ret
dec
push
pop
stc
leave
arpl
or
aad
iret
dec
or
test
mov
pop
in
fucom
mov
xchg
or
mov
fidivrs
mov
dec
subb
lahf
lds
rol
jne
cmp
daa
iret
hlt
push
cmp
sbb
xchg
popa
pop
adc
jmp
xor
sarl
stos
dec
imul
push
xor
push
mov
push
and
pop
mov
imul
loop
or
das
xchg
es
dec
sti
push
fnstsw
sub
inc
pop
jb
idivl
clc
rorl
int3
sbb
fsubl
in
and
cltd
int3
mov
rorb
add
push
and
in
mov
jmp
pusha
pop
adc
or
push
lret
or
or
jns
mov
mov
add
and
jo
mov
rcr
and
loope
push
pop
data16
aad
push
jbe
movaps
imul
aaa
sub
jmp
pop
push
test
cmp
or
sbb
test
push
daa
add
and
lahf
inc
nop
jns
sbb
js
dec
sbb
cli
push
out
pop
sbb
xlat
push
cmpsl
ljmp
mov
stc
cmp
push
mov
pusha
push
sahf
cltd
jmp
out
dec
stos
mov
popl
outsb
jle
mov
mov
xchg
out
push
lahf
mov
fs
sarb
int
jp
aam
jne
cmpsl
xchg
iret
aad
outsb
dec
fnstenv
sub
loop
xor
or
xor
mov
cmp
test
pop
fwait
in
dec
cmp
popl
or
mov
cwtl
mov
movsl
enter
push
sbb
jmp
aam
int
sbb
dec
lea
lahf
int
cltd
fbstp
fnstcw
push
mov
jge
fmull
ds
ret
adcl
xchg
cld
loope
hlt
scas
jb
mov
hlt
or
cmp
add
test
stos
xor
dec
push
movsl
test
xchg
test
pop
outsb
js
ja
mov
sti
inc
out
push
sub
mov
je
mov
loope
cwtl
loopne
pop
sti
pop
dec
lods
pop
add
adc
stos
xor
add
dec
test
ret
push
popa
xor
xchg
faddl
dec
jns
mov
xor
hlt
es
repnz
cmc
stos
je
daa
adc
pop
and
movsl
or
fdivr
cld
mov
jecxz
sbb
mov
jne
jno
mov
lods
iret
mov
xchg
lret
cmp
in
loopne
addr16
jp
and
stc
mov
fs
cltd
pop
call
dec
hlt
sbb
sub
xchg
ljmp
xor
push
jb
lahf
lret
pop
push
out
jmp
pop
pop
and
sahf
pop
xor
pop
and
fs
cli
push
pop
call
frndint
mov
jp
hlt
js
mov
sahf
incl
push
arpl
cmpsl
jnp
cs
popa
or
je
fwait
xchg
jg
or
subb
iret
rorb
jecxz
testl
lret
aaa
add
push
and
imul
clc
lds
idivl
in
lock
call
mov
outsl
outsb
popf
pop
addr16
or
iret
pusha
inc
js
rcll
js
push
xchg
iret
cmp
or
xor
adc
test
lods
dec
sbb
aaa
dec
daa
inc
lahf
loope
aas
cmp
fnstcw
in
cmpsb
xchg
inc
push
ret
add
push
adc
orb
push
and
xor
imul
adc
loopne
xor
psubusw
cmp
in
jmp
ljmp
scas
insb
or
xor
fistpll
out
mov
dec
cld
mov
mov
test
ds
or
ret
adc
pop
in
cmpsb
not
ficoml
filds
out
pop
pop
mov
or
std
dec
movsl
xchg
mov
int3
int
out
fwait
cmc
rol
test
cmc
mov
lock
into
lods
pop
push
mov
daa
call
loopne
push
addr16
push
hlt
push
jns
inc
xor
jl
mov
dec
push
sbb
and
mov
adc
jbe
std
adc
xor
add
sbbl
adc
xor
sahf
sbb
cmp
mov
adc
dec
mov
loop
or
sti
mov
lret
mov
mov
push
in
shl
out
insb
mov
cmpsb
add
xor
mov
and
sub
pushf
dec
sbb
lret
mov
cmp
insb
std
cmpsb
mov
stc
das
inc
loop
or
testb
fldl
sub
jp
push
icebp
outsb
insb
call
leave
mov
neg
loopne
ss
pop
push
pop
outsl
mov
xor
push
pop
movsl
jne
jmp
mov
in
mov
clc
jle
lock
adc
movsb
adc
in
js
imul
jg
cmp
push
jmp
loop
pop
addr16
push
cmp
ret
xchg
cmpsb
movsl
pop
scas
jl
jl
cmc
lods
mov
cmp
jb
inc
int
scas
inc
leave
rcr
xchg
sbb
inc
pop
test
xchg
lahf
pop
arpl
jmp
mov
js
push
sti
add
xchg
cmpsb
jle
insb
dec
test
push
popf
loop
mov
shll
jle
cli
negl
sbb
jle
cmpsl
mov
in
sub
or
xchg
lods
sub
xchg
ss
inc
out
mov
and
leave
xchg
mov
fwait
push
dec
cltd
inc
adc
addb
aad
add
sbb
mov
add
jno
sub
inc
mov
pop
iret
cmp
test
orb
gs
pop
outsb
jnp
jne
push
out
xor
jg
pop
sbb
cmp
fbstp
sbb
xlat
cmpsb
pop
mov
movsl
movsb
cs
inc
inc
xchg
sub
scas
inc
and
addb
inc
mov
aaa
sub
test
add
xor
fdivrl
xchg
sub
or
test
mov
shlb
lock
push
mov
mov
cmp
pop
lods
aad
jae
movsw
or
mov
dec
xlat
lret
mov
xor
std
cmpsb
sub
sub
push
mov
push
mov
insb
movsl
insb
popf
mov
inc
push
jbe
ret
mov
jb
adc
inc
and
and
mov
fsubs
cwtl
sub
adc
in
push
cltd
addb
icebp
xchg
jns
std
jecxz
enter
insl
pushf
jmp
jns
sub
aas
and
xchg
fisttps
data16
repnz
pop
push
jmp
fwait
mov
aaa
inc
out
daa
mov
addr16
popa
push
adc
jo
mov
inc
mov
adc
mov
xchg
pop
xchg
mov
je
test
mov
xchg
fwait
test
data16
in
scas
or
adc
mov
sub
jne
aam
ret
xchg
bound
mov
jmp
and
xor
pop
xchg
inc
jecxz
mov
cmp
jp
js
dec
adc
mov
mov
and
pop
fcmovu
in
dec
outsl
ret
arpl
or
push
sbb
imul
mov
popa
mov
aad
cmpsl
xor
shl
stc
mov
mov
cwtl
ret
xor
or
loope
push
ljmp
sub
or
or
dec
rcrb
cmp
aas
add
std
sbb
dec
jl
pusha
sti
cltd
pop
andl
je
or
pusha
ljmp
and
aad
test
loop
mov
les
mov
xchg
sub
pop
dec
sub
adc
pop
aaa
je
mov
cmp
or
mov
lahf
fdivrp
and
shll
jecxz
addr16
lret
in
outsl
inc
dec
jb
jbe
pusha
iret
or
adc
push
cmp
lcall
test
arpl
mov
fwait
and
xchg
and
mov
lcall
test
sbb
sub
dec
mov
neg
jg
js
or
int3
mov
xor
sub
push
sub
test
in
xchg
insb
stos
shll
xor
adc
xor
xor
cli
fidivl
sbb
xchg
cld
imul
inc
vmovd
lea
aaa
add
sub
rorb
sbbl
cmc
inc
js
xor
lret
arpl
xchg
jl
cmp
cltd
test
sbb
bound
fadd
push
push
sub
and
loop
mov
mov
loop
fdivl
call
daa
inc
and
push
enter
cmp
sub
add
flds
out
cmp
cmp
xor
sub
push
ret
aad
enter
cmp
pop
imul
xchg
cmp
sbb
sbb
js
sbb
xchg
cltd
sbb
add
rolb
mov
pop
push
sbb
out
xor
push
cmp
cli
popa
in
xchg
loopne
hlt
subl
mov
sbb
dec
xchg
mov
pushf
scas
clc
or
mov
xchg
jne
mov
inc
xchg
mov
pusha
lods
into
inc
mov
sub
adc
stos
pop
loope
mov
adc
jmp
mov
cmc
cmpsl
jecxz
cld
jnp
lcall
ljmp
sbb
loop
jg
stos
imul
mov
repnz
ficoml
ret
sbb
jle
test
mov
popa
mov
xor
jne
cmpsb
or
lret
sbb
jp
shlb
dec
mov
lahf
test
add
fadds
sbb
adc
pop
inc
jle
mulb
out
xchg
pop
cwtl
negb
sub
sub
data16
pushf
pushf
mov
cwtl
jo
ljmp
add
jg
push
lahf
into
push
fldcw
jl
fsubrl
lea
into
orl
insl
push
fadd
sub
xlat
sbb
enter
cli
xorb
sbb
sbb
jae
push
xchg
imul
xor
stos
iret
jl
out
pop
stc
loop
nop
inc
or
sub
mov
iret
fcomps
sbb
or
jle
push
outsb
push
or
fisttpll
addb
mov
push
out
cmp
fisttpll
int3
pop
fimuls
outsb
mov
enter
in
mov
or
lds
jbe
lds
sbb
adc
cmp
jle
mov
push
pop
shl
xor
cmp
sbb
xor
daa
jno
data16
sbb
xchg
clc
repnz
xorb
lret
cwtl
xchg
rol
out
add
lret
ds
cmp
xchg
push
adc
aam
fstps
insb
mov
pop
outsl
adc
mov
std
inc
lcall
popa
push
and
sbb
fmuls
and
jecxz
mov
jmp
test
jns
cmp
ss
lea
jg
aam
or
imul
jge
clc
arpl
jp
sub
rcr
jae
jnp
ds
in
adc
xchg
es
rclb
xor
scas
mulb
xchg
idivl
mov
dec
cmp
mov
sbb
sub
xchg
add
rolb
lea
or
out
push
popa
push
cs
outsl
push
xor
mov
jo
pop
call
sbb
mov
xchg
rorb
dec
jecxz
inc
daa
shlb
and
daa
mov
mov
xchg
ret
cld
fcmovb
mov
cmpsb
jo
mov
cwtl
inc
aam
xchg
sbb
cmp
fsubr
jae
mov
xchg
lcall
sti
jo
into
mov
pusha
fsubp
push
fsubs
or
jmp
add
in
cs
push
call
lret
push
mov
pop
repz
sub
mov
cmp
rolb
mov
popa
gs
out
ret
dec
or
fbld
dec
inc
shrb
stc
inc
mov
cmovno
fdiv
push
data16
inc
stos
push
mov
sbb
aad
and
icebp
loope
jecxz
stc
dec
inc
xchg
push
adc
unpckhps
mov
cwtl
dec
cmpsl
jb
outsb
ljmp
loope
cmp
xor
pop
mov
inc
jae
or
clc
iret
repz
sbb
aas
insl
mov
addr16
add
into
pop
xchg
pop
inc
imul
scas
pop
ja
subl
mov
mov
int
mov
mov
cld
add
pop
xchg
push
mov
call
popf
jg
adc
mov
lret
cs
mov
xor
insl
pop
scas
sub
popa
mov
ficomps
rcrl
data16
or
scas
mov
xor
data16
mov
scas
lods
jns
cmpsb
clc
mov
sahf
int3
mov
pop
js
and
js
or
ret
xchg
jp
sar
ja
jg
mov
mov
mov
xor
test
jo
ret
mov
popa
mov
aam
clc
int
iret
and
mov
negb
stc
or
je
cs
push
cmp
imul
pusha
sub
pop
push
imul
popf
or
pop
mov
dec
push
out
and
imul
xor
mov
int
adc
mov
mov
into
hlt
mov
dec
pop
cmp
dec
sbb
and
inc
mov
xor
fidivrl
cwtl
mov
outsb
adc
popf
in
and
add
push
jl
fs
addl
mov
addb
and
push
sub
sub
add
negb
adc
pushf
in
adc
jbe
rorl
stos
xchg
scas
mov
mov
lahf
sub
push
and
mov
mov
push
xchg
mov
inc
jp
xchg
mov
scas
pop
or
xchg
subl
lods
lea
sub
or
inc
leave
shll
int3
push
and
pushf
xor
shl
push
push
xor
insb
add
cwtl
repnz
and
cmp
out
xorl
pusha
sbb
xchg
test
scas
sub
cs
int3
push
rcrb
mov
xlat
jne
loope
out
repz
mov
push
xor
mov
sub
ss
mov
incl
outsl
mov
enter
les
test
jge
pushf
iret
pop
cmpsl
adc
dec
pop
es
push
push
pop
sbb
xor
aaa
adc
adc
xchg
scas
rcr
loope
addr16
rclb
cmp
push
cmpsb
lods
inc
movsb
out
dec
scas
cmpsb
sarl
cmp
test
push
sub
dec
mov
dec
imul
lods
fs
sbb
dec
cwtl
stc
imul
shrb
adc
shrl
cmp
and
out
sbb
pop
cld
sub
sti
inc
rclb
div
add
sub
push
fucomp
sti
outsl
cmp
outsb
sub
lahf
pop
lods
daa
bound
cwtl
jae
andl
sbb
and
outsb
sbb
mov
xorl
lods
jecxz
sbbl
sub
inc
sub
repz
je
mov
sarl
scas
dec
fwait
or
inc
push
or
cmp
notb
sub
outsb
scas
hlt
inc
adc
js
sbb
dec
jl
mov
or
push
mov
xor
jae
sub
xlat
repnz
xchg
jmp
xor
insb
push
shll
or
jl
sub
popf
xor
and
jnp
mov
in
mov
mov
mov
and
xor
sbb
rclb
sbb
add
fidivrs
insb
lcall
mov
int
adc
xlat
mov
repnz
shrb
and
mov
adc
popf
clc
loopne
cs
lret
enter
sub
inc
xor
push
and
add
fdivl
jmp
loop
pushf
push
add
xchg
mov
mov
cmp
jae
int3
in
cmpsb
js
cs
inc
sub
jle
loop
in
ret
in
testb
jp
jl
adc
mov
mov
popf
and
xorb
mov
into
inc
nop
adc
push
jnp
divb
dec
inc
mov
xor
divb
jp
bound
scas
in
testb
bound
popf
push
mov
add
popf
outsb
xchg
or
jg
dec
jg
push
mov
sbb
mov
or
frstor
inc
sbb
inc
push
push
leave
ljmp
pop
pop
subb
insb
cmp
cmp
aam
rcl
test
sahf
fisubl
out
outsb
mov
idivb
cmp
iret
mov
imul
mov
xor
xor
or
insl
or
adc
jmp
fwait
movsb
or
xchg
leave
fsubr
movsl
pop
add
add
xchg
jnp
or
dec
inc
jecxz
popf
or
cmp
and
or
inc
imul
sbb
notb
int
mov
call
outsl
popf
out
jne
mov
daa
icebp
inc
enter
idivb
dec
mov
xor
push
push
cmp
adc
add
and
dec
sahf
mov
orl
jns
aaa
sti
mov
cltd
cmpsb
in
outsb
jnp
dec
sarb
repnz
jns
gs
lahf
cld
jecxz
mov
scas
or
adc
push
add
xchg
loop
mov
paddd
inc
test
int
xor
cld
hlt
inc
jbe
movsl
add
mov
push
xchg
lea
addr16
inc
lcall
pop
cmp
aam
sub
pop
aad
or
lds
lcall
cmp
out
push
jno
lea
or
adc
lret
clc
push
pop
mov
or
push
mov
aad
stos
gs
ret
das
int3
ja
dec
xchg
inc
mov
fisubrl
dec
push
cmp
mov
dec
mov
pop
adc
cmp
lret
xor
gs
out
scas
jbe
repnz
ja
push
sub
pop
popf
add
out
xor
push
pop
add
add
jb
into
std
cmp
pop
popf
sub
jno
stos
cmc
mov
mov
aam
xor
adc
pop
sti
mov
and
xchg
mov
shrl
adc
jle
push
daa
add
fadds
je
and
divb
stc
jge
jo
mov
ljmp
pop
testl
int3
sub
in
ret
xlat
dec
aad
xor
sbb
cmp
mov
and
js
cmpsb
fwait
jo
mov
ss
rorb
mov
push
push
outsb
bound
mov
hlt
fwait
sahf
mov
and
je
mov
ret
test
insb
add
mov
test
push
mov
push
mov
and
or
insl
ds
adc
sbb
fdiv
fwait
and
lock
mov
or
subb
mov
inc
rdmsr
mov
pop
add
mov
lret
mov
sbb
aas
cmpsb
sbb
sahf
aaa
insl
xlat
sub
loop
dec
mov
iret
outsl
stos
bound
decb
lcall
jo
in
sbb
cmp
mov
iret
xchg
jno
sbb
lea
jp
sbb
mov
mov
lea
cmc
cmpl
jnp
loop
mov
sub
mov
lock
xchg
and
inc
stos
xor
push
sub
push
push
lea
sub
ljmp
cltd
or
mov
jns
mov
mov
xchg
dec
in
stc
sbb
das
mov
rorl
fsts
mov
mov
imulb
adc
push
jecxz
and
pushw
arpl
aam
inc
imul
enter
jmp
ja
push
mov
cltd
ret
insl
enter
adc
sbbb
stos
jb
imul
adcl
mov
xor
push
dec
fisubrs
fiaddl
jno
cld
mov
xor
mov
inc
xchg
imul
sbb
add
inc
test
jl
test
aas
sbb
call
mov
pop
loopne
insl
sub
push
mov
sahf
lods
inc
sub
sahf
adc
lret
pop
inc
das
lcall
cmp
dec
fidivrl
mov
nop
xchg
cmpsl
jns
hlt
jne
push
pop
jno
inc
mov
gs
pop
pop
adcl
repnz
lods
mov
data16
ret
lahf
je
je
sbb
negb
add
jnp
sub
decb
sub
mov
jl
push
and
shr
lret
call
mov
sbb
in
aas
mov
jo
test
in
pop
sar
mov
lea
outsb
push
repnz
mov
jnp
in
subb
sbb
mov
xor
pop
jbe
es
xchg
pushf
aam
mov
mov
sbb
mov
and
xchg
push
repz
jno
mov
cmp
insl
mov
sbb
sarb
sbb
push
jp
popf
mov
push
xchg
and
and
jmp
and
je
mov
jge
xchg
add
je
daa
mov
addr16
stos
pop
enter
mov
dec
in
rcrb
dec
jle
aad
mov
hlt
and
nop
jl
xchg
mov
es
inc
and
and
in
dec
jb
pop
dec
data16
mov
sub
jecxz
mov
daa
add
add
mov
data16
das
mov
lock
mov
jmp
inc
hlt
pop
dec
xchg
add
gs
sub
push
int3
mov
or
hlt
sysenter
daa
or
adc
jge
popa
xor
pusha
aaa
insl
mov
cmp
out
xchg
in
scas
nop
xchg
xor
xor
test
aaa
imul
lods
jle
cmp
ds
jae
xchg
cmp
cli
das
inc
mov
lret
test
push
bswap
sbb
es
nop
lret
push
xchg
dec
sub
dec
cmp
and
repnz
mov
out
mov
icebp
inc
xor
dec
inc
loop
hlt
sar
shlb
push
in
fwait
aad
stos
ja
sahf
push
imul
jle
or
movsb
dec
xor
pop
mov
jp
and
xlat
fnstcw
das
inc
inc
ljmp
cmp
icebp
xchg
arpl
aad
fistpl
dec
test
call
sbb
jo
xchg
xchg
adcb
mov
push
dec
ljmp
lods
dec
jne
sbb
daa
in
movsl
and
and
inc
adc
movsl
loopne
aad
xor
int
movsb
mov
lret
scas
xchg
xor
inc
mov
push
repnz
cmp
jae
cld
iret
sub
jmp
jne
stos
stc
xchg
out
rol
fs
jecxz
mov
mov
lods
fisubs
das
and
xor
adc
push
push
and
and
into
lods
aas
lock
mov
pushf
je
in
mov
cmpsl
pop
mov
mov
dec
or
and
ljmp
mov
mov
int3
cmp
adc
inc
or
pop
xchg
pop
cmpsb
adc
jno
cmp
jne
fidivl
mov
and
cmp
out
jne
into
or
pop
fsincos
repz
loopne
jle
xchg
cwtl
pop
loopne
mov
sbb
push
cld
addr16
stos
add
js
mov
popa
cld
push
xor
adc
dec
or
pushf
in
mov
cmp
fdivrs
mov
stos
mov
stc
int
lock
cli
fisubl
test
cmp
sbb
sbb
mov
loop
mov
out
out
xor
ja
pop
dec
test
stos
lahf
dec
lea
push
add
push
data16
test
out
into
adc
and
and
add
xchg
scas
dec
call
add
or
or
add
mov
xor
and
mov
call
scas
xchg
dec
and
jl
arpl
add
xchg
in
xor
push
cmpsb
dec
xchg
gs
filds
sbb
cmp
inc
shll
lods
mov
outsl
pop
fcom
jae
fs
arpl
cmc
loopne
jns
loope
sbb
pop
jmp
int
adc
xchg
punpcklwd
add
inc
cltd
cwtl
cli
sub
mov
cs
xchg
adc
aaa
in
push
lret
dec
add
xchg
push
mov
lea
and
inc
or
int
hlt
outsl
xor
or
rorl
lock
lods
addr16
push
repz
sahf
jae
enter
mov
mov
pop
xlat
jp
insb
orb
negl
mov
cltd
sub
lcall
push
in
cmpl
adc
push
cli
mov
repz
sbb
add
jbe
cmc
push
xchg
mov
or
lock
jbe
adc
cmp
add
cmp
mov
mov
cmpb
or
movsb
jbe
push
and
dec
dec
addr16
int
call
adc
and
push
inc
je
cmp
xor
in
imul
pop
adc
add
add
fsubl
aam
lret
je
addr16
inc
sbb
jmp
sub
inc
ja
and
out
dec
sahf
jmp
ss
mov
pop
sbb
sbb
mov
dec
cmp
mov
adc
cmpsb
lods
push
loop,pt
push
rcl
push
arpl
cmpsb
or
jae
pop
sbb
lret
mov
push
aaa
sahf
lahf
stos
xchg
fs
mov
xchg
or
pop
divl
mov
lcall
stos
sahf
xor
and
xor
leave
and
or
mov
push
es
pop
das
pop
cmp
nop
call
or
lret
sbb
cmp
enter
add
repnz
arpl
nop
sub
add
test
mov
adc
jb
sahf
test
jno
pop
in
mov
testb
popa
lret
cwtl
popf
popa
add
jp
insb
pop
and
lock
mov
sub
mov
dec
xor
push
mov
testb
fdivs
clc
xor
pop
dec
stos
fiaddl
add
aaa
inc
jb
sub
dec
pop
push
mov
sub
cmc
orb
mov
push
insb
outsb
mov
or
aam
mov
or
cmp
aas
or
gs
dec
xchg
xchg
pop
pop
jo
jmp
fs
ret
fwait
mov
push
cmp
out
inc
jnp
push
push
lock
test
or
jl
jecxz
and
test
jbe
fisttpl
imul
jp
mov
insb
imul
lcall
xor
push
ja
sti
pushf
fistps
xchg
inc
stos
popf
xchg
aam
pop
jno
stc
pushf
lods
mov
cmpsl
cmp
rcl
pop
nop
mov
js
xorb
stc
adc
inc
stos
sbb
jno
arpl
in
dec
xchg
jle
cmp
sub
dec
dec
mov
dec
and
fwait
lret
xchg
js
dec
sbb
push
out
sahf
xchg
mov
sub
je
pop
out
xchg
leave
outsb
fs
outsl
push
mov
pop
sti
cmp
cmc
and
hlt
fildl
jae
xchg
adc
mov
sahf
fidivs
leave
dec
cld
fs
jmp
jne
push
adc
mov
jg
popa
xlat
pop
icebp
daa
insb
bound
xchg
add
mov
ljmp
out
jecxz
lods
imul
push
xchg
shll
fistps
xor
mov
push
je,pt
xor
add
pop
add
sub
repnz
maskmovq
imull
mov
hlt
sub
prefetch
and
jl
jecxz
test
jno
cmpl
push
sub
imul
fs
daa
jns
test
leave
std
dec
jbe
in
imul
push
ljmp
mov
mov
jbe
int3
icebp
jns
jns
mov
jno
subl
adc
aad
push
call
push
pop
inc
in
jae
rcr
xor
cmpb
pop
push
into
movsl
addl
inc
sti
lds
aas
aaa
ret
sti
loopne
mov
ss
mov
dec
lret
jns
gs
mov
or
jg
cmpsl
icebp
pushf
in
lahf
insl
out
push
sub
adc
into
xor
mov
jo
pop
repz
push
push
and
pop
mov
ss
data16
inc
es
sbb
test
pusha
rol
mov
xchg
sub
xchg
mov
and
push
call
imul
movsl
std
pop
or
mov
pop
into
push
adc
inc
fldcw
orl
sbb
in
mov
dec
mov
and
pop
fcoms
orb
fwait
xchg
add
ret
js
mov
adc
leave
push
and
inc
add
xchg
shll
imul
inc
push
pop
xor
sbbl
lret
adc
ret
in
adc
xchg
adc
shrb
jmp
rorl
dec
rcll
out
das
es
repnz
adc
mov
mov
inc
xchg
xchg
lcall
mov
test
je
shlb
and
pop
ret
sbb
aas
rcr
mov
xchg
aaa
lcall
jmp
in
xchg
cmc
xchg
dec
out
aad
jp
leave
fcompl
cli
icebp
cmpsb
and
int3
wrmsr
fninit
popa
mov
insl
xor
mul
rorl
loope
fldl
pop
add
xor
mov
je
andl
mov
rcr
mov
dec
pop
xor
lcall
pop
dec
daa
jle
dec
out
dec
sbb
jcxz
cmp
aad
int
adc
mov
out
mov
dec
inc
inc
test
test
fimull
roll
lcall
push
add
stos
lahf
push
jne,pn
insb
jl
xor
cmp
test
jmp
jg
imul
mov
xchg
repnz
lcall
sub
add
shl
sbb
in
jo
lcall
push
outsl
jmp
mov
loop
sub
cmc
lea
xor
mov
mov
mov
lea
dec
cmp
insl
mov
les
adcl
jmp
xchg
orb
repz
fstps
and
cld
into
mov
cmc
int3
inc
xchg
mov
fwait
sub
and
cmp
pop
mov
mov
loopne
add
lcall
lods
mov
cwtl
push
sbb
mov
cli
sbb
and
not
push
shll
pop
fs
aaa
imul
lods
dec
aam
out
std
div
shlb
ret
push
push
cmpsb
mov
jle
jecxz
das
pop
int3
xchg
into
cmp
pop
rcrl
inc
inc
sub
xor
gs
xchg
xor
sbb
and
ret
and
shl
jno
js
addr16
adc
out
mov
dec
mov
mov
ljmp
sub
or
sarb
mov
mov
jno
jno
mov
pop
cmp
ficompl
cltd
loope
out
outsb
xchg
dec
jnp
cwtl
imul
xor
xchg
test
faddl
mov
inc
cld
mov
inc
inc
cmp
out
adc
mov
mov
es
dec
or
pop
cmpsb
cmpsb
sbb
pushf
cltd
ret
push
dec
test
aad
outsl
repnz
hlt
push
mov
mov
cwtl
cli
mov
sub
cmpsl
mov
std
mov
pop
cmc
call
sub
fs
int3
push
push
push
fistl
jb
pop
jmp
pop
push
mov
jle
daa
jge
imul
jns
and
sbb
cwtl
mov
ret
cmpps
cmp
stos
mov
das
out
addr16
popa
pop
cs
mov
and
sti
shrl
stc
fbld
iret
or
aam
mov
mov
cs
add
jbe
inc
adc
pop
leave
mov
inc
incb
movl
scas
pop
hlt
inc
push
int
push
lods
out
pop
clc
add
cmp
mov
xchg
in
mov
imul
jge
cwtl
dec
popa
dec
cmc
aas
sbb
das
pop
rorb
ret
loop
lcall
popa
add
mov
jle
insb
in
jns
fwait
test
dec
daa
jae
mov
jns
mov
jmp
clc
clc
jg
aas
ja
mov
test
fsubrs
mov
sbb
mov
test
mov
xchg
push
test
push
mov
xor
push
push
jle
stos
test
and
inc
fadds
gs
xor
test
pusha
add
push
int
pop
cwtl
daa
and
jno
fwait
jecxz
xor
pusha
add
mov
das
add
in
jae
mov
into
ljmp
into
xor
and
fwait
or
xlat
xchg
loope
cmp
pop
push
ficompl
pusha
dec
dec
mov
rcll
sub
cmp
pushf
jle
xor
cltd
pop
lahf
sbb
cwtl
divb
scas
shrb
test
ret
jl
imul
push
cmp
movsl
mov
mov
dec
incl
sub
pushf
ja
dec
push
mull
lods
out
addb
out
stos
ljmp
imul
mov
pop
and
xor
ja
mov
pop
test
sahf
shrl
push
pop
andb
or
lahf
cmc
aas
pop
mov
or
repnz
mov
mov
mov
js
out
inc
in
jno
add
inc
inc
mov
push
ja
pop
push
and
ds
jns
popa
and
add
aad
out
adc
pop
xchg
push
inc
ret
dec
xchg
subb
inc
lea
push
scas
inc
iret
idiv
xchg
inc
cmc
sub
dec
test
nop
movsb
sbb
mov
xchg
xor
insl
shlb
stc
cltd
cwtl
add
fisttpll
aam
nop
ficoml
xchg
imul
out
mov
lds
dec
arpl
push
fwait
pop
push
add
sbb
lods
nop
es
push
add
bound
pusha
fwait
int
in
aas
xor
dec
lret
mov
and
pop
mov
pop
mov
dec
aaa
repnz
xor
push
sub
mov
enter
dec
mov
shr
test
les
pop
mov
cmpsl
clc
sub
sub
daa
xchg
test
dec
cwtl
shrd
inc
and
test
pop
xor
enter
nop
jle
mov
aas
inc
xchg
sbb
push
xchg
mov
sub
mov
arpl
cmpsb
lea
pop
mov
addr16
sti
lock
fwait
pushf
lret
cmp
mov
test
add
lret
cmpsl
fdivrs
ficoms
or
pusha
cmp
lds
xchg
rcr
imulb
sub
sarb
ret
pushf
jecxz
imul
movsl
leavew
and
fcmovnu
jo
dec
mov
mov
xor
in
jno
stos
or
or
out
or
rcr
faddl
cli
sbb
decl
out
roll
test
xor
fs
pop
sub
push
inc
adc
sub
xor
lcall
cmpsb
call
testl
xchg
mov
arpl
mov
xor
and
roll
pop
shll
mov
jp
jle
mov
ds
data16
xchg
push
int
push
into
dec
rcll
xor
pop
lret
movb
adc
xchg
lcall
mov
cltd
jge
lret
mov
fists
push
sbb
inc
mov
mov
jl
out
neg
cs
dec
jns
fstpt
insl
lcall
sbb
roll
aaa
jbe
mov
in
sarb
jae
sahf
lahf
xchg
mov
sbb
or
rorl
les
xchg
push
push
lock
xor
xlat
scas
mov
bound
jae
lahf
orl
int3
push
sahf
pop
pop
dec
in
push
lret
jmp
pop
mov
insb
mov
or
leave
mov
dec
xor
std
and
arpl
and
ds
mov
fpatan
repnz
inc
jecxz
movsl
mov
mov
outsl
or
dec
inc
insb
repz
and
push
call
jne
shr
cmc
or
movhlps
and
iret
or
fcmovnb
out
hlt
jle
dec
pop
sub
pop
ret
cmc
mov
xor
cmp
xlat
popa
in
xchg
lret
jne
into
push
cmp
add
jl
mov
adc
iret
in
mov
lahf
loopne
and
jns
add
inc
clc
fdivrl
sti
fnsave
mov
mov
cmpsb
adc
adc
fsubr
mov
int
push
addr16
and
iret
or
dec
xchg
sbbb
push
push
cmpsb
xor
mov
cmp
jg
loop
cmpsl
or
popf
cmp
ret
and
pop
dec
mov
mov
pusha
lcall
sti
or
insb
jmp
pop
add
nop
cmp
push
add
cmp
adc
jge
clc
push
mov
dec
add
cmp
inc
lcall
inc
add
sbb
lcall
into
mov
scas
pop
pop
pushf
scas
fnstsw
mov
fiadds
call
scas
or
adc
in
notb
sbb
leave
fldl
dec
jb
mov
mov
mov
sub
xchg
lret
cwtl
in
adc
fcomps
sub
je
ljmp
lcall
sub
rcrl
mov
in
loope
out
inc
mov
fbld
stos
jb,pn
and
push
and
or
push
push
mov
mov
dec
sbb
xor
and
mov
ja
push
cmpsl
mov
xchg
out
cld
popa
ret
fisubrl
push
cltd
mov
out
in
shll
je
test
mov
loope
mov
push
sub
sbb
xchg
xchg
pop
jp
inc
enter
push
aam
cmp
adc
nop
sahf
pushf
push
xor
xchg
push
push
leave
xchg
loope
mov
dec
pop
jecxz
push
cld
cmp
mov
enter
and
stos
sub
add
in
mov
lret
lods
add
pop
iret
xchg
xor
stos
fstpt
pop
dec
xor
cmp
xor
pushf
imul
mov
xchg
xlat
xchg
jmp
mov
and
and
fildll
pop
cmp
sub
rcr
pop
jecxz
inc
sbbl
cli
push
dec
ja
fisubrs
aam
xor
orl
inc
or
push
sub
insb
mov
inc
jg
mov
sub
pop
repz
addr16
insb
cmpsb
mov
adc
adc
push
pcmpeqb
je
lret
fidivl
out
sbbb
repnz
adc
lock
push
popa
mov
inc
clc
mov
jnp
es
dec
fwait
push
cmp
pop
inc
fcmove
jle
mov
adc
push
adc
rorb
jmp
test
cmp
lods
movsl
and
or
pop
dec
in
sub
ljmp
jns
sahf
in
psubq
push
or
push
inc
xchg
insl
pop
lods
pop
cs
cwtl
lock
add
loope
nop
xor
gs
call
pop
or
mov
fwait
inc
xchg
js
repz
divl
dec
incb
stc
push
and
lds
ffreep
xchg
mov
cli
dec
arpl
fstpt
adc
das
mov
push
xchg
cmp
addl
push
outsl
lret
jecxz
sub
dec
into
lds
filds
sbb
or
inc
pop
inc
push
jl
xchg
aad
into
lret
hlt
jp
int3
in
inc
scas
mov
sahf
add
adc
shll
ss
dec
dec
sbb
aaa
aad
adc
fnsave
mov
cmp
lods
ja
sbb
and
test
jle
ja
jecxz
out
xor
inc
shll
stc
sbb
cmp
jne
jo
fcompl
scas
inc
xchg
or
or
lcall
adc
dec
cmp
xchg
mov
in
pop
sub
mov
shl
lret
xchg
cmp
xchg
dec
jbe
xor
inc
xor
dec
addb
int
sbb
inc
xchg
add
rcll
pushf
es
and
jecxz,pt
pop
lahf
cmp
call
jle
or
jp
jnp
out
popf
mov
in
push
mov
js
sub
adcl
jg
sarl
cmp
ds
xchg
or
sarl
movsb
addl
js
push
popf
test
pop
mov
ja
mov
pusha
add
fnstenv
sbb
push
dec
xchg
aad
je
fistpll
dec
into
jae
jmp
nop
and
dec
leave
mov
xchg
idivb
push
lds
xor
fisttps
push
fmull
int
lahf
rclb
xchg
pandn
push
inc
call
xor
loopne
dec
push
das
pop
mov
mov
sti
inc
pop
outsl
xchg
loope
jnp
mov
ja
add
cmp
loope
cmp
aad
cwtl
cmp
cs
add
jmp
add
xchg
xchg
imul
mov
sub
in
lods
mov
push
fucom
cmpl
cs
fnstenv
cmpb
push
cwtl
movsb
shll
rcl
or
test
or
movsl
add
dec
xchg
sbb
xchg
out
in
xor
lret
lret
jbe
cmp
or
sub
add
push
nop
sarb
xor
inc
sub
pop
scas
mov
jp
lcall
in
rcrb
not
mov
stc
xchg
ret
gs
mov
push
into
les
xchg
jmp
jecxz
jecxz
or
xchg
sub
mov
push
sub
mov
xchg
ss
sti
xchg
pop
xor
inc
adc
or
inc
cld
mov
add
leave
jo
out
xchg
mov
lahf
adc
out
mov
ds
shll
call
outsl
aam
mov
lcall
and
loop
add
push
fdivl
in
ss
call
pop
mov
in
xor
es
adc
and
repnz
push
xor
les
jno
fsubl
aad
sub
cmc
dec
add
dec
and
imul
roll
jp
psrlq
es
lret
mov
sbb
xor
addr16
mov
sbb
test
xlat
leave
dec
pop
jne
cltd
pop
js
and
dec
bound
mov
mov
push
cmp
pop
addr16
rclb
adc
mov
pop
cwtl
jns
daa
stc
call
mov
xchg
aad
inc
das
or
sub
ret
mov
push
cmc
std
push
pop
push
xchg
mov
notb
lods
inc
callw
push
and
fwait
mov
rcll
sahf
lds
mov
and
or
stc
push
push
fldenv
push
fs
mov
add
mov
or
repz
imul
and
or
cmp
xor
adc
negl
mov
and
test
imul
cld
inc
cmp
add
xchg
or
xchg
div
push
fdivs
inc
ja
clc
lods
cmp
sti
inc
jmp
loopne
ds
imul
rcll
mov
fldt
vmaxsd
movsl
mov
or
outsl
lock
fstps
sbb
push
inc
mov
out
aam
test
xchg
into
push
fwait
cltd
cld
jp
nop
jle
adc
inc
cmp
iret
mov
aaa
fs
pop
and
or
jo
icebp
pop
pop
fcomps
mov
repz
sub
dec
and
jbe
push
push
add
jge
mov
call
add
stc
dec
pop
ror
gs
pop
sub
scas
jp
out
pop
push
mov
push
mov
push
outsl
fmuls
jecxz
mov
movsl
repz
imul
je
inc
push
arpl
sbb
sub
dec
mov
ds
pop
pop
ja
cli
sub
pop
xchg
push
jl
ljmp
gs
add
fists
cmpsl
daa
xor
inc
aaa
push
sub
lds
add
bound
jle
mov
arpl
mov
add
shlb
pop
in
xchg
mov
push
outsb
lea
mov
mov
pop
mov
cmc
outsl
jle
sti
lahf
pop
xor
aam
out
dec
das
push
test
out
mov
out
or
mov
mov
test
sub
pop
scas
je
sub
js
nop
jae
and
pop
loopne
loope
pop
test
dec
dec
mov
sub
and
inc
insb
push
data16
xchg
das
imul
or
lahf
loopne
sbb
test
sbb
xor
mov
mov
notb
sub
mov
pop
sub
jns
cmp
in
enter
cld
and
push
ror
leave
pop
xor
fsts
pop
test
cltd
pop
and
cmpl
shrb
inc
mov
popf
and
stos
je
sub
icebp
fld
sub
sub
mov
mov
fs
mov
pop
aam
leave
or
sub
out
cmp
movsb
jmp
add
leave
dec
pop
adc
mov
enter
idiv
dec
sbb
out
adc
sqrtps
and
bnd
sub
imul
movsl
adc
adc
mov
in
pop
addr16
call
lret
jno
xor
adc
lods
dec
and
or
mov
jnp
es
adc
in
nop
mov
xlat
and
hlt
lcall
cmpsl
jno
dec
inc
sbb
lret
and
push
lods
push
fldenv
xor
insl
hlt
jge
in
cli
and
mov
popl
push
daa
jo
dec
arpl
inc
add
data16
out
sub
xor
fdivrl
fwait
and
jmp
push
mov
out
daa
pop
mov
xchg
ret
xchg
imul
lods
push
leave
dec
dec
adc
dec
and
outsb
sbb
adc
in
xchg
scas
es
or
mov
rolb
imul
inc
cmp
adc
mov
pop
inc
fistl
shl
in
xchg
divb
jle
movsb
sub
push
outsl
dec
flds
sti
pop
adc
jecxz
outsb
inc
or
and
or
insb
and
xor
fistps
repnz
cmp
jle
and
das
adc
jmp
xchg
adc
mov
jle
cmp
lds
es
sbb
aaa
mov
dec
cmp
jbe
arpl
sbb
fistpl
lods
fistl
mov
jmp
jno
cmp
jl
adc
and
loopne
xor
mov
shll
pop
scas
sbb
push
adc
adc
int
pusha
bswap
pusha
xor
rorb
push
cltd
mov
popa
mov
push
imul
mov
imul
push
loop
loop
pop
fisttps
mov
push
pusha
mov
cs
jnp
popa
sub
mov
inc
mov
push
add
pop
pop
movsb
cli
pop
jg
push
cmpsl
popa
mov
xchg
xor
cmpsl
push
mov
ficoml
mov
inc
test
ljmp
cli
call
in
pop
insb
in
insb
cmpsb
pop
dec
pop
out
adc
mov
outsb
lea
xchg
mov
popf
push
ss
pop
shlb
ret
xlat
jno
fsubrl
jns
popa
out
movsl
xor
mov
loopne
mov
or
push
test
dec
in
in
dec
mov
in
iret
enter
repz
enter
lds
pushf
jg
jl
push
into
outsl
hlt
sbb
jno
std
les
inc
mov
je
inc
inc
loop
fnsave
cltd
xchg
inc
nop
enter
mov
sub
jne
inc
push
test
push
jbe
in
jns
sub
jl
sbb
xchg
sahf
pop
push
cmovns
pushf
xchg
and
mov
pop
cltd
mov
call
mov
sahf
sbb
icebp
lahf
push
fiadds
es
out
jge
iret
inc
data16
ror
mov
add
xchg
adc
pop
fidivl
scas
mov
dec
cwtl
arpl
ja
dec
pop
xchg
cwtl
fisubrs
dec
jae
xor
add
fisttpll
lods
mov
outsl
ds
mov
mov
jnp
add
push
sbb
add
jne
xlat
daa
mov
jns
sub
das
xchg
lar
rcr
rolb
in
nop
mov
inc
mov
or
cld
xor
pop
pop
outsb
jl,pt
and
dec
negb
and
pop
xchg
sti
jge
sub
pop
add
fists
jo
jecxz
flds
fisubs
pop
xor
push
pop
adc
hlt
int
cmp
xor
mov
flds
mov
clc
orl
mov
pop
stos
inc
mov
push
add
rorl
fs
stc
xor
rcrl
and
iret
mov
xor
sub
mov
popa
fcmovu
jno
fcomps
mov
das
out
inc
push
mov
mov
je
jo
fildll
icebp
xchg
daa
rorb
daa
jle
fildl
or
leave
call
jno
imul
call
inc
mov
and
push
stos
pop
sub
cmpb
stc
adc
push
stos
pop
sbbb
mov
icebp
je
xor
sbb
out
mov
jge
jae
popf
subl
adc
inc
pop
rcrl
cmp
inc
fsubr
fadds
sub
xchg
xor
repz
imul
jno
jecxz
adc
xor
pop
push
jnp
pop
movsb
cmp
aas
sbb
shrl
mov
mov
sbb
fxam
push
add
mov
adc
jmp
aad
call
inc
mov
mov
test
or
cmp
sbb
and
inc
das
xor
ret
js
pusha
mov
sbb
test
pop
loopne
int3
or
call
xor
addb
andb
enter
jns
inc
insl
out
ja
ds
xbegin
xor
xchg
cld
add
jge
add
jb
cmpsl
out
cli
shll
mov
sbbl
cmp
jmp
inc
lods
int
jo
cmp
cmp
push
incl
int3
dec
push
lock
sub
adc
inc
js
push
inc
add
mov
xchg
cs
mov
inc
adc
std
rclb
jge
xor
pop
pop
push
push
sbb
fwait
mov
int
rcrl
ljmp
fnsave
xchg
loop
fldlg2
mov
jmp
dec
decl
and
xor
jae
rolb
out
sub
and
mov
dec
and
pop
addr16
fcmovne
pop
pop
cld
jno
sub
out
xor
and
jmp
fs
ja
movsb
aam
mov
lret
jp
cmp
rcrl
mov
xlat
imul
mov
in
mov
pop
push
cli
jecxz
add
sbb
arpl
or
lret
ja
xor
dec
hlt
test
push
sbb
enter
addr16
and
cltd
fidivrs
push
mov
xor
aaa
test
aas
shr
sub
outsl
adc
sub
sub
mov
mov
inc
jge
push
outsb
dec
hlt
lret
xor
pushf
jbe
cmp
scas
push
or
cwtl
loop
pop
mov
pop
lea
dec
sbb
std
outsl
ficoms
insb
mov
and
push
add
push
sbb
loope
and
push
fdiv
push
mov
aam
fstpl
push
xor
jp
adc
sbb
and
in
xor
aam
rol
in
clc
xchg
stos
mov
icebp
push
outsl
pop
ficompl
sahf
jp
ret
lds
ret
sub
push
add
xor
les
sub
jnp
imul
inc
aam
push
shlb
add
adc
ds
lret
fs
stos
stos
lea
mov
sbb
push
mov
insl
ljmp
inc
xchg
push
xor
aaa
imul
ds
out
addr16
dec
imul
or
addr16
or
jle
cld
lcall
mov
inc
sub
inc
sub
ds
adc
or
lret
mov
push
mov
out
int
pop
adc
lods
sbbl
push
and
cmp
inc
lods
push
adc
ret
push
imul
sub
pusha
test
ret
andl
divl
repnz
adc
out
scas
in
xor
push
cs
push
adc
cmc
popa
mov
icebp
ja
pop
sbb
stc
icebp
out
lods
call
loopne
into
repnz
outsl
fistl
and
cmp
xlat
cmc
test
test
mov
xchg
movsl
mov
mov
lahf
xor
ja
sbb
es
and
movsb
sbb
pop
in
rcll
lods
dec
or
pusha
jmp
jno
pop
mov
mov
fsubrl
test
cmc
pop
fwait
mov
xchg
aaa
popa
nop
mov
mov
insb
cwtl
push
mov
addb
test
lock
ret
or
push
gs
decb
push
mov
adc
fistpll
shlb
scas
jo
cmp
inc
movsb
call
xchg
inc
loop
rcr
popf
movb
ss
jnp
popa
mov
cmc
std
sysret
adc
les
jo
stos
adc
lret
mov
pop
mov
xchg
rcrl
int
jo
int3
repnz
pop
scas
xchg
mov
fdivs
fidivl
out
test
jae
fadds
rcrl
arpl
xor
xor
jecxz
sti
dec
mov
mov
jmp
test
mov
addr16
sbb
mov
mov
pop
lahf
jns
sbb
sbb
add
add
and
mov
xorb
rcrb
cwtl
adc
aas
jecxz
jle
xor
js
addr16
test
movsl
xchg
adc
xor
test
testl
sub
ja
push
sbb
xchg
into
push
test
sbb
cmp
adc
and
or
jge,pt
call
roll
push
mov
jo
cmp
cmp
fdivrl
test
or
sahf
pop
adc
push
insb
sbb
mov
fcmovnbe
fs
cs
or
popl
fistl
mov
fidivrs
push
bound
sbb
in
stos
les
outsb
adc
mov
jp
jae
jns
jae
xchg
out
pop
mov
dec
orl
pop
mov
sbb
arpl
stc
ds
fimull
shll
or
aaa
adc
inc
or
cmp
mov
ret
mov
in
cltd
and
sbb
cmpb
adc
mov
cld
jle
inc
xorl
filds
dec
popa
and
cmp
mov
sub
repnz
int
in
mov
pop
insb
pushf
lods
jle
aam
xorl
push
mov
cli
lcall
ljmp
or
cmp
push
add
inc
inc
cli
push
xchg
xor
sub
push
cmp
cli
cmp
push
loop
nop
daa
xchg
ficomps
mov
push
jge
pusha
mov
movsl
test
popa
aaa
scas
xchg
xchg
sbb
cmp
dec
mov
arpl
movsb
ret
les
fdiv
int
jge
in
pop
push
pop
inc
push
push
cmpb
dec
ret
in
imul
jmp
mov
mov
imul
push
xchg
aaa
adc
imul
inc
lcall
fmull
adc
stos
hlt
and
stc
mov
rcrl
or
mov
shll
pusha
ljmp
data16
cwtl
mov
repz
dec
cmp
ficompl
xchg
bound
cmp
scas
test
xchg
mov
arpl
adc
lret
mov
lcall
inc
xchg
test
test
adc
mov
cltd
sub
out
je
setge
add
cmp
mov
pop
xchg
and
push
lret
sysenter
movsb
rclb
or
ljmp
daa
mov
mov
add
and
ficompl
inc
xchg
in
sarl
leave
cld
in
inc
mov
pop
add
and
test
fmul
xchg
pop
mov
stos
xor
test
push
jne
out
je
mov
jo
dec
fcmovne
inc
test
mov
notb
mov
call
mov
xchg
xor
out
pop
fwait
mov
int3
aad
sbb
dec
insb
push
lret
mov
adc
in
idiv
push
jbe
and
xchg
jno
outsb
lret
or
dec
out
ds
stos
cmp
sub
ljmp
mov
sbb
or
shr
push
int3
sbb
cmpl
fucomip
or
arpl
iret
add
pop
xchg
fs
cmp
cld
pop
mov
out
gs
inc
sahf
sarl
decl
xor
xchg
ja
je
sbb
mov
xor
pop
inc
scas
sbb
out
push
sti
sbb
cmpsb
sbb
mov
ss
inc
or
je
xchg
push
divl
popa
push
shl
inc
xor
push
call
imulb
movsb
hlt
dec
ret
aad
call
ret
mov
sbb
dec
int
loopne
loop
and
mov
dec
mov
mov
inc
jecxz
sub
lahf
out
lods
cmc
push
jnp
push
test
sub
xchg
enter
xchg
movb
or
push
int
cs
mov
outsb
sub
and
into
adc
dec
cmpsl
in
out
mov
hlt
push
cmp
sbbl
pop
outsl
outsb
enter
sub
xchg
test
ljmp
xor
jle
push
cld
sahf
sbb
jle
ret
mov
and
repz
and
adc
lret
mov
aad
stos
enter
pop
sbb
sbb
jae
sub
repz
push
add
jae
and
popa
arpl
sbb
cmp
out
lods
inc
fdivl
sub
pop
popf
jecxz
or
popa
xlat
pop
ss
or
xor
gs
jno
enter
pop
out
mov
enter
or
and
jecxz
insb
test
iret
stos
or
repnz
in
mov
loop
scas
sbb
add
je
jbe
in
dec
rolb
bound
xor
xchg
call
dec
insb
imul
dec
sub
addr16
loop
cltd
mov
xchg
fnstenv
mov
imul
adc
movsl
loope
pop
gs
cmp
cs
ljmp
xor
cmpsw
mov
decl
jle
inc
pusha
and
mov
cmpl
xchg
stc
mov
xchg
xor
adc
cmp
mov
dec
push
add
xor
das
push
repnz
xchg
cmc
xchg
out
cmpsb
sarl
leave
add
dec
jo
fxch
add
ja
int
xchg
push
push
jecxz
fwait
sbb
push
out
call
mov
sbb
movsb
in
jmp
dec
inc
aad
and
ja
sub
pop
jne
sti
cmp
mov
xchg
mov
dec
xchg
mov
pushf
test
mov
lret
fmull
sbb
xchg
or
aam
ljmp
inc
fstps
cli
inc
popa
stos
adc
cwtl
lock
pop
and
ds
pop
push
pop
mov
out
push
sub
push
cmpsb
cmp
and
shll
pop
aas
push
xchg
sbb
scas
stos
sub
shll
lret
inc
test
and
dec
les
ja
pop
pop
mov
add
sahf
dec
adc
orl
cld
mov
mov
pop
fdivs
test
orl
sti
outsb
mov
add
arpl
jae
sub
mov
mov
mov
scas
pop
add
stos
test
test
cmc
mov
and
xlat
sub
or
fcomps
in
ret
aaa
ret
inc
push
fdivrl
ds
subl
push
mov
xchg
jle
int3
in
push
fincstp
fstl
fidivrs
xor
cmp
int
mov
sbb
adc
mov
sbb
jp
or
jb
ret
sub
mov
nop
inc
or
mov
sub
syscall
clc
sbbb
add
mov
dec
js
lahf
mov
addr16
inc
lea
pop
mov
push
jge
mov
scas
sub
fbld
jecxz
out
push
cmp
inc
mov
sbb
cwtl
add
dec
push
int3
sbb
in
cmp
es
pop
inc
mov
adc
cmpsl
daa
mov
fistpl
xlat
xlat
jbe
xchg
rclb
pop
pop
and
movsb
sub
push
cmc
xlat
test
pop
mov
loop
jae
sbb
and
stos
cmp
mov
xor
or
sbb
je
das
insb
stc
out
mov
shlb
jb
xchg
push
sbb
cmp
mov
ret
insb
push
jne
nop
cmp
pop
fsubl
out
mov
sub
and
adc
or
push
stc
mov
jb
aaa
mov
push
inc
xor
xchg
sbb
push
cmc
inc
mov
js
sbb
ss
fadds
lea
mov
dec
xchg
out
xor
push
xchg
aas
arpl
inc
in
sub
jge
adcl
xchg
aas
jg
push
pop
jmp
scas
jp
das
call
inc
mov
or
in
sbb
adc
mov
out
js
sub
pushf
data16
inc
xchg
imul
pop
ss
mov
loope
stos
pop
push
mov
mov
int
cwtl
inc
xor
pop
xor
and
je
outsb
repnz
pop
lcall
xchg
pop
test
mov
sub
stos
or
insb
dec
push
fwait
push
cld
sarl
in
rcrb
mov
adc
insb
iret
pop
addr16
shlb
in
or
les
shlb
dec
cmp
repz
ljmp
std
out
cs
jl
adc
enter
or
sub
std
add
stos
pmaxub
push
adc
cmp
lock
daa
add
out
xchg
or
cmp
rclb
pop
cmpsl
cmp
stos
pushf
jmp
or
or
sub
popa
adc
sub
out
imul
leave
scas
pushf
lret
push
inc
addr16
stos
xor
jns
adc
mov
gs
fistpll
ret
stos
push
mov
mov
jno
out
mov
out
scas
das
mov
sbb
jge
out
out
sub
inc
sti
mov
mov
loop
rcrb
ucomiss
sbb
pop
or
cmp
in
lods
icebp
mov
cld
mov
gs
push
loopne
cmp
mov
pop
sub
je
adc
mov
test
addb
mov
mov
outsb
clc
and
or
or
sub
adc
ret
push
mov
inc
je
lret
pop
clc
aas
jno
mov
cltd
fwait
popa
int3
add
mov
jnp
inc
dec
push
pushf
loopne
push
mov
popa
hlt
pop
pop
outsl
mull
pop
mov
cmc
jne
mov
test
orb
dec
add
test
mov
jg
mov
xor
bound
es
int
int
jp
stc
icebp
idivl
mov
mov
sbb
repnz
xor
add
je
inc
inc
and
movsb
inc
sbb
pop
or
lods
pusha
or
jl
xorl
testb
sbb
mov
les
jb
push
pushf
stos
mov
push
notl
cs
jo
test
and
adc
mov
sub
mov
pop
bound
push
ss
dec
or
pop
addr16
jg
test
add
into
test
or
pop
adcb
std
adc
aas
mov
adc
fs
test
lods
mov
daa
enter
in
or
jne
inc
or
inc
scas
cs
fldt
aam
push
sbb
sub
xchg
cli
shrl
mov
fcompl
cmp
jbe
jl
stc
mov
cmp
sbb
fs
dec
cmpsl
test
and
pushf
rcr
daa
pop
adc
in
cmp
adc
pop
sub
cs
xchg
jmp
daa
stos
mov
shll
iret
pop
mov
sahf
cmp
ffreep
fistl
cli
xchg
ret
sti
int3
outsb
sbbb
xor
rolb
aaa
gs
int3
push
pop
xor
ret
jl
add
inc
or
les
add
cmp
jle
xchg
pop
nop
adc
pop
sbb
sahf
lea
jb
decl
inc
mov
jl
fwait
sub
icebp
sbb
sub
cld
xor
test
xchg
add
mov
lret
add
fnstcw
ljmp
inc
xor
inc
push
mov
rol
push
jg
sbbb
jnp
pop
lret
adc
cmpl
xor
pop
push
sub
lcall
fwait
or
fdivrl
mov
push
sbb
or
jne
add
bound
pusha
mov
in
popf
arpl
fdivl
test
into
dec
cmp
xchg
sahf
mov
rcl
and
rolb
aad
repnz
push
arpl
aas
enter
fs
ret
and
push
loope
sub
pop
sub
mov
xor
pop
xchg
sbb
cmc
push
out
mov
xchg
ret
jmp
xor
xchg
or
lahf
mov
push
aad
xchg
popf
jle
clc
mov
out
sub
ja
pop
cwtl
loopne
les
pop
mov
dec
dec
xchg
xor
jp
mov
out
or
mov
pop
pop
rcr
mov
push
andl
mov
clc
add
shll
push
sbb
ja
or
fidivs
xor
stc
xrelease
ret
mov
dec
lods
shr
pushf
pop
pop
mov
cmpsb
pop
dec
loope
cmp
dec
aas
movsb
out
in
hlt
lds
push
sbb
les
adc
enter
scas
and
and
dec
adc
or
lret
fwait
pop
out
cli
xor
mov
aas
xchg
sbb
pop
adc
sahf
ret
or
xchg
fdivr
test
cmp
cli
lea
adcb
or
mov
jge
pop
xor
icebp
sbb
pushf
adc
jge
pop
mov
loop
push
sbb
push
mov
xor
nop
cmp
clc
icebp
dec
inc
mov
jge
cltd
and
dec
cld
aad
cmpb
ss
cmc
cmpsl
dec
jae
lret
lahf
inc
push
arpl
mov
lods
std
xor
lcall
adc
fcoms
mov
xchg
test
push
lcall
or
rclb
pop
dec
jb
adc
push
push
adc
push
xchg
mov
lds
mov
or
rcrb
scas
pop
icebp
out
insl
mulb
sbb
jbe
and
addr16
lock
lret
xor
or
pop
cmp
pop
push
inc
and
sahf
cltd
loope
and
mov
inc
jne
gs
int
imul
or
clc
loopne
in
rcrl
sbb
jo
inc
bound
adc
mov
fnstcw
aam
pushf
inc
in
fisttpl
fists
mov
int
sub
dec
pusha
mov
push
outsl
xchg
cmc
push
jmp
stos
adc
icebp
in
inc
xchg
inc
xchg
cmp
out
dec
imul
test
notl
negb
lds
or
repz
push
xor
out
iret
movsl
insl
push
mov
call
js
loope
pop
imul
lock
pop
jbe
xor
or
jne
test
in
sti
sub
push
lock
mov
mov
sbb
ss
jge
mov
ljmp
das
or
mov
imul
cmc
sbb
sbb
in
pop
push
arpl
js
push
or
cld
filds
lea
ljmp
mov
or
cmpsl
mov
push
dec
outsl
mov
xchg
incb
jl,pt
dec
mov
inc
pop
hlt
leave
sub
out
pop
xorb
loope
pop
cmp
add
lea
mov
sbb
or
sub
out
sbb
mov
pop
mov
cmpsb
add
mov
mov
imul
sbb
nop
xchg
ds
test
roll
sbb
sbbl
imul
cmp
push
das
mov
enter
sub
fildl
xor
pop
add
dec
adc
xchg
mov
stc
ss
test
sti
ret
or
pop
lea
pop
lods
lahf
arpl
fucom
push
jbe
jno
mov
aas
add
rol
inc
push
adc
lcall
rolb
xor
aad
cld
pop
lret
inc
push
sub
xchg
gs
test
cmp
fcoms
jp
test
jo
imul
mov
insl
xor
notl
int3
xchg
jns
int3
aam
xchg
xor
loop
mov
xchg
xlat
push
dec
test
enter
rcr
sub
imul
jecxz
pop
jno
jecxz
add
push
push
lods
inc
inc
or
mov
inc
test
aad
and
mov
push
mov
test
or
enter
ja
mov
fisubrs
fmuls
daa
lods
mov
pop
cmpsl
cld
loope
dec
jae
cmp
or
mov
cmp
and
cmp
arpl
mov
mov
pop
mov
pop
mov
jb
out
jns
stos
aas
cwtl
push
jl
sub
xor
rcr
test
mov
popa
fs
jl
aam
mov
mov
pop
jno
add
cmp
adc
push
pop
jo
push
out
leave
sub
mov
add
mov
push
push
incb
xchg
mov
gs
push
cmp
mov
pushf
xchg
jl
jp
or
cmc
and
int
fdivrs
stos
daa
xor
mov
adc
jg
dec
bnd
sti
add
inc
shlb
xchg
and
into
clc
xchg
and
sti
adc
lds
std
stc
ret
mov
aam
sbb
in
pusha
out
test
lods
cmp
mul
sub
and
sbb
mov
adc
in
inc
push
push
into
push
movsl
out
scas
pop
cltd
stc
add
mov
fmul
pop
loopne
xchg
rorl
popf
adc
xchg
push
adc
fmulp
loope
nop
lea
std
sub
std
subb
mov
lods
xchg
push
push
xchg
fimuls
sbb
fidivs
mov
cmp
xor
sub
outsb
xchg
js
rcll
inc
cmpsb
add
pop
push
jge
jae
sarb
inc
mov
push
inc
call
mov
adcl
dec
pop
push
cmp
mov
rcrl
cld
mov
pop
jae
inc
jp
pmaddwd
jle
adc
lcall
adc
mov
mov
insl
xchg
gs
mov
test
and
add
push
repz
pop
out
xchg
sub
push
fnstcw
enter
mov
into
pop
lahf
or
add
cmp
in
out
daa
fmuls
add
jl
push
xor
xor
xchg
push
mov
out
sbb
scas
cmp
cwtl
stc
mov
test
les
push
jno
sub
xchg
shll
data16
jle
rcrl
sub
and
jbe
dec
mov
jae
adc
sub
ss
mov
jb
mov
sbb
lods
aam
dec
fiadds
push
aam
mov
or
mov
mov
sarb
cmp
nop
jb
test
pushf
adc
int3
scas
testl
test
xchg
ja
aad
mov
mov
xchg
hlt
subb
lods
addr16
in
mov
int3
lods
mov
pop
sbb
loope
pop
lret
mov
ud0
imul
idivl
mov
incl
add
mov
in
addr16
push
jns
pop
cmc
and
pop
mov
sub
lods
adc
add
mov
jp
sub
sbb
xor
xor
cld
cli
rcl
push
jmp
cwtl
outsl
js
gs
add
call
mov
call
xor
into
dec
aad
jb
int
out
cmpsb
xor
dec
dec
cmp
xlat
mov
mov
cmp
and
ja
xchg
inc
push
push
aad
addr16
mov
cld
mov
mov
mov
ljmp
in
sub
rclb
lock
sub
test
sbb
mov
push
pop
dec
mov
ljmp
ret
adc
pop
leave
orl
cmp
sbb
insl
xchg
or
aaa
push
xchg
sub
pop
leave
les
cmovae
mov
out
jno
jo
outsb
mov
cmp
mov
xchg
cmc
dec
call
fdivrl
dec
testb
jp
cmpsl
imul
mov
jbe
add
movsb
stos
xchg
inc
adc
mov
das
sbb
in
ja
xor
roll
xchg
stc
cmp
push
and
mov
dec
lods
mov
negb
pop
leave
push
shl
jle
lahf
add
loop
loope
je
cmpxchg
ss
push
imul
dec
loop
insl
loope
jge
mov
out
rorl
or
push
jp
push
pusha
stc
arpl
cmp
mov
and
fdivl
jns
pop
and
iret
jo,pt
xlat
add
int
out
push
inc
rolb
cli
and
insb
jns
mov
sub
dec
fsts
daa
jmp
aam
pop
outsl
scas
mov
mov
or
xor
lods
std
jno
out
loop
add
push
call
stos
xchg
jbe
xchg
int3
adc
lock
push
dec
and
and
adc
mov
sbb
add
cmp
repz
xchg
sbb
outsb
mov
lcall
ret
sbb
xchg
mov
and
out
shlb
mov
inc
and
insb
mov
push
mov
and
lock
in
loopne
in
ja
incl
xchg
push
into
sub
daa
lds
xor
shl
mov
imul
xchg
sub
or
adc
mov
pop
ds
mov
shr
ret
add
cltd
test
cmp
mov
pusha
xchg
xorb
adc
jge
insb
add
add
out
cwtl
xor
shll
jmp
pop
loopne
je
je
push
ficoml
sub
imul
add
push
lahf
sub
sahf
lods
push
in
popf
ljmp
fildl
enter
jle
jo
cld
xchg
xchg
outsb
rcll
or
push
mov
enter
mov
push
fxtract
pop
jmp
pop
int
std
push
inc
dec
inc
or
rolb
mov
in
in
sub
lea
adc
add
cs
add
push
mov
and
and
sbb
add
pop
stos
ss
adc
fs
adc
mov
mov
cmpsb
out
xor
ret
gs
scas
xor
inc
insb
cmp
mov
js
fsubrp
mov
or
cmp
mov
fs
aas
xchg
out
mov
ljmp
in
mov
lock
loope
xchg
pop
pop
pop
mov
andb
cld
jns
pop
or
leave
cmpsb
cmc
lahf
mov
mov
movsb
sub
adc
fisttps
push
add
and
jnp
aad
pop
repz
xorl
imul
xchg
pop
nop
and
ret
mov
ss
jp
leave
clc
mov
xor
dec
mov
xor
sub
inc
shll
inc
icebp
cmp
adc
xchg
enter
inc
inc
lock
insl
popf
scas
js
popf
and
dec
mov
push
xor
pop
stos
cwtl
out
adc
ret
movsl
aad
adc
dec
addr16
add
push
fdivl
inc
test
dec
lret
push
pop
mov
int3
xor
sub
popa
xchg
mov
in
mov
mov
fsubl
rcl
shrb
sub
mov
mulb
jmp
jnp
aam
dec
movl
add
mov
sbb
fcmovb
ret
arpl
mov
fwait
aaa
lods
xchg
iret
adc
dec
pushf
cwtl
test
stos
out
cmp
pusha
inc
adc
into
ret
push
hlt
mov
repz
sti
jl
mov
in
dec
mov
enter
xchg
ljmp
mov
roll
sti
mov
jl
lods
cmpsl
fidivrl
pop
cltd
je
addr16
push
inc
xor
jle
adc
pusha
pop
nop
xchg
or
into
mov
xchg
das
pop
popa
insl
rol
adc
or
push
jmp
or
or
sbb
push
cltd
sbb
cmpsb
into
inc
hlt
mov
mov
mov
mov
jb
mov
jp
cmc
pop
or
mov
inc
jne
lods
jo
stos
pop
std
aas
push
xchg
cmc
xor
sbb
push
repnz
orb
mov
fsubrp
sub
movsl
call
ds
push
lahf
lock
jne
insb
ret
es
cltd
sbb
shl
dec
xor
imul
negl
inc
xchg
adc
inc
cmp
loop,pn
push
popa
pop
xchg
cmp
leave
das
dec
push
push
push
add
push
xchg
xorb
std
jp
fisttpl
or
xchg
cmp
faddl
pop
lods
mov
jb
adc
stc
push
es
ret
pop
lods
gs
xchg
xchg
ret
pop
dec
jl
mov
sub
xlat
sub
pop
xor
xchg
ljmp
outsb
fimull
and
inc
dec
mov
fcompl
addr16
scas
mov
push
cmp
mov
jmp
nop
push
sbb
and
or
sarl
sbbb
popf
das
fs
sahf
ret
subl
jecxz
inc
fwait
ret
stos
mov
clc
lret
xor
xchg
js
fmull
call
insl
xor
add
int3
fildl
sbb
idivb
push
aad
xchg
jmp
in
and
roll
dec
xchg
outsb
xchg
pushf
les
andl
xor
sbb
sub
movl
cmp
and
hlt
in
xchg
mov
popf
dec
mov
pushf
mov
or
or
pushf
jmp
outsb
push
testl
cld
into
addr16
or
and
inc
mov
stos
loop
xlat
loop
mov
mov
lret
subb
jno
stc
xchg
push
dec
pop
inc
rol
push
push
movsb
loope
pop
insb
addl
adc
lock
pop
cmp
mov
mov
and
lahf
pop
sub
jecxz
pop
xor
sbb
stos
adc
push
repnz
jae
les
or
gs
xlat
out
or
fldenv
jg
es
jno
cmc
jbe
dec
mov
scas
push
pop
es
pop
fsqrt
jg
ljmp
sub
add
xchg
hlt
push
aad
leave
insl
pop
inc
negb
add
adc
out
mov
hlt
cmpsb
inc
jnp
movsb
jg
sub
incb
push
adc
mov
mov
xor
hlt
iret
data16
idivl
dec
pop
mov
mov
scas
mov
fbld
pop
add
xorl
xor
mov
das
push
movsl
jl
mov
and
xchg
cmp
pop
sub
dec
fnstsw
nop
pop
testl
cmp
insb
xchg
popa
inc
icebp
sbb
lahf
and
dec
and
pop
std
and
addr16
xchg
xchg
pop
cmp
int3
dec
dec
push
roll
sti
jne
out
sub
scas
int3
fisubrl
ss
pusha
xchg
lcall
mov
cmpsb
jle
jle
inc
orl
xchg
dec
repnz
les
push
negl
ljmp
call
repz
add
xor
push
add
mov
fs
loop
or
shll
push
push
movsb
std
and
jge
leave
pop
fstps
jns
sub
xchg
jp
add
push
imul
rdtsc
jbe
push
lock
lret
push
jmp
mov
adc
and
shlb
jecxz
sbb
rorb
stos
adc
outsl
pushf
out
sahf
out
sahf
outsb
out
add
mov
ljmp
in
pop
mov
movsb
cld
test
out
sub
into
mov
repz
movsb
mov
sar
mov
clc
jle
xchg
sbb
aam
in
pop
adc
xchg
jecxz
jo
out
push
in
call
addr16
imul
dec
fwait
push
xor
xor
in
pop
xchg
mov
std
push
in
movsl
push
or
mov
pop
add
iret
fistpl
cmp
imul
push
lds
add
adc
imul
mov
pop
push
aam
push
sub
inc
stos
xchg
cmp
jl
testb
lahf
xchg
pop
cmp
cmp
push
lahf
stc
xchg
xlat
outsb
in
inc
or
push
xlat
mov
xchg
pop
push
daa
orl
pop
stos
sbb
cs
out
push
into
and
mov
xor
cli
fwait
push
adc
test
sbb
pop
cmp
or
mov
sub
jo
rcrb
pop
sbb
push
cmpsl
mov
sar
jae
jo
addb
loop
lock
mov
jne
cmp
push
mov
lcall
cs
dec
ret
mov
test
mov
movsb
cmp
cmc
dec
xchg
and
outsl
iret
int3
lock
or
xchg
bound
jmp
movsb
adc
cld
mov
popf
add
push
push
cmp
xor
xor
dec
or
sbb
xchg
dec
mov
sub
test
fistl
aas
cmp
sbbl
fwait
cltd
push
jg
clc
in
push
jbe
repz
cs
xchg
mov
jecxz
lds
and
out
mov
mov
in
aaa
mov
mov
inc
push
push
sahf
xchg
add
outsb
sbbb
push
int3
push
xor
ret
aaa
mov
gs
sbb
jp
pop
ds
bound
lea
adc
fcom
or
arpl
push
push
popl
jle
inc
mov
mov
and
push
mov
adc
sti
jl
rorl
mov
pushf
lcall
inc
fnsave
ja
cli
into
loope
mov
or
les
inc
sbb
test
add
inc
mov
fldl
out
cmp
sbb
iret
sub
idiv
push
mov
mov
push
jo
scas
inc
mov
hlt
jne
xor
sti
add
and
mov
xor
nop
cmc
sub
mov
lret
xchg
and
and
adc
arpl
std
pusha
addb
testl
sbb
int
in
add
xchg
repnz
and
lods
fbld
mov
inc
in
add
pop
sbb
push
fildll
sub
sub
lock
and
sbb
mov
cmp
ficomps
sbb
xor
sarb
lahf
lret
loope
daa
dec
aad
xor
lock
mov
mov
cltd
pop
loopne
xchg
testl
fistpl
and
add
rcr
ret
mov
jp
mov
outsb
addb
add
lret
scas
and
cmp
lock
push
loope
mov
jno
test
pop
mov
in
add
adc
pop
arpl
outsl
add
push
push
pop
mov
shrl
sti
mov
insl
gs
push
cmp
and
push
push
pushf
mov
jmp
rcll
dec
xchg
mov
jo
rclb
mov
or
mov
dec
xchg
pop
or
dec
jbe
pop
loope
dec
pushf
fs
popa
and
xchg
sbb
out
mov
adc
xchg
ret
lret
cli
aas
out
scas
sar
mov
fdivrs
pop
mov
lahf
sahf
xchg
jmp
mov
jb
mov
in
dec
mov
xchg
adc
or
bound
and
mov
hlt
dec
out
xchg
int3
lock
push
dec
js
mov
jmp
lods
push
test
and
xchg
ja
xor
mov
sbb
insb
fsubp
mov
pushf
jbe
add
leave
inc
rorl
cmpsb
or
xchg
add
insb
xlat
sbb
jle
je
xchg
sbb
loope
aam
adc
dec
sti
outsl
fimuls
xchg
aaa
mov
bound
ss
pop
inc
sarl
mov
adc
push
call
jnp
lds
mov
jne
jo
inc
pop
cld
mov
repz
jno
lds
daa
cmp
shr
cli
add
xchg
sbb
test
cmp
ja
and
test
in
dec
adc
dec
pop
stos
cmc
inc
jno
inc
mov
pushf
addb
data16
leave
sbbl
test
xchg
xor
je
addl
dec
push
fdivrl
cmpsb
lahf
jo
mov
mov
cmpsb
add
cmp
xor
aad
stc
mov
test
lods
jle
xchg
inc
sbb
and
mov
push
loope
sarb
call
pop
or
mov
std
rcll
add
jle
sbb
gs
adc
jle
mov
mov
lahf
xlat
ljmp
adc
cmp
mov
das
sub
gs
shll
sub
lea
pop
ret
adc
jne
push
jecxz
inc
xlat
ljmp
jp
adc
push
inc
ds
cld
ds
popa
xor
xor
pop
insb
inc
mull
rcrl
pop
cmpsb
daa
inc
jno
or
pop
inc
mov
flds
pop
cmpsl
lahf
mov
gs
mov
hlt
sahf
adc
pop
adc
add
loop
sbbb
mov
mov
or
pop
sbb
movl
dec
movhps
fnstenv
stos
movl
push
and
jb
or
pop
stc
lds
movsl
in
add
lea
jle
cmp
dec
xchg
pop
adc
push
push
test
ficoml
add
hlt
cmp
and
loope
pop
sbbb
lret
test
mov
lds
dec
fcmovnb
je
sub
push
jle
mov
sub
in
insb
cmp
stos
inc
sbb
out
sub
sub
jge
int3
sub
cmp
add
jnp
outsb
nop
jno
stc
les
jne
cmp
push
mov
outsl
pop
popf
push
add
push
test
fnstenv
sbb
sbb
dec
dec
inc
and
stos
iret
das
outsb
pop
push
jg
or
fdiv
test
cmp
jmp
mov
adc
push
xor
nop
arpl
pop
pop
loopne
addl
add
sub
adc
stos
add
adc
fisttpl
xchg
dec
fsubl
stos
dec
pop
or
out
xor
repz
sarl
push
cltd
js
jge
jae
mov
cltd
and
shll
sbb
xchg
dec
and
fdivr
mov
push
mov
mov
imul
xor
pop
jno
xchg
pushf
sbb
and
xchg
insb
cltd
sub
xchg
sub
mov
adc
and
cs
or
sti
mov
lea
cmpsb
add
mov
adc
cld
mov
fwait
sub
clc
int3
insl
sbb
jge
or
xchg
push
cmpsl
adc
ss
mov
xchg
pavgb
scas
mov
aam
scas
pop
push
jg
leave
divb
mov
push
ret
push
dec
arpl
jmp
out
mov
in
pop
and
push
and
out
mov
dec
pop
repz
stc
add
xchg
scas
inc
out
pop
pop
fldln2
inc
pop
loopne
push
mov
shl
rcr
mov
fildl
fwait
add
out
ret
dec
adc
leave
adc
leave
fs
enter
ja
scas
add
pusha
fcom
mov
jne
in
sbb
xchg
stos
push
out
shlb
les
mov
in
mov
test
out
xchg
or
stos
xchg
flds
xchg
mov
test
push
push
lret
fcmovnb
dec
lds
jecxz
aad
xchg
inc
push
subb
or
flds
or
dec
sti
cmpl
cmp
cmp
imulb
cltd
cmp
lea
outsl
sbbb
inc
mov
shrb
xchg
xor
mov
outsl
out
into
xor
pop
jg
mov
shlb
or
lea
mov
and
push
jle
cld
mov
or
jb
push
cwtl
and
lods
cmpsb
mov
in
sbb
cld
ss
or
sbb
push
cld
sub
fnstsw
movsb
jmp
push
fwait
inc
mov
jo
jmp
dec
adc
or
notb
lcall
jne
adc
test
mov
add
in
test
inc
fldt
lahf
sbb
add
rcll
ja
sbb
aaa
aas
es
cmp
rorl
push
inc
mov
cli
push
in
stos
push
pop
test
xor
rclb
push
aam
jbe
adc
mov
cmpsb
push
pop
lahf
push
ret
repnz
scas
mov
jp
cmp
lods
jnp
idiv
inc
cmp
pop
jp
dec
insl
nop
adc
rolb
push
into
jbe
idivl
dec
out
fldt
shlb
in
shrl
adc
mov
cmpsb
sbb
mov
repz
inc
sarl
gs
pop
je
test
cmpsl
jnp
movsl
mov
cmp
mov
jns
or
lcall
sahf
test
cmp
cltd
xor
test
mov
int3
xor
xor
cmp
sbb
fwait
xor
sub
cmp
jge,pt
ljmp
or
jae
mov
ret
mov
inc
xchg
cmc
test
out
jbe
inc
sbb
mov
xchg
insb
sarb
cmp
dec
je
fldt
mov
adc
mov
jb
lcall
xchg
test
enter
imul
ds
dec
jl
lods
inc
gs
ja
jmp
sub
mov
out
pop
and
scas
mov
popa
cmc
fsts
loopne
push
inc
inc
pop
sub
push
add
inc
sub
inc
add
mov
insl
mov
dec
std
mov
mov
ja
sub
pop
fucomp
lea
push
pushl
bound
inc
inc
test
test
bound
jbe
cmp
mov
sbbl
inc
mov
xor
rolb
pop
arpl
push
dec
pop
push
inc
lret
test
std
sbb
mov
cmp
je
mov
mov
pop
dec
ret
or
out
pop
ret
imul
ret
pop
pushf
jp
nop
xor
fnstenv
adc
pop
aad
push
pop
cmp
sbb
movsl
and
imul
test
pmullw
andb
mov
push
test
jecxz
ja
inc
xor
cmpsb
sub
cmc
mov
mov
xor
out
je
push
or
ret
push
jno
leave
adc
jnp
and
sbb
popf
sub
push
xchg
lret
mov
cmc
lea
adc
inc
cmpsl
dec
out
mov
push
mov
push
mov
xchg
mov
inc
mov
mov
mov
out
jns
jmp
aaa
or
jns
ret
dec
loope
out
adc
push
push
pop
pusha
xchg
add
cltd
imul
cmpl
das
shll
leave
mov
cwtl
add
cmp
jnp
stc
bnd
leave
mov
lea
inc
and
and
mov
pusha
xor
jae
fstl
mov
push
std
fnsave
out
shl
sub
jnp
popa
sti
dec
mov
rclb
cmc
xchg
out
pop
addr16
sbb
data16
mov
fwait
in
jl
push
out
jb
mov
dec
push
in
ss
jp
pop
into
rcr
push
popa
and
adc
push
pop
inc
orb
scas
jmp
cmpsl
and
add
mov
lret
or
mov
xchg
or
loope
xchg
out
stc
ja
stos
mov
je
pop
adc
mov
addr16
mov
cmp
pop
inc
mov
call
in
divl
int3
inc
inc
jmp
add
mulb
loope
jae
mov
adc
shrb
push
lret
shll
out
loope
mov
insl
inc
pop
out
xchg
push
lods
dec
fisttps
stos
dec
test
inc
pop
rorb
lcall
jge
cltd
sub
sti
cltd
sbb
or
lahf
xor
scas
jno
inc
xchg
jbe
imulb
aad
or
dec
xchg
rcr
aaa
and
or
mov
outsl
push
xlat
push
repz
add
and
insb
cmc
inc
mov
push
fsubrl
setae
sbb
push
dec
cltd
inc
popa
mov
add
mov
bound
pop
dec
imul
push
push
mov
and
cmp
out
push
sub
clc
pop
movsb
jo
push
jbe
add
push
rcrl
jecxz
or
ljmp
sbb
stc
sbb
outsl
sbb
lods
jg
stc
jo
dec
std
push
and
push
and
sub
adc
jno
xorb
jle
xchg
clc
jp
loop
add
fsubrs
lret
nop
mov
imul
mull
push
cmp
adc
xor
cmp
jne
and
cmp
mov
mov
lods
lds
adc
test
sbb
stos
in
cmc
ds
into
mov
stc
jo
add
pop
mov
cmp
mov
push
push
cli
rcr
js
xchg
out
push
jmp
or
or
mov
cld
dec
dec
adc
fdivp
daa
xor
in
test
inc
xchg
test
outsl
adc
dec
gs
xchg
mov
cmp
sbb
stc
pop
repnz
sub
push
fildll
lret
xlat
les
mov
outsb
iret
sbbl
nop
cmc
mov
mov
ja
push
inc
dec
or
test
cs
or
mov
aam
repz
cmp
pushf
cs
mov
hlt
xchg
ja
dec
scas
les
aad
dec
sti
inc
adc
out
fists
in
out
fcomps
pushf
push
adc
sub
jns
dec
mov
pusha
call
cmp
call
mov
in
pop
jmp
dec
in
or
add
test
and
jl
and
gs
mov
push
dec
aad
pusha
fwait
adc
and
jns
cltd
and
or
loop
add
mull
mov
loope
mov
mov
sbb
xor
in
pop
and
dec
lret
cmp
dec
out
mov
inc
xchg
push
fadd
mov
adc
mov
iret
xchg
das
push
ja
inc
dec
cmc
jg
xchg
fcom
add
dec
mov
or
add
cmp
mov
sub
sbb
xlat
jp
lea
adc
loope
ss
lods
arpl
and
xchg
idivb
mov
pop
push
jbe
xchg
popa
jo
push
sub
pop
fidivl
arpl
jge
sbb
sbb
rclb
cmp
sbbb
adc
andb
pop
mov
fistl
mov
adc
dec
or
in
mov
loope
sbb
jl
cmp
cmpsb
xchg
jbe
stos
adc
mov
jb
imul
cmpsb
jo
lcall
cli
xchg
dec
js
mov
bound
addr16
addr16
mov
test
testl
xchg
lahf
mov
sub
inc
aam
jno
fildll
cltd
shr
jno
mov
je
push
repz
pop
dec
jb
jne
and
xchg
repz
mov
pop
or
jns
repz
fxtract
stos
sbb
mov
cmp
pop
mov
int3
popa
cmp
jle
pop
iret
aaa
mov
rcl
push
fisttpl
gs
xchg
push
jp
rcrb
jg
sar
mov
sahf
cmp
xchg
fdivr
je
jle
hlt
ja
or
je
xchg
das
enter
int3
inc
jmp
or
lret
xchg
cmp
addb
ret
xchg
ljmp
jo
in
cmp
adcb
inc
mov
es
scas
xlat
push
pop
cmpsl
icebp
xor
stc
jnp
cmp
xor
push
shr
mov
lcall
mov
sahf
xor
nop
mov
add
scas
clc
add
mov
fisubl
add
in
lahf
pop
mov
fbld
mulps
out
test
xchg
dec
push
xchg
jae
lods
jns
dec
push
or
test
sbb
cmp
dec
loopne
sti
out
xchg
mov
dec
xchg
push
test
cmpsl
pop
inc
xchg
mov
mov
lods
enter
dec
pop
mov
sbb
pop
ss
bound
std
mov
mov
loopne
xor
adc
xchg
push
dec
pop
mov
lcall
and
jl
mov
leave
adc
mov
sbb
mov
jecxz
rcrl
fsubl
cmpsl
xchg
ficomps
push
push
xor
rcll
or
lds
cmp
pop
sub
pusha
inc
adc
xchg
sti
push
in
mov
dec
out
jb
nop
addr16
sti
popf
out
cltd
adc
jl
adc
stc
leave
sub
mov
sbb
ljmp
add
imul
cmpsl
xor
cmp
enter
fwait
mov
jnp
pop
clc
xchg
adc
movl
mov
mov
and
notl
mov
test
pop
inc
ja
mov
insb
cmp
pop
ret
adc
xchg
jae
or
sbb
cmpsl
jbe
jns
pop
mov
mov
jno
movsl
call
push
xchg
cwtl
mov
push
adc
ret
ror
xchg
xchg
push
inc
cli
jge
mov
cmp
jns
fmulp
push
jge
dec
in
iret
int
jne
imul
sub
or
pop
push
jge
cmpsl
call
pop
inc
inc
les
mov
xchg
xchg
push
mov
test
push
pop
sti
lds
and
int
mov
imul
pop
addr16
xor
cmpsl
fisttpl
sub
nop
pop
mov
lret
in
mov
push
mov
insb
pusha
xchg
paddq
loopne
shrl
sub
dec
and
in
pushf
add
pop
adc
in
sbb
imul
hlt
cmp
sbb
mov
out
and
mov
xchg
cmp
mov
pushf
andl
movb
dec
jle
sub
cmpb
mov
cmc
imul
cwtl
mulb
hlt
in
rolb
test
push
sahf
sbb
loope
mov
or
popa
mov
push
jnp
add
fcomps
lret
cltd
mov
ret
mov
lcall
test
js
popa
mov
mov
push
cld
jno
or
xor
push
ret
mov
jl
ja
loope
int3
clc
xor
or
aas
add
dec
sub
lcall
cmp
ss
ficoms
push
and
cmpsb
add
lea
or
xchg
ffreep
popf
jge
popa
adc
std
test
push
shll
dec
sub
mov
xor
mov
addr16
pop
jg
or
outsb
faddl
xchg
icebp
rcll
sub
sub
imul
sub
mov
aaa
ficoml
jl
into
ret
scas
xor
xor
sub
cmpsb
or
loopne
test
push
cwtl
pinsrw
xor
sbb
mov
sub
pop
loopne
out
pop
xlat
jp
dec
sbb
adc
ja
inc
cli
pop
cwtl
idivb
sbb
cmp
cmp
out
rol
inc
sub
cmpsl
or
mov
mov
sahf
jb
or
arpl
cmc
xchg
lea
stc
out
jb
mov
imulb
cmp
inc
xor
in
pop
lret
xchg
or
repz
and
mov
or
fwait
mov
mov
out
call
sub
fstps
mov
je
cmp
add
mov
jno
xchg
or
sbb
pop
mov
ret
mov
subl
pushf
arpl
nop
adc
stos
out
push
mov
fadds
mov
dec
push
jne
lea
pushf
cmovae
cmp
testl
mov
mov
adc
jp
dec
xchg
xchg
push
adc
or
mov
das
repnz
xchg
adc
or
je
notl
popa
xchg
es
pop
rorl
jg
inc
pop
ret
popa
and
orb
adc
lcall
arpl
pop
push
dec
stos
inc
insb
repnz
mov
inc
cltd
add
or
pop
stc
lea
shl
mov
cmc
sbb
adc
mov
ret
je
ljmp
dec
push
in
fcmovnb
pop
addr16
lcall
out
mov
xchg
inc
push
xchg
iret
mov
pop
jp
arpl
or
sbb
lret
add
fimuls
mov
rcrl
aas
aam
inc
lds
jnp
ret
aam
jae
es
arpl
clc
aad
cmpsl
lret
test
and
adc
adc
jle
adc
mov
cs
cltd
mov
pop
mov
mov
pop
sti
lods
push
sub
dec
hlt
pop
sub
pop
mov
daa
cli
fs
pop
lea
xor
iret
outsb
clc
mov
mov
popa
xchg
sub
cmpsl
mov
mov
loope
add
jl
cmp
pop
mov
or
ljmp
xor
xchg
xchg
push
ret
inc
mov
adc
fs
rolb
jno
inc
lcall
cmp
outsb
add
addr16
sub
arpl
dec
jno
jmp
xchg
lods
xor
lea
in
les
mov
adc
sbb
int3
xor
stos
mov
dec
sbb
cmp
fistpl
mov
call
js
pushw
fcoms
insb
inc
lahf
jmp
sub
ss
aad
cli
adc
call
test
xchg
dec
imul
fwait
cmp
je
or
push
lahf
xor
in
xchg
add
and
or
aad
cmc
cwtl
add
int
into
ret
movsb
inc
cwtl
or
fdivrs
clc
ret
push
dec
repnz
cltd
xor
pop
bound
adc
adc
dec
xchg
inc
fcoms
mov
adc
pop
pop
xor
mov
push
ficomps
cli
mov
loope
and
je
adc
out
arpl
and
out
inc
mov
cltd
xchg
add
loop
cmpsl
repnz
int
pop
add
sub
mov
testl
mov
sti
cs
mov
jae
test
push
repnz
out
mov
insb
jle
je
add
mov
stos
and
cmpsl
dec
rcll
out
shlb
inc
stos
imull
fldl
or
aaa
fsubr
aad
rsqrtps
push
add
pusha
xor
aad
leave
dec
xchg
fbstp
adc
push
mov
jp
push
or
movsl
jbe,pn
push
das
or
or
movsb
lea
test
xor
mov
ja
adc
xor
mov
mov
iret
and
outsb
mov
pop
jb
imul
fcmovnb
negl
xor
pop
lods
inc
icebp
int3
mov
icebp
cmpb
ret
ja
lahf
out
mov
imul
sub
inc
jnp
xchg
mov
or
stos
adc
in
scas
stos
aam
or
dec
nop
sbb
out
ja
stc
loopne
mov
cmp
dec
sub
jae
jbe
les
nop
in
jp
xchg
lcall
movsb
sub
nop
pop
inc
and
lods
cltd
adc
xor
mov
xchg
xlat
and
clc
insl
mov
adc
orl
push
or
ficoml
vmovdqa
xor
jb
jmp
vmovapd
imul
xchg
stos
cli
out
lds
adc
rcl
gs
jl
test
pop
push
sub
add
sahf
gs
stc
inc
push
xchg
and
mov
add
notl
push
ljmp
or
arpl
fadd
and
dec
insb
push
cmp
cmpsb
push
movsb
repnz
ljmp
fstpt
fimull
jae
or
sbb
adc
test
jle
dec
or
cwtl
rcrl
movsb
xchg
sub
fdivl
pusha
push
fdiv
fnsave
cmp
test
xchg
add
aam
call
fcoml
fsub
imul
cltd
or
dec
cld
aam
lahf
push
inc
dec
pop
das
dec
mov
inc
mov
faddl
imul
push
loop
mov
cmp
insl
jb
int3
mov
lret
aad
sbb
mov
popa
scas
je
mov
adc
shl
jo
mov
ja
ret
stos
push
jnp
lods
jge
mov
or
jecxz
add
es
jo
mov
cmp
push
mov
xchg
mov
decl
iret
xor
lret
jge
outsb
mov
push
xchg
inc
add
js
mov
out
std
fcomi
sbb
adc
in
fwait
addr16
mov
fdivrs
mov
adc
pop
fs
outsl
lcall
dec
xor
dec
mov
dec
mov
addl
out
push
lret
dec
mov
test
insl
xorl
and
mov
sub
mov
jae
fcom
adc
scas
jge
xor
mov
aad
dec
fcoml
sbb
popf
push
pop
or
push
jns
lret
pop
loopne
ljmp
cmp
and
sbb
xchg
cmp
sub
dec
push
pop
std
pop
test
add
iret
les
mov
mov
ja
xchg
jmp
in
pop
loop
mov
insb
in
pop
lock
ss
ds
sub
shll
xchg
ret
imul
push
clc
xlat
inc
enter
xchg
xor
adc
clc
cltd
movl
dec
mov
push
das
mov
jmp
adc
and
enter
cmp
lahf
mov
mov
sbb
pop
popa
pop
out
sub
xchg
hlt
xor
push
dec
fcompl
jecxz
loope
decl
mov
jnp
adc
std
xchg
in
cmp
or
add
in
addr16
jmp
pusha
jno
lds
std
imul
sbb
push
adc
inc
in
imul
mov
push
movsl
and
cmp
adc
cmp
mov
cs
sbb
and
and
add
adc
jne
jg
lcall
out
pusha
clc
mov
mov
sub
push
in
adc
push
add
out
push
cmp
push
push
mov
inc
data16
fistpl
push
mov
mov
in
fwait
movsb
jle
pop
jmp
fnsave
subl
les
inc
xchg
push
sub
jb
imul
test
ss
mov
ljmp
or
out
sbb
jbe
inc
mov
xor
in
je
int3
popa
in
sbb
insb
jmp
out
mov
icebp
aam
mov
xchg
jmp
sbb
cld
sub
cmp
aaa
push
outsb
lcall
insb
sbb
dec
adc
inc
jge
outsb
inc
shl
mov
ficoml
sub
sub
shlb
add
mov
enter
lock
pop
and
inc
push
cmpsb
jl
dec
adc
aad
insl
pop
lods
outsb
mov
nop
adc
into
cmp
imul
push
pop
sti
rep
and
lods
pop
jnp
ss
setp
cmp
dec
insl
xchg
adc
shll
and
cli
push
pop
mov
pop
adc
push
sbb
adc
test
lret
xchg
push
xlat
sahf
shl
rcr
sbbb
mov
sub
lahf
or
dec
mov
test
enter
dec
mov
pop
or
divb
mov
rolb
or
push
fmull
ljmp
or
clc
jb
sub
dec
mov
pop
and
lods
es
cmc
inc
and
and
insl
in
pop
popf
push
out
pop
subl
push
imul
mov
test
in
repz
out
or
jecxz
rcr
cmp
in
lock
leave
test
mov
or
icebp
sbb
cmp
push
cmp
mov
push
ret
adc
scas
pop
std
jo
je
popl
add
xor
pop
call
mov
adc
or
js
je
lcall
gs
fdivl
ret
lcall
ja
sti
mov
add
stos
dec
arpl
push
mov
shll
pop
int3
mov
ljmp
inc
jnp
lret
mov
ljmp
clc
cmp
push
sti
xor
in
iret
jo
shlb
mov
cmp
adc
pop
out
or
pop
test
sub
ffreep
pop
inc
mov
outsb
pop
rol
mov
and
fwait
decl
movsb
jno
push
dec
cmp
icebp
aaa
loope
das
andb
dec
jnp
fisubrs
xchg
addr16
lahf
dec
test
sub
mov
insb
jbe
mov
aaa
add
imul
imul
loop
inc
sbb
push
orps
scas
stc
aam
jae
mov
in
jmp
mov
fistps
pop
dec
mov
jns
iret
mov
sbb
cmp
fcoml
arpl
mov
leave
stc
leave
daa
sbb
jle
dec
cmp
mov
and
rcrl
pop
cmc
mov
dec
mov
jne
push
stos
aas
insb
fdivrp
or
sti
mov
outsl
xchg
pop
xchg
inc
or
adc
mov
sbb
sbb
dec
jp
clc
xchg
pop
test
sahf
and
mov
xor
inc
jge
aas
dec
mov
negb
out
lret
and
test
push
enter
pop
sub
lock
lcall
rorl
adc
cli
pop
push
jmp
pop
inc
call
add
lret
pop
cmp
imul
push
or
mov
out
add
jo
lahf
arpl
ljmp
mov
jb
xchg
dec
and
jno
das
cs
jb
pop
add
push
decl
cmp
dec
jne
sahf
inc
in
mov
aam
cmp
xor
adc
dec
fdivrs
daa
dec
daa
xchg
inc
in
jne
lret
or
fcmovu
fsubrp
and
inc
cmp
mov
and
mov
shl
out
ss
test
int3
pushf
imul
sub
lock
jle
mov
pop
ret
push
inc
aas
int
pop
mov
aaa
ja
mov
fisubrl
sbb
cmp
sti
mov
or
mov
stos
push
orl
pop
push
arpl
push
enter
jne
push
ret
ret
dec
and
push
test
adc
xor
jns
sahf
sbb
inc
and
sub
movsb
stc
and
fwait
jecxz
jl
adc
test
dec
je
xchg
inc
add
jecxz
js
orl
adc
ljmp
fidivs
or
push
jmp
mov
push
push
jg
mov
adc
pusha
pop
fldl
xor
adc
movsb
mov
xor
xor
dec
pop
add
mov
add
cmp
std
dec
mov
cli
mov
push
mov
out
shlb
cmp
bnd
mov
mov
push
pop
in
mov
stc
mov
sub
stos
shr
aaa
scas
cmpsb
and
adc
ljmp
push
ja
pushf
sti
mov
js
xchg
out
dec
jmp
jmp
jge
loop
repz
insl
cld
mov
lds
lahf
loope
push
movsl
out
out
xchg
pushf
add
sarl
jne
cwtl
pushf
fabs
pop
es
in
scas
push
cmp
testb
add
jmp
bound
mov
inc
rcrl
sbb
les
inc
jp,pn
sub
mov
imul
sbb
jns
sub
int
out
mov
insb
add
dec
xor
sbb
mov
pop
sub
sub
or
push
sub
in
data16
jnp
ja
sbb
test
fisttps
scas
adc
inc
lds
cld
cld
fldcw
sbb
stos
mov
or
cld
cmp
sbb
movsl
int
movsl
test
dec
outsl
fwait
lea
mov
outsl
ret
jo
pop
in
xor
pop
pop
in
sub
sti
and
push
into
negb
inc
lods
sbb
hlt
push
ret
push
mov
out
fwait
dec
sub
push
inc
mov
or
push
jle
popf
cmpsl
repnz
mov
test
mov
sbb
inc
das
out
or
pop
mov
ss
repz
lahf
sbb
inc
ljmp
mov
lods
out
jg
pop
je
sbb
xchg
pop
in
sub
mov
fwait
mov
mov
sub
and
xchg
movsl
inc
inc
out
scas
int3
cmp
pop
jne
in
das
rolb
mov
imul
push
sbb
fwait
inc
mov
add
dec
dec
jl
xchg
addl
mov
mov
jno
mov
mov
sbb
push
dec
scas
sub
push
in
loop
stc
lock
push
stos
jo
lea
es
and
and
xchg
popa
dec
fbstp
mov
dec
jno
xor
inc
std
inc
push
sahf
push
cmpsb
and
aad
cmc
testl
sub
jb
and
subb
jne
dec
pop
testb
scas
or
mov
sub
jns
pop
jl
les
sarl
test
mov
inc
repz
or
icebp
repz
or
jl
lea
mov
dec
test
xlat
int
cmc
push
sub
sbb
add
out
ljmp
add
das
cmp
mov
add
push
sub
loopne
xor
xorb
mov
dec
mov
jp
inc
insl
into
outsb
aam
cmpsb
adc
dec
lds
inc
and
lock
sub
xor
or
cmp
stc
ret
cmpsl
loope
lret
popf
xchg
mov
lock
or
mov
dec
push
movsl
pop
xor
js
repnz
dec
rolb
cmpsl
je
leave
or
mov
adc
sub
xchg
add
jge
mov
adc
sub
lods
and
shlb
and
in
setbe
addr16
js
jo
fbstp
pop
cmp
notl
mov
add
mov
mov
shll
mov
pop
stos
dec
lret
imul
push
inc
imul
es
fidivl
push
jg
adc
pop
shll
sub
push
mov
push
adc
xchg
mov
mov
xor
push
test
int3
cmpl
addb
repnz
fwait
aad
mov
fldcw
inc
pop
mov
scas
adcb
out
mov
mov
inc
aaa
repz
inc
jb
jno
adc
xchg
faddp
filds
cmp
cwtl
xlat
rcr
push
in
das
inc
xchg
popa
adc
dec
push
mov
lcall
test
sbb
xchg
out
mov
mov
mov
lock
mov
mov
xchg
dec
movl
into
xchg
sti
push
jg
xchg
and
adc
popf
push
mov
mov
cli
mov
xchg
repnz
or
hlt
xchg
daa
cmp
das
stos
aam
sub
fwait
popa
xchg
dec
ret
xchg
lahf
shll
mov
jle
adc
xchg
adc
out
lcall
sahf
xor
movb
cmp
xchg
ja
data16
sbb
pushf
dec
out
sub
addl
adc
in
cmc
inc
pop
mov
aaa
inc
adc
cmp
mov
lock
std
je
aas
adc
mov
popf
lods
gs
es
fisttpl
mov
push
fcmovb
leave
xchg
int3
scas
push
mov
sahf
insl
mov
loopne
xchg
xor
icebp
dec
bound
fcompl
mov
xchg
ja
mov
jg
enter
xlat
repz
cltd
stc
mov
xchg
enter
pop
cmc
xchg
pop
push
cld
cmpsb
addl
or
aam
cmpsl
sbb
add
std
lods
jnp
jno
add
movsb
jb
jbe
xchg
aas
icebp
cmp
dec
lret
pop
mov
mov
repnz
mov
fwait
xchg
je
shll
sbb
les
das
push
cmp
mov
adc
jecxz
fwait
stos
aam
das
mov
insb
in
push
xchg
scas
add
divl
out
aas
xor
jo
ja
cmp
and
push
add
cltd
xor
test
xor
jl
pusha
insl
lcall
add
cwtl
dec
pushf
xchg
sbb
inc
ss
jns
stos
loopne
std
sub
mov
pop
cld
add
inc
ret
dec
cwtl
add
sbb
jo
sbb
sbb
adc
push
bound
arpl
adc
push
clc
loopne
pop
loope
or
sub
inc
push
cld
push
insl
or
ret
lahf
sub
popf
add
xor
jbe
js
cmpsl
lcall
xchg
mov
ja
sbb
push
or
xchg
sub
into
aaa
jp
enter
and
sbb
push
inc
orb
pop
xchg
xor
jle
rcrl
jo
add
pop
test
xchg
testb
divb
mov
test
mov
jmp
pop
shlb
int3
jo
mov
scas
sub
pushf
ds
out
sahf
dec
in
add
xor
out
sarl
jo
jg
pushf
add
fs
ror
sub
fstpl
pop
cmp
mov
cltd
das
inc
xor
imul
bound
xlat
inc
bound
xchg
xchg
mov
rolb
sti
push
sbb
adc
push
lods
mov
ret
popf
jb
adc
shl
push
sbb
js
mov
pop
lods
add
fstpt
ficoml
push
inc
sbb
mov
sbb
or
nop
xchg
nop
mov
sub
ror
push
lret
lahf
pop
lcall
add
add
dec
cmp
incl
dec
sbb
insl
in
out
aam
jg
ljmp
pop
xchg
and
xor
stc
in
add
loop
jnp
sbb
push
add
xchg
or
cmp
and
push
movsb
jb
movsl
sub
fdivrl
es
addb
mov
pop
cmp
xchg
bound
fnstcw
pop
mov
arpl
mov
sti
cmp
jmp
sub
pop
fbld
imul
out
jno
ret
js
mov
out
xor
repnz
push
sbb
subb
xchg
dec
mov
jne
sbb
daa
mov
xchg
jno
out
mov
repz
add
popf
in
cmpsb
lea
sti
or
mov
jnp
cmp
hlt
mov
sbbl
sub
sub
lea
lods
mov
sbb
imul
jecxz
jno
cmp
mov
push
jp
rcrb
adc
and
aad
mov
sarb
roll
mov
mov
and
jbe
mov
mov
std
sub
mov
icebp
bswap
imul
mov
pop
inc
adc
cltd
sbb
or
fstpt
mov
inc
ss
sahf
push
jbe
push
sar
xor
mov
sbb
in
orl
test
push
mov
mov
lock
sbb
inc
mov
mov
jbe
or
cmp
adc
mov
leave
test
bound
xchg
pop
cmp
add
pop
sbb
mov
jg
pushf
fidivs
sbb
icebp
push
inc
std
jb
or
aas
jcxz
aaa
xor
fsubl
dec
aaa
and
fwait
call
mov
jg
data16
xchg
fisubrl
pop
decl
scas
ljmp
push
ja
into
mov
sub
rclb
loope
sbb
sbb
jae
jg
unpckhps
sbb
sub
outsb
test
es
nop
ljmp
sbb
mov
xchg
adc
xchg
mov
jns
xlat
xchg
add
cmc
mov
and
lods
scas
mov
pop
cmp
adc
sbb
shl
lcall
adc
dec
das
daa
sti
xchg
pop
add
push
call
sahf
or
insl
add
mov
lock
inc
xchg
or
ljmp
mov
push
xor
or
cmp
push
stc
fisubrl
leave
fbstp
mov
pop
push
shl
cmp
jns
mov
push
and
outsl
xchg
insl
add
int3
xchg
xchg
into
and
lea
mov
cmp
andl
cmp
jg
cmp
jne
and
jle
clc
xor
push
xchg
jl
loopne
ret
jnp
pop
fidivs
cmp
jb
pop
aad
scas
cmp
mov
push
lahf
fidivrs
fisubs
popa
stos
pop
jl
or
xor
jnp
sti
or
cwtl
xor
and
push
dec
int
out
lcall
stos
popa
inc
js
hlt
cmp
addr16
sti
mov
push
mov
push
sbb
jle
xchg
inc
push
enter
faddp
push
dec
adc
lcall
iret
in
imul
test
jb
and
leave
lock
push
icebp
xchg
es
pop
subb
neg
lret
mov
add
pop
ret
add
mov
jbe
cmp
mov
cmc
cmc
inc
dec
aam
dec
scas
outsl
or
xorb
jge
push
jp
aad
in
sub
insb
inc
aad
mov
mov
sbb
cli
jbe
mov
imul
mov
mov
mov
xor
mov
hlt
mov
push
xchg
inc
mov
out
lock
pop
add
fidivrs
mov
jl
mov
fldl
dec
mov
fisttpl
addr16
adc
sbb
and
fsubs
mov
jns
and
repnz
enter
cmp
sub
aam
xchg
xchg
cld
xchg
jnp
fwait
mov
xchg
test
jge
out
aam
out
cmpsb
pop
cmpsl
stos
fiaddl
inc
pop
mov
or
push
addr16
and
mov
mov
test
nop
shr
shll
inc
stc
or
fdivr
aam
fcoms
pop
pop
cli
nop
imul
pop
test
ror
or
inc
and
push
jb
out
rclb
lahf
filds
pop
lret
out
nop
cmp
push
inc
aam
cwtl
nop
dec
sbb
or
lods
add
dec
shlb
or
enter
xchg
inc
sarb
jg
inc
fs
cmp
add
xchg
aad
cmp
fldcw
imul
fistpll
lds
lcall
nop
push
jle
jae
shlb
mov
xchg
xor
cmp
leave
sbb
fisubs
sahf
mov
sbbb
ret
mov
sub
fists
dec
dec
icebp
mov
push
aaa
out
lock
ss
sbb
sub
pop
int3
dec
mov
push
cltd
cmpsl
sub
cmp
scas
sub
sar
das
cmc
ret
jno
cmpsl
int3
and
cltd
out
lds
jl
and
jge
in
loopne
aas
mov
les
gs
dec
lret
ljmp
icebp
fs
leave
inc
outsb
jbe
sarl
aaa
mov
testb
dec
dec
fcoml
push
arpl
sbb
out
lret
cmp
pop
mov
xor
in
test
movsl
idivb
mov
xchg
js
sub
push
insb
in
add
sarb
andl
cmp
or
jae
jg
cmp
test
and
cmp
imul
aad
retw
mov
ja
jle
out
loopne
loopne
jg
mov
fimull
lret
es
inc
add
je
jle
data16
mov
ret
pop
sub
mov
cmpsb
out
cmp
push
mov
test
and
xor
xchg
fsubr
cwtl
jl
mov
out
cwtl
stc
sarl
mov
std
mov
fstpl
dec
fs
test
icebp
repz
pop
pop
iret
dec
cli
push
shll
lcall
bound
mov
inc
dec
xchg
xchg
js
dec
test
in
iret
popf
jns
loop
dec
insl
or
and
and
add
jle
testl
scas
mov
dec
and
mov
pop
cmp
cmc
xchg
popa
xlat
jne
jge
adc
xchg
repnz
ret
xchg
jnp
xlat
pop
out
daa
scas
mov
dec
mov
ds
daa
pop
dec
xor
xchg
sti
dec
cld
mov
pusha
lahf
inc
daa
sbb
shrl
mov
sub
sbb
mov
mov
sarb
adc
or
pop
push
or
loope
dec
xchg
pop
jae
lods
arpl
ss
sbb
je
xor
mov
out
std
cmp
cmpsb
outsb
lcall
fnstsw
aam
inc
jbe
lea
mov
cmp
rorb
push
fildll
jne
shll
push
das
dec
pop
lock
add
mov
pop
xor
inc
push
jl
jo
movsb
pusha
mov
int
push
jne
or
cld
pop
add
jle
imul
sbb
out
loope
ficomps
mov
ret
pop
push
dec
inc
xchg
ret
loope
std
mov
popa
fists
nop
sub
cld
in
mov
fldcw
loop
push
mov
xchg
inc
jae
pop
mov
mov
dec
movsl
dec
cmp
fdivrl
mov
fadd
add
xor
cmp
test
sub
pop
lret
mov
cmp
lds
data16
and
pop
scas
scas
shlb
cmpsl
out
xchg
adc
out
inc
ss
scas
pop
or
imul
cli
addr16
sbb
fisttpl
ds
and
les
mov
push
pop
fnstenv
push
stos
dec
jp
mov
xor
inc
pop
int
cmpl
and
aas
int3
int
push
mov
pop
inc
dec
pop
add
scas
xor
notb
aaa
stos
ss
loopne
cld
out
clc
mov
pop
ret
outsl
movsl
add
dec
dec
cmp
cmpsb
mov
gs
idiv
das
or
cmpsl
roll
mov
pop
gs
pushf
xchg
push
mov
popl
into
rclb
push
mov
int
sahf
pushf
mov
cld
dec
popa
sbb
stc
push
out
inc
add
mov
out
mov
into
add
cwtl
push
dec
cmp
out
mov
fld
lea
or
cmp
or
mov
outsl
test
lods
push
sahf
push
cld
or
pop
stos
iret
mov
or
cmp
or
sarb
js
jp
fiaddl
das
or
loope
mov
cmpsb
mov
lcall
shr
inc
aam
or
push
shll
into
repz
inc
xor
fmull
pushf
jb
and
mov
pusha
jns,pt
movsb
js
jge
mov
or
mov
lea
inc
dec
jne
mov
jmp
out
mov
push
add
daa
data16
pop
fldl
incb
outsb
xchg
hlt
inc
mov
movsb
or
dec
mov
shl
sub
gs
ja
out
repz
sub
push
push
in
jo
movl
or
sub
mov
insl
rolb
mov
mov
and
inc
mov
call
stos
xor
push
pop
inc
mov
sub
in
pop
mov
out
jae
sbb
mov
push
push
mov
pop
sub
in
push
popa
orl
das
stos
cmp
mov
and
cmc
rorl
inc
or
pop
ficoml
push
out
xchg
fwait
xor
and
pop
mov
or
roll
mov
xchg
imul
pop
pop
sub
arpl
push
js
dec
jbe
js
add
pusha
mov
insb
pop
shrl
mov
or
cmp
inc
mov
or
aad
imul
daa
sub
push
push
sbb
imul
add
xor
fldenv
mov
lret
ret
int
push
loope
jae
mov
lret
adcb
mov
je
test
xchg
xchg
mov
and
out
stos
out
jnp
adc
adc
lock
jnp
push
mov
or
and
mov
add
or
repz
aam
xor
mov
andb
lods
sti
iret
sbb
add
imul
cvtps2pd
popa
pusha
aad
jno
nop
or
and
mov
mov
push
ret
stos
das
cmc
jns
lcall
test
cmpsl
sbb
ljmp
int3
out
arpl
inc
bound
push
ret
xchg
mov
incl
arpl
int3
insb
push
jno
enter
sbb
mov
int
lods
lret
call
mov
shlb
pop
es
and
xchg
inc
sbb
cmp
xor
xchg
jae
xchg
push
fadds
dec
xchg
jb
mov
in
sub
test
jmp
mov
pop
mov
dec
jle
and
jnp
add
mov
mov
or
mov
mov
jmp
shlb
mov
mov
cmpsl
daa
adc
adc
pop
addb
jns
mov
roll
aam
pop
movsb
daa
rcl
mov
fsubp
rcl
scas
push
mov
cmpsb
stos
mov
rclb
push
or
jbe
mov
push
fisttpl
cld
mull
aaa
das
dec
arpl
lock
mov
pop
mov
push
inc
inc
sub
adc
xchg
out
out
clc
subl
popf
jae
incb
adc
sahf
cwtl
dec
icebp
aas
mov
mov
pusha
sarb
adc
fstl
dec
add
adc
std
xor
xor
sbb
loopne
xchg
inc
sub
xchg
enter
push
xchg
enter
xchg
test
subb
xor
cmpsl
mov
sub
cmpsb
sbb
in
mov
push
jge
or
jne
and
popa
mov
push
dec
inc
sub
and
mov
addr16
mov
into
mov
adc
arpl
dec
imul
sti
pop
jno
daa
sbb
mov
sbb
ljmp
movsb
add
ret
imul
mov
stos
cld
inc
pop
jecxz
or
popa
cmpsl
sbb
movsl
insb
jo
lds
inc
sbb
xor
mov
movsl
adc
pop
in
cwtl
roll
mov
lock
sbb
in
test
and
fiadds
dec
mov
xchg
pop
popf
shll
aam
aam
add
push
cmp
ret
cmp
cmp
out
sbbl
add
xchg
clc
pop
ret
pop
mov
aas
sbb
test
call
mov
push
jle
sbb
or
mov
cmp
xor
add
es
mov
je
repnz
mov
test
push
pushf
push
adc
bound
fsubs
mull
or
jnp
jb
jmp
stc
subl
dec
hlt
pop
subb
pop
mov
mov
inc
inc
lods
sub
loope
xlat
lret
mov
mov
jmp
mov
cli
or
xor
pop
in
in
test
lds
arpl
pop
xchg
nop
ss
cmpsl
test
out
xor
dec
ds
aas
xchg
psubw
mov
adc
mov
cmpsb
arpl
push
cmp
in
addb
jmp
shll
jmp
jb
mov
mov
int
addr16
add
ficoms
ds
shll
imul
call
data16
fwait
addr16
lds
pop
sahf
push
sub
jne
mov
clc
xchg
pop
lds
cld
icebp
pop
mov
inc
int3
or
ljmp
out
test
push
icebp
sbb
js
pop
and
push
int
test
cltd
jl
cwtl
mov
inc
cmp
jp
sbb
push
pop
xor
dec
dec
scas
xor
inc
andl
push
mov
mov
mov
movsl
hlt
mov
mov
inc
xchg
xor
insb
pop
outsb
daa
mov
into
shl
pop
call
xor
mov
xlat
fidivs
cwtl
pop
scas
jne
mov
shlb
test
inc
dec
mov
pushf
lahf
sbb
mov
lret
pop
repz
cmp
push
mov
push
mov
mov
jp
push
mov
lcall
ret
jp
dec
icebp
enter
push
jp
test
pop
xchg
dec
in
push
pop
inc
cmp
jae
test
insb
pop
cmpsl
mov
lret
sbb
add
movsb
jmp
mov
movsb
mov
mov
mov
lcall
sbb
mov
cmpsl
data16
nopl
xor
fdivl
data16
aas
cmp
xchg
add
fs
loopne
xchg
shr
sti
jmp
cwtl
pop
inc
cli
xor
cmp
imul
scas
insb
loop
inc
xor
rorb
rclb
inc
scas
jns
push
push
addr16
fsubl
inc
mov
pushf
inc
jp
popf
xchg
sbb
call
lea
push
rorl
push
mov
add
scas
adc
lahf
int3
dec
pop
cmpsb
mov
dec
sub
dec
sbb
xor
inc
xorl
addr16
push
mov
daa
add
lcall
in
inc
cmc
test
sbb
add
cmpl
push
xor
mov
sarl
jg
jecxz
jnp
xchg
pusha
imul
pop
int
std
push
cltd
inc
rclb
ret
pop
mov
rolb
jae
jle
addr16
stos
lcall
sub
scas
pop
xchg
scas
or
jle
push
test
test
loope
repnz
mov
je
pushf
mov
stc
rclb
arpl
adc
push
xchg
rsqrtps
ss
idivl
ljmp
fnsave
daa
psubusb
jae
mov
gs
vpcmpgtw
xor
imul
insb
loope
sbb
mov
cwtl
dec
aad
notl
jae
cltd
and
pop
fidivrl
or
mov
adc
jecxz
pop
sub
xchg
int
cmp
es
xchg
mov
push
std
icebp
xchg
imul
movsl
rcll
mov
ret
push
sub
push
pop
pop
pushf
xlat
push
xchg
imul
sub
inc
adc
push
faddl
cmpsb
icebp
or
out
fcmovbe
nop
and
add
xchg
sub
and
push
cwtl
fstl
shlb
xchg
mov
mull
fs
jmp
xor
scas
mov
sti
push
jecxz
bound
and
fwait
adcb
dec
rcl
jns
testl
cld
add
call
adc
adc
ljmp
jae
movsl
xor
add
dec
sub
xor
lods
adc
lods
xor
and
jp
cs
adc
das
inc
xor
pop
ret
test
mov
mov
cmp
test
pop
ljmp
scas
pushf
enter
incb
mov
mov
repz
rol
arpl
into
aam
mov
and
bound
sub
jo
sarl
xchg
test
add
adc
jbe
mov
lods
popf
mov
mov
cltd
inc
outsb
cmp
xchg
mov
fdivl
adc
mov
cltd
rclb
xchg
pop
or
dec
lahf
pushf
mov
push
aam
stc
xchg
mov
mov
adc
inc
loope
jo
dec
push
jmp
sub
fwait
out
jge
out
into
lret
adc
shll
add
cltd
popa
jle
sbb
add
lock
inc
or
fwait
loope
das
and
push
fstpl
cwtl
in
mov
jle
jno
xor
pop
vmovsd
and
inc
push
jb
push
and
xchg
xor
push
testl
xchg
jmp
js
nop
dec
in
jb
dec
mov
sbb
sub
out
mov
add
xchg
jmp
mov
mov
inc
or
movsl
xchg
insl
and
test
data16
jo
push
add
mov
sub
mov
imul
pop
push
jno
xor
xchg
stc
ret
rolb
or
lcall
lods
jo
iret
cmpsb
sbb
test
shrl
adc
fists
jne
mov
push
push
push
imul
pop
push
mov
insb
fs
sbb
mov
add
loope
push
inc
inc
lcall
inc
repnz
sti
dec
movsb
int3
lds
unpckhps
adc
mov
jo
adc
push
repnz
jb
shll
jne
fisubl
in
call
adc
xchg
sub
push
testl
cld
pop
test
loopne
test
loop
mov
adc
outsl
sub
cmc
push
xchg
xchg
sbb
mov
cmp
push
push
test
movsb
loopne
add
xchg
in
sub
pop
dec
pusha
xchg
insl
scas
xor
movsl
cmp
arpl
and
jno
xchg
dec
repnz
add
adc
jno
push
jp
rcr
push
xor
mov
mov
rorl
mov
icebp
dec
fisttpll
pop
insl
fisttps
cvtdq2ps
fwait
call
sub
loope
in
into
sbb
daa
lcall
pop
xchg
negl
sub
pop
mov
dec
push
pop
sub
lret
aas
outsb
mov
cmpsb
sub
cld
push
test
pop
rolb
int3
cmpl
das
mov
jmp
push
rorb
adc
inc
das
mov
and
or
cmpb
lds
cli
ljmp
mov
pop
pop
or
ss
popa
imul
xlat
movsl
dec
xchg
add
cmpsb
sub
jmp
insb
mov
negb
leave
movsl
mov
push
orb
imul
mov
stos
fscale
dec
dec
rolb
sar
rorb
sbb
add
adc
ljmp
mov
movsl
int
fisttps
inc
fcmovb
inc
mov
sub
and
in
into
jmp
mov
push
and
stos
mov
fsub
xlat
sub
sbb
int
xor
mov
xor
pop
jb
inc
iret
mov
ss
mov
sub
pop
adc
mov
enter
imul
mov
cs
outsb
inc
pushf
cmpsl
in
out
shl
xchg
cli
popa
cmp
ss
jge
sbb
testb
in
jl
push
sub
push
scas
in
jecxz
cli
cltd
adc
repnz
test
inc
and
sub
pop
mov
mov
cmp
ljmp
outsb
enter
insb
nop
or
outsl
aam
leave
mov
std
push
push
insl
sbb
mov
out
push
dec
lods
dec
pop
sub
fiaddl
pop
imul
sub
fsubrs
lret
sbb
mov
and
xchg
sbb
pop
fcomi
fisubl
test
and
std
push
xor
testb
pusha
mov
mov
mov
adc
sahf
es
mov
call
cmpb
push
pop
loope
sub
sar
or
sahf
cmp
cmpb
rolb
mov
lea
fisttpll
or
lret
aaa
or
pop
outsb
mov
js
mov
pop
mov
sbb
pop
ljmp
fistps
or
data16
call
leave
icebp
adc
lret
add
aaa
stos
les
add
or
push
mulb
sub
es
mov
test
dec
sti
inc
pop
test
arpl
xchg
daa
cmp
test
cmp
dec
push
fsubrs
repnz
push
out
or
pop
push
or
fisttpl
das
or
pop
movsb
sub
push
cmpsl
sti
fstpl
jge
and
xchg
addr16
mov
testb
jbe
jb
push
push
adc
sbb
or
div
mov
hlt
sub
mov
jo
dec
das
popl
movsb
push
xchg
js
xlat
add
mov
cmp
jo
adc
jecxz
mov
or
outsl
inc
shll
cmp
xor
adc
jo
pop
mov
outsl
jge
inc
test
and
sbb
std
push
xor
mov
pop
ret
add
call
add
sbb
cmc
lret
imul
adc
std
adc
popa
sub
cld
adc
add
or
push
daa
nop
xchg
cwtl
jns
lea
inc
jnp
mov
rolb
lds
cmpsb
test
push
subb
push
push
jnp
insl
add
cld
inc
mov
shrb
dec
ljmp
fstps
into
lock
xor
sbb
xor
in
inc
fwait
es
imul
daa
lea
mov
sbb
mov
fs
jnp
xchg
movl
push
mov
jge
add
xor
and
data16
andl
inc
and
paddw
insb
into
xor
and
mov
jbe
inc
or
pop
idivl
addr16
cmc
dec
jge
loope
cwtl
jmp
orl
sbb
adc
xchg
jbe
jne
ret
adc
pop
mov
mov
cmp
roll
inc
xor
in
js
and
outsl
xchg
mov
aad
lock
rorl
imul
das
out
enter
jp
std
fisttpl
lea
idivb
shll
mov
loope
cs
and
mov
cli
pop
out
inc
dec
mov
jle
popa
sub
lcall
fs
sbb
das
loop
fiaddl
notl
jb
xor
push
cltd
adc
mov
cmp
mov
pcmpgtw
or
mov
fimuls
stos
push
pop
xchg
dec
in
jns
cmp
fistpl
inc
or
test
xchg
pop
and
out
sbb
rcll
add
mov
adc
sub
cltd
loop
arpl
lret
cltd
mov
aam
mov
ficoms
ret
and
orb
jb
cmp
pop
ret
sti
iret
aaa
out
cmp
sahf
aad
inc
pop
shr
aam
add
daa
xchg
add
lea
inc
pop
and
sub
add
sub
sbb
adc
lods
sar
les
and
dec
jg
xchg
xor
in
xor
pop
incl
xor
pop
fimuls
dec
adc
or
mov
les
imul
mov
fldcw
push
or
mov
cltd
xchg
dec
outsb
or
and
in
fs
sbb
xchg
std
jmp
fbld
mov
pushf
jecxz
repz
push
xchg
outsb
xchg
mov
dec
jns
je
sbbb
jae
lcall
repnz
js
sub
pop
sub
add
popf
cmp
and
adc
add
xor
test
inc
push
and
pushf
out
inc
shll
xchg
sub
sbb
mov
jno
mov
sbb
cwtl
inc
pop
out
out
pop
cmp
jno
cmp
aaa
inc
and
out
out
outsl
xchg
add
ds
xchg
enter
xor
stc
popf
push
fsubr
sahf
hlt
jno
ja
mov
subl
flds
mov
or
pushf
jg
leave
pop
addr16
cmpsl
jecxz
inc
or
xlat
pop
jle
pop
test
push
xchg
aas
scas
cmp
fadd
repnz
or
mov
push
add
jle
in
dec
push
adc
mov
pop
imul
pop
mov
inc
sub
xchg
mov
insl
jmp
xchg
jno
jne
mov
pop
inc
mov
aam
push
mov
xchg
mov
pop
mov
out
imul
loopne
call
out
xor
test
adc
push
jecxz
mov
test
gs
ja
cld
push
jne
es
xor
shll
jne
pop
enter
xor
xor
push
pop
and
or
pop
stos
xor
pusha
xlat
sbb
dec
imull
out
sub
push
pop
into
lds
repz
cmp
dec
and
push
aas
jnp
aas
inc
mov
inc
and
inc
sub
cmp
iret
popa
jns
std
mov
and
fisttpll
inc
jbe
push
lds
fwait
mov
nop
xchg
mov
and
imul
xchg
xor
rclb
or
dec
roll
sub
pop
xchg
test
mov
dec
jns
sahf
test
inc
les
ror
pusha
inc
dec
int3
or
and
ss
xor
sub
in
sub
inc
sahf
lods
mov
shl
adc
addl
push
js
inc
sbbl
ja
stc
loope
mov
les
aam
sub
mov
push
inc
pop
inc
jge
cld
aam
fsubrp
pop
imul
and
sbb
fmuls
lret
mov
mov
insl
les
cmp
pop
dec
loopne
mov
add
cld
std
xchg
mov
lods
aas
lcall
nop
dec
adc
fldenv
jb
out
shll
call
xchg
ficompl
inc
mov
outsl
shl
push
xor
mov
inc
cmp
cmpsl
or
sbb
mov
push
popf
and
popa
inc
sbb
movl
mov
int3
inc
mov
orb
in
ds
jecxz
mov
dec
sahf
ljmpw
clc
or
daa
and
shll
nop
push
dec
xchg
scas
lahf
jecxz
cmp
inc
hlt
out
pop
xchg
lahf
mov
cli
adc
mov
in
sub
sub
mov
int
xchg
cmp
jno
cli
int3
pop
push
std
lea
jns
out
dec
sbb
addr16
jbe
jp
divb
js
hlt
inc
adc
fidivrl
in
mov
xchg
or
shrb
int3
mov
and
xchg
cmp
xor
mov
jns
mov
xchg
dec
xlat
mov
fidivrs
in
pop
cmp
addl
cld
xchg
daa
xor
out
je
fstp
add
test
xor
movsb
jecxz
fidivs
in
xor
mov
outsl
popa
outsl
fadd
sbb
test
mov
xchg
and
xchg
shll
xchg
mov
sbb
jo
cli
stc
mov
imul
leave
inc
leave
aas
stc
mov
jbe
mov
mov
jo
jle
rolb
icebp
pop
xchg
cmp
iret
in
xor
pop
jle
mov
insb
jne
add
and
adc
cmpsb
fists
ret
int
divb
xchg
sbb
mov
orl
cmp
pop
pop
cmp
mov
imul
jnp
or
adc
shl
cmpsl
or
mov
sub
inc
cmp
mov
inc
in
dec
jge
add
aas
fadds
jmp
xor
outsb
ss
pusha
sub
jo
mov
or
int
xor
xor
xor
jno
ret
cmpsl
mov
shlb
ljmp
add
add
std
stos
pop
pop
jbe
es
inc
or
pop
mov
jl
ret
js
jne
je
xchg
pop
fsubrl
mov
and
fisttps
cmpsb
mov
ffreep
inc
out
jne
arpl
mull
fimuls
insb
je
push
shlb
mulb
jo
in
movb
into
mov
cmp
rcrl
sbbl
insb
and
xchg
pop
and
daa
push
insl
xchg
xor
fsubrl
inc
mov
insb
cmp
xor
pop
pop
std
test
mov
rcll
mov
cs
dec
ret
cmp
cmp
insl
push
loope
or
adc
or
cmp
lods
pop
jge
add
pop
and
lret
fdiv
movsb
sbb
shll
lahf
xchg
cmp
push
add
dec
xor
add
pop
mov
mov
cmp
or
mov
jb
ret
add
fiadds
lret
adc
and
sub
mov
xchg
push
pusha
xor
pop
cli
hlt
cmc
roll
inc
mov
std
jb
shl
addr16
fldt
adc
andl
and
jo
lahf
xor
inc
dec
inc
incb
add
aam
test
and
mov
cmp
bnd
cmc
jo
mov
mov
repnz
addr16
call
stc
and
push
sti
dec
sbb
jg
and
dec
dec
add
mov
sahf
gs
cmpsb
fcompl
push
inc
std
leave
shlb
push
pop
into
jbe,pn
iret
mov
dec
cltd
lahf
mov
push
pop
dec
rorl
popf
fldl
es
stos
and
stos
dec
pop
mov
das
rcll
dec
and
sarl
leave
dec
movsl
nop
cmp
pushf
dec
cs
lahf
fidivl
add
mov
adc
insl
push
and
call
sbb
push
cmc
and
dec
data16
add
fstpl
rcr
adc
add
hlt
ss
pop
sbb
or
ficoms
mov
out
xchg
push
mov
pop
lock
and
movsb
mov
mov
cli
cmp
jecxz
inc
jle
nop
addb
jbe
mov
lods
mov
js
jmp
popf
jecxz
xchg
les
pop
jne
lock
mov
xor
xchg
movsb
mov
out
popf
mov
stos
ss
das
push
adc
out
mov
sub
cmp
and
shrb
xchg
scas
cmp
in
jnp
les
data16
pop
mov
sbb
cmp
js
fs
add
sbb
sahf
imul
int
lods
into
pop
dec
xchg
addl
popa
aas
outsl
xchg
mov
mov
lret
jae
leave
xlat
je
jl
xchg
push
mov
pop
stc
add
and
mov
mov
sahf
xchg
fwait
int
jg
je
cltd
ret
pop
jle
sbb
fwait
in
orl
mov
addr16
fdivrl
jl
adc
lret
sahf
movsl
outsl
sbbl
sub
cmp
fld
outsl
adc
mov
aaa
std
iret
aam
cs
jmp
sahf
gs
jle
pop
xor
js
add
mov
jo
lds
ja
inc
dec
mov
jge
xor
data16
mov
cltd
cs
in
mov
add
dec
xor
out
addb
sti
inc
int
inc
imul
loopne
jecxz
jge
add
cli
push
in
sahf
add
pop
sub
xor
inc
inc
xchg
add
xchg
dec
inc
jge
xchg
or
cmp
mov
push
inc
push
lahf
cmc
mov
push
enter
adc
inc
movlps
cli
sti
adc
mov
lahf
fsubrl
or
sub
mov
and
arpl
dec
call
inc
mov
stos
repz
and
push
fnstsw
rorb
adc
in
mov
aaa
clc
out
cmpsl
inc
aad
pop
inc
es
pop
sti
aaa
or
in
and
aam
aad
and
push
adc
popf
xchg
loope
lret
adc
int
adc
dec
sti
pop
lods
stos
pop
int
addr16
xchg
scas
mov
jae
jmp
inc
sbb
test
ret
mov
xor
in
mov
mov
outsl
aad
movsb
popa
aad
dec
sbb
inc
mov
pushf
fwait
push
enter
cmp
inc
xor
std
ficomps
jge
repz
movsb
cli
cmp
xor
gs
bound
addb
pusha
mov
fwait
dec
lret
xor
mov
cmp
pop
mov
xlat
sbb
jl
mov
pop
or
repz
test
outsl
into
inc
loopne
dec
pop
je
cs
mov
jnp
sbbl
jne
xchg
xchg
lds
cmp
jl
or
pop
sbb
and
or
aaa
pop
out
push
mov
xchg
xor
andps
xlat
mov
cmp
movsb
es
jmp
sahf
rcrl
adc
push
fwait
call
xor
fwait
fwait
ljmp
mov
inc
aad
xchg
pushf
add
out
mov
int3
js
xchg
lock
test
push
ret
xchg
jb
lret
stos
test
es
inc
es
mov
or
xchg
sahf
arpl
mov
cs
lret
push
xlat
jl
insb
mov
out
movsl
stos
xorb
icebp
xchg
mov
xchg
mov
data16
test
shll
movsb
ds
sub
xchg
cmc
mov
sub
and
lds
jne
lods
push
ret
pop
jl
fcmovbe
in
jmp
rolb
jae
imul
pop
pop
jge
lcall
roll
push
fcmovnb
hlt
or
pop
cwtl
inc
aaa
mov
jo
push
mov
adc
gs
mov
cwtl
add
xor
pop
loop
jbe
out
and
dec
or
ficoml
push
addb
fistps
ds
mov
and
cmpsb
or
adc
mov
fwait
push
das
out
into
jp
loopne
shl
cli
pop
jle
andl
cmc
jg
into
inc
push
mov
repz
push
push
jle
adc
pop
and
vpinsrw
push
rcrb
jl
lcall
sarl
sahf
shlb
mov
inc
in
inc
aaa
in
jbe
or
jne
jbe
inc
in
clc
test
inc
lret
dec
sub
or
add
call
ds
fistl
cmp
ds
cli
adc
sbb
sahf
stos
mov
lds
inc
sbb
stos
scas
jecxz
inc
loop
add
fdivr
sbb
psrld
aad
push
movsl
loop
mov
insb
mov
sub
pusha
iret
std
push
inc
fcmovb
cmp
ljmp
movsb
incb
mov
pop
gs
addl
cmpsl
push
or
cmp
std
or
idivb
mull
pop
dec
push
push
out
mov
mov
mov
out
in
mov
lods
adc
setle
dec
int3
lcall
xor
into
adc
lret
in
jns
lret
ret
push
testb
add
jns
cmp
push
xchg
cs
icebp
jecxz
gs
or
leave
xor
add
lods
fwait
xorb
dec
mov
ret
inc
cld
xchg
push
xchg
xor
cmp
fidivrl
jbe
xchg
sub
gs
pop
aam
pop
ret
pop
frstor
jge
xchg
sbb
sub
in
sbb
fstps
test
mov
push
xchg
test
sub
mov
jecxz
add
out
sub
adc
jne
inc
and
push
insb
lret
sbb
push
pop
aaa
stos
icebp
pop
loopne
add
call
sub
ja
lret
scas
cwtl
in
aas
nop
out
push
push
pop
movl
xchg
incb
insl
call
lcall
test
or
inc
pop
repz
jne
out
or
pop
fdivl
ret
jg
and
jno
roll
xchg
dec
mov
xchg
add
push
ja
clc
lcall
push
push
ret
xor
popf
mov
push
cmp
sbb
jp
rorb
lret
jmp
bound
mov
mov
push
push
outsb
ds
mov
cmpsl
pop
outsb
push
je
out
bound
popa
lea
cs
cmpsb
popf
jae
and
mov
or
pushf
repnz
addr16
icebp
cltd
xlat
adc
divb
sbb
adc
icebp
lahf
popf
or
cmp
in
and
dec
mov
bound
fucom
xchg
adc
lods
cmp
jne
jae
popf
mov
inc
and
mov
pop
pop
push
push
xchg
mov
fisubrl
pop
loop
pop
sub
xchg
ret
sbb
jmp
fs
sbb
lds
mov
nop
call
cmp
popa
xchg
daa
jae
mov
dec
sbb
fsubrs
cmp
test
lds
ret
xchg
repz
pop
mov
jno
push
mov
cmc
sub
push
or
or
sbb
sahf
jns
jecxz
xchg
pusha
data16
mov
leave
notl
cmp
xchg
mov
movsl
xchg
les
orw
adcl
inc
stos
pop
mov
sub
sub
jb
sbb
ljmp
in
adc
inc
mov
pop
in
leave
cli
sahf
sub
test
mov
and
pop
dec
dec
push
int3
lds
and
pop
pusha
sbb
data16
inc
insb
ja
loop
and
adc
inc
ja
inc
adc
ret
jb
pop
or
push
sub
dec
gs
jmp
sti
inc
fiadds
pop
lcall
aam
imul
int
std
sub
mov
mov
cmc
stos
cli
dec
dec
jecxz
or
xchg
sbb
bound
mov
das
jb
and
mov
or
mov
cmp
stos
popf
lds
sub
push
jno
inc
xor
pop
clc
stc
xchg
int3
enter
aad
push
xchg
mov
imul
mov
repnz
ret
push
jmp
cmp
jg
mov
insl
outsb
adc
adc
stos
cmp
xor
lcall
ljmp
popf
in
ss
dec
test
fists
test
sahf
and
xor
sti
mov
ds
loop
fnsave
xchg
std
repz
mov
rcl
das
into
dec
push
addr16
pushf
testl
pop
cmc
mov
jmp
mov
loope
xchg
pop
stos
sbb
jo
adc
lret
out
cwtl
out
add
push
inc
mov
loope
pop
repz
lret
out
jo
mov
inc
loop
pop
or
xchg
xchg
lret
adcl
xchg
adc
xchg
in
test
pusha
xchg
leave
push
mov
adc
outsl
dec
jmp
cmpsl
gs
test
xor
pop
jg
test
call
ret
fistpl
inc
sub
fidivl
pop
dec
sub
jbe
subl
fwait
iret
and
data16
data16
mov
lret
mov
mov
pop
pop
mov
in
push
adc
cmp
cmp
cmpsl
cmpsl
mov
mov
lods
pop
dec
repnz
out
mov
sub
add
in
in
adc
jge
imul
sbb
loop
push
out
out
out
aaa
and
xchg
mov
cmc
mov
insb
mov
pop
push
push
xchg
out
cli
cltd
xor
or
inc
inc
shr
dec
cltd
push
xchg
xlat
pop
or
pop
lahf
test
mov
dec
or
mov
mov
mov
pop
mov
or
testl
jge
fildl
or
xchg
xchg
in
pop
ss
cmc
sbb
or
xor
lcall
arpl
xchg
or
in
das
inc
mov
fiadds
add
dec
xor
and
jmp
in
sti
das
fistl
negb
int
aam
inc
sub
int3
aaa
test
add
dec
fnstsw
aaa
sub
in
inc
jmp
lret
push
movsl
cmp
es
jp
js
dec
divl
stos
mov
cmp
sarb
in
adc
repz
dec
xchg
push
into
in
xor
in
mov
imul
scas
gs
adc
jae
sbb
ljmp
call
mov
in
jns
adc
cmp
outsl
push
mov
mov
lods
daa
xchg
and
fists
mov
add
bound
xor
jae
shr
and
cmc
dec
inc
and
push
dec
daa
jo
lods
mov
xchg
movsl
iret
jg
xchg
xchg
iret
in
in
push
fnstcw
push
insb
aaa
je
shrl
jecxz
leave
mov
and
sbb
add
cmp
add
xor
out
mov
lcall
mov
lret
sub
inc
inc
push
outsb
mov
lret
pop
dec
mov
in
and
leave
sub
add
sbb
xor
cli
sarl
cmp
mov
subb
jnp
pop
pop
and
jge
push
out
xor
out
mov
frstor
mov
cld
mov
in
test
cmc
rorl
mov
cmc
inc
hlt
mov
push
fsts
mov
test
scas
mov
sub
je
fbld
idiv
divl
fistpll
sub
nop
jl
rol
jbe
lahf
js
mov
push
out
push
mov
pushf
pop
jge
jnp
insl
stc
dec
xchg
out
inc
jnp
hlt
rorb
ret
xchg
inc
cmp
mov
hlt
jl
daa
sti
gs
xchg
call
cs
imul
lret
negb
pop
lds
or
imul
rcll
cmpsl
sbb
xchg
fistl
adc
mov
mov
xchg
sarl
aaa
ret
push
jg
mov
scas
mov
ds
mov
add
leave
fldlg2
and
fisubs
in
jmp
xchg
xchg
insb
test
or
jle
testl
jbe
out
add
movsb
jns
mov
xor
xchg
jg
jmp
and
in
inc
lock
mov
arpl
xor
clc
into
inc
mov
xchg
fistpll
xchg
sbb
and
insl
clc
in
popf
ficoms
rcll
fs
clc
pop
lea
xor
cmc
sbb
or
icebp
insl
cmp
xchg
push
adc
sub
jbe
pop
insb
jp
and
and
aas
imul
pop
xchg
push
or
dec
or
std
xchg
les
adc
pop
pop
out
push
cmp
into
imul
xor
mov
mov
dec
pop
lds
inc
jecxz
xchg
mov
rorl
lcall
fs
inc
xor
xor
shl
mov
rep
cs
xorb
out
mov
dec
in
lret
adc
dec
cmp
iret
cmp
jmp
mov
lcall
inc
and
or
jbe
in
push
ret
insl
pop
insl
fnstenv
in
les
adc
add
popf
dec
leave
shll
lods
stos
xor
jle
les
dec
xor
in
inc
add
loope
leave
cmp
enter
xchg
mov
and
mov
mov
mov
adc
aaa
lea
pop
test
scas
mov
lea
loop
imulb
sub
stos
int3
std
insl
lds
mov
cmp
into
sbb
cmc
lds
cmp
hlt
mov
int
sbb
or
inc
cmp
out
leave
sbb
inc
or
push
sbb
pop
das
iret
mov
xchg
neg
pushf
and
mov
dec
and
js
ret
enter
add
repnz
dec
pop
out
in
ds
ds
stos
fstps
les
jl
pusha
xorl
popa
lcall
push
stc
jmp
or
aam
inc
mov
mov
ret
je
int3
dec
pop
adc
mov
ds
test
cmp
mov
lods
mov
jp
and
testb
jle
cmp
ret
jne
mov
lods
scas
bound
call
pusha
and
cld
xchg
lcall
out
mov
loope
mov
pop
inc
cmp
mov
imul
or
xor
lock
jle
aam
ss
les
mov
sub
pop
insb
mov
xchg
push
mov
shl
pushf
xor
or
jg
mov
stos
mov
scas
sub
dec
outsb
insb
repz
test
jp
jbe
push
fisttpl
pop
xorb
or
jb
insl
les
bound
aad
pop
inc
mov
pop
pop
addl
pushf
insb
decl
test
mov
adc
jo
add
rcl
aas
mov
std
push
and
call
mov
mov
mov
stos
nop
in
sub
and
add
dec
pusha
jmp
dec
mov
inc
movsl
nop
adc
lds
jno
daa
fldenv
jb
outsb
fwait
xlat
push
popa
xor
arpl
mov
xchg
push
ss
inc
sub
push
enter
inc
mov
cs
lea
dec
push
hlt
popa
pusha
addb
in
nop
cli
bound
std
pop
daa
push
dec
stos
push
insl
mov
repz
sbb
pop
fmul
and
out
rcl
shll
xor
adc
dec
sub
mov
jae
jb
add
sbb
fcoml
xchg
fst
movsb
jbe
xor
hlt
sbb
xchg
mov
xor
test
movsb
xor
inc
or
arpl
adc
dec
push
pop
sbb
sahf
addb
inc
add
adc
push
clc
fistl
and
adc
mov
xchg
fstl
pop
je
fsts
mov
ljmp
push
jge
les
sub
inc
push
jmp
jecxz
test
je
sub
add
daa
lahf
mov
dec
push
js
es
mov
mov
and
js
dec
cmpsb
inc
aam
jg
sar
add
push
pop
sub
adc
mov
cli
jge
add
notl
inc
mov
lret
push
and
lcall
ds
mov
inc
xchg
sahf
subl
iret
cmp
adc
enter
into
and
dec
cmp
sub
cmpsb
mov
mov
adc
cmp
ja
lret
xchg
lods
mov
dec
cmc
jg
jo
mov
or
add
mov
pusha
int3
clc
xlat
mov
jmp
lods
into
fbstp
mov
add
cmpsl
sbb
retw
ret
hlt
cmp
mov
leave
pop
sarb
and
mov
inc
test
push
add
pop
mov
mov
mov
cmp
jne
shll
add
mov
mov
mov
pop
lahf
mov
push
jecxz
lcall
shll
adc
sbb
sti
pop
inc
fcoml
push
daa
dec
movsl
test
adc
xor
xchg
aaa
ljmp
mov
test
out
loope
ret
xchg
add
cltd
ficomps
xlat
or
bound
pop
aad
fdivrp
repnz
xor
jbe
and
add
dec
in
sub
lds
bound
jnp
mov
addr16
inc
cwtl
cmp
jb
cmpsl
xor
ret
insl
adc
stos
add
mov
adc
mov
shr
or
mov
lds
hlt
arpl
fidivl
ja
dec
cmp
jno
aad
out
dec
adc
add
adc
xchg
repz
xor
jo
mov
ret
stos
cld
pushf
aas
lock
movsl
pop
mov
lods
fsubl
lock
jnp
or
inc
mov
add
adcb
test
jae
ja
sub
xchg
pop
inc
xchg
cwtl
nop
ss
and
in
movsl
pop
sahf
jecxz
mov
add
jae
in
repz
in
or
adc
add
pop
pop
push
outsl
aad
xchg
sub
xchg
and
xchg
shll
mov
repz
add
dec
test
repz
cld
inc
out
mov
stc
aad
daa
push
inc
cltd
in
cmp
push
idivl
out
pusha
push
aam
pop
pop
gs
daa
lock
jb
repnz
mov
jne
or
icebp
cmp
arpl
mov
out
aam
xchg
xchg
xchg
repz
mov
cmpsl
mov
inc
in
mov
cmp
inc
hlt
xchg
les
mov
stos
add
popa
iret
loope
call
icebp
jle
add
mov
mov
mov
sub
push
cs
push
mov
push
jge
push
adc
mov
fstl
into
adc
jecxz
sbb
test
outsb
and
inc
scas
fs
sbb
pushl
adc
cs
jae
iret
mov
adc
sub
cs
out
negb
dec
addr16
jmp
js
lcall
jecxz
or
inc
mov
clc
das
cmp
clc
jl
cmp
push
sbb
dec
xchg
lcall
insl
shll
adc
lds
ds
xchg
push
dec
fwait
mov
popa
into
add
push
outsb
or
out
dec
lcall
mov
std
jne
call
mov
cmp
es
loope
hlt
dec
aas
dec
fwait
add
mov
lret
mov
or
push
mov
pop
mov
stc
pop
fwait
xchg
pop
fldenv
xor
lea
ja
cmp
pop
mov
lahf
sub
sbb
sub
pop
jno
fnstcw
aam
out
sbb
sub
sub
push
sub
xchg
xchg
add
mov
sarb
xorl
cmp
xor
out
rcrb
inc
imul
repnz
mov
sbb
sub
sbb
mov
push
nopl
jno
jl
dec
testl
fists
sbb
inc
repz
sbb
aam
imul
bswap
jecxz
aam
and
dec
adc
xchg
xchg
call
out
dec
sub
in
ret
mov
shlb
aaa
movsl
bound
sbb
mov
mov
ss
or
cwtl
pop
fcmovnbe
ja
ret
dec
dec
ljmp
std
inc
je
pop
call
jmp
inc
dec
push
movsb
hlt
aad
push
aad
adc
inc
jl
and
aad
js
jnp
sub
mov
mov
outsb
mov
jl
nop
sub
fwait
inc
inc
pop
out
mov
sub
neg
repnz
mov
or
sub
fnstenv
sbb
sti
sahf
sbb
lods
sbb
jno
pusha
xchg
es
divl
jg
clc
sahf
pop
repz
ljmp
out
xchg
sub
jmp
xor
movsl
enter
pop
pop
in
fdivrl
imul
cwtl
pop
bound
xchg
xchg
aam
pusha
arpl
pop
ds
pop
push
cmc
outsl
xor
gs
inc
xchg
or
inc
cwtl
and
call
xchg
pusha
mov
aaa
fimuls
mov
xor
loop
xchg
andl
add
or
push
out
xchg
or
sub
push
adc
cs
pop
sbb
ljmp
loope
pop
addb
loopne
int3
cs
and
loopne
test
and
and
dec
dec
in
inc
std
xor
popa
popf
mov
jp
in
sbb
cmp
scas
sub
push
cmpsl
inc
dec
test
iret
stos
xchg
xchg
dec
sub
out
mov
lahf
sbb
mov
mov
pop
mov
lret
xchg
cmp
xor
outsl
ds
cld
jle
sub
jmp
mov
mov
fimull
sbbl
cmp
out
stc
and
and
adc
add
gs
testb
pop
stos
xchg
loope
xor
pop
std
jo
ljmp
pop
mov
lahf
ds
sbbl
repnz
or
pop
jns
jb
and
fidivs
test
xlat
leave
sbb
mov
pop
lock
rcrb
sub
pop
mov
inc
daa
push
xor
sub
mov
stos
pop
adc
mov
mov
orl
adc
loope,pt
jno
jge
add
dec
aam
out
mov
call
hlt
push
xchg
xchg
dec
add
push
call
add
hlt
push
sub
mov
push
cld
cmp
mov
pop
push
pop
mov
mov
jmp
lds
les
dec
jl
mov
mov
sbb
xlat
xchg
insl
xchg
mov
inc
sbb
jae
pop
mov
lahf
push
into
imul
pop
sarb
jl
ja
pop
inc
out
inc
push
mov
inc
arpl
xor
add
xchg
mov
fdivr
fwait
inc
movsl
dec
ds
fldenv
jle
xchg
jb
inc
shrb
xchg
insb
pop
cmp
sti
aas
js
mov
xor
cmp
aad
xor
and
sub
inc
je
into
fwait
mov
jns
xor
mov
pop
xchg
imulb
js
adc
jno
mov
xor
lret
jmp
pop
stos
mov
lcall
dec
lods
stos
loop
sahf
mov
dec
sar
adc
mov
sbb
push
shll
inc
mov
shl
stc
divl
arpl
xor
cli
jp
inc
add
or
cmp
repnz
jmp
sbb
and
mov
mov
mov
orl
dec
lcall
xchg
add
push
mov
add
int3
dec
in
in
xlat
mov
orl
xchg
mov
mov
push
mov
insl
mov
out
push
pop
push
inc
add
into
jne
aaa
test
mov
mov
fidivrs
mov
cmc
sbb
mov
push
jno
pop
in
xchg
cmp
mov
test
icebp
repz
fmuls
test
sub
aam
xchg
loope
or
jb
xchg
sti
lods
in
ljmp
xor
js
jbe
addr16
stos
fsubrl
dec
fimull
mov
stos
or
mov
cmp
outsl
inc
jo
ret
push
or
cli
cmpsl
sahf
push
xchg
sub
in
icebp
insl
mov
test
mov
int3
call
jp
cmp
mov
repnz
sbb
sbb
fisubl
ds
shr
mov
lods
test
ret
xchg
das
lds
repz
jp
repnz
mov
xchg
xchg
ret
pop
adc
stc
add
adc
jle
push
add
ss
or
lret
xorb
movsb
mov
lret
mov
aas
iret
cld
adc
js
jge
dec
add
and
mov
sbbl
mov
jp
shlb
orb
jmp
mov
hlt
mov
jb
fs
aam
jp,pn
xchg
jge
dec
fsubr
sbb
stos
xchg
into
insl
cmpsb
aas
or
scas
stc
inc
mov
leave
int3
gs
enter
xchg
scas
lods
cmc
stos
loopne
mov
add
sbbl
mov
call
sbb
test
int3
xchg
les
pop
fnstcw
mov
sarb
sbb
sbb
movsl
jne
out
sub
mov
jno
cmp
and
mov
push
loope
insl
ror
loop
mov
das
adc
jb
jno
jbe
mov
outsb
or
push
dec
add
rcll
jne
test
xchg
data16
xchg
out
outsl
and
std
jge
hlt
push
pop
xor
mov
jmp
mov
xor
cmpsb
pop
das
xchg
push
sub
or
xchg
pop
insl
dec
mov
pop
cmpsb
icebp
repz
cli
loope
push
sbb
cmp
mov
lds
movsb
insb
rcrl
dec
adc
scas
mov
push
int3
ja
and
cli
les
xor
outsl
jg
sub
sub
pusha
cltd
out
imul
xchg
dec
loope
lods
das
pop
das
mov
xchg
imul
push
addr16
jmp
cwtl
push
push
inc
loope
jb
jg
mov
test
dec
cwtl
pop
jb
xorb
xor
cs
test
jge
sbb
xchg
xor
xchg
fdivrs
xor
push
or
xchg
sbb
lret
inc
mov
mov
leave
sti
cmp
jmp
sbb
xchg
adc
scas
outsl
cmp
jne
stc
jnp
and
jge
flds
add
push
sub
jle
es
and
mov
and
inc
pop
mov
insb
mov
out
lcall
cmpsb
jne
daa
popf
and
push
outsb
pop
adc
int3
jb
dec
xlat
jp
repz
pop
cmpsb
rorb
or
shl
mov
mov
xchg
nop
out
stos
in
mov
les
mov
les
pop
arpl
stos
pop
cmpb
es
pop
movsl
sbb
adc
xchg
jg
sbb
std
mov
stos
inc
sub
sub
xorl
sbb
sub
pop
scas
mov
jb
xor
or
outsl
movl
les
xchg
out
andb
std
cltd
xchg
mov
into
jo
scas
ds
mov
mov
jae
stc
ret
dec
dec
stos
rorl
mov
in
pop
push
dec
jl
cmp
lcall
rcll
das
faddl
push
jecxz
rclb
mov
idiv
stc
jge
sahf
icebp
in
rclb
xor
fidivrl
ret
insb
jge
mov
insb
lea
xchg
jo
push
push
fstps
push
in
cmp
movsb
call
iret
fisubrl
xchg
pusha
imul
loopne
in
adc
popf
xlat
jb
out
fdiv
int
pusha
std
push
jmp
mov
jae
jl
and
push
jl
rolb
insb
mov
sahf
jg
int3
lods
test
lret
pushf
stc
ljmp
mov
or
inc
test
bound
iret
inc
lods
sahf
test
dec
or
loop
insb
add
and
pop
cmp
imul
adc
repnz
outsb
lea
mov
daa
out
xor
dec
cwtl
adc
jb
ljmp
add
sbb
fisubrl
xchg
push
insb
add
lock
jbe
pop
sbb
cmp
lods
push
sbb
out
out
enter
loopne,pn
test
adc
push
xchg
daa
fidivl
mov
imul
mull
push
daa
jnp
orl
repz
aad
stos
xchg
imul
xor
jo
jo
fnstenv
cmc
lods
xchg
mov
lahf
imulb
loope
hlt
popa
sbb
js
jl
test
enter
lret
stos
loopne
jae
mov
pop
out
sbb
mov
repnz
andl
out
rolb
je
loop
xchg
rorl
push
pop
std
push
lcall
inc
in
mov
push
inc
notl
and
push
loope
ss
popa
jmp
hlt
pmaxsw
out
dec
popf
push
jbe
cmpsl
cmp
pop
adc
and
jns
cltd
lret
mov
out
dec
add
cmpsl
sub
cmc
or
xchg
mov
into
dec
sbb
call
mov
fstpl
js
sub
out
and
and
add
jl
or
mov
jecxz
sbb
sti
sub
into
pop
sub
movsb
or
js
jno
inc
dec
daa
enter
adc
mov
lcall
mov
xchg
pushf
dec
loop
push
mov
sub
shll
jne
xchg
adc
mov
inc
out
sahf
jbe
scas
push
sub
mov
and
mov
scas
popf
mov
mov
add
lock
or
pop
cmp
scas
sub
push
cmp
int
add
sub
mov
mov
pop
push
ja
mov
psllq
sub
in
pop
iret
sub
dec
cmp
xchg
dec
mov
negb
jnp
mov
cs
dec
pop
into
mov
jg
fnsave
push
popf
push
lret
cld
jmp
and
nop
je
test
pop
outsb
loope
pop
int3
push
aaa
jmp
sarl
dec
bound
mov
lods
addr16
xchg
lods
push
fwait
aas
fadds
test
aaa
add
jge
nop
dec
pop
xchg
repnz
pop
mov
push
and
movsl
lret
movsl
mov
mov
enter
mov
clc
sub
or
dec
scas
xchg
mov
movsl
push
das
xorb
push
xor
add
icebp
addl
bound
loopne
iret
inc
sub
mov
mov
sub
mov
xchg
rcll
pop
lods
dec
add
repnz
and
icebp
inc
lahf
pop
jl
cltd
dec
dec
jae
push
push
inc
cmc
test
xchg
xor
dec
bound
pop
or
sub
loop
or
stos
testl
jle
lcall
scas
xor
cmpsl
out
mov
out
mov
cli
stos
lret
dec
jae
sbb
dec
cmpsb
or
mov
lcall
dec
cmp
or
cmpsb
cli
mov
sahf
inc
je
aaa
sub
and
into
sarb
inc
pop
jo
loop
pusha
push
stc
sbb
xchg
mov
ja
dec
sub
pop
mov
mov
mov
mov
daa
shr
and
sbb
jecxz
xchg
dec
dec
dec
lret
fbstp
inc
push
fmul
stc
add
jnp
mov
mov
pop
test
jp
roll
jae
lret
sub
sub
sub
out
pop
mov
push
mov
scas
movsb
aaa
jb
dec
dec
sbb
clc
pop
in
and
mov
mov
cmp
xchg
je
fmull
push
sbb
ss
movsb
cltd
sub
rcrb
sahf
cld
into
inc
lcall
addb
mov
push
xchg
daa
fisubl
sbbb
das
cs
pop
lds
std
jo
int
jle
lea
jg
xorl
test
in
adc
out
mov
or
sub
ss
mov
mov
repnz
push
les
sub
or
cs
sub
cli
push
push
shlb
pop
xchg
xorb
add
out
lods
fildl
mov
mov
lds
pusha
je
fisubs
fwait
ret
dec
jnp
xchg
test
jp
mov
rcrl
push
jnp
movsb
mov
mov
mov
mov
pop
cltd
or
dec
int3
inc
xchg
stos
out
add
jle
das
pop
sbb
mov
test
outsl
cmp
nop
in
test
fldenv
sbb
adc
inc
mov
inc
add
imul
je
jne
add
and
cmpsb
int3
mov
scas
jae
mov
imul
add
repz
and
xor
mov
ret
shl
cwtl
push
mov
out
sub
test
push
fcmovnb
shrl
js
and
or
and
jno
dec
and
int
mov
pop
pop
add
push
add
mov
cltd
mov
test
push
lret
mov
rcrl
xchg
xchg
cld
ret
pushl
add
lret
or
fistpll
xor
dec
pusha
loop
adc
in
clc
mov
jp
mov
cmpsb
inc
push
in
sub
inc
movsb
sbb
fwait
and
push
add
stc
pushf
std
hlt
aaa
jno
ljmp
xchg
mov
nop
and
out
add
or
push
or
jne,pn
push
sub
es
push
sub
cli
dec
or
dec
pop
repz
inc
xchg
sub
iret
adc
outsl
add
or
jbe
pop
rcl
sub
mov
add
mov
lret
sbb
stc
jp,pt
out
push
hlt
xor
iret
pop
xchg
mov
into
lahf
dec
push
sbb
mov
cmc
lea
mov
inc
sub
les
imulb
mov
jp
or
sahf
xchg
mov
icebp
mov
cmp
filds
in
mov
ret
cli
dec
js
mov
lret
mov
in
mov
addr16
cmp
jne
fs
sbb
pop
and
xchg
xor
xor
int
lret
aam
sbb
stos
mov
jnp
xchg
pop
inc
out
lcall
add
push
mov
mov
outsb
js
or
pop
inc
mov
imul
fisubrl
adc
mov
mov
inc
dec
arpl
add
mov
dec
adc
or
mov
dec
add
ja
scas
les
mov
cwtl
inc
and
repz
jmp
xchg
leave
ret
cld
int3
mov
orb
dec
mov
cmpsb
sti
jbe
aaa
stc
sbb
decl
push
and
jecxz
stos
fwait
xchg
add
dec
repz
aas
sub
and
jecxz
xchg
mov
es
jmp
popl
ja,pn
adc
adc
cmp
insb
xchg
and
or
cmp
cs
in
sub
fistpll
jno
fs
adc
mov
fcompl
out
or
sbb
nop
pop
mov
repnz
mov
mov
pop
inc
adc
insl
rorb
loop
sub
sbb
inc
xor
mov
mov
fisttpl
xor
lahf
jle,pt
mov
sbb
aas
sbb
xlat
inc
fbstp
xchg
aad
fwait
jmp
dec
pop
fsubl
xor
pop
mov
iret
loopne
mov
inc
fcoml
push
je
int3
or
xor
pusha
rclb
std
ficompl
cmpsl
jbe
cmp
sbb
dec
jl
jne
mov
shlb
mov
lret
cmp
jne
call
inc
jae
int3
adc
ret
cmpsb
fidivrl
subl
mov
enter
es
inc
jmp
pop
stc
sbb
clc
cld
mov
cwtl
sbb
fmull
cli
subb
or
test
jecxz
push
sbb
sbb
enter
cld
rolb
ret
jmp
jp
stos
cmp
push
cmp
and
cmp
aad
jns
rol
popl
add
xor
js
lock
outsl
outsb
rorl
or
or
or
daa
pop
out
jl
mov
pop
and
test
sbb
ljmp
cli
sbb
pusha
mov
popf
mov
jecxz
cmpsl
cmp
imul
xchg
inc
cmpsl
out
push
aam
lret
sub
repz
jne
pop
sbb
cmp
inc
pop
jge
sahf
fstpl
pusha
adc
xchg
push
test
mov
mov
cmp
lea
pusha
push
pop
movsl
push
pop
stos
imul
aas
cmp
dec
ds
sub
inc
subb
push
jne
test
sahf
es
fwait
not
dec
sti
or
inc
mov
psrld
sub
out
arpl
loopne
nop
je
adc
jnp
or
add
lret
out
and
adc
repnz
lea
rorl
cmp
cmp
adc
xor
cli
imul
xlat
das
jl
lret
ror
cmc
pusha
addb
cmp
lea
out
pop
mov
fwait
outsb
popf
and
fstps
adc
in
dec
clc
dec
stc
repz
mov
iret
and
push
push
sub
hlt
cmp
in
outsb
out
mov
fisttpll
fcoml
aam
fstl
adc
xchg
mov
loop
jae
rcrb
xor
adc
popa
lea
repz
insb
xchg
sub
mov
mov
in
mov
pop
cmp
es
pop
cmp
cs
jl
imul
movsb
out
pushf
and
or
adc
clc
enter
sbb
aam
aam
dec
aam
fs
inc
push
lods
sub
js
dec
leave
jo
inc
std
or
mov
mov
ss
loopne
sbb
daa
sbb
add
out
xor
test
jno
out
ret
dec
dec
clc
pop
add
les
and
inc
stc
xchg
gs
out
sbb
aaa
clc
dec
mov
push
push
int
xchg
jb
push
and
mov
mov
js
iret
subl
jo
sub
call
inc
std
inc
outsb
sub
mov
and
insb
or
aam
loop
adc
movl
cwtl
fimuls
jae
scas
mov
or
cmp
clc
daa
sub
sahf
and
add
iret
loopne
xchg
lret
lahf
cmp
ljmp
xchg
call
in
clc
insb
jno
sbb
in
les
mov
inc
arpl
mov
lahf
mov
lahf
mov
inc
xor
jns
shl
inc
cmp
add
cli
add
mov
and
mov
lods
xchg
movsl
cmpl
xor
sbb
inc
orl
aad
out
nop
cwtl
push
and
cld
push
xor
inc
pop
jns
or
lock
ret
xor
loope
or
inc
pop
adc
inc
cld
xchg
pop
pop
leave
jmp
push
ret
adc
mov
jmp
out
add
movsb
add
popf
dec
in
idivb
sub
push
dec
cld
sub
lret
and
insl
xor
cld
dec
prefetch
in
inc
movsl
and
adc
je
mov
jl
movsl
int
xchg
cmp
jno
sbb
scas
sub
cmp
add
push
cmpsl
xlat
jl
pop
mov
and
jae
jns
ficomps
dec
mov
xchg
lock
xchg
arpl
rorb
push
or
pmaxub
jb,pn
mov
out
clc
cmpsb
mov
dec
cld
mov
cmp
or
mov
lret
sbb
in
fs
pop
out
mov
jle
js
mov
cmc
sub
inc
add
aam
mov
les
lahf
dec
mov
rorl
jmp
adc
push
add
lock
push
add
push
inc
insb
dec
push
sub
std
xchg
or
cmp
lea
out
cs
xchg
rorl
pusha
pusha
lea
nopl
xchg
outsb
shrb
add
adc
pop
lret
bound
push
inc
push
mov
cmc
dec
mov
dec
outsb
and
and
int
in
cmp
fs
mov
ss
ss
push
push
bound
aaa
test
or
mov
cmp
pop
jle
mov
stos
or
iret
repnz
int
les
sbb
int3
add
lea
fisubrs
and
mov
dec
stc
popf
in
movsb
hlt
sub
lods
pop
sub
fstl
jno
adc
stc
add
and
fwait
mov
es
repz
fldenv
push
mov
arpl
inc
ret
and
ja
roll
movsb
fistps
jle
xchg
mov
pop
cmp
ss
xchg
les
and
xorb
rcl
sahf
mov
movsl
sub
out
mov
add
ds
inc
in
rcll
loope
cmpsb
dec
jg
nop
sbb
push
cs
ds
xorl
dec
add
cmp
pop
mov
ret
and
js
xchg
xchg
mov
cmpsl
repz
aas
jae
or
cmp
xchg
ja
test
std
add
add
popl
pushf
fcompl
fidivrs
jmp
push
outsb
sbb
cmp
and
dec
shlb
mov
xchg
mov
jne
rcrl
and
inc
mov
adc
adc
test
xor
adc
outsl
cmpb
cmc
xchg
jo
imul
rcr
daa
ljmp
and
mov
inc
add
popf
xor
and
adc
ds
xor
nop
sub
and
and
xor
aad
data16
adc
and
adc
sub
jle
or
pop
stos
out
imul
dec
out
aam
ds
pop
div
xor
aam
movsl
int3
stos
xlat
jnp
mov
insb
ficomps
icebp
scas
xchg
faddl
int
cmpsl
xor
popf
imul
roll
iret
aad
and
stc
loopne
in
lret
arpl
mov
xchg
pop
cmc
ljmp
jg
pcmpgtd
repz
outsl
mov
hlt
add
scas
gs
and
cmpsl
movsb
sbb
add
xor
frstor
jnp
adc
push
jmp
and
scas
imul
fstps
push
xor
adc
pop
mov
jnp
or
rolb
inc
adc
jbe
pusha
cmp
xchg
adc
js
mov
adc
mov
aad
outsl
and
xchg
xchg
inc
and
test
sbb
movsb
lcall
mov
xchg
or
push
out
sahf
rorb
jns
movsl
out
arpl
insl
pop
repnz
dec
shrb
push
in
sbb
dec
sub
or
or
mov
push
fmull
es
dec
sbb
push
rcrb
jbe
ret
mov
pop
mov
arpl
cmp
push
adc
mov
sub
cmp
and
outsb
shrb
cld
fiadds
cltd
cmc
in
ja
call
mov
jge
jecxz
loope
jmp
sbb
mov
jmp
jecxz
adc
repnz
rolb
dec
sbb
pushf
add
sti
sub
jb
push
hlt
clc
mov
sarb
xchg
cmp
push
jle
sbb
xchg
mov
push
sub
xlat
sub
arpl
ja
out
push
sub
orl
bound
dec
add
fldl
aas
mov
lret
lret
out
push
pop
addr16
or
cld
outsb
dec
and
xor
or
xchg
lret
cltd
jae
jne
mov
push
insl
mov
sub
push
lret
loop
in
orl
popf
mov
pop
push
arpl
sub
or
sub
xor
lock
enter
jle
aas
xchg
hlt
in
lahf
xor
loopne
cltd
mov
dec
aam
mov
mov
scas
or
and
push
inc
sub
mov
xor
sub
xor
arpl
and
dec
ret
or
add
sub
ret
xor
loop
adc
mov
xchg
sub
and
filds
cld
xchg
sub
cmp
es
mov
adc
xchg
or
or
sub
or
xor
jo
jmp
outsb
ds
stos
jne
call
and
mov
test
sub
sti
jnp
pushf
or
aas
lds
mov
xor
adc
stos
outsl
roll
cmp
xor
xor
push
lahf
jp
or
add
aaa
std
or
mov
xor
xor
mov
sbb
xlat
sub
daa
lahf
fdivs
jns
cmp
sbbl
in
jge
nop
nop
test
mov
out
pop
mov
add
sbb
in
pop
sub
ljmp
mov
mov
into
negl
faddp
adc
inc
idivb
mov
arpl
xchg
loopne
mov
movsb
movsb
mov
push
adc
notl
push
xchg
inc
jp
repz
andl
mov
lds
mov
and
mov
out
or
stos
push
pop
sarb
stos
push
imul
scas
jo
int3
mov
sub
adc
mov
iret
in
test
fmull
lods
push
cmp
les
bound
call
push
xor
stos
inc
negl
stos
sahf
pop
push
dec
dec
lret
and
adc
insl
mov
add
ss
clc
jb
adc
aam
gs
and
xchg
loopne
push
cmpsl
cld
loope
int
inc
pop
cmp
pop
jb
or
jno
push
xor
in
sarl
dec
or
imul
mov
push
add
and
leave
cmp
popf
mov
popa
test
roll
jecxz
xor
jne
mov
cmp
aad
test
loope
in
aas
mov
push
cld
jae
xor
fst
adc
cmp
cmp
mov
popf
ds
stos
mov
cmp
cmpsl
daa
pop
push
bound
es
test
mov
xor
xchg
add
subb
sti
push
pop
xchg
mov
inc
ror
pop
xor
les
lock
sub
cmp
push
scas
test
insb
xchg
mov
icebp
mov
jle
pop
mov
mov
jo
cmp
fstl
movsl
adc
jg
ljmp
pop
or
sarl
xlat
jb
repz
out
xchg
mov
mov
sub
les
push
fbstp
rep
in
das
test
pop
mov
insl
rolb
repnz
js
into
add
cwtl
ret
aas
xor
je
inc
inc
pushf
lods
mov
inc
lods
mov
add
sub
cmc
xchg
repz
in
pop
pop
inc
imul
popf
mov
in
ss
and
xor
scas
pusha
mov
push
push
lods
or
outsl
enter
andl
push
or
and
addr16
push
scas
lcall
inc
pop
xchg
xor
xor
aas
add
cmp
push
jp
cmp
xchg
inc
ja
cmpsb
sub
shlb
les
cltd
dec
xchg
fs
popf
xchg
loopne
and
punpckhwd
aam
in
shrl
pop
shl
scas
loope,pn
push
pop
push
lret
adc
pushf
ja
jnp
add
js
rclb
out
and
jno
push
xor
jge
or
sub
cwtl
jae
jmp
sub
inc
add
mov
out
inc
fsubrl
jl
stc
ss
jbe
jb
mov
stos
or
sbbb
aad
lea
gs
sub
push
jbe
aad
fidivrs
in
outsl
shrl
jnp
bound
inc
adc
mov
cld
imul
xchg
imul
and
cmpsl
ja
sahf
dec
shrl
mov
mov
and
jae
mov
lcall
mov
popa
std
sbb
imul
scas
xor
std
jp
push
push
pop
je
adc
and
repz
mov
es
scas
mov
pop
inc
shll
rorb
mov
mov
adc
hlt
cmp
jae,pn
add
gs
cwtl
popf
xor
stos
loop
xchg
or
cltd
cmp
xor
mov
jecxz
jecxz
pop
cmp
push
test
js
xchg
arpl
outsl
sub
pop
arpl
fnsave
out
adc
out
ret
dec
mov
imul
cmpsl
dec
xor
in
jbe
gs
xchg
testl
cmpsl
mov
loopne
dec
add
loope
sbb
pop
iret
int
jecxz
jno
xchg
aad
push
mov
xor
mov
mov
mov
or
cmp
and
adc
dec
or
xor
sbb
inc
mov
jmp
pop
outsl
ret
dec
test
pop
cmp
add
dec
sbb
loop
xchg
daa
jbe
fwait
mov
xchg
push
fsubr
popf
adc
sub
rolb
mov
das
mov
subl
pop
dec
jge
mov
xchg
fwait
jecxz
movsb
sahf
xchg
add
sub
int
je
cmpsl
xchg
std
das
rolb
mov
and
sti
mov
fwait
cmc
call
and
dec
mov
xor
sub
add
sbb
dec
push
insl
dec
bound
aaa
cmpsl
sub
enter
push
or
enter
testl
mov
out
test
jl
mov
scas
pop
or
jae
stos
out
inc
sub
idiv
sbb
lock
xor
mov
xchg
and
add
sub
loope
push
xchg
mov
fwait
insb
jno
and
movsb
adc
rcr
shrl
lea
adc
sub
clc
mov
mov
mov
inc
sub
jle
sbb
mov
lods
je
fucomip
mov
fdiv
mov
dec
or
stos
les
xchg
sbb
pop
mov
or
xchg
cli
mov
adc
outsb
cwtl
mov
sbbl
cmpsl
push
mov
pop
xor
cltd
movsl
mov
addr16
ja
sub
or
ds
pop
sar
cmp
hlt
xorb
int
inc
rclb
popf
int3
jle
loopne
lret
jns
leave
add
inc
dec
and
inc
jne
mov
punpckhbw
repz
cmc
push
mov
push
push
lahf
cmp
cmp
mov
loopne
jl
imull
popf
xor
test
std
lea
fdivl
rolb
inc
sbb
jp
cli
pop
dec
ljmp
fisttpl
mov
xor
lods
dec
jmp
in
xchg
dec
jo
pop
sarl
cs
inc
or
or
js
ds
loop
test
in
jle
or
out
jle
mov
test
jle
rcll
repz
sti
adc
jno
bound
mov
test
pop
lods
jmp
push
push
mov
cmpsl
in
pop
xorb
fsubr
push
cmp
and
and
lods
clc
shl
push
ja
aaa
insl
dec
inc
scas
add
mov
xor
pop
pop
push
popf
cltd
inc
or
add
pop
test
jecxz
dec
and
sub
add
cmc
sub
dec
mov
jge
shl
and
sub
jecxz
pop
pop
fcmove
mov
in
insl
pmaxsw
mov
dec
jne
jns
daa
in
sub
jns
dec
jl
sbb
fs
or
into
or
popa
daa
out
mov
fstpl
mov
in
xchg
add
test
add
call
or
lock
outsb
fcmovu
lea
cwtl
inc
dec
js
dec
sbb
call
aaa
jae
sub
cmp
in
cmp
cmpsl
bound
out
add
or
pop
iret
and
xchg
es
push
mov
mov
mov
add
xchg
push
vmread
pop
dec
add
and
movsb
test
dec
push
mov
repz
mov
mov
sbbl
adc
mov
xchg
push
adc
fistl
repz
add
push
fcmovbe
dec
ss
fs
add
dec
push
loop
jle
pop
lea
cmp
pop
orl
and
dec
jne
cmp
idivb
jmp
icebp
loope
imulw
inc
out
fistpll
call
dec
jb
xor
mov
add
push
les
push
addl
out
mov
adcl
int3
clc
lds
sub
and
and
push
push
and
inc
in
mov
ljmp
sahf
mov
mov
sbb
or
push
jns
xor
jmp
lret
das
push
mov
mov
testb
enter
in
or
pop
adcb
cmp
lcall
jle
mov
inc
inc
fsubr
in
das
gs
jl
pop
pop
sub
shrl
mov
outsb
xchg
mov
xchg
into
nop
xor
mov
pop
mov
sbb
addr16
lds
push
mov
jnp
pop
push
pop
and
cmp
sub
push
insl
lods
mov
movsb
or
pop
add
mov
or
loope
inc
scas
xorl
push
and
jb
push
ret
pop
add
adc
sahf
sbb
xlat
mov
sbb
push
std
add
xor
push
push
mov
insb
ret
pop
push
in
nop
cli
pop
mov
flds
gs
and
nop
sub
push
test
les
outsl
sub
fisttpll
jge
mov
lods
inc
imul
pop
aad
rcr
or
in
andl
sbb
push
sbb
sub
dec
mov
test
loope
int
sbb
jge
orl
gs
in
inc
jne
int3
pop
popa
scas
cmp
adc
mov
test
or
out
lahf
cmp
std
or
push
jle
lcall
int3
jb
mov
lahf
daa
outsb
enter
insb
xor
or
jle
pop
dec
pop
leave
lcall
movsb
cld
jb
and
xchg
xchg
ret
sub
inc
enter
rcrl
dec
sub
mov
xor
fnstenv
shrl
sbb
loop
cmp
or
cmp
sarl
adc
in
ljmp
shlb
in
jbe
repz
push
push
cli
test
cmp
sbb
hlt
mov
inc
shl
jmp
push
aam
sub
out
shrl
adc
and
mov
add
aad
adc
lret
stos
scas
mov
sub
adc
into
outsb
lret
sub
dec
cmpsl
adcl
and
sbbb
xchg
stos
pop
imul
xor
ret
cmp
addl
fdivr
mov
cmp
adc
fistps
iret
sahf
out
sub
loope
data16
push
cmp
out
into
orb
lods
cmp
ud1
mov
inc
dec
sbb
xor
sti
inc
dec
aas
xor
adc
dec
sbb
pop
sub
inc
xor
mov
and
scas
out
adc
movsl
rcr
stos
sbb
out
sbb
flds
gs
push
and
jmp
cmp
and
out
mov
mov
bound
pop
adc
pop
scas
push
clc
das
test
jnp
or
push
nop
inc
notb
dec
int3
add
testb
mov
fwait
repnz
scas
adc
mov
inc
addb
push
cmp
fsts
fcmovb
mov
mov
or
testb
sbbb
push
scas
and
mov
mov
fwait
imul
lods
and
push
imul
adc
push
jb
add
js
dec
push
imul
fildll
repnz
xor
popa
sbb
inc
push
jg
imul
jge
push
ja
xchg
sub
jmp
insb
les
xchg
jo
lods
iret
fmul
rolb
mov
xchg
cs
mov
xchg
or
inc
test
aad
pop
pop
or
aad
rorb
mov
push
jae
mov
cld
ljmp
icebp
cmp
dec
inc
cmpsb
mov
lret
sbb
jge
scas
in
test
pop
xor
dec
fs
and
add
inc
inc
or
stc
pop
inc
mov
or
loop
out
repz
cmpsl
push
cmpsl
inc
sbb
push
dec
lret
xchg
xchg
push
jnp
mov
jecxz
sub
mov
bound
sbb
push
in
mov
cltd
cmp
cmpsl
xchg
xchg
pop
lock
cmp
inc
xchg
jae
mov
and
pushf
mov
nop
enter
shll
sbb
mov
mov
js
dec
and
fmuls
adc
pusha
pop
cmp
faddl
add
andb
cli
fsubs
repz
add
xchg
xor
xchg
icebp
sbb
in
test
roll
jns
fwait
ret
push
xlat
jnp
jae
nop
shrl
stc
sub
out
mov
rorl
stos
sti
sub
xchg
and
sarb
fidivl
cmp
mov
loop
test
test
add
fwait
rorb
mov
ret
shrl
cmp
mov
jnp
pop
pop
cs
std
fistpll
test
xlat
popf
shrb
jae
andl
push
divb
lcall
mov
ss
mov
adc
inc
iret
pop
dec
push
xorb
mov
repz
int
sub
shlb
inc
in
fdivs
add
stos
cs
out
outsl
pop
jecxz
add
mov
mov
pop
push
xchg
jg
mov
insb
sbb
dec
xchg
lea
push
ljmp
ja
rorl
adc
sbb
cltd
cmp
xchg
clc
sbb
arpl
sbb
std
jo
repnz
test
mov
cmp
dec
mov
lahf
xor
fdivl
jp
out
mov
xchg
inc
enter
sbb
shll
or
movsl
add
ja
push
push
hlt
push
mov
jne
xchg
sbb
ret
cmp
in
jbe
aam
push
mov
loope
push
movsl
adc
int
or
pop
iret
fwait
mov
jmpw
sub
jl
jae
inc
xchg
sbb
dec
nop
and
or
filds
into
and
push
cltd
and
mov
popf
fildl
lret
pop
cmc
outsl
mov
xor
sbb
aas
mov
mov
xor
dec
xchg
xchg
pop
jno
cmp
adc
lock
xchg
imul
cmpsl
inc
pop
cmp
scas
cmp
xor
lahf
mov
and
pop
call
or
cwtl
push
std
adc
and
push
std
mov
xchg
es
add
fildll
fmuls
mov
fisttps
push
out
mov
shrl
inc
cld
and
mov
fbstp
fstps
cmp
lods
mov
jp
repz
fcmove
mov
jno
stos
jl
shrl
fwait
push
sbb
dec
cmc
mov
test
out
lahf
pop
xchg
arpl
jg
and
das
cmp
insb
jl
mov
insl
pushf
stos
xlat
inc
repz
pop
dec
imul
pop
add
dec
or
ja
jg
lock
and
jae
xchg
cmpsl
packssdw
lcall
jge
mov
jg
fcmovbe
pop
imul
sub
mov
lods
and
lods
and
and
inc
cmp
fbstp
out
int
xchg
jge
rcrb
push
mov
stos
lods
cmp
lock
fwait
stos
fdivrl
jo
fsubl
shlb
lret
and
add
xchg
lahf
mov
jb
mov
out
repnz
sub
push
mov
xor
lock
add
cmp
push
imulb
into
adc
mov
push
mov
or
frstor
push
rclb
mov
cmp
idivl
push
out
add
lock
fdivl
sbb
xchg
cli
push
inc
mov
mov
stos
pop
dec
mov
mov
sbb
imul
inc
in
push
rcrl
mov
outsl
cmpsl
idiv
add
lcall
cmpsb
cmp
jnp
pusha
jbe
test
inc
sbb
mov
sti
cmpsw
mov
jle
xor
sub
neg
mov
insl
fiadds
xor
pop
jecxz
shlb
lea
sbb
clc
fs
adc
pushf
test
int3
dec
imul
mov
adc
int3
jmp
mov
mov
es
das
sbb
cmp
dec
fisttps
pop
adc
add
lahf
add
pop
fwait
repnz
outsb
repz
mov
mov
in
enter
mov
iret
repnz
and
andl
leave
sbb
mov
in
cld
es
mov
sub
ficoms
dec
filds
and
jno
dec
bnd
jb
sub
or
imul
orb
jne
rcrb
mov
sub
es
loopne
add
cmpsl
stos
xchg
pop
or
outsl
loop
cmp
dec
mov
add
es
cmc
pop
cmp
imul
sahf
push
shl
and
setnp
lea
sarb
pop
sub
xor
and
jb
icebp
push
inc
inc
xor
aaa
mov
pop
leave
fisubrl
push
sub
out
popa
ror
push
icebp
lock
push
stos
pop
cwtl
adc
ss
popa
iret
mov
int3
ss
fwait
xchg
leave
loop
pop
adc
ret
es
xlat
add
add
adc
sbb
ret
xor
cmp
fwait
mov
push
push
rorb
pop
or
dec
xor
pushf
rorb
push
lcall
xor
mov
xchg
xor
jle
mov
jle
shrb
clc
pop
mov
mov
scas
push
out
push
mov
test
sahf
lods
pop
subb
mov
jl
and
mov
dec
push
outsl
scas
push
test
sbb
xor
outsl
out
fsubl
ljmp
push
out
and
jmp
add
inc
stos
sbb
out
pop
adc
scas
inc
mov
repz
rorb
mov
pop
lcall
adc
hlt
sub
das
out
cltd
adc
ret
mov
mov
iret
mov
in
mov
insb
inc
xor
push
add
lock
scas
pop
or
fisttps
push
int3
mov
xchg
xchg
jno
and
aad
ja
loop
cmp
push
adc
and
adc
insl
shrl
jge
or
fwait
aaa
mov
mov
loope
mov
int3
test
into
mov
sub
or
lods
repz
adc
cmp
pop
js
imul
cmpl
insl
mov
outsl
out
mov
xchg
jo
lahf
sbb
pop
sbb
dec
js
fidivrs
cmc
stos
xchg
add
pop
mov
outsl
lods
loopne
jle
shlb
pop
inc
jns
mov
fldcw
jg
mov
jnp
xor
std
add
shld
cmp
mov
movsb
ficoms
stos
stos
sub
mov
test
in
stc
add
sub
xor
xor
fs
push
stc
aad
dec
sti
cmp
and
dec
mov
ret
push
mov
inc
filds
js
adc
dec
dec
dec
cwtl
mov
mov
int
dec
inc
pop
push
pop
inc
sbb
add
jp
ds
add
paddusb
pop
je
ja
out
ret
or
sub
sti
jns
test
fnstcw
jne
fs
fisttpll
cmp
dec
jns,pt
cmp
adc
int3
fcmovnu
add
jns
sbb
outsl
ds
leave
scas
in
int
ja
push
inc
pusha
pop
dec
xchg
cmc
in
push
flds
pop
add
call
lret
or
movsb
das
jo
mov
xchg
addr16
idivl
and
test
rclb
xor
jecxz
dec
push
sahf
stc
xchg
mov
and
cmpsl
dec
fst
pop
jns
fsubl
nop
xorb
add
push
mov
js
add
out
lcall
pushf
cli
cltd
adc
jb
dec
add
lds
push
add
dec
in
add
mov
adc
jg
dec
push
or
jns
add
std
enter
cmpsl
jmp
daa
sub
sub
fdiv
or
cmpl
out
cmp
outsl
cli
inc
cli
lods
lds
pop
or
mull
jmp
inc
out
ds
andl
out
xchg
addr16
shrl
adc
stos
rcll
and
cmp
sahf
xor
lcall
or
cmp
clac
inc
sarl
cltd
addb
pop
or
sbb
mov
and
nop
fistps
sub
repnz
jbe
lretw
lock
mov
ret
sti
pop
addr16
push
pop
and
jns
or
fs
sahf
sarb
out
ret
cli
data16
jle
rcrb
cmp
nop
mov
xor
fdivrl
adc
mov
xchg
popa
sub
mov
jmp
xchg
sub
xchg
cwtl
stos
out
fwait
jmp
test
jp
adc
std
cmp
dec
inc
mov
pop
testl
push
int3
orl
xchg
icebp
fwait
daa
loopne
pushf
data16
aam
repz
push
jle
push
add
subb
dec
idivl
xchg
pop
pop
inc
popf
fmull
aad
xchg
test
mov
sahf
add
rorb
hlt
test
inc
xchg
add
negb
mov
sbb
push
cmp
or
shlb
push
sub
stc
dec
jb
into
dec
xchg
mov
fcomi
int
jae
adc
loop
popa
jbe
mov
sbb
adc
xor
notb
jmp
add
mov
loopne
jnp
out
nop
roll
xchg
add
out
ret
lds
jg
dec
fidivs
outsl
fsub
popa
repz
push
cli
pop
cmp
pop
inc
xor
sub
int
ret
daa
cwtl
cli
fldcw
xchg
popl
pop
mov
test
dec
inc
shrb
push
imul
stos
lret
stos
test
mov
test
sub
repz
fs
xor
sbb
dec
ffreep
in
fisubl
dec
ljmp
popf
push
mov
addb
imul
dec
and
in
adc
sub
jg
shll
cmpsb
mov
fwait
jp
scas
pushf
loopne
xchg
das
les
cmp
xchg
enter
sub
mov
test
bound
ret
adc
shll
cmp
fistpl
andb
cmp
test
adc
mov
das
mov
and
stos
push
adc
xchg
mov
mov
outsb
inc
aas
mov
rcrl
cmc
sub
mov
mov
test
and
out
stc
jb
scas
int
rorl
cli
sbb
cmc
jbe
and
mov
cmc
clc
dec
test
in
leave
fs
sti
ds
inc
push
dec
mov
faddl
sub
sbb
insl
cld
add
std
adc
iret
jbe
mov
xchg
cld
loope
mov
popa
movsb
mov
test
pushl
cmpsb
cmpsl
call
movsl
jge
inc
mov
cwtl
adc
dec
fldcw
ja
fwait
popa
insl
mov
xchg
pop
aam
out
adc
cmp
cmpsl
ret
inc
cli
enter
or
xchg
cwtl
imul
push
dec
sahf
div
ffree
jns
cmp
and
dec
sahf
outsb
mov
stos
scas
inc
cs
push
sar
push
xchg
sub
jo
cwtl
shlb
cmp
cmc
push
mov
jne
or
fstl
push
repz
repnz
enter
stos
and
loop
pop
sahf
jae
xorb
xchg
push
mov
xor
clc
js
in
outsl
inc
adc
adc
mov
hlt
adc
jno
pop
mov
add
pop
hlt
mov
pop
fistpl
pop
ss
xor
xchg
das
fdivrl
call
dec
mov
aad
sti
adc
push
or
lock
roll
jmp
scas
adc
fstpl
out
push
push
arpl
nop
ds
stos
mov
sbb
imul
sbb
arpl
popa
jne
aaa
cli
xchg
popl
adc
dec
push
mov
loop
and
mov
pop
adc
cs
cmp
insl
popf
xor
movsb
stc
cwtl
fwait
inc
div
out
jnp
nop
pop
lcall
inc
inc
cld
fs
das
mov
mov
scas
xchg
movsb
fimull
cli
push
dec
lcall
or
mov
popf
std
dec
les
and
xor
xchg
pop
fimull
or
das
popf
xchg
ljmp
jnp
xchg
rorl
out
cmpsb
lds
lods
lea
das
adc
mov
cltd
fisubs
lret
jg
and
shlb
cmp
add
pop
add
mov
jmp
jge
ret
movsb
mov
inc
mov
pop
cli
out
xchg
xchg
pop
mov
cld
add
ss
sbb
sub
push
rclb
xor
mov
data16
sub
stos
jge
fbstp
inc
mov
nop
sub
push
sbb
mov
sbb
and
sub
dec
scas
mov
and
dec
cmp
clc
mov
movsl
push
test
sbb
pop
daa
addb
pop
cld
sbb
je
dec
xchg
or
cmpsl
out
adc
and
ljmp
ds
adc
mov
pusha
cmpsb
push
xchg
mov
jecxz
lret
sbb
sbb
inc
sub
test
cmp
lahf
aaa
shrb
dec
sbb
stos
pop
in
sub
jg
daa
push
jb
dec
out
jnp
shrl
iret
aaa
pushf
inc
outsb
inc
adc
pop
add
mov
xor
sub
cmp
mov
xchg
sub
bound
mov
bound
push
cmp
sbb
adc
add
and
add
pusha
movsb
subb
jecxz
dec
adc
rolb
adcl
or
repz
pushl
adcb
add
add
sub
nop
out
inc
cmp
cli
repnz
mov
mov
ds
mov
and
aaa
enter
aaa
xor
pop
pop
xchg
mov
xchg
inc
ss
outsl
cmpsl
push
hlt
jo
imul
addr16
xor
je
lcall
jg
jb
cltd
iret
pop
pop
xor
sbb
out
xor
adc
pop
js
add
push
dec
push
mul
out
ficoms
push
cmp
fnstenv
arpl
jo
mov
jbe
xchg
mov
jbe
xchg
xchg
mov
test
in
cmpl
insb
int3
cmp
xchg
std
loope
aaa
push
sbb
pop
stos
cmpb
fadd
movb
jge
mov
cmp
jmp
icebp
imul
sub
pop
fs
pop
aam
leave
mov
push
pop
push
dec
repnz
ljmp
inc
jg
es
jno
pop
pop
popf
cmpsl
pop
loop
rcll
inc
test
pop
push
mov
jbe
ds
sub
or
movsl
sbb
sub
sub
mov
cltd
mov
adc
loopne
fiaddl
popa
aad
loope
pop
or
jle
or
xchg
push
int
adc
aas
shr
cmp
xor
movsl
dec
insb
adc
out
xorl
or
ret
jmp
xchg
mov
call
and
xor
cltd
in
repz
xor
lret
pop
lds
adc
jne
sub
mov
mov
pop
pop
cmpsb
mov
jae
and
jns
shl
push
pop
sub
sbb
icebp
or
sub
out
incb
dec
ds
adc
fmull
pop
notl
mov
repz
je
stos
das
mov
loope
popa
std
dec
sbb
or
xchg
mov
in
je
xchg
out
adc
pop
push
insl
ret
xor
add
scas
jp
das
int3
adc
outsb
push
push
shll
xor
dec
cltd
jbe
shl
push
out
sbb
jg
mov
pop
gs
add
xchg
iret
addr16
xchg
sub
jb
test
push
cmp
lods
out
jnp
mov
ffreep
sbb
jno
mov
or
jmp
fdivrs
and
pushf
in
push
out
cmp
inc
xchg
scas
lods
inc
in
sahf
int
and
push
xor
aam
jnp
and
pop
loope
adc
sub
push
addl
aam
movsl
inc
xchg
inc
dec
shrb
push
mov
and
loopne
jno
sub
pusha
imul
xchg
aam
imul
mov
je
xchg
jns
push
push
or
pop
sbb
sub
stos
wrmsr
js
mov
sbb
cld
into
mov
int3
jge
sub
pop
jb
inc
cmp
in
lret
int3
hlt
mov
dec
das
stos
add
into
sub
call
xchg
not
pop
sbb
loop
loop
sbb
push
jb
roll
in
into
jge
sbb
mov
shr
cmp
xchg
mov
notl
push
push
mov
loopne
jno
or
xchg
outsb
inc
out
mov
sahf
lret
dec
xor
push
out
stos
xor
push
cmpsl
pop
outsl
mov
fwait
or
fidivrl
je
fcompl
inc
pop
dec
ja
push
mov
orl
mov
je
mov
pop
inc
int
into
and
pop
loopne
test
inc
adc
in
clc
adc
xor
popf
addb
xchg
scas
jo
repnz
in
mov
xchg
xchg
adc
pushf
out
mov
rcrl
mov
lock
sar
cmp
cmp
xor
adc
push
fldenv
push
pop
sub
out
das
mov
scas
aas
jmp
test
jb
mov
aam
xor
lcallw
or
and
or
xchg
jmp
enter
jne
stc
loopne
bound
or
in
loop
scas
cmc
xor
xor
ficoml
cs
push
pop
pop
loopne
movntq
out
jp
inc
push
xor
pop
js
aam
cltd
pop
cmp
outsb
mov
fbstp
pop
int3
lret
adc
jge
and
adc
sbb
mov
out
sub
out
jmp
clc
and
movsl
inc
inc
push
jnp
and
not
into
rorl
sub
push
outsb
mov
int3
stos
jnp
fimuls
lahf
pop
sbb
xlat
roll
shl
mov
in
mov
lods
in
or
rorb
push
and
mov
jmp
insl
mov
movsb
es
outsl
push
cmpsl
ja
test
push
out
sahf
cmp
xor
dec
mov
psllq
xchg
pop
inc
lret
int
pop
icebp
in
jb
cmp
out
sub
out
into
mov
outsl
out
aas
sbb
icebp
jmp
scas
fiaddl
dec
negb
add
or
mov
fmull
in
adc
dec
inc
stos
fiaddl
pop
mov
cmpsb
enter
dec
test
lods
pop
sub
lea
jbe
adc
gs
cmc
gs
cltd
pop
push
xchg
or
xchg
sarb
dec
push
test
mov
iret
or
add
test
stc
lret
stos
inc
cmp
add
aam
vpunpcklwd
rol
mov
xor
xlat
sbb
rolb
jae
daa
adc
xchg
ror
jl
gs
std
add
pusha
jbe
jno
cmp
jl
and
inc
xor
gs
dec
dec
push
push
pop
arpl
js
push
das
push
jo
arpl
xor
fbld
push
mov
les
daa
test
pop
shll
jb
mov
test
outsb
pop
push
pop
addb
ljmp
sub
loop
mov
push
or
out
adc
stos
and
je
mov
and
push
xlat
adc
cmc
sub
movsb
jae
and
xchg
mov
divb
shrb
xor
imul
xor
pop
cli
cmpsb
in
stos
je
mov
push
xlat
insl
enter
or
xor
scas
fstp
push
push
sub
out
lods
pop
cmovno
ret
stos
mov
xor
ss
jne
push
mov
movsl
sar
nop
push
lcall
in
es
popa
bound
mov
mov
jge
jmp
cwtl
enter
in
or
mov
mov
cld
pop
mov
loop
dec
nop
out
dec
sub
ss
shr
add
js
push
jmp
sub
subb
adc
sub
push
cmc
mov
add
stos
dec
sarl
lahf
into
adc
shrl
or
jo
in
movsb
dec
xlat
inc
sub
push
cmpl
cmpsl
adc
in
adcb
cltd
cltd
and
sub
cmpb
add
push
out
and
mov
scas
cmc
filds
mov
push
xor
rolb
lahf
outsb
xchg
dec
xchg
ret
jp
mov
cmp
xchg
fimuls
mov
stos
mov
jns
push
dec
roll
dec
xchg
adc
aad
sub
xchg
in
lret
xchg
mov
ret
add
pop
sub
xor
sbb
mov
aaa
lods
jno
insl
mov
adc
popl
nop
xor
int3
daa
pop
ret
cmp
call
outsb
shr
add
cwtl
mov
cwtl
shl
jnp
sahf
sub
rcll
shl
jbe
repnz
adc
jno
movsl
dec
cmpsb
sbb
adc
xlat
or
fwait
inc
insb
mov
mov
push
ror
push
clc
jp
lods
in
sub
adc
or
or
shl
push
loopne
adc
jle
add
sti
scas
fbld
cli
mov
aam
popf
mov
sub
sub
sub
ljmp
xor
ljmp
sub
pop
pop
aad
mov
mov
fnclex
clc
inc
ret
or
and
jp
cmp
jge
dec
pop
out
mov
jecxz,pn
lahf
stos
jg
aas
rorb
add
xor
sbb
mov
cld
lcall
push
push
mov
lods
faddl
test
mov
ret
cs
fcmovnbe
sbb
or
fildl
mulb
scas
int3
cld
mov
cmp
sub
adc
jle,pn
ja
inc
ret
test
loop
repnz
insl
pop
out
mov
sub
dec
ljmp
fnstenv
push
xchg
cld
mov
mov
sti
sahf
repnz
push
sub
popf
ds
or
int3
xchg
incl
pop
in
outsl
pop
and
dec
mov
sbb
je
in
mov
xor
mov
scas
repz
test
cld
inc
ret
sti
adc
lea
mov
cmp
scas
shl
inc
mov
push
and
cmpsl
mulb
push
sub
push
out
addr16
and
mov
outsb
into
adc
test
stos
test
push
mov
jb
repz
cltd
lcall
cli
scas
cmp
les
in
push
sbb
cmpsb
clc
sub
repz
or
pop
imulb
mov
out
pop
sub
cmc
rolb
xorl
mov
push
ljmp
movsl
dec
adc
in
lea
in
push
lret
push
xchg
mov
in
test
add
lock
and
dec
jp
fisttpll
je
mov
mov
jg
jo
loope
and
jecxz
negb
xor
mov
ljmp
add
cmp
test
xchg
push
sbb
lods
jnp
mov
or
and
nop
out
jae
stc
push
fcmovb
or
fildll
cli
mov
push
sub
ja
cli
xor
sahf
xor
add
jno
jge
lcall
rdmsr
sbb
adc
loop
or
jp
das
loop
sub
arpl
lock
fnstenv
pop
mov
mov
and
xchg
push
jg
in
add
add
pop
cmc
ljmp
sbb
punpckhbw
test
push
or
sti
aas
mov
bnd
lret
cs
jl
mov
scas
outsb
push
add
mov
add
jmp
iret
scas
jp
aad
in
lods
cs
outsb
pop
mov
fnstcw
push
mov
out
je
add
test
cmpsl
or
sub
inc
fwait
in
sub
and
mov
mov
jmp
test
inc
inc
mov
and
dec
es
mov
cld
scas
clc
sub
xor
das
inc
sub
sti
pop
sbb
imul
xchg
mov
push
xchg
cmc
pop
pop
fstpt
aaa
inc
sbb
push
xor
sbb
ss
inc
jge
clc
test
aas
shlb
jne
xor
ja
mov
inc
sti
and
dec
imul
outsl
push
fidivrl
xor
sub
ljmp
imul
xlat
mov
dec
cmp
mov
ds
add
lock
mov
loope
ror
cmpsl
das
xor
pushf
push
mov
repnz
push
fimuls
in
cwtl
es
inc
test
rclb
icebp
scas
imul
cmp
jg
and
dec
jbe
test
daa
movsl
js
xchg
push
leave
xchg
push
xchg
lea
addl
sbb
mov
std
pusha
inc
cld
push
mov
inc
mov
ret
push
call
jbe
mov
adc
into
imul
cwtl
in
les
out
push
andl
sub
pusha
cmp
and
mov
std
mov
xchg
add
inc
cmp
sbb
bt
lock
fstsw
jbe
dec
sub
dec
pop
mov
jo
enter
sbb
sbb
std
push
xor
cmp
mov
pop
test
xchg
inc
and
inc
ss
repnz
inc
push
dec
jmp
mov
mov
jae
jecxz
ljmp
inc
movsb
add
cltd
adc
sub
mov
stos
fists
mov
fbld
pusha
mov
mov
fnsave
pop
js
popf
mov
dec
gs
cmc
xor
mov
cwtl
iret
push
nop
outsb
fildl
gs
iret
xor
cmp
ljmp
jo
adc
sahf
xor
mov
test
mov
cli
out
imulb
adc
sahf
cs
lret
lods
loopne
test
lret
sub
adc
inc
sub
leave
or
inc
out
int
int3
fwait
xchg
test
add
mov
adc
jae
mov
jl
push
push
out
or
loopnew
sbb
ja
pop
or
aas
pop
adc
addr16
aad
stc
and
mov
inc
mov
gs
loopne
idivb
sarb
lea
sbb
xchg
sub
pop
mov
xchg
and
push
mov
pop
push
mov
pusha
sbb
cwtl
rcl
jno
lret
add
and
out
test
addr16
in
je
xor
imul
xor
scas
rcrl
add
sbb
add
inc
fcomp
add
addr16
movsb
fildl
mov
fucom
dec
push
les
arpl
jno
and
fistpl
add
repnz
cmp
xchg
lea
dec
addr16
fists
das
icebp
hlt
push
lea
xchg
mov
dec
js
mov
jb
jnp
ret
sbb
hlt
gs
lods
addb
aad
iret
push
jne
or
fldl
sub
or
sub
sbb
sbb
shlb
xchg
pop
sbb
icebp
stc
mov
cltd
cmp
xor
sarb
push
xor
ftst
inc
icebp
lds
push
out
cld
leave
and
mov
rcll
js
jl
andl
roll
xor
pop
push
insl
leave
fistpll
dec
lcall
fstl
and
cmp
out
xor
pushf
jecxz
xchg
call
shll
incl
insl
cmpsb
je
fwait
sarb
gs
daa
and
push
nop
cli
adc
jp
xor
shlb
ds
insb
sbb
jp
repnz
out
in
out
and
cwtl
in
int3
addr16
inc
cltd
cld
adc
loop
aad
dec
or
loopne
gs
xor
and
clc
mov
xchg
sbb
adc
loopne
cld
or
mov
into
mov
cltd
out
cmp
int
jg
cmp
pop
outsl
mov
lahf
in
xor
xor
orl
mov
add
lds
adc
jnp
mov
or
jne
repnz
add
xor
jns
dec
jbe
jae
pop
inc
sub
pop
lds
mov
jle
lock
cld
inc
filds
das
add
pushf
mov
in
dec
inc
mov
push
adc
mov
jp
fstpl
jg
loop
pusha
or
loopne
pop
add
call
popf
fs
jle
mov
adc
inc
sbb
jns
adc
das
insb
into
in
sahf
int3
jns
mov
adc
addr16
and
loope
cwtl
mov
jbe
or
cltd
cmp
mov
add
pop
adc
test
pop
add
and
loope
fwait
leave
hlt
mov
bound
cmpsl
adc
cmc
leave
fdivrl
mov
sbb
mov
add
adc
mov
mov
xchg
ljmp
shl
pushl
or
mov
sub
push
xor
mov
push
jg
dec
adc
cmp
and
out
and
push
movsl
mov
fstp
sub
xor
std
and
or
negb
ja
scas
std
xchg
inc
dec
xor
sbb
les
inc
add
push
mov
in
mov
mov
or
clc
cmp
pop
mov
cmpsb
out
dec
push
fsave
jge
popl
and
inc
or
nop
mov
add
sub
mov
andb
and
adc
aaa
xor
add
int
aas
adc
sbbl
xlat
das
jle
jp
outsl
jle
out
and
sub
rcr
adc
cmpsb
add
pop
pcmpeqd
sub
pop
rcr
inc
sub
mov
hlt
es
in
cmp
cmp
pop
jp
mov
lcall
pop
es
or
jns
xchg
fadd
push
jecxz
or
push
dec
mov
mov
lahf
push
mov
aam
fidivrs
xchg
iret
cld
xchg
inc
fwait
mov
or
add
bound
adc
mov
lock
cwtl
sbb
gs
sti
fsubl
xchg
cld
orl
mov
cmpsb
mov
xor
mov
ljmp
sbb
lods
add
div
xchg
incl
jg
cmp
mov
sub
arpl
jl
push
pop
aam
lods
sub
insl
int
push
out
outsb
lret
jl
test
mov
xchg
imul
stc
mov
loopne
shrb
leave
xor
sbb
aam
push
or
ja
or
insl
fnstsw
mov
repnz
ja
mov
lods
arpl
mov
aam
cmp
xchg
pop
roll
sub
push
icebp
adc
lock
das
jmp
sbb
fs
imul
mov
dec
and
loop
scas
mov
mov
mov
jne
xchg
mov
cmp
pop
sbb
pop
inc
or
das
es
addr16
cmpsb
je
testl
adc
push
lods
lret
dec
js
push
xor
ret
jb
xchg
and
inc
cli
jno
mov
cmp
push
int3
add
in
nop
out
nop
addb
push
fstpt
bound
pop
ret
sub
push
cld
push
test
cmp
sbb
es
fwait
dec
gs
adc
cmpsl
sub
lods
pop
jns
mov
lods
xor
ja
loop
jae
cmp
sub
shll
jo
push
test
jl
repz
pop
lahf
mov
sub
clc
stc
pusha
pop
cmp
out
into
scas
inc
jo
out
loope
ds
cli
mov
dec
cwtl
pop
mov
xchg
pop
xor
cmp
mov
sbb
xlat
aad
loope
push
xchg
jb
fstl
inc
cs
pop
mov
aad
xor
mov
xchg
js
mov
je
in
xchg
and
cmp
or
test
imul
icebp
sub
dec
mov
mov
mov
test
jmp
mov
mov
mov
xchg
cmpxchg
jp
mov
jne
and
push
jl
push
lret
xor
jbe
mov
mov
rolb
dec
and
rolb
fwait
divl
mov
mov
mov
mov
imul
pop
ss
nop
or
cmpsl
nop
movsl
pop
aas
ds
sbb
fidivs
jo
inc
and
cli
pop
idivb
cs
fsts
mov
mov
shrb
scas
in
and
jle
push
push
xor
clc
lret
cmpb
stos
cli
ss
lods
out
mov
int
mov
mov
pop
sub
movsb
iret
daa
inc
idivl
fadd
out
jg
sbb
enter
cs
out
sub
aaa
inc
jb
test
lock
lock
mulb
add
lods
and
push
dec
andl
nop
and
sbb
push
cmpl
push
xor
adc
push
add
fldz
mov
out
push
lods
andl
mov
inc
xor
mov
sahf
daa
cmpsl
mov
movsb
add
repnz
test
mov
in
shl
imul
cmp
push
pop
jecxz
addr16
sub
cmp
fisubrs
xor
stc
cmp
leave
jnp
add
jecxz
mov
cwtl
fld
enter
push
clc
sbb
push
ss
jp
mov
stc
std
mov
push
ja
sub
mov
mov
pushf
movsb
repnz
popf
or
mov
lret
movsl
xor
scas
adcb
rol
out
mov
lods
pop
sbb
testb
lret
dec
or
idivb
dec
push
repnz
loop
lcall
rcl
call
int3
mov
inc
std
dec
div
cmp
push
mov
daa
cmp
insl
and
std
out
jo
cmp
sub
lcall
mov
sbb
nop
jmp
jge
js
add
sbb
cmp
cld
inc
add
xchg
push
test
inc
push
inc
or
sub
scas
and
push
in
cmp
nop
xor
push
add
cmpsl
xor
sbb
push
add
sarb
daa
mov
loopne
out
int
cmpsb
dec
jno
dec
xor
pop
cltd
insb
push
jmp
lods
inc
test
mov
xchg
pop
sahf
popf
sahf
jp
push
pop
inc
cmp
or
sti
out
inc
xor
dec
cli
mov
xor
aam
into
sti
pop
cld
dec
and
fsub
adc
sub
pop
mov
xchg
adc
scas
jne
sbb
clc
loop
movsl
add
int
loope
or
cmp
popf
push
inc
mov
and
movsl
aam
cmp
decl
out
cmp
sub
lcall
push
idivb
jle
icebp
movl
roll
or
leave
inc
push
pop
cmp
inc
xlat
push
or
push
js
lds
xor
dec
movsl
push
cld
cmpsb
lahf
adc
adc
ffree
cltd
and
sbb
bound
jns
sbb
mov
jno
mov
dec
pop
adc
mov
add
dec
push
and
fs
cs
pushf
fldcw
ret
mov
pop
or
xchg
push
out
mov
lds
push
fsubl
pop
cmp
cmpsl
aad
in
mov
pushf
push
ljmp
add
sbb
xor
in
or
push
xchg
jmp
jmp
in
bound
inc
sbbb
or
ljmp
xchg
loope
arpl
push
cmp
xchg
insb
adc
test
sbb
dec
mov
rol
push
inc
mov
loope
dec
lea
xchg
sub
ja
sbb
arpl
or
inc
insb
fstp
dec
scas
jle
pop
add
out
scas
rcl
or
cmp
test
jo
adcl
push
out
adc
sub
aam
xor
lea
jmpw
scas
mov
sbb
jno
inc
xchg
out
outsl
adc
sbb
out
add
movsl
or
lods
shl
dec
incb
frstor
out
setno
iret
pop
lret
call
inc
mov
notl
leave
and
repz
mov
loop
dec
sbb
dec
ss
pop
pop
fldl
mov
out
daa
pop
xchg
js
xor
sarb
push
imul
xor
movsb
sahf
adc
mov
adc
mov
sti
inc
push
dec
loopne
testl
adc
out
pusha
sti
push
mov
addl
lahf
and
jo
dec
xor
pop
ret
mov
mov
idivl
in
loopne
mov
sti
xchg
ficompl
insb
add
mov
sti
pop
inc
push
dec
lea
sbb
cltd
and
and
mov
icebp
test
sbb
inc
scas
xchg
jne
mov
push
sbb
or
lret
pusha
insl
xchg
cmp
sub
cmp
or
scas
jb
lret
popa
loop
mov
std
lods
mov
pop
mov
push
mov
pushf
mov
in
cmc
cmp
in
scas
pop
dec
add
scas
jbe
je
aas
dec
pop
mov
loop
xor
mov
bound
in
loop
sbb
pop
fcomip
imul
insl
pop
flds
cmpsb
or
ja
cmpsl
mov
ljmp
adc
jge
sub
add
cmc
jl
cmp
cmp
jo
cltd
pop
xchg
mov
int
orl
and
int
fcoml
pop
cmp
cmp
dec
jae
lahf
adc
mov
outsb
movsl
jmp
lret
in
dec
add
or
mov
pop
pop
mov
cs
loopne
std
jmp
cmpsl
jae
push
mov
fsubl
jle
jbe
vmwrite
lahf
in
xchg
nop
in
dec
outsb
out
add
jno
sti
jnp
imul
cmp
scas
adcb
iret
sti
scas
dec
out
jecxz
push
xor
inc
mov
ds
mov
enter
movsl
mov
mov
dec
fnstenv
xchg
sbb
into
jnp
bound
cltd
cwtl
sub
stc
cmp
mov
test
cmp
sbb
ss
xor
fiaddl
out
inc
xchg
lods
pop
adc
movsl
jnp
add
rep
adc
push
ret
and
jo
lds
into
fimuls
ljmp
add
sub
std
or
or
incb
jb
icebp
mov
cmp
jmp
jb
mov
or
or
test
pop
out
gs
mov
aas
popl
cmp
or
sub
inc
push
out
out
push
pop
testl
jnp
popf
loopne
cwtl
testl
mov
or
lret
xchg
out
mov
mov
inc
pop
mov
and
push
ja
sub
fldl
push
stos
out
stc
les
jl
sbb
adc
sbb
cmp
or
and
je
pop
mov
mov
sbb
cmp
add
mov
add
xchg
cmp
adc
pop
cmp
or
enter
dec
ret
sbb
out
mov
jge
insb
cmc
cmp
add
lret
iret
xchg
mov
imul
inc
xchg
pop
rclb
mov
cmp
dec
pushf
out
ja
loope
out
mov
mov
movsl
mov
sub
pusha
aad
and
imul
cli
mov
mov
adc
sti
loopne
insb
mov
xchg
sub
dec
data16
mov
lahf
insl
shlb
xor
imul
dec
cmp
les
pop
mov
mov
pusha
fldenv
scas
fstl
sti
sub
jne
ret
int3
mov
sbb
icebp
sbb
mov
cmp
adc
sbb
enter
push
push
repz
mov
push
mov
aaa
add
xor
mov
jp
out
sub
dec
pop
add
movsb
fildll
shll
jle
out
jns
push
sbb
das
out
add
cmp
imul
or
or
stos
add
mov
or
aam
test
xor
pop
lock
rclb
sti
xchg
enter
mov
dec
roll
iret
es
ja
addb
pusha
adc
adc
push
or
adc
daa
jo
sub
push
sbb
jne
and
in
jnp
in
adc
inc
mov
in
enter
aam
jmp
dec
repnz
xchg
dec
std
or
adc
sub
pop
lret
pop
call
in
cmp
sub
adc
mov
data16
inc
add
or
loope
mov
outsb
outsl
bound
inc
mov
arpl
fdiv
jnp
mov
cmp
movsl
dec
sti
repnz
jge
andb
aad
fisubs
pop
iret
push
out
lock
and
popf
ljmp
fmuls
data16
aaa
lret
cmp
pop
sti
lods
loopne
sbb
mov
sbbl
sbb
notl
mov
add
les
xchg
xchg
dec
rol
testb
inc
out
pop
push
out
xor
inc
sbb
les
outsl
outsl
jne
ficoms
and
aam
and
rolb
dec
cld
push
insl
adc
mov
mov
scas
out
add
xchg
sbb
fisubrl
xchg
in
mov
scas
xchg
mov
jp
jno
cmp
mov
std
ds
adc
sub
jb
mov
loopne
jmp
push
sbb
jbe
push
add
jecxz
pushf
ljmp
adc
aad
fsubrs
add
mov
ds
fistpl
sub
roll
lods
mov
dec
cmc
stos
dec
and
outsl
inc
subl
and
xchg
adc
aad
fiaddl
sbb
or
mov
pop
cmpsl
imul
jae
mov
jmp
out
negl
push
and
xchg
repnz
stos
scas
aam
out
adc
mov
xchg
jbe,pt
jp
xlat
xchg
adc
fstpt
in
cmc
repnz
filds
mov
or
pop
test
sub
int
cmp
dec
les
repz
rol
loope
test
shll
xchg
outsl
bound
iret
mov
aam
mov
adc
adc
mov
lods
jg
cmpsb
and
cltd
arpl
cmp
jbe
pop
mov
fidivl
mov
mull
add
or
ficomps
mov
push
jmp
jae
mov
cld
das
fiadds
inc
cmp
mov
mov
repz
das
fidivrl
mov
push
sarl
adc
into
sbb
inc
adc
mov
cmp
add
and
mov
or
jo
test
aaa
push
lea
cs
pop
fcoml
jb
aad
testl
ljmp
call
xchg
in
lods
hlt
fnstenv
stos
dec
ljmp
mov
mov
pusha
cmp
sub
dec
out
dec
aas
cmc
bound
adc
cld
pop
mov
xlat
dec
repz
push
add
sub
adc
lock
mov
mov
mov
mov
popl
or
std
loope
inc
mov
sub
push
push
data16
ja
jae
aas
mov
mov
xchg
push
push
andb
outsb
mov
jp
cmp
cld
vpmaxsw
mov
adc
out
imul
push
sbb
outsl
sub
cmpsb
stos
adc
cmp
rcrb
mov
leave
out
scas
cmp
push
sbb
jae
xor
jp
in
dec
mov
fwait
mov
xchg
sbb
xchg
and
lea
stc
jp
repz
sub
sub
cmp
sar
gs
jne
adc
and
cmp
loopne
jno
sub
out
pusha
push
jg
jno
mov
and
or
cwtl
int3
lcall
and
adc
mov
add
test
push
clc
xor
inc
in
lock
sahf
dec
dec
cwtl
jo
mov
loop
call
in
sbb
and
and
inc
mov
rol
mov
ss
jmp
clc
inc
cmp
lods
adc
and
in
mov
jnp
jp
negl
incb
sub
ficompl
clc
repnz
mov
aam
push
das
dec
mov
leave
sbb
or
jbe
mov
mov
push
scas
mov
test
and
shrl
push
and
dec
mov
cmc
pushf
and
stc
into
xor
pusha
jmp
fldcw
ss
daa
push
mov
mov
btr
mov
push
push
and
mov
pop
loope
jno
in
jecxz
mov
ss
mov
xchg
push
test
shll
nop
lret
cmpsl
jl
add
xchg
mov
fiadds
fnsave
fwait
daa
cmp
call
es
iret
cmpsl
and
sbb
mov
push
mov
sti
push
fisttpll
mov
fstl
repnz
leave
cmp
xchg
mov
cli
jle
stos
je
mov
movsl
imul
fbstp
push
in
mov
loope
or
sbb
andb
lret
adc
or
fwait
out
enter
testb
xor
lret
dec
outsl
je
scas
rep
xor
xchg
push
jae
push
mov
cs
cmp
leave
inc
aaa
test
xor
mov
hlt
stc
xor
pushf
ss
fidivrs
xchg
rcrl
lock
xlat
xor
lcall
dec
rclb
push
xchg
mov
cmp
pop
lds
cld
add
lds
sbb
push
xlat
mov
outsl
ficoml
in
fsub
mov
jmp
pop
lret
and
jge
jecxz
outsl
inc
stos
rorb
insb
pop
push
xor
sbb
sbb
mov
in
inc
jge
mov
adcl
mov
outsb
cmp
or
mov
and
loopne
dec
jmp
xchg
testb
xchg
mov
enter
cltd
mov
sbb
add
push
in
into
movsl
pop
call
kmovw
or
test
push
stc
repz
xor
addr16
push
test
or
adc
test
cmp
sub
xor
addr16
in
scas
pop
push
cmp
xlat
add
mov
in
out
jl
in
testb
or
sbb
mov
mov
in
je
aaa
aad
push
iret
push
shrb
adc
inc
cwtl
push
lret
outsl
testl
test
icebp
mov
jnp
and
mov
push
test
push
bound
jnp
jo
in
daa
cld
sti
dec
pop
pop
push
mov
insb
jmp
inc
test
jo
jp
mov
push
shlb
data16
cmp
mov
dec
pop
js
jge
shlb
pop
pop
mov
inc
jg
and
test
sub
cwtl
div
clc
push
repz
stos
std
adc
add
call
arpl
sbb
adc
push
clc
push
push
stc
inc
xor
into
dec
idivb
rclb
lock
pushf
les
les
mov
pop
jecxz
out
and
pop
or
enter
mov
dec
push
cli
and
test
fwait
dec
cmp
lcall
pop
imul
pusha
mov
or
add
imul
js,pn
add
or
lret
push
dec
pop
push
int3
icebp
out
adc
retw
scas
sbb
mov
xchg
ret
in
mov
repz
fsubrl
addb
in
lock
adc
fs
and
add
lea
mov
sbb
pop
push
out
test
sbb
adc
lock
jo
bound
subb
rorb
mov
fdivrp
push
pop
sar
add
xor
sbb
xor
jne
and
insb
fisttps
decl
mov
iret
jo
aam
movsb
idivl
stos
sub
cmp
cmp
mov
pop
js
andl
adc
movsb
aam
add
pop
dec
shrb
mov
lock
xchg
pop
rorl
mov
push
cld
scas
push
imul
insl
loope
push
stos
push
shrb
cmp
cmpsl
aas
xchg
cmp
shl
adc
hlt
mov
jmp
cmpsb
jae
push
mov
cmp
jmp
in
push
insb
pop
sub
xchg
inc
out
pop
stos
orl
pusha
cltd
popa
mov
iret
clc
sub
or
xchg
add
push
adc
push
fcomps
jns
imul
arpl
mov
daa
lds
pop
test
jge
pop
mov
xchg
inc
mov
dec
jnp
xchg
shlb
mov
cmpsl
cmpsl
loopne
cmpl
test
or
mov
adcl
mulb
sub
mov
add
call
mov
ret
dec
adc
popa
lock
xchg
adc
or
adc
sbbl
inc
test
mov
enter
jg
pusha
sarb
mov
or
pop
pop
jb
jne
out
stos
ja
mov
pop
push
pop
ss
lods
adc
data16
mov
std
adc
inc
lock
cmc
rolb
fwait
dec
aaa
ret
daa
push
and
les
add
or
xor
push
cmp
lret
testb
inc
and
pushf
add
cli
jbe
xchg
lea
jnp
addr16
icebp
ret
adc
fwait
shll
mov
shll
je
mov
xchg
mov
stos
sbb
push
mov
cmpsb
mov
repnz
lods
xchg
arpl
in
pop
bound
test
and
xchg
js
mov
mov
cmp
sti
ds
inc
adc
lock
pushf
ret
xor
leave
sbb
cmpsl
fwait
callw
inc
push
push
test
dec
int3
push
mov
mov
lret
sub
scas
lcall
in
insl
and
fldcw
sub
in
ljmp
xchg
push
addr16
into
iret
push
cld
xlat
fmulp
push
mov
cld
outsl
lret
pop
imul
mov
movsl
jmp
bound
sbb
pop
in
sub
int
aad
enter
cld
rcrb
in
cmc
jo
mulb
inc
adc
jmp
mov
push
stos
jle
pop
daa
push
push
ror
add
push
sbb
dec
mov
or
data16
cs
jge
imul
aas
xor
repnz
fucomi
mov
pop
rorl
jnp
and
push
sub
test
inc
xchg
adc
jecxz
shrb
aaa
sub
sbb
add
mov
stos
int
incb
pop
sbb
jecxz
ds
xor
mov
movsb
inc
push
pop
jo
cmc
faddl
cmc
or
dec
sbb
cmp
dec
movsl
inc
js
xor
adc
dec
inc
inc
pop
mov
dec
jp
add
lret
add
mov
jmp
and
push
loope
push
clc
sbb
ds
call
mov
cld
push
mov
loop
xor
mov
cltd
push
lret
fucomi
pop
push
mov
sbb
adc
inc
cwtl
sbb
mov
xor
outsl
cmp
gs
int3
lock
jnp
pop
pusha
push
lret
xor
and
xor
sbbb
aam
sub
push
cmp
sbb
cwtl
jp
mov
sbb
aaa
xor
pop
push
div
push
std
xor
jae
pop
ljmp
mov
jno
and
ljmp
cmp
mov
jecxz
cmp
fs
adc
pop
bound
push
sbb
adc
cld
push
addb
shrl
push
sbb
adc
mov
jle
xchg
sub
jmp
pop
jl
jae
xor
cmpsb
jge
outsl
mov
mov
mov
fsubl
das
es
pusha
popf
xchg
jb
je
fsubl
je
mov
lret
xchg
scas
jo
sbb
lahf
push
out
push
add
pushf
add
sahf
cmp
and
dec
mov
mov
loop
sub
add
jns
pushf
cs
jle
subb
ret
test
cmpsl
loope
xor
mov
sbb
dec
push
cmp
shrb
xchg
data16
sbb
or
inc
fs
shlb
addr16
scas
cmp
push
mov
ja
ret
push
and
and
imul
iret
push
test
fldenv
pop
xchg
cld
mov
mov
shll
xchg
dec
jmp
pop
sub
mov
adc
mov
xor
jns
cmp
mov
nop
lods
push
mov
in
in
sahf
in
jo
ret
inc
add
mov
sarl
xor
dec
jae
and
ret
test
sbb
inc
insl
inc
insl
shl
dec
out
mov
notb
cld
cld
sbb
push
mov
mov
dec
add
cmp
adc
cmc
pop
inc
push
testb
inc
sbb
ret
ffreep
add
dec
add
daa
sahf
sbb
or
mov
jp
sbb
add
mov
cld
xchg
or
aam
das
out
xor
push
and
dec
cli
dec
ds
mov
mov
sub
mov
mov
fsubl
jg
loop
shll
mov
inc
push
cld
stos
lea
arpl
scas
in
or
jg
jbe
jb
add
adc
in
pop
inc
popa
adcl
mov
push
repz
in
mulb
xor
mov
stos
arpl
popf
dec
fisubrl
jbe
aas
push
stc
test
dec
sub
pop
adc
push
cmpsl
ja
mov
dec
mov
dec
test
leave
lock
sub
sbb
jge
aad
das
inc
mov
push
sub
pop
subb
add
movsl
push
push
lods
push
fs
ljmp
xchg
movsl
mov
adc
inc
shrb
pop
xchg
jbe
mov
dec
icebp
or
push
add
cmp
cmc
mov
xchg
insb
cmp
cmc
sbb
cmc
cmp
dec
adc
xor
lods
jo
mov
mov
lods
outsl
jne
cld
lret
mov
and
mov
ja
outsl
push
pop
dec
fcomps
sbb
imul
popf
mov
push
xchg
mov
fildl
fcmovnu
xchg
mov
in
mov
dec
inc
popa
bound
jl
mov
sbb
pop
sub
dec
pop
sbb
ja
testb
mov
cmc
fstpt
push
mov
xorb
outsb
fucomi
insl
in
cmp
inc
sub
aam
add
repz
in
xor
push
ret
pushf
lret
jno
ret
cmpsl
rcrb
movsl
lock
dec
mov
mov
xchg
or
sub
xchg
push
pop
lahf
loope
jae
pop
loopne
loop
popf
mov
adc
push
xchg
dec
jg
out
dec
sub
sub
jo
push
call
jo
test
mull
pop
pop
push
pusha
sub
cmpsb
jmp
sbbb
sub
mov
repnz
ficompl
rcll
outsb
outsl
lahf
mov
fcomip
or
in
xor
mov
push
mov
push
xchg
or
or
fnstenv
out
xlat
jae
mov
fsubs
xor
dec
aad
pop
cli
inc
cmpsl
sti
sub
or
pop
fidivrl
pop
inc
pusha
cli
cli
fs
movups
je
aaa
xchg
pop
pop
push
scas
sub
addr16
push
dec
test
lcall
sbb
mov
into
fcompl
arpl
shl
ror
subb
mov
movsl
mov
jns
cmp
cmp
xchg
add
orb
cwtl
cld
inc
cmp
push
repz
mov
loopne
les
cs
sbbl
and
pusha
or
add
lock
dec
leave
sub
mul
in
pop
in
push
dec
ffree
fbstp
pop
out
xor
and
mov
dec
mov
xor
arpl
mov
sub
clc
dec
xor
lcall
or
mov
push
or
mov
jecxz
lods
sbb
mov
cmp
fstpl
dec
fisubs
mov
iret
jae
dec
push
outsl
insb
into
inc
mov
scas
xor
mov
js
sbb
enter
into
sbb
les
push
fstl
or
push
inc
popf
jl
mov
jae
inc
sbb
mov
mov
xor
je
xchg
cmp
repz
xchg
nop
dec
fs
xchg
mov
jg
pop
in
clc
add
push
ss
clc
stos
push
cmp
adc
testb
addb
sub
mov
mov
adc
add
notl
jg
pop
push
ja
add
or
fldcw
jo
cmpsb
daa
sbb
or
out
jns
push
pop
and
inc
pop
frstor
faddl
jl
test
mov
cmp
mov
mov
mov
popl
dec
jbe
jns
in
pop
jnp
mov
jmp
push
ss
test
mov
xor
pop
jb
outsb
or
xorl
test
lret
push
add
insb
dec
mov
mov
push
mov
insb
lock
jno
shll
push
fsts
test
sub
xor
lock
nop
or
test
in
cmp
and
pop
xchg
sub
dec
xchg
fwait
hlt
sub
inc
cltd
lods
rcrl
pop
mov
stc
sbb
add
enter
std
jno
mov
cld
cli
jg
ret
mov
ret
sti
pop
sbb
pop
ljmp
cmp
mov
jb
pop
inc
mov
data16
xor
stos
ret
xor
inc
adc
les
js
and
pusha
cmp
xorl
xlat
xchg
rcrl
aad
les
push
fs
inc
mov
push
mov
or
inc
rclb
out
in
mov
cmc
mov
inc
mov
jmp
repz
jle
push
xor
pop
cmp
jmp
cld
xor
ret
sti
fisubrl
dec
sbb
ret
in
fbstp
xorb
pop
add
dec
incl
test
movsb
pop
push
loop
mov
cwtl
add
pop
cmp
fstl
stc
dec
push
push
cwtl
or
cmpl
fistpl
dec
inc
ret
shlb
dec
or
fnstsw
popa
popf
stos
pop
pop
pop
repnz
xchg
xchg
and
jne
cmp
fdivrl
pushf
xchg
shrb
insl
cmpsb
fisubrl
pop
sbb
cmp
loope
js
add
popa
sub
addr16
mov
stc
insb
push
mov
mov
mov
into
add
cmpsl
aaa
test
shll
mov
xor
pop
or
xchg
je
pushf
xor
cmpsl
call
sbb
xor
hlt
out
mulb
dec
adcb
sbb
sbb
aad
mov
mov
jmp
insl
add
out
jae
fimull
mul
xchg
push
aam
leave
insb
adcb
mov
mov
cltd
adc
pop
es
cmp
dec
sub
imul
imul
xchg
cmp
lahf
mov
loope
pushf
bound
mov
gs
sub
loope
dec
mov
aas
adc
stos
fstl
mov
add
inc
pusha
sub
loop
jg
dec
cld
movsl
cli
nop
add
cmpsb
jne
imul
or
jecxz
adc
lock
push
and
mov
adc
jp
adc
mov
jmpw
pushf
mov
lds
out
jnp
sub
cltd
mov
pcmpeqb
jmp
ljmp
cld
xchg
mov
cs
and
into
xchg
daa
xchg
xchg
add
push
ret
push
icebp
stc
sti
and
mov
int3
cmp
jg
outsb
jle
pop
xor
add
mov
aam
push
sub
xchg
xchg
xchg
inc
hlt
inc
out
pop
lods
movsb
inc
add
xor
ss
mov
pop
push
hlt
inc
je
pusha
sub
push
jle
out
jbe
insl
mov
inc
insb
adc
ss
leave
pop
inc
sub
movsl
push
add
xor
push
fnstcw
popa
in
cmp
mov
inc
pop
into
sub
jns
mov
sbb
sbb
ret
enter
or
dec
sub
movsl
mov
in
ss
add
popa
xchg
stos
mov
dec
popf
lea
mov
mov
jo
es
ss
imul
and
fisubl
and
and
mov
fwait
ljmp
push
pop
mov
into
add
mov
fs
js
mov
and
sti
js
imul
sar
rcl
lods
ljmp
je
push
dec
nop
and
adc
sub
jns
push
jl
icebp
bound
add
jno
jae
push
pop
push
mov
in
movsb
sbb
negb
jle
das
add
aaa
and
es
clc
aaa
loop
mov
sbb
aad
pop
dec
mov
std
sbb
inc
fwait
test
roll
call
mov
xchg
iret
int
sarb
repz
mov
cmc
cwtl
data16
and
sub
sbb
pop
xchg
hlt
push
outsl
int
pop
xor
movsl
frstor
and
mov
or
xor
decb
loop
jp
aam
fcomps
adc
mov
inc
pushf
jp
cltd
mov
and
cwtl
test
das
sub
ficoml
mov
lret
mov
stos
or
scas
xchg
pop
repnz
lcall
mov
mov
shll
pop
jmp
divb
call
lods
scas
and
add
fsubs
sahf
dec
addr16
adc
ja
lods
addl
test
jle
jb
jne
mov
jmp
sbb
cmp
insl
push
mov
jge
mov
sub
mov
mov
aaa
stc
and
jnp
fcomps
sbb
xchg
sarl
iret
stos
pop
mov
add
lcall
sar
lret
in
das
cs
sbb
repz
sub
addr16
jle
mov
dec
xor
mov
or
shll
mov
pop
scas
mov
xorb
jo
fildl
dec
jmp
push
lock
mov
mov
or
shlb
mov
sbb
movsl
pop
sbb
jge
push
add
add
pop
pop
push
jp
pushf
push
dec
inc
sbb
xlat
popa
iret
cmpsb
dec
mov
mov
push
rcll
sub
add
sar
mov
pop
jno
stos
cmp
lea
pop
in
mov
imul
mov
stc
dec
mov
dec
cwtl
scas
dec
sub
in
sbb
push
jp
dec
cmp
mov
cmc
jg
dec
sbb
std
pop
pop
bound
repz
inc
sub
mov
dec
cmp
or
pop
and
adc
lret
sub
ret
std
sbb
xor
push
inc
sbb
xor
xchg
sbb
sti
dec
cmp
inc
xchg
in
pop
dec
mov
pop
hlt
jb
mov
xchg
sti
or
push
shlb
xor
pop
cs
test
or
les
jmp
dec
out
dec
lock
cmp
pop
add
in
push
mov
jns
dec
pop
push
mov
adc
insl
jae
stc
jp
jp
push
stos
sahf
push
mov
jle
outsb
sub
cs
jecxz
test
dec
andl
loopne
and
test
jg
out
jmp
lret
cmp
xor
xchg
xchg
leave
pop
xchg
mov
imul
push
add
mov
sbb
jmp
scas
rcrb
in
lret
push
and
xchg
push
xchg
ret
lahf
imul
dec
and
repz
addb
nop
fwait
int
jecxz
movsb
sbb
and
aaa
sub
push
out
mov
and
lret
das
xchg
aas
jg
cmp
and
mov
cmc
xchg
rclb
xchg
xchg
and
sbb
and
aaa
inc
addl
loopne
leave
or
cmpsl
notb
dec
pop
imull
loopne
pop
ss
mov
in
ja
mov
notb
xor
or
or
loope
or
adc
lods
lock
outsb
frstor
sarl
mov
jp
jecxz
pop
mov
xchg
mov
adc
incb
divb
mov
dec
mov
jae
test
outsb
cmp
xor
jl
std
jne
jne
and
cmp
punpckhdq
sbb
mov
push
inc
and
sbb
mov
mov
repnz
inc
push
inc
xchg
loope
pop
les
je
rcr
pop
out
out
gs
jp
out
jo
es
pop
mov
push
clc
add
mov
inc
and
ret
fsubp
jae
rorl
fdivrl
gs
adc
out
push
jb
stos
push
xchg
inc
test
ds
call
fistpll
push
xchg
popa
fsubs
xor
outsb
movsl
fisubrs
sahf
add
xorb
das
je
pop
pop
pop
add
fisubrl
aaa
sbb
mov
stc
andl
stc
std
cmp
out
push
movsl
les
xlat
out
xchg
jg
jo
jp
and
into
push
cmc
and
add
fiaddl
popf
lods
scas
cwtl
mov
mov
in
mov
bt
jb
fdivrs
or
into
mov
and
cmp
out
push
jo
push
lock
push
repz
cmp
movsb
movsl
and
mov
jge
mov
pusha
jb
mov
pop
xorl
hlt
out
inc
sbb
ret
ja
pusha
mov
addr16
push
jle
push
sbb
rcll
cwtl
lret
push
dec
push
repz
mov
sbb
outsl
popa
or
je
sar
pop
hlt
and
mov
pop
into
in
sub
cmpsb
pop
mov
xor
arpl
push
popa
sbb
push
enter
sub
xor
aad
nop
cmpsb
lret
xchg
inc
push
add
cmp
stc
in
jl
pop
mov
or
dec
mov
dec
mov
mov
test
fmuls
data16
add
daa
out
imul
jno
sub
aaa
stos
push
mov
push
pop
mov
jle
push
popa
addr16
iret
icebp
mov
xchg
lds
pusha
out
sub
mov
sub
mov
sbb
popf
testl
icebp
inc
jg
mov
movsl
mov
add
pusha
scas
gs
fistps
xor
add
pop
mov
mov
addl
mov
ret
test
mov
aad
adc
xor
and
aaa
sub
inc
adc
cmp
stc
rcr
aad
xor
adc
movsb
fdiv
adc
jae
js
sub
aad
sbb
les
hlt
cmp
ret
mov
jmp
mov
push
ret
movsl
lret
or
push
ret
mov
ret
inc
test
in
repnz
aas
jb
mov
loop
sbb
sub
test
iret
scas
aam
popa
inc
push
aas
pop
int3
pop
mov
pushf
jne
hlt
les
lret
mov
cld
sbb
std
pop
and
in
lods
mov
and
adc
dec
xchg
jmp
sub
dec
or
cmovle
test
cmp
mov
movsl
xchg
jmp
pop
loope
frstor
mov
sub
dec
mov
add
shl
mov
mov
das
int
inc
xchg
cmpsb
dec
inc
jg
loop
sahf
in
add
mov
mov
cmp
sbb
xchg
je
xor
jg
test
xchg
push
clc
aad
jo
dec
rolb
mov
aad
loopne
mov
mov
cmp
in
sub
jns
add
into
test
xchg
fisttpl
sbb
dec
push
andl
xchg
sub
mov
mov
and
adc
inc
push
popf
ljmp
loopne
xor
enter
js
mov
jno
mov
je
negl
jae
test
test
adc
cwtl
add
out
jmp
xor
sub
cmp
sbb
sarl
fidivrs
enter
ret
rcrl
js
pop
lret
clc
fcoms
jecxz
lds
lahf
add
test
arpl
pop
mov
pop
cmp
lahf
xchg
hlt
fcomps
fcomps
push
sub
jo
or
daa
pop
stc
jl
and
inc
movsb
push
shl
xor
clc
stos
jl
fnstsw
xchg
repnz
pop
push
dec
outsb
inc
sbb
nop
stos
inc
xor
push
add
xchg
push
pop
fcoml
rorb
popa
adc
in
ret
lcall
or
ljmp
sbb
imul
pop
sahf
fwait
sub
mov
xchg
inc
push
adc
push
into
ret
je
negb
ret
xchg
decl
iret
xor
and
sub
pop
lret
in
and
dec
add
movsb
test
sub
fildll
jp
cwtl
stos
xchg
xchg
outsb
xor
ds
pop
in
ss
ret
outsl
test
nop
int3
jns
xor
pop
stc
pop
lcall
adc
pop
inc
cmp
in
rolb
pop
lahf
sub
cmpsl
ljmp
mov
cld
pushf
repnz
mov
daa
push
ror
sub
inc
sarl
mov
lods
adc
popf
idiv
push
mov
fxtract
data16
xorb
cmpsl
int3
ljmp
and
adc
pop
mov
pfrcpit2
nop
add
pop
mov
mov
inc
lods
shlb
adc
pop
std
xchg
and
add
inc
push
in
dec
xorb
xor
test
mov
ja
and
inc
adc
jg
push
mov
loope
add
push
cmpsb
cmp
mov
test
out
adc
adc
mov
mov
push
rorl
jmp
out
xor
loopne
push
cmpsb
ret
loopne
ljmp
push
outsb
fs
mov
int
sub
outsb
in
ja
cwtl
jmp
add
and
sub
mov
jg
sahf
inc
mov
lret
popf
add
data16
xchg
popa
addr16
mov
dec
ret
ret
jp
or
inc
lods
cmpsb
loop
sbb
xchg
mov
dec
cmp
out
shlb
mov
xchg
add
or
xor
movsl
aaa
or
arpl
cmp
lock
mov
inc
iret
sub
inc
mov
push
or
cmp
mov
and
je
pop
dec
enter
in
push
pusha
sbb
adc
insb
xorb
mov
cmp
incb
cmpsl
inc
dec
push
loope
loopne
ficoms
and
addr16
cmp
outsl
test
and
lock
jbe
int3
sub
pop
xchg
outsb
sub
pusha
jge
mov
cmp
stc
xchg
mulb
jmp
push
xchg
pop
jbe
mov
jle
mov
dec
fldt
and
subl
mov
idivl
lahf
xchg
xchg
mov
mov
or
fidivl
and
sub
bound
add
fwait
in
cwtl
jmp
sbb
or
xlat
mov
xchg
cmc
or
sub
mov
mov
es
cld
and
xor
out
lret
push
andb
inc
ret
xor
mov
mov
loopne
cmp
popa
mov
jnp
sbb
les
and
mov
fmuls
sub
cmp
shl
mov
jbe
adc
mov
mov
xchg
cwtl
je
les
push
dec
cwtl
mov
sbb
mov
sub
shrl
sub
adc
pusha
adc
nop
mov
sti
adc
add
dec
and
scas
cld
mov
and
pop
adc
sbb
sbb
xchg
mov
jae
sub
sahf
sub
pop
cld
xchg
add
lock
cmpsl
je
inc
flds
aaa
xchg
adc
jmp
insl
sbb
popa
xchg
mov
pusha
bnd
subl
test
stc
mov
in
std
insl
lret
out
lcall
shr
fnsave
pop
jge
cld
lods
fsubrl
sbb
add
push
jl
stos
mov
div
sbb
pop
pop
cmp
mov
jns
push
add
sbb
push
movsb
data16
and
mov
mov
shl
mov
adc
pop
sar
lds
movsb
ljmp
dec
push
lahf
icebp
jns
jge
jne
push
sarb
iret
push
jge
adc
jp
shlb
jmp
loopne
cmp
xchg
add
bnd
scas
jge
or
fwait
push
push
call
push
cmp
leave
outsl
xchg
outsl
in
pusha
xor
adc
in
push
adc
mov
and
and
insl
je
sti
sub
inc
js
ret
push
icebp
in
int3
mov
pushf
push
ljmp
pop
and
aas
adc
icebp
push
pusha
push
xchg
jno
sbb
jp
ja
xchg
test
mov
jae
push
xchg
std
mov
add
mov
insl
in
jns
pushf
pushf
fwait
aam
cmp
adc
jae
cmp
mov
lcall
shrb
imul
lret
movl
push
jne
mov
xor
repnz
repnz
sub
fdivrl
loopne
or
jb
or
jae
cmp
mov
in
hlt
neg
fmuls
sbb
dec
loopne
sbb
sbb
out
hlt
aas
fistps
std
sahf
dec
jge
push
je
negb
lret
sbb
push
xchg
push
jne
mov
lock
addr16
ret
sbb
jmp
stos
dec
xor
imul
in
std
cmp
into
rcrl
push
test
jnp
xchg
adc
lock
fsubs
aaa
jmp
popa
aas
push
xchg
and
push
movsb
cmp
cmp
pushf
jl
out
and
test
repz
adc
inc
xchg
mov
xchg
fcoml
sarl
jo
push
push
sti
dec
sbb
enter
les
sbb
cltd
jae
gs
adc
pop
push
mov
inc
push
dec
hlt
mov
push
cmp
xor
stos
sub
daa
movsb
loope
icebp
push
push
sub
sub
in
iret
push
pushf
lea
mov
scas
jge
inc
fwait
std
pop
shrb
lds
push
inc
test
mov
sbb
jnp
fildll
pop
xor
adc
div
sbb
data16
inc
into
idivl
lret
lods
add
push
xor
fxch
push
aam
orl
lcall
out
faddp
fsubrs
add
cmp
dec
inc
pusha
xor
and
out
bound
movsl
pushf
fdivrl
bound
out
jecxz
f2xm1
xor
adc
adc
mov
inc
aas
movsl
mov
loope
and
pop
or
adc
xchg
jl
out
sub
or
bnd
push
popa
sub
call
adc
cmp
jae
and
pop
lds
push
mov
mov
shlb
test
jmp
dec
jbe
divb
ret
push
mov
cmp
out
or
imul
or
test
jnp
dec
clc
inc
enter
subb
stc
pop
push
ss
dec
outsl
stos
aaa
cs
mov
cltd
jmp
out
fwait
bnd
and
xor
pop
or
outsb
pop
cmp
imul
jmp
inc
cltd
mov
push
jae
je
pop
cmp
bndldx
lcall
add
push
add
add
mov
nop
aaa
scas
and
push
jl
sarl
nop
mov
mov
pop
jle
lret
sti
mov
pop
jp
aaa
cmp
mov
into
mov
sbb
mull
mov
jge
dec
jecxz
fcmovu
ds
dec
mov
lods
leave
gs
fisubrs
pop
jae
jmp
adc
mov
xor
add
stos
cld
push
adc
xor
and
sbb
or
cwtl
fldenv
mov
dec
pushf
xchg
outsl
cmc
aad
shlb
mov
cmpsl
mov
mov
sbb
movsb
push
mov
mov
jl
add
or
jo
in
sbb
inc
add
ja
add
mov
testb
mov
push
pusha
adc
test
xor
or
xchg
ja
cltd
jb
lods
hlt
in
das
sti
xchg
mov
ds
lret
jg
shl
xor
iret
jne
test
je
int
cmp
dec
je
mov
xchg
das
scas
jnp
sub
xor
xor
jb
push
or
mov
dec
jns
ds
mov
test
mov
xchg
push
mov
xchg
cmp
cmp
pop
repz
xchg
mov
xchg
dec
sub
xchg
dec
mov
loope
aas
and
pop
in
testl
bound
adc
lcall
xorb
aam
push
insb
mov
iret
das
push
mov
shrb
inc
add
inc
loopne
lea
scas
and
pop
imul
loop
dec
bound
mov
inc
sub
inc
in
adc
mov
loop
test
leave
cli
mov
aad
iret
lahf
sarl
push
outsb
sahf
push
sub
int3
sbb
adc
mov
cmpsl
rorl
cld
adc
push
cmp
enter
pop
aam
andl
jp
jge
outsl
fisubrs
mov
scas
adc
pop
repz
push
xlat
push
int
shrl
pop
push
push
sub
jecxz
ret
cs
mov
cmc
and
mov
mov
rclb
inc
and
mov
stos
jg
mov
fstpl
mov
xchg
mov
cmpsb
les
mov
add
and
dec
aas
or
pop
pop
test
add
cwtl
in
outsb
ds
rorl
cmp
mov
add
xor
dec
inc
addr16
fisttps
jns
call
fwait
pop
inc
and
mov
loop
sbb
stos
inc
aaa
fnstcw
out
pop
fsubl
and
popf
lret
sub
sbb
adc
mov
sub
fstps
dec
fisttps
leave
fidivrs
dec
adc
cmpsl
sbb
xor
mov
and
ficompl
int3
and
or
xchg
fstl
nop
fdivl
loop
xor
insl
cmp
cmp
es
outsb
ja
ficomps
insb
adc
pop
lods
or
insl
xor
cld
dec
rclb
mov
xchg
dec
test
xchg
sub
in
stos
lods
sub
rep
mov
fucomi
mov
jo
insl
shll
and
inc
xchg
mov
fwait
sarb
cmc
xor
push
mov
adc
int
fisttpl
xlat
sub
inc
ljmp
mov
es
push
jl
mov
mov
shrb
insb
fisttps
inc
jp
add
mov
pop
not
push
popa
and
adc
xor
jb
mov
pop
pop
das
pop
inc
fld
dec
andl
es
cmp
mov
jp
in
and
add
cld
mov
mov
mov
outsb
outsb
jmp
mov
insb
rclb
sub
scas
inc
mov
cmp
int
push
rclb
cltd
or
std
subl
fistps
push
fdivp
stos
jp
shrl
mov
push
ret
popf
jns
xchg
adc
push
xor
gs
test
out
mov
cli
int
sub
mov
push
data16
fimull
rcrb
fiaddl
add
scas
adc
fwait
cmp
pop
mov
xchg
adc
popa
add
outsb
in
es
out
int
sub
aaa
xchg
js
fcmovne
icebp
ja
movsl
test
jb
ljmp
add
aam
fs
mov
jae
push
cmp
scas
in
jnp
fadd
jecxz
in
mov
xchg
and
and
mov
dec
stos
lea
fnstsw
mov
mov
stos
jecxz
int
stos
sub
out
or
dec
jb
xor
mov
pop
cld
push
jmp
cmc
test
ss
xchg
rolb
mov
push
xchg
cmp
or
jmp
lock
sbb
pop
mov
dec
sbb
pusha
mov
and
pusha
mov
lea
add
xlat
add
adc
xor
fidivl
or
jmp
stos
cmp
push
lcall
push
lock
insl
mov
loop
xchg
lret
add
out
jbe
or
loopne
fs
sbb
in
adc
fiadds
aam
addr16
dec
stos
cmpl
divb
lods
mov
addr16
fists
xchg
pop
daa
add
cmpb
cwtl
sub
sbb
sub
or
cmp
movq
push
test
pusha
call
push
imul
push
scas
insl
or
mov
dec
push
cmp
lods
int3
push
ljmp
scas
push
and
fisttpll
push
jne
int3
mov
stos
daa
push
push
insl
call
dec
or
sbb
or
loop
pop
out
aad
test
add
nop
or
mov
mov
xor
xlat
mov
sti
roll
and
leave
dec
out
inc
lds
add
lods
scas
cmp
push
jno
mov
enter
add
mov
jg
push
loope
jp
add
pop
cltd
sub
cs
enter
mov
aad
pop
movsb
mov
pop
aad
in
into
mov
test
xchg
out
and
xlat
fwait
jbe
aad
cmp
inc
and
cli
pop
lods
fildll
pop
add
sbb
jmp
nop
sar
add
scas
or
push
push
dec
negb
lock
or
xor
or
cmc
push
cmpsl
or
mov
add
test
popf
adc
mov
sub
mov
dec
ja
xchg
mov
test
and
test
sbb
sub
mov
into
mov
jne
shlb
and
add
dec
lds
lock
inc
fs
repnz
dec
js
popa
addr16
mov
xchg
xchg
add
and
popa
lock
add
stos
stos
rcrl
fnstsw
es
popa
iret
push
mov
sub
jl
iret
movsb
lods
incb
jo
or
sub
mov
or
bswap
push
sub
lods
pusha
rcrb
rcrl
dec
test
cmp
imul
sbb
std
movsb
adc
ss
jns
daa
and
daa
push
and
icebp
jecxz
cld
in
lret
xchg
or
ja
repnz
inc
enter
insl
add
inc
loopne
sub
insb
or
in
movsl
and
ret
and
jnp
mov
sbb
mov
pushl
push
out
jno
dec
sub
jp
cld
jl
repz
mov
call
pop
mov
and
cmp
ja
sbb
push
addr16
enter
es
int3
hlt
add
lods
pop
leave
bound
xchg
adc
xor
mov
sahf
leave
outsl
and
ret
jg
push
dec
jl
ret
das
leave
fsubrp
add
inc
fisubrs
popf
in
push
and
sub
imul
and
cs
les
sbb
mov
int
int
mov
mov
jmp
jo
call
sbb
add
or
xchg
and
pop
andl
cli
mov
mov
or
xchg
push
add
in
insb
inc
inc
mov
mov
adc
jns
ret
adcb
js
inc
cmp
outsb
cmp
push
sub
sbb
es
stos
mov
push
add
add
out
mov
sarb
cmp
inc
bswap
inc
and
out
nop
mov
dec
lret
push
mov
fimull
mov
xorl
test
xchg
xchg
out
ss
stc
lret
sub
push
lret
scas
shl
xor
jle
addr16
test
mov
xchg
mov
aad
daa
xchg
sub
jne
mov
sti
sarb
inc
or
push
mov
iret
icebp
dec
or
sahf
insl
fsubs
push
scas
adc
in
jg
inc
je
pop
hlt
xor
insl
adc
xchg
loop
push
stos
outsl
shlb
sahf
sbb
sub
pop
xor
jmp
les
inc
das
imul
imul
push
addl
add
arpl
nop
adc
int3
pop
adc
sub
in
insl
xlat
nop
imul
jno
jnp
loopne
push
or
sbb
repnz
movsbl
sub
sbbl
and
push
and
push
jp
push
dec
adc
into
mov
add
mov
rcll
inc
loop
and
mov
mov
xor
mov
xor
mov
pop
inc
add
outsl
mov
xchg
insb
sbb
xchg
repz
cmp
out
xchg
jge
shrl
mov
orb
and
lods
sub
outsl
push
pop
data16
ret
pop
sbb
pop
loopne
add
pop
pushf
loop
clc
dec
dec
mov
testl
test
cmp
sbb
nop
in
or
sbb
popa
cmpsb
outsl
xor
xor
push
mov
jg
adc
je
sbb
pavgb
jo
leave
xor
mov
push
popf
repz
mov
jo
in
fs
mov
sub
pop
icebp
stc
mov
jbe
xor
data16
jmp
rcll
cwtl
enter
jne
fnstenv
ja
mov
inc
mov
int
ljmp
push
push
ret
loop
jmp
and
xor
imul
es
push
out
fcoml
inc
fisttps
outsb
jmp
push
or
popa
dec
scas
fdivr
sbb
imul
mov
sbb
data16
jnp
fbstp
imul
lods
sbb
ja
and
push
outsb
idivb
push
and
aas
xchg
mov
inc
stos
jecxz
push
popa
gs
dec
push
sti
xchg
xchg
subl
inc
js
loope
jmp
fsubs
jmp
out
push
stos
lds
push
imull
dec
fldenv
cmpsl
cmp
push
cmp
ret
pushf
jns
lock
sbbb
xlat
cmc
in
xor
inc
pop
cmp
mov
ja
sub
dec
inc
repz
leave
push
dec
mov
jg
dec
push
jg
test
pop
jmp
out
sbb
insb
mov
mov
xlat
mov
je
and
xor
mov
mov
mov
adc
push
mov
push
push
xchg
mov
imull
cmp
outsl
test
testb
mov
fisttpl
aam
imul
imul
inc
stos
xchg
in
xchg
or
add
push
insl
in
push
pop
lahf
cmp
xor
popf
sbb
or
cmp
mov
xchg
andb
cmp
or
int
xlat
clc
icebp
mov
cmp
stos
popa
lret
jg
pushf
mov
xchg
jno
out
pop
xchg
test
sbb
test
fildll
jne
lock
add
jns
mov
jg
notb
xlat
mov
jo
push
sub
lds
adc
xchg
jb
push
test
paddsb
adc
loop
mov
lret
or
cwtl
xchg
out
imul
repz
cmpsb
sti
fwait
subb
add
jne
repz
popf
xchg
mov
push
xor
cmp
xor
ret
in
xchg
hlt
cltd
arpl
rol
jle
sbb
jo
lods
mov
je
ljmp
nopl
cwtl
cmpsb
addr16
cmp
movntps
inc
adc
cmp
mov
stos
lahf
gs
loope
add
data16
jmp
in
sub
jecxz
xor
pusha
dec
js
xchg
jmp
xor
cs
lods
add
jle
sti
push
cmp
xor
pop
fidivrl
mov
jl
dec
push
scas
mov
aad
pop
test
fucomp
cmc
jnp,pt
ja
mov
ret
testb
icebp
sub
loope
mov
mov
jns
mov
pop
adc
lahf
cmp
lret
cmp
orb
fsubrl
lods
sub
push
mov
sub
mov
sub
jmp
lahf
cmpsb
cmp
mulb
mov
mov
mov
jle
divb
pop
pop
insb
test
popf
stc
or
xor
jge
pop
jge
or
fists
dec
shl
shll
out
ret
hlt
lcall
test
es
inc
ffree
rorb
fmul
lahf
push
js
scas
call
dec
iret
add
fadds
sbb
jno
ja
mov
cmp
pop
push
repnz
ja
ds
out
test
stos
pop
xchg
xorb
push
lcall
xor
bound
sahf
mov
xor
adc
mov
les
sbb
es
push
xor
xor
repnz
pushf
test
or
rcr
and
or
cmp
and
sbb
dec
es
aas
xlat
sub
rclb
jo
movsl
pop
inc
scas
arpl
xor
jb
ficoml
mov
insb
inc
imul
fcmove
dec
push
ficoml
sub
fwait
mov
sbb
cmpsl
and
or
push
add
add
out
jl
test
jmp
js
inc
into
paddw
or
mov
je
pop
fdiv
pop
das
test
ret
test
bound
pop
test
scas
jno
lods
sbb
addb
pop
mov
mov
or
stc
repz
mov
stos
xor
inc
lcall
arpl
adc
xchg
jl
rcl
jno
movsb
mov
dec
lock
mov
lods
bound
mov
xchg
fcoml
stc
das
push
sbb
add
pop
sar
mov
mov
sub
out
or
sbb
jp
pop
inc
sub
mov
pop
roll
mov
fistpll
pusha
push
jmp
ljmp
xor
sti
dec
lock
adc
ja
mov
dec
insl
in
jecxz
jle
fsub
lahf
xchg
lods
lods
fldcw
mov
cld
adc
mov
js
icebp
sbb
aaa
cmp
mov
cltd
mov
inc
bound
or
pop
inc
test
into
stos
sbb
pop
mov
pop
pop
sub
xlat
push
or
adc
sahf
mov
ja
cwtl
adc
scas
jne
hlt
pop
sbb
add
dec
fwait
mov
dec
adc
push
shll
mov
call
out
and
mov
daa
lods
icebp
in
add
test
sub
fdivr
imull
dec
iret
mov
add
push
xor
mov
inc
cmp
pop
mov
push
push
dec
jp
fcomps
icebp
xchg
xchg
out
push
movsb
lret
sbb
lahf
mov
int3
in
inc
shlb
cmp
push
cmpsb
sub
xchg
test
lahf
ret
xchg
mov
icebp
lds
sar
dec
sub
xchg
xchg
into
adc
mov
aaa
jle
mov
clc
ss
test
lods
jl
cmpsl
lahf
and
fstpt
cld
mov
xor
mov
cmpb
xchg
sub
adc
sbb
xchg
jl
mov
lcall
adc
int
sub
aad
xor
or
pop
popa
adc
inc
mov
call
fmull
das
pop
mov
xchg
dec
push
mov
cltd
sbb
dec
mov
xor
mov
xchg
mov
xor
xor
loopne
inc
sub
inc
dec
outsb
into
dec
xlat
std
jns
push
lahf
and
test
in
xor
aad
repz
push
xchg
iret
and
xlat
enter
aam
mov
push
jecxz
dec
fwait
or
popf
mov
jo
xchg
push
cs
xchg
add
push
fs
aad
icebp
loope
push
xchg
mov
into
xchg
imul
and
jne
xchg
or
movsl
fstpt
les
and
icebp
cmp
sti
ret
xchg
dec
imul
sarl
mov
repz
jb
pushl
mov
cmp
aas
out
loope
inc
orb
pushf
push
push
nop
mov
dec
aas
repnz
pushf
sub
int
inc
nop
add
test
repnz
sahf
daa
repnz
pop
sahf
mov
addl
adc
pop
cwtl
mov
hlt
fs
jmp
movsl
pop
inc
pop
push
outsl
or
dec
test
or
jge
xchg
test
xor
stc
icebp
sub
insl
bound
jbe
stc
ret
rol
pusha
divl
insb
pop
data16
add
out
dec
arpl
fwait
in
pusha
imul
aas
fs
test
mov
ret
std
xor
push
es
repz
in
mov
add
testb
cwtl
xchg
in
insl
pop
ds
push
cmpsb
and
stc
nop
jmp
jns
int
orl
mov
and
mov
inc
inc
pop
mov
rorl
movsb
ficomps
fs
xchg
loope
xchg
xor
cmpsb
mov
outsb
mov
adc
pop
mov
xor
iret
pop
lret
xorb
bound
es
test
in
popf
pushf
frstor
ljmp
and
xor
cmp
rcl
in
push
or
push
cmp
out
xchg
pusha
dec
adc
pop
mov
pop
pop
xchg
sti
movsl
and
pop
in
and
call
mov
cmpsl
push
add
call
mov
pop
and
mov
mov
out
mov
popf
imul
push
jo
mov
mov
jecxz
fsubp
jbe
mov
test
lret
aaa
xchg
ror
repz
xor
test
cmc
adcl
stc
mov
xor
mov
cmp
xorl
xchg
cwtl
push
mov
out
or
out
lods
lahf
scas
pop
sbb
adcb
xchg
pop
cmp
mov
xchg
xor
pop
sbb
cmp
or
lods
push
int
lea
inc
leave
jne
dec
shlb
mov
notb
adc
imul
gs
sbb
add
lcall
xlat
out
sarb
xchg
out
mov
xchg
jg
lret
pusha
daa
fldenv
stos
lock
mov
and
testb
push
sub
mov
push
adc
roll
popa
push
xor
dec
out
push
lods
or
xor
push
mov
mov
mov
add
scas
aad
out
jns
cmc
mov
arpl
aam
mov
sbb
jae
adc
xor
xchg
adc
jno
faddl
mov
push
push
xor
sti
xchg
cmpsl
push
xor
xlat
add
outsb
std
call
jne
add
adc
daa
adc
cltd
jno
push
test
imul
xor
test
sub
or
pop
aas
fnstenv
cmpsl
mov
or
popf
mov
mov
jne
arpl
sub
dec
lret
xor
jge
notb
sbb
int
mov
jns
dec
ja
push
mov
lret
cmp
test
lret
rorb
clc
test
clc
pop
and
out
stc
sub
xchg
mov
xchg
mov
jmp
loope
lret
xchg
pop
cwtl
xchg
call
cmp
jg
in
sub
jnp
mov
jge
push
shr
imul
test
je
and
xchg
iret
cli
lahf
or
push
lds
inc
fnstenv
scas
mov
repz
cmp
push
sbb
dec
mov
idivl
mov
imul
imul
pop
aad
out
data16
pop
mov
xchg
push
ljmp
jl
ret
roll
xor
cmpsb
inc
or
jecxz
rcrb
icebp
sub
xchg
mov
aam
in
fcoms
xor
inc
outsl
cld
mov
jecxz
mov
mov
fidivs
popf
xchg
into
dec
xor
jae
lods
mov
loop
mov
dec
mov
lret
data16
xor
inc
js
add
out
add
shrl
dec
xchg
lods
imul
mov
push
ljmp
cmc
aas
dec
ret
mov
cmp
xchg
pop
inc
inc
sub
fdivr
xchg
testb
or
mov
shlb
gs
inc
xchg
cli
out
stos
ret
pop
mov
or
out
inc
mov
add
inc
nop
mov
push
xchg
cwtl
das
sub
sbb
out
faddp
adc
aad
mov
dec
or
repz
fisubl
ret
push
pop
push
in
cs
cld
negb
xchg
movsl
out
scas
xchg
adc
inc
mov
mov
out
popa
dec
inc
call
jne
mulb
add
sub
or
in
mov
jg
adc
js
cmpl
jno
popf
ja
out
shlb
mov
mov
cltd
lcall
sub
out
xor
mov
gs
adc
inc
sbb
mov
lcall
jb
jmp
mov
xor
pop
dec
stos
pop
adc
out
orb
pop
inc
xchg
das
lods
mov
push
fsubp
or
fisubrs
or
stos
cmp
adc
ret
mov
sbb
cmpsb
shlb
mov
popf
xchg
jo
pop
jle
or
dec
adc
in
inc
pop
jge
xor
or
rclb
popf
hlt
lods
add
int3
sub
cs
mov
pop
mov
ljmp
jmp
mov
scas
sub
jbe
das
js
mov
addr16
or
xchg
jmp
popa
subb
or
insl
dec
or
inc
mov
outsl
jge
xor
or
mov
jne
movsl
shlb
jmp
jb
sub
lret
data16
add
push
cli
loopne
lahf
lret
and
bound
dec
aas
dec
mov
or
rorl
cwtl
jecxz
adc
sub
mov
sbb
mov
add
xor
test
jno
loope
movsl
push
dec
shl
popa
xchg
pop
scas
test
push
mov
dec
mov
in
sti
aas
hlt
cld
dec
in
scas
xchg
xchg
call
add
or
mov
xor
sarl
dec
cmc
pop
lods
push
arpl
and
ficomps
movsb
sbbl
into
orb
shll
xor
mov
inc
and
cmpsl
pop
loopne
mov
mov
adc
insb
mov
jecxz
lret
mov
xor
xchg
dec
cmp
xor
loop
and
mov
insb
push
loopne
call
scas
mov
call
in
sub
adc
loope
cmp
repz
shll
stos
cltd
xchg
and
sbb
lret
sub
xor
ficompl
cmp
stc
int3
cmpsb
cmp
xchg
loope
dec
mov
fldl
jb
fsubr
pop
clc
xchg
and
js
dec
std
ljmp
push
je
lods
and
mov
neg
xor
loop
sbb
sub
fstps
xchg
fildll
call
jno
icebp
in
and
pop
push
ret
test
int3
frstor
les
leave
and
iret
xchg
cmp
pop
lds
push
mov
adcl
and
cwtl
pop
repnz
mov
or
sbb
std
dec
cmovb
mov
jne
or
xor
in
xor
xchg
cld
iret
daa
or
aaa
or
lods
and
in
aaa
and
ret
fmull
hlt
adc
mov
push
lahf
std
mov
xchg
out
aaa
xor
test
sub
shrb
mov
dec
andl
add
mov
adc
cmp
fdivl
mov
leave
dec
test
fs
jb
jae
or
sbb
sub
test
jo
adc
xor
and
insb
adc
fwait
mov
sub
mov
jp
ja
test
jle
mov
sbb
insb
xchg
sbb
aad
shr
cmp
mov
jae
pop
or
movsb
jg
jl
jae
sub
fldenv
rolb
lds
shll
mov
pop
popl
cmp
mov
push
dec
dec
aad
add
xor
pop
adc
rcl
mov
imul
cmp
jge
ss
decl
pop
out
add
push
lods
imul
outsl
add
inc
fstpl
sbb
mov
fiadds
std
leave
es
stos
xor
mov
in
push
mov
fnstsw
jle
vprotd
out
out
lock
mov
nop
mov
ror
jae
rcl
fbld
cwtl
shl
scas
jge
jb
arpl
sub
dec
jae
lret
imulb
mov
adc
adc
inc
sti
jg
cmpsb
cmc
jnp
mov
lods
sti
or
jbe
sbb
jno
lret
movsl
xchg
and
jmp
cltd
loope
fdivs
cmp
mov
sbb
repz
imul
ret
bound
sbb
test
dec
mov
ret
lret
lods
daa
insb
loope
mov
pusha
out
test
add
mov
push
outsl
pop
pop
cmpsb
sti
pop
adc
fisubrs
pop
or
adc
jne
push
sbb
ficompl
jl
pop
rcr
mov
fxch
inc
daa
addr16
aas
jle
inc
or
mov
adc
lahf
das
push
jle
fcmovnbe
dec
movsb
lods
push
aaa
rcrl
sub
pop
or
pushf
aas
in
ljmp
test
mov
es
movsb
jbe
dec
xlat
push
add
add
adc
cmp
xchg
rcll
in
and
mov
mov
imul
nop
jae
mov
std
aam
cltd
mov
push
lret
adc
jl
lds
xchg
pop
popa
fsubrs
mov
ss
scas
icebp
std
test
jg
sbb
fstpl
adcl
mov
icebp
dec
insl
or
sbb
and
aam
daa
out
aaa
in
xlat
clc
leave
inc
ds
mov
imul
mov
jno
int3
push
mov
cmp
dec
xchg
dec
jmp
jg
enter
jmp
bnd
mov
out
pop
mov
mov
mov
es
hlt
and
rcrl
repnz
inc
inc
insl
pop
movsb
mov
ret
lock
mov
loop
adc
les
ljmp
push
cwtl
ds
pusha
ret
jo
pushw
jo
test
in
stc
jnp
sbb
push
lock
ret
lret
or
nop
int3
bound
popf
xorb
dec
in
stos
adc
shl
enter
push
in
imul
fcompl
jno
pusha
outsb
inc
cwtl
mov
dec
sub
int3
xor
xchg
xor
jl
dec
data16
mov
mov
mov
or
mov
je
fsubrs
ret
mov
scas
je
sbb
pop
stos
je
scas
push
inc
cmp
push
mul
dec
or
mov
mov
loop
dec
jae
sub
lods
xchg
insb
pop
push
cmpsb
rcrb
int3
add
je
cmpsl
jp
hlt
inc
jge
adc
or
bound
mov
xchg
and
xchg
jecxz
int
push
lock
loopne
test
les
lahf
jl
lcall
sub
popf
bound
psrlq
jge
in
xchg
aad
hlt
lret
jle
sub
scas
lcall
or
mov
sub
pop
rcrl
xchg
sbb
jp
inc
pop
xchg
ret
stos
push
adcb
sub
sbb
sub
loope
xchg
addl
jo
js
fcomp
fsubs
shlb
fists
cmc
pop
inc
inc
and
loop
js
xor
loope
fs
not
xlat
in
push
fstpt
popf
mov
fistl
push
arpl
xchg
test
icebp
pop
and
fmul
inc
cmp
jbe
shll
pop
fcomps
insl
enter
rorl
inc
mov
cmp
lahf
adc
jmp
std
push
xor
pop
xchg
jo
sub
into
push
xlat
xor
xchg
out
lods
jge
xchg
mov
push
lcall
push
add
push
or
lea
lods
cltd
dec
and
fsubl
cmp
test
or
ja
adc
cmpsl
cmp
cmp
sub
rcrl
mov
lds
imul
sub
lods
and
pop
test
jmp
mov
inc
adc
xchg
lods
add
icebp
test
negl
stc
dec
insb
or
out
or
std
xlat
cmp
jle
cmp
cmp
aam
out
aam
xor
mov
cs
imul
mov
sahf
sub
xchg
ret
xor
jl
sub
pop
int3
call
iret
add
insl
mov
cmpsb
mov
adcl
je
pop
stos
movsb
jecxz
jg
adc
je
test
cmpsb
sbb
imul
std
je
inc
andl
in
les
testb
xor
dec
sub
adc
gs
xchg
inc
test
dec
dec
jae
push
orl
aas
sahf
mov
sub
mov
pop
in
push
cltd
out
dec
xchg
jnp
ja
flds
mov
mov
xor
int3
stc
lcall
cld
lock
cmp
add
aam
enter
loope
pushf
inc
lea
test
popa
fadds
mov
mov
dec
mov
mov
xlat
and
and
inc
pop
and
aad
shl
cmp
daa
sub
out
fsubrs
xchg
pushf
out
mov
js
add
fdivl
pop
push
mov
dec
mov
and
pop
mov
aas
fcompl
fcomi
test
push
aad
cmc
xlat
sarb
dec
add
push
or
cs
icebp
sub
xchg
dec
jo
xchg
jns
cmpsl
sbb
fcmovbe
mov
lods
es
dec
int
and
pop
in
jno
sbb
loopne
push
add
mov
add
lret
adc
cld
jge
imul
fbstp
push
aad
hlt
cld
lahf
pop
push
fdiv
or
adc
popf
add
and
or
push
dec
xor
rolb
test
xchg
in
pop
cmp
cmp
in
mov
dec
imul
pushf
push
push
jge
add
filds
bound
stc
sub
xchg
mov
out
xor
test
repnz
fistpl
mov
sub
test
mov
pusha
pop
and
fisttpll
and
jp
pop
push
movsb
or
addl
inc
insb
cwtl
mov
pop
jbe
sub
add
inc
stos
mov
and
mov
outsl
push
dec
loop
pop
adc
std
mov
repnz
dec
push
lock
jnp
push
adc
adc
enter
mov
cli
mov
mov
mov
out
cmp
xlat
or
jne
inc
inc
push
or
stos
pop
in
dec
int
mov
jo
inc
cmp
test
push
xchg
cmpsb
pop
test
jl
mov
enter
xor
lret
ljmp
mov
and
cmpsb
lcall
xchg
mov
jns
xchg
fcoms
cli
les
fidivrl
pop
adc
add
pop
mov
dec
jns
ss
cmpsb
push
sbb
pop
jl
pusha
push
pop
push
test
es
xor
in
int
cmp
dec
push
sub
rsm
xor
jnp
cmpsl
mov
xor
adc
lcall
adcb
insl
inc
mov
mov
nop
pop
addb
and
notb
pusha
test
mov
mov
cmp
popa
xchg
cs
fcoml
push
fwait
mov
xor
or
jo
inc
movsl
push
sbb
gs
loopne
cmp
mov
cmp
hlt
inc
cs
mov
popa
int3
js
inc
mov
sahf
icebp
cmp
mov
mov
jmp
leave
mov
neg
int3
shl
sub
jge
sbbl
pop
and
and
bound
movb
sbb
mov
pusha
aad
jb
add
pusha
out
loopne
loopne
dec
adc
sahf
icebp
xchg
mov
popf
mov
adc
mov
cmp
outsb
xchg
push
outsl
add
and
movsb
insb
pop
mov
mov
or
je
subl
fst
xchg
sub
jns
pop
jns
aam
js
inc
adc
add
in
outsb
fbld
push
stc
das
sti
imul
ds
mov
add
push
mov
roll
dec
lahf
lock
rorb
out
shl
cwtl
xchg
mov
adc
sti
jne
outsl
lods
sbb
adcl
in
sbb
ds
jp
adc
xchg
mov
int
iret
push
push
cpuid
inc
jmp
jmp
sub
cmp
xor
sbb
pop
sub
push
jl
hlt
in
mov
add
int
outsl
jno
outsl
fmuls
test
fdivrs
pop
mov
jg
shl
push
mov
lods
decl
jnp
in
mov
mov
add
dec
cmp
cwtl
jnp
rorb
mov
lahf
or
pop
mov
int3
movd
aad
add
dec
andl
scas
sbb
mov
cmp
cmp
mov
int3
loop
pop
mov
fstpl
cmp
loop
pop
mov
jg
push
push
sub
rcll
fs
mov
mov
lds
cmp
test
push
cld
ftst
or
enter
xchg
in
addr16
call
xchg
or
push
movsl
cs
push
pop
sar
fwait
sbb
int3
push
in
sub
jae
mov
pop
rolb
inc
mov
push
sub
int
jns
push
fists
jge
cld
pop
push
sbb
xchg
scas
decl
clc
cmp
scas
cld
lods
out
in
dec
push
jp
mov
inc
or
loopne
adc
dec
and
in
dec
xor
mov
pop
or
and
add
fcomps
mov
cli
xchg
hlt
stos
pop
out
mov
fmull
adc
jmp
add
fsubs
sahf
sarb
sbb
inc
mov
xor
inc
loope
jge
sti
mov
data16
inc
inc
lods
inc
jno
fisttpll
cltd
push
xchg
xor
or
aam
xchg
mov
mov
dec
xlat
jle
push
insl
sbb
lods
mov
pop
gs
sub
mov
xchg
pushf
fidivs
push
dec
xchg
cmp
test
int
and
lock
sbb
inc
adc
and
jg
jb
mov
outsb
mov
push
test
movsl
xchg
mov
mov
insb
outsl
pop
in
pushl
out
popa
sahf
repz
into
leave
mov
shll
jbe
xchg
repnz
sti
popa
cmp
fdiv
out
xor
arpl
cmp
ret
shll
into
jno
ret
sbb
iret
or
cmp
or
ss
lock
push
mov
aam
or
cwtl
cmp
repz
add
jo
fcomps
int3
int3
pop
sub
jge
insl
notl
gs
roll
mov
es
pop
fildll
lea
lahf
push
sub
adc
jl
lret
push
in
jo
jnp
dec
and
add
mov
movzbl
and
and
xchg
dec
mov
dec
mov
xor
lea
imul
inc
inc
inc
movswl
dec
dec
jne
imul
mov
lea
and
pop
mov
dec
pop
or
mov
pop
mov
mov
lea
dec
inc
inc
lea
lea
lea
add
sub
add
ret
push
push
add
mov
push
inc
dec
add
dec
dec
and
push
sub
movswl
sub
lea
push
lea
add
dec
sub
mov
mov
movzbl
push
and
mov
inc
push
imul
imul
xor
sub
inc
push
sub
dec
push
imul
inc
pushl
add
call
inc
add
dec
inc
lea
sub
mov
lea
inc
pop
ret
dec
dec
and
cmp
jb
add
xor
mov
mov
add
or
mov
inc
dec
inc
mov
inc
dec
lea
dec
mov
mov
mov
cmp
jb
imul
pop
mov
or
add
dec
add
add
mov
sub
add
xor
xor
dec
sub
xor
dec
lea
mov
add
inc
test
jbe
inc
imul
imul
lea
inc
inc
xor
inc
imul
imul
inc
and
and
movzbl
lea
mov
add
movzbl
inc
mov
add
dec
add
and
dec
mov
inc
dec
mov
mov
mov
mov
mov
imul
mov
mov
imul
movsbl
sub
inc
dec
jne
mov
sub
dec
sub
inc
add
add
imul
dec
inc
lea
mov
inc
inc
sub
imul
lea
dec
add
dec
mov
inc
inc
test
jbe
dec
lea
dec
inc
movzwl
movswl
lea
and
dec
imul
lea
mov
and
dec
add
inc
add
inc
add
add
mov
and
and
imul
lea
mov
dec
add
movzbl
dec
lea
add
inc
add
and
mov
sub
mov
inc
dec
movzbl
dec
sub
mov
mov
xor
mov
movzbl
lea
movzbl
lea
sub
add
dec
jmp
push
imul
inc
lea
imul
sub
mov
add
inc
mov
or
add
mov
inc
lea
mov
mov
mov
inc
sub
imul
mov
imul
lea
lea
sub
inc
lea
movswl
inc
dec
mov
mov
sub
sub
imul
add
mov
inc
inc
cmp
je
dec
mov
mov
push
inc
call
call
movzbl
add
call
call
sub
inc
movzwl
lea
mov
mov
mov
ret
inc
add
pop
mov
ret
push
movswl
inc
inc
dec
mov
push
or
inc
push
imul
push
imul
push
inc
mov
inc
mov
inc
call
lea
push
lea
add
xor
sub
sub
and
neg
xor
inc
and
imul
add
add
mov
mov
sub
mov
mov
sub
inc
or
add
dec
je
lea
movzbl
inc
mov
add
mov
mov
inc
add
movsbl
mov
repnz
add
and
add
inc
jmp
dec
mov
and
lea
imul
add
mov
inc
dec
dec
sub
inc
mov
inc
jmp
gs
xchg
push
test
insb
xchg
or
pop
shlb
lcall
jns
adc
mov
mov
push
test
fwait
inc
inc
push
sbb
clc
movsb
je
sahf
jo
shlb
push
loop
ss
bnd
lret
xlat
movsb
cmp
out
loopne
hlt
push
incl
insb
lods
add
into
scas
fcmovbe
repz
cmp
daa
cmpsb
push
shlb
push
loope
insl
mov
push
sub
fimull
in
pusha
jae
pop
pop
pop
mov
inc
jmp
pop
outsb
sbb
iret
and
stos
mov
insb
sub
mov
inc
and
movl
inc
jge
jg
les
sbb
sar
push
add
lcall
mov
push
mov
sti
js
aaa
shlb
inc
fidivl
cmpsb
fimull
repnz
cmp
push
sbb
jp
lods
ret
dec
mov
ljmp
out
ret
icebp
push
shl
or
mov
push
ret
inc
xchg
xlat
scas
sub
or
iret
int
scas
cmp
sbb
loop
idivl
mov
xor
xchg
out
test
dec
xchg
xchg
scas
mov
jno
call
in
arpl
das
mov
mov
fwait
lcall
mov
addr16
loope
ljmp
xchg
pop
mov
mov
movsl
lahf
jl
push
add
push
jge
sbb
add
push
cmpsb
sub
push
fwait
add
call
pop
subl
xchg
addl
rcll
jb
lret
mov
sub
dec
scas
pop
mov
or
add
movswl
adc
pop
push
xchg
aaa
adc
adc
cmp
inc
pop
stos
repnz
ja
jl
fld
test
mov
pop
pop
cmp
cs
push
pop
addl
xchg
leave
jne
push
jno
mov
adc
cmp
ds
test
shl
gs
fwait
test
mov
lcall
cmp
lock
push
mov
popa
mov
popl
xchg
lock
xor
dec
and
arpl
or
hlt
mov
mov
icebp
out
xchg
fcom
or
inc
and
cld
xchg
dec
mov
cmp
adc
sub
push
lcallw
in
pop
notl
bound
xchg
std
cmpsb
movsl
mov
stos
push
arpl
jmp
mov
fs
out
push
sarb
lods
mov
insb
roll
loopne
ljmp
adc
jle
int3
dec
push
xor
fadds
dec
push
out
jg
mov
in
out
in
fisubrl
imul
data16
cmp
jmp
repnz
call
scas
movsb
dec
stc
mov
jbe
jl
insl
cmp
mov
psllw
dec
push
dec
mov
pop
cmpsb
dec
mov
fistps
and
clc
push
fucomi
xor
lock
daa
mov
ror
test
das
pop
mov
mov
mov
push
add
dec
mov
andb
inc
push
popf
mov
dec
adc
movsl
mov
pop
mov
adc
test
adc
jo
sub
pop
jmp
xor
outsb
call
xchg
xchg
lcall
es
syscall
add
add
fisubrl
jle
jnp
mov
xlat
sub
out
xchg
mov
sub
fistl
fistps
xor
jp
jge
mov
clc
in
test
test
int
jl
jmp
into
lds
pop
add
ret
xor
popf
arpl
sub
push
cwtl
push
mov
sarb
sub
bound
xor
popf
lods
and
test
mov
jns
jae
data16
daa
jge
and
and
xor
orl
xor
mov
push
aas
inc
lar
pop
or
lcall
jno
jl
aaa
jno
test
pushf
mov
jb
mov
popf
hlt
mov
nop
jno
daa
mov
insb
push
add
mov
adc
xor
xor
add
mov
xorl
pop
unpcklps
jbe
int3
dec
loopne
xchg
dec
and
pop
cmp
mov
sub
out
and
push
and
iret
lea
movsl
cmp
mov
fmull
dec
out
push
daa
push
mov
mov
mov
jmp
ret
pop
das
nop
insb
out
lret
in
push
hlt
pop
xchg
mov
nop
rcrb
adc
iret
mov
int3
dec
add
sub
int3
push
add
pop
dec
mov
add
faddl
pushf
cmp
test
jno
clc
ds
in
mov
in
push
xor
jne
test
je
fs
das
hlt
imul
dec
add
lcall
lahf
dec
out
movsl
pop
lods
xor
mov
mov
pop
lods
addr16
fdivr
inc
xchg
push
push
sub
xorl
jmp
sbb
fcomps
cmp
sub
jne
cltd
dec
sbb
shrl
add
mov
dec
cltd
xchg
or
fs
push
mov
dec
loop
arpl
jle
push
jle
jl
cmc
dec
adc
ret
mov
sub
jne
jbe
cli
dec
xchg
lahf
lods
nop
and
rol
inc
jns
shl
lahf
in
addr16
inc
add
mov
testb
not
add
fcoms
outsl
fs
xlat
adc
pop
jns
cmp
fstpt
push
lods
rcll
cs
mov
andl
jb
int
jb
repnz
inc
adc
sub
add
pop
mov
es
jnp
ret
lea
mov
nop
sbb
sbb
clc
push
stos
inc
loopne
xor
hlt
or
mull
cmp
lods
xor
mov
idivb
sbb
repz
pop
jnp
sub
mov
pop
xor
jge
xchg
ja
sub
cltd
clc
jno
cmp
sub
sub
adc
cmp
out
rcl
jmp
movsb
add
ss
mov
jb
mov
iret
repz
pop
ret
fs
popf
loopne
sub
imul
add
cmovo
mov
xor
popa
ret
add
xor
gs
nop
insl
lea
out
dec
or
movsb
es
or
xor
sub
jo
or
imul
cmp
aad
sbb
push
xor
js
fistl
data16
push
daa
mov
lock
rcrl
mov
pop
inc
inc
mov
lock
in
xchg
pushf
cmp
mov
add
jecxz
adc
mov
sub
cmpsb
pop
adc
inc
push
mov
shlb
sbb
xchg
rol
jmp
mov
add
pop
adc
cmp
and
jbe
sub
popf
aad
inc
clc
mov
or
sub
inc
jno
sub
lcall
fsubs
fsub
cmp
add
jns
pop
fcmovnbe
or
scas
push
sub
or
sub
cs
cmpsl
fldt
mov
daa
lock
push
inc
fsubl
test
push
push
mov
mov
jo
jmp
fstl
mov
push
pop
pushf
ljmp
cmpsl
xchg
aas
mov
lock
movl
xor
mov
movsb
sub
test
test
push
jmp
sub
cmpb
lret
lds
aam
xor
adc
das
fcompl
jmp
add
jbe
enter
test
rcrl
mov
pop
xchg
ljmp
jne
add
in
xor
cmpsl
das
movl
add
std
mov
fcmove
rcll
xor
add
sub
repnz
push
xchg
fs
or
or
and
loop
lock
rclb
lock
pop
inc
mov
loop
aas
jo
add
push
xchg
push
out
ret
push
xchg
xor
ja
out
pop
lret
test
jl
fldt
xor
inc
push
sbb
lahf
out
lds
in
das
inc
mov
jge
fs
out
test
jne
mov
out
jb
pop
xor
pop
icebp
add
stos
inc
push
dec
sub
jmp
testl
jecxz
mov
hlt
es
add
xchg
or
sbb
insb
mov
adc
mov
shl
sar
cmpsl
in
push
pop
fwait
pop
cmp
mov
mov
into
xor
push
mov
mov
icebp
gs
insb
lret
mov
into
and
movntq
jae
cmp
push
popa
add
fsubrp
xorl
cmp
loop
cmpsl
xchg
imul
jbe
addr16
xchg
insl
mov
stc
cmpsl
push
dec
call
loopne
inc
out
sbb
add
pop
jnp
inc
gs
popa
xchg
jmp
and
leave
xchg
das
scas
push
insl
xchg
push
sub
fwait
icebp
jg
rcrb
lock
xchg
hlt
imulb
jo
and
out
mov
lock
pushf
clc
mov
inc
mov
xchg
imul
sti
jae
pop
sbb
mov
int3
std
cli
les
inc
cmp
jecxz
in
add
ljmp
push
lret
xchg
mov
xchg
jg
lret
push
and
jne
daa
scas
loope
icebp
rcrl
push
sbb
leave
xchg
into
sub
outsb
inc
pop
hlt
js
cwtl
mov
movsl
xor
inc
test
adc
push
ja
xchg
fstl
dec
cli
sub
lods
aam
fmul
mov
stos
add
cmpsl
xchg
sahf
loopne
repnz
pop
inc
jb
pop
out
cmp
push
leave
pop
mov
dec
mov
jns
arpl
sub
mov
shl
std
xchg
dec
subl
or
mov
xor
sete
fwait
add
testb
mov
mov
jns
shr
mov
out
arpl
mov
pushf
xchg
pop
pop
inc
negl
adc
sbb
pop
rclb
push
adc
xor
imul
ljmp
cwtl
xor
xchg
push
jb
enter
lret
dec
pushf
adc
mov
stc
addr16
sbb
loope
call
lea
inc
popf
stos
inc
repnz
sti
daa
or
in
jl
push
fisubl
test
xor
movsb
inc
in
ficoms
or
cs
sahf
cli
shll
out
or
sub
jecxz
leave
or
sbb
xchg
test
add
xor
and
test
dec
movsl
mov
popa
jmp
fwait
cmp
sbb
scas
icebp
and
pusha
jns
fdivrs
sub
out
jo
dec
lock
ljmp
aam
ss
ljmp
jg
or
push
shr
cmp
push
mov
sbb
mov
bound
mov
adc
push
cmpsb
into
or
jbe
aaa
popa
push
into
adc
inc
xchg
jne
cltd
push
push
sbb
pop
mov
inc
sbb
mov
orl
adc
mov
stc
mov
jp
add
ja
call
fwait
movsl
adc
mov
jmp
mov
test
mov
ds
ss
fisubrs
sbb
or
mov
jnp
loopne
jb
addr16
leave
push
addr16
push
out
aaa
or
add
nop
mov
data16
aad
fcmovbe
aam
sbb
daa
fistpll
pop
push
fwait
add
fbld
adc
gs
xor
into
mov
mov
inc
fcoml
rcl
fs
stos
imul
xchg
cmp
push
out
mov
inc
xor
mov
xchg
loopne
ja
inc
pop
daa
pmulhw
cltd
mov
mov
test
jle
arpl
cmpsl
test
mov
add
sbb
aad
xchg
movsl
or
rolb
int
xchg
daa
test
shrl
pop
push
xchg
dec
fadd
sbb
inc
pusha
push
les
int3
bswap
cmp
mov
dec
adc
stos
dec
sti
dec
sti
cld
adc
insl
les
add
rclb
lods
ret
push
pop
jnp
dec
mov
mov
mov
push
push
cmp
cld
ds
inc
xchg
dec
nop
inc
push
sub
int3
dec
or
xor
pop
cli
pop
jnp
lret
jecxz
inc
cs
add
mov
cs
je,pt
rorb
add
pop
sbb
push
pop
aaa
loop
and
cmc
jecxz
sub
pop
test
popf
in
push
cmp
fcom
mov
movsl
jecxz
mov
sarb
int
outsl
cmp
in
cld
push
jnp
pop
into
xor
cld
xchg
sahf
out
mov
and
and
and
push
jl
mov
inc
adc
push
sub
mov
rcll
std
push
push
cwtl
ret
test
orb
jl
sub
xchg
shlb
sbb
mov
add
adc
push
add
jno
push
cs
jle
cli
mov
pop
and
and
or
hlt
jne
push
ss
loope
stos
jge
inc
push
ds
push
rolb
xchg
sbb
cmpsl
or
leave
xor
mov
repnz
out
fstps
mov
mov
mov
mov
jl
cli
push
xchg
hlt
mov
dec
add
cli
lods
bound
and
sbb
popf
lea
ret
rep
mov
ret
mov
push
pop
dec
loop
lods
sbbl
add
ss
in
jo
cmp
leave
mov
int3
xlat
mov
mov
push
in
fisubs
pop
fwait
imul
inc
inc
pop
dec
xchg
xchg
and
mov
push
in
decl
lcall
sti
aam
sub
inc
aas
repnz
mov
sbb
add
nop
shll
dec
out
dec
aad
or
in
inc
clc
dec
out
js
repnz
pop
out
cmp
cld
fcmovnb
and
add
int3
jb
loop
mov
push
mov
lea
dec
call
add
inc
call
sub
push
inc
call
dec
lea
movzbl
add
dec
lea
call
imul
add
mov
inc
inc
dec
dec
add
inc
add
xor
dec
movswl
call
mov
add
dec
dec
mov
call
inc
and
call
add
dec
lea
movswl
dec
inc
inc
lea
pop
lea
add
sub
add
xor
pop
lea
pop
add
sub
inc
xor
pop
add
inc
mov
mov
mov
xor
mov
inc
pop
mov
lea
pop
movzwl
add
mov
inc
lea
call
lea
add
inc
or
ret
mov
add
push
mov
lea
push
lea
dec
push
mov
inc
push
sub
add
push
mov
inc
mov
mov
push
inc
ret
push
movzwl
push
lea
or
dec
mov
push
mov
lea
or
call
pop
ret
jmp
dec
lea
pop
pop
ret
push
movzbl
add
sub
mov
inc
lea
add
mov
lea
inc
dec
add
inc
inc
add
inc
inc
or
sub
inc
mov
movsbl
dec
sub
and
inc
add
dec
pop
ret
sub
or
mov
mov
dec
mov
sub
mov
mov
mov
lea
mov
mov
mov
xor
inc
mov
mov
mov
sub
inc
add
sub
inc
dec
or
lea
cmp
jb
movzbl
push
mov
mov
push
sub
lea
push
dec
dec
xor
inc
dec
xor
xor
and
xor
add
lea
push
inc
inc
push
mov
or
pop
mov
inc
lea
inc
dec
or
mov
inc
mov
mov
xor
dec
inc
mov
movzwl
sub
mov
add
movzbl
inc
inc
mov
add
mov
inc
add
imul
and
movzbl
and
lea
dec
mov
mov
inc
inc
add
dec
mov
imul
sub
mov
jmp
add
inc
add
pop
add
in
leave
inc
add
adc
add
daa
inc
add
sahf
add
pusha
faddl
mov
imul
and
dec
mov
in
fwait
dec
and
jae
xor
pop
dec
loop
pushf
xor
mov
bound
into
cmpsb
push
pushf
or
mov
fisubl
sbb
mov
adc
jb
dec
push
pop
push
in
xor
push
cmpb
inc
lods
es
cmp
out
or
insb
sub
test
pop
push
mov
in
ret
cmp
mov
pop
add
divb
cmp
jge
clc
adc
jge
mov
cwtl
fiadds
bound
jns
or
push
fisubs
sti
add
rclb
push
repnz
mov
cmpsb
je
scas
cmp
xor
in
jg
fnstenv
test
pop
repz
int
pop
out
and
out
pop
mov
xchg
mov
insb
call
cmp
cmp
inc
xchg
test
or
cmp
pushf
fmull
test
mov
filds
repnz
insl
push
loopne
xor
sbb
rcrb
sub
fadds
call
pop
rclb
aam
pop
cmpsl
cmpl
lods
cld
sti
xchg
dec
imul
sbb
dec
xor
dec
jnp
pop
outsl
xor
pop
addb
pop
jmp
dec
lret
add
mov
xor
gs
das
mov
cmc
sub
pop
mov
jno
movsl
jae
enter
push
sbb
fsts
lret
xor
pushf
xor
es
jp
fwait
aas
jmp
andps
ret
insl
stos
pop
hlt
mov
push
aad
dec
xor
mov
add
or
mov
test
push
adc
and
mov
and
loop
or
push
adc
lods
pop
mov
pop
mov
xor
pop
cli
jge
dec
idivb
pop
add
xchg
idivb
mov
adc
add
adc
cmp
mov
mov
xor
out
cmp
mov
jo
imul
pop
nop
push
out
cs
das
add
les
or
push
push
fldz
loope
xor
enter
mov
mov
push
in
ficomps
das
daa
iret
data16
mov
and
insl
fs
js
dec
imul
ficoml
jnp
and
sbb
imul
lock
out
test
cmp
adc
mov
into
xor
mov
in
cli
fxch
lock
lods
fildl
xchg
fndisi(8087
mov
cmp
cmp
xor
sub
test
data16
pop
add
lahf
push
sbb
popf
aaa
xor
fidivs
push
xchg
inc
lods
insl
negl
mov
mov
pusha
jns
dec
mov
pusha
stos
sub
out
test
aam
inc
repz
pop
inc
cli
and
insl
inc
leave
stc
xor
int
nop
and
mov
dec
sarb
in
push
das
stos
xchg
loopne
mov
out
add
test
fstpt
dec
fstps
lret
xchg
adc
jmp
sub
decb
popa
add
rolb
or
inc
mov
rclb
repnz
pop
mov
jl
es
add
int3
bound
add
das
ljmp
xchg
in
in
int
cmp
dec
cmp
iret
inc
sbb
shl
mov
mov
push
repnz
inc
xor
jno
adc
jmp
mov
cltd
sahf
loope
repnz
test
lods
mov
sbb
jbe
or
cmpsb
rclb
mov
rol
xor
int
inc
movsl
leave
shl
movsl
mov
mov
jge
xchg
test
jle
xor
out
dec
std
dec
cmc
adc
dec
mov
cmp
dec
lds
xchg
cmp
adc
dec
adc
cwtl
and
inc
add
cmp
lock
and
outsb
leave
std
and
push
popf
xor
push
mov
jns
push
mov
pop
inc
test
rdmsr
sahf
jo
nop
out
mov
cmp
push
iret
fwait
repz
clc
je
push
jae
xlat
gs
pop
cmp
inc
mov
xchg
pop
xor
xchg
enter
dec
inc
mulb
mov
int
add
pushf
test
cli
orb
pop
pusha
xlat
lahf
imul
add
ret
xlat
jp
and
test
mov
rcrl
dec
jge
push
int3
test
arpl
push
dec
enter
push
in
xor
jnp
mov
pop
cmpsb
xchg
mov
mov
or
shll
imul
aaa
loope
bound
adc
iret
jl
shl
mov
xor
dec
inc
dec
xor
cmpsb
enter
lcall
les
dec
pusha
mov
mov
cmc
cltd
fcmovbe
dec
cs
mov
lds
ret
sbb
out
xchg
cmpsl
repz
mov
mov
dec
into
ds
mov
popf
push
sub
sub
clc
or
pop
and
xchg
and
cmpsl
popf
fsubl
mov
push
repz
sub
pop
data16
adc
mov
push
xchg
jge
orl
xchg
dec
or
jb
stc
test
cmp
cmpsb
cld
adcb
push
rcrl
pop
sub
cmp
jmp
aad
mov
inc
adc
movsb
adc
or
imul
dec
test
or
push
cmp
ljmp
scas
dec
push
movsl
jmp
les
hlt
xlat
mov
or
sbbb
xchg
mov
xor
jge
push
std
or
push
dec
mov
lods
cmovp
or
cmp
mov
xor
in
push
xchg
popa
adc
xor
insl
jae
inc
mov
arpl
jg
iret
aam
adc
mov
mov
es
pop
push
adc
adc
scas
loope
xor
mov
fnstcw
shll
movsl
jl
out
sbb
outsl
std
in
pop
adcl
cmp
cmp
mov
fisubs
mov
shlb
jmp
test
testb
sub
cmp
cmpsb
add
arpl
sub
mov
pusha
xor
mov
and
mov
lds
in
ret
lret
lret
mov
popf
lds
adc
xchg
clc
jmp
icebp
dec
pop
loop
add
and
jge
in
jmp
mov
int
inc
loope
in
or
and
dec
push
and
jnp
hlt
cld
add
xchg
sbb
jp
leave
add
cli
push
and
ljmp
mov
out
loopne
or
insl
insl
xor
jo
adc
sub
jnp
lods
clc
xor
xchg
in
leave
pop
sbbb
int3
push
inc
popa
xchg
inc
insl
jecxz
test
jmp
std
fisubrl
xor
adc
sub
adc
ret
pusha
adc
dec
push
sbbb
sbb
sbb
mov
adcl
sbb
adc
mov
xor
je
rcr
hlt
xchg
es
fldz
sub
in
enter
mov
add
sti
pop
insl
test
and
push
lahf
test
add
sbb
call
push
jne
ss
lcall
jno
scas
insb
addr16
adc
cmp
stos
cmp
cwtl
dec
lret
sahf
ss
sbb
fildll
stc
sbb
scas
enter
xor
repz
daa
insb
sbb
daa
into
mov
divb
sub
insl
sti
push
fbstp
push
mov
xor
dec
jno
pop
sub
push
mov
je
adcl
and
xchg
repnz
cmpsb
jne
js
jo
xchg
dec
xchg
jl
ret
jge
sbb
pusha
lcall
add
add
orl
xor
gs
nop
iret
xor
shll
inc
push
repz
cltd
add
lds
fs
test
je
mov
sub
or
xlat
rcrb
push
into
aaa
insl
ljmp
call
xor
mov
hlt
test
or
lea
adcb
push
dec
mov
divb
jp
orb
xor
sub
xlat
fcomip
inc
nop
stos
loop
cli
mov
push
aaa
mov
cmp
sahf
iret
mov
push
mov
mov
mov
jnp
int
stc
jle
aam
cmp
inc
mov
and
mov
cmp
push
test
add
mov
or
daa
aam
adc
and
rclb
pop
sub
push
mov
call
xlat
xor
int3
or
fidivl
popa
dec
movsl
and
rcrl
or
xchg
jns
outsb
sbb
xchg
inc
fprem1
insl
add
adc
repz
mov
rcll
dec
in
and
fcoms
mov
dec
cmpsl
aad
nop
jp
xchg
adc
push
lcall
arpl
mov
mov
into
arpl
jae
jl
pop
stos
mov
dec
mov
scas
test
scas
fwait
sbb
mov
sub
das
std
push
sub
and
jle
pop
out
rclb
mov
test
imul
adc
adc
aad
cmpsb
out
fisubs
pop
jbe
mov
push
cltd
adc
inc
data16
sbb
scas
mov
and
pop
or
test
mov
popf
ds
cmc
sbb
sub
insb
and
cmp
shll
cli
mov
jp
jle
sbb
in
popf
out
pop
and
pop
and
outsl
push
add
adc
inc
dec
xchg
add
test
pop
cmp
out
jne
js
mov
adc
xchg
mov
push
xor
ljmp
push
test
add
mov
incl
sti
out
gs
mov
sub
fs
addr16
scas
and
sahf
pushf
cmp
das
cli
mov
cmpsb
xchg
sbb
fadds
les
call
mov
pop
sub
cmc
leave
arpl
dec
test
mov
pop
sahf
sbb
rorb
fcmovne
test
dec
test
pop
icebp
inc
stos
xor
int3
xlat
int
testl
repnz
jmp
shll
mov
or
pop
push
aad
lret
dec
iret
push
fsubl
cmp
dec
inc
sbb
xorl
xchg
push
pop
in
push
pop
jmp
pop
inc
test
fstps
movsb
dec
mov
cmp
lcall
inc
mov
cmp
add
popf
cwtl
mov
imul
and
mov
rcrl
and
nopl
fcmovnbe
jl
roll
mov
aad
imul
mov
add
or
fcoms
pop
imulb
adc
cld
pop
lock
call
dec
jecxz
std
daa
sub
and
fcomip
jno
and
cwtl
dec
or
push
dec
mov
sbb
pop
hlt
pop
aaa
mov
das
in
sub
aam
testb
mov
lds
dec
pop
test
sub
xchg
test
add
movsb
test
lahf
mov
outsl
imul
push
sbb
out
popf
and
xchg
cmp
or
test
ds
in
dec
adc
jmp
jge
mov
and
adc
rorl
std
dec
sbb
mov
and
lret
ficomps
sbb
mov
ljmp
movsl
addr16
loopew
add
in
das
scas
aam
add
stos
mov
data16
cmp
push
inc
mov
jg
orb
cmc
cmpb
jmp
test
jp
loope
cmp
arpl
jp
xlat
dec
dec
push
shll
test
outsb
xor
push
test
loop
dec
pop
shll
cwtl
mov
aas
mov
xchg
pop
jns
or
scas
and
imull
int
repz
out
cmpsl
mov
bound
cs
adc
mov
xchg
sub
movsb
enter
stos
fcmovb
movsl
in
mov
xlat
call
out
inc
xor
stos
insb
fadd
jmp
scas
jb
cmp
jecxz
pop
cmp
or
mov
test
shrl
jmp
add
dec
testb
pop
lret
popa
xor
fnstenv
std
jne
enter
xchg
rclb
fnsave
ljmp
out
dec
fdiv
add
jo
test
or
fcomps
xor
test
cltd
sbb
ror
dec
jno
cmpl
cld
repnz
rorb
pop
push
sub
cmp
in
lds
adc
out
stc
xor
repz
stc
das
lock
andb
cmpsb
call
dec
and
jecxz
loopne
dec
xchg
xor
js
sub
lods
rorl
pusha
jne
lds
daa
xchg
cli
rcrb
or
scas
sbb
rcll
add
push
das
jno
data16
jb
cmc
jne,pt
xchg
jg
mov
jno
outsl
cmpl
mov
cli
or
loop
bound
mov
std
sbbb
icebp
jle
cltd
cmc
or
pusha
inc
inc
in
clc
test
fildl
pop
shlb
xor
and
sub
test
adc
cld
mov
nop
outsl
or
dec
lcall
dec
mov
pushf
xor
cli
and
dec
out
insl
push
mov
lcall
test
mov
or
cwtl
adc
xchg
pop
andb
test
push
xchg
dec
add
mov
push
sub
mov
mov
cmp
add
mov
cmp
call
push
repnz
das
scas
sbb
push
cs
shll
sub
stos
sub
insl
push
xchg
push
in
mov
in
xchg
sub
pop
push
je
xor
mov
in
lret
cmpxchg
ljmp
into
pusha
pop
or
cmc
add
xor
and
sub
mov
divl
jecxz
sub
sbb
repz
adc
mov
or
test
or
xchg
xchg
or
xor
call
sbb
std
fdivrs
mov
pop
addr16
jmp
sbb
test
jbe
push
fwait
push
pop
and
and
pop
cmp
mov
js
jmp
push
push
xchg
addl
fwait
cs
sub
in
xchg
inc
xchg
push
push
shrb
fs
fs
imul
adc
repz
icebp
mov
adc
mov
ja
cmp
in
loope
push
mov
jnp
lds
mov
int3
es
lret
fcoml
sahf
sbb
loop
xchg
ds
mov
add
jecxz
pop
lret
clc
js
push
mov
or
jae
lahf
mov
jne
test
gs
pop
into
arpl
mov
mov
and
or
jb
nop
imul
mov
xchg
int
inc
sti
fwait
pop
fdivp
shr
out
insb
inc
les
jge
or
xchg
pop
shlb
or
enter
das
add
iret
cmp
addr16
fisubrl
mov
pop
out
cmpsb
mov
mov
subl
test
enter
add
mov
dec
adc
inc
jmp
cmpsb
stc
icebp
loope
inc
xchg
lock
sub
cmpsl
mov
int3
fldl
xchg
mov
jge
aas
gs
dec
subb
lret
xchg
pop
fst
xor
lahf
pusha
decl
or
call
pop
pop
cmpsb
enter
movsl
inc
rorl
adcl
sbb
pop
or
jecxz
add
mov
dec
push
adc
push
or
sub
daa
xchg
not
jmp
cmpsl
jge
dec
or
stos
xchg
rcrl
add
js
iret
outsl
jmp
xchg
xlat
pop
iret
test
rorb
popa
xchg
lahf
fcoms
dec
outsb
dec
add
cmp
fnstsw
xor
mov
shl
aad
dec
dec
loope
movsl
loopne
int3
js
ja
daa
jmp
sbb
repnz
out
xor
lahf
push
jb
mov
adc
and
adc
add
cmp
push
popf
sahf
int3
test
add
xor
xchg
scas
mov
pop
mov
inc
test
popf
psrlw
shlb
test
fldl
fildll
ljmp
add
rcl
pop
das
push
dec
sub
shll
cmp
push
jge
pop
or
push
push
movsl
sarl
push
testl
add
xor
sahf
add
pop
inc
popf
lahf
xchg
add
adc
and
movsl
pop
jg
pusha
push
js,pt
jmp
xor
cmp
push
mov
lods
negb
pop
adc
adc
out
mov
sub
sbb
jno
out
mov
push
mov
int3
mov
inc
adc
dec
mov
pushf
cs
lahf
push
es
add
sub
add
mov
popf
add
repnz
mov
dec
lret
movl
cs
and
and
bound
mov
sub
loope
inc
add
mov
jp
sbb
dec
xor
mov
aad
lret
or
mov
enter
push
mov
cmpsl
xor
mov
clc
inc
frstor
les
loop
cmpsb
int3
data16
pop
jb
mov
pusha
dec
dec
aas
arpl
fdivl
jmp
or
xchg
out
lock
test
bound
subb
pusha
in
ljmp
outsl
xor
xor
out
rolb
and
pop
push
repz
outsb
outsb
dec
popa
cmp
mul
sbb
sub
xor
dec
mov
jns
mov
add
add
adc
xor
inc
clc
scas
jo
out
outsl
test
jmp
and
arpl
push
lock
imul
hlt
lret
pop
loopne,pn
inc
stc
jb
cwtl
sub
inc
rcrb
xor
cmp
cmp
and
jbe
add
xor
adc
inc
xchg
dec
imulb
repz
xor
andb
shrb
adc
cmp
push
stos
cmpl
test
xchg
dec
cli
dec
insl
mov
jns
cwtl
cmp
test
adc
xor
insb
call
das
clc
dec
imul
daa
in
adc
rolb
sbb
rclb
mov
stos
pop
idivl
ljmp
mov
cmpsl
out
mov
insl
sarl
jbe
xor
test
testb
xor
mov
pushf
je
js
ja
ror
call
and
subb
adc
das
test
out
seta
inc
dec
mov
jmp
mov
cs
cwtl
in
repnz
aad
inc
mov
xor
or
mov
mov
or
adc
decb
pop
mov
push
mov
dec
sbb
flds
mov
add
sub
repz
add
pop
cmpsl
sbb
in
mov
pop
add
sti
sbb
jp
xor
sahf
jbe
test
pop
jb
push
adc
dec
cmp
push
adc
scas
or
dec
leave
mov
xchg
inc
and
add
cld
xor
icebp
jbe
xor
jl
test
ljmp
cmp
outsb
cmp
hlt
cli
adc
pushf
in
pop
cmp
pusha
fimuls
mov
push
dec
jmp
mov
fistpll
ds
mov
jo
lock
or
mov
rorl
pop
dec
sbb
mov
sub
jb
xchg
jge
pop
pushf
int
stc
rclb
popf
sbb
andb
add
mov
rcrb
mov
aad
xchg
orl
stos
xor
and
xchg
lret
add
mov
lods
div
jmp
sbb
pop
dec
pop
faddp
stos
mov
xor
insl
out
and
shl
sbb
les
idivl
popf
and
scas
cmc
rolb
mov
rorl
mov
pop
mov
arpl
add
insb
inc
push
mov
filds
insl
test
es
lea
cld
jae
les
rorl
lea
out
cld
in
pop
mov
pop
pop
push
sub
std
out
movsb
movsl
sbb
and
rol
pop
ss
mov
sub
pusha
pop
cmp
pop
push
rcll
cmpsl
iret
ds
mov
movsl
add
outsl
je,pn
sub
ljmp
lahf
mov
pop
mov
mov
mov
imul
jmp
pop
mov
cmpsl
mov
mov
fmulp
arpl
pop
test
pusha
call
push
adcb
dec
xchg
sub
das
inc
jns
and
jnp
xlat
enter
int3
lds
mov
mov
outsb
in
rcrl
sub
jge
popa
out
mov
roll
lods
sub
call
or
pop
fwait
aaa
into
jno
out
fistpll
pop
insb
sahf
test
fimuls
call
fs
mov
pop
mov
sbb
dec
push
inc
scas
ja
xor
insl
mov
add
fcmovnu
mov
jns
aaa
js
add
dec
and
popa
mov
jns
rep
cmc
movsb
jg
data16
movlps
pop
mov
jbe
mov
ljmp
int3
cmp
and
aad
stos
xor
ret
arpl
xchg
mov
fists
dec
bound
test
inc
xchg
xchg
and
into
ss
pop
sbb
mov
rep
dec
pop
inc
call
sub
cmpsb
arpl
add
xor
xchg
push
lock
rcll
mov
iret
imul
adc
popf
mov
daa
mov
or
sub
call
iret
shll
repz
push
or
lcall
lret
pop
pushf
xchg
jge
iret
mov
cmp
mov
xchg
sbb
xchg
inc
and
stos
pushf
jne
fs
add
cmp
bsr
cmp
mov
lret
xchg
cltd
or
pusha
mov
pop
sbb
rorl
mov
loop
jne
cmp
popf
popf
dec
dec
lcall
xchg
or
and
jp
jb
ljmp
lock
inc
pop
xor
aad
int3
push
add
push
xlat
insl
or
clc
push
in
test
jmp
ds
repz
xor
test
cs
xor
push
shr
or
cld
test
dec
jle
fidivs
fiaddl
pop
bound
push
sbb
shll
lret
lcall
out
ja
repnz
ljmp
clc
test
fstpl
mov
imul
jg
mov
mov
cmc
cmpsb
clc
sub
dec
leave
mov
or
and
rorl
scas
and
jle
pushf
inc
nop
lea
neg
push
sub
mov
test
andb
push
or
cs
and
cmp
push
pop
or
sti
inc
stos
push
or
outsb
add
mov
lods
lds
xchg
push
push
iret
repnz
inc
or
jnp
pop
pop
outsl
push
cltd
mov
inc
movsb
and
rorb
and
cmpsb
stos
or
insl
and
andb
sti
orl
sub
sbb
sar
lods
subl
cmpsl
sub
xlat
xchg
mov
jno
adc
fdivr
inc
xchg
int
add
in
mov
or
outsb
fisubrl
pop
lock
xorps
mov
or
pop
pop
ret
test
pop
jae
sbb
mov
push
daa
leave
mov
aad
xchg
in
and
out
sub
jno
cltd
mov
dec
ja
mov
lret
mov
mov
popf
stos
xor
push
adc
movsl
mov
bound
aad
aam
int3
push
out
push
mov
sbb
mov
into
pop
add
sub
in
jl
inc
add
in
dec
cs
and
jo
dec
cmp
sbb
bound
jnp
ds
push
cmp
leave
push
pop
sbb
add
fs
jbe
std
mov
decl
fwait
mov
stc
fsubrl
pop
rolb
mov
in
pop
shll
xchg
and
lahf
mov
je
xor
push
lret
jne
inc
rcrb
add
stos
jo
mov
fsubr
jmp
mov
jg
enter
xor
in
scas
push
mov
aas
mov
iret
xchg
test
mov
and
push
cltd
mov
mov
scas
inc
lds
data16
lods
mov
mov
leave
vphaddbw
stos
xor
insb
sbb
push
nop
adc
add
test
popf
and
cmp
pushf
lods
jno
shrl
loope
and
imul
sbb
lock
xor
sub
shll
movsb
adc
pop
mov
es
sbb
mov
notb
sub
xchg
mov
loop
sub
sbb
in
int
pop
in
mov
enter
jecxz
pusha
jge
xchg
lods
mov
mov
jge
dec
arpl
inc
dec
sbb
fdivrl
xchg
sbb
or
jne
pop
movsl
pop
in
rorl
mov
mov
or
sahf
divb
and
xor
mov
mov
dec
shl
adc
popa
xchg
mul
add
popa
fwait
adc
shll
ret
incl
pusha
xor
jg
or
stos
insl
inc
shl
add
cmp
or
inc
std
xchg
out
movsl
inc
mov
xor
pop
sub
jg
xor
jecxz
xor
scas
in
pushf
fcompl
std
dec
cld
dec
nop
cmp
xchg
pop
or
mov
pop
out
xchg
inc
push
sbb
stos
fs
sti
repz
mov
into
cmp
or
das
andl
aaa
pop
xchg
mov
push
jbe
push
jg
andl
fldt
or
and
ret
mov
std
jg
dec
aaa
mov
outsb
clc
jno
xchg
scas
test
inc
das
mov
filds
or
or
addb
fisubrl
xchg
addr16
movsb
push
xor
in
lds
adc
popf
xor
stc
imul
cld
cmpsb
mov
cltd
sar
sub
repz
mov
loopne
in
aad
cmp
bound
inc
inc
or
aam
jb
ljmp
mov
sbb
push
in
ljmp
in
and
lcall
lret
imul
push
out
xor
mov
jb
je
fbstp
and
aas
out
ficoml
add
pop
icebp
imul
jae
lea
shl
sbb
add
dec
pop
mov
cmc
inc
pop
pop
adc
adc
mov
mov
stc
fdivs
lea
pop
lock
aam
and
mov
test
jnp
insl
xchg
sbb
xor
ret
or
les
int3
fidivrs
push
jp
mov
outsl
add
in
in
pop
xchg
mov
clc
insl
push
mov
push
aam
jnp
jo
test
and
xor
js
cmp
xchg
mov
in
lcall
fisubrs
aas
out
mov
inc
push
push
je
mov
cmc
pop
fsts
sbb
pop
shrl
mov
inc
or
push
sub
push
ss
add
jae
inc
mov
repz
out
add
cmpsb
add
in
test
sbb
inc
jb
cli
cmc
mov
loopne
fwait
pop
mov
cwtl
pop
movsb
int3
scas
mov
jb
sahf
mov
cmp
mov
inc
shl
pop
lds
mov
push
adcb
sub
pop
jae
jecxz
cmc
pusha
xchg
or
and
popa
aaa
mov
mov
jne
daa
mov
xlat
mov
dec
stc
notl
xor
pmaddwd
push
sub
or
movsl
xchg
jo
int3
push
inc
push
jbe
cmp
push
fwait
inc
mov
nop
xchg
dec
and
lcall
xorl
lea
ret
push
jns
pop
loop
ficomps
fdivrl
in
adc
jecxz
jle
or
iret
lods
stos
ret
pop
fs
sbb
es
pop
jp
pusha
push
xchg
jb
cmc
lcall
cld
mov
cmp
sub
fdivrl
mov
call
repz
dec
mov
push
fstps
xchg
mov
push
rcrb
jns
and
jno
cmp
mov
xorl
mov
push
lds
push
add
push
fisubl
rcl
cltd
fistpl
dec
jmp
jo
bound
mov
repnz
sbbl
dec
xor
fbstp
mov
aaa
shrl
adc
xchg
ret
repz
or
pop
adc
pop
sar
sarl
xor
fdivr
insb
addr16
icebp
sub
cltd
jecxz
fmul
mov
adc
js
pop
cmpsb
lds
inc
movups
dec
sahf
adc
mov
add
test
mov
mov
lea
mov
and
dec
das
int
mov
movsb
jb
dec
sbb
inc
loop
dec
aaa
sahf
fsubr
imul
inc
mov
mov
mov
pop
adc
jmp
cltd
adc
cld
testl
iret
shl
inc
mov
jae
insl
lea
popf
shr
push
ds
push
cli
ret
add
jno
mov
inc
out
in
and
call
fiadds
mov
jg
movsb
int3
mov
sub
sub
and
dec
jge
je
cld
xchg
std
fwait
or
lea
insb
or
test
loop
adc
and
mov
or
fistl
adc
or
in
add
cmp
int
in
scas
mov
arpl
adc
into
cmp
cwtl
test
adc
in
insl
mov
jl
loope
ds
lds
jb
pop
pop
in
pop
mov
out
inc
cmpsb
clc
mov
add
mov
and
jge
lods
sub
push
push
and
je
lods
xchg
cmpsl
jge
jmp
mov
cwtl
aas
cltd
lods
sub
inc
iret
adc
out
cltd
call
xchg
xor
add
mov
enter
jle
mov
jno
popa
movsb
cs
add
ds
dec
mov
hlt
dec
repz
and
dec
dec
dec
cmp
add
insl
mov
ljmp
enter
dec
mov
sub
aad
dec
add
das
dec
mov
mov
pop
add
pop
cmp
push
mov
mov
mov
xchg
scas
mov
clc
or
adc
and
bnd
clc
dec
jb
jb
aas
and
lahf
jge
push
jbe
dec
pusha
roll
daa
imull
or
and
cld
mov
insl
jg
getsec
jle
push
fsubl
lcall
inc
push
push
mov
int
cmp
lock
arpl
inc
ds
cld
pop
movsb
cmp
push
pusha
push
xchg
movsl
mov
adc
rorl
mov
sub
and
sahf
out
std
iret
jle
xchg
in
fimuls
sarb
sub
rclb
pop
mov
cwtl
mov
into
and
je
xchg
push
sub
enter
xchg
scas
mov
jle
in
int
dec
add
push
cmp
jge
adc
sbb
inc
or
les
and
push
push
int
in
popf
adc
pop
das
mov
fmuls
popa
pop
cmp
dec
call
cmovbe
xchg
fs
add
xor
pop
xchg
and
jno
out
stc
movsl
mov
inc
xor
push
cmpsl
jge
and
ljmp
adc
cmp
ds
test
out
xchg
jnp
fucom
fnstenv
jge
sbb
das
outsl
les
insl
in
add
jb
imul
jo
jne
mov
add
inc
les
gs
sub
cmp
xchg
arpl
xor
adc
outsb
sti
jbe
push
jns
ds
sbb
xchg
or
mov
add
mov
add
fnsave
out
mov
pop
out
push
mov
pop
insl
test
sbb
scas
fisttps
jecxz
vpunpcklbw
loope
cs
sbb
jo
mov
aam
pop
pop
push
aam
xchg
or
mov
mov
add
jle
aad
mov
inc
mov
mov
and
jp
pushf
push
sbb
cmc
mov
push
or
mov
jecxz
cmp
add
pushf
mulb
popw
and
or
shl
mov
js
jl
mov
mov
mov
jp
lods
cltd
cmc
xchg
in
adcl
lahf
sub
jmp
rcrb
repz
mov
push
sbb
jnp
mov
cli
or
add
adcl
scas
arpl
jecxz
push
inc
dec
push
jae
sbb
or
or
lock
int
sub
xchg
push
push
sbb
sbb
loope
xchg
daa
sub
outsb
in
jl
dec
lret
aaa
int
sbb
lods
add
pop
shlb
jge
clc
xchg
and
mov
mov
mov
push
xchg
fimuls
fbstp
inc
pop
push
push
inc
rcl
sahf
outsl
xorl
nop
cltd
mov
insb
jp
adc
push
mov
cmpb
mov
movsb
mov
mov
xchg
lods
movsl
add
idiv
movsb
pop
es
pushf
cmc
push
mov
lock
sub
cmp
fadds
dec
sbb
dec
jp
cld
xchg
mov
mov
aas
mov
add
cmpl
call
pop
ret
stc
in
pop
jecxz
adc
cmpsl
clc
ds
movsb
push
incl
ljmp
mov
mov
lods
xchg
loopne
pop
das
lcall
sub
fdiv
lods
sbb
stc
stos
popf
xlat
cmp
jbe
insb
scas
inc
or
aam
jns
pop
lds
mov
in
jno
mov
adc
push
xor
xchg
pop
aaa
cmp
mov
push
repz
add
xchg
cld
sbb
mov
jmp
sbb
cmpb
sbb
mov
mov
xcrypt-ecb
cmpsl
dec
sahf
xchg
xchg
dec
sbb
mov
lods
dec
pop
repnz
pop
daa
pop
call
xchg
inc
in
xlat
test
and
lods
enter
xchg
mov
lahf
xor
ds
inc
daa
inc
jns
cmp
bound
call
lahf
sbb
mov
cmpsb
mov
mov
xchg
xor
cmp
pop
movsl
fbstp
cmp
push
frstor
call
lcall
cs
inc
addr16
data16
and
sahf
adc
out
xor
es
popf
sahf
inc
ret
add
xor
mov
pop
aam
fistps
sub
xchg
mov
pop
decb
xor
pop
cmp
aaa
iret
pop
dec
xchg
xor
std
fldcw
xchg
mov
xchg
shlb
xchg
mov
shl
pop
pop
dec
add
mov
xchg
or
jg
fbstp
sub
mov
or
outsb
bound
fisttpll
fsin
sbb
jp
inc
push
adc
mov
into
mov
or
insl
sahf
dec
rolb
mov
cmpsb
dec
xor
imull
into
push
xor
mov
dec
and
dec
add
mov
jl
mov
pop
rclb
inc
adc
leave
pop
int
adc
adc
pop
fs
jg
adc
jge
scas
lods
push
mov
cmp
dec
sbb
push
jb
jno
movsl
and
imul
mov
xlat
fists
test
inc
inc
inc
in
jge
lret
mov
int
xchg
ja
cmp
nop
test
rolb
cmp
repnz
jecxz
cmp
jecxz
xchg
pop
mov
add
fsts
das
es
lret
xor
mov
out
mov
cmpsb
popa
mov
leave
addl
inc
sbb
mov
dec
gs
pop
and
insl
mov
push
sub
xchg
jmp
jns
push
icebp
xchg
popl
jle
mov
pop
les
or
imul
ja
rolb
push
aad
jb
xchg
xor
aas
in
mov
scas
cs
leave
mov
jge
std
xor
fisubl
xor
xchg
test
sub
inc
pop
test
in
outsb
mov
add
hlt
jmp
add
push
push
and
icebp
fucomip
fld
jb
mov
ja
push
and
test
dec
fidivrs
jmp
pop
adc
out
mov
push
mov
inc
and
imulb
add
adc
out
sub
loopne
aad
sbb
sbb
pusha
sbbl
push
mov
incl
leave
les
sub
adcb
lret
lods
sete
xor
push
leave
push
push
push
cmc
js
inc
push
dec
std
cli
pop
jl
orb
mov
fistl
push
and
cmp
imul
daa
jbe
mov
ror
cltd
xchg
push
or
in
xchg
adc
mov
jmp
out
fildll
xchg
movsl
jmp
dec
pusha
bound
xchg
mov
mov
sub
cmpsl
test
mov
jmp
mov
mov
xlat
sbb
fs
lods
jge
xchg
jno
in
push
sub
es
cs
pushf
int3
push
iret
mov
add
xor
lods
repz
xchg
movsb
data16
push
int3
mov
daa
inc
push
leave
gs
fsts
pop
gs
sbb
cmp
repz
cmp
scas
xor
xor
popa
pop
dec
push
daa
fucom
pusha
lods
push
sub
xchg
aad
sbb
loope
imul
xchg
add
mov
xor
dec
hlt
shlb
and
adc
adc
push
jmp
ss
lods
sub
xor
loopne
movb
sbb
sub
icebp
xor
pop
in
bound
pusha
mov
gs
push
jbe
ret
mov
add
mov
xchg
jmp
push
pop
mov
lea
sub
xor
int
sub
dec
mov
cli
ss
or
lods
fs
and
stc
sbb
mov
test
jmp
scas
pop
push
outsl
jg
pop
or
or
aad
jmp
decl
fidivs
mov
cmp
cld
xchg
shl
into
inc
stos
or
std
fadds
lods
ljmp
adc
mov
sbb
mov
dec
pop
xlat
outsl
clc
cld
jbe
and
gs
jecxz
push
ds
and
sbb
push
fcmovu
add
test
shlb
loopne
jecxz
test
and
mov
and
sub
or
lods
dec
andb
sarl
es
in
out
rcl
sub
add
jae
ljmp
cmp
mov
jp
dec
dec
cmpsb
pop
xchg
mov
lds
and
jl
dec
fistpll
and
mov
loope
test
sbb
fcompl
sbb
pusha
pop
xorb
movsl
dec
mov
lods
lock
lret
in
fscale
loope
xor
jge
cmp
mov
inc
cmpsl
cmp
push
xchg
mov
outsb
aaa
in
add
stos
outsb
jle
jae
jnp
pop
inc
cmpsb
cmp
jne
stc
mov
sbb
xchg
lea
jo
pop
sbb
jmp
dec
clc
lcall
mov
mov
mov
shrl
push
mov
mov
das
xchg
out
sbb
div
xor
jae
inc
loop
mov
inc
adc
ss
inc
inc
or
lock
inc
xchg
xor
push
dec
push
xchg
pop
inc
shll
lret
repnz
add
xchg
xchg
orl
cmpsl
cmc
dec
sub
adcb
adc
pop
out
in
clc
xchg
sbb
inc
pushf
faddp
or
push
cwtl
xchg
xor
dec
aam
pop
adc
das
jle
pop
pop
pop
bound
fidivl
jnp
loop
cs
pop
lds
jnp
inc
push
scas
addb
sub
in
lea
ds
fcom
xor
and
mov
cmp
push
push
jp
movsb
push
cltd
into
cltd
or
xchg
cmp
pop
lds
ljmp
add
xor
sbb
mov
popa
xor
lods
and
dec
cmp
and
std
fnsave
mov
andb
sbb
movb
mov
hlt
stc
mov
push
test
and
xchg
pushl
aad
pop
mul
push
inc
outsb
inc
inc
mov
loopne
shl
jno
sbb
adc
mov
mov
pop
arpl
mov
ror
dec
xor
jge
xor
movsl
jns
into
out
out
cmpsb
cmpsb
adc
out
pop
jmp
sbb
cli
cltd
cmp
inc
pop
popf
rolb
pop
lds
push
pusha
cmpsb
jp
out
jl
movsb
lods
rep
mov
into
and
in
push
sbb
rclb
mov
ret
cmp
ds
push
push
push
sarb
adc
fwait
loop
addl
in
cmp
ja
adc
clc
rorl
les
pop
into
xor
stc
sbb
jb
insb
jb
cwtl
mov
mov
ret
jl
aas
insl
mov
mov
add
subb
rclb
fstpt
jle
adc
push
dec
movsb
ds
and
xchg
xor
fsubp
xchg
lock
xchg
push
cli
xor
rclb
xor
or
dec
add
insb
mov
pop
repnz
xchg
push
push
xchg
popf
ficoms
data16
jnp
cmp
xor
mov
xor
xlat
xchg
push
les
jge
outsb
pushf
and
or
xchg
or
mov
jmp
push
cmc
mov
mov
xchg
mov
sub
fmuls
rcrl
add
or
into
jl
jp
adc
cmpsb
loope
xchg
icebp
hlt
cld
shlb
xchg
xchg
inc
or
fldenv
pop
mov
ljmp
dec
dec
mov
sti
mov
push
fs
add
push
pop
push
jp
pushf
push
dec
nop
cld
cltd
and
xchg
cs
shll
jge
fsubs
sbb
jo
jmp
scas
adc
xchg
ror
add
subl
push
std
shlb
add
mov
cli
loopne
pushf
imul
sbb
lds
ss
in
mov
aaa
xchg
push
add
lds
fbld
xchg
in
int
add
add
out
loop
jns
cmp
int3
bound
repz
addr16
and
mov
dec
aas
inc
push
xchg
push
ret
movsl
dec
iret
cwtl
je
push
fiadds
and
inc
push
push
adc
xchg
add
xchg
arpl
jb
repnz
enter
xor
decl
gs
ret
sub
sarb
sti
repnz
ljmp
lea
es
sbb
out
pop
hlt
sbb
xchg
stos
mov
mov
std
sub
inc
push
call
and
les
mov
sti
mov
and
mov
loope
icebp
in
mov
dec
icebp
pop
and
xchg
pop
pop
cmp
sub
or
iret
add
imul
ss
sbbb
or
jg
xchg
push
pop
dec
insb
stos
mov
hlt
lret
dec
dec
xor
or
sar
sbb
sahf
lods
or
andl
xchg
imul
dec
lods
out
inc
sub
rclb
test
scas
in
std
push
pop
dec
xor
loopne
lret
pop
stc
fwait
cld
lods
sbb
mov
jle
sbb
fnop
cltd
sbb
adc
adc
sti
add
mov
jno
arpl
and
add
sbb
clc
pop
testb
es
cmp
daa
xchg
mov
and
jl
cmpsb
xchg
push
sahf
int
dec
loop
dec
add
inc
mov
in
lods
nop
pushf
pusha
or
xchg
xor
cld
jne
sub
pop
jo
push
and
ja
ficoms
std
or
ja
adc
jb
xchg
ljmp
push
jg
mov
push
mov
lock
mulb
xor
aam
and
jo
mov
sub
jbe
pop
fs
out
fidivs
ror
filds
bound
movsl
cmp
loopne,pn
xor
cli
push
mov
aad
dec
mov
outsl
insb
mov
cmc
cmpsl
dec
in
sub
sbb
sub
jns
pusha
mov
fildll
mov
lret
popa
mov
je
jmp
adc
push
cmc
cmpsl
mov
and
out
test
push
cltd
sub
sub
inc
add
jge
int3
jnp
iret
scas
stos
adc
das
mov
sub
xchg
lahf
add
orb
fnstsw
pop
xchg
mov
sub
and
in
mov
pop
dec
arpl
stos
imul
pop
pop
cmp
jo
xchg
jmp
push
lret
outsl
mov
int3
inc
mov
les
scas
out
push
or
insl
or
cli
pop
test
and
push
xor
sub
mov
dec
and
enter
xchg
decb
cmpsl
gs
lret
cmp
test
cmp
cs
repnz
leave
ja
stos
adc
jle
orl
ss
outsb
xchg
or
fisubs
push
orb
xlat
int
leave
mov
mov
mov
mov
adc
mov
push
mov
add
aad
jno
dec
adc
or
stc
insb
pushf
fnstcw
mov
cmp
hlt
and
fisttpl
push
cmp
dec
pop
push
pop
mov
call
sbb
cmp
adc
fstl
pushf
mov
loop
add
xchg
cmp
xchg
hlt
push
jmp
enter
repz
repz
fwait
sub
cltd
mov
mov
ret
pusha
pop
xchg
aad
push
sti
add
into
mov
fidivrl
int3
xchg
jge
mov
pop
imul
into
fdivp
mov
adc
in
fwait
inc
or
jmp
es
xor
xchg
std
mov
dec
lds
mov
loop,pn
fs
mov
out
adc
mov
mov
cli
outsb
mov
push
shl
jp
aaa
sbbl
xchg
cmp
inc
adcl
add
mov
xchg
jecxz
dec
cmc
shrl
and
dec
pop
aas
mov
out
mov
fimull
inc
andb
pop
dec
adc
pop
lahf
mov
dec
insl
mov
xor
mov
ret
mov
adc
push
bound
lock
xchg
xchg
and
test
out
cmp
or
lret
and
pop
mov
lds
sub
and
pop
out
dec
lea
cmpsl
push
cmc
push
loop
xchg
rol
arpl
mov
add
xchg
xchg
jae
out
aam
rol
cld
cmc
cli
add
push
stos
or
stc
ret
leave
lahf
lret
pop
pop
inc
mov
ljmp
rcrb
lcall
pop
cmovne
pop
adc
pop
xor
xchg
and
add
ret
jo
jl
or
and
out
xor
jg
cmp
repnz
not
les
int
cs
xchg
loopne
movsl
fadd
sbb
xchg
xor
imul
mov
lahf
jmp
rcrb
out
mov
jge,pt
adc
adc
xor
push
ljmp
mov
dec
push
dec
pop
sbb
xlat
fstpl
and
dec
lock
shr
aaa
mov
mov
xchg
and
addr16
push
cld
jmp
mov
inc
ret
add
pop
rorl
xchg
call
in
push
jae
fcompl
or
pop
push
imul
adc
outsb
jnp
popa
xor
test
cwtl
mov
dec
cmp
or
into
pushf
fwait
jmp
adc
arpl
andl
push
push
pop
inc
xchg
sbb
adc
cmp
insb
sbb
dec
test
sub
shll
inc
add
sti
pushf
xor
dec
push
sub
je
add
out
cmc
sub
insb
inc
dec
sbb
dec
add
scas
hlt
ret
mulb
xor
pop
bound
add
cltd
ds
adc
pop
cmpl
pop
test
insl
jo
sub
add
jbe
bnd
fwait
rolb
jo
xchg
mov
jecxz
ret
push
stc
std
or
popf
jno
dec
mov
rorb
gs
or
aaa
lock
xor
and
sbbb
in
push
dec
int
mov
cmp
cli
push
adc
sbb
mov
pcmpeqb
sbb
fcompl
std
push
push
jne
lret
notl
shrl
jne
lcall
fmull
vpsubsb
shl
mov
mov
cmpsb
fisttpll
cmp
mov
sahf
mov
sbb
pop
int
les
sti
xchg
lods
icebp
push
or
popa
movsl
push
cmp
push
cld
aam
dec
xchg
adc
push
fwait
je
divl
pushf
repnz
int3
xchg
inc
pop
mov
movl
xor
incl
and
xor
jbe
test
dec
mov
adc
movsl
or
out
dec
sub
xchg
mov
loope
aad
es
insl
mov
inc
jae
imul
push
cs
andl
rcrl
inc
es
adc
push
fnstsw
shl
insl
jne
cld
pop
sbbw
inc
sbb
mov
mov
mov
sbb
cmc
cmp
mov
cli
cs
push
xchg
push
mov
das
bound
daa
in
test
int
lret
nop
out
mov
ret
or
dec
jnp
push
mov
sbb
fstps
les
mov
sub
mov
in
in
pop
xchg
mov
jno
inc
je
mov
jp
pop
mov
mov
popa
pop
pop
cmpsb
mov
adc
jne
into
pop
jl,pt
lahf
in
push
fsub
enter
idivl
dec
test
cmpsb
push
adc
out
fmull
repnz
fs
or
popa
scas
ret
stc
add
cmpsb
sub
lock
lcall
cmpsl
sub
cltd
xchg
ljmp
pop
xchg
call
jle
mov
ljmp
sbb
pop
roll
cmpb
and
jge
lds
fnstsw
xchg
jecxz
and
sub
xchg
push
and
mov
test
ljmp
andl
sahf
xchg
inc
lock
insb
sub
insb
add
in
dec
js
jp
pop
jmp
sbbl
cmp
sub
bound
or
lods
sub
aad
mov
cltd
stos
imul
sbb
je
pop
pusha
lcall
and
sub
loop
rorb
ljmp
pop
rcrb
mov
pusha
cmc
rcll
bnd
add
xchg
inc
out
jle
sub
inc
push
inc
rcrb
xchg
mov
lret
stos
or
insl
jle
mov
ljmp
xchg
add
pushf
outsl
ret
subb
fdivs
sahf
out
sahf
mov
sub
and
pop
mov
sub
js
rorl
sbb
test
adc
fs
pop
fnstcw
jbe
sbb
loope
push
xchg
xchg
push
addr16
ja
into
jns
jbe
outsb
mov
popa
fimuls
push
mov
mov
sbb
jbe
mov
mov
cli
dec
mov
fdivs
mov
rclb
dec
sbb
ljmp
mov
push
xor
push
and
push
inc
ds
adc
xchg
out
loopne
push
xor
jbe
cmp
scas
dec
mov
lock
or
inc
pusha
jl
insl
push
xchg
jle
daa
adc
gs
cs
adc
jnp
loope
mov
bound
dec
clc
xchg
or
push
fsubrl
or
call
roll
sbb
lret
dec
xor
and
xchg
or
fiadds
jbe
add
stos
mov
jae
mov
inc
cmp
lcall
test
mov
xorl
leave
and
xor
dec
xchg
test
lods
dec
pop
pop
movzbl
sbb
sbb
inc
dec
outsl
lock
es
testb
xor
sbb
jbe
imul
xchg
dec
ja
and
sub
insb
mov
ss
into
push
adc
pop
or
aad
in
lcall
push
or
jo
scas
mov
xor
scas
jl
xchg
xchg
rcll
mov
lret
sbb
lock
int
je
inc
fwait
push
mov
lahf
movsb
test
adc
or
fdivrs
lret
or
fucom
fnstcw
sbb
cwtl
pop
pop
or
xor
sbb
mov
push
das
call
mov
subb
js
sbbl
pop
repnz
pop
pop
sbb
sub
insl
sub
stos
inc
push
jno
push
popf
xchg
xchg
or
insl
push
or
into
ret
push
sahf
mov
inc
jmp
mov
inc
in
sbb
dec
gs
fildl
jo
cmc
adc
imul
fcom
stos
loop
sub
add
test
cmp
sub
pop
ja
add
fisubs
dec
sub
decb
cmpb
cmp
cmp
into
sbb
shlb
xchg
cld
push
fadds
nop
jl
jae
inc
push
cltd
inc
dec
mov
sbb
in
iret
fidivl
sbb
cli
xchg
int3
mov
and
mov
mov
adc
mov
jmp
into
or
or
int
mov
cs
fisttpl
add
push
mov
sub
or
ja
xchg
inc
loop
mov
dec
cmp
test
push
scas
sbb
inc
sbb
das
xor
repnz
pop
mov
push
inc
mov
lods
push
add
mov
lods
fsubr
cmc
jle
xor
jecxz
outsb
fcmovne
mov
gs
gs
test
or
shll
pushf
scas
or
addb
nop
imul
xchg
cwtl
sbb
inc
cmpsb
inc
test
jns
std
or
jne
fdivrp
outsl
adc
push
pop
hlt
xchg
inc
cltd
add
cmp
mov
stos
or
lret
jbe
sbb
and
pop
push
cmpsl
loope
sub
into
pop
push
jecxz
adc
shll
jmp
push
jmp
mov
hlt
mov
les
ret
adc
push
stos
sbb
jae
ds
pushf
movsl
arpl
push
std
ret
or
arpl
mov
stos
scas
xchg
je
jmp
xchg
aad
int3
shrl
add
adc
in
lcall
subl
push
lea
cwtl
inc
xor
xchg
and
daa
sbb
std
push
fimull
xor
pop
and
jb
aad
pop
lds
aad
push
push
in
rclb
int
push
das
jmp
xchg
mov
dec
add
sub
shr
imul
xor
icebp
inc
aad
adc
ss
push
ss
inc
es
dec
adc
push
mov
lcall
test
pop
dec
pop
dec
add
cmp
fistl
ja
inc
sub
xchg
fwait
imul
repnz
aas
sbb
dec
loop
dec
cmp
scas
add
jno
fadds
loope
stos
dec
cmp
stc
mov
insl
pop
ret
test
movsl
add
les
jecxz
insl
orl
cmpb
jmp
mov
test
cmc
sarl
adc
sbb
loope
leave
xchg
inc
mov
cld
ljmp
dec
rolb
jne
dec
fcomip
fwait
push
xor
or
les
lret
xchg
ljmp
in
xchg
mov
jp
in
mov
cmp
adc
sbb
or
je
xlat
push
fstl
icebp
adc
es
les
pop
dec
push
xchg
addr16
adc
int
add
jge
aam
add
loope
jns
inc
inc
mov
fadds
and
outsb
sub
xchg
sbb
mov
pop
mov
outsb
pop
jmp
and
popf
cmp
xlat
and
mov
rorb
mov
into
mov
xorb
push
xchg
shlb
data16
fadd
addb
pop
bound
pop
pop
aas
pushf
leave
add
add
ret
pushf
mov
iret
lcall
cmpsl
sbb
in
and
test
jns
dec
add
cmpsb
adc
push
inc
jl
jg
je
xorl
pusha
hlt
int
mov
aad
jns
pop
out
xlat
adc
daa
or
lahf
out
and
dec
mov
push
lret
mov
sub
jge
bound
cmp
mov
or
insb
rcr
xor
imul
push
pop
in
adc
dec
mov
out
mov
mov
and
xor
test
cli
sub
or
leave
jbe
jae
mov
scas
xchg
call
and
sbb
out
stc
js
lock
js
xor
int3
lahf
pslld
pop
xchg
and
test
jg
push
adc
mov
movl
mov
xchg
fstps
xchg
mov
mov
sti
ret
adc
adc
scas
aad
and
and
and
pop
aam
cli
arpl
insl
inc
dec
push
pop
dec
push
fdiv
sub
loopne
test
xor
mov
fisubl
pusha
mov
popf
loop
push
add
pop
gs
xor
push
jb
push
fstpt
xor
fwait
adc
sub
ds
xchg
adc
sbb
adc
fidivrl
xchg
cwtl
lock
and
jbe
jno
stos
xor
orb
fstpl
call
aad
repnz
ja
not
je
xchg
stos
pop
arpl
scas
fwait
jb
inc
cmp
mov
ljmp
leave
or
pop
cltd
xor
addr16
adc
out
into
dec
lea
cmpsl
sub
cmp
jns
jl
stos
add
loop
adc
sbb
dec
enter
pop
adc
xor
test
cltd
add
aad
inc
aad
pop
stos
arpl
outsl
sub
pop
sub
sbb
fsts
push
pop
lret
mov
inc
or
and
cld
lea
xchg
pop
mov
sub
jmp
pop
mov
in
xchg
cmpsb
inc
lods
push
out
and
notl
push
lods
daa
mov
inc
bound
movsb
dec
stc
and
and
cli
xchg
jl
call
fs
out
or
sti
lret
xchg
adc
pop
adc
xchg
cmc
mov
dec
cltd
dec
popa
or
hlt
lret
hlt
rorl
dec
in
sbb
mov
mov
inc
sbb
sbb
dec
mov
or
arpl
or
das
mov
leave
in
dec
mov
sbb
pop
test
and
push
movsl
fcoms
or
sbb
or
jns
pop
cmc
hlt
fs
mov
into
jle
out
shl
test
fmulp
pop
xchg
outsb
add
scas
test
inc
jge
es
or
sti
mov
xchg
repnz
aam
sar
sbb
cltd
ja
rcrb
mov
xchg
je
cmc
enter
and
stc
fisubrl
sub
add
ss
lds
mov
faddl
jne
scas
xchg
xlat
test
cmp
in
jnp
pop
ret
pop
add
outsl
cmp
push
fcomps
xor
in
add
aaa
add
sti
divb
add
and
lea
xchg
shll
fwait
pop
adc
push
shrb
loope
loop
push
or
mov
shl
push
inc
std
push
xchg
pop
out
jl
data16
mov
mov
inc
insb
mov
fists
int
in
xchg
add
aam
incb
jns
sbbb
movsb
mov
jmp
imul
out
add
cld
mov
out
xor
popf
sbb
shl
dec
int3
mov
mov
out
lcall
xchg
pop
rcrl
imul
lods
inc
add
cmp
ljmp
aaa
iret
push
xor
jl
rorb
xor
pop
sub
ja
xchg
xchg
mov
cmpsb
adc
cld
int
leave
lds
xchg
and
pop
add
sbb
lret
mov
iret
cld
pop
testl
add
xchg
sbb
daa
jnp
lahf
jne
sarb
outsl
mov
sub
push
sbb
dec
jl
push
in
gs
testl
cmp
das
test
mov
call
lret
pop
fdiv
cld
mov
xor
in
xstore-rng
cmpsl
inc
xor
lea
cli
popa
xor
inc
lds
mov
nop
or
pusha
cmp
mov
idivl
mov
repnz
lahf
out
sbb
mov
add
add
sub
fsub
pop
lods
bound
inc
xchg
xor
loop
lea
sbb
mov
xor
arpl
cmp
jnp
push
into
xchg
xor
mov
sub
push
addr16
jbe
mov
nop
fidivrl
pop
es
or
mov
ret
jg
xchg
push
push
ficoms
adc
shll
mov
jae
cmp
mov
fdivl
mov
das
lds
dec
repz
int3
cwtl
or
push
sub
cmpsb
sbb
in
fstps
mov
inc
enter
data16
stos
jle
js
add
jmp
mull
gs
xchg
sbb
jno
idiv
cmp
sahf
fwait
cwtl
push
add
movsl
jmp
xor
pop
in
in
cmp
sahf
mov
nop
inc
push
pop
cs
jb
movsb
sbb
mov
sub
insl
mov
push
int
inc
in
push
stos
out
cmp
and
dec
pop
insl
push
pop
cmp
adc
or
xchg
stc
out
cmpsl
xchg
sbb
sbb
flds
cmp
xor
sbb
xor
inc
bound
jb
push
mov
loop
pop
push
cltd
fs
fwait
hlt
sbb
dec
sub
push
inc
cld
cmpsb
pop
jmp
bound
jbe
daa
daa
pop
cwtl
pop
jns
sahf
mov
add
cmpsb
inc
sbb
mov
push
jb
inc
rclb
pop
xchg
and
mov
push
ss
push
pop
push
popf
pop
sbb
cmp
xorl
ss
inc
repz
xchg
movsb
or
xchg
push
push
aad
arpl
cmpsl
in
mov
fnstenv
out
push
out
rcl
movsb
test
ret
jmp
aaa
or
inc
pop
pmaxub
xor
in
int3
test
shll
inc
fldenv
cmp
inc
mov
mov
stc
mov
mov
popa
imul
push
shrl
jl
cmpsl
cli
rcrb
sub
mov
add
imulb
repnz
dec
mov
sub
xor
xor
dec
mov
repz
xor
pop
add
pop
les
negl
loopne
ret
jle
cmp
add
mov
xchg
xor
cmpsb
fldcw
pop
sahf
and
int
pop
or
rcrl
loopne
inc
xorb
shll
mov
test
rolb
sbb
mov
sub
js
loop
cmp
sub
push
movsl
pusha
cmp
pop
add
aaa
ss
hlt
inc
scas
sbb
aaa
mov
inc
dec
mov
movsb
ret
mov
sub
in
out
pop
xor
ret
mov
dec
jmp
mov
nop
jb
aas
shrl
inc
mov
sti
lds
stos
pusha
fisubrl
dec
arpl
dec
pop
loope
mov
shll
inc
pop
stos
xor
mov
jl
xor
mov
xchg
xchg
aas
out
and
push
push
fdivrl
push
xor
fninit
jno
repz
subb
test
cltd
cmp
mov
lds
mov
xor
mov
mov
arpl
pop
jo
sbb
lds
push
ss
out
cwtl
adc
cmp
jl
jno
mov
idivb
cmp
push
adc
mov
adc
sub
jne
push
jl
das
rcll
push
rcrl
aad
mov
test
and
mov
inc
jecxz
pop
mov
movsb
fwait
xchg
or
sahf
mov
mov
cmp
push
in
push
xchg
ficompl
lret
mov
in
add
pop
mov
je
movb
mov
les
int
out
and
cld
xor
fs
cmpl
add
jl
cli
jbe
adc
push
cli
dec
and
fcoml
test
cwtl
fld
pop
mov
add
inc
daa
ja
fwait
mov
das
cld
and
xchg
mov
mov
je
repz
mov
dec
fstps
and
sub
into
mov
inc
lcall
int3
jecxz
adc
shlb
jg
mov
add
cltd
dec
test
cmc
cld
add
adc
jnp
lock
push
cmp
jl
sbb
aad
aad
lods
rorb
adc
dec
cs
dec
cmpsb
dec
daa
xor
insb
add
ds
adc
jp
test
mov
cmpsb
mov
aas
mov
ljmp
dec
sbb
cmp
cmpsl
mov
ljmp
jae
jmp
imul
add
push
fst
adc
inc
lret
mov
push
outsb
xchg
lea
pop
imul
inc
dec
test
lods
call
psubusw
inc
sub
dec
iret
push
or
out
inc
shl
adc
push
fisttpl
cs
mov
decb
les
xchg
add
and
inc
test
out
xor
stc
adcl
or
mov
adc
fstpl
and
xchg
inc
testl
stos
push
mov
push
pop
andl
add
sbb
cmpl
loope
fwait
xchg
mov
pop
xor
mov
mov
sbb
cs
and
mov
mov
testl
iret
ret
das
outsb
stos
ret
dec
das
pop
cmp
rol
and
cmpsb
ja
jb
add
sub
in
mov
dec
inc
repz
or
imull
or
mov
pop
in
in
stos
hlt
adc
push
out
mov
lock
xor
inc
cmp
push
or
xor
daa
rorl
icebp
repnz
sbb
sbb
cmpsl
ret
pop
add
leave
int
shll
fildll
mov
jle
cmpsb
push
dec
mov
push
add
jb
or
sub
data16
sub
xor
mov
into
iret
mov
inc
movsl
jae
ret
cmp
insb
and
rorl
or
mov
sub
push
and
arpl
cmp
les
adc
add
fs
in
mov
stc
sub
lret
jp
lock
jno
lret
fldt
movsl
pop
fsub
aam
lret
fstl
leave
shll
imul
inc
mov
fstpl
dec
dec
cwtl
push
mov
inc
xor
jecxz
pop
test
xor
js
shrl
pop
data16
mov
ljmp
xlat
shl
js
imul
mov
adc
jns
bound
jb
adc
push
xchg
insb
cmp
inc
xchg
push
scas
rorl
xchg
mov
inc
inc
mov
lret
jb
push
ds
negl
mov
mov
shrl
mov
into
jb
or
mov
sub
xchg
rorl
sub
sbb
xchg
out
dec
pop
cmc
lods
repnz
out
push
mov
lret
xchg
mov
jle
mov
cmp
xchg
rorl
adc
roll
mov
jl
sub
sub
arpl
das
in
fcomip
icebp
lock
out
aad
fsts
xor
ja
test
inc
fcmove
dec
fdivr
jmp
xchg
mov
push
jle
sti
sbb
adc
test
imul
adc
cmp
adc
test
xor
pop
adc
outsb
cmc
out
out
insb
jo
rcll
sub
insl
dec
lods
mov
push
mov
addl
mov
stc
test
add
xchg
je
pop
mov
arpl
int
imul
scas
cli
inc
lcall
or
jns
jne
mov
xor
mov
shrl
adc
pop
sarl
mov
mov
mov
dec
insl
mov
fwait
and
aas
push
movsb
gs
adc
dec
jb
mov
mov
xchg
adc
push
inc
cli
cli
mov
insb
sub
aas
or
cmp
jmp
push
cmp
ret
nop
xchg
xor
das
lds
dec
dec
lcall
repz
jne
cmpsb
add
iret
lret
pop
repz
pop
mov
in
jae
pop
pushf
sub
pushf
push
push
ss
mov
pop
or
inc
ficomps
or
lcall
and
subl
cmp
dec
add
xor
outsl
xor
lods
add
xorb
jecxz
xor
jmp
pop
mov
xchg
fs
cld
std
fsubl
fistpll
adc
jb
xor
pusha
mov
lret
push
in
jmp
push
stos
pop
aam
push
setno
dec
push
push
aad
fistps
jno
cli
xor
jns
mov
sbb
xor
ret
lock
ljmp
out
jp
mov
mov
dec
mov
and
or
mov
fisttpll
pop
add
popf
push
adc
dec
lock
cld
loop
jne
sahf
movsb
xlat
out
mov
sub
mov
and
xor
pop
add
lret
push
sbb
and
les
jno
sahf
mov
dec
loop
push
and
dec
pusha
loopne
movsl
sahf
aas
loop
and
mov
mov
je
sahf
dec
das
cs
outsb
mov
mov
dec
cld
pop
sbb
add
push
cmpsl
test
cmp
push
sub
push
cmp
inc
cmc
mov
mov
mov
subl
lret
pop
add
mov
test
xor
incb
clc
fdivrp
sbb
mov
cwtl
mov
cmp
insl
sbb
jle
adc
ja
xchg
lahf
xchg
or
push
mov
in
scas
and
lea
and
pop
out
outsb
out
cmp
fldl
cmpsl
add
dec
dec
mov
add
cld
cwtl
cmp
fisubl
nop
jmp
cltd
xchg
ljmp
cmpsl
and
sbb
jge
push
loopew
es
outsb
cmpsb
popf
xchg
test
mov
mov
xchg
lods
lcall
cmp
insl
cmp
mov
adc
xchg
jge
lds
sub
xor
inc
insb
pop
rcrl
mov
add
mov
imul
sbb
dec
inc
jp
pop
lahf
mov
pop
hlt
pusha
push
mov
pop
les
or
test
xor
shll
dec
in
mov
sbb
shlb
in
test
loope
mov
adcl
inc
dec
dec
sub
mov
insb
jge
push
insl
mov
mov
subb
aas
push
orl
arpl
testl
fnstenv
fldt
int3
dec
ljmp
test
ljmp
sahf
enter
outsb
mov
mov
rcrb
xchg
lret
andl
jmp
mov
cltd
ja
add
inc
out
int3
add
cmp
jecxz
inc
ds
lock
cmp
push
sub
in
jns
jns
cmc
or
ds
ret
mov
cs
imul
nop
xlat
adc
jg
adc
lods
mov
cmp
adc
add
xchg
aas
pop
inc
in
stc
jp
and
mov
cmpsl
shll
insb
jbe
inc
pop
push
push
sti
orl
dec
mov
mov
mov
aad
mov
loopne
inc
add
call
cmpsb
ret
lret
repnz
imul
push
cmpsl
jecxz
inc
adc
sarl
ja
pusha
mov
push
fs
out
sahf
repnz
xor
push
fdivrl
int
sbb
xor
pop
and
jno
xor
inc
arpl
add
add
dec
mov
test
adc
cli
inc
push
inc
jecxz
enter
xor
add
outsl
fldenv
or
jp
mov
jbe
mov
aam
fstps
pop
lcall
or
xchg
cwtl
lock
inc
inc
adc
xlat
push
clc
cmp
hlt
adcl
pop
inc
fisttpll
loopne
insb
je
pop
sbb
pop
adc
lds
inc
mov
xchg
inc
dec
fisubl
ficomps
sub
inc
decb
fimuls
int3
outsl
rcl
ret
cmp
int3
pop
nop
leave
icebp
sbb
test
scas
cltd
sbb
push
cld
in
push
cs
mov
xor
mov
lret
bound
bound
rol
pop
lret
rolb
sbb
xchg
jno
pop
cmpsl
daa
ds
imul
pop
dec
stc
jns
jle
cli
popa
and
jnp
rol
mov
xor
xchg
push
jnp
cld
cmpsl
repz
push
shlb
cmc
test
loope
popf
xlat
fs
aas
lret
xor
popa
mov
pop
js
insl
int3
lahf
and
movsb
and
lret
push
lods
int3
push
das
pop
xlat
sub
stos
pop
ficoml
and
lahf
lahf
inc
imul
mov
xchg
xor
fsub
xchg
mov
jns
cmp
pop
lahf
jbe
fdivrs
cmp
mov
stos
dec
cltd
and
mov
ja
adc
hlt
das
out
mov
cmp
cs
in
jae
jb
pop
push
out
test
pop
fsub
sub
jecxz
arpl
daa
repnz
xorb
scas
dec
test
pop
xor
stos
push
push
dec
mov
ljmp
pop
icebp
adc
dec
arpl
push
mov
jmp
xor
add
aam
std
or
outsl
mov
push
add
pop
jae
pop
andl
bound
push
out
cli
movsl
ljmp
dec
flds
stc
jge
out
les
stos
arpl
sub
xor
sub
cmpsb
mov
sub
sahf
movsl
inc
clc
pusha
pop
mov
scas
inc
cmp
dec
icebp
cmp
sbb
test
fldl
pop
or
aad
out
push
imul
fxtract
pop
jle
scas
in
call
xor
and
cld
mov
inc
pop
and
push
test
ret
inc
pop
mov
and
cmpsb
inc
aam
push
jle
xor
aad
fcoml
addr16
ret
cmp
mov
rcll
jns
add
xor
pop
insl
xchg
into
addr16
xor
pop
pop
cs
lcall
test
imul
push
movsl
inc
inc
jg
rcr
mov
lds
das
fsubl
stos
shrl
jnp
out
daa
mov
hlt
jbe
and
mov
lcall
push
cmc
cld
add
movsl
out
icebp
lds
pushf
cmpsb
fistpll
or
push
jmp
imull
push
test
xchg
inc
out
outsl
insb
idivb
pusha
and
push
imul
mov
fcompl
jns
jns
push
stos
hlt
cld
push
ljmp
xchg
rcll
pop
xchg
push
sub
gs
movsb
leave
or
dec
add
mov
ja
sti
xchg
cmp
addb
xorl
add
mov
and
pop
stos
dec
nop
push
mov
mov
lcall
inc
scas
xor
sbb
std
jecxz
pop
xor
movsb
push
xor
rorl
subl
subl
jnp
repz
dec
mov
insl
dec
ja
in
movsb
enter
xor
pop
push
mov
xchg
shll
int
pop
or
lret
scas
in
and
filds
xchg
negb
call
mov
mov
pop
shrb
fnstsw
push
cmpsb
nop
stos
sbb
inc
or
ds
mov
or
pop
xchg
sbb
cmpsl
dec
fisttpl
jno
and
jmp
dec
test
mov
jne
xchg
lods
lret
js
lea
icebp
sub
cmpsl
jmp
xor
pop
mov
dec
cmp
inc
pop
mov
xor
xchg
std
ret
push
and
mov
pusha
mov
sbb
in
and
orb
mov
cmpsb
les
in
mov
cmp
ret
xor
sahf
loopne
pop
lea
inc
adc
incl
aaa
mov
mov
jae
sub
mov
sahf
cmp
imul
roll
jecxz
jnp
inc
push
scas
jnp
add
mov
mov
xchg
fmull
mov
in
int3
push
jg
adc
xchg
dec
mov
xchg
add
mov
and
mov
pop
jns
pop
jns
sar
loope
jae
shll
or
push
fs
mov
gs
out
insl
and
insb
loope
pop
das
mov
cmp
mov
or
or
cmpb
dec
shll
mov
rclb
ret
xchg
lret
lock
dec
out
fdivp
add
dec
mov
sbb
outsb
mov
push
mov
loopne
ljmp
std
les
popa
mov
xchg
out
xor
cwtl
out
push
mov
lods
pextrw
cwtl
in
les
leave
push
gs
sub
pop
cmp
adc
mov
pop
fs
fwait
orl
pop
inc
subb
sti
mov
adc
iret
fmuls
fstpt
pusha
cmc
sub
adc
push
and
addr16
dec
inc
sub
pop
mov
push
dec
in
and
cli
arpl
push
cli
mov
pop
arpl
fstps
adc
jl
jno
mov
je
lret
test
cmp
into
push
mov
jle
cmpb
orb
xchg
mov
push
lea
rcrb
push
mov
push
mov
leave
scas
lea
clc
cmp
in
loopne
cs
imul
xchg
or
ret
daa
push
and
popa
insb
mov
cmp
mov
in
call
sti
hlt
aad
pop
cmpsb
push
add
int
testb
arpl
enter
pushf
bound
adc
push
dec
movsl
ja
imul
insl
cmp
cmpsb
pusha
xor
dec
xchg
dec
mov
data16
jmp
stc
dec
popa
rcl
adc
jge
cmp
ss
test
out
or
pop
cmp
loopne
and
pusha
lret
dec
cmpsb
adc
cmp
mov
gs
sbb
imul
mov
jne
jb
loope
dec
stos
scas
pop
or
pop
scas
out
jns
in
push
sub
push
in
call
test
dec
and
mov
push
sbb
insl
lods
mov
mov
sbb
jmp
mov
mov
xorl
test
cmp
cmp
adc
aas
cmp
or
cmp
bound
inc
in
sbb
cmp
mulb
outsl
nop
repnz
fistpll
lret
es
jp
jnp
dec
push
inc
shl
ja
xchg
mov
ror
dec
scas
sub
test
idivb
mov
mov
iret
jg
stos
lds
rcl
jle
jae
movsb
cmp
loopne
jl
mov
xchg
mov
xchg
stos
ficomps
in
fmul
jbe
bound
sub
adc
in
into
xor
stos
jns
pop
mov
dec
jg
xchg
out
pop
stc
adc
xchg
or
push
jl
jle
mov
loope
sbb
outsl
call
das
daa
dec
mov
xchg
out
rcrl
mov
adc
mov
addr16
cmp
mov
sahf
cmp
mov
mov
add
popa
rolb
jns
mov
dec
call
inc
cmc
gs
or
daa
icebp
xchg
inc
dec
int
xchg
mov
mov
jp
jbe
ret
test
cmc
sub
mov
ret
cmpsl
repz
pushf
or
in
and
and
dec
mov
cmp
mov
xor
mov
and
ss
xchg
out
test
inc
sbb
lea
aam
movsb
lods
mov
xchg
push
xchg
aad
mov
sub
add
sub
inc
or
xchg
data16
loope
sbb
push
add
mov
xchg
outsb
or
jp
xchg
xor
jecxz
pop
pop
pop
mov
push
rcll
sahf
fsubrl
or
shll
out
push
pop
inc
cmp
xlat
shrb
push
jge
and
sub
mov
mov
and
mov
mov
iret
push
mov
add
test
pop
aam
dec
inc
aaa
pop
cld
xlat
push
xor
xchg
std
nop
fnstsw
or
xchg
adc
xor
int3
pop
js
lods
imul
setae
out
loop
popf
arpl
sbb
inc
in
mov
jne
enter
enter
jae
push
addb
sbb
xor
inc
shrl
pop
dec
ja
sti
inc
sahf
arpl
ja
testb
scas
dec
mov
xchg
inc
mov
inc
adc
psubq
push
icebp
lret
jb
cltd
scas
mov
rcrl
push
mov
stc
mov
mov
pop
ret
mov
xchg
out
mov
aas
cltd
jle
outsb
inc
outsl
mov
bound
loop
jns
in
xchg
or
stc
jae
scas
clc
pop
cld
xchg
je
adc
cltd
sub
sub
sbb
mov
aam
xor
mov
push
aad
inc
sub
test
std
or
lcall
popf
cmp
dec
and
push
jnp
inc
mov
in
test
mov
xlat
std
dec
dec
ss
jno
mov
imul
iret
adc
adc
add
mov
sbb
call
bound
cmpsb
jmp
into
and
pop
mov
aam
pop
sbb
mov
adc
loopne
sub
mov
adc
jp
push
jmp
les
std
and
fwait
mov
sub
out
xor
jg
test
sub
xorb
and
sub
outsb
ss
jnp
stos
jb
aaa
leave
cmp
stos
icebp
cwtl
jae
inc
jns
sbb
icebp
je
cli
dec
push
cld
pop
and
lock
xor
jmp
add
xchg
or
test
cli
mov
adc
fs
lcall
sbb
sub
inc
sbb
scas
xor
push
jg
fsubrl
in
mov
cltd
fdivrs
sub
test
cltd
nop
lret
dec
mov
mov
sbb
cmp
jae
xchg
sti
scas
stos
sub
mov
lock
ret
mov
jmp
sbb
cmp
jge
push
ljmp
lcall
fcmovne
mov
loop
fisttps
mov
fsubrp
sti
stc
inc
xchg
inc
adc
add
pop
arpl
scas
in
lahf
orl
outsb
outsb
mov
adc
lahf
mov
mov
xor
dec
sub
pusha
adc
jbe
push
sbb
push
test
inc
xchg
xchg
dec
dec
mov
icebp
call
xor
mov
add
ja
push
xchg
bound
and
add
pop
jmp
enter
mov
cmp
fdivs
lret
mov
xchg
ja
mov
in
dec
fisubrl
mov
cmp
cmp
mov
lock
test
push
int
out
stos
sub
push
xchg
cmp
or
pop
subb
popf
or
cmpsb
sbb
bnd
xor
adc
cld
nop
or
pop
pop
std
mov
inc
adc
call
push
xor
test
dec
popf
or
gs
cmc
inc
mov
pop
pop
insl
mov
mov
inc
inc
cmc
in
mov
popa
mov
pop
bound
push
adcl
inc
iret
jo
dec
hlt
xchg
call
fwait
cmpsl
pop
cli
mul
int3
jb
push
lock
push
js
sub
subb
loope
lcall
sub
jge
lcall
inc
adc
sub
inc
scas
int3
stc
mov
mov
and
aam
cld
call
cmpb
xor
enter
mov
jl
mov
mov
jno
lds
gs
mov
insl
pop
jne
mov
mov
pop
jp
aaa
pop
mov
add
xor
rcrl
dec
and
jnp
jo
sbb
outsl
lds
fstps
ffree
ret
add
xchg
mov
outsb
mov
nopl
jle
lcall
std
pop
mov
xor
xchg
out
sub
sub
bound
adc
mov
jmp
pop
icebp
push
fcmovu
mov
inc
rorl
jp
lods
ror
js
cmpsl
in
mov
add
adc
enter
insl
test
imul
je
pop
lds
lret
xchg
mov
js
andl
push
mov
mov
loopne
les
fmull
test
scas
stos
and
pop
push
xchg
rol
fs
aad
cwtl
aaa
sbb
repz
add
or
movsl
xor
cmp
cmc
in
jne
jo
fmuls
leave
cmpsl
add
stos
push
mov
dec
xor
jno
mov
push
pop
mov
and
out
fldenv
sarb
lock
mov
adc
js
mov
pop
push
xchg
jg
and
inc
xor
repnz
add
iret
adcl
test
cli
ljmp
push
out
mov
dec
jle
in
cmp
xchg
data16
jp
sbb
outsl
dec
jmp
mov
jmp
dec
pop
mov
xor
jbe
in
or
ljmp
mov
in
inc
sub
pop
xor
push
and
test
fldt
push
inc
adc
xchg
dec
xchg
push
mov
and
mov
xchg
mov
xor
ror
xor
sti
sub
mov
mov
repnz
imul
imul
ss
mov
adc
or
in
jo
lcall
icebp
sbb
cmpb
scas
push
and
xor
ret
and
int
cmp
pop
outsb
test
mov
adc
jmp
jns
fcoms
rcrl
aad
loopne
cmp
adc
pop
aam
and
sub
out
cmp
ret
mov
sub
loope
jno
mov
mov
sub
aas
rorb
dec
cmpsl
inc
pop
push
mov
sti
mov
sub
lods
imul
adc
roll
and
aaa
jbe
mov
lds
and
pop
mov
movsb
arpl
popa
sbb
push
ffreep
push
aam
aas
xchg
faddl
xorb
das
mov
stos
ficomps
leave
es
je
dec
xor
jg
nop
and
stos
push
push
sub
mov
add
add
icebp
cmp
and
lret
push
mov
outsb
mov
mov
mov
sbb
jns
push
cld
and
in
pop
int3
testl
jbe
insb
scas
and
mov
cltd
cmp
and
dec
cmpsb
dec
decl
xor
inc
mov
push
push
aam
mov
mov
mov
sbb
test
pop
xchg
lock
nop
rorb
notb
shl
in
loop
add
clc
addr16
xchg
mov
ror
in
outsl
push
lret
in
scas
pop
adc
ljmp
inc
and
and
dec
push
pop
imul
mov
or
in
dec
fldt
out
fimull
lret
jle
roll
push
sbbb
nop
dec
pushl
jbe
dec
ds
cmp
and
movsb
andb
add
lods
sbb
mov
stos
es
xor
push
loope
mov
and
add
add
mov
js
and
popf
sub
cmpsl
inc
loopne
bound
pusha
xchg
sub
cmp
jge
and
fimuls
pop
rorl
pusha
fdivr
jl
jbe
sahf
mov
sbb
xchg
mov
mov
jb
xor
outsl
hlt
movsl
loope
jno
popa
inc
push
dec
jg
push
and
sbb
lret
int3
fcmovb
lods
push
jnp
push
int3
aam
push
inc
pushf
and
mov
mov
mov
aas
sbb
mov
add
sub
and
sbb
mov
or
ds
jne
rorb
jb
xor
aam
into
sub
sbb
jnp
in
mov
jg
aas
xor
lahf
ss
imul
xchg
repz
fldl
cwtl
mov
mov
xchg
push
xor
mov
aad
scas
push
idivl
dec
js
mov
xchg
adc
pushf
pushf
mov
mov
sub
mov
mov
loope
pop
call
xchg
push
mov
mov
or
movsl
rcr
cwtl
cmp
mov
addr16
lds
and
in
pop
repz
lock
loope
sti
cld
pop
push
es
lods
pop
in
call
sub
xchg
daa
fcmovnb
iret
and
jmp
mov
jl
ss
xchg
cmp
mov
mov
imul
dec
add
dec
jno
stc
movsl
ja
or
push
in
xchg
lock
jae
cmp
sbb
ljmp
stos
xlat
xchg
insl
jns
mov
mov
push
divb
inc
push
xor
adc
jo
call
pop
inc
jge
pop
jl
sarl
loop
lock
pushf
mov
dec
lods
pop
in
mov
push
jl
dec
pop
imul
ret
cli
test
mov
cmpsb
movsl
xchg
insb
daa
and
xlat
inc
fcmovnb
lea
mov
xchg
jno
mov
and
or
sub
dec
jae
fdivrl
or
sahf
cmp
sbb
sub
pop
jbe
mov
add
cmp
into
mov
sahf
jle
jecxz
fistl
pop
mov
arpl
hlt
out
rcr
pop
gs
lods
inc
sbb
xor
xor
dec
jnp
sbb
inc
dec
xorl
ss
aad
mov
pop
mov
shrb
xchg
je
aam
mov
pop
mov
and
push
mov
int3
sbb
fs
loop
sub
ss
jno
push
repz
pop
mov
dec
scas
xchg
imul
xor
addl
mov
gs
hlt
mov
pop
sub
push
cmpsl
pop
add
pop
in
frstor
rcrb
sahf
int
call
or
loope
stos
adc
rcrb
xlat
test
jns
add
sti
fsubrl
pop
mov
adc
lcall
mov
lret
movsl
xchg
adc
cwtl
ror
test
stc
xor
xchg
cmpsl
mov
mov
loop
leave
inc
add
sbb
pop
js
jl
mov
jae
pop
fucomip
jecxz
mov
sub
sbb
rclb
sbb
or
pop
xchg
adc
ds
jbe
lret
and
jae
push
dec
fwait
pop
sarl
xor
cli
sbb
ljmp
sub
daa
cmpb
incl
mov
stos
inc
sub
aas
or
xchg
sbb
arpl
mov
subb
sub
mov
xchg
add
jl
int3
test
push
sub
lods
mov
data16
cmc
ljmp
pop
and
dec
orl
inc
int3
scas
adc
int
aas
pop
xchg
mov
pop
dec
cmp
les
mov
dec
fcmovbe
ret
rol
mov
mov
push
aam
les
xor
push
adc
fucomp
out
imull
and
mov
cmp
jp
or
fidivrl
hlt
cld
maxps
push
inc
outsb
adc
shr
lock
or
fwait
sahf
xor
jge
outsb
das
xor
xchg
mov
xchg
rol
jmp
mov
popl
xchg
lods
outsb
popa
cmp
adc
ret
push
xorl
jne
ljmp
fimuls
ja
fsts
scas
shr
out
xchg
out
inc
addr16
fstp
pop
xor
mov
call
pushl
mov
cmpsb
xor
and
ret
dec
int
xor
pop
mov
flds
add
clc
xor
xor
loopne
push
push
xchg
mov
xor
test
and
and
xor
test
inc
rolb
mov
rcrb
inc
push
adc
enter
add
add
loope
mov
push
cmpsl
mov
data16
jne
mov
loopne
cmp
inc
sbb
xchg
pop
test
push
test
push
push
in
push
nop
push
xlat
outsl
repnz
mov
cli
in
stos
aas
cld
cmpsb
ficompl
leave
mov
mov
and
aad
add
repnz
lock
int3
xor
repz
shlb
mov
mov
jbe
adc
pop
cmpsl
mov
scas
inc
mov
mul
scas
adc
into
shlb
and
mov
cs
lds
push
mov
icebp
xchg
fimuls
xchg
or
subb
inc
das
adc
jge
das
xor
call
stc
mov
pop
cmp
xor
sub
movl
inc
push
dec
int3
mov
and
mov
xor
mov
in
inc
xor
pusha
sahf
pop
mov
ds
lds
xchg
cmp
mov
leave
add
daa
xor
or
inc
jb
xor
mov
in
mov
mov
stos
lret
stc
fildll
xchg
adc
int3
out
outsb
loop
pop
roll
shrl
xor
movsb
push
adc
ljmp
stc
inc
push
iret
fmul
mov
lahf
sbbl
repz
sarb
repz
lods
repnz
inc
mov
push
lods
mov
ret
cwtl
fstpt
scas
std
aas
sub
bnd
mov
mov
adc
jbe
gs
inc
adc
pop
aaa
xchg
mov
cwtl
ficoms
jmp
les
pop
jne
or
dec
leave
aam
out
cmp
and
jmp
pop
outsl
cltd
gs
adc
mov
test
aad
jae
jns
mov
sti
cltd
mov
in
adc
cs
fucomip
push
cmpsl
jecxz
and
int3
cmp
ret
popf
sub
jle
ljmp
push
push
add
dec
outsl
test
fldt
or
xor
cmp
push
popf
xorb
repz
cmpsl
test
adc
fadd
inc
shrl
testl
pop
adc
push
icebp
incb
push
sub
ss
jbe
imul
rcr
jge
das
leave
sub
xchg
stc
sub
into
xchg
pop
stc
ljmp
cmp
scas
sbb
cmpsb
xor
pop
test
test
jle
enter
xchg
xchg
andps
nop
jns
pop
push
xor
aaa
sbb
in
or
loopne
mov
hlt
add
sbb
in
push
add
aas
rclb
dec
pop
pop
fs
or
mull
outsb
pop
dec
stos
repz
jb
sbb
out
pop
ret
xchg
mov
jnp
fildl
adc
inc
cmp
int
adcl
cmc
jo
sbb
icebp
mov
stos
jmp
call
rcr
lret
ljmp
daa
out
mulb
mov
fildll
jge
adc
mov
aas
or
es
aam
sub
pop
les
in
sub
out
xchg
scas
adc
adc
or
ja
mov
and
xor
repnz
mov
les
push
stos
xchg
shll
arpl
popa
test
pop
mov
inc
cmp
addr16
outsl
lret
lret
push
xchg
call
dec
jp
pop
pop
outsl
xor
pop
mov
add
inc
outsl
adc
ret
jo
stos
sarl
push
fstps
ljmp
sub
loope
imul
push
mov
jbe
or
sbb
rorl
ljmp
jp
push
push
push
adc
movsl
adc
daa
pop
pop
xchg
leave
dec
jl
jb
jo
test
in
lock
in
xchg
imul
pop
mov
imul
shlb
adc
je
test
sub
call
fcomi
mov
test
cmp
subb
jecxz
std
in
sahf
or
jb
aas
inc
lahf
jle
jns
jnp
lods
sbb
aas
imul
fldenv
mov
add
xchg
pusha
out
inc
push
pushf
push
inc
pusha
cli
ss
xchg
ss
pushf
leave
mov
mov
push
push
mov
scas
push
sarb
sbb
out
stos
cmpsb
loopne
push
hlt
in
jnp
sub
pop
outsb
shlb
sub
jle
sbb
int
pusha
je
dec
js
sub
or
xchg
flds
pop
pop
das
in
mov
insl
pop
pop
xchg
adc
jo,pn
aas
cmp
iret
int
sbb
pop
xor
mov
imul
pop
jno
sbb
es
out
mov
push
add
shl
cmp
lahf
cmp
loop
and
mov
lret
stos
imul
jmp
sbb
aad
sub
call
add
add
shlb
pop
adc
call
sub
or
int
or
bound
add
sbb
scas
add
mov
sbb
out
movsl
popf
sbb
xchg
fidivrl
repnz
movsb
adc
icebp
cmpsb
sbb
enter
mov
pop
inc
lock
rcrl
mov
cmc
pop
ret
xchg
sub
aas
mov
pushf
add
mov
stos
mov
ja
push
les
lcallw
xchg
push
lods
stos
out
xchg
int3
pop
inc
mov
and
subl
out
mov
jne
outsb
xor
lods
add
outsb
add
mov
lods
dec
push
imul
ss
iret
push
xor
mov
or
jnp
jge
pop
ja
push
pop
enter
jae
fldcw
fs
mov
es
aas
jle
ret
les
stos
sahf
xlat
mov
mov
daa
inc
sub
outsl
rcrl
arpl
pop
jae
adc
popf
mov
and
pop
jle
sub
insb
cwtl
xlat
push
jae
pushf
pop
add
push
out
test
xchg
jecxz,pt
add
subl
cmpb
mov
cmp
dec
sub
cmp
xorb
mov
or
push
add
adc
in
test
adc
push
shll
out
mov
jecxz
loop
out
xchg
xor
out
loope
cwtl
mov
mov
cmp
andb
mov
xor
cs
xor
cmp
sarl
sbb
aad
ret
lret
popa
popa
shlb
mov
stc
movsb
mov
gs
mov
cld
xchg
mov
jae
stos
adc
dec
push
xchg
dec
mov
ds
and
pcmpgtd
xlat
sub
mov
emms
mov
dec
xor
jp
lahf
mov
sbb
lcall
sbb
adc
mov
xchg
ret
cmp
add
adc
jns
fs
adc
outsb
gs
cli
mov
fsubrs
das
shrb
or
shr
dec
fidivrl
add
and
inc
pop
loopne
das
scas
shrd
cli
mov
push
fwait
mov
adc
imul
mov
xor
xchg
mov
outsb
hlt
jbe
xchg
push
jae
pop
and
add
xchg
and
fldt
addr16
movsb
inc
cmc
push
fs
or
cmp
push
sub
loopne
pop
cmp
pop
nop
mov
cwtl
xchg
mov
ljmp
sub
test
ret
mov
insl
shlb
aas
out
aam
jno
xor
push
adc
test
mov
out
shrl
jmp
dec
sub
mov
mov
js
push
mov
jle
sub
inc
in
mov
jno
pushf
jecxz
movsb
cltd
call
pop
mov
inc
out
jo
stos
sub
mov
dec
loopne
adc
inc
and
fsubs
xor
mov
add
mov
decb
mov
mov
xchg
or
cmp
js
jns
mov
in
cmp
xlat
repz
out
psubsb
mov
mov
mov
mov
add
mov
xchg
pop
inc
lods
lods
push
rcl
int3
in
push
jnp
or
push
cmpb
add
xor
push
jne
fwait
jecxz
ja
sub
sbb
and
mov
call
or
jo
adc
movsl
test
test
pushf
push
and
cld
fcompl
adc
imul
ljmp
je
scas
repnz
jno
add
dec
mov
enter
sub
pop
sub
adc
pop
andb
xor
cmp
adc
lret
xchg
adc
ljmp
mov
mov
jbe
sub
mov
xor
jmp
xor
add
sbb
aam
xchg
les
cwtl
pop
push
mov
test
jg
out
pusha
mov
test
jo
xor
mov
or
dec
clc
sbb
push
das
aas
xor
hlt
push
lahf
xor
inc
xchg
inc
leave
bound
or
inc
fwait
dec
mov
data16
lret
pop
test
xchg
gs
and
and
adc
ljmp
xor
cmpsl
add
inc
fwait
jle
xor
iret
movsb
cmp
rolb
or
cmpl
mov
inc
mov
bound
aad
pop
lcall
dec
dec
xlat
pop
pop
lds
mov
cs
xchg
insl
jb
in
pop
mov
call
out
push
pop
dec
scas
iret
cwtl
inc
lea
xchg
jo
sbb
xchg
das
bound
pusha
int
sub
or
push
mov
jne
inc
xchg
gs
and
je
or
or
mov
aas
xor
mov
insl
mov
lret
movsb
mov
add
imul
dec
cmp
push
inc
jae
mov
push
loope
mov
imul
xorl
clc
sti
cmp
jp
adc
xchg
nop
shlb
cmp
inc
pop
mov
or
push
push
or
or
cmc
xchg
into
sub
fidivrs
or
mov
pop
sti
out
push
lods
sub
or
pop
mov
ja
dec
or
cmp
fucomi
lods
jbe
jns
imul
lock
jae
arpl
inc
xchg
dec
mov
imul
dec
xlat
jl,pn
dec
fidivs
lahf
push
jne
xchg
bnd
mov
pop
mov
scas
jne
jne
and
push
popf
shlb
sub
pop
test
add
cli
mov
mov
lock
jnp
scas
jbe
lret
mov
addr16
sbb
out
sbb
fs
cltd
in
testb
pop
sbb
mov
es
or
dec
jno
fimuls
aam
xchg
adcl
sbb
ljmp
mov
repnz
dec
jns
lret
pop
les
popa
int
xchg
sahf
pop
adc
inc
jmp
pop
push
popf
mov
inc
xchg
shlb
outsl
stos
imul
push
lods
sub
pushf
clc
not
sbb
mov
movsb
mov
dec
mov
ficoml
outsl
jp
ss
fsubr
lods
dec
rclb
outsl
mov
sub
sub
ja
bound
mov
cmpsb
popa
fnstenv
mov
jecxz
sarb
mov
add
pop
sbb
cmp
mov
cmp
push
in
adc
imul
jecxz
dec
inc
cmp
bswap
push
cmc
pop
scas
jns
or
mov
mov
mov
cmp
sbb
out
js
ret
cmpsb
push
in
imul
sub
out
sbb
test
sbb
or
xchg
sbb
icebp
push
rolb
pop
inc
arpl
jmp
push
sbb
push
ret
imul
sbb
dec
decb
xchg
or
mov
pop
icebp
sub
sub
add
pop
pusha
pop
enter
arpl
cmp
cmp
adc
movsb
notl
jecxz
movsb
insl
jge
sbb
sbbl
mov
in
aam
ret
in
divb
or
fildl
dec
hlt
out
sub
adc
ficompl
cmpb
jb
inc
mov
out
insb
sbb
lods
sti
fucomi
mov
xchg
loop
or
push
shlb
call
add
sub
aas
in
push
cli
jbe
mov
fwait
in
pop
and
sti
lcall
faddl
or
jae
fisttpl
sbb
and
adc
sbb
dec
mov
sub
inc
fwait
push
xorb
or
ds
dec
sahf
in
out
les
outsb
cmp
test
les
stc
cmp
add
dec
repz
inc
add
adc
ret
xchg
dec
insl
push
ljmp
repnz
es
les
out
cmp
and
sub
adc
out
mov
sbb
cli
fstpl
leave
insl
out
dec
aaa
insb
cmp
test
sbb
pop
popfw
pop
rcll
xchg
dec
push
xchg
xchg
push
stc
dec
xchg
mov
pop
pushf
dec
add
adc
pop
jg
and
hlt
ret
and
jmp
ret
fdivr
call
in
rcl
lds
xor
pop
psrad
in
dec
dec
xlat
popf
add
add
fidivl
int
fistps
inc
or
jmp
cmp
adc
or
pop
or
data16
jnp
jne
sbb
test
jae
adc
sbb
jnp
sub
sbb
sti
leave
push
push
pop
cli
xor
mov
scas
dec
and
jmp
and
sti
in
js
je
pop
stc
xor
sub
imul
add
int
mov
xchg
or
xchg
sbb
adc
mov
jae
pop
cmp
push
jecxz
mov
std
call
xor
jl
frstor
mov
xchg
mov
sbb
push
pop
rolb
aas
push
fs
sub
push
sarb
mov
pop
gs
xchg
fcoms
inc
in
pop
and
mov
mov
dec
dec
je
ja
cmp
mov
jo
bound
adc
fs
jecxz
adcb
jp
fadds
lcall
nop
inc
or
dec
fsub
mov
iret
jmp
fs
ficomps
lahf
insl
push
push
and
in
or
in
sbb
pop
int3
jl
mov
out
cmp
jle
jmp
cli
addl
xchg
lret
add
xchg
lods
loopne
pop
xor
cmp
inc
adc
movsl
inc
pop
addr16
insl
pusha
or
jb
jp
popa
icebp
out
xchg
dec
xchg
or
loope
xor
sub
leave
or
mov
inc
push
pop
into
xchg
movsb
iret
sbb
fidivrl
mov
mov
daa
dec
push
lret
or
xor
mov
insb
and
clc
fmull
cmpsb
cmp
outsb
adc
out
imul
aaa
in
dec
je
xchg
cmp
outsb
sbb
jns
stos
jbe
pop
cmp
sub
mov
xchg
ret
shrb
lock
inc
or
push
push
mov
jge
pop
popa
add
adc
jo
jp
insl
sarl
cmpsb
push
ljmp
push
scas
sahf
mov
jmp
cli
dec
sub
jl
test
fs
cmp
inc
lds
mov
lods
mov
fisttpl
and
popa
inc
das
in
addl
mov
repnz
nop
inc
dec
sub
icebp
std
movsl
lcall
and
xchg
adc
adc
in
out
lret
add
xchg
imul
fists
out
push
adc
adc
lea
aad
cmc
rolb
daa
lret
rorb
sub
test
pop
rorb
push
pop
pop
es
in
je
push
cmp
adc
js
fidivs
sub
push
int3
sub
jo
or
mov
xlat
inc
cmp
cmp
inc
mov
arpl
addr16
mov
inc
test
sub
and
push
xchg
pop
insb
pop
cmpsl
mov
test
cmpl
xchg
pop
rorl
ficompl
loop
mov
jge
ficoml
adcl
xchg
or
fwait
jns
addb
mov
jb,pn
xchg
mov
mov
fsubs
xchg
sub
outsl
mov
push
mov
pop
xchg
repnz
ret
int3
cmp
or
push
stos
add
xorl
addr16
xchg
out
std
mov
aas
f2xm1
sub
pusha
dec
fisubrs
outsb
mov
fistps
es
inc
sbb
loopne
mov
mov
test
pop
nop
mov
push
movsl
pop
arpl
mov
pop
xchg
lcall
aas
addr16
fimull
mov
pop
sbb
mull
movb
add
cmpsb
push
pop
cmp
sbb
xchg
adc
pop
or
lock
rcrl
dec
popa
rcll
mov
xor
js
loope
mov
xchg
push
inc
test
fistpll
cmp
cmp
adc
out
and
and
cmc
cs
iret
push
shrl
lods
imulb
mov
cltd
ljmp
js
dec
add
adc
dec
lea
jle
rorb
je
lods
cmp
sub
mov
mov
pop
cwtl
icebp
into
cmp
stc
xor
clc
jno
xor
mov
or
push
sub
mov
adc
stos
push
and
dec
and
mov
mov
popa
sbb
mov
imul
push
xor
or
fnstenv
xchg
sub
test
or
aam
jmp
shl
mov
pop
add
push
mov
inc
inc
jl
stos
xchg
adc
adc
sbb
cmc
dec
mov
subb
pop
aas
dec
fs
jb
cmp
call
lock
xchg
and
jmp
dec
jg
ss
rorb
lret
stos
clc
xor
adc
hlt
mov
sbb
inc
mov
dec
stos
mov
push
dec
sahf
xor
mov
scas
push
lahf
xchg
cld
sbb
sub
mov
inc
jl
xchg
and
jl
mov
in
dec
adc
jbe
andb
hlt
repnz
or
xchg
lret
ss
popa
cmpsl
les
lahf
xor
movsb
and
cld
das
mov
das
addr16
test
push
outsl
data16
decl
aaa
sub
inc
or
out
push
mov
mov
xlat
hlt
dec
pushf
js
test
cmp
xchg
mov
imul
lret
pop
call
xor
frstor
jbe
iret
test
insl
adc
repnz
adc
test
enter
cmp
fs
mov
fnstsw
inc
sub
sahf
aad
or
cmp
sub
pusha
cmc
clc
rorb
sbb
testl
mov
mov
outsb
mov
adc
xchg
push
hlt
xor
pop
neg
pop
inc
mov
dec
jno
faddl
lods
shrb
testl
std
add
xchg
cmp
inc
test
lds
cmc
jne
sub
xor
cmp
loope
test
out
roll
jnp
dec
movsb
jne
ss
shll
cmp
incb
mov
adc
jno
ds
push
and
jg
loop
loope
jp
mov
stos
out
loope
fidivl
ret
addl
aaa
es
stc
test
je
push
push
add
mov
pop
out
cmp
cmp
data16
inc
mov
je
out
les
xchg
movsb
jp
dec
fs
test
rcr
mov
insb
cmp
pop
push
cld
sub
mov
inc
adc
sub
or
cmp
es
sbb
mov
loop
inc
fs
xor
add
sbb
cmp
mov
add
pop
lods
xchg
cwtl
fisubrl
sbb
jl
pop
add
ss
or
cmpsl
mov
push
and
addr16
mov
mov
leave
cmp
pop
cmpsl
sub
sti
ljmp
lret
ss
mov
inc
lock
pop
in
ret
and
lcall
andl
ret
fistpll
pop
mov
inc
scas
fldcw
or
stos
aas
push
pop
cli
cmpsl
dec
fwait
sub
mov
xchg
out
dec
mov
fidivl
test
std
sub
sub
lahf
mov
insb
jb
jmp
insb
xchg
gs
adc
test
shr
mov
callw
loop
js
stos
xlat
jl
mov
xor
in
je
sahf
dec
cmp
jmp
add
pop
jb
je
out
subl
mov
xlat
bnd
std
fs
cmp
jmp
aas
out
lea
incl
test
dec
hlt
inc
test
out
pop
insb
xchg
sbb
push
cmp
insl
pop
cmp
ljmp
aaa
xor
xchg
add
ret
xor
pop
fsubr
jb
mov
jl
adcl
js
dec
jnp
jns
sbb
xchg
les
pop
sbb
scas
add
bound
sub
pop
and
lods
aad
push
mov
mov
mov
push
fildll
mov
and
mov
call
lods
jnp
setno
int
je
sbb
outsl
add
cwtl
mov
inc
mov
fisttpl
daa
xchg
repz
enter
pushf
jmp
or
cs
fbld
pop
push
dec
stc
outsb
loop
cli
adc
pop
mov
jmp
popa
dec
add
lret
nop
cmpsl
mov
push
jns
mov
ret
lret
and
andb
add
notl
sbb
adc
lret
in
test
lret
call
cmpsl
in
sbbl
mov
mov
xor
lcall
mov
js
inc
stos
or
lret
push
cmp
adc
dec
in
or
jmp
movsbl
or
jo
push
sub
maskmovq
idivl
cmp
mov
and
or
jl
roll
jne
or
push
mov
sbb
jbe
out
mov
into
data16
inc
cmp
call
fwait
add
xchg
movsl
jnp
push
mul
xchg
mov
cltd
outsl
fs
jmp
xchg
mov
les
jle
push
push
pop
popa
cmpsb
into
mov
gs
mov
jns
pop
out
stos
mov
enter
mov
mov
mov
jmp
push
add
pop
cs
adc
or
lcall
es
out
cmpsl
jge
mov
insl
xor
rcll
add
cld
pop
out
cli
inc
cli
jae
jae
pop
cltd
nop
inc
jne
dec
into
je
dec
push
dec
es
mov
imull
ret
loope
jp
stos
jl
ljmp
lds
pop
outsl
into
sub
stc
mov
jnp
mov
je
jae
sbb
mov
rcl
xor
std
xchg
lret
mov
cltd
std
aas
sbb
lock
fbstp
inc
test
and
mov
pop
or
dec
or
sbb
xor
jecxz
mov
lea
sti
stc
pushf
aam
loop
test
jg
xchg
or
pop
in
pop
xchg
xor
sbb
ret
rcll
push
mov
mov
leave
inc
ljmp
daa
into
jnp
fistl
out
xor
xchg
arpl
ret
xor
std
sbb
dec
ret
imul
add
pop
xchg
out
int3
cmp
imul
or
xchg
push
test
mov
jne
add
cmpsb
xchg
mov
fwait
mov
daa
adc
enter
mov
testl
and
add
push
add
faddl
jle
jge
inc
adc
fimuls
mov
mov
cmp
push
xchg
mov
leave
daa
ret
jl
mov
enter
jae
jg
jle
xchg
push
jo
or
pop
xchg
cltd
lcall
fidivrs
sbb
das
fiaddl
into
pushf
pop
popl
es
add
movsb
jae
loop
vmovlps
in
arpl
inc
je
adc
or
or
dec
mov
xchg
int3
lods
andl
lea
bound
ljmp
add
sti
stc
lea
jne
fstl
inc
add
fldcw
inc
shrl
das
ret
mov
xchg
in
test
rorl
pushf
dec
or
cwtl
cmovl
push
push
adc
inc
clc
and
dec
dec
stc
jnp
adc
sub
and
mov
leave
pop
pop
ret
inc
mov
insl
in
and
or
pop
mov
addr16
pop
sub
insb
aaa
lret
aaa
sarb
add
insl
in
fwait
add
and
xchg
test
xor
inc
push
sbb
sti
dec
jl
dec
imul
push
xchg
cltd
dec
ds
jmp
and
or
popa
popf
loopne
sti
out
into
sar
popf
fidivrl
mov
fisttpll
jns
rcl
dec
inc
pop
fstps
dec
clc
sub
paddq
insb
addr16
out
cmp
jnp
xor
mov
jbe
cmpsl
std
adc
pop
jo
dec
push
mov
dec
cmp
out
jns
mov
popa
fwait
push
mov
dec
pusha
sub
or
sub
or
leave
lcall
loop
pop
js
lods
mov
ds
dec
arpl
push
inc
in
je
adc
stos
call
sub
fidivrs
shlb
mov
adc
ja
mov
inc
xchg
aas
mov
adc
mov
inc
out
subb
jge
scas
push
inc
adc
je
mov
mov
xor
push
stc
jbe
push
pop
inc
test
sbb
cmp
mov
xor
inc
dec
xlat
lahf
cmp
mov
data16
mov
mov
push
push
xorl
cmp
lret
adc
jmp
les
mov
imull
sub
inc
mov
add
rcl
or
xor
sbb
xor
out
jl
mov
sbb
sbb
into
int
sbb
fsubrs
repz
movsl
pop
cmp
repz
mov
sbb
dec
das
push
mov
aad
mov
push
mov
add
adcb
shr
mov
sub
xor
sub
imul
fnstsw
inc
mov
sbb
mov
cmc
imul
push
pop
repnz
out
xlat
add
rcr
mov
push
jg
nop
enter
add
das
and
es
mov
cwtl
test
pop
mov
cmp
mov
and
push
sub
out
mov
or
pop
loopne
or
outsl
insl
add
cmp
mov
push
shll
sbb
daa
mov
pop
pop
arpl
sarb
jmp
pop
mov
dec
aas
stos
adc
pop
insl
mov
dec
lock
daa
lock
rcrb
cmp
and
mov
sbb
test
sbb
lahf
in
movsb
mov
std
jecxz
loopne
sbb
xchg
push
jbe
test
pusha
aam
push
inc
xchg
xchg
lds
dec
lahf
fildll
nop
insb
pop
std
ja
ret
loopne
repz
fcoml
cmp
mov
scas
addl
pop
dec
lock
sub
cwtl
add
cmpsb
mov
fstpl
ror
scas
jne
mov
sub
mov
mov
xor
imul
outsb
jno
cltd
or
and
push
fcmovu
inc
lock
mov
lret
cmp
call
and
sbb
sbb
dec
mov
clc
aad
xor
mov
pop
lds
popa
js
sub
xchg
and
fistps
or
cmp
std
enter
push
nop
ja
inc
push
push
inc
push
stos
popa
lock
es
xor
mov
jp
into
or
mov
mov
stos
mov
hlt
xchg
das
repz
mov
xor
xchg
fwait
xchg
jle
bound
dec
add
lods
xor
adc
cltd
push
js
cmp
clc
cwtl
push
cmp
mov
ss
lock
inc
inc
or
lods
and
and
add
ret
mov
and
xchg
popf
or
pop
sbb
mov
mov
mov
mov
xor
mov
mov
and
imul
pop
out
inc
mov
add
mov
ret
pop
and
jmp
xchg
stc
jmp
rcr
and
mov
lds
xor
sub
cli
in
and
cmp
xchg
push
jns
mov
dec
mov
or
xchg
and
jmp
adc
cmpsl
cmpsb
pop
mov
mov
std
mov
ret
sub
dec
lcall
mov
mov
xor
dec
gs
scas
xor
mov
shrl
cmpsl
std
pop
mov
push
inc
mov
popl
std
frstpm(287
in
mov
ret
xchg
das
andl
add
lds
adc
stos
xlat
jle
add
pop
mov
stos
fidivrl
mov
or
dec
xchg
mov
dec
mov
jns
mov
popf
scas
or
ljmp
cltd
pop
clc
es
push
cmc
js,pn
mov
sub
scas
pop
cwtl
pmullw
mov
cs
call
icebp
out
in
xorl
into
in
add
jnp
push
or
idivb
adc
pop
adc
sub
je
and
fcomi
dec
mov
dec
adc
jmp
mov
push
fnsave
xor
aad
adc
mov
mov
nop
iret
shll
push
ds
pop
out
pop
mov
ja
xorl
nop
mov
sub
mov
jb
mov
pop
adc
add
movsb
push
repz
xchg
leave
ja
inc
sbb
imul
cmp
push
pop
icebp
in
pop
test
aad
outsb
cmpsb
in
inc
mov
push
ljmp
pop
inc
mov
cmovns
mov
dec
lret
xor
int3
push
aas
pusha
cmp
and
or
test
fcoms
lods
mov
mov
cwtl
inc
and
scas
lahf
pop
or
movsb
mov
mov
adc
pop
comiss
mov
out
mov
stos
pop
insl
pop
cmp
jge
xchg
std
push
mov
dec
jl
inc
mov
aad
mov
fnstenv
mov
aad
fdiv
xor
push
jl
cs
js
dec
jp
test
ljmp
data16
inc
sbbl
or
inc
in
into
lods
popa
mov
subb
fisttpl
imulb
sarl
and
and
in
fs
movsl
fadds
in
les
leave
xchg
nop
sbb
jp
ss
or
push
les
rorb
xchg
and
and
insl
cmp
adc
popl
jnp
push
loop
cld
popa
dec
fwait
jmp
adcb
xchg
or
shlb
lret
xchg
sahf
mov
mov
insb
in
loopne
sahf
and
lret
or
pop
les
das
xchg
faddl
popl
fisttps
cmc
outsl
jnp
and
int3
sbb
lcall
ja
popf
cltd
and
call
in
mov
pop
jp
jno
pushf
mov
les
dec
push
mov
mov
mov
outsb
out
jb
push
out
out
pop
push
sbb
add
push
dec
push
aam
mov
rorl
sahf
jle
rorl
call
sbb
loope
xchg
xchg
inc
int
fdivrs
sarl
jp
cltd
pop
lods
inc
loopne
cmpsb
sub
push
je
subl
out
cmp
dec
inc
dec
sub
cmpl
inc
lods
mov
push
sahf
mov
xor
sbb
xor
nop
mov
stc
ds
jnp
and
outsb
xor
inc
jg
mov
fcoml
jns
outsl
outsb
pushf
in
cltd
sub
or
ret
cmp
scas
cli
push
mov
les
dec
pop
jge
in
hlt
daa
test
add
sbb
decl
xor
push
mov
xchg
and
lds
fisubl
ret
out
mov
test
fidivrl
and
dec
jmp
lods
out
adc
xchg
mov
sub
in
cli
mov
cmp
mov
test
cltd
clc
sti
jge
pop
pop
adc
into
jb
push
mov
push
xchg
mov
inc
push
lret
inc
sub
movsl
out
jp
jmp
jne
jl
sbb
jle
in
test
mov
xlat
flds
xchg
test
push
push
cmp
stos
decb
repnz
push
arpl
fdivl
add
push
add
inc
in
out
jne
fs
in
fildll
jg
mov
push
lods
stc
popa
mov
or
add
inc
mov
lock
mov
addr16
jmp
sbb
loopne
push
xor
pop
pop
push
repnz
and
or
fstp
jo
xchg
xchg
aas
sbb
add
les
pop
pop
xchg
js
int
aad
repz
movsl
sbb
jo
xor
mov
ficompl
sbb
adc
rcll
fs
movsl
inc
je
fistpl
stc
xor
into
loop
pop
dec
aam
jp
gs
pop
xchg
adc
sbb
aam
xchg
insb
cwtl
js
mov
imul
pop
inc
jmp
pop
xchg
enter
scas
dec
mov
xchg
or
xchg
sbb
repnz
insb
mov
cmp
imul
cmp
inc
xor
push
push
loope
nop
push
cmp
addr16
jns
add
sub
shll
push
out
push
sbb
aad
cmpb
outsb
jb
mov
xchg
xor
mov
jne
jnp
sti
inc
and
pop
fildl
pop
push
in
and
loopne
mov
fcomip
lods
cltd
xor
lea
xchg
xchg
test
clc
pop
aam
loopne
dec
sti
cmp
mov
lods
movsl
push
adc
aas
inc
mov
sbb
cmp
pop
and
pop
inc
repnz
call
jbe
or
testl
mov
sub
and
lock
lcall
loopne
mov
fidivl
pop
ljmp
insl
pop
gs
sbb
repz
xchg
lds
inc
ret
xor
mov
lock
fstpt
pop
xchg
inc
mov
fucomip
repz
mov
test
adc
mov
imul
or
sbb
nop
add
mov
cmp
xor
and
mov
jae
pop
lods
imul
xchg
and
cmp
enter
mov
xor
push
push
lcall
pop
mov
pop
mov
cli
lods
jge
sbb
dec
and
push
inc
movsb
xor
and
dec
mov
xor
rclb
push
mov
nop
notb
push
cmp
pop
shlb
sub
enter
test
int
clc
stc
push
jp
insb
addr16
xor
clc
pop
mov
jne
mov
mov
lcall
inc
pop
imul
sub
xchg
addr16
in
cmp
mov
stos
aaa
popf
cmp
pop
push
mov
cmove
int3
icebp
stc
lods
movl
std
xor
dec
xor
stc
jp
test
cld
call
iret
sti
loopne
or
fistl
xor
xchg
mov
inc
outsl
in
movsb
insb
out
pop
add
sbbb
push
std
lods
adc
je
cwtl
pushf
loop
mov
jl
sub
adc
std
mov
inc
int
scas
test
cs
loopne
adc
mov
and
push
test
sub
roll
nopl
repnz
ficoml
scas
inc
inc
add
dec
cmpsl
xchg
pushf
adc
inc
out
mov
fmulp
gs
ficompl
dec
xor
aam
aas
jge
flds
adc
pushf
mov
push
insb
fcoms
add
push
fwait
lock
call
push
mov
pop
pop
xchg
addr16
dec
mov
fisubrl
add
mov
fs
pop
jbe
push
test
jmp
mov
outsb
pusha
mov
cmc
jmp
inc
mov
or
jae
pop
lock
push
aad
push
and
aaa
movsb
inc
cli
push
cmpsl
stos
mov
jle
ljmp
adc
jle
scas
inc
sahf
inc
mov
js
mov
shlb
stos
pop
sbb
cmpl
xchg
lods
cmp
pop
test
push
decb
and
outsl
sbb
adc
xchg
sbb
adc
xchg
push
fidivl
add
imull
pushf
add
mov
mov
mov
and
jecxz
pop
inc
test
mov
push
push
push
dec
cmc
lock
fwait
aaa
push
jl
fldl
fdivs
and
rcrb
add
rorb
and
aad
ds
mov
daa
clc
ja
push
js
cmpsl
mov
mov
mov
loopne
sub
xor
pop
sbb
xor
lret
pop
mov
cmp
dec
dec
dec
andb
movsb
dec
jo
cli
fwait
xchg
call
push
into
in
stos
push
loop
push
in
inc
add
ljmp
mov
aaa
out
or
es
loopw
sub
cs
lret
jbe
dec
shl
dec
mov
aaa
fiaddl
scas
enter
fwait
xchg
scas
ds
or
loope
inc
fisubl
les
add
popa
push
mov
std
push
push
xor
add
jge
push
adc
mov
std
mov
push
cs
in
push
inc
stos
outsb
test
es
inc
gs
jge
lods
popa
cs
inc
fistpl
mov
pop
push
lds
scas
jno
jecxz
push
adc
push
ds
out
sub
lock
pop
or
rcrl
mov
pop
daa
aas
out
jecxz
inc
dec
dec
mov
stos
mov
add
out
ja
sahf
add
sbb
or
xchg
stos
js
rol
mov
sahf
mov
push
adc
out
in
mov
cmc
and
push
sbb
jae
imul
sbb
pop
xchg
jno
and
shlb
cmovg
scas
out
jae
cmp
std
movsl
xor
xor
xor
lahf
sbb
cmp
adc
or
into
add
mov
mov
stos
xchg
icebp
lahf
jmp
repnz
out
sub
push
clc
outsb
fsubl
push
push
xor
arpl
add
icebp
add
add
and
sbb
mov
jmp
test
into
test
jg
jg
insb
mov
daa
adc
mov
lcall
cli
pop
sub
and
adc
adc
aas
push
test
jmp
push
add
dec
fildll
sbb
cltd
adc
int
adc
adc
or
scas
jge
outsl
lcall
dec
lock
inc
cltd
cmpsb
das
and
sub
adc
xchg
jmp
jnp
int
imul
jecxz
je
adc
jecxz
push
fs
fisubl
cwtl
in
inc
shll
mov
sbb
jb
es
outsb
psllw
cmp
jo
iret
xchg
repz
lock
mov
out
and
xor
jmp
cli
dec
icebp
lahf
gs
xor
in
lds
push
hlt
adc
cs
outsl
mov
adc
fwait
mov
subl
adc
fwait
scas
filds
inc
mov
mov
rcrl
repnz
jns
inc
xlat
divl
sbb
xchg
add
pop
xor
sbb
mov
arpl
hlt
call
dec
cmp
sti
xor
lods
mov
js
mov
jno
int3
or
dec
jg
aaa
and
xchg
hlt
cmovns
subb
imull
call
dec
insb
xlat
in
and
test
aaa
fadds
mov
mov
mov
xchg
movsl
adc
push
jno
je
xchg
cld
dec
mov
test
in
rcrb
clc
xchg
lods
outsl
mov
ret
daa
aaa
push
mov
lcall
cmp
mov
sub
out
insl
out
lahf
cmpsl
sbb
leave
out
lret
movsb
scas
jns
pop
icebp
ds
cltd
loop
sub
push
nop
data16
outsl
mov
jb
shl
adc
fistl
ret
sub
xchg
jp
add
mov
jmp
push
or
and
ret
gs
inc
pop
bound
mov
out
cvttps2pi
lock
loopne
movsl
in
ret
adc
jg
mov
cmp
xchg
mov
jmp
sub
ss
popf
push
ja
in
flds
sub
stos
jp
mov
jl
inc
orb
inc
aas
mov
push
jecxz
mov
xor
inc
scas
pop
or
rolb
mov
mov
lret
daa
ljmp
add
mov
jns
out
in
sbb
outsl
movsb
sub
jae
dec
pop
adc
push
and
psadbw
jecxz
cli
movsb
pop
mov
lret
push
ja
enter
xor
pop
fsubrs
sub
inc
sbb
push
test
lret
scas
push
mov
ret
enter
fwait
insb
loope
cwtl
xchg
xchg
in
mov
cmp
mov
pop
xlat
mov
pop
push
lret
inc
add
adc
mov
jmp
test
sti
lcall
js
mov
pop
inc
lods
shll
cmc
int3
clc
pop
mov
ss
add
and
dec
shr
pop
mov
sub
push
clc
out
mov
cmpsb
pop
mov
outsb
aas
mov
xor
insb
sbb
into
das
xor
fwait
jl
cmp
push
push
add
or
imul
pop
mul
sbb
lods
add
or
imul
jnp
sar
sti
popf
loop
neg
lahf
lods
rorb
mov
pop
fwait
js
movsb
adc
cmp
add
xor
jge
lods
cmpl
push
xor
movsw
push
inc
ljmp
sub
rclb
xchg
dec
movsl
dec
stos
adc
addl
dec
cltd
pusha
jo
pop
mov
xor
imul
imul
inc
cwtl
dec
add
outsb
push
adcl
pop
cmc
sub
inc
jb
sub
ja
adc
xchg
repz
fwait
push
roll
lahf
or
dec
pop
movsb
enter
mov
lods
mov
orl
adc
mov
pop
inc
cmp
xchg
loop
mov
jbe
in
push
enter
scas
and
call
idiv
add
or
adc
jnp,pt
pop
test
lahf
nop
sahf
aaa
clc
sarl
call
jl
ret
xchg
aam
or
mov
xchg
pop
mov
xchg
ror
pop
iret
jmp
mov
and
mov
or
into
ljmp
push
push
dec
movsb
sbb
mov
pushf
scas
loope
mov
dec
fildll
cmp
dec
scas
mov
loopne
pop
jle
or
sub
call
fs
push
out
push
int3
sbb
aaa
std
shlb
xchg
nop
inc
jbe
and
cmpl
fldcw
mov
jg
aaa
pop
jbe
cli
lods
jp
sbb
push
imul
push
push
das
cwtl
loopne
pop
adc
mov
insl
mov
negb
cmp
pop
cmpb
fmull
sbb
fldt
and
movsl
int
imul
inc
dec
pop
xchg
jb
mov
jecxz
stc
mov
add
cmpsl
xchg
pop
push
das
xor
loopne
in
push
or
xchg
dec
test
and
je
inc
fisubl
push
cmp
out
ja
xchg
cmp
insl
dec
loopne
movsb
ja
fdivs
insb
fcmovnu
aas
in
dec
test
dec
xchg
jne
mov
scas
call
push
popa
stc
test
mov
fcmovb
pop
lret
xor
test
cmpsl
lods
mov
div
shrb
in
sbb
xor
test
dec
repz
push
pop
jecxz
ds
repz
jecxz
sub
rclb
and
inc
sbbb
popf
adc
sub
inc
xor
stos
arpl
dec
adc
cmc
pop
jno
stos
loope
loop
aaa
push
es
orl
lcall
jne
sahf
mov
adcb
hlt
xchg
shlb
fs
gs
push
pop
lcall
push
mov
dec
add
lret
cmp
movsl
arpl
push
dec
js
cmp
sbb
daa
call
aam
cltd
subb
pop
sahf
icebp
inc
pop
mov
add
aad
xchg
pusha
push
ljmp
ficoml
js
sarb
jmp
lods
add
sbb
icebp
mov
shufps
mov
scas
rcrl
je
ljmp
lret
mov
dec
loop
or
orb
gs
lret
sbbb
mov
sub
mov
mov
clc
cmpsl
jp
pop
cwtl
adc
and
add
adc
xchg
dec
dec
xchg
xchg
popa
lret
dec
out
or
inc
in
cmp
sbb
fdivrs
int
into
mov
inc
sbb
ja
psubusb
cwtl
mov
mov
add
xchg
outsl
inc
xor
out
in
sahf
test
or
subb
sub
je
pop
mov
clc
inc
cs
jmp
out
push
arpl
sbb
push
mov
mov
or
insl
leave
loop
lahf
pop
fadd
sub
fcompl
sub
mov
pop
fsubrl
sub
cmp
mov
stc
test
mov
shrb
sahf
xchg
aaa
int
imul
movsl
pushf
popf
ret
add
sub
sub
sbb
pop
divl
adc
jbe
insl
or
int
inc
fidivl
mov
mov
std
lret
sahf
dec
mov
cmp
mov
das
jl
imul
popf
xchg
invd
sbb
sbb
ret
jo
sbb
push
hlt
dec
sti
and
fbstp
pop
lahf
outsb
clc
movsl
mov
push
ss
push
movsb
push
in
xlat
inc
xlat
sub
les
inc
xor
push
or
sbb
inc
xchg
and
push
cmp
jnp
xchg
out
movsb
inc
aaa
into
bound
lret
pusha
xor
nop
adc
adc
fistpl
mov
inc
push
push
out
dec
lock
addb
sbb
cmp
mov
adc
or
mov
stos
inc
rolb
iret
sbb
xchg
outsl
xor
cwtl
pushf
xor
xchg
out
hlt
aam
push
sub
aas
mov
jno
shlb
jmp
jl
dec
daa
insb
into
out
lea
sbb
jle
stos
incl
pushf
aad
leave
mov
push
mov
mov
sti
pushf
jecxz
dec
mov
hlt
lret
sbb
lahf
push
xor
mov
shlb
dec
xchg
jge
mov
jae
int3
adc
repnz
imul
pop
cltd
adc
lcall
cmp
adcl
inc
repz
or
jno
leave
cltd
xchg
test
mov
xchg
sahf
mov
fdivrl
cwtl
inc
push
enter
test
inc
push
addl
clc
nop
adc
dec
test
ljmp
pcmpeqw
push
fistps
sbb
pop
xor
int
cmp
mov
push
jne
sub
or
dec
mov
ret
sbb
int3
xor
fdivrs
daa
jo
js
dec
adc
cmp
clc
sbb
mov
push
add
sbb
jno
mulb
fmull
pop
sarl
call
scas
movsb
mov
mov
mov
pop
cmc
inc
xchg
mov
cwtl
and
sub
pop
je
ds
xor
sub
je
dec
aaa
sbb
inc
mov
mov
in
loop
pop
mov
pop
call
inc
int3
cs
pop
jp
xchg
lock
lock
pop
xchg
pop
cltd
in
xchg
mov
lods
icebp
clc
jmp
out
add
pop
pop
xchg
fwait
sub
ja
inc
in
fwait
push
jl
adc
mov
icebp
jmp
stos
decl
and
insl
in
and
xchg
pushf
lock
pop
and
xchg
daa
shlb
daa
jns
push
xchg
mov
xchg
inc
xchg
inc
jle
outsb
enter
xchg
sub
push
sbb
ficoml
fwait
sahf
rclb
dec
inc
cmp
or
test
sub
cmp
mov
sub
mov
push
pop
push
jno
jg
mov
les
repz
call
lret
enter
jbe
adc
loope
pop
sub
mov
cwtl
sti
xchg
std
dec
sbb
aam
cmpps
loop
sbb
adc
or
or
pop
mov
mov
arpl
rorb
dec
and
adc
add
mov
daa
rolb
loope
ss
sub
jno
jmp
nop
int3
inc
in
sub
les
aam
and
cmp
sbb
lcall
scas
add
std
xchg
mov
out
ret
cli
mov
imul
push
jecxz
in
subb
jae
test
push
testb
xchg
repnz
arpl
adcl
and
aas
adc
push
pop
mov
pop
xchg
lock
inc
repnz
std
les
mov
jne
loope
int3
sub
cltd
cmpsb
dec
loop
fsubrl
repz
cmp
inc
cmpsl
push
mov
sub
dec
jg
pop
push
mov
cltd
negb
ret
fst
xor
mov
mov
aad
pop
cs
jg
cmpsb
insb
sub
loopne
sub
xor
dec
mov
lahf
inc
test
xor
or
mov
fwait
mov
out
loopne
loop
sub
repnz
and
or
enter
sub
sub
inc
xchg
jge
enter
push
fwait
push
sub
and
mov
xor
orb
cwtl
sbb
jg
inc
adc
pop
sub
mov
es
pop
pop
mov
mov
and
leave
dec
mov
jecxz
out
inc
fnstsw
sbb
lds
mov
imul
int
inc
aaa
shll
mov
push
cmpsl
scas
dec
clc
aas
or
adc
add
mov
in
inc
push
sbb
mov
mov
push
and
xor
or
or
pop
mov
mov
xor
cs
fstp
add
xchg
lahf
and
sbb
fcomip
popf
ret
aam
xor
mov
cmp
cmp
inc
jg
cwtl
sbb
dec
outsl
mov
or
xchg
movl
aaa
out
jmp
xor
aas
pop
cmp
pop
xchg
sub
aas
xor
arpl
jg
cmp
shrl
lea
test
es
push
push
mov
push
lods
jg
mov
pop
mov
jl
in
adc
fisubrs
popa
dec
rclb
leave
out
mov
sarb
push
outsl
add
adc
inc
sbb
iret
mov
mov
add
and
jle
xor
outsl
dec
add
aas
add
cmp
loopne
dec
and
sbb
or
xor
jnp
dec
and
lods
inc
into
pop
cwtl
add
in
ss
pop
cmove
mov
stos
fidivrs
jmp
mov
cmp
stc
cmpsb
scas
lret
mov
aas
add
inc
mov
push
push
inc
dec
rclb
movsb
pop
cwtl
sub
outsl
sbb
lea
das
cld
testb
mov
add
pushf
shlb
jle
adc
stos
xchg
rcrl
lret
shl
pushf
xor
rolb
das
in
lahf
xor
jno
test
cmpsl
jbe
jae
dec
fbstp
pop
cwtl
xor
mov
and
insb
in
push
add
fcomp
cld
in
add
mov
push
lahf
dec
add
loop
sbb
pop
jbe
xchg
mov
iret
filds
xchg
sbb
adc
sbb
dec
mov
ficoms
fcmovnbe
dec
sbb
ljmp
and
mov
push
imul
lret
sub
rcll
gs
mov
push
shll
lcall
mov
aaa
das
call
jo
dec
jecxz
mov
adc
add
stos
pusha
mov
mov
xchg
inc
sub
rclb
insb
stos
movsb
pop
sbbb
xchg
xor
mov
aas
fcomi
out
cmp
cmp
jmp
leave
mov
aaa
jg
or
dec
ljmp
leave
pop
mov
cmp
or
dec
repz
testb
bound
mov
js
pushf
sbb
pop
or
push
lcall
mov
jne
popf
mov
int3
xor
and
mov
xor
mov
jmp
sbb
int3
in
add
xchg
out
faddl
add
mov
or
or
insb
in
test
outsb
fldenv
add
aam
xchg
js
ret
movsb
rorl
das
mov
inc
push
sub
sub
xchg
cmp
dec
mov
mov
loop
jno
les
xorb
mov
enter
inc
dec
fiadds
rol
popf
in
mov
jl
push
cmp
lock
je
movsb
addr16
bound
xchg
dec
aam
xorb
repz
or
adc
andb
jbe
rcll
call
push
mov
and
sarl
fisubs
cs
cs
sarl
je
sbb
je
xchg
jno
sbb
xchg
leave
insb
call
fstl
mov
mov
mov
cmpsl
sub
sub
call
repnz
sbb
or
iret
adc
adc
cs
pop
mov
xor
mov
out
test
and
adc
pop
push
in
gs
pop
iret
rol
aas
mov
fstp
sbb
ret
xor
test
cmpsl
cmp
mov
inc
cmp
lret
xor
jae
data16
push
sub
and
aam
mov
jge
lret
lods
jno
popa
xlat
or
scas
in
gs
in
cmp
fs
std
mov
xor
mov
out
call
imul
jle
jle
inc
lds
mov
fsubrs
sbb
insl
push
sahf
pop
in
xorl
scas
and
pop
jecxz
push
lcall
and
lret
jge
insl
int3
pop
sub
outsl
fs
mov
lods
mov
lods
out
das
mov
adc
fldt
xchg
or
je
test
mov
mov
jp
push
xchg
sub
add
or
mulb
dec
xor
movsb
push
shlb
sbb
jmp
clc
mov
mov
mul
flds
in
cs
lea
cmpsb
div
xor
push
mov
cmp
jbe
je
mov
repnz
mov
stos
xchg
out
es
dec
addl
leave
xor
dec
fdivrl
or
ss
fdivrl
ds
and
sbb
repz
mov
mov
pushf
mov
sahf
push
int3
or
pop
ja
and
sti
mov
mov
adc
pop
mov
fidivl
pop
mov
pop
pop
cmp
ljmp
stos
xorb
or
cli
or
push
push
push
xor
and
in
adc
fwait
jo
sbb
sub
jnp
popa
xor
push
mov
mov
pop
add
ds
lods
add
sub
push
xchg
xchg
je
enter
stc
push
iret
mov
inc
int3
outsb
push
sub
adc
adc
rcll
sahf
xor
pop
pop
insl
sub
xchg
imul
xchg
and
lcall
popf
adc
movsl
inc
lret
and
adc
enter
out
sahf
push
pop
xor
js
cmp
jmp
lods
and
int3
mov
cmp
mov
push
inc
roll
hlt
adc
jbe
dec
das
sub
fcom
divb
cmc
in
fldl
imul
ds
icebp
rol
repz
popa
mov
xchg
add
push
push
push
fnstsw
jno
mov
cmc
mov
sarl
cmp
push
lret
pop
nop
jle
xchg
adc
aaa
push
les
mov
mov
cmpsl
loopne
xchg
subb
fmulp
pop
mov
inc
inc
sbb
aaa
aad
stc
mov
popa
ds
fdivrl
push
bound
jle
mov
arpl
push
jae
fwait
sbb
insb
sub
insb
lgs
cwtl
out
js
scas
jmp
into
and
xchg
jae
add
mov
xor
lcall
cmp
mov
lret
lea
jp
sub
sub
inc
mov
jae
jmp
mov
dec
xchg
ficoms
enter
mov
or
and
cwtl
addr16
daa
pop
scas
out
jo
aaa
sbb
call
mov
adc
jo
and
hlt
push
ficoml
push
aam
fildll
fcom
xor
jno,pt
add
or
mov
int3
stc
adc
mov
test
push
dec
cltd
xchg
pop
inc
push
fldt
int
cmpsl
adc
lahf
push
stc
inc
cmp
inc
aam
nop
adc
stos
sub
mov
push
es
and
dec
jb
mov
and
fildll
xor
or
rcrl
add
cltd
insb
inc
mov
push
jmp
push
mov
lock
xor
cs
into
and
push
sbb
pop
mov
popf
cmpsb
ja
sub
adc
ljmp
cmp
inc
fmul
ja
or
jo
test
mov
add
sbb
push
call
cmpsl
xor
pop
sub
adc
xor
inc
pusha
mov
lock
cmp
or
sub
in
dec
mov
lock
int3
scas
jns
test
clc
cmp
idivb
fisttps
clc
scas
scas
sub
sti
insb
mov
mov
js
stc
xchg
adc
xor
pushf
clc
mov
es
sub
xchg
hlt
add
cmc
dec
addl
addr16
dec
test
jp
fldcw
shlb
cs
push
test
xchg
int
imulb
repz
and
adc
ret
jl
orb
add
cvtpi2ps
add
mov
adc
xor
add
cmp
inc
or
xchg
outsb
test
xor
xchg
mov
scas
stos
imul
stos
dec
cltd
adc
out
jbe
mov
inc
add
movsb
inc
mov
pop
scas
and
cmc
and
ja
mov
lahf
pusha
ret
insl
outsb
and
imul
inc
push
jl
pop
or
dec
xor
and
scas
aam
pop
xor
push
sbb
add
fnstsw
dec
jle
mov
jne
mov
outsb
mov
int3
push
cmp
outsb
pop
cmpsb
cli
call
out
ljmp
and
lret
jmp
mov
mov
sahf
pcmpgtw
jns
subl
out
lds
lods
ljmp
pushf
fptan
pop
pop
negl
or
sub
fcompl
in
iret
negb
jp
inc
outsb
and
loope,pn
stos
popf
ds
xchg
pop
mov
push
sbb
icebp
nop
in
mov
ret
mov
cmpsl
sarl
mov
pop
test
inc
adcb
sarl
adc
lds
cmp
xor
outsl
cmpsl
std
jb
sahf
jb
test
call
pop
in
aad
sbb
ror
jae
lea
lcall
mov
push
mov
out
clc
jne
fs
dec
lock
lret
inc
fiaddl
lcall
cmp
cs
sbb
add
les
mov
andl
data16
mov
rcrb
fwait
jnp
and
js
adc
stos
fisubrs
inc
mov
inc
adc
push
aad
xor
inc
adc
inc
cmp
insl
rol
cmp
bound
sub
push
shlb
ds
push
js
jmp
mov
or
out
sub
aam
xchg
add
sbb
test
mov
pop
inc
popf
movsb
call
enter
pop
pop
jmp
or
sbb
inc
mov
out
dec
int3
mov
sub
sti
or
mov
xchg
pop
and
in
sub
imul
inc
ljmp
test
cmp
gs
add
mov
add
xchg
addr16
cwtl
loop
outsb
hlt
xor
in
mov
test
inc
inc
js
divb
add
repnz
inc
mov
cmpb
lret
xorb
incb
mov
mov
push
fdivp
not
mov
mov
cmp
call
xchg
xor
dec
je
sub
shll
and
and
imul
out
lcall
repz
in
jb,pn
mov
pop
enter
and
dec
rclb
mov
daa
mov
or
and
cld
xorl
inc
leave
jecxz
sbb
inc
in
outsl
repz
xor
imul
in
xchg
push
add
fwait
inc
jp
push
ja
sub
and
das
loopne
mov
leave
scas
push
or
jns
push
dec
test
ss
out
or
mov
xor
and
lcall
inc
or
nop
inc
dec
inc
push
xchg
lret
inc
mov
scas
addr16
mov
add
lds
aas
into
add
aas
mov
std
loop
ficoml
ss
lret
in
out
pop
into
mov
lret
aam
enter
mov
test
jnp
das
add
or
xor
or
push
inc
mov
mov
cld
arpl
ljmp
dec
aam
je
lods
jns
aaa
inc
pop
add
out
popf
lcall
testl
push
movsl
scas
fldenv
jecxz
popf
lret
add
aam
adc
xchg
dec
imul
and
pop
ja
mov
sbb
cmp
and
pushl
xor
shr
push
xor
jp
repnz
mov
and
inc
out
mov
out
ja
pushf
movsl
inc
mov
pop
sbb
adc
aam
lock
mov
jp
dec
fmuls
cmp
xor
adc
shll
lods
xor
repnz
pop
jge
xor
pop
out
shll
inc
test
dec
std
insb
mov
adc
iret
and
in
das
and
mov
subb
push
insb
fs
leave
mov
inc
push
and
lods
sbb
cmp
mov
rcll
dec
xchg
xchg
inc
stc
fucomi
dec
clc
inc
int3
or
dec
sahf
mov
and
and
ds
fimuls
mov
clc
shrb
hlt
push
or
jg
daa
pop
add
stos
sbb
outsl
push
int3
out
test
push
movsb
dec
pop
lods
mov
stc
mov
popa
sbb
mov
inc
inc
je
push
jmp
mov
aam
xlat
fwait
mov
das
insb
fs
loop
repnz
and
ret
and
rorl
mov
movsl
aas
in
xor
lret
mov
cmp
popa
mov
in
rorb
jne
clc
cmp
out
lcall
mov
xchg
in
unpcklps
adc
dec
frstor
mov
ljmp
int3
je
je
icebp
ror
mov
je
pop
sbb
enter
xchg
or
push
ljmp
out
jb
mov
or
insl
lahf
mov
pop
and
mov
les
mov
cmp
cmp
pop
mov
pop
or
pop
push
in
ret
iret
xchg
cmpsb
out
adcb
xor
dec
leave
rcll
mov
fcomip
push
adc
adc
fs
pushf
hlt
out
inc
out
jecxz
in
int
pop
pop
pop
js
pop
xchg
popf
fadd
aaa
pop
mov
loope
mov
mov
shlb
or
dec
cmp
pusha
and
pop
outsb
cltd
jno
mov
lahf
outsl
std
dec
jne
lret
arpl
cmp
daa
and
sub
cs
push
sub
jbe
mov
pop
shlb
sub
mov
mov
xlat
sub
rolb
add
xor
and
lcall
push
in
imul
ja
call
sub
in
out
push
pop
fsubrl
push
mov
xor
mov
movsb
adc
cli
ret
sbb
pusha
movsb
fisttpll
jb
jno
adcb
lea
or
adc
out
addr16
adc
iret
mov
iret
xlat
xchg
mov
mov
adc
push
add
xor
arpl
jne
in
inc
inc
fcompl
mov
jae
fldcw
stos
iret
xor
scas
arpl
loop
es
cmpsb
push
cmp
or
addr16
push
jns
mov
cltd
hlt
jne
cwtl
inc
icebp
ljmp
mov
adc
loop
xchg
arpl
sub
jns
sarl
or
xor
jp
addb
rorl
fisttpl
sbb
adc
and
push
jp
enter
daa
xchg
loop
das
pop
jge
lret
lods
pop
add
cmp
sbb
shrl
iret
jnp
push
xor
stc
adc
jp
and
inc
aam
cmp
test
orl
fidivrs
cmpsl
mov
fistpl
stos
aas
sarl
jge
test
sbb
and
mov
push
pop
inc
pusha
xlat
cmp
int
movsl
add
outsl
stos
cmp
movsl
jns
mov
movsb
scas
cld
push
push
mov
stos
xchg
stos
gs
lea
iret
shll
out
sbb
cmp
and
stc
loope
shrb
push
sub
sbb
add
and
lahf
add
ss
sbb
std
inc
push
mov
loopne
inc
inc
leave
xchg
jne
cli
and
xor
lret
sti
inc
pusha
xor
out
ret
sti
pop
jmp
jg
push
or
loope
mov
xor
jnp
movsb
sbb
add
push
roll
xchg
add
stc
push
nop
add
and
mov
push
std
and
fisttps
xor
push
sbb
call
inc
dec
scas
pop
jne
sbb
inc
inc
sarl
out
sbb
pop
rcrl
or
movsl
mov
les
jmp
jno
adc
sbb
imul
sbb
jae
stc
xor
lods
push
lds
add
dec
cmp
mov
adc
and
cltd
in
cmp
mov
sbb
pop
sti
mov
push
lods
push
icebp
shll
fsubl
mov
jnp
adc
mov
test
mov
xchg
mov
inc
mov
nop
out
jbe
inc
mov
test
popa
bswap
add
pusha
mov
pop
jmp
rcrl
jg
dec
call
movsl
rol
mov
ret
sub
repnz
sarb
insb
xor
mov
dec
jns
stos
ljmp
mov
sbb
xchg
mov
sbb
push
data16
xlat
mov
mov
mov
call
pushf
fs
push
inc
hlt
xchg
jg
xor
test
push
lea
movsl
cmpsb
jecxz
sbb
inc
pop
not
ret
or
xlat
cmp
dec
insl
add
mov
sub
mov
xor
ret
in
les
pop
push
sarl
inc
xor
stos
pop
push
rorb
mov
push
dec
inc
push
repz
aas
test
icebp
ja
shlb
mull
or
lret
shll
and
or
jle
mov
push
les
xchg
jge
xor
jmp
popl
mov
push
es
adc
jbe
aaa
insl
pop
lock
xchg
push
call
jns
ret
pop
and
sbb
pop
push
xchg
dec
insl
es
ret
dec
mov
dec
jecxz
test
mov
lret
daa
lea
icebp
mov
jo
daa
stc
lcall
hlt
ret
stos
push
inc
int
jb
das
aas
push
movsb
xor
push
or
mov
cli
cltd
pop
out
movsb
lods
pop
pushf
subb
inc
andl
hlt
shl
adc
fsubr
mov
mov
mov
ss
jmp
push
mov
adc
fildl
mov
mov
xchg
rcrb
fsubr
lds
mov
push
pop
rolb
sbb
mov
stos
mov
push
jmp
scas
mov
lods
inc
pop
dec
test
pop
pop
ret
xor
sub
outsb
mov
and
insb
xchg
and
out
notl
insb
mov
xchg
sbb
orl
cltd
pusha
lahf
or
jns
dec
into
fcom
inc
sbb
mov
nop
cs
out
loop
inc
xchg
pop
mov
idivl
test
push
cmp
mov
or
pusha
jnp
pop
outsl
sbb
sub
pusha
jns
cmp
xchg
or
cli
pop
andl
xchg
imul
cmp
imul
jmp
push
int
pop
addr16
dec
sti
scas
xor
jbe
roll
popf
mov
es
adc
push
lahf
in
sub
or
fwait
push
ja
jp
jp
inc
setae
in
jno
sbb
push
loopne
mov
and
aam
sub
add
lcall
mov
loope
mov
lods
mov
push
xor
fnstcw
mov
insl
lret
push
fstl
jo
cmp
xchg
xlat
cli
iret
fimuls
or
arpl
pop
add
decb
cld
fcoms
pop
ds
lock
xchg
dec
push
in
xchg
aas
movsl
outsl
mov
orb
xchg
adc
pop
mov
xor
xchg
ret
sub
sbb
sahf
mov
jmp
pop
push
cmp
sbb
rclb
pop
daa
test
jle
pop
pop
xchg
lds
push
movsl
pop
sub
test
in
push
jns
pop
dec
adc
mull
push
pushf
das
insb
push
loope
fwait
dec
jp
inc
add
push
xor
dec
shl
cmp
int3
cltd
aad
out
and
lea
adc
sub
pop
lcall
xor
outsl
mov
mov
mov
pushl
jmp
sarb
cmc
icebp
adcl
repnz
leave
dec
mov
fdivrl
outsl
js
or
xchg
rcr
outsb
daa
and
inc
jne
jbe
xchg
pop
cmp
ret
fldt
scas
out
out
mov
and
and
js
sbb
sahf
test
sub
mov
mov
cs
jecxz
cltd
xor
mov
in
icebp
add
pop
or
pusha
or
inc
ss
std
loopne
sahf
in
and
rcll
hlt
jb
lods
dec
scas
xchg
mov
xlat
xchg
jo
mov
pop
or
movsb
mov
push
fimuls
jb
outsb
pushw
inc
mov
mov
frstor
outsl
jg
inc
jns
lods
fistpll
arpl
xchg
popa
fimull
test
lahf
fs
inc
push
jge
lahf
push
mov
rolb
call
sbb
inc
mov
mov
xchg
inc
shrl
xchg
add
addr16
sub
cmp
jno
pop
mov
mov
mulb
cs
flds
adc
bound
test
fidivrl
adc
lea
sarb
sub
call
cmp
imul
xorl
cmp
xor
xor
fs
ret
cmp
inc
loopne
add
mov
pushf
daa
lret
mov
sub
dec
mov
shlb
insb
mov
in
fistpl
cmc
iret
movsl
cmp
rol
mov
lret
jb
mov
stc
inc
in
xchg
add
dec
jno
lahf
or
cmp
or
pop
xor
jle
bound
mov
aam
xchg
cwtl
sub
add
inc
sbb
aam
sub
mul
or
ja
jecxz
mov
jg
lods
outsl
cmp
cmp
inc
push
sbb
aaa
lock
mov
cltd
xchg
pop
pusha
or
pop
jle
into
inc
imul
dec
jle
mov
or
in
jg
push
push
scas
out
cmp
aad
xchg
popa
jnp
push
test
jmp
sti
and
dec
fs
xor
and
add
push
or
fwait
aas
mov
sub
stc
fs
inc
enter
push
pop
in
sub
into
stc
addr16
cmc
fiaddl
addr16
mov
or
xor
test
jmp
leave
data16
inc
repnz
add
sub
ret
mov
dec
fldl
mov
jg
jmp
test
inc
pop
call
in
outsb
inc
sub
call
ret
and
mov
loop
aas
push
int3
mov
sahf
and
lcall
es
nop
adc
and
inc
bound
push
aam
popf
cmp
dec
add
push
adc
ret
mov
scas
pop
and
sbb
push
mov
pop
movsb
inc
adc
jae
sbb
pop
insb
xor
stos
pop
scas
jmp
mov
mov
nop
arpl
hlt
clc
cmp
lret
mov
call
sub
or
xor
sbb
inc
aam
adc
mov
inc
or
mov
cmc
lods
dec
sbb
push
pop
in
mov
loopne
inc
and
and
lea
outsl
jle
jbe
dec
into
jne
hlt
xchg
lcallw
pop
add
aaa
mov
adcb
pop
stos
hlt
inc
dec
push
jbe
data16
xor
and
je
cmp
push
pop
xchg
dec
sub
pop
icebp
push
mov
arpl
bound
and
ljmp
fisubrs
ljmp
xlat
mov
aam
icebp
cmp
mov
sbb
mov
rcr
bound
xor
mov
fs
mov
test
fiadds
push
in
dec
cmp
xor
fists
or
fcmovnu
or
in
fisubrs
clc
mov
pushf
or
hlt
fwait
mov
test
dec
cltd
xchg
lds
add
lea
out
pop
sub
sub
bound
fisttpll
cmp
mov
shrb
sub
adc
and
popa
fcoms
sahf
daa
test
jnp
lcall
imul
dec
add
test
dec
mov
cld
xchg
lock
or
lcall
mov
or
pusha
pusha
fmulp
cmpsb
xor
incb
in
mov
cmpsb
imul
mov
out
xor
push
adc
push
daa
iret
lea
scas
mov
cmp
push
imul
xchg
data16
rcr
sbb
sarb
dec
jbe
xchg
add
sbb
pop
mov
clc
xor
cmpsb
xchg
out
cmp
mov
stos
rcll
push
adc
fiadds
je
scas
inc
lret
fnstenv
lds
jns
mov
maskmovq
imull
jg
in
jmp
dec
dec
fildll
cmpl
ficompl
lock
add
int3
test
jns
loopne
stos
hlt
mov
or
stos
add
testb
xor
jmp
negb
jmp
dec
iret
sti
mov
scas
mov
xchg
leave
call
mov
jnp
call
mov
iret
sub
push
sub
push
insb
icebp
outsb
movsb
pusha
lret
sbb
xchg
enter
mov
jnp
sbb
fstpt
fcmovnbe
sarl
inc
add
popa
and
cld
fwait
mov
das
push
insl
sbb
mov
cmp
lds
pop
sbb
adc
cwtl
fildll
adc
jge
leave
dec
cld
adc
cmp
dec
movsl
std
test
pop
clc
fsubl
es
adc
out
aad
sar
in
in
jns
in
fistps
cmp
cwtl
ret
cmp
cmp
mov
int3
add
jb
xchg
cmpsl
icebp
sub
roll
subl
je
jl
out
lahf
cmpsl
lea
cwtl
pop
rcrl
pop
pushf
lock
push
je
mov
mov
loopne
sub
pop
enter
mov
sub
push
and
fs
pop
data16
push
push
scas
test
enter
mov
push
lret
cmp
adc
xor
lahf
cmp
inc
or
or
rorl
fs
mov
into
loopne
ljmp
inc
aaa
ja
data16
ficoml
loop
mov
cwtl
mov
int
or
mov
test
pusha
mov
mov
addr16
in
shll
cltd
mov
and
fldcw
push
sub
add
sub
test
push
jge
je
enter
subb
mov
push
mov
lret
repz
fidivs
or
mov
or
cli
fildl
push
mov
repz
push
xchg
lock
sbb
aaa
dec
cmpsl
cmc
inc
mov
sbb
lahf
add
dec
popf
mov
cmp
or
jg
in
into
mov
repnz
into
fs
mov
mov
cli
fcmovne
je
pop
inc
add
lock
fistl
and
pop
push
cwtl
cmpl
adc
mov
xchg
jmp
out
or
lret
adc
cmp
movsl
xor
mov
stos
adc
jecxz
orl
cli
insl
ljmp
sub
shlb
dec
xor
push
fwait
pop
inc
movsl
sbb
cli
or
aas
aas
out
outsb
xor
jb
xor
fistl
in
sbb
jmp
out
xchg
inc
pop
test
shlb
add
pop
jg,pt
xchg
push
call
jbe
loopne
xchg
test
jle
and
xchg
cmc
jp
dec
dec
std
jg
pop
jmp
jp
insb
adc
dec
leave
notb
sti
nop
xor
or
cmp
je
cli
lahf
pop
and
pushf
jge
cmp
test
xchg
imul
in
clc
pop
adc
pop
lret
inc
xlat
repnz
xchg
rclb
repz
lods
add
xor
mov
sahf
mov
sub
pusha
or
shll
sbb
cmc
cmp
add
sub
xchg
subb
jecxz
mov
ljmp
js
mov
mov
pop
fsts
ret
pop
mov
movsb
iret
mov
cmp
mov
cmpsb
cmpl
fimull
jecxz
add
les
adc
mov
mov
push
ret
mov
out
cmpl
pop
into
jmp
rcrb
dec
sar
and
push
mov
es
sbb
hlt
jp
jno
sbb
fmull
sbb
sbb
fstl
push
sub
movsb
dec
fnstcw
push
outsl
xor
stos
lds
in
adc
out
jb
mov
test
clc
pop
xchg
cmpsl
cmp
xchg
dec
inc
cmpl
mov
push
std
sub
cmpsb
call
ret
pushf
test
fcoml
push
aad
loopne
cmp
and
inc
mov
fdivrl
sbb
or
push
popa
dec
mov
or
clc
nop
inc
jle
lret
out
faddl
ja
sub
sub
pop
and
pop
xchg
jns
shrl
lret
xlat
mov
lods
jae
add
sub
pop
popl
push
mov
inc
lret
sub
lahf
repz
fwait
xchg
cmpsl
mov
cmp
mov
ftst
adc
sub
mov
pop
outsb
dec
into
or
mov
in
mov
stos
xchg
push
stos
adc
xor
mov
rcll
in
push
xchg
nop
loope
push
adc
clc
jns
rcrb
repnz
repnz
push
lea
rolb
in
cmp
cmc
js
and
sbb
ror
out
insl
sub
loope
add
mov
scas
mov
repz
ljmp
test
jecxz
ja
cmc
jge
je
mov
imul
idivl
mov
data16
xrelease
sub
push
test
mov
stos
xchg
lea
adc
cmp
rcl
out
jecxz
push
movsb
subb
in
mov
pop
adcl
jb
test
dec
jne
and
out
cltd
push
mov
shl
and
pushf
sti
aaa
jo
das
sub
shrb
cmp
js
mov
push
xor
loop
mov
inc
jg
lods
test
add
pop
call
jle
shlb
adc
addb
sbb
dec
push
cmp
xor
xlat
inc
mov
into
mov
fidivrl
or
xlat
cwtl
popf
mov
pop
jbe
sub
fidivrs
mov
pop
imul
outsl
xor
fisubl
mov
mov
dec
out
ret
or
insl
add
xchg
push
lcall
push
lods
push
add
fs
inc
sbb
iret
and
pop
mov
pop
test
repz
jle
in
rorl
int
cmp
lcall
adc
leave
ds
hlt
lods
aam
fidivs
arpl
cmp
push
jge
or
and
fcmove
pop
or
ss
mov
mov
das
xchg
xor
out
leave
das
xor
jl
outsb
ljmp
sbb
xchg
cmp
jmp
daa
ds
add
pop
insl
sub
xchg
rolb
mov
xor
sti
call
imull
in
xor
mov
push
fs
mov
sub
mov
lds
push
bound
cmp
sub
inc
stos
lods
dec
in
je
push
jae
adc
xor
inc
xlat
outsb
ljmp
adc
and
xor
xor
addb
pop
add
lret
mov
cld
xchg
xor
subl
aad
filds
push
fxch
nop
xchg
or
pop
xchg
ja
fsubrl
push
sbb
or
sbb
pop
xor
dec
inc
ja
ljmp
insb
pusha
sub
or
mov
mov
stc
insb
les
push
cmp
push
popa
clc
jp
pop
or
jmp
out
or
aas
ficomps
mov
and
push
inc
sub
dec
sbb
sbbb
mov
xchg
fdivl
fldenv
mov
mov
push
mov
lds
dec
and
jmp
leave
aas
dec
mov
std
push
xor
lahf
and
mov
push
jno
and
add
push
mov
call
int
xchg
fadd
cmp
pop
negl
test
mov
jmp
cmpsb
fsubs
insl
mov
fsts
mov
fisttps
or
mov
cmp
pusha
xor
mov
pushf
and
cmp
push
stos
idivb
stos
xor
call
push
das
mov
xchg
cmpsl
lods
cmovb
xor
cli
mov
imul
orb
push
add
fsubs
dec
mov
ja
scas
jae
mov
and
inc
sbb
jecxz
stc
addr16
adc
mov
push
xor
xchg
mov
test
mov
mov
pushf
lahf
cmp
cmp
inc
rclb
sti
mov
enter
mov
mull
in
sar
cmp
popa
cmp
add
out
cmpsb
dec
loopne
sub
ss
bound
ret
es
hlt
cld
lds
lods
and
ja
xchg
lcall
pop
fidivrs
das
mov
xchg
or
pop
hlt
notl
dec
loop
cmpl
add
jno
dec
insb
push
movsl
iret
cmp
outsb
pop
ds
insb
enter
out
fs
inc
cltd
or
data16
inc
jns
fiaddl
lea
xchg
pop
xchg
adc
push
push
xor
push
sub
lods
lcall
test
test
popf
popf
pop
in
dec
push
es
ret
mov
out
mov
mov
jbe
mov
ja
jae
adc
scas
ljmp
fsubs
xchg
sub
popa
rcrl
fidivs
add
ds
sahf
dec
dec
xchg
iret
push
jl
inc
js
pop
jbe
inc
dec
leave
enter
rcr
jae
int
sbb
cmp
fwait
sbb
data16
cwtl
xchg
lret
xchg
mov
js
aaa
pop
sub
mov
xchg
in
cmp
cmpsb
dec
rcr
ret
jg
xchg
daa
add
jl
movsb
xchg
lcall
pop
cmp
int
inc
dec
mov
clc
int3
xchg
into
pop
push
xchg
pop
add
mov
mov
xchg
orl
in
and
adc
outsb
bound
idivb
pop
mov
aam
jbe
and
jp
mov
cmpsb
sub
test
sti
push
push
jg
xor
clc
stos
movsl
in
add
push
movsl
jecxz
inc
addr16
mov
adc
pusha
inc
pop
mov
mov
ja
pusha
xor
add
sub
inc
pop
sub
or
mov
inc
cld
jmp
jnp
das
sub
jle
out
test
les
fwait
insl
dec
es
out
mov
xchg
sub
lcall
mov
shll
sar
sub
stos
jns
mov
fwait
or
sub
push
adc
cmpb
fnstsw
aam
ss
fucomip
andb
ret
test
mov
mov
jbe
pop
les
and
xor
mov
scas
int
popf
lcall
rorb
das
loopne
jne
mulb
mov
mov
lahf
leave
xor
addb
ret
xchg
mov
cmp
add
jg
aad
imull
push
add
inc
bnd
sbb
into
out
sbb
in
jle
and
xor
add
xchg
int
fbld
icebp
imul
xor
rcr
adc
pop
popa
rclb
notb
jg
mov
testb
jmp
stos
lret
jns
ljmp
aad
fimuls
xchg
pop
sbb
mov
into
cmpsl
hlt
lahf
icebp
out
inc
mov
jno
or
xor
movsl
jno
mov
add
imul
inc
dec
mov
ds
jnp
shll
sub
mov
cmpsb
ret
cwtl
jne
push
rorb
in
aas
add
out
pop
stos
loop
movl
js
ljmp
xchg
pop
adc
jnp
scas
cli
inc
cmp
pop
test
and
push
sbb
adc
test
js
sub
pushf
loop
test
mov
dec
cmp
bound
lret
adc
mov
ljmp
xor
in
xlat
add
sub
icebp
ja
lahf
dec
cli
xchg
dec
lods
xor
cmc
adcb
scas
inc
cmp
mov
sti
test
stc
xchg
push
call
nop
arpl
leave
mov
xchg
daa
lods
rcrb
aad
pop
xor
roll
arpl
scas
mov
sbb
jmp
dec
ficompl
fcom
cwtl
pop
movsb
daa
adc
cmc
xchg
dec
out
jp
cmp
mov
xor
clc
pop
mov
js
mov
pop
inc
mov
lcall
loop
dec
orl
lea
mov
lods
aad
sbb
sbb
pop
push
push
cmpsb
pop
lret
sarl
dec
lahf
mov
jp
filds
or
and
mov
or
sti
mov
sti
push
mov
push
add
mov
test
lret
or
cmp
sbbb
movsl
pusha
xor
fstl
adc
es
pusha
and
sahf
cmp
cmp
inc
mov
lds
sub
pop
or
sub
filds
adc
cmp
jecxz
aam
aas
icebp
adc
mov
popa
fsts
mov
test
divl
scas
jno
adc
xchg
sbb
adc
mov
sti
loope
aaa
pop
mov
jl
lret
jp
fiaddl
fwait
xchg
mov
jmp
bound
test
pop
leave
lcall
sahf
in
and
dec
xchg
dec
movsl
inc
cmp
inc
je
dec
scas
cmp
lea
xor
or
or
cmpsb
pop
lahf
sahf
mov
insl
pop
icebp
test
mov
repz
add
push
outsl
sarl
mov
bound
into
dec
pop
dec
loope
loopne
insb
lcall
lahf
dec
dec
imul
or
xchg
push
inc
xorl
stc
sub
mov
mov
or
or
mov
mov
dec
mov
iret
xchg
stos
sub
adc
inc
ss
loop
cmp
test
fsubrs
lahf
or
in
mov
fwait
xchg
pop
clc
mov
jo
sahf
pop
xor
jbe
pushf
in
int3
pop
movsl
popa
inc
cmp
jbe
pop
shrb
outsl
sti
jno
cmp
pop
negl
mov
ret
mov
xor
xlat
sub
loop
push
out
fldcw
or
jmp
lret
cwtl
mov
ja
fnstsw
dec
adc
aaa
repz
enter
fldenv
mov
xchg
xlat
adc
mov
int3
bnd
gs
scas
xchg
push
or
out
or
or
push
mov
lock
icebp
rcrb
call
jmp
std
fwait
xor
enter
cmp
jbe
xchg
cmpsl
clc
daa
das
inc
adc
push
std
jg
cmp
and
push
xchg
arpl
xchg
inc
adc
movl
xchg
mov
fwait
sub
int3
insl
out
loopne
sbb
fstl
fimull
mov
sbb
push
and
add
imul
mov
inc
or
jmp
xor
xchg
mul
adc
cwtl
addr16
or
in
testl
das
sbb
pushf
sahf
sub
shll
enter
mov
pop
bound
insl
xchg
test
sbb
fimull
inc
sub
and
aad
je
mov
xchg
insl
push
xchg
mov
cld
dec
into
add
dec
mov
arpl
mov
jp
add
aad
dec
and
into
xor
sbb
pusha
shrl
jne
idivb
pop
bound
sub
aaa
xchg
cmpl
stos
fwait
inc
cli
lods
cmovs
out
jbe
fsubrl
out
mov
insb
mov
sub
sub
stos
mov
xor
in
outsb
stos
sub
mov
lret
cmp
insl
dec
js
pop
addr16
mov
adc
movb
adc
jmp
daa
sti
out
daa
cmpsb
xchg
fistl
sub
sbb
aas
xor
mov
rcrb
mov
jmp
mov
clc
add
in
xchg
cmpsb
mov
test
imul
sbb
jns
ss
mov
jo
xor
pop
fwait
add
pop
cmp
xor
shll
inc
fstpl
mov
loope
jmp
lret
lcall
jp
btr
in
gs
int
cld
iret
mov
or
lea
rol
insb
jbe
mov
cmp
aad
sub
lcall
fisubrl
ret
jg
add
xchg
push
popf
mov
adc
insl
stos
inc
imul
push
sbb
notl
fsubl
lcall
inc
xchg
insl
into
stos
repz
daa
push
pop
xor
jnp
pop
ret
imul
lahf
cmpb
mov
adcb
ja
sub
sbb
nop
or
ret
or
mov
test
fwait
aam
stos
xor
add
pop
and
xchg
mov
loopne
insb
ficompl
cld
aaa
push
push
jb
adc
in
jae
xor
adc
int3
es
xchg
rclb
int3
xchg
xlat
fsubp
add
dec
mov
mov
popf
jno
cmp
sub
lea
inc
fstl
leave
es
sub
adc
test
loope
out
sbb
pop
pop
sub
aas
mov
sub
ljmp
iret
aam
xchg
xchg
fwait
lahf
inc
cmpb
xor
mov
out
sub
in
xor
jecxz
dec
out
inc
or
xor
adc
push
pop
and
jmp
outsl
mov
aas
dec
int3
mov
fnstenv
and
leave
sub
sbb
xchg
jge
adc
inc
jmp
imul
cli
mov
push
jmp
pop
aas
push
in
mov
mov
xchg
push
in
lea
xlat
add
xchg
pop
fildll
ds
std
jecxz
mov
cs
out
sbbl
xchg
adc
test
out
rcr
inc
outsl
and
xor
js
frstor
fbstp
mov
sbbb
push
and
cmpsl
stos
aad
pushl
pushf
xor
mov
mov
cmpsl
imul
pop
js
call
mov
loope
stc
fstl
daa
cmpsl
int3
fldcw
jmp
les
aam
ret
fldenv
mov
adc
addb
push
pop
aaa
in
xlat
testb
mull
push
dec
notl
mov
cmp
insl
test
cltd
adcb
addb
mov
clc
or
iret
lods
inc
mov
cmp
mov
mov
and
insl
mov
cli
jnp
jle
or
mov
outsl
mov
mov
push
jo
je
ficomps
orb
outsl
jb
out
aas
sub
mov
pop
mov
mov
dec
enter
push
mov
iret
push
call
dec
or
jns
mov
jmp
mov
leave
or
ret
das
jb
leave
add
shlb
or
mull
pop
xchg
pop
jae
bound
aad
mov
push
nop
mov
iret
mov
and
and
in
pushl
mov
xchg
notl
sub
mov
dec
or
insb
sub
mov
cmp
movzbl
testl
push
or
sub
aaa
pop
outsb
iret
das
movsl
pushf
movsb
push
add
cwtl
adc
sub
test
jne
mov
rorb
aaa
jbe
das
cmpps
testl
sbb
in
jno
lahf
pushf
decb
cld
repnz
les
xchg
pop
dec
mov
aas
push
xchg
mov
adc
xor
sub
and
jl
mov
outsl
pop
scas
mov
les
mov
das
fistpl
mov
lea
jp
sub
sub
mov
adc
push
mov
stc
insb
ss
testb
mul
pop
out
jnp
in
jl
inc
lcall
leave
repnz
loop
pop
mov
lock
sub
pusha
loop
xor
pop
out
mov
xchg
xor
test
stos
push
jne
mov
mov
stc
ja
and
enter
adc
ja
mov
inc
jge
cmpsl
push
inc
stos
jne
jle
xchg
mov
mov
imulb
repnz
sbb
adc
mov
pop
addb
incl
xor
shrl
add
mov
push
popf
push
sub
repz
lock
mov
jle
lret
push
dec
mov
dec
fists
aaa
cwtl
out
dec
jb
cmp
push
gs
ds
pop
lods
xor
popfw
scas
inc
dec
inc
in
ftst
xor
lcall
pslld
aaa
mov
shlb
sbb
mov
inc
or
and
jne
jle
xor
aam
mov
pushf
into
outsl
out
gs
pop
sarb
mov
test
and
jns
cs
xchg
push
or
mull
sub
push
sbb
loope
mov
js
loope
ret
push
loopne
iret
inc
add
xor
mov
adc
ja
and
pop
sbb
fcomip
lret
cwtl
xchg
push
xlat
dec
aaa
outsb
int
enter
and
in
es
push
sahf
lcall
test
sarl
jmp
loope
push
adc
sbb
mov
mov
dec
push
sub
push
sbb
xor
rorb
push
cld
xchg
dec
adc
xchg
inc
xchg
dec
insl
dec
lea
fstpl
aam
ds
out
int
outsl
fldcw
sub
mul
cld
lods
push
push
mov
mov
pop
mov
add
push
jne
dec
or
adcb
sub
iret
or
or
mov
add
cwtl
dec
inc
push
inc
pop
xor
stc
cltd
popl
push
push
sbb
add
sarl
lret
call
lret
dec
adc
cmc
cmpsl
mov
jno
cmp
dec
jmp
stos
jb
pop
sub
cmp
cmpb
and
sbb
mov
jmp
adc
pushf
addr16
test
pusha
negl
mov
adc
mov
jle
xor
arpl
ss
cmpsb
dec
call
cmpsb
xor
mov
call
and
inc
stc
lcall
jg
xchg
aaa
mov
mov
outsb
and
mov
std
lods
sbb
cmpsb
cmp
xchg
aad
ficompl
inc
cmp
jnp
sti
call
jno
cwtl
cltd
xor
out
test
push
dec
pop
fdivr
inc
shrl
andl
or
and
cmp
adc
jmp
sbb
ljmp
or
push
sub
push
jno
test
ret
test
jno
cmpsl
out
adc
and
sbb
repz
mov
xchg
imul
hlt
xor
dec
stos
idivl
cmp
outsl
push
mov
sub
loop
mov
add
shrb
jo
cmp
stos
jns
imul
inc
cmp
fisubl
mov
movsl
xor
add
in
inc
testb
icebp
inc
mov
xchg
xor
ret
popf
push
rolb
insb
fdivs
xor
jle
jmp
lock
repz
push
and
lcall
repnz
ficomps
negb
fstpt
sub
lods
mov
sub
lret
xchg
faddl
cmp
stos
push
rclb
jns
out
sub
loopne
sbb
sbb
mov
jle
jl
call
leave
xchg
in
mov
pop
push
mov
or
shrl
xchg
sub
mov
xor
mov
cmpsl
cltd
jmp
movsl
loopne
mov
das
sbb
lahf
cld
movsl
cwtl
movsb
jo
mov
cmp
inc
mov
push
in
sbb
pop
or
dec
int3
in
shrl
mov
bnd
mov
out
test
loope
mov
imul
push
sub
das
pop
fildll
nop
sub
lds
push
inc
jnp,pn
out
push
insb
xchg
mov
adc
ret
mov
clc
dec
xchg
mov
add
jge
or
xchg
and
xor
cld
aas
ja
scas
popfw
cld
push
lods
daa
add
push
data16
cld
popf
fmuls
sbb
cmp
ljmp
mov
orb
testl
inc
or
test
pop
sahf
push
mov
push
jl
xchg
and
fsub
and
je
inc
bound
sbb
nop
out
lods
repz
loope
iret
arpl
adc
adc
mov
inc
loope
and
fsubrl
fdivrs
mov
fs
mov
out
xlat
push
clc
mov
mov
xor
enter
les
aam
jne
xor
shl
lock
inc
mov
xor
pop
mov
popf
addr16
int
pop
adc
es
fucomp
int
stos
and
lahf
push
lahf
and
mov
divb
xchg
mov
dec
cmc
and
in
or
test
pusha
cmpl
popa
lds
or
cli
sub
push
push
sti
jns
pop
adc
shll
in
xchg
or
inc
fisttpll
cwtl
pop
dec
popf
dec
mov
shll
mov
mov
xchg
jbe
xchg
js
fcmovnbe
test
rcll
bound
push
ret
insb
addl
fwait
icebp
push
xchg
xchg
sbb
add
pop
lret
in
ljmp
rcll
jo
popa
push
cmp
xor
push
cmp
add
or
pop
data16
pop
pop
imul
out
ficoms
xor
push
imul
arpl
xchg
and
add
addl
pop
lods
push
sub
mov
adc
sub
fnstcw
xor
jmp
rorl
mov
cmp
adc
pusha
sbb
fwait
xchg
sbb
test
or
subb
mov
and
or
dec
jmp
push
loop
lret
push
lds
jl
imul
push
test
inc
sbb
jmp
bound
loope
mov
or
lret
sbb
les
jle
pop
pop
out
jp
xlat
aad
mov
sub
adcl
mov
jg
dec
lret
fsubrs
outsb
mov
nop
mov
mov
testb
xor
cmpsl
adc
add
enter
ret
mov
mov
stc
jmp
pop
pcmpgtb
arpl
mov
mov
out
aas
sub
mov
pop
scas
sub
jg
jbe
mov
repz
cli
or
nop
push
adc
or
mov
mov
push
sbb
das
sahf
sub
icebp
data16
rol
mov
sub
and
mov
sub
mov
push
push
lcall
es
mov
adcb
divb
fs
lcall
pop
mov
repz
jo
inc
xorb
pop
mov
sti
je
inc
or
mov
jl
push
mov
dec
ds
imul
std
dec
mov
bound
rcrb
test
pop
xchg
jecxz
addr16
xchg
fcoms
scas
jne
mov
or
stc
cld
test
movsl
js
adcl
rcll
ret
lret
pop
inc
xchg
ljmp
mov
push
je
aaa
popa
inc
inc
fcompl
jmp
cmp
std
adc
out
sbb
add
or
out
ja
inc
dec
inc
out
fistl
nop
mull
sub
div
das
sahf
adc
sub
push
insl
lret
lahf
test
pushf
adc
or
mov
pop
add
dec
jmp
dec
push
add
push
mov
xchg
lds
and
out
add
push
dec
in
pop
and
push
dec
jne
dec
inc
das
jle
outsl
adc
jbe
cmpb
sub
mull
pop
xchg
add
push
fidivl
lahf
cmp
shlb
mov
mov
xchg
xor
xbegin
push
fwait
addr16
cmp
cmpb
mov
dec
loopne
sub
xchg
int3
and
repz
xchg
out
stos
and
pop
shll
push
jg
repz
lret
and
xchg
test
mov
cmpsb
fld
jbe
outsl
jbe
roll
vcvtps2dq
jmp
jns
xor
mov
sbb
fsubrs
dec
push
jle
sub
out
divl
jg
out
sbb
add
and
sub
add
xor
bound
iret
into
add
lret
jo
sbb
int
lds
out
jo
sub
push
lods
test
or
sub
dec
cmp
sbb
stos
xor
push
pop
into
sahf
xor
pop
ret
push
xchg
adc
pop
jp
mov
mov
or
pusha
adc
cs
dec
fstpl
dec
inc
adc
cli
mov
mov
add
add
xlat
add
adc
mov
or
movsb
sbbl
outsl
xor
and
mov
cmp
les
andb
add
dec
lds
repz
enter
popw
sbb
or
pop
xorl
mov
pushl
sub
fisubrs
hlt
out
mov
xchg
jns
inc
and
sub
test
dec
mov
ret
das
mov
iret
fisttps
mull
les
mov
iret
xchg
xchg
cmp
mov
mov
ficompl
jbe
mov
inc
mov
inc
add
call
mov
popf
movsb
mov
dec
mov
mov
dec
fisubrl
jo
push
jle
xor
or
arpl
cmpl
pop
add
icebp
add
and
sub
push
aas
mov
les
sahf
data16
push
inc
add
xor
repz
jne
cmp
sbb
call
ds
jg
test
jmp
dec
shll
pop
pop
inc
mov
inc
sbb
and
cmpsl
mov
jbe
jnp
xor
mov
xchg
ret
sub
or
mov
cmp
bswap
mov
and
loopne
sbb
fsub
adc
push
and
mov
call
aam
cmp
fiaddl
insb
inc
icebp
pop
movsl
xor
mov
push
roll
mov
mov
lds
loop
sbb
or
push
les
in
cmp
rorb
pop
pusha
gs
dec
mov
aas
xor
push
lods
cmpsb
sbb
jns
daa
cwtl
lods
push
ret
xlat
xor
adc
fistpl
ffree
mov
repz
jl
cmp
xlat
jg
xchg
sub
pop
sbb
inc
xor
daa
pop
push
push
xchg
jge
xchg
xchg
pop
out
adc
ds
daa
les
mov
rcrl
std
mov
xor
lea
push
mov
pusha
push
sub
lret
lret
and
loopne
mov
mov
jg
in
int3
aaa
jge
pushf
es
jne
push
int3
jnp
mov
aas
scas
movsb
xchg
push
fcoms
adcb
test
call
sbb
scas
adc
mov
or
cmp
mov
pop
cltd
and
lods
inc
jle
xorl
sub
js
movsl
mov
lea
xor
lds
shl
pop
push
fstpl
mov
jecxz
lret
test
or
and
mov
add
mov
sbb
test
or
loope,pn
repnz
inc
cmp
aaa
cmpsl
dec
xor
pop
mov
sub
aam
jmp
jbe
or
mov
insb
js
insb
jecxz
and
fiaddl
outsb
aad
mov
cltd
dec
dec
sbb
das
xor
outsb
push
cmp
insl
out
aas
inc
bound
mov
mov
dec
ss
jp
pusha
pushf
cmp
mov
cld
sbb
scas
lds
fs
pop
cmovb
cltd
xchg
add
sbb
test
xor
packssdw
add
lds
jmp
mov
mov
dec
mov
int3
enter
imul
cmp
mov
jbe
jno
pop
push
adc
jae
aad
pop
nop
gs
cmp
push
clc
das
gs
mov
xchg
aad
add
dec
sub
sub
sub
jle
cld
mov
out
insb
cmpsl
in
sbb
movsb
insl
int3
mov
rorl
and
mov
xor
adc
rol
call
jmp
inc
mov
dec
or
jge
lahf
fstp
mov
inc
mov
mov
xor
dec
sbb
ja
addl
movsb
shl
mov
adc
pop
loope
dec
popf
pop
dec
mov
xor
addl
jb
lcall
add
aad
and
push
jbe
icebp
loopne
lock
cmp
rcrb
lock
aam
sub
inc
or
outsl
aad
mov
out
dec
test
roll
adc
out
jmp
pop
xor
jbe
dec
push
cmp
fsubrs
push
mov
call
pop
and
mov
insb
mov
addr16
iret
cld
stos
nop
insb
imul
iret
mov
sub
xchg
scas
loopne
add
pop
test
inc
pop
lods
or
or
sbb
mov
mulb
xor
push
mov
mov
mov
pop
ret
jnp
arpl
int3
xchg
xchg
or
jg
icebp
cmp
in
push
cmp
mov
movsl
iret
mov
fisubrs
or
xor
xchg
outsl
cmpsl
dec
fsubs
movsb
push
sub
mov
std
sbb
jbe
mov
negb
rcl
mov
and
loop
and
or
xchg
jns
push
xor
push
xchg
inc
mov
stos
ja
mov
pop
insl
sahf
push
fildl
addr16
jno
sti
lock
call
jge
mov
jecxz
push
sbb
sub
outsb
mov
pop
mov
cmp
push
into
inc
jnp
daa
fcoml
mov
mov
gs
mov
mov
lods
mov
fldt
sti
daa
or
rcrb
test
dec
jmp
jmp
add
sbb
int
notb
jle
inc
mov
cwtl
das
xor
jge
std
xchg
nop
xchg
inc
mov
cmpsl
js
jmp
in
out
pop
scas
pop
ja
pop
in
xchg
shlb
int3
into
sbb
mov
xor
or
out
push
cld
in
xchg
call
pop
mov
fimuls
fnstenv
fldl
sbb
iret
daa
add
mov
insl
inc
ss
sar
mov
xor
dec
xchg
insb
xchg
ret
pop
jecxz
inc
push
or
or
push
mov
daa
xchg
lret
add
jne
jne
out
cld
lret
xchg
inc
push
arpl
pop
clc
xchg
dec
iret
add
add
xor
adc
adc
stos
push
pop
push
and
adc
test
aad
loop
push
xorb
cmc
xchg
icebp
inc
jnp
xchg
fmul
jno
lds
incl
sub
stc
push
cltd
pop
loope
mov
cmp
sub
add
mov
in
and
dec
push
and
notb
insb
fwait
push
push
inc
mov
jbe
scas
mov
cmc
leave
push
xchg
aad
add
xor
imul
xor
jmp
pusha
aaa
imul
push
cmp
sbb
addr16
std
pusha
or
jns
aas
inc
pop
lds
sbb
jae
sahf
xchg
jl
and
test
mov
xchg
fcmovu
shrb
repz
sub
push
das
xchg
test
imul
in
movsl
imul
in
rcll
jae
scas
mov
fstps
add
clc
outsl
pop
cmp
cmpsl
je
adc
or
loope
fidivrl
mov
adc
lret
jmp
jecxz
pop
and
sub
cmc
xor
cmp
pushf
adc
add
sbb
and
das
adc
iret
fs
sbb
sbb
inc
mov
mov
mov
and
sub
ficomps
fs
mov
mov
or
loop
sahf
jne
aas
cmp
je
push
mov
push
addl
add
out
popf
ja
mov
out
push
cmpsb
test
lea
lock
lcall
les
xchg
jns
add
mov
mov
pusha
lret
icebp
cmp
jb
scas
sub
mov
pop
sub
mov
add
xchg
mov
inc
cmp
testb
mov
inc
mov
dec
inc
pusha
mov
cmp
aad
adc
int
pop
mov
es
or
xor
fadd
daa
adc
mov
movsl
jbe,pn
mov
push
xor
push
adc
gs
fdivs
xor
lahf
xor
lods
hlt
mov
sbb
pop
sub
mov
mov
cmp
push
les
out
frstor
rsm
pop
mov
les
fwait
push
xchg
dec
adc
dec
idiv
aad
fimull
jae
xchg
mov
ss
test
cmpsb
xlat
clc
lea
push
mov
mov
js
xchg
add
adc
mov
pop
inc
inc
test
push
cli
aam
dec
or
inc
cwtl
adc
push
mov
adc
out
out
cmp
gs
mov
subb
jg
clc
ror
sub
movsb
adc
mov
out
int
and
loope
lock
or
mov
mov
dec
pop
xor
inc
in
push
mov
xchg
or
add
jb
and
push
pop
jbe
xchg
pop
pop
cmp
sahf
call
xchg
out
sbb
mov
push
ja
fsubrp
movups
cmc
xchg
stc
test
loopne
lea
lock
mov
aas
sub
insl
daa
gs
arpl
fsubr
xor
mov
xlat
xlat
test
push
pop
cmp
cs
lock
or
scas
hlt
mov
lds
jle
repnz
sahf
in
test
mov
add
dec
cmp
mov
push
adc
add
fstp
mov
pushf
lods
sbb
xchg
fistps
jae
fldenv
sbb
or
jp
adc
stos
negb
call
jns
popa
dec
ret
mov
fldl
insl
bound
ret
insb
xor
inc
inc
sti
adc
ret
sbb
loopne
pop
ss
lahf
stc
inc
aad
sub
loope
jmp
repnz
data16
insl
mov
add
outsl
outsl
outsl
xchg
cld
adc
mov
sub
sub
pop
leave
das
cmpsl
hlt
jno
js
add
test
jg
ret
out
xchg
and
js
fwait
insl
clc
cmp
movsl
jmp
data16
add
jl
pop
xlat
sbbb
jne
xchg
and
std
cmovs
outsb
clc
out
xchg
mov
stos
or
outsl
outsb
stos
lods
adc
xchg
xchg
add
and
neg
repnz
add
and
aas
mov
pop
gs
test
dec
pop
fimuls
out
stos
sbb
and
test
lods
shrb
cmpsl
loope
and
pop
ret
pop
lds
lock
mov
pop
int3
xorb
mov
mov
adc
les
clc
mov
pop
lret
sub
into
outsl
dec
jp
iret
mov
inc
pop
stos
js
xor
mov
popa
cmp
lods
aaa
and
imul
pop
pusha
bound
sbb
fdivs
fmuls
cmp
mov
test
gs
or
lcall
shrb
pop
xchg
cmp
int
cmp
and
imul
paddd
adc
sub
or
xor
outsl
test
movsl
outsb
and
inc
shrb
gs
cmc
sarl
loop
cmc
ja
jp
inc
sbb
in
imul
subb
paddd
sahf
pop
fnstcw
int
leave
xor
in
xchg
pop
fs
mov
adc
adc
data16
pop
test
xchg
push
mov
sbb
sbb
push
and
stos
shlb
sub
xor
mov
or
fcomip
cwtl
rclb
inc
dec
push
push
xchg
xchg
mov
push
and
int
out
scas
add
mov
adc
sub
dec
sbb
fmuls
lods
arpl
sbb
cs
push
in
sbb
gs
dec
lods
sahf
jle
test
imull
xchg
mov
popf
mov
imul
add
out
mov
outsl
lcall
imul
jbe
and
out
mov
insl
arpl
mov
or
pop
movsb
xchg
mov
cltd
or
inc
mov
imul
cmp
cwtl
data16
out
fmul
or
dec
test
je
adc
clc
xor
inc
push
ds
je
subb
mov
loopne
sbb
inc
int3
xor
fcmove
push
mov
inc
xchg
movsl
mov
sbb
mov
test
cmp
cmc
ja
lcall
dec
xlat
andb
push
sub
loop
pushl
or
jp
stos
sbb
test
repz
ds
rcr
test
test
push
pop
xor
push
aam
pop
cli
mov
pushl
xor
or
cmp
sub
lock
jno
xor
jge
cmp
xchg
in
cmp
inc
pop
lods
repz
popf
or
sbb
stc
das
lahf
pop
xor
add
pop
pop
jle
in
mov
xchg
sub
repz
add
imul
mov
dec
xchg
push
jnp
cltd
inc
in
pop
jb
test
mov
ficomps
pop
cltd
fistpll
sbb
jg
pop
dec
or
cmp
das
fadds
out
mov
adc
loope
inc
inc
rolb
mov
adcb
xor
lods
xchg
lea
outsb
jbe
adc
adc
xchg
dec
iret
pop
xchg
imul
mov
xor
mov
sti
icebp
in
adc
shrb
pop
nop
cmp
jbe
shl
bound
mov
jbe
arpl
out
xor
movsl
xlat
xchg
xor
es
out
mov
mov
xchg
inc
push
and
jo
ret
daa
ds
popa
sbb
mov
dec
sbb
mov
in
jbe
jp
and
movsb
adcl
xor
pop
dec
pop
incl
ljmp
ljmp
test
dec
aas
inc
cmp
pop
xchg
dec
movsb
jae
or
and
insl
out
insb
add
orb
push
sub
mov
mov
fdivrl
push
dec
adc
jp
mov
nop
push
das
call
pop
jb
mov
mov
out
adc
xchg
xor
pop
pushf
jmp
mov
scas
adc
add
mov
shll
add
jmp
pop
sarb
xchg
call
cmp
negl
fimuls
jo
in
push
out
inc
mov
push
dec
shl
imul
pcmpeqd
imul
mov
fsubrl
test
sbb
ss
pop
dec
add
inc
mov
add
pop
js
pop
pop
push
mov
subb
inc
xor
add
and
sbbl
pop
test
in
sub
push
negl
xchg
inc
adc
dec
add
lret
andb
or
jp
or
movsb
mov
lds
push
jmp
jg
dec
imul
push
dec
sbb
jno
es
cmp
pop
adc
movsb
dec
fcmove
pusha
xor
repnz
lock
mov
mov
lahf
cmp
sahf
fs
adc
push
xor
sbb
test
jmp
ret
mov
mov
cs
mov
sub
popa
xor
xchg
repnz
hlt
mov
sti
cli
iret
inc
cld
cmpsb
xor
addr16
jo
add
pop
or
adc
jmp
loop
in
jbe
repz
int
pop
mov
push
sbb
xchg
mov
rorb
add
adc
sub
push
mov
and
mov
lods
add
mov
or
in
jl
adc
into
call
cli
pushf
push
or
xchg
inc
pop
and
jbe
out
pushf
push
mov
insl
aad
pushf
shrb
movsl
mov
sahf
mov
push
mov
sbb
and
cli
and
xchg
cld
dec
fs
aad
into
in
push
sub
push
mov
pop
and
das
ljmp
lea
xor
std
test
cmp
sub
cmp
enter
call
popl
mov
hlt
cmpsl
mov
add
and
ljmp
shll
sahf
fwait
pop
push
ret
test
insl
pusha
jno
ja
sub
idiv
imul
mov
mov
mov
cwtl
cli
in
aas
mov
pop
sbb
and
data16
mov
ja
aad
clc
mov
jmp
jmp
and
cmp
xchg
mov
cmp
pop
sub
cs
push
and
and
outsl
ja
mov
enter
aam
ds
sub
jle
aas
fdivrs
and
movsb
xor
rcrb
cmp
icebp
enter
outsl
xor
movsb
dec
in
lods
pop
aaa
inc
fnsave
lahf
loop
lret
das
jp
or
add
mov
xchg
aad
mov
and
add
mov
xchg
jg
bound
addr16
mulb
xorl
scas
mov
pop
enter
sbb
adc
pushl
imul
or
cltd
ds
jp
neg
fcmovne
je
outsl
xchg
mov
inc
scas
shll
fs
jle
fs
shlb
cld
and
mov
dec
xchg
mov
mov
or
lret
mov
aaa
dec
xchg
arpl
add
subl
push
jns
pop
out
movl
jmp
lret
imul
stc
lret
dec
sbb
or
repnz
add
pushf
cmpsb
hlt
aaa
hlt
mov
add
adc
data16
divb
xor
xor
mov
leave
cli
loope
push
jmp
mov
lret
outsl
mov
imul
out
or
scas
mov
push
jge
adc
stc
mov
xorl
lcall
mov
shl
jb
cmc
cld
add
ja
and
pushf
pop
xor
call
jbe
inc
and
shll
mov
lret
fdivl
and
les
cmpsl
fstl
dec
jecxz
popa
mov
inc
sub
hlt
adc
aam
arpl
jae
or
mov
jns
mov
mov
sub
jns
cmp
call
jp
and
popa
nop
inc
scas
and
inc
mov
pop
into
jae
and
push
ret
scas
push
push
jo
mov
shrl
repz
minps
mov
pop
mov
mov
dec
iret
xor
sub
lds
sub
add
repz
data16
in
xchg
loope
xchg
lods
adc
mov
sti
ja
sbb
scas
mov
jecxz
xlat
mov
int3
and
jo
push
sbb
outsl
in
repz
jge
das
mov
dec
ss
shlb
ficoml
mov
mov
push
xchg
negb
jbe
addr16
in
nop
sub
loop
cmovno
loop
mov
jb
cld
pusha
iret
xchg
in
aam
andl
and
in
fwait
pop
std
lret
dec
mov
ss
cld
stos
mov
pop
mov
dec
xchg
jge
in
int
inc
jle
ror
shrb
sti
sbb
nop
mov
push
jmp
out
leave
out
mov
cmp
push
jo
push
and
push
pop
mov
fdivrl
push
xchg
out
das
xchg
hlt
das
push
xorb
std
in
mov
test
jmp
cmp
push
jp
sarb
call
and
cmp
adc
loope
fadds
es
xchg
fcmove
mov
push
lret
movsb
imul
mov
test
mov
test
int3
repnz
inc
out
jmp
imulb
fs
je
fwait
mov
xchg
test
inc
xchg
xchg
add
sbb
fadds
stc
xor
das
mov
xchg
imul
push
lds
xchg
or
pop
bound
mov
adc
pop
lahf
adcl
shrl
clc
in
orb
out
sar
push
movsb
sub
cwtl
adc
push
cmp
test
sbb
mov
xor
dec
repz
push
stos
divb
jno
mov
lcall
into
cwtl
scas
nop
test
mov
and
in
sti
sti
inc
inc
rcll
dec
pop
adc
add
in
cmp
mov
in
lahf
jne
fnsave
jbe
scas
push
pop
inc
int3
sbb
vcomisd
cltd
arpl
imul
pop
mov
dec
lret
pop
ljmp
mov
dec
lret
cmp
and
in
add
cwtl
aad
bound
pop
push
inc
fiaddl
cmc
inc
jns
rcll
js
lret
pop
into
popf
aam
cltd
mov
mov
jl
fstps
fidivrs
loope
cs
es
das
lea
mov
sarl
add
lea
fimuls
dec
dec
push
inc
push
or
push
mov
aam
sbb
cli
mov
aaa
jmp
mov
fsubl
ljmp
out
cmpsl
inc
sar
test
jg
cmp
int
cmp
mov
pop
in
lock
sub
xor
in
pop
dec
jno
inc
sbb
push
pop
cmp
xchg
push
icebp
movsl
jbe
jae
jmp
xor
mov
xchg
add
push
cmp
mov
fs
sub
out
push
xor
xchg
lock
lods
mov
ficomps
addl
xchg
ljmp
pushw
cmp
lret
lea
adc
fdivl
leave
push
sub
fwait
movsl
idivb
or
movsl
and
lcall
mov
mov
sarl
in
insl
mov
fcoms
pop
lods
jp
xor
mov
xchg
aad
dec
out
es
sub
inc
adc
subb
cwtl
mov
pop
add
jl
lds
out
adc
addr16
inc
lods
add
loope
dec
xor
daa
movsb
pop
mov
adc
xchg
jo
cmp
xor
and
adc
jle
inc
popf
jmp
shlb
add
fs
cli
add
pop
sbb
adc
sub
fwait
add
cmp
data16
cmp
jae
push
andb
rcll
and
xchg
js
jg
adc
sbb
shl
hlt
mov
sbb
and
push
mov
cmc
aam
dec
lret
orb
xor
movsb
sbb
int3
dec
movsb
jo,pt
loop
loop
sbb
outsb
push
loope
push
lret
scas
in
pop
adc
mov
mov
imul
push
loopne
push
mov
cs
gs
out
mov
dec
add
sub
lret
xor
test
mov
sbb
test
inc
sbb
push
pop
xchg
jg
movaps
jge
test
fistpll
cmp
out
xchg
jl
mov
hlt
rcrl
popf
push
insb
mov
mov
jo
and
xor
push
push
add
test
pop
test
sub
stos
out
dec
in
sbb
scas
test
shrl
ss
out
jg
xchg
sahf
jmp
out
or
mov
shrb
sub
pop
xchg
jbe
mov
adc
movsb
mov
pop
aaa
push
mov
jno
sub
and
fwait
mov
in
es
xor
das
aaa
lret
add
out
mov
in
repnz
pop
and
inc
sbb
sub
in
mov
arpl
fdivp
std
inc
inc
xchg
jae
push
mov
fimuls
stos
push
inc
xor
lahf
push
sbb
cmp
outsb
or
std
scas
push
sub
and
jg
sbb
add
pop
xor
adc
push
repz
cli
das
ret
mov
jne
cmp
imul
cmp
mov
pop
jae
ja
clc
inc
rcr
jbe
xor
shrl
aaa
test
mov
std
pop
movsl
add
sbb
mov
imull
cltd
cs
jle
repz
mov
push
or
pop
jno
cwtl
inc
repz
pushf
inc
adc
mov
rcrl
sub
mov
jmp
add
mov
ds
and
divb
movsl
insb
jae
or
ljmp
inc
inc
push
ljmp
mov
mov
xchg
pop
jo
or
sbb
xor
mov
push
jbe
mov
out
push
cmp
outsb
mov
xor
ja
xchg
fmull
loop
ret
cld
dec
lcall
cmp
inc
ficomps
mov
pop
gs
fsubrs
repz
inc
fsubl
dec
stos
sub
pop
and
push
fidivs
xchg
nop
lds
adc
mov
xchg
ss
repnz
enter
jnp
jg
iret
sub
rcl
mov
mul
mov
arpl
mov
dec
cmp
pushf
loope
inc
pop
mov
pop
daa
inc
fdivl
add
pop
stos
cmp
movsb
mov
or
fstl
mov
mov
cmp
mov
fdiv
push
sbb
xchg
push
pop
ss
pop
fadds
inc
push
sbb
adc
into
fldenv
cwtl
dec
imul
sub
add
movsl
fisttpl
pop
adc
int3
lcall
loope
pop
into
fidivrl
popf
shll
pop
daa
fnstsw
cmp
cmp
jmp
mov
sarb
xchg
push
loope
into
or
xor
mov
mov
jg
cld
jno
dec
cs
and
dec
or
sbb
jp
test
push
aaa
xchg
sbb
xlat
loope
icebp
rcrl
add
cltd
punpckldq
lock
pop
push
pushw
cs
dec
or
pusha
daa
xchg
leave
and
mov
xor
adc
or
cmp
movsb
or
mov
push
into
aas
dec
xchg
cmc
lahf
jg
sbb
repz
cmp
adc
sti
inc
sub
dec
nop
loopne
repz
sub
int
dec
nop
iret
mov
sub
push
loop
mov
add
push
add
popa
xlat
lock
imul
inc
ret
mov
cmp
cld
fwait
pusha
lods
aam
test
dec
mov
movsb
push
xlat
insb
xor
and
bound
ja
js
shrl
out
aam
ds
loope
cmc
xlat
cmpsb
pop
lcall
icebp
add
test
pop
mov
mov
push
mul
and
stos
and
push
and
push
imul
add
cld
pop
repz
mov
out
mov
push
jbe
pop
lcall
fiadds
lock
in
push
and
sbb
or
shll
es
xchg
add
inc
fmull
cmp
cmp
enter
inc
rcll
xor
fwait
push
shlb
jl
call
mov
es
je
int3
cmp
xchg
stc
out
movsb
xor
cmpsl
cmp
lock
xchg
cmp
mov
adc
mov
pop
adc
lcall
xor
jb
out
outsb
pop
fwait
dec
push
lahf
and
insl
push
stc
scas
mov
cmpl
in
stos
mov
bt
leave
or
dec
jo
addr16
outsl
inc
or
mov
fcmovnu
in
mov
inc
jo
dec
or
lock
incb
add
das
add
inc
dec
mov
mov
andl
cmpsb
jmp
xor
movsb
xchg
push
push
mov
mov
and
std
cwtl
sbb
pop
int3
pavgb
xchg
push
sbb
inc
les
sahf
aas
out
jo
mov
in
push
dec
mov
leave
sbbl
cmpsb
test
rcl
subl
jnp
or
push
pop
popa
mov
add
xor
add
xchg
icebp
enter
loope
and
lcall
and
popf
cmp
ja
sub
xor
cmp
xor
push
and
std
in
into
push
stos
pop
test
fdivr
iret
into
arpl
bound
add
shll
add
repnz
mov
sub
push
or
jnp
lret
adc
notb
cmc
dec
inc
mov
outsl
ja
mov
imul
push
fisttpl
jb
loop
or
in
sub
inc
dec
ja
test
lahf
ret
push
loop
data16
cmp
bound
decb
cmc
test
xchg
push
out
mov
stos
inc
or
pop
dec
mov
sub
je
mov
xchg
sub
leave
or
cmc
sub
bound
lgs
sub
ret
jmp
jg
pop
mov
jl
jb
andb
arpl
cmc
cld
push
lret
cmpsl
mov
push
leave
push
mov
cmpsl
cmpl
scas
lock
sbbl
jnp
or
or
rcll
repnz
scas
call
nop
out
cmp
mov
jae
shrl
sub
inc
shrb
cwtl
xchg
sbb
mov
inc
ret
jl
mov
xchg
cwtl
iret
rcr
and
mov
mov
jge
ja
popf
xacquire
cmp
mov
rolb
sbb
and
sub
push
push
popf
adc
or
sahf
mov
dec
push
pusha
sbb
dec
daa
pop
push
sbb
mov
xlat
stos
cs
vshufps
sahf
and
xor
or
xadd
icebp
outsb
and
mov
xor
faddp
pop
mov
bound
das
int3
push
dec
or
push
cmp
pop
mov
inc
iret
lods
inc
push
pushf
push
loope
or
mov
adc
movsl
cmp
jmp
je
mov
sbb
int3
repz
pop
jnp
pushf
arpl
push
mov
mov
lea
and
push
mov
ror
loope
add
jle
push
shrb
test
loopne
or
pop
inc
xchg
into
ja
pause
xchg
sbb
test
push
in
movsb
add
mov
scas
adc
je
subl
inc
pop
or
pusha
data16
lods
call
lret
and
in
xor
shlb
add
xchg
pusha
shll
jl
lret
pop
and
fwait
dec
push
js
sub
in
mov
cmp
movsl
cmp
ret
pop
lret
popf
lret
sub
sbb
sbb
mov
pop
jg
ljmp
xchg
mov
imul
and
daa
cltd
mov
inc
cmpsl
scas
js
cmp
xchg
push
pop
pop
rol
xchg
inc
rcrw
in
push
lret
adc
jecxz
ret
in
pop
dec
pop
outsb
or
push
into
stos
mov
ret
loop
in
out
and
addr16
add
pop
loopne
inc
sar
out
aaa
xor
fmuls
bound
sub
pop
or
stos
xchg
cmc
jge
lahf
sub
inc
mov
std
fbld
mull
insb
pop
cld
movsl
out
mov
and
sbb
add
rclb
adc
test
dec
shl
cmpsl
cmp
inc
jl
jl
pop
mov
ljmp
stos
mov
jo
xorb
and
mov
adc
sti
jnp
pop
or
int
push
dec
jp
and
sbb
punpckhbw
mov
mov
in
mov
pop
bound
clc
cmpsl
shll
pop
stc
xchg
pop
cmp
jg
inc
pop
pop
loop
fiadds
add
repz
nop
adc
mov
lea
rolb
shrb
rcrl
int
fisttps
dec
jne
nop
jno
roll
repnz
add
xchg
cmp
push
adc
inc
dec
push
add
ja
inc
mov
cli
adc
lret
dec
push
movsb
pushf
mov
call
xlat
cmpsl
and
ficomps
pop
push
dec
loopne
movsl
sbb
adc
lret
jle
sub
dec
stos
fiaddl
lahf
hlt
cmp
rol
mov
push
cmpsb
fs
cmp
add
sub
int
push
push
inc
and
addr16
mov
std
sbb
insb
xchg
sbb
fwait
mov
add
add
lods
add
jge
adc
inc
dec
adc
pop
push
ret
mov
jmp
rorl
jne
stc
fs
and
push
popf
aam
xlat
xchg
mov
push
sbb
lea
dec
jle
mov
fildl
scas
or
movb
stc
inc
or
jne
cmpsl
xchg
inc
xchg
out
fildll
xor
or
lds
imul
lock
push
xlat
out
aam
push
insb
dec
imul
push
outsl
in
fdivrp
ljmp
xor
rorb
bound
push
testl
or
sub
push
or
lds
add
notl
adc
inc
in
dec
push
pop
mov
xchg
pop
pop
into
sub
pusha
push
repz
pop
test
fstpt
fstl
outsb
cmpsl
and
mov
push
popa
dec
xchg
js
adc
shlb
pusha
pop
cwtl
fidivrs
sub
dec
pop
mov
clc
sarb
jge
adc
jmp
pop
les
push
cld
xchg
fidivrl
push
inc
inc
and
adcb
cli
int3
jecxz
loop
arpl
rorl
jmp
popf
pusha
enter
inc
sbb
mov
pop
pop
call
and
movsb
jg
pop
in
mov
or
xchg
loopne
dec
xchg
jbe
push
popf
or
push
popf
negb
scas
xchg
xor
inc
fidivrl
and
and
sub
test
sub
loopne
fs
fwait
add
cmp
jecxz
mov
or
fildl
decb
call
xchg
mov
fbstp
jne
pop
insb
imul
pop
sbb
testb
sub
ret
pop
sub
push
add
xlat
mov
jg
ds
cmpsl
pop
lods
add
lods
push
push
mov
test
or
and
push
shll
jmp
scas
sbb
add
shrl
mulb
push
sbb
or
pop
cmpsb
inc
inc
mov
push
add
mov
jne
push
xor
jg
adc
out
mov
mov
inc
adc
incb
ret
xor
push
shr
insb
xchg
push
insl
jb
subb
xchg
lret
xor
sbb
bound
fisubrs
das
das
aad
pusha
das
xchg
and
jbe
sub
idivl
xor
scas
or
cmpsl
cmp
and
mov
enter
imul
gs
in
in
mov
mov
pop
mov
mov
xchg
jne
lcall
adc
mov
gs
push
insb
aas
mov
jns
mov
lea
lcall
xlat
loope
sbb
pop
xchg
rcl
fisubs
push
movsb
push
daa
jbe
adc
loopne
or
mov
adc
sti
fbstp
in
lds
xchg
push
cmp
push
dec
xor
pop
aaa
mov
dec
rcrb
out
ror
lahf
repnz
cmp
xor
enter
aaa
das
stc
mov
sub
pop
mov
pop
cmc
xor
or
xchg
shr
iret
jp
push
fmul
xor
test
sbb
notb
bound
enter
nop
jp
std
fidivrl
ja
lahf
stc
mov
cmp
mov
push
cwtl
push
xor
mov
lds
ja
ret
movsb
inc
and
test
mov
jae
jne
rorb
stos
push
push
mov
icebp
ss
inc
fninit
adc
jg
push
cmp
sbbb
add
jp
cmp
inc
sbb
lea
hlt
icebp
int3
rcr
enter
popf
neg
cltd
cmpsb
divl
cmp
ss
xchg
cli
bound
imul
int3
mov
cmpsb
sbb
sbb
jns
adc
mov
inc
or
add
add
test
sub
jmp
jns
mov
cmp
inc
test
mov
sbb
lahf
imul
jno
cmp
out
jp,pt
xchg
mov
in
leave
and
insl
das
js
in
adc
nop
ficoml
in
pusha
push
in
xchg
xor
cld
jg
push
aaa
adc
mov
xchg
std
dec
or
and
das
icebp
sub
es
push
ss
push
adc
xor
idivb
repz
stc
mov
clc
push
out
push
sbb
lret
push
mov
cmp
xchg
fwait
xchg
lea
or
shrl
mov
push
mov
setl
vmwrite
mov
xor
push
jl
xchg
or
adc
ss
or
cmc
and
mov
xchg
cld
insb
out
pop
es
cld
jnp
aam
in
clc
mov
lcall
je
pop
add
hlt
jne
jp
mov
enter
dec
orl
leave
mov
loope
jae
movsl
pop
loope
jge
jae
dec
mov
repnz
adc
ljmp
or
inc
lret
mov
inc
mov
dec
out
daa
jecxz
mov
data16
mov
fwait
pop
pop
cs
clc
sbb
mov
push
or
loope
sbb
push
iret
bound
ss
jno
mov
xchg
aas
and
subb
movb
add
push
inc
mov
cmpsb
pop
xor
jg
mov
xor
pusha
lcall
jecxz
cmpsl
adc
and
int3
xchg
and
daa
inc
inc
fwait
ret
lcall
inc
jno
int3
sbbb
pop
jge
xor
mov
mov
cli
adc
test
mov
sete
inc
push
cltd
xchg
js
popa
lahf
push
sahf
cmp
int
insb
mov
les
std
pop
aam
mov
sbbl
mov
dec
push
dec
pusha
addr16
and
rcl
ja
and
mov
aaa
xor
mov
insl
ds
shrb
cmp
stos
rorb
mov
xor
mov
shl
dec
mov
movsl
ds
pop
out
pushf
adcl
stos
test
inc
enter
jecxz
insb
repnz
insl
sub
cmp
lock
stos
mov
je
test
iret
push
adc
loop
out
rorl
shl
adc
jecxz
xor
outsl
into
pushf
lcall
insb
add
and
xor
jmp
lock
repz
xor
orb
mov
or
sub
xor
and
xor
call
sub
cmp
and
pop
fadds
add
jo
arpl
mov
xor
sbb
cltd
cmc
out
enter
jp
mov
adc
lock
adc
pop
enter
imul
jne
cmp
push
mov
sbb
mov
xchg
call
add
and
outsb
mov
dec
and
pop
shll
jecxz
dec
pop
mov
mov
xchg
shlb
sub
push
push
add
mov
mov
arpl
pop
rcrl
add
scas
popf
add
cmp
les
and
aam
test
inc
inc
int
imul
sbb
icebp
lret
mov
aad
or
int
repnz
add
jbe
je
mov
jo
lcall
aad
pushf
fwait
mov
or
pop
mov
pop
cmp
sti
cmp
jge
cmp
jbe
daa
call
pop
arpl
or
mov
xchg
adc
clc
movsl
in
add
add
rcrl
loopne
jne
and
push
and
jge
jne
rorl
lock
cmc
pop
stc
data16
jbe
mov
sub
sbb
mov
shrl
jmp
in
cld
dec
jae
add
repz
jno
inc
data16
jne
add
fdivr
es
xlat
push
or
xlat
mov
in
xchg
test
cmp
jno
xor
repnz
pop
es
ljmp
or
fwait
fwait
inc
jg
adc
js
cmp
sahf
cmp
mov
sub
mov
cmp
mov
inc
mov
fsubrp
iret
fidivrs
push
adc
in
lods
xor
lret
ss
mov
es
cs
jb
mov
xor
pop
mov
xchg
cmpsb
hlt
call
addr16
xchg
fcmove
sti
into
xchg
mov
xor
mov
jmp
sbb
std
dec
sti
push
into
adc
or
in
mov
out
xchg
cmpsl
dec
jne
idivl
scas
fisttpll
add
loop
mov
mov
jae
rcl
jge
xchg
iret
cltd
jecxz
mov
rolb
std
xchg
imul
and
ret
pop
xor
dec
dec
pop
imul
sbb
inc
std
or
dec
cmp
xor
mov
dec
jne
aad
incb
push
stos
rclb
and
mov
loope
jmp
push
adc
cwtl
fwait
or
pusha
dec
mov
mov
outsl
mov
outsl
cmp
adcl
push
fisubl
outsl
dec
jmp
iret
push
sub
mov
in
mov
iret
in
or
ficoml
cmp
outsl
mov
push
xchg
push
inc
leave
and
mov
lods
loop
dec
or
imul
mov
push
fldl
arpl
or
fwait
repz
sub
lret
xchg
jne
and
xlat
inc
imul
xchg
lock
xchg
xchg
pop
std
sub
lock
lcall
or
or
rolb
adc
js
cmp
popf
dec
xchg
iret
inc
push
dec
shl
scas
icebp
mov
push
int3
outsl
jmp
dec
pop
add
cmc
out
pop
xchg
mov
aas
icebp
xchg
leave
sar
mov
mov
outsl
prefetchw
or
push
pop
cmpb
cwtl
inc
pop
sub
jmp
xor
mov
cmc
cwtl
sbb
scas
xlat
xor
push
scas
mov
xchg
daa
adc
loope
inc
dec
cli
mov
mov
mov
cmpsb
and
inc
sbb
push
les
adc
dec
mov
clc
pop
mov
pop
popl
int
sbb
jno
stos
repnz
pop
call
mov
xchg
lahf
mov
out
add
mov
inc
lcall
push
out
push
adcl
and
scas
mov
push
sub
lds
xchg
sbb
sbb
gs
and
push
add
cmp
sub
decb
and
dec
or
das
scas
pop
pop
xor
pop
pop
imul
fistl
mov
ss
rol
lods
jmp
adc
lods
stc
mov
mov
jle
push
xchg
and
pop
xchg
cld
mov
pop
cli
aad
fadd
jae
cwtl
adc
cs
fists
cwtl
rcr
mov
sub
jb
inc
pop
pop
icebp
aam
mov
imul
sub
int
sbb
add
mov
xor
sbb
mov
push
xchg
mov
arpl
adc
cltd
jmp
inc
out
mov
and
pop
pop
cmp
test
das
movsb
sahf
js
repz
sub
loopne
inc
es
xchg
out
cs
out
cmp
in
sub
insl
dec
sbb
or
loop
jp
dec
pop
pop
sub
lahf
sbb
dec
scas
cmp
addr16
xchg
xchg
aas
rclb
cld
test
mov
idivb
sbb
mov
addr16
outsb
lret
dec
push
mov
jb
or
sub
cmpb
aam
or
sbb
out
icebp
hlt
or
inc
mov
iret
xor
sar
pop
cmpsb
iret
cli
cmpl
fldl
andps
imulb
cmc
cmc
ret
mov
lret
daa
es
mov
add
push
ja
xor
mov
movsl
cmp
ja
cmp
cmpsl
dec
jbe
in
stos
mov
add
stc
jge
sub
mov
mov
iret
enter
mov
jne
je
leave
enter
scas
lock
jb
popf
push
sbbl
fwait
adc
addr16
and
and
addr16
jnp
pop
adc
jns
xchg
xor
pop
int3
lret
pop
movsl
inc
std
popa
push
outsb
jns
adc
push
push
lock
dec
rcrl
dec
mov
in
hlt
adc
and
int3
or
inc
lds
and
aad
and
and
loopne
movsb
or
mov
push
pop
pop
or
fldt
cmp
add
data16
or
mov
lret
in
pop
shrl
orb
adc
inc
push
insl
dec
pop
pushf
mov
xchg
enter
mov
in
mov
sbb
mov
xchg
rolb
test
dec
jno
xor
mov
call
and
fiadds
test
bnd
dec
imul
push
adc
and
out
jae
test
mov
loope
aaa
hlt
pop
loope
stos
imul
mov
test
ja
cmp
mov
lcall
ja
loopne
or
call
cmpsb
faddl
dec
dec
dec
jbe
jnp
jle
xchg
add
stos
mov
into
xor
icebp
mov
add
xor
frstor
sub
push
arpl
daa
out
ffreep
arpl
mov
out
push
loopne
jbe
subb
add
mov
push
jg
or
movsl
jbe
mov
movsb
pop
lret
jecxz
cmp
xlat
mov
push
or
or
sbb
adc
sub
xor
cmp
test
lret
test
sar
xchg
jae
push
adc
cs
outsb
push
sub
scas
jecxz
insb
xchg
mov
xchg
mov
cmpsl
idivl
inc
rcll
lea
add
pop
cli
insl
std
es
ficoml
pop
xor
jnp
arpl
aaa
int
xchg
inc
outsb
mov
rcl
xchg
mov
cmp
fdivrs
and
test
mov
fstpl
cmc
and
push
xchg
or
js
mov
push
nop
test
test
adc
ds
dec
mov
xchg
jno
inc
jns
dec
adc
stc
mov
lods
lods
cmp
adc
cs
popa
sti
push
jbe
jns
shlb
pop
idivl
mov
sti
jnp
mov
mov
cmp
cld
in
repz
addr16
lods
iret
lret
dec
int3
push
sbb
scas
cld
std
adcb
xor
fs
dec
cwtl
decl
lea
pop
jmp
repnz
pop
xchg
nop
xchg
adc
jb
out
inc
mov
and
addr16
push
fsubrs
sub
cltd
es
xor
xor
jb
cmp
int3
ljmp
shrb
cmpsl
imul
bound
or
leave
aaa
sti
in
sub
out
cld
jmp
mov
js
or
push
lock
stos
mov
insl
inc
aaa
data16
out
add
inc
mov
cltd
jne
mov
insl
push
stos
repnz
pusha
pop
sbb
push
xchg
int3
les
pop
add
mov
les
int
mov
push
int3
push
xchg
rcrl
push
cli
cmp
ss
mov
sub
and
pop
push
pop
xor
arpl
push
mov
cwtl
test
in
xchg
xor
sub
cmp
mov
push
fdivr
int
stos
lret
sub
xchg
dec
lret
out
cmp
cmp
mov
pusha
cltd
mov
mov
mov
lods
pop
cmp
or
out
adc
xorps
cmpsb
ljmp
jle
mov
sub
mov
mov
inc
push
dec
adc
mov
icebp
std
fs
dec
xchg
add
dec
push
mov
xchg
mov
test
xchg
push
sub
xor
idivb
xlat
adc
cmc
pop
or
cltd
popa
sbb
addr16
mov
mov
rcr
pusha
subb
test
cli
je
pop
adc
mov
xor
mov
push
pop
pop
inc
sbb
push
ja
outsb
cmpsl
lret
sub
insl
adc
out
xor
adc
mov
test
push
inc
mov
fxch
jmp
test
aas
repnz
jp
sbb
mov
sbb
js
mov
into
mov
push
int
xor
mov
mov
mov
jnp
xchg
movq
pop
inc
cmp
inc
inc
lds
mov
icebp
and
not
enter
fidivrl
jle
je
fwait
xchg
in
fsubl
sub
lret
sbb
out
mov
mov
cmpsl
or
ja
lock
daa
sub
data16
in
mov
pop
incb
sti
pop
shlb
sbb
jg
push
aam
repz
popf
mov
mov
fcmovne
loopne
mov
add
daa
dec
outsl
fwait
pop
jge
push
mov
adc
jo
arpl
test
sti
fwait
sub
pusha
lcall
ficoml
dec
mov
push
test
roll
test
ret
inc
and
adc
or
call
mov
mov
les
movsl
ficoml
shr
rclb
dec
pushf
into
outsb
test
xor
mov
mov
pop
test
fwait
into
mov
leave
lds
mov
pop
lea
sub
stos
and
or
mov
push
lods
cmp
push
out
testb
pop
fs
xor
ds
loope
cmp
mov
dec
xchg
sbb
jecxz
push
mov
pop
loop
pushf
xor
dec
adc
imul
fcoml
jecxz
mov
inc
adc
insl
movsl
fldcw
rorl
sub
inc
lahf
sub
je
sbb
or
push
mov
or
inc
push
inc
xchg
jg
fadd
orl
mov
push
sbb
and
imul
add
fcmovne
xor
adc
fwait
inc
sar
adc
xchg
add
js
lea
xchg
cmp
pop
jns
mov
mov
in
xchg
dec
dec
cs
xor
aam
into
mov
int
ja
pop
repz
aas
bound
mov
sub
hlt
out
xor
enter
popa
pushf
sbb
shlb
inc
pushf
in
test
sbbb
xchg
push
addr16
scas
mov
test
test
in
popa
mov
popl
mov
push
xchg
ret
xor
mov
mov
mov
push
sub
xor
jbe
daa
cmp
cmpl
adc
pop
add
cwtl
lret
adcb
or
out
rcl
xchg
jle
leave
fs
jl
aas
orb
pop
nop
ret
dec
ja
sub
jg
dec
subl
sbb
cmp
dec
sub
leave
jp
aaa
sbb
mov
xor
rolb
iret
add
call
jae
push
cmpsb
rcll
outsb
frstor
mov
mov
adc
daa
xchg
adc
je
jecxz
dec
sbb
nop
repnz
pushf
and
fstpl
stc
pop
cld
xor
ja
int
lea
dec
popa
outsb
subb
sub
jnp
jbe
fcomip
mov
out
add
mov
cmp
sub
lock
insl
add
push
adc
xor
adc
sbb
dec
pop
cmpsl
and
inc
pop
int3
xor
xchg
ret
leave
xor
inc
pop
or
js
push
out
sar
jo
mov
mov
add
cmp
fsts
leave
cld
int
push
pop
pop
xchg
lea
xchg
pop
gs
pop
dec
xchg
out
outsb
out
cmp
movsl
fldl
adc
xchg
or
pop
mov
cmp
idivl
push
mov
std
mov
dec
or
xchg
stos
jae
in
loop
sbb
xchg
aad
xor
push
ss
fabs
call
shrb
outsl
push
leave
and
sub
inc
call
lock
in
mov
test
adc
mov
or
mov
mov
icebp
incb
into
inc
lcall
pop
shrb
and
enter
leave
mov
mov
out
sarl
xchg
test
outsl
int3
arpl
ljmp
in
add
xor
fs
ss
insb
add
cmp
hlt
pop
lahf
pop
sub
fists
leave
dec
pop
or
or
mov
outsb
push
in
xor
fildl
cmc
push
mov
negl
dec
mov
dec
shl
mov
addl
ds
pop
scas
xor
and
mov
lods
mov
xchg
imulb
dec
push
pop
or
test
aam
jo
fadds
sub
mov
lock
xor
sti
xlat
in
jne
lret
scas
ljmp
cmp
cld
ret
push
mov
inc
inc
loopne
sbb
stc
adcl
cmp
mov
test
dec
add
fisttpll
adc
cmp
das
cli
lcall
pop
es
scas
test
iret
jecxz
lahf
jns
fdivrp
inc
lds
adc
arpl
popa
jno
or
loope
xchg
fsubr
dec
sub
jle
xchg
mov
mov
inc
jl
xor
or
ds
sub
inc
std
mov
dec
js
lahf
in
cmp
adc
add
pop
outsl
sub
xor
mov
xor
mov
fimull
test
and
mov
hlt
xor
outsb
mov
sbb
or
mov
push
je
add
xchg
dec
stos
push
ja
jae
insl
jge
or
xchg
aam
cmp
and
sub
cmp
dec
dec
push
or
repz
fs
mov
jnp
push
ret
test
adc
out
cmp
adc
nop
push
scas
rcrb
loopne
cmp
xchg
out
lods
or
std
dec
and
xlat
rorb
push
cmp
fwait
sbb
test
test
sbb
adc
shl
xchg
lahf
ret
call
pop
das
jle
push
sbb
pusha
std
test
dec
jmp
je
push
sub
das
push
mov
in
adc
jl
test
gs
lock
cltd
scas
daa
cmp
mov
ret
into
and
clc
adc
fidivrl
push
insl
sbb
adc
je
inc
jmp
adc
adc
cld
cmp
or
sub
lods
and
lods
sti
mov
adc
xorb
sarb
cmp
sub
jl
push
call
pushf
fbstp
inc
mov
jp
mov
out
jecxz
enter
xor
and
sub
ja
mov
out
inc
dec
dec
or
lock
pop
jns
mov
pop
xchg
call
gs
fnstsw
lods
cmp
cmp
shlb
xlat
jmp
mov
loop
shll
out
clc
js
cmp
dec
iret
jmp
jle
test
out
sub
adc
lods
outsl
adc
mov
push
cld
xor
xor
xor
jmp
enter
lahf
xchg
fmull
icebp
lret
shll
jb
je
xor
out
lret
jge
cmpb
shrl
pop
lods
push
sub
int
call
xchg
mov
loopne
dec
in
in
rol
push
fsubs
out
call
adc
xchg
jmp
pop
pushf
leave
inc
in
jl
pop
call
mov
bound
jle
jbe
push
pop
push
fdivl
fcoms
in
fmull
pusha
dec
push
xchg
rorl
out
sbb
mov
loopne
movsb
fstpl
dec
cmp
cmpsb
and
xchg
xor
xor
lahf
fcomp
xor
jmp
js
aaa
ljmp
shlb
or
and
aad
xor
insb
mov
xchg
lret
nop
ret
insb
jmp
xor
aas
ljmp
cmp
aas
lahf
mov
and
or
mov
aad
mov
lods
mov
cmp
fisubrl
jnp
mov
pop
ja
out
cli
push
mov
rcrb
sub
dec
mov
mov
popf
dec
fcoml
imul
addr16
xor
fcoml
pop
iret
pushf
mov
xchg
clc
sarb
xor
insl
pop
movsl
mov
xor
sbb
mov
dec
daa
push
in
add
jmp
iret
jno
fdivs
inc
std
das
es
adc
mov
sub
sub
lods
shr
jge
push
adc
movsl
dec
shll
xor
lret
sti
call
rol
test
daa
inc
add
in
scas
fcmovbe
and
fcmovnu
sub
dec
loopne
add
gs
mov
and
pop
fisubrl
imul
in
into
outsl
sub
xchg
out
mov
lahf
std
les
dec
ret
fwait
idivl
fidivrl
pop
cld
idivl
push
lock
int3
out
mov
jnp
jp
push
lcall
push
inc
xchg
pop
cmc
fcoms
dec
loope
dec
inc
in
sti
jno
push
add
jb
aad
push
aad
pop
mov
push
xor
scas
insb
cmp
fldenv
mov
mov
imul
scas
dec
scas
std
fnstsw
scas
pusha
enter
xor
push
pop
push
push
loop
lret
cmpsl
sti
mov
fucom
ret
inc
and
mov
daa
movsb
jae
pop
adc
cmpsb
repnz
sbb
mov
movsb
jmp
jg
jns
sub
or
idivl
push
outsl
int3
pop
cmc
test
push
pop
imul
jle
cltd
je
xor
ret
sub
push
jb
imul
je
dec
rorl
out
cmp
mov
mov
stc
pop
cmpsb
cmpb
inc
sbb
mov
pop
nop
or
andl
push
xchg
dec
push
sahf
cmpsl
jp
inc
cld
inc
test
adc
xlat
lret
imul
mov
hlt
jae
std
mov
mov
aas
push
push
adc
add
cmp
mov
mov
inc
enter
sbb
out
lret
push
cli
xchg
test
aaa
cmc
xlat
gs
and
hlt
mov
cmpsb
jno
out
hlt
dec
insl
dec
mov
in
fucomip
cld
pop
jae
mov
sti
or
jbe
pop
inc
pop
sub
int
fistpl
js
cwtl
mov
rolb
sbb
pop
int
xchg
ret
push
lds
cltd
mov
dec
jg
adc
scas
push
pop
xchg
rorl
imul
mov
shlb
addb
pusha
dec
mov
or
fldt
ljmp
movsl
adc
mov
imul
push
test
ret
in
jmp
cs
out
add
push
jle
ficoml
stos
mov
or
mov
sti
out
mov
pop
and
ds
stos
out
dec
imull
add
outsl
sub
je
dec
scas
fprem1
dec
fs
loop
jno
mov
mov
push
mov
pop
adc
mov
sub
stc
in
push
ret
repnz
mov
inc
fbstp
and
mov
mov
dec
mov
dec
jecxz
enter
add
into
xbegin
movq
mov
jmp
mul
lock
into
ret
lcall
xor
sbb
int
enter
sub
xchg
ficomps
or
inc
push
fld
mov
xchg
push
pop
sub
cwtl
xchg
dec
test
add
push
xchg
arpl
fstpl
out
cmp
inc
bound
inc
jnp
pushf
mov
pusha
repnz
mov
rorl
dec
xor
mov
xor
pop
notb
sahf
pop
dec
mov
das
adc
andl
bound
cmpsl
arpl
mov
lret
cmc
push
stos
push
ljmp
sti
aaa
call
fwait
out
jae
cmp
inc
cs
jmp
mov
xchg
mov
orl
pop
cmp
cmp
dec
mov
shrb
fstp
pop
into
clc
jbe
icebp
imul
and
xchg
loope
rol
adc
fnsave
dec
pop
mov
xchg
shr
xor
sub
or
shll
shll
sub
bnd
mov
div
out
cmp
rcrb
es
push
jg
stc
lahf
xlat
scas
mov
loop
orl
sahf
jecxz
fistps
mov
mov
into
stc
sti
mov
mov
push
adc
jl
mov
mov
jg
pop
leave
and
push
mov
mov
jge
lds
mov
arpl
scas
inc
lds
sub
pop
dec
or
divb
sbb
call
clc
inc
mov
loope
aad
xchg
nop
int
pop
pop
clc
stc
pop
pop
cli
xor
ret
pusha
mov
test
and
sahf
ret
push
leave
jge
fdivrs
push
dec
and
loope
xlat
incl
dec
icebp
and
dec
xor
daa
push
jp
or
imul
in
push
arpl
mov
mov
jecxz
lret
in
pusha
out
shl
sbb
into
fcomps
sbb
shrb
rcl
popf
mov
mov
clc
repz
inc
and
sub
pop
int3
arpl
pop
ds
mov
inc
enter
dec
mov
sahf
mov
sets
mov
std
sbb
or
nop
popf
fstpl
rcll
lods
adc
or
popl
loope
ficoml
inc
mov
xor
ljmp
sahf
ljmp
shll
sbb
ss
cmpl
push
mov
mov
xchg
dec
jmp
adc
sti
push
or
scas
fs
imul
arpl
lods
lock
dec
jmp
adc
dec
jg
rorb
jge
dec
nop
push
or
int3
jl
mov
out
popa
adc
arpl
cmpsl
cmp
or
movsb
stc
mov
cs
push
cmp
push
adc
call
loope
jo
pop
imul
xchg
pop
push
gs
incl
mov
ljmp
lds
hlt
pop
insb
pop
mov
add
sahf
fldcw
jl
and
enter
pop
jecxz
push
insb
imul
je
jl
outsl
cli
xor
loope
and
int3
adc
daa
les
imul
pusha
emms
push
cli
mov
in
scas
and
xchg
mov
fcmovne
stos
sarb
ret
test
into
imul
ret
imul
mov
aas
mov
cmc
push
out
add
lods
dec
jl
shrl
pop
pop
xchg
cmpsb
push
jnp
jl
xor
cltd
pop
stos
stos
cmpsl
fiadds
loope
dec
mov
push
xor
adc
ret
int3
and
sti
pop
pop
jp
leave
popf
pop
push
ret
into
lock
xor
push
add
xlat
xor
mov
xor
es
mov
iret
sub
pop
cmpl
dec
call
mov
xchg
mull
sub
mov
int
add
negl
mov
jns
outsl
push
leave
pusha
hlt
ljmp
add
hlt
cmc
outsb
loopne
jp
jp
test
lcall
inc
mov
pop
ret
pop
push
adcl
add
xor
mov
ss
sbb
ror
imulb
push
sub
jmp
int3
push
lock
xchg
test
js
jb
pop
pop
sub
pop
inc
pop
in
mov
dec
push
mov
insl
outsl
out
adc
shlb
jp
xor
sub
imul
sbb
mov
xchg
insb
test
mov
or
push
adc
fnstcw
mov
call
lcall
aaa
push
incl
mov
icebp
lcall
sbbl
int
js
mov
out
mov
add
ss
sub
icebp
ret
pusha
xchg
or
iret
sbb
rclb
mov
xor
sbb
or
mov
and
rorb
fldt
push
sub
or
fsts
jl
push
in
jg
mov
push
js
movsl
pop
data16
mov
jnp
xchg
rcrb
inc
xor
cltd
sbb
cmp
adc
sub
cld
push
xor
fs
movsb
popa
push
inc
and
insb
stos
jnp
jl
rorb
or
es
in
jmp
mov
adc
inc
dec
loope
std
dec
flds
in
cltd
insl
jo
push
or
jle
stc
cmp
sub
movsb
mov
jb
inc
jbe
pop
roll
push
lret
cmp
insb
add
dec
fmul
cmpsl
popf
xor
pop
pop
test
jg
jne
in
xchg
stos
pop
push
lods
push
test
test
xlat
jmp
in
pop
inc
xor
mov
pop
inc
dec
lret
jae
mov
rorb
mov
cld
push
mov
jbe
loope
loop
fimuls
xchg
in
inc
mov
xor
int
daa
fmuls
pop
scas
pop
xchg
cmp
push
add
fdivrp
xor
cmp
icebp
cwtl
imul
popf
popf
lcall
dec
jg
and
bound
test
inc
adc
jmp
cmp
mov
pop
dec
cmp
dec
jns
inc
jg
cmc
adc
adc
repnz
inc
popa
jb
cmpsl
sub
sbb
pop
scas
neg
xchg
mov
pop
pop
popf
xchg
cmp
jmp
aas
sub
imul
mov
imul
adc
pop
cmp
fs
dec
push
or
cmpsl
fstpl
cwtl
or
add
icebp
lret
subb
mov
sbb
mov
sub
xchg
stc
push
into
aaa
daa
aad
imul
je
frstor
lret
mov
xchg
or
test
mov
lret
lret
jmp
pushf
push
dec
rclb
int3
testl
adc
inc
repnz
dec
ret
daa
add
inc
pusha
fwait
shrl
flds
push
loope
jb
cmpsl
mov
out
mov
ljmp
or
xchg
jns
jl
mov
rcll
ljmp
jnp
je
in
ljmp
lea
jae
sahf
mov
rorl
les
scas
sub
mov
cmp
mov
mov
adc
mov
in
jne
inc
imul
inc
fs
shl
pop
mov
fwait
ljmp
jmp
shrb
dec
sti
mov
sub
push
into
outsb
lods
in
adc
leave
lods
leave
pop
cmp
out
aas
cmp
call
sub
mov
add
mov
pop
inc
sub
mov
popf
xchg
adc
addr16
dec
xchg
repz
xor
xchg
into
je
xchg
push
sub
xor
scas
inc
and
orb
jnp
ficomps
pushf
pop
adc
xor
push
mov
movsl
loop
fisubs
ljmp
lds
test
or
cltd
xor
ffreep
xchg
rolb
sbb
stc
fnsave
outsb
sbb
cmpsl
dec
hlt
not
mov
pop
sbb
mov
loop
gs
adc
mov
mov
jae
dec
jg
andl
out
jmp
loop
fiaddl
repz
xchg
inc
dec
mov
aas
das
test
shlb
icebp
jmp
popa
xacquire
in
mov
or
aad
lock
nop
push
pusha
xor
cwtl
lods
lahf
fsts
filds
scas
adc
xchg
popf
jge
popa
jp
push
mov
sub
mov
jnp
jmp
jmp
inc
cmpsl
cli
cmp
sarl
xor
jle
testb
rcrb
push
sub
inc
inc
mov
js
imul
sbb
scas
pop
daa
cmp
pop
jb
jp
lahf
fnsave
ja
xor
pushf
shr
fsubs
popa
pop
pop
aas
xchg
leave
inc
push
inc
hlt
daa
cmpb
dec
xchg
mull
roll
iret
jne
adc
mov
pop
bound
in
add
movsb
cltd
xor
dec
daa
sahf
hlt
push
mov
mov
sub
test
rclb
in
pop
pop
rorl
js
lret
inc
lret
fadd
mov
daa
dec
mov
aaa
adc
pop
xchg
fiaddl
mov
decl
xchg
popa
sahf
shl
loope
push
out
out
cltd
es
mov
push
in
xchg
andb
shl
flds
data16
fimull
sahf
mov
add
cmpsb
mov
mov
add
add
xor
mov
incl
add
mov
out
lret
loope
push
insl
dec
push
mov
cmp
hlt
jo
and
jl
stc
stc
inc
sub
mov
push
lret
jnp
leave
ljmp
rsm
inc
dec
push
and
sub
inc
sub
pop
xlat
push
mov
flds
fdivl
les
dec
dec
outsb
pop
and
lret
adc
push
and
clc
sub
test
out
sbb
roll
pop
fldl
pop
xor
push
int
xor
test
xor
cmc
push
pop
lock
xchg
imul
push
fisubrs
dec
xor
jle
xchg
pop
aad
loope
cmp
mov
mov
lods
fldt
stos
sbb
sub
scas
nop
push
jge
push
lea
aam
not
jmp
int3
add
sti
pop
mov
jo
pop
push
in
jae
mov
jb
repz
dec
mov
cli
and
lods
lock
mov
mov
mov
mov
adc
lods
ret
and
into
lcall
push
and
divl
out
and
decb
or
xchg
sbb
xor
jno
add
fcomps
cmp
test
pop
adc
jb
and
lret
mov
mov
test
inc
jp
repz
or
int3
jb
push
fwait
movsl
pop
push
lods
mov
faddp
xor
mov
and
or
test
or
push
daa
out
aad
shlb
or
add
xchg
dec
add
adcl
loop
repnz
lods
push
cs
andl
inc
sub
pop
ficomps
jno
dec
int
or
pop
aaa
xchg
push
inc
ret
jmp
sub
in
push
cs
lea
ja
mov
out
mov
mov
ds
test
shlb
pop
jmp
loope
test
sub
dec
cld
mull
pop
sti
adc
and
xchg
push
and
and
insb
outsb
inc
lds
aam
divl
or
jno
and
push
inc
les
sbb
dec
test
inc
test
push
es
insl
sbb
cmp
xchg
jne
fstpt
cmc
pop
lahf
cltd
fidivl
jmp
lods
dec
loop
ljmp
fsubl
dec
jp
insl
sbb
sbb
pop
icebp
fnstsw
shlb
add
push
sbb
push
int3
data16
test
mov
addl
cli
add
fcompl
push
ljmp
mov
wrmsr
mov
lahf
loopne
pop
movsl
lods
dec
pop
dec
push
fmuls
push
out
dec
add
inc
movhps
sbb
lea
add
fwait
sbb
xchg
mov
add
into
bound
push
out
adcl
lock
subl
ds
mov
and
sbb
add
pop
inc
hlt
mov
jge
xchg
inc
xchg
xchg
push
pop
cmp
fisubrl
movsb
fsts
or
test
xor
out
pop
jne
popa
pop
in
sub
inc
adc
xchg
xchg
ja
arpl
adc
dec
dec
mov
popf
push
dec
mov
ja
dec
mov
test
xchg
cmp
popf
arpl
xchg
into
jbe
xor
call
xchg
rolb
fcmovne
ret
jb
sub
mov
xchg
fcmovnb
fcmovu
nop
dec
int
inc
jle
in
scas
out
add
test
js
std
sub
cmp
xchg
orb
fs
jle
sahf
stos
jp
stos
int3
movsb
pushf
std
adc
je
cmp
shll
jb
dec
pusha
icebp
mov
stos
mov
pop
mov
sub
stc
mov
lahf
repnz
xchg
cmp
dec
addr16
mov
in
daa
sbb
mov
lods
push
das
lcall
nop
or
mov
mov
fwait
gs
push
mov
jecxz
loopne
mov
cmc
pusha
lock
mov
fs
jbe
movsb
jo
movsb
in
xor
fsub
mov
push
mov
pop
out
jg
jns
stos
cs
sbb
outsl
mov
push
jae
xchg
ljmp
fstl
inc
sbb
repnz
sub
push
fimull
jnp
inc
inc
fucomp
ljmp
pcmpgtw
jnp
sub
mov
cmp
imul
rcrb
int3
dec
lea
and
js
popa
pushf
cmp
aas
adcb
push
test
xchg
popf
dec
jmp
movsb
jno
xchg
sbb
movsl
daa
leave
decb
and
fdivr
xchg
pop
leave
out
xor
addr16
mov
lds
xchg
adc
jmp
mov
fdivrl
rcrb
lcall
xor
in
insl
xchg
fs
scas
fisubrs
jbe
int
mov
inc
inc
ljmp
inc
cwtl
out
sahf
mov
xchg
lods
inc
dec
push
xchg
mov
pop
js
xchg
out
fucomi
cmp
ljmp
dec
mov
cmp
aas
inc
and
jl
or
or
lret
imul
mov
test
push
imul
daa
rcr
xchg
mov
add
jp
inc
lret
in
fdiv
sub
in
lcall
push
mov
jg
jecxz
jno
push
jne
add
mov
inc
adc
in
mov
sub
mov
mov
nop
mov
or
outsl
jnp
push
push
vpaddsw
push
mov
aas
adc
js
mov
jge
out
push
mov
cs
xor
adc
sbb
xchg
pop
and
sub
test
push
pop
add
mul
pop
jns
and
or
aas
pop
leave
jecxz
je
xor
cltd
cmp
mov
mov
adc
cli
sarb
je
mov
and
sbb
imul
pop
dec
dec
dec
xor
fwait
jnp
add
lods
data16
pushf
fldcw
jle
repz
push
in
data16
rcpps
gs
inc
aaa
mov
in
push
insl
add
dec
mov
subb
xchg
cli
dec
popa
mov
dec
pop
xor
jae
adc
popa
sbb
mov
addr16
lret
mov
stos
scas
inc
leave
les
jecxz
js
add
cmp
stc
push
lods
fwait
pop
xor
mov
add
adc
mov
daa
sub
aaa
adc
cwtl
jl
icebp
mov
sbb
in
inc
inc
shll
test
push
mov
dec
rclb
push
jnp
mov
rcr
push
dec
mov
cs
mov
and
aas
insl
jne
push
push
lahf
fwait
out
loop
roll
and
jmp
mov
loop
sbb
xchg
fcom
out
dec
sbb
loop
mov
pushf
add
xlat
xchg
repz
xor
pop
mov
enter
lahf
xchg
mov
inc
mov
push
arpl
inc
ljmp
in
aad
sahf
das
cli
adc
jmp
mov
mov
hlt
inc
movsbl
pop
pop
xor
pop
push
cmp
stos
add
sub
adc
js
or
repnz
icebp
stos
lret
cmp
jo
repz
pop
pop
clc
cmp
jae
dec
mov
mov
enter
push
out
adc
xchg
sahf
xor
mov
inc
add
ret
sahf
xchg
fstpt
mov
iret
int3
lods
pop
sbb
rolb
push
cmpsb
ljmp
dec
push
dec
push
movsl
loop
hlt
pop
sahf
stos
sahf
jnp
addr16
in
bound
lea
lds
movsb
mov
fdivl
mov
mov
xor
repnz
xchg
je
insl
xchg
add
shl
cmp
or
aaa
mov
in
cs
or
push
call
xchg
dec
mov
fsubr
aas
cld
out
shll
jg
sub
out
pop
fnsave
movsl
sbb
mov
std
fldl2e
xor
aaa
sbb
sub
test
cli
mull
lock
push
mov
dec
push
xchg
pop
dec
mov
mov
bound
push
iret
daa
mov
cmp
in
mov
dec
and
iret
or
fwait
mov
rcll
xchg
xlat
in
sbb
pop
xlat
xchg
lods
es
push
shll
call
xor
push
push
pop
push
inc
add
out
xchg
jbe
or
inc
jecxz
jns
roll
cwtl
aad
and
fadds
mov
mov
sbb
in
cmp
mov
add
shrl
dec
mov
fstpt
mov
pop
sbb
jo
mov
sahf
mov
daa
aam
sahf
arpl
fwait
test
cmp
ljmp
mov
xlat
loop
lahf
stos
add
nop
sbb
jb
inc
mov
fbstp
outsl
sbb
cmp
cmp
addps
cmp
adc
adc
jle
out
shl
fldcw
pop
fsubrs
add
idivb
xchg
add
cmpsl
sbb
loope
add
ficompl
mov
iret
test
daa
rcll
test
shlb
xchg
or
push
mov
add
mov
and
sbb
aad
adc
arpl
movsb
ljmp
xchg
xchg
xlat
xor
fnstcw
and
popa
xor
lret
jle
lock
mov
xor
xchg
js
adc
call
fucomp
stos
jle
add
mov
dec
sub
push
arpl
lds
mov
stos
or
pop
scas
cmpb
pop
xchg
lret
aad
idivl
insb
in
scas
mov
xchg
sbb
test
pop
test
fwait
pop
cmp
inc
ja
jp
test
bound
lahf
xchg
sub
andb
cwtl
test
mov
neg
dec
aad
inc
cs
js
inc
movsl
fildll
outsb
jnp
aam
lcall
pop
xor
lock
mov
sub
sub
sub
xor
push
xor
mov
lahf
push
scas
jg
mov
shufps
pop
das
push
add
sbb
rorb
add
arpl
jmp
nop
push
dec
lcall
out
aam
cmp
cmpsl
mov
pushf
cli
out
xor
in
ss
cs
pop
lods
in
pop
lods
movsb
imul
inc
mov
rcrl
adc
iret
jne
jle
lea
incl
movsb
minps
ret
jae
pop
movsl
jecxz
and
xor
aam
shrl
jno
fisubl
icebp
mov
out
test
cmpsl
and
in
in
pop
cmc
sub
pop
xorb
cli
jns
sbb
ret
dec
cmpsl
repz
lods
rcrl
pop
sbb
pop
into
adc
cmpsl
add
cmp
push
and
ja
sub
and
testb
or
fcompl
in
cld
clc
cmpsl
xor
mov
xchg
jl
pop
int3
xchg
push
imulb
inc
pop
mov
hlt
jge
mov
mov
jb
inc
jge
mov
and
test
dec
dec
lahf
or
movsb
pop
adc
fwait
jl
cmp
push
int
movsb
cmc
xchg
push
or
mov
ds
leave
int
nop
add
push
xchg
and
push
imul
jne
leave
inc
jns
das
into
cmpsb
push
push
mov
scas
daa
cmp
stc
iret
and
negb
movsl
add
icebp
adc
mov
imul
xlat
mov
cmp
xchg
enter
cmp
xchg
mov
jae
ja,pn
aam
out
out
sbb
test
mov
push
test
mov
pop
lea
into
jb
or
mov
fisubs
je
call
jl
xor
jnp
insb
int3
shrl
or
add
cli
or
cs
leave
adc
jg
imul
mov
cmp
les
fldl
or
sub
dec
scas
dec
std
sub
push
ss
add
pop
mov
add
je
call
xchg
ret
and
rorl
lock
mov
mov
push
das
ss
add
clc
pop
or
sbb
mov
mov
inc
lods
mov
jmp
addr16
pop
mov
push
mov
cmpsl
je
arpl
push
push
dec
xor
clc
aam
pop
popa
iret
test
es
fldl
fwait
lret
mov
mov
inc
push
push
mov
adc
outsl
and
clc
inc
pop
xchg
in
int3
out
out
dec
jg
dec
xchg
xchg
add
and
jp
lahf
ret
dec
lds
pusha
xchg
aam
xchg
sbb
lret
xchg
adc
xor
lds
mov
ss
cltd
loopne
cltd
inc
lcall
mov
mov
pusha
out
mov
mov
in
xchg
push
jp
cmp
inc
pop
in
pop
sbb
sbb
leave
xorl
clc
inc
call
test
sub
aas
cmp
inc
inc
fcompl
inc
nop
sub
sub
xchg
add
jmp
cld
xor
scas
jle
adcb
ljmp
sbb
mov
mov
mov
aam
xor
mov
or
aaa
mov
cld
repnz
and
enter
lahf
or
dec
shrl
dec
dec
inc
push
and
call
fmul
stc
out
pop
sarl
jnp
and
nop
outsb
mov
addb
pop
adc
adc
aam
jne
test
data16
pop
xchg
mov
mov
loope
andl
dec
cld
or
push
lret
daa
notl
sarl
sub
mov
inc
lods
inc
mov
fiadds
sahf
adc
and
xor
int3
in
aad
cmc
and
setge
jne
push
loopne
mov
scas
iret
pusha
leave
push
lds
xchg
or
cwtl
pop
and
push
in
cmpsb
push
rolb
pop
and
fldt
jp
leave
jnp
aad
add
pushf
lcall
pushf
mov
insl
out
test
mov
fwait
push
push
xchg
jp
pop
dec
std
and
cmpl
mov
or
push
jns
add
adc
or
dec
jl
mov
daa
cmp
cmp
jae
in
jbe
movsl
stos
xchg
nop
mov
dec
dec
leave
mov
stc
js
call
add
or
sub
xor
lret
push
repz
in
es
push
mov
mov
xchg
dec
jecxz
adc
mov
jbe
filds
leave
int3
xchg
arpl
push
test
lret
pop
cli
mov
cmp
loop
rcll
inc
aaa
dec
stos
sub
mov
sti
mov
cmp
jmp
popa
cs
out
out
lea
jbe
push
adc
mov
ss
mov
je
sbb
sub
mov
inc
xchg
cmp
test
lret
and
icebp
adc
adc
sub
push
mov
dec
aas
out
and
jo
lock
out
add
xor
in
xchg
mov
outsl
aas
repz
mov
and
in
sbb
idiv
sbb
add
pop
mov
sbb
cmp
jecxz
in
daa
mov
jle
fisttpll
pminub
mov
cmp
pop
jo
fbstp
pop
adc
jbe
rorb
mov
sbbb
adc
push
sbb
loope
push
push
inc
adc
in
mov
in
lods
adc
leave
fs
fdivl
jmp
mov
testb
mov
out
je
mov
pop
jno
movsb
das
jp
cli
out
mov
in
adc
pusha
jnp
aas
push
inc
loope
lea
sbb
cmp
adc
push
or
stos
in
pop
jp
inc
cmovns
test
cmp
shll
mov
getsec
clc
lcall
jle
push
push
sti
fxam
or
cmpb
jge
sahf
or
jb
mov
mov
dec
push
idivl
add
mov
psrad
jecxz
cmpsl
sahf
out
test
loope
xchg
and
or
xchg
sub
dec
xlat
popf
movsb
push
jecxz
push
and
and
cmp
inc
stc
mov
xor
fadds
js
mov
sub
push
push
mov
aam
cld
mov
mov
popf
iret
movsl
xchg
or
xor
mov
xchg
jne
out
rcr
sub
mov
xchg
lock
pushf
inc
jl
cmp
add
arpl
jp
data16
and
mov
or
test
lahf
push
ljmp
jg
in
adc
push
xor
dec
mov
mov
jmp
sub
add
bound
out
inc
aas
mov
dec
mov
pop
cmp
pop
fiadds
arpl
fnstcw
mov
mov
pusha
das
mov
lret
in
xor
fisttpl
cmp
sbb
out
repz
dec
std
push
cwtl
test
xchg
xor
xchg
imul
fcom
mov
mov
add
imul
lods
mov
lcall
jo
insb
movsl
mov
test
push
insl
and
nop
jno
lret
sbb
hlt
cld
ja
cmp
cltd
outsb
jmp
or
jmp
adc
or
ja
ljmp
adc
xchg
jmp
testb
sub
aad
in
insb
jg
ljmp
dec
les
inc
mov
lock
out
jecxz
xchg
push
ret
in
push
in
mov
push
sbb
ds
div
repnz
jmp
inc
sub
xor
mov
iret
loope
xor
divb
mov
mov
mov
adc
int3
adc
fimuls
in
add
scas
imul
lahf
js
in
jmp
or
std
fdivrl
sbb
or
sti
or
xor
or
out
sbbb
sbb
adc
lret
pop
pop
mov
iret
adc
cmp
andl
insb
push
pop
or
pop
lcall
mov
fcoml
and
mov
mov
xchg
cmp
pushf
and
clc
stos
add
fs
jae
filds
and
adc
mov
rcrb
dec
addr16
pop
cmc
fmull
sbb
push
xchg
sbb
xchg
std
into
ret
pop
fnstenv
pop
int
fildl
and
cld
movsb
mov
ret
jl
mov
test
push
fdivrl
test
loopne
xlat
jno
xchg
mov
mov
vmwrite
adc
xor
xchg
mov
cmp
aam
pop
clc
in
repz
std
and
and
in
lcall
imul
jecxz
dec
dec
adc
add
push
in
cmp
imul
dec
add
xor
insb
mov
pop
jno
mov
pop
testl
inc
xor
cmc
xchg
andl
cmp
sub
xchg
and
leave
or
ds
xchg
insb
outsb
inc
leave
add
lods
add
stos
test
or
icebp
pop
mov
fcoms
push
xor
jp
jns
push
mov
inc
jbe
fwait
jmp
call
je
outsl
fstpt
cmp
and
cmc
lds
movl
mov
inc
cmp
cmpsb
lods
push
cmc
push
cmc
xchg
js
repz
xchg
or
shlb
aas
aas
test
pop
jle
or
push
sub
lea
outsb
fs
mov
xchg
test
rcr
imul
sahf
scas
repnz
xchg
insl
lock
mov
ror
mov
pop
xchg
sub
pop
pop
bnd
out
sub
sub
push
sbb
leave
imul
xor
push
test
xchg
rcrb
jnp
aaa
fs
test
in
pop
repz
mov
in
pop
pop
push
testb
stos
pushf
insl
jg
mov
mov
fs
push
test
ja
pop
faddp
lcall
xchg
mull
fstps
in
mov
mov
pop
data16
sub
or
push
sbb
popa
cmpsl
cmp
adc
xchg
inc
push
shl
jp
xor
aaa
xchg
fcomp
in
sub
pusha
mov
es
inc
pop
mov
out
leave
dec
sub
mov
movsl
push
test
push
sbb
iret
lahf
and
mov
inc
outsb
cmp
xchg
shlb
xchg
bound
cmp
es
dec
mov
xlat
in
pop
out
pop
outsl
fs
cmp
xchg
cmp
aam
cmc
fwait
or
add
mov
mov
add
fimuls
xchg
add
int3
jp
xchg
jb
jecxz
inc
sbb
push
loopne
std
and
sbbb
outsb
shll
push
push
enter
or
test
cmpsb
cmpsl
hlt
jge
pusha
shll
mov
and
inc
push
sub
adc
sti
mov
mov
in
jmp
arpl
mov
mov
fs
mov
xorb
xor
lret
push
popf
in
or
pop
rcrl
push
add
lods
xchg
jg
and
scas
xlat
mov
jbe
ret
iret
negb
xchg
das
lahf
pop
or
das
cld
add
mov
into
sub
or
sub
xchg
fs
je
add
adc
adc
sub
ss
sub
push
sbb
lods
incb
jne
adc
xlat
jl
inc
or
mov
or
int
add
mov
jmp
fidivs
ja
inc
adc
ss
out
sarl
pop
fnstenv
inc
enter
cs
ret
in
push
add
cmc
js
fadds
mov
push
push
mov
xchg
enter
mov
add
mov
in
sub
and
inc
out
in
push
mov
cmp
sbb
jmp
lods
ds
cwtl
pop
jnp
out
mov
pop
ds
sbb
xchg
cld
mov
lods
nop
movsl
jno
in
shll
lods
add
pushf
popf
in
mov
sub
pop
add
cmpsb
dec
cwtl
xchg
jl
sti
into
stos
dec
inc
jae
and
inc
sbb
push
dec
dec
mov
lock
stc
xor
xor
rcrl
ljmp
xchg
mov
jb
add
add
lock
out
pop
insl
dec
mov
out
lock
fiaddl
fnstsw
ret
jg
push
dec
xchg
pop
cmp
mov
in
out
xchg
ds
jmp
sahf
cmc
fnsave
xor
mov
lahf
fstpl
stos
ljmp
cli
or
jo
cli
inc
sub
add
repz
test
sti
rcr
push
mov
mov
adc
cltd
push
gs
int
mov
jae
and
imul
outsb
outsl
stos
xlat
push
aas
pusha
lret
lea
mov
and
pop
in
leave
cli
fidivrl
std
loopne
push
inc
sub
inc
mov
imul
mov
add
sbb
outsb
xchg
lret
jg
push
xchg
inc
mov
and
mov
ret
lds
pop
xlat
fdivrl
push
lods
roll
sbb
and
pop
xor
hlt
and
ret
scas
mov
insl
es
fldl
add
or
sub
push
mov
sbb
inc
jmp
js
add
icebp
insb
repz
jg
dec
in
sbb
cwtl
xlat
sub
ret
push
or
subb
ret
sbb
sub
arpl
ljmp
xchg
or
lret
std
lea
je
jnp
mov
mov
testb
js
inc
xchg
lahf
or
inc
sbb
mov
xorb
pop
mov
gs
dec
int3
aam
cmp
outsl
dec
mov
cmc
sbb
cmc
jecxz
and
ret
fcmovnbe
sbb
push
dec
mov
pop
mov
lret
push
mov
sbb
shrb
xorb
in
repnz
or
or
mov
fwait
outsl
cs
shl
push
mov
cmp
int3
into
jecxz
mov
mov
bound
mov
mov
sbb
dec
rcrl
cmpsb
xor
xchg
jne
mov
jb
fdivp
pop
adc
push
push
shlb
mov
mov
mov
movsb
sub
mov
je
stc
daa
call
or
push
mull
xor
int
loop
cmp
and
test
test
into
out
rorl
pop
pusha
mov
test
mov
adc
push
es
mov
or
push
inc
daa
je
ljmp
xchg
test
lea
inc
and
mov
inc
mov
xorb
out
mov
xor
loope
subb
int
cmp
mov
ss
push
pop
cltd
cmp
ja
scas
inc
lods
loope
mov
pop
xor
movsb
out
xchg
aas
xor
adc
jno
mov
xchg
dec
mov
xchg
sbb
sbb
adc
push
inc
pop
imul
sbb
xchg
and
popa
jl
jae
inc
sub
sbb
cli
dec
inc
adc
ljmp
stos
movsb
jns
mov
int
pop
sarl
xor
lea
mov
cmp
adc
andl
ret
sarb
mov
xlat
xchg
or
mov
inc
mov
dec
test
inc
mov
and
xchg
jecxz
ficompl
jo
arpl
cmp
mov
mov
inc
or
out
inc
dec
inc
cmp
sub
sub
lock
pop
mov
andb
sbb
dec
cmpsb
cmp
sarb
xchg
cmc
subb
in
mov
rcr
pop
imul
pop
fidivrs
inc
mov
xchg
inc
sub
inc
lret
into
push
lahf
lcall
cmp
jbe
adc
sahf
mov
push
es
jmp
xchg
dec
and
sub
mov
mov
jns
cmpl
or
push
mov
repz
mov
fcoml
sbb
cld
aad
frstor
sbb
stos
testb
in
scas
jmp
lods
sti
aaa
ret
xor
xchg
in
pushf
dec
ret
jl
clc
fstpl
jnp
icebp
add
aad
inc
lahf
ss
arpl
into
jb
xor
mov
mov
imul
jns
fistpll
stc
out
insl
pop
in
xlat
sbb
push
push
mov
pop
push
adc
and
mov
mov
aad
mov
cmp
mov
loope
mov
jae
orl
fdivrl
imul
lcall
lcall
loop
stos
adcb
adc
std
daa
jbe
test
xor
test
aas
pop
cmpsb
movb
and
lods
xor
inc
scas
int
push
push
dec
mov
dec
jns
or
mov
je
adc
insw
cmp
push
xor
out
sub
popa
test
scas
imul
loope
popa
jl
out
rorl
mov
sarl
inc
idivl
dec
dec
rcll
sahf
bound
jmp
dec
xchg
in
inc
sub
mov
mov
jne
mov
addr16
addl
xor
leave
or
test
jae
push
pop
pop
cmp
pusha
in
mov
lahf
inc
and
pop
test
add
adc
mov
push
jo
stc
imul
ss
movsl
ds
ffreep
mov
xor
adc
pop
and
rcr
cmp
ss
pushf
xor
roll
xchg
xchg
inc
incl
push
jl
fstl
cld
or
lahf
das
xchg
cmp
addr16
outsb
or
loope
loope
hlt
mov
sub
dec
mov
pop
lcall
iret
fxch
aaa
in
sbb
sbb
es
scas
clc
inc
jno
lea
sti
push
inc
mov
rcrb
xorb
or
jne
loopne
cwtl
push
dec
mov
cld
jg
jo
fdivrs
jo
fs
push
add
adc
dec
mov
sahf
stos
cs
data16
pop
iret
pushf
hlt
mov
les
rolb
sbb
loope
stos
jo
repz
mov
jecxz
sub
xor
icebp
xor
data16
adc
push
cmp
aaa
xchg
icebp
mov
push
xor
dec
cmp
sbb
jne
ficoml
dec
cmpb
fs
repz
or
pop
dec
pop
popf
repz
xor
rolb
cmpsl
cmp
sub
dec
jns
in
loopne
xchg
push
push
outsl
outsl
mov
push
lods
push
lods
inc
out
cmp
sub
repnz
push
insl
rolb
add
dec
cltd
jbe
shlb
xchg
push
insb
cwtl
jle
jge
push
ds
sbb
fistps
pop
mov
iret
mov
ds
cs
dec
leave
cmp
outsb
dec
movsb
and
inc
mov
int
hlt
pop
dec
pop
aaa
ret
sbb
xor
sarl
adc
repz
cmp
xchg
stc
shrd
in
in
add
cmp
pushf
mov
test
cltd
pop
icebp
pop
sbb
jge
mov
cmc
xor
inc
dec
cmp
notb
add
cld
push
mov
iret
mul
cld
faddl
inc
sbbl
cmp
mov
cld
xor
jnp
sub
jno
insb
mov
rclb
mov
xor
mulb
adc
cs
mov
jae
imul
xor
mov
pop
fwait
pop
mov
fisttpl
and
inc
std
rep
test
out
xor
dec
loop
push
clc
add
ret
push
sbb
push
xor
aaa
cmpsb
lds
pop
outsb
cmp
aaa
call
iret
fwait
jae
push
shl
mov
mov
fistps
push
mov
jge
addr16
out
insb
outsl
sahf
pop
cmp
add
pop
nop
fs
ds
and
jo
cmp
pop
dec
repz
mov
push
inc
loopne
cmp
leave
xchg
bnd
and
dec
mov
loopne
inc
cmp
aad
aad
pop
and
xchg
push
pop
dec
adc
mov
cwtl
test
xchg
hlt
lds
scas
mov
push
jbe
iret
xchg
push
cmp
push
dec
lds
xor
xor
sbb
and
dec
aam
jl
xchg
mulb
xchg
sahf
xchg
dec
stc
inc
sub
lahf
loopne
or
data16
pop
dec
test
add
lret
xorb
mov
mov
push
out
or
movsl
stc
xor
push
mov
cli
jecxz
rorl
lcall
ja
aaa
xchg
add
cmc
dec
sarb
cmp
mov
cmp
sbb
and
mov
and
daa
jo
add
rorl
das
pop
and
test
int3
into
je
xlat
test
push
add
mov
mov
jae
movsb
jne
rorl
pop
dec
mov
xor
cmpsl
sahf
pop
aaa
add
add
sub
fcoml
icebp
mov
mov
insl
outsl
pop
movsl
jo
dec
push
mulb
lods
pop
mov
cltd
push
sbb
andl
cmp
negb
inc
sbb
or
arpl
int3
mov
pop
adc
inc
ss
ror
repnz
int3
imul
ficoml
push
mov
sub
sub
rcll
loopne
sub
clc
je
mov
imul
imul
addr16
lret
dec
loopne
pop
push
or
movsl
mov
push
inc
lds
ss
jecxz
int3
enter
add
imul
push
popa
jns
pushf
jns,pn
call
mov
adc
test
jb
jnp
int3
insl
jns
jl
push
aam
xlat
mov
cwtl
sbb
loope
jae
push
popa
fwait
and
cmp
inc
ss
in
push
cmp
adcb
xchg
add
fwait
and
mov
pop
adc
test
stos
xlat
iret
test
push
das
inc
sub
decl
loopne
rcrl
xor
lock
cs
jge
mov
outsb
sub
stos
adcb
popf
repnz
das
push
push
sbb
daa
push
daa
repnz
xor
mov
xchg
aam
jno
mov
dec
test
sub
or
scas
leave
fs
and
mov
cli
jmp
dec
sbb
cmpsb
jbe
sar
jb
jmp
pusha
mov
jecxz
jmp
dec
imul
sbb
inc
xchg
pop
jg
fs
pop
cmpl
fstpl
adcb
inc
dec
and
jmp
mov
int3
les
mov
scas
data16
cmpsb
insb
mov
or
or
into
xchg
rcrl
xor
pop
cmp
fistpll
and
push
rcrl
aam
in
mov
inc
outsb
mov
sub
mov
xchg
lods
addr16
pop
xchg
xchg
sbb
pop
and
fnstenv
outsl
xchg
sub
mov
adc
je
out
xor
pop
shr
addr16
pop
dec
lcall
add
mov
sub
jecxz
cld
arpl
dec
outsb
fdivrs
mov
sahf
andl
lahf
mov
loope
dec
cmp
inc
fldcw
push
fisubrs
or
mov
popl
mov
xchg
jecxz
jnp
dec
sbb
rcll
test
jmp
stos
xor
scas
call
xor
mov
dec
adc
imul
cmp
test
inc
mov
test
pop
cmp
leave
pop
adc
pushf
dec
jecxz
out
xor
test
punpckldq
subb
int
rorb
hlt
inc
sahf
sarl
jne
ja
mov
lds
mov
mov
push
repz
arpl
cltd
mov
add
fmull
nop
push
fcmovu
sub
shlb
mov
cmp
popf
out
scas
mov
ss
xchg
out
stc
fadds
inc
pop
dec
push
aad
test
jb
int
mov
dec
test
sub
push
in
int
and
lahf
jmp
inc
cltd
xor
xlat
ja
inc
or
inc
aaa
stos
inc
inc
mov
cmp
mov
scas
dec
cmp
fmull
mov
xchg
xchg
addr16
dec
sbb
insb
js
call
fwait
mov
adc
push
lods
divl
jo
dec
dec
cli
fsts
movsl
rcrl
pop
jge
sub
or
pushf
xchg
pop
insb
dec
mov
stc
dec
pop
mov
int3
inc
pop
xchg
out
jne
push
sub
mov
push
lret
rolb
cltd
and
fnstsw
gs
or
and
push
subl
jne
mov
popf
shll
pop
in
out
test
idivb
pop
and
jne
daa
andl
fs
nop
and
push
movsb
stc
arpl
test
mov
adc
ljmp
mov
popf
repz
bound
js
enter
rorb
hlt
jnp
jg
testl
pop
ror
call
int
mov
sti
jb
push
jne
lods
mov
xlat
int
adc
ret
or
pusha
into
aaa
rcll
sbb
imul
pushf
sti
push
inc
xchg
push
clc
je
xchg
add
sub
adcl
cmp
fdivrp
fwait
mov
jb
aaa
or
lahf
loope
xchg
inc
and
dec
lds
mov
sahf
leave
push
je
xor
mov
fwait
sbb
call
rcr
pop
inc
orl
shlb
clc
and
test
or
mov
cmp
out
fstpl
cld
test
out
mov
and
je
cmpsl
mov
daa
mov
in
inc
xchg
or
sbb
jl
cld
stos
lahf
adc
stc
aas
orl
icebp
jne
andb
fstpl
fisubs
jno
add
add
imul
and
xor
ss
sub
inc
mov
out
in
dec
and
sub
aam
inc
bound
lea
aas
pop
or
jecxz
gs
or
loop
sbb
dec
in
lret
lock
sbb
xchg
cmp
aam
testb
sarl
jae
jl
orl
ret
je
mov
mov
jecxz
nop
push
loopne
lods
pop
cltd
cs
sub
ss
aad
jo
out
jmp
repnz
push
jl
jecxz
cmp
psubsw
loop
test
sub
xchg
std
inc
mov
jne
jo
and
insb
adc
pop
scas
xchg
fcom
mov
gs
dec
ficompl
jo
push
sub
repnz
ja
mov
and
loop
imul
cmp
call
fidivrl
out
jo
out
lret
xor
mov
push
xor
shr
lock
inc
adc
and
xchg
in
pop
add
dec
movsl
test
lods
out
adc
xchg
adc
and
lcall
inc
repz
popa
push
or
in
insb
data16
push
push
mov
and
mov
fsubl
clc
outsl
jl
add
rcrl
mov
pop
sbb
ljmp
movl
xchg
adcl
mov
mov
bound
js
int
ljmp
insl
out
fstl
shl
cmc
xchg
dec
ret
mov
lods
cmp
xor
gs
nop
sbb
cmpsb
dec
xor
sbb
scas
cmp
imul
or
mov
sub
sbb
and
stos
test
dec
mov
cmp
mov
lods
jo
sub
xor
iret
addr16
pop
dec
push
fcmovnu
lahf
outsl
aam
add
mov
mov
xchg
lret
out
cmovge
scas
mov
in
shrb
das
ss
leave
dec
xor
dec
push
js
push
outsb
je
push
test
mov
mov
movsb
shlb
scas
leave
ss
mov
mov
cmp
mov
call
aad
inc
out
mov
cmpb
cmp
pushf
mov
xchg
cmc
inc
std
test
xor
in
lcall
popa
add
jns
scas
fnstenv
jb
lcall
popf
mov
and
mov
sub
xlat
jae
xlat
rorb
out
cmc
out
sub
mov
dec
sbb
repz
push
aaa
rolb
jne
mov
cmpsb
scas
mov
fcoml
sbbb
or
cmp
push
xchg
fwait
aam
daa
mov
sbb
repz
aas
adc
add
insl
shlb
mov
dec
int
lds
shl
test
int
xchg
mov
xchg
loopne
xchg
push
jmp
adc
jnp
divb
pop
out
adcl
in
loopne
pop
rorb
popf
mov
and
jle
shl
mov
sub
add
dec
mov
ljmp
icebp
jl
mov
cmc
dec
mov
mov
dec
mov
mov
push
mov
insl
or
inc
arpl
inc
jge
or
mov
leave
lock
jecxz
sbb
adc
shlb
rcrb
rcrb
mov
and
pusha
push
movsb
sub
inc
sub
flds
rorl
outsl
adc
or
mov
dec
inc
jle
ficoms
and
idivl
jno
mov
lahf
decb
ret
push
mov
xchg
movsb
std
jle
sarb
sar
das
jmp
andl
shlb
cmpsl
mov
xchg
mov
cmp
xor
push
mov
insb
aas
stc
aad
add
sub
cmpsb
orb
inc
cmp
cmpsb
push
xchg
mov
mov
call
and
das
mov
and
pop
jge
push
fisttpll
push
out
mov
inc
scas
into
test
or
adc
inc
in
cli
xlat
inc
jecxz
xorl
aam
add
mov
daa
aad
dec
mov
mov
pop
inc
push
lds
gs
in
pusha
aam
pop
pop
and
lds
sbb
mov
sub
int
or
lds
not
and
add
adc
adc
push
fiaddl
mov
push
jns
and
mov
test
or
pop
bound
aaa
add
sub
out
aad
cmc
ret
aad
xchg
test
or
or
retw
mov
aam
dec
pop
inc
push
test
push
shr
push
xchg
xor
ret
test
inc
lods
xchg
sub
and
xchg
pop
cmp
mov
cld
sbb
gs
fcomps
pop
je
popf
scas
nop
ljmp
clc
lret
lods
orb
cs
push
daa
outsb
xor
sbb
sub
sbb
mov
xor
inc
rcrl
cmp
in
cmp
jne
and
jo
adc
sub
jle
lock
mov
ljmp
add
jmp
ss
cs
popa
jns
push
pop
subb
jo
faddp
jb
or
jmp
xor
loop
inc
push
lahf
pop
jge
popf
or
cld
sbb
pop
xchg
xor
lods
push
push
fnstsw
xlat
in
xchg
movsb
cwtl
sbbl
mov
jecxz
daa
shlb
add
stc
mov
or
call
mov
movsl
test
lret
ds
ret
ss
lcall
in
fists
prefetcht1
sub
jg
pop
ficompl
ret
fisttps
xor
mov
in
jns
or
or
mov
jmp
mulb
fcmovne
stos
xor
lahf
pop
pop
bnd
xchg
xchg
popa
rolb
in
jae
imul
cmp
jge
pop
loope
mov
sub
push
mov
push
cs
xchg
sbb
cltd
fsubr
add
scas
rcr
jo
in
jne
mov
addl
inc
push
out
cmp
adc
rolb
pop
jns
aaa
lods
mov
fcmovnb
aam
iret
mov
pop
jmp
into
ljmp
pop
and
sbb
stos
cmpb
jnp
mov
ss
jle
xor
jge
pop
jnp
jecxz
pop
lahf
int
outsb
pushf
push
push
adc
out
cli
cmpsb
jle
sbb
sti
sub
push
inc
shlb
scas
test
xor
pop
inc
sbb
test
loopne
cli
adc
sti
jecxz
mov
push
pop
in
scas
xchg
hlt
ja
pushf
insb
movsb
sbb
out
je
ja
pop
sbb
sub
adcl
lock
fcmovbe
sub
xchg
daa
loop
push
push
stos
jg
lahf
mov
push
xor
aam
mov
popa
add
imul
daa
bound
enter
xchg
pop
mov
daa
xchg
scas
push
ljmp
fnstsw
ds
repz
xor
dec
int3
leave
fwait
test
or
shrl
or
sti
or
xchg
add
pop
mov
test
je
push
and
cld
data16
es
add
lock
mov
dec
pop
add
add
fpatan
lahf
cmc
scas
out
cmpsl
cltd
or
push
and
mov
jne
pop
rol
es
xchg
push
mov
ret
icebp
bound
xchg
inc
pop
mov
or
shlb
insl
pop
jp
lahf
xchg
lahf
mov
ja
inc
jbe
push
jne
icebp
aaa
jg
push
pop
int
out
aam
adc
pop
xor
dec
pop
scas
lahf
sbb
pop
in
out
loope
sahf
ljmp
pop
push
jmp
jo
std
cmp
mov
out
dec
icebp
movsl
in
jge
lahf
sti
xchg
add
adc
out
fsubrl
shll
dec
cmpsl
add
inc
push
cmp
cmp
adc
cmp
push
dec
add
mov
shll
inc
mov
arpl
daa
in
xchg
pop
mov
adcb
mov
std
sub
sub
add
xor
subb
ret
loop
clc
imul
cmc
lret
insb
push
lcall
mov
es
inc
sbb
xchg
daa
je
mov
leave
jbe
dec
sbb
pop
push
loop
fwait
test
sub
push
test
rclb
test
psrlq
and
fadds
adc
jo
pushl
outsb
mov
pop
dec
movsl
addr16
cmp
push
pusha
sahf
insl
popa
imul
inc
or
adc
outsb
mov
inc
shl
push
add
add
mov
out
adc
or
xor
jnp
sti
cli
inc
dec
jecxz
int3
mov
sub
scas
mov
inc
cmpsl
push
ljmp
das
cli
les
push
push
push
push
jmp
push
ret
adc
xchg
xchg
ficoms
divb
xor
add
xchg
xor
inc
aas
xchg
adc
or
ljmp
adc
mov
push
push
sub
dec
or
test
arpl
enter
xchg
xchg
jecxz
jge
and
sub
add
jecxz
mov
jmp
push
and
divl
aaa
mov
xchg
gs
cmp
fmuls
sbb
pop
sahf
in
sbb
fwait
sbb
fstl
xor
pop
mov
rol
nop
xchg
jbe
jo
mov
mov
cmp
jg
test
add
push
add
push
test
ret
out
enter
addr16
xchg
dec
sub
xchg
sbb
push
in
popa
jmp
test
mov
daa
mov
sbb
lock
std
stc
bound
push
out
testb
xchg
mov
cmpsl
sub
mov
pop
adc
mov
and
sti
adc
push
jnp
mov
movsb
xorl
icebp
in
jp
mov
in
sbb
push
push
sbb
mov
add
gs
xor
xor
fistpl
dec
cmpsb
stos
test
mov
add
push
inc
sarl
jg
xchg
or
daa
dec
and
stc
iret
jne
add
xchg
mov
cld
or
dec
es
mov
dec
cmp
jge
leave
mov
test
ja
xchg
sub
movsl
pop
xchg
pushf
cmpl
or
nop
incl
adc
push
cmp
fimull
add
es
jmp
inc
xor
push
std
xorl
and
ljmp
sub
fnstcw
mov
dec
call
sub
push
or
pop
adc
pop
int3
add
push
mov
leave
movq
popf
push
or
sub
test
xchg
test
insb
out
sub
adc
out
loopne
int3
pop
push
xchg
out
dec
popa
mov
into
xor
jl
sar
outsl
lods
in
pop
mov
in
adc
dec
ret
inc
cmpb
stos
jl
cwtl
enter
xchg
sahf
sub
sub
add
loop
pop
in
or
in
jo
cmp
mov
int
outsl
stos
aam
orb
mov
roll
pop
mov
imul
inc
rorb
xor
sub
frstor
sarb
jp
xor
aad
fwait
jo
popa
aad
and
mov
and
xor
scas
movnti
mov
lea
and
jmp
push
mov
inc
add
xchg
pop
mov
cmpl
pushf
adc
jb
and
lock
mov
sbb
fstps
jecxz
std
std
stos
mov
xchg
sti
sbb
int3
pop
add
push
sar
shll
ljmp
xor
inc
dec
dec
push
dec
cmp
loop
mov
add
lock
pop
jbe
sbbl
adc
adc
pop
in
adc
in
sbb
mov
inc
mov
imul
cmp
or
out
jne
in
mov
or
inc
mov
fldt
xchg
or
pop
push
in
xchg
test
lcall
cmp
stc
ja
shrl
mov
jle
cmp
xlat
xchg
movsl
icebp
push
pop
xchg
ja
xorb
inc
cld
and
xor
out
cwtl
sbb
jnp
jg
ja
or
lods
sub
push
cmpsb
hlt
push
jo
les
xor
inc
jae
cltd
push
out
dec
icebp
clc
jb
pop
inc
jae
sub
call
adc
jnp
andl
adc
lock
xchg
pop
loopne
test
xchg
pushf
xor
arpl
add
mov
cli
sub
sbb
cmp
addr16
data16
and
and
cmp
and
mov
mov
shrb
daa
iret
mov
push
push
dec
add
icebp
jmp
test
adc
fidivl
push
pop
rcr
pop
aas
jo
xchg
dec
ljmp
fistps
adc
clc
adc
inc
inc
pop
inc
push
cmpb
dec
icebp
sub
mov
loopne
js
imul
int
or
inc
hlt
mov
sbb
lret
xchg
cltd
data16
mov
mov
test
or
pop
inc
push
cmpsl
pop
out
sbb
xchg
rorb
or
int3
xor
lods
arpl
mov
fistpl
outsb
aaa
pop
repnz
pop
mov
fadd
pusha
lcall
push
xchg
jle
jb
cmp
push
leave
or
arpl
dec
aam
mov
sub
jl
test
push
push
push
and
mov
insb
cwtl
jle
jmp
lds
lret
fildl
mov
aaa
xchg
xchg
aam
xchg
pop
ss
mov
jae
cmp
aad
push
pop
pop
adc
in
cmc
jno
mov
lods
pop
jge
add
out
imul
mov
nop
mov
jle
movsl
int3
lret
mov
cld
inc
jne
fdivs
sbb
inc
pop
and
xor
das
mov
add
sti
ret
stos
daa
repz
rcrl
add
test
das
dec
push
xchg
loopne
jmp
dec
cs
add
xchg
lret
xchg
icebp
in
mov
sub
js
cmp
popl
outsb
xor
dec
outsb
jb
shll
pop
sbb
mov
mov
gs
jge
movsb
sbb
jmp
inc
mov
mov
arpl
aaa
addl
loope
enter
cmpsl
movsl
mov
cmp
aad
add
jb
mov
xchg
daa
insl
add
xchg
add
push
adc
and
sub
in
lret
loopne
cmc
out
xchg
cmp
sbb
xchg
sub
mov
xchg
and
mov
jmp
dec
push
lock
scas
add
dec
mov
or
movsb
test
push
xor
mov
sub
sub
push
fimull
mov
xor
mov
pusha
movsl
in
pop
movsb
xchg
jbe
jae
mov
push
cmpsb
data16
ja
pusha
push
enter
jnp
jmp
xor
mov
aad
pop
movsl
xlat
inc
and
enter
cmp
dec
fiadds
lahf
push
fdiv
lods
and
mov
push
xchg
or
outsb
enter
adc
mov
mov
addl
sbb
insl
shrl
jp
cmpsb
ret
fidivrl
pop
cmp
jbe
dec
dec
cs
addr16
lock
dec
outsl
dec
dec
jmp
out
push
fcmovnu
js
mov
mov
repnz
lret
and
sbb
push
push
push
inc
int3
xor
pop
lods
and
test
bound
mov
sub
jb
fidivrl
movsb
push
shl
lret
rcrb
inc
repz
fs
or
rcll
add
lret
jmp
orl
test
dec
arpl
sahf
repnz
rcr
imul
add
mov
lret
cltd
sbb
mov
dec
popa
cmp
daa
xchg
ja
repz
loop
sbb
add
adc
fisubrl
mov
andb
scas
sbb
cmp
das
mov
push
adc
aam
xchg
lret
outsl
pop
inc
push
sub
lods
mov
dec
xchg
push
add
cmp
push
adc
add
or
xchg
jge
addl
pusha
or
ret
out
jb
or
or
cmp
mov
cwtl
aas
adc
fwait
call
inc
fs
pusha
fisubl
jp
cld
dec
sbb
les
mov
sbb
fs
hlt
sahf
xchg
cmp
and
add
cltd
rcrb
cmp
add
rclb
subl
xchg
mov
push
xor
repnz
insl
mov
test
cmpsb
cwtl
popf
out
xorl
and
xchg
cld
jecxz
pop
aas
sahf
mov
fs
mov
outsl
push
ja
and
fisubs
mov
pop
test
mov
dec
xor
arpl
fimull
cmp
jae
int
adc
push
or
fstpt
jae
xchg
cmpsb
inc
subl
cmp
sub
jnp
mov
sahf
jmp
push
cld
fbstp
fcomp
inc
mov
dec
mov
adc
jnp
ss
lret
mov
ds
in
xchg
xchg
jne
mov
inc
lods
hlt
stc
inc
sbb
mov
cmp
pop
les
ds
cmp
loopne
push
xorl
outsl
cmp
mov
push
pop
cli
stos
and
jmp
popf
pop
pop
push
xor
fs
pop
mov
inc
dec
js
std
and
cld
int
and
movsb
loopne
jecxz
jecxz
xor
cmp
cld
sbb
mov
jge
mov
enter
or
mov
divb
int
idiv
mov
hlt
dec
nop
mov
or
push
sub
xlat
mov
daa
leave
mov
sahf
adc
lea
scas
sti
repnz
add
cmp
dec
fs
cmp
stos
or
mov
std
jno
dec
pusha
and
push
test
stos
inc
jno
push
movsl
cmp
mov
mov
adc
cmp
xchg
lahf
pop
add
insl
xchg
and
pushf
xor
fwait
jecxz
xchg
jbe
xlat
inc
cmc
push
cmc
in
in
xchg
xorl
sub
dec
push
sbb
scas
cmc
rcll
add
xlat
out
sub
mov
adc
ljmp
cmp
sub
push
lock
cmpsl
dec
imul
jnp
sarl
daa
xor
iret
fimuls
add
fcoml
inc
loop
jns
insb
sub
iret
loopne
in
imul
cmpsl
push
mov
ds
cwtl
pop
jl
lea
push
addr16
das
repnz
xchg
repnz
cltd
xchg
scas
test
inc
out
mov
or
loop
mov
in
sbb
imul
shlb
in
jno
cmp
jno
mov
fidivrl
push
mov
pop
add
out
or
je
into
nop
lret
dec
sbb
and
jle
add
push
shl
jecxz
mov
clc
dec
sahf
jbe
cs
inc
fists
aaa
jmp
lret
jne
js
dec
mov
ret
lahf
aaa
adc
xor
gs
aam
sub
jmp
movsb
sarl
mov
test
inc
inc
and
dec
add
fbld
mov
aam
cmp
push
xchg
pushf
lahf
cltd
pushf
jb
call
mov
aaa
xchg
mov
inc
lea
xchg
fcom
mov
or
fstl
jae
and
push
imul
movsb
xor
lahf
xchg
inc
sub
inc
mov
adc
gs
xchg
rolb
or
andb
push
dec
jp
ja
and
out
outsb
xchg
fildl
enter
cmp
or
fcomi
shrb
push
push
sbb
lds
sub
outsb
iret
cmpsl
scas
push
xor
je
hlt
dec
sub
stos
cmp
out
jbe
pop
xor
jge
adc
or
pop
in
mov
nop
comiss
repnz
mov
imulb
or
xchg
or
cmp
outsl
jns
jge
cwtl
inc
add
mov
cmp
cld
jbe
push
movsb
sbb
and
mov
call
movsb
jns
mov
pop
call
and
std
cmp
sub
mov
test
daa
ljmp
jmp
iret
sahf
ds
or
jge
xor
ret
aam
cmp
aad
sub
jle
lods
jbe
and
sbb
mov
cmp
stc
mov
push
rorb
xor
push
jl
xchg
jecxz
lret
sbb
inc
clc
dec
arpl
orb
push
xchg
mov
mov
pop
dec
scas
jb
std
push
or
mov
mov
popf
lahf
sbb
enter
mov
mov
mov
sahf
das
dec
mulb
popf
xor
push
jno
pop
dec
flds
stc
fildll
push
cmpsl
les
fdivrs
or
ds
fsubrl
jl
insl
insl
fs
adc
stos
mov
sub
lds
cs
jmp
or
xchg
lahf
bound
jp
and
jecxz
sbb
dec
movsl
adc
mov
popf
mov
mov
stc
aad
out
popf
mov
inc
in
testb
hlt
mov
or
ret
loope
pop
jb
or
aam
jmp
arpl
mov
cs
adc
xor
jo
xor
andl
adc
cld
pop
jmp
or
mov
in
jg
or
mov
cwtl
lods
jl
loopne
or
cmpsl
lds
sub
inc
pop
aam
pop
xchg
add
stos
sbb
cltd
imul
pop
fwait
push
xchg
jo
xchg
loope
sub
mov
add
cwtl
int
xchg
dec
int3
add
mov
dec
push
sub
jno
nop
out
jmp
dec
dec
shll
aad
ret
repz
orb
jmp
pop
or
xchg
in
inc
mov
subl
movsl
xchg
cld
mov
mov
fdivrs
out
lods
mov
push
inc
addl
and
and
mov
xchg
push
fsubrp
lods
xor
sub
jno
sub
jo
push
dec
jne
loop
or
mov
jbe
cs
movsb
cld
aas
sub
out
fst
pop
shlb
insl
lods
adcl
inc
mov
stos
xor
jle
push
in
mov
fstpl
mov
add
jae
mov
cmpsb
les
imul
adc
mov
lahf
xchg
mov
insb
out
and
cld
and
insb
push
adc
pop
cmpsb
sbb
in
mov
neg
loop
jmp
xchg
cmp
dec
roll
adc
fcoml
test
jmp
xor
sti
and
add
mov
popa
packuswb
test
in
lret
das
ja
jle
mov
push
mov
sbb
xchg
test
dec
pop
cmc
adc
mov
rcrb
sahf
andb
mov
sbb
add
xchg
test
dec
dec
inc
rol
sub
ja
push
sub
fdiv
testl
pusha
jp
pop
in
push
outsb
sbb
push
ds
jmp
cmp
xor
rcrl
mov
mov
add
stc
mov
cwtl
mov
std
int
xchg
cmp
dec
push
mov
cwtl
imul
inc
test
or
into
and
ret
hlt
fbstp
dec
dec
cwtl
in
outsl
and
das
outsb
xchg
adc
mov
mov
sbb
ds
jae
faddl
call
clc
roll
jno
lods
cmc
cltd
mov
and
gs
dec
adc
movsb
adc
sub
lock
stos
ljmp
xor
outsb
sbb
mov
jle
mov
add
ljmp
faddl
cmp
repz
xchg
ja
sti
mov
push
in
cmp
scas
es
jmp
cmc
jmp
push
inc
outsb
cmp
fidivl
dec
add
push
sarb
and
daa
flds
pop
pusha
aas
sub
ja
aad
cmp
ljmp
dec
pusha
xchg
cltd
andb
repz
daa
cmpsl
jb
mov
enter
push
ja
jbe
pop
dec
sets
enter
sub
push
jle
dec
jnp
test
arpl
pmaddwd
aas
js
idivb
test
out
mov
xchg
jae
dec
xor
push
call
imul
xchg
fistps
ljmp
setae
lods
sbb
add
lds
sub
into
call
mov
jo
cmp
jge
mov
sahf
ret
inc
push
int
ficompl
out
pop
nop
cmp
sbb
stos
shll
pop
into
nop
fwait
xor
mov
xor
mov
mov
test
pop
fistpll
lret
cmp
inc
push
xchg
mov
dec
outsb
ret
nop
mov
scas
inc
stos
je
inc
into
sbb
jno
inc
lea
jbe
sbb
in
dec
sar
movsl
loop
mov
jmp
aaa
in
adc
cmp
cmp
mov
cmc
adc
in
and
jae
jbe
adc
in
cmp
out
xor
lret
mov
inc
popa
xchg
inc
pusha
lods
inc
mov
jo
cltd
test
or
negl
pop
repz
push
dec
arpl
fisubrl
jmp
popl
jne
dec
pop
xchg
lods
sub
or
test
cld
xchg
mov
cltd
lock
xor
xchg
push
mov
in
jae
movsl
push
out
push
add
jecxz
repnz
int3
push
mov
jmp
fs
xor
test
mov
pushf
pop
cld
mov
mov
fs
sahf
insb
dec
test
pop
mov
sub
shr
or
out
inc
jp
inc
fsub
and
jecxz
or
and
push
test
fstps
pusha
sahf
pop
add
loop
xchg
out
insb
cmpsb
movsl
push
dec
xchg
ret
sub
lds
sbb
cmp
xchg
pop
jae
xor
jge
cli
sub
mov
nop
jno
mov
repz
stc
pop
mov
fidivl
imul
stos
gs
and
movsl
sub
pop
lcall
lcall
push
jb
mov
xor
stos
mov
pop
test
cltd
stos
cwtl
ja
enter
jmp
adc
push
add
arpl
or
pop
push
fwait
inc
orl
mov
sbb
adc
dec
push
int3
push
and
test
hlt
addr16
push
js
in
movsb
int3
test
sub
lock
lea
or
cmp
or
aaa
enter
hlt
xor
popf
jecxz
jp
sbb
adc
push
ljmp
and
inc
mov
jne
xor
push
sti
pop
lods
fisttpl
cmp
jo
lods
fwait
xchg
sub
push
stos
stos
mov
and
movsb
inc
pushf
rclb
mov
loopne
pop
adc
fs
mov
mov
mov
aam
ficompl
mov
repz
cmp
in
addr16
ljmp
imul
sub
sbb
aas
jmp
int
inc
mov
xchg
aaa
stc
shll
fcompl
jnp
xchg
mov
jmp
pushf
aaa
cmp
dec
add
aas
jmp
push
or
aaa
movsl
cmp
jp
sub
mov
out
lock
lea
cmp
sbb
push
nop
out
cmpsb
in
and
in
aaa
push
inc
and
jae
scas
inc
out
lea
and
iret
sbb
xchg
stc
repz
sub
imul
subb
mov
in
orl
out
call
mov
mov
adc
adc
mov
cmp
mov
fs
pop
aas
movb
jge
xor
cli
lods
mov
add
sub
jnp
cwtl
loop
and
rcl
stos
sub
out
push
enter
push
pop
jne
add
mov
xor
std
adc
dec
jge
std
sarb
fwait
test
dec
movsb
lods
pop
scas
xchg
push
es
divb
out
rorb
sbbb
xlat
mov
xchg
out
add
cmp
pusha
xchg
idivl
sbb
jno
mov
ja
dec
popf
add
xor
sbb
xor
inc
pop
jae
idivb
add
loopne
or
pop
and
ds
cmc
out
test
in
jae
push
push
xor
into
adc
inc
pop
pop
mov
jnp
xor
cmp
sbb
ljmp
xor
and
lahf
sahf
rorb
fidivrl
addr16
xchg
rcl
shlb
push
inc
adc
pusha
in
shlb
mov
mov
inc
stc
dec
leave
pop
mov
flds
push
fsubr
jns
mov
and
into
out
xchg
jne
sub
pop
lods
loope
add
out
ja
int3
sahf
arpl
cli
aad
aaa
fisttps
xor
and
adc
pop
aad
outsl
out
pop
aad
pushf
xor
mov
jns
lret
pop
push
cmp
xor
mov
sub
mov
mov
or
push
xchg
add
test
lahf
inc
fisttps
nop
xor
xor
es
je,pt
call
pushf
pushf
cmp
clc
dec
inc
add
jne
ds
mov
call
outsl
rorb
test
pextrw
mov
ror
je
mov
in
xchg
repz
dec
mov
inc
sub
push
gs
cmp
inc
lret
add
mov
aaa
sbb
sub
imul
cld
loope
sub
sub
xchg
mov
mov
cmpl
pop
mov
test
mov
dec
fldl
jmp
pop
inc
addl
mov
xlat
lds
gs
mov
scas
pop
dec
insb
sub
iret
dec
es
dec
icebp
dec
in
insb
out
cvtdq2ps
add
jg
inc
ret
gs
clc
insb
daa
adc
and
inc
xchg
lock
out
xchg
jno
dec
mov
leave
fstl
ret
cwtl
or
or
aam
lds
mov
aas
aam
mov
xchg
pop
jb
idivl
jg
dec
rcl
f2xm1
mov
je
mov
es
mov
or
orb
inc
imul
and
orl
and
jmp
push
sub
sti
pusha
push
adc
jmp
sbb
add
xchg
xor
xchg
jg
jbe
fsubr
rcrl
jae
pop
or
decb
in
lret
sbb
mov
mov
add
mov
mov
repnz
cmc
mov
mov
dec
pop
mov
and
adcb
scas
in
jno
out
nop
dec
out
lods
jle
mov
xor
leave
call
popa
mov
js
and
pop
dec
mov
push
inc
mov
bound
mov
ja
pop
repnz
insl
hlt
inc
xchg
xor
loope
test
mov
outsl
sbbb
daa
push
xor
test
cltd
push
dec
pop
or
negb
jnp
repnz
imulb
pop
push
es
lea
popa
mov
and
rcll
xor
maskmovq
testl
sub
movsb
push
fimull
jge
pushf
es
pop
pop
call
test
sbbl
cli
cmp
loope
dec
and
jl
scas
ja
sub
push
push
xchg
into
mov
or
jge
cmp
in
mov
fstpt
pop
lock
iret
shrb
gs
xor
mov
inc
insb
jg
jge
lock
dec
in
mov
dec
enter
sti
jno
pop
cmp
add
inc
fsubl
js
jo
push
add
lret
fmuls
fidivl
movb
inc
jno
faddl
imul
or
int3
out
push
addr16
dec
popa
cltd
xor
pop
mov
pop
inc
call
and
mov
xchg
mov
cmp
push
or
ja
loope
arpl
pop
pop
enter
xchg
sbb
pop
sbb
or
lods
adc
in
or
pushf
sbb
cmpsb
sbb
cmp
lods
sub
jecxz
xor
mov
xor
nop
mov
in
arpl
pop
mov
pop
gs
les
mov
cmp
scas
xchg
mov
mov
mov
xor
idiv
mov
add
scas
mov
inc
lds
iret
push
push
les
scas
push
or
cmpsl
adc
orl
pop
sbb
sub
inc
push
lds
fisubs
sbb
lret
pop
mov
lret
lret
add
xchg
ds
sbb
and
es
add
cmpsb
or
pop
lcall
imul
jb
sub
mov
out
push
and
adc
cmp
testb
adc
lea
test
xchg
in
xor
push
xchg
xor
mov
adc
or
gs
and
bound
lds
jno
or
jge
jnp
clc
xchg
pop
inc
inc
lahf
in
or
pop
xchg
sub
in
jle
xchg
mov
inc
outsb
push
aam
mov
push
pop
mov
pushf
insl
imulb
lods
push
sbb
rcl
cmp
orb
and
sub
or
cmc
push
in
aam
shl
mov
push
dec
jns
mov
lahf
aad
push
or
flds
adc
and
inc
sahf
in
test
pop
cmp
daa
shrb
jo
pop
sbb
imul
pop
call
inc
and
push
frstor
ljmp
pop
lods
rcl
xchg
mov
loope
std
pop
into
cld
cmpsl
or
daa
push
mov
add
push
pop
ja
call
lods
inc
dec
or
dec
pop
or
dec
inc
in
gs
fldenv
mov
mov
pop
dec
and
mov
imul
popf
aad
mov
int3
popa
adc
ret
jge
clc
lret
push
xchg
test
addr16
inc
sub
movsb
mov
cli
cwtl
outsl
ficomps
mov
rcrb
jae
mov
cmc
sub
iret
pop
xor
cltd
push
mov
arpl
push
sbb
push
pushf
mov
idivl
inc
fsubrs
test
psubsw
ja
stos
add
pushf
push
shrb
and
xorl
ljmp
sbb
icebp
notb
outsl
pop
dec
mov
mov
sbb
leave
xchg
lcall
push
push
pop
lcall
dec
imul
and
adc
push
push
jnp
sbb
pop
ret
and
aas
das
insb
mov
outsl
aaa
jno
sbb
xchg
inc
nop
pop
je
lods
or
lret
in
call
aam
je
outsb
andl
cmpsb
mov
stc
add
rcl
shlb
ret
xchg
test
pop
and
in
or
push
cmpsl
jl
cmp
repnz
test
clc
test
lret
in
dec
shlb
mov
and
cmp
jnp
xchg
mov
and
mov
je
fists
mov
ret
push
push
jg
add
lods
shrl
xchg
into
pop
sub
scas
data16
test
clc
leave
mov
ret
daa
daa
mov
dec
mov
lock
jno
mov
jg
mov
out
aas
pop
xchg
insl
jg
stos
cmpsl
xorb
shlb
in
loop
inc
in
mov
movsl
inc
popf
ret
mov
sub
xor
loope
lods
mov
divb
pop
mov
in
fs
jle
sbb
lock
icebp
int3
or
dec
addb
mov
jb
cmpsb
in
loope
iret
ljmp
pop
pop
lock
lea
dec
xchg
pop
insl
enter
mov
insb
push
shrl
xchg
sahf
inc
sarb
xor
jg
loop
pop
rcll
add
push
push
int
nop
incl
popa
push
sub
call
out
mov
jno
xor
out
inc
int
pop
fwait
movsl
jns
mov
push
enter
mov
jmp
jmp
imul
or
add
xchg
incb
fs
out
lods
loop
xchg
sbb
cmp
mov
mov
ljmp
fwait
or
and
ss
adc
jb
les
int3
pop
sarl
mov
push
ret
or
or
in
pop
push
in
mov
adc
fwait
sbb
pop
push
stc
test
mov
and
push
pop
or
push
dec
add
mov
or
jle
xor
xor
jne
in
dec
jle
mov
data16
iret
inc
dec
or
sbb
mov
or
jmp
sub
jmp
push
sbb
popa
jp
xchg
subl
xor
stc
mov
movsl
cld
dec
lea
fwait
add
xchg
int3
xor
add
lret
fwait
pop
fisttps
xchg
ficomps
jnp
clc
ja
ja
sub
mov
aaa
sbb
dec
push
ret
mov
push
sub
lahf
mov
xchg
fstpl
or
and
mov
sub
xchg
xor
sbb
xor
add
mov
push
fisubrs
inc
xchg
sbb
mov
mov
loopne
xor
cwtl
or
dec
rcrb
xor
lods
das
push
mov
lods
js
stos
jnp
cltd
inc
lods
xchg
stos
andl
test
roll
rolb
stc
adc
xlat
sub
rcll
out
mov
jae
xor
sbb
sbb
xchg
repz
mov
jmp
xor
cmpsb
pop
xor
mov
out
and
push
call
add
inc
fldcw
and
pop
arpl
adc
loop
js
rcrl
push
xchg
xor
jmp
inc
dec
das
icebp
add
test
jp
mov
das
mov
xchg
aaa
mulb
pop
lret
push
adc
std
repnz
movsb
mov
push
scas
into
jmp
jle
iret
xor
test
dec
cmp
jecxz
adc
daa
lret
cmp
fnsave
fsubrs
sbb
jle
lcall
aad
call
sbb
or
fs
cmp
adc
sbbl
and
xlat
es
in
stos
push
lret
lret
xor
inc
mov
int
cmp
sub
mov
cli
inc
shll
in
repz
mov
jmp
je
push
in
loop
dec
imul
add
das
sahf
stc
inc
xchg
std
lds
xchg
jge
jmp
xchg
pop
movsb
mov
fs
adc
inc
pop
hlt
cmovge
mov
daa
inc
negb
xor
jns
push
inc
fimuls
inc
sbb
mov
adc
scas
mov
leave
xchg
jae
adc
cmpsl
pop
cmc
cld
ret
jno
popa
ds
hlt
push
call
push
sub
lds
xchg
mov
sub
movsl
sub
jnp
mov
mov
daa
xchg
outsl
cmc
out
pop
pushl
push
or
dec
rorb
lcall
jcxz
adc
xor
daa
js
push
pop
mov
adc
xor
and
adc
fwait
pop
lcall
inc
lret
cs
and
rcrb
test
out
in
test
jb
mov
ss
push
jl
mov
pop
and
sti
iret
push
sti
sub
ja
dec
cmpsl
mov
inc
test
mov
xchg
adc
sbb
mov
xchg
rorb
pop
enter
popf
insl
adc
xchg
lods
hlt
push
sarb
push
cmc
testb
cmp
imul
nop
je
cld
sbb
jae
mov
mov
fstl
jg
push
shlb
mov
lods
lods
je
pop
sbb
daa
test
jmp
mov
push
xor
add
lret
imulb
lcall
mov
pushf
mov
push
aas
xchg
fisubs
in
inc
ret
mov
mov
sbb
jo
int
scas
outsl
pop
push
lods
sub
mov
xchg
adc
xchg
stc
push
mov
clc
jnp
pop
cwtl
lods
and
fcomps
fwait
and
ss
idivl
rep
pop
add
push
adc
jmp
mov
fimull
mov
orl
adc
cmp
add
pop
loop
xchg
popf
add
or
stos
sub
repnz
or
or
fcmovne
int
sahf
aas
cmp
jl
jl
fdivl
pusha
pop
or
ret
clc
mov
xchg
cmpsb
lcall
out
daa
movsb
add
sbb
je
pcmpgtd
int3
lcall
or
inc
shl
mov
or
inc
mov
sbb
mov
psrad
ljmp
sub
mov
dec
fxtract
jns
cwtl
scas
xor
jecxz
fisttpl
lret
push
inc
pusha
pop
das
mov
bound
hlt
sub
orb
arpl
mov
xchg
mov
xchg
lcall
shr
jb
pushf
xchg
xchg
pusha
cld
pop
stc
mov
mov
lods
into
xor
ljmp
in
pop
cmp
cli
lds
inc
aas
dec
fdivl
pop
dec
xchg
jl
inc
mov
jp
adc
jmp
mov
pop
bound
push
lock
dec
dec
mov
test
data16
icebp
pop
aas
sub
ret
ret
daa
dec
bound
xchg
inc
mov
mov
data16
cltd
arpl
push
shll
dec
pop
mov
and
push
or
cltd
mov
cmp
dec
xor
mov
cmpsb
ret
daa
cmpb
push
mov
pusha
data16
sbb
adc
sbb
jb
inc
jmp
cmc
xchg
rorl
adc
sub
jecxz
add
div
mov
imull
pop
andl
xchg
enter
insl
dec
ret
imul
pop
insb
sbb
movsl
clc
iret
or
and
leave
bound
insb
xchg
xchg
mov
and
xor
and
or
xchg
es
loopne
ss
jnp
jb
pop
jno
loop
and
pop
cltd
pop
sahf
add
repnz
or
or
and
shll
push
imul
jge
jp
mov
roll
jge
inc
xchg
jl
xchg
aad
inc
ljmp
inc
mov
mov
das
mov
dec
aad
and
rorl
cmp
lods
mov
adc
dec
fisubl
sbb
shlb
add
in
clc
ja
dec
test
xor
xchg
fbstp
jns
orl
mov
dec
repz
outsb
mov
lds
ds
adc
inc
int3
scas
sub
add
mov
in
imul
pusha
fldenv
lret
neg
push
xor
mov
inc
popf
sub
lods
jbe
mov
std
in
push
pop
and
inc
dec
movsb
lods
xchg
stos
idivl
in
aas
mov
xor
popf
addb
mov
lret
inc
pushf
pop
sar
insb
xchg
or
mov
inc
pop
dec
inc
insb
jo
fsubrs
sbb
push
sti
mov
pop
test
mov
aam
jg
call
test
adc
aam
mov
addb
mov
xchg
loop
sub
inc
pop
pop
sub
mov
aam
popa
cmpsl
sarb
add
fs
xor
je
movsb
fisttps
cmpsl
dec
shl
shl
dec
test
push
xchg
xchg
mov
stos
jns
adc
loope
int
inc
insb
adc
icebp
lods
xor
in
cmpl
ljmp
pop
lea
pop
and
iret
xor
out
negb
mov
pop
xor
add
pop
xor
adc
jo
lods
inc
shl
mov
jmp
mov
cmp
dec
aam
das
jl
mov
cmp
push
lock
xlat
xchg
jg
adc
lret
out
push
push
lea
push
xchg
rcl
es
daa
dec
or
lret
in
push
and
arpl
xchg
xchg
imul
decb
xchg
arpl
adc
cmp
push
cld
adc
jne
fdivrs
mov
dec
sub
sbb
out
ret
inc
sub
jae
pop
xor
dec
fs
xorl
dec
push
adc
loop
add
xchg
fadds
dec
adc
ds
jge
test
lods
in
and
add
dec
xor
lods
fwait
repz
add
xchg
inc
gs
jb
xchg
loop
add
add
jns
ss
sbb
lret
mov
mov
pop
call
xor
mov
push
loope
xchg
lock
out
pushf
lret
clc
mov
pushf
das
int
pop
repnz
pusha
fcoml
fldl
cmpb
mov
icebp
rol
outsl
jo
pop
bound
and
sub
dec
xor
call
push
movsb
mov
mov
sbb
aas
adc
cmp
xor
out
insl
cmp
out
je
ficoms
arpl
aas
pushf
out
mov
aas
cltd
pop
mov
popa
ljmpw
std
mov
sbb
cs
in
into
aam
dec
inc
cmp
xchg
cmp
adc
xchg
hlt
xor
sub
xor
je
fildll
mov
pop
xchg
mov
sbb
fwait
stc
jmp
lea
leave
or
fwait
hlt
lock
es
pop
das
std
mov
mov
xchg
cmp
sti
jne
adc
add
jecxz
and
fistpl
out
or
stos
in
stos
sbb
add
ret
cmp
fs
in
xchg
setno
push
or
xchg
jb
inc
xchg
andl
sbb
xor
int
mov
shl
sub
insl
adc
aaa
sub
das
subl
jne
stos
add
or
jbe
repnz
mov
push
paddsb
jns
scas
mov
repnz
adc
mov
jne
out
mov
adc
add
dec
xor
in
lods
jmp
adc
adc
out
bound
movd
js
cmc
xor
test
test
fwait
mov
mov
les
cmpsl
out
outsl
pop
f2xm1
movsb
cmp
mov
mov
in
mov
mov
sti
jb
sub
jns
cmpsl
xchg
iret
pop
sub
repnz
stos
insb
insb
repz
add
adcl
ror
lods
into
bsf
ljmp
add
xchg
mov
inc
mov
mov
push
mov
fists
ret
jmp
xchg
mov
enter
lods
shll
iret
push
dec
fwait
movsb
fwait
out
sbb
jecxz
call
pop
xor
clc
movsb
mov
cs
and
int3
aaa
mov
pop
sub
cmc
or
push
jmp
dec
sub
jae
aad
lock
das
mov
lret
andl
insb
nop
ret
call
push
mov
in
xchg
pop
ds
sbb
xchg
inc
rcrl
mov
adc
cmp
lods
add
loop
pop
jl
cmp
jno
das
insl
adc
mov
dec
cmp
jge
pop
adc
add
dec
sahf
in
fs
mov
cmp
pop
xor
dec
enter
sub
cmp
mov
in
or
andl
outsl
arpl
lock
and
int3
fnsave
test
jno
lock
push
outsb
xchg
ds
sbb
ja
push
shll
ja
xchg
inc
loope
das
xor
cmpsl
pop
mov
or
add
fistps
inc
xchg
xor
mov
in
mov
test
dec
rcll
mov
jl
sbb
rolb
movb
mov
mov
jne
dec
sub
lcall
push
out
repz
add
pushw
inc
subl
mov
jle
xchg
icebp
das
enter
vcvtsi2sd
ja
adc
sub
mov
ja
mov
and
mov
cwtl
popa
imul
dec
and
push
sarl
xor
das
jp
scas
mov
lds
mov
js
lods
lret
ret
pushf
adc
js
sub
adc
test
adc
scas
out
lods
adc
dec
and
int
cmp
jns
mov
dec
pop
loop
test
sbb
lds
sbb
xlat
cmp
cmpsb
lea
adc
xchg
daa
sub
mov
push
imul
adc
hlt
push
stc
sub
xor
inc
pop
mov
or
jmp
mov
ficomps
inc
les
incl
lock
jecxz
or
xor
nop
mov
pop
addb
ds
in
push
arpl
sti
cli
jecxz
shrl
sbb
iret
dec
mov
sbb
xchg
loope
sbb
pop
test
aas
sub
cmp
das
dec
adc
call
pop
cmovs
mov
xor
leave
dec
mov
push
insl
sbb
and
add
lock
enter
sub
pushf
dec
dec
or
push
xchg
xchg
xor
out
pusha
adc
test
lods
add
lds
mov
and
mov
repnz
test
insb
jae
fdiv
aad
stos
pop
sbb
cmp
sbb
je
push
test
mov
mov
and
and
insl
xchg
push
push
inc
jbe
psubsb
mov
fsubp
jmp
cmp
dec
add
add
xor
cmpsl
aam
cs
push
in
sub
inc
clc
out
mov
jecxz
and
cmpb
sub
mov
inc
pop
xchg
int
test
adc
cld
or
adc
repnz
push
movsl
mov
cmp
pop
sbb
stc
out
push
adc
ret
ret
insb
or
add
cli
pop
out
jbe
mov
mov
mov
loope
test
es
mov
or
int3
xor
in
dec
and
adc
popa
or
loope
iret
sbb
in
int3
sbb
mov
and
fildl
testl
ljmp
pop
xor
sub
adc
inc
push
cli
daa
push
xchg
push
inc
mov
nop
fmull
jmp
pop
fidivrl
inc
loop
int3
mov
icebp
or
mov
je
xor
leave
push
xor
xor
loop
push
pushl
add
sub
mov
lods
mov
mov
xorl
movsb
jl
stc
pushf
sbb
cmp
jge
inc
sbb
add
add
idivb
cmp
sti
mov
jbe
fwait
fwait
dec
lret
dec
dec
sub
mov
mov
inc
xor
dec
sbb
lret
dec
mov
and
xchg
mov
push
in
sti
or
mov
lods
fidivrl
xor
cmpsl
mov
push
mov
aas
into
js
in
mov
rolb
sub
adc
add
and
aas
add
rcl
andl
mov
ret
jbe
ffree
add
xor
dec
and
xchg
jae
xchg
sbb
stos
cmp
xchg
xchg
sbb
js
std
sub
sahf
pop
lods
ja
lods
cs
cs
loopne
int
ret
inc
int
jmp
or
jae
pop
cmc
push
test
jb
pop
push
dec
mull
push
out
roll
jb
cli
push
pusha
or
jb
mov
nop
imul
pushf
sub
call
push
jnp
add
mov
mov
sub
idivl
add
sub
test
push
inc
cld
loopne
gs
cli
xchg
scas
pusha
xchg
in
inc
mov
out
dec
adc
push
sbb
in
out
les
xor
push
aam
subb
ja
mov
mov
rcl
add
cwtl
xor
jae
add
inc
jp
jecxz
inc
ret
jnp
push
jp
insl
dec
out
fwait
outsl
add
mov
xor
lea
adc
sub
inc
pop
fisttps
ss
mov
and
outsl
stos
ret
into
pop
sub
in
test
jmp
mov
and
adc
lods
sbb
movsl
sbb
xchg
push
pop
addr16
icebp
push
arpl
cmp
xor
fdiv
fsub
xchg
imul
cmpsl
jno
jno
cmpsl
xchg
cmp
jp
dec
pop
icebp
outsb
or
pop
cwtl
sub
jb
push
add
ss
xchg
mov
mov
jg
ja
cmpsb
inc
jecxz
cmp
pop
in
out
fsubrs
pop
pusha
xchg
mov
add
cld
call
cli
sbb
xor
sub
xchg
sub
add
push
ja
or
out
cmp
adc
add
pandn
and
sbb
hlt
leave
orb
mov
xchg
ss
sub
xor
push
xchg
mov
sarl
pop
inc
cmpsl
and
outsl
jecxz
clc
in
loopne
sbb
jnp
subb
adc
dec
pushf
shr
in
and
inc
sarb
iret
cmpsb
test
nop
scas
or
inc
stc
ss
leave
sbb
sub
xchg
aad
jecxz
mov
adc
mov
imulb
repnz
mov
jg
xchg
fiadds
xchg
sbb
popf
push
js
or
jp
cmp
lret
dec
adc
xchg
sbb
rcl
jecxz
roll
clc
aaa
lods
lret
gs
pusha
stc
push
cmc
imul
add
cmc
xchg
sbb
dec
dec
mov
mov
cltd
mov
cltd
adc
add
and
xor
test
inc
xchg
std
std
push
mov
push
rcrl
jno
cld
popa
pushf
repz
mov
loop
pop
repz
push
and
stos
jae
mov
and
adc
and
cmpb
enter
into
push
mov
rcrl
data16
sbbl
stc
dec
jae
xchg
lock
fnstsw
gs
loopne
cltd
inc
sahf
adc
nop
or
or
in
dec
add
mov
xchg
add
sbb
cmp
cmpsl
fbld
out
repnz
xor
hlt
xchg
sbb
out
sbb
jnp
sar
mov
cmc
leave
xchg
rcrl
mov
js
out
pop
mov
ret
push
adc
jne
push
popf
rcrl
fisttps
jmp
inc
popf
push
cmpsb
cmp
and
iret
sub
cwtl
xchg
repz
mov
inc
mov
cmp
and
sub
fmul
push
test
lods
xor
xor
jecxz
add
dec
inc
insb
or
sbb
lret
xchg
sbbb
stc
mov
pop
adc
jle
jno
outsb
push
mov
sahf
mov
aaa
mov
mov
ja
cmp
movb
bound
mov
ja
inc
mov
cltd
shll
dec
ret
repz
lret
sub
inc
ds
mov
xor
mov
fwait
xchg
clc
std
dec
xchg
mov
cmp
adcl
std
and
rorb
lock
jnp
adc
jp
mov
jge
lds
jmp
cltd
in
pop
movsb
rol
test
xchg
or
lock
pushf
int
jmp
loop
pop
test
fs
je
mov
mov
jle
push
mov
xorb
jo
aaa
and
and
les
out
dec
sbb
insl
dec
xchg
add
mov
and
lea
cmp
fisubrs
push
pop
in
imul
clc
fidivs
lahf
das
push
in
cmp
scas
adc
ret
or
push
adc
jle
popf
incl
insl
push
xor
adc
mov
jmp
cld
jns
mov
mov
or
cs
add
jp
call
pop
daa
pop
addr16
pop
or
cmp
aad
xchg
mov
negb
dec
sub
push
mov
subl
pop
mov
xor
add
out
ret
mov
pop
aaa
mov
ljmp
popf
push
sub
cmp
aaa
into
adc
incl
sub
into
inc
mov
aad
call
xchg
cmpsl
fdivrs
inc
push
adc
dec
loop
std
cs
sub
mov
dec
cmp
cmp
lods
insb
popa
das
mov
dec
cld
push
pop
push
imull
mov
inc
adc
or
jmp
xchg
push
cltd
into
pop
adc
loop
mov
pop
addl
inc
jns
js
jge
xchg
xor
addr16
repz
je
lret
adc
or
cmpb
push
repnz
cmpsb
mov
out
rcl
mov
mov
js
fwait
loopne
jl
aas
push
inc
dec
fwait
test
insl
jns
lods
xor
sub
jl
dec
in
out
stos
and
cmp
xchg
xchg
pop
lahf
xor
gs
idivl
add
js
lahf
in
sub
in
cmpsb
mov
dec
add
and
fistps
lahf
repnz
dec
mov
push
mov
inc
xor
out
sub
push
addr16
mov
pusha
xor
jo
sbbl
xorb
into
stos
dec
mov
mov
adc
dec
js
jnp
aas
enter
mov
fcompl
cmpsb
pop
lock
jle
scas
sbb
cmp
adc
sarb
cmp
ja
xor
and
push
add
cmp
mov
cmp
jbe
add
sbb
xchg
mov
mov
jno,pt
inc
dec
ds
aas
sbb
dec
add
mov
xor
inc
inc
xor
push
fwait
mov
dec
push
mov
pop
rcll
jg
cmp
mov
clc
lcall
mov
or
dec
inc
or
jb
aas
in
cwtl
jne
aaa
sub
loope
lock
nop
enter
mov
fmuls
icebp
sub
stos
sub
idiv
daa
nop
out
daa
fdivrs
pushf
mov
neg
cmp
cs
xchg
scas
nop
insb
stos
int3
and
aaa
push
aam
mov
jns
hlt
lds
lcall
pop
xor
sub
sbb
mov
xchg
cmpb
sub
repnz
stos
push
jmp
mov
out
push
daa
shll
lea
decb
lcall
fldt
js
sub
pop
mov
jnp
xor
jl
xlat
mov
aam
fbstp
jp
push
outsb
gs
xchg
sub
inc
push
loope
jmp
adc
sbb
adc
es
jmp
sarl
test
add
xchg
push
xchg
sub
add
mov
shll
xchg
stc
pusha
pop
pop
and
scas
mov
popf
pop
and
movsl
xchg
je
add
xchg
popa
xchg
rorb
cmpsb
cltd
cmp
lds
cmp
fwait
cmpsb
cmp
nop
push
shrl
test
inc
stos
test
ror
dec
push
mov
ds
aad
cmp
push
add
rcl
int3
push
push
pop
or
hlt
cmp
jmp
cli
shlb
sbb
popa
nop
and
rorb
fistpll
dec
lock
or
frstor
cld
fldl
das
in
fnsave
xor
xor
push
cmp
or
lods
sub
fs
xchg
insl
stos
xchg
jmp
adc
fcom
xchg
sbb
stc
test
jbe
inc
mov
test
data16
fidivs
jge
or
jno
xchg
pop
xchg
xor
ficomps
cmp
or
loopne
enter
dec
sub
lods
mov
out
out
std
out
sbb
call
pause
pop
add
dec
sbb
push
sub
pop
push
stc
rcll
add
inc
dec
inc
push
inc
lds
xlat
int3
or
in
js
xor
push
sub
push
in
mov
dec
rclb
into
sbb
outsl
sbb
xor
xor
xor
mov
push
xchg
lock
les
fcomip
sbb
std
cmpsb
mov
pop
jo
sub
push
cltd
in
cmc
push
mov
or
dec
or
jae
adc
sub
setp
repz
hlt
cmp
jmp
dec
or
cmp
add
or
or
les
aad
sub
cmpsb
adc
mov
addb
or
inc
scas
inc
add
push
rclb
mov
ss
push
jb
mov
xchg
setns
add
mov
and
subb
push
mov
lcall
movsl
bound
cmp
inc
dec
bound
xchg
cltd
repz
out
and
insb
lret
imul
inc
mov
gs
es
push
cmp
dec
jl
hlt
cmp
out
push
fwait
xor
add
jae
sbb
mov
pusha
inc
pusha
add
mov
xchg
dec
inc
lods
cmp
test
fdivl
and
movsb
and
jmp
xchg
lods
adc
sub
push
and
push
push
in
push
xchg
push
mov
in
int
add
bound
mov
mov
bound
and
mov
pop
arpl
jae
jb
add
call
rolb
outsl
mov
in
or
xorb
cmp
adc
rcrl
stos
xchg
sub
xor
and
mov
shl
pop
lea
das
mov
xchg
and
mov
sub
fisttpll
lock
pop
pop
lods
inc
xor
out
insb
jecxz
outsl
bound
mov
sbb
lock
test
fistps
sbb
insl
push
clc
pop
xchg
pop
lea
lahf
sahf
pusha
and
mov
aaa
in
lcall
push
dec
paddd
fs
inc
outsl
ficompl
in
aas
loopne
movsb
mov
sub
mov
mov
lock
clc
sahf
je
mov
mov
lods
leave
cmp
cmp
push
test
fcomps
xchg
mov
aam
add
movsl
lock
int
xchg
gs
fmull
iret
nop
bound
xchg
pop
js
mov
lret
fistps
cmp
cltd
xchg
sahf
std
push
xlat
ljmp
test
mov
add
mov
lret
rclb
daa
or
mov
loope
stos
inc
sub
mov
sub
adc
or
push
pop
mov
icebp
dec
sub
ljmp
das
lock
mov
fists
push
ja
dec
or
adc
cmp
cmpl
mov
icebp
xor
xor
pop
inc
addl
movsl
add
call
and
sub
fnsave
xor
loop
push
mov
pop
jle
int3
xor
and
out
jo
fadds
dec
pop
push
push
dec
les
ss
pusha
lret
movsl
movsb
stc
mov
push
jnp
sbb
jnp
outsl
jno
jge
cld
outsb
or
fsubs
pop
push
aas
cmpsb
mov
adcb
mov
or
out
insb
hlt
mov
sar
cmove
and
xchg
pushl
fwait
push
add
and
test
jno
mov
movsb
push
sub
xchg
jno
jnp
jae
inc
xchg
or
movsl
mov
inc
dec
mov
out
mov
ss
add
mov
jmp
gs
sbb
cmpsb
add
pop
adc
and
cmp
lcall
pop
mov
pop
push
mov
cmp
sbb
ds
mov
jmp
mov
inc
scas
xor
mov
push
pop
gs
out
mov
movsl
imul
mov
out
mov
subl
pop
or
mov
pop
jl
pop
iret
aaa
cmpsb
sub
jecxz
mov
mov
lods
outsl
adc
imul
jns
je
adc
insl
sub
je
jnp
lea
test
ret
and
pop
xor
std
fdivp
aad
cwtl
lods
stos
dec
cmp
in
addr16
in
pusha
dec
insb
pop
movsl
xchg
inc
out
fiaddl
push
daa
in
push
pop
lea
mov
jge
jnp
push
shrb
scas
shl
dec
shrl
jp
into
jbe
or
and
mov
lahf
xor
lea
xor
inc
lret
mov
push
je
lret
insb
int
jp
mov
push
idivb
lock
dec
mov
mov
xchg
int3
sbb
popf
mov
aam
out
arpl
push
rorl
push
aad
cmpsb
shll
dec
inc
sahf
push
and
push
push
sti
in
and
in
iret
mov
into
roll
jb
dec
dec
push
and
or
mov
ret
mov
dec
and
cmp
ja
jl
xchg
imul
ja
xlat
mov
cmp
mov
push
xor
add
iret
js
cs
dec
or
into
cwtl
imull
fdivrl
cli
push
inc
inc
mov
test
mov
and
xor
add
adc
jnp
clc
fwait
stc
jno
sbb
les
push
jg
pop
xchg
sbb
push
shrb
outsb
call
mov
sbb
mov
mov
pusha
push
lcall
enter
and
mov
ljmp
push
inc
dec
adc
push
int3
jno
out
int3
sbb
repz
in
cmp
fnstcw
xor
push
or
pusha
jg
shll
clc
aas
cli
mov
insl
and
aas
pop
gs
xchg
lods
clc
inc
push
es
push
and
xchg
aad
insb
test
ja
mov
out
mov
cwtl
insl
jno
push
cmp
lcall
insl
addb
filds
lea
addr16
insl
fidivrs
das
sbb
fistps
or
cmp
ret
add
xor
sbb
mov
xor
sahf
lret
and
testb
jno
lret
dec
aas
add
and
add
les
out
xor
leave
mov
and
fsubl
test
pop
daa
xchg
mov
xchg
mov
fs
cwtl
ljmp
or
out
push
xchg
dec
adc
jnp
pop
mov
out
xchg
lcall
sub
clc
push
outsl
inc
mov
push
bound
mov
sarb
xchg
fisubl
lea
push
xor
dec
std
jo
cltd
pop
mov
popf
movsb
addr16
movsl
nop
testl
int3
pusha
loopne
fs
loope
mov
fstpt
dec
lret
lock
dec
pop
xlat
xlat
sbbl
mov
dec
call
cmp
lds
mov
lea
gs
mov
dec
imul
out
mov
push
into
lret
jns
test
orb
imul
pop
shll
fdivp
push
lock
xchg
lret
daa
mov
cmp
inc
mov
cmp
inc
fisubrs
and
inc
jb
dec
sub
jne
dec
sbbl
cmp
fwait
or
out
cmp
cmp
cmp
mov
xchg
dec
dec
es
mov
nop
add
jecxz
xchg
shll
ret
push
cmpsb
je
xor
xor
add
and
test
mov
mov
dec
push
in
fisttpll
incb
gs
mov
stos
insb
cld
test
jno
bound
stc
movsb
cmpsb
mov
or
jecxz
mov
jp,pt
pop
mov
xchg
sub
int3
cs
pop
add
mov
adcl
and
xor
je
insl
mov
fcomps
outsw
inc
popf
and
xchg
xor
outsb
fwait
lods
add
aas
hlt
cli
pop
inc
lret
jo
xchg
mov
mov
mov
cmpsb
sbb
push
inc
outsl
clc
outsl
inc
xchg
sbb
xor
data16
or
shl
or
mov
fadd
xchg
xor
jge
fcomp
mov
push
scas
push
cs
mov
je
loop
je
mov
mov
sahf
stos
icebp
add
ret
mov
push
and
in
nop
sarb
pop
add
sub
xchg
xchg
jae
sbb
pop
sarb
inc
das
inc
inc
mov
push
icebp
mov
add
push
hlt
jns
push
xchg
mov
jne
mov
cmp
leave
mov
jbe
xor
call
jg
data16
sbb
push
out
je
jno
ret
add
mov
pop
rcll
xchg
mov
int
insl
repnz
test
mov
fwait
jb
nop
sbb
or
xchg
mov
lret
sahf
sbb
mov
jns
adc
jl
arpl
pushf
adc
ror
addb
aas
cmp
fistps
sti
std
lds
fwait
icebp
test
dec
xor
ret
pop
jno
push
inc
sbb
fsubl
fcos
dec
shll
stc
jecxz
mov
dec
pop
pop
xor
xchg
or
or
mov
mov
sub
test
data16
lds
sbb
iret
lahf
les
xchg
out
dec
mov
xchg
aad
cld
cwtl
push
sub
jg
out
sbb
dec
pop
orl
or
xchg
aad
lods
sub
call
mov
jno
mov
aam
jmp
add
inc
pop
lcall
adc
data16
adc
cmp
adc
popa
movsb
ljmp
ffree
test
and
daa
cmp
ss
in
aad
dec
mov
jl
inc
sub
fisubrl
rcl
and
scas
int3
stos
ds
pop
dec
gs
xor
shr
dec
pop
cmp
jmp
jg
pusha
add
or
jg
loope
test
pcmpgtd
push
mov
aam
push
stos
push
movsb
fwait
dec
and
iret
or
faddp
jo
sahf
into
in
jo
das
sarb
sub
int3
aaa
lret
fdiv
in
loop
or
aam
xor
jp
arpl
mov
jg
hlt
dec
jo
and
or
aaa
mov
aam
rorb
mov
cmp
push
dec
inc
out
xlat
pop
int3
xchg
inc
adc
sub
dec
mov
mov
xor
sub
xor
test
xchg
jnp
xlat
xor
jge
pop
sahf
jbe
xor
daa
mov
stos
sub
pop
into
addl
pop
mov
mov
cmpsl
and
xchg
loope
stos
push
dec
mov
mov
rep
test
stos
push
xchg
push
mov
nop
in
jbe
lahf
in
adc
dec
jge
div
mov
mov
aaa
push
loopne
data16
push
mov
test
adc
mov
imul
and
mov
cld
es
cmp
les
cmpsl
movsb
push
jno
sbb
cmpsb
jne
pop
xor
int3
mov
pop
inc
jp
test
es
add
repnz
cmpsl
hlt
daa
cmc
fwait
or
imul
in
lret
clc
inc
movsb
push
loope
push
std
out
das
pop
add
xchg
ljmp
jb
xchg
pop
rcrb
lret
fsubrp
imul
lods
rcrb
cmp
xchg
cmc
cltd
mov
pop
pop
xchg
and
iret
gs
repnz
mov
shll
jl
test
jecxz
xor
roll
inc
push
sub
aas
lret
cli
in
in
ficomps
jp
push
daa
xchg
psubw
inc
repz
ret
add
ror
jmp
lahf
scas
inc
mov
rclb
jbe
mov
scas
test
into
scas
imul
xchg
sarl
sti
das
xchg
mov
addr16
testl
shl
dec
pop
inc
lahf
cmp
test
sbb
ja
and
mov
lahf
adc
pop
data16
and
inc
mov
lea
mov
fcmove
jnp
fidivrl
cmc
inc
arpl
clc
movsb
ss
or
fistps
or
es
es
mov
in
add
fmulp
in
mov
push
or
push
add
outsb
cmc
mov
fisttps
sti
adc
in
push
xchg
arpl
scas
ss
adc
pusha
inc
rep
xchg
and
jne
dec
mov
roll
fcomi
mov
mov
test
dec
jp
push
mov
pushf
movsb
mov
mov
mov
jne
lret
cli
pop
mov
sbb
jl
cmp
cld
inc
mov
cltd
int3
xorb
mov
inc
jp
nop
sub
sti
or
jg
adc
in
cltd
mov
clc
pop
xlat
addl
dec
inc
incl
sbb
rcl
push
sbb
cmpsb
call
shll
hlt
pop
mov
adc
and
es
cmp
leave
int3
cmpsl
arpl
aam
add
cwtl
rclb
daa
mov
or
sbb
rcrl
mov
adc
jmp
add
mov
pushf
cmpsb
pop
push
inc
sbb
xchg
lahf
inc
icebp
test
aad
fmull
mov
jo
xchg
shll
std
js
hlt
iret
mov
sbb
jbe
adc
es
add
xor
jb
loop
sarb
dec
inc
cltd
ficoms
mov
test
out
test
push
inc
jl
xchg
add
xchg
mov
lcall
loope
xor
mov
subl
pop
mov
jbe
push
jns
lock
inc
add
jmp
in
sbb
mov
or
sbb
cltd
dec
mov
adc
ficomps
lods
or
and
test
inc
and
mov
data16
orl
mov
pop
and
stos
ret
outsl
ss
insb
cmovs
insb
xchg
add
push
jae
std
inc
sbb
les
lahf
mov
pusha
enter
aam
decl
cmp
pushf
leave
not
mov
mov
loopne
xlat
fiaddl
pop
test
jb
shlb
mov
mov
mov
mov
jae
mov
popl
push
ds
fisubl
fisubrs
data16
andl
pusha
push
lret
and
xor
fnstsw
ret
mov
add
and
mov
mov
out
stc
out
mulb
subb
rolb
pusha
ds
je
pop
and
or
jnp
mov
inc
xlat
in
orl
ss
push
cmp
push
imul
cs
movsl
stc
xchg
cmp
leave
cmp
mov
mov
test
idivb
enter
jb
sub
xor
out
shl
je
lcall
repz
push
cmp
insb
scas
add
mov
sub
dec
sarl
pop
lods
outsl
mov
adc
xor
fs
out
shlb
jbe
jge
push
sub
in
out
or
das
inc
cmp
pusha
data16
fwait
sti
jno
or
jp
bound
jns
or
push
adcb
sbb
or
je
ja
lock
or
xor
xchg
lret
fsts
inc
icebp
sub
movsb
mov
lock
mov
lods
cmp
test
roll
pop
pop
into
movsb
xchg
push
cmc
les
ret
scas
ficoms
jmp
int
fcoml
jo
xchg
std
fisubrs
and
mov
and
or
popa
repz
cmp
loop
repz
shll
ficomps
fucomi
mov
adc
in
pushf
rcrb
mov
cwtl
out
or
add
adc
leave
imul
or
push
mov
lret
sbb
mov
mov
orl
lds
jns
imul
jnp
jmp
mov
int3
add
jmp
mov
jns
adc
mov
lds
cmp
pop
xchg
inc
or
pop
int3
push
int
jmp
sti
adc
xchg
cmp
push
adc
add
fnstcw
adc
adc
pop
and
out
add
jno
loop
push
cmpsl
les
fwait
lods
mov
mov
and
aas
pop
jnp
mov
inc
adc
xchg
je
add
mov
int3
mov
popf
dec
imul
lcall
push
mov
cmp
in
jae
adc
pop
push
cld
call
jne
enter
or
push
loop
mov
cwtl
pop
jl
mov
sbb
adc
outsl
jecxz
es
xchg
hlt
loope
test
sub
and
sbb
mov
js
int
jno
xor
cs
add
into
adc
out
xchg
inc
xor
mov
pop
cmc
sub
sub
aam
into
aam
leave
push
loope
dec
cmc
ds
cmc
mov
cmp
cmpsl
mov
shlb
adc
xchg
je
mov
inc
jb
pushf
xor
outsl
jbe
loop
fwait
lods
sbb
sti
mov
ret
mov
jge
push
dec
add
jge
inc
insl
cmp
pop
loope
xchg
data16
mov
add
popf
mov
dec
mov
inc
xchg
dec
std
jnp
jae
repz
leave
and
clc
dec
repnz
out
stc
cmp
aad
sub
xchg
mov
mov
mov
sub
loop
das
sbb
imul
sti
jbe
call
mov
or
mov
mov
cli
mov
mov
push
dec
out
jns
arpl
movsb
int3
mov
jae
xchg
xchg
test
inc
je
or
lock
int3
imul
dec
pop
mov
pop
adc
test
push
out
pop
jmp
popf
xchg
mov
mov
aam
push
jno
jle
or
cs
int
mov
sbb
xor
fwait
cmc
in
or
xor
dec
sub
pop
xchg
pop
add
add
xchg
adc
pop
mov
cmp
arpl
jo
pop
pop
hlt
decw
add
jae
loop
gs
push
nop
add
xor
jb
mov
das
mov
xor
sbb
mov
fwait
xchg
stos
push
inc
push
dec
pop
xchg
adc
push
or
frstor
xchg
aaa
inc
and
stos
gs
movsl
fyl2x
ja
into
mov
pop
mov
fwait
nop
pop
pop
and
shll
bound
cmovl
dec
ret
fcomi
sub
dec
xor
cmpsl
xor
jno
daa
out
push
jecxz
xchg
mov
popa
xchg
xor
cmp
mov
cltd
out
in
das
jno
pop
outsb
mov
cmpsb
sbb
lock
mov
inc
fdivr
mov
repnz
scas
pop
andl
cld
call
lea
cmpsb
icebp
mov
xchg
xchg
inc
jge
cmpsl
sbb
test
or
pop
stos
mul
repz
js
aad
inc
in
jmp
mov
xchg
jmp
and
xchg
out
fmuls
mov
inc
dec
out
cmpsl
add
sub
or
dec
add
mov
mov
sub
lret
cltd
loop
xchg
mov
adc
xor
sub
shll
xor
rcrl
add
cltd
imul
aad
xchg
cmp
cmp
sbb
outsl
stos
jmp
adc
loope
stos
sahf
jmp
in
pop
fsubrl
ljmp
jae
dec
jno
cli
jl
jle
test
popl
movsb
adc
out
fdivrp
mov
mov
mov
jno
aad
mov
jg
cld
stc
inc
and
add
sti
out
or
bnd
jecxz
cmp
int3
mov
push
orb
adc
adc
jg
in
gs
mov
ja
rcrl
push
imul
xor
add
and
jecxz
cltd
sbb
outsl
rolb
jae
rolb
movl
jbe
cltd
std
insb
andb
push
cmpsl
fwait
mov
push
andb
int
push
dec
jecxz
clc
xchg
not
cmp
lcall
jne
jbe
add
jno
push
sbb
and
stc
lret
fidivs
test
scas
imul
or
and
movsb
shl
lcall
in
sti
mov
inc
icebp
enter
loope
repz
or
xchg
mov
cmpsl
sbb
sbbl
outsb
and
out
fwait
mov
mov
insl
js
in
xchg
negb
movsb
lds
subb
cmp
add
pop
inc
and
inc
mov
jbe
fnstsw
xor
imul
inc
dec
jp
ret
add
lods
ficoml
sub
lret
jo
push
out
jb
outsw
sub
jne
jle
cli
push
jae
out
sti
loopne
add
cltd
jmp
out
or
imul
shll
or
jecxz
outsb
push
inc
lods
lahf
pop
mov
pusha
jnp
outsb
sub
fldcw
test
cmp
pop
adc
cmp
aas
jp
lea
insl
test
inc
pop
jae
mov
xchg
aas
pop
adc
mov
cmpsb
sub
dec
cmp
mov
push
fwait
xor
sbb
sbbb
inc
imul
rorl
mov
stos
lods
and
mov
icebp
stc
mulb
int
or
std
add
mov
inc
and
push
inc
push
loopne
mov
lcall
clc
inc
sbb
leave
test
mov
push
dec
push
jecxz
and
arpl
jbe
scas
ds
sub
nop
out
aam
fidivl
sahf
inc
add
jl
shr
sbb
jmp
sarb
push
cmp
push
shrl
outsl
dec
inc
and
push
lods
fisubs
adc
pop
xchg
xor
dec
lods
aaa
and
daa
xchg
in
dec
fcoml
mov
inc
fwait
les
int
les
loop
jbe
xor
in
cmp
rcl
xor
scas
pop
lret
jne
insl
pusha
fbstp
sbb
and
jle
es
nop
int
add
mov
push
repz
jmp
jl
or
rol
lock
push
jnp
lret
movsb
xchg
js
adc
mov
pop
test
xor
mov
mov
clc
fldt
and
dec
loope
jb
jns
lret
cmpsl
gs
cmc
pop
out
sub
mov
jmp
test
pop
lret
cld
icebp
xor
addr16
dec
mov
cs
xchg
push
outsl
imul
dec
sub
aam
clc
pop
fidivl
cmpsb
xchg
xlat
inc
adc
cwtl
fs
dec
mov
add
out
in
add
aad
jg
xchg
and
lods
into
loope
repz
aaa
imull
divl
aam
mov
and
adc
mov
cmp
pslld
cmpsb
pop
xchg
and
lock
int
scas
in
mov
push
xchg
and
and
mov
jg
cmpsb
push
in
dec
out
in
sub
ja
lea
mov
lcall
popa
sti
push
sub
jno
sbbl
jno
jbe
add
out
mov
sahf
adc
adc
xor
cmpsl
inc
mov
dec
adc
push
outsl
repz
stos
adc
outsl
repnz
mov
add
test
loop
and
sub
xchg
out
fisubs
arpl
inc
dec
xchg
rol
stos
cli
arpl
pop
je
inc
inc
lods
test
mov
scas
push
arpl
inc
int
sub
adc
mov
push
or
fucomip
mov
inc
dec
ss
jmp
xchg
xor
fsub
add
pop
cmp
mov
dec
adc
inc
xchg
daa
add
xchg
loop
aam
dec
nop
xor
mov
rorl
pop
in
push
push
inc
adc
cmpsb
pop
outsl
xor
sbb
fbld
ljmp
push
jbe
cmp
pop
xchg
ja
jge
imul
inc
lods
push
sbb
sarl
outsb
adc
xor
xchg
pop
aad
sub
and
cmpb
into
es
lahf
repnz
cmpsb
push
inc
test
pop
pop
adc
lods
mov
mov
rolb
adc
pop
daa
lock
les
loop
in
add
jns
lcall
lds
inc
repz
rorl
jb
lahf
cmp
pop
xor
pop
adc
push
std
enter
or
loope
std
mov
loop
mov
leave
outsl
mov
fstl
movsl
xchg
mov
stc
ret
scas
add
repz
ds
mov
das
push
and
icebp
and
les
mov
pop
xlat
pushf
test
cwtl
add
loopne
js
pop
pop
pushf
data16
sub
push
je
mov
or
jbe
xchg
daa
test
push
dec
repz
idivb
add
fsub
cmpsl
mov
into
add
push
push
mov
shlb
imul
ret
nop
add
fwait
insb
mov
stos
sbb
jge
mov
dec
mov
fcompl
mov
scas
fs
out
lods
pop
divl
xlat
mov
inc
inc
fpatan
sub
sub
repnz
fnstcw
icebp
pushf
dec
inc
daa
and
xchg
mov
inc
idivb
sbbb
insb
testb
lods
pop
das
cs
scas
cmpsb
mov
mov
xchg
sbbb
movb
cmp
test
inc
es
or
outsb
jmp
sahf
or
mov
add
pop
mov
and
jns
xchg
stc
push
push
mov
mov
insl
cmpsl
fidivrl
mov
dec
cmp
insb
pop
jnp
adc
sub
sub
cs
test
jns
int
stos
mov
mov
and
mov
inc
fidivrl
mov
pop
aas
mov
mov
dec
pop
rcll
fistl
popf
sti
inc
orl
fisubs
scas
icebp
or
xlat
adc
das
int
xlat
js
add
adc
stc
insb
icebp
shlb
add
rorb
popf
loop
js
sbb
pop
popa
mov
in
andl
push
repnz
xlat
jno
imul
jle
mov
push
aad
mov
cld
popf
jp
push
cmp
add
mov
cwtl
push
inc
insb
add
cld
repnz
int3
lods
int
subl
dec
mov
mov
cs
test
push
aaa
in
and
mov
xor
lods
pop
sbb
mov
jecxz
ljmp
xchg
cs
xchg
pop
adc
es
pop
dec
mov
sbbb
repz
or
mov
or
test
lret
sets
and
cmpsb
adc
lcall
lods
iret
sub
ret
loope
test
in
pop
push
xor
mov
mov
add
and
loopne
xchg
adc
mov
xchg
icebp
jle
xchg
pop
push
rcrl
cmpsb
cld
sti
int3
pop
fsts
aas
cld
repnz
xchg
or
mov
jb
stc
pusha
pushw
shrl
xor
mov
leave
adc
fidivl
outsl
inc
fwait
add
shrb
lret
push
mov
push
jne
jb
push
enter
or
inc
mov
jae
ret
outsl
mov
push
xchg
lret
movsb
and
mov
or
inc
xlat
mov
imul
xchg
sbb
imul
icebp
shl
imul
mov
mov
lods
xchg
jg
push
nop
test
mov
inc
icebp
push
mov
out
mov
mov
mov
push
add
sub
enter
mov
add
push
mov
enter
aaa
outsl
jae
js
inc
mov
ds
pop
inc
cltd
pop
inc
in
mov
out
rol
push
call
lcall
sub
pop
mov
dec
xchg
cmp
orl
sub
pop
jns
mov
or
xlat
jnp
pusha
or
pop
fldl
repz
jle
jno
inc
test
and
addr16
add
mov
int3
sbb
or
cmp
xor
pop
and
or
das
pop
out
xor
xchg
cmc
inc
sbb
repnz
notb
mov
into
mov
push
and
ja
push
add
mov
xchg
mov
inc
in
push
sbb
out
mov
xchg
dec
pop
xchg
inc
pop
sub
cmpsl
mov
mov
sub
out
push
shrb
dec
movsb
insb
mov
nop
mov
inc
xchg
jno
je
ja
ret
leave
rol
xchg
es
aaa
ret
pushf
jl
bound
aam
in
adc
xchg
xor
sbb
pop
ret
lret
xchg
movsl
scas
shlb
xor
xor
scas
aad
mov
sub
scas
and
rcrl
xchg
mov
ret
mov
mov
mov
mov
pop
add
mov
inc
stos
jae
push
repz
xor
xchg
mov
mov
test
test
inc
subl
stc
mov
pop
test
pop
or
and
call
push
mov
jnp
test
push
or
fisttps
shl
lods
in
push
in
pop
cmp
mov
loopne
inc
cmp
out
cmp
xchg
xor
movsl
dec
test
out
fsubs
ss
lods
push
xchg
pop
lods
mov
mov
add
mov
adc
xchg
pop
or
stos
jne
sub
aad
outsl
mov
push
mov
mov
xchg
lret
cwtl
mov
fisubrs
jge
fs
mov
xor
inc
in
pop
lods
jmp
or
clc
push
or
adc
frstor
shlb
and
js
fiadds
xchg
test
or
mov
into
dec
xor
jb
int3
jge
gs
xor
shrl
leave
insb
in
xchg
pop
mov
stos
add
pxor
fs
in
orl
sbb
jg
push
cwtl
sub
and
loopne
jmp
addr16
movsb
xchg
js
testb
repz
push
test
testb
incb
hlt
xchg
pop
test
pop
movsl
mov
inc
mov
in
fsubp
inc
out
imul
xchg
push
lret
inc
pop
pop
ret
sbb
dec
adc
xor
repz
in
or
mov
mul
lcall
mov
and
and
mov
int3
mov
cmpsb
sub
mov
repz
les
add
loop
in
insl
adc
xchg
jb
lret
fcompp
inc
xchg
jge
pushf
stc
push
or
sbb
mov
xchg
inc
pushf
xlat
push
pop
stc
pop
shl
lock
push
jo
cmp
rcl
jns
in
jns
imul
xchg
dec
js
les
mov
test
insb
xor
icebp
fiaddl
sti
dec
pop
test
fcmovnbe
imul
pop
inc
test
icebp
nop
insb
out
sub
mov
sub
sti
idivl
inc
daa
lcall
stos
mov
xchg
push
mov
pop
lods
bound
dec
scas
pop
pop
fcoml
mov
in
das
jmp
jmp
cmp
push
dec
scas
adc
andb
push
mov
add
xor
dec
imul
insb
cmpb
aam
clc
int3
adc
add
stc
iret
int3
int
std
sub
pop
fdivl
enter
jge
jl
or
jne
stos
cmp
dec
stos
cmp
xchg
loopne
push
icebp
push
lock
test
mov
or
arpl
mov
into
push
scas
insb
xor
pop
in
rorl
dec
sub
mov
sub
lods
mov
cmp
mov
adc
lds
mov
shld
mov
es
outsb
inc
ud0
in
mov
pop
xchg
push
pop
stos
sub
sahf
notl
push
adc
sbb
push
stc
or
adc
pop
or
lock
aaa
cmpsl
sub
inc
adc
inc
add
inc
ret
dec
aas
xchg
xor
movsl
fsubrp
or
je
xor
stos
subb
xchg
test
pop
xlat
pop
ret
mov
fs
adc
or
or
inc
in
lods
addr16
dec
jo
xlat
into
add
test
fistl
jns
out
sahf
cmp
and
mov
not
addr16
loop
push
popa
xor
sbb
bound
push
pop
adc
outsl
adc
cmpb
jae
or
xor
dec
ret
and
xchg
inc
ret
add
and
xor
in
bound
addr16
fwait
daa
ljmp
pop
dec
or
add
out
and
inc
add
stc
lock
pop
es
or
and
dec
mov
pop
or
sbb
enter
add
adc
addr16
mov
out
loopne
cmp
int
loop
lods
fs
aam
loope
jae
inc
and
mov
or
pushf
jl
dec
inc
mov
jbe
cs
pop
dec
daa
add
lret
fdivl
arpl
xor
adc
push
xchg
je
mov
lods
or
and
aad
leave
sar
pop
divl
or
les
adc
cs
daa
cmp
and
jno
mov
fstl
mov
or
mov
and
pop
push
sbb
ljmp
and
pop
call
mov
mov
push
rolb
movsl
movsb
fsubs
sub
push
dec
sarl
out
and
pop
cli
jecxz
sbb
ja
mov
jo
push
insl
fxch
rcr
mov
mov
push
ljmp
or
mov
inc
cs
frstor
adcb
mov
roll
fimull
and
jno
xlat
outsl
xor
insl
hlt
or
inc
push
pop
fst
int3
addb
ds
sbb
movsl
aam
inc
jb
dec
mov
xchg
jle
imul
push
push
mov
data16
push
mov
rcll
adc
pop
lahf
pop
push
push
pusha
loope
test
push
rcrb
loope
xchg
js
cwtl
cld
mov
adc
push
iret
insl
cs
inc
sbb
orl
stos
or
pop
daa
scas
jg
dec
add
cmp
mov
in
movsb
shll
and
data16
es
pushl
sub
rolb
out
call
icebp
sbb
pop
or
sub
ljmp
leave
repnz
mov
sbb
stos
push
popf
mov
insb
cld
in
add
push
cmc
jg
fadd
or
cwtl
js
xor
out
xor
hlt
cs
mov
gs
mov
in
or
fcoml
mov
dec
sbb
sub
xchg
in
xorl
push
cld
leave
scas
fs
mov
sahf
mov
fs
cmpsb
lret
mov
lret
stos
lcall
xor
insl
decl
xor
mov
push
scas
inc
test
ret
notl
xchg
sbb
mov
mov
rorl
dec
mov
subl
not
jl
cmp
aaa
lcall
mov
or
jle
daa
push
fsubrs
push
sahf
xor
pop
enter
dec
popa
test
ror
xchg
cmp
or
xor
and
dec
jno
dec
adc
gs
sbb
dec
mov
mov
mov
dec
test
push
scas
bswap
insb
sbb
pop
cltd
shll
mov
mov
lds
divl
jl
cmp
xlat
mov
in
or
pusha
push
ljmp
iret
pusha
sub
sbbb
sbb
push
jmp
enter
adc
push
inc
mov
ret
inc
push
lea
push
insl
push
pop
stc
movsl
xor
pop
lods
pop
clc
mov
test
call
leave
pop
aaa
jg
sahf
subb
lods
test
ds
sbb
mov
pop
jmp
jnp
aad
xor
cmp
ret
jne
gs
mov
fwait
sub
and
imul
scas
mov
xchg
dec
mov
in
xor
mov
es
mov
xchg
insb
fcoms
mov
test
divl
add
pop
mov
jo
pushf
insb
jge
stc
or
sti
cmp
pop
imul
dec
xchg
and
loop
add
sahf
fwait
adc
jne
pop
push
jge
dec
fnsave
xchg
mov
jp
lods
mov
out
gs
loopne
dec
cmp
ret
sub
cmpb
lahf
cmpsl
shll
in
data16
sbb
adc
xchg
xchg
inc
inc
ret
cmc
xor
mov
push
adc
xchg
daa
dec
inc
lds
jnp
sbb
imul
sub
push
jne
sti
movsl
pop
sbb
adc
in
xchg
inc
negl
push
mov
xor
push
pusha
loop
mov
mov
bound
jmp
add
movsb
pushf
xor
and
lods
mov
out
push
in
daa
mov
dec
xchg
cli
stc
scas
or
fsubl
mov
in
add
jo
bound
fnsave
or
pusha
movsb
ficoml
jns
jl
push
adc
inc
xchg
popa
pushf
xor
outsl
ljmp
mov
and
fistpll
js
pop
mov
inc
cmp
mov
push
ljmp
xlat
xchg
mov
popa
lret
fs
int3
hlt
lods
and
ds
mov
mov
test
xor
fiaddl
stos
dec
out
arpl
cli
lods
pop
xor
pop
jo
jge
out
aas
pop
test
add
adc
roll
sub
inc
cmpsb
ja
stos
test
ds
push
adc
out
fisttpl
rolb
cmp
pop
lret
outsb
xchg
cmp
adc
enter
hlt
pop
leave
ret
cmp
insl
bound
je
pusha
lret
jecxz
mov
lds
or
and
or
lds
insl
sbb
scas
xchg
ja
and
pop
mov
mov
out
rcrb
rorb
stos
std
push
xor
adc
xlat
gs
in
fldcw
arpl
hlt
pop
mov
adc
insb
push
rolb
dec
cmp
xor
ds
lcall
in
fwait
jb
mov
cmpsl
push
pop
mov
icebp
xchg
xor
out
jg
push
sub
pop
imul
arpl
dec
mov
aas
jae
sub
sbbl
mov
fs
cmp
dec
pop
or
popf
push
cs
mov
pushf
add
mov
cmpsl
hlt
sbb
jno
adc
and
je
jl
pushf
adc
rolb
mov
shrl
xlat
xor
mov
ds
xlat
or
sarb
push
cmp
out
cltd
inc
lret
sbb
inc
in
sub
ja
pop
std
mov
jae
mov
ja
pop
xchg
inc
push
mov
movsl
adc
test
pop
arpl
insb
jnp
int3
or
lock
fldcw
rolb
loopne
fistpl
pushf
sub
pop
scas
test
adc
repz
lret
das
mov
sbb
or
mov
test
test
repz
xchg
fwait
int
test
mov
dec
sti
and
int3
ficoml
aad
mov
pop
sub
jnp
nop
scas
xor
jns
cmp
push
arpl
test
rcrb
adc
stos
in
adc
xchg
adc
scas
dec
mov
gs
pop
stos
scas
pusha
jnp
xor
sbb
iret
loop
and
clc
push
jecxz
add
cmpb
aad
popf
mov
out
in
ja
lret
mov
pushf
les
arpl
xchg
and
loope
in
sbb
mov
mov
icebp
mov
pop
fsub
jl
jne
fcoml
dec
sbb
cmp
popf
sub
addb
icebp
mull
sub
push
lock
adc
imull
insl
jb
and
in
adc
pop
lea
adc
sbb
arpl
fiaddl
insb
stos
rorb
cmp
jle
incl
sub
insl
movsb
and
enter
mov
mov
repz
dec
or
add
mov
fcomps
lods
jl
test
jae
test
mov
pop
rcrl
lahf
mov
sbb
pushw
dec
or
jb
in
mov
test
ds
push
lods
fsubrs
dec
popa
cmp
lods
pcmpgtb
adc
fiadds
mov
push
call
lahf
sbbl
xor
xor
mov
pushl
push
jnp
jmp
pop
mov
mov
xchg
je
popa
loope
mov
aad
push
sbb
pop
push
shlb
inc
mov
scas
xlat
inc
loope
add
mov
cmp
mov
or
pop
jmp
xor
mov
push
std
js
push
jbe
mov
sub
cmp
fs
gs
cmpsb
ret
jecxz
push
push
add
or
das
outsl
push
cmp
mov
push
mov
add
push
gs
inc
mov
scas
stc
bswap
es
enter
mov
pusha
mov
sub
fwait
rcrl
int3
xor
sbb
dec
out
push
mov
ljmp
nop
lods
jae
xchg
js
push
add
mov
mov
aam
je
push
mov
stos
arpl
mov
ds
add
stos
mov
inc
jle
lahf
xchg
lret
mov
sbb
sbbb
mov
or
adc
movsb
dec
and
aad
inc
mov
out
xchg
dec
fiaddl
mov
inc
push
iret
rorl
pusha
mov
mov
mov
insl
outsl
loope
cmp
in
mov
gs
aaa
sub
in
inc
sub
pop
mov
les
mov
aaa
mov
sbb
std
sbb
xchg
test
sbb
cmp
and
dec
pop
insl
pop
lret
add
iret
mov
ds
pop
cli
into
xor
push
mov
addl
inc
sbb
push
mov
xchg
ffreep
scas
aaa
or
fldt
or
push
pop
push
into
mov
push
xor
dec
add
sti
ds
cli
push
jae
ret
shll
mov
movsb
or
mov
or
scas
mov
and
jmp
mov
inc
cltd
inc
mov
mov
jmp
insb
arpl
orl
lods
mov
ret
mov
sub
jmp
mov
pop
bnd
push
shr
xchg
dec
pop
push
sbb
insl
mov
out
or
lea
es
xchg
dec
sbb
ret
mov
cmpsb
xchg
insl
xchg
pop
dec
cli
xchg
jb
pop
lock
and
int
lahf
jae
lcall
iret
lods
cmp
loope
hlt
pop
sbb
jg
jnp
pusha
xor
fstpt
xchg
mov
push
mov
pushf
push
mov
mov
sti
out
push
and
lret
jmp
lcall
xor
lfs
jns
sub
imul
lcall
jo
push
clc
call
mov
fidivrl
or
cmp
les
pop
negb
sub
inc
mov
mov
mov
sub
in
sbbb
mov
push
test
cmp
lock
loopne
xor
lcall
call
addr16
lds
arpl
dec
push
pop
xor
cmp
cmp
add
in
cmp
mov
pop
cmp
mov
iret
fadds
mov
adc
jg
mov
jle
loopne
mov
cmp
pop
push
sub
sub
scas
enter
je
mov
sbb
jg
and
fildl
or
mov
dec
scas
xor
fwait
loop
mov
test
leave
lds
data16
iret
jle
shlb
pop
cli
cmp
mov
inc
mov
xchg
dec
out
arpl
jecxz
sbb
jecxz
lods
mov
adc
adc
mov
xchg
mov
cld
mov
pop
fs
popa
repnz
pop
lock
orl
shl
scas
ss
sbb
dec
jl
stos
sub
pop
sub
cltd
push
roll
lret
cmpsl
lods
clc
test
shll
dec
push
xor
int
jmp
data16
in
lods
and
or
push
into
fs
imul
out
or
popf
xchg
in
popa
push
stos
cmpsl
rclb
lret
inc
jnp
pop
push
jle
xchg
mov
ret
xchg
imul
jae
fstl
loop
add
sti
cmpb
imul
idiv
fstp
ss
js
jns
push
imul
push
xor
inc
adc
sbbb
dec
mov
mov
ljmp
sbb
aad
pop
push
mov
xlat
gs
and
cmp
sarb
pushf
lahf
cmpl
xor
lds
mov
icebp
aam
flds
out
imul
or
fiadds
dec
pop
pop
and
push
fwait
and
mov
in
addl
mov
dec
cmpsb
and
inc
cmp
les
gs
add
ficompl
imul
inc
and
nop
pushf
push
push
int
lock
fs
fwait
push
orb
aad
cmp
notl
hlt
mov
mov
push
mov
sti
icebp
mov
jl
flds
out
icebp
and
mov
js
adc
xlat
sbbl
mov
test
mov
dec
jle
xor
push
test
faddl
pop
xlat
popa
ljmp
and
inc
sbb
aad
outsl
sbb
fldl
lret
outsl
call
mov
xchg
lcall
mov
and
movsl
sbb
stos
aaa
mov
jnp
jnp
mov
daa
or
fbstp
xchg
jne
enter
clc
test
aad
hlt
out
movsb
sbb
mov
int
andb
hlt
xor
out
punpcklwd
pop
ret
dec
push
push
adc
fisttpl
sarl
lahf
cmpsl
imul
int
icebp
xor
adc
jnp
out
push
aad
sti
adc
jbe
inc
pop
lret
fcomi
daa
clc
inc
jnp
add
push
xor
mov
jmp
int3
inc
imul
xor
dec
inc
loop
movsl
push
inc
je
iret
gs
xchg
sar
stos
mov
aad
sub
mov
daa
push
inc
push
ja
lret
popa
fs
popf
lretw
adc
xor
call
test
jmp
or
lods
fwait
loopne
mov
mov
lcall
adc
out
sbb
dec
int3
fcmovu
aad
xchg
push
test
adc
or
call
daa
fcmovu
scas
fildll
ds
pop
fwait
inc
icebp
push
in
or
dec
pop
clc
push
popa
cmp
inc
movsb
pop
idivb
jb
xor
loope
loop
mov
test
adc
push
cs
aaa
xor
mov
jne
int3
hlt
sbb
cs
cli
imul
sub
pop
add
inc
mov
mov
sbb
fs
pop
xchg
push
mov
dec
jecxz
push
inc
popf
cmc
lds
fnstenv
in
icebp
jge
pop
loop
leave
js
mov
adc
mov
adc
xchg
pushf
cs
mov
add
ljmp
testl
test
mov
pop
scas
sub
pop
fnsave
shrb
push
mov
js
gs
or
mov
cmp
fwait
pop
add
xchg
and
add
cmpsb
jae
aam
test
repz
sbbl
xchg
adc
mov
add
jns
inc
mov
insl
mov
lea
xchg
shll
cltd
scas
std
and
ljmp
pop
ss
call
addb
adc
or
xchg
cmp
adc
adc
cli
aam
and
mov
xor
dec
dec
or
inc
pop
inc
dec
adc
adc
xchg
adc
test
ja
jle
sub
and
pop
adc
add
gs
mov
mov
mov
xchg
cld
push
adc
cmp
dec
push
xor
stc
fisubs
jl
mov
or
push
xlat
xchg
popf
mov
dec
pop
pusha
mov
daa
sbb
insl
in
test
push
mov
mov
mov
cli
fbld
movsl
mov
cltd
mov
jge
es
es
inc
sbb
sti
inc
xor
inc
adc
add
aam
adc
stos
xor
jae
mov
lcall
jecxz
push
xor
cmp
cmp
aad
mov
xor
xor
dec
add
stos
lret
movsb
pop
lea
mov
in
mov
scas
out
loop
and
lret
test
repz
fisubrs
push
sub
clc
in
xchg
jns
data16
mov
xchg
xchg
mov
jle
and
in
addr16
popa
mov
fldl
jbe
xor
fwait
push
scas
dec
sub
pop
pop
daa
cmpsb
sbb
sub
jns
sub
flds
jnp
push
ss
outsl
movsb
loope
pop
test
repnz
shlb
or
jo
dec
add
mov
and
mov
hlt
mov
jecxz
sbb
daa
daa
dec
ret
sbb
or
jne
jl
inc
adc
xlat
inc
push
push
mov
addr16
add
mov
insb
test
xchg
cmp
fs
xor
ja
sarl
xor
dec
movsb
pop
adc
insb
inc
fisttpll
outsb
mov
cmp
or
loopne
jnp
mov
cld
iret
xor
nop
fidivl
loop
and
jnp
jns
jo
mov
inc
stos
jecxz
jle
sub
imul
lds
adc
lahf
fsts
mov
adc
aaa
shll
sub
test
xchg
aam
ljmp
popf
add
mov
push
imul
xchg
jae
nop
dec
push
ss
loopne
ret
sub
jnp
mov
rorl
lret
sub
push
cmp
add
cwtl
add
xchg
test
push
outsl
insb
mov
cld
add
mov
cmp
mov
jp
adc
sub
sbb
mov
mov
pushf
adc
jmp
notl
gs
jg
rcrb
imul
leave
mov
js
lock
adc
aaa
aaa
sub
push
adc
and
stos
dec
add
dec
lods
addr16
cmp
rcrb
insl
imul
cmp
daa
sahf
lret
mov
fstl
jle
scas
in
out
dec
lods
movsb
lahf
mov
mov
cmp
rclb
sub
jno
fwait
mov
cmpsb
sub
push
pop
mov
pop
cmp
xlat
adc
fdivrl
adc
and
sbb
mov
adc
cmpsb
out
ret
ljmp
imul
out
repnz
sub
lods
cmc
push
jae
adc
xchg
aam
push
shlb
aad
cmp
pop
mov
push
imul
sarb
insb
mov
jno
push
hlt
cmpl
sub
cmp
or
pop
clc
in
add
mov
sub
push
add
and
add
int3
sbbl
lcall
jmp
mov
sub
xor
mov
add
xor
push
pop
or
jmp
jb
sbb
aam
in
inc
neg
icebp
or
xlat
push
sarb
sbbb
push
in
cwtl
push
jmp
inc
pop
fdivr
mov
insl
ret
push
out
in
daa
push
pop
subl
aaa
dec
in
ss
nop
add
cld
jae
cmp
hlt
adc
fisubs
stos
mov
pop
jo
pushf
pop
aaa
adc
js
mov
push
ljmp
adc
leave
lahf
out
mov
push
jne
mulb
mov
pop
movsb
inc
in
dec
push
ds
xor
mov
xchg
sub
push
divb
jno
push
iret
cmp
pop
shlb
inc
pop
jge
xchg
les
mov
xchg
scas
xchg
and
sti
call
dec
xor
call
addr16
add
roll
in
mov
inc
lret
adc
dec
into
mov
push
test
loope
jo
ds
femms
pop
mov
jb
outsb
pop
mov
xchg
les
pusha
push
test
dec
cmp
or
scas
rorb
xchg
filds
and
stc
shrb
push
loopne
sub
jmp
sub
dec
inc
cmp
pushf
enter
mov
int3
lods
push
dec
imul
lods
inc
jno
test
cmp
adc
mov
add
dec
sub
push
pop
js
push
daa
fwait
xchg
sub
test
fld
push
xor
fiadds
push
aaa
mov
popf
fsubrp
inc
jne
mov
negb
in
adc
adc
adc
pop
jecxz
popa
aam
add
or
pop
xchg
aas
jge
gs
dec
mov
xchg
into
add
stc
pusha
xor
mov
out
call
dec
mov
pushf
push
imulb
mov
popa
cmpsl
imul
ja
mov
outsb
xchg
lods
push
es
inc
or
cmc
mov
mov
cmp
add
jg
shll
ljmp
lret
pop
push
mov
push
xchg
jp
mov
repnz
fcompl
data16
mov
out
sub
sti
sbb
push
gs
and
cld
xor
cmpsb
cs
rol
dec
cli
mov
test
pop
loope
or
aad
adc
repnz
mov
inc
mov
cli
xor
ja
sbb
jecxz
mov
pop
and
adc
add
lods
outsl
mov
out
mov
loop
imul
ss
movsb
test
sub
stos
sbb
xchg
lods
dec
pop
addb
push
test
pop
in
pop
cli
pop
popa
push
mov
adc
jge
fistl
repz
loope
jbe
arpl
repz
sahf
jmp
push
pop
loope
data16
inc
fs
pushf
and
data16
fnstsw
push
xor
outsb
jg
mov
push
sbb
dec
mov
ljmp
jbe
xchg
dec
stc
inc
lods
push
push
pop
pop
outsl
xchg
sarl
pop
sar
add
int3
movsb
xor
ja
adc
push
cmp
scas
sub
movsl
in
iret
sbb
lock
jmp
shl
int3
aam
xchg
inc
mov
inc
pop
cltd
ficoml
sbb
and
jno
or
jnp
inc
cwtl
cld
or
xchg
stc
cmp
ja
pop
enter
mov
in
mov
push
sub
and
mov
outsb
push
loopne
cmpsb
pop
add
ret
xor
or
mov
xor
cmp
xor
sub
adc
push
xlat
nop
mov
insb
and
ret
jno
movsb
push
adc
adc
inc
out
pop
movsb
dec
mov
sub
push
adc
sub
fcoms
mov
out
pop
iret
subl
iret
push
or
push
xchg
mov
push
add
ror
in
add
stc
pop
je
mov
xchg
in
dec
xchg
fnsave
repz
aad
call
mov
mov
xlat
cmpl
ss
push
out
scas
jl
test
dec
insb
aas
or
lahf
mov
je
jl
scas
mov
nop
lcall
loop
or
mov
stos
je
scas
xchg
sbb
mov
xor
addb
inc
push
popf
test
add
push
sub
xchg
call
push
inc
jno
push
bound
inc
mov
stc
jg
stos
xor
cwtl
jns
sarb
jns
out
cmp
sti
lcall
adc
insl
mov
push
arpl
pop
add
xor
push
add
and
rclb
inc
pop
insb
mov
dec
mov
or
or
dec
fldenv
jns
addr16
hlt
sbb
fiadds
nop
test
jmp
daa
rclb
sub
test
into
ss
out
pop
mov
fsubp
mov
adc
push
jmp
xchg
and
mov
insb
xchg
mov
mov
int3
pop
add
jne
mov
mov
jg
inc
push
xchg
fwait
adc
mov
in
jg
cltd
lahf
rorb
xchg
jae
or
scas
in
shl
sbb
es
fsubrs
cmpsb
pop
cmp
push
jo
xlat
aad
mov
aaa
mov
cli
xchg
xchg
inc
dec
movsw
pusha
push
jge
mov
call
fildll
mov
mov
sbb
mov
fistps
imul
fsubrl
xchg
mov
jbe
andl
dec
out
lret
out
imul
jae
or
xchg
lea
pop
pushf
xchg
nop
add
mov
dec
lds
jnp
dec
sbb
add
push
aaa
rorb
hlt
loop
jno
add
sahf
pop
xchg
add
xchg
int3
ja
and
cltd
arpl
sbb
lret
push
and
jge
adc
push
xor
push
stos
push
add
or
sub
sub
jne
push
test
mov
pushl
add
adc
out
lods
sbb
aam
jne
pop
push
lds
rcll
push
call
mov
dec
xchg
shll
imul
clc
add
bound
xor
sbb
adc
adc
shlb
test
mov
testb
dec
sbb
mov
cmp
aam
imul
mov
xchg
mov
sbb
mov
out
aas
jne
cld
inc
sti
jnp
cli
and
inc
sbb
jp
dec
mov
paddd
loop
inc
sub
inc
cmpsb
push
test
xchg
orl
jge
adc
scas
mov
sti
xor
push
xor
jns
push
jmp
ret
call
out
push
clc
and
inc
add
pop
movq
jo
outsb
shlb
pop
pop
push
sub
jo
pop
xchg
pop
mov
lock
push
mov
fs
xchg
pop
in
test
popf
sti
sub
jb
aas
cmpsl
or
push
push
ret
dec
sbb
xor
les
fisttps
sahf
pop
imul
in
pop
jo
push
cmc
mov
push
insl
jno
js
pop
test
adc
push
mov
fwait
or
arpl
flds
popf
push
mov
fistpll
in
das
pop
fwait
adc
insl
lds
outsl
or
jle
dec
pop
insl
nop
test
sarb
xor
insb
je
jl
rol
popf
mov
and
dec
xor
outsl
paddd
mov
movsb
data16
push
lock
sub
test
pop
fnstenv
inc
pop
arpl
in
inc
iret
or
dec
bound
and
push
sub
mov
imul
pop
adc
adc
sbb
stos
pop
mov
movsl
mov
push
fxch
xor
in
fucomip
out
mov
xchg
js
and
sbb
sub
and
push
stos
ret
adc
cmp
jno
jmp
push
jnp
movsl
test
mov
mov
mov
fildl
cmp
lret
sahf
push
call
or
jl
lods
andb
xor
adc
inc
data16
and
dec
push
inc
shrb
jg
insl
adc
xchg
out
mov
aam
push
imul
and
dec
xor
or
das
cmp
xor
xchg
xchg
sbb
nop
testw
addb
pusha
scas
call
loope
nop
jb
in
inc
and
jmp
adc
inc
decl
in
lock
cmpsl
jmp
adc
mov
sti
dec
repz
xchg
fidivrl
cwtl
mov
and
sahf
addb
add
lret
js
jle
ja
lods
bnd
jae
adc
subb
mov
pop
jae
xor
cld
lods
call
push
mov
mov
dec
mov
roll
add
lcall
fisubrs
mov
push
arpl
cmp
jae
dec
cwtl
stc
pop
mov
and
push
xor
or
cwtl
pop
je
movsb
out
add
outsl
repz
lea
add
push
stc
inc
or
push
popa
xchg
xor
fisubrl
jne
xor
mov
imul
xor
leave
in
pop
dec
jae
inc
mov
insl
test
sbb
push
out
pop
addr16
add
ljmp
jnp
sub
rcrl
mov
push
aaa
jns
jnp
sub
push
hlt
or
inc
push
cmp
sti
push
test
inc
sbb
loope
lcall
fst
cwtl
jbe
scas
lret
mov
fidivrs
xchg
cmpb
jg
sbbb
mov
xchg
sbb
loop
add
and
repz
shll
aaa
fnsave
or
sub
adc
sbb
or
add
lahf
int
js
mov
test
std
in
xchg
test
cld
xor
icebp
adc
dec
xchg
mov
rorb
xchg
cmp
mov
lret
iret
cmp
pop
jae
sbb
push
jbe
daa
sbb
lods
movq
jmp
lods
and
xor
adc
mov
test
sbb
jo
dec
rorl
xchg
or
mov
ret
icebp
adc
inc
mov
aaa
das
cmp
stc
cmp
filds
xor
xor
fimuls
test
cmp
add
sub
test
jmp
mov
cmp
ja
mov
leave
ss
or
mov
or
mov
mov
pop
pushf
or
xchg
fwait
movsb
mov
gs
adc
and
dec
or
or
out
dec
sbb
lret
ret
push
cmp
xchg
fnclex
test
sub
mov
call
imull
out
or
outsb
add
shrb
adc
sbb
push
push
pop
lods
mov
jb
pop
jge
inc
loopne
repnz
mov
ljmp
in
out
mov
jne
jecxz
cli
shrl
xchg
and
fbld
xchg
mov
mov
or
into
aas
in
sub
adc
daa
mov
mov
rcl
push
push
popf
jge
scas
xlat
fstpt
mov
stc
inc
shl
inc
add
popf
and
mov
inc
out
pop
test
aas
ja
push
add
sub
and
mov
xor
pop
fwait
dec
fisttpll
bound
push
inc
aad
outsl
jo
pop
xchg
fld
int
orl
int3
das
shl
insb
bound
shlb
cmp
cmp
les
sub
test
cmpsl
dec
sub
sub
cmpsb
aad
cmp
push
testb
into
cmp
inc
inc
or
fstpl
imul
insl
roll
scas
arpl
bound
mov
inc
into
cmp
call
fcmove
les
call
call
add
mov
xchg
outsl
push
sbb
cmp
lea
and
test
mov
xchg
pop
cmp
mov
ficompl
adc
jge
cmp
outsl
pop
cld
adc
fiaddl
mov
fldenv
dec
mov
pop
nop
jp
mov
insl
push
rorb
dec
push
movsl
adcl
daa
lods
repz
inc
mov
mov
in
dec
fisubrl
jmp
xchg
int3
sub
mov
int3
cmp
pop
or
inc
test
rorb
mov
mov
jo
mov
out
push
std
gs
cmp
hlt
faddl
movsb
imul
xor
movsb
jg
cld
popf
cmc
push
mov
sub
jne
in
lahf
imul
pop
dec
bound
mov
pop
lea
mov
xor
sarl
mov
in
adc
cmp
fwait
dec
loop
je
adc
in
jp
xchg
daa
repnz
jp
pop
dec
aad
out
stos
and
jecxz
xchg
push
cmp
icebp
and
add
mov
mov
into
gs
sbb
icebp
fwait
adc
fldcw
pop
mov
add
add
out
jb
loopne
stos
dec
push
push
mov
test
mov
inc
outsl
push
sub
mov
inc
jnp
inc
std
int
sub
popa
test
sub
xchg
movl
fs
push
cmpsb
dec
loopne
push
xorb
xchg
jp
popf
es
lcall
jl
mov
int
push
roll
mov
lahf
clc
mov
cli
or
test
fsubl
enter
or
sub
mov
push
fs
movb
test
ret
add
fisttps
push
jmp
arpl
xchg
inc
or
push
hlt
xchg
leave
filds
outsl
repz
in
fcmovb
mov
sub
je
mov
cmp
lock
xchg
push
loope
add
adc
push
inc
adcb
sarl
or
rol
loopne
test
pause
mov
aam
mov
mov
fwait
enter
or
inc
inc
push
imul
and
es
push
insl
push
xchg
fld
das
pusha
pcmpgtd
leave
movsb
cmp
cmpsl
in
dec
mov
popl
or
push
lcall
ljmp
mov
iret
dec
or
int
out
lods
lcall
or
out
aas
out
shrb
mov
add
stos
mov
nop
rol
into
jle
pop
jns
or
sbb
lcall
mov
cli
mov
xchg
in
pusha
push
sbbl
hlt
xor
cmpsl
dec
stc
xchg
out
pushf
inc
jecxz
mov
ljmp
fstps
xor
sub
out
pop
sbb
and
pusha
idivb
js
pusha
daa
sbb
add
dec
inc
mov
lods
cs
xchg
mov
inc
add
mov
mov
fidivrs
movsb
cmpsb
pusha
bound
cwtl
mov
stos
movsl
dec
push
xchg
xchg
pop
adc
clc
aam
pop
pop
ds
pop
xchg
out
mov
jne
lcall
xor
rcl
nop
xor
std
in
adcb
jno
dec
xor
shll
js
jmp
clc
test
pusha
lods
inc
loope
out
icebp
icebp
insb
les
pop
pop
test
pop
ds
out
in
cmp
imul
xchg
jp
lds
out
inc
bnd
mov
out
mov
in
sbb
jae
pop
mov
xchg
aad
iret
sahf
orl
xor
pop
cmpsb
jecxz
jle
push
add
call
pushl
sub
mov
icebp
mov
mov
in
ds
push
push
push
jns
jecxz
cmp
dec
adc
sub
mov
jb
inc
lahf
mov
cmp
scas
das
call
pop
jle
mov
sbbl
jb
and
cs
aas
iret
sub
stos
mov
push
add
sub
mov
cs
xlat
mov
push
sbb
add
into
sbb
imul
out
mov
mov
pop
addb
dec
adc
mov
stc
xchg
out
imul
into
xor
movsb
ficoms
int3
cltd
or
adc
xchg
sbb
sar
pop
inc
xor
mov
cmp
sbb
xor
into
xchg
ror
divl
push
in
pop
push
lds
movsl
outsb
outsl
mov
xchg
xchg
mov
inc
xor
mov
and
gs
data16
imul
push
xbegin
test
xor
jne
mov
jae
inc
mov
mov
outsb
in
cld
jbe
pop
cwtl
and
mov
test
pop
sbb
nop
jg
ljmp
adcb
gs
pop
adc
scas
fwait
cli
pop
adc
rolb
push
aas
pushf
dec
mov
and
push
xchg
pop
idivb
jl
xchg
outsl
pop
adc
jno
daa
and
mov
subb
cmp
add
gs
mov
mov
cli
fwait
sahf
aaa
aaa
push
dec
shll
add
rorl
sub
push
inc
jle
sbb
sti
mov
adc
lock
inc
sbb
cmp
int
int3
test
inc
dec
stos
jno
mov
inc
push
xchg
jge
mov
jae
or
jmp
sbb
testb
mov
jmp
jbe
sub
or
adc
pushf
mov
test
add
pop
adc
and
mov
imul
jecxz
ds
out
cmp
aas
xlat
dec
xor
aaa
call
in
in
jo
daa
fsubr
mov
scas
sbb
dec
popa
arpl
mov
or
lret
icebp
add
enter
cmpsl
add
stos
mov
loop
jle
aad
outsl
ret
sub
fs
and
ljmp
push
scas
lods
sub
popa
out
movb
clc
or
pop
into
xchg
cmp
cmpsl
and
sub
mov
clc
into
pop
aas
rcrl
jne
mov
ljmp
pop
ret
jmp
mov
pop
or
xchg
ret
outsl
fdivrs
test
xchg
data16
jg
repnz
adc
test
insl
jbe
out
add
mov
iret
rcll
out
loopne
sti
aas
mov
mov
push
mov
popf
ljmp
push
add
add
sub
push
lea
in
xlat
ds
pop
pushf
popf
fwait
xchg
lea
test
mov
lds
addr16
jmp
sbb
leave
push
pop
push
insl
rcll
xor
fmul
cmp
imul
pop
sahf
fwait
shrb
and
mov
jo
and
and
mov
scas
data16
mov
js
jge
jns
aad
push
cmp
push
xorb
mov
in
add
shll
lods
std
push
mov
lret
xchg
outsb
mov
mov
mov
push
pusha
mov
xor
push
fwait
cwtl
jle
in
fyl2x
and
test
push
ja
xchg
out
mov
out
add
xchg
pushf
bound
mov
cmp
in
dec
popf
shl
lret
xor
sub
rolb
cmp
push
icebp
int3
mov
arpl
test
cmp
mov
cmpsb
sub
mov
sbb
aad
dec
dec
scas
fsubs
cmp
pop
push
imul
inc
mov
test
lret
int
add
sti
ret
cmp
jo
imul
push
lcall
push
push
in
mov
popa
mov
icebp
inc
push
inc
out
andl
inc
scas
lock
cltd
sub
jp
cmp
shll
and
sar
hlt
fcmovbe
add
int
inc
dec
lea
sub
jge
sub
das
pop
cwtl
ss
adc
xor
xor
addl
xor
mov
mov
mov
jecxz
mov
pop
daa
sub
popf
xchg
imul
adc
pop
fmul
xor
adc
add
sbb
int
jnp
leave
and
cld
and
outsl
pop
push
aad
sahf
cmp
cmp
mov
pop
xor
stos
in
repz
jnp
jp
data16
rorw
or
adc
das
flds
testl
or
mov
gs
test
mov
jmp
dec
mov
xor
xchg
rcrl
or
sbb
mov
andl
mov
fcomip
mov
imul
add
clc
push
orps
mov
gs
mov
xchg
mov
mov
sbb
das
jecxz
stc
mov
mov
inc
ja
push
rcl
pop
stc
mov
repnz
jle
mov
xchg
ss
xor
xor
mov
int3
popa
pop
in
fwait
inc
cwtl
mov
popf
inc
aam
cmp
jae
dec
sbb
insl
jp
dec
mov
xor
js
rcrb
push
fldt
loopne
lea
shlb
in
sahf
lds
mov
push
adc
sar
out
dec
sti
mov
popf
pop
inc
jae
mov
jmp
lret
mov
push
int
rorl
daa
aaa
arpl
in
cwtl
jbe
sbbb
sub
stos
mov
aam
lock
lret
mov
pop
cmp
test
rcrl
jb
lea
ja
jnp
int3
push
mov
mov
jg
push
jle
das
stos
mov
or
dec
or
and
loop
popf
and
pop
cmp
js
loopne
or
mov
pop
aad
or
push
mov
bnd
sahf
add
outsb
aaa
and
lods
adc
loopne
or
inc
ljmp
jmp
xchg
mov
scas
mov
mov
sub
inc
into
xchg
imul
xchg
mov
out
cmp
stos
clc
xlat
xor
dec
mov
dec
cmpsb
neg
les
pusha
and
lret
arpl
mov
outsl
sub
cmc
mov
shll
jmp
jne
das
les
shlb
jb
and
mov
fisubs
inc
lods
outsb
lret
xchg
xchg
movsl
fcompp
pop
cmp
jnp
pushf
mov
jl
mov
addr16
pop
lods
push
and
fcos
mov
repz
fists
sub
xor
jnp
pushf
jbe
fdivrl
sar
and
ljmp
jecxz,pn
sbb
push
add
cmp
mov
xor
jne
sbb
loopne
test
or
scas
ret
out
xor
fwait
aad
dec
fcom
clc
xor
movsb
cmp
movsl
jmp
mov
pop
cmp
sub
aaa
out
lret
xchg
add
adc
daa
je
sbb
outsb
mov
insl
jnp
xor
sub
das
xor
fxam
jge
inc
lds
lea
fwait
sbb
sbb
je
in
cmp
addl
and
movsl
add
xor
data16
fcmove
pop
mov
imul
dec
sub
es
popa
pushf
sub
dec
into
stos
movsb
jp
cli
dec
sti
std
or
ret
icebp
add
mov
sbb
jg
enter
push
and
sub
push
mov
jp
xor
ljmp
out
sar
adc
insl
xchg
es
xchg
jmp
ljmp
cmp
inc
push
mov
xlat
dec
ds
adc
iret
xchg
ds
test
repz
inc
cmp
dec
or
pop
repnz
call
rorl
cli
aad
xor
cmp
xor
ret
push
insl
pop
cmc
xchg
pop
push
ds
out
movl
and
add
stos
inc
in
mov
pop
cmpsb
insl
mov
int
push
xor
pop
shr
out
sahf
divb
adc
add
add
inc
lods
sub
xor
pop
inc
leave
pop
push
cmpl
or
cmp
sbb
shl
xchg
lods
mov
pop
ljmp
mov
pushf
add
xchg
addr16
mov
je
inc
cmpsl
pop
inc
push
leave
les
mov
jmp
in
push
loopne
jge
jnp
jns
aam
or
orb
in
mov
xor
cmc
mov
sub
hlt
icebp
push
and
ds
adcb
lds
xchg
divl
dec
sub
jno
dec
hlt
daa
cwtl
adc
leave
call
popf
es
dec
dec
cwtl
add
mov
mov
pop
fldenv
jo
mov
cltd
xchg
imul
je
pop
mov
xor
es
xchg
shll
add
xchg
inc
push
cld
push
sbbl
lds
xor
cltd
or
out
popa
das
cltd
bound
sub
mov
xchg
pop
push
cmp
popa
cmc
push
sub
movl
and
test
sbb
xchg
fsubs
stos
ret
xor
sub
outsl
jne
movsb
mov
jp
aas
adc
ss
scas
insb
mov
ljmp
sub
pop
data16
mov
push
outsb
pop
push
dec
cmp
shl
adc
xchg
movsb
outsl
dec
and
mov
outsb
xor
adc
xor
pop
jp
lret
not
push
in
rcrl
inc
mov
dec
sbb
or
fwait
pop
test
jge
and
jnp
jge
dec
mov
popa
inc
adc
jnp
dec
sub
test
scas
lods
inc
xchg
dec
mov
out
nop
movsb
pop
xor
jnp
pop
push
xchg
mov
ret
push
xor
dec
out
inc
inc
stos
add
imul
jl
jae
sub
mov
daa
mov
sbb
repz
aaa
not
gs
adc
sbbb
push
xchg
test
cmpsb
xchg
adc
jb
add
xchg
sbb
aas
popf
inc
es
cmpsl
or
in
pop
or
fstps
fs
filds
xchg
jb
cmp
push
and
or
jae
cmp
ret
inc
test
or
sub
jae
mov
inc
scas
enter
les
cmp
dec
or
mov
sub
insb
adc
stos
out
lea
insl
or
int
hlt
cmpsb
fmuls
stc
hlt
pusha
popl
pop
cmp
and
mov
add
popa
rcll
and
pop
outsb
movsb
adc
or
dec
pop
das
push
xor
pop
addr16
pop
pop
cmp
sub
divl
xor
enter
push
inc
push
xchg
lret
popf
dec
cmp
cmc
nop
aaa
fcom
call
js
pusha
inc
movsb
incl
iret
out
xchg
lods
repz
inc
sub
xacquire
jp
rcrb
add
cwtl
movsl
sbb
sbb
out
add
mov
das
cltd
push
and
or
enter
push
arpl
xchg
jp
aam
lock
in
fnstenv
test
shlb
test
or
or
cld
outsb
jnp
inc
andb
rorl
cwtl
or
and
dec
push
sbb
mov
call
movsl
dec
mov
pop
rorl
mov
xor
cmp
outsl
add
ljmp
testb
push
in
test
aam
movsb
xor
fcoml
adc
pop
mov
fistpl
fs
adc
push
sahf
dec
repnz
cs
test
xchg
sub
jo
mov
scas
dec
xchg
add
cmpsb
mov
and
or
leave
add
aaa
xor
les
and
fdivl
pop
stos
testl
adc
movsl
test
and
or
imul
stos
les
imul
cmp
jmp
adc
fcmovnb
out
xchg
movsl
xor
in
shl
jno
cli
add
push
jp
pop
loope
push
cmp
adc
popa
mov
mov
xlat
mov
fnstenv
ret
mov
xchg
incl
mov
xchg
insl
inc
xchg
sbb
pusha
aaa
ret
gs
mov
cmpb
push
and
jne
sub
in
pop
or
loop
mov
cmpsb
out
sbb
mov
mov
lcall
jmp
mov
pop
mov
or
xor
xor
aad
fldt
inc
fistpl
aas
mov
fisubs
in
daa
stos
xor
aaa
add
xor
jmp
mov
fisubs
in
aam
loope
nop
mov
jle
mov
pop
shrl
mov
arpl
out
or
push
cmp
in
in
jl
insl
mov
push
ja
mov
jl
sbb
dec
or
pusha
in
andl
add
xor
and
inc
outsl
jno
inc
mov
jle
pop
and
fadds
in
inc
lret
sarb
aad
fs
lret
mov
or
pop
repz
inc
jle
mov
insb
xor
cmc
mov
loop
xchg
mov
repnz
xchg
cltd
adc
xor
pop
popl
mov
jne
xor
pop
pop
mov
fdivs
hlt
add
jns
jnp
cli
andl
xlat
mov
pop
lock
pop
jp
shr
je
movsb
sti
loope
ljmp
gs
mov
jg
sahf
ja
mov
or
cs
rcrl
fistps
aam
cmp
popl
jp
add
js
push
fnstcw
testl
inc
xchg
push
or
movsb
out
lcall
loopne
int
jp
xchg
std
push
out
dec
mov
daa
ret
pop
fmulp
adc
push
push
fcoml
adc
mov
adc
sti
sub
adc
pop
inc
push
test
jp
mov
cli
push
push
and
jg
stos
jge
jae
cwtl
in
lds
stc
jo
out
mov
es
jne
jge
inc
push
sahf
mov
xchg
gs
and
aas
imul
xchg
push
lods
mov
test
dec
test
sti
sahf
push
in
leave
insb
je
jmp
xchg
mov
mov
js
andl
xchg
clc
sub
inc
daa
pushf
sbb
scas
mov
fsts
sbb
pop
dec
std
jg
push
mov
in
fs
cmp
push
pop
js
mov
loopne
mov
mov
loope
shl
ss
mov
adc
adc
push
mov
pop
jg
push
arpl
ficompl
xchg
mov
movsb
sub
outsb
and
add
test
jbe
stos
fs
inc
cmp
insb
in
mov
dec
xor
cmp
ret
push
jle
mov
aas
insl
cmovnp
scas
sub
jno
push
pop
je
cltd
mov
fidivs
inc
out
jae
test
xchg
test
xor
ret
repnz
fists
lods
flds
mov
ret
pop
inc
in
scas
xor
jo
inc
pop
and
icebp
and
fwait
mov
cmc
adc
jne
xchg
pusha
lods
add
lods
addl
in
pusha
mov
iret
cmp
adc
inc
sub
jg
lea
clc
out
push
jae
ret
mov
enter
movsb
das
test
mov
jp
sub
mov
xor
test
and
hlt
lret
or
ss
cli
out
pop
cmp
or
mov
pop
mov
cltd
sub
mov
call
ds
mov
mov
jg
outsl
mov
sbbl
or
inc
clc
aas
orl
adc
pop
shll
push
imul
in
xchg
mov
inc
xor
jae
mov
lahf
sbb
and
dec
mov
pop
mov
or
jecxz
and
subl
addl
mov
fldenv
cmp
sbb
data16
in
sub
cmpsb
in
push
mov
loopne
jae
fidivrs
pop
cmpl
push
jo
inc
std
push
pusha
imul
xchg
pop
mov
mov
sti
test
push
loopne
mov
sahf
mov
test
ja
pop
das
std
mov
gs
arpl
pop
fildll
in
mov
aaa
test
lcall
dec
cmp
pop
jl
sbb
add
in
test
sbb
repnz
fstpl
xchg
adc
xchg
bound
enter
int
daa
xor
mov
aaa
lcall
pop
je
stos
dec
push
xchg
mov
clc
sbb
lock
les
aaa
mov
mov
mov
data16
lods
cmpsb
jns
xor
dec
sub
stos
sub
cwtl
mov
flds
xor
adc
fiaddl
mov
mov
test
mov
shll
jne
out
sbbb
or
jnp
add
test
push
sub
push
jecxz
or
mov
mov
add
js
shrb
cmpsl
cmpsl
lahf
out
cmc
movsl
mov
mov
xor
cmc
inc
xlat
xchg
test
ss
inc
mov
out
and
jle
pop
mov
lods
xor
inc
pop
or
adc
fstpl
pop
das
mov
adc
and
push
imul
push
dec
push
mov
das
mov
in
in
mov
lret
lea
mov
les
into
inc
enter
and
mov
imul
orl
in
in
and
xor
cmp
push
xchg
sarb
scas
xchg
das
mov
inc
push
aam
pop
lods
add
fs
clc
xchg
mov
mov
shrb
pop
mov
stos
loop
shl
cmp
or
xor
insb
xor
push
mov
movl
add
or
mov
add
mov
add
jg
ja
repz
ret
imul
pop
add
addr16
jle
jl
sbb
loope
add
in
test
pop
cld
movsl
idivl
out
insb
sub
shll
jmp
test
jne
fidivs
dec
mov
fwait
lea
adc
cltd
cli
in
mov
mov
adc
push
cld
or
jp
mov
fwait
and
sbb
sub
inc
sbb
sbb
pop
lods
cli
aad
mov
jmp
les
je
imul
test
iret
popf
cltd
adc
mov
nop
pop
xor
add
rcrl
push
leave
fstl
dec
rcrb
pop
les
aas
xor
xor
inc
xchg
jp
out
int
xchg
scas
jb
xor
push
fsubl
mov
dec
mov
data16
xchg
inc
add
sub
std
add
and
and
scas
or
div
cmp
push
shlb
nop
mov
and
pop
std
ja
divl
adc
stos
lret
xor
dec
daa
insl
xchg
shrb
pushf
add
aas
sbb
loop
cltd
mov
fisttps
into
les
in
arpl
dec
arpl
popf
dec
ds
adc
fcmovb
cmp
testl
imull
inc
fidivrl
mov
pop
rcrl
pop
add
push
notl
aas
inc
xor
inc
cmp
jmp
cwtl
xchg
movsb
lcall
hlt
mov
pop
pop
call
jno
imul
cld
xchg
inc
jae
pop
and
cltd
lret
ret
push
dec
enter
sbb
ret
adc
fiaddl
shrl
xor
mov
sub
fdivp
popa
gs
mov
test
ret
andl
or
aas
mov
or
ffreep
ja
lods
inc
lock
in
cmp
push
dec
loopne
ret
aad
mulb
call
cmpsl
shrb
inc
adcb
jmp
cmpsb
mov
popa
movsb
hlt
shll
push
add
mov
repnz
leave
sahf
inc
lcall
cmpl
loope
xchg
repnz
out
xchg
gs
insl
imul
mov
mov
pop
push
int3
pop
addr16
movsb
and
mov
jns
rol
iret
aaa
dec
pop
lcall
jne
add
stos
ret
push
daa
daa
jne
in
push
xchg
mov
add
rcrl
cltd
dec
mov
xlat
jecxz
shrb
out
mov
aam
push
lds
test
mov
xchg
js
cltd
lock
jmp
lcall
hlt
jmp
pop
jns
mov
push
ret
fsubrp
cmpl
data16
roll
mov
adc
mov
bound
mov
lea
daa
xrelease
dec
mov
pusha
sbb
lds
aad
dec
cmp
or
sbb
cltd
leave
les
jl
add
pop
inc
mov
push
mov
scas
adc
stc
mov
sub
movsl
sub
sbb
xchg
ret
imul
or
sti
push
mov
dec
lcall
ss
addr16
sub
stc
pop
xlat
rorl
mov
jne
mov
and
fcompp
or
out
add
adc
imull
loopne
mov
sbb
sub
jmp
out
inc
sarl
mov
jle
scas
fcoml
out
andl
sti
je
xchg
xchg
dec
pop
nop
mov
mov
mov
enter
or
xlat
frstor
hlt
fld
test
loope
pop
lret
jne
mov
fwait
sbb
inc
test
sti
dec
mov
shll
call
mov
or
leave
and
scas
movsb
mov
adc
jae
mov
push
cmpsl
gs
jno
gs
fldt
jnp
sub
sbb
enter
mov
ret
push
inc
mov
lock
fldt
mov
adc
sub
test
test
insb
fmull
shrl
in
pop
int
popa
add
lahf
or
cmp
int
inc
in
stc
shl
and
dec
ret
cltd
rcll
mov
pop
ror
sbb
and
mov
inc
pop
adc
test
pop
notl
cmp
inc
and
lods
add
icebp
sbb
arpl
jg
ljmp
test
sbb
cmp
mov
insl
mov
cltd
jnp
cmp
push
mov
xchg
sub
or
into
mov
cmp
push
xor
adc
inc
out
inc
adc
push
and
inc
cmovo
push
pop
cmp
icebp
xor
mov
aas
push
mov
popa
mov
lock
jmp
pop
out
push
int
std
add
arpl
push
gs
enter
ljmp
addr16
cmp
insl
test
in
inc
or
dec
xchg
out
loop
sbb
sub
dec
push
sarl
adc
add
jb
popf
frndint
xor
mov
popa
in
xor
add
in
add
fdivrp
pmovmskb
fldl
lcall
ja
push
shl
xchg
out
cltd
push
or
dec
xor
xorl
mov
inc
push
adcl
cmpb
arpl
mov
call
jb
out
imulb
cmp
push
sbb
arpl
data16
push
push
gs
pop
add
fldenv
xlat
popa
or
shr
inc
and
and
in
shlb
cltd
ficomps
fs
mov
in
pop
movsl
sub
sbb
adc
call
test
ret
int3
xor
mov
imul
mov
lret
test
in
or
xchg
int
and
xchg
cmpsb
repz
lds
fildll
sub
push
push
jle
shrb
cmp
cmc
and
jg
fimull
mov
mov
out
mov
jb
mov
cmpsl
xor
nop
cmpsb
sahf
xlat
xchg
outsb
sub
ds
mov
jecxz
jno
sub
cmpsl
inc
xchg
jmp
addr16
xor
jb
insb
frstor
mov
xor
lahf
in
mov
xchg
or
sbb
mov
pop
pop
jl
or
xchg
push
mov
and
cli
mov
flds
mov
hlt
push
xchg
pusha
xchg
jb
pop
out
lahf
fiadds
mov
stos
wrmsr
xchg
mov
dec
push
pop
scas
lcall
cmp
mov
push
and
cs
fdivrl
hlt
pop
jmp
adc
mov
not
and
loop
push
jns
sub
pop
lock
and
mov
fsubrl
shrl
add
cmp
lcall
stos
inc
outsl
aam
sbb
inc
shlb
push
sbb
inc
loop
sar
jae
sbbl
and
sub
pop
cmp
xor
lea
mov
sub
popl
mov
inc
loopne
sub
je
jg
pop
stos
roll
pop
test
ret
push
das
testb
adc
sub
wrmsr
pop
dec
or
push
daa
sbb
std
inc
and
mov
push
loopne
arpl
icebp
add
pop
ljmp
mov
cmp
mov
dec
cmp
and
bound
mov
cmp
inc
pop
das
xchg
cmp
fildl
push
rcl
repz
xlat
js
cmp
ss
or
xor
in
movsb
inc
gs
xor
aaa
mov
loopne
es
adc
rdtsc
push
pop
jb
jg
xchg
stos
sbb
or
daa
sahf
movsl
out
inc
mov
push
add
pop
and
cs
dec
jecxz
pusha
in
nop
mov
adcb
out
popf
lods
adc
dec
cwtl
das
lret
jns
push
int
leave
jne,pn
cwtl
jg
int
aaa
mov
scas
repnz
jo
and
xlat
cmp
fidivrs
cmp
mov
cmp
js
sbb
mov
ds
push
fs
loope
mov
cmp
pushf
jecxz
pop
or
pop
push
bound
mov
iret
cltd
not
bound
xor
pop
or
sub
faddp
leave
aas
movsb
inc
dec
popa
cmp
pop
std
cmpsb
xchg
mov
iret
jmp
negl
std
mov
lahf
fsts
and
dec
leave
and
xlat
sbb
push
fcmovnu
popa
xchg
ja
xchg
sub
mov
testl
ret
jmp
sub
lods
icebp
fstl
bswap
mov
add
and
js
lods
out
iret
aad
cwtl
das
fdivs
sbb
sbbb
ja
iret
inc
fimuls
mov
frstor
mov
xor
jp
jmp
insb
adc
mov
push
repnz
shll
andl
insb
shl
das
test
sub
xor
les
sub
lahf
testb
push
mov
push
iret
push
daa
enter
push
adc
mov
enter
popa
daa
lea
inc
popf
xchg
pop
stos
test
aas
pop
icebp
stos
push
xor
les
fstpt
ja
test
movsb
inc
sti
and
or
cmpsb
and
mov
loopne
pop
call
push
notl
test
arpl
and
adc
loope
xchg
bound
shll
lahf
sub
jnp
jb
fnstcw
pop
aad
mov
call
stos
push
mov
sbb
fldcw
sbb
xor
aad
imul
xchg
fildll
int
mov
repz
jno
inc
sbb
testl
out
sti
and
loopne
rorb
inc
movsb
imul
inc
int3
sbb
gs
lds
xchg
rclb
dec
jmp
mov
fs
in
test
pop
lcall
pusha
stos
lods
ljmp
in
cmp
fwait
inc
push
iret
pop
cs
fucom
imul
or
pop
movsl
cmpsl
sti
hlt
jb
push
pop
sahf
das
inc
or
orl
call
pusha
mov
lea
or
inc
fstpt
jmp
jl
popa
ret
in
pushf
inc
push
inc
dec
cmp
lds
mov
fdivrl
lods
mov
jb
imul
roll
fisttps
jne
push
xchg
jnp
int3
xor
mov
cli
testb
pop
pop
add
lods
cmp
mov
ja
leave
mov
bound
cmc
mov
pusha
pop
xor
pushf
incb
in
xchg
push
and
pop
xchg
dec
idivl
jl
mov
dec
xor
sbb
or
pop
pop
jnp
outsb
call
xor
cwtl
xabort
ds
xlat
push
je
outsl
sti
jmp
sbb
jns
loop
mov
fmuls
hlt
cmovno
mov
fisubrl
fdivrs
cmp
jmp
push
mov
inc
push
dec
orb
mov
mov
enter
adc
jle
jne
mov
lock
add
aad
jo
sti
mov
rcll
pop
mov
cmp
neg
fimull
outsl
jmp
in
lret
xchg
pop
je
xchg
inc
int3
jle
ds
jbe
cmp
add
pop
push
xchg
push
cmp
xchg
test
adc
push
in
sarb
mov
popa
cltd
jns
push
and
xchg
cmp
in
cmp
jmp
jmp
mov
je
sbb
jne
ret
jns
mov
into
adc
ret
xor
iret
insl
cmp
imul
mov
dec
pop
xor
pop
int3
ds
or
imul
pusha
sub
lods
out
jmp
mov
jp
fisubs
adc
stos
iret
stc
das
fmuls
jno
or
call
nopl
jbe
shrl
adc
xor
xor
scas
jns
int3
rol
cmpb
fstl
cs
ljmp
testl
out
out
pop
push
leave
shll
and
jne
xchg
rclb
in
outsl
mov
jp
pushf
adc
stos
cmp
mov
sub
mov
int
mov
es
and
sub
cli
or
out
and
xchg
push
mov
jp
push
mov
test
sub
imul
mov
fs
loopne
xor
dec
stc
push
mov
adc
in
loopne
aas
pusha
movsb
gs
sbb
shll
pop
stos
test
es
popf
push
scas
enter
cltd
lods
andb
cmp
adc
fidivs
inc
inc
add
mov
test
into
inc
push
mov
xchg
dec
aad
lcall
mov
pop
fs
gs
mov
sbb
lods
outsb
movsb
push
nop
orl
jbe
pop
mov
xchg
or
dec
ljmp
mov
mov
inc
aas
mov
mov
cld
xlat
mov
sahf
jmp
and
mov
push
cmp
xor
sub
mov
sbb
ret
shl
inc
add
jo
inc
sub
fnstenv
xor
mov
pop
jmp
data16
mov
movsl
mov
je
xor
jecxz
sub
jo
push
int
outsl
add
in
std
fdivs
inc
enter
inc
mov
and
iret
pop
xor
mov
push
pushl
or
cmc
push
pop
je
fldt
pop
insb
adc
fnstenv
dec
or
fisttpll
pop
enter
push
adc
jne
pop
lahf
jmp
pop
push
xchg
and
add
cmp
mov
orb
mov
xchg
mov
andl
push
mov
mov
mov
dec
sbb
in
dec
cmp
push
aam
add
xchg
or
fsts
sub
pop
xor
push
or
sbb
jmp
insl
mov
fisttpll
fstl
mov
sbb
pusha
arpl
pop
rclb
cmp
or
sub
icebp
dec
push
push
mov
or
mov
loop
mov
cmp
mov
lds
mov
xchg
jbe
iret
sub
scas
arpl
mov
std
mov
push
xchg
push
mov
sti
cmp
mov
push
adc
inc
xchg
jns
add
ss
jmp
pop
lea
xor
mov
mov
inc
std
inc
daa
aaa
xchg
inc
cs
stc
dec
fisubrs
mov
xor
into
leave
mov
mov
lea
or
ret
jae
jg
push
popf
xorl
rorb
sub
adc
push
nop
push
pop
xchg
pop
aaa
sub
push
pop
fiaddl
mov
clc
fisubl
filds
jmp
dec
out
pop
mov
sbb
sub
mov
stos
mov
mov
fiadds
data16
leave
sbb
mov
mov
dec
data16
jno
mov
xchg
sbb
jp
adc
ss
xor
push
cwtl
mov
imul
lods
or
jge
mov
and
pusha
je
sub
push
sbbl
dec
fmull
add
sub
mov
jle
aaa
adc
pop
cmc
das
xchg
jnp
arpl
loope
adc
mov
imul
mov
andb
adc
lods
mov
cltd
jge
hlt
pop
dec
pop
jne
lret
out
pop
and
mov
or
push
leave
push
dec
insb
inc
sahf
lods
sti
test
sti
xchg
shr
push
repnz
mov
cmpsl
test
xchg
cli
rclb
push
pop
sub
popa
lea
and
pop
cmpsb
adc
jp
adc
xchg
or
arpl
stos
push
int3
es
add
sbb
jae
push
push
arpl
pop
das
in
bound
jl
popf
dec
push
daa
testl
enter
and
inc
adc
xlat
sub
and
and
lods
sbb
push
testl
fdivl
pop
push
aam
xor
sarb
scas
pop
fsubp
aad
jo
cld
mov
loopne
loopne
inc
pop
push
xor
jo
mov
mov
cmp
jmp
push
js
lds
jo
mov
idivl
push
push
cmp
mov
cmp
add
lahf
xchg
pop
lahf
add
jae
lahf
out
shlb
clc
push
decl
and
adc
fimuls
sarb
mov
cld
xchg
pusha
pop
movsl
aas
popa
mov
ja
cmp
daa
mov
mov
cs
roll
pop
push
xchg
sbb
orb
mov
data16
cmc
inc
dec
mov
cmc
xor
sub
sbb
add
out
test
mov
ret
arpl
mov
int3
and
in
mov
fidivs
loope
cli
sbb
fimull
push
jne
or
jbe
mov
roll
imul
push
pop
test
jbe
bound
or
int
sbb
sub
jno
lahf
adcl
std
dec
push
jl
jnp
jb
sbb
stos
decb
xor
ds
scas
and
pop
mov
ret
jnp
repz
movsb
call
mov
push
or
add
addr16
adc
lods
cmp
push
sub
push
cmpsb
cmp
xchg
ja
hlt
push
sbb
dec
mov
mov
inc
inc
mov
pop
pop
mov
push
rcll
xchg
push
adc
mov
xor
outsl
in
and
xor
outsb
into
outsb
jbe
jp
mov
test
jb
xchg
and
lcall
into
push
xchg
inc
mov
cmpb
sub
xor
xchg
inc
pop
push
jge
lods
mov
pop
jno
push
cltd
test
xor
rolb
jae
fisubrl
mov
xor
sub
mov
lds
enter
std
dec
lods
cmp
mov
jl
sbb
xchg
loop
sbb
or
sti
pop
xchg
pop
loopne
and
stc
stc
mov
xchg
xchg
cmovno
stc
xor
cwtl
ret
jmp
sti
jb
push
push
testb
and
scas
ret
je
imul
mov
js
stos
adcb
mov
shll
dec
mov
popa
xor
mov
mov
mov
lret
sbb
in
cmp
inc
sbb
sub
call
sti
inc
sub
insl
lret
or
mov
imul
jl
inc
mov
outsb
inc
stos
mov
cmp
add
xlat
xchg
arpl
mov
pop
xchg
rcr
andb
xorl
mov
or
add
cmpsl
clc
sub
inc
adc
mov
dec
xchg
das
adc
push
hlt
dec
push
mov
push
stos
lret
sub
popa
or
mov
ret
out
je
out
xor
dec
push
mov
enter
ja
mov
mov
mov
mov
aas
sbb
lcall
lods
test
pop
imul
es
sbb
cs
and
stos
repnz
push
sbb
icebp
or
aaa
push
es
mov
sub
jbe
out
int3
stos
les
les
test
pop
lea
lcall
aad
push
rcr
cmpl
jae
inc
push
icebp
and
gs
push
push
xor
inc
ja
in
scas
mov
cmp
inc
or
bound
imul
inc
movsb
dec
and
add
shll
nop
or
xchg
mov
inc
mov
push
js
mov
gs
dec
test
mov
stc
fs
out
and
cmc
fiaddl
cltd
data16
adc
xorb
repz
xchg
pop
jmp
hlt
sbb
fsubrl
cmp
push
fidivrl
in
pop
push
inc
push
inc
or
dec
shlb
test
das
out
or
pop
and
xor
xchg
aas
xor
adc
jno
mov
icebp
pop
nop
shrl
shlb
push
adc
es
in
cmp
ret
imul
enter
or
jne
sahf
popa
and
dec
movb
mov
and
lret
add
and
fldcw
mov
lret
out
ds
fs
jo
push
arpl
aad
es
jo
scas
xchg
cli
arpl
xchg
pop
add
jp
jo
adc
aam
xchg
mov
pop
add
out
imul
xor
imul
push
loop
mov
bound
movhps
xchg
out
fdiv
xor
pop
lock
fiaddl
mov
loope
cli
cmp
mov
bsf
jge
test
push
push
dec
insl
cmpsb
pop
std
mov
rorb
stos
add
cltd
or
pop
xchg
jmp
mov
or
popa
sbb
sbb
pop
mov
xchg
push
dec
jb
loop
mov
scas
fimuls
dec
mov
mov
inc
cmp
or
pop
push
or
xorl
bound
push
les
jo
push
adc
mov
hlt
enter
rcrb
mov
jb
je
pop
cld
fisubs
scas
or
jo
call
and
jecxz
fldl
inc
push
aaa
dec
es
push
lods
mov
test
mov
dec
rcll
pushf
insb
xchg
jl
inc
test
mov
or
sub
pop
mov
xor
add
je
xchg
mov
push
scas
jecxz
sub
and
lahf
loop
cld
pop
addr16
out
in
call
lods
jno
pop
push
jl
mov
rorb
sbb
not
cld
sub
sub
cld
bound
inc
icebp
and
jp
enter
xchg
or
sbb
cltd
dec
fldcw
in
xchg
in
xchg
xor
push
mov
jle
adc
aas
inc
sbb
js
xor
ja
dec
cmp
cltd
fwait
and
js
xchg
jge
loopne
ja
sbb
push
sbb
xlat
jo
mov
and
adc
hlt
mov
loopne
ljmp
int3
and
xchg
outsl
enter
lods
sbb
cmpsb
sbb
lds
cmp
loopne
ret
shll
stc
xchg
cmc
cmpsb
and
sbb
cld
pushf
rolb
pop
jmp
push
out
push
iret
stc
sbb
dec
into
cwtl
dec
lods
pop
divl
rcrb
insl
int
xchg
xor
rcrl
or
sbb
push
dec
mov
lods
inc
es
and
jmp
add
mov
into
call
mov
in
sbb
insb
inc
mov
mov
js
js
adc
stos
xor
dec
sbb
ror
lods
sbb
mov
dec
jmp
imul
call
push
jp
jae
rolb
clc
in
sub
and
mov
je
adc
test
pmulhw
jmp
cmp
or
out
sub
pop
mov
mov
adcb
lret
popf
test
cld
mov
sti
sbb
pushf
out
jecxz
cli
loope
xchg
pop
das
jns
jg
pop
out
fdiv
jnp
out
stc
mov
push
lea
cltd
pushf
mov
lods
pusha
and
pusha
and
add
lcall
lods
lahf
aam
out
imul
inc
adc
data16
push
in
or
imul
lahf
cmp
xchg
inc
mov
mov
mov
mov
xchg
ret
jecxz
mov
ret
xchg
inc
fbstp
imul
cs
test
cld
xchg
imul
cld
mov
mov
dec
in
lcall
lret
fdivl
mov
pop
jle
movsl
or
pop
loope
arpl
lds
mov
cmc
call
mov
mov
mov
or
addb
cmp
jge
mov
fwait
stc
and
loopne
adc
mov
shlb
sub
cmp
mov
mov
push
adc
fwait
loop
cmp
addr16
xchg
dec
ret
aad
and
push
inc
ffree
sub
jnp
jae
sahf
fisttpll
mov
sysexit
mov
dec
pop
das
dec
push
scas
pop
push
insl
int3
jo
stos
out
lahf
adc
js
push
fldcw
fsubl
enter
inc
iret
jbe
mov
fnstcw
and
add
cmpsb
push
jmp
mov
fs
fwait
cmc
mov
lds
xchg
bound
and
int
and
xor
mov
test
mov
rclb
out
scas
sti
cmp
and
imul
pushf
xor
push
sbb
adc
repnz
sub
rolb
test
inc
out
test
ss
pop
inc
dec
pop
xor
mov
aam
dec
sub
in
xor
mov
fldcw
or
addr16
mov
sub
cmpsl
or
mov
sub
popa
pop
ja
in
pop
cltd
sub
cvtps2pd
pop
clc
dec
push
insl
in
xchg
inc
push
xor
mov
xchg
or
fs
lcall
dec
enter
add
lret
addl
lods
shrl
mov
sub
lea
pop
popf
jle
sbb
ficompl
into
cld
mov
pop
sbb
pop
mov
mov
jne
adcb
xlat
mov
sbb
adc
into
push
out
outsl
jp
das
push
fwait
push
xchg
add
add
insb
push
xchg
push
mov
and
sbb
rorl
lret
dec
rcr
xchg
mov
fmuls
jl
out
call
pushf
insl
pop
fisubl
loope
fisubl
xchg
enter
inc
pop
xor
lahf
insb
cld
test
aam
add
cmp
ss
mov
jae
mov
sub
ljmp
sbb
cs
push
gs
leavew
les
in
mov
dec
xchg
push
lcall
cmp
popf
mov
je
mov
or
dec
mov
movsl
pushl
das
iret
inc
push
add
enter
sahf
xchg
adc
aaa
movsb
and
push
jb
ds
fisubs
sub
sbb
ljmp
pop
fildll
ds
fisttpll
out
fs
mov
inc
xchg
pop
inc
sub
and
fidivs
stc
scas
ss
cs
cmp
in
jae
dec
out
test
and
stc
mov
scas
dec
adc
popf
sbb
dec
jle
xchg
inc
xchg
loopne
pop
outsb
and
arpl
iret
mov
push
ljmp
shl
cmp
and
mov
es
jmp
in
pop
mov
and
jns
scas
jb
outsl
xchg
loope
fnstcw
lods
into
loop
pop
add
imul
mulb
outsl
adc
add
mov
clc
rcl
rorb
dec
push
jbe
lcall
and
mov
int
cltd
cs
lret
jl
lahf
imul
and
scas
mov
adc
and
fildll
nop
out
js
call
rcl
inc
push
popf
mov
mov
jecxz
push
sbb
out
in
ja
pop
cmp
push
cmp
daa
xor
inc
cmc
xor
dec
jne
aam
sbb
divl
sbb
lahf
cmp
sub
mov
pop
test
sub
or
into
bound
xlat
mov
jb
mov
lods
lock
dec
out
stc
mov
xor
push
push
leave
sub
sbb
pop
imul
enter
repz
notl
mov
jns
in
arpl
outsb
jne
inc
fmull
sbb
inc
popf
jmp
dec
iret
mov
push
lea
jmp
mov
cli
mov
std
sub
divl
mov
dec
ret
gs
jl
xchg
pop
je
mov
popf
unpckhps
or
daa
scas
subb
cmp
or
mov
sti
jmp
icebp
inc
jmp
scas
scas
out
or
sti
jo
inc
xchg
mov
mov
jmp
add
mov
pop
stos
push
mov
and
mov
push
test
adc
int3
jmp
movsb
ds
or
movsb
sti
jmp
add
pop
jne
mov
out
ret
jmp
cltd
adc
mov
push
ljmp
xchg
xor
popa
jns
inc
inc
icebp
mov
ret
adc
iret
jne
pop
or
push
movsl
lahf
loope
inc
orl
fsubs
addr16
std
fwait
push
and
mov
mov
or
insb
or
pop
dec
sbb
mov
mov
cmp
mov
clc
inc
pop
ret
test
pop
pusha
in
xor
les
clc
mov
push
mov
xor
cmc
mov
and
aas
inc
or
cs
movsl
repnz
or
inc
add
push
fnstenv
idivl
inc
sbb
hlt
cmc
or
sbb
lods
cli
inc
or
jnp
pop
xchg
inc
adc
stc
ret
fmull
aam
insl
push
clc
cmp
add
dec
pop
aad
imul
xor
jecxz
inc
jns
jle
pop
lcall
ljmp
aas
cltd
arpl
in
inc
mov
out
cmp
jg
ret
push
loope
mov
popf
sbb
fsubl
add
jp
sahf
ss
fisttpl
addr16
mull
xchg
or
xchg
insl
dec
sub
icebp
insb
jns
push
cli
cmp
dec
rorl
sub
fisubl
scas
xor
mov
scas
mov
mov
lret
aad
pushf
test
mov
sub
fisttps
jle
pop
addr16
and
arpl
sbb
bound
aad
test
ss
inc
ret
mov
xchg
arpl
aad
dec
mov
insb
push
gs
jge
sub
mov
dec
jbe
jle
out
lret
inc
inc
pusha
mov
pushf
jb
gs
adc
ret
int3
gs
jo
dec
pop
and
or
dec
mov
das
mov
lahf
xor
ds
out
ja
cltd
sbb
roll
or
dec
pop
insb
inc
outsl
imul
fnstenv
jge
movsb
int
out
and
xchg
ds
inc
insl
jp
test
out
fiadds
ds
mov
cltd
lods
inc
movsb
mov
sub
into
mov
mov
in
mov
ret
repnz
in
mov
dec
sbb
xchg
or
add
xor
lock
cmp
inc
aas
lcall
ret
push
xchg
pop
jle
sub
dec
mov
cmp
lock
mov
mov
mov
pop
fwait
mov
cli
addr16
loop
movsb
aas
add
cmp
cmp
and
outsb
push
shll
stos
xlat
cmp
cmp
sub
pop
insb
pop
mov
movsl
mov
push
mov
jmp
adc
mov
cmp
cwtl
xor
mov
xchg
mov
es
enter
push
push
jecxz
push
rcrb
or
inc
bound
pop
insb
push
out
out
mov
ret
out
cmp
adc
subl
cmp
lea
cmpsl
leave
es
inc
inc
lcall
aas
ret
ja
pop
or
cld
mov
fidivs
pop
mov
jle
push
jbe
cmc
jne
mov
popf
out
jle
jmp
jb
incb
stos
insl
fnstsw
lods
out
fwait
sti
int3
out
addr16
data16
mov
aam
dec
pop
mov
insb
dec
dec
ljmp
fidivrl
test
pop
sub
into
xchg
mov
mov
jns
and
inc
out
push
pop
cmpsl
test
sbb
dec
fisttps
inc
sub
dec
jmp
fistpll
xor
xor
loopne
mov
adc
cmc
adcl
xchg
fsubs
fcmovnu
adc
push
pop
or
mov
int
mov
jbe
push
push
xchg
lret
aad
jnp
outsl
popf
sarl
xor
push
popa
data16
push
mov
jecxz
ds
xchg
cmp
push
sub
dec
test
mov
shr
inc
jge
stos
js
push
or
aad
nop
jne
jbe
mov
loop
cmp
nop
mov
icebp
hlt
push
and
aad
xor
sti
aas
jmp
adc
and
push
mov
sahf
dec
mov
stc
into
out
mov
add
fwait
test
hlt
in
cmp
fisubs
notb
mov
aas
adc
std
mov
cs
mov
test
inc
repnz
dec
push
xlat
mov
cmp
pop
xchg
dec
sarb
out
paddb
orb
pushf
popf
push
fnstcw
lods
sub
shll
loop
mov
dec
outsl
sbb
inc
xor
repnz
fwait
or
stos
xchg
jae
mov
jl
pop
mov
ja
lock
add
cltd
pop
inc
inc
push
test
and
mov
push
pop
inc
push
pop
xchg
or
adc
pop
lock
fisubl
mov
xorb
mov
loop
movsb
fidivs
mov
testl
cmp
or
mov
ljmp
movsb
dec
cmc
scas
clc
adc
imul
inc
adc
icebp
sub
ret
cmp
ss
adc
aam
pop
pop
sub
incb
pop
sbb
cmp
dec
mov
lret
dec
sub
xchg
xchg
cmp
inc
clc
popf
mov
outsb
pop
mov
dec
jae
repnz
dec
sub
lcall
roll
lods
je
and
xor
gs
push
or
mov
insb
jecxz
insl
adc
lds
pop
jns
repz
cmp
out
das
aad
pushf
cmp
sub
sbbl
inc
fs
push
ljmp
jbe
dec
sub
fmuls
adc
sbb
jnp
cmovge
outsl
leave
pop
and
adc
jg
ret
dec
xchg
call
dec
sahf
or
inc
mov
lret
and
cwtl
leave
ret
shrb
test
sbb
push
mov
cmc
pop
mov
mov
xor
sub
icebp
lcall
loopne
out
mov
xchg
adc
ljmp
jne
frstor
dec
cmp
sub
mov
jmp
inc
inc
pop
jp
jno
jl
imul
lea
dec
push
fwait
xor
xor
scas
dec
ret
stos
adc
int
imul
stos
jmp
test
out
xlat
mov
fsts
mov
cltd
out
inc
add
addb
fwait
xchg
xchg
cltd
add
test
outsl
mov
pop
pop
jge
sub
dec
sbb
ja
scas
push
inc
ja
cmp
stos
add
popa
in
inc
and
in
mov
mov
flds
mov
out
rorl
ds
cmp
push
pop
stos
mov
mov
mov
mov
inc
mov
inc
incb
adcb
negl
test
mov
rorb
rcrb
pop
and
mov
ja
ret
es
shrb
or
lds
push
push
popa
in
mov
rolb
xchg
sbb
cmpsl
movsb
adc
jg
ficoml
inc
mov
leave
mov
lret
pop
lahf
cmp
jo
fistps
push
push
inc
add
dec
stos
pop
into
dec
shlb
movsb
jg
jno
ss
mov
lret
sbb
or
and
repnz
das
inc
or
cltd
or
inc
add
mov
sbb
shlb
add
lock
xchg
lret
fadd
sar
inc
sub
and
leave
cmp
cld
cmp
adc
mov
mov
rclb
clc
push
js
pop
or
hlt
loop
dec
cmpl
lds
sbb
mov
stos
dec
inc
ror
add
push
xlat
push
mov
fwait
lods
cld
mov
aaa
movsb
mov
sub
negb
ret
loop
mov
xlat
dec
and
adc
int
cltd
push
shrl
insl
adc
mov
incb
dec
sub
daa
out
sarl
imul
test
jae
iret
jle
mov
test
jnp
and
aam
add
dec
inc
mov
cmpsb
stc
dec
out
push
xorb
sub
loopne
push
fidivs
or
xor
pop
dec
enter
cmp
mov
ds
cld
addl
mov
xor
lock
xor
adc
aam
int3
adc
push
add
daa
jae
movl
xor
mov
cwtl
mov
adc
std
imulb
pop
add
and
stos
popa
sbb
pushf
lcall
hlt
sub
xchg
leave
dec
lods
out
iret
in
stc
in
push
in
insl
imul
insb
insb
fsubs
aam
mov
mov
cmc
cmp
add
pop
movl
push
sub
neg
fcmovbe
fwait
es
jnp
sub
imulb
sub
add
clc
add
cmp
inc
ja
pushf
jns
add
scas
or
je
les
shll
fst
xchg
sbb
outsb
lcall
call
int
dec
cmp
inc
movlps
pop
rcrl
add
dec
cld
insl
push
cmp
jmp
cmp
in
inc
xchg
stc
jno
xchg
jecxz
sbb
xlat
push
aad
adc
mov
sbb
mov
scas
iret
mov
push
and
fimull
rcrb
mov
xor
stos
mov
leave
out
adc
mov
pop
dec
adc
or
mov
lahf
pop
jae
push
lcall
test
je
push
pop
push
mov
mov
push
xchg
jb
sti
cli
aas
dec
adc
sti
xor
repnz
adc
jnp
inc
mov
pop
aas
cmp
stc
subl
jmp
lods
fisttpl
cmp
es
clc
mov
jle
outsl
lods
in
sti
or
cmpsl
xor
loopne
mov
or
cmpsl
push
or
or
std
mov
push
xor
arpl
lds
mov
inc
fwait
subb
mov
lret
mov
pop
test
and
mov
rcl
gs
cmp
push
aaa
sbb
ss
xor
movsb
sbb
test
sbb
inc
push
adc
cltd
aas
or
shrb
mov
movsl
addr16
iret
shll
les
push
push
mov
dec
bound
adc
je
insb
mov
fcmove
nop
imul
xchg
sub
fs
push
lods
outsl
lock
xchg
mov
ds
clc
idiv
call
adc
push
sub
pop
popa
jmp
nop
test
testl
test
in
dec
adc
shlb
inc
dec
pusha
je
xchg
lds
push
idivb
pop
dec
mov
outsl
xchg
subb
mov
mov
stc
sub
inc
push
mov
lods
push
fisubrl
add
inc
push
hlt
xchg
jp
pop
pshufw
pusha
pop
jmp
daa
jp
xchg
fldenv
call
test
enter
out
std
push
das
xor
shll
dec
pop
pop
test
out
popa
mov
inc
cmp
jbe
inc
and
and
idiv
test
lcall
push
jbe
ret
out
cmp
jae
mov
clc
leave
dec
iret
inc
mov
jg
jnp
imul
xchg
pushf
xchg
mov
fwait
sahf
pop
cmp
sub
inc
sbb
movsb
cmpl
jle
pusha
test
aaa
pop
shl
fsub
adc
sub
adc
shr
cmp
sbb
cltd
cmc
xchg
stos
push
aad
lods
popa
adc
cmp
mov
mov
adc
jo
movsl
imul
cmp
jge
cwtl
sbb
inc
mov
sarl
pop
test
inc
add
or
in
inc
dec
xchg
out
push
dec
pop
push
jl
jp
mov
pushf
inc
jnp
divb
andb
test
punpckhdq
inc
jno
or
pop
xor
test
iret
inc
push
mov
xor
xchg
pop
lods
icebp
pop
loope
clc
push
insb
loope
add
decb
jg
scas
rorb
mov
aad
clc
xchg
imul
push
ljmp
icebp
push
xor
mov
xchg
popa
es
or
out
ss
sbb
inc
push
fisubs
xchg
sub
je
hlt
js
dec
jno
adc
pop
jnp
or
iret
pop
outsl
push
inc
jne
dec
mov
xor
cmp
jbe
push
stos
dec
jp
mov
pop
cltd
or
xchg
in
fwait
insb
mov
ds
and
aad
int3
pop
popf
outsb
fadd
add
out
sbb
bound
out
xchg
add
pop
push
xchg
dec
fwait
stc
mov
sti
dec
lret
mov
cmovs
test
jecxz
mov
mov
or
jbe
push
test
outsb
xchg
outsl
rsqrtps
test
gs
mov
sbb
xor
popa
jbe
fistl
xchg
fstps
cs
les
jne
jg
add
jbe
dec
out
push
and
lret
cmpsl
inc
stc
add
insb
mov
repnz
imul
leave
cwtl
jbe
jp
cmovbe
inc
inc
adc
push
push
sbbl
dec
aad
arpl
and
and
adc
lahf
popa
nop
and
xor
xchg
cmp
subl
add
mov
sub
lds
andl
cmp
push
data16
add
insl
push
mov
jecxz
ret
inc
push
jno
sti
int3
mov
es
sbbl
out
mov
sbb
jmp
in
cmp
inc
xor
lock
lods
dec
mov
jmp
dec
leave
push
or
jnp
pop
xchg
and
pushl
mov
pop
js
mov
ret
cli
jp
nop
cltd
jge
jl
out
addb
or
xchg
lods
push
add
xchg
daa
and
mov
jg
ljmp
jmp
sub
das
lret
or
inc
mov
adc
ret
add
repz
stos
lcall
fdivr
aaa
add
xchg
gs
imul
mov
xchg
movsl
xchg
int
push
mov
jae
out
rorl
xchg
inc
sbb
push
mov
call
dec
imul
sub
jl
scas
jle
addr16
dec
sub
cmp
mov
sarb
xchg
mov
inc
test
push
or
inc
test
inc
inc
jae
ss
mov
lret
mov
inc
mov
sbb
or
pop
mov
ud2
aaa
mulb
ret
popa
or
push
and
xor
shl
fidivl
testl
lret
fdivs
jno
add
int3
sbb
mov
shl
push
stos
dec
mov
lods
xchg
mov
pop
pop
leave
es
arpl
into
pop
or
dec
jmp
in
ret
outsb
push
loopne
jns
push
dec
lds
ror
adc
xchg
jb
jne
mov
mov
icebp
lret
mov
sbb
jle
repnz
mov
fwait
mov
dec
les
mov
inc
cmpsb
es
out
sbb
mov
out
js
jae
xor
cs
add
jl
dec
stos
jne
push
arpl
test
mov
mov
roll
ret
adc
cs
xlat
imull
nop
fisttpl
fcom
dec
push
test
cld
or
pop
fildll
out
and
adc
jg
or
add
fnstsw
stc
hlt
pop
loopne
mov
out
add
je
mov
ss
mov
mov
fwait
or
mov
fisttpl
shrb
push
pop
inc
sbb
popa
clc
rorl
iret
cmp
cmp
lock
mov
stos
icebp
fwait
out
rcrl
add
cmp
sti
pop
adc
arpl
das
outsb
inc
idivb
lret
lock
dec
sbb
xchg
jge
sbb
cmp
and
inc
push
sbb
xor
aad
mov
aad
lcall
add
xchg
sub
pop
push
lahf
sub
lahf
repnz
push
pop
repz
or
bound
adc
xor
imul
mov
std
pushl
into
mov
pop
sbb
imul
cmp
popf
aam
icebp
imul
or
jecxz
outsb
pop
or
pop
jb
lods
cli
xchg
cmp
xlat
ret
call
and
add
ret
and
loopne
pop
inc
mov
mov
mov
xchg
pop
shr
adc
sub
mov
xor
add
pop
inc
lret
jmp
sub
lret
jl
add
ja
repz
adc
pop
dec
adc
xor
push
repz
xor
cmp
enter
sub
xor
mov
aas
xchg
dec
or
ret
pusha
sub
jmp
fwait
xchg
add
xchg
cmp
mov
lret
mov
mov
arpl
stos
test
or
gs
or
out
dec
pop
sahf
mov
add
push
push
jmp
sbb
insl
cmp
out
mov
sbb
or
mov
ss
pop
sbbl
repnz
sub
inc
jle
les
push
sub
bound
sbb
cmp
mov
fstpl
ret
ljmp
addr16
sbb
fildll
cpuid
into
xor
xor
rep
roll
add
mov
mov
sbb
inc
out
mov
dec
nop
jb
ljmp
das
ret
or
pop
out
shl
out
pop
cmp
push
cmp
jecxz
inc
les
cwtl
jg
aam
in
call
push
fs
fimuls
lds
pop
xchg
bound
add
insl
push
pop
or
cmp
sbb
sub
cmp
leave
rorb
xchg
mov
std
adc
xchg
stc
mov
cmpsl
inc
shr
dec
fs
cli
jno
fsubl
scas
dec
dec
cmp
jmp
imul
loop
jnp
aam
rorl
pop
xchg
out
or
jnp
cmc
or
adc
inc
jb
lods
mov
testl
test
pop
stos
pop
dec
dec
cmp
jbe
out
cmp
outsl
aad
and
fs
mov
in
add
cs
mov
aam
jge
lods
pop
or
jns
push
lods
dec
pop
sub
sti
sbb
in
push
adc
pop
mov
cmp
cmpsb
in
pop
adc
jl
sahf
mov
iret
pop
movq
dec
adc
push
clc
loop
test
push
insb
inc
cli
or
sbb
repz
add
movsl
fwait
lret
cli
cs
roll
std
test
fcoml
cmp
in
cmpsb
pop
mov
push
aaa
aad
das
orb
sub
add
adc
and
push
pop
fsub
and
scas
les
cmova
mov
js
sbb
pop
rcll
popf
inc
lahf
cmpsb
mov
pop
pop
xchg
repz
call
shl
scas
mov
mov
pop
enter
pop
sub
pop
jmp
test
sub
jmp
xchg
push
cmc
and
mov
mov
shll
dec
mov
mov
stc
cmp
std
sub
sbb
push
mov
decb
ficompl
cmp
jo
or
and
iret
addr16
push
fnstsw
mov
stos
sysenter
mov
call
inc
xor
xchg
inc
cmp
int
xorb
cwtl
mov
push
add
jns
test
mov
add
hlt
clc
lahf
fbstp
dec
icebp
aad
xor
scas
adc
bound
testb
mov
jp
push
scas
or
push
jb
push
pusha
xchg
sub
fst
rolw
xchg
stos
je
and
add
cli
cld
stos
ds
mov
inc
ja
sbb
mov
cmp
add
sub
mov
mov
dec
push
sar
sbb
pop
or
lea
inc
xchg
int3
int
ljmp
rorl
out
jmp
ja
jp
cmc
pop
sbb
outsb
cmp
jno
cmpsl
scas
mov
mov
inc
jge
dec
mov
loope
sbb
aam
jp
pop
mov
lea
mov
cmp
lret
cmc
das
lret
push
leave
mov
inc
clc
arpl
mov
sbb
mov
adc
jo
movsb
pop
out
xchg
dec
and
or
lods
inc
jl
xor
cmp
pop
int3
dec
stos
mov
ds
jg
int3
rcrb
mov
stos
mov
scas
fisubrl
pop
lret
and
jbe
and
jnp
add
imul
aam
mov
fidivl
testl
mov
mov
push
jo
jge
popf
sarb
pop
insl
pop
pushfw
mov
mov
mov
int
push
or
daa
data16
sahf
pusha
xchg
shrb
cld
gs
inc
xor
inc
pop
push
pop
inc
leave
sbb
push
add
xchg
ss
in
movnti
xchg
movsl
in
pushl
insl
cmovge
cwtl
sti
adc
jl
ss
test
arpl
lea
sub
pop
int3
ds
movaps
mov
ljmp
mov
inc
jmp
dec
fcomi
popf
mov
inc
mov
imul
scas
add
test
divb
or
inc
daa
js
addl
cld
lods
mov
cld
sub
lahf
xor
sub
push
mov
adc
and
cmp
shlb
scas
fnstenv
pop
pop
cmp
lods
or
scas
mov
mov
mov
js
in
jb
repnz
xor
lea
repz
out
arpl
inc
sub
lcall
mov
or
loopne
outsl
cmpsl
xchg
xor
rcrb
push
test
push
ljmp
xchg
mov
ret
divl
xchg
xor
out
dec
xchg
jnp
test
pop
sub
xchg
pusha
stos
sbbl
dec
mov
aam
xchg
jmp
sbb
pop
fdivrl
push
or
cltd
inc
repnz
lea
imul
leave
aaa
es
gs
push
mov
and
rcrl
ss
lock
aaa
lcall
jmp
inc
out
mov
gs
mov
bound
ficompl
mov
xchg
repnz
fstps
ds
ficoms
andl
inc
ret
xor
repz
jecxz
out
dec
jp
mov
adc
pop
stos
add
popf
test
insl
hlt
adc
xchg
clc
test
or
xor
xor
dec
pop
popa
sub
mov
jmp
out
rorl
out
cmp
inc
in
jns
xlat
sahf
and
inc
pushf
arpl
jo
dec
adcb
jb
cmp
test
xchg
aas
in
fsubr
cmc
ljmp
cli
mov
inc
pop
fldt
or
mov
inc
jl
rcr
shlb
ret
inc
stc
xchg
push
rcrl
dec
adc
mov
jecxz
jp
sub
jo
insb
out
ret
pop
pop
jl
pop
cwtl
or
mov
test
out
cmp
stos
lds
lods
mov
jno
fisubs
mov
in
mov
push
dec
jae
and
ud2
ds
cmpsl
mov
insl
dec
and
clc
push
insl
jmp
or
mov
push
fnsave
mov
mov
inc
mov
xor
je
cmpsl
rcrb
clc
scas
shl
shlb
inc
dec
shr
jbe
std
xor
push
mov
dec
cmp
inc
or
and
cmp
dec
int3
into
xor
cmpsb
hlt
sub
iret
mov
and
pop
cmp
jo
lods
xchg
push
or
je
movsl
and
and
insl
jmp
cwtl
mov
in
or
inc
mov
push
inc
xchg
add
shrb
pushf
jg
dec
or
std
jns
cmp
xlat
insl
and
push
lock
push
ret
mov
lahf
stos
and
in
stc
add
rorb
repz
je
or
mov
mov
popa
lock
dec
int3
shlb
mov
hlt
xchg
mov
gs
dec
xor
ja
jmp
ljmp
add
sbb
stos
int
subl
xor
cmpsb
jg
fstcw
xchg
scas
pop
jmp
xor
and
scas
adc
outsl
std
cmpsl
lds
adc
insl
jb
inc
pop
adcl
mov
les
cmp
movsb
mov
xchg
push
sub
in
or
or
mov
mov
and
jmp
jns
xchg
xor
repnz
call
rcll
mov
das
mov
pop
popf
and
push
push
pop
xlat
xor
and
jne
in
jge
shlb
orb
aas
les
outsl
fwait
and
test
imul
ljmp
sti
pop
pop
xchg
call
outsb
in
jnp
fidivl
mov
ret
jns
imul
and
lods
add
in
mov
sub
xchg
inc
sahf
mov
jne
int3
pop
cmp
xchg
jge
push
sbb
adc
sbb
push
xlat
cmp
loopne
divb
pop
or
mov
insl
mov
xor
ret
imul
add
loopne
mov
jo
dec
lret
dec
cltd
in
iret
inc
sbb
dec
aam
leave
fnstsw
mov
imul
into
xchg
jmp
push
stos
iret
push
pop
dec
addr16
imull
and
adc
aad
and
push
cmp
or
test
enter
xchg
ret
sbb
sbb
fxch
aad
jne
dec
cwtl
lahf
inc
insb
int
adc
sbb
jl
add
and
ljmp
faddl
fcoms
imull
addr16
pusha
cmp
int
insb
lea
xor
je
lods
xchg
or
daa
push
add
push
cmc
cmp
mov
jecxz
incl
cmp
loop
mov
jb
lahf
sub
push
in
push
repz
fwait
dec
jo
fildl
aaa
inc
xlat
gs
sub
push
sbb
adc
mov
push
sub
rcll
sub
dec
push
pop
jne,pt
stc
ficompl
sub
es
xchg
iret
add
xchg
test
and
adc
and
mov
scas
jle
addr16
adc
sti
sub
jno
cltd
fwait
aad
mov
or
jns
push
fs
xchg
jl
mov
inc
lret
xor
dec
jae
cmpsl
rolb
jecxz
and
cmp
iret
out
xchg
xchg
push
push
inc
jmp
mov
into
js
lcall
inc
lret
mov
jle
mov
xchg
pushf
insb
imul
xor
in
gs
adc
shll
repz
sbb
or
es
iret
or
mov
cld
mov
rcl
mov
inc
test
dec
jp
mov
fcmovbe
fs
into
pusha
mov
xor
mov
mov
imul
jnp
mov
mov
sbb
push
and
shll
fisubl
shrl
pop
adc
mov
adc
jae
add
adc
lock
insb
push
dec
fdivs
jno
hlt
shlb
stos
push
arpl
or
setge
jl
sbb
arpl
icebp
xchg
test
popa
bnd
and
fisubs
and
nop
push
inc
jecxz
mov
xchg
push
cs
sahf
out
adc
xor
loopne
lds
add
xchg
and
adc
mov
mov
je
jns
popf
inc
and
test
jp
xchg
lds
pop
fisttpll
push
inc
cmc
outsb
xor
js
xchg
jb
sahf
fs
out
out
das
push
call
scas
bound
outsb
push
sbb
add
mov
mov
add
stc
outsb
aas
or
movsb
cmp
test
jl
and
add
sbb
mov
fs
mov
aas
sbb
jle
jnp
mov
pop
xor
addr16
les
lret
mov
mov
mov
inc
and
stos
sub
cmovg
aad
scas
adc
sahf
xorl
add
pop
sbb
jae
jno
insb
shlb
push
jmp
js
inc
cmc
mov
clc
ret
jnp
mov
xchg
lods
dec
insl
and
and
out
mov
stc
mov
popf
lcall
push
mov
lea
sbb
push
mov
mov
lret
shl
jbe
add
sub
pop
out
or
sbb
rcrb
jl
mov
mov
inc
sbb
xlat
movsb
lods
dec
lret
outsl
sub
add
loop
pop
push
dec
jg
mov
gs
gs
cmc
adc
pop
pushf
in
fsubrs
or
and
lahf
insb
test
cmp
shrl
cmp
add
xor
cmpsb
push
call
jl
rorl
jb
addr16
ds
adc
jne
mov
dec
fistps
cs
jecxz
adc
fidivl
fists
sbb
mov
movsl
roll
int3
adc
jnp
repnz
pop
dec
sub
adc
push
js
dec
mov
dec
jbe
push
cmp
popa
rorl
push
inc
imul
fistl
inc
sahf
mov
mov
sbb
push
rorl
pop
xchg
adc
or
mov
mov
fisubs
cmc
xchg
sub
adc
pop
cmp
popf
negl
fisttpll
push
mov
je
jmp
dec
mov
dec
repz
push
add
mov
jnp
add
sbb
cmp
sub
and
fs
pop
repnz
jb
ret
mov
cli
lea
mov
stos
xor
data16
adc
fists
frstor
mov
xlat
jns
in
mov
fildl
and
sbb
xchg
cmp
hlt
insb
or
js
pop
pop
jg
jo
popa
movsb
sub
and
repnz
sahf
out
sahf
sub
out
icebp
loopne
xchg
ljmp
lock
pop
push
add
lret
neg
inc
sub
mov
inc
mov
dec
std
mov
add
push
xchg
loop
aam
mov
inc
sarb
mov
mov
loop
push
dec
cmpsb
cld
push
insb
mov
test
rcll
push
lahf
in
push
sub
jne
mov
cwtl
adcl
mov
stc
sbb
add
aam
push
pop
jmp
ljmp
cld
mov
jge
jmp
push
gs
jb
lret
fwait
jae
dec
push
arpl
push
cmp
in
test
jns
and
xchg
mov
shlb
insl
push
adc
inc
aaa
call
push
ja
leave
dec
outsl
in
sbb
clc
mov
ljmp
stc
imul
mov
add
in
movl
mov
aam
sub
add
fidivl
sub
in
loopne
jnp
or
add
les
cltd
loopne
shl
out
pushf
inc
mov
sub
lcall
add
fsubr
mov
imul
fwait
pop
mov
add
sbb
insb
bound
xor
jae
adc
xchg
pmaxsw
es
stos
mov
xor
sti
xchg
test
adc
flds
repz
test
aad
call
out
push
xchg
and
roll
jecxz,pt
push
jp
inc
js
lret
arpl
jb
data16
or
fidivl
into
stc
sbb
jb
das
pop
loopne
ljmp
mov
or
pop
sarb
jle
popf
dec
cs
mov
aas
or
insb
inc
popa
sub
stos
jns
add
mov
mov
call
adc
js
sbb
stos
les
lret
loopne
gs
inc
jg
mov
leave
sahf
aad
mov
daa
imul
insl
insb
fs
xchg
mov
mov
sbb
ja
sti
adc
movsb
test
dec
mov
repz
push
std
add
fcmovne
cmp
pushw
mov
pop
mov
stos
xchg
or
rcrb
outsb
sti
cmpsb
push
jge
pushf
daa
inc
out
jl
inc
dec
movsb
aam
addr16
sbb
bnd
fisubs
mov
sahf
add
cwtl
int
or
and
dec
mov
mov
dec
stc
fsubrs
pop
dec
mov
shll
jns
push
and
subb
enter
and
mov
mov
and
cmp
push
jg
test
roll
lahf
jge
fsts
insl
data16
add
mov
cwtl
xorb
mov
fisttpl
pop
mov
pushf
jnp
sbb
inc
mov
andl
adc
sub
pop
adc
sbbb
xchg
fistpll
jnp
jmp
xchg
mov
sub
dec
loope
xchg
repnz
cmpsb
movsl
or
mov
pushf
mov
imul
pop
scas
jle
gs
dec
sbb
and
pop
sar
jae
pop
xchg
cmpsl
sar
sub
subl
jo
dec
cmp
dec
xor
test
out
dec
mov
pop
and
xor
sti
mov
inc
test
pop
imul
mov
imul
das
cs
dec
xchg
mov
scas
pop
pop
cmc
clc
add
push
std
mov
sub
lret
adc
jg
je
rorl
inc
mov
fbstp
dec
adc
out
sbb
cmp
xchg
push
adc
aaa
popa
sbb
pop
movsb
mov
xchg
jp
jbe
in
xor
mov
mov
inc
cmp
inc
jae
adc
mov
mov
ficoml
stos
out
js
pop
loopne
add
jnp
push
outsl
ljmp
icebp
inc
addb
fsubrl
jp
out
aam
dec
ret
add
jns
movsb
xchg
mov
mov
mov
jns
lea
jp
or
sbb
jne
xor
push
add
xor
pop
and
push
ror
dec
ja
nop
xchg
shrl
xchg
jnp
jmp
sub
lods
xor
rcr
sbb
testl
and
cmp
mov
orb
out
stc
push
enter
int3
inc
bound
jbe
sub
push
push
sti
add
test
sub
cmc
movl
mov
cmp
xchg
mov
cs
and
mov
rcrl
fninit
or
icebp
sub
ficomps
rcl
inc
sub
verr
fwait
jl
xor
sti
cwtl
lock
in
adc
outsl
jp
lods
pop
outsl
sub
mov
xorb
ret
sub
push
daa
cwtl
cli
daa
push
mov
or
pop
call
dec
cmc
and
cmp
dec
jo
adc
loopne
fstpt
xor
xor
imull
aad
push
cmp
mov
enter
or
jns
push
mov
or
dec
inc
mull
sbbb
push
iret
icebp
pop
sbb
inc
repnz
cmc
test
test
lahf
and
pop
cltd
cmp
int
pop
rorl
jb
dec
or
mov
adc
adc
lea
pop
sub
les
add
lock
nop
ljmp
or
mov
cltd
les
or
xchg
mov
in
pop
aas
inc
je
cltd
imul
cmpsl
inc
into
cmp
mov
add
mov
das
or
call
pop
imull
mov
xchg
mov
cld
lock
dec
and
or
jle
ja
sbb
jle
xor
mov
add
cmp
pop
cmp
repz
inc
sub
ror
mov
shrb
and
scas
fisubs
mov
cwtl
push
or
xor
data16
fdivr
cmp
inc
lret
xchg
push
mov
and
cmpsl
aas
int3
das
dec
xchg
lods
inc
add
inc
push
mov
sbb
sub
push
ss
mov
test
xor
rcrb
inc
jno
aas
xchg
fcomps
adc
lahf
lods
dec
pop
in
lds
outsl
adc
mov
mov
jecxz
clc
pushf
xor
fldcw
push
mov
std
lret
add
dec
xor
jp
lock
dec
std
push
sub
jns
fs
jno
jnp
mov
stos
jae
sbb
mov
mov
mov
rcrl
popa
arpl
clc
shrb
inc
mov
int
sbb
addr16
adc
xchg
bound
jg
mov
mov
inc
xchg
jns
cs
jmp
iret
dec
stos
mov
or
mov
shrb
push
imul
fs
pop
dec
or
in
mov
xchg
mov
xor
sub
jb
aaa
jmp
mov
scas
mov
jne
aaa
dec
xchg
jns
pop
add
nop
popf
mov
push
decb
add
add
jnp
enter
cld
out
les
push
faddp
jb
aaa
je
add
xchg
jae
aaa
aam
cli
stos
pop
repnz
std
arpl
ja
out
fbstp
jmp
push
adc
incl
imul
xchg
pop
push
jg
and
inc
testb
or
test
mov
cmp
xor
mov
pop
adc
clc
mov
loopne
or
mov
cmc
int
sub
mov
add
scas
loop
inc
lock
das
jecxz
in
aas
loop
lcall
add
dec
icebp
flds
and
lcall
mov
inc
rcl
pop
jae
xchg
mov
push
ljmp
jge
scas
push
inc
jno
outsl
clc
scas
test
sbb
sti
je
pop
adc
into
testl
movzwl
push
cmc
outsb
xchg
lcall
sbb
loopew
pop
mov
sub
idivb
aam
imul
hlt
and
movsb
bound
or
pop
pop
call
lret
jae
stos
clc
sbb
mov
mov
xchg
mov
cmp
push
ficompl
fsubs
and
dec
adc
mov
out
push
sub
shrl
xchg
dec
fstl
fnstcw
leave
and
out
aas
push
int3
subl
lock
inc
es
fdivrl
mov
and
aad
out
out
and
lret
mov
jmp
push
aaa
cmc
cmp
sarl
orl
nop
pushl
das
sub
xchg
xchg
stos
push
aam
std
push
or
rcr
enter
scas
xor
lock
push
inc
imul
or
imul
leave
mov
out
fs
and
xchg
mov
jmp
stc
mov
xchg
sbb
je
in
insb
push
jp
aas
stos
sub
nop
jnp
xchg
add
sbb
xor
inc
dec
xchg
push
js
inc
mov
mov
mov
dec
jge
mov
inc
shl
xor
inc
hlt
fstl
gs
jnp
lahf
movsl
sub
in
movsl
pop
repnz
add
inc
or
cmpsb
mov
insb
pushf
sub
lret
push
cmp
movsb
pop
mov
mov
not
cmp
inc
enterw
jg
hlt
dec
scas
lock
iret
push
arpl
in
insl
mov
xor
mov
shlb
dec
pop
push
mov
lcall
mov
mov
jge
mov
orl
int3
inc
mov
out
inc
insl
test
sbb
xor
pusha
loope
lds
lock
pop
push
setne
fadds
pusha
mov
pop
aaa
and
les
dec
mov
mov
cli
or
dec
sbb
mov
mov
adc
pop
cltd
inc
inc
jbe
or
fwait
add
dec
daa
jno
adc
daa
push
pushf
fistpl
and
sub
fisttpl
dec
xor
push
sub
lret
mov
pop
mov
mov
aas
push
add
lea
or
fdivs
cmp
orl
xchg
mov
fisubrl
and
push
and
add
je
jns
mov
dec
xchg
lret
mov
addr16
test
jmp
aas
add
and
sub
sub
xchg
es
insb
stos
xchg
jne
and
paddusw
add
push
cmc
mov
mov
xchg
cld
dec
sub
adc
testb
dec
pushf
mov
xchg
push
loop
add
faddl
cmpsb
loope
push
xor
mov
pop
mov
pushf
xor
negb
xlat
jno
fstl
mov
push
mov
in
xchg
nop
in
rorl
add
xor
mov
push
sbb
leave
and
push
popf
repnz
in
fisubrs
add
xlat
jecxz
fwait
jg
or
xchg
outsb
add
es
scas
or
ja
add
cmc
dec
inc
rolb
jb
dec
inc
les
xlat
test
adc
pop
out
pop
xor
add
imul
fisttps
int3
and
pop
mov
add
push
push
test
adc
mov
push
insb
rcll
insb
pop
push
aas
or
adc
arpl
cmp
mov
ret
xchg
shl
ljmp
bound
or
and
shll
fstps
cmc
sahf
dec
xchg
jle
fcompl
movsl
and
xchg
jb
shlb
mov
push
fidivs
rorb
cld
pop
adc
sub
xchg
movsl
xchg
pop
aaa
push
shr
jno
in
pop
pop
pushf
movsb
mov
xor
fwait
jg
or
and
push
fpatan
out
push
jl
cmc
push
xchg
jno
sbb
in
loopne
es
sub
ljmp
stc
rolb
jle
mov
addr16
movzbl
les
dec
mov
mov
mov
mov
imul
data16
pop
add
hlt
cmp
ljmp
clc
lods
push
lds
dec
pop
loope
insl
das
cmp
cmpsl
push
inc
mov
sub
gs
sbb
in
fsubs
dec
cmp
pop
loope
inc
fsubrl
and
loope
imul
xchg
mov
push
iret
sub
je
dec
nop
jg
popa
les
push
push
movsb
push
mov
push
insb
sub
shlb
pop
movsl
push
das
add
in
lret
jo
inc
pop
imul
xor
sbb
push
adc
xchg
addr16
and
jge
pop
into
ss
aad
sbb
or
lret
push
lahf
push
xor
add
xlat
ja
adc
sbb
in
cmpsb
lds
adc
rclb
test
adc
cmp
xchg
jge
mov
shl
xlat
filds
pop
repz
jno
clc
fnstcw
xor
push
lret
fs
jns
mov
sar
sub
cmp
jge
xchg
movsl
hlt
fdiv
divl
testb
jg
mov
jae
int3
cmp
imul
jl
or
popw
sbbb
cmp
or
xor
fnstenv
mov
pop
test
xchg
jnp
les
jns
pop
sub
test
jo
sarl
call
xchg
pop
jns
psubsw
data16
jbe
ss
jecxz
add
imul
mov
repz
cwtl
jecxz
fs
aas
mov
movsl
sub
hlt
push
dec
addr16
std
je
ljmp
fdecstp
or
xor
stos
pop
mov
xor
out
mov
clc
jmp
fisubs
dec
popl
xchg
movsl
ficoml
aad
or
test
push
sbb
mov
rcrl
fidivl
pop
popa
pop
mov
push
and
test
ljmp
lret
push
cli
push
inc
fnstcw
sub
loop
jmp
cmpsb
inc
aas
mov
clc
dec
or
xchg
cmpsl
fcoml
scas
js
insb
cli
mov
les
int3
inc
push
mov
push
bound
fdiv
dec
xchg
shrb
xchg
push
lea
fcmovnbe
xor
shrb
andl
cmp
or
popa
lds
xchg
and
mov
pusha
loop
xor
sub
jecxz
pop
sti
push
dec
xchg
sub
jns
cmc
jmp
repz
or
add
mov
inc
cltd
in
sbb
cmpsl
pusha
subl
xchg
push
int3
mov
xorb
push
mov
mov
mov
fdiv
ljmp
mov
inc
nop
call
bound
xchg
or
and
iret
dec
xchg
add
mov
gs
rclb
mov
dec
cmp
in
pop
aas
sarl
jmp
jne
ljmp
inc
shl
fnstcw
adc
adc
jb
call
std
in
adc
scas
xchg
or
sub
xor
push
or
pop
jl
sbb
push
jle
sbb
js
cmc
pop
push
in
cltd
push
lods
mov
cmpsl
or
mov
mov
jo
push
jbe
mov
sub
int
shl
add
fsubl
cltd
in
pop
cmc
jno
data16
addr16
or
fmuls
stc
shrl
push
call
mov
pop
aas
dec
pop
iret
int3
push
jno
sub
adc
out
mov
cmp
insb
roll
inc
or
push
pushf
mov
in
loope
sbb
loop
mov
pop
js
push
pop
ffree
pop
dec
xor
imul
dec
cmp
stc
jmp
lahf
scas
add
or
pop
xor
jl
arpl
jb
jb
mov
lods
stos
pop
stc
rorl
or
inc
xlat
scas
push
inc
push
scas
jmp
inc
sbb
xor
mov
jo
mov
sahf
dec
movsl
sub
int3
adc
shrb
mov
mov
xchg
test
lea
or
and
inc
or
enter
push
mov
arpl
and
fcom
clc
xor
daa
cmpsb
mov
jmp
mov
out
imul
jae
sbb
enter
jp
sti
mov
mov
push
add
ljmp
ret
mov
sbb
pusha
push
lahf
out
inc
fdivr
mov
mov
cmp
aam
int
push
xchg
cmp
sbb
cwtl
mov
enter
jmp
fucomi
pop
adc
mov
lcall
dec
rcll
test
fabs
inc
je
fstps
into
inc
popa
mov
inc
xchg
cmp
mov
ret
sbb
push
sub
inc
xor
scas
sbb
mov
mov
popf
repz
cmpsb
das
mov
mov
sbb
pop
sub
in
sarl
jecxz
adc
mov
xor
adcb
push
stos
xchg
mov
pop
adc
mov
mov
cmp
lea
mov
xchg
xor
xor
dec
fidivl
in
and
adc
cmp
sahf
mov
inc
lods
shll
inc
push
xchg
sbb
das
sub
mov
lods
sbb
jae
sub
pusha
push
lret
out
jae
and
or
cmc
dec
addr16
jnp
lods
fwait
xchg
inc
arpl
jg
mov
negl
lcall
stc
or
sub
sub
test
lods
ret
jmp
int
es
fidivs
sub
pusha
pop
xchg
shlb
pop
cmp
arpl
pop
scas
mov
insb
or
loopne
push
notl
xor
jecxz
arpl
jns
xchg
mov
mov
aas
testb
loopne
jbe
push
fwait
cld
mov
in
shr
ficoml
popa
sub
or
lret
adc
pop
fsubrl
pop
in
cmpsb
call
add
cltd
rcrl
test
sub
add
mov
sbb
addr16
jb
pop
lods
inc
mov
cli
sbb
sbb
icebp
cmp
leave
adc
loope
xchg
xor
in
idivl
mov
mov
add
sub
xchg
je
test
and
shr
xlat
mov
out
pop
clc
scas
enter
inc
jb
mov
jp
sti
jl
out
sub
or
mov
test
adc
push
aad
test
test
mulb
lock
movsb
or
mov
push
rcrb
cld
stos
das
inc
inc
xchg
dec
xor
jnp
popa
xor
jo
fcompl
and
nop
in
jmp
popa
push
addr16
rcrb
cs
dec
pop
movl
pop
mov
cltd
lcall
sub
mov
fidivl
lret
testl
negb
mov
push
dec
pop
test
sbb
push
enter
mov
cmp
add
sub
sbb
pop
and
adc
xchg
mov
inc
and
xchg
mov
cmpsl
sub
es
and
add
inc
push
aas
aaa
mov
lahf
rorl
out
cmp
xor
rcrl
add
push
movsb
or
out
dec
xor
dec
sbb
mov
rorl
fwait
xchg
pusha
out
aaa
icebp
push
xor
mov
cltd
jge
ret
cmp
cli
add
and
sbb
das
or
cld
into
icebp
cmp
sbb
inc
lret
icebp
dec
cltd
icebp
adc
and
adc
pop
in
sbb
add
ja
lea
inc
dec
sub
dec
xor
cli
bound
cs
ja
jbe
in
syscall
push
sbb
push
pop
cmc
out
les
es
mov
xchg
adc
enter
sub
inc
mov
dec
addr16
mov
adc
rorl
fstps
pop
xchg
mov
imul
shlb
mov
lods
jmp
fwait
inc
fdivr
mov
add
pop
insb
int3
xchg
cmp
lret
fdivl
frstor
std
cld
insb
inc
aad
inc
lret
cld
or
fldt
pop
or
ja
in
jge
pop
test
add
fisubrl
cmpsl
push
lock
xor
pop
mov
xchg
data16
mov
xchg
push
and
adc
jno
nop
addr16
mov
dec
mov
mov
push
lea
mov
or
xchg
lret
and
jge
xorb
mov
shlb
out
lahf
mov
jnp
leave
je
sbb
adc
sbb
hlt
mov
add
rorl
lea
cmp
lcall
orb
lods
ja
add
and
cmp
xor
adc
adc
mov
or
es
jl
dec
and
aad
jmp
test
popf
cmp
sub
imulb
iret
cmp
and
loope
add
mov
insb
cmp
lods
out
enter
gs
lds
insl
aad
out
hlt
test
mov
out
mov
adc
roll
movsl
std
mov
push
dec
inc
in
lea
in
fimull
ja
push
addr16
push
push
mov
or
mov
arpl
pop
sbb
xchg
cli
add
inc
fiadds
sbb
hlt
jbe
adc
adc
pop
add
in
fcmovne
mov
andl
pusha
shll
in
jns
mov
xchg
inc
sbb
cmpsl
cld
arpl
pop
push
and
adc
mov
push
pop
imul
jb
daa
or
fnstcw
addl
dec
lret
ja
mov
f2xm1
pusha
adc
or
sub
ret
fs
fsts
jo
je
dec
inc
sbb
xor
sar
jb
pop
mov
in
adc
pop
mov
push
into
xchg
fildl
push
movb
sti
cld
dec
enter
mov
mov
clc
pop
mov
ds
xor
pop
mov
adc
fidivrl
adc
leave
add
mov
and
and
in
sbb
mov
xchg
sbb
lret
push
xlat
adc
mov
push
ja
jnp
fs
lret
sbb
out
stos
push
int3
fldpi
mov
dec
loop
pushf
cmp
xchg
das
lock
subb
mov
movsl
xlat
int
dec
mov
hlt
insb
pop
dec
ret
mov
lret
xchg
aam
pop
adc
push
stc
and
inc
pop
lods
jl
mov
int3
movsb
pop
subb
jb
out
pop
stos
adc
sub
pop
es
push
in
pusha
or
orb
jg
mov
testl
dec
ja
pop
push
mov
sbb
fcompl
sbb
xchg
push
pop
outsl
shufps
xor
test
inc
lea
and
gs
xchg
cmpl
jp
ljmp
lods
scas
xor
or
fidivl
inc
ds
jae
fcoms
iret
cmp
mov
out
jmp
lock
std
popf
sbb
sub
incl
push
push
rcll
cmpsb
imul
aas
xor
push
jge
nop
mov
rcrb
mov
xchg
lcall
test
arpl
xchg
xchg
sbb
inc
ss
inc
mov
pop
pop
gs
loopne
add
mov
mov
mov
fnstcw
push
jbe
enter
jmp
loop
lods
cmp
cli
ja
mov
jl
loop
repz
xchg
mov
ljmp
cmp
xlat
cmpsb
iret
test
xor
shrl
icebp
push
aaa
fwait
sahf
push
push
or
cmp
sub
mov
and
xchg
dec
xor
dec
sbb
sub
fwait
imul
adc
pop
mov
xchg
jo
dec
jmp
out
xchg
ja
pop
jle
mov
lret
lahf
adc
test
nop
ret
scas
jno
xor
jb
aam
pushl
inc
xor
aas
pop
mov
lods
jno
iret
mov
test
cs
popf
jns
jae
fiadds
ds
add
data16
in
or
insl
stc
push
dec
xor
pusha
add
dec
push
in
mov
or
cmp
test
aad
mov
pop
decl
out
das
aam
lret
arpl
rcrl
sbb
in
in
pushf
inc
je
pushf
inc
xchg
outsb
lret
mov
or
jbe
pop
mov
aaa
sahf
dec
jnp
adc
adc
mov
ret
loopne
fs
popa
pushf
sbb
cli
jne
pop
sub
mov
mov
adc
negb
movsb
and
jl
cmp
orl
mov
xor
fildl
jl
jo
sbb
dec
movsb
xchg
fsub
jno
lret
jmp
xor
jae
movsb
xor
xchg
add
push
imul
icebp
pop
jae
pop
lcall
icebp
mov
or
mov
cmp
imul
adc
fsubrl
pop
lods
mov
xor
cwtl
aas
les
cmp
pop
movsl
ret
inc
mov
insl
push
ljmp
sahf
rorl
and
scas
or
add
in
shrl
jl
mov
loop
shlb
ret
imul
ret
out
cltd
clc
js
loope
pop
fadd
sarl
aas
cmpsl
lret
pusha
in
push
sbb
std
xor
jecxz
enter
fdivl
or
push
or
xchg
hlt
int3
js
test
sub
andb
cmp
stos
pop
loopne
stc
inc
push
xchg
mov
test
andl
xchg
jns
js
mov
in
push
punpckhdq
in
ret
mov
test
lcall
loopne
bound
xchg
js
fwait
std
xchg
loop
lds
in
or
jo
add
in
sbb
xchg
mov
push
popa
test
das
pop
mov
jb
out
sbb
iret
push
push
add
mov
push
mov
popa
xor
js
mov
or
mov
inc
mov
loop
pop
push
inc
jmp
cmp
icebp
pop
mov
in
sahf
test
jecxz
pop
lock
incl
loope
add
mov
mov
shll
pop
loopne
xor
popf
sub
and
cmp
jb
repnz
dec
xchg
pop
mov
push
leave
mov
sub
adc
cmpsl
iret
cmp
pop
icebp
mov
mov
push
outsb
daa
icebp
ja
cmp
sbb
stos
test
jg
test
test
xchg
cmp
push
call
xchg
xor
jl
cmp
test
jg
pop
subps
xchg
repnz
mov
adc
sti
push
mov
shrb
cmp
insl
dec
outsb
fiadds
mov
insl
test
pop
loope
test
add
push
dec
xlat
jg
and
ficoms
jno
jbe
adc
testb
data16
xchg
aaa
pop
test
test
pop
sub
in
scas
xchg
xchg
js
shlb
aaa
mov
dec
xchg
cld
mov
jge
mov
adc
xlat
jns
xchg
jecxz
cltd
mov
scas
ret
jns
es
cs
cwtl
dec
fsubs
popf
scas
lret
negb
outsl
and
lock
mov
les
mov
popa
je
js
push
mov
push
mov
insl
inc
repz
sbb
es
decl
loopne
push
imulb
test
pop
shrb
adc
jecxz
jl
xchg
stos
pop
or
sub
xchg
add
lret
imul
fiadds
loope
xchg
sub
jnp
loope
out
into
add
enter
test
cmp
add
xlat
dec
aad
or
dec
add
movsl
addr16
or
or
stos
xchg
add
loope
inc
cld
mov
js
pop
cltd
mov
jo
cmpsl
jmp
popa
ret
nop
sub
fimull
lods
pop
lds
dec
nop
or
mov
sti
mov
pop
sbb
mov
add
jne
cmp
aaa
cmp
pop
dec
jp
sbb
mov
xor
popa
xchg
mov
cld
add
mov
fisttps
push
cs
ret
inc
jcxz
xchg
stos
sbb
cmc
xchg
jle
ret
xchg
xor
inc
mov
inc
cmp
or
inc
jb
addr16
movsb
or
push
notb
je
sub
aas
xor
pushf
movsl
pop
sahf
jmp
adc
iret
cmc
aad
sbb
test
mov
xor
mov
cmpsb
sbb
adc
sub
push
add
hlt
xor
jo
stc
xchg
loope
shlb
push
mov
pop
movsl
in
inc
inc
sbb
cld
ret
adc
mov
adc
and
jb
push
pop
mov
and
or
addr16
int3
xchg
xchg
out
cwtl
out
arpl
push
ss
jp
jp
test
sbb
es
test
ret
out
in
rorb
popw
outsb
and
and
mov
cmpsb
cld
mov
sahf
cmp
daa
jecxz
xor
mov
or
les
fadd
shlb
fsts
lock
enter
push
lods
adc
dec
stos
sbb
push
push
test
push
test
sub
fdivr
mov
xchg
cltd
fs
and
sarb
add
popaw
or
mov
std
adc
sbb
jmp
or
mov
inc
xchg
out
sbb
fimuls
xchg
ret
fmuls
mov
xlat
mov
xchg
mov
cmp
scas
ja
pop
int
mov
push
mov
int3
cld
sbb
xchg
cmpsb
loopne
fsts
xor
insl
or
add
push
into
pop
xchg
dec
cmp
and
pusha
xor
pop
adc
sarb
hlt
xchg
jbe
dec
pop
out
lea
xchg
roll
fsubl
jnp
rcl
jmp
lcall
push
mov
mov
sbb
xchg
push
in
pusha
hlt
mov
jecxz
inc
pop
sub
jg
or
mov
pop
sarb
sbb
pop
push
je
mov
aad
cmovne
mov
add
mov
dec
cmp
shl
cmp
scas
je
cmp
jb
enter
inc
jg
adc
dec
xor
add
dec
mov
mov
sub
mov
bound
stc
bnd
ret
loopne
incl
jge
lds
hlt
popf
sbb
add
addl
dec
pop
cmp
cld
mov
aas
mov
sub
pop
filds
or
gs
imul
push
jne
cmp
push
push
add
jge
pop
aad
lock
push
int
cld
stc
inc
sub
pop
lcall
mov
sbb
lock
push
repz
pop
leave
out
xor
loopne
aaa
push
jecxz
push
and
add
mov
repnz
lea
inc
loopne
mov
and
xor
pop
and
xor
adc
sahf
iret
xor
stos
sahf
push
lahf
aam
out
mov
or
inc
add
fistl
or
ds
sub
aas
adc
dec
jns
push
call
xor
dec
xor
outsb
jmp
adc
cmpsb
sarb
xor
test
xor
mov
xor
sbb
push
stos
fdivl
js
aad
insb
cmp
mov
dec
pop
and
test
mov
arpl
push
add
xchg
pop
or
lret
adc
test
std
add
and
fldt
adc
loop
pop
aas
rcrl
clc
xchg
add
jnp
into
mov
scas
jnp
adc
lock
add
sahf
jle
ret
enter
mov
lret
or
scas
sub
add
dec
jl
adc
or
ret
rol
pop
scas
shll
das
inc
push
push
testb
add
adcb
js
inc
filds
cli
gs
lods
lahf
xchg
aas
inc
ljmp
sbb
xor
fs
div
loop
sub
adc
lods
adc
je
mov
fucom
add
lahf
mov
and
mov
xor
movsl
pop
push
mov
in
jns
js
aaa
mov
lock
test
mov
lcall
sbb
out
daa
adc
rolb
subl
and
sti
pop
sbb
leave
push
dec
jne
adc
sub
daa
fists
popf
orb
push
cmp
pop
fcoms
sbb
out
cmpsl
mov
sbb
mov
ret
mov
in
inc
mov
outsb
orl
in
xchg
daa
movsl
jno
sbb
mov
jb
cmc
mov
pop
mov
adc
sub
and
push
mov
sarl
dec
negb
add
or
add
out
xchg
and
sahf
ljmp
out
scas
xchg
push
sbb
out
pop
pop
outsl
cwtl
sub
sbb
sbbb
mov
clc
dec
and
sub
or
cmp
scas
push
adc
sbb
scas
mov
mov
shlb
jnp
je
addb
pop
add
inc
cwtl
out
std
popf
pop
pop
cwtl
cmp
push
loop
xchg
loopne
adc
mov
mov
insb
mov
gs
lods
js
loopne
addr16
xchg
ficoms
push
cld
or
fcmovu
xor
xorb
xor
mov
xor
add
pop
push
push
idivl
out
cmp
insb
xchg
movsl
rcll
inc
inc
lcall
jmp
sbbb
cmpsl
fisttpll
adc
clc
movsl
adc
add
xchg
call
out
push
sarl
lea
push
inc
aad
stos
popf
add
or
jp
jae
cmp
movsl
adc
movsl
jbe,pn
jo
fimuls
daa
in
test
roll
popa
cmc
inc
leave
repz
mov
into
sub
popf
rol
iret
mov
add
bound
fldz
push
test
or
mov
push
shr
es
fsubrp
push
imull
jb
repz
sub
jne
dec
arpl
stos
push
add
mov
or
add
ret
or
mov
pop
lods
pop
fidivs
fsubrl
nop
sbb
jno
outsb
sbb
leave
popf
push
push
fs
je
sti
xor
and
or
int
push
fstpt
inc
mov
stos
mov
int
jns
lock
repz
fistl
sub
fwait
popf
popf
or
pop
lods
and
mov
and
xor
int
push
cmc
lock
xchg
imul
cs
fcomi
outsl
sbb
xchg
or
je
jnp
in
and
jmp
icebp
xchg
sub
ficoml
mov
mov
pusha
test
mov
iret
xchg
or
fwait
idivb
fs
jo
or
jbe
mov
test
les
jmp
clc
in
sti
pop
pop
dec
daa
cli
push
pop
nop
lahf
inc
sbb
or
sub
xor
sbb
aaa
push
scas
pusha
jbe
or
push
sub
or
mov
sub
icebp
and
pop
loope
cmp
cmc
xor
sahf
jecxz
adc
mov
stos
cli
push
jmp
cwtl
iret
cmp
mov
jae
rolb
push
int
fdivrs
stc
cmpsl
ret
aam
sar
xchg
fprem1
test
addb
sbb
enter
mov
popa
mov
mov
fs
ss
loope
push
xchg
xchg
sbb
xchg
mov
or
in
mov
fisubrs
inc
mul
pop
sbb
jp
jecxz
push
adc
mov
sbbl
ret
aad
imull
fistps
dec
imul
jmp
icebp
inc
sub
inc
insl
pop
pop
cld
and
cmc
xchg
xchg
xor
dec
fcomps
lcall
adc
les
cld
in
test
out
xor
dec
lds
cmp
das
ds
sub
sar
push
push
or
repz
xchg
or
fwait
stos
push
or
sbb
add
adc
cmp
outsl
sub
dec
stc
or
outsl
fsubrs
adc
mov
pop
icebp
jge
int3
imul
imul
pushl
xorl
cmpsb
mov
push
in
and
cmp
out
mov
pop
xchg
sbb
mov
repz
add
leave
aaa
push
jp
enter
inc
cs
mov
push
sub
incb
mov
jp
push
push
sub
ret
lock
or
jg
push
addr16
xchg
rcll
out
add
hlt
loope
mov
xchg
ret
jl
fsubr
rclb
push
popf
inc
andl
scas
fnsave
out
cmpsl
mov
das
roll
notb
lea
les
test
xchg
cmp
mov
arpl
sbb
sub
data16
int3
mov
les
xor
add
xor
jae
fbld
xor
or
xchg
pop
rep
lret
in
in
jne
ficompl
hlt
and
jge
mov
lock
mov
mov
mov
ljmp
push
inc
xchg
mov
nop
stos
xchg
add
pop
jns
push
xchg
and
lcall
arpl
scas
inc
scas
xor
aas
loope
daa
out
sub
addr16
movsb
cmc
test
adc
sub
icebp
jp
dec
xchg
sbb
cld
sub
xchg
xor
and
xchg
or
frstor
inc
outsl
jbe
cmpsl
push
cmp
adc
daa
and
and
push
fildl
cmp
cld
in
jmp
cmpsl
inc
pop
out
pop
mov
sub
cmp
aam
xchg
mov
adc
mov
push
push
xchg
push
jbe
xchg
adc
fs
xchg
pop
imul
fwait
sbbl
xchg
cmpl
test
push
andl
push
adc
mov
aam
push
out
icebp
mov
mov
popa
ds
pop
jp
xchg
movsb
test
mov
in
cmc
add
sub
sub
xchg
jo
and
jae
sbb
pop
ja
jns
xor
movsl
xchg
mov
pop
orb
mov
daa
stos
mov
es
lret
mov
mov
mov
mov
cwtl
fmuls
dec
mov
xlat
jg
pop
jmp
es
pusha
nop
jb
insb
cli
adc
adc
cltd
jnp
mov
mov
nop
lea
xchg
test
mov
aaa
cmc
test
jno
or
ret
arpl
iret
mov
mov
das
xlat
push
push
jae
mov
jae
cmp
cmp
icebp
cmpb
int
cli
add
sub
cmp
push
test
rcrl
pusha
movsl
push
adc
cmp
mov
rcll
pop
mov
adc
pop
test
pop
cmp
pop
mov
popf
stos
or
push
lret
int3
cmpsl
aam
push
xor
jno
xor
mov
fisubrl
das
dec
push
je,pt
outsb
jecxz
icebp
leave
jbe
int3
push
xorl
sbb
pop
ret
adc
sbb
mov
call
test
and
jo
cmp
lea
mov
xchg
sub
mov
ret
insb
mov
in
xchg
mov
repnz
push
addr16
enter
xor
cli
cmc
lock
inc
aas
in
push
adc
xor
inc
call
mov
mov
arpl
mov
test
mov
cmp
das
aam
notb
jecxz
fsubrs
shrl
test
cs
das
pop
orl
push
sbb
sar
add
xorb
mov
xor
mov
ret
xor
sbb
cwtl
imul
sbb
popf
jmp
mov
ja,pn
and
inc
mov
mov
mov
xor
xlat
lea
lds
sahf
jne
mov
adc
or
in
adc
cmp
movsb
out
dec
test
add
mov
insl
adc
add
push
pusha
into
mov
orb
jmp
xchg
and
jne
jmp
add
bound
mov
jmp
mov
push
mov
int
lods
stos
xchg
imul
pusha
ss
into
or
dec
jne
dec
movsb
int
jp
inc
cltd
out
cli
or
test
pop
inc
fiadds
inc
stos
cmp
int3
push
push
jecxz
pop
stos
adc
cwtl
inc
test
lock
mov
push
es
xlat
shl
xor
mov
ja
mov
or
out
add
pop
cltd
or
in
cmpsb
pop
movsl
out
xchg
faddl
cmp
jns
xor
mov
nop
ds
dec
test
xchg
and
lods
inc
adc
jb
pop
pop
pop
rcl
mov
rclb
sub
sub
or
pop
sbb
les
dec
bnd
scas
dec
ret
lods
xor
push
std
push
sbb
pop
pushf
cmpsb
out
ret
leave
into
addr16
xchg
add
mov
pop
outsb
shl
icebp
ss
cmpsb
sub
mov
gs
xlat
and
repnz
test
inc
jo
jl
dec
dec
mov
lea
and
xchg
mov
add
or
scas
and
call
mov
stos
pop
loope
adc
cltd
roll
cltd
dec
pop
dec
push
int3
in
cmp
xchg
or
mov
dec
push
in
mov
pushf
mov
jmp
popf
push
test
loopne
mov
inc
cmp
scas
cltd
jno
sahf
mov
inc
out
jmp
push
daa
shlb
xstore-rng
cmpsl
xchg
lea
fdivrs
je
scas
cmpsb
arpl
sub
push
inc
push
xlat
mov
pop
enter
ret
or
cmc
jnp
push
sahf
lods
sbb
test
jno
das
or
mov
out
jge
mov
ret
push
lret
insb
inc
int
sub
outsb
or
inc
push
add
mov
or
js
std
loope
lret
jno
dec
leave
or
fs
nop
popf
pop
or
sar
or
mov
hlt
enter
push
mov
arpl
mov
mov
aas
outsl
in
sbb
js
mov
xchg
pop
inc
cmpsl
xor
pop
loope
mov
pop
push
data16
dec
dec
sti
pop
js
hlt
call
mov
cmpl
test
xchg
sahf
jae
out
jno
cmpsb
clc
pop
cmpsb
xchg
bnd
inc
push
push
and
inc
jge
and
or
bound
adc
cmp
or
ret
enter
jp
jae
push
loope
sbb
inc
pop
xchg
sahf
iret
or
dec
cmp
lods
or
inc
outsb
and
daa
gs
dec
rcrb
lods
dec
or
mov
jmp
and
lret
mov
lods
jnp
lcall
les
gs
mov
cmp
mov
mov
pop
std
inc
hlt
xchg
ret
push
int3
in
dec
paddb
loopne
jbe
jb
xor
ds
outsl
push
xorl
hlt
pusha
jnp
mov
and
pop
or
mov
push
mov
scas
dec
cmpsl
cmp
hlt
icebp
das
in
arpl
cltd
lcall
stc
mov
pusha
lds
xor
cmc
loop
pop
pop
call
cs
fcomip
lds
adcl
xchg
mov
lret
jp
ds
sbb
repz
mov
rcrl
jecxz
cmp
mov
xchg
xchg
aam
jbe
jp
fidivs
pop
push
jnp
ss
leave
add
and
push
push
sbbl
mov
orb
shlb
cmp
jb
popf
rclb
add
sti
addb
aad
or
add
dec
lds
push
loopne
in
fdivr
sub
push
jmp
clc
pop
shll
mov
jp
jecxz
ds
jge
inc
jns
das
loop
addr16
dec
test
lds
sub
test
fsubrl
insl
fisubrs
inc
xchg
mov
mov
cwtl
cwtl
and
jmp
or
cli
addr16
addr16
jg
jne
mov
jle
into
and
push
or
out
mov
std
out
jne
sub
cli
cmc
imul
ret
adc
xchg
bound
cmpl
xchg
aaa
test
and
xchg
js
push
sub
adc
lods
loop
jge
and
push
xchg
push
pushf
ret
or
ret
mov
cld
out
sub
aad
addr16
mov
cltd
sub
or
outsb
bound
push
pusha
clc
ds
lods
dec
sbb
inc
ja
xchg
arpl
xor
jge
pop
das
inc
mov
fadds
add
mov
mov
cmc
pop
xor
push
mov
cld
add
push
mov
sub
cltd
les
xchg
ret
inc
inc
pop
cmp
sbb
aam
imul
cmpsb
shrb
push
dec
rcr
test
cmp
outsb
mov
out
or
cmc
mov
and
jl
lahf
repz
insl
sub
mov
lcall
dec
and
icebp
scas
lds
dec
aad
mov
fwait
test
test
xorl
lcall
les
cs
mov
call
push
pop
and
lret
sbb
mov
sub
mov
shll
or
mov
shrb
jns
rcll
or
push
out
icebp
mov
in
enter
ror
dec
stc
xchg
cmc
inc
xor
sbb
scas
pop
rcl
outsl
mov
imul
mov
movzwl
or
sub
nop
push
mov
mov
jecxz
pop
inc
test
rcrl
jle
movsb
loopne
xor
and
and
fcomps
cs
xchg
inc
mov
xor
aad
lods
shll
push
loopne
int3
xchg
lahf
in
arpl
and
loope
stos
pop
mov
mov
cld
stos
xor
fwait
jp
jmp
aad
in
sub
sub
add
mov
push
xor
sbb
loope
out
and
dec
sbb
cwtl
out
fwait
clc
clc
pop
sub
pop
cmpb
jns
and
ret
mov
iret
loopne,pt
arpl
in
lock
lods
jecxz
xchg
nop
push
daa
sbb
rcrl
xor
add
arpl
dec
add
jo
dec
jl
fmull
sub
cmp
int
sub
dec
je
xor
movsl
into
dec
lds
idivl
ret
dec
push
adc
cmp
inc
jp
lods
jmp
roll
mov
ljmp
loop
rcrb
pop
or
push
daa
inc
jae
add
aad
jle
cmpsb
push
mov
xchg
cmp
xchg
add
xorl
in
jmp
xor
dec
ficoms
scas
pop
lock
decl
or
inc
pop
mov
sahf
aad
mov
pop
pop
push
in
movsl
add
test
jp
repnz
or
inc
cli
sub
fwait
sbb
insl
loopew
mov
mov
jae
mov
lahf
xor
push
mov
pop
or
pop
mov
sub
pop
xchg
and
rcrb
sti
mov
jp
sbb
mov
or
shrl
lock
pop
push
mov
dec
xor
push
jl
stc
pop
stos
test
mov
mov
xchg
das
loopne
xor
or
imul
scas
inc
insl
aad
sub
movsl
mov
cmp
mov
xchg
mov
sub
divl
imul
sbb
in
bnd
jmp
adc
xchg
pop
xchg
push
popa
jbe
sub
jmp
in
jl
mov
in
test
jge
daa
pop
mov
xlat
push
jge
pop
ficompl
sbb
sbb
inc
sbb
push
xchg
dec
push
loop
pushf
test
fists
mov
pop
and
xchg
idivl
mov
mov
cmp
mov
cwtl
aam
mov
inc
push
cwtl
ja
dec
xchg
jae
iret
push
in
mov
lods
lods
cmp
inc
dec
add
push
sti
cmp
rcrb
cs
mov
pop
loopne
push
pushf
in
rolb
push
data16
and
lcall
movsl
mov
dec
add
arpl
xor
jp
push
jecxz
jmp
mov
mov
loopne
mov
adc
fiaddl
lahf
jno
or
loope
ss
sub
ds
pop
pusha
add
push
add
rorb
fldl
mov
pop
aaa
sub
sbb
lahf
fnstsw
or
pop
loopne
aaa
mov
mov
jo
and
mov
adc
mov
sub
push
into
push
aaa
outsl
pop
ficompl
pop
shrb
push
scas
sub
sbb
test
push
ficoms
xor
xchg
cli
ret
xlat
inc
aad
sbb
push
sbb
sbb
repz
jbe
sar
jns
ret
inc
add
insb
and
lea
imull
mov
mov
jmp
dec
outsl
jecxz
rcrl
cld
jns
xlat
pop
dec
movsl
shl
js
add
ffree
xor
fcmovb
jmp
inc
iret
aaa
jno
adc
insl
dec
mov
mov
loopne
jp
or
pop
dec
inc
inc
inc
and
push
xchg
flds
aam
outsl
sti
mov
fmuls
jns
pop
aas
pop
inc
jne
pusha
jbe
stos
sub
insb
and
mov
mov
pop
adc
push
cld
xor
and
mov
lods
jmp
sub
sahf
imul
sahf
or
xor
sub
sbb
roll
adc
mov
dec
jbe
mov
cmp
lret
or
inc
xchg
push
mov
mov
jmp
stos
pop
adc
nop
in
jno
mov
cmp
pop
dec
and
fucom
cmc
ds
sub
cltd
jp
iret
sub
lock
test
jmp
mov
mov
mov
outsb
test
inc
push
pop
imul
cmp
xchg
pop
mov
inc
mov
mov
aam
and
lds
js
add
aad
cmp
lods
pop
push
inc
mov
test
fisubl
sahf
lahf
gs
sbb
rcrb
mov
fmulp
adc
in
xchg
push
lret
push
xor
aaa
push
and
sub
or
je
stos
pop
outsl
xchg
loope
xchg
fistpl
push
cmpsl
or
lcall
fwait
movsb
loopne
push
cmp
mov
orl
mull
push
lods
sub
pop
arpl
mov
cmp
sbb
call
loopne
inc
inc
or
mov
adc
imul
xor
int3
adc
out
rclb
hlt
jge
mov
sbb
inc
push
xchg
mov
js
dec
add
jnp
ljmp
jno
sub
or
inc
enter
lea
shlb
nop
jl
push
mov
jne
mov
iret
fsub
stos
scas
add
add
cmpsl
fisubl
cmp
mov
jae
pusha
nop
lcall
ds
fsubrs
outsl
add
cld
xor
xor
lret
xchg
jmp
test
loopne
push
mov
adc
iret
repz
scas
dec
mov
dec
xchg
test
inc
fnsave
repz
cmpsl
inc
lret
hlt
cmpsb
in
adc
rclb
xor
loopne
ja
in
test
and
shrl
mov
cmp
add
or
int3
mov
fs
std
adc
lret
mov
loopne
jecxz
pop
push
xchg
movsl
push
call
pushf
outsb
mov
cli
push
adc
in
mov
push
push
dec
sbb
call
lret
cmpsl
pop
les
rorb
outsl
popf
jo
mov
test
cli
sbb
sahf
adc
sar
mov
and
jmp
xchg
sub
popa
jb
mov
clc
pop
fdivrl
xchg
pop
mov
fstpl
cmp
mov
push
into
loop
mov
popa
call
and
aaa
sbb
jmp
xchg
getsec
dec
mov
and
stc
xlat
out
mov
sbb
pop
mov
inc
movsl
cmp
mov
rcrl
jnp
insl
push
pop
or
mov
add
int3
dec
cmp
in
popf
jae
xchg
push
xlat
fwait
sub
dec
call
push
and
cwtl
scas
xor
ds
sub
jb
and
cwtl
jbe
jo
jae
jnp
mov
fstps
xchg
idivb
mov
or
fidivl
es
mov
jo
push
into
push
dec
sbb
xorl
jle
insl
fstpt
dec
fnstenv
pop
hlt
cs
xor
mov
xor
sbb
bound
stos
pop
fdivs
mov
inc
sahf
outsl
pop
stos
jmp
xchg
xchg
ljmp
mov
sbb
xor
fwait
and
cmp
out
xchg
loopne
ja
in
cmpb
mov
sub
ret
mov
test
loop
mov
outsb
mov
add
inc
andl
mov
xchg
les
jmp
mov
pushf
jmp
or
fisttpl
adc
sub
xchg
adc
xchg
out
push
cmpsb
add
mov
aaa
les
cwtl
js
pop
fistl
add
insl
in
nop
cs
xchg
fs
outsl
scas
out
add
addr16
lods
cmp
cs
jl
sahf
jge
xor
jle
test
adc
push
xchg
jb
dec
mov
test
cmc
sbb
sub
xor
push
mov
adc
sub
xchg
fbstp
inc
lret
mov
arpl
cmp
adc
mov
rol
mov
push
in
xchg
mov
cmpsl
or
push
fnsave
lret
or
sbb
jl
adc
out
sub
fcoml
idiv
lds
stc
insb
test
fmuls
imul
div
ret
sahf
or
jno
cmpsl
insl
sub
mov
pop
sub
insl
bound
addl
gs
ljmp
pushf
sbb
icebp
add
test
in
or
push
ret
sbb
cmc
cmpsb
scas
sarb
mov
insl
lahf
adcl
adc
xor
xchg
push
and
xchg
mov
inc
dec
fmull
shrl
hlt
sbb
test
xor
mov
inc
or
pop
testl
ja
ss
adc
lret
arpl
lock
xor
loopne
leave
daa
es
mov
pop
or
sbb
dec
cmc
xor
aas
xor
rclb
jns
xchg
dec
and
xor
or
xor
fcmovnb
sub
cmp
xlat
xchg
ss
mov
pop
xchg
jge
cld
testb
mov
add
push
orb
lods
into
xchg
shrb
adc
filds
andl
push
shlb
iret
mov
mov
inc
jp
sub
bound
xchg
sub
and
dec
outsb
sti
ljmp
mov
adc
pop
imul
daa
push
cmpxchg
testb
pop
sbb
push
xchg
lock
pop
cmp
cmp
mov
mov
fbld
repnz
push
into
sub
aam
pop
fidivrs
xchg
adc
pop
stc
inc
cmpb
xchg
repnz
lds
xchg
stos
mov
lods
in
dec
faddl
cmc
mov
cli
gs
ss
push
je
nop
sbb
insb
push
add
or
xor
add
add
leave
and
mov
nop
lret
jnp
out
pop
inc
jmp
push
fildl
aas
enter
add
ds
test
xchg
xchg
ljmp
cli
in
mov
cltd
pop
push
dec
xchg
lahf
cmpsl
sub
cmp
orl
pop
sbb
stc
dec
jge
pop
cwtl
inc
pause
dec
in
fdivs
push
fs
pop
daa
sti
loope
sub
sub
jecxz
movsl
mov
call
insl
jmp
add
int
loop
mov
out
not
dec
or
ds
test
ret
mov
jnp
into
es
push
fwait
mov
insl
jo
cmpsl
rorl
sbb
lods
test
mov
add
and
xor
ljmp
mov
xor
test
dec
sbb
add
test
mov
mov
mov
pop
test
and
dec
xchg
add
push
mov
shl
mov
imul
sbb
or
push
pusha
lret
xchg
mov
add
lahf
inc
lret
cmp
mov
inc
stos
ds
jl
sbb
xchg
mov
xor
cmp
sbb
inc
iret
dec
sbb
push
inc
shlb
js
daa
jl
pop
inc
fsub
sub
cmc
adc
sub
flds
sahf
aaa
in
push
push
loopne
and
or
sub
adc
add
cmp
rcl
sub
outsb
imul
pop
jo
mov
mov
mov
ja
jmp
std
test
int
bound
movsl
negb
loope
jp
scas
sahf
push
adc
push
leave
repnz
and
push
adc
pop
adc
fistpll
je
xchg
cmpsl
jne
pop
das
call
clc
xor
pop
sbb
sbb
xchg
cmp
js
lea
push
imul
js
fisttpll
movsb
jb
cmp
dec
pop
lea
in
cs
cmp
mov
push
mov
ret
fsts
aam
daa
sub
and
xchg
fmulp
mov
sub
push
mov
fldenv
fiaddl
fdivl
shl
es
pop
lcall
or
lea
xor
push
and
sbb
inc
gs
out
mov
in
scas
movsl
lods
les
arpl
jle
add
loop
add
cld
out
push
push
sbb
blcs
ljmp
xchg
cld
cmp
aas
push
cmpl
inc
inc
movsb
in
dec
scas
cmpb
rclb
push
into
rdpmc
ret
mov
rclb
mov
dec
xor
cmpsb
popf
and
pop
stos
pop
mov
iret
stos
cli
ja
cli
dec
ja
sahf
jns
lock
sub
push
jne
lahf
icebp
ja
push
cli
nop
pop
inc
nop
in
in
lock
push
fimuls
xor
jle
push
inc
xor
sub
mov
dec
cmp
pop
or
pushf
and
ret
xchg
inc
adc
or
and
fistps
sub
add
arpl
ja
outsl
xchg
push
out
mov
dec
aaa
mov
push
sbb
xchg
add
ror
adc
push
sub
xchg
jp
cwtl
inc
fwait
cli
cmp
ss
cmpsb
rorl
sar
imul
in
int3
mulb
icebp
add
pop
or
cmpsb
iret
das
clc
popf
push
cmpl
mov
pop
test
push
pusha
outsl
test
popf
mov
xor
push
aam
fistpll
sahf
in
push
cmp
scas
push
sarl
xchg
xchg
add
cli
les
rol
shll
pop
pop
dec
adc
dec
aaa
xor
cmp
mov
sti
push
push
jb
add
stc
cmp
mov
push
ficompl
and
dec
dec
jne
popf
add
dec
add
loopne
sub
fwait
or
roll
pop
inc
shr
cmpsb
or
and
mov
push
cmp
stos
push
inc
jnp
xchg
dec
mov
aaa
pop
test
iret
pop
jl
fldt
dec
ljmp
push
push
mov
ja
rclb
dec
push
fwait
ret
lcall
push
mov
adc
jl
sahf
loopne
pop
dec
test
adc
add
loop
sbb
subb
inc
xchg
data16
in
xchg
add
mov
es
lock
jb
into
mov
xor
xchg
scas
xor
and
pop
xchg
ret
cli
sub
dec
or
aad
mov
cmp
lods
ficomps
add
inc
loop
sarb
lahf
dec
mov
cmp
dec
shll
testl
cltd
pushf
std
pop
fcoms
icebp
inc
mov
inc
push
xlat
into
add
lds
sahf
ret
jnp
jmp
sahf
dec
insb
repz
xchg
out
mov
sbbl
or
loop
mov
mov
js
clc
out
stos
mov
adcl
dec
rol
mov
in
stc
aas
jle
cmp
jecxz
pop
sbb
icebp
outsl
fldt
int3
or
insl
pop
mov
xor
inc
jle
lods
arpl
pop
clc
setns
outsl
cmp
inc
inc
lods
stos
jno
cmp
call
or
cltd
adc
and
xchg
pop
pusha
add
add
out
add
or
mov
xchg
outsb
int
pop
fnstenv
sbb
imull
and
repz
adc
jns
pop
push
notb
sub
mov
mov
mov
mov
jne
jmp
test
repz
jnp
leave
insb
icebp
cmp
mov
push
ret
negb
cld
or
mov
repnz
mov
jl
and
popf
jmp
daa
xchg
sar
dec
fisubs
popf
into
jbe
jle
inc
pop
inc
lock
in
inc
push
sbb
adc
lock
stc
ret
pop
pop
xor
and
stos
test
loopne
or
clc
lret
nop
aam
subb
mov
dec
adc
push
add
pushf
adc
in
into
adc
adc
aam
repnz
repz
out
add
test
push
cwtl
gs
xchg
int
inc
clc
movsl
sub
sub
stc
xchg
push
adc
add
sarb
and
rorl
mov
repz
sbb
push
cmc
push
inc
and
mov
fsubl
xor
sti
popa
inc
inc
pop
out
shrb
jo
jp
and
adc
std
pushf
or
adc
dec
mov
cli
scas
jmp
es
jmp
cmp
popa
lds
jbe
lods
cmpsb
sub
sub
int3
adc
mov
push
or
fsubs
xchg
or
pop
out
xor
cmp
jge
xchg
ja
subb
sub
jecxz
xor
mov
jb
test
faddl
aas
push
imul
sub
scas
ss
fsubrs
repnz
les
pop
dec
sub
scas
imul
addr16
pop
loop
movsb
dec
loopne
and
add
insl
icebp
fs
enter
dec
dec
add
jle
adc
insb
xor
je
jmp
inc
or
testl
mov
inc
cmc
pushf
test
add
xchg
or
les
outsl
stc
mov
add
inc
ret
mov
xchg
sarb
loope
sti
rorb
in
and
fldcw
xor
push
dec
pop
lret
popa
dec
jno
inc
push
push
cmpb
rcrb
jmp
xchg
enter
xchg
or
dec
inc
xor
fs
sbb
ss
popa
adc
dec
mov
jp
lods
cmpsl
mov
xor
pushf
int3
lea
add
mov
cld
mov
jg
or
inc
or
and
xor
xor
out
bnd
ret
fisttps
xchg
rcl
sar
enter
jae
pusha
scas
cmc
push
mov
push
pop
dec
fadd
ret
mov
mov
cmp
fincstp
aaa
cld
or
fisttps
and
dec
mov
add
pop
adc
mulb
mov
cli
aaa
ja
iret
das
in
outsb
jecxz
cmp
aas
das
pop
pusha
pop
xchg
int
aas
or
insb
enter
mov
cli
jnp
adc
or
jns
dec
inc
lahf
adc
loope
popa
popa
mov
xor
outsb
add
pushf
fsubs
ret
add
jno
test
scas
rorl
lret
and
xor
aas
push
add
into
jmp
xchg
jne
scas
cmp
and
paddsb
or
lahf
lods
arpl
sbb
cli
inc
xlat
push
mov
les
adc
sahf
std
out
jg
pop
xlat
ret
into
dec
in
pop
dec
dec
sub
or
cs
repnz
std
push
adc
call
dec
jmp
aad
faddl
popf
ss
push
ret
jns
fidivrl
dec
lret
into
and
add
pop
repnz
int3
sbb
push
lret
mov
jecxz
push
mov
pop
out
shl
rclb
cli
sbb
stos
mov
push
ds
adc
cmp
sarb
cld
cltd
cmpb
fs
lods
faddl
jnp
cmp
adc
sbb
sbb
mov
xchg
xor
jecxz
mov
jae
out
push
cmp
push
lahf
jmp
insl
jnp
jns
push
sub
jnp
adc
imul
mov
scas
ret
xor
sub
ficompl
out
add
sub
xor
adc
das
mov
sub
push
jne
call
sub
pop
pop
or
xor
inc
mov
jbe
insb
orl
push
cmp
aad
aaa
mov
and
sahf
lods
ja
add
cmp
cs
jbe
push
pop
or
push
xor
mov
lahf
cmp
out
xchg
xlat
fsubrs
ficoms
mov
repz
addr16
push
repnz
xchg
adc
add
pop
inc
adc
negb
stc
mov
test
sub
popf
lods
inc
sbb
inc
add
mov
mov
popa
push
test
loop
push
rcr
icebp
cmpsb
inc
inc
dec
and
pop
sbb
test
and
ja
orb
jle
pop
jl
sub
in
xchg
test
lcall
mov
jg
scas
mov
subb
std
push
fsubrp
pop
push
mov
mov
xlat
pop
mov
scas
add
andl
es
mov
push
sbb
js
jne
jno,pn
arpl
pop
lea
lea
mov
lods
add
ds
jno
aas
pop
fisubs
sbb
hlt
lret
lret
movsb
test
pop
call
enter
xlat
and
mov
fidivrs
pop
nop
test
mov
fldcw
sti
mov
jne
adcl
inc
xchg
fwait
enter
sahf
lods
sub
xchg
xor
roll
lret
fstpl
stos
mov
std
lds
fmuls
imul
mov
cmp
lea
int3
sbb
fs
and
loope
xchg
das
fidivrl
ret
in
xchg
xlat
clc
inc
xor
fincstp
out
movsb
imulb
testb
mov
test
ss
sub
daa
in
lret
mov
js
pop
sub
imull
lods
add
cmc
xlat
mov
out
aad
out
popa
mov
sub
or
ret
rcr
lods
je
cmp
flds
sti
loop
jno
inc
xchg
mov
pop
xchg
xchg
data16
gs
dec
cmp
in
test
hlt
pusha
or
outsl
insb
pop
pop
sub
or
outsb
mov
lods
or
mov
xchg
and
jmp
mov
ja
jb
push
fdivrp
push
cmp
das
mov
jge
scas
fbld
dec
shr
jmp
xlat
add
test
push
add
cli
cmpsl
add
andl
out
pop
cmp
inc
pop
jae
add
inc
mov
insl
jo
jnp
pop
inc
xchg
insl
divl
repz
dec
push
xor
cmp
in
bsf
fbstp
ss
gs
stc
es
into
cmp
mov
pop
jecxz
nop
fwait
mov
xchg
xor
sub
stos
popf
cld
sbb
fstpl
leave
shrl
lock
push
or
add
test
out
add
pop
xchg
pop
add
scas
jl
mov
insl
jnp
dec
dec
movb
rcrb
out
mov
and
repz
call
inc
bound
mov
fisttps
or
stos
lret
int
enter
in
in
int3
adc
mov
push
pushf
out
out
sbb
sub
push
cmpsl
sub
int
lods
scas
push
mov
sti
stc
mov
mov
push
adc
adc
mulb
jae
mov
jne
stos
adc
inc
clc
adc
fwait
pop
push
adc
jg
inc
inc
mov
out
aad
movsl
pushf
in
mov
out
rcl
in
fdiv
xchg
xor
aad
jg
xchg
fisttpl
ljmp
jo
mov
xchg
int3
or
out
gs
sub
bound
int
scas
push
fs
pop
mov
lock
adc
mov
iret
sbb
add
sbb
cwtl
and
xchg
and
ret
add
repz
inc
aad
mov
xchg
mov
jo
imul
stos
int
push
pop
push
stos
nop
mov
jb
lcall
mov
data16
or
lock
push
js
jnp
push
roll
jl
in
xor
jl
cmpsl
ror
push
bound
icebp
adc
xchg
jno
sti
sbbl
xchg
mov
inc
push
mov
add
push
jae
int
fldt
jg
sub
sbb
ljmp
into
xor
dec
adc
jnp
xchg
outsb
and
add
and
sbb
push
push
mov
ret
out
push
adc
lock
in
cmpsl
dec
movsb
jns
mov
pop
mov
std
push
lds
mov
push
mov
and
or
in
xlat
aam
cmp
test
cmp
xor
mov
xor
shlb
shlb
in
loop
loopne
cmpsb
jge
nop
and
xchg
xchg
dec
mov
imul
pop
icebp
in
fimuls
mov
mov
or
inc
mov
jne
lea
push
out
cmpsl
lret
or
mov
or
out
sub
jmp
xchg
cld
movsb
mov
cmp
jne
cmp
lret
fwait
enter
xchg
mov
arpl
inc
cmc
or
divb
inc
cld
mov
lcall
movsb
push
push
and
or
xchg
ljmp
ficoms
mov
mov
pop
add
aam
jbe
mov
mov
int3
popf
mov
push
mov
iret
mov
push
xorb
push
fidivrs
clc
nop
leave
das
divb
xor
mov
addl
mov
jns
fstps
mov
fisubs
imul
adc
call
lock
push
push
loopne
cmp
xor
lret
adc
jae
xlat
mov
mov
xor
mov
test
lret
mov
xor
sub
pop
push
lea
inc
incb
fbstp
in
mov
inc
loop
int3
cmp
out
cmp
mov
not
pop
insl
data16
sbb
or
cwtl
jbe
cltd
cmp
movsb
scas
push
jg
shlb
jnp
mov
jecxz
cmpsb
add
and
jne
enter
fiadds
lret
sbb
dec
jns
push
fldl
cld
cmp
mov
xor
ds
addr16
repnz
mov
mov
mov
popa
or
sub
xchg
push
xchg
xor
cmpsb
sti
ficomps
out
sbb
ds
inc
sbb
pop
rorl
cmp
mov
jb
inc
int
mov
jle
out
jno
push
imul
sub
stc
push
and
push
lret
insb
cmp
les
lds
jb
pop
aaa
leave
aaa
and
mov
pushf
cmc
or
cmc
gs
iret
loopne
insl
lahf
and
data16
cmp
fisttps
jmp
in
ror
ret
or
cmc
call
fs
jge
cs
pusha
jae
or
mov
push
aas
ret
out
dec
jmp
or
fldenv
fidivrs
sub
pop
sub
fisubl
das
xchg
xlat
xchg
mov
ret
jns
push
sub
sub
mov
mov
fwait
lock
test
and
dec
outsb
xchg
stc
outsl
mov
mov
or
rol
loopne
orl
std
xor
jmp
sete
sbb
mov
cld
mov
xor
pop
jecxz
std
fistpll
sub
push
add
mov
insl
dec
mov
pusha
setne
fildl
test
ljmp
lret
loopne
xchg
dec
je
pop
ja
in
lock
cld
lods
xor
dec
dec
or
dec
cwtl
out
loope
pushf
mov
rcrb
xor
sbb
sahf
mov
scas
dec
das
in
aaa
notl
sub
fnstenv
outsb
dec
mov
nop
aaa
pop
in
ret
xchg
mov
inc
push
add
sahf
bound
cmp
icebp
and
cmp
and
and
test
add
js
pop
inc
push
insl
sub
xchg
mov
add
adc
pop
or
mov
lcall
js
jne
and
cmpsb
js
cmpsl
es
dec
push
dec
sub
mov
lahf
movsl
pop
inc
fcomi
inc
ja
xchg
call
inc
enter
cld
inc
cld
je
mov
inc
cld
ja
mov
fidivl
lret
mov
add
fsubrl
mov
cmpsl
add
iret
ret
jle
les
imulb
ja
fsubs
popa
push
dec
ljmp
aas
mov
or
dec
cmp
xchg
inc
in
push
outsb
sbb
inc
dec
sbb
adc
pop
divb
push
mov
sub
inc
add
jp
add
inc
addr16
inc
repz
lock
test
out
xchg
pop
inc
push
push
or
les
in
out
fwait
jecxz
or
mov
pop
movsb
adc
inc
mov
jmp
movsb
xor
xor
lcall
cmpsl
adc
sahf
mov
inc
outsl
or
jmp
imul
pop
insb
out
mov
xchg
push
pop
jmp
pop
adc
aaa
daa
push
inc
popa
xor
addr16
test
js
insb
movl
dec
mov
mov
mov
dec
inc
push
loop
dec
data16
sub
and
loopne
cmpb
add
das
lea
std
sub
push
or
stos
cmp
shr
push
cs
jnp
lods
jmp
jb
jno
push
add
mov
mov
adc
imul
rolb
clc
scas
movsl
xchg
pop
xchg
fistpl
ja
in
enter
mov
outsl
add
in
sbb
pop
mov
add
orl
jb
adc
test
adc
shlb
fisttpl
xor
ret
pop
and
xchg
sete
cmp
mov
xchg
jbe
addr16
rol
or
lods
mov
lcall
add
pusha
sbb
fstps
jmp
mov
add
out
jmp
loop
sub
lods
ficompl
jecxz
dec
sbb
mov
xchg
xchg
xor
dec
scas
int
inc
cmp
sbb
imul
add
cli
cmp
xchg
out
scas
in
lret
xor
out
in
lods
ss
xchg
fidivrl
stos
into
sete
lret
sbb
test
scas
lahf
nop
sbb
mov
lahf
or
mov
push
in
ja
dec
xor
outsl
dec
mov
xor
outsl
adc
sub
mov
scas
mov
sbb
sub
sbb
repnz
dec
aas
insb
and
iret
hlt
insl
adc
xchg
hlt
dec
adc
ljmp
mov
push
jmp
push
in
pop
jmp
jbe
mov
xor
hlt
lcall
mov
xlat
iret
dec
fisubrl
cwtl
pop
je
pop
stos
outsb
jne
es
push
stc
loop
mov
addb
out
sub
clc
push
push
push
dec
push
push
mov
fcmovu
rcl
in
mov
mov
push
jno
cmpsl
and
add
aad
fmulp
cmp
nop
popa
dec
cli
and
cmpsb
cmp
lcall
xchg
pop
jb
fs
mov
loope
push
sbb
dec
xchg
sbb
adc
negl
aad
int3
jae
xchg
push
nop
lret
fiadds
mov
jae
rol
fiadds
mov
bnd
mov
jecxz
movsb
or
sbb
int3
aas
jne
lret
or
lds
cmp
shl
and
fildll
out
and
inc
das
pop
movl
jmp
ret
and
stc
imul
push
in
pusha
ds
jl
les
cmp
sahf
or
dec
mov
in
lea
into
scas
mov
insl
ds
add
pop
aad
test
mov
insb
les
rorl
dec
lcall
dec
or
int
cmp
or
inc
and
movsl
sti
loopne
mull
gs
cmp
cmp
sub
xor
push
push
outsl
mov
adc
stc
or
ret
xchg
sbb
je
icebp
popa
xchg
stos
in
jl
shrl
les
inc
dec
lods
andb
arpl
in
push
inc
pop
out
pop
fcmovnbe
xor
sbb
mov
sub
fdivr
gs
push
cmp
fsubp
testb
cs
imul
out
repz
addr16
inc
xchg
fwait
lcall
stc
xchg
pop
test
daa
xlat
mov
idivb
mov
out
sbb
cltd
stc
pop
cmp
int3
cmp
xor
inc
cli
mov
add
and
pop
add
mov
xor
ret
cltd
hlt
and
jbe
adc
sbb
sbb
loop
call
or
xor
std
pop
dec
adc
sub
push
push
test
repz
rcrl
and
add
push
sub
jns
addl
mov
fmulp
fistpl
cmpsb
push
xchg
lods
icebp
xor
andb
jp
mov
mov
jbe
cli
pop
inc
sbb
sbb
xorl
mov
inc
push
xor
push
fstl
mov
push
jnp
ljmp
int3
jns
mov
sub
jg
mov
stos
adc
push
sub
roll
adc
popa
jmp
in
cwtl
cmp
dec
or
sbb
popa
sbb
repz
mov
xchg
mov
clc
and
and
push
xor
shll
repnz
cmp
into
sarb
sbb
jmp
jg
push
cmp
mov
scas
lock
and
mov
sahf
push
icebp
mov
into
mov
outsl
insb
fwait
mov
and
jo
sbb
cmp
out
jl
cmpl
pusha
jmp
and
dec
cmp
ficoml
xor
or
lret
popa
sarb
out
dec
imul
sub
int3
lods
mov
addr16
sti
adc
jg
mov
daa
fldenv
pusha
mov
mov
addr16
mov
inc
stc
inc
inc
lcall
lahf
mov
shrb
jp
js
ficoms
ljmp
push
addb
mov
adc
inc
sbb
cmp
sbb
fcom
test
fisubrl
fdivr
xchg
pop
pushf
scas
mov
daa
das
push
xchg
add
fsts
aas
push
bound
add
sub
cld
push
scas
sub
ds
mov
inc
imul
fyl2x
inc
imulb
or
and
out
scas
mov
es
xor
mov
push
and
jle
and
cli
xor
adc
xor
or
inc
adc
jo
call
mov
cmp
dec
lret
push
mov
test
enter
mov
int
pushf
in
lea
xchg
jle
pop
clc
adc
mov
fwait
pop
mov
mov
pusha
out
pop
bound
jo
inc
movsl
push
adc
push
dec
fadds
cld
bound
mov
cmc
cltd
sbb
sbb
jle
add
inc
ret
dec
or
push
mov
sub
ss
fsubs
inc
ljmp
add
inc
ret
hlt
or
ds
stos
add
push
movsb
frstor
sub
fwait
scas
aas
xchg
or
mov
add
jmp
xor
inc
int
cmc
jle
in
loop
std
mov
ss
rorb
mov
mov
and
cmp
jle
repz
inc
ret
or
xor
mov
ret
mov
inc
jg
sbb
fwait
xchg
cmp
sbb
inc
cwtl
pusha
mov
mov
mov
arpl
xor
adc
je
fisubl
mov
and
aam
xor
insl
stos
int3
dec
add
xor
cmp
mov
and
repnz
xor
or
aam
sarb
scas
push
or
stos
cli
push
inc
mov
jp
fiaddl
imul
cmp
in
decb
lods
imul
sub
fwait
mov
lea
or
cmpsb
sub
sub
rolb
out
pop
es
lods
rcrl
ja
in
daa
and
jbe
jmp
inc
insl
sbb
fsub
pusha
stos
arpl
repz
cmp
mov
jg
xor
ret
test
xchg
pop
mov
xchg
into
cmp
mov
pushf
jp
ret
jmp
in
arpl
hlt
aas
popa
out
sbb
lock
fcoms
or
clc
pushf
imul
int
jb
xchg
stos
loopne
into
mov
movsb
jl
sub
les
and
xlat
test
ja
add
pop
xchg
js
clc
fwait
jg
rorb
insb
xorl
inc
int
bound
stc
jp
rcrb
lods
or
imul
lea
xchg
adc
js
mov
iret
imul
fisttps
mov
add
xchg
and
fcompl
das
stos
xchg
movsb
cmpsb
fimuls
push
cmp
xchg
das
sub
jg
mov
mov
dec
leave
xchg
cld
mov
cmp
cmovae
push
leave
mov
inc
lock
sti
push
leave
dec
rcrl
jae
or
ja
dec
insb
fiaddl
xor
pusha
fwait
popl
mov
pop
out
inc
push
pushf
dec
cmpsl
enter
lock
mov
inc
mov
pop
idivb
jo
jg
mov
or
push
cmp
stos
pop
sbb
push
test
sub
fstpl
jb
jns
jmp
jl
jno
xchg
ljmp
cld
fiaddl
stc
pop
sbb
add
call
push
and
dec
scas
xchg
insb
jbe
xchg
mov
aad
or
or
out
cmc
aam
adc
adc
mov
ficomps
cmp
pop
out
pop
and
add
lea
iret
xor
mov
pop
aam
fs
xor
inc
pop
mov
inc
aaa
mov
repnz
add
jb
adc
fdivs
sarl
mov
mov
shrb
cwtl
xchg
cmpsl
les
add
imul
cmpsb
gs
out
dec
stos
pop
xor
jo
xor
ds
jne
test
mov
mov
in
push
fists
idivb
mov
ja
and
jl
in
and
lock
minps
fs
sarb
fistpl
pop
jg
fimuls
insl
bnd
xor
std
pop
push
movsb
jo
cmp
into
fbstp
mov
adc
sub
xor
loope
mov
jg
xchg
clc
xchg
aaa
jmp
icebp
mov
mov
popf
inc
inc
lea
xchg
mov
and
testl
mov
dec
shrb
fisubs
lods
ret
add
sub
in
fcmovnu
mov
gs
push
jne
mov
cmpsb
lcall
imulb
test
sub
adc
push
xchg
or
mov
inc
pop
orb
mov
sahf
mov
dec
cmp
xor
test
inc
mov
jg
jae
shl
lods
inc
aam
movsl
shr
data16
incl
repz
xor
cmpsb
push
call
movaps
scas
mov
ffreep
insb
sbb
and
xor
or
pop
lea
dec
jp
aam
mov
out
or
pop
jmp
in
sub
in
je
aad
scas
lcall
test
mov
outsb
or
mov
cmpsl
sahf
movsb
pushf
clc
rcrb
jl
lods
jmp
jle
jbe
lock
adcb
out
dec
adc
in
mov
out
xor
sbb
sbb
and
lds
js
mov
or
inc
cmp
jecxz
lods
and
in
dec
xor
sub
jmp
ret
jns
inc
stc
subl
fsts
and
jb
cli
les
inc
std
ret
push
ja
fadds
and
test
mov
pop
pop
lock
dec
dec
pop
push
adc
sbb
je
mov
jmp
or
fcomps
in
dec
xchg
push
ss
and
mov
outsb
xor
imulb
scas
test
pop
out
leave
mov
mov
ret
jb
mov
sarl
invd
jg
jmp
aaa
mov
pushf
mov
mov
mov
das
inc
or
pop
mov
aam
mov
cmp
adc
pop
in
inc
mov
fwait
std
and
pop
or
push
jae
add
cmp
sub
cmp
jnp
cmp
fisttpl
cmp
xlat
iret
add
or
hlt
inc
cmp
adc
cmc
shr
push
lds
rsm
xor
mov
mov
dec
mov
imul
push
clc
in
aaa
test
loop
insl
pop
incb
divl
lods
jb
xchg
pop
mov
pop
inc
popa
sub
aad
jae
push
outsl
xchg
xchg
mov
lret
addb
iret
xchg
sub
popa
mov
test
fbld
sub
cmp
mov
jmp
push
jg
or
je
iret
sahf
rcrl
insb
outsb
lahf
mov
lahf
fs
bound
ljmp
das
loop
test
xchg
inc
adc
sbb
fsubrp
and
inc
cltd
adc
jo
in
or
outsl
fcmovu
fnstenv
push
test
test
adc
xchg
test
mov
inc
shll
push
pusha
hlt
cltd
mov
stos
push
lods
pop
dec
lea
not
test
or
dec
add
adc
cld
dec
imulb
xorb
into
sbb
push
jecxz
sub
lods
dec
cld
popf
xchg
lods
xor
je
or
mov
add
ret
push
enter
ret
add
popa
mov
cmp
add
fidivs
pop
xor
movsl
shlb
fwait
push
scas
sub
jno
xlat
adc
lods
pop
sub
iret
push
pushf
loopne
inc
dec
cmp
dec
push
lea
xor
jle
or
sbb
repz
mov
std
bnd
lret
insb
sbb
jo
sbb
out
inc
ljmp
and
subl
pop
cmp
movsb
fs
lock
sub
push
jo
mov
push
stc
xchg
jge
mov
dec
cmc
push
addb
je
cli
or
xor
and
jns
and
ror
add
xlat
les
adc
shlb
mov
enter
xchg
sbb
xor
pop
addl
pop
popa
jae
in
je
mov
push
mov
sub
popf
fucomip
push
inc
lret
mov
cltd
fstp
outsb
pop
paddusb
nop
aas
cmpsb
push
fistps
mov
sub
arpl
mov
sbb
pop
sbb
stos
popl
out
int
pusha
jno
dec
sub
in
jge
xor
add
call
popf
xchg
xchg
bswap
xlat
repnz
pop
les
aas
cmp
sub
fs
inc
pop
iret
pop
jl
sub
lock
insl
dec
mul
mov
xor
pushf
and
pushf
push
stos
inc
mov
sub
adc
jbe
push
mov
inc
xor
push
lods
pop
icebp
pop
xchg
gs
dec
fmull
fcompl
cli
dec
cmpsb
pop
dec
aaa
or
enter
jno
mov
inc
enter
lahf
dec
mov
xor
and
and
popf
inc
pop
mov
dec
leave
pop
mov
fdivrp
aad
cmc
fstps
ds
jnp
rcrb
testl
lar
pushf
int3
out
lret
pop
dec
xchg
scas
movsb
test
or
jecxz
inc
push
dec
xchg
jae
mov
sbb
sbb
add
dec
adc
ret
inc
dec
loopne
loopne
sti
bnd
sub
cmp
cmp
dec
fdivrp
fnstcw
bound
and
sbb
aaa
popf
add
lds
and
cmp
dec
lea
aam
dec
add
add
incl
in
push
mov
in
push
xor
cltd
fisttps
xchg
mov
inc
fcomip
jg
enter
mov
outsb
loope
adc
jo
pslld
pop
inc
lcall
orl
and
add
or
inc
add
bound
lea
push
jge
aam
shlb
dec
push
fs
inc
icebp
inc
xor
mov
bound
push
pop
mov
or
mov
add
subl
xchg
jle
mov
push
lock
lods
xchg
outsb
in
aad
add
movsl
sub
or
xor
in
imul
pushl
cli
pusha
and
xchg
jmp
movsb
mov
xchg
mov
push
mov
cli
outsb
enter
out
jge
sar
pop
push
loope
stos
inc
scas
jne
push
inc
sub
xchg
pop
mov
pop
lods
mov
in
adc
sbb
or
js
fsubl
fwait
adc
xorb
sbb
lret
inc
std
test
insl
cwtl
arpl
push
lods
test
jge
or
shlb
or
jb
pop
sbb
sbb
push
enter
pop
pop
dec
mov
shrl
repz
mov
js
mov
lahf
in
ret
sbb
xor
sbb
xchg
in
push
dec
out
sbb
mov
sahf
and
in
rcl
inc
hlt
bound
int
or
int
stos
sarb
sub
mov
mov
cmpsl
mov
and
sub
lret
roll
xor
dec
or
or
rcrl
mov
pop
gs
jnp
movsb
enter
mov
mov
lds
pop
add
push
or
pop
jmp
popf
inc
pop
je
data16
and
lret
ret
std
mov
ret
jmp
xchg
push
sbbl
pop
mov
stos
ret
les
sti
pop
mov
sub
lret
add
xchg
adc
mov
andl
xlat
pop
push
and
push
cmpsl
dec
sahf
jns
xchg
push
insb
jmp
inc
aad
movsl
mov
movsb
mov
loopne
repnz
jns
cmc
pop
and
popa
xor
icebp
pop
ret
arpl
out
add
push
cmc
jnp
les
mov
fistl
and
rorb
xorb
pop
jle,pn
inc
adc
flds
into
inc
pop
popf
or
xchg
pop
inc
push
in
sub
adc
adc
cld
movb
xlat
push
arpl
in
sub
mov
pop
dec
push
jmp
dec
dec
push
and
xchg
push
roll
ror
addb
mov
mov
cmpxchg
push
cmp
xor
lcall
fcomps
jno
ficoml
xor
pop
mov
or
fstps
stos
hlt
andl
ljmp
aad
fldl
xor
mov
js
icebp
xchg
stc
xchg
pop
ss
mov
and
out
int3
imulb
cmpsl
sub
sahf
test
push
pop
jp
sub
mov
adc
sbbl
adc
dec
jp
int
sbb
mov
lds
adcb
xchg
cmp
push
inc
jns
cmp
stc
cmpsb
cmp
jecxz
mov
pop
out
fcoml
hlt
adc
push
mov
insl
jg
push
ljmp
lods
faddl
xor
inc
in
out
mov
dec
mov
out
enter
sub
out
xor
fwait
ljmp
dec
int3
add
or
pop
scas
les
fistps
or
xchg
cs
imul
stc
ds
xor
and
add
lcall
fistpll
sbb
inc
push
lods
sub
jmp
sbb
adc
and
push
subb
cmp
mov
popf
mov
fldenv
clc
leave
stc
pop
sub
sbb
dec
dec
lds
test
jb
jno
cmp
jg
bound
test
insb
scas
push
and
sbb
fcoml
sub
lea
popa
out
jl
sar
lret
fldl2t
ss
lret
dec
xchg
or
stc
mov
adc
inc
pop
jb
call
das
inc
lods
out
xchg
mov
inc
inc
les
or
xchg
repnz
and
xchg
repnz
in
inc
pop
fwait
sub
push
scas
xlat
nop
mov
sub
les
and
mov
xor
sub
inc
inc
sbb
and
and
pop
neg
movb
jno
xor
sub
jg
test
nop
push
cmp
cs
sbb
popa
mov
or
mov
jne
sub
sub
jnp
jl
icebp
mov
sarl
xchg
xor
mov
nop
icebp
pop
out
icebp
sbb
leave
and
out
xchg
xchg
push
xchg
jmp
rcll
mov
cwtl
rcrl
mov
and
dec
div
js
cmp
add
cld
mov
pushf
mov
rorl
xchg
fldenv
aad
lock
in
addr16
push
mov
xchg
notb
add
xchg
inc
cmp
xor
mov
cli
dec
push
jmp
cli
mov
imul
lret
or
lcall
outsl
ds
mov
ret
mov
mov
add
pop
cmpsl
mov
cli
sub
push
and
fadd
jl
je
enter
loopne
xchg
cs
mov
mov
lds
test
cld
repz
pusha
out
js
sbb
mov
inc
imul
inc
push
popa
out
gs
mov
fmul
mov
lock
or
mov
mov
mov
test
ret
ret
aaa
inc
daa
aas
add
xchg
stos
fistpl
xchg
jg
sbb
movsl
and
xor
jbe
dec
pop
dec
fisttpl
mov
int
hlt
jns
sti
shll
or
jle
jns
imulb
outsl
std
test
jnp
mov
or
add
sbb
in
push
pop
push
cli
arpl
aam
cmp
icebp
scas
rcll
xor
add
push
addl
mov
outsb
xor
sub
mov
push
loopne
into
mov
bound
cs
mov
clc
xor
lds
dec
jg
xchg
popf
movsl
pop
push
jbe
daa
dec
stc
fldl
sbb
and
xchg
cmp
mov
test
icebp
pop
jbe
cmp
insb
std
in
ss
mov
push
jbe
and
divb
dec
jns
xlat
mov
sbb
test
aad
adc
lcall
cld
movsl
mov
mov
mov
mov
xchg
and
mov
xor
cmp
dec
scas
aaa
iret
and
sahf
add
rolb
incb
pop
add
xor
fildll
pop
repz
inc
imul
push
cbtw
lods
imul
test
bound
and
cmpb
jp
repz
mov
in
sbb
shr
xchg
pop
ret
and
jo
in
push
jle
shlb
daa
nop
xchg
dec
adc
or
dec
jmp
add
or
loope
mov
jns
loope
add
faddl
je
or
jae
add
push
leave
sub
xor
mov
cmpsl
gs
mov
lods
adc
call
nop
stc
mov
dec
arpl
push
inc
adc
xor
adc
leave
mov
mov
loope
mov
mov
popf
cli
mov
mov
adc
pop
gs
inc
jnp
mov
fimull
inc
loopne
ret
test
pushl
mov
pop
je
dec
adc
adc
jnp,pt
lods
mov
and
imul
lea
jno
aad
xor
dec
or
clc
sub
inc
aad
jae
sub
or
push
in
in
mov
test
xchg
mov
sahf
and
cmp
push
sbb
cmp
sahf
jbe
aad
jl
mov
adc
pop
stos
mov
push
adc
aam
dec
das
ret
mov
sub
adc
cli
hlt
icebp
iret
push
jae
fld
adc
filds
mov
pop
aam
pop
ret
sahf
fistps
cmp
mov
adcl
aam
cmpl
popa
or
out
mov
inc
lret
push
push
leave
push
hlt
sbb
adc
jae
rorl
ret
lahf
xlat
push
addb
es
js
push
fwait
sub
aam
bound
fisttpll
cmp
sub
push
lock
sub
sub
addb
inc
xlat
js
les
xchg
loope
cs
sub
cld
cltd
cmp
mov
xor
cmp
dec
and
or
or
inc
mov
or
pushf
imul
mov
push
mov
adc
push
sti
mov
sub
mov
mov
js
sbb
out
fsubr
js
cli
addr16
pop
xchg
aas
pop
or
outsb
pop
sub
and
jno
mov
shrl
xor
xor
mov
cmp
lea
hlt
arpl
xor
sbb
repnz
lock
add
mov
mov
test
add
add
frstor
mov
jmp
inc
dec
sahf
xlat
lods
sub
mov
sbb
dec
mov
shlb
adc
jae
xchg
jb
lea
es
mov
in
push
adc
mov
lret
ds
hlt
mov
push
leave
mov
fdivs
mov
or
rolb
mov
popf
fsts
imul
call
stos
xor
adc
lock
aad
scas
iret
or
mov
mov
mov
mov
cmp
pop
orl
addr16
push
aas
hlt
insb
push
sarl
xor
movsb
add
mov
sbb
rcll
cwtl
shrl
fs
pop
out
fsubp
and
mov
xchg
shlb
lcall
or
sarb
sub
mov
mov
xchg
inc
mov
sarl
xchg
pop
fadd
push
push
or
jne
hlt
jb
sti
cmpl
cmc
sahf
out
jl
fsubs
mov
call
dec
dec
mov
pop
or
ret
fsubl
inc
lret
loopne
mov
xlat
adc
popf
xor
arpl
adc
sub
jno
pop
lods
add
xchg
push
int3
mov
gs
imul
leave
movsl
lahf
pop
nop
adcb
xchg
jne
inc
bound
dec
loopne
hlt
push
mov
ret
in
and
jns
sub
icebp
cltd
mov
jb
or
movsb
push
imul
sub
push
mov
xor
and
daa
jle
insb
mov
aad
push
incl
pop
push
cmp
nop
scas
divl
or
lcall
mov
sarl
xor
aam
adc
push
mov
add
test
and
mov
notl
ret
out
cwtl
xlat
bound
out
xlat
scas
nop
neg
pop
pop
shrl
push
inc
cli
inc
add
mov
mov
xlat
inc
shll
icebp
or
inc
push
ja
xor
in
rcl
sub
insb
std
and
xchg
cli
mov
adc
pop
test
xchg
outsb
mov
push
pop
or
nop
mov
outsl
outsl
sti
cwtl
add
imul
popa
jmp
shrl
aam
insl
adc
popf
dec
mov
adc
jp
dec
jns
test
jmp
xor
xor
jbe
sti
sub
ds
adc
xor
cmpsl
outsb
jecxz
lret
cmpsl
mov
insb
sahf
int3
xor
pop
ja
jmp
mov
test
stos
xor
xor
or
cmc
imul
js
mov
loope
stc
lret
fwait
rcrb
stos
pop
pushf
mov
dec
xor
movsb
mov
stos
jne
lret
jne
pop
push
mov
jns
negb
enter
sub
pop
nop
cwtl
lods
std
fstpt
ret
xor
loopne
cmpsb
fmulp
movlps
push
fidivrl
fs
push
roll
ss
cmp
stos
xor
or
enter
and
dec
push
jo
jo
in
jl
jmp
xor
test
jne
dec
jns
xor
jb
jnp
xlat
dec
in
jge
out
shlb
mov
outsb
das
xchg
dec
push
cmc
ret
cltd
xchg
test
mov
pop
xor
jns
dec
xchg
xlat
push
push
cmp
shlb
and
loope
mov
mov
push
dec
and
das
pop
push
aaa
scas
push
dec
inc
mov
and
cs
mov
pop
decb
fnsetpm(287
xchg
dec
pop
pop
sbb
or
or
add
ret
in
xchg
or
ffreep
inc
pusha
xchg
xor
in
iret
inc
outsl
jmp
cld
repz
and
clc
pop
out
pop
sub
mov
jl
imul
roll
xchg
daa
sbb
push
insl
insb
xor
push
stos
mov
lret
mov
popf
xchg
pop
jbe
mov
mov
stos
out
xlat
xor
push
xchg
xchg
int3
sub
sub
ret
insl
xchg
mov
push
mov
ret
pop
addl
rcrl
imul
xchg
ret
inc
mov
inc
add
cld
jge
call
rcrl
adc
inc
cli
rcr
mov
or
dec
inc
jp
int
xor
dec
and
mov
lods
xchg
mov
nop
ljmp
sbb
cli
int
fs
out
inc
aad
cmp
orl
or
js
mov
outsb
imull
xor
test
mov
test
outsl
and
cwtl
movsl
jg
fnsave
stos
add
cli
cltd
pop
out
add
in
stos
push
lods
pusha
jmp
cmp
fmull
lods
jmp
test
addr16
push
cmc
mull
inc
mov
into
shll
inc
sub
sub
pusha
jae
jmp
in
pushf
pusha
jo
pop
fiaddl
jns
dec
out
loop
out
clc
mov
pop
aad
lret
orb
ret
lea
loope
or
mov
sarb
inc
mov
int3
sar
mov
imull
scas
je
fidivrl
int
cmpsb
add
or
mov
add
rorl
xorb
dec
cmp
pusha
rcr
xor
repz
lcall
pop
adc
shlb
xor
movsb
pop
leave
mov
inc
lea
scas
movsl
cmpsb
cmpsb
imul
pop
ds
xchg
jo
test
pop
adc
ja
sbb
rorb
jbe
pusha
pop
loop
pop
mov
pop
mov
in
dec
pop
popa
jno
into
mov
rorb
and
fisttpll
aas
shl
cwtl
ds
cld
rcrl
inc
jecxz
aas
xchg
ss
out
rcrb
lock
fisubrl
lea
in
mov
jecxz
repnz
jge
repz
frstpm(287
mov
push
insl
repz
cmc
mov
aas
enter
or
out
sbb
xor
stos
jl
pushf
fstps
cwtl
mov
bound
out
adc
sahf
adc
fdivrl
out
scas
daa
add
pushl
push
sub
mov
sub
push
sbb
jne
int
out
sbb
fiadds
inc
pop
mov
inc
push
inc
dec
adc
pushf
aas
xchg
cmp
jmp
sbb
leave
mov
push
outsl
cmp
and
inc
cwtl
add
jnp
jmp
ja
in
dec
sbb
outsb
mov
or
popa
fwait
dec
pop
in
fdiv
lds
fwait
pop
scas
dec
or
dec
repz
in
into
xlat
xchg
int3
mov
adc
push
fildl
xchg
adc
sbb
mov
adcb
dec
sbb
js
xchg
and
mov
push
jge
out
dec
mov
cmp
fwait
jo
pop
cmpsl
mov
jmp
lock
rorl
pop
loopne
mov
mov
xor
xchg
repz
jns
xor
aam
je
push
adc
test
cmp
xor
ja
cmpsl
sbb
test
pusha
push
add
decl
leave
cld
jno
mov
pop
pop
ss
fsubrs
inc
inc
dec
fbstp
cmp
push
bound
xchg
jnp
loopne
outsb
sarl
dec
rorb
mov
enter
insb
mov
or
rcll
loopne
xor
enter
outsl
lret
pop
sub
in
adcl
mov
add
mov
stos
or
addr16
ret
sub
xchg
cmp
lock
jge
pop
sub
test
jb
bound
sahf
or
sti
or
xor
sahf
mov
loope
or
int3
or
test
testl
orl
sarb
and
ss
mov
std
sbb
rorl
sub
loope
enter
mov
mov
xor
scas
cmp
xlat
ja
sub
or
das
jns
pop
add
and
inc
leave
sti
std
arpl
aad
or
iret
push
ljmp
data16
andl
les
repz
adc
movsl
icebp
jl
add
aas
pop
add
cmp
jg
imul
or
push
sbb
sahf
add
je
fiaddl
test
inc
sbb
or
aaa
jb
loopne
cmc
in
push
shll
cmpsb
push
mov
in
xor
inc
sbb
cmpsl
mov
adc
xlat
scas
sbb
in
ja
in
sbb
enter
in
adcl
call
rcr
sbb
outsl
scas
xchg
cmp
imul
ja
mov
hlt
pop
sub
add
cmp
sub
lods
cmp
test
pop
fmul
enter
pop
sahf
cmp
jl
adcl
adc
aas
cmp
imul
fnstenv
test
insb
xor
xor
xchg
les
pop
lahf
add
push
mov
sub
jg
in
inc
pop
mov
es
fcompl
in
call
pop
and
mov
imul
fistpl
dec
lcall
jp
sub
jmp
push
mov
js
xor
jne
and
std
mov
lret
add
loop
scas
xor
fs
mov
mov
adcb
sub
jns
push
pop
xchg
testl
mov
scas
push
mov
dec
sti
cmp
lcall
jo
push
add
sbb
pop
push
cld
clc
sub
ret
cmp
shlb
push
dec
add
scas
push
daa
decb
push
jge
test
xchg
jne
lock
xchg
fistl
mov
popf
gs
mov
or
or
icebp
pop
cmp
iret
sub
or
adc
cmpsl
jmp
imul
repz
in
and
and
xchg
out
lock
push
push
mov
loop
push
inc
loope
sbb
imul
push
and
in
cmp
fwait
jno
rolb
inc
mov
in
sbb
sbb
or
aaa
in
jg
add
nop
push
xlat
cld
rcr
pop
mov
jno
push
mov
sub
mov
xor
bound
daa
dec
cld
dec
int
rcll
imul
xorl
jl
sarb
dec
push
notb
inc
dec
jge
out
sub
je
lcall
mov
sub
outsb
aas
aad
adc
xor
repnz
pop
repnz
jmp
ljmp
pop
sbb
sarb
add
xchg
mov
ficompl
popf
in
jge
cmp
mov
iret
push
daa
xor
out
xlat
jecxz
add
dec
call
lahf
adc
out
sbb
jg
ljmp
fs
adc
cmp
and
jns
out
orl
add
mov
pop
insl
sbb
dec
mov
cs
rcrl
fs
mov
jge
sysret
pop
es
mov
mov
shrb
bound
mov
inc
push
pusha
xor
mov
jne
mov
inc
loopne
ret
das
adcb
xor
mov
out
stos
xchg
xchg
clc
iret
movsb
xchg
push
loopne
inc
fwait
int3
int
mov
jo
fadd
fdivrs
clc
adcl
inc
inc
in
xchg
cmp
cmc
add
dec
dec
pushf
movsb
shrl
in
stos
cltd
jo
push
or
aas
inc
add
mov
aam
sub
inc
jmp
sub
adc
mov
fcmovnbe
js
dec
stos
inc
xor
fimuls
pop
test
out
out
data16
insb
jne
stos
mov
aam
dec
mov
push
rcll
adc
ss
mov
mov
push
dec
sti
push
cmp
test
out
movl
push
jmp
scas
push
out
sbb
push
mov
pop
or
scas
sbb
insb
mov
jge
adc
pop
repz
pop
loope
xlat
cltd
mov
jle
repz
bound
fbstp
xlat
pop
xchg
dec
das
inc
aaa
mov
and
out
jecxz
inc
push
pop
mov
shl
add
fsts
mov
leave
mov
imul
jge
push
mov
push
push
ljmp
pop
mov
fdivl
pushl
mov
lods
inc
cmc
mov
in
ja
mov
rorb
pushf
inc
adc
imul
push
je
adc
mov
js
shrb
in
adc
sti
mov
push
subb
aam
fnstsw
mov
sbb
cmc
sbb
lcall
and
loope
or
and
lods
xor
push
mov
mov
xor
and
pop
fimuls
loopne
test
nop
iret
imul
xor
add
adc
mov
inc
test
jnp
insl
jge
in
movsl
lahf
aad
lahf
std
jle
mov
sar
das
push
adc
xor
mov
ss
test
in
cmpsl
add
sbb
jne
and
sub
out
jl
jb
inc
ljmp
mov
adc
mov
imul
mov
leave
xor
out
inc
in
adc
push
add
es
movsb
std
mov
cmpsl
bound
bound
jb
mov
test
jne
and
mov
add
mov
cmp
shlb
in
in
jl
mov
js
pop
lret
and
mov
sub
jns
cmc
mov
push
in
repz
fs
sub
lods
pop
fninit
repz
in
ss
push
sysexit
mov
pusha
adc
div
mov
es
and
mov
imul
fstpt
mov
cmp
add
sbb
add
push
inc
das
test
jo
orl
decb
or
faddl
insb
test
and
mov
push
data16
movsl
movsl
pop
or
push
push
xchg
test
sti
int
cld
call
push
jp
addr16
push
push
xor
cmp
insb
lock
mov
addr16
mov
jae
test
adcl
mov
or
daa
dec
pop
outsb
xchg
sub
repz
loope
push
or
cmp
mov
stc
xor
loope
push
xor
faddl
divb
cmp
sahf
aam
inc
sbb
ss
jg
push
daa
xchg
mov
pusha
ljmp
or
lds
insl
in
test
cmp
push
push
pop
cli
test
pop
test
out
fbstp
jb
mov
mov
jne
imul
cmp
mov
aad
pop
xor
jmp
xchg
lock
push
and
aas
and
test
fisubrl
ds
fs
loope
and
les
js
xor
mov
jmp
jo
daa
ret
inc
xor
in
mov
test
out
inc
shr
aad
mov
inc
int3
adc
shrb
mov
inc
arpl
jno
outsb
push
mov
ss
sarl
mov
stos
jge
mov
out
in
aaa
jmp
lret
rolb
xchg
lods
jno
fsin
mov
or
ds
inc
inc
cltd
xor
xor
push
inc
inc
fwait
andl
cmpsl
or
inc
lds
pop
inc
into
or
leave
pop
sbb
call
mov
push
mov
std
adc
xchg
cli
pushf
bound
jnp
das
mov
out
cmpsl
ds
sub
int
mov
test
xchg
xchg
test
pop
fisttpl
and
jl
xchg
fildl
mov
fbstp
repnz
imul
add
push
je
mov
cmpsl
mov
jno
fldt
loop
stos
sbb
inc
xor
pop
lcall
out
icebp
xchg
jecxz
or
xchg
nop
scas
adc
xorl
and
inc
pop
imul
push
gs
scas
pusha
sub
cmp
lcall
lret
add
push
add
cmp
sahf
add
xchg
cmp
popa
cmp
or
subb
in
notb
faddl
push
fs
xorb
insb
inc
xor
popa
add
sbb
cld
push
and
push
jno
loope
mov
out
add
pusha
mov
cmp
in
bound
xchg
cmp
insl
js
sbb
push
aas
imul
mov
sub
or
and
fidivs
pop
imul
push
mov
mov
loopne
cmp
stos
sub
sub
pop
push
mov
fcomip
push
dec
cmc
or
push
mov
pop
jne
and
enter
les
scas
pop
sahf
sbb
addr16
xchg
pop
adc
sbb
cmp
mov
mov
sub
pop
sarl
add
popa
fadd
loop
cli
inc
enter
sub
iret
mov
pop
push
pop
fdivrs
ss
iret
or
pusha
shl
test
fisubrs
or
repz
mov
addr16
sar
jb
and
push
push
jl
das
je
jl
repz
std
leave
das
ret
sbb
rcll
adc
push
test
repnz
sbb
test
jns
mov
inc
push
adc
repnz
divb
push
cmc
movaps
push
xor
xchg
xchg
adc
sub
fiaddl
nop
js
jb
push
pop
in
in
dec
hlt
cmpsb
jl
inc
inc
sub
je
rcrb
in
mov
out
fisubrl
xchg
ret
in
into
fidivrl
dec
fmuls
scas
das
or
pusha
imul
adc
out
enter
or
out
pop
and
add
mov
cmc
lcall
sub
pop
dec
mov
aad
sub
les
gs
mov
mov
mov
push
jl,pt
jp
out
adc
rcr
add
subl
push
inc
add
add
jmp
ss
out
xchg
movsb
mov
push
or
jns
mov
cwtl
or
xor
mov
fisubrl
jl
hlt
lds
mov
xchg
dec
jecxz
outsl
iret
pop
mov
adc
xchg
fistps
and
flds
popf
and
std
sbb
xor
sbb
sbb
pop
xchg
je
lahf
loopne
xchg
cmc
cmp
jmp
push
pop
xor
dec
mov
adc
pop
push
pushf
pop
jnp
sub
ds
lods
dec
cmp
call
bound
dec
mov
mov
sbb
cld
dec
fisubs
orb
mov
mov
stos
and
and
loop
jmp
fwait
mov
push
and
mov
ds
nop
or
stos
inc
enter
inc
movsb
mov
popa
in
sub
mov
lds
and
or
mov
sub
xchg
inc
mov
or
sbb
push
cmp
movsb
jp
ret
push
push
jmp
stc
inc
fildll
xor
movsb
inc
pop
mov
outsb
sub
fcoml
or
cmpsb
leave
xchg
in
add
cmp
sub
das
lcall
pusha
mov
xchg
stc
out
fwait
dec
iret
xchg
aam
fstps
test
lcall
push
clc
and
and
jmp
or
jmp
push
notl
sbb
xchg
jo
out
test
add
repnz
shll
push
jae
sbb
mov
or
dec
outsb
dec
inc
adc
cmpsb
inc
jne
andl
pop
jge
or
and
imul
dec
pop
dec
push
mov
xchg
or
mov
inc
adc
xorl
pop
add
insl
loope
sbb
sahf
pushf
fsubl
sub
add
repz
jecxz
sti
shll
xor
lock
jnp
loope
and
inc
scas
mov
push
enter
stc
xlat
into
cmc
mov
add
in
loop
fs
mov
mov
xor
jge
pop
or
jmp
nop
dec
mov
inc
sub
inc
sbb
addr16
mov
test
nop
rcr
pop
pop
outsl
xchg
outsl
shr
popf
jne
sti
int
push
jle
pusha
mov
xchg
sbb
je
push
and
mov
sbb
lds
pop
dec
or
aam
test
retw
pop
pop
lahf
imul
jl
mov
lds
cs
jno
cld
rol
aam
std
mov
aas
xlat
orl
pop
repnz
push
fists
andb
sub
cmp
loopne
and
incb
adc
sti
dec
pop
imul
loopne
bound
fistl
mov
mov
ds
mov
jb
push
fwait
adc
rcrb
out
andl
mov
divb
jge
movsb
popl
or
pop
gs
ja
sbb
lods
aad
mov
mov
out
inc
jg
jmp
lret
dec
jb
out
pop
cwtl
xor
push
jne
mov
pop
sub
add
xor
xor
int
sbb
mov
dec
xor
fldcw
fldcw
mov
mov
sub
jns
movsb
hlt
mov
test
pushf
shlb
dec
xchg
fisttps
bound
push
pop
sub
inc
jge
insb
sbb
xchg
fcmovne
jne
sub
cli
sbb
mov
mov
sarl
mov
push
mov
dec
mov
mov
fcmove
adc
push
jno
cltd
addr16
dec
icebp
sub
fs
push
roll
fistl
lcall
fsub
lods
cmc
shrb
inc
dec
mov
inc
sub
sub
fwait
dec
jno
cmpsb
adc
pop
xchg
loop
dec
pusha
es
js
add
xchg
addb
jge
out
dec
xchg
leave
shl
cmpsl
call
adc
fwait
adc
add
mov
and
dec
pop
xor
xchg
mov
push
jae
in
bound
or
call
dec
mov
or
out
dec
in
ret
sub
xor
rorl
xor
test
in
jp
xor
loop
cmpsl
mov
ljmp
les
cmp
mov
cwtl
mov
stos
jge
and
xor
sub
test
push
fadds
xor
jecxz
leave
aad
adc
lahf
fimuls
jns
stos
xor
inc
inc
lods
pop
jmp
ret
fistpl
sahf
in
adc
clc
pushf
cmp
mov
xor
test
mov
iret
and
xchg
frstor
jb
mov
add
scas
dec
imul
dec
pop
in
pop
addr16
jg
div
xor
add
dec
jl
cmp
xchg
cmp
jns
imull
lret
cmp
lcall
mov
sbb
roll
outsb
jg
adc
xor
dec
or
adc
xchg
cmp
pop
imul
orb
dec
mov
aaa
push
clc
lds
lods
stos
dec
cmp
aam
xchg
or
stos
testl
iret
lods
arpl
fdiv
push
mov
ljmp
lret
and
pop
mov
push
inc
dec
sti
xsaveopt
push
mov
mov
loopne
les
movb
mov
sbb
es
pop
cmp
lods
lods
xlat
hlt
sete
loop
shlb
jl
xchg
out
aad
xchg
lods
jle
push
lea
jle
icebp
fs
mov
movsl
xchg
pop
in
adc
fcomp
lahf
and
in
test
sbb
fimuls
addr16
fwait
lret
shrb
push
popa
inc
icebp
and
push
rcrl
xor
jno
mov
ja
dec
call
push
jmp
inc
pop
popf
aas
movb
cmp
stos
mov
xor
imul
cmp
push
push
movsb
cmc
mov
push
out
adc
pop
fsubrl
and
adc
les
or
lds
adcb
mov
add
mov
inc
pop
jmp
xor
sahf
loopne
inc
push
ljmp
cwtl
mov
mov
gs
loop,pn
inc
sub
jnp
pop
stos
push
mov
xor
mov
cmpsb
sarl
les
xchg
repz
sbb
outsb
popf
push
adc
pop
imul
enter
dec
int3
sarl
fwait
rcll
jb
add
leave
xchg
out
cmp
out
and
mov
xchg
enter
mov
lods
or
sbbl
lea
std
inc
imul
fldl
bound
mov
xor
testb
fidivs
cmpb
movsl
cmc
adc
sbb
dec
sub
sbb
push
mov
test
shrl
push
aaa
stc
int
in
test
sub
aas
mov
inc
lods
push
cmp
fstps
ret
std
xor
sahf
out
in
insl
pusha
inc
jae
add
pop
cmp
mov
stc
and
mov
scas
or
es
jnp
inc
or
xor
add
xchg
push
add
nop
sub
inc
ljmp
test
xchg
dec
in
inc
test
adc
sbb
fwait
xor
and
xchg
pop
sbb
sub
jg
mov
pusha
jbe
ffree
fnstcw
es
xor
adc
push
movsl
out
mov
popa
inc
icebp
fsubrl
dec
call
cld
ret
add
pop
in
pop
xorl
adc
xchg
test
jecxz
sbbb
sbb
sti
das
addb
jl
push
sti
push
mov
out
out
mov
and
xor
nop
shrb
dec
xchg
xor
lds
inc
xchg
shll
in
lods
push
jb
sar
cmp
adc
test
out
adc
ja
push
push
lock
jno
testb
push
jge
dec
data16
fsubs
sub
xlat
hlt
lods
xlat
pop
pusha
jp
cmp
cli
cmp
call
push
or
inc
fstps
stos
push
fdiv
mov
divb
adc
xchg
sahf
inc
push
cmpsb
push
or
int3
ja
test
iret
inc
ljmp
push
sbb
arpl
daa
sbbb
or
mov
cld
push
push
aas
cld
repz
add
mov
lods
adc
in
roll
fistps
xor
bound
scas
mov
pop
nop
int3
sbbb
mov
into
fucomip
pop
ja
les
fidivs
jp
adc
stos
pop
and
adc
shr
pop
sarb
xchg
cmp
lret
rcrb
dec
mov
mov
inc
pop
test
dec
cmp
fldl
out
xchg
pushf
adc
mov
test
out
xor
mov
push
sbb
rorb
add
stc
dec
cmpsl
aas
test
xchg
sbb
mov
pushf
ljmp
mov
dec
fsts
in
and
in
jg
in
push
divb
xchg
adc
add
iret
push
dec
add
loope
dec
std
inc
pop
sbb
jg
sub
pop
cmpsb
push
daa
clc
xchg
bnd
adc
incb
mov
popf
inc
and
fwait
adc
mov
xchg
mov
fadds
lret
in
dec
out
out
bnd
in
xorb
and
in
sub
or
std
sub
inc
imul
out
or
and
stc
fsts
mov
dec
icebp
arpl
jae
jg
jo
mov
mov
dec
cmp
cld
aaa
or
fcoml
sbb
sub
mov
inc
mov
inc
lahf
aaa
jb
cmpsl
imul
or
imul
push
maxps
push
push
rep
mov
jp
gs
dec
sub
mull
pop
enter
mov
stc
jge
loopne
enter
rclb
sub
mov
hlt
aam
cmpsb
inc
add
pushf
add
mov
scas
lret
add
fists
jno
mov
je
ret
adcl
gs
or
fimuls
xor
cld
inc
lea
adcb
xchg
or
std
out
or
mov
push
bound
dec
nop
in
jno
dec
insb
push
and
push
lcall
shrb
jmp
movb
arpl
add
add
into
pop
dec
or
push
add
int3
mov
sbb
addr16
jmp
xchg
out
jo
adc
fistl
fsts
fstps
lea
fisttpl
enter
jp
call
fnsave
fwait
inc
cmp
or
pop
repz
add
jg
mov
or
inc
and
pushl
sbb
push
pop
pop
xlat
xor
mov
pop
and
push
faddl
test
inc
movl
xchg
daa
xchg
jns
adc
sbb
or
mov
push
xor
imul
cs
mov
xchg
popf
adc
outsb
fidivs
mov
mov
scas
hlt
xor
test
inc
lahf
push
addr16
mov
out
movsb
xor
rorb
loopne
dec
jb
jg
scas
add
jae
int
fnstenv
cltd
mov
rcrl
adc
lods
inc
and
dec
leave
pop
int
mov
sahf
add
pusha
xlat
cmp
call
test
mov
xchg
add
sub
mov
xlat
movsb
xor
mov
shll
rcrb
fildll
rorl
lea
xchg
mov
xchg
inc
sbb
xchg
test
js
sbb
dec
lods
adcb
out
lcall
sbb
out
cmp
push
popa
add
pop
add
pushf
neg
daa
cmc
and
adc
pop
arpl
rclb
inc
push
mov
loopne
cmp
mov
jmp
jns
add
and
into
dec
jmp
push
cmp
iret
push
push
int3
mov
cmp
sti
fistl
or
lret
je,pt
movsb
test
jbe,pn
mulb
and
pop
or
mov
pop
push
test
push
fsubrs
mov
out
pop
lock
inc
gs
push
and
dec
filds
out
in
jge
repnz
sbb
pop
repnz
out
xor
iret
mov
hlt
ja
cld
leave
shll
mov
call
xor
mov
cltd
adc
add
mov
je
aad
mov
dec
inc
sbb
and
lahf
mov
add
dec
stos
and
test
shlb
push
test
mov
jecxz
sbb
sbb
ljmp
enter
cmp
outsb
inc
in
int3
cmp
inc
in
xchg
add
jge
inc
testl
mov
xlat
leave
sarl
hlt
jl
push
sbb
jg
mov
cmc
mov
fs
jle
in
or
mov
push
mov
pop
mov
mov
add
sbb
mov
movsl
mov
push
cmpsb
movsb
add
xor
pop
test
mov
inc
adc
fisubrs
out
call
add
movsl
loop
repz
mov
sub
push
or
lret
adc
std
mov
push
lret
cs
push
lcall
jp
xchg
cmpsb
mov
test
and
mov
pop
or
xor
test
js
cbtw
add
dec
lods
jecxz
inc
and
decb
ret
pushf
fxch
pop
rorb
or
ret
ja
scas
adc
add
jl
xor
out
lock
das
cld
pop
stos
ja
cmpsb
inc
add
lods
subl
xchg
inc
dec
enter
aad
insl
xchg
lea
mov
leave
adc
lahf
push
outsl
fldcw
lahf
mov
out
push
xor
loope
shr
cvtps2pd
lret
mov
mov
pop
pop
cmpsl
pushf
push
xor
xchg
sti
popf
push
xor
fsubrl
xchg
mov
sbb
xchg
sbb
ss
and
aam
xchg
pop
out
and
and
push
in
sbb
fdivl
negb
out
mov
pop
mov
rorl
lods
sbb
and
in
inc
mov
mov
ljmp
pusha
std
and
pop
pop
push
pop
xor
adc
or
stos
notl
cmp
push
loopne
cmp
lahf
inc
outsl
mov
jmp
or
mov
pusha
xchg
das
xchg
mov
jmp
mov
dec
xchg
jb
shl
pop
scas
mov
jl
inc
in
lret
mov
or
popf
movsb
push
sub
dec
jl
bound
stos
insl
cld
jne
sub
mov
in
movl
mov
pop
bnd
lcall
pop
test
xchg
ret
cwtl
jnp
into
xchg
cmpsb
xchg
push
mov
lea
ret
scas
sub
cmp
pop
fdivs
ret
mov
test
shlb
out
or
vpcmpgtw
and
sahf
sub
stc
sbbl
movsb
ret
mov
jl
jmp
subb
fsubrs
mov
push
pop
inc
inc
clc
jns
scas
adc
cmp
sahf
jp
inc
insb
popa
cmc
xchg
push
mov
jo
mov
repz
sub
sti
out
dec
mov
imul
push
cld
pop
xor
cltd
scas
cmpsl
mov
or
stc
icebp
sub
movsb
repz
mov
imul
and
xor
adc
push
push
mov
jmp
jmp
repnz
push
lods
stos
push
bound
les
mov
push
mov
sbb
bound
stos
mov
orl
jl
dec
or
jge
dec
andb
cmp
repz
mov
mov
fidivs
dec
push
or
and
fs
aaa
inc
leave
sbb
mov
cli
or
mov
cmp
mov
push
test
cwtl
test
jno
mov
or
imul
mov
mov
ret
xlat
mov
icebp
insl
mov
hlt
adc
mov
push
jne
dec
daa
int
aaa
lods
xchg
int3
decl
dec
cwtl
push
adc
fs
dec
repnz
pusha
mov
aad
movsl
mov
adc
repnz
mov
test
out
outsl
inc
inc
lcall
out
lds
popa
stos
pop
pop
aas
mov
mov
xchg
jno
dec
dec
or
jne
xchg
sbb
sbb
popa
mov
call
mov
mov
mov
jbe
pop
xchg
add
fcomi
popa
es
ret
mov
ficompl
dec
insw
jp
inc
loope
pop
dec
jae
pop
fs
lds
add
fs
mov
in
adc
inc
add
into
ds
or
repz
mov
mov
loop
cli
cwtl
pop
sbb
cmp
lcall
jnp
sti
mov
push
mov
inc
divl
jecxz
xor
sahf
mov
jne
inc
xchg
rol
add
add
cmpsb
test
fcomip
mov
sbb
sbb
adc
fwait
mov
xor
cmp
insb
fs
sbb
add
sub
jmp
or
out
or
jb
icebp
mov
ret
and
adc
sub
pop
aaa
ret
lds
shrl
clc
dec
or
bswap
mov
push
jg
sahf
in
lcall
lret
je
mov
iret
loopne
jg
stos
xor
adcb
loopne
aas
xor
inc
push
aad
fimull
stos
and
jp
cmp
jnp
stos
scas
add
ss
add
and
dec
mov
lods
ss
test
daa
sub
call
inc
aaa
adc
or
outsl
jo
push
lods
call
rcrb
sbb
lds
push
ret
dec
cmpsl
jb
loop
roll
add
mov
cmp
add
and
dec
and
ficoml
pop
addl
xor
xchg
mov
adcl
and
cmp
dec
adc
sbb
add
xchg
loope
orb
dec
add
xor
sub
xchg
mov
subb
clc
xchg
and
inc
int
outsb
les
ja
ret
push
xor
iret
lds
imul
adc
repnz
popf
sti
data16
mov
pop
pop
mov
test
vfmaddps
cmp
sti
mov
fsubrl
popf
test
test
and
adcl
or
std
icebp
sarb
scas
push
mov
xor
dec
mov
xor
aam
pop
arpl
sbb
in
fcos
enter
push
imul
add
jnp
imul
fiadds
mov
adc
mov
cmpsl
pusha
push
push
subb
sahf
outsl
cli
out
insl
fld
insl
ffree
icebp
hlt
outsl
and
xchg
or
sbb
test
lcall
fs
es
ss
mov
xor
ljmp
cmp
xchg
xchg
dec
loope
mov
xchg
ds
daa
outsb
inc
outsl
mov
xchg
pop
mov
lods
je
inc
jno
mov
imul
ljmp
test
xlat
xor
jmp
cmp
fcmovnbe
inc
inc
push
out
sahf
fwait
loop
sbb
push
add
cmpsb
cmpsb
mov
pop
bound
pop
sub
jp
xor
sti
sbb
inc
jbe
or
inc
or
sbb
and
sub
insl
icebp
fdivrl
std
lea
inc
mov
jbe
cs
pop
adc
fiaddl
sbb
sbb
mov
push
push
jne
push
push
cltd
inc
call
xor
pop
jg
mov
mov
jecxz
test
cmpsl
cmpl
aad
fwait
cmp
inc
add
mov
dec
call
sbb
fs
je
arpl
sub
mov
out
xor
cmp
mov
mov
dec
push
add
xcrypt-ctr
cmpsl
ffree
lock
sahf
daa
mov
repz
pop
xor
dec
jns
out
stos
mov
iret
adc
inc
push
sti
cmp
xor
loope
dec
mov
jg
pop
or
call
fxch
incb
dec
sbb
jecxz
test
and
jmp
popa
sbb
incb
lea
imul
aas
and
aas
jl
sbb
pop
mov
bound
jg
mov
dec
bound
mov
mov
push
mov
sti
and
or
aaa
mov
jno
and
addr16
into
push
leave
mov
insb
or
icebp
jb
lods
jg
mov
shll
addb
cs
adc
pop
int
sbb
cmp
jne
push
push
loope
arpl
sahf
dec
sbb
inc
dec
push
ja
leave
mov
cmc
scas
dec
push
sub
mov
jne
inc
mov
pushf
bound
xchg
out
mov
popa
shlb
and
lret
test
pop
inc
inc
std
in
xchg
loope
dec
sub
dec
xchg
push
pusha
push
loopne
sarb
sub
push
lock
add
cmp
add
arpl
push
mov
xchg
or
or
lcall
xor
jae
or
jns
lret
mov
dec
sub
and
fs
xchg
hlt
and
dec
stos
notb
fsubrl
icebp
sub
or
jo
insb
ds
push
xor
jl
imul
out
jae
shl
jmp
dec
cwtl
imulb
or
mov
lock
xchg
sbb
lea
je
rcrb
adc
in
mov
rclb
and
fildl
sti
adcl
pop
xchg
js
jne
add
in
fldl
testl
cmp
mov
sti
scas
jl
jg
mov
dec
add
xor
sahf
adc
loop
int
ret
cmp
pushf
inc
dec
sub
sti
jl
insb
cli
dec
jae
pop
add
stos
push
lea
push
or
sbb
lock
dec
xchg
negl
les
insl
out
clc
pusha
imul
or
mov
or
jge
xorl
das
dec
aaa
pop
into
notl
iret
sbb
push
pop
add
sbb
jns
pop
xchg
orl
sbb
xchg
push
sbb
sub
xchg
inc
adc
in
popl
jge
jae
jg
out
adc
and
loopne
stos
out
cmp
popa
sbb
enter
addr16
in
mov
jmp
roll
adc
dec
cmpsl
jb
sbb
arpl
ja
iret
jns
xchg
mov
and
pop
movsl
aad
xchg
out
mov
aad
inc
sub
addr16
cmp
jb
inc
jne
shr
add
mov
mov
aad
mov
test
je
repz
nop
mov
mov
sub
sbb
lahf
clc
loop
ud0
lret
iret
and
incb
mov
or
rcrb
xchg
aad
inc
test
shr
cld
testl
sub
or
mov
sarb
xor
movsb
pushf
cmp
jb
mov
add
in
push
add
popa
push
cmpsb
fwait
push
pop
jp
xchg
dec
pusha
inc
stc
sub
xchg
loopne
cmp
mov
rcrb
and
shr
xor
adc
stos
dec
shrb
into
cmc
mov
mov
mov
outsb
sub
xchg
sub
mov
or
mov
push
mov
adc
and
stos
mov
inc
sbb
ljmp
cmp
pop
decb
push
mov
fbstp
push
push
stc
imul
sub
and
lock
insb
sbb
ret
mov
cmp
adc
aas
rcl
xchg
sub
cltd
and
popa
xchg
add
xor
out
xchg
adc
lcall
ret
repz
sub
mov
cmc
shrl
out
dec
pop
mov
data16
push
add
dec
jp
aaa
ret
mov
push
dec
add
in
cwtl
cmp
rorl
xchg
sbb
popa
push
fnstenv
adc
xchg
jne
pop
in
fcoms
push
mov
ret
mov
lahf
pop
sub
or
sbb
mov
xorl
lcall
xor
add
stos
mov
outsb
xchg
mov
loope
or
fistps
xchg
neg
adc
jae
jb
out
jnp
jnp
or
outsb
aad
mov
dec
outsl
and
sbb
imul
push
outsb
js
add
push
mov
and
sub
xchg
clc
adc
mov
cmc
pusha
mov
inc
push
mov
das
or
pop
les
addr16
xchg
repnz
aam
push
pop
cli
lret
mov
mov
sbb
int
adc
sti
inc
aas
idivl
enter
mov
xlat
negb
add
sub
xor
insl
out
or
add
inc
lods
mull
test
adc
and
adc
sbb
push
xor
sbb
xor
fdivrs
out
mov
jge
cwtl
jle
dec
and
ljmp
cmpsl
cmpsb
xchg
push
sub
in
sbb
sub
push
mov
dec
mov
jge
mov
push
adc
das
mov
inc
dec
mov
test
in
lcall
pop
iret
push
mov
mov
sub
scas
inc
xchg
cmp
or
xchg
jne
or
cwtl
push
popf
jl
inc
cmp
js
test
xor
push
pop
repz
je
mov
add
fmuls
push
movl
inc
cmp
or
ret
mov
xor
movsl
mov
sti
sbb
or
and
cmp
xchg
xchg
pusha
es
xlat
xor
xchg
cmp
pop
idivb
inc
push
cmpsb
mov
mov
dec
scas
shll
jns
test
pop
lcall
cltd
sbb
xchg
pop
mov
lahf
lcall
add
sub
fistps
lds
push
sbb
mov
shlb
adc
sbbb
aad
stos
sub
repz
cmpl
lds
jmp
push
sub
or
repnz
addr16
push
adc
cmp
insl
adc
xchg
in
mov
xor
and
or
xchg
add
xor
hlt
pop
jmp
stos
jb
mov
push
push
movsb
or
ss
insb
xor
push
js
jae
mov
xchg
xor
mov
or
pop
and
xchg
fbld
in
fdivr
mov
sti
adc
cmp
call
push
scas
or
add
or
fstps
imull
lahf
or
fdivl
mov
pop
lock
ret
xchg
sbb
les
pop
call
int3
insl
cmp
ret
movsl
or
mov
sahf
pop
testb
jmp
leave
mov
in
push
fidivs
std
xchg
sub
mov
loopne
roll
add
add
movsb
mov
shlb
pop
lods
ja
and
clc
cmp
jp
repnz
mov
sub
jl
inc
xchg
adc
ss
pusha
std
js
xchg
xchg
js
stos
and
push
scas
add
imul
std
push
or
cmp
xor
xor
je
lods
add
shll
adc
cld
idivb
ljmp
das
idiv
xchg
xlat
and
jbe
insb
pop
fldz
arpl
or
pop
mov
dec
addr16
push
sarl
push
push
sbb
sbb
pop
mov
aaa
fwait
out
push
pop
mov
imulb
adc
push
and
lret
arpl
cltd
jle
mov
outsl
or
pusha
movsl
fwait
loope
cmp
les
inc
xchg
cwtl
inc
add
outsl
clc
shll
push
inc
and
stc
dec
test
in
dec
push
xor
fsub
push
test
mov
mov
cmp
int3
icebp
or
mov
and
jg
lret
mov
pop
sahf
ja
xchg
add
mov
lcall
loop
cwtl
test
add
negb
pop
cmc
cmp
xchg
jl
in
sub
cmp
mov
or
pushf
addr16
adc
mov
outsb
push
jbe
je
or
je
mov
test
push
jne
mov
lods
fistl
fxch
jbe
mov
sub
pop
scas
test
jne
shl
add
aad
xor
outsl
push
scas
outsb
jne
adc
mov
repz
add
lret
in
insb
jp
les
mov
in
aad
repz
leave
inc
std
into
in
or
jnp
mov
imul
insb
aas
add
push
test
add
inc
das
mov
in
pop
inc
scas
movsl
imul
dec
daa
fstps
sub
push
ja
stc
cld
addr16
cmp
dec
test
lret
mov
add
call
divl
adc
jnp
dec
or
shl
and
aam
cmp
fstpl
and
dec
jl
jle
mov
bound
ss
xor
frstor
movsl
cli
jae
mov
adc
mov
push
dec
shll
iret
pop
mov
cmp
push
sbb
add
jp
mov
mov
pop
sub
mov
insb
mov
cmpsb
mov
iret
push
shll
sti
aas
je
test
in
in
mov
mov
and
xchg
ljmp
orb
dec
ret
sub
sub
lods
cld
sbb
or
or
jecxz
mov
mov
push
ss
inc
ficompl
jo
outsl
xchg
cli
inc
jo
push
stos
test
in
xchg
push
jl
shl
icebp
outsl
mov
jne
push
jmp
daa
add
dec
loop
dec
loope
pushf
lods
lods
js
test
mov
gs
pop
sarl
mov
ljmp
add
push
shl
in
cmp
or
push
popf
mov
call
stos
adc
test
jb
subl
and
or
xor
addr16
decl
inc
call
aas
and
xchg
aad
insl
dec
mov
adc
mov
push
push
pop
lods
rcrb
cmp
enter
pusha
ss
clc
lcall
adc
std
int
push
pop
in
sbb
lcall
mov
adc
repz
inc
ljmp
mov
mov
shr
xor
sbb
mov
pop
sbb
test
insl
fwait
pop
aaa
out
add
add
sbb
cmp
fstl
pop
mov
daa
add
jae
xor
mov
mov
adc
dec
sub
mov
jno
push
cmp
fstpl
jb
xchg
xor
mov
jnp
cmpl
ret
sub
test
mov
out
into
aam
pop
jbe
fistpll
lock
adc
push
inc
iret
pop
dec
cmpsl
push
aas
push
sahf
adc
push
int3
jno
adc
scas
or
and
scas
push
lret
ljmp
xor
ret
sbb
push
rcrl
in
xchg
in
sbb
cmpl
js
pop
loopne
and
sub
aad
pop
iret
sub
mov
xor
mov
dec
and
sub
popa
imul
or
lahf
rcll
filds
movsb
cli
or
mov
daa
data16
into
mov
ficomps
cmp
imul
fs
rclb
sbb
push
xchg
pop
push
ret
out
add
xchg
or
sbb
enter
pusha
js
je
push
and
je
sbb
outsl
aad
mov
cltd
sbb
sub
popf
mov
xor
stos
add
adc
in
jle
fcomip
xchg
xor
xchg
jmp
mov
mov
mov
out
stos
xchg
cld
or
sbb
fistl
xor
out
xor
shrl
cmpsl
jle
aad
inc
inc
and
jg
pop
testb
cmp
movsb
mov
dec
cs
xchg
push
cli
loope
or
push
pusha
cmc
movsl
jo
push
insb
fwait
jmp
and
jp
jle
and
mov
hlt
je
popf
jnp
outsb
mov
insb
mov
dec
andb
dec
sbbl
repz
outsb
into
shl
xor
lds
mov
sbb
int3
es
sbb
lcall
mov
xor
push
cld
faddl
jns
push
imul
sbb
cs
sahf
jnp
and
aad
mov
ret
sub
pop
js
sbb
clc
push
cmp
jae
add
repz
add
and
cmp
xchg
loop
jge
adc
arpl
inc
dec
sti
add
ljmp
lock
sti
scas
push
dec
xchg
pop
pop
xchg
xchg
je
sahf
iret
repz
or
mov
into
mov
cmpb
leave
repnz
cli
pop
orb
mov
cmpsl
rep
bswap
aad
mov
add
or
ret
inc
or
sub
pusha
rcl
sub
jge
mov
repz
mov
popf
inc
mov
out
lock
pop
sub
ret
cmc
andl
ret
arpl
clc
jnp
jbe
sbb
hlt
dec
data16
icebp
inc
xor
or
repnz
mov
xor
lock
sub
mov
or
imul
dec
cmpsb
into
aas
and
mov
scas
sub
dec
jle
pop
std
add
addb
dec
leave
adc
dec
repz
mov
lahf
lods
xchg
cld
xlat
mov
mov
ss
lea
flds
push
push
pusha
daa
ja
je
push
mov
pop
and
fisttpl
jae
adc
dec
sarl
xchg
jae
mov
ja
add
scas
testl
imul
aam
orb
mov
push
mov
cmp
add
sbbl
adc
sub
shl
pop
addr16
fistps
sar
roll
xor
test
sbb
jnp
fnsave
mov
or
es
mov
fadd
enter
push
mov
pop
pop
and
inc
mov
stc
xchg
and
jnp
xchg
lods
loop
mov
fsubl
mov
stos
ss
sub
dec
aaa
jnp,pn
rcrl
inc
int
adc
xlat
cwtl
cli
lds
cmp
jns
and
iret
fadds
std
sub
cltd
and
psrld
xchg
and
xchg
or
int
loope
dec
push
dec
cli
imul
cltd
lea
mov
or
sbb
inc
int
mov
int
das
loopne
insb
fcmovb
jbe
adc
les
in
data16
das
and
adcl
mov
scas
imul
mov
push
pop
arpl
hlt
loop
icebp
push
push
xchg
das
push
cmp
flds
shr
sub
out
popa
scas
nop
or
jl
divl
xchg
inc
testl
aad
fisttpll
rcpps
sub
lahf
push
cmp
adc
add
insl
rclb
fildll
lret
or
mov
pusha
xchg
cwtl
cmpb
and
xor
popa
jg
mov
and
or
repz
imul
adc
cmp
sub
adc
jnp
ds
ret
ret
lcall
push
mov
and
xchg
and
movsb
mov
repnz
jle
inc
jp
ret
sbb
jno
jnp
rorb
ret
nop
test
scas
pop
fmull
jno
fs
or
sbb
add
in
dec
ja
mov
or
insl
sahf
pop
add
popa
pop
add
mov
pop
int
or
push
lcall
jno
test
xchg
outsl
das
cmpsb
ret
jbe
roll
pop
cmpsb
fld
xor
lahf
mov
aam
in
cmp
arpl
mov
and
pop
mov
jle
mov
fadds
adc
je
in
ror
pop
sub
xor
push
inc
and
push
mov
xor
adc
sub
and
or
in
lods
dec
xor
sub
rcll
out
cmp
or
data16
mov
fidivs
pop
and
hlt
mov
mov
negb
mov
movsb
cmc
testb
and
jno
sarb
sarb
das
xor
push
xchg
ljmp
mov
push
les
jb
and
daa
inc
xchg
in
sub
jge
jecxz
hlt
subb
mov
into
sub
test
sub
iret
jb
xchg
out
fadds
daa
loopne
jns
mov
mov
divb
mov
int3
or
pop
hlt
outsb
adc
jge
rcll
cmc
push
add
mov
cmp
pop
adc
and
arpl
pop
ljmp
dec
xchg
dec
push
cltd
cmpb
adc
flds
mov
push
lret
inc
inc
int3
das
sbb
adc
icebp
inc
cld
pop
or
ds
cli
lods
fsubs
ljmp
mov
jno
mov
fnstsw
jp
out
ficoml
mov
xchg
sbb
add
ret
pop
add
gs
xchg
pop
mov
jbe
pop
and
hlt
aam
ficoml
ret
call
fidivrl
or
xchg
repnz
cld
push
xchg
mov
stos
pop
mov
data16
cld
add
lods
dec
ljmp
mov
cmpsl
jae
mov
pop
or
cwtl
imul
inc
int
adc
xchg
xchg
xchg
cmp
addr16
sub
pandn
popf
repnz
gs
pop
mov
and
lock
xchg
inc
jns
jmp
inc
lock
in
mov
repz
pop
shll
push
jmp
adc
sub
leave
nop
sub
outsl
enter
ljmp
push
jmp
push
jp
adc
xlat
int3
shll
xchg
sub
aaa
cmp
std
cmp
or
lret
jbe
in
inc
dec
ss
push
rcr
mov
jb
xchg
clc
sarb
adc
sbb
out
cmp
and
jns
inc
scas
xor
jg
dec
das
and
xchg
and
shr
ret
lahf
popf
dec
and
lret
xor
cmp
dec
sbb
dec
xor
or
nop
cltd
push
add
mov
test
pop
movsb
jmp
scas
daa
aam
out
sub
aad
xor
jge
inc
imul
cmpsb
aas
int
mov
sti
mov
dec
jno
xchg
test
call
add
push
add
cli
je
jno
dec
loope
int
loop
aam
andl
aaa
fucomi
shrl
cmpsl
pop
test
dec
std
data16
or
pop
sarl
cwtl
adc
cmpsl
sbb
lds
xchg
adc
add
fstl
dec
mov
pop
push
jl
fwait
outsb
mov
je
mov
cltd
fists
push
aas
sbb
cmp
movl
arpl
push
daa
test
frstor
jl
jp
mov
mov
sub
mov
dec
sti
fwait
iret
dec
cmp
xor
jl
and
out
addr16
pop
jmp
fsub
out
test
xchg
add
or
sbb
jl
xor
push
ret
int
push
mov
add
sub
icebp
and
aad
mov
shlb
fldenv
cmp
adc
add
stc
orb
mov
and
xlat
mov
dec
xchg
es
icebp
nop
cmp
movsb
lds
ds
loope
push
dec
sub
mov
aas
or
les
fdivr
xor
ljmp
mov
insb
rcrb
and
inc
repnz
mull
cli
setle
pop
add
mov
xchg
lods
cmp
xchg
jae
pop
ljmp
stos
out
mov
subl
mov
aas
mov
mov
cmpsb
fidivrl
xchg
mov
or
dec
cs
push
ret
add
push
dec
addl
xor
loopne
push
mov
insb
xchg
inc
add
out
cmp
data16
ja
cmpsl
les
fsub
ja
aas
dec
orb
mov
inc
push
pop
and
add
and
xor
push
mull
sbb
dec
lahf
test
js
jnp
daa
and
fsts
inc
aam
dec
push
vcvtsi2ssl
mov
sti
adc
rcll
ret
sub
daa
adc
and
dec
pop
jns
cli
and
ja
out
fcmovnb
pop
es
jmp
jmp
jle
adc
mov
jae
sbbl
and
sbb
xchg
jbe
out
or
jecxz
cltd
dec
adc
jl
enter
fadds
jns
push
jg
push
sub
mov
jmp
push
ljmp
and
or
jae
shlb
xor
pop
dec
sahf
loope
in
push
cmpsb
jo
add
add
inc
push
stos
and
dec
mov
push
dec
or
in
lods
xor
xchg
ret
popw
push
jp
sti
or
xor
jae
fildll
sti
pushf
sub
int
cltd
push
bnd
xchg
or
jnp
mov
mov
push
iret
add
mov
andb
outsb
add
lret
aaa
and
insb
sbb
fildll
out
rcrl
xor
insb
call
pop
xorb
sbb
ja
xchg
fisubs
insl
jmp
mov
inc
jle
pop
lods
jecxz
jne
sub
negb
es
mov
cmpsb
rorl
jo
stos
lret
daa
cmp
leave
mov
loope
ret
and
inc
jp
xor
sahf
shlb
pop
mov
mov
shlb
fisubs
xlat
adc
lds
leave
jmp
movsl
enter
jb
stos
mov
and
ja
addr16
mov
out
add
or
ljmp
ja
sbb
and
das
jb
lret
std
mull
test
mov
es
lods
jae
push
dec
adc
lcall
jno
push
xchg
xchg
mov
sarl
mov
fstpt
jnp
and
in
mov
pushf
aas
xorb
enter
jo
clc
daa
xor
inc
nop
add
inc
rcrb
mov
xchg
lods
sub
ljmp
dec
shll
mov
mov
jl
sbb
mov
out
bound
dec
mov
movsb
lret
movsl
sbb
sti
or
xchg
sti
or
xchg
mov
mov
mov
fdivrl
bound
mov
bound
sbb
cmc
mov
sub
mov
aas
cmp
mov
mov
dec
add
push
div
mov
push
lea
sbb
scas
ret
repz
cmp
cmp
or
in
push
cmpsl
fs
hlt
int3
pop
insb
inc
add
mov
push
sbb
add
out
addr16
lret
movsb
insb
xchg
out
push
in
xor
push
adc
pop
sbb
sbb
and
add
int3
mov
sbb
mov
mov
mov
adc
lcall
adc
int3
add
push
dec
leave
lds
inc
movb
lret
rclb
jns
fisttpll
pusha
mov
mov
data16
mov
fsubl
mov
imull
fnsave
jge
mov
xlat
adc
dec
rcr
and
xchg
or
push
rorb
fstpt
lea
mov
dec
xor
push
out
sub
lods
out
pop
mov
or
jl
sahf
aas
dec
dec
adc
mulb
and
je
sbb
call
jnp
lret
and
lds
pop
adc
sbb
xor
dec
loop
leave
repnz
and
add
fcomps
jecxz
je
and
ret
ja
sub
add
adc
repz
pop
pop
mov
pop
jg
out
xlat
push
in
aam
sbb
add
mov
push
sub
jl
lods
inc
in
int
cmp
lahf
sub
mov
and
add
lahf
sbb
out
cwtl
push
scas
mov
loop
cmp
push
loopne
push
aad
pop
and
mov
fcoms
mov
lds
fdivs
jb
and
in
mov
xchg
leave
orl
pop
cmpsb
mov
xor
ja
jnp
lods
movsb
cmpsl
clc
push
cmp
jb
mov
jp
imul
jb
repnz
aas
cli
jg
imul
int
xchg
cwtl
cmpsb
sub
lret
pop
ret
sub
lcall
jae
out
jne
mov
cmpsl
inc
jae
push
fidivrs
jg
ret
data16
adc
test
enter
subl
in
push
pop
xor
add
and
scas
mov
cmp
xor
jg
imulb
mov
rcl
in
dec
and
daa
mov
or
call
daa
jl
sub
bound
out
mov
xchg
or
aad
lcall
mov
sarb
and
pop
and
mov
sub
movsb
jne
into
mov
iret
jg
ja
jg
pop
enter
movsb
leave
and
xorps
mov
enter
pop
daa
mov
jnp
test
jge
repz
inc
ror
mov
ja
xchg
mov
test
fucomp
mov
dec
shll
jns
fsubs
xchg
xchg
sub
mov
insl
pop
lret
mov
imulb
popa
pop
out
push
lock
rolb
sbb
sbbb
fs
inc
fisttpl
in
data16
adcb
aad
mov
shl
cmpsl
outsb
fmull
mov
scas
loope,pt
cmp
jns
fs
jmp
cwtl
sbb
inc
enter
cmc
push
inc
mov
pop
aad
xchg
push
movsl
mov
pushf
out
mov
jnp
popf
and
dec
lcall
inc
fnstenv
mov
sbb
jge
clc
dec
and
dec
hlt
sbb
dec
scas
lret
mov
test
adc
adc
pop
push
sarb
jecxz
das
call
cmpb
or
xor
fidivs
xchg
sub
xchg
imul
stos
imul
dec
scas
cmp
enter
xor
js
dec
iret
jge
jle
dec
mov
addl
mov
or
popf
sub
int3
push
aam
lret
pop
aam
cmp
sub
dec
jno
xchg
cltd
lock
lea
imul
loop
lret
xchg
std
test
push
dec
jnp
in
into
xchg
out
pop
xor
cmpb
cmove
insl
stos
popf
xlat
sbb
pop
insl
and
int
shl
jne
xor
mov
mov
inc
push
test
icebp
in
cmp
push
and
xor
cmp
mov
and
aam
shr
push
aad
jns
adc
cmp
push
cmp
push
xchg
jns
add
ss
sub
fwait
xchg
pop
sbbb
xor
fildl
popa
mov
sbb
mov
fstpt
pop
lock
xchg
push
xor
jns
mov
mov
and
scas
movsl
jno,pt
sub
insb
mov
inc
aaa
fwait
add
mov
je
push
inc
mov
aam
dec
inc
mov
inc
jge
popf
xchg
jae
lods
inc
popa
push
rolb
clc
jbe
lods
out
iret
cmp
add
insl
jmp
out
aam
rolb
in
mov
or
ret
xchg
mov
aaa
inc
sbb
ljmp
add
inc
ljmp
jmp
jecxz
test
addl
push
in
mov
popa
jle
or
out
push
mov
push
xor
jne
pop
test
fwait
out
xchg
mov
xchg
mov
loope
pop
mov
aad
push
movsb
adc
or
inc
in
test
add
pop
lds
testb
aad
jnp
outsb
adc
pop
push
jno
or
hlt
rcr
cltd
pop
pop
and
or
sbb
test
mov
fistpll
jne
xchg
nop
test
and
andb
push
inc
jp
out
fs
inc
jmp
fildll
mov
sbb
inc
sti
cmp
jno
push
sbb
xor
lods
inc
call
cmpl
mov
orl
idiv
pop
add
add
or
dec
shlb
mov
mov
pop
push
lods
mov
pop
incl
movsl
pusha
pop
andb
jmp
pop
mov
out
jbe
pusha
sbb
xor
pop
inc
or
mov
imul
imul
mov
shll
dec
xchg
stos
testb
add
pop
dec
stos
add
jo
ds
jbe
ljmp
push
movsl
nop
sub
fistps
test
in
int3
mov
and
aaa
dec
sahf
pop
dec
add
cmpsb
mov
push
push
push
mov
repnz
movsb
push
stc
xchg
aam
jnp
clc
lcall
mov
les
adcl
xor
fldt
mov
mov
fs
mov
test
xchg
sub
jae
jbe
sbb
push
sub
cmp
or
jbe
and
call
stc
in
push
xchg
inc
popa
subb
pop
and
arpl
or
pusha
jne
add
xor
imul
insl
dec
adcl
sub
jno
and
movsl
sub
rcl
lods
outsb
mov
inc
push
xchg
xor
push
imul
sub
sub
roll
or
les
inc
jb
mov
mov
in
xchg
out
dec
pop
sub
xor
adc
mov
cli
int3
and
cmpl
stc
jl
push
dec
loopne
xchg
pusha
stos
fadds
sarl
inc
xchg
repz
sub
adcb
mov
mov
jg
out
push
adc
jp
cs
add
mov
fcmovne
loope
fs
fldl
or
arpl
outsb
mov
int3
xchg
jg
inc
lcall
sub
jb
cwtl
sbb
daa
pop
stos
xchg
rep
lret
fs
xlat
xchg
rcl
inc
jno
ljmp
orb
mov
mov
aad
fdivrs
addr16
xchg
fidivl
mov
xchg
arpl
jne
mov
incb
andb
push
sub
pop
xchg
adcb
rcl
fwait
pop
and
clc
xor
addr16
outsl
dec
pop
sub
xorb
inc
imul
data16
mov
cltd
movb
rdtsc
addb
mov
sub
into
add
pusha
mull
leave
mov
out
pop
or
mov
sbb
shll
fmul
jnp
repz
test
dec
jle
push
xchg
inc
pop
nop
sti
ss
int
cli
push
jecxz
outsl
scas
xchg
xchg
mov
imul
sub
movups
mov
mov
scas
pushf
jo
inc
dec
ret
pop
adc
test
dec
gs
cmp
xor
fsubrp
scas
sub
and
mov
scas
fs
int
mov
je
loope
and
push
pop
dec
jb
std
out
clc
add
mov
fidivl
add
sbb
lcall
fucomip
enter
push
inc
pop
loopne
xchg
shlb
cmp
cmp
or
lods
mov
sbb
negl
or
stos
stos
int3
mov
mov
mov
pop
push
imul
in
xlat
cmp
cmpsl
int
adc
jp
mov
jno
sub
dec
in
mov
sub
fidivl
lods
aam
inc
ja
popa
in
scas
sub
icebp
push
cld
sub
test
sbb
fldenv
dec
out
enter
nop
cli
push
flds
add
push
adc
jae
stos
mov
es
adc
pop
push
lock
bsr
dec
cmc
xchg
iret
loop
insb
shll
loopne
cmc
in
inc
clc
imul
xchg
and
xor
jg
jne
push
fcoms
icebp
mov
enter
adc
andl
test
cli
dec
cli
jmp
sbb
sub
pop
sahf
mov
inc
aas
out
cmc
mov
xchg
outsl
sub
dec
rclb
push
pop
jg
out
test
or
les
mov
cwtl
jnp
and
xchg
push
pop
fldl
mov
and
jne
mov
hlt
and
pop
loop
xor
pop
lcall
push
jg
mov
lods
loopne
jb
fstpl
xchg
dec
cli
in
mov
addb
and
jl
push
clc
fdivs
cli
xchg
js
pushf
das
cmp
mov
jno
lea
sub
or
shr
sbb
rolb
movsl
mov
ss
adc
dec
leave
stos
pop
out
das
push
or
mov
xchg
or
dec
sar
cltd
cwtl
in
outsl
xor
stos
or
idivb
dec
test
notb
mov
and
vpandn
leave
sbb
or
sub
lds
hlt
popf
ljmp
pop
jl
xchg
lea
dec
mov
iret
lods
ljmp
mull
lock
mov
mov
popf
inc
sub
xchg
hlt
cmp
push
cmp
scas
or
in
push
mov
push
shr
in
xor
imul
insl
rorb
leave
pop
xchg
imul
jb
insl
push
out
in
and
pop
enter
mov
jecxz
fstpt
cmpsl
test
pop
push
push
or
dec
test
inc
inc
aas
push
repz
js
imul
pmuludq
and
lea
call
sub
cmp
mov
sbb
loope
jmp
sub
inc
jge
xchg
jmp
push
inc
dec
adc
xor
sbb
test
aam
outsb
mov
fdivs
lret
das
push
adc
and
cmp
cmp
jge
outsl
mov
pop
sub
push
les
add
lds
push
inc
repnz
add
adc
fnstsw
psubb
or
fcompp
or
pop
pusha
loope
xchg
xchg
stos
js
sti
insl
fidivrl
ret
sahf
inc
dec
push
and
mov
jmp
jnp
mov
cmovge
mov
rcll
jl
xor
cs
cmp
jne
push
xchg
xor
dec
sub
sahf
mov
xor
xor
andnps
test
or
fildl
add
pop
loopne,pt
pop
dec
jecxz
fldt
test
inc
and
mov
fidivrs
xchg
fwait
or
int
les
push
mov
enter
inc
insl
push
mov
imul
cmp
pop
add
repz
std
cld
lock
xor
xchg
pop
inc
sbb
notb
mov
xchg
inc
pushf
cs
dec
inc
mov
ss
sub
cmpl
cli
lcall
cmp
pop
jbe
lea
je
mov
gs
dec
sub
punpcklwd
xchg
jb
out
or
dec
mov
adc
or
out
and
es
cmp
jns
inc
gs
cmp
cmp
cmp
sbb
mov
out
lods
jl
out
mov
icebp
cmp
adc
fmull
jecxz
mov
dec
cmc
aaa
pop
and
enter
stc
mov
xorl
push
cld
mov
mul
sti
ljmp
outsl
popa
dec
movsl
or
or
adc
lcall
sub
pop
push
mov
add
xchg
aas
in
inc
js
xchg
xlat
daa
orl
outsl
mov
jne
push
ss
adc
ja
jg
sub
push
push
xchg
aas
mov
ret
outsb
mov
mov
popf
jo
aam
sbb
sbb
add
adc
fsubs
sub
jmp
xor
push
mov
and
addb
xor
add
lock
and
fs
insb
or
mov
adcl
xchg
xchg
mov
push
sub
jbe
adc
sbb
inc
dec
cs
aas
mov
out
push
inc
or
stc
ret
cld
cmp
dec
movsb
bound
jns
into
xchg
push
pop
js
subb
lods
imul
adc
xchg
int3
and
movb
cmp
sub
cmpsl
je
shlb
xorb
loopne
pop
lret
dec
cmc
movsl
sbb
jno
int
push
int
jns
mov
cltd
lcall
lahf
mov
and
in
repz
ds
ret
scas
cld
sahf
mov
inc
jae
les
adc
test
jg
lret
mov
add
push
fucomi
movsb
and
dec
push
das
jo
loope
test
push
repz
fsubrs
cmp
push
data16
inc
test
push
les
xorb
or
sub
pop
jle
pop
shll
jmp
pop
jne
test
pop
pop
xchg
dec
mov
stos
push
cmp
fcmovne
mov
bound
cmp
sub
es
and
fcoms
iret
loopne
sub
int3
popa
aaa
stc
icebp
xchg
cmp
call
lret
dec
push
add
sbb
sbb
ljmp
jl
push
fs
js
mov
int
add
pusha
nop
mov
jge
add
adc
xlat
aam
ret
jmp
fldl
and
mov
outsl
std
insl
jns
stos
push
imul
or
lahf
mov
sub
mov
stc
roll
sbb
jns
pop
mov
clc
xchg
adc
int
and
dec
or
xchg
insl
lahf
or
pop
stos
dec
repnz
aad
ja
ljmp
and
mov
inc
std
mov
push
lahf
mov
fldcw
bound
gs
adc
dec
or
mov
addl
ret
add
dec
push
pushf
mov
push
mov
mov
call
sbb
pop
push
call
xchg
mov
sbb
cmp
xorb
and
outsl
outsl
mov
ja
push
icebp
out
movsl
dec
jb
mov
adc
sbb
pop
push
mov
gs
testl
scas
scas
adc
dec
in
dec
rcl
ljmp
pop
stos
jo
jecxz
pop
adc
cli
frstor
dec
mov
push
xchg
out
and
jb
lcall
loop
xor
into
unpcklps
dec
in
orl
inc
jbe
sub
mov
je
in
adc
les
mov
loopne
mov
mov
insl
xchg
xchg
sbb
jne
bound
cltd
divl
mov
or
es
shll
sbb
xchg
sbb
loop
testb
bound
mov
gs
add
mov
xchg
sub
aas
xchg
sub
daa
movsl
popa
cmpsl
cmp
insb
and
not
lcall
cli
pop
lahf
bnd
inc
or
fcmovne
addb
andl
or
lea
pop
push
rcll
xor
jb
or
dec
sbb
mov
lret
xchg
ret
mov
pusha
les
xor
in
pop
sbb
lea
sbb
cs
or
in
mov
mov
in
ret
adc
xor
out
and
jo
or
xor
lcall
xchg
out
cli
hlt
push
mov
xchg
clc
scas
adc
cld
cli
hlt
in
mov
popf
xor
and
xor
rep
mov
or
dec
mov
adc
pop
das
icebp
sub
or
push
fwait
adc
fsubs
inc
rcrb
pop
pushf
aaa
mov
insb
inc
dec
sub
cld
fstpt
pushf
xor
mov
sbb
and
or
xor
dec
push
mov
cwtl
test
add
lock
xchg
inc
mov
jge
leave
mov
outsl
mov
adc
shl
mov
test
lahf
jo
xchg
dec
push
or
push
call
mov
call
lea
dec
xor
xchg
mov
enter
jnp
jmp
dec
mov
pop
ljmp
ja
lock
sub
jnp
or
in
or
bound
shlb
and
xchg
ljmp
aam
jbe
outsl
jle
aam
aam
push
out
push
outsb
inc
or
mov
stos
sub
icebp
scas
stc
clc
int3
jp
push
in
dec
lcall
jecxz
and
sub
jg
orb
aad
or
movsb
adc
aaa
popf
mov
dec
fs
jmp
stos
rcll
mov
int3
inc
out
pop
aam
and
xor
jae
xchg
push
daa
loopne
pop
popf
sbb
shlb
push
xor
out
xor
push
mov
cmc
mov
jb
aad
push
push
xchg
sub
mov
push
jle
mov
shlb
pushf
and
push
mov
das
and
xchg
cwtl
cs
dec
mov
sbb
xor
cwtl
and
mov
mov
inc
jmp
push
cli
and
adc
je
enter
outsb
divl
loopne
jp
data16
fxtract
rorb
mov
xchg
mov
push
stos
cmp
xchg
mov
mov
stc
sbb
jg
cli
dec
jns
push
inc
push
data16
pop
bound
and
sbb
repnz
lret
pusha
andb
ja
jo,pn
jp
aaa
lahf
lock
call
and
shll
adc
fldcw
stos
xorl
leave
push
aas
xchg
sarl
mov
testb
pop
rol
mov
test
imul
mov
fdivs
pop
pop
stos
clc
sarb
xchg
mov
aad
into
dec
push
arpl
push
hlt
shll
xchg
adc
stos
and
fistps
ret
sbb
mov
or
mov
dec
jle
sbbl
mov
orl
shll
lock
test
xor
out
test
and
scas
dec
sub
xchg
sahf
cmp
and
sub
icebp
push
xchg
mov
andb
jnp
adc
dec
xchg
jecxz
adc
xor
mov
jbe,pn
subl
inc
dec
jmp
mov
adc
repnz
inc
lods
sbb
xlat
jecxz
cmp
pushf
repz
xchg
scas
add
pop
shll
mov
add
cld
mov
push
stos
outsl
pop
push
addr16
sbb
icebp
adc
int3
out
jle
pop
test
or
push
mov
mov
jmp
pop
inc
sahf
cltd
daa
ret
test
dec
sbbb
ss
inc
iret
cmc
sub
mov
jmp
fdivrl
sub
int3
ds
out
inc
jg
loope
mov
sarb
daa
push
aad
mov
xchg
lret
test
loopne
xchg
jb
les
mov
pop
push
and
pushf
jg
cmovb
jp
rclb
lcall
mov
xchg
pop
add
ss
push
push
dec
mov
jno
and
lds
lods
xor
jo
in
ss
pop
in
or
adc
arpl
push
pop
mov
xchg
adc
fwait
out
cli
sub
ljmp
adc
xchg
pop
pop
in
adc
dec
xor
lret
jmp
mov
sti
imul
and
mov
movsl
imul
jp
fwait
mov
fidivl
loopne
popf
subb
and
push
mov
mov
mov
push
sbbl
inc
and
mov
mov
lahf
stos
inc
dec
pop
lea
push
popa
ja
adc
fwait
xor
ret
inc
aaa
xchg
std
xchg
push
fidivrl
mov
mov
js
popa
cmp
lods
xor
adc
mov
lds
xchg
dec
cltd
sub
lea
std
xor
ja
xchg
icebp
mov
push
jb
insl
push
xchg
mov
adc
pop
and
push
push
fidivrs
add
add
fstl
sarl
and
and
xorb
repz
mov
repnz
hlt
adcl
test
aad
es
dec
dec
inc
sub
cmpsl
int3
in
aam
mov
xor
cwtl
sbb
scas
and
loopne
jl
pop
push
aad
add
sub
loop
idivb
out
mov
fisttpl
push
sub
mov
test
scas
iret
mov
jnp
cs
scas
and
lock
mov
xchg
dec
xchg
xor
pop
ror
cmp
cmp
xchg
bound
lods
push
jg
jg
sbb
xchg
mov
mov
dec
test
push
jg
mov
mov
xchg
into
pop
add
cmp
jae
pop
add
in
int3
iret
mov
mov
aaa
ficompl
xchg
lea
aaa
aad
movsl
inc
adc
adc
ret
test
and
inc
aam
and
dec
test
stc
and
jno
aad
adc
push
call
out
xor
das
icebp
mov
divb
push
or
ret
push
ret
call
mov
pop
rcl
ficompl
popl
mov
mov
ficompl
dec
dec
js
popf
xor
cmp
rol
sub
xchg
outsb
push
sub
shrl
sub
and
aam
adc
cmpsb
jle
aas
stos
stc
fldenv
std
insl
idivb
pop
popa
insl
aaa
dec
adc
stos
jge
ja
outsb
bound
imul
adc
add
es
mov
inc
jecxz
xor
jecxz
popa
inc
jg
andb
sbb
cmpsl
xor
mov
xchg
pop
xchg
jle
or
push
push
sbb
into
lock
ja
outsl
arpl
shlb
push
fnstenv
dec
jne
addr16
pop
pop
pop
scas
loopne
cmpb
ret
pop
stos
push
mov
repnz
iret
call
mov
mov
popa
fwait
lea
adc
ja
sti
mov
in
pop
loop
out
dec
nop
add
add
movsl
inc
sbbb
movsb
test
cmp
mov
cmp
lret
mov
leave
scas
jg
loopne
les
aam
and
pushf
pop
xor
adc
mov
lods
in
push
aam
addr16
add
xchg
call
inc
psrlw
mov
mov
add
int3
push
sahf
sbbl
mov
and
pop
inc
jnp,pt
jae
icebp
out
sub
and
int
clc
sub
cld
imul
gs
sbb
leave
cmp
outsb
jne
dec
xor
adc
jne
xor
push
popa
es
mov
repz
adc
sahf
xchg
repz
mov
aaa
iret
sbb
inc
pusha
rorb
repz
adc
out
cmpsb
int
leave
mov
sar
mov
push
lds
pop
rclb
push
mov
inc
mov
pop
mov
addr16
movsb
push
mov
mov
or
popa
add
sti
cmp
or
push
add
mov
pop
outsl
outsl
mov
lcall
ret
lahf
ss
loope
leave
loopne
aam
cld
loope
test
inc
bound
fs
cld
sbb
inc
mov
and
shrb
popa
push
repz
sub
xchg
mov
das
fstpl
xchg
cs
mov
pop
aas
xchg
pop
add
hlt
xchg
dec
int3
rcll
out
mov
add
inc
adc
inc
xor
cwtl
scas
inc
leave
dec
xorl
fsub
out
mov
arpl
insb
movsl
sbb
cmp
lods
sti
push
xchg
pushl
fldl
sub
cs
daa
in
xor
lret
dec
or
xor
cmpps
adc
push
bound
js
arpl
repnz
das
jge
clc
mov
pop
dec
lods
xor
ljmp
mov
mov
or
adcb
loop
pop
xchg
mov
pop
mov
aad
xchg
xchg
je
cmpl
adc
fwait
mov
cmpsl
dec
in
out
mov
mull
aas
cs
xchg
pop
mov
dec
jne
insb
dec
fwait
inc
ds
sahf
rclb
or
mov
in
mov
add
sub
stc
pop
inc
mov
jno
sub
in
movsb
andl
arpl
in
sar
test
lock
mov
or
mov
in
aad
and
pop
inc
push
add
jmp
jne
xor
mov
cmpl
push
adc
mov
lcallw
xor
repz
cmc
pop
clc
insl
sub
idivb
jecxz
in
ds
cmp
std
cli
icebp
cmpsb
repnz
pop
lahf
scas
ret
mov
scas
or
pop
jp
jge
cmp
daa
lret
test
mov
cmp
pop
jno
push
jae
mov
pop
popf
xchg
mov
sbb
jbe
lret
or
mov
insl
or
jmp
rcll
add
fists
inc
cmp
add
cs
inc
ljmp
push
js
into
mov
outsl
jb
ficomps
fs
test
subb
or
jmp
inc
lods
fs
or
dec
cmp
mov
iret
mov
jbe
push
ljmp
xchg
mov
lret
in
loopne
mov
or
fwait
movsb
push
and
mov
sub
arpl
iret
add
add
outsl
dec
or
pop
ret
sbb
loopne
jbe
push
mov
xchg
ds
sbb
lret
jle
sbb
dec
data16
or
mov
add
add
imul
mov
out
jl
sbbb
adc
repz
enter
mov
mov
loop
fcoms
shlb
mov
mov
dec
ret
ja
fistps
jge
in
andb
int3
inc
xchg
mov
cmpsb
andl
jg
bound
in
call
xlat
lret
test
pop
ss
fdivp
push
sbb
fs
cwtl
mov
xchg
test
mov
lds
mov
mov
xchg
mov
cwtl
fldenv
cmc
aam
iret
enter
and
mov
cmp
out
push
scas
pop
mov
sbb
cs
sub
sub
pop
push
pop
pop
scas
adc
lret
push
push
mov
mov
stos
das
mov
cmpsl
jl
icebp
xchg
pop
push
lock
test
mov
int
aad
jno
stc
int
fisubrs
and
xchg
test
jne
ffree
sub
imul
sub
and
xlat
out
pop
push
jns,pn
daa
pop
leave
push
into
jecxz
lret
jge
fwait
mov
out
lahf
pop
and
enter
xchg
cld
sub
jnp
cld
popa
mov
ss
mov
push
sbb
cmp
data16
jb
cmc
push
jl
push
loop
aad
push
outsl
insb
dec
mov
lods
filds
jl
push
mov
dec
aas
dec
push
aam
mov
stc
out
adc
aaa
pop
mov
cmp
xchg
sub
icebp
push
jmp
mov
or
xor
movsb
mov
fcomps
mov
sti
xor
dec
cmpsb
fsubrs
pushf
mov
dec
adc
cs
sub
push
std
imul
mov
xchg
fadds
aam
inc
fldl
aam
popa
cli
lcall
mov
lock
or
mov
bound
jnp
mov
int
pcmpeqw
insl
mov
addr16
mov
adc
ret
in
pop
or
sahf
xor
fmulp
incl
in
inc
sub
jne
xor
inc
pop
daa
sbb
jg
jbe
add
mov
jae
imul
fcmovb
adc
out
mov
aam
cmp
push
es
cld
adc
cli
add
pushf
add
insl
jecxz
push
jp
bound
xor
das
xchg
sub
pop
sub
xor
int
inc
sahf
push
les
cmc
fcom
xlat
lods
imul
cli
aam
cmp
adc
push
negb
bound
fs
cmp
and
ret
popf
insl
outsb
aas
push
test
into
fstl
push
popf
push
fcoms
dec
in
ljmp
xor
mov
jno
notb
sbb
cld
and
xchg
pop
aaa
add
push
loope
lods
pop
ja
jne
sbb
fldz
dec
in
lret
push
neg
inc
sub
cltd
lret
and
cmp
or
xor
int3
filds
shrl
adc
dec
adc
or
and
push
stc
cmp
push
mov
mov
jnp
aas
mov
xchg
loop
test
jmp
or
fstpt
dec
movsb
push
in
add
push
adc
sub
jecxz
cmpsl
aam
cmpsl
lret
loop
clc
jne
fcomps
mov
loop
mov
jg
jbe
imul
cmp
inc
ret
add
sti
sub
imul
arpl
outsb
idivl
sarb
push
scas
jnp
pushf
scas
jmp
sbb
push
push
cmp
movsb
push
pushf
mov
cmp
test
aaa
xor
or
push
push
cs
sbb
sar
dec
hlt
inc
push
daa
mov
sbb
sub
jnp
loopne
in
add
movsl
lret
mov
cmpsl
cmp
sub
mov
and
ret
popa
bound
xlat
cmpsb
insl
fsubrs
jnp
cmp
hlt
xchg
jecxz
sar
out
fsubrl
mov
mov
int
aad
mov
sbb
movsb
mov
scas
in
sub
adc
ret
les
and
mov
mov
stc
sbb
push
adc
or
cmp
mov
sarl
sbbl
je
pusha
adc
jae
aas
jp
cmpsb
sub
je
cmpsl
es
data16
pop
test
out
xlat
mov
js
loopne
sbb
xlat
or
out
mov
mov
pop
jns
jo
popf
add
adc
aas
stos
mov
std
das
pusha
loop
lea
adc
add
out
dec
aas
dec
es
out
or
mov
fucomi
imul
xor
in
ret
lret
in
test
push
push
ror
fcompl
mov
xchg
imul
or
lds
lret
dec
cld
xor
sahf
sub
cld
mov
cmpsl
mov
dec
jo
xlat
fwait
aaa
js
jge
arpl
or
xor
inc
mov
call
add
flds
adc
sahf
loope
xchg
aam
shlb
sti
repz
mov
cli
xchg
insb
pop
icebp
aas
dec
in
pop
push
loopne
dec
and
lret
push
xor
notb
or
out
and
push
sub
iret
shlb
mov
xor
sbb
lret
cmp
lods
pop
and
hlt
das
repnz
lods
aaa
jl
xchg
pop
jae
mov
addr16
inc
and
lods
je
jp
sbb
mov
popf
cmp
jae
test
testb
push
sub
nop
xchg
out
clc
lret
loop
cmpsl
cmp
mov
or
push
lock
mov
mov
xchg
push
loop
pop
icebp
jl
aas
das
test
stc
mov
push
xchg
xor
mov
and
xlat
lea
cltd
rol
pop
imul
leave
inc
push
cmp
mov
sub
mov
repnz
fldt
subl
mul
mov
pop
js
inc
push
dec
cmc
mov
les
pop
in
adc
out
cmp
es
adc
mov
or
dec
xorb
push
idivl
push
add
hlt
lahf
outsb
inc
jo
dec
or
mov
pop
jmp
imul
scas
ja
adc
test
cmpsb
mov
sbb
inc
push
pop
mov
mov
sub
imul
mov
rcll
push
mov
push
inc
cld
pop
sbb
lea
lret
and
sub
jne
and
mov
addr16
hlt
fs
adc
ds
xchg
jge
std
inc
ret
jmp
jl
mov
cltd
shrl
mov
mov
mov
insl
mov
adc
fsubrs
push
xchg
mull
jp
loop
xor
jmp
dec
jmp
dec
in
jge
or
lret
pop
ret
pop
in
out
push
shrl
xchg
scas
xor
ret
movsb
out
mov
mov
xchg
cmp
push
insl
dec
jmp
call
push
mov
jae
mov
cwtl
mov
add
dec
fnstenv
or
ljmp
cld
xchg
or
popf
push
aam
push
adc
mov
inc
call
or
mov
push
jno
jle
mov
aam
pop
adc
and
hlt
aas
mov
in
cmp
mov
test
sub
push
cmp
outsl
idivl
out
cltd
sbb
adc
mov
or
and
inc
add
adc
mov
xchg
dec
out
push
hlt
push
jne
sub
inc
jecxz
andl
jmp
xor
mov
je
test
dec
call
fldl
hlt
mov
mov
pop
movsl
mulb
rol
xor
pop
loop
test
out
fstpt
dec
subl
lahf
jo
cmp
jl
mov
or
mov
addb
sbb
popa
aas
test
lahf
lcall
mov
cltd
push
sbb
icebp
ljmp
outsb
stc
ss
push
or
and
ss
imul
in
and
inc
xchg
sbb
mov
add
xlat
xor
data16
pop
cltd
push
dec
pop
xchg
popf
shll
jp
mov
cmc
adc
punpckldq
xor
jg
in
sub
inc
dec
lcall
daa
push
jg
or
data16
leave
stos
lds
push
mov
mov
ja
jae
mov
rolb
out
adc
repz
insl
test
or
adc
jp
movsb
das
xchg
andl
and
dec
fistpl
mov
jmp
push
mov
and
es
sbb
lock
fnstcw
xchg
jnp
adc
mov
scas
in
aam
leave
adc
out
xchg
lea
xlat
ret
dec
loop
leave
aam
rolb
jg
lret
push
lcall
ret
adc
notl
jl
cmp
and
mov
cmp
push
sbb
rolb
mov
outsb
add
pop
lds
add
in
ja
repnz
or
mov
inc
jne
std
jns
cmp
movb
fnstcw
xchg
mov
push
lret
pop
clc
in
dec
not
cli
pop
lock
sub
or
pushf
sahf
mov
cmp
mov
pushf
cmp
jb
mov
jmp
and
test
inc
das
pop
or
hlt
xchg
push
jmp
cmpsb
cld
cld
std
iret
add
jb
cmpb
fs
stos
and
xchg
or
mov
imul
jl
enter
leave
sbb
cmp
push
add
inc
sub
dec
mov
insb
jne
aas
stos
mov
add
test
xchg
inc
std
insb
jae
iret
dec
dec
sub
inc
inc
mov
mov
out
push
adc
sub
push
repz
lcall
in
arpl
push
imul
test
icebp
jbe
mov
shrb
mov
lret
cwtl
xchg
dec
push
bound
repz
add
push
jmp
adc
jle
enter
sub
xchg
sar
adc
mov
sbb
filds
sub
sbb
stos
mov
push
sbb
sub
into
mov
mov
cmp
pop
cmpsl
movsl
cmp
push
outsb
mov
aad
sahf
inc
jae
js
inc
jge
cmpb
adc
xchg
fnstenv
subl
arpl
stos
insb
in
xchg
mov
xchg
outsb
add
mov
jle
xchg
imul
int
outsl
popa
mov
xor
or
sbb
mov
jnp
mov
cmc
enter
test
xor
cmp
outsl
lahf
dec
adc
lods
xchg
xchg
stos
lods
jmp
or
fnstenv
mov
mov
test
stc
xchg
das
add
test
sub
out
scas
jb
fnstenv
push
lcall
icebp
cmpsb
andl
xor
push
push
jl
repnz
int3
jl
orl
sbb
scas
popa
pusha
push
inc
sbb
paddsw
mov
in
xchg
lcall
rorl
xchg
fadds
xor
sbb
test
or
loop
lods
jo
hlt
lret
arpl
pop
cmp
lock
xchg
out
pextrw
cltd
xchg
fdivl
push
outsb
sbb
push
xor
hlt
mov
fistpll
cld
jg
pop
out
and
pop
leave
ret
test
add
fimull
imul
mov
adc
mov
outsl
or
mov
fnstcw
movsb
jns
rclb
or
pushf
stc
out
sahf
push
aas
and
aad
les
inc
and
jge
push
mov
cmpsb
pop
int
mov
dec
fdivp
and
jg
push
inc
mov
cmp
add
inc
movsb
push
lods
int
aad
nop
dec
sub
cmp
or
rclb
push
xchg
ljmp
lods
xchg
mov
sub
adc
loopne
cmp
xchg
pop
dec
int3
add
mov
in
rcr
pop
adc
ret
icebp
icebp
pop
into
aad
add
divb
and
dec
ds
movswl
fdivr
fwait
add
pusha
ja
mov
in
mov
lcall
clc
fs
not
pop
aam
pop
jg
dec
jmp
inc
jae
dec
outsb
enter
in
dec
test
push
out
fldl
add
xchg
data16
or
inc
pop
cmc
inc
sbb
add
data16
xor
adc
popa
and
sarl
clc
mov
shl
add
mov
sub
inc
and
popf
and
xor
mov
pop
xchg
popa
jecxz
or
popl
fmuls
xor
xor
flds
pop
push
cmc
or
jl
adc
mov
push
loope
xchg
inc
jne
add
jne
dec
imul
inc
jo
jg
pop
lds
xor
stos
shr
loope
mov
popf
cmp
in
cmpsl
mov
lds
xchg
or
je
fiadds
add
push
ss
jne
mov
or
xchg
and
out
cmc
mov
push
pop
std
lods
mov
or
ss
ficompl
into
shrb
adc
pop
out
mov
icebp
jae
ja
push
and
shrl
add
push
mov
xor
sbb
sbb
lds
aad
pop
push
cmp
out
mov
std
jecxz
inc
cwtl
sbb
loopne
inc
out
push
adc
jmp
notl
lea
hlt
mov
stos
dec
fcmovbe
pop
lcall
jbe
dec
enter
sub
xchg
xor
sahf
fstpl
mov
shlb
pop
sbb
adc
sub
inc
push
cmp
lods
add
icebp
push
mov
test
popf
in
push
aaa
pop
pusha
dec
ss
mov
lods
fs
xchg
lds
fcompl
adc
outsb
ret
or
sbb
ss
add
es
nop
std
sub
push
jecxz
lret
or
cmpsl
bound
push
mov
inc
mov
addr16
loopne
and
adc
add
mov
mov
inc
movsb
pop
mov
xor
mov
insb
jbe
mov
daa
lods
push
jmp
mov
cmp
jp
aaa
mov
mov
xchg
mov
pusha
aad
mov
adc
sub
out
push
or
in
push
jns
stc
lcall
and
dec
sub
jb
xorb
and
cmpsb
cmpsl
gs
iret
xchg
popf
int3
daa
enter
pop
fnstsw
int
and
sbb
mov
sub
fnstsw
xor
movsl
mov
sbb
mov
outsl
jno
dec
fldt
stc
mov
add
mov
jbe
fsincos
cmp
push
mov
sarl
dec
pop
dec
mov
jae
xor
cmp
jns
cmpsl
loope
xchg
notl
jns
negl
repz
cmp
pop
pop
aad
add
or
or
cmp
mov
mov
push
inc
daa
les
add
jg
or
negl
or
jne
push
cmp
lods
push
jg
bound
jno
cmp
xchg
imul
cli
mov
repz
int3
mov
rclb
push
jge
aas
adc
cmpsb
adc
cmp
stos
inc
xor
lods
mov
mov
movb
mov
test
mov
pop
pop
fwait
xor
fmull
sub
jo
lahf
xchg
pop
push
roll
push
sbb
sar
icebp
test
adc
jae
dec
jno
inc
jp
pop
into
jl
mov
or
enter
mov
mov
push
dec
xchg
jl
push
cmp
pop
xlat
add
movsb
lret
sbb
ret
stos
lods
dec
std
mov
or
pop
es
sub
sub
mov
mov
lahf
push
push
or
mov
ret
mov
and
jge
arpl
xchg
cli
dec
push
push
lock
or
xchg
pop
imull
inc
sbb
sub
add
je
shlb
int
mov
in
cmp
ficoms
scas
jae
outsl
dec
xor
jae
mov
cmp
xchg
lea
fwait
repnz
mov
dec
inc
cmc
pop
add
iret
and
vprotd
mov
mov
out
outsl
out
mov
test
aad
push
or
in
jnp
aaa
mov
gs
fcmovb
mov
popf
push
hlt
cmc
ljmp
ret
mov
cmpb
mov
les
rclb
mov
dec
adc
xor
scas
mov
add
sub
mov
or
outsl
jge
inc
cltd
jp
cmp
imul
test
or
or
std
sbb
decl
pusha
dec
pop
ficompl
jmp
stos
flds
clc
adc
cmp
push
cwtl
rorb
add
shl
add
xchg
xchg
les
sub
and
out
pop
imul
sbb
adcb
mov
xorb
and
ret
push
jge
fwait
enter
push
mov
shrl
add
or
stc
and
add
scas
push
enter
sub
push
add
sbb
call
fidivs
shrl
pop
dec
fadds
cmc
jne
dec
mov
mov
sub
push
dec
mov
pushl
loopne
xor
xchg
icebp
enter
iret
pop
jno
mov
jae
pop
fwait
lods
sbb
add
mov
add
ljmp
sahf
out
xchg
xchg
xor
popa
sub
xchg
sub
push
test
cs
xor
mov
mov
lret
sbb
in
clc
add
add
out
ja
cmp
inc
xor
jnp
sbb
and
pop
cmp
xor
jbe
das
add
mov
sbb
inc
data16
pop
repnz
aam
add
fimull
int3
andl
enter
aam
dec
mov
push
add
add
fbstp
mov
jno
cmpsb
pop
pop
mov
jbe
mov
rcrb
sub
mov
fildll
outsb
adc
clc
pop
loope
xrelease
jmp
pop
fucomi
in
into
fwait
ss
xchg
shlb
or
aas
int
pop
cmp
subl
into
jno
and
mov
rcrb
cld
mov
stos
aad
adc
pop
das
rorl
not
sbb
and
adc
stos
sub
sbbb
ljmp
repz
push
fistl
lods
test
loopne
addb
or
push
in
sti
popa
add
das
shll
outsl
daa
nop
push
jecxz
cmp
fisubrs
outsb
jo
cmp
aas
daa
test
addr16
sbb
rcl
ds
outsl
pusha
dec
jne
pop
pop
mov
xor
inc
scas
in
fadds
and
movsb
sbb
mov
xchg
arpl
pusha
lahf
mov
sarb
ss
pop
xor
or
mov
fildl
scas
data16
or
inc
and
or
dec
pop
jg
je
inc
mov
sahf
pop
mov
sub
pop
aas
aas
or
inc
ds
mov
cs
into
jmp
mov
sub
outsb
push
aas
jns
pusha
or
aas
cltd
rsqrtps
add
lock
repz
mov
adc
mov
inc
push
push
push
nop
imul
ljmp
inc
mov
and
call
ss
push
adc
inc
xor
orl
add
outsl
loope
lods
sbb
scas
rclb
sub
cltd
leave
popa
jmp
mov
xor
repz
or
insl
or
test
mov
or
sub
pusha
dec
xchg
es
mov
mov
fcomps
loopne
or
cltd
add
inc
ss
xchg
ljmp
sbb
test
aas
push
push
mov
lret
movsl
jae
xchg
mov
push
pop
cmp
mov
dec
repz
xchg
pop
push
mov
push
outsl
dec
mov
and
das
test
add
and
mov
dec
ret
arpl
jb
mov
ds
es
iret
push
jne
push
or
inc
push
push
idivb
xor
adcb
adc
test
pop
fcoms
adc
xchg
xor
cmc
scas
dec
xor
mov
popa
shll
addr16
inc
sahf
pop
or
mov
add
aas
mov
mov
fwait
sub
mov
les
jecxz
rcll
call
pop
cmc
pop
es
push
push
mov
xchg
fwait
dec
push
lods
gs
das
mov
cmp
gs
into
fadd
subl
mov
imul
imul
sarl
mov
fsubrs
pop
ds
lahf
pop
push
nop
insb
mov
or
adc
inc
addb
popa
mov
ret
daa
mov
idiv
gs
cmpsl
popa
adc
add
mov
mov
push
pop
aas
dec
mov
adc
jbe
cltd
mov
mov
add
lods
aad
mov
iret
lock
sub
leave
add
popf
adc
adc
outsb
and
push
stc
movsb
pop
scas
xlat
lds
mov
hlt
test
bsr
cmp
inc
scas
sub
subl
int
cwtl
out
outsl
cmpsb
pusha
lea
push
frstor
dec
repnz
inc
ss
gs
adc
outsb
sub
xchg
enter
outsl
inc
dec
xchg
and
mov
mov
push
cmp
stc
jno
js
mov
pushf
negb
in
mov
outsw
mov
or
bound
cld
pop
scas
out
mov
ljmp
je
sub
cltd
jo
aad
out
lcall
insb
sub
mov
adc
jbe
dec
xchg
insl
lods
xchg
mov
leave
cmpl
or
jnp
cmc
int3
push
mov
cld
rcrb
adc
and
test
in
or
add
leave
add
lret
aam
sub
stos
sbbl
popa
arpl
mov
lock
cltd
jle
fcoms
aaa
push
xchg
jge
push
das
jo
insb
mov
test
sub
mov
shll
test
lds
inc
out
dec
cmp
adc
mov
pop
imul
mov
popa
sbb
data16
test
js
xor
loope
fnstcw
out
xchg
dec
push
xchg
push
add
in
js
lock
dec
jl
or
and
fimull
sbb
lahf
mov
mov
movsl
mov
dec
ja
jbe
xor
test
inc
add
cltd
movsl
mov
push
decb
jge
dec
repnz
ja
clc
mov
loopw
xor
scas
das
sub
ss
cmpl
pop
push
sub
setle
inc
cmp
push
cmpsb
mov
sub
sbbb
add
cmp
addb
je
daa
mov
ss
xchg
rcr
push
push
adc
xrelease
mov
jo
pop
mov
stos
clc
xchg
lea
test
mov
iret
dec
or
fistpll
les
push
xor
test
cmpl
jbe
mov
mov
in
sbb
call
mov
shrb
jno
or
fisubl
add
je
rcrb
jge
dec
cmpsl
adc
and
mov
mov
pop
adc
sti
add
inc
in
addr16
mov
adc
cmp
rcll
mov
jns
bswap
data16
xchg
mov
in
dec
addr16
pop
mov
test
adc
stos
mov
inc
or
je
stos
and
test
insb
xchg
push
dec
jecxz
push
shrl
cmp
and
adc
jbe
std
add
push
dec
xor
lcall
jmp
xor
push
outsl
and
xor
inc
mov
push
addl
inc
cmp
repz
ds
fnsave
jnp
loope
aaa
mov
push
jg
inc
pop
test
sub
mov
jecxz
call
das
icebp
negb
xor
jmp
loope
jne
and
repnz
bound
sbb
push
adc
jno
ljmp
jno
std
jmp
cmp
add
dec
pop
inc
dec
mov
in
push
loope
xor
aam
mov
cld
or
dec
cwtl
fldcw
pop
in
aas
jb
popf
shl
lods
es
pushf
cmp
repnz
negl
xchg
fistpl
test
mov
jns
mov
loopne
jbe
sti
xchg
mov
xor
sbb
in
les
push
mov
mov
or
movsl
fldt
dec
xchg
pop
inc
inc
pop
movsb
and
mov
jb
popf
mov
shrl
lahf
mov
push
rolb
inc
iret
inc
addl
inc
xchg
fcomps
jecxz
push
dec
jmp
into
mov
mov
ret
test
into
inc
mov
icebp
mov
lock
sbb
cmp
xchg
cwtl
enter
xor
inc
sbb
inc
inc
pop
arpl
fs
pop
push
ret
sbb
test
mov
sub
imulb
sbb
jbe
jno
lret
cwtl
jno
xor
pop
mov
ds
call
nop
ret
and
cmp
ljmp
leave
cli
ficoml
loope
jg
pusha
or
fptan
fwait
fs
pop
push
xlat
or
adc
push
inc
xchg
jecxz
outsb
in
stc
repz
ret
and
cmp
jle
out
push
outsb
outsb
sub
addr16
jecxz
lea
mov
push
and
sbb
das
scas
rolb
clts
mov
cmpsl
in
push
lret
xchg
je
pop
inc
or
in
dec
mov
push
jnp
das
or
lret
dec
adc
iretw
mov
pushf
pop
addr16
js
pop
fisubrl
sbb
mov
fldenv
enter
adcl
ret
pushf
movl
stc
jb
mov
mov
test
cltd
xchg
sub
push
fs
xor
or
out
jl
adc
clc
addr16
aaa
sbb
mov
push
mov
cmpsl
enter
adcb
add
js
mov
test
sbb
push
in
fstpl
lods
lcall
mov
push
xor
pop
pop
pop
in
divl
lock
push
mov
fcomps
pop
sub
nop
cld
or
add
addb
mov
xor
or
inc
rclb
mov
lret
mov
adc
loop
fs
inc
xchg
fstpt
cmpsl
arpl
pop
mov
testl
jne
cmp
loopew
mov
cmp
xchg
or
mov
negb
ficompl
ficoms
rclb
insb
mov
das
rcrl
or
xchg
cmp
insb
adc
push
insl
sarb
dec
repz
and
cwtl
sub
call
insb
cwtl
add
call
adc
sbb
lcall
loop
adc
call
lods
popw
lret
sub
inc
mov
cmpsb
lods
add
cwtl
rcrb
jl
xor
mov
bound
xchg
out
inc
pushf
push
loope
sub
shlb
add
sbb
lock
pop
hlt
rcrb
insb
out
sbb
cmp
out
and
pop
fiadds
dec
jne
cmp
int3
aas
enter
scas
lahf
cmp
xchg
xchg
incb
stos
pop
inc
pushf
xchg
es
sub
les
xlat
mov
mov
and
or
push
cld
push
mull
cmpsb
mov
les
scas
mov
cltd
data16
sarl
imul
pop
nop
adc
cmp
roll
ret
cmpsb
mov
sbb
xchg
push
cmp
jle
or
cli
jmp
dec
jb
mov
test
or
pop
push
addr16
jbe
inc
out
jae
das
daa
in
loop
nop
cmp
jbe
cmp
gs
popa
stc
dec
mov
inc
pop
or
dec
ror
sahf
cmp
xor
or
mov
cmp
mov
dec
leave
dec
jle
sub
mov
and
cltd
into
mov
cld
bound
sub
sbb
sbb
into
add
jge
inc
fwait
xchg
or
gs
mov
enter
fs
rorl
cmpsl
test
sbb
insb
sbb
in
push
xchg
lahf
pop
call
add
pop
jle
shr
pushf
xor
sbbb
fistl
out
insl
push
ljmp
dec
mov
imul
orb
xchg
xor
shrb
or
xor
lock
cmp
push
dec
sbb
cwtl
movsl
mov
xchg
push
ja
sbb
pop
sahf
xor
and
rorl
cmpsl
inc
filds
cmp
in
or
fidivrs
in
inc
ret
jmp
sbb
jle
or
jle
rclb
pop
inc
aam
xchg
adc
je
arpl
sub
dec
movsl
jp
adc
fildll
mov
push
mov
jecxz
xchg
imulb
out
add
enter
xchg
cld
inc
cmp
mov
mov
das
test
or
movl
xor
cmp
push
push
sbb
xchg
jg
insb
or
pop
loopne
or
cmp
push
push
sbb
mov
in
xchg
andl
cmc
sbb
imul
push
adc
clc
lds
cmpsl
jg
pop
lret
lods
int
mov
loop
adc
mov
das
jecxz
and
pop
lods
das
pop
stos
adc
jge
pop
pop
xchg
jmp
sub
mov
rcrb
sbb
int
sub
lahf
fcmove
xchg
mov
mov
jmp
mov
arpl
roll
nop
jp
mov
jg
ficoml
test
stos
rcl
or
mov
pop
add
push
add
xor
lods
andb
xchg
jecxz
xchg
filds
jle
movsl
into
loopne
jnp
call
shrb
push
test
pop
mov
mov
mov
or
insl
sub
mov
bound
mov
punpckhwd
test
sbb
jo
push
inc
aad
pop
xchg
cmp
xchg
lea
xchg
mov
sbb
jge
popa
sub
clc
mov
cmc
dec
mov
scas
cmp
add
xchg
add
sub
xchg
fstpt
sub
lcall
push
shl
add
pop
les
cmc
inc
pop
cltd
xchg
test
pop
inc
loope
aaa
andb
xor
xlat
adc
add
mov
add
in
adc
adc
lahf
adc
xchg
dec
js
cmp
idiv
pop
test
xor
js
or
xchg
dec
negb
jne
in
xchg
inc
outsl
mov
jnp
push
sub
scas
popa
mov
push
or
mov
push
fcmovu
popf
popf
add
fucomp
lret
sub
flds
js
mov
fildll
adc
adc
fcmovnb
bound
sahf
in
sub
in
mov
cmp
pop
fldt
mov
scas
gs
and
popa
cmp
mov
mov
test
and
xchg
in
lods
pop
sbb
scas
cmp
jge
lret
xor
mov
jno
adc
sub
fldenv
cmp
add
push
inc
ret
adc
loop
mov
mov
negb
mov
dec
pop
xchg
add
inc
rcrl
shl
jbe
dec
fnstsw
in
inc
xchg
adc
xchg
repz
fisubl
hlt
and
xchg
icebp
inc
dec
jb
clc
pop
sub
pop
scas
mov
dec
enter
mov
icebp
and
bound
cmpl
ja
and
push
jns
cmpsb
in
sbb
inc
movsl
gs
movsb
dec
inc
in
ret
lret
jg
lret
jmp
std
or
cmp
push
jae
and
cs
jg
xor
out
scas
xor
ds
ss
hlt
jb
mov
xchg
xor
mov
cmp
enter
or
imul
cs
in
lret
jl
mov
ret
test
jae
jns
cli
lds
mov
sub
sbb
pop
aad
out
mov
push
dec
jns
imul
and
lods
and
loope
lods
fsub
cmc
test
addb
pop
cmp
jnp
fsubrl
lret
mov
pop
inc
push
jb
push
xchg
subb
movsb
add
outsb
adc
adc
rcl
cmp
sub
xor
inc
sub
stos
dec
repz
sbb
nop
dec
jl
xchg
inc
mov
dec
repz
xchg
cmp
lret
fwait
jns
jle
push
xor
mov
lret
push
cmp
scas
cltd
adc
popf
test
mov
cmp
loope
jno
xchg
fs
jne
sbb
jnp
in
add
or
jmp
adc
cmp
xor
sbb
sub
sbb
lret
mov
xor
mov
int
mov
jmp
inc
loope
xchg
mov
and
jo
js
pop
adc
in
adc
mov
les
xchg
and
into
or
mov
fadds
push
mov
sbb
inc
test
pop
push
cmp
pop
mov
clc
loopne
fisttps
mov
pop
fs
adc
mov
lret
jmp
push
cmp
mov
sub
repnz
subl
mov
aas
aam
pop
add
aam
inc
bound
jnp
shll
mov
daa
sub
sub
and
mov
xlat
fcompl
insl
inc
int
mov
int3
ds
add
cmpsl
add
mov
out
and
jnp
int3
mov
faddp
test
lods
dec
adc
sbb
mov
loope
push
xlat
lods
in
pop
out
mov
or
int3
pop
pop
push
arpl
dec
int3
shrl
in
stos
adc
jp
xchg
jmp
pop
fisubl
or
xor
inc
inc
pushf
lcall
clc
push
cwtl
inc
loop
cwtl
mov
test
mov
xchg
mov
cmp
fxch
into
push
jb
repnz
push
sbb
push
enter
cmc
movsb
jle,pt
add
lret
xchg
call
or
inc
lret
mov
stos
mov
sahf
sbb
repz
popa
arpl
dec
mov
mov
or
and
aas
push
inc
fsubl
xchg
push
inc
mov
cmc
into
outsb
adc
iret
stos
mov
clc
mov
pop
mov
sub
pop
push
mov
push
sbb
sub
sahf
cmp
sahf
cmp
cmp
xchg
jnp
sbb
add
mov
sub
xor
sub
mov
lea
add
test
arpl
or
adc
test
adc
das
clc
inc
pop
inc
pop
hlt
mov
or
add
and
cmpsl
test
ret
jo
cmp
je
xchg
jp
mov
jg
popa
and
dec
or
or
ret
or
mov
dec
push
fistpll
jecxz
das
inc
test
outsb
inc
scas
mov
add
addr16
call
fcoml
xchg
pop
das
fmul
inc
push
push
inc
adc
sub
xchg
jmp
add
scas
sti
jno
leavew
out
lds
call
clc
scas
nop
hlt
cmp
mov
and
fldt
mov
in
ljmp
xor
jbe
stos
addr16
out
ss
into
jmp
in
xchg
dec
stos
sub
cmp
push
mov
clc
mov
push
in
mov
test
aad
mov
push
cmpsb
add
neg
adc
addb
cmp
outsb
ret
mov
adc
jl
xor
ja
sbb
add
xchg
inc
inc
inc
loopne
enter
aas
pop
lea
or
pop
fimull
in
int3
mov
in
sti
push
inc
fwait
jle
mov
out
in
xchg
ficomps
jno
fs
fwait
pushf
and
mov
xchg
fnstenv
stos
cld
ret
push
outsb
cmc
stos
push
push
push
xchg
jle
and
xor
pop
inc
inc
std
aas
adc
leave
repnz
fdivrl
pop
sbb
xlat
bound
push
jno
or
xchg
add
and
in
test
inc
aam
adc
cmp
sbb
xor
sbb
jp
insl
dec
xchg
jecxz
dec
ret
inc
lods
or
pop
roll
push
ss
xchg
jge
mov
sub
mov
xlat
xor
dec
add
or
loop
imul
stos
cmp
lret
xor
pop
ja
loop
popa
fsts
mov
mov
mov
in
cli
ss
mov
repz
and
insb
cmovle
xlat
lret
cmp
rol
add
jnp
out
hlt
jmp
ljmp
jb
std
js
sbb
iret
fisubs
inc
in
xchg
loope
xor
mov
lcall
ja
xor
add
out
push
aas
and
inc
cmpl
outsb
loop
push
lea
dec
stc
mov
cmpl
flds
inc
sbb
int3
fiadds
cwtl
bound
inc
int
jae
or
cmp
push
push
gs
sub
cld
cmovno
or
jg
mov
jae
lods
cmpsb
divb
fnsave
cmp
pushf
ret
mov
fdivrs
mov
sub
test
dec
daa
xor
gs
into
sti
ja
jae
mov
ficomps
int
je
mov
jns
roll
mov
addr16
sub
sbb
add
popa
pushf
xlat
aam
enter
and
mov
adc
out
sub
lods
dec
outsl
or
pop
xor
mov
jge
call
mov
ss
mov
fwait
repz
cwtl
jns
xchg
mov
inc
subb
lock
sbb
imul
jle
jb
fisttpll
push
push
mov
mov
mov
inc
sbb
and
push
sti
sbb
mov
cmpsl
cmc
test
outsb
xchg
out
jb
loopne
mov
add
lock
xor
push
test
sub
arpl
test
sub
in
xchg
pop
or
dec
and
mov
loope
sub
mov
in
pop
inc
stos
inc
inc
lods
test
push
out
mov
push
or
fldt
adc
sti
mov
push
clc
sbbl
cmpsl
add
sahf
xchg
into
or
leave
mov
stc
shl
lahf
nop
sbbb
mov
xchg
sub
sti
jns
rcr
rcrl
add
pop
lret
test
aam
lea
pop
in
fnstsw
pop
inc
or
xor
cmp
and
mov
in
cmp
cmp
rcr
sub
int3
add
mov
loope
leave
inc
out
stos
adc
lret
lret
mov
outsl
adc
sarl
lret
dec
mov
sarb
jae
stos
clc
and
out
out
jo
sbb
pop
shll
in
xchg
repz
mov
cli
dec
fistps
mov
pop
xor
cmp
xor
imul
xor
scas
cmpsl
das
adc
mov
pop
xchg
imul
shrl
xchg
add
xchg
mov
mov
pop
dec
xor
leave
dec
lret
stc
or
mov
sbb
enter
repnz
adc
fbld
ljmp
xchg
push
lods
divl
push
movsb
aaa
lret
aam
pop
mov
test
andl
loop
roll
mov
addr16
push
or
jnp
nop
adc
icebp
mov
mov
pop
add
push
pcmpgtd
clc
or
ret
add
dec
lods
loopne
out
mov
pop
rol
aaa
out
jb
cmpsl
lds
scas
lea
sti
into
sub
daa
aaa
loope
mov
mov
scas
daa
testl
pusha
push
movsl
lods
jl
sbb
test
cmp
stos
sbb
sbb
in
lahf
pushf
repnz
popa
inc
sbbb
jge
icebp
pop
stos
or
fstpt
fwait
repnz
dec
sbb
dec
xchg
lret
andb
js
fisubs
movsb
out
fcmovbe
xchg
pop
shl
pop
or
inc
pop
mov
xchg
fnstsw
scas
in
subb
iret
aad
lea
in
adc
jbe
push
jp
ljmp
cmpsl
mov
xchg
mov
mov
inc
shll
sbb
dec
and
adc
shlb
push
sub
xor
and
stos
shl
int3
jmp
out
mov
call
incb
mov
or
sahf
leave
icebp
dec
aaa
fs
leave
je
dec
dec
cltd
call
pop
les
mov
push
push
repnz
mov
xchg
sbb
cmp
