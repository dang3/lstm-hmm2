dec
int
add
int
add
int
add
int
add
int
add
int
add
lahf
add
lahf
add
int
add
enter
enter
enter
enter
enter
enter
enter
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
lahf
add
lahf
add
lahf
add
lahf
add
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
lahf
add
lahf
add
lahf
add
enter
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
lahf
add
lahf
add
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
lahf
add
lahf
add
enter
enter
enter
enter
enter
enter
lret
lahf
add
lahf
add
lahf
add
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lahf
add
lret
lahf
add
lret
or
addb
sahf
add
ret
lahf
add
lahf
add
lahf
add
int
add
int3
lahf
add
ret
add
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
lahf
add
lahf
add
ret
sbb
lahf
add
ret
jmp
lahf
add
ret
mov
lret
out
lret
xchg
lret
lret
or
orb
addb
sahf
orb
sahf
adcb
sahf
xor
sahf
xor
sahf
orb
sahf
adcb
sahf
addb
sahf
orb
sahf
addb
lahf
add
lret
or
sahf
add
scas
in
je
test
out
or
lock
out
test
sti
add
mov
cli
outsb
in
lret
movsb
mov
sahf
add
fcomp
add
lret
add
nop
fiadds
or
sahf
add
lret
lods
add
fiadds
or
sahf
add
lret
popf
add
xchg
fiadds
or
sahf
add
lret
mov
fiadds
xor
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
jge
fiadds
or
sahf
add
fiadds
and
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
push
add
lret
inc
add
fiadds
or
sahf
add
lret
sub
xchg
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
mov
lock
ljmp
mov
lock
ljmp
mov
ljmp
scas
stc
imul
sti
jo
mov
pushl
mov
cld
arpl
mov
repnz
out
movsb
mov
in
cmpsb
sahf
add
mov
ljmp
cmp
add
mov
ljmp
scas
aad
clc
lret
iret
mov
out
call
movsl
in
jnp
mov
sahf
add
mov
ljmp
scas
sahf
add
scas
clc
repz
in
cmp
lahf
in
addr16
gs
ljmp
mov
sahf
add
add
lret
rcr
fiadds
jp
fiadds
or
sahf
add
lret
rcr
add
lret
or
sahf
add
add
scas
fiadds
or
sahf
add
lret
movsl
add
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
add
lret
test
fiadds
test
sahf
add
lret
or
fiadds
xor
sahf
add
lret
or
fiadds
popf
mov
sahf
add
lret
or
fiadds
adc
sahf
add
lret
or
fiadds
nop
mov
sahf
add
lret
or
fiadds
jmp
lret
or
sahf
add
lret
or
sahf
add
lret
or
lock
scas
out
mov
sahf
add
mov
out
mov
sahf
add
mov
in
jno
mov
outsb
in
sahf
add
mov
in
jno
mov
outsb
in
sahf
add
mov
into
jo
test
sahf
add
mov
into
jo
test
sahf
add
scas
in
insb
in
lods
xor
lret
shrl
repz
in
filds
shrl
repz
in
fstpt
lret
shrl
repz
loopne
jmp
lret
shrl
repz
loopne
jmp
ror
add
scas
call
xor
lret
into
mov
in
loopnew
sahf
add
lret
jle
sahf
add
scas
cld
ja
mov
jbe
mov
std
addr16
sahf
add
mov
icebp
popa
in
in
add
add
mov
inc
les
dec
int3
test
push
rcrb
leave
pop
fcoms
sti
fs
imull
cmpsb
rep
out
mov
jmp
divb
lods
xor
repz
or
sahf
add
fiadds
or
fiadds
xor
fiadds
or
fiadds
and
fiadds
sbb
fiadds
adc
fiadds
or
loop
add
loop
add
loop
add
loop
add
loop
add
lret
aad
fiadds
int
fiadds
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
loop
add
lret
or
sahf
add
lret
or
sahf
add
loop
add
loop
add
lret
or
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
fiadds
jns
fiadds
or
sahf
add
lret
or
sahf
add
lret
jno
fiadds
gs
fiadds
or
sahf
add
lret
or
sahf
add
lret
pop
in
fiadds
cltd
loop
add
fiadds
or
sahf
add
loop
add
lret
or
sahf
add
lret
or
sahf
add
loop
add
fiadds
jns
fiadds
xor
in
fiadds
and
in
fiadds
or
lret
or
fiadds
std
in
fiadds
in
in
fiadds
or
sahf
add
lret
or
sahf
add
in
fiadds
cltd
loop
add
in
fiadds
or
sahf
add
loop
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
fiadds
add
in
fiadds
or
sahf
add
lret
or
sahf
add
in
fiadds
lods
in
fiadds
or
sahf
add
lret
aad
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
in
fiadds
jno
fiadds
gs
fiadds
xchg
in
fiadds
or
sahf
add
lret
or
sahf
add
in
fiadds
or
sahf
add
lret
aad
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
in
fiadds
insl
in
fiadds
push
in
fiadds
dec
in
fiadds
xchg
in
fiadds
xor
in
fiadds
adc
loop
add
in
fiadds
in
loop
add
lret
or
sahf
add
in
fiadds
icebp
in
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
in
fiadds
mov
fiadds
fldlg2
fiadds
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
mov
std
jbe
test
sahf
add
movsl
repnz
lret
in
std
jae
scas
in
jnp
lret
lock
sahf
add
scas
pushl
mov
mov
out
cmpsl
sahf
add
mov
mov
cmpsb
cmp
mov
ljmp
scas
ljmp
cmpsb
clc
ja
mov
icebp
outsl
or
icebp
insb
scas
test
sahf
add
mov
in
imul
stc
jo
test
addr16
insl
in
lret
loopne
cmc
popa
loopne
sti
addr16
sahf
add
mov
sahf
add
lret
loopne
cmc
sub
movsl
repz
mov
std
insl
in
lret
loopne
ljmp
in
add
mov
ljmp
cmpsb
ljmp
in
insl
in
lret
scas
mov
ljmp
cmc
sahf
add
scas
pushl
mov
sti
sub
lret
in
mov
icebp
fs
in
insl
in
lret
scas
cmpsb
divl
sahf
add
lret
repnz
ljmp
stos
in
jb
lret
repnz
mov
data16
mov
scas
cmpsb
icebp
popa
loopne
mov
scas
scas
lock
loopne
ljmp
scas
sti
jno
mov
sahf
add
scas
in
ja
mov
out
add
scas
pushl
mov
mov
out
mov
in
scas
lret
scas
mov
push
movsl
sahf
add
in
add
scas
in
sub
icebp
negl
arpl
test
pushl
mov
pushl
mov
icebp
insl
scas
lret
out
icebp
gs
scas
sahf
add
mov
pushl
mov
shrl
sahf
add
mov
sahf
add
negl
cmp
scas
test
repz
scas
mov
idivb
idivb
icebp
gs
scas
mov
scas
test
sahf
add
mov
sahf
add
lret
scas
lods
mull
sahf
add
lret
in
movsl
stc
imul
sti
jbe
mov
icebp
jo
lret
scas
movsl
std
gs
mov
in
cmpsb
sahf
add
mov
mov
mov
lods
cmp
stc
test
outsl
in
out
push
lret
out
in
addr16
out
in
sti
add
scas
out
in
movsl
in
scas
scas
out
or
in
imul
mov
add
mov
add
lret
leave
scas
repnz
out
ljmp
or
cmpsl
xor
sahf
lret
sti
mov
mov
test
jnp
scas
lock
mov
mov
sub
mov
xchg
or
mov
mov
repnz
in
and
scas
mov
insb
loopne
in
aas
movsb
mov
mov
add
sti
jno
out
in
add
mov
mov
repnz
in
add
mov
mov
repnz
add
test
push
or
lret
lret
mov
sahf
add
out
in
jg
lret
adc
fiadds
or
cli
fiadds
add
cli
fiadds
std
cli
fiadds
stc
cli
fiadds
cmc
cli
fiadds
icebp
cli
fiadds
in
cli
fiadds
jmp
cli
fiadds
loope
fiadds
fiadds
fsqrt
fiadds
or
fiadds
sar
fiadds
int
fiadds
leave
cli
fiadds
add
cli
fiadds
sar
add
cli
fiadds
mov
fiadds
mov
fiadds
lods
cli
fiadds
test
cli
fiadds
mov
lret
cli
fiadds
jne
fiadds
gs
add
fiadds
inc
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
in
add
fiadds
imul
fiadds
inc
in
add
in
add
in
add
in
add
in
add
in
add
in
add
fiadds
insl
out
add
fiadds
inc
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
fiadds
push
out
add
out
add
out
add
out
add
out
add
out
add
out
add
out
add
loope
add
fiadds
pop
loope
add
fiadds
xor
fiadds
and
fiadds
adc
fiadds
add
loope
add
movsb
icebp
jbe
stos
in
jbe
mov
repz
movsb
icebp
jbe
movsl
cld
sub
movsl
repz
out
insl
repz
clc
insl
or
cld
jbe
mov
clc
insl
or
cld
outsl
loopne
ljmp
stos
mov
out
cmpsl
sahf
add
scas
cld
push
mov
ljmp
lret
mull
std
arpl
mov
sahf
add
mov
cld
insl
loopne
cli
sub
movsl
repz
std
lock
movsl
repz
cmpsl
jp
movsl
in
ja
in
insl
in
lret
cmc
mov
sti
addr16
in
insl
in
lret
cmc
lods
out
arpl
cmpsb
mull
test
repz
scas
repz
sahf
add
scas
std
push
movsl
lock
movsl
mov
ljmp
popa
jmp
test
sahf
add
scas
std
ja
mov
in
data16
mov
in
movsl
stc
jno
movsl
ljmp
mov
pushl
scas
in
sub
movsl
repz
mov
mov
out
cmpsl
sahf
add
mov
icebp
jo
cmpsl
mov
hlt
lret
icebp
movsl
in
insb
repnz
lock
insl
in
lret
icebp
movsl
in
insb
repz
in
insl
hlt
mov
icebp
outsl
or
in
rep
cld
insl
loopne
cli
sub
movsl
repz
scas
out
jb
mov
in
scas
test
sahf
add
scas
ljmp
movsl
repz
scas
ljmp
mov
in
jbe
stos
clc
insl
repz
repz
stos
in
jbe
mov
icebp
outsl
or
out
repz
sahf
add
movsl
stc
imul
jmp
scas
in
jbe
mov
std
insl
in
lret
in
stos
call
jbe
mov
ljmp
mov
cld
imul
sahf
add
cmpsb
imull
movsl
in
ja
in
insl
in
lret
jmp
cld
jno
lods
ljmp
stos
mulb
mov
sahf
add
mov
jmp
loopne
cli
push
out
cmpsl
sahf
add
movsl
clc
ja
mov
in
addr16
lods
mov
out
out
loop
repz
scas
in
outsl
in
mull
test
sahf
add
stos
out
in
repz
mov
pushl
test
sahf
add
stos
out
rep
clc
fs
lret
out
out
loopne
cmc
addr16
lods
icebp
jo
cmpsl
mov
out
cmpsl
sahf
add
stos
repnz
in
out
rep
clc
fs
mov
std
insl
in
lret
out
cld
jo
scas
repnz
mov
lock
movsl
mov
ljmp
ja
in
loopw
in
imul
std
arpl
scas
ljmp
lret
out
in
ja
in
loopnew
std
push
movsb
stc
imul
in
sub
mov
in
ja
in
ja
test
arpl
scas
mov
out
cmpsl
sahf
add
movsl
in
ja
in
jo
mov
repz
movsl
in
ja
in
arpl
mov
out
loop
repz
movsl
in
ja
in
insl
repnz
in
sub
mov
in
ja
in
data16
cmpsb
ljmp
test
sahf
add
movsl
icebp
gs
cmpsl
sahf
add
mov
jo
cmpsl
sti
pusha
hlt
cmpsb
bnd
mov
repz
stos
in
insb
out
in
ja
in
insl
in
lret
in
repz
lods
icebp
jo
cmpsl
mov
in
sahf
add
movsl
repz
movsb
ljmp
lret
in
cli
imul
icebp
gs
test
sahf
add
mov
mov
hlt
lret
loop
pushl
mov
mull
in
insl
in
lret
loop
in
jbe
scas
std
insl
icebp
mov
sahf
add
movsl
pushl
mov
in
loop
repz
mov
lock
mov
std
insl
in
lret
jecxz
lock
repnz
loopne
mov
rep
sahf
add
test
sub
scas
cli
imul
out
imul
imull
icebp
outsl
or
repz
stos
repz
cmc
data16
jmp
mov
popa
out
cmpsl
sahf
add
mov
cld
insl
loopne
cli
sub
movsl
repz
scas
call
jbe
mov
repz
scas
jmp
cmc
mov
in
jbe
mov
mov
out
cmpsl
sahf
add
scas
jmp
cmc
test
sti
jo
test
sahf
add
ljmp
mov
scas
add
stc
scas
add
repz
add
sahf
add
sahf
add
cli
lods
add
repnz
add
std
lods
add
std
scas
add
rep
add
clc
scas
add
std
stos
add
rep
add
movsl
lock
movsl
repnz
stos
lock
xchg
xlat
insb
cmc
scas
in
insb
loopne
imull
stos
repnz
mov
ja
mov
sahf
add
movsl
lock
movsl
repnz
stos
lock
xchg
xlat
insb
cmc
scas
in
insb
loopne
imull
stos
repnz
scas
icebp
add
stos
ljmp
movsl
clc
jbe
stos
in
fldl
rep
in
insl
out
ret
mov
ljmp
mov
out
in
lret
push
int
sahf
add
add
fiadds
cmp
fiadds
sub
clc
fiadds
leave
clc
fiadds
add
clc
fiadds
mov
fiadds
mov
clc
fiadds
mov
fiadds
cmp
sahf
add
fiadds
gs
fiadds
push
sti
fiadds
or
into
xor
push
adc
dec
sahf
test
ja
or
pushf
add
lret
or
je
js
push
adc
xorl
stos
lgs
or
out
ljmp
dec
adc
stc
sahf
ret
sub
jl
addr16
adc
mov
xor
dec
and
and
mov
push
rcrb
dec
lds
fldenv
or
fmuls
mov
push
lret
sahf
push
rcrb
add
movsl
lock
mull
lret
ljmp
inc
movb
inc
leave
cltd
fadds
lret
lret
inc
leave
test
inc
ret
dec
aad
mov
inc
rorb
faddl
cwtl
mov
add
mov
clc
jbe
stos
in
fldl
rep
in
insl
out
ret
movsb
cli
insl
idivb
fnsave
mov
sti
jo
mov
imull
stc
insl
out
lret
shlb
in
fldl
rep
in
insl
out
ret
movsb
cli
insl
idivb
in
addr16
mov
imull
lret
loop
in
jno
in
jp
lret
mulb
icebp
insb
scas
scas
out
or
out
outsb
out
mov
out
or
cwtl
add
mov
mov
out
test
lock
stos
call
imul
movsb
and
movsl
lock
movsb
ljmp
mov
sahf
add
scas
clc
repz
in
cmp
mov
stc
addr16
mov
sahf
add
movsl
in
jbe
ljmp
fisubrs
mov
add
movsl
lock
movsb
ljmp
ljmp
loopne
imull
in
das
idivb
in
outsl
lods
mov
std
insl
in
cli
jnp
out
gs
ljmp
mov
insb
cmc
scas
lock
xchg
insb
out
idivb
mov
test
push
mov
sahf
lret
sti
mov
mov
insl
repnz
xchg
or
sti
insb
cmc
out
addr16
lods
ljmp
rclb
or
lock
movsb
ljmp
ljmp
loopne
imull
in
das
idivb
in
outsl
lods
mov
std
insl
in
cli
jnp
out
gs
ljmp
mov
icebp
fs
ljmp
in
mov
insl
repz
in
add
sahf
add
fiadds
mov
pushl
xor
movsl
lock
movsb
ljmp
ljmp
shlb
sahf
add
fiadds
or
sahf
add
fiadds
in
fiadds
or
sahf
add
lret
fcos
fiadds
push
fiadds
or
sahf
add
lret
sar
fiadds
pop
jle
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
fiadds
or
sahf
add
jge
add
lret
or
sahf
add
jl
add
lret
or
sahf
add
lret
or
sahf
add
lret
cltd
fists
movsb
cli
add
cltd
fists
test
lods
pop
mov
mov
in
cmpsb
sahf
add
movsl
lock
in
ljmp
lret
repz
std
je
lret
idivb
lods
sub
cmpsb
repnz
sahf
lret
sti
mov
mov
test
jnp
scas
lock
sahf
out
in
mov
sub
mov
xchg
or
sahf
add
hlt
xchg
or
hlt
xchg
or
mov
lock
stos
stc
addr16
stos
int
repz
xchg
or
movsl
std
ja
scas
lock
cmpsb
icebp
popa
loopne
imull
in
jo
lods
mov
jb
in
daa
repnz
in
and
scas
mov
insb
loopne
in
aas
movsb
mov
mov
or
mov
xchg
ds
test
data16
hlt
xchg
or
cmpsb
mov
push
scas
sti
mov
mov
mov
ja
scas
xchg
or
movsl
std
arpl
mov
mov
insl
out
movsb
sti
popa
cmc
mov
std
outsb
out
mov
xchg
jnp
mov
out
loopne
jmp
lret
add
mov
sti
jo
mov
jmp
lret
add
mov
out
out
lods
icebp
jo
stos
ljmp
scas
sahf
add
mov
out
jecxz
sti
popa
cmc
lret
iret
mov
lret
scas
jmp
lret
iret
mov
out
out
lods
icebp
jo
stos
ljmp
scas
jmp
lret
iret
mov
out
out
lods
icebp
jo
stos
ljmp
test
sahf
add
mov
out
clc
mov
lock
mov
icebp
insb
or
ljmp
mov
outsb
in
ljmp
out
or
jmp
sarl
in
dec
out
scas
jmp
in
sahf
add
mov
cli
outsb
in
lret
sarl
in
xor
lret
sarl
in
xor
mov
mov
add
scas
ljmp
scas
in
addr16
jmp
mov
out
or
ret
lret
movsb
mov
out
or
sti
add
std
daa
loop
std
sub
mov
sahf
add
stos
imulb
in
insl
in
lret
loopne
repnz
movsl
repz
movsl
in
imul
lret
enter
loopne
repnz
out
movsl
cmc
add
lret
or
popa
std
jle
popa
std
mov
sahf
add
lret
pop
cli
cltd
jne
stos
nop
in
cmp
repz
mov
std
jmp
pop
cli
pushf
mov
inc
or
jb
jnp
and
or
dec
xchg
stos
xchg
or
das
jl
out
in
xlat
and
jae
cs
pop
mov
xchg
push
inc
sbb
inc
outsl
sarb
testb
adc
cmc
data16
xor
ljmp
sti
mov
xchg
lahf
push
pop
cmpsb
cwtl
popa
loop
xchg
clc
je
xchg
cmp
dec
gs
xlat
repz
popf
ds
push
lcall
jg
cmpsl
jnp
sub
in
push
sub
push
add
scas
bound
inc
inc
dec
dec
testl
mov
fwait
dec
lret
dec
mov
mov
pop
and
mov
mov
mov
pop
xor
xchg
les
mov
sub
sub
inc
mov
mov
xchg
dec
lcall
das
jae
jg
add
and
and
cltd
jp
xor
xchg
cltd
push
nop
jecxz
hlt
jge
div
or
cmpsb
cli
xchg
adcb
imul
cli
sti
xchg
lret
insb
pop
cwtl
outsb
cli
outsl
lahf
sbb
xchg
adc
xchg
testl
sub
imul
std
inc
daa
pop
xlat
inc
pusha
enter
jb
dec
mov
xchg
fldcw
sub
cmc
lret
arpl
and
dec
push
pop
inc
aas
in
push
dec
cmpsb
jp
dec
shr
and
inc
jge
lock
fdiv
out
inc
xlat
popf
xor
xchg
mov
mov
pop
ljmp
xor
and
cs
xor
sbb
inc
sub
bound
xchg
imull
sub
xchg
and
mov
jns
cwtl
lea
sub
sbb
das
jbe
lea
cs
inc
push
add
inc
jno
sar
add
mov
hlt
js
add
xchg
xchg
cmpsb
fs
or
push
cltd
jg
pop
xchg
repnz
imul
imul
cld
cmc
dec
lods
sti
xor
repnz
cmc
insb
not
dec
cld
popa
loope
mov
mov
adc
inc
gs
adc
and
inc
bound
dec
aam
pop
dec
mov
sarl
inc
dec
jo
and
movsb
pop
int3
sub
pop
loope
fcmove
rcll
loope
lcall
adc
lock
je
inc
or
dec
clc
mov
mov
notb
mov
xchg
mov
scas
in
fwait
push
aas
icebp
and
test
nop
sub
test
dec
shlb
inc
cs
fs
pop
xor
cli
cltd
cmpsl
cmp
out
sbb
pop
repz
int3
xchg
sahf
mov
lods
cltd
jo
popf
sahf
pop
add
es
loope
jns
shrl
push
sbb
mov
ss
inc
or
dec
test
sub
jns
inc
push
dec
inc
sbb
daa
hlt
pusha
mov
sub
addr16
xchg
mov
mov
cwtl
fs
lahf
adc
sti
call
xor
repnz
sub
aad
lcall
in
stc
movsl
jbe
ror
testl
mov
dec
roll
icebp
inc
xor
inc
push
and
inc
push
cmp
mov
mov
sub
es
dec
mov
test
inc
push
lods
inc
and
cmp
adc
pop
adc
je
mov
inc
xchg
rcrl
pushf
das
sahf
lret
or
sahf
add
lret
xchg
lret
or
sahf
add
lret
xchg
sahf
add
lret
mov
sahf
add
lret
or
add
sahf
add
lret
mov
sahf
add
lret
xchg
xchg
add
lret
mov
popl
xchg
lret
lcall
add
lret
loop
in
add
lret
inc
lret
or
add
lret
or
sahf
add
lret
or
add
lret
or
add
lret
test
lcall
lret
or
sahf
add
lret
test
cltd
add
lret
mov
lret
add
pop
add
enter
into
lahf
add
ret
sbb
sbb
mov
add
lret
or
add
lret
test
fwait
add
lret
mov
xchg
add
lret
mov
xchg
add
lret
or
cltd
add
lret
jle
popa
add
popa
add
jle
popa
jge
xor
sahf
add
xor
in
ja
lods
mull
scas
lock
cmpsl
sti
outsl
out
mov
sahf
add
lret
nop
into
sahf
add
into
sahf
add
into
sahf
add
into
sahf
add
into
sahf
add
into
sahf
add
into
sahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
into
lcall
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
movsb
fiadds
sbbb
add
movsb
fiadds
sbbb
add
movsb
fiadds
test
sahf
add
movsb
fiadds
xchg
sahf
add
movsb
fiadds
xchg
sahf
add
movsb
fiadds
mov
fiadds
mov
fiadds
mov
fiadds
mov
fiadds
fcomps
add
fiadds
pop
sahf
add
movsb
fiadds
mov
sahf
add
cwtl
sahf
add
movsb
fiadds
nop
cwtl
sahf
add
movsb
fiadds
xchg
cwtl
sahf
add
movsb
fiadds
xchg
cwtl
sahf
add
movsb
fiadds
xchg
fcomps
add
fiadds
xchg
ret
sahf
add
movsb
fiadds
xchg
ret
sahf
add
movsb
fiadds
cltd
cwtl
sahf
add
movsb
fiadds
cwtl
cwtl
sahf
add
movsb
fiadds
fwait
cwtl
sahf
add
movsb
fiadds
lcall
add
movsb
fiadds
pushf
xlat
sahf
add
movsb
fiadds
lahf
ret
sahf
add
movsb
fiadds
sahf
ret
sahf
add
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
movsl
fcomps
add
fiadds
cmpsl
ret
sahf
add
movsl
fiadds
cmpsb
ret
sahf
add
movsb
fiadds
test
movsb
fiadds
test
sahf
add
movsb
fiadds
stos
cwtl
sahf
add
movsb
fiadds
stos
cwtl
sahf
add
movsb
fiadds
lods
fcomps
add
fiadds
scas
ret
sahf
add
movsl
fiadds
scas
ret
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsl
fiadds
mov
sahf
add
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsl
fiadds
mov
movsb
fiadds
rol
add
movsb
fiadds
rol
add
movsb
fiadds
ret
ret
sahf
add
movsb
fiadds
ret
add
movsb
fiadds
add
movsb
fiadds
sbb
add
movsb
fiadds
mov
add
movsb
fiadds
leave
ret
sahf
add
movsb
fiadds
enter
sbb
add
movsb
fiadds
lret
add
movsb
fiadds
int
sahf
add
movsb
fiadds
int3
ret
sahf
add
movsb
fiadds
iret
ret
sahf
add
movsb
fiadds
into
ret
sahf
add
movsb
fiadds
rol
sahf
add
movsb
fiadds
rol
sahf
add
movsb
fiadds
rol
sahf
add
movsb
fiadds
rol
sahf
add
movsb
fiadds
aad
sahf
add
movsb
fiadds
aam
sahf
add
movsb
fiadds
xlat
ret
sahf
add
movsb
fiadds
ret
sahf
add
movsb
fiadds
fld
sahf
add
movsb
fiadds
fadd
sahf
add
movsb
fiadds
fcmovnb
sahf
add
movsb
fiadds
fcmovb
sahf
add
movsb
fiadds
ffree
sahf
add
movsb
fiadds
fadd
sahf
add
movsb
fiadds
ffreep
sahf
add
movsb
fiadds
faddp
sahf
add
movsb
fiadds
loope
sahf
add
movsb
fiadds
loopne
sahf
add
movsb
fiadds
jecxz
sahf
add
movsb
fiadds
loop
sahf
add
movsb
fiadds
in
sahf
add
movsl
fiadds
in
sahf
add
movsl
fiadds
out
sahf
add
mov
sahf
add
mov
sahf
add
movsb
fiadds
call
movsb
fiadds
jmp
sahf
add
movsb
fiadds
ljmp
add
ret
sahf
add
movsb
fiadds
in
ret
sahf
add
movsb
fiadds
out
ret
sahf
add
movsb
fiadds
out
ret
sahf
add
movsb
fiadds
icebp
fcomps
lock
repz
repnz
cmc
fcomps
hlt
fcomps
neg
pushf
add
movsb
fiadds
neg
pushf
add
movsb
fiadds
stc
fcomps
clc
fcomps
sti
fcomps
cli
fcomps
std
fcomps
cld
fcomps
fcomps
fcomps
add
fiadds
add
add
fcomps
add
xchg
sahf
add
movsb
fiadds
add
movsb
fiadds
add
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
or
fiadds
or
fiadds
or
fiadds
or
fiadds
or
movsb
fiadds
or
sahf
add
movsb
fiadds
sets
add
cwtl
sahf
add
movsb
fiadds
adc
sahf
add
movsb
fiadds
adc
sahf
add
movsb
fiadds
adc
sahf
add
movsb
fiadds
adc
sahf
add
movsb
fiadds
adc
movsb
fiadds
adc
sahf
add
movsb
fiadds
pop
ret
sahf
add
movsb
fiadds
push
ret
sahf
add
movsb
fiadds
sbb
sahf
add
movsb
fiadds
sbb
sahf
add
movsb
fiadds
sbb
mov
sbb
add
movsb
fiadds
sbb
movsb
fiadds
sbb
sahf
add
movsb
fiadds
pop
ret
sahf
add
movsb
fiadds
push
ret
sahf
add
movsb
fiadds
and
mov
add
xlat
mov
add
xlat
mov
add
xlat
mov
add
movsb
fiadds
and
sahf
add
movsb
fiadds
daa
ret
sahf
add
movsb
fiadds
es
sahf
add
movsb
fiadds
sub
sahf
add
movsb
fiadds
sub
sahf
add
movsb
fiadds
sub
sahf
add
movsb
fiadds
sub
sahf
add
movsb
fiadds
sub
movsb
fiadds
sub
sahf
add
movsb
fiadds
das
ret
sahf
add
movsb
fiadds
cs
sahf
add
movsb
fiadds
xor
sahf
add
movsb
fiadds
xor
sahf
add
movsb
fiadds
xor
sahf
add
movsb
fiadds
xor
sahf
add
movsb
fiadds
xor
movsb
fiadds
xor
sahf
add
movsb
fiadds
aaa
fcomps
add
fcomps
add
xlat
sahf
add
movsb
fiadds
cmp
sahf
add
movsb
fiadds
cmp
sahf
add
movsb
fiadds
cmp
sahf
add
movsb
fiadds
cmp
movsb
fiadds
cmp
sahf
add
movsb
fiadds
aas
xlat
sahf
add
movsb
fiadds
xlat
sahf
add
movsb
fiadds
inc
xchg
sahf
add
movsb
fiadds
inc
xchg
sahf
add
movsb
fiadds
inc
rcrl
add
sahf
add
movsb
fiadds
inc
cwtl
sahf
add
movsb
fiadds
inc
cwtl
sahf
add
movsb
fiadds
inc
xchg
sahf
add
movsb
fiadds
inc
lods
sahf
add
movsb
fiadds
dec
out
sahf
add
movsb
fiadds
dec
ret
sahf
add
movsb
fiadds
dec
rorl
add
mov
sbb
add
movsb
fiadds
dec
fmuls
add
mov
sbb
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
fcomps
add
add
movsb
fiadds
push
ret
sahf
add
ret
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
popa
fcomp
add
movsb
fiadds
pusha
fcomp
add
movsb
fiadds
arpl
faddl
sbb
add
movsb
fiadds
fcomps
add
add
movsb
fiadds
fcomps
movsb
fiadds
data16
add
pushf
add
movsb
fiadds
push
movsb
fiadds
imul
add
movsb
fiadds
push
pushf
add
movsb
fiadds
insl
ret
sahf
add
movsb
fiadds
insb
ret
sahf
add
movsb
fiadds
outsl
ret
sahf
add
movsb
fiadds
outsb
ret
sahf
add
movsb
fiadds
jno
sahf
add
movsl
fiadds
jo
sahf
add
ret
sahf
add
movsl
fiadds
jb
sahf
add
movsl
fiadds
jne
sahf
add
movsb
fiadds
je
sahf
add
movsb
fiadds
ja
sahf
add
mov
sahf
add
fiadds
jns
sahf
add
movsb
fiadds
js
sahf
add
movsb
fiadds
jnp
sahf
add
movsb
fiadds
jp
sahf
add
movsb
fiadds
jge
sahf
add
movsb
fiadds
jl
sahf
add
movsb
fiadds
jg
sahf
add
movsb
fiadds
jle
sahf
add
lret
or
sahf
add
movsb
fiadds
sbbb
add
movsb
fiadds
sbbb
add
mov
sahf
add
fcomps
add
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
fcomps
add
mov
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
mov
movsb
fiadds
movsl
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
fcomps
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
movsb
fiadds
mov
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
rcrb
add
cwtl
sahf
add
movsb
fiadds
ret
add
movsb
fiadds
lds
fiadds
les
fiadds
cwtl
sahf
add
movsb
fiadds
cwtl
sahf
add
movsb
fiadds
leave
cwtl
sahf
add
movsb
fiadds
enter
sbb
add
movsb
fiadds
lret
add
movsb
fiadds
int
sahf
add
movsb
fiadds
int3
cwtl
sahf
add
movsb
fiadds
iret
cwtl
sahf
add
movsb
fiadds
into
cwtl
sahf
add
movsb
fiadds
rol
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
loopne
sahf
add
cwtl
sahf
add
movsb
fiadds
loop
sahf
add
movsb
fiadds
in
sahf
add
movsb
fiadds
in
sahf
add
movsb
fiadds
out
sahf
add
movsb
fiadds
out
sahf
add
movsb
fiadds
jmp
movsb
fiadds
call
movsb
fiadds
jmp
sahf
add
movsb
fiadds
ljmp
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
out
cwtl
sahf
add
movsb
fiadds
icebp
ret
sahf
add
xchg
sahf
add
movsb
fiadds
repz
sahf
add
movsb
fiadds
repnz
sahf
add
movsb
fiadds
cmc
cwtl
sahf
add
movsb
fiadds
hlt
cwtl
sahf
add
movsb
fiadds
negl
fiadds
neg
sahf
add
movsb
fiadds
stc
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
cwtl
sahf
add
movsb
fiadds
add
pushf
add
movsb
fiadds
add
pushf
add
movsb
fiadds
add
pushf
add
movsb
fiadds
add
pushf
add
movsb
fiadds
add
movsb
fiadds
add
pushf
add
movsb
fiadds
pop
xlat
pushf
add
movsb
fiadds
push
xlat
pushf
add
movsb
fiadds
or
pushf
add
movsb
fiadds
or
pushf
add
movsb
fiadds
or
pushf
add
movsb
fiadds
or
pushf
add
movsb
fiadds
or
movsb
fiadds
or
pushf
add
movsb
fiadds
pushf
add
movsb
fiadds
push
xlat
pushf
add
movsb
fiadds
adc
fiadds
adc
fiadds
adc
fiadds
adc
fiadds
adc
movsb
fiadds
adc
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
sbb
fiadds
sbb
fiadds
sbb
fiadds
sbb
fiadds
sbb
movsb
fiadds
sbb
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
and
sahf
add
movsb
fiadds
and
sahf
add
movsb
fiadds
and
sahf
add
movsb
fiadds
and
fiadds
and
movsb
fiadds
and
sahf
add
movsb
fiadds
daa
ret
sahf
add
ret
sahf
add
fcomps
add
fcomps
add
fcomps
add
cwtl
sahf
add
movsb
fiadds
sub
movsb
fiadds
sub
sahf
add
movsb
fiadds
das
cwtl
sahf
add
movsb
fiadds
cs
sahf
add
movsb
fiadds
xor
fiadds
xor
fiadds
xor
fiadds
xor
fiadds
xor
movsb
fiadds
xor
sahf
add
movsb
fiadds
aaa
cwtl
sahf
add
movsb
fiadds
ss
sahf
add
movsb
fiadds
cmp
sahf
add
ret
sahf
add
xchg
sahf
add
movsb
fiadds
cmp
fiadds
cmp
movsb
fiadds
cmp
sahf
add
movsb
fiadds
aas
cwtl
sahf
add
movsb
fiadds
ds
sahf
add
movsb
fiadds
inc
cwtl
sahf
add
movsb
fiadds
inc
cwtl
sahf
add
movsb
fiadds
inc
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
dec
fcomps
add
sahf
add
movsb
fiadds
dec
fcomps
add
sahf
add
movsb
fiadds
dec
fcomps
add
add
movsb
fiadds
dec
fcomps
add
sahf
add
movsb
fiadds
push
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
cwtl
sahf
add
movsb
fiadds
push
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
push
ret
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
cwtl
sahf
add
movsb
fiadds
pop
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
popa
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
arpl
fiadds
mov
sahf
add
cwtl
sahf
add
movsb
fiadds
addr16
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
push
movsb
fiadds
imul
add
cwtl
sahf
add
movsb
fiadds
insl
cwtl
sahf
add
movsb
fiadds
insb
cwtl
sahf
add
movsb
fiadds
outsl
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
jno
sahf
add
cwtl
sahf
add
movsb
fiadds
jae
sahf
add
movsb
fiadds
jb
sahf
add
movsb
fiadds
jne
sahf
add
cwtl
sahf
add
movsb
fiadds
ja
sahf
add
ret
sahf
add
cwtl
sahf
add
movsb
fiadds
js
sahf
add
movsb
fiadds
jnp
sahf
add
movsb
fiadds
jp
sahf
add
cwtl
sahf
add
movsb
fiadds
jl
sahf
add
movsb
fiadds
jg
sahf
add
movsb
fiadds
jle
sahf
add
lret
or
pushf
add
lret
or
xchg
shrl
pop
dec
adc
hlt
sahf
ret
jl
test
sahf
add
sahf
add
mov
adc
adc
outsl
mov
push
adc
sahf
test
stos
xchg
clc
or
sahf
add
sahf
add
lret
or
sahf
add
mov
adc
adc
jnp
jo
adc
xorl
jnp
jo
adc
xorl
subl
add
xor
leave
push
or
imul
xor
popa
add
inc
jecxz
mov
lret
mov
and
or
addl
push
lret
sahf
add
xor
cli
adc
lret
mov
add
xlat
notb
ror
rorl
xchg
mov
mov
cmpsb
popl
inc
and
inc
xor
ljmp
mov
dec
mov
ret
xchg
lret
jle
xchg
ljmp
jbe
repz
cmc
mov
adc
mov
out
cmpl
dec
std
mov
fisttpl
jle
jmp
jle
into
ljmp
jne
jle
into
std
aam
sbb
cmc
popa
je
lcall
mov
ljmp
or
cmpl
xor
jecxz
cmpl
sahf
pop
or
pop
pop
fists
jb
insl
enter
scas
inc
xorl
jbe
lret
lret
or
ljmp
notb
lret
hlt
into
lods
ret
adc
mov
xor
ret
popa
cmp
push
leave
push
mov
popa
or
lea
or
lret
mov
ret
jns
xchg
add
inc
fcomi
iret
dec
jecxz
jle
jmp
cmc
adc
add
add
add
or
inc
lahf
adc
push
or
lods
ret
jecxz
or
pop
inc
jns
xor
push
rcrl
add
outsb
mov
inc
int3
ss
inc
rorb
adc
mov
sbb
cmc
fists
inc
jns
pop
add
into
std
hlt
ss
add
xor
pushf
xor
ror
inc
fisubl
test
leave
xor
cmp
mov
xchg
push
lods
testb
jle
mov
pop
rcr
add
lcall
push
jmp
push
or
jne
mov
cmpsl
sub
rclb
mov
xlat
lret
lret
cmp
sahf
add
xor
ficoml
ror
bnd
adc
lret
movsl
shlb
rcr
add
lcall
xchg
testb
or
mov
std
xchg
xchg
es
xchg
pop
xor
or
pop
fimull
sbb
push
cmc
loopne
jbe
sbb
cmc
call
orl
out
xchg
ljmp
pop
pop
hlt
les
cmpl
lret
rol
mov
add
xchg
call
push
test
repnz
add
pushf
popa
aaa
test
loop
add
lret
popf
dec
pop
jbe
je
inc
lret
jle
mov
ror
or
into
sbb
push
add
jmp
and
bound
popf
popa
aaa
popf
sti
fiadds
add
lcall
imul
mov
scas
inc
orl
add
mov
push
fcomp
add
and
or
sahf
push
add
lcall
and
or
rol
popf
jbe
out
sahf
mov
inc
xchg
mov
fcomp
add
into
ljmp
ja
pushf
adc
add
mov
shll
sahf
add
push
xchg
mov
jmp
popa
aam
push
fwait
add
mov
mov
ror
std
cmc
out
mov
sub
sahf
std
icebp
ret
dec
sahf
mov
add
xchg
xchg
decb
es
and
jle
pop
add
lret
hlt
add
into
push
fcomp
add
gs
jle
pop
push
fidivrs
pop
inc
lahf
adc
mov
ret
or
xchg
xchg
lret
or
sbb
fstpl
sahf
xchg
or
xor
mov
and
add
dec
pop
ja
inc
test
push
nop
mov
mov
jno
pop
push
or
jne
or
mov
imul
mov
nop
mov
cltd
jmp
sahf
mov
ficoml
jb
inc
call
mov
inc
or
inc
sbbl
into
ljmp
xchg
mov
xchg
or
mov
xor
rcrb
enter
xchg
xchg
ljmp
xor
mov
mov
mov
into
movsl
inc
movsl
fsubrp
and
push
jl
lret
lea
sahf
xchg
mov
mov
mov
or
jmp
or
mov
pushf
xor
rol
mov
add
shlb
mov
push
cmc
int
inc
xchg
dec
pop
ja
or
mov
leave
mov
ret
or
xchg
xchg
sahf
add
mov
add
lret
xchg
cltd
popa
ja
lcall
inc
sbb
hlt
mov
mov
mov
popl
lcall
addl
xor
lea
jbe
inc
outsb
jmp
xchg
cli
popl
lcall
addl
mov
sbb
mov
into
popa
pop
mov
fiadds
shll
ficoms
ror
push
imul
popa
ja
lcall
or
jmp
ficoml
enter
sbb
cmc
lcall
sub
xchg
mov
jbe
inc
fadds
mov
xor
popa
pop
fiadds
add
ljmp
mov
pushf
xor
ret
rcl
jb
cld
ret
cmc
xchg
sbb
push
or
in
dec
rcrb
add
mov
roll
cmp
or
jmp
shlb
aad
or
int
hlt
popa
ja
and
lods
inc
pushw
dec
push
shlb
push
push
lret
lea
pop
fisubl
pushf
xor
ret
rcl
jb
insl
into
lahf
add
xchg
xchg
push
lds
fadds
ficoml
add
xchg
ljmp
or
addl
adc
lret
hlt
int
ja
xor
cmpsl
pop
cltd
mov
popa
aad
mov
lret
lret
mov
mov
ret
mov
addl
push
jle
mov
sbb
ljmp
ss
std
jle
jmp
jmp
lcall
add
mov
jle
into
std
hlt
fisubs
and
bound
dec
pop
push
shll
sahf
push
jle
mov
hlt
ret
jl
popa
mov
mov
ror
xchg
dec
pop
push
shll
sahf
std
hlt
fdivp
add
into
std
xchg
lcall
cmp
pop
fists
jb
insl
lret
orl
add
mov
adc
jb
clc
test
jg
popa
push
enter
mov
popl
lcall
jle
xchg
popl
pusha
std
jle
jbe
lock
shrl
inc
lret
test
lahf
cld
jle
sbb
or
inc
lahf
adc
add
mov
cmp
pusha
std
jle
add
jg
popa
icebp
sub
cld
jle
testb
lret
shlb
sahf
push
jle
cli
adc
lret
add
pusha
std
jle
into
ljmp
aas
sub
sahf
push
jle
jbe
jg
popa
addl
jmp
imul
pop
ja
add
addb
xor
sbb
das
gs
add
inc
fisubl
lea
lods
hlt
rcrl
es
inc
ljmp
xor
mov
inc
mov
add
xlat
lret
lret
mov
mov
repnz
mov
and
xor
ljmp
pushf
popa
jb
and
xor
dec
jae
cmc
mov
ljmp
lret
ret
xchg
mov
add
push
mov
addl
add
mov
dec
push
lret
jmp
popa
jbe
ror
std
push
inc
fisubl
cltd
inc
mov
xchg
xchg
push
jmp
popa
rcl
xor
mov
cmc
shll
add
into
std
push
inc
fisubl
cltd
xchg
rcrl
push
inc
lahf
adc
cmp
adc
add
fsubs
std
hlt
popa
ja
and
jle
pop
or
popa
ja
cmp
jmp
jbe
mov
sbb
imul
jle
xchg
std
push
xchg
ret
rclb
adc
add
stc
push
jbe
pushf
popa
ja
and
or
jmp
imul
adc
cmp
std
cmc
fcmove
push
nop
mov
adc
lret
jle
xchg
pop
rcrl
hlt
fisubrs
mov
shrl
jbe
mov
ja
xor
ret
rclb
jb
and
lea
cltd
lods
repz
or
inc
ret
decb
xchg
mov
ds
xchg
lret
mov
jl
add
fs
add
dec
scas
inc
sbbl
sbb
cmpsl
and
cs
ror
and
cmp
addl
cmp
loop
mov
cli
cmp
rolb
cwtl
int
jle
adc
or
xchg
cmp
imul
lret
inc
mov
adc
lret
lods
and
or
lea
std
xchg
decb
push
or
adc
xor
lret
nop
inc
xlat
cltd
into
mov
lret
add
sahf
jbe
xor
out
addl
adc
xchg
std
hlt
fisubs
xchg
xor
xchg
std
aam
rcrl
adc
mov
or
fidivs
pop
xchg
lods
ret
imul
xor
popa
std
jmp
insl
test
mov
adc
or
jle
insl
test
mov
inc
sbb
jg
popa
push
lret
sahf
add
cltd
pop
pop
jge
mov
mov
adc
lret
cltd
mov
jp
lret
lea
mov
std
hlt
fisubs
xchg
xor
xchg
std
push
icebp
pop
mov
rclb
add
hlt
popa
pop
mov
or
mov
xor
popl
pusha
std
jle
leave
ljmp
adc
roll
bnd
popa
push
add
xor
sahf
pop
ss
popl
arpl
jle
jbe
in
lret
inc
out
sbb
hlt
rcll
xor
loop
inc
xorl
sahf
add
push
mov
fdivl
ljmp
repnz
stc
pop
jmp
ficoms
push
or
sbb
push
add
dec
adc
lret
stc
into
sahf
mov
shl
mov
add
dec
jl
add
xchg
or
orl
sbb
xchg
sbb
in
sahf
push
aas
rcrb
push
nop
mov
adc
lret
add
ljmp
popf
hlt
add
xchg
std
hlt
ret
or
lods
fnstcw
lea
lds
xor
mov
aam
jmp
fwait
into
mov
jmp
popa
xor
addr16
jle
pop
push
add
ljmp
cltd
popa
pop
aad
fiadds
shll
sahf
cmp
sahf
ja
xor
xchg
hlt
fisubs
xchg
xor
xchg
std
aam
adc
pop
push
popa
ja
xor
mov
hlt
fcmove
std
hlt
ret
fiaddl
pop
sbb
es
and
sahf
push
or
lcall
leave
mov
push
xchg
sahf
add
mov
add
lret
test
or
add
sbb
push
mov
add
lret
test
mov
and
jle
sbb
jbe
stc
pop
jmp
lret
add
jmp
or
xchg
ror
lret
jns
and
test
sahf
push
jmp
popa
pop
aad
fiadds
shll
sahf
mov
popa
jbe
inc
rcrl
push
jle
xchg
std
push
inc
outsb
xor
insl
ja
inc
or
addr16
in
movsl
shl
clc
cmp
cltd
iret
push
and
bound
mov
mov
xchg
dec
pop
jbe
or
std
sbbb
inc
sbbl
popa
add
shll
xor
push
jno
pop
jmp
mov
push
rorb
jb
or
push
xlat
popf
adc
xor
jbe
inc
cmp
pop
pop
jge
jmp
jle
mov
std
hlt
shlb
xchg
xor
xchg
std
hlt
ret
mov
lds
jmp
sar
pop
or
addr16
jle
push
lahf
jns
popa
std
jb
clc
test
jg
popa
push
jle
xchg
ljmp
fisttpl
fadds
es
or
dec
mov
add
repnz
add
dec
pop
push
or
mov
add
add
add
adc
aas
sub
sahf
push
rcrl
imul
add
xchg
xchg
inc
lock
or
xor
mov
sahf
ret
lcall
out
adc
xor
or
pop
push
test
out
std
hlt
out
jbe
cmc
lret
out
lret
or
cmp
cs
test
aad
adcb
jle
mov
add
mov
ljmp
mov
ror
std
mov
and
jle
sbb
ja
repz
inc
shll
or
popf
add
bound
or
popf
add
or
add
xchg
shrl
adc
lcall
jle
jbe
ja
popa
addl
pop
cmp
mov
mov
leave
sahf
add
inc
push
mov
mov
insl
mov
out
xchg
leave
sahf
add
test
pop
or
shrl
enter
mov
ror
push
shlb
popa
std
add
mov
mov
aam
xchg
popa
std
or
pop
ja
inc
xchg
xor
js
push
mov
loop
push
mov
lret
and
jecxz
ja
lcall
or
pop
push
orb
or
xchg
dec
mov
negb
std
hlt
out
jbe
repnz
mulb
mov
jbe
or
rclb
bound
cltd
popa
xor
imul
dec
pop
and
jmp
mov
enter
xchg
dec
movsl
leave
lahf
mov
adc
mov
gs
out
xchg
enter
lea
mov
ret
roll
pop
shrl
inc
lret
mov
aam
jle
sbb
or
cmc
jmp
sbb
add
inc
xchg
mov
add
or
test
inc
lods
inc
cmp
enter
cmp
ja
lds
aaa
or
mov
mulb
add
pushf
ficoml
loop
inc
sbbl
popa
addl
pop
cmp
loop
lahf
lds
mov
mov
test
sti
mov
inc
mov
test
jmp
shll
in
add
push
xchg
add
out
adc
add
xchg
mov
shrl
hlt
sbb
pop
push
rcrb
jp
or
jmp
push
and
pop
mov
mov
shlb
popa
std
add
mov
cmp
lret
int3
ljmp
or
inc
jge
mov
jg
lds
data16
mov
mulb
add
sbb
or
ficoml
loop
inc
sbbl
pop
push
add
xchg
xchg
inc
lock
jbe
inc
xchg
mov
out
movsl
leave
mov
add
test
sbb
or
cmp
jmp
mov
add
icebp
push
or
sbbl
into
mov
rcrb
pop
icebp
jle
sbb
or
cmc
mov
sbb
dec
loope
jle
adc
mov
leave
cmp
shrl
or
test
sub
mov
jle
mov
add
mov
inc
lahf
inc
movsl
inc
fldt
or
popf
sti
mov
inc
xchg
xor
push
inc
add
lcall
or
add
mov
adc
aas
sub
sahf
push
jle
jbe
jb
popa
addl
cmpsl
sbb
stos
adc
decb
xchg
decb
scas
cmp
jecxz
cmc
adcl
ret
xor
into
pop
mov
mov
shlb
popa
std
add
mov
mov
lds
jbe
lret
xchg
mov
into
pop
dec
test
xorl
inc
roll
or
jne
mov
rcrl
sbbl
int
or
lods
stc
pop
push
or
arpl
jle
popa
ja
inc
add
jg
popa
icebp
sub
popa
ja
pusha
popa
ja
imul
cltd
xor
mov
hlt
popa
ja
xor
gs
repz
test
ret
hlt
add
insl
std
jle
pop
pop
hlt
icebp
adc
shll
les
adcl
fiadds
rcrb
fsub
ror
push
jle
jbe
xchg
lret
inc
movsl
shl
into
std
xchg
repnz
inc
pop
pop
fists
lret
mov
jb
or
push
xlat
inc
jmp
mov
lods
ret
and
jle
popa
std
hlt
loop
lahf
xorl
xor
std
hlt
aas
cs
mov
ja
xor
xchg
std
hlt
ret
or
movsl
stc
cmc
sahf
cmpsl
sbb
lcall
inc
mov
test
jle
sbb
fdivrs
popa
std
jle
popa
je
and
or
ljmp
cltd
int
icebp
ret
pusha
mov
ljmp
cmpb
mov
cmpsb
adc
lret
ficoms
push
or
pop
out
cltd
lret
sahf
add
pushf
leave
push
mov
adc
or
cld
jle
and
or
icebp
sub
push
ror
ja
inc
jecxz
imul
pop
or
andl
or
xorl
into
popl
pusha
std
jle
popa
ja
xor
adc
xchg
sahf
add
loop
inc
addl
jecxz
xor
mov
ds
xchg
sahf
add
jb
or
popa
xor
xchg
std
xchg
rorb
cmp
sbb
hlt
es
pop
popf
fcmovu
add
xor
jo
xor
insb
xlat
inc
sbb
jg
popa
push
shll
mov
or
or
int
rcrb
popa
std
shll
xchg
std
aam
adc
sub
mul
cmpsb
lahf
imul
popl
pusha
std
jle
into
mov
jmp
popa
xor
outsb
std
jle
pop
push
add
ljmp
xor
push
incl
jne
ficoms
push
dec
popa
push
or
jmp
jle
mov
ja
xor
mov
hlt
popa
ja
xor
adc
lret
inc
ljmp
lret
sahf
add
imul
lret
xchg
inc
jle
mov
hlt
popa
ja
xor
cmp
ret
add
in
std
jle
pop
pop
mov
add
dec
jl
or
sahf
push
jmp
adc
in
jle
adc
pop
mov
add
xor
push
mov
jmp
jle
xchg
ror
cli
add
jmp
jle
data16
xchg
mov
stc
inc
cmp
loop
add
cld
jle
sahf
push
or
imul
xor
sahf
icebp
sub
cld
jle
into
push
jle
xchg
std
aam
adc
xor
xor
adc
shrl
inc
lret
jle
jbe
outsb
xor
sbb
cmc
leave
popa
inc
lea
aas
jmp
orl
push
imul
outsb
pop
add
or
jle
popa
push
or
popa
ja
xor
xchg
std
hlt
ret
jge
mov
jne
or
lret
inc
ficompl
out
xchg
lret
sahf
add
pushf
leave
push
mov
adc
or
cld
jle
and
or
icebp
sub
push
ror
ja
inc
jecxz
imul
sahf
add
and
or
sbbl
sbb
jg
popa
push
jle
xchg
std
hlt
ret
or
pop
pop
jge
gs
inc
mov
pushf
adc
rcrb
sahf
addl
jmp
rcrb
sbb
jg
popa
push
jle
std
hlt
ret
jne
cmp
mov
cld
xor
jg
popa
jbe
cltd
adc
rcrb
sahf
push
in
and
std
add
mov
popa
inc
jge
adc
add
popa
ja
xor
xchg
hlt
fisubs
xchg
xor
xchg
std
aam
adc
pop
fiaddl
pop
and
mov
or
push
add
aaa
popa
std
out
sub
jl
popa
icebp
sub
cmpsb
xchg
mov
add
inc
jecxz
imul
sahf
add
and
std
add
push
sahf
add
bound
sbb
jl
popa
push
jle
xchg
std
hlt
ret
or
pop
ja
icebp
inc
ja
inc
mov
popf
adc
xlat
lcall
inc
adc
inc
jecxz
xlat
pushf
enter
sbb
jl
popa
push
jle
data16
hlt
ret
jne
inc
cmp
lods
cmp
lods
cmpsl
mov
aaa
popa
std
cmc
jmp
arpl
jle
jmp
shrl
inc
lret
jle
jbe
insl
xor
sbb
cmc
leave
popa
inc
lea
pop
stc
fwait
lret
cmc
xlat
popa
ja
xor
cmp
shlb
xchg
xor
xchg
std
hlt
ret
jne
inc
pop
or
rcrb
mov
push
xlat
popf
adc
pop
ror
add
ljmp
mov
data16
or
shr
jle
sbb
hlt
div
add
jae
jle
pop
pop
hlt
sti
lods
lret
or
mov
rcrb
sahf
push
jle
jbe
insl
xor
sbb
cmc
leave
std
hlt
popa
aam
adc
fxtract
adc
fxtract
iret
sbb
mov
mov
ficoml
adc
pop
ror
push
or
ret
lret
adcb
out
jle
sbb
cmc
shlb
xor
jne
or
xchg
std
push
inc
outsb
orl
adc
mov
clc
add
out
mov
jmp
popa
xor
jne
jle
pop
push
add
ljmp
inc
inc
xchg
push
xchg
fwait
orl
rcrl
or
pushf
adc
add
mov
popa
std
add
mov
popa
aam
sti
adc
std
hlt
ret
jge
xchg
subl
fsubrs
jmp
into
mov
jmp
popa
xor
jne
jle
pop
push
add
jmp
or
xchg
add
inc
jb
xlat
inc
stos
mov
jbe
insb
xor
xchg
std
hlt
popa
ja
xor
leave
mov
leave
std
hlt
ret
jge
inc
xchg
mov
add
and
addr16
bound
pushf
hlt
add
jbe
push
popa
addl
adc
lret
inc
ret
or
int
pop
repz
or
popf
ljmp
inc
stos
xor
xor
jbe
ror
sahf
mov
pop
push
mov
xor
lahf
add
xor
lahf
add
ret
or
sbb
cmc
into
adc
std
push
lcall
add
xchg
xor
rcrb
xchg
add
inc
jb
add
leave
mov
ret
or
hlt
add
mov
rorl
imul
mov
add
ja
enter
cmc
mov
sti
inc
mov
ljmp
dec
loopne
movsb
mov
ljmp
dec
addr16
lds
sti
mov
scas
ljmp
dec
loopne
jle
cwtl
cmp
mov
pop
std
push
sbb
cmpl
ja
or
hlt
and
and
push
or
sahf
add
mov
inc
lea
lahf
add
or
pop
jle
xchg
ljmp
jbe
stc
push
mov
inc
mov
mov
lcall
or
mov
mov
mov
cmp
mov
test
hlt
pop
rcrl
sahf
addl
int
popa
ja
popf
jbe
or
sbb
cmc
int
inc
jge
sahf
add
and
push
imul
fcoms
pop
mov
out
xchg
cmpl
pop
mov
out
lcall
dec
ja
add
fwait
push
inc
lret
ror
sbb
or
fwait
jl
inc
dec
mov
inc
and
pusha
leave
insl
test
lret
pop
inc
inc
fisubl
test
jbe
inc
xchg
cmpb
lmsw
adc
jmp
hlt
les
jbe
inc
add
xchg
pop
inc
ret
xlat
popf
hlt
adc
ret
aad
fiadds
shll
sahf
mov
out
mov
xchg
dec
clc
push
addl
mov
ret
mov
fiadds
add
add
jbe
fmulp
push
jle
ficoms
ror
ret
leave
push
popf
cltd
popa
pop
loope
fiadds
or
pop
fimull
lret
mov
adc
jbe
dec
loopne
cmpl
adc
jbe
dec
sti
or
xor
sahf
xchg
lea
test
call
adc
lret
inc
inc
fisubl
test
push
cmp
test
leave
ljmp
repz
or
xchg
mov
out
xchg
push
lods
ret
fisubl
test
push
cmp
lea
leave
into
ljmp
repz
push
cmc
into
hlt
add
or
std
cmc
out
mov
xchg
lret
fcoms
popa
jbe
ret
or
enter
ficoms
bound
and
addr16
stos
inc
jge
sahf
mov
fildl
or
sahf
mov
out
xchg
cmp
fwait
mov
or
bound
icebp
push
mov
xchg
lds
bound
inc
scas
mov
or
rol
iret
mov
ror
add
out
inc
or
bound
lret
sahf
add
fiadds
orl
sahf
ja
or
bound
inc
shlb
mov
ja
mov
mov
stc
pop
jmp
shlb
lcall
xor
sahf
push
or
adc
push
or
aaa
add
dec
mov
add
sbb
add
or
push
pop
in
mov
adc
sub
stos
orl
call
andl
xchg
mov
inc
pop
mov
inc
and
mov
ja
dec
jl
cmc
lds
clc
sarl
or
xor
ja
inc
loopne
add
xchg
add
int
hlt
jbe
in
sahf
mov
ret
lea
stos
or
pop
loop
or
rcrl
popa
or
bound
inc
lahf
mov
ret
orl
inc
addl
hlt
ror
jbe
imul
jle
lcall
sahf
push
or
loop
xchg
pushf
leave
std
cmc
out
mov
xchg
xor
rolb
or
lahf
inc
or
push
mov
fwait
popa
push
test
lret
mov
lret
adc
xchg
xchg
push
stos
sbb
sbbb
add
xchg
ljmp
mov
fiadds
or
sbb
mov
mov
mov
fiadds
mov
or
jecxz
or
cmpsl
sub
fistl
addb
or
sub
or
jne
out
nop
jmp
fists
adc
rorb
mov
mov
adc
popf
popa
jbe
fidivs
jg
popa
or
lret
ror
push
shlb
pop
push
andl
popa
jbe
popa
jbe
popa
jbe
jbe
jle
popa
rorb
popa
std
cmc
out
xchg
std
cmc
out
xchg
std
cmc
out
xchg
ljmp
sahf
push
or
sbb
adc
lahf
cmp
push
ja
or
fiadds
or
jmpw
pop
inc
jno
int3
add
mov
ljmp
xchg
add
inc
jb
insl
ficoml
add
data16
out
sahf
std
hlt
pop
inc
jge
lock
addl
imul
or
fiadds
or
outsb
push
imul
sbbl
filds
mov
out
ljmp
mov
and
into
mov
ss
sahf
orl
bound
inc
sahf
mov
xor
data16
ror
sahf
add
ljmp
xchg
add
inc
jb
rcrb
leave
fs
rcrl
stos
adc
cmpl
int
icebp
mov
inc
lahf
ljmp
cltd
dec
push
mov
xor
cmp
mov
and
dec
push
jl
inc
or
adc
std
xchg
orb
nop
xor
bound
or
loop
push
clc
cmp
popa
std
hlt
iret
sbb
or
ss
flds
fcmovb
pop
fiaddl
pop
push
or
pop
out
test
sahf
add
pushf
leave
mov
ret
mov
js
add
add
sahf
add
lret
stc
inc
lret
push
orb
or
and
xchg
test
lret
or
adc
cmp
out
mov
mov
lret
in
gs
enter
sahf
add
xor
xchg
ljmp
inc
sbb
jg
popa
push
loope
sahf
mov
pop
push
stos
or
popl
pusha
std
jle
into
std
xchg
repnz
inc
sbb
jg
popa
push
jle
ljmp
adc
sbb
inc
xor
std
rcrl
popa
addl
mov
mov
xor
rcrb
lret
mov
jb
or
mov
ret
lods
pop
cmp
nop
xchg
xchg
lret
sahf
add
mov
mov
or
addl
add
into
push
sbbb
dec
xchg
icebp
addr16
addl
stc
or
lahf
add
mov
cmp
loope
fbstp
in
je
in
ljmp
movl
jmp
inc
sbb
jg
popa
push
loope
sahf
mov
pop
push
stos
or
pusha
std
jle
into
std
xchg
repnz
inc
sbb
jg
popa
push
jle
ljmp
xor
sahf
add
pushf
leave
ljmp
jbe
jle
popa
addl
mov
mov
add
or
popa
jge
xor
lcall
inc
or
xchg
adc
dec
push
jl
repz
std
leave
pop
dec
lea
cli
test
pop
jg
xor
mov
or
int
xchg
inc
dec
inc
jl
inc
out
push
ja
xchg
cmc
fcoms
incb
xor
push
mov
dec
pop
sub
iret
mov
or
jne
mov
rcrl
push
or
sbb
push
mov
sbb
cmc
loope
pop
lea
adc
ja
icebp
pusha
jne
cltd
popa
ja
popf
jbe
fmulp
sahf
addl
fldl2t
imul
pop
fists
sub
ror
push
hlt
into
lods
ret
adc
add
into
lods
jbe
enter
mov
dec
pop
ja
repz
cmpsb
jge
sahf
jbe
dec
mov
fisttps
clc
mov
lods
imul
mov
inc
jb
mov
lret
test
pop
jmp
jle
nop
data16
sahf
add
mov
stos
mov
sahf
xor
ret
xlat
xor
sahf
xchg
dec
cmp
xchg
cmpl
int3
mov
ja
test
jbe
mov
push
or
iret
std
xchg
testb
and
sahf
add
bound
inc
add
jmp
popa
pop
add
mov
ljmp
lret
hlt
ret
mov
or
std
imul
sbb
add
enter
dec
push
jge
inc
ljmp
mov
into
adc
lret
hlt
call
fiadds
cmc
iret
sbb
xor
mov
xchg
xchg
mov
mov
rol
or
rcl
jb
shlb
mov
xor
ss
lret
cmc
fisubl
xchg
and
cld
jle
sbb
fadds
hlt
into
lods
ret
adc
adc
xchg
std
hlt
ret
add
mov
xor
aam
jb
rorb
incb
fcmovu
add
mov
popa
aam
xchg
xchg
xchg
cmpl
ss
ss
xchg
ljmp
jbe
lcall
jns
sbb
cmc
sar
cmc
call
hlt
push
jle
jne
jmp
jbe
jg
popa
xchg
jmp
mov
jne
mov
mov
cltd
mov
push
imul
cmc
leave
hlt
dec
ficompl
jmp
rcrl
fiadds
or
adc
ror
lret
mov
mov
mov
jbe
jle
popa
addl
pop
push
or
pop
out
adc
stc
popa
cmp
cltd
xor
cmp
or
adc
roll
fidivrl
sahf
lds
popa
std
jle
sahf
add
mov
ja
lret
ss
out
jle
adc
std
or
std
jle
cmp
xor
sub
xor
bound
inc
mov
adc
jle
inc
cmpl
xchg
mov
cwtl
mov
pop
jbe
dec
addr16
hlt
rcrl
jge
sahf
jbe
inc
mov
cmp
mov
add
les
xorl
push
cmpl
xchg
xchg
inc
icebp
pop
mov
sbb
or
popa
std
jmp
imul
pop
cmc
fcmovnu
add
cmp
add
pushf
jbe
jnp
popa
pop
mov
fiadds
mov
add
mov
std
jle
push
xlat
and
push
or
jbe
jnp
popa
push
ror
push
imul
pop
sub
ljmp
pushf
cmp
ljmp
leave
push
imul
mov
ds
jle
hlt
pop
jmp
lcall
add
mov
inc
mov
jbe
test
add
mov
lret
or
mov
mov
adc
lret
xchg
cmpsb
popl
imul
xchg
xchg
pop
or
inc
inc
lret
fists
mov
add
idivb
jbe
notb
orb
inc
xlat
dec
addr16
or
ljmp
lds
or
stc
pop
cmpl
cmpsl
jge
inc
lcall
jl
inc
push
sbb
add
pop
push
or
iret
push
stc
popa
cmp
ret
jge
sahf
add
into
lods
ret
int
fadd
enter
jle
jmp
popa
pop
aad
fiadds
shll
sahf
mov
fisttpl
and
bound
inc
popf
xor
inc
inc
lret
popa
fiadds
or
push
or
bound
mov
sahf
add
push
xchg
cmp
ss
or
xor
lret
addb
and
pushf
mov
shr
into
pop
pop
jbe
sbb
cmc
ret
mov
fsts
adc
mov
lds
or
mov
jb
test
sahf
push
or
push
add
ss
std
or
jle
movsl
fdivl
xchg
xchg
sahf
add
lret
mov
ja
add
ret
aad
fiadds
shll
sahf
push
cmp
lahf
add
ss
std
or
jp
ror
test
popa
fiadds
or
fiadds
mov
or
add
popa
push
add
xchg
add
or
jle
sbb
idivb
popa
mov
std
jle
sbb
jge
popa
mov
loop
or
popl
cltd
lods
std
jle
sbb
stc
adc
sahf
dec
jle
or
add
popa
cmpl
loop
or
xchg
andl
hlt
add
and
xchg
cltd
fscale
push
icebp
data16
inc
fisttpl
push
lods
ret
imul
lret
movsl
ret
popa
fiadds
push
sub
aas
popa
fiadds
xchg
inc
lret
or
fwait
mov
or
jle
ror
jbe
ficompl
mov
enter
fiadds
mov
loop
mov
rcl
jb
insl
out
aas
loop
mov
push
or
fnclex
or
add
jp
or
cltd
add
lds
repnz
lret
inc
lret
les
loope
or
sahf
add
bound
cltd
adc
cmp
lods
mov
mov
rorb
or
jp
ror
loop
rorl
fiadds
add
xchg
mov
pop
mov
std
or
mov
push
shll
rorl
or
sbb
add
bound
inc
push
mov
mov
push
and
xor
lret
xor
shlb
add
or
pop
out
mov
sahf
add
pushf
leave
push
mov
adc
or
cld
jle
insl
test
sbb
popf
lea
addl
ljmp
lea
andl
mov
andl
fiadds
imul
push
xlat
and
or
fiadds
aas
into
lahf
add
xor
mov
mov
inc
addl
push
jecxz
add
xor
sahf
mov
add
xchg
cmp
mov
xor
sahf
push
jle
into
adc
lret
jns
fiadds
or
data16
jle
into
ljmp
data16
lret
or
sahf
add
data16
jle
enter
popl
lcall
in
fiadds
or
data16
jle
into
ljmp
adc
lret
movsl
ss
sbbl
cmpsb
push
shlb
lea
and
jle
sbb
std
push
lcall
adc
popa
std
add
xchg
push
shlb
stos
inc
andl
sbb
ljmp
mov
xorl
int
jle
into
push
fiadds
imul
sahf
ljmp
mov
xchg
push
rcl
jb
insl
lret
orl
add
popf
hlt
cmp
cmp
popa
std
jle
icebp
sub
adc
lret
jle
adc
add
xor
jb
ror
pusha
or
data16
lret
dec
mov
fiadds
add
xchg
push
rorl
push
imul
jb
ror
pop
or
sbb
hlt
sub
ret
popa
pop
mov
fiadds
aas
lret
addl
push
shll
popl
lcall
xlat
mov
popa
rorl
jb
ror
mov
ljmp
insl
dec
jb
or
push
stc
pop
cld
ss
hlt
or
cld
jle
adc
lcall
xlat
lcall
jle
lahf
add
inc
lea
addl
adc
lret
call
fiadds
shlb
hlt
or
into
std
xchg
testb
add
xor
sahf
mov
push
rcr
add
popf
popa
ja
xor
inc
jbe
popf
hlt
add
into
std
xchg
lcall
nop
mov
pop
dec
or
mov
jb
or
push
xlat
popf
lods
ret
bound
les
lods
cltd
adc
rcrb
arpl
jle
sbb
jl
popa
add
xor
adc
xor
sahf
cmp
iret
push
or
addr16
jle
push
lahf
jns
popa
std
sarb
xor
cli
jg
popa
push
lret
sahf
add
imul
ror
push
jle
adc
adc
lret
or
data16
jle
divb
mov
add
adc
ficoms
out
add
mov
add
lods
ret
je
sub
test
andl
mov
xchg
mov
std
cmc
xchg
idivb
jbe
xorl
sahf
jge
inc
fucomi
jle
mov
ror
inc
insl
inc
jmp
into
push
or
popa
pop
fcomp
add
jbe
xchg
lcall
orl
pop
jno
fiadds
xlat
xor
sahf
ljmp
pop
pop
dec
or
or
xor
sahf
cmpl
sti
fiaddl
adc
jns
sahf
add
popa
adc
lcall
xchg
popl
xor
popa
pop
jns
fiadds
add
jbe
jg
popa
xchg
loopne
and
jle
jmp
add
sahf
add
xor
leave
push
or
lahf
std
jle
insl
test
add
popa
std
jle
popa
ja
and
dec
or
ljmp
lret
jmp
popa
pop
jmp
cmp
hlt
cmc
xchg
enter
mov
pushf
popa
pop
mov
xchg
push
jle
cmpsb
xor
lret
lret
fsubs
jmp
jle
adc
lret
popf
sti
fiadds
imul
popa
push
imul
sub
lret
mov
hlt
add
ret
lret
dec
or
mov
fisttpl
rcrb
inc
test
push
xchg
mov
add
push
jle
sbb
hlt
aad
inc
mov
enter
int3
add
xchg
xchg
jbe
dec
pop
push
jmp
enter
pop
jmp
fists
mov
std
cmc
out
lcall
xor
cli
test
add
adc
inc
xchg
dec
pop
ja
dec
push
std
fisttps
into
ljmp
ja
mov
aas
out
jge
sahf
mov
popa
xor
mov
sub
sahf
add
dec
pop
pop
cmc
into
hlt
ljmp
adc
jbe
lcall
xorl
pop
push
add
ljmp
mov
fiadds
jle
mov
rcrb
inc
xchg
mov
inc
movsl
into
sbb
cmc
fstps
cmp
lcall
inc
dec
push
std
inc
lahf
adc
ja
dec
push
std
dec
push
xchg
sahf
add
mov
xchg
jecxz
mov
add
ljmp
add
jbe
lds
mov
insl
fiadds
jmp
leave
std
icebp
loop
mov
inc
sbb
mov
add
mov
push
imul
leave
push
dec
fiadds
or
sahf
add
push
mov
add
ljmp
mov
mov
lock
and
sahf
add
push
mov
hlt
ret
mov
sahf
add
dec
pop
pop
cmc
out
dec
mov
add
pop
mov
lcall
orl
or
inc
jmp
adc
lret
jge
adc
pop
dec
or
mov
adc
or
addl
push
jmp
lcall
add
xchg
xchg
lret
or
sbb
cmc
mov
jl
lret
add
std
neg
jbe
into
lret
add
ja
cltd
leave
ljmp
lret
lret
xchg
lret
mov
or
into
std
xchg
testb
or
popa
ja
xor
idivb
mov
adc
lret
mov
mov
movsl
inc
outsb
xchg
xchg
push
jmp
popa
aad
xor
sahf
pop
or
std
fists
sbb
push
mov
lods
ret
jo
or
inc
test
mov
adc
popa
xor
ret
push
or
xor
mov
ret
mov
add
dec
aaa
add
lds
mov
mov
popl
inc
fucomi
shll
into
std
push
inc
fcmovne
shll
lret
shll
adc
cmp
ss
mov
sahf
add
inc
fisttpl
shll
sahf
mov
gs
mov
adc
inc
roll
out
or
int3
aam
int3
aam
int3
push
shll
sbb
ror
mov
ret
xor
ljmp
adc
lret
xchg
lcall
roll
std
rol
adc
push
dec
xor
pop
push
or
sbb
inc
lret
pop
pushf
adc
add
xchg
mov
ds
pop
jge
ret
repnz
adc
jg
xor
fwait
add
mov
lret
or
adc
push
nop
mov
add
xor
mov
inc
mov
adc
or
popa
jne
mov
popa
ja
xor
sahf
addl
adc
lcall
jge
adc
lcall
jge
sahf
std
negb
jmp
jle
jbe
cltd
lret
inc
out
movsl
rorl
inc
jg
inc
fcomi
roll
out
roll
ljmp
fcomi
roll
cli
shrl
inc
lret
aad
fimuls
jle
xchg
std
mov
mov
or
pop
mov
push
jecxz
jmp
xor
sahf
std
int3
cs
mov
xor
fs
jle
popa
ja
xor
push
hlt
xor
ljmp
mov
fsubl
ljmp
xor
xlat
add
mov
into
mov
cmpsl
pop
popa
inc
mov
jbe
xor
dec
push
jle
cmpsl
pop
mov
int
push
lcall
lea
dec
push
jle
pop
pop
jge
ret
cli
cmc
popa
ja
cltd
popa
aam
xor
cmpsl
pop
jne
xchg
std
hlt
ds
push
lcall
hlt
push
popa
pop
cmc
fcmovu
add
xchg
cltd
enter
mov
and
dec
inc
jbe
popf
jbe
enter
or
jbe
mov
and
cmp
into
lods
ret
adc
add
xor
mov
push
jmp
popa
pop
aad
fiadds
shll
sahf
push
or
popa
jbe
shl
stos
test
sahf
push
jle
cmp
ror
xchg
inc
pop
pop
fists
sbb
sbb
xchg
ljmp
jbe
xor
xchg
add
into
lods
ret
popa
ja
xor
xchg
add
lahf
adc
cmp
stc
pop
lret
inc
lods
sbb
push
mov
adc
or
sahf
add
popa
xor
roll
out
shll
adcb
lret
jno
mov
nop
mov
pop
rcr
add
or
aad
fiadds
shll
sahf
mov
divb
jle
cmp
ror
lea
pop
filds
pop
push
or
ljmp
pushf
popa
pop
rcr
add
xor
push
jecxz
add
and
dec
or
pop
jbe
mov
fiadds
xlat
and
dec
or
pop
ja
jp
pop
inc
clc
pop
pop
inc
pushf
adc
hlt
cmc
jecxz
cmp
mov
ficoms
ror
cli
test
push
sub
lret
mov
push
xchg
cmc
pop
rcrb
jg
pop
xor
pop
push
or
iret
push
rcrb
std
hlt
popa
ja
and
dec
or
sbb
fdivrs
adc
add
adc
add
lcall
xchg
testb
les
into
push
jmp
xor
add
mov
pop
push
imul
pop
inc
jge
popa
aam
mov
std
cmc
ficompl
std
hlt
fidivl
jg
popa
pop
push
popa
ja
and
inc
outsb
jbe
cltd
hlt
add
into
std
xchg
lcall
fists
mov
ljmp
pop
pop
hlt
enter
and
inc
or
enter
sahf
add
push
xchg
xchg
lcall
cltd
ficoms
xor
inc
sbbb
adc
lret
xchg
testb
xlat
cltd
popa
pop
mov
or
pop
fisttps
enter
xchg
xchg
mov
and
mov
push
mov
pusha
std
jle
pop
pop
cmc
fcmove
ljmp
je
jle
pop
fisttps
lods
ret
enter
xchg
xchg
xchg
xlat
and
ret
xchg
push
imul
rol
pushf
adc
add
mov
hlt
or
into
std
xchg
testb
push
jecxz
add
xor
popa
pop
sbb
or
popl
popf
jbe
lret
jle
adc
push
jle
into
adc
lret
inc
xchg
vpaddq
subl
lods
hlt
mov
lds
ljmp
movsl
aam
dec
inc
add
icebp
push
or
addl
xchg
sahf
add
inc
sar
rcrl
jbe
cwtl
lret
inc
fisubl
or
xor
aas
add
fcmovnu
add
popf
popa
ja
mov
popa
pop
mov
xor
inc
jns
leave
push
jecxz
add
push
mov
into
adc
lret
xchg
dec
mov
std
xchg
mov
or
xchg
std
icebp
sahf
adc
lcall
add
mov
jmp
popa
aam
xor
hlt
add
and
dec
or
leave
push
jecxz
add
lret
lret
inc
push
cmp
jle
xchg
push
jmp
popa
aam
xor
hlt
add
into
std
push
xchg
cs
and
aam
jb
insl
into
pushf
add
xor
loope
inc
xchg
adc
jb
clc
test
inc
bound
or
push
or
jle
into
push
or
cmpb
ss
jle
mov
les
ljmp
xor
sahf
add
add
inc
add
or
int
or
insl
jbe
repz
push
hlt
shlb
ljmp
xor
sahf
cmp
ljmp
mov
cmp
push
jle
mov
mov
sahf
add
inc
fadds
mov
xor
fiaddl
adcl
fsubs
jle
pop
adc
lret
fisubs
pushf
xor
lds
imul
lret
inc
cli
leave
push
jle
scas
adc
lret
movsl
adc
sbb
mov
mov
fiadds
shll
sahf
add
cmp
jmp
add
ljmp
mov
mov
fiadds
shll
sahf
add
mov
je
dec
pop
push
and
bound
dec
pop
xor
xor
sahf
mov
rol
mov
or
or
out
jge
sahf
push
add
scas
push
jle
scas
adc
lret
movsl
ret
jle
mov
adc
sbb
cmc
int
inc
test
pushf
jbe
jle
popa
std
cmc
out
mov
or
pop
repnz
std
xchg
decb
inc
lret
mov
popa
pop
inc
fcmovu
add
or
rcl
loop
mov
jbe
dec
loop
lret
and
bound
pushf
sbb
pop
mov
fiadds
jle
xchg
mov
ljmp
mov
sbb
cmc
ret
popa
jne
xor
je
insl
fiadds
add
scas
push
jle
pop
adc
lret
fists
pop
push
or
ljmp
mov
fiadds
dec
pop
xor
xor
sahf
std
cmc
out
mov
adc
xor
xchg
mov
mov
jmp
adc
lret
hlt
test
fildl
adcl
sbb
hlt
adc
ljmp
jb
ror
ret
popa
pop
inc
fcmovu
add
or
pop
inc
stc
pop
pop
inc
cltd
lret
push
or
xchg
xchg
lret
or
mov
push
add
ljmp
popf
sbb
pop
mov
fiadds
or
adc
lret
cmc
les
out
hlt
int
neg
popa
aad
or
aaa
add
ljmp
xor
sbb
cmc
jmp
sbb
cmc
fmulp
std
test
jmp
shlb
sbb
cmc
int
je
dec
push
inc
lret
mov
popa
pop
inc
fcmovu
add
or
jmp
fcoml
mov
xchg
aam
std
out
mov
cmc
mov
out
jge
sahf
push
add
scas
push
jle
scas
adc
lret
movsl
fisubs
popf
and
lret
fmuls
pop
hlt
ret
adc
jbe
and
mov
jb
ror
ret
popa
pop
inc
fcmovu
add
or
pop
pop
fimull
lret
mov
leave
mov
ret
mov
lret
or
lea
or
repz
mov
add
mov
ret
popa
pop
mov
fiadds
add
jmp
jmp
popa
pop
mov
fiadds
shll
sahf
add
cmp
jmp
add
ljmp
mov
mov
fiadds
shll
sahf
add
mov
je
dec
pop
push
jle
mov
or
fcoms
imul
fcoms
or
xchg
pop
or
mov
adc
lret
jge
sahf
addl
mov
inc
pop
pop
push
lods
ret
ret
rcl
ljmp
dec
loop
lret
and
bound
dec
pop
xor
xor
sahf
mov
repz
lea
sbb
hlt
daa
aas
out
jge
sahf
addl
mov
inc
pop
pop
inc
stc
pop
pop
inc
pushf
adc
hlt
hlt
into
lods
ret
aas
out
jge
sahf
addl
mov
dec
loopne
cmpl
jne
or
aas
out
jge
sahf
addl
mov
inc
pop
pop
inc
lahf
adc
incb
inc
fisttpl
shll
sahf
std
hlt
ss
ret
push
jmp
xor
cmp
ror
xchg
inc
shll
sahf
mov
rclb
aam
jb
insl
fmulp
push
or
bound
inc
fucomi
rorl
sahf
add
xor
lret
test
lret
sahf
add
and
ds
pop
ja
stc
pop
jmp
or
lret
lret
xchg
testb
hlt
es
insl
ficoml
cmpsl
imul
rcrl
push
or
sbb
repnz
sahf
pop
cmp
adc
mov
scas
inc
xorl
sahf
subb
add
or
push
or
movsl
stc
hlt
into
lods
ret
cmpsl
sbb
inc
inc
imul
xchg
and
or
jmp
add
inc
or
pop
add
add
mov
pop
fimull
enter
xchg
cmpl
mov
filds
adcl
adc
ja
clc
pop
pop
inc
jp
pop
inc
cltd
adc
push
add
ljmp
stc
popa
cmp
mov
add
or
xor
and
xchg
jmp
add
add
dec
mov
lret
rcrb
pop
jmp
test
enter
sahf
adc
movsl
fidivl
jle
popa
pop
add
xor
or
repnz
std
cmc
rcll
push
ja
jle
test
inc
sbbl
popa
pop
add
stc
pop
pop
inc
inc
fadds
fisttps
sbb
jbe
xor
jno
or
nop
push
ror
pop
add
ja
clc
pop
shr
mov
lcall
add
or
cmc
out
lcall
lcall
movsl
jbe
ror
addl
adc
jle
mov
ja
jp
shll
xchg
push
or
pop
ret
pusha
into
sbb
add
mov
ret
lcall
xor
xchg
ljmp
pop
pop
hlt
les
cmpl
lret
rol
popf
popa
jbe
jbe
jg
popa
mov
sbb
mov
pop
in
inc
sbb
mov
push
imul
sbb
fdivrs
mov
lcall
jg
popa
pop
add
popf
popa
jbe
fidivs
jle
popa
pop
add
stc
pop
jmp
ficoms
or
ljmp
mov
push
imul
outsb
pop
add
ljmp
mov
popa
std
xlat
inc
ljmpw
add
xchg
mov
rol
or
rcl
jb
insl
into
lahf
add
xor
hlt
cmp
cmp
pusha
std
jle
or
clc
test
roll
jg
popa
push
jmp
mov
testb
lret
aad
sahf
add
push
mov
mov
lret
cmp
mov
addl
jg
popa
push
jle
adc
lret
cmc
ficompl
cmpl
or
add
lret
mov
jb
or
andb
std
jle
enter
xor
and
jg
popa
sahf
add
popa
xor
les
into
popl
pusha
std
jle
neg
mov
sahf
push
cli
fiadds
jmp
and
or
pop
jbe
dec
mov
add
out
es
stos
mov
popl
pusha
std
jle
popa
pop
fiadds
add
ljmp
dec
mov
ret
push
shll
jne
imul
js
jle
mov
ret
lahf
rcl
jb
insl
lcall
cltd
enter
sahf
add
pushf
hlt
or
mov
popl
lcall
jle
xor
inc
push
shlb
outsb
cmp
jns
pop
push
or
adc
lcall
ror
push
rolb
testb
ljmpw
or
popl
dec
pop
push
or
adc
lcall
add
ljmp
xor
and
jle
sbb
fdivrs
int
hlt
xor
mov
xor
pop
xor
push
jle
push
dec
or
std
orb
cmpl
fiadds
add
dec
add
lcall
andl
push
std
xchg
rorb
or
sub
popa
mov
or
jnp
jle
push
cmpsl
gs
std
cmpl
hlt
cmp
cmp
pusha
std
jle
xor
testb
xor
or
jb
cld
cmp
popl
gs
jle
sahf
push
imul
pop
push
or
jb
or
jp
jle
into
pop
cs
pop
cmp
add
inc
sbb
jg
popa
push
jle
push
hlt
and
xchg
fcmovu
add
jmp
or
jp
jle
negb
mov
std
jle
sbb
fdivrs
lahf
std
les
push
jg
lret
insl
inc
jecxz
cmc
push
popa
ja
xor
sahf
xchg
mov
lret
aad
fiadds
shll
sahf
mov
xor
pop
push
xor
mov
mov
add
mov
popl
lcall
add
adc
push
movsl
adc
push
mov
fisubl
xchg
inc
lahf
inc
iret
mov
rol
inc
jb
insl
int
inc
jecxz
mov
adc
push
or
cmpsb
sbb
xchg
push
rcl
inc
jns
subb
mov
nop
mov
add
jecxz
add
push
xchg
mov
lds
sbbl
mov
inc
inc
cmc
sti
popa
ja
inc
mov
push
xlat
pushf
hlt
add
xor
inc
ja
pushf
enter
pushf
std
hlt
ss
aad
adc
ja
xor
sahf
xor
mov
int3
adc
or
lret
popa
ja
popf
int
jecxz
sahf
add
cltd
jbe
or
push
or
addl
inc
fisubl
test
cmpsb
dec
fistpl
sahf
add
andb
or
out
add
mov
lcall
xchg
mov
xor
pop
adc
adc
mov
add
xor
popa
jbe
popf
popa
jbe
shlb
or
jbe
xor
sbb
xchg
ljmp
leave
sahf
add
dec
pop
pop
hlt
fdiv
add
lret
sbbl
jne
or
pop
push
xlat
inc
ljmp
or
jb
lds
pop
xchg
lea
negb
popl
lret
inc
out
or
popa
jne
leave
pop
push
or
adcb
mov
push
add
shrl
rcrb
adc
or
pushf
leave
mov
negb
pop
fiaddl
outsb
add
ljmp
es
lock
inc
je
inc
in
xorb
add
xchg
leave
std
xchg
mov
pop
ja
imul
ror
ret
aas
jbe
mov
ret
sbb
psrld
enter
sbb
push
or
mov
mov
inc
lret
or
or
ljmp
hlt
add
xchg
rcrb
lods
ret
iret
push
or
mov
mov
test
or
xchg
sbb
lret
or
cmp
jbe
ficoms
add
push
push
add
cmp
rorl
lret
test
es
lret
mov
or
sbb
mov
or
sahf
repnz
mov
add
lods
pop
cld
sbb
pusha
add
xor
xor
cmpl
jbe
lods
sbb
mov
add
lret
mov
mov
lret
scas
fs
clc
and
cld
sub
ljmp
inc
scas
mov
lret
xchg
mov
sti
clc
and
cld
orl
pushf
addl
imul
in
addb
pop
xor
mov
movsl
fisubl
mov
xor
mov
mov
pop
cmp
sbb
jle
popa
mov
xchg
rcrb
mov
aam
jb
fcmove
push
dec
pop
jbe
inc
rorl
add
ljmp
mov
out
cmpb
dec
mov
pop
iret
xorb
or
add
inc
or
arpl
dec
dec
ja
inc
mov
mov
add
mov
into
jmp
inc
enter
rcrl
cmpl
pop
jbe
dec
pop
push
or
sbb
xchg
and
inc
xchg
rcrb
int
fucomp
xchg
push
inc
fnstsw
add
xchg
mov
inc
jmp
inc
stos
sbb
hlt
sahf
jbe
inc
loopne
xorb
cmp
cmc
sahf
jbe
popf
popa
pop
jmp
or
pop
and
inc
orl
adc
lret
push
dec
pop
jbe
pushf
into
push
imul
pop
push
add
jmp
cmp
pop
fists
iret
push
rcrb
addr16
adc
or
dec
inc
sar
push
adc
or
add
lret
push
cmc
leave
hlt
inc
fstpt
adc
dec
enter
jmp
int3
push
shll
sahf
addl
fisttpl
mov
mov
stc
pop
jmp
andl
sahf
add
cmp
push
jmp
enter
sahf
add
push
xchg
xchg
pushf
hlt
add
lret
lret
xchg
lcall
xchg
cltd
jbe
jp
popa
pop
or
int
xchg
dec
mov
dec
push
jmp
xchg
pushf
jbe
or
shlb
xchg
inc
lahf
mov
vpaddq
push
or
bound
jle
xchg
std
hlt
ret
jle
popa
addl
adc
ja
stc
pop
lret
inc
pushf
testb
lret
dec
mov
popa
pop
adc
mov
popl
leave
pop
pop
dec
or
mov
iret
mov
ret
mov
outsl
sahf
add
dec
add
or
loop
cmc
ficoml
inc
mov
xchg
mov
lret
mov
dec
sahf
add
xchg
ret
imul
pop
ja
lds
inc
loope
adc
adc
pop
movsl
popf
adc
add
pop
mov
xor
push
jge
mov
xchg
pop
jbe
dec
cmpsb
add
fsubs
lea
sahf
pop
add
ja
inc
rorl
add
or
loop
or
sarl
lds
inc
enter
sbb
test
popf
ret
push
xchg
mov
inc
rorl
push
lods
ret
pop
push
xlat
mov
ljmp
and
jle
adc
xchg
cmpsb
push
or
enter
jl
jle
mov
mov
ljmp
inc
pop
xlat
mov
popl
lcall
or
rcrl
mov
enter
leave
xor
inc
push
jmp
pushf
jbe
jle
popa
mov
sbb
mov
xchg
leave
push
stc
fiadds
xlat
and
std
jle
adc
push
mov
xchg
hlt
add
popf
negb
mov
sahf
push
imul
xchg
cmp
lahf
jbe
mov
xchg
stc
fiadds
xlat
and
inc
cltd
dec
pop
push
mov
into
lds
lods
inc
sbbl
push
clc
fiadds
xlat
inc
lahf
ljmp
mov
add
inc
pop
pop
ficoml
iret
and
inc
stos
inc
nop
mov
std
push
inc
or
bound
mov
popa
std
fadds
pop
xor
popl
sbb
jmp
pop
inc
jge
dec
push
jle
mov
fcmovbe
mov
int
xchg
outsb
popl
dec
pop
push
add
ljmp
lcall
fiadds
pop
fiaddl
pop
push
or
sbb
fnstcw
inc
ret
out
or
pop
pop
jns
ret
fdivp
xchg
int
rcrb
popl
icebp
pop
mov
sub
or
adc
lret
jle
xchg
mov
dec
mov
jle
jmp
pop
inc
jno
dec
push
jle
mov
dec
jno
iret
push
jle
xchg
mov
ss
pop
cmp
fiadds
jle
ljmp
mov
and
add
or
cmp
ss
sbb
std
xchg
lcall
or
popf
push
shlb
popa
ja
xor
sahf
cmp
hlt
lds
leave
fcmovnu
add
xchg
push
inc
shr
shlb
int
shlb
mov
sbbl
pop
inc
insl
mov
jbe
jg
popa
mov
ret
xchg
icebp
pop
pop
hlt
iret
jbe
insl
xor
pop
inc
lea
xchg
push
stc
fiadds
imul
pop
push
or
popa
aad
dec
push
std
jle
xchg
push
jle
xchg
std
hlt
es
pop
sub
xchg
xchg
mov
xor
movd
into
std
xchg
lcall
cmc
popa
ja
cltd
popa
aam
xor
sahf
cmp
xor
or
adc
lret
jne
or
or
into
pop
xor
push
lret
jle
jb
fdivl
pop
inc
jno
sahf
add
mov
add
mov
xchg
or
jbe
and
fdivl
ljmp
sbb
std
xchg
lcall
or
fcomi
jle
into
std
xchg
testb
or
outsb
push
jle
jb
xchg
sbb
mov
xor
cmpb
std
hlt
out
popa
ja
xor
xchg
hlt
fisubs
jge
outsb
jle
sbb
idivb
jbe
sub
sahf
add
popa
ja
cltd
popa
aam
xor
sahf
cmp
es
add
iret
popa
ja
xor
ljmp
xor
adc
pop
dec
or
mov
iret
std
hlt
ret
jge
jbe
xchg
sahf
xchg
pop
inc
jns
pushf
lret
inc
xor
arpl
jle
fisttpl
or
jmp
imul
enter
inc
xor
lret
push
mov
mov
fisubl
lea
adc
aam
mov
cli
std
push
leave
push
or
lret
lret
jle
into
std
xchg
testb
or
popa
aam
inc
jle
mov
icebp
fisubl
mov
popa
ja
xor
sahf
std
hlt
shlb
or
addl
pop
jbe
lcall
imul
lret
sahf
pop
cmc
mov
jbe
dec
sar
jle
cmp
loop
ja
xor
adcb
mov
hlt
ret
jp
popa
addl
jmp
imul
sahf
xor
ret
push
fdivrs
int
push
lcall
mov
dec
push
jle
cmpsl
pop
mov
int
push
lcall
mov
dec
push
jle
adc
pop
dec
or
mov
int
fadd
enter
popl
inc
jmp
into
push
jge
sahf
add
ss
push
shll
adc
sahf
std
push
inc
jmp
into
push
jge
loopne
xorl
fwait
push
inc
adc
sahf
std
push
xchg
lahf
adc
add
mov
leave
push
or
in
cld
jle
insl
test
icebp
xor
std
shll
mov
cmp
fmulp
inc
xor
sahf
cmc
pop
rcrl
inc
inc
shlb
test
mov
imulb
jl
divb
add
and
fbstp
ret
sbb
inc
lea
ljmp
lret
lea
xchg
push
jle
mov
ror
dec
movsl
ret
mov
pop
push
or
sbb
push
mov
lods
ret
inc
or
xor
repnz
jbe
jle
popa
mov
sahf
adc
sbb
fiadds
shll
not
test
sahf
push
or
into
std
xchg
push
popl
leave
shll
sahf
push
xorl
cmpl
cltd
xor
mov
dec
pop
mov
pop
inc
pop
enter
ret
orl
hlt
push
mov
jbe
mov
sahf
inc
shll
je
or
fucomi
shlb
pusha
std
jle
pop
push
add
xchg
xchg
lcall
jle
mov
ror
mov
add
inc
dec
mov
push
xchg
repnz
dec
data16
cmc
lods
hlt
add
data16
xchg
mov
ja
xor
stos
adc
lret
jle
xlat
push
lret
jmp
popa
aad
xor
push
incb
lret
rcrb
xor
xor
ljmp
lret
or
mov
jge
sahf
push
or
jne
jle
jb
push
and
cld
jle
adc
add
ljmp
out
cwtl
add
mov
adcl
into
std
push
dec
jecxz
cmpl
into
std
push
inc
jmp
jle
push
xchg
into
mov
inc
pop
pop
fists
jb
insl
loop
xor
ret
or
xchg
popa
mov
cmp
pop
pop
inc
ret
out
or
pop
pop
gs
ret
loop
xchg
jbe
fcoml
jmp
mov
ja
or
mov
fisubl
push
mov
sahf
push
cltd
int
rcrb
fiadds
mov
mov
popl
and
or
mov
mov
or
sahf
popl
lcall
or
int
jle
inc
std
hlt
ret
cmp
fiadds
jle
inc
ljmp
mov
adc
add
cltd
hlt
add
cltd
hlt
push
jle
mov
hlt
fisubl
xor
or
add
xchg
jmp
cltd
int
jle
mov
shll
sahf
cmp
fcomi
mov
add
ss
std
fcomps
mov
hlt
cmp
sub
or
inc
jns
sbb
xor
fcomi
fiadds
into
nop
mov
cli
or
sahf
add
sbb
pop
jns
xchg
cmp
push
add
lret
or
push
roll
cli
shll
popa
ja
inc
ret
cli
or
or
pop
adc
lret
or
adc
cltd
into
std
hlt
cmp
mov
or
ljmp
lret
lret
xchg
testb
les
xchg
xchg
lret
or
pop
pop
gs
fcomi
or
ljmp
lcall
jle
pop
inc
jns
ret
cli
cmc
stos
adc
testb
orb
mov
mov
mov
adc
lret
or
jecxz
or
jle
or
popf
lds
xchg
jle
jle
outsb
std
xchg
sbb
loop
cmp
and
jg
mov
mov
fsubrl
ljmp
mov
lahf
jmp
xor
jp
test
std
xorb
add
dec
adc
lret
mov
mov
mov
pop
jle
test
fsubl
ljmp
adc
lret
push
inc
ret
out
or
cmpsl
pop
jno
stos
nop
mov
bnd
cmpsl
pop
xchg
mov
popa
aam
xchg
pop
mov
inc
shl
mov
ret
insl
icebp
pop
jbe
inc
addb
jb
dec
or
mov
jb
or
scas
cmpb
nop
pop
mov
adc
cmp
inc
inc
negb
add
lret
xchg
add
pop
cmc
iret
adc
orl
mov
or
orl
add
lcall
or
lret
lret
jmp
adc
pop
mov
xor
hlt
or
mov
xlat
shll
adc
mov
mov
std
push
lcall
test
leave
push
jle
into
std
push
pushf
hlt
add
lret
mov
ljmp
fists
ror
pop
add
lds
inc
fmuls
add
popf
jbe
dec
pushw
hlt
fisubl
mov
call
adc
lret
fisttps
enter
sahf
add
stc
pop
pop
inc
lahf
enter
xchg
xor
jbe
inc
fsubrs
rolb
push
nop
mov
adc
lret
cmc
ror
jle
into
std
push
inc
lock
push
aam
dec
push
jle
pop
insb
xchg
inc
fdivs
mov
lahf
popa
rcl
xor
enter
into
std
push
xchg
lds
lret
mov
jb
rcrb
cmpsl
pop
mov
std
or
pop
pop
jns
ret
ljmp
lahf
add
xor
insl
mov
cs
cmp
stos
inc
sbbl
fiadds
mov
fcmovnu
add
outsb
jbe
xor
dec
push
jle
into
adc
lret
jno
xchg
std
xchg
orb
or
mov
mov
or
jbe
push
lcall
or
int
jle
data16
hlt
ret
cmp
fiadds
jle
ljmpw
or
cmp
call
mov
into
std
neg
popa
ja
xor
sahf
cmp
fucomi
cmc
mov
push
lret
sahf
inc
rcrb
int
jle
cs
lret
or
sahf
add
mov
jbe
ror
ret
int
jmp
int
hlt
ds
pop
sub
or
push
inc
popa
add
and
pop
jns
ljmp
sbb
std
xchg
lcall
or
dec
adc
lret
jle
push
push
repz
out
cmc
iret
popa
ja
xor
ljmp
inc
fists
adc
add
jae
add
ja
jle
sbb
addr16
insl
test
jle
pop
xchg
lret
shll
xor
ror
ret
icebp
add
mov
jbe
xchg
lret
shll
or
fcomi
and
inc
or
popa
ja
inc
ret
repnz
and
ja
inc
dec
addl
fadds
inc
int3
testb
add
enter
lret
push
andl
dec
jle
sbb
add
or
mov
xor
pop
add
mov
or
inc
push
jle
sbb
mov
or
arpl
jle
pop
push
inc
lret
or
adc
std
add
lcall
inc
adc
inc
into
pop
add
mov
or
inc
dec
jle
sbb
mov
or
arpl
jle
pop
push
inc
lret
or
adc
inc
pop
sub
pop
ja
inc
pop
mov
arpl
jle
lahf
jmp
adc
inc
jge
leave
push
add
fwait
push
or
adc
add
pop
inc
jle
popa
roll
ljmp
inc
rcrl
popa
ja
xor
xchg
std
xchg
orb
les
into
std
hlt
shlb
xchg
xor
xchg
std
push
dec
pop
jbe
popf
popa
ja
xor
ficoms
ror
ret
adc
shll
cmp
ror
ret
pop
inc
jns
sahf
add
xchg
lahf
adc
add
lret
stc
inc
mov
mov
adc
or
sti
jle
insl
test
fdivl
clc
test
or
jecxz
or
lahf
add
lret
inc
lds
fldl
xor
push
imul
fisttpl
mov
add
lret
add
addr16
jle
into
ljmp
mov
dec
pop
push
or
clc
jle
aas
cmpsb
nop
mov
std
jle
cmpsb
adc
lret
fnsave
popa
std
and
inc
addl
mov
or
clc
jle
aas
dec
xchg
mov
std
jle
ds
lret
jmp
push
mov
inc
sbb
xor
fiadds
or
clc
jle
adc
jbe
xor
arpl
jle
cmpsb
ss
std
xchg
xchg
xchg
mov
add
lret
jmp
jmp
lods
ret
jecxz
jmp
pop
push
and
sahf
add
lret
insl
test
out
fcmovnbe
or
jp
or
ds
rcrb
enter
out
adc
lret
cmc
xchg
adc
decb
jbe
lret
ja
dec
pop
scas
or
push
imul
pop
mov
add
xor
mov
inc
inc
mov
add
mov
int
mov
popl
cltd
int
hlt
ss
pop
cmp
fiadds
or
movsl
stc
cmc
mov
insl
jbe
mov
out
jle
int
xor
scas
adc
lret
xchg
jle
inc
xorl
fiadds
cmp
xor
loope
push
roll
fidivrs
popa
push
xlat
popf
jbe
jge
popa
addl
adcb
adc
lret
xchg
mov
popa
pop
icebp
fcmovu
add
xor
sahf
cmp
jmp
xor
sahf
std
hlt
xor
mov
mov
mov
mov
lods
ret
cltd
lret
push
or
leave
cmp
out
pop
push
sahf
add
repz
out
int
shlb
ljmp
inc
fnstcw
jmp
testb
lret
in
repnz
popl
mov
sbbl
inc
xchg
stos
push
cltd
jbe
or
popa
mov
lret
jle
push
add
mov
push
or
or
sahf
mov
jb
add
pushf
popa
rcr
xchg
ret
pop
inc
inc
lret
inc
shlb
test
dec
inc
xchg
mov
lahf
mov
out
mov
ret
test
cmc
filds
pop
inc
lahf
adc
mov
int
dec
push
or
addl
jbe
inc
ret
inc
ret
testb
sbb
xchg
lret
sahf
add
mov
xchg
sbb
repnz
outsl
mov
cmp
ret
mov
sbb
mov
ret
roll
or
and
or
bound
orl
mov
mov
pop
inc
mov
pop
iret
or
sbb
cmc
icebp
jne
or
sahf
add
mov
jne
or
pop
add
lcall
test
sahf
xchg
sbb
or
addl
lcall
inc
jmp
or
sbb
sub
fcomi
mov
std
jle
adc
sub
push
sahf
add
dec
push
add
lret
add
pop
inc
jno
sbb
sbb
add
inc
gs
addl
subl
xchg
mov
lret
or
and
jno
sahf
mov
mov
add
xabort
js
mov
inc
rorl
inc
and
mov
dec
add
or
clc
mov
dec
add
mov
ret
out
nop
mov
lret
sahf
lds
or
or
ret
pusha
ficoml
or
lret
xchg
lods
pop
or
mov
jge
push
add
into
adc
inc
jno
sbb
jle
popa
push
fiaddl
pop
xor
imul
movsl
lret
aam
adc
add
mov
hlt
or
adc
add
xor
fisubl
mov
ljmp
sbbl
push
popl
shlb
fs
sbb
fdivrs
popa
aam
xor
sahf
pop
out
mov
and
lret
jle
mov
out
xchg
aam
sahf
std
push
lcall
jmp
mov
popa
aad
adc
add
ret
shll
stos
inc
addl
mov
sub
ror
std
push
xor
lret
lret
push
lahf
int
repz
mov
push
jmp
popa
aam
xor
sahf
xchg
push
jmp
popa
aam
xor
sahf
pop
fists
jbe
mov
sahf
mov
or
std
cmc
out
xchg
ljmp
movl
jmp
divb
mov
sahf
std
cmc
out
sub
sbb
enter
dec
std
jle
pop
push
or
leave
mov
sahf
std
push
inc
adcl
sahf
push
jle
sbb
cmc
ret
xorl
lds
imul
lret
lea
xchg
ljmp
pop
pop
mov
add
xchg
xchg
sahf
add
bound
cltd
lret
push
mov
mov
sub
inc
std
jle
mov
xchg
mov
push
add
ljmp
pop
adc
jbe
lcall
mov
or
jbe
xor
mov
add
mov
ljmp
lret
xor
sahf
std
cmc
out
xchg
jle
mov
adc
or
movl
jle
adc
jbe
pushf
popa
jbe
ljmp
add
ja
mov
xchg
stos
sbbl
inc
adcl
pop
shll
pop
push
jle
mov
std
jle
pop
pop
hlt
into
lods
ret
aas
out
jge
sahf
std
cmc
out
xchg
addl
popa
std
or
movl
imul
mulb
add
sahf
jbe
xchg
lret
inc
pop
inc
xchg
jp
pop
inc
lahf
adc
ja
xor
dec
std
jle
pop
inc
jge
pop
pop
cmc
sarl
out
jge
sahf
push
jle
mov
mov
popa
std
or
sbb
ja
stc
pop
jmp
mov
cli
mov
inc
fmuls
add
ljmp
lcall
fdivrs
popa
je
and
jle
pop
push
adc
jbe
icebp
fsubs
repnz
ja
inc
loopne
jle
jbe
pop
xor
ja
repnz
hlt
fbld
jge
jmp
jle
xchg
std
hlt
ret
xor
popa
std
add
mov
fistps
ror
xor
ror
fwait
int
xlat
dec
cli
es
lret
cmc
out
mov
ljmp
lret
mov
out
mov
sbb
popa
std
or
into
adc
lret
aad
fiadds
or
sbb
jbe
mov
fiadds
aam
mov
std
jmp
xor
jbe
stos
pop
popa
std
aam
popa
jbe
repnz
inc
movsl
mov
jl
popa
addl
popa
jbe
ljmp
fmuls
pop
hlt
fmul
push
jle
mov
std
jle
pop
push
or
ljmp
lcall
push
lcall
cmpl
dec
push
jle
sbb
jbe
xor
sahf
std
push
lcall
ficoms
mov
enter
sbb
hlt
into
lods
ret
leave
push
leave
xchg
cli
mov
mov
popa
je
xor
sahf
xchg
hlt
loopne
inc
jge
test
sahf
add
xor
push
adc
lret
jge
loop
mov
cmpsl
add
shlb
mov
xchg
add
xor
sahf
mov
rol
dec
or
mov
enter
xchg
ljmp
std
neg
jbe
leave
lret
or
jbe
jb
popa
xchg
ljmp
mov
lcall
bound
xchg
push
imul
pop
push
jle
xchg
ljmp
xchg
ljmp
icebp
sbb
stc
pop
pop
filds
pop
push
or
iret
push
and
bound
cltd
enter
fisubrs
jle
xchg
mov
adc
lcall
jno
sbb
fadd
sbb
or
cmp
rcrb
imul
pop
pop
hlt
adc
andl
popa
ja
xor
dec
std
jle
mov
pop
cmc
int
xchg
or
jbe
xor
popa
ja
and
sbb
lea
or
ss
jb
and
dec
jge
fisttps
or
divb
mov
sahf
std
hlt
popa
pop
and
push
mov
mov
sahf
push
imul
sahf
push
ficompl
inc
jns
dec
push
jle
mov
inc
xchg
inc
or
cmp
ror
jb
xor
xchg
std
icebp
into
popa
xor
bound
adc
sbb
cli
cmpl
into
std
xchg
lcall
jmp
xor
lods
flds
push
xchg
cmp
movd
into
std
xchg
lcall
fidivs
xchg
mov
ss
bound
mov
jbe
lret
addb
fiaddl
pop
push
or
sbb
out
jge
sahf
add
inc
ret
or
popf
adc
add
mov
or
orl
add
lds
lret
sahf
mov
popa
jb
and
or
loope
inc
lds
mov
lret
add
adc
mov
jmp
sub
ljmp
xchg
std
hlt
cmp
lret
and
bound
xor
dec
std
jle
sbb
fdivrs
fadds
andl
pop
inc
insl
enter
mov
in
or
jb
xchg
lcall
or
sbb
or
mov
push
add
fadds
addl
push
jle
bound
rcrl
add
lret
jle
lcall
fisubl
lea
xchg
std
hlt
fisubl
lea
sahf
push
or
aas
out
jge
sahf
push
or
add
ror
cmp
sahf
push
cmc
ret
xchg
xor
adc
add
mov
cmp
xor
xchg
ljmp
sbb
jbe
xor
mov
mov
or
enter
mov
mov
adc
lret
push
popa
ja
popf
popa
ja
xor
rcrl
adc
bound
cltd
adc
add
dec
out
sbbl
popa
ja
and
ja
popf
hlt
add
and
or
pushf
push
xlat
xor
sbb
push
xlat
xor
std
jle
pop
push
add
xor
sahf
jmp
pushf
popa
ja
xor
ret
rclb
jb
and
bound
cltd
enter
xchg
aaa
ror
jp
lret
jge
mov
hlt
ljmp
jle
mov
hlt
fisubl
lea
adc
or
inc
jbe
dec
jecxz
cmpl
adc
bound
xor
hlt
ret
jnp
popa
mov
pop
push
add
ljmp
or
jg
pushf
xor
pop
rcr
add
mov
inc
jne
fcomi
jle
cmp
ror
push
mov
enter
cltd
std
xchg
sahf
popl
lcall
mov
jne
jle
mov
ja
xor
mov
mov
rcrb
addb
inc
jb
and
bound
inc
mov
mov
sahf
push
xlat
dec
out
sbbl
popa
ja
xor
mov
hlt
fisubl
lea
or
or
jecxz
add
ljmp
mov
dec
test
jbe
inc
cwtl
xchg
cmc
xchg
stc
push
jmp
iret
ljmp
xchg
mov
ret
lea
sahf
add
mov
push
jle
mov
lret
incb
jmp
add
xchg
je
xor
int
fidivs
popa
std
add
xchg
xchg
xchg
std
test
fiadds
or
lods
ret
popa
ja
xor
xchg
mov
lret
push
popa
ja
xor
xchg
mov
xchg
std
push
xchg
rcrb
addb
popf
idivb
mov
inc
addl
add
jmp
and
stos
stos
jl
sahf
xchg
cwtl
mov
testb
sahf
std
push
inc
inc
xchg
test
std
fiadds
shlb
fiadds
shrb
inc
lret
and
arpl
dec
popa
pop
cmc
mov
sahf
push
jle
mul
mov
sahf
push
and
arpl
xor
fiadds
imul
inc
sbbl
ss
lret
test
sbb
xchg
mov
sahf
push
and
arpl
xor
fiadds
imul
inc
sbbl
xchg
ror
pop
inc
lahf
adc
push
or
bound
mov
popl
lcall
add
ljmp
fimull
add
lret
jle
std
push
xor
lret
lret
jle
into
std
xchg
testb
les
into
std
hlt
xor
push
jle
lods
std
mov
cmpsl
cmp
fistl
inc
lea
sahf
inc
add
xchg
cmp
popf
enter
std
xchg
into
mov
dec
pop
jbe
xor
cmpsb
adc
lret
hlt
into
lods
ret
movsl
cmc
cmc
ror
jle
into
std
xchg
lcall
fists
push
ljmp
popa
pop
cmc
into
ljmp
jbe
mov
or
rcl
popa
jbe
lods
std
mov
mov
inc
outsb
cmp
mov
pushf
popa
pop
push
fcmovu
add
inc
data16
xchg
repnz
inc
pop
pop
fisttps
lret
mov
jb
or
popa
std
jle
sbb
xor
sahf
push
jle
lret
lret
std
xor
nop
cmpl
in
pop
jmp
lret
inc
stc
pop
lret
inc
lahf
adc
add
stc
dec
pop
mov
adc
or
cld
jle
hlt
popa
jb
clc
test
or
repnz
jle
pop
xchg
jmp
popa
aas
adc
mov
movsl
rcr
sarl
xchg
fisubs
cmpl
arpl
jle
push
add
ret
add
ljmp
xor
sahf
push
jle
idiv
jle
popa
ja
xor
sahf
xchg
xchg
popl
pusha
std
jle
jbe
xchg
lret
dec
or
mov
jb
stc
push
xor
jecxz
or
xor
inc
adcl
iret
aam
hlt
sbb
fwait
popa
ja
xor
pop
cmc
push
jmp
lret
mov
jb
or
push
mov
adc
or
popa
jbe
inc
sbb
jg
popa
lds
pusha
std
jle
lahf
add
mov
cmp
mov
pusha
std
jle
lea
jle
leave
ljmp
ljmp
repnz
inc
sbb
jg
popa
push
jle
xchg
std
xchg
xchg
push
push
leave
std
xchg
repnz
stc
pop
pop
filds
pop
std
cmc
out
lcall
lret
cmp
or
add
jbe
jg
popa
pop
inc
lahf
adc
add
xor
sahf
std
xchg
mov
stos
outsb
nop
mov
xor
push
mov
leave
mov
dec
push
les
jbe
mov
dec
popa
std
cmc
mov
xchg
popa
std
inc
dec
dec
cld
jle
mov
or
sbb
cmc
xchg
adc
shll
in
or
xchg
ljmp
adc
lret
jle
sbb
cmc
jecxz
xchg
popa
std
rcrl
pop
jbe
inc
sbb
jg
popa
push
imul
jbe
lret
shll
dec
push
jle
cmpsb
adc
lret
pop
xor
std
push
leave
std
xchg
repnz
stc
pop
pop
fists
mov
pushf
leave
xor
loop
movsl
inc
loop
xchg
mov
arpl
mov
popl
inc
adcl
sahf
addl
add
sbb
std
xchg
testb
push
lahf
hlt
pop
or
mov
push
or
jae
dec
lahf
hlt
add
into
std
push
and
insb
mov
pop
add
lea
xchg
or
jbe
xchg
lret
or
jbe
xor
sbb
or
mov
add
xchg
popl
dec
pop
ja
inc
flds
mov
push
jmp
popa
aam
xor
mov
hlt
xchg
hlt
add
add
sahf
add
and
xchg
xor
mov
add
xchg
add
xchg
popl
dec
pop
ja
inc
flds
mov
std
push
lcall
cmpl
pop
jbe
leave
or
popa
std
jle
lcall
lret
shll
mov
xchg
lds
xlat
ss
std
jle
mov
add
jle
pop
ljmp
jbe
jge
popa
xchg
xchg
std
cmc
out
lcall
or
movsl
ret
movsl
ret
jl
popa
pop
fmuls
iret
push
aam
lods
hlt
mov
mov
arpl
mov
popl
inc
mov
nop
mov
add
sbb
std
xchg
testb
push
xlat
popf
hlt
pop
jle
mov
push
or
popa
jbe
popf
hlt
add
into
std
push
and
jle
lcall
inc
fisubl
cltd
repz
adc
sub
call
pop
jbe
lds
dec
mov
out
mov
add
xchg
addl
sahf
std
push
lcall
ficoms
mov
idiv
jle
popa
ja
dec
pop
jbe
mov
popa
ja
mov
popa
pop
popa
fcmovu
add
or
add
ret
jle
push
adc
lret
aam
jb
cld
ret
test
pop
pop
inc
and
add
lret
hlt
ficompl
ret
xchg
jbe
xor
jp
ror
sarl
adc
lret
aam
jb
insl
out
pushf
add
cltd
enter
adc
popa
push
cmpsl
popa
xor
std
andl
jg
jle
push
cmpsl
pop
aaa
popa
std
cmpl
hlt
inc
mov
cmp
arpl
jle
xor
ret
xchg
or
xor
push
add
xor
sahf
add
lret
aaa
lret
sahf
add
dec
adc
lret
or
push
jmp
pop
inc
jns
dec
mov
popa
aad
adc
lret
jns
popa
ja
cltd
hlt
add
xchg
std
xchg
out
inc
orl
add
add
add
inc
popf
fs
fwait
lahf
add
xchg
push
and
popl
pusha
std
jle
into
ljmp
xchg
push
jmp
popa
aam
xlat
into
adc
lret
push
dec
sti
or
mov
popa
aam
xor
push
hlt
xor
insl
fcmovu
add
lds
jecxz
lret
test
sahf
add
rclb
mov
lea
sbbl
into
ljmp
fisttpl
orb
inc
gs
inc
out
adc
lcall
imul
ljmp
xor
popl
lcall
roll
loop
xor
mov
orl
or
xchg
push
or
in
xchg
adc
add
inc
jle
into
std
push
inc
sbb
popa
xor
std
roll
loop
xor
rclb
ror
xchg
popa
std
shll
inc
cld
jle
mov
ja
test
add
ret
dec
jle
jle
into
pop
cs
push
std
fiadds
jle
xchg
std
xchg
outsb
popl
dec
pop
push
add
push
cmc
shlb
mov
popa
rorl
outsb
cmc
pop
rcrl
push
jmp
int
xorl
lods
ret
lahf
adc
xor
cmpsl
pop
movsl
aaa
fiadds
xlat
popf
pop
inc
jne
mov
add
fcmovnu
add
lret
push
jmp
pop
inc
jge
dec
mov
popa
rorl
xor
std
mov
add
lcall
jle
mov
ret
outsb
jg
dec
popa
jbe
popf
hlt
add
into
std
xchg
lcall
test
sahf
ret
adc
push
jmp
pop
inc
jge
dec
push
push
adc
ret
imul
data16
inc
or
mov
inc
sar
mov
dec
out
test
into
ljmp
xchg
pop
cmc
fistl
ret
xchg
icebp
ret
cli
or
xchg
ret
into
xchg
mov
icebp
xchg
mov
ds
cmc
leave
push
jle
into
adc
lret
jne
pushf
xor
rcrb
lret
mov
jb
mov
int
test
arpl
pushf
leave
mov
ds
inc
jns
sbb
or
popl
mov
xchg
mov
ss
aam
mull
std
push
inc
inc
xchg
sbb
les
into
std
hlt
ss
xchg
xor
sahf
xchg
fcomi
cld
jecxz
fprem1
int
xorl
pop
jg
into
sahf
add
repz
ss
ret
xchg
mov
ss
aam
and
mov
xor
ljmp
loopne
or
pop
inc
mov
sahf
cmp
xor
pop
add
xchg
mov
inc
rorl
jle
push
xorb
mov
movsl
inc
jns
dec
xchg
xchg
push
jmp
popa
aam
xor
sahf
mov
jne,pt
mov
rcrl
push
or
adc
lcall
jle
xchg
push
shll
sahf
pop
inc
lahf
adc
add
mov
lods
ret
idiv
jle
pop
lahf
in
popa
std
jmp
insl
test
jg
popa
mov
pusha
std
jle
fdivp
sub
cmp
arpl
jle
add
sub
ret
or
into
lahf
add
dec
cmp
jle
into
jbe
xor
sahf
jmp
xchg
mov
inc
addl
push
or
ss
jle
mulb
jle
sbb
data16
popa
push
or
ss
jle
into
std
xchg
add
or
push
jle
into
popl
arpl
jle
adc
jmp
lcall
inc
inc
jecxz
jmp
les
inc
lret
scas
fdivrs
xor
pop
data16
push
rcrb
ss
jle
int
shlb
sahf
xchg
mov
jle
popa
ja
xor
sahf
xchg
xchg
jmp
jno
mov
xchg
mov
std
jle
jbe
mov
sahf
pop
ficoms
out
add
lcall
xor
std
sbbl
pusha
std
jle
xor
mov
mov
std
jle
sahf
push
imul
popa
push
mov
mov
or
loop
jle
sbb
fidivrs
pusha
std
jle
divb
ror
ljmp
jbe
or
ja
inc
sbb
jg
popa
push
imul
adc
shll
int3
add
inc
sbb
jg
popa
push
jle
xchg
std
xchg
xchg
or
jbe
je
popa
xchg
lahf
sarl
push
jle
ficoms
ror
push
jle
mov
jbe
fisubs
lods
sti
fiadds
jmp
and
lret
cltd
cmp
sbb
inc
rcl
jb
insl
into
lahf
add
xor
hlt
inc
fdivr
pop
cmp
pusha
std
jle
jmp
jb
clc
test
addb
jle
scas
xor
lret
jge
popa
std
jle
mov
ror
sahf
mov
sahf
push
jle
cmp
ror
xchg
xor
ficoms
ror
push
or
cld
jle
popa
ja
mov
pushf
add
lret
inc
shrb
lcall
rcl
jb
insl
lret
sbbl
pop
cmp
popa
std
jle
add
jle
popa
icebp
sub
cmp
mov
std
jle
sahf
add
fcomip
adc
lret
xchg
scas
popl
inc
and
jle
popa
cmp
jmp
rcrb
sahf
add
push
xchg
mov
adc
add
xor
xchg
push
jle
sbb
hlt
rcrb
adc
xchg
push
xchg
mov
push
push
cmpsb
pop
xchg
xchg
rcrb
popa
ja
xor
sahf
ljmp
push
rcl
jb
insl
ret
orl
popl
arpl
jle
lcall
xchg
mov
inc
sbb
jl
popa
mov
int
xor
sahf
mov
mov
jno
jbe
xchg
sahf
pop
jle
mov
mov
sahf
add
xchg
into
push
outsb
int
add
xchg
into
push
int
add
inc
stos
cmpsb
nop
mov
inc
sbbl
fidivl
ror
ja
cltd
into
std
push
inc
mov
addl
popa
std
shll
ljmp
fcmovu
add
mov
mov
sahf
add
xchg
into
push
or
sahf
add
xchg
into
push
dec
sahf
add
xchg
into
popl
pusha
std
jle
stos
inc
mov
sahf
std
hlt
int
jle
sbb
jg
popa
push
push
adc
shll
rclb
ror
inc
mov
lret
mov
jb
or
andb
std
jle
leave
push
or
arpl
jle
insl
test
jle
sahf
push
fdivr
pop
cmp
arpl
jle
jecxz
cmpl
rorl
mov
into
jbe
xor
sahf
jmp
xchg
mov
xchg
jbe
or
sbb
jl
popa
push
jle
rclb
ror
jg
lret
or
data16
jle
hlt
sub
and
or
ljmp
lcall
inc
adc
roll
jg
popa
push
jle
sbb
ror
xchg
popa
std
shll
pop
add
lret
inc
lahf
adc
push
xlat
xor
int
xorl
mov
movsl
rorl
ljmp
stc
pop
cld
xor
pop
jne
xor
jecxz
xchg
jle
andb
sub
push
jle
sahf
adc
lret
or
jle
sbbb
add
xchg
pop
sub
inc
jns
fcomi
rcrb
xchg
add
xor
sahf
cmp
cwtl
pop
hlt
into
lods
ret
popa
pop
leave
fcmovnu
add
xchg
xchg
inc
xchg
pushf
adc
pop
xlat
and
xchg
jmp
jmp
enter
sahf
add
dec
pop
pop
hlt
into
adc
pop
inc
fwait
adc
push
xlat
stc
jae
ja
inc
xor
pop
outsb
movsl
fisubrl
xorb
orl
lcall
or
jno
dec
push
add
pushf
hlt
inc
lret
ljmp
mov
mov
push
jmp
lret
push
movsl
cli
popa
pop
test
fiadds
or
sbb
xor
fildl
cmc
out
mov
std
xchg
push
inc
addl
cmp
xor
sahf
push
xchg
ret
sbbl
or
xor
popa
xlat
or
ret
pop
fmuls
lret
mov
jb
xlat
popf
lods
hlt
mov
adc
inc
jmp
sub
ja
popa
xor
add
lds
popl
pushf
popa
ja
and
jle
enter
xchg
mov
adc
jle
sbb
push
xlat
pushf
hlt
add
mov
sahf
adc
mov
std
push
pushf
enter
hlt
add
lret
shll
std
push
dec
jecxz
jle
data16
dec
popa
std
cmc
lock
lcall
imul
sahf
xchg
mov
pop
cmp
pop
and
push
jle
xchg
adc
lret
mov
cmp
popf
popa
aam
xchg
push
rcl
dec
in
jle
jbe
outsl
xor
mov
inc
outsb
std
xchg
inc
mov
leave
outsb
push
imul
rol
inc
jb
insl
ret
sbbl
adc
or
cld
jle
insl
test
or
push
shll
data16
xor
popa
mov
pop
adc
xchg
data16
pushf
divb
add
pusha
std
jle
into
ljmp
data16
jle
into
std
mov
scas
inc
andl
hlt
add
data16
jle
popa
ja
lcall
jno
pop
and
mov
mov
or
popa
pop
add
fiadds
or
data16
jle
into
std
hlt
popa
pop
int
fiadds
inc
popa
add
cltd
popa
pop
aad
fiadds
shll
sahf
pop
or
pop
push
or
sbb
shlb
inc
lret
out
jmp
xor
ret
xor
les
add
jb
aam
into
pop
into
push
rcrl
fcmovnbe
or
add
xchg
fs
popl
sbbl
shll
adc
add
outsb
les
jmp
jle
rorb
inc
jb
mov
leave
pop
ret
shlb
int
shlb
xchg
std
xchg
ljmp
int3
inc
jecxz
xlat
inc
ret
push
inc
fistpl
jle
mov
xor
xchg
std
xchg
ret
addl
push
xchg
mov
jg
iret
loop
jle
xchg
std
xchg
mov
icebp
insl
pop
hlt
movsl
stc
cmc
ret
cmc
into
add
lods
ret
ret
rcl
jb
stc
popa
pop
leave
push
mov
leave
push
stc
inc
std
hlt
popa
ja
xor
sahf
xchg
fsts
mov
ja
xor
mov
mov
popa
aam
or
and
xor
xchg
mov
inc
xorl
mov
mov
jne
jle
xchg
std
xchg
mov
xchg
lods
ret
rcrl
pop
pop
inc
lahf
adc
add
lret
mov
hlt
adc
xor
xchg
ss
sub
popa
std
fdivr
push
int3
iret
push
xlat
cltd
enter
enter
popl
dec
pop
or
subl
pop
mov
dec
push
cld
jle
aas
jle
mov
std
jle
out
ror
xchg
xchg
mov
inc
sbb
xchg
fcmovnu
add
dec
push
cld
jle
aas
dec
nop
mov
inc
addl
push
xlat
inc
sbb
xor
add
hlt
cmp
mov
xor
std
jle
into
std
push
lcall
mov
inc
sbb
test
sahf
add
pushf
popa
pop
in
fiadds
push
popa
ja
inc
sbb
jle
rclb
ror
add
mov
std
jle
mov
ljmp
xchg
popl
addr16
jle
sbb
or
push
xchg
data16
inc
sbb
xor
sahf
add
push
jle
sbb
jbe
xor
pop
xchg
xor
or
lcall
inc
fucomi
shll
jmp
jle
ss
lret
or
ljmp
xor
push
adc
lret
jle
outsb
std
xchg
mov
stos
js
popa
push
jle
push
xchg
outsb
mov
xor
cs
lret
jne
dec
std
hlt
cmp
jmp
jmp
fists
ljmp
jl
add
enter
pop
xchg
add
pop
mov
or
sahf
add
xor
sahf
xchg
xchg
push
leave
sahf
add
xchg
or
popa
xchg
popf
enter
xchg
pop
mov
out
lcall
imul
lret
jl
popf
add
pop
xor
xchg
out
popa
jge
lret
or
loop
icebp
pusha
jg
dec
pusha
std
cmc
jle
popa
sub
fdiv
jg
pop
add
pushf
mov
rol
sahf
mov
push
xchg
dec
addr16
iret
push
sti
mov
popf
rolb
jle
ret
hlt
into
lods
ret
enter
ficoms
ror
push
jmp
popa
pop
aad
fiadds
shll
sahf
mov
enter
popl
inc
pop
pop
fimuls
adc
xor
movsl
rorl
clc
cmp
lret
imul
jbe
mov
lret
xlat
inc
fisubrl
sbbl
xchg
std
push
lcall
rolb
push
aam
hlt
std
jle
mov
pop
cltd
fcmovnu
add
mov
int
or
es
lret
jle
cmpsl
pop
movsl
shr
dec
jle
mov
aad
xor
sahf
int
xchg
lcall
push
dec
pop
jbe
inc
mov
nop
mov
push
shlb
popa
jbe
fidivs
jle
popa
cmp
out
xchg
cmp
or
mov
push
jle
adc
add
cltd
adc
mov
ficoms
ror
repnz
jmp
mov
jne
or
ret
popa
enter
xor
sahf
push
jle
mov
cli
xlat
popf
hlt
std
shlb
mov
nop
mov
pop
inc
inc
shlb
test
pop
xchg
lahf
shl
popl
lods
sbb
cmc
aas
fsubrp
jb
adc
jg
stc
inc
cmp
fidivrs
fadd
ljmp
mov
jbe
jle
popa
pop
xlat
stc
push
mov
adc
or
mov
fs
add
rorb
es
adc
xor
lds
lahf
adc
mov
ret
hlt
pop
inc
jge
fistl
add
ljmp
mov
xor
adc
cmp
adc
lret
xchg
mov
inc
pop
and
jbe
push
sub
inc
test
xchg
sbb
dec
dec
ja
inc
jmp
add
jmp
or
mov
adc
lret
xchg
mov
inc
push
pop
mov
and
xchg
cltd
xchg
popf
inc
push
pop
ja
inc
cwtl
xchg
cmpsb
or
jmp
mov
ret
imul
sbb
hlt
leave
fsubr
popa
inc
pusha
sub
ret
or
xchg
push
imul
pop
push
add
addl
faddp
xchg
stos
jl,pt
sahf
pop
cmc
enter
xchg
sub
imul
jge
pop
push
or
int
or
sahf
push
or
ljmp
push
cmp
inc
push
jbe
inc
dec
sub
xchg
aas
into
xchg
or
hlt
int
cmpb
cmpsl
add
std
vpsllvd
push
lods
ret
lds
inc
pop
jmp
rolb
or
pushf
leave
mov
pop
inc
jge
popa
or
orl
add
or
jl
frstor
inc
mov
or
dec
push
inc
mov
adc
mov
inc
std
ret
sbb
cmc
mov
xchg
cmpsl
or
aas
or
inc
lret
adc
orb
mov
mov
xchg
and
xchg
xchg
cmpb
or
xor
jge
dec
pop
and
repz
jbe
xor
jmp
push
lods
ret
inc
fisubl
test
cmpb
push
sti
loopne
xchg
cmpb
pop
add
mov
cmp
mov
lret
cmc
ret
movsb
dec
movsl
ret
shll
mov
cmp
sbb
dec
and
adc
rorb
ret
dec
mov
xchg
dec
mov
ret
leave
icebp
pop
ja
inc
mov
push
cmp
sbb
dec
and
lret
mov
jecxz
cmpl
popa
ja
mov
popl
lcall
jle
xchg
mov
jmp
xlat
and
lea
pop
fmull
lods
ret
adc
dec
movsl
into
adc
sti
add
ljmp
sahf
mov
add
mov
ja
xchg
adc
inc
movsl
adc
jbe
inc
add
mov
mov
dec
mov
adc
loop
lods
adc
icebp
sub
andl
adc
push
or
adc
xor
rcll
rcrb
mov
adc
mov
dec
fs
repz
push
clc
fstpt
sbb
or
sarb
or
ljmp
inc
mov
fadds
xchg
pop
pop
pop
fmull
lret
mov
jecxz
cmpl
adc
or
adc
mov
mov
xchg
mov
xchg
mov
loope
pop
inc
xor
ljmp
and
jle
sbb
mov
adc
incb
ret
jno
fiadds
shll
mov
hlt
out
inc
jge
lret
sbb
ret
aam
int3
push
jle
xchg
lret
inc
lahf
adc
incb
and
inc
jge
adc
push
or
hlt
inc
jle
scas
adc
lret
movsl
and
repnz
and
inc
movsl
rcrb
pop
inc
inc
fisubl
test
sahf
push
inc
lret
mov
sahf
add
into
popa
inc
mov
or
addl
sbbb
add
inc
ljmp
fdiv
add
scas
adc
lret
imul
pop
push
or
mov
ret
or
into
std
rol
rol
lret
insl
pushf
adc
push
test
add
and
jle
sbb
jbe
mov
fiadds
xlat
and
jle
sbb
jbe
mov
fiadds
xlat
and
jle
sbb
jbe
inc
fisttpl
or
cltd
mov
push
popa
ja
inc
xchg
push
shll
fisttpl
or
lcall
xor
pop
push
addl
lea
push
jle
mov
std
shr
pop
push
addl
lea
pop
dec
mov
inc
mov
rol
pop
push
addl
mov
push
roll
std
rcr
pop
or
es
mov
ret
jge
sbb
addr16
adc
push
shll
bound
mov
cli
shll
into
std
nop
inc
add
jmp
mov
push
rorl
adc
cwtl
into
std
adc
add
jbe,pt
jns
popa
pop
fadds
pop
push
or
iret
push
rcrb
mov
jle
xchg
mov
inc
subl
bound
and
adc
cmpsl
and
jbe
jl
popa
addl
adc
jbe
inc
lret
decb
xchg
bound
adc
sahf
add
inc
mov
lahf
xchg
mov
ret
rcrl
sahf
add
jmp
mov
mov
jbe
jns
popa
pop
or
mov
ss
mov
push
or
popa
push
mov
push
rcl
jb
or
adc
jbe
inc
lret
decb
mov
mov
mov
inc
jge
pop
ja
stc
pop
jmp
or
xchg
push
rcrl
jmp
or
lods
xor
ljmp
lret
sti
mov
ljmp
sahf
popl
mov
popa
pop
mov
inc
lret
or
adc
mov
lcall
nop
icebp
inc
jbe
cltd
leave
std
push
lcall
mov
adc
or
xchg
mov
lds
or
mov
iret
mov
ret
jge
int3
mov
lret
int3
xor
nop
push
or
popa
push
xchg
repz
cmc
rclb
jbe
lods
cmpsl
xor
hlt
add
and
cmc
jle
mov
adc
push
or
adc
and
ljmp
ret
mov
sahf
push
jle
sbb
push
mov
ret
rcl
jmp
imul
mov
ret
mov
pop
pop
fmull
lret
mov
sbb
push
or
popa
std
jle
inc
pop
add
ljmp
xor
xchg
orl
sahf
push
jmp
pushf
jbe
jg
popa
mov
sbb
fdivrs
popa
xor
arpl
jle
pop
add
ljmp
popf
jbe
js
popa
pop
add
ja
mov
leave
ljmp
pop
pop
cmc
adc
ljmp
xchg
jle
pop
or
out
jge
sahf
push
jmp
popa
jb
and
jle
sbb
jbe
xor
cmp
jle
adc
or
mov
jbe
popf
jbe
jbe
popa
pop
or
inc
movsl
inc
fcomps
or
pop
jp
xor
ss
jle
pop
pop
hlt
jmp
and
imul
mov
jne
xor
pop
inc
jge
mov
inc
sbbl
fiadds
shll
xchg
push
jmp
popa
aam
xor
rcrl
push
or
sbb
mov
ret
jle
xchg
pusha
std
jle
sbb
fdivrs
adc
push
or
popa
ja
xor
iret
sbb
xchg
pop
push
sbbl
popa
ja
inc
ficomps
jle
mov
shll
mov
or
mov
std
cmc
out
xchg
mov
or
push
jle
mov
push
or
popa
push
xchg
or
push
jle
mov
std
cmc
out
xchg
mov
or
add
xchg
arpl
and
sti
jle
sbb
pop
jl
sahf
adc
mov
inc
addl
fwait
bound
out
mov
inc
subl
push
mov
lds
inc
inc
orl
sahf
lds
inc
inc
orl
sahf
lds
inc
inc
orl
sahf
rcl
jb
insl
sbb
addr16
adc
cltd
into
std
mov
scas
inc
andl
adc
or
push
jle
mov
mov
inc
ficoml
inc
jle
add
hlt
rcrl
fxtract
frstor
ljmp
jmp
imul
pop
dec
or
mov
sbb
inc
jge
into
std
hlt
ret
insb
xor
std
hlt
ss
pop
mov
or
lret
inc
lahf
adc
add
xor
std
sbbl
and
jg
popa
icebp
sub
or
into
lahf
add
dec
cld
jle
into
push
jle
cli
adc
lret
pop
xor
mov
xchg
add
inc
test
dec
ds
idivb
mov
pop
or
popa
addl
xchg
mov
or
or
sahf
aas
push
add
lret
pop
or
ljmp
adc
add
inc
sbb
or
cld
jle
into
popl
bound
aad
dec
cld
jle
pop
les
pushf
popa
aad
xchg
lahf
adc
pop
or
inc
mov
mov
adc
or
clc
jle
insl
test
add
fs
jle
lcall
fcomip
adc
lret
xchg
scas
popl
xor
sahf
ljmp
or
addl
push
imul
outsb
popl
fs
jle
popa
ja
and
jle
adc
push
and
inc
addl
inc
andl
jbe
pop
xor
nop
std
mov
scas
inc
andl
jmp
mov
scas
inc
sbbl
ret
jbe
jl
popa
xchg
xchg
mov
gs
jle
lds
jle
jbe
imul
pop
jbe
xor
sahf
jmp
mov
sahf
popl
std
jle
popa
pop
int
fiadds
imul
jbe
cltd
int
add
fs
jle
into
ljmp
mov
mov
jnp,pt
popa
push
imul
adc
roll
out
xor
adc
lret
cmc
int
ljmp
popa
pop
fstp
fiadds
jmp
pop
fists
lret
mov
jb
or
push
xlat
popf
hlt
inc
mov
xor
and
jg
popa
mov
pusha
std
jle
jmp
jb
clc
test
add
repz
pop
push
add
lret
pcmpeqd
cmpsb
jl
sahf
mov
or
stos
jl
sahf
std
mov
jle
jle
adc
inc
into
mov
push
shlb
sahf
push
jle
cli
adc
lret
jge
popa
std
shll
shr
jle
mov
mov
mov
mov
adc
lret
roll
or
imul
dec
pop
push
imul
es
sahf
mov
popa
aam
or
or
xchg
ljmp
popa
aaa
cltd
sti
fiadds
shlb
nop
std
hlt
ret
or
pop
mov
fdivs
sahf
push
jle
popa
aaa
mov
xor
jbe
hlt
xor
pusha
std
jle
lcall
and
call
jle
sbb
cmc
rcll
xchg
popa
std
jmp
lcall
shll
xchg
std
hlt
ret
or
pop
mov
rcrl
push
sbbl
int
stc
inc
mov
mov
adc
or
stc
jle
insl
test
jle
mov
enter
pop
ds
std
mov
scas
inc
andl
popa
aaa
popf
sti
fiadds
imul
jmp
rcrb
fiadds
imul
pop
fcomps
ror
jle
sbb
add
xor
shll
or
jle
sbb
fdivrs
push
add
xor
mov
add
xor
or
push
jle
popa
xor
inc
std
jle
pop
pop
or
stos
es
sahf
push
imul
sbb
fdivrs
adc
shll
insb
std
jle
sbb
fdivrs
lahf
add
and
lock
movl
and
enter
xchg
xor
mov
mov
adc
lret
test
cmp
iret
sahf
add
mov
popl
lcall
xlat
inc
data16
hlt
ret
inc
cmp
mov
jbe
bound
jl
andl
sbb
pop
fists
jb
insl
fcmove
push
mov
leave
mov
xor
push
xor
scas
inc
andl
push
shlb
popa
pop
cmp
std
xchg
orb
cmc
scas
adc
lcall
or
popa
std
fdiv
pop
pop
or
mov
push
jmp
and
jle
adc
cmp
mov
inc
iret
sahf
add
xchg
push
imul
fcomi
jmp
lcall
imul
push
mov
mov
int
sbbl
add
lcall
jle
into
std
xchg
jle
inc
addl
std
hlt
ret
jle
ljmp
orb
fcmovnu
add
xor
mov
mov
push
imul
rcrl
push
or
iret
push
or
sahf
add
jl
std
or
xchg
push
jle
mov
jl
xor
into
std
mov
scas
inc
andl
enter
popa
std
imul
testb
sub
xlat
mov
jbe
arpl
popl
dec
pop
jle,pn
out
ror
aam
and
insl
jle
push
push
lcall
leave
movsb
popa
std
add
xchg
std
mov
mov
xor
icebp
std
jle
hlt
add
lret
shll
jbe
out
xor
lods
ret
pop
push
nop
mov
std
jle
jbe
pop
xor
sahf
ja
inc
fisubl
mov
sahf
ljmp
test
inc
cmp
jbe
pusha
xor
jne
jmp
and
jecxz
xor
into
std
xchg
mov
pop
rcl
jb
insl
data16
add
jmp
stc
pop
cmp
popa
std
jle
add
xor
insl
test
inc
inc
jecxz
sub
ret
inc
mov
push
hlt
add
popa
xor
pop
push
into
std
xchg
lret
sbbl
mov
xchg
mov
aaa
movsl
fcmovnu
add
mov
ret
inc
lret
cmp
add
xor
bound
sbb
cli
jle
fisttpl
hlt
fdivp
data16
out
ror
xchg
xor
into
push
push
adc
add
popa
aaa
sar
add
push
jmp
into
std
xchg
lret
xor
jmp
jle
jne
shlb
adc
lret
jle
test
hlt
cmp
mov
mov
mov
popf
popa
pop
std
fcmovu
add
cltd
hlt
add
stos
xor
lret
test
enter
and
jle
sbb
pop
dec
or
mov
jb
rcrb
cld
xor
pop
jne
ret
loop
popa
lods
ret
jg
sub
sub
inc
popa
mov
sahf
adc
lret
or
jle
sbbb
add
fidivs
ror
inc
popa
inc
or
push
jmp
into
xchg
add
xor
sahf
mov
insl
ja
xor
sahf
jmp
xlat
xor
sahf
cmpl
mov
nop
mov
rorl
into
dec
push
push
into
dec
push
push
into
or
mov
dec
movsl
jmp
or
pop
adc
adc
movsw
ficomps
or
popf
rcr
or
into
dec
push
push
into
dec
push
push
into
and
pusha
inc
addl
mov
iret
push
imul
cld
ror
aaa
fiadds
and
arpl
stc
pop
lds
sahf
add
pop
xchg
adc
xchg
or
push
ja
dec
push
std
fildll
aas
ror
rolb
ljmp
lret
cmc
ljmp
cwtl
dec
jl
or
jbe
or
or
mov
mov
ja
xchg
cmp
pop
jbe
pop
xchg
adc
xchg
and
arpl
dec
pop
jbe
lcall
imul
cld
ror
mov
ja
inc
xchg
loop
mov
inc
subl
push
shll
data16
jle
sbb
loop
mov
add
aaa
fiadds
or
pusha
inc
orl
push
xchg
add
sbb
or
int
xlat
popf
lods
hlt
jmp
enter
jo
jle
add
sub
sahf
add
inc
mov
addl
sbb
xchg
inc
fiaddl
test
out
shlb
inc
adc
sub
pop
mov
pop
mov
pop
xor
clc
rcrb
pop
xchg
mov
mov
or
mov
outsb
movsl
fisubs
addl
insl
cmp
shlb
xchg
mov
mov
or
sahf
add
sbbb
jne
jbe
je
inc
fisubl
xchg
inc
jbe
or
add
in
loopne
add
adc
adc
fucom
adc
dec
pop
push
push
sub
dec
add
sahf
mov
pop
fdivl
add
dec
fwait
add
jle
xchg
or
shlb
dec
sub
mov
adc
rolb
mov
insb
inc
and
sbb
sahf
add
or
xchg
or
sahf
add
lret
sahf
add
inc
xchg
inc
mov
xchg
adc
shrd
or
mov
mov
out
mov
pop
icebp
mov
out
push
add
pop
inc
movsl
shlb
jle
pop
mov
push
sahf
add
lds
mov
lret
dec
adcl
movsl
notb
dec
or
mov
sti
enter
int
stos
or
addl
sub
lret
sahf
add
sahf
mov
es
inc
lret
leave
pop
inc
xorb
push
movsl
rclb
rorb
mov
add
pop
adc
fidivrl
lret
sahf
add
icebp
fisubl
leave
mov
stos
orl
mov
orb
cmp
lea
test
jle
inc
mov
movsl
fdiv
daa
and
or
js
xchg
aas
xchg
add
xor
sahf
xchg
sbb
or
mov
lret
inc
or
filds
ror
xchg
movsl
data16
add
xchg
xchg
or
sahf
mov
out
xchg
push
lret
or
lret
dec
pop
adc
xchg
mov
xchg
or
mov
mov
loope
mov
ss
call
or
dec
mov
sbb
mov
out
mov
inc
inc
fisubl
mov
xor
mov
aad
orb
inc
shlb
mov
iret
sahf
add
adc
or
cmp
cltd
popa
push
adc
mov
dec
mov
lahf
add
or
dec
movsl
ljmp
int
mov
jmp
sub
sahf
add
fimuls
mov
lret
mov
out
mov
addl
adc
add
inc
dec
shll
push
shrl
dec
jno
inc
shlb
roll
or
dec
mov
out
mov
mov
out
mov
leave
mov
cmpsb
mov
sub
xchg
add
mov
je
push
mov
sahf
add
add
sbb
adc
add
lret
or
cmp
mov
sub
lret
mov
add
ss
stc
mov
xchg
xchg
lret
inc
shlb
mov
sbb
int
mov
add
mov
or
mov
or
xchg
mov
aaa
popa
std
or
ljmp
lret
sahf
add
stc
pop
pop
fists
fwait
add
rcrb
ret
adc
add
lret
inc
into
rcrl
add
dec
fwait
add
pop
push
xchg
adc
xchg
or
ljmp
fcmovnu
add
mov
ljmp
inc
pop
ja
xchg
rol
or
adc
xchg
adc
xchg
add
mov
or
mov
add
into
rcrl
mov
inc
lret
movsl
fisubrs
push
aam
mov
fidivrl
push
or
mov
inc
lret
repnz
add
ficoms
add
mov
pop
push
aaa
fiadds
push
hlt
add
addr16
jle
mov
jl
sahf
addl
sahf
mov
jle
inc
ret
or
in
mov
or
adc
inc
stc
pop
mov
jbe
xor
popf
add
ficoml
and
shrl
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmp
pop
mov
into
lods
ret
lcall
movlps
inc
stc
pop
mov
fucompp
mov
sbb
jo
popa
adc
std
adc
add
mov
mov
lret
or
push
loop
mov
std
inc
mov
add
pusha
std
jle
popa
or
or
movsl
pop
dec
aaa
fiadds
repnz
add
mov
pop
push
aaa
fiadds
push
hlt
add
data16
jle
mov
jl
sahf
addl
sahf
mov
jle
inc
ret
mov
or
jg
neg
add
inc
aad
mov
or
or
movsl
cmc
repnz
movsl
pop
dec
aaa
fiadds
repnz
add
mov
pop
push
aaa
fiadds
push
hlt
add
data16
jle
mov
jl
sahf
addl
sahf
mov
jle
inc
ret
mov
mov
mov
stc
push
mov
out
mov
jle
call
or
cmp
adc
and
shrl
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmp
pop
mov
out
mov
out
xchg
jg
neg
add
stc
push
mov
out
mov
jle
jmp
dec
and
shrl
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmp
pop
mov
out
mov
push
lods
adc
inc
cmp
lcall
inc
push
shrl
mov
out
mov
xor
pushf
mov
sahf
add
xchg
add
xor
rorl
xchg
and
jbe
ror
xchg
rcrl
mov
xor
addb
adc
adc
punpckhwd
fiadds
roll
ret
add
jmp
or
sahf
adc
aaa
fiadds
imul
sahf
add
dec
pop
or
jle
or
jle
adc
aaa
pop
aaa
fiadds
fiadds
jl
sahf
pop
and
arpl
xchg
lods
ret
pop
push
inc
xchg
rcrb
sahf
add
or
xchg
adc
xchg
rcrb
fiadds
xlat
inc
stos
fidivrl
mov
or
dec
inc
lret
dec
jg
or
dec
jmp
mov
mov
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
sbb
std
jle
sahf
ret
push
sbb
cmp
mov
cmp
fmull
andl
push
idivl
adc
add
push
lcall
add
loop
or
or
pusha
adc
or
std
jle
sahf
cmp
xchg
pop
fbstp
add
or
add
mov
sbb
mov
add
inc
mov
jl
sahf
cmpl
push
inc
lret
or
and
ror
ret
popl
fisttps
ror
adc
lret
je
popa
mov
pop
push
movsb
xor
push
shll
pop
or
mov
arpl
inc
fisubl
lea
add
negl
inc
movsl
jmp
and
arpl
and
jle
pop
inc
movsl
sahf
add
dec
jo
into
mov
xchg
mov
cmp
mov
lods
ret
pop
xchg
adc
xchg
adc
xchg
adc
xchg
add
push
push
or
sahf
add
lret
movsl
rclb
push
movsl
shrb
cmp
xchg
add
xchg
pushf
add
int
add
lret
cmp
sahf
add
into
sahf
add
daa
or
out
out
or
adc
adc
ret
jmp
mov
testb
lret
mov
and
idivl
sbb
or
xorl
pop
or
xchg
sub
es
inc
shlb
xchg
lcall
jmp
mov
mov
lahf
cwtl
jbe
je
popa
mov
pop
push
add
jl
inc
fisubl
mov
popa
addl
pop
adc
sahf
add
shlb
xchg
inc
lret
inc
fisubl
xchg
fwait
adc
push
shlb
or
jle
sbb
jbe
xchg
add
push
push
push
or
xchg
push
imul
jbe
js
popa
addl
pop
adc
sahf
add
push
xchg
adc
xchg
adc
xchg
adc
xchg
add
xchg
or
fiadds
rolb
jl
sahf
push
xlat
inc
stos
fidivrl
push
add
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
sbb
sbb
orl
fwait
mov
out
mov
mov
mov
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
sbb
sbb
add
mov
out
scas
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
mov
in
dec
jo
add
mov
or
orl
push
or
mov
add
mov
sahf
mov
out
mov
cmpl
push
inc
lret
or
and
ror
ret
popl
fisttps
ror
adc
lret
jae
popa
mov
pop
push
movsb
xor
push
shll
pop
or
mov
adc
subl
adc
jmp
leave
inc
fisubl
mov
fldln2
sbb
or
or
mov
dec
pop
push
mov
or
sahf
add
out
xchg
shll
lea
xchg
fwait
pop
inc
movsl
cltd
add
xor
pop
push
add
ljmp
inc
lret
cwtl
jbe
jbe
popa
addl
ret
pop
add
xchg
or
scas
mov
out
mov
aad
xchg
dec
stc
pop
xor
adc
inc
xor
mov
mov
out
orb
out
pushf
add
mov
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
mov
out
xchg
jno
and
and
push
xchg
sbb
or
lcall
adc
mov
cmp
inc
fisubl
popf
inc
loop
xchg
and
add
lret
add
jno
icebp
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
mov
loop
dec
jo
add
popf
ret
push
adc
xchg
dec
or
addl
xchg
sahf
mov
cmp
lahf
mov
out
orb
out
mov
inc
inc
fisubl
xchg
inc
data16
lret
sahf
add
xor
add
cmc
movsl
das
dec
aaa
fiadds
repnz
add
pop
das
push
aaa
fiadds
push
hlt
add
outsb
std
jle
mov
jl
sahf
addl
sahf
mov
jle
inc
ret
add
mov
int
in
orb
inc
and
rorl
lret
leave
dec
push
or
andl
in
cmp
ror
push
or
and
ror
ret
mov
or
dec
inc
lret
jmp
jbe
outsb
xor
arpl
dec
pop
push
movsb
xor
push
shll
pop
or
mov
mov
jge
and
addl
mov
int3
lret
sahf
add
add
xchg
orl
pop
cmpsb
ror
adc
test
orb
inc
movsl
ficoml
push
or
mov
jle
adc
ljmp
push
aas
ror
jle
out
push
movsl
adc
ror
push
jmp
inc
shlb
test
lret
or
int
into
push
rolb
jl
sahf
mov
dec
in
jle
adc
xchg
addl
shll
aam
jle
sbb
pop
fists
fwait
add
mov
aad
mov
es
fisubl
mov
lret
mov
inc
sarb
std
and
sbb
jbe
dec
pusha
add
adc
ljmp
lcall
sub
pop
push
or
pop
fcoml
sahf
add
shlb
lods
inc
lret
inc
fisubl
movsl
fwait
adc
push
shlb
jo
jle
sbb
ja
inc
lret
cwtl
jbe
jb
popa
mov
out
mov
imul
or
xchg
pop
cltd
iret
sahf
add
rcrb
sahf
add
iret
sahf
add
push
xchg
xlat
inc
stos
fidivrl
push
or
dec
inc
lret
cmpb
inc
xor
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
mov
loopne
sbb
or
sbb
mov
mov
jl
sahf
jno
inc
xchg
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
popa
add
sub
cmpl
sbb
add
sub
inc
addl
pop
add
pushf
pop
hlt
iret
ja
js
popa
xchg
fwait
jmp
cmp
std
add
lahf
ja
and
or
push
xchg
rcrb
xor
pop
aas
popa
aaa
fiadds
or
inc
inc
lret
push
aaa
fiadds
mov
pop
aas
pop
aaa
fiadds
imul
jmp
and
arpl
icebp
pop
je
inc
outsb
cmp
out
xchg
ja
inc
shlb
mov
fidivrs
push
imul
push
mov
xchg
mov
ror
sti
mov
arpl
inc
pop
ret
imul
ja
inc
mov
jl
sahf
mov
mov
jle
lods
ret
mov
ror
push
aas
fisubl
into
jl
sahf
jno
inc
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
cwtl
or
orl
ds
ret
mov
lret
or
and
ror
ret
xchg
inc
or
pop
sqrtps
fiadds
push
hlt
add
jb
jle
xchg
sarb
addl
push
inc
lret
and
inc
cmp
fisttps
andl
jl
jle
adc
add
push
lcall
dec
pop
add
lds
jp
lret
xchg
sahf
add
lret
rolb
jl
sahf
jmp
sub
popa
std
or
dec
inc
lret
test
or
xor
sahf
jno
imul
ror
rorb
ficoms
sqrtps
fiadds
push
hlt
add
jne
jle
xchg
sarb
addl
push
inc
lret
or
and
ror
ret
xchg
inc
or
dec
inc
lret
jmp
jbe
push
popa
mov
pop
push
cmpb
in
inc
pop
dec
add
ljmp
lret
or
and
ror
ret
xchg
inc
or
dec
inc
lret
jmp
jbe
push
popa
mov
pop
push
add
popa
jbe
inc
pop
dec
add
jmp
ja
xchg
jbe
icebp
xchg
into
jl
sahf
jno
inc
mov
inc
inc
lcall
mov
ljmp
dec
inc
lret
test
jbe
dec
data16
hlt
add
xchg
mov
arpl
mov
arpl
stc
pop
mov
sbb
andl
or
jle
adc
add
push
lcall
xor
pushf
jbe
je
add
aaa
fiadds
bnd
fisttps
andl
shr
xor
fiadds
add
lcall
xchg
pop
pop
add
popa
pop
inc
pop
push
xchg
adc
xchg
rcrb
inc
andl
adc
add
jbe
inc
cmpl
testb
ficompl
cmp
jp
ror
add
xorl
popa
aad
or
jl
sahf
ja
mov
popa
shr
lret
sahf
and
icebp
pop
mov
hlt
int
mov
push
std
or
sahf
cld
ror
add
repnz
or
lcall
xor
add
call
aaa
xchg
xor
add
decl
aaa
cltd
xor
add
incl
add
out
pusha
inc
addl
mov
stos
mov
mov
inc
addl
mov
stos
idivb
mov
stos
jg,pn
sahf
mov
stos
xor
sahf
mov
stos
cmp
sahf
mov
stos
inc
jg
sahf
mov
stos
ret
sahf
mov
stos
sarb
mov
shlb
push
arpl
or
sahf
or
cmpsb
inc
add
pop
xchg
adc
xchg
adc
xchg
and
inc
sbbl
cmp
xchg
push
jle
pop
aas
cmp
arpl
icebp
pop
jbe
lcall
ror
jl
sahf
cmp
xchg
push
jle
pop
aas
jge
fiadds
and
arpl
icebp
pop
jbe
lcall
ror
pop
inc
pop
push
xchg
adc
xchg
adc
xchg
rcrb
xor
push
add
dec
movsl
add
lret
jg
popa
mov
popf
push
ror
mov
imul
pop
push
add
ljmp
mov
lods
inc
sbbl
popa
std
add
xchg
xchg
jg
sbb
popa
std
add
jmp
rcrl
popa
mov
add
xchg
cmpl
fs
jle
pop
ja
imul
cmc
sti
hlt
add
mov
popa
std
or
sbb
jbe
inc
xchg
ss
sahf
mov
int3
push
imul
cld
ror
lea
ljmp
rcrl
pop
mov
vmovupd
xchg
adc
xchg
adc
xchg
jle
dec
adc
lret
pop
fcmovu
add
inc
adc
lret
jns
fiadds
jle
mov
ror
daa
xchg
fcomp
add
mov
ror
daa
mov
out
ficoms
ror
daa
add
rclb
ror
into
dec
push
push
into
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
lret
or
sahf
add
xor
sahf
add
int3
lahf
add
lret
or
sahf
add
fistpl
add
lret
xchg
ret
sbb
lahf
add
lret
stos
ret
std
fistpl
add
lret
pop
ret
lahf
add
lret
or
sahf
add
lahf
add
lret
or
sahf
add
lahf
add
sahf
add
lret
lahf
add
lret
xchg
rcrb
or
sahf
add
lret
or
lahf
add
int
add
int
add
int
add
int
add
int
add
lahf
add
lahf
add
int
add
enter
enter
enter
enter
enter
enter
enter
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
leave
lahf
add
lahf
add
lahf
add
lahf
add
lahf
add
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
into
lahf
add
lahf
add
lahf
add
lahf
add
enter
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
iret
lahf
add
lahf
add
lahf
add
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
int3
lahf
add
lahf
add
lahf
add
enter
enter
enter
enter
enter
enter
lret
lahf
add
lahf
add
lahf
add
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lret
lahf
add
lahf
add
lret
lahf
add
lret
or
addb
sahf
add
ret
lahf
add
lahf
add
lahf
add
int
add
int3
lahf
add
ret
add
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
ret
lahf
add
lahf
add
lahf
add
ret
sbb
lahf
add
ret
jmp
lahf
add
ret
mov
lret
out
lret
xchg
lret
lret
or
orb
addb
sahf
orb
sahf
adcb
sahf
xor
sahf
xor
sahf
orb
sahf
adcb
sahf
addb
sahf
orb
sahf
addb
lahf
add
lret
shrb
scas
shrb
mov
sahf
add
lcall
repz
in
jno
lret
scas
ljmp
cmp
in
sti
inc
or
ljmp
mov
outsb
in
ljmp
mov
imul
jmp
in
lcall
or
in
jbe
stos
repnz
hlt
scas
in
jnp
lret
in
mov
out
imul
fiadds
scas
ljmp
mov
sahf
add
lret
loopnew
fdivs
scas
sahf
add
mov
sahf
add
xchg
jno
in
jo
mov
loopnew
int3
shlb
lret
in
mov
lock
or
pushl
cmpsb
repnz
loop
fwait
add
mov
out
ror
add
movsb
divl
stos
repnz
fnsave
mov
int
loop
imull
lret
scas
ljmp
mov
sti
jno
lret
int
pushl
in
imul
std
arpl
cltd
sti
popa
cmc
mov
clc
add
movsb
ljmp
mov
sti
popa
cmc
mov
fs
scas
ljmp
mov
jmp
scas
sahf
add
mov
cli
outsb
in
data16
scas
ljmp
mov
sti
jno
cmp
sub
fsubrs
mov
ljmp
movsb
frstor
mov
int
cmc
xchg
jno
in
jo
mov
bnd
mov
sahf
add
scas
shrb
mov
sub
enter
in
sti
arpl
lcall
scas
ljmp
movsb
fstpt
lret
scas
ljmp
mov
jo
test
filds
cld
lret
call
test
push
add
stos
divl
movsl
in
push
call
test
push
stc
lret
shrb
lock
lret
into
mov
sti
insb
cmc
mov
insb
cmc
scas
in
outsb
out
test
lock
repz
repz
mov
leave
arpl
mov
imull
sti
dec
jecxz
sti
popa
cmc
lret
les
in
loopnew
sahf
add
enter
scas
out
add
lret
in
scas
ljmp
lret
aam
repz
pushf
mull
test
inc
call
enter
mov
sahf
add
ja
mov
cld
ja
cltd
ljmp
lret
scas
ljmp
mov
ja
mov
in
insl
loop
in
jno
scas
rep
repz
add
enter
mov
in
addr16
and
jbe
stos
repnz
in
cmpsb
icebp
popa
or
out
push
call
mov
outsb
in
out
mov
fnsave
stos
ljmp
stos
out
jb
movsb
stc
inc
or
ljmp
mov
insb
cmc
scas
out
or
in
jbe
stos
repnz
rep
ljmp
lret
scas
ljmp
mov
insb
cmc
scas
out
or
in
ja
scas
lret
scas
jmp
lret
lds
pushl
cmp
in
sti
add
lret
in
ljmp
scas
lret
scas
jmp
lret
into
mov
icebp
popa
in
in
add
lret
in
ljmp
mov
add
mov
out
mov
or
mov
in
jno
mov
outsb
in
sahf
add
out
cmc
mov
data16
divb
stos
cli
add
enter
cmpsl
imull
sti
push
rep
std
addr16
into
jo
test
lods
dec
in
ljmp
test
lods
inc
call
lret
ret
arpl
scas
lret
cmpsb
mulb
mov
pushl
mov
and
xlat
mov
repnz
in
cmpsb
icebp
popa
les
enter
jmp
in
mov
addr16
out
or
ja
mov
fisubl
mov
addb
scas
ljmp
cmpsb
fidivl
mov
imull
filds
lret
lret
in
ljmp
scas
sahf
add
lret
fldenv
popf
imull
jmp
loopw
icebp
jo
mov
insl
icebp
mov
imul
filds
mov
fldenv
mov
outsb
in
ljmp
scas
in
inc
or
sti
arpl
scas
ljmp
mov
fsubrs
scas
filds
push
lret
shll
pushf
mull
test
inc
call
enter
mov
outsb
in
imull
lret
scas
ljmp
cmpsl
sti
add
movsl
call
loopw
icebp
jo
mov
imul
mov
bnd
mov
jbe
lret
int3
mov
out
in
icebp
push
call
stos
in
add
scas
ljmp
lret
into
mov
repnz
icebp
pusha
loopne
fildll
movsl
std
add
lret
fldcw
test
outsb
mov
aad
roll
in
cmpsb
sahf
add
mov
filds
das
enter
mov
clc
inc
or
in
jno
lods
sti
inc
out
mov
add
cltd
fistl
clc
mov
in
cmpsb
sahf
add
lret
int3
addr16
repnz
repnz
aad
clc
lret
shrl
lock
in
fstpt
lret
shrl
repz
loopne
jmp
ror
add
scas
ljmp
movsb
clc
insl
repz
pushl
movsl
lock
lret
shll
movsb
into
jo
test
icebp
imul
lret
int3
addr16
jmp
repz
arpl
mov
sahf
add
mov
cmc
addr16
lcall
out
in
add
int
cmc
cltd
sti
popa
hlt
mov
sti
jno
mov
in
inc
loopne
repnz
xlat
insb
call
mov
std
ja
mov
in
popa
repz
sahf
add
lret
int3
addr16
in
loopnew
sti
dec
in
fstpt
lret
shrl
enter
sti
inc
stc
mov
inc
roll
repnz
or
shlb
mov
cli
outsb
in
lret
les
mov
in
cmpsb
sahf
add
lret
cmc
mov
sti
jae
scas
in
jbe
scas
jmp
mov
jmp
enter
rep
sti
jbe
mov
out
jbe
movsl
lock
or
lock
jno
lahf
in
outsb
ret
push
lret
mov
out
aam
repnz
loopne
mulb
movsb
ljmp
lret
out
scas
fsubrs
mov
frstor
mov
in
jnp
lret
enter
rep
sti
jbe
cmpsb
icebp
jno
cmp
in
sti
add
lret
cmc
scas
in
insb
in
int3
loopnew
fsubrs
scas
sahf
add
lret
cmc
mov
out
out
lods
icebp
inc
or
ljmp
scas
out
ja
mov
fildl
leave
mov
sti
insb
shrl
ljmp
movsb
ljmp
movsl
lock
in
ljmp
movsb
ljmp
stos
lock
out
mov
in
aam
repnz
or
ljmp
mov
loope
enter
rep
sti
jbe
scas
ljmp
mov
insb
cmc
scas
in
insb
in
iret
ja
mov
incl
stos
imull
test
addr16
ljmp
mov
in
outsb
ror
dec
iret
adc
aad
cli
outsb
in
lret
int
fists
in
outsb
in
lret
sarl
imull
in
addr16
sahf
add
lret
lret
ja
scas
lret
mov
filds
sub
lret
ja
scas
fnsave
stos
ljmp
cwtl
lret
scas
repnz
or
lods
xor
lret
into
test
arpl
movsb
lret
jno
mov
ljmp
lret
in
cmpsl
icebp
insb
scas
scas
repnz
or
sahf
add
lret
or
je
or
lahf
add
lret
test
sahf
add
rcrb
stc
rcrb
adc
sahf
add
sahf
add
rcrb
xor
lahf
add
rcrb
or
add
scas
cli
jo
mov
scas
aaa
scas
scas
out
xor
out
inc
rcll
inc
lds
sahf
dec
out
mov
insl
out
mov
in
imul
sahf
pop
fisubs
sahf
adc
lret
sbb
clc
xor
dec
xor
jbe
cltd
stc
mov
xor
stc
divb
std
stc
push
xor
sbb
or
add
and
sub
cmp
push
ss
sahf
aaa
decl
aaa
mov
inc
aaa
in
out
aaa
add
cld
data16
std
lcall
std
xchg
test
std
stos
xor
leave
std
shlb
cmp
std
xor
mov
cmp
repnz
cmp
repnz
cmp
repnz
cmp
repnz
repnz
cmp
outsb
cmp
repz
leave
repz
in
repz
cmp
dec
cmp
inc
cmp
bound
xchg
lock
cmp
lock
in
lock
cmp
lock
std
lock
cmp
lock
and
cmp
jno
push
jns
sahf
and
lret
popa
repz
imul
push
jns
bound
xor
xchg
cmp
lock
cmp
lock
cmp
lock
cmp
lock
cmp
lock
lock
cmp
lock
lock
lock
or
adc
adc
or
sbb
add
and
cmp
sub
xor
xor
sub
cmp
and
inc
lock
cmp
push
cmp
dec
cmp
inc
cmp
jp
imul
push
jns
bound
xor
xchg
cmp
icebp
cmpb
icebp
mov
cmp
icebp
mov
cmp
icebp
sarb
shl
lret
icebp
ret
icebp
cli
cmp
icebp
repnz
lret
or
mov
xor
sti
cmpsb
xor
sti
xor
sti
lret
sti
fidivs
icebp
loop
add
or
sbb
xor
xor
jle
insl
outsb
ss
xchg
aaa
and
hlt
and
hlt
inc
cmp
hlt
jb
jne
bound
cmc
cmpb
cmc
mov
cmp
in
repnz
add
cmc
add
xor
cmc
push
cmp
gs
jb
jne
bound
or
lcall
cli
mov
xor
cli
lret
cli
cli
xor
cli
ljmp
cli
or
sbb
cli
sub
cmp
cli
dec
xor
jp
insl
cli
push
jge
lcall
sti
mov
xor
sti
lret
sti
cli
xor
sti
ljmp
sti
or
sbb
sti
sub
cmp
sti
dec
xor
jp
insl
sti
push
jge
lcall
clc
mov
xor
clc
lret
clc
cli
xor
clc
ljmp
clc
or
sbb
clc
sub
cmp
clc
dec
xor
jp
insl
clc
push
jge
lcall
stc
mov
xor
stc
lret
stc
cli
xor
stc
ljmp
stc
or
sbb
stc
sub
cmp
stc
dec
xor
jp
insl
stc
push
jge
lcall
mov
ss
dec
ss
cli
ss
ljmp
decb
ss
sub
cmp
decb
pop
jp
insl
push
jge
lcall
mov
aaa
mov
dec
aaa
cli
aaa
in
ljmp
decl
aaa
sbb
ljmp
aaa
cmp
decl
pop
jp
insl
ljmp
jge
lcall
cld
mov
xor
cld
fidivl
cld
cli
xor
cld
ljmp
cld
or
cld
and
cld
inc
xor
cld
jb
jne
bound
std
xorb
std
mov
xor
in
repnz
add
std
add
xor
std
push
xor
gs
jb
jne
bound
xchg
repnz
repnz
mov
mov
cmp
bnd
repnz
repnz
add
repnz
and
repnz
inc
repnz
cmp
inc
cmp
jb
jne
bound
test
xchg
cmp
repz
mov
mov
cmp
repz
repz
repz
add
repz
and
repz
inc
repz
cmp
inc
cmp
jb
jne
bound
test
xchg
cmp
lock
mov
mov
cmp
lock
lock
lock
add
lock
and
lock
inc
lock
cmp
inc
cmp
jb
jne
bound
test
xchg
cmp
icebp
mov
mov
mov
cmp
icebp
ret
icebp
repnz
icebp
loop
add
icebp
add
and
icebp
and
inc
icebp
push
cmp
inc
cmp
jb
jne
bound
test
xchg
ds
testb
mov
mov
ds
ret
div
ds
mul
ds
testb
and
mulb
ds
notb
push
testb
divb
jne
bound
test
xchg
aas
xchg
testl
aas
aas
aad
ret
div
aas
cmc
mul
aas
add
testl
aas
xor
notl
push
testl
jne
bound
test
xchg
cmp
hlt
cmpb
mov
cmp
hlt
ret
hlt
repnz
hlt
loop
add
hlt
add
cmc
pop
cmp
pop
cmc
sahf
push
or
mov
add
adc
xor
sti
adc
sbb
sti
inc
xor
imul
clc
repnz
clc
sbb
adc
add
xor
xor
push
xor
jp
outsb
clc
data16
stc
fidivl
stc
xor
stc
pop
xor
mov
ss
add
cwtl
jmp
aaa
std
aas
aaa
cmp
jb
out
cld
adc
cld
xor
xor
cld
jno
xchg
lea
jmp
std
push
xor
repnz
cmp
repnz
cmp
fidivrs
out
repz
cmp
xchg
cmp
lock
jne
jae
scas
cmp
icebp
std
cmp
aas
cmp
push
cmp
xchg
ds
test
in
imul
ds
notb
test
mov
aas
add
aas
aas
sub
jg
cli
hlt
xchg
cmp
or
add
or
inc
xor
sti
aaa
xor
loope
inc
clc
movsb
xor
stc
jns
mov
movsl
ss
adc
push
lahf
aaa
xchg
out
aaa
push
decl
xor
cld
mov
cmp
mov
cmp
repz
popa
xrelease
int
icebp
cmp
lock
cmp
inc
jge,pt
mov
test
idivl
jb
addr16
xchg
hlt
xchg
hlt
mov
lods
hlt
stos
cmp
hlt
xlat
cmp
hlt
ret
hlt
jecxz
adc
xor
hlt
jns
shl
cmp
dec
cmc
dec
cmp
or
mov
xor
data16
sti
sub
add
adc
cs
ret
xor
stc
adc
repz
push
ss
or
cmp
inc
ss
imul
ljmp
aaa
loope
sbb
or
lcall
lcall
xor
cld
inc
xor
cld
xchg
xor
test
cmpsl
xor
repz
sbb
add
dec
std
je
jl
popf
cmp
repnz
cmp
repnz
repnz
popa
cmp
repz
repz
repz
cmp
jle
mov
lock
or
push
cmp
lock
cmp
push
cmp
movsb
cmp
icebp
sarl
aad
repnz
icebp
sbb
push
icebp
inc
cmp
jp
jns
xchg
ds
testb
mov
mov
ds
mul
ds
and
sub
dec
testb
mulb
mov
mov
aas
fincstp
hlt
aas
std
testl
aas
jae
bound
mov
mov
hlt
mov
cmp
hlt
or
hlt
push
cmp
hlt
test
idivl
push
cmc
daa
cmp
or
test
movsl
cli
scas
xor
cli
ret
cli
sbb
sbb
test
mov
sti
jns
jge
mov
out
or
dec
clc
inc
xor
push
xor
stc
and
xor
cmc
ss
decb
sbb
and
aaa
push
aaa
inc
jmp
xchg
cld
test
cld
mov
daa
cld
xor
cld
pop
xor
cld
dec
xor
cld
data16
std
xchg
or
std
xor
int3
repnz
cmp
dec
cmp
jbe
jo
xchg
cmp
repz
adc
add
sub
jp
sbb
inc
cmp
push
cmp
icebp
sarl
loop
lock
sub
cmp
icebp
ja
mov
mov
mov
movsl
xlat
mul
ds
sub
inc
negb
xchg
testl
aas
xor
pop
aas
dec
imull
scas
hlt
lods
cmp
hlt
ret
cmp
hlt
loope
or
cmp
cmp
hlt
jne
js
pushf
cmp
mov
cmc
adc
or
dec
add
cli
call
xor
xor
sti
aas
xor
lret
clc
pushl
call
clc
dec
xor
jno
cmp
in
adc
aaa
xor
pushf
ss
push
ss
pop
ss
incb
outsb
arpl
test
int
cli
call
xor
cld
xorl
bnd
sti
cmp
repz
cmp
lock
and
add
xor
cmp
jb
xchg
mov
repnz
daa
divb
ds
push
js,pt
cwtl
aas
nop
testl
aas
or
idivl
test
xchg
hlt
test
fdivp
sbb
hlt
xor
hlt
data16
cmc
ret
cmp
sub
sub
mov
or
jg
outsb
cli
test
mov
sti
adc
xor
sti
dec
xor
clc
fdivs
repnz
xor
mov
xor
stc
ret
xor
stc
out
and
and
popa
stc
imul
in
and
inc
ja
stos
ljmp
aaa
dec
jmp
jg
xchg
xor
cld
call
xor
std
mov
xor
jmp
std
and
push
std
jp
test
nop
cmp
repnz
and
pop
cmp
idivl
div
sbb
or
push
cmp
lock
cmp
pop
cmp
jnp
stos
icebp
sarl
icebp
sbb
sub
das
cmp
icebp
and
inc
icebp
jl
jno
imul
xchg
imulb
cmp
hlt
inc
cmp
hlt
popf
cmp
into
cmc
enter
loope
push
cmc
and
cmp
or
mov
xor
cli
xorl
pop
sti
xchg
xor
clc
dec
xor
xor
mov
ret
ss
jmp
adc
pop
ss
jns
jne
lret
aaa
outsb
ljmp
mov
fnsave
cld
divl
cld
and
xor
std
out
xor
es
cmpsb
cmp
repnz
add
pop
cmp
repnz
cmp
repnz
xor
repnz
cmp
inc
cmp
js
insb
repnz
cmp
sahf
cmp
repz
mov
repz
int
cmp
repz
xor
and
push
repz
cmp
lock
cmp
icebp
das
cmp
jns
insb
icebp
insl
cmp
pushf
ds
negb
ds
sub
cmp
pop
ds
divb
notl
aas
movsb
hlt
mov
mov
fstpt
hlt
jle
jae
cmpb
cmc
das
cmp
or
mov
mov
cli
push
xor
mov
pushf
sti
shlb
in
out
or
cmp
cmp
outsl
xor
clc
in
push
clc
xor
data16
xorl
cs
sub
inc
stc
jg
jl
mov
ret
ss
pop
ss
aaa
lods
in
aaa
lcall
aaa
jnp
lahf
xor
cld
mov
xor
cld
add
xor
cld
jno
mov
movsl
xor
ds
inc
xor
repz
cmp
repnz
repz
cmp
repz
jb
mov
ret
lock
in
repz
inc
cmp
icebp
lods
cmp
icebp
or
dec
icebp
ja
jbe
xchg
ds
lock
ds
idivb
imulb
jg
xchg
aas
xchg
testl
aas
or
xor
imul
aas
mov
xchg
hlt
adc
hlt
cmp
xor
cmp
fprem1
cli
cmp
es
and
or
pushf
xor
cli
pop
xor
stc
xor
or
ss
and
jae
mov
aaa
cmp
xor
cld
mov
push
xor
or
fwait
cmp
repz
cmp
jnp
push
jno
je
cmp
popf
cmp
lock
pushf
lock
cmp
lock
cmp
pusha
cmp
icebp
cmpsb
cmp
icebp
sarb
in
push
cmp
dec
cmp
cmpsl
ds
ds
pop
ds
divb
aas
fcomip
in
add
add
aas
push
testl
fcomi
idivl
hlt
movsl
cmp
loope
in
cmp
cmp
pop
cmp
or
mov
enter
repnz
cmp
xor
push
xor
jg
imul
xor
ret
xor
sti
sbb
push
sti
inc
xor
test
lods
clc
stos
xor
clc
enter
repz
clc
loopne
add
clc
inc
xor
popf
xor
stc
jmp
xor
stc
or
sbb
and
dec
stc
jns
jb
lahf
ss
mov
mov
mov
ss
or
cld
sub
jge
mov
cmp
repz
cmp
repz
cmp
repz
adc
jge
push
imul
int
cmc
cmp
lock
cmp
lock
jge
xchg
cmp
icebp
in
or
cmp
inc
cmp
cmp
divb
ds
testb
negb
aas
xchg
divl
aas
shl
pop
aas
or
or
and
mull
mov
xchg
hlt
sarl
hlt
in
cmp
hlt
imul
cmpsb
cmp
pop
cmc
jns
jb
gs
or
cltd
xor
cli
shll
cli
add
es
sub
xor
sti
or
or
test
mov
xor
clc
int3
xor
clc
and
xor
stc
into
xor
stc
cmc
xor
stc
and
dec
stc
inc
xor
sti
ss
loope
add
sub
dec
decb
bnd
aaa
add
adc
aaa
das
incl
pushl
jbe
cwtl
xor
cld
lods
xor
cld
in
xor
cld
push
xor
cld
cmp
cld
push
xor
cld
jg
jae
addr16
cld
cltd
xor
mov
mov
xor
hlt
std
pop
xor
cmp
push
xor
jne
popf
cmp
repnz
cmp
repnz
fcomi
idivl
add
adc
cmp
pop
cmp
jle
jge
fwait
cmp
repz
aad
clc
cmp
repz
pop
repz
cmp
repz
repz
cmp
pop
cmp
push
cmp
inc
cmp
ja
outsb
repz
repz
cmp
lock
sahf
lock
cmp
lock
cmp
lock
cmp
lock
cmp
lock
lock
adc
push
cmp
lock
cmp
and
dec
lock
cmp
mov
lahf
icebp
mov
cmp
icebp
cli
cmp
icebp
or
sbb
xor
push
icebp
inc
cmp
jp
imul
cmp
bound
xor
ds
negb
add
lret
or
sahf
add
sarl
repz
push
jmp
pop
incl
add
mov
jle
adc
add
and
jl
jae
add
adc
cmp
push
add
adc
jecxz
add
ret
adc
or
xchg
roll
hlt
js
in
jg
rcll
push
jg
in
xor
add
arpl
das
ret
inc
mov
imul
add
adc
sbb
add
clc
jbe
clc
mov
add
adc
jns
loopne
cmp
add
add
aas
add
add
inc
ja
loopne
mov
push
mov
dec
std
adc
sbb
add
shlb
clc
mov
je
or
incl
jns
in
mov
push
or
sub
mov
mov
out
jns
mov
add
add
push
ja
mov
add
push
inc
or
mov
add
jbe
mov
les
dec
mov
jbe
clc
mov
jbe
clc
imul
incl
inc
jbe
clc
aaa
or
mov
jbe
loopne
ja
add
add
loopne
cmp
mov
incl
add
insb
ja
lock
imul
sbb
mov
inc
mov
aaa
cmp
aam
mov
mov
jbe
loopne
sub
add
pop
mov
jbe
int3
jbe
mov
mov
jbe
int3
jbe
mov
mov
mov
incl
push
clc
xchg
jle
js
mov
inc
test
ds
inc
xchg
jbe
mov
lock
jbe
lock
ss
pushf
dec
sbb
add
inc
mov
hlt
xchg
push
into
data16
mov
adc
add
fdivs
movsb
addl
cmpsb
mov
mov
inc
mov
cmp
mov
inc
mov
sti
test
push
cmp
mov
filds
cmp
xor
mov
xchg
add
push
les
les
test
incl
add
les
clc
add
xrelease
jbe
lock
ret
or
xchg
arpl
mov
je
ja
lock
imul
sbb
mov
pushf
decl
jbe
les
clc
jbe
les
clc
add
out
mov
jbe
les
add
jbe
les
clc
add
out
mov
push
mov
mov
pop
xchg
xor
inc
mov
jg
incl
cmpb
ja
cwtl
shlb
das
xchg
xor
push
push
js
xchg
push
sbb
inc
clc
std
mov
jbe
nop
jle
std
xchg
xchg
das
sti
push
push
js
xchg
jle
xchg
add
add
push
xchg
js
mov
addr16
add
cwtl
jbe
mov
dec
mov
mov
push
les
cli
std
push
pop
pop
ja
pop
sarl
lret
int3
add
add
mov
pop
add
jecxz
add
in
pop
add
negl
add
pop
and
add
and
add
add
xor
add
inc
and
add
add
add
add
add
add
add
add
pop
add
xchg
pop
add
dec
and
add
pop
add
mov
pop
add
jecxz
add
in
pop
add
negl
add
pop
and
add
and
add
add
xor
add
inc
and
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
add
jb
jne
insb
push
jb
je
arpl
xchg
add
gs
add
gs
js
add
add
fs
imul
add
insl
add
je
imul
je
add
add
jb
insl
jo
inc
add
xor
inc
jb
popa
je
inc
imul
push
jb
je
inc
imul
gs
fs
imul
dec
inc
dec
xor
cs
insb
add
add
add
or
mov
mov
neg
jno
jbe
xor
inc
xor
and
xchg
mov
call
pop
call
pop
mov
inc
push
pop
ja
mov
mov
movzbl
rcr
push
pop
mov
shl
jmp
jno
rcr
neg
cmp
inc
lea
ja
adc
pushf
dec
repz
call
pop
inc
mov
mov
mov
inc
sub
push
pop
add
dec
mov
add
dec
add
add
xor
sub
inc
add
dec
cmc
cmp
jb
dec
neg
stc
sub
mov
dec
inc
mov
jns
add
dec
add
repz
popf
push
push
call
pop
pop
jmp
