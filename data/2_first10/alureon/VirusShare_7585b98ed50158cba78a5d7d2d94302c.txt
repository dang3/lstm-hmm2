adc
sbb
pop
sub
cltd
or
push
mov
or
jl
lods
sbb
mov
add
jnp
dec
mov
hlt
jmp
xor
sbb
addr16
cli
cld
sub
gs
test
sahf
stc
scas
inc
mov
dec
arpl
jl
mov
test
inc
cmp
add
dec
or
mov
pushf
pop
repz
mov
test
enter
outsb
movsb
lods
pop
push
scas
cmc
jae
and
pop
in
bswap
adc
shlb
into
pop
dec
into
add
dec
jmp
add
js
or
leave
jbe
pop
sub
les
ret
lret
clc
call
adc
inc
lods
movsb
xor
mov
cmp
mov
jnp
bound
mov
loope
jp
sti
adc
ljmp
jecxz
mov
ret
imul
sbb
xchg
ror
jno
pop
stc
or
lret
lods
mov
push
mov
mov
dec
loopne
mov
xchg
xor
dec
gs
xchg
cli
lea
push
cltd
in
xor
xchg
push
sbbb
and
int
xchg
pop
and
ja
repnz
xchg
inc
into
add
ss
fcoml
cmp
jnp
outsl
ds
ds
add
pop
ljmp
and
xor
xchg
sbb
stos
sub
dec
or
outsl
dec
je
cli
or
pop
inc
mov
cmp
cmp
cmpsb
hlt
dec
subb
fistpl
inc
enter
inc
test
cwtl
cli
test
sub
lock
pop
cmp
or
adc
xchg
xor
imul
jg
cmp
jmp
or
hlt
int
and
mov
xor
loop
clc
lds
pushf
ror
fstp
clc
mov
loopne
mov
outsl
in
sti
mov
fadds
jae
dec
xchg
in
jno
mov
aas
repnz
sub
ss
dec
in
and
jmp
out
jmp
call
mov
cmpsl
int
mov
fldl
test
mov
mov
stc
loop
out
jnp
loop
pop
outsl
bnd
and
inc
ret
call
bound
mov
sbb
test
test
outsb
pop
push
in
inc
dec
xchg
mov
je
mov
addb
and
cwtl
jmp
push
shrl
lcall
movsl
push
rorb
aaa
inc
inc
mov
push
cmpsb
div
mov
dec
xor
inc
cmp
inc
and
xchg
and
loope
mov
jb
or
mov
sbbb
lods
sub
jbe
xor
lods
inc
lods
and
cmc
pop
mov
sarl
adc
mov
and
push
jmp
adc
xlat
xchg
imul
mov
ljmp
push
push
or
lret
dec
pop
std
mov
in
fsubs
cmp
lcall
cmp
jns
hlt
dec
dec
mov
xchg
add
mov
les
jnp
loope
sub
adcb
sub
push
sub
xchg
shrl
sbb
out
xlat
fcmove
sub
in
xlat
pop
dec
push
stc
pop
pop
pop
xchg
ror
jle
ss
pop
sar
sbb
gs
shll
and
mov
outsw
pusha
mov
fmull
add
push
les
xchg
mov
mov
xor
and
les
adc
icebp
shlb
add
and
dec
outsl
fsubr
out
arpl
aam
cli
xor
mov
jo
aas
lock
mov
add
stos
sbb
pop
sub
dec
fldlg2
xchg
movsl
xchg
rolb
cld
jae
jp
or
inc
jno
and
mov
lcall
pop
mov
xorb
scas
mov
and
rcl
stos
jb
cmp
mulb
mov
pop
scas
les
cltd
ss
mov
sub
aaa
mov
lea
lds
std
xchg
popa
int3
or
arpl
movsb
cmpsl
add
jmp
es
daa
or
xlat
push
push
std
stos
or
mov
push
jo
aad
dec
jno
iret
mov
pop
lret
out
cs
iret
dec
mov
mov
sahf
inc
add
gs
enter
lret
imul
inc
and
stos
nop
and
out
movsb
sbb
mov
sub
aaa
test
cmp
lcall
ds
sbb
outsb
push
cmc
xchg
repz
jg
dec
xor
mov
add
inc
in
push
dec
xchg
sbb
mov
arpl
out
push
scas
adcl
mov
mov
ret
cmp
pop
pushf
mov
mov
jp
lahf
movsl
shrl
or
and
les
int
pop
popa
dec
and
or
xchg
enter
add
ret
xor
mov
or
les
mov
cs
out
fdivl
push
lcall
jne
add
out
and
add
mov
aaa
xchg
movsb
test
sub
fstl
push
lahf
mov
movsb
sbb
movsb
sub
outsl
add
sub
aad
cmp
loope
mov
dec
push
inc
popf
pop
dec
xor
adc
or
adc
xlat
subl
cmp
aad
jae
sbb
cmpsl
enter
sbb
or
push
fnclex
cmpl
out
or
das
es
daa
mov
dec
adc
dec
dec
bound
dec
push
inc
jb
sbb
movsb
test
cmp
notb
mov
lcall
pushf
jmp
xchg
dec
out
mov
lahf
rolb
sahf
cltd
mov
outsl
cwtl
dec
dec
negb
push
in
lds
xchg
popa
ja
inc
in
pop
fscale
movsb
outsb
cmp
dec
stc
mov
shll
pop
inc
mov
int
out
idivl
or
pop
stos
and
dec
imul
out
movsl
or
daa
leave
push
dec
and
add
lret
inc
adc
int
and
or
stc
repnz
sub
push
mov
and
dec
and
sbb
in
scas
jns
or
stos
cmp
adc
adc
or
fcmovbe
aaa
jno
mov
orl
andl
daa
repz
cmp
xchg
cmc
repz
xchg
adc
imul
sub
sbb
push
mulb
dec
imul
inc
jae
sub
out
inc
movsb
sub
mov
add
movsb
mov
mov
add
cs
sahf
orb
or
adc
cmp
in
out
sub
mov
addl
out
mov
cmp
fnstsw
add
mov
mov
cmp
roll
and
sbb
xor
pushf
pop
mov
stos
push
pop
divl
pop
aam
test
dec
pusha
push
mov
out
ds
lcall
mov
ds
sahf
repnz
in
mov
sub
xchg
add
mov
pop
or
mov
push
sub
mov
mov
cmp
jmp
xchg
pop
add
push
xlat
fisttpll
loope
inc
stos
push
sbb
inc
mov
je
leave
cmpb
cmp
push
inc
adc
jne
adc
scas
out
sub
enter
lahf
je
dec
mov
inc
mov
pushf
adcl
add
or
dec
insl
outsl
mov
mov
add
sbb
xchg
outsl
mov
rorl
mov
icebp
xchg
push
loopne
pop
jne
lcall
insl
std
mov
nop
je
test
cmp
aam
adc
cmp
sub
xor
xchg
scas
mov
lcall
jae
clc
sbb
jle,pn
loop
mov
pushf
xchg
or
mov
push
aam
cmp
mov
outsl
repz
mov
std
out
pusha
add
pop
cld
enter
inc
pushf
dec
lret
mov
cmp
test
push
adc
and
cmc
lock
and
aas
pop
movb
jb
mov
outsl
cmc
hlt
sti
rcll
add
mov
in
mov
or
mov
xchg
jp
inc
mov
mov
jae
xchg
sar
add
cltd
cmc
add
mov
pop
push
mov
mov
sub
xchg
ds
xchg
mov
bound
or
jno
pop
mov
pop
lods
pop
jae
cmp
push
push
lds
dec
loop
sar
cmp
fs
inc
repz
dec
push
push
fwait
mov
cmpsl
cli
push
sub
adc
sti
sub
mov
xor
dec
add
and
aaa
mov
scas
cmp
fs
arpl
xchg
into
xchg
xchg
push
movswl
lea
pop
scas
xor
sub
or
call
add
add
call
movsbl
push
add
call
mov
inc
dec
lea
mov
call
mov
inc
imul
movzwl
lea
mov
lea
sub
or
dec
dec
dec
inc
add
call
mov
add
add
inc
dec
call
inc
movswl
call
dec
dec
inc
imul
inc
inc
add
inc
inc
pop
sub
lea
movzbl
add
add
pop
inc
dec
pop
dec
lea
mov
dec
pop
mov
imul
movzwl
mov
add
inc
movsbl
mov
pop
imul
mov
pop
sub
inc
mov
or
lea
call
dec
xor
add
add
ret
inc
mov
push
add
movzbl
push
mov
dec
push
dec
push
mov
mov
push
sub
sub
mov
dec
lea
push
dec
ret
push
lea
inc
movzwl
mov
dec
movzbl
or
push
sub
mov
call
pop
ret
jmp
mov
mov
add
inc
movzbl
sub
lea
add
imul
inc
and
add
sub
movzbl
mov
inc
xchg
imul
sub
dec
add
xor
sub
xor
mov
add
inc
add
lea
dec
jne
dec
mov
inc
lea
pop
mov
inc
pop
lea
inc
pop
dec
mov
mov
sub
mov
inc
or
mov
dec
imul
mov
add
ret
push
mov
add
mov
add
add
sub
mov
add
push
push
push
push
xor
sub
or
push
or
sub
lea
lea
mov
dec
inc
inc
dec
mov
inc
push
lea
inc
xor
lea
inc
push
mov
sub
push
add
mov
pushl
mov
call
add
add
lea
mov
sub
lea
add
sub
movswl
pop
ret
add
mov
inc
inc
movswl
add
cmp
jb
sub
xor
lea
inc
mov
add
and
mov
sub
xor
inc
add
movsbl
lea
dec
mov
add
imul
cmp
jb
add
mov
imul
xor
movzbl
xor
dec
mov
pop
movzwl
test
jbe
sub
lea
add
inc
inc
dec
inc
imul
imul
mov
mov
movzwl
inc
add
mov
inc
inc
sub
add
inc
imul
dec
lea
and
dec
movzbl
mov
lea
mov
movzbl
inc
add
imul
lea
and
dec
inc
mov
inc
mov
mov
dec
add
mov
inc
movzbl
mov
sub
add
inc
lea
lea
dec
dec
jne
mov
mov
movzbl
add
sub
dec
mov
dec
imul
add
add
mov
mov
xor
lea
mov
dec
xor
mov
add
add
mov
inc
mov
test
jbe
inc
lea
lea
inc
mov
dec
dec
lea
lea
sub
add
inc
inc
mov
mov
inc
mov
imul
inc
dec
dec
mov
and
inc
mov
mov
inc
dec
movzbl
lea
imul
add
mov
mov
and
or
mov
mov
mov
mov
movzbl
lea
add
mov
inc
jmp
push
inc
dec
dec
dec
sub
add
and
add
inc
mov
mov
sub
inc
add
dec
mov
sub
inc
mov
mov
inc
or
dec
sub
dec
sub
inc
dec
or
lea
mov
mov
and
add
mov
dec
imul
movswl
mov
cmp
je
call
call
lea
inc
xor
dec
sub
sub
dec
add
add
add
mov
inc
sub
dec
call
call
movzwl
ret
mov
lea
pop
inc
ret
push
dec
mov
dec
inc
add
push
mov
movswl
push
inc
push
and
push
mov
mov
mov
lea
lea
mov
or
imul
mov
call
movswl
push
dec
push
inc
pop
or
imul
mov
or
mov
mov
mov
lea
inc
add
inc
dec
je
dec
add
inc
mov
inc
add
imul
inc
inc
mov
inc
xor
mov
inc
mov
mov
mov
repnz
lea
inc
add
mov
jmp
imul
dec
jmp
inc
or
sub
lea
add
mov
movzwl
inc
mov
imul
mov
movswl
or
sub
pop
pop
ret
push
add
mov
imul
inc
lea
imul
inc
inc
dec
movzwl
dec
mov
sub
and
add
inc
add
mov
lea
inc
dec
imul
inc
sub
mov
pop
ret
sub
add
mov
mov
lea
mov
sub
add
mov
lea
inc
mov
inc
dec
xor
dec
mov
mov
dec
dec
inc
dec
dec
movsbl
add
lea
add
cmp
jb
inc
push
dec
add
push
imul
mov
push
inc
sub
mov
add
inc
xor
mov
inc
xor
dec
sub
xor
imul
sub
push
inc
xor
xor
inc
mov
inc
movzbl
mov
inc
and
movzbl
mov
inc
sub
dec
add
inc
dec
add
add
movzbl
add
lea
and
imul
movzbl
dec
xor
inc
movswl
jmp
out
lods
or
shlb
fsubrs
inc
mov
jecxz
cmp
fidivs
mov
ja
aas
dec
stos
daa
xlat
add
mov
cmp
mov
and
lahf
outsl
xor
mov
xor
cli
xchg
mov
xchg
xlat
inc
sub
scas
dec
jb
ret
stos
lcall
xchg
lods
inc
inc
pop
dec
xchg
push
inc
icebp
out
es
outsl
aad
dec
mov
and
les
adc
xor
mov
pop
loop
incb
stc
es
adc
imul
adc
js
and
bound
lods
ds
pop
adc
cld
hlt
push
adc
outsb
stos
inc
add
mov
jecxz
pop
imul
sbb
stos
int
push
add
or
inc
lcall
rolb
add
scas
mov
ljmp
jae
mov
sbb
imul
popf
stos
fstpt
outsb
xor
inc
int
sarl
jns
jns
scas
mov
jae
repz
insl
dec
repnz
mov
jmp
mov
sub
mov
cmp
mov
test
dec
shll
lods
jle
sub
mov
sub
cltd
cvtps2pd
lret
outsb
and
dec
cmp
int3
push
shr
xchg
and
inc
popf
sahf
fildl
adcb
pop
jmp
or
pop
cmp
or
mov
xchg
mov
xor
into
pop
in
xlat
into
push
or
aas
mov
std
fisubl
test
xor
cmpsl
stc
xchg
pop
cmp
mov
mov
jmp
push
cs
addl
push
fcoms
sbb
rcrb
sbb
push
negb
xchg
ds
push
push
and
adc
adc
in
push
dec
and
push
insb
xchg
in
scas
add
pop
xchg
shll
pop
push
cmp
fcom
adc
dec
mov
andl
mov
cmp
int
jge
mov
push
test
je
call
and
push
cld
insb
cmp
push
jbe
insl
out
stos
ret
and
xchg
jecxz
mov
out
cmp
test
cmp
in
popf
or
cltd
inc
mov
push
sub
jge
insb
fwait
jle
add
cmp
xor
sub
dec
mov
repz
sti
mov
cmpsb
in
mov
lds
adc
push
dec
cld
mov
and
ja
or
push
je
mov
lahf
insl
dec
dec
rclb
jne
or
adc
xor
lahf
and
or
lret
cli
emms
outsl
dec
jb
mov
aas
add
das
or
mov
mov
insb
sbb
push
inc
adc
dec
or
mov
insl
jae
push
gs
xchg
mov
jle
and
cmovns
hlt
prefetcht2
orb
popf
sub
insl
test
inc
add
pop
scas
push
testl
loope
cmp
mov
stos
ja
xchg
cmp
xchg
add
jb
xlat
imul
add
jne
xchg
and
sbb
subb
test
pop
lahf
mov
cmp
inc
mov
fidivl
outsl
movsb
fmulp
ds
cmp
call
jl
xchg
ret
adc
adc
xchg
add
mov
sbb
push
enter
sub
mov
hlt
xchg
push
push
lea
mov
in
jne
push
stc
mov
or
and
adc
sbb
push
cmp
sub
and
mov
cmp
dec
mov
sbb
xchg
sbb
mov
mov
sar
add
repz
aam
sbb
dec
js
sub
repnz
mov
lea
xchg
or
rorb
shlb
sbb
adc
test
mov
dec
mov
cmp
xchg
icebp
mov
jb
push
nop
fistps
iret
xchg
cli
mov
jg
fimull
mov
jo
or
dec
sbb
adc
mov
call
xchg
fwait
inc
pop
loopne
mov
xor
das
pop
rcr
imul
into
xchg
pop
cmp
jno
inc
cltd
test
stc
jp
lahf
sbb
mov
cmp
sub
pop
dec
adc
mov
insl
pop
xchg
adcb
push
lret
loope
in
jb
out
dec
pushf
and
test
js
iret
or
or
dec
jbe
cmp
cmp
out
ret
sbb
jns
outsl
insb
mov
or
inc
xchg
adc
xchg
xlat
push
mov
cmc
lret
nop
add
push
sbb
les
jbe
cmp
nop
outsl
fcomp
add
mov
in
punpckhwd
jno
jno
sarl
adc
icebp
lock
adc
scas
adc
lds
mov
into
or
inc
dec
cmp
cmpb
xor
das
incl
push
cmp
popf
cld
jno
aam
inc
in
adc
xchg
fwait
xchg
adc
sub
daa
add
vpinsrw
xor
lahf
cmp
movsl
in
mov
xor
jo
aas
fldl
add
cmp
cmp
push
int
pop
sbb
in
mov
sub
cmp
add
adc
mov
or
dec
mov
fimuls
idivb
in
rclb
js
dec
orl
mov
xor
inc
adc
stos
xchg
testl
dec
jmp
xchg
mov
aas
lock
lods
dec
push
dec
outsb
or
push
jo
aaa
or
daa
push
das
movsb
out
push
divb
push
into
xchg
or
sub
adc
jge
pop
adc
xor
and
movsl
jg
out
pusha
mov
nop
int3
je
adc
ja
into
mov
xchg
mov
jo
xchg
pop
fwait
xor
fstp
addr16
mov
xor
ret
lods
lret
cmp
sbb
cli
jnp
dec
pop
ja
sub
js
into
nop
in
adc
aaa
icebp
dec
loopne
out
jmp
scas
mov
fdivp
sbb
lcall
shll
adc
lcall
movsl
lea
inc
repz
push
jbe
pop
es
rol
add
stos
pop
or
xchg
ds
jne
outsl
or
pop
xor
xchg
cmpsl
mov
test
mov
add
adc
in
cmovo
xor
pop
mov
shll
inc
mov
inc
push
das
xchg
inc
jmp
fnstenv
jne
lods
dec
test
adc
gs
mov
gs
sbb
pushf
lods
and
push
shl
inc
js
xchg
push
push
addb
xchg
xlat
out
lds
pop
popf
mov
adc
lret
cmp
fnsetpm(287
imul
shrl
cmp
movsb
movsl
cld
cmp
mov
xor
or
imul
xor
lcall
dec
in
in
cltd
in
call
je
int3
nop
push
adc
xor
dec
sbb
inc
dec
and
sbb
mulb
cld
push
adc
pop
and
adc
imul
add
shlb
adc
add
jecxz
xchg
xchg
pop
dec
dec
xchg
mov
mov
shrb
loop
xchg
xor
or
sahf
out
adc
sarl
adc
push
pop
outsb
jno
xor
push
cmpsl
stos
repnz
lods
pop
mov
adc
mov
jg,pn
repz
mov
enter
jne
mov
je
shl
outsl
jb
add
mulb
mov
mov
and
adc
repz
xor
adc
in
or
dec
dec
aaa
insl
out
sub
cld
sbb
xor
jecxz
cmpsl
sub
in
jno
out
lcall
xchg
aaa
aad
cmp
pop
mov
test
xchg
pop
xchg
rorb
jne
sub
imul
cmc
push
xchg
pop
out
movsb
mov
jbe
mov
pop
lret
mov
dec
sti
dec
push
daa
in
mov
psraw
mov
mov
aas
data16
mov
add
cs
dec
fstpl
addr16
fsubr
gs
dec
outsb
lahf
mov
lcall
divb
test
loopne
ret
into
adc
push
sbb
cmp
call
ret
scas
xchg
es
mov
cmp
mov
aad
inc
jg
in
xchg
dec
orl
test
jno
xor
std
inc
mov
or
in
in
rcll
mov
cmp
xor
std
mov
inc
mov
xchg
dec
cmp
dec
std
data16
fisubl
sub
ljmp
into
stos
push
js
and
shr
mov
lcall
out
jmp
push
add
jle
subl
xor
movsb
bound
scas
imul
xchg
mov
popa
repz
dec
push
fisttps
inc
or
xor
cmpsl
dec
inc
incb
dec
std
mov
ds
xor
pop
mov
mov
pop
ss
icebp
xor
jge
push
loopne
ja
mov
jb
imul
cmpsb
push
aaa
xor
loopne
stos
iret
cwtl
inc
mov
scas
and
or
shlb
pushf
mov
imul
inc
pusha
dec
lock
sub
nop
dec
jecxz
cmp
mov
out
out
and
hlt
sbb
call
shlb
ror
cmp
lods
sar
ja
out
test
sti
xchg
xchg
es
lock
sbb
ja
loopne
mov
sbb
adc
or
inc
sub
push
sub
mov
mov
or
add
push
rorb
and
push
aam
xor
mov
push
push
dec
dec
je
call
push
or
cmpsl
mov
mov
pop
adc
nop
xchg
cmp
mov
ss
add
roll
jb
scas
cli
loopne
scas
cwtl
ss
movb
cmp
adcb
repnz
sbb
gs
or
ficoms
mov
push
dec
arpl
and
sbb
call
pop
xchg
mov
mov
fdiv
sahf
mov
xchg
pop
mov
or
in
jns
and
call
cmpsb
into
aas
imulb
call
pop
loope
or
sub
test
push
dec
cmp
or
scas
or
jae
stos
xchg
mov
dec
sahf
iret
repnz
icebp
inc
js
mov
jecxz
xchg
sub
dec
adc
sub
jbe
push
sbbb
jns
adc
andb
xor
sub
xor
mov
cmp
test
xor
lea
sbb
sbb
dec
pop
jmp
mov
lods
and
sti
xchg
daa
pop
add
movq
int3
hlt
or
into
sbb
mov
lods
insl
adc
pop
push
mov
ret
mov
adc
mov
xor
pop
xchg
sub
mov
into
or
pop
xor
xchg
jo
and
push
jmp
xchg
mov
sub
loope
scas
jbe
daa
pop
insl
rcl
jmp
push
das
cmp
test
xor
cmp
movsb
cmpsl
clc
pop
sahf
jg
and
mov
dec
in
les
pop
jg
inc
push
ljmp
mov
divb
fidivs
push
loop
pop
enter
adc
iret
and
sbb
xor
sahf
xor
sub
xor
bound
mov
or
sbb
sub
ret
push
jp
xor
cmp
je
xor
popa
mov
es
ljmp
call
xchg
mov
aad
repz
lods
adc
movsl
aas
cmp
mov
or
mov
mov
in
bound
adc
leave
lret
inc
mov
inc
add
in
repz
xchg
add
inc
ds
jge
mov
or
cmp
sub
add
mov
lret
sub
and
xchg
add
enter
negb
or
jecxz
out
mov
sbb
xor
pop
in
ret
add
outsb
jb
out
pop
adc
mov
pop
lcall
idivl
out
push
cmc
bound
lods
cli
cltd
in
pop
mov
ljmp
cwtl
lods
cmp
mov
mov
popa
pop
aaa
orb
scas
inc
testl
and
popa
lcall
dec
mov
and
loope
mov
enter
jnp
inc
insb
pushf
push
and
out
out
sbb
clc
test
fcomps
or
mov
mov
sahf
jno
je
lret
mov
iret
jg
mov
stos
je
popf
outsb
jb
fs
push
in
ss
jb
test
mov
movb
stos
out
jge
jp
jl
scas
cmp
dec
flds
jo
adc
ss
sbb
cld
push
xchg
jno
stos
aas
mov
je
sub
js
xchg
lds
pusha
fsubrs
mov
mov
or
xor
and
add
and
popf
sti
push
xchg
cwtl
adc
sbb
sub
jne
leave
push
aas
into
and
fstps
sub
ret
and
inc
daa
pop
fwait
mov
lods
add
and
pop
popa
add
or
xchg
out
cs
mov
addl
pop
cmpsb
test
repz
aaa
mov
push
push
xchg
adc
je
mov
adc
sahf
bound
mov
inc
mov
pop
pop
jb
adc
out
sbb
xchg
jmp
sahf
mov
out
jle
pop
add
out
xor
aaa
flds
push
adc
lea
iret
inc
pushl
cltd
xchg
sbb
jno
push
pop
add
sahf
leave
lds
xchg
std
jb
nop
or
dec
adc
imul
jl
popf
jge
fsub
cmp
aam
or
cmp
lds
rorb
dec
out
adc
pop
sub
cli
testl
push
dec
imul
mov
cmpsl
xor
jmp
lds
sbbb
scas
daa
mov
adc
pop
popf
popa
stc
repz
jmp
mov
lahf
ret
mov
rclb
push
cld
sbb
lds
push
adc
arpl
sub
xchg
push
int
mov
shlb
test
xchg
dec
stos
outsl
insl
and
outsl
insl
repnz
lcall
adc
or
fiadds
ret
push
dec
scas
sarb
pop
je
pop
jb
sub
jno
outsb
clc
mov
mov
fidivl
and
call
insl
sbb
mov
int3
inc
sbb
pop
xchg
popa
or
or
sbb
cmp
loopne
or
daa
mov
jl
dec
out
dec
push
add
pop
mov
cwtl
sbb
add
divl
aam
test
mov
add
sti
push
test
and
pop
ja
rcll
mov
mov
nop
mov
int
xchg
cmp
cvtps2pd
xor
and
cli
stc
filds
movsl
add
cmpsb
xor
dec
cmp
jmp
daa
adc
sub
xchg
lock
cmp
pop
mov
ret
ret
pop
xchg
js
hlt
cmp
push
cs
fmul
fdivrl
jnp
je
aad
mov
arpl
adc
push
or
xchg
sbb
mov
mov
sbb
fdivs
adc
aas
or
pop
pop
in
pop
push
pop
pusha
neg
jle
cmp
faddl
stc
test
sbb
push
clc
push
popa
inc
mov
out
es
stos
pop
call
cmp
inc
sbb
sub
call
inc
repz
pushf
decl
into
scas
jp
sbb
lods
inc
setge
leave
adc
aad
hlt
xchg
fdivs
jle
pop
bswap
cmp
je
xor
in
sbb
movsl
add
pop
out
push
inc
xchg
lret
sarb
pop
daa
sub
cmpsb
in
xor
arpl
je,pn
ret
stos
enter
dec
out
inc
roll
add
mov
cld
mov
inc
or
ljmp
or
jb
sarl
jg
js
stos
push
stos
into
jae
lcall
das
in
loopne
mov
pop
out
xor
test
shrb
loope
lods
mov
mov
mov
mov
iret
or
push
negl
sti
and
out
jge
cs
scas
add
fbld
stc
ds
hlt
inc
mov
xchg
pusha
dec
push
repnz
mov
and
ficomps
inc
repnz
sarl
nop
mov
mov
in
popa
leave
sub
jg
and
data16
repnz
push
pusha
nop
xchg
xchg
cmp
xchg
or
jae
outsb
or
push
push
call
in
pop
xor
add
push
inc
filds
mull
mov
in
dec
hlt
popa
dec
ds
xor
outsl
inc
test
xor
and
ds
cmp
mov
mov
mov
lock
mov
sbb
cld
mov
fisubrs
dec
mov
pop
scas
int
int3
repnz
std
pop
mov
sarb
push
dec
mov
das
mov
push
jl
xchg
icebp
jge
mov
push
je
icebp
xorb
pop
out
xchg
int
fstpt
pushf
test
nop
pop
xchg
push
fs
sub
int3
push
adc
dec
sbb
ret
inc
jno
add
scas
cmc
add
das
decb
dec
mov
pop
fiadds
inc
inc
sub
andb
inc
adc
mov
and
pop
add
mov
cmp
les
les
sub
or
popf
jno
leave
aam
sub
push
stc
sub
adc
mov
sti
mov
xchg
fildl
adc
jne
dec
iret
in
xchg
mov
enter
lret
adc
leave
add
int3
out
push
push
or
ljmp
mov
scas
clc
lock
enter
outsl
lcall
lahf
ja
xchg
push
dec
jns
les
and
mov
popa
push
jl
adc
xchg
aaa
jbe
shrl
jge
nop
inc
stc
add
mov
mov
mov
pop
add
add
leave
shlb
sbb
mov
scas
cld
les
push
imul
dec
pop
test
adc
adc
mov
mov
mov
sub
andl
xor
int
imul
fdivrs
or
push
mov
frstor
mov
mov
push
mov
lock
xor
mov
loopne
xchg
iret
jmp
xchg
jo
lcall
movsb
enter
jge
dec
mov
sti
sysret
sarb
mov
or
dec
lods
int3
shr
xor
jns
push
jns
sbb
aaa
scas
lret
and
out
sub
js
fisubrs
lret
ret
movsb
faddl
jne
dec
les
dec
dec
dec
iret
loope
fs
dec
dec
sahf
in
hlt
jl
push
pop
pop
movsl
fsts
mov
cli
in
call
or
repz
adc
movsb
outsb
lods
add
xchg
insb
adc
push
das
sbb
and
hlt
sbb
adc
sbb
pushf
daa
out
push
dec
lods
mov
les
or
fmulp
cmp
xor
sub
lods
xchg
hlt
add
jmp
cmp
fstpt
adc
repnz
push
jp
push
ret
cld
mov
bound
sbb
sbb
scas
mov
and
cltd
mov
fs
and
repz
add
mov
fs
fldenv
jnp
decl
pop
out
mov
and
xor
xlat
jns
arpl
int3
or
lock
cwtl
cmp
sahf
arpl
and
and
mov
mov
clc
pop
addl
dec
xor
push
push
and
mov
pop
adc
pop
xor
lea
jp
insl
ret
xor
test
push
add
aaa
out
out
push
xor
int
insb
inc
or
faddl
cmp
clc
bound
mov
xor
int3
pop
and
push
jbe
pop
scas
add
dec
push
pop
enter
adc
ja
test
sub
mov
or
xchg
fisubl
cmpsl
dec
iret
jne
inc
lret
and
dec
dec
sub
xchg
sar
out
sub
out
adc
movsl
add
cmp
fistl
aad
gs
jg
dec
out
fs
daa
adc
or
arpl
insb
shll
add
sub
or
sub
jno
inc
movsl
push
sti
int3
sbb
into
aas
adcb
shrb
clc
adc
cmp
add
stc
mov
xchg
in
mov
mov
and
ds
sub
mov
test
imul
test
icebp
mov
arpl
push
jae
daa
out
adc
sbb
es
aas
cs
jg
fdivl
pop
cwtl
push
test
cli
inc
jge
pop
lret
in
fcomp
xor
out
pop
dec
and
pop
pop
insb
dec
xchg
cwtl
mov
dec
shrb
ret
mov
xchg
xor
push
push
mov
scas
mov
rcll
and
aas
testl
stos
inc
cmpsb
jmp
ljmp
pop
roll
xchg
inc
dec
out
ret
ret
shlb
add
cmp
out
sbb
mov
mov
pop
push
popa
stos
in
sub
mov
bound
jmp
scas
add
ret
push
lcall
popf
iret
insl
pop
test
inc
les
inc
mov
xorl
sbb
andb
testb
cwtl
es
sbb
mov
ljmp
fstl
xor
jge
test
add
test
inc
mov
inc
ret
mov
lahf
stc
and
lcall
inc
sub
mov
sub
adc
cs
daa
push
and
jge
sbb
sarb
das
shll
repz
ret
in
les
mov
mov
jge
cmp
ds
jae
mov
dec
mov
fadds
inc
nop
stc
scas
scas
xor
repz
shlb
mov
inc
sub
loope
shlb
repnz
jecxz
push
es
or
or
push
add
aad
je
imul
inc
push
icebp
pop
xchg
into
mov
ficoms
fcoms
mov
imulb
xchg
mov
testb
and
sbb
fisubrs
mov
fistpl
cmpsb
inc
mov
lods
adc
add
hlt
xor
pop
jae
mul
xor
jl
add
dec
ljmp
mov
push
in
jne
and
cmpl
fildll
ja
inc
mov
jp
out
pop
insb
xor
out
dec
dec
pop
mov
int3
push
scas
movsl
inc
mov
add
mov
mov
add
sub
jmp
jne
shlb
pushf
pop
enter
clc
jg
fistps
nop
xchg
mov
and
xor
bound
sub
push
or
pop
jbe
push
cltd
mov
fstpl
jmp
mov
sbb
cld
mov
jnp
or
fwait
ds
adc
in
jae
push
ror
lea
adc
pop
xor
ss
cltd
push
mov
lret
arpl
jnp
lock
lods
loopne
movsb
ds
rolb
sar
leave
add
mov
inc
mov
cmc
das
adc
repz
cmp
mov
insl
xchg
adc
inc
push
xchg
mov
pop
pusha
insb
pop
jl
dec
lret
es
stos
cmp
sbb
push
or
lea
imul
sbb
and
call
sbb
iret
insb
mov
jmp
dec
mov
daa
sbb
or
loope
inc
dec
add
mov
jb
rcll
pop
cmpsl
sbb
addr16
lret
mov
test
adc
mov
adc
mov
mov
dec
mov
out
mov
aam
inc
nop
shlb
insb
xor
sbb
lock
fidivl
mov
dec
push
push
std
pop
xlat
mov
insl
push
dec
sbb
maxps
cmpsl
rolb
xchg
dec
outsl
shlb
xchg
and
push
sub
or
ds
push
jmp
cmpsl
fwait
and
jmp
sub
pop
fmulp
daa
dec
mov
repz
lret
in
pop
cwtl
fs
iret
lods
pusha
jmp
jl
test
test
sbb
xor
inc
test
mov
ret
dec
add
cwtl
jl
inc
orb
ret
fnstenv
lcall
mov
or
dec
and
cmc
or
adcb
aam
jmp
xor
sbb
mov
sub
rcrb
sbb
add
gs
je
xor
outsl
ss
sbb
push
lcall
sbb
xchg
mov
jnp
adc
outsb
lret
pop
push
jge
cld
cmp
mov
jbe
repnz
mov
pop
rorb
stc
cli
ss
aas
pop
insl
outsl
repz
out
int3
adc
lret
pop
arpl
aaa
cwtl
cmp
dec
xor
clc
in
cld
arpl
adc
pop
data16
sub
mov
inc
sub
in
xor
xchg
push
xor
leave
mov
add
outsb
addr16
pop
inc
fs
adc
out
and
mov
enter
cmp
int3
mov
movsb
xchg
mov
sbb
out
or
jmp
aad
mov
lcall
mov
dec
cld
movsb
pop
push
out
les
pop
imul
nop
inc
push
movsb
int3
jmp
ss
push
xchg
seta
aas
pop
stos
loope
bound
outsl
loop
mov
xchg
sahf
leave
stos
lods
out
int
xor
in
movsl
mov
in
mov
out
loopne
cmp
jp
xor
xor
sbb
jo
bound
xor
add
cld
sbb
aaa
adc
add
push
mov
pop
ss
lea
mov
and
scas
ja
cltd
loop
les
mov
enter
push
hlt
fwait
inc
mov
inc
fistpll
xchg
bound
and
js
inc
add
jge
imul
cmp
std
int3
cltd
xchg
adc
or
inc
fdivp
insl
jge
test
loopnew
or
aam
pusha
call
cmp
pop
outsl
or
or
sahf
or
ljmp
ljmp
jge
fcmovnb
mov
push
out
adc
stos
scas
sub
pop
sahf
cmp
mov
cltd
repnz
jmp
or
sub
les
pusha
arpl
xor
inc
mov
rorl
dec
hlt
bound
add
call
mov
sbb
inc
cmp
dec
popa
mov
cmp
fucomi
cmp
cmpsl
jle
addr16
jo
in
pop
cli
test
dec
pusha
sbb
inc
daa
insb
insl
insl
ss
inc
mov
mov
call
or
pop
test
and
cwtl
test
sub
aad
inc
imul
and
xor
sub
fisttps
cwtl
sub
test
lock
popf
mov
in
cwtl
pushf
mov
push
rcrb
lret
pop
mov
rol
jne
cmp
cli
jl
mov
popa
ds
dec
scas
cmpl
clc
scas
insb
cmp
mov
or
in
mov
mov
push
xchg
imulb
das
sarl
icebp
or
imul
lret
adc
es
inc
icebp
jne
pop
ljmp
sbb
in
out
sub
ret
out
cmp
aaa
cltd
mov
pop
int3
rcll
sahf
scas
adc
push
mov
lds
ret
push
ret
cltd
push
push
fstpl
sbb
pop
test
jp
es
loope
xor
cmpsl
hlt
mov
and
sbb
mov
imull
pop
cmpsb
push
cmc
bound
push
dec
xchg
fcoms
jmp
jl
insl
push
or
adc
xor
mov
mov
in
or
mov
js
push
negl
pop
cmp
in
mov
jbe
sub
loopne
int
fldl
fisttpl
pop
stos
cmpb
or
fwait
sar
xor
xchg
mov
sbb
in
shrb
scas
mov
jno
dec
inc
and
cmc
mov
insl
lds
clc
add
insb
cmpb
push
jp
dec
sbb
push
test
cmpsl
int
js
jno
cmp
das
pop
insb
test
mov
cmp
pusha
cltd
scas
fcmovu
shrb
xchg
mov
imull
and
sbb
and
jg
into
cld
inc
imull
adc
addb
cmc
test
sbb
cs
test
jne
pop
and
repnz
jno
sbb
push
popf
out
push
jb
pop
into
pop
aam
sub
jg
mov
cli
aad
loopne
or
out
or
sub
or
pop
mov
je
jbe
cmp
xchg
mov
mov
cmp
jnp
fbld
clc
rcrb
ds
loopne
int
or
or
jmp
lods
xchg
lds
push
adc
mov
pop
imul
push
cmc
add
test
cmc
mov
adc
jmp
inc
push
push
xor
sbb
cwtl
and
mov
push
mov
pop
add
stos
or
in
mov
mov
test
das
and
push
test
stos
sub
xchg
sub
cmp
push
xor
je
jb
shlb
push
fs
dec
mov
jg
lods
sub
sbb
fwait
fwait
in
jp
push
out
push
xchg
add
stos
movsb
adc
mov
mov
push
jnp
outsb
jns
out
lea
test
dec
xchg
sti
xchg
fstpt
lret
jp
outsl
dec
pushf
jge
jge
mov
inc
push
cmp
out
jno
cmp
repz
cs
push
cli
lret
call
fists
and
push
cs
sbb
sub
sub
jb
aad
mov
adc
inc
inc
cwtl
iret
push
add
data16
aad
ret
cltd
in
out
and
xor
or
xchg
jns
adc
or
push
mov
pop
inc
jo
cmc
jg
xchg
push
out
add
or
cltd
fcom
js
cmp
pop
je
hlt
inc
adc
cli
cmc
nop
pop
adc
or
or
pop
and
scas
aam
cmp
or
xchg
sbb
mov
cltd
dec
add
push
shll
out
shll
nop
dec
js
cmp
push
fdivrl
imul
fdivl
xor
pop
mov
xchg
gs
es
and
fdivrs
pop
int3
xchg
or
lret
xor
adc
sbb
roll
xor
xlat
fmul
adc
lock
mov
clc
movsl
mov
cld
and
dec
fcoms
into
mov
arpl
pop
stos
out
xor
inc
pop
inc
adc
sub
jmp
aam
push
mov
fsubr
mov
leave
std
pop
mov
fxch
ss
not
popa
sub
dec
jno
aaa
vmaxps
xchg
push
adc
ljmp
dec
ret
xor
fadds
inc
and
xor
cmc
add
jmp
es
shll
mov
mov
pusha
and
movsl
dec
and
mov
mov
dec
shl
jecxz
das
ds
cld
add
fsts
xlat
loope
jl
lret
cmp
sarb
fisubrl
mov
rcrl
mov
pop
mov
cs
leave
hlt
inc
jge
push
cmp
mov
fsubrl
rclb
fdivl
adc
xchg
imul
stc
jb
movsl
stc
pushl
repz
dec
repz
insb
inc
xor
adc
lds
int3
mov
pusha
popf
and
in
pop
mov
enter
imul
aad
mov
dec
inc
fldcw
jecxz
cmp
xchg
and
gs
jg
sub
jbe
iret
or
jg
fimuls
inc
inc
xchg
mov
in
js
cli
cmc
adc
test
in
ja
and
inc
mov
adc
inc
sbb
xchg
pusha
xchg
cmp
dec
push
jg
ja
mov
imul
addb
mov
jae
sub
mov
cmp
pushf
dec
or
imul
fsts
sub
out
cmc
int3
je,pt
dec
push
ret
inc
lock
mov
jp
fistpll
cmpsl
out
out
and
lret
addb
test
jg
xchg
jecxz
in
jl
push
dec
je
frstor
mov
test
jns
frstor
cld
out
stos
adc
inc
sbb
outsb
adc
cmp
js
sub
pop
sahf
cmp
sub
push
stos
dec
sbb
testl
cld
scas
inc
addr16
or
es
iret
gs
call
inc
mov
mov
pop
notl
mov
adc
sub
test
adc
jmp
lret
inc
push
add
cmp
mov
sub
fcmovnbe
jo
pushf
ljmp
add
and
mov
pop
nop
sub
cli
test
fsubrs
dec
mov
loope
fistpll
pusha
inc
jnp
pop
in
out
mov
rorb
mov
outsb
ds
insb
int3
cld
push
pusha
mov
fmuls
and
into
xor
inc
test
cmp
mov
xor
dec
or
xor
mov
mov
outsb
mov
cmp
sti
mov
aas
pusha
add
sub
xchg
xor
dec
push
xchg
ljmp
iret
mov
pop
xor
and
jbe
cmp
out
testl
mov
and
xor
fbstp
ss
imul
adc
cmpsb
sbb
test
sub
cmpsb
in
mov
dec
and
stos
lret
xchg
pop
jecxz
outsb
fistl
and
push
std
gs
inc
adcb
jg
dec
popf
call
xchg
add
dec
mov
cwtl
pop
push
subl
lret
jo
sub
sbb
dec
mov
ret
daa
jo
sub
mov
lret
dec
and
int
adc
js
mov
mov
out
roll
xchg
and
les
fiaddl
mov
adc
cmpsb
mov
jne
out
popf
lea
je
xlat
loop
mov
outsb
shlb
inc
pop
xchg
stos
jge
icebp
lahf
hlt
fisttps
stos
or
mov
jnp
insl
scas
dec
adc
out
out
jle
aaa
xchg
add
fidivs
mov
cmp
mov
dec
jecxz
sbb
lcall
fabs
xor
cmc
pusha
fimuls
inc
loop
ret
push
and
pop
dec
jbe
ja,pt
push
shl
subb
and
xchg
clc
ja
outsl
lret
cmc
cld
insb
jb
in
cmp
lret
lcall
into
jle
and
inc
imul
es
rcl
push
mov
ud2
adc
bound
cs
rol
and
sub
mov
ret
insl
es
dec
rcl
mov
movsl
xchg
jge
xor
xchg
push
xor
ret
outsl
xor
ds
aaa
mov
mov
pop
mov
pop
inc
or
push
ret
fists
cld
pop
jge
icebp
pop
jmp
jmp
shll
shlb
mov
mov
mov
jle
xor
push
xor
or
fcmovbe
ss
sbb
adc
or
pop
mov
shl
into
or
cmpsl
jnp
mov
iret
and
in
outsb
ret
jg
cmc
xorl
sbb
or
fld
in
sahf
js
scas
or
xchg
dec
xor
xor
jne
sub
lahf
cmp
sahf
push
sbb
mov
adc
mov
push
adc
xchg
cmpsb
lock
dec
cmp
stc
sbb
loop
cli
and
lock
call
divb
scas
call
fdivr
pushf
jl
out
mov
or
mov
dec
sub
mov
adc
aam
push
dec
gs
sub
inc
fst
and
mov
mov
adc
ret
les
stc
rclb
cmp
mov
inc
scas
pinsrw
or
cltd
sbb
jmp
bound
das
mull
adc
out
mov
scas
xchg
add
pop
test
jno
push
lret
inc
in
or
sbb
add
das
repnz
mov
call
lods
dec
sti
jb
lods
add
lea
dec
movsb
cmpsb
or
insb
sbb
in
cltd
enter
aaa
mov
out
out
aam
aas
fs
cwtl
jp
vpsubusb
xchg
sti
jecxz
jo
pop
and
xchg
jl
test
scas
mov
adc
jle
sbb
pop
bound
fists
xchg
in
mov
mov
jae
ret
iret
es
fnstsw
jno
inc
leave
das
push
call
ret
cmp
add
cltd
or
cmc
adc
mov
loope
cmpb
or
push
jae
inc
scas
outsl
pop
into
mov
outsb
stos
data16
inc
xchg
cli
cmp
popf
out
imul
lea
outsb
mov
mov
dec
add
bound
js
test
insb
mov
out
jl
push
roll
cwtl
into
push
idiv
fdivr
push
mov
loop
addr16
rcrb
mov
jno
sub
push
loope
jbe
cmp
sbbb
adc
in
and
jbe
mov
cwtl
pushf
lds
pop
push
xor
roll
pop
test
stc
inc
movsl
out
sarl
and
adc
jne
bound
cli
mov
adc
jge
ret
sub
inc
imul
add
sbb
lahf
sbb
pop
testl
push
daa
movntps
sbb
xchg
data16
jnp
mov
jg
pop
mov
inc
fistpll
xor
xchg
and
sbb
jb
out
cmp
into
push
fldl
lret
jae
lcall
cmp
add
rol
fsubr
mov
imulb
pop
test
jge
push
cwtl
mov
rclb
cmp
lcall
mov
xchg
shl
into
stos
xchg
ja
inc
clc
cmp
pop
int
and
orb
std
pop
push
xchg
rorl
icebp
dec
push
xchg
loope
lahf
out
lcall
ret
ret
ja
xor
rcrl
add
jo
inc
dec
add
sahf
jge
insb
ja
pop
push
jg
daa
mov
fidivrl
jb
clc
sub
mov
xor
pop
mov
mov
je
movsl
xchg
cmp
push
push
fistpl
jb
inc
sbb
xchg
int
pop
clc
push
push
dec
add
jne
dec
leave
lods
je
test
ljmp
fcompl
dec
xchg
mov
jnp
cli
in
sub
andb
push
dec
push
or
xchg
fistpll
ljmp
in
mov
add
data16
push
xorl
cmovo
out
test
push
ret
icebp
inc
xchg
pop
add
bound
iret
and
xor
inc
fdivs
pop
fbld
sahf
push
mov
push
xor
xor
xchg
lea
jb
mov
push
adcl
cli
shrb
xchg
bound
add
add
sahf
repz
sbb
test
sbb
add
push
es
sub
inc
fistl
sbb
sub
sbb
sbb
das
jecxz
mov
inc
mov
mov
jg
nop
jns
xchg
adc
adc
fnstcw
mov
inc
cmpsb
loop
pop
add
out
mov
fsub
aad
push
sahf
jne
dec
and
sub
sub
push
pop
mov
cwtl
scas
pop
mov
mov
adc
cmp
stos
cmpl
repnz
rclb
pop
cmp
lret
ja
inc
movsl
or
out
jbe
adc
push
mov
clc
dec
cmpsl
dec
pushf
jne
test
mov
sbb
std
nop
sbb
scas
sti
test
inc
icebp
shrb
int
ljmp
sti
inc
jne
mov
insb
jo
in
push
sbb
fwait
mov
rcl
rorb
dec
mov
je
out
andb
les
popf
ficoml
and
in
push
int3
das
jle
xchg
inc
jae
es
lea
push
test
movsb
cltd
sub
sbb
scas
les
js
inc
int
jg
es
lock
cmp
fucom
sub
pop
fwait
data16
pop
pop
push
hlt
sub
lods
mov
iret
ret
cmpb
clc
or
push
lods
ret
mov
aaa
dec
sub
loopne
mov
mov
data16
clc
inc
out
pushf
mov
and
iret
adc
jge
cmp
jmp
mov
pushf
loopne
ss
pushf
xor
or
js
adc
stc
shrb
lret
mov
or
out
insb
movsb
loop
imul
push
aam
test
xlat
or
shl
addr16
out
aam
and
mov
mov
movsl
jae
outsb
mov
mov
mov
rclb
mov
cmp
sar
popl
inc
jae
sarb
mov
dec
aaa
lods
imul
shl
popa
inc
fs
sub
cld
ss
mov
sub
cs
mov
sub
mov
popf
jnp
test
sub
cli
xor
push
cmp
mov
jbe
xlat
xchg
lcall
aaa
xor
sbb
adcb
out
jl
push
adc
cmp
mov
test
pop
pop
jne
mov
mov
mov
lret
pop
mov
int3
jecxz
ret
mov
fisttpll
test
cli
sti
out
pushf
pop
add
scas
xchg
inc
push
push
pop
cmpsb
cwtl
pop
or
out
lea
lods
rorb
stos
and
int3
sbb
cmp
cld
mov
arpl
adc
or
mov
push
jmp
push
xchg
scas
lret
xchg
lods
mov
test
inc
rcrl
in
ret
imul
mov
inc
out
idivb
lahf
popl
sbb
gs
dec
mov
xchg
fistps
xor
or
xor
enter
jmp
sbb
push
jo
mov
scas
fsubrs
push
cmp
lds
mov
sbb
dec
dec
ficoml
out
insb
shll
pop
push
jl
cmpsb
out
inc
fcmovb
mov
ss
sbb
xchg
dec
lods
inc
push
push
lea
outsl
push
inc
jbe
gs
sub
mov
push
inc
pop
aam
xchg
xchg
test
dec
add
sbb
es
pop
or
xlat
xor
dec
arpl
sar
xor
insl
es
sbb
loop
mov
ds
and
pop
push
mov
inc
std
dec
inc
cmp
mov
adc
orl
repnz
sub
cli
and
push
push
mov
scas
push
mov
mov
adc
cmpb
jo
in
in
pop
sbb
jno
sahf
adc
divl
ja
arpl
and
and
jnp
mov
mov
test
or
mov
jmp
push
insb
push
mov
mov
mov
or
mov
xchg
jle
dec
rclb
mov
and
or
sbb
xchg
popf
inc
aad
mov
sub
es
sbbb
aam
ljmp
cmpsb
xor
imul
popf
lea
rcll
das
inc
lods
out
jae
std
sbb
pop
jns
and
jmp
loop
cld
sbb
lock
inc
sti
fstpl
out
stos
pop
out
mov
rep
imul
push
push
adcb
inc
xchg
and
inc
cmp
dec
outsb
mov
jb
xor
pop
jbe
rep
ret
xor
rcll
pop
mov
iret
adc
mov
jne
sbb
pop
push
movzbl
jl
dec
sub
jmp
or
xchg
hlt
lret
mov
sub
jns
adc
adc
xor
dec
arpl
sbb
addb
inc
idivl
loope
movsl
add
in
notb
mov
cli
sbb
or
fwait
stos
dec
je
outsl
push
mov
imul
lods
lahf
lret
or
xor
jl
cmp
fbld
mov
lods
loopne
iret
adc
jge
shl
lcall
scas
jle
add
into
cmc
mov
pop
mov
sti
imul
jb
cmc
movsb
cmp
hlt
push
stos
ret
dec
aas
sub
int
mov
or
and
test
loopne
mov
js
or
addl
dec
inc
rcrl
stos
imul
movsb
sbb
xor
mov
je
dec
fildl
mov
ljmp
jno
scas
daa
in
sbb
add
pop
or
ds
rcl
cmpsl
and
and
sub
push
lea
leave
pushf
mov
xchg
dec
test
stos
cmc
add
inc
push
fiadds
popa
add
xor
stc
sub
pop
aaa
imul
pop
jb
xchg
mov
mov
loop
test
adc
mov
inc
add
movsl
lds
dec
mov
cmpsb
repz
add
jae
imul
inc
sub
mov
aad
sar
push
xchg
mov
fimuls
mov
mov
xor
imul
into
cmp
jp
xor
nop
stc
xor
daa
scas
imul
ss
jb
jle
xchg
cmp
jle
mov
and
add
mov
xor
mov
test
movsl
mul
ja
adc
pop
in
adc
jge
fsub
push
clc
push
fstpt
popf
adc
movsl
mov
cmp
cltd
or
test
cmp
sub
sbb
cmc
cmp
mov
in
scas
andb
mov
or
mov
lret
ljmp
sbb
mov
mov
leave
add
fsubl
loopne
add
mov
mov
xchg
or
xchg
adc
sbb
ljmp
and
adc
inc
bound
add
and
or
pop
sub
push
mov
dec
xchg
addb
and
stc
arpl
inc
bound
push
add
les
pop
inc
push
jg
jg
shll
dec
in
mov
xchg
pusha
dec
nop
cmpsl
jnp
dec
scas
ljmp
xchg
fstl
sahf
jle
lods
jge
xchg
test
cmp
inc
mov
loopne
mov
jmp
int
aaa
pop
and
cmp
xor
sti
je
xor
daa
xor
and
dec
adc
or
mov
inc
pushf
and
lret
adc
aaa
mov
jmp
std
sarl
fiadds
les
ret
sbb
jnp
mov
pop
shr
mov
and
movsl
xchg
inc
cmp
into
add
sbb
negl
mov
mov
inc
int
sub
jmp
xchg
es
fs
fisttpl
adc
aad
cli
sbbb
fwait
fs
es
adc
das
lods
roll
mov
mov
daa
sub
cwtl
xchg
add
test
in
fwait
test
cltd
iret
xlat
xor
repz
jge
push
in
es
test
pop
mov
clc
stos
mov
add
and
or
andl
mov
shlb
divps
mov
and
ret
jge
mov
int
sbb
test
mov
rcl
add
mov
xor
bound
sbb
xchg
adc
sub
adc
push
sbb
in
push
push
les
pop
test
push
inc
rcrb
sbb
cli
cmp
fidivrl
jl
pop
or
and
scas
ffree
fmul
mov
pop
add
movsl
into
nop
out
lret
sbb
es
cmp
addb
mov
and
xchg
fucomi
sbb
cmpsl
push
in
cmpsb
rclb
dec
push
in
insb
stos
repz
dec
mov
imul
je
test
lods
adc
jnp
out
clc
mov
jno
dec
stc
cmp
dec
xchg
jecxz
push
or
inc
add
push
addr16
pop
adc
cld
cmp
inc
cld
sub
xchg
add
pop
xchg
vcvtss2si
stos
rolb
push
sbb
out
nop
out
arpl
lods
lods
and
cmpsb
jge
push
mov
mov
cmp
cmpsl
pop
mov
je
dec
mov
mov
out
stc
andl
lcall
mov
mov
mov
ror
cmpsl
sar
pop
inc
xchg
xchg
leave
pop
xchg
dec
cmpsb
sbb
mov
idiv
pop
mov
mov
push
movsl
in
mov
adcb
inc
out
pop
ret
sti
pop
popa
sti
cltd
jbe
stos
inc
jns
in
xor
ljmp
jge
inc
mov
sbb
repz
fnstsw
sbbl
shlb
in
sbb
add
pop
pop
jne
and
pop
popf
xchg
or
xchg
inc
inc
dec
or
in
pop
andb
adc
pop
sbb
inc
in
and
cmp
jmp
xor
fmul
aam
sbb
into
test
and
jno
sub
push
mov
adc
mov
pop
repz
pop
sahf
sarl
add
sahf
inc
jo
pop
cltd
insl
insl
cld
mov
ja
add
jno
xchg
fstps
xchg
insb
adc
inc
adc
sub
cmp
dec
sarb
out
mov
into
mov
fadds
cwtl
ljmp
popa
pop
xchg
xchg
pop
pop
idivl
dec
pop
out
or
jbe
aam
loop
push
cmpsl
xchg
or
iret
cltd
addr16
push
jg
out
or
inc
xchg
addr16
dec
incb
mov
cmp
mov
jmp
inc
cmpsb
pop
dec
pop
jecxz
pop
cmp
dec
lock
dec
std
pop
scas
jecxz
cmp
vmwrite
cltd
in
push
lcall
cmp
jo
sbb
outsb
and
sbb
push
push
and
jmp
int3
cmp
je
lods
sub
clc
jae
ficoms
pop
jecxz
pusha
dec
push
sbb
sbb
push
xor
mov
or
into
in
and
add
aas
stc
rcrl
xlat
cmp
cmp
or
pop
mov
pop
push
lods
pop
fisubrs
xor
fmul
xor
test
fsubrl
push
mov
push
pusha
faddp
mov
jo
push
int
lods
and
pop
rorl
addr16
sbb
in
aaa
cmpsl
clc
cmp
add
or
xor
aaa
movsl
jl
adc
jo
cmp
xchg
ret
call
mov
icebp
add
out
mov
fldenv
js
mov
sub
outsl
cld
loopne
mov
loopne
cmpsb
jp
dec
insl
jge
dec
sbb
push
dec
jp
jae
mov
cmp
push
pop
dec
gs
sub
and
or
xchg
lds
xor
adc
jp
add
xor
pop
sarb
shll
or
addl
test
dec
cld
sub
cmpsb
jg
dec
lods
and
xor
in
xor
popaw
outsb
xchg
pop
popa
or
clc
mov
data16
lea
sub
adc
mov
mov
mov
cld
mov
ja
aaa
shr
pop
or
dec
pop
pop
push
dec
movsb
sbb
xor
aas
xchg
xorl
test
cmp
sub
gs
into
out
in
out
sub
notb
sahf
push
std
pop
repnz
mov
or
jnp
sub
inc
add
mov
jo
ret
cmc
ficoms
es
stos
es
mov
popf
sbb
out
mov
lret
pop
and
add
dec
push
pop
dec
push
xchg
enter
cltd
inc
ljmp
inc
jg
sub
add
int3
inc
dec
jbe
jl
sbb
xor
xlat
hlt
sub
outsb
je
sub
lods
pop
push
shl
orl
call
pop
mov
insb
mov
lock
xor
pop
or
decl
inc
ss
in
or
sbb
mov
ds
push
out
mov
or
mov
mov
mov
jo
imul
and
adc
pop
mov
xchg
adc
pop
iret
scas
call
push
push
adc
cmpl
mov
push
push
mov
fs
sti
lods
jg
lea
adc
std
push
adc
and
jmp
cmovl
in
pop
idivb
shrl
xor
inc
div
dec
ljmp
jl
in
push
adc
xor
enter
jg
xor
xchg
push
pushl
aad
iret
loopne
mov
incb
sti
push
sbb
out
adc
lahf
dec
testb
adc
jle
jbe
popa
test
imul
inc
push
adcb
stos
add
adc
xchg
call
xchg
loopne
xchg
orb
adc
lret
mov
cmp
xor
divb
lods
mov
push
roll
out
aas
cwtl
ret
push
loope
pop
movsl
test
popf
jae
push
das
xchg
pop
call
sbb
and
sarb
out
adc
mov
xchg
movsb
or
shll
les
cmpsb
cmpsl
into
jl
jae
in
or
xchg
xor
sub
pop
push
or
stc
xor
pop
lea
and
inc
seta
mov
push
jb
aas
lods
rolb
xchg
mov
jo
cwtl
and
cmp
dec
ja
dec
jne
clc
or
arpl
insl
or
adc
test
int3
js
out
xchg
mov
loopne
test
bound
dec
dec
mov
scas
loope
add
shll
mov
add
and
mov
cmp
jno
gs
mov
lahf
stos
addl
pop
jmp
xor
movsb
dec
mov
sub
adc
ret
adc
sbb
jae
mov
lcall
adc
mov
pop
and
and
cmp
push
iret
mov
sub
loopne
sub
popf
rorl
fsubrp
mov
pusha
dec
sbb
mov
or
cmc
jg
mov
repnz
pop
insb
mov
insb
xchg
xchg
push
das
cltd
mov
data16
push
mov
sbb
cli
insl
push
movsl
and
jno
out
fwait
sub
sub
push
incl
fiadds
int
fildl
lods
inc
cmp
cmc
jo
fidivrl
ljmp
mov
xchg
jnp
popa
xor
fmulp
out
mov
adc
inc
xor
and
loop
lahf
pop
jecxz
daa
ja
daa
add
repz
jne
mov
aas
and
cmp
dec
cmp
fsub
cmp
push
xor
sub
out
sbb
pop
sub
insb
mov
mov
jmp
lahf
push
stos
xchg
aam
mov
filds
add
cmp
xor
sbb
sbb
jg
arpl
xchg
lgs
inc
pop
into
js
xorb
sbb
inc
call
fldcw
pop
das
sbb
pop
cmc
mov
sub
jno
gs
arpl
or
push
out
pop
fldcw
pop
mov
lds
xor
cmp
and
mull
sub
jno
sub
outsb
push
xchg
mov
xchg
lea
mov
mov
mov
jg
test
out
add
or
icebp
sbb
ds
or
mov
loope
add
out
int
dec
adc
xchg
push
sub
inc
dec
stos
into
pop
aad
sbb
cmp
or
xor
mov
lods
stos
sbb
jg
daa
mov
cmp
dec
add
and
add
sbb
mov
inc
fidivrl
inc
cwtl
cwtl
xchg
and
ljmp
push
iret
and
ss
jo
dec
push
rclb
sbb
pop
inc
adc
and
in
xchg
mov
in
xchg
mov
jl
cmp
or
inc
sbb
in
clc
in
pop
mov
jge
aas
lds
mov
lcall
ja
lahf
mov
loope
stc
in
sbb
ret
gs
faddl
cwtl
fdivr
inc
dec
mov
or
scas
sti
adc
push
or
stos
push
mulb
aas
mov
outsb
xor
pop
pop
insb
adc
in
movsl
int3
imul
shll
ficoml
popa
xor
daa
and
xor
mov
mov
pop
mov
mov
jbe
xor
sub
notl
jle
popa
loop
sub
pushf
popf
cltd
add
and
jmp
pop
jnp
cltd
xor
sahf
aaa
loopne
scas
nop
push
loope
popa
adc
adc
and
mov
popa
jbe
push
sub
aad
mov
lret
xor
cltd
cwtl
xor
mov
add
xor
addl
mov
cmpxchg
mov
sbb
mov
or
pop
lds
xchg
je
into
push
arpl
es
test
cwtl
pop
outsb
and
dec
mov
test
and
inc
pop
lret
dec
push
lcall
incb
xchg
add
and
pop
sti
cltd
roll
sti
test
movsl
movsl
jecxz
outsl
mov
push
sbb
lcall
pop
xchg
push
push
adc
jno
lret
sub
test
or
fld
pop
xor
ret
repnz
mov
outsl
push
inc
cmp
into
fldt
divl
cmp
imul
repz
test
stos
iret
jl
xor
scas
adc
test
out
push
sbb
and
and
mov
in
sbb
sbb
inc
arpl
pushf
jae
jb
test
mov
pop
mov
mov
stc
scas
inc
cmp
mov
push
push
jnp
jne
arpl
jb
in
push
xchg
loop
mov
adc
xchg
sub
push
in
dec
in
cmp
loope
push
cwtl
lods
ret
and
arpl
xor
sahf
mov
cli
mov
iret
lcall
lock
lret
dec
xor
cli
xchg
jecxz
add
pop
sbb
mov
int3
je
stos
jne
jnp
mov
clc
add
mov
and
or
stos
sbb
mov
cmpsb
xchg
inc
popl
cmpsb
xchg
clc
mov
push
loopne
adc
lea
lods
cmp
je
xchg
jle
fst
inc
jbe
cmpsb
das
or
sbb
fdivl
and
daa
jbe
pop
inc
jns
xchg
inc
repnz
xlat
mov
mov
and
stos
mov
xchg
icebp
mov
jb
loope
mov
pusha
add
ret
flds
cmpsb
test
out
iret
dec
cmp
adc
jnp
push
mov
mov
pop
cmpsb
repz
mov
cmp
aaa
outsb
out
dec
lds
lea
push
inc
cld
jmp
sti
mov
push
push
inc
mov
testl
xchg
mov
rep
sub
int3
jns
in
aad
imul
out
dec
mov
out
ficoms
stc
loope
adc
adcb
data16
addl
adc
test
cmp
sbb
mov
fmulp
add
rcl
loope
mov
dec
dec
stos
stos
out
add
dec
push
scas
jb
or
or
ds
inc
xchg
adc
mov
int
cld
cmp
jecxz
mov
push
xchg
jae
aaa
sti
mov
dec
je
sbb
sbb
loopne
pop
dec
call
std
jno
shl
mov
dec
xchg
and
testl
xchg
add
mov
lds
inc
xchg
jns
inc
ret
and
cmp
pushf
call
pop
cli
rclb
mov
fstpl
mov
pop
ds
xor
sbb
jno
jno
mov
xchg
fisttpll
cmpl
lods
sbb
ret
icebp
pop
dec
movsb
push
mov
jnp
lea
ljmp
jo
mov
mov
add
rolb
fiadds
divl
stc
dec
in
cmpsb
inc
mov
cmp
rcl
dec
dec
sbb
iret
in
add
rorl
xor
cmpsb
cld
cmc
shll
dec
inc
inc
sub
sub
in
mov
data16
leave
mov
sbb
inc
lcall
jecxz
sahf
cwtl
push
push
mov
mov
jge
push
mov
fdivrp
xor
loopne
aaa
inc
xchg
daa
aaa
mov
ljmp
jge
xchg
jl
xor
cmp
loop
inc
int
test
mov
mov
movsb
cmp
nop
or
scas
lahf
or
adc
jmp
rcrb
outsl
loopne
mov
out
jae
aaa
mov
push
orb
adc
in
pop
lret
data16
push
fsubrl
cld
add
int3
dec
add
sbb
push
jbe
mov
dec
mov
mov
push
mov
xor
cmpsb
mov
subb
dec
clc
pop
mov
fdivrl
fidivs
inc
aas
mov
in
jle
xchg
push
dec
mov
jno
xor
lods
cmpsb
mov
pop
push
inc
xchg
adc
cmpsl
repz
adc
cmp
mov
dec
faddl
ja
jp
mov
daa
sub
jno
mov
test
pop
push
lret
fistps
in
xchg
in
cmp
mov
fnsave
xchg
push
pop
jns
push
dec
and
sbbb
jmp
xor
inc
scas
mov
imul
std
and
mov
add
sbb
jne
add
cmpsb
jb
add
mov
adc
stos
ror
cmp
inc
push
fisttpl
cmp
icebp
inc
lods
gs
std
lahf
pop
mov
out
scas
mov
cmpsb
xor
mov
repnz
and
pop
xor
dec
in
cmp
cltd
fdivrs
mov
pop
loopne
cmpsl
push
daa
pop
outsl
mov
icebp
outsl
xor
mov
das
jo
mov
fidivrl
mov
add
fimuls
rcll
adc
push
loop
sub
stc
mov
out
jl
jbe
mov
mov
cmp
inc
inc
push
push
jecxz
dec
les
or
sub
xor
sub
cwtl
rcrb
cmpsb
test
sahf
lods
sub
or
push
sub
mov
and
lret
negb
and
sbb
movsb
das
add
movsl
je
mov
pop
aad
and
call
inc
loopne
cli
cwtl
lock
adc
repnz
xchg
push
push
decb
jae
aam
enter
xor
into
sbb
mov
outsl
fidivrs
xor
loopne
ja
mov
add
mov
testl
loop
into
mov
sub
dec
push
pop
mov
add
dec
sbb
rcrl
adc
or
push
scas
cmc
data16
sbb
test
adc
cmp
test
movsl
mov
lret
xchg
pop
push
sbb
fidivl
jg
jb
xchg
movsb
cltd
fadds
rolb
inc
es
gs
sub
pop
xor
mov
addl
aad
cmp
int3
sbb
or
xor
sub
insl
cmp
push
stos
nop
cmp
call
jge
pop
out
or
scas
inc
mov
pop
push
pusha
adc
and
cmp
out
vcvttss2si
inc
rcl
divl
test
rcrl
dec
sub
popa
push
ficoml
movsb
sbbl
mov
dec
add
out
pop
and
mov
mov
scas
scas
out
inc
ss
cltd
xchg
dec
int3
sub
lcall
scas
mov
jbe
xchg
inc
xchg
pushf
sub
or
aaa
sub
jo
push
or
mull
imul
sbb
cmpl
cwtl
idiv
jge
lea
xchg
xlat
testb
addb
inc
sub
gs
mov
and
or
inc
cmpl
xchg
dec
in
ljmp
scas
cmp
push
push
fs
mov
aam
push
loope
mov
test
leave
jl
lret
aas
out
jmp
pop
pusha
pop
mov
insb
lods
mov
sub
lcall
push
inc
mov
iret
and
inc
dec
inc
inc
jecxz
cld
add
loopne
push
leave
or
jns
cmpb
negl
lea
add
stos
lds
loopne
rcrl
cmc
sub
add
fstps
ret
cmpb
adc
dec
jno
xor
xchg
push
cmpsl
fcompl
fstpt
mov
lods
pusha
pusha
fs
or
adc
or
pop
xchg
loope
fisttpl
movsb
dec
ret
icebp
test
adc
mov
add
or
pop
and
cld
dec
push
add
adc
in
test
in
fdivrl
arpl
push
shrl
rolb
leave
add
call
mov
test
add
push
pushf
jnp
dec
daa
int3
dec
mov
cmp
in
test
fs
xlat
cmp
inc
les
and
cs
xchg
cld
cmp
sbb
dec
negb
lods
repnz
arpl
out
addr16
imul
xor
add
sub
inc
xor
pusha
je
pop
xchg
pop
dec
std
dec
loope
mov
repnz
mov
sbb
stos
call
movsb
mov
out
fwait
sub
mov
xor
xchg
mov
dec
ja
xchg
pop
fisubrl
jl
fmull
jb
stos
jo
jmp
mov
and
sbb
repz
sub
xchg
adc
outsl
adc
lock
icebp
add
xor
xor
or
fcompl
cmpsb
mov
or
sbb
pop
inc
mov
jl
icebp
lret
lahf
fiaddl
xor
and
fs
xor
push
xchg
cmpsl
ror
dec
jnp
and
cmpsl
lret
ljmp
add
mov
shl
cmc
pusha
rcrb
mov
sti
mov
mov
rclb
inc
cmc
pop
movsl
mov
push
sub
push
shl
jnp
cmp
dec
pop
jle
fdivs
inc
test
cld
stos
fildll
int3
fsts
pop
add
dec
ret
mov
push
push
loope
in
push
and
fisubrs
int
mov
adc
shrl
fwait
push
mov
cmp
pop
fdivr
shlb
movsb
mov
aam
xchg
fs
test
iret
xchg
jb
xchg
xor
inc
loope
xor
jnp
cld
repnz
mov
jecxz
push
mov
inc
dec
ljmp
rcrb
sub
lcall
adc
aad
aaa
mov
arpl
cmp
imul
mov
add
dec
arpl
xchg
lcall
sar
cld
sub
andb
mov
sbb
es
cmp
stc
push
or
pop
out
xor
imul
adc
js
push
scas
lods
pop
or
daa
test
push
pop
ret
test
inc
mov
push
jg
aaa
shll
lods
push
loop
dec
test
pop
ret
mov
adc
cltd
stos
mov
dec
sub
or
xlat
and
lock
dec
fmull
xchg
fs
push
aaa
loope
repnz
or
push
sub
mov
inc
and
jbe
fstps
cltd
push
sbb
fistl
mov
lahf
enter
pusha
mov
jno
lods
scas
fadd
and
sbb
xchg
lcall
fidivs
add
pop
cli
xchg
shrl
and
loop
mov
lods
repz
out
adc
mulb
jecxz
xchg
icebp
inc
stos
popf
lock
loopne
xorb
adc
mov
adc
add
or
add
pop
dec
outsb
mov
mov
mov
and
shlb
push
in
jb
cmpsl
jno
mov
mov
adc
cmp
adcb
or
mov
shll
fdivl
add
inc
clc
cmpsb
shrb
in
pusha
imul
mov
cwtl
int
jo
rcll
test
mov
addr16
jbe
cld
mov
ret
sbb
cmp
leave
push
mov
xchg
mov
rorb
push
outsb
stos
cmpsl
mov
mov
leave
lretw
cmp
in
shll
push
mov
adc
cmp
lock
daa
push
icebp
cmp
loop
xor
inc
mov
mov
or
sub
cli
pop
cli
push
cmp
cmpsl
int3
jecxz
orl
clc
popl
ds
jmp
adc
cmp
enter
xor
sahf
ficomps
or
xchg
mov
mov
inc
sub
dec
and
mov
out
jae
xchg
out
aam
out
push
mov
adc
into
fimuls
push
sub
mov
jno
xchg
xor
xlat
ret
mov
out
jge
sbb
adc
dec
popa
dec
mov
xchg
dec
mov
addl
jbe
int
dec
adc
jmp
push
adc
fwait
iret
pop
movsl
push
lds
and
inc
pusha
pop
lahf
cmp
roll
call
pop
scas
clc
sbbb
mov
and
out
mov
aad
in
in
mov
inc
testl
loop
pop
inc
adc
mov
outsb
shll
dec
sub
sub
les
mov
push
loopne
pop
hlt
rcll
leave
scas
jo
int
add
arpl
add
insl
fistps
imul
repnz
in
lods
cmpl
adc
shr
or
push
fcoms
or
lods
push
pop
insl
aam
mov
in
das
or
lret
mov
fmuls
mov
pop
mov
daa
mov
cmpsl
and
sahf
cmp
jb
and
ss
out
sbb
lock
incl
ja
loop
addb
or
cltd
push
out
hlt
and
and
out
jns
xchg
inc
loope
sub
insl
std
xchg
lret
mov
adc
rcl
push
fistpll
lahf
xchg
xchg
sbb
filds
rcl
in
fiaddl
stos
pop
add
aad
fiadds
jecxz
mov
arpl
faddp
cmp
jp
test
jae
add
aaa
dec
cmp
mov
jle
push
daa
jecxz
mov
sbb
push
imull
fisttpll
jmp
and
push
and
int3
out
push
add
or
mov
je
dec
pop
and
imul
pop
add
mov
fwait
inc
xlat
cmp
mov
or
dec
push
jg
cmp
arpl
adc
sub
dec
cs
aad
test
xchg
add
push
or
pop
mov
mov
hlt
js
test
fwait
mov
dec
out
jg
pop
rcr
fnstenv
pushf
imul
inc
or
iret
or
push
das
ss
pop
inc
adc
popf
cwtl
in
dec
ficoms
cmpsl
clc
sbb
cs
xchg
clc
mov
int
cltd
dec
sbb
mov
sub
push
lahf
jnp
ficoms
sbb
not
xchg
frstor
xor
mov
cmp
push
lods
xchg
push
jle
ds
jge
xor
call
lock
test
inc
es
loopne
mov
xor
sarb
or
cmc
notb
lock
sub
xchg
and
add
insl
fnstsw
or
gs
pop
push
testb
jp
add
push
jb
and
fdivs
mov
bound
test
inc
mov
jmp
push
fyl2xp1
add
hlt
mov
xor
rclb
inc
sub
cld
rcrl
insb
jmp
scas
les
jo
add
pop
push
sub
imul
xor
mov
mov
xchg
mov
fldt
outsb
push
xchg
adc
clc
xchg
arpl
push
dec
lods
adc
inc
sbb
call
inc
xchg
push
lea
outsb
mov
inc
or
dec
sub
in
addb
cmp
mov
and
dec
and
dec
push
add
mov
movsb
jecxz,pn
lds
sbb
push
cmp
sub
nop
push
aaa
jg
out
fsubrl
enter
std
cmp
push
sub
push
xchg
pop
ss
lret
cld
xchg
insl
mov
add
jmp
and
push
fdivl
add
add
testb
push
jl
data16
addr16
jecxz
or
mov
sbb
into
fsubs
mov
icebp
addb
inc
xchg
je
dec
cmc
xchg
sub
in
cmp
icebp
hlt
fcmovbe
add
inc
mov
into
dec
inc
jmp
movsb
xor
jnp
xchg
cmp
inc
in
jg
push
cwtl
clc
int3
pushf
sarb
push
dec
daa
xchg
iret
sbb
dec
xchg
add
mov
test
and
or
pop
mov
js
adc
jmp
cmp
jbe
iret
hlt
push
das
in
inc
gs
cltd
fisttpll
movsl
push
xor
pop
je
adc
icebp
test
lcall
call
xchg
xchg
pop
jo
jbe
pop
daa
xchg
les
fwait
mov
outsl
push
testl
push
fdivl
out
push
or
mov
sub
lcall
push
mov
test
xchg
lcall
sbb
dec
or
fldenv
cmp
fstpl
xchg
pop
push
push
mov
adc
jb
sarl
test
jne
pop
stos
dec
movsl
sbb
incl
dec
jg
adc
sub
fsubrl
adc
loopne
jecxz
in
sti
fdivrl
loop
cli
dec
push
aad
cmp
icebp
insl
pop
jecxz
jg
dec
aam
mov
add
pop
and
mov
sub
iret
xor
andb
pop
lret
inc
rclb
sub
inc
xor
xchg
mov
cmc
mov
dec
cmp
mov
or
call
dec
test
adc
pop
and
rorb
jnp
mov
ret
idivb
scas
lds
inc
mov
lds
mov
cltd
jno
inc
cs
mov
inc
inc
dec
xchg
jo
out
sub
pusha
adc
cmp
xchg
mov
mov
test
add
add
jnp
sbbl
inc
mov
inc
int
fmuls
cs
mov
loop
dec
xchg
dec
mov
pusha
mov
lods
sub
fidivl
mov
popf
adc
pop
nop
ss
push
scas
fwait
insb
rcrl
jge
mov
push
push
int3
fcompl
dec
sbb
loopne
popf
test
xorl
pop
in
in
call
shlb
cmp
jns
xor
mov
std
dec
dec
popf
popf
dec
gs
aaa
insl
lret
insl
data16
lsl
lea
fdiv
clc
in
mov
ret
test
cli
repnz
add
xchg
cmp
stos
pop
cltd
xchg
push
mov
adc
inc
mov
and
arpl
les
scas
pop
sub
jb
pop
in
push
mov
fisubl
jmp
jl
fldenv
mov
mulb
sbb
outsb
add
adc
mov
pop
xchg
pop
sub
jmp
dec
stos
in
push
mov
adc
cli
push
outsl
enter
sub
push
jbe
pushf
out
pop
xor
scas
out
sbb
ret
sub
push
mov
sahf
aaa
inc
sub
sbb
inc
lea
test
shll
push
movsb
xchg
xchg
or
xchg
sbb
pop
adcl
xor
nop
pop
mov
cmp
loope
sbb
adc
sbb
scas
sahf
mov
insl
xchg
sbb
cmp
addr16
inc
call
mov
push
jle
data16
inc
clc
andl
mov
mov
xlat
mov
adc
aad
fs
sbb
or
pop
pop
outsl
push
in
lock
dec
in
jnp
outsl
dec
loope
fadds
lcall
aas
push
push
dec
xor
sbb
sub
sbb
push
cs
in
sbb
push
popl
imul
ss
loop
xchg
add
jb
nop
push
scas
add
cs
fmull
adc
and
hlt
lcall
addr16
xor
cmp
shl
and
fs
int
imul
pop
inc
test
jo
xchg
roll
xchg
fnstsw
add
jge
clc
sbb
lcall
sub
rcrb
addr16
jl
xor
or
mov
sbb
xchg
mov
cmpl
jle
push
fwait
popf
lret
cmc
mov
inc
mov
mov
and
fldl
scas
out
in
inc
bound
inc
stos
imul
or
dec
xchg
loope
lock
sub
pop
dec
jno
xor
push
scas
mov
cmp
push
or
sbb
stos
sti
les
cmp
sbb
cmp
lds
push
mov
lock
cs
jp
rcrb
mov
outsl
pop
ljmp
sarb
aas
mov
les
and
push
cmpsl
mov
inc
shlb
xchg
lcall
jg
xchg
mov
aas
inc
scas
mov
xor
neg
imul
cmc
ljmp
lcall
xchg
psubsw
sub
movsb
cmpsb
bswap
ja
shrl
pop
test
bound
fwait
push
xor
iret
sub
mov
push
ret
das
mov
in
sti
ds
lods
dec
adcb
pusha
arpl
jnp
int3
xor
cli
push
adc
inc
icebp
inc
int
out
inc
inc
cltd
cmp
add
and
xor
pop
mov
fisttpl
sbb
sub
stos
push
cmpsl
cmpb
inc
lcall
in
fildl
push
pop
loopne
xor
iret
jecxz
in
test
icebp
jb
or
and
mov
ret
in
pop
dec
sub
add
dec
imul
or
mov
test
jl
ds
cltd
aam
mov
pusha
nop
sub
jbe
xchg
loope
std
inc
mov
pop
bound
nop
adc
mov
fmulp
xor
mov
jl
or
cmpsl
mov
mov
in
popf
adc
xchg
or
adcl
jnp
adc
xlat
into
es
xor
inc
nop
or
pop
in
push
push
and
nop
jns
lds
xlat
or
daa
jne
movsl
lea
pop
dec
call
fnsave
das
pop
push
adc
stc
adc
sti
js
cli
mov
sub
mov
xchg
outsl
dec
push
jbe
into
in
ljmp
cmpsb
sub
sub
aaa
subl
outsl
add
lret
xor
xor
adc
shrl
dec
js
sub
mov
pop
ret
ljmp
mov
mov
mov
das
test
xchg
cmp
xchg
outsl
shll
imul
idivl
out
repz
xchg
lods
xchg
or
and
inc
lahf
add
adc
lods
outsl
popf
pop
aam
iret
nop
jno
das
xchg
neg
or
cmp
inc
push
add
sahf
and
jnp
ds
mov
bound
inc
gs
jmp
xchg
cmp
jne
xchg
fwait
sbb
adc
sbb
rorl
inc
stos
or
mov
push
inc
outsb
mov
xchg
cmp
stos
mov
pop
cmp
int
cmp
xor
xor
data16
cmp
es
and
and
dec
sbb
arpl
pop
rcl
push
pop
mov
xchg
stos
or
jmp
pop
leave
inc
dec
and
push
scas
jo
test
ss
inc
hlt
dec
nop
lds
xchg
push
sub
cmp
int3
xor
push
arpl
sub
xchg
pop
mov
imulb
iret
cmp
dec
nop
insl
sahf
sub
push
enter
arpl
es
hlt
rcr
mov
std
add
mov
mov
packsswb
adc
cld
cmpsl
add
jns
cmpsl
xchg
notb
jge
jns
in
mov
push
add
cwtl
sti
and
jae
fcmovu
pop
incb
orb
push
popa
inc
in
jg
icebp
int
loopne
xchg
inc
mov
stos
mov
cmp
ss
sub
mov
mov
pop
stc
push
mov
rclb
mov
cmpsl
lock
push
shrb
pop
loopne
pop
popf
aas
fnstsw
addr16
add
xchg
adc
xchg
mov
idivb
mov
xchg
loop
pop
mov
jo
mov
sub
or
mov
call
dec
loope
orl
into
mov
jae
add
xor
jg
aam
lcall
sbb
mov
dec
movsl
xor
pusha
lcall
xchg
mov
push
pusha
repz
or
add
jp
pop
scas
into
jb
mov
dec
and
mov
ss
fs
adc
xchg
push
out
arpl
cmp
cs
pop
mov
inc
cmp
or
repnz
dec
inc
popa
lods
push
rolb
mov
ljmp
out
lds
shr
cmpsl
arpl
xorl
jno
in
and
mov
popa
sbbl
mov
dec
neg
cld
sub
iret
gs
adc
lret
cld
inc
add
push
xor
sbb
inc
scas
imul
loop
mov
aaa
cmc
or
add
xchg
jecxz
add
mov
in
mov
and
cs
into
or
mov
cmp
enter
ja
and
leave
adc
ror
jo
stos
lods
cmp
push
out
mov
dec
mov
out
in
fdivrl
sub
jnp
les
push
testb
out
imul
mov
test
xor
fwait
pop
aas
nop
pop
dec
lods
stc
add
mov
fucomi
ret
out
adc
jbe
pop
mov
test
push
mov
pusha
pop
pushf
and
push
daa
shr
insb
and
jmp
xor
inc
pop
xchg
mov
imulb
adc
nop
push
cs
ds
dec
cli
sub
dec
popf
mov
pop
movsb
xor
into
lds
dec
and
ds
in
int
ljmp
outsl
das
mov
fstpl
insl
in
cmpl
addb
jecxz
negl
adc
dec
rcrl
push
mov
into
mov
out
icebp
scas
mov
movb
std
lods
loop
or
mov
mov
sub
mov
rcrb
cs
sbb
lcall
movb
push
mov
jbe
mov
cwtl
or
test
ss
adc
sbb
jno
dec
lret
jmp
fcmovnu
pop
mov
fsubl
push
ret
scas
aam
dec
movsb
push
bound
stc
int
cmp
cmp
push
repz
out
inc
jecxz
pop
fs
test
in
call
js
loop
dec
in
clc
adc
out
adcb
pop
pop
sub
add
stos
sbb
lock
scas
ja
jge
es
cmp
mov
int3
cmp
push
imull
xor
push
mov
mov
out
fidivrs
xchg
iret
lcall
fwait
stos
xchg
xchg
fcomp
scas
mov
pop
lea
pop
and
cmp
sbb
adc
xchg
xor
mov
sbb
mov
push
jae
dec
xor
pushf
pop
into
add
push
lods
jge
lahf
inc
imul
push
or
push
rcrb
sub
pop
inc
lea
shrl
pusha
mov
test
pop
rolb
jmp
mov
mov
in
in
bound
loop
jge
add
and
mov
mov
out
mov
add
jno
test
addr16
movsl
jno
add
fwait
adc
lods
lds
cmp
jg
jle
lret
push
pusha
dec
lret
sti
inc
push
mov
fdivrl
push
jl
imul
inc
sti
jbe
push
push
repz
fstps
imul
aad
sti
out
lds
or
addr16
xor
popf
dec
lea
iret
lcall
sbb
and
mov
mov
or
jmp
sub
mov
add
sbb
and
pop
inc
lods
ss
cmp
lahf
pop
lret
mov
sbb
add
mov
pushf
sbb
stos
mov
jb
or
loopne
arpl
shrb
inc
push
mov
dec
pusha
in
incb
lods
jno
or
lea
mov
test
push
gs
add
arpl
sub
sub
xchg
add
jge
dec
cmp
cmp
or
xor
fsubs
sub
sub
cmp
dec
cwtl
add
adc
imul
inc
add
sti
out
aam
hlt
lea
mov
mov
repnz
cmp
mov
xchg
hlt
sbb
andb
mov
enter
outsl
iret
leave
es
mov
out
sub
insl
je
faddl
je
jbe
das
iret
mov
js
call
pop
pop
xchg
mov
repnz
rcrb
push
add
mov
inc
xor
cmp
lock
push
mov
xor
jbe
sbb
ficomps
loopne
jae
pop
out
jl
or
inc
lods
adc
repnz
fs
rol
cmp
xor
jg
out
lcall
and
in
test
push
insb
movb
jne
movsb
aam
push
ja
jae
movsb
lea
fwait
test
xor
adcl
jmp
mov
es
fcomps
in
imul
sub
mov
sub
push
mov
int3
and
push
mov
stos
pop
in
mov
pop
imul
add
or
in
xbegin
mov
popf
popa
cmp
pop
loopne
or
inc
cmp
test
jl
mov
nop
sub
hlt
mov
pop
sar
cmp
xchg
mov
cmp
in
push
lods
in
jne
sub
mov
std
pop
xor
scas
and
int
add
push
call
aaa
insb
or
pop
das
test
dec
push
dec
jp
rcrl
outsl
pop
inc
sar
inc
cmp
cmp
jbe
xchg
ret
out
dec
dec
fndisi(8087
inc
mov
stc
jno
test
mov
lods
ret
add
ljmp
jo
fwait
xchg
sub
lret
push
mov
xchg
int
jnp
push
mov
and
mov
mov
xchg
movsb
mov
mov
gs
popa
inc
jp
mov
adc
ret
out
jecxz
xor
xor
push
or
dec
mov
fcompl
push
fwait
sub
xchg
add
sbb
fcoms
jns
mov
push
or
sti
les
aaa
mov
cmp
fldln2
cmp
jmp
xchg
adc
and
sarl
lds
xor
jo
aam
mov
or
dec
outsb
aas
inc
jmp
push
lcall
dec
jmp
mov
rcrb
jmp
icebp
pushl
cmp
pushf
push
sub
jmp
and
mov
cltd
jnp
mov
daa
in
faddl
jmp
clc
cmpsl
mov
dec
mov
ret
mov
ret
jmp
movsb
les
test
sub
loopne
pushl
jmp
fcmovbe
jp
fwait
dec
cld
in
cmp
stos
jo
push
xchg
xchg
fwait
adc
loop
sarl
jno
inc
mov
stc
sub
jge
test
dec
mov
xlat
xchg
icebp
inc
sub
outsl
jno
or
sbb
es
adc
test
adc
dec
movsb
sub
popa
ficomps
clc
icebp
lret
adc
loope
xlat
or
ss
aas
push
aam
inc
fisttps
mov
fbstp
cmp
test
push
lcall
or
je
inc
test
lea
jns
lahf
in
or
cmp
mov
fwait
push
fwait
int3
sar
and
jmp
xor
xchg
testb
xor
mov
pop
ret
loope
dec
and
jp
lock
outsb
and
xor
dec
jno
jmp
rclb
ret
ret
inc
in
jne
adc
adc
or
in
push
idivl
lret
mov
fldl
and
arpl
pop
mov
pop
inc
inc
test
fstpt
cmpsl
or
push
add
lret
jnp
in
ljmp
add
cmp
and
jmp
lcall
xchg
push
nop
inc
or
adc
incl
mov
add
mov
jge
fsts
idivb
mov
andl
fwait
or
jecxz
int3
ret
addl
mov
adc
pop
shll
dec
and
je
sbb
sub
cmpsb
jl
push
ds
inc
or
inc
fsts
adc
icebp
mov
lock
icebp
sbb
push
mov
test
or
lds
mov
test
xchg
popa
mov
sbb
xor
dec
pop
shrb
fisubrl
fidivrs
adc
in
jl
idiv
enter
add
mov
sub
dec
insb
test
in
cmp
mov
and
jp
jne
push
stos
sub
call
in
xchg
xchg
jnp
scas
aad
and
loop
mov
mov
loop
negl
insb
sbb
add
dec
loop
push
add
fsubr
xchg
dec
std
jo
cmp
jge
sub
daa
adc
ret
adc
cmc
divl
jb
mov
pop
fdivl
adc
iret
xchg
fisubs
jne
inc
std
push
push
xor
push
push
pop
ja
cmp
mov
shll
cmp
pushf
cmpsb
arpl
mov
add
clc
icebp
shll
mov
mov
push
and
push
xor
ljmp
mov
inc
dec
cli
test
push
sub
pop
cmp
adc
pop
js
push
mov
call
js
loop
pop
mov
scas
fsubl
jns
imul
movsb
jmp
sbb
and
std
lcall
push
or
out
adc
mov
out
jmp
mov
movsb
out
sbb
mov
mov
mov
fcompl
push
out
inc
dec
pop
nop
movsl
scas
or
adcl
xchg
mov
insb
jns
stos
testb
imul
add
das
adc
pop
push
hlt
adc
movsb
rorl
in
enter
pop
in
aam
push
or
fidivl
call
leave
pop
add
mov
xchg
popf
js
xor
popa
mov
inc
rcr
aaa
xchg
mov
jno
cmc
je
mov
cmp
mov
jmp
lcall
cmp
outsb
rdtsc
cwtl
or
sti
mov
aaa
mov
in
das
jp
xchg
out
sbb
dec
inc
fiaddl
add
aam
lfs
mov
loopne
sbb
cmp
bound
shlb
push
xchg
cmp
ja,pt
cwtl
hlt
ret
or
xchg
or
jp
and
or
lcall
imul
push
mov
imul
aam
das
lea
test
mulb
sub
negb
les
mov
in
adc
xor
leave
cs
fistpl
sahf
cmp
cmp
popa
push
enter
add
sub
xor
pop
in
fadd
or
pop
jp
jne
cmp
dec
fistps
stc
and
loop
inc
orb
cmp
in
inc
popf
xchg
mov
insb
lods
mov
cmc
mov
outsb
movsb
mov
xor
insl
jns
rcrl
sarb
ds
cmpsb
movsl
pop
inc
daa
mov
movsb
dec
rorb
flds
call
add
je
mov
jmp
ret
fs
cmpsl
out
fwait
adc
test
insb
ret
jge
test
dec
sub
ret
sbb
clc
pusha
cs
gs
arpl
fs
aad
jbe
push
insb
cmp
or
sbb
cmove
lods
lret
xchg
in
std
xchg
pop
in
mov
lret
int3
sti
iret
mov
push
outsb
loope
dec
leave
addl
sahf
push
bound
fwait
mov
les
mov
push
fcomi
push
psrad
daa
rcrb
rcll
jle
jl
xor
inc
mov
sub
xor
outsl
fs
ss
sub
or
pop
jp
add
jge
repz
adc
jb
dec
leave
cmp
or
mov
shlb
sti
sbb
pop
or
lahf
out
mov
xor
fcomps
lcall
mov
add
push
dec
xor
outsb
aam
in
sbbl
push
mull
cmpl
pusha
ljmp
mov
mov
inc
and
test
sti
stc
or
xor
cld
jno
ja
pop
xor
jl
test
or
icebp
lret
or
inc
inc
fwait
xchg
push
insl
ficoms
ja
mov
pop
ds
push
mov
dec
or
js
xchg
push
push
outsb
cmp
ret
loope
jg
adc
imul
jbe
negl
xlat
pop
push
fwait
test
mov
int
push
lret
sbb
and
nop
adc
test
loop
add
pop
xor
rcrl
arpl
adc
jbe
fists
cmpsl
mov
push
cmpsl
sbb
sub
mov
jo
mov
push
inc
cmpsl
push
sub
pop
lret
orb
cmp
adc
cmpsb
cld
sbb
jbe
push
stc
popf
cmp
popa
imul
fisubrs
add
imul
add
popf
rcl
loop
dec
cld
lret
flds
sarb
ljmp
into
outsb
pop
xor
cmc
out
mov
adc
fbld
and
push
dec
dec
repz
sbb
ffree
push
lea
cmp
mov
lock
addr16
jmp
mov
or
stos
xchg
lret
cmpsb
movb
or
lock
or
xor
sub
mov
pop
inc
jg
dec
adc
mov
inc
mov
dec
ja
dec
scas
mov
add
mov
popf
cld
loopne
int3
mov
sbb
sbb
and
shlb
cld
push
enter
mov
mov
sbb
pusha
cmc
bound
push
xchg
mov
ret
jne
adc
push
push
push
and
xchg
int3
xor
xor
dec
aam
popa
dec
add
mov
mov
xchg
sub
leave
sub
mov
dec
mov
push
mov
test
dec
dec
repnz
test
mov
xchg
dec
and
aad
inc
xchg
xlat
popa
mov
fdivrl
add
mov
nop
push
dec
xchg
mov
mov
cmp
push
sbb
mov
adc
mov
fimull
mov
mov
mov
add
ljmp
jge
sahf
js
jns
mov
int3
inc
xchg
push
sbb
jnp
into
dec
std
fmuls
cmpsb
push
dec
mov
lock
rolb
ret
push
das
inc
outsl
adc
movsb
or
jne
cmp
addb
adc
adc
push
jbe
sbb
adc
jns
inc
outsl
pushf
inc
cmpsb
loopne
js
iret
nop
std
and
xchg
inc
ss
push
sub
ja
add
es
loope
mov
inc
hlt
mov
cli
repnz
pop
push
mov
mov
jne
inc
jecxz
movsl
xchg
cwtl
into
cmp
lods
mov
jbe
jnp
addb
sbb
movsb
sub
shll
out
mov
inc
mov
pop
jge
mov
repnz
mov
int
out
mov
in
fistl
lock
push
pop
cmp
cmp
call
mov
popw
fdivp
xlat
in
adcb
cmp
pop
xor
mov
mov
je
out
int
pop
repz
js
jne
mov
inc
aaa
dec
int
mov
inc
mov
les
and
push
fistps
fcomi
movsl
das
add
cmp
pop
pop
lock
and
aad
pop
test
push
adc
popf
lcall
xor
pop
and
mov
mov
jl
js
leave
inc
add
xor
inc
xor
inc
test
pushf
lcall
cmp
imull
sbb
outsl
jmp
dec
scas
movb
data16
je
add
and
inc
cmovns
fldl
scas
testl
adc
popa
inc
lcall
and
push
aaa
sub
test
push
aaa
lret
jg
xor
ds
push
loopne
int
jle
sahf
popf
cmp
xchg
lahf
mov
lods
push
or
push
test
cmp
stc
mov
les
ss
inc
jp
icebp
inc
add
push
adc
xchg
loopne
mov
push
mov
test
jmp
push
imul
push
push
adc
nop
push
adc
pop
ljmp
pop
cmp
adc
es
nop
push
or
push
movsb
mov
sub
mov
pushf
mull
jae
add
shr
jecxz
sbb
push
mov
adc
hlt
in
dec
jbe
cld
pop
xor
sub
mov
push
inc
xchg
movsb
sti
shrl
loop
jge
or
xchg
push
mov
adc
repz
shrb
jnp
fwait
xchg
xor
or
test
dec
xorb
insb
stos
insb
xchg
imul
mov
inc
jge
sub
sar
jle
sub
xchg
inc
sti
mov
nop
pop
xchg
clc
jecxz
js
ret
cwtl
scas
ds
dec
mov
push
and
and
xor
sbb
inc
outsb
popw
mov
jge
enter
imul
add
loop
cmpsl
dec
lret
jge
sbb
push
sub
xor
test
push
pop
or
imul
add
pop
int
mov
adc
sbb
lcall
aam
imul
xor
sub
or
and
sbb
shrb
pop
mov
fsincos
mov
ficompl
add
push
leave
jge
popf
xor
mov
push
pop
push
movsb
mov
fs
clc
stc
aaa
add
test
sbb
push
sbb
daa
hlt
mov
clc
sbb
out
push
cli
cmp
or
push
mov
dec
mov
push
insl
rcll
shrb
ljmp
mov
lock
mov
mov
ja
outsb
or
fldt
scas
data16
popf
cmpsb
push
mov
jle
in
fisttps
xor
adc
cmp
cmp
outsb
scas
insb
dec
adcl
pop
gs
mov
and
xor
cmc
jle
pop
and
jns
mov
out
lods
fdivrs
lahf
repz
inc
nop
lock
stos
arpl
add
pop
sub
repnz
xorb
jle
ss
out
js
mov
nop
lcall
add
sub
loop
imul
push
and
rorl
shl
ret
sbb
subb
stos
inc
decb
mov
outsl
jecxz
adc
cmc
addb
daa
or
push
push
dec
in
imul
test
into
std
das
push
enter
hlt
aas
rclb
sub
pop
lcall
gs
fwait
loope,pt
cld
or
inc
xchg
or
test
jp
mov
pop
clc
popf
pop
aaa
cmp
mov
adc
pop
inc
mov
xchg
subl
pop
lcall
add
repz
fildl
mov
or
lcall
lahf
inc
xchg
sub
push
cs
xchg
cmp
jmp
int
out
and
arpl
stos
or
xor
jne
xor
xchg
pushl
sub
pop
das
mov
call
out
xchg
adc
test
sbb
into
sub
mov
pushf
setns
mov
or
xchg
jge
mov
setl
cs
cmp
andb
mov
xor
jecxz
mov
ret
xchg
jne
jg
cltd
pop
and
mov
push
and
repz
ss
lds
sub
jns
add
out
fwait
sti
test
inc
fiadds
fcoml
push
addr16
adc
pop
sub
mov
inc
test
jae
or
cmp
cld
pop
ret
or
inc
sbb
mov
insb
xchg
pusha
dec
jl
test
push
outsl
xchg
cltd
dec
int3
add
inc
mov
jbe
mov
or
cmp
fisttpll
stos
jmp
repnz
std
popa
mov
push
push
pop
ret
aas
outsb
addl
in
out
push
pop
pop
or
mov
pop
cmp
pop
lahf
dec
in
dec
inc
push
or
mov
bound
pop
int3
pop
cwtl
xor
mov
cs
inc
imul
fstps
cmpsl
sbb
hlt
dec
shr
sub
mov
or
push
mov
adc
lods
call
insl
shlb
push
jmp
jg
pushf
xor
xor
test
mov
movsb
mov
pop
ss
mov
divl
adc
jecxz
loop
gs
ret
inc
lock
loope
mov
cmp
call
adc
ficompl
ret
insb
lret
shl
push
jns
aas
adc
test
repz
push
jb
pop
test
inc
in
insl
es
out
dec
push
les
pop
jnp
ljmp
push
sbb
lock
xchg
or
in
mov
dec
push
mov
jnp
pop
mov
pop
iret
sbb
mov
clc
xchg
sub
cmp
cmp
push
xlat
insl
mov
xchg
push
lods
int3
xchg
cwtl
adc
test
popl
stc
fwait
repz
jns
repnz
arpl
pop
nop
loopne
cmp
ret
imulb
hlt
out
adc
mov
push
inc
mov
add
mov
xor
mov
fnsave
stos
jnp
cmp
mov
and
pop
shl
pushf
xchg
jns
sub
and
leave
push
scas
jg
imul
xchg
stos
mov
mov
aas
cmc
or
stc
push
xchg
lcall
arpl
pop
and
xor
sub
enter
lret
sub
mov
not
scas
mov
lock
cli
cmp
imul
lret
popa
push
jns
sub
sub
pushf
ljmp
xchg
add
int
mov
mov
adc
pop
and
dec
lods
push
adc
jbe
cs
jg
outsb
cs
cld
jl
and
pop
std
into
bound
and
lret
mov
in
mov
xorl
xchg
fadd
cld
fstps
daa
pop
push
xchg
faddl
push
and
push
mov
lret
cmpb
push
iret
je
daa
jnp
mov
mov
add
pop
sbb
cli
mov
ds
inc
sub
js
test
sbb
xor
mov
mov
inc
sub
lret
dec
mov
rorl
mov
xchg
xchg
sarl
xlat
dec
decl
jae
insl
lret
sub
and
pop
inc
out
lods
scas
arpl
lahf
push
add
pop
push
insb
and
pop
xor
mov
sti
push
das
push
mov
mov
orb
cmp
out
in
xchg
rolb
sarl
push
enter
les
inc
pop
imul
dec
mov
aaa
fcmovnb
je
dec
faddp
sub
push
push
jns
pop
notl
mov
test
incb
in
insb
pop
cmpsb
js
pop
rclb
jno
je
aam
mov
dec
or
mov
cmp
push
cmp
cmpsb
pop
movsb
pop
stos
xchg
mov
mov
stc
cmp
push
das
lods
aas
jp
pop
js
cmp
insl
jns
data16
mov
hlt
sti
test
sub
dec
ja
in
cs
sub
pop
clc
sbbb
mov
punpckhbw
shll
aaa
incl
por
test
loopne
dec
lods
mov
stc
dec
pushfw
mov
adc
xor
pushf
scas
and
test
xchg
cmp
aaa
test
lods
sub
jne
and
outsb
sbb
cmp
pusha
pop
push
loop
icebp
sbbb
xlat
and
lahf
add
mov
aam
jmp
jecxz
dec
and
rclb
add
inc
and
mov
sbb
lret
xlat
add
ds
mov
imulb
jmp
add
cmpsl
mov
xchg
pusha
and
and
pand
push
inc
push
dec
or
cmp
jne
or
add
cmp
adc
mov
xorb
push
aam
es
adc
imul
pusha
adc
jmp
out
mov
inc
or
inc
adcl
xchg
les
imul
dec
jb
testl
or
add
mov
dec
xchg
out
add
push
and
push
je
cwtl
in
xor
leave
dec
xchg
sti
mov
jnp
jne
or
fidivrs
lods
dec
out
xchg
mov
push
leave
cmovno
jg
pop
divb
or
shlb
ret
xchg
xor
andl
cmp
xchg
jne
mov
outsb
pop
or
cli
push
je
sub
push
fmul
fildl
cmp
xchg
cmc
or
jg
add
sbb
mov
add
test
mov
int
fisubrs
loopne
ja
jns
lods
iret
lcall
cwtl
int
pop
cwtl
xor
test
mov
pop
loope
xchg
jno
cmpsb
out
sbb
outsb
leave
mulb
hlt
push
mov
add
daa
mov
sbb
insb
cmpsl
dec
stc
cmpsb
iret
ds
mov
jmp
xor
nop
sub
ror
imul
dec
pop
addr16
les
pop
sub
jbe
scas
inc
clc
sbb
stc
cmp
aaa
insl
sar
bound
aam
pop
pop
jns
lods
jecxz
pop
data16
adc
enter
out
jl
add
jle
fsubl
xchg
xchg
mov
gs
int3
jns
lods
sbb
push
loop
roll
inc
inc
xchg
ds
xchg
cmc
adc
jmp
pop
fcmovnbe
sbbl
movsb
inc
cmpsb
jmp
es
lahf
add
out
out
cmp
icebp
cwtl
add
xchg
pop
and
imul
and
jg
jnp
add
in
add
mov
dec
sub
push
out
lods
ja
and
mov
inc
jmp
mov
pop
lahf
shrb
add
arpl
xor
cmp
jne
stc
daa
mov
loop
outsb
repz
adc
lea
pop
loop
and
lahf
cmp
push
jg
sbb
std
mov
xchg
cmpl
mov
xchg
loope
fs
or
adc
jle
mov
pop
push
pop
mov
xor
push
push
jmp
inc
sub
ss
sarb
jp
insb
adc
push
mov
cltd
daa
lea
push
stos
je
in
int
fidivrl
adc
pop
dec
cld
test
jae
dec
or
das
stc
pop
jnp
pavgb
notb
sbb
push
and
nop
mov
loopne
jge
mov
nop
cmc
pop
stos
adc
dec
repz
sbb
xchg
lret
outsl
rolb
push
xor
xor
clc
or
rorb
insb
cmp
js
jge
lods
adc
int3
adc
jmp
aaa
inc
push
push
mull
pop
sahf
icebp
sbb
push
popf
mov
push
inc
push
call
add
mov
fwait
movsb
imul
cmpl
adc
xchg
fildll
xchg
lds
gs
sub
movsl
lret
mov
scas
mov
sub
das
mov
mov
pop
mov
xor
xor
xchg
xchg
js
enter
dec
jno
dec
lds
xchg
pushf
mov
sub
jg
jns
out
enter
fadd
xorl
lea
ja
movsb
les
pop
mov
hlt
cld
cmpsb
push
push
movb
jae
dec
jo
mov
ljmp
adc
fidivl
imul
rcrl
dec
rcl
stos
add
sbb
sbb
pop
cmp
rol
frstor
lahf
and
negb
push
or
ret
inc
mov
dec
sti
cmc
or
lea
jne
xor
in
aad
push
mov
jns
push
adc
sub
loop
jge
xchg
push
pop
sbb
inc
cmp
xlat
push
or
xchg
rcrb
or
test
push
int
inc
fsubrp
and
shrb
shlb
lret
out
addr16
mov
es
pop
int
jg
xchg
aad
inc
dec
leave
pop
inc
ret
sbb
in
adc
inc
mov
movsb
push
push
sbbb
or
cmp
jmp
outsl
loopne
loopne
into
sbb
and
testl
inc
add
adc
add
das
inc
add
jge
add
lods
inc
add
add
sbb
add
xchg
stos
clc
negb
mov
push
xchg
popa
out
sbb
mov
adc
je
pop
jl
push
cltd
push
mov
jecxz
pop
adc
into
mov
std
inc
arpl
adc
notl
enter
pop
sbb
xor
dec
add
and
out
fdivrp
test
xor
pushf
dec
sarb
jbe
mov
pop
xorb
notb
mov
inc
cmp
or
and
rcrb
inc
movsb
shll
fmull
sub
or
andl
cmp
in
loope
adc
add
cmc
adc
and
add
mov
xchg
adc
cs
out
aas
mov
pusha
lock
mov
jmp
cmc
movsb
aam
cmp
mov
jbe
xchg
ljmp
cli
in
test
aad
inc
cli
or
into
mov
in
stos
inc
mov
or
xorb
pushf
mov
cmp
sahf
xchg
or
repz
fsubs
into
cmc
jns
mov
ret
arpl
pusha
sbb
mov
sarb
popa
or
in
inc
imul
movsb
xchg
in
cld
xchg
das
pop
outsl
jbe
cli
adc
popa
pop
ljmp
xor
xor
enter
ret
cmpsl
pop
scas
dec
jl
jmp
sbb
mov
out
sub
lret
pop
mov
xlat
inc
std
in
push
inc
inc
add
mov
adc
mov
loope
or
cmp
jp
sbb
sarb
mulb
add
inc
mov
push
mov
cs
cs
out
push
jmp
xlat
pop
xchg
subl
add
xchg
jbe
dec
add
dec
aam
adc
sub
in
pushf
pop
inc
push
sbb
cltd
dec
ficoml
int
push
jp
mov
fisttps
mov
xchg
push
cmp
adc
sub
sarb
dec
call
mov
mov
cltd
test
pop
sub
mov
lret
xor
cltd
inc
push
sub
test
xchg
push
mov
dec
mov
ret
fs
jns
push
mov
in
push
test
jl
xchg
push
call
mov
mov
cwtl
cmc
in
pusha
inc
lret
es
adc
daa
arpl
jle
ret
pop
jae
push
stc
outsl
fildl
xor
sbb
push
outsb
pop
cmp
and
mov
lahf
rcr
mov
mov
pop
pushf
rclb
jno
cmp
scas
pop
xor
xlat
cmpsl
sub
xor
sbb
mov
popf
jo
add
sbbl
notb
sub
dec
dec
lcall
add
aam
lods
lock
insb
cli
xor
cld
mov
addr16
adcl
cmp
dec
or
je
or
cmp
insb
cmp
push
ds
push
push
into
js
dec
outsb
mov
mov
decb
and
addr16
aad
rol
mov
push
js
xchg
shrl
aam
aaa
ficomps
ja
jae
push
fwait
out
xchg
inc
shr
pop
nop
shr
outsl
outsl
out
or
std
jns
in
add
outsb
cmp
sbb
mov
dec
mov
mov
int3
addb
fcoms
inc
test
push
ja
mov
popf
leave
mov
sub
dec
sub
cmpsl
and
lods
mov
jb
cmc
lcall
sbb
mov
dec
push
jne
xor
mov
dec
cmc
sbb
popl
cmp
test
cmp
mov
mov
or
repz
scas
repz
lret
frstor
stc
ljmp
xchg
hlt
and
in
ss
out
xor
mov
add
push
pop
pushf
in
ds
sbb
lahf
inc
and
cmp
and
fcomps
fnstsw
rcl
mov
or
lods
cld
inc
loopne
imul
mov
and
mov
sti
das
or
popa
punpcklwd
sub
std
outsb
loop
loop
and
je
push
popf
push
cmp
pop
push
rcll
icebp
aaa
fnstcw
pop
add
xor
and
jle
dec
push
jp
data16
dec
or
es
stc
mov
push
inc
inc
ss
test
adc
test
mov
or
push
sti
jle
notl
inc
jp
dec
pushf
cmp
pop
outsb
inc
sub
in
xchg
bound
xor
stos
xchg
or
lret
popa
pop
shlb
xlat
xor
fistps
mov
leave
ss
adc
push
fidivs
sub
dec
xchg
pushf
push
xchg
sub
test
mov
ret
xchg
sub
adc
test
bound
dec
movsb
fnstenv
lds
xor
mov
or
push
xlat
jecxz
add
mov
aaa
mov
jno
aam
sbb
push
cmp
mov
cmp
faddl
pop
ret
inc
in
and
mov
out
adc
mov
mov
adc
push
aaa
mov
push
dec
sbb
pop
fcoml
inc
sub
pop
insl
data16
xchg
test
cmp
stos
push
mov
in
sarb
lcall
xchg
jae
scas
outsl
adc
clc
sahf
pushf
xor
pop
clc
movsl
jae
mov
movsb
loop
or
sar
loop
add
push
push
addr16
cs
aad
pop
cmp
add
cli
lahf
outsl
mov
ja
cltd
pop
pop
pop
fcmovnbe
pop
mov
rcll
movsl
aas
adc
inc
push
xor
fwait
jmp
jns
enter
cmp
fcomps
int
push
arpl
jl
fimuls
push
cmp
xchg
cmc
push
imul
insl
in
xor
jb
xchg
adc
out
xchg
adc
into
jl
inc
mov
adc
int3
dec
jbe
fildll
mov
int3
repz
loopne
sub
pop
push
aad
push
imul
mov
cs
and
mov
jae
aad
sbb
cld
dec
or
hlt
enter
subl
pop
mov
mov
jne
divl
pop
mov
cmp
pop
aaa
or
jae
inc
jp
out
ljmp
jg
shlb
iret
and
xor
gs
arpl
imul
nop
mov
call
int
movsb
lds
xchg
xchg
scas
leave
sbb
and
cmp
xor
dec
push
lahf
mov
repnz
pop
or
hlt
ror
or
incl
stos
loopne
fdivrl
jbe
mov
mov
cmc
or
mov
bound
cli
fs
fwait
rol
xlat
mov
pop
inc
sarl
inc
xchg
mov
das
ja
sbb
cmpsl
pop
sti
sub
pop
and
cmpsb
popa
scas
sub
lods
ljmp
and
mov
push
in
xor
dec
cmc
dec
jno
pop
out
enter
hlt
outsb
pop
sub
xor
mov
insl
mov
dec
xor
fidivs
dec
cmp
rcll
xchg
xor
mov
sbbb
xor
aas
sbb
insb
xlat
push
add
sub
aas
adc
mov
and
jo
scas
mov
aas
fisubs
sbb
jne
sbb
sarb
sarb
sbbb
scas
add
fstps
xchg
shrl
pop
and
lock
test
int
fcmovne
xchg
jmp
mov
loope
pop
jo
das
lret
push
dec
ret
nop
jge
fcomps
adc
add
ds
loop
lret
iret
and
dec
xchg
xchg
shlb
mov
adc
lret
gs
xchg
adcb
add
ret
lds
mov
aam
iret
adc
inc
jecxz
xchg
mov
test
xchg
bound
mov
scas
add
sti
sub
movsb
xor
idivl
shlb
mull
mov
rcrb
insb
mov
arpl
stos
xor
or
inc
mov
js
or
push
popf
cld
pop
daa
and
cmp
mov
into
arpl
jne
aas
ud0
sbbb
and
mov
gs
rorl
jmp
or
pusha
dec
das
es
in
push
inc
jmp
jge
xor
andb
sbb
push
and
bound
xchg
xchg
dec
loop
mov
pop
mov
mov
ds
pushf
int
jb
sti
xchg
fs
xlat
test
ret
int
in
fsubl
adcb
xchg
push
mov
setns
xchg
push
lea
mov
mov
rdmsr
adc
or
js
dec
pop
push
or
xor
ret
rcr
mov
sahf
mov
xor
dec
fstl
lret
xchg
dec
sarb
push
std
xchg
sub
out
mov
or
lcall
cltd
mov
roll
sub
mov
pop
addr16
mov
dec
xchg
adc
loop
jnp
xor
or
in
push
pushf
in
dec
shl
adc
sub
mov
mov
push
into
in
leave
dec
sub
mov
pop
adc
stos
adcl
paddusb
pop
pop
cltd
jmp
lock
jl
imul
pushf
ss
iret
ds
add
mov
mov
push
nop
popf
xchg
lods
pop
dec
jbe
mov
jmp
ficomps
out
inc
call
sub
sahf
push
test
pop
push
lods
mov
mov
out
pushf
lahf
add
mov
pop
push
or
movsl
loopne
adc
mov
sbb
sbb
scas
mov
popa
dec
pusha
in
push
cmp
mov
cmp
adc
sub
and
cwtl
inc
xor
fisttpll
pop
out
out
in
mov
fisubrs
insl
lret
loope
sub
repz
dec
jge
push
mov
rcll
pop
inc
mov
lret
imul
aaa
mov
popf
jl
add
cmc
lret
popa
lret
paddq
out
pushf
sub
mov
jns
ds
fwait
imul
in
jmp
dec
dec
ret
test
dec
mov
sub
test
mov
std
cmp
mov
rorb
in
inc
sub
mov
nop
repz
clc
ret
and
loope
pop
sub
es
inc
arpl
and
mov
shlb
stos
adcl
lds
sub
stos
or
lret
in
pushf
and
cmpl
mov
mov
lcall
push
inc
imul
in
and
aaa
sbb
lods
aas
out
fstps
movsl
int3
loope
insb
jmp
lods
mov
add
out
imul
xor
pushf
loope
jmp
adc
mov
cs
lret
inc
jmp
or
and
sub
cmpsl
rol
dec
xchg
scas
jp
add
jae
aas
mov
pushf
mov
add
mov
sti
imul
mov
add
out
push
mov
fiadds
cmpsb
addr16
faddl
mov
lods
stos
push
xchg
cmp
sub
adc
mov
fwait
in
or
mov
fsubl
push
in
daa
mov
cwtl
fstpl
xor
pop
cs
push
aaa
sbb
ja
testl
out
jns
dec
fbld
ficompl
lods
repnz
test
dec
dec
cmp
and
add
leave
negb
insb
je
jmp
aam
pop
lahf
aas
add
outsl
xchg
subl
hlt
add
in
push
fcoms
jbe
loop
rcrl
pop
loope
scas
mov
or
test
out
imul
push
or
jle
sbb
mov
push
add
sub
dec
mov
in
cld
jne
outsl
aas
push
mulb
cld
mov
movsb
jle
sub
ja
push
fwait
inc
mov
mov
gs
dec
in
jnp
scas
mov
sub
push
and
or
cmpsb
das
sarb
or
xor
push
cmc
sub
mov
cmp
data16
rorb
xchg
punpckhdq
pop
jne
mov
xchg
hlt
in
faddp
cs
cs
popa
movsl
lret
jno
lods
dec
add
arpl
icebp
mov
sbb
sbb
lea
or
test
jns
mov
add
addr16
push
xchg
jnp
loopne
push
out
adc
stos
aad
popa
and
gs
cmpsb
mov
shrl
cltd
mov
test
in
push
pop
fs
cmp
mov
mov
in
insl
movsl
sbb
fnsave
outsl
lret
push
cmc
push
or
push
aas
lock
pop
jbe
lock
std
cmpsl
sub
jmp
stos
int
int
xchg
pop
cmpsl
push
pushf
lcall
or
test
ret
imul
and
arpl
in
mov
or
adc
xor
mov
int
test
add
lods
jl
sbb
xchg
out
inc
bound
stos
stos
add
xor
movsl
mov
inc
aad
cmp
inc
adc
or
fucom
xchg
jg
enter
jl
pop
and
sub
sbb
js
cmpsb
out
hlt
roll
fcmovnb
pop
push
popf
loop
mov
push
and
xor
or
and
sbbb
jno
or
je
fs
or
dec
repnz
rcll
insb
push
or
add
es
out
xor
adc
jb
ret
add
cmpsl
push
mov
leave
adc
cltd
xor
or
rcr
les
hlt
insl
dec
dec
and
mul
fs
and
shll
insl
mov
jb
inc
jns
sub
jmp
ret
inc
xchg
mov
stos
xor
nop
cmpsl
mov
das
sub
sub
dec
bound
jg
or
pop
xor
int
mov
hlt
out
push
fsubs
push
pop
out
repz
mov
imul
lahf
sub
sub
cmc
xchg
test
mov
pop
repnz
mov
sub
shlb
xchg
jg
ret
js
sahf
cmp
repnz
pop
and
call
mov
cmp
cs
lods
aaa
jmp
jge
test
pop
pop
mov
int3
jg
sbb
inc
mov
insb
push
xor
pop
adc
mov
gs
sbb
inc
sarb
xor
jo
stos
test
fadds
inc
pop
repz
icebp
aas
out
mov
jo
sub
pop
dec
cmp
aam
add
pop
xchg
imul
addr16
mov
sahf
xor
sar
inc
out
aam
push
inc
cmp
adc
test
add
andl
add
jecxz
mov
ret
add
leave
je
fnsave
mov
cmp
test
inc
ljmp
aad
sub
out
sarb
jmp
mov
xchg
inc
mov
push
loope
adc
and
adc
lcall
in
push
jecxz
addr16
cs
stc
dec
cmp
loopne
pop
mov
orb
dec
in
out
add
xchg
cs
add
inc
pop
mov
cmc
xchg
push
jbe
js
sub
or
adc
xchg
mov
call
cli
xor
movsl
les
mov
mov
ljmp
jns
add
pop
int3
popa
pop
fistpl
loop
cmp
mov
shll
xchg
out
call
push
pop
test
les
xchg
popf
imul
mov
pop
mov
pop
or
sub
sbb
sub
popf
mov
sub
and
sub
push
jns
cmc
ret
jp
inc
push
fldt
mov
sub
lods
adc
inc
lea
pop
push
insl
sbb
fisubl
fs
mov
cmp
adc
ss
lea
mov
sbb
fmull
test
popa
mov
dec
test
sbb
mov
sub
pushf
jns
lods
icebp
push
data16
jns
sti
adc
push
xchg
rclb
push
add
repnz
xor
inc
inc
jne
stos
xor
aas
cmpsb
push
cltd
sub
rcrb
or
add
inc
sbb
cwtl
test
fmulp
cmp
xchg
jmp
and
pop
xchg
adc
cwtl
add
jg
aam
pop
xor
insl
fistl
rcll
cmp
mov
mov
dec
rcll
or
mov
decl
hlt
fisubrs
aaa
mov
pushf
jg
repnz
push
xchg
push
and
sbb
sbb
sub
xchg
xchg
inc
jecxz
mov
js
mov
pusha
lret
mov
xchg
push
and
xor
lcall
mov
lock
es
pop
pop
outsb
lock
lahf
cwtl
popf
sub
lock
js
sbbb
push
sti
cmp
cmpsl
pop
mov
cmp
roll
popf
popf
lcall
arpl
fcmovb
repz
cmp
mov
popf
inc
into
lock
shrl
jl
sbb
mov
mov
mov
lods
xor
ret
mov
inc
lds
mov
and
pop
inc
jne
shl
jmp
test
adc
addr16
add
int
or
dec
dec
mov
out
int
cmc
shlb
int
lods
adc
insl
int3
stc
pushf
jns
xor
pop
push
outsb
int
stc
fwait
pop
pusha
or
lret
cmp
lock
gs
push
lcall
leave
arpl
xchg
cmpb
fiaddl
push
mov
les
mov
nop
addl
ds
fists
mov
loopne
jmp
les
inc
idiv
sarb
push
mov
ljmp
test
add
lahf
jle
in
imul
mov
push
lahf
inc
dec
iret
push
enter
data16
and
mov
jb
lgs
jne
and
push
jg,pn
pop
imul
ljmp
jp
and
add
test
adc
outsl
mov
push
jle
dec
addr16
sub
mov
pop
pushw
arpl
adcl
cli
psubsw
int3
xor
or
psubq
push
ljmp
mov
mov
fldcw
sub
outsb
xchg
adc
cwtl
push
mov
jle
mov
inc
mov
bound
lahf
or
icebp
push
or
add
stc
push
jne
je
mov
ret
iret
or
sbb
int3
test
out
scas
and
out
push
xchg
jge
test
dec
inc
cmp
dec
mov
divb
add
jns
and
shlb
or
pop
dec
adc
aad
xchg
ret
stos
xchg
aad
mov
pop
pop
fldl
pop
bound
sbb
adc
test
ret
jne
jae
mov
sbb
imul
xchg
or
add
jecxz
pusha
dec
rclb
cmp
and
shl
mov
sub
jp
sub
cli
add
pushf
shl
mov
in
aam
inc
sbb
add
push
stos
fdivs
and
jge
fstpt
xor
mov
and
and
sarl
sahf
or
sub
fistpll
jb
pop
adc
push
jle
lods
mov
dec
ret
or
imul
in
test
lcall
ds
mov
out
jbe
xchg
lcall
inc
int
push
xor
iret
jp
fidivrs
addl
addl
aam
mov
jae
fiaddl
shl
subl
mov
pop
stos
imul
dec
test
sbb
xor
fisttps
mov
mov
push
lcall
jne
shrl
mov
or
fadds
outsl
nop
fisubl
or
nop
loope
ljmp
fistps
jp
sti
pop
dec
pusha
xchg
dec
pop
cs
nop
fldenv
int3
inc
lods
call
idiv
and
mov
jbe
icebp
sub
scas
xor
sub
push
xor
addr16
cli
jne
dec
cmp
lock
jne
push
cwtl
sub
push
jne
lods
popf
jg
push
mov
cli
lahf
xor
push
xlat
adc
xorb
icebp
mov
or
faddl
popf
ja,pt
hlt
fst
ret
cmp
xlat
std
sbb
push
add
shl
xor
push
cmp
mov
fisubs
cmpxchg
inc
dec
xchg
sti
push
inc
rol
lahf
inc
icebp
test
pop
jge
rcrb
scas
sbb
out
insb
push
mov
scas
and
into
lock
jno
sub
or
xchg
mull
jbe,pt
aad
xlat
xor
repnz
jle
mov
rcrb
mov
xchg
cmp
addr16
out
xchg
pop
mov
push
loop
mov
aaa
popf
pop
mov
loope
or
push
pusha
lds
dec
fdivrs
loopne
and
mov
enter
xchg
xor
out
ljmp
push
dec
les
sarl
inc
xor
adc
cwtl
pusha
in
and
je
xlat
cmp
daa
sbb
push
dec
in
add
jge
sti
fstl
sahf
mov
andl
xchg
xchg
sbb
fcompl
jo
pop
sbb
js
iret
sti
mov
in
pushf
icebp
dec
inc
jecxz
ljmp
orl
pop
sub
cmpsl
pop
cmpsb
mov
fnstcw
push
adc
jle
push
xor
addr16
add
sti
out
scas
hlt
pop
test
sub
and
dec
arpl
xor
sbb
adc
adc
aad
xor
and
jnp
and
leave
lret
js
xor
stos
test
cmp
sbb
cmp
xchg
rcrl
jl
add
pop
adc
out
push
ja
lods
inc
inc
imul
clc
jb
sbb
push
jbe
into
mov
in
dec
insb
cld
inc
nop
imull
xchg
jno
pop
frstor
jmp
imul
jne
and
inc
sub
mov
in
jge
push
push
aad
mov
push
mov
xchg
pop
fdiv
orb
rcl
neg
loopne
dec
cmp
into
pop
pop
aas
in
add
loop
fimull
xorl
mov
inc
fs
aaa
cmp
pop
loopne
lods
and
jno
inc
popf
mov
cmp
xchg
dec
push
jecxz
xor
xchg
cmp
arpl
and
rorl
cwtl
stos
aas
arpl
jmp
out
incb
stos
outsl
mov
fidivrl
std
adc
push
mov
loope
ja
repnz
inc
loop
shlb
lea
or
ret
xchg
mov
cmp
cmp
adc
or
in
and
es
push
jo
xchg
lcall
fcompl
out
dec
jb
stos
lods
cltd
arpl
inc
or
int3
stos
mov
mov
ret
popf
push
pop
shl
sbb
mov
push
sub
mov
cld
push
pop
cmp
testb
pusha
xchg
add
loope
popa
movsb
mov
out
and
inc
push
mov
test
in
std
mov
test
sbb
or
shlb
dec
adc
dec
mov
movsl
push
pop
push
pop
mov
dec
lock
mov
or
fstpt
cli
ret
arpl
mov
mov
les
or
jnp
mov
xor
scas
inc
push
stc
loop
enter
and
mov
lahf
jecxz
scas
xchg
lahf
dec
inc
jns
pushl
inc
jae
xlat
lods
adc
cmp
call
cmp
loop
es
aaa
jp
data16
stos
cmp
jg
adc
notb
sub
push
push
inc
dec
sbb
popa
push
xchg
mov
xor
push
aad
aaa
dec
lock
cmp
xchg
cwtl
sbb
mov
sahf
int
repz
into
loop
fcmovb
jl
jle
pop
inc
jmp
add
mov
pop
call
into
pop
call
xor
add
push
mov
cmc
loope
gs
mov
or
or
cmp
dec
xor
or
icebp
jp
ret
xor
mov
adc
xor
cmp
pop
mov
shll
iret
in
nop
dec
out
in
mov
and
test
aam
mov
sub
add
fcmovnbe
inc
cmpsl
add
int
xchg
orl
movb
ficoml
sub
out
negb
xor
cwtl
daa
xor
into
es
mov
mov
xchg
dec
hlt
aam
into
jg
jmp
adc
cmpsl
mov
ljmp
in
scas
lret
mov
sub
jo
push
mov
lods
sbb
xchg
pop
add
mov
adc
ds
mov
outsl
mov
inc
sub
xor
adc
lcall
xchg
sub
mov
outsb
jb
xchg
int3
push
jne
jle
mov
jmp
jno
mov
notb
out
shl
add
or
das
or
lds
test
sarb
add
sub
mov
loop
pop
mov
and
xchg
sub
popa
idivl
and
hlt
outsl
sbb
iret
int
test
cmpsw
idivl
subb
or
and
ss
push
mov
out
in
loope
jecxz
aam
je
int3
xchg
sub
pop
mov
sarb
testl
sub
pop
sbb
pushf
and
das
jl
mov
jb,pn
stc
hlt
push
push
adc
dec
loopne
mov
xchg
mov
and
inc
mov
lds
int3
mov
sub
or
scas
add
mov
aam
adc
fmuls
pop
xchg
dec
xor
jmp
add
pop
mov
lahf
jp
jno
inc
movsb
sub
mov
sahf
loopne
mov
nop
push
push
mov
lcall
icebp
lret
jp
out
and
push
in
xlat
loopne
movsl
mov
jl
ja
push
fs
fwait
jmp
xchg
ficoms
adc
mov
jmp
or
pop
fcmovnb
mov
pop
or
jmp
xchg
pop
popf
push
inc
jbe
mov
mov
mov
dec
push
clc
cs
lds
adc
pop
in
popf
adc
mov
out
pop
cli
dec
xor
jbe
mov
sub
jp
sahf
das
sbb
sbb
inc
xchg
fst
jo
adc
jl
xchg
cmp
adc
xor
cmp
cmp
xor
pop
dec
pop
jecxz
xor
push
and
cmp
adc
push
sbb
dec
sahf
pop
jmp
mov
pop
ss
imul
xor
jmp
fisttps
mov
inc
inc
iret
cwtl
ljmp
rcrl
add
mov
mov
dec
aaa
fs
mov
and
xchg
ret
ds
cmp
arpl
push
pop
pop
jbe
ret
push
push
pop
adc
push
lea
mov
lret
gs
ret
mov
ret
movsb
push
push
pop
dec
ljmp
sahf
cmp
in
inc
sbb
daa
popa
iret
mov
ficomps
cmp
dec
lcall
xor
mov
rcrl
ja
icebp
inc
jb
sarb
pushf
add
or
ljmp
sahf
popf
sbb
jbe
inc
pop
lret
dec
adc
xorl
cmp
pop
ret
rcrl
pop
adc
jnp
aam
cmc
dec
clc
pusha
push
push
cli
dec
pop
insl
cmp
jbe
gs
adc
pop
or
sub
sbb
sub
adc
and
xor
enter
push
sub
xchg
cmp
into
cmc
and
add
dec
fwait
xchg
js
ffree
or
pop
call
call
sarl
icebp
lret
mov
addr16
sbb
addb
xchg
sub
pop
dec
cmpsl
lret
imul
cmpsl
rclb
test
sbb
fnsave
xor
scas
dec
int3
data16
push
insl
dec
or
xlat
xlat
outsb
mov
and
in
clc
ss
sub
dec
test
pop
dec
jns
xlat
push
sbb
loop
in
cmp
arpl
xor
sub
pushf
mov
mov
jbe
sub
lds
std
xor
scas
push
sub
addl
dec
mov
daa
jle
mov
xor
cmpsb
add
scas
cmpsb
or
icebp
adc
int3
dec
or
jno
mov
or
pop
ret
or
divb
and
add
push
bnd
adc
dec
add
ficoml
lcall
dec
enter
sbb
push
mov
aas
cmp
push
adc
fs
mov
adc
push
lock
inc
rclb
jge
cmc
sti
imul
ret
push
jnp
or
jle,pt
adc
out
imul
push
cmpsb
outsb
jno
cmpsl
leave
std
inc
pop
out
jnp
cmp
sti
or
shlb
mov
rolb
pop
mov
arpl
int3
adc
stc
out
pop
sub
std
outsb
xchg
addl
push
insb
xor
ja
add
mov
and
fbstp
aas
mov
jae
jl
dec
mov
sbb
add
add
pop
or
inc
xchg
rorb
pop
jl
shrb
outsb
imul
or
je
iret
inc
lret
mov
ss
stos
or
mov
add
mov
cs
push
sbb
or
lods
aam
int
sub
adc
mov
lods
loop
stc
mov
adc
cmp
std
sbb
lds
fcomp
adc
jmp
ss
ret
mov
dec
mov
add
ja
xchg
rcll
inc
sbb
mov
pop
ds
int3
lock
xchg
in
mov
inc
pcmpeqw
mov
popf
sub
lcall
xor
test
sub
clc
test
mov
or
lret
mov
jne
pop
pop
outsb
dec
lahf
push
jmp
adc
add
sub
xchg
and
fstpt
sbb
movsb
jns
xchg
push
arpl
stc
sub
xor
adc
push
clc
pop
fdivr
jg
mov
pop
and
sub
sti
adc
add
repnz
scas
push
mov
pop
pusha
test
add
aaa
imul
adc
pop
cmp
push
dec
xchg
shl
repz
std
xorb
js
push
ljmp
jne
icebp
mov
sbb
jae
jbe
or
jnp
inc
jmp
pop
faddp
arpl
inc
sti
pop
sbb
xchg
scas
fnstsw
inc
pop
lods
leave
leave
fstpl
add
xchg
dec
sub
mov
mov
push
xchg
add
add
push
push
movsl
movsl
dec
inc
adc
rclb
xor
pop
cs
inc
cmpl
popf
and
leave
inc
jmp
xchg
mov
jmp
xchg
fwait
adc
push
mov
sub
pop
fwait
inc
adc
sti
nop
mov
xchg
mov
lahf
insl
repz
cmp
insl
jns
ljmp
incb
jmp
out
xorl
into
pop
push
in
outsl
xchg
xchg
inc
push
mov
inc
mov
add
xchg
push
push
popf
test
and
int3
mov
ljmp
mov
fadds
iret
mov
or
imulb
mov
cwtd
mov
outsl
out
ret
cmc
and
pushf
pusha
mov
xchg
xor
cs
aas
mov
lret
inc
push
pop
lock
jne
jp
ja
push
push
popf
sbb
ret
pop
lret
jae
jo
lret
shlb
lods
jge
jl
in
int
fmuls
mov
xor
bnd
scas
loope
sub
push
jbe
les
jle
xchg
paddusb
int3
ds
jecxz
mov
cmp
gs
pop
mov
es
xor
in
outsl
fs
or
mov
xorl
sub
inc
mov
xchg
shrl
dec
add
scas
stc
dec
sub
pop
negl
add
cmp
push
out
roll
in
lods
adc
jns
arpl
cwtl
or
xor
jno
fwait
shl
push
icebp
stc
adc
cwtl
xchg
lea
and
mov
sbb
dec
and
mov
test
pop
lret
dec
rcl
or
dec
pop
rcll
movsb
push
dec
dec
popf
inc
jecxz
xchg
mov
cmpsl
fstl
fcomi
push
xchg
cmp
lods
xor
mov
cs
xchg
xchg
xor
add
cmpsl
fcos
adc
leave
fisttps
test
loope
idivb
mov
test
std
adcl
loopne
cmpsb
mulb
outsl
je
test
xchg
arpl
int3
shlb
enter
pop
xchg
jmp
sub
mov
push
pop
dec
push
sti
mov
or
into
das
adc
xchg
jbe
aas
cs
jnp
lds
enter
adc
lret
jae
mov
call
jg
ds
sub
rclb
imul
lods
jo
jg
xlat
and
push
cmp
mov
cltd
imul
push
mov
shll
dec
cmp
xchg
fwait
nop
sub
xchg
xlat
dec
xchg
pop
call
rcll
pop
call
and
addr16
mov
push
rcll
in
fisubrl
out
test
jmp
add
in
jle
ja
outsb
mov
test
mov
pushf
das
add
add
jnp
add
dec
sbb
scas
jne,pt
cmp
mov
imul
mov
cmpsl
sub
pop
adc
push
inc
pop
outsl
jnp
js
leave
mov
pop
dec
push
dec
cmpsl
mov
jle
mov
pop
xchg
cwtl
mov
jle
pop
stos
or
inc
mul
test
sbb
andb
mov
int3
aaa
sbb
dec
lods
sahf
push
mov
loope
ja
xchg
xchg
jae
push
xchg
xor
mov
cmp
out
jbe
cmpsl
aas
test
imul
xchg
int3
ficoms
subl
xor
cmp
movaps
mov
sub
fwait
xchg
inc
sub
pop
sub
jbe
icebp
xchg
clc
push
pop
je
sub
ret
pushf
incl
movsb
jo
mov
dec
add
mov
cwtl
outsb
lret
mov
out
ss
int3
ret
in
sub
jno
adc
jb
push
mov
mov
add
int3
wrmsr
mov
fsubrl
js
push
loope
or
pusha
mov
jae
adc
fidivrl
negl
lret
out
xchg
xchg
pop
or
ds
cltd
and
mov
mov
addr16
mov
es
sbb
add
and
pop
add
pop
and
add
std
dec
push
mov
in
or
outsb
cwtl
test
inc
mov
int3
movsb
or
std
mov
loopne
ss
pop
movsb
sbb
jg
fcomps
hlt
push
mov
lods
inc
jno
shlb
cmpsb
lahf
add
bound
sbb
and
bnd
rorb
mov
outsl
ret
shll
sub
adc
std
ja
xor
aad
mov
jns
in
movsb
sarl
enter
adc
jb
arpl
mov
push
push
mov
repnz
movsl
mov
flds
inc
popa
adc
out
mov
xchg
pushf
mov
pinsrw
ljmp
and
jae
mov
and
sub
rorb
pushf
adc
sahf
int
jle
loop
adc
movsl
dec
inc
sub
sub
xchg
aas
int
and
pop
out
dec
sbb
push
xchg
mov
das
mov
xor
repz
jge
test
push
sti
mov
and
ss
mov
gs
pop
out
shll
stos
insl
push
aad
subl
fwait
jbe
mov
leave
test
icebp
mov
dec
das
and
mov
jbe
sbb
fnsave
or
sahf
cltd
add
rorl
js
fildl
lea
test
mov
repz
repnz
dec
ljmp
fs
and
pop
shlb
sub
mov
push
pop
adc
mov
cmpl
pop
or
sub
andb
fs
mov
pop
nop
jg
push
cmpsb
rorl
and
xor
xchg
stc
add
or
ficoms
inc
out
aam
cmp
mov
inc
sub
aas
add
jecxz
inc
or
mov
fcmovnu
mov
test
shl
push
pop
xor
jl
dec
mov
lret
xchg
icebp
test
shlb
sub
inc
inc
mov
inc
xor
out
mov
inc
mov
push
mov
push
inc
pop
in
xlat
je
sub
xchg
imul
sub
ret
push
out
xchg
inc
rcrl
xchg
or
ja
xchg
push
rcrl
sbb
xchg
dec
jbe
mov
sub
mov
es
sbb
mov
or
pop
mov
sub
dec
jbe
add
cmp
pop
push
ret
jle
cmc
and
sbb
lods
sbb
inc
imul
jo
mov
mov
xchg
cwtl
mov
sbb
es
rorb
xchg
and
outsb
mov
loopne
das
cmp
push
bnd
loopne
sub
call
mov
adc
mov
push
fisubl
outsb
push
xor
pop
into
std
or
dec
xor
push
cmp
nop
aad
stc
scas
fstpt
jo
notb
add
insb
jne
mov
dec
adc
mov
ss
push
ret
add
lahf
call
adc
mov
aad
loopne
inc
neg
fadds
jecxz
ljmp
out
je
or
adc
cmpsb
mov
sub
xchg
add
shrl
out
jge
imul
int3
mov
mov
mov
lcall
inc
in
popf
dec
call
jl
incl
lahf
and
or
insl
xlat
ss
out
jbe
insl
and
add
jg
nop
xor
inc
ds
inc
inc
or
bound
mov
cmpsl
xlat
divl
sbb
enter
push
push
pusha
dec
mov
jmp
clc
and
cmp
aad
es
std
es
scas
lret
lret
ret
sbb
scas
enter
cli
in
sub
adc
cmp
push
sub
das
leave
lret
xchg
or
scas
jge
in
pusha
xor
shll
push
jo
sub
clc
jmp
lds
mov
push
add
sub
cld
mov
sti
and
scas
jge
xlat
and
aam
fstl
inc
lret
rcrl
int3
inc
mov
xchg
inc
aas
jl
mov
xchg
and
in
cmp
test
test
int3
pushf
jne
xor
mov
mov
xor
jle
leave
mov
and
ljmp
aam
sbb
mov
or
jno
add
test
scas
loope
lds
and
dec
mov
sbb
sub
mov
insb
lods
pop
and
jns
sbb
popaw
mov
adc
iret
add
sub
jg
push
outsb
inc
cmp
pop
int
repz
cli
aad
adc
in
xchg
add
lcall
pop
fildl
lret
jge
jne
jle
mov
add
int3
emms
fadds
add
std
lods
mov
mov
sub
add
xchg
filds
scas
ret
ficomps
daa
xor
dec
andl
sbb
jp
sbb
mov
sub
xor
shll
push
lahf
ds
xor
shll
adcl
roll
pop
out
mov
call
add
inc
enter
stc
sub
xor
push
cmp
pop
adc
sbb
mov
pop
jmp
mov
lea
mov
and
mov
add
jne
les
pop
lea
addr16
push
jmp
push
xchg
mov
inc
inc
cwtl
les
test
jae
jns
out
and
sbb
inc
pop
cltd
mov
mov
mov
inc
dec
inc
dec
dec
aam
sahf
jmp
sti
pop
adc
rolb
divl
and
jmp
mov
inc
mov
sbb
dec
xor
cli
or
lret
popa
std
mov
call
fadd
int
adcb
add
lret
daa
sub
fs
jnp
mov
ljmp
daa
add
es
jo
or
or
fiaddl
mov
ss
cmc
leave
add
or
insb
out
adc
jnp
je
insl
push
lcall
jbe
imul
movsl
pop
pop
pop
adc
mov
push
jmp
cwtl
fdivs
xor
add
std
push
xchg
sub
and
stos
das
call
outsl
mov
push
cmp
imul
add
mov
lds
inc
mov
xchg
or
shrl
jno
mov
popf
sbb
mov
mov
fisttps
sbb
dec
and
add
mov
fisttpll
dec
xor
mov
mov
fsubrs
or
adcb
mov
int3
sahf
xchg
loopne
sti
filds
addb
cmp
test
push
insl
inc
cmp
pop
outsb
inc
pop
fs
daa
mov
sbb
xor
clc
or
pop
and
sub
ficoms
dec
lret
test
push
and
lea
js
add
dec
xchg
lea
mov
lea
xor
ret
lahf
pusha
inc
pop
jb
test
add
pop
pop
repnz
jns
popa
scas
insl
jge
int3
mov
ja
ret
clc
push
test
mov
xchg
fildll
out
mov
cmpsb
fsts
mov
mov
fidivl
dec
in
in
mov
mov
xchg
iret
data16
or
add
sarl
add
pop
hlt
jecxz
sub
ljmp
inc
jno
iret
cmp
mov
xor
xchg
shrb
push
sbb
cmp
xchg
hlt
mov
bound
inc
xchg
fsincos
in
push
fimull
push
xlat
test
lock
xor
cltd
jg
mov
outsb
add
pusha
mov
adc
push
dec
jb
dec
shlw
js
testb
jbe
data16
push
push
aaa
mov
notl
mov
mov
jle
push
push
push
push
stos
xor
pushf
pop
dec
rcrb
cmpsb
push
cmpsl
sbb
sub
cmp
insl
dec
lret
sub
jbe
pop
push
icebp
aam
movsl
and
test
frstor
cmp
mov
jbe
lods
lock
sbb
lret
sarb
pop
out
je
xlat
mov
inc
enter
xor
mov
sbb
loop
push
js
daa
xchg
mov
sarb
mov
aaa
movsb
sbb
lcall
sbb
push
mov
fimuls
dec
xchg
mov
hlt
mov
nop
mov
jle
jae
inc
jne
sub
stos
mov
fsubl
or
cmp
pop
and
aam
in
push
xchg
and
cmp
dec
fwait
mov
add
outsl
push
add
xchg
push
les
and
jp
jp
mov
fistps
and
and
ret
imul
jae
or
in
mov
xor
addb
push
inc
repnz
sahf
mov
iret
push
daa
test
lods
gs
loop
icebp
call
or
mov
mov
push
fwait
add
adc
jmp
test
sub
jp
fisttpll
xlat
shr
fmull
sbb
dec
mov
call
inc
fs
pushf
jo
xor
dec
test
jl
mov
inc
xchg
inc
inc
cmp
push
sbb
jb
in
add
mov
sahf
adc
jb
data16
in
inc
int
pop
push
cmp
cmpsl
lret
loopne
mov
test
je
xor
aad
jno
push
mov
pop
jl
jg
jo
shll
cmp
mov
loopne
inc
fcmove
subb
rcrl
dec
adc
sub
cmpsl
out
push
cs
mov
inc
push
adc
push
sub
test
out
or
inc
cmpsl
xchg
sub
mov
jo
ss
cmp
mov
sbb
fwait
lea
dec
sti
or
lret
xchg
xchg
or
lea
mov
or
mov
fldenv
add
inc
imul
andl
scas
mov
call
xchg
aas
loope
pop
jle
add
sub
jne
add
shll
aad
pop
daa
ja
iret
call
add
leave
enter
push
rcrl
insb
repz
pop
adc
jb
mov
test
xor
addr16
cltd
rorb
sbb
pop
inc
daa
xor
lods
xor
sar
pop
or
sub
mov
jp
lods
ret
inc
push
daa
mov
push
repz
pusha
je
js
push
inc
jns
xchg
cmp
pop
cltd
and
or
push
in
adc
cmp
dec
mov
std
jb
ficoms
push
push
repnz
loope
mov
add
jno
aad
divb
dec
mov
out
push
mov
dec
je
stos
out
lahf
and
out
enter
pop
popf
rorb
cmpsb
negb
loop
outsb
or
shl
aad
pop
xchg
insl
fildl
lret
cmpsb
jecxz
daa
and
andl
jg
or
inc
inc
in
push
sahf
jnp
test
fwait
add
pop
int3
or
movsl
sbb
mov
outsl
mov
daa
push
in
pushf
inc
inc
mov
mov
xchg
mov
xor
push
fists
mov
neg
in
fadd
jl
adc
push
loop
je
inc
mov
push
xor
adc
inc
and
movb
pop
pop
repz
jns
jb
rcl
mov
adcl
push
xchg
fcom
cmpsb
icebp
fs
addr16
cmpsl
pop
xchg
insl
loop
std
mov
lcall
sbbb
push
sub
sbb
cltd
and
jecxz
mov
mov
inc
outsb
mov
fmul
adcb
lea
bound
enter
outsl
mov
sub
dec
xchg
shlb
jb
mov
mov
ret
mov
out
jecxz
mov
sub
enter
sbb
jmp
aam
subb
test
jnp
xchg
dec
push
mov
orb
cmpsb
jmp
push
divl
mov
and
in
inc
pop
ss
sub
xor
daa
pop
mov
daa
xlat
test
stos
lea
sub
sub
sbb
dec
aam
scas
push
dec
daa
outsb
pop
subl
scas
mov
fucomip
pop
xchg
popa
pop
pop
or
leave
in
pushf
add
repz
fmuls
xor
cs
inc
or
into
cmp
fsubrl
fldenv
ja
movsl
popa
out
lret
cmp
lahf
cwtl
adc
push
in
or
aad
or
subl
leave
aas
dec
push
mov
pop
xor
inc
out
icebp
outsb
inc
fcoml
js
pop
stc
movsb
pop
fiadds
add
lret
mov
cwtl
dec
push
add
negb
out
add
mov
cmp
sub
loopne
insl
mov
aas
lds
and
pop
cltd
mov
call
mov
scas
sub
gs
mov
out
xor
push
jl
in
fiaddl
jnp
xchg
pop
mull
and
mov
imul
loope
rolb
imul
push
or
adc
pop
fdivs
pop
sahf
imul
jbe
push
or
nop
idivb
cmp
add
gs
ljmp
dec
inc
push
push
out
or
jp
insb
mov
shl
xorl
adc
and
fsubl
xchg
push
or
push
xchg
hlt
movsl
sbb
adcb
repz
test
or
mov
sub
cwtl
add
push
in
ljmp
jle
imul
mov
push
into
clc
lcall
and
loopne
aaa
xor
data16
inc
pop
xor
xorb
xor
popa
sbb
jmp
jne
into
sbb
pop
scas
fmuls
decl
lds
xchg
push
jbe
jne
pusha
pop
or
add
loopne
mov
push
mov
iret
push
inc
shll
sub
pop
adc
mov
imul
pop
sub
inc
fwait
jg
int
pop
mov
mov
lret
popf
daa
jmp
xor
hlt
sbb
pop
mov
shrb
lods
mov
cmp
in
dec
xor
mov
pop
orb
subl
pop
das
sbb
rcr
ret
mov
or
shrl
int
lahf
out
stos
or
and
aas
xchg
xor
ds
mov
scas
repnz
mov
xor
xor
lds
or
sbb
push
sbb
dec
xchg
aam
sbb
scas
in
flds
mov
cmp
pushf
push
fcoml
in
mov
push
push
repz
or
ffreep
icebp
sbb
sbb
mov
subl
and
adc
inc
push
rorl
push
sbb
insl
jp
loop
cmpsb
btr
pop
cli
mov
fistpll
roll
test
imul
lods
movsb
or
xchg
mov
in
fs
lea
scas
inc
sbb
add
sbb
mov
sub
lret
ss
xor
ljmp
sbb
jb
push
pop
or
shrb
gs
sbb
mov
jge
inc
sbbl
notb
pusha
icebp
les
loope
fisttpl
adc
xor
aas
mov
stos
fldl
sub
les
mov
adc
mov
sub
adc
sub
push
sahf
gs
mov
add
scas
mov
fwait
dec
das
push
cmp
pop
fsubp
push
mov
lock
sahf
cmp
push
sbb
out
nop
in
pop
xchg
fists
and
push
push
das
mov
int
pop
jle
cmp
pop
push
adc
and
push
enter
je
cmpsb
sub
push
mov
adc
aaa
jg
dec
or
push
sub
in
fsubl
in
cltd
lods
scas
enter
push
jne
push
and
bound
pop
mov
insl
xor
jnp
sbb
out
in
adc
and
repz
data16
xchg
ds
push
mov
unpcklps
leave
lods
xor
ss
fnstenv
or
mov
push
outsl
mov
xor
jb
je
aas
sbb
mov
push
arpl
into
test
mov
jb
addr16
sub
nop
cli
es
mull
call
push
or
testl
mov
stos
std
inc
pop
ja
lret
add
fcmovnu
or
shl
aaa
mov
jmp
xchg
testl
imul
xlat
dec
mov
addr16
mov
std
movsb
fdecstp
dec
repnz
int
push
xchg
dec
mov
ds
leave
jns
mov
push
add
into
pop
rclb
xor
sahf
dec
loopne
push
pushf
arpl
sub
sarl
cs
xchg
dec
in
mov
cltd
and
push
scas
sub
inc
in
push
adc
out
push
stc
mov
hlt
mov
mov
adcb
mov
jl
cmpsb
mov
add
adc
mov
ljmp
decl
xlat
cmp
hlt
test
je
outsb
inc
shll
sub
add
mov
clc
xchg
loop
daa
xor
xchg
push
pop
sbbb
push
cmpsb
loope
pop
push
sbb
or
mov
lcall
sub
leave
out
cmp
mov
loop
jnp
and
hlt
add
out
test
insb
aaa
repz
test
dec
mov
pop
pop
dec
xchg
fisubrl
mov
clc
jp
fsubr
jb
dec
mov
jp
jmp
xor
fidivs
mov
xchg
sub
test
popf
into
pop
adc
adc
or
lock
outsb
and
testl
mov
dec
jg
sti
inc
out
in
pop
ja
pop
loopne,pt
mov
movsl
fwait
mov
mov
loope
repz
pusha
outsl
stos
dec
outsb
ficompl
pop
xorl
sub
sbb
adc
push
xchg
fwait
cmpb
push
push
cli
jbe
jecxz
imul
mov
jno
cs
push
aad
shrb
movsb
test
cld
je
ficomps
add
movsb
scas
lret
sub
push
fnstenv
jl
loopne
and
sbb
mov
fs
addr16
outsb
mov
push
xchg
dec
ret
xchg
addl
pop
fnsave
sahf
jb
adc
cmp
pop
in
cmpsl
in
jecxz
xor
mull
mov
out
adc
es
cmpsl
ljmp
fists
pop
dec
cmpsb
mov
or
mov
ds
mov
xchg
mov
add
loop
mov
into
ss
ds
jno
ljmp
cmp
js
test
test
test
sahf
icebp
call
lods
dec
sarl
jne
or
scas
xor
jae
pop
lea
jb
pop
mov
lahf
sahf
inc
stos
mov
pusha
outsl
sub
repz
adc
adc
sbb
or
int3
fadds
aaa
add
mov
xor
test
out
insl
sahf
icebp
fwait
aaa
push
aaa
shr
pusha
push
xor
sub
adc
dec
push
aaa
jne
pop
aaa
cli
and
sub
sbbb
outsb
push
rcrb
xchg
mov
cmpb
jmp
shlb
inc
pop
fsincos
test
mov
jnp
push
jge
nop
xchg
in
xchg
fucomip
cmpsb
xor
enter
arpl
mov
sub
pop
imul
mov
in
add
mov
push
ja
sti
sub
cld
mov
inc
mov
lcall
and
lcall
aam
jge
inc
ljmp
adc
mov
jbe
inc
mov
jno
fwait
sub
jo
out
add
jae
push
add
in
test
lcall
or
leave
aas
pop
and
push
pop
dec
jecxz
das
cmp
xchg
std
push
mov
sahf
or
je
dec
lret
mov
stos
insb
imul
ret
out
loop
and
sub
lods
inc
adc
push
mov
and
rcrl
mov
int
jae
lds
fs
test
push
jge
push
negb
test
mov
testl
ja
js
js
mov
outsl
cmp
cmpsb
mov
adc
mov
mov
push
rol
les
push
add
enter
sbb
mov
jnp
jne
push
pop
sar
std
jo
call
popf
cmp
or
fstl
out
xchg
jp
in
or
fcoml
cmp
stc
cmp
fsubrs
push
test
test
xor
pop
jl
test
dec
mov
mov
push
jecxz
movsb
cltd
into
mov
fisubs
ja
dec
xor
out
inc
mov
test
adc
cmp
adc
pop
pop
cli
shrb
push
xor
out
sub
inc
in
adc
icebp
or
adc
std
cli
cmp
or
pop
push
and
repnz
jge
aaa
ret
mov
jo
mov
scas
lret
les
xchg
shll
add
push
fstpt
dec
sub
fcoms
mov
mov
stos
mov
and
mov
sub
into
mov
sub
dec
imul
adcl
mul
and
clc
enter
or
clc
data16
insl
mov
ja
cmp
sub
out
loopne
pop
push
mov
cmp
faddl
adc
int
push
insl
out
nop
nop
ret
add
jbe
dec
ret
fstps
mov
pop
rolb
jno
and
outsb
mov
pushf
jge
xchg
pop
pop
xor
clc
inc
pusha
push
enter
or
xor
lock
lea
loop
pop
dec
pop
pop
outsb
or
inc
push
add
repz
sub
outsb
sbbb
ljmp
in
cmp
jg
pop
mov
lret
inc
inc
add
xchg
mov
popf
push
mov
ret
push
jae
sarl
mov
es
inc
pop
add
sub
mov
lods
pop
jmp
inc
aas
mov
div
cmovle
sub
test
inc
inc
mov
sub
mov
inc
pop
mov
hlt
daa
pusha
xchg
clc
mov
add
mov
or
es
fildll
mov
js
cmp
add
jecxz
push
jecxz
xchg
add
mov
xchg
cmpsl
dec
mov
fidivl
imul
inc
lcall
push
icebp
adc
aaa
add
mov
int
rcrl
inc
jmp
sbb
scas
ret
jns
ss
jae
mov
push
std
in
xchg
mov
xchg
lods
adc
push
cmp
mov
adc
pop
idivl
pop
arpl
iret
mov
lea
cmp
sub
adc
lret
es
sbb
jl
imul
push
jae
ret
jo
popf
scas
adc
stos
sbb
pop
cmc
ja
xor
xor
pop
or
inc
jl
push
aam
mov
pop
xchg
test
dec
mov
jno
stos
jp
inc
or
movsb
jge
mov
adc
out
int3
insb
xchg
add
jecxz
dec
cmpl
push
dec
xchg
push
andb
cmp
and
das
xchg
pop
jne
push
mov
pop
push
sub
repnz
mov
jg
add
fcomi
mov
add
xchg
fcomip
push
data16
into
cmpsb
call
or
xor
sbb
or
negb
xor
dec
ds
pop
leave
aad
daa
xchg
fs
cmp
xchg
jno
in
mov
fstpt
scas
jo
test
scas
or
push
out
nop
fabs
int3
mov
push
dec
mov
insb
cmp
insb
push
cwtl
nop
pusha
dec
dec
int3
jbe
leave
lock
xor
loop
pop
pop
cmp
mov
sub
pop
adc
push
and
fstp
pop
pop
dec
cltd
lret
jecxz
sar
mov
rcrb
repz
adcb
hlt
jae
cli
and
mov
push
mov
push
das
add
scas
mov
mov
mov
ljmp
or
addr16
daa
ja
jmp
pop
loop
test
cld
pop
xlat
es
lds
or
jge
dec
addr16
inc
mov
movsl
push
dec
xor
xchg
push
push
orl
mov
inc
xchg
cmpsb
mov
sbb
insl
xchg
idiv
in
sbb
add
adc
pushf
jle
ja
add
xchg
mov
and
mov
pop
mov
into
or
pop
push
jecxz
int3
mov
mov
cmp
mov
aaa
sub
and
outsl
jecxz
test
dec
xchg
jnp
mov
inc
add
inc
fimull
imul
dec
mov
and
inc
test
adc
adc
push
fiaddl
clc
subb
push
fnstenv
test
pop
lcall
aas
push
nop
clc
push
dec
out
xchg
add
add
cmp
sbb
pop
dec
ffreep
repz
cmc
js
nop
and
pop
icebp
addr16
pop
fmull
mov
je
in
js
sbbl
aad
and
jecxz
sbb
cmp
inc
mov
push
ljmp
aas
sbb
or
xor
push
inc
and
cmp
cld
in
xchg
xor
sub
jl
mov
outsb
insl
pop
fwait
lcall
sbb
ja
jno
dec
ljmp
scas
push
call
sbb
dec
mov
xor
cli
outsb
sbb
sub
aas
push
cmp
ret
jl
sub
ljmp
repnz
adcl
rclb
push
fsubp
int3
sub
lret
imul
jl
dec
test
jg
mov
dec
pop
data16
add
sbb
and
mov
incb
cli
mov
iret
aam
xchg
push
jns
sub
clc
int
or
and
and
outsb
xchg
mov
xchg
je
cmp
enter
ja
incl
cmp
icebp
add
insl
jmp
or
movsl
pushf
or
movb
lock
or
aas
lock
adc
rclb
scas
es
mov
imul
pop
pushf
stos
pop
nop
out
xor
clc
jmp
xor
icebp
rorb
jle
fwait
imul
int
mov
sti
and
sub
fadd
outsb
xchg
in
out
fs
pop
lret
inc
sub
jecxz
pusha
in
das
push
test
dec
xlat
hlt
iret
add
std
pop
int3
xor
add
adc
filds
out
in
jae
mov
gs
test
xchg
xchg
js
or
pop
shll
dec
mov
cmp
jecxz
test
rcrb
sub
lea
fdivr
mov
push
cltd
jnp
pop
xchg
push
mov
xchg
adc
cs
inc
leave
outsb
faddp
orb
xchg
jmp
jle
and
pop
mov
push
mov
adc
pusha
mov
jp
add
loope
loop
je
test
ja
int3
cltd
mov
xchg
mov
fstpl
push
int3
popa
xor
popa
sub
xchg
lcall
lea
xchg
push
cwtl
aaa
mov
lcall
insb
cmp
push
xchg
lock
fidivrl
das
adc
pop
mov
fwait
sarl
inc
xor
out
and
pop
push
pop
lds
add
pushf
sbb
stos
repz
pop
movsl
stc
addl
idivl
dec
iret
lea
mov
dec
inc
adc
and
push
xchg
cli
xchg
sbb
fildl
xchg
sbb
mov
aas
and
jno
jmp
inc
andb
pop
jnp
pusha
cs
scas
push
or
sub
dec
mov
xchg
stc
outsb
movsb
and
push
in
push
shlb
dec
add
and
xchg
or
loope
add
push
or
shlb
test
cld
pop
mov
lea
adc
sarb
ss
sbb
push
cmp
add
adc
mov
fidivrs
hlt
call
mov
inc
cmp
rep
jg
sub
gs
je
or
jmp
popa
or
aas
ror
movsb
lahf
dec
adc
fcmovb
aad
sub
arpl
and
pushf
or
sub
xchg
sbb
mov
cmpsb
stos
mov
das
mov
lods
adc
and
mov
push
ja
lret
pushf
stc
int
rorl
lds
pop
les
cmp
and
inc
jb
sub
fstps
lret
imul
and
inc
xchg
fwait
mov
pop
popa
into
adc
mov
cmp
data16
mov
aaa
cmpl
xor
or
sbb
sbb
jne
push
mov
cmp
mov
fadds
shr
prefetchwt1
or
sbbl
or
stc
mov
daa
jne
arpl
addr16
and
push
add
in
mov
jge
orb
jno
xchg
xlat
imul
sub
hlt
jmp
out
cld
inc
mov
lock
and
xor
outsb
mov
fldt
mov
mov
mov
sub
add
divb
loope
loopne
or
mov
stos
scas
mov
cmp
push
adc
ss
mov
fwait
pop
mov
jbe
cld
popf
std
flds
jo
push
push
mov
mov
mov
loop
xchg
sub
hlt
pop
push
or
ret
mov
pop
xor
jo
out
lahf
xchg
repnz
mov
je
dec
cmpsl
repz
xchg
inc
nop
jae
lahf
test
jbe
cmp
mov
push
aam
daa
jp
add
int
jp
dec
sub
or
cs
sbb
mov
ficoml
daa
or
mov
bound
dec
dec
jg
pop
xor
and
clc
outsb
arpl
repnz
int3
pop
adc
stos
fnstsw
lock
ret
push
cmc
xchg
or
xchg
dec
inc
sti
lcall
lods
inc
jmp
aam
inc
daa
lds
ss
fiaddl
pop
int3
lret
popf
mov
jnp
imul
test
dec
xchg
adc
inc
loop
mov
xchg
addr16
aad
inc
dec
cmpsl
jl
js
mov
out
pop
stos
aad
stos
and
adc
sub
mov
xor
sti
loopne
or
add
mov
sub
pusha
push
xchg
push
sub
add
mov
fsts
idivb
hlt
xor
sub
push
push
cmp
adc
pop
mov
jo
inc
inc
leave
xor
xor
sbb
das
xchg
out
jne
add
insl
xchg
xchg
or
pushf
psraw
vcvttps2dq
mov
cmp
and
or
or
jp
pop
xchg
add
xor
aad
imul
jns
push
out
and
aas
jo
jecxz
pop
pop
mov
xor
jbe
pop
inc
aaa
lret
or
add
push
aam
rol
cmp
jp
inc
lcall
jl
orl
or
xchg
dec
jg
fwait
pusha
cs
daa
or
iret
je
in
sub
out
add
ret
mov
test
icebp
jge
mov
imul
jb
loope
ds
std
mov
xor
pop
sub
push
mov
cmp
push
shr
hlt
jle
fcmovne
je
enter
int
mov
inc
shrl
fwait
jmp
mov
dec
adc
int
lds
les
mov
mov
ffreep
subb
push
jle
fbstp
xchg
mov
and
dec
and
int3
out
xchg
jbe
pop
and
cltd
enter
call
xchg
adc
jno
scas
xor
pop
mov
inc
call
cmpb
lret
xchg
dec
xchg
pop
les
imulb
sbb
push
xchg
cwtl
popa
xchg
in
fmuls
mov
mov
int3
in
inc
ss
and
shl
mov
mov
lcall
cli
mov
into
nop
cs
and
mov
inc
insb
add
gs
jnp
pop
xchg
jnp
arpl
push
rcrl
xchg
popa
lds
fcoml
cli
xchg
mov
scas
jl
jge
pop
mov
mov
push
jb
xor
in
dec
stos
mov
and
je
dec
jmp
mov
inc
sti
push
sbb
adc
mov
loopne
jbe
cmp
das
lahf
cwtl
sub
stos
fldcw
cli
lds
iret
cmp
dec
push
mull
push
iret
test
fldl
xchg
xchg
inc
jg
lahf
lret
xor
mov
jnp
loope
pop
jbe
dec
into
jge
arpl
ds
mov
out
fldt
lods
es
fistpl
cmp
and
fucomp
aam
out
pusha
sbb
out
dec
xchg
cmpsl
cmpsl
data16
pop
sub
cli
outsw
pop
sbb
arpl
mov
test
push
jp
pop
and
out
leave
sbb
fwait
jns
out
push
out
idivb
cmp
jbe
lret
xchg
push
push
and
adc
das
push
incl
imul
test
jle
cld
mov
das
popf
orb
lret
xchg
out
in
stos
dec
cmp
dec
shrl
fs
xor
ds
mov
inc
mov
ja
push
sarb
adc
mov
dec
jbe
test
repnz
add
cmp
outsb
ljmp
sub
dec
inc
cli
popf
pop
adc
cs
mov
sarb
imul
inc
add
mov
jp
inc
sub
dec
adc
js
lock
mov
add
dec
adc
pop
push
cmp
mov
adc
mov
aam
mov
mov
jne
ss
ljmp
insb
js
push
add
cmpsl
js
sahf
enter
cld
xchg
push
gs
push
jmp
adc
xchg
loop
jno
mov
fsts
lock
loope
sub
out
ja
fucomi
leave
bound
xchg
sbb
je
mov
fcoml
into
scas
and
and
dec
fists
ss
mov
mov
sbb
push
cld
pushf
stos
stos
scas
xchg
sbb
pusha
mov
sti
test
mov
negl
mov
repnz
and
mov
adc
jb
push
lods
pop
mov
cli
pushf
and
iret
xchg
mov
nop
les
les
scas
iret
aam
cli
sub
pop
in
ret
sub
sbb
jg
gs
push
aas
pop
mov
fwait
push
addr16
repnz
fdivrl
in
inc
test
je
pop
add
test
sub
lret
cmp
dec
dec
pushf
sub
push
test
mov
xor
insb
sub
inc
inc
testl
add
xchg
add
cmp
ficoms
mov
push
lret
jnp
adc
add
stos
dec
repz
aad
mov
in
mov
fucomip
sbb
fmull
jmp
gs
push
pusha
sub
pop
xchg
fisubs
inc
test
xor
or
inc
inc
inc
push
fisttpl
push
dec
xchg
jb
xor
mov
iret
push
mov
push
mov
aaa
out
mulb
sbb
push
popa
lds
jecxz
cmpsl
int
pop
and
pop
out
jb
call
shll
aad
mov
gs
scas
mov
xchg
dec
jl
jae
jmp
and
fucomi
adc
std
xor
xchg
inc
cmp
xor
mov
pop
int
movsl
rol
adc
cmp
cld
cmp
je
jle
arpl
clc
jb
addr16
fstl
push
arpl
clc
lea
push
adc
mov
outsl
add
or
jne
cmpsl
sti
xchg
xchg
hlt
imul
mov
or
ljmp
push
rorb
push
or
scas
ret
sbb
jnp
mov
xlat
push
mov
addr16
dec
push
mov
ret
push
jmp
and
es
cmc
push
mov
add
and
popa
jecxz
das
push
ljmp
lea
test
and
cmp
scas
pop
movsb
int
repz
dec
dec
call
dec
pop
adc
je
lcall
dec
add
cmc
dec
fwait
mov
test
lods
jae
insb
into
or
mov
add
ret
out
ds
dec
inc
pop
cmp
add
shrl
lds
test
or
ss
mov
flds
mov
mov
loop
jno
test
js
fdivs
nop
push
fs
push
mov
lods
dec
scas
mov
adc
leave
push
test
jnp
jnp
ja
adc
add
push
int
fsubrl
scas
sub
xchg
adc
or
dec
adc
out
out
xor
icebp
ret
inc
fwait
and
pop
pop
push
mov
loop
and
jno
mov
mov
imul
xlat
pop
mov
cs
inc
push
es
mov
test
add
jecxz
aam
or
shlb
cmp
xlat
gs
hlt
dec
ror
nop
cs
scas
cmpsb
push
shll
clc
imull
pop
pusha
popa
in
ds
mov
jecxz
jb
sbb
push
movsb
xlat
mov
adc
dec
dec
jp
ficompl
andb
int
es
mov
mov
adc
pop
in
aaa
lret
mov
inc
dec
movsb
mov
bound
sub
gs
andl
mov
cltd
adc
out
xchg
je
jne
jg,pt
hlt
inc
test
adc
dec
in
jg
adcl
int
fldcw
movsb
fst
push
test
cmp
inc
jae
adc
mov
mov
mov
jge
jmp
fisubrl
lcall
data16
aam
add
sbb
movsb
inc
pop
repz
and
lods
push
inc
popf
outsb
jbe
fiaddl
cmc
mov
aas
cld
lcall
xchg
cmpsl
xchg
int3
insl
jnp
sbb
xchg
decl
dec
insl
dec
mov
jp
xchg
cmp
adc
xchg
inc
mov
rcl
jns
inc
pop
lret
mov
xor
and
dec
jge
jb
adc
add
std
jnp
push
sbb
movsl
shlb
std
int3
cmpsl
mov
mov
sbbb
inc
jns
repz
aam
xor
bound
fwait
jle
cmp
mov
and
scas
loope
sti
rcrb
adc
in
cli
outsl
in
popw
sbb
js
add
outsl
xor
pushf
mov
xchg
in
dec
into
dec
push
jb,pt
test
test
in
xlat
push
andb
mov
xchg
loop
jnp
push
xchg
lret
fstpl
dec
xchg
sahf
mov
cmp
stos
push
xor
test
sbbb
fs
idivl
cmpsl
and
popw
mov
andl
add
cltd
mov
add
sbb
dec
pushf
sub
enter
jns
xor
ja
inc
xor
in
int3
mov
repnz
jbe
fsts
mov
mov
cld
shlb
mov
cwtl
push
into
add
xchg
stos
mov
mov
cmp
xor
mov
sub
jmp
sub
mov
pop
cmp
test
push
lods
loop
xchg
inc
movsb
sti
jb
mov
sub
pop
adc
iret
pop
lret
ja
and
enter
pop
sahf
inc
and
decl
mov
loop
lcall
scas
pop
jmp
mov
xor
push
mov
imulb
incl
out
mov
in
in
lcallw
pop
mov
pop
push
divb
sub
xchg
xchg
das
scas
stos
cltd
leave
addr16
or
dec
inc
stos
push
adc
leave
cmp
insb
ret
jmp
lahf
push
data16
icebp
mov
mov
int
dec
out
leave
out
jg
mov
mov
test
int3
js
mov
cwtl
rcr
shll
push
aaa
in
and
xor
or
jo
mov
lods
jo
shlb
mov
icebp
xor
sbb
push
ss
pop
lods
subb
gs
xchg
mov
into
iret
lret
idivl
pop
add
gs
xor
test
xlat
out
insb
dec
xchg
xchg
mov
stos
mov
std
pop
jb
les
jmp
int
mov
cmp
test
loope
scas
das
mov
mov
adc
cmp
mov
mov
fcoms
add
test
ret
xchg
outsl
add
pushf
jge
inc
repz
andl
dec
mov
addr16
shr
and
cli
mov
nop
inc
inc
outsl
jle
push
outsb
sbb
jnp
enter
ret
dec
xor
pop
fisttpll
lahf
push
adc
flds
lcall
sbb
stos
jg
pop
inc
addb
add
cld
xchg
cli
mov
pop
sahf
sub
mov
push
movsb
lret
push
jmp
add
or
sbb
ljmp
outsl
jne
mov
jb
dec
dec
movsl
hlt
fwait
xchg
popa
dec
mov
into
clc
jno
aad
and
clc
scas
dec
xchg
push
inc
lret
lret
xchg
outsl
and
adc
push
dec
lret
sbb
inc
adc
out
and
xchg
cwtl
sbb
add
test
scas
in
mov
cs
sbb
mov
dec
repz
pop
pop
inc
cmp
xchg
clc
movsl
or
fwait
jne
cmp
shr
or
add
outsb
imul
imull
into
gs
mov
sub
rcrb
push
pop
sbb
dec
fsubl
xchg
and
xchg
add
scas
push
sub
stos
jns
adc
mov
stc
jo
aaa
shll
fisubl
inc
in
int
sub
cmpsl
pop
sbb
ja
jecxz
lahf
shl
outsb
cmc
scas
stos
movb
cmp
aad
outsb
push
mov
popa
imul
mov
inc
cld
add
stos
mov
add
xchg
jae
adc
pop
xor
ja
loope
das
or
jge
rcr
xchg
jb
mov
leave
sbb
or
fidivrl
sarl
push
jmp
xchg
mov
inc
scas
inc
mov
cmp
bts
pusha
pop
xchg
dec
cwtl
push
jno
cmpsl
repnz
mov
mov
scas
mov
add
pop
ss
mov
inc
imulb
mov
addr16
mov
pop
mov
jle
add
sub
push
xchg
hlt
outsb
mov
push
icebp
into
ds
leave
xor
popa
lds
movsl
lock
jno
xchg
sbbl
shll
aad
inc
push
inc
hlt
pop
out
jno
lahf
or
mov
insb
pop
mov
fisubs
xor
nop
pop
fsincos
cmp
cs
cmpsb
dec
add
fnsave
in
es
je
push
scas
inc
xor
daa
mov
fs
pop
fmull
cmpsl
in
adc
cmp
push
mov
lods
movsl
jmp
xchg
movaps
leave
inc
aad
xchg
and
jne
in
sub
in
out
and
data16
push
hlt
dec
das
inc
cmp
pop
dec
aad
movsl
sbb
out
adc
cld
mov
movhlps
lock
les
iret
add
inc
cwtl
inc
pop
fadds
insb
popa
adc
push
mov
inc
jg
or
daa
out
pop
sbb
popa
pop
push
mov
or
push
add
cmp
add
mov
jae
sbb
mov
imul
add
daa
jl
or
arpl
inc
mov
lock
in
lret
xchg
cmp
jns
add
pushf
test
push
mov
loopne
fcoms
or
stos
lcall
mov
sbb
enter
lods
or
jg
popa
popw
cmpsl
arpl
sub
mov
inc
inc
xchg
jnp
sbb
cli
mov
xchg
repnz
loope
and
xor
test
das
pop
inc
xchg
mov
xchg
fs
cmc
and
dec
scas
out
push
imul
jb
xchg
and
mov
cli
call
add
jno
jno
or
fisttps
dec
sub
jmp
dec
idivl
pop
and
stos
fadds
add
add
enter
cmp
xchg
call
lcall
clc
int
ret
lcall
mov
xchg
ret
push
mov
les
rorl
jb
cmp
ja
mov
es
mov
scas
cld
add
jecxz
cs
sbb
lea
jl
xchg
out
mov
mov
mov
push
jg
pop
mov
stos
loopne,pn
dec
jno
out
rorl
jne
push
lock
int
popw
cld
rep
mov
int
aaa
fs
dec
cmp
inc
or
add
je
aad
add
cmp
xchg
shll
cmp
jne
aas
jg
addr16
dec
hlt
xor
xor
fidivs
ficoml
mov
out
popa
cld
or
ficompl
cmpsb
cmp
lds
jp
jns
fs
lods
xchg
cmp
nop
sti
or
and
xor
pop
pop
push
add
jge
insb
jo
fidivrl
lock
inc
push
fsubrl
push
mov
cli
sub
cli
outsb
scas
test
sub
lock
adc
or
mov
ret
adc
mov
int
lds
xor
mov
mov
faddl
cmp
pop
iret
cmp
fnsave
fldt
in
sbb
outsl
mov
adc
adc
int
dec
xlat
sbb
lret
dec
lcall
inc
or
cld
cmp
jbe
roll
add
aaa
in
pusha
outsl
movb
mov
ror
push
xor
push
repnz
xlat
ficompl
imul
jae
and
and
mov
das
jno
mov
and
scas
xor
repz
stos
out
stos
xchg
sbb
pop
rcrl
pop
push
pop
xlat
push
mov
inc
bnd
mov
cmp
in
xor
mov
into
xchg
cld
out
mov
fidivrs
mov
mov
sub
iret
mov
repnz
stos
jmp
or
subl
dec
stos
fstp
lret
xchg
xchg
push
xchg
xor
dec
nop
lock
pop
jb
jp
jbe
or
xor
pop
add
pop
push
jg
adc
pop
mov
jo
out
les
sbb
dec
or
aas
lods
mov
rcl
sbb
sub
inc
cmp
inc
dec
sub
jns
adc
lds
jne
out
or
sti
push
js
arpl
mov
repz
and
jp
icebp
sub
insl
outsl
pushl
pop
rorl
inc
sbb
lods
inc
pop
or
sbb
arpl
cmpsb
push
dec
mov
popa
adc
or
popf
pop
push
outsb
negb
adc
mov
xchg
mov
push
jnp
lret
jle
fsts
lahf
cld
mov
inc
dec
dec
xor
xchg
lods
mov
xor
leave
jl
data16
push
adc
mov
and
cmp
inc
xor
fwait
insb
xchg
mov
pushf
add
cmp
jo
aam
mov
lods
cs
sbb
popf
fwait
add
in
sbb
popf
mov
loop
bound
ss
mov
dec
andb
shrl
push
mov
sbbb
pop
add
pushf
lret
test
lods
mov
lods
shl
push
push
inc
repz
dec
in
and
test
clc
mov
adc
cmp
ror
insl
pusha
ss
push
cmp
mov
cmp
divl
xchg
add
test
add
ljmp
addr16
sub
push
mov
sbb
adc
ret
shl
leave
mov
and
mov
pop
insb
push
cmp
stos
jl
int3
mov
fadds
ja
outsb
mov
mov
mov
inc
xchg
fdivl
clc
rorl
ljmp
adc
mov
clc
movsl
jecxz
in
subl
jbe
out
insl
sar
pop
jle
adc
addr16
inc
sbb
inc
mov
sbbb
nop
xorb
jl
mov
aad
and
push
push
incb
cmp
jmp
inc
and
int
xchg
xchg
test
xor
in
scas
xchg
addl
andb
jl
lahf
pop
cmc
mov
arpl
imul
stos
pushf
mov
inc
fistps
adcl
cmp
pop
sub
clc
mov
in
into
int
mov
pop
arpl
pop
xor
pushf
sbb
jg
aam
shrl
insl
mov
ljmp
mov
sub
push
inc
jns
cmp
movsl
xor
mov
aam
sub
xchg
push
xchg
sub
and
bound
sbb
and
cli
dec
ljmp
cmpb
jecxz
test
dec
push
sub
sbb
movsb
cmpsl
int3
or
cltd
mov
loop
roll
hlt
addr16
sahf
in
or
pop
popf
jg
fnstenv
adc
rorl
ja
cmp
es
inc
imul
and
xchg
add
dec
stos
push
rcrl
xlat
xchg
adc
mov
fldl
js
jmp
mov
jl
pop
cld
dec
out
sub
iret
pusha
inc
xorb
in
xor
mov
jnp
test
sahf
adcb
outsl
sub
adc
inc
shr
inc
xchg
shrd
lcall
or
inc
outsl
lea
add
add
shl
push
out
mov
rolb
repz
stc
arpl
cltd
aam
dec
jo
das
push
icebp
pop
fldl2e
js
xchg
jge
pop
daa
repnz
mul
leave
inc
or
pop
push
aaa
sub
mov
mov
icebp
xor
xlat
out
outsb
cmp
cltd
inc
inc
adc
mov
mov
jmp
lret
jns
inc
push
out
popa
push
sti
movhlps
pop
xchg
cmp
lahf
popa
aaa
jl
pop
jns
pop
sub
sbb
push
adc
ja
or
xor
dec
push
repnz
or
mov
pushf
push
jne
and
jg
add
popa
rcr
and
mov
adc
xchg
and
out
es
insb
bound
sbb
adc
lods
rolb
xchg
sub
inc
mov
sti
insb
cli
xor
push
lock
push
ret
add
pop
inc
push
or
stos
stos
ret
pop
push
scas
mov
scas
fdivrs
out
or
aad
push
jno
add
mov
test
push
icebp
imul
jb
mov
add
inc
sar
sbb
loopne
sub
loop
idivl
cs
mov
mov
out
inc
mov
mov
dec
xlat
lret
enterw
stos
push
test
dec
stc
sub
push
repnz
push
dec
mov
or
sub
int
test
cmpsl
mov
pop
nop
push
loop
orl
jo
testb
mov
movsb
inc
mov
mov
movsb
pop
jmp
shlb
pop
shl
jb
stos
stos
test
popa
loop
out
or
add
subb
or
sbb
xor
outsb
mov
test
leave
inc
and
sbb
push
add
mov
jg
inc
je
push
sbb
jmp
jg
arpl
push
jne
cmp
xchg
inc
fnstcw
les
test
cmp
jge
fstl
inc
pop
stos
pop
sbb
sub
in
pop
and
cmpsl
insl
push
pop
loop
es
cmp
xchg
and
decb
aaa
xlat
movb
inc
lods
out
rorl
cmp
int
jge
jno
mov
insl
ret
sub
out
add
or
lret
pop
mov
pop
jecxz
iret
xlat
push
sarl
inc
sbb
dec
push
xor
cwtl
int
mov
push
stc
lea
cli
dec
inc
je
test
xchg
fistl
popf
cwtl
inc
aad
lcall
dec
mov
add
in
sub
mov
dec
das
mov
mov
dec
and
sub
xchg
or
imul
sbb
mov
js
jle
fs
fcomps
mov
push
jb
shr
push
mov
nop
rcll
mov
je
pop
rolb
stc
pop
adc
cmp
adc
push
ljmp
das
notb
push
jge
mov
icebp
inc
fdivrs
push
pop
mov
add
ss
icebp
mov
in
mov
and
in
or
jp
sub
or
int
cs
es
cltd
mov
loope
fdivrp
sbb
push
cltd
outsl
mov
jns
fisubs
adcl
scas
out
cmp
mov
pop
mov
mull
mov
xchg
sub
out
cmp
dec
loopne
xchg
or
stos
xchg
or
outsb
loopne
jecxz
mov
ss
cmpsb
loopne
out
jle
inc
rcrl
and
mov
test
fidivs
cli
and
dec
jge
jg
out
stc
imul
lahf
insb
out
xlat
xor
int
lret
xchg
xlat
data16
lret
mov
xchg
frstor
jo
add
xor
sahf
leave
sbb
pop
push
xchg
and
push
push
jge
notl
mov
inc
out
shrb
mov
cld
mov
inc
cmpsb
inc
mov
jo
jp
sbb
jno
lods
mov
xchg
push
out
cmpsb
sbb
mov
sahf
xor
leave
adcl
aaa
lods
cmp
ljmp
loopne
lods
mov
jno
dec
out
dec
jne
mov
imul
lret
pop
shrb
xor
mov
fistps
dec
inc
sub
hlt
pop
or
ds
xchg
pusha
enter
iret
test
xor
inc
pop
xchg
sub
outsl
repz
mov
or
inc
push
dec
out
or
jno,pn
push
mov
aad
sub
je
jle
dec
mov
arpl
ss
or
sub
inc
in
ret
mov
cltd
arpl
sbb
lods
lock
das
pushf
fcoml
arpl
es
notb
sub
loope
mov
les
popa
xchg
es
pop
adc
repnz
gs
sub
or
loopne
pop
xlat
cs
je
lods
lds
fmull
sub
icebp
lret
aam
cmp
lahf
inc
push
jno
mov
hlt
add
leave
in
pop
push
aas
jnp,pn
ja,pt
aam
or
lds
scas
push
or
fdivl
test
pusha
pop
sbb
lret
lods
lret
fistps
or
inc
in
sub
sub
inc
jge
in
insb
pop
xchg
push
daa
push
test
pop
cmp
insb
imul
push
add
mov
mov
add
or
mov
push
dec
mov
jae
addl
mov
xor
mov
out
pop
dec
adc
adc
imul
push
outsl
sbb
scas
adc
xchg
add
fdivrl
stos
jae
pop
mull
jb
ret
inc
sbb
ret
mov
popa
or
sbb
inc
pushf
das
dec
xchg
jge
popa
adc
adc
je
pop
pusha
mov
xchg
inc
xor
int3
cmp
pop
daa
add
push
push
repz
stc
pop
into
or
and
cmp
aad
jge
sub
xor
jae
xor
inc
pop
outsl
pop
nop
add
aam
out
dec
mov
inc
shrl
mov
aas
fnsave
clc
jp
stos
insb
std
mov
jecxz
in
lods
icebp
cmp
fs
les
sub
mov
xlat
and
pop
sub
scas
ret
repz
sti
mov
stos
sub
out
push
jne
add
push
ljmp
add
jne
jae
jle
jle
inc
fcompl
dec
js
xlat
pop
xor
sub
mov
adc
xchg
outsl
mov
jbe
mov
mov
pop
fisubl
mov
test
cwtl
push
and
adcl
inc
insl
ret
inc
clc
sbb
dec
icebp
add
cmpsb
lods
ret
jns
popa
mov
fstpl
mov
and
jbe
leave
lea
push
mov
shr
jle
add
sahf
push
fldl
fsubrl
jns
push
in
stos
mov
sbb
aad
adc
addb
leave
loope
mov
xchg
insb
inc
push
mov
mov
movsb
outsl
arpl
pop
mov
dec
mov
dec
sbbb
fs
xchg
xchg
inc
sbb
adc
xchg
fs
test
dec
das
das
cli
cmp
xor
sbb
jge
test
ss
repnz
push
pop
sbb
lods
adc
outsl
adc
xor
pop
push
mov
nop
data16
add
push
mov
sahf
sub
ret
pop
rclb
inc
testb
sub
inc
mov
ror
insb
cmovg
mov
and
inc
dec
sub
shlb
hlt
sbb
dec
scas
adc
loop
fsts
pop
addr16
mov
enter
int3
insb
sub
pop
or
mov
or
lea
jo
cld
pusha
sarl
xor
call
mov
sbb
sub
jo
xchg
cmp
in
fs
push
inc
jle
test
xchg
ja
add
aaa
cli
daa
adc
mov
out
sub
out
fsubrs
mov
aad
test
fistps
mov
xchg
popf
mov
xchg
xor
xlat
push
fildl
dec
and
cmp
mov
sub
mov
mov
mov
or
jl
fucomi
cmp
or
jo
lret
dec
aam
ja
movsb
loop
loope
orb
dec
mov
cmp
jl
gs
movsb
jne
inc
es
cmpsl
mov
out
jns
gs
xor
push
cmc
lret
jb
push
jle
sbb
adc
out
pop
out
test
test
mov
sbb
lahf
cli
andb
and
sub
mov
dec
clc
mov
int3
xor
addr16
fisttpl
pushf
pusha
sbb
jecxz
nop
mov
adc
loope
fldcw
pop
aaa
arpl
in
addl
in
sub
nopl
xchg
es
jmp
fsubs
sarl
lcall
lea
insb
leave
mov
les
mov
add
mov
push
aad
fmuls
pushf
sub
das
test
and
lret
mov
xchg
xor
out
scas
and
std
and
and
aam
pop
jg
mov
or
cmp
cmp
xlat
inc
pop
mov
mov
aaa
sbb
stos
fstps
das
sbb
sbb
xor
scas
imul
in
cltd
or
popf
inc
das
shll
lcall
jo
scas
add
sbb
cmp
push
loope
daa
stos
imull
inc
or
cmpb
jmp
pop
jle
icebp
repz
cwtl
cltd
jl
xchg
add
jge
push
pop
xchg
insl
je
or
movsl
or
mov
xor
xchg
lods
push
orb
mov
pop
jl
dec
push
iret
mov
jle
rcrl
bound
sahf
sub
and
incl
jbe
and
jmp
loopne
fisubs
lcall
jge
sti
fiadds
sbbl
enter
xchg
adc
push
sub
xchg
scas
out
dec
and
ret
dec
in
ficoms
mov
mov
adc
insl
shl
int3
pmaddwd
xor
jmp
xchg
popa
bound
adc
mov
jo
mov
pop
xchg
add
popa
orb
pop
jno
pop
sub
js
dec
xchg
out
mov
test
orb
inc
testb
hlt
dec
ret
jl
movsb
jle
outsl
je
fwait
incl
push
mov
cmp
mov
dec
jle
jns
jecxz
pop
adc
outsl
adc
mov
sbb
mov
add
call
push
mov
xor
ljmp
or
rol
sbb
mov
cmp
mov
push
pop
imul
lret
xchg
cmp
scas
xchg
dec
xchg
pop
jo
jp
movsl
jo
dec
imul
idivl
push
mov
aad
pop
or
cs
add
aam
sbb
aad
xlat
mov
push
loopne
sti
insl
add
jnp
push
int
fcmovb
flds
leave
fwait
lds
mov
push
sbb
mov
aam
add
iret
hlt
nop
jge
jb
das
dec
mov
pop
add
and
sbb
mov
repz
cs
insl
cmp
mov
pop
pop
cmp
pop
scas
lds
stos
or
xor
stos
ret
int
xchg
jb
sub
push
popa
and
call
int3
test
andb
fcoml
adc
cmc
jns
and
fisttpl
sbb
mov
prefetcht0
mulb
inc
add
and
and
movlps
dec
leave
mov
ss
adc
inc
xlat
or
cmpsb
and
jae
lods
mov
add
gs
dec
cmp
mov
xchg
sbb
out
jecxz
xor
jno
arpl
fbld
fiadds
xor
dec
xor
jle
cmp
jae
out
dec
aam
cmp
mov
insb
pop
sbb
push
js
fbstp
xchg
dec
aad
jge
out
into
xchg
nop
mov
mov
lea
popa
or
inc
adc
test
add
xor
cltd
stos
xchg
push
adc
and
jle
daa
es
push
xor
lods
std
jle
aam
adc
adc
lret
mov
test
add
in
adc
jp
adc
mov
in
xor
xor
data16
mov
adc
xlat
fmul
xor
sbb
sti
inc
jle
or
add
js
sbb
push
or
pop
dec
inc
in
mov
add
data16
je
dec
mov
mov
fsts
inc
or
mov
sub
jl
dec
js
xor
jbe
push
push
cmp
movsl
fsub
call
aad
or
lea
pop
mov
xchg
xor
fdivs
jmp
or
shll
test
mov
jp
imul
loop
xlat
mov
dec
mov
mov
add
sub
dec
add
and
jae
jns
fdivs
push
pop
add
xor
mov
cmp
add
fdivs
scas
jbe
aad
jae
pop
popa
enter
mov
sub
ss
cmp
mov
mov
mov
and
mov
mov
iret
xlat
xchg
imul
pop
or
inc
movsl
popf
jns
mov
lods
iret
xchg
and
repnz
mov
jbe
mov
or
mov
xchg
push
cmp
popa
sbb
xor
mov
pop
cmp
sub
nop
and
shrl
jle
cmpsb
divl
adc
jge
movsl
out
je
jae
jl
mov
rorl
mov
inc
sub
bound
mov
std
sub
and
push
add
xchg
mov
repnz
insb
xchg
inc
inc
insb
setne
mov
mov
rclb
jl
insb
js
mov
ret
repz
or
test
loope
aaa
imul
and
addr16
and
fdivr
rep
aam
les
cmp
in
orb
clc
mov
popa
cmp
ds
mov
dec
movsb
cmp
fsubp
pop
nop
xchg
imul
xchg
sbb
or
ret
in
into
jg
pop
fsubl
filds
fwait
adc
mov
pop
lcall
sbb
insl
fmull
mov
cmpsb
cmc
imul
cltd
cs
mov
repnz
roll
outsb
jg
das
movsl
cmpsb
xchg
push
out
mov
repz
scas
sbb
popf
insb
out
fiaddl
hlt
jne
add
in
jl
test
lock
fistpll
jae
cmp
inc
push
loop
rcrl
js
addr16
notb
jmp
into
cmp
je
cmp
pop
mov
mov
xor
in
push
in
sahf
fwait
mov
dec
xor
sbbl
fmul
inc
xor
or
ret
dec
xchg
push
sub
xchg
xchg
stc
mov
es
jge
adc
aad
inc
out
jle
cltd
in
test
sub
pop
xchg
aaa
fcoml
dec
or
lahf
ss
addr16
cmpsb
int
lea
jnp
fstpt
add
push
mov
sub
push
mov
out
jnp
pop
fneni(8087
repz
jl
ror
outsl
inc
pop
mov
pusha
sub
gs
addb
pusha
add
sahf
ret
das
stos
inc
adc
xchg
mov
inc
loop
jl
outsb
xchg
in
fldt
fnsave
push
jb
sbb
ret
push
xor
pop
pushf
lea
lahf
hlt
cmc
nop
out
fimuls
mov
inc
orb
xchg
sbb
mov
aaa
idivb
adc
out
insl
pop
ljmp
adc
aam
cmp
mov
fildll
aam
mov
mov
and
cli
and
push
outsl
cmp
mov
call
dec
aad
xor
push
or
dec
test
fs
add
movsl
mov
mov
push
ret
inc
add
dec
sbb
jns
jl
repnz
scas
pcmpeqw
sti
pop
sarl
outsl
je
xor
mov
and
push
jmp
xchg
lods
ljmp
or
fwait
cmp
in
je
jp
push
enter
stc
out
sbb
stc
xor
add
fwait
lods
sbb
jb
daa
pop
add
mov
mov
mov
push
cltd
scas
and
sarl
inc
adcb
lds
testb
stos
cmp
es
insb
idivl
xor
in
sub
xor
lahf
in
arpl
icebp
push
mov
push
inc
sbb
sub
pop
xchg
inc
loope
sbb
sbb
sti
lds
rorl
pop
adc
and
sub
sbb
shl
push
mov
dec
cli
roll
xor
adc
stos
ljmp
mov
movsl
inc
fldt
adc
sub
adc
bound
addb
jo
sti
mov
ret
or
nop
mov
xchg
mulb
aam
fcoms
arpl
pop
faddp
push
out
and
xchg
dec
sarl
inc
popf
xchg
int
popa
gs
mov
mov
mov
ficoms
sbb
xor
cmc
pop
out
push
test
das
mov
cmpsl
push
and
call
nop
fnstenv
js
adc
jns
mov
jg
jb
in
js
pusha
dec
ds
repz
mov
popf
loop
mov
lods
shrl
fs
sbb
xchg
pusha
jne
mov
add
add
jmp
and
movsl
mov
scas
cmp
pop
out
mov
mov
mov
sub
or
push
outsb
ret
mov
les
test
xchg
adc
jb
jg
js
int3
inc
pop
and
push
adc
int3
adc
xor
cli
xor
pop
lods
push
cmp
jg
adcl
sub
inc
maskmovq
jnp
shlb
xchg
jae
in
enter
scas
push
sti
repnz
imul
fs
pop
arpl
arpl
cmpsl
iret
add
dec
aad
mov
sbbl
xor
loope
lfs
dec
xchg
sahf
test
or
sub
cmp
fiadds
add
dec
adc
xchg
pop
push
dec
dec
cmp
in
xchg
push
pop
inc
and
jno
dec
aad
jnp
fildll
iret
mov
shll
arpl
gs
and
aas
xchg
mov
filds
or
rcrb
mov
cltd
adc
test
push
sub
pop
sbb
fwait
cld
push
icebp
inc
int3
sbb
jg
and
ret
fdivl
orl
inc
inc
and
mov
test
inc
or
lods
lcall
xchg
sbb
xchg
arpl
add
pusha
dec
adc
mov
fidivrl
cld
hlt
std
pop
out
notb
sbb
rolb
pop
push
jge
addl
push
nop
and
push
nop
pusha
lods
aaa
cmpsl
and
orl
mov
xchg
sbb
leave
jb
jns
scas
in
pop
dec
add
int3
rorl
mov
add
ss
pop
sub
xor
mov
adc
mov
rcr
dec
adc
lea
loop
enter
xchg
mov
and
sbb
int3
or
fdiv
jmp
jne
pop
lret
nop
xchg
out
cmp
insb
enter
cmpl
out
andl
cld
fnstcw
movsb
push
add
sbb
adc
dec
push
out
cmpsl
mov
sbb
xchg
ffree
aas
inc
ficoml
jl
xchg
lcall
das
dec
movb
loope
xor
rclb
out
cmp
pop
sahf
cli
adc
sub
add
cltd
push
add
pusha
and
cmp
fldt
imul
clc
dec
jne
fimuls
sub
dec
mov
mov
xchg
dec
adc
enter
call
fidivrs
rolb
rcrb
xchg
fs
xchg
adc
cmc
cmp
inc
cmp
out
jp
mov
sbb
pop
call
push
pop
cmp
adc
sbb
pop
in
daa
jb
cmp
fs
xor
dec
push
movsb
lret
lods
mov
insb
cmc
out
dec
stc
fidivrl
push
in
cmp
jmp
inc
ja
int
ljmp
outsb
enter
xchg
sahf
out
push
xor
cmc
push
fisttpl
jnp
jo
lods
outsb
ss
jge
cmp
lock
xchg
nop
inc
and
leave
xor
cmpsl
pushf
scas
add
xchg
mov
add
sub
cmc
mov
xor
sub
xor
sbb
sbb
dec
or
push
mov
cli
xchg
mov
and
mov
dec
mov
test
jno
mov
mov
sub
stc
xor
fs
addr16
push
stc
test
push
mov
cmp
push
mov
or
dec
sub
xor
cmp
mov
adc
lds
mov
add
pop
jbe
lds
shl
sub
xchg
adc
adc
or
sub
and
out
sbb
les
sbb
popf
or
push
sbb
adc
jg
push
lock
les
adc
push
mov
test
push
adcl
les
push
xchg
test
lahf
out
call
pop
andl
cmp
fs
andb
lock
pop
clc
int3
pop
and
out
mov
sti
cld
roll
mov
jg
xchg
inc
rclb
icebp
into
dec
pop
xchg
andl
orb
cs
xchg
dec
scas
in
mov
outsl
push
mov
ret
xlat
pop
mov
les
cmpsb
movsb
rorb
dec
add
test
out
mov
and
pop
movb
or
push
jmp
sub
dec
inc
in
test
repz
hlt
cwtl
mov
js
mov
lods
dec
movsl
es
xchg
pop
in
je
addb
mov
cmp
pop
lret
inc
jl
pop
sti
or
jne
xor
cld
mov
popa
mov
sbb
jo
mov
movsl
push
cmp
mov
out
pushf
xchg
mov
jle
push
sbb
mov
fdivrl
test
inc
clc
inc
sub
and
mov
sbb
xchg
ljmp
or
mov
mov
mov
pop
imul
scas
and
outsb
adc
xchg
xchg
mov
pop
decb
jmp
sub
dec
mov
les
push
fsubrs
imull
outsb
jb
sbb
push
sbb
loopne
fisttps
mov
jge
mov
mov
rolb
jmp
mov
xor
rclb
mov
pop
test
scas
inc
inc
hlt
adc
cmc
js
mov
pop
cmp
push
icebp
faddl
lods
and
xchg
mov
nop
daa
add
scas
xchg
cmp
pop
cmp
enter
add
sbb
xchg
dec
inc
stc
cwtl
push
aam
outsl
sbb
mov
testb
mov
cmp
aas
stos
sti
insb
sbb
fistps
mov
and
jb
shll
in
mov
loope
cltd
sbb
ret
pop
lock
add
sbb
inc
mov
nop
stc
xor
adc
xlat
add
xchg
push
ret
pop
pop
pushf
out
jmp
jle
mov
testb
out
rorb
push
mov
xor
out
xorl
mov
pop
jp
xor
xchg
cmp
push
and
pusha
xor
sbb
xorl
das
cmp
fldl
scas
vpmaxsw
jecxz
cmpsb
jle
gs
gs
stc
mov
push
pop
sbb
lret
adc
mov
je
imull
ret
ret
mov
fildl
cmp
pusha
jl
aad
inc
shrl
push
dec
jp
push
xchg
push
int3
pusha
cmp
mov
in
mov
mov
push
or
dec
or
repz
fs
xchg
pop
or
mov
cld
insl
fbld
cmp
add
lahf
pusha
jmp
jmp
fs
fxch
dec
mov
pusha
mov
data16
dec
xchg
mov
sub
loopne
inc
sub
pop
mov
add
push
xorb
popa
adc
jne
mov
inc
push
out
pop
imul
sbb
xor
sti
cmp
adc
repz
sub
adc
fildll
and
fldt
pop
ficompl
push
ss
fdiv
cmpsb
jb
dec
ss
adc
and
aad
xchg
std
test
mov
cmpsl
pop
aaa
xor
or
sti
pop
add
nop
cmc
stc
jbe
pop
repnz
jg
ret
lea
sbb
dec
jbe
inc
mov
scas
fsubrs
shll
fs
fstpt
stos
pop
shlb
mov
out
adc
mov
pop
push
and
xchg
pop
sub
in
int3
xchg
fmuls
sbb
sbb
push
imul
mov
lret
loop
bound
lcall
adc
xor
lcall
test
jbe
dec
sub
mov
mov
sti
adc
test
cmp
add
jge
stos
roll
cwtl
push
inc
sub
xchg
add
clc
sub
sti
inc
and
or
shrl
cmp
inc
push
push
jge
mov
iret
daa
pop
data16
xchg
test
push
add
in
cmp
stc
mov
add
std
movsb
mov
into
scas
fidivl
mov
jg
push
addr16
sub
push
test
imul
sahf
xchg
xchg
pop
test
add
lds
imul
subb
pop
mov
or
repz
in
jb
inc
inc
movsl
jbe
subb
into
pop
stos
lods
movsl
repz
pop
jg
dec
push
ds
xchg
mov
rol
and
ljmp
sarl
sbb
inc
rcrb
mov
ret
adc
je,pt
xlat
push
and
sub
xor
sub
cmp
aam
inc
leave
jae
push
xchg
nop
out
jb
imul
sbb
adc
cmpsl
sarl
jl
push
int
insl
repnz
das
jg
aad
jb
adc
jns
insl
hlt
clc
mov
ds
test
xor
add
mov
aad
cmp
scas
adc
push
outsl
mov
pop
push
in
mov
pop
jnp
in
add
push
inc
dec
aas
jp
popa
les
add
add
jmp
loopne
leave
sti
cmp
subl
cld
cwtl
sbb
aas
aam
movsl
dec
pop
add
push
out
or
add
mov
or
mov
dec
xlat
imul
or
push
aad
push
lahf
rcll
mov
push
pop
repnz
mov
xlat
insl
std
fwait
stc
imul
fsubs
cmpsl
ss
in
inc
push
inc
into
arpl
pop
xchg
lods
fcoms
jno
or
mov
out
mov
xchg
dec
imul
cmp
mulb
mov
lods
popf
arpl
aam
push
push
cmp
int3
xchg
push
fsubl
sub
adc
rcrl
ljmp
pop
lock
mov
xor
xlat
xor
dec
or
add
pop
andb
lahf
out
out
adc
cmp
outsb
mov
mov
mov
and
and
in
lret
mov
mov
jne
ror
inc
and
push
lea
shlb
mov
mov
in
mov
and
insl
insb
cmp
xchg
idivl
xchg
mov
movsl
xor
cmp
notl
ljmp
cld
sbb
sub
cli
addb
jl
jle
dec
lock
aas
or
test
inc
cmpsb
and
in
ret
popa
mov
jns
popf
ds
xchg
lcall
ret
cmpsl
sbb
and
mov
add
iret
stos
sarl
push
imul
ret
jne
dec
xor
mov
mov
push
psubb
dec
nop
lret
push
sub
lret
mov
or
xchg
shlb
push
jae
in
out
movsl
or
push
test
cmp
jno
inc
cmp
ds
shlb
xor
mov
xchg
mov
pop
xor
ret
icebp
cmp
les
mov
stos
loopne
or
sti
jae
pop
xchg
js
or
dec
and
cmpsl
popa
or
jae
scas
jge
cmp
add
jno
out
mov
mov
pop
dec
or
sub
movsl
and
jp
lds
push
mov
push
ret
test
cmp
xchg
or
shr
inc
int
adc
sub
dec
xor
int
lea
fstpt
dec
sbb
jle
out
inc
in
arpl
dec
repz
inc
xor
lock
xor
adc
adc
mov
xchg
mov
sbb
sub
out
pop
sti
ret
stos
js
mov
inc
daa
mov
or
xchg
mov
aam
mov
es
sub
jo
inc
inc
fs
mov
lahf
mov
mov
fsubrs
mov
or
aad
pop
inc
lock
xor
cmp
xchg
adc
push
inc
out
jbe
test
xor
mov
in
arpl
cld
xchg
loop
je
int
or
jl
shr
adc
and
stos
stos
insl
pushf
jmp
movsl
orb
jecxz
dec
lret
pop
adc
mov
js
push
addr16
scas
ljmp
pop
leave
cs
cmp
mov
adc
inc
pop
jae
lret
call
mov
aas
imul
dec
jbe
sbb
rorb
mov
mov
sbb
mov
stos
jns
and
and
jne
leave
gs
int
arpl
xor
jge
fisubl
lret
js
out
int3
push
arpl
mov
mov
xchg
pop
add
loopne
sub
popf
add
ret
mov
loopne,pn
into
das
outsl
and
aam
in
cli
out
add
clc
push
test
jmp
mov
cmpsb
fs
fcoml
pop
and
cmpsb
cmp
mov
call
dec
add
daa
push
mov
cmp
int3
pop
movsl
mov
or
lea
jnp
call
dec
repnz
mov
mov
or
iret
mov
nop
fadds
out
int3
mov
add
loope
pushf
dec
xor
jbe
pop
aam
inc
mov
and
pop
out
ss
jno
mov
pop
push
fs
pop
in
pop
popf
sbb
push
cmc
popf
sbb
loope
or
fnstenv
pop
push
into
mov
pop
mov
ret
and
bound
sub
jbe
aam
into
fidivrs
pop
lds
mov
aaa
and
push
mov
mov
pop
bound
addr16
in
inc
jecxz
cwtd
mov
xor
jns
push
inc
cwtl
sbb
mov
mov
push
int
std
mov
push
xlat
icebp
lcall
and
pusha
rcr
sbb
push
adc
fbstp
sub
stc
fwait
sub
or
add
imul
or
test
xchg
xor
sbb
subl
push
cmp
divl
mov
lcall
aaa
xchg
fisttps
call
mov
lcall
pop
rorb
cmp
ljmp
mov
sbb
in
and
cli
pusha
addb
fidivs
xor
lahf
addr16
push
adc
cmpsb
lcall
cmp
push
loop
int3
push
fsubrs
xchg
fs
scas
ja
js
xchg
adc
mov
sbb
jmp
addr16
insl
arpl
cmp
mov
jnp
cwtl
mov
pushf
jmp
les
icebp
and
lods
out
sub
push
ss
lahf
std
push
popa
push
cmp
sub
add
negb
adc
jmp
add
testl
inc
push
movsb
mov
push
out
in
fidivrs
ret
mov
outsb
jg
rorb
pop
mov
test
in
inc
mov
mov
jns
xor
repz
fsubrl
sbb
xchg
lods
pop
xchg
push
xor
cmpb
je
jnp
add
cmp
push
in
ret
xor
imul
out
into
mov
fmulp
push
popa
adc
or
mov
movsb
int3
cmp
mov
xchg
notl
sub
sar
fnstenv
xchg
idivl
sbb
sbb
scas
lahf
xlat
arpl
movsl
insb
lds
sbb
shll
stos
jbe
aaa
cmp
fisubs
ret
add
or
sub
pop
loope
xor
jl
inc
addb
mov
insl
rcrb
xlat
les
test
and
sub
ss
inc
or
into
inc
adc
cmpsb
jb
in
insl
jbe
scas
mov
push
sahf
loop
ret
xor
dec
mov
xchg
xor
xchg
hlt
push
aam
mov
sub
cmp
jecxz
adc
pop
pusha
pop
jmp
push
push
jb
inc
cmpl
fistpll
ljmp
roll
popa
cmpsb
mov
rorl
js
mov
sbb
cmpsl
add
mov
lcall
push
mov
enter
pop
enter
inc
sbb
outsb
push
mov
sahf
xor
out
dec
adc
xchg
mov
jns
clc
xorb
push
outsb
ret
mov
cmp
notb
shrl
add
cmp
mov
jmp
std
or
xlat
imul
lods
cli
push
lea
lret
add
mov
sahf
dec
aam
and
movsb
mov
mov
sub
sub
push
inc
add
cli
xor
out
or
cmp
fdivl
mov
cld
xor
lcall
cmp
pop
xor
xchg
cmp
xchg
mov
scas
push
rcll
je
xchg
idivb
aad
lds
in
xchg
lods
cmc
rcrb
and
sub
cmp
pop
loop
xor
es
sbb
outsl
shlb
xor
xchg
idiv
or
push
dec
cmpsl
andl
dec
jbe
adc
jb
fistps
enter
xor
pop
frstor
cmp
flds
mov
push
mov
ret
push
data16
aaa
mov
jmp
sbb
dec
mov
jecxz
lock
or
cmc
mov
mov
dec
inc
into
push
cmp
cmp
pop
lds
jo
pop
lret
pop
loop
addr16
loopne
sbb
sahf
nop
leave
loop
or
repz
out
sub
dec
std
lods
rclb
stos
mov
push
jne
pop
jb
es
subl
push
jmp
int
stos
cltd
mov
fs
sub
jp
shll
sub
jl
add
scas
pop
frstor
cmp
cli
adc
lock
pop
add
jmp
adc
out
divl
test
inc
pop
ljmp
loop
cmc
inc
aas
in
jb
pop
push
dec
lods
push
sbb
popa
mov
inc
ds
int
and
push
call
mov
add
loop
lock
add
iret
and
out
xchg
jmp
sub
mov
or
aaa
fidivl
ja,pt
mov
inc
psrld
sahf
stos
in
rcll
pop
dec
aam
xchg
xchg
and
addr16
mov
push
cmc
stos
push
dec
or
adc
in
lret
cmpsb
jnp
cmc
xlat
inc
and
jmp
aam
cli
lea
lea
adc
in
sahf
outsb
fs
jne
mull
rolb
data16
push
inc
push
mov
imul
mov
cmp
out
adc
or
cmpsl
lret
xchg
jno
dec
subl
aaa
xchg
movsl
nopl
pushf
jnp
push
xor
sub
ficoms
out
stc
out
jmp
sbb
cli
popf
iret
lret
pop
and
lds
les
in
mov
and
inc
mov
mov
insl
or
and
lahf
push
and
jne
cmp
sti
pop
mov
cltd
das
ret
sarb
mov
and
sbb
std
ds
push
fnsave
rorb
out
pop
xchg
mov
hlt
or
call
adc
push
fsubrs
and
push
pop
jns
mov
cwtl
jne
add
leave
push
dec
out
dec
stc
jae
es
push
pusha
test
enter
cli
fisttpl
popa
xchg
insb
or
or
push
test
add
dec
clc
adc
bound
mov
lock
or
fsetpm(287
cmp
lcall
push
jno
inc
or
pop
fisubl
cwtl
mov
movsl
jg
and
or
add
mov
push
dec
outsl
scas
jne
mov
aam
push
xchg
sub
dec
mov
lret
push
enter
shll
pop
cli
inc
repnz
push
push
cmp
cwtl
xor
out
call
test
stos
dec
daa
xor
push
test
add
test
jp
lahf
in
xchg
pop
ds
mov
cli
pop
repz
jge
outsl
dec
cmpsb
and
and
pop
in
pop
dec
andb
sbb
xor
fistpll
lock
fwait
test
in
mov
mov
xor
mov
mov
push
inc
xor
jae
dec
hlt
dec
fdivs
cmc
push
push
std
fistpl
pop
add
insb
fistpll
into
mov
out
hlt
or
icebp
dec
push
cmp
outsl
sub
scas
add
xorl
hlt
pop
stc
cld
sub
loop
or
xchg
pusha
cmc
cmp
scas
and
add
nop
and
dec
or
and
jbe
popa
lret
jmp
or
dec
and
jg
xor
cs
xchg
bound
movsl
scas
nop
cmpsb
call
xchg
adc
xchg
cmp
popa
xor
mov
dec
inc
repnz
inc
fnsave
jne
push
dec
adc
xor
pop
pop
dec
push
stc
mov
fwait
xorb
arpl
in
imul
sarb
mov
mov
and
cs
mov
scas
aad
jge
and
and
pop
push
mov
xchg
cli
xor
sub
xor
jb
es
jae
pop
pop
add
ret
xchg
or
rol
mov
lea
sub
ret
ja
mov
imul
mov
nop
movsl
cmpsb
bound
jae
and
cs
cmp
hlt
out
mov
push
mov
out
pop
cmp
adc
push
in
jle
cmp
adc
fnstsw
loop
div
xchg
repz
ficomps
insb
arpl
jae
pop
adcb
lret
divl
cmp
das
lcall
or
adc
sub
in
jle
and
cmp
jle
test
sti
loope
or
dec
movsb
or
mov
outsl
call
sub
pushf
mov
imulb
jp
rorb
aas
cmc
mov
shrl
in
je
fcoms
dec
lods
test
inc
push
jecxz
mov
sub
mov
or
sub
fidivrl
push
mov
xchg
mov
jbe
shlb
jmp
pop
mov
inc
jge
push
xor
jge
ret
loope
int
push
xchg
mov
sub
mov
cld
pop
in
mov
cmp
and
cmp
xchg
das
addr16
addr16
pop
add
sbb
jo
lods
xchg
inc
inc
add
outsl
xlat
cltd
inc
xor
dec
ficompl
inc
fmuls
outsb
xor
jmp
push
ret
xor
aaa
stos
jge
fistpll
pop
movsl
lock
sti
mov
scas
insb
or
xchg
pop
jl
pop
push
outsl
testb
pop
and
xor
insb
mov
cwtl
fisttps
fdiv
jnp
addr16
cmp
addb
div
sahf
aas
sbb
sub
lds
notb
and
clc
mov
fnstenv
pushf
sub
add
mov
ja
inc
orb
cmp
add
icebp
or
mov
test
in
and
pop
mov
out
sub
add
into
mov
jecxz
cs
mov
dec
push
lahf
movsl
sbb
in
jne
inc
xor
mov
imul
sub
scas
repz
xor
push
mov
in
jl
stos
pop
add
adc
jo
jbe
movsb
outsb
fcomp
pop
cmpsl
dec
inc
sbb
inc
dec
inc
xchg
popa
pop
fs
xchg
push
mov
iret
push
lret
fucomi
cmp
icebp
jle
call
das
sarl
push
enter
lock
push
xchg
push
aam
scas
jne
ret
test
pop
ljmp
mov
inc
add
mov
pop
fisubs
cltd
das
mov
inc
mov
lock
push
and
lods
mov
and
loope
xchg
stos
hlt
das
mov
enter
xor
and
push
fs
aad
xchg
xchg
cmp
sbb
fwait
inc
xor
pop
pop
psubsb
xor
cld
adc
xchg
push
stos
sbb
or
int
repz
call
mov
mov
pop
adc
daa
out
pusha
inc
aad
push
cmp
xlat
popf
cmp
out
adc
and
scas
adc
mov
xor
xchg
push
clc
xchg
out
mov
push
adc
loope
lods
jne
out
xchg
sbb
jo
rcll
pop
aam
xor
mov
mov
sbb
dec
adc
add
or
push
xchg
inc
sbb
adc
mov
mov
scas
add
jo
clc
mov
lds
arpl
dec
lods
pop
sbb
mov
lock
test
ret
xchg
stos
int
mov
mov
scas
mov
add
in
lcall
push
in
sahf
orl
mov
mov
rorb
or
mov
or
mov
das
and
inc
test
lea
and
imul
lret
fdivs
rorb
or
popf
in
clc
jge
stos
or
lock
lock
jb
jmp
idivl
enter
js
or
arpl
int
data16
in
cmc
lock
fdivr
sar
les
mov
dec
les
inc
cmpsb
lcall
aas
out
sarl
sub
in
cmp
out
mov
stc
pop
sbb
xor
stos
mov
cwtl
in
add
popf
mov
int3
lods
sub
pop
mov
gs
xchg
int
dec
in
push
jmp
and
jae
scas
rcrb
push
add
sti
mov
fcoms
jno
movsb
jo
adc
jae
leave
inc
push
aam
dec
push
test
shlb
loope
or
sub
in
pop
aas
jle
fadds
jbe
mov
in
mov
iret
jmp
out
pop
xchg
sub
push
scas
mov
daa
jmp
les
out
adc
sarb
push
cmp
sahf
and
adc
orl
xrelease
lea
or
adc
mov
mov
pop
push
hlt
lods
jnp
dec
xor
in
out
push
pop
outsb
js
nop
xor
test
mov
hlt
mov
jp
mov
movsl
fidivrs
andb
rcrb
shrb
xor
ror
psrld
xor
daa
sub
loopne
adc
das
push
xor
and
adc
and
cltd
cltd
stc
and
sbb
bound
pop
fdivl
int
test
xor
and
cltd
mov
outsl
add
push
add
in
push
and
leave
faddl
in
leave
clc
stos
mov
ficoml
or
lret
cltd
sub
rclb
sub
das
dec
pop
sub
push
dec
nop
cwtl
out
cmpl
or
cltd
mov
jne
inc
and
jmp
iret
sahf
dec
scas
jmp
cmpsl
loopne
mov
mov
loope
xchg
dec
push
xchg
out
out
and
ss
inc
pusha
cwtl
outsl
pop
sub
test
lahf
nop
in
gs
sbb
xchg
movsl
mov
out
ret
loopne
jmp
fs
xchg
sbb
shll
xchg
jnp
in
push
sbb
ja
lds
push
ljmp
push
gs
mov
push
or
fcoml
pop
add
fstpl
test
fisubrl
fsubl
cmp
adc
mov
arpl
mov
xchg
test
mov
adc
xchg
add
dec
movsl
stc
and
sub
mov
mulb
mov
js
xchg
call
mov
mov
jl
add
mov
mov
idivb
iret
jmp
aad
push
pop
xor
jmp
enter
insb
hlt
cmp
lret
imul
stc
mov
pop
sbb
inc
inc
fwait
pushf
ret
push
and
push
call
mov
cmp
cmc
popa
imul
inc
int
sti
call
or
mov
xlat
dec
scas
stos
outsl
in
mov
test
popf
mov
inc
fistps
mov
rcll
mov
jecxz
loopne
xchg
bound
mov
test
mov
leave
cwtl
mov
jle
jecxz
adc
pop
adc
imul
popa
shlb
in
adc
push
aam
dec
ljmp
adc
jg
divl
and
mov
jo
mov
mov
mov
dec
xchg
les
dec
inc
bound
movsb
inc
mov
mov
inc
ret
movsl
jmp
int3
sbb
pop
dec
dec
jp
ror
pushf
ja
popa
stc
loop
push
or
dec
pop
mov
sbb
add
mov
xchg
call
add
inc
xor
mov
out
adc
jb
js
rolb
jae
subb
loope
cs
out
mov
adcl
and
mov
stc
xor
mov
aad
mul
sbb
mov
aas
in
sbb
push
push
sbb
mov
imul
dec
and
arpl
jb
lcall
loop
mov
out
aad
lret
sbb
arpl
adc
jo
mov
pop
sub
sub
mov
shll
out
push
andl
mov
sub
jb
push
xor
inc
ret
mov
xlat
ret
mov
incb
call
or
sub
jo
int3
or
aas
mov
orb
fiaddl
pop
fs
in
pop
mov
jg
outsl
xchg
inc
or
jbe
enter
test
addr16
into
dec
push
adc
loop
sbb
mov
imul
xchg
inc
xchg
cmp
pop
xor
sub
sbb
ds
cmp
mov
shrl
mov
mov
data16
push
add
add
and
sbb
out
mov
lock
ljmp
stc
jnp
mov
jno
insb
in
cwtl
add
sbb
std
sti
and
cmp
in
sbb
xor
jns
push
mov
cwtl
jp
sbb
pop
outsl
mov
push
nop
sbb
insl
cld
mov
inc
fisttps
cwtl
inc
pop
xor
or
sub
out
push
ss
sbbb
psrld
aaa
sbb
jbe
mov
subb
mov
mov
or
or
ss
in
fisttpl
xor
jl
xor
add
jnp
dec
mov
mov
mov
jno
xchg
add
push
fwait
dec
sub
roll
xchg
imulb
out
dec
push
bound
pop
adc
imul
sahf
outsb
xorl
fs
jno
sti
test
dec
pop
jbe
mov
sahf
sbb
jae
movsl
test
adcl
pop
inc
sub
lret
wrmsr
ss
mov
inc
aaa
pushf
cmpb
inc
mov
jg
cmp
scas
movsl
add
popa
cmc
add
jns
arpl
xchg
lods
out
bound
fsubr
adc
push
jo
push
cmp
or
adc
lcall
and
xchg
mov
jo
addl
pop
mov
mov
push
jp
xchg
sti
clc
xchg
dec
loope
out
rolb
repz
mov
push
lret
imul
mov
pop
aam
inc
cmp
pop
xor
loopne
pop
aaa
insl
orl
mov
add
lret
or
data16
or
mov
xchg
pop
mov
jmp
mov
sub
push
lea
movsl
xchg
inc
int
sub
cli
inc
adc
cmpsl
repz
xchg
or
mov
sbb
or
int
or
pop
test
xor
mov
les
imul
jmp
iret
outsb
push
je
jl
aas
pop
mov
inc
insb
sbb
mov
xchg
fcmovb
inc
fwait
subb
sbb
mov
outsb
mov
ja
pop
call
dec
insb
adc
add
bound
dec
in
lret
insb
cwtl
movsl
sub
dec
xor
cld
mov
imul
sbb
inc
cmp
daa
stc
adc
pop
mov
jb
lahf
ljmp
jecxz
in
cmp
xor
cld
mov
sub
int3
rolb
push
fwait
xorl
leave
and
fldt
xchg
mov
sbb
jmp
jl
push
cltd
ss
scas
movsl
bound
fsubs
mov
mov
push
dec
incl
popf
test
mov
xchg
ds
push
ja
sub
in
pop
jmp
cmp
sbb
jg
adc
cmp
mov
addb
push
in
rcrb
cld
or
lcall
lcall
xor
imul
and
mov
shll
mov
jle
mov
push
lcall
cmpsb
jbe
pop
pop
out
xchg
rcrl
adc
pop
js
adc
je
sub
in
into
pop
outsl
je
aaa
sbb
pop
push
jb
xchg
nop
cmp
icebp
jmp
fdivl
jge
inc
pop
mov
cld
sahf
lods
sarb
testl
fisubl
jle
dec
xchg
cmpsl
into
adcb
rorb
test
lods
jg
mov
and
mov
sbb
and
ljmp
push
inc
jge
xor
and
in
inc
icebp
inc
icebp
sub
jmp
js
clc
fsubl
cmpsl
xor
int
loopne
divb
pop
dec
aam
testb
test
mov
xchg
ja
and
out
repnz
fidivs
push
jb
pop
and
ljmp
lret
inc
fs
cld
push
jle
add
icebp
scas
pop
push
loop
out
js
push
dec
push
adc
hlt
xor
sub
mov
sbb
dec
lods
pop
hlt
and
pop
jg
aad
js
mov
jo
cmc
in
test
in
pop
mov
mov
data16
gs
dec
pop
or
movsb
xchg
imul
pop
push
cmp
sbb
xchg
daa
addr16
lods
sbb
or
mov
pusha
iret
sub
pop
lret
and
mov
lahf
or
ret
lock
cmp
or
inc
mull
test
adc
inc
mov
cmp
cmp
testb
mov
jnp
lock
xchg
lcall
pextrw
push
sti
push
lcall
insb
dec
xor
dec
sub
stc
bound
int
and
cltd
dec
je
ss
pop
dec
int3
add
mov
js
push
dec
hlt
sbb
out
adc
out
in
ds
inc
mov
hlt
in
sbb
push
inc
je
movsb
sbb
pop
stos
push
fcoml
add
xchg
cmp
sbb
iret
add
insl
xor
lods
mov
pop
loope
mov
xchg
sbb
stos
fabs
ret
fdivrl
and
psubusw
mov
pop
aam
in
add
push
xor
sbb
pushf
sub
mov
xchg
addr16
cwtl
decb
rclb
mov
mov
ljmp
outsb
or
dec
cmp
adc
fsubr
add
outsb
xchg
dec
outsb
sbb
cltd
cmpb
insb
adc
add
sbb
fdivp
or
sarb
xor
and
mov
dec
mov
loopne
test
mov
or
sub
pop
dec
sub
jns
xchg
push
pop
aaa
dec
inc
es
push
dec
mov
inc
fcmovnbe
sbb
daa
fildll
scas
jno
mov
sub
adc
or
and
xor
bound
cld
std
aas
in
inc
jae
pop
aas
inc
je
scas
jmp
jmp
divl
testl
jae
sti
imul
rorl
aad
pushl
sbb
clc
les
js
cmpb
dec
push
dec
dec
push
push
shll
jmp
shlb
xor
mov
mov
shlb
jge
push
jno
mov
movsl
call
sbb
pop
ds
dec
sbb
bound
jp
add
xor
adc
pop
xchg
xchg
je
psllq
sub
jg
js
jbe
fisttpll
mov
sti
call
fimuls
cmpsb
pop
sub
mov
cmp
cmp
mov
xchg
inc
lea
pcmpgtd
les
xor
test
fisttps
cmp
fidivrl
les
ss
mov
iret
fcoml
jnp
xor
sub
push
cmp
addr16
out
or
or
xchg
pop
mov
mov
out
push
mov
aad
mov
adc
or
in
fisubrl
jg
sahf
adc
mov
cmp
xor
mov
mov
insb
mov
cmp
adc
dec
vzeroall
jle
mov
loop
sbb
in
lods
hlt
rcrl
jno
hlt
outsb
ficoms
cs
stos
mov
xor
sbb
push
xor
dec
adc
jmp
dec
test
fdiv
ja
dec
je
lahf
jno
js
ret
cmp
jns
ljmp
mov
orb
std
mov
cmp
outsl
rorl
or
sbb
inc
imul
aaa
movsl
adc
push
and
pop
ret
hlt
push
je
rorl
daa
mov
adc
add
subl
fidivrs
jge
lds
call
adc
fmul
pushf
and
loop
adc
pop
scas
sbb
jbe
lret
jmp
add
call
xor
inc
sti
scas
inc
dec
sub
pop
mov
or
jmp
addr16
mov
xor
xchg
les
jecxz
inc
das
or
fdivr
pop
inc
mov
or
xchg
add
hlt
pushf
sub
inc
outsl
xor
sbb
mov
xor
sub
mov
lret
fstps
pop
push
cmp
inc
test
or
insb
jg
cmp
out
or
dec
sbb
and
insb
bound
mov
in
je
nop
add
and
es
ficoml
sbb
and
jle
push
ret
jle
rcl
popf
in
mov
sbb
pop
inc
or
int3
test
inc
mov
push
mov
loope
jns
or
sub
inc
jbe
push
jae
into
xor
dec
imul
outsb
push
andb
jl
fdivl
xlat
add
imul
jo
jle
ss
sbb
push
out
imul
jge
mov
xor
in
and
mov
sbb
fucomp
bound
lret
mov
testl
rclb
pushf
icebp
lret
mov
lret
mov
add
inc
add
cli
jge
out
or
aas
bswap
jmp
in
sub
ret
pop
xor
mov
pop
rolb
jle
mov
inc
loope
insl
in
jne
imul
aaa
aas
mov
cld
nop
ret
jb
dec
add
dec
xor
xor
scas
mov
arpl
push
pop
shlb
arpl
test
scas
fstpt
mov
in
nop
or
std
xchg
pop
inc
or
cmp
stc
and
adc
cmp
xor
sbb
shl
sub
dec
xchg
xlat
push
mov
push
xor
mov
xorb
out
sbb
push
mov
imul
dec
jge
pop
repz
lret
inc
sbb
and
mov
jle
lock
out
out
dec
je
std
scas
xor
outsb
pop
icebp
adcl
mov
or
cwtl
lret
lods
out
sti
icebp
sbb
sub
mov
xor
cmp
mov
loope
push
mov
inc
xchg
in
pop
inc
add
stos
mov
adc
cld
dec
xor
pop
cmpb
mov
ficomps
pop
fcomi
iretw
and
jbe
and
das
inc
rorl
popa
dec
lea
sub
cli
loop
dec
sbb
cmp
movsb
cmp
fsubp
mov
pop
scas
in
xchg
das
aaa
mov
adc
rolb
popl
test
and
sahf
fnstcw
xchg
out
mov
decl
aad
xchg
cmc
repnz
adc
test
jne
add
fiadds
mov
in
or
outsl
pop
in
jb
subl
mov
jnp
aaa
inc
test
cmc
and
mov
mov
mov
xor
out
sbb
mov
imul
ja
adc
xchg
jae
or
mov
xor
les
add
out
iret
adc
xor
mov
loop
cmp
mov
jl
scas
dec
sub
sahf
cmp
dec
popf
fiaddl
xor
pop
aad
hlt
adcl
stos
inc
lods
mov
xor
push
lock
push
push
mov
mov
xchg
jmp
jnp
dec
xor
jmp
fistl
dec
pop
xchg
push
mov
popf
inc
inc
mov
pop
in
bound
loopne
xor
xor
xor
ret
arpl
movsl
and
in
inc
mov
and
jb
inc
shl
jns
mov
xorl
fmul
pushl
push
cmpsb
cld
xchg
icebp
int
mov
mov
jmp
hlt
lcall
nop
dec
dec
inc
push
xor
push
ljmp
jl
es
and
dec
in
jae
pop
xchg
test
pop
std
mov
xor
lahf
push
xchg
sbb
mov
xchg
out
cs
mov
sub
lods
mov
sbb
dec
lret
adc
cmp
or
call
add
mov
cmc
mov
in
scas
pop
xchg
test
sub
cmp
push
inc
push
lret
mov
pop
into
dec
cmc
mov
cmp
clc
loope
cmp
in
sub
pusha
lret
jne
in
or
sbb
cmpsl
push
adcb
cmp
jg
sbb
mov
outsb
mov
pop
push
cmp
sbb
dec
mov
jo
pop
test
adc
adc
pop
xchg
cmpsb
jne
test
jg
push
fidivs
sub
popf
loope
es
outsl
mov
mov
add
addl
jno
test
pop
popf
mov
jp
addb
or
stos
pop
scas
xchg
call
adc
and
movsl
fstl
or
out
xchg
stc
or
and
sub
jns
mov
cmp
into
inc
push
call
dec
jne
pushf
mov
lods
hlt
imul
stc
std
ja
jbe
push
mov
leave
fiadds
mov
ja
cmp
mov
xchg
adc
cmc
jg
hlt
pop
ficompl
fldcw
xchg
jb
push
imul
je
jns
nop
dec
clc
add
test
jmp
movsb
jnp
lret
aam
insb
or
xor
cld
lret
xchg
lea
mov
mov
jp
mov
xchg
das
sti
js
xchg
cmp
in
add
jmp
stos
mov
aad
sbb
mov
std
mov
mov
lahf
adc
mov
filds
inc
icebp
fst
fcoml
pop
fnstsw
shl
dec
xchg
xlat
sub
test
fucomip
xor
or
repz
lods
dec
lods
dec
clc
mov
fs
dec
repnz
dec
mov
dec
ljmp
fisubl
pop
mov
cmpsb
mov
out
insb
pop
pop
fildll
das
cmp
ss
sub
aad
dec
or
sbb
xor
push
add
sbb
aam
out
adc
mov
mov
ret
sbb
push
xlat
faddp
xrelease
xor
outsb
dec
sbbb
je
jae
test
das
jns
and
xchg
popa
fcmovbe
out
add
pop
ds
clc
in
daa
fiaddl
dec
and
or
call
das
int3
sub
jo
insb
pop
mov
cmp
dec
push
cmpsl
xchg
adc
int3
adc
push
scas
in
test
out
aas
int
sahf
jmp
sbb
jmp
aaa
fs
jp
sahf
lcall
js
int3
mov
push
fbld
xlat
mov
data16
xor
adc
repnz
jp
dec
fld
test
lret
cmp
push
jne
adc
add
mov
and
fsts
lea
adcl
sub
xchg
jbe
fs
mov
loopne
inc
mov
mov
cs
adc
repnz
xor
sbb
iret
sub
out
pop
int
dec
cmp
pop
ficompl
xor
xchg
das
sarl
pop
adcl
inc
sbb
sahf
andb
push
clc
xchg
pop
in
adc
or
push
sub
push
out
inc
cmp
dec
cld
fbstp
mov
adc
jmp
sbb
mov
add
xor
or
pop
cmp
sub
adc
lahf
pop
jp
das
popf
test
gs
repz
cmpb
scas
aad
pop
pop
or
ds
insl
dec
jecxz
pushl
int3
pop
inc
xchg
mov
cmpsl
negb
and
sbb
lock
aaa
pushf
mov
jns
mov
and
push
mov
ja
mov
or
push
mov
or
sbb
jmp
outsl
pop
shll
cmp
add
cmpsb
or
repnz
inc
add
pop
add
pand
lods
mul
add
mov
sbb
loope
lds
sbb
je
adc
add
push
icebp
pop
inc
pop
push
xchg
pop
icebp
int3
out
inc
das
call
jge
jp
push
mov
sbb
int3
inc
push
bound
scas
popa
or
lret
jp
iret
aas
loope
out
add
push
push
pop
daa
jmp
and
adc
jae
scas
cmp
je
cmp
dec
lea
or
jle
lret
push
ret
arpl
lock
mov
outsl
dec
leave
data16
lret
lods
xor
and
out
je
icebp
ficoml
jbe
in
cmp
mov
and
call
mov
out
arpl
or
sbb
lret
lods
lods
xchg
fnstsw
pop
loop
mov
les
cwtl
cmp
dec
sbb
and
jno
xor
in
mov
imul
xchg
mov
popf
mov
in
je
mov
jmp
pop
mov
test
seta
icebp
call
mov
divl
xlat
insb
push
sub
int3
subb
dec
xlat
jnp
mov
mov
pop
jnp
pushf
fidivrs
notl
or
fs
into
jne
sarb
insb
adc
scas
push
sarb
push
shll
les
fs
test
sti
mov
xor
enter
pushl
mov
sub
inc
push
not
pop
pop
jns
loopne
sub
loope
pop
or
mov
adc
enter
repnz
ret
inc
or
inc
pushw
fbstp
int3
jno
jge,pn
dec
mov
jp
xchg
and
push
negb
pop
and
ljmp
pop
loop
aaa
dec
lods
sub
out
clc
adc
xchg
js
out
jns
mov
jns
jle
pop
cmp
dec
push
cmp
pusha
mov
sahf
push
add
push
stc
repz
je
out
xchg
dec
cli
std
rolb
aad
xchg
xchg
test
mov
out
in
cmp
divl
mov
aad
push
push
out
xchg
xchg
mov
mov
mov
xor
sub
ret
push
cwtl
mov
xlat
ljmp
ss
xrstor
jmp
scas
lret
lock
cmp
cmpsb
cmp
xchg
inc
xchg
outsl
mul
mov
mov
xchg
jp
or
mov
repz
imul
lock
mov
inc
sub
mov
sub
xchg
mul
sbb
jno
filds
bound
cmp
mov
xchg
shr
or
xchg
or
je,pt
popa
xchg
mov
xor
sbb
pop
rdmsr
test
mov
sub
sbb
jl
daa
xchg
std
iret
cmp
jg
sub
xchg
xchg
sarb
or
adc
movsb
xchg
aas
xchg
hlt
ret
jmp
test
xor
push
pop
sti
add
insl
iret
dec
out
cmpsb
mov
and
int3
adcb
in
les
xchg
in
std
push
and
mov
cmp
xchg
std
xchg
mov
and
add
inc
jno
jb
in
mov
push
xchg
les
lea
into
xchg
scas
push
fsubl
shll
jecxz
aas
imul
xor
popf
cmp
push
dec
jbe
das
and
cli
mov
pushf
gs
fs
mov
mov
js
pop
pop
stos
fisubl
jmp
cmp
sub
test
int3
scas
insb
pop
in
mov
mov
jmp
fwait
out
out
test
sbb
cmp
inc
loop
and
mov
adc
addr16
xor
cmp
aas
ja
mov
sbb
lea
fildl
push
xchg
jb
push
push
xorl
jae
pop
or
lret
ds
adc
mov
adc
fsubrs
enter
push
ss
cld
test
mov
int
and
outsb
push
dec
cmp
cs
sti
jns
xchg
mov
sbb
andb
insl
and
lret
push
test
inc
rcl
cmp
shrl
mov
xor
jecxz
push
iret
jp
add
test
sbb
push
ss
mov
outsb
lods
xorl
push
add
sub
jge
out
out
cwtl
sahf
shlb
jecxz
ret
sti
mov
mov
fldcw
andb
adc
bound
pop
mov
in
adcl
sbb
xchg
scas
sbb
call
repnz
loop
cmpsl
add
xor
push
xor
xor
insb
xchg
add
jp
out
sbb
sahf
movsl
mov
dec
ret
add
popf
imul
and
aad
push
nop
std
hlt
scas
ds
xchg
inc
data16
xchg
pop
aaa
into
rolb
ds
and
xor
push
test
fucomip
lahf
xor
inc
sarl
lret
js
pop
adc
jnp
pop
sbb
aam
jle
sbb
add
cli
popf
rcrl
add
scas
in
sub
mov
out
addb
mov
push
lods
inc
test
sbb
call
adc
jl
lret
pop
vmovntps
xchg
inc
jae
mov
icebp
xchg
movsl
inc
int3
arpl
idivl
adc
adc
pop
inc
outsl
and
xchg
jns
call
test
shrb
mov
std
sahf
out
gs
nop
imul
xor
xor
xchg
dec
sub
mov
fistpll
mov
mov
std
movsl
push
sti
cmpsl
test
scas
inc
and
pop
dec
xchg
repnz
push
popf
mov
cli
jmp
je
test
mov
mov
adc
fstpt
cmp
cmp
mov
jg
sub
and
inc
js
insb
pop
js
lods
aas
mov
pop
sbb
loopne
stc
or
adc
icebp
in
aam
mov
test
add
cwtl
push
pop
pop
cwtl
jo
push
mulb
js
out
jge
mov
sahf
imul
popa
jae
jl
inc
xchg
shll
ret
aam
cmp
ljmp
add
in
xchg
push
lock
push
dec
cs
pop
push
daa
sub
jnp
cmpsb
jns
xor
repz
addr16
or
xor
sbb
push
popf
inc
cmp
jae
insb
cmp
or
fsubs
sub
outsb
xor
iret
jl
sub
xor
in
mov
scas
add
pop
mov
push
push
add
push
adc
pop
filds
inc
adc
pop
sti
test
or
iret
push
and
mov
rcll
arpl
jno
add
sub
insb
mov
clc
jae
jb
ret
pop
xchg
test
mov
sub
inc
outsl
xor
cmp
cmp
mov
and
cwtl
xor
pop
data16
sbb
lahf
call
stos
mov
jle
mov
jl
mov
hlt
sub
stos
imul
push
pop
sbb
mov
in
adc
mov
aam
repnz
aaa
shrl
jle
xchg
adc
cmp
and
mov
jbe
and
add
cmp
fstl
stos
jo
enter
mov
ret
mov
popf
mov
fcom
int3
popf
mov
out
cmpsb
orl
pop
fistpll
mov
clc
in
jbe
cltd
mov
mov
inc
hlt
movsl
xchg
inc
lea
or
pusha
outsb
or
dec
scas
push
push
rorb
fsubs
imul
dec
and
out
lret
fmuls
cli
xchg
sub
lret
test
jge
xchg
gs
cmp
push
dec
scas
dec
mov
out
cmp
add
sbbl
clc
loope
dec
jbe
fnstenv
dec
sbb
push
jp
xor
dec
adc
rorl
push
imul
movsl
test
mov
mov
movsb
mov
xchg
test
rolb
xchg
pop
into
mov
pushf
cmp
sub
dec
xlat
ja
pushf
out
push
pop
jae
adc
in
xor
fildll
jle
clc
jnp
cmpsb
xchg
cld
inc
add
xorl
idivl
clc
push
mov
sub
xlat
xor
pop
int
mov
test
mov
xchg
stos
lock
mov
sub
stos
or
lods
mov
ret
dec
xchg
sbb
test
pusha
mov
or
adc
pop
stos
inc
enter
jne
push
fs
or
adc
movb
xchg
out
and
inc
stos
or
test
mov
mov
push
sti
ds
push
scas
lea
fbld
xchg
inc
dec
mov
roll
repz
test
loope
pop
arpl
sbb
fldcw
mov
out
pop
or
cltd
scas
mov
gs
aam
into
pop
push
lcall
add
mov
fwait
add
and
sub
push
pop
addr16
and
mov
jge
pop
pop
out
mov
fistl
roll
jb
icebp
xor
push
into
push
mov
ja
xorl
xchg
pop
mov
push
dec
bound
inc
xlat
jb
scas
out
out
aas
push
mov
ja
or
cmpsb
sbb
push
popf
lret
cmpsb
mov
insb
adc
hlt
adc
push
scas
jbe
sahf
sbb
jmp
ror
adc
push
mov
mov
push
sub
movsb
push
repnz
lea
daa
sbb
sub
add
movlps
adc
outsl
test
aas
dec
fwait
shlb
clc
mov
adc
and
mov
icebp
jecxz
push
ja
mov
xchg
rclb
cmp
dec
insl
jge
or
dec
lds
add
test
cli
rcl
mov
fs
dec
dec
sbb
jne
mov
rolw
pop
lds
ret
add
mov
shlb
xor
shl
push
outsb
mov
cwtl
sbb
loopne
inc
dec
and
inc
jge
jl
or
sub
xor
cld
lock
fstl
push
ret
mov
pushl
xchg
cmp
xor
mov
jge
ds
mov
loop
popa
or
dec
adc
lods
xchg
pop
adc
adc
loope
mov
or
js
or
aad
jae
dec
add
orb
cmc
mov
out
jmp
and
dec
pop
cmpsl
dec
mov
das
pop
jg
lret
sahf
testl
das
cmc
ret
pushf
inc
push
cmp
cmc
aam
call
enter
pop
pop
pop
mov
sub
jno
aad
and
int
adc
pop
rorb
out
adc
inc
pop
sbb
mov
jmp
xchg
xchg
sbb
addr16
shlb
and
repz
das
adc
out
lahf
mov
mov
lcall
sbb
and
inc
ficoml
rcll
jb
lea
mov
int3
stc
and
and
test
mov
push
negl
cltd
pop
xchg
jno
inc
jnp
pop
and
imul
test
lea
push
adc
jo
scas
and
adc
test
aam
scas
punpckldq
neg
scas
das
xlat
fbstp
push
xor
push
jnp
ss
repnz
scas
lods
mov
mov
inc
out
pop
pop
mov
inc
xchg
arpl
ss
fnstcw
ja
shrb
pop
push
rol
adc
and
shr
scas
cmp
mov
sub
push
inc
mov
mov
into
adc
arpl
mov
mov
call
or
inc
les
in
lret
aad
sbb
sbb
mov
lea
int
mov
xor
mov
add
mov
lods
add
cmp
add
insb
ss
sub
dec
shrl
mov
push
push
in
inc
sub
sti
pop
hlt
mov
xchg
mov
jg
jnp
jmp
cli
xchg
mov
mov
in
int
dec
inc
jae
jmp
adc
jae
sbb
iret
pop
push
leave
das
into
lcall
or
inc
inc
push
push
int
or
xlat
out
scas
stc
jne
fstpt
xchg
dec
push
cli
out
imul
jecxz
pop
mov
xor
sbb
fucomip
or
into
mov
enter
xor
cltd
popf
xor
js
xchg
adc
push
icebp
jbe
rol
push
jno
test
or
scas
dec
mov
add
out
xor
fdivl
xor
insl
test
cmp
jb
in
push
pop
inc
inc
daa
negl
aam
stos
mov
dec
xor
inc
mov
sub
xor
inc
or
mov
sbb
sbb
outsl
add
fnstsw
push
fcom
push
add
aaa
mov
jge
loope
cmp
aad
mov
cli
cwtl
shlb
fimull
rclb
fldt
pushf
sub
xchg
imul
gs
flds
xchg
out
push
cmp
push
test
mov
lret
out
mov
push
and
into
inc
cmp
movsl
cmpsl
fwait
cmpsb
ss
fstps
lock
mov
out
scas
xchg
xchg
jmp
xor
scas
lds
cs
pop
subb
dec
das
dec
mov
xchg
push
jle
cli
sbb
xchg
imul
jp
mov
ds
clc
jecxz
adc
int
push
loop
mov
out
inc
sbb
iret
xor
xor
fsubrp
cmpsb
add
adc
bound
push
jbe
cmp
and
loope
cli
sbb
mov
mov
xor
xlat
inc
cmp
in
andl
mov
and
xchg
pop
jl
test
pop
add
cmp
sahf
xor
xchg
inc
jmp
dec
mov
and
das
pop
test
xlat
xor
dec
lods
ds
dec
cmc
mov
mov
or
push
imul
inc
cli
cmp
cmp
out
insl
rcrb
jg
movsl
faddl
popa
mov
divb
xor
xchg
lods
xchg
and
jmp
lret
fs
xchg
xchg
hlt
jno
inc
imul
xchg
pop
pusha
mov
stos
adc
lahf
pop
or
cmpsb
test
cld
push
ljmp
cwtl
insb
popf
sbb
push
xor
or
cmpsl
clc
orb
arpl
dec
push
bnd
iret
jmp
push
fistpll
and
xchg
adc
cmpsl
std
mov
pop
sbb
xchg
insl
fisttps
adc
fs
fistps
mov
movl
mov
push
or
sbb
rolb
std
or
subl
push
jo
lahf
test
cltd
add
inc
mov
mov
jmp
pop
lahf
xchg
or
jns
dec
sbb
mov
arpl
push
mov
or
dec
adc
jbe
fisttps
nop
xlat
scas
nop
pop
in
push
sarl
fistpll
mov
adc
js
and
jbe
inc
mov
mov
fdivrl
cmp
arpl
sub
inc
out
pop
xor
push
rcrl
test
cmp
les
mov
dec
push
fyl2x
or
out
in
or
push
fdivl
lods
or
shl
shrb
xchg
inc
push
test
outsb
les
clc
enter
mov
fidivrs
sbb
mov
scas
cmc
clc
mov
push
iret
je
fidivrs
sbb
je
xchg
dec
jle
sbb
mov
xor
jmp
fmuls
imul
andb
sbb
xor
jecxz
int
cmp
cmp
cli
ds
and
xor
xchg
adc
enter
cmp
push
out
test
jo
inc
sub
cmpsb
pop
push
test
or
sbb
mov
dec
sahf
test
mov
inc
int
inc
mov
insb
sbb
rclb
nop
movsb
pop
or
ljmp
xchg
adc
mov
xchg
pop
or
les
and
ja
push
push
inc
xor
stc
inc
dec
jp
inc
jmp
and
mov
inc
imul
ret
add
sbb
aas
and
dec
adc
jno
in
popf
mov
push
jmp
mov
or
and
add
jmp
push
or
cmpsb
leave
lret
sarl
xor
xor
push
test
mov
jg
daa
aaa
lea
fs
ds
sbb
lret
xchg
movsl
mov
mov
xor
xorb
lds
dec
jo
repnz
icebp
loope
mov
addr16
test
lret
xor
push
fsubr
outsb
pop
das
arpl
sub
xlat
or
cltd
shlb
dec
sbbl
leave
sbb
into
mov
movl
call
mov
ja
fwait
and
cmp
imul
cltd
dec
fistpl
inc
ficoml
sbbl
outsb
lds
inc
repz
push
push
mov
jae
bound
jle
movsb
out
je
push
int
inc
and
mov
push
jae
sti
or
sbb
mov
bound
adc
jne
push
push
fistpll
faddl
in
test
inc
sub
call
adc
notl
fwait
pop
and
subl
clc
ss
mov
mov
pop
ret
push
roll
outsb
in
int3
and
add
int
mov
add
or
mov
mov
or
pop
pop
mov
rolb
popl
xchg
xchg
or
aaa
cs
pop
sub
cltd
adc
enter
mov
lds
andb
out
lret
outsb
dec
and
or
adc
mov
jne
jne
int
int3
xor
inc
das
sub
mov
xchg
mov
cmp
outsl
cmpsl
mov
adc
push
stos
jo
or
xor
int3
or
je
icebp
or
adc
fmulp
mov
int
inc
pop
bound
outsb
mov
scas
cwtl
jmp
outsb
jmp
lcall
jmp
cmp
xlat
popf
cmc
test
add
xchg
add
pop
repz
mov
dec
fwait
insl
fidivrl
mov
xchg
push
jbe
xchg
testl
mov
push
aaa
out
fildl
adc
iret
in
mov
xchg
mov
aas
and
xchg
shrl
shll
add
data16
adc
hlt
xchg
hlt
dec
rcl
outsb
pop
cmc
jns
jge
lds
pop
push
loop
aad
fsubr
push
sub
and
xchg
jg
rcrl
pop
roll
dec
clc
xchg
pop
sahf
adc
scas
and
rolb
repz
aam
int3
sub
imul
mov
jbe
lea
popf
hlt
adc
stc
xor
adc
add
js
cltd
sbb
and
push
imulb
shrb
fs
fabs
xor
dec
psadbw
xchg
subl
popa
in
mov
int3
out
or
mov
sbb
pop
sbb
test
xchg
lods
mov
mov
mov
add
dec
add
adc
aas
stos
jno
scas
frstor
aas
mov
pop
push
inc
test
xor
iret
or
mov
outsl
inc
gs
aaa
hlt
or
mov
dec
lcall
or
imul
lods
dec
loopne
test
frstor
xlat
jns
xchg
enter
lock
pop
jns
dec
sub
cmp
icebp
or
jnp
fiadds
cmc
mov
sub
adc
pop
or
push
push
int
adc
push
jp
xchg
sbb
js
and
xor
add
and
pop
pop
xor
push
adc
mov
inc
push
subb
xchg
pop
jecxz
adc
stos
and
add
sbb
mov
outsb
js
adc
into
jg
and
cmp
pop
mov
xor
testl
pop
in
lret
flds
sbb
enter
sbb
shll
aam
cwtl
add
out
stos
jb
push
cmp
push
adc
add
sbb
mov
fsubrl
jo
pop
add
pop
add
xor
ds
sbb
pop
int3
cmp
imul
repnz
iret
outsb
adc
fnstenv
frstor
rorb
sub
sti
int3
lods
mov
std
mov
data16
imul
mov
pop
lret
add
add
and
out
sarl
out
add
pop
es
or
push
int
aad
int3
testl
or
ja
adc
sti
cmp
lret
cmp
loope
test
adc
pop
add
add
inc
sbb
sbb
das
or
jle
fmul
movsl
xchg
push
fmul
arpl
xchg
dec
inc
mov
sbb
imul
jp
test
push
jmp
jg
mov
sub
jp
int
cmpsb
push
repz
adc
inc
sub
pop
jle
int
mov
inc
add
cli
aad
pushl
out
jno
or
mov
sub
adc
push
mov
sbbl
mov
cmp
inc
push
clc
jb
imul
clc
jo
push
xor
fsubs
mov
cmp
ds
fsincos
cmp
push
into
sub
xchg
das
or
sbb
adc
xor
xchg
and
pusha
inc
mov
dec
fisubrl
scas
mov
js
inc
xor
jge
pop
xchg
or
pop
lea
inc
dec
cld
sbb
adc
lods
mov
out
fmul
push
inc
or
inc
sub
jbe
mov
nop
mov
inc
pop
lcall
lods
or
inc
ds
hlt
mov
leave
imul
push
lret
outsb
xor
aad
scas
mov
jne
xlat
adc
pop
xor
pop
fisttps
dec
bound
xchg
lods
jbe
cmc
sbb
cld
mov
in
inc
add
rclb
out
push
xor
ljmp
cmpb
outsl
adc
and
cltd
mov
and
ds
xchg
roll
nop
in
std
xchg
lods
dec
fldt
arpl
dec
andb
pop
push
push
adcb
bound
fwait
mov
mov
push
ja
out
and
icebp
fildl
jne
add
or
adc
sub
pop
addr16
daa
sahf
ja
or
jnp
frstor
ffree
mov
push
dec
xor
sbb
jle
lcall
jmp
repz
out
push
mov
mov
aad
fsub
imul
arpl
fst
and
mov
jle
imul
jmp
rcrb
out
pop
stos
sbb
call
pop
mov
push
jle
into
addr16
sbb
add
jl
mov
sbb
sti
imul
mov
inc
xchg
push
and
cs
in
mov
mov
imul
mov
and
jns
inc
cmpsb
xchg
pop
cld
xchg
push
mov
or
mov
xchg
push
push
clc
pop
mov
loop
stc
jge
das
insb
stos
ja
push
and
rorb
stc
cltd
fdivl
xor
xchg
loopne
sbb
adc
inc
pop
js
ret
imul
mov
imul
aam
inc
jecxz
lahf
data16
pop
into
push
dec
ljmp
adc
or
fldcw
cmpsl
add
lret
in
popw
popa
or
pop
or
repnz
faddl
add
call
pop
sbb
aad
cwtl
test
add
hlt
popa
add
shlb
jns
sub
pop
jg
inc
lods
ror
xchg
sub
and
inc
testl
mov
and
call
iret
out
mov
push
cmp
xchg
sbb
xor
add
mov
jno
push
ret
jecxz
movsl
mov
nop
dec
dec
adc
push
fbld
adc
movsl
xchg
test
inc
pop
dec
aaa
push
cmpsl
xor
repnz
mov
adc
gs
push
in
sub
shr
mov
mov
mov
pop
divl
inc
xchg
or
pop
pop
cmp
test
pop
sti
cli
push
adc
mov
enter
inc
fs
nop
cmp
test
mov
aad
adc
mov
or
hlt
add
mov
sub
jae
aaa
stos
pop
int
loop
cmpsl
imul
lds
and
pushw
movsb
hlt
adc
sub
xor
mov
jge
insb
movsb
add
sub
cmpsl
jmp
lret
and
fdivp
movsb
cmp
leave
mov
dec
sti
pop
sub
andb
popf
push
pop
adc
jo
jp
movsb
out
adc
aas
and
mov
sub
jae
fidivs
mov
mov
xchg
ret
push
xchg
addr16
addr16
push
mov
push
shl
fcmovnu
inc
add
pop
gs
fs
push
loope
jo
int
adc
in
addr16
in
bound
xchg
mov
ret
xchg
push
test
cmp
dec
cwtl
ds
gs
cmp
pop
adc
popa
jb
and
cwtl
mov
dec
imul
out
loopne
mov
cmp
leave
or
scas
inc
fwait
std
and
insl
inc
in
pop
test
lea
nop
stos
xchg
cwtl
mov
mov
jnp
xchg
sbb
lock
xchg
cwtl
jle
in
mov
cld
cmpsl
and
sbb
fildll
xchg
mov
test
dec
enter
in
cmpl
call
sbb
sub
jae
test
sbb
pop
sub
inc
iret
mov
push
out
arpl
lret
pop
pop
mov
dec
inc
sbb
jno
mov
add
push
iret
fnstenv
popf
fcompl
jo
test
les
mov
mov
popa
push
sbb
popa
jnp
push
push
daa
jg
xlat
mov
sbb
xchg
mov
addb
aaa
sub
pop
pop
dec
mov
xchg
or
cld
loopne
add
add
lahf
add
add
or
push
xlat
mov
mov
mov
mov
sbb
add
in
out
imulb
dec
das
pop
aad
xor
fwait
mov
sbb
push
loope
lret
or
and
inc
dec
imul
or
test
int3
mov
jne
aam
in
mulb
cwtl
aam
test
add
mov
sub
mov
mov
inc
jbe
dec
xchg
xor
cli
and
sbb
xchg
dec
imul
hlt
xchg
loopne
or
mov
inc
xchg
sar
jbe
pop
pop
call
jle
push
out
sub
cmp
jge
idivl
sti
add
push
add
fstpt
cwtl
adc
loop
cltd
icebp
test
mov
pop
in
or
sbb
mov
popa
iret
mov
pop
dec
dec
out
xor
jbe
fisubrl
test
mov
pop
pop
mov
insb
sub
push
add
xor
cltd
addr16
pop
mov
jecxz
loope
pop
das
push
add
cmp
push
rorl
inc
mov
push
stos
lds
into
lods
jmp
sbb
xchg
aam
and
aad
xchg
adc
xchg
lret
fs
mov
mov
std
push
pop
dec
dec
adc
pusha
xor
sbb
pop
jg
adc
pop
pop
aad
jb
dec
xor
mov
mov
sahf
aad
fisubrs
jp
sub
mov
and
add
inc
mov
int3
fwait
xchg
sbb
pop
sar
adc
es
cmp
pop
loop
cld
stc
dec
or
addr16
jb
fsubl
jle
enter
insl
mov
mov
test
sahf
imul
imul
movsb
scas
jmp
jbe
rcrl
js
movsb
scas
int3
js
nop
test
sbbl
lcall
imull
mov
divl
xchg
and
jbe
and
std
sarb
aam
add
aas
adc
lcall
bound
repz
stc
mov
int3
inc
dec
fsubr
pop
loopne
lret
and
xchg
icebp
push
adc
cmc
fwait
cli
loopne
imul
cli
icebp
stos
cmc
and
pusha
icebp
push
mov
xor
xchg
pop
jecxz
jns
pop
lret
stos
dec
and
in
in
sub
cmp
sbb
jbe
pushf
nop
subl
dec
and
add
jp
out
lods
mov
subl
insl
fwait
pop
mov
or
add
lcall
imul
pop
pop
data16
sbbl
sub
cmp
inc
adc
and
inc
jecxz
js
cmp
stos
outsl
sbb
sub
in
mov
out
aas
mov
cltd
jmp
hlt
push
mov
shll
jo
cmp
pop
or
scas
jg
shr
cmc
jb
cmp
jmp
mov
lods
mov
pop
outsl
mov
or
push
stc
into
pop
xchg
push
orb
jl
xor
inc
mov
out
xchg
xchg
push
lahf
das
shrb
stos
xor
mov
hlt
fiadds
hlt
jnp
or
push
add
adc
fisubrl
xchg
clc
add
xchg
out
in
sbb
sti
in
push
lret
mov
pop
cmp
adc
xor
dec
dec
xlat
push
test
cmp
popf
roll
movsl
sub
or
push
aas
cmp
xchg
repz
xor
test
dec
mov
pop
in
call
test
push
pop
xchg
ret
das
dec
mov
inc
jbe
shrb
mov
add
mov
xchg
daa
mov
scas
add
scas
pop
into
in
es
ficoms
fstps
add
xor
push
pop
ljmp
inc
aaa
test
movsl
inc
push
hlt
aam
dec
test
fs
fsts
test
orl
or
add
daa
jmp
xchg
jmp
mov
xchg
push
jbe
dec
in
jb
loop
mov
sbb
sub
test
mov
mov
and
pusha
push
mov
mov
mov
mov
dec
hlt
sub
push
add
cmc
xor
mov
fs
mov
xchg
mov
rcr
dec
or
mov
push
aam
fwait
aas
stos
fcomi
mov
push
push
shrl
iret
mov
je
hlt
sub
or
test
cld
xor
arpl
jne
jmp
dec
jecxz
movsl
stos
out
mov
jmp
inc
leave
scas
jg
out
scas
inc
jo
jmp
inc
adc
mov
fnsave
je
shrl
mov
stos
dec
iret
add
jecxz
aam
cli
dec
shlb
push
jb
lea
shl
insb
jge
pop
icebp
es
mov
enter
insl
sti
push
dec
in
shrl
inc
lahf
loopne
or
adc
cltd
push
sub
inc
lods
out
mov
mov
lds
ja
mov
les
adcb
xor
lea
imul
add
aaa
std
sbb
scas
shrb
loopne
cs
sub
je
mov
aam
clc
ror
nop
mov
or
addr16
mov
cmp
pop
xor
fs
mov
add
bnd
inc
mov
daa
cmp
mov
orb
lods
out
imul
es
sub
int
cmp
sub
cmp
adc
pop
sbb
dec
adc
jg
adc
int
pop
out
les
pop
ficoms
jne
or
sbb
test
outsl
and
jmp
inc
imul
addl
sub
lret
scas
lods
pop
mov
mov
or
mov
call
pop
xchg
push
inc
pusha
test
inc
out
push
je
cmc
jne
push
pop
shl
mov
lret
or
in
in
insl
call
cmpl
dec
sbb
mov
mov
jmp
stos
insb
and
mov
pushf
jle
in
lods
add
fsts
lods
ret
mov
sub
fucomi
lea
xchg
call
in
sub
or
mov
rol
push
mov
test
clc
jmp
test
iret
outsl
or
sbb
das
add
mov
lret
or
fsubp
roll
hlt
jns
push
mov
call
jecxz
mov
push
not
lods
cld
pop
sbb
out
cs
push
dec
xor
sub
rorl
ret
test
sub
adc
mov
add
pop
outsl
dec
jno
ds
inc
and
std
dec
mov
cli
loopne
data16
mov
cs
push
orb
adc
and
out
push
aad
adc
sbbl
and
jne
sub
imul
fistpl
push
in
pop
movsl
sub
testl
fistl
cli
xchg
inc
popf
push
mov
pshufw
jge
push
leave
or
rolb
push
sahf
lock
imul
ret
loopne
std
aaa
dec
push
test
xrelease
jnp
lds
add
mov
jno
jbe
xchg
xchg
and
jmp
je
js
cmp
lret
push
adc
es
mov
out
enter
lods
and
dec
jg
mov
cs
inc
push
dec
xor
push
div
xor
mov
inc
lods
sbb
xor
lret
lock
mov
testl
sbb
je
cltd
push
mov
stos
adc
pusha
push
lods
and
cmp
subb
lods
xchg
in
push
imul
imul
imull
movsb
scas
sbb
sub
mov
adc
rcl
dec
movb
test
rclb
pop
jae
sbb
insb
mov
mov
xchg
fsubs
loop
fnstenv
jbe
mov
enter
xchg
in
pop
jp
push
mov
push
inc
movsb
cwtl
xchg
xchg
pop
xor
inc
lea
ret
outsl
addr16
outsb
mov
xchg
ret
cmp
call
repnz
pop
jecxz
pop
pop
and
dec
sub
in
pusha
inc
test
lret
js
mov
fsubs
daa
jno
pop
mov
int
icebp
outsl
dec
faddl
xchg
mov
insb
mov
shrl
lods
popa
sub
sbb
pop
push
mov
dec
push
jo
mov
loope
scas
jge
test
and
fidivrs
add
and
outsb
or
mov
mov
shlb
lret
pop
mov
std
pusha
lds
xor
jne
sahf
ficoms
fstps
xchg
mov
push
jmp
ja
xor
cli
push
adc
xor
clc
adc
push
add
lea
sub
gs
adc
imul
ja
xchg
in
sbb
cs
mov
mov
sbb
add
jnp
adc
sub
stos
sar
ret
jge
stos
xchg
pop
movsl
mov
aam
or
jecxz
call
cltd
jmp
ljmp
aas
adc
and
dec
lods
mov
mov
lret
aas
les
mov
jnp
push
sbb
adc
nop
mov
inc
ds
pop
outsl
xor
jg
out
inc
lret
aas
int3
mov
imul
sahf
pop
jge
cwtl
cmc
pop
test
cmc
lcall
xorb
xchg
icebp
stos
cmp
aam
out
adc
mov
pop
test
stos
lret
and
jmp
xor
js
scas
sbb
jb
jae
pop
clc
movsb
xor
push
mov
push
mov
arpl
adc
pop
mov
in
inc
rcrl
aas
mov
fidivrl
mov
mov
push
sbb
fisttps
mov
imul
mov
repnz
cmp
out
mov
xorb
scas
dec
into
ds
pop
dec
inc
pop
hlt
ja
fdivs
push
inc
andl
loopne
lahf
fucomp
std
inc
lods
push
orl
pop
sbbl
mov
mov
arpl
enter
and
pop
xor
out
in
and
mov
jp
cli
add
stos
out
outsl
jecxz
jl
mov
lcall
lea
sub
fwait
mov
aas
sub
mov
sbb
test
xor
add
je
ja
cmp
add
leave
mov
jb
idiv
adc
mov
fidivrs
cmpsl
adc
cmp
sbb
andl
mov
sub
jae
mov
test
and
or
and
push
jnp
jp
mov
sti
sarb
sub
dec
cmpsb
in
push
push
mov
cmpsl
orb
cmpsb
inc
sbb
mov
mov
aaa
xchg
add
pusha
add
jmp
adc
call
sbb
cmp
sbb
mov
xor
inc
pop
mov
jb
ret
pop
es
outsl
sub
aad
test
xlat
es
pop
test
mov
jno
aam
xchg
divl
mov
jb
add
fistpll
fwait
pushl
inc
xor
ret
leave
ret
rcr
into
in
pop
jg
cmc
adc
mov
or
sub
or
fwait
fwait
xchg
pop
js
lea
mov
inc
mov
push
sbb
add
fidivl
ret
stos
and
in
cmpsb
ret
jae
cs
arpl
cmp
xorb
adc
fsubrp
sarl
into
xchg
mov
jge
sub
les
lock
inc
cmpsl
pop
inc
cmp
jae
rorb
sub
call
push
sub
dec
xchg
fcom
push
or
sub
dec
ja
dec
out
xchg
or
dec
cwtl
mov
pop
out
int
xlat
in
and
leave
mov
pop
add
mov
repz
push
dec
movsl
bound
jge
ljmp
pop
leave
jg
adc
jecxz
jmp
lock
add
pop
xor
jg
loope
ljmp
cmp
or
and
rorl
push
ds
dec
mov
add
cld
sbb
mov
push
test
or
fldenv
cmpsl
btr
test
sbb
add
add
lea
and
stos
dec
cld
xchg
rclb
mov
and
pop
sub
or
adc
repnz
inc
xor
adc
push
ja
sarl
mov
push
cwtl
lods
dec
in
xchg
insl
push
ret
bound
loopne
jmp
sbb
cltd
hlt
rclb
jbe
and
xchg
mov
inc
test
rolb
js
test
jl
and
adc
fmull
push
pushf
push
aaa
test
sbb
inc
sbb
stos
push
push
gs
pop
test
fists
ljmp
movsb
aad
bnd
and
fcmovb
aaa
ret
rcrb
pop
cmpsl
mov
cmc
and
xor
mov
cli
xor
gs
hlt
pop
mov
dec
push
add
les
fimuls
lret
pop
mov
lret
and
mov
clc
adc
leave
adc
mov
sub
xchg
jno
stc
imul
mov
ljmp
mov
fimull
out
adc
gs
aad
shll
or
scas
enter
xchg
push
pop
into
mov
or
sbb
xorl
xor
or
sarl
movsl
lret
mov
hlt
dec
cmp
rep
mov
pop
cmp
bsf
xchg
and
shl
call
lret
pop
scas
cmp
in
push
push
mov
or
std
jmp
push
imul
pop
scas
add
pop
dec
sub
test
inc
adc
mov
popf
dec
mov
fldl
adc
outsb
or
iret
stc
or
iret
loopne
sub
jg
xchg
call
jb
xchg
inc
loop
daa
je
mov
lret
aam
and
sub
sbb
daa
inc
add
rdtsc
je
cs
mov
xlat
sbb
sbb
jne
or
jle
pop
pop
repnz
jg
jbe
imul
adc
rolb
cs
mov
in
cli
stos
test
call
aam
popf
imulb
imul
mov
ja
xchg
xchg
test
ljmp
adc
add
ja
cld
lret
jmp
xor
mov
mov
int
iret
mov
popf
pop
pop
xchg
mov
jmp
lods
cli
mov
pusha
iret
lcall
xlat
aas
aad
mov
cmp
cmp
push
lahf
int3
push
sub
inc
outsb
cld
jne
stos
fiaddl
loope
fmull
push
test
mov
jmp
sbb
in
mov
int3
fs
push
pop
clc
sbb
jg
jo
int3
inc
cltd
adc
cmp
add
sahf
push
das
xchg
inc
rcll
mov
sbb
mov
loope
or
jl
call
push
das
lock
scas
xlat
cmc
scas
inc
imul
testl
imul
popf
test
lcall
jb
addr16
pop
cmp
test
sbb
les
sbb
inc
aaa
jl
ds
popf
int
mov
enter
xor
fldcw
clc
adc
dec
cmpl
xor
cmp
shl
movsl
add
jg
cmpsl
daa
xor
cmp
imul
dec
push
notl
out
fmuls
mulb
pop
jge
pop
pop
mov
es
and
pop
fildll
lret
xchg
dec
fs
sub
add
lods
mov
mov
loop
xor
in
mov
mov
aad
xchg
repnz
into
loop
jo
push
int
mov
mov
sub
jge
or
shrl
cmp
mov
stos
pop
pop
and
sub
mov
ja
mov
cs
sbb
fcmovnb
imul
mov
enter
mov
into
xchg
xlat
pop
mov
andb
adc
pop
sbb
adc
mov
fistl
add
ret
adc
sbb
pop
dec
mov
push
cld
nop
leave
push
nop
or
push
fildll
out
nop
lods
sar
xor
or
mov
push
mov
mov
push
insb
mov
out
ljmp
lea
aas
subb
sarb
shrb
mov
aam
mov
cmpsl
mov
dec
rcl
ficomps
das
mov
clc
sub
movsl
add
or
push
adc
or
jo
or
stc
xor
adc
xor
call
lahf
jns
not
daa
loope
jg
jno
jae
int3
shrb
ja
xchg
add
outsl
xchg
cmp
loopne
out
insl
fcoms
mov
imull
stc
sbb
or
xor
cltd
subl
adc
cmp
arpl
mov
lods
dec
adc
bound
dec
aad
mov
pushf
dec
loopne
stos
dec
ret
insb
mov
jne
mov
scas
fcoms
mov
mov
mov
shlb
and
dec
pop
inc
insl
jne
adc
or
repz
xchg
stos
test
fidivl
ds
test
and
mov
ljmp
adc
mov
push
lea
fsubl
mov
jb
movsl
cs
nop
jne
in
xchg
dec
enter
aad
push
sub
sub
fimuls
fists
jmp
popa
xchg
movsb
rcl
ja
stos
insb
sub
mov
lea
test
jmp
sub
roll
bound
aad
jne
testb
jecxz
lea
lods
lahf
dec
xchg
pop
ficoml
sti
dec
test
pop
jnp
mov
jmp
jle
push
negb
inc
mov
xor
sbb
outsb
icebp
mov
sub
or
imul
ja
inc
push
fnsave
jp
stos
xchg
bound
or
lahf
pop
inc
mov
and
out
fcompl
aam
inc
jbe
mov
call
psrlq
push
inc
cmp
jae
mov
xor
stc
aad
cmp
jno
das
push
cli
add
mov
jnp
ds
jge
mov
out
aam
callw
insb
pushf
stos
mov
sub
and
scas
and
jl
ficoms
mov
mov
dec
lods
cwtl
fs
mov
mov
inc
push
sbb
sbb
or
xchg
sarl
or
gs
sbb
sbb
das
lcall
mov
fistps
sub
js
mov
dec
notb
pusha
fdivrs
repz
xor
jbe
sub
test
fdivl
xor
dec
fwait
add
xor
pushl
daa
fistps
cwtl
rclb
jge
inc
je,pn
jp
mov
fildll
je
inc
and
andl
cmpsb
xlat
inc
inc
std
mov
in
sar
jmp
and
jmp
dec
jg
fxch
pop
cltd
push
cltd
cmpsl
mov
or
int3
aad
sub
loopne
mov
and
test
dec
bound
inc
aam
int
pusha
aad
imul
inc
inc
push
nop
and
test
addr16
rorb
adc
aaa
cmpsl
packsswb
push
jnp
aam
arpl
cmc
out
cld
imul
mov
les
ss
movsl
cmpsl
clc
rcl
pusha
cmp
rolb
xchg
push
mov
inc
mov
add
pop
add
mov
mov
ret
xchg
push
mov
and
dec
fisubl
sub
int3
into
loopne
cmpsl
jae
sub
xchg
sti
int
and
loopne
sbb
dec
mov
adc
push
pop
inc
push
push
lret
les
xor
mov
imul
inc
imulb
pop
xchg
lret
outsl
cmp
push
mull
mov
nop
lods
lea
cwtl
inc
clc
mov
test
mov
push
ret
lret
test
and
popf
daa
dec
pop
xorb
xchg
nop
ljmp
dec
popa
sbb
shl
mov
sbb
pusha
and
int
idiv
movsb
and
push
jp
imul
jmp
stos
pop
mov
movsl
pop
out
subl
sbb
xchg
pop
addr16
testl
jne
insl
enter
xor
cmp
mov
xchg
add
test
test
imul
aaa
push
pop
cmp
lret
mov
dec
and
daa
jl
add
imul
movsl
aaa
xorb
xor
aad
xchg
lahf
jmp
sbb
xor
loope
adc
fcoml
movsl
pop
xor
shll
clc
incb
add
push
lods
scas
sbb
es
sub
add
inc
inc
mov
add
arpl
fs
cmp
je
lods
sub
nop
aas
daa
stos
and
pushl
xchg
fucom
mov
mov
sbb
cmp
pushf
inc
push
and
jp
stos
pop
xchg
jp
lods
sbb
push
mov
cmp
mov
sbb
cmc
popa
mov
cmp
test
ret
and
ret
into
aaa
pop
stc
mulb
mov
adc
repz
mov
push
pop
jae
daa
ds
mov
mov
test
stos
jbe
xchg
and
test
pop
sub
fwait
sub
pop
xor
xchg
stos
frstor
int
mov
imul
push
mov
shll
pop
inc
lret
je
pop
imul
jmp
data16
xchg
pop
jmp
sub
adc
pushf
dec
out
int
addb
pop
scas
xchg
inc
sti
repz
inc
fwait
mov
insb
lahf
cmp
sub
inc
add
adcl
sub
lods
int3
sbb
in
test
xchg
mov
adc
notl
add
repz
mov
push
insl
xchg
ret
inc
rol
stos
or
fistl
jecxz
cs
adc
in
pop
lods
out
push
cmpsb
imul
sti
test
movsl
mov
ljmp
sarb
add
shr
shll
push
lods
outsw
mov
in
add
mov
jns
add
add
jmp
jle
call
cmp
xsha256
cmpsb
xchg
add
xorl
sub
sbb
bound
xchg
pushf
mov
sub
frstor
or
daa
dec
sti
dec
enter
dec
fstl
adc
rol
or
mov
xor
pop
int3
jnp
mov
push
xor
sbb
fisubs
xchg
dec
repz
jb
cmp
sahf
jae
push
pop
jg
or
or
mov
sbb
iret
inc
xchg
inc
cmp
jnp
mov
sbb
and
pop
rcl
movsl
pop
js
repnz
pop
into
rol
stos
cwtl
mov
dec
jae
out
movsb
xchg
out
mov
popa
mov
cmc
std
mov
mov
cmpsb
xchg
insb
jg
sbb
jecxz
bound
or
mov
das
xchg
int3
jl
mov
sbb
sub
jge
xlat
jnp
fincstp
jbe
popf
push
cmp
mov
scas
cltd
lea
or
incl
xor
pop
jp
ret
ljmp
scas
dec
jge
push
cmp
xchg
outsl
pop
mov
cmp
xor
aas
movsb
rclb
xor
sarl
jle
mov
inc
mov
push
sub
pusha
arpl
adc
push
outsb
jmp
popf
repnz
out
cltd
in
inc
testb
pop
sbb
xchg
bound
das
add
mov
sahf
inc
jmp
pop
cmpsb
insb
int
popf
adc
lods
scas
gs
aam
sbb
sarl
xor
cmp
sub
scas
out
inc
adc
and
cmc
xor
and
iret
popa
addr16
mov
xlat
adc
lods
and
bound
sub
adc
ficoms
push
sub
cmc
inc
icebp
mov
and
xchg
pop
mov
movsl
mov
dec
daa
adc
mov
outsb
and
xadd
sub
aaa
mov
jno
cmp
les
mov
mov
sub
jne
enter
lea
into
cmp
or
dec
inc
out
fistps
and
cld
mov
int
push
es
adc
cmpsl
jb
sub
std
dec
lret
mov
test
mov
pushf
sahf
das
fsubs
aaa
mov
inc
xchg
push
sti
outsb
pop
xor
pop
xor
fsts
mov
insb
loop
mov
sbb
add
cmpsl
movsb
and
rorl
push
fidivs
scas
insl
cld
popa
repz
rolb
bound
sub
stos
imul
pop
or
test
movsl
mov
loope
or
arpl
xchg
push
dec
mov
cltd
mov
add
mov
ret
push
pop
xor
jb
stos
sbb
ss
jg
push
dec
xchg
rcr
cltd
push
loop
leave
cld
push
rol
test
fdivrs
mov
icebp
jno
mov
rcrb
mov
cmp
out
into
sub
aad
fwait
jnp
data16
insb
jno
fidivrl
or
sub
mov
pop
sbb
je
es
mov
ret
mov
sub
pop
call
jmp
addl
sub
jl
cld
dec
in
movsl
and
imul
add
test
cmp
sbb
xchg
mov
push
jbe
shl
int3
test
iret
nop
xchg
xchg
push
repnz
lock
loope
adc
out
test
mov
jg
or
sub
bound
repz
adc
cmp
adc
adc
insl
imul
orb
mov
sbb
add
mov
add
mov
aam
push
and
pop
push
arpl
gs
pusha
ljmp
jne
in
test
outsl
fisubrl
xor
xor
fimuls
push
popl
data16
push
xor
frstor
xchg
sarl
pop
jbe
sub
in
mov
in
mov
enter
pop
add
pop
leave
dec
adc
push
repz
sub
jmp
cli
cmc
clc
fxam
cmp
inc
cmpsb
sbb
cmpl
lret
loopne
push
xchg
xchg
sbb
dec
adc
outsb
lds
mov
cwtl
bound
mov
mov
mov
into
jg
and
cld
inc
and
inc
fstpt
popf
stc
push
mov
sub
pop
jl
addr16
lods
cmp
adc
loopne
stc
or
mov
adcb
mov
push
aas
xor
iret
push
push
movsb
int
adc
ja
out
loopne
lret
jg
icebp
mov
in
sbb
push
jne
inc
mov
jns
popf
adc
add
loope
fsubrs
mov
fisttpll
and
sbb
xchg
pop
pop
sbb
int3
outsb
mov
sub
mov
add
scas
sahf
bound
arpl
sub
stc
mov
aas
cld
mov
jg
out
test
sub
negl
call
inc
cmp
fdivrs
test
xor
fdivrp
jnp
adc
add
shr
pop
test
push
push
ljmp
pop
cli
jmp
scas
jmp
lods
imul
push
xchg
inc
addr16
testl
frstor
push
adc
and
xchg
cli
addb
push
jno
test
addb
decb
or
leave
cmp
clc
dec
add
xchg
and
loop
in
cmp
imul
xor
push
je
cmp
in
pop
cmpsl
jbe
mov
stc
push
mov
insb
inc
sbb
mov
jge
mov
jae
adc
jmp
and
xchg
mov
cli
bound
inc
scas
jg
mov
test
rorb
mov
jmp
es
in
mov
or
lret
and
add
jb
and
xchg
mov
xchg
out
lahf
mov
xor
cwtl
push
adc
sub
inc
jle
xlat
dec
ret
mov
test
pop
jle
cld
incb
insb
push
movsl
pop
cmc
lahf
pushf
ds
popa
pop
pushf
mov
sbb
lcall
pop
inc
and
jp
xor
sbb
mov
xor
push
mov
fiaddl
jb
dec
sub
push
nop
sub
cwtl
shlb
pusha
add
lahf
pop
mov
sahf
js
in
fists
bound
outsl
jmp
jge
insl
aam
add
stc
mov
jns
dec
inc
push
dec
cmp
sbb
int3
cli
in
popf
adc
mov
sub
arpl
sbb
inc
bnd
sbb
push
mov
and
xorl
jo
pop
test
push
sbbl
in
inc
bound
add
outsl
fwait
add
push
xor
popa
mov
stc
sub
or
or
mov
inc
xor
cmp
push
pop
xor
cld
xor
and
push
sub
nop
adc
loope
inc
in
sub
sbb
in
in
xlat
in
outsl
cli
or
mov
xor
in
mov
xor
sbb
arpl
pop
sar
pop
sbb
in
pushf
inc
push
mov
mov
push
jns
xchg
addr16
insl
xchg
pop
mov
call
fcmove
std
popl
jmp
xchg
idiv
mov
fs
lahf
sub
mov
lock
xchg
insb
dec
mov
sahf
mov
lret
fisubs
sahf
icebp
stos
xchg
mov
adc
and
cmpsl
mov
sbb
test
xor
mov
xchg
mov
jae
dec
mov
stos
push
mov
pop
andl
xchg
out
push
cs
push
fistl
orb
enter
mov
rorb
in
pop
testb
adc
pop
push
xchg
cmpsb
in
sti
loop
or
mov
cmp
adc
out
scas
imul
orb
mov
lahf
dec
inc
das
mov
lcall
loopne
push
dec
cmp
mov
push
adc
int
and
lcall
test
sub
in
adc
sbb
lock
adc
add
and
jmp
jge
mov
pusha
sbb
inc
add
test
insb
mov
test
inc
jl
aam
add
dec
xor
movsl
or
mov
popa
ret
push
js
icebp
or
out
and
add
mov
leave
outsb
loop
and
es
or
push
and
test
jnp
fsts
negl
xchg
enter
hlt
push
sub
push
dec
adc
int
and
shll
and
imul
jne
push
imul
out
mov
or
repz
aad
jge
out
pop
shlb
lahf
mov
or
lahf
out
rcll
sbb
into
pop
fsubs
mov
inc
jb
aad
das
mov
or
sbb
push
xchg
outsl
es
sbb
aad
inc
fsubrl
ss
dec
adc
sub
sbb
push
or
in
xchg
sbb
push
fldenv
cmp
arpl
push
xchg
add
test
and
movsb
cmpsl
stos
inc
add
push
and
dec
add
enter
mov
popf
mov
mov
xchg
mov
sub
add
dec
mov
jbe
mov
hlt
cmp
rcr
jb
mov
cmpsl
adc
sbb
outsb
push
and
cmp
jbe
aaa
pop
cld
pop
cmp
filds
push
or
push
data16
adc
jo
sbb
jge
mov
dec
lds
mov
in
outsb
repz
inc
pop
loope
mov
int3
inc
daa
push
outsl
out
jge
mov
dec
out
pushf
sbb
sbb
loope
mov
inc
popa
out
sub
pop
sbb
repnz
ljmp
mov
xchg
testl
cmp
cmp
dec
or
sub
add
jecxz
fadds
repz
mov
pop
jge
mov
push
icebp
jmp
pushf
cmp
sti
and
gs
sbb
adc
outsb
rcll
mov
inc
dec
lea
pop
cmp
lcall
daa
adc
push
imul
dec
jmp
adc
jne
push
pop
lods
xchg
aas
arpl
fldl
into
add
popf
or
cwtl
add
outsb
pusha
shll
and
mov
inc
or
inc
sub
data16
cmp
cwtl
sarb
inc
or
jge
hlt
push
jle
inc
pop
mov
mov
enter
addr16
pushf
clc
mov
movsl
mov
xor
in
lock
push
addr16
mov
sbb
arpl
mov
fstpt
das
fists
and
jge
lcall
dec
xor
andl
dec
stos
ds
and
out
cli
aad
scas
mov
pop
adc
clc
call
fwait
mov
xor
pop
lcall
popf
movsl
iret
stos
pop
mov
cmpsl
scas
es
fs
das
je
loopne
js
push
mov
daa
sbb
or
push
sahf
ret
cs
push
mov
add
fisubrs
rorl
adc
stos
bound
and
mov
movsl
or
lods
clc
iret
xor
inc
rolb
fcoms
sub
fsub
sbb
gs
jge
xlat
iret
mov
push
xchg
mov
fcmove
jb
fisubrl
movsb
sbb
pop
dec
out
xor
xchg
inc
rorb
dec
jge
and
les
inc
inc
jb
addr16
jl
dec
ret
sbb
shlb
xor
or
imul
inc
mov
mov
or
lret
rorb
data16
push
inc
cld
js
pop
dec
pop
rclb
shlb
pop
movsb
stos
xor
push
es
scas
fisubs
fs
test
sub
pushf
add
ljmp
daa
lahf
leave
push
xchg
xchg
sbb
mov
test
sub
xchg
out
add
shl
or
or
cmpxchg
xchg
mov
es
inc
inc
movsl
mov
imul
pop
inc
loopne
sub
sbb
rol
xor
sub
das
mov
sbb
mov
cs
cmp
pusha
and
push
jecxz
cmp
cmp
xchg
jnp
push
pushf
sub
int
test
clc
addr16
push
xchg
stos
shlb
and
andl
daa
adc
mov
cltd
pushf
inc
jmp
addl
jbe
push
popf
inc
xchg
clc
hlt
jns
and
testb
cltd
jnp
pop
jne
xor
stc
aaa
inc
jne
lods
mov
cltd
pop
or
sub
sbb
imul
outsl
or
dec
jne
daa
shlb
pop
jbe
lds
ss
push
jecxz
lods
adc
and
pmulhuw
cmp
jns
pop
repnz
sbb
mov
xchg
fldl
cmc
or
ret
rcrb
sbb
cmp
ret
push
movsl
fwait
add
push
orl
shll
add
ds
pop
ljmp
pushf
in
dec
popa
fiaddl
sbb
loopne
ljmp
xchg
outsb
mov
gs
sub
int
aam
mov
cmp
mov
js
das
inc
mov
jle
or
shlb
out
jmp
mov
push
addr16
xchg
in
fildll
lret
dec
into
lret
call
lds
arpl
roll
push
jo
mov
stos
push
xchg
sub
xchg
adc
testl
fstp
inc
adc
and
lods
test
mov
lcall
xchg
sbb
stos
js
xchg
insl
xchg
pop
pop
push
cwtl
and
js
pop
inc
lcall
pop
aas
or
dec
cmpsb
push
xchg
popf
cltd
stc
aaa
popa
ret
add
inc
cmpb
sti
xchg
gs
sub
push
xchg
push
or
dec
aaa
mov
xchg
je
inc
nop
test
mov
ds
mov
lret
std
sahf
inc
cmp
movsl
mov
mov
test
lds
lcall
lret
sbb
cli
jg
mov
cld
inc
out
lret
sub
test
jl
sbb
es
loop
mov
jge
test
out
cltd
cs
mov
shll
ss
pop
movsl
or
sub
lds
arpl
pop
shll
outsl
test
xor
dec
lds
inc
out
xchg
iret
in
fidivs
xchg
xor
leave
mov
pushf
aad
leave
xchg
and
inc
pop
insl
loop
mov
movl
sahf
pushf
jnp
mov
xor
cs
mov
push
add
and
add
jmp
dec
daa
and
ror
pop
int
cmp
aam
sti
inc
mov
push
xchg
xor
adc
mov
add
fwait
pop
lods
xor
mov
fwait
lods
mov
shlb
jbe
jp
scas
popf
les
jecxz
test
fldt
pop
in
sbb
push
or
sti
imul
test
mov
jns
es
test
sbb
adc
rcll
adc
test
sub
test
sbb
sub
daa
aas
xor
adc
out
fisubs
jne
add
dec
dec
mov
incb
mov
push
sti
mov
stc
adc
push
mov
sti
push
aam
outsb
fs
orb
xchg
gs
and
jns
mov
dec
in
mulb
dec
inc
mov
mov
cltd
xchg
int
lods
cli
adc
push
mov
mov
cmc
nop
scas
jno
cmpsb
adc
imul
mov
cmp
and
sar
mov
in
mov
xchg
jae
cmc
mov
sbbb
ljmp
clc
rep
add
pslld
repnz
loop
pop
icebp
fistl
repnz
repz
mov
pop
ret
dec
or
dec
mov
push
pop
movsb
pop
subb
or
and
jp
pop
insl
mov
outsb
fwait
lret
imul
cmp
addr16
fcmovb
xor
sub
mov
adc
into
lds
mov
and
clc
mov
jnp
cmpsb
test
int3
jnp
ret
sahf
pop
dec
fisubl
nop
dec
lret
pop
push
sbb
xchg
cmp
fwait
sbb
sub
adc
pushf
push
push
stc
mov
pusha
ja
ja
scas
fbld
jnp
ljmp
mov
mov
pop
out
push
call
jne
cmpsl
pop
sub
insl
pop
sahf
jnp
loop
sbb
push
dec
push
repnz
out
dec
test
sarb
aad
les
or
fdivs
loop
push
inc
jg
cmp
mov
mov
add
movsb
test
xchg
scas
mov
test
cltd
stos
dec
mov
fs
push
inc
shlb
les
pop
movsl
cmpsl
icebp
in
cmpsl
xor
mov
jae
pop
dec
mov
jae
pop
mov
fs
fsubrs
pusha
lret
mov
test
icebp
andl
dec
push
mulb
or
mov
xchg
ss
mov
roll
lds
and
sub
ss
jl
cmpsb
rcll
aas
mov
pop
xchg
ja
lea
jns
sub
loopne
std
adc
xor
call
inc
jle
cmp
test
shlb
stc
and
rorl
dec
fcomps
lea
inc
inc
xor
dec
dec
rclb
cs
test
jnp
xor
sti
lahf
sbb
aad
outsl
or
nop
inc
aas
fcoms
fstpl
std
repz
dec
bound
lret
add
mov
jne
std
arpl
rolb
push
sbb
sbb
mov
and
lret
jmp
adc
mov
es
and
xor
outsb
dec
xor
push
pop
jb
mov
xchg
cmp
fisttpl
lret
cmp
in
das
lock
pop
mul
push
hlt
inc
clc
psadbw
jge
mov
loope
shl
lds
jnp
jp
popa
xchg
shlb
out
adc
movsb
div
and
add
dec
push
adc
out
xor
dec
xor
lods
mov
scas
push
std
clc
movsb
sbb
cwtl
mov
cmp
imul
add
sbbb
pusha
rorl
lret
lahf
mov
adc
xor
out
sub
test
or
pop
fstpl
dec
push
lret
lds
xor
lret
mov
xchg
jge
pop
pop
mov
xchg
adc
aaa
pop
or
ficomps
jge
clc
into
mov
dec
jae
pop
add
jno
push
mov
pop
lcall
out
cltd
sub
jo
fldenv
jb
push
sarl
popf
and
in
leave
mov
mov
push
and
sbb
lock
cmp
cmpsl
shlb
pop
xorl
push
int
inc
push
sbb
iret
popa
xchg
pop
pop
and
fs
das
outsl
test
inc
mov
and
jl
inc
push
arpl
std
or
sub
dec
scas
xor
rorl
xchg
mov
inc
sbb
lods
fistl
mov
inc
test
xor
pop
imul
loope
adc
lods
mov
cmp
or
sbb
mov
adc
repz
sahf
iret
cli
jg
jecxz
and
addr16
dec
jo
pop
mov
cmc
dec
ljmp
sbb
xlat
or
adc
pop
std
dec
out
xchg
shlb
loop
sub
cmpps
ljmp
jle
jge
outsl
cmp
ljmpw
int3
mov
icebp
mov
mov
insl
out
inc
push
and
dec
mov
mov
jae
fisttps
pop
jg
xor
aad
xor
in
dec
test
shll
imul
sub
std
pop
imul
out
call
bound
dec
cwtl
mov
xor
bound
movsb
push
and
aas
hlt
push
testb
mov
or
sbb
and
adc
es
rcrl
add
dec
insb
pop
div
lods
mov
dec
xchg
out
outsb
lcall
mov
cmpsl
jmp
dec
inc
jns
addr16
in
es
or
dec
out
jg
pop
mov
inc
add
lds
lods
or
mov
and
pop
out
sarl
xor
leave
adc
add
adcl
add
dec
or
adcl
in
push
jno
mov
and
rol
cmp
rorb
call
mov
sub
mov
lea
hlt
sub
in
mov
cmp
dec
outsl
jne
inc
out
add
adc
pop
sbb
push
mov
push
adc
lahf
addr16
popa
pusha
inc
dec
out
adc
lret
sbb
bound
imul
ss
pusha
shl
cmp
jl
sbb
cli
dec
lods
add
xchg
xor
mov
mov
mov
xchg
push
stc
pop
das
loopne
mov
repnz
mov
and
xchg
pop
pop
sbb
pop
inc
xor
adc
mov
add
jns
jae
mov
jb
mov
mov
ret
push
rolb
add
fcoml
shll
inc
rclb
clc
dec
shll
shld
inc
in
jae
lret
pop
lods
add
push
push
loop
sbb
mov
xchg
add
xlat
cs
into
or
lods
popf
dec
xchg
rcrb
or
ja
inc
out
jl
inc
and
call
pop
sbb
call
sub
pop
and
mov
xchg
xchg
sbb
mov
shlb
dec
pop
mov
push
rcrl
outsb
js
into
push
lea
lahf
rcpps
jo
jno
mov
cltd
mov
mov
sbb
lret
fwait
mov
xor
into
insl
mov
adc
inc
push
dec
rorl
leave
push
lret
sahf
cmp
add
hlt
outsb
cmp
push
dec
sbb
test
lret
xchg
fisubrl
rorl
dec
incl
loopne
mov
or
push
arpl
mov
inc
clc
lods
scas
cld
insl
subb
lret
push
test
rcrl
mov
xchg
jb
pop
arpl
sub
adc
lock
dec
mov
dec
ljmp
mov
movsb
pusha
dec
lods
add
xor
pop
insb
lret
xchg
rcr
and
aaa
lret
or
xchg
in
bound
imul
adc
cli
xrelease
cmovno
loope
inc
pop
xlat
dec
cli
in
stc
adc
test
lret
stos
subl
add
jecxz
imul
shrb
add
test
jnp
mov
pop
inc
cmp
ret
sub
sub
outsb
add
xlat
jns
hlt
xchg
mov
pop
repz
nop
sub
test
or
jmp
loope
adc
je
inc
adc
xorl
or
pop
pop
mov
roll
movsb
int
cltd
mov
push
or
jnp
push
xchg
sbbb
adc
or
mov
rclb
pop
lret
pop
lods
insl
testl
xchg
fistpl
mov
outsl
adc
mov
loop
cltd
nop
stos
repz
fs
fs
push
test
or
sub
scas
dec
out
sbb
clc
mov
fidivs
lds
push
test
aad
xor
ret
pop
push
mov
sub
lcall
xchg
jle
mov
arpl
dec
adc
notl
fdivrl
cltd
pop
sub
xchg
popf
cli
fadds
stos
popf
jb
sbb
stos
mov
mov
shrl
std
sbb
je
into
and
cmp
mov
jbe
and
dec
mov
push
inc
or
out
pop
mov
in
fldt
push
cmpsb
test
or
loop
mov
jmp
push
mov
sbb
sbb
sub
loopne
mov
cltd
imul
mov
shl
push
lcall
push
das
mov
cmp
insl
insl
xchg
adc
sub
and
fwait
inc
in
xor
push
pop
pusha
les
enter
test
adc
push
int
xor
fmull
adc
jne
jno
call
cmpsb
sub
cmp
in
or
subb
push
add
in
pop
in
idivb
int
icebp
add
sub
hlt
push
mov
orps
ficomps
push
and
gs
cld
jnp
or
fdivl
mov
test
push
gs
xchg
insb
push
arpl
cmp
aas
rorl
dec
loopne
xor
inc
shl
adc
push
sub
addr16
xchg
mov
cmp
adc
xor
test
push
dec
cmp
jo
add
add
dec
jle
stos
jb
es
xchg
adc
stos
xchg
insb
clc
mov
enter
sbb
cmp
rol
inc
add
mov
adc
and
and
dec
insl
loopne
xlat
lret
xor
test
loopne
inc
jl
xchg
test
rcr
mov
jl
mov
pusha
mov
dec
mov
adc
xor
fldcw
xchg
push
add
in
adc
gs
ret
push
cmp
xchg
mov
pop
mov
jne
mov
adc
movsl
shll
icebp
into
js
dec
cmp
bound
push
jl
jle
popf
mov
cli
fisubrs
rcr
lahf
dec
je
call
mulb
and
ljmp
sub
dec
sti
mov
mov
in
pop
test
ret
inc
jmp
adc
out
pop
pop
jp
mov
dec
ja
movsl
add
aas
push
mov
stc
jl
add
scas
mov
add
xchg
cli
sub
inc
sar
cmpsl
xchg
hlt
ljmp
push
jp
jnp
sub
inc
js
iret
xor
xchg
cltd
addr16
mov
pop
inc
jae
call
mov
jbe
dec
jns
je
aas
adc
cmp
sub
jns
int3
pusha
or
mov
xchg
aam
es
mov
push
shrb
pop
mov
insl
and
push
sahf
fwait
jb
add
adc
mov
scas
clc
movsb
scas
jno
fsub
lahf
sbb
daa
xlat
xor
adc
ja
mov
jae
inc
xchg
hlt
mov
adc
push
stc
clc
test
cmp
fists
push
xchg
inc
push
sub
andl
push
mov
test
push
lds
pop
add
arpl
out
ret
xchg
icebp
popf
inc
ljmp
pop
push
insl
lods
push
mov
popa
pop
ffreep
or
test
test
orb
jb
push
popa
xchg
insb
mov
fiadds
jno
pop
sub
outsl
mov
or
mov
pop
mov
test
sub
lcallw
cld
pop
cmp
dec
dec
sbb
add
ficompl
cmp
jne
lahf
loop
shrl
jmp
jne
imul
sbb
push
jl
iret
dec
jnp
out
push
je
jecxz
inc
clc
scas
push
adcb
pop
cmc
daa
sbb
mov
stos
test
pop
push
jp
jbe
cmpsl
adc
fdivl
ficompl
lods
cmpsb
fucomi
jle
stos
rcr
hlt
add
add
add
leave
sub
inc
bound
dec
pusha
jge
stos
outsl
repnz
or
repnz
mov
out
inc
sbb
cld
mov
ss
imul
imul
ljmp
push
cltd
hlt
xor
push
jmp
mov
or
cmp
lret
cwtl
stos
jne
pop
outsb
push
into
pop
lret
out
test
xchg
popa
push
dec
sub
insl
mov
rcrb
push
in
fadds
xchg
gs
jae
xchg
or
mov
gs
mov
pop
sbb
insl
xchg
xor
outsb
cmp
mov
in
jp
out
in
rcrl
rcr
rorb
imul
cs
sbb
and
es
vfmsubaddps
ficomps
xlat
or
iret
and
pop
rorb
out
scas
mov
mov
sbb
das
add
dec
hlt
out
or
test
aam
out
pop
cmp
test
lcall
addr16
push
out
inc
gs
and
or
mov
push
cmp
out
ljmp
jge
pusha
mov
or
aam
xor
aas
pop
cld
add
pushf
idivl
sbb
pop
cmp
mov
dec
fildll
sbb
pop
sub
and
jge
pop
leave
lcall
cmp
cs
leave
pop
push
cli
mov
repz
scas
mov
bound
je
sbb
lock
mov
pop
mov
repz
std
fdivr
dec
sahf
add
shll
cmpw
and
fidivs
out
adc
or
adc
subb
jae
repz
fisttpll
push
popa
push
mov
movsb
insl
xchg
adcl
and
or
test
test
lret
dec
push
and
pop
or
ljmp
icebp
pop
lock
cld
mov
xor
cltd
sub
push
icebp
shrb
movsb
lods
fidivl
in
push
dec
stos
dec
cltd
mov
sub
jge
icebp
add
pop
ljmp
mov
add
or
shr
sub
cmp
mov
es
pop
add
inc
rcl
push
test
xchg
insb
ds
js
stos
fwait
and
fadds
mov
aad
push
sub
push
jbe
inc
xlat
mov
dec
cli
ds
aas
loopne
or
mov
sbb
cmp
jp
movsb
sarl
push
xor
mov
testb
daa
adc
lods
and
push
dec
rcr
leave
inc
addr16
fnsave
shlb
inc
or
xchg
dec
out
and
test
pop
imul
push
inc
pop
push
sub
lahf
fwait
les
xchg
out
xchg
sbb
imul
pop
rcrb
fs
mov
mov
cmp
xchg
call
cld
and
addl
push
in
imul
push
ret
popl
mov
jae,pn
or
lds
mov
push
mov
and
mov
cltd
repz
gs
inc
mov
clc
sub
add
sbb
cld
pusha
push
cmp
cmp
xchg
jno
fdivrl
cmp
mov
dec
xor
and
mov
xchg
xchg
mov
inc
inc
mov
jnp
icebp
aad
movsb
jbe,pt
fildll
pop
jl
jge
push
or
pop
mov
xor
adc
mov
inc
movb
adc
pop
pop
fidivrs
in
mov
xchg
loopne
lock
and
inc
rcrb
sub
or
test
sbb
jmp
outsl
out
mov
jbe
movsb
lahf
in
lcall
fmuls
push
adc
fsubrs
insb
les
out
xchg
xchg
or
mov
js
adc
cmpsb
jae
adc
inc
ret
sbb
les
sub
lret
flds
in
bound
dec
insb
lahf
push
inc
fmull
imul
imul
cmp
jo
adc
out
lret
les
push
cmp
push
mov
adc
out
mov
aam
inc
es
or
adc
jg
ret
xchg
mov
lret
xlat
push
push
rclb
sbb
push
repnz
push
xor
xorl
xor
loop
sub
mov
fisubrl
pop
pop
pop
push
lock
mov
or
scas
xor
xor
add
lcall
mov
mov
add
movsl
push
daa
cmp
subb
jecxz
sub
in
int3
fisttps
jp
mov
loop
add
sarb
mov
and
cld
clc
inc
ja
pop
sbb
mov
sbb
iret
out
faddl
pushl
add
ds
popf
popa
xor
push
sub
cmp
lods
in
sbb
and
and
pop
int
xorps
adc
xchg
cmp
mov
ret
pop
je
das
push
add
mov
jb
xchg
jae
pusha
pop
inc
insb
outsb
out
cld
push
push
push
ret
leave
add
call
pop
and
lock
imul
push
jge
out
sbb
inc
and
out
out
fcoms
adcl
jae
pop
mov
shl
jns
mov
mul
dec
pop
iret
pop
rcr
add
scas
mov
dec
xor
and
imul
test
test
jl
loop
ljmp
daa
and
shll
test
stc
jbe
or
add
out
popa
bound
inc
out
mov
loop
int
cmp
sbb
je
jae
testl
ss
push
jne
dec
fildl
ja
or
cmc
mov
movl
dec
sbb
sbb
dec
pop
sbb
imul
push
xchg
call
jo
add
jo
mov
cmp
adc
pop
adc
sahf
dec
xchg
inc
jl
shll
inc
lcall
fmull
add
nop
rolb
sub
cld
mov
push
std
or
outsl
jg
inc
loopne
dec
sub
lea
cli
stc
mov
sbb
enter
inc
xorl
jnp
rclb
test
adc
xchg
xor
sub
iret
xor
decb
dec
and
les
mov
jp
je
ret
push
div
or
fcoml
mov
aas
mov
cltd
out
sub
imul
xor
and
push
ss
xchg
imul
sbbl
pop
jno
js
inc
fsubp
ficoms
sbb
pop
or
lret
push
and
in
jecxz
daa
or
imulb
ds
or
xor
lock
pop
das
push
pop
push
xor
jnp
int
in
mov
xchg
fsubrs
xor
push
insb
jg
je
imul
cmp
fwait
mov
in
sub
jo
int3
inc
nop
cld
jecxz
xchg
xor
hlt
push
xchg
mov
cmp
pop
add
iret
inc
ret
xor
cmpsb
inc
mov
lods
push
add
fisttpll
fwait
ss
fwait
xor
lods
mov
shlb
jno
data16
dec
mov
jle
divl
icebp
xor
loopne
stc
cmp
mov
push
mov
mov
push
xchg
int3
adc
lock
sbb
testb
stos
fldlg2
xor
dec
testl
fstpt
cwtl
xor
xor
lret
push
pop
dec
dec
lcall
shlb
cltd
aad
fmuls
stos
add
rorb
cld
xchg
lret
jg
cmp
iret
xlat
inc
and
pop
js
adc
std
inc
clc
push
rcrl
adc
push
add
pop
mov
jnp
movsl
sub
dec
sbb
fimuls
int
xchg
add
push
imul
jle
int3
retw
enter
xchg
jle
jns
mov
enter
mov
or
xchg
ljmp
bound
popf
push
incb
dec
fwait
xchg
sbb
rorb
cmp
mov
push
call
ja
mov
xor
fldt
pop
push
xor
imul
xchg
mov
sbb
sbb
inc
xchg
mov
es
fadd
xchg
nop
divw
push
add
enter
and
inc
out
or
mov
jecxz
decb
add
test
loop
jno
jge
js
fcoml
mov
jnp
mov
mov
popf
mov
lods
stos
frstor
dec
dec
fldl2e
icebp
or
inc
pop
push
sti
jno
aad
push
cs
test
push
sbb
or
xor
mov
cmp
mov
jl
iret
icebp
and
lahf
mov
scas
aad
ja
dec
mov
out
and
test
sbb
jns
int
ja
jne
sbb
sub
mov
mov
data16
adc
sahf
pusha
cltd
mov
xchg
enter
imul
mov
pop
ficomps
push
or
dec
test
push
pop
dec
les
inc
mov
fcomps
cmp
out
sbb
mov
aas
loopne
ret
pusha
aaa
les
dec
xchg
xlat
dec
jns
pushf
lcall
ret
loopne
test
ret
cmp
xchg
cmpsl
mov
or
and
mov
jno
fbstp
mov
jge
out
popa
and
dec
xchg
jle
sub
sbb
out
cmp
rorb
mov
popf
push
lea
pop
jo
and
jns
add
test
imul
cmp
lock
xor
adcb
andb
xchg
or
dec
pushf
insb
cmc
iret
pop
out
addb
and
fisubrl
aaa
adc
dec
into
and
and
inc
shlb
aas
xchg
cmc
loope
iret
fiaddl
into
cmpsl
mov
imul
fldcw
push
pop
ror
mov
pop
push
xor
mov
dec
xchg
hlt
aaa
sub
add
pushf
lock
jp
xchg
dec
pop
js
and
mov
gs
xchg
or
mov
fs
and
std
xchg
push
mov
out
mull
sbb
jo
popf
mov
les
pop
mov
stos
cs
mov
ljmp
adc
cmpsl
cld
inc
xor
ja
mov
dec
inc
mov
mov
test
rcrl
addb
pusha
cltd
mov
jns
nop
test
sub
mov
xor
jo
out
push
call
jns
jnp
fs
add
xchg
rorl
mov
sub
dec
clc
scas
std
sbb
jae
int
fsubl
scas
test
notb
or
push
flds
add
sbb
std
pop
mov
lcall
sbb
pop
adc
and
icebp
hlt
repz
shr
repnz
mov
lahf
scas
sub
aam
imull
add
popa
pop
pop
repnz
fucomp
addb
mov
pop
lods
jmp
mov
in
jp
jmp
push
add
mov
movsb
pop
and
mov
shrl
inc
pop
pop
pop
jb
jecxz
popa
xchg
dec
cmc
ja
or
mov
push
cmp
imul
push
add
pop
shlb
xchg
je
sbb
sub
test
xlat
jecxz
addr16
mov
xor
jno
xchg
sub
daa
std
imul
jecxz
add
mov
clc
filds
scas
push
aam
jmp
pushf
xlat
sahf
mov
push
xor
fbstp
fcmovu
mov
insb
outsb
ss
out
xor
outsl
sbb
cs
imul
sub
testb
icebp
dec
sub
add
lods
scas
push
fwait
test
and
outsl
adc
sbb
add
or
and
adc
push
inc
scas
lret
or
xor
inc
test
scas
or
lea
and
sbb
aam
push
int3
mov
pop
fs
sbbl
adc
subb
clc
aas
pop
and
cmc
lret
into
incl
ljmp
sarl
and
push
in
xchg
into
popa
into
jbe
mov
jmp
das
stos
movsl
fs
cld
sbb
xchg
jmp
and
cs
or
push
arpl
pop
and
or
mov
inc
mov
mov
or
sarb
pop
es
cld
js
jg
mov
push
pop
adc
arpl
movsl
xchg
clc
loopne
cmpsb
cmpsl
push
insl
lods
and
in
and
adc
mov
fidivrl
push
mov
je
jo
and
fisttps
out
pop
cltd
inc
lock
hlt
leave
or
mov
push
sub
pop
int
lods
push
sahf
in
or
dec
xchg
lret
pop
clc
arpl
je
mov
sarl
mov
lret
int3
stos
or
cli
inc
hlt
inc
fwait
shll
fimuls
fcmovnu
in
xchg
dec
lea
mov
xor
push
imul
cs
cmc
push
sbb
repz
andl
fstl
in
push
sti
fwait
mov
mov
push
call
cmp
and
inc
dec
dec
loope
fcompl
or
push
add
cmp
sbb
ljmp
adc
ret
push
lds
les
mov
stos
aam
add
popa
sub
rclb
lds
inc
lea
lods
movsb
mov
adc
jmp
adc
xchg
aad
pop
int
xor
cmp
pop
jg
adcl
xchg
pusha
nop
dec
add
stc
cs
push
fs
add
les
mov
rolb
cld
scas
sbb
inc
adc
inc
inc
rorb
mov
push
fistl
mov
ja
rorl
mov
nop
fs
ja
sub
daa
test
pop
ds
arpl
or
pop
or
insl
sub
cmp
jb
in
xchg
out
mov
fsubrl
dec
or
enter
shll
jmp
adc
sub
and
mov
loop
mov
sbb
sbb
jge
mov
mul
pusha
cmpsl
aas
and
pop
pop
inc
add
roll
jg
fwait
push
rclb
es
xchg
dec
jecxz
test
jp
pop
fdivl
movsl
pop
arpl
xor
fnstenv
mov
stc
stos
outsb
subb
inc
push
int
mov
sub
fidivrl
xchg
adc
or
lret
mov
cmp
add
out
popa
nop
mov
and
xor
aam
xlat
scas
adc
mov
andb
inc
in
xchg
jg
fwait
into
dec
mov
inc
call
ss
add
fimuls
pop
lds
mov
lahf
shr
lret
mov
sbb
loop
xor
ljmp
jns
and
inc
jnp
mov
dec
fwait
loopne
shr
jae
cmp
pop
jge
sub
scas
insl
push
push
push
mov
push
andb
jg
xchg
or
push
and
push
arpl
pop
jmp
lcall
insl
stc
dec
cmpsl
xchg
call
xor
adc
mov
bound
jno
mov
pop
mov
std
nop
movsb
es
dec
mov
jo
mov
rcrb
push
jnp
test
pop
inc
out
in
jmp
push
mov
inc
push
sub
push
shr
mov
es
outsl
popa
jl
nop
push
pop
lods
fs
sub
xorb
and
frstor
cmp
fsubrl
bound
or
push
mov
xchg
bound
mov
sub
sti
rcrb
pop
mov
xor
adc
xor
je
sub
mov
sbb
sarl
xor
or
retw
daa
ror
testl
bswap
mov
lods
out
jo
mov
lock
rcl
repz
mov
mov
inc
pop
dec
and
pop
sar
cwtl
subl
imul
push
sub
fistpl
es
arpl
xchg
pop
test
xchg
pop
pop
fs
cmc
pop
into
adcb
inc
mov
mov
cmc
mov
scas
aaa
testb
mov
cmp
pop
cmp
ret
xchg
call
pop
inc
sub
sub
icebp
sbb
pop
loop
repz
xchg
daa
lahf
add
lret
repnz
jl
and
aam
loop
sub
jns
mov
inc
cmp
jg
jbe
xchg
movsl
es
std
in
and
fsts
xchg
push
or
dec
mov
ret
xchg
stos
daa
sub
ret
loopne
in
xchg
xor
push
mov
lock
out
fidivs
dec
mov
shr
dec
adc
js
pusha
sahf
out
dec
test
or
mov
add
mov
gs
in
sahf
add
movsl
push
sbb
pop
adc
fstps
sarb
mov
ljmp
loope
das
adc
out
push
mov
push
jmp
outsb
ret
dec
jmp
out
sarb
rorb
push
jg
cmp
sub
lea
push
ja
sbb
dec
jns
rcrl
in
push
mov
mov
stos
pop
jne
pushf
fisttpl
mov
dec
sub
xchg
xchg
push
scas
fcmovnb
push
orb
mov
inc
sub
xlat
mov
out
leave
push
scas
cli
fndisi(8087
jae
pop
mov
rcl
xchg
test
sti
push
xchg
cmp
fbstp
imul
inc
ds
cmp
divb
mov
pop
or
sahf
data16
lods
arpl
mov
das
jae
ret
mov
sub
or
ja
imul
into
jne
orb
lods
gs
jno
pop
pushf
dec
mov
cmp
out
aas
mov
out
mov
xor
lcall
imull
push
push
fdivrs
xchg
hlt
andl
in
dec
arpl
aas
jecxz
lretw
mov
jo
inc
sbb
in
idivl
sbb
cwtl
inc
mov
popf
push
mov
push
cs
push
jae
and
pushf
rclb
xor
pop
push
mov
cmc
mov
push
fisubrl
rorb
mov
roll
and
cmp
xchg
sbb
adcl
popf
shll
shll
data16
int3
psadbw
int3
jnp
cmc
cmp
xchg
xor
call
or
xchg
mov
popf
testl
adc
jg
daa
sbbb
dec
stos
add
xor
mov
mov
scas
mov
mov
fstpl
push
scas
scas
std
inc
fadd
xchg
jno
jns
cmp
aas
cmpsl
aas
mov
inc
int3
aam
stos
inc
jb
ja
adc
and
mov
pop
mov
aam
mov
jae
push
sbb
ljmp
mov
mov
sti
andb
adc
lea
pop
test
je
gs
mov
push
pop
xchg
test
xor
sub
dec
push
add
sub
int
fldt
js
inc
int3
mov
lea
jmp
jecxz
or
cli
push
push
mov
pushf
mov
dec
xchg
xor
push
jno
sub
xchg
lahf
sub
inc
jbe
packuswb
xchg
add
cmpsb
dec
stc
add
leave
data16
jge
xor
cmp
mov
jle
loope
pusha
push
mov
roll
inc
xor
and
pop
push
push
test
lcall
inc
sub
dec
and
aas
mov
filds
jge
mov
mov
adc
int
scas
jno
clc
nop
sahf
push
arpl
jl
psubusb
xor
push
xor
dec
ficomps
stc
pop
jp
bound
adc
mov
jl
mov
cld
iret
adc
fs
es
or
push
sbb
int3
or
dec
pop
andl
fldcw
clc
or
enter
out
xchg
je
stc
jge
outsb
das
adc
push
aas
movsl
mov
repz
adc
mov
pop
stc
push
pop
mov
and
and
jp
sbb
iret
or
in
push
inc
jae
xor
popa
sbb
fcomps
pushf
cmpsb
add
mov
ffree
pop
xor
shll
jbe
push
pop
inc
add
mov
mov
test
pop
pop
jnp
fldt
dec
negl
pop
rcll
mov
inc
lods
sub
rcrb
ljmp
mov
loope
movsb
cmp
insl
aas
xor
popa
dec
push
or
push
pop
cmp
data16
push
add
push
sarl
test
fdivrs
pushl
xor
aad
test
and
outsb
add
mov
cmp
cmp
je
aad
jecxz
xchg
push
fnstenv
adc
or
push
das
in
in
movsb
mov
rcrl
repz
popa
out
pop
push
leave
lret
test
pop
adc
mov
xchg
inc
inc
jb
fimuls
scas
iret
mov
jae
xchg
fwait
adc
lock
sbb
decl
in
mov
insl
sbb
lret
andl
fidivs
jno
mov
lcall
and
sub
outsb
lcall
repz
adc
test
jmp
movsb
in
cmc
lahf
fwait
rcr
push
and
sub
push
cmp
repnz
loope
sub
and
push
outsl
sub
dec
rcrb
push
out
mov
test
clc
aaa
insl
push
movsb
cmp
xlat
cmpsb
inc
pop
cmp
sarl
dec
mov
call
stos
jb
nop
clc
rclb
cwtl
mov
inc
hlt
repnz
idivb
sahf
xchg
clc
stc
pop
pushl
out
rcll
add
test
mov
js
out
push
dec
adc
mov
loopne
lods
jecxz
shl
sub
ret
inc
gs
addl
stos
push
and
lahf
xchg
fiadds
sub
lods
stc
add
or
sub
dec
fildl
dec
push
or
adc
mov
stc
lods
dec
add
mov
pushf
je
mov
push
loopne
push
inc
cltd
pop
xor
pop
pop
mov
mov
clc
mov
loopne
lret
lret
or
adc
fs
mov
cmp
xchg
cmp
push
roll
jnp
jmp
push
push
xchg
mov
scas
repz
stos
mov
call
notb
stos
popf
mov
in
cmpsb
movb
lahf
and
or
cltd
lock
inc
sub
add
sbb
outsb
inc
or
inc
roll
rcl
jb
pop
or
mov
xor
mov
ss
out
div
popa
daa
jp
mov
cld
inc
mov
push
cmp
adc
ljmp
mov
mov
imulb
xor
out
jge
mov
fucomip
daa
mov
nop
mov
or
arpl
mov
aas
or
xor
xlat
and
call
in
mov
jle
in
inc
in
dec
jnp
pusha
iret
mov
bound
nop
rep
jmp
xor
movsl
xchg
faddp
imul
int
mov
gs
mull
mov
lcall
pop
and
push
in
sub
jl
push
jecxz
sub
or
and
and
jl
jmp
inc
out
add
inc
pop
push
imul
out
mov
mov
imul
xor
push
pop
dec
ja
dec
mov
inc
xchg
je
or
pop
adc
cmp
leave
adc
into
fucom
mov
mov
ret
sbb
or
subl
mov
pop
push
dec
lds
adc
test
add
jne
jg
xor
ss
sub
cltd
daa
nop
xchg
pop
pop
test
ret
fsubrl
mov
aad
in
lods
lock
jp
add
xor
jno
iret
rorb
sbb
lcall
aaa
or
fisttps
mov
mov
push
and
and
inc
leave
clc
cli
add
mov
mov
dec
loopne
xchg
lret
test
dec
mov
lret
sbb
push
sbb
pop
int
loopne
je
loope
add
or
lret
cs
dec
push
insb
pop
fst
daa
xor
jbe
and
dec
sbb
mov
mov
inc
lcall
pop
xchg
add
and
mov
and
mov
ret
pop
rorb
sub
xchg
mov
movsl
lods
je
inc
cs
add
sub
and
pop
aas
movsl
inc
xor
push
mov
scas
push
adc
mov
push
pop
inc
inc
faddl
add
loop
lahf
lods
js
adcl
xchg
sbb
int
pmullw
pushf
ja
ret
xchg
and
orl
mov
rolb
pusha
movsl
nop
lods
lret
test
dec
imulb
push
add
cmpsb
pop
lcall
push
fistps
mov
adc
push
ljmp
nop
sub
insb
xchg
xchg
movsl
and
mov
xor
jae
outsl
scas
out
pop
dec
lret
in
and
and
inc
lahf
xorl
add
out
and
jg
test
into
add
pop
shrb
stos
std
cwtl
mov
fmull
sub
test
push
add
outsl
aas
dec
outsl
mov
outsb
fmul
sbb
je
test
pop
cmp
xchg
lret
movl
fstpt
pusha
hlt
jle
jmp
aam
ds
cmp
mov
jl
int3
inc
jnp
jge
jmp
daa
mov
xchg
xchg
mov
or
add
stos
in
mov
rcll
mov
xor
add
out
andl
sbb
test
jmp
sahf
scas
mov
or
mov
in
and
fdivl
lret
ja
adc
jns
pop
jno
shlb
data16
cmpl
popf
mov
dec
and
push
xor
mov
loop
outsl
addr16
xchg
lods
lds
insl
lods
orb
lock
mov
aam
mov
stos
sub
push
add
dec
push
stos
xchg
aam
js
sbb
sbb
into
sbb
arpl
push
sub
mov
je
lcall
pop
push
add
sub
dec
out
stos
ss
roll
shr
lods
pop
nop
xchg
cmp
shr
inc
into
xor
adc
fnstcw
aas
mov
and
mov
out
mov
fistpl
inc
lods
repz
outsl
mov
push
daa
jl
adcb
aaa
out
hlt
inc
lret
or
sarb
jecxz
inc
mov
mov
xchg
sbb
cmp
jns
pop
test
pop
add
fwait
add
xlat
xchg
cmpsl
aad
dec
pop
cli
add
lea
fsubl
out
orb
neg
ds
sub
scas
mov
movsb
es
inc
or
jmp
jmp
mov
in
mov
lret
out
icebp
or
test
aam
test
div
out
or
inc
movsl
push
sub
mov
cmp
daa
enter
mov
cmp
adc
test
pop
andl
jne
cmp
mov
cmpsl
jl
xchg
shll
in
pop
leave
ja
dec
jp
add
stos
adc
les
popf
push
pop
data16
sub
xor
push
je
mov
popf
faddl
dec
cli
lods
repz
xchg
out
imul
lods
push
cmp
adcb
push
mov
mov
not
pop
xor
pushf
xchg
or
mov
xlat
ljmp
or
lock
sbb
push
pop
jp
push
mov
bound
ss
setge
add
xchg
jp
sub
jae
lea
addl
fists
in
das
std
fwait
jp
jmp
mov
lret
sub
js
pop
or
rcrb
xchg
xchg
std
adc
int3
push
jl
push
adc
jb
iret
jo,pn
sbbb
adc
pop
mov
fadd
add
shl
les
or
jecxz
in
cs
fst
je
gs
iret
add
pop
xchg
mov
mov
cmp
jmp
xor
call
mov
iret
pop
sahf
int
loope
jne
cmpb
and
cmp
push
jmp
jmp
adc
jno
mov
imul
insb
xchg
movsl
lcall
fnsave
pop
add
repnz
xor
outsl
ss
fwait
shr
cltd
pop
jle
fiadds
mov
xchg
or
add
and
leave
inc
in
dec
dec
mov
dec
cmpsb
push
and
incl
andl
mov
cmp
sbb
xchg
imul
xchg
push
xlat
fistps
push
jg
cwtl
xorb
sarb
push
xorb
cmp
leave
jle
popa
mov
jae
xchg
out
pop
xchg
ds
je
int3
push
pop
adc
leave
lods
das
insl
add
pop
lahf
fnsave
cltd
push
mov
outsb
pop
mov
sbb
lcall
jmp
shr
mov
xor
aad
fisttps
adc
xchg
cmp
pop
clc
add
neg
xchg
cmp
or
gs
push
mov
repnz
jecxz
jae
mov
imul
dec
aam
adc
pushf
or
imull
mov
inc
dec
or
dec
mov
in
cs
adc
push
in
push
dec
out
notb
repnz
stos
dec
cmpsl
or
push
dec
cmpsl
std
mov
jnp
xlat
push
scas
int
movsl
sti
js
push
pop
in
sub
sbb
ret
inc
adc
std
and
out
sti
imul
pop
movsl
lds
je
adc
ds
aam
outsb
enter
sub
lcall
inc
xor
sub
in
ja
jge
pop
cmp
bound
mov
daa
repz
ret
in
or
and
dec
mov
xor
inc
loop
movsb
or
shl
inc
icebp
add
mov
dec
push
cmp
fdiv
sub
mov
jl
push
mov
jae
mov
pop
cwtl
ret
pusha
ljmp
popf
out
xchg
pop
scas
push
pushf
jle
sbb
cwtl
out
add
arpl
les
add
pop
xor
mov
adc
mov
icebp
xchg
sub
pop
cmpsl
add
jbe
popa
jne
pusha
int3
ljmp
roll
xchg
xor
mov
adc
lods
mov
mov
loop
cwtl
xchg
pushf
xor
cmp
fsubrs
mov
add
jbe
out
popa
push
jp
mov
inc
aas
scas
mov
sbb
dec
adc
mov
mov
stos
mov
scas
or
test
xchg
movsb
lcall
adc
out
sub
icebp
and
jo
xchg
and
pop
inc
jno
pop
mov
shlb
mov
lret
subl
sahf
mov
les
icebp
fisttpl
in
stos
adc
pop
xor
cwtl
pop
mov
xor
jns
or
lea
cmp
sti
adc
hlt
xchg
lahf
aad
adc
add
pop
sub
lcall
xor
mov
and
mov
push
mov
outsb
and
clc
fmul
pop
lods
nop
iret
dec
and
fistl
lret
pop
ret
fcomps
adc
mov
or
mov
cmp
mov
outsb
xchg
mov
and
add
popf
fcompl
sub
and
cmpb
pop
aad
imul
lock
test
fmull
clc
cmp
cli
repnz
bound
jo
shll
int3
lods
insb
mov
adc
fcmovnu
cs
push
imul
add
out
adc
and
inc
cmp
pop
mov
out
pop
sub
pop
add
jl
and
cmp
in
loopne
pop
add
imul
outsb
xor
sbb
xchg
les
jnp
fsub
cwtl
pop
push
mov
std
sub
xor
cltd
gs
sub
jle
cmp
and
jnp
jne
sbb
jo
stc
push
xchg
push
push
mov
out
adc
mov
adc
jns
int
stc
push
decl
andb
mov
mov
leave
hlt
lret
and
jl
in
mov
adc
dec
pop
bound
ret
xchg
pop
in
inc
das
push
sbb
jae
sbb
jne
push
jbe
sbb
dec
loop
enter
xchg
dec
mov
xor
xchg
xchg
iret
fs
and
push
mov
jmp
xchg
es
push
push
out
int
pop
xor
cmc
xchg
add
rorb
mov
cmpsb
jle
out
fdivrs
add
filds
mov
xor
scas
loop
fnstsw
adc
xchg
mov
cmp
pop
pop
popf
loop
movsb
or
jbe
nop
jmp
cwtl
leave
add
xor
and
out
mov
out
adc
cmpb
clc
adc
mov
repz
call
int3
cmp
add
jo
dec
jbe
nop
jmp
test
cmp
jo
out
mov
aad
push
cmpl
mov
push
pop
sti
test
push
jge
aas
lods
ret
xchg
pusha
popa
popf
adc
jp
push
mov
popf
cli
out
sbb
adc
and
or
test
mov
sbb
ret
sub
mov
bound
and
jae
test
imul
mov
and
out
push
inc
xorps
loope
aam
loop
xchg
bound
lret
push
mov
jmp
cmp
or
add
add
outsl
int
adc
into
sub
sub
jns
xchg
jns
jl
lock
mov
test
idivl
imul
push
loope
mov
insl
jno
adc
outsl
sarb
cmp
aad
std
mov
or
imul
and
jae
jns
roll
aad
sbb
sbb
push
mov
test
test
ret
in
push
inc
mov
sbb
js
mov
sub
sub
daa
and
or
jne
ja
sbb
or
jmp
ds
sub
les
ljmp
inc
adc
dec
scas
mov
mov
hlt
icebp
or
subb
and
ret
idivb
xlat
in
das
mov
push
mov
ret
imul
mov
jae
ds
adc
lods
roll
xchg
cld
mov
dec
jmp
pop
lods
mov
jne
mov
int3
mov
add
add
xchg
pop
repnz
test
popf
push
in
push
ret
lds
cmp
cmp
cli
ret
sti
lock
outsb
mov
js
jb
aaa
mov
mov
add
jns
cmp
pop
sub
inc
adc
pop
clc
pop
lock
mov
not
cmp
pushl
in
adc
xchg
out
fucom
int3
jecxz
push
lds
les
hlt
sahf
aaa
sbb
mov
cmp
int
add
imul
adc
shrl
call
in
insb
pusha
stc
pop
and
mov
lds
ja
dec
mov
push
popa
pop
test
mov
lret
dec
ficompl
dec
jns
cmp
cmp
adc
notb
ljmp
push
jns
aaa
aaa
rolb
inc
xor
cmp
cmp
in
mov
xchg
inc
sbb
sub
dec
test
adc
ljmp
es
mov
or
stos
mov
stc
sub
jbe
stos
cmp
hlt
les
das
mov
mov
add
push
pop
push
fsubl
pop
cmp
icebp
push
lea
push
out
out
pop
or
xchg
int3
sti
scas
pop
mov
lcall
int
xor
fs
repnz
sarl
addl
cmp
push
movsb
inc
and
nop
ret
mov
roll
cmpsb
testb
adc
inc
pop
xor
adc
inc
mov
mov
and
enter
inc
cwtl
or
lods
lahf
inc
mov
sbb
push
inc
