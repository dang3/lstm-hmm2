jge
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
add
xor
adc
add
add
jb
add
test
add
lcall
add
add
aam
add
out
add
clc
adc
add
adc
add
adc
add
adc
add
adc
add
add
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
popa
adc
add
add
xchg
adc
add
in
std
cmpsb
inc
stos
pop
mov
shlb
cmp
cmp
add
cmpsb
xchg
push
dec
dec
leave
mov
ss
stos
ficompl
aas
xchg
mov
rclb
push
daa
lea
pushf
repnz
xor
sub
mov
cltd
stc
sbb
mov
xor
data16
push
je
push
xor
incl
stc
bound
aam
mov
movsb
mov
into
sub
mov
inc
pop
lea
xlat
sbb
ljmp
push
pop
stos
loope
aam
mov
aaa
outsl
sbb
xor
adc
and
cmp
xacquire
add
insb
fsubs
ds
ret
shr
pop
xor
sbb
arpl
xchg
push
insb
std
stos
loopne
sbb
add
jb
inc
add
add
aas
stos
fwait
aam
shll
xor
push
fistl
bound
hlt
icebp
inc
in
mov
mov
cld
aad
iret
xchg
xlat
imul
pop
cmp
xchg
xchg
mov
mov
pushf
sbb
and
aam
and
adc
popf
inc
jnp
movsb
enter
add
icebp
adc
cmp
push
cmpsb
outsb
xor
hlt
bound
add
and
popf
insl
incl
adc
xchg
mov
jecxz
sub
pop
mov
mov
push
in
sub
jne
stos
xchg
dec
sbb
pop
dec
pop
imul
sub
dec
mov
and
jp
out
jb
enter
pop
movq
sbb
mov
frstor
mov
mov
sbb
fwait
jl
push
fisubs
scas
sbb
ja
lret
jbe
xor
idivl
mulb
and
in
shl
addr16
fsubs
and
stos
lahf
xor
mov
lods
dec
mov
xor
adc
jmp
sbb
in
sub
jecxz
ds
out
hlt
loopne
adc
sub
cmpsb
add
cmp
leave
mov
orl
nop
adc
dec
mov
push
fmul
push
gs
iret
xchg
mov
idivb
jae
nop
lods
push
mov
xchg
sahf
sahf
xchg
adc
jnp
and
add
pop
inc
fimuls
pushl
loopne
sub
cmc
jno
idivl
mov
adc
mov
insl
divb
and
repnz
jmp
fnsave
loope
mov
xchg
lds
mov
dec
sbb
push
call
test
repz
leave
jp
sub
adc
psrad
xchg
mov
or
ficoms
ret
and
js
sub
lods
cmp
xchg
mov
aas
push
fildl
stos
popf
and
cmp
ret
imul
out
mov
jmp
arpl
rolb
sti
arpl
sub
jae
jge
mov
cmp
std
mov
jmp
and
sub
adc
pop
sahf
mov
add
cmp
sbb
sbb
mov
jno
in
mov
rclb
ret
inc
les
repz
xchg
mov
cltd
frstor
sub
mov
mov
xchg
and
push
sbb
ds
xchg
push
xor
inc
xor
int
add
pop
xor
fcmovnb
cmp
imul
jnp
inc
push
cmpsb
movsl
lret
test
add
xor
mov
dec
in
xchg
inc
mov
mov
pop
mov
sbb
lods
adc
cmpsb
movsl
or
cld
mov
pop
les
cs
popa
inc
imul
lock
fnstsw
sarb
test
ja
xor
das
fdivrl
pop
gs
jmp
addr16
out
jg
mov
adc
mov
push
mov
std
jmp
and
and
insl
insb
lret
push
mov
push
sbb
shrl
inc
cmp
bound
push
cmp
cwtl
cmp
sbbb
arpl
add
bound
ror
sub
ljmp
sub
sbb
add
enter
jns
aaa
lods
subb
shr
sub
mov
ljmp
push
rol
insl
xor
mov
mov
mov
sahf
push
cmp
mov
gs
frstor
in
mov
inc
das
pop
cli
jl
fstl
xchg
sbb
mov
xchg
xchg
mov
imul
cltd
inc
loop
add
mov
mov
push
rorb
jnp
add
pop
push
fsubl
scas
jo
lea
popf
std
adc
jmp
arpl
dec
popa
mov
cs
pop
pop
adc
dec
loope
xor
nop
imul
push
or
idivb
sbb
mov
movsb
nop
sahf
movsb
dec
mov
into
andl
out
stc
ret
push
or
nop
xchg
pop
ds
bound
mov
mov
or
mov
sahf
insb
jle
push
cmp
nop
dec
jo
mov
jecxz
jbe
mov
loop
aad
mov
hlt
adc
shlb
mov
cmpsl
repz
pushfw
in
test
inc
shrb
jmp
inc
imul
mov
adc
sub
fdivl
test
xchg
icebp
push
push
js
add
lds
and
mov
in
xor
lret
gs
xchg
and
xor
jae
loop
xchg
mov
mov
push
jne
out
imul
cmp
rorl
sub
enter
imull
hlt
stc
test
push
test
fdivrl
or
shrl
subb
popa
pusha
sub
fldl
sbb
cmp
push
and
fs
rdmsr
iret
push
inc
orb
jnp
mov
jp
lret
pusha
push
repnz
mov
mov
scas
dec
out
lret
xchg
fsubrl
orb
sub
jge
ficompl
bound
push
notb
lds
dec
inc
test
iret
icebp
mov
sti
cmpsb
dec
cli
xor
into
cmp
sub
jmp
jecxz
and
insb
or
neg
jl
push
ljmp
mov
enter
sti
jne
or
and
mov
xchg
or
cmp
xor
lret
mov
aam
sub
jbe
bound
mov
aam
and
or
and
stos
mov
ret
add
scas
xchg
push
xchg
repz
xor
jo,pn
aad
jle
dec
jge
add
movsl
cs
mov
lock
movsl
jae
inc
dec
test
xor
xor
dec
sar
pusha
imul
cmp
and
mov
push
mov
add
movzwl
call
sub
add
call
dec
push
sub
call
dec
sub
imul
mov
inc
sub
call
inc
lea
add
sub
add
or
add
mov
inc
and
dec
dec
mov
sub
call
sub
add
mov
dec
call
mov
call
mov
mov
inc
xor
dec
xor
inc
lea
lea
pop
mov
add
inc
pop
sub
lea
pop
xor
lea
dec
dec
pop
mov
imul
add
lea
imul
dec
dec
dec
pop
lea
and
pop
lea
dec
mov
movzwl
sub
call
dec
sub
mov
inc
ret
add
and
push
add
xor
push
mov
push
dec
lea
push
sub
dec
push
mov
dec
mov
mov
add
push
lea
ret
push
dec
add
inc
mov
lea
inc
sub
push
lea
add
push
inc
call
pop
ret
jmp
sub
and
inc
sub
movzbl
dec
mov
xchg
lea
mov
inc
inc
xor
inc
mov
mov
xor
inc
add
lea
dec
jne
sub
mov
dec
add
pop
dec
mov
pop
dec
mov
pop
lea
lea
lea
inc
inc
add
movzwl
mov
lea
xor
add
add
ret
push
mov
movzbl
add
inc
movsbl
inc
dec
dec
push
push
push
push
dec
inc
dec
push
and
inc
dec
xor
inc
add
dec
inc
dec
mov
add
push
movzbl
dec
xor
inc
inc
push
mov
or
push
mov
mov
pushl
lea
call
lea
add
mov
inc
lea
mov
mov
movzbl
dec
pop
ret
jb
or
xor
dec
add
mov
lea
lea
mov
lea
inc
inc
movsbl
dec
mov
and
mov
inc
mov
xor
cmp
jb
sub
mov
inc
xor
inc
add
xor
mov
pop
dec
and
test
jbe
dec
sub
lea
add
lea
movswl
mov
and
imul
inc
inc
lea
lea
imul
and
sub
inc
inc
dec
inc
xor
inc
mov
movsbl
and
dec
imul
mov
dec
inc
movzbl
dec
lea
add
dec
movzwl
and
mov
and
mov
sub
dec
mov
mov
mov
inc
dec
mov
inc
inc
add
dec
dec
inc
dec
jne
lea
mov
sub
and
add
mov
lea
add
mov
add
mov
add
mov
dec
lea
mov
mov
sub
inc
dec
and
mov
dec
dec
test
jbe
add
inc
xor
inc
add
inc
mov
mov
dec
inc
imul
movsbl
inc
lea
xor
inc
dec
dec
mov
mov
add
dec
and
movsbl
dec
mov
sub
or
movzbl
inc
or
add
movswl
add
and
inc
movsbl
mov
xor
mov
movzbl
dec
mov
mov
dec
mov
mov
imul
dec
movzbl
lea
inc
add
add
jmp
push
call
sub
xor
add
inc
xor
add
mov
inc
and
mov
inc
dec
sub
xor
add
movswl
dec
dec
shl
add
mov
xor
dec
mov
push
lea
mov
xor
call
mov
pop
mov
add
mov
imul
mov
sub
dec
sub
cmp
je
call
call
movswl
iret
dec
mov
mov
xor
mov
mov
add
add
add
lea
inc
and
sub
and
pop
dec
ret
push
inc
mov
xor
mov
mov
push
add
movswl
push
sub
push
mov
push
lea
lea
push
dec
dec
inc
dec
mov
call
lea
push
mov
push
imul
pop
dec
add
mov
lea
sub
mov
dec
lea
inc
lea
inc
dec
je
inc
inc
inc
mov
add
inc
xor
imul
lea
mov
movzbl
dec
mov
mov
lea
sub
dec
repnz
sub
mov
add
mov
jmp
dec
mov
mov
and
mov
and
lea
imul
mov
mov
inc
add
jmp
inc
imul
sub
mov
pop
pop
ret
push
dec
lea
add
movswl
xor
sub
mov
mov
dec
dec
lea
lea
add
xor
mov
mov
xor
and
mov
add
inc
lea
sub
mov
lea
movsbl
sub
pop
ret
sub
movzbl
mov
mov
mov
mov
add
dec
mov
or
mov
mov
imul
mov
xor
dec
lea
mov
add
dec
inc
mov
lea
add
inc
mov
dec
cmp
jb
inc
push
inc
movsbl
push
xor
mov
push
mov
inc
mov
add
sub
xor
add
and
xor
or
add
xor
mov
push
add
inc
xor
xor
add
mov
add
or
mov
imul
dec
movzbl
sub
inc
sub
inc
add
add
dec
add
mov
inc
movzbl
sub
lea
lea
or
dec
inc
dec
inc
movzwl
mov
lea
movzwl
lea
sub
mov
imul
cmp
jmp
and
sbb
hlt
sub
cmp
lock
out
mov
adc
pusha
add
hlt
mov
add
mov
lahf
daa
leave
aad
xlat
push
xchg
mov
inc
lahf
mov
add
xlat
mov
test
pop
or
pusha
lret
ljmp
pop
cli
mov
cltd
dec
es
cwtl
adc
into
jecxz
addb
push
lock
out
push
jmp
and
cwtl
test
xchg
inc
rcr
das
adc
pop
mov
int
sub
push
and
lahf
popa
flds
sbb
in
adc
lock
lods
sub
ss
stos
add
mov
push
stc
jb
push
mov
into
jno
add
mov
mov
cmp
add
mov
mov
dec
out
iret
cmpsl
cmpsl
incl
insb
rorl
xor
hlt
bound
add
jne
xchg
mov
orl
sar
pop
sbb
push
adc
jbe
xlat
data16
cwtl
test
movsl
jns
or
mov
ror
leave
mov
jns
xchg
push
fs
lret
insl
cwtl
cmp
sbb
dec
adc
movsb
and
inc
cmp
cli
in
rclb
inc
aaa
lods
xchg
mov
ljmp
jg
dec
stc
and
jno
adc
aas
fsubs
cmp
ss
cld
arpl
in
pop
cmp
fnstsw
fld1
mov
xor
addr16
imul
mov
mov
stc
mov
fwait
je
sbb
shlb
xchg
sahf
mov
mov
xor
add
into
leave
or
mov
mov
stc
mov
insb
or
pop
jbe
adc
std
inc
es
jnp
lock
add
adc
mov
xor
and
ret
mov
imul
mov
adc
mov
dec
arpl
mov
aam
mov
mov
fisttpll
push
cltd
mov
cmp
out
xor
out
add
mov
icebp
xorl
adc
jo
rcrb
stc
push
je
mov
pop
pop
inc
or
loopne
pop
push
insl
jo
and
pop
aam
mov
sub
bound
decb
sbb
jbe
int
add
cmpsb
or
sti
loope
sub
rcl
mov
in
rorb
pop
xchg
in
iret
rorl
shrb
in
jo
push
push
ljmp
pop
js
xor
cmp
ja
out
mov
out
enter
mov
add
push
sub
push
pop
mov
mov
in
mov
sbb
jb
xor
xor
std
fisubl
fmuls
and
dec
ret
sbb
imul
lds
jne
mov
jl
popa
loopne
fcoml
loopne
cwtl
mov
in
fiaddl
pop
ljmp
fwait
jecxz
pop
adc
out
push
daa
stos
jmp
cmp
pop
popf
mov
inc
imul
insl
pop
out
dec
mov
mov
sbb
outsb
pusha
gs
icebp
jns
test
loopne
xlat
repnz
call
cld
mov
or
and
push
js
les
lods
pop
pusha
push
in
mov
jmp
into
cli
mov
add
push
test
iret
inc
jbe
jge
icebp
repz
cmp
test
movsl
add
push
mov
call
or
repz
pop
fwait
cmpb
ljmp
jl
fmul
push
sub
dec
xorb
xchg
call
fisubrs
adc
std
sub
xor
sub
popa
xchg
dec
enter
jno
or
xchg
xchg
sub
jecxz
or
in
call
xchg
jae
mov
inc
jnp
xchg
xor
outsl
sbb
pop
cld
test
jmp
js
fistpl
cmc
jg
xor
dec
mov
add
addb
cs
rclb
inc
mov
xchg
cmpsl
xchg
inc
mov
pusha
push
or
cmp
in
xchg
mov
aad
in
movsl
and
dec
mov
mov
hlt
sbb
ret
insl
repnz
cld
pop
fstps
pusha
test
ds
repz
jg
push
and
std
pop
clc
pusha
mov
addr16
xchg
inc
add
sahf
movsb
loopne
cs
add
ret
jle
out
lcall
mov
jne
cs
enter
xchg
adc
jae
jmp
repnz
shlb
pop
inc
mov
cmc
gs
shrb
mov
fcmovnbe
aaa
movsb
shr
dec
cs
jnp
je
daa
out
cltd
fimull
out
outsl
ja
and
rcl
jg
fs
xor
push
hlt
jle
or
in
ja
inc
pop
push
sub
cld
rcl
insl
jmp
mov
dec
xchg
imul
xchg
add
adc
stos
jecxz
inc
adc
cltd
lock
or
jecxz
mov
lock
or
dec
xor
movsl
push
bound
rorb
arpl
xchg
int
jg
cmc
je
in
or
sbb
pop
pop
fimuls
insl
test
mull
je,pt
push
int
scas
push
pop
dec
xchg
pop
jne
add
scas
jge
inc
loope
cmp
xor
lods
es
scas
mov
out
adc
std
decl
xlat
adc
inc
pop
push
push
shll
fidivl
out
scas
in
int
mov
mov
fisubl
stc
outsb
and
push
mov
sbb
repz
jmp
aad
loope
or
lea
and
add
shll
in
mov
scas
add
out
pop
fsubr
jg
xchg
dec
pop
fstps
or
pushf
mov
jg
pop
gs
mulb
push
scas
stos
mov
ret
mov
out
cmpsb
ficoms
pop
mov
pop
fwait
xor
pop
or
pop
aaa
pop
jne
or
dec
nop
inc
fdivrs
call
cmpsb
hlt
lea
dec
add
mov
adc
push
iret
leave
jp
sar
iret
insb
dec
lret
push
pop
adc
mov
sub
stc
outsb
ljmp
out
jne
xlat
scas
testl
notb
add
bound
cmp
mov
push
or
push
repnz
data16
adc
jnp
or
mov
mov
push
add
cli
xlat
add
pop
push
dec
and
fs
xchg
inc
inc
push
shll
jl
sbb
nop
dec
int3
fwait
adc
mov
add
repnz
jge
aas
aaa
addr16
roll
idivl
test
inc
push
cli
scas
nopl
add
lcall
push
pop
lock
sub
jns
daa
inc
cmp
dec
jb
xor
push
push
mov
lods
shrb
sub
sub
lret
push
test
nop
mov
cld
pop
and
movsb
jo
jge
es
fisubrl
notl
insl
fistps
add
mov
inc
imul
cwtl
ret
pusha
push
adc
mov
ss
or
dec
mov
mov
ret
mov
mov
or
out
cmp
fcomps
fwait
out
sub
int
jns
cmp
fildl
cld
inc
andb
dec
mov
push
scas
out
jo
popf
pop
cmpsl
aam
je
idiv
int3
adc
xchg
rcl
pop
jne
sti
push
and
mov
dec
jge
lea
pop
in
xor
lret
push
and
aaa
testb
icebp
and
mov
dec
mov
adc
lret
jl
xor
test
mov
ja
jo
lods
repnz
fldl
cmp
push
in
jo
sbb
xchg
push
push
xchg
ficomps
es
ja
mov
push
or
xchg
sbb
dec
add
push
outsl
out
xor
movsl
mov
test
inc
ja
iret
or
in
adc
shll
or
sbb
inc
int
mov
mov
jmp
nop
nop
test
popf
addr16
add
jae
imul
aas
sti
mov
lods
xchg
vmread
movsb
test
shll
ja
dec
pop
cld
pop
mov
and
outsb
jl
int3
push
sti
test
and
cli
in
cltd
push
cmp
add
test
xor
mov
cmpsb
enter
aad
loope
cmc
aam
and
mov
xor
lods
sub
ss
or
adc
or
roll
mov
popa
dec
xchg
outsl
dec
js
ljmp
orl
sub
aaa
jmp
jp
sbb
dec
mov
cltd
mov
inc
test
sarb
jle
pusha
sbb
jne
cmp
aaa
out
in
push
lods
fs
cmp
sub
scas
cli
andb
or
cmpsb
xor
dec
dec
xchg
jl
and
stos
daa
jp
pop
sub
clc
mov
inc
jae
sbb
mov
jae
dec
lods
and
sbb
pop
sub
fs
dec
xor
mov
fbld
das
outsb
fs
fstl
ds
xor
sbb
or
mov
sti
iret
call
in
mov
or
dec
fistps
push
sbb
or
pop
jno
adc
xor
push
push
cltd
lods
out
push
adc
inc
lahf
xchg
xor
inc
cs
sbb
add
call
rcr
jb
out
inc
mov
add
int
xor
lock
xchg
les
ret
mov
sbb
dec
and
fcomps
xchg
jbe
fbld
fwait
or
iret
movsl
mov
cmpb
and
lods
add
scas
mov
adc
sbb
shrb
imul
lea
test
mov
sbb
cld
pop
fisubl
push
jb
or
scas
stos
ss
mov
iret
js
into
jns
insb
lret
push
push
inc
fstpl
cmc
ljmp
push
pushf
push
lods
das
fdiv
stos
test
xchg
sub
cld
pop
adc
jae
xchg
data16
add
movsb
test
jmp
jmp
and
mov
push
shrb
in
insb
in
outsl
lods
ret
das
pop
and
rcl
orb
xlat
and
push
mov
call
mov
in
ja
xchg
cmpsb
pop
cmpl
jg
add
int
cmp
mov
aas
mov
xor
push
je
jmp
mov
sbb
sub
mov
jle
push
in
xchg
fists
rol
xchg
repnz
lret
jp
or
ljmp
out
push
fistps
das
jo
push
cwtl
inc
dec
cmp
sub
dec
pop
adc
pop
mov
out
insb
xor
pop
cmpsl
push
sub
jge
and
adc
sub
add
notb
dec
fistl
jmp
aam
cmp
xchg
imul
jbe
mov
pop
sub
or
dec
fdivr
add
jg
lahf
add
test
and
push
sbb
pop
hlt
insb
pushf
mov
xchg
lock
es
fs
sub
std
sbb
adc
or
inc
jbe
cmp
fdivp
push
fsubs
orb
push
fidivrs
cmp
cmpsl
push
js
push
leave
dec
push
and
or
sbb
add
les
sub
xchg
dec
push
in
cli
mov
jecxz
gs
jmp
mov
xchg
ljmp
test
adc
pop
fmul
sub
push
push
insl
das
sbb
inc
sbb
push
xchg
mov
inc
pusha
shlb
fcmove
pop
divb
jg
pop
adc
xor
xchg
xor
dec
ljmp
inc
cmp
daa
idiv
inc
sub
push
mov
jl
mov
xor
jbe
leave
fimuls
lret
dec
jp
in
jg
gs
mov
pop
cmpsl
fidivs
push
popf
movsl
stos
pop
je
test
and
das
fucomi
jp
pop
shl
lahf
cmp
xchg
pusha
cs
xor
int3
loopne
jno,pn
cltd
outsb
jl
ja
mov
lahf
jl
xchg
xchg
jae
jecxz
into
ds
xchg
mov
mov
test
xchg
mov
mov
xlat
jnp
xchg
mov
pop
daa
not
and
and
sub
les
inc
aas
mov
jmp
mov
shrb
out
pushl
dec
and
scas
push
aas
sarb
enter
loopne
std
hlt
adc
shl
pop
aad
out
sub
pop
mov
sbb
call
cmp
adc
call
std
mov
and
in
imul
flds
cmpsl
stc
push
lret
stc
insb
mov
fimull
xchg
movsl
cltd
popf
rolb
test
mov
mov
adc
push
mov
jb
dec
push
dec
pop
jmp
push
cmpsl
rclb
stos
jmp
or
add
lcall
sub
xchg
jg
ljmp
or
inc
lods
add
mov
and
fsubrl
adc
in
xlat
and
push
rol
rclb
xlat
xlat
adc
addb
mov
mov
push
movsb
and
mov
mov
sbb
std
adc
cmp
jo
cmc
shlb
cmpsb
sub
and
ds
cmc
lahf
int3
add
xchg
fwait
rcll
fisubs
ljmp
xchg
mov
xchg
add
add
shlb
pushf
jb
mov
std
xor
jle
cld
aaa
pop
mov
or
repz
mov
ja
push
in
in
sub
pop
fwait
repz
xchg
xor
push
data16
lret
mov
lret
pop
ret
add
push
test
cltd
cltd
dec
push
dec
push
fstpt
or
mov
in
addl
lds
push
jp
mov
mov
fwait
inc
mov
nop
sbb
cli
dec
sti
jne
add
es
fwait
movsl
fcomps
cs
dec
inc
xor
sti
mov
ja
int
lret
pop
call
inc
lret
cmpsb
fisubrl
loope
push
jno
xchg
mov
mov
test
mov
cld
insl
data16
pmaxub
nop
xor
in
adc
jp
or
testl
test
jge
das
bound
xor
lea
or
mov
push
repz
stos
lea
push
add
and
int
int3
xchg
lahf
cmp
mov
jns
ja
mov
popa
push
loope
sbb
call
das
repnz
or
rol
in
fsubs
nop
mov
push
dec
pusha
ja
and
inc
ret
pop
adc
xchg
mov
ficomps
xchg
int
inc
mov
cmp
push
mov
mov
mov
sbbb
xchg
dec
cmpsl
lods
xor
jns
sahf
sub
push
lcall
dec
sti
ret
ja
fxch
xor
xor
test
pop
xchg
pop
sbb
fwait
in
and
subl
dec
je
fcompl
fcoml
fcomps
test
in
push
lcall
sbbb
xorl
shlb
adc
mov
mov
mov
push
mov
arpl
inc
sbb
or
jno
je
stos
xor
mov
in
xor
cmp
sub
xchg
ss
inc
cmpsl
adc
das
out
fst
xchg
int3
push
icebp
pop
lods
sub
clc
lcall
mov
adc
xor
cmpsl
xchg
mov
insl
inc
xor
iret
mov
sahf
fwait
dec
dec
out
stos
test
xor
ret
and
fcoml
in
aam
pop
ljmp
jbe
mov
test
ljmp
nop
inc
pusha
push
mov
in
gs
sub
mov
idivb
push
inc
mov
xor
adc
and
fs
movsl
aaa
mov
jae
jne
repnz
sbb
fwait
inc
adc
lds
sahf
and
cmp
fwait
je
jns
sarb
int
in
sahf
test
dec
rolb
or
lret
xor
divb
std
loopne
sahf
push
mov
adc
js
loopne
cmp
jbe
iret
test
es
lock
rorl
mov
sarb
int
push
inc
mov
adc
sub
push
shrb
pop
insb
loopne
or
daa
jo
cmp
xlat
mov
cmpsl
aam
lds
push
in
push
ljmp
fisubrs
push
popa
xchg
and
mov
popa
mov
ror
std
outsl
rorb
mov
jmp
mov
lahf
push
sub
jmp
test
dec
ss
sbb
repnz
xchg
outsb
fisttpl
add
cmpsl
mov
adc
mov
add
sbb
mov
dec
daa
ljmp
jmp
sbb
sbb
push
sbb
sbbl
mov
sub
sub
mov
inc
cli
jmp
bound
sbb
out
mov
daa
push
ja
xor
les
rol
inc
stc
andl
inc
xor
pop
mov
push
jmp
add
xchg
jge
ss
xchg
test
jne
test
pusha
fwait
iret
dec
fadd
or
xchg
mov
loop
xor
stc
iret
push
leave
rcll
je
aad
mov
sbb
inc
xchg
sbb
bound
aas
leave
out
jns
mov
gs
inc
xchg
jns
clc
xchg
popf
fcmovb
adc
jg
mov
dec
xchg
inc
addr16
shr
cltd
ljmp
fdivs
cmp
cltd
add
mov
sbb
cmp
adc
loope
xor
iret
sahf
mov
pop
adc
repz
ljmp
mov
cmpsl
mov
mov
std
sub
cmp
popa
cmp
dec
inc
push
cmp
mov
lods
mov
in
and
sub
xchg
pop
frstor
jb
pushf
rcrl
push
mov
inc
aad
aam
lods
add
cld
jg
jb
push
adc
xor
aas
addl
and
in
scas
pop
xchg
negl
add
fisubrs
enter
fldl
xchg
js
mov
sub
testl
xchg
repz
or
lret
lods
pushf
mov
jl
xchg
aad
jbe
push
fs
notb
lea
cwtl
and
mov
sub
sub
mov
mov
pop
mov
repnz
std
aad
mov
ljmp
inc
jb
cltd
dec
xor
stos
jg
cs
jns
sbb
inc
subb
test
test
jl
inc
push
rcr
push
shll
roll
sub
unpcklps
jg
dec
jl
inc
popa
or
ss
out
sub
stos
repnz
pop
xor
jae
hlt
ja
cld
aaa
sbb
lahf
js
xor
in
add
js
mov
repz
cmp
inc
jo
roll
mov
adc
sbb
mov
push
or
and
cmp
push
mov
ficompl
jl
pop
in
mov
dec
add
xchg
push
mov
xor
xchg
xor
xchg
cli
sti
orl
inc
imul
push
dec
mov
jp
outsb
sbb
movsb
lds
lret
addb
sti
fisubrs
scas
imul
aam
adc
insl
pop
push
mov
sub
in
adc
adc
pop
xor
jo
jecxz
clc
cmp
xchg
mov
cwtl
sbb
pop
int
xchg
add
xchg
enter
outsl
jnp
jbe
cmpsb
out
cmp
aam
xchg
mov
pop
cwtl
jnp
jns
and
dec
scas
arpl
scas
aas
xor
pop
xor
inc
in
add
ja
outsl
ret
dec
xchg
sbb
movsb
mov
add
insb
cli
mov
sbb
out
or
ret
mov
sub
fcmovbe
ja
call
fst
in
fnsave
les
in
pop
loope
jbe
es
sbb
pop
cmc
mov
insl
outsb
iret
arpl
dec
repnz
mov
sbb
imul
stc
or
push
pop
xchg
cmp
in
push
repz
xor
mov
mov
pop
popa
nop
mov
stc
mov
out
insl
xor
hlt
pop
xor
mov
mov
jg
inc
mov
repnz
sub
scas
out
dec
mov
cmp
xlat
ja
fisttpl
or
movsb
idivb
or
aam
and
xchg
ljmp
sub
int
adc
subl
mov
xchg
cmp
mov
cli
jl
add
out
arpl
dec
movsl
imul
nop
cmpb
inc
outsb
shrl
out
jne
or
sbb
cwtl
mov
inc
cs
clc
insb
xchg
outsl
out
jge
lahf
mov
mov
aam
shll
idiv
insl
out
test
leave
std
nop
and
out
jbe
repz
out
std
dec
push
andb
dec
lcall
cmp
mov
or
cmp
or
pop
cwtl
xor
dec
nop
fnstcw
mov
out
mov
lret
rorl
shll
push
outsl
mov
pop
add
insb
pop
inc
arpl
cmp
dec
addb
stc
cmp
cld
loope
push
xor
in
loopne
push
dec
jge
js
test
decl
stos
add
out
and
jmp
jg
mov
push
cmpsl
mov
pop
inc
xchg
pop
les
in
push
pop
jmp
out
jmp
push
inc
mov
repnz
leave
fcompl
push
add
mov
cmpsb
cmpsl
iret
push
dec
jmp
dec
xor
je
sbb
in
mov
ds
sbb
inc
lret
inc
dec
xor
sbb
adc
lea
stos
jb
mov
lea
fstl
sub
mov
cmp
andl
popa
mov
aas
nop
leave
jmp
lret
mov
jle
aas
mov
pop
xor
or
jo
cmpl
ret
enter
sub
shll
jnp
jnp
fst
push
jo
pop
jp
les
lods
clc
pushf
or
or
loop
scas
cmp
and
into
sub
mov
test
and
rolb
icebp
rcrb
repz
ficoml
sbb
and
mov
or
dec
cmp
jp
sar
rcrl
in
dec
cwtl
jp
rorb
xlat
adc
add
push
iret
int3
jmp
imul
hlt
cmp
inc
cmp
dec
out
cmp
sar
mov
out
jbe
sbb
push
ds
ja
cmp
jns
add
cltd
shll
mov
bound
mov
insl
add
jg
or
cmp
xlat
scas
jb
inc
inc
xor
icebp
iret
notb
inc
jmp
repnz
push
rcl
inc
jo
mov
mov
cmp
or
pop
mov
xlat
jo
cmp
mov
aas
sbb
dec
rorl
and
aad
add
idiv
bound
dec
jl
and
leave
shrl
pop
sbb
cmp
add
dec
shlb
arpl
leave
push
push
dec
adc
aam
push
cmp
test
jb
adc
push
xor
test
jl
popf
add
dec
mov
jns
add
xchg
pusha
xorl
aas
adc
mov
in
cmpsl
mov
int3
out
sub
sub
jle
cmpsl
mov
sbb
test
jmp
dec
stos
mov
in
sbb
and
fbld
call
xor
xchg
aaa
test
inc
push
inc
pop
aam
pop
add
fisubl
out
cwtl
adc
jmp
out
mov
loopne
mov
adc
add
pop
push
mov
outsl
push
mov
mov
inc
sahf
arpl
pop
adc
loop
xchg
lahf
enter
lret
aaa
scas
je
test
dec
imul
scas
inc
insl
call
jne
pop
movsb
std
std
out
negl
jnp
icebp
aad
ljmp
mov
cmpsl
mov
cmpsl
aaa
inc
cmp
jbe
or
fstpt
test
shll
pop
push
inc
pop
rolb
cmpsl
add
popf
into
test
mov
mov
test
add
test
adc
outsb
jns
outsl
adc
aas
cmp
adc
scas
pop
lea
add
cmp
adc
jg
fldl
sub
rcll
adcb
or
fmuls
notrack
jecxz
dec
dec
icebp
in
mov
repnz
clc
bound
clc
mov
mov
mov
lahf
repz
mov
sbb
xor
mov
xor
dec
mov
push
sbb
data16
divw
nop
loop
mov
inc
mov
fistpll
jmp
iret
outsl
outsl
stos
filds
mov
cmp
ror
push
rcrb
fadds
or
pop
inc
and
push
lods
add
into
mov
mov
cmpsl
inc
jg
sbb
inc
mov
lock
fcmovb
andl
pop
cmp
pop
pop
aam
pop
ficoms
arpl
xchg
stc
push
fnstsw
add
not
lea
mov
js
insb
insb
vucomiss
xor
stos
fnstenv
xor
mov
rcrl
dec
shrb
popf
lock
xchg
cmpb
shll
and
pop
popf
or
sbb
movsl
mov
psubq
vandnps
and
fwait
nop
or
mov
sbb
or
enter
sbb
rol
nop
cld
dec
sbb
in
mov
xlat
pushf
aaa
pusha
xchg
loope
ret
mov
movsb
push
add
add
jns
sarb
pusha
out
adc
jge
add
in
push
sti
mov
frstor
and
loop
mulb
shl
stos
push
mov
sub
mov
repz
imul
and
jp
pusha
clc
cmpsb
ficoms
stos
imul
adc
stos
rcl
dec
and
dec
jns
or
add
ljmp
jns
or
aas
enter
ljmp
aam
arpl
and
pop
out
outsl
loop
pop
push
cmp
jae
mov
test
fwait
in
aad
daa
enter
aam
sub
imul
mov
and
sbb
repz
or
stos
sbb
pushf
jbe
mov
int
push
or
mov
dec
dec
mov
xlat
fsubs
aam
lss
cmpb
nop
jnp
into
add
or
mov
out
stos
cli
cmp
cmc
push
sbb
jge
mov
push
cmp
pop
ret
mov
out
das
gs
inc
and
aaa
testb
inc
call
fwait
rclb
rorb
imul
add
xor
mov
insb
mov
push
das
filds
pop
repnz
adc
clc
movsl
addr16
dec
add
rorl
mov
pop
push
mov
mov
sbbl
sub
test
xor
sub
jp
pop
sahf
mov
push
or
mov
dec
nop
xorb
dec
mov
dec
loope
xchg
jecxz
fs
jbe
cmp
adc
fdivrs
lahf
inc
mov
pop
inc
hlt
jae
cmpsb
rcr
fwait
mov
rcrb
sbb
dec
addr16
pop
stos
das
lock
adc
jg
jp
xor
nop
paddsb
in
fwait
in
iret
cmp
xchg
ds
add
shlb
xchg
cwtl
dec
push
sbbb
mov
repnz
sahf
mov
mov
xchg
mov
lret
leave
sbb
ficompl
jg
call
cwtl
stc
icebp
jmp
jmp
push
pop
lock
push
mov
clc
icebp
and
mov
das
cmp
dec
xor
nop
jae
or
pusha
out
movl
jno
pop
jmp
xorb
xchg
aam
xchg
stos
fstps
and
lds
cltd
dec
push
mov
sbb
loop
es
push
popa
mov
out
clc
aam
aas
leave
xor
xchg
int
push
jns
cmp
out
pop
push
pop
aam
sub
and
lret
sbb
sahf
sbb
out
rol
jb
movsl
das
adc
stos
mov
imul
mov
xchg
shl
mov
dec
and
in
cld
out
in
push
inc
add
xchg
mov
lock
repnz
xchg
das
or
pop
push
flds
xchg
inc
fnstsw
aas
aam
mov
xchg
shll
scas
outsb
xor
sti
mov
pop
jo
xor
dec
jo
sbb
cmpsb
pop
rorl
fcomps
out
push
lods
jge
mov
aaa
xchg
xchg
ret
fstps
cmp
xchg
inc
movsb
es
push
mov
sub
mov
rol
mov
fcoml
out
xchg
sub
xor
cmpb
rolb
xchg
outsl
and
fs
or
sub
in
add
pop
mov
xchg
daa
negb
mov
mov
push
xchg
outsb
faddl
out
mov
out
mov
test
ficoms
xchg
insb
push
mov
sbb
or
push
pop
popa
xchg
lret
pop
mov
data16
or
adc
pop
in
push
mov
filds
sbb
push
jl
add
jmp
jmp
out
decl
adc
mov
jle
mov
cbtw
dec
sti
mov
sub
pop
push
jnp
call
adc
add
pop
les
push
mov
dec
popf
or
stos
dec
add
cmpsb
outsb
xchg
jns
repz
cmc
jmp
jmp
leave
je
xlat
mov
sbb
adc
popf
xor
push
scas
inc
mov
leave
lods
aad
lahf
stc
mov
xchg
xlat
xchg
aaa
sbb
mov
sub
arpl
jle
out
push
push
dec
adc
dec
dec
push
out
mov
push
aad
mov
xor
xchg
sub
enter
cld
push
fs
rolb
xchg
xor
and
inc
push
sbb
lret
adc
stos
pop
mov
dec
ja
test
dec
leave
push
sub
xor
adc
add
out
mov
sub
addl
cmpsb
mov
cmpsl
cli
popf
inc
and
pusha
add
nop
jge
push
pusha
adc
jns
ret
outsb
arpl
sbb
push
mov
sbb
roll
stos
pop
daa
fadds
cmp
jne
cmp
cwtl
rcl
out
cmp
xchg
outsl
jg
inc
inc
testb
xchg
fldl
cmpsb
sub
jae
xor
sti
mov
push
lcall
or
bound
cmp
pusha
aad
jle
nop
ret
sbb
sbb
mov
imul
shlb
cmp
cld
dec
push
insb
icebp
xor
sub
in
imul
dec
bound
add
sub
mov
stos
mov
sub
es
mov
pop
cs
dec
vpcmpeqb
in
sti
jecxz,pn
sub
cmpsl
arpl
out
xor
lea
lds
aas
inc
out
adc
out
cld
xor
loopne
cmc
fidivrs
in
pop
sarl
adc
fstps
jecxz
mov
mov
fsts
jae
cwtl
pop
pop
inc
mov
xchg
sub
arpl
pop
adc
sbb
cmp
cmp
jp
xor
xor
sub
xor
or
jg
rcrb
aaa
ljmp
pusha
xlat
pop
and
cmc
lock
js
mov
jle
mov
lods
dec
bound
add
sbb
push
push
mov
lret
inc
xor
sub
xor
mov
lods
insl
aas
lcall
nop
mov
lock
cmp
xor
push
stos
orb
insb
and
iret
movsl
mov
pop
push
jb
sbb
cmp
test
push
push
pop
in
sti
cmp
aaa
mov
cld
jp
clc
test
inc
pop
cmpsl
add
pop
loope
les
out
mov
sbbl
ja
cmp
jecxz
sbb
lret
sahf
mov
cld
xor
mov
shr
test
cld
jmp
int
lods
adc
xchg
dec
or
xlat
sbb
mov
adc
mov
xor
movsb
cmp
je
push
dec
out
and
aas
movsl
and
ljmp
aad
dec
lds
sub
sbb
arpl
add
pop
cmc
and
bnd
push
sub
mov
and
pop
sahf
push
popa
push
fnstenv
mov
xor
les
adc
xchg
cmpsb
mov
orl
ja
mov
sahf
int3
fstl
cmp
xchg
pop
jle
jbe
dec
mov
mov
cs
daa
jp
jae
and
add
scas
out
adc
out
popa
sbbb
xchg
fcompl
mov
mov
enter
lods
push
shrl
sub
sub
popf
sub
mov
rcr
xchg
cmpsb
adcb
outsb
fisubrs
and
call
sub
adc
push
pusha
arpl
fldenv
jg
sbb
mov
sarl
cli
lahf
and
jle
in
mov
ljmp
lahf
in
cmp
add
addr16
jmp
subl
pop
sbb
hlt
in
sbb
push
aad
mov
jg
sub
cmp
inc
shll
sbb
fnstcw
mov
arpl
jecxz
icebp
mov
cwtl
in
out
push
ret
fdiv
sbb
outsl
shrb
cmp
pop
xchg
push
cwtl
mov
fnsave
into
inc
lock
in
jmp
mov
std
sbb
inc
insb
jbe
xchg
jno
xchg
dec
or
lds
push
fdivl
pop
dec
sub
add
popf
int
fmulp
xchg
insl
inc
jp
cmp
pop
popa
fbstp
lahf
iret
lret
cmp
pop
ss
or
adc
cld
repz
insb
pop
adcb
inc
push
imul
jmp
or
push
xor
add
cmp
ja
pop
pop
cltd
xorb
fbld
hlt
jl
test
ret
mov
rcl
ja
jp
jp
add
push
dec
xchg
jne
sti
adc
xchg
aas
xchg
cwtl
idivl
xchg
fsts
aaa
add
lods
insb
mov
int
mov
cmp
insb
xchg
mov
in
cmp
jns
daa
stc
out
mov
xor
std
ret
shll
xchg
sub
shrb
or
mov
sub
dec
ret
inc
sbb
sub
cmp
sub
mov
pop
lahf
mov
mov
jmp
mov
into
in
gs
movsb
ljmp
in
inc
ja
pop
lods
std
jns
sbb
es
mov
dec
push
fwait
test
sbb
push
fst
jp
sbb
sbb
cmp
lods
pop
stos
cld
sbb
xor
or
sbb
imul
adc
out
repz
add
mov
jo
push
pop
movsl
lock
add
sti
cmp
and
jecxz
dec
mov
aas
pop
pop
mov
push
mov
cmp
and
push
xchg
or
mov
mov
cli
pop
or
or
push
jbe
pop
dec
rorb
sbb
jne
les
add
testb
test
sub
cmpsl
aad
arpl
outsl
ljmp
jae
pcmpgtd
pushf
add
insb
lods
mov
enter
or
pop
xchg
xchg
and
mov
mov
pop
jns,pt
jle
adc
fsubrl
test
adc
mov
push
hlt
inc
ficompl
mov
lods
test
movsl
mov
xchg
jle
cltd
loope
rcrl
fwait
pop
mov
mov
push
mov
out
cmpb
daa
xor
inc
mov
pop
inc
lahf
xchg
or
test
cli
dec
dec
cwtl
punpckhbw
dec
mov
pop
push
jle
or
push
mov
jo
data16
or
sbb
sbb
mov
icebp
into
adc
movb
mov
push
lcall
test
mov
mov
fs
int
jg
mov
aas
dec
push
mov
scas
test
cmp
or
testl
pop
xor
sub
cmp
std
cmp
repnz
fisubl
pop
adc
adc
das
cmp
mov
test
cmc
mov
pop
jmp
int3
and
lretw
loope
popf
cmpsb
push
testb
les
icebp
mov
push
xlat
outsb
cltd
scas
xchg
jge
push
push
xchg
std
es
jp
dec
cmp
jmp
jno
fldcw
mov
les
push
and
sbb
mov
and
dec
fisttpll
jns
add
mov
mov
ret
jle
xchg
push
dec
cmp
and
and
mov
inc
lret
xchg
mov
and
test
xor
in
in
rcrl
or
loopne
pop
mov
lret
and
push
jp
xchg
iret
xchg
fcompl
pop
dec
sub
and
aas
scas
adc
mov
idivb
mov
add
or
xlat
inc
mov
jb
fldcw
sahf
in
sbb
adc
xchg
and
call
fmuls
leave
push
pop
dec
sbb
xchg
mov
lret
pop
fstpl
adc
jb
and
cmp
inc
ds
cmp
mov
jp
cltd
inc
inc
dec
rcll
sbb
mov
push
push
pop
sub
ss
jmp
or
dec
arpl
mov
lock
sbb
popa
sbb
insl
sub
xchg
pop
das
jo
inc
jle
push
xchg
pop
frstor
cmpsl
add
icebp
mov
mov
xchg
or
jmp
inc
dec
lods
hlt
rcr
add
loope
mov
adc
mov
jb
xlat
mov
aas
filds
repnz
push
outsl
ss
repz
cmovp
movsb
jg,pt
jo
and
icebp
push
add
pop
add
xchg
dec
addr16
outsl
push
xor
mov
dec
lahf
push
mov
les
mov
push
loop
inc
dec
inc
pop
mov
jmp
cmpsb
cmpsl
lahf
int
xchg
inc
xchg
pop
inc
fisubrl
mov
ss
cld
popf
fimuls
push
inc
dec
xchg
pop
ret
clc
push
adc
inc
cmp
push
add
add
les
fcomps
xor
add
adc
lds
jo
dec
rcr
call
or
loope
rclb
lcall
sti
mov
cmpsb
inc
xchg
movsl
pop
imul
pushf
add
jmp
call
icebp
add
add
bound
pusha
test
sub
xor
mov
fbstp
popa
mov
lret
sub
js
xchg
in
mov
push
iret
fs
aam
push
popf
pop
in
insb
pushf
push
add
gs
or
xor
xlat
ficomps
adc
adc
inc
push
adc
shll
xor
aas
dec
lret
out
push
and
mov
pop
jne
pushf
jge
xor
lahf
mull
xchg
sbb
pop
lret
push
dec
mov
mov
mov
mov
es
arpl
cwtl
clc
and
xor
pop
sbb
test
ds
xchg
lods
in
push
pop
and
cltd
dec
pop
aam
xor
fbstp
repz
sub
mov
dec
lods
insl
mov
xor
mov
sahf
aad
mov
lea
xor
int3
aas
imulb
shll
in
sub
inc
popf
dec
lahf
mov
loop
add
add
sbb
popf
dec
addr16
xor
dec
add
popa
test
scas
or
ljmp
into
adc
pop
add
mov
sti
lret
dec
test
js
mov
gs
lods
movsbl
mov
in
daa
bound
jnp
loop
mov
imul
mov
icebp
das
xor
inc
sub
mov
jp
jle
loope
gs
ja
cmc
add
test
xchg
les
add
xor
sbb
icebp
jnp
shll
arpl
push
pop
repz
sahf
pusha
sub
ds
scas
out
inc
fsubrs
ja
into
and
aam
call
es
jno
lcall
or
jae
movsl
test
mov
and
stc
jns
aad
int
cld
inc
leave
fwait
aas
fs
in
mov
les
sub
daa
mov
rcr
adc
mov
mov
icebp
xorl
scas
cmpsb
cli
lcall
mov
sar
cmpl
push
mov
les
pushf
adc
push
add
jae
sub
push
popa
cmpsb
fadds
inc
xor
dec
jmp
and
lea
mov
mov
fincstp
mov
bound
or
pop
pop
ret
shll
call
fldl
add
sbb
mov
dec
jp
cs
movsb
xchg
adc
jne
fsts
movsl
push
push
pop
es
xor
cmp
fs
mul
sbb
or
jb
lock
cmp
mov
and
enter
push
rolb
xor
push
xchg
lods
fs
xor
mov
sbb
or
push
fld
lret
xchg
inc
idivl
inc
or
dec
dec
mov
push
add
cmp
xchg
insl
adc
and
xor
imul
dec
add
mov
test
xor
neg
or
fidivs
jnp
sub
bound
pop
loop
push
and
mov
aam
arpl
cmpsl
jae
xor
lahf
dec
dec
imul
jmp
js
mov
mov
movsb
xlat
fists
mov
xchg
push
push
or
repnz
sarb
scas
add
leave
inc
xchg
and
fsubs
lahf
mov
ja
popa
dec
sub
xchg
rcrl
mov
je
push
testb
add
jne
jo
sub
data16
daa
testb
xor
daa
jg
fisubrs
push
jnp
in
nop
jbe
loope
dec
outsb
mov
out
aad
rclb
mov
add
scas
stos
data16
sbbb
das
pop
sub
pop
adc
pop
mov
xor
push
sub
dec
sub
push
pusha
mov
negl
mov
sub
cmp
and
nop
push
cld
repnz
sbb
movsl
pop
mov
xor
sahf
or
jns
inc
dec
cmp
daa
mov
mov
adc
cmpsb
xor
mov
inc
cltd
xchg
nop
sbb
lods
pop
dec
push
dec
cmc
inc
fistpl
mov
add
xor
repz
dec
fcompl
in
test
mov
sbbl
jbe
jb
sub
pop
movsl
dec
pop
xchg
push
xchg
xor
fnstcw
cltd
mov
sti
in
ja
loop
or
add
mov
popf
into
fs
aad
jne
jae
stc
inc
fdivs
dec
pop
pop
int
ja
out
popa
pushl
fwait
insl
fsubs
rcrl
sub
movsl
push
pusha
jmp
pop
pop
or
mov
pop
cmp
cli
popa
rorl
stos
adc
aas
and
scas
mov
cmp
loopne
aas
inc
stos
xor
negl
orb
lret
mov
loopne
into
mov
lret
dec
pushf
popl
sub
jno
jle
xchg
cmpb
jbe
in
lret
xchg
sub
cmc
aas
cli
fimuls
jmp
xor
int3
rcrb
jb
and
in
sarl
push
xchg
ljmp
test
stos
jl
int3
mov
movsb
cmp
mov
rcrl
cmp
jae
pop
add
fisttps
lret
jne
dec
cmp
cmpsl
and
daa
mov
in
sar
lods
rclb
ror
das
sarl
push
lods
pop
sbb
movsl
adc
and
shlb
mov
jp
sbb
push
or
inc
imul
lods
jmp
jle
cmp
jns
loope
pop
pop
shrb
or
jecxz
addr16
mov
cmp
dec
rcl
popf
divl
fnsetpm(287
sbb
imul
ss
lea
adc
pop
jmp
jg
mov
in
sub
cmp
cmpsb
push
stos
xor
add
stos
push
rcr
out
shrl
mov
movsb
test
or
dec
or
shll
icebp
push
enter
arpl
fildll
mov
pop
movsl
lret
cmp
mov
aad
mov
push
push
roll
xchg
movsb
adc
vmptrld
ja
jnp
lods
inc
mov
ds
std
cmp
xor
fwait
sbb
or
js
aaa
test
sub
ret
pop
out
repnz
clc
imul
ja
jp
or
mov
fadds
inc
push
xchg
pop
rolb
out
push
movsl
repz
jmp
jp
push
dec
inc
add
mov
pop
adc
ret
dec
lea
in
int
cmpsb
and
mov
fcompl
sar
rcrl
decb
push
jae
jle
sbb
adc
into
mov
shlb
push
xchg
pop
pop
pop
push
inc
lret
dec
xchg
in
divl
or
jge
jg
adc
push
inc
mov
in
fucomip
insb
cmp
lock
jl
mov
add
cmp
add
sahf
fwait
les
xchg
data16
or
imul
xor
xchg
loop
test
fstpl
inc
add
jbe
sub
in
ljmp
jle
and
cmc
dec
jecxz
push
or
out
cli
lock
mov
mov
insb
es
pop
xchg
add
adcb
dec
jge
fisubl
push
pop
jo
movsl
fs
ret
mov
sbb
ds
loopne
mov
rorb
cmp
enter
mov
mov
fcmove
dec
xor
and
adc
lock
aad
es
jecxz
xchg
lret
fsubl
imulb
mov
nop
popa
addr16
test
iret
mov
dec
cmp
cmpsl
pop
push
mov
push
xor
lahf
cwtl
sbb
or
xchg
daa
push
pusha
xchg
sub
inc
jmp
sbb
imul
inc
aad
movsb
mov
mov
data16
fsubrs
mov
cli
test
fsub
cmp
xor
popf
adcb
pop
popa
fildl
sbb
xchg
insl
mov
test
cli
lock
sub
hlt
sub
jae
xchg
cmc
pusha
sbb
dec
pop
rcl
andl
adc
arpl
sub
or
dec
or
lcall
adc
push
outsb
jecxz
xor
sub
out
xchg
pushf
iret
cmp
fcomps
sub
das
adc
rcr
daa
and
dec
cmp
repnz
sbb
repz
add
inc
mov
pop
mov
out
push
sti
push
stos
cltd
push
mov
js
add
pop
xor
or
fcom
push
cmpsw
push
andb
scas
outsl
pop
add
hlt
and
adc
in
dec
in
mov
pusha
orb
fwait
mov
aad
push
jo
mov
add
mov
add
push
mov
add
and
add
inc
add
mov
add
cltd
cmp
add
add
cltd
xor
add
and
jp
test
or
jbe
sbb
sbbb
xchg
dec
or
loopne
sub
mov
stos
adc
jno
jb
in
or
fs
repnz
xor
test
mov
popa
pop
std
or
adc
fisubl
pop
ret
imul
imul
test
add
cmp
into
push
incl
fldcw
nop
mov
popa
leave
jge
lcall
xchg
push
dec
cmc
adc
cwtl
xchg
lods
add
lds
iret
ret
xorb
adc
mov
iret
mov
roll
das
repz
ds
pop
data16
xchg
pop
cmpsb
xchg
push
pop
sub
sbb
lcall
pop
add
jecxz
xchg
clc
repnz
ja
xchg
push
andb
enter
sbb
es
cmp
xor
aas
fcoms
mov
dec
es
cli
aam
jmp
inc
cmp
ss
add
shlb
aaa
add
mov
xor
sahf
sbb
or
fdivp
cmp
jae
leave
inc
push
extrq
jns
ret
in
mov
stc
fwait
sarl
les
xchg
push
add
loope
iret
daa
cmp
test
pushf
jl
das
jl
mov
mov
adc
test
mov
hlt
cmpsl
ljmp
adc
or
dec
sbb
ret
push
or
fs
daa
adc
inc
sub
aam
icebp
daa
cld
sahf
adc
in
mov
fwait
dec
push
push
into
test
mov
sbb
imul
ss
in
adc
jmp
pop
dec
cmp
cmp
outsb
jbe
cmc
adc
mov
push
daa
jo
add
loop
xor
mov
xor
and
mov
and
loopne
sbb
aad
push
push
sbb
ret
push
es
inc
dec
jge
or
cmp
aad
rorl
mov
fwait
mov
dec
jne
insb
mov
fbld
push
out
adc
pop
aam
sub
lret
ret
xchg
fdivs
inc
push
push
sub
mov
inc
jb
sub
scas
repnz
cld
into
popa
mov
cmp
fisubrs
jge
and
loop
inc
sbb
sub
or
scas
je
push
mov
out
sub
lds
aam
mov
add
add
out
adc
lea
mov
xchg
mov
inc
cs
jge
mov
dec
add
mov
sub
xchg
mov
adc
and
xor
ss
iret
add
cmp
outsb
pop
add
lds
out
push
sbb
pop
leave
inc
mov
lds
xor
fisubl
sbb
out
cmp
imul
cmpsb
cmpsl
xchg
adc
sbbb
xchg
pop
push
incl
adc
fstpl
jno
xchg
sub
icebp
rcll
add
pop
adc
call
xor
lcall
cmp
mov
insl
sbb
and
cmp
pushl
xor
xor
dec
dec
pop
push
notl
aas
mov
pushf
add
cwtl
mov
ss
push
lret
mov
adc
ret
cs
mov
inc
inc
lock
mov
daa
stos
or
adc
mov
scas
mov
add
orl
mov
cmp
out
shl
mov
cmp
push
push
mov
outsl
mov
or
imul
mov
mov
inc
mov
out
ljmp
push
inc
lds
inc
scas
in
jb
mov
cmpsb
scas
in
cmc
je
loope
aas
jae
and
leave
out
dec
mov
ret
mov
in
fnstcw
mov
mov
add
fs
mov
mov
popf
fildl
cmpsl
movsl
inc
cmp
or
mov
inc
lahf
adc
add
jno
or
adc
movsl
nop
add
sahf
add
mov
loop,pn
mov
andb
aam
repz
add
es
pop
shlb
rclb
sbb
sti
test
int
outsl
or
xchg
hlt
js
jnp
cmp
popa
enter
test
jecxz
arpl
bound
movsb
mov
int3
cmp
in
loope
ret
xchg
sbb
xor
pop
lahf
pop
or
mov
out
jl
jl
xchg
and
fsubrs
fsub
lods
push
add
adc
scas
inc
sub
pusha
push
mov
out
cmpb
in
fisubrs
icebp
push
sbb
push
cs
ljmp
xorb
add
jo
or
dec
xor
cmp
lods
out
or
cmp
jl
inc
lds
popf
lcall
repz
xor
repz
jg
int3
aad
sbb
data16
mov
inc
test
enter
mov
cli
cmp
jge
cmc
push
add
sub
inc
mov
fnstcw
cmpsb
adc
xchg
push
xor
arpl
adc
push
outsb
adc
dec
dec
inc
xchg
jno
cmpsl
std
outsl
pusha
pop
pop
and
mov
push
and
add
add
mov
mov
int
fidivrs
pop
iret
in
popf
fstps
out
xchg
dec
cwtl
imul
in
stc
mov
or
inc
frstor
push
loope
mov
mov
sub
mov
sbb
xchg
xchg
mov
aaa
add
sub
xchg
rorl
mov
xor
pop
jge
std
xchg
xor
mov
sub
mov
mov
ljmp
stos
jmp
add
pushf
add
jg
bnd
cmpb
movsl
lods
shr
dec
pop
add
icebp
sub
jns
cld
in
outsb
push
sti
mov
aad
out
xchg
adc
adc
inc
icebp
ss
repnz
and
push
pop
mov
xchg
repnz
xchg
cmp
addr16
fldenv
pop
adc
cmp
scas
movsb
xchg
or
mov
jb
jg
sti
add
sti
test
aas
cwtl
outsl
xchg
jo
mov
push
into
xor
jnp
adc
push
popa
add
pushf
adc
and
dec
jae
lahf
jl
jno
and
fiadds
mov
or
pop
push
or
xchg
das
scas
pop
mov
insb
ds
dec
mov
out
divl
addr16
mov
jne
jg
xchg
in
clc
adc
call
into
jmp
cltd
push
sub
dec
bound
cli
out
not
sbb
cmp
cmp
jle
push
pop
jle
jns
test
iret
inc
vsqrtps
je
ja
inc
lcall
mov
loope
cmp
into
pop
push
mov
sbb
xor
sahf
and
mov
push
out
add
sti
xchg
or
sbb
inc
sub
jno
or
fnstenv
ficomps
mov
and
pushf
xlat
mov
fneni(8087
insl
in
mov
ret
and
xor
mov
mov
sbb
fistl
or
sar
xlat
sub
or
es
xchg
arpl
inc
jmp
xchg
add
sub
mov
dec
jmp
adc
in
loope
pop
stos
fcmovb
out
lods
or
fsubrs
xchg
ds
stc
and
lods
xchg
push
add
jg
rorb
aaa
mov
xorl
fst
jle
ret
aam
dec
rcrb
cmpsl
aam
push
insl
out
je
mov
adc
repnz
inc
jp
xor
icebp
out
mov
lret
add
aas
or
stos
mov
scas
xor
in
and
cmp
orl
lcall
cmp
cmpsb
lcall
add
outsl
fisttpll
repz
mov
add
pusha
mov
push
add
inc
mov
jmp
jecxz
jmp
mov
add
out
sbb
arpl
insb
cwtl
orb
or
mov
shlb
fcomip
xor
push
lea
xchg
and
or
fisubl
fdivl
mov
sbb
mov
xchg
cmp
shll
into
cmp
test
sub
sub
lret
imull
dec
pop
imul
mov
xchg
lods
fstpl
in
shlb
sbb
test
stos
or
int
pop
pop
andl
test
mov
mov
outsb
sbb
outsb
xchg
sub
cli
fstps
lock
mov
jg
add
addb
loopne
adc
stos
fwait
sbb
lahf
adc
xor
arpl
adc
mov
in
and
fcompl
sub
sahf
outsl
clc
sub
and
sarb
mov
mov
push
jmp
repz
mov
mov
jle
or
mov
xchg
push
popa
fisubrl
or
dec
in
mov
sub
pop
subb
cmp
mov
push
out
xchg
jns
and
mov
bound
cmp
rcrb
stc
mov
inc
adc
jmp
stos
push
jg
xorl
sub
aaa
mov
pop
pop
mov
mov
mov
dec
mov
daa
aam
pop
lcall
loop
test
sbb
or
cmpsb
notl
jmp
int
push
mov
inc
sbb
aaa
ds
add
in
mov
mov
test
loopne
mov
mov
mov
iret
addb
out
mov
and
das
mov
xor
dec
int
or
lods
mov
mov
lds
cmp
pop
lcall
or
xchg
dec
shll
push
jecxz
adc
jle
loopne
dec
fadds
insb
or
jl
call
and
pop
jl
dec
popa
popa
mov
push
cmp
call
and
dec
mov
movsb
mov
out
pop
inc
repnz
pop
call
jnp
push
stc
fldenv
push
loop
sub
inc
ret
inc
sbb
out
mov
add
adc
pop
lret
fwait
inc
dec
dec
lods
rorb
sub
adc
sub
cwtl
fnstsw
push
ret
push
push
icebp
out
mov
into
jb
out
xchg
fneni(8087
lds
insb
shll
sahf
lods
test
das
mov
and
ds
lea
and
into
test
mov
leave
outsl
push
adc
push
sub
pusha
and
push
rorl
loope
push
enter
push
jne
cld
xchg
test
mov
mov
xor
xchg
mov
fiaddl
iret
or
test
lea
cmc
test
cmp
hlt
adc
mov
aas
arpl
out
cmp
js
pop
dec
push
dec
es
sarb
lods
xlat
inc
xchg
ljmp
hlt
jno
sub
ljmp
xchg
mov
pusha
mov
stos
dec
push
xchg
cld
mov
cltd
aam
hlt
daa
pop
aam
test
pop
rcrl
cltd
push
movsl
push
mov
rclb
icebp
adc
adc
mov
pop
xchg
pop
pop
stc
movsl
lods
jmp
or
or
je
ss
jno
mov
sahf
cmpsb
lods
cmp
adc
arpl
cmp
lods
ret
mov
xchg
mov
mov
into
mov
add
push
xchg
rcll
movsb
std
out
adc
call
cmp
movsl
fisubrl
sbb
lock
xchg
bswap
lret
lahf
sti
aaa
mov
dec
fsubs
lods
iret
pop
lretw
imul
and
sbbl
loope
and
test
inc
jns
daa
or
fxam
cmpsl
xor
into
and
xchg
dec
test
push
fs
fsubs
mov
jge
test
test
pop
adc
shlb
lods
push
cwtl
pmaxub
pop
cmp
stos
dec
cmpsl
cmp
add
xchg
mov
aas
lea
shll
out
sbb
jmp
cltd
imul
cmpsl
inc
jbe
dec
mov
jmp
ljmp
jg
mov
or
push
rcll
xor
inc
inc
bound
mov
adc
sub
jp
or
xchg
addr16
and
jle
stos
jp
jge
sub
jge
add
sbb
pusha
push
cli
mov
aam
fnstsw
in
sub
bnd
in
push
jnp
out
repz
les
movsb
and
mov
push
ds
mov
push
je
addr16
mov
mov
lea
adc
and
sbb
lret
jae
out
icebp
pop
sub
shlb
fidivs
jle
inc
sub
xchg
imul
lods
cmp
push
jae
std
jnp
idivb
aad
mov
mov
fwait
addb
loop
lahf
cmp
inc
ss
dec
jg
adc
push
out
xchg
in
add
mov
dec
aad
jle
inc
mov
jl
scas
in
push
sub
sahf
cmp
imul
and
ss
into
push
xor
test
loope
int3
pop
rcl
sbb
add
xor
push
mov
dec
cmp
adc
loope
pop
fimuls
mov
add
xorl
lret
adc
scas
add
in
jnp
dec
xchg
fs
ficoms
adc
ljmp
out
mov
dec
mov
pop
jbe
cmp
pop
xor
mov
loopne
xor
outsl
mov
cmp
ljmp
jp
enter
pop
mov
xor
jmp
cmp
cltd
inc
fs
arpl
imul
xor
sub
cli
pop
cmp
out
mov
mov
dec
cmpb
ss
fwait
ljmp
aaa
xchg
repnz
mov
mov
cmp
das
outsl
xor
ja
mov
movsl
xor
cltd
sbb
rol
mov
cmc
les
cmp
cmpsl
call
jge
or
add
leave
pop
jmp
pop
sbb
mov
jno
lahf
inc
scas
sbb
fbstp
xchg
sbb
in
adcl
sub
adc
jno
jno
pop
lds
aaa
lods
mov
xor
sub
adc
sahf
and
repnz
xor
xor
jo
push
push
push
jmp
sahf
in
dec
sub
ret
iret
mov
cwtl
sti
pusha
jecxz,pt
push
dec
ljmp
lods
addl
push
mov
xchg
xor
mov
and
lea
sbb
and
outsl
jb
mov
pusha
outsl
sbb
aam
mov
pop
imul
adc
pop
rclb
test
cmpsl
std
shrb
js
sbb
sar
imul
test
divl
xchg
cltd
bound
xor
push
rol
mov
ja
call
inc
xlat
sub
outsb
shlb
rorl
mov
mov
sub
cmp
pop
inc
jge
lcall
adc
push
lret
nop
jbe
jp
je
inc
imul
jecxz
xchg
mov
adc
sub
daa
fsubrs
mov
lcall
stc
xchg
test
push
inc
cmpsl
and
dec
add
test
scas
and
jno
out
jge
leave
pop
in
push
pop
in
xchg
stos
jle
loop
pop
sbb
ja
inc
loopne
push
inc
sbb
shl
ss
out
or
inc
and
mov
mov
adc
jle
fcmove
push
xor
insl
jecxz
sub
scas
incl
or
jnp
or
aas
push
dec
push
jb
ja
out
in
sar
insl
cmpsl
nop
add
ret
sbb
or
push
mov
out
jne
add
mov
adc
xor
mov
cmp
cmpsl
jns
imul
rolb
push
mov
in
repz
push
or
push
and
jno
sti
fcoms
adc
pop
xchg
orl
and
iret
imul
jo
dec
pop
lcall
cmp
lods
repz
mov
bnd
stos
mov
xor
xor
adc
mov
enter
push
out
sar
jne
mov
lods
daa
sbb
jge
sbb
imul
loop
in
stos
into
mov
mov
insl
xchg
jbe
mov
fmuls
sub
mov
inc
push
jmp
jno
pop
inc
or
pop
xlat
mov
int3
mov
rcrb
jno
hlt
out
lods
jp
shll
cld
ret
sub
testb
mov
dec
adc
sbb
mov
test
outsb
cli
repnz
ret
mov
test
ret
testl
or
xchg
cli
add
adc
add
jo
ja
mov
jno
jae,pt
inc
and
mov
test
xchg
dec
out
add
adc
add
fstl
and
add
push
sub
aad
dec
inc
mov
add
mov
shll
mov
adc
ljmp
xor
bound
dec
mov
xchg
arpl
mov
mov
xor
mov
dec
dec
sub
out
inc
popf
jno
pop
mov
insl
dec
or
mov
les
scas
testb
mov
iret
aam
or
mov
sub
push
shrb
push
adc
nop
pop
out
xchg
repz
sbb
cmp
adc
das
sbb
andl
out
mov
jge
pop
movsl
rcrl
call
aam
cmp
lods
jmp
insb
insl
and
fsubp
lock
cwtl
outsl
fsubl
push
jbe
mov
stos
insl
inc
out
dec
hlt
add
mov
je
and
sub
imulb
imul
sbb
aam
ret
arpl
aas
xchg
mov
pop
cld
adc
xor
lods
xor
jae
jmp
xchg
or
mov
imul
xor
int3
push
roll
test
inc
ljmp
int
push
push
inc
push
movsb
inc
jne
jnp
rolb
rcl
push
and
or
push
xor
popf
out
mov
mov
pop
cmp
xchg
cmp
xor
xor
arpl
pop
out
pop
mov
lock
jecxz
add
sahf
jle
test
cmp
clc
and
incl
push
mov
inc
cmp
jge
movsl
sti
inc
jno
into
xor
sub
push
js
pop
cltd
pushf
adc
cmp
mov
dec
std
lcall
fyl2x
inc
jo
add
jae
in
dec
xchg
push
mov
out
cmp
sarb
pop
sahf
ret
xor
cltd
or
sub
xor
in
aad
lret
js
call
jl
stos
dec
sbb
test
loope
out
dec
insl
sub
push
mov
push
jne
das
and
xchg
sbb
loopne
push
cmp
dec
and
mov
adc
and
sub
outsl
cmpsl
xorb
fcmovbe
outsl
ja
sub
xlat
or
lahf
and
pop
mov
mov
pop
imul
sub
cwtl
clc
dec
jno
and
inc
es
out
xlat
push
jmp
sbb
pop
outsl
xor
add
ret
xchg
xor
mov
cmp
ss
and
push
inc
xchg
cwtl
or
cmc
cmpsb
cmp
adc
test
lcall
pop
js
and
mov
adc
aad
insl
subl
sbbb
mov
sahf
subl
rcl
mov
daa
mov
mov
push
cltd
xor
int3
scas
pushf
mov
bound
lock
mov
mov
cli
jecxz
pop
pop
xor
inc
pop
out
insl
sbb
mov
je
test
jnp
inc
fs
ret
sbb
clc
ficomps
pop
lret
sti
shr
xchg
ret
inc
xor
mov
inc
jo
inc
xlat
call
cltd
shll
stc
imulb
dec
or
sub
and
lahf
fidivl
jecxz
dec
ficompl
xchg
sub
fwait
dec
xor
pop
fsubrp
pop
je
aam
out
dec
xchg
fisttpll
rolb
and
nop
js
out
lcall
xchg
xchg
pusha
outsb
sbb
push
decb
lret
shlb
add
adc
push
sbb
gs
in
mov
sbbb
inc
push
outsl
aam
xchg
mov
aam
addr16
sbb
xor
into
ja
pop
add
add
nop
inc
dec
push
lea
inc
testl
stos
call
dec
add
sti
jae
sarb
jecxz
aaa
and
cmp
movsl
adc
pusha
cmp
mov
in
pop
mov
pusha
and
pop
sub
arpl
js
xchg
repnz
fcompl
jae
xchg
cmp
dec
ja
aad
pop
add
add
cli
dec
fst
clc
pop
dec
mov
add
pusha
ret
out
add
xor
xlat
fisubrl
and
sbb
sub
jle
lods
int3
push
imul
xor
scas
les
sub
push
lahf
dec
pop
mov
insl
cmp
cltd
out
fistpll
ficoms
push
jne
out
ret
xchg
pop
ja
adc
lahf
es
inc
cmp
and
ret
push
nop
inc
sar
nop
inc
sub
xchg
out
mov
sub
add
lock
daa
push
sbb
mov
push
xchg
mov
push
icebp
push
mov
ret
lock
mov
add
and
into
jb
int3
sub
xlat
pop
mov
in
and
and
adc
ljmp
jge
jge
insb
je
push
xor
sub
loopne
adc
orl
adc
add
movsb
rcr
js
xor
mov
xor
orb
cmp
lcall
adc
push
cli
sbb
inc
imul
clc
push
mov
and
popf
pushf
pushf
insl
mov
in
dec
shll
shlb
adc
movsl
in
xchg
sbb
jns
mov
xor
sahf
call
dec
js
negw
add
xor
jo
or
jbe
or
idivb
idivl
repnz
dec
or
fmuls
pop
cmpsb
cmpsb
push
js
fdivr
xor
fsubrl
int3
mov
cmp
sub
lds
out
jbe
sbb
lcall
xchg
cli
dec
xchg
sub
push
jp
icebp
cpuid
adc
inc
xchg
rorb
lcall
in
pop
sub
xchg
inc
pop
pop
inc
mov
push
mov
push
jb
stc
pop
mov
mov
sub
dec
lds
popa
data16
cwtl
mov
fwait
ja
loope
sub
lahf
pop
clc
pop
dec
jne
inc
adc
enter
stos
mov
inc
xchg
popf
mov
xchg
movsl
cltd
stos
and
cmpsb
mov
push
cli
xor
fimull
stos
ljmp
dec
out
out
jl
add
imul
mov
push
jle
dec
cli
add
mov
add
fldcw
mov
mov
sbbl
jno
fldt
aad
cs
fisubl
push
cmpsl
push
mov
in
fadds
push
stos
adc
iret
in
xor
icebp
jnp
mov
adc
adc
jno
lret
add
jo
mov
mov
push
inc
xchg
je
daa
cmp
xlat
jns
aaa
pop
sti
push
aam
xchg
jnp
jmp
dec
inc
lret
in
lods
rcl
pushf
add
ficompl
push
sub
xlat
push
rclb
out
mov
movsb
lcall
stos
push
dec
xor
popf
xchg
and
sub
jbe
hlt
mov
push
cmpl
leave
sbb
sub
inc
xchg
jmp
insb
inc
in
aam
addb
xchg
lahf
gs
xchg
add
jg
pushl
imul
pop
popl
out
pop
jae
in
stos
push
stos
in
pop
jne
xchg
xor
push
das
sbb
cmp
sbb
push
ret
rorl
cmpsl
es
clc
add
mov
std
jge
sub
inc
xor
adc
xlat
lcall
popa
add
jmp
lds
ss
jg
loope
pop
xchg
data16
cmpl
add
mov
es
and
bnd
dec
stc
sub
fstps
xchg
das
sbb
push
pop
lcall
sub
ret
or
add
mov
pushf
mov
adc
loop
push
sub
clc
adc
lds
lods
stos
imul
rcrl
fsub
jns
cli
dec
pop
loopne
dec
sbbb
iret
cmp
xchg
jae
mov
int3
lea
setg
cmp
push
jns
insb
xor
inc
cmpsb
out
dec
test
mov
cltd
mov
xchg
sbb
dec
dec
sbb
cmp
cmp
adc
sub
jnp
xor
sti
test
repnz
and
add
fisubs
mov
sbb
jns
pop
pop
movsb
inc
repz
jno
lret
add
sub
loopne
dec
add
sub
ret
sti
and
pop
pop
cmp
mov
jle
outsb
xchg
out
adc
rcrb
and
test
bound
push
jnp
push
or
test
jge
flds
outsl
stos
cmp
cmp
sub
add
push
cs
ret
scas
inc
lock
ret
in
cs
enter
xlat
call
push
dec
pop
lret
imul
in
fs
and
bound
gs
cmp
pop
xchg
or
add
jge
mov
scas
mov
adc
xchg
fisttpl
mov
cld
mov
cmpb
lods
outsl
movsb
pminsw
mov
rcrb
lahf
pop
andl
cmp
mov
jl
mov
repz
push
js
inc
nop
shlb
fiaddl
and
xchg
cmp
pusha
fbstp
add
xor
sbb
test
lods
out
add
inc
adc
or
jne,pn
mov
scas
sbb
sub
aaa
cmp
cmp
pushf
js
addr16
sbb
jo
dec
xor
loope
loope
mov
pop
and
cmovs
bound
and
ficoms
stc
stos
jns
sar
mov
xchg
xchg
out
xchg
clc
xchg
andl
xchg
fstpl
jns
dec
mov
nop
dec
mov
jae
push
mulb
xchg
mov
std
stos
movsl
pop
pop
xor
pop
hlt
jle
mov
dec
xchg
cli
jmp
shlb
mov
sub
xor
sbbb
shl
push
subl
xor
push
pop
jmp
cmp
and
loope
out
loope
pusha
mov
insl
loopne
cmp
loope
jns
das
movd
in
arpl
movsl
rcrl
inc
jge
dec
enter
mov
lea
loop
and
in
inc
sbb
idivb
xchg
jl
fnstsw
jg
out
push
mov
mov
out
xor
ljmp
roll
cltd
or
clc
daa
pop
mov
fbld
adc
test
stos
scas
push
inc
inc
mov
test
mov
lcall
sarl
data16
jle
adc
sahf
jl
pop
pop
dec
sub
lods
hlt
and
icebp
mov
push
and
push
lahf
sbb
cli
cmpsl
sub
addl
mov
loop
int3
and
jmp
mov
add
push
mov
sbb
leave
xchg
push
pusha
xchg
or
mov
dec
sbb
and
out
sub
jle
fcos
mov
and
fldt
pop
inc
inc
cmp
mov
mov
movsb
lods
jge
ljmp
cmp
jmp
sbb
xor
mov
ret
out
lahf
ja
xchg
mov
push
int
and
dec
and
dec
and
push
filds
mov
scas
mov
mov
jo
leave
popa
jmp
adc
hlt
iret
add
push
inc
ljmp
cmp
jnp
jnp
push
and
jecxz
js
cmpsl
jnp
fstpl
movsl
enter
and
fcoml
pop
inc
mov
cmp
loope
mov
mulb
push
jmp
or
scas
pushf
imul
mov
inc
pop
push
leave
pop
or
dec
adc
push
popl
enter
and
or
mulb
nop
jl
fsubrl
mov
ret
lock
test
mulb
dec
out
cmp
pop
pop
or
pusha
popf
enter
cmc
inc
xor
and
jne
lahf
pop
mov
push
mov
jp
jbe
inc
test
mov
xchg
pop
imul
mov
filds
cmpsb
xchg
in
mov
inc
mov
pop
mov
or
es
mov
xchg
mov
movsl
xor
repz
test
push
xor
shrb
adc
jbe
mov
cmpsl
and
adc
inc
outsl
imul
jae
cltd
lods
and
pushf
xchg
out
add
inc
mov
ja
das
and
sbb
testb
jnp
mov
xor
and
nop
sub
push
jle
idivl
dec
xchg
mov
or
cmpsb
mov
xlat
cmp
pop
ljmp
xchg
fisubs
push
xchg
push
mov
outsl
aam
push
notb
and
outsb
inc
dec
sub
add
cmpsl
push
popf
xchg
loop
out
test
rclb
push
add
mov
jl
fs
leave
fwait
dec
mov
mov
aaa
mov
int
out
jge
leave
cwtl
sbb
sbb
sub
or
inc
out
and
adc
jae
orb
xchg
push
sbb
mov
aam
mul
lods
cmp
daa
shlb
in
sub
jmp
and
xchg
and
cmpsl
adc
inc
push
jl
repnz
add
jo
lods
and
ds
dec
mov
mov
pop
js
es
loopne
add
inc
cmpsb
mov
push
scas
lahf
add
rcr
push
mov
in
inc
push
icebp
and
jecxz
dec
clc
rcl
fs
pushf
cmpsl
mov
cmp
cmpsl
insl
mov
mov
adc
test
rorb
fs
push
dec
xor
dec
test
addr16
sub
add
mov
fsubrl
arpl
pop
movsb
inc
pop
daa
sahf
adc
inc
pop
or
pop
ja
fldt
pop
mov
adc
nop
outsl
fcmove
sbb
mov
jns
out
mov
pop
ljmp
cwtl
pop
mov
dec
mov
sub
dec
scas
in
mov
icebp
iret
popf
imul
aam
xor
jo
rolb
gs
or
inc
cltd
popa
outsl
scas
test
out
psubsw
mov
push
push
movsl
dec
fwait
add
fistl
loopne
lret
xor
test
out
mov
imul
dec
imul
jecxz
aad
mov
push
ja
pusha
jge
lahf
mov
dec
imul
fs
mov
lea
test
pop
mov
popf
pop
jne
adc
lods
adc
stos
mov
mov
cmp
push
lods
xor
cmp
mov
in
je
xchg
sbb
ss
xor
shr
xor
xchg
fcmovb
repnz
insl
loopne
cmp
lods
or
out
or
xchg
sbb
and
or
pop
mov
dec
mov
test
mov
jg
int3
loopw
aas
adc
mov
out
cmp
inc
mov
push
inc
and
mov
lods
xor
lcall
dec
iret
repz
mov
test
adc
cmc
cmp
mov
andb
pushf
xchg
lds
addr16
in
aad
mov
cltd
iret
lcall
xchg
cmp
xchg
popa
add
ret
aaa
xor
xchg
lock
loope
mov
jnp,pn
xor
inc
popf
fnsave
repz
add
push
shlb
add
movsl
sbb
aas
push
pop
mov
shll
jb
add
into
mov
fwait
mov
adc
add
cmc
xchg
inc
cs
cmp
and
jbe
jo
xchg
popf
add
cmp
les
adc
cmp
loop
imul
mov
add
in
mov
movsl
repz
jmp
call
sub
testb
sbb
pop
jg
push
and
dec
data16
mov
xchg
insb
stc
js
push
addb
push
jl
imul
rep
enter
or
enter
in
xchg
in
imul
xchg
or
bound
cmpsl
mov
inc
sub
or
xchg
es
rcll
mov
loope
inc
inc
push
xor
add
jbe
add
setg
sbb
and
xchg
ret
sbb
sarb
or
nop
lcall
jns
push
clc
jo
add
notb
ss
mov
dec
cmp
push
repz
andl
movsb
cmpb
icebp
sti
sbb
or
sbb
stc
out
and
ljmp
inc
cs
aad
sub
mov
ret
and
sub
cltd
cmp
jo
out
sub
xlat
je
ret
mov
push
fisubl
scas
cmpsl
es
cmp
sti
and
pop
test
jae
xchg
loopne
adc
negb
lea
fs
int
mov
lahf
jge
mov
pop
loop
adc
sub
sahf
and
pusha
push
xchg
adc
imul
insl
push
add
outsb
jnp
scas
ror
jnp
mov
test
dec
cmp
jp
orb
sbbb
movsb
addr16
push
mov
pop
mov
ret
push
pushf
pop
insb
fldcw
xor
jp
in
testl
push
mov
in
push
push
pop
ja
inc
adc
inc
inc
add
call
xchg
jb
stos
pop
pop
into
xchg
push
jmp
sti
dec
jb
rcr
pop
dec
cltd
xor
xor
jno
inc
jo
punpcklbw
pop
jle
mov
xchg
lahf
lahf
cltd
dec
scas
sti
shrl
xchg
push
sti
pop
mov
mov
outsl
sub
imul
mov
sbb
fwait
shrl
inc
sbb
int
inc
or
shlb
lret
fbstp
lahf
push
or
and
dec
dec
cwtl
in
fimull
sbb
jecxz
mov
fstpt
or
mov
ret
outsb
lods
mov
aam
or
cli
test
jae
push
into
mov
hlt
pop
mov
mov
pop
gs
clc
cmp
or
jle
loop
out
adc
push
imul
insb
and
sbb
jnp
je
scas
sbb
sub
mov
flds
sbb
adc
xlat
test
cltd
std
or
cmp
arpl
aas
or
out
mov
ds
cmc
shlb
dec
cmp
inc
xchg
ret
fistpll
mov
movsb
shlb
loope
mov
bound
xchg
cmp
outsl
xchg
push
dec
push
sub
js
cwtl
xchg
xor
mov
pop
call
aad
mov
mov
aad
mov
mov
fdivl
and
and
repz
lret
mov
mov
pop
pop
xchg
mov
lds
ljmp
pop
imul
popf
shrb
fisttps
nop
or
int
xchg
or
fistl
jp
in
fs
sbb
cmp
addr16
dec
push
stos
ja
add
mov
sbb
ljmp
pop
andl
jns,pt
cltd
add
in
scas
test
dec
or
push
xchg
imul
pop
lcall
lret
mov
sub
sbb
inc
js
pop
inc
mov
push
push
shufps
bound
shll
mov
xchg
inc
jle
xor
adc
inc
lahf
clc
pop
add
sub
pushl
iret
dec
movsl
xchg
inc
mov
bound
fstl
push
mov
sbb
pop
sarb
jo
mov
pushl
jae
xor
xchg
sbb
sbb
ret
cld
das
pop
xor
into
hlt
push
shr
push
mov
push
popa
xchg
je
sbb
sub
or
cmpsl
idivl
mov
mov
je
sbb
flds
jns
and
sbb
adc
clc
mov
js
movl
sub
stc
sub
cli
push
push
cmp
jb
adc
pop
das
lret
jle
and
in
jl
clc
inc
cmp
popa
and
mov
orl
stos
sub
jp
jb
push
mov
negb
scas
aam
push
sar
ss
jge
mov
mulb
test
mov
test
je
mov
push
sbb
mov
test
push
adc
push
jcxz
xchg
add
lods
cli
push
pop
xchg
sub
fcoms
sbb
mov
adc
ja
pop
dec
and
test
jecxz
dec
rolb
lcall
lods
cwtl
cmpsb
xchg
fnstcw
jmp
cmp
int3
repz
jmp
dec
pop
mov
je
cmp
ss
jp
mov
lret
mov
fisttpll
bound
xor
mov
inc
mov
pop
sub
imul
pusha
jmp
xor
lahf
push
push
push
or
fisubl
dec
iret
je
mov
ljmp
mov
sbb
sbb
cmp
sbb
adc
loopne
xchg
mov
sub
pop
shl
clc
inc
mov
clc
jne
es
ljmp
cs
xor
mov
cmpsb
loop
ss
xchg
jbe
xchg
push
sub
push
or
push
mov
xor
inc
adc
mov
lods
icebp
fimull
push
popl
inc
and
inc
push
in
aad
sbb
jecxz
mov
addr16
nop
test
mov
lcall
scas
fcmovnb
mov
mov
mov
sub
out
shll
movsl
inc
and
aam
lcall
or
dec
mov
lahf
fwait
mov
daa
clc
int
pop
xlat
lds
adc
cltd
fsubrl
stos
test
insb
or
xchg
add
inc
lods
push
mov
mov
sbbb
cmp
movsl
jecxz
inc
jns
mov
mov
push
ret
mov
mov
adc
mov
aam
scas
jno
mov
jne
push
push
mov
divl
push
out
add
sub
adc
lds
mov
or
lret
pop
mov
xor
add
inc
repnz
xor
mov
shr
inc
repz
cmp
mov
push
pop
jno
in
sub
adc
or
fs
pop
jecxz
adc
test
fldcw
shll
sbb
xorb
frstor
lcall
aad
lock
leave
cmp
fidivl
inc
out
mov
pop
dec
add
iret
rcl
dec
xor
addr16
xor
sub
xor
pop
shrb
push
unpcklps
pop
push
or
shl
mov
imul
or
test
hlt
push
imul
mov
aad
inc
dec
test
test
pop
lret
mov
mov
dec
mov
aam
stos
dec
daa
test
addr16
enter
mov
jb
out
std
xchg
call
cmp
and
clc
sahf
mov
mov
test
jbe
mov
mov
xchg
fst
fdivs
fxch
in
loopne
xchg
push
pop
js
jno
ja
and
arpl
jb
out
das
add
lret
sahf
pop
inc
dec
es
loopne
mov
in
in
or
fwait
mov
ficompl
call
roll
arpl
sahf
dec
mov
xor
ficoml
jge
push
je
aaa
pop
sbb
xchg
test
dec
push
sub
or
cmp
rcl
and
fbld
pop
or
loope
int3
roll
fcmovb
mov
out
repz
cltd
jl
xchg
xor
inc
ljmp
notl
sub
outsb
push
pop
push
and
jno
jbe
mulb
ds
push
jge
dec
jno
les
push
dec
repz
sbb
add
nop
mov
hlt
test
push
sbb
mov
mov
mov
adc
pop
mov
fnsave
lret
pop
adc
adc
adc
cmp
ljmp
lahf
jb
icebp
iret
pop
rcrl
push
std
xchg
rolb
pop
inc
xor
movsl
scas
mov
lods
in
je
inc
loopne
adc
or
pop
lods
push
sti
movsb
mov
sbb
cmp
inc
xchg
stc
jg
sub
popa
adc
leave
cli
movsb
and
dec
test
std
out
cltd
jbe
push
sub
and
push
imul
fcoml
sarb
sub
mov
por
in
insb
fwait
jns
je
mov
or
lahf
loop
cmc
aas
and
dec
push
mov
sahf
ljmp
repnz
mov
std
jae
ds
push
xchg
mov
dec
pop
adc
sub
xchg
outsl
mov
inc
cmpsb
adc
stc
push
es
mov
subl
jnp
add
dec
and
nop
mov
sub
aam
pop
cmp
add
iret
add
push
mov
add
loopne
sbbl
test
lea
xchg
rcrb
hlt
cli
mov
ss
inc
pop
jp
dec
mov
inc
push
pop
js
pop
leave
mov
into
ja
aam
pushf
mov
mov
std
dec
and
rcpps
cmp
cmp
sar
cwtl
stos
cld
call
push
ss
notb
mov
sbb
lcall
mov
lds
xchg
popf
cwtl
mov
add
out
fcoml
sbb
sbbb
sbb
lret
xor
ss
or
or
stos
aas
xor
sbb
mov
pop
jmp
and
xor
jae
pop
xchg
xchg
ret
push
mov
cld
xor
arpl
out
sbb
fsubr
repnz
jns
dec
fimuls
push
addr16
shlb
hlt
pop
mov
mov
les
aam
rcll
fstpt
mov
push
cmpsb
movsl
push
mov
rolb
repnz
jb
ret
insb
jl
and
sub
movsl
adc
lret
pushf
jp
scas
out
sbb
mov
push
lret
dec
aad
out
push
js
loope
out
cmp
jp
mov
inc
ficompl
mov
into
sub
bound
push
sub
push
sbb
popf
xchg
sub
mov
bound
in
push
scas
sbb
fwait
jg
sbb
outsb
je
js
or
je
adc
mov
fistps
pop
add
push
fbstp
mov
mov
jecxz
mov
xchg
jns
lahf
filds
loopne
mov
push
mov
les
mov
repz
fwait
jge
cltd
sarb
std
ror
outsl
icebp
mov
sbb
lds
sbb
inc
pop
inc
insb
jbe
test
mov
jae
movsl
inc
clc
leave
cmp
xchg
cli
push
pop
out
pop
inc
out
inc
fmul
lods
mov
dec
pushf
adc
pop
in
adc
movsb
push
int
mov
js
inc
leave
sbb
mov
push
shr
shll
jmp
mov
in
jmp
dec
icebp
aad
test
lret
fisubl
xchg
push
lcall
mov
gs
iret
loope
scas
dec
inc
jbe
dec
cltd
rorb
in
adc
popf
inc
int3
js
lods
add
jb
jbe
out
ja
push
sub
bound
sbb
lds
in
xor
sarl
lcall
dec
push
adc
hlt
pop
add
bound
ret
push
movsb
mov
enter
mov
and
and
mov
inc
ds
ljmp
mov
jae
rorb
mov
xor
or
pop
adc
arpl
leave
pop
insl
mov
lcall
pop
push
jae
jns
push
daa
jae
test
or
add
lods
mov
iret
jno
or
jg
jno
push
mov
js
lahf
mov
data16
jp
add
mov
sbb
inc
lahf
add
push
adc
adc
ret
or
and
fwait
in
hlt
call
jmp
popa
mov
dec
ret
enter
and
inc
add
or
mov
les
es
imul
loopne
push
or
mov
sbb
fs
out
or
mov
in
mov
jno
cwtl
ds
pusha
mov
cmp
xchg
dec
in
inc
cli
dec
mov
push
inc
cmp
ja
into
xor
fsubl
test
in
pop
sbb
xor
jge
popf
push
pop
int
aad
jmp
hlt
ss
sub
jl
aam
cmp
push
sbb
xor
adc
movsb
push
sub
sbb
mov
aam
sbb
mov
xchg
xor
out
out
sahf
les
in
lock
andb
mov
adc
out
add
mov
es
out
aam
popf
negl
adc
or
and
mov
pop
rorl
add
jno
inc
add
mov
mov
imul
dec
bound
insb
xchg
sbb
stos
jecxz
xor
pop
pop
jno
mov
in
mov
adc
push
sub
xchg
fcomps
add
je
pop
xchg
push
subb
pop
cwtl
cld
mov
bound
inc
sbb
pop
mov
pusha
in
rsm
aaa
cltd
push
push
pusha
shlb
adc
and
test
movsb
inc
sub
movsl
or
xlat
xchg
dec
add
mov
inc
inc
mov
test
fcmovnbe
lock
pop
dec
mulb
insl
cmpsb
rcr
popf
mov
xchg
fmuls
les
nop
mov
jmp
mov
hlt
aas
adc
cmc
xchg
sub
sub
call
lock
test
stos
ret
pop
stos
mov
mov
mov
cmc
push
in
xchg
adc
xchg
inc
cmp
imul
and
push
aaa
idivl
or
out
jge
sarb
je
aam
cltd
stc
clc
and
les
or
fdivrl
fldl
adc
cmpl
in
adc
stos
int3
push
arpl
and
and
je
xchg
inc
rcll
pop
cmp
insl
dec
lahf
push
xchg
pop
mov
dec
lret
test
dec
jne
loope
in
fildl
mov
pop
mov
mov
sarl
cmpsl
repnz
shl
popfw
cs
add
mov
mov
jno
mov
out
sbb
gs
testb
les
sarb
xchg
mov
sbb
mov
pop
test
lcall
inc
pop
push
pop
add
negl
call
add
outsl
aam
jne
mov
sub
mov
sbb
sub
push
push
loope
pop
xchg
jmp
shlb
movsb
aad
push
sub
std
mov
push
xor
sub
adc
sbb
cmc
add
fadds
popf
call
jle
add
ljmp
bound
fwait
sti
xchg
or
and
loope
fs
jl
ljmp
fwait
inc
movsl
int3
das
insb
push
jne
push
mov
xchg
jne
push
jl
add
mov
add
jmp
mov
movsl
cmp
arpl
jmp
scas
test
test
pop
mov
xor
leave
mov
push
jge
test
push
sbb
pop
pushf
movsl
ret
push
insb
inc
mov
sbb
imul
test
out
mov
xchg
or
sub
mov
out
and
jecxz
pop
gs
lret
cmp
pop
js
gs
jl
mov
leave
clc
or
pop
iret
aad
fdivrl
xor
push
adc
pop
popf
mov
mov
cmp
or
sub
fcoms
imul
add
fistl
sub
sbb
pop
idivb
dec
cli
insl
aam
dec
cmp
sub
cmpsl
and
mov
test
or
mov
jns
xlat
pusha
stos
int3
xchg
jo
or
inc
fs
fstps
insb
sbbl
je
test
xchg
pop
mov
adc
lods
mov
and
sahf
add
in
ljmp
sbb
pop
jmp
data16
push
rolb
mov
jns
push
jg
out
mov
mov
dec
inc
mov
std
cli
xchg
add
repnz
pop
cmp
dec
ret
sti
call
pop
outsb
cmp
pop
xchg
insl
pop
mov
aam
in
or
pop
add
test
push
push
pop
ret
jae
scas
aad
cmpsb
adc
xchg
pop
les
je
pushf
cwtl
nop
cwtl
into
movsb
lret
xor
jecxz
inc
in
and
mov
loope
jge
cltd
test
lret
adc
lock
ljmp
stos
push
sub
jmp
loop
fidivrs
loopnew
inc
test
orb
push
mov
jae
cmpsb
test
and
push
inc
clc
cld
addr16
out
inc
iret
in
loopne
icebp
pushf
jmp
add
and
mov
and
mov
out
in
mov
call
call
pop
mov
out
jnp
mov
mov
add
ret
cmp
mov
ja
sbb
in
fwait
lret
jecxz
push
add
push
add
scas
add
enter
mov
cmp
xor
sub
orb
cs
arpl
lods
xor
iret
test
pop
jge
neg
mov
push
mov
or
lods
or
mov
add
sub
mov
daa
push
dec
aas
loopne
add
xor
cmc
sub
or
cmc
gs
gs
dec
loopne
imul
popa
mov
add
dec
fwait
or
xchg
xor
add
outsb
inc
fisttpl
sub
adc
mov
sar
in
cld
shrb
vpextrw
lds
imull
xor
dec
mov
mov
mov
mov
je
or
sbb
loopne
pusha
dec
mov
imul
mov
dec
xchg
pushl
jno
sbb
jmp
jecxz
divb
cmp
jbe
adc
and
fcoms
lods
scas
xchg
pop
les
ds
lods
std
mov
and
les
std
stos
gs
sti
mov
lret
incb
test
cmc
shrb
pop
inc
shll
jecxz
jmp
jl
mov
leave
mov
adc
mov
jecxz
xchg
popf
push
xchg
mov
dec
pop
cld
fldl
data16
pusha
out
data16
push
mov
mov
jbe
dec
xor
mov
orl
jecxz
ss
popf
ss
adc
and
sahf
mov
pusha
mov
stos
xchg
mull
rcrb
je
mov
stos
fdivs
sub
xchg
arpl
dec
cmpsb
and
cmp
push
imulb
das
enter
dec
lret
push
pop
sub
jge
leave
in
pop
insb
and
les
in
inc
fnstcw
arpl
mov
aad
mov
pop
popf
pop
popa
cli
test
jb
inc
aaa
push
jns
stos
mov
out
rclb
pop
ss
loope
sbb
inc
mov
mov
mov
fs
loope
dec
ja
outsl
cmp
add
jl
rol
adcb
shll
inc
mov
cmpsb
cs
mov
pop
movsb
and
inc
rolb
jno
sub
insb
in
je
add
jecxz
adc
gs
and
sub
int
dec
add
sub
cmp
pop
jae
cli
inc
ss
add
xchg
and
and
sub
aas
shl
push
loopne
das
dec
jl
push
lret
mov
xor
jns
js
jae
pop
sub
insl
sbb
rcll
sub
pop
mov
adc
fimuls
xchg
or
psubusb
das
rol
add
stos
xlat
loopne
add
inc
movsb
adc
jl
repz
push
add
mov
inc
ret
dec
sub
and
cmpsb
iret
sub
sbb
adc
and
push
lock
int3
mov
out
ja
fptan
add
cmp
inc
outsb
cmpsl
adc
dec
std
jmp
inc
data16
mov
inc
nop
mov
sbb
sti
add
or
mov
inc
mov
enter
pop
scas
hlt
rclb
mov
rcll
test
adcl
mov
and
shlb
xor
in
add
jl
ja
test
mov
fstpl
js
mov
or
jle
mov
insw
ljmp
dec
jmp
sar
xor
nop
sbb
xchg
daa
sbbl
and
and
loop
ljmp
mov
lahf
out
add
rclb
push
sub
loope
je
push
mov
and
add
aad
adc
imul
mov
int3
negb
pop
popa
lock
in
sbb
cmp
fldl
roll
pop
hlt
sub
and
scas
mov
out
icebp
out
jg
add
lahf
imul
popf
jmp
push
xor
jmp
mov
and
cld
aam
and
shrw
xchg
cltd
push
or
xor
cmc
outsb
cmp
shlb
leave
cwtl
call
xchg
cmp
stos
xor
mov
shrl
xchg
icebp
inc
cmp
xchg
cmpsb
scas
ret
jle
nop
mov
hlt
lcall
pushf
xor
aaa
xchg
mov
push
add
pop
mov
fs
mov
ds
mov
icebp
mov
jnp
cmp
fldl
out
fwait
jno
ret
sub
adc
sbb
fwait
leave
int
cld
mov
and
dec
add
push
sahf
iret
ljmp
cmpsb
fsubrs
insb
ret
pop
movsl
push
dec
sub
loop
pop
xor
fstps
movsl
xchg
sbb
das
fcoms
dec
clc
xchg
subl
jmp
add
dec
outsl
cmp
out
or
and
pop
sbbl
lret
sbb
loopne
push
pop
ret
cltd
xchg
es
pop
and
outsl
sahf
push
xchg
xchg
rclb
cmp
aad
mov
imul
fwait
loope
or
loopne
das
pop
jg
adc
insb
insl
jno
mov
mov
sub
mov
cmp
pop
cli
mov
inc
leave
push
popf
or
xchg
or
iret
pop
xor
mov
arpl
and
bound
mov
cltd
mov
int3
arpl
mov
fcompl
ret
movsl
mov
shl
inc
mov
bound
or
sahf
jp
and
jb
push
inc
insb
mov
arpl
xor
lods
or
or
or
daa
sarl
sub
xlat
test
pop
int
inc
mov
pop
mulb
mov
add
out
pop
xor
dec
mov
add
and
push
jo
imul
call
jnp
pop
xchg
cmpsb
xchg
pop
and
dec
aas
xchg
mov
pop
adc
mov
xor
fldt
dec
push
aaa
push
notl
rorb
dec
cmp
pop
ds
out
mov
sbb
and
nop
scas
mov
sbb
enter
in
popf
rcrb
fstpt
fsin
jle
push
jle
mov
cs
mov
mov
jecxz
scas
bound
int3
in
jo
pop
vmulpd
jne
rolb
cmp
pop
in
and
jg
cli
add
push
flds
mov
aam
cmp
clc
in
fadd
stos
leave
and
xor
jmp
mov
aad
mov
jp
and
jl
je
lds
lock
loopne
pop
out
fs
adc
and
loopne
jp
sahf
fisttpll
cmp
subl
pop
xchg
adc
aam
pop
pop
xchg
adc
dec
rolb
faddl
ret
icebp
and
hlt
leave
test
pop
xor
out
popa
or
outsb
xor
and
adc
sub
mov
lock
jb
lahf
add
and
xchg
sub
pop
mov
fiadds
jmp
add
fists
xor
shrl
in
cmpsb
call
push
jne
inc
jmp
push
scas
xor
into
pop
push
incl
pushf
jnp
out
push
loopne
xor
ds
mov
dec
sub
dec
jae
and
jl
sbbl
lock
lods
aad
test
sbb
nop
cmp
bound
push
and
leave
jl
in
andl
add
pop
or
je
je
ret
xchg
xor
pop
inc
mov
mov
mov
xchg
lret
out
pop
cwtl
inc
xor
mov
push
inc
cld
jb
add
pop
push
shrb
xchg
nop
shlb
testl
movsl
orl
fldt
inc
fistpll
cmp
rolb
leave
inc
cli
mov
mov
mov
push
fisubrl
mov
je
sub
pop
inc
fsts
xlat
int
pushf
sti
and
jp
outsl
pop
fcos
iret
cs
jmp
rcrl
out
lods
scas
jl
negl
xchg
adc
movl
xchg
ja
pop
xor
pop
jae
mov
or
data16
pop
mov
add
jae
mov
and
xchg
or
jp
das
mov
pop
nop
es
xchg
push
adc
inc
movsb
sbb
in
imul
daa
fs
loop
aad
test
pop
and
sbb
sbb
leave
mov
rol
sbb
mov
dec
sti
dec
inc
std
pop
pop
inc
mov
sub
mov
int
adc
cmp
add
xchg
pop
and
sbb
fsubrp
ret
adc
push
notb
lahf
daa
xchg
aam
add
cld
push
push
pop
out
add
mov
adc
xorl
lock
or
adc
mov
sub
pop
mov
fcomps
fstp
cmpl
cmp
jno
and
xor
inc
ljmp
xor
cltd
sbb
out
and
cmp
pop
fldl
mov
mov
sub
mov
in
pop
adc
and
xchg
and
push
and
orb
jle
dec
pop
add
mov
inc
daa
cmp
ds
mov
push
fnstcw
decl
pop
or
insl
or
jl
out
dec
popf
aas
jo
movsl
outsl
push
stos
mov
ljmp
outsb
xor
dec
inc
or
and
pop
dec
jbe
aad
mov
nop
enter
push
fildll
pop
test
rol
mov
pusha
sub
ror
fs
mov
sbb
nop
stos
xor
xlat
jno
in
and
sub
fsubrs
fdivrl
push
or
dec
pop
pop
jbe
lea
jmp
mov
mov
and
inc
inc
and
sahf
outsl
adc
cmp
or
push
std
daa
jp
ss
rcr
lods
int3
mull
cmp
fsubs
jne
inc
jns
cmp
sahf
das
pop
aad
arpl
adc
xlat
and
arpl
jge
loope
mov
mov
xchg
fbstp
pop
push
and
clc
enter
ret
fsubs
jnp
xchg
adc
xor
or
pop
outsl
mov
sub
imul
repz
jae
subl
pop
xor
std
ret
inc
jl
pop
pushf
addl
nop
sahf
add
and
jge
in
pop
push
in
icebp
sbb
add
and
stos
call
pop
push
aam
mov
clc
push
pushf
out
mov
pop
leave
mov
leave
in
pusha
xor
sarb
sub
adc
mov
aam
cltd
cmp
sbb
out
movsb
push
jge
stos
in
gs
and
shl
lret
cmp
xchg
sub
das
pop
cmp
rclb
in
andl
mov
lea
mov
imul
mov
mov
cmc
cmp
jnp
cmpsb
sub
xor
test
mov
bound
xchg
out
imulb
xorl
outsb
ss
aas
sub
pushf
push
xor
aam
and
fs
scas
out
and
push
int
lods
and
shll
push
subb
inc
iret
mov
mov
cmp
loop
mov
out
jmp
add
shrl
or
ret
mov
pop
test
mov
add
test
xchg
aad
call
fdivrl
sub
or
push
mov
push
cmpsl
sbb
stos
sub
mov
out
shrb
leave
xor
push
adc
cltd
ficompl
push
test
pop
imul
sbbl
test
push
shl
sbb
rcrl
and
fimull
in
andl
js
addr16
mov
incb
loope
sbb
repz
mov
and
pop
rcll
icebp
jns
scas
addr16
hlt
or
flds
rcrl
rcll
mov
and
iret
mov
shr
pop
cmp
rcrl
rol
fld
mov
fimuls
enter
test
or
cmp
xlat
dec
ljmp
movsb
cmp
daa
test
jle
add
std
push
loopne
adc
sub
loop
inc
lods
mov
jb
clc
into
inc
sbb
lcall
push
data16
addr16
sbb
ret
dec
jecxz,pt
daa
or
data16
xchg
pop
imul
mov
xchg
aaa
je
jb
cmp
pop
aaa
pop
mov
inc
xor
push
mov
mov
push
movsl
fcomip
aam
dec
inc
xchg
and
sub
loop
out
cli
cmpsb
aas
out
xor
in
fldl
xchg
pop
sbb
push
leave
daa
lock
sahf
cwtl
jae
cli
mov
das
mov
push
pop
imul
popf
arpl
addr16
lock
pop
call
jnp
pop
mov
scas
sub
mov
shlb
std
mov
inc
dec
popf
push
popf
je
orl
jo
xor
inc
test
shll
shrb
pop
push
sbb
adc
inc
mov
sub
cltd
xor
ja
je
out
cmc
mov
ds
jno
loope
dec
shll
mulb
or
cld
imul
sbb
jo
or
and
xor
cmc
jmp
mov
add
lock
or
xchg
sub
push
xor
adc
dec
xchg
das
jg
cmp
sbb
sub
mov
jne
mov
out
sub
pop
sbb
xor
movl
push
push
xchg
test
jle
xor
daa
popf
or
incb
lds
ja
push
repnz
jmp
inc
sub
loopne
fsubs
cmpsl
loop
stc
lret
movsl
adc
cmp
push
mov
push
cmp
ljmp
mov
ror
cltd
es
adc
mov
inc
fildll
es
stc
jp
lods
sub
mov
ror
loope
adcl
out
pop
arpl
xchg
dec
roll
inc
mov
fistpll
xor
movsb
dec
pushf
pop
out
fdivrs
or
cltd
dec
mov
mov
jb
les
popa
lret
fs
or
bound
hlt
xorb
jle
cltd
jne
mov
dec
xchg
insb
cmp
xor
push
mov
cmp
jo
mov
int
or
jg
dec
lds
cld
pop
inc
mov
sub
xchg
add
push
mov
out
cmpl
add
adc
add
push
ljmp
jo
int3
mov
mov
sbb
mov
mov
xchg
sbb
xor
rorb
nop
mov
and
cmpsb
fdivrl
sub
xchg
mov
movsl
orl
mov
sbb
movsl
loope
std
lcall
scas
loop
ljmp
mov
mov
lret
aam
or
pop
jg
add
faddl
inc
icebp
or
mov
rcl
sbb
sbb
and
mov
lds
dec
movnti
xor
xchg
add
addr16
in
imul
mov
jnp
aas
mov
out
std
lahf
in
mov
out
sbb
loopne
xchg
jl
xchg
add
xchg
and
lods
das
adc
mov
fists
lcall
pop
and
stos
ss
xor
xchg
and
jbe
mov
movsb
pop
js
daa
je
cld
push
xor
lds
and
inc
sub
push
push
add
or
loopne
gs
repz
ds
adc
nop
nop
lcall
rcll
mov
das
es
ds
or
loop
and
sbb
and
pop
daa
push
or
mov
iret
jmp
inc
repz
sti
aaa
rcl
sbb
cltd
and
insl
cwtl
jecxz
sbb
push
movsl
rorb
outsl
cmp
push
test
mov
inc
orb
pop
rcl
je
sti
inc
xor
jo
rorb
xor
imul
and
inc
jmp
out
lret
shll
add
or
adc
nop
dec
jle
fistps
mov
mov
hlt
inc
add
fsubs
inc
pop
sbb
jp
pop
push
xor
lcall
enter
pop
outsb
xchg
hlt
or
cmpsb
xchg
cmp
aam
jns
pop
push
sub
cmpsb
push
ret
jno
shlb
inc
pop
xchg
xchg
pop
cld
imul
mov
xor
int3
dec
aam
repz
frstor
and
xor
pop
adc
sbbb
dec
push
hlt
mov
mov
jo
orb
js
out
cld
aam
aam
test
outsl
fdivs
xchg
out
sub
mov
cmpsb
into
aad
cld
jo
iret
add
push
nop
repnz
ljmp
adc
out
ds
jp
push
mov
les
and
inc
sbb
imul
loope
xor
fldl
push
mov
cmp
inc
outsl
aaa
fisttpll
push
xor
pop
adcb
arpl
mov
inc
js
mov
cltd
dec
fimull
imul
nop
adc
inc
jmp
cmp
std
push
icebp
je
cmc
loop
cmpl
push
loop
or
fucomip
adc
sbb
fwait
dec
roll
lret
inc
push
jp
les
mov
call
cmp
cmp
sti
jbe
js
fsubrl
adc
ds
das
add
cmpsb
inc
je
mov
es
stc
movsb
or
adc
stos
xchg
inc
push
sbb
pop
xor
jno
cmp
inc
add
pop
add
ja
mov
and
mov
pop
sub
mov
inc
push
mov
mov
push
sbb
inc
shll
jmp
or
jp
xor
imul
jp
popf
out
push
mov
push
add
jle
cwtl
negb
cmp
call
mov
or
arpl
xlat
inc
jge
xchg
adc
repnz
enter
mov
hlt
push
je
adc
fildl
call
or
inc
sti
cwtl
loope
mov
ret
scas
xor
xor
clc
arpl
outsl
inc
mov
mov
pop
add
lcall
popa
idivb
dec
adcb
xchg
cmpsl
pop
mov
subb
ss
je
sbb
mov
sbb
iret
insl
inc
push
icebp
lcall
int3
cmp
xor
adc
xchg
cmp
sbb
jae
sub
mov
mov
ret
adc
mov
xchg
insb
adc
mov
es
cld
ljmp
mov
sahf
adc
imul
ret
ds
lcall
shlb
popa
add
pop
cltd
ret
and
push
pop
repnz
shr
out
leave
sub
cs
lahf
scas
ja
mov
and
fdiv
das
cmp
icebp
rol
mov
pop
ret
or
outsl
or
vandnps
cwtl
ja
add
mov
xchg
fidivrl
push
enter
sar
bound
aas
inc
aam
stc
nop
jp
mov
pop
mov
gs
add
lret
xor
jae
cmc
mov
imul
pop
sub
in
lods
xchg
mov
mov
test
or
sbb
jmp
cmp
push
das
xlat
push
test
lock
push
pusha
fmuls
outsb
ret
outsl
jne
add
js
dec
das
adc
sub
test
jo
cmc
push
nop
subb
out
jne
dec
pop
add
mov
testl
fs
add
fdivrs
push
mov
and
leave
inc
push
sarl
fnstenv
jbe
mov
repz
sarl
popa
test
mov
jge
mov
xchg
and
jno
fbld
loope
in
leave
fnsave
pop
faddl
mov
cmp
mov
ret
pop
cmp
xchg
cmp
and
push
insb
daa
les
fwait
cltd
push
jns
push
inc
push
je
push
push
mov
fisubrl
push
push
xchg
dec
jnp
mov
aad
daa
xchg
pop
xchg
lock
push
jge
mov
jns
push
mov
sbb
mov
and
loope
add
jge
mov
lcall
inc
les
sarl
xor
pusha
add
sub
orb
xor
pop
adc
xor
shrl
jns
test
or
cwtl
pop
nop
xchg
hlt
jns
ror
mov
lods
and
dec
enter
mov
mov
test
repz
cltd
push
mov
fcmovnbe
mov
cwtl
push
push
mov
pushf
lcall
dec
or
adc
cs
xchg
test
rolb
xchg
dec
xchg
inc
mov
xchg
xchg
pop
xlat
push
adc
enter
sub
inc
pusha
push
xchg
cmp
cmp
cmp
pop
clc
sub
gs
stos
adc
and
cmp
and
aad
test
orb
aaa
sbb
cmp
mov
cmp
mov
xor
fsubrs
ret
mov
pop
cltd
arpl
sub
cmp
push
mov
aam
jo
add
mov
sbb
xchg
dec
je
sub
outsb
mov
ds
lock
cld
les
pop
push
daa
aaa
das
add
inc
inc
inc
sbb
and
sahf
lea
sbb
push
scas
pop
pop
subl
ss
pop
cwtl
loop
mov
sti
xor
jle
pop
inc
lock
adc
or
mov
loope
inc
xor
mov
cli
std
and
add
sti
push
pushf
xlat
neg
mov
aas
xlat
jo
mov
clc
ljmp
and
pop
into
lods
sub
test
adc
xchg
mov
aad
fnstcw
inc
cmpsb
mov
pop
and
cmp
sbb
adc
fmul
pop
mov
das
cmp
inc
push
test
stc
dec
cmc
leave
roll
xor
ds
leave
ret
pop
loopne
cmp
stos
mov
imul
cli
inc
mov
cld
das
movsb
mov
mov
in
popa
pop
adc
push
inc
imul
rcrl
arpl
fwait
inc
rcr
repnz
insb
xor
xor
out
fistpll
xchg
movsl
or
out
mov
insb
es
test
jnp
loop
mov
mov
das
ja
ja
adc
insb
cmpsl
mov
pop
je
pop
push
push
outsl
clc
sub
lret
shll
dec
adc
test
rcrb
cmp
sub
push
in
mov
jle
lret
out
and
cmp
lcall
cmp
call
jbe
jge
sti
inc
xor
ret
aaa
rcrl
sub
sub
push
mov
lock
push
lds
and
sahf
sbb
ret
or
jne
add
or
mov
jbe
xlat
cmp
jb
adc
mov
popf
mov
idivb
pop
add
popf
pop
mov
sahf
mov
xorb
add
mov
imul
cmp
jl
fcompp
lret
inc
orb
cld
mov
adc
ret
cmpsb
test
adc
loopne
xchg
sti
dec
and
inc
inc
test
inc
xchg
jnp
pop
cmc
rclb
xor
and
mov
xor
xchg
push
mov
jg
test
xor
leave
adc
or
mov
loop
push
and
cmp
pop
enter
je
popf
mov
xor
fldcw
inc
lahf
add
fistl
jle
add
leave
jg
mov
lcall
lahf
push
loop
das
mov
sub
sbb
inc
push
pop
mov
iret
pop
jg
sarl
xor
clc
adc
mov
xor
popf
xchg
mov
adc
cmpsb
dec
inc
sub
mov
test
divl
rorb
cmpsb
aaa
or
test
xor
aas
mov
lds
and
xor
xor
clc
cmc
out
sub
add
mov
lea
jae
movl
aam
mov
imul
arpl
lcall
ret
dec
xor
hlt
std
mov
adc
shll
mov
data16
in
imul
or
nop
inc
cmp
add
fs
outsl
push
mov
imul
mov
sbb
hlt
leave
dec
aas
addr16
xchg
xor
xor
mov
imul
inc
push
add
scas
add
je
popf
cmp
pop
test
je
pop
movsb
add
pop
imul
dec
jnp
pop
push
jg
movsb
nop
stos
mov
push
sub
xchg
shll
repz
xchg
loop
sarb
and
iret
push
inc
xor
jl
mov
repz
xor
sahf
jae
in
adc
pushf
imul
push
data16
xchg
mov
jg
and
sbb
arpl
sub
add
pop
pop
push
pop
sbbb
pusha
rcrb
add
xchg
sbb
xchg
mov
jae
out
fildll
das
mov
cld
ret
ror
cs
lea
sbb
rclb
jb
int
cmp
inc
fdivrs
test
add
jmp
dec
dec
jbe
jnp
push
adc
fldenv
jne
icebp
mov
sub
push
pop
addb
xchg
mov
xchg
mov
cmp
arpl
sub
xchg
insb
outsb
push
frstor
lods
xchg
cmpsb
rcll
dec
mov
add
add
mov
scas
pop
dec
js
mov
in
mov
add
les
mov
mov
fs
shlb
and
loopne
repnz
mov
insb
cmp
test
push
sahf
mov
cmp
jno
jns
in
andb
mov
pop
push
into
mov
jmp
stc
mov
cmc
dec
into
bound
dec
cmp
and
cli
pushf
jecxz
int3
sbb
xchg
out
xor
push
fimull
lds
mov
fsubrl
sbb
test
sbb
xchg
lahf
std
and
dec
add
and
inc
fstl
dec
push
fildl
mov
popf
repz
aas
pushf
xchg
sub
mov
sbb
ror
xor
dec
notb
pop
xchg
pusha
jbe
sbb
es
movsl
adc
push
test
stc
arpl
jo
scas
stos
repnz
xor
les
js
sbb
mov
push
inc
lock
mov
mov
and
pop
sbb
inc
push
sbb
adc
test
inc
clc
inc
push
inc
add
hlt
cli
rcrb
neg
inc
adc
push
iret
jbe
jmp
xlat
push
outsl
adc
jo
add
js
test
mul
hlt
iret
cli
scas
cmpsb
mov
cmp
or
in
insl
and
shrl
fistpll
rorl
and
cmp
push
adc
dec
jecxz
pusha
jmp
adc
icebp
fisttpll
lahf
ficompl
mov
daa
lds
mov
addr16
ss
push
cli
cmp
cld
fadds
lahf
shr
decl
sbbb
add
fsubrl
or
pop
jae
mov
sub
lcall
and
mov
push
jbe
clc
dec
aam
std
ss
inc
movsl
test
jle
sahf
xor
dec
pop
roll
aaa
push
or
iret
or
movl
stos
and
lds
ljmp
xchg
push
mov
lods
cs
mov
lods
mov
and
ret
cmp
mov
pop
mov
mov
cmpxchg
adc
add
push
inc
lret
or
pop
out
aam
pop
mov
aad
push
dec
test
pop
adc
xchg
ret
shlb
out
leave
add
mov
or
clc
xor
jmp
sub
loop
in
xchg
push
mov
mov
fidivs
jb
xor
ds
jl
sbb
outsb
cli
es
dec
subb
or
fwait
jg
pushf
movsb
and
pop
jg
mov
test
sti
push
insl
or
cmc
inc
dec
jmp
xor
pop
mov
movb
push
add
nop
mov
xor
in
cmpl
lods
xchg
and
scas
jge
cmpsl
test
cld
xchg
inc
dec
flds
movsl
movsb
xchg
fiaddl
cmp
inc
testl
test
xor
test
mov
popf
mov
jecxz
aam
xchg
cmp
add
jecxz
lahf
rcl
jge
push
sbb
sub
loope
mov
cmc
jbe
hlt
add
in
pop
xor
mov
xchg
iret
push
xchg
into
addl
sti
pushf
mov
data16
sbb
mov
cltd
sub
inc
sbb
or
push
outsl
xor
sub
movsl
sbb
mov
int3
lock
jb
add
jmp
inc
mov
mov
xchg
std
and
cwtl
xchg
dec
test
aam
push
roll
or
mov
in
mov
test
addr16
fldcw
repz
dec
mov
jo
jb
xchg
adc
test
lds
fisttps
xlat
xchg
fidivrl
std
out
fsubrl
mov
dec
pop
fcmovu
add
add
fsubrl
gs
mov
adc
clc
shrb
xor
push
xor
dec
outsb
cmpb
pop
inc
incl
push
add
lcall
xchg
outsb
out
xor
stc
dec
lret
add
mov
pop
insb
fisttpll
cmp
push
jo
pause
mov
neg
sbb
enter
jl
xor
mov
adc
outsb
jo
and
sahf
dec
adcb
and
xor
sahf
xor
jo
xlat
xor
in
outsl
stc
pop
cmp
cmp
and
dec
rclb
inc
jae
dec
mov
test
addr16
cmpsl
dec
outsl
xchg
hlt
dec
lahf
stc
lods
lret
push
call
dec
dec
cmp
aaa
js
mov
pop
sbb
xor
stc
xchg
pop
rorl
mov
stc
ss
lea
pop
cmp
roll
fcoms
insb
add
and
popa
out
jae
imul
imul
inc
sahf
fbld
stos
inc
jg
jg
sbb
gs
pop
lcall
daa
das
push
pop
jne
rorl
mov
jg
insb
inc
sbb
xor
mov
adc
fsubp
test
nop
xchg
fidivrs
pushf
push
adc
in
jmp
mov
mov
das
xor
movl
xchg
dec
dec
test
pop
stc
add
leave
fwait
clc
inc
cmpsb
pop
fcom
and
or
pop
push
lock
stos
or
adc
lock
out
xor
mov
stos
push
xchg
mov
dec
repnz
mov
mov
lods
push
pop
push
pop
push
fucomp
sub
or
aam
pop
inc
mov
mov
push
xchg
mov
aad
sbb
mov
or
movhlps
cwtl
push
cmc
aaa
shrb
popf
stos
lods
sahf
jmp
mov
and
cwtl
xchg
dec
or
aas
mov
lea
cmc
pop
orl
or
outsb
addb
test
mov
pushf
pop
push
pop
stos
xchg
andl
inc
jnp
push
ret
sub
jecxz
sbb
nop
fwait
es
inc
mov
mov
aas
pop
jecxz
xchg
pop
fstl
ja
mov
adc
dec
jecxz,pn
dec
popf
add
lcall
cmp
or
fdivrs
fistl
aas
jp
ja
stos
cmpsb
addr16
into
rclb
inc
or
call
and
repz
loope
jecxz
lret
popf
insl
sbb
into
pop
je,pt
mov
je
fwait
je
icebp
push
inc
call
adc
jno
sub
or
call
movswl
dec
sti
jae
mov
jl
aam
push
xor
xor
xor
push
cmpsb
jb
aam
xchg
pop
fnsave
les
pusha
dec
out
pop
inc
inc
rcll
mov
out
cmp
or
in
int3
ficoml
lock
in
and
mov
in
and
jecxz
popa
inc
jne
in
xor
js
pop
aas
and
dec
jmp
fsubrl
sar
cmovnp
outsb
push
jns
fcmovnu
sub
dec
mov
mov
and
xor
dec
add
ret
pop
ret
fsubs
xchg
outsb
jb
cmc
mov
nop
lret
sbb
aas
mov
rolb
std
fnstsw
out
popf
into
xchg
mov
in
or
add
test
out
outsl
pusha
out
jns
test
das
inc
xor
into
in
clc
mov
je
lods
and
mov
cmp
repnz
test
pop
inc
mov
add
popf
ja
clc
lods
mov
mov
mov
and
mov
jb
insl
xor
lds
mov
sbb
jns
fstpt
pop
mov
sbb
or
enter
sbb
js
or
popa
xor
add
or
add
iret
lds
lods
xor
imul
cld
int
sub
jl
xchg
pop
jle
shlb
jecxz
push
arpl
and
dec
cmp
or
cltd
addl
insb
mov
xlat
jno
mov
push
mov
bound
adc
mov
test
mov
sbb
cmpl
mov
movsl
adc
mov
sti
rcrb
mov
repnz
pop
ss
pop
fidivl
push
and
shll
fcoml
xor
xchg
push
mov
ret
lock
std
dec
pop
lcall
sbb
popa
and
inc
sub
ja
inc
hlt
arpl
ss
in
pop
cmc
orl
lahf
mov
mov
lea
push
xchg
enter
aad
fcoms
int
hlt
mov
popf
adc
ss
int3
sub
dec
stos
push
xchg
mov
dec
xchg
fdivrs
mov
cmp
inc
or
or
push
and
out
cmpsl
jmp
jo
pushl
inc
lret
insb
and
into
stos
jb
push
xor
push
sbb
fidivl
mov
mov
jmp
punpckldq
jmp
leave
outsl
and
stos
lea
mov
mov
lret
sbb
and
sti
cmp
cld
sbb
cmc
popf
sbb
lahf
outsb
pop
sar
js
or
jmp
dec
enter
mov
xor
ja
ljmp
xchg
inc
fsts
adc
sbb
movsb
xchg
mov
sub
mov
jns
cli
sub
mov
je
or
cld
movsb
fisubrs
inc
sbb
push
dec
sbb
js
loop
insb
xchg
cmp
push
mov
mov
scas
sub
arpl
sbb
push
xchg
repz
ja
mov
loop
cmp
ret
mov
imul
shl
shlb
or
push
notb
jp
test
sbb
push
stos
adc
inc
ficoml
ljmp
loopne
and
data16
jecxz
movsb
xchg
xor
mov
mov
fcoml
jge
xchg
orl
ret
lahf
test
out
pop
sub
cld
lcall
add
mov
aad
and
arpl
stos
pop
xor
fisttpl
pop
je
cmc
dec
divl
stos
mov
sub
fwait
add
addr16
inc
cmpb
bound
pop
sbb
mov
pushf
jno
push
push
xor
shll
add
lahf
idivb
fdivs
dec
outsb
lea
nop
adc
in
mov
jbe
leave
jae
and
out
mov
cmp
push
dec
xor
mov
dec
int
std
roll
test
arpl
mov
cmp
mov
mov
xchg
fidivs
lret
jno
in
imul
movsb
push
cmpsb
or
sbb
push
or
pop
shl
jne
mov
pop
imul
xlat
enter
movsb
cmpsb
movsl
pop
cltd
es
and
jg
jno
in
pop
arpl
gs
stos
test
ret
inc
mov
test
into
and
stos
cli
cmpsl
push
add
adc
ljmp
mov
or
mov
mov
inc
push
cwtl
dec
testb
mov
push
out
xchg
stc
cli
mov
pop
movsb
in
gs
pop
pushf
inc
into
ja
cltd
lds
fcoml
mov
das
repnz
int
stc
mov
fsubr
pop
out
pushf
sub
dec
adc
xchg
adc
pop
add
dec
jbe
shlb
lret
mov
inc
xlat
or
mov
test
push
mov
cltd
cmp
jbe
pop
xor
gs
jge
int
cmpl
xchg
shl
jo
push
rcl
enter
and
or
mov
imul
inc
lahf
repz
scas
and
inc
pusha
test
lret
sarb
sbb
imul
mov
in
xchg
popf
jge
lret
out
imul
clc
ss
call
or
mov
roll
lds
jmp
mov
cltd
mov
data16
pusha
jo
ss
enter
fsts
and
out
inc
hlt
gs
data16
mov
aas
js
mov
movsb
push
dec
aam
dec
inc
inc
fs
mov
jb
pusha
xchg
bndldx
push
dec
xor
in
scas
rclb
outsl
lret
imul
sahf
lock
lret
lret
call
subw
sub
fsub
mov
imul
inc
xchg
jmp
stc
xchg
push
outsl
inc
xor
mov
mov
popf
cmpl
add
aam
ficoml
lahf
icebp
ret
jg
pop
dec
in
mov
outsl
or
sub
sub
popl
cmp
mov
inc
push
in
pop
cmpsl
mov
addr16
ficompl
cmpsb
daa
aad
mov
mov
outsb
push
or
fs
pop
xchg
rorb
xorl
int
movsb
xchg
and
movsl
pop
push
loop
adc
dec
jge
pop
lock
loop
push
xor
inc
push
add
xor
pop
mov
adcl
push
push
xchg
push
hlt
jp
push
movsl
add
push
xor
wbinvd
fnstenv
sbb
pop
jmp
mov
mov
sbb
das
push
movsb
fcomps
sbb
data16
xchg
jo
fsubl
aaa
mov
sbb
fs
sbb
inc
jge
test
push
scas
or
jno
adc
test
stc
je
leave
cmp
sahf
sti
enter
xchg
in
mov
sbb
push
nop
pusha
rcll
lahf
cmp
stc
lcall
subb
int3
push
sub
jp
negb
mov
add
call
std
push
add
adc
xchg
sub
mov
mov
and
fisubl
inc
imul
stc
pop
shll
sbb
cmp
inc
or
push
dec
push
xor
cmp
mov
ds
jae
xchg
insb
pop
test
dec
pop
sbb
leave
notl
add
mov
popf
inc
lret
nop
adc
sarl
addr16
test
jge
mov
outsl
xor
mov
add
sbb
xor
inc
adc
mov
cwtl
popf
cmpb
jl
fisubl
call
loope
adc
scas
mov
inc
cmpsb
cmpsb
sub
cmpsb
add
mov
adc
mov
push
out
push
sbb
mov
leave
out
pusha
or
in
das
stos
pop
pusha
ret
adc
rcr
shrl
lods
mov
push
scas
dec
decb
mov
and
add
aaa
int
dec
out
jb
test
lds
loopne
data16
xchg
pop
jle
sbb
adc
icebp
push
lock
lret
add
jp
push
pop
inc
sbb
ss
repz
int
mov
push
lret
push
sti
addr16
out
fsts
notl
mov
imul
int3
loop
pusha
jnp
push
divb
in
lock
dec
iret
shll
leave
jg
ret
jle
jecxz
fstpl
push
cli
popa
fnstsw
inc
fisubs
xor
adc
outsb
xchg
push
arpl
pop
inc
das
popa
sub
gs
and
dec
mov
cmp
adc
xlat
add
outsl
mov
xchg
mov
popa
dec
add
aas
pusha
sbb
dec
dec
inc
iret
sahf
pop
je
dec
jle
mov
rol
mov
push
in
ljmp
xor
mov
adc
add
xor
jg
addr16
imul
jmp
sahf
mov
dec
lea
jmp
mov
imul
fcoms
adc
cmpsb
push
mov
push
mov
push
int3
sbb
dec
cli
std
mov
scas
sub
xor
jp
xchg
gs
sti
pop
add
inc
in
pop
push
or
mov
inc
inc
jns
mov
fldenv
std
xor
xchg
stos
rcll
cs
shlb
movsb
bound
movsl
jne
clc
aaa
imul
in
pop
xchg
cmp
fstpl
scas
xchg
push
fidivl
push
test
enter
xchg
push
js
inc
jb
shlb
mov
sbb
outsb
jo
adc
pop
psrlq
jne
inc
cmp
push
adc
sbb
fstl
pop
fs
jl
xor
sub
and
addb
xchg
addr16
cmp
jo
aas
sub
in
scas
stos
scas
mov
or
cmp
push
pop
stos
jle
stos
jns
repz
pop
into
adc
inc
cmp
push
sti
jle
push
cmp
jb
jne
lods
out
jg
mov
shrl
rorl
jnp
call
adc
dec
aad
mov
and
test
xchg
dec
mov
iret
inc
mov
ljmp
popf
mov
ret
push
hlt
mov
push
or
xor
adc
lods
lds
cmpsb
or
dec
mov
add
jge
or
mov
test
sub
push
imul
adc
xlat
add
and
and
and
cmp
sub
sbb
je
out
push
push
or
jno
push
arpl
lock
fidivrs
mov
inc
gs
pop
jnp
push
mov
cmpsl
push
mov
adc
and
stos
inc
sbb
mov
stos
test
mov
adc
ljmp
iret
outsb
mov
lret
fadds
neg
popf
je
arpl
mov
js
xor
cmp
lods
stc
jg
out
test
ds
out
arpl
mov
jb
xchg
aas
dec
xor
sbb
adc
imul
push
out
and
adc
or
das
mov
dec
ja
dec
sbb
inc
jg
xor
out
xchg
push
xor
cmp
jo
fsubr
loope
jmp
mov
lds
mov
mov
hlt
les
adc
dec
dec
sub
or
sti
es
dec
sub
dec
test
insl
pop
push
ljmp
in
lret
cltd
in
pop
mov
jnp
out
jno
lock
icebp
lea
rcr
jg
inc
pushf
push
pop
sub
int
outsb
fsubs
mov
push
jge
cwtl
in
or
popf
inc
lods
clc
dec
and
jge
outsl
pop
mov
jns
sub
test
xor
inc
dec
daa
jno
push
aam
or
fisttps
cli
mov
xor
imul
inc
sub
into
jae
ret
mov
mov
mov
add
adc
lods
fsubp
and
sti
push
out
xor
mov
js
in
dec
jle
mov
push
out
mov
add
xchg
fsubl
adc
sarb
loopne
mov
xchg
shl
insl
rcl
arpl
scas
call
insb
ffree
fdivrl
loop
rolb
stos
mov
out
dec
js
sahf
cmc
orl
sub
push
mov
cmpsl
in
xchg
mov
retw
pop
xor
lock
xchg
scas
ret
xor
add
jl
mov
stc
es
pushf
sub
cs
inc
and
movsl
xor
lock
test
and
inc
jl
xor
xor
cmpsl
aam
cmc
push
bound
dec
mov
lret
cmp
sahf
bnd
addr16
xchg
les
adc
sbb
cltd
mov
lahf
cld
into
jge
mov
xor
fwait
dec
lahf
stos
add
mov
xchg
lahf
sbb
imul
push
ret
int3
lret
incb
sti
into
adc
xchg
xchg
inc
pop
adc
fwait
in
ss
popa
sbb
sbb
inc
xchg
push
movsb
jbe
pop
push
jl
mov
pop
outsl
cli
and
les
lock
jge
sbbl
insb
or
add
test
shll
lcall
mov
dec
iret
inc
inc
sbb
pop
ret
or
mov
mov
inc
icebp
lods
in
or
rcll
mov
imul
pop
pop
push
and
fwait
and
lods
inc
ret
imul
popf
inc
inc
aaa
pop
dec
imul
xchg
sbb
or
movsb
push
addr16
sbb
cli
ret
out
pusha
push
adc
in
add
or
movsb
add
mov
cltd
loop
mov
inc
sub
mov
push
jae,pt
pusha
cmp
or
dec
mov
gs
clc
xor
pop
mov
fnstenv
push
lods
pop
and
clc
adc
mov
push
nop
mov
nop
mov
lret
push
jl
sbb
je
jge
mov
insb
jae
lds
sbb
sub
popl
stc
popa
mov
cmp
mov
mov
jmp
pop
lea
ret
jmp
cmpb
pop
add
xlat
xchg
mov
ficompl
loope
jge
mov
mov
hlt
xor
scas
push
mov
dec
xor
push
hlt
ja
mov
mov
mov
shrb
or
sbb
int3
mov
and
sub
cmpsb
push
arpl
insb
pop
pop
or
lods
test
cmp
pop
mov
shrb
es
call
jmp
negl
fildl
das
mov
movsl
mov
mov
lods
xor
pushf
jp
mov
mov
mulps
mov
dec
xchg
add
arpl
push
push
nop
stos
mov
jnp
or
xor
rolb
aam
or
lods
orb
mov
sbb
dec
out
inc
fdivrl
imul
cmc
out
jge
in
imul
lea
and
pop
fdivrs
inc
inc
stos
loop
jne
fs
xchg
jno
in
or
xchg
push
lret
push
shrb
les
fistpl
mov
inc
notl
xor
sub
cmpsl
xchg
xor
dec
movsb
xor
jle
sti
loopne
mov
inc
inc
jmp
mov
xor
mov
push
fwait
and
lds
cs
movsb
sub
inc
ljmp
and
call
inc
dec
jbe
bound
mov
fisttpll
lcall
mov
mov
or
rcr
test
or
jnp
rcr
jb
add
sub
fisttpll
sub
or
addb
xchg
mov
sub
js
dec
add
inc
addr16
std
ret
shll
adc
or
fwait
shll
or
add
and
call
and
fsubrs
bound
movsb
cmp
and
shl
in
ds
shrb
mov
sbb
ret
lds
cmp
pusha
leave
dec
xor
sub
dec
das
and
mov
punpckldq
cmp
dec
sarl
repz
movsb
adc
jg
into
pop
mov
out
add
add
jne
xchg
scas
push
test
rcll
sbb
mov
push
xlat
fstpt
movsl
mov
call
aad
mov
mov
cmpsb
add
push
pop
in
lret
fstpl
popa
push
dec
pop
jl
mov
xor
lds
or
xchg
sbbl
outsl
cmp
xchg
xchg
mov
sbbl
out
sub
pop
loope
sub
pop
pusha
add
xchg
arpl
push
xchg
jno
cmp
jle
pop
xchg
add
fucomp
test
xor
in
lret
jae
mov
mov
xlat
sti
lret
xchg
sub
ss
test
cs
scas
aaa
iret
sbb
cmp
inc
ret
iret
cltd
mov
test
mov
pop
mov
pop
call
cmp
dec
int
push
cmpsl
pop
mov
mov
repnz
sbb
mov
sbb
stc
les
mov
fucomip
pusha
sbb
std
jmp
cmpsb
mov
jmp
mov
xchg
out
xlat
pop
jecxz
xchg
sub
fistl
fld
cmp
and
in
xor
jl
fidivs
sub
jb
shll
cwtl
push
xchg
enter
sbb
jle
sbb
or
std
and
enter
sbb
cld
jp
js
push
test
leave
aam
or
enter
rcrl
sti
aas
pop
inc
in
dec
bound
hlt
cmp
and
cmp
sbb
adc
mov
shrb
pop
or
jp
out
sbb
fistps
loopne
cli
movsb
sbb
xlat
addr16
mov
adc
jne
cmp
popf
mov
insb
pop
outsb
mov
cld
icebp
movsb
out
fnsave
mov
inc
jnp
or
adc
mov
mov
dec
hlt
inc
jbe
jmp
cwtl
pop
mov
sub
idivl
jmp
sbb
repz
mulb
jmp
and
mov
jp
inc
sub
out
push
jge
and
or
inc
pop
jmp
mov
cmpsb
test
mov
mov
fnsave
sbb
mov
inc
jb
ret
mov
or
xchg
decb
sbb
adc
aaa
jge
pop
lds
push
stos
and
sub
add
loopne
cmp
test
out
ja
adc
imul
pop
adc
pop
sub
aad
nop
pop
sub
cmpsb
sub
or
sub
fcoms
push
adc
fadd
jb
mov
iret
mov
mov
xor
cmp
pop
mov
stos
cld
int3
lods
sub
outsb
fs
dec
mov
or
sarl
and
lods
jp
fisttpl
es
or
mov
fnsave
fcmovb
xorb
xor
xor
jae
icebp
push
aad
arpl
pop
cmpsb
xchg
incl
push
mov
or
pop
xorl
mov
xchg
cld
dec
popl
xchg
jb
adc
mov
sarb
notb
sub
mov
cs
mov
mov
adc
and
aam
outsb
ja
adc
xor
inc
adc
mov
and
fcmovnbe
dec
xchg
sahf
test
out
mov
inc
add
mov
test
and
ds
inc
enter
insl
fucomp
cld
sbb
push
or
sbb
leave
cld
lods
mov
pop
loop
jmp
jns
test
or
stos
scas
adc
mov
sahf
cmc
out
mov
ds
repnz
inc
jl
jp
popa
into
adc
jae,pn
pop
faddl
loopne
fadds
or
pop
out
prefetchw
inc
push
mov
push
push
jae
les
add
adcb
test
xchg
sbb
xor
repnz
mov
dec
xor
xor
inc
inc
sahf
addr16
and
mov
ret
cwtl
mov
dec
dec
fisttpll
or
adc
fbstp
jg
xor
add
in
call
sbb
ret
les
add
or
rcll
dec
aad
aam
leave
loop
aad
rol
mov
fsubrl
ja
mov
popf
and
insl
addb
stos
outsb
jb
into
mov
movsb
dec
and
xlat
insb
out
insb
das
cmp
sub
inc
rol
pop
stos
hlt
adc
ss
int3
mov
lahf
icebp
push
fistps
jo
rolb
jge
jb
fdiv
push
gs
sub
fidivs
aaa
loopne
leave
cli
sbb
push
in
aad
rolb
mov
lahf
ret
lock
repnz
aas
andb
fcompl
adc
sub
int
cmc
sti
addr16
push
push
jecxz
out
test
add
fwait
mov
dec
popa
je
test
enter
push
test
gs
cmp
ss
sbb
or
pop
stos
xor
jae
cmpsb
lret
pushf
bound
iret
enter
das
mov
push
sbb
jnp
mov
data16
js
xchg
or
icebp
jge
insl
add
or
scas
pop
ss
mul
cmp
in
jo
shll
aas
icebp
std
test
and
fwait
xchg
movsl
icebp
shll
pop
and
jnp,pn
out
xchg
or
out
ret
inc
nop
imulb
dec
sub
js
repnz
lods
mov
pop
aad
jecxz
iret
and
leave
mov
loope
jo
dec
dec
std
fwait
test
sub
sahf
dec
and
sub
shr
icebp
rorl
cmp
adc
mov
fdivr
sub
jbe
mov
ret
jle
aas
sbb
dec
jmp
mov
sbb
fs
nop
push
fnsave
inc
out
sub
inc
fisubrl
cmp
xchg
and
dec
arpl
aas
inc
sbb
push
shl
xlat
lods
push
cmpsl
int3
mov
stos
lods
es
cmp
rclb
sub
xchg
subb
cmp
cltd
loope
lcall
cmc
test
data16
and
cmpsb
jne
cmp
mov
jl
mov
adc
mov
xlat
jno
mov
scas
rcr
fdivr
xlat
jo
mul
fistpll
outsb
mov
sbb
jp
jle
xor
stos
cmp
out
dec
int
mov
push
mov
fisttpl
cmp
insl
lcall
mov
mov
mov
ljmp
push
or
mov
loopne
jge
fldt
nop
adc
out
xchg
cwtl
sahf
mov
pop
jno
mov
jb
lea
movsb
inc
pop
clc
mov
bound
mov
fwait
push
sub
pusha
shr
mov
std
cltd
lahf
jbe
mov
and
push
mov
into
incl
nop
scas
pop
out
cmpsb
fcomip
std
imul
lcall
test
pushl
into
mov
sbb
call
mov
or
add
sti
xchg
inc
jb
or
sub
fsts
rcll
imul
push
psllq
fsubrl
icebp
pushf
dec
xlat
mov
mov
xor
int
outsl
lds
call
push
clts
jmp
xor
xor
push
andb
mov
or
xchg
pop
rep
push
mov
gs
lcall
scas
add
outsb
sbb
xor
or
xchg
pop
jecxz
xor
das
inc
xchg
dec
xchg
fbstp
and
dec
dec
repnz
inc
mov
pop
int
js
mov
inc
fs
sbb
push
xchg
testb
cmp
push
push
mov
mov
divl
jle
mov
ljmp
mov
cmpsb
mov
mov
adc
outsb
fmul
xchg
ja
pop
clc
in
mov
insl
pop
fldl
imul
dec
xchg
subl
in
shl
jne
in
leave
out
dec
pop
bound
mov
fsubl
fisubl
sarb
sbb
inc
lods
mov
dec
out
push
push
fdivr
jg
sbb
mov
dec
imul
jb
scas
xchg
inc
xchg
push
xor
cmpsb
unpckhps
lcall
mov
pop
xchg
stc
stos
enter
aam
fs
or
popa
pop
adc
leave
in
repnz
loope
jbe
ret
push
xchg
cmp
es
cmp
pop
and
push
pop
arpl
enter
mov
and
insl
addr16
mov
xchg
xlat
jecxz
cmp
add
xchg
sarl
fidivl
lods
sub
je
and
or
lahf
mov
pop
xor
test
inc
or
sub
cmp
popf
adc
insb
out
loop
cmp
pop
daa
sbb
mov
and
mov
rorb
dec
mulb
xchg
jg
movsb
or
dec
xchg
xor
insb
hlt
sub
xchg
ds
test
mov
push
mov
pop
pop
add
adc
outsl
shl
adc
scas
es
insb
lods
lcall
lret
jnp
scas
xor
add
out
jle
xchg
stos
popa
sbbl
js
je
xchg
sub
pop
push
jno
jb
xchg
cli
loop
icebp
cmp
sbb
sub
pop
fwait
push
andb
mov
pop
fildl
repnz
ds
mov
int3
lcall
mov
stos
loopne
in
xchg
xlat
inc
mov
aam
sub
daa
outsl
lock
bound
and
push
and
jge
pop
fistpll
adc
inc
push
lea
mov
cmp
add
addr16
sbb
push
sbb
dec
lods
mov
push
orb
inc
pop
cmp
cmp
xor
imul
scas
push
adc
popf
out
dec
aam
inc
popa
cmpsb
jo
dec
or
sbb
jle
push
neg
icebp
add
loop
std
adc
cmp
add
pushf
bswap
leave
xorb
xchg
mov
jge
sbb
bound
xchg
imul
xor
test
loope
xchg
hlt
movl
in
pop
iret
gs
shlb
cmpsl
push
fidivrl
sub
and
mov
sbb
jne
xor
pop
mov
and
in
psubd
imull
dec
and
dec
push
shll
xchg
sbb
push
push
aaa
jnp
mov
mov
jp
inc
xchg
sahf
push
mov
aad
ret
and
ja
sub
pop
inc
fsubs
loope
cmp
add
sub
pop
sti
and
sbb
test
stos
jnp
rorb
xor
clc
notl
jmp
push
push
sbb
inc
add
or
xchg
mov
push
in
jnp
sarl
arpl
cmp
add
gs
mov
imull
sub
xchg
sub
mov
lds
and
jge
sbb
shl
pusha
push
xchg
or
orb
clc
aad
pop
xchg
add
mov
xchg
cmp
jo
and
cmp
mov
dec
push
lret
lock
out
dec
xchg
jnp
mov
fildll
inc
shl
cmp
pop
jnp
dec
cli
fdivs
stc
and
xor
add
loopne
ljmp
cs
test
and
ja
repz
xchg
or
ds
push
pop
jecxz
dec
and
mov
test
cltd
pop
or
push
clc
addr16
gs
push
and
dec
int3
inc
or
mov
mov
cmp
aad
sbb
mov
dec
int3
adc
cmpsb
mull
jmp
sbb
push
aaa
mov
int3
iret
or
adc
cmp
sub
jle
inc
mov
jnp
sub
repz
sub
dec
lock
dec
ss
iret
sti
mov
hlt
push
leave
mov
sbb
roll
in
fsubrs
mov
pop
mov
call
push
faddl
pop
push
adc
lret
xor
or
adc
cmp
lea
jne
leave
and
jbe
fucomp
and
mov
fwait
pop
mov
cltd
shrb
mov
jnp
fs
or
push
mov
mov
in
imul
jno
mov
gs
addl
cmp
lret
dec
insl
jg
adc
jb
popf
out
pop
cs
mov
das
push
xchg
push
sub
dec
sahf
loopne
mov
pushf
addr16
sub
in
pop
negb
test
jmp
mov
xchg
inc
adcl
sub
add
shlb
enter
stos
jl
dec
inc
fbstp
mov
push
add
dec
test
push
loopne
jnp
sbb
pop
data16
popa
sbb
leave
jp
int
out
xchg
xor
js
push
daa
sbbb
int3
or
xor
test
dec
daa
mov
rol
aaa
jb
lods
inc
add
push
mov
loop
sarl
call
popf
dec
dec
lods
xor
loope
lret
bound
jae
xchg
fwait
pushf
cmp
xchg
inc
jmp
sub
movsl
imulb
andl
and
rolb
data16
lods
pop
push
rol
cs
in
les
cmpsl
loope
lcall
sub
scas
inc
pop
or
sub
pop
mov
sbb
leave
jg
and
enter
jo
lcall
jge
loope
cld
ja
mov
testl
pushf
adc
push
cwtl
scas
cmp
sahf
shll
sub
shlb
inc
stc
jp
shr
xchg
or
scas
cmp
sbb
or
inc
pop
imul
jns
xchg
lret
mov
cwtl
xchg
mov
lea
jb
ds
push
mov
xor
stc
outsl
clc
insb
inc
mov
push
push
xchg
xor
cmpsb
mov
xchg
pop
push
rdtsc
std
into
mov
cmpb
pop
sub
mov
cmpl
jb
out
aaa
call
outsb
cmp
mov
inc
mov
and
push
pop
xchg
and
dec
xchg
sbb
aam
test
mov
pushf
xor
fldl
arpl
sub
sar
sti
pop
es
sub
cli
mov
jg
push
mov
or
and
mov
aam
out
test
js
mov
sub
testb
xchg
repnz
mov
cmp
fsubrp
jo
repnz
std
out
sti
mov
sbb
dec
ljmp
xlat
or
pop
push
cmp
fbld
sbb
cwtl
push
mov
xchg
repnz
inc
popf
int3
add
into
lods
dec
mov
lods
test
adc
ds
lea
and
fwait
push
imul
adc
ret
pop
jg
loopne
push
testb
hlt
ja
stc
test
push
test
push
adc
add
ds
mov
lahf
sbb
mov
out
incb
mov
pop
jo
roll
sub
lea
into
mov
fnstcw
push
sub
sahf
mov
jle
stos
mov
scas
out
add
mov
gs
push
push
shrb
nop
cld
shr
add
sbb
or
push
sub
push
push
xchg
test
sahf
shll
pop
pop
add
add
adc
add
cmp
jp
test
add
pusha
add
adc
add
addr16
xor
xor
xor
xor
