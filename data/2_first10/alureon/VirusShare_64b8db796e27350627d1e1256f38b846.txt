push
mov
push
mov
cmp
jb
xor
add
push
mov
je
push
mov
mov
mov
mov
mov
mov
rol
mov
xor
imul
xor
mov
sub
mov
mov
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
push
call
mov
cmpl
mov
je
or
sub
mov
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
mov
push
push
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
pushl
push
call
test
jl
mov
mov
push
pushl
push
call
test
jge
andl
jmp
mov
pop
pop
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
add
push
mov
lea
sub
nop
lea
mov
push
mov
inc
pop
cmp
jb
pushl
lea
push
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
mov
pushl
mov
push
call
pushl
mov
push
call
lea
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
imul
cmp
jb
mov
imul
mov
mov
add
imul
push
push
xor
pop
div
mov
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
mov
ror
xor
imul
lea
mov
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
sub
test
je
mov
mov
sub
mov
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
mov
pop
pop
pop
leave
ret
push
push
push
call
mov
mov
push
pushl
xor
mov
rep
call
test
je
push
call
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
mov
mov
mov
sub
test
jne
inc
jmp
andl
push
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
push
lea
push
push
add
call
mov
add
test
je
mov
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
mov
cmpl
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
mov
pushl
call
push
call
pop
ret
push
mov
sub
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
call
mov
test
je
push
push
mov
lea
push
mov
push
lea
push
call
mov
push
mov
call
add
push
push
lea
push
call
pop
pop
mov
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
mov
mov
push
call
pop
cmp
jne
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
pop
ret
mov
push
mov
sub
push
lea
push
pushl
push
pop
call
test
mov
je
cmpl
jbe
mov
push
push
pushl
mov
pushl
push
call
pushl
push
pushl
push
call
pushl
push
pushl
push
call
mov
cltd
mov
idiv
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
mov
add
push
call
push
push
pushl
push
call
add
push
call
push
push
pushl
push
call
add
push
call
mov
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
push
push
pushl
push
call
add
push
push
pushl
push
call
pushl
push
pushl
push
call
add
cmpl
jbe
pushl
push
push
pushl
call
pushl
push
call
pop
pop
pop
pop
mov
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
test
je
mov
jmp
push
call
push
mov
push
push
push
push
push
push
xor
push
inc
push
mov
add
call
mov
push
mov
call
mov
push
call
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
mov
call
pop
test
je
lea
push
push
pushl
call
mov
imul
add
push
imul
add
call
push
call
cmpl
je
cmpl
jne
push
call
lea
push
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
add
lea
mov
pushl
mov
push
mov
and
call
pushl
mov
pushl
call
pushl
pushl
pushl
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
add
loopne
cwtl
clc
sbb
push
nop
lahf
add
dec
lret
cmp
mov
leave
lea
and
jg
fcomps
xor
cmp
dec
xor
icebp
lock
sub
pop
push
sub
mov
cmp
movsl
cwtl
clc
sbb
loop
nop
xor
imul
adc
fnstsw
leave
addr16
leave
xor
mov
lods
repnz
add
movsl
and
arpl
mov
sub
push
inc
add
jle
cmp
in
inc
insl
dec
mov
lcall
test
dec
fldcw
xorl
push
push
jmp
shlb
push
mov
out
les
mov
push
xlat
jae
push
fisubrs
stos
out
loop
mov
and
mov
in
mov
stos
mov
add
aaa
cltd
mov
pop
jbe
mov
mov
mov
mov
pop
rcll
fwait
int
outsb
mov
mov
ret
enter
and
imul
adc
push
jns
and
and
mov
jle
mov
das
fisubs
lret
mov
or
sarl
mov
cmpsl
lods
pop
hlt
rcl
lods
push
scas
push
stc
hlt
push
fldenv
test
push
lods
add
adc
mov
add
add
xchg
cltd
cmp
or
shlb
lahf
call
add
stos
ja
pop
sbb
daa
fcom
shll
aaa
xor
xor
push
repnz
bnd
pop
jo
fcomps
popf
push
arpl
outsb
jo
xor
sub
sahf
push
outsb
orl
cmp
inc
ficompl
cs
fsubrs
lea
pop
test
sbb
adc
cmp
and
xchg
push
aaa
add
out
icebp
xchg
icebp
inc
jle
push
lods
fdivrs
cld
dec
cmp
call
testb
ficompl
cli
cmp
mov
scas
cmp
fcmovu
sbb
and
outsl
add
pop
int3
mov
in
addr16
sahf
add
push
nop
icebp
sbb
xchg
dec
inc
fstl
push
jno
stos
imul
imul
add
jns
add
loope
pop
mov
push
pop
loop
adc
cs
mov
call
xchg
sbbl
outsl
inc
inc
imul
and
push
dec
movsl
dec
mov
mov
ss
ljmp
add
mov
call
mov
jge
into
out
xchg
or
mov
imul
and
es
jne
adc
mov
xchg
pushf
mov
in
mov
sbbl
pop
and
inc
lahf
mov
nop
dec
mov
cld
out
sti
dec
and
ret
mov
mov
add
std
adc
movsl
cld
scas
js
iret
int3
cmpsb
cmc
mov
fnstenv
push
sbb
call
mov
stc
xchg
pop
movsb
pop
ficomps
push
lcall
addr16
aam
xchg
or
add
jnp
inc
mov
inc
jmp
pop
fcmovu
pop
loop
mov
mov
xor
pop
mov
es
push
loope
xchg
jo
push
cmp
jl
popl
sbb
sahf
mov
dec
ljmp
or
mov
mov
pushf
movsl
mov
leave
popa
mov
mov
push
hlt
shrl
xchg
xorb
add
mov
mov
fs
inc
int
xchg
and
sti
iret
outsl
xor
inc
je
cmc
pop
cmp
js
dec
pop
inc
xlat
enter
mov
imul
lcall
dec
test
pop
cmp
stc
adc
iret
loopne
adc
test
mov
mov
mov
ds
ja
out
lahf
xchg
test
push
and
in
push
or
cmp
mov
add
add
aas
divl
and
pop
xor
push
dec
dec
lahf
adc
in
repnz
add
cwtl
cmp
fstl
xchg
bound
movl
dec
adc
cld
ja
inc
inc
addr16
out
adc
mov
cmpsl
cmc
out
jge
xchg
sbb
jne
sbb
repnz
movsl
mov
hlt
mov
sbb
add
add
rol
in
daa
adcl
sahf
pusha
xchg
xchg
scas
stc
xchg
adc
xchg
icebp
and
jne
xor
in
cmpsb
or
cmp
pop
mov
mov
jmp
idiv
fildll
popa
clc
cli
cmp
cmp
push
push
pop
leave
dec
push
cmp
dec
in
mov
loopne
dec
shll
inc
dec
mulb
dec
cltd
or
adc
decl
enter
icebp
and
aaa
dec
inc
dec
out
push
scas
sti
lret
insl
mov
pop
xchg
add
out
adcb
int3
sbb
out
add
test
dec
fiadds
pop
fisttps
int3
adc
mov
sub
sbb
adc
movsl
mov
pop
mov
jge
sahf
movsl
or
mov
ss
in
jge
push
xchg
mov
shrb
sbb
jne
sbb
cwtl
pop
add
mov
fs
mov
jbe
scas
clc
cli
cs
sbb
ret
outsb
sub
das
fnstcw
xchg
pushf
jns
mov
out
int3
dec
xchg
and
out
add
ret
or
push
mov
lds
push
mov
jo
aaa
dec
pop
or
add
outsb
decl
cmp
sti
popf
mov
das
add
cmpsl
into
mov
jl
mov
fwait
cmp
add
jns
sbb
test
push
add
cltd
lahf
push
lcall
xchg
xchg
jl
jb
inc
mov
fwait
sbb
inc
out
and
aaa
scas
mov
cld
arpl
xor
lahf
hlt
sub
push
outsl
pop
cmpsb
and
scas
push
sbb
sbb
pop
xchg
add
adc
and
add
add
fisttpl
sbb
dec
mov
je
insl
sbb
cld
lret
std
and
or
jmp
pop
jbe
call
mov
lods
std
fmul
jge
in
push
push
sub
add
ljmp
cmp
aad
cmpsl
add
stos
jb
adc
scas
add
test
test
addr16
subb
movsl
in
rorb
scas
fisubrs
lods
out
sbb
pop
rcrl
nop
das
and
incl
add
add
xchg
inc
sbb
cld
inc
stos
cs
mov
jle
pop
adc
xor
and
arpl
adc
movsl
mov
mov
push
mov
pop
sbb
daa
fdivr
mov
repz
aas
push
orl
mov
loope
aaa
pop
lret
fmuls
stc
push
iret
jmp
jl
sbb
mov
mov
add
add
dec
bnd
cmpsl
fsts
iret
test
aam
loop
pop
adc
int3
aad
push
test
sbb
push
adc
mov
jne
iret
push
xor
inc
dec
lds
sbb
xchg
lds
loope
shrl
mov
add
dec
mov
adc
jo
and
add
pop
xchg
mov
xor
jae
loope
or
jmp
pushf
ss
mov
or
xchg
or
mov
jbe
stos
insb
rcll
mov
bound
movsl
lret
mov
cmp
nop
repnz
jb
inc
lret
popf
ds
movsb
int3
dec
hlt
lock
arpl
push
in
imul
xchg
int3
jecxz
cmp
add
xor
cmp
or
aas
pop
dec
jno
out
mov
xchg
pop
push
dec
push
xchg
fsub
xor
jecxz
fldt
imul
xchg
jmp
fisubl
negb
stos
adc
sub
ljmp
and
dec
push
mov
lds
mov
sbb
add
add
lea
mov
stos
popf
loop
mov
jecxz
cli
cmp
ja
mov
sbb
jb
out
add
imul
sub
pop
push
add
jae
test
faddp
or
popa
jne
pop
lcall
and
jl
pushf
cmp
xor
mov
xor
jo
popf
pop
or
out
fiaddl
lds
aas
xchg
xor
ficoms
roll
add
add
mov
repz
mov
ljmp
inc
iret
ja
or
fstpt
inc
and
push
cmc
pushf
push
das
pop
mov
xor
leave
xchg
inc
add
mov
sub
push
scas
pop
add
xor
inc
inc
out
pop
sub
mov
fwait
aas
jno,pt
mov
or
xor
xchg
sub
xchg
mov
sub
sub
hlt
jns
mov
dec
or
pop
jae
mov
int
jmp
push
mov
mov
outsl
xchg
and
xor
aas
xchg
xor
inc
xor
or
dec
xchg
ret
xchg
add
cmp
mov
sti
push
or
xorl
faddl
jmp
lock
mov
aad
xor
or
mov
add
jge
fwait
hlt
sahf
inc
dec
pop
push
cmp
in
push
jmp
cmc
jb
imul
sbb
jb
sbb
add
fsubrs
mov
push
cmp
inc
dec
lds
nop
add
add
cwtl
mov
mov
lcall
cmc
cmpsb
movsb
mov
xchg
adc
mov
and
ja
xor
cmp
lds
sub
ffree
aam
pop
ljmp
cs
int3
nop
lcall
mov
lret
addr16
lods
cmp
jecxz
adc
pop
lods
mov
into
jno
dec
mov
pop
mov
sbb
mov
and
mov
iret
adc
inc
fldln2
repz
add
clc
fcmovnbe
mov
sub
outsl
cmp
clc
pop
sub
push
pop
out
into
inc
movsb
jb
movsl
pusha
xor
imul
cmpsl
jno
xor
cmp
into
insl
fistpll
stos
jo
mov
adc
add
push
xchg
lock
sub
clc
fistpll
jo
test
js
repz
lds
mov
mov
test
inc
ret
negl
and
mov
mov
mov
push
sbb
mov
xor
loope
sub
add
add
pop
adc
adc
je
das
in
or
out
cmp
clc
insb
imul
cmp
or
ret
ret
rcl
dec
jnp
mov
mov
mov
sbb
xor
rorl
mov
in
inc
pop
ror
aam
aas
daa
push
mov
mov
aas
xchg
inc
idiv
xchg
mov
inc
popf
aaa
jne
mov
mov
dec
or
out
call
insb
stc
out
aaa
jp
adc
cmp
dec
lods
pop
loopne
adc
icebp
stc
mov
pushf
rcrb
pop
outsb
sub
add
pop
inc
jns
jb
pop
ljmp
and
lcall
stos
andb
dec
add
push
mov
jp
cld
pop
dec
ljmp
into
lds
sti
pop
cltd
xchg
popf
cmpsb
mov
aas
and
and
dec
add
lods
mov
rorl
cmpsb
pop
lcall
imul
mov
adc
loopne
pop
sbb
jp
add
pop
outsb
jecxz
xchg
fisttpl
pop
mov
pop
sbb
or
incb
sbb
jno
pop
test
or
mov
inc
sbbl
mov
pand
movsl
inc
negl
xor
mov
xchg
mov
rorl
sbb
in
lds
stc
fdivrp
pop
dec
xchg
push
inc
frstor
jno
or
lret
es
icebp
mov
adc
daa
xor
in
fistl
add
lods
jg
mov
shlb
mov
insb
xchg
cmpsl
and
lods
test
dec
data16
in
xor
scas
aas
mov
sub
mov
pop
sbb
xchg
inc
xchg
popa
sub
jecxz
fadds
dec
push
mov
xor
fisttps
data16
sbb
inc
fs
imul
fidivrl
xchg
push
scas
push
sub
jle
outsl
cmp
call
mov
sub
xchg
jb
clc
xchg
sbb
in
sti
mov
and
sub
mov
add
add
rcll
clc
xor
ljmp
mov
insl
cmp
and
aam
and
mov
scas
mov
jb
fimull
sub
xchg
jmp
inc
cmp
jl
rclb
adc
or
cli
inc
dec
jp
cwtl
in
cmp
jne
mov
lret
add
adc
in
sbbl
add
jge
pushf
lahf
inc
out
fisttpl
lods
loopne
stc
int3
push
paddusb
adc
push
rcrl
cwtl
and
data16
arpl
rcll
xor
push
in
xor
push
or
cld
enter
daa
jno
out
rcr
push
add
std
mov
out
cmp
out
das
shr
mov
jns
lock
xchg
out
scas
and
test
adc
outsl
pop
ret
icebp
jnp
push
dec
in
inc
popa
push
lcall
dec
inc
sbb
test
cmp
dec
rcrl
push
sarl
xchg
repnz
mov
cmp
dec
scas
cmp
repz
shlb
iret
adc
js
leave
loopne
dec
shlb
aas
mov
xorl
jg
pushf
xchg
sbb
aaa
xchg
ret
nop
add
add
add
jno
xchg
inc
into
imul
push
inc
adc
pop
test
mov
enter
sbb
jnp
jmp
mov
adcb
enter
lahf
push
inc
inc
fdiv
bound
jb
int
cmp
mov
or
sub
int3
mov
cwtl
jb
aam
mov
divl
mov
sub
ss
jge
dec
addr16
adc
arpl
xchg
loop
lcall
loopne
shlb
mov
es
mov
cmp
ja
int
dec
xchg
mov
jl
jbe
mov
int3
insb
movsb
cmp
in
imul
dec
insl
fadd
aad
and
out
jg
cmp
out
mov
imul
mov
add
es
mov
xchg
movsb
imul
adc
test
fsubs
push
adc
icebp
and
push
shll
in
sbb
xchg
mov
push
nop
mov
xor
repnz
inc
pop
aaa
inc
push
or
and
loop
add
jl
movsl
adc
lahf
jmp
lret
add
add
mov
loopne
jmp
mov
cmp
push
fmulp
mov
pop
xor
mov
mov
aad
push
stos
test
mov
popa
add
pusha
xchg
int
mov
fst
inc
addr16
push
mov
xchg
cmpl
lock
ror
popa
addl
sbb
add
mov
inc
inc
fs
mov
sbb
dec
stc
cwtl
cmp
xlat
sbb
push
imul
ror
and
mov
mov
data16
mov
popf
push
adc
lods
ja
popf
mov
adc
cs
outsb
ret
lcall
add
mov
cmp
fadd
pop
aaa
mov
push
and
stc
lods
mov
fwait
mov
das
xchg
imul
aad
add
jp
push
ljmp
inc
mov
mov
dec
and
mov
or
repz
mov
lret
nop
xor
jns
or
es
sub
push
sub
xor
jo
inc
mov
push
sub
cmp
loope
xor
inc
fmul
mov
sbb
int3
pop
mov
add
je
and
fisttpl
fidivl
pusha
lret
scas
cltd
or
pop
pushf
je
test
aaa
add
mov
jnp
dec
cmovno
push
jae
mov
sub
cmpsb
idivb
aad
pop
popa
jno
aaa
xchg
and
xchg
mov
das
incb
pop
lret
pushf
jno
ret
push
push
sbb
mov
add
pop
pop
jl
lea
mov
in
xchg
pop
add
add
add
repnz
scas
xchg
into
pop
lahf
mov
mulb
mov
push
sbb
test
ds
in
scas
xor
imul
dec
mov
xlat
loopne
sub
fildll
into
loop
popf
jp
jmp
ret
pop
push
lds
fsubp
sbb
lods
push
into
pop
adc
outsb
aas
cmp
pop
add
jnp
loope
lods
xor
fsubl
cltd
adc
add
xchg
repnz
mov
rorb
aas
jg
nop
insb
jbe
and
sbb
or
stos
sbbb
test
fwait
pusha
xlat
inc
cmp
pop
dec
les
scas
shll
out
xchg
xchg
push
jl
leave
push
push
sub
sub
jg
inc
loop
outsl
cmpsb
out
dec
mov
add
jge
cmp
or
lcall
lret
add
in
cmp
pop
xor
cmp
mov
repz
jmp
mov
mov
rcrb
daa
sub
jle
sub
fyl2xp1
jge
mov
push
repz
pop
sahf
test
and
add
stc
lret
xor
or
cli
inc
adc
jp
lahf
int3
pop
repnz
inc
dec
xor
or
or
rcll
loopne
sahf
fldcw
jl
dec
xchg
fimuls
xlat
in
sub
sbb
pop
mov
sarb
aam
shlb
add
adc
mov
inc
sbb
test
dec
loope
je
int3
jp
dec
pop
gs
lret
flds
shrl
cmpsl
in
test
or
shlb
fnstenv
jns
das
shl
shlb
xchg
cwtl
lcall
xchg
pop
xor
and
push
cmp
cwtl
into
pop
scas
scas
lods
lods
sub
pop
in
in
mov
mov
filds
pop
js
adc
mov
in
add
fmulp
xor
je
jp
xchg
jnp
xchg
add
int
ljmp
jmp
xor
fldl
mov
sbb
cli
lret
icebp
push
popf
sub
push
mov
pop
mov
pop
ljmpw
pop
mov
pop
mov
out
xchg
sahf
sti
out
xorb
pop
outsl
jne
cmp
add
shrd
movsl
xchg
cmp
addr16
jnp
adc
js
popa
mov
stos
loop
add
mov
xor
or
sbb
inc
nop
js
imul
jecxz
outsb
push
es
dec
push
pop
lret
sub
xchg
jecxz
das
iret
xor
sub
fdiv
adcl
adc
or
add
mov
add
add
sbb
outsb
repnz
mov
ljmp
sbb
pop
ss
movsl
cmp
and
sbb
outsb
inc
jne
lcall
xor
roll
lret
out
mov
mov
sbbb
xlat
mov
andb
push
or
or
in
gs
in
add
fwait
push
iret
test
repnz
mov
fsubrl
push
jb
add
sbb
jb
xchg
inc
add
out
xor
fiaddl
sub
mov
aam
mov
aaa
lock
jmp
sbb
inc
dec
lods
mov
repz
bound
mov
loope
mov
hlt
xlat
push
jae
lahf
mov
cld
mov
loope
mov
push
mov
je
repz
adc
cmc
stos
adc
dec
movsb
aad
mov
mov
add
add
iret
lret
cmp
xchg
lea
ljmp
daa
shrb
inc
aad
pushfw
rcrb
fdivrl
jb
clc
clc
ficoms
orl
stos
mov
xchg
jle
add
aam
sahf
add
xor
fisubl
mov
add
add
mov
out
arpl
mov
subl
mov
or
cmp
aaa
leave
popf
fdivl
in
lds
pop
test
loope
iret
or
mov
nop
in
fildll
and
jae
outsb
daa
cmpsl
xor
gs
mov
aam
pop
icebp
xor
ss
and
mov
fsubrl
iret
mov
add
jl
cli
add
orb
ret
jne
add
out
popa
inc
jecxz
cmp
rorb
mov
mov
jg
jp
repz
fwait
mov
mov
test
adc
cmp
jne
lds
test
xchg
push
mov
cmp
clc
mov
stos
jg
and
and
push
cmp
sbb
add
add
xchg
aaa
xchg
add
decl
push
dec
out
orb
cmpsl
push
mov
ret
sti
xchg
aad
adc
mov
pop
scas
mov
sbb
popf
in
sub
inc
in
stos
int3
decb
jle
fldenv
jne
das
xchg
ja
cs
leave
aad
gs
cmp
sbb
push
ljmp
mov
sbb
inc
xor
nop
jp
lret
sub
mov
xor
mov
loope
sarb
ret
in
xorl
jp
add
add
sahf
mov
out
dec
mov
popa
decb
mov
repnz
fdivr
ljmp
push
xchg
adc
dec
mov
in
dec
mov
xchg
xor
arpl
jle
test
mov
inc
push
imul
inc
sub
sbb
cmp
ljmp
jp
in
cltd
bnd
pop
push
xchg
push
popf
outsl
les
repz
push
jmp
and
mov
inc
movsb
aad
pop
jecxz
scas
lahf
jecxz
sub
lea
lods
ret
push
lock
cmp
and
mov
insl
loopne
mov
iret
cmp
adc
and
add
xlat
jecxz
ja
push
adc
imul
jg
rcrl
lock
mov
lret
inc
and
out
xchg
jge
pop
fists
xlat
add
inc
test
lea
adc
cmp
fwait
xchg
es
xchg
loopne
jl
mov
inc
mov
adc
push
or
pusha
insb
dec
pop
sub
je
jae
cmc
insl
inc
jp
loopne
fldt
push
lods
mov
dec
add
aas
std
push
pop
mov
xor
mov
pop
data16
mov
out
mov
add
dec
adc
ja
cmp
push
das
idivb
xchg
sub
aas
arpl
mov
mov
hlt
mov
in
cwtl
adc
cli
out
add
mov
xor
xchg
sti
inc
je
fmull
sbb
pop
insl
je
xchg
loope
lahf
xchg
jp
and
sarl
pop
cmp
add
inc
filds
add
add
movsb
jp
inc
icebp
xor
jp
xchg
inc
fdivl
push
pop
inc
and
or
outsb
or
mov
push
pop
and
sub
insl
fcomps
jno
xchg
dec
push
mov
mov
sub
fwait
xor
das
hlt
mov
mov
pop
or
ficompl
and
mov
iret
push
push
xor
aad
aad
sbb
sub
outsl
decb
popf
iret
inc
jmp
test
mov
mov
pop
add
pop
xor
frstor
dec
mov
fldt
imul
loope
lds
sub
stos
and
fdivp
push
pop
imul
jne
sbb
out
or
add
add
sbb
or
aaa
sar
adcb
adc
cs
je
ja
lock
out
sub
adc
mov
ficoms
push
sub
jb
repnz
mov
sub
and
mov
pop
or
lods
stos
shl
pop
pop
adc
insb
mov
fbstp
mov
jbe
add
mov
scas
jle
insl
add
add
dec
pop
add
insb
lods
xchg
mov
lods
std
sbb
dec
cvtdq2ps
mov
rcrb
jo
rclb
cmp
push
fdiv
imul
mov
or
inc
push
call
xchg
sbb
dec
sub
popf
lea
cli
jo
and
cli
scas
test
jno
imul
lret
xchg
add
add
int
scas
test
pop
push
add
push
mov
and
push
mov
mov
or
xlat
pop
lahf
test
cli
jecxz
xchg
sahf
cs
xchg
popa
push
sub
mov
push
loope
jge
push
lret
mov
std
mov
bound
xchg
pop
rclb
dec
je
inc
sub
sbb
cmpsl
jnp
mov
scas
aam
das
pop
mov
fcmove
mov
loop
mov
pusha
mov
rorl
and
sub
in
clc
loop
out
ja
or
fstpt
ds
inc
repz
push
mov
cs
movsb
fcmove
fdivrp
loope
inc
push
lods
into
or
mov
popf
cmpl
mov
lods
jae
nop
inc
pop
mov
imul
cmp
xchg
or
cs
ss
das
leave
sub
out
and
insb
add
dec
mov
lock
out
leave
add
lret
cmpsl
push
call
fadds
lods
out
fstpl
sub
in
push
sub
mov
mov
cmpsl
fidivl
test
adc
int3
dec
in
mov
push
fsubr
sbb
cli
pop
test
xchg
add
add
jae
sahf
out
repz
mov
and
pop
aas
sbb
movsb
or
add
cltd
sbb
ja
xchg
jecxz
cmc
mov
jge
jbe
ljmp
shrb
inc
jne
xchg
hlt
push
fstpl
repnz
inc
sub
push
sub
dec
sbb
or
test
pushl
pop
aad
pop
orb
xchg
rol
scas
mov
add
add
ljmp
cmc
dec
fmull
ret
cwtl
pmaddwd
rol
jo
jno
cwtl
andb
popa
andb
test
mov
decb
jmp
mov
cmp
inc
mov
inc
cmp
dec
sahf
or
sarb
xchg
aas
pop
sub
pop
arpl
lds
js
add
rol
and
icebp
jmp
xchg
lock
sbb
adc
dec
mov
dec
sub
pop
stos
push
adc
in
sbb
mov
sub
rolb
in
cmc
mov
pop
xor
mov
pop
and
test
xlat
push
lret
fdivl
pop
push
jno
add
add
pop
inc
push
leave
xor
fsts
popa
mov
test
sbbb
lea
repz
jecxz
jl
lds
mov
and
jae
cltd
inc
inc
mov
jecxz
xchg
jno
mov
ss
fs
loopne
cld
je
stos
xor
icebp
sbb
cs
in
and
cli
bound
lret
outsl
xor
jne
cmp
gs
jnp
adc
notl
fwait
inc
in
leave
jno
data16
int
shll
or
pop
lcall
or
jle
jo
jno
mov
fistl
adc
push
es
ret
loop
in
dec
into
pop
dec
add
bound
xor
inc
sub
sbb
push
xor
jp
xlat
and
add
jp
int
fwait
or
adc
jae
cld
int3
add
adc
pop
mov
into
fisubrl
dec
rolb
in
sub
arpl
xchg
mov
clc
fcomi
testl
sbb
gs
xchg
sub
ret
lcall
sub
sub
dec
pop
clc
test
int3
das
notl
xor
lahf
inc
outsl
stos
and
pop
loop
jo
into
cmpsb
ror
push
add
fs
inc
mov
aam
arpl
adc
jmp
push
mov
int3
scas
ret
out
test
lds
sub
subl
dec
push
add
cmc
loope
mov
mov
push
xchg
xor
repnz
fsubrl
out
ret
mov
inc
dec
mov
shl
lret
insb
js
lahf
mov
jecxz
iret
xor
mov
hlt
cmp
xadd
sbb
imul
daa
shll
xor
xor
xchg
inc
iret
out
aam
icebp
cmp
pop
insb
gs
mov
popa
jge
pop
ja
lcall
sarb
jb
in
lods
xchg
mov
insb
and
daa
add
xchg
cmp
mov
dec
loope
sarl
sbb
push
adc
test
inc
out
shrb
cmp
inc
scas
loopne
stos
mov
shr
es
popa
xchg
lods
ret
push
xor
scas
jns
les
mov
push
cmp
dec
nop
fnstenv
sub
xorl
and
jmp
pop
leave
fwait
cmpsb
shrb
mov
sub
jbe
pop
push
not
or
add
xchg
ret
int3
hlt
sti
popa
mov
pushf
dec
mov
ficoms
pop
push
jp
adc
and
incl
dec
rcll
mov
and
rol
outsb
push
in
scas
xor
add
fxch
or
cmp
push
into
gs
push
dec
lcall
push
fiadds
xor
icebp
je
xlat
xchg
inc
loope
adc
shlb
adc
dec
mov
arpl
loopne
adc
add
add
pop
dec
and
test
fldenv
jmp
adc
pop
loop
std
xor
in
addr16
js
push
rcll
icebp
imul
pop
nop
dec
sti
pusha
xlat
repz
adc
pop
fldt
adc
out
lret
shll
faddl
dec
shlb
jns
and
add
mov
cli
pop
adc
jp
and
pop
inc
or
scas
add
add
lret
xor
fdivl
jb
and
sbb
mov
sub
ss
scas
mov
adc
rorb
inc
xor
push
dec
mull
mov
cmpsl
test
xchg
jecxz
lock
xchg
pusha
push
test
insb
fcom
nop
popf
mov
scas
and
lods
ret
call
mov
or
lock
iret
mov
cmpsl
sub
lods
and
les
shll
mov
adc
pminub
inc
fdiv
pop
pop
fisttpll
xchg
mov
xchg
push
loop
sub
lock
add
push
pusha
shll
lock
loopne
cmp
jne
inc
addl
movsb
popf
cmp
cmpsb
add
xlat
arpl
js
flds
jp
xor
dec
push
loopne
push
scas
xchg
xor
jb
xchg
jp
aaa
mov
cmpsb
pop
xor
out
ss
addr16
xor
dec
push
ret
loop
xchg
push
pop
mov
xlat
sub
push
cmp
lret
imul
add
in
popa
lds
fimuls
iret
or
add
add
stos
cmpsb
push
mov
cmp
add
lock
pop
and
pop
cmp
lahf
jbe
cltd
pop
inc
fldl
popa
aaa
cs
aad
xchg
ret
bound
fisttpl
and
jmp
je
xlat
loop
icebp
je
mov
dec
test
add
fistl
lahf
xor
jecxz
rorb
add
sub
pop
lods
mov
shr
call
xchg
dec
imul
ret
rcll
and
test
mov
push
adc
lret
pop
sahf
popf
aam
popf
lcall
stc
insl
fisubrs
jl
lahf
sbb
insl
jl
dec
pop
jecxz
int
int
add
xchg
push
push
sub
es
enter
add
pop
jle
mov
jne
pop
adcl
push
filds
inc
push
fcmovu
mov
jle
repz
or
push
jae
je
sarl
pop
lods
int3
int
divb
mov
enter
out
and
jno
test
aaa
xchg
inc
test
fimull
jp
enter
dec
mov
ja
into
rol
lock
xor
fdivp
ret
test
arpl
add
mov
out
aaa
xchg
adc
pop
pusha
loopne
jae
push
cld
xchg
subb
xchg
notb
push
jp
xchg
jo
mov
xchg
push
sub
push
cmp
jmp
addr16
xchg
repnz
dec
and
inc
xlat
pop
or
cmc
daa
mov
shll
ljmp
push
ficomps
std
xchg
ljmp
add
sarl
rcrb
jns
sahf
mov
stos
jp
test
ljmp
sub
mov
cmpsb
cmp
jle
mov
in
andb
cmp
cmp
shlb
push
sub
jl
xorb
push
sub
inc
addr16
jmp
insb
mov
cmp
pop
ret
jge
je
inc
in
inc
fldcw
or
lds
push
imul
and
add
push
push
sahf
mov
inc
rcrb
outsb
icebp
ja
mov
xchg
mov
xchg
sbb
add
stos
call
xchg
or
xor
rolb
cmpsb
insb
in
mov
inc
fnsave
bound
or
cli
arpl
mov
incb
add
stos
adc
xor
and
push
add
mov
pop
inc
xchg
fpatan
xchg
mov
jne
adc
outsb
pop
xor
mov
mov
push
les
test
inc
call
ja
dec
xchg
addr16
push
lret
adc
mov
dec
mov
jl
jl
