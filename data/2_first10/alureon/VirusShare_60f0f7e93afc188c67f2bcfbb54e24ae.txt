jg
jp
lea
jmp
mov
and
mov
sub
add
cmp
mov
or
inc
inc
mov
in
add
imul
xor
imul
inc
rcrb
paddusb
push
pop
add
rcrl
repnz
cmp
lock
and
cvtdq2ps
stc
mov
jp
jo
inc
js
cli
imul
mov
and
scas
ljmp
fisubl
and
xor
and
pusha
daa
ljmp
push
jbe
mov
sub
push
lea
push
call
pop
mov
ret
lea
pop
and
cmp
pop
and
fiaddl
cmp
or
ret
mov
sbb
shr
mov
xor
jl
sub
jmp
outsb
dec
mov
outsb
inc
divb
nop
sub
out
and
sub
fcmovu
jns
insl
mov
loop
das
xor
jecxz
pop
add
jmp
in
dec
icebp
ficoml
scas
xchg
out
cli
mov
push
test
jmp
loopne
roll
jg
or
sub
js
es
outsb
cmp
or
mov
movsb
call
push
movsl
imul
nop
sbb
inc
jge
aad
pop
jo
or
add
cwtl
sub
push
adc
cwtl
push
xor
clc
test
mov
lods
cmp
dec
dec
and
mov
testb
lahf
imul
stos
push
enter
or
pop
mov
aaa
add
loope
or
dec
stc
enter
outsl
push
mov
mov
js
aam
sti
sti
jg
pop
jae
sbb
push
pop
mov
orps
sti
test
enter
cmpsl
xchg
xchg
pop
inc
jmp
mov
sti
cmp
mov
sti
insb
out
mov
repz
push
mov
mov
jmp
int3
mov
fdivp
mov
lcall
out
mov
inc
pop
sub
pop
inc
jg
adc
ret
push
dec
mov
xchg
stos
cmc
and
pop
or
enter
daa
je
out
and
sbb
popf
lcall
int3
nop
push
xor
mov
mov
pop
xchg
std
fists
cmp
mov
sbb
sbb
out
hlt
inc
imul
nop
lret
pop
push
pop
dec
lods
hlt
test
inc
push
ret
pop
adc
jo
in
popa
mov
mov
and
mov
sahf
leave
adc
lods
mov
js
lock
test
sub
repz
and
jne
xchg
sbb
movsb
push
mov
dec
test
mov
shrb
daa
cli
in
popa
inc
push
inc
mov
popa
lods
cwtl
sbb
mov
or
arpl
fnstsw
add
rorl
mov
enter
xor
daa
inc
pop
jb
int3
fistpl
mov
mov
mov
mov
divb
jecxz
adc
mov
and
pop
and
jns
cmp
xchg
lods
pushf
mov
mov
push
mov
loope
fnstcw
jle
repnz
rcll
mov
adc
and
mov
insb
push
sahf
inc
sti
fwait
aam
sub
fmull
fdivrl
daa
nop
jl
ror
daa
add
push
sbb
or
int3
sbb
outsl
in
sbb
mov
pushf
xchg
or
jle
mov
mov
iret
daa
add
scas
and
leave
call
fmul
mov
inc
imull
ret
jne
lret
push
add
pop
iret
or
pop
push
mov
inc
popa
cwtl
xchg
cmp
clc
lock
sub
addl
cli
ss
pop
adc
test
lock
inc
jmp
insl
data16
aas
out
addl
or
insl
add
lea
loop
insl
aad
sub
xchg
jbe
add
pop
sbbl
fbstp
lret
or
sbb
pushf
jns
aad
and
mov
push
or
push
and
jnp
shlb
pop
scas
mov
pop
lahf
mov
inc
rclb
push
jle
sarl
add
push
daa
sub
lds
fs
push
sar
and
add
mov
mov
lahf
shrb
js
push
add
sbb
inc
adc
push
adc
gs
fwait
mov
call
mov
das
aam
or
int3
cmp
jmp
mov
mov
or
cmpsb
jo
popa
int
and
cltd
sub
out
iret
mov
sbb
lret
packuswb
cmc
mov
pop
push
loope
adc
iret
imul
mov
mov
mov
mov
cmpsl
adc
cltd
sahf
and
scas
xchg
out
adc
clc
daa
xchg
je
mov
sub
jecxz
pop
cltd
orl
pop
xor
mov
inc
mov
jmp
insb
jl
add
or
iret
leave
push
addr16
cmp
cmp
std
mov
ret
sub
ds
xor
push
repz
stc
loop
addr16
xor
movsl
push
maskmovq
mull
mov
jne
adc
mov
xchg
jl
pop
in
mov
mov
inc
push
test
and
loopne
dec
fstpl
clc
cmpsl
xor
mov
jmp
ds
jp
loopne
mov
fistpl
and
jmp
out
push
mov
lahf
dec
push
and
loopne
imul
mov
rorl
pusha
stos
push
lret
testl
jno
cmp
inc
fwait
mov
jp
inc
cmpsl
mov
sti
jmp
sbb
nop
xchg
jmp
xchg
inc
inc
sub
dec
mov
ljmp
add
test
pushf
aam
cltd
mov
push
adc
in
mov
repz
pusha
and
jmp
inc
cmpsb
les
enter
pop
jp
cld
cld
push
pop
pop
jmp
fsts
or
shlb
cmp
xchg
sti
jmp
and
xchg
mov
fsubrl
or
ror
jmp
sahf
jo
jp
enter
add
pop
lcall
sti
testl
in
sub
push
out
std
dec
std
lds
test
add
lret
mov
popa
jo
jle
add
ss
lods
popa
lahf
aaa
mov
es
xchg
idivl
push
scas
cmp
fdivrs
mov
jno
das
aas
mov
jns
std
inc
aad
add
dec
test
dec
push
out
in
xor
inc
aad
movsl
dec
cmp
xorb
jmp
shl
sub
fiaddl
and
in
lods
or
jno
test
and
xchg
push
mov
pop
shrb
flds
sub
add
xchg
push
enter
insl
fadd
cli
rolb
call
inc
adc
mov
inc
and
jmp
js
cld
mov
mov
and
mov
imul
sbb
adc
dec
shr
imull
cmp
inc
cmp
xor
mov
and
add
gs
pop
add
push
incl
adc
lods
mov
jmp
daa
aad
fwait
xor
or
or
cmpsb
in
stos
ljmp
adc
mov
jae
cmp
push
pop
mov
add
adc
xor
lods
mov
pushf
mov
mov
and
hlt
test
sub
lahf
cmp
jmp
out
mov
std
mov
test
mov
mov
push
sbb
sahf
push
jl
imul
add
jmp
lcall
aaa
inc
and
nop
aas
add
cmp
add
sub
iret
sbb
ss
dec
sub
sbb
push
shll
xchg
xchg
mov
and
mov
xchg
push
lahf
test
shl
pop
lahf
rolb
inc
add
mov
pop
movsl
push
es
xor
loopne
cmp
push
cmpsb
push
xchg
jmp
imul
imul
or
add
sbb
lret
dec
fsub
fadds
sahf
call
movsl
xchg
push
jmp
inc
ds
andb
test
adc
jp
aaa
push
cmp
in
sub
jle
mov
mov
cmp
out
or
subb
insb
out
push
add
pop
lds
mov
xchg
nop
insb
pcmpeqw
into
xchg
jmp
aaa
scas
jecxz
adc
insb
scas
jo
inc
adc
insl
loopne
psrad
adc
pop
fcompl
jmp
xchg
mull
pop
push
pop
add
push
push
lret
jne
hlt
bound
dec
ret
or
mov
xor
jmp
jg
scas
dec
mov
aaa
int
adc
mov
adc
dec
add
cmp
loop
xor
xchg
adc
hlt
movsl
fisubl
cmp
push
or
and
push
in
fildl
and
faddp
adc
mov
cs
daa
cmp
and
and
pop
sub
out
add
adc
sbb
rcll
mov
mov
lods
cli
pop
ret
fisttpll
push
add
inc
fisttpl
jb
es
pop
mov
dec
mov
sbb
push
arpl
push
pop
jg
cmp
movsb
xchg
jbe
xor
jl
imul
mov
dec
and
mov
mov
jp
mov
push
jmp
jle
pop
test
push
cmc
mov
jmp
mov
dec
mov
jmp
sti
xchg
das
add
add
jmp
outsl
aas
hlt
push
in
cwtl
imul
push
iret
pop
pop
in
xchg
loopne
or
push
push
dec
jmp
mov
hlt
iret
jg
lds
mov
mov
rcrl
add
jmp
sarb
fwait
leave
push
sub
sub
lret
mov
adc
pop
xchg
inc
cmp
loop
mov
dec
and
add
mov
lret
or
aaa
xor
rclb
mov
movsb
add
lea
mov
ja
or
xor
jmp
and
popf
in
jb
jp
into
jmp
mov
insb
in
iret
xlat
adc
add
cld
jmp
rorb
lds
test
pop
sub
add
roll
imul
in
jg
inc
jmp
repz
mov
out
mov
add
rorb
imul
cwtl
sub
repnz
ljmp
lcall
and
loop
pop
add
test
je
stos
sub
int
adc
add
cld
push
scas
adc
mov
clc
jmp
cwtl
js
dec
add
lock
inc
loope
scas
faddl
jp
scas
arpl
or
jmp
in
and
pop
cmp
mov
jmp
inc
push
addr16
lea
jmp
mov
dec
xor
sbb
push
xchg
lea
loop
push
mov
shrl
jne
aad
xor
and
hlt
adc
test
or
dec
push
std
push
jecxz
fistpll
enter
inc
stos
lds
jns
inc
insb
xchg
outsb
repnz
xchg
andl
and
cld
pop
and
fidivl
adc
pop
loopne
dec
test
pop
pop
popf
leave
rcl
int3
mov
aaa
aad
ljmp
lods
xor
arpl
cmpsl
std
decl
xchg
and
jmp
mov
lret
sbb
mov
scas
loopne
lret
mov
add
mov
ret
cmp
pop
jmp
cmpsl
div
push
loopne
or
sbb
data16
loopne
daa
mov
pushf
or
or
jmp
add
sti
adc
loop
insl
mov
pusha
pop
xor
out
sar
std
lret
cli
data16
repz
sti
push
adc
xchg
ljmp
dec
test
mov
pusha
pop
out
cltd
pop
and
xchg
sarb
arpl
movsb
enter
cmp
and
cli
sub
addr16
inc
mov
pop
sbb
mov
mov
clc
mov
loope
mov
mov
adc
xor
inc
add
jmp
jne
jg
sub
mov
stos
fldl
xor
jmp
lods
add
and
mov
push
xchg
or
dec
dec
movsb
xchg
mov
int3
aas
xlat
mov
xchg
xchg
movsl
adc
jl
lahf
sti
imul
fnstcw
int
sub
mov
push
pop
js
mov
add
out
mov
mov
gs
movsl
int
pop
pop
aaa
unpcklps
jns
or
lret
push
aad
ja
repnz
leave
mov
dec
mov
jo
xchg
int3
stos
xor
pop
xor
out
icebp
dec
adc
sub
aam
sbb
push
mov
xchg
push
sub
out
jecxz
mov
xchg
insl
cli
in
cmp
and
test
inc
xor
mov
clc
movsb
push
test
movsb
or
pop
mov
push
lret
insb
jmp
sahf
fisubrs
xchg
or
dec
sbb
stos
lock
aaa
fidivl
cmc
mov
pop
jmp
xor
adcl
iret
mov
orb
push
out
sub
daa
adc
fidivl
shlb
inc
iret
arpl
fnstenv
push
xchg
or
cs
inc
ss
pop
push
inc
fwait
test
dec
or
mov
mov
push
sbb
lds
mov
xchg
dec
jmp
push
xor
js
sarl
hlt
mov
into
xchg
xor
cmp
fcoms
fs
push
add
mov
jae
data16
inc
pop
or
xlat
sub
loopne
and
nop
add
add
jb
js
scas
imul
adc
push
loopne
std
pop
push
mov
sub
jmp
pop
mov
gs
in
mov
xlat
mov
shlb
fwait
sahf
jae
jg
sbb
ljmp
push
inc
cwtl
into
cmp
inc
push
push
mov
pop
mov
xchg
add
out
and
push
pop
cmpsl
pop
je
lahf
sbb
loopne
sbb
fcoms
sbb
out
cmp
add
divl
add
loope
sub
inc
or
in
rolb
pop
stos
xor
jb,pn
push
push
lods
rclb
push
lcall
cmp
xchg
and
xchg
push
xlat
add
or
mov
psubsw
xchg
add
jmp
rcrl
jnp
out
jle
xor
push
popa
or
push
and
jo
push
mov
pop
cmp
mov
js
sbb
lret
scas
movzwl
jmp
ljmp
mov
jne
jmp
lret
or
movsb
lahf
scas
dec
mov
and
fmull
jno
pop
xchg
adc
imul
in
jle
orb
mov
mov
dec
lods
clc
sub
outsl
xor
mov
mov
push
or
add
jecxz
fdivrs
cltd
push
xchg
js
into
mov
or
fucomi
sarb
sbb
or
data16
les
inc
jmp
sti
movsl
add
in
loop
inc
jae
popf
mov
mov
outsb
cmp
add
add
inc
ret
jecxz
push
faddl
mov
fnstsw
jecxz
nop
inc
data16
sbb
or
clc
ds
test
or
pop
jecxz
cltd
daa
lock
or
mov
adc
ljmp
add
nop
mov
jb
pop
add
push
outsl
out
in
into
stc
out
cwtl
scas
movsb
inc
movsl
loopne
rcrb
jnp
addl
sub
adcb
adc
xor
sbb
fdivrl
aam
cmc
cmp
sbb
adc
push
jle
mov
int
or
pop
push
jo
int3
sub
jne
pxor
ljmp
cmp
add
jmp
mov
pop
adc
clc
movb
mov
scas
mov
cmp
popf
ja
lock
ret
cmp
adc
daa
or
daa
dec
mov
dec
pop
loop
jne
cmc
imul
stc
ficompl
dec
out
pop
stc
rcll
push
inc
lods
mov
inc
mov
mov
mov
push
sub
in
xchg
sar
pop
js
jg
sub
mov
movsl
xchg
xchg
popa
mov
xor
xorl
gs
mov
or
or
fstp
out
cmp
mov
jmp
adc
inc
mov
pop
cmp
cltd
add
incl
into
or
cmp
cmp
ljmp
subl
dec
loopne
popa
push
push
btr
mov
sbb
addr16
and
test
and
imul
sbbb
decl
xor
jmp
sbb
call
push
push
pop
popa
jmp
sbb
scas
mov
roll
cmp
xchg
mov
sbb
xor
add
cmpsl
insl
popf
xchg
pop
mov
sbb
jmp
add
dec
repnz
enter
mov
xchg
mov
jne
mov
sti
movl
pop
sar
or
xchg
cmpb
sbb
push
inc
lahf
mov
sub
jmp
sar
fiadds
jae
cmc
mov
inc
hlt
stos
clc
repnz
xchg
mov
push
mov
icebp
jns
and
push
xchg
sbb
xchg
inc
xchg
pop
fs
mov
jbe
push
dec
dec
xchg
xchg
enter
pop
mov
jp
adc
ret
scas
repnz
cli
inc
popa
lods
stc
in
add
je
mov
fsts
stos
add
enter
inc
iret
clc
jae
inc
repz
aaa
adc
je
jmp
sub
into
push
cmpsb
or
push
jne
inc
jae
push
pop
xchg
cmp
cwtl
mov
es
movsb
test
ja
cwtl
lcall
test
jmp
or
fst
sti
xchg
int
ljmp
jmp
out
icebp
jmp
xchg
popf
mov
mov
jle
push
pop
dec
xchg
data16
decl
movsb
xchg
int
or
push
in
push
aaa
xchg
mov
mov
inc
aam
les
iret
and
mov
ja
loopne
inc
das
dec
lret
pop
addb
push
mov
inc
xor
insl
cmp
pushf
arpl
mov
test
out
and
call
int3
adc
ror
push
adc
jmp
or
jmp
loopne
pop
dec
test
mov
leave
imul
push
arpl
cmp
jo
ret
je
cmp
incb
pop
adc
sub
or
aas
push
lock
pushf
push
repz
dec
not
mov
iret
xor
movsl
inc
jmp
cmp
imul
imul
add
and
rcrb
sub
push
shr
xor
imul
mov
inc
jmp
stos
mov
repnz
xchg
jne
mov
sbb
xor
and
xchg
inc
in
or
or
lea
jmp
and
cli
fisubrl
clc
in
dec
cmp
dec
and
shlb
test
mov
mov
push
adc
mov
and
pusha
jns
pop
jmp
sti
add
jns
or
jg
stos
or
add
mov
push
mov
cmpl
mov
popa
sub
std
rorb
xchg
and
es
push
xor
adc
jmp
jb
sub
outsb
inc
lea
jmp
aad
idivl
stc
mov
mov
outsl
repnz
dec
xor
das
lcall
pop
idiv
fcmove
adc
std
and
add
outsl
stos
mov
out
inc
aas
jl
stos
xchg
sar
inc
push
aad
cmp
mov
out
or
adc
pop
pop
cld
aad
sbbb
leave
mov
cmp
rolb
rcll
add
cld
sahf
pop
mov
lcall
bound
push
sub
insl
mov
cmpsb
fidivrs
dec
inc
repz
or
inc
fldenv
pop
stc
lock
inc
dec
cs
mov
mov
fcom
add
insb
outsl
xchg
mov
add
and
test
dec
xchg
nop
lret
jbe
dec
shll
dec
xor
hlt
fisubs
lret
push
add
push
repz
xor
add
loopne
inc
add
sarb
inc
xor
popa
jae
adc
jg
or
xchg
andb
push
imul
inc
insb
mov
mov
and
pcmpeqb
push
inc
dec
push
data16
js
bound
std
ljmp
push
inc
addr16
jo
insb
pop
and
out
std
pop
jle
cmc
stc
pop
outsl
xchg
lea
sahf
gs
sub
mov
lret
or
aad
aad
inc
pop
sub
dec
xchg
jmp
add
push
pop
and
dec
mov
lret
les
icebp
mov
jmp
jae
jl
mov
cmpb
mov
sub
cmp
push
dec
adc
add
imul
stc
cmp
shl
cmp
loop
or
movsl
mov
lods
jecxz
fwait
push
lea
jmp
xchg
jnp
cs
dec
ss
les
out
mov
int3
scas
aam
popa
adc
cli
ja
jbe
std
mov
dec
xchg
mov
ja
cs
mov
or
arpl
adc
push
jno
jge
in
pop
cmpsb
sbbb
pop
arpl
inc
sti
xor
xor
stos
jg
into
lcall
into
jmp
outsl
jns
xor
jmp
ljmp
popa
roll
cwtl
aaa
pop
loopne
add
jmp
sub
shl
jmp
dec
sbb
sbb
cmp
mov
pop
insb
repnz
gs
xchg
ss
jno
add
inc
ret
lods
fldl
jae
cmpsl
xchg
movsb
test
rcll
lret
add
or
and
mov
ljmp
or
xor
rclb
notl
mov
mov
cmp
pop
or
mov
std
icebp
lea
jp
lds
cld
cwtl
andb
stos
mov
loope
cmpsb
push
xor
fdivrl
inc
or
sub
icebp
out
aaa
mov
hlt
ljmp
iret
fldt
fistpl
mov
mov
int
stc
jge
or
mov
and
jnp
xchg
testb
adc
gs
mov
in
ja
mov
lcall
fucompp
cmpsb
pop
add
xchg
leave
arpl
cmp
call
or
jmp
test
ja
mov
int3
or
xor
enter
jae
movsl
or
in
out
xchg
sahf
fs
sub
inc
lcall
popa
sbb
mov
mov
fisttpll
test
stos
aaa
roll
xor
clc
outsb
cli
jmp
pop
pop
jge
mov
xor
sbb
sahf
mull
loopne
adc
mov
lea
jmp
test
mov
das
mov
mov
mov
and
mov
gs
mov
lock
idivb
repnz
adc
mov
sti
mov
add
into
dec
roll
pop
in
cmp
sahf
sbb
sub
xchg
add
test
insb
mov
mov
xor
or
xchg
jmp
inc
lret
cmpsb
sarl
stos
xor
sbb
mov
cmpl
push
jb
add
sbb
cmp
inc
imul
jge,pt
lock
or
xlat
jmp
adc
mov
sub
gs
pop
ljmp
sahf
add
shlb
jmp
ss
mov
push
and
les
into
mov
mov
in
sub
int3
icebp
ja
add
jae
lahf
sti
icebp
out
fwait
das
or
jmp
pushf
jbe
fiadds
xchg
or
test
clc
je
loop
shll
stos
inc
ja
pop
jmp
dec
jmp
and
inc
andl
sbb
inc
mov
jae
gs
xchg
nop
xor
cmpsb
enter
fimuls
xor
mov
out
add
ljmp
fnstcw
jae
dec
testb
aas
xchg
xor
adc
push
xchg
pushf
aam
cmpsl
sbb
push
in
cltd
mov
aas
jno
or
mov
inc
add
test
sbb
jno
stc
sbb
gs
jmp
fbld
out
in
sbb
stos
sub
dec
or
jmp
jbe
adc
sub
int3
jae
cltd
jns
push
xor
and
jb
outsb
pop
jmp
cli
arpl
push
xchg
inc
pop
mov
or
subb
mov
loopne
subb
ret
jb
jl
stc
dec
xchg
jne
lods
xor
or
or
mov
pop
inc
push
ret
mov
jmp
push
jge
push
scas
iret
test
loopne
inc
jb
and
dec
push
jmp
call
or
sbb
push
mov
push
push
out
mov
push
inc
pop
popf
icebp
mov
repz
lret
fiadds
dec
scas
push
cli
mov
std
nop
adc
outsb
ret
in
and
jne
mov
hlt
lcall
js
xlat
das
mov
lock
rclb
fcmovu
mov
mov
jmp
jb
insl
les
add
lds
or
push
fcmovne
stc
repnz
xor
divb
arpl
imul
mov
jmp
push
adc
xor
add
lds
mov
push
shl
jb
pop
xchg
dec
cwtl
inc
fsubr
sbb
add
cmp
push
repnz
ds
adc
jno
xlat
repz
push
xor
sub
mov
outsb
lret
jge
jmp
pop
and
push
gs
inc
dec
xor
outsl
rolb
je
cmp
mov
fwait
push
das
bndstx
sub
in
in
fs
sub
lock
stos
fwait
out
and
jmp
ss
fdivr
xchg
lret
lds
jnp
lods
int3
jb
adcb
jno
add
jmp
jns
outsl
mov
push
fldenv
or
into
es
leave
inc
fiadds
mov
jmp
and
jns
adc
or
dec
insb
data16
mov
xchg
mov
xlat
adc
mov
sbb
aam
push
jmp
je
sbb
sbb
and
popw
sbb
stc
gs
jg,pn
mov
sub
adc
sub
jle
stc
jmp
sbb
fimuls
lea
jmp
or
sub
mov
fcmovne
in
aaa
subl
jo
test
test
insl
lock
shl
ficomps
sbb
cld
clc
pop
out
fstps
inc
mov
and
or
addb
scas
fildll
fsubr
pushl
testb
jle
pop
pop
push
sbb
and
jae
negl
mov
shll
mov
jge
mov
push
inc
pop
test
jbe
add
pop
xor
cltd
decb
jp
stos
add
popf
and
jns
test
mov
outsb
xchg
pop
and
or
test
adc
data16
test
push
dec
loope
orl
xchg
jmp
dec
cmp
mov
enter
mov
enter
dec
mov
mov
sbb
imul
xchg
fdivr
lds
rcrl
adc
jae
cmc
cli
lods
fnstcw
imul
repz
andb
mov
out
xor
ficoms
pop
outsb
xchg
repnz
mov
es
jp
pop
xor
add
jp
add
loopne
outsb
sub
scas
or
pop
cmpsl
and
cmpsl
dec
dec
add
pop
aas
incb
es
pop
aad
lods
jno
and
sarl
out
bound
imulb
stos
pop
sbb
stos
sti
mov
scas
inc
sub
sub
hlt
mov
add
xor
rcll
mov
mov
push
lahf
enter
push
add
cmpsl
and
test
or
jo
or
cmpsl
xlat
xor
or
mov
add
sbb
push
das
mov
je
mov
lods
vandps
xchg
fmuls
pop
cmc
lds
hlt
jle
mov
in
loop
sub
jmp
sbb
outsl
clc
adc
add
cmp
insb
sbb
nop
and
fs
andb
add
xor
lods
scas
xchg
aad
push
push
fisubrs
or
add
icebp
lcallw
jmp
mov
repz
xor
xchg
in
sahf
inc
lods
ret
pop
xchg
cmp
inc
cmpb
pusha
sbbl
dec
jno
mov
out
sbb
addb
jns
ljmp
stos
aaa
pop
or
push
dec
mov
pop
stc
xchg
xlat
push
loop
or
jmp
inc
push
mov
inc
sbb
add
jno
sbbb
pop
scas
xor
or
addr16
cmp
or
gs
jmp
ljmp
fdivl
push
shl
mov
mov
vmovapd
call
or
scas
stos
je
repz
pop
push
xor
fs
clc
and
mov
rclb
inc
arpl
in
cmpsb
in
test
int
mov
in
fs
cwtl
in
dec
add
and
mov
mov
add
bound
outsl
sahf
call
bound
jnp
lds
gs
xchg
xor
mov
daa
scas
aas
sahf
test
pusha
xor
xor
mov
add
mov
and
mov
inc
dec
je
mov
imul
cmp
jne
mov
imul
cmp
jne
mov
imul
test
je
add
sub
sub
add
popa
ret
repz
imul
addb
add
pop
dec
ret
dec
jmp
leave
dec
dec
jg
adc
mul
xchg
cmp
ja
inc
mov
psubsw
call
inc
mov
jne
jmp
sub
dec
xor
lret
enter
xor
jb
les
ret
in
mov
sbb
jmp
push
sub
rorb
mov
lret
addr16
inc
mov
cltd
pop
in
or
mov
sbb
mov
dec
pop
jmp
repz
lcall
popf
sbb
sti
pop
pop
xor
mov
dec
jns
arpl
js
imul
cmc
sbb
xor
jle
xor
cmc
jo
mov
or
rolb
in
ss
mov
std
jmp
and
xor
cmp
cmpl
mov
sti
mov
adc
out
pusha
aad
clc
xchg
and
jne
scas
pop
ror
sahf
inc
pop
pop
push
xchg
lret
je
es
fnstsw
inc
sub
jmp
xor
xor
xchg
jo
in
and
rorb
inc
sti
inc
xchg
fcmove
test
test
dec
jp
aam
mov
cmp
stos
call
dec
mov
sbb
lea
jp
jl
insb
push
jmp
or
js
scas
das
and
xlat
cli
jmp
mov
cmp
xorl
in
ret
jl
in
rcrb
sub
cltd
mov
roll
pop
outsl
sbb
les
and
test
pop
pop
dec
jmp
sbb
pop
adc
cmp
stos
jo
imul
mov
aaa
stos
push
jmp
jne
jmp
ret
outsl
mov
xchg
cmp
mov
rorl
hlt
lods
sbb
icebp
ror
cmpb
inc
out
mov
push
dec
xor
lock
out
dec
cmp
sub
stos
data16
mov
testl
insb
inc
into
scas
fidivrl
xor
imul
fisttps
jg
mov
adcl
jmp
add
add
popl
and
in
nop
rcrl
insb
mov
xchg
xchg
pusha
mov
popf
mov
jecxz
mov
push
mov
ja
jbe
sub
mov
push
lods
or
dec
movsb
imul
jb
mov
gs
mov
pop
xchg
ss
fwait
mov
push
lods
loop
push
jge
add
jmp
mov
xor
nop
mov
push
cmpsl
dec
outsb
cld
sbb
jb
test
or
popf
jmp
in
sub
test
adc
loopne
out
outsb
add
inc
loopne
dec
mov
add
cmpsb
decl
adc
outsl
bound
xchg
into
cmp
mov
mov
inc
cmp
jno
or
fcoml
xor
into
mov
xlat
andl
cld
mov
add
mov
and
jmp
pop
test
cwtl
add
jmp
movsl
cmp
inc
iret
stc
rol
orb
or
inc
add
xchg
jne
lock
mov
push
jge
inc
jle
sub
das
enter
js
or
in
inc
xchg
filds
outsl
cmpsb
ja
cmp
sub
add
movsl
stos
xchg
fsubrl
cli
mov
out
add
xchg
pop
or
out
stos
fidivl
adc
out
pop
mov
cmp
mov
pop
in
xchg
cmp
sbbl
mov
scas
ret
add
das
and
in
cld
outsl
push
cld
jae
push
test
dec
outsl
fldenv
xor
xchg
xlat
lea
mov
nop
jnp
loope
and
jmp
sub
mov
xchg
push
xchg
cmp
xor
mov
in
inc
inc
jb
in
stc
and
mov
and
sub
out
imul
sub
fidivl
jle
and
pop
and
push
roll
sarb
sub
out
dec
xor
imul
fs
pop
adc
setae
xchg
adc
gs
pop
add
mov
insl
mov
mov
imulb
mov
mov
sub
jmp
lods
xchg
sbb
mov
ljmp
incl
and
dec
jmp
or
push
lret
idiv
push
test
mov
shlb
sbb
out
jle
sub
push
and
incb
ljmp
sbb
icebp
cmp
mov
mov
jmp
es
flds
sub
into
rcrl
idiv
cmp
mov
add
adc
mov
aad
jle
es
xorb
inc
subl
aam
lds
dec
inc
ljmp
ficompl
les
add
xchg
pop
movsb
adc
cltd
adc
faddl
je
jb
xor
inc
adc
ret
cmp
outsl
pop
lds
ret
or
jmp
jo
stos
mov
addr16
dec
jle
pop
fstps
aaa
mov
dec
jg
xchg
fbld
inc
push
mov
call
test
rcll
sub
mov
in
xor
test
jmp
lds
bound
push
ds
sbb
fiadds
test
or
loop
fucomi
in
daa
add
test
bound
push
pop
dec
enter
repz
push
lds
addl
add
popf
push
leave
loop
sub
push
cmc
sti
or
pop
fiaddl
pop
in
ljmp
je
js
int3
jns
movsl
cmpsb
in
mov
xchg
sub
jmp
inc
icebp
add
xlat
add
fcoml
les
dec
aad
ds
arpl
sub
mov
dec
fisttps
scas
arpl
stos
sub
dec
jnp
ret
fldenv
push
pushf
mov
iret
shl
lock
jmp
and
ss
push
lods
dec
or
ja
ds
in
mov
pushf
enter
xchg
dec
aas
cmp
addr16
mov
aaa
mov
lock
mov
outsl
insb
stc
push
scas
mov
push
cli
nop
ficompl
pop
cmpsl
addr16
jne
repnz
ja
imul
in
mov
bswap
jmp
stos
mov
dec
ss
jo
nop
and
lcall
pop
jns
inc
lea
sbb
pop
xor
and
mov
jnp
sub
push
ret
cmpsb
aaa
movsb
in
out
inc
sbb
orl
mov
xchg
cmp
ficoms
adc
leave
add
dec
mov
roll
movsl
add
sub
xor
jmp
in
jb
hlt
mov
loop
inc
fimull
lret
jecxz
jmp
xchg
mov
mov
xor
jmp
or
dec
jo
push
repz
or
dec
lods
sbb
stos
sub
rolb
sbb
or
inc
stos
lcall
mov
and
xlat
jmp
mov
arpl
pop
fmull
call
js
mov
jne
subb
xor
out
rcrl
imul
jp
addr16
pop
mov
in
cmc
std
inc
iret
xlat
push
cmp
repz
out
popf
repnz
pop
sub
outsb
ror
out
xlat
cmp
dec
sbb
lcall
add
int
cli
outsb
lea
jmp
into
int
jnp
xchg
repz
int
or
testl
enter
adc
hlt
pop
or
ss
mov
jecxz
inc
add
icebp
jbe
mov
dec
jno
frstor
or
cmp
cltd
dec
sub
mov
mov
ss
into
jbe
pop
cmp
sbb
lret
fdivs
stos
dec
inc
jns
lret
mov
icebp
loope
sti
pop
dec
add
add
aaa
daa
xor
out
sbb
in
or
jecxz,pn
inc
sbb
ret
cmp
pop
mov
cmp
iret
jmp
push
adc
pusha
inc
popa
inc
das
dec
push
inc
mov
fdivr
sbb
fwait
cmpb
repnz
push
sarl
push
dec
je
xchg
das
pop
push
sbb
mov
insb
or
jecxz
les
pop
or
adc
dec
cltd
cld
insl
rcrb
std
imul
shrl
ss
iret
repnz
sbb
in
add
inc
jl
inc
mov
mov
sti
or
jmp
lods
push
sub
jmp
popa
repz
popl
xor
loop
mov
dec
fdivl
mov
add
dec
sbb
pop
in
fildll
cmp
jl
sbb
sub
popl
mov
and
pop
and
and
mov
stc
mov
out
mov
xlat
inc
call
int
f2xm1
in
mov
jmp
jl
and
cs
mov
mov
pusha
out
mov
and
add
fcos
decl
pop
ds
stos
das
add
mov
and
pop
sbb
mov
add
inc
stos
repz
add
inc
cmp
jp
fs
aam
iret
jmp
push
outsb
inc
fld
jecxz
mov
mov
bswap
jmp
push
push
outsl
pushf
xor
mov
xchg
cmpsb
adc
or
scas
shlb
cli
out
aad
cmpsb
push
sub
push
sub
adc
loopw
xchg
xchg
popa
add
push
adcl
xchg
xor
cmpsl
xor
fidivrl
xchg
push
or
xchg
aam
out
or
cwtl
call
push
ficompl
add
adc
add
iret
in
jmp
push
fnstsw
mov
push
push
repz
into
loop
or
je
sarb
inc
scas
inc
xor
lcall
lret
add
add
add
test
mov
inc
fstpl
push
sub
jle
jo
jne
xor
loop
hlt
pop
xchg
popa
inc
pop
mov
mov
mov
fsubrp
mov
in
test
cmp
lock
xlat
xchg
sub
push
out
xor
sbb
out
idiv
adc
pop
push
jp
cli
icebp
pusha
popf
and
enter
jb
sub
xchg
in
fs
ss
mov
pusha
or
sbb
xchg
mov
clc
pop
cmc
test
inc
clc
add
jno
sbb
data16
cs
gs
shlb
cmp
mov
ret
jecxz
jmp
fisubl
or
add
andl
or
ret
mov
inc
inc
push
mov
push
cmpsb
push
dec
mov
rcrl
loope
mov
cwtl
xor
sub
arpl
loopne
lods
mov
fistps
xchg
and
jmp
sub
inc
ljmp
mov
pop
adc
stos
and
bound
pop
cwtl
jg
inc
cmp
mov
and
jmp
pop
js
je
stos
fnstcw
jecxz
outsb
stos
add
es
and
mov
dec
dec
out
jno
jmp
clc
jmp
push
or
xchg
cmp
cmp
add
scas
push
mov
jmp
out
push
adc
dec
mov
cmp
js
in
in
out
mov
pop
mov
decb
fsubrl
lods
jle
or
mov
sahf
test
in
std
dec
and
fildll
sbb
and
into
aam
pop
test
in
xor
xor
jecxz
call
lock
popa
stos
lret
push
les
adc
push
mov
gs
mov
inc
daa
rol
mov
jmp
xchg
in
mov
and
ret
xchg
sahf
cmpsb
orb
xor
mov
jmp
out
xchg
or
mov
in
int3
mov
and
mulb
lock
sub
rol
mov
xor
aas
inc
or
adc
sub
fnstcw
mov
out
dec
mov
in
rcll
insl
idivl
jle
add
jmp
shl
imul
popf
loop
test
fdivp
mov
shll
add
add
add
arpl
lcall
pop
mov
xchg
cwtl
daa
lahf
fcomip
lcall
cmp
adc
in
pop
insb
xor
or
pop
adc
not
and
pusha
mov
inc
pop
xor
mov
cmpb
nop
and
add
pop
ret
je
xor
test
jge
fildll
pop
sbb
push
sbb
test
cwtl
cvtps2pi
lcall
push
sbb
mov
sub
mov
out
jno
nop
push
jne
xor
pusha
inc
jmp
pop
imul
or
sti
xchg
repz
imul
hlt
fiadds
xchg
push
ret
cmp
adc
popf
std
xor
hlt
dec
jmp
movsb
mull
jge
xchg
in
mov
imul
or
inc
fdivrs
ja
or
mov
sbb
jp
adc
mov
imul
fcoml
jle
mov
pop
dec
mov
popl
rorb
pop
je
jns
cs
jmp
lcall
and
jmp
dec
or
push
inc
rcrb
and
jle
add
test
dec
lahf
jecxz
lret
mov
lret
sarl
iret
cs
iret
lock
je
out
ret
fists
xchg
testl
lret
popa
popf
lea
jge
adc
and
mov
in
jae
jecxz
mov
sbb
and
adc
dec
ret
mov
cmpl
mov
mov
add
incl
test
cmpsl
xor
fucompp
mov
ljmp
jp
in
pop
les
xor
jmp
mov
and
je
dec
xor
icebp
mov
sub
aaa
push
push
pop
cmpl
das
add
jmp
and
mov
loopne
mov
cmp
cwtl
mov
inc
mov
jbe
mov
cmp
mov
cmc
cld
push
adc
pushf
jnp
fwait
stos
push
cwtl
adc
mov
or
shlb
outsb
fld
sub
orl
add
mov
fs
jp
ret
repz
ss
shl
inc
lret
push
and
mov
fmuls
pop
lret
rcrl
cmc
repnz
pop
sub
xor
lock
pushl
mov
das
cmp
negb
add
xor
add
adc
fsubs
out
push
lcall
jno
int3
das
stc
mov
das
in
and
sbb
test
xchg
xorl
fadds
inc
je
das
scas
xchg
mov
out
cmpsb
pop
xor
enter
dec
in
out
dec
adc
dec
adc
test
or
xchg
outsl
or
fdivrp
push
xchg
dec
imul
bound
sub
ja
cmpsb
lret
out
jmp
push
jl
and
inc
xchg
outsb
popf
push
pop
jmp
out
lds
lock
push
repz
jg
or
xor
mov
sub
jbe
jmp
stc
sub
cli
and
scas
sub
mov
stos
testb
stc
and
add
xor
nop
fsubp
gs
sahf
imul
out
aad
and
jb
xchg
add
or
sbb
add
xchg
sbb
shrl
repz
bound
aam
bound
es
repz
xchg
fdivr
decl
mov
adc
xchg
push
divl
mov
xchg
sub
shrl
mov
mov
mov
pusha
mov
or
mov
dec
and
xor
lret
sbb
repz
scas
mov
mulb
out
jo
xchg
icebp
jg
jmp
addl
ret
sbb
ret
add
orl
clc
movb
mov
sbb
pop
and
push
jle
addr16
js
in
dec
fmuls
sub
jb
div
cmp
xchg
fldt
ljmpw
sub
fsubrs
in
pop
out
lea
jmp
add
or
jecxz
repz
int3
pop
sbbl
loop
push
jmp
andb
in
cmp
jmp
sti
or
push
int3
into
lahf
push
mov
icebp
inc
jne
bswap
jmp
pop
push
or
pop
cmp
xor
push
ss
xchg
sbb
fbstp
adc
mov
or
sub
ret
jmp
mov
pop
and
into
xchg
mov
add
jl
push
push
or
into
adc
xor
outsb
cmc
mov
adc
jl
sbb
push
mov
lods
jle
lds
dec
imul
jnp
add
or
loope
mov
or
mov
fnstenv
imul
lahf
sub
jne
inc
popa
pop
divl
aaa
add
das
scas
sbb
test
movsl
or
stos
pushf
mov
jmp
cld
scas
add
popf
fadd
fwait
es
xchg
or
cwtl
sub
xor
sub
pushf
sub
xchg
xor
sub
mov
sbb
call
pusha
cmp
push
fwait
shlb
pushf
push
push
adc
hlt
in
sbb
arpl
pushl
jo
movsl
das
inc
inc
es
adc
dec
enter
pop
cmpsl
inc
xor
cmp
int3
jg
out
sbb
xchg
pop
iret
sub
pop
sub
xchg
mov
mov
mov
add
add
xor
call
jmp
iret
loope
push
movsl
mov
scas
sahf
jns
lcall
jge
gs
mov
pop
jo
les
mov
cltd
test
sub
mov
mov
orb
xor
out
pop
dec
mov
cmp
sub
jmp
popa
fwait
test
mov
jne
div
jle,pn
shrl
sub
jb
pop
mov
jmp
xlat
jae
mov
cmp
push
outsb
mov
int
fidivrl
xchg
test
or
ss
fmull
jmp
fistps
stos
mov
or
in
int3
jo
cmpb
adc
fdivl
je
mov
jmp
push
dec
dec
cltd
pusha
sbb
cmp
adcl
jl
nop
mov
mov
sub
push
fcompl
dec
jg
hlt
and
push
hlt
or
enter
lret
and
jmp
jb
push
orl
mov
out
add
cltd
test
jg
cltd
ret
add
mov
inc
and
add
aas
jae
dec
push
xchg
into
jnp
lea
push
add
mov
pop
flds
testl
push
sbb
add
shrb
imul
shrb
dec
jmp
mov
lret
xor
mov
and
rcll
lret
jmp
in
and
test
xchg
in
push
test
daa
movl
fwait
popf
jae
icebp
fstpl
cmp
dec
fistpl
sbb
mov
lods
inc
in
fildl
ficoml
aas
sub
inc
aaa
jmp
arpl
loopne
loopne
popf
sbb
in
arpl
sbb
sbb
dec
sbb
ret
sar
decl
sahf
test
loope
sahf
push
sbb
push
xchg
and
sbb
sbb
cmp
lods
fstps
mov
xor
stos
andb
rcr
jg
and
pop
xor
mov
addb
add
jmp
jmp
lret
xchg
insb
arpl
icebp
jbe
xchg
scas
lock
lret
das
into
outsb
cmp
inc
std
sub
or
inc
jp
sub
test
inc
add
adc
and
cmp
and
jg
jge
and
test
orl
xchg
jbe
lea
hlt
out
cmpsb
cmpsl
fadd
add
mov
cli
mov
or
in
lds
hlt
lea
jmp
mov
je
sub
sbb
data16
push
push
mov
sti
cmc
mov
out
mov
inc
sbb
xor
leave
scas
cmpsb
lcall
xchg
ja
inc
mov
inc
cmp
jle
mov
vpaddb
and
push
ss
adc
dec
ror
xchg
mov
push
mov
in
aad
fs
add
add
nop
sti
cmc
jmp
mov
repnz
push
cmp
scas
inc
lret
or
jge
inc
pop
push
adc
mov
lret
nop
call
jge
push
fnstsw
mov
xor
push
jmp
sbb
xchg
mov
mov
and
jno
fisubl
push
pop
mov
add
clc
sbb
sti
jmp
cmc
inc
xlat
push
rcrb
mov
stc
stc
mov
js
les
dec
adc
jmp
and
jns
leave
adc
adc
lret
in
dec
fdivrl
bndldx
pop
mov
dec
jmp
faddl
cmp
adc
inc
jno
jnp
jbe
pop
scas
mov
mov
xor
pop
call
dec
dec
xor
test
bnd
stc
out
pop
and
outsl
das
cmp
sub
add
jle
xchg
in
ret
add
jl
jmp
sub
in
mov
in
xlat
pop
sub
popa
test
xchg
push
dec
orl
cmp
sbb
ror
xchg
divl
or
xchg
scas
aad
push
xchg
loopne
add
insb
and
push
jmp
aas
mov
cmp
mov
lea
jmp
in
mov
mov
mov
sub
pop
xor
in
out
sbb
push
pop
push
and
inc
scas
lock
mov
mov
cmp
jmp
shll
mov
inc
and
xchg
mov
xchg
xchg
enter
ljmp
insb
cmp
mov
mul
mov
mov
inc
or
jmp
dec
shlb
sahf
jo
xlat
pushl
ret
ljmp
imull
mov
or
mov
jmp
sub
cld
xor
lea
cmp
push
stc
imul
in
jne
dec
iret
push
pushf
lret
cmp
or
fildl
bswap
jmp
push
pop
popf
mov
push
sub
shll
ljmp
jp
scas
cmp
xchg
jge
inc
test
sub
fdiv
lret
pusha
xchg
pop
not
mov
lods
test
cs
cwtl
push
shl
or
insb
inc
lods
stos
shl
stos
shl
push
mov
cmp
mov
enter
mov
sbb
xchg
scas
lods
dec
in
sub
adcl
xchg
daa
cs
pop
lods
inc
pop
dec
imul
dec
add
mov
add
add
add
pushf
dec
add
push
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
dec
outsl
popa
fs
imul
add
add
inc
gs
jb
arpl
fs
jae
add
add
add
add
add
add
add
cmp
