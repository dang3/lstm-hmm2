dec
xchg
test
cltd
mov
mov
mov
mov
xchg
subb
push
or
jecxz
popf
mov
inc
stc
push
or
jl
adc
push
pop
sub
pop
dec
scas
test
cltd
leave
sbb
and
mov
ds
nop
sub
sbb
shrl
xchg
xor
dec
pop
and
shrb
lret
inc
inc
repz
loopne
lret
xor
cmp
js
aad
shl
pop
inc
mov
dec
adc
push
aad
jle
cmpsb
and
jne
sub
lock
fbstp
inc
and
push
ja
out
sbb
and
fiadds
fsubrl
jmp
dec
divb
mov
loop
pop
sub
sti
lea
fldcw
and
notb
pop
fcom
ret
jae
jl
call
or
bound
sub
icebp
stos
mov
sahf
or
std
mov
inc
pop
sbb
pop
jne
adc
pop
inc
inc
lret
orb
lea
and
mov
or
jp
pop
fwait
dec
jne
in
or
xchg
jne
sub
jg
push
fwait
cld
pop
leave
dec
stos
in
aas
xlat
xchg
lock
sub
adc
adc
lret
mov
or
inc
jge
add
ds
pop
inc
stos
int
cmp
repnz
xor
sub
mov
pop
sbb
stc
stc
sub
pop
je
mov
push
add
inc
push
mov
xchg
fcomps
pop
push
shll
cmp
ds
adc
sbb
mov
lock
addr16
fwait
add
sub
cld
and
lea
fdiv
mov
mov
cli
xchg
push
out
outsl
pop
push
cs
scas
mov
fidivl
sbb
mov
or
std
sub
inc
cmp
test
aas
pop
and
pop
mov
dec
test
lret
mov
lahf
cltd
loop
jecxz
in
adc
fwait
xchg
aad
mov
inc
xor
sub
mov
popf
or
shrl
jl
ds
mov
push
imul
jecxz
and
pop
mov
js
cmp
jae,pt
clc
aas
adc
movb
pop
jne
xchg
mov
movsl
out
popf
aam
rcll
adc
out
jg
pop
das
add
notl
jbe
popa
xchg
xlat
mov
mov
pop
push
adc
or
push
xor
jo
mov
cli
xchg
in
mov
data16
adc
sbbb
sbb
jne
inc
jge
cmp
xchg
mov
sahf
xchg
out
sbb
fbld
lahf
test
inc
xchg
pushf
push
jae
movb
aam
les
imul
push
aad
insl
push
mov
out
imul
mov
rcrl
fdivs
lret
pop
dec
jle
test
iret
add
nop
aad
inc
aam
mov
dec
ljmp
insb
xchg
outsl
cmp
xor
jns
imul
mov
cwtl
sub
lods
rcrl
push
into
shlb
stos
jmp
enter
stos
pop
lock
insb
pusha
mov
inc
shl
jnp
or
lahf
or
aaa
add
stos
faddl
into
inc
and
insb
enter
mov
into
int3
sarb
sbb
addr16
clc
adc
test
mov
push
xchg
cmp
cmpsb
xchg
push
stc
movsb
adcb
xchg
pop
shlb
divb
sbb
xchg
pop
arpl
fstps
sbb
aam
sti
stos
hlt
sub
mov
and
filds
adc
ret
add
pop
mov
pop
mov
dec
inc
roll
mov
mov
mov
push
enter
or
mov
push
ja
add
cli
mov
divb
cwtl
ljmp
mov
popf
rorb
imul
rol
lahf
jbe
call
push
mov
add
xchg
sbb
pop
les
dec
fistl
xlat
mov
dec
xchg
adc
adc
pop
cmc
insl
pop
addb
mov
nop
decl
push
scas
pushf
rorl
jmp
cmc
stc
xchg
mov
test
xor
mov
fdivr
cmp
popf
cvtps2pd
mov
nop
ret
push
push
or
xlat
insb
inc
fists
stos
sbb
sbb
sub
and
dec
mov
cli
aam
out
loopne
pop
sbb
pusha
mov
sti
sbb
pop
jmp
lods
mov
add
shlb
adc
jg
clc
aaa
fisttps
cmp
dec
fdivrs
repz
push
pop
and
push
test
repz
lock
arpl
mov
outsl
xchg
addl
ret
gs
sahf
or
out
push
je
mov
aad
pop
mov
popf
mov
repz
fcomp
adc
dec
fistpl
ud1
jg
insb
and
mov
fimuls
data16
jb
xchg
jmp
jmp
shrb
jbe
adc
mov
jl
or
cltd
pop
arpl
nop
lds
adc
scas
pop
cmp
out
sahf
cmp
fldcw
into
ret
aaa
aad
mov
add
and
fld
imul
or
cmp
rorb
imul
dec
adc
sbb
testb
add
jge
lcall
mov
adc
iret
lcall
cs
leave
jp
push
push
push
or
pop
adc
sbb
and
in
mov
int3
out
jne
pusha
lcall
xchg
xor
mov
push
xchg
lret
pop
pushf
inc
cmpsb
push
add
sbb
in
xor
stos
rorb
dec
dec
adc
pop
push
dec
pop
sbb
pop
pop
sbb
std
mov
repnz
hlt
mov
push
lahf
push
shll
lea
mov
cmp
fldenv
sub
sbb
sbb
lret
sbb
cmp
push
lahf
fwait
and
jae
std
pusha
lret
cli
jne
inc
mov
hlt
jo
adc
daa
cmp
inc
hlt
mov
inc
pop
lahf
test
mov
sub
jnp
int3
shl
jno
enter
adc
repz
cmp
pushf
aad
andl
adc
stos
mov
jmp
inc
pop
shll
inc
push
fldenv
movsl
cli
test
lret
xor
pop
add
add
aam
add
fwait
fwait
sbb
push
push
shlb
cmp
xchg
adc
fsubs
int3
cli
inc
shrb
xor
cmp
adc
add
push
and
push
scas
mov
pushf
jle
dec
and
sbb
fwait
cmp
xchg
mov
mov
xchg
ja
sub
pop
mov
cmp
fists
mov
clc
jae
and
mov
outsb
lods
test
dec
lea
movl
stos
lahf
jae
into
lods
int3
inc
aaa
call
push
dec
add
xor
jle
mov
bound
jnp
cmp
cmp
adc
outsb
arpl
mov
je
sbb
in
loope
mov
mov
sbb
cmp
push
pusha
mov
lock
jmp
gs
sahf
sbb
pop
inc
std
jmp
je
jle
or
push
adc
cmp
xchg
sub
jne
pop
lret
pop
test
jo
dec
xchg
adc
dec
adc
jp
push
cmpsl
sti
out
xor
and
dec
and
mov
out
popa
push
add
dec
sub
and
ret
sbb
scas
mov
mov
or
out
cmpl
call
orl
mov
das
fstps
hlt
aam
nop
cmpb
mov
jns
rol
aas
mov
add
flds
leave
aam
mov
sub
inc
notb
push
push
ror
sbb
dec
push
inc
ds
inc
sub
fidivrl
cmpsl
test
push
lret
enter
stc
dec
cmp
imul
and
adc
out
jmp
sub
in
jle
cmp
insb
dec
xor
rcr
push
xchg
test
lods
je
cli
scas
mov
push
xor
inc
add
adc
inc
adcb
and
lock
in
lods
cmp
sbb
js
ljmp
pop
cld
pushf
fwait
lds
fcomps
cmp
add
inc
addr16
inc
cmpsb
or
call
fmull
bnd
outsl
cmpsl
pop
sbb
data16
fst
lret
rorb
repnz
mov
aam
xor
insl
das
xchg
jmp
dec
rcll
bound
dec
or
ljmp
cs
shlb
sti
inc
adc
cs
inc
dec
adc
mov
cmp
jns
ljmp
mov
enter
bound
adc
je
mov
push
out
sbb
pop
sub
pop
fwait
or
pop
jp
dec
stos
outsb
test
push
and
js
pop
fiadds
jp
lahf
lcall
shrl
nop
cmp
jns
or
pushf
pop
dec
jmp
fwait
jmp
inc
cltd
push
inc
pop
mov
jle
sub
push
popa
xchg
add
pop
jnp
push
insb
clc
mov
mov
inc
jl
adc
mov
aam
je
shll
popf
mul
andb
dec
ss
cmc
adc
jo
inc
hlt
int
xchg
aam
ljmp
push
sbb
or
sbb
xchg
into
xor
push
xchg
jp
xor
popa
mov
adc
or
xor
jno
jns
rorl
in
adc
sti
insl
fimull
aas
inc
push
imul
xor
mov
xor
dec
push
ss
or
xor
sub
and
sub
jne
lods
repnz
mov
test
inc
jb
cli
jnp
out
jge
xor
xchg
ret
pop
sbb
xor
sahf
sbb
mov
mov
and
pop
mov
mov
ret
push
mov
push
mov
jbe
xor
cmp
inc
cmp
ss
int
lods
pop
ljmp
mulb
mov
popf
arpl
arpl
ror
lret
in
stos
notl
xchg
push
cmp
inc
jb
jmp
cmpsl
cltd
xchg
test
push
leave
xchg
cmp
xchg
arpl
dec
mov
loope
out
ja
push
out
xlat
into
fs
sub
xor
adc
mov
test
divb
or
xor
je
enter
stos
sbb
daa
lret
pop
add
inc
mov
cmpsb
mov
xchg
or
sbb
push
notb
cli
xchg
xchg
out
pop
fdivr
and
inc
scas
cmc
dec
pop
and
out
loopne
pop
arpl
and
and
sbb
dec
dec
mov
fstpl
mov
add
jecxz
push
sbb
xchg
call
jb
push
iret
mov
mov
lret
lds
mov
cmpsb
dec
loopne
xchg
jmp
push
std
into
lds
pop
nop
pop
sbb
mov
enter
cld
and
in
cwtl
jne
popa
jp
sahf
add
jmp
push
add
sub
jecxz
sbb
mov
push
lret
es
clc
ss
les
popf
int3
or
cmpl
xor
outsl
cli
push
hlt
aam
rolb
mov
je
rcr
jmp
imul
sbb
test
lret
mov
sti
jl
inc
xchg
aam
adc
call
js
dec
ror
loope
aaa
insl
dec
daa
movsl
mov
shrl
les
jmp
rclb
push
shll
and
lahf
mov
pusha
push
cs
cwtl
jecxz
add
cs
pop
loopne
sub
mov
lcall
into
lret
and
push
sub
sahf
and
popa
lds
sbb
movsl
enter
in
push
daa
sti
mov
mov
pop
mov
rorb
into
xchg
cltd
imul
pop
and
or
fldt
fimull
scas
mov
sub
std
test
mov
negb
mov
sti
out
cltd
test
aaa
dec
ret
push
dec
pop
sahf
mov
outsl
out
les
xchg
inc
jg
movb
jbe
adc
xor
xor
out
xor
cmpsb
dec
leave
ficompl
test
jbe
mov
test
daa
xor
and
dec
mov
cmp
lcall
leave
loop
cmp
sub
int
xchg
push
push
lea
add
push
mov
pop
nop
loop
sub
sub
sbb
in
sarb
or
sbb
and
xchg
out
push
pop
pop
pop
xor
cmc
mov
inc
cmpsb
pushf
inc
pop
mov
ljmp
pop
sbb
mov
xor
lret
fbld
xor
sti
pop
lea
gs
jno
fidivs
dec
int
inc
mov
cld
or
dec
jae
test
xchg
push
ss
int3
jae
mov
jae
mov
sahf
in
mov
inc
and
popa
inc
xchg
jne
push
insb
neg
mov
mov
inc
stos
pop
sbb
jno
iret
dec
xchg
pushf
lar
movsl
sub
inc
movzwl
sbb
mov
sti
jo
outsb
int
pop
sbb
sbb
mov
cmpb
sbb
inc
mov
xor
aas
mov
test
sbb
add
push
bound
inc
or
and
sub
push
jae
cmp
and
pop
inc
test
push
fists
jl
mov
loopne
push
and
scas
pop
mov
xor
lret
mov
ja
pop
sub
pop
pushl
insl
fistps
sbb
lods
pop
ljmp
not
adc
cmpsl
aam
inc
push
jmp
sub
xor
fisubs
mov
test
lahf
inc
ret
xchg
mov
andb
out
inc
cmp
lcall
test
jb
ret
dec
push
lea
fisubs
push
in
test
sarl
test
add
sbb
pop
in
push
icebp
mov
push
mov
lea
movsbl
call
add
xor
call
movswl
push
mov
call
dec
movswl
lea
inc
inc
inc
call
lea
inc
inc
mov
mov
mov
sub
lea
inc
sub
dec
inc
mov
call
inc
add
inc
dec
dec
call
mov
dec
call
or
inc
sub
movzwl
movzwl
mov
lea
imul
xor
pop
and
dec
mov
add
and
pop
sub
imul
pop
mov
mov
or
lea
pop
dec
imul
dec
dec
add
add
lea
add
pop
add
mov
pop
mov
dec
mov
sub
sub
call
inc
sub
inc
inc
ret
add
sub
push
dec
lea
push
sub
or
push
dec
push
xor
inc
push
add
sub
mov
sub
add
push
mov
ret
push
add
mov
and
sub
movswl
inc
lea
push
and
inc
call
pop
ret
jmp
inc
and
lea
mov
movzbl
lea
inc
xchg
mov
dec
imul
inc
xor
movswl
dec
mov
lea
inc
movsbl
inc
dec
jne
inc
mov
imul
or
pop
mov
mov
pop
inc
mov
pop
movzbl
imul
add
mov
and
add
movzbl
inc
add
inc
mov
add
ret
push
push
movzbl
mov
push
sub
mov
inc
sub
mov
sub
push
mov
dec
movzbl
mov
push
add
add
xor
dec
sub
mov
sub
push
dec
mov
dec
push
dec
mov
xor
or
or
push
inc
lea
push
xor
inc
pushl
dec
call
mov
add
mov
lea
dec
sub
mov
dec
add
pop
ret
movzbl
cmp
jb
inc
xor
movsbl
imul
mov
add
add
mov
inc
movzwl
inc
and
inc
mov
imul
add
mov
mov
mov
cmp
jb
movzbl
pop
mov
sub
and
movzbl
xor
sub
add
add
sub
inc
xor
mov
inc
xor
add
dec
mov
imul
dec
test
jbe
inc
xor
dec
inc
sub
dec
inc
inc
inc
mov
and
mov
or
mov
inc
dec
movzbl
add
inc
add
inc
dec
and
add
add
mov
mov
imul
mov
imul
add
mov
add
dec
mov
mov
imul
add
inc
mov
dec
jne
dec
mov
imul
lea
add
add
mov
dec
mov
lea
dec
mov
inc
xor
add
inc
dec
mov
dec
sub
mov
lea
add
test
jbe
lea
inc
sub
dec
inc
inc
mov
sub
add
dec
add
inc
movzwl
add
mov
inc
add
inc
imul
mov
inc
inc
and
imul
xor
mov
lea
dec
movzbl
add
movzwl
add
imul
inc
and
dec
mov
mov
mov
sub
movzbl
lea
mov
mov
xor
inc
mov
dec
mov
movzbl
xor
inc
add
and
jmp
push
inc
inc
inc
sub
or
add
sub
xor
mov
lea
lea
sub
dec
inc
dec
mov
mov
dec
mov
and
mov
xor
sub
dec
imul
xor
add
sub
dec
mov
inc
movzwl
inc
mov
mov
mov
movsbl
movzbl
inc
cmp
je
mov
movswl
imul
push
sub
call
call
mov
mov
call
call
inc
imul
dec
dec
mov
inc
lea
ret
sub
imul
pop
imul
ret
push
lea
dec
add
dec
sub
push
inc
inc
push
lea
push
movsbl
push
mov
inc
inc
inc
lea
call
movsbl
push
imul
inc
xor
lea
sub
mov
neg
mov
inc
mov
imul
inc
sub
mov
sub
add
mov
mov
dec
inc
dec
inc
dec
je
mov
inc
lea
mov
sub
add
mov
mov
sub
dec
add
repnz
dec
mov
add
dec
jmp
mov
inc
lea
dec
inc
mov
and
dec
jmp
or
imul
sub
movzbl
dec
dec
mov
inc
pop
pop
ret
push
imul
inc
inc
inc
mov
movzwl
dec
add
imul
imul
mov
lea
and
imul
mov
imul
xor
inc
mov
inc
dec
lea
inc
inc
add
dec
pop
ret
sub
mov
mov
mov
mov
mov
dec
dec
mov
mov
lea
mov
lea
inc
xor
mov
imul
mov
mov
mov
inc
dec
dec
inc
imul
lea
mov
cmp
jb
lea
push
and
add
push
lea
lea
push
lea
mov
xor
dec
dec
xor
inc
mov
xor
add
dec
push
add
mov
mov
mov
dec
xor
and
inc
mov
inc
inc
mov
and
lea
movzbl
dec
add
dec
inc
add
inc
sub
add
imul
movzbl
movzbl
inc
dec
mov
dec
lea
or
lea
sub
inc
sub
dec
mov
dec
add
dec
lea
dec
jmp
les
js
addr16
push
iret
loop
rcrb
xchg
adc
fmuls
dec
movb
cli
pop
outsb
jno
mov
inc
sub
in
push
adc
stos
or
notl
nop
inc
fldl
sbb
push
out
fidivl
jo
mov
in
jp
cld
add
pop
imul
lods
outsl
jl
movsb
jbe
and
add
mov
push
je
das
dec
lods
push
jno
adc
mov
movsb
data16
xchg
rcl
add
nop
pop
in
fdivrl
push
gs
push
into
sbbb
inc
cmpsl
inc
add
js
shlb
mov
or
jmp
mov
inc
pop
into
mov
mov
dec
pop
lar
cmp
aam
shl
push
xchg
es
inc
js
cmp
out
push
mov
das
mov
and
fisttps
mov
call
sbb
inc
dec
inc
pop
mov
add
insl
into
mov
loope
pusha
in
mov
mov
xchg
sub
lret
stos
sbb
push
xchg
mov
mov
lret
inc
push
leave
mov
push
fucomp
stos
scas
ljmp
jge
arpl
sbb
addr16
pop
inc
testl
rcr
test
insb
loope
addb
xchg
mov
shll
add
out
dec
mov
fwait
xchg
mov
sahf
mov
cwtl
push
aaa
and
seto
mov
scas
jl
mov
sub
test
xchg
xchg
pop
int3
mov
cmc
mov
std
movl
repz
outsl
sbb
repnz
mov
inc
in
jmp
xchg
ret
sbb
lret
dec
pop
ja
sub
rolb
stos
add
dec
repz
ss
sub
pop
xor
test
lods
jmp
cs
and
adc
inc
add
push
add
mov
lret
xchg
and
jbe
sub
cmpsb
ljmp
nop
pop
cmc
mov
fwait
movsl
inc
jp
popf
mov
cwtl
lahf
dec
jmp
inc
adcl
pop
js
inc
insb
lea
int3
mov
das
xchg
cmovbe
stc
fstpt
dec
sahf
cmc
frstor
jmp
xchg
xor
test
fldt
jno
rcrl
mov
fimuls
xchg
sub
sub
cltd
int
xor
arpl
les
test
push
ret
lock
inc
or
cmp
xchg
sarb
mov
mov
out
test
lea
imul
lahf
rcll
stos
fnstsw
repnz
xchg
or
testl
adc
ljmp
jge
sbb
xchg
into
mov
gs
dec
loope
loope
or
shlb
xchg
dec
ud1
data16
push
js
inc
rcr
negb
xlat
mov
les
jno
xchg
mov
xor
mov
ss
stos
jnp
push
mov
mov
cmpsl
pop
ss
ss
hlt
sbbl
mov
push
insb
icebp
arpl
ds
xor
or
add
icebp
andb
jp
pop
int
pop
mov
add
js
je
mov
in
insl
dec
mov
les
adc
addr16
fdivl
mov
push
xchg
lcall
int3
adc
cli
jecxz
push
repz
inc
dec
aad
shlb
insl
inc
jge
push
push
xorl
dec
mov
cmpsl
movb
cmp
mov
mov
jmp
cltd
outsb
ror
fcompl
enter
stc
jns,pn
in
cltd
adc
mov
xorl
mov
lods
pop
xchg
stos
icebp
lret
pushf
add
mov
xor
mov
fdiv
dec
das
mov
inc
adc
sbb
jge
or
xchg
xchg
jp
jne
idivl
add
aad
loopne
test
addr16
flds
loope
sbb
pop
int
jnp
dec
clc
adc
xor
aam
xchg
cmc
or
xor
in
out
cmp
cmp
fstl
jae
mov
or
shll
pusha
mov
sbb
or
stos
jp
pusha
xacquire
sbbb
fsubrl
punpcklbw
xor
lret
pop
xchg
push
enter
ja
icebp
push
xchg
xchg
popf
dec
loopne
mov
adc
outsl
jmp
popa
mov
imul
lock
mov
lea
push
fldt
movb
stos
ret
xlat
lods
iret
and
das
aad
adc
xchg
mov
ljmp
fidivs
adc
icebp
and
add
or
jge
push
out
dec
out
push
dec
cmpsl
inc
sub
ljmp
ljmp
adc
xor
mov
ret
lcall
dec
es
mov
mov
lods
and
push
ja
or
js
xchg
and
xor
aaa
dec
test
xor
shlb
loop
jge
into
lret
cmp
mov
xor
push
lods
pushf
jae
inc
stos
cld
sbb
push
inc
push
ficompl
mov
xor
rcll
scas
push
test
sub
xchg
sbb
popf
dec
sbb
ljmp
push
adc
leave
pop
loop
mov
lds
inc
loop
push
pop
ja
cmc
dec
sub
inc
xor
xor
add
xchg
mov
mov
fwait
mov
sub
fisubrl
pusha
leave
stc
xchg
pop
loopne
dec
jne
add
sub
or
mov
or
stos
call
dec
jg
push
jge
cmpsl
adc
jg
sbb
rorb
dec
add
pop
xorb
mov
decl
sarl
cld
lret
adc
inc
push
and
adc
jo
xchg
mov
sahf
and
into
and
xchg
mov
xor
and
movsl
fdivrp
lock
out
xor
in
jb
aas
add
popa
jne
xlat
nop
xor
cmp
and
cmpsb
inc
pop
enter
pop
sarl
fadds
mov
stos
test
test
addr16
xchg
jl
mov
sbb
out
gs
jecxz
dec
fisubs
aaa
cmpsl
xor
loopew
data16
xor
in
cli
arpl
dec
sub
or
mov
cmp
out
les
push
js,pn
pop
cmc
inc
push
pusha
xor
mov
mov
or
add
mov
pop
and
dec
pop
inc
sbb
mov
adc
lods
sub
lds
shll
clc
mov
filds
je
lods
xor
sbbb
inc
iret
mov
in
jge
adc
ja
mov
fistpll
leave
notb
loop
in
int
out
addr16
wrmsr
std
into
sbb
mov
jnp
and
push
xchg
and
xchg
add
inc
repnz
or
jbe
pop
lods
hlt
mov
xlat
rcl
pushf
adc
les
sub
adc
jae
push
ret
fwait
daa
push
int3
arpl
es
and
js
aaa
repz
movsl
or
push
dec
jmp
jp
outsb
nop
mov
divl
xor
add
push
sub
in
lret
outsl
scas
in
arpl
ffree
push
popa
dec
cwtl
outsb
sbb
sub
jp
mov
aam
jae
and
cmp
adc
xor
sub
arpl
cmc
sqrtps
push
push
stc
call
inc
mov
sbb
sub
cli
push
adc
xchg
push
test
sub
in
jle
inc
pop
pop
ja
daa
add
jmp
add
roll
mov
mov
stos
push
jle
dec
bound
cld
divl
pop
pop
xor
ljmp
cmp
xchg
aam
je
fstpl
push
mov
cmpsb
js
adc
lock
sub
pushf
sbb
mov
and
imul
cmp
test
call
dec
fnop
std
out
inc
outsl
mov
shll
fsub
ret
cmp
xchg
mov
imul
jns
or
cmp
paddusw
xorl
icebp
loop
int
popa
push
pop
mov
int3
cmpsb
inc
int3
or
jecxz
shll
cmp
fidivl
xchg
or
push
mov
addl
mov
movsb
lds
cld
call
gs
inc
pop
or
xchg
mov
in
add
sub
and
xchg
cld
jle
jo
fbld
decl
mov
test
lods
inc
dec
adc
imul
or
sub
fsubrs
in
sub
mov
fidivl
test
gs
mov
nop
push
push
test
movsb
scas
mov
int3
jne
add
mov
add
call
sbb
aam
push
sbb
adc
pop
push
popf
pop
and
cmpsb
ja
jg
enter
fmull
decl
mov
pusha
adc
js
or
pop
jmp
pop
stc
js
ss
or
cs
add
dec
cs
jno
mov
mov
pop
sbb
sbb
outsl
addr16
mov
out
in
lock
xchg
lcall
outsb
dec
lods
xlat
push
mov
inc
adc
mov
sbb
jne
into
sbb
call
mov
and
and
sbb
xor
jns
imull
or
sub
out
lret
adc
sub
stos
cmp
inc
scas
cmp
inc
xchg
adc
shrb
cwtl
push
lret
arpl
inc
xchg
rol
rclb
adc
mov
sbb
das
stos
add
mov
in
aad
mov
pop
mov
mov
cmp
ss
loope
jle
imul
lods
jmp
rol
dec
loope
scas
fimull
in
xchg
inc
int
lahf
in
jno,pn
addl
and
add
into
aas
xchg
cwtl
mov
jae
int3
dec
int
mov
iret
push
clc
pop
xchg
cmp
shll
fstpl
imul
xor
das
outsb
push
sub
cmp
fcoml
int
add
push
mov
inc
jp
mov
shll
rcrl
bound
icebp
cmc
ljmp
js
or
adc
inc
mov
and
iret
out
les
popf
cmp
mov
je
rcll
cmp
lods
stos
mov
mov
mov
and
dec
mov
mov
repz
jge
insb
stc
fwait
inc
ss
arpl
xchg
cmpsb
data16
xor
adc
out
sub
or
and
loopne
mov
jae
mov
xchg
inc
push
mov
mov
in
cli
lods
mov
rorb
in
pop
mov
dec
sub
cmp
xchg
or
std
add
mov
shll
das
lea
enter
aad
sbb
push
fldt
aad
or
movsl
push
inc
icebp
out
adc
cmpsl
add
out
insb
ljmp
and
and
cwtl
xlat
cmp
sub
add
inc
lods
inc
lahf
es
ucomiss
fs
leave
fwait
sub
adc
test
xchg
into
aaa
lds
cs
mov
push
adc
stc
lret
or
push
mov
pusha
jl
scas
mov
mov
mov
imul
jge
pop
xchg
popa
mov
jae
sbb
daa
dec
pushf
scas
pop
push
pop
sub
inc
and
jecxz
test
mov
test
or
and
dec
xor
jmp
fidivs
mov
xchg
adc
inc
subb
add
incb
cli
addr16
or
xchg
fisubrl
jno
addr16
inc
xchg
pop
dec
mov
mov
xchg
dec
outsl
mov
xchg
adc
mov
stos
pop
fildll
sub
mov
or
addr16
icebp
vmwrite
adc
mov
jns
loope
loopne
roll
jnp
push
mov
ret
adc
ret
xor
into
cld
mov
adc
loopne
dec
gs
test
add
add
xchg
xchg
xchg
bound
mov
dec
je
loop
xorb
and
fwait
mov
pop
xor
ds
mov
or
or
pop
push
pop
push
mov
dec
icebp
xor
and
xorl
stc
ljmp
leave
push
shl
mov
out
xchg
stc
inc
inc
cmp
add
das
add
sub
mov
cltd
popa
cltd
cmp
inc
fisttpll
mov
out
lock
mov
xor
scas
popf
jbe
xchg
mov
mov
sbb
and
pop
and
stos
mov
fcom
pop
mov
movsl
sub
bound
dec
inc
nop
adc
cmp
add
adcb
dec
or
addb
scas
test
sub
jnp
push
int
int
imul
popa
les
mov
in
in
pop
and
pop
mov
lcall
push
xchg
shlb
fcomi
into
mov
add
jo
xor
cli
sub
lcall
aas
jecxz
out
pop
pop
outsl
adc
cld
aad
lahf
out
test
lods
ds
mov
pop
jge
data16
pusha
cmpsl
add
ret
sub
xorw
mov
sbb
ss
pusha
aaa
dec
xchg
dec
inc
xchg
mov
jno
jo
sbb
roll
filds
movsl
leave
cmp
inc
cmp
test
pop
jge
arpl
xchg
push
fbstp
popf
sub
jb
pop
lods
mov
in
cmpsl
aas
sbb
pop
push
xor
in
sub
sub
push
es
scas
ja
enter
fadd
les
jae
xor
adc
add
xlat
fiaddl
int
in
mov
push
icebp
push
cmp
leave
rorb
dec
pushf
inc
dec
sbb
icebp
stos
int3
mov
clc
dec
sub
xor
incl
mov
adc
fs
mov
pushf
push
adcl
push
or
mov
pop
add
cmp
pop
jp
mov
ja
dec
cmpl
je
mov
xor
aas
pop
inc
push
test
jecxz
jmp
imull
scas
call
pop
pop
out
xor
inc
jle
and
sahf
ret
add
outsb
je
add
shrb
xor
mov
mov
inc
cmp
jne
in
xor
lods
dec
add
pop
lock
enter
dec
lods
push
xor
mov
out
lods
outsl
mov
inc
ret
pop
add
lock
mov
insb
jne
inc
sbb
adc
adc
mov
cld
ret
dec
mov
in
jecxz
sarb
jne
addb
mov
push
fcomps
clc
pop
cmp
push
inc
popf
push
sbb
std
in
inc
call
in
test
mov
sub
dec
nop
aam
fmull
outsl
fildll
pop
cmp
mov
in
in
jno
xchg
cmpsl
sub
mov
xchg
dec
jge
mov
inc
orb
lods
nop
add
inc
sbb
xchg
push
bound
stc
pop
xchg
add
mov
jb
pop
mov
mov
loop
clc
dec
inc
mov
notb
inc
xchg
mov
mov
out
push
cmp
inc
lock
ja
and
xor
aam
mov
dec
lock
xor
enter
cmp
out
jbe
pop
inc
pop
jnp
pop
cs
push
xor
mov
jg
test
xchg
push
jl
inc
mov
call
lock
popf
les
in
enter
js
push
adc
xchg
push
pop
and
outsb
fsubrs
mov
int3
lret
test
insl
inc
and
popa
fldenv
fistpl
lcall
icebp
jae
jne
nop
or
fsubs
out
jns
pop
xchg
mov
adc
nop
xchg
sbb
ret
lock
inc
fmulp
rolb
mov
bswap
mov
mov
imul
adc
add
and
cmp
ljmp
stc
roll
xor
xor
imul
xor
fcmovbe
mov
scas
data16
jge
or
sbbl
das
push
out
jge
push
js
xor
push
sahf
sbb
lret
cmp
int
mov
pop
xor
adc
pop
sbb
jns
test
mov
adc
mov
jl
lret
dec
xor
sbb
outsl
xor
mov
dec
test
loopne
lahf
stos
mov
push
nop
pop
adc
lds
or
cwtl
jo
lock
shl
adc
cmp
and
es
sbb
adc
and
aas
mov
adc
repz
ja
enter
scas
pushl
loop
xchg
adc
clc
popf
aam
pop
cli
inc
jb
cmp
inc
jnp
mov
pop
jne
cli
pop
push
leave
icebp
dec
int
outsb
push
cmp
ljmp
add
pushf
dec
mov
pop
jo
or
adc
sahf
jecxz
adc
cmp
pop
loop
add
push
mov
popa
sahf
jl
fistpl
dec
orb
cltd
inc
push
out
pop
movl
dec
mov
pop
xchg
inc
fnstsw
push
xchg
xor
dec
xchg
iret
jns
leave
jl
pop
mov
inc
jns
rorb
rcll
pop
jnp
mov
cwtl
popa
mov
push
jno
xor
push
inc
sbb
outsb
sahf
dec
cmp
mov
lock
mov
movsb
inc
icebp
arpl
bound
adc
mov
mov
sub
mov
dec
lahf
adc
mov
icebp
pop
xchg
sub
insl
stc
js
loope
xchg
xchg
pop
xchg
iret
add
push
scas
jae
adc
int3
mov
lea
mov
adc
mov
je
icebp
jno
movsl
add
pop
sarb
push
out
ljmp
fisubrs
sub
mov
mov
sarb
pop
mov
cmp
mov
add
jge
push
xlat
loopne
mulb
sbb
xchg
cmpsl
pop
fmul
dec
fincstp
adc
nop
sub
or
fdivrs
rorl
xchg
pop
mov
adc
xor
xchg
mov
lock
add
jmp
or
je
mov
clc
mov
mov
push
insl
call
shrl
movsl
pusha
fimull
scas
lds
pushf
dec
pop
hlt
int3
je
cmp
std
xchg
mov
clc
shll
add
mov
movsl
dec
add
je
mov
mov
mulb
pop
ret
push
insl
insl
or
xchg
jbe
mov
jbe
imul
cmp
test
add
test
mov
and
insl
xchg
jnp
std
dec
xchg
insl
sub
adc
mov
or
push
fstps
ret
insb
mov
mov
inc
lock
push
not
les
lahf
fs
ljmp
mov
xchg
mov
pop
gs
stc
pop
adc
outsl
in
in
jb
decl
fdivl
mov
adc
sbb
cmp
dec
rolb
test
lret
bound
ficoms
push
sbb
aam
lods
ss
dec
popf
sahf
mov
inc
sub
ret
add
add
xor
repnz
mov
int
cmp
xchg
xchg
and
repz
fdivrs
xor
xor
lahf
cmc
add
jecxz
and
jnp
mov
fnstenv
pop
adc
es
lea
out
xor
in
mov
and
stos
adc
out
or
int
fs
push
rcr
inc
popa
movsb
or
fdivs
add
test
adc
cmc
cmc
push
ljmp
sar
pop
sub
imul
and
or
fsts
pop
test
fimuls
jne
jnp
dec
pop
lock
loopne
dec
inc
lea
icebp
int3
or
add
and
jb
mov
or
cmpsb
jne
cmp
adc
loope
in
pop
mov
inc
pop
or
pop
mov
aas
mov
out
jbe
arpl
ss
and
cmc
sub
les
add
mov
lock
mov
sbb
dec
mov
fildll
out
sbb
inc
jmp
push
add
jo
mov
rolb
movsl
push
mov
add
loope
jne
or
mov
xchg
xchg
push
stc
push
xchg
insl
inc
pop
jecxz
pop
mov
or
mov
aad
mov
jns
into
movsb
inc
cmpsb
and
mov
cmp
addr16
cmpb
fsts
cltd
scas
dec
call
loopne
sub
popf
out
mov
push
push
mov
dec
and
jmp
and
dec
mov
xchg
inc
add
lcall
dec
enter
sub
icebp
test
push
sub
xchg
call
inc
and
xor
jae
stos
ret
mov
sbbb
dec
inc
push
mov
repnz
cld
dec
cmc
cli
adc
testl
or
and
sub
stc
jmp
aas
mov
inc
cmp
xchg
push
pop
dec
pop
sbb
shlb
jns
movsb
dec
pop
in
mov
mov
cli
lds
out
bound
mov
sub
xchg
xor
and
outsb
icebp
push
arpl
insb
frstor
push
xor
jl
fbld
sub
gs
leave
inc
testb
mov
aad
jmp
lret
jp
jo
test
jo
mov
fstpt
std
stc
cltd
sub
dec
lock
sbb
xchg
mov
data16
decl
int
leave
lds
stos
sarb
popf
notb
popf
xor
ds
push
ja
cmpsl
dec
cld
sub
into
sti
add
stos
je
arpl
fsubrl
jg
mov
leave
adc
div
mov
xor
movsl
and
in
sbb
push
cltd
xlat
push
pop
es
stos
rcrl
dec
xchg
add
sub
cmp
pop
mov
fdivrs
stos
mov
pop
and
insb
cmp
lcall
and
cmpsb
add
repnz
or
mov
bound
push
sub
xor
fisubrs
orl
mov
adc
movsb
sbb
inc
pusha
adc
pop
iret
push
jp
push
cltd
sbb
out
or
sub
xor
xor
pushf
fdiv
lods
mov
lcall
repnz
mov
cmp
xchg
mov
bound
sbb
notl
lock
sbb
dec
push
mov
mov
mov
push
out
xchg
out
pop
push
lods
adc
push
or
std
mov
pop
rorb
push
add
push
je
lret
out
cwtl
into
int3
jns
lea
inc
jg
imulb
inc
paddd
mov
out
lds
cmp
inc
enter
les
movl
cs
scas
shl
adc
dec
dec
push
je
push
pop
push
sbb
loope
sub
adc
das
dec
sub
fiadds
push
ret
push
dec
jne
xchg
sbb
sbb
mov
jp
subl
popf
xchg
jmp
add
subb
rclb
pop
add
mov
xor
jl
testl
mov
test
rol
inc
js
jne
adc
mov
insl
outsl
dec
imul
sub
adc
xor
and
and
mov
leave
cmp
stos
sbb
pushf
adc
mov
test
aaa
mov
fistps
sub
loopne
mov
sti
or
cmpsl
ror
dec
xor
in
jns
lret
cmpsl
adc
lock
mov
ds
test
mov
std
inc
or
mov
xchg
call
mov
pop
icebp
and
inc
les
jecxz
adc
std
xchg
xchg
mov
mov
imul
stc
lds
mov
mov
xchg
or
jp
mov
lods
loopne
push
jae
cmp
sbb
repnz
and
mov
test
pop
fsubrl
inc
jge
and
in
dec
daa
ss
mov
cmp
fs
clc
pusha
jl
stc
pop
cmp
xchg
xor
and
mov
mov
test
push
or
mov
mov
jge
mov
and
adc
cmpsb
repnz
sahf
pop
push
xchg
xchg
cld
je
mov
add
jns
leave
les
fdivl
push
dec
sbb
jb
adc
jmp
aad
mov
push
mov
in
and
jecxz
inc
stos
mov
xchg
jbe
pop
cmp
jp
out
push
pop
adc
xchg
push
pushf
mov
std
loope
imul
or
mov
dec
lea
andb
imul
push
fsubs
test
push
add
iret
rcrl
dec
insl
sbb
push
jae
or
adc
xchg
sbb
sub
inc
add
or
lea
pop
fwait
popf
and
dec
xor
mov
push
pop
lods
add
mov
inc
sbb
xlat
ret
sub
inc
loope
ljmp
stc
std
push
xor
dec
loopne
dec
sti
lea
je
sbb
call
cmp
sarl
sub
sbb
mov
pop
sbb
push
stos
loopne
fwait
stc
jns
inc
imul
mov
adc
rcl
stc
inc
mov
nop
adc
in
inc
pop
dec
mov
inc
aas
in
dec
dec
outsb
inc
insl
add
cs
inc
out
inc
jnp
xchg
push
cmp
add
aas
in
sub
mov
jbe
and
sub
movsb
inc
mov
aad
repz
mov
adc
mov
push
repz
sbb
ret
dec
shr
cmp
adc
outsl
push
fnstsw
out
aam
dec
jns
pop
fstl
sbb
popf
fwait
push
iret
jp
xchg
mov
test
xor
fldt
popf
ret
mov
jbe
mov
push
xchg
mov
xchg
cmpl
clc
push
in
imul
push
adc
xchg
mov
test
daa
clc
test
jbe
daa
imul
push
lods
lods
inc
mov
test
add
and
pushf
jmp
dec
cli
les
int3
lret
xor
addr16
addb
mov
mov
dec
mov
jbe
cmc
lock
leave
aas
aaa
enter
gs
inc
pop
jl
push
pop
fstps
out
fidivs
push
mov
divl
stc
cmpsl
and
pop
inc
nop
or
stc
add
jo
dec
and
sub
cwtl
jbe
leave
jno
cmp
popf
xor
adc
mov
cs
pushf
or
movsb
loope
jo
mov
or
cs
insb
sub
push
shlb
jl
jne
in
jns
popf
adc
and
out
mov
inc
xor
ds
shl
xor
dec
imul
sti
mov
mov
inc
xor
dec
rclb
jecxz
and
adc
fs
dec
adc
or
push
sarl
repz
adc
and
in
pop
cltd
aaa
jmp
jno
and
inc
add
push
ds
stos
mov
subb
sti
push
add
sbb
shl
pop
pop
xor
pop
lret
into
lret
xchg
nop
jo
sbb
jl
out
inc
int3
xchg
shlb
cmpsb
repnz
lret
mov
push
in
pop
mov
sbb
into
mov
test
push
mov
push
sbb
cli
lret
leave
pop
push
push
in
addr16
frstor
sub
xchg
mov
mov
mov
or
jl
mov
jge
js
pusha
mov
push
int3
adc
sub
mov
cmp
cmp
mov
mov
inc
cmp
cld
inc
dec
loopne
call
movsb
loope
mov
and
add
loope
mov
out
in
mov
jo
rorl
shrb
pop
xor
out
test
in
inc
inc
cmp
aad
lcall
dec
repnz
mov
jne
sub
test
jb
rcrb
inc
adc
mov
cld
xchg
cmc
inc
push
addr16
xchg
fldl
sub
add
mov
es
xlat
fcoms
jno
incb
inc
inc
mov
inc
popa
roll
stc
jle
pop
push
or
cmp
aad
popa
jo
filds
mov
cli
jmp
or
lods
push
clc
jnp
jne
or
mov
pop
jo
mov
lds
push
or
adc
mov
rcl
sbbb
jo
lahf
sub
lds
adcb
inc
jmp
das
dec
cs
scas
mov
shl
popf
fs
jae
xor
sbb
jae
aam
mov
sbb
mov
and
sub
push
aad
fwait
mov
mov
stc
sub
xor
mov
push
or
cs
dec
push
mov
lret
xor
dec
mov
dec
int
push
sub
xchg
pop
les
rcll
ljmp
dec
xor
mov
in
cld
clc
mov
popa
data16
jo
cmpsl
adc
sub
repz
dec
mov
out
fistl
fldenv
es
test
mov
sub
out
iret
lds
cld
pop
adc
in
xchg
mov
iret
mov
cltd
xor
ljmp
adcl
mov
xchg
into
mov
xlat
pop
lock
sub
and
sti
incb
pushl
fdivrl
cmc
rclb
arpl
sbb
out
jecxz
cwtl
cmp
aaa
jp
xchg
stos
jmp
shlb
subb
sarb
mov
sub
aad
sbb
adc
popf
jecxz
dec
cmp
sbbb
sub
xchg
cmp
imul
into
cmp
mov
add
push
insl
mov
test
xchg
jg
and
mov
jle
insl
pop
in
mov
iret
xchg
adc
insb
push
jae
mov
jnp
inc
pusha
dec
movl
jo
outsl
inc
mov
outsb
push
jne
sbb
pop
les
aas
pusha
fildll
mov
mov
es
add
lret
push
ret
mov
mov
jne
popf
or
mov
fs
fistpl
cmpb
fisubrs
push
jne
bound
pop
mov
sbb
pusha
shll
pop
fmuls
fsts
and
dec
mov
cmp
dec
out
sub
out
push
pop
test
xor
xchg
mov
and
shlb
loope
cmp
xchg
call
pop
shlb
mov
cmp
repnz
cmp
es
call
lcall
mov
mov
vxorps
sub
xor
sbb
stos
push
in
push
cmpsb
rorl
mov
mov
imul
mov
push
mov
push
mov
mov
sub
mov
ljmp
xor
adc
test
cld
mov
pop
aad
ds
daa
sub
ljmp
mov
out
bound
iret
sbb
jbe
xor
dec
sbb
xor
leave
jne
mov
jp
shl
sbb
scas
icebp
pop
ds
bound
jnp
jbe
lcall
jg
cmc
push
inc
adc
aaa
add
xor
dec
push
mov
popa
stos
xchg
test
aad
inc
and
or
shrb
push
push
pop
loop
and
pop
mov
xchg
sbb
loopne
mov
push
add
out
inc
imul
jae
bound
push
aas
outsl
mov
cmp
aad
lret
mov
in
cmpsl
jmp
rorb
jns
push
sbb
sbb
add
dec
movsl
pop
mov
xor
out
inc
sbb
out
add
loop
pop
and
fs
mov
sbb
push
mov
iret
mov
xor
bound
dec
dec
enter
repnz
loop
outsb
jl
dec
cld
xchg
setnp
dec
iret
icebp
cs
and
fsubr
dec
mov
jne
repz
cwtl
in
xchg
outsl
dec
mov
xor
lods
fldcw
sub
push
iret
rclb
adc
lahf
adc
xchg
push
lcall
jnp
sub
push
dec
imul
into
xchg
jp
adc
into
jmp
mov
rorb
and
idivb
dec
jns
f2xm1
mov
or
push
ficomps
sbb
lret
inc
and
ljmp
imul
lcall
mov
leave
push
jge
shl
xchg
add
pushf
xor
ss
mov
insl
out
enter
fbld
sbb
mov
insl
xchg
and
pop
icebp
mov
fadds
leave
scas
stc
stos
jle
repz
sti
sahf
in
jnp
push
mov
and
or
and
ret
sub
dec
mov
lahf
xchg
add
ret
gs
mov
mov
jo
das
das
xor
mov
xor
lea
test
mov
ror
out
leave
xor
call
outsl
mov
and
mov
jp
imul
pop
cmp
sub
dec
aas
daa
ret
je
notb
dec
movsb
inc
andb
mov
fdivrl
idiv
xor
call
mulb
inc
xchg
jbe
ret
or
fbstp
addb
jne
movsl
lret
ficoms
pop
call
lret
sbb
outsl
push
and
push
xchg
pushf
pop
les
dec
call
fxch
push
int3
inc
sti
xchg
xor
mov
insl
cmp
pop
cmpb
lea
cmp
pop
test
inc
xor
cmpsl
fistl
dec
rcr
into
test
xlat
fld1
push
out
adc
addr16
mov
fnstcw
daa
push
cmp
mov
shll
sub
inc
mov
and
mov
scas
inc
xor
mov
aam
mov
mov
into
cld
lods
sbb
xchg
pop
inc
mov
pop
push
push
sbb
in
hlt
jmp
les
int3
jp
and
outsl
sbb
jno
stos
fisttps
ret
xchg
flds
rcr
add
adc
jno
xchg
cmc
sbb
add
repnz
scas
pop
mov
mov
mov
and
push
lcall
inc
cmp
test
xlat
or
ror
xchg
hlt
call
into
push
mov
andl
mov
jne
add
les
stos
testb
sarl
fdivrs
insb
nop
fincstp
and
sahf
dec
je
sub
lahf
inc
inc
or
xchg
cmpsb
or
mov
pop
push
push
xchg
xlat
in
ljmp
lea
fstpt
or
push
jg
repz
clc
outsl
out
push
stos
mov
or
sub
pop
test
xlat
mov
push
subb
cmp
jl
cmp
jnp
in
dec
push
xchg
stc
ljmp
popf
in
mov
popa
out
test
cmp
mov
xchg
test
add
cld
mov
rol
cwtl
push
int
cmc
and
mov
sbb
mov
or
inc
outsb
lds
pop
in
and
sub
repz
xchg
loop
adc
lds
shrl
mov
adc
js
enter
adc
mov
mov
sbb
outsb
scas
mov
addb
xchg
jns
mov
sub
mov
fistpl
push
arpl
out
fistpll
call
into
or
pop
fldenv
imull
shl
mov
lret
push
xor
shr
loop
pop
mov
xor
loopne
xlat
test
and
bound
sbb
subl
lea
in
mov
adc
add
movsl
mov
in
sti
add
push
mov
mov
dec
sub
cmp
mov
push
sub
cmc
cli
adc
rcll
loope
jle
fnstenv
clc
std
mov
xchg
cmpsb
adc
outsl
mov
mov
ficompl
shl
xchg
xchg
movsb
das
push
mov
daa
aas
popf
sub
sub
mov
lret
adc
rcrl
addr16
loop
sti
aam
les
push
sbb
jno
imul
in
xchg
inc
movb
enter
push
aaa
mov
cmp
fs
into
push
inc
test
nop
clc
mov
sbb
xchg
ss
lods
in
mov
and
and
stos
sbb
jg
or
lock
outsl
pop
add
or
adc
mov
adc
xchg
dec
add
xlat
cmp
push
push
cwtl
push
inc
sbbl
xor
sub
ror
push
in
xor
nop
aaa
pop
sub
es
or
adc
mov
mov
lahf
lea
jne
aad
iret
push
cmp
bound
mov
jmp
frstor
ljmp
xor
cmp
and
pop
sti
jp
fcmovbe
lea
mov
call
decl
mov
cmp
pop
int3
or
mov
cmp
mov
push
insb
ret
pushf
lea
add
mov
test
sub
popl
in
jmp
dec
rcll
nop
or
outsl
inc
cltd
push
aas
pushf
add
pop
stos
subl
popf
mov
mov
push
and
push
jecxz
out
addb
sbbb
add
dec
jmp
addr16
sbb
imul
lock
xchg
push
jle
push
or
jmp
sti
add
jl
daa
add
out
int3
push
sub
push
loopne
loopne
popf
cmp
outsl
cmp
xor
fcom
xchg
pop
idiv
or
adc
inc
call
stos
mov
in
popl
insb
das
jne
movsb
pop
call
sti
frstpm(287
inc
movsl
cmp
leave
mov
int3
in
adc
jg
lret
inc
xchg
and
add
mov
jle
fldt
je
adc
push
jno
daa
loope
les
and
sub
shl
xchg
inc
lds
sub
sbb
cmp
les
cmp
loopne
loop
xchg
adc
jno
int
ljmp
fildll
or
icebp
mov
mov
add
jnp
adc
leave
fcom
out
sarb
xor
fnsave
xor
xlat
fidivrs
jecxz
push
jle
pop
stos
das
mov
pushf
ficompl
stc
pop
mov
jg
outsl
inc
out
stos
sti
xchg
push
xor
and
pop
dec
jns
mov
int3
loopne
iret
repz
xchg
filds
cmc
ja
and
or
or
pop
pop
rclb
cmc
or
movsb
mov
insl
pusha
mov
jns
fidivrl
sbb
fisttpll
ficomps
push
lock
dec
xchg
inc
xchg
ja
cltd
stos
or
sub
sbb
movsl
popf
ja
add
test
and
je
jmp
gs
shll
and
out
fwait
iret
and
icebp
pop
in
or
pop
xchg
imul
dec
shlb
cmc
add
int3
inc
cmp
xchg
cmpsl
es
je
dec
or
lds
mov
push
jl
or
leave
xor
mov
inc
cmp
push
jno
mov
pop
pop
in
adc
js
fdivs
mov
cmp
scas
idivl
les
jecxz
movsb
pop
hlt
cltd
xchg
outsb
scas
shll
sti
push
jno
inc
lods
lods
push
add
cmp
mov
popa
inc
sub
mov
out
jp
call
fs
and
pop
pop
clc
jle
xor
sbb
popa
and
cld
mov
push
andl
in
cmp
lea
mov
xchg
lahf
inc
inc
inc
stc
push
mulb
jp
out
sbb
or
addr16
or
mov
inc
pop
lret
fidivrl
loope
out
sbb
ljmp
or
rol
icebp
xor
rcll
adc
dec
and
push
aaa
add
hlt
lret
push
les
push
cmp
or
or
leave
push
icebp
jno
ds
mov
aam
push
dec
lret
cmp
cmp
pop
push
fucom
xchg
pop
out
mov
rcr
outsl
sbb
sbb
imul
cmp
pop
xchg
pop
add
add
and
cltd
push
xor
xor
mov
dec
xor
inc
dec
mov
lret
pop
mov
gs
out
sub
mov
nop
pop
or
imul
add
ljmp
xlat
jb
inc
rcll
repnz
ljmp
aaa
out
fcoml
xchg
mov
jecxz
fmul
dec
or
sbb
repz
push
leave
dec
mov
add
jnp
stos
lcall
popa
lret
xchg
adc
cmc
ja
pop
rcrb
jne
ja
fisttps
jecxz
stos
dec
mov
lret
and
xchg
pop
out
sbb
jnp
rolb
mov
or
jmp
jnp
dec
cmp
nop
ljmp
add
rcrl
push
orl
push
rcr
rcrl
cmp
ss
and
jg
sub
cld
xchg
int
movsb
add
xchg
in
rorb
test
dec
mov
adc
popf
imul
shll
js
inc
pop
push
shrl
sbb
ffreep
loop
call
popa
adc
add
mov
ret
fs
inc
xor
adc
add
movsl
je
xor
cmp
mov
mov
rol
and
fcomp
adc
fs
dec
shrl
int3
lret
push
out
push
ret
and
lods
mov
cmp
mov
push
inc
or
push
push
stos
testl
xor
das
arpl
sti
fcoms
imul
mov
daa
push
out
xchg
dec
pop
pop
jo
aaa
cltd
and
pop
dec
jb
ret
xor
pop
arpl
add
rsm
sbb
adc
pop
xchg
push
std
lret
xlat
insl
iret
push
inc
mov
mov
movsl
mov
cmp
out
add
rcr
out
ficompl
or
movsb
jge
rclb
testl
cld
jne
outsb
scas
mov
stos
pop
push
inc
andb
pop
or
popa
js
cmpsl
xor
enter
movsl
mov
cs
xchg
xchg
sahf
xchg
pop
dec
je
rol
movsb
cld
pop
fsubr
ss
xor
sub
fs
iret
in
cmp
inc
les
adcl
and
mov
xchg
push
push
jg
sti
iret
insl
notb
call
nop
dec
loope
mov
in
inc
int
cmpl
jnp
dec
mov
lret
ret
lret
mov
or
mov
mov
cmc
pop
lods
loopne
mov
mov
pop
fcoms
jp
dec
rolb
and
cmpsb
add
f2xm1
dec
sbb
ja
inc
in
mov
cmp
das
mov
xor
ja
sbb
jns
xchg
fnstenv
jb
scas
std
imul
push
cld
gs
cli
xchg
inc
sbb
test
jle
fwait
iret
lret
jecxz
jo
mov
lret
pushf
dec
or
xchg
or
aam
inc
cld
gs
jns
sub
or
xchg
data16
inc
out
push
cltd
test
mov
xor
ds
in
lods
pop
dec
lcall
jecxz
or
sub
insl
nop
aaa
pmaxub
sbb
fbld
adc
fimull
pusha
push
cmp
cs
add
in
mov
cmpsl
ljmp
mov
cmc
jns
pop
mov
pop
pusha
les
mov
in
adc
ljmp
loopne
xor
mov
cmp
jg
sahf
xchg
pop
sti
imul
dec
aaa
loopne
or
push
jbe
dec
rcrl
scas
aaa
mov
movsl
pop
sbb
icebp
gs
fdiv
lods
lods
xchg
out
adc
ret
iret
jno
nop
aas
pop
test
ja
mov
or
jns
outsl
xchg
dec
add
xlat
fldt
movsb
add
xchg
hlt
imul
decl
movsl
fsubs
mul
xorb
loop
add
js
lahf
mov
jno
aam
enter
or
pusha
push
mov
in
xchg
xchg
adc
sbb
fs
nop
cmp
movsl
ficompl
cwtl
jmp
dec
pop
xchg
cmpsb
mov
mov
pop
out
xchg
lds
stos
test
cld
mov
xchg
lahf
fsubs
sbb
mov
xchg
pop
inc
repz
inc
mov
inc
or
ret
mov
pushf
fidivrl
ja
inc
movsl
push
rol
jmp
mov
stc
sti
rorb
or
fwait
mov
push
cwtl
in
in
inc
mov
idivb
mov
pop
outsb
or
xor
push
rorb
or
pop
sbb
daa
cmpsb
les
jne
xchg
fbstp
xor
shlb
stc
mov
pop
out
mov
cmpsb
xchg
mov
addb
lcall
sahf
ja
cmc
imul
jno
inc
mov
jmp
cmpsl
sub
aam
or
scas
or
fcoml
adc
xchg
sbb
shrl
mov
or
cld
out
sbb
ret
cmp
fcomps
test
sbb
dec
xchg
dec
aad
daa
std
add
cmp
xchg
loopne
nop
or
addb
lcall
movsb
mov
push
add
stos
or
xchg
push
mov
stc
and
in
sbb
mov
jo
inc
ljmp
pusha
loope
lds
cltd
xchg
stc
jmp
dec
xchg
nop
pop
and
inc
aad
fs
loopne
inc
frstor
mov
nop
loopne,pn
pusha
popf
icebp
jb
or
fdivrl
mov
insb
and
pop
or
push
jg
push
mov
flds
mov
arpl
dec
cmp
jmp
pop
jmp
mov
add
xchg
out
icebp
push
popa
mov
mov
adc
rorb
ljmp
mov
insb
fmuls
fs
pop
lea
test
inc
inc
sub
sub
in
mov
pop
mov
jp
sbb
mov
sahf
inc
in
sub
sahf
add
shlb
or
sarb
push
or
js
mov
mull
insb
aaa
out
push
cli
add
sahf
aad
cld
cmp
cmp
clc
movsb
xor
or
mov
jb
mov
fists
mov
cld
jns
cmp
std
cmp
call
xchg
xor
lock
cmp
mov
push
mov
std
loop
push
in
ljmp
rcl
stc
dec
mov
mov
loope
aaa
cmp
pop
xchg
cmpsb
ficoml
xchg
mov
popf
outsl
ss
enter
add
pop
movsl
stc
jbe
test
push
inc
pop
xor
dec
mov
mov
or
jns,pt
das
push
jmp
sub
scas
xchg
rcll
push
jcxz
xchg
inc
rcrb
mov
ficoml
or
inc
lods
sbbb
ret
mov
adc
and
je
mov
and
inc
push
xchg
js
stc
rcrl
mov
xor
mov
add
pop
and
cwtl
cmp
enter
cltd
jnp
or
pushw
stos
jle
pusha
cmp
pop
jg
int
rorl
lock
lret
jp
inc
gs
jp
jbe
xor
insl
mov
adc
pop
jbe
sub
xchg
shll
les
xor
pop
sbb
rcll
mov
fisubrl
insl
mov
push
iret
inc
call
pop
leave
cwtl
xchg
stc
cmp
shrl
sub
push
sub
xchg
dec
out
push
add
mov
fnsave
adc
push
out
xchg
jno
popa
push
pmulhw
fmul
test
shrl
or
bound
out
cltd
mov
pop
pop
ljmp
sbb
inc
aas
push
imul
cwtl
jbe
les
add
push
cmp
cmpsw
mov
stos
into
adc
xor
push
mov
mov
or
xor
fs
addr16
cmpsl
pop
loopne
push
cmp
add
pop
mov
test
inc
jmp
int
mov
dec
jbe
inc
mov
jb
faddl
push
jg
sub
cmp
bound
or
ds
xor
mov
gs
test
fistpl
pop
push
jmp
inc
je
pop
mov
add
pop
pop
insl
lods
repz
mov
loop
sub
faddl
jecxz
mov
call
mov
ss
movsl
call
pop
sbb
jnp
addr16
lock
pop
pop
lds
inc
das
test
dec
out
add
adc
push
int3
xchg
loopne
in
lret
in
add
es
xchg
jmp
adc
adc
or
pop
ret
and
outsb
fnstcw
dec
cmp
outsl
add
cmpsb
mov
inc
and
das
unpcklps
popf
add
and
das
xor
lret
push
xchg
pop
jb
out
fmuls
hlt
sub
ds
outsb
sub
and
imul
mov
ret
push
adc
repnz
movups
mov
dec
adc
loop
jmp
jl
in
cmpsl
mov
jle
popf
inc
xor
push
add
mov
xchg
out
pop
fbld
cmc
aam
je
add
push
push
popa
or
pop
mov
ss
test
ljmp
lcall
add
fstpt
imul
cmpsl
adc
mov
in
mov
js
ja
adc
mov
out
push
and
popf
rolb
subl
out
pop
inc
push
ss
add
fwait
xchg
das
out
mov
cmp
xor
ljmp
in
inc
pusha
js
pop
xchg
push
and
sbb
xorl
sub
cs
and
enter
inc
and
loop
cmp
fcos
test
rorl
mov
xor
push
lretw
jmp
mov
and
jp,pt
aad
mov
jbe
push
outsb
int
mov
lret
jg
call
xor
imul
popa
jmp
cmp
sub
and
int3
test
fdivrs
sbb
movl
add
jns
fs
out
inc
test
movsl
sahf
xchg
mov
inc
dec
sbb
mov
leave
mov
inc
inc
fldl
fwait
aas
jl
inc
mov
repnz
jmp
mov
insl
js
jmp
hlt
jmp
mov
lods
jl
mov
dec
pushf
jo
stos
fistpl
imul
xchg
mov
jg
enter
pop
stos
lods
push
push
sub
mov
pop
or
sub
fidivrl
push
mov
mov
push
add
push
imul
add
stos
add
div
sahf
or
or
int
adc
cmpsl
imul
xchg
ja
push
dec
in
or
adc
push
lods
xchg
popl
fcomps
adc
jg
push
mov
inc
pop
sti
ljmp
and
stos
rorl
movsb
inc
adc
scas
dec
jmp
add
lock
movsl
dec
pop
into
inc
mov
mov
sub
jmp
je
mov
cmp
jg
pop
fsubrl
push
inc
push
mov
sub
xchg
fcoms
enter
push
xor
mov
out
int3
xor
adc
fs
test
nop
push
int
mov
xor
cmp
add
jae
sbb
dec
mov
pop
ficoml
and
xlat
mov
scas
es
test
xchg
pop
insl
lret
out
mov
cmp
lret
dec
aam
sbb
lock
or
fstpl
pop
fdivs
mov
or
push
push
mov
jl
imul
ja
orb
popf
test
fsubp
push
sbb
add
cwtl
les
mov
sub
repz
aaa
jnp
mov
icebp
cmc
sbb
pop
pop
stos
mov
arpl
sbb
mov
mov
movsl
jns
push
adc
jge
jmp
in
loop
je
stos
jecxz
rcll
sub
fildl
cli
jp
sbbb
or
pushl
clc
repz
scas
inc
pop
xchg
bound
or
test
stos
mov
test
gs
fstl
pop
inc
push
loop
incl
iret
and
cmovp
or
dec
cld
mov
mov
roll
jne
sti
mov
jnp
repnz
adc
xorl
idivb
xchg
je
std
xor
jo
jge
dec
mov
les
sarb
cmp
lcall
int
lret
inc
mov
loope
and
out
out
loopne
popa
orl
jns
icebp
mov
bound
lock
push
mov
insl
in
lds
inc
push
int
lcall
adc
out
out
js
cmpsl
jp
adc
insl
or
or
lahf
fisubl
push
scas
add
sbb
sub
loop
inc
xor
aad
and
pop
imul
xchg
inc
jo
iret
and
test
mov
mov
loope
push
mov
pusha
pop
rclb
jae
lods
dec
mov
sub
xchg
aas
xchg
ds
xchg
jp
and
xor
xor
inc
out
jb
or
jb
and
stc
inc
sub
pusha
bound
sar
stc
dec
and
mov
pop
call
jge
xchg
pop
rcl
jne
cmc
lcall
xchg
push
into
inc
push
mov
fnsave
jae
enter
iret
push
dec
das
push
outsl
pop
in
dec
add
xchg
ret
mov
and
sub
mov
jnp
hlt
fidivs
out
lock
cmp
or
add
jb
jns
in
mov
sbb
and
sub
gs
addr16
cmp
outsl
test
pop
and
jnp
or
xchg
xchg
cltd
sbb
popf
cmpl
push
sub
mov
rolb
bound
test
inc
xor
cmpsl
jl
loope
adc
ret
or
imul
rorb
lretw
sbb
imul
lea
out
fisubl
insb
mov
repnz
dec
cmpsb
mov
jae
aaa
movsl
in
les
cs
cmp
dec
push
dec
ret
push
cwtl
test
iret
mov
inc
sbb
cs
mov
daa
mov
ret
clc
or
mov
stos
pop
xchg
int
adc
and
dec
inc
enter
call
int
scas
cmpb
or
add
fdivs
cmpsl
fsts
sub
cmp
xchg
int3
inc
mov
ss
es
ljmp
sub
fnsave
aad
mov
cld
push
packssdw
xchg
adc
cmp
sub
repnz
push
or
jns
push
sbb
movsb
mov
das
sbb
clc
mov
shl
loop
jl
test
loopne
mov
and
pusha
sbb
mov
ficompl
lods
push
jno
or
and
xor
je
sti
scas
cmc
pop
adc
or
sbb
mov
xlat
lock
mov
rcl
test
xor
repnz
ret
movsb
repnz
lods
push
movsb
mov
sarl
mov
adc
scas
jbe
out
cmp
addl
icebp
ss
mov
data16
leave
lret
cmp
lds
popa
loope
inc
mov
cmp
ja
pusha
xchg
das
inc
stos
mov
sub
sti
test
rclb
pop
xchg
mov
roll
data16
rol
jmp
jmp
test
jo
jb
dec
in
stc
in
leave
jns
test
cmc
push
imul
push
mov
adc
cltd
xchg
dec
leave
push
in
lods
jno
stc
sbb
icebp
adc
fisttps
sub
inc
out
pop
and
jbe
fisubrl
fists
js
jg
cmpsl
in
in
sbb
adc
pop
xor
mov
gs
shrb
adc
rclb
inc
mov
sti
popa
nop
arpl
xchg
sub
repnz
mov
insb
xchg
add
pop
testl
fwait
fdivrs
lahf
sbb
ret
in
jmp
rolb
mov
loopne
mov
mov
orl
sbb
mov
ds
adc
jle
leave
maskmovq
mov
scas
cld
pushl
cmc
insb
mov
test
fidivrs
push
pop
jb
lds
lods
mov
push
inc
xchg
aaa
xchg
pop
pop
lea
jns
bound
mov
notl
and
mov
adc
cmp
pop
outsb
add
mov
enter
add
pop
lcall
leave
adc
js
ljmp
std
mov
lcall
out
aaa
filds
outsl
fmuls
jg
es
and
add
aam
stos
in
add
lcall
sbb
push
pop
dec
mov
cltd
lods
cmp
pop
mov
mov
cmc
cltd
add
xor
es
cmpsb
or
xor
sub
loope
sub
or
imul
and
cmpsb
or
xor
fistl
mov
aad
xchg
or
sbb
loope
bound
pop
jmp
add
jmp
sahf
xchg
subb
nop
in
dec
push
roll
sti
clc
lret
fistps
bound
test
dec
inc
inc
dec
insl
stc
jae
gs
xchg
ss
data16
jb
mov
lds
adc
fsubrs
sbb
sbb
and
outsl
adc
push
call
sub
mov
xchg
xor
jmp
hlt
pop
aad
in
je
xchg
dec
mov
sarb
cmpsb
cs
jae
repnz
rclb
pop
dec
adc
xchg
movsb
mov
popf
dec
jmp
jbe
pop
pop
lret
and
push
sbb
push
int3
loope
sbb
jns
dec
cmp
or
insl
sbb
xchg
jae
jle
sbb
xchg
gs
xor
aas
repz
push
jmpw
or
lahf
fiadds
add
cmp
rcrl
and
aas
cmp
jno
outsb
xchg
les
arpl
push
mov
lock
jnp
fs
mov
mov
mov
shrl
add
out
cli
das
into
les
in
adcb
push
xchg
fcmovne
add
mov
adc
popa
mov
fsubs
and
pusha
cmpsb
xchg
pushf
rcl
mov
inc
pop
cmp
js
lds
movsb
sbb
sub
xchg
mov
lods
dec
lahf
dec
cmpsl
push
movsb
rclb
or
xchg
dec
movb
lods
dec
test
cmp
aas
rolb
js
popf
pop
imulb
dec
movsb
add
add
xchg
ja
test
rcrb
cmp
cltd
sti
jge
cltd
pop
add
ret
stc
xlat
sub
fimull
pop
mov
xor
mov
lea
sbb
test
lret
call
dec
inc
sbb
jle
cmp
xchg
xchg
cwtl
stos
xchg
xchg
xor
mov
mov
fdivr
and
lock
out
and
jg
add
jp
mov
mov
jg
xchg
add
cmp
fsub
mov
mov
aas
popf
pushf
xchg
loop
std
ret
cli
xor
mov
pop
push
dec
jnp
sti
or
mov
dec
sub
je
lods
ss
clc
testl
cwtl
rep
pop
aad
shr
and
push
dec
lret
push
mov
add
out
or
lahf
pop
cmp
xchg
out
xor
cmp
sub
push
enter
fsts
fsubr
sub
shrb
mov
and
or
xor
loop
jle
xor
ret
lock
cmp
add
sbb
mov
jno
lea
dec
aas
jo
jl
or
enter
cmpsl
mov
pushf
sbb
push
scas
push
mov
pop
test
mov
mov
popf
jnp
xor
fldt
pop
cmpl
cmpsl
dec
enter
push
adc
addr16
xchg
adc
les
dec
jno
stc
insb
add
push
stos
pop
es
xchg
dec
or
stc
mov
push
js
sbb
into
adc
mov
shrl
je
add
mov
push
mov
aad
lahf
or
outsl
and
dec
div
adc
xor
push
fiaddl
in
lea
jmp
cmc
frstor
pop
sub
adcb
sbb
cltd
sbb
or
sub
dec
stos
mov
adc
xor
and
pop
lret
mov
pop
ret
lahf
xor
fdivs
dec
subb
mov
outsl
mov
and
sub
xchg
in
adc
jp
xchg
mov
aam
and
cli
sub
mov
scas
push
cmp
xor
mov
pop
les
push
mov
jge
xchg
dec
lods
sub
int3
lret
fidivl
daa
shl
dec
adc
add
lret
sub
divb
fimuls
adc
stc
lock
fs
lcall
rcrb
dec
in
in
out
add
adc
xchg
out
lods
jmp
add
push
inc
addr16
dec
xchg
push
xor
mov
add
sbb
jl
lea
lret
stc
sti
push
aad
les
xor
bound
aas
test
int
and
mov
mov
roll
jb
pop
mov
mov
add
pop
out
push
orb
add
fisttpl
xchg
iret
ljmp
lea
adc
sbb
pop
mov
sub
iret
xor
int
mov
adc
lock
sub
jecxz
mov
mov
sbb
out
repz
xor
mov
push
imul
icebp
and
stc
ljmp
push
mov
pop
inc
outsl
ficoml
clc
or
repz
ljmp
test
xor
push
adc
push
pop
xchg
out
mov
inc
lds
push
fcomps
out
sub
scas
outsl
xor
addb
aad
push
or
jnp
xor
mov
leave
lea
gs
xor
popf
mov
xchg
inc
sub
add
fstpl
mov
push
movsb
int3
test
jns
cld
mov
sbb
sub
jge
popa
xchg
mov
adc
add
pop
mov
add
roll
and
jns
ds
or
cmp
lret
popf
sub
sbbl
loope
cmpl
sbbl
imul
xchg
ljmp
mov
popf
and
mov
fbld
mov
out
mov
vandpd
cmp
jmp
jb
cltd
pop
inc
mov
add
and
into
cli
cli
jmp
gs
push
in
mov
clc
adc
cmp
pop
ja
jmp
and
and
xchg
insb
test
sub
inc
push
and
mov
sub
xlat
std
mov
in
pusha
sub
mov
in
sub
stc
and
jb
loop
mov
push
test
int
sub
fcoml
fstl
pop
push
mov
sub
out
int3
add
add
test
in
repz
push
pop
mov
ffree
mov
insb
sbb
pop
add
ljmp
xchg
fcoms
adc
out
lahf
mov
or
pop
dec
pop
fwait
add
int3
cmp
mov
sub
push
lcall
jb
outsb
jns
fisubrl
inc
lods
xor
movsb
dec
aam
cwtl
inc
pop
sbb
sbb
out
add
pushf
cs
out
cmp
cmc
pop
test
jb
cmp
lahf
test
test
lahf
rcrl
dec
mov
int
scas
in
adc
pop
imul
adc
xor
mov
or
fldenv
add
or
dec
mov
dec
lret
or
mov
xchg
jg
pop
orl
jb
notl
dec
stos
or
jns
ret
cmp
add
out
imul
shlb
mov
add
and
cmpsb
push
loopne
jns
mov
out
out
loopne
mov
call
ret
push
dec
mov
xor
ret
ljmp
pop
jne
repnz
pop
outsb
mov
jmp
sub
mov
ljmp
outsb
movsb
push
mov
outsb
cmp
push
outsl
movsl
movsl
mov
mov
hlt
imul
hlt
mov
imul
popl
arpl
lea
sbb
mov
jmp
lahf
bound
shrb
aam
mov
sub
push
ja
lret
push
mov
pop
sahf
pop
idiv
ljmp
xor
sub
mov
mov
add
add
cmp
lock
inc
mov
flds
rorb
cmp
xchg
inc
xchg
cmc
add
test
add
aas
aas
add
ljmp
out
pop
xchg
idivl
sub
ret
sti
jns
mov
sub
add
dec
sahf
xchg
dec
and
mov
mov
iret
jl
push
xchg
sbb
dec
xchg
mov
adc
test
push
and
jle
push
push
ret
dec
out
jmp
push
call
mov
xchg
mov
lret
or
cmpl
inc
push
xchg
adcl
cmp
mov
out
mov
sub
adc
sub
jo
xchg
lds
std
imul
pop
mov
adc
pop
xchg
imul
mov
fildl
std
sbb
or
mov
icebp
ret
sub
loope
push
loope
idivb
rorb
and
cs
repnz
fmulp
pop
mov
adc
outsb
movb
loope
sbb
orb
cld
sbb
lret
js
jecxz
fwait
jl
aaa
xor
and
pop
or
cmp
xor
cmpsb
dec
jne
sub
inc
aam
push
cltd
pop
sub
enter
ljmp
or
pop
sbb
aaa
fisubrl
lahf
add
push
inc
divl
adc
lcall
adc
stos
in
roll
sub
mov
push
adc
jb
outsl
addr16
or
sub
int
dec
jg
adc
adc
jg
jmp
jns
xchg
outsb
inc
or
jl
ret
je
inc
add
or
clc
dec
out
sub
fsubrs
cmp
jg
push
sti
xor
or
xchg
scas
mov
arpl
sbb
stos
sub
mov
dec
pop
call
xchg
insl
mov
fisttpll
mov
mov
or
sbb
jnp
xchg
scas
or
jmp
dec
or
clc
xchg
lods
mov
fimuls
cltd
js
push
mov
out
iret
cmp
outsb
sbb
in
mov
mov
into
sub
dec
or
xchg
jae
addl
addl
movl
loop
xorl
fldenv
les
icebp
aad
dec
mov
sub
pop
mov
mov
aas
push
clc
dec
cld
lgs
sub
sub
in
push
fs
dec
fs
xchg
cmp
arpl
jns
jge
mov
xor
mov
pop
mov
pop
test
cmp
jmp
lret
sub
add
addr16
je
je
bnd
inc
sub
test
inc
movsb
out
or
jne
mov
divb
mov
pop
ds
mov
lcall
les
ja
push
push
mov
push
outsb
aam
out
mov
or
shll
test
pop
sbb
in
imul
mov
xlat
cmpsl
dec
sub
dec
xchg
add
sub
add
lods
push
mov
mov
inc
xor
pop
xchg
xchg
enter
sub
mov
daa
cli
push
dec
es
aad
inc
mov
stos
outsl
insb
out
mov
xchg
cld
ffreep
out
xchg
cmc
filds
sbb
adc
add
aad
test
mov
xchg
mov
mov
sub
les
push
sub
add
mov
fs
sbb
repnz
out
push
dec
or
stc
andl
lea
mov
inc
fistpll
sbb
ds
jb
arpl
test
int
xchg
loope
stos
shr
data16
lret
push
fisttps
lret
jb
iret
xchg
sbb
push
in
leave
call
aaa
push
jl
mov
jecxz
outsl
loop
stos
psubb
test
push
int
push
jbe
sbb
inc
cmp
xchg
add
inc
add
ret
inc
pop
cmp
inc
test
jle
into
sub
fstl
push
fcompl
pop
dec
lcall
clc
stc
addl
pop
push
mov
and
xchg
xchg
loope
push
icebp
inc
adc
sti
add
push
fsubrs
scas
push
jns
pavgw
sbb
es
into
ret
push
mov
or
mov
add
loop
std
pop
mov
lahf
in
test
mov
sub
lds
std
in
das
dec
inc
inc
addr16
xor
inc
jecxz
lahf
xlat
aam
test
lret
cmp
sarb
cli
insb
stos
enter
mov
lret
xchg
fiadds
leave
pop
dec
pusha
cs
pop
out
inc
pop
loop
dec
and
out
out
mov
xorb
mov
pop
sub
cmovs
or
repz
push
dec
mov
mov
int3
aam
mov
out
dec
loopne
sar
mov
test
dec
jae
pop
nop
jl
decl
lods
insl
shl
or
jl
aam
loopne
jge
fs
jl
add
fsubrs
je
jecxz
push
ficoml
or
xchg
call
js
xor
xor
fstp
fnstsw
ss
dec
pushf
nop
test
pop
xchg
lock
inc
cmpsl
pop
test
jg
or
mov
outsl
mov
ret
mov
push
int3
fs
push
pop
imul
pop
ret
ret
out
pop
leave
push
nop
add
shlb
sub
sub
imul
lret
insb
or
dec
lea
rorb
shll
push
inc
fldenv
cmp
and
jo
lds
mov
push
inc
lret
test
jb
push
sub
mov
push
mov
push
xlat
mov
or
loope
jl
ret
pop
xchg
in
pop
sub
jns
mov
outsl
pop
inc
or
lock
scas
insb
sbb
cli
adc
inc
es
adc
fisttpll
cmpl
sub
add
repz
push
mov
leave
mov
mov
subb
xor
outsl
loope
pushf
into
pop
lds
or
mov
cmp
fcoml
and
sub
imul
mov
icebp
adc
stos
pop
add
xor
add
sbb
lret
rcrl
lods
pop
xchg
push
call
and
hlt
shll
jb
popa
xor
pop
insl
add
movsb
pop
sub
cltd
out
jge
dec
arpl
movsl
and
cmp
pop
mov
in
mov
jae
jmp
sbbl
jne
xchg
fistpl
scas
xchg
jg
subl
mov
testl
dec
popf
mov
cmpsb
push
arpl
les
inc
into
sti
inc
cmp
ds
mov
add
sbb
sbb
mov
push
outsb
movsb
aas
xchg
xor
sub
push
jnp
sbb
fs
push
jo
xchg
jnp
xor
dec
dec
inc
pop
je
lret
mov
stos
outsl
adc
stos
in
sub
jne
stos
mov
aas
loopne
or
push
sbb
std
mov
cli
stos
movsb
or
and
mov
jge
scas
insb
into
sub
repnz
xchg
or
or
fdivrs
sub
inc
adc
push
mov
cmpsb
call
fidivl
test
into
add
xchg
repnz
rclb
insb
jmp
and
and
mov
sub
lahf
mov
pop
adc
sbb
iret
pushf
out
xchg
and
stc
outsb
scas
dec
cmpsl
movsb
cwtl
in
lcall
sarl
lret
push
pop
shll
je
jecxz
cmp
mov
sbb
push
xchg
jle
xor
jl
and
es
xchg
pushf
pusha
sbb
sti
push
cmpsl
sarl
adc
mov
inc
imul
les
aaa
pushf
push
out
stos
inc
xchg
repz
nop
sub
add
mov
inc
insb
dec
rcrb
push
add
adc
push
ja
movsb
jno
add
inc
sbb
in
mov
scas
cld
lock
popa
xchg
out
jae
jecxz
icebp
lods
jno
inc
or
dec
orb
stos
pop
cmp
jae
dec
cmpsl
lds
pop
push
cmpsb
test
shrb
test
mov
sti
mov
aad
and
pop
push
or
cli
sub
push
repnz
ror
iret
lods
add
and
in
or
mov
pop
aam
push
inc
in
pop
mov
cmp
call
push
mov
lret
jle
inc
inc
dec
aad
jnp
push
push
jo
stos
lcall
or
addr16
push
xlat
mov
stos
insl
jb
adc
stos
pusha
lcall
jp
das
xchg
jg
xor
mov
jae
dec
mov
out
insb
cld
push
aam
and
rclb
lcall
cmpsb
xchg
movsb
and
inc
test
iret
sub
inc
scas
mov
sbb
shll
imul
mov
sub
jmp
push
xor
mov
pop
cmpsl
xor
pop
jp
xchg
sbb
repz
xor
push
pop
pop
aam
ljmp
fs
pop
sbb
mov
repz
sbb
xor
add
fcmovnb
cmp
stc
cltd
call
mov
popf
shll
mov
or
shlb
adcb
adc
add
insb
add
xlat
jbe
pop
jb
mov
js
mov
xor
sysenter
pop
fwait
les
pop
mov
and
loop
iret
hlt
inc
jp
pusha
and
pop
stos
pop
divb
and
xor
inc
jecxz
in
cwtl
fwait
cs
inc
lahf
scas
stc
icebp
repnz
sub
mov
test
pushf
shrl
loope
mov
lods
and
xor
or
stos
mov
jb
push
shll
scas
fsubs
pop
pop
mov
push
add
push
dec
or
insb
mov
sbb
mov
fcoml
repz
sbb
outsb
or
int3
adc
pop
xor
sti
scas
cmp
aaa
daa
pop
loop
aam
add
addr16
sbb
pop
shlb
mov
jnp
test
inc
lods
lret
mov
mov
adc
int
into
loopne
cmc
popa
inc
cmp
not
mov
aam
js
adc
or
outsl
repz
imul
pusha
mov
mov
in
xchg
nop
test
xlat
or
jbe
cmp
mov
push
mov
loop
je
mov
inc
scas
mov
insl
pop
push
push
and
call
sub
adc
into
mov
loope
adc
pop
sbbl
stos
stos
clc
mov
xchg
fimull
add
jae
or
stos
mov
aad
add
lods
fistps
loopne
adc
aas
jg
adcb
cwtl
adc
xchg
pop
test
lds
ret
xchg
loop
daa
es
es
xor
cwtl
imul
sbb
popa
sub
cmpl
inc
pop
xchg
adcl
fisubrs
fcoml
adc
stc
sarl
or
popa
filds
enter
scas
inc
faddp
jl
push
arpl
jne
outsb
in
jno
push
std
mov
pushf
jge
into
enter
sahf
mov
repz
imul
inc
cmpsl
into
arpl
jo
idivb
cmp
imul
or
test
jge
ss
mov
in
adc
push
scas
pop
fldenv
sub
ljmp
jae
mov
or
lret
pop
sbb
es
mov
sub
adc
and
adcl
sbb
sbb
mov
sbb
mov
rcrb
or
and
nop
adc
or
inc
sub
inc
xor
inc
cmc
cmpsb
mov
ss
and
stc
not
mov
enter
push
cld
pop
ja
add
add
or
imull
dec
cmp
xchg
mov
fbstp
push
add
jno
shll
mov
push
jle
jmp
aad
bound
jo
jmp
xchg
adc
xchg
xor
repnz
push
popa
test
jbe
sub
into
fisttpl
or
fwait
add
out
push
jo
push
mov
fwait
sbbb
jno
lret
bound
jae
imull
jbe
mov
outsb
repz
hlt
scas
mov
push
out
pop
fs
cltd
sbb
in
inc
xor
sahf
xlat
mov
mov
mov
out
aam
cltd
leave
xchg
repz
inc
mov
cmc
adc
sbb
adc
shrb
int
mov
dec
xchg
out
stos
lock
aaa
shrl
rcrb
iret
sbb
shll
dec
xchg
jg
stos
ljmp
pop
bound
out
cld
dec
sub
mov
sti
cli
and
das
jns
nop
jecxz
inc
pop
add
xchg
ds
sub
je
in
fs
xchg
lahf
mov
push
rclb
stos
push
lods
dec
cmpsl
jp
adc
mov
mov
sarb
call
in
pop
or
push
test
loop
jl
push
fcmovbe
pop
or
push
xchg
dec
sub
pop
popw
inc
adc
sbbb
and
lods
pop
cmp
ljmp
jbe
fidivrs
test
mov
orl
rolb
mov
adc
and
jbe
xor
cltd
shl
pop
aam
jbe
dec
hlt
cmpsb
xor
inc
lret
cwtl
push
and
aas
jg
int3
popf
jp
jle
xorl
adc
cmpl
mov
push
xchg
movsb
xorl
rorl
repnz
ret
adc
idivl
and
repz
and
or
jmp
outsb
inc
sbb
mov
push
nop
jnp
and
lret
in
dec
push
add
movsb
sub
cmp
pop
xchg
lcall
repnz
cs
mov
xor
xchg
push
push
jg
mov
sbb
loop
sbb
inc
pushf
dec
cmp
call
loop
xor
shrb
mov
rorl
cmpsb
out
mov
push
jmp
aad
ja
sbb
icebp
loopne
gs
jl
sti
rcl
push
dec
fidivrl
ja
pop
int3
add
cmpsl
dec
aas
inc
jmp
test
aaa
inc
aam
push
pop
lret
dec
sub
and
stos
and
fs
adcl
test
inc
lret
and
sub
and
sub
jmp
inc
mov
lea
mov
mov
out
cli
imul
inc
push
jno
jno
xchg
inc
arpl
mov
call
aam
mov
movsb
dec
push
stc
scas
fwait
xor
and
adc
dec
aam
pop
or
mov
cltd
or
cld
lea
out
inc
add
mov
ficompl
std
je
cwtl
repz
fmull
hlt
incl
bound
mov
mov
adc
pop
mov
xlat
popa
ja
movsb
cwtl
mov
mov
xor
sub
pusha
enter
fidivrs
lods
jle
jmp
in
das
and
mov
xchg
sub
adc
sbb
or
js
insb
mulb
int3
rol
jl
jne
fsub
jo
pop
mov
push
movsl
stos
pop
push
out
cmp
scas
mov
jg
insb
mov
mov
ljmp
addr16
xorb
je
add
jnp
inc
jbe
popa
clc
test
cmc
fwait
mov
and
sub
cld
push
mov
scas
bound
int3
xchg
mov
shlb
sbb
lock
pop
cwtl
jbe
stos
dec
arpl
out
gs
dec
cmp
sbb
aaa
lret
jle
bound
mov
in
push
mov
cmp
mov
or
xlat
cltd
icebp
sbb
push
dec
add
incb
imul
fdivrl
gs
fiaddl
and
push
mov
sarl
negl
mov
mov
cmpsb
and
into
push
xchg
fnstenv
mov
inc
int3
push
hlt
pop
cmp
xchg
pop
xchg
hlt
adcl
int
out
push
addr16
jecxz
mov
lock
or
stc
sbb
lods
mov
ret
sbb
sub
pop
iret
ljmp
xchg
orb
ljmp
xchg
push
inc
sub
fsubrs
cmp
cmp
dec
icebp
mov
std
mov
mov
mov
fcmove
mov
mov
aad
mov
or
leave
sbb
cmp
ss
push
jo
sbb
outsb
repz
outsb
adc
or
push
push
cmp
sub
fistl
mov
jno
int
sarb
xchg
push
jb
movsb
inc
push
dec
add
fcoms
adc
imul
add
and
cmpsl
add
push
pop
leave
sbb
cmp
push
mov
pusha
jecxz
ret
inc
xchg
xchg
loope
jge
and
or
scas
mov
push
lcall
testl
and
adcb
notb
movntq
jb
push
cmp
sub
int
cld
xchg
stos
cmp
cltd
iret
ret
xor
mov
xchg
pop
pop
mov
into
pop
outsb
mov
aaa
mov
sub
and
das
pop
or
mov
xor
push
lods
dec
jg
xor
cld
mov
mov
arpl
sub
stc
xlat
mov
lcall
in
pop
xchg
ljmp
jg
or
cvttps2pi
dec
xchg
or
or
loop
lock
adc
push
jns
cli
es
fildll
xchg
cmc
cwtl
ficoms
cmp
xor
mov
lods
lock
mov
mov
add
cmp
push
mov
lock
or
maskmovq
testl
jecxz
addl
jl
dec
jecxz
movsb
daa
aaa
rclb
xchg
scas
add
lods
sub
dec
jge
int3
cs
movsb
roll
push
mov
das
xor
repz
pushf
sbb
cmp
movsb
push
xor
xchg
test
add
mov
sbb
cwtl
pop
sbb
add
pop
ja
mov
push
scas
sar
insb
xor
push
inc
lret
outsb
xor
std
addb
sbb
cmpsb
mov
add
imul
mov
popf
mov
cli
mov
cmpb
ret
lock
lds
dec
cltd
add
jo
jbe
push
lods
in
stos
ds
and
ret
jge
mov
pop
pop
add
outsl
cs
fdivl
adc
xor
fisttpl
leave
ja
mov
mov
xchg
ds
cmp
inc
sbb
jl
xorb
and
push
cmp
push
popa
or
sub
aam
or
icebp
test
in
pop
and
or
lahf
inc
mov
gs
hlt
shlb
mov
fucomp
jmp
mov
out
fs
jae
push
mov
pop
leave
mov
inc
jg
xor
mov
fldl
leave
sub
xchg
loop
xor
jecxz
fwait
and
addr16
cli
leave
xchg
dec
aam
mov
imul
stos
mov
adc
dec
mov
in
out
pop
mov
movsb
pop
or
or
pop
sbb
ret
dec
mov
sti
test
movsb
or
xor
mov
push
push
mov
mov
test
in
inc
andb
pop
popa
nop
sbb
faddp
into
mov
mov
mov
pusha
cmc
dec
push
pop
lods
jns
mov
daa
inc
jl
sub
push
xlat
mov
pop
cmc
jl
aad
push
dec
fsubl
sbb
push
cmp
fdivrs
mov
in
adc
int3
hlt
jp
mov
mov
fnstsw
out
xor
xchg
fs
cwtl
repnz
cs
leave
test
mov
iret
pop
in
and
or
mov
adc
sbb
or
push
adc
mov
aam
xchg
cmp
inc
or
or
mov
leave
or
push
cli
jp
aas
cmp
add
add
mov
inc
mov
mov
int
enter
xor
mov
sub
in
loope
xchg
cmp
mov
outsl
mov
popf
imul
mov
cmpsl
icebp
add
repz
xchg
or
repnz
dec
or
fimuls
idivb
sbb
lcall
ljmp
les
push
or
stc
push
jo
or
pop
jmp
or
inc
add
jbe
push
adc
sub
xchg
dec
mov
loope
mov
push
dec
call
call
mov
orl
mov
xor
sbb
xchg
repnz
fiadds
mov
jg
fsubrs
sbb
cld
lods
icebp
xorb
jns
or
xor
mov
jne
lahf
add
xor
inc
mov
cmc
orb
mov
addr16
sbb
arpl
in
fs
adc
and
sti
cli
imul
push
xchg
fldt
cmp
insb
or
xchg
push
push
test
pop
out
cltd
jmp
dec
or
sbb
cli
icebp
popf
les
shrb
std
and
xor
jmp
mulb
add
adc
unpckhps
jl
sub
stc
mov
in
fiadds
add
in
pusha
stos
sbb
cmp
filds
incb
dec
mov
out
outsb
les
test
adc
add
inc
sbb
ja
movsb
sbb
mov
cld
inc
sbb
negl
nop
bound
push
add
and
xor
pop
jp
cltd
cwtl
cld
dec
lea
cmp
lret
icebp
cs
and
movb
repz
fnstcw
jns
adc
subl
mov
mov
jae
in
dec
es
sti
sbb
xor
mov
xchg
aaa
or
dec
mov
cld
out
mov
fs
push
or
adc
or
out
push
hlt
jns
sahf
dec
ja
inc
xchg
pop
mov
mov
jbe
add
mov
adc
and
mov
pop
in
mov
jmp
add
std
cmc
inc
xchg
or
jecxz
pop
push
lods
ljmp
mov
mov
rclb
or
inc
sub
push
cmp
mov
inc
inc
pop
out
loopne
push
xor
push
pop
fisttps
xchg
outsl
inc
in
js
andl
hlt
jmp
sbb
mov
sub
push
sti
ljmp
fnstsw
mov
jp
sbb
movsb
lret
xchg
in
nop
sahf
je
push
clc
pop
sub
mov
lods
je
adc
arpl
mov
mov
xlat
xchg
ja
mov
sbb
or
orb
sub
jno
leave
fbstp
insl
orl
aaa
pop
lret
xor
adc
push
inc
stos
cmc
shrl
cltd
mov
popa
jo
xchg
roll
into
loopne
adc
xchg
das
rorb
xorb
push
cmp
dec
mov
ljmp
jg
push
cmp
push
movsl
or
mov
xchg
xlat
mov
pop
mov
mov
push
mov
push
xchg
shlb
out
jmp
inc
addr16
sbb
and
xchg
fbld
popf
jmp
push
fwait
jle
lea
enter
lea
add
push
sbbl
dec
sbb
mov
jns
jno
mov
addb
movl
jbe
fwait
pop
adc
stc
dec
and
pop
repnz
or
lea
data16
aas
fmull
push
mov
or
xlat
mov
aad
jg
outsb
cmp
mov
add
iret
dec
sahf
xlat
push
and
inc
scas
xchg
push
xor
test
fidivrs
mov
ret
mov
jl
out
cmc
cmp
xor
test
and
mov
adc
nop
stc
jo
fcmovu
movsl
ja
cli
adc
cmp
push
mov
cmp
rolb
mov
mov
jno
into
fldl
lret
ds
jmp
lods
test
imul
sahf
sbb
add
cli
outsb
lcall
mov
add
sbb
into
sti
mov
push
pusha
pop
std
mov
jecxz
mov
adc
lds
stc
inc
sbb
jcxz
jmp
inc
push
orl
mov
popf
insb
ret
adc
xlat
sarb
ss
iret
lcall
nop
xchg
pop
xchg
jp
ljmp
std
sub
and
fdivrs
insl
ror
clc
add
int
inc
xor
out
pop
cmp
push
push
hlt
test
lods
in
out
movsl
sbb
sahf
pop
dec
scas
mov
or
repnz
jb
adc
mov
das
int
out
pushf
sti
imul
mov
inc
jbe
int3
inc
push
out
xor
xor
jns
xchg
mov
daa
sub
push
add
outsl
lcall
ss
adc
adc
popf
lods
mov
lret
sarl
inc
inc
cwtl
cmpsb
add
ret
pushf
adc
inc
cwtl
dec
push
and
ret
push
dec
jb
rol
ja
pop
push
mov
insb
insb
mov
jp
mov
into
repnz
test
sub
mov
out
jecxz
xchg
jo
mov
dec
rolb
xchg
inc
and
cltd
sbb
sub
test
ja
mov
rcl
imul
mov
jg
mov
into
rorb
sub
lcall
push
pop
xchg
int
and
nop
xor
dec
cs
inc
mov
hlt
and
push
imul
pop
jge
iret
mov
loope
sub
pop
gs
adc
push
ja
nop
mov
pop
ficoml
jle
pop
sub
jb
and
adc
lods
lods
aad
pop
stos
jg
push
jnp
int
les
inc
negl
adc
cmp
pop
ljmp
flds
mov
cltd
jl,pt
ss
out
iret
dec
daa
je
cmp
pop
popa
fidivs
cwtl
test
repnz
sub
sub
push
jecxz
imul
jno
and
in
pop
test
daa
jge
dec
or
sahf
xchg
out
pop
xchg
xchg
jle
jl
sbb
cmp
cld
popa
jmp
or
dec
pop
movsb
sbb
add
cli
cmc
xchg
sbb
das
add
mov
sbb
jmp
sub
pop
cmpsl
jg
lods
mov
outsl
call
add
sahf
mov
data16
and
hlt
rclb
lods
sub
xchg
cmpl
ds
add
add
mov
dec
shll
hlt
xchg
roll
es
or
mov
call
addr16
pop
cmpsl
pushf
sbb
scas
scas
pop
inc
push
rcl
ret
ja
leave
cltd
sahf
ficomps
push
fists
sbb
sti
push
sti
inc
pop
cltd
pusha
cs
outsl
stos
jo
or
test
cmpsb
pop
mov
movsl
xchg
loope
mov
xor
out
jmp
in
arpl
stc
sbb
adc
pop
xor
lahf
xor
xor
gs
cmp
push
int
aas
dec
inc
cli
push
push
test
pop
addr16
mov
xor
lock
adcb
jnp
loope
push
push
data16
cmp
cmc
psrad
jmp
pop
jl
pop
je
mov
xchg
pop
xor
flds
and
jge
jmp
fwait
pop
add
clc
cmp
jge
and
cmp
dec
pusha
inc
jge
add
and
cmpsb
lret
rcr
orl
sub
aad
jns
sarb
pop
jp
or
ss
add
xor
and
aad
and
les
cmp
sbb
cmp
adc
scas
mov
jnp
xchg
push
or
or
in
xchg
dec
mov
and
or
cwtl
mov
mov
movsb
dec
xor
dec
rorb
pop
movsb
sti
push
ljmp
mov
mov
pop
dec
mov
daa
dec
fwait
or
push
cli
xchg
shrl
jo
movsl
into
sbb
repnz
pop
je
add
fs
in
or
pushf
xor
jg
pop
mov
jecxz,pt
cwtl
adc
gs
pusha
fwait
aas
shlb
lock
lret
push
inc
adc
cld
je
mov
jnp
std
nop
jns
pop
mov
sbbb
jp
push
mov
stos
jo
jg
jno
lods
add
sbb
mov
bound
xchg
rcrl
or
ss
ja
adc
pop
test
aaa
mov
or
or
lods
jb
cmp
push
and
cmpsb
gs
jp
and
stos
negl
andl
cmp
lock
or
aad
insb
adc
push
sbb
and
jne
dec
mov
mov
inc
cmp
mov
or
or
les
adc
xor
mov
pop
stc
mov
mov
jle
mov
jae
popf
arpl
decl
mov
sbb
inc
inc
imul
in
fwait
jg
cmp
clc
inc
xor
inc
sbbb
push
lds
jns
testl
into
fsubs
mov
jecxz
movb
lock
je
es
xchg
pop
xchg
call
push
stc
sbb
cmpl
enter
popf
lods
int
jge
or
sub
fs
out
xor
test
adc
sbb
sbb
sbb
jmp
faddp
sbb
adcb
xor
rcrb
add
in
stos
lret
call
mov
inc
imulb
inc
rcrl
pop
rcr
pop
into
mov
adc
lods
push
mov
or
xor
daa
dec
ds
movsb
clc
mov
imul
push
mov
sub
call
addr16
je
dec
std
inc
enter
adc
fs
push
sti
adc
repz
cmp
sub
mov
imul
sbb
push
out
xor
sub
scas
inc
inc
inc
jle
fsub
jg
aam
dec
outsb
or
ljmp
ja
adc
lcall
fsubs
cmp
xor
or
cmc
xor
loop
add
push
adc
out
jo
pop
fwait
ret
push
sbb
faddl
xor
cmp
orl
fistps
loopne
test
mov
cmp
mov
adc
arpl
aas
pushf
add
test
fsubrs
test
bound
inc
jbe
jmp
jmp
in
adc
sub
xchg
pop
xor
and
arpl
ret
fimuls
inc
cwtl
jge
outsl
ljmp
cld
aas
repz
push
rcll
jmp
fsubl
pushf
pop
fistl
popf
lods
mov
sbb
pop
sbb
loopne
sbb
arpl
pop
adcb
pop
outsl
ljmp
cmp
and
sub
mov
fldcw
cmpb
scas
xchg
jo
xchg
mov
jecxz
or
mov
lds
js
mov
mov
sbb
sahf
sbb
sub
sbb
test
mov
call
or
addr16
cmp
push
jae
dec
jb
fcomps
jnp
repnz
push
outsl
jmp
adc
pop
xchg
mov
or
movsb
xor
sub
xchg
or
add
stos
insb
cmp
dec
add
in
out
push
pop
inc
test
out
xchg
out
jmp
jg
loop
jecxz
xor
aad
jmp
mov
push
int
push
or
cmp
push
add
and
and
mov
ljmp
xchg
cmpsb
ffree
dec
jp
add
mov
mov
iret
or
lods
inc
jnp
or
cmpsb
movsb
xchg
dec
mov
adc
push
in
or
adc
test
and
jmp
mov
je
jo
das
loope
dec
rclb
fadd
stc
mov
movsl
sbb
push
fidivrs
jecxz
addl
lock
mov
cli
jg
fcomps
lahf
sbb
dec
aas
xchg
bound
or
scas
mov
cltd
repnz
je
xor
mov
mov
addr16
lret
or
mov
in
and
sbb
fisubs
sub
cld
cmpsb
xor
jecxz
in
xor
test
xor
ret
int
fiadds
mov
dec
and
sbb
pop
jne
jnp
in
mov
aad
lret
or
cmpsl
xor
dec
push
out
fiadds
ror
sbb
cmp
pop
xor
ja
add
mov
int3
sbb
push
xchg
jae
andl
daa
xor
add
sbb
in
fldl
cmpsl
inc
adc
std
imul
jg
shlb
cmp
and
lret
frstor
sahf
push
xchg
fs
ret
imul
outsl
xor
sub
add
stos
fstl
xor
mov
rcll
adcb
sub
test
inc
or
andl
pop
scas
pop
pop
loop
inc
sub
sub
push
test
push
mov
ljmp
enter
int3
jmp
stos
lcall
and
sub
xchg
mov
push
pop
sbb
jae
pop
xor
xor
outsb
dec
push
and
lret
jl
cld
test
jae
lods
jnp
inc
pop
jnp
adc
sub
sub
pop
out
dec
pusha
scas
inc
dec
jbe
negb
lock
push
inc
outsl
sub
or
inc
in
pop
mov
adc
call
inc
scas
loopne
mov
mov
sbb
jmp
pop
lock
shr
or
cmp
int3
cld
dec
mov
lods
incb
or
jl
push
jle
and
leave
xchg
cmpsl
xor
fisubrs
imul
inc
xchg
mov
mov
jmp
mov
mov
ret
inc
push
adc
call
push
in
jnp
push
push
adc
mov
outsb
fsts
xor
mov
add
jb
and
push
je
xor
inc
mov
xchg
cmp
lret
add
push
add
std
mov
je
push
mov
push
dec
cltd
shrb
adc
rorb
fnsave
es
push
idivb
jo
pop
in
outsl
xrelease
stos
into
and
and
xchg
cmc
icebp
mov
xor
adc
and
mov
aaa
insb
mov
lahf
hlt
lcall
mov
cwtl
repz
jp
inc
scas
shrl
lock
mov
scas
xor
push
pop
scas
lcall
test
mov
movsl
cmpsb
or
jecxz
cmpb
adc
ds
mov
test
lea
lods
imul
sub
cli
test
pusha
mov
cmp
cmp
jae
add
shrl
cli
xchg
jp
cltd
aas
rorb
push
pop
push
jo
orl
aas
jo
cmp
pop
mov
push
push
movsb
jne
ja
push
loope
mov
call
mov
xor
mov
pop
aam
mov
push
stos
sbb
add
push
rolb
cmp
fidivs
xchg
adc
call
test
out
roll
incb
nop
mov
adc
pop
mov
xchg
popa
push
movsb
test
cs
popa
or
daa
inc
or
enter
dec
std
movsl
rcll
push
outsb
ret
mov
sahf
mov
test
jae
fwait
mov
or
cmc
movsb
pop
push
jg
fbld
icebp
js
fsubr
mov
or
pop
sbb
dec
pop
and
mov
push
std
pop
mov
scas
mov
fwait
std
xchg
xor
and
das
mov
scas
in
orb
aaa
rcll
addr16
rolb
push
inc
test
inc
sub
pop
call
lcall
xchg
into
sbb
movsl
jbe
lcall
mov
movsb
flds
cmc
cmpsb
jae
xchg
push
xor
inc
cs
addl
jno
inc
ret
lcall
dec
sub
imul
sbb
nop
lret
lock
out
iret
mov
push
dec
push
mov
jl
hlt
adc
sub
iret
ds
jnp
dec
add
lcall
add
das
pop
xorl
mov
lds
loopne
dec
xor
stos
insb
arpl
and
test
in
inc
pop
pop
outsb
arpl
push
mov
ss
inc
jp
jne
pop
addl
iret
mov
hlt
repnz
negl
stos
lahf
lock
xor
xorb
sbb
fldt
test
pop
sub
cld
xchg
repz
orl
int3
xor
cmpsl
ljmp
inc
test
pop
and
add
mov
imul
lods
inc
sti
lcall
lcall
sbb
or
mov
fbstp
jnp
push
adc
int3
cmp
dec
fildl
sti
int3
stos
xchg
ftst
push
int3
lcall
les
arpl
call
xor
ds
mov
adc
sbb
fwait
mov
jnp
adc
inc
sbb
sbb
imul
push
or
dec
mov
mov
xchg
jne
negb
bound
pop
mov
jp
pop
movsl
cmc
pop
jae
out
pop
hlt
jmp
xchg
cmp
lock
lcall
loop
xchg
repz
int3
dec
and
mov
ss
inc
xchg
cld
mov
dec
jge
leave
stos
ret
out
into
js
fwait
push
cmpsb
pop
fildll
dec
test
bnd
xlat
fs
call
mov
cmpsb
shlb
xchg
test
xchg
lcall
or
jg
jmp
loop
jns
leave
je
int
push
das
jo
adc
push
cmc
scas
cld
push
roll
xchg
js
adc
xchg
aaa
pop
mov
sarl
pop
stos
ss
orb
pop
sbb
sahf
cmp
or
mov
int3
mov
rorb
add
add
stos
es
sahf
clc
cmc
mov
outsb
inc
push
out
fildl
sbb
xchg
dec
sub
fists
cwtl
pop
repz
xchg
push
cmpsb
fstps
inc
in
jle
std
dec
jle
mov
jle
or
jge
pushf
loopne
xchg
fldt
inc
test
lcall
pause
mov
ja
sbb
dec
jg
aam
adc
mov
scas
add
ficoms
incl
stc
inc
enter
lds
pop
and
outsl
pop
arpl
xchg
scas
adc
xchg
jmp
xchg
dec
xchg
xor
sti
cmpsb
dec
and
mov
repnz
shrb
pushf
or
mov
ja
push
mov
fwait
mov
outsl
scas
cmpsb
daa
test
jbe
cwtl
icebp
xor
movsl
leave
pop
lahf
roll
ja
jge
and
jmp
pop
xchg
in
xorl
imull
es
lret
rcrl
push
out
jp
je
popf
sbbl
call
jbe
stc
cmp
and
incl
xor
jg
push
mov
adc
les
adc
cli
mov
movsl
sahf
mov
cmc
ss
jae
dec
xchg
cld
cmpsl
or
mov
es
movsl
inc
nop
cwtl
adc
dec
add
lret
cmp
push
nop
imul
dec
cmp
pop
sub
rcrb
dec
push
xor
sbb
std
nop
add
in
jmp
sub
sti
outsl
in
push
ds
jne
mov
adc
sub
lea
mov
or
jns
mov
dec
std
cmp
mov
pushl
xchg
jae
es
sub
cmp
adc
ss
pusha
add
push
aad
sbb
das
sbb
daa
pop
data16
pushf
repnz
push
das
jo
and
cmp
iret
xchg
loopne
aaa
xchg
test
shlb
lret
fucomip
dec
cli
nop
mov
cmp
inc
orb
test
mov
mov
jmp
out
stc
or
lahf
mov
leave
data16
pop
int3
cltd
or
in
jp
adc
push
xor
jne
xchg
pusha
scas
mov
cwtl
cmp
icebp
adc
add
mov
cmp
pop
jg
or
dec
inc
imul
sub
jecxz
shll
cmp
cmpl
inc
sub
cwtl
or
pop
push
scas
popf
les
inc
repz
daa
lds
orb
xchg
hlt
inc
fwait
fwait
mov
mov
into
mov
cmp
cmp
jl
aad
xorb
js
push
jmp
inc
mov
pop
divl
fs
mov
mov
ja
out
add
jmp
sub
pop
les
cmc
mov
add
imul
and
es
ljmp
xchg
sbb
inc
incb
sbb
pop
test
pop
xor
mov
sub
adc
push
gs
or
loope
mov
adc
aad
in
xlat
inc
test
out
loope
aas
mov
xchg
mov
test
sahf
lods
cmp
mov
test
int
push
fmull
test
dec
popa
xorl
jmp
push
jp
xchg
push
aaa
dec
inc
aas
mov
mov
inc
loopne
fcmovb
cli
shrl
sub
jecxz
or
xlat
lcall
cli
xchg
nop
jp
popa
add
int3
scas
mov
jg
loope
lahf
push
sub
lds
cli
jmp
stos
rcrl
addr16
add
mov
pusha
dec
stos
push
push
aam
jmp
inc
adc
inc
rorl
in
jae
dec
test
movsl
out
out
or
xor
out
je
xlat
xchg
ret
arpl
stos
or
dec
mov
jge
out
in
packuswb
push
aaa
scas
pop
mov
xor
mov
jo
dec
jno
pop
ja
divb
push
pop
sbb
ret
ja
outsl
cld
mov
lahf
cmp
ja
popa
outsb
lock
dec
cmp
sbb
adc
sti
or
cmp
xchg
or
dec
lock
mov
sti
and
adc
subl
fimuls
dec
loopne
sub
dec
into
aad
add
jbe
lods
lcall
mov
xchg
popl
lods
imul
jbe
fsubrp
data16
and
into
push
jle
sbb
dec
sbbl
repz
sub
ffreep
adc
push
xchg
sbb
pusha
mov
dec
pushw
out
cmp
nop
and
pop
push
adcb
jmp
mov
pushf
cmp
mov
js
out
int
cmpsl
lcall
dec
sub
js
jl
xchg
lret
lock
ss
data16
repz
add
add
data16
jb
adc
xchg
xor
in
sub
lds
das
or
mov
inc
mov
adc
loop
stc
ret
ljmp
je
push
xor
adc
ss
and
cmp
pop
xchg
cmp
cld
pop
mov
mov
loopne
rcll
aam
outsl
inc
mov
cmp
data16
pop
and
mov
test
loopne
jno
mov
mov
cld
filds
out
push
hlt
sti
xchg
je
lcall
fdivrl
mov
sti
and
gs
icebp
dec
insl
out
clc
jns
add
pop
inc
mov
push
xchg
and
aad
jb
inc
inc
aaa
push
clc
xchg
popf
pop
mov
dec
and
leave
nop
std
xor
mov
xchg
in
movbe
cmp
idivb
lds
xchg
sbb
adc
sub
bswap
lret
dec
scas
lahf
cmp
jge
xchg
movsb
js
xor
push
hlt
or
inc
inc
mov
sub
lods
push
mov
mov
jae
into
cltd
inc
stos
cmc
xchg
inc
or
jns
je
aam
aaa
pop
sahf
lea
sub
xchg
into
lret
and
out
hlt
shrb
out
inc
scas
adc
mov
mov
je
pop
cld
lds
ds
in
mov
sbb
sub
push
and
icebp
and
mov
xor
repz
sbbb
xor
push
adc
mov
xchg
sti
xchg
jmp
dec
sbb
cmovno
fdivrs
pop
sub
rclb
xchg
adc
call
mov
inc
inc
push
sbbb
xchg
sub
mov
mov
imul
das
adc
jb
daa
add
pop
mov
pop
xchg
div
icebp
shrb
xchg
cmp
lds
inc
aad
aas
aam
aaa
sbb
xor
sar
inc
cld
pushf
inc
out
inc
js
orb
movsl
mov
in
jmp
or
or
jle
enter
out
push
or
push
xlat
ss
push
fldenv
js
inc
popf
mov
jge
cmp
mov
mov
or
pop
push
arpl
div
pushfw
outsb
jbe
mov
std
fwait
pop
xchg
xchg
pop
pop
jne
clc
jno
sub
stos
adc
movsb
loop
cmpsb
pop
pushf
lods
inc
or
jge
in
jnp,pt
pusha
jb
rclb
hlt
stc
mov
arpl
push
add
mov
fisttpll
cmpsb
mov
adc
add
inc
frndint
outsl
xor
mov
pop
lods
pop
or
xor
cs
push
movsl
and
out
lahf
and
jne
int
mov
fnstenv
mov
sbb
xchg
cltd
mov
cld
int3
icebp
jo
xor
es
push
xchg
sahf
loope
ljmp
jnp
adc
xchg
icebp
inc
js
jle
jns
dec
fbld
loopne
fidivl
mov
mov
dec
iret
mov
into
cmp
ret
jmp
pop
iret
notl
roll
fwait
mov
jb
or
ds
test
cmp
adc
jge
cwtl
cmc
sbb
jne
mov
jp
cmp
jecxz
mov
inc
pop
sub
int
pop
mov
sbb
inc
adc
addr16
pop
adc
cmc
imul
dec
loop
int
cli
mov
mov
or
and
in
cmp
mov
inc
in
fs
addr16
or
push
cld
lcall
scas
mov
sbb
movsb
push
mov
adc
mov
or
mov
fimuls
mov
xchg
and
and
cltd
inc
pushf
pushf
aas
push
and
cmp
call
out
mov
stos
cmp
cmp
push
in
pusha
mov
jbe
mov
adc
fsub
clc
mov
mov
repz
cmp
mov
sahf
out
inc
mov
inc
test
insb
mov
lret
mov
jmp
ds
dec
sahf
shll
cmp
lea
push
push
inc
insb
inc
cmpsl
mov
loopne
push
out
imul
lock
lods
jns
sbb
mov
adc
jb
imul
sbb
sahf
clc
popl
jb
inc
sub
adc
and
xchg
dec
ds
test
ficoml
je
dec
loopne
enter
shlb
fnstenv
leave
fs
pop
in
into
loopne
mov
pushf
fucomi
pusha
ja
inc
inc
jmp
pop
cmpl
cmp
push
sbbl
outsb
es
lea
fildll
adc
popf
sub
xchg
sub
xorb
mov
adc
je
jp
mov
cli
loop
push
ss
add
out
mov
stos
enter
pop
or
scas
bnd
and
pop
lods
sar
dec
inc
gs
cltd
aaa
push
vprotd
test
shrl
and
shr
mov
lea
sarb
mov
adcb
scas
or
test
lock
pusha
cmp
enter
or
inc
sub
cmc
les
xchg
mov
cwtl
xchg
filds
test
xchg
out
popa
fwait
leave
scas
add
mov
or
in
test
mov
sbb
mov
lods
insb
pminsw
sbb
cmpb
pop
stos
jae
xor
add
xor
and
daa
pop
js
xor
pop
pop
shlb
fwait
xor
test
or
push
xchg
pop
jl
push
pop
imul
dec
in
push
in
data16
jle
inc
loope
add
dec
faddl
and
iret
out
mov
mov
add
mov
sbb
or
and
add
addr16
es
xor
fnstcw
sub
out
xor
pop
push
mov
mov
xchg
jmp
ljmp
imul
xor
mov
or
jb
dec
out
mov
xchg
sub
lret
push
popa
nop
and
inc
pop
or
jbe
adc
jo
fs
sbb
inc
js
jmp
orl
fsubs
sbbl
or
incl
loope
in
mov
sbb
sbb
push
das
jns
xor
jb
adc
xchg
sbb
mov
arpl
adc
aas
movsl
insl
lahf
pop
leave
mov
in
dec
xor
shll
pop
scas
out
fildll
push
mov
pop
call
test
std
cmc
movsl
mov
mov
stos
shrl
les
add
jbe
cltd
jecxz
lahf
or
lds
xchg
mov
stos
fnstenv
rcrl
mov
addr16
rcrb
stos
in
fidivrs
cmp
out
das
xor
pop
sub
ret
mov
imul
outsb
nop
shrl
sub
fimull
xchg
sti
sbb
dec
dec
sahf
lds
nop
or
dec
lea
add
add
mov
mov
sbb
fs
sbbb
xor
mov
mov
mov
dec
inc
mov
popa
mov
int3
insl
or
jmp
mov
popa
push
jne
sbb
add
in
mov
mov
aad
pop
jb
into
in
sbb
fucomip
in
lret
test
out
pop
rcrl
and
mov
mov
xlat
xchg
jnp
push
aam
test
jns
cmp
sbb
mov
pop
movsb
mov
and
push
lea
inc
repz
inc
fisubl
aaa
mov
push
mov
inc
mov
sub
fcmovnu
push
outsl
imul
xchg
inc
and
xchg
inc
and
enter
or
cwtl
lret
jbe
iret
add
add
jnp
movsb
mov
push
ficoml
fs
icebp
dec
cmpsb
test
clc
xchg
loope
ljmp
arpl
mov
xorb
outsl
mov
fnstsw
jmp
xchg
inc
dec
insb
push
sub
mov
mov
mov
pushf
clc
mov
fisubrl
pop
lods
push
or
enter
rorl
mov
mov
inc
fsubrs
sub
sbb
pop
arpl
mov
sbb
jo
pop
xchg
xor
and
stos
test
lock
jnp
imul
movsl
jo
push
or
test
shll
fwait
lods
inc
lret
sbb
lea
mov
pop
enter
cltd
in
and
in
lods
add
out
dec
push
sar
jecxz,pn
add
repnz
bound
data16
jecxz
cmp
mov
xchg
sub
mov
xchg
mov
inc
divl
lcall
divl
aaa
arpl
pop
jne
or
fnsave
js
mov
pusha
insl
add
inc
add
sldt
rclb
add
adc
add
xchg
add
inc
add
add
adc
inc
add
add
cli
dec
jmp
push
mov
jl
lahf
push
stc
je
insb
cmp
xor
aaa
insb
outsl
cmp
flds
sub
ficompl
movsl
and
aas
pop
pop
ret
andl
xchg
adc
inc
inc
pop
arpl
jmp
xor
xchg
jg
push
subb
mov
or
mov
inc
mov
mov
push
psrlw
fcmovbe
or
test
into
js
pop
aam
int
nop
jne
or
lea
push
jmp
jbe
test
aad
pop
ljmp
inc
mov
daa
enter
out
dec
mov
out
cs
mov
stos
lret
adc
jo
sub
hlt
js
clc
movsl
bound
xchg
lds
movl
test
sub
jns
outsb
fdivl
ss
sub
cmp
dec
cmpsl
mov
pop
cmp
loope
mov
scas
push
imulb
or
dec
inc
and
sarb
pusha
push
sarl
pushf
and
mov
ss
mov
sub
imul
loopne
jo
mov
push
test
stos
push
mov
inc
mov
mov
xchg
sbb
pop
jl
scas
mov
lret
xor
lds
xchg
stos
movsb
jle
in
push
jg
xchg
xor
add
cmp
xor
mov
pop
ficoms
push
sub
popa
inc
arpl
popa
mov
imul
out
fwait
and
mov
gs
push
jp
faddp
sbb
testl
cmp
dec
sbb
xor
xor
mov
clc
les
xor
daa
lea
ret
lcall
stc
and
adc
cmpsl
imul
jnp
lods
test
adc
negb
adc
nop
andb
fwait
pop
imull
scas
push
int
pop
out
sbb
dec
jmp
mov
stc
test
adc
inc
ret
int3
jb
pop
sbb
mov
or
int
insb
xor
imul
in
mov
push
addr16
sub
hlt
push
test
mov
sarl
in
or
mov
stos
sbb
icebp
pop
cltd
leave
mov
mov
int
adc
scas
inc
pop
in
adc
sbb
repnz
mov
ss
lods
pop
pop
das
and
movsl
lock
icebp
test
leave
mov
sub
jnp
and
or
out
jmp
sub
ljmp
jmp
xor
xchg
filds
pop
mov
and
mov
xor
add
mov
out
jae
inc
insb
pop
sbb
cltd
sub
mov
test
je
push
cmp
outsl
or
mov
movsl
xchg
out
push
pop
xchg
test
in
mov
ja
xchg
lahf
in
jge
repnz
adc
xchg
sub
adc
fldl
in
push
or
dec
data16
cmp
mov
jl
cltd
pop
in
mov
rcrl
lods
inc
sub
movsb
inc
cli
mov
cltd
pop
dec
aam
pop
pop
test
fcomip
adc
jno
lret
sub
in
imul
pop
cmp
xchg
fstpt
out
mov
jo
stc
sub
scas
loop
xchg
imul
out
xor
inc
hlt
notl
ljmp
ja
mov
and
adc
cli
xor
sub
insl
cmc
xchg
in
mov
jae
pop
sbb
jns
ret
in
push
cmc
mov
divb
dec
lret
mov
push
insb
mov
lods
shl
cli
mov
popl
adc
push
jnp
inc
push
cmp
xor
jle
loop
dec
pop
jbe
sub
xchg
sub
fs
sbb
adc
mov
mov
loopne
and
call
les
lods
fisubrl
ljmp
and
or
dec
js
popa
shlb
mov
mov
mov
add
jnp
inc
xor
stos
insl
adc
jne
mov
orb
fdivp
test
test
xchg
in
in
push
or
bound
xlat
sub
jp
adc
das
pop
mov
imull
adc
in
clc
dec
dec
dec
arpl
xchg
ja
into
cmp
je
lret
in
mov
loopne
adc
pop
mov
sbb
bound
mov
adc
pushf
aad
xlat
mov
dec
movsb
adc
push
lds
aad
rcrb
shl
pop
inc
dec
insl
lret
mov
mov
dec
cmp
mov
mov
xor
andl
mov
out
lret
pushf
mulb
pop
xor
rcrb
pop
loope
fs
jp
and
xchg
mov
divb
out
lods
pop
popa
jle
cli
in
push
jns
fwait
or
roll
clc
jmp
adc
jne
stc
mov
repnz
loope
xlat
and
xchg
test
pop
cmp
fwait
les
ljmp
lcall
cmp
in
leave
mov
nop
jp
xchg
int3
pop
stos
pop
shll
xchg
lds
sub
loop
mov
daa
aaa
fstps
in
push
fcoml
pop
fidivs
inc
icebp
and
rolb
sub
js
pusha
nop
xor
jno
cwtl
clc
pop
push
inc
pop
and
bound
cmpsb
icebp
iret
pop
daa
rolb
ficoml
inc
stc
ds
ret
lret
ret
cli
fstpl
in
add
test
addb
pop
sbb
insl
dec
mov
aam
jnp
sub
in
adc
nop
push
or
fstp
xchg
jb
or
mov
or
leave
sbb
sub
mov
and
or
cmp
xor
stos
sahf
pusha
mov
push
inc
mov
or
dec
xlat
pop
sbb
dec
mov
lods
and
push
push
fstl
inc
push
or
xor
push
mov
mov
inc
mov
push
add
cli
push
push
jnp
ret
inc
cmp
bound
mov
dec
xchg
jmp
rorb
stos
clc
stos
das
je
jle
insb
and
mov
subl
loopne
mov
aaa
ljmp
cmp
jg
jecxz
adc
je
adc
sti
jl
pop
lods
pop
jno
jl
push
pop
clc
enter
xor
mov
pop
mov
sbb
cmp
jnp
bound
sbb
subl
mov
jg
int3
or
bound
pop
push
pop
insl
jae
out
lahf
out
cmp
into
aad
push
xor
dec
lahf
ror
jbe
lea
gs
scas
mov
add
mov
int
jnp
insl
lods
les
push
xchg
outsl
mov
push
stos
push
lock
sub
push
mov
fistl
adc
mov
push
imul
jle
or
rcll
rclb
and
in
add
movsl
cmp
lods
insb
mov
rcrb
out
or
and
add
ret
popa
lcall
insb
sti
add
nop
scas
and
iret
aaa
fs
cltd
adc
fisubrs
out
js
dec
and
pop
sub
push
cmp
dec
sub
leave
sbb
pop
fcoms
hlt
ficoml
and
adc
mov
sub
push
mov
test
lods
bound
and
push
rcr
jne
xorl
add
push
sbb
or
dec
cmpsl
xchg
mov
xor
cmp
pop
dec
pop
in
add
loope
mov
imul
sbbl
or
insb
lods
shlb
mov
test
ret
sarl
pop
sub
sub
cmpsl
decb
push
test
add
mov
aad
call
fdivl
mov
ljmp
jmp
mov
xchg
lods
addr16
or
sbb
or
jns
mov
push
loopne
jno
sub
insb
stos
test
outsl
fucomi
leave
scas
popf
jp
cli
insb
lret
push
jecxz
mov
adc
adc
ds
xor
push
stos
test
or
sahf
xchg
push
std
ret
ds
ror
ljmp
sub
negl
cmp
and
lret
in
xchg
ds
stos
and
jl
repz
cmp
je
push
pop
jae
sahf
out
pusha
jp
jns
lock
adc
inc
push
xor
into
leave
je
push
inc
shll
jno
test
mov
inc
adcb
faddl
rep
push
mov
and
lcall
stc
fdivrl
lea
mov
pop
notb
sbb
mov
adc
inc
daa
push
cmpsb
lret
push
lret
xchg
pusha
cmp
pop
add
into
xor
daa
enter
cmp
fstl
push
fucomi
adcl
js
out
fsts
stc
data16
jns
adc
mov
insl
addr16
xchg
in
fwait
sub
test
lret
ljmp
andl
pop
push
int
add
out
lahf
js
out
sbb
inc
mov
cmpsl
gs
bnd
dec
push
test
gs
push
rorb
scas
cmp
pop
sbb
adc
fidivrs
ror
orb
pop
nop
aad
sub
pop
mov
sbb
mov
insl
mov
mov
mov
and
in
cmp
push
or
icebp
push
ja
adc
push
mov
dec
adc
jo
test
ret
daa
lock
sbb
cli
add
or
lea
dec
sbb
lods
ret
int3
insl
jp
mov
add
and
int
pop
inc
cmp
das
mov
jmp
pop
jb
and
nop
mov
or
mov
mov
les
dec
jge
cli
push
and
mov
daa
insl
lock
test
jae
test
xchg
xchg
lcall
pushf
mov
dec
inc
cmp
out
ret
out
call
enter
cmp
not
jnp
cmp
adc
sub
xlat
sub
push
fildll
mov
addr16
pop
or
push
jmp
xor
inc
pop
out
sbb
pop
add
pop
push
jge
pusha
divl
push
into
cmp
mov
mov
mov
out
dec
inc
cmovnp
les
push
add
inc
ret
movsb
push
mov
sbb
adc
or
aaa
scas
mov
jg
lahf
push
hlt
mov
pop
stos
scas
cmp
jae
jbe
pop
mov
sahf
ret
bound
mov
jne
repnz
sar
xchg
jp
sub
fs
mov
xchg
lods
test
aam
cli
sub
cmp
testl
insb
das
dec
mov
in
out
inc
pushf
pop
in
adc
cwtl
sbb
push
fucomi
cmpsl
adc
insl
xchg
cld
les
fisubrs
cmp
sbb
xchg
fsubl
ja
pop
loopew
iret
movsl
sbb
xor
xor
jg,pt
push
dec
aad
mov
jg
shll
cmp
and
lods
dec
les
push
lret
inc
test
fldenv
jl
dec
pusha
add
pop
ds
mov
lock
inc
jmp
xchg
jnp
add
popf
jns
adc
jp
inc
js
sub
insl
idiv
xor
aas
or
fisubs
inc
adc
lahf
js
sbbb
mov
sbb
divl
or
loopne
dec
loopne
stos
das
gs
mov
cmp
push
mov
mov
in
test
or
in
out
js
loopne
or
xor
dec
shlb
xor
lods
xor
les
idivl
fistpl
rorl
dec
mov
outsl
je
jge
push
jge
dec
call
sbb
cmpsb
cmp
outsb
stos
ja
test
sbb
cmpsb
jle
sbb
or
aas
imull
dec
stc
les
mov
subl
xchg
outsl
add
jnp
adcl
pop
pop
je
adcl
arpl
je
scas
add
repnz
inc
repz
mov
andw
cmp
mov
ret
daa
stos
mull
in
pop
in
mov
xor
mov
and
xlat
adc
dec
scas
pop
scas
in
fbld
testb
sub
xchg
jge
dec
or
loop
leave
xchg
cmp
test
mov
mov
push
xor
sub
shl
fisubl
aam
inc
imul
pop
push
ret
mov
sub
pop
sub
int
inc
jecxz
push
arpl
jno
dec
popa
rclb
mov
inc
mov
pop
or
outsl
pop
pop
test
movsb
arpl
xorb
fistl
pop
cld
lods
jno
inc
loopne
and
fstp
and
xchg
lahf
das
scas
daa
dec
ljmp
jmp
jno
mov
adc
std
les
push
xor
sbb
sub
outsb
pushf
add
mov
xor
out
das
movsb
push
into
xor
jbe
cmp
dec
in
js
push
pop
push
lret
cld
cld
in
sub
xchg
inc
inc
jp
insl
mov
pop
xor
jecxz
rcl
mov
jg
add
imulb
lcall
jecxz
cmc
faddl
xlat
inc
push
adc
imul
aad
mov
add
and
nop
orb
xchg
jb
nop
sbbb
movsl
stos
test
mov
addr16
cli
hlt
cs
insl
aas
mov
out
pop
pop
mov
cmp
xor
or
in
xchg
leave
ja
xchg
or
pop
dec
movsb
insb
push
add
add
pop
in
subl
in
rcl
clc
je
xor
push
mov
adcl
imul
or
jbe
popa
xchg
sti
hlt
movsl
add
gs
rorb
xchg
sub
push
stos
jbe,pt
push
ljmp
fdivr
popa
push
inc
jne
adcl
fmulp
pop
and
punpckldq
test
addr16
cmc
pop
shlb
adc
cmp
mov
test
dec
adc
fdivrl
ret
add
push
xchg
adc
cmp
daa
lock
xchg
dec
push
fidivs
test
sbb
mov
es
cmp
inc
in
notb
xchg
jo
dec
mov
jmp
loope
pop
fdivrs
add
rcr
sbb
dec
ljmp
cmp
mov
mov
or
pop
mov
call
lret
into
mov
call
xor
dec
or
mov
popa
lahf
pop
out
fwait
scas
daa
jns
jmp
loope
out
and
movsb
sbb
add
ja
or
mov
pop
and
icebp
int3
inc
sub
lret
add
and
inc
test
mov
sbb
jge
fcomps
jmp
add
rorb
int
mov
dec
cmpsb
imul
push
nop
mov
lret
sahf
sti
dec
mov
in
xor
jne
dec
and
jae
sub
and
arpl
call
shrl
in
roll
xchg
xlat
icebp
add
js
mov
mov
fmulp
sbb
sti
lea
inc
cmp
add
testb
xor
lcall
dec
stos
adc
cmp
lods
xchg
push
mov
test
in
push
mov
push
fsubrl
fisttps
insl
adc
movsb
rcrl
sub
mov
flds
call
or
push
push
pop
or
dec
popa
adc
jne
cmp
inc
mov
dec
jno
push
pop
cmp
jne
loop
mov
xor
jp
dec
cmpsl
inc
jp
xor
fsubrl
or
je
jge
iret
jne
sbb
lods
or
pop
jne
and
call
mov
sbb
mov
xorb
and
iret
popf
push
add
ret
inc
xchg
call
push
xchg
lahf
stos
xor
jl
lret
jmp
push
cmpsb
sbb
adc
mov
pop
push
nop
out
xor
mov
js
pop
sub
mov
loope
push
jecxz
test
jns
adc
jmp
int3
inc
cmp
test
push
lret
clc
cmpb
cmpsl
adc
cmp
xchg
jbe
dec
out
adc
clc
lret
mov
sti
mov
jge
cmp
xor
je
sbb
sub
loope
pop
jl
orb
in
sub
mov
lret
pop
jo
jno
inc
cmpsb
push
pop
rcrb
pop
int3
xchg
dec
movsb
inc
sbb
icebp
cmp
add
mov
mov
ret
cmp
mov
xchg
and
clc
mov
dec
int3
fs
movsl
xlat
insl
push
xchg
pop
mov
fbstp
sub
push
in
bound
pop
dec
or
or
jae,pn
push
lds
mov
lea
movsb
roll
dec
mov
mov
pusha
movsl
lock
les
push
jo
xchg
clc
stos
lods
mov
stos
das
pop
in
jg
inc
rcrb
dec
and
xchg
icebp
sbb
jb
in
in
jp
lods
gs
lock
lds
int3
inc
pop
fnstsw
shlb
popa
fistpl
lahf
out
push
add
xorb
sbb
push
xor
or
pushf
add
je
fwait
jp
sti
pop
xchg
add
int
les
scas
cmp
mov
push
rcrl
xor
mov
cwtl
ret
sbb
aad
lret
cli
cmpsl
mov
jg
data16
gs
jbe
out
lcall
push
not
pop
sub
in
push
lods
sbb
rcrl
movsb
lea
out
push
negb
push
ljmp
aad
lcall
or
xchg
test
mov
sbb
ret
or
push
fildl
jg
jns
xchg
or
inc
popa
mov
lret
sbb
xchg
hlt
inc
aam
aas
jnp
outsb
mov
leave
or
jb
or
mov
sub
incb
mov
iret
mov
sbb
js
mov
jge
cmp
xor
or
ss
xor
sub
repz
pop
sub
adc
lret
loope
pop
ds
push
mov
adc
push
jnp
ret
ret
cltd
jecxz
test
jle
mov
xchg
mov
pop
push
fnstenv
sub
cmp
xchg
stos
add
je
sbb
out
xlat
cwtl
adc
shll
sub
mov
mov
test
test
and
push
cmc
ret
mov
enter
mov
push
xor
mov
jmp
mov
pop
push
cwtl
xor
packsswb
adc
pop
add
ja
leave
out
int3
and
fsubrl
sbb
mov
loope
in
or
pop
xchg
in
mov
pop
mov
movsb
popf
into
mov
das
sbb
sahf
imul
push
stos
leave
jae
adc
inc
push
push
and
sbb
fbstp
jge
sub
pop
loope
mov
int
push
sub
cmp
pop
aaa
push
or
push
cmp
xchg
push
mov
adc
mov
jl
dec
test
add
jne
mov
xor
shll
jno
rcl
imul
arpl
sub
addb
sbb
sub
jnp
mov
inc
je
xor
fnstcw
jl
popl
push
rorb
sbb
aaa
mov
and
add
sub
sub
div
std
inc
lret
xlat
sbb
loop
dec
fldt
fisubl
jmp
notb
xor
repz
mov
cmpsl
sbb
sbb
aaa
mov
mov
jecxz
sarl
lret
dec
mov
pop
lods
jbe
push
ljmp
cmp
mov
movsl
and
rep
data16
test
andb
inc
psubsw
pop
inc
fimuls
jno
dec
mov
das
out
add
insb
cmp
sahf
mov
and
mov
test
in
lea
cmp
gs
enter
lret
mov
sti
shll
sub
popf
ret
jns
enter
xchg
push
mov
and
pop
or
and
imul
and
or
lahf
xor
mov
fdivs
push
sahf
lret
sub
pop
lret
mov
rol
adc
sbb
jnp
sbb
stos
aam
jbe
cli
or
or
into
pop
mov
jge
and
mov
fists
dec
jmp
xor
and
mov
imul
mov
adc
les
lds
mov
cwtl
loop
mov
or
cmp
lds
pushf
xchg
gs
mov
clc
fdivrl
roll
and
add
ljmp
mov
pop
sbbl
and
pop
inc
fnstsw
adc
fs
sub
xchg
std
mov
push
jo
sbb
icebp
xor
inc
mov
das
adc
cmpsl
addr16
mov
xchg
cmp
pop
in
into
inc
add
inc
fdivrl
mov
adc
xchg
andl
cs
sub
sub
mov
mov
pop
mov
mov
jmp
leave
lea
repnz
mov
popf
add
sbb
mov
mov
iret
mov
in
cmpsl
mov
add
jns
test
add
rcrl
rcll
mov
cmp
ret
xchg
xor
addb
xchg
inc
fs
int
push
std
push
adc
dec
out
cmpsl
movsl
rorb
mov
push
dec
scas
aad
cmpsl
pop
mov
loopne
jo
fucomip
orl
xchg
xchg
hlt
negb
and
ljmp
lds
mov
ror
jae
xlat
pop
cmp
adc
mov
xor
mov
je
rcrl
loope
mov
ror
das
mov
pop
jge
in
into
inc
cmpl
mov
pop
push
dec
das
mov
and
ljmp
push
push
in
cmp
sarb
push
dec
loopne
push
xor
mov
jge
ljmp
stos
das
cltd
imul
arpl
mov
fisubs
pop
adc
cmp
dec
js
mov
pop
rorl
inc
cmpsb
cmpsb
push
and
sub
scas
xor
hlt
inc
sub
pop
fsubrs
movl
xchg
sub
adc
aas
jb
xchg
sbb
dec
out
mov
cmp
inc
mov
mov
cmpsb
pop
out
and
add
xchg
jle
jle
push
push
icebp
les
pop
pop
into
or
sub
mov
in
jle
dec
pop
adc
xchg
push
cmp
pop
sub
or
imul
xor
jg
insl
sub
xchg
mov
add
or
jb
loope
dec
lock
loop
cmp
mov
cmc
sbb
imul
push
in
cwtl
pop
inc
scas
je
add
dec
aaa
lahf
mov
inc
inc
jae
xor
ror
insb
leave
mov
in
aad
popf
mov
fnstenv
sahf
adc
outsl
pop
inc
mov
std
xlat
ret
pop
int3
test
lret
jno
sbb
add
cmp
sub
sub
fwait
in
mov
xlat
fisttps
inc
stc
in
ret
push
push
and
int
jmp
test
dec
and
lret
mov
and
popa
clc
int3
mov
mov
stos
std
fs
push
xchg
out
pop
dec
push
jp
rcll
pop
pop
dec
mov
and
outsl
xor
push
out
into
sub
cmpsb
rorb
test
adc
pop
mov
cwtl
or
lahf
bound
or
xchg
adc
in
lea
scas
or
aad
stos
iret
arpl
or
pop
cmp
sub
jg
pop
and
sbb
loopne
sbb
aaa
fimuls
dec
es
sub
std
mov
js
stos
negl
jae
cmp
mov
pop
xchg
mov
xor
mov
jmp
cmpsb
lret
stos
pusha
hlt
push
fwait
sub
repz
pop
push
push
xchg
shlb
pop
pop
xchg
scas
ret
sub
repnz
shll
pushf
dec
jnp
xchg
sbb
sbb
cmp
xor
pop
add
pop
loop
fisubrs
test
out
xor
hlt
imul
mov
syscall
cmp
sub
xchg
push
mov
call
movsl
mov
and
out
push
pop
dec
add
dec
cltd
inc
insl
lret
out
adc
repz
add
jp
imul
popa
pop
jbe
std
test
shl
xchg
mov
cld
jo
adc
jge
sub
repz
lea
push
lret
push
pop
xor
mov
cmpsb
lods
lea
push
add
mov
shll
mov
repnz
insb
movsb
repz
mov
scas
and
loop
mov
xor
les
das
jmp
mov
stc
loopne
je
push
cmp
fninit
scas
or
clc
push
das
mov
pop
pop
inc
and
cltd
hlt
mov
mov
out
xor
jp
push
push
inc
add
mov
sbb
mov
popf
push
ret
in
pop
xchg
push
sti
jg
and
lods
fsts
lock
fs
cmp
ret
mov
pushl
sub
sbb
jg
pop
cmc
mov
jno
lahf
dec
push
dec
jnp
xor
lock
adc
fldcw
std
inc
sub
or
cmp
js
ss
xor
lret
sbb
mov
test
negb
popa
push
adc
sbb
movsb
fs
pusha
pop
cltd
push
pushf
jnp
std
xchg
dec
add
inc
icebp
imul
inc
sbb
dec
dec
cli
lret
jp
int3
sub
imul
lds
add
add
mov
stos
mov
into
jbe
aas
and
push
jbe
xor
div
insl
mov
jg
ret
lods
cld
aaa
xchg
mov
nop
sbb
add
shlb
fadd
fidivs
sub
dec
xchg
imul
outsl
sbb
repnz
push
aas
sub
addb
pushl
mov
sub
add
mov
mov
mov
mov
jo
adc
sbb
sbb
ljmp
adc
sbb
add
dec
popf
cs
push
in
xchg
cmp
das
orb
and
int3
repnz
in
push
jno
xor
sbb
cmp
mov
xchg
je
cmpsb
dec
lret
cmp
xor
rcr
out
or
mov
arpl
in
sbb
xor
or
mov
pushw
outsl
inc
adcl
mov
inc
sti
push
aad
js
int
and
cli
xor
adc
and
add
xlat
mov
xor
mov
movsb
xchg
pop
fs
push
sbb
loopne
lret
add
dec
fmuls
jbe
xchg
fs
aaa
lea
pop
repnz
jmp
enter
xor
ret
mov
shll
mov
and
adc
leave
outsb
push
add
and
xchg
icebp
movsl
mov
enter
push
fcmovu
out
push
aas
xor
in
bound
mov
clc
cmp
and
sar
xchg
sbb
pop
mov
movsl
fcmovu
jno
mov
xlat
cltd
rorb
movsl
and
scas
xchg
dec
addr16
jb
sbb
pop
cmp
jne
fwait
mov
mov
sahf
aaa
xchg
mov
inc
sub
int3
daa
test
jbe
inc
cwtl
clc
cmpsl
mov
mul
xorl
xchg
fisubrl
mov
pusha
push
inc
jmp
xorb
fldcw
insl
fstpt
xor
xchg
aam
xor
les
adc
sub
push
je
mov
and
arpl
fldcw
ficomps
mov
add
xor
mov
inc
mov
add
lret
xchg
pop
cmpsb
mov
lods
movsl
xor
adc
lods
pop
je
mov
pop
into
adc
cmp
mov
mov
mov
movsb
mov
mov
movsl
dec
in
xor
scas
cs
lds
push
cmpsb
push
orb
stos
sahf
lock
icebp
adc
jmp
pop
into
xlat
pop
imul
cli
adcb
cmpsb
fs
cmp
mov
gs
aas
pop
or
mov
mov
pusha
sub
mov
insl
inc
xchg
ja
pop
icebp
das
cld
mov
or
out
lret
cltd
ss
pop
mov
cmp
jmp
outsb
or
aad
pop
dec
out
idivb
jg
mov
mov
add
in
cld
adc
and
jge
fxch
rclb
cmp
clc
lcall
push
iret
xor
xor
adc
sbb
rcl
push
fldt
aas
sub
jge
push
jnp
push
jbe
les
pop
imul
fsubrs
test
cmp
hlt
push
lahf
xor
decb
repnz
hlt
orb
int
xor
push
push
jle
stc
insb
push
fldenv
mov
mov
lahf
test
mov
pop
adc
cmpl
ret
inc
js
scas
and
or
dec
mov
in
inc
xor
int
insb
clc
lods
xor
into
xchg
cld
inc
mov
mov
mov
cltd
pop
dec
daa
mov
jecxz
test
dec
scas
jo
imul
fsubrp
in
mov
std
push
mov
mov
mov
cmp
test
incb
add
sub
movsb
cmpsl
mov
and
lret
jl
jle
xchg
inc
ljmp
jge
mov
lods
push
cmpsb
push
aam
pop
xor
shrl
pop
push
push
xor
test
xor
mov
into
mov
pop
lahf
aam
adc
xor
push
pop
push
shlb
out
pop
lahf
ds
je
popa
pop
popf
cmp
or
sub
mov
mov
mov
out
pop
rolb
test
sub
sub
xchg
ret
clc
jmp
and
mov
xchg
mov
sbbl
sbb
jg
mov
mov
outsl
dec
jns
cmp
mov
jmp
dec
push
js
rcll
lcall
xchg
cmpsl
inc
lock
ja
and
push
lahf
rcl
jnp
test
in
ja
adc
mov
pop
fwait
xor
cmp
in
pop
add
or
and
xlat
dec
add
fnstenv
xor
push
test
dec
insl
outsb
xchg
movsb
sbbb
popf
mov
cmp
add
out
fldcw
cmp
xchg
push
dec
jmp
xchg
dec
xorl
es
lret
sahf
stc
push
icebp
insb
xor
mov
loopne
out
cmp
dec
pusha
sub
lock
sarb
mov
pop
out
dec
int
fcomps
push
jle
xchg
adc
ja
clc
lahf
lahf
lret
mov
jbe
lods
or
jmp
xor
add
arpl
pop
loope
cmp
ret
shlb
and
cmp
mov
scas
dec
push
cmp
int3
mov
push
inc
xlat
pusha
pop
cmp
and
mov
cld
cmpsb
jecxz
repz
dec
inc
jnp
insb
xorl
push
xor
fxtract
test
cmpsb
inc
mov
add
push
jg
inc
xor
pop
imul
aam
push
in
xchg
fidivrs
in
pop
fcomp
pop
add
xor
test
mov
pusha
push
lret
loopne
push
sbb
lea
sti
and
stos
int
cmp
sbb
stos
pushf
push
cmp
bound
cmp
fisubrl
mov
jle
cwtl
imul
mov
daa
pop
mov
loope
lret
jae
idiv
xchg
out
mov
rorb
mov
ljmp
sub
mov
xchg
int
lds
mov
mov
dec
or
out
mov
mov
shrb
mov
mov
inc
xor
mov
imul
into
sub
out
or
adc
mov
inc
xor
dec
cs
mov
dec
cmp
getsec
sbb
dec
xchg
push
cmc
mov
jns
repnz
mov
gs
sbb
jecxz
mov
sbb
pop
sbb
imul
push
cli
sbb
sbb
sbb
jle
mov
xchg
mov
inc
or
xchg
inc
push
xor
or
iret
in
and
fdivs
mov
lock
pop
cmp
out
mov
adc
mov
mov
pop
sti
jb
adc
add
mov
fcmovb
jnp
aam
sub
mov
inc
cltd
pop
cld
aad
test
scas
cli
enter
sbb
push
sahf
pushf
addr16
adc
lret
adc
lock
loop
sub
fbld
push
inc
arpl
jnp
call
pop
sti
arpl
inc
ds
dec
fnstenv
xchg
test
push
add
mov
fidivs
ljmp
pop
xchg
and
and
mov
xor
cmpsl
pop
cli
insl
and
pop
dec
xchg
inc
sub
and
jae
pop
push
push
jo
daa
icebp
dec
jne
daa
es
js
dec
ds
add
call
mov
fldt
fcoms
pop
orb
sub
cmp
mov
repnz
xchg
pop
mov
sub
mov
mov
jo
push
inc
aas
sub
mov
inc
insl
push
add
fsubp
out
fsubr
jmp
mov
jecxz
push
jo
outsl
sub
push
xor
mov
imul
incl
std
or
inc
adc
adc
dec
cmp
popf
mov
aam
fisttpll
insb
testl
fwait
scas
or
pop
loope
outsb
mov
mov
cltd
sahf
cmpxchg
rol
inc
push
jl
lock
mov
fcmovne
mov
mov
push
popf
mov
sbb
xlat
fisubrl
popa
popf
imul
aad
mov
popf
shrl
pushf
mul
cmp
mov
lea
inc
mov
mov
je
loopne
push
add
mov
add
shrb
arpl
push
xor
push
outsb
loopne
out
push
stos
sbb
push
cltd
dec
xchg
scas
jnp
jle
jecxz
dec
int3
pusha
mov
sbb
ror
test
fwait
lods
ret
dec
icebp
and
ljmp
inc
imul
movsl
xchg
push
push
mov
or
pusha
pop
xchg
add
pop
adc
jmp
inc
inc
aad
ss
fstpt
popa
sub
mov
gs
jb
ja
jno
stos
call
xor
mov
dec
mov
hlt
movsb
push
pop
jae
xchg
imul
or
or
or
inc
mov
pop
adc
cli
ret
lock
add
ljmp
loop
ret
lods
add
jnp
mov
pop
filds
repnz
inc
out
sub
pop
cwtl
adc
jo
gs
mov
loopne
cmc
adc
jl
xor
fidivl
iret
dec
movsb
xchg
cmp
fimull
sbb
sbb
fcom
jle
sbb
pop
sahf
mov
sbb
pop
cmpsl
insl
rcr
repz
ja
mov
push
pop
and
in
ficoms
js
ja
call
mov
mov
dec
mov
bound
jle
xchg
mov
rorl
mov
clc
xchg
icebp
pop
popf
orl
insl
nop
sub
iret
arpl
jne
cwtl
push
sbb
inc
xchg
outsb
pop
out
mov
fs
cmp
int
push
lods
push
cmp
jbe
pusha
or
out
xchg
xchg
mov
add
xchg
jo
ret
xchg
fwait
cmp
or
mov
add
fs
mov
cmpsl
fisttps
test
inc
pop
out
mov
adc
cmp
scas
mov
push
repz
ret
inc
adc
jb
lods
xchg
cltd
fwait
dec
imul
mov
cmp
add
outsb
fldenv
pop
mov
sbb
fcmovne
pop
mov
adc
in
jge
clc
pop
push
dec
or
pop
push
das
xor
out
pop
jp
lahf
adc
adc
loop
lcall
lahf
cwtl
xchg
xchg
push
jb
data16
inc
popa
dec
fldt
add
das
popa
fld1
cwtl
inc
daa
std
movsb
js
pop
dec
adc
cmp
mov
mov
lds
bound
jle
mov
push
nop
push
out
rorb
mov
xor
push
movsb
addl
sbb
push
iret
mov
sbb
cmp
pop
and
or
and
sub
jge
fisttpl
jno
adc
push
shll
inc
hlt
lcall
cmpsb
add
jmp
int3
push
add
dec
rcll
cmp
movsl
and
cmpl
mov
cmpsl
cmpsb
and
mov
adc
add
sbbl
sub
repnz
jmp
pushf
inc
insb
ss
jecxz
add
decl
jbe
sub
xchg
adc
push
outsl
adc
dec
jmp
mull
lock
mov
dec
mov
adc
lret
jno
out
rolb
mov
cmp
in
fildl
jb
dec
sub
dec
pop
adc
call
clc
xchg
movsl
ljmp
jno
jmp
scas
xchg
inc
test
pop
stos
xchg
push
insl
test
xor
push
adc
and
int3
cli
inc
jae
imull
xchg
mov
mov
imull
adc
les
fldt
aaa
xor
out
mov
jno
gs
pop
jmp
and
jae
lea
mov
sbb
sbb
pop
sbb
and
pusha
shlb
push
js
xlat
stos
pusha
mov
je
add
mov
rorb
repnz
pop
pcmpeqw
leave
inc
xchg
imulb
test
daa
cltd
xchg
sbb
dec
sbb
dec
pop
sti
jle
negl
ror
xlat
rclb
js
es
sbb
aaa
ja
and
sti
test
enter
shlb
leave
loop
jl
add
and
push
int3
inc
sub
xchg
lock
mov
push
les
dec
icebp
daa
pop
fbld
enter
scas
jne
jl
cmp
mov
sahf
jnp
cmp
pop
aaa
lret
icebp
push
cld
xlat
sub
ficoml
insl
sub
sbb
jno
adc
inc
lods
cmpsb
mov
mov
das
scas
pop
leave
imul
aam
mov
shll
inc
cmp
mov
add
imul
mov
pop
aaa
xchg
in
repz
pop
shll
imul
sbb
cmpsb
xchg
bound
pusha
pop
jmp
cmc
and
frstor
adc
jns
sbb
mov
sub
sub
mov
push
inc
or
mov
ss
mov
xorl
xor
cltd
cmp
pop
data16
pop
or
inc
je
mov
push
inc
rolb
fld
pop
mov
dec
pop
xor
push
mov
pop
xchg
xchg
loopne
test
inc
nop
xchg
dec
aad
dec
ret
inc
int
inc
jmp
fcoml
mov
rclb
in
push
shr
sub
sbb
xchg
daa
call
jle
push
or
push
out
dec
xchg
pop
lahf
and
pop
pop
mov
fstps
iret
aaa
leave
enter
aad
adc
mov
mov
fwait
movsl
mov
clc
scas
in
fisubl
sub
das
fcmovu
lret
inc
arpl
or
jne
mov
xchg
add
subl
jle
jns
mov
scas
sbb
pop
addr16
cmp
js
outsl
mov
movsl
fdivs
jle
pop
cs
push
jnp
xchg
add
xchg
mov
inc
fs
add
aas
xchg
add
jecxz
dec
mov
mov
jbe
fists
or
sbbl
cld
inc
xor
or
xor
inc
cmpsl
outsb
mov
adc
cmp
jmp
xchg
lahf
jo
jb
push
inc
jne
dec
jno,pn
mov
clc
aad
adc
in
std
sub
jmp
xchg
lret
fists
sti
mov
pop
int3
pop
mov
cld
jo
stos
insb
adc
stos
cmp
mov
pop
outsb
lahf
cmpsl
xchg
fcoms
addr16
jo
xchg
stos
and
sub
or
lea
adc
mov
sub
sub
sbb
in
sub
fsubs
stc
into
mov
leave
sbb
lahf
sbbl
inc
adcl
out
inc
pop
pop
movsl
add
icebp
enter
dec
scas
fnstenv
pushf
pop
xor
mov
cwtl
lea
or
push
lret
std
enter
nop
adc
and
push
call
rcrb
add
xchg
fiaddl
into
mov
adc
sbb
mov
jg
dec
scas
sti
nop
pop
sahf
push
inc
jecxz
out
cmp
test
adc
stos
push
cwtl
out
xchg
mov
aam
dec
jb
mov
int
sbb
js
inc
push
insl
inc
sub
dec
ret
and
dec
dec
js
and
data16
mov
add
push
dec
xor
mov
sbb
mov
jbe
adc
das
fiadds
dec
fcoml
test
sahf
sbb
fdivrl
cmpsl
jmp
inc
inc
stos
ret
test
std
bound
sarl
jnp
xor
imul
jmp
or
add
mov
adcb
test
adc
mov
push
gs
aas
sbb
or
mov
add
sti
and
rorb
or
fcoml
js
dec
and
cltd
or
call
sbb
and
or
cmp
loopne
xchg
iret
sbb
mov
jl
les
and
sbb
mov
sbb
and
push
es
gs
lock
dec
and
dec
cmp
mov
xor
mov
mov
mov
dec
and
pushl
push
shlb
stos
repnz
in
cli
fisttps
pop
popa
mov
cmc
pop
add
fldt
xor
add
mov
cmp
mulb
push
xchg
ret
rol
rorl
push
pop
lea
aad
push
and
fldl
mov
inc
fs
cmp
jo
pusha
ffreep
fildl
enter
icebp
mov
repz
adc
xchg
subb
sarb
cwtl
test
dec
sbb
stos
idivb
aaa
in
pusha
call
or
sbb
sbb
jecxz
jns
inc
add
je
mov
push
outsb
sahf
inc
aaa
lcall
adc
adc
je
cmp
push
nop
addb
xchg
xchg
and
mov
movsl
xchg
jecxz
fldenv
addl
cmp
int3
decl
push
fs
mov
stos
loopne
iret
mov
hlt
pop
cmpsb
pop
arpl
pop
xchg
mov
test
sub
cmpl
push
inc
sahf
inc
mov
ret
xchg
stos
shll
add
xchg
mov
pop
pop
add
pop
aad
jae
lods
in
movl
inc
adc
mov
pop
or
lock
jae
adc
add
sbb
inc
inc
pop
icebp
dec
xchg
push
sub
in
jnp
dec
sub
cmpsb
lea
push
jg
dec
cmp
jo
inc
pop
test
clc
sub
lcall
dec
sti
sti
clc
jno
or
mov
rorl
movsl
cmp
xor
mov
out
add
xor
mov
testb
es
jmp
dec
mov
test
xor
fnstsw
cmpl
jecxz
xor
push
pushf
sahf
ss
jo
std
mov
insb
dec
jnp
cmpsb
aaa
mov
xorb
pop
cmc
pop
ds
cmc
cmp
ficomps
pop
out
icebp
jle
and
rcrl
mov
aaa
dec
pop
pop
cmpsl
cmp
mov
loopne
roll
mov
sbb
sbb
test
loopne
xchg
and
sub
xchg
pop
sbb
lcall
testl
iret
lods
push
test
cld
dec
add
hlt
mov
sbb
pop
cmpsb
int
sbb
xchg
mov
xchg
in
xorb
or
shrl
sti
in
lcall
repz
out
pop
sbb
and
out
imul
mov
and
addb
cltd
adc
pop
xor
gs
xor
push
cmp
mov
or
sahf
sub
jns
popa
stos
mov
or
in
inc
inc
xchg
add
jns
push
imul
sbb
dec
cmpl
outsl
sub
shll
pushf
rcll
mov
rorb
paddb
add
cltd
lcall
jae
stos
or
mov
push
outsb
rolb
rorb
mov
scas
jae
mov
adc
in
inc
pop
aam
jbe
adc
lods
sbb
insb
xchg
jo
cmc
out
xchg
pop
sti
daa
jmp
inc
das
mov
lret
adc
and
lea
push
stc
sub
cmp
xor
mov
negb
xchg
repnz
mov
clc
pop
cli
dec
sbb
out
xchg
pop
out
ds
xchg
ret
push
cli
jne
fsubrl
inc
cmp
adc
mov
loopne
flds
movsb
subb
adc
subb
adcb
cmp
sub
adc
xor
pop
push
fxch
pop
cmpsb
jnp
lahf
addl
sbb
adc
xchg
repnz
fs
pop
adc
fisttpl
cmp
push
push
jno
push
add
out
jp
add
lcall
out
and
imul
dec
cld
and
push
inc
test
mov
sbb
or
scas
xchg
movsb
xchg
or
stos
inc
xchg
fldl
pop
sub
mov
cltd
inc
popa
int
push
sub
mov
sbbl
pop
push
stos
dec
shr
sbb
pop
mov
lret
sbb
inc
call
shrb
inc
push
addb
jecxz
scas
adc
gs
sbb
inc
jo
pop
dec
adc
pop
test
xlat
xchg
shrb
test
or
negb
in
fildll
push
xchg
and
and
xchg
mov
jno
dec
sub
in
and
iret
mov
inc
hlt
jne
aaa
mov
inc
imul
xor
jg
pop
enter
mov
push
clc
add
inc
or
xchg
dec
pop
sti
call
mov
test
cmp
cmp
pop
jmp
jg
mov
sbb
repnz
ljmp
mov
add
inc
inc
into
std
jne
std
sub
adc
stos
aaa
mov
adc
inc
sbb
incl
pop
lods
inc
xor
push
mov
fnsave
adc
ss
mov
push
or
pop
scas
das
or
lret
cmp
dec
cmp
test
pop
add
inc
push
in
lret
fucomp
rep
cmp
dec
sbb
ljmp
in
xor
sub
fildll
push
sbb
ret
and
or
adc
xor
pusha
mov
jg
inc
mov
sub
jne
mov
std
in
mov
xchg
jle
xlat
mov
addr16
mov
test
xchg
push
out
add
or
call
push
cwtl
xor
rcr
sti
out
sub
addl
sahf
jp
inc
ljmp
or
das
gs
in
leave
xchg
cwtl
inc
lods
movsb
add
aas
movsb
je
hlt
mov
and
cwtl
imul
sbb
mov
or
inc
sahf
push
or
fisttpll
mov
jbe
pop
xchg
push
push
mov
and
add
pop
stos
adc
aad
xor
cmc
aad
or
pushf
out
jo
pop
or
scas
xorb
test
nop
xlat
in
adc
ret
fsubs
inc
leave
in
inc
int
js
addr16
loopne
jno
push
cwtl
leave
jl
cmpsl
loopne
das
pop
lcall
sub
push
sub
lds
enter
iret
out
jne
movl
int3
fildl
gs
xor
jns
pop
aam
stos
push
sahf
mov
cmp
das
add
or
jmp
test
dec
aad
filds
xchg
xchg
pushf
ja
pop
cmp
cmpsb
push
outsb
xchg
outsl
jo
imull
xchg
dec
test
in
or
int3
ljmp
out
cmp
push
aad
aaa
mov
ret
sub
in
jmp
addr16
push
js
lea
pop
push
jmp
lahf
adcb
mov
mov
cwtl
arpl
shrl
jg
test
insl
pop
add
inc
pushf
and
ljmp
fcmovnu
shlb
outsl
fistps
cs
fs
pop
out
sarb
mov
inc
pop
mov
mov
dec
pop
mov
dec
sbb
das
push
pop
ret
dec
inc
adc
jnp
das
movsb
fcoml
mov
test
fcmovnbe
mov
pop
data16
pusha
xor
int
pop
push
push
aam
sbb
pop
data16
pop
sub
ss
inc
pop
mov
loop
aaa
jmp
rolb
in
stos
mov
fcoml
clc
jbe
jne
xchg
sub
pop
mov
les
fidivl
std
fbld
cltd
sub
or
mov
lock
pop
xlat
and
addr16
mov
fistl
decb
out
fiadds
xlat
dec
mov
or
fisubs
push
mov
jecxz
mov
shl
out
imulb
cs
pop
add
test
sbb
jge
dec
cmc
inc
cmp
aaa
fnstsw
adc
cmp
jp
arpl
mov
outsb
sub
mov
test
and
insl
div
jnp
or
xchg
push
pushf
das
sbb
xchg
adc
loopne
movsb
aaa
xchg
inc
or
mov
pop
stos
mov
jb
sbb
adc
mov
ja
cli
xor
imul
repnz
cmpsb
or
mov
push
add
lahf
scas
scas
popf
sub
lahf
rcr
lock
cmc
loop
adc
sbbb
mov
mov
push
sbb
lret
push
xorb
out
in
or
mov
dec
cmp
stos
test
push
xlat
out
stos
adc
fmul
in
dec
pop
push
add
sbb
jns
rclb
push
mov
sbb
fldcw
orl
pop
inc
repz
pop
pop
inc
jbe
or
mov
pop
mov
and
lds
int3
les
xor
out
iret
les
in
or
xchg
sub
stos
lret
test
sbb
xchg
push
mov
pusha
ret
push
or
jae
inc
sub
pop
int3
inc
and
dec
inc
sbb
pop
stos
cltd
inc
mov
jle
push
fisttps
jg
cli
mov
stos
lret
cmp
or
cmp
and
pop
lea
sbb
es
xchg
ret
sbb
andb
or
mov
or
lea
mov
pushf
sbb
push
xchg
incl
movsl
lahf
test
jo
dec
jge
ficoml
jnp
jge
aaa
das
sbb
push
pop
jle
popf
push
movsl
mov
rorb
lock
daa
ret
scas
pop
lret
lcall
aad
pop
mov
es
rol
jg
fsubl
movsb
dec
mov
aas
aaa
adc
jne
test
dec
test
pop
bswap
test
fwait
mov
imul
push
sbbb
sbb
pop
dec
mov
push
inc
jbe
cwtl
insb
aad
andb
repnz
push
inc
nop
mov
cmc
push
hlt
into
lock
inc
jle
fisubrs
lahf
mov
and
f2xm1
movsb
js
popa
js
cmp
mov
xchg
inc
inc
test
nop
xchg
xchg
fcom
sbb
xchg
stos
aas
stos
jne
rcrb
xor
outsl
jo
jae
jb
fisubrl
xor
mov
lcall
iret
cli
adc
cmpsl
add
dec
movsb
mov
add
cmp
insb
les
test
mov
inc
loopne
mov
outsb
mov
or
adc
cwtl
mov
mov
xchg
cmp
pop
xchg
sahf
icebp
test
loop
jbe
dec
pop
push
stos
adc
pop
sbb
addb
test
xor
adc
xchg
cmp
push
mov
push
lgs
sub
nop
xor
dec
mov
lahf
fildll
mov
inc
mov
inc
xor
push
push
in
out
cli
nop
jge
sbb
fcompl
loop
lock
fistps
sub
mov
jmp
addr16
dec
adc
imull
cld
mov
out
fwait
mov
addl
push
or
and
movsb
push
lods
mov
je
xchg
xchg
shl
mov
xchg
mov
fsub
xchg
add
cmpsb
enter
xlat
cmc
call
and
add
orb
std
repz
bnd
inc
mov
out
cmpl
and
ffree
movsl
sbb
loopne
xchg
gs
lret
add
and
adc
sub
sbb
int
jb
add
jae
pop
out
mov
shlb
clc
xchg
call
movsl
sarl
ficomps
cmp
mov
xchg
push
fiaddl
and
cmp
int
mov
jb
lea
mov
outsb
jns
push
mov
mov
xchg
and
stc
lcall
in
mov
xor
sub
aas
pusha
shll
xchg
mov
fbstp
mov
xor
imul
xor
es
neg
imul
mov
aam
mov
in
sub
jns
lea
pop
pop
push
test
xor
pop
and
adc
sub
ja
stos
mov
out
sub
mov
pushf
inc
sub
push
clc
lea
xlat
sub
lret
dec
iret
outsl
stos
push
cmpsl
filds
out
mov
pusha
in
and
mov
jb
add
clc
aam
inc
lods
sub
imul
pushf
addr16
xchg
sbb
andl
xchg
push
icebp
sub
ror
jnp
dec
inc
cmpsl
jb
out
insb
clc
lret
xchg
psrld
xchg
fiaddl
cmc
inc
inc
orb
hlt
sbb
icebp
mov
push
xor
push
xor
and
test
jge
dec
xlat
lds
push
lods
bound
das
adc
xorl
xchg
mov
mov
xor
jnp
cmp
xor
push
fildll
mov
sbb
add
add
xchg
movsl
es
out
std
dec
rorb
popa
movsb
inc
push
out
cltd
lret
repz
imul
push
mov
jb
dec
cli
dec
cli
dec
pop
sbb
pop
xor
dec
std
imul
lods
jbe
inc
imul
shrl
push
add
popa
cmp
outsb
test
aam
subl
fidivrs
mov
insb
bound
pop
dec
rclb
dec
bound
sbb
adc
fisubrl
mov
js
push
ret
bound
cwtl
shl
xlat
mov
sub
jo
jae
push
in
enter
imul
in
or
pop
dec
mov
inc
into
pushf
mov
icebp
mov
rcr
fwait
mov
je,pn
lahf
mov
pushf
xor
loopnew
mov
cmpsl
or
jne
shrl
cwtl
push
cmp
adc
mov
pusha
xor
xchg
inc
xor
xor
xor
cltd
hlt
outsb
sub
mov
xor
insb
adc
cmp
out
test
mov
mov
les
cmpsl
out
fadd
jno
or
adcl
and
pop
dec
fwait
xor
fildl
mov
dec
lret
iret
insb
lds
sub
add
cwtl
cmp
jle
xchg
hlt
cwtl
jecxz
adc
mov
shll
mov
jg
ljmp
dec
rcrb
insl
fisubrl
popf
movsl
scas
ljmp
iret
imull
push
pop
popl
jmp
loop
pop
mov
pop
xchg
xchg
inc
and
xchg
imulb
lods
pushf
cmovs
pop
scas
pop
cmc
mov
sub
out
gs
pop
dec
out
repz
leave
psubusb
arpl
inc
stos
rcr
mov
pop
xor
cmp
test
mov
repnz
in
lcall
out
push
pushf
daa
pop
int
inc
cmp
or
loop
ret
rolb
sub
jmp
jp
push
mov
or
cld
sub
xchg
inc
jb
ja
icebp
cmp
adc
dec
cmp
lret
ljmp
mov
les
mov
xchg
mov
push
outsl
inc
insb
pop
rcll
std
sbb
push
jnp
ja
mov
lds
inc
mov
jl
mov
testb
xchg
mov
inc
cmpsb
pop
and
push
dec
cmpsl
out
and
mov
xor
add
cmpsl
jo
dec
and
jg
dec
cmp
rorl
mov
jecxz
push
in
mov
imulb
fistpll
std
aam
out
inc
enter
test
lock
sbb
dec
and
shlb
pop
int
inc
xor
ror
xor
adc
in
pusha
jno
or
cmp
push
jmp
cmp
movb
adc
xchg
dec
movsl
jl
clc
sbb
outsl
cmpsb
mov
mov
add
les
push
mov
insb
mov
pop
mov
xor
js
dec
or
adc
add
sbb
test
xorl
inc
and
sub
xorl
enter
std
mov
push
in
mov
cmpsb
pop
stc
xor
lret
xchg
je
orl
daa
mov
sti
pop
jne
jmp
mov
sahf
pop
data16
pop
leave
cmp
stc
xchg
xor
ret
push
sub
xchg
add
idiv
or
and
mov
movsl
jo
mov
pop
or
fcomps
adc
in
adc
aam
mov
adc
xchg
push
insb
jecxz
xor
inc
imul
iret
dec
in
mov
loopne
stos
adc
add
bound
jb
xchg
push
push
sbb
stc
aam
das
jno
icebp
scas
xor
loope
dec
fs
std
fistl
pop
xor
or
les
ja
std
lods
test
ss
and
call
lcall
xchg
fistps
mov
dec
cmp
int3
xchg
push
inc
in
fadds
pcmpeqd
push
add
adc
xchg
push
xor
movsb
inc
out
les
pop
lret
mulb
pop
std
scas
pushf
dec
rcrb
push
pop
int3
add
sbb
add
sbb
testl
in
jge
fs
push
pop
daa
js
or
ret
xchg
outsb
mov
add
xchg
cs
sbb
aaa
call
mov
movsl
jmp
mov
mov
rolb
and
jns
xlat
add
clc
push
in
inc
pop
mov
rcrl
sub
or
fs
arpl
or
inc
sbb
push
out
add
mov
add
mov
cli
cld
shlb
lods
and
nop
in
out
out
xchg
xchg
cmc
fimull
stos
pop
hlt
sbb
xchg
add
xchg
mov
loop
in
mov
gs
mov
inc
pop
add
test
bound
iret
pop
or
dec
arpl
mov
fwait
pop
aad
adc
outsb
jb
xor
arpl
cmp
jg
js
push
push
stc
jl
mov
insl
push
cmpsl
dec
xlat
fst
clc
add
fdivr
out
movsb
sbb
into
inc
xor
lahf
xor
xor
sbb
scas
inc
mov
imul
add
cs
pop
adc
cs
mov
mov
inc
cmpsl
mov
push
inc
cmp
mov
fwait
xchg
arpl
cmp
int3
bound
in
pushf
jg
loop
jmp
test
xchg
test
out
add
lds
mov
jecxz
sbb
inc
inc
push
and
bound
jecxz
dec
addr16
sbb
roll
jno
ja
push
jle
cmc
pop
push
loopne,pt
jp
pop
mov
int
inc
pop
mov
enter
or
cmp
sbbb
mov
clc
std
test
rclb
push
loop
inc
data16
add
leave
xchg
mov
add
dec
mov
adc
out
or
sbb
movsb
mov
or
mov
not
repz
nop
jb
sbb
push
lock
mov
jno
adc
and
adc
fucomip
xchg
adc
dec
xor
outsl
lret
xor
mov
mov
jae
leave
pop
sbb
or
aad
daa
xchg
loope
push
nop
movsb
pop
fiadds
push
dec
mov
and
cmc
xchg
data16
xchg
xchg
jmp
out
pop
push
rep
gs
int3
popf
add
pop
mov
push
sub
insb
push
push
jl
mov
mov
dec
mov
in
rcl
xchg
divl
fwait
pop
jnp
in
pushf
cli
xchg
roll
xchg
dec
dec
imul
inc
enter
repz
test
dec
or
xchg
push
mov
andl
fsubs
std
aas
jns
fs
mov
or
pop
pushl
xor
fdivs
scas
sub
xchg
and
and
out
or
adc
or
popf
scas
jae
mov
test
jg
or
les
imulb
inc
adc
test
sbb
jmp
fidivrl
xchg
in
jae
jno
out
push
xor
mov
mov
mov
in
fdiv
add
aam
jb
mov
mov
lods
cld
sbb
call
push
lret
push
leave
mov
push
jmp
add
jno
lahf
in
fstpt
adc
out
stc
push
sbb
push
lret
aaa
js
xchg
jl
pop
aam
sbbl
jle
int3
test
mov
xor
andl
lock
dec
lcall
es
mov
mov
xchg
call
roll
popw
outsb
aaa
shlb
cmc
fidivrs
dec
clc
enter
aam
pushw
or
lock
in
aaa
ljmp
hlt
aad
inc
xor
int3
push
imul
cmp
inc
or
in
fdiv
adc
into
push
loope
adc
fimull
cmp
mov
xor
scas
loopne
and
data16
push
mov
jecxz
adc
or
aaa
push
or
nop
xor
pop
jns
xlat
xchg
movsl
lahf
xorl
sbb
int3
jmp
mov
jb
pmaxub
add
cmp
sbb
adc
jmp
mov
xchg
xor
into
outsb
repz
dec
cmpb
mov
xchg
cmp
cmp
xchg
enter
push
and
int3
and
jnp
adc
fcoml
test
sub
pop
xchg
mov
jmp
add
add
mov
dec
dec
cmp
cmp
fadds
xor
stos
in
and
mul
mov
sahf
andl
scas
ficoms
in
add
inc
and
mov
xor
repnz
mov
xor
bound
roll
xchg
iret
cmp
push
or
in
jno
adc
std
call
push
cmp
mov
test
xor
xchg
arpl
test
pop
pop
sub
or
mov
mov
pop
mov
push
cltd
xchg
cmp
dec
ds
js
jnp
ja
aad
inc
lret
mov
fisttpll
inc
dec
and
sub
inc
xchg
insl
add
mov
xor
inc
inc
testl
mov
mov
dec
in
lods
movsb
push
jne
pop
sub
pop
inc
add
inc
cld
add
stos
shrb
or
or
mov
mov
rdtsc
mov
dec
hlt
or
adc
pusha
jae
xor
clc
push
ja
daa
and
sarl
jo
xor
lret
push
push
and
mov
jnp
cmp
push
push
add
and
lock
fnsave
push
add
mov
inc
out
mulb
je
xchg
jne
imul
dec
insb
mov
adc
xchg
and
cmp
cmp
out
sbb
fistpll
mov
jo
sbb
out
xor
andl
in
xor
nop
push
or
sbb
fnop
call
xor
filds
adc
test
lock
or
adc
push
jge
cmpsb
cli
mov
jl
ficoms
cltd
sbb
lds
xchg
sbb
leave
ja
mov
cmp
pop
test
sbb
mov
aas
sbb
subb
pop
lods
or
xchg
stos
js
cmp
jg
adc
loop
mov
in
mov
mov
lods
xor
pop
sbb
fsubrl
incl
cmpl
mov
test
insb
cltd
sbb
dec
xor
ret
push
ret
mov
arpl
fwait
fs
js
cmc
and
call
insb
cs
jmp
enter
je
in
jl
cmp
pop
xchg
test
pushl
mov
inc
addr16
or
cltd
xchg
dec
mov
cmpsl
or
loope
lret
jae
in
or
push
add
in
xchg
rorl
out
pop
or
xchg
mov
test
adc
ja
add
repnz
add
pushf
out
or
mov
pusha
jno
sbb
pop
hlt
in
enter
arpl
arpl
ja
xor
sub
sbb
out
push
cmp
sub
fdivr
mov
mov
movsb
dec
mov
in
popf
shl
pop
imul
pop
test
jo
sbb
mov
mov
adc
push
shrl
pushf
test
dec
je
xchg
inc
les
mov
clc
das
jmp
push
adc
mov
xchg
idivb
ss
leave
aas
push
sarb
sbb
cmp
xor
ss
cmovs
dec
jb
sbb
xchg
jl
dec
movsb
and
pop
xor
mov
out
into
scas
popa
xchg
push
movsl
scas
mov
push
dec
aaa
sub
dec
out
dec
cmp
cli
and
cmp
jge
or
shll
jecxz
lret
jmp
out
into
mov
or
sbb
incb
insl
dec
jo
ljmp
add
xchg
je
xchg
out
loope
or
out
lods
rolb
adc
stos
imul
movsl
mov
bound
jnp
xchg
sub
mov
or
test
push
sbb
stos
jp
and
cmpsb
push
push
loop
jle
lods
loope
jge
rcl
jbe
jo
xor
shl
mov
push
inc
dec
pop
xchg
shrb
std
ds
sub
cmp
pop
out
pop
sub
or
sbbb
mov
jge
jmp
fists
xor
xchg
std
pop
shl
xlat
pop
sub
std
pop
dec
stos
mov
xlat
mov
xchg
mov
lods
lea
inc
lds
insb
mov
test
hlt
xchg
dec
leave
or
cmc
jg
arpl
and
jno
arpl
mov
cld
lcall
xchg
enter
ret
shlb
gs
fdivrp
fcmovnu
pop
jg
adc
mov
dec
pop
dec
pushf
add
loopne
cmp
pop
push
mov
scas
bound
xchg
filds
daa
adc
add
dec
xor
sub
movsb
push
push
pop
in
and
into
icebp
cltd
pop
xchg
les
jp
loope
mov
adc
loop
inc
pop
and
outsl
cmpxchg
or
fistl
movsl
mov
jae
and
mov
insl
lea
stc
sbb
das
enter
adc
jl
out
lods
rorb
insb
and
sub
ljmp
idivl
in
cltd
or
jmp
int
shlb
movsb
lock
mov
and
cmc
cwtl
or
mov
push
iret
mov
jle
lds
in
jmp
sub
fs
adc
mov
cli
int3
mov
push
orb
in
or
pop
or
shlb
sbb
stc
fisubl
lcall
add
movsl
std
xchg
dec
push
call
and
loop
aam
fmuls
popf
aaa
xchg
sbb
fs
cmp
xchg
shrl
mov
repnz
and
outsb
cmp
lods
std
fwait
mov
iret
sub
or
mov
mov
into
cmp
aam
popa
mov
test
jbe
pop
xchg
jae
xor
lret
loopne
imul
loop
notb
popf
inc
outsl
outsl
dec
enter
and
mov
mov
addr16
testb
sub
subb
dec
shlb
test
mov
scas
out
xlat
subb
xchg
lcall
xchg
scas
and
push
push
ljmp
mov
out
or
pop
js
jmp
xchg
adc
pop
add
mov
pusha
add
ss
push
mov
push
xor
call
and
arpl
shrl
cmp
cmp
movsl
outsl
sbb
adc
mov
jns
cmpsb
pop
sbb
scas
pop
fstps
test
push
insl
inc
or
cmpsb
jle
fptan
cmp
lock
cltd
jmp
cltd
enter
lods
aaa
sub
shl
je
xlat
bound
cwtl
repz
sbb
inc
loop
lods
fsubs
xchg
pop
mov
mov
lahf
test
or
pop
xchg
rcll
inc
mov
mov
or
xorb
push
jmp
or
xchg
in
cli
test
ffreep
leave
inc
lds
movsb
jmp
mov
adc
popf
add
cmp
outsl
add
jg
int
xor
push
inc
ret
sbb
pop
es
pmulhuw
xchg
rcr
test
push
xchg
rcll
es
adc
fs
scas
out
int
scas
mov
xchg
ljmp
mov
inc
cld
aam
xor
add
movsb
stc
pop
js
clc
mov
dec
cltd
or
imull
cwtl
and
out
sub
xchg
mov
mov
adc
ret
out
pop
cmp
cmp
int
pop
jbe
add
pop
pop
push
jmp
mov
sbb
enter
dec
fidivs
leave
not
push
iret
mov
jg
outsl
xor
nop
lods
jb
sbb
cld
jbe
arpl
jmp
out
pop
xchg
xor
sub
or
pop
fs
cmpsb
inc
adc
mov
shrl
pushf
decl
test
mov
shll
xchg
dec
xchg
adc
push
enter
sbb
sub
xchg
mov
xchg
fdiv
insb
in
inc
xor
adc
jns
dec
dec
in
jg
mov
cmp
adc
jae
jbe
add
insb
xchg
cwtl
xchg
ja
sub
fwait
pop
dec
orb
jae
sbb
lcall
ss
jp
cmp
movsb
js
or
es
bound
push
lcall
hlt
inc
es
fldenv
dec
scas
ljmp
leave
and
jns
stos
xor
pop
dec
out
push
idiv
repz
bound
les
lret
movsl
outsb
andb
sub
rcll
shll
std
mov
stos
das
jle
outsb
int3
cltd
push
stos
lret
jmp
leave
xchg
daa
pop
add
xchg
insb
test
xchg
dec
dec
js
les
stc
cmp
lods
imul
ret
mov
mov
sub
inc
enter
xchg
cmp
mov
call
loopne
cmp
pusha
je
ds
cmp
lret
icebp
jne
sbb
adcl
test
out
dec
cltd
stos
add
add
test
mov
mov
inc
sub
jnp
add
xchg
jp
pop
add
call
adc
lret
insl
lret
gs
mov
cs
aas
mov
pop
lds
out
lock
adc
int
movsl
roll
dec
movsl
or
cmc
sbb
mov
repnz
jmp
pop
mov
lock
cli
cld
inc
clc
je
inc
and
iret
add
pop
sub
clc
mov
ss
or
or
in
xchg
pushf
ret
pop
xchg
call
sub
sub
enter
mov
mov
mov
arpl
sbb
movsl
push
inc
ss
mov
int3
or
xor
out
adc
les
pop
adc
out
popa
ljmp
jb
test
add
sub
jns
popf
adc
cmpl
lods
roll
ljmp
add
stos
pushf
in
aad
xchg
rcl
push
fidivrl
push
cmp
lahf
lret
push
cmp
xlat
and
cmp
inc
cmpsb
les
mov
fcoms
mov
push
cltd
push
push
xchg
sub
sahf
cmp
test
fwait
add
jg
test
frstor
mov
fisubl
cs
out
add
ficoms
shlb
lret
scas
and
test
push
inc
or
inc
leave
add
pushf
push
mov
dec
mov
lods
jns
jg
cmpsl
add
push
leave
pop
aaa
sbb
pop
jle
aam
or
mov
outsb
fwait
inc
cmp
push
cli
xorb
cs
iret
repnz
push
imul
addb
sbb
cld
adc
mul
mov
mov
ds
mov
fsub
ja
repz
pop
das
cmp
mov
aas
jb
jecxz
jge
cmp
add
scas
lret
into
adc
test
shlb
xchg
sarb
cmpsb
push
shlb
enter
xor
jae
jle
in
push
push
mov
in
fcoms
mov
sbb
lcall
das
sbb
sti
insl
test
cmp
daa
repz
imul
aaa
push
mov
loopne
cmpsb
xor
xchg
and
test
or
jb
addr16
and
dec
jno
enter
daa
lret
adc
call
jge
in
push
gs
or
push
aas
outsb
cmc
daa
bound
jb
cli
sub
stos
push
les
add
cmp
mov
fwait
pop
imull
imul
sahf
imul
add
sbb
aam
jle
cmp
jae
push
mov
sarb
xchg
pop
xor
mov
or
fcmovu
sbb
xchg
fisttps
pop
mov
cwtl
or
jge
add
push
jo
mov
push
cmpsl
in
leave
stos
pop
sbb
mov
lret
pop
movsb
dec
iret
das
repnz
cmp
cvtps2pi
rcll
les
fwait
add
dec
push
add
int
jle
push
stos
pop
repz
insl
leave
or
fcmove
call
int3
test
push
mov
mov
pop
daa
cmpl
scas
lds
xchg
pop
loopne
test
sbb
jmp
movq
add
cld
sbb
xor
lds
or
std
inc
std
stos
bound
mov
push
sbb
fiadds
xchg
neg
mov
roll
js
lds
aaa
mov
mov
jg
xchg
dec
test
nop
aas
cmpb
ds
mov
aas
adc
inc
repz
lock
out
jae
dec
mov
mov
jmp
loop
mov
jp
or
push
sbb
jl
bound
add
into
test
icebp
inc
xchg
ret
xchg
call
sti
mov
cmp
or
push
mov
lahf
notl
mov
jo
lret
stc
clc
lods
sbb
jb
sbb
cmpsb
aaa
xor
mov
push
lret
or
dec
in
ja
icebp
mov
adc
sub
sbb
sbb
pop
inc
inc
mov
pushf
pushf
jecxz
sbb
daa
mov
dec
lds
mov
repnz
inc
popf
adc
aaa
imul
and
sub
loop
inc
jae
push
imul
dec
lret
int3
sbb
rep
ss
add
mov
loopne
mov
xchg
push
icebp
cmpsl
int3
jne
mul
lock
pop
std
ljmp
xchg
sahf
in
jnp
and
jp
pusha
call
ljmp
push
dec
test
outsl
js
not
inc
lret
and
pushf
jb
aam
jnp
jb
pop
mov
int3
inc
ljmp
aad
test
xor
fwait
and
clc
xchg
dec
rcrl
jmp
out
and
lcall
into
cmp
add
clc
cltd
mov
dec
jo
cmc
stos
pusha
cmp
push
mov
mov
and
rclb
mov
ja
les
jb
scas
pop
sbb
fsubl
lods
insl
movl
add
and
and
jmp
jmp
adc
repz
xor
jecxz
shll
cmp
fdivl
mov
jns,pn
or
cwtl
lea
push
mov
pop
sub
fdivs
pop
loop
mov
je
pop
outsl
ror
fcmovnbe
sbb
xor
dec
sbb
jmp
insl
mov
shll
nop
xor
xor
inc
sbb
xor
bound
adc
inc
add
dec
fs
sti
mov
sub
jns
jb
insb
ja
stc
inc
xlat
xchg
frstor
and
fsubr
psrad
add
sbb
pop
test
xchg
addl
lcall
add
sahf
add
xor
stc
inc
rorb
daa
scas
pop
cmpsl
cltd
imul
sub
stos
jecxz
or
xchg
cwtl
sbb
in
test
xor
jb
pop
int
pop
pop
stos
repnz
leave
lret
dec
mov
fbld
out
sbb
push
mull
mov
mov
in
jbe
sar
jo
push
mov
daa
xchg
clc
push
sub
repz
popa
push
inc
sub
push
or
out
cmp
fs
xchg
aaa
pop
aad
dec
imul
add
dec
xchg
and
daa
rorl
lcall
adc
xchg
sbb
imul
jns
mov
das
enter
xor
mov
sub
sub
push
sti
jecxz
sbb
test
mov
sub
add
sbb
push
pop
sbbl
pop
fmul
mov
bound
pop
pop
test
gs
test
sti
push
fucomip
and
movsl
les
arpl
cmpsb
les
xor
scas
pushf
add
cmp
test
shrb
into
push
into
bound
hlt
push
jl
mov
pop
xchg
xchg
int3
js
cmp
aad
jbe
stos
dec
fsubp
inc
sbb
mov
loopne
sub
iret
xor
cmpsb
shlb
dec
dec
mov
push
jecxz
ds
xor
fildl
cmp
xchg
stos
lahf
ret
stos
cmp
mov
lcall
or
ja
push
jns
insb
nop
pop
pop
lret
xor
sub
inc
fadds
pushf
mov
aas
lcall
xchg
ffreep
pop
xchg
dec
loop
push
jmp
mov
xor
ret
fcmovu
aas
xlat
rorl
daa
push
fstps
sti
addr16
ljmp
dec
aam
fiaddl
stc
scas
lds
cmp
push
sub
xchg
lret
fcomp
lods
push
xor
jbe
das
cmp
sbb
jbe
sbb
ljmp
or
mov
in
rcrl
cwtl
xchg
pop
jge
add
int
xchg
adc
data16
add
xchg
les
push
hlt
sbb
sub
mov
daa
xchg
cmp
mov
xchg
mov
shl
and
imulb
mov
mov
cmp
test
xchg
out
sub
in
cmp
push
outsl
popf
mov
movsb
out
lahf
inc
testl
gs
arpl
xchg
ret
sti
loopne
jge
jle
dec
pop
or
call
or
mov
xchg
cmpl
test
push
ret
or
push
xchg
sub
add
dec
push
in
notl
gs
loop
nop
mov
dec
movsb
dec
mov
outsb
ret
or
push
test
adc
mov
lahf
sbb
xor
jg
int3
es
rolb
adc
mov
mov
cli
jg
jle
jno
pushf
mov
dec
arpl
inc
push
add
stos
inc
ret
pop
inc
aad
sub
push
inc
pop
mov
jne
inc
popa
xlat
inc
insb
lods
andl
test
clc
mov
ret
shl
test
mov
out
popf
sahf
inc
push
inc
or
gs
sub
dec
inc
jmp
popa
sbbl
es
push
gs
scas
stc
int3
je
mov
add
adc
sbb
gs
cmpsl
pop
add
lea
push
xor
add
in
sub
inc
in
lock
sub
in
mov
mov
jp
pop
je
sub
or
sbb
adc
mov
add
cs
jne
inc
push
out
addr16
sbb
inc
add
mov
sub
pop
call
fnsave
stos
ljmp
sub
leave
adcl
icebp
loopne
add
faddl
jmp
push
push
xor
insl
outsb
cmpsl
int3
push
lods
loopne
aas
rorl
pop
popf
sub
andl
sub
fcom
out
push
mov
int
pop
pusha
adc
pop
dec
aam
inc
pop
xchg
ss
lea
cmpsl
call
push
aaa
push
jns
mov
pusha
rcl
push
test
insb
movsl
lock
mov
insl
push
in
popa
pop
push
xsavec
daa
mov
mov
aaa
push
sub
mov
int3
mov
dec
pop
insl
xor
repz
xor
and
cltd
hlt
cwtl
subl
fwait
xchg
xor
mov
roll
cmp
out
ret
fsubr
cmp
xor
loop
out
test
scas
orb
mov
cs
mov
add
mov
mov
mov
scas
jno
jns
iret
fsubrp
fsubr
dec
pop
addr16
enter
repz
stos
rorb
mov
outsb
push
jg
jge
pop
pushf
cmc
fmuls
mov
pop
mov
mov
xchg
loope
sbb
inc
lods
fs
iret
aam
iret
inc
sbb
mov
nop
add
xchg
xor
mov
loopne
xor
pop
xchg
mov
add
daa
add
les
mov
popf
pusha
adc
sbbb
push
mov
push
int3
lahf
inc
pushf
les
into
or
ds
es
mov
sub
dec
sarl
mov
add
mov
in
adc
pop
cmpsl
and
mov
outsb
faddl
jb
ret
adcb
mov
movsl
call
mov
dec
mov
repz
je
les
jmp
cmpsb
hlt
shlb
ret
shrb
dec
lahf
rcr
ficoml
push
xor
lods
add
push
mov
cmp
push
push
popl
test
outsb
dec
out
out
jne
pop
loope
jecxz
hlt
sbb
xlat
fistps
sub
gs
inc
rcrl
cmp
test
insl
cmc
outsb
test
movb
imul
and
loop
imul
cmp
fisubl
jae
jecxz
inc
inc
outsb
cli
xor
in
pop
inc
pop
xchg
aas
sub
inc
leave
sbb
out
inc
out
pop
push
fildll
fdivrs
and
or
lods
sbb
sub
fmulp
das
into
push
xor
mov
inc
fimull
push
call
adc
cmp
xor
mov
ljmp
mov
loop
imul
and
outsl
or
cmp
test
fs
enter
rcrb
pusha
sbb
test
orb
movsb
rcrl
xchg
push
cs
call
pusha
test
call
das
push
enter
xchg
mov
add
fneni(8087
ret
test
sbb
adc
cltd
inc
and
inc
int3
jle
leave
cmp
adc
xchg
xor
inc
fs
shll
loope
sbb
scas
lret
mov
cmp
jae
mov
sub
orb
jge
fmul
pop
mov
cmp
je
and
popa
call
hlt
mov
int
cmpsb
mov
sbbb
mov
cltd
js
or
outsb
pop
ret
xlat
lods
add
mov
inc
sbb
insl
repz
jb
inc
loop
sub
lahf
cmpsl
enter
pop
xchg
sbbb
xchg
pop
inc
pusha
mov
xlat
push
outsb
or
mov
push
cs
add
clc
inc
pop
cmpsl
cmp
popf
mov
inc
out
push
ds
cmpsb
out
sti
jecxz
push
add
adc
adc
add
xor
xchg
in
mov
mov
push
int
push
decl
pop
repnz
sub
inc
rep
mov
in
mov
call
repnz
xchg
test
fcomps
jecxz
mov
dec
dec
lods
pop
or
mov
push
lods
jae
je
iret
int
std
call
icebp
push
fsubrl
jp
lock
adc
scas
stos
outsl
into
stos
enter
xor
push
adc
and
jmp
lret
push
filds
test
sbbl
mov
push
adc
test
clc
leave
push
ss
jae
mov
popf
cs
iret
lret
xchg
xchg
fcmovnb
jecxz
adc
inc
into
stos
xor
xor
aam
mov
adc
sahf
ds
push
push
push
fbld
add
sub
jae
dec
mov
lds
arpl
xor
add
popa
push
jne
bound
mov
mov
in
rorl
bound
vucomiss
je
aas
fnstenv
into
push
xchg
push
aaa
and
out
push
sbb
mov
enter
jnp
rclb
jne
ret
call
jg
or
psubb
mov
or
test
icebp
lahf
fxch
loop
or
getsec
fcomps
movsb
es
xchg
orl
out
nop
jne
rclb
sbb
xchg
loopne
lcall
xor
dec
jp
jae
ds
or
enter
jne
pop
jae
lds
in
and
addl
jg
mov
sbb
in
jbe
pusha
mov
mov
arpl
mov
xor
lock
inc
and
jae
shlb
inc
andl
inc
test
xor
or
pop
pop
rorl
int
aam
andb
les
mov
push
clc
xor
ret
jae
inc
jbe
jne
add
sub
lods
sbb
int
cmp
dec
scas
lds
push
shll
dec
arpl
dec
adc
xor
mov
filds
aas
dec
mov
dec
pusha
add
mov
lahf
popa
sti
test
out
in
and
call
clc
jp
lods
push
dec
adcb
arpl
into
loopne
aaa
inc
sbb
fwait
loope
xor
sbb
xchg
cmp
or
add
in
xor
insl
les
add
xor
ret
sbb
cmp
rcll
addr16
daa
mov
inc
mov
xchg
xor
in
insl
add
mov
mov
or
inc
in
fbld
push
mov
jnp
ss
cli
xor
sbb
adc
imul
lahf
mov
jnp
movsb
int
cmc
jno
stos
cmpsl
mov
pop
lret
cmpsb
mov
push
dec
mov
sbb
movsb
or
mov
adc
fstps
pop
add
call
and
pop
int
les
lods
sarl
in
insb
clc
push
int3
ret
sbb
cmpl
xor
imul
push
jg
jb
addr16
pusha
inc
outsb
into
mov
enter
leave
adc
mov
divb
into
and
and
lods
mov
push
jge
jno
out
outsl
imul
add
movsl
lea
stc
loopne
xor
ja
mov
and
lret
pop
lcall
fsts
push
mov
push
loopne
add
push
add
incb
xor
pop
lret
je
push
mov
mov
aas
mov
ret
sti
test
outsb
in
ss
addr16
or
lds
cld
push
push
push
fsubrp
inc
jp
sahf
pop
rclb
es
adc
icebp
orb
push
ss
and
xor
jp
xor
sbb
adc
stc
mov
nop
sub
jb
mov
mov
adc
ret
cmpl
mov
sub
cmpsb
movsb
push
fbld
pop
cmpsb
es
jns
cmp
jnp
sub
shl
sub
xchg
and
mov
in
cld
inc
out
fcmovbe
mov
push
jne
xchg
ror
mov
lcall
insb
cmp
push
mov
test
js
sahf
jge
cmp
bound
popa
leave
fcmovne
xchg
inc
mov
add
jecxz
repz
mov
mov
dec
std
scas
aad
ljmp
xor
push
sahf
mov
sub
jnp
xlat
fnstsw
imulb
fcmovnb
pop
cmc
int3
in
or
fcoml
pop
fwait
cmp
jmp
adc
mov
into
xor
and
mov
in
jmp
in
mov
push
xchg
push
call
pushf
mov
adc
dec
shlb
fs
push
dec
sub
fdiv
xchg
jl
jae
aam
cmp
xchg
lods
in
cmp
fwait
popa
xchg
fisubrs
lods
sub
mov
scas
cld
into
testl
in
jmp
dec
cmp
or
popf
jnp
cwtl
adc
push
std
xchg
lret
sub
sub
out
dec
inc
and
add
insb
stos
inc
xor
cmp
jle
jns
lods
inc
mov
out
add
dec
xlat
cli
dec
dec
inc
dec
movsb
adc
inc
in
pop
add
add
mov
mov
aam
or
jb
adc
fistl
sbb
clc
sti
iret
add
push
lahf
mov
add
mov
lcall
jmp
inc
push
loopne
stc
cmp
xchg
jle
inc
fld
lret
clc
ret
minps
xchg
into
js
dec
or
fwait
lahf
cmp
pop
xlat
adc
push
aas
add
jl
sahf
fwait
aas
jl
mov
mov
lahf
push
out
test
cmp
rclb
dec
xchg
aam
dec
sub
imul
mov
fsubrs
loop
xor
outsl
lcall
test
lret
sub
xchg
push
dec
sahf
push
lahf
mov
push
cmp
jp
out
xor
dec
std
in
mov
adc
test
scas
push
gs
sarb
iret
pop
aaa
adc
lahf
jns
movsb
add
sub
jg
stos
stc
and
test
in
jp
lahf
jb
adc
jae
and
ja
lea
lods
es
mov
icebp
insb
int3
stc
fdivs
aaa
sarl
clc
adc
jl
dec
mov
sahf
ljmp
imul
cmpsl
mov
xor
repnz
mov
push
int
sbb
xchg
inc
or
das
dec
mov
mov
fnstenv
shl
mov
sub
sbb
push
popa
les
mov
adc
out
add
pop
aas
mov
or
adc
dec
enter
mov
or
lock
cmp
dec
inc
mov
mov
sbb
fwait
jg
cli
jnp
adc
push
sahf
or
pop
mov
sub
loope
mov
xchg
dec
call
pushf
push
gs
mov
xor
loopne
or
movsb
aad
lods
xchg
pop
fs
movsl
js
dec
push
lds
fs
xchg
xchg
nop
ds
cmpl
imul
xor
pop
adc
inc
xchg
lcall
cmp
loop
sar
aam
or
es
pop
cmc
stos
jns
lds
mov
lods
push
leave
dec
sub
mov
add
stc
push
cmp
fisttps
aaa
mov
xor
js
or
aam
xor
movb
sbb
shrl
jle
inc
add
and
test
jmp
les
ja
and
cmp
mov
add
sahf
or
push
stc
cwtl
mov
and
mov
adc
adc
sub
lock
daa
adc
add
sub
filds
adc
faddl
pop
mov
mov
pop
lcall
inc
push
or
movsl
mov
push
cmp
push
dec
lcall
call
and
hlt
pop
mov
std
sbb
jb
xor
inc
out
xor
lcall
dec
call
pop
mov
stos
hlt
dec
mov
je
pop
jecxz
jg
add
dec
mov
and
daa
test
popa
lea
jb
pop
or
mov
ret
sbb
icebp
pop
xor
cmp
push
lret
test
and
xchg
mov
ja
fwait
dec
lea
or
adc
jnp
push
mov
fs
out
sti
in
cmp
lret
mov
loop
dec
adc
enter
xlat
cld
js
rcr
adc
mov
sub
stos
mov
cmp
sub
push
mov
mov
aas
iret
xchg
or
jo
mov
in
jb
lods
jg
jp
and
dec
fs
and
pop
ret
adc
and
or
xor
wrmsr
add
mov
fldl
add
daa
jmp
fs
pop
aam
jno
cmpsl
adc
sub
icebp
lea
imul
xchg
cmpsl
sub
xor
je
cs
and
push
lret
enter
push
cmpsb
add
dec
xchg
inc
push
mov
subb
add
aaa
pop
inc
mov
sti
cmpsl
lds
shr
mov
int3
insl
sub
push
mov
fcoml
test
iret
mov
ror
movsb
movsl
cmp
push
xor
xor
je
pop
mov
ljmp
bound
xchg
jl
adc
rclb
and
iret
loope
fadds
xor
push
mov
int
cmpsb
jl
pusha
push
xchg
cli
push
cmp
lods
scas
out
aad
mov
enter
push
inc
test
lods
push
hlt
imul
jnp
int3
aas
dec
add
push
jnp
sbbl
cmp
inc
fcompl
push
add
pop
add
inc
cmp
mov
fsubrs
call
fisubl
jno
adc
fidivl
notb
lahf
sbb
pop
fnstsw
out
das
or
sub
pop
mov
push
test
inc
movsl
stos
orb
jae
dec
clc
sub
test
fisubl
jb
push
push
inc
movl
push
stos
mov
pop
push
xor
sbb
push
push
cmp
inc
bound
shll
push
xchg
jl
pop
mov
xor
add
imul
adc
sub
stos
sub
adc
std
cmp
add
ss
arpl
and
mov
lock
push
sbb
pusha
lret
cmpsb
scas
imul
dec
xchg
or
mov
daa
negb
es
fstps
cmp
fadd
cld
pop
imul
or
mov
xchg
mov
mov
cmpb
inc
mov
xchg
jmp
jnp
jmp
sbb
jle
int3
into
cmpl
and
cli
addr16
pop
test
js
mov
imul
sub
ret
jns
cld
popf
pop
xchg
sbb
inc
jmp
jno
cmp
or
sahf
pop
fidivrs
les
jae
adc
aad
fdivrl
lods
ror
inc
loope
mov
add
xorl
or
xor
xor
jge
xchg
shlb
fnstenv
xchg
negl
out
adc
lret
xchg
test
jmp
jge
sbbl
pop
loopne
shlb
mov
pop
push
popl
gs
sub
dec
movsb
aad
gs
andl
adc
mov
inc
pop
adc
out
imul
pop
fnstenv
pop
pop
lahf
pop
inc
sbb
and
arpl
inc
je
and
leave
ljmp
mov
push
add
pop
jne
shlb
cli
xchg
mov
xor
fsubs
mov
mov
iret
imul
add
pop
test
ret
pushf
scas
mov
into
adc
leave
cli
movsl
fstps
stos
mov
mov
cmpsl
sub
push
daa
fcoms
cli
sahf
pop
cmp
loop
mull
popa
pop
push
addr16
and
icebp
lea
mov
sbb
je
std
mov
test
call
push
xor
jl,pt
test
dec
push
push
sbb
push
imul
call
or
scas
rcrb
push
imul
add
shll
xor
lahf
sbb
adc
jo
sbb
iret
xchg
lret
jb
sub
xchg
cmp
mov
dec
mov
sbb
cmc
es
aaa
pop
subb
jb
and
xchg
aam
dec
push
sub
rcl
mov
push
mov
pushf
or
inc
jle
call
adc
fidivl
or
sti
movsb
popf
icebp
mov
mov
pop
cs
inc
mov
or
xchg
xor
sub
xlat
pop
jne
and
mov
jge
test
nop
outsb
icebp
and
out
push
mov
pop
imul
fisttpll
fimull
int
and
jbe
popa
xchg
mov
in
dec
loope
and
xchg
push
and
mov
push
inc
movsl
xchg
mov
mov
movsl
add
inc
xchg
cmc
ret
mov
xor
fs
add
sbbl
dec
sub
je
fnsave
out
shrb
or
pop
test
loopne
xor
cmp
mov
push
lahf
out
sahf
jo
cwtl
jo
inc
sub
test
out
lret
push
fwait
push
repz
std
dec
dec
or
stc
bswap
jne
das
jmp
mov
mov
sub
dec
inc
fucom
mov
and
or
mov
mov
dec
and
cmp
rcl
fiadds
adc
cmp
mov
clc
imul
mov
loop
rorl
sbb
xchg
js
xchg
push
jb
mov
or
jecxz
sub
sub
cmpsl
mov
xchg
aaa
cmpsl
in
in
sbb
lcall
mov
fmulp
adc
mov
imul
popf
into
inc
pop
cs
aad
pop
push
in
out
pop
xor
adc
sbb
enter
test
push
cmp
hlt
adc
lret
xchg
shrb
push
xchg
ret
mov
jp
sti
data16
stos
dec
xchg
pop
xchg
jno
adcl
js
nop
jle
jp
sahf
cmp
bound
or
xchg
cli
mov
add
adc
insl
insb
dec
sarl
gs
pop
notb
into
pop
xchg
in
pop
push
iret
cs
ljmp
sbbl
xor
jmp
mov
mov
cmp
jle
add
cmp
inc
pop
fwait
hlt
fdivrp
sub
lahf
jo
xchg
jbe
fisubl
fldt
xchg
ficoms
cmp
cmpl
mov
and
jb
adc
fstpt
xchg
jno
mov
pusha
cs
js
loope
pop
aaa
fnop
cltd
ds
in
fidivs
jbe
lds
xor
ret
xchg
cmc
jb
clc
push
and
add
mov
movsl
mov
in
xor
pop
mov
mov
js
loopne
mov
add
outsb
fldcw
or
test
jbe
shll
xchg
insb
or
ret
cli
lods
push
adc
outsl
arpl
leave
loopne
dec
cmp
cmp
cmpsb
add
pop
and
sbb
rcr
mov
arpl
mov
js
xchg
cmp
les
cltd
into
cmp
stos
iret
scas
and
pushf
pop
rorb
inc
rorl
daa
mov
enter
cmc
mov
adc
std
jb
lds
outsl
lock
addr16
hlt
push
fcompl
sub
xchg
add
shl
xor
out
out
cmp
cltd
in
repz
hlt
vmptrld
fwait
inc
jo
cltd
loopne
scas
ret
pop
in
in
rcl
jmp
movsb
sarb
mov
push
mov
push
pop
and
mov
in
cmpsb
jge
push
mov
or
adc
cmpl
xchg
dec
push
mov
ret
std
add
cmp
xlat
xor
jae
cmp
jae
repz
fnstcw
add
sbb
std
mov
loop
pop
and
testb
test
out
int
inc
int
mov
cmpsb
mov
add
clc
jp
add
sbb
rcll
jne
pop
mov
add
mov
and
ret
sub
mov
xor
xchg
mov
sbb
inc
fistps
xchg
rcr
adc
dec
xchg
or
xchg
lahf
cmp
stc
push
adc
sahf
out
dec
repz
mov
xor
sbb
mov
lods
cltd
or
repz
xchg
mov
imul
adc
cli
out
out
sub
jnp
jl
mov
mov
pop
cmp
ja
in
mov
sbb
xchg
sbb
mov
pop
out
jnp
mov
imul
stos
jns
add
shll
and
test
dec
ret
mov
and
adc
push
xchg
les
test
pop
jbe
dec
aam
repz
jno
imul
pushf
aam
es
mov
aas
push
mov
pop
subl
shrb
leave
clc
rorb
aaa
and
xor
call
push
in
orl
loop
pop
jno
ficomps
mov
stos
sub
push
test
pop
jl
add
sbb
sbb
add
fs
nop
xor
adc
xchg
fldcw
filds
cltd
addb
xor
jle
xchg
sub
out
test
testl
xor
mov
xchg
adc
les
add
fnsave
lahf
notb
daa
je
jmp
pop
scas
mov
rorb
js
jmp
push
cltd
and
adc
pop
mov
or
stc
arpl
pop
addr16
sbb
sbb
cmpsl
ja
insl
loope
pop
out
cmp
mov
mov
fs
fdivrl
adc
mov
xchg
pop
outsl
inc
mov
push
outsl
xor
add
lret
jb
es
xor
fsubrs
push
jecxz
pushl
cmp
push
idivl
or
cmc
push
mov
lahf
add
mov
loopne
cwtl
js
cs
daa
stc
int
imul
movsl
lret
sbb
adc
or
popa
adc
cwtl
ret
mov
and
ds
ficompl
mov
mov
enter
insl
cmpsb
adc
out
cmpsl
in
and
adc
jo
mov
jnp
inc
stos
fwait
repnz
xchg
dec
xchg
lret
arpl
repz
jae
add
test
xlat
fisubl
aas
jmp
pop
pushf
jle
int3
jae
subb
push
dec
fstl
mov
xor
jmp
sar
xchg
jmp
cmp
ljmp
int3
or
mov
sub
dec
xlat
xchg
adc
xchg
cmp
jle
orl
idiv
add
pushf
cmc
add
push
or
repz
push
mov
fisubs
push
or
enter
xor
lods
pop
cltd
arpl
lock
jle
leave
and
jmp
push
jns
mov
push
cwtl
fwait
push
ret
test
ljmp
or
push
scas
movsb
loope
test
pop
out
pop
lahf
dec
loop
sbb
js
xlat
out
cmpsb
mov
xor
daa
fadd
mov
mov
outsb
pop
fisubs
fildll
les
push
sbb
xchg
fisttpl
int
ja
fwait
popa
loopne
stos
cli
dec
xchg
inc
jb
psllw
test
enter
mov
lahf
sub
int3
fstps
adc
mov
jno
pop
xchg
adc
test
testb
test
cwtl
sub
loop
popa
mov
adc
or
addb
push
cld
mov
push
lcall
mov
std
test
adc
sub
or
pop
insl
enter
xor
int
pop
ljmp
dec
add
xchg
cli
pop
inc
sub
or
xor
mov
es
push
into
xchg
inc
push
popf
and
test
xchg
fistl
ret
mov
sarl
jne
adc
ror
andl
or
aaa
mov
rcr
fs
xchg
call
ret
mov
pop
push
jge
scas
fadds
sbb
mov
xchg
mov
loopne
pop
cltd
scas
sbb
pushf
shlb
mov
fcomip
das
adcb
xchg
test
or
sub
mov
jns
aaa
sbb
aas
xchg
out
lock
ret
jnp,pn
lret
cmp
inc
jns
xor
cli
add
xchg
push
or
data16
cmpsl
fisubl
sbb
lret
jl
sbb
jnp
inc
sub
sahf
cmp
push
cmpsb
arpl
jge
pop
ret
inc
sbb
movups
mov
stos
push
outsl
outsb
mov
cmp
div
xlat
or
pop
inc
mov
jno
add
imul
xchg
das
addb
lods
jge
xchg
pop
repz
outsl
cmp
mov
pop
sahf
mov
test
into
fistps
in
in
daa
sub
inc
cmpsb
inc
fistpl
rorb
mov
sbb
fists
pop
sbb
bound
aad
xorl
push
scas
sbb
cmp
outsl
dec
mov
fildll
subl
and
sub
push
jne
test
xor
pop
and
mov
mov
lods
insb
mov
sahf
scas
lret
cmp
out
mov
jecxz
in
and
jnp
notl
out
ficoml
dec
adc
cmpsl
sbb
sub
das
inc
ja
xchg
and
xchg
mov
or
xor
jp
jnp
jl
push
jmp
or
shlb
test
xchg
jns
jp
pop
dec
call
repnz
pop
fisubrs
inc
dec
cmp
popa
add
push
jecxz
jg
dec
sti
add
sub
pop
lahf
xor
shrb
ja
aam
mov
xchg
int3
fidivrl
push
mov
or
xor
or
pusha
sbb
adc
inc
xor
fbld
jp
sub
fcoms
push
pop
out
xor
cwtl
sub
inc
in
inc
movsl
fisubrs
sbb
push
aam
dec
mov
cmp
mov
cmp
mov
sbbl
mov
or
mov
arpl
jge
jge
or
bnd
jnp
mov
push
mov
cwtl
jnp
aas
nop
mov
aad
inc
fiadds
pop
loop
addr16
adc
cmpsb
lods
add
cmp
enter
xor
outsl
ret
arpl
adc
arpl
sarl
xchg
and
inc
mov
mov
xor
push
gs
addb
cmp
mov
and
inc
cltd
jno
dec
flds
mov
mov
insb
fldenv
inc
jmp
sbbl
jmp
xchg
leave
out
push
xchg
orl
imul
ret
push
ret
adc
sti
mov
decb
adc
jl
cmc
push
insl
cmp
rep
js
adc
cmpsl
xchg
sbb
je
lock
mov
pop
testl
jo
pop
das
fiadds
shlb
and
lock
test
lods
popa
push
call
mov
inc
in
xchg
ss
call
int
fucomip
ss
ret
neg
or
sub
aaa
sahf
lahf
pop
clc
xchg
mov
into
mov
push
xchg
bound
jo
jne
jp
lods
xor
adc
dec
adc
mov
out
aas
xchg
cmp
or
push
add
ffree
cmc
xchg
xchg
cmp
in
mov
push
flds
mov
shll
cmp
pop
arpl
push
dec
inc
pop
inc
pushf
outsb
les
inc
mov
arpl
xor
ja
lods
mov
mov
loopne
xor
mov
lock
stos
iret
sar
rclb
insl
mov
push
jg
mov
iret
sbb
popa
stc
mov
into
mov
ror
cli
mov
sub
mov
mov
cltd
out
mov
test
insb
ljmp
scas
repz
and
sbb
pop
mov
jg
add
shll
shl
sub
push
adc
pop
cs
arpl
and
lcall
inc
ficomps
push
add
xchg
pop
ss
gs
in
enter
jb
fsubl
and
sub
dec
stos
push
je
or
adc
aas
jo
or
push
push
adc
dec
stc
sahf
aas
jge
imul
lock
lahf
sub
bound
ret
xchg
push
xchg
mov
mov
add
adc
mov
notb
adc
add
fwait
lods
fimull
push
ret
out
add
aas
mov
lock
fildl
bound
jle
sub
xchg
or
inc
jb
sti
mov
sbb
mov
dec
lret
shll
rcrl
sbb
ds
fcompl
outsl
mov
and
daa
in
cs
adc
sub
sbb
lds
mov
repnz
xlat
mov
inc
rorb
lcall
mov
jl
inc
mov
push
lea
popf
dec
scas
stos
and
and
or
add
sub
std
push
movsb
lret
jl
insb
in
cltd
test
or
test
jge
loopne
lods
repz
and
fdivrl
xchg
push
fcmovb
scas
xchg
data16
iret
adc
or
mov
adc
incl
inc
dec
sub
dec
xor
in
ss
ja
stos
dec
rcll
repnz
mov
movsl
int
jmp
xor
push
xor
in
inc
adc
les
ficoml
inc
mov
gs
repz
aaa
push
packuswb
cmp
and
inc
and
stos
lahf
cld
rorl
leave
in
push
and
jecxz
add
adc
sub
pop
xchg
and
insl
cmpsb
pmuludq
lock
int
sub
cmp
mov
jns
dec
or
insl
lret
push
jg
mov
scas
movsl
mov
add
outsb
fs
ljmp
decl
xor
jp
rorb
lds
inc
cmp
add
or
rol
jmp
or
cmp
mov
jno
mov
fs
pop
fistl
test
pop
ljmp
jle
hlt
std
jle
sbb
mov
xor
jmp
arpl
pop
add
xchg
jns
jmp
fnstsw
test
push
sub
scas
jae
cwtl
loope
jp
xor
jb
inc
xlat
sub
in
inc
lcall
shrl
xchg
jo
aam
xchg
and
pop
xor
mov
add
jge
gs
jle
outsb
xor
stos
pop
pushf
lock
and
data16
jno
rcrl
sbb
add
push
insl
jecxz
xlat
inc
mov
inc
popf
icebp
rorb
add
push
pop
jmp
fwait
xchg
sbb
sbb
inc
dec
int3
jp
sarb
cmpsl
cmp
pop
rolb
outsb
sub
adc
gs
sbb
mov
inc
mov
pop
xchg
pop
mov
mov
das
xchg
call
addr16
leave
push
sbb
sbb
xchg
mov
fisttpll
std
fisttpll
imul
xchg
fcomps
jmp
dec
fsubrp
lods
fidivrs
push
adc
jle
mov
or
cmp
aaa
mov
dec
mov
push
mov
inc
in
roll
lcall
rorb
mov
jle
fildl
lcall
mov
sub
shll
pop
mov
arpl
test
pushf
pop
sub
jmp
push
sub
insb
or
repz
repz
mov
call
cmpsl
xchg
pop
cmp
mov
add
dec
sub
test
enter
lods
jl
add
add
push
inc
ret
sub
xchg
pop
push
push
mov
enter
mov
mov
sub
push
xor
shlb
jecxz
xor
jbe
iret
idivl
pop
sbb
adc
mov
push
bound
mov
sarl
scas
jle
cltd
mov
inc
mov
mov
and
push
unpckhps
sbb
sub
cmp
sub
adc
xchg
in
and
cs
loopne
cmp
daa
shlb
and
push
imul
inc
paddsb
sub
mov
sub
cld
adc
aas
cmpsl
daa
inc
dec
cmp
cmpl
cmp
mov
shl
out
mov
jg
xchg
cmp
cs
sti
inc
push
cmp
or
inc
out
add
push
je
mov
icebp
pop
mov
insl
in
pop
lods
mov
int
shl
mov
push
push
repz
push
negb
sbb
and
sub
push
lods
or
jns
jg
test
sbb
xchg
push
sahf
push
mov
insl
lock
fstpt
mov
sbb
jle
movsb
and
mov
outsb
or
enter
mov
mov
and
daa
cmpsb
clc
dec
ret
mov
mov
roll
fsubrs
jb
cmc
or
shlb
sti
mov
leave
fdivrs
dec
out
sub
jae
mov
pop
mov
xchg
cmp
rolb
and
push
loope
and
leave
sub
inc
ficomps
bound
test
rcll
cmpsl
lcall
adc
sbb
mull
test
fadds
out
sar
jo
mov
inc
mov
lock
movsl
or
cmp
lds
xlat
leave
cli
icebp
or
pusha
mov
cmp
faddl
movsb
aad
fidivrs
loope
sarl
and
leave
pop
scas
push
test
inc
adc
fs
sbb
and
cmp
xchg
les
and
fistpll
push
std
stos
out
sahf
stos
mov
mov
sbb
pop
cmp
orl
fldlg2
int3
push
jno
out
pop
scas
jg
inc
dec
fiadds
test
int
mov
movsl
push
dec
call
sub
arpl
movsb
test
sti
into
je
sbb
sub
jb
adc
xchg
out
xchg
outsl
rcrl
dec
test
pop
and
adcb
shlb
or
inc
pop
mov
test
jo
xor
cltd
xlat
nop
es
cs
adc
jb
adc
mov
add
cmpsl
xchg
xchg
mov
fimuls
mov
cs
push
dec
push
cmpsb
movsb
xchg
jp
movsb
jnp
decb
jecxz
jl
lods
dec
fsubrl
aaa
lahf
xchg
imulb
std
mov
inc
xchg
sub
xchg
xchg
sbb
pop
inc
fs
jg
jl
mov
les
aam
cmp
add
push
push
jmp
jo
mov
jb
xchg
popf
pop
cmc
or
sub
lcall
rorl
cmp
mov
xchg
hlt
fwait
das
cmpsb
insb
popf
nop
xor
lret
scas
pop
xor
dec
adc
in
pop
lods
or
jge
lret
and
cmp
ja
out
scas
dec
cmc
mov
out
xor
mov
inc
lds
cmp
mov
inc
cltd
xchg
mov
mov
movsb
into
fsubl
mov
fimuls
std
add
add
lcall
pop
out
push
subb
mov
clc
jo,pn
pop
and
pop
mov
xor
or
popa
push
sub
arpl
mov
jae
mov
cwtl
mov
mov
push
mov
mov
aaa
out
fdivrp
sub
xchg
lahf
aad
sahf
xorb
push
sbb
mov
aam
add
sbb
aam
or
insb
mov
outsl
lock
cmc
jo
xchg
adcb
testb
xchg
testl
sbb
xor
jmp
loopne
mov
xchg
inc
add
pop
add
and
out
subl
mov
jae
xor
scas
jno
pushf
mov
dec
repz
lret
dec
mov
jecxz
cmpsl
outsl
inc
imul
mov
lret
out
jnp
aas
mov
pop
and
je
mov
pushf
mov
pop
push
nop
and
sub
and
xchg
push
mov
adc
mov
popf
sub
stos
sahf
rcll
jnp
sub
out
cmp
outsl
add
and
mov
stos
mov
xor
movsb
xchg
imul
mov
add
popf
fnstenv
je
adc
sar
mov
js
aas
dec
pop
loope
aad
mov
cli
test
dec
pushl
push
jmp
ss
sub
xor
dec
xor
dec
add
push
imul
push
mov
push
sbb
icebp
push
loopne
das
ret
or
push
stc
jbe
mov
and
arpl
in
cmp
in
popa
and
cld
loope
out
rolb
inc
xchg
cmpsl
and
int
xchg
sub
cwtl
fdivs
xchg
push
imul
jecxz
ss
sbb
fcomps
sub
lcall
sarl
add
or
repnz
rol
or
xchg
cmp
insb
push
imulb
adc
ja
push
das
sbbb
push
sbb
aas
lea
insl
jbe
xor
mov
push
stos
jne
dec
or
xor
push
mov
or
push
xor
test
cltd
push
notb
cmp
xchg
std
outsl
sub
xchg
xlat
xor
shrl
insl
es
add
pop
mov
ds
mov
incb
mov
outsb
je
shrl
into
jecxz
hlt
cmp
push
xchg
call
mov
push
insl
jmp
lcall
push
les
loope
int
ljmp
sbb
pop
dec
ret
jno
bound
test
lcall
cwtl
cmpsl
jbe
mov
adc
mov
fcomps
xchg
mov
gs
cmpsb
jg
fucomip
sbb
dec
cmc
in
jp
jb
popw
sub
jle
andb
xor
mov
pop
xor
clc
dec
mov
dec
sbb
dec
leave
fdivrl
mov
sub
mov
ret
insb
jp
pop
pop
aas
testb
sbb
cmc
xor
jl
and
into
addr16
rep
cmc
add
lods
mov
andl
mov
dec
mov
jo
cmc
adc
in
sbb
cmpsl
mov
dec
mov
adc
inc
mov
insl
popa
adc
fisubrs
ret
push
mov
out
xor
in
negb
xor
push
jl
adc
bound
inc
cs
push
stos
dec
addl
sti
in
mov
dec
adc
mov
jl
int
push
xchg
sub
fdivp
and
repnz
loope
inc
jge
loope
cld
imulb
push
cli
mov
aam
add
pop
fdivrl
lahf
dec
adc
pop
aad
mov
fldl
inc
adc
jb
inc
xor
lret
scas
sub
cltd
outsb
les
or
mov
xchg
sub
push
pop
packssdw
add
cmc
call
jmp
push
inc
add
sbb
insb
and
cmp
push
or
sahf
imul
in
pop
cmp
cmp
movsl
xor
add
mov
lea
cmp
cmc
and
mov
stos
cmp
cmp
je
pcmpgtd
dec
pop
adc
jnp
sahf
out
leave
ret
and
sbb
push
in
lds
in
jl
jecxz
hlt
cld
lea
add
loopne
jo
jo
cmp
sbbl
or
and
cli
movsb
pop
shl
or
inc
push
pop
dec
push
jb
fs
jnp
push
pop
sbb
scas
jge
mov
xchg
out
ljmp
push
or
loop
mov
pushf
out
or
pushf
stos
out
and
mov
inc
shlb
outsl
jg
sub
or
fidivrs
xlat
inc
mov
dec
xchg
cmpsb
xor
jg
push
add
cmp
mov
repz
pop
mov
repnz
ljmp
lods
add
cmpsl
adc
dec
jmp
mov
inc
ret
mov
inc
dec
incb
or
ljmp
cs
jmp
sbb
lods
scas
ja
adc
mov
shlb
cmp
jecxz
jmp
aam
mov
cli
ss
or
filds
xor
xchg
mov
xor
mov
inc
mov
and
pop
sub
fldcw
mov
loopne,pn
jne
mov
lahf
mov
out
jl
popa
loopne
sbb
je
add
pop
into
or
and
or
mov
lea
shll
mov
daa
cltd
or
push
sbb
adc
xor
stc
sub
test
roll
loopne
inc
adc
dec
loopne
insl
xchg
jns
pop
cltd
lret
lret
mov
les
out
rcl
xor
mov
and
in
lods
cmp
jne
mov
xchg
xor
xchg
int
enter
into
outsb
pop
push
mov
insb
fcomps
test
pushf
mov
mov
in
xor
mov
ret
fmull
out
or
mov
in
inc
mov
inc
lahf
pop
dec
popf
mov
push
fsubrl
jns
pop
inc
sbb
jmp
call
pop
xchg
mov
leave
rorb
scas
jmp
test
inc
push
clc
cwtl
jl
stos
je
dec
lock
loop
ret
sbb
adc
pop
xor
sbb
iret
mov
stos
and
cli
and
and
mov
jno
into
push
and
cmpsl
and
movsl
mov
mov
xchg
xor
xlat
leave
xchg
lds
pandn
pop
jns
push
adc
ja
jp
icebp
xlat
addb
add
sbb
cmp
and
inc
and
jg
add
add
xchg
lea
mov
xchg
or
popa
lds
and
mov
lea
mov
push
insl
inc
push
xor
inc
iret
lret
mov
mov
xchg
rorl
add
stos
addr16
je
das
cmp
cmp
push
and
cmp
cld
shll
adc
dec
insl
test
mov
in
pop
xor
fadd
inc
inc
pop
clc
cli
sti
mov
fimuls
cld
adc
fwait
ja
xchg
out
gs
lea
xor
pop
jmp
dec
cmp
mov
lds
mov
and
mov
popa
cmc
mov
shlb
maxps
pop
add
sbb
add
pop
inc
fldt
push
rcr
call
out
lret
clc
shll
dec
inc
call
mov
cs
jl
add
stos
cmp
cmpsb
sahf
jne
loop
adc
enter
jnp
adc
sbb
sahf
dec
lock
lds
dec
add
push
pop
mov
fyl2x
push
cmp
cmp
jmp
dec
jo
and
push
mov
or
and
jnp
test
mov
sahf
sub
pop
dec
lds
in
cmpsb
sub
lock
int3
push
xchg
fwait
inc
into
aam
aad
xor
mov
push
les
or
inc
xor
xchg
stos
xor
jbe
iret
adc
in
pop
popf
fsub
int
xor
push
ljmp
loop
mov
sbb
shrb
fsubrs
pushf
and
dec
xor
sbb
or
pop
std
adc
fwait
int
ficompl
insl
lahf
ret
cltd
pop
movsb
sbb
push
push
in
jmp
in
add
push
push
imul
or
sbb
in
bound
fcoms
mov
shl
lods
and
shrl
mov
sarb
add
loopne
sbb
dec
push
xor
lret
loopne
cmpb
mov
and
pop
jno
xlat
ss
dec
in
js
mov
out
leave
push
xchg
sub
mov
mov
stc
les
popf
loopne
xchg
out
loop
push
cmp
int3
and
add
inc
stos
mov
jle
jo
add
jno
or
mov
pop
push
das
adc
and
cmp
push
fdivl
movsl
dec
out
sub
mov
cmp
popa
xor
stos
and
ror
popa
sub
fstpl
loop
sub
int3
enter
xlat
test
test
add
add
out
divps
outsb
cli
test
pushf
adc
mov
mov
insl
int3
out
rcrb
fwait
js
sub
stc
je
mov
mov
fldenv
loop
pop
adc
inc
daa
fisttps
cmpsl
and
leave
aaa
jne
cld
adc
test
or
mov
sahf
or
in
push
cmp
adc
in
ja
fists
stc
std
sbb
dec
std
in
push
xor
pop
imul
mov
aad
xlat
mov
xor
jmp
stos
frstor
cwtl
mov
mov
enter
icebp
xchg
push
jmp
pop
daa
stos
pop
shld
mov
adc
cmp
jecxz
xor
fsubr
mov
fnstsw
scas
test
fdivrp
aas
sub
popa
inc
out
popa
notb
imul
cmpsb
addb
mov
cltd
adc
xchg
sti
scas
movsb
mov
test
mov
lods
das
fsts
fcmovb
sti
lods
pop
sub
and
and
movsb
dec
pop
or
ja
jmp
hlt
mul
mov
adc
sub
or
or
cmp
jnp
adc
in
sbb
fcomps
out
aaa
sbb
fadds
adc
fisubrl
and
jo
iret
insb
loopne
lea
lret
and
dec
mov
insb
leave
dec
dec
xor
fisttpl
sbb
ret
arpl
xor
xor
xor
icebp
mov
jnp
pop
jl
scas
jp
or
cmp
sub
popa
and
push
imul
mov
push
mov
sbb
xchg
xorl
add
popa
xchg
aas
dec
and
sub
dec
mov
js
inc
push
pop
mov
ds
mov
cmpsb
add
sub
jbe
cwtl
fiaddl
cmp
sbb
sbb
call
sbb
es
add
movsl
xchg
and
sbb
xor
ficoms
jl
cmp
out
shlb
lret
cmp
xchg
pop
cmpsl
loopne
icebp
mov
test
and
xlat
insl
mov
cld
dec
pusha
xchg
sbb
xor
xchg
dec
jge
aaa
inc
in
pop
cmc
sub
mov
cmp
mov
jmp
pop
push
sbb
lds
and
subb
mov
fstpl
gs
lock
ja
mov
loope
enter
lret
notl
in
mov
fldenv
mov
or
fldt
mov
testl
int3
adc
loopne
mov
scas
inc
mov
xor
cmp
fcmovnb
or
loop
movsl
shld
and
cmp
dec
scas
repz
adc
sbb
mov
xchg
addr16
xor
add
inc
adc
jle
sarb
jg
dec
ds
rcr
pop
icebp
fsubl
incl
movsb
lods
sbb
push
iret
pop
xchg
das
and
push
jbe
outsl
add
xor
loop
mov
data16
roll
and
xor
mov
das
adc
das
outsl
sbb
mov
jne
and
xchg
cltd
mov
xor
cmp
pop
pop
test
imul
daa
mov
xlat
std
test
test
xchg
or
sbb
arpl
leave
loope
icebp
push
jo
mov
outsl
dec
cmp
xor
aaa
xchg
es
outsl
xchg
rorl
fimull
shl
mov
push
popf
push
cmp
mov
and
test
mov
jge
push
pop
dec
sub
xchg
int
repnz
jl
adc
and
out
sbb
int
movsl
and
movsb
add
imull
das
lods
dec
cmpb
push
movsl
iret
or
mov
sbb
cmpb
rorl
push
pop
dec
sub
fwait
jge
int
sti
hlt
es
push
sbb
lcall
das
xor
mov
mov
orl
shl
dec
imul
inc
cmp
test
mov
sti
push
iret
in
xchg
je
mov
xor
imul
fsubl
mov
jno
sti
adc
push
mov
test
in
xchg
movsb
xlat
mov
pusha
inc
js
mov
imul
xchg
add
mov
stc
push
pop
adc
outsb
inc
xchg
stos
mov
ret
pushf
loope
xor
repnz
mov
ja
dec
lret
add
xchg
sbb
scas
and
btsl
fnstenv
test
out
push
jno
mov
lds
insb
sub
mov
das
push
xor
sar
add
xor
aam
fwait
loope
or
jns
popa
sar
cwtl
icebp
xchg
add
sub
in
sub
pop
ret
insb
icebp
mov
movsl
add
test
cmp
adc
insb
shrb
add
mov
hlt
pop
aad
mov
mov
jmp
or
jp
pop
cli
sbb
mov
inc
xor
mov
cmp
fdivrp
sub
mov
xchg
adc
std
pop
fadds
lret
andb
jg
adc
icebp
repnz
xor
hlt
cwtd
out
cwtl
les
jp
xor
dec
jnp
jmp
xlat
sub
inc
pop
cmp
xor
or
pop
push
mov
adc
push
push
movsb
inc
pushf
cli
or
xchg
int3
lret
stos
aaa
outsb
cmc
pop
aam
xor
mov
cmp
or
dec
fisubl
repnz
or
loope
pop
mov
jbe
and
add
xor
bound
inc
jle
cmp
jmp
ss
in
jl
std
outsl
mov
std
out
in
repnz
push
dec
xchg
add
cmp
jge
mov
aad
and
bound
adc
push
subb
andl
inc
out
insl
inc
push
xor
cld
insl
movsb
pop
enter
imul
fwait
in
inc
add
mov
xchg
ja
push
xor
imul
clc
sub
mov
comiss
mov
stc
js
imul
popf
testb
dec
lods
insb
push
leave
pop
imul
ret
mov
or
inc
test
sbbb
or
adc
popa
popl
jbe
dec
dec
in
popa
fldcw
repnz
das
lea
jmp
push
subl
je
or
dec
in
and
dec
inc
fcmovbe
sbb
into
data16
sbb
xlat
mov
cmpl
mov
test
std
shlb
xor
outsl
xchg
ret
int
pop
xchg
sub
loope
jge
dec
adc
vfrczpd
adc
das
out
pop
dec
mov
pop
mov
xchg
dec
arpl
enter
outsl
das
pop
pop
fldcw
adc
aad
repz
roll
cld
mov
leave
into
test
cmpsl
pop
push
out
sbb
loopne
sarb
loop
sub
sbb
xchg
jmp
xchg
inc
pop
mov
xchg
xor
orl
movsl
cmp
and
addr16
mov
in
mov
xchg
mov
daa
fldl
and
test
xchg
in
adc
dec
int
fucompp
in
ret
push
jge
mov
test
or
pusha
imull
sahf
push
std
add
dec
std
sti
sti
je
add
push
pminsw
testl
jg
push
add
xor
jae
push
xor
leave
insl
adc
scas
dec
sbb
cmc
cmp
mov
adc
fistl
pop
dec
xor
mov
or
stos
mov
and
fstps
aam
or
lods
lods
xchg
call
mov
rorl
pop
popa
daa
dec
add
add
push
or
mov
dec
mov
rolb
push
pop
sub
pusha
aad
nop
cmp
scas
mov
decb
add
add
daa
data16
inc
xorl
scas
pop
and
pop
pop
loope
xor
rorb
mov
mov
adc
cli
dec
adc
jl
inc
hlt
xor
adc
jp
int
loopne
push
iret
dec
add
inc
push
jae
push
and
pop
es
adc
mov
ljmp
push
jg
xor
push
xor
inc
sub
fimuls
addr16
cmp
or
neg
mov
lret
cltd
pop
imul
and
sbb
sbb
xorl
lret
dec
push
cmpsb
into
push
xchg
std
lret
mov
fwait
les
sti
dec
pop
es
xchg
std
cmp
gs
inc
jne
or
adc
xchg
ljmp
fs
por
in
scas
jae
pop
aad
aaa
out
fs
and
hlt
push
fistpll
mov
sub
leave
mov
xor
in
jno
mov
mov
cwtl
iret
and
or
xorl
sarl
cmc
cmc
pop
or
out
loopne
rcr
adc
jmp
lahf
sti
loop
pop
adc
ja
pop
jns
jmp
js
int3
pop
in
sbb
push
call
daa
add
ds
mov
add
or
cmp
mov
repnz
dec
shll
clc
dec
les
sbb
push
xchg
sub
ret
sbb
sub
shl
push
sti
outsl
sbb
loopne
lcall
in
cmp
jmpw
lahf
jle
insb
push
pand
xchg
lods
mov
sub
jp
arpl
pop
dec
push
js
mov
adc
and
sbbb
jmp
pop
imul
add
or
and
out
mov
stos
sbb
xchg
push
cmpb
fwait
mov
insb
repz
icebp
pop
imul
outsb
dec
fcomip
inc
mov
sbb
jb
add
sbb
in
inc
frstor
clc
mov
cmp
imull
cmp
pop
rcrb
ret
out
cs
or
inc
jecxz
push
repz
jp
out
ja
pop
mov
inc
cmp
aaa
sub
pusha
sbb
push
push
fldenv
lahf
std
jae
xor
data16
xchg
std
out
adc
dec
jb
inc
sub
mov
sbb
mov
pushf
xchg
push
test
pop
mull
pop
movb
sub
or
shrl
das
cli
subl
mov
inc
cs
or
inc
ficompl
scas
das
jmp
push
sbb
sbb
mov
dec
xor
sub
xor
inc
add
cmp
adc
xlat
pusha
imul
andl
inc
push
dec
lds
repz
fisubl
jnp
lock
stc
jb
push
cltd
xchg
test
push
pop
mov
in
data16
or
xchg
mov
push
repz
outsl
popa
test
addr16
sub
pop
push
pusha
inc
shl
xchg
fdivrl
loopne
fcompl
cli
mov
xchg
push
jp
xor
or
xchg
gs
and
loop
mov
push
dec
fs
faddl
cmpl
mov
mov
adc
cmp
das
test
or
aaa
sahf
adc
mov
adc
jmp
sub
adc
jl
adc
push
or
loop
and
inc
je
xor
jg
fs
pop
movsl
sti
push
mov
pop
push
aas
gs
dec
movsb
push
cmp
je
sbbb
cs
enter
xchg
lret
mov
mov
xchg
aaa
std
les
xor
pop
popa
mov
rclb
aam
jmp
xor
test
mov
jne
lret
sti
or
out
popl
and
dec
outsb
mov
data16
mov
pop
fisubs
sarl
cmc
mov
add
xchg
xchg
sbb
pop
or
jno
bound
std
insb
mov
icebp
lods
cmp
cli
dec
shl
sbb
or
hlt
imul
pop
mov
arpl
jle
lods
pushf
mov
icebp
inc
fsubs
dec
rcl
repnz
lcall
mov
pop
or
outsb
sbb
jecxz
repnz
rcll
bswap
mov
insb
or
out
pop
int3
push
mov
gs
lret
or
fstps
aad
es
push
inc
mov
mov
pusha
adc
scas
pop
inc
and
enter
addr16
insb
cmp
push
cmp
mov
aas
mov
sarl
sub
in
aaa
and
jp
adc
hlt
xor
adc
cmp
orb
add
daa
out
xchg
cmp
aad
les
test
mov
flds
lret
popa
add
popf
fistps
mov
insb
rdtsc
outsb
push
mov
cli
add
xchg
aas
mov
or
mov
jg
jns
jb
cmp
xor
cmp
push
cltd
inc
aas
jmp
ret
pushl
add
sti
dec
stc
sbb
jo
out
lcall
add
in
in
jp
jg
nop
or
div
das
sti
mov
xchg
cmpsb
ds
lea
jg
subl
call
mov
xchg
fbstp
in
jno
mov
cld
call
cmc
mov
jg
rclb
dec
add
inc
xor
xor
dec
leave
dec
cmp
out
mov
xchg
test
repz
cmp
stc
and
adc
test
lcall
cmp
cltd
loopne
jae
mov
in
enter
sub
mov
mov
stos
imul
in
xchg
sub
leave
outsb
stos
ss
and
femms
xor
pop
push
mov
cmc
fisttpl
mov
popa
insb
inc
pop
stos
shlb
lea
lds
mov
inc
hlt
lock
insb
adc
popf
outsl
mov
ret
fsubrp
enter
jp
out
xchg
stos
xchg
cmp
sahf
push
inc
xor
mov
gs
lods
fndisi(8087
das
sbb
imul
pop
push
mov
add
cmpsl
cmpsb
sti
ljmp
push
mov
inc
jno
lret
add
repz
popa
in
cli
roll
leave
and
imul
in
aaa
push
loop
jne
scas
adc
fimull
xchg
ja
dec
repnz
add
cltd
jle
xchg
xchg
in
dec
jg
jp
iret
inc
jge
cmp
dec
sub
insl
cs
jl
mov
add
inc
push
cli
rol
rcll
pop
fcmovu
jbe
inc
xchg
jp
pop
fidivrs
xor
cwtl
fldenv
cmp
sbb
push
fldenv
mov
push
jbe
adc
dec
scas
pop
xchg
jg
insb
sub
dec
ja
pushf
jmp
pop
xchg
jno
pop
shr
pop
ret
stc
pop
jne
add
jecxz
jecxz
adc
ja
out
imul
push
add
inc
aas
mov
dec
sub
movsl
aaa
jmp
adc
or
xchg
xchg
imul
push
fs
jle
les
in
aaa
cmpsl
mov
mov
sbb
and
xchg
cltd
fld
ds
cmp
jo
pop
adc
mov
test
pushf
popa
mov
cmp
sub
pop
push
inc
mov
inc
mov
jo
mulb
jb
leave
xchg
xchg
xchg
sbb
fwait
jg
outsb
addl
mov
cmp
loope
fldt
mov
sub
cmp
fchs
push
iret
jge
dec
jmp
dec
clc
sub
xor
adc
push
jb
out
xorb
sbb
push
xchg
xlat
scas
nop
mov
jle
sahf
ret
xchg
push
les
icebp
scas
ja
rcrl
pop
jbe
cmp
pop
jl
mov
add
mov
into
jle
sbb
lcall
sub
insl
test
mov
out
mov
mov
icebp
push
loopne
cwtl
mov
push
sub
add
ss
aad
push
inc
inc
adc
popf
stos
or
daa
jge
push
test
cmp
mov
cmp
push
fldt
pop
jl
pop
stos
and
imul
push
in
mov
adc
ja
jne
pop
repnz
mov
push
add
data16
sbb
inc
fnstsw
jb
sbb
fstps
mov
insb
shll
jnp
test
std
mov
idiv
inc
adc
roll
or
push
jl
cwtl
aas
mov
dec
pop
push
fiaddl
adc
lock
insl
push
sbb
xchg
rcrl
das
mov
sbb
fdivrs
addr16
filds
insb
mov
test
xor
jbe
aad
push
repz
xor
mov
mov
not
jb
inc
negl
in
pop
cmp
cwtl
addb
dec
add
and
adc
push
iret
pop
rcrb
in
mov
sub
inc
scas
repnz
pushl
dec
pop
loope
scas
dec
movsb
insl
scas
push
or
into
inc
call
aad
mov
pop
jnp
ds
mov
sub
sti
js
icebp
push
mov
jg
ret
inc
icebp
aam
xchg
sbbb
jmp
fs
sub
sub
enter
xchg
cmp
les
adc
pop
sar
mov
aas
pop
and
xchg
and
cmp
adc
mov
pop
mov
fwait
push
dec
push
lock
pop
jl
add
aaa
or
inc
cmp
cmp
inc
stos
or
mov
lret
push
push
popf
sub
and
mov
je
andl
pushf
sbb
mov
and
loopne
jno
mov
push
aam
inc
mov
mov
lds
mov
xor
add
mov
push
in
stos
push
xor
orb
sub
movsl
sub
jle
jb
pop
sub
insb
add
test
dec
nop
lods
or
inc
jecxz
cmp
fldt
int3
nop
negl
aaa
pop
sbbb
mov
test
push
push
push
adc
adcl
adc
inc
jno
cmc
aad
daa
xor
enter
out
xchg
icebp
addb
test
cmpsl
sti
stc
insb
cmc
mov
inc
adc
dec
mov
lcall
or
xchg
sbb
inc
mov
outsb
cld
lahf
loopne
xlat
aad
mov
jle
jne
mov
std
repz
inc
ljmp
or
adc
mov
in
jl
lods
daa
sbb
jb
stos
in
mov
outsl
les
adc
shll
cmp
outsb
mov
xchg
stos
inc
jecxz
or
jo
and
lret
inc
mov
roll
xchg
jecxz
imul
mov
enter
adc
divb
xor
pop
and
jg
aas
ds
pop
gs
fdivl
lds
aaa
pop
nop
push
ficompl
mov
xor
jno
cwtl
pop
ja
ss
dec
adc
aas
add
cmpsb
xchg
push
aam
stc
aaa
xchg
aam
inc
adc
insb
test
or
fwait
push
sub
aas
jae
dec
xor
jmp
xor
xchg
or
mov
aam
mov
in
or
das
push
movsl
lcall
cwtl
into
adc
or
sti
pop
shll
push
sbb
push
pop
add
jns
lret
rolb
mov
mov
mov
es
loopne
or
xchg
fwait
pop
loop
lahf
mov
xor
cmp
movl
sub
or
cmp
adc
int3
push
jbe
dec
pop
xor
fnstcw
inc
movsb
mov
dec
nop
das
jnp
or
mov
mov
arpl
je
int3
loop
scas
jae
jmp
jo
aaa
inc
mov
mov
add
test
cmc
adc
test
add
lahf
fildl
out
ljmp
dec
outsl
sub
jg
jp
sbb
fdivl
add
popf
inc
bound
test
mov
pop
stc
bound
add
xchg
and
pop
aad
loopne
and
mov
adc
and
jg
and
insl
movsl
notl
jecxz
movsl
and
cltd
cmp
add
ret
arpl
or
loopne
push
lahf
adc
mov
lods
les
dec
aaa
sbb
inc
pop
shl
rolb
pop
jmp
push
pop
test
sti
leave
mov
in
jb
cmp
scas
dec
outsl
jg
enter
call
xchg
xor
cmp
call
push
arpl
or
jecxz
jns
cmp
lea
es
sbb
sbb
push
push
mov
insb
cli
stos
mov
jbe
test
pop
mov
fdivl
shrb
mov
fsubs
je
int
popf
and
call
out
mov
xchg
fimull
andl
mov
mov
xchg
push
pop
dec
sbb
pop
or
mov
sbb
enter
scas
ret
jae
sbb
mov
jecxz
stos
test
jnp
ljmp
jle
scas
jno
add
rclb
fldt
pop
inc
xchg
pop
sbbb
push
repz
call
in
mov
sub
cmp
outsl
push
xchg
mov
and
push
inc
in
or
mov
hlt
in
mov
adc
push
dec
fstpl
xchg
jmp
data16
push
xor
test
pushf
inc
sarl
lahf
sbb
mov
push
pop
movsl
rcl
push
adc
sub
pushf
cld
push
inc
mov
sbb
mov
mov
mov
in
cltd
test
jp
sub
mov
or
jmp
xchg
mov
xchg
xor
arpl
sub
inc
mov
ja
sahf
mov
mov
push
mov
das
xchg
mov
daa
scas
sbb
repnz
aas
xchg
xor
jne
dec
push
dec
ja
pandn
out
cltd
mulb
scas
cmpl
std
iret
scas
mov
mov
shll
or
loopne
das
fwait
push
mov
push
movsb
scas
insb
aaa
push
jl
mov
pop
add
icebp
inc
xchg
dec
fstl
adc
outsl
cs
jbe
hlt
jge
fildl
shr
ja
push
adc
mov
icebp
loopne
lock
and
xchg
mov
jns
jmp
xchg
push
imull
ds
xor
dec
jne
das
pop
mov
jmp
shl
xchg
and
sarl
lea
shr
inc
sbb
out
and
es
sbb
cmp
dec
mov
stc
and
jbe
dec
adc
out
xchg
fdivl
push
adc
icebp
into
nop
or
mov
nop
dec
inc
fisubl
out
cwtl
push
loop
sahf
mov
xchg
mov
mov
shrb
daa
jno
rolb
mov
scas
cmp
sub
dec
daa
push
mov
jne
shlb
leave
jmp
mov
pop
stos
popa
movsb
sub
stc
mov
test
gs
cmp
dec
outsl
jl
lods
pop
outsl
adcl
cmp
int3
mov
lcall
mov
dec
je
aam
aam
in
push
inc
roll
lahf
cwtl
mov
inc
ljmp
imul
mov
pop
and
sub
call
enter
cld
inc
shlb
data16
pop
cmp
out
int3
repnz
or
inc
leave
push
push
jo
fcoml
int3
push
xorb
adc
xorb
js
inc
mov
mov
fnstsw
mov
rorb
mov
xor
push
aad
rcrb
jg
dec
cli
divps
adc
add
aas
imul
arpl
ret
xchg
mov
setl
push
shll
fs
cmpsb
mov
imul
mov
cmp
ds
inc
into
lea
shll
aas
adc
in
jecxz
add
sbb
mov
loope
lahf
pop
cwtl
pop
xchg
mov
mov
xchg
inc
sub
sbb
rcll
mov
xchg
in
fldt
test
and
and
mov
loopne
js
dec
sar
jo
insl
mov
lahf
test
or
mull
rorb
shlb
push
mov
jb
fldz
xor
add
lods
cmp
dec
pop
push
sbb
mov
adc
out
add
insl
outsl
inc
mov
sub
cmc
lcall
ss
bound
pop
cmc
lods
icebp
push
test
aaa
icebp
adc
insb
adc
pop
stos
ljmp
pop
mov
dec
ss
shl
outsl
out
mov
loope
out
pop
pop
xchg
repz
aas
jge
mov
jns
call
dec
pop
fnsave
shlb
outsl
bound
cmp
cmc
pop
dec
bound
fiaddl
xchg
addr16
aam
inc
cmpsb
notb
or
inc
mov
xor
adc
negb
cli
imul
push
push
sbb
je
xchg
pusha
mov
sbb
or
or
pop
rcrl
popf
adc
sbb
mov
pop
cmpsb
push
push
mov
sub
mov
popl
lods
mov
mov
ds
mov
mov
xchg
mov
xorl
and
ds
stos
or
add
aam
rcll
out
push
fs
fstpt
mov
scas
andl
jbe
or
cmp
outsb
rcr
clc
jge
lea
lcall
lret
and
arpl
fld
rclb
in
out
mov
inc
fdivs
adc
das
cmp
inc
addl
xor
or
pop
and
xlat
inc
dec
fildl
dec
mov
dec
lahf
nop
or
jns
adc
cmpsl
addr16
std
adc
mov
daa
in
mov
out
mov
scas
pop
jecxz
add
jecxz
sub
or
jae
or
popf
jle
and
out
mov
xor
flds
mov
daa
ret
add
mov
or
sbb
mov
push
adc
jge
mov
pop
clc
scas
inc
test
lret
pop
dec
mov
mov
gs
pop
cmp
ret
jno
aam
push
and
adc
pop
mov
test
and
xchg
cmpsl
loop
popa
adc
cmpsb
es
outsl
push
leave
into
add
mov
into
jbe
arpl
fistpl
ss
ja
mov
ss
pop
xchg
imul
jle
mov
pop
inc
and
stos
adcb
jns
jge
or
mov
dec
pop
pusha
xchg
pop
and
mov
and
adc
pop
ds
inc
das
pusha
mov
dec
mov
bound
sub
add
and
pop
mov
xor
std
loop
xchg
jmp
add
adc
pusha
outsl
add
mov
enter
push
lret
outsl
inc
pusha
xor
sti
xchg
inc
in
jmp
dec
fsubrl
cmp
ret
add
js
enter
xchg
lds
ror
out
popf
fiadds
aam
jae
daa
pop
lods
push
jl
out
xor
sub
pop
andb
dec
xchg
dec
ja
mov
inc
loop
sbb
mov
sbb
cs
fcmovb
nop
popa
jecxz
pop
imul
add
outsb
inc
in
adc
jmp
mov
sbb
sub
sti
rorl
lcall
push
test
setnp
leave
bound
jae
lcall
cli
imul
pop
xchg
in
loop
lret
dec
inc
fistpll
push
sbb
and
or
test
loope
inc
inc
xchg
inc
mov
mov
mov
xor
data16
inc
dec
int
rcll
aad
or
jge
popa
popa
in
jbe
inc
test
xchg
fimuls
add
popf
repz
mov
mov
jg
jl
jno
xchg
icebp
repnz
or
push
mov
daa
inc
dec
clc
sub
mov
sbb
dec
or
add
push
cmpsl
jmp
adc
scas
dec
mov
and
jae
sub
lret
mov
lods
xlat
and
or
fsubr
mov
insb
pop
mov
in
inc
fsubl
adc
pop
inc
adc
mov
dec
mov
sbbl
in
pop
adc
inc
mov
push
cmpsb
push
std
jns
sub
jnp
inc
xchg
movsb
push
out
xlat
add
sub
sub
outsb
das
les
mov
push
mov
sarl
shll
fcmovu
call
popf
add
inc
xchg
aam
xor
mov
lods
inc
push
insl
adc
fwait
sbb
fildll
mov
int3
xor
xlat
fimull
insb
xchg
add
inc
xor
push
inc
dec
lods
or
mov
mov
je
cltd
mov
xchg
outsl
push
push
bound
jecxz
fs
jo
xorl
jae
and
mov
push
add
mov
jb
je
imul
mov
jne
and
jg
dec
xchg
dec
in
add
movsb
fs
xor
inc
dec
cwtl
or
iret
xchg
mov
add
or
lcall
fcoml
jecxz
cmp
or
jns
adc
nop
mov
scas
movsl
jmp
push
jnp
popa
mov
mov
lods
mov
out
mov
hlt
in
mov
outsb
adc
push
mov
mov
sbb
sti
add
sarl
cli
and
in
sbb
sbb
mov
cld
push
cmpsl
xor
ljmp
sbb
js
testl
lret
inc
adc
daa
stc
jo
mov
movsl
out
add
add
nop
aaa
dec
imul
cmpsl
and
clc
push
jns
testb
sarb
stos
mov
push
imul
fisttpl
sub
out
dec
test
arpl
pop
imul
pushf
adc
imul
xorl
dec
out
popf
cmp
in
mov
ss
lahf
jo
push
add
incb
imul
insl
cmp
cmp
push
icebp
mov
bound
dec
cli
sarb
add
stos
push
inc
xchg
lahf
lret
xor
ja
mov
jo
xchg
pop
xor
mov
jns
sub
jge
or
xchg
cmpsb
inc
pop
sbb
and
mov
stos
inc
andb
inc
idiv
int3
sbb
int
xchg
sahf
push
add
push
data16
xor
filds
loop
cmpsb
popa
mov
sbb
mov
das
mulb
add
fsubp
xchg
das
pop
xor
pop
movsl
das
pop
push
mov
and
es
dec
mov
jecxz
xchg
aas
clc
cmpsb
xor
testl
push
fbld
aas
ja
imul
les
int
dec
cltd
push
mov
repz
call
sub
mov
std
aad
and
testl
dec
sti
call
add
out
mov
jp
es
cmp
jmp
cmp
sahf
pop
outsl
test
adc
mov
pusha
push
and
nop
dec
std
xchg
ret
jnp
xor
lods
mov
pop
int
inc
jmp
scas
movsb
xchg
cwtl
dec
gs
int
fs
into
add
xor
aas
add
add
inc
cs
xchg
push
inc
shlb
cmpsl
aas
xor
pop
sub
int3
divb
pop
in
out
cmpsl
adc
inc
dec
fs
divl
push
rcrl
sbb
flds
jle
jmp
dec
push
icebp
or
add
int3
inc
sub
lea
inc
std
push
out
mov
mov
testl
shll
test
cmpsl
jnp
nop
inc
ss
sub
adc
pushf
lea
mov
jp
adc
push
xorb
mov
mov
or
lock
cmpsl
mov
xchg
rolb
push
lret
mov
sub
sub
stc
mov
or
push
push
sti
daa
inc
pop
inc
pop
out
adc
inc
cmp
adc
and
sbb
cmp
xchg
inc
push
shr
xchg
xchg
je
cmp
outsb
inc
fwait
mov
loope
or
pop
mov
ds
insl
xchg
or
lock
cmpb
insl
lds
jmp
mov
mov
cwtl
call
out
cmp
sahf
push
dec
loopne
imul
movsb
arpl
push
es
dec
mov
fisttpl
mov
jb
xlat
sbb
adc
loopne
cmpb
jl
adc
or
repz
stos
xchg
sbb
inc
mov
jp
mov
dec
lcall
add
movsb
jle
sahf
jo
xchg
lock
xchg
sbb
cs
sbb
sbbb
push
inc
sbb
insb
imul
adc
jge
push
clc
sbb
enter
test
lret
inc
lahf
loop
xchg
pop
sub
xchg
lcall
inc
imul
das
paddusb
mov
xor
movsl
roll
aas
mov
test
pop
add
mov
stos
lea
jg
rcl
ret
sub
sub
jg
cmp
xchg
mov
shr
pop
mov
repnz
lahf
sub
aaa
mov
lcall
int
ds
xor
jecxz
mov
push
jo
sbb
jle,pn
adc
jecxz
or
cwtl
fldl
sbb
jecxz
mov
pushf
cld
jge
lret
enter
mov
ret
xor
rcl
inc
lahf
bound
pop
popf
xor
out
cmc
sub
mov
and
outsl
std
mov
xor
addr16
or
aaa
jecxz
mov
dec
and
nop
mov
int3
stos
in
mov
shll
xchg
sahf
fisubl
fcmovne
mov
cmc
add
insb
loope
xorl
lea
std
ret
xor
rcrb
add
push
pop
mov
ficoms
push
dec
inc
into
cmp
lea
adcb
add
push
mov
js
inc
ficompl
enter
cli
insl
and
cmp
xchg
sbb
cmp
mov
push
shrl
lds
shll
movsb
pop
stc
lods
push
into
out
notl
pop
xor
jbe
xor
mov
or
jg
dec
jmp
lret
mov
int
pop
jne
lret
push
inc
mov
mov
orl
mov
jne
in
inc
inc
jae
inc
in
cmc
out
jle
aad
pop
pushf
in
jns
test
lods
lcall
sbb
push
xchg
sub
pop
into
mov
iret
dec
jno
or
aaa
mov
sub
mov
adc
push
sub
push
lcall
test
lahf
cmc
jbe
in
scas
xor
in
sbb
sbb
or
jg
rclb
xchg
jo
arpl
jl
pop
cs
out
adc
ror
jnp
movsb
mov
int
pop
addr16
dec
push
xor
cmp
movsl
fistpl
push
jne
cmp
sub
je
adc
mov
dec
clc
cmp
mov
repz
clc
cmp
out
xor
mov
decl
and
imul
ljmp
cli
loopne
cltd
dec
roll
jg
mov
xor
int3
mov
lret
ljmp
ror
mov
std
adc
adcb
aam
xchg
scas
cmp
inc
sub
mov
in
mov
push
pop
pop
aad
mov
fdivr
pop
sbb
lret
out
aaa
mov
fs
nop
scas
or
or
cmp
push
sub
out
inc
jle
les
xor
add
or
test
jecxz
mov
sub
sbb
hlt
jecxz
adc
hlt
movsb
push
or
push
dec
cmp
add
cmp
popf
pop
lods
add
xchg
jle
push
xchg
jo
push
pop
mov
xor
nop
jo
icebp
repnz
cli
xor
lcall
sub
int
pushf
dec
loop
insl
mov
pusha
cwtl
jae
bound
jae
ss
jnp
jg
out
push
push
inc
sub
cmp
inc
xchg
into
xor
push
add
clc
loop
xchg
movsl
cmp
and
fdiv
jg
scas
scas
mov
mov
sbb
xchg
adcb
and
mov
repnz
dec
stc
adc
inc
xchg
lretw
sub
test
mov
push
and
mov
lock
mov
cmp
enter
gs
cmp
out
insl
iret
stc
push
lcall
xchg
aam
push
in
and
rcll
mov
mov
lcall
push
push
xor
sbb
movsb
lahf
jl
subl
stos
jne
push
mov
and
ror
mov
ret
mov
fcoml
lahf
cltd
int
cmp
dec
inc
icebp
mull
mov
or
ss
lock
lcall
mov
adc
aas
fcomi
xchg
dec
je
movsb
and
add
jle
jne
sub
mov
cmp
aam
pop
mov
sarb
cld
outsb
or
enter
or
mulb
pop
cld
mov
out
aaa
pop
or
jmp
inc
add
mov
cmc
mov
mov
in
rcr
adc
decl
push
push
mov
test
addl
sub
push
lods
xor
sbb
gs
xchg
inc
adc
outsb
shl
fnsave
dec
mov
pop
leave
movsl
mov
icebp
xor
fs
sbb
xchg
jbe
add
mov
das
inc
mov
adc
stos
scas
fildll
out
push
adc
and
add
ds
inc
outsb
inc
cmp
mov
push
cld
test
lock
jns
jmp
aam
and
xchg
pusha
dec
roll
les
mov
icebp
aas
mov
jno
repnz
ret
out
mov
into
in
out
dec
xchg
out
sbb
push
ljmp
hlt
mov
out
mov
inc
xor
push
push
xor
push
or
dec
pop
cmp
adc
add
sbb
push
push
sub
xchg
xor
xor
aad
fwait
or
xchg
int3
mov
jnp
stos
mov
push
cmp
mov
adc
bound
test
xchg
cld
iret
xchg
and
sbb
fstpl
pop
jnp
push
mov
pop
scas
fidivrs
pop
ret
xchg
aad
xchg
adc
dec
inc
and
inc
cmp
mov
push
and
push
xchg
mov
pop
cmpb
cmp
fdivp
mov
ret
sub
adc
je
loop
dec
movsb
mov
pop
imull
xchg
out
sbb
mov
pop
or
mov
loop
jmp
jmp
xchg
fstpt
lea
sbb
insb
sbb
xchg
ss
in
or
mov
add
and
pop
and
cmpsl
lods
mov
test
mov
push
or
sub
enter
mov
inc
aam
xchg
xchg
pushf
push
fidivrl
test
movswl
push
repz
cmpsl
ficoms
or
cld
inc
dec
loop
stc
stos
xlat
push
call
mov
pop
inc
sub
test
imul
insb
call
ret
jnp
rcr
adc
jnp
cltd
movsb
cmc
mov
mov
loop
das
test
cmp
pop
rcll
push
or
mov
cmp
mov
or
and
and
and
or
and
incb
pop
mov
scas
das
in
or
outsb
and
sub
dec
or
rorb
aas
sbb
inc
adc
or
jno
pop
aas
jg
cmp
das
hlt
data16
scas
push
jns
mov
inc
mov
dec
lret
push
cmc
dec
shrb
leave
dec
push
leave
scas
sub
fsubrs
stos
push
xchg
sbb
push
fildl
sub
or
or
adc
mov
xor
or
movsb
mov
xchg
and
and
xchg
jecxz
dec
aas
mov
mov
and
adc
cmp
pop
jae
ret
pop
pop
jecxz
mov
ds
sub
adc
inc
sub
cmp
jae
arpl
push
cmp
sub
or
pop
out
add
int3
cs
iret
dec
ja
pop
shll
sub
mov
jae
dec
leave
lock
and
ret
subl
dec
stos
cwtl
pop
xlat
dec
aad
stos
xor
pop
sub
sub
addr16
jg
shll
test
push
ret
inc
pop
add
pushf
mov
jmp
xchg
aaa
push
add
stc
faddp
xchg
and
jno
les
push
cmp
lret
cmp
mov
stos
inc
xor
mull
movsl
or
cmp
cltd
mov
ret
hlt
and
cmp
xor
data16
inc
out
es
cmp
fsub
add
arpl
shrl
addr16
scas
arpl
psubd
mov
fisubrl
mov
movsl
arpl
cmp
bound
orb
in
out
cmc
mov
jnp
jle
push
imul
cmp
outsb
sub
imul
sbbl
clc
insb
mov
pop
xchg
rcr
es
push
dec
cmp
aad
mov
fisubrl
jecxz
repz
sub
stos
mov
imull
add
hlt
jo
inc
push
jbe
dec
in
jbe
js
dec
and
fdivl
pusha
add
clc
or
adc
and
push
dec
pop
shrb
cwtl
jg
mov
shr
mov
ret
repz
or
hlt
add
push
xchg
mov
sub
lea
push
mov
outsl
int
scas
mov
enter
xchg
xchg
adc
pop
and
sub
xchg
mov
lods
iret
icebp
dec
jmp
aad
popl
aad
sub
movsl
cmc
jbe
das
cmp
xchg
inc
add
mov
mov
sub
sub
mov
or
pop
push
push
dec
push
movsl
pop
out
sti
minps
and
jns
jbe
adc
push
xor
dec
cs
adc
loopne
mov
test
jae
push
in
or
and
in
adc
dec
mov
dec
cmp
mov
xor
mov
mov
xchg
mov
xchg
xchg
fadds
es
out
dec
out
js
popf
pop
sahf
push
push
jmp
into
dec
inc
test
lret
inc
xchg
fwait
mov
fnstsw
inc
adc
jle
pop
nop
push
aaa
test
inc
pop
fsubs
data16
mov
add
adc
das
adc
fmull
mov
and
inc
aad
clc
ds
or
add
pop
sbb
nop
push
mov
lods
shlb
shll
jge
mov
movsb
dec
and
and
pop
dec
mov
out
popa
mov
mov
xor
fs
lds
sti
rcrl
in
in
ja
out
cmp
mov
fistl
adc
out
pop
scas
ss
arpl
gs
adc
push
es
pop
mov
sub
cmc
xor
ficomps
xchg
push
fwait
into
jns
arpl
hlt
int
outsl
mov
or
cmp
or
and
and
pop
dec
xchg
movsl
cmp
notb
pop
dec
push
shrb
insl
mov
lret
cmpsl
je
nop
cltd
push
mov
xor
add
sahf
and
pop
push
or
cmc
enter
sub
push
mov
fsubr
mov
sti
shll
push
bound
outsb
mov
pop
push
outsl
and
dec
xchg
xor
or
lds
lahf
push
test
or
add
cli
aaa
repz
imul
and
sub
ljmp
pop
testl
lret
xor
out
pop
sub
call
mov
cli
rorb
or
vunpckhps
pop
repnz
icebp
xchg
int
gs
movsb
je
std
pop
inc
adc
shrl
mov
pop
aaa
sti
push
adc
mov
add
ret
add
or
fbld
pusha
ret
divl
jmp
or
lds
and
xchg
xchg
push
mov
loopne
call
fmulp
sahf
pushf
xlat
xor
add
ljmp
or
sub
testb
cmc
pop
add
jl
loopne
cmp
push
aas
mov
enter
or
mov
out
adc
testb
mov
hlt
dec
xor
push
xchg
mov
sbb
jno
loope
and
cli
dec
and
add
negb
test
sub
mov
dec
fcomps
stos
xlat
jns
shl
pop
dec
mull
mov
lock
fadds
sbb
push
xlat
xchg
mov
mov
xchg
jae
cmovne
and
pop
iret
pop
fldl
push
sbb
cld
mov
or
inc
gs
ljmp
mov
xchg
ds
mov
addr16
mov
cmp
js
cli
mov
leave
into
repz
mov
out
popa
and
pusha
xor
mov
xchg
int
movups
sar
aaa
pop
arpl
sbbb
mov
xchg
jecxz
inc
push
and
int3
add
jno
pop
xchg
out
cli
mov
sub
lcall
mov
movsl
xor
jns
push
xchg
xor
shll
mov
mov
pop
bound
jnp
fdivr
inc
pop
lock
push
adc
enter
fisubrs
pop
xchg
shlb
sbbb
fildl
xchg
movsb
int3
rorb
test
mov
xor
mov
gs
mov
or
and
testl
or
test
frstor
sarb
cmpsb
out
aaa
mov
add
jne
mov
ljmp
insb
mov
iret
bound
push
jle
sub
in
jl
and
fnstsw
sar
mov
outsl
mov
js
aam
shl
lahf
mov
icebp
test
mov
pop
xor
mov
mov
arpl
sarl
inc
shll
stc
dec
lahf
push
sbbl
gs
mov
mov
sub
mov
imul
cwtl
aas
sbb
int3
iret
repz
cmp
nop
pop
test
pop
push
idivb
ja
mov
push
mov
cwtl
mov
les
sub
mov
push
inc
add
in
icebp
mov
sbb
insb
ds
mov
lret
in
into
or
test
dec
sbb
sarb
lea
add
dec
add
and
bound
jne
mov
xchg
xchg
push
lods
stos
add
rdtsc
shl
dec
push
fnstsw
fwait
push
mov
pushf
and
ret
shr
sahf
pop
call
ficompl
and
xor
push
popf
inc
xchg
scas
pop
sbb
inc
or
mov
or
mov
adc
sub
out
mov
orb
bnd
jl
popa
lahf
cmp
cmp
jecxz
xor
cmp
daa
iret
ss
sub
cmpsl
and
add
inc
or
pop
sub
adc
aam
adc
pop
jbe
arpl
xchg
adc
outsb
xor
ljmp
xor
pop
outsb
dec
and
mov
mov
inc
jae
cmc
pop
fdivrs
pop
scas
cmc
lods
mov
cmp
es
cmp
lret
outsl
pop
pop
add
mov
cmpsl
pop
sub
xchg
lods
xor
push
mov
cmp
push
mov
cmpsl
insl
cltd
clc
mov
pushf
aaa
pusha
out
mov
imul
sbb
fwait
lahf
xchg
cmp
cmp
je
dec
fs
ficompl
lret
pushf
clc
ret
fisubs
test
jnp
lret
xchg
xlat
cs
adc
test
rclb
push
mov
cmpsl
xor
test
xchg
dec
aam
movsl
jne
sub
xchg
lcall
fstps
movsb
push
shl
shll
xor
mov
pop
and
inc
rol
out
hlt
repnz
es
push
or
pop
in
adc
push
pop
and
fisubrl
mov
xchg
mov
and
xchg
clc
je
pop
mov
pusha
rorl
std
and
out
dec
sub
dec
jl
popf
xor
mov
movsb
push
repz
mov
lea
cli
dec
rol
rcrb
shlb
add
jbe
cmp
ud1
nop
leave
rcll
int3
test
lcall
call
push
inc
pushf
add
insb
sub
fistps
jo
movsl
lock
mov
or
cmp
sahf
fistl
imul
mov
add
cwtl
xor
insl
js
and
sbb
lds
into
pusha
cmp
out
add
out
shll
pushl
fs
cmp
mov
push
test
push
pop
leave
mov
insl
cmp
pop
cs
sbb
adc
stos
mov
lret
lret
push
mov
jp
test
loopne
sarb
pop
xor
sub
imul
int
and
adc
sub
sub
sub
pop
rorl
fcmovnbe
imull
pop
loopne
sti
mov
or
jmp
sbb
adc
sub
inc
xchg
rolb
and
pop
repnz
xchg
jno
jmp
jmp
aaa
sahf
popa
iret
sti
push
sahf
mov
sbb
inc
sub
or
bound
and
xor
in
js
lcall
mov
and
jl
int
popf
jmp
popf
dec
test
mov
add
push
push
and
cmp
hlt
dec
jae
cwtl
jno
xchg
jmp
jns
add
adc
pop
mov
pop
in
lahf
push
mov
add
jmp
mov
pop
xchg
mov
xlat
pop
arpl
and
sub
inc
xchg
aaa
sbb
test
pop
sbb
loopne
jno
lahf
fstpl
ljmp
sbb
xor
scas
orb
pushf
orb
dec
mov
or
cmc
je
mov
cli
ds
jae
pop
xor
mov
scas
dec
pop
lcall
add
or
or
dec
mov
mov
iret
xchg
mov
fdivp
fdivr
or
or
or
pushf
mov
inc
push
loope
or
add
in
jg
pusha
mov
cmc
add
pop
sub
cmp
incb
mov
cli
xor
cmp
inc
jecxz
push
stos
xchg
scas
dec
sub
das
in
pop
cltd
les
aaa
and
lahf
pop
stos
fisttps
jl
in
jns
mov
mov
pop
push
dec
gs
xchg
sub
push
or
mov
mov
add
xor
aad
push
xor
xchg
mov
cli
lcall
push
push
sahf
nop
xor
push
mov
cmp
cmpsb
aam
scas
sub
lods
push
mov
pop
test
nop
inc
sbb
cltd
imul
loopne
notl
dec
scas
mov
add
cmp
sahf
inc
fnsave
or
mov
neg
xchg
cmpsl
or
lret
scas
and
mov
xchg
pop
arpl
jge
push
adc
loope
sahf
scas
sbb
pop
mov
dec
js
lcall
or
push
xchg
test
cmpsl
or
pop
in
mov
lods
add
xchg
std
aas
inc
lret
test
or
jae
scas
std
leave
out
mov
xor
xor
cld
mov
cmp
cmp
sbb
inc
cmp
xchg
lods
fldenv
in
lret
mov
sub
jo
stos
int3
dec
sbb
jecxz
inc
test
add
cmp
xchg
sub
sti
mov
jbe
addr16
sarb
insl
jecxz
daa
add
out
bound
mov
in
je
loopne
aam
jmp
rclb
jns
fistpl
jnp
xor
fmull
add
sbbb
fwait
lds
in
repnz
cld
mov
daa
push
sub
cmc
jle
pop
dec
jbe
ret
xor
inc
cli
loop,pt
or
jo
sub
push
ja
xlat
mov
shrb
mov
mov
inc
adc
ss
mov
mov
fldcw
push
mov
loope
pop
push
test
cmpsl
push
or
pushl
shrl
xchg
test
pop
divb
dec
lcall
jecxz
arpl
sub
movsl
push
ss
fwait
cld
rolb
dec
clc
leave
or
dec
int
or
dec
mov
add
in
in
les
mov
xor
mov
repnz
jge
xchg
clc
jp
push
cmc
dec
daa
add
inc
sbb
push
insl
inc
ss
aam
xchg
int3
frstor
mov
mov
push
nop
mov
add
push
cli
mov
mov
repz
push
xor
push
std
inc
hlt
push
adc
sbb
jno
sti
inc
jge
jae
adc
mov
mov
in
sub
icebp
shl
mov
xchg
inc
std
std
and
add
xchg
xchg
push
cld
mov
popa
cmp
cwtl
out
mov
lret
data16
popa
popa
sbb
loop
jmp
je
aas
mov
call
fstsw
ret
xor
xchg
ss
insl
jo
mov
shld
or
std
mov
in
lods
pop
outsb
sub
mov
xchg
jl
data16
repnz
in
mov
mov
inc
clc
sahf
je
add
and
mov
sub
pop
xor
mov
inc
xchg
stos
es
jmp
shrb
add
lret
insb
push
and
adc
fimull
mov
inc
push
mov
or
mov
jne
ds
and
inc
mov
mov
sbb
jg
fmull
flds
push
add
loope
push
cwtl
iret
add
ds
movl
dec
push
cs
stc
jbe
data16
hlt
inc
pop
or
cmc
dec
aaa
mov
mov
adc
inc
ret
xchg
dec
mov
fdivl
sbb
sbb
adc
adc
stos
aas
jge
and
sub
jns
cmpsl
push
cmpsl
mov
shl
mov
lods
fsubrs
into
adc
sbb
mov
add
fs
mov
or
into
stos
cmp
sbb
inc
lods
cmp
or
sti
cmpsl
gs
subb
insl
mov
out
ja
gs
lods
jl
mov
daa
int3
xchg
mov
xchg
mov
js
adc
xor
mov
testl
adc
leave
mov
ds
inc
adc
add
into
in
add
or
idiv
pop
sub
and
push
out
out
cmp
dec
push
sub
data16
cmc
cmp
mov
jae
push
cli
gs
ljmp
push
pop
fstpt
jae
fisttps
cs
push
and
das
or
inc
push
call
negl
adc
push
xor
push
xor
js
sub
cmp
mov
mov
or
aas
aam
lods
scas
dec
xor
xorb
std
loopne
xor
jmp
std
mov
sub
mov
inc
js
negl
cli
mov
ja
and
addr16
mov
xor
test
iret
jns
arpl
dec
ja
sbb
popl
mov
push
stc
sbb
jo
jae
jmp
push
cmc
mov
daa
and
int3
mov
incb
push
xlat
lea
mov
cmp
mov
rcrb
daa
loope
mov
jmp
ljmp
divb
lahf
cmpsb
mov
mov
pop
add
lret
outsl
popf
add
adc
popf
jg
dec
push
mov
cs
and
aaa
mov
addb
cmp
cmp
aaa
jl
leave
negb
in
rcll
pop
or
movsl
cmp
stos
adc
idivb
mov
jg
stc
and
jle
cld
add
or
das
shll
xchg
xchg
mov
inc
add
clc
popa
jg
mov
jbe
fistps
inc
mov
fwait
jb
cli
outsl
push
sti
pop
out
pop
lahf
jmp
stos
stos
cltd
jecxz
in
jae
pop
lret
inc
xor
cmp
rolb
cmpsb
jns
lods
xchg
and
rol
ret
fistps
xor
dec
scas
es
pop
cmp
in
cmp
mov
push
out
mov
pop
add
adc
push
sahf
icebp
mov
jg
das
mov
mov
fs
vcvtss2sd
cmpsl
adc
dec
insl
leave
sub
xor
sbb
pop
mov
daa
aad
mov
in
push
inc
push
fs
add
xor
movq
cmpb
mov
mov
stc
nop
es
jns
cli
jb
imul
sbb
xor
xor
fwait
jns
inc
stc
loopne
sbb
repnz
mov
test
in
call
cwtl
jns
fmull
cwtl
or
adc
adc
xchg
sub
pop
or
add
push
stos
push
inc
test
mov
in
shlb
inc
enter
add
dec
lock
adc
arpl
dec
aad
mov
jb
cmp
aas
js
sub
add
xor
jle
fcompl
int
or
decb
sbbl
pop
sbb
shll
and
pushf
dec
jae
pmullw
dec
gs
je
das
adc
mov
mov
sub
sub
insb
int3
mov
mov
test
mov
addr16
movb
mov
mov
mov
mulb
sbb
lcall
jg
popf
es
adc
add
imul
andb
and
jmp
rolb
repnz
add
scas
ds
jno
and
lret
clc
lret
sarb
mov
popa
push
mov
jecxz
movsb
mov
into
lea
jge
push
mov
mov
inc
je
movsl
sti
cld
shlb
addr16
add
popf
xchg
rclb
dec
hlt
push
enter
cmp
cltd
push
add
dec
inc
lahf
out
icebp
or
mov
xlat
or
and
or
cmp
jbe
push
pop
sbb
test
mov
mov
sarb
lahf
insl
call
xchg
lds
scas
jecxz
repnz
dec
jp
mov
movsb
movsl
bound
mov
mov
push
psrlw
out
cmp
out
and
mov
mov
mov
cmp
dec
jnp
xchg
mov
arpl
pusha
xor
int3
inc
fldt
ret
xchg
out
push
cmp
and
sbb
or
int3
ljmp
jns
mov
into
push
sarb
dec
sbb
fimull
test
les
push
aam
sahf
cmpsl
loop
adc
ljmp
inc
cs
cmpsb
inc
add
pop
pop
sub
out
inc
popa
xor
sub
mov
je
pop
pushf
xrstor
popfw
icebp
jmp
lock
jo
stos
mov
pop
and
test
mov
mov
add
xchg
aas
pop
in
adc
scas
imul
scas
ja
xchg
cs
jo
pop
mov
xor
lds
out
jae
push
stos
add
in
into
pop
les
xorl
nop
push
cld
clc
gs
jb
cmpsb
and
cmp
cmp
sub
sbb
push
jmp
sub
gs
sahf
dec
jns
mov
adc
insb
mov
jae
sub
js
rcll
loop
mov
js
fmull
cli
push
aas
add
add
inc
pop
fimull
jae
ret
test
xor
stc
xor
daa
in
adc
sahf
test
mov
or
push
mov
sub
and
and
cmpsl
outsb
push
inc
rclb
cmp
rorl
xchg
sbb
icebp
add
dec
shll
popf
jbe
pop
push
stos
out
dec
dec
cmp
push
push
dec
adc
lret
adc
fs
aam
push
in
xor
pop
mov
mov
lods
adc
adc
jno
mov
addr16
ja
xchg
mov
imul
rclb
or
mov
in
insb
and
push
push
jmp
mov
std
aas
add
add
inc
arpl
inc
cmpsl
lret
icebp
push
cmc
lahf
mov
rcrl
ret
in
jns
icebp
pop
stc
pop
mov
cli
cmc
mov
aad
dec
loopne
pop
mov
cmpb
es
xor
push
jne
jl
xchg
test
mov
data16
push
sbb
outsl
pop
test
pop
js
inc
sbb
pop
or
js
insl
jmp
xor
loope
ret
or
or
ret
lret
pop
in
aaa
mov
and
jp
jae
lea
stos
jnp
push
inc
jne
jmp
out
in
jg
dec
mov
sahf
cmp
mov
add
movsl
jnp
dec
jmp
push
xor
mov
insl
mov
imul
inc
pop
out
jno
push
mov
or
popl
icebp
in
mov
jl
mov
push
outsb
test
mov
sbb
inc
hlt
push
push
push
sbb
inc
dec
mov
cmc
and
push
in
test
add
stos
aam
or
repz
push
jnp
add
cmp
pop
cmp
mov
cld
or
mov
imul
and
pop
jmp
sub
mov
aas
aam
fnstenv
dec
stos
dec
cmpsb
ds
fildll
dec
mov
jle
fcomps
dec
mov
clc
xchg
push
orl
xchg
push
outsb
cltd
mov
pop
iret
aam
roll
push
ss
rcl
mov
mov
popf
sub
in
rcrl
sub
movsl
pop
popa
inc
mov
lods
dec
addr16
into
ret
shrb
push
sar
std
inc
jmp
out
pop
into
xchg
cmp
mov
push
pop
inc
pand
cmp
jne
loope
ret
jno
adc
dec
lds
loope
sahf
movsl
pop
pop
mov
lock
mov
mov
lods
lock
lahf
or
cwtl
ds
pop
fcoms
sahf
adc
cs
adc
adc
pop
jnp
rolb
das
pop
ret
pop
test
call
sbb
push
stc
pusha
sub
popa
idivl
stos
sti
lods
into
popa
push
loop
daa
or
mov
leave
mov
pop
out
std
jp
or
inc
addr16
and
lahf
aad
pop
fcompp
mov
inc
daa
dec
mov
loopne
inc
dec
mov
shlb
xor
scas
sbb
cmp
nopl
lock
jae
cmc
mov
pop
add
dec
scas
push
lock
and
jecxz
rolb
mov
loopne
xor
mov
aaa
mov
ret
popa
popa
mov
sbb
mov
mov
in
je
sub
jl
out
jp
sub
push
pop
les
out
cld
cmp
mov
jb
pop
cwtl
inc
xor
sub
sub
inc
push
test
and
pop
mov
jo
mov
and
xor
sbb
sub
jg
and
inc
mov
cld
pop
insb
gs
gs
fsubrl
pop
jecxz
mov
insb
xor
test
xchg
mov
aaa
cmp
push
pushf
fistps
fildl
sub
xchg
push
je
dec
or
insl
movsl
mov
push
outsl
xchg
insb
ja
repz
sahf
aaa
mov
decl
adc
xor
and
sub
addr16
out
loope
inc
fmull
sub
push
or
subl
add
hlt
aas
dec
xchg
leave
adcl
cmp
jmp
leave
repz
cli
in
iret
int
mov
enter
pop
ljmp
inc
dec
jno
lea
sub
jne
je
loopne
mov
pop
shlb
mov
xor
loopne
add
sarl
xchg
and
lret
sbb
jp
and
mov
jle
sbb
rolb
dec
dec
clc
pop
lock
cmp
jmp
or
or
push
and
fsubrp
mov
jp
add
jmp
mov
jbe
lods
adc
pop
bound
loope
or
mov
cmp
fsubp
jae,pt
sub
out
in
outsb
jno
ret
sbb
rclb
cmp
pop
inc
stos
lcall
mov
push
xchg
mov
push
pop
mov
shl
cmp
in
sbb
repz
shr
xchg
mov
mov
out
mov
jp
xor
mov
push
repz
leave
lret
pop
pusha
sbb
arpl
stos
int
xor
add
xchg
pop
xlat
dec
ja
pop
mov
roll
xchg
xchg
lods
lcall
sub
mov
fldenv
std
out
mov
cs
stos
rcrl
jb
sbb
idiv
dec
sub
cmp
daa
iret
push
sbb
dec
xlat
pusha
test
daa
movsb
dec
divb
sbb
jno
sub
mov
pop
test
call
sub
dec
xchg
dec
inc
pop
ret
popf
jg
jns
imul
fiadds
cmpb
cmpsl
xchg
sbb
aad
inc
loop
stos
std
out
int3
addb
int3
pop
ret
leave
fstpl
hlt
cmp
jecxz
pop
pop
or
movsb
pop
test
cs
dec
popf
sbb
je
inc
mov
jno
je
sbb
adc
stos
daa
mov
dec
mov
int3
into
testb
les
xchg
jg
fstpl
aaa
fisubrl
xor
cmp
pop
in
mov
fsubr
ret
lret
cwtl
lret
xor
jle
setge
fstps
rol
inc
arpl
pop
push
xlat
aas
sub
inc
adc
popf
mov
cli
test
addr16
adc
fisttpl
stos
mov
cmp
loop
addr16
cmp
xor
stos
pop
xchg
bound
and
pop
jb
psllw
repz
push
out
lock
cmp
shlb
sub
pushf
jecxz
test
jb
or
xchg
pop
test
pop
xchg
cmpl
subb
push
cmc
ret
lcall
popa
lods
inc
in
dec
imul
push
lods
aaa
shrl
iret
sbb
jno
cmp
clc
or
in
dec
xor
aas
xchg
icebp
outsb
movsb
test
pop
adc
test
pop
inc
or
mov
push
push
dec
out
out
loopne
add
lret
lcall
testl
into
fwait
addb
sbb
fcmovu
sub
cmpb
mov
xchg
xor
outsl
jecxz
or
dec
mov
xchg
repz
mov
cltd
xchg
les
cmp
xor
pop
xchg
insb
adc
adc
subb
faddl
add
mov
cwtl
push
stc
in
cmp
cmp
xchg
cld
adcl
mov
add
or
out
pusha
sbb
into
sub
sub
aam
push
sbb
imul
cwtl
xchg
lds
pushf
scas
std
pop
xchg
and
push
add
ror
mov
add
inc
jnp
mov
fdivl
arpl
sbb
or
addr16
add
ds
fmull
mov
xchg
cmp
das
gs
fildl
xchg
sbb
mov
lret
leave
jns
es
jge
pop
cs
dec
inc
mov
sub
mov
pop
push
cmpl
mov
testl
call
repz
adc
cmp
mov
or
push
push
mov
mov
cltd
shlb
dec
and
jp
stos
push
jnp
flds
adc
lea
mov
jbe
adc
mov
jno
rolb
sub
cs
mov
mov
ljmp
aas
adc
mov
jl
ljmp
jecxz
repnz
mov
mov
and
lock
jle
sbb
fnstsw
and
sub
mov
mov
test
sbb
cmp
add
js
add
cmp
rorb
add
outsl
xlat
stos
and
lds
add
or
fs
test
cmp
xchg
aad
push
popa
mov
cmp
mov
cmp
xchg
lods
js
xor
and
in
sahf
mov
bnd
and
pop
sahf
add
aaa
sti
dec
mov
fsubrs
ljmp
clc
stos
mov
sbb
leave
in
lcall
movsl
adc
push
std
pop
jecxz
addr16
cltd
add
fsubp
jne
xor
test
iret
mov
xchg
xchg
push
dec
dec
and
repnz
movsb
testl
test
test
cwtl
out
div
and
call
into
sub
in
ljmp
cmp
lret
and
outsb
push
push
cmpsl
mov
dec
es
or
arpl
test
inc
je
out
ja
test
repz
dec
dec
jl
ljmp
clc
outsb
fmuls
jmp
int3
sarl
sar
sahf
insl
pushf
xchg
aaa
mov
pop
sbb
mov
clc
cli
xchg
in
mov
nop
mov
dec
mov
mov
pusha
pop
and
inc
ret
add
inc
dec
loop
pusha
pop
movsb
jl
jg
jg
jne
orl
test
jp
pop
or
pop
inc
or
push
sbb
cmp
pop
insb
out
lods
xchg
inc
outsb
jmp
adc
jmp
icebp
movsb
pop
mov
lcall
lock
sti
pop
fdivrs
loop
lds
mull
mov
jge
mov
xor
aam
mov
and
jns
sub
inc
add
insb
icebp
data16
outsb
clc
test
outsl
lods
push
loope
test
xchg
xorb
roll
in
sbb
nop
cmp
insb
subl
sar
imul
jbe
add
jmp
jo
adc
push
cltd
not
bound
out
loope
clc
sbb
push
nop
pop
push
jae
sub
imul
push
lock
adc
push
push
mov
push
sub
test
cltd
dec
mov
nop
sub
xchg
lcall
mov
lods
inc
lock
and
icebp
or
aas
push
dec
jecxz
sahf
sbb
lds
jg
or
std
pop
loop
and
sahf
xchg
sub
into
sub
push
sti
and
fdivrs
add
in
jp
leave
hlt
imul
mov
cld
jb
cmp
mov
push
sbb
sub
mov
and
rcr
loop
fnsave
test
in
dec
insl
aas
add
sub
in
push
repz
or
pop
mov
pop
sub
scas
mov
and
mov
add
test
scas
loop
nop
cmp
loopne
rolb
pop
push
out
cltd
test
sub
out
test
dec
mov
jg
js
xor
mov
push
sbb
clc
mov
mov
loop
pop
cmp
pushf
in
addr16
push
test
fcomps
int
dec
mov
js
push
and
fcomip
or
dec
xchg
cmp
adc
add
jl
cmpsl
inc
mov
cmp
repz
imul
outsl
adc
fs
and
mov
movsb
mov
dec
out
xor
sub
pop
out
rolb
cmpsb
dec
mov
fistpl
cmc
test
mov
mov
and
loope
mov
clc
dec
ficoml
adc
repnz
shlb
cltd
or
jno
add
xchg
lret
adcl
mov
xchg
inc
sbb
dec
xor
or
insb
clc
cli
insl
cmp
fisttps
inc
mov
push
xchg
inc
int3
jle
out
or
push
aad
test
and
insb
ja
into
fadd
pop
and
imul
sarl
dec
xchg
inc
movsl
fwait
xchg
stc
add
push
xchg
or
in
and
ud1
cltd
sbb
inc
fidivs
loopne
mov
add
push
jns
inc
cld
push
jae
xchg
cmp
jno
fcomps
test
cmpl
stos
in
or
int3
bound
jnp
adc
call
dec
cmp
jne
pop
jmp
std
inc
cli
push
es
js
in
cwtl
js
arpl
mov
jecxz
test
outsb
insl
cwtl
repnz
mov
or
dec
arpl
inc
adc
push
fisttpl
push
pop
lea
cmc
or
sub
sbbb
mov
sarb
jne
aad
jbe
inc
arpl
std
test
repnz
cmp
cmp
mov
idivl
dec
ficomps
xchg
lret
rcrl
cltd
das
xchg
pop
mov
fisubrs
inc
imul
lods
sbb
sbb
les
add
int
mov
inc
jno
nop
out
fs
add
sub
dec
inc
ss
movsb
adc
imul
mov
xchg
popa
xor
divb
pushf
loopne
xchg
inc
rcrl
jae
into
in
add
xchg
lds
andl
mov
mov
movsl
cmp
cmp
sti
push
and
mov
inc
xchg
sub
push
cs
ficoms
push
push
pusha
inc
mov
out
xorb
test
xchg
inc
andb
pop
xor
sbb
loopne
imulb
xchg
pop
lds
aaa
mov
roll
pop
cmp
xchg
push
jb
mov
or
and
inc
inc
push
push
les
loop
imul
or
subb
rcrl
lret
iret
out
dec
ret
add
cmp
jmp
sub
sub
inc
mov
fldcw
inc
loope
mov
cmc
pop
fldt
testl
stos
jecxz
xchg
aad
and
leave
xlat
in
pop
andb
in
cltd
mov
xchg
or
mov
xor
rclb
clc
pop
pop
in
repnz
cmp
push
repz
or
jbe
movsl
pop
das
mov
xlat
xchg
pop
dec
nop
popa
ljmp
jae
fisubrs
push
popf
or
pop
loop
movsb
mov
pop
xchg
jg
int
repz
scas
sub
aad
arpl
mov
clc
inc
xlat
std
scas
xchg
data16
mov
cmp
push
rol
mov
mov
cmc
addl
aad
out
cmp
add
in
add
lds
stc
jl
inc
aad
push
sub
bound
adc
imul
mov
xor
cli
jno
sbb
or
loop
cmp
insl
neg
je
sbb
and
or
bound
xlat
pushf
ror
pop
mov
cwtl
mov
mov
std
jge
lret
daa
repnz
xor
testl
pop
shl
mov
xchg
fildl
add
fimull
inc
in
add
pop
cld
aad
adc
sub
cmp
sub
xor
cltd
xchg
mov
jne
je
jmp
stc
stos
push
sub
adcl
fistpl
les
adc
xor
test
jbe
xor
pop
es
ret
lcall
repz
sti
pusha
aaa
xor
aad
sub
mov
inc
inc
pusha
imul
or
xchg
cwtl
or
push
add
dec
jne
ljmp
out
aam
adc
ror
jp
cmp
je
js
mov
mov
ret
mov
xchg
mov
nop
cmc
mov
adc
iret
fs
imul
mov
push
cmp
xor
pop
pop
not
sub
into
mov
sbbl
inc
mov
jge
mov
push
and
int3
pop
in
push
inc
mov
cmp
xchg
mov
cld
aam
xor
ss
and
ja
sbb
xchg
pop
mov
adc
arpl
addb
jnp
add
fs
bound
out
addr16
out
sbb
stos
or
ds
cmpsb
sbb
sbb
mov
mov
inc
fsubl
push
jne
dec
mov
fdivrs
std
sub
pop
out
lds
dec
movsl
mov
loope
std
mov
mov
and
cmp
push
cmc
xor
cwtl
imul
xor
pushf
pop
mov
dec
push
jecxz
loop
fnsave
stos
xor
xor
cmp
scas
je
fiaddl
mov
add
xchg
push
push
pushf
dec
or
jae
xor
mov
fisubrl
mov
push
cli
cmp
repz
add
int3
es
add
mov
insl
lock
push
stc
jg
jmp
adc
int
je
adc
je
pop
xlat
fcmovne
in
push
mulps
push
pop
pop
sbb
das
call
fisubrl
test
repz
or
repz
test
std
pop
dec
inc
sbb
jg
add
mov
pop
jmp
cmp
and
outsb
push
sarb
lock
int3
daa
test
out
inc
pop
pop
repz
ss
movsl
cwtl
or
and
lahf
mov
jge
out
sbb
nop
add
imul
pop
jmp
arpl
and
lock
cmp
lcall
nop
scas
dec
clc
dec
je
test
pop
jle
inc
in
nop
pop
adc
lock
fxch
pop
ja
rorl
dec
fsubrl
sbb
mov
mov
add
aam
sbb
dec
les
sub
or
lds
scas
mov
jb
or
mov
jp
cmpsl
cld
or
jle
in
lcall
into
fstp
or
mov
dec
arpl
fldcw
loopne
xor
scas
pusha
dec
fidivl
jo
test
jge
je
cmp
add
add
loope
les
mov
js
or
pop
fcompl
mov
sbb
push
mov
cmc
push
pop
mov
test
loope
jno
dec
jg
fiadds
outsl
loope
xor
lods
cld
lahf
jp
mov
sub
dec
sbb
mov
dec
push
ss
add
testl
and
push
lods
cmpsb
cmpsb
call
sub
adc
lret
scas
ret
lahf
pop
mov
add
rclb
xchg
lahf
mov
dec
jecxz
inc
sti
sbb
fdivl
ja
fidivl
imulb
in
shll
jae
aaa
insb
test
ss
jb
bound
ficomps
adc
jnp
sbb
xor
add
xchg
adc
pop
div
pop
dec
les
sbb
movsl
jecxz
das
popf
xchg
push
ror
cmpb
add
test
test
and
roll
ret
in
mov
in
inc
dec
push
xor
repnz
cmp
xor
fs
pop
pop
or
add
data16
jnp
rcl
dec
rorl
push
add
enter
sbb
inc
nop
push
rolb
std
orb
inc
fsubp
mov
sub
xchg
xchg
out
insb
call
inc
stc
dec
mov
pop
inc
cmp
push
out
dec
dec
mov
ss
std
filds
cmpsl
repnz
rclb
xchg
leave
in
aam
and
inc
dec
outsl
outsb
pop
aas
pcmpeqw
push
adc
push
nop
jg
out
cmp
mov
icebp
out
mov
xchg
pop
cmp
xchg
pop
cmp
or
insb
and
lock
jmp
xchg
scas
bound
sub
popf
lahf
push
popa
lods
fimull
adc
je
mov
jecxz
sub
mov
dec
dec
jo
stos
bound
push
idivb
xchg
fsub
cmp
shll
test
pop
xchg
or
shrb
pop
lds
mov
out
fimull
jle
fbld
int3
arpl
or
push
ret
cmp
shll
sbb
dec
mov
mov
pushl
mov
rcl
cli
jecxz
mov
xchg
dec
nop
into
out
pop
repz
leave
add
xchg
dec
mov
aaa
mov
xchg
mov
orb
aad
popf
xlat
push
out
mov
add
scas
aad
xchg
sub
pop
cmp
loop
dec
imulb
in
pop
in
cltd
sbb
pusha
in
mov
cmpsl
pop
sbbl
ret
pop
push
repz
dec
test
sti
cwtl
sbb
inc
sub
push
mov
call
aaa
xchg
lret
pop
mov
outsb
push
jecxz
mov
add
mov
push
ret
aaa
iret
jno
inc
lret
or
nop
pusha
xchg
cmp
fwait
dec
or
pop
cmp
adc
call
push
mov
sub
mov
stos
pop
push
ds
cwtl
cmp
jl
mov
mov
arpl
push
int
fdivp
mov
pop
ljmp
and
rclb
dec
mov
sub
xchg
or
addr16
push
pop
jecxz
jo
xlat
pop
lods
xor
push
cmp
mov
mov
mov
jbe
shlb
dec
repz
adc
test
lods
xor
bound
xchg
push
xchg
sbb
shrb
movb
mov
in
fs
int3
xchg
mov
xor
inc
ja
push
mov
push
arpl
inc
sbb
sahf
cmp
adc
ja
push
inc
xchg
ljmp
xor
dec
mov
or
jl
int3
in
mov
addr16
xchg
or
into
imul
dec
inc
popf
test
adc
mov
scas
inc
adc
mov
out
mov
pushf
xchg
inc
out
mov
rol
mov
mov
mov
adc
adc
mov
push
lahf
push
and
dec
jmp
mov
dec
push
les
push
cmp
lds
inc
dec
movsb
fisttpl
sub
inc
sbb
cmp
sub
jns
jp
outsb
inc
mov
nop
dec
adc
enter
arpl
out
jne
cltd
inc
mov
add
inc
dec
lret
mull
mov
into
test
mov
inc
dec
hlt
mov
push
push
or
xor
adc
jg
and
test
sub
ret
call
inc
mov
out
push
xchg
ss
roll
insl
and
push
je
pop
pushf
mov
rcrl
add
loopne
mov
cltd
je
lcall
add
add
add
adc
add
fucomp
loopne
xchg
cwtl
pop
pop
mov
mov
adc
test
movsl
cmpsl
pusha
mov
inc
aaa
or
loop
ficoms
or
lea
inc
popf
call
sahf
aaa
mov
adc
lcall
and
cmp
mov
pop
movsb
jo
lret
xchg
sbb
arpl
mov
lahf
es
les
iret
int
lahf
push
je
int3
dec
or
push
dec
repz
pop
jmp
and
pop
xor
jl
dec
int3
rcll
xor
xor
icebp
cmp
out
push
cmp
or
mov
das
test
in
popa
jo
pop
mov
mov
call
std
iret
sbb
jno
outsl
in
xchg
jno
push
cmp
cs
xchg
fbld
jmp
add
dec
push
cmp
push
push
mov
subl
xchg
or
push
add
jl
movsl
push
rol
push
hlt
xchg
xor
lock
dec
add
pop
cwtl
jb
call
test
jmp
mov
jno
loopne
add
and
sub
push
xorl
dec
fiadds
sub
push
cltd
xor
bndldx
or
jg
and
push
aas
push
mov
pop
clc
orb
nop
push
mov
out
sti
sbb
adc
inc
or
pushf
xor
mov
icebp
out
pusha
jne
cwtl
jo
aam
insl
adc
cmp
ss
in
mov
mov
test
fsubrs
insb
cs
into
mov
movsb
mov
cmp
icebp
rorb
sahf
dec
or
mov
sarl
lds
jle
bound
idivl
lock
mov
xchg
in
dec
mov
ja
movsl
jle
or
cvtps2pi
mov
dec
push
jbe
mov
dec
xor
pop
jmp
stos
pushf
adc
mov
data16
inc
jb
mov
or
jo
mov
lods
jmp
jl
jge
push
jecxz
divb
pop
dec
outsl
les
push
fldl
fcompl
sbb
in
mov
mov
xchg
lret
mov
loopne
repnz
add
jne
les
mov
xchg
insb
sub
pushf
das
xchg
jo
loop
dec
rol
push
shll
mov
cmc
inc
addr16
mov
negl
mov
sbb
adc
mov
lret
adc
ret
out
aaa
jmp
mov
dec
ret
and
loopne
lea
dec
jle
push
push
mov
ss
xchg
lcall
adc
jecxz
cmp
subb
mov
je
sbb
xchg
leave
pop
sbb
jo
inc
leave
push
cs
xchg
scas
mov
leave
inc
push
jns
sub
clc
pop
cmp
pop
adc
fwait
cltd
aam
icebp
imul
popa
or
cmp
mov
call
into
arpl
jmp
add
pop
add
mov
gs
ljmp
pop
int
std
shll
sbb
jnp
push
push
cs
aad
popf
fsubs
insb
mov
icebp
adc
aam
mov
push
stc
shrl
push
movsl
or
push
mov
xor
push
outsb
int3
xchg
jmp
sahf
jp
je
in
push
sub
and
cwtl
xchg
pop
cmpsl
push
cltd
xor
push
jecxz
mov
mov
shlb
mov
and
dec
ja,pt
out
push
pop
and
push
sti
in
je
pmulhuw
pop
inc
cs
outsl
cmp
andb
add
int3
dec
jb
pop
je
lcall
in
pop
dec
mov
das
pop
and
xchg
adc
pop
cmp
fcmovbe
out
scas
push
leave
inc
sbb
pop
sbb
sbb
std
pushf
mov
bound
into
stc
loopne
xchg
negl
push
lret
mov
lods
mov
popf
push
jmp
fnsave
add
clc
fadds
cs
in
jge
sbb
add
mov
xchg
sbb
fs
pop
fstps
mov
dec
pop
jns
cmp
les
add
aad
push
pop
mov
dec
dec
in
ss
sbb
mov
cmp
sahf
jmp
push
stos
js
inc
test
out
sbb
adc
xchg
cmpsb
xchg
mov
sub
pushf
cwtl
sub
lret
adc
mov
or
test
cs
roll
push
cmp
insl
push
dec
inc
cmpb
dec
mov
pop
and
mov
shlb
sti
and
xchg
repnz
xchg
jge
inc
jno
ret
mov
cli
mov
aaa
iret
imul
xchg
jmp
gs
xlat
repz
xchg
adc
push
popf
sti
icebp
gs
mov
or
orl
jle
arpl
mov
aas
lret
pop
test
pop
lret
leave
out
lret
mov
lds
loopne
inc
fcmovbe
fmull
dec
int
mov
push
cld
lret
xchg
xlat
ljmp
cmp
mov
jmp
cmpsl
cmp
mov
in
xor
mov
fstpl
pop
aas
mov
decb
add
sbb
cmpsl
jle
and
push
push
mov
push
dec
adc
dec
fcoml
xchg
mov
nop
ss
loope
push
mov
stos
push
bound
add
shll
movsl
sub
add
add
sbb
je
sub
shr
jecxz
in
cmp
jp
inc
sbb
shlb
jbe
fisubrs
push
push
sti
das
sbb
loopne
test
js
gs
mov
aas
test
out
mov
add
mov
fdiv
out
inc
mov
or
inc
xlat
xchg
pop
cli
lds
nop
pusha
xchg
jnp
pop
mov
pop
movsb
xchg
jb
movsl
push
inc
loope
mov
arpl
jbe
ja
or
subl
cmp
inc
and
lea
movsl
or
cmpsb
xor
fbstp
dec
cwtl
fildll
mov
jb
cmpb
in
push
loopne
mov
and
dec
aas
dec
push
sub
mov
dec
xor
push
xchg
cmp
mov
push
paddusw
insb
out
jae
mov
es
sbb
in
pusha
lret
arpl
sub
inc
mov
into
repnz
jae
cmpsb
dec
jle
pushf
mov
mov
sahf
or
cmc
jecxz
jb
fmuls
jnp
lock
mov
push
cwtl
push
stc
scas
jge
cbtw
mov
mov
aaa
imul
sub
adc
scas
xor
js
cltd
lret
inc
or
cmp
cmp
data16
add
jnp
sbb
mov
mov
and
sbb
aaa
daa
insb
push
cmp
inc
ja
adc
push
dec
js
cmp
mov
adc
repnz
jle
repnz
frstor
orl
test
movsb
je
mov
xchg
pop
and
maxps
shll
out
and
dec
and
test
cs
aad
sbb
das
or
test
lcall
xchg
das
cmp
jl
or
aad
cmc
inc
cmc
inc
ret
je
sbb
cwtl
ljmp
sbb
jmp
fistps
push
or
sti
scas
xor
mov
and
shr
ljmp
int3
ljmp
push
insl
fs
inc
mov
adc
aas
cmp
jns
loopne
jno
cmpb
les
add
clc
mov
inc
or
cmp
bound
jne
add
cmp
jno
addr16
push
push
pop
enter
inc
pop
jae
mov
inc
inc
rorl
mov
das
push
push
xor
mov
mov
outsl
cmp
or
stc
xchg
and
xor
xchg
imul
or
jno
hlt
aas
lret
fs
jne,pn
cmp
fdivs
jns
pop
dec
xor
pop
imul
jnp
mov
pop
insl
arpl
neg
mov
add
pop
push
repz
lcall
or
adc
sbb
scas
fistl
fsin
push
push
ds
into
decl
cmpsl
lods
pushf
xchg
mov
adc
jae
push
cmpsb
scas
pop
mov
call
icebp
fwait
xchg
clc
mov
dec
mov
xchg
mov
or
push
push
cmpsb
adc
ljmp
pop
jbe
dec
clc
push
cmp
frstor
jae
scas
mov
inc
inc
ret
sub
sbb
stos
ret
mov
cmc
dec
xchg
sub
repz
adc
lret
sub
add
ret
ret
and
test
loope
into
push
xchg
sbb
cld
xor
into
mov
jge
lea
sbb
out
xchg
scas
push
ss
outsb
hlt
dec
xchg
loope
out
jl
lods
insl
std
or
cmpsl
ljmp
pop
ss
in
or
popa
add
add
cwtl
jns
call
mov
fildll
xchg
cmpsb
jns
ret
jne
aad
or
or
out
cmp
movsb
and
mov
fcoml
sbb
sub
adc
sub
ljmp
lret
mov
mov
cmp
push
sbb
cmp
dec
hlt
ljmp
jne
scas
and
loope
jge
sbb
out
cmpsl
sbb
lahf
arpl
push
mov
sti
fidivrs
mov
cld
adc
mov
gs
pop
jge
jle
push
mov
fbstp
cmp
mov
loope
xlat
mov
stos
ficoml
mov
pushf
xor
push
scas
repnz
movsl
pop
lock
cmp
and
sbb
push
pop
jmp
xchg
cld
call
mov
sahf
dec
rcrb
aaa
xchg
mov
or
arpl
imul
push
and
fistl
jne
loop
clc
outsb
adc
jecxz
or
inc
xchg
add
scas
int
cs
cli
int
cmovle
divl
inc
pushw
aad
cmpsb
adc
shll
xor
addl
inc
sbb
incl
mov
xor
icebp
jmp
repz
xor
gs
lock
pushf
inc
outsl
jg
mov
int3
sahf
pop
andb
jecxz
pushf
dec
and
sti
lds
sub
adc
mov
mov
rcrl
dec
mov
push
push
jp
out
mov
pop
sbb
jmp
lods
mov
es
jl
stos
pop
testl
pop
popf
repnz
lds
arpl
sub
mov
add
push
loopne
cmp
jmp
pusha
adc
int3
and
cld
add
sbb
inc
sub
inc
push
stc
jo
rcrl
sub
iret
cmpsl
push
dec
cmpsl
jb
les
pop
mov
aad
pop
pusha
loopne
jns
xchg
mov
sahf
push
add
pop
aas
je
es
iret
push
shll
cs
aad
sbb
inc
testb
stc
in
sub
adc
in
lcall
jno
dec
inc
into
mov
and
daa
pushw
xchg
adc
push
adc
pop
ret
xchg
cmp
cwtl
cld
cmpsl
sub
fistpl
loopne
cld
mov
out
mov
sub
lods
or
add
clc
loop
xchg
in
xchg
push
push
scas
mov
dec
out
mov
pop
jge
mov
jle
mov
in
xchg
and
cmp
cli
sbb
js
jns
cld
mov
in
ret
mov
in
adc
sar
in
fldl
pop
mov
or
mov
sbb
je
sahf
or
jb
mov
int
cltd
mov
shr
push
cmpsl
push
idiv
jg
push
add
aam
or
xchg
sub
xchg
cmp
loopne
xchg
movsl
cmpsl
out
and
loopne
push
je
mov
fstps
data16
dec
and
lret
pusha
adc
sub
lret
jo
mov
jne
das
mov
fldl
pop
fs
dec
loopne
js
imul
lret
cmc
scas
mov
popf
jl
xor
add
mov
test
das
mov
xlat
dec
push
in
dec
mov
lret
cmp
mov
sbb
movsb
mov
test
cmpsl
in
inc
lock
adc
jge
in
call
vshufpd
inc
xlat
xor
adc
xor
adc
cltd
in
das
mov
add
aad
and
mov
dec
add
xor
sahf
dec
push
pop
xchg
and
loopne
outsb
int3
push
adc
ljmp
dec
add
xor
push
jno
inc
adc
dec
cmp
imul
or
sbb
and
inc
call
pop
pmaddwd
push
xchg
cli
jo
lea
orl
sbb
jecxz
inc
cli
inc
cwtl
cmp
inc
movsl
in
test
pop
out
ds
cmpsb
jne
add
sub
mov
iret
mov
cmc
ss
dec
pop
jbe
xlat
popa
mov
scas
loope
pop
in
stos
stos
sbb
hlt
xchg
enter
mov
jle
mov
pop
cli
lret
ret
rorl
jne
dec
roll
jb
idivl
mov
inc
xor
mov
and
push
pop
jmp
push
sub
faddl
enter
push
push
jmp
sub
jge
cmp
in
cltd
and
pusha
aad
xchg
call
add
push
adc
movsl
xchg
xor
cmpsl
mov
xor
sti
and
mov
stos
or
pusha
test
pop
popa
adc
and
dec
cmp
test
pop
mov
adc
pop
popa
xor
sbb
push
int3
dec
dec
xchg
inc
add
jl
add
jecxz
add
in
pop
fs
jnp
fucom
mov
add
sub
xchg
sub
lret
fstpl
cmc
push
cmc
push
pop
in
cltd
or
dec
jae
insl
loope
mov
cmp
addr16
push
adc
jo
out
aaa
out
das
int3
in
fwait
incl
je,pn
push
mov
lods
add
aas
mov
dec
push
pusha
jge
jmp
sub
repnz
rcrb
daa
test
sbb
cmpl
push
adc
imul
fwait
stos
sub
flds
mov
add
inc
iret
loope
aad
add
xchg
int
movsb
xor
in
mov
imul
in
aas
subl
loopne
adc
push
push
jg
inc
mov
dec
cli
push
dec
sbb
je
adc
and
loope
push
push
dec
loope
mov
or
pmaxub
dec
imul
repnz
xchg
pop
sub
mov
dec
sub
lds
test
lret
and
int
adc
das
and
xchg
decl
xchg
nop
or
sti
mov
push
ja
fs
dec
jno
ja
lcall
jecxz
xchg
adc
xchg
jno
dec
cltd
push
cmpsl
mov
pop
and
pop
loopne
aam
add
cmp
cmc
leave
pop
sbb
mov
mov
mov
push
aas
jb
lock
jmp
and
ret
pop
pop
mov
insl
xchg
fs
pop
test
cmpsb
jmp
movsb
adc
mov
loopne
add
sarb
push
pushf
mov
in
pop
es
jns
jne
imul
jmp
jnp
cmc
add
jle
nop
loopne
jp
mov
mov
out
dec
rorl
test
xlat
iret
mov
push
xor
test
xor
icebp
aad
outsb
xchg
pop
ljmp
mov
shlb
ficoms
xor
pop
fdivrs
push
xchg
pop
sub
mov
rol
xor
shl
incl
andl
jmp
cs
push
jp
mov
clc
mov
fwait
mov
mov
xor
fiadds
cmp
inc
insb
jnp
cmp
jmp
stos
jp
leave
in
and
mov
pop
or
jle
lds
outsb
fadds
mov
mov
in
pop
cld
mov
ja
fisttps
mov
stos
pushf
push
inc
xor
flds
xchg
or
icebp
sahf
mov
xor
hlt
fildl
mov
sub
bound
orl
mov
jb
ja
hlt
or
sub
jle
ljmp
jp
pop
imul
push
push
enter
push
mov
call
inc
push
out
sti
sbb
adc
mov
or
sbb
pop
sub
lcall
sub
jmp
pop
inc
xchg
mov
negb
jle
mov
push
and
cmc
and
xchg
mov
cmp
adc
jbe
rorl
addl
ljmp
adc
std
pop
mov
cmp
in
aas
lahf
or
fs
push
in
aad
arpl
test
icebp
ja
popa
and
xor
out
cmp
fwait
and
xchg
pop
inc
lods
mov
mov
dec
out
testb
fmuls
lds
fisttps
mov
mov
lock
or
mov
out
inc
gs
add
xchg
rclb
mov
cmc
sbb
sbb
les
sar
mov
push
test
adc
enter
in
inc
or
jnp
push
ret
js
sub
push
mov
popa
sbb
pop
repz
dec
and
cwtl
sarb
push
enter
ja
mov
sbb
arpl
sbb
in
das
add
dec
dec
movsl
and
fwait
jg
sahf
and
cmp
mov
mov
sbb
in
scas
ret
fimull
mov
in
ljmp
div
cmp
or
shrb
or
sbb
out
in
xchg
int3
lds
stos
out
and
lods
mov
jg
pop
mov
xor
dec
mov
or
ljmp
sbb
enter
sub
aaa
popa
in
repz
je
out
aaa
adc
mov
xor
fucomp
lret
jne
push
cli
and
inc
fidivrl
mov
aas
aam
stos
inc
cwtl
adc
ljmp
lods
jg
xor
xor
addl
or
push
adc
cmp
loope
xor
outsl
loopne
scas
jno
fcoml
jg
sahf
out
pushf
push
mov
out
jg
xor
leave
imul
or
sbb
cmpsl
sbb
in
stc
xchg
pop
dec
push
ror
daa
loop
dec
enter
and
insl
mov
push
lret
sub
dec
xlat
stos
fwait
lahf
dec
mov
cmp
push
lret
daa
lahf
movsb
xchg
ja
popf
xchg
adc
and
mov
in
pop
push
add
leave
mov
inc
fisubs
pop
dec
sbb
push
cmp
dec
jecxz
cmp
or
or
fsubs
mov
popf
aad
adc
js
push
out
addl
cmp
sbb
rcrb
jp
and
mov
mov
sub
push
movsl
adc
push
push
arpl
out
mov
bound
xchg
pop
and
pop
jmp
subb
and
inc
mov
xchg
and
je
mov
aad
mov
fcomip
gs
jg
pop
hlt
add
mov
imul
xor
aas
jmp
xchg
xor
adc
cs
dec
call
cmp
jnp
movsb
mov
pop
push
repnz
jno
sbbb
mov
push
pop
sbb
jae
xchg
lds
lret
cli
cmp
cmc
insl
pop
daa
aas
movsb
pop
out
mov
jo
lds
and
lods
mov
fldcw
out
mov
repnz
scas
cmpsb
shrb
mov
aas
mov
insb
rcrb
pop
and
sbb
or
and
add
xor
test
das
addl
je
xchg
mov
ret
and
outsb
int3
jnp
mov
subl
or
outsb
mov
lret
leave
lock
cmpsb
push
ss
iret
loop
add
adc
sub
jae
orb
xchg
roll
testl
xorl
test
xchg
out
ljmp
and
cmpsl
sbb
repnz
push
fistpl
mov
sub
loopne
mov
stos
xchg
cmp
xor
int3
and
cmp
inc
mov
xor
bound
xchg
fwait
daa
adc
insb
mov
pop
jbe
pop
xchg
mov
shl
and
jo
or
ljmp
adc
jle
xlat
mov
lcall
cmp
insl
stos
sbb
idivl
lahf
test
mov
mov
mov
repz
fimuls
ja
jns
insl
aaa
mov
out
sub
bound
sub
push
push
mov
shrb
or
adc
mov
sti
add
xorb
out
mov
imul
push
push
lea
ljmp
jbe
out
cmc
hlt
fisubl
inc
call
jb
adc
cmp
pop
push
adc
xor
fistpl
movsl
xchg
pop
das
ljmp
fldt
lds
jp
cmp
fimuls
fistl
fcoms
jne
mov
xor
pop
test
and
inc
xor
dec
sbb
inc
dec
jno
and
inc
push
pop
xor
test
pop
inc
sub
xchg
popa
int3
stos
pop
and
outsl
data16
popa
mov
xchg
fimuls
in
mov
cmp
int3
and
rorl
mov
xchg
jp
inc
dec
lret
sub
sti
lods
decl
jbe
not
jmp
test
mov
mov
pusha
sub
mov
ret
cmpsb
sub
cmpsl
fisubrs
push
jbe
or
jo
stc
xchg
push
jmp
loop
in
sub
in
xor
ss
int3
lock
cwtl
or
pop
cmp
lods
shlb
cltd
sbb
push
test
fiaddl
faddp
in
aad
test
std
jbe
test
mov
movb
xchg
stos
sbb
mov
popa
aad
shr
push
inc
clc
mov
mov
clc
mov
mov
movsl
inc
mov
dec
cltd
or
ror
test
dec
iret
add
inc
cmp
addr16
adc
sub
jbe
and
sarb
sahf
lahf
mov
xor
pusha
aas
xchg
sbb
shll
mov
jge
cmpsl
sbb
push
stc
dec
or
pusha
adc
and
int3
movsb
dec
xchg
mov
sar
mov
mov
inc
jno
or
push
sub
arpl
shll
push
dec
adc
xorb
in
test
cmc
and
or
shrl
mov
fs
ret
mov
pop
xor
dec
cmp
sbb
and
lods
jle
jnp
test
insl
cmp
pop
cmp
imul
or
imul
sbb
pushl
sbb
idivb
int3
movsl
gs
sub
dec
jnp
stos
jnp
repnz
mov
faddl
push
adc
int3
movsb
fisttpl
das
cs
add
lods
icebp
mov
andb
loop
and
add
rorb
dec
subb
xor
cwtl
push
mov
shl
std
jbe
push
xchg
sbb
mov
dec
popa
sbb
ret
and
pop
inc
iret
ljmp
sub
push
mov
cmp
nop
or
push
add
cmp
call
cmp
lret
out
mov
in
and
add
add
pop
pushf
insl
lods
adc
jae
xor
aaa
clc
and
lcall
cwtl
shlb
cli
dec
adc
cli
xchg
data16
std
sbb
bound
push
out
inc
and
mov
pusha
mov
scas
jge
into
and
push
pop
pushf
xor
and
push
pop
dec
ror
jbe
cmpsb
adc
sbb
lods
or
xchg
push
jnp
gs
pop
pop
std
xor
daa
bswap
outsb
lock
iret
and
les
push
and
faddl
or
add
xchg
inc
pop
cmp
xor
imul
and
pushf
ret
repz
push
push
jmp
adc
aaa
insb
mov
test
les
mov
js
nop
inc
cmp
adc
add
call
or
sbb
push
jmp
out
fisttpll
lret
sub
imul
fstpt
divb
rorb
cmp
das
jg
imul
pop
mov
icebp
and
les
pop
test
jmp
sub
aas
cltd
add
test
mov
test
in
push
imul
xor
sub
fs
ds
subps
repnz
test
cmpsb
dec
out
into
out
push
or
cltd
inc
pop
cmpsl
out
lods
xchg
cmpsl
sub
mov
aas
mov
pop
test
hlt
bound
lahf
in
subb
cmpsl
rcl
xchg
jecxz
mov
adcl
dec
and
testl
cmp
lret
push
xlat
dec
ljmp
push
jl
mov
gs
mov
and
xor
xchg
test
add
dec
ja
mov
xor
cvtdq2ps
sahf
dec
push
ss
adc
sbb
pop
xor
cwtl
dec
aad
mov
out
xchg
jne
addr16
vmread
movsl
mov
mov
popa
mov
pop
adc
arpl
inc
mov
or
test
testl
inc
scas
inc
pop
inc
cltd
pop
pushl
mov
push
jmp
in
addr16
das
repnz
ljmp
stos
push
shll
ss
mov
xchg
into
xor
fcompl
xor
pop
or
push
aaa
fstpt
sbb
sahf
ret
xchg
xchg
sbb
sbb
mov
fdivl
add
pop
sahf
stc
fcom
xchg
and
add
xorb
pop
movb
stc
push
loopne
pop
inc
mov
sub
push
iret
mov
jmp
sbb
and
push
subb
mov
mov
cs
lea
push
int3
xchg
outsl
lods
in
pop
pop
rorb
dec
stos
les
repz
cld
push
dec
sbbl
sbb
clc
dec
sbb
and
lods
mov
mov
movsl
sti
popf
dec
mov
std
xor
sbb
iret
je
inc
nop
sbb
mov
sbb
mov
cmpsb
ret
mulb
add
fcmovne
push
adc
mov
scas
lods
dec
xor
dec
imul
ss
rorb
add
aas
pop
add
iret
mull
or
test
fs
not
mov
enter
inc
inc
pop
cmp
lret
push
mov
mov
mov
sbb
hlt
or
out
push
leave
imulb
fwait
ret
jle
cmpsl
fisttpl
mov
ret
add
cld
imulb
sbb
call
lods
nop
call
sbb
mov
jl
mov
pop
sbb
xor
arpl
loop
in
inc
and
les
xchg
movsl
aas
loop
fmul
fldl
pop
in
lods
xor
xchg
add
or
hlt
test
xor
out
call
out
mov
mov
mov
imul
rcrl
inc
sarl
and
es
aad
add
ror
sbbl
jle
mov
or
jg
cmpsb
pushf
jae
xor
pop
mov
xchg
nop
out
xor
lret
cmp
jl
jge
arpl
sti
fs
test
inc
add
sarl
jno
mov
xchg
mov
dec
lahf
push
lret
lock
and
mov
sbbl
lods
cmp
xor
cmp
insl
int3
mov
push
aad
mov
mov
jae
xchg
xor
aam
int
ljmp
sbb
mov
lds
adc
xor
sub
shl
adc
sub
cmp
jb
mov
movsl
out
iret
pop
add
movsl
std
negl
xchg
ja
aad
jae
repnz
inc
sbb
pop
pop
fs
jp
push
inc
and
dec
test
fisubl
leave
divl
dec
movsb
jmp
jns
lock
cmp
xor
xchg
or
push
imul
mov
add
dec
and
mov
div
arpl
jbe
mov
fbstp
add
dec
xor
jbe
outsl
push
test
orl
jbe
add
and
xor
and
outsl
int
push
ljmp
sbb
test
mov
mov
js
dec
insl
dec
dec
mov
mov
mov
icebp
fstl
sbb
mov
mov
xchg
push
pusha
mov
xchg
xor
lahf
xchg
sbb
adc
out
loop
pop
lret
into
sub
notl
cli
jl
mov
xor
popf
js
add
add
dec
popa
imull
add
mov
popf
adc
sbb
jbe
cmc
hlt
or
lret
dec
clc
mov
push
jo
jge
imul
jg
sbb
inc
xchg
cmp
cmc
sbb
mov
lock
into
daa
jne
dec
pop
dec
inc
outsl
out
mov
adcl
movsl
adc
push
pop
shrb
out
xor
xor
insb
std
dec
mov
jno
sub
aam
rorl
push
ljmp
adc
dec
rorb
stc
xchg
dec
mov
mov
stos
loope
sub
dec
push
frstor
adc
mov
iret
fcoml
xchg
sub
mov
mov
add
dec
mov
imul
rolb
add
push
cmpsb
mov
push
add
cmp
imul
fwait
lea
mov
out
xor
movsb
movsl
cmpsl
in
adc
shrl
enter
aaa
xor
mov
lock
stos
and
call
jne
xor
sbb
jnp
cmc
cmp
lret
jge
jnp
push
jne,pt
test
imul
aam
mov
rclb
outsb
arpl
pop
xor
dec
push
popf
std
fiadds
sub
inc
add
imul
sub
mov
lahf
or
xchg
fmulp
sub
shlb
dec
cmp
ja
xchg
pmulhw
jle
inc
lcall
ds
jecxz
inc
mov
test
jnp
imul
xchg
aad
cmpl
mov
jno
in
inc
jecxz
lods
in
js
jo
enter
js
repnz
pop
es
xchg
daa
pop
fistpl
inc
adcl
mov
lock
jge
je
loope
lahf
inc
aam
loope
and
stos
pop
sub
in
add
pop
movsb
mov
mov
or
cwtl
inc
fs
mov
aad
mov
imul
scas
daa
rolb
push
pop
xchg
clc
and
pop
roll
push
pop
jle
jle
int
sarb
push
inc
inc
adcl
xor
pop
xor
cmpsl
popf
pushl
sbb
sbb
imul
or
mov
out
sbb
cmpsl
lods
mov
sbb
sub
addr16
hlt
jge
add
and
push
js
jp
cs
or
out
pop
mul
pop
cmp
sub
push
xchg
test
pop
arpl
addr16
sbb
rep
fld
sub
or
or
jno
repnz
push
ret
bound
ljmpw
lock
mulb
insb
js
test
mov
or
rcrb
and
sbbl
je
pop
jno
pop
and
inc
pop
cli
ds
test
mov
jae
sub
sahf
fs
push
aaa
mov
cmpb
mov
xchg
push
enter
icebp
fcoml
add
cmc
dec
rcll
push
mov
ss
dec
inc
pusha
push
or
dec
cmp
and
test
adc
push
and
or
outsb
test
or
fldcw
sub
sub
addb
gs
adc
inc
adc
inc
dec
movsl
mov
loopne
jns
stos
adc
sbb
shll
pushf
mov
lahf
pop
cmp
sbb
mov
sbb
fwait
scas
lods
iret
pusha
inc
subb
std
or
lods
cmp
gs
out
test
aad
jae
mov
cmp
and
jmp
xlat
fbstp
stos
fwait
inc
sahf
push
negl
pop
jmp
lods
shl
pushf
or
cmp
jmp
in
sub
test
cmp
out
xlat
ss
pop
and
shr
mov
int3
adc
mov
imul
adc
insl
sbb
or
test
repnz
js
jae
inc
pop
jne
jle
xor
jmp
push
call
into
stos
iret
ret
enter
or
insl
roll
rcrl
jp
aaa
and
idivb
xchg
mov
mov
mov
test
cmp
and
sbb
mov
xor
mov
lds
mov
xlat
mov
push
sub
ffree
jb
rcrb
imul
test
pushf
aam
jecxz
sbb
loopne
outsl
fistl
xor
and
iret
nop
or
stos
shrb
aaa
jo
je
sub
movsb
inc
sahf
sub
adc
mov
fsin
push
addr16
addr16
arpl
in
stc
cwtl
jle
out
ljmp
std
scas
insl
aas
call
cs
sbb
fstps
pusha
mov
fisttps
mov
dec
rorl
push
arpl
fimull
cs
sub
cld
sti
negb
jb
sub
sub
call
outsl
andb
int
dec
and
jo
gs
scas
loopne
cmpsl
mov
or
fucomi
out
sbb
in
out
repz
pop
sbb
or
and
sub
fcmovne
jecxz
jle
fisubs
mov
jns
xchg
loopne
adc
pushf
sub
aas
sbb
icebp
movsl
cmp
inc
aad
hlt
sahf
arpl
jo
mov
xor
movb
xorl
pushf
lock
and
clc
or
pushf
jp
rorl
bound
test
arpl
dec
cmpsb
mov
dec
pop
xchg
hlt
or
jns
push
or
mov
test
repnz
cmp
push
mov
jmp
add
jg
scas
xchg
clc
fsub
or
sub
clc
add
imul
xor
sub
clc
pusha
jae
cmpsl
loopne
adc
sbb
jo
mov
fdivl
in
dec
add
pop
dec
sbb
ret
pop
dec
les
xchg
or
inc
cmp
ret
adc
mov
repnz
rcr
out
cmp
inc
cltd
mov
pop
test
push
in
jl
dec
jle
out
mov
add
rclb
xchg
cmp
or
xor
xchg
aaa
dec
add
cmp
add
fmuls
mov
adc
clc
add
fisubs
ficoms
xor
jb
lock
daa
insl
xor
repnz
out
pop
push
insb
xchg
xor
xchg
stos
mov
loopne
xorl
std
outsb
jl
les
mov
xchg
sub
sub
insl
outsl
dec
or
rol
cld
mov
sub
mov
inc
mov
push
test
movsl
ret
adc
push
sub
mov
cmp
insl
je
dec
mov
xchg
mov
aas
insl
data16
fs
aad
in
cmc
push
loop
cld
mov
mov
mov
dec
adc
sar
and
dec
mov
in
out
jg
inc
inc
sub
popf
dec
sub
lret
sbb
add
and
xchg
ds
test
and
inc
push
push
dec
movsb
adc
sbb
std
mov
pop
jle
jno
mov
jbe
rcrl
xlat
jecxz
add
dec
xchg
pop
fsubl
lock
shl
jb
push
sbb
xor
subb
xchg
scas
adc
icebp
pop
test
adcl
dec
dec
sbb
lock
pop
xchg
mov
adc
fwait
pop
push
lret
loop
rclb
xchg
lock
lret
out
sub
loope
lea
sub
icebp
xchg
mov
cmc
lcall
inc
inc
xor
das
pop
lret
int
ror
imul
inc
mov
and
jge
jge
xchg
rclb
rorb
fucomip
in
and
pop
cmpsl
cmp
pop
icebp
mov
inc
push
gs
je
mov
xor
inc
push
push
mov
mov
mov
jno
mov
neg
call
test
call
lea
in
cmp
sahf
cmc
rcr
scas
inc
ljmp
inc
lods
jb
dec
pop
jl
jmp
iret
fimull
cltd
mov
mov
mov
jl
sub
lret
stc
adc
xor
lret
lahf
roll
pop
popa
or
ficompl
lock
mov
testl
inc
push
jmp
flds
in
mov
xor
pop
sbb
test
pop
imul
dec
or
cmc
aaa
pusha
add
nop
mov
cmp
xchg
pop
sub
xchg
fmull
in
mov
add
jecxz
and
cmp
bound
jl
and
fnclex
push
rol
inc
sbb
cmp
sbb
adc
dec
insb
sbb
mov
adc
movsb
jl
push
mov
push
fs
lock
inc
std
or
mov
xchg
stos
sub
adc
mov
or
sarb
jmp
mov
xchg
cmp
out
loopne
loop
sbb
xchg
cwtl
push
mov
xor
not
nop
rcrb
in
pop
jp
dec
cmp
mov
push
xor
loop
sahf
scas
push
mov
std
xor
pushf
cmp
sbb
je
inc
filds
jnp
in
jl
lcall
popf
mov
cwtl
mov
inc
into
mov
mov
mov
movsl
rcl
or
push
xlat
int
mov
adc
fmulp
test
dec
pop
adc
dec
mov
push
outsl
fistpl
jb
das
dec
insl
add
mov
std
shr
jge
insb
xor
call
lock
jno
lcall
xorb
push
push
dec
scas
stos
or
mov
jg
xor
cltd
or
je
inc
adc
mov
les
les
pop
sahf
sbb
pop
jo
mov
pop
jo
ja
push
andl
dec
add
das
mov
inc
jmp
pop
scas
into
mov
leave
dec
dec
insb
mov
lds
mov
sbb
mov
iret
mov
mov
inc
cwtl
jmp
mov
cmpsl
sub
sarl
sub
mov
leave
scas
roll
jmp
cmp
sub
mov
mov
push
jge
lret
in
jb
sub
jge
imul
dec
push
and
aam
add
sbb
imul
ret
push
pop
or
lcall
add
testb
mov
inc
dec
in
add
outsb
cmp
ret
inc
fnsave
push
out
sub
lods
inc
and
lcall
adc
jne
cmc
mov
test
and
out
or
pop
cmp
pop
mov
cmc
pop
shlb
orb
cs
clc
fwait
sub
mov
xor
jecxz
sarb
lock
sbb
fstps
or
fiadds
test
mov
arpl
xor
fldcw
inc
int3
out
mov
inc
sbb
gs
std
add
loope
pushl
cmpsl
xor
orb
cld
pop
and
mov
test
adc
dec
mov
push
aam
push
xchg
xor
sti
adc
jmp
stos
in
sbb
add
loope
cmp
stos
loope
js
mov
dec
xchg
rorb
jno
dec
pop
icebp
leave
inc
and
into
pop
out
cmp
and
add
adc
popf
or
cltd
add
push
in
pop
xchg
loop
sti
add
xor
sub
dec
mov
sbb
in
ds
pusha
pop
dec
cltd
or
xorl
cwtl
mov
cli
jo
and
or
and
push
loope
outsl
push
or
lret
out
xor
test
pop
sub
or
cs
insb
lds
xor
mov
stos
outsl
mov
das
ret
inc
enter
cld
or
inc
push
xchg
and
or
jmp
sti
mov
insl
xchg
test
mov
loop
cmp
jg
shl
jno
xor
call
sub
sbb
xchg
mov
mov
xchg
jp
aaa
xchg
test
lods
aas
cmpsl
push
jle
mov
pop
jge
mov
jno
mov
lcall
aad
pop
ds
mov
aad
cli
movsb
jae
pop
in
int3
sbb
lcall
scas
sub
es
pop
pusha
push
adc
xlat
shl
pop
jmp
mov
into
inc
and
inc
es
inc
cmp
inc
fcoml
arpl
test
daa
shlb
fnstcw
adcl
loop
xchg
imul
push
push
pop
pop
lret
movsb
inc
pop
jae
cmp
sbb
dec
aas
adc
scas
xor
push
jecxz
inc
jl
sbb
shll
sbb
aam
mov
loop
xchg
gs
insl
jbe
pop
add
sahf
add
fidivl
sbb
test
stos
and
in
out
lret
movsl
mov
sbb
aaa
repnz
sbb
jge
pop
imul
icebp
loopne
in
jl
in
into
fs
ljmp
sbb
jmp
add
push
cmp
popf
sbb
fldt
jno
das
xchg
jb
xchg
mov
mov
lret
loop
mov
sti
int3
das
in
daa
mov
jmp
out
sub
fldz
hlt
pop
mov
jno
sbb
xchg
push
shll
lcall
sub
xlat
lods
repz
call
addr16
push
sti
adc
adc
and
mov
data16
repz
mov
not
dec
adc
loope
push
mov
push
adc
mov
lea
dec
pushf
jb
dec
and
lret
dec
push
xor
shr
cmp
nop
into
add
mov
or
enter
addr16
add
add
xor
and
pop
mov
inc
and
mov
jae
bound
iret
dec
dec
cmp
inc
stc
incl
xchg
inc
and
or
adc
add
lock
mov
scas
cmpsl
repnz
jmp
repnz
fiadds
push
xor
lret
xor
jae
adc
jmp
push
scas
pusha
cmp
sub
xor
cs
cld
lcall
mov
add
lahf
lcall
xchg
arpl
sbb
push
dec
imul
arpl
pop
add
pop
stos
sets
ja
mov
daa
xor
or
lods
fnsave
fistpl
out
gs
fisubrs
dec
popf
ds
scas
loop
mov
jle
inc
jne
lods
inc
ljmp
int
pop
shrl
sbb
xor
inc
mov
mov
rcrb
and
lods
push
dec
je
pop
mov
mov
xor
mov
jo
dec
mov
pop
nop
ljmp
pop
jl
pop
je
fmuls
push
xchg
int
and
xchg
mov
test
inc
outsb
xor
xor
popa
inc
cmp
dec
pop
or
mov
sbbb
cs
imul
leave
cmp
ret
lcall
push
dec
stc
push
in
add
insl
sbbb
out
sub
pop
lret
or
push
testl
rcll
js
sbb
movsl
cmp
cwtl
lcall
ljmp
xor
test
mov
and
ds
mov
sub
xor
loopne
fildl
fldenv
lea
insb
xor
add
cmc
shlb
inc
in
jns
dec
imul
addr16
sti
xor
pop
cmc
clc
icebp
sbb
xchg
pop
je
xorl
inc
and
xchg
popf
movsl
cwtl
fwait
dec
les
stc
imul
fdivr
mov
push
rcrb
add
sbb
clc
lods
inc
loop
xchg
jb
in
xchg
cmp
inc
shl
sbb
call
dec
inc
jecxz
in
xor
cmp
pop
pop
mov
leave
mov
xchg
out
push
rcrl
mov
jmp
or
aam
jge
sub
int3
movsb
jbe
mov
cmc
out
insl
lahf
mov
insb
movsl
pop
pusha
mov
fwait
xchg
push
mov
das
xor
xor
test
in
in
mov
loopne
inc
cmp
out
mov
les
fs
jo
aam
or
push
daa
nop
mov
push
call
popa
mov
enter
mov
push
sbb
cld
mov
push
sub
cmp
jge
daa
in
loop
xor
xchg
std
fmulp
push
lret
subl
or
mov
pop
pusha
cmpsb
pop
pop
mov
xchg
mov
mov
push
inc
mov
mov
stos
and
jbe
invd
and
sti
lock
fcoml
pop
cltd
adc
mov
sbb
pop
mov
inc
fistl
pusha
addr16
mov
mov
dec
xchg
les
inc
mov
jge
ljmp
shl
or
sbb
jnp
jl
sub
js
jns
add
out
mov
cmp
mov
mov
xchg
sbb
paddd
out
mov
or
inc
cmp
icebp
pop
movsb
sbb
or
jae
cmpsb
sbb
mov
das
test
pop
or
sti
popa
lcall
xchg
cmp
xor
lret
inc
je
aam
mov
dec
aaa
pop
adc
stos
movsl
pop
lahf
nop
rcr
loopne
scas
test
add
imul
aas
lods
out
lods
aas
cmp
xchg
jl
push
out
mov
jecxz
lcall
mov
js
or
in
xchg
ret
data16
rcll
push
sbb
push
addb
push
push
or
in
imul
add
insb
push
and
xchg
fsubl
int
cmp
les
je
sub
add
jnp
jns
shll
je
xor
addr16
pop
and
cld
in
xchg
and
sbb
repnz
xor
cmpsb
rep
nop
pop
pop
and
mov
ss
mov
and
lahf
push
lcall
mov
mov
mov
mov
push
pop
or
mov
mov
ja
mov
in
mov
sbb
add
lds
ds
pushf
cmpsb
mov
mov
xor
nop
mov
mov
ljmp
xor
test
scas
aas
sahf
dec
pop
add
repz
and
ror
adcl
xor
int
jno
mov
bound
movsb
mov
and
repz
jl
xchg
scas
xor
jmp
cmp
or
xor
stos
inc
pop
mov
sbb
inc
jecxz
pusha
ficoml
jmp
fnstsw
xchg
cmpsl
scas
notb
cmp
or
jp
sbb
inc
scas
sbbl
icebp
xchg
pop
cmpl
js
mov
xor
jbe
clc
mov
push
cs
aad
push
sub
stos
sbb
or
int
cltd
jbe
mov
lcall
dec
xor
mov
or
aad
jg
ds
or
mov
stos
out
mov
mov
jmp
dec
lock
notl
or
mov
mov
adc
mov
push
push
mov
test
pusha
cmp
or
lea
es
cmc
jge
pop
and
dec
negl
movsl
stos
add
mov
outsb
push
in
aam
cmp
out
test
sbb
push
mov
ror
int3
xor
jb
sub
adc
insl
xchg
dec
nop
fstpt
movsl
into
inc
pop
pop
mov
add
aam
pop
xor
or
aas
mov
sub
stos
dec
shlb
lock
xchg
scas
jle
jmp
mov
loopne
ret
scas
xor
push
sub
call
xchg
in
mov
das
sub
cmp
sub
and
jge
push
mov
lods
mov
inc
cld
pop
frstor
les
pop
jbe
ja
testl
push
popf
add
mov
out
fistl
sbb
mov
loope
enter
dec
xchg
xor
insl
popf
das
xchg
loope
or
inc
in
icebp
outsb
das
mov
jl
and
pop
push
lcall
in
call
adc
movsl
ret
subl
sbb
in
xchg
lahf
mov
fnstenv
repz
add
or
sub
dec
mov
jae
xchg
adc
or
movsl
sub
jg
lret
xor
in
add
add
lahf
dec
cmp
push
pushf
fidivrl
cli
mov
js,pt
cmpsb
paddw
call
cmp
rclb
and
sbbb
scas
lods
test
test
inc
mov
icebp
out
aad
stc
sbb
sub
mov
sub
push
jne
xchg
jnp
jo
sbbb
dec
jl
fistpll
test
add
add
pop
jnp
imul
dec
pusha
ja
ficompl
dec
sub
inc
sub
mov
push
je
fld
fistps
cmp
jmp
jl
and
ja
mov
ficomps
mov
push
mov
sub
fiadds
fcompl
les
pop
xchg
and
nop
pop
in
and
in
inc
stc
cwtl
call
cmp
test
jb
xor
dec
jb
arpl
in
and
xchg
ja
pop
jmp
xor
mov
inc
cmp
or
shlb
shlb
test
push
mov
leave
dec
inc
cmpb
or
dec
bound
push
repz
dec
hlt
out
loop
mov
lods
pusha
adc
lods
cmp
inc
inc
add
cmp
xchg
repz
sub
ds
leave
nop
cmp
jg
and
dec
shlb
scas
pop
icebp
add
int
sti
lds
inc
outsl
fs
xor
cltd
xor
and
sbb
es
pop
data16
jbe
sub
and
pop
mov
jp
xchg
imul
jo
je
fistpl
jmp
outsb
out
mov
int3
mov
cmpsl
out
fwait
jae
gs
or
inc
dec
mov
cmp
imul
push
sub
test
leave
push
push
aas
dec
dec
popf
sbb
xlat
cmpsl
sub
fs
sbb
fnstsw
sarb
lret
cmp
xchg
das
xchg
repz
imul
adc
dec
pop
or
aad
aad
test
dec
dec
out
gs
lods
mov
jno
loope
push
mov
out
fsts
nop
test
dec
addb
ss
mov
inc
rorl
fistps
xchg
popfw
adc
push
in
stc
cmpsb
sbb
div
mov
mov
aaa
cmpb
and
sarb
je
xchg
filds
mov
movsb
aam
push
nopl
into
inc
mov
fs
lods
mov
outsl
cmpsb
pop
nop
cltd
dec
hlt
pushl
sub
mov
loope
push
adc
pop
shlb
add
mov
imull
cmp
dec
push
dec
notb
je
es
sub
inc
mov
dec
pop
add
xor
lret
mov
pop
popf
shll
dec
jp
shl
addr16
cmpb
push
rcr
mov
adc
xchg
in
cltd
mov
rol
jo
aas
shll
bound
shlb
cs
pop
stos
repz
push
mov
scas
cmp
push
add
pop
in
aad
ret
xchg
or
lods
fcompl
xchg
xchg
fsubrs
mov
mov
or
je
xchg
mov
sti
or
cld
fsubl
aas
out
mov
test
sub
jnp
sbb
