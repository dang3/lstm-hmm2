push
push
push
call
push
and
mov
push
add
mov
add
popl
add
pop
add
ret
push
call
push
push
push
push
call
pop
add
sub
push
push
push
call
push
push
push
call
push
push
push
push
push
push
push
push
call
call
push
push
call
mov
mov
add
add
mov
xor
push
push
mov
mov
xor
pop
push
push
push
push
call
push
push
push
push
call
call
mov
mov
push
push
push
push
call
add
push
push
push
call
mov
sub
jne
pop
pop
pop
push
lea
pop
pop
pop
xor
ret
push
lea
pop
mov
cmp
jne
pop
pop
mov
push
push
push
push
call
pop
mov
push
push
call
pop
push
add
pop
add
push
mov
push
push
or
pop
push
push
add
pop
push
push
push
call
push
mov
mov
push
add
pop
add
push
push
push
push
call
mov
add
add
add
mov
push
or
pop
add
push
push
push
call
add
call
mov
mov
push
push
push
call
add
mov
add
push
push
call
add
mov
add
push
mov
pop
add
call
pop
pop
push
push
push
push
call
mov
pop
leave
push
push
push
call
xor
inc
ret
push
push
add
mov
xor
pop
push
xor
pop
push
push
push
push
call
call
push
call
jmp
mov
push
push
lea
mov
sub
pop
push
add
pop
push
call
push
push
push
push
call
call
push
push
and
mov
add
pop
push
push
push
push
push
call
call
push
and
pop
push
push
push
add
mov
sub
pop
push
push
mov
mov
add
pop
push
push
or
pop
call
mov
movl
movl
movl
push
sub
pop
push
push
push
mov
mov
sub
pop
push
sub
pop
push
push
push
push
call
call
mov
call
mov
push
push
and
mov
sub
pop
push
xor
pop
push
call
push
push
push
push
call
call
push
push
sub
mov
sub
pop
push
call
push
push
push
push
call
push
call
push
lea
mov
sub
xchg
push
push
push
push
call
call
push
call
push
xor
mov
xor
xchg
push
call
push
outsb
pop
jo
insb
pop
pusha
je
arpl
jne
jae
push
popa
data16
push
jnp
je
jae
imul
bound
jne
pop
push
addr16
push
jo
je
pop
pop
jb
jge
push
push
pop
jle
pop
arpl
outsl
jo
push
pop
jp
pop
fs
jp
jne
arpl
pop
js
bound
push
jg
imul
pusha
pop
pop
pop
popa
je
push
jge
pop
jnp
js
push
pop
push
jb
jle
jne
bound
push
push
outsb
imul
push
jb
push
pop
push
outsl
pop
pop
fs
pop
fs
bound
jb
pop
js
jae
insl
ja
push
arpl
jae
jae
jae
jns
insl
jnp
push
pop
pop
pusha
insb
outsl
push
jae
push
pop
push
pop
jb
popa
insb
fs
push
push
bound
jle
pop
pop
jnp
push
jae
jp
push
outsb
fs
insb
push
insl
pop
jno
jns
imul
jg
addr16
insb
fs
pop
push
ja
push
fs
push
fs
pop
push
pop
addr16
push
outsb
jl
addr16
jb
insb
arpl
pop
pop
push
arpl
push
push
call
push
call
pop
pop
push
push
push
push
call
pop
push
add
pop
leave
xor
inc
ret
push
push
push
lea
mov
sub
pop
push
lea
pop
push
call
push
push
call
push
xor
dec
push
push
call
mov
inc
inc
cmp
jbe
jmp
push
push
push
call
cmpw
jne
pop
push
push
push
call
cmp
jbe
ret
push
push
push
call
call
add
push
push
call
jmp
mov
push
push
add
mov
add
pop
push
call
push
push
push
call
xor
sub
push
push
push
push
add
pop
jmp
or
je
xor
pop
push
or
pop
pushl
push
xor
pop
pop
push
push
push
push
call
mov
mov
mov
push
xor
mov
sub
xchg
push
xor
pop
push
call
push
push
push
call
cmpl
jne
add
push
mov
mov
sub
xchg
push
push
push
push
push
call
call
push
push
add
mov
xor
xchg
push
push
push
call
push
call
mov
push
push
push
push
push
call
push
push
sub
pop
mov
add
add
mov
xor
push
push
push
call
add
mov
push
push
push
push
call
xor
push
push
push
call
add
push
and
pop
rep
push
push
call
pop
mov
add
add
mov
push
push
push
push
call
xor
push
push
call
add
push
push
call
mov
xor
mov
push
push
push
push
push
call
xor
push
push
call
add
add
push
push
push
call
add
call
je
pop
push
fs
jae
imul
jle
pop
addr16
jne
popa
pop
gs
push
jno
gs
pusha
outsb
jp
push
pusha
gs
pop
outsl
pop
ja
imul
pop
js
arpl
push
push
ja
push
pop
push
pop
imul
jl
push
pop
jne
pop
push
jb
jnp
jle
arpl
js
pop
outsl
push
outsl
bound
jb
jnp
jl
addr16
push
push
jno
push
pop
pusha
push
pop
pop
jnp
bound
fs
outsb
pop
push
outsb
push
push
pop
pop
jl
pop
arpl
jb
insl
add
lock
es
add
add
pusha
idiv
decl
dec
fcoms
sarl
add
pop
push
call
push
push
push
or
mov
xor
pop
push
lea
pop
push
push
push
lea
pop
call
mov
push
push
mov
push
push
push
push
call
add
add
push
or
pop
mov
push
push
push
push
push
call
xor
call
outsb
imul
fs
push
jo
outsb
jg
jg
pop
popa
addr16
push
push
je
jg
jns
jg
push
popa
jb
jg
je
jnp
jl
pop
jo
bound
imul
pop
popa
bound
pop
addr16
push
jno
push
ja
pop
jp
imul
gs
jg
outsl
pop
push
pop
popa
insb
pop
outsb
pop
imul
data16
je
insl
gs
push
addr16
pop
jle
push
pusha
jne
js
arpl
push
pop
jnp
jbe
jb
imul
jge
jo
je
push
jg
pop
push
pop
push
jne
jno
push
pop
imul
jne
outsl
insb
popa
push
pop
data16
je
jns
push
pop
pop
jbe
imul
or
add
call
add
push
and
pop
add
mov
xor
push
push
push
call
rep
push
push
call
mov
xor
push
push
push
call
or
je
push
xor
pop
mov
push
push
push
push
push
call
xor
push
push
push
push
call
add
mov
xor
add
push
push
push
call
add
rep
mov
push
push
push
call
xor
push
push
push
push
call
add
or
je
push
and
pop
mov
add
rep
pop
push
mov
mov
add
xchg
push
xor
pop
pop
push
sub
pop
mov
jmp
push
push
add
pop
mov
push
push
call
add
push
push
push
call
push
push
push
call
push
push
push
push
add
pop
push
mov
mov
add
push
push
push
push
call
mov
add
mov
add
xor
push
push
push
call
mov
push
add
pop
xor
rol
push
push
push
call
xor
push
and
pop
inc
cmpb
jne
push
xor
pop
cmp
je
add
cmpl
jne
xor
push
push
push
push
call
pop
push
push
push
push
call
pop
pop
pop
push
push
call
pop
leave
push
push
push
call
ret
push
lea
pop
mov
push
push
push
call
add
push
mov
pop
mov
push
call
call
jns
imul
outsl
jno
je
popa
jnp
addr16
push
push
jg
pop
pop
pop
je
jne
arpl
jg
insb
jnp
push
arpl
push
insb
push
insb
pop
jl
push
jae
outsl
pop
push
jle
fs
push
jge
push
push
ja
jb
ja
push
jge
popa
insw
arpl
jb
pop
js
jp
jb
pop
push
jl
popa
push
pusha
jb
outsl
je
jno
pop
pop
gs
pop
insl
push
je
gs
imul
popa
je
js
imul
popa
insl
push
pusha
push
popa
push
push
push
jne
push
pop
insl
jbe
popa
jns
addr16
je
push
jle
jl
jp
jp
push
jbe
pop
addr16
push
pop
pop
pop
popa
popa
pop
jnp
push
push
jns
pop
pop
pop
jg
push
push
ja
jno
pusha
jnp
jge
pop
jne
jo
jns
pop
push
pop
jp
jl
push
jp
jno
jno
pop
jno
jge
js
jns
imul
jnp
jns
imul
jo
js
imul
jo
pop
jle
bound
jns
pop
js
add
add
add
lods
repnz
jmp
rclb
pop
pop
push
or
pop
pop
push
xor
pop
pop
push
push
push
call
pop
pop
push
push
call
leave
ret
push
mov
cmpl
jne
push
xor
pop
mov
push
push
call
jmp
mov
and
pushl
push
or
pop
pop
sub
jmp
sub
push
sub
pop
pushl
pop
sub
push
call
pop
fs
jp
push
jno
jnp
jae
jge
pusha
insl
jge
pop
push
push
arpl
gs
push
imul
pop
jae
jnp
jb
jb
pop
jb
push
insb
push
push
push
imul
pop
pop
addr16
outsb
pop
je
je
jb
jns
jg
gs
jns
push
jnp
pusha
jns
pop
pop
jo
push
jb
outsl
push
jae
jns
push
jb
jp
outsb
pop
push
insb
jns
jle
push
js
push
imul
fs
pop
pop
pop
pop
pop
pop
jae
pop
js
pop
gs
push
jo
addr16
push
imul
pushw
pop
pop
pop
push
jne
jbe
pop
arpl
imul
ja
addr16
jns
push
push
pop
push
pop
jl
jno
pop
pop
addr16
jp
jg
push
js
push
jle
bound
pop
jg
popa
outsl
push
push
call
cmp
jne
mov
add
movzwl
sub
push
push
call
cmp
jne
push
sub
pop
leave
push
push
push
call
ret
push
push
call
push
push
push
push
call
mov
add
push
add
pop
push
push
push
push
push
call
push
push
push
push
call
push
mov
push
push
lea
pop
pop
mov
add
mov
add
push
or
pop
pushl
popl
push
xor
pop
mov
push
push
push
push
call
add
xor
lea
push
and
pop
mov
push
lea
pop
add
xor
rol
nop
call
jb
push
jno
pop
insb
push
js
ja
data16
pop
pop
push
pop
jae
push
push
push
pop
arpl
pop
jae
pop
imul
pop
jne
jae
outsb
jns
push
pop
pop
jns
js
jge
bound
arpl
push
push
pop
jge
fs
pusha
push
push
pusha
arpl
jb
imul
pop
push
pusha
push
js
push
gs
addr16
imul
pop
pop
jl
pop
fs
push
push
push
outsb
insb
jb
jb
jae
pop
gs
jbe
push
jbe
push
jns
pop
jle
push
outsl
jae
jg
pop
jge
insb
push
jl
push
push
pop
addr16
push
push
jb
je
jb
pop
add
add
add
mov
call
fcmove
enter
push
push
call
nop
inc
push
push
push
push
call
nop
nop
cmpb
jne
push
add
pop
nop
nop
cmp
je
nop
nop
push
push
push
push
call
inc
nop
nop
cmp
jb
mov
push
or
pop
add
push
push
call
movzwl
mov
add
mov
add
push
push
push
call
pop
push
and
pop
pop
push
add
pop
pop
pop
leave
push
mov
pop
ret
inc
in
sbb
aaa
sbb
sbb
aaa
sbb
aaa
sbb
aaa
sbb
jns
sbb
aaa
sbb
ds
sub
jno
test
sub
lret
stos
dec
sub
sbb
dec
lahf
jp
sbb
enter
lods
mov
xchg
mov
xchg
test
adc
int
or
or
mov
cmc
movsl
insl
ret
scas
lahf
popf
popf
push
aas
push
dec
sti
mov
std
add
rcl
push
push
lods
push
shrl
adc
loop
int3
ret
pusha
mov
jb
test
out
out
or
cmp
mov
xchg
pusha
xor
repnz
mov
fdivl
mov
push
inc
adc
sbb
andl
mov
pop
dec
push
addl
jp
xor
loopne
imul
fwait
rol
mov
mov
push
out
mov
cmp
sub
mov
dec
data16
mov
adc
push
push
jl
jl
cmpsb
sub
and
sub
outsl
xchg
pop
dec
shrl
inc
ret
cwtl
push
push
jns
xchg
ja
sub
pushf
cmc
cpuid
and
cmp
shll
jns
dec
mov
adc
js
mov
leave
mulb
jae
mov
push
call
xchg
sbb
add
test
mov
xchg
add
xchg
dec
scas
jb
or
ficompl
mov
movsb
les
icebp
jecxz
mov
dec
fcmovnbe
outsb
push
scas
mov
fisttpl
jns
push
mov
dec
jns
cmp
les
ds
mov
jne
sub
ss
mov
xor
loope
dec
or
sub
lret
inc
xlat
lods
adc
pusha
push
cmp
or
jmp
mov
dec
add
push
jbe
in
mov
int
inc
insl
cmp
sar
shll
dec
test
xor
mov
dec
outsl
je
int
xchg
cmp
iret
xchg
push
in
cmpsb
mov
sbb
cmp
cmp
dec
lods
push
loopne
or
incl
mov
add
out
jmp
or
aas
shl
push
adc
xor
stos
add
popf
add
or
sbb
add
mov
cmp
xchg
fs
or
addr16
sbb
mov
and
push
add
ret
mov
or
outsl
sub
add
xchg
jbe
and
dec
lret
inc
in
pop
mov
mov
xchg
rorl
xchg
bound
push
xor
iret
add
push
hlt
inc
push
andl
test
aas
sub
lret
push
fstps
push
in
cmpsl
test
adc
push
add
setl
sub
sub
push
movsb
ret
in
call
cmp
lods
in
mov
int3
dec
fucomi
mov
adc
cmp
mov
pop
mov
pop
enter
in
dec
stos
lods
lods
inc
ja
push
in
adc
pop
out
mov
repz
cmp
stc
and
cmp
es
xchg
fnsave
lock
inc
outsl
push
or
push
push
push
push
stc
inc
sahf
push
movsb
or
loopne
cs
insl
jno
leave
adc
jp
sbb
jmp
jmp
in
or
mov
sti
aas
and
in
add
fwait
popa
and
int3
or
mov
sub
or
adc
mov
jae
jp
scas
pop
leave
lods
pop
and
jne
jmp
js
lods
subl
lea
pop
pop
cli
leave
iret
cltd
fidivs
fnstsw
dec
add
xor
imul
jno
pop
jb
fisttps
mov
add
xchg
loop
mov
scas
test
or
cmp
dec
add
push
pop
daa
or
push
popf
mov
dec
das
pop
xchg
arpl
lret
lea
call
sbb
pop
into
push
push
aad
cmp
or
stos
ja
rcl
sub
mov
mov
lret
cmp
ss
push
iret
in
mov
jmp
clc
sub
jecxz
cmp
inc
xchg
mov
into
lock
add
or
cmpsb
sbb
aaa
push
lea
test
sub
sub
xchg
jge
or
fsubrl
jecxz
pop
adcl
cmc
mov
xlat
stc
ret
adc
xchg
rclb
lds
fcoml
mov
dec
addl
ret
dec
sbb
aam
loope
cmp
out
push
lea
cli
inc
movsl
push
sbb
rol
ljmp
dec
ds
jl
mov
xlat
popf
ret
xor
mov
cmp
inc
pop
push
outsl
cld
mov
sub
in
cmpsb
je
fidivrs
ja
sub
call
shll
jp
push
dec
pop
add
cltd
xor
adc
outsl
jmp
data16
pushf
lds
test
shlb
je
mov
or
xor
aad
or
stos
scas
test
pminub
rorb
or
lock
dec
fildll
lds
ret
je
je
add
call
inc
movsl
adc
pop
and
jae
scas
mov
lret
mov
jge
ljmp
cwtl
xchg
jns
out
lcall
aas
aaa
jge
scas
pop
xchg
mov
fwait
es
in
adc
sub
mov
outsl
out
faddp
sbb
das
shll
in
dec
shlb
push
push
shlb
in
xor
and
shrb
sub
mov
out
push
cmp
cli
xchg
cwtl
pop
sbb
xor
imul
xchg
push
les
call
sbb
cmpb
push
out
or
inc
push
adc
jae
shll
sarl
int
scas
xchg
jo
and
inc
xor
nop
sub
or
or
sbb
xor
aaa
xor
ss
xor
mov
in
mov
aaa
int
mov
dec
mov
movsl
jp
movsl
ss
xchg
dec
jo
pop
pop
jmp
negl
pusha
negl
stc
lock
fsubrl
xor
cli
add
push
xchg
and
pop
xchg
std
cwtl
daa
sbb
aad
mov
icebp
pop
sti
jecxz
test
mov
inc
jge
xchg
ficoms
roll
cld
push
lock
es
jo
cmovle
fs
mov
push
xchg
push
and
cmp
or
loopne
es
push
nop
in
pushf
std
loop
pusha
jge
cltd
shl
js
inc
decl
xchg
mov
out
sbb
mov
or
dec
sahf
pop
cmp
inc
aam
add
aaa
dec
mov
ja
cmpsl
add
aas
stos
cmp
jecxz
push
lds
adc
xchg
pop
int3
sub
xor
or
sub
jle
pop
pusha
lret
jge
scas
stc
sbb
jmp
mov
mov
call
fsub
jmp
out
iret
xchg
loopne
xor
and
andl
gs
push
clc
int
push
dec
inc
push
out
and
lret
add
pop
pushf
dec
dec
addb
pop
sahf
in
popf
sti
push
aam
mov
rcrl
mov
testl
shlb
jp
add
scas
addr16
les
incb
sbb
cmp
insb
cmpsl
dec
es
out
mov
xchg
pop
xchg
cmp
cwtl
jle
pop
mov
xchg
inc
out
inc
andl
cmp
lods
sub
pop
lea
sar
insl
filds
ror
repz
aam
xor
adc
xor
mov
jecxz
pop
or
jb
mov
mov
mov
es
mov
movsl
sti
dec
scas
mov
ja
sbb
jae
adc
jge
ja
mov
mov
outsb
sub
push
and
dec
test
xchg
mov
xor
lods
jmp
orb
and
aad
jae
je
and
out
inc
loope
cltd
popa
push
mov
outsl
or
in
stc
fsts
repnz
mov
mov
xchg
lea
ja
adc
leave
popf
add
add
outsl
int3
cltd
pop
and
insb
push
nop
das
sub
das
or
cwtl
add
mov
ljmp
ja
int
movsb
pop
sub
xor
mov
data16
inc
mov
fisttpll
or
sub
int3
mov
out
xchg
iret
push
push
sub
xchg
mov
adc
test
or
pop
movsb
cmp
insl
in
mov
cmp
fs
jae
jp
add
jb
sub
pop
arpl
popa
insb
cmp
ret
les
fisttpll
jl
fcmovu
xor
xor
add
mov
cs
push
std
data16
jl
loopne
mov
adc
pushf
jmp
mov
out
push
aad
push
lret
repz
xchg
lret
lods
test
cs
sub
xor
mov
lcall
in
jle
sub
sbb
jg
xor
jno
movsb
inc
cmpsl
cltd
lea
add
dec
jo
sti
ljmp
dec
inc
popa
movsl
lds
lcall
out
movsb
daa
in
jno
int
imul
les
sbb
adc
add
adc
mov
fnstsw
outsl
insb
push
add
add
mov
xor
bound
sub
int3
lret
aad
and
add
mov
imul
mov
clc
sub
xchg
lret
test
decl
iret
icebp
ja
jmp
pop
mov
into
fmull
in
lods
or
xlat
loopne
ret
clc
insl
stos
call
divb
pop
and
es
mov
inc
sub
notb
pmuludq
mov
punpckhbw
nop
mov
pop
add
jae
sub
mov
les
call
jns
jl
imul
jnp
sub
int3
mov
aam
sub
pop
test
inc
cmp
dec
dec
mov
pop
es
iret
pop
icebp
into
sbb
adc
ja
mov
push
push
inc
cltd
mov
stos
mov
push
push
push
lcall
ljmp
lret
push
stos
les
sub
movsl
mov
xchg
dec
or
cs
fcomps
mov
outsb
xchg
xchg
data16
add
cmp
inc
sahf
xlat
test
mov
nop
int
cld
cmp
out
leave
adc
xchg
cmp
jne
mov
adc
mov
lds
cld
jnp
lock
cmpsl
stc
repnz
jnp
pushf
sbb
xlat
sbb
out
inc
lahf
stc
inc
add
mov
jb
shlb
mov
xchg
xor
mov
pop
insb
sub
xor
push
std
test
jnp
xchg
stos
dec
push
mov
imul
sahf
shl
push
lods
imul
jo
inc
xor
xchg
inc
int3
outsb
loopne
rclb
lock
int
mov
push
je
push
enter
xchg
xor
subw
and
and
inc
xor
aas
lahf
lea
int3
or
sbb
js
mov
xor
and
cmc
lods
test
aaa
cmp
aaa
jns
ret
gs
faddl
outsl
xor
jne
arpl
mov
cmp
ja
arpl
xchg
aad
adc
insl
fnstcw
and
xor
movsl
in
xor
pop
cwtl
push
push
jmp
in
sbb
ret
adc
andl
lea
pop
rolb
stc
nop
cmp
into
xchg
pop
xchg
stc
add
push
adc
movsl
call
dec
jb
repz
cmp
insl
mov
mov
cmpsl
xchg
fisubrs
fucomp
fistpl
pop
fwait
mov
push
sti
mov
mov
push
inc
xor
scas
imul
adc
inc
cmp
inc
pop
repz
dec
jg
lds
mov
addr16
sub
fcomp
pop
fsub
push
int3
and
cltd
mov
insb
aas
sbb
insl
fstps
stos
outsb
out
cltd
daa
dec
aam
push
scas
xor
or
adc
inc
xchg
repnz
sbb
fwait
das
push
add
stos
stos
mov
add
sahf
stos
xchg
inc
hlt
pop
xor
incb
pop
and
ds
jmp
push
stc
bswap
push
mov
xor
mov
mov
stos
sti
mov
xor
pop
mov
aam
add
icebp
add
inc
or
es
stos
cmpsl
std
arpl
dec
mov
jae
stc
sub
fcmovnbe
dec
pop
vmwrite
daa
add
divl
into
loop
scas
push
pop
lods
cmp
shrb
lahf
in
ja
sbb
mov
dec
lds
enter
ret
lahf
mov
in
cli
in
dec
dec
xchg
add
aad
inc
adc
shlb
xor
movsb
cld
cwtl
mov
fwait
pop
pop
lretw
or
nop
inc
fs
inc
outsb
stos
loop
ficoms
incb
jg
xchg
cwtl
jae
push
pop
mov
outsb
aaa
jp
fimuls
mov
xor
push
mov
nop
in
adc
rolb
enter
push
sti
mov
les
sbb
fstpl
fstl
push
imul
mov
jmp
fwait
dec
push
test
lea
jb
aam
cmp
adc
fistps
sar
adc
xchg
xchg
and
loope
ja
popa
dec
sub
push
pop
hlt
and
hlt
insb
decl
sub
mov
and
push
enter
out
in
or
or
je
add
cmp
icebp
dec
sbb
leave
pop
and
aaa
leave
jnp
pop
xor
movsb
dec
ret
repnz
sti
std
aad
jnp
das
or
test
and
add
xor
test
test
jns
gs
leave
ja
imul
add
lret
frstor
int3
pusha
je
mov
add
mov
dec
pop
adc
mov
cmp
push
loope
xor
repz
scas
lds
imul
mov
cmp
insl
test
xchg
push
mov
pop
cltd
xor
inc
xor
fdivrs
xchg
imul
push
cwtl
sti
in
in
ret
rcrb
jge
inc
add
jmp
sbb
jp
sbb
out
repnz
fs
push
bnd
in
pop
pcmpgtw
pop
mov
adc
add
test
loop
mov
lcall
sahf
test
arpl
dec
mov
call
lcall
lea
jecxz
mov
sbb
lods
daa
mov
imul
mov
or
js
lret
cmp
mov
sti
adc
lret
cld
xor
xchg
dec
mov
in
ret
mov
add
mov
mov
jecxz
sub
pop
popa
iret
push
sbb
icebp
mov
jo
cmc
or
push
add
cmp
rcr
or
inc
fwait
test
loop
fistl
enter
cmp
lods
sbb
loope
xchg
stc
loopne
sub
dec
jns
repnz
add
cmpsl
call
adc
xchg
dec
test
dec
lea
imul
insl
push
dec
xlat
cmpl
in
test
pop
jl
movsl
scas
jno
in
jbe
push
jnp
lahf
test
xchg
mov
push
xchg
cmp
dec
loop
pop
sar
punpckhdq
aaa
xchg
sbbl
and
or
imul
cwtl
and
aas
movsl
mov
cmp
or
scas
int3
fs
out
and
insl
andl
lcall
imul
fldl
fimuls
mov
jne
inc
jno
xchg
xor
xlat
test
shr
out
mov
or
loopne
lea
xor
add
mov
fnstenv
add
mov
sbb
adc
lock
mov
or
cmp
daa
je
xchg
fcomp
pop
adc
cmc
nop
and
cmpsl
sbb
xchg
pmaddwd
jb
or
cmc
and
sahf
std
xor
test
pop
mov
icebp
mov
adc
dec
jb
mov
iret
pop
aaa
inc
addl
loope
or
es
mov
gs
mov
sar
ljmp
push
decl
lret
cmpsl
push
jmp
gs
cmpsb
ss
fdivrl
xchg
cld
jno
cmp
add
loope
fnsave
cmp
fildl
dec
icebp
jle
jns
mov
mov
adc
mov
inc
add
stos
and
mov
pop
in
pusha
scas
jno
in
movsl
xchg
test
push
mov
or
mov
jl
lret
inc
sbb
or
addr16
inc
mov
mov
adc
xchg
leave
jmp
shll
out
lahf
ljmp
or
stos
push
xor
pop
push
adc
repnz
imul
cmc
jns
or
movsb
pop
jne
push
mov
lcall
mov
sbb
dec
push
inc
pop
xchg
xsaves
out
call
popf
xlat
loopne
xchg
rcr
mov
in
xchg
lret
outsl
push
aas
jne
sub
leave
ret
cs
mulb
jo
fidivl
lret
cmp
fldcw
and
movsl
adcb
push
fnstenv
ds
sub
jle
push
scas
sbb
rclb
sti
xchg
lods
sub
sub
das
nop
insl
movsl
movsb
lds
fwait
clc
call
sub
and
lret
pop
xchg
ss
push
int3
imulb
int
aas
inc
adc
psrad
xor
cmpsl
push
mov
lock
inc
xchg
ret
enter
xchg
or
and
out
mov
je
sarb
sbb
jne
les
fidivrs
hlt
push
lret
push
lahf
dec
xlat
outsb
jge
cmp
ds
fldt
call
outsl
inc
aam
add
jno
push
adc
inc
test
sub
mov
adc
lret
add
cld
jecxz
sub
cmpsl
mov
loop
sbb
arpl
out
dec
xchg
adc
cld
mov
xchg
in
jmp
stos
mov
xor
push
sub
push
mov
jae
lods
out
dec
and
cmp
mov
call
jge
inc
jle
dec
dec
test
pop
push
je
or
pop
insb
popl
or
xchg
je
movsb
sbb
fbld
faddl
pop
fisubs
mov
stos
dec
mov
mov
in
xchg
push
in
in
test
repz
test
dec
xchg
and
and
pop
cltd
dec
push
nop
aam
sbb
xor
jecxz
aad
sub
and
cmp
adc
icebp
mov
leave
fbld
lret
xchg
xor
sub
xor
xor
rsqrtps
imul
lock
cmp
dec
nopl
jbe
mov
bound
loope
push
and
xor
mov
lret
cld
hlt
mov
leave
jno
shlb
add
aas
jp
jb
sbb
fwait
push
mov
lea
push
mov
mov
and
inc
jb
mov
adc
movb
es
add
cld
sub
inc
subb
push
pop
mov
xlat
out
shl
pop
add
sbb
scas
xchg
and
imul
jmp
ja
shll
jp
loopne,pt
out
in
rorb
push
mov
into
dec
aaa
mov
pop
ss
lret
add
mov
cli
mov
decl
mov
stos
bswap
lret
mov
inc
add
leave
or
leave
add
dec
push
pop
insb
shll
xchg
repnz
mov
jge
mov
lods
sub
ss
sbb
xchg
out
aad
enter
cmp
push
mov
add
dec
loop
mov
mov
rclb
jecxz
add
mov
xor
loop
iret
push
mov
pop
aad
add
mov
jo
or
aas
mov
out
jno
lea
jne
mov
nop
cmp
dec
psllq
lods
repz
mov
mov
out
push
nop
jp
sbb
sbb
test
push
sub
push
cmp
aas
fcomps
ret
loop
into
imul
cwtl
adc
fwait
mov
xchg
lahf
loopne
cltd
pop
movb
mov
pop
add
out
js
xchg
rorl
and
sub
xchg
lds
lods
pusha
adc
aam
dec
nop
add
dec
add
negb
xor
push
into
xor
jae
stos
xchg
mov
jno
cltd
outsl
jle
xor
movsb
loopne
out
sub
lret
xchg
in
jno
insl
pop
scas
out
adc
jno
xlat
sbb
mov
mov
xlat
inc
shrb
pop
sbb
pusha
or
pop
push
mov
xchg
and
loopne
dec
sub
fidivs
int3
dec
dec
test
xchg
mov
dec
shll
es
lret
fistpl
loop
mov
dec
notb
jg
test
popf
xlat
push
and
inc
adc
leave
lahf
adc
iret
pop
push
insb
aam
dec
sub
hlt
pop
popl
mov
sahf
aam
xchg
insl
outsb
cld
pop
mov
sub
xor
int
movl
jecxz
cld
aaa
pop
lods
add
cmpsb
mov
lock
and
ret
cmp
popf
mov
je
xchg
and
cmc
call
cli
popl
movsb
or
inc
mov
add
inc
les
das
insl
and
cld
dec
testl
imul
addr16
sbb
xor
cmpsb
mov
stos
loopne
dec
push
ds
out
inc
dec
fidivrs
xlat
add
sahf
std
stc
xchg
add
pushf
and
xchg
push
push
inc
lcall
ret
fwait
ljmp
jp
inc
xchg
and
out
push
insb
inc
push
pusha
mov
hlt
push
xor
cmp
xor
pop
pop
sub
mov
outsl
adc
pop
push
stos
imul
int3
rolb
aad
sbb
and
shll
fs
stc
mov
mov
sbb
xchg
sub
test
test
xor
dec
out
or
mov
test
sub
out
ret
inc
ror
bound
lods
dec
scas
cmpb
addr16
insb
mov
pop
jne
mov
add
fbld
mov
les
cmpsb
test
push
std
daa
cmpsb
push
mov
insl
lock
push
popfw
nop
push
push
fucomp
mov
outsl
and
lock
fildll
dec
iret
fdivr
out
sub
arpl
sub
std
ss
add
jno
pop
cmpsl
pop
cmpsb
imul
mov
pusha
mov
pusha
xchg
test
add
lcallw
outsb
add
mov
xchg
repnz
add
movsl
jg
and
stos
imul
mov
add
es
shl
les
dec
lcall
cwtl
mov
sbb
and
jo
mov
ss
rcrl
xor
jns
jns
sti
push
daa
xchg
fstps
jbe
fisubrs
fcmovnb
mov
xorl
sarl
xor
jmp
cmp
push
ja
stc
mov
mov
mov
cmp
dec
ret
mov
dec
push
cld
add
add
leave
dec
cmp
inc
pop
mov
icebp
mov
mov
test
fsubrs
stos
xchg
xor
outsl
das
inc
dec
popa
jo
push
lods
stos
mov
ds
jnp
lock
mov
pop
lret
nop
adc
pop
pop
push
push
mov
call
fisubl
jmp
mov
pushf
arpl
nop
es
mov
in
mov
mov
ficoms
jns
jae
cltd
jecxz
popa
sub
outsl
test
cmp
lret
shll
xchg
dec
or
fxch
and
adc
out
inc
cmpsl
and
sub
insb
sahf
sbb
adc
adc
js
mov
test
pusha
mov
jmp
mov
lods
in
sub
inc
fsubrs
flds
inc
inc
pop
xchg
hlt
mov
stc
pop
loop
cwtl
xor
js
into
cmc
repnz
xor
loope
les
js
shlb
or
loopne
lret
lea
fwait
pop
jno
in
add
hlt
mov
pop
ret
and
add
lret
arpl
push
inc
xchg
push
sub
mov
leave
cmpsl
mov
lcall
and
mov
ret
fisubs
call
xchg
clc
dec
adc
shlb
jnp
push
movsb
test
pop
addr16
pop
jns
icebp
das
scas
ds
pop
sbb
xor
jno
or
fdiv
and
addb
loopne
testl
filds
mov
fwait
clc
sub
mov
nop
mov
cmc
test
sar
mov
hlt
jo
loope
call
shrb
jb
pop
dec
cwtl
adc
or
das
pop
gs
fxch
sbb
adc
xchg
add
jae
jl
fisttpll
xchg
sub
adc
and
dec
xor
pusha
xor
sbb
mov
and
mov
push
pop
xchg
loope
stc
cmpsl
cmovg
xlat
push
sbb
cwtl
fwait
or
lret
pop
ret
xor
roll
inc
xor
xchg
mov
test
add
sbb
call
or
pop
gs
and
jns
adc
mov
stos
jp
sub
mov
sub
mov
int
imul
outsl
ficomps
loope
pop
adc
in
inc
pop
jmp
loopne
pushf
sbb
cwtl
das
out
and
les
cwtl
push
outsl
jle
mov
fcompl
pop
stos
push
cmp
test
gs
dec
lea
push
out
int
adc
js
jnp
into
aam
test
js
cmpsb
daa
in
mov
mov
fstpt
cmp
mov
imul
sub
mov
push
fmuls
fstpl
mov
loop
test
xchg
pop
mov
notl
into
pop
loopne
lods
mov
push
sbb
xchg
xchg
rolb
cltd
pusha
jnp
outsb
mov
es
jecxz
lds
outsb
mov
shlb
arpl
adc
mov
imul
jp
ss
push
xor
popa
fildll
rcr
adc
add
adc
inc
dec
jb
aaa
pop
dec
pop
jecxz
movsl
push
inc
js
and
int3
clc
mov
mov
pop
jne
mulb
cmpsl
pop
leave
out
out
repz
lahf
out
pop
arpl
jae
iret
out
andb
aaa
rcl
push
les
out
testl
xchg
pusha
sub
jle
sarl
cmp
add
push
movsb
pop
out
mov
mov
repz
scas
pop
cltd
nop
je
sbb
add
fmuls
sub
addb
pop
mov
mov
jae
sbb
lods
jne
and
or
cli
mov
inc
inc
mov
jmp
dec
les
in
jle
xchg
dec
xchg
in
jg
insb
pop
rorb
testl
mov
dec
shlb
stos
xchg
lret
inc
or
xorl
cmp
inc
ljmp
popf
fimull
push
mov
mov
lds
cmp
iret
ljmp
cld
add
jne
push
rolb
lret
and
movsl
mov
rcrb
dec
push
lret
mov
pop
cmp
push
dec
mov
xor
xor
mov
push
adc
xchg
inc
mov
xchg
iret
inc
and
outsl
stos
dec
rorb
cmpsb
mov
cmpsl
mov
mov
movsb
repz
add
mov
fsub
pop
daa
sar
fnop
inc
add
xchg
insl
clc
sbb
or
jecxz
and
push
push
add
inc
rorb
cwtl
ss
mov
mov
push
pminub
inc
lock
mov
xchg
iret
mov
data16
int
jns,pt
mov
in
stos
mov
hlt
cmp
sti
push
aas
cmp
out
addr16
mov
test
mov
inc
imul
mov
mov
push
push
outsl
mov
rcr
push
lret
jbe
mov
dec
pop
cmp
fsubrl
loop
into
pusha
push
data16
lret
fimull
push
xchg
and
mov
mov
test
push
xor
xchg
lods
push
cmp
sub
xor
sbb
test
loopne
mov
popf
sbb
lret
shll
jbe
lock
in
cmc
stos
or
outsb
lock
data16
lret
cmc
test
into
mov
mov
mov
pop
fcmovu
icebp
pusha
mov
jle
push
add
les
gs
push
sub
sbb
insl
pop
xor
jb
aad
mov
icebp
adc
dec
jle
inc
push
sarl
xor
jg
fimuls
jg
push
pop
jb
loopne
and
mov
lahf
xchg
int3
popa
aaa
and
movsb
sbb
and
or
popa
xor
dec
mov
imul
inc
mov
xchg
cmp
mov
mov
lods
aaa
push
push
imulb
int
jae
mov
fisubs
mov
mov
cmpsl
or
bound
pop
sbb
inc
cmp
call
sbbb
pop
push
sbb
adc
lret
enter
pop
imul
push
cltd
mov
mov
adc
cwtl
in
dec
adc
aaa
ljmp
call
int3
and
pop
popa
cmpsl
fwait
sbb
scas
or
inc
jns
mov
es
test
lahf
xor
mov
mov
pop
ds
inc
adc
cmp
scas
fisubl
std
shlb
mov
add
dec
xor
push
and
pop
test
lret
fs
add
lea
jge
xor
mov
sbb
iret
push
inc
scas
push
mov
mov
push
loope
cltd
jb
mov
jnp
dec
mov
movsb
insb
and
call
mov
jb
dec
push
outsb
fldenv
jecxz,pt
test
mov
cwtl
cmp
clc
dec
jge
test
add
xor
cwtl
xchg
nop
cmp
sbb
aaa
fdivrl
pop
scas
jge
int3
jne
shl
shll
add
xor
xchg
sbb
push
xlat
shl
imul
mov
add
mov
sbb
mov
mov
addr16
cmp
aad
jp
sub
jl
or
cltd
mov
push
fcomip
scas
xchg
pusha
ss
jns
dec
push
xlat
pop
push
and
cpuid
gs
icebp
movsb
jmp
jmp
sti
shlb
js
dec
or
xchg
js
mov
sbb
xor
loope
add
out
mov
fld
and
jb
jo
xor
and
rolb
movsl
mull
test
shlb
aad
cmpsb
cli
inc
fs
sub
stos
loop
and
jns
loopne
sar
mov
sbb
out
lahf
inc
jmp
loope
inc
pop
push
inc
xchg
push
pop
sub
mov
test
sahf
mov
or
in
les
xchg
dec
add
imul
test
clc
cmp
loopne
aas
add
leave
dec
cmpsl
sbb
or
lds
push
sbb
and
sbb
cmpsb
aam
mov
pop
fucom
jg
clc
js
mov
test
sbb
pop
call
xor
add
inc
in
scas
in
xchg
add
out
adc
ss
jl
adc
inc
dec
loopne
sub
lods
std
adc
push
stos
pop
ljmp
sbb
std
ret
jo
mov
push
mov
stos
sub
rorl
out
incl
sub
mov
cmp
sti
ss
rol
push
dec
mov
sbb
mov
xor
mov
sbb
sbb
inc
add
shlb
pop
pop
lock
add
sbb
mov
sub
aas
sti
dec
pop
mov
out
jnp
pop
dec
push
pop
add
addr16
aam
je
or
mov
decl
in
sbb
sahf
and
add
jae
mov
push
mov
pop
or
imul
jno
and
les
sbb
mov
xor
sbb
xchg
mov
pop
xor
lods
test
and
xor
roll
pop
shll
pop
xchg
mov
mov
xchg
cmpsb
sbb
mov
cli
fwait
and
in
loope
shll
cmc
jns
jp
jns
sarl
dec
out
and
add
xor
int
push
cmp
jmp
lods
dec
int3
push
fsub
adc
in
out
jae
lret
adc
inc
mov
sbb
cltd
cs
fcompl
xor
rcr
wrmsr
ror
outsl
cmp
mov
movsl
out
cmc
shrl
mov
scas
bound
xor
aaa
cmp
loop
shll
pop
stos
adc
loop
ret
push
xchg
jb
inc
lock
jns
pop
and
gs
hlt
dec
insb
xchg
lods
add
sub
jnp
jmp
xchg
cmpsl
and
scas
je
insb
sbb
insb
or
cmp
aas
push
dec
dec
fwait
mov
pop
idiv
cmp
sti
cmp
push
sub
shr
loop
inc
xchg
add
inc
lods
inc
xchg
jmp
loopne
jno
je
push
decl
repz
xchg
lods
xor
in
or
js
stc
fbld
sub
cmp
mov
test
fisttpl
icebp
cmpsl
xor
inc
scas
incb
cmpsb
add
mov
xchg
nopl
sub
outsb
cmp
jo
sbb
pop
and
add
cmpsb
mov
gs
cs
mov
xor
imul
xor
test
cs
es
xchg
stc
mov
lds
stc
push
xor
adc
push
mov
flds
repz
inc
outsl
and
sbb
sub
pop
add
jb
xchg
outsl
xor
inc
repz
insl
pop
dec
dec
andb
shrl
out
jle
adc
add
jbe
ficoml
cmpsl
sub
mov
push
pop
rcrb
cmp
lods
inc
imull
subl
fistps
sbb
scas
loope
iret
imull
xor
xchg
inc
leave
adc
pop
mov
adc
sub
adc
scas
mov
lcall
add
lret
xchg
cltd
mov
and
pop
leave
sbb
dec
jmp
xchg
push
dec
xchg
xchg
cmp
in
jle
mov
jae
inc
inc
jecxz
add
add
sbb
ds
xchg
mov
xchg
adc
pop
repnz
js
das
sbb
xorb
push
ret
xor
roll
les
xor
dec
sbb
jmp
leave
sub
push
push
scas
pop
or
scas
inc
mov
mov
ss
lahf
mov
fildll
std
cld
jno
adc
inc
jnp
es
mov
and
insb
mov
or
loopne
stos
or
out
and
sahf
jge
in
and
pushf
xor
dec
jg
or
cmc
cli
scas
test
mov
shll
inc
jle
push
jno
mov
add
xchg
test
bnd
dec
mov
scas
jge
leave
jbe
mov
lret
push
fisttpl
sbb
mov
fsubs
imul
pop
outsb
push
pushf
lret
fisubrs
cmp
out
out
dec
sub
add
repnz
inc
add
lcall
or
popa
push
arpl
sub
cmp
cmpsl
test
sbb
in
mov
mov
ficomps
lea
xor
fldl
xchg
aas
dec
idivb
icebp
push
das
add
pop
mov
scas
add
es
mov
movsb
test
lods
add
xchg
push
mov
fbld
fs
int3
iret
frstor
hlt
jmp
ret
sbb
jge
sbb
leave
jge
and
xchg
jb
scas
adc
or
pop
xor
cmp
lock
rclb
mov
stc
xor
rcl
fstpt
mov
inc
pop
outsb
in
cmpl
inc
and
or
mov
mov
fcmovu
cmpsb
inc
inc
shll
into
lcall
mov
test
mov
out
ljmp
leave
std
dec
rcl
jae
ror
mov
push
in
int3
xor
mov
inc
out
mov
lods
shrb
iret
cmpsl
movsl
movsb
in
xor
adc
test
cld
sbbl
js
fistpl
out
jno
js
insb
sbb
iret
sahf
and
cmp
mov
fsub
outsl
mov
in
lret
idivl
push
or
inc
push
mov
or
adc
xchg
out
jnp
stc
sbb
jnp
mov
jp
lret
or
pop
push
or
out
out
jb
in
pop
inc
cs
pusha
or
sub
push
in
mov
dec
add
jecxz
lret
aam
dec
lea
pop
push
xor
or
push
adc
add
xchg
mov
scas
cmp
mov
and
mov
mov
int
and
push
leave
adc
lcall
jnp
sbb
leave
adc
and
mov
or
inc
mov
mov
pop
mov
and
mov
sahf
xchg
cmc
shrl
movsb
rcr
inc
dec
sub
pop
jg
pop
test
scas
fs
leave
adc
xor
loopne
les
mov
mov
mov
jmp
sbbb
adc
hlt
pop
push
jne
bnd
pop
out
sub
jne
mov
aam
xor
xchg
push
and
test
test
je
mov
fistl
push
cmp
call
rolb
dec
test
inc
cld
enter
dec
jmp
mov
xor
in
lcall
pop
dec
sahf
mov
in
mov
sbb
xlat
sbb
jecxz
push
icebp
xlat
sbb
xor
inc
sub
pop
and
cwtl
xchg
add
dec
adc
insl
push
mov
jo
scas
ret
push
movb
pop
add
mov
shrb
rclb
stos
lock
mov
test
xchg
push
xor
daa
orl
arpl
mov
cmp
mov
leave
pop
testl
push
inc
push
push
xchg
inc
inc
adc
leave
aad
push
adc
das
dec
int
jne
leave
gs
xchg
mov
adc
pop
xor
sbb
mov
insb
lahf
repnz
test
sbb
fldl
jae
sbb
adc
lret
cmpsl
push
test
cli
pop
es
negb
mull
insl
jl
lret
push
inc
xor
xchg
in
sub
add
xchg
xchg
insb
out
cmp
pusha
idiv
aaa
and
xchg
lret
cmp
dec
idivl
xor
sarb
jb
jbe
stos
cli
push
into
or
jno
rorl
xor
adcb
xor
push
xchg
cmpsb
iret
push
mov
inc
arpl
dec
sbb
and
add
rclb
add
popa
add
inc
aam
pop
sub
pop
addr16
mov
adcb
vexpandpd
in
test
fbstp
adcl
fwait
loope
add
mov
and
pop
frstor
adc
mov
aas
scas
roll
test
shrb
push
aad
push
daa
cli
push
imul
sbb
and
fldl
popa
mov
cmp
sbb
mov
jg
aas
mov
cmc
frstor
nop
sub
push
mov
inc
lods
stos
inc
push
icebp
cmpsb
stc
scas
out
mov
xor
or
cmpsb
enter
push
xchg
shl
jo
cmp
dec
vpmacswd
inc
push
fwait
repnz
test
imul
inc
sbb
push
cli
ja
pop
or
push
outsb
sub
dec
test
mov
cli
popa
pushf
xor
sahf
xor
scas
sub
hlt
dec
test
jmp
inc
bswap
fwait
xlat
adc
mov
sub
and
outsl
test
rcll
inc
imul
or
arpl
and
lahf
rcrb
xchg
push
mov
popa
mov
add
mov
in
cmp
sarl
fs
mov
adc
aad
mov
push
pop
icebp
outsl
fisubl
aas
or
aas
hlt
push
inc
inc
inc
fnstenv
pop
pop
pop
shl
xlat
inc
xor
lret
inc
out
ret
dec
mov
orl
adc
ds
mov
lahf
mov
out
xchg
hlt
fisubl
xchg
or
add
movsl
es
insl
push
pop
mov
mov
add
pop
test
mov
xchg
fisubrs
adc
or
jp
aad
sbb
scas
lret
dec
je
repnz
stc
mov
idivl
mov
xor
jge
lods
ss
leave
ret
and
add
dec
cmp
sahf
dec
sbb
pushf
mov
push
jg
inc
push
mov
mov
push
mov
outsl
sub
sub
data16
or
mov
sub
movsb
pop
push
cwtl
fsubrl
sahf
push
add
xor
or
fcmovu
push
jp
shlb
add
lret
xchg
fwait
or
mov
dec
leave
lahf
cwtl
mov
inc
and
mov
pop
jo
pop
lock
fbld
fistl
pushf
fsts
pop
je
cmpsl
enter
std
xchg
and
imul
aas
ja
loopne
std
cmp
enter
mov
push
and
add
xlat
rorb
lds
cwtl
clc
notb
jecxz
js
jecxz
inc
into
adc
pushf
lcall
inc
arpl
rclb
loopne
ljmp
mov
xchg
lock
push
lds
push
mov
pop
and
jmp
xor
shrb
xchg
mov
jnp
loop
and
xchg
ja
out
scas
fwait
rcr
clc
or
pushf
add
jmp
mov
sbb
mov
sub
cmc
es
je
rcrb
xor
outsb
test
inc
cmp
loop
adcl
jg
in
inc
push
cmpsl
jecxz
ret
or
mov
cltd
and
test
lahf
cli
cmc
jp
lods
repnz
sbb
inc
in
xchg
ja
jnp
bound
js,pt
pop
mov
jp
and
adc
xlat
sbb
sahf
xchg
in
fmul
dec
dec
shrb
cld
psrlw
loop
cmp
add
gs
xchg
fwait
lock
dec
inc
push
add
xor
lahf
xchg
scas
and
dec
cmpb
fisttpl
xchg
sbb
xor
pop
lret
loop
xchg
cmc
subl
lock
push
add
addr16
xchg
stos
pmullw
lret
pusha
cmp
scas
imul
and
jle
shll
mov
push
scas
inc
jns
mov
cmp
adc
in
or
gs
loop
ljmp
nop
ror
mov
scas
jbe
std
arpl
les
mov
sub
int
push
int
inc
sub
push
imul
dec
push
das
pusha
imul
jp
rcrl
or
stos
iret
mov
fnstcw
lea
sbb
sub
loop
add
sub
mov
mov
jmp
push
jmp
iret
jne
popf
addr16
xchg
add
in
sub
daa
xchg
dec
add
pop
sub
add
push
es
in
mov
pop
icebp
mov
addr16
out
mov
mov
xchg
js
sar
ds
sub
push
cmp
xchg
rcrl
sub
jg
jno
sbb
dec
aas
clc
rorb
sbb
xor
mov
mov
dec
cmpsb
jo
adc
and
test
icebp
cmc
mov
add
push
ss
xor
repnz
or
outsl
cmp
xchg
out
loop
shr
sarb
mov
pushf
or
insl
pop
pop
out
sarb
ficomps
jmp
pop
jge
shll
pusha
xchg
pop
int3
mov
repnz
sbb
stc
dec
pop
enter
mov
fisubrl
mov
jmp
xor
inc
les
add
fistps
push
pop
testb
xchg
adcl
out
and
aas
fs
xchg
cmp
pop
daa
pop
mov
cmpsl
sbb
sub
testb
ficoml
test
sub
inc
push
out
int
ds
lret
popf
push
in
mov
cmp
popa
iret
popa
in
test
int
popf
gs
xor
into
aam
pop
jg
mov
sbb
jo
push
rorl
jg
popa
orb
adc
lods
lods
mov
or
enter
mov
fiaddl
stos
aam
test
into
mov
mov
cld
lahf
lret
cmp
jb
push
jae
int
dec
cmc
and
loope
push
or
popa
sub
pop
push
sbb
inc
hlt
sti
mov
insb
ds
push
xlat
ficompl
in
stos
mov
stos
mov
ja
mov
sahf
push
lods
shll
mov
inc
jo
fs
test
iret
adc
jle
lods
cmp
shl
xchg
lahf
lret
add
lea
add
lock
mov
repnz
jo
inc
lds
adc
in
xlat
aam
xor
xor
hlt
mov
xor
test
adc
mov
jae
or
cmp
inc
xor
stos
sbb
mov
dec
ret
sahf
xlat
stos
scas
fs
push
push
xchg
in
icebp
loop
sub
loop
into
jnp
sub
lahf
adc
hlt
sub
pop
cmp
xchg
push
cmp
filds
sbb
rcll
arpl
outsl
cmp
or
cmpsb
add
loop
popf
punpckhdq
mov
and
jo
dec
lcall
sub
les
mov
xor
sub
cmc
mov
sbb
loope
push
cmp
fnstcw
sbbb
repz
push
cwtl
insl
dec
xchg
mov
popa
notb
jnp
fnsave
addr16
or
in
inc
clc
out
xlat
data16
pop
mov
or
and
mov
xchg
push
int
js
cmp
push
sti
push
and
add
insl
xor
incb
sti
imul
mov
add
mov
push
pop
mov
in
pop
aad
inc
or
and
mov
and
push
popa
mov
ret
inc
xchg
sub
push
and
mov
pop
jg
bound
sbb
loope
out
lret
repnz
lock
mov
xchg
nop
inc
fsts
rcll
gs
sbb
cmp
outsl
dec
movlps
fsubl
pop
jecxz
mov
xchg
sbb
dec
outsl
sbb
mov
sbb
mov
push
mov
pusha
or
sub
mov
dec
jge
cmp
cmp
jg
cmpsl
add
cmp
cmc
in
push
and
pop
sbb
inc
pop
xchg
stc
sub
sub
ja
sub
es
pop
jle
xchg
dec
fistpll
add
jmp
dec
pop
sub
cs
xchg
movsb
add
sahf
stos
imul
add
gs
fcompp
into
or
mov
ret
adc
bound
dec
mov
jmp
mov
jmp
inc
scas
mov
std
adc
inc
icebp
lods
fldt
and
xchg
cmp
ret
pop
ljmp
sub
push
inc
test
outsb
jecxz
lret
jle
in
and
jmp
and
mov
push
mov
lock
imul
call
pop
inc
sbb
nop
sahf
insb
sti
rcll
add
sbb
fsts
outsb
dec
loope
push
shlb
or
jb
and
adc
pop
shrb
xchg
aad
mov
test
push
test
and
jge
std
or
add
adc
or
ret
insb
xchg
and
filds
adc
dec
sub
and
dec
dec
add
xchg
hlt
lret
in
fbld
jne
jb
arpl
inc
mov
gs
mov
testb
pop
sahf
clc
cmpsb
mov
jmp
jmp
mov
and
adc
push
or
in
sub
jmp
scas
dec
arpl
add
jns,pn
adc
sbb
outsl
dec
shlb
dec
lahf
or
les
xchg
lahf
call
js
jp
cmp
lods
rorb
xchg
inc
lcall
nop
int3
dec
movsb
or
mov
push
pop
loope
push
add
loope
insl
dec
cmp
pop
jnp
xor
lret
pop
cmpsb
ja,pn
dec
and
sbb
dec
pop
shlb
ja
fsubrs
jb
pop
dec
test
into
icebp
mov
add
in
inc
into
sub
nop
fwait
dec
gs
sbb
pop
inc
jmp
jne
daa
data16
out
in
sbb
xchg
or
xchg
mov
or
mov
cwtl
mov
push
xor
repnz
mov
js
loop
mov
stc
popf
loope
sti
push
or
out
stos
loopne
pop
movl
sbb
adc
jg
jae
cs
movsl
mov
mov
repz
js
inc
arpl
lret
pop
jmp
loopne
mov
mov
jle
push
xor
push
mov
xchg
dec
xor
ret
xchg
mov
test
jl
or
scas
aad
jmp
sbb
lret
xchg
xchg
dec
ds
jl
cli
insb
mov
icebp
out
ja
jl
pop
sub
repnz
rorl
cmp
in
std
cltd
push
nop
test
push
pop
xor
push
push
and
adc
clc
mov
data16
push
cmp
and
lods
fidivrl
lods
push
pop
pop
pusha
pop
sbb
stos
rcrl
test
push
jmp
mov
loope
out
adc
sub
xor
or
and
cmp
pushf
in
push
sbb
sub
es
pop
lock
cs
cltd
xchg
in
jp,pn
mov
mov
cmp
mov
sbb
jmp
shrb
gs
xor
xor
adc
pusha
cmp
pushf
and
jle
stc
mov
rorl
mov
push
xchg
rcr
add
aas
jno
cwtl
mov
movsl
jb
xchg
jle
push
inc
adc
movsb
daa
jnp
cld
outsb
lods
idiv
setnp
dec
or
push
sub
js
inc
bound
loope
iret
jns
pop
sahf
loopne
jae
stos
mov
adc
stc
dec
shll
das
fnsave
jg
cs
cs
repz
cwtl
out
cmp
aaa
add
fbld
cmc
ret
adc
xchg
pop
inc
sti
pop
and
loop
sub
js
mov
xchg
ja
lret
and
ret
mov
adc
leave
push
imul
jno
dec
popa
pop
or
incl
inc
retw
mov
nop
sbb
in
lods
out
popf
mov
cmp
push
lret
add
push
and
mov
repz
nop
int3
cmp
les
jb
push
jo
mov
xor
fistps
push
add
pop
sbb
push
mov
ss
test
fcmovne
mov
sub
and
mov
bts
jns
mov
nop
js
sti
mov
dec
push
mov
imul
popa
mov
inc
rcll
or
cli
gs
inc
mov
push
jle
mov
mov
mov
push
and
icebp
loop
jg
movsl
addb
xchg
push
xchg
dec
out
insl
mov
shrb
leave
xchg
insl
fsts
inc
fwait
or
int
xor
sub
insb
push
mov
and
andb
inc
icebp
mov
push
shrb
jbe
notb
das
or
das
in
in
xchg
sti
add
iret
movsb
pop
or
test
aaa
insb
popa
and
xchg
sti
fs
enter
sbb
ljmp
pop
jmp
gs
jns
testb
inc
jecxz
nop
xchg
pop
pushf
pop
pop
ja
or
or
adc
fcmovbe
iret
stc
rorl
lods
in
mov
jo
fdivp
or
aaa
imul
dec
pusha
inc
dec
rcll
jo
scas
inc
jo
cmp
jae
incl
mov
std
and
js,pn
dec
mov
scas
cmpsl
lods
stc
scas
aam
aad
push
imul
cli
jp
mov
and
jg
jmp
aas
jmp
lods
addb
out
dec
xor
mov
lds
push
jno
jne
int3
xchg
push
shrl
incb
out
inc
jns
pop
inc
lcall
pop
imul
jge
dec
or
add
jb
mov
jle
xor
negl
out
outsb
lcall
dec
lock
mov
je
out
flds
aas
nopl
test
int3
fldenv
xchg
mov
mov
enter
fwait
xchg
mov
fneni(8087
mov
push
or
add
mov
cmp
pop
xchg
push
dec
jmp
push
shrl
fwait
scas
ret
sbb
outsb
xchg
pop
sub
repz
push
add
int
out
mov
pusha
mov
mov
sub
clc
nop
out
cwtl
imul
lcall
push
push
jno
mov
lret
aam
inc
cmp
jae
add
add
mov
jg
mov
cmp
push
lods
adcb
loop
call
xor
pop
pop
jmp
insl
cmp
or
mov
inc
aaa
mov
jnp
or
repz
pop
cmpsl
dec
outsb
xchg
movsb
xchg
pop
lea
aaa
push
xor
inc
ss
ja
clc
into
xchg
push
lret
lahf
lcall
dec
mov
pop
mov
leave
mov
outsl
daa
je
loope
or
push
sub
inc
fimull
in
mov
adc
xchg
cmp
mov
adc
insb
iret
repnz
dec
push
aas
mov
dec
push
or
lret
outsb
int
pop
in
sahf
jb
inc
push
pusha
lock
xchg
adc
in
or
mov
mov
xchg
add
cltd
out
loope
xor
sti
or
inc
pop
or
or
dec
in
out
icebp
js
jno
fidivl
xor
lds
mov
stos
inc
scas
lds
daa
xlat
xchg
test
adc
sub
jb
push
inc
push
js
je
lret
dec
cmpsl
xlat
adc
mov
out
push
inc
nop
sbb
in
into
std
dec
or
mov
gs
jb
sbb
xchg
xchg
inc
inc
xchg
push
rcrb
inc
add
pop
mov
adc
push
lock
les
lret
notb
sti
sbb
sbb
xorb
mov
or
ds
jmp
ss
add
inc
mov
adc
rcrl
lcall
jno
rclb
jecxz
add
mull
pop
pop
test
cmp
lds
pushf
nop
dec
sbb
sub
test
scas
test
repz
aam
xor
jp
sub
mov
dec
in
std
divb
std
sbb
in
inc
aas
aas
or
and
daa
in
mov
or
divl
les
arpl
fcmovne
pop
hlt
shlb
xchg
loopne
bound
sbb
rcll
out
lds
push
scas
das
pop
xchg
lods
clc
dec
mov
in
push
jns
dec
rorl
mov
jp
pop
jbe
test
mov
adc
test
rcr
gs
sti
pop
sbb
out
cld
loopne
pop
pusha
in
adc
lret
mov
hlt
jmp
or
popl
add
add
faddl
pushf
loopne
cmp
pushf
packuswb
out
shrl
jecxz
sub
jb
cmpsl
pop
loope
pop
lock
and
and
push
xchg
jl
dec
sub
pop
xor
push
lock
test
fdivrs
cltd
rorl
out
cmpsb
mov
xor
imul
push
or
scas
mov
es
xchg
adc
pop
mov
add
movsl
mov
xlat
ds
mov
nop
subl
das
imul
sub
jge,pn
or
xor
cs
cmpsl
pop
xlat
in
sub
fistl
mov
jbe
popa
cs
jo
rcll
cli
xlat
push
scas
add
leave
movl
mov
ja
icebp
pop
mov
xor
mov
outsl
scas
and
mov
inc
aam
sub
mov
xor
push
loop
outsb
aaa
ja
sbb
inc
daa
and
add
outsb
inc
pop
xchg
sbb
pop
cmp
mov
test
enter
xchg
xor
ljmp
rcrb
inc
dec
mov
daa
xchg
lock
adc
inc
cs
ja
pop
or
movsb
mov
les
les
push
mov
add
sub
in
and
sbb
inc
or
and
xor
xchg
shr
pop
out
jo
dec
adc
pop
mov
mov
and
mov
inc
mov
push
push
cmp
shl
adc
outsb
and
jg
imul
sub
pop
shrb
jmp
pop
xor
fwait
je
pop
jno
add
xor
popa
imul
aam
jge
or
or
jecxz
lcall
mov
ret
add
jmp
out
fs
mov
popf
add
rclb
loopne
xchg
insl
ljmp
fmull
jb
mov
test
loopne
xor
imul
pop
sti
jbe
cmpsb
test
push
fmuls
sbb
mov
cmp
adc
jbe
inc
inc
sbb
sbbl
mov
sbbl
fimuls
cli
stos
sub
roll
sub
jne
jne
mov
lods
jne
xchg
ret
sbb
into
int
mov
fisttpl
add
ret
jns
fstpt
adc
jb
dec
mov
aam
xor
ret
mov
sbb
mov
dec
push
mov
push
cmp
mov
push
and
xchg
jg
push
sbb
xor
xor
xor
out
lock
test
or
repnz
dec
mov
jbe
sbb
out
pusha
mul
add
mov
in
push
clc
inc
pop
and
xor
xor
mov
push
inc
jbe
and
roll
into
ja
or
sbb
inc
mov
cmp
sub
rcrl
dec
fstl
and
shll
inc
add
sti
stos
push
add
or
cmp
mov
jb
movsb
inc
mov
sbb
jns
pop
mov
insb
mov
and
xor
dec
roll
cmpsb
jl
out
push
stos
push
cwtl
cmpsl
out
cmp
cmp
ret
mov
mov
and
repz
sub
imul
mov
popf
leave
sahf
cld
bswap
ret
das
push
mov
out
xor
xchg
mov
scas
mov
out
cli
idiv
aaa
cmp
sbb
push
mov
cmove
jns,pn
push
sbb
sbb
sahf
and
sbb
data16
pusha
mov
fisubrl
in
dec
inc
and
dec
repnz
clc
mov
es
cmc
mov
popa
push
mov
or
sbb
loop
adc
push
cs
cld
dec
pop
pop
inc
shll
sahf
mov
in
mov
jge
cs
or
repz
out
jg
inc
jmp
jne
mov
insb
xor
lock
movsl
scas
je
or
stc
es
mov
inc
fildll
mov
pop
mull
push
dec
daa
and
or
scas
testb
cli
inc
ds
movsb
mov
aad
xor
mov
aas
icebp
lods
dec
int
mov
fcmovnu
push
or
iret
mov
pop
sub
rorl
dec
fldenv
jge
rcrb
or
lods
mov
test
imul
add
xor
xchg
leave
jo
fstps
shlb
sbb
sbb
jnp
add
stos
dec
les
mov
outsb
inc
lret
in
fldenv
das
jae
aaa
or
dec
push
mov
aaa
outsl
divl
in
les
ret
mov
xchg
lahf
mov
fstl
ss
cmp
mov
dec
xor
movsb
sub
xchg
push
push
int3
enter
repnz
cld
add
pop
jno
xchg
xchg
and
cmp
cmp
sbb
enter
in
sbb
adcb
jecxz
mov
cmc
and
imul
adc
stos
push
or
sar
mov
insl
mov
cmp
mov
adc
nop
jl
and
dec
icebp
jo
lahf
mov
adc
sub
xor
icebp
mov
inc
jmp
xchg
push
popa
push
fstps
fnstsw
in
movsl
xor
xchg
ss
mov
push
js
mov
sar
xlat
sub
mov
push
xchg
mov
cmc
icebp
lods
fs
pop
mov
sti
or
lret
int
stc
negb
or
add
lea
scas
pop
popf
push
dec
mov
mov
outsb
mov
out
dec
in
daa
push
sub
clc
inc
push
imul
and
xor
cs
mul
xor
leave
into
ss
push
lahf
insl
sub
xlat
addb
cwtl
aam
fildll
test
nop
adc
loopne
iret
pop
jge
in
leave
and
rcrb
popa
jne
mov
sbb
sti
mov
sti
xchg
jne
dec
aas
adc
inc
cmp
adc
dec
out
jb
out
mov
imul
push
test
sub
push
scas
pop
xchg
scas
es
pushf
lods
loope
shrd
pop
mov
sub
jne
inc
xor
sbb
call
sbb
mov
hlt
mov
xlat
inc
mov
ficompl
pop
push
pop
xor
fadd
add
repz
mov
mov
mov
xor
mov
test
lret
iret
outsl
sti
and
add
jb
push
repnz
sti
stc
or
xchg
clc
ja
lahf
sbb
adc
adc
xorl
adc
cld
xor
sbb
inc
mov
pop
loopne
in
loop,pt
les
outsl
into
mov
mov
pop
test
in
mov
movsl
shlb
mov
push
xor
ret
push
xor
cltd
sbb
leave
test
aad
dec
aam
loope
add
inc
mov
stos
int3
or
sub
call
and
out
mov
je
adc
jl
xor
daa
push
xor
and
flds
sub
pushf
fwait
jle
mov
in
loop
dec
mov
std
rorl
icebp
jg
inc
adc
inc
out
mov
mov
sbb
adc
cmp
cmp
push
imull
insb
dec
push
jae
add
popf
rorb
dec
sar
cltd
ds
leave
inc
lret
scas
xchg
lods
mov
dec
xor
push
inc
das
test
rcrl
loop
sbb
hlt
push
xchg
sub
into
jp
sti
movl
or
sbb
dec
xor
aad
mov
int
call
push
sub
dec
push
jae
mov
aaa
mov
lcall
pop
rorb
lods
repz
xlat
mov
push
sbb
cwtl
cli
jmp
pop
arpl
cmp
std
iret
or
xor
xchg
sahf
sti
jecxz
cmpsl
aam
xchg
or
mov
data16
push
es
icebp
in
rorl
in
mov
loope
loope
out
loope
add
and
repz
xlat
push
mov
pop
loop
pop
xor
popf
popw
int3
mov
fnstsw
out
aas
gs
out
xor
dec
rorb
mov
loop
test
and
aas
mov
icebp
xor
addb
loop
jmp
inc
mov
insl
or
pop
xchg
pop
call
jg
icebp
mov
fdivs
in
roll
push
lcall
fstp
enter
add
cwtl
or
sub
pop
outsl
sbb
popf
push
push
aam
sbb
incl
in
xor
fbld
inc
xchg
imul
sbb
sub
fwait
xchg
mov
mov
dec
lock
or
pop
or
dec
inc
scas
xor
test
push
xchg
xchg
negl
push
inc
jmp
push
dec
nop
mov
mov
pop
jnp
or
add
xor
fnstcw
scas
leave
mov
jecxz
jl
xchg
pop
nop
adc
or
test
loopne
push
out
incl
inc
fistpll
lods
rcll
int
or
or
cli
cmpsl
scas
fcmove
dec
mov
iret
jmp
fwait
arpl
aad
cmc
dec
rclb
push
xor
cmpsb
fsubr
jl
arpl
xlat
mov
cltd
shll
xchg
jecxz
jmp
dec
pop
inc
sub
out
mov
lahf
jbe
mov
daa
sbb
mov
lds
push
call
add
pop
js
rol
push
inc
pop
push
add
add
jnp
and
push
or
cwtl
jle
ljmp
mov
dec
in
popa
jb
xor
lahf
cltd
cmpsb
lcall
jb
fcomps
xchg
mov
scas
dec
jmp
inc
mov
clc
cmp
mov
out
jp
pop
inc
es
pop
push
mov
lock
mov
int
mov
push
mov
pop
repz
clc
lahf
test
xlat
and
jo
push
clc
int
inc
mov
xadd
pop
add
xchg
add
pop
in
dec
nop
mov
cwtl
sub
fildl
test
pop
xchg
enter
ljmp
lcall
push
lods
push
mov
jo
push
mov
add
push
xchg
fucomp
add
pop
add
or
mulb
and
js
jnp
xchg
lcall
adc
int
mov
dec
and
and
dec
cmp
fcmovb
stos
test
xlat
inc
lea
dec
pop
jnp
aaa
repz
dec
jae
pushf
lds
cmpb
addr16
xor
lods
dec
subb
mov
ja
aad
inc
and
test
iret
mov
mov
jb
push
ficoml
out
mov
push
or
mov
mov
fld
or
pop
sbbb
ja
outsb
jne
mov
mov
jnp
stos
lret
out
imul
jl
mov
int
xchg
sub
dec
into
cmp
data16
inc
jle
popa
push
gs
and
push
xchg
mov
adc
out
xor
pusha
mov
rorl
mov
mov
mov
cmp
sub
jp
or
jbe
lret
sub
mov
and
nop
cmpsb
leave
fs
xchg
xchg
fwait
push
adc
hlt
inc
mov
jns
shlb
jge
jo
jo
push
fnsave
push
inc
jp
sbb
ret
dec
in
push
jae
inc
mov
jne
xor
imul
xchg
mov
mov
pusha
andb
mov
or
in
push
flds
test
mov
and
xchg
movsl
ds
call
lods
pusha
xchg
fadd
ret
sbb
lcall
mov
loopne
fisubrs
pop
out
bound
push
mov
mov
shl
ficompl
push
into
es
mov
inc
push
aaa
insl
mov
add
nop
jl
or
mov
dec
lods
pusha
daa
push
inc
out
mov
xchg
push
shrb
or
loope
test
cmp
sub
add
push
pop
ljmp
mov
lea
sub
je
jl
cmp
mov
sahf
lret
cmp
out
and
repz
xor
popf
push
or
fadd
lods
and
std
stos
int
jbe
in
fistpll
into
lret
pop
idivb
ret
pop
pop
arpl
xchg
mov
in
aad
mov
inc
addr16
xor
mov
std
in
scas
or
dec
adc
stos
nop
or
jb
mov
mov
mov
inc
mov
cmp
fs
jecxz
outsl
sbb
outsl
pop
scas
mov
pop
mov
test
mov
in
dec
mov
cmpb
in
imul
ds
in
adcb
out
jle
lds
xor
lock
xor
mov
hlt
subb
subl
xor
sbb
mov
add
into
jp
sbb
and
sub
mov
cmpb
jl
inc
stos
fs
mov
mov
mov
add
push
jne
and
subb
mov
cmp
iret
lock
dec
xor
arpl
bound
add
outsb
pop
push
cmp
adc
inc
lret
xor
rcl
testb
push
outsb
inc
add
es
add
mov
jne
xorb
push
xchg
push
xor
or
loopne
or
out
lret
fisttps
aad
mov
add
mov
pop
jecxz
sbb
sub
jno
xor
dec
adc
push
outsb
pop
pop
out
inc
inc
sub
lcall
scas
push
add
lea
iret
inc
cmp
xchg
popf
pusha
xchg
sub
sbb
in
int3
sub
inc
mov
sbb
iret
test
cltd
scas
mov
or
lret
or
out
fcompl
inc
ss
fsubr
ret
test
mov
in
xchg
add
adc
icebp
iret
mov
or
lahf
mov
adc
aaa
rcrb
and
adc
xchg
repnz
dec
mov
scas
std
dec
ss
and
sbb
xchg
cmc
mov
popf
pop
mov
sub
mov
inc
and
loope
adcb
out
shll
ret
je
sub
and
mov
and
sbb
sub
mov
inc
mov
push
push
ljmp
xor
in
movsb
mull
xchg
xor
sub
xchg
jge
or
lret
incb
lahf
and
push
addr16
xchg
push
out
xchg
cmp
cmp
pop
cmp
and
sub
cmp
pop
shl
test
sbb
inc
movsb
pop
pop
xchg
in
std
pop
rcl
cltd
dec
mov
or
mov
jno
mov
mov
jbe
or
jge
repz
dec
jle
sti
hlt
ja
mov
testl
das
loopne
into
mov
cwtl
mov
mov
shll
sub
adc
mov
mov
jo,pn
inc
imul
pop
fldenv
rcl
jl
ret
jb
xor
xchg
popf
outsb
and
push
insl
and
and
and
cmp
into
mov
scas
cmp
adc
sbb
or
sahf
add
inc
outsb
sbb
inc
pop
scas
push
and
stos
jnp
out
out
inc
or
mov
xor
fisubrs
push
xchg
xchg
aaa
push
out
test
enter
inc
jmp
bound
insl
stc
adc
popf
dec
fstps
iret
fnstsw
and
or
rolb
cli
cmp
jne
ljmp
icebp
and
mov
lret
std
int
scas
add
test
std
out
es
push
lret
inc
add
insl
push
add
and
xchg
iret
gs
adc
and
push
adc
into
sub
mov
loopne
mov
jbe
mov
dec
mov
out
sbb
ss
xchg
and
push
add
and
pop
jle
inc
aam
ret
das
adc
push
lods
add
scas
inc
cs
int3
mov
xor
out
mov
in
shrb
xor
add
xlat
or
mov
sti
inc
sub
dec
mov
lods
stos
lock
dec
out
je
cmp
arpl
mov
add
in
jns
jno
xor
jecxz
pop
push
sti
call
mov
ja
repz
mov
adc
roll
aas
jnp
push
repnz
pushf
xor
ljmp
xor
loope
pop
idivb
xchg
xchg
cmpsb
gs
push
mov
xchg
out
xchg
lods
addr16
imul
mov
add
push
sahf
or
outsl
lahf
std
aas
iret
mov
stos
arpl
push
imul
add
cli
dec
test
jns
lds
xlat
adc
stos
and
pushf
xchg
enter
std
xchg
mov
stc
mov
lock
stos
subb
js
mov
stc
lds
pop
cmp
cmp
and
cmp
lds
lret
pop
cmp
lret
sub
and
ficoml
pop
cwtl
xor
mov
lea
xor
push
sub
daa
pop
push
outsl
pop
cltd
imul
enter
stos
jge
ret
lods
jnp,pt
sarl
pop
bound
adc
repnz
loopne
ret
cmp
gs
out
inc
inc
mov
pop
sub
jge
sbb
cmpsb
xor
or
inc
movsl
test
xchg
dec
test
ljmp
aad
sahf
sub
dec
shrb
loopne
and
jle
mov
mul
sub
mov
cmp
sarl
or
inc
outsl
dec
into
jo
pop
std
ja
and
push
add
out
mov
push
and
loopne
jns
andb
sbb
cmp
xchg
mov
cld
sub
sub
xor
jecxz
mov
lods
shl
lock
imul
daa
jb
imulb
fisubrs
in
out
inc
mov
cmc
sbb
add
xchg
orl
int3
outsb
inc
movsb
ljmp
fdivp
das
adc
cmp
dec
push
jg
lret
inc
pop
popa
jecxz
dec
lret
lcall
mov
sti
dec
arpl
mov
adc
aam
jb
lea
out
xor
xor
pop
jbe
out
out
test
lret
faddl
jns
pushf
sbb
dec
test
loopne
into
test
aam
mov
xchg
xchg
loop
sbb
or
cmp
inc
push
ljmp
xor
add
xor
std
pop
sti
inc
aas
cmpsl
push
popa
rcrl
in
rolb
mov
ret
loop
or
fisubrs
lret
aas
lods
aad
decl
xchg
loopne
add
xor
or
mov
ljmp
shrb
mov
sbb
jl
sbb
cmc
cmc
cmp
sbb
mov
xor
cmp
fstpt
lcall
int3
sub
lods
outsl
fsts
pop
xchg
pop
and
xlat
mov
ror
aaa
ds
add
push
or
mov
test
inc
adc
mov
pop
push
les
and
fsubrl
mov
jp
xlat
insb
pushf
cmc
mov
stc
mov
sub
cld
subl
pop
insl
iret
repz
aas
das
jne
cmp
sbb
lahf
mov
xchg
int
fcmove
or
mov
insl
test
pop
xor
or
insb
sarl
das
sub
sbb
cmp
sub
adc
push
inc
xchg
pop
rorb
jno
cmp
ljmp
jmp
pop
mov
ljmp
sbb
aad
or
out
popf
scas
xor
mov
fucomi
mov
xchg
jno
decl
clc
neg
ret
fsubr
pop
call
sbb
jbe
mov
pop
mov
stc
jg
push
jp
pop
xchg
loopne
stos
imul
shrl
mov
jle
sub
jo
and
xchg
insl
xchg
lahf
push
sub
fldt
bound
fistl
jo
pop
mov
ret
add
xor
xchg
addl
fmul
push
xor
out
inc
ljmp
jbe
xor
shrl
jne
mov
pusha
bound
mov
cmpsb
cmpsb
int
sub
rclb
inc
fwait
cltd
jl
test
lock
inc
push
mov
out
mov
outsl
out
das
in
pop
ret
xchg
mov
push
cs
insb
jmp
ds
dec
xchg
call
data16
fcomps
hlt
lret
fstl
leave
or
outsb
cmp
sbb
imul
or
jae
cld
jne
push
cmp
or
adc
fdivs
hlt
loope
add
inc
mov
xor
push
mov
cmp
add
mov
outsl
and
mov
sbb
inc
and
cmp
ret
cmp
mov
aam
popa
stos
sub
insl
mov
mov
inc
pop
and
fildl
cmp
jns
mov
arpl
lods
push
or
cmp
lret
dec
dec
dec
cmp
push
daa
inc
nop
arpl
jmp
scas
fs
jnp
inc
stc
mov
scas
and
lea
shlb
out
stos
sar
inc
add
sub
add
sub
mov
mov
pop
aas
pop
fwait
xor
xor
outsl
icebp
xor
xor
inc
jbe
fstpt
add
out
sbb
jnp
xchg
stc
fimull
dec
xchg
insl
sbb
scas
add
popf
push
lcall
jge
push
mov
adc
dec
popa
mov
popf
pop
subb
bound
cmp
andb
push
xchg
sbbl
lds
js
jno
xor
mov
insl
pusha
inc
push
rolb
gs
sbb
js
out
aam
xchg
mov
popa
test
cmp
inc
xchg
jg
mov
cwtl
leave
fisttpll
daa
popa
das
ret
pop
pushf
jbe
dec
mulb
sub
mov
test
lea
xchg
imul
jns
jb
push
cs
aam
push
out
int3
mov
mov
cmp
mov
xchg
in
movsl
xor
pop
rcll
sbb
aaa
popa
jo
ja
mov
xchg
aam
lret
stos
inc
mov
xlat
dec
adcb
xchg
mul
cmp
mov
ret
sti
push
negl
js
fiaddl
and
pop
adc
mov
pop
int
scas
ficoml
int
sub
xorl
xor
push
push
cli
pusha
lea
mov
pushf
ss
push
loopne
sti
jp
and
mov
dec
pop
loopne
jl
scas
loopne
rolb
dec
inc
mov
leave
out
inc
cmpsl
jbe
pop
daa
pop
pusha
scas
mov
push
inc
insb
iret
cmp
aad
addr16
call
xchg
mov
mov
aaa
mov
add
or
lret
sbb
xchg
mov
cld
push
pop
dec
xor
sbb
test
push
addr16
push
mov
mov
sub
dec
cmp
lock
add
cli
sbb
test
scas
cmc
sti
movsl
mov
xor
ret
adc
ficoml
call
pop
lock
add
sub
hlt
pop
add
mov
fidivrs
jns
sub
lret
jae
mov
sbb
xor
cltd
sahf
loop
out
sarb
pop
lods
and
push
popf
sbb
lds
dec
ss
hlt
stos
repnz
xchg
lmsw
mov
fistl
adc
push
and
ret
mov
jp
mov
dec
aaa
lods
insl
data16
push
xchg
sub
enter
pop
or
pop
sbb
pop
jp
add
dec
jge
sub
push
or
add
sub
pop
insb
push
enter
popf
xchg
xchg
int
mov
lret
jecxz
ss
adc
leave
add
pushf
mov
lcall
sub
adc
pop
cmpsl
push
lret
mov
push
xor
lds
enter
adc
notl
icebp
jmp
pusha
mov
fucomi
mov
das
pop
jne
sbb
adc
mov
dec
in
cmp
cmp
jmp
jns
lcall
rcrl
add
jbe
jecxz
pop
rcl
dec
mov
test
mov
adc
out
cmp
push
push
mov
mov
or
mov
movsb
sub
mov
sarl
and
mov
incb
and
mov
sbb
jmp
adcb
lock
pop
cmc
ja
xchg
xor
sbb
and
insb
jp
inc
outsl
shl
inc
xor
push
sti
rcrb
cli
jbe
and
xor
mov
and
fdivrp
call
sbb
popf
mov
sbb
jecxz
cmp
push
add
sub
adc
testl
orb
ljmp
lcall
cld
int3
adc
sbb
cmp
stc
and
sub
mov
jns
or
xchg
repnz
ja
sub
mov
sbb
mov
xor
lret
sub
ds
pop
test
hlt
sub
lahf
repz
mov
inc
mov
and
jl
repnz
or
aam
popf
lds
push
int3
stos
jb
fisttpl
cs
out
test
xchg
dec
push
pop
sbb
mov
inc
and
clc
es
shrl
movsb
popf
movl
movsl
popa
dec
ja
inc
jae
xchg
adc
int
or
shlb
pop
das
jle
inc
dec
scas
test
cmc
shll
fdivl
push
inc
pusha
fadds
sbb
fsts
pusha
sub
cld
xchg
sarl
cmp
or
movl
push
into
les
sub
cmp
ja
pop
mov
rclb
in
mov
or
fstps
sub
adc
xchg
hlt
aad
push
test
xor
enter
fsubrl
pushf
push
mov
push
nop
pop
mov
pop
sub
mov
cmp
outsl
mov
sub
fs
dec
cmp
repnz
xchg
dec
lret
pop
mov
test
cmpl
xlat
decb
jbe
enter
and
dec
lods
mov
ja
into
lods
push
movsl
std
adc
mov
cli
shrb
jae
xchg
jno
dec
pusha
lret
insl
pop
adc
enter
aas
mov
lret
mov
xchg
pop
push
mov
cltd
ror
imul
push
leave
jns
enter
cmp
leave
push
sub
adc
adc
inc
push
inc
mov
mov
aaa
rorb
dec
test
push
nop
sarl
jno
out
pop
or
inc
add
ljmp
outsl
shrl
pop
jl
repnz
pop
movsl
cmp
insb
and
or
in
popa
jb
jns
jl
loope
in
in
popf
dec
shll
sbb
sub
push
aad
cmp
rorl
icebp
sbb
frstor
xor
out
pop
adc
ret
dec
jmp
cmp
loop
insb
jns
dec
xchg
aad
add
outsb
pop
adc
roll
xchg
cmp
jg
push
in
gs
push
fidivs
add
lods
mov
xchg
in
mov
adc
dec
stos
xor
push
dec
daa
out
adc
push
mov
fdivr
mov
sub
sahf
dec
ror
pop
sub
or
mov
lods
lahf
jo
pop
jne
stc
dec
dec
movb
push
cwtl
mov
adc
push
cmp
dec
lret
sub
jge
push
into
mov
je
shll
enter
outsl
pop
stos
mov
dec
and
push
cwtl
gs
mov
in
inc
stos
jne
xor
clc
push
pop
jne
icebp
sub
cltd
lds
repnz
fimull
lret
dec
ljmp
dec
inc
xor
push
push
leave
xchg
insl
je
int3
and
std
roll
sbb
fst
jge
shrl
aam
xchg
arpl
jecxz
mov
lea
imul
or
cmc
push
add
insb
xchg
sbb
xchg
xor
xchg
cmpsb
push
push
push
xlat
mov
inc
call
fildll
lret
jle
xchg
mov
cmp
sub
xchg
mov
nop
and
pop
and
nop
mov
shl
pop
movsl
dec
ret
cmpsl
pop
mov
cmp
and
mov
popa
dec
sub
in
enter
add
ret
arpl
fldenv
fnstcw
xchg
test
out
icebp
xchg
cli
jae
mov
int
dec
mov
nop
push
stos
cmpsl
and
jae
cmp
shll
cs
cli
and
test
rorb
add
and
aad
pop
or
in
les
add
out
fnstcw
or
adc
xchg
xchg
pop
jo
adc
jne
fs
rcr
mov
push
fnstsw
add
cld
iret
mov
xor
mov
cmp
xchg
mov
rorl
and
jle
mov
mov
rorb
popf
outsb
push
push
cld
imull
fmull
fwait
imul
and
ljmp
lret
insb
nop
pop
mov
adc
push
mov
push
addr16
add
je
sub
mov
out
inc
movsb
mov
adc
loop
sub
xchg
push
jbe
movsb
loopne
ret
sub
call
repz
bound
popf
push
loopne
or
ret
mov
arpl
and
sub
or
xlat
movsl
mov
mov
sbb
jle
pop
pop
ret
push
dec
add
es
orl
es
loope
int
orb
inc
cmp
adc
arpl
push
adc
roll
inc
push
mov
insb
sub
mov
sahf
sbb
or
fcomp
fnsave
pop
cltd
mov
mov
add
in
rclb
xchg
lods
inc
jno
xchg
sahf
ret
shrl
cmp
fwait
popf
sub
clc
jp
pop
mov
lcall
mov
mov
mov
fs
cld
repz
xchg
mov
incb
and
adc
arpl
imul
xchg
lock
insl
es
js
pushf
dec
xor
aad
fldl
xchg
hlt
mov
mov
mov
jmp
and
jbe
push
std
xchg
cwtl
cli
mov
xchg
xchg
sub
fistl
mov
or
test
lods
jmp
mov
xchg
sub
cs
outsb
fwait
xchg
lock
jae
mov
inc
clc
mov
enter
inc
sub
mov
xorb
sub
mov
or
cmpsl
mov
mov
jb
sub
ss
or
or
xchg
add
in
mov
xchg
inc
mov
mov
lahf
xchg
jge
mov
stos
arpl
xchg
into
add
cmp
loopne
test
mov
pop
and
sbb
je,pt
dec
icebp
bound
inc
icebp
rcll
xor
cwtl
push
das
sub
mov
dec
pop
jnp
dec
and
mov
xor
xor
lds
pop
iret
inc
bound
sub
jmp
das
jbe
idiv
mov
loop
or
mov
adc
mov
dec
add
push
shll
setl
fsubs
ret
repz
jp
xor
aad
popa
fistl
icebp
cmpps
loopne
into
cmp
test
iret
movsl
sub
push
cmpsb
or
cmp
fisubl
ret
int
ds
ljmp
in
orb
xchg
test
mov
jmp
mov
lods
ja
dec
and
sbb
or
jb
clc
cmp
push
mov
lret
dec
xchg
enter
xchg
xchg
or
sub
leave
aam
cmc
pop
mov
insb
out
dec
decb
ror
mov
jnp
xor
inc
push
cs
js
xchg
int3
add
mov
cmpsl
out
xor
pusha
ret
lea
mov
xlat
cmc
push
cmp
int3
out
jb
inc
fs
ret
mov
mov
in
fistpll
outsb
ljmp
mov
cwtl
push
mov
mov
or
cmp
lea
shlb
adc
xor
mov
and
and
cli
sub
hlt
inc
fistpl
fwait
cltd
arpl
cmpsb
shll
into
inc
jb
push
cwtl
dec
ret
lea
mov
sbb
cmc
and
push
gs
jg
loop
and
and
push
fdivl
fdivrs
xchg
jne
jp
mov
xchg
sub
xchg
inc
add
add
mov
jne
cmp
lret
jne
std
adc
mov
or
push
push
mov
and
adc
loop
arpl
or
shll
mov
loopne
sbb
inc
inc
cltd
jmp
adc
adc
into
sbb
push
and
lahf
outsl
add
int3
xor
inc
repnz
loope
int
sbb
xchg
pop
outsb
test
rclb
sub
ficoms
outsl
mov
outsb
aad
cmp
cmpsl
xchg
adc
enter
or
inc
fcmovu
adc
pop
inc
test
mov
inc
add
dec
jae
sbb
movsl
pop
arpl
xchg
xchg
push
loop
das
sbb
sti
dec
xchg
lods
push
movsl
popf
dec
inc
lods
or
jmp
inc
out
xchg
pop
mov
xchg
mov
mov
ds
pop
data16
mov
fldenv
inc
shrb
aam
icebp
fcomip
movsl
mov
cmp
xor
cmp
pop
bound
and
test
cmc
add
mov
mov
xchg
pop
xchg
movsl
and
add
sbb
movsl
or
mov
inc
stos
insb
push
mov
jns
fidivs
pop
int
xchg
jle
cmp
aas
cmp
or
push
xor
es
mov
icebp
fmull
imul
shlb
jmp
and
outsb
cs
divl
cwtl
lock
sub
jp
daa
clc
jge
push
jle
rol
pop
imul
sbb
rcr
out
shl
pop
lahf
and
inc
stc
popf
movsl
inc
xchg
stos
out
cld
inc
mov
test
addr16
xchg
aam
rcrl
sti
sub
and
cmp
push
mov
std
xor
fldt
clc
xor
dec
pop
inc
add
mov
inc
push
inc
fwait
les
sbb
jmp
push
and
icebp
test
int
xchg
or
movsl
xchg
ret
mov
pop
fisttpl
push
adc
push
sbb
mov
or
fs
mov
cmp
ljmp
xor
mov
cmp
cmp
and
outsb
mov
xor
clc
mov
test
mov
rolb
mov
xor
inc
pop
lock
or
mov
cli
push
mov
mov
dec
add
pop
lock
loop
inc
fcmovu
lds
stos
cmp
shl
repnz
cwtl
popa
xor
movsb
jge
ret
jge
jne
pop
xchg
xchg
jb
std
outsb
int
out
jne
cmp
shrl
lods
xor
shlb
imul
and
movsb
sub
roll
out
xchg
aam
shr
jno
int
mov
sbb
inc
cmp
jno
fucom
sti
add
mov
leave
push
std
enter
es
mov
scas
adc
inc
add
jno
mov
xchg
cmp
inc
outsl
fists
mov
and
mov
rolb
jbe
stos
std
cltd
fs
mov
mov
mov
adc
and
and
add
ret
movsb
mov
out
subl
popa
not
insl
inc
das
loop
mov
data16
pop
mov
sbb
mov
mov
push
fld
or
xchg
insb
lds
rorl
outsb
mov
imul
das
cmp
stos
cmp
and
es
popa
xor
gs
cmc
hlt
mov
ds
lods
cmp
cs
xchg
or
or
add
inc
rorb
sar
jb
out
push
outsb
push
lds
pop
and
test
sub
xchg
mov
clc
xchg
xchg
in
mov
sub
loopne
loop
jecxz
call
iret
jle
xchg
push
nop
popa
pop
push
add
leave
loopne
mov
test
pop
sbbl
sti
mov
mov
ja
inc
xor
push
mov
sub
call
cmp
xor
ds
fdivrs
and
push
xlat
xlat
sbb
lret
les
mov
jecxz
push
ret
jb
testl
dec
sbb
and
cwtl
out
call
or
ja
loope
enter
pop
shr
dec
mov
cmp
pop
mov
push
jne
sti
jmp
cmp
jo
inc
mov
std
inc
outsl
es
daa
dec
sbb
int3
roll
ja
sbb
inc
insb
mov
inc
ljmp
aas
mov
jge
stc
add
daa
add
lea
lock
outsl
xchg
cmp
enter
mov
push
loop
xor
dec
std
sbb
mov
mov
push
and
mov
fistpll
push
jecxz
enter
ljmp
push
xor
out
cwtl
or
or
adc
lock
jno
sbb
loope
mov
fwait
cmp
push
out
adc
lea
cwtl
mov
pop
xor
push
sbbl
lret
mov
cmp
cmpsb
mov
outsb
push
adc
jns
jbe
outsb
push
enter
int3
shrl
lea
test
and
ds
int3
fbld
out
shrl
sbb
xlat
push
dec
dec
push
daa
xchg
jg
push
mov
enter
lds
pop
sub
push
mov
jae
xchg
fstpt
loop
ss
sti
inc
and
and
lea
cmc
cwtl
into
arpl
jp
pop
sub
dec
scas
pop
sbb
fldcw
xor
and
and
push
fisubrs
jnp
mov
xchg
xchg
add
movsl
jne
push
mov
cmpsl
mov
push
dec
in
std
and
ljmp
jae
filds
or
add
jp
mov
jb
fwait
push
or
pop
je
idivb
jge
mov
fiadds
lret
iret
sub
stc
dec
je
cmp
pop
loope
lock
fs
fxch
mov
dec
and
outsb
loope
rolb
hlt
push
dec
call
cmp
and
sarb
jge
movsl
jbe
idivb
in
repnz
or
fildll
fcmovbe
inc
lds
lret
pop
mov
mov
or
lret
cwtl
lcall
sub
xor
mov
adc
pop
xchg
loopne
outsb
cmpsb
fcoml
stos
mov
xor
jp
push
jno
mov
es
push
mov
sahf
mov
mov
mov
pop
dec
js
cmp
mov
lods
mov
xor
cli
insb
movsb
hlt
dec
push
ror
mov
push
outsl
in
das
inc
out
mov
stos
scas
pusha
pop
adc
xchg
les
test
sbb
subl
and
fnsave
add
xor
push
pop
icebp
add
test
popf
fiadds
rsqrtps
pop
mov
jge
in
rol
repnz
sbb
lea
loope
jecxz
mov
jbe
les
dec
pop
jmp
jle
cltd
cs
or
lods
lret
dec
push
adc
mov
ja
ret
outsb
or
mov
leave
mov
das
cmp
sbb
outsb
aad
inc
outsl
cmp
and
je
sbb
jbe
mov
popa
fwait
mov
sbb
mov
jo
or
mov
mov
xchg
jns
scas
rol
shll
loop
sbb
sbb
sub
mov
sbb
pop
test
imul
cmp
pop
dec
enter
add
mov
pop
call
pusha
test
mov
ja
cwtl
movsl
or
xor
mov
adc
pushf
adc
mov
jmp
out
fwait
jns
add
iret
mov
xor
aam
mov
das
incl
sub
jecxz
push
int
sbb
lds
adc
ss
sub
add
cltd
in
out
pop
push
mov
cli
mov
lock
scas
punpcklbw
sbb
cmp
cwtl
imul
xchg
ds
sub
inc
in
mov
dec
jb
lods
icebp
call
mov
inc
scas
hlt
subl
cmp
jns,pt
jb
add
fsubrs
inc
je
fdivrl
xchg
gs
sub
xor
dec
xor
cmp
push
sbb
mov
negb
push
fcoml
xor
loop
sarl
inc
insb
or
cmp
jb
ret
lcall
je
cmp
shl
xchg
cmp
testl
ss
sbb
mov
icebp
adc
iret
stc
add
sahf
fsubrs
test
loopne
sbb
cmp
pop
pop
dec
jnp
loopne
push
cmp
cltd
sbb
mov
mov
pop
jb
jnp
xchg
lods
sbb
jae
jb
cmc
adc
fldcw
movq
mov
into
sbb
adc
cs
sbb
and
stos
ficoms
sbb
outsl
sbb
movsb
dec
sub
mov
jecxz
jne
cli
pop
into
loopne
popf
and
fsubs
xor
incl
fidivs
aaa
out
jmp
nop
xchg
bound
xchg
push
sub
push
mov
add
or
mov
sub
leave
pop
adc
xor
mov
sub
in
pop
add
jae
or
in
mov
mov
ficomps
rorl
fcomps
icebp
lods
push
loope
pop
sahf
addb
pop
and
cmp
fildl
aad
faddp
sahf
xchg
in
or
push
pop
cmp
dec
push
and
pop
xchg
jl
push
and
icebp
pop
cmp
int3
aas
imul
sbb
push
xor
call
xchg
xor
dec
dec
jne
int3
pop
aaa
addr16
add
mov
push
orb
mov
jnp
fs
inc
imul
xchg
push
bound
push
mov
xor
xchg
icebp
xchg
in
insl
xchg
int3
push
add
lock
js
nop
mov
scas
in
sahf
test
enter
test
jmp
imul
bound
dec
bnd
push
dec
inc
cmp
outsb
cmpsl
mov
loop
adc
mov
test
jl
and
shrl
in
stc
push
pop
es
gs
mov
in
mov
mov
mov
mov
mov
pop
jb
sub
adc
ret
adc
fildl
push
in
xlat
hlt
add
imul
jno
pop
xchg
push
popa
lret
mov
ds
or
in
daa
sbb
addr16
cmc
sbb
mov
dec
push
stos
scas
test
jl
sbb
fstpl
pop
rcll
jnp
xchg
test
mov
lret
jg
mov
and
mov
pop
mov
dec
push
in
push
push
and
movsl
imul
cmp
cmp
adc
jo
and
movsl
pop
add
mov
cmp
lds
daa
lods
push
dec
mov
push
mov
jns
outsb
das
xchg
hlt
dec
cmp
inc
shll
mov
cmpl
push
cmp
push
ja
jbe
lods
imul
add
ljmp
xlat
nop
jle
stos
mov
ret
fisubl
fwait
ret
pop
fadds
negb
daa
inc
inc
jae
jbe
out
mov
fildl
loope
cmpsb
and
pop
pop
test
mov
nop
jg
push
mov
push
pop
shll
out
lock
adc
adc
cmp
cmpsl
mov
mov
ret
inc
xor
jmp
adc
loope
movsl
jns
inc
lahf
mov
jg
cmc
xor
gs
dec
push
mov
leave
inc
xor
ja
mov
lcall
dec
cmp
idivb
add
sti
pop
mov
clc
aad
sbb
xor
imulb
rcrl
imul
fistps
inc
cmp
push
sbb
push
jbe
jae
jb
ss
fdiv
mov
cmp
xchg
jo
lahf
or
aaa
movsb
test
push
jge
insl
jae
out
loope
xchg
addr16
movsl
cwtl
jmp
and
dec
in
sbb
ffreep
loopne
pop
inc
push
xlat
push
jmp
dec
daa
push
pop
push
loop
lock
fstpl
orl
xor
ficoms
loopne
sbb
jns
jmp
js
out
ss
addr16
aam
shl
jge
outsb
inc
repz
push
sub
out
imul
sbb
xlat
es
xor
adc
sub
popa
fldcw
adcb
addr16
into
stc
push
cmpl
lods
xor
gs
loopne
daa
ja
mov
mov
imul
add
cwtl
adc
sbb
leave
push
movsb
jle
daa
mov
out
mov
push
xlat
dec
jecxz
push
ret
and
sbb
mov
mov
bound
inc
test
leave
and
sbb
mov
cld
mov
rcl
sub
icebp
mov
cwtl
jmp
adc
lods
mov
and
int
mov
cmp
ret
lret
cmpsb
outsl
movb
mov
insl
and
jns
jne
jmp
jp
cmp
inc
adc
mov
add
xchg
pop
xor
mov
bound
fdivrl
ss
jg
lock
lahf
xchg
cmp
stc
fisubrl
jne
das
aam
addr16
lds
jns
bound
mov
testl
sub
pop
pusha
fs
sub
or
leave
cmc
sub
ja
dec
xchg
and
add
shll
jp
decl
jge
dec
mov
ret
incl
nopl
and
jp
xor
or
iret
or
cmc
fldl
jnp
call
add
push
jg
bound
out
pop
rolb
mov
lret
dec
jp
test
mov
fbld
inc
test
out
mov
mov
cwtl
cmp
aam
lcall
sbbb
mov
cltd
add
push
aaa
or
inc
mov
scas
pop
pop
mov
xchg
in
jmp
push
movsb
rorb
xor
inc
sti
outsb
je
bound
test
mov
stos
flds
shlb
pop
test
das
cwtl
push
stc
push
popf
jge
lcall
mov
mov
dec
xor
std
test
ja
jo
rclb
inc
mov
or
sub
sub
movsb
add
mov
jecxz
mov
xchg
sahf
cmp
mov
pop
xor
dec
movntps
pop
stos
pop
fmuls
inc
out
sub
jbe
mov
push
aam
les
jno
jmp
jae
jmp
ljmp
hlt
sub
sbbl
mov
add
or
adc
cmp
repz
mov
and
insl
mov
imul
inc
mov
add
cmpsb
out
cmpsb
cmpsb
xchg
pop
fiaddl
mov
outsb
loope
sub
mov
shlb
and
ja
pop
mov
in
cmpsb
or
dec
fmulp
adc
les
daa
cs
lret
les
in
mov
and
jecxz
call
out
mov
in
loop
iret
nop
jnp
mov
scas
ja
std
dec
jnp
ds
notl
pop
or
dec
add
call
pop
dec
inc
imul
cmpsl
in
mov
xchg
push
ljmp
xchg
cmpsl
or
mov
jecxz
adc
sub
enter
bound
pop
mov
inc
lea
jmp
rolb
pop
test
add
xor
fidivrl
fildl
rclb
mov
fisttps
xchg
sbb
mov
je
mov
or
mov
jmp
push
call
rcrb
test
push
dec
pop
mov
lea
test
aad
ret
pop
jns
mov
das
ss
stos
int3
mov
push
mov
mov
jg
dec
enter
jbe
data16
jg
aam
jmp
ljmp
or
jo
xchg
xchg
in
cmp
mov
lea
adc
sbb
jne
stos
push
leave
daa
adc
mov
ret
cli
cmp
fildll
sbb
daa
xlat
sar
cs
test
mov
cmc
adc
out
addr16
sub
sub
aaa
cli
adcb
cmp
pop
hlt
pop
daa
or
sub
sbb
jb
insb
imul
lcall
adc
add
stc
outsl
loopne
in
cmpsb
jbe
dec
adc
roll
sbb
lods
adc
sub
lahf
push
test
add
or
add
pop
mov
aas
jp
pop
jb
add
sti
or
ja
jae
cmp
stc
imul
push
fistl
push
sbb
test
aam
mov
aaa
push
sub
sub
pop
icebp
daa
cmp
mov
xchg
fists
testl
outsl
notb
faddl
xor
fimuls
push
lods
mov
push
clc
in
inc
jp
jge
fwait
out
push
test
or
xchg
sbb
mov
arpl
cmp
lods
xchg
lea
and
adc
lods
rcl
rorb
jbe
add
inc
ss
and
sub
std
movsl
sub
in
push
push
popf
pusha
int
adc
int3
adc
imul
ficomps
or
je
mov
stos
jnp
jo
jb
test
std
ss
test
in
mov
jmp
shlb
fcomps
rcrb
cmpsb
jne
test
gs
push
cwtl
pop
push
call
adc
leave
pop
add
xchg
lea
in
lret
jle
and
jb
cmp
inc
and
lock
add
mov
stc
ljmp
pop
out
cmp
or
mov
lcall
fidivrs
popf
das
adc
mov
lods
daa
adc
pop
fidivrs
or
je
out
rcrl
aad
test
js
out
outsb
ret
roll
frstor
outsb
sbb
adc
stos
push
bsf
jb
mov
dec
cmpsb
push
lea
push
ds
sbb
adc
push
mov
jg
cwtl
test
repnz
lods
daa
mov
fisubrl
push
pop
mov
icebp
je
mov
xchg
les
xchg
push
mov
loopne
xor
add
add
andb
and
jecxz
fbstp
mov
das
push
inc
clc
push
mov
pop
ds
fisubrl
dec
iret
pusha
cmp
arpl
and
or
cmp
daa
pushf
in
ja
adc
test
pop
add
icebp
inc
dec
movsl
add
shl
fnstcw
xor
add
rep
nop
fs
js
inc
or
jg
out
xchg
inc
push
nop
and
jmp
cmpsb
hlt
popf
adc
jge
aam
pop
lea
jno
sub
mov
ja
leave
sbb
push
pop
fcmovb
adc
push
sub
into
fdivr
mov
cmp
inc
movsb
cmp
es
in
xor
push
pop
jb
jns
sbb
inc
cmp
testl
pop
inc
ja
push
push
mov
icebp
jmp
mov
mov
pop
repz
std
outsl
inc
cmpsl
popf
cmpsl
int3
mov
aaa
jle
dec
mov
dec
test
lock
addr16
xchg
lods
roll
insb
int
dec
orb
pop
jecxz
cmp
push
fdivrs
pop
orl
sbb
adc
sub
sub
movl
xchg
adcl
inc
in
addl
test
stos
sbb
stc
cmp
movaps
out
and
xchg
mov
mov
push
aas
mov
mov
hlt
int3
cmp
push
iret
xor
jo
popa
mov
add
pop
int3
pop
lods
mov
mov
scas
sub
and
call
shll
pop
jg
mov
sub
sbb
adc
push
xor
icebp
js
loopne
lods
mov
adc
dec
sub
pop
cwtl
dec
or
test
cmp
mov
lret
push
adc
or
test
jge
xor
out
out
xchg
divl
cmp
xor
jns
orb
push
mov
mov
mov
mov
jo
cmpl
cmpsl
push
dec
cld
adc
and
jb
or
or
inc
std
push
sub
xor
add
xor
ds
adc
out
mov
xchg
adc
fisttpl
ljmp
mov
daa
popf
icebp
add
daa
xor
sbb
cmpsl
dec
push
push
repz
popf
test
lret
int
adc
nop
out
mull
shll
int3
jno
mov
add
jae
pop
fbld
imul
adc
mov
or
imul
adc
add
add
mov
pop
xchg
cltd
xlat
test
aaa
dec
and
sbb
sub
out
out
cmp
test
pop
mov
es
fdivrl
cmc
pushf
fdiv
pop
mov
mov
adc
mov
mov
pop
imull
or
sbb
lret
push
pop
pushf
fsts
and
imul
cld
mov
repnz
mov
movb
add
outsb
jg
cmp
mov
jb
and
mov
stos
fs
mov
dec
mov
aam
sti
aad
imul
ret
fnstcw
daa
mov
jmp
pop
arpl
mov
loop
cmp
movsb
dec
mov
addb
and
cmc
es
dec
dec
and
fsubs
movsl
mov
stc
mov
in
cmp
dec
xchg
cmc
mov
pop
roll
shrb
and
inc
mov
mov
out
or
mov
hlt
jge
aad
jne
mov
xchg
aam
inc
loopne
push
rorb
add
fisttps
rcpps
mov
mov
rcrl
dec
push
scas
inc
lret
pop
cmp
adc
sub
popf
pop
aaa
comiss
xor
enter
and
inc
dec
cmp
ja
inc
inc
mov
ret
push
push
mov
mov
mov
mov
mov
mov
into
and
xchg
das
push
pushf
dec
loop
mov
mov
xchg
push
hlt
dec
fimuls
sub
sahf
xchg
mov
push
push
lods
add
scas
xchg
jb
icebp
jb
cs
mov
cmp
inc
xchg
data16
fwait
jno
pop
ret
stos
fwait
idivl
in
mov
subl
pop
and
hlt
xchg
outsl
or
mov
xor
dec
inc
inc
mov
xchg
cmp
shll
xchg
and
pusha
leave
dec
mov
imul
enter
sbb
sti
and
stc
dec
stos
jg
sub
cmp
xor
sbb
addr16
movsb
jns
fildl
popa
inc
popa
ja
inc
xchg
push
bnd
lret
lock
imulb
je
fnstcw
sub
insl
in
jo
xor
aam
clc
out
jecxz
sub
mov
ret
test
fwait
shrl
jns
sbbb
sahf
into
or
into
daa
frstor
or
addr16
test
jg
je
jno
or
jl
adc
adc
call
cmp
pop
push
fcmovnu
jnp
mov
subb
lock
arpl
sbb
pop
mov
push
or
jne
arpl
xor
fsubrl
cld
jp
add
mov
pop
clc
sbb
pop
mov
xor
outsb
push
test
in
inc
sbb
xchg
pop
jae
loopne
fstpl
fwait
push
pop
arpl
push
mov
and
push
mov
jecxz
inc
mov
dec
pop
test
repz
lahf
mov
mov
les
pop
sbb
adc
scas
data16
mulb
xchg
jle
stc
loopne
inc
shlb
sbbb
cld
scas
pop
dec
inc
push
push
cmc
and
outsl
bsf
aam
mov
stos
lahf
divb
aad
out
stos
cs
fimuls
pop
mov
cs
movsb
push
mov
into
and
xchg
jmp
pop
sub
xchg
xchg
mov
xchg
adc
cmpb
sbb
cltd
sub
mov
adc
mov
xor
lock
add
cmp
dec
cli
sti
xchg
mov
popa
hlt
sbbb
mov
pop
mov
sub
lcall
mov
out
add
out
adc
ficomps
and
mov
fwait
mov
xor
sub
lret
fiadds
or
int
in
dec
adc
push
cmp
imul
sbb
je
notl
mov
push
ss
mov
mull
ficompl
jns
testb
std
sub
or
mov
sbb
fcoms
xor
mov
pop
cmp
ret
mov
jg
test
cmp
addr16
xor
popa
daa
sbb
adc
sbb
out
std
sub
pop
lods
push
int
xchg
stos
fwait
dec
mov
leave
filds
dec
sbb
loop
mov
add
cmp
jecxz
ja
es
in
nop
cmp
daa
jns
mov
push
mov
dec
fdivp
pop
fs
stos
add
push
out
dec
ljmp
rcrl
mov
aad
cmc
add
xchg
sti
mov
sbb
das
push
or
mov
outsb
cltd
xor
ret
xor
dec
or
adc
shrb
push
sbb
sbbl
and
sub
shrl
pop
mov
sarl
cwtl
test
push
popa
mov
or
sbb
hlt
popf
inc
or
xchg
idiv
xor
cld
pop
xchg
pop
xorl
mov
xchg
push
lods
in
arpl
insl
out
fcos
decb
xor
mov
lods
shlb
inc
inc
inc
or
loope
cs
jle
ror
sbbb
jne
in
je
lea
dec
mov
popa
je,pn
push
sub
mov
add
in
fisubrs
divb
pop
int3
nop
inc
into
sbb
cmp
pop
jae
aad
add
fisubl
cltd
jo
push
inc
test
dec
mov
pusha
outsb
push
cmp
or
push
cmpsb
push
adc
dec
pop
fistps
push
jmp
xor
pop
or
pop
add
and
jge
add
out
in
jnp
jae
pop
notl
mov
dec
mov
and
into
mov
push
inc
dec
and
lods
push
popf
sbb
es
jmp
xchg
leave
in
cmp
adc
push
lcall
sahf
dec
movsb
inc
mov
jbe
cmc
push
xchg
lahf
ret
ljmp
ss
in
xor
or
dec
and
lcall
pop
mov
rcr
push
lahf
sbb
mov
addr16
aam
ljmp
ficoms
fidivs
fists
cmpsb
pop
loope
mov
jge
mov
push
aaa
js
test
jns
notl
dec
iret
cmp
or
repnz
sbb
repnz
inc
push
mov
push
push
movsl
lods
xor
pop
xor
cmp
xchg
aam
inc
lods
sub
addr16
adc
sub
jge
bound
in
sbb
adc
test
or
add
or
ficompl
xchg
sub
lds
add
sub
mov
mov
scas
cmpsl
push
in
pop
lret
fmull
adc
push
inc
jle
add
xchg
bound
dec
addr16
out
sbb
std
scas
xor
cmp
mov
inc
repz
sub
ret
insl
sub
or
idivb
mov
cwtl
mov
rolb
add
rolb
std
cmp
and
mov
mov
push
pop
testb
loop
push
fsubs
jl
inc
cmc
cwtl
lret
out
sub
adc
add
cmp
out
stos
aad
inc
or
je
or
inc
out
sahf
dec
xor
sbb
and
pop
xchg
mov
popf
mov
push
mov
mov
lock
mov
loope
jae
jne
xor
scas
cmp
lods
sbb
xchg
stos
pop
repz
sbb
ss
adc
adc
inc
imul
sahf
mov
or
test
mov
and
lods
xchg
aad
rcr
or
enter
aas
daa
xchg
hlt
mov
sub
jmp
add
mov
xlat
mov
into
dec
ror
dec
jge
int3
popf
or
das
mov
bound
add
add
add
jns
stos
inc
pop
aas
mov
in
dec
mov
mov
add
dec
cld
pop
ljmp
xchg
sbb
mov
stc
inc
jb
pop
xchg
cmp
test
icebp
in
aas
mov
add
out
das
push
pop
push
xor
repnz
add
sbb
pop
sahf
int
iret
cmp
sti
dec
lods
add
dec
jmp
mov
sub
mov
adc
xchg
ficoml
popf
cmpsl
imul
mov
pushf
cmc
push
dec
cmp
mov
outsb
inc
jne
lods
test
inc
loope
movsl
xchg
jne
ror
xchg
cmp
gs
xchg
pop
lea
and
xchg
cli
fidivl
iret
divb
aas
or
repz
dec
test
test
nop
push
idivl
rcrb
cmp
mov
fmull
test
call
iret
add
daa
mov
int
push
div
push
push
out
or
xchg
les
aam
and
mov
jne
in
dec
and
push
shlb
push
imul
jns
sub
mov
pusha
mov
outsb
xchg
inc
enter
mov
js
iret
mov
adc
or
loop
pop
into
js
gs
out
nop
mov
jmp
loope
movsl
mov
mov
ja
shlb
or
jns
jbe
int
mov
xor
xorl
cwtl
shll
scas
ror
dec
mov
repz
and
push
mov
mov
cmp
int3
lock
dec
adc
mov
repnz
dec
add
cwtl
push
cltd
push
mov
sub
shlb
js
inc
daa
iret
inc
cmp
mov
adc
sahf
cmpsl
jl
mov
jno
or
sub
cmp
out
inc
jbe
popf
sbb
dec
mov
and
imul
sbb
mov
pop
lds
or
jnp
icebp
daa
fistl
movsb
dec
pop
pop
and
add
push
xor
add
adc
cmp
jmp
xchg
xchg
xlat
clc
cltd
cmp
inc
push
and
orl
mov
dec
fdivrl
adc
iret
inc
fwait
arpl
jo
and
testb
jle
mov
sub
sbb
rcrb
subb
jmp
clc
mov
or
lock
inc
jg
in
sbb
jle
pusha
stc
in
outsb
cmp
in
jae
cmpsl
imul
loop
scas
cmp
add
cmpsb
rclb
push
pinsrw
les
push
cs
std
jne
mov
adc
outsb
jno
test
xchg
fdivrs
mov
adc
jo
outsl
push
ds
rolb
adc
xor
mov
sub
cmp
jno
push
adc
jp
cmp
repnz
adc
mov
xchg
idiv
xchg
add
and
push
jne
test
xchg
shlb
movsb
push
dec
jo
pop
lret
mov
daa
leave
xchg
lock
enter
lcall
loopne
nop
pop
xlat
aad
pop
dec
fs
cmp
inc
push
or
xchg
repz
mov
adc
mov
call
out
movsl
mov
push
sub
outsb
mov
je
lea
das
adc
out
bound
push
pop
xchg
in
dec
sbb
dec
or
out
out
test
ret
pop
sbb
xchg
lret
scas
clc
pop
lea
dec
adc
push
sbbl
jno
xchg
push
jg
and
loop
incb
idivb
fs
ret
mov
iret
push
jb
sbb
dec
sub
or
test
mov
fistpl
mov
out
ret
divb
and
js
sbb
sub
mov
xchg
xor
clc
loop
data16
pop
add
and
jecxz
jne
ja
xor
push
sub
mov
cmp
icebp
mov
mov
movsl
and
cmp
in
mov
mov
xor
or
mov
xchg
test
sgdtl
add
mov
and
out
push
sbb
push
mov
stc
stos
outsb
xor
or
xchg
mov
pusha
xchg
stos
sbb
xchg
pop
insl
test
or
or
add
pusha
inc
pop
mov
cmpsl
inc
ret
jmp
xor
rorl
das
mov
mov
xchg
jne
inc
dec
add
aad
addr16
inc
in
pop
jmp
divl
ja
stc
mov
mov
cmpsl
movsl
cmp
or
dec
shrl
xchg
jecxz
xchg
lcall
or
jbe
push
pop
stos
mov
jae
inc
cmp
gs
sub
sbb
in
leave
jae
daa
sbb
cs
pop
fwait
mov
call
test
lret
xchg
mov
cmp
and
push
and
mov
cmc
dec
ss
pop
jo
mov
xchg
pop
out
ja
ds
jae
inc
dec
jne
pop
adcl
stos
mov
icebp
std
hlt
test
push
jg
push
xlat
sahf
mov
adc
faddl
adc
scas
test
arpl
mov
icebp
lock
dec
sub
dec
clc
outsl
out
jno
mov
repnz
dec
cld
insb
or
adc
testw
sbb
rcrl
or
xchg
ret
mov
dec
movsl
rorb
in
cmp
jmp
mov
mov
out
jle
inc
mov
lods
cmpsl
mov
mov
mov
xchg
xchg
sbb
pop
xor
xchg
and
lds
mov
das
int3
pop
xorl
loopne
insb
add
loop
popa
sbb
mov
xor
cmp
andb
lahf
adcb
dec
cmp
jge
sahf
sti
jno
lret
xor
mov
mov
push
xor
jb
mov
rol
inc
add
ficoms
adc
inc
lea
cmp
cmp
and
idivl
incb
clc
orb
xchg
jecxz
notl
ret
fmull
jne
mov
and
push
mov
xor
negb
lea
mov
sub
es
jnp
xchg
xor
out
cwtl
je
jmp
cmp
jnp
fldt
aas
cvtpi2ps
fwait
ss
js
dec
push
cwtd
in
dec
ret
dec
adc
pusha
ds
das
pop
jl
or
sahf
sub
and
adc
dec
enter
hlt
add
fildll
add
cwtl
push
sbb
lock
jp
cmpsb
mov
movsb
cmp
leave
icebp
mov
stc
xor
adc
cmp
imul
push
cltd
mov
xchg
jbe
mov
lds
cs
outsb
jne
jg
lock
add
and
lods
sbb
dec
pushf
cld
pusha
lods
mov
call
mov
mov
push
aad
pop
ret
loope
dec
dec
adc
pop
or
call
lret
xor
mov
xchg
aaa
mov
push
xchg
fcmovb
lea
jl
cltd
adcl
pop
loopne
jecxz
adc
rol
push
push
lock
fimull
mov
pop
dec
jle
fmull
jle
ret
and
sahf
inc
je
andb
test
cwtl
mov
fldenv
in
rcrl
test
push
lock
negb
or
or
out
or
daa
xchg
dec
icebp
aad
jnp
bound
add
loopne
std
cmp
xchg
mov
adc
mov
lods
xchg
dec
fucom
push
inc
xchg
dec
loop,pn
fldt
jp
adc
mov
xor
mov
cmp
xor
inc
xchg
xor
or
outsl
push
add
je
mov
xchg
dec
aaa
sbb
mov
repnz
jmp
xchg
cltd
int3
pushf
push
orl
aad
ljmp
out
xchg
inc
jecxz
lahf
subb
rolb
cli
out
pop
test
outsb
sbb
adc
rcl
sub
cmp
dec
dec
dec
in
leave
pop
xlat
cmp
insb
scas
lea
jb
pop
dec
xchg
pop
rcll
out
or
adc
mov
pop
inc
stos
fucomip
cmp
outsl
shr
nop
push
mov
daa
aad
outsb
subb
push
js
inc
mov
push
xchg
les
in
icebp
xor
pusha
ja
shll
insb
mov
sbb
pop
add
sub
xor
mov
mov
pusha
clc
inc
mov
pop
xor
xor
jmp
mov
lock
xchg
jl
inc
ds
out
jae
rolb
and
inc
jo
inc
sti
fcoml
outsl
stos
inc
pusha
xchg
xchg
lcall
or
dec
xchg
jno
cmpsl
and
inc
push
jmp
jmp
js
mov
or
aas
add
loope
lret
movntq
cmpsl
ds
call
cmp
sub
or
inc
in
ficomps
nop
mov
push
xor
mov
pop
bound
rorb
inc
clc
hlt
and
mov
sbb
push
and
fsubl
loopne
push
xor
dec
xchg
outsl
and
pushf
push
push
mov
mov
dec
fildl
into
mov
push
popf
sbb
stos
dec
test
mov
fcoml
pop
rorl
push
and
push
adc
add
inc
and
xchg
mov
cmp
mov
push
mov
jle
pop
rcl
sahf
scas
lods
cltd
pop
in
loope
and
lcall
arpl
dec
sub
or
popl
enter
ja
sbb
and
outsl
xor
mov
xchg
icebp
sbb
add
xor
sbb
sbb
lcall
and
mov
sbb
outsb
sub
mov
nop
push
dec
leave
loop
pop
lret
ret
xchg
icebp
adc
jcxz
or
and
push
ret
out
in
inc
jnp
cld
gs
adc
mov
loop
fistps
inc
inc
ss
pop
adc
scas
or
data16
mov
sub
inc
clc
add
flds
sub
add
mov
jbe
nop
push
adc
pop
mov
pop
sbb
mov
mov
adc
daa
fisttpll
lahf
jmp
jbe
mov
mov
sbb
outsb
pushf
mul
adc
jmp
outsl
xchg
test
mov
repnz
mov
pop
das
or
or
mov
fidivrs
lret
cwtl
ret
hlt
rolb
scas
mov
cmp
lret
inc
pop
cmp
jns
add
test
call
push
xchg
cld
push
out
enter
pop
pop
in
out
pop
ret
cmp
jae
push
sub
fistpl
push
cwtl
or
mov
mov
je
movsb
loopne
mov
dec
mov
sub
ljmp
mov
clc
mov
xor
ret
sbb
jne
add
push
popw
jb
stc
add
push
xchg
loope
push
cmpb
stos
fistl
or
mov
mov
ds
mov
sbb
push
jecxz
inc
cmc
aam
mov
aam
xchg
jp
inc
add
popa
dec
jo
xchg
pop
xor
pop
xchg
mov
cmp
adc
mov
cmpsl
or
xchg
call
insl
mov
gs
xchg
push
or
fwait
gs
xor
jle
push
test
loope
mov
pop
xor
mov
mov
sub
add
fimuls
imul
dec
add
jb
in
xchg
adcb
lcall
pop
lret
rcl
sub
pop
sub
test
jne
cld
push
loopne
int
pop
in
fistpl
cmp
in
or
inc
sub
sahf
idivb
cs
jp
push
xor
adc
setno
lret
test
shll
int
stos
movsb
ja
clc
test
lods
xchg
call
jbe
sbb
push
out
adcl
sarb
mov
xlat
inc
and
sahf
cld
and
inc
lods
pop
xor
lea
mov
push
cmp
dec
xor
aaa
xor
ret
xor
fneni(8087
lahf
cmp
mov
cmp
xchg
test
jo
xchg
leave
add
mov
lds
jg
lcall
inc
out
or
stc
ljmp
je
mov
push
mov
push
out
push
cs
push
je
movsb
movsl
jbe
xchg
push
orl
into
sub
mov
mov
xor
movsl
lahf
inc
mov
lcall
fidivrl
scas
adc
negb
or
or
mov
jle
inc
fstpl
jl
push
lea
cmovle
xor
mov
aam
insb
jne
stos
add
mov
std
ljmp
enter
push
mov
in
aam
xchg
orps
fstpl
dec
jae
adc
stos
fs
inc
pop
mov
pushf
dec
movb
xchg
cmp
push
stos
xlat
test
mov
imul
cmp
pop
aad
out
cmp
pop
cmp
out
sti
sub
fldenv
sbb
rolb
cld
sbb
fidivs
jp
lret
adc
movsb
ret
push
xchg
push
inc
inc
add
int3
inc
mov
das
lcall
aaa
loope
pop
scas
fwait
xor
sbb
adc
cmp
push
ja
jmp
jbe
clc
add
and
hlt
inc
inc
iretw
mov
sbb
pop
or
adc
jmp
jno
sti
jo
pop
out
mov
adc
fs
xor
mov
mov
jbe
push
sbb
mov
repnz
pop
jno
call
jmp
sbb
jns,pt
cmp
shrl
inc
jg
into
mov
rorb
insl
and
adc
es
jne
jecxz
jno
lret
pop
ss
mov
mov
add
jo
and
rcrb
imul
pop
cmp
push
movsl
push
popl
insl
jp
pop
je
leave
and
mov
xorl
pop
stc
icebp
mov
loop
jle
je
aad
push
cli
push
mov
jle
icebp
adc
insb
and
data16
adc
or
orl
or
movsl
push
lea
sahf
xchg
jmp
push
push
jnp
cmpl
test
dec
mov
or
or
sub
pushf
repnz
push
add
popf
insb
repnz
add
push
pop
outsl
repz
jmp
cmp
jle
add
xor
dec
or
jp
and
fidivl
sub
scas
add
imull
cmp
mov
mov
cmpsb
jbe
inc
add
sbb
in
xlat
sbb
roll
das
sahf
push
movsb
movsl
mov
stos
das
out
add
mov
jbe
mov
daa
js
mov
les
and
insl
push
mov
xchg
push
push
jnp
in
ret
mov
insl
sbb
dec
dec
jge,pn
shrl
mov
fsub
dec
and
jnp
fistpll
mov
shrb
push
add
test
jne
xchg
ljmp
adc
test
repz
movsl
pop
stos
popa
adc
mov
iret
lods
inc
bound
cmpsl
mov
jle
jo
push
fsubrs
mov
nop
testb
in
mov
pop
lcall
ljmp
in
outsb
mov
inc
jns
push
bound
arpl
and
data16
lds
call
mov
adc
outsb
cmp
dec
inc
lods
or
hlt
mov
fnstenv
scas
lahf
inc
and
xchg
mov
jmp
ss
sbb
cmp
mov
enterw
aam
mov
jecxz
and
es
stos
fsubrl
test
outsb
lcall
add
sahf
inc
dec
out
mov
cmpb
xchg
jae
pop
jno
cmc
js
sbb
cmp
pop
xor
fdivl
aaa
fildll
jl
or
ret
adc
dec
mov
inc
sbb
sti
dec
jmp
add
adc
xchg
jne
fdivrs
imul
lret
inc
sub
sub
cmp
ret
clc
in
pushf
mov
dec
fldl
loop
jae
cwtl
mul
hlt
fstps
addb
sub
pusha
fistpll
fwait
inc
or
imul
lahf
dec
jge
push
sub
jge
arpl
fwait
dec
enter
es
cltd
xlat
xchg
insb
imul
ret
test
shlb
popa
push
outsl
fwait
cld
cmp
pop
xchg
sahf
jle
daa
addr16
iret
fcomps
mov
into
adc
add
stos
int
sub
repnz
in
add
mov
xchg
ja
stos
cmpsl
jnp
pop
inc
icebp
xchg
xchg
sub
leave
shlb
bnd
sbb
subb
adc
lock
or
dec
xchg
push
dec
aad
sbbl
inc
repz
xchg
dec
sbb
fsts
sbb
mov
xchg
test
gs
push
add
repz
push
lods
leave
inc
inc
arpl
add
mov
cli
es
sti
push
stos
and
pushf
outsb
iret
xor
popf
mov
jmp
imul
lds
inc
mov
jnp
daa
das
in
inc
pusha
sbb
imul
js
and
mov
icebp
bound
inc
push
mov
movsl
jmp
ljmp
clc
pushf
cmp
inc
repnz
mov
mov
fidivl
sti
adc
fmulp
nop
mov
rclb
iret
push
xchg
ret
ja
into
mov
dec
mov
outsb
jb
je
pop
adc
adc
jns
sbb
mov
push
add
mov
inc
bound
enter
sbb
int
aaa
lea
inc
xor
or
adc
cld
mov
pop
je
mov
cmp
insl
cmc
cli
lock
arpl
jg
sti
inc
push
ss
cmp
iret
dec
je
xchg
xchg
int
icebp
ljmp
sahf
inc
jae
les
test
mov
mov
lret
add
inc
mov
add
and
fdivrp
fiadds
clc
sbb
int
out
add
mov
leave
mov
lds
imul
and
or
pushf
inc
mov
sbbl
cltd
jl
aaa
icebp
inc
enter
sahf
pusha
insb
ss
or
fwait
les
dec
in
mov
cld
sar
push
in
jp
sub
fisubl
mov
xor
push
jb
push
out
xor
gs
cmp
in
mov
inc
dec
inc
add
stc
or
insb
roll
out
andb
push
iret
and
movsb
inc
jmp
pop
cmc
inc
shr
dec
out
mov
cmp
xchg
lea
xlat
jne
jno
ljmp
sub
in
sahf
lods
mov
test
adc
cmp
push
lea
daa
addr16
test
test
leave
inc
sub
lods
add
pop
and
inc
fiaddl
jno
cwtl
lds
in
mov
rorl
fwait
dec
test
cmc
stos
cmp
inc
movsb
loop
jns
lret
lret
dec
rorb
lcall
xlat
jb
adc
mov
addr16
scas
xchg
mov
addr16
outsb
push
mov
idivb
cmp
mov
in
out
inc
sub
insl
xor
push
int
idiv
push
hlt
ficomps
std
btc
loopne
pop
repz
jge
in
sub
push
sub
ret
cmp
mov
or
or
subb
jp
sbb
push
lods
xchg
ret
pop
or
insb
daa
lods
outsl
and
dec
pop
mov
pop
in
sti
ret
fsts
cmpsl
inc
pusha
push
dec
adc
rorl
mov
es
insl
mov
cmpsb
ljmp
jge
add
mov
nop
sub
xor
and
inc
outsl
sub
arpl
push
sub
stc
push
mov
adc
cwtl
clc
xor
test
test
inc
push
loopne
add
sbb
mov
xor
stos
nop
lds
aaa
fs
into
into
dec
ret
rcll
pop
adc
into
pop
icebp
fdivs
pop
outsl
cmp
hlt
add
adc
inc
cmpsb
push
push
mov
cmpsb
dec
shll
inc
xlat
ret
jo
scas
daa
cmpsl
xchg
jno
arpl
or
push
pop
stos
es
incl
data16
adc
fldl
sub
dec
test
stc
cltd
jne
jae
test
mov
loopne
pop
nop
push
cmc
call
dec
fcompl
imul
jg
mov
push
push
dec
in
repz
in
cltd
ret
lcall
xchg
filds
push
and
in
out
xor
push
mov
loop
fnstcw
and
jbe
xchg
gs
sti
test
lcall
mov
scas
ret
popl
jbe
rorb
fs
sub
mov
xor
call
adc
adc
cmpsb
jno
dec
adc
dec
jno
dec
leave
xor
cmc
cmp
jb
push
push
add
out
add
lcall
orb
mov
cli
loop
addr16
jns
inc
ret
or
push
pop
adc
xor
jl
mov
shll
sub
sub
icebp
xorl
test
mov
lret
je
adc
xchg
imul
pop
pop
cli
or
std
aas
xor
xchg
sti
push
push
mov
inc
gs
mov
lock
add
sub
test
loopne
mov
imul
roll
cli
inc
sbb
ds
xchg
sbb
pop
inc
lds
or
sub
or
fisttps
adc
sub
add
sbb
cmpsb
stc
jp
adcl
inc
dec
xchg
or
sbb
xor
pop
dec
sbb
cmpsl
or
pop
add
sbb
test
fcomip
inc
mov
daa
or
out
pop
aad
movsb
or
or
leave
iret
sub
cmp
daa
xor
lock
push
fsubl
push
push
in
jo
inc
stc
xchg
sbb
mov
fdivp
stos
inc
cmp
daa
and
loope
xchg
pop
cmp
cmp
es
and
or
fistpl
idiv
mov
inc
mov
xor
repnz
outsb
aam
inc
mulb
and
push
pop
xchg
dec
popf
add
aaa
daa
push
pop
adc
cmp
push
ljmpw
jns
in
arpl
adc
inc
push
dec
pop
cwtl
sub
pop
insl
push
push
push
push
loope
push
push
ret
call
adc
jmp
dec
adc
push
sub
mov
imul
xlat
dec
stos
pop
clc
sbb
outsl
stos
out
stos
mov
clc
sbb
les
pop
shlb
lea
lock
inc
pop
sub
xchg
test
test
enter
lret
inc
fsubl
or
subl
add
pop
mov
adc
cmpl
ljmp
add
fimuls
sbb
idivl
jg
cmpsb
rolb
test
inc
nop
dec
or
pop
jb
xor
aad
ljmp
in
bnd
fisubs
loopne
mov
or
mov
insl
jo
scas
lret
or
fcmovb
mov
in
inc
and
or
xchg
insl
pop
fnsave
mov
in
test
sbb
xlat
push
dec
ror
sti
je
adc
fdivr
push
add
lods
inc
push
pop
and
loope
test
push
test
les
pop
mov
cmp
push
cmpsl
and
xor
hlt
add
push
lahf
cmp
sahf
xchg
jmp
enter
add
push
add
sbb
xor
or
cmp
insl
arpl
inc
mov
push
movsb
ret
or
jle
das
xchg
dec
and
or
rcr
cmp
adc
in
testl
or
push
pop
repnz
lods
push
shl
push
mov
add
pop
stc
bnd
rolb
push
data16
add
fnstcw
push
lcall
fs
mov
cmp
push
not
xlat
add
push
test
mov
popa
xchg
fadds
ja
andb
adc
inc
pop
xchg
clc
inc
imulb
rorb
dec
lcall
mov
xchg
mov
mov
xor
popf
jae
mov
ljmp
or
jge
sub
inc
jle
mov
imul
dec
jb
add
int
movsb
xchg
mov
or
adc
and
ljmp
inc
leave
inc
enter
repnz
mov
mov
mov
adc
out
xlat
pop
sbb
add
cmc
aas
sub
dec
int3
or
sub
loopne
push
push
push
aaa
dec
mov
xor
adcb
push
and
cmp
mov
cmp
loopne
cmp
or
test
mov
or
push
jbe
cmp
mov
push
xor
cmpxchg
or
adc
inc
in
cmpsb
jbe
repnz
jns
and
lea
in
or
in
or
mov
mov
fstpl
outsb
sub
inc
sbbb
and
aad
inc
popf
push
xor
cmp
push
unpckhps
aad
loope
push
xor
lea
adc
mov
int
mov
int
in
dec
push
pop
xor
mov
push
arpl
rclb
lret
pop
in
cmp
inc
shr
daa
push
cmpsb
jge
repnz
mov
mov
icebp
les
fcoms
mov
add
jae
ss
es
rorl
sub
cmpsb
dec
pusha
dec
movb
push
int3
or
xchg
mov
in
int3
sub
rcrb
pushf
xor
sbb
ss
cmp
data16
andl
jg
or
in
pop
jge
jae
sbb
std
inc
test
subb
jno
sub
dec
loopne
popf
in
test
stos
pop
aad
add
sub
mov
cld
ret
dec
mov
jmp
inc
daa
mov
bound
jo
stos
xchg
addl
jle
pusha
sbb
lods
ror
cmpsl
inc
or
movsl
stos
or
ret
mov
faddl
xor
sbb
pop
xchg
mov
or
jmp
ljmp
rolb
lods
mov
testb
pop
mov
js
js
stos
stc
xchg
aas
mov
inc
ljmp
jne
inc
std
xor
mov
inc
pop
jne
test
push
fs
xchg
jbe
cmc
negb
fwait
lds
dec
inc
movb
scas
inc
xlat
cmpsb
daa
dec
ret
xchg
cmpsl
lcall
cmpsl
or
jo
test
ret
pop
in
pop
fcomi
test
xchg
mov
jne
xlat
mov
jle
dec
shrb
cmp
push
movsb
push
dec
jne
pop
clc
and
sub
mov
mov
xchg
lock
jns
and
movsl
repnz
dec
jmp
int3
mov
dec
daa
adc
cmp
xor
pop
ljmp
mov
adc
cmp
xor
ret
pop
je
add
push
xor
jp
jecxz
cmp
scas
popa
scas
dec
roll
not
les
stos
test
imul
fisubl
adc
mov
pop
jmp
and
cmc
jg
ret
xchg
jg
fs
mov
lahf
jmp
out
sbb
mov
test
and
push
fisubrl
rcrb
xor
adcb
mov
push
cli
mov
aas
mov
jge
lcall
push
ret
iret
mov
test
int
inc
xchg
sbb
ret
xlat
imul
inc
jbe
sub
jl
mov
fmul
icebp
adc
mov
aas
xor
xchg
rcrb
fisubrl
jecxz
cmp
add
xor
jbe
jge
outsl
inc
mov
lods
or
adc
insl
in
mov
and
iret
xchg
rorl
pop
outsb
add
cmpsb
sbb
inc
mov
pusha
pop
orb
mov
daa
jecxz
mov
fwait
sbbl
out
sbb
mov
jns
or
pop
cmc
mov
in
inc
cmp
mov
mov
sbb
cmc
mov
imul
sbb
xor
test
arpl
insb
mov
clc
jecxz
ret
sbb
inc
pop
imul
add
call
xor
and
icebp
clc
sbb
push
pushf
movsl
jb
mov
sub
jmp
pushf
sbb
aad
pop
repz
mov
lcall
pop
mov
jmp
add
ljmp
scas
inc
pop
adc
jle
push
data16
in
in
int
in
lods
push
jne
testb
mov
dec
push
movsl
cmp
xchg
hlt
dec
daa
addr16
es
inc
mov
lcall
dec
imul
adc
aaa
or
sbb
sub
arpl
es
sbb
mov
out
xor
and
repnz
imul
adc
aam
push
push
jecxz
sbb
fwait
mov
mov
and
or
mov
jl
in
cs
push
rcrb
mov
sub
mov
and
sbb
cmpsl
push
daa
pop
dec
cmc
adc
std
jne
and
jb
cmpsl
lea
and
pop
popf
mov
sarl
jne
push
lock
movsb
stos
shll
xchg
insl
add
or
or
outsl
lods
mov
add
mov
mov
jmp
clc
addr16
mov
sbb
in
push
add
push
push
inc
lods
dec
jne
call
in
hlt
cmpsb
fdivs
sbb
jge
flds
fwait
dec
xchg
mov
in
outsl
in
lock
inc
xor
imul
add
jmp
dec
decb
stc
divl
dec
rorl
rolb
mov
scas
push
mov
inc
lods
mov
mov
in
mov
stos
adc
popa
addr16
insl
inc
int
xchg
test
repnz
pop
xor
clc
inc
jb
xchg
push
sbb
hlt
and
push
cltd
inc
iret
pop
icebp
mov
dec
negb
loope
not
popf
mov
jge
daa
sbb
test
gs
les
out
outsb
movsl
lahf
leave
sbb
sbb
or
mov
aam
pop
cmovl
clc
jnp
pop
aad
test
push
add
sub
loopne
cli
into
lahf
fmul
lret
mov
daa
je
inc
fs
and
adc
sahf
inc
pop
imul
and
stc
jns
movsl
daa
add
mov
pop
mov
mov
testl
xor
js
xchg
mov
aam
out
outsb
outsw
insb
insb
or
xchg
jae
es
mov
mov
lds
push
sub
lea
push
dec
iret
push
lods
ss
movsl
into
sbb
lods
dec
sub
icebp
imul
xchg
scas
mov
xchg
scas
aas
jle
aam
aaa
repz
adc
dec
cmp
xor
mov
jl
lds
rcll
es
push
mov
mov
ja
push
xchg
dec
stos
iret
lods
das
imul
mov
cmc
xchg
mov
xor
pop
jle
inc
popf
fsqrt
lods
mov
xchg
in
adc
xor
pop
jnp
bound
push
cmp
pop
mov
mov
fdivs
pop
or
js
sbb
mov
out
adcl
lcall
in
js
loop
je
filds
pop
cwtl
cs
cld
out
cmp
add
int3
popa
jae
das
out
add
mov
loopne
sbb
call
mov
aaa
xchg
adc
adc
scas
loopne
xchg
loopne
mov
negl
dec
sub
mov
stos
out
vmread
push
int3
decl
mov
addr16
hlt
cmp
imul
scas
sbb
std
inc
sub
popa
shlb
cwtl
sarb
data16
rol
mov
je
cmp
mov
xor
and
mov
mov
mov
or
ja
inc
xor
mov
std
bound
fbstp
mov
pop
adc
cmpsl
add
add
lret
ss
inc
fisttps
sbb
insl
sahf
push
scas
loopne
jnp
jne
adc
mov
inc
and
or
xor
inc
cltd
pop
fstps
xorb
in
jl
clc
xchg
int
ret
jbe,pt
lcall
bound
je
jne
outsb
mov
xchg
sti
push
jbe
das
int
lea
xchg
inc
outsl
xchg
jge
outsl
xor
sub
rcll
dec
and
jecxz
sarl
sub
ds
mov
mov
sti
adc
inc
movsl
test
out
mov
inc
jae
lahf
lcall
push
dec
xchg
sub
pop
ret
push
test
mov
leave
outsb
sbb
push
pusha
scas
hlt
push
mov
dec
jmp
mov
inc
shll
shr
dec
push
icebp
xor
pcmpeqw
dec
mov
jns
shll
or
and
mov
cmpb
and
cli
je
lea
ds
jnp
sub
jmp
mov
push
ja
adc
inc
pop
mov
in
mov
repz
addr16
xchg
xchg
lock
push
sahf
cmp
inc
test
call
push
mov
mov
test
pop
leave
lcall
inc
xchg
jmp
iret
mov
scas
lcall
bound
int
jae
mov
stc
fldl
rcl
in
push
sub
outsb
and
scas
sti
and
pushf
jge
mov
mov
nop
xchg
xchg
pop
xchg
stos
pop
lods
mov
popf
dec
mov
and
mov
mov
cmp
jg
adc
pushf
cmpsl
data16
addr16
adc
shl
mov
fiadds
gs
push
out
and
and
das
xchg
jo
inc
mov
rclb
fistps
loop
loope,pn
rolb
dec
mul
idivb
sbb
pusha
stos
xchg
xlat
mov
inc
xchg
mov
imul
sbb
lret
push
int
out
cltd
out
ljmp
jae
fs
pop
inc
roll
lods
scas
push
popf
pop
cli
in
addb
jbe
insb
inc
mov
arpl
xor
mov
add
js
das
adc
mov
ds
popa
popf
dec
aad
pop
aas
xor
mov
xor
test
mov
jns
cld
sbb
sbb
ret
test
enter
cltd
cmp
inc
mov
mov
jp
mov
add
daa
push
and
ret
dec
fstp
fs
push
inc
jle
cltd
js
imul
push
jne
cmp
jge
call
insb
lret
shll
int
dec
push
enter
pop
xchg
out
dec
jmp
xchg
add
add
add
sub
repz
cmp
lds
loope
push
fmuls
fadds
inc
pop
add
test
inc
jae
test
mov
mov
pushf
add
push
sub
pop
sub
test
outsl
out
and
arpl
into
xchg
jecxz
pop
iret
rol
je
mov
add
cmpsb
sbb
sbb
mov
cmpsl
repnz
lret
and
push
fnstsw
loope
or
mov
adc
lahf
pop
fisubrl
mov
mov
dec
inc
repz
cmp
js
adc
sbb
cmp
xor
movsb
cmpsl
out
aas
cld
dec
fwait
out
cli
mov
mov
imul
call
or
movl
jmp
movhps
xchg
cmp
lods
movsb
lods
mov
and
mov
xlat
ret
or
sub
sbb
mov
xor
nop
xorl
leave
ficoml
xchg
loope
addr16
mov
pop
je
xlat
loopne
adc
mov
into
arpl
fs
ja
loop
or
loope
icebp
xor
fwait
cld
sub
out
push
xchg
mov
mov
dec
addb
add
xor
rorb
shlb
repnz
jle
into
popa
or
movsl
push
or
jle
adc
adc
idiv
pxor
insb
adc
inc
leave
iret
clc
cmp
int3
xor
pop
sub
mov
inc
sub
mov
fldcw
xchg
adc
arpl
xchg
mov
in
and
push
test
adc
adc
adc
addl
push
mov
scas
and
mov
int3
fidivrl
insb
mov
call
jns
sar
arpl
in
pop
out
cmp
cmp
xchg
xlat
dec
mov
fsts
icebp
dec
sbb
or
mov
iret
and
dec
data16
test
push
add
bound
mov
test
js
push
ror
push
fcmovbe
sbb
xor
pop
adc
sahf
mov
push
jecxz
lcall
sbb
in
inc
rcl
inc
pop
push
add
mov
adc
nop
mov
xor
leave
add
mov
lcall
lods
nop
pop
aas
cmp
jge
fadd
push
cmc
mov
add
xchg
andb
pop
and
xorl
dec
cmc
adc
xlat
or
ret
push
fucomi
xchg
call
sub
ss
in
hlt
das
and
jecxz
adc
andb
orl
cli
call
pushf
stos
inc
add
inc
shll
and
xor
les
es
jo
sbb
rcrb
lods
cwtl
xchg
lcall
jae
dec
pop
int3
push
addr16
cld
and
sbb
scas
call
push
jnp
test
dec
mov
in
inc
rolb
push
lcall
adc
test
jns
push
andl
out
stos
ljmp
lret
xor
or
dec
or
pop
pop
loop
cmpsl
mov
ljmp
add
mov
repz
cmp
push
or
aad
fsubrs
adc
arpl
dec
cmp
add
cmp
push
gs
jmp
in
lret
mov
je
fsubl
xor
sub
inc
imul
dec
xchg
lods
orl
mov
cwtl
and
push
shrl
and
aam
xor
test
jne
leave
insb
data16
cld
fsin
loopne
mov
out
out
or
pusha
pop
cmp
addr16
in
shlb
pop
jns
dec
data16
ficompl
mov
mov
lods
dec
push
roll
sbbb
lds
sar
in
sub
add
nop
mov
in
cli
jo
and
or
pop
into
cmp
mov
jnp
mov
sub
mov
mov
faddl
sbb
iret
aaa
mov
mov
lods
mov
loop
jecxz
repnz
fistl
jbe
repnz
repz
sbb
push
or
pop
out
lret
sbb
adc
fadd
mov
jns
int3
sub
cwtl
fadds
xor
xchg
dec
clc
lods
jecxz
sbb
sbb
pushf
push
mov
dec
aas
mov
ljmp
daa
test
mov
inc
cmp
movb
sahf
mov
in
iret
adc
sub
adc
dec
cmpsl
aas
imul
in
pop
push
imul
mov
jo
push
sbb
enter
scas
in
mov
add
fsubrl
cmp
jle
sbb
das
decl
rclb
jmp
rclb
or
pop
call
popl
mov
loope
inc
xchg
hlt
sbbl
faddl
and
iret
cmc
fstps
int
push
pop
arpl
jne
xor
rcrl
push
add
mov
cwtl
imul
insl
inc
pushf
pop
xlat
push
repnz
sub
push
ds
loopne
mov
lock
mov
andl
sub
lods
ret
sbb
imul
test
mov
or
mov
inc
dec
cmpsl
jb
push
enter
xchg
cmp
and
mov
inc
out
inc
mov
fildll
out
dec
dec
test
imul
and
add
fs
dec
xor
xorb
call
in
dec
imul
push
jns
fldt
xchg
mov
shlb
pop
push
fdivrl
pop
pop
jge
mov
sbb
repnz
in
push
lods
test
pop
or
mov
fistpl
add
inc
xor
scas
mov
movsb
and
sub
xor
jmp
leave
das
or
ret
mov
pop
insl
mov
xchg
mov
push
inc
push
loop
jae
enter
icebp
jge
xchg
and
push
lret
call
loope
jb
mov
mov
push
xor
sub
pop
cli
cmp
mov
pop
adc
pop
aaa
wrmsr
mov
sahf
mov
mov
jbe
pop
or
mov
fdiv
ljmp
xchg
insl
or
fmul
and
sbb
ret
lcall
jl
and
jno
pop
jns
push
push
cmpsb
inc
sarb
inc
lret
sub
mov
mov
loope
loop
xlat
popf
mov
insb
popf
jo
inc
and
inc
sub
aas
fistps
jb
jl
sub
insb
bound
jno
lret
pusha
iret
mov
cld
xchg
aaa
mov
loop
inc
psubusw
pop
lcall
sub
xchg
ss
push
and
pop
insb
sbb
shll
imul
mov
mov
sub
stc
sub
data16
xor
in
xchg
xor
pop
dec
loope
add
aaa
test
mov
lea
sti
out
test
xchg
mov
lock
stos
mov
sub
dec
incl
loopne
adc
mov
sbb
pop
jno
xchg
and
out
sub
imul
mov
inc
mov
int
pop
adc
ja
pushf
clc
mov
push
mov
sub
rcl
testl
cmp
or
adc
and
xor
jecxz
mov
xor
or
jge
in
enter
enter
jb
lods
shll
inc
mov
mov
jo
or
jg
cmp
imull
mov
fcmove
orl
xchg
adc
sub
negl
and
test
mov
adc
loop
sbb
and
repnz
outsl
inc
out
stc
bound
enter
leave
fdivr
push
loopne
add
out
call
xor
out
loope
pop
mov
leave
push
call
push
mov
or
inc
mov
dec
out
arpl
jle
dec
testb
jne
ror
sti
dec
pop
stc
or
in
xchg
lock
repnz
cmp
lock
inc
mov
aad
je
mov
leave
popf
mov
ja
xchg
sbb
divb
jns
push
scas
sub
lock
mov
out
mov
jl
js
into
outsb
lods
pop
add
pop
ds
nop
dec
mov
pusha
jg
out
out
and
shll
pop
sbb
jp
fcomps
xchg
call
dec
aaa
lcall
xchg
sti
outsb
enter
aas
clc
xchg
sub
or
addr16
and
jge
sbb
pop
mov
add
push
addb
jns
xor
jg
xchg
pop
insb
test
mov
test
outsl
cs
in
test
jl
int
adc
sarl
jbe
cmp
or
shr
stc
lods
loop
rcrb
fcomip
or
aam
shr
pop
xlat
ja
loopne
inc
ja
ja
idivl
mov
lcall
dec
test
stc
cwtl
fnstsw
push
lret
xchg
jbe
imul
pop
addr16
sub
inc
addr16
fadds
nop
in
popl
and
mov
sbb
lret
imul
push
subb
cmp
aam
and
mov
cmp
scas
out
and
imul
xchg
mov
mov
lock
mov
or
pop
jae
call
xchg
insl
push
aad
ffree
xor
xchg
mov
mov
or
sbb
cmp
std
popl
out
jb
das
ss
sbb
sbb
mov
or
fcomi
imul
insl
mov
cmp
clc
and
push
jmp
pop
push
mov
jp
in
gs
mov
lret
enter
sbb
lods
push
cmp
mov
lcall
loope
rorb
xchg
cmc
mov
mov
xlat
dec
dec
stos
mov
push
pop
add
sti
jae
daa
bound
and
loopew
mov
icebp
or
adc
leave
adc
mov
aam
sbb
xchg
cmpsb
out
adc
adc
pop
sbb
xchg
inc
sbb
mov
loope
pusha
push
jnp
inc
shll
shl
jbe
popf
loopne
push
mov
mov
xchg
daa
je
or
cmp
mov
pop
mov
outsb
push
into
aaa
mov
repnz
mov
repnz
jo
repnz
mov
inc
es
movsl
and
je
and
fstps
xchg
cmpsb
push
gs
je
sub
mov
push
aam
lods
cmpsb
fisttpl
test
push
inc
ja
mov
cmp
jnp
push
pop
in
test
mov
in
call
arpl
push
daa
xchg
loope
xchg
inc
inc
cmp
pop
pop
jp
mov
stos
push
jl
cs
mov
pop
pop
iret
lret
aam
adc
xchg
adc
inc
popa
rolb
icebp
stos
jnp
or
xchg
fidivrs
push
mov
jle
loopne
sbb
and
mov
dec
out
cmc
fidivrs
inc
pop
lret
lahf
jl
movsb
or
cmpsl
inc
fwait
aas
pop
rolb
loop
mov
lea
adc
outsl
add
fld
aaa
lret
mov
inc
jo
test
cmc
repnz
xor
shlb
out
call
dec
xor
xchg
fwait
inc
inc
into
lcall
mov
scas
stc
test
pop
sbb
sbb
out
lret
and
insl
ss
jl
les
out
xor
out
dec
cltd
fsts
in
jbe
pop
mov
lods
mov
and
jp
fistpl
push
push
repz
or
nop
dec
arpl
aam
add
icebp
mov
cmp
ret
add
or
adc
add
xchg
call
daa
shl
push
xor
outsl
daa
lods
jg
rorb
insb
cmp
dec
jecxz
sub
and
cmpsb
imul
lods
push
push
sub
mov
iret
ret
lea
inc
xabort
lret
pop
fcompl
push
push
lahf
inc
mov
daa
ret
adc
pusha
inc
mov
test
ret
jg
push
adc
dec
push
sbb
adc
fcoml
mov
mov
xchg
xchg
scas
cld
out
out
scas
mov
nop
xchg
cmpsb
nop
enter
cli
fisubrs
jmp
icebp
aas
fidivrl
scas
sti
mov
into
popa
repnz
enter
cmpsb
enter
dec
test
jns
out
or
inc
mull
stos
mov
sbb
mov
pop
fildll
sbb
jl
int
daa
add
and
xchg
push
dec
xor
jge
in
arpl
push
outsl
sub
aad
gs
loop
lods
pop
xchg
mov
pop
jmp
nop
xchg
pop
jecxz
pop
ljmp
xchg
xor
pusha
mov
sub
mov
jecxz
nop
scas
jg
push
sbb
nop
imul
mov
shl
xor
cmp
shrb
lcall
insb
inc
es
inc
sbb
jl
mov
sar
andb
cmp
lea
mov
iret
daa
out
pushf
ss
mov
das
ja
pop
xchg
dec
jo
sahf
sub
leave
aad
sub
es
sbb
xor
inc
lret
sbb
out
addr16
enter
cmp
mov
out
pop
cli
insl
sub
jb
and
xor
push
dec
sub
mov
faddl
lea
sub
je
dec
sbb
dec
add
jae
aam
cwtl
and
adc
push
xchg
mov
pop
addr16
cmp
loop
ss
lret
lock
xchg
inc
popf
pop
je
into
mov
aam
loop
ficomps
cmpsb
test
lret
inc
std
jl
je
repnz
mov
cli
loop
pop
fsts
or
loope
mov
sub
loope
jae
dec
jp
adc
in
cmc
loopne
mov
lret
lcall
and
xor
icebp
out
xchg
cltd
fs
inc
fidivs
popf
adc
pop
dec
hlt
sub
jecxz
dec
inc
aad
inc
jo
loop
fdivr
cmp
bound
dec
hlt
sbb
and
push
jmp
add
movsl
flds
sbb
xor
inc
push
scas
push
dec
outsb
ljmp
xor
lcall
ficomps
dec
in
mov
xchg
das
loop
jb
cmp
loopne
mov
mov
clc
mov
in
roll
lods
push
sbb
loopne
in
mov
cmp
popf
or
xchg
jge
mov
pop
sbb
xor
push
ret
jo
inc
or
push
jecxz
in
mov
inc
fsubrp
cli
add
mov
bound
imul
bound
jg
out
clc
mov
add
movsb
or
sub
push
jne
arpl
outsb
mov
push
imul
xor
insb
mov
sbb
add
aam
sbb
call
xor
test
testl
icebp
jge
pop
sbb
push
aas
test
push
sub
mov
fsubl
jno
push
cwtl
icebp
jno
in
mov
pop
cld
xchg
pop
mov
into
push
jns
cmp
pop
or
imulb
js
adc
sti
xchg
push
pop
cli
sub
mov
stos
mov
aad
inc
ret
ljmp
push
pause
pop
andb
sub
push
mov
fcoms
cmc
mov
pop
lea
or
xchg
movsl
imul
fwait
or
test
or
aad
dec
sti
fs
aaa
xor
shlb
xchg
sub
mov
lahf
xchg
icebp
xchg
nop/reserved
mov
aam
dec
popf
lahf
xchg
mov
mov
cmp
pushf
lds
fcomps
testb
dec
sub
loop
and
movsb
scas
and
xchg
push
mov
xchg
lahf
or
push
push
pusha
mov
mov
xchg
sbb
lcall
mov
push
jl
mov
mov
hlt
pop
imul
inc
mov
bound
fistpl
cmp
ja
pop
sub
arpl
jo
leave
and
js
push
jbe
cli
add
mov
xor
xor
xor
aad
push
mov
shlb
lds
bound
fdivl
dec
iret
sbb
jns
hlt
in
stos
sub
cmp
ja
or
nop
roll
jne
xchg
ret
sbb
mov
stc
inc
pop
lea
andb
adc
and
mov
mov
mov
mov
mov
jb
push
dec
pop
xchg
mov
lods
push
xor
cmp
xchg
in
aaa
and
test
xchg
int
stc
roll
or
jl
dec
inc
insb
hlt
daa
mov
jnp
add
jns
cmpb
iret
rolb
jae
icebp
lahf
pop
mov
or
sti
fdivs
ljmp
ljmp
and
dec
rorl
cld
xor
xchg
xor
push
mov
iret
inc
xor
push
sub
imul
popl
adc
pushf
movsb
cmpsl
dec
aas
gs
pop
dec
lret
aas
cmpsl
cmp
ds
das
pop
xor
xlat
loop
clc
add
push
test
popf
aaa
ljmp
add
cli
popf
rclb
inc
inc
cmc
cmc
mov
lret
jle
jmp
cmp
push
jo
cmp
test
cmp
out
ret
and
xchg
mov
stos
pmullw
mov
jp
jle
pop
loopne
mov
xchg
sahf
fcoms
pop
pop
and
out
and
inc
add
or
dec
out
int
test
xchg
scas
imul
xchg
iret
mov
adc
sbb
test
je
js
arpl
jmp
adc
xor
arpl
sbb
iret
mov
or
das
insb
xor
ds
cmpsb
sbb
in
mov
adc
rcrb
in
fiadds
cmpsb
fmuls
xor
pop
inc
pop
push
lret
and
fs
push
lock
mov
repz
or
jmp
mov
or
ret
pop
stos
call
xchg
mov
iret
int
push
push
cmp
sub
sahf
inc
arpl
das
xor
dec
int
leave
push
sti
ss
jmp
adc
xchg
push
mov
out
aad
inc
cmp
cmp
es
leave
jne
mov
rcrl
add
inc
cmc
sbb
jg
popa
lret
jecxz
cmpsl
rclb
in
add
andl
test
xchg
dec
fstpt
out
in
mov
cmpb
pop
jp
enter
inc
lahf
adc
xchg
fwait
mov
pop
jmp
mov
test
sti
xchg
pop
int3
push
in
dec
adc
adc
mov
fidivl
call
pop
sub
and
cli
call
mov
sub
pop
mov
pop
adc
cmp
sub
movsl
sub
push
pushf
stos
mov
or
add
xchg
repnz
push
fstps
loopne
xchg
aad
fucom
ja,pt
cmp
int
cmp
inc
je
add
pop
inc
imul
dec
nop
dec
adcb
jo
and
loopne
aas
outsl
cltd
lret
xchg
jp
out
adc
insl
add
imul
cwtl
rcl
inc
sbb
cmp
xchg
mov
push
xor
jp
xor
add
repz
scas
lods
pop
or
pop
xor
dec
ss
cmp
mov
outsl
jb
test
orb
mov
sbb
pop
and
cmpsb
mov
xchg
decb
xor
cwtl
sub
dec
xchg
popf
ljmp
inc
jle
mov
push
negb
mov
jns
enter
fdivrp
int
shll
sub
xor
push
adc
ret
out
pop
std
cmpl
pop
jnp
mov
mov
adc
lcall
std
bound
add
lcallw
imul
adc
jl
movsb
flds
pusha
dec
fmuls
cltd
adc
mov
and
gs
rcll
call
mov
cwtl
test
pop
shll
and
inc
or
adc
mov
mov
test
rcrb
jl
bound
jno
loope
mov
outsl
xchg
xchg
repnz
jb
repnz
xor
xlat
jge
nop
lods
sti
mov
cmp
pop
sub
mov
cmc
adc
lds
jg
dec
repz
xor
movsl
clc
jecxz
lods
add
cmp
adc
jne
cmp
aam
add
lret
in
dec
out
leave
loop
pop
int
mov
jo
test
out
xlat
xchg
adc
fbstp
aaa
inc
mulb
xchg
jne,pt
cld
jno
xlat
rcll
lods
sbb
sub
inc
insl
xor
and
add
sbbb
lea
mov
inc
sub
xor
cmpps
clc
xor
pop
sub
jecxz
nop
cmpb
xor
scas
loope
mov
aad
mov
cli
mov
outsb
add
sarb
sbb
push
add
add
cmp
aas
xlat
pushl
enter
xor
loope
test
mov
jbe
and
lret
jge
push
aaa
addr16
popa
dec
sti
xor
insb
pop
loop
jno
pop
mov
xchg
and
xor
aad
dec
fisubrs
lods
add
loope
push
test
sub
clc
push
cltd
loopne
push
sbb
pop
mov
mov
psubw
adc
inc
das
call
xor
push
icebp
cmp
fs
inc
mov
inc
sbb
loope
scas
dec
mov
pushw
xor
into
mov
xchg
aaa
push
mov
dec
sub
jo
jge
dec
adc
or
outsb
xchg
push
popa
adc
xchg
out
imul
xor
sub
int3
dec
in
cmpsl
lahf
jnp
pop
js
xchg
sub
dec
dec
and
and
dec
repz
lea
push
imul
pop
ja
cwtl
inc
xor
incb
fimull
push
dec
xchg
and
popf
rcll
and
jmp
rorb
xor
in
adc
and
mov
leave
mov
nop
mov
mov
loope
jp
sub
dec
jo
fmuls
adc
sti
pop
sahf
xchg
mov
lcall
movsl
enter
in
shll
stos
mov
seto
loope
sbbl
rcll
dec
and
mov
movsb
jl
in
jo
mov
dec
test
jge
xchg
or
popa
dec
mov
stos
hlt
es
cs
je
lret
dec
push
adc
sbb
mov
into
mov
mov
je
in
mov
out
mov
pop
adc
sbb
jae
loop
in
in
insl
jmp
jg
arpl
mov
icebp
es
fwait
popf
push
jbe
add
jecxz
mov
lahf
xor
jmp
xchg
sub
in
pushf
int
or
into
gs
lds
push
push
jb
ret
fidivs
lahf
aas
push
int3
popa
adc
lods
add
scas
push
push
inc
pop
sbb
movsb
jbe
loop
cmp
faddl
jl
xchg
mov
iret
sbb
cmpsb
outsb
pop
shll
outsb
pop
jge
in
in
jo
and
and
sti
ljmp
cs
mov
in
push
sti
dec
mov
inc
mov
ljmp
sub
ja
pop
aaa
add
jge
fcompl
movsb
jne
add
adc
and
cmc
mov
sub
push
or
outsl
pop
sub
inc
xchg
pop
cs
cmp
mov
pop
push
push
lock
mov
inc
and
dec
call
pusha
push
mov
push
or
test
orl
inc
mov
lcall
imul
inc
out
jno
sub
stc
les
sbb
sbb
mov
mov
js
sub
jns
mov
jl
mov
mov
pop
dec
out
cwtl
mov
adc
fsubrs
add
cmp
iret
cmpb
into
jo
stc
nop
aad
sbb
leave
and
out
jmp
inc
lods
sub
xchg
scas
dec
jp
mov
jo
insl
and
fwait
test
jae
iret
fsubl
scas
iret
fs
xchg
adc
shll
sub
cli
inc
fs
shll
cld
cmp
mov
movsb
mov
jb
daa
xlat
mov
sti
inc
clc
jecxz
push
out
ret
std
inc
lods
mov
scas
out
cmp
call
and
sub
push
dec
loop
mov
test
xor
lock
fildl
cli
pop
mov
or
mov
push
lahf
loope
pop
repnz
mov
add
aam
std
push
rcrl
mov
test
mov
fstpl
pop
cltd
sbb
into
mov
fsts
jg
lea
testb
inc
push
pop
aaa
xor
lret
mov
sbb
cmc
test
adc
xor
xchg
mov
or
xchg
lcall
popa
out
aad
dec
daa
dec
cmp
lahf
cli
in
repnz
aaa
dec
cmpsb
cld
pushf
jecxz
xor
mov
scas
not
and
lods
lret
inc
xadd
add
mov
ffreep
jp
fs
adc
ja
sbb
pop
and
das
pop
jns
dec
dec
lds
sub
adc
add
mov
mov
in
or
jae
sti
ret
mov
cmp
pop
pop
ja
mov
icebp
fidivrs
mov
lret
leave
movsl
or
and
mov
sub
test
sbb
jno
sub
decb
xor
or
pop
push
push
arpl
insl
and
mov
cmp
sub
xor
xchg
mov
xlat
mov
inc
imul
cmp
js
insb
push
adc
mov
mov
mov
and
add
xchg
cmp
mov
xlat
mov
out
jl
leave
movsl
pop
jno
adc
pop
fadd
pushf
cwtl
mov
sub
jbe
jae
ds
hlt
pop
cltd
outsb
aam
idivl
mov
xchg
xor
shlb
xchg
out
lods
clc
fsubrs
mov
and
cmp
mov
in
bound
imul
or
pusha
cli
fcom
in
and
jo
push
int
aad
mov
lods
sub
push
fmulp
add
push
subb
or
push
mov
cmpsl
mov
cltd
pop
scas
sbb
testb
jge
pop
mov
mov
pop
mov
insb
or
je
icebp
add
stos
ljmp
jmp
push
cmpsb
into
sbb
out
pop
out
mov
add
push
cli
aas
fstps
push
popa
add
mov
add
inc
es
mov
and
inc
outsl
pop
outsl
cmc
mov
subb
shrb
scas
mov
sbb
jecxz
jnp
mov
addr16
icebp
mov
cld
pushl
notl
rorl
mov
fdivl
push
adc
jns
dec
sti
pushf
lret
clc
lods
add
mov
xor
mov
lret
inc
ljmp
push
icebp
xchg
sbb
pop
push
adc
insb
pop
mov
sub
add
add
lret
push
pop
mov
loopne
and
xchg
add
dec
loope
sub
mov
ret
dec
and
mov
pop
and
mov
in
mov
mov
adc
inc
pop
cld
push
mov
inc
xor
mov
mov
loope
push
xor
fcomps
xchg
mov
test
pusha
jmp
es
mov
or
mov
orb
mov
sarl
or
mov
shlb
sbb
sub
dec
and
cmc
movsb
and
popa
jno
inc
stos
pop
sbb
and
call
das
and
sbb
add
insl
and
test
cmp
jb
fldl
inc
imul
and
aaa
sub
rclb
xorl
push
rcll
and
cmp
ror
lret
cmp
inc
es
cmp
pop
or
lret
enter
jae
divb
test
pop
lea
outsl
xor
adc
inc
out
dec
shll
add
sbb
scas
add
xor
outsl
mov
xchg
add
adc
sti
fwait
gs
dec
test
aaa
aas
inc
add
adc
loopne
inc
sbb
in
mov
mov
jecxz
mov
arpl
fadds
push
jbe
bnd
mov
inc
fbld
push
popl
xchg
adc
dec
out
movsb
leave
push
jno
inc
xchg
pop
insl
pop
test
loope
sarb
hlt
sbb
mov
cmp
push
push
js
stc
cmc
push
lods
add
xlat
das
test
shrb
scas
xlat
in
cmp
mov
clc
lcall
add
lock
mov
sbb
or
pop
sbb
in
daa
ret
movsb
jl
add
js
out
lahf
adc
push
xchg
sbb
lahf
cs
cwtl
outsb
mov
jle
lret
sub
or
cmc
in
out
sub
cld
lds
mov
clc
add
xor
and
or
cmp
into
fstpl
ds
movsl
jno
pop
add
dec
mov
xchg
and
fwait
sbb
ret
add
cmp
or
pusha
aaa
hlt
lret
pop
xchg
pop
pop
loope
sbb
fwait
mov
mov
sbb
xchg
dec
dec
loop
out
cmp
push
data16
fwait
or
or
or
pop
sbbb
mov
sarb
jg
dec
mov
jmp
lock
sbb
loop
jno
sub
inc
xchg
out
push
xor
dec
shl
and
mov
dec
test
pop
push
fcoms
xor
fadds
and
ret
fsts
insb
mov
cmpl
inc
js
je
mov
cmpsb
imul
xchg
leave
das
scas
in
cs
add
arpl
push
xchg
push
cmp
or
sahf
jle
adc
mov
popf
push
jle
sub
fmull
aam
push
lcall
jo
cmp
jg
mov
pushf
cmpsl
stos
adc
add
stc
movsb
shrl
mov
mov
cltd
mov
lock
mov
mov
mov
pop
test
mov
adc
rcpps
test
mov
pop
inc
andl
pop
dec
jp
test
ljmp
or
push
cmp
test
mov
pop
fisubs
mov
aas
mov
fiadds
mov
xchg
mov
mov
repnz
imul
sbb
jo
sbb
int
out
in
loop
filds
cmp
pop
fimuls
int3
sbb
jge
pop
out
loop
popa
adc
movsb
push
hlt
movsl
dec
adc
cwtl
rcrl
nop
bnd
xchg
jecxz
jnp
or
dec
dec
mov
jnp
push
adc
pop
sub
idiv
lds
loopne
div
sbb
jbe
int
jmp
cmpsb
subb
fidivl
sub
fstpt
add
sub
sbb
push
andl
test
mov
xchg
movsl
and
shl
movsb
cltd
clc
adc
cld
popa
or
pop
sub
xchg
xor
inc
jmp
sub
out
cld
stc
cld
je
jle
mov
cwtl
mov
cltd
add
mov
sbb
mov
out
sub
add
mov
bound
mov
pop
add
out
arpl
jmp
mov
scas
dec
outsl
adc
cmpsl
sub
lea
hlt
dec
mov
pop
lcall
pop
stos
cld
lods
in
adc
add
in
push
cmc
daa
aad
or
popf
sub
pop
jecxz
adc
cmpsb
inc
push
outsb
dec
adc
cwtl
arpl
aad
pop
addb
dec
dec
mov
lret
or
fs
push
and
push
bnd
ret
bts
jl
sbb
cmp
sub
ljmp
and
out
lret
add
cwtl
daa
shr
lods
cwtl
adc
fimuls
push
and
je
cmp
adc
push
jbe
sti
pop
mov
imul
in
add
cmpsb
jb
cmp
jbe
pushf
xchg
rcr
aaa
lods
jle,pt
xchg
pop
in
mov
adc
dec
frstor
mov
test
adcb
mov
sbb
imul
es
test
xor
inc
and
outsb
movsb
pop
in
aad
mov
mov
xchg
jmp
add
movsl
cmpb
mov
popa
popa
push
pop
or
pop
dec
inc
jge
inc
sub
add
iret
inc
cltd
mov
insl
jmp
sub
ss
out
daa
mov
pop
in
aas
mov
and
mov
xor
jecxz
xchg
ss
cld
lret
push
mov
mov
sbb
aam
jge
mov
js
out
mov
xchg
push
adc
sbb
xchg
and
test
and
adc
mov
xchg
sub
cltd
imul
popf
pop
xor
or
call
xchg
mov
sbb
sbb
jecxz
xchg
mov
cmp
sbb
in
pop
xor
mov
xor
imul
mov
mov
add
inc
xor
in
lock
fwait
cmp
ljmp
cmpsb
xchg
mov
xchg
jae
leave
or
cmp
inc
cmp
add
scas
pusha
arpl
in
push
mov
xor
mov
scas
aaa
and
in
jp
or
sbb
mov
rcrl
cmpsl
cmp
mov
mov
inc
or
jnp
cli
dec
adc
repnz
insl
add
cmp
sub
xchg
arpl
cmpsl
xchg
addl
mov
lods
aaa
or
mov
stc
sahf
sbb
pop
cmp
mov
enter
pop
dec
xchg
jle
mov
cmp
ret
cmp
fistpll
push
pop
scas
add
and
bound
inc
es
cmp
pop
pop
jno
clc
addr16
push
mov
dec
sahf
xchg
das
loopne
es
xor
inc
dec
nop
nop
jb
xor
iret
push
pop
mov
fstpl
dec
repz
jmp
orb
daa
fisttpl
leave
rcrb
and
jb
rcrb
and
cmp
inc
jae
test
mov
pop
pop
pop
cmp
popa
cli
daa
in
mov
jae
ja
pop
sub
mov
add
movsb
cmpl
xor
addb
int
cld
jns
mov
psubusb
mov
mov
lahf
dec
and
shrl
pusha
in
and
xchg
mov
mov
jecxz
or
push
add
adc
jle
subb
insl
add
das
sbbb
jl
repnz
out
sbb
out
cmpsb
jp
push
adc
adc
scas
aam
lea
call
add
jne
xchg
fucomp
ss
lods
push
out
jb
push
prefetch
and
les
rclb
scas
lret
xchg
push
mov
sahf
push
pop
ljmp
enter
push
push
push
outsb
movsb
cmp
or
cmp
cs
add
sub
or
inc
xlat
jb
mov
out
lcall
shr
test
mulb
mov
jne
inc
mov
xchg
aas
mov
testb
mov
cmp
jae
repz
orl
or
arpl
lods
xor
rolb
dec
clc
shl
loopne
ret
in
lret
pop
mov
cwtl
pusha
jle
sar
push
stos
out
xchg
push
sbb
xor
int3
jg
insb
adc
subl
test
les
lahf
data16
in
addl
test
inc
sbb
mov
sti
in
fwait
pop
push
lea
lahf
std
fidivl
sub
cli
mov
outsb
jecxz
push
jo
test
push
shl
jb
popf
mov
mov
sbb
pop
test
jle
cli
jno
push
lods
and
pop
rolb
cmp
push
jns
dec
ljmp
push
cmc
dec
xor
hlt
out
sbb
sub
lret
pop
dec
cmp
aas
cmp
loope
inc
repz
int
cmp
in
scas
push
cmc
sbb
mov
adc
jle
pop
movsb
dec
sarl
scas
mov
data16
dec
pop
les
jle
inc
sbb
scas
cwtl
jg
mov
inc
pop
inc
mov
stos
fldcw
fwait
xor
cmc
or
lret
cmp
push
insl
xchg
xor
and
repnz
sar
mov
rcrb
sti
mov
lock
dec
lds
mov
mov
lods
push
pop
add
mov
add
ljmp
test
es
mov
mov
mov
out
hlt
mov
insb
and
and
jge
xorl
xor
mov
ror
adc
decl
push
mov
cmpsl
xchg
std
jne
xchg
repz
and
rorb
std
add
lods
mov
jmp
or
adc
test
ja
cltd
xchg
sub
adc
fcom
or
in
pmulhuw
enter
mov
sub
push
test
cmpb
or
mov
push
stos
mov
sub
xchg
fists
mov
xor
xchg
into
cwtl
aaa
xchg
adc
push
xchg
add
aas
and
pop
clc
or
mov
arpl
ljmp
lret
mov
aam
iret
dec
xor
ds
sbb
inc
mov
and
hlt
std
mov
enter
or
add
vpshufhw
loope
fidivl
lods
arpl
pop
ficomps
jae
cmp
lea
pop
adc
sbb
jno
loope
lahf
cwtl
outsb
xor
push
test
sub
pop
setg
xor
test
mov
mov
dec
in
adc
cli
xor
imul
xchg
pop
cmp
mov
xor
lcall
pop
mov
push
xor
sub
test
and
mov
jno
outsl
xchg
pop
xchg
jmp
in
add
cltd
repnz
outsl
mov
loope
sbb
in
and
xor
pop
sub
mov
push
out
mov
inc
pop
fisttps
pop
divl
xchg
mov
jne
arpl
lea
arpl
ds
mov
sub
cmp
fmulp
mov
std
int3
add
cmc
push
mov
mov
call
and
cmp
xchg
xor
shlb
add
mov
xor
loop
jge
cmp
adc
out
arpl
jg
sub
add
push
sub
loope
pop
aaa
pop
nop
dec
mov
ds
pop
in
mov
out
in
mov
data16
ja
jns
iret
arpl
jl
pop
xchg
sahf
lcall
cmp
mov
pop
aas
push
xor
cwtl
pop
pmaxsw
fs
aaa
fnsave
push
addb
std
add
cld
repnz
push
gs
jno
mov
pop
insb
popl
add
jae
rorb
inc
jle
mov
fs
mov
cli
xchg
xor
fwait
imul
mov
aaa
or
sbb
pop
xchg
push
jg
push
mov
mov
ret
outsl
mov
shlb
mov
jg
icebp
push
ljmp
inc
mov
bound
pop
push
add
orb
and
fs
pop
test
adc
shrb
dec
popa
mov
xor
outsb
and
jge
adc
aas
mov
cmc
nop
leave
out
and
sub
push
rcr
sub
mov
pop
adcb
xchg
pop
enter
test
pop
ljmp
sahf
pop
and
pop
sarl
mov
insb
mov
mov
mov
mov
pusha
push
dec
movsl
push
xchg
dec
cmp
sbb
cmc
push
in
ss
inc
xor
aas
in
lret
out
test
mov
sbb
xchg
mov
cmpsl
push
lahf
sahf
aam
add
mov
cli
lcall
lea
pop
jp
mov
sarb
daa
andb
ficompl
mov
pusha
jbe
not
movsb
jp
xor
in
push
xchg
xor
xchg
xor
mov
mov
mov
push
test
adc
dec
dec
jns
aaa
pop
ds
push
das
xor
aad
lds
dec
pop
inc
jl
fisttpll
popa
lret
jns
mov
imul
cmp
add
aas
sbb
je
rcll
in
cld
scas
aaa
xchg
adc
stc
xor
xchg
push
dec
sahf
and
xchg
xchg
lods
inc
ret
and
jns
cmp
sub
push
mov
adc
in
add
adc
scas
sbb
outsl
push
iret
ds
stc
mov
mov
jae
xchg
leave
push
cwtl
mov
sbb
sub
dec
sahf
cmpsl
pop
das
push
mov
lods
adc
mov
xchg
shlb
sbb
rcll
stos
pop
rcll
lds
pop
test
pusha
sbb
insl
mov
ja
andb
cli
jecxz
add
loopne
outsb
repz
fisubs
repz
pop
movsl
xchg
sbb
pop
dec
push
push
xor
push
push
cmp
push
fildl
push
sbb
inc
es
bound
and
int3
out
jmp
adc
dec
adcl
cmp
lock
or
fucomp
call
xchg
fistl
rorl
or
mov
movsl
lcall
dec
adc
lcall
hlt
push
lret
xor
adc
sbb
sbb
in
test
jp
sbb
adc
dec
mov
jns
or
arpl
cmpsl
and
les
mov
mov
addr16
and
sbbl
repz
loopne
test
lret
pop
mov
nop
push
imul
enter
inc
ja
lea
mov
pop
mov
xor
sub
push
cmp
stos
inc
orl
cmp
fadd
mov
lret
sbb
push
jmp
popa
rol
sbb
insb
in
pop
dec
push
mov
out
xchg
mov
dec
jno
insb
mov
pop
add
ret
clc
xor
or
push
lret
idivl
out
push
fnsave
jmp
outsl
mov
jae
test
cwtl
daa
int3
xchg
pop
cmp
inc
test
icebp
xchg
or
xchg
jo
inc
mov
sahf
cmp
dec
dec
cmc
xchg
jmp
xchg
dec
inc
shlb
xor
mov
pop
loopne
mov
add
mov
jg
jecxz
fsub
ljmp
imul
pop
mov
in
jle
lret
loop
push
test
stc
pop
ret
aam
and
or
pop
mov
imul
sbb
xor
dec
loope
enter
fmuls
cmc
das
push
scas
jecxz
xorl
and
xor
iret
jo
jnp
xor
test
mov
mov
dec
stos
out
ficomps
pop
xchg
imul
xchg
inc
cltd
sahf
or
les
lock
mov
fsubl
shrb
sbb
or
mov
aas
mov
fs
pop
jg
cmc
rcll
lcall
sbb
lahf
fcomps
sub
icebp
dec
jae
scas
push
mov
hlt
lret
lods
cmp
push
sbb
ss
sbb
mov
out
cwtl
lcall
jmp
and
lcall
inc
and
test
adc
ret
or
stos
or
cld
cld
imul
jnp
insl
sbb
and
or
sub
inc
adc
lods
pushf
push
mov
loopne
int
arpl
ss
out
adc
test
xchg
outsb
addl
push
adc
mov
and
add
fidivl
mov
mov
shll
in
xchg
mov
arpl
sahf
pop
mov
mov
xchg
xchg
scas
mov
imul
sahf
add
xchg
jno
out
adc
push
in
scas
das
daa
xor
pop
stos
xchg
cli
lock
sub
outsl
cltd
fldenv
xchg
pop
jmp
in
loope
xchg
pop
sub
sbbl
es
outsl
in
push
in
int
mov
imul
dec
into
jae
inc
xor
push
push
shr
aas
int
and
addr16
pop
mov
out
mov
scas
push
dec
fwait
xchg
push
xchg
daa
cmpsb
push
pop
xor
outsl
aaa
xchg
cmp
cmp
mov
sub
out
imul
aad
ret
and
mov
aad
add
jecxz
sub
in
pop
in
mov
stos
or
sbb
in
rcrb
cmpsb
test
jae
popa
push
or
push
in
lea
or
adc
mov
or
sahf
adc
shll
xchg
jge
imul
sti
mov
cltd
inc
ljmp
cld
in
mov
imul
das
fisubrs
into
fsts
sahf
xchg
jg
shr
mov
lods
pop
inc
jp
out
sub
int3
cmp
loope
rcrb
mov
imul
ret
stos
fisubl
inc
mov
out
faddp
lods
in
inc
pop
or
pop
js
es
cli
xchg
jno
dec
lahf
push
mov
mov
je
mov
mov
lcall
mov
pop
cld
cli
test
test
xlat
dec
or
orl
fisubs
outsl
scas
dec
add
jo
repnz
push
push
push
or
jle
add
inc
cmp
pop
xor
dec
mov
adc
adc
dec
fcmovnb
lds
xor
mov
and
loop
lock
bnd
lea
jbe
pop
sub
fildl
cmp
jl
add
mov
add
insl
shlb
pop
dec
mov
scas
mov
xchg
sbb
cmp
movsl
popa
or
or
cmpsl
mov
or
iret
ss
adc
loopne
or
jge
jno
jo
adc
xlat
paddusw
mov
movsb
iret
mov
mov
dec
mov
movsb
mov
ja
aas
js
sbb
inc
jns
and
bswap
jns
push
dec
xor
ds
or
mov
inc
mov
inc
push
lahf
les
inc
cmp
in
push
mov
aaa
and
test
mov
aas
incl
movsb
lahf
inc
inc
sub
pop
dec
sbb
jo
aad
mov
daa
lret
and
pop
movsl
mov
das
sahf
repnz
dec
fidivrs
bound
aaa
and
ss
and
sub
cmc
outsb
inc
add
cmp
in
and
cli
addl
dec
iret
sbb
push
bsr
jg
arpl
mov
cli
insb
in
sub
mov
lahf
popf
jae
cmp
push
add
lea
adc
sti
cld
fsubl
sbb
aaa
incl
jo
mov
cld
cs
neg
jle
push
les
lahf
add
daa
cmp
cmp
adc
sub
gs
leave
call
shlb
xchg
nop
pop
in
mov
scas
insl
testb
rcrb
mov
fldenv
mov
int3
add
sbb
inc
xchg
mov
push
mull
mov
bound
sti
adc
push
or
jnp
call
push
into
mov
pop
push
pop
cltd
jge
or
lret
xchg
jge
out
adc
ds
add
jp
notb
xchg
xchg
movsl
fsubs
in
fucomp
xchg
xor
imul
jo
or
add
mov
insb
xlat
hlt
mov
push
out
enter
add
xor
std
jne
movsl
push
in
repnz
fs
out
addb
pop
cld
dec
movntq
jbe
lret
and
sbb
mov
mul
fwait
inc
cmpsl
mov
and
cli
sub
mov
adc
in
jb
movups
and
fstp
out
loope
inc
shl
pop
or
scas
lods
add
insl
lret
fistps
sbb
dec
jp
fwait
insb
in
or
sub
or
jmp
ja
stos
jb
ret
iret
mov
adc
add
ljmp
pusha
cs
in
loope
push
mov
ja
mov
jne
jbe
mov
call
cwtl
or
lods
cmp
aaa
push
mov
pushf
push
ret
cmp
jle
xchg
xchg
hlt
call
rorb
xchg
pop
lea
pop
das
clc
rcr
jne
adc
loop
xchg
aaa
add
add
cmp
gs
enter
mov
xlat
test
xchg
das
out
frstor
mov
inc
mov
and
and
out
hlt
add
mov
or
pop
sub
xchg
or
sbb
add
imulb
dec
and
add
out
out
lcall
sti
fadds
inc
clc
sub
jae
or
nop
push
aam
fildl
sub
pop
or
data16
or
int3
xor
shl
ja
mov
xor
iret
inc
push
ficompl
xchg
mov
cmpsl
les
nop
popf
les
xchg
jecxz
mov
and
cmp
or
cmp
sahf
je
pop
pusha
dec
into
mov
cmp
in
scas
lock
mov
enter
rol
xor
adc
fdivp
pusha
rorl
and
dec
dec
out
inc
xor
stos
out
stos
stos
test
out
icebp
push
sub
mov
outsl
mov
out
aad
out
jbe
mov
xor
ficoml
sub
sub
sbb
int
dec
push
imul
inc
add
and
pop
fistps
xlat
cmp
ret
xor
xor
lcall
mov
cmp
mov
xchg
or
mov
es
xor
xchg
xor
ss
push
cld
lds
fistl
in
push
das
fwait
add
mov
into
gs
test
jne
or
iret
xor
adc
popf
popf
pop
mov
inc
or
mov
jmp
cmp
mov
in
jl
xor
mov
pushf
pop
pop
lea
cltd
sub
dec
js
dec
inc
in
and
jne
sbb
mov
ljmp
add
pop
pop
mov
popf
lds
stc
leave
cli
sbb
mov
ja
lock
pop
roll
mov
imul
ja
push
and
leave
cmp
lahf
outsl
xchg
xchg
je
and
inc
in
insl
and
pop
mov
push
push
insl
jo
lahf
out
dec
pop
mov
into
iret
retw
push
push
adc
and
test
stc
in
js
add
ret
or
or
out
dec
jge
repz
int3
sub
jl
pop
xchg
inc
xchg
popf
mov
add
mulb
xchg
imulb
mov
scas
ja
pop
push
mov
in
dec
enter
fcomip
nop
push
cmp
cmpsb
rorl
pop
fsts
sahf
notb
fidivrs
stos
xor
dec
test
mov
sbb
jp
pop
push
push
outsb
ja
lret
xor
repz
and
jns
cs
popa
into
movsb
mov
cmpsl
adc
mov
std
iret
negb
lcall
clc
jp
popa
pop
xchg
js
pop
js
pop
and
sbb
stos
popf
mov
testl
idivb
inc
jo
int
pop
inc
sbb
loope
xor
hlt
imul
insb
shll
mov
pop
testl
std
push
test
cmp
pop
orl
dec
insb
adc
shlb
cmp
stc
push
xchg
mov
mov
pop
jae
dec
inc
add
xlat
int3
gs
sub
loop
int
sub
xchg
pop
dec
lret
mov
push
std
xchg
loopne
scas
scas
sbb
push
in
out
fwait
rorb
insb
sbb
mov
mov
fnstsw
bound
adc
call
jmp
fs
jle
adc
or
int
mov
cmpsb
pusha
push
xchg
in
test
mov
cmp
fbld
cmp
fucomp
stc
jae
adc
sbb
push
rorl
or
xchg
cmc
adc
push
jno
iret
or
sbb
or
mov
hlt
mov
cmc
cmp
addr16
cs
dec
add
shlb
push
xor
add
test
adc
andl
cld
in
enter
xchg
inc
ret
aam
inc
or
sbb
into
and
fcoms
out
sub
es
insl
push
stos
aad
push
xor
jnp
pop
mov
xchg
push
pop
fwait
mov
sub
icebp
addr16
dec
jl
bound
mov
test
add
add
out
inc
out
jae
inc
or
int
cmp
mov
daa
xor
test
mov
loope
cltd
pop
rcrl
shll
mov
imul
jecxz
lea
ret
or
and
xchg
cli
adc
clc
pop
add
mov
mov
or
push
test
ja
clc
adc
mov
or
clc
mov
mov
pusha
sub
jecxz
jae
sub
jbe
dec
shrb
push
or
bound
fcmovbe
arpl
shll
rcrb
push
cmp
mov
xor
mov
jge
testb
daa
jnp
xchg
adc
jno
aad
fcoms
adc
adc
and
rorb
mov
clc
inc
dec
stc
mov
mov
cmpsl
and
fucom
dec
idivl
and
add
int
sub
dec
pop
adc
mov
mov
mov
pop
js
in
lahf
add
addr16
xlat
and
dec
sahf
dec
cs
push
shlb
hlt
pop
gs
shrb
out
pop
movsl
rcll
clc
and
popf
and
mov
sub
xchg
gs
xchg
adc
hlt
or
arpl
pop
and
mov
fs
xchg
adc
sbb
xor
mov
jl
mov
inc
xchg
sub
lret
cmp
sub
ja
lret
and
movsl
loope
mov
xor
and
ret
cli
mov
stos
push
jns
adc
pop
or
imul
mov
inc
leave
cmp
sub
cmc
pop
jmp
stos
lahf
inc
cmp
inc
push
sahf
sbb
lahf
popa
dec
inc
cli
repz
push
mov
mov
jp
loope
dec
subl
pop
xchg
dec
adc
stos
dec
add
add
xor
inc
fwait
paddd
sti
mov
out
jb
sbb
jne
fistpll
fdivl
leave
xchg
push
std
popf
stc
cmp
and
imul
sub
adc
xor
sub
in
arpl
inc
jno
add
je
call
add
inc
add
push
inc
inc
sub
cmp
jns
push
jg
sahf
xor
daa
ja
roll
pop
add
cmpb
aaa
loop
std
aaa
jmp
pop
mov
pop
inc
push
xor
mov
pop
dec
jg
sub
xchg
in
mov
popa
scas
mov
mov
mov
fs
dec
rorb
push
dec
shll
mov
imul
mov
xchg
mov
or
pop
cmc
in
jecxz
adc
ret
mov
push
es
mov
xchg
adc
in
aaa
hlt
mov
arpl
repz
sub
lods
lea
arpl
shl
mov
mov
les
jp
pop
sub
jl
and
icebp
xor
inc
pop
sub
mov
enter
cli
sub
ljmp
jl
mov
in
aas
xchg
mov
xchg
sub
jecxz
pop
jae
loopne
jbe
push
and
mov
dec
inc
setns
pop
in
es
push
dec
xchg
push
ljmp
rdtsc
inc
inc
insb
pop
pushf
mov
xchg
push
mov
mov
loope
adc
add
insb
pop
pusha
scas
mov
adc
pop
pop
arpl
ret
insb
hlt
sbb
mov
leave
jl
out
jns
negb
xor
aas
push
push
dec
sbb
pop
push
popl
and
jge
mov
decb
push
cmp
xchg
clc
testb
repnz
xor
dec
ss
sbb
and
mov
fisubrl
fdivl
roll
jno
sub
inc
out
mov
pop
cmp
mov
fisttps
addr16
dec
scas
repz
jg
xor
add
roll
addr16
adc
add
inc
mov
xchg
add
clc
lahf
int3
jge
mov
movsb
loopne
in
hlt
fistl
es
push
mov
test
adc
push
ret
pop
and
ds
inc
rcr
imul
add
mov
jnp
in
push
jns
cmpsb
loopne
sbb
push
mov
sbbl
sbb
lret
insb
inc
jp
es
dec
into
js
push
mov
mov
imul
sbb
add
pusha
mov
mov
div
dec
push
insl
jae
add
push
int3
jmp
push
jnp,pn
dec
rorb
test
das
xchg
fs
adc
data16
push
cwtl
push
inc
movsb
fstp
es
stos
mov
loopne
adc
xor
loope
mov
cs
popa
xchg
lret
dec
int
mov
or
imul
mov
mov
cmpb
js
cld
popa
ret
pop
xchg
cltd
shrl
mov
sbb
subb
hlt
push
xor
xchg
fistpl
fwait
jnp
mov
and
popf
add
lret
xchg
sahf
adc
repnz
rolb
sub
clc
shll
push
js,pt
in
aas
mov
roll
cmpsl
push
xor
inc
inc
adc
inc
mov
repz
pusha
mov
roll
push
out
xchg
clc
mov
mov
mov
dec
mov
jecxz
or
in
add
fwait
adc
adc
iret
inc
jns
pop
pop
xor
loope
add
sub
mov
push
mov
cltd
insb
mov
mov
mov
je
push
sub
pushf
rcrl
stc
mov
out
xchg
sbb
push
xchg
fcoml
or
mov
fwait
js
aam
mov
stos
xchg
out
cmp
adc
inc
adc
lods
xlat
cmp
xchg
sti
popf
mov
in
cmp
js
loope
das
xchg
or
mov
out
fmuls
in
add
mov
adc
mov
lret
pop
ss
sbb
lahf
cmp
inc
jns
mov
shrb
mov
mov
fldcw
ljmp
jnp
adc
out
jnp
loope
iret
adc
loope
addr16
mulb
mov
inc
or
dec
bound
gs
push
rcrl
pop
push
cld
lret
popf
add
jae
jle
sbb
loope
xor
mov
es
mov
out
frstor
aas
hlt
sub
adcb
push
icebp
popa
je
xchg
mov
cltd
arpl
inc
cmp
mov
mov
pop
jbe,pn
and
push
mov
aaa
loop
outsl
es
sbb
dec
aaa
inc
and
sahf
fistps
and
sti
xchg
movsl
and
xor
mov
sbb
cmp
and
imulb
dec
clc
fiadds
jb
dec
cmp
jl
loopne
test
fwait
ljmp
mov
cmp
xchg
cmp
mov
popf
jb
repnz
call
leave
xchg
push
push
fnstenv
outsl
test
lods
mov
insb
xor
jg
and
or
insl
xchg
sti
xchg
cltd
push
lds
ret
in
cmc
aad
in
push
inc
mov
sbb
popl
mov
xor
outsl
aam
pop
mov
pop
add
dec
inc
dec
lock
mov
mov
xchg
pop
loopne
and
clc
sarb
int3
nop
cwtl
adcl
in
repz
int
inc
mov
sahf
jbe
jecxz
fbstp
test
loopne
adc
jbe
xchg
lahf
adc
mov
inc
orps
cmpsb
sarl
into
data16
test
imul
pop
jge
mov
cmp
lea
mov
repz
lret
or
mov
and
adc
dec
in
fs
fisubrl
xchg
out
jl
stc
out
in
sbb
rcll
and
dec
xor
clc
jb
mov
outsb
inc
push
push
mov
inc
inc
ret
xchg
jge
movsb
lock
loope
push
pop
in
addl
mov
in
push
pop
add
cmp
pushf
call
loopne
ror
das
mov
mov
roll
push
addr16
rorb
and
cli
movsb
mov
add
jae
imulb
js
fnstenv
stos
orb
je
mov
icebp
mov
adc
xor
dec
xchg
std
inc
sbbl
outsb
scas
rcl
xchg
idivl
mov
out
icebp
js
sub
sub
jp
outsb
roll
dec
clc
out
scas
imul
fistl
adc
adc
pusha
jl
lcall
dec
stos
pop
cmc
stos
fmull
je
ror
movsl
lahf
ds
shlb
cmp
mov
add
mov
lahf
mov
outsl
mov
imul
mov
rcrb
mov
out
and
sahf
mov
lret
pop
jle
add
stc
fbld
mov
add
dec
push
movsl
or
xlat
bound
lahf
movsb
jnp
cmpb
sbb
sub
sbb
mov
lret
sub
jae
leave
push
sarb
mov
iret
shll
out
int
lcall
jns
sahf
push
jl
in
mov
add
mov
cmp
dec
mov
lcall
movsb
mov
dec
mov
outsl
xor
hlt
pop
leave
adc
add
mov
nop
clc
mov
and
sub
adc
dec
xlat
mov
add
movsb
fildl
sub
mov
jle
movb
jge
pop
inc
lods
lods
mov
lahf
shll
int3
push
xor
inc
das
lea
int3
jo
jns
rorl
push
mov
vphsubbw
adc
roll
cmp
xchg
or
adc
test
xor
cli
ja
xchg
inc
pop
or
outsb
in
daa
jno
pop
pop
pop
pop
cmpsl
aam
cltd
fstl
push
push
dec
pop
insb
mov
xrelease
adc
ds
enter
mov
jmp
jle
int3
loop
jge
push
mov
clc
jle
and
push
lods
test
pop
ret
cltd
jne
mov
push
in
mov
jp
addr16
clc
in
push
mov
shl
xor
xlat
mov
mov
sub
push
mov
sub
mov
mov
andl
mov
push
cmp
and
stos
pmullw
jecxz
cmp
icebp
push
outsb
push
pop
pushf
fisttps
lock
insb
adc
add
dec
pop
xchg
sub
cmp
lods
shlb
std
fdivs
inc
mov
cmp
scas
ja
and
mov
jge
cld
incb
add
cmp
mov
pop
mov
mov
sbb
fcomps
cmp
sbb
in
inc
imul
push
push
mov
sbb
pop
int
adc
sub
dec
insl
pop
je
mov
std
cmpsl
cmp
and
loope
cmp
lret
in
stc
sub
add
or
mov
mov
push
ret
int
ret
fildll
or
pop
and
push
inc
jns
push
mov
addb
cmp
adc
movsb
xor
jbe
gs
add
mov
jno
or
sub
jbe
loopne
push
jns
bswap
jns
ds
std
fldt
cmp
mov
cmp
mov
outsb
mov
xor
mov
rcrl
push
mov
fmulp
jae
popa
adc
mov
xor
pop
cmp
fs
dec
fs
pop
push
or
loope
inc
add
push
and
push
mov
ja
leave
mov
scas
in
fcoms
and
insb
or
inc
pop
xchg
fcompl
cmpsl
addb
mov
loopne
icebp
movsl
fdivrl
sub
repz
or
jb
fldl
dec
clc
mov
pop
mov
loopne
mov
pop
lock
lods
lods
push
add
cmp
xchg
inc
adc
lea
push
and
pop
ja
test
xchg
jl
push
stc
and
hlt
insl
and
cmpb
push
movsl
movl
scas
mov
mov
mov
mov
inc
retw
cli
jbe
xchg
mov
mov
cmp
fs
jae
adc
mov
jae
cwtl
xchg
cmp
push
xor
or
mov
lcall
jmp
pop
sub
sbb
and
sbb
or
loope
xchg
xchg
jo
movsl
cmp
sbb
int3
lret
dec
push
xor
push
stc
jo
out
clc
cld
dec
fldt
rclb
sbb
jg
sbb
push
jmp
lock
cld
jbe
xchg
add
sub
ficompl
xchg
lahf
cli
mov
push
testb
stos
push
stos
jno
lret
pop
push
imul
pop
xchg
ficompl
shl
lods
into
push
test
cmc
jg
int3
jmp
ss
xchg
ja
push
inc
mov
mov
lock
arpl
and
sbb
int
cmpsb
pop
repnz
testl
mov
xor
cwtl
test
sahf
std
sub
inc
dec
add
jno
dec
pushf
jno
jle
es
mov
lret
pop
fucomp
xchg
pop
adc
aas
mov
and
mov
imul
cmc
or
fwait
dec
add
mov
ret
adc
ficomps
add
shrb
in
lea
stos
ficompl
push
xchg
cld
jne
push
fisttpl
ficomps
data16
stc
cs
dec
xorb
bound
mov
push
and
or
scas
cmc
add
iret
outsl
or
fsub
push
aam
test
mov
rolb
subl
loope
ds
nop
jne
or
pop
or
sub
pop
mov
jmp
je
mov
push
enter
adc
xor
jne
cmp
or
insb
pop
push
sahf
int3
repz
sahf
rcll
cmp
push
adc
sub
push
pop
popa
cs
mov
add
jo
loop
mov
je
mov
push
pop
sbb
push
and
in
bound
pushf
or
pop
scas
sbb
stc
xchg
into
daa
movsb
xor
jns
scas
in
test
push
sub
mov
jne
loope
sbb
in
sbb
xor
adc
cmpsb
sub
mov
jge
mov
stos
mov
mov
adc
xchg
out
imul
cmp
rorl
xor
push
add
repz
jge
int
mov
pushf
or
js
inc
lods
js
lret
in
jp
dec
or
into
lock
fdivr
or
add
cmpsb
je
jmp
jmp
adc
inc
push
outsl
jg
rcr
dec
leave
mov
jae
xchg
xchg
push
into
mov
or
ficompl
sti
sub
mov
jb
lahf
push
sti
push
sbb
sti
cmp
enter
cmc
mov
sub
inc
xchg
adc
popf
cmp
clc
adc
xor
sub
jmp
cs
int
ja
cmp
push
hlt
adc
insl
push
ja
fiadds
add
stos
imul
mov
popf
cmpsl
loopne
sbb
sbb
push
adc
dec
inc
jnp
sbb
adc
add
push
push
sti
and
divl
jbe
ret
jecxz
inc
cmp
jb
ret
sbb
xor
addl
mov
enter
mov
xor
scas
inc
cmp
cmp
fs
sub
data16
jbe
add
imul
push
test
fisubs
or
or
das
push
dec
gs
add
sti
cld
sub
out
xor
pushw
out
cmp
in
insb
mov
mov
clc
dec
add
xchg
push
std
add
in
mov
and
in
imul
sbb
popf
push
jo
mov
inc
xor
and
sub
iret
loope
dec
movsl
push
and
lret
sub
arpl
add
ss
xchg
loop
adc
movsbl
adc
ljmp
sub
jno
jne
lret
sub
push
lea
cmpsl
lea
jle
lds
movsb
lods
outsl
xchg
xchg
lods
and
int3
sbb
adc
test
and
or
xlat
les
fldl
adc
orl
xchg
cmp
push
push
xor
push
mov
xor
insl
pusha
test
sub
and
movb
inc
lahf
in
jbe
dec
rolb
roll
xlat
jne
jnp
jg
lcall
mov
sahf
pop
mov
jbe
sub
call
pushf
mov
jp
add
jge
or
cmpsb
inc
mov
inc
negb
imul
aas
iret
jp
stc
outsb
test
in
aad
fists
adc
push
add
sbb
stc
mov
cmpsb
enter
shl
xchg
add
fdivr
fiaddl
fsubr
in
movsb
arpl
mov
cmp
cs
sub
les
sub
push
mov
daa
inc
into
dec
ljmp
mov
sbb
aam
clc
aam
mov
sbb
inc
orb
jecxz
bound
imul
and
clc
add
ljmp
xor
xchg
lret
cmc
xchg
hlt
mov
call
ret
stc
push
add
sbbb
mov
ja
dec
aaa
jecxz
sarb
pop
pushl
jmp
out
dec
in
adc
mov
icebp
test
std
push
dec
ds
test
imul
mov
xchg
xchg
jo
xchg
adcl
sahf
out
and
insb
popa
dec
sub
push
lods
loop
push
cmp
ja
inc
xor
jb
adc
repz
xchg
and
or
or
cmp
sbb
lcall
mov
xor
xlat
mov
imul
cmp
jle
inc
or
dec
push
xchg
adc
shll
fdivrl
pop
repnz
popa
sub
xlat
push
fstps
mov
sub
sbbb
ret
sub
sbb
pop
cmpsb
daa
jecxz
stc
and
mov
test
adc
xchg
inc
jl
scas
xor
leave
ljmp
cmpsb
popa
jne
icebp
in
dec
mov
mov
sbb
add
andb
scas
incb
jge
mov
push
dec
pop
popa
push
xchg
cld
add
and
push
loop
dec
xor
mov
jge
inc
mov
dec
cmpsl
cmpsl
rcr
sub
sbb
inc
fsubr
jp
das
shll
pop
aas
add
xchg
push
int3
inc
aaa
in
ret
dec
add
push
mov
and
cmp
inc
adc
in
adc
rcrl
clc
and
inc
sbb
js
push
add
or
jle
or
fnstsw
mov
pop
inc
imul
out
mov
fdivrl
lahf
mov
loope
stos
and
pop
mov
jne
sbb
push
adc
xor
aas
ljmp
mov
test
stos
push
xchg
cmp
clc
mov
shrb
lods
stc
cmp
mov
orl
cmp
mov
inc
call
lcall
and
dec
jae
repz
push
xchg
jb
das
jbe
push
sahf
jge
cmp
xchg
lahf
mov
lods
repnz
jge
orl
jo
aas
out
stos
xor
sbb
fstpl
xlat
or
insl
pop
iret
inc
fimuls
add
xorb
dec
ret
add
add
mov
push
and
and
mov
or
jns
lahf
sub
sbb
lods
rcl
nop
sbb
mov
pop
adc
repz
fadds
push
int
in
lret
cmp
shl
push
insl
leave
repnz
add
test
mov
ljmp
fiaddl
mov
push
lret
sub
stc
sbb
in
daa
sbb
jbe
fmul
xchg
fisttpl
divb
dec
dec
enter
dec
mov
in
les
fisttpl
cmp
mov
arpl
pop
iret
pop
sbb
clc
inc
out
jecxz
mov
or
mov
insb
loop
push
faddp
and
mov
imulb
lret
xor
je
jg
aam
lahf
repz
pop
mov
dec
ja
inc
jge
imul
in
je
jmp
mov
mov
repnz
test
aam
and
mov
xchg
shlb
add
adc
nop
mov
jne
xor
inc
cmpsb
mov
and
mov
cmp
out
or
mov
popa
pop
push
andl
pop
push
mov
subl
mov
negb
lods
pop
cltd
fidivrs
dec
in
pop
ret
loope
push
daa
xor
lods
inc
lock
dec
ret
dec
jle
push
das
or
or
bound
and
test
nop
mov
push
ljmp
loopne
bound
xor
and
cmpsb
cmc
push
loopne
enter
push
pop
and
insb
gs
mov
negb
mov
clc
cmp
xorl
cmp
add
adcb
xchg
pop
aaa
cmp
sub
adcl
or
xor
xchg
pushl
sbb
cmpsb
cmpsb
mov
not
adc
subb
push
jl
mov
mov
ret
je
mov
mov
dec
and
and
popa
mov
mov
setbe
inc
inc
mov
jmp
lcall
std
inc
or
popa
adc
fdivrl
iret
out
jmp
and
sbb
cwtl
pop
inc
adc
pop
ret
aaa
jno
pop
clc
or
ds
out
jge
xor
lret
or
outsb
sti
pop
sub
sbbb
xor
outsb
or
jge
add
lea
insb
xchg
adc
jp
repz
mov
pop
stc
xchg
push
insb
sub
outsl
insl
mov
pop
in
std
sbb
imul
mov
cmp
dec
jno
adc
mov
dec
sbbl
mov
sbb
iret
imul
xor
icebp
clc
andb
scas
cld
cli
ficomps
ss
and
je
mov
call
nop
insb
outsb
cmp
fcoms
pushf
in
jmp
out
mov
ds
push
adc
adc
sbb
lret
repnz
mov
inc
dec
ljmp
hlt
roll
rorb
xor
pop
push
out
shll
inc
std
fcomps
xchg
mov
pushf
mov
sbb
outsl
jle
mov
mov
add
sub
dec
hlt
pushf
call
shll
add
dec
cmp
mov
lret
daa
roll
fwait
jbe
in
test
ss
cwtl
int3
aaa
jl
in
mov
push
bound
cmp
sti
adc
ret
jmp
xchg
dec
dec
cmpsb
mov
xlat
movl
mov
xlat
push
mov
fistl
cmp
lret
outsb
mov
push
pop
xor
xlat
mov
cltd
mov
cmp
decl
cmp
adc
or
pop
and
mov
adc
enter
inc
pop
popa
pop
ljmp
xor
movl
loopne
fstl
adc
xchg
in
outsb
in
gs
lods
fldl
push
mov
jno
enter
push
jbe
test
insl
lret
mov
stos
adc
bswap
or
out
iret
gs
fdivrs
cmp
iret
movsl
std
jmp
mov
imul
lock
scas
loopne
mov
mov
je
adc
mov
mov
inc
inc
pop
sub
lret
aam
ffreep
jge
in
inc
jno
mov
adc
xor
das
les
pop
push
divb
ficoms
cmp
mov
pop
pop
jbe
adc
mov
in
mov
mov
sbb
pop
in
loope
adc
lret
out
mov
fwait
pop
push
xor
ljmp
pop
daa
ja,pt
mov
ja
into
pop
in
dec
stos
cwtl
push
mov
insb
les
pushf
adc
fisubrl
fildll
pusha
mov
pusha
mov
mull
test
in
in
cmp
insl
sbb
and
repz
cltd
roll
data16
std
adc
inc
pop
inc
int
sub
nop
adc
cmp
jbe
xchg
xchg
cmp
jno
sbb
sub
pop
pop
das
pop
jle
sbb
and
imul
icebp
leave
jmp
adc
xlat
inc
filds
cmc
jo
sahf
sbb
rclb
repz
and
scas
arpl
inc
jae
push
fs
adc
out
leave
daa
cwtl
imul
xchg
inc
push
jns
cmp
aam
popf
cmp
or
push
cmp
shr
sub
pop
shl
fsubl
stc
mov
jb
inc
nop
lds
or
cmp
dec
dec
mov
mov
in
inc
out
adc
mull
fwait
sbb
mov
fidivl
sbb
clc
xlat
add
xor
push
insl
jae
mov
sbb
and
cli
xchg
shlb
cmp
cmc
pop
and
pop
sub
xor
sub
or
rorb
pop
jne
mov
jae
cmp
sbb
mov
push
jae
loopne
subl
dec
fbstp
cmp
add
fistpll
xchg
jbe
cmp
sub
fwait
jo
adcl
shlb
std
xlat
arpl
dec
jae
loopne
dec
pop
nop
push
loopne
cmc
leave
inc
mov
xor
jg
imul
lods
xchg
aam
xchg
mov
and
je
fistpll
sub
add
jno
and
mov
xor
jns
out
sbb
pop
into
mov
scas
iret
sbb
sbb
cmp
enter
dec
xchg
das
inc
adc
push
and
cmp
push
outsb
push
stc
mov
push
lret
add
lcall
or
and
xchg
pop
and
and
into
or
xlat
mov
jae
dec
jl
scas
icebp
and
dec
jmp
push
aam
jns
adc
in
stos
jp
shll
xchg
pop
stos
lahf
fiadds
dec
outsb
jl
stos
lcall
xor
cmp
xchg
adc
cmpl
mov
mov
into
and
dec
pop
movsb
icebp
imul
or
jp
mov
adc
and
arpl
add
push
jp
or
cmpsl
lahf
fwait
pop
loope
xlat
jle
pop
sub
sbb
ljmp
ljmp
or
je
or
fcomps
lahf
js
mov
cmp
jmp
adc
fbstp
sahf
adc
test
stos
and
in
repnz
lcall
inc
dec
or
cmpsl
cmp
call
je
es
test
pop
sub
push
mov
out
fwait
test
popf
aas
jge
jno
mov
inc
rcrb
push
imul
lods
or
fs
adc
and
or
adc
and
arpl
mov
jne
out
ss
stos
dec
pop
jo
sbbl
mov
inc
aam
int3
popa
push
addr16
gs
xchg
out
ds
mov
xlat
sbb
add
sub
lock
int3
popa
dec
sbb
pop
xchg
mov
push
fldt
xchg
lahf
fimull
pusha
pop
fadds
xor
adc
pop
dec
pop
mov
lahf
stos
test
je
jp
outsl
leave
mov
loopne
out
or
jne
mov
fwait
jge
inc
fisubl
subl
ds
std
add
insl
inc
out
pop
pop
test
cmp
je
ret
dec
data16
lds
mov
or
scas
cmp
mov
push
aam
dec
jg
mov
nop
cmp
ljmp
pushf
stos
push
dec
daa
sti
call
cs
test
jmp
adc
mov
mov
stc
and
sub
rcl
outsl
call
sbb
mov
xchg
lret
cmp
dec
aas
add
add
push
mov
inc
sub
shll
aaa
cmc
rcl
into
cmp
pop
fs
push
mov
jns
cmp
daa
out
mov
jo
icebp
mov
dec
mov
sahf
adc
add
inc
lea
imul
mov
inc
ss
xor
sub
sahf
push
loope
push
mov
jge
aam
jns
lods
mov
mov
aas
or
or
push
sub
mov
xor
pop
rorb
or
fists
cmp
loop
or
push
cli
dec
loope
and
push
mov
ljmp
das
sbb
in
inc
push
sbb
enter
xchg
xor
lods
mov
ds
in
pop
movsb
push
jl
ljmp
and
inc
dec
cmpsb
fcos
sub
fldl
mov
sbb
scas
pop
lods
shlb
sub
rolb
jmp
jo
push
jle
mov
lret
inc
mov
fidivl
pop
ljmp
cmp
outsb
sbb
push
sbb
mov
mov
leave
int3
addb
xchg
popa
inc
iret
and
into
push
out
out
and
cmpb
push
push
sahf
add
daa
xor
lret
lea
sub
cli
movsb
and
cltd
cmp
xchg
inc
shlb
dec
pop
and
add
stc
and
imull
addr16
mov
pop
rolb
insb
cwtl
fsubl
fstpl
call
popf
jne
or
dec
xchg
inc
in
pop
mov
mov
incl
rcl
push
and
sbb
outsl
push
jp
data16
in
cmpsb
jmp
xchg
jae
sub
sbb
in
stc
push
cmc
sahf
lcall
jne
fwait
test
lea
adc
push
pop
lcall
aad
and
testl
pop
jae
push
pop
jb
xchg
mov
or
and
lock
or
xchg
xchg
mov
ljmp
loope
sbbl
jg
daa
sub
xor
add
clc
push
mov
nop
xor
out
inc
iret
mov
cmp
mov
nop
jg
rolb
inc
inc
popa
or
mov
inc
add
mov
sbb
pop
inc
xchg
inc
stos
sbbl
fwait
dec
push
pop
rclb
lock
leave
jne
inc
incl
lock
jns
jp
pop
imul
jl
push
lock
and
cltd
cmpsl
cmc
sarl
lahf
cli
lock
test
inc
xor
xor
sbb
rorl
mov
sbbl
lret
cltd
pop
adc
xorb
ljmp
jecxz
push
jno
bound
iret
jbe
push
daa
cs
hlt
sbb
js
into
add
push
pop
push
cmpsl
add
aas
cmpsb
pop
daa
out
push
ja
cmc
jmp
jge
push
and
sub
in
movsl
mov
das
out
sub
out
jl
cmp
insb
adc
push
adc
xor
and
aad
cli
dec
mov
call
inc
jns
adc
fisttps
xor
cmp
cmpsl
pop
add
push
jge
andl
call
push
push
popf
imul
sahf
lret
cmp
dec
mov
xlat
outsb
cmpsl
inc
pop
aas
call
dec
pop
stos
dec
add
xor
scas
lret
dec
mov
and
push
xchg
xor
mov
xchg
and
pusha
sbb
mov
push
into
mov
jl
es
movsb
sti
jae
in
and
mov
adcl
and
jge
xchg
xor
inc
outsl
pavgw
mov
adc
jae
or
ret
xor
cs
scas
mov
dec
ljmp
mov
pop
out
insb
ret
adc
xchg
clc
rcll
sbb
stos
add
cmp
cmp
fs
insb
stos
daa
cmpsb
mov
jg
sub
fidivl
popa
jecxz
or
inc
cmc
stc
dec
daa
jmp
lret
repnz
jo
aaa
leave
xor
lods
ret
push
iret
es
xchg
cmp
xlat
dec
push
loop
aas
sahf
les
pop
clc
hlt
adcl
movsb
cmp
movsb
jecxz
testl
adc
xchg
in
test
pop
mov
sub
je
and
out
dec
shlb
xchg
imul
jno
jl
fcoms
aas
mov
dec
cmpsb
push
dec
sub
adcb
jp
add
iret
mov
push
dec
cs
and
movsb
and
addr16
and
cmp
test
push
stos
iret
inc
mov
movsl
cld
dec
movsb
les
add
pop
and
lcall
cmp
repz
out
mov
addr16
pop
mov
outsl
mov
inc
jp
cld
adc
lock
jae
pop
or
sub
jo
stc
sbb
inc
jb
mov
shlb
or
mov
and
jno
pop
outsb
sahf
popa
aam
sub
imul
outsb
or
adc
sti
cmp
test
enter
fisttps
mov
dec
popf
ljmp
shrl
or
xchg
jo
pop
jmp
jmp
mov
ljmp
jo
push
sti
adc
out
movsb
bound
sbb
inc
mov
adc
add
sub
push
mov
or
xchg
imul
js
mov
lods
jle
loope
lret
jne
fldenv
push
pop
push
cmp
mov
stos
loope
jp
fwait
arpl
mov
repz
adcl
call
push
rolb
mov
inc
out
out
xchg
insb
data16
ja
jno
pushf
cmp
xchg
cmp
dec
xor
scas
xchg
and
cli
lret
jns
sub
and
cmpsl
loop
jne
in
fldl
sbb
push
bnd
dec
outsl
cmp
push
sub
ret
jle
cmp
mov
sbb
int
enter
xchg
xor
or
daa
arpl
out
roll
mov
xor
test
sbb
sbbl
mov
fs
loop
mov
out
pusha
pop
push
int3
sbb
scas
xor
fmuls
sbb
negb
push
cmp
or
lds
or
mov
lods
pop
outsb
fstpt
fwait
cltd
outsb
insb
leave
mov
adc
sbb
xor
push
push
aas
xchg
pop
jp
dec
inc
int3
cmp
out
ret
subl
xchg
pop
imul
sub
sti
mov
inc
xchg
sub
mov
rcl
enter
push
push
and
insb
cwtl
out
lods
cld
sub
pushf
jp
scas
scas
out
or
std
push
mov
fld
dec
pop
pop
mov
insl
cmp
nop
push
inc
mov
dec
lcall
sub
dec
pop
cltd
rcrb
fildll
jmp
loop
testb
fldcw
repz
scas
sbb
xchg
mov
jns
testl
movsl
cmc
fs
push
insb
scas
or
hlt
or
adc
add
push
jmp
xor
test
mov
jb
aas
adc
inc
mov
jmp
push
jl
nop
jmp
inc
aaa
divb
xchg
stos
cmp
in
stos
cmc
inc
jne
and
dec
xor
leave
push
sub
fsin
add
jb
jmp
xlat
sarb
out
movsb
outsb
adc
cmpb
xor
jecxz
jbe
cltd
loopne
scas
sub
pop
das
xor
or
inc
test
decl
js
cmc
fistpll
add
rclb
inc
ret
mov
in
frstor
xchg
pop
cmp
lods
mov
repnz
mov
stc
inc
or
loop
loope
dec
cmp
mov
cmp
test
sbb
fldenv
sbb
mov
mov
push
sub
loop
xor
lcall
mov
dec
into
insb
repz
pop
dec
imul
xor
scas
adc
rcr
repnz
mov
ss
inc
fdivl
lret
pop
lret
dec
or
xchg
movl
in
mov
push
cmp
insb
jle
push
mov
add
mov
mov
ja
push
aas
pop
popaw
xchg
mov
int3
and
out
stc
arpl
xor
push
cmp
push
jmp
or
rcl
cwtl
andb
addr16
pushf
std
or
stos
push
fbld
and
and
out
leave
mov
lret
in
pop
adc
mov
jge
in
fidivrs
sub
cltd
xor
inc
mov
inc
push
jae
lret
sbb
mov
rcll
jne
insl
fcompl
mov
scas
ss
and
lahf
fistl
mov
xchg
sbb
mov
add
out
outsl
push
push
fisttpl
pusha
sti
shll
dec
movsb
or
xchg
stos
sbb
push
test
leave
sbb
cmpsl
add
dec
addb
dec
mov
push
lahf
dec
jae
xorb
cmpsl
mov
mov
in
fwait
mov
ljmp
int
cs
adc
cmp
sub
outsl
in
push
pop
cmpsb
xchg
jne
inc
int
pushf
stc
lock
divl
iret
and
mov
out
and
pop
int3
stos
mov
or
cmp
or
dec
mov
sbb
sahf
sub
push
pop
inc
mov
pop
xchg
sub
push
mov
push
inc
loopne
hlt
cli
mov
jmp
push
xor
pop
ret
push
adc
pxor
jmp
adc
dec
xchg
jp
jge
mov
mov
mov
data16
repz
xor
mov
xor
push
xchg
ja
ja
sbb
and
popf
jmp
adc
cmpsb
test
add
push
mov
in
xor
push
pop
movsb
in
scas
mov
js
loope
adc
dec
inc
push
loop
xchg
hlt
mov
stos
xor
or
sbb
addr16
inc
enter
jbe
cmpsb
pop
mov
stos
or
pop
icebp
jp
pop
jae
adc
arpl
add
cmp
xchg
and
xchg
jmp
test
add
js
jge
ljmp
shrl
movhps
cmc
test
add
aaa
repz
cs
mov
fbstp
outsb
sbb
aad
inc
mov
enter
xor
xchg
lret
pop
add
or
daa
mov
jbe
clc
push
ljmp
dec
xchg
mov
cmp
test
out
outsb
std
push
orb
imul
mul
popa
data16
clc
sub
xchg
inc
fdivp
lds
jecxz
aad
mov
mulb
cmp
loop
cmp
les
imul
inc
push
fdiv
and
int
out
pop
addr16
sahf
in
cli
jmp
lahf
mov
add
jne
test
jns
cltd
inc
inc
out
xor
jmp
sbb
push
fcoml
hlt
movsl
xor
dec
stos
jb
sub
jnp
cmp
and
aad
add
xor
or
jl
jbe
mov
fisubs
xchg
mov
pop
cmp
inc
cmp
test
xor
incb
jmp
inc
and
inc
push
call
push
jns
push
aaa
test
rorb
cs
and
xor
pop
popl
test
aad
push
je
push
pop
jbe
lods
dec
sbb
inc
stc
data16
nop
int3
in
cli
or
dec
add
in
pusha
or
in
xor
adc
dec
leave
outsb
mov
lahf
mov
rolb
insb
dec
std
jnp
or
rcrb
xchg
lcall
cli
mov
and
popa
lret
aas
jnp
out
fsts
push
frstor
inc
pop
dec
push
add
push
jl
inc
aad
mov
xchg
push
imul
mov
mov
jbe
cmp
xchg
cmp
test
mov
in
int
sub
lahf
adc
andl
cs
out
adc
cld
testl
inc
pop
adc
and
scas
dec
aas
das
fxch
in
mov
sub
mov
dec
pop
loopne
jns
xchg
cmp
mov
mov
lock
rep
addr16
and
sub
sti
shlb
rclb
sub
stos
push
mov
add
or
scas
jo
mov
xchg
mov
cmp
cmpsl
sub
lock
imul
lock
fldt
lods
bound
jp
jbe
xor
test
fldenv
sub
loopne
test
inc
xchg
mov
sub
cmp
xchg
repz
sbb
fdivrl
xor
adc
data16
lods
pusha
lret
mov
sbb
mulb
imull
mov
xchg
push
out
mov
inc
push
and
xchg
pop
pop
scas
jmp
cmp
imul
xchg
or
and
ds
out
xchg
fistps
pop
cmp
fs
sbb
cltd
lret
sti
push
mov
aas
lahf
pop
xor
aam
push
fistpl
flds
dec
mov
mov
mov
popa
mov
mov
mov
fsubs
mov
adcb
rol
push
sub
sub
mov
xor
xchg
dec
fiaddl
jae
adc
sub
cli
fisttpll
inc
bound
push
xchg
push
sub
xchg
fwait
mov
mov
add
jae
insb
mov
stos
sbb
or
lods
outsl
xorb
leave
xor
mulb
je
mov
mov
repz
push
int3
and
adc
push
cmpsb
mov
rorb
and
jb
out
inc
lahf
sub
push
mov
pop
test
mov
lahf
pop
pop
pop
inc
fs
repz
push
sarb
dec
cmp
std
mov
dec
dec
cmp
pop
fwait
pop
lock
popf
add
sub
arpl
mov
cmp
dec
cwtl
jp
sbb
pop
imul
xadd
jecxz
cmp
sub
or
sti
insb
fdivrs
outsb
mov
movsl
daa
es
adc
mov
jne
lea
pop
pop
lock
pop
jge
mov
out
loopne
scas
repnz
add
sub
mov
pop
jp
les
pop
pop
or
les
sbb
nop
pop
into
mov
shll
out
add
mov
das
mov
dec
je
arpl
cld
cmp
out
or
mov
mull
cmp
ret
mov
inc
mov
jns
push
js
decl
ja
push
and
call
test
cmp
in
pop
loope
dec
imul
insl
add
shl
jns
movl
rcrl
shlb
adc
mov
std
adc
lret
jo
clc
ljmp
cmpsb
pop
ss
out
fmulp
inc
push
test
mov
ds
stc
data16
adc
xor
push
mov
cmpsl
arpl
jge
xor
outsb
lcall
scas
cmp
mov
cmc
jb
movsb
loopne
mov
and
shll
xchg
fildll
addr16
jne
xchg
pmaxub
loope
iret
in
xlat
repnz
mov
ljmp
sub
fs
mov
jge
mov
rcr
cmp
fcoms
ds
ret
pop
lcall
pop
loopne
das
dec
push
pop
mov
cmp
loop
xor
ds
and
test
gs
or
pushf
les
scas
xor
pop
fidivrl
rorb
aam
jne
cmp
inc
mov
dec
out
mov
push
in
test
mov
loopne
popa
or
test
shlb
and
mov
loopne
addr16
inc
xor
aas
test
ret
subb
jecxz
xchg
addl
push
sbbb
jbe
add
lret
jne
cmpsb
xchg
or
push
or
inc
stos
dec
mov
mov
aaa
test
daa
jo
dec
push
in
jb
inc
call
mov
scas
push
and
ret
inc
sbb
push
pop
xchg
inc
call
lods
xchg
jp
outsl
xchg
sub
dec
add
out
lods
in
icebp
out
mov
xor
xor
fucomp
mov
pop
mov
and
xor
mov
xor
push
call
ja
scas
mov
decl
xchg
lods
cmp
cmp
cs
push
scas
notb
iret
lret
adc
pop
add
inc
xchg
push
inc
in
and
int3
lahf
or
ljmp
repnz
jbe
inc
popa
adc
cmp
mov
inc
push
lret
xchg
call
mov
push
popa
in
into
and
sbb
insl
stc
mov
push
mov
push
mov
sbb
mov
mov
data16
bound
daa
xor
inc
into
jle
fs
mov
stc
rolb
mov
insb
jl
cmpsl
out
push
push
mov
nop
outsl
mull
imul
mull
xlat
adc
mov
mov
les
mov
sar
pop
xor
nop
add
loopne
enter
push
and
out
mov
lods
sub
cmp
xchg
mov
nop
roll
clc
jl
mov
movsl
sahf
aaa
push
mov
popa
jg
dec
xor
jns
add
and
inc
mov
outsl
cwtl
mov
push
xchg
sahf
add
in
or
fs
fsubs
adc
test
fidivl
or
shll
mov
push
rcl
es
jb
stos
mov
clc
push
repz
or
jbe
into
dec
leave
dec
pop
out
aas
mov
ja
and
or
jae
inc
push
iret
pusha
popl
add
enter
loopne
scas
movsb
mov
mov
cmc
fsubr
inc
pop
dec
adcb
movsl
pushf
cmpsl
int3
pop
mov
insl
or
mov
lea
jb
or
or
outsl
jne
add
ret
and
lcall
mov
add
test
pop
adc
insl
inc
push
shl
leave
add
fndisi(8087
out
pushf
fldenv
jo
fcmovb
icebp
cli
and
fstps
xchg
in
mov
jo
ret
icebp
fs
in
fwait
not
mov
sub
adc
insb
dec
in
jae
int3
jae
push
fwait
add
sub
icebp
call
ret
mov
mov
xchg
dec
test
scas
ss
inc
hlt
jle
inc
stos
stc
adc
loope
push
fdivr
dec
ficomps
movsb
enter
and
inc
dec
mov
ficompl
sub
leave
xor
lret
sbb
mov
shrb
mov
fs
xor
mov
fadd
cli
dec
dec
mov
mov
cmpl
jae
out
sbb
mov
ret
popa
es
xchg
addr16
sti
and
adc
in
sub
out
and
jle
scas
lcall
rolb
lret
and
sub
fidivrs
into
push
or
push
subb
push
pushf
lcall
or
lcall
testl
js
das
outsl
out
inc
arpl
cmpsl
iret
out
jle
mov
enter
mov
dec
cmp
sti
xor
aad
clc
inc
xchg
pop
stos
adc
adc
lods
fsts
stos
into
test
insl
or
pop
mov
xchg
add
push
idivl
lea
mov
leave
fs
out
dec
cmp
fs
in
push
dec
hlt
pop
push
push
call
mov
ljmp
aam
and
xchg
adc
dec
ljmp
imul
jo
lock
pusha
jge
stos
xchg
inc
lcall
std
fstp
cs
push
inc
ss
ljmp
and
sub
mov
sbb
test
dec
out
ljmp
pop
pushf
js
mov
pop
hlt
jge
push
stos
mov
icebp
mov
in
inc
and
mov
das
push
outsb
cs
test
insb
jno
and
enter
sbb
or
pop
push
loope
jl
test
shlb
xchg
xlat
dec
out
incl
xor
popa
adc
out
jns
imul
shlb
xchg
aas
bound
sti
xor
enter
push
jecxz
inc
imul
jle
ljmp
sahf
dec
jmp
jp
sahf
outsl
repz
sbb
mov
jmp
xchg
in
jo
pop
fwait
mov
stc
popa
mov
subl
movsl
cmpsb
pop
ret
adc
outsl
fisttps
xchg
or
test
xchg
dec
inc
dec
add
sub
in
dec
dec
push
repnz
sar
dec
push
pop
pop
inc
ja
pop
sbb
call
pushf
lret
dec
iret
ret
aaa
into
adc
ret
imul
add
pop
lock
mov
or
add
sub
aaa
or
jp
jmp
sub
movsl
adc
lea
repz
adc
sahf
or
mov
jecxz
mov
aad
call
mov
or
push
lea
xchg
fidivl
mov
xor
out
xor
lcall
lods
cmp
rep
jle
mov
sbb
insb
jo
push
out
xchg
push
repz
lods
imul
inc
cwtl
jg
jmp
sbb
flds
adc
ret
lods
or
add
loop
inc
xchg
mov
fdivrs
and
aam
mov
and
ja
push
stos
and
pop
adc
lahf
dec
xchg
ret
repnz
aad
jle
hlt
inc
loopw
inc
cmp
mov
subl
dec
shll
imul
std
xchg
ficomps
xchg
jmp
out
mov
add
scas
xchg
out
inc
mov
jecxz
fcoml
test
xchg
mull
dec
in
roll
and
push
jmp
add
push
insl
out
sub
sbb
int3
mov
fwait
test
add
mov
jle
test
push
cmp
jno
jg
jnp
sarb
pop
sbb
push
fildl
and
outsb
push
lahf
scas
or
mov
lret
pop
ja
adc
mov
stos
mov
pop
ss
fsubl
outsl
test
mov
xchg
or
cmpsb
cmpb
dec
sub
out
xchg
cld
jne
push
fistpl
dec
daa
loop
push
inc
mov
inc
lds
add
inc
shrl
dec
sub
cli
shr
sub
push
loope
dec
test
sub
push
push
scas
fs
loopne,pt
pop
mov
popf
add
push
loop
out
xchg
and
shll
jg
mov
fchs
ljmp
mov
cmp
insb
xor
int3
lods
es
mov
movsb
adc
sbb
sti
je
and
and
lods
aam
sar
push
lea
in
and
out
ds
cmc
faddl
adc
jbe
js
rol
inc
dec
mov
jb
and
pop
add
in
and
or
into
int3
js
cli
cmc
inc
repnz
clc
xchg
stc
pop
pop
mov
mov
faddl
adc
arpl
dec
movsl
cmp
mov
aaa
pop
test
aaa
out
sbb
insb
shlb
clc
push
push
pop
or
dec
cli
ljmp
or
imull
ja
add
xchg
iret
sbb
or
mull
and
push
sbb
inc
mov
push
repz
mov
loopne
or
xchg
jl
and
fldl
or
cli
faddl
add
shll
ds
nop
pop
aad
cs
mov
fsubl
pusha
cmp
addr16
shrb
mov
fcoms
jg
add
or
mov
jecxz
mov
cmp
inc
call
scas
sbb
lret
jg
jae
stos
lock
add
fwait
ret
push
dec
cmpsl
or
neg
adc
add
mov
fisttps
xor
loope
add
loopne
leave
mov
clc
sbb
movsb
fwait
mov
lods
mov
mov
sahf
dec
and
pop
push
add
mov
shl
sub
or
cmc
movsb
imul
jge
lahf
fucomip
repnz
add
dec
and
daa
imul
test
out
ret
pop
cmp
insb
add
in
xchg
jg
scas
mov
cs
cmpsl
mov
andl
mov
lock
mov
pop
xchg
out
out
inc
aam
outsb
ja
sbb
test
xor
dec
movsl
jbe
imul
frstor
imul
repnz
jecxz
jae
cmp
out
pop
int3
dec
jns
mov
adc
pusha
mov
pop
shll
arpl
xchg
mov
or
sub
js
dec
imull
dec
push
das
fcomps
jmp
aam
cli
sahf
xchg
jne
cld
pop
pushf
xor
xor
jecxz
pop
xor
into
aas
cmpl
mov
xchg
int3
dec
jecxz
adcb
pop
cmp
insl
nop
dec
push
or
lods
sbb
sahf
imul
pop
add
jbe
mov
mov
push
stc
cmpsl
xor
mov
jmp
mov
sub
push
lock
in
push
push
mov
push
xor
in
mov
ljmp
leave
lds
loop
jb
mov
or
sub
test
push
lds
repnz
movsb
fstps
in
test
jl
cmpsl
insb
cmpsl
pusha
enter
out
inc
cwtl
test
push
test
adc
lock
cli
das
adc
inc
inc
pop
and
bt
xchg
xchg
paddusb
pop
dec
push
out
push
loopne
data16
mov
dec
pop
or
shl
dec
jb
pop
push
jns
jb
enter
cmp
add
in
imul
push
xchg
push
icebp
pop
adc
inc
mov
cmc
xchg
sbb
clc
jmp
pop
xlat
pop
lods
cmpsl
aaa
in
add
data16
mov
and
pop
pop
and
adc
inc
lahf
outsb
aam
test
shlb
aaa
push
mov
fbld
push
xorl
stos
pop
ficoml
pop
and
jne
int
bound
or
and
cmc
gs
sub
dec
shr
dec
mov
sbb
sbb
jne
jle
mov
into
sti
mov
lret
out
adc
lret
aaa
leave
mov
enter
pop
pop
mov
lods
xor
das
push
or
mov
loope
xor
popf
sbb
clc
jmp
or
imul
push
bound
dec
mov
xchg
imul
pop
push
ret
test
sub
ljmp
push
ret
cmpb
cmp
push
mov
ret
icebp
mov
fcom
not
mov
adc
jmp
test
rcll
sub
in
mov
and
out
cmpsb
cmp
test
mov
movsb
sti
sub
mov
push
pop
gs
or
leave
jp
lahf
stos
out
sub
aas
sub
sub
sahf
setne
pop
std
ja
mov
int
hlt
or
xor
std
and
mov
in
iret
ss
test
orb
loope
rolb
pop
add
add
add
inc
sti
aas
je
inc
out
sbb
pop
int3
mov
jae
in
sub
lret
push
xchg
rcrb
sbb
mov
xchg
jae
mov
or
lahf
xchg
out
inc
negl
inc
add
sub
inc
mov
pop
inc
dec
insb
hlt
in
xor
fcompl
scas
cs
clc
scas
cs
enter
sub
loop
dec
hlt
fcmovbe
jns
push
repz
push
xchg
out
mov
scas
hlt
mov
jp
rolb
xor
ss
xchg
inc
test
push
loope
mov
test
ja
lea
xor
pop
int3
jo
rcrl
pop
or
push
movsb
call
xor
mov
xor
repnz
aas
pusha
jnp
mov
fdivrl
movsb
xlat
jns
nop
mov
out
xor
dec
rcrb
add
xchg
rcrb
adc
dec
fildll
add
push
enter
sub
insl
jno
icebp
fstps
jle
jecxz
push
fisttpll
pusha
daa
jge
jae
xor
hlt
adc
xchg
hlt
pusha
call
imul
xor
jmp
xorb
fwait
push
call
xor
jo
imul
dec
mov
aas
sbb
lahf
mov
xor
cmp
stc
cmpsb
jo
add
loopne
cmp
or
inc
cmp
imul
nop
push
bsr
sbb
or
aad
or
loop
std
sub
pop
daa
pop
popa
inc
ret
cld
fwait
mov
add
jb
je
inc
mov
mov
xchg
mov
push
divb
ds
je
xor
aad
rcll
jns
lret
and
xchg
sub
pop
jb
push
add
lods
stc
fldl
adc
mov
mov
xchg
or
inc
jecxz
inc
repnz
and
cmpsb
mov
movsl
dec
push
iret
mov
fldcw
test
xchg
xor
pop
ljmp
addr16
jns
push
movsb
sahf
add
imul
outsb
fmuls
pop
inc
cmpsb
xchg
pop
or
cld
cmp
psubb
xlat
stc
mov
xchg
dec
adc
sbb
idivb
inc
push
xchg
js
sbb
cli
mov
aad
mov
ret
cltd
popf
stos
lahf
es
pop
jb
pop
stos
orl
jecxz
or
ja
add
mov
sbb
jge
rcrl
fs
mov
leave
jp
mov
mov
es
mov
sub
inc
orb
pop
add
jb
nop
push
mov
sbb
cli
outsl
idivb
mov
jge
lds
test
push
mov
dec
std
push
or
mov
mov
ljmp
out
sbb
es
lret
or
dec
pop
mov
bound
idivl
loope
mov
test
or
inc
xor
roll
outsb
dec
fcompl
xchg
pop
aad
push
dec
roll
and
aaa
or
fidivrl
sub
sbb
xchg
xchg
das
ss
rclb
mov
jl
or
mov
xchg
mov
sbb
jae
out
pop
addr16
mov
dec
lods
out
jge
sbb
insl
out
push
out
loopne
dec
dec
sbb
xor
mov
aaa
insl
adc
xor
xor
xchg
add
mov
bound
sarl
dec
inc
out
xchg
cltd
imul
lret
jge
mov
adc
cmpsl
gs
lea
jl
sbb
inc
repz
adc
mov
gs
fabs
sub
lods
xchg
pop
xor
and
and
dec
and
adc
xorb
and
and
test
mov
stos
imul
cmpsl
ds
or
jbe
xlat
pop
imul
mov
nop
jecxz
pop
mov
cmp
bound
jl
xchg
sbb
not
mov
xor
pop
fldenv
cs
mov
add
cmp
lahf
imul
dec
test
cmpsb
mov
stos
mov
add
cli
cmp
gs
out
scas
and
mov
sahf
jno
cmp
pushf
cmc
lahf
hlt
and
jmp
adc
inc
out
notb
lcall
pop
adc
ljmp
pushf
or
fadds
lock
outsl
xchg
ret
and
jnp
xchg
daa
xor
sub
or
pusha
mov
call
cwtl
pushf
gs
stos
pop
nop
rclb
ss
lods
xchg
xor
jmp
movsb
push
int3
jns
popa
xor
jae
xchg
scas
and
popa
pop
xorb
xchg
test
cmp
or
add
xlat
aad
insl
push
lret
enter
mov
ror
xchg
cmc
es
add
xchg
rorb
or
xor
inc
inc
xlat
adc
imul
xchg
sahf
movsl
out
sub
jnp
mov
test
rcrb
adc
xchg
ljmp
int
data16
cwtl
mov
mov
mov
pop
and
pop
xchg
xor
push
imul
ret
ss
xchg
jo
add
mov
into
and
mov
pop
adc
sbb
mov
or
hlt
scas
rcrb
sahf
push
pop
test
cmp
pushf
es
mov
adc
pop
pop
insb
mov
xor
sub
movsb
jns
xor
ret
xor
mov
jo
lret
inc
negb
pop
mov
jle
cmp
mov
inc
or
inc
cmpsl
movsl
sbb
outsb
mov
xchg
mov
popf
into
sub
loope
and
mov
push
inc
aaa
pop
outsl
add
mov
pop
mov
test
repnz
es
sub
push
sub
adc
dec
cltd
sub
sbb
xor
int3
test
out
jg
cs
lods
test
ss
pushw
or
pop
mov
cmpsl
jmp
add
or
test
sub
loope
pop
add
into
push
push
mov
xchg
arpl
shlb
gs
ret
out
dec
push
in
adc
andb
or
dec
js
pop
add
jbe
in
sub
in
paddd
test
mov
je
xchg
xchg
xchg
aam
loope
test
pop
outsb
lcall
push
test
add
sub
jg
xor
aas
pop
faddl
out
arpl
lods
sbb
and
sbb
xor
out
cmpsl
fiaddl
mov
cmp
add
sbb
cltd
mov
or
pop
into
lods
mov
or
and
ret
scas
or
hlt
push
ret
loopne
sbb
movl
adc
jne
lock
cmp
adc
push
stos
rcrl
sbb
and
in
sarb
jl
jmp
shrl
jmp
int
sar
jbe
out
rolb
inc
xchg
in
pop
in
orb
and
mov
jp
mov
pop
sub
outsb
movb
int3
mov
push
out
adc
inc
fistpl
popa
call
jne
mov
cmpsl
xor
cmp
ss
call
sbbl
inc
call
cs
and
cmp
adc
sahf
lea
lea
leave
sahf
and
push
or
xchg
jne
mov
xlat
sahf
mov
std
push
xchg
add
imul
scas
loopne
jne
cmpsb
test
loopne
xor
xchg
incb
sub
inc
test
or
pop
mov
jns
pop
xchg
subl
dec
mov
bound
lds
ss
testl
cmpsl
sti
pop
or
xchg
and
pop
jl
mov
push
pop
xchg
stc
test
push
ss
fs
dec
xor
push
mov
test
loopne
jge
pop
dec
add
sub
mov
mov
gs
mov
adc
loope
push
jnp
pop
inc
xor
and
cmc
fdivr
xchg
cmp
jb
push
addr16
xor
data16
les
pusha
xchg
add
jge
add
pop
in
insl
sub
ret
scas
cmc
shlb
push
jae
sbb
lret
sbb
inc
mov
inc
fiaddl
pop
pop
cld
mov
out
mov
aam
push
stc
mov
xlat
aad
mov
hlt
rorb
lret
decb
push
inc
in
or
mov
pushf
insb
stc
and
shrl
mov
xchg
cmpsb
mov
fcomp
lahf
fdiv
das
out
ja
orb
mov
imul
inc
push
or
push
mov
cld
jmp
or
mov
andb
add
mov
lret
scas
lock
mov
inc
lods
jge
add
mov
gs
lods
cmc
pop
dec
mov
outsl
in
push
mov
lea
in
or
icebp
fdivp
jmp
call
sub
scas
cmp
push
cld
aaa
jb
pop
lret
je
mov
sbb
lock
insb
lcall
push
movzbl
mov
mov
dec
int3
cld
push
loope
mov
pop
das
mov
push
stc
aam
in
jmp
cmp
test
sub
notl
mov
xor
jae
rcl
inc
adc
mov
loope
out
imul
fwait
mov
sahf
mov
jl
xchg
adc
inc
sahf
lods
sub
sub
lahf
jae
jns
mov
cmp
jne
adc
mov
incb
and
jge
and
sarb
lret
add
pop
in
ror
enter
cld
pop
in
filds
cmp
jne
test
xchg
push
add
iret
xchg
aas
xchg
les
sbb
push
jmp
and
pop
fisttps
sahf
mov
mov
loopne
lock
sub
int3
push
mov
ret
das
fucomi
sbb
loope
out
fs
sbb
xchg
mov
mov
mov
scas
push
mov
mov
shrl
add
sub
inc
push
adc
mov
mov
xchg
xor
add
imul
out
fidivl
sarl
dec
cmp
mov
pop
cmc
jae
mov
pop
cmc
bound
or
imul
pop
pop
adc
inc
mov
aam
mov
aad
cmovnp
push
inc
mov
shll
pop
popf
push
aas
xor
into
mov
imul
cmpsb
sub
sub
dec
scas
icebp
adc
movsl
xor
js
lods
adc
pushf
inc
loop
or
test
je
xor
pop
ret
ret
jns
and
inc
insb
sarb
jl
mov
jmp
shlb
movsl
mov
and
or
hlt
lods
bswap
in
cli
icebp
out
mov
nop
into
cmp
es
call
cmp
fisubs
cltd
mov
xor
aaa
ja
test
scas
je
xchg
shr
das
js
pop
push
insl
leave
cmp
icebp
xchg
pop
outsb
add
mov
pop
sub
ds
sarb
dec
pushf
scas
mov
pop
sub
jo
mov
push
pop
cmp
xor
in
nop
pushf
repnz
xor
inc
into
aam
pop
or
inc
cs
cwtl
jno
sub
imulb
pop
mov
mov
add
roll
subl
inc
sub
repz
mov
dec
adcb
xchg
dec
mov
fs
lret
loope
in
sbb
je
jle
mov
jmp
sub
aaa
push
insl
out
jecxz
cmp
mov
mov
cli
xchg
jmp
push
xor
mov
fsubp
jg
pop
gs
and
mov
popf
jg
and
fwait
mov
daa
cli
aad
ja
push
jnp
xchg
popf
mov
mov
cmp
cmpsl
iret
imul
xchg
test
rcl
add
and
xchg
test
cmp
xor
and
jp
lock
pop
in
xchg
daa
mov
push
add
lds
inc
jl
mov
cli
ds
cmc
xchg
dec
cmp
cmpsl
int
test
addr16
in
call
mov
cmc
imul
xchg
lock
cmp
sahf
add
push
out
xchg
movsl
stos
adc
xor
into
test
inc
cmp
cmp
xor
add
shlb
mov
jns
sub
jns
lods
inc
lods
add
push
nop
mov
repz
push
fisubl
cmp
mov
movsb
gs
aas
pop
lcall
pop
add
push
sub
push
sbb
cmp
xchg
dec
fidivrs
mov
pusha
subb
ds
pop
idiv
enter
pusha
xor
lahf
adcl
bound
dec
pop
push
out
pop
jl
nop
cmp
cmpb
add
dec
in
lods
and
jb
or
or
cs
pop
dec
leave
add
test
mov
ret
cmp
mov
loop
aam
sub
inc
addr16
cmpsb
xchg
mov
icebp
outsb
mov
mov
sbb
mov
imul
inc
xor
sub
ss
neg
pop
sbb
pop
popa
mov
mov
inc
inc
mov
jl
retw
inc
lcall
dec
cld
imul
js
mov
sbb
xchg
aad
adc
mov
pop
sbb
ljmp
sub
call
lea
push
jne
icebp
push
shll
pop
test
or
leave
outsb
insb
mov
and
mov
data16
loope
push
mov
pop
mov
lahf
or
in
std
sub
or
aad
bound
push
stc
loop
jmp
fsts
std
sahf
jbe
inc
in
insb
inc
bound
je
dec
push
call
adc
ljmp
cmp
repz
hlt
or
lcall
in
xchg
pop
mov
xchg
dec
jmp
inc
xor
mov
clc
jmp
testb
outsl
jae
sbbl
push
mov
pop
repz
push
js
stc
incb
cmc
sub
aas
pop
test
aad
inc
jnp
mov
sbb
ret
imul
icebp
jge
mov
mov
daa
sbbl
call
lds
inc
divb
out
cmc
stc
aaa
ret
mov
inc
sahf
and
xchg
call
cwtl
jb
sbb
scas
add
andl
add
cmp
pop
jg
lret
mov
test
pop
popa
clc
xor
cmp
addl
pushl
sub
cmp
jl
jns
ret
or
xchg
cmp
push
imul
in
sub
scas
addr16
or
pop
xor
pop
jo
push
dec
sarl
mov
repz
shll
push
pop
fimull
pop
dec
aad
mov
pop
insl
xchg
decl
xchg
jnp
imul
std
test
int3
mov
aaa
daa
ret
sub
lea
dec
push
cltd
out
mov
test
xchg
sbb
aad
dec
stos
pusha
out
inc
adc
les
stos
les
push
mov
cmpsb
fimuls
mov
fcoml
lock
jp
iret
sub
leave
enter
and
lea
jmp
pop
adc
adc
test
mov
filds
cmp
adc
pop
mov
sub
sbbl
das
push
and
dec
cld
dec
int3
rcl
js
scas
dec
push
dec
adc
mov
idivl
in
stos
mov
mov
pop
and
sbb
mov
and
leave
or
xchg
icebp
pop
out
pop
xchg
call
sti
jno
aad
or
lcall
mov
jmp
movsb
fldcw
mov
jecxz
insb
sahf
stos
jae
cs
das
movsl
icebp
out
jmp
aam
loop
ss
fwait
shlb
mov
fsubrl
mov
int
xlat
mov
insb
and
add
sub
jno
dec
adc
movsl
jge
xlat
test
sarl
push
jbe
and
imulb
xchg
dec
push
pop
and
cmc
lods
add
or
adc
push
push
fnstcw
pop
sub
inc
mov
bound
in
das
shrb
or
ficomps
dec
sub
sub
mov
mov
sbb
int
ja
pop
lods
int3
xlat
jo
xchg
inc
int3
or
mov
orl
aas
jnp
mov
je
out
ret
test
dec
stc
pushf
xorb
fstl
enter
push
call
aad
xchg
out
aam
jno
bound
in
pop
mov
xor
mov
mov
movsl
cmp
pop
data16
jg
pop
adc
dec
dec
mov
shrb
mov
jg
jecxz
addr16
jbe
sbb
mov
leave
sub
rcll
cmp
in
cmpsl
addr16
int3
mov
pop
sti
xor
scas
orb
in
pop
sbb
cmp
addl
mov
xchg
pop
test
cs
or
inc
hlt
cmp
sbb
popf
mov
sub
das
sub
add
adc
incl
push
ljmp
mov
dec
icebp
bound
out
in
mov
lahf
push
das
pushf
adc
mov
jle
aaa
sub
jno
sbbl
repz
mov
mov
movsl
cwtl
cmp
add
js
jge
js
pop
mov
ret
inc
dec
leave
jb
sbb
push
sub
jb
inc
adc
aad
xlat
pushf
inc
jp
decb
sub
jne
xor
daa
icebp
dec
mov
mov
inc
stos
xchg
stos
add
cmpb
pop
mov
rol
stc
push
imul
cmpl
cmp
cmp
daa
adc
xchg
push
mov
xor
xchg
fsubl
inc
mov
shlb
inc
jmp
mov
and
push
movsl
cli
mov
sbb
loop
jae
adc
add
scas
sub
mov
sub
scas
imul
inc
test
scas
js
movsl
imul
aaa
xchg
jmp
jne
sbbb
in
and
add
push
pop
xchg
and
int3
lret
in
mov
or
cs
push
cli
imul
pshufw
inc
popl
jmp
jmp
ss
aam
lods
inc
test
mov
push
mov
gs
add
adc
ret
lds
mov
pusha
mov
repz
cld
stc
or
aas
adcl
jge
mov
cltd
fsubrs
out
and
push
addr16
mov
and
in
cmpsb
mov
jp
out
inc
test
shll
push
add
bnd
std
pop
lret
imull
ja
pushf
fildl
loope
insb
push
xor
sbb
mov
mov
sub
inc
mov
pop
inc
push
mov
jne
dec
repnz
out
shlb
mov
jns
jae
inc
dec
push
ljmp
jle
adc
xchg
lret
fadds
mov
xchg
nop
jnp
mov
pop
lret
iret
xor
sti
mov
jp
pop
mov
lods
mov
pushf
outsl
lret
je
jne
fst
lds
stos
aam
and
adc
imul
les
jns
outsb
es
xchg
sbb
push
sbb
fiaddl
sahf
xor
rcrb
xchg
xor
pusha
insb
sub
cmpb
add
cld
ss
popf
shrl
jo
dec
dec
inc
arpl
inc
scas
push
lds
mov
mov
xor
inc
pusha
daa
cmp
push
mov
mov
jnp
mov
cltd
cmc
mov
ss
imul
pop
js
rol
dec
xchg
add
cmp
fsubl
rcll
filds
mov
into
mov
insl
es
jb
xchg
mov
jo
negl
loopne
or
dec
push
xchg
out
sbb
mov
push
pop
or
rol
call
xor
pop
cmp
cmpsb
add
cmp
ret
mov
xorl
int3
jno
cwtl
cs
inc
in
adc
ret
call
mov
cs
push
aas
call
fsubrl
mov
fcoml
ds
loop
jbe
cmp
loope
and
xor
cmpsb
add
adc
xchg
sub
dec
lock
xchg
testl
lret
mov
cmp
nop
inc
insb
fildl
mov
add
das
sub
jmp
adc
mov
rorb
fs
mov
testl
ja
push
sub
sbb
repnz
sub
test
add
sub
lea
repz
inc
mov
pop
or
sbb
jb
cli
scas
jg
mov
jg
out
data16
xor
rcrl
push
les
das
xchg
jo
pop
cli
xchg
cmp
sbb
push
inc
aas
into
push
push
mov
sbb
adc
inc
adc
xchg
nop
or
xchg
in
mov
cmp
nop
dec
or
mov
sbb
xchg
sbb
push
sub
fsts
roll
daa
mov
and
pop
or
jo
cmp
stc
jne
mov
loop
cmp
sub
mov
rorb
out
add
and
cmpsb
ss
fisttpll
push
mov
rcrb
xor
dec
inc
das
jg
xchg
push
sbb
cwtl
test
arpl
jb
call
inc
iret
xchg
das
mov
xchg
notb
sbb
in
pop
outsb
sub
pop
xlat
and
sbb
mov
fistpll
fs
push
cli
cmp
jecxz
mov
push
into
ret
jns
test
cmp
movsl
mov
dec
or
jb
mov
pop
mov
lret
loope
jl
mov
shll
sub
shl
test
pop
mov
aas
test
cmp
xchg
popa
or
inc
pop
xor
enter
ljmp
stc
arpl
mov
mov
scas
outsl
push
jbe
and
lods
inc
out
cwtl
inc
xchg
stos
scas
push
xor
in
pop
cmp
xor
and
minps
mov
jb
inc
mov
imul
into
test
sbb
sarl
or
push
mov
pop
jle
movb
cmpsl
test
pop
mov
sbb
outsb
sahf
xchg
in
cli
mov
mov
decl
in
inc
incb
mov
out
mov
add
popf
add
iret
nop
sbb
movsl
std
mov
sbb
sahf
stos
sub
xlat
out
cli
jnp
adc
mov
fisubs
pop
mov
xorb
mov
out
sti
mov
lods
jns
cmp
dec
adc
mov
jl
push
pop
cmp
mov
or
add
fistl
xorps
pop
jnp
xor
jae
por
push
nop
out
or
in
lods
jmp
push
jne
lahf
dec
jp
adc
xchg
dec
inc
dec
aad
sbb
int
nop
fnstcw
bound
mov
ljmp
imul
and
jmp
or
aad
pop
push
lret
mov
jecxz
pop
ja
jl
loopne
je
push
push
jnp
push
xchg
and
xor
push
cmc
mov
mov
jb
push
mov
cmp
dec
mov
jmp
andb
ljmp
dec
out
fstps
cwtl
pop
jle
ret
lcall
dec
mov
cmp
leave
mov
and
pop
push
cmp
jne
lods
fcmovnu
add
vcmpsd
add
dec
push
fcomi
les
stos
es
xchg
jp
and
xor
xor
xchg
xor
testb
jecxz
addr16
call
jnp
cmc
int
cmp
jl
les
dec
or
sahf
mull
xchg
ror
imul
sub
addr16
jb
xor
xor
cmc
inc
xorl
dec
mov
outsl
and
push
xor
xchg
jle
ret
mov
fdivrs
push
dec
lret
cli
pop
rcrb
add
xchg
popf
mov
jns
mov
pop
aam
mov
filds
ds
mov
in
inc
sbb
arpl
inc
in
mov
sahf
aad
mov
cld
icebp
aam
inc
or
xchg
stos
fildll
mov
lret
dec
cmp
stos
jp
xchg
shll
adc
repz
inc
xor
ret
inc
mov
xor
mov
movsl
imul
loope
xor
out
andl
insl
sbb
mov
sbb
shlb
or
lods
stc
ds
inc
xchg
cmp
pushf
push
adc
lea
sbb
inc
scas
jo
inc
dec
pop
add
shrb
adc
mov
xchg
pop
nop
arpl
jb
mov
push
test
sbbl
dec
mov
dec
and
xchg
mov
shr
fmuls
out
mov
sub
fimull
mov
and
imul
insb
mov
sbb
dec
mov
ret
push
mov
lods
je
and
in
sub
jp
and
into
mov
mov
lock
xor
or
xchg
mov
test
gs
pop
test
lock
sbbb
lods
xor
xlat
ret
pop
nop
hlt
dec
xchg
add
or
outsl
xchg
sub
in
in
jg
aam
pop
int
stos
jle
ljmp
aad
iret
cmp
or
imul
and
push
xor
inc
in
cwtl
lds
enter
push
jnp
mov
adc
inc
shl
andl
outsl
popf
jmp
std
and
jmp
es
pop
test
jecxz
or
sarb
xor
pop
xchg
aad
mov
xchg
push
jl
or
jg
mov
pop
cmpsl
rolb
fdivs
sub
xchg
test
and
repnz
in
daa
ret
add
xchg
adc
out
daa
popf
push
fucomi
inc
add
adc
pop
sbb
shlb
mov
fs
cmpsl
ret
push
adc
dec
cmp
mov
adc
outsb
in
pop
test
or
cmp
push
cmc
insl
repz
pop
jo
ret
push
test
mov
ret
in
loopne
je
and
lods
lods
cmpsl
cs
test
enter
push
cltd
jl
repz
in
lea
xor
dec
mov
rcl
mov
daa
in
mov
je
roll
mov
loop
div
xor
imul
test
xchg
bound
mov
jmp
push
lods
icebp
aam
cltd
add
cmp
inc
mov
push
bound
adc
mov
cmpsb
pop
nop
inc
lret
xchg
and
dec
sarl
rorb
ljmp
add
and
sarb
mov
or
loop
pop
loope
add
lcall
jmp
push
stos
xchg
cmpsb
call
inc
sbb
scas
outsl
or
enter
jb
ss
fidivrl
cltd
xchg
popa
inc
mov
pop
insb
scas
cli
xchg
cltd
shrl
sbb
pushf
cmpsb
mov
sbbb
ds
sub
pop
ljmp
add
rorb
ja
sbb
stos
flds
lock
push
insl
add
or
inc
stos
inc
mov
lret
jecxz
mov
aas
addr16
pop
jle
scas
fucompp
jb
mov
imul
mov
mov
ja
mov
push
dec
std
clc
sbb
rclb
movsl
mov
in
setp
inc
push
cmpsl
in
rclb
aam
mov
mov
cmp
jg
cwtl
flds
dec
je
jge
out
cmpsl
pop
mov
jne
inc
or
int3
ss
xchg
mov
or
cld
jle
xor
int3
les
addb
scas
sarl
mov
add
sbb
dec
imul
in
fwait
js
mov
push
xor
movsl
mov
int
sub
pop
push
aam
push
pop
and
aaa
adc
sub
imul
gs
mov
xorl
cld
fsubrs
inc
push
xchg
add
lds
cwtl
pusha
push
cmp
mov
rolb
sahf
inc
aaa
sbb
jecxz
cmc
and
popa
outsb
push
jnp
sbb
jnp
out
out
fwait
pop
push
cmp
mov
int3
sbb
rorb
mov
xchg
movsb
xor
rcll
pop
in
inc
adc
sbb
fimuls
cmp
mov
out
xchg
rcr
repz
hlt
xchg
stos
xlat
mov
loop
jbe
cld
fdivs
dec
adc
rolb
ds
repz
fadds
jno
push
je
dec
idivb
ficoml
or
cmpb
inc
mov
or
shl
lods
dec
jmp
pmulhuw
inc
and
cltd
stc
gs
es
adc
fucomip
sahf
ret
loopne
inc
dec
out
push
lods
sbb
mov
push
cld
mov
sbb
es
pop
dec
pop
adc
mov
stos
add
pop
lret
neg
mov
inc
inc
mov
mov
packsswb
into
fdivrp
repnz
push
sbb
divl
or
testl
add
insl
pop
scas
jl
mov
ljmp
imul
fwait
cmpsb
dec
add
inc
jb
pop
sub
xchg
rol
outsb
push
ljmp
push
add
outsl
jge
into
push
loope
pop
add
cmpsl
mov
xlat
gs
test
arpl
jns
and
popf
fsubrs
inc
into
push
pop
push
inc
imul
imulb
mov
inc
lret
add
xor
stos
push
rcrl
mov
lret
or
aad
mov
loopne
cmpb
ret
cmp
pop
call
les
push
not
jmp
add
nop
adc
jle
fisttpll
arpl
rcrb
or
inc
mov
shll
test
lret
stos
movsl
das
jge
addl
adcl
outsl
sahf
pop
adc
push
and
test
shl
fnstsw
sub
repz
push
roll
add
push
call
popf
inc
and
lcall
dec
mov
ja
push
sbb
cmp
cld
push
or
sbb
jno
fnstsw
sbb
jno
cmp
push
cwtl
stc
fdivr
push
mov
pop
jns
xor
xor
mov
xorb
mov
xor
rcrl
iret
sbb
sub
cld
rcrl
fistpll
xchg
jl
mov
inc
cmp
sbb
mov
iret
sti
insb
test
out
or
aas
fcoms
sti
rclb
les
inc
mov
movsb
dec
sbb
pop
adc
icebp
xlat
repz
dec
xchg
fs
pop
call
dec
or
js
mov
push
sbb
pop
add
movsb
fxtract
popf
test
add
lahf
ret
pop
arpl
xchg
rcrb
les
xchg
cmp
and
add
xlat
sbb
dec
loopne
out
push
cs
in
out
push
pop
or
inc
enter
enter
xor
popaw
test
faddl
push
cmpsb
imul
pop
mov
fwait
and
or
xor
pop
jno
hlt
ss
mov
in
sub
fisubs
lahf
orl
add
or
and
adc
in
or
das
roll
cmp
sbb
xchg
cld
push
push
jbe
jb
and
xor
adc
sub
sub
and
call
or
push
add
pop
hlt
loope
arpl
test
je
mov
adc
outsb
add
dec
cmp
mov
mov
lret
pop
fwait
sti
cmp
xor
daa
outsb
xchg
dec
retw
scas
or
xchg
ja
adc
pop
xchg
aas
sub
mov
sbb
bound
fistl
orb
in
adc
ret
lcall
mov
mov
add
add
jns
push
and
mov
iret
repz
mov
sub
ljmp
lret
sub
mov
ficoms
jb
sbb
repnz
mov
shrl
jecxz
sti
jp
int3
sbb
shll
jp
add
roll
lods
pushf
cmpsl
dec
mov
orl
enter
sub
ja
push
xchg
les
cmpsb
and
sqrtps
in
xchg
mov
mov
mov
xor
sahf
push
sub
sub
call
cmp
adc
shrb
stc
fdivs
gs
in
rcrl
sbb
inc
jge,pt
sub
cmp
inc
jae
inc
sub
orl
inc
add
xchg
mov
rcr
mov
add
push
mov
or
mov
or
aad
pop
inc
cmpl
adc
sub
shl
or
sub
mov
lret
inc
xor
mov
mov
xor
jae
ficomps
pop
lea
aam
lea
or
or
pop
jle
ret
xchg
xlat
adc
sbb
negb
mov
mov
fldenv
outsb
mov
jnp
push
repz
ds
sub
push
pop
fs
daa
sbb
daa
outsl
sbb
mov
mov
mov
das
cwtl
pop
fs
rcrb
sbb
or
ret
rclb
outsl
int
fimuls
dec
out
inc
mov
movsb
out
xor
scas
mov
cmp
adcb
cmp
inc
adc
loope
js
loop
mov
fstpt
imulb
or
jle
decl
adc
data16
lock
fists
push
xlat
jb
cwtl
adc
cwtl
inc
and
sti
insb
xor
inc
ret
cmp
inc
fdiv
ret
aas
aad
movsl
xchg
cwtl
xchg
dec
aas
je
dec
test
pop
xor
mov
inc
shrb
and
xchg
imul
insl
loope
outsl
jae
add
and
fs
lcall
jge
dec
cltd
fwait
mov
loope
dec
push
mov
mov
fidivs
in
mov
rorl
mov
movsb
adc
inc
dec
lds
push
jno
jl
std
and
jo
or
or
add
ret
loopne,pn
mov
and
fdivrl
jl
cltd
imul
out
or
aas
fmuls
arpl
mov
cmp
mov
sub
xchg
mov
mov
stos
aas
hlt
jbe
lods
jle
in
jge
push
add
enter
dec
mov
ja
imul
dec
std
js
enter
mov
and
ds
loope
jno
dec
cltd
and
lea
mov
scas
int3
fildll
pop
cmp
orb
mov
cwtl
inc
xorb
fadds
xor
insl
jnp
ret
cmp
cmp
xchg
inc
enter
push
mov
and
mov
adc
mov
jg
das
pushf
or
aam
cmpsb
xchg
mov
cwtl
add
jnp
adc
scas
pop
xor
mov
in
jp
std
mov
fsts
test
pop
fisubs
pop
cmp
pop
in
mov
mov
fwait
scas
rorb
adcl
cmc
fs
and
push
push
sub
adc
jo
hlt
and
mov
pop
test
sbb
push
std
call
sahf
sub
addr16
or
inc
and
push
cmp
icebp
add
xor
push
jae
jge
jg
mov
mov
pop
sbbb
jb
imul
sti
gs
es
and
fdivrl
mov
mov
negl
push
rcrb
js
stos
or
push
xchg
xchg
imul
test
dec
in
jns
int
mov
insb
decl
mov
xor
mov
inc
inc
mov
add
push
gs
sbb
xchg
jecxz
dec
inc
stos
sahf
dec
push
pop
mov
es
sbb
ret
shlb
mov
pop
sbb
mov
fidivrl
decb
pop
sbb
fcoms
stos
pop
fistpl
loop
fbstp
ds
js
mov
inc
stos
cmpl
adc
aas
mov
imul
loopne
mov
dec
xchg
fwait
push
loop
mov
int
cmp
dec
sbbb
ret
popf
cwtl
jns
out
or
cmp
xor
sbb
insl
dec
lret
bound
nop
xchg
dec
cmp
adc
cltd
jbe
mov
ret
ljmp
mov
lret
leave
mov
lods
pushl
sub
xorb
cmpsl
and
adc
xor
add
cltd
leave
mov
dec
je
xchg
cmc
dec
add
xchg
xchg
movsl
push
add
enter
jge
sub
cli
movsb
jecxz
cmp
rorb
popa
jmp
mov
xor
cmp
xchg
mov
data16
icebp
push
dec
xchg
xor
fnstenv
aam
in
lods
inc
pop
enter
add
and
mov
pushf
cmp
xchg
inc
dec
cmp
sbb
add
cmpl
pop
std
mov
call
or
loop
icebp
popf
mov
jmp
cmp
mov
sub
sarl
xchg
gs
ret
cld
xchg
imul
lds
cmpsl
cmp
pop
jp
xor
mov
adc
leave
das
jge
lock
or
xchg
movsl
mov
insl
sarl
push
adc
jnp
xchg
cmc
push
rcrb
das
sbb
dec
pushf
jecxz
scas
mov
mov
push
push
mov
mov
jbe
jns,pt
loope
dec
aad
xor
repz
aas
sub
jno
fucom
lock
xor
loope
rolb
xlat
and
adc
push
cmp
sbb
pop
fiadds
xchg
mov
hlt
inc
add
ss
jecxz
mov
and
testb
leave
cmpsb
sbb
or
ret
data16
xchg
dec
outsb
aaa
xchg
add
add
stos
sbb
sbb
mov
aaa
pop
out
xlat
ds
jne
xchg
sbb
sbb
and
lcall
icebp
xor
imul
popf
enter
ja
in
xchg
lcall
mov
push
add
push
inc
pop
sbb
jno
mov
fsubrl
out
subb
or
fsubs
das
mov
pop
pop
xchg
add
xchg
int3
jnp
sbb
pop
dec
jle
and
ja
sub
xor
stos
mov
fucomi
test
sbb
repz
inc
das
xor
mov
push
in
inc
cmpsl
pop
jge
bswap
xchg
mov
jnp
dec
sub
sub
pop
in
mov
into
test
xchg
adc
xor
jne
addl
rclb
arpl
movsl
inc
fisttpl
cltd
fs
pop
add
lcall
ja
test
sub
mov
mov
cmp
push
push
inc
scas
stos
jp
xchg
pop
xchg
stos
push
lods
jns
cmp
out
imul
pusha
inc
pop
sbb
aas
movsl
xchg
adc
pusha
add
inc
push
jne
popf
out
filds
jnp
aas
popa
jae
sbb
xchg
inc
push
adc
add
add
jecxz
insb
das
sbb
dec
ret
pop
std
inc
lods
inc
fistps
xchg
aas
push
out
or
movsb
neg
mov
inc
sub
mov
push
bnd
sbb
call
push
jnp
andl
mov
cmp
pop
dec
shrl
xchg
cmp
js
xchg
mov
xchg
jmp
sti
aaa
out
dec
lds
aam
mov
cmp
mov
out
pop
dec
sub
jg
sbb
cmp
lret
fcmovbe
dec
sbb
rcrl
pop
cmp
stos
leave
cs
pop
outsb
popf
pop
pop
imul
dec
imul
jecxz
imul
xor
int3
inc
les
add
loop
push
mov
xor
pushf
add
aam
bound
shll
loopne
fstpt
jns
push
lds
leave
jmp
or
inc
push
shrb
fincstp
sub
sbb
xchg
dec
daa
outsb
sarl
push
in
jbe
xchg
add
femms
or
cld
decb
cs
mov
and
neg
sub
iret
cld
jge
les
mov
mov
out
or
loop
xchg
jno
jp
mov
mov
push
or
divb
test
add
sbb
loopne
mov
pop
idivl
call
fnstenv
and
mov
inc
or
sbb
jbe
mov
divb
xchg
cltd
mov
xlat
aas
xor
subl
pusha
cld
mov
loope,pn
jle
mov
aam
stos
add
loope
inc
fisubs
sub
es
push
outsb
mov
cmp
mov
aam
fs
add
out
jl
mov
fisubrs
lcall
jp
das
mov
cwtl
pop
idivl
pop
push
xchg
push
imul
and
xchg
aaa
dec
or
out
and
inc
data16
add
jmp
or
pusha
fsubrs
clc
dec
out
dec
test
jle
jne
push
cli
pop
sub
rol
subl
xor
fisubrl
pop
inc
and
or
sbb
hlt
enter
sbb
dec
pop
jno
mov
imul
pop
movsl
fildll
push
fcomps
cmp
jb
mul
sub
or
ret
ja
dec
or
fisttpl
divl
in
mov
enter
sub
jae
mov
in
ret
loop
movsl
jnp
pop
push
outsl
or
push
or
add
adc
xorb
and
inc
movsb
push
sbbb
loop
ljmp
push
jecxz
outsl
fwait
mov
repz
loop
hlt
out
push
das
push
mov
mov
dec
dec
sub
xchg
xor
leave
and
data16
enter
loopne
xchg
fmuls
cmp
ja
inc
push
call
mov
rclb
xor
xchg
cld
mov
jb
xchg
inc
out
sub
push
mov
in
ljmp
cmp
das
xchg
mov
sub
outsw
mov
das
jo
mov
aad
shrl
ss
mov
enter
mov
je
out
out
fsubl
push
rcrl
pop
popa
stc
xchg
js
popa
je
mov
mov
mov
and
pushf
cmp
mov
in
push
add
aas
ret
int3
mov
scas
push
xor
mov
nop
mov
pop
push
xorb
in
sub
mov
jnp
cmp
lahf
popf
mov
inc
adc
mov
cld
fidivs
das
imul
loope
add
jg
inc
push
out
ficomps
sub
xchg
mov
test
les
cmp
push
movsb
imul
push
and
