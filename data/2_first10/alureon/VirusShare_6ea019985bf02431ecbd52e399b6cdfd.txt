push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
js
xor
adc
and
aam
mov
mov
dec
test
push
inc
cltd
mov
mov
mov
or
mov
adcl
test
mov
add
dec
mov
cmp
enter
leave
clts
nop
dec
cmp
jne
jle
sbb
idiv
pushf
addb
mov
xchg
repnz
lret
nop
loopne
jmp
shll
push
sti
or
fistpll
cltd
pop
push
or
mov
push
iret
push
out
push
mov
sub
aad
mov
pop
aam
repz
push
jne
push
cmp
stos
mov
stc
inc
fwait
in
ss
xchg
cs
lea
jb
inc
aaa
out
jle
mov
js
mov
add
jge
es
pop
mov
pop
iret
mov
mov
test
pop
sahf
or
in
jmp
scas
lahf
mov
cmp
mov
push
xchg
lods
cld
imul
and
dec
xor
cmp
adcl
pop
push
repz
mov
and
fisubs
outsb
xor
mov
ret
sbb
push
cmp
push
mov
fstpt
add
test
cld
xchg
and
jns
xor
inc
push
jnp
cmp
or
fiadds
sbb
cmp
insb
cmp
lcall
push
lcall
shlb
push
jl
in
jne
adc
rclb
mov
mov
test
mov
pop
test
popf
mov
insb
fbld
and
icebp
ja
rcr
jns
fs
push
into
lods
adc
add
add
xor
push
cs
sbb
add
enter
mov
aas
cmpsl
or
pop
ljmp
sbb
cwtl
and
mov
loopne
ss
fwait
subl
sub
xor
add
pop
leave
cmpsb
imul
loope
xchg
mov
and
std
xor
inc
sbb
jmp
lcall
add
add
lods
test
loopne
jb
push
sbb
loope
push
lds
call
push
inc
or
cmp
push
int
sub
fsubrl
lret
nop
or
mov
xor
push
pop
adc
testb
movsb
test
stos
call
mov
push
inc
mov
adc
xor
iret
rol
lods
mov
sbb
roll
dec
dec
push
je
movsl
loopne
fildll
mov
mov
shll
xchg
int3
add
adc
loop
insb
lea
mov
inc
scas
inc
mov
xor
xor
popf
clc
lahf
dec
sbb
and
mov
fsts
mov
pop
arpl
loop
fnstsw
cmpsb
scas
jno
adc
cli
mov
cmpb
imul
js
dec
adc
add
xor
xchg
jp
or
test
gs
rclb
jo
jmp
push
out
mov
jle
in
mull
lods
jp
and
mov
popf
dec
cmp
je
mov
out
cmpsl
inc
out
adc
std
xor
pop
sbb
scas
notb
xor
lods
adc
sub
jp
sahf
scas
xor
push
enter
lret
es
mov
adc
pushf
sub
add
shl
or
fisubrs
jno
mov
dec
pop
outsl
fildll
int
pop
lds
fiadds
and
cmp
add
aam
pop
sbb
movsl
aaa
enter
bnd
push
mov
sub
hlt
xor
in
fidivrl
and
sub
loope
shl
rorl
jno
sbbl
outsl
ja
cltd
add
push
ret
cmp
and
repz
stos
vhsubps
adc
iret
dec
inc
adc
scas
xor
lods
fmul
in
mov
push
sbb
mov
iret
lret
adc
insl
pop
or
xchg
mov
cmpsl
jb
mov
lahf
int3
lcall
mov
mov
in
xlat
cmpsl
lock
test
add
add
imul
ss
movsb
cmp
mov
out
popf
jns
inc
xchg
lods
mov
inc
xchg
cmpsl
orl
cmp
cmp
xchg
mov
mov
fadds
xor
movsb
sub
push
dec
shll
cmp
mov
outsl
std
pop
pushl
pushf
or
pusha
addl
aaa
mov
xchg
jp
add
mov
in
lea
push
out
outsb
lock
push
and
inc
and
dec
test
addr16
fwait
jge
pushf
xchg
dec
shll
mov
cmc
jnp
xchg
pushf
or
andb
fcomps
stc
repnz
movl
stc
pop
add
inc
cmc
out
xchg
cmp
pop
test
lods
fldcw
mulb
xor
gs
adc
add
pop
mov
aam
xor
pop
mov
pop
pushl
cmp
jno
stos
sbb
xor
daa
aad
cli
ret
push
adc
idivl
out
and
xchg
mov
sbb
push
dec
ret
orl
outsl
lock
sbb
popf
inc
xor
add
mov
leave
lcall
addl
add
sbb
repz
cmp
sbb
sub
repnz
push
icebp
les
mov
nop
mov
data16
sbb
add
dec
nop
movups
dec
rcr
add
js
sti
sti
jae
add
jb
mov
lock
mov
sbb
jb
shr
stos
xacquire
es
movsl
roll
push
xor
sbb
xor
pop
mov
xchg
lcall
jmp
mov
push
faddl
mov
jae
aad
movmskps
sbb
rorl
repnz
gs
in
orps
notb
icebp
push
fwait
push
sub
addr16
pop
inc
dec
push
aad
mov
movsb
out
inc
sub
les
insb
push
inc
stos
mov
lods
cmp
fdiv
roll
add
add
pop
xorb
frstor
lds
push
fistps
dec
cmpsl
lcall
mov
arpl
push
aad
xor
and
js
dec
insl
or
inc
in
pop
lea
adc
call
inc
push
scas
sub
mov
stos
jb
faddl
sarl
sub
cmc
push
cmc
jno
cmpsb
inc
or
mov
rclb
ret
and
movsb
das
xchg
jno
int3
sbbb
arpl
and
imul
pop
dec
jb
jo
adc
pop
mov
popf
or
shlb
mov
mov
mov
negl
lods
mov
pop
push
arpl
pop
rcr
jle
inc
and
add
sbb
bound
mov
inc
xchg
lahf
xor
gs
mov
push
xorl
add
and
sbb
jae
push
mov
jge
les
and
rolb
pop
xor
clc
pop
push
flds
pop
jl
add
inc
aaa
ljmp
inc
inc
lods
fnsave
and
cmp
sub
out
fdivrp
inc
js
jno
aam
xor
add
add
jecxz
out
adc
pop
jp
cmp
das
stc
in
dec
sbb
adc
pop
hlt
sub
cs
bound
sbb
xchg
aad
cs
mov
or
mov
leave
les
lret
fldcw
les
mov
out
jne
scas
fisubrl
mov
push
cmp
mov
fidivs
jp
jle
or
jae
add
add
int
xchg
mov
mov
or
popf
shll
push
xchg
test
cs
addl
rclb
push
inc
mov
test
xor
jle
xor
add
cmpsl
pop
pusha
cmpsl
cli
jl
popl
call
lahf
inc
fisubrl
mov
test
cli
mov
rcrb
cmc
dec
and
add
sbb
je
je
in
lret
movsb
ljmp
pop
test
jge
arpl
les
dec
lea
cs
jb
mov
fisttpll
lret
mov
push
cmp
jbe
fsubl
and
sbb
adc
add
pop
insb
jnp
mov
mov
orl
xchg
fnsave
cltd
fistl
mov
add
add
inc
fimuls
add
loop
push
xor
jnp
imul
insl
sbb
out
repnz
adc
mov
mov
nop
jp
in
ljmp
repz
enter
dec
dec
stc
stos
mov
leave
loop
mov
mov
int
jne,pn
xchg
gs
in
movsb
fildl
data16
aas
daa
mov
jns
inc
and
jno
xor
dec
push
add
addb
fs
daa
xchg
xchg
add
sbb
adc
sbbl
stos
adc
lea
add
add
push
mov
push
mov
push
cmp
sti
and
fwait
mov
or
dec
outsb
push
stos
mov
out
lret
push
push
cli
and
jg
add
inc
xchg
mov
xorb
sbb
xchg
push
add
add
xor
fildll
jge
xchg
mov
cwtl
jg
pusha
xor
in
subb
or
into
push
decb
jl
and
dec
loopne
or
jl
iret
popf
mov
and
int3
in
movsb
add
test
sub
mov
and
and
ja
loope
mov
cmp
xchg
in
dec
rcr
xor
adc
sbb
add
stc
push
js
sarb
pop
test
das
add
out
rorl
cld
std
ss
jg
loop
mov
test
cmpsl
mov
xor
push
iret
mov
xor
xchg
jns
inc
xchg
int
data16
insl
push
mov
frstor
sbb
hlt
rcll
sarb
cmp
dec
dec
mov
pop
insl
pop
outsl
or
sarb
bound
add
sbb
dec
insb
fld
mov
xchg
and
and
scas
or
jbe
stc
mov
mov
in
fsubs
in
lea
lcall
sub
jne
stc
jmp
pop
ss
push
fstps
xor
leave
fcomps
pop
push
jle
push
mov
mov
dec
push
cmp
stos
sbb
adc
icebp
xchg
jge
mov
sbb
dec
hlt
mov
popa
in
insl
ljmp
fisubs
mov
inc
push
jp
pop
idiv
push
fisubrs
ret
idiv
in
loope
in
inc
arpl
idivb
inc
ficompl
cs
repz
xor
cmp
mov
subl
dec
pop
popf
xor
push
mov
out
dec
push
pop
xchg
inc
xor
lcall
sar
lahf
fsubl
add
add
lock
bound
movsb
mov
fldl2e
xchg
jb
lea
xchg
dec
xor
jb
or
arpl
mov
dec
push
mov
jne
jp
sbb
aaa
arpl
aad
out
fwait
outsl
and
inc
jmp
in
movsb
imul
inc
repz
js
or
xor
jb
or
add
lock
cmp
movl
pop
dec
les
arpl
dec
adc
add
jmp
fsubrp
pusha
mov
inc
bound
stc
das
fmul
mov
aas
dec
sbb
insl
inc
xchg
dec
sub
cmp
jp
add
jecxz
hlt
jg
dec
xchg
adc
sub
aad
mov
xchg
icebp
xchg
sbb
add
leave
jbe
xor
cmp
gs
aas
ret
jmp
in
inc
lahf
nop
fbld
inc
stos
aas
fucomip
add
or
sub
and
or
fdiv
jl
daa
lret
movsl
adc
out
or
leave
lahf
mov
fidivrl
fldl2t
int3
xchg
jl
xchg
nop
cmp
das
popf
shl
loop
pusha
lds
and
xchg
inc
xchg
pop
xchg
mov
jb
aam
dec
les
loope
pushf
cs
mov
scas
rcrb
mov
sbb
mulb
fistl
mov
in
mov
sub
xchg
out
mov
in
jno
shrb
mov
arpl
repz
shlb
cmp
mov
cmpsl
cli
fcomip
pop
mov
fcoml
data16
xchg
pop
loopne
lods
or
mov
outsb
std
or
push
mov
jl
in
adc
add
pop
sbb
sub
pop
xor
jbe
push
push
or
cld
lock
mov
loope
add
sub
movsl
dec
cmpb
dec
sub
in
popa
add
rcll
add
sbb
adc
pop
inc
or
insl
xchg
jl
mov
scas
adc
xor
cwtl
adc
inc
add
jbe
sti
out
xor
aad
or
xchg
jg
fsub
cmp
stc
add
pop
pop
sti
xor
push
js
cltd
mov
not
xchg
add
add
pop
scas
std
jo
loope
incl
jp
dec
popa
test
repnz
fadd
mov
mov
clc
pop
inc
fs
mov
push
add
icebp
xchg
mov
jae
pop
outsl
adc
mov
insb
mov
adc
cltd
enter
mov
pop
faddp
hlt
cmp
stc
sbb
mov
pop
pop
mov
lret
dec
sub
add
mov
inc
xchg
inc
js
jno
add
jbe
cmpl
lahf
leave
aaa
mov
ljmp
out
insl
repz
ret
loop
dec
inc
push
ljmp
in
lods
sbb
or
les
das
add
movsl
cmpsb
clc
adc
ss
push
scas
repnz
xor
push
sbb
adc
add
add
add
jle
sub
add
repz
ret
sti
xor
es
adc
pop
xchg
call
ja
pop
out
lea
es
pusha
icebp
pshufw
or
mov
loopne
ficompl
push
dec
sbb
push
stos
out
and
jnp
jecxz
cmp
arpl
and
pop
xchg
jmp
inc
mov
popa
ret
inc
mov
mov
sub
shlb
repz
jns
andb
scas
inc
and
sub
mov
nop
add
cmc
mov
lds
sbb
scas
out
fistpll
mov
aaa
sbb
stc
xor
or
xchg
sbb
out
movsl
ljmp
loop
or
cmp
pop
call
das
popf
push
xor
sub
sahf
popa
pop
jge
notl
stos
adc
addb
add
lods
and
mov
jge
push
je
inc
ds
orl
mov
and
push
mov
push
das
pop
push
adcb
call
stos
push
cmp
and
mull
xchg
mov
mov
xor
je
mov
and
cmp
psrad
pusha
in
lret
fiaddl
mov
iret
cmp
and
jb
lds
testl
add
push
xchg
push
dec
in
aas
cs
fsubl
fucomi
notl
gs
sbb
inc
mov
jne
movsl
arpl
fistps
popf
adcb
out
aaa
dec
add
pop
fwait
xor
dec
push
fsts
enter
test
xor
mov
iret
push
sbb
xchg
mov
es
push
movsb
icebp
pop
dec
add
add
cwtl
mov
sbb
pop
mov
repnz
icebp
xor
jb
jne
push
add
fwait
cmc
les
sahf
sbb
insl
push
inc
xchg
ja
fdiv
and
dec
mov
dec
cld
xchg
xchg
mov
stos
pop
cli
fsubs
sbb
lahf
lods
push
lock
imul
fidivrl
test
je
lods
rorb
aam
jmp
sub
jecxz
pop
lods
mov
sbb
xchg
mov
add
shll
in
stos
iret
mov
cli
into
rcll
inc
cmp
sti
dec
xchg
adc
mov
mov
xorl
gs
cli
ljmp
mov
or
insb
push
stos
leave
cmp
jno
shlb
and
jle
mov
jp
push
xchg
mov
int3
cmp
cld
mov
movb
shlb
out
sti
and
mov
sub
sbb
dec
or
push
lock
loope
dec
mov
test
mulb
gs
daa
adc
mov
push
lcall
cmp
shr
dec
subb
int
sbb
pushf
fsubl
inc
sti
or
ret
cmp
or
push
repz
stos
cmp
call
add
add
dec
xlat
popa
ja
addr16
fstpl
xorb
sbb
inc
inc
stc
jae
cmp
fldl
ss
jae
pop
cmpsl
aaa
cli
mov
out
rcrl
sti
mov
xchg
push
xchg
sub
arpl
nop
es
in
adc
adc
mov
mov
inc
jnp
cmp
xchg
push
das
pop
pop
js
sahf
popw
mov
push
shlb
cvttps2pi
ds
mov
mov
mov
add
mov
sub
dec
mov
inc
out
mov
imul
popf
push
nop
xchg
lods
push
mov
sub
lret
add
xchg
inc
ficoms
enter
ss
jmp
in
je
xchg
ss
push
mov
xor
inc
loop
adc
sarb
test
mov
ret
xchg
cs
inc
outsb
inc
cmp
inc
out
cmpsb
add
and
leave
add
aam
repz
shrl
push
lds
pop
xchg
vunpckhps
int
pushf
adc
call
rcll
insl
dec
int
xor
push
hlt
jp
cmp
int
jl
ret
xchg
in
fcmovne
fimuls
lcall
inc
push
push
in
incb
cmp
nop
iret
sbb
inc
push
jae
cli
ja
fisubs
push
add
add
cmp
push
adc
fcmovne
push
mov
ret
push
lock
sbb
es
xor
lods
arpl
in
add
aam
test
cmp
push
dec
push
adcb
arpl
pop
sbb
aam
cmp
pop
cli
int3
sub
repz
xchg
addr16
add
add
pop
mov
cltd
fs
cmp
mov
scas
fcomps
call
cmpsb
add
add
scas
ljmp
and
shlb
and
sbb
in
sbb
nopl
lods
imul
sub
sub
xor
or
mov
and
inc
js
dec
arpl
inc
repnz
movsb
adc
leave
and
addb
shr
mov
bound
jg
rcl
lock
jnp
add
stos
inc
xchg
cs
sub
push
js
mov
call
aad
sub
sahf
ret
pusha
xor
lcall
push
leave
leave
push
adc
movsl
and
jo
cmp
and
inc
sub
fstpt
in
into
or
xchg
repnz
lods
or
or
adc
out
dec
test
xchg
sbb
sti
adc
test
es
jl
push
sbb
push
adc
add
dec
xchg
out
and
push
sub
cmpsb
mov
push
xor
hlt
aas
jge
mov
rsm
les
in
mov
pop
adc
out
lds
fnstcw
popa
imul
add
pop
sti
fwait
xor
mov
out
cmp
ss
sub
push
arpl
xor
cmp
dec
repz
dec
js
lods
pop
and
mov
pop
loope
mov
push
aam
dec
stos
add
mov
add
cmpsl
sti
mov
mov
jmp
rcll
jb
ds
mov
jne
mov
inc
cmp
push
aam
mov
jne
mov
pop
cmp
and
jl
andl
jmp
mov
fiaddl
dec
mov
jg
mov
cmpsl
xchg
test
push
nop
and
cmpsl
rcrb
dec
ror
adc
jg
or
movb
or
mov
pop
test
test
pop
jmp
mov
das
ret
xchg
add
mov
rcrl
data16
mov
jnp
repz
jmp
es
push
pop
mov
les
negb
in
cmp
jge
daa
jle
pop
jbe
or
loopne
sub
lret
or
xor
cltd
fwait
xor
cmp
das
repnz
mov
add
add
add
or
pop
cltd
sub
or
inc
call
jecxz
jae
ret
dec
inc
mov
scas
std
mov
jle
mov
and
test
mov
lcall
pop
fadds
jg
call
jl
pop
pushf
cmpsb
ljmp
add
rol
int
jo
and
bound
pusha
dec
jmp
xor
gs
xchg
mov
insl
ds
in
ja
xchg
enter
ja
popf
add
popf
ljmp
mov
adc
movsl
add
arpl
std
adcl
inc
mov
dec
arpl
xchg
xor
mulb
inc
mov
mov
int3
int
shll
jg
cmp
inc
addl
cmc
jle
fisubrl
fidivs
inc
fnstsw
or
inc
mov
dec
sbb
push
add
add
dec
jnp
fmull
popl
cli
xor
jl
xchg
fcoml
arpl
xchg
add
jnp
mov
sub
popf
testl
mov
sbb
push
mov
loopne
add
sbb
and
and
mov
fsubs
rorl
push
out
cwtl
std
or
loope
fdivrs
imul
add
adc
rorb
push
sbb
jge
add
push
gs
pushfw
mov
mov
xchg
xor
xlat
mov
test
jecxz
xor
inc
pop
jmp
je
andl
pop
jge
out
add
mov
jbe
cmp
push
xchg
fisubrl
jecxz
iretw
in
loope
push
add
test
leave
jmp
jae
jb
in
xchg
mov
xor
clc
add
shr
decl
add
add
jbe
xor
sahf
movsb
cmp
lret
mov
sub
sbb
stos
push
sbbb
insb
push
scas
or
xchg
inc
sbb
movsb
lods
mov
sbb
xor
sbb
mov
mov
std
es
inc
push
cmp
mov
pop
mov
mov
xcrypt-ctr
cmpsl
fstps
cmpsb
pop
outsb
addr16
sub
cs
fwait
inc
mov
dec
mov
sub
inc
pop
mov
add
xchg
dec
jmp
loopne
call
dec
pop
divb
pop
lods
mov
repz
xlat
cwtl
mov
aas
adc
test
lret
pop
es
mov
ss
fwait
add
in
or
mov
icebp
adc
jbe
stos
add
jg
shlb
mov
inc
mov
cmp
cmpsb
sysret
pushf
cmpsb
inc
pop
hlt
add
leave
ret
outsb
in
xchg
aas
mov
dec
push
cs
xor
add
add
insb
push
mov
std
sub
hlt
jecxz
or
int
jecxz
dec
xor
outsl
pushf
jne
jbe
icebp
adc
xchg
cld
jl
rcrb
add
clc
cmp
shlb
lods
insl
mov
lret
push
pop
xchg
jge
sub
mov
repnz
inc
sbb
addr16
nop
jge
adc
aad
push
xor
sbb
jmp
add
mov
imulb
ret
clc
cmc
xchg
pusha
jmp
lret
cmpsl
cmp
andl
mov
ficoms
addr16
rclb
push
or
push
adc
movsl
jl
mov
leave
adc
cmc
inc
lea
sbb
inc
push
call
sti
loope
lds
out
mov
adc
xchg
popa
push
std
hlt
lret
add
xchg
xor
adc
repz
jge
lods
arpl
pop
or
pop
jae
add
add
push
pop
push
push
xor
fwait
inc
push
sub
inc
je
jne
mov
adcb
mov
orb
push
sub
outsl
negl
inc
jb
int
pop
outsb
or
mov
das
push
and
fists
fstpl
inc
push
and
cmc
pop
adc
outsb
xchg
sub
fwait
jmp
insb
or
leave
inc
cmp
sub
ret
add
add
pop
jle
mov
xor
js
jne
in
cmpsl
mov
adc
adc
insl
inc
popa
dec
lret
stc
scas
cmp
mov
or
aas
mov
fs
jb
in
cmp
fbstp
lcall
repz
mov
cmp
and
xchg
pop
xor
add
jbe
test
jp
frstor
test
mov
cmp
sbb
js
xchg
xchg
std
call
sahf
xlat
out
ret
ret
push
xchg
pop
xchg
inc
xchg
addr16
dec
repz
mov
mov
jge
mov
aam
fwait
test
loopne
and
fidivrl
sysexit
mov
pushf
inc
insl
int3
test
sti
stos
dec
loop
aas
add
mov
adc
push
inc
mov
lret
mov
aas
mov
add
push
movsl
or
lods
mov
mov
lcall
ljmp
mov
pop
call
cmp
into
and
xchg
scas
add
adc
popf
insb
sub
xchg
sar
and
xlat
and
pop
add
lahf
dec
repnz
mov
jg
jae
fimull
jge
in
pop
cwtl
ret
jle
cld
sbb
sub
and
push
xor
cmp
ljmp
add
ret
cli
out
xor
cmp
jae
mov
cmp
mov
ljmp
or
mov
repz
aas
jne
lea
jno
dec
loopne
sub
insl
aas
push
repz
call
into
in
loope
lods
xchg
addl
inc
cmp
in
cs
sbb
stos
addr16
fs
xchg
inc
and
or
sub
movsl
mov
jecxz
push
push
jle
jae
sub
jbe
xchg
and
clc
inc
aam
sbbb
or
arpl
push
mov
sbb
lahf
in
mov
mov
jg
cmp
fwait
mov
js
movsl
sti
jecxz
aam
pop
notb
or
adc
sar
icebp
jnp
cmp
sbb
sbb
jg
cli
es
and
add
callw
adc
mov
pop
lds
xlat
cmp
nop
inc
repz
test
mov
fwait
test
cmp
mov
stos
and
dec
aad
cmc
xchg
insb
lds
mov
xchg
out
inc
daa
aas
loopne
inc
insb
call
jecxz
or
repz
dec
inc
pop
sbb
xchg
insl
out
mov
fbld
mov
fs
ljmp
test
pop
dec
int3
xchg
dec
add
loope
fs
cmc
dec
testl
repnz
mov
xchg
and
leave
loope
out
rcr
iret
test
cmpsl
cwtl
mov
add
push
inc
mov
int3
add
cmc
mov
shr
aad
imull
mov
arpl
incl
pop
lock
divb
sub
xor
jmp
cmc
or
add
pop
loope,pn
jp
bound
pusha
mov
cmpb
xor
lods
notl
ret
outsl
xchg
mov
mov
adc
hlt
mov
mull
jmp
fs
lahf
cli
cltd
or
fistpll
repz
insl
insb
jns
mov
sub
fmuls
xchg
pop
adc
adc
mov
leave
int
insl
jno
hlt
adc
jno
push
test
stos
inc
xchg
mov
xor
rclb
call
testb
add
add
repnz
inc
pop
push
outsl
rclb
mov
or
sub
into
pop
push
mov
adc
or
jb
imul
fistl
jecxz
push
add
sub
daa
test
push
and
