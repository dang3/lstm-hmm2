push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jbe
jg
and
push
xchg
andb
sub
push
jmp
dec
push
sub
jmp
shll
aad
cmpsl
int
sbb
mov
sbb
dec
addr16
sbb
add
add
dec
pop
pop
fcompl
adc
xchg
bnd
mov
add
jle
or
sub
jl
lret
or
adc
jl
pop
or
imul
lods
imul
leave
jb
xchg
inc
std
push
daa
pop
cmp
xor
xabort
mov
in
jl
pop
adc
sbb
ja
lods
cmp
and
mov
mov
pop
jecxz
fnstsw
cmp
mov
enter
in
stos
ret
add
leave
ja
xchg
xchg
pop
fsts
fildl
outsb
dec
jp
jo
ret
xchg
mov
bound
lods
or
sbb
sbb
mov
inc
push
sbb
jnp
inc
mov
mov
scas
pop
dec
push
lock
into
popa
mov
lds
mov
sar
xchg
xchg
stc
jno
mov
fwait
dec
add
scas
jbe
add
or
fistl
ret
out
push
das
pop
js
xor
mov
dec
inc
sbb
sub
push
movsb
inc
call
sbb
xchg
fsts
pop
cld
xor
sbb
mov
pop
shrb
push
mov
jns
adc
jecxz,pt
push
dec
push
mov
rcll
xor
inc
movsb
jmp
popa
mov
out
push
dec
mov
jg
daa
mov
cmc
repnz
sbb
xchg
xchg
loop
push
or
sbbb
imul
imul
pop
pop
sub
xor
pop
jns
leave
push
imul
mov
add
jnp
adc
jge
mov
cli
iret
rcll
or
xchg
mov
fldenv
xor
leave
adc
mov
subb
mov
lahf
test
jno
lret
and
push
sti
inc
add
inc
lods
add
add
pop
mov
outsb
xchg
jmp
stos
adc
pop
pop
mov
xchg
cmp
mov
addr16
jg
mov
mov
int3
add
mov
adc
jp
or
push
xor
pop
push
sub
outsl
inc
subb
cmpsl
loopne
fs
and
inc
ret
or
dec
xchg
inc
mov
lds
fildll
imul
add
add
jno
mov
xchg
ret
popa
xchg
mov
addr16
sbb
inc
dec
lcall
push
aam
jbe
clc
add
pop
inc
loop
add
sub
cwtl
add
mov
mov
fstpt
lods
shll
pop
pop
pop
add
int3
enter
mov
add
mov
xchg
aas
fsubs
mov
add
fs
sti
into
mov
cmpsb
xchg
fnsave
scas
fistl
pop
add
adc
stc
int3
out
sub
jecxz
add
cwtl
orb
fdivrl
jmp
out
cmp
out
adcb
mov
int
std
dec
aam
daa
sbb
and
pop
out
jmp
test
jnp
pop
gs
push
and
inc
je
adc
add
rol
adc
push
bound
adc
jcxz
xchg
leave
aas
sub
stos
das
ss
js
pop
jae
das
in
sub
adcb
in
movsb
xorl
dec
cs
jecxz
sub
pop
and
mov
or
lods
pop
addr16
mov
and
mov
adc
pop
xchg
mov
jno
mov
cmp
lods
sahf
ret
mov
pushf
ds
inc
clc
jns
push
xchg
js
jl
adc
les
add
add
or
inc
int3
sbb
and
push
jle
add
fistpll
test
data16
dec
into
cmp
or
loope
adc
sti
and
cmp
loopne
jno
in
out
jl
mov
repnz
mov
sahf
sbb
or
cli
jb
xchg
xor
test
arpl
test
add
xor
cmpsl
aam
mov
aad
fimuls
repz
cmp
icebp
adc
adc
jle
or
mov
adc
sub
sub
sbb
and
inc
mov
fisubrl
lahf
adc
push
mov
adc
inc
and
les
popf
imul
icebp
movsl
dec
pop
xchg
cld
xchg
inc
sub
push
mov
daa
cmc
jle
das
xorl
cmp
xchg
lea
and
add
or
sub
test
sub
pop
insl
pop
loop
add
dec
sbb
jb
sbbb
dec
mov
pop
jne
sarb
push
push
js
insl
mov
aad
adc
mov
cmc
mov
sbb
xchg
adc
das
nop
dec
enter
pop
jmp
cwtl
fsubp
std
dec
out
popf
lea
push
loop
test
movsl
jmp
or
adc
mov
popf
popf
pop
add
int3
incb
int3
stos
scas
sbb
in
insl
mov
insb
jmp
into
push
repnz
dec
xchg
inc
sub
adc
mov
out
cmp
fwait
dec
in
mov
scas
mov
fadd
xor
repz
test
jg
push
xor
movsb
stos
outsl
fcoms
daa
jg
movsb
sbb
in
mov
push
adc
xor
mov
hlt
popf
ja
dec
pop
push
hlt
push
sub
jle
cli
jns
mov
add
jo
jmp
daa
cmpsb
std
mov
outsb
out
sub
cmc
xor
ljmp
jmp
js
cmp
lea
pop
mov
sti
jecxz
sub
rcrb
sbb
and
xlat
inc
add
pusha
mov
or
mov
out
jg
or
outsb
loope
hlt
test
sub
pushl
rcr
decb
push
enter
add
add
add
jmp
ret
xchg
and
aas
int3
add
pop
jae
mov
jp
dec
mov
lcall
fldcw
movsb
jg
mov
mov
and
dec
mov
int
inc
or
push
js
scas
stos
dec
inc
inc
pop
jge
fs
push
jo
jns
and
jge
in
fs
mov
movsl
add
xchg
movsl
or
add
rcl
jmp
rcrb
xchg
push
sub
nop
xchg
scas
test
lock
inc
cmp
mov
mov
aad
or
outsl
pusha
rcrl
push
scas
div
jmp
cs
jmp
mov
out
inc
push
inc
sbb
aad
lret
ret
jns
add
xchg
push
ljmp
push
loopne
sub
sbb
add
push
rcrl
aas
dec
xchg
xchg
mull
cs
in
lods
or
lret
push
dec
and
sbb
push
inc
cmp
stos
jne
shl
sbb
repz
movsl
pop
movsb
and
fisubs
jo
ss
jmp
stc
add
aad
movsb
push
enter
aam
push
mov
add
test
cld
cmp
jnp
fisubrl
repz
lock
pop
jne
jnp
in
jne
push
ja
lcall
test
sub
xchg
flds
pop
daa
sub
cmp
in
data16
test
mov
shl
sub
xchg
jecxz
or
call
cmp
test
ja
mov
or
imul
jns
jmp
out
add
sub
mov
adcl
mov
call
stc
or
repnz
xor
pop
cmp
pop
jnp
nop
rorb
jg
out
add
nop
out
push
and
fisttpll
inc
fwait
imul
mov
mov
sbb
mov
mov
lods
decb
scas
pop
cmp
in
xchg
inc
cmp
add
add
fwait
pop
and
ds
xchg
mov
mov
mov
mov
addr16
aaa
push
mov
ret
mov
cmovb
mov
in
fdivs
fisttps
sub
rcll
add
loopne
cs
testb
jne
loope
mov
mov
mov
sbb
movhps
lock
dec
faddl
add
add
mov
cs
int
xchg
mov
jg
movsb
push
jnp
loopne
mov
pop
inc
mov
out
ds
push
mov
loopne
xchg
mov
and
aas
mov
xchg
outsl
in
cmp
dec
test
pop
addl
dec
frstor
stc
add
jg
sarb
mov
gs
inc
roll
ret
addr16
push
lret
push
lds
jnp
add
mov
idivl
sarb
adc
mov
scas
leave
movsl
fwait
xchg
test
sub
out
adc
aaa
pushf
xchg
mov
outsl
rcrb
aad
sbb
sti
jbe
jo
add
pop
push
loop
ja
idivl
mov
aas
cmpl
out
cmpsb
es
xor
das
or
mov
pushf
sbb
add
add
cmp
cmpsb
fcmove
loop
lret
push
inc
divps
icebp
mov
popf
and
mov
mov
inc
sbb
jg
lcall
loopne
movl
lahf
fs
and
cmpb
out
fistpl
dec
addr16
aad
sub
lret
scas
rcrb
push
movsb
cmovbe
repnz
mov
jne
push
ret
lods
add
add
pusha
imul
dec
sbb
cmp
mov
out
mov
add
pop
or
stos
je
and
adc
rorb
inc
pop
mov
inc
dec
jp
ds
dec
adc
pusha
ljmp
xor
pop
cltd
fistl
xchg
xchg
fdivrl
pop
out
cwtl
std
das
out
pop
add
dec
jecxz
push
xor
push
stos
fdiv
outsb
repnz
stos
fwait
adc
add
add
cmp
cld
scas
rcr
rcrl
js
mov
pop
stc
dec
mov
mov
jle
js
xor
clc
sub
pop
pop
hlt
rclb
repnz
mov
shlb
fidivrl
lahf
sub
jge
mov
pop
pop
sahf
mov
push
cltd
sub
ljmp
imul
sub
into
add
jmp
ljmp
lock
push
push
sbb
fchs
test
sahf
fcmovu
fldl
adc
mov
add
cmc
jbe
outsl
mov
mov
inc
aas
jb
mov
jae
enter
mov
jmp
je
pusha
test
int3
fistl
adc
das
mov
mov
pop
xchg
add
add
pop
cmpsb
sbb
pop
adc
and
stc
or
mov
sub
bndstx
lahf
inc
cli
add
pop
cmpsb
loope
imul
sbbl
out
xor
cmp
shll
push
sub
in
mov
movsl
inc
sbbb
jae
shll
inc
sarl
sar
cmp
popa
mov
lahf
xor
xchg
insb
add
add
push
bound
sysret
stos
xchg
lea
cwtl
adc
sub
xor
shll
xchg
popf
jbe
and
jne
jge
jo
insl
sar
jo
inc
ja
mov
mov
inc
mov
xchg
adc
out
shl
adc
xor
inc
aam
mov
cmpsb
iret
mov
mov
imul
mov
pop
stos
and
inc
or
push
dec
jge
lea
dec
lods
mov
inc
xor
xor
push
shlb
arpl
hlt
pop
xchg
divb
daa
negb
sahf
jb
outsb
push
mov
add
movsl
mov
enter
and
add
aad
sub
loopne
out
inc
adc
dec
sbb
loope
cmp
sbb
sub
dec
push
sbb
cmpl
sbb
shll
shll
dec
jne
add
add
fistpll
shrl
cmc
push
adc
outsl
push
sbb
jp
pop
or
pop
adc
lea
out
pop
adc
lretw
push
add
and
test
push
dec
imul
mov
sub
pop
add
lods
cmp
push
jae
cmp
int
mov
add
push
cltd
lahf
push
adc
mov
aam
insl
push
push
out
jno
addr16
adc
shrl
adc
movsl
add
cmp
andb
add
xor
sbb
imul
sbb
testb
arpl
add
cmp
aad
xor
rcll
mov
je
data16
sbb
sahf
rcrb
add
sub
jnp
mov
and
jle
nop
pushf
jno
lods
js
add
mov
sti
xor
pop
push
imul
mov
negb
sub
push
enter
aad
scas
sbb
push
mov
rolb
cmpsl
je
cmp
repnz
lret
xchg
or
mov
dec
cmp
orl
sbb
mov
movsl
jne
stos
sbb
mov
sbb
xorb
rcr
cmp
lcall
aas
pop
das
mull
test
out
inc
incb
xchg
push
xor
cmp
stc
xchg
addr16
sbb
rcrl
in
test
repz
add
jl
aam
test
fsubrl
sub
loopne
div
sbb
or
scas
mov
pop
pop
inc
pop
and
sbb
in
mov
jne
pop
call
push
outsb
dec
mov
out
sub
arpl
aad
dec
mov
jne
pop
das
pop
jle
leave
jge
pop
adc
std
mov
call
push
and
add
shlb
dec
or
pop
cmp
into
push
ss
jle
cltd
add
pop
jle
scas
repz
sub
xor
and
ds
shl
out
mov
outsl
cmpsl
push
jl
cmp
cmp
push
xor
inc
ret
loop
pop
push
mov
arpl
out
mov
push
mov
sti
mov
hlt
sbb
lods
pop
sub
cli
mov
pop
mulps
and
push
mov
sub
or
push
sub
adc
add
mov
push
shlb
rolb
sbb
push
adc
clc
adc
jae
sbb
jae
movsb
jae
fcomip
popf
fwait
mulps
adc
add
add
cmp
vhsubpd
imul
pop
ja
test
xor
sbb
cmp
dec
test
lock
dec
in
add
std
dec
inc
into
incb
and
sbb
jnp
cs
aad
sub
aaa
stos
popf
cmp
in
lcall
pop
mov
jne
stc
sub
aas
jb
sub
xchg
xchg
and
cs
inc
jp
loope
repz
jns
popf
sbb
fsubrl
pop
push
sbb
and
dec
lods
dec
xchg
into
int
push
das
sbb
fwait
test
data16
clc
icebp
push
lods
nop
fldenv
jno
jmp
mov
lock
arpl
mov
cltd
repnz
sbb
and
dec
jl
je
fbld
insl
sarl
add
add
imul
cld
xor
dec
mov
mov
pop
push
xchg
inc
pop
jecxz
add
and
push
jno
sbb
dec
movsl
lods
popa
neg
subps
mov
les
pushf
mov
inc
ret
lret
mov
push
int
push
rcrl
or
clc
xchg
scas
outsl
xor
add
std
cmpsb
pop
mov
pop
cmp
popa
jno
insb
mov
out
xchg
cmc
or
and
movsb
in
adc
sub
ret
std
push
jb
jmp
add
add
addr16
jle
pop
xor
into
cmp
dec
aas
cmp
movsl
rcll
sbb
and
and
out
mov
nop
sbb
in
nop
adc
xchg
repz
pop
popf
or
jae
cmp
adc
xor
mov
mov
sbb
scas
repnz
ds
neg
lahf
push
dec
fdivl
jae
cmp
cmpl
fs
test
push
push
mov
out
dec
popa
fwait
xchg
or
sbb
movsl
imul
aad
cmc
mov
shlb
mov
mov
or
mov
dec
sbb
xchg
stos
jno
pop
pop
mov
das
add
frstor
rcrl
sub
sbb
mov
push
and
mov
sub
das
pop
jmp
fwait
lret
cwtl
xor
mov
aaa
dec
jae
scas
sub
add
add
jle,pn
inc
cwtl
outsb
pop
xchg
insb
js
nop
aad
mov
pop
ret
jnp
jns
inc
das
or
mov
hlt
push
jmp
inc
pop
sahf
mov
adc
es
or
test
or
push
mov
das
dec
pop
mov
jp
popa
push
lcall
clc
fidivl
jecxz
nop
popa
aad
pushf
repnz
cld
aam
fistpll
add
dec
mov
push
or
and
pop
pusha
in
out
and
in
addr16
mov
add
or
push
inc
pop
mov
push
mov
and
jbe,pn
mov
pmovmskb
pop
out
xor
inc
pop
dec
jno
pop
stos
push
cli
mov
imul
or
hlt
icebp
inc
xlat
mov
dec
xor
fwait
add
adc
inc
and
je
add
push
pop
push
pop
sub
scas
dec
loopne
icebp
mov
mov
add
lcall
and
push
imul
dec
in
stc
movsl
lods
lret
inc
shl
push
pusha
xchg
pushf
jmp
cmpsl
outsl
test
cltd
ja
and
jno
xor
sbb
cltd
lea
popa
lods
xchg
sub
dec
pop
call
fs
shrl
fldcw
pop
scas
aas
out
iret
roll
test
add
pushf
xchg
add
lret
inc
imull
lock
mov
fcmove
aad
jge
lock
fcomp
sub
nop
lock
add
mov
cld
out
das
into
js
fisttpl
repnz
inc
fwait
mov
ret
aas
mov
jle
jb
dec
lahf
push
and
data16
mov
sub
push
mov
pop
into
ret
xor
sahf
lea
addb
ret
fcom
je
js
lods
pop
shlb
rorl
add
das
dec
xlat
inc
mov
nop
add
cltd
adc
orb
dec
cmp
cmc
mov
movsl
dec
sbb
ror
cmp
movsl
jmp
mov
push
repnz
mov
insb
mov
sbb
repz
scas
push
inc
in
mov
pop
call
cmpsl
push
out
fnsetpm(287
jg
add
add
lret
call
jns
mov
outsb
xchg
xchg
jmp
gs
fld
jo
xor
sbb
mov
pop
aas
ret
movsb
inc
js
sub
mov
shrl
adc
and
pop
mov
fcmovbe
gs
cmp
cmpsb
push
popa
int
mov
test
xor
shlb
icebp
lods
xchg
push
or
add
aaa
lret
cmpxchg
mov
aaa
add
jb
push
sahf
aaa
push
iret
adc
in
fwait
stos
ret
pop
into
bndldx
stc
add
mov
fldcw
test
inc
sbb
imul
lods
fisubrs
shl
mov
inc
push
add
mull
jo
mov
cmpsl
leave
loop
clc
xor
fwait
inc
sbb
sub
jb
push
adc
sub
les
sahf
cld
inc
inc
outsl
sbb
add
add
xchg
cwtl
mov
loope
je
mov
popa
mov
imul
xchg
es
push
pop
imul
fnsave
inc
mov
test
ret
xchg
mov
adc
fsubrl
or
add
lods
test
jge
adcl
xor
xchg
dec
rorb
pop
lods
subb
call
in
adc
fstpl
mov
add
push
int3
outsb
mov
add
add
add
loopne
cmp
inc
mov
cld
xchg
mov
in
jge
mov
sbbb
inc
fwait
jbe
aaa
mov
push
pop
or
xchg
cmc
sahf
gs
dec
insl
sbb
bound
mov
fdiv
stos
jb
xchg
mov
mov
jl
push
inc
outsb
xchg
repz
iret
loope
imul
mov
ja
aam
jnp
loope
imul
loope
sbb
jmp
insb
ss
sub
imul
jae
add
aaa
into
shlb
or
test
lahf
and
cmp
cmpsb
xchg
and
dec
out
test
sbb
inc
imul
adc
lock
ss
fcoml
lock
xor
sub
imul
sarl
or
mov
test
jnp
and
pop
in
ljmp
fildll
popa
xchg
hlt
add
adc
sahf
scas
dec
push
test
dec
std
and
mov
jnp
xor
pop
popf
sbb
cs
insb
fsts
into
dec
fdivl
xchg
mov
test
push
xchg
vmovaps
xchg
pop
aad
xor
outsl
fnsave
pop
loop
mov
mov
cmp
aaa
aad
daa
or
movsl
and
mov
mov
mov
leave
xor
movsl
xchg
pop
pop
or
and
xchg
xchg
ficoms
sbb
sbb
out
push
leave
pusha
sbb
shl
loop
rcrb
addb
leave
sbb
xor
enter
xchg
xor
repz
in
cmp
xchg
pop
xchg
cmpsb
movsb
in
jae
mov
loope
clc
popf
scas
mov
jno
or
inc
test
dec
test
in
in
das
xchg
push
ds
roll
mov
jp
icebp
lret
lods
push
jp
push
xchg
jae
fwait
dec
push
repz
push
loopne
push
cmpsl
popa
mov
add
jo
and
dec
cmp
xor
aad
rol
add
daa
int
cmp
cld
jge
push
pop
inc
push
popf
lock
stos
ja
cmpsb
rcr
les
stos
std
pop
mov
inc
clc
je
lret
test
ljmp
es
mov
add
clc
rolb
jl
fdivrl
icebp
push
test
lds
mov
dec
paddusw
cmp
sahf
into
push
push
add
dec
stos
movsl
rorl
in
out
in
cmp
xchg
pop
int3
cmp
aad
jecxz
add
fisttps
or
mov
jb
loope
loopne
dec
pop
dec
mov
sahf
adc
rcll
sbb
ja
inc
mov
aas
sub
leave
mov
push
in
lods
push
in
fisubl
push
inc
mov
mov
cmpl
sub
xor
adc
addr16
inc
or
stos
andl
fidivl
faddl
inc
and
mov
cmp
js
popa
in
push
mov
ss
xchg
cmpsl
xchg
mov
add
repz
stc
sti
pushf
jo
dec
mov
mov
arpl
repnz
repz
movsl
and
xor
sahf
pop
xor
lret
lock
stos
arpl
pop
lds
divb
pop
psrld
add
insl
aad
movsl
mov
mov
loope
xor
pop
icebp
jne
xor
cmp
enter
imul
lret
repz
dec
or
out
call
stos
jb
out
and
pop
pusha
sbb
inc
mov
in
push
lret
pop
sarl
xor
in
ret
enter
outsl
fcoms
xchg
mov
mov
mov
sbb
fiadds
add
add
adc
outsb
mov
xor
inc
fcomps
xor
jns
cld
mov
sub
sbb
test
sahf
pop
jge
and
es
adc
sti
mov
push
push
bound
xchg
aad
in
dec
pop
mov
sti
adc
lock
stos
push
or
in
dec
les
fwait
pusha
fs
sbb
or
cmpb
icebp
roll
jmp
rolb
ds
call
lods
fdivs
test
cmp
mov
std
int
fidivrs
cltd
cs
and
ja
int
rorl
andb
aas
mov
jb
xchg
mov
out
or
inc
jl
push
test
dec
movsb
call
pop
inc
inc
pop
cmc
or
sub
xor
out
popa
daa
mov
mov
aad
dec
mov
xchg
add
out
pop
sti
pop
mov
sti
testb
sub
add
add
ficomps
pop
repz
lcall
xchg
aam
push
mov
popa
jb
dec
loopne
test
lods
adc
add
nop
mov
dec
jb
loope
mov
out
sub
xchg
sarl
mov
call
sub
fisttpl
cmpsb
and
push
xchg
jl
and
data16
jl
push
cltd
sub
cltd
dec
out
shll
and
ljmp
jl
add
and
jo
push
add
sbb
sahf
xchg
subb
rcrb
xorl
movsb
sub
sub
cmc
xchg
pop
leave
ljmp
stos
jne
add
push
add
mov
sarl
lods
andl
dec
and
lret
and
push
fs
cld
cs
inc
cmp
je
jg
cmpsl
sar
and
test
mov
dec
add
hlt
jle
jmp
test
inc
push
mov
pop
ds
xor
je
ja
inc
cmpl
jecxz,pt
daa
jne
sub
jp
cld
sbb
es
pop
lds
aas
rorb
jne
mov
repz
mulb
mov
out
adc
icebp
mov
stos
mov
sbb
sub
lds
rolb
ds
cmc
sti
into
mov
stc
stc
xor
pop
insb
cmc
int
flds
dec
pop
lds
fstps
popf
or
sbbb
ret
imul
aaa
andl
sub
sbb
and
add
pop
cmp
std
imul
pop
adc
imul
push
dec
mov
jmp
cld
lcall
xor
mov
add
syscall
inc
cmp
jae
std
jne
popf
pushf
js
push
js
xlat
fcomps
bound
dec
out
pop
punpcklwd
push
push
cmp
dec
daa
adc
push
pop
push
add
pop
cli
dec
std
gs
push
popf
inc
sbb
mov
test
xor
sub
popa
sbb
add
xchg
out
movsb
sub
flds
inc
push
or
add
sar
repnz
mov
mov
mov
adc
mov
out
xchg
addr16
insb
test
adc
pop
ja
aam
xchg
hlt
cmpb
cmp
je
jmp
mov
jb
or
popf
lret
fs
push
rorl
sahf
mov
inc
andb
fdivrl
adc
sbb
sbb
jp
fsts
or
add
or
daa
xchg
push
cld
test
add
movsl
or
mov
stc
lods
push
mov
jno
lret
push
jp
xor
into
xor
jns
sbb
add
adc
jg
push
push
imulb
hlt
fcmovnu
mov
inc
cli
pop
and
rcrb
jge
xlat
sbb
lcall
test
inc
mov
stc
subl
fs
jo
cmpsl
add
push
jne
mov
aad
mov
jae
ljmp
pop
aaa
or
in
aaa
jp
data16
mov
gs
or
and
mov
test
cmpsb
loop
pop
aam
adc
mov
in
cmp
cmc
scas
pop
daa
cmp
cld
push
in
or
pop
jge
enter
jnp
es
insb
inc
fwait
mov
fucomip
pop
sti
div
bound
fnsave
cltd
imul
mov
movsl
cli
mov
add
jo
dec
fimull
popf
jne
push
inc
pop
in
pop
ja
mov
aad
test
mov
adc
dec
imul
out
cmp
std
or
jne
xchg
loope
fwait
push
ss
dec
xorl
pop
pop
je
les
dec
aad
pop
hlt
das
sub
cmp
insb
adc
int
into
pop
sbb
test
jmp
ds
mov
dec
mov
inc
out
or
add
or
sub
adc
mov
inc
jnp
jno
cld
lea
sbb
cmp
bound
add
jae
mov
xor
fwait
arpl
loop
adcl
cmp
enter
push
cmpsb
inc
incl
ja
mov
