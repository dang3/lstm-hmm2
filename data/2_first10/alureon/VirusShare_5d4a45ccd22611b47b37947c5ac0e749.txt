push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
mov
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
add
add
sahf
inc
jnp
sub
das
rcl
pop
mov
jae
adc
int
sbb
inc
xchg
push
stc
psrld
sbb
addr16
or
xchg
bound
mov
sub
es
imul
arpl
jg
mov
mov
das
mov
mov
cmp
lods
sbb
cmc
and
out
rol
push
outsl
xchg
lret
adc
sbb
mov
orb
ret
lahf
fmull
js
subl
dec
cmp
mov
cwtl
push
cli
in
add
or
popa
cmp
cmp
xchg
in
mov
add
add
dec
inc
cmpsl
pop
rcll
jg
jg
nop
push
es
inc
or
and
xchg
mov
dec
pop
fidivrl
daa
dec
or
cmp
xor
pop
inc
fwait
pop
xchg
stc
cmp
mov
sbb
inc
lret
jecxz
leave
and
jl
hlt
jae
out
ds
dec
cmp
enter
jge
rcrb
xor
adc
cmp
outsl
cltd
jmp
fiadds
cmp
ja
adc
mov
add
add
jge
lret
cmp
roll
jg
mov
mov
sarb
stc
in
mov
arpl
pop
xlat
xor
outsb
cwtl
jnp
das
mov
scas
adc
sub
mov
sbb
lock
pop
pop
mov
lods
mov
cmp
jg
mov
push
outsb
call
mov
add
dec
mov
in
cltd
pusha
fldcw
adc
adc
mov
pop
push
imul
sub
loopne
lds
ljmp
daa
and
jne
mov
sub
cltd
or
mov
test
ret
or
push
sbbl
ficoms
push
sbb
cmp
inc
pop
xorb
xchg
pop
cmp
inc
mov
sub
std
mov
add
and
xchg
ja
leave
decb
test
insl
jg
das
pop
mov
aam
dec
sbb
shrb
aas
cmp
loopne
dec
sbb
inc
and
xlat
bound
sub
mov
mov
cwtl
sbb
psllw
inc
iret
lea
push
xchg
pop
adc
paddw
pop
stos
into
or
fistpll
mov
es
ret
dec
or
int3
mov
inc
fisubrs
in
mov
aad
rorb
shl
cwtl
lds
push
fcomip
ret
push
mov
add
adc
hlt
add
xor
roll
fisttpll
fnsave
ret
faddl
mov
out
das
and
cwtl
cmp
shl
xchg
fldt
sub
mov
or
movsb
sbb
out
scas
divb
arpl
std
lret
inc
mov
out
or
pop
les
int
jmp
aam
test
push
test
ss
sbb
lods
jge
add
jmp
mov
leave
fldenv
xlat
sub
js
or
jecxz
add
push
inc
inc
add
xor
sti
xor
add
ljmp
mov
scas
hlt
xlat
mov
and
mov
pop
pushf
jmp
shll
jns
stos
sbb
test
movsl
cltd
and
fdivs
push
fnstsw
test
aad
fcompl
repz
out
xor
push
pop
push
sub
add
add
fildl
sahf
mov
ret
cmpsb
cltd
pop
cmp
daa
dec
fcoms
cs
xlat
ret
leave
sbb
mov
inc
jle
push
jmp
js
je
mov
xchg
xchg
cmp
popa
sbb
push
jle
push
dec
adc
pop
lcall
mov
out
pop
and
sarb
sbb
in
out
xchg
movsb
mov
ss
xor
mov
adc
cltd
dec
add
popa
jnp
repnz
shll
orl
mov
inc
sarb
mov
or
xchg
movb
cmp
dec
sbb
mov
outsb
mov
lea
jge
lock
cmc
in
add
xchg
add
cmp
js
xchg
xchg
scas
cmpsl
xor
adc
mov
pop
stos
and
loop
jg
popa
inc
add
sbb
ds
scas
jle
and
mov
jl
xor
xor
data16
insb
xlat
movsb
pop
inc
sahf
xor
nop
addb
sub
xor
xchg
in
out
out
data16
loopne
or
mov
test
cmp
das
jmp
push
mov
jp
in
push
int3
lret
mov
mov
or
insb
pop
cmpsb
ja
xor
mov
push
cmp
orb
push
jl
push
xchg
and
push
pop
mov
scas
lret
jle
sbb
add
xchg
pop
shlb
jo
or
popa
arpl
and
sahf
mov
or
cmp
icebp
retw
xchg
fsts
out
or
mov
push
jno
cwtl
sub
adc
xchg
fwait
loope
mov
pusha
xor
outsb
inc
pushf
or
adc
or
leave
mov
dec
inc
add
scas
scas
ret
loopne
popa
nop
aas
adc
cmc
jecxz
rcll
pop
jno
xchg
or
fsubl
fs
inc
push
fildl
add
xchg
rcrl
push
jecxz
test
test
sbb
int
push
in
fcoms
mov
fsubl
insb
shrl
call
subl
shrb
pop
in
addb
mov
jbe
pop
scas
jae
xchg
inc
outsb
mov
fistpll
add
xchg
arpl
jl
shll
lock
mov
ss
loop
out
das
sarl
arpl
mov
xor
add
add
das
scas
cmc
popa
rolb
xor
inc
jbe
pop
dec
fmull
inc
stos
fs
mov
sub
sbb
mov
inc
xchg
xor
dec
add
bound
dec
out
push
mov
in
lock
inc
hlt
ret
outsl
ss
push
push
inc
nop
test
inc
mov
dec
rclb
ja
mov
in
jmp
ret
icebp
xor
or
dec
sub
shlb
pop
insl
mov
cmp
or
scas
mov
jo
lret
jb
xor
xor
lahf
pop
call
or
rol
lret
pushf
lods
push
outsl
push
jg
mov
pop
jae
movsb
jb
adc
lea
dec
mov
and
inc
jb
in
aam
sub
jns
idivl
mov
fdivrl
out
mov
add
inc
xchg
add
or
pop
mov
xchg
and
sti
sarl
add
and
mov
fisttps
jle
repnz
pop
rcrb
and
and
xchg
or
je
adc
add
sub
adc
mov
mov
rclb
cmpsl
dec
arpl
jb
inc
fmuls
jg
subl
sub
push
lahf
js
jb
sti
push
sub
lret
sbb
clc
jle
aad
int
xchg
mov
out
inc
xchg
incb
test
fldenv
cwtl
std
and
and
iret
mov
push
popa
adc
ljmp
pop
rorb
mov
pop
push
mov
xchg
ljmp
cmp
jne
jbe
lret
sbb
lret
js
inc
push
insl
xchg
notb
arpl
aad
fwait
repz
repz
xor
xchg
imul
out
push
inc
pop
xor
dec
test
ja
inc
inc
int
divb
stc
imul
xor
dec
pop
sbb
adc
inc
inc
mov
push
notb
mov
push
gs
loop
fidivrl
mov
xchg
popa
jge
out
mov
sbb
and
fistl
xchg
fadds
adc
sbb
add
add
arpl
mov
cmp
and
outsl
stc
out
iret
cmpsb
xchg
mov
sub
std
ret
fstps
dec
pusha
je
sti
xorl
cld
mov
jnp
ret
dec
fstpt
pop
inc
sub
fidivs
mov
xchg
mov
cltd
in
into
faddl
outsl
das
call
int3
insl
iret
out
loope
enter
mov
lahf
popa
scas
fldenv
sub
mov
mov
pop
scas
jne
xor
add
es
ljmp
outsb
dec
sbb
adc
push
xor
mov
add
aad
leave
lods
arpl
dec
push
enter
sub
repz
faddl
cltd
mov
pop
inc
dec
fwait
jne
xchg
mov
pop
xor
ss
cmp
xor
inc
cld
inc
jmp
aad
cmp
bnd
test
sbb
loopne
jns
rolb
daa
jb
dec
lahf
ret
adc
and
inc
insb
scas
mov
fs
pop
cmp
pop
jg
popf
jle
pop
arpl
mov
or
jmp
cmp
les
xchg
mov
daa
in
shll
imul
mov
in
std
cmp
or
push
ss
mov
and
nop
pushl
data16
jmp
xchg
mov
aad
mov
cmp
aaa
jno
pop
lock
jno
sub
sub
push
arpl
rclb
je
call
fcompl
pusha
inc
mov
ficompl
lret
enter
loope
and
mov
jg
sub
aaa
fisttpll
or
push
imul
outsb
xchg
and
mov
loopne
add
mov
adcl
std
arpl
lock
mov
pop
movsl
cltd
and
push
and
lahf
shrb
popa
sbb
inc
mov
push
inc
cmpsl
xor
mov
xor
std
loopne
jno
add
das
fildll
xchg
scas
and
inc
jb
xchg
rol
pop
repnz
outsb
mov
es
sahf
aas
or
les
sub
cld
mov
mov
add
or
mov
adc
mov
add
and
rclb
xchg
dec
loope
mov
add
roll
add
jecxz
ret
or
adc
cmpsl
pop
sti
mov
nop
mov
cwtl
inc
adc
popa
dec
loop
mov
cmc
push
jp
mov
testb
shl
pop
mov
xchg
jp
mov
inc
data16
cltd
or
lret
loop
test
jle
sub
lret
dec
xchg
add
aam
mov
add
add
add
das
mov
cmp
sub
push
jecxz
lods
push
and
xchg
popf
xor
cld
add
jle
cmp
fwait
mov
in
bound
push
cli
jl
mov
xchg
out
xchg
sub
push
ja
hlt
fwait
ret
jbe
idivb
xor
pop
sub
stos
jle
rorl
xor
mov
sub
jo
mov
sbb
or
inc
imul
mov
add
add
push
rcll
xchg
fs
sti
repz
sub
pop
aaa
std
push
push
in
mov
and
pop
cmp
add
mov
fdivp
cmp
out
shll
shlb
sahf
jnp
sub
add
mov
ret
ret
iret
movsl
fs
dec
outsl
inc
lea
pop
iret
add
jp
imul
inc
pop
or
pop
jnp
or
fcmovbe
xchg
pop
lret
inc
ljmp
add
lock
test
push
inc
mov
jle
sbb
cld
mov
pusha
mov
mov
pop
and
add
xchg
outsb
clc
mov
xor
xchg
push
cltd
inc
cmp
mov
sub
push
flds
xchg
jp
cltd
ljmp
repnz
lock
aam
dec
pop
inc
outsb
mov
je
dec
mov
add
ds
and
test
mov
movsb
pop
out
dec
cmp
mov
aad
inc
test
mov
out
pop
add
stc
fstps
pop
enter
outsb
mov
aam
mov
cltd
in
xlat
stc
sti
aaa
fs
push
shll
sbb
adc
arpl
lods
int
ss
in
out
mov
aas
add
sub
mov
pop
push
aam
rcl
xlat
dec
sbb
popa
xor
sbb
push
push
xchg
into
sub
nop
mov
push
mov
add
test
les
aam
sbb
pop
cmc
enter
popa
jo
into
test
cld
ja
adc
xor
shrb
cmpsl
push
cmp
cmp
enter
jne
cmp
pop
bound
add
fcoml
int
shrb
inc
xchg
mov
jne
xchg
jle
mov
enter
jecxz
aas
xchg
ja
inc
mov
pop
scas
add
aas
in
and
add
add
pop
sub
push
push
scas
lahf
inc
cmc
mov
sbb
stos
jp
sbb
aad
adc
cmc
iret
cmpsb
pop
lock
push
popa
mov
xor
testb
mov
lcall
bound
stc
mov
fnstenv
lret
mov
mov
sub
pop
call
and
loopne
xor
cld
xlat
lret
mov
pop
fistps
or
add
rorl
out
pop
mov
test
je
push
lret
aaa
jb
mov
mov
shr
clc
fwait
mov
cltd
mov
xchg
aas
nop
movsb
push
xlat
jns
add
xchg
mov
inc
aaa
int3
fcmovne
adc
fcmovnbe
dec
cs
movsb
fstpt
jns
fmuls
repnz
subl
inc
addl
sbb
movsb
imul
int3
push
cmp
sbb
jmp
add
jmp
lock
into
je
cmp
cwtl
hlt
ja,pt
jge
repnz
adc
ret
and
inc
aas
loope
mov
adc
repz
jno
jg
add
or
pop
fisubrl
xchg
outsb
fucompp
mov
inc
sti
sbb
andb
aas
inc
subb
pop
xchg
je
dec
or
sbb
aaa
pop
out
in
das
pop
lcall
jae
negl
sub
add
add
add
popw
test
jno
adc
test
jns
pop
push
sahf
xor
push
pushf
fnsave
int
ds
in
mov
enter
push
cmp
rorl
mov
js
repnz
sbbb
lods
lea
cmp
mov
pop
mov
into
mov
mov
ds
pop
fwait
test
pop
roll
adc
pop
mov
dec
jb
mov
lods
mov
pminsw
test
out
xor
jb
mov
add
add
lret
fistps
mov
push
sti
mov
adc
xor
and
jl
rcrb
dec
stc
es
pop
test
mov
into
xchg
shl
sbb
in
dec
sub
fidivrl
xchg
sub
fistpll
push
jecxz
add
test
jb
incb
push
inc
pop
xchg
arpl
xlat
cmc
into
test
jecxz
xor
sbb
sub
jbe
movsl
mov
imul
add
push
in
xchg
pop
lock
mov
adc
imul
shr
pusha
movb
push
and
add
mov
testb
leave
daa
sbb
pop
mov
and
mov
sahf
pop
repnz
mov
mov
fnsave
jl
xor
jns
cltd
dec
insl
cwtl
mov
fwait
insb
or
outsb
push
mov
mov
mov
repnz
cld
sub
sbb
jae
hlt
cwtl
nop
pushf
out
jecxz
adc
dec
lret
out
popa
jecxz
orb
sbb
gs
or
incl
push
jbe
insl
aad
jne
mov
mov
cli
fadds
mov
add
imull
in
sbb
mov
sub
cmp
add
lret
js
xor
jmp
fs
sbb
test
lret
inc
cmovno
sahf
mov
jecxz
imul
mov
add
data16
out
mov
or
adc
or
xchg
inc
test
aad
push
cmp
cld
les
out
push
add
rcll
adc
fildl
lret
and
or
js
shl
and
mov
pop
stos
xchg
jp
movsl
les
mov
xor
ficomps
into
fwait
insl
mov
mov
or
mov
add
add
loope
xchg
xor
sbb
data16
stos
mov
push
jle
mov
aas
out
mov
scas
dec
clc
sub
cmpsl
push
fdiv
add
imul
faddl
pop
add
push
mov
xor
sbb
leave
dec
lea
push
scas
call
xchg
aaa
jl
pop
and
pop
int
add
jp
test
add
xor
imul
jnp
or
ret
sbb
hlt
aam
enter
ret
loopne
inc
out
push
je,pn
jmp
inc
cmpb
int
in
push
stc
ret
mov
out
loopne
cld
pop
out
shlb
xchg
cmp
xor
into
sbb
out
add
out
test
enter
adc
subl
jge
mov
add
add
and
push
pop
js
push
fsubl
scas
jle
pop
push
mov
stos
fmuls
adc
xor
xchg
push
loope
outsl
stos
xor
push
hlt
icebp
mov
scas
out
xchg
rcll
mov
ficoms
dec
lock
addb
xchg
scas
mov
cmp
lcall
push
in
add
into
sbb
sahf
int
xchg
out
mov
dec
jne
addr16
cmp
aam
idiv
or
std
addl
add
ljmp
mov
pop
les
xchg
mov
adc
sub
push
mov
sbb
subb
lcall
repz
int3
pop
mov
push
lock
fcomip
push
jns
ret
stos
mov
xchg
xchg
pop
fsub
add
mov
pop
insb
inc
cwtl
dec
push
sbb
jne
in
cmc
jge
jl
and
dec
add
mov
sub
dec
and
add
fnstenv
cmp
or
jno
sub
es
mov
sub
push
cld
rcl
pop
imul
jne
inc
jmp
lods
adc
inc
imul
cs
filds
popa
movsl
mov
mov
mov
sarl
mov
lahf
popa
sub
add
bnd
push
pusha
stos
sbb
mov
pushl
dec
add
sub
jmp
sbb
mov
dec
jle
lret
addr16
es
push
push
sbb
ja
test
loopne
fs
rolb
cmp
subl
outsl
jb
stc
xor
ja
cmc
les
inc
push
das
loop
sti
repnz
mov
aaa
dec
jns
fdivrl
cs
cmp
faddl
xor
inc
mov
sub
mov
rep
imul
in
movsb
data16
and
ret
add
add
aad
imul
sbb
bound
and
xchg
scas
cmpsb
lea
movsl
pop
mov
cmp
dec
add
inc
maxps
arpl
out
sbbl
ret
dec
xchg
xchg
pusha
in
pushl
mov
pushf
mov
push
arpl
or
mov
andl
push
sbb
aaa
in
dec
cmc
out
aaa
push
in
cmp
mov
sub
push
and
shrl
adc
add
add
push
mov
rcr
jo
xor
pop
icebp
inc
sahf
mov
fldl
pop
mov
and
push
cmpsl
fmull
out
xchg
xchg
mov
inc
xor
popf
insb
ljmp
inc
inc
mov
push
push
push
lods
push
push
insl
mov
push
pop
lahf
pop
cltd
mov
mov
dec
push
push
stos
andb
decb
iret
subl
add
out
or
mov
pop
ror
leave
lock
enter
sbb
mov
les
mov
mov
je
pusha
repz
mov
mov
sahf
push
popa
mov
popa
push
pop
or
aam
enter
scas
xchg
lods
mov
sbb
sti
sub
dec
adc
push
jmp
dec
push
js
mov
mov
mov
pop
lahf
rolb
mov
add
pop
dec
mov
jmp
and
rolb
or
inc
add
movsb
pop
sbb
dec
and
and
fisttpl
add
pop
jp
jno
pushf
sbb
int3
push
aad
mov
jae
adc
jp
mov
xchg
call
add
out
aaa
cld
out
mov
repnz
mov
shll
lret
inc
aam
push
in
mov
adc
std
dec
lret
lcall
cmp
dec
inc
push
add
add
aaa
lret
incb
dec
mov
jb
cmp
mov
enter
sbb
scas
sbb
add
decl
jns
loope
aad
mov
sti
scas
xchg
adc
fnsave
or
jno
nop
xchg
ds
xlat
and
insb
out
xor
push
dec
sub
dec
js
cmp
cs
mov
les
lcall
push
push
add
push
test
mov
or
cmp
mov
xor
and
ds
jle
aaa
mov
test
xchg
pop
or
imulb
jno
ja
jae
dec
or
int3
popl
cmp
xor
xchg
clc
cmpsb
les
sti
mov
xor
push
xor
repz
mov
cmpsb
aad
add
sbb
pop
inc
push
pop
mov
fcoml
test
sub
inc
jl
test
fadds
test
loopne
xchg
insb
sti
jp
call
sbb
cmp
clc
popl
xchg
ret
jle
mov
std
mov
test
mov
pop
inc
cli
out
cmp
dec
lock
jmp
mov
xchg
inc
xchg
inc
sub
mov
pop
out
sub
outsl
aas
or
aaa
dec
add
add
push
movl
hlt
shll
test
lahf
fadds
sbb
in
loope
pop
adc
inc
jl
popa
sahf
xchg
xchg
fwait
jnp
jns
mov
data16
lods
xchg
cmp
push
push
cmp
mov
pop
into
inc
rcll
mov
data16
and
popa
in
mov
lea
jl
dec
out
sahf
imul
arpl
xchg
int
enter
scas
inc
add
subl
shll
mov
stc
nop
sbb
jmp
and
dec
js
mov
das
pop
or
incl
out
and
mov
dec
xor
mov
dec
mov
mov
loop
stc
rclb
mov
mov
scas
out
mov
or
out
sbb
xchg
rclb
push
sub
jg
adc
pop
or
xor
cltd
or
sahf
add
lret
pusha
test
fsts
cmp
int
pop
cmp
dec
into
jnp
xor
movsbl
into
pushl
jb
shr
mov
ljmp
ret
mov
pusha
dec
pop
cmp
int
pop
fnstsw
lea
cld
lret
das
xchg
xchg
push
fndisi(8087
pop
stos
or
sbb
sbb
push
jbe
and
cs
enter
mov
movsb
or
add
xchg
lahf
inc
inc
pop
ret
outsl
test
add
sbb
push
test
stos
add
pop
lods
or
insb
dec
mov
inc
in
into
mov
ss
das
fisubs
data16
push
lcall
mov
mov
add
sub
or
jge
js
arpl
in
inc
imul
mov
mov
or
mov
pushf
ja
dec
lock
sbb
mov
push
xchg
push
fwait
and
or
add
and
sub
fldenv
mov
or
int
bound
adc
or
shll
xor
pop
iret
insb
mov
faddl
add
clc
lock
xor
jl
les
mov
inc
cmp
pop
dec
xor
hlt
lods
inc
ds
sub
lret
and
xor
push
cmp
lahf
mov
pop
adc
lods
dec
dec
hlt
fldl
mov
inc
cmp
add
insb
lret
fucom
jo
and
clc
mov
cmp
mov
mov
imul
mov
mov
push
push
ja
push
xor
pop
push
orl
popf
mov
xchg
add
or
fs
scas
jp
push
into
fs
std
clc
jno
push
in
add
mov
cmp
mov
in
dec
mov
shrl
int
pusha
sbb
add
in
sbb
dec
adc
sbb
mov
inc
sub
shlb
orl
xor
loope
imul
pop
mov
jge
add
imul
pop
and
jne
or
loope
pusha
insb
inc
fmuls
add
lods
xlat
mull
dec
jb
mov
testl
and
or
shll
xor
mov
sbb
pop
sti
add
add
ret
jns
xor
mov
aam
in
sarb
jecxz
dec
push
and
and
sbb
ss
sti
fnstsw
mov
mov
je
inc
int3
fsubl
scas
insl
sbb
dec
out
xchg
and
test
inc
xchg
xchg
mov
mov
sbb
mov
out
pop
mov
mov
outsb
inc
sbb
xor
xlat
call
dec
cltd
cs
lcall
add
pop
inc
daa
xchg
mov
xor
jns
lds
icebp
mov
pop
sbb
negb
mov
inc
or
inc
and
ss
pop
aaa
mov
enter
sub
addb
in
test
into
push
cmpb
sub
popa
mov
shll
sub
jp
xchg
hlt
cmc
push
mov
loope
jmp
or
gs
mov
stos
shl
or
jecxz
adc
xchg
cmc
add
iret
lods
fwait
sti
in
scas
xchg
in
cltd
adc
push
sub
dec
pop
or
test
pop
popa
addr16
andb
push
and
inc
dec
cmp
scas
daa
test
cmp
push
or
popa
pop
sbb
adc
add
fidivrl
jbe
add
xor
cld
and
fcoml
mov
jle
push
add
add
repnz
inc
jnp
out
mov
jecxz
pop
xchg
xor
nop
mov
das
jl
sti
sub
nop
hlt
cmp
out
pushf
inc
dec
icebp
lods
imul
lock
jbe
and
idivl
and
andb
adc
stos
push
mov
mov
testb
dec
xor
cmp
mov
sbb
inc
stc
inc
daa
scas
ds
adc
add
clc
cltd
push
or
popl
push
dec
mov
sbb
or
gs
sbb
sub
dec
aas
incb
call
cld
outsb
and
daa
lcall
mov
int
pop
fnstcw
mov
outsl
movsb
ss
cmp
sbb
gs
push
ss
add
add
ds
lret
pusha
test
jo
pop
mov
xchg
paddq
test
dec
mov
mov
rorl
movsb
fst
pop
fwait
popf
dec
leave
mov
int3
pop
jae
movsl
xchg
adc
cmp
outsl
cmp
das
cmpsb
jmp
cltd
outsb
inc
dec
adc
dec
push
aad
and
rclb
add
jg
mov
mov
dec
daa
fistl
add
add
push
sbb
add
rorb
xchg
cld
ficomps
pop
in
pop
xchg
and
adc
mov
cmpw
orl
je
xchg
mov
sahf
mov
test
iret
stos
shrl
lret
jmp
rorb
cmpl
inc
mov
movsb
push
imul
jmp
mov
jmp
push
repnz
push
scas
push
adc
shl
outsl
mov
add
test
push
outsb
ja
sub
call
ret
cmc
mov
and
xor
pop
insb
inc
sub
gs
or
sub
xor
mov
xchg
and
push
fs
inc
imul
nop
mov
dec
mov
mov
pop
shlb
gs
jb
jae
dec
xchg
mov
jbe
je
mov
xchg
outsl
gs
sbb
add
js
pusha
cmpsb
xchg
cmc
mov
mov
adc
inc
dec
adc
jns
sbb
fdivl
stos
adc
xchg
stc
popf
push
xchg
das
cmp
push
rcr
mov
in
push
inc
mov
mov
aas
cwtl
or
add
sbb
adc
rcrb
insl
xchg
pop
mov
insb
or
jge
push
sti
pop
test
repz
movl
cltd
ret
or
add
push
add
mov
or
sub
ja
daa
pop
lea
inc
rorb
fsubrs
mov
sub
call
mov
push
or
test
add
insb
push
int3
inc
lock
jp
cmp
imulb
cli
mov
pop
les
mov
sahf
lahf
inc
jle
jge
jecxz
adc
rorb
pop
shlb
fisttpll
scas
xchg
cmovge
cld
popf
je
and
pop
pop
xor
xchg
lret
cwtl
scas
xchg
adc
