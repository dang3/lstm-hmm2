pop
and
jg
and
xlat
sahf
cmp
pop
or
fmuls
mov
jge
in
outsb
outsl
add
js
sbb
in
push
mov
mov
and
dec
and
push
xchg
push
mov
xor
lods
lret
mov
push
cmp
movsb
pop
daa
in
push
mov
cmp
lods
test
mov
mov
enter
in
inc
ja
inc
sub
sub
shrb
sbb
sarb
cwtl
mov
jbe
fnsave
mov
sub
or
dec
sbb
add
cmp
rclb
mov
mov
mov
push
add
pop
outsl
test
sub
mov
dec
cwtl
rcrb
sti
push
push
mov
mov
fnclex
lock
dec
sbb
xchg
mov
lahf
adc
dec
int3
xchg
mov
mov
jne
sub
sub
adc
add
mov
mov
sar
xor
mull
into
jb
ficoml
add
subb
push
std
fbstp
mov
mov
stos
repz
push
dec
arpl
test
push
jae
dec
mov
jbe
mov
repnz
xor
push
stc
push
inc
xchg
push
jp
add
fcomip
xchg
add
jbe
cmp
adc
imul
pop
jne
mov
or
cs
dec
iret
sbb
in
add
inc
bound
mov
jg
pop
mov
jb
mov
add
and
and
repnz
or
ret
fwait
mov
addl
test
push
movb
mov
je
jl
pop
xchg
jl
data16
test
sub
inc
cmpsb
in
popf
rolb
adc
into
ret
xor
fisttps
loopne
pop
cmp
push
pop
sub
or
mov
sub
stos
outsl
cmp
add
sub
add
test
out
repnz
or
cmpb
push
scas
mov
xchg
std
and
jecxz
lcall
mov
loope
mov
and
aas
adc
cmpsb
fadds
push
sbb
into
jl
xchg
test
fistl
jnp
sar
sahf
mov
faddl
adc
out
lcall
mov
pop
or
bound
add
es
stos
lcall
outsb
pop
mov
and
stos
pop
and
xor
mov
add
pushf
test
and
inc
jae
test
or
xchg
sub
and
pop
aad
out
fstpt
jecxz
outsb
bound
xchg
sarl
jne
aam
sbb
xor
aas
cs
clc
push
xchg
jp
std
test
pop
add
movsb
add
jo
data16
push
movsl
es
push
subl
pop
int3
cmp
add
ret
pop
popf
sbb
iret
adc
adc
out
pop
mov
repnz
mov
popf
in
imul
pop
mov
add
and
or
inc
cmp
xchg
xchg
insl
les
repnz
xchg
insb
and
mov
ja
cmp
gs
inc
xor
es
cwtl
mov
ret
xchg
fwait
in
cmpsb
xor
das
jno
mov
xor
std
sub
cmp
into
dec
pop
mov
aaa
lcall
fs
mov
add
scas
jle
jo
push
shlb
cmp
aaa
orb
sahf
mov
fs
ficompl
sub
and
incl
sar
ljmp
add
sub
loope
fldenv
push
icebp
mov
ret
mov
inc
popa
divb
stos
outsb
mov
mov
sub
out
sti
outsl
js
xor
es
pop
mov
or
lock
cmc
mov
in
ret
dec
lret
ds
in
jp
lahf
pusha
mov
cli
hlt
movsb
mov
repz
gs
std
push
inc
cmp
test
mov
or
sub
push
repnz
in
lcall
aam
xchg
pusha
dec
movl
sti
je
mov
std
dec
inc
or
fisubs
push
push
testb
mov
mov
sbb
mov
sub
xchg
and
dec
movsl
movsb
enter
nop
fnstcw
jle
add
fcom
push
xor
loope
push
push
inc
lcall
clc
test
inc
inc
arpl
scas
cs
adcb
mov
xorl
in
test
pop
mov
add
push
xlat
rcr
mov
sbb
xorb
out
inc
test
loopne
ret
mov
js
sub
cmp
jae
loope
test
daa
jg
jo
loopne
int
lret
dec
sbb
cmpsl
jo
popl
adc
lret
in
test
or
insb
pop
in
push
sub
cwtl
jne
imull
jb
mov
mov
and
movsb
test
fistl
xchg
and
repnz
jnp
movsl
mov
mov
mov
ja
adc
shrl
cmp
xor
fs
add
inc
fwait
xor
dec
add
inc
pushf
or
loope
flds
push
sub
cmp
jns
and
cmpsl
sbbl
leave
ss
sub
fiadds
mov
xor
stos
leave
inc
in
in
mov
test
sub
mov
in
pop
sbb
mov
mov
sub
loopne
add
rcrb
jbe
xchg
test
dec
lcall
jne
in
xor
in
pop
pop
or
fwait
roll
or
fidivs
mov
or
and
and
shl
in
leave
xor
or
adcl
adc
mov
push
mov
pop
xor
pop
xor
scas
addb
push
das
xchg
jnp
push
movsb
int
sub
xchg
fwait
jb
fimull
sub
aad
mull
ret
inc
cmc
addb
sbb
sub
data16
shrb
addr16
int3
aas
dec
add
test
ret
adc
mov
icebp
push
adc
jae
adc
xchg
test
cwtl
repnz
dec
jae
adcl
dec
mov
mov
xchg
shrb
out
dec
jmp
mov
ret
in
fmuls
repz
stc
adc
mov
and
xchg
sub
xlat
stos
sub
xor
arpl
cmpsb
xchg
sbb
mov
in
nop
sbb
push
mov
push
sub
mov
or
xor
sbb
call
int
lcall
jl
push
push
stos
push
scas
lock
fcmovbe
mov
cld
js
inc
std
repz
in
adc
sub
test
mov
icebp
cs
mov
cs
adc
mov
lcall
sub
push
leave
xchg
stos
fstps
dec
lahf
mov
mov
xchg
imul
movsb
imul
int3
adc
fmul
jns
pop
aas
and
sti
gs
test
dec
jg
movsb
pop
sub
push
jle
aam
pop
enter
sbb
gs
lds
jnp
iret
popf
fisubrs
pop
jl
mov
cli
dec
test
push
mov
stos
push
sbb
ds
lds
push
adc
mov
jbe
inc
popf
add
into
negb
je
scas
sub
jbe
enter
jg
inc
sub
adc
ja
or
mov
add
jge
jl
bound
mov
sbbl
lea
cmp
in
ret
or
rorb
shll
jg
outsl
int
int
pusha
sahf
or
or
fsubrp
jae
cmpsl
xchg
cs
movsl
push
pop
push
test
sahf
inc
scas
std
leave
or
loope
mov
cld
pop
or
mov
dec
jb
imul
data16
out
fstpl
push
outsl
sti
popf
clc
inc
xchg
jb
lock
lret
outsl
add
pop
mov
push
pushf
sbbb
gs
shll
not
jnp
mov
xchg
or
jo
cli
add
inc
xor
dec
mov
rcrb
loop
out
aam
adc
outsl
test
enter
sub
mov
lret
mov
jecxz
cs
lds
sahf
mov
inc
cmc
cmp
cltd
lods
cmp
sbb
scas
ret
aaa
insl
push
sub
sbb
imul
mov
jb
push
xchg
cwtl
clc
cld
xchg
push
imul
sahf
add
ret
lea
add
mov
sub
lret
mov
or
sub
out
sti
test
scas
lcall
je
mov
xor
jno
pop
imul
xlat
mov
mov
xor
add
jbe
in
sbb
sbb
lea
outsl
xor
xor
pop
aaa
add
xchg
ret
movsl
or
jno
mov
inc
pop
cmp
repz
scas
stos
shll
sbb
js
sbb
inc
jae
inc
cmp
out
jae
movsb
jmp
push
adc
int
ljmp
jo
ljmp
and
and
ljmp
leave
or
sub
fwait
pop
decb
daa
repz
sbb
mov
aad
fldenv
rorb
dec
repnz
pop
je
push
lahf
inc
out
aaa
sar
hlt
pop
mov
jp,pt
jmp
jl
clc
bound
adc
nop
addl
cwtl
mov
push
cltd
xchg
adc
xor
pop
mov
pop
outsl
push
sbb
std
xor
pop
and
xor
mov
jge
leave
out
fst
outsl
movsb
loopne
inc
push
dec
xor
cltd
cs
lock
es
xor
push
imul
xlat
adcl
add
jo
push
push
dec
xchg
hlt
cltd
xchg
mov
and
fnstsw
jnp
lock
ja
call
push
push
test
leave
mov
fsubl
mulb
add
ds
lret
rorl
aad
and
das
push
nop
icebp
pop
pushf
outsl
into
mov
push
adc
inc
inc
mov
fistl
adc
addr16
jp
aam
movsb
movsl
inc
inc
cmp
cmpsl
inc
int
or
mov
adc
adc
sbb
inc
pop
loope
push
push
add
data16
xor
adc
roll
xchg
mov
mov
xchg
jl
pop
fimull
cmp
cmp
mov
mov
out
sub
mov
in
pop
or
fsubl
test
inc
fiadds
lods
cltd
arpl
repnz
movsl
jl
enter
xchg
fwait
add
popf
ljmp
and
movsl
daa
or
dec
inc
xchg
dec
xor
lds
mov
dec
outsb
sbb
jp
mov
adc
dec
push
rorl
lcall
jb
mov
xchg
fistps
xor
lds
in
shl
leave
cmp
les
mov
mov
out
jns
loop
enter
jmp
cmp
xchg
inc
xor
mov
jb
repz
jnp
jg
mov
in
insb
loope
vmwrite
dec
or
arpl
pop
xlat
popa
jl
idiv
push
pusha
jae
jns
mov
cli
roll
adc
and
dec
xlat
lcall
mov
imul
scas
mov
mov
inc
sti
cltd
lret
lds
jns
pop
clc
dec
sbb
cmpsb
imulb
outsb
mov
ds
fwait
addr16
cli
stos
xchg
mov
sbb
leave
xchg
sub
mov
cmpsl
dec
aad
adc
sub
mov
sbb
js
mov
xchg
clc
in
es
int3
aas
xchg
pop
iret
xchg
adc
push
sub
sbb
jp
std
into
pop
dec
mov
mov
jg
rcr
jb
sbb
pop
fisubrl
pop
lds
jmp
and
or
fwait
xor
or
push
mov
bound
in
add
inc
xlat
in
sub
adc
rcll
cmp
rcrb
inc
fimull
and
push
scas
fidivs
and
sub
jl
push
inc
in
or
mov
test
out
xor
or
add
stos
call
andl
mov
jno
xlat
je
stos
fwait
pop
inc
test
mov
andl
sub
or
out
cld
out
std
pop
add
cmc
pop
hlt
push
xor
and
xchg
sar
push
mov
out
xor
outsb
out
cwtl
pop
dec
icebp
xchg
pop
out
data16
or
and
mov
pop
stc
call
sbb
rorl
je
add
shll
bndldx
push
pop
ss
add
add
dec
ljmp
in
iret
js
xchg
js
pop
xor
push
mov
mov
xor
roll
stc
ror
push
or
insb
lods
mov
or
js
adc
or
aas
cmp
cmpsb
inc
sub
push
ret
out
data16
add
scas
xor
nop
mov
es
or
cmp
inc
lcall
or
test
loop
mov
jmp
movsb
cmp
cltd
ret
ljmp
pop
dec
jmp
lret
xchg
js
jmp
xchg
enter
push
faddl
imul
inc
jmp
add
xor
inc
scas
add
mov
and
or
push
inc
mov
and
xchg
jb
xor
das
popa
sub
mov
add
test
dec
data16
rdpmc
xchg
gs
inc
cltd
jns
sbb
fsubl
pop
imulb
sbb
mov
sbb
ds
gs
and
nop
insl
into
mov
pop
out
ja
pop
fs
out
ret
sub
lret
sar
bound
cltd
pop
je
jge
xor
xchg
or
std
jbe
jno
lret
rcll
lret
sbbb
jnp
or
das
nop
push
into
or
push
jge
cwtl
inc
dec
ret
jns
inc
in
inc
js
mov
mov
test
daa
push
jo
js
pop
int
int
inc
sub
leave
nop
mov
das
sarl
imull
mov
add
jae
popaw
push
subb
mov
mov
inc
loop
es
pop
movsl
sbb
out
shl
inc
jnp
pop
outsb
shrb
dec
stos
into
sbb
and
xchg
jmp
push
mov
jge
add
jae
sti
mov
mov
mov
lods
pop
ss
or
lds
add
insb
aam
ss
lds
add
push
dec
mov
in
cli
pushf
push
iret
fcoml
mov
out
test
cmp
fnstsw
cmpsl
dec
in
adc
xor
sbb
adc
lea
sub
push
jno
sub
adc
sbb
loope
sbb
cs
in
or
enter
mov
loope
pop
and
fadd
dec
adc
in
sti
outsb
lods
lahf
or
xchg
sbb
mov
mov
sbb
dec
inc
es
push
adc
pop
cld
add
xor
jbe
sahf
divl
dec
lret
cld
icebp
popf
mov
mov
cmp
mov
lahf
popf
rcr
or
or
cmc
xchg
jp
aaa
std
repz
sub
mov
jnp
pop
lcall
jmp
sub
inc
inc
sbb
in
add
mov
adc
mov
insb
sbbl
clc
inc
cmp
dec
fistl
sbb
outsl
lds
lock
imul
xor
gs
pushf
sub
xchg
adc
adc
inc
mov
mov
popa
jl
mov
xlat
shl
jp
jne
inc
arpl
add
inc
push
ja
scas
cmp
scas
test
adc
ljmp
dec
dec
es
sar
in
mov
sar
fnstenv
add
icebp
push
ja
loope
loop
jmp
xorl
dec
daa
jnp
sti
sahf
push
loop
cmp
pushf
lds
inc
insl
aam
mov
mov
nop
lock
lret
int
xchg
mov
pop
cli
or
jae
jmp
stos
cs
or
push
imul
out
jg
cmp
in
jnp
scas
lret
je
out
mov
out
xchg
jno
cmp
mov
dec
ss
or
and
clc
outsl
push
jle
jne
ds
out
sti
or
xchg
mov
pop
xor
push
fst
rolb
cs
xlat
xor
outsb
data16
adc
xlat
fnstenv
cmpsl
rolb
pusha
push
shll
sbb
mov
push
mov
inc
cmp
mov
outsl
loope
jae
adc
stos
dec
xlat
xor
call
ds
mulb
ss
xchg
data16
in
mov
ds
inc
cwtl
dec
fwait
ljmp
xor
scas
sbb
sbb
insb
inc
mov
lahf
push
xor
jb
ret
in
lret
mov
inc
mov
je
pop
popf
jno
push
dec
dec
frstor
sub
ror
fst
add
in
add
or
pusha
add
cltd
xchg
dec
rorl
pop
negl
popf
mov
dec
add
or
pop
cmpsb
jp
dec
out
test
js
int
call
jp
ud2
in
ds
sub
je
stos
aam
leave
pop
mov
sub
mov
fists
andb
es
imul
inc
and
cmp
jmp
mov
int
std
shl
mov
int3
cmp
mov
fstp
and
inc
enter
insl
sbb
ljmp
jmp
out
out
sub
ret
in
sub
xor
cmp
in
lods
shrb
xor
xlat
cmp
lock
sub
mov
loope
andl
push
je
scas
jb
pop
nop
mov
inc
ret
imul
fistps
mov
test
and
and
gs
in
mov
cmp
out
sarl
cld
cmc
mov
add
fildll
and
lcall
push
push
sub
imull
aam
jnp
andb
in
jge
aam
push
pop
daa
mov
add
sti
iret
and
into
int3
in
icebp
dec
pusha
test
add
sbb
push
mov
pushf
or
faddl
lcall
cltd
mov
push
xor
call
push
aad
lds
push
mov
jno
loopne
dec
rol
out
and
push
addr16
stos
stc
and
dec
jne
xchg
push
scas
mov
mov
push
sub
push
and
into
or
pop
and
pop
xchg
sub
ficomps
sbb
test
int3
test
dec
iret
cmp
sub
adc
imul
outsl
pop
rcll
jge
loopne
sub
aad
stos
sub
into
inc
adc
add
adc
mul
addb
ret
pop
mov
jnp
pusha
lds
xor
or
inc
sti
pop
sbb
repnz
dec
mov
sub
fsubrl
imul
sahf
push
mov
adc
cmp
icebp
inc
cmp
fucomi
pop
dec
test
sbb
clc
fcomps
mov
outsl
dec
data16
cmc
mov
or
aad
js
aaa
mov
cmc
jo
dec
cmc
arpl
adc
inc
pop
loop
ja
jbe
fnstcw
mov
lea
sub
shll
pop
daa
sub
imul
mov
adc
sbb
sbb
xor
or
xor
inc
mov
aam
shlb
jno
and
jmp
loope
pand
mov
sub
in
mov
cltd
jecxz
push
mov
mov
and
into
addr16
test
lret
ljmp
mov
mov
incb
push
ffreep
cwtl
and
scas
fs
jle
das
mov
fdiv
sbb
aad
test
adc
adc
stos
jl
imul
mov
mov
add
xor
jo
loop,pt
aaa
sub
pop
jo
add
rcr
xor
cmc
adc
testb
mov
dec
test
aad
mov
jo
xorb
icebp
in
inc
rcl
lods
sub
lds
mov
sub
fstps
pop
into
rcll
stc
mov
scas
lods
scas
xor
inc
lahf
sbb
pushl
popa
sbb
mov
inc
add
xchg
shlb
mov
ljmp
mov
jbe
xchg
insb
scas
int
xlat
sahf
into
cmpsb
mov
mov
scas
sbb
jg
xchg
push
das
ljmp
push
fstpt
jmp
sub
sbb
sub
sar
pop
pop
and
popa
cmp
xchg
in
or
push
je
ror
pop
in
repnz
hlt
mov
imul
std
mov
pop
xchg
loop
stc
nop
aad
insl
inc
add
cmp
iret
gs
jbe
push
test
cmp
dec
mov
int3
cmp
call
sub
jge
mov
xchg
cli
test
shrb
xor
add
mov
enter
popf
sbb
xchg
cli
xor
int3
push
aas
jbe
outsl
aas
cmp
jge
int3
enter
arpl
sarb
push
addl
repz
aad
mov
jne
nop
sahf
mov
adc
in
fdivs
sub
arpl
or
xchg
fildl
outsl
or
int
cmp
mov
inc
adc
mov
inc
jb
push
xor
sub
cwtl
ret
loopne
sbb
dec
mov
flds
std
mov
jne
pop
ret
mov
jl
fldcw
dec
add
sbb
fwait
test
fsubl
or
xchg
lods
cli
outsl
push
dec
mov
arpl
sbb
lea
cmp
rcl
aas
clc
mov
stos
lods
sbb
mov
cmp
dec
mov
out
dec
aaa
inc
jge
sub
mov
mov
sbb
out
push
jne
je
sbb
dec
out
ret
cmp
mov
shufps
jmp
dec
loopne
dec
mov
mov
cmp
xor
sti
adc
incb
hlt
mov
iret
mov
adc
outsb
test
or
lret
int
bound
xchg
xor
popf
insl
mov
and
xchg
int3
arpl
daa
jp
adc
out
lret
adc
and
imul
mov
push
out
mov
xchg
push
push
push
scas
mov
shl
bound
mov
jae
mov
xlat
inc
add
jl
stos
dec
cmp
cmp
popf
popf
jmp
pop
dec
outsb
inc
jl
mov
pop
les
cld
cmp
sub
mov
pop
jne
pop
int3
push
in
xor
cmp
adc
push
xor
cmp
inc
cwtl
xchg
test
mov
xor
or
in
inc
xchg
ljmp
inc
mov
xchg
xor
dec
outsl
divps
xchg
mov
sub
fs
mov
call
xlat
xor
inc
cmpsl
lret
std
dec
xor
enter
frstor
jl
sub
inc
mov
sub
sbb
scas
push
jne
inc
fadds
jle
outsb
jnp
sbb
pop
and
movsb
orb
lret
xchg
push
loopne
jmp
je
sbb
bound
fisubrl
loop
movsl
in
cmp
in
test
flds
cmp
fwait
out
and
or
xor
mov
cmp
test
cmp
cmp
mov
jle
das
inc
pop
stc
xchg
push
and
aad
aam
jne
shrl
or
outsl
mov
imul
push
dec
in
xchg
jnp
dec
call
loop
outsl
mov
mov
adc
stc
stos
mov
or
cmp
mov
xor
cmp
test
mov
std
cmp
loopne
loopne
inc
lahf
imul
jle
ds
add
push
xchg
hlt
adc
arpl
cwtl
mov
dec
sbb
sbb
loopne
repz
pop
mov
pop
and
mov
scas
mov
and
ret
mov
add
cmp
dec
aaa
das
rcrb
mov
inc
xor
sbb
lcall
loope
rcrl
fstps
sti
add
pop
fcmovne
jne
mov
in
xor
dec
gs
xchg
add
lods
dec
mov
push
cwtl
cmp
rcrl
mov
loop
mov
movsb
add
sub
xor
xchg
test
lret
mov
pop
pop
cmp
jecxz
pop
jnp
cmp
mov
jge
nop
jno
shufps
insl
mov
dec
jno
stos
das
dec
inc
cmp
cmp
aaa
cmp
test
lods
jo
cs
repz
rcll
xchg
fstpl
sub
push
add
sub
leave
dec
sub
imul
rolb
mov
and
sub
pop
sarl
sti
sti
adc
and
xor
lea
push
inc
push
aaa
pop
xor
cmp
and
cld
lods
ljmp
loopne
int
xchg
insw
fisubs
es
ret
aas
cli
das
jmp
je
inc
mov
cmc
es
or
inc
push
rcrb
out
out
mov
pushf
fxch
sbbb
sbb
shlb
ljmp
jecxz
lret
mov
xchg
lods
clc
jp
sub
dec
loop
lods
xchg
mov
xor
jg
cwtl
fadds
hlt
lcall
scas
xor
mov
cmpsb
cli
enter
ret
xchg
jl
popa
pushf
enter
notb
ds
xor
arpl
inc
fdiv
das
push
ret
iret
sub
mov
repz
xor
in
mov
pop
xchg
stc
mov
adc
adc
jno
test
outsl
add
pushf
xchg
inc
enter
jne
jle
mov
mov
mov
cmpsl
push
xchg
jb
rolb
dec
dec
mov
jae
mov
jge
and
mov
std
cmpl
mov
int
scas
push
and
pop
sbb
std
lret
int
dec
lods
sahf
fdivr
pop
dec
faddl
xchg
sbb
insb
mov
mulb
lds
fwait
jb
sub
sbb
inc
mov
js
cmp
data16
dec
jmp
lahf
imul
jmp
mov
or
add
dec
jbe
scas
mov
imul
jae
stos
mov
dec
xchg
push
inc
gs
enter
sub
xchg
pop
lret
or
mov
push
in
inc
cmp
sub
xor
xor
cltd
cmpb
mov
xchg
negb
inc
fsubp
sbb
cmp
and
adc
or
cs
mov
ss
mov
dec
fstpt
popf
aad
mov
xor
stc
aam
loope
xchg
bound
pop
adc
and
int3
imul
scas
sbb
cmpsb
repnz
xchg
cmpsl
aad
push
lods
sub
pop
jbe
sub
push
movsb
mov
fwait
mov
lahf
or
rorl
lret
lds
rclb
mov
and
lods
aas
push
jbe
adc
ror
jle
icebp
mov
loop
or
mov
out
cmc
jbe
adc
inc
adc
adc
mov
pop
rcll
call
adc
jbe
add
dec
arpl
jne
push
sbb
sub
js
pop
aam
in
mov
adc
shlb
inc
test
jge
cmp
cmp
xchg
push
adc
sbb
mov
mov
pop
pop
jge
gs
add
arpl
or
test
adc
mov
push
and
lcall
sbb
adc
sbb
insb
scas
fs
cli
and
addr16
enter
cld
sbb
xor
mov
js
sbb
lds
outsl
out
push
and
lahf
fiaddl
mov
cmp
push
and
je
jg
add
push
pop
subl
popa
and
mov
dec
into
xor
outsb
pop
aad
cmpsl
push
mov
sahf
push
jbe
icebp
insl
inc
push
mov
mov
cli
jg
pop
mov
outsb
cmc
cwtl
cmp
sub
out
push
in
rolb
cmp
push
outsl
js
icebp
dec
data16
insl
xchg
dec
cmc
cmc
xchg
movsl
jle
inc
in
lret
sub
add
or
mov
sti
fwait
xchg
xchg
pop
movsl
cld
cmp
push
push
jb
repz
dec
pop
lahf
out
mov
out
xchg
int3
hlt
sti
ret
mov
and
xchg
sti
idiv
sub
push
insb
lds
push
repnz
cld
xlat
pop
insl
fucomp
cltd
or
dec
xor
lcall
push
mov
ds
adc
les
cmp
xchg
inc
mov
roll
jnp
lcall
das
sbb
cmc
cwtl
jne
cmp
xor
test
insb
rclb
sbb
mov
push
ret
dec
in
sahf
jnp
fwait
add
fists
cltd
mov
xlat
sub
inc
lret
pop
xchg
pop
jns
jle,pt
xlat
adc
aaa
aaa
fcomip
jge
scas
sbb
mov
and
movsl
das
pop
adc
push
jno
adc
pop
imul
push
adc
lahf
insl
ret
mov
shrb
sbb
aam
out
negl
sahf
push
mov
mov
pop
cwtl
es
fs
mov
ds
cmpsb
xor
ficoms
lret
ljmp
sub
mov
outsl
into
mov
cmpsl
pusha
push
jp
lea
outsb
push
mov
imul
add
sbb
xor
jo
in
cld
cmp
inc
jge
je
add
push
mov
mov
and
out
sub
fimuls
add
adc
or
cltd
push
negl
inc
xlat
sbb
xor
or
out
adc
xchg
shrb
add
adc
and
jne
jle
ret
xor
out
push
cltd
cmp
js,pn
pusha
push
jg
popa
xchg
stos
pop
ret
pop
jecxz
pop
jmp
inc
sub
outsl
mov
cmp
dec
aaa
xchg
fmulp
popa
ret
dec
jns
sub
dec
dec
adc
sbb
lret
ss
or
jbe
push
imul
dec
mov
std
jge
inc
clc
into
fistpll
mov
push
pop
lcall
test
out
out
sub
dec
cld
sub
jae
jae
inc
sbb
or
mov
in
aad
pop
jo
cwtl
les
imul
ljmp
fistpll
add
cmpsb
dec
xchg
push
cmp
sbb
adc
and
mov
sbb
push
xacquire
pop
push
xor
shr
in
scas
or
aam
push
call
imul
mov
push
xchg
gs
cltd
dec
gs
cmp
arpl
or
scas
adc
inc
std
mov
out
adcb
pushl
mov
sbb
and
push
inc
mov
test
mov
cmp
add
sbbl
xchg
popa
xor
push
push
inc
or
scas
push
stc
push
xlat
cli
stos
imul
and
pop
jbe
lret
cli
call
push
andb
mov
int
pop
test
mov
out
fwait
pop
nop
xchg
stos
loop
sbb
mov
push
inc
adc
adc
out
arpl
lods
out
fstpt
inc
adc
js
jb
mov
movsl
sbb
xchg
dec
jl
in
mov
pop
ud0
in
out
and
psrld
inc
adc
arpl
filds
sbb
ljmp
subb
mov
dec
add
inc
es
mov
test
jle
loop
mov
ljmp
xor
cmp
pop
cmp
in
push
dec
add
mov
xor
inc
xor
mov
push
stc
and
inc
shrl
fs
mov
dec
xor
ss
mov
cmp
sub
out
cmp
push
pushf
mov
inc
pop
adc
or
xchg
ljmp
loope
push
xchg
les
shll
or
popa
xor
sub
test
pop
jmp
out
inc
fidivl
stc
addr16
mov
popf
iret
pop
xchg
jae
cmp
addb
jb
pop
adc
cltd
push
imul
je
repz
push
and
inc
cmp
cmp
dec
int3
stos
sub
stc
mov
mov
idivb
cs
adc
mov
jnp
rol
lret
dec
mov
test
sahf
mov
fistpl
pop
mov
sbb
lods
imul
pushl
sti
es
push
and
loope
lods
fwait
icebp
mov
test
sbb
mov
fimuls
loopne
cmp
and
adc
push
mov
xor
shlb
pop
arpl
and
pop
mov
jecxz
mov
scas
gs
addr16
mov
mov
inc
add
jp
cmpb
ret
fmuls
mov
mov
cld
loop
mov
lds
insl
dec
jnp
xor
sub
arpl
cltd
jg
loope
sbb
and
mov
outsb
outsb
jno
pop
loop
inc
add
inc
movsb
aas
das
lods
ds
out
orl
je
bound
inc
int3
jle
adc
loope
cmp
stos
shll
aad
push
dec
push
fsubrp
mov
scas
test
pop
add
pop
mov
fmull
cwtl
stos
mov
mov
push
mov
gs
sub
loope
mov
and
xchg
shr
xchg
inc
icebp
sub
jae
mov
dec
mov
testb
adc
mov
xor
mov
or
mov
ds
add
ss
jmp
rolb
jb
push
int3
lret
dec
nop
mov
inc
mov
cld
mov
push
loopne
scas
pop
stos
sbb
push
jb
lret
fisubs
jbe
into
push
fwait
pop
mov
or
lds
mov
shlb
ljmp
jmp
sbb
rcll
js
hlt
xor
adc
sbb
cltd
fsubl
mov
inc
std
dec
mov
adcb
push
call
mov
nop
outsl
stc
push
push
xor
stos
sub
lcall
test
add
and
scas
jnp
sub
mov
cmpsl
and
daa
cmp
imull
dec
sbb
clc
cmp
mov
cmp
pop
lcall
test
push
cmp
cmpb
test
leave
pop
mov
or
inc
cmp
push
sub
or
push
add
xchg
cmp
jg
insb
sbb
out
push
sbb
leave
jl
iret
data16
and
add
adc
add
inc
xchg
mov
pop
sub
fcmovu
mov
pop
loopne
das
sub
jmp
mov
ret
ret
pop
jae
rcrb
mov
pop
testb
stos
jno
pop
mov
call
xor
inc
inc
fs
nop
data16
lods
pop
mov
pop
jmp
sbb
mov
inc
pop
sti
fistl
int3
jg
cmp
and
and
icebp
faddp
ret
xor
push
dec
in
mov
inc
push
cmp
subb
std
decl
in
stos
add
movsb
xchg
fs
nop
or
jae
mov
mov
inc
xchg
inc
cmc
pop
sti
in
stos
jmp
sub
pop
sbb
sbbb
and
mov
push
mov
mov
clc
insl
cmpsb
sub
sub
cltd
push
pop
cmp
idivl
and
cmp
test
add
loopne
xchg
add
popl
xlat
xchg
das
inc
mov
lods
pusha
cmpsb
mov
nop
sbb
leave
xor
lahf
mov
and
lds
frstor
ja
xor
mov
inc
cmpsl
inc
cmp
bound
or
rol
je
cmp
dec
pop
push
dec
int3
xchg
movb
aas
or
push
jnp
mov
stos
or
fwait
xor
clc
add
push
mov
out
pusha
adc
je
mov
pop
adc
dec
jmp
cmp
fisubs
out
shlb
and
push
pop
pop
loopne
test
or
inc
mov
xor
mov
nop
cmp
repnz
jmp
sub
jno,pt
in
imul
cmp
jecxz
js
leave
push
lock
lcall
inc
sbb
rcrl
rolb
jle
lods
shrl
insl
addr16
in
or
adc
pushf
ror
cltd
pop
sbb
ss
loope
rorl
mov
ret
xchg
jne
mov
ja
movsb
repnz
jle
sar
fs
in
or
jp
les
addr16
out
fildl
push
dec
pop
jmp
scas
mov
mov
and
cmp
add
lods
cmpsb
lret
popl
sub
jl
test
outsb
jge
xchg
pop
mov
cs
in
lods
nop
cwtl
pop
cli
fs
pop
inc
cli
shlb
jle
fstps
aad
or
fldl
loopne
insl
mov
lea
jmp
mov
aaa
pop
stc
sub
mov
jbe
int3
mov
adc
push
or
sbb
test
shl
jle
jns
push
and
pop
repnz
lcall
jp
dec
dec
push
enter
loopne
lods
dec
xchg
push
je
pusha
or
fucomp
mov
aas
subb
mov
jae
das
popf
add
adc
or
loop
repnz
push
jae
inc
sub
jnp
int3
sbb
movsb
es
test
mov
xchg
push
test
pop
test
or
push
stos
int
sub
stc
gs
inc
push
xor
test
or
fdivr
lret
stos
mov
fdivs
sub
add
fiaddl
sub
movsb
push
jno
add
lcall
stos
and
ret
mov
inc
in
mov
add
sbbb
xlat
es
adc
lahf
and
btc
loopne
jns
pop
dec
sbb
mov
lds
jbe
sbb
jb
cmpsl
imul
jb
mov
jge
cmp
and
divl
sub
or
je
mov
lods
or
xchg
popf
xchg
cmc
or
pmaddwd
shll
leave
rclb
lea
pop
scas
std
out
repz
das
cwtl
and
fwait
inc
mov
or
test
pop
fs
jns
mov
dec
in
std
fldenv
aad
enter
or
fucomip
rcrb
pusha
lock
add
in
jg
lock
or
sub
pop
stos
push
mov
jb
xchg
fucom
movsl
movsl
mov
adc
out
xchg
or
cld
xchg
mov
push
xchg
outsl
jmp
aaa
jmp
out
repz
cmp
popa
test
xor
rcrb
sbbl
loopne
pop
enter
mov
cmpxchg
jae
mov
js
jnp
fcmovnbe
dec
aas
pop
ret
fildl
in
filds
jae
and
std
lahf
daa
push
push
xchg
mov
push
mov
and
pop
fsubr
cltd
cmp
int
dec
outsl
mov
pop
scas
dec
inc
mov
ret
bound
mov
jno
fnstenv
mov
dec
dec
cmp
mov
pop
out
mov
xchg
inc
xor
mov
dec
call
popa
and
bound
icebp
xchg
dec
cmpsb
xchg
or
dec
push
sbb
jo
push
test
jbe
es
cmp
movnti
subl
std
jge
inc
adc
pushf
dec
mov
mov
xchg
push
jbe
jb
push
out
pushf
ret
hlt
push
rcll
sub
and
or
pushf
enter
test
jle
xchg
and
lret
sbbl
shr
clc
jne
rolb
lea
incb
outsl
push
sar
lock
movsb
scas
scas
insl
xchg
cmc
shlb
push
or
xor
sarl
outsb
xchg
js
dec
push
gs
shlb
imul
add
xchg
adc
dec
jmp
in
cld
ret
push
mov
repnz
inc
mov
xor
add
pop
jp
in
mov
pop
adc
and
sarb
mov
sbb
add
mov
out
pop
pop
sub
fwait
sbb
xchg
test
imul
dec
scas
cmp
popf
push
lds
sbb
cmpsl
pop
scas
js
push
lcall
mov
xchg
pop
pop
adcb
cmp
ds
je
push
dec
jb
mov
addb
arpl
ret
icebp
mov
xor
arpl
xor
cld
jns
inc
or
push
les
negl
xchg
cmp
insl
es
or
test
jno
cli
sub
nop
mov
loope
and
adc
jnp
sbb
mov
cmpl
adcl
inc
test
fcmovnu
fmull
lahf
das
loopne
sbb
loope
imull
mov
mov
cmp
sbb
pop
pop
mov
je
xor
cmp
out
pop
fisubs
and
xchg
push
pop
or
xchg
sub
jge
pusha
cli
pop
loopne
sbb
pop
or
sub
xor
test
push
xor
loopne
out
xchg
push
pusha
mov
inc
pop
adc
pop
testb
ja
ret
jl
xor
fmull
lahf
dec
lock
cmp
mov
call
out
push
mov
xchg
add
mov
mov
outsl
daa
ljmp
xor
sub
xor
xchg
push
pop
loop
fstp
cmc
stos
stc
push
inc
nop
pop
aaa
or
or
test
sarb
jae
popl
lods
add
add
jp
mov
testl
arpl
imull
add
call
fidivrl
loopne
mov
bound
scas
xor
pop
out
push
or
scas
addr16
pusha
cmp
dec
das
addr16
sbb
pushf
scas
outsb
nop
pop
lock
mov
push
lret
stos
in
xchg
mov
aad
xor
and
pusha
stos
cmp
mov
js
sbb
sti
dec
cmp
cli
pop
arpl
sti
add
pop
fstl
aaa
mov
mov
sarl
les
adc
adc
jns
sbb
mov
sub
mov
mov
sbb
rorl
jmp
xor
in
popl
inc
aad
sbb
iret
dec
loope
push
sti
psrad
jnp
jmp
cmpsb
test
lret
cwtl
mov
inc
jae
xchg
sub
cmpsl
mov
inc
jl
fwait
sbb
mov
jno
jo
xchg
sbb
fisubl
stc
sbb
call
enter
movsb
cmpsb
add
and
pop
mov
mov
cld
xchg
cmp
cld
test
outsb
mov
lock
jecxz
out
outsl
fsubs
xchg
out
and
mov
and
inc
aam
popf
call
mov
les
test
dec
lret
out
mov
and
sub
push
aad
or
mov
push
pop
push
adc
xchg
jmp
popa
std
add
push
rorb
jno
test
imul
ds
dec
and
fdivrl
mov
fidivrs
sahf
push
ja
lahf
in
or
nopl
or
push
ljmp
adc
fcompl
sarl
dec
or
out
push
sti
loope
bnd
notl
mov
jns
or
data16
int
mov
or
fisttpl
sbb
mov
mov
cmp
push
scas
sbb
xor
mov
enter
pop
stos
repnz
xchg
fidivs
add
inc
rcrb
mov
call
mov
jb
mov
pop
xchg
out
push
inc
xchg
sub
xor
pop
addr16
pop
mov
add
pushl
jp
lods
outsb
lret
pop
ss
gs
and
or
mov
int3
and
mov
jp
aas
enter
pop
faddl
lods
loop
es
sub
adc
sbb
in
xchg
or
cmp
shrb
add
pusha
cmc
mov
test
dec
sub
les
jecxz
divb
sub
outsl
call
adc
push
scas
and
sahf
jmp
xorb
xor
mov
xlat
xor
clc
inc
insb
sbb
das
ret
xlat
or
add
mov
add
sub
popa
daa
lock
mov
js
inc
adc
cmp
mov
lahf
mov
sbb
imul
xchg
lea
pop
mov
sub
or
xor
sbb
sbb
pop
daa
test
fwait
push
mov
add
add
xor
sub
ret
popa
jmp
sbbl
icebp
shrb
dec
dec
push
or
orl
sub
pop
outsl
mov
push
lea
out
mov
test
jle
fwait
rorb
out
mov
mov
cltd
jo
jmp
mov
dec
orb
nop
cmp
outsl
cltd
test
cltd
sub
js
jno
xor
jg
aaa
pop
loop
pop
pop
xor
sub
pop
inc
sahf
push
push
js
push
sti
push
test
insl
sub
pusha
iret
loop
inc
pop
mov
jge
scas
gs
push
push
push
push
and
cmc
lret
imul
ja
or
jnp
aam
sub
hlt
jge
pop
fucom
push
pop
fistpll
mov
dec
fisttpll
jo
fimull
mov
out
or
mov
dec
jb,pt
cmp
nop
mov
div
cmpsl
stc
out
or
lods
mov
and
xchg
test
lahf
push
dec
cmp
fimuls
lcall
push
mov
pop
cwtl
push
dec
ljmp
sti
jae
push
or
stc
push
jns
insl
and
lock
hlt
sub
mov
xor
pop
out
cmp
mov
jno,pn
pop
addl
movsb
push
test
out
pop
push
orl
int3
lret
lods
nop
aaa
mov
loope
cmp
mov
daa
hlt
mov
cmp
dec
cs
cmp
xchg
add
mov
inc
mov
or
mov
mov
stos
sbb
xor
jg
mov
xchg
mov
cmpsl
inc
inc
xchg
push
imul
shlb
push
ds
mov
xlat
std
push
xchg
dec
xchg
mov
pop
and
push
imul
xor
xchg
movb
xchg
or
icebp
dec
test
daa
inc
bound
dec
mov
imul
outsl
aad
mov
out
dec
imul
scas
xlat
test
lahf
xor
sbb
scas
nop
ret
inc
mov
add
andl
ret
stc
pushf
mov
fdivl
imul
bound
inc
cmp
into
mov
gs
test
je
ja
sbb
lods
mov
ds
push
pop
add
jg
xchg
fidivrs
jne
pop
cmp
adc
les
sub
imul
insb
xor
cmp
mov
inc
jae
loop
and
addr16
mov
jne
inc
push
sbb
rorl
mov
pop
xor
mov
ret
out
xor
mov
cld
adc
push
rcrl
sub
adc
cmc
fs
and
pop
pop
sti
pop
adc
test
aam
mov
dec
cmp
into
mov
jns
push
lea
fldcw
mov
add
stos
movsb
gs
sbb
movsl
jno
outsl
popf
mov
inc
loop
jg
push
and
daa
sbb
shll
xor
outsl
fdivl
call
xchg
jmp
std
or
clc
jmp
inc
in
jl
inc
out
arpl
mov
int
pop
cmp
scas
adc
jae
aam
lcall
or
lcall
insl
aas
push
sbb
adc
test
popl
cmpsl
je
mov
jge
pop
int
xchg
aam
out
jecxz
fcoms
cmpsl
mov
adc
xchg
sbb
test
fisubs
cs
movsb
jnp
aam
cmp
lret
xchg
push
loop
adc
stos
mov
mov
mov
loopne
inc
push
or
pusha
jle
into
icebp
jbe
xchg
adc
push
jecxz
mov
push
lods
pop
dec
xor
les
xor
enter
jecxz
mov
mov
inc
stos
sbb
mov
mov
test
lock
insl
and
andb
pop
insb
xor
inc
push
dec
andl
mov
shrl
out
imul
ljmp
mov
ljmp
call
mov
inc
imul
xor
orb
orb
or
cmp
outsl
imul
xchg
mov
outsl
mov
leave
pop
cmpsl
mov
sbb
jle
pop
sbb
mov
scas
orb
sti
xor
pop
icebp
out
cmp
adc
mov
je
in
imul
pop
adc
shll
les
inc
mov
movsl
pop
lods
bound
les
dec
outsl
sbb
inc
loopne
mov
pop
repz
int3
clc
loop
pop
shl
repnz
lret
popf
icebp
sbb
fisubrl
inc
mov
push
aam
cmpsl
xchg
es
jo
movsl
popf
test
imul
xchg
rorb
dec
xor
ret
fisttpl
fsubs
pop
add
or
push
mov
stos
ja
jae
nop
mov
popf
rcl
add
pusha
xor
mov
lock
cwtl
incl
xchg
xchg
xor
ret
in
and
sub
or
jne
inc
mov
mov
push
pop
pop
lods
cwtl
fldcw
mov
fcom
sbb
push
mov
push
cld
mov
loope
inc
sahf
mov
push
int3
and
clc
out
aad
cmp
mov
xchg
mov
and
arpl
jno
dec
sti
dec
rcrl
or
xor
scas
ljmp
sahf
frstor
add
and
and
xor
add
mov
push
jl
jmp
orb
jae
pushf
stos
movsl
inc
cli
pop
or
inc
mov
push
mov
shlb
lahf
sub
ds
lcall
cmp
jge
cmc
mov
mov
pop
scas
hlt
add
adc
dec
xorl
sub
pop
lahf
jne
pusha
icebp
jp
mov
gs
add
out
jp
mov
inc
xor
mov
data16
popa
pop
pop
cmpsl
mov
test
dec
and
pop
scas
movsb
orb
push
ret
sbb
ja
pop
push
or
push
sbb
pop
dec
addb
mov
in
mov
andl
insl
inc
iret
les
stos
in
enter
and
xchg
pop
test
jo
iret
nop
mov
mov
xor
gs
shrl
mov
sub
push
adc
movsb
fcomip
mov
fdivl
lcall
inc
pop
fstpl
cltd
sbb
testl
adc
or
inc
call
addr16
lea
cli
cmp
lods
mov
les
cmp
out
orl
repnz
and
bound
call
fs
je
mov
dec
je
notl
test
loop
push
lods
cmp
xchg
clc
xchg
movl
cli
clc
inc
push
out
out
jg
xor
mov
mov
stc
sub
push
or
scas
divl
jmp
fldenv
mov
lret
mov
leave
sahf
inc
mov
shrl
add
in
mov
cld
ds
push
fstp
mov
ret
movups
inc
insb
leave
push
scas
adc
add
inc
or
dec
pop
stos
mov
cmc
lock
lcall
js
mov
mov
iret
and
jg
fimuls
imul
mov
cmpsl
dec
cmpsb
jge
pushl
dec
mov
dec
rorb
xor
sbb
or
jnp
aas
inc
push
mov
sahf
ret
pop
cld
stc
mov
enter
popa
and
xchg
mov
inc
adc
pop
xor
clc
addb
jns
aaa
pushf
popa
xchg
jne
arpl
or
outsb
pop
xchg
lock
fisubrs
popf
jp
or
mov
inc
xchg
shlb
pop
ljmp
mov
xor
jae
enter
mov
xchg
insl
and
mov
pushf
mov
fdivl
gs
and
mov
loopnew
jle
add
je
enter
and
ja
pop
inc
and
push
test
adc
jo
daa
inc
xchg
mov
cwtl
fmul
push
mov
jecxz
dec
and
shll
repnz
cmpsl
ds
jbe
jmp
jecxz
sub
rcrl
cmpsl
inc
hlt
daa
sub
xchg
push
mov
lcall
dec
mov
xor
addr16
mov
push
mov
cmpl
mov
adc
dec
shlb
jle
ds
ret
jg
popf
mov
pop
pusha
mov
sbb
sub
sub
lret
xchg
out
inc
and
mov
mov
jns
das
push
mov
xchg
adc
lret
cmp
pop
dec
test
andl
ss
mov
fmuls
jmp
adc
ss
pmullw
sbb
xchg
imul
div
loopne
pop
pop
sbb
sub
add
enter
and
shr
les
cmova
cwtl
add
in
sahf
mov
negb
add
adc
mov
add
inc
inc
dec
jg
outsl
adc
arpl
cmpsb
or
imul
mov
jp
jne
dec
cltd
sbb
sub
adc
sbb
push
xchg
shl
xchg
push
stos
popf
scas
adc
lret
pop
testl
fxam
cmp
loope
sub
scas
out
xchg
loop
pop
mov
lods
stos
dec
sbb
jno
mov
fbld
mov
aaa
cmp
movsb
clc
cmp
fucomip
pop
cmp
adc
hlt
cwtl
inc
mov
adc
adc
adc
ljmp
str
push
arpl
sub
lcall
adc
sub
fsts
sbb
add
mov
mov
jne
sub
and
shrl
cwtl
xor
das
roll
in
mov
push
enter
mov
or
xor
inc
testl
pop
mov
push
nop
adc
xor
dec
ret
sbb
sbb
mov
rolb
out
mov
popl
es
jecxz
insb
loopne
pop
or
cwtl
push
add
fimuls
add
jmp
pushf
or
push
pop
repz
mov
insb
mov
adc
push
call
add
add
std
stc
dec
js
nop
push
es
adc
pop
rcrl
popf
cwtl
or
xchg
push
test
or
sbb
add
adc
mov
out
cwtl
popl
xor
test
popa
rorl
aaa
std
cmc
adc
sbb
pop
inc
cld
xor
dec
pop
push
test
inc
jno
add
dec
enter
lods
stos
imul
test
sub
jl
and
test
sbb
ljmp
dec
xchg
push
jae
lcall
mov
imul
push
xor
xchg
sub
in
mov
inc
dec
test
mov
push
in
roll
jle
daa
dec
xchg
lds
xor
and
int3
sbb
outsb
mov
fwait
test
mov
jl
fiadds
movsb
cmpsl
movsb
and
inc
xor
inc
pop
dec
jle
insb
inc
sbb
mov
hlt
sbb
cmp
xchg
push
mov
fists
pop
aam
pop
push
int
xchg
pop
xor
loope
into
or
clc
mov
jmp
push
int
and
cwtl
decb
inc
repz
push
mov
and
dec
scas
enter
lods
cmp
sbb
pushf
push
jle
xchg
xchg
enter
data16
leave
dec
outsl
pop
jno
mov
in
xorl
test
js
jns
gs
js
ss
cmp
jg
cmpsl
das
lds
or
mov
aaa
sbb
xor
shl
loope
push
imul
xchg
aam
sbb
jae
fbstp
in
cli
xchg
push
movsl
sbbl
stc
and
outsb
mov
push
adc
mov
arpl
add
fldenv
aam
jmp
xchg
cmp
outsb
jge
movsl
xchg
rcrb
inc
mov
gs
sar
imul
mov
xchg
and
cwtl
xchg
mov
sarb
add
add
push
in
nop
out
adc
rcrb
jbe
cmp
sub
loop
adc
addr16
add
sar
xchg
in
jecxz
mov
adc
lea
xchg
sti
jbe
jbe
roll
mov
repz
xor
xchg
jle
jno
mov
inc
jnp
mov
adcb
sub
leave
jnp
test
jnp
mov
in
pushf
cmc
jae
clc
test
fs
pop
inc
jbe
xor
push
movsb
mov
rcl
add
lock
add
xor
sarl
addr16
lds
dec
scas
mov
orl
or
fnsave
nop
shll
lcall
fmul
or
pop
push
push
or
fwait
repz
sub
inc
sbb
sub
ds
and
sub
sbb
pop
aad
mov
arpl
sbb
inc
pushf
fisubs
push
ret
cltd
jl
aaa
and
in
cmp
cltd
mov
dec
mov
ret
ss
movsb
sbb
shlb
mov
fisttpll
jecxz
movsl
xor
pop
mov
push
mov
ljmp
aam
cmpsb
mov
mov
mov
test
andb
icebp
adc
pusha
fisubl
xchg
mov
test
sub
pop
mov
sub
xchg
insb
das
pop
mov
pop
out
jg
and
lret
mov
mov
aaa
aam
sti
fldcw
std
mov
push
aam
push
int
filds
enter
lahf
xorl
push
mov
pop
push
popa
mov
jmp
mov
lret
mov
lods
cs
pop
out
nop
push
mov
es
ss
mov
aad
adc
jnp
outsl
add
pop
add
xchg
movsl
add
lock
add
aad
in
jb
jecxz
mov
jne
mov
cmp
xchg
pop
sti
stos
mov
push
fsubr
outsb
mov
js
cltd
loope
mov
into
fcoml
rclb
sbb
pop
insl
mov
stos
outsl
test
push
fsts
mov
jp
xchg
mov
xor
pop
test
movsl
pop
cmc
push
inc
xchg
dec
fmuls
xor
outsl
xor
into
jmp
aaa
andl
cmp
dec
jne
repnz
and
mov
outsb
mov
mov
cld
aas
outsb
mov
mov
mov
mov
nop
andb
xchg
cmp
sbb
aas
out
push
mov
inc
mov
idivb
mov
mov
sbb
sbb
xor
notb
pop
movlps
add
in
hlt
stc
adc
std
push
mov
add
sbb
push
jg
xchg
imul
xchg
mov
add
cmp
and
stos
lret
and
pushf
pop
insb
cmp
orl
outsl
pslld
mov
inc
fsts
xchg
in
bound
aad
pusha
xlat
xchg
or
cltd
ljmp
iret
sbb
xchg
pop
cmp
es
insb
mov
fmul
call
and
mov
daa
inc
icebp
push
icebp
movsb
test
adc
pop
xchg
in
test
jb
les
or
mov
imul
pop
cs
jnp
fdivl
ds
jno
jg
aaa
xor
and
sub
repz
pop
pushl
sbb
push
adc
jmp
cmc
sub
jno
int
mov
xlat
popf
mov
mov
sub
push
mov
xchg
jmp
push
sbb
xor
in
mov
pop
in
jge
mov
add
or
pushf
mov
xor
jecxz
call
pop
xchg
rorb
adc
ret
sub
xor
xor
jge
or
add
mov
jle
sbb
jo
mov
xchg
in
in
inc
call
das
cmc
cmc
repnz
adc
xor
ja
add
xor
lea
lock
xlat
or
ud1
mov
xor
mov
notb
inc
hlt
xchg
mov
scas
outsb
repz
lods
xchg
cmp
mov
sti
push
push
sub
stc
imul
jecxz
push
repnz
xor
outsl
xchg
pusha
insl
sub
adc
mov
fidivrs
mov
lret
dec
inc
pushf
and
jge
adc
in
mov
shll
sub
lods
and
add
mov
dec
push
popa
add
push
mov
bound
pop
pop
or
or
insl
das
test
add
xchg
cmp
mov
ret
and
ja
lods
add
cld
sub
cwtl
das
xchg
jle
es
rcr
addr16
mov
orb
outsb
lret
sbb
xchg
ret
sarb
dec
cmp
pop
pop
mov
mov
insl
cmp
std
ja
loopne
inc
push
insl
loopew
int3
clc
mov
inc
popf
add
test
cmpl
inc
mov
test
xor
stc
lea
push
stos
jmp
setne
lock
addr16
cwtl
loop
imul
pop
sub
xor
adc
cmp
mov
push
cmp
stos
cmp
loope
dec
orl
cs
jo
inc
push
mov
aaa
dec
adc
sti
ljmp
fxch
inc
cmp
jge
jl
pop
cli
clc
push
jnp
push
pop
xor
pop
or
xor
jge
cmp
lret
pop
xchg
ss
or
repnz
dec
popf
or
aad
fmuls
loop
out
cmc
rclb
mov
add
repnz
shrb
jbe
dec
xchg
xchg
mov
fistl
test
jge
pop
rcll
mov
xor
stos
pop
aas
xchg
adc
push
sbbl
xchg
ss
decb
ret
and
mov
xchg
add
push
push
inc
mov
call
and
add
mov
jecxz
lock
iret
in
movsl
push
aaa
jmp
pop
xchg
jge
cmp
xchg
leave
mov
add
jo
js
pop
ret
loop
push
cmp
ret
and
das
gs
jg
fst
mov
in
les
or
rcl
inc
jae
and
adc
pcmpgtd
xor
adc
ficoms
xor
xor
push
movsb
test
popa
out
in
push
inc
xchg
add
dec
mov
in
arpl
mov
stc
and
sahf
add
add
rolb
int
mov
int3
idivl
mov
mov
fiaddl
cs
mov
cmpl
pop
les
mov
mov
and
jp
call
or
stos
jmp
cmpsb
jl
lods
iret
sahf
or
adc
dec
push
shlb
mov
pop
mov
mov
outsb
lcall
cmp
jp
jmp
popf
pop
or
loope
push
mov
sub
mov
repz
and
add
or
js
aaa
mov
ret
inc
xlat
mov
bound
out
adc
gs
sub
fimull
mov
divb
jns
shrb
or
push
ljmp
dec
xchg
jae
shrl
orl
outsw
push
xchg
jns
mov
fisubs
jecxz
pusha
dec
pop
mov
adcl
jae
call
mov
cmpsl
xlat
mov
push
add
cld
enter
jbe
and
push
xor
jo
pusha
shll
xchg
cmp
mov
int
inc
test
push
pop
ljmp
loopne
xchg
mov
pop
pop
and
loope
int3
sti
jo
cmp
add
mov
loopne
lea
xor
lock
popa
mov
mov
mov
adc
add
loopne
push
insb
dec
nop
mov
dec
cmp
add
decb
dec
push
ret
daa
and
jb
xchg
in
fisttpl
in
lcall
jle
cli
rolb
into
addr16
jno
inc
arpl
mov
dec
pop
sbb
cmpsl
fucomip
jo
xchg
sbb
loope
movsb
fs
ret
sub
jne
fadd
adc
outsb
mov
adc
pop
daa
jae
aaa
xchg
cmpsb
cmp
cli
sub
mov
pop
push
addl
dec
fldcw
xchg
add
sbb
das
scas
shll
loop
scas
and
inc
push
mov
cmp
repz
jns
ret
jmp
adc
jns
cmpsl
cmc
bound
and
mov
movl
subb
into
rcr
jle
pop
cmpsl
cs
or
out
push
test
or
lock
xchg
xchg
insb
adc
imul
imul
mov
dec
cmpsb
cmp
push
test
loope
es
ret
les
add
cmp
sti
stc
lahf
inc
dec
jmp
mov
insl
sub
xchg
in
adc
mov
sarl
cltd
std
fs
jno
je
popa
cmp
or
les
xor
in
jbe
cli
and
xchg
pop
scas
loopne
jne
cmp
cmp
repnz
mov
push
xor
cli
mov
addb
pop
psllw
or
js
adc
cmp
or
xchg
fwait
loope
mov
lcall
pop
dec
jecxz
pop
xchg
popf
in
out
dec
stos
rorb
mov
xchg
jge
loop
loope
imul
jo
ja
jle
sbb
out
into
test
cmp
aad
push
jl
mov
xchg
stos
xchg
jle
and
sbbl
mov
out
fwait
sbbl
jp
lret
test
in
fists
adc
fwait
jnp
loop
and
push
outsl
fstl
xor
repnz
ss
in
out
dec
or
inc
mov
repz
push
out
mov
jle
push
rorb
ljmp
dec
jne
into
sbb
mov
imul
movsb
int3
mov
iret
dec
push
sub
pop
push
dec
in
outsb
cs
movsb
imul
scas
popl
adc
repz
and
loop
bound
adc
xchg
push
dec
adc
sahf
cmp
push
insb
ret
adc
outsl
and
in
mov
in
xchg
xchg
xchg
ficoms
test
adc
push
sarb
xor
sub
insb
and
lcall
mov
xor
push
sbb
mov
mov
test
adc
jg
sti
nop
push
aas
xchg
nop
inc
insb
popl
and
jo
test
and
mov
scas
jns
shll
mov
xchg
ljmp
testl
sub
cld
sbb
adc
rcl
fdivs
and
mov
jmp
lds
divb
adc
cmp
test
xchg
inc
andb
aas
shlb
jb
mov
pop
mov
push
mov
mov
mov
inc
lret
cltd
lock
push
sbb
test
js
into
je
jno
outsb
mov
adc
or
test
or
inc
xchg
filds
cmp
push
cmc
paddq
pushf
pop
add
lcall
add
add
push
lret
outsl
sti
lea
pop
test
sbb
test
int
push
rorl
ss
popf
cwtl
test
or
mov
stos
xchg
jb
pop
es
add
hlt
pop
mov
or
movsl
dec
into
xor
or
push
lock
fisubrl
xchg
cmpsb
cs
test
add
dec
cmpsl
pop
cltd
sbb
aad
lds
cli
adc
xor
out
and
xchg
lret
push
hlt
movsl
fwait
ret
mov
xchg
into
loope
in
inc
adc
dec
mov
in
pop
daa
insb
popf
subl
fwait
mov
clc
xor
xor
mov
add
sbbl
daa
sti
imul
pop
xchg
cmp
int3
sbb
mov
shl
test
mov
dec
dec
test
sarb
sbb
inc
mov
jp
mov
inc
xchg
addr16
mov
xchg
shlb
push
pop
lea
sbb
and
lret
add
jl
sbb
shll
std
pop
pop
jo
outsl
leave
push
or
lods
or
fdivrs
pusha
xchg
sbb
push
xchg
test
dec
sub
into
out
enter
and
mov
ret
les
popa
lcall
cmp
enter
push
je
or
addr16
jne
divb
jmp
cmpsb
push
leave
jp
inc
fwait
sbb
mov
dec
addr16
cmpsb
push
imul
adc
xor
in
std
fadds
xchg
int3
sub
push
gs
mov
mov
xor
pushf
pushf
sub
scas
inc
stos
push
outsl
xchg
stc
mov
lock
sbb
js
push
jl
pop
fucomip
dec
jbe
jl
xchg
bound
pop
sti
pop
rolb
fnstcw
jmp
je
or
fs
adc
xchg
les
dec
mov
xchg
pusha
fisttpll
pop
push
fstpt
jb
cli
jg
das
loopne
adc
fcoml
or
imul
sub
les
mul
jmp
pop
icebp
xchg
jne
fdivp
xor
sub
push
and
inc
popa
inc
bnd
icebp
mov
test
jl
add
clc
xchg
insb
cmc
xor
push
movsb
out
shlb
or
xor
mov
imul
cli
adc
push
dec
and
mulb
dec
es
mov
or
sbb
xor
mov
and
jl
pop
lock
lds
cmp
leave
and
rclb
add
repz
cmp
repnz
cmpl
fmull
add
jae
inc
xchg
pushfw
cmp
es
sti
jecxz
std
push
movsl
inc
inc
sub
dec
mov
sub
lods
sbb
imul
add
cld
inc
js
pusha
xor
push
daa
xchg
loop
add
mov
jns
stos
stos
out
jno
test
push
cmpsl
cld
pop
fwait
insl
push
mov
sbb
jp
aas
shlb
lcall
gs
mov
negl
adc
pusha
sub
mov
sbb
scas
stos
jecxz
jb,pt
int3
xor
cwtl
xor
cltd
mov
jle
mov
xchg
cwtl
repnz
sub
cmpsl
cmpsl
adc
subb
adc
aad
fidivs
cmp
out
xchg
repnz
xchg
xor
movsb
subb
pop
sub
pop
xchg
mov
ret
int3
subl
push
in
stos
xor
jmp
lods
jle
in
push
mov
pop
scas
sub
test
sbb
push
dec
call
xor
jno
fdivp
sbb
mov
fstpl
and
dec
pop
sub
sub
addr16
lcall
addb
mov
push
mov
repnz
lcall
and
fadds
leave
mov
addr16
shlb
fisttps
lcall
cmp
jp
enter
fwait
push
hlt
cmp
jl
sub
fucomp
cmpl
push
iret
add
es
lods
bound
cmp
adc
pop
mov
ret
inc
loope
xchg
mov
imul
cmp
add
enter
adc
or
lcall
scas
aad
jb
in
xor
inc
or
insl
and
pop
stos
jb
xor
in
push
or
dec
rolb
mov
push
stc
inc
repnz
insb
enter
out
jp
sarb
lret
mov
aaa
fucomi
addb
mov
int
aas
sub
aas
mov
movsb
jle
jg
mov
test
push
mov
xor
jnp,pn
mov
lret
jp
push
lds
xor
ficompl
ret
push
lcall
out
mov
adc
xchg
cmp
nop
mov
lcall
xchg
jne
out
repz
out
fcoms
aas
mov
sbb
adc
cmp
dec
sbb
mov
int3
ret
leave
dec
xchg
sbb
test
xchg
movsb
xlat
push
cltd
mov
mov
push
pop
lea
ljmp
or
ja
ds
pop
call
test
mov
jmp
test
out
test
mov
int
adc
mov
sbb
std
and
stos
or
jnp
fwait
test
and
ljmp
ljmp
dec
loopne
test
std
test
inc
lods
in
and
cmp
ret
add
pushf
jo
jae
fwait
add
addr16
xor
enter
lea
enter
mov
push
mov
clflush
mov
inc
jae
mov
jmp
cmpsl
shr
jl
and
je
mov
add
or
lods
and
shl
xor
lock
dec
sahf
lock
or
dec
mov
xor
scas
in
mov
add
sub
pop
inc
push
mov
xchg
aas
enter
loope
or
popa
fldl
sti
jl
xorb
mov
xchg
lds
jle
xchg
pop
adcb
out
pop
cmp
dec
es
and
xchg
jb
insl
je
push
lcall
clc
dec
sbb
mov
dec
cltd
xchg
mov
push
fcoms
or
xchg
xchg
stos
push
rcr
mov
xor
pop
mov
js
lods
and
xchg
sbb
fiadds
std
lahf
dec
adc
cmc
mov
movsb
xlat
jne
push
sbb
out
mov
in
jbe
lcall
pop
inc
sub
push
mov
orb
cmp
data16
sahf
xchg
ljmp
and
scas
adc
mov
xchg
push
aaa
std
out
xor
dec
popa
mov
or
xchg
adc
jg
or
add
jo
daa
pop
movsl
imul
ds
arpl
sbb
cmpsl
and
jl
xor
push
insl
scas
imul
or
push
pop
scas
fsub
loopne
mov
movsl
pop
jbe
add
cld
and
loope
sbb
repnz
xchg
dec
or
cmp
ret
stos
imul
push
out
sahf
mov
pop
out
inc
pop
cwtl
pop
cltd
imul
xchg
stc
mov
mov
dec
mov
cmp
lahf
dec
stos
gs
inc
sub
into
jb
or
fwait
aad
cmpsb
xor
push
xor
or
dec
out
xchg
adc
in
cltd
mov
iret
es
xchg
fdivrs
jb
ret
cmpl
mov
leave
pushl
push
loopne
adc
xor
push
bound
mov
cmp
outsl
stos
sbb
bound
pusha
stos
cmp
pop
fisubrl
hlt
push
cmc
mull
ljmp
mov
pop
mov
and
popf
mov
mov
sbb
fimull
adc
pop
push
in
push
push
pop
mov
adc
xlat
shlb
mov
mov
push
packssdw
addr16
push
sbb
mov
popa
pop
xchg
mov
add
mov
or
jbe
and
in
sub
xor
hlt
cmp
xchg
ja
pusha
pop
cmp
pop
cmp
aaa
add
sub
pop
repnz
ja
push
lret
jns
fimuls
jns
or
inc
mov
nop
adc
jne
mov
ret
sub
or
dec
sti
cmp
xchg
in
decl
ss
stc
and
push
and
mov
negb
cli
nop
push
incb
into
jecxz
sbb
push
add
xchg
testb
push
dec
dec
pop
popf
push
xchg
mov
repz
aaa
sbb
xor
and
mov
push
adc
xor
lods
pusha
jl
inc
mov
xor
sbb
fsubs
jo
clc
push
bound
daa
sbb
cmpsb
xchg
xor
cs
jg
jb
outsl
out
dec
cli
and
xchg
cs
scas
repnz
pop
adc
sti
jmp
xchg
pop
or
cmpsb
xchg
fnsave
xor
popf
add
sub
push
sbb
icebp
shlb
or
sti
fcmovb
mov
mov
dec
mov
adc
imul
in
enter
fistpll
mov
pop
or
xor
adc
jb
sbb
shll
ds
mov
mov
mov
bound
jno
push
js
push
or
sub
pop
and
jle
mov
in
xor
les
inc
lods
jbe
pop
sub
push
sub
sbb
or
jbe
xor
test
pop
call
rorl
shlb
push
push
xchg
adc
mov
test
ds
stos
xor
jg
push
dec
rorl
insl
fsubrs
xchg
sbbb
out
ljmp
push
xor
push
or
add
repz
outsl
dec
pusha
jns
xor
inc
push
into
sub
add
sti
add
cli
fdivr
in
xor
adc
lods
xchg
call
sbb
popa
repnz
xlat
jmp
cmc
out
testl
enter
inc
std
xor
jne
pop
insb
lsl
ljmp
lea
je
dec
icebp
loop
out
nop
or
pop
in
repz
cmpsl
add
adc
and
mov
jbe
mov
push
xchg
iret
mov
jg
stc
pop
sbbl
loope
xchg
sahf
sbb
mov
pop
mov
xchg
outsb
mov
rcll
xor
mov
add
mov
sbb
ja
sarb
jl
das
inc
lods
loope
std
add
arpl
jg
and
sub
out
vpsrad
xorb
js
scas
dec
adc
fisttpl
push
lcall
hlt
adc
mulb
xor
and
test
cmc
cmp
mov
shr
sub
or
sub
vpsubusw
mov
les
mov
cmp
leave
mov
mov
leave
iret
shrb
cmp
popa
sub
gs
xor
jo
gs
in
lds
pop
xchg
push
imul
scas
or
pop
repnz
ror
pop
loope
adc
hlt
aaa
adc
xchg
mov
outsl
aaa
dec
jo
fdivl
fnstenv
or
xlat
mov
xchg
out
int3
fstpl
mov
call
cmp
pop
cs
or
pop
in
adcb
dec
add
in
js
push
ficomps
fnsave
cld
scas
cmc
bswap
push
and
or
outsb
imul
sbb
xor
out
dec
nop
mov
call
adc
lock
fldenv
or
adc
jbe
fidivrs
ja
sahf
push
in
and
mov
jb
into
leave
sarb
pcmpgtw
mov
jo
fucomip
cmpsl
stc
or
adc
cmpsb
pusha
adc
push
cmp
pop
mov
and
jns
push
ret
xchg
orb
movsl
repz
rol
aas
cmp
ja
sahf
jmp
je
jb
mov
aam
and
and
mov
aam
cmc
sahf
mov
xor
push
push
outsb
aas
jmp
push
clc
cld
outsl
cmpsl
xchg
lods
stos
dec
adc
inc
mov
hlt
sub
stos
inc
out
pop
sub
push
aad
xchg
xchg
mov
mov
mov
imul
push
dec
imul
push
loopne
adc
lret
out
sbb
fdiv
shrl
mov
lock
add
clc
movsb
aaa
mov
enter
rorb
ja
lock
inc
hlt
or
bound
pop
fs
adc
sbb
xchg
jle
ret
pushf
pusha
mov
push
dec
arpl
andb
xchg
shll
jle
test
push
outsb
std
xchg
jp
xor
xchg
mov
loope
lea
lret
jmp
in
mov
imul
insb
iret
jge
pushf
daa
out
inc
sbb
xlat
mov
push
push
push
add
cs
shll
push
lret
js
outsl
fwait
stc
repz
outsb
adc
push
xchg
pushf
xor
lea
push
inc
stos
xlat
dec
adc
daa
cmpsb
xor
clc
jne
jecxz
dec
scas
sbb
in
sub
imul
aas
jmp
add
nop
nop
adc
ret
jle
jb
pop
mov
and
idivb
xor
dec
stos
sbb
fs
fcomps
das
mov
hlt
mov
jl
je
jnp
std
into
inc
fstpt
in
mov
loopne
ja
mov
lods
jle
shrl
outsl
sbb
cmp
loope
test
inc
rcrb
into
cmc
and
lods
inc
loope
movsl
mov
and
push
xchg
sub
dec
popf
inc
xchg
ss
nop
pusha
mov
jbe
arpl
movsb
lods
fcoms
push
and
jb
push
dec
outsb
ret
movsl
pusha
pop
mov
rolb
jl
aas
dec
pop
inc
in
ret
divb
and
imul
cld
dec
lods
mov
inc
ljmp
rcr
push
adc
ds
mov
mov
xor
cmpsb
int
mov
and
lods
aad
mov
stos
lds
push
mov
cmp
cmp
pop
and
jge
sub
scas
inc
iret
xchg
push
data16
adc
in
mov
ja
lret
fxch
lahf
out
addl
add
sbb
push
mov
ljmp
cmpsl
lahf
and
mov
lea
sbb
cmpsb
scas
xor
sarb
sbb
fmull
or
mov
iret
mov
cli
xlat
jo
xor
jne
test
inc
jno
fwait
leave
mov
pop
push
cld
push
mov
sbb
sub
test
mov
in
cmp
mov
lock
loope
aad
movsb
mov
fisttpll
daa
es
lds
or
pop
ss
cltd
add
sbb
or
xchg
out
or
sti
cltd
mov
enter
xor
shrl
pop
mov
mov
pushf
dec
sub
dec
adc
sub
jl
jl
lods
mov
cmp
stos
sub
arpl
je
imul
popa
aas
jne
lods
jge
adc
aam
add
add
inc
imul
jne
pop
xor
mov
mov
jmp
xchg
nop
lcall
repz
lods
retw
push
dec
or
sub
cltd
ds
js
push
fwait
add
jae
mov
push
adc
and
aad
movsl
stos
cmp
repnz
mov
push
das
cltd
mov
into
add
div
ss
push
and
xchg
mov
jne
in
lods
inc
push
add
pop
ss
pop
and
fnstenv
daa
outsl
mov
lods
into
lock
cmp
test
popf
pop
xor
sbb
scas
add
cmp
sbbl
out
sar
lods
jge
cmpsl
jo
ret
pop
gs
dec
adc
mov
mov
daa
adc
aad
aas
in
lods
cs
hlt
ds
addr16
jp
sub
jbe
xchg
rcrb
pop
in
std
sahf
cmp
cmp
stos
push
aas
pop
sub
in
push
push
test
insl
es
popa
rorb
add
mov
inc
or
call
cmp
insl
xor
repnz
mov
mov
inc
daa
jae
loopne
sbb
fisubl
mov
into
aam
mov
data16
comiss
test
and
xor
in
call
push
test
jmp
leave
or
and
aam
mov
cltd
push
mov
dec
enter
xlat
mov
cltd
sub
push
push
dec
and
ret
push
shll
inc
adc
popa
enter
inc
mov
sti
stc
xor
das
es
pop
roll
push
fs
stc
jg
and
jg
negl
in
push
mov
dec
adc
lret
test
roll
pop
push
xchg
enter
jmp
xchg
in
push
ds
rclb
aam
jns
inc
std
add
jno
fcomps
rol
and
aam
sbb
inc
int
sub
sub
fbld
mov
dec
mov
js
push
cmp
aad
rorb
mull
adc
sub
ljmp
adc
loop
inc
sar
sub
stc
jg
es
imul
jne
add
in
fldenv
enter
cmc
xchg
ss
and
mov
icebp
pop
pop
out
dec
les
mov
jae
and
adc
and
mov
addr16
adc
out
das
pop
mov
pop
test
fdivr
repz
fs
pop
fdivl
fisttpll
push
dec
mov
xrelease
andb
punpcklwd
ud1
push
pop
push
or
adc
gs
bound
push
int
cmp
mov
and
xchg
jbe
xlat
lret
inc
bound
xor
test
pop
jmp
pop
je
push
adc
ret
sti
fdivrl
lret
add
cli
cmpsl
dec
lds
add
mov
outsb
cli
jl
mov
cmp
lea
fisubs
jmp
adc
aas
cmpl
mov
adc
jl
push
fcmovnb
cli
roll
or
or
scas
add
and
push
call
push
cmc
dec
test
pusha
xchg
xchg
je
scas
xor
repnz
sbbb
cmp
lock
ss
sub
mov
shld
bound
js
movsb
mov
jl
loope
rorl
adc
inc
sub
pop
insb
ret
xlat
imul
pop
sbb
cmpsb
out
out
in
in
inc
push
jl
pop
imul
cmpsb
or
xchg
mov
jl
xor
in
adc
inc
lret
push
push
adc
sbb
popa
sub
test
adc
movsb
mov
mov
fmull
mov
pop
int3
addr16
sub
lods
cmpsb
jnp
jmp
dec
test
inc
out
mov
dec
sub
jae
add
push
addl
sub
int
shlb
jb
mov
pushf
data16
icebp
xor
cmpsl
inc
imul
push
mov
pop
nop
and
aaa
inc
rcl
xchg
outsb
movsl
push
aas
rolb
rcr
cmpsl
lret
shl
arpl
dec
orl
enter
or
hlt
shlb
push
mov
push
cs
in
sub
iret
push
loop
push
mov
imul
pop
adc
inc
stc
mov
push
pop
xchg
in
adc
pop
adc
pop
out
jnp
pop
sbb
push
out
pop
sub
xchg
ss
out
jne
jl
xor
mov
or
dec
cli
imul
in
sbb
popf
xlat
fdivrl
mov
fldl
cli
and
lods
xchg
rolb
inc
ret
mov
aam
mov
mov
or
xchg
sbb
mov
mov
mov
add
cmpsl
pop
push
filds
adc
and
addr16
lea
inc
repnz
pop
lahf
pop
jge
fiadds
stos
jle
jecxz
xor
or
mov
inc
adc
daa
cli
push
adc
nop
and
and
sbb
xor
cld
pop
hlt
fists
or
adc
add
lcall
imull
loope
loop
mov
mov
mov
add
pushw
and
jae
pop
and
lahf
xor
daa
mov
push
mov
mov
loop
xchg
inc
data16
aas
cmpsl
and
ss
or
adc
dec
mov
jnp
ret
cs
push
dec
and
sub
jns
out
insb
cltd
outsl
jne
inc
cmpl
daa
or
xchg
mov
cmc
adc
and
jmp
fcomi
out
jmp
outsb
aaa
mov
mov
dec
jne
cli
dec
fidivs
add
pop
gs
dec
scas
es
and
push
jns
leave
inc
ss
mov
fdivrp
ret
add
mov
into
lea
add
cmp
xchg
sbb
sti
jb
pop
insl
xorl
push
jle
add
inc
inc
ja
mov
push
sbb
out
leave
lret
sub
jb
sub
fldenv
jbe
nop
jnp
jmp
jnp
xchg
add
arpl
xchg
mov
xor
fdivrp
divb
test
cmpsl
pop
mov
dec
fldt
data16
cmpsb
jmp
or
jb
xchg
cmp
xor
xchg
and
or
nop
stos
mov
scas
add
xor
jg
mov
mov
arpl
mov
outsb
fcomip
outsl
cmp
test
xchg
test
sub
jo
sbb
pop
imul
xor
jg
fbstp
out
sub
inc
enter
imul
and
sahf
inc
cmpsb
out
sub
push
jle
lds
cmc
fdivr
or
add
mov
decl
adc
decl
mov
jnp
outsb
fisubl
dec
mov
cmpsl
fnstcw
in
xchg
test
mov
mov
int3
mov
push
call
movsl
lret
std
jp
mov
xor
lods
sbb
jle
pop
xor
out
push
mov
in
inc
filds
cmp
mov
fsubl
in
sbb
mov
xchg
cs
mov
rcrb
lret
cltd
mov
dec
xor
repz
dec
fwait
xchg
subb
clc
cli
imull
dec
xchg
rolb
push
xor
cmp
pop
mov
pop
xlat
scas
cld
inc
mov
jl
inc
push
dec
rorl
mul
sub
int3
std
jb
cmpsl
iret
lods
insl
roll
cmpsl
das
jecxz
xor
in
test
pushl
xor
out
int3
push
nop
cmp
ss
repz
dec
ret
jge
cmp
sub
shll
fisubrs
int
push
mov
out
add
scas
mov
or
movsb
lret
mov
adc
jmp
lods
xchg
stc
movsl
push
inc
repnz
inc
ds
mov
imul
fiadds
imul
enter
and
or
jg
ficompl
and
testb
aad
pop
pop
or
inc
movsl
stos
mov
xlat
mov
xadd
jl
jge
dec
mov
in
ljmp
jns
xchg
aad
or
cmp
stos
push
cli
enter
inc
lods
jge
leave
sub
push
mov
xchg
mov
cmp
push
dec
jge
adc
sub
in
and
lds
mov
aam
add
lock
outsl
daa
cmpsl
imul
mov
inc
adc
dec
outsb
jns
lods
cs
dec
test
sub
cmp
pop
lods
push
cmp
cmp
lahf
repz
sub
ret
pop
aaa
dec
pop
das
pop
nop
test
jmp
xchg
xorl
test
lea
sbb
cwtl
addr16
ds
dec
pop
mov
je
test
leave
mov
test
xor
push
cltd
xchg
lods
push
xchg
rclb
xor
jge
lods
mov
mov
pop
repz
fiaddl
cmp
test
hlt
sahf
outsb
cwtl
enter
nop
std
test
jo
sub
outsb
popa
xchg
jne
cwtl
fistpll
rolb
sbb
jmp
pop
test
xchg
xor
lods
pusha
ds
cmc
cmp
in
sbb
xchg
imul
jb
add
pop
xchg
pushf
pop
cmp
xchg
xor
mov
push
or
xchg
sarb
ss
mov
in
xor
outsb
jb
movsl
outsb
in
js
rcr
aas
aas
xor
push
push
inc
add
mov
jmp
add
jne
and
into
mov
repnz
fdivrs
jne
jg
testl
jp
call
jge
outsb
repz
pop
pop
pushf
fwait
cmp
mov
inc
sub
fldl
and
cltd
inc
add
adcb
cli
cmp
repnz
jbe
das
inc
push
xor
stc
push
loopne
jmp
xor
sbb
adc
adc
xor
mov
mov
pop
mov
movsl
sbb
xchg
xor
jbe
jle
dec
cmp
xchg
in
popa
ret
xchg
addr16
push
test
scas
mov
xchg
sbb
xor
and
cltd
daa
adcb
mov
mov
popf
fs
pushf
sub
aam
jbe
mov
lcall
cmp
or
out
fsubr
xor
sbb
fbstp
cli
sbb
pop
push
data16
mov
cli
cmp
or
jmp
mov
nop
push
sub
adc
pusha
fstps
push
adc
repz
dec
push
out
imul
lea
push
insb
repnz
jle
jno
cs
ror
sub
sbb
inc
sbb
xor
cmp
mov
in
mov
enter
cs
add
dec
jp
roll
jno
shlb
bound
nop
xlat
out
add
mov
adc
scas
push
addl
inc
loope
lahf
push
jne
inc
pop
and
pop
dec
rolb
mov
pop
in
sbb
inc
lock
mov
push
mov
pushf
lds
int
mov
sub
sbb
mov
cmpsl
sbb
adc
outsl
enter
out
cli
xor
push
cmp
mov
sub
lds
jno
adc
outsb
incb
or
lock
jl
cltd
dec
and
pop
cmp
pop
out
iret
rorb
idivb
sbb
push
mov
mov
bound
sbb
cmp
call
mov
jb
int3
out
fildll
cmp
stos
add
sahf
shll
mov
inc
das
mov
movsb
fs
idivl
loope
scas
jecxz
mov
mov
cmp
mov
ja
das
pop
sbb
inc
mov
rcll
daa
call
lock
dec
fwait
jns
test
push
cmp
cmp
and
mov
pop
flds
xor
test
rolb
inc
jb
call
je
xor
ja
cs
and
dec
aas
pop
xchg
pop
repz
mov
or
sub
jno
pop
rcll
cwtl
lret
jmp
in
in
mov
pop
inc
and
addr16
adc
xchg
push
push
jge
jb
sbb
mov
adc
les
rclb
and
mov
xor
stos
mov
inc
xchg
iret
mov
mov
lret
sbb
sarl
inc
clc
fmuls
mov
bound
push
roll
pop
aad
add
xor
sub
push
adc
rcrl
dec
inc
out
test
mov
imul
push
sub
mov
sbb
adc
sti
aaa
cmp
xlat
lock
xchg
and
aam
cmp
push
sub
pop
ret
andl
dec
and
lock
movl
aaa
jo
loopne
push
aaa
add
dec
movsl
leave
lds
adc
lods
dec
arpl
dec
lahf
clc
add
out
in
movsb
or
jp
pop
fiaddl
xchg
das
int
lret
shlb
sub
testb
inc
mov
mov
repnz
in
mov
mov
or
mov
cmp
sub
arpl
jnp
scas
lea
pop
arpl
mov
imul
xchg
stc
and
xor
in
out
fnsave
out
mov
push
fstps
lret
push
fidivrl
out
outsl
dec
pop
inc
outsb
add
ret
xor
or
jmp
call
cmp
test
sub
nop
mov
inc
sub
sbb
daa
lcall
jae
cwtl
add
addr16
sbb
inc
and
add
jo
mov
cwtl
sbb
xchg
xor
xchg
stos
mov
xchg
mov
shrl
sbb
ja
ljmp
xchg
shlb
fwait
pop
mov
pop
fmul
imul
push
push
mov
cltd
loopne
ss
dec
mov
jnp
es
lcall
pop
mov
mov
push
or
pushf
xlat
jle
shrl
and
or
rorb
add
inc
xor
push
rcll
cmpsl
push
xchg
push
cmpsl
mov
adc
loope
popf
mov
fdivs
call
aas
popa
add
pop
pop
jne
mov
xchg
adc
xchg
mov
push
jbe
push
mov
aad
adc
xchg
lcall
out
das
dec
scas
dec
cmp
sbb
xorl
cmc
inc
sbb
jmp
jo
aam
sbb
mov
rcll
into
mov
mov
stos
cmpsl
aaa
mov
mov
jne
mov
dec
lcall
xchg
pop
mov
sub
test
xor
sub
push
mov
test
jb
dec
or
mov
xchg
loope
stos
fcoms
scas
add
adc
or
inc
sarb
sub
cwtl
pop
int3
jl
xorb
lahf
xchg
cmp
popf
sbb
or
aaa
inc
std
adc
cmovl
rep
dec
push
sbb
arpl
mov
pop
and
dec
mov
pop
dec
add
xchg
rorb
inc
cmpsl
mov
pop
lret
sub
mov
fsubs
pop
jg
sbb
jo
sbb
movsb
or
mov
jl
les
repnz
pop
add
jle
pop
pop
insl
mov
xchg
and
adc
test
adc
shrb
jmp
leave
cltd
fistps
lcall
js
mov
sub
sbb
ss
inc
clc
cmp
add
push
or
repnz
xor
or
and
into
gs
sub
mov
dec
int3
and
mov
xlat
jge
daa
nop
xor
lcall
cmp
nop
lret
and
idivb
mov
cmp
jg
aas
aam
loope
pop
xorb
fisubl
ds
cmp
xchg
sub
inc
addr16
pop
mov
int
push
mov
mov
outsl
in
shl
mov
cmp
add
mov
jle
xchg
andl
movsl
jmp
mov
jle
nop
popa
push
inc
iret
ss
lret
jo
lcall
pop
negb
cs
pop
jecxz
sub
lret
aaa
fmuls
je
and
je
push
jp
add
and
lea
inc
mov
and
incb
dec
stos
lock
sub
xor
jl
mov
add
lcall
es
mov
sub
hlt
aam
in
bswap
or
enter
lret
dec
xchg
sub
fidivrs
fstpt
inc
in
sar
xchg
mov
mov
push
popa
pop
inc
out
sbb
stc
pusha
ja
or
inc
sbb
popa
sub
orb
inc
test
out
and
adc
sub
sub
mov
icebp
jle
ja
mov
lret
adc
jns
shll
mov
or
mov
mov
sub
pop
enter
cmpsl
jl
idivb
into
imul
cmpl
xchg
jp
dec
call
daa
in
fstpt
shll
or
cmpsl
or
ja
dec
lgs
mov
push
push
dec
mov
pop
jl
add
cli
pop
jb
lret
sub
add
out
ret
mov
or
cmc
test
adc
pop
sub
enter
mov
push
xchg
xlat
into
or
mov
sub
fcompl
daa
add
in
aaa
push
hlt
jb
adc
cmpsl
fdivr
repnz
dec
pop
insb
cmp
scas
mov
cwtl
mov
sarl
jb
test
das
out
or
fbld
pop
xchg
out
or
js
cmpsl
push
xchg
insl
sbb
movsl
pop
xor
xor
fidivrs
pop
push
pop
aas
mov
or
add
push
ja
out
gs
mov
add
movsb
mov
xor
hlt
sub
fistpl
inc
scas
fsub
lock
test
pop
jl
lea
jecxz
cld
lret
aaa
add
xor
ror
cmpsl
push
clc
dec
sbb
xchg
sub
cmp
leave
add
xor
or
add
mov
jecxz
xchg
les
adc
cwtl
mov
adc
cmp
pushf
jno
adc
jmp
pop
out
lock
fildll
fisttpll
dec
adc
dec
lods
push
adc
pop
and
into
push
jns
push
add
sub
jmp
test
mov
jge,pn
outsb
or
jmp
out
mov
sbb
sub
xchg
push
or
jl
repnz
test
adc
ss
push
dec
mov
dec
inc
add
jle
cwtl
repnz
cmp
sbb
xor
inc
fildll
mov
push
adc
pop
dec
pusha
cmp
fwait
mov
and
dec
adc
in
mov
movsb
dec
xchg
xchg
xor
cmp
addr16
aad
inc
stos
aam
clc
sub
xchg
and
shll
ljmp
insb
lcall
and
jno
lods
call
movsl
add
cmc
lret
stos
and
xlat
mov
add
daa
adc
mov
faddl
push
in
call
fildll
mov
test
lahf
popa
sbb
icebp
cmpsl
cmp
lea
addl
testb
sbb
push
mov
push
lcall
movsb
adc
sbb
cmpsb
movsl
jg
imul
rcrb
ja
pop
mov
stos
pop
and
fsubs
mov
jg
or
sub
cmp
and
movsb
ss
push
sbb
popa
cmpsb
or
repz
cmpsl
arpl
push
fbstp
mov
cmc
pop
test
fiadds
add
dec
pop
test
push
lahf
shll
fistps
push
fdivrl
addr16
bound
scas
lods
xor
mov
leave
xchg
cmp
jnp
pop
xchg
nop
push
cmp
fcoms
and
inc
push
mov
in
sbb
loop
add
fists
adc
shlb
jl
jg
jno
es
pop
fidivl
mov
mov
jg
outsb
ret
out
and
xor
enter
bound
inc
add
fcomip
bound
mov
cmpb
aad
in
movsl
adc
xchg
dec
arpl
out
add
out
xchg
mov
adc
addb
call
cmpsb
sub
leave
cmp
int3
sbb
ret
push
cmp
mov
and
sarb
das
ss
stc
jle
sarb
push
fldt
mov
push
popf
lock
cli
push
pop
in
sub
adc
add
or
pushf
fwait
jmp
icebp
out
sub
or
mov
and
lds
dec
add
int3
jmp
lods
aaa
fisttpll
in
pushf
fldenv
nop
mov
jg
jbe
bound
jmp
sbb
xchg
xor
fstps
notl
inc
adc
push
sbb
ds
jle
add
stc
and
mov
dec
hlt
rorb
cmp
push
out
jg
xor
out
and
pop
stos
jnp
xchg
nop
fisubrs
xor
push
mov
cwtl
stc
pushf
mov
lcall
icebp
loop
jb
cwtl
aas
jo
aad
or
es
mov
nop
sub
imul
push
and
fwait
mov
and
push
repz
shr
andl
xor
xor
in
xor
je
js
sbb
jae
sub
outsl
ja
stos
xchg
rcll
inc
xor
insb
push
xchg
negl
shr
jb
jmp
adcl
inc
jbe
lcall
test
fsubrl
jl
xchg
or
dec
stos
fildll
into
roll
addr16
xor
pop
push
mov
jne
js
pop
or
outsb
arpl
scas
or
or
pusha
rol
push
rclb
sub
mov
sbb
pop
inc
push
adc
and
inc
rorl
inc
movsl
dec
int
mov
dec
adc
ficomps
cmp
cmpsl
lods
or
push
call
ljmp
pop
adc
lods
ljmp
adc
dec
mov
cmpsl
jl
loop
div
cmp
jecxz
sbb
repz
add
mov
popl
sub
inc
inc
push
jmp
call
mov
pop
sbb
icebp
sub
push
xor
sub
xor
scas
fsubrs
loop
mov
jb
pop
loop
es
fisttpll
push
cmpb
fwait
push
jnp
and
jp
push
jne
dec
sub
cmp
iret
lahf
dec
aad
aas
ret
push
jecxz
adc
cmpsb
mov
jns
stos
mov
leave
xchg
sar
enter
and
decl
push
vcvtsi2sdl
cmpb
mov
or
cmp
inc
cli
pop
push
push
out
leave
ljmp
lea
fsubrl
jae
mov
mov
aas
dec
dec
ljmp
adc
lahf
jno
out
test
push
jle
daa
jmp
ds
test
mov
hlt
pop
xchg
and
imul
push
lret
inc
xlat
jle
nop
shr
sub
cltd
dec
pop
arpl
pop
cmp
fmul
or
faddp
sub
pop
rclb
outsl
popl
push
mov
les
cld
test
cld
cwtl
xor
rcrl
jo
add
loope
test
gs
xor
cmp
das
jo
xor
sti
out
shll
and
adc
dec
ss
push
jecxz
imul
mov
sbb
jp
in
fldln2
sub
imul
into
cli
sub
nop
nop
rol
lcall
pop
ljmp
fst
mov
mov
xchg
lock
lret
daa
dec
aad
jns
mov
pop
mov
loopne
mov
movsl
ret
mov
lods
dec
mov
dec
imul
fistl
or
xchg
jge
inc
and
out
dec
sbb
pop
adc
or
negl
test
xchg
cmp
sub
out
popa
fnsave
or
mov
shr
xchg
add
jnp
or
push
push
shl
ret
push
or
sahf
mov
dec
mov
sub
faddl
cmpb
jmp
imul
mov
mov
pop
mov
ret
dec
and
pop
sbb
xor
cltd
jne
hlt
jle
shr
vphaddudq
sbb
loope
pushf
mov
sbb
pop
out
repz
dec
enter
jge
mov
daa
adcl
pop
leave
jl
out
xchg
stc
adc
dec
lret
icebp
sub
add
dec
push
mov
dec
pop
jbe
cmp
jbe
cltd
pop
mov
sbb
mov
int
gs
fsubrs
xorb
pop
sub
lret
mov
subb
mov
mov
inc
popa
and
outsl
sub
dec
cmc
leave
aam
xor
leave
add
dec
inc
lock
add
bound
lea
mov
xchg
inc
ds
shlb
inc
pop
adcl
out
mov
push
lds
push
mov
mov
add
push
imul
lahf
xor
sbb
xchg
pop
mov
loop
jmp
mov
les
jo
mov
add
dec
dec
inc
mov
jmp
ss
bnd
in
add
push
rclb
mov
push
loop
movsb
and
fsts
jnp
mov
popf
inc
cmp
test
mov
stc
fildl
cwtl
push
mov
mov
push
enter
sbbb
shlb
or
ja
aad
mov
push
dec
push
call
leave
push
inc
arpl
sbb
lret
inc
add
insl
mov
ja
ja
shrb
or
sbb
mov
jp
jae
fdivl
stos
mov
insl
jno
lock
sbb
xor
aaa
jmp
mov
xor
lods
out
shlb
les
lret
or
mov
or
cmp
mov
jmp
mov
movsl
mov
out
sbb
pop
out
cltd
pop
test
push
pop
sub
xchg
or
aam
sub
dec
pop
mov
cmp
pop
and
cwtl
out
std
cmp
movsl
mov
jns
push
lea
ret
lret
or
inc
decl
stos
fdivrl
pop
push
pop
mov
rorl
push
scas
pop
and
ja
cltd
mov
aad
xchg
in
jne
je
push
xlat
addr16
mov
push
outsb
inc
cmp
scas
popf
pop
xchg
addb
xchg
cmp
mov
cmp
sbb
iret
mov
test
mov
shrl
movsb
inc
push
lock
jge
data16
lods
xchg
mov
das
jns
ret
das
mov
pop
pop
test
adc
rcll
scas
pop
xchg
test
jo
add
xor
js
add
mov
xchg
inc
dec
loopne
jmp
dec
sub
jno
pop
aaa
adc
lods
push
sbb
stc
lahf
dec
or
mov
add
fsubrl
jnp
ja
stc
adc
fisttps
push
mov
xchg
xchg
ljmp
jnp
push
dec
inc
mov
pushf
mov
sub
sbb
rcrb
rcrb
imul
psubb
mov
test
nop
std
xor
adc
insb
sar
mov
and
dec
xchg
in
lret
hlt
mov
adc
in
and
jl
jg
mov
mov
cs
lea
dec
pcmpgtb
sti
int
cwtl
xor
movsb
jp
orb
divl
pusha
insb
push
add
outsl
enter
leave
jl
jno
in
and
add
inc
inc
arpl
imul
and
into
adc
jb
je
inc
insl
stos
cmp
jg
add
sub
pop
mov
pop
push
pop
addb
movsl
sub
aad
mov
jmp
push
imul
jo
and
jge
xchg
ljmp
push
jl
jle
rcrb
into
mov
scas
dec
out
test
mov
ds
jmp
rorb
pushf
dec
lods
sub
jg
stc
add
or
jle
cmc
loope
inc
sbb
xchg
and
les
ds
push
or
jno
jns
outsb
stc
cmpsl
mov
xchg
dec
jp
and
jns
repnz
sub
shll
sub
dec
cmpsb
sarb
sbb
arpl
fwait
dec
jmp
test
adc
out
loope
pop
lods
fmull
jne
cli
mov
xor
jo
test
daa
adc
scas
sub
mov
adc
mov
test
js
pop
sbb
aad
mov
fs
push
inc
adc
dec
hlt
xchg
test
or
cli
fdivr
push
ljmp
pop
in
std
add
inc
jl
repz
clc
andb
imul
loopne
xchg
daa
mov
sub
test
xor
xchg
movsb
jnp
leave
daa
or
out
in
sbb
rorl
mov
sub
add
rol
lods
pop
mov
xchg
mov
jp
sub
mov
mov
sub
ljmp
stos
stos
push
jl
push
pop
xchg
nop
and
outsl
xchg
loope
inc
sub
testb
jb
ret
outsl
outsb
push
push
and
fwait
inc
inc
lcall
scas
push
out
ds
out
decb
cmp
fxch
nop
inc
loop
in
sbb
jecxz
enter
jb
mov
sti
inc
sub
and
xlat
aas
push
lea
leave
cmp
pop
add
lds
push
mov
decb
mov
add
insl
sbb
xor
jp
data16
push
xchg
lret
dec
sbb
jp
call
stos
sahf
out
push
jg
inc
hlt
enter
mov
pop
jp
aas
jno
cmc
push
fcoms
push
cli
pop
push
xchg
cmp
stos
rolb
jl
mov
sti
xchg
arpl
jp
push
movsb
adc
xchg
arpl
gs
shlb
pop
mov
stc
nop
shlb
cmp
test
dec
in
ja
xor
jle
mov
dec
aas
inc
call
mov
jmp
push
mov
jmp
aam
out
imul
inc
xchg
mov
ret
cmc
in
gs
sbb
js
push
mov
test
inc
push
lret
cmp
in
out
into
sub
fwait
xlat
insl
mov
in
hlt
imul
mov
iret
lods
jno
hlt
and
sub
jmp
push
hlt
or
xchg
stos
pop
addr16
mov
scas
xlat
outsb
push
cmc
gs
es
push
popa
mov
xor
test
stos
and
adc
add
sbbl
and
inc
test
roll
sub
stos
loopne
xchg
repz
jl
jne
fs
mov
ja
adc
outsl
fs
mov
stos
lds
and
lea
mov
cld
sbb
outsl
jg
mov
ds
cmp
dec
jns
and
mov
cld
hlt
xor
sbb
xchg
and
mov
out
pushf
std
jbe
xchg
lret
fwait
pop
fstl
loop
push
dec
mov
mov
push
scas
aas
ds
inc
cmpsb
cmp
ja
jo
xor
add
inc
rorl
pop
ljmp
icebp
ret
pop
sbb
repnz
icebp
mov
cmp
push
test
cmp
pusha
fcompl
or
push
cmp
test
jmp
cmp
pop
mov
dec
xchg
jl
sub
rorl
sbb
stos
pop
xchg
loop
insb
sarl
imul
rcrl
pop
stc
xor
stc
xchg
mov
cmpsb
push
ja
call
lahf
add
mov
adc
lds
js
fadd
js
rcll
mov
out
jp
std
fidivrs
mov
mov
icebp
hlt
mov
imul
movsb
xor
mov
jge
sub
jae
cld
in
pop
push
imul
daa
pop
lcall
fnstsw
pop
scas
mov
std
cltd
pop
scas
stos
mov
xor
or
data16
adc
mov
in
and
and
mov
adc
pop
fldt
xchg
fsubrl
ret
enter
add
fwait
jp
test
cmp
popa
pop
clc
mov
push
cli
add
mov
mov
xor
or
sbb
fsubrs
cmp
bnd
fistpll
repnz
jo
jbe
jne
pop
adc
jns
xor
adc
out
pop
and
pop
popa
xrelease
push
movsb
sbb
sarb
cmp
jo
mov
add
lret
mov
scas
and
cmp
pop
fs
adc
inc
ds
stos
pop
pop
adc
into
imul
xor
mov
jno
sbb
lahf
hlt
lea
and
dec
xor
inc
adc
in
dec
fdivrs
sub
testb
mov
int3
add
push
mov
sbb
jns
xchg
push
cli
gs
das
push
hlt
sub
lcall
daa
push
and
cld
sbb
lahf
jns
mov
xor
add
dec
in
out
and
lcall
jmp
push
or
mull
add
add
out
jne
imul
rclb
pop
cmpsl
dec
or
fistps
lret
push
dec
rcrb
out
test
mov
or
pop
clc
xor
fisttpll
icebp
cmp
inc
adc
lcall
loope
mov
insb
ljmp
test
dec
mov
xchg
sub
xorb
jno
pop
lea
inc
mov
mov
pop
mov
stos
push
movd
add
push
pop
dec
xor
icebp
arpl
aaa
pushf
pushf
xor
and
call
push
dec
fsincos
test
sbb
das
push
pop
pop
shll
xchg
adc
rclb
lahf
cs
and
aam
xchg
jmp
pop
ja
sbb
fcoml
scas
enter
aaa
dec
inc
jns
jne
push
sbb
int
movsb
imul
push
jmp
sub
loopne
mov
pop
fbstp
or
in
lret
and
inc
ljmp
jp
data16
or
in
in
mov
fwait
sti
sbb
mov
sahf
mov
or
push
pop
fsubrs
ret
nop
cmp
arpl
out
mov
shl
mov
adc
or
stos
push
test
sbb
or
lahf
mov
xchg
cmpsl
sti
jg
xchg
stos
push
pop
jno
xor
xor
sbb
inc
or
orps
test
test
mov
sub
sbb
loopne
xor
or
orl
xor
pop
repz
icebp
mov
xorb
leave
faddl
aad
and
xor
in
or
cmp
or
sub
pushf
mov
sbb
call
mov
xor
nop
div
jge
nop
stos
mov
jbe
fidivl
and
aas
cmp
ss
sub
mov
add
xchg
xchg
lds
xlat
pop
adc
pop
popa
lods
int
adc
push
cmp
mov
je
pop
add
fildl
mov
in
pop
or
dec
out
ds
xchg
inc
mov
xchg
pop
pop
and
pop
lds
mov
iret
xchg
std
ret
or
and
in
out
jmp
sub
add
or
dec
in
repz
aad
dec
mov
leave
add
andb
jecxz
dec
jno
movsl
pop
mov
test
jne
sub
fldenv
sti
xor
jg
and
jne
and
fcoms
out
imul
jnp
jecxz
es
sbb
push
idivb
in
inc
addr16
sub
lods
hlt
sub
lods
std
loope
lea
push
mov
xor
pop
mov
fidivrs
jbe
fstl
addl
pminsw
xchg
cli
inc
scas
sahf
xchg
xor
jno
in
lods
mov
lock
sub
icebp
gs
xchg
dec
sbb
popl
mov
pop
push
jg
mov
lret
xchg
sti
dec
fsubrp
sbb
loop
out
xlat
stos
std
adc
pop
or
pop
adc
pop
dec
fcoml
mov
xor
jb
lret
iret
xor
jecxz
push
push
movb
push
rcrl
ds
dec
adc
dec
test
sbb
call
es
inc
pop
lahf
clc
dec
fldl
mov
xor
pusha
iret
scas
mov
lea
dec
cmp
pop
cmp
jg
scas
cmp
lods
add
mov
mov
pushf
cmpsb
sub
ljmp
adc
push
mov
lret
movsb
fnstenv
sti
push
test
aas
and
mov
fsubr
out
cmp
mov
xchg
iret
imul
pop
jge
add
fnstenv
data16
movsb
sti
pop
daa
je
stos
cmp
lahf
cmp
sub
xchg
insb
inc
xchg
bound
sub
sub
inc
rorb
jbe
sub
jmp
sbb
push
out
inc
lea
push
and
outsb
jns
movsb
gs
iret
subb
pop
test
cmp
enter
out
aaa
je
pop
ret
mov
loop
mov
stc
iret
jne
cmpsb
fistps
adc
addr16
ret
dec
push
add
ret
fst
push
xchg
inc
test
or
jns
xchg
xchg
cmp
scas
pop
call
mov
mov
cld
mov
js
xor
push
sub
mov
or
mov
push
test
into
aaa
and
fstl
sub
hlt
scas
jl
pop
push
cmpsl
sub
lret
add
sbb
mov
push
push
insl
ss
add
cmp
pop
test
repz
movsl
outsb
push
testl
ds
mov
add
int3
mov
je
jb
fdivrs
xchg
mov
addr16
sbb
aaa
popf
push
std
lods
out
imul
xchg
mov
scas
fiadds
repnz
sub
in
pop
stos
mov
daa
out
pop
mov
js
ret
pop
jb
aas
pop
pop
sbb
pusha
mov
std
or
xor
movaps
out
sbb
dec
adc
push
inc
mov
in
sbb
fmul
pop
jmp
mov
inc
sbb
iret
shlb
in
jb
or
daa
sbb
lods
aam
mov
mov
push
pop
or
jecxz
add
fs
dec
mov
cmp
mov
ja
mov
dec
pop
xchg
stos
xchg
fcmovnu
xlat
out
in
and
gs
jg
int3
mov
std
cmp
enter
add
out
das
pop
jo
inc
pop
into
loopne
and
aas
cli
out
or
sub
mov
cmp
stos
cmpsl
sbb
mov
push
sbb
test
jl
outsl
in
arpl
jns
xchg
xor
or
mov
addr16
jbe
aam
call
pop
push
addr16
jle
mov
fstpl
fisttps
icebp
inc
mov
push
add
sbb
cmp
call
jns
jo
mov
mov
adc
mov
test
push
adc
jecxz
clc
ljmp
mul
movsb
out
adc
stc
mov
pop
or
aaa
aas
iret
scas
adc
outsl
ret
adc
mov
loop
in
mov
es
cld
and
je
dec
mov
cmp
in
and
loope
add
xchg
pop
sbb
inc
ret
jnp
outsl
out
mov
fwait
jbe
nop
mov
jae
fldcw
mov
mov
push
pop
xchg
cmp
jl
push
cmp
or
mov
mov
lods
mov
sub
repz
xor
arpl
std
xor
loope
push
fdiv
lcall
mov
loopne
and
fnstsw
out
fisubl
out
test
add
cmc
and
xlat
xor
xchg
imulb
push
mov
xchg
int
punpckhbw
cmpsb
ss
sub
inc
inc
jae
or
jecxz
testl
leave
call
adc
jno
inc
mov
dec
aam
sub
cmp
out
outsl
jge
sub
cltd
push
xor
mov
jb
fwait
es
adc
pop
add
in
es
out
dec
sub
into
jae
cmp
push
std
fiaddl
mov
push
xchg
std
enter
jle
in
fdivrs
iret
int3
xchg
cmc
stos
cmp
divb
repnz
sub
arpl
mov
andl
or
das
out
xor
mov
cld
into
sbb
xor
nop
pushf
fisubl
push
jg
addl
rcrb
cmp
sahf
cmpsl
push
sub
les
mov
cltd
aad
pop
inc
pop
mov
decb
xlat
xchg
mov
and
sbb
fnstsw
repz
pop
and
jl
shrl
jmp
or
sub
jns
inc
cltd
scas
cmp
pop
push
outsl
pop
xchg
dec
jb
mov
mov
fisttpl
push
jnp
fcmove
sub
dec
jg
dec
stos
mov
data16
adcb
jle
stos
js
subl
ret
add
and
ret
nop
inc
add
pusha
insb
bnd
lods
push
sbb
ds
and
inc
mov
ss
push
scas
lret
xor
xlat
dec
inc
ja
xor
adc
or
mov
and
gs
fsts
adc
mov
mov
cli
loope
or
xrelease
aas
subl
jb
fiadds
xchg
push
push
push
div
das
insb
mov
outsb
fbstp
jns
dec
xor
imul
dec
das
jecxz
shrb
mov
sarb
cmc
xchg
cmp
jb
bound
insb
dec
push
sub
pop
aad
je
mov
sub
adc
les
adc
dec
jb
das
aad
jnp
adc
adc
mov
push
jecxz
scas
jnp
pop
lcall
lods
sbb
and
es
push
int3
in
sub
sub
and
movsb
aam
push
jo
xor
mov
lret
incb
and
jecxz
or
fsubrl
mov
mov
jecxz
enter
adc
jbe
pop
test
aad
inc
push
roll
inc
jne
push
adcl
mov
and
dec
rcll
out
mov
sbb
sarl
add
pop
cli
xor
xchg
mov
sbb
inc
repnz
outsb
imul
adc
and
shll
and
ds
jnp
nop
loop
lea
jo
iret
and
cmp
adc
inc
repnz
neg
iret
out
iret
fdivrs
out
test
cmp
jnp
and
out
mov
hlt
addb
jne
gs
int
sbb
in
pop
dec
clc
mov
addr16
jno
add
xchg
pop
repz
and
xchg
add
ds
je
mov
mov
in
out
shr
xchg
xchg
xor
mov
jmpw
cmpl
gs
jnp
push
sahf
xchg
mov
inc
stc
imul
lods
test
dec
addb
loop
in
cmp
xor
and
push
call
add
push
and
sub
push
dec
insb
cmp
mov
mov
pushf
sub
mov
popa
push
hlt
add
test
das
mov
mov
in
jge
mov
popa
adc
mov
jle
and
or
sub
adc
rorl
mov
mov
sbb
iret
cltd
cmpsl
add
dec
inc
add
test
aaa
push
xor
mov
aas
das
sbb
adc
mov
xor
xorb
hlt
nop
icebp
mov
xlat
sub
roll
jge
fbstp
jns
or
fucomi
mov
add
and
in
movsl
dec
xchg
test
data16
or
je
pop
scas
adc
test
fidivl
lock
out
ja
pop
aad
xor
sbb
outsb
pop
xor
sbb
sub
fs
inc
idiv
pusha
mov
lods
xchg
enter
addr16
arpl
enter
sbb
int
sbb
cmp
shll
adc
scas
std
cmp
stc
sub
lret
cli
ret
dec
adc
xchg
cmp
add
pop
mov
dec
mov
cmp
data16
push
push
push
mov
fptan
mov
pop
lea
fwait
sub
pop
cmp
andb
cmpsb
incb
mov
jmp
mov
out
xchg
push
fisubrl
push
arpl
sub
inc
sbb
mov
mov
repnz
les
pop
or
push
fistpll
adc
cmpsl
ss
cs
mov
mov
mov
cmp
push
test
push
shlb
mov
xchg
mov
mov
sub
jmp
and
jns
out
inc
repz
pop
xorl
cmp
sub
jg
dec
mov
sbb
xor
add
loope
cld
call
imul
mov
repz
enter
xchg
popf
jl
pop
lret
lcall
fisubrs
push
mov
mov
test
cli
push
cs
jno
push
push
pop
push
inc
jnp
das
icebp
jbe,pt
jge
popa
mov
pop
mov
inc
pop
cmp
in
push
int
sahf
std
in
jl
jmp
add
jae
xchg
sbb
lcall
mov
repz
sbb
mov
cmp
and
xchg
adc
and
clc
loope
jae
mov
iret
mov
add
mov
pop
xor
imul
adc
dec
lods
shrl
dec
xor
loop
inc
and
cmp
adc
sbb
sti
cld
adc
aaa
cmp
pusha
jno
aad
rcrb
lock
or
mov
aam
and
in
adc
mov
sarb
xchg
fsubrl
xchg
movsb
popf
gs
int3
stc
cmp
dec
push
mov
repnz
pop
add
out
fstpt
out
cmp
lret
xor
in
hlt
cmpsb
cmp
xchg
xor
push
mov
sbb
gs
lret
rorl
sub
cmc
sbb
mov
insb
cltd
and
in
sub
scas
push
xchg
pop
stos
inc
rcrb
dec
xor
ret
lock
inc
jecxz
aas
mov
idivl
stos
mov
outsl
mov
mov
push
cs
movsb
fidivl
fbld
jmp
xchg
pause
cmc
ss
xlat
das
jmp
insl
cmp
add
xorl
mov
add
lret
movsb
lea
fcos
push
mov
test
loop
cmpsl
sub
sbb
repz
cwtl
mov
jnp
mov
dec
sti
xchg
adc
cmc
movsb
out
jae
or
aaa
dec
fwait
and
pop
adc
or
pop
stos
enter
nop
cld
fdivrs
push
aaa
pusha
and
mov
sub
subl
cltd
xor
add
inc
sub
and
and
call
mov
les
test
cmovg
adc
imul
icebp
jo
ljmp
or
rcrb
jmp
push
pop
imul
add
sahf
add
movsb
pop
add
push
lea
or
sbb
cmp
movsb
inc
jo
shll
sbb
mov
jp
push
xchg
insb
add
push
mov
sarl
mov
sarl
stos
add
push
cmp
push
das
push
inc
mov
cmp
sub
xor
fstl
outsb
sti
sub
mov
outsb
cmp
xor
imulb
push
bound
shld
mov
jnp
push
push
out
push
xchg
loope
cmpb
gs
rorl
mov
imul
cmp
mov
push
adc
push
push
test
shl
xchg
mov
or
push
jno
jae
sti
insl
mov
in
hlt
rclb
outsb
sbb
ja
ja
aad
xchg
jle
jmp
cld
push
mov
cmc
mov
arpl
pop
faddl
xor
cwtl
add
adc
pusha
stos
xor
xor
addr16
xchg
xor
jecxz
jo
push
arpl
adc
in
cltd
call
pop
xchg
mov
add
loopne
pop
arpl
mov
push
int
mov
aad
andb
push
pop
and
out
mov
lods
sub
popf
rclb
push
pushf
out
movsl
shlb
scas
dec
mov
ljmp
jns
mov
adc
sbb
or
bound
or
sub
cwtl
dec
cmp
lods
jno
ret
mov
ret
dec
push
icebp
call
int
fbld
and
nop
push
lds
inc
push
les
aaa
xchg
rcll
shl
imul
push
jns
ss
sub
mov
jmp
mov
xor
mov
cmp
cmp
out
test
ret
movsb
xor
and
lret
mov
lret
out
movsl
testb
xor
sbb
ljmp
outsl
jne
jge
jae
scas
sub
in
jge
test
movsb
outsl
jle
add
arpl
ret
pop
dec
mov
push
cmp
inc
jl
enter
sub
mov
movsb
daa
cwtl
lcall
mov
adc
sbb
adc
push
cmp
inc
push
dec
adc
jl
and
mov
and
jl
and
fisttpl
inc
test
outsl
addb
mov
xor
xor
sbb
mov
js
je
les
or
iret
push
into
xchg
sahf
add
mov
iret
cmp
xchg
sbb
mov
cmp
add
mov
add
and
rorb
xchg
out
sub
call
xchg
movsl
pop
and
in
dec
jg
outsb
fildl
loope
insb
sub
aas
icebp
xorb
inc
push
lcall
sbb
push
cmpsl
fistps
mull
add
lahf
xor
jae
pop
add
es
mov
jo
mov
stos
push
xchg
cmp
aas
ret
test
cmpsb
std
push
xor
stc
lret
lods
dec
cmp
or
and
add
fiadds
fadds
add
out
mov
mov
jne
scas
cmp
loope
ljmp
pop
add
and
imul
ds
bound
jp
push
mov
jno
jnp
or
mov
in
push
in
cmc
fistpll
add
sbb
pop
xchg
jg
out
cltd
mov
push
fadds
sbb
dec
out
mov
lock
xchg
pop
mov
pop
loopne
sarb
pop
inc
sbbl
jl
mov
pop
add
xor
cli
ss
gs
lcall
jne
jmp
lock
imul
jbe
outsb
sbb
push
pusha
jo
in
insl
pop
shl
aas
enter
addr16
jbe
pop
pop
jge
mov
test
sub
sbb
movb
std
in
negb
arpl
sahf
cmp
cwtl
icebp
stos
jae
icebp
sbb
and
cmpsl
pop
andb
mov
jns
pop
inc
xor
and
sub
insl
pop
dec
mov
pop
xchg
xlat
add
xchg
inc
and
lea
pop
fiaddl
dec
push
mov
popf
enter
js
leave
cmc
or
out
loop
and
mov
adcl
cmpsb
sub
test
jbe
pop
jp
pop
and
push
lods
xchg
enter
lds
sub
fdivrl
je
ljmp
cmpsl
or
and
test
pop
push
push
out
movl
and
rclb
adc
xchg
shrl
mov
test
scas
sbb
in
mov
mov
push
mov
mov
or
popa
mov
inc
fimull
push
sub
jmp
orb
pop
jbe
test
push
rcl
push
pop
jo
adc
xchg
mov
movsl
cli
cmc
pop
add
mov
shlb
fwait
std
jb
mov
xor
rcll
sarb
popf
lea
into
or
aaa
hlt
pop
inc
xor
inc
movsl
scas
push
fbld
das
jecxz
push
ss
shlb
test
xlat
lea
jle
lcall
push
cmp
pop
jns
fnstenv
inc
cmpsb
adc
inc
pop
stos
ret
pop
mov
pop
insl
dec
sbb
add
cmp
pop
sub
xor
xor
jmp
adc
jae
dec
xchg
pop
push
jge
pop
push
add
push
xor
inc
cmp
iret
pop
add
addr16
ss
jp
inc
sbb
mov
repnz
mov
dec
cld
mov
imul
inc
inc
pop
dec
hlt
lods
dec
test
cmp
rcl
and
gs
cmpsl
mov
jge
nop
and
decb
cmpsb
sub
bound
enter
shrb
lods
xor
mov
push
lods
xor
subl
sub
xor
push
xor
movl
shl
movsl
mov
aas
repnz
jecxz
pop
push
xchg
loope
int3
in
in
fs
dec
bound
loop
mov
mov
jle
daa
lods
movb
lret
cmp
push
and
nop
inc
sarb
test
pop
add
adc
call
stc
lcall
dec
push
xchg
in
out
out
xchg
adc
cmpsb
push
adc
leave
sub
lret
pop
xchg
shl
xor
aas
les
jl
aad
std
push
test
out
mov
test
and
shlb
xchg
ss
cwtl
xchg
pop
mov
push
xchg
mov
lea
and
sbb
jno
jecxz
or
xchg
pop
cmpsb
mov
mov
sbb
xor
repnz
call
sbb
adc
cmp
or
and
or
cs
xor
and
mov
dec
hlt
jg
test
jbe
jae
cmpb
jmp
xor
or
add
loopne
fs
add
pushf
lahf
pop
xlat
lcall
lds
mov
je
stos
inc
jmp
mov
lock
or
cwtl
adc
inc
insl
mul
push
cmp
popf
fdiv
les
pop
cmp
cmp
xor
flds
push
mov
push
and
dec
xchg
stos
jb
insb
mov
push
mov
jl,pn
aaa
jge
xchg
or
and
clc
sbb
int3
mov
and
xor
cmp
xchg
inc
add
test
push
ret
popf
push
popa
sub
inc
inc
hlt
pop
pushf
pop
mov
pop
mov
add
dec
inc
pop
mov
fldt
jp
add
loope
xchg
popa
lcall
sbb
adc
cld
mov
cmpsl
pop
scas
stos
sti
mov
sbb
and
pop
sub
std
sub
loop
xchg
fisttpll
add
notl
adc
mov
mov
mov
adc
push
data16
jg
into
jne
push
daa
lock
arpl
push
fwait
add
jl
mov
lahf
clc
xor
or
mov
mov
call
fld
push
repz
adc
cltd
pop
pushl
sub
jo
imulb
out
inc
xchg
pop
and
test
icebp
iret
arpl
imul
inc
les
out
sti
pop
ffree
cmp
sbb
mov
mov
jno
add
data16
vorps
mov
cmp
orl
clc
push
imul
shrl
scas
punpckhdq
dec
mov
xorl
mov
and
push
xchg
fcoms
in
leave
in
lcall
xor
mov
es
cmpsl
mov
call
add
outsb
mov
and
cmp
rol
or
std
jb
sbb
addr16
in
sarl
mov
or
mov
popf
pushf
arpl
push
sub
imulb
xor
pop
dec
mov
sbb
and
sbb
gs
xchg
pop
inc
lods
jns
mov
mov
movsb
ret
cmpsb
dec
call
fwait
test
aaa
arpl
jl
mov
mov
and
int
mov
and
cmp
push
jp
fstl
arpl
adc
cmp
je
idivb
adc
scas
jecxz
test
sbb
loopne
scas
sahf
lahf
mov
fstl
sbb
cmc
fsts
and
pop
and
fldenv
and
cmp
xchg
mov
fsubrl
mov
adc
inc
xchg
mov
scas
mov
xlat
xorb
cmp
loop
in
mov
stos
rol
imul
dec
or
test
lds
flds
dec
adc
shll
inc
add
outsl
fnstcw
push
popa
aad
sarl
sub
push
movsb
add
and
adc
push
test
stos
inc
out
pop
jl
jmp
inc
out
ret
push
push
pop
push
mov
cmp
pop
sub
rorb
scas
xor
orl
cli
into
ja
frstor
jecxz
in
insb
cmp
sbb
fcoml
lcall
mov
inc
and
xchg
ljmp
dec
or
sbb
ret
dec
cld
inc
push
push
or
push
lcall
mov
out
inc
ja
in
fprem1
jmp
cmp
sbb
inc
inc
cwtl
jae
pop
cmpsl
dec
out
addr16
loop
add
mov
inc
add
mov
jp
aad
ja
repz
shll
in
sahf
out
decb
add
sbb
cs
add
jle
insb
sub
out
mov
jle
out
jge
lret
out
jmp
adc
nop
jo
mov
dec
das
pop
cmc
push
outsl
sub
add
adc
or
xchg
mov
mov
pusha
dec
int3
pop
mov
pushf
lea
push
xor
pop
das
push
dec
mov
repz
xlat
pop
cmp
pop
add
add
mov
sub
shrl
cmp
cmpsb
shl
insl
adc
lret
mov
jo
leave
mov
xchg
out
scas
adc
jno
and
dec
push
loop
sti
add
jle
sub
cs
xchg
lods
repz
add
stc
sbb
and
cld
xchg
stc
add
add
je
dec
movl
mov
mov
push
sub
pop
cld
mov
movsl
enter
test
push
push
sbb
nop
mov
inc
xor
xchg
mov
mov
adc
rclb
jge
push
iret
dec
out
lods
pushf
push
jmp
test
and
mov
outsl
xor
fists
ss
enter
test
dec
sahf
test
in
xor
ss
lcall
mull
mov
aas
push
fildll
jno
clc
call
je
sbbb
jle
fldt
std
ss
in
cmp
pop
lods
adc
iret
cmp
sbb
pusha
loope
es
dec
sahf
pop
mov
pushl
jl
in
push
outsb
mov
fwait
cmp
je
mov
pop
or
test
lret
sbb
in
fstpl
cmp
movsb
mov
sbb
shlb
icebp
fldt
lahf
cmp
jbe
push
iret
push
sbb
inc
test
push
xchg
in
xchg
and
stc
movsb
cmpsb
inc
pop
push
call
jo
jne
sahf
nop
dec
mov
fdivl
adc
fadds
xchg
ret
lock
shll
loop
sub
inc
rcll
lods
mov
or
mov
add
inc
adc
call
xor
mov
sahf
ret
push
call
mov
push
xchg
jns
dec
test
inc
sbb
nop
lods
sbb
out
mov
or
sbb
or
in
in
xor
adc
nop
mov
ds
xor
adc
test
or
enter
imul
sub
stos
repnz
in
mov
jnp
cmpsl
mov
pushf
mov
sbb
xor
and
xor
dec
xchg
ret
add
daa
dec
add
push
pop
jbe
xchg
das
pop
es
jecxz
sbb
insl
dec
ljmp
mov
dec
add
loop
lcall
test
mov
ret
mov
sub
ret
xor
jo
ret
push
movsb
test
xlat
pushl
ror
add
in
xchg
jb
lea
in
stos
add
xchg
aam
mov
js
jb
cmp
mov
in
jno
repz
push
cmpsb
inc
mov
mov
orb
leave
lret
xchg
cmp
adc
fmuls
xchg
sub
ss
ret
inc
xchg
mov
adc
dec
stos
fisttpl
ljmp
xor
inc
push
sbb
test
jno
hlt
inc
out
std
scas
mov
mov
adc
mov
in
cwtl
loopne
sbb
lods
jle
popf
pusha
stc
aam
lds
stos
jmp
loope
rcrl
mov
scas
or
adc
fists
repnz
arpl
push
sti
sub
imul
pop
movsb
push
sub
ret
lods
jl
rcll
lret
pop
jb
push
aad
or
repnz
in
mov
dec
adc
jb
cmp
dec
xchg
or
jns
test
sahf
sbb
imul
test
xor
xor
bound
or
push
inc
rolb
popa
jno
das
xchg
add
out
jge
das
addr16
jge
inc
mov
mov
xchg
xchg
mov
push
cmpsb
cs
add
sbb
fs
loope
in
pop
sahf
sbb
dec
push
pop
mov
pop
js
les
test
ja
divl
adc
xor
addr16
mov
and
loope
jo
and
mov
jno
or
cmpsl
adc
sbb
mov
lahf
push
sbb
xchg
sbb
call
push
jns
adc
mov
push
or
jnp
xor
xchg
mov
push
rorl
sub
jb
into
lods
jns
inc
sbb
cs
cltd
add
push
mov
shl
pop
push
lcall
int3
mov
aaa
les
shlb
sahf
loopne
mov
fucomp
inc
and
and
jne
adc
mov
dec
aaa
je
push
cmc
xor
leave
jp
cmp
sahf
xor
setle
cmovae
xorl
jne
xlat
js
movsl
fdivs
out
sub
arpl
mov
jmp
lds
push
out
pushf
dec
je
xchg
test
or
mov
inc
test
mov
dec
inc
dec
shll
sbb
add
cld
jmp
jp
mull
lahf
pop
and
std
xchg
pop
jo
mov
fnstcw
aaa
rcll
adc
cmp
xchg
add
cmp
mov
sti
outsb
lock
aas
in
orl
fcom
and
dec
addr16
cli
cmp
pop
mov
andl
in
lds
xchg
jae
or
sub
mov
nop
sub
sub
repz
or
outsb
jp
push
scas
inc
cmpsl
add
xor
dec
cmpsl
enter
out
mulb
push
sbb
leave
rol
sti
xchg
clc
sti
mov
mov
jae
xor
into
xor
jbe
sbb
pop
mov
lods
loop
mov
pop
xchg
scas
int3
repz
mov
lock
sbb
movsl
fsubr
leave
mov
pop
pop
stc
fs
and
test
push
rcrl
insb
cmpsb
mov
cmp
cmp
pop
bnd
push
enter
imul
cmp
out
mov
loopne
add
sub
sub
mov
jo
fwait
cs
aaa
xor
stc
pop
cs
arpl
outsl
outsb
mov
push
nop
push
loope
cltd
movsb
or
xchg
push
or
ret
test
test
mov
mov
adc
mov
pop
dec
push
mov
in
shlb
push
and
adc
mov
lods
mov
aas
xchg
bound
lret
cmp
les
fdivrs
dec
dec
xchg
fiaddl
pop
fwait
js
cld
movsl
stos
clc
xor
lds
and
lock
divl
fwait
and
sbb
jg
out
xor
xor
lcall
aam
loop
scas
add
sarl
loope
lret
pop
mov
cmp
mov
aas
js
push
add
out
jmp
xor
dec
std
jge
rcrl
or
add
cmp
mov
pusha
mov
mov
add
lea
jmp
jnp
inc
mov
bound
pop
add
loopne
mov
inc
ja
into
pop
pusha
pusha
pop
xor
cs
xchg
popa
pop
lahf
push
sbb
inc
sub
jp
ja
leave
lret
xor
or
jg
fdivs
inc
hlt
pop
sub
js
scas
dec
es
mov
cli
incb
pop
pusha
scas
and
mov
pop
or
push
nop
xor
pop
pop
pop
test
roll
jmp
in
jns
mov
push
loop
and
mov
jg
add
sbb
xchg
call
lcall
cs
push
imulb
loopne
jge
pmaxsw
cmpsb
into
mov
sub
or
xchg
jno
out
adc
movsl
aas
fwait
int3
cwtl
std
mov
sbb
xchg
fstpt
cltd
daa
in
sahf
xchg
jmp
add
clc
cs
jmp
das
pushf
stos
cld
xchg
pop
inc
ret
or
or
mov
inc
bound
jp
jg
outsb
subl
arpl
sub
movsl
jge
xlat
nop
lock
dec
xor
mov
mov
fisttpl
mov
mov
inc
jle
or
outsb
and
arpl
jge
gs
sub
das
push
mov
mov
jae
das
aaa
jb
ds
sbb
out
jmp
ret
sub
test
inc
into
push
bnd
pop
cmpl
xchg
in
mov
movsb
xchg
jnp
ds
loope
clc
outsl
xchg
mov
ret
cmp
xchg
adc
daa
fcoml
xchg
jge
mov
int
cmp
mov
pop
scas
cmpb
subl
inc
pop
pop
add
pusha
scas
push
lds
push
int
pushf
dec
stc
call
jle
sub
jecxz
xor
enter
mov
inc
jg
jae
xor
xor
fs
mov
adc
push
fimull
add
out
imul
cmc
push
or
cmc
iret
and
lods
jno
mov
shll
cmp
aaa
mov
ds
and
andb
mov
movsb
or
stos
mov
or
fistpll
cltd
pop
xchg
xchg
mov
cmpsl
xchg
pop
fistpll
lods
adc
adc
adc
jmp
sub
fwait
push
mov
or
cmp
ljmp
nop
roll
inc
cld
dec
pop
xor
ret
pusha
cltd
ljmp
stos
pop
sti
enter
imul
push
pop
call
sub
xlat
xchg
jno
pop
mov
adc
pop
mov
stos
addb
lds
jo
cmp
int
cwtl
or
or
and
arpl
nop
xor
lock
fisubrs
sarl
iret
test
test
mov
test
ret
adc
xchg
aad
daa
dec
jge
dec
loopne
and
or
xchg
lret
and
fiadds
in
mov
pop
push
out
sbb
negl
lret
icebp
int
cmovg
push
out
rcl
out
mov
push
in
jl
stc
add
ja
mov
mov
pop
mov
add
testl
xorb
out
push
out
in
imul
sbb
add
imul
mov
xlat
jne
addr16
call
mov
hlt
mov
adc
daa
dec
xchg
pop
flds
xor
jns
or
orl
jp
in
pop
or
push
fs
xchg
shll
jle
pop
movsl
loopne
inc
mulb
push
sbb
push
adc
or
jg,pt
pop
fucomip
mul
bound
imul
sbb
addr16
aaa
aas
mov
les
push
jbe
fs
dec
jg
inc
mov
push
jns
push
mov
or
fadds
push
fidivl
push
cmp
test
mov
cmp
fisttpll
jle
rcrb
pop
inc
imul
sbb
iret
jnp
push
out
or
movsb
xchg
pusha
sbb
push
insl
ja
inc
xchg
mov
lock
movsl
iret
xchg
push
lods
lret
push
imul
imul
movsb
testl
jo
scas
out
mov
fwait
cmpsb
scas
xchg
js
lods
mov
and
or
out
push
jecxz
inc
cmpsb
sbb
cmovle
lret
dec
fsubl
loop
fcmovbe
fsts
loop
mov
insb
adc
mov
test
repnz
popa
sti
es
fwait
jle
js
icebp
and
incb
cmp
das
fisttpl
and
outsb
add
jo
and
dec
cli
iret
cwtl
mov
lcall
insb
movl
xchg
push
daa
and
cmp
mov
push
mov
add
int
mov
mov
xchg
or
mov
xor
mov
jge
and
aas
dec
pop
scas
movsl
in
test
push
shlb
cmp
jp
iret
das
pop
jl
stos
mov
mov
movsb
mov
jns
push
adc
cli
rep
fnstsw
lcall
mov
test
js
jmp
mov
gs
jbe
scas
jmp
stc
out
xchg
xchg
adc
sti
push
jns
popf
cmpsb
dec
push
int
outsb
addr16
clc
and
sarb
sbb
rcr
sarb
pop
je
jp
mov
jbe
push
jmp
push
scas
inc
mov
xor
jp
xor
xchg
sbb
imul
jb
cmpsb
push
call
inc
rcrb
xor
push
sbb
insb
ret
ret
iret
mov
ja
fisubl
imul
mov
mov
fstpl
es
mov
inc
cmp
push
pushf
sbb
fnstenv
stc
in
int
inc
jno
ja
mov
cmp
and
fisttpl
repnz
or
cmp
push
cmp
push
fistpl
xchg
aaa
and
scas
mov
lret
outsb
lea
fsubr
loop
and
std
std
imul
sbb
pop
lods
in
mov
mov
sub
xchg
cmp
mov
jne
fwait
push
xor
sahf
stos
sub
test
pop
or
sub
aad
inc
lcall
inc
ds
mov
inc
or
aaa
mov
loop
sahf
add
adc
xchg
mov
in
jno
clc
cmp
arpl
jae
push
cmp
cmc
xchg
adc
test
add
test
cmpl
inc
inc
clc
subb
adc
mov
push
mov
and
dec
xorl
les
push
movsl
outsl
imul
fbld
dec
leave
cltd
lea
movsl
mov
cmpsl
frstor
xor
test
cmpsl
pop
mov
xor
mov
dec
test
inc
jmp
xor
fsubr
scas
dec
lods
add
or
in
xchg
icebp
imul
jl
icebp
xor
iret
ja
inc
and
movl
sbb
push
xchg
outsl
inc
pop
inc
mov
inc
or
testl
out
and
mov
fcomps
xor
lret
stc
je
pop
xchg
test
jg
cmp
mov
mov
orl
shll
test
jecxz
rorl
pop
cmc
cld
data16
enter
xor
out
mov
loope
xor
lret
loop
pop
sahf
sbb
fisubs
adc
and
sub
ficomps
add
scas
mov
fcmovnb
mov
push
lret
cmp
jp
cwtl
jb
mov
sbb
in
jo
fdivrs
fs
or
or
aas
cwtl
int3
mov
out
push
push
fs
fbstp
loope
sbb
out
cmc
bswap
dec
jbe
add
addr16
mov
icebp
test
movsl
pop
stos
not
add
mov
aad
lods
cmp
lock
xchg
adc
fdiv
jmp
insb
leave
scas
mov
add
push
xchg
loope
cld
popf
jne
push
and
push
and
dec
divb
fs
idiv
jne
aam
adc
cmc
xor
mov
dec
clc
jnp
aad
pop
sahf
stos
mov
xchg
xor
notb
pop
dec
fstpl
hlt
cs
push
add
cmc
ret
out
or
xchg
xchg
repnz
iret
shlb
test
or
inc
addr16
bound
fwait
leave
mov
and
mov
ss
and
xchg
inc
mov
hlt
negl
out
cmp
dec
les
insb
test
and
ret
call
testb
inc
in
test
ficoms
jns
mov
mov
push
inc
cmp
nop
ret
cmp
mov
cmp
inc
cmp
aaa
pop
fwait
sub
push
in
addb
jns
and
and
movsl
xchg
mov
and
mov
lret
mov
sub
scas
xor
ljmp
mov
jae
clc
mov
push
and
out
addr16
sbb
aas
int
sbb
pop
and
call
inc
popf
idiv
push
or
xchg
and
xlat
fcmovu
je
add
lea
cmp
and
in
push
and
mov
jne
loope
mov
xchg
jg
xor
imul
imul
add
movsb
stc
mov
in
divl
in
bound
sbb
mov
popa
add
pusha
jnp
push
fcmovb
add
jo
stos
in
test
fdivrs
mov
inc
das
pop
mov
mov
push
adc
inc
lret
xchg
sub
test
sub
mov
fdivs
cli
rcrl
push
and
lods
mov
aaa
pop
mov
ds
dec
sbb
xor
cmp
mov
shr
push
fs
mov
cltd
scas
sbb
push
rcl
jecxz
push
cmc
fldt
add
pusha
aaa
insb
in
sti
sarb
dec
push
jecxz
mov
dec
sbb
and
pop
dec
addr16
lret
das
or
inc
ds
jg
aaa
cmc
xchg
sti
pop
std
dec
es
sbb
mov
sub
inc
lret
sub
nop
jle
adc
or
dec
push
mov
mov
aas
or
xor
iret
jb
fwait
rol
xchg
aam
sub
jl
adc
add
lods
mov
xchg
data16
inc
and
xchg
out
dec
push
add
sbb
fists
jae
cmp
das
sbb
jp
sub
push
rorl
cmp
jg
jae
fdivrs
xor
lods
cmp
mov
pop
pop
add
cmp
mov
loop
cmpsb
pop
mov
dec
aas
fisttps
jne
pusha
inc
stos
add
pop
lret
pop
jo
pop
fistl
shrb
cltd
dec
leave
mov
or
pop
and
sahf
leave
mov
lcall
fstpl
add
pop
in
lea
fmul
mov
mov
subb
xor
push
leave
pop
add
cld
or
out
lods
mov
int3
dec
mov
mov
stc
jp
mov
test
mov
fsubl
mov
inc
leave
xchg
mov
jo
lcall
cmp
pop
test
ljmp
popa
mov
lcall
and
inc
adc
cld
adc
pop
ret
scas
lahf
jne
or
jo
xchg
jmp
sbb
fbld
sub
fistl
mov
dec
in
lds
nop
or
add
push
pushf
or
sti
lds
cmpsb
pop
lret
data16
push
popa
negb
push
mov
jae
aaa
popf
jmp
fldenv
mov
xlat
aad
jl
enter
daa
push
sarl
push
push
pusha
cmp
push
mov
adc
add
aas
inc
sub
inc
out
or
fwait
cli
mov
sub
mov
sbb
dec
sub
push
fsubrs
mov
pusha
cld
ffree
adc
pop
mov
jmp
ja
stos
dec
loope
dec
and
xchg
and
xchg
ret
fxch
pushf
mov
push
arpl
shr
popa
js
loop
int
jecxz
loope
jge
daa
dec
adc
testb
sahf
loope
ds
push
or
or
jecxz
imul
add
mov
and
iret
sub
sub
test
mov
testl
test
mov
test
pop
dec
ja
fnstsw
gs
mov
mov
sub
pop
sbb
mov
int
test
xorl
testb
punpckhwd
dec
loope
fadds
shrl
mov
ret
test
ror
mov
xchg
push
lret
cli
mov
adc
dec
pop
fdivr
add
cmp
xchg
mov
jg
pop
jp
ret
dec
dec
xchg
subl
and
icebp
inc
in
lds
and
add
sti
shlb
xor
insl
hlt
dec
xchg
mov
ficomps
out
dec
ljmp
xchg
iret
test
lock
inc
shll
scas
sub
ret
mov
fdivrs
scas
cmp
iret
lea
mov
cmp
dec
cltd
fwait
dec
inc
notb
cs
call
push
mov
mov
mov
das
insb
xchg
pushf
outsb
mov
jp
push
adc
or
sti
push
push
cli
push
xchg
decb
pop
dec
and
add
jle
xor
mov
mov
inc
xor
or
and
aaa
sbb
xchg
sahf
add
pop
sbb
dec
pop
mov
subb
mov
mov
pushf
stc
inc
out
cwtl
xchg
punpckhdq
mov
dec
dec
lcall
cs
inc
lock
stos
lret
repnz
dec
and
inc
mov
mov
sbb
mov
in
dec
pop
push
adc
lcall
popf
lret
stc
inc
gs
pop
mov
out
test
xchg
in
mov
sub
cmc
xor
mov
aad
cmp
imul
pop
scas
jp
mov
and
ds
mov
stos
jne
xlat
outsl
aaa
inc
or
mov
adc
inc
jmp
mov
in
mov
out
adc
jmp
mov
js
leave
push
lock
xchg
rolb
jmp
shrb
in
mov
loop
fcmovnbe
or
or
pop
ret
lcall
add
outsb
leave
inc
loopne
inc
adc
jecxz
nop
clc
pmaddwd
xor
push
mov
sub
das
jmp
fidivrl
jp
mov
jmp
cmp
addr16
test
mov
andb
pop
addb
sbb
lock
lcall
js
in
jno
jl
pushf
lods
in
mov
nop
jns
sbbl
repz
mov
adc
cltd
testl
test
mov
out
out
in
out
and
pop
or
sarb
dec
xchg
pop
gs
test
outsb
out
out
inc
mov
pop
into
js
stos
dec
adc
or
pushf
divl
insb
add
mov
pop
test
jns
xchg
push
jo
mov
adc
jne
scas
into
rclb
xchg
cmp
mov
lods
mov
pminsw
in
pushf
lcall
mov
stos
push
cmp
jae
fmul
and
lock
jbe
jp
popa
sub
aas
jb
jg
std
ja
shlb
mov
or
shrl
fs
mov
enter
xor
cmp
push
clc
jns
pop
adc
sub
xchg
int3
lods
les
sbb
push
jl
push
icebp
lods
mov
add
xchg
pusha
mov
fsubrl
jge
jle
sbb
cmpsl
popa
aad
push
mov
sbb
dec
int3
jmp
dec
push
gs
sahf
call
and
es
dec
mov
enter
andb
add
js,pt
inc
outsl
dec
shrl
dec
push
pushf
fxam
push
fdivrs
mov
mov
dec
inc
lret
pushf
jbe
mov
inc
test
sub
sub
add
int
jo
xor
mov
daa
sbb
and
in
jmp
pop
imul
mov
loopne
lds
add
int3
adc
sbb
mov
insl
pusha
sar
xchg
cs
int3
mov
aaa
mov
daa
pop
leave
xchg
sub
cmp
sbb
xchg
push
in
out
push
addr16
dec
daa
add
inc
mov
loopne
sbb
int
cmpsl
and
mov
inc
inc
xchg
daa
iret
and
inc
sbb
into
adcl
mulb
aaa
int3
adc
xor
cmp
enter
cwtl
dec
inc
mov
lods
sub
arpl
mov
imul
sub
fstps
jns
cmp
sub
xchg
test
fisubl
bnd
test
cmpsl
add
add
testb
std
fcompl
test
jbe
lcall
clc
and
sbb
pop
mov
or
dec
sub
mov
jl
jecxz
loopne
nop
inc
or
sahf
pop
mov
or
jmp
rcrb
daa
in
inc
sub
add
test
adc
out
mov
pusha
mov
aaa
clc
or
sub
es
mov
dec
add
cli
push
pusha
loope
sub
xor
xchg
inc
rolb
clc
popf
or
inc
lds
test
hlt
xchg
enter
and
out
inc
in
and
outsb
pop
gs
fstpt
xchg
outsb
mov
in
cmp
mov
add
inc
enter
enter
xor
test
dec
push
loope
into
inc
sbb
jp
scas
pop
xchg
repz
scas
sarl
add
mov
test
mov
sub
aam
jnp
sbb
pop
jecxz
repz
rorl
repz
mov
test
scas
cmc
mov
lahf
push
or
pop
js
xchg
sbb
dec
cmp
cltd
out
jmp
dec
sub
bound
daa
out
in
dec
ficoml
fwait
cmp
imul
mov
mov
adc
dec
cvtps2pd
rol
rcll
into
in
xchg
and
jecxz
pop
enter
orb
arpl
mov
cld
lods
mov
xchg
mov
es
xor
xor
cld
inc
pop
into
add
mov
add
cmp
andl
dec
ret
inc
jne
xor
lock
or
xchg
inc
pop
mov
sbb
dec
fwait
xchg
xchg
add
push
pop
out
add
sub
dec
dec
pusha
cwtl
push
pop
jge
fadds
or
xor
inc
jb
sahf
dec
nop
mov
bound
sti
sbb
in
adc
mov
or
rol
push
fdivl
aam
sarb
out
lret
mov
and
lea
mov
mov
in
cmpb
hlt
inc
dec
inc
loopne
mov
pop
xchg
adc
mov
push
sbb
pop
push
pop
sub
in
sbb
das
pop
cmpsl
mov
into
imul
lahf
lcall
hlt
js
xchg
inc
mov
lahf
andb
adc
pop
adc
imul
adc
add
pop
inc
enter
dec
pop
jo
jne
loop
adc
mov
rorl
cmp
stos
imulb
pusha
ss
inc
les
mov
loop
jmp
ljmp
leave
stos
cli
mulb
cli
or
push
addr16
push
imul
push
adc
mov
cmp
xor
les
adc
xlat
mov
mov
test
sub
lods
cmp
insl
pop
cmc
xchg
leave
sarl
in
scas
mov
jle
sbb
inc
push
fimuls
or
rcr
inc
jno
cmp
add
jnp
xchg
test
pop
inc
hlt
jg
nop
cmp
cmp
out
popf
mov
jno
pop
push
rcrb
jnp
cmp
out
lock
push
loopne
fstp
popa
popa
out
ret
add
sub
pop
out
push
insl
cmpsb
lods
mov
pop
lods
add
add
or
mov
add
sub
mov
in
fisubrl
test
inc
pop
fistl
or
and
repnz
cmp
mov
insb
outsl
out
pop
cwtl
or
xchg
mov
imul
pushf
mov
call
stos
test
add
jle
sar
mov
out
sahf
sub
or
pop
xor
scas
mov
test
cmc
cmp
inc
pop
test
jbe
adc
jnp
or
add
push
bound
xchg
bound
pop
in
push
insl
jle
sbb
fists
test
mov
aas
add
lods
jmp
pop
enter
add
inc
cmpb
inc
mov
lock
push
out
and
mov
mov
jno
push
mov
aas
push
dec
rol
inc
je
and
dec
or
repz
stc
fdivl
stc
insb
xchg
sub
push
xchg
pushf
mov
pop
or
fwait
ds
mov
mov
mov
jmp
jne
cwtl
add
jmp
das
dec
inc
push
jp
inc
ss
leave
mov
mov
ss
aad
xchg
dec
test
push
add
mov
loope
enter
aaa
and
mov
cwtl
iret
aaa
test
test
mov
stc
lods
fs
lcall
pop
sbb
movsl
repz
imul
je
sti
xorb
pop
loopne
mov
aas
mov
sbb
rcr
jo
xchg
sub
push
add
mov
cmp
popf
rcl
mov
test
mov
lods
mov
jmp
je
bound
jle
cmp
popf
push
pop
jle
xchg
xor
insb
xchg
xor
std
cltd
dec
aas
inc
sbb
cmp
hlt
jno
mov
mov
mov
jmp
inc
int
bound
mov
and
or
adcb
cwtl
hlt
dec
movsb
jle
mov
pop
dec
push
or
sbb
hlt
ret
pop
mov
out
incb
or
add
loopne
jbe
mov
lret
scas
sub
scas
add
pusha
xlat
mov
inc
in
xchg
or
sub
loop
mov
push
pop
pop
jne
adc
stos
sub
xchg
clc
mov
or
adc
nop
test
jno
int3
in
pop
jae
sbbl
outsb
pop
and
or
xchg
fs
xchg
push
sbb
repnz
dec
xchg
clc
pop
adc
jb
sbb
mov
pushf
inc
pop
inc
mov
and
and
push
out
or
inc
cld
xchg
lods
mov
pop
outsl
repnz
jnp
cmpl
or
daa
je
pop
mov
inc
movsb
adc
push
sub
sbb
daa
sbb
and
mov
mov
jb
rorb
mov
mov
pop
xor
xor
ret
and
sahf
fidivrl
psubusb
fmulp
clc
and
out
sub
fisttpl
lock
mov
inc
push
scas
sbb
mov
imul
leave
arpl
test
dec
movsb
add
mov
rcr
mov
jno
test
loope
repz
imul
push
mov
shrb
cmpsb
pushf
push
aaa
and
pop
aam
xor
cwtl
add
arpl
sub
jns
inc
dec
mov
arpl
popf
sbb
or
call
lahf
gs
fcom
xlat
and
jmp
push
and
or
and
cmp
mov
out
pop
test
jl
out
or
xor
inc
sti
mov
inc
mov
and
fcomps
shlb
push
sub
xchg
jge
pop
jle
sbb
mov
sub
fdivrs
lret
rcrb
sbb
cmp
sti
fcmovne
pushf
lret
push
mov
pop
xchg
mov
out
stos
imul
pop
add
leave
push
fbstp
scas
mov
mov
jg
pop
popf
js
push
inc
sahf
ror
int3
loope
and
addr16
test
push
push
jp
test
mov
sti
mov
sbb
and
fisttps
ljmp
and
js
mov
cmp
and
add
std
cmp
out
mov
push
mov
leave
jecxz
repnz
or
icebp
nop
mov
clc
inc
pop
pop
adc
ja
div
sbb
add
sbbb
clc
lret
insl
mov
call
pop
das
sbb
pop
mov
outsb
add
jg
jge
sub
repnz
cmp
mov
les
inc
mov
jo
lahf
in
push
cmpsl
pop
pop
dec
mov
pop
sbb
inc
sarb
lcall
pop
pop
mov
mov
outsl
xchg
push
push
test
push
xchg
inc
je
xor
sbb
xor
fs
mov
or
cmc
out
cmp
sub
mov
and
leave
dec
out
mov
popa
pusha
cmpsb
xchg
cmp
jnp
call
jle
mov
xchg
stos
adc
inc
jno
shr
push
mov
xchg
ret
repnz
bound
push
ror
sub
jae
je
fiadds
or
in
sub
and
xchg
mov
lea
mov
push
mov
or
and
adc
mov
cmp
xchg
mov
pop
mov
cld
jge
xchg
lcall
adc
cmp
sbb
cmp
cmpsl
aam
test
pop
shrl
cmpsl
leave
es
sbb
cmp
jne
jae
daa
push
or
push
out
ret
xor
dec
push
lods
inc
ja
mov
aad
cmp
jno
pusha
iret
mov
pop
sti
xor
jmp
aad
hlt
lock
cld
pop
es
mov
arpl
xchg
ds
push
mov
xor
mov
cmp
pop
jl
sbb
test
into
lea
and
mov
shlb
pop
xor
lds
pop
sbb
ret
inc
loope
test
jle
xor
and
aas
xor
ret
or
adc
or
inc
cltd
sete
shll
ret
movsl
lods
es
in
inc
pop
or
movl
fldt
test
cli
mov
cmc
sub
insb
jns
xchg
lods
jae
stos
into
sbb
push
mov
xchg
mov
jno
sub
xor
divb
stmxcsr
scas
jmp
xchg
iret
or
movsb
cmp
pop
xor
push
dec
fdivrp
lods
pop
adc
out
cld
mov
jg
dec
testl
xor
mov
jno
sub
or
and
bound
dec
arpl
mov
pop
or
push
lock
inc
scas
pop
addr16
and
mov
sbb
loope
mov
and
cmc
mov
sub
sti
xchg
add
inc
je
movsb
fmull
inc
neg
adc
cltd
cmpsb
lcall
aad
jle
cmc
xchg
mov
jb
or
leave
mov
xor
mov
adc
lret
cli
add
outsb
ret
xor
sub
and
xchg
xor
jne
mov
in
pop
loope
or
dec
div
pop
popa
adc
movb
sub
sub
cltd
push
gs
cltd
dec
jae
or
in
push
adc
jl
mov
ja
xor
jmp
or
push
cmp
xchg
inc
sti
je
int
push
mov
sbb
mov
loopne
les
cmp
out
mov
leave
mov
jnp
and
xchg
jo
rorb
sub
jecxz
daa
mov
xchg
data16
dec
push
push
cmp
push
dec
cmp
test
push
mov
mov
fwait
mov
syscall
mov
mov
loopne
pop
inc
xor
jns
add
fbld
enter
push
jne
sti
cmp
or
fdivrl
setle
sub
jp
int3
rorb
mov
insl
mov
sarl
dec
adc
adc
mov
pop
clc
out
popa
inc
push
lea
pusha
and
shlb
jle,pt
push
pop
xor
cmp
lea
or
xchg
mov
ljmp
out
mov
adcb
mov
xchg
xor
lret
loop
dec
add
inc
je
push
xchg
fidivrs
or
pop
fsubrp
mov
aas
mov
incl
mov
lea
dec
stos
jae
jg
mov
out
scas
idivl
add
sar
cmp
popa
outsl
sub
adc
aas
hlt
inc
adc
sub
xor
jmp
cmpsb
out
in
inc
cmp
lret
jle
out
roll
mov
mov
aaa
inc
ret
jl
add
xchg
mov
add
add
sub
pop
adc
mov
fwait
sbb
imul
jno
or
movsl
arpl
int3
push
jg
mov
adc
cmc
imul
idiv
cmp
cmpsb
and
adc
call
and
lret
arpl
dec
cmpsb
mov
into
cmp
popa
push
or
jmp
incb
xchg
out
ficomps
leave
or
ret
test
shll
sahf
push
mov
leave
stos
adc
inc
xchg
lcall
add
dec
inc
int
fcomi
das
shl
and
fwait
scas
mov
cmpl
jae
adc
lock
inc
xor
cmp
push
pop
icebp
inc
jae
comiss
push
dec
cmpb
aam
shl
push
cmp
push
jb
xor
or
mov
ljmp
adc
sti
jmp
xor
insb
inc
mov
dec
out
add
xor
fstps
jns
and
lret
jecxz
nop
aas
jo
mov
sbb
sub
idivb
jmp
mov
xchg
jecxz
in
add
fidivrl
pusha
or
dec
add
mov
or
and
lahf
incb
fwait
or
cwtl
mov
jl
sarl
pop
sub
xchg
je
jb
in
xchg
rcr
rcll
stos
into
gs
in
pop
inc
adc
xchg
cmpsb
add
adc
cmpsl
mov
push
lcall
jnp
fbstp
leave
jnp
mov
data16
imul
lahf
mov
clc
sbb
loop
add
cld
sbb
dec
jnp
and
lahf
sbb
addl
push
movsl
cmc
popa
push
push
ss
or
mov
roll
push
fld1
inc
inc
inc
shrl
push
negl
testb
cmc
push
lods
and
fadds
stos
inc
sbb
xchg
fsqrt
dec
and
sbb
pop
movsl
or
mov
mov
inc
cs
movsl
in
adc
repz
mov
cmp
cmpsb
mov
call
dec
hlt
xor
xchg
sbb
int3
lock
or
inc
fimull
sbbb
fmuls
or
dec
outsl
or
filds
iret
and
leave
xchg
inc
cmp
adc
mov
mov
add
push
sahf
jb
enter
rorb
iret
js
fimull
xor
push
test
mov
and
aam
repz
mov
pop
pop
aas
cmp
pushf
ficompl
pusha
xor
addb
iret
adc
sub
sbb
jle
rolb
cltd
in
subb
ljmp
outsb
and
sbb
imul
fdivr
loopne
test
pushf
ljmp
das
add
outsl
and
clc
sub
loop
push
dec
movsl
lds
pop
cs
cmpsl
jns
push
stc
mov
xor
and
xorl
jg
pop
jg
push
fs
fwait
push
pop
lock
test
jno
xchg
dec
push
mov
pop
popf
test
adc
inc
scas
xor
mov
scas
xor
mov
xorb
xchg
jne
cmpsl
jmp
sub
mov
push
adc
rcl
decb
sub
pop
in
mov
xchg
and
cld
or
fisubrs
ja
pop
jb,pt
dec
lret
jmp
rclb
pop
and
in
fwait
aam
mov
sub
mov
xchg
xchg
addr16
inc
lods
movsb
lock
adc
fstl
test
push
loop
jle
lea
mov
add
aam
loop
enter
hlt
jle
mov
mov
aam
int3
mov
mov
mov
mov
gs
mov
stc
stc
push
push
cwtl
fidivrl
test
dec
mov
cmp
in
jle
enter
cwtl
push
aas
fwait
repnz
pop
outsl
mov
lcall
addr16
mov
rcr
add
aas
out
mov
rcrb
push
icebp
pop
inc
fdivrl
lods
mov
int3
push
jbe
gs
rorl
inc
aas
lret
xchg
je
int3
out
push
pop
adc
in
ret
jg
mov
fstpl
loopne
mov
out
ds
pop
adc
lods
dec
xchg
ret
pop
sub
nop
mov
imul
fs
pextrw
adc
pop
jl
jne
jecxz
incl
ja
movsb
stos
pop
ret
xor
cltd
pop
lods
jb
inc
sbb
shrb
push
add
jge
loopne
adc
subb
rorb
or
ds
and
add
popf
jb
jno
jl
dec
aam
test
addr16
push
pop
shll
inc
test
inc
fists
xchg
inc
lods
add
lret
test
add
dec
mov
js
jge
divl
in
mov
loop
movsl
add
xchg
xchg
xor
je
inc
xor
lods
inc
add
lock
adc
sub
jl
call
jge
aas
mov
arpl
aad
in
pop
jmp
push
push
leave
inc
cmp
mov
in
sub
pop
push
sub
push
pushf
inc
arpl
arpl
sub
je
xchg
sbbb
mov
pop
in
sbb
insl
add
or
jnp
cltd
pop
push
test
fmulp
inc
inc
in
xor
push
loope
ret
mov
xor
sub
add
xor
and
cli
mov
adc
mov
adc
mov
into
inc
stos
push
xor
test
les
rcrl
cmp
or
and
jb
dec
outsb
js
push
rcll
in
push
lret
out
mov
mov
push
arpl
push
imul
cmp
xchg
jp
xchg
add
xor
fidivrl
sub
mov
test
push
sbb
lods
jbe
fcompl
imul
push
jge
push
movsb
push
xor
inc
popa
push
leave
cli
adc
aam
push
pusha
mov
push
jne
sub
inc
push
push
push
pusha
andb
std
jae
sub
jmp
ja
mov
psubsb
leave
mov
and
addb
adc
test
push
hlt
neg
shlb
xchg
std
je
inc
int3
fdivrl
sti
xchg
popa
aam
xor
dec
es
dec
mov
fcomps
fnclex
push
sub
dec
lea
push
leave
mov
out
mov
outsb
sbb
push
stos
jo
or
push
aaa
in
sbb
std
cmp
cmpsl
popa
lea
mov
cs
nop
pop
cwtl
sbb
mov
gs
out
push
mov
dec
sbb
mov
lods
test
in
push
mov
mov
shlb
fxch
push
ud0
cmp
cwtl
icebp
cmp
sbb
or
cmp
mov
jmp
fldenv
push
cmp
cmp
popa
shl
out
testl
and
adc
add
movsl
push
push
ljmp
sub
std
and
data16
dec
sahf
xchg
pop
adc
data16
or
nop
inc
hlt
mov
pop
adc
roll
dec
es
or
fmuls
dec
mov
cmp
test
adc
or
sti
dec
icebp
outsb
mov
push
lea
orl
mov
sub
mov
testl
repnz
push
aad
inc
add
lock
pop
insb
mov
rcl
ja
jno
sub
sub
add
gs
pop
orb
adc
insb
pop
repnz
loopne
cli
cmp
aam
dec
jno
jl
fsub
jnp
call
mov
mov
xor
fwait
insb
jmp
mov
out
cltd
jb
inc
dec
inc
es
movsl
and
jns
scas
inc
adc
push
mov
ficompl
pop
mov
or
xchg
push
mov
mov
cmpsl
pop
adc
movsb
dec
mov
mov
mov
cli
dec
leave
or
dec
jne
xchg
adc
push
test
shrl
test
add
xchg
or
loope
shrb
or
popl
popa
cmp
dec
repnz
ss
ds
aad
popl
sbb
movsb
jl
scas
xchg
dec
push
es
outsl
adc
sbb
mov
adc
cmp
jmp
xchg
fidivs
pop
xor
and
and
negb
hlt
scas
xor
in
out
repz
add
sbb
dec
ljmp
and
inc
ja
mov
dec
fwait
sti
and
rcrl
loopne
int3
in
loopne
call
adc
imul
pop
jbe
lret
dec
pop
adc
insl
mov
imul
fldenv
cltd
rorl
out
add
negb
pop
mov
or
mov
insb
or
dec
hlt
dec
gs
mov
fdivrs
mov
dec
scas
dec
lret
jle
adc
jno
or
sub
and
out
scas
roll
adc
add
popa
push
xor
imul
xor
push
lock
push
pop
aaa
in
jmp
inc
cmp
jecxz
jnp
pop
push
and
les
neg
loopne
mov
scas
cs
inc
ret
dec
push
mov
push
sbb
mov
popf
sbb
shr
test
ficoml
test
in
mov
orl
adc
push
outsl
add
stos
mov
push
inc
mov
leave
popa
cwtl
pop
inc
jecxz
add
iret
fistpl
dec
rcrl
inc
and
loopne
aam
lock
mov
xchg
push
stc
mov
mov
cmp
jle
mov
mov
into
movsb
sbb
push
push
mov
dec
pop
testb
incl
add
mov
imul
movzbl
mov
inc
xchg
imul
inc
mov
inc
xor
mov
xor
inc
inc
inc
movsbl
add
dec
jne
inc
mov
mov
mov
pop
movzwl
mov
pop
add
lea
pop
dec
inc
lea
or
imul
inc
lea
inc
mov
or
dec
add
ret
push
push
movswl
xor
push
dec
sub
sub
add
movswl
sub
push
sub
inc
add
add
push
dec
mov
add
dec
mov
lea
dec
push
dec
mov
dec
push
movzbl
imul
xor
mov
inc
push
dec
imul
push
imul
imul
pushl
mov
call
lea
add
inc
inc
add
mov
inc
movzbl
sub
pop
ret
dec
inc
sub
cmp
jb
imul
xor
imul
lea
mov
dec
inc
mov
mov
dec
inc
dec
dec
sub
dec
inc
dec
mov
inc
lea
cmp
jb
pop
add
inc
dec
dec
imul
add
sub
movzbl
and
add
dec
imul
xor
inc
lea
xor
add
mov
sub
add
test
jbe
mov
inc
add
lea
add
inc
add
mov
add
inc
inc
add
and
movsbl
dec
mov
inc
inc
movzbl
inc
add
dec
and
imul
movzbl
mov
dec
mov
dec
sub
mov
mov
inc
mov
inc
inc
movswl
dec
dec
lea
dec
jne
sub
mov
xor
xor
dec
mov
inc
mov
mov
movzbl
mov
mov
lea
mov
or
mov
mov
mov
movzwl
inc
mov
movzwl
inc
test
jbe
dec
add
dec
add
lea
mov
sub
inc
dec
sub
or
inc
inc
mov
mov
inc
sub
dec
add
mov
xor
xor
and
movswl
xor
mov
dec
mov
movzbl
sub
mov
add
movsbl
sub
and
inc
mov
mov
dec
imul
movzbl
mov
inc
mov
imul
mov
mov
movsbl
or
movzbl
mov
movzbl
add
add
jmp
push
mov
dec
mov
add
inc
xor
inc
movsbl
dec
dec
and
mov
or
add
dec
or
inc
movsbl
mov
inc
lea
dec
lea
mov
lea
add
and
add
imul
imul
inc
lea
or
mov
dec
mov
mov
imul
add
cmp
je
add
lea
movzbl
push
mov
call
call
imul
mov
call
call
inc
mov
movzbl
sub
add
inc
inc
ret
sub
mov
pop
imul
ret
push
dec
mov
add
sub
sub
push
mov
movsbl
push
inc
push
imul
push
sub
or
add
inc
dec
call
inc
push
lea
mov
xor
sub
sub
dec
neg
sub
mov
add
inc
dec
inc
mov
imul
mov
mov
inc
inc
inc
sub
movzbl
dec
je
sub
mov
or
mov
lea
add
mov
lea
inc
imul
inc
repnz
lea
sub
add
dec
jmp
inc
mov
inc
mov
add
mov
mov
add
add
mov
imul
sub
mov
mov
jmp
pushw
sbb
fs
test
inc
sub
dec
iret
mov
cld
mov
inc
dec
push
inc
push
fwait
xor
pop
out
ja
test
fldl2e
or
mov
inc
xchg
inc
ficoms
mov
xchg
jl
mov
shll
cmpl
icebp
sti
jnp
sbb
clc
lods
mov
sub
call
pop
adc
cli
testb
mov
sbb
imul
js
repz
jno
cmp
push
inc
das
push
ret
xor
xor
mov
fwait
inc
push
icebp
cmp
sbb
xchg
sub
pushf
iret
repnz
dec
sub
in
fcomip
outsb
mov
mov
jae
or
pusha
xchg
sub
je
xchg
push
cltd
lock
mov
mov
dec
pop
sub
inc
fildll
push
push
rep
punpckhwd
into
sub
cwtl
cmp
shrl
cmpsb
out
lods
pusha
mov
mov
jbe
xchg
jo
testl
movsl
fidivrs
mov
arpl
pop
enter
xchg
arpl
mov
adc
add
scas
lea
insb
or
push
pop
insb
mov
shl
popa
sbb
or
shrl
and
in
imul
xor
sub
call
and
mov
xchg
or
push
adc
call
test
adc
lods
sti
sti
pusha
movsb
jge
mov
imul
sub
xor
rcrb
cmp
pop
imul
cmp
mov
mov
rcrl
cld
jo
in
in
in
dec
sbb
mov
jg
aas
xor
inc
test
push
js
mov
dec
dec
arpl
xchg
inc
push
pusha
cld
inc
xchg
adc
bound
or
xlat
push
inc
pushf
shr
fucom
push
js
cmp
dec
and
imul
es
ficoml
mov
inc
xor
mov
and
aam
or
popa
xor
push
in
shrl
pop
sub
jb
mov
stc
push
in
inc
bound
addb
push
push
inc
push
out
arpl
jno
test
sbb
sub
sbb
jmp
insl
test
cmc
lds
lahf
andl
fbld
mov
mov
cli
push
mov
jb
clc
sbb
jbe
out
aam
cmp
or
notl
fs
lahf
or
fwait
enter
jmp
mov
mov
sarb
inc
js
ret
testl
sub
int
jo
aam
or
xchg
pop
ja
stos
cmp
push
sub
pop
mov
pop
in
mov
scas
inc
push
add
or
dec
leave
xchg
jns
xor
jo
in
icebp
nop
lods
add
and
pop
mov
sti
dec
add
in
mov
es
mov
mov
ret
popl
sbb
or
adc
ret
jmp
mov
mov
clc
cmp
imul
sbb
mov
jno
pop
mov
sbb
test
add
hlt
add
mov
and
into
xlat
popf
out
lahf
sbb
push
int3
xor
push
cmpl
mov
movsb
xor
inc
loop
dec
pusha
push
pop
mov
clc
sbb
popa
adc
scas
jle
out
xorb
sub
lcall
xlat
hlt
cmc
arpl
hlt
xlat
jecxz
lods
and
cmc
cmp
gs
aam
jmp
add
fsubl
mov
pusha
dec
jns
shl
pop
icebp
xor
sbbb
mov
mov
push
push
mov
inc
jg
adc
gs
jo
sbb
sbb
movsb
stc
mov
mov
jg
push
aad
xor
push
xchg
pop
lods
jge
addr16
test
jb
add
adc
add
fdivs
sub
push
cli
sbb
lcall
xchg
fildl
negl
push
in
mov
lock
in
loop
dec
pop
lds
add
mov
adc
pop
lds
jle
dec
jge
hlt
in
stc
mov
test
push
pop
roll
cmp
jnp
int3
pop
jg
and
or
lcall
pop
inc
arpl
xchg
js
inc
pop
inc
test
push
sub
shl
hlt
push
je
adc
jecxz
cmc
rcll
sub
jns
je
mov
xchg
mov
fldenv
lods
pop
jl
jnp
icebp
push
mov
lret
push
out
pop
push
xor
out
jl
addl
movsl
mov
push
shl
rcl
fs
inc
std
cmp
pop
leave
mov
pop
into
or
xor
xor
xchg
sbb
imul
fidivrl
pop
mov
negb
push
sti
push
push
cmpsl
mov
mov
sub
mov
cmp
scas
in
mov
lea
mov
pop
test
lods
add
push
push
pop
jbe
and
mov
and
xchg
mov
aad
fucomi
aad
mov
mov
std
mov
mov
xchg
pusha
jle
rorl
movsb
in
add
fisubl
dec
lahf
js
add
aam
bound
mov
mov
add
add
into
adc
roll
mov
jmp
test
cld
pop
add
nop
ss
fidivl
dec
adc
inc
sti
xchg
xchg
xchg
xor
sahf
adc
into
aam
daa
std
push
aaa
loop
mov
mov
loope
sti
rcrb
popf
sti
mov
mov
inc
adc
jo
gs
mov
cmpsl
cmp
mov
test
stos
scas
pop
push
stos
je
mov
jae
ficompl
ret
add
mov
stos
jno
pushf
and
test
fdivrp
rorb
push
push
movsb
xchg
aad
adc
mov
jnp
stos
mov
push
cmc
out
mov
mov
pop
mov
jo
test
pusha
mov
xchg
mov
fidivl
sbb
into
mov
inc
fisttps
hlt
popf
mov
pop
xlat
push
jmp
or
inc
dec
pop
pop
add
loop
in
fistpll
lret
in
stc
sbb
fs
insl
xchg
pop
dec
mull
dec
outsb
enter
xor
sub
js
dec
jmp
mov
fadds
xchg
or
andb
mov
data16
jns
mov
rcrl
movsl
pop
pop
imul
push
popa
ljmp
in
cmp
out
mov
jp
lret
pusha
or
movsl
sbb
sbb
dec
into
loopne
cmp
inc
xor
and
incb
and
push
jg
ds
aas
jbe
and
popa
inc
xchg
inc
add
addr16
sti
inc
xchg
mov
inc
not
lea
aam
jecxz
mov
into
push
lret
nop
xor
fucom
adc
jmp
outsl
aas
outsb
or
ljmp
scas
sbb
jbe
push
push
mov
adc
mov
mov
or
cmpsl
fistpl
mov
in
cmpl
and
enter
out
das
jp
sahf
lea
fcmove
jp
test
sbb
xor
in
push
addr16
mov
sbb
lahf
psubw
sbb
loope
andl
das
mov
add
inc
out
lods
aam
xchg
mov
aad
imul
cld
dec
fmul
mov
push
push
or
jge
mov
iret
jbe
rcrb
insl
xor
jle
dec
mov
lock
jp
inc
fimull
gs
jp
mov
cmc
jno
fsubr
lods
push
push
fcoms
call
fstps
int3
jmpw
movsb
lret
cmc
add
mov
add
sbb
mov
xor
and
dec
mov
mov
sti
add
push
or
mov
pop
lcall
pop
cmpsb
xor
adc
cmp
mov
inc
int
sbb
adc
stos
push
jecxz
mov
mov
pop
sub
pushf
adc
aas
imul
sbb
jns
popa
lahf
and
pop
rcrl
int
test
ljmp
lret
mov
pop
fsubrl
sbb
jecxz
dec
ds
push
cld
in
lods
add
out
push
dec
push
mov
inc
cmp
jge
push
or
jo
aas
jnp
mov
mov
mov
mov
es
rolb
mov
mov
push
xor
lret
sub
mov
xchg
arpl
orb
mov
pop
dec
icebp
or
lock
xchg
mov
sti
jns
jge
pop
push
test
popa
cmpl
iret
bound
or
pop
int
lret
mov
mov
inc
jnp
insb
nop
pop
inc
add
add
pop
mov
xlat
pop
dec
push
jge
mov
pop
xchg
or
rcr
imul
push
pop
inc
cmp
adc
cmp
lods
mov
mov
inc
xchg
xor
xlat
add
sub
or
jmp
push
ret
fsts
mov
es
or
or
shll
pop
out
dec
xchg
sbb
add
dec
aad
cli
jne
fwait
mov
mov
inc
mov
stos
mov
or
mov
cmpl
test
and
mov
xor
dec
add
repnz
xlat
mov
cld
add
sub
cmpsl
js
je
or
inc
push
or
push
fcompl
notb
mov
cmpsb
xorb
jge
xchg
or
xchg
mov
pop
jmp
addr16
cmp
outsl
mov
jae
sub
repz
subl
jp
inc
pushf
adc
arpl
addb
ret
push
push
fisubrs
inc
mov
sbb
push
mov
pop
inc
mov
ds
inc
mov
cs
shl
fsubrp
scas
fmulp
dec
push
ror
mov
shlb
mov
mov
and
or
push
mov
xlat
xlat
arpl
jecxz
sbb
fldcw
js
cmp
in
pop
or
rolb
lds
sbb
out
movsl
push
dec
xchg
pop
mov
test
inc
jbe
sbb
or
stos
lahf
mov
rorb
int3
sub
mov
jecxz
inc
icebp
andl
push
or
outsl
loope
mov
and
aaa
icebp
dec
inc
fisttpl
mov
xor
pop
add
add
or
sbb
int
xchg
push
or
jb
rolb
jecxz
out
and
das
int
xor
hlt
outsb
pop
fisubl
mov
aad
push
mov
ljmp
push
fs
and
mov
jle
mov
and
adcb
in
lods
sub
jo
mov
or
std
lock
cmpsl
xchg
push
insl
shlb
into
pop
fisttpl
sbb
iret
loopne
sahf
and
xchg
imul
jecxz
adc
pop
cmp
je
loope
enter
inc
cli
xor
fdivl
sbb
or
icebp
repnz
lcall
movl
cmp
pop
ret
mov
add
call
push
sub
arpl
leave
mov
sub
add
daa
inc
mov
sbb
cmp
cmp
loop
sub
imul
mov
fists
pop
and
movsb
sbb
or
pop
mov
push
sub
mov
pop
fldcw
adc
add
sbb
jmp
xchg
ret
arpl
shrb
sbb
sbb
jg
cmp
out
mov
negb
or
popl
movsb
pop
jecxz
mov
int
icebp
ret
cmpsl
or
mov
mov
dec
std
outsb
jb
cld
mov
scas
fistps
in
pop
jge
mov
inc
and
push
sub
sub
sbb
out
cs
cmp
lret
scas
std
imul
and
sbb
rcll
sub
lods
dec
inc
test
adc
or
fwait
xor
pusha
jo
mov
pop
iret
shll
hlt
shlb
daa
pop
adc
push
or
aad
js
mov
loopne
sub
ds
das
lea
inc
test
xchg
push
cmp
stc
insb
sbb
movsl
mov
inc
and
fcomps
enter
or
dec
and
stos
loop
ja
cmc
jl
jne
pop
push
mov
cmp
sbb
aaa
cmpsl
scas
inc
mov
cmp
icebp
jp
loop
add
stc
mov
lret
jb
clc
aad
popl
mov
fbstp
jl
or
frstor
jecxz
pop
mov
pop
sub
outsl
pushf
pop
jge
dec
add
aaa
push
push
in
xor
or
jg
andl
mov
daa
cmpsl
out
pop
les
popa
cmp
mov
cmp
jb
repz
nop
pop
pusha
dec
aas
mov
xchg
cmc
pop
or
mov
je,pt
shrl
mov
lret
and
nop
sub
int3
sbb
shlb
jge
incl
in
outsl
cmp
adc
sahf
add
pusha
ljmp
shr
inc
jmp
fdivrl
pop
push
fsub
fcoml
movsl
int
mov
jae
pop
jno
int
xchg
push
in
inc
jecxz
cwtl
aaa
mov
shll
out
xchg
mov
mov
dec
push
add
jbe
pushf
pop
and
dec
push
shlb
loop
cmp
std
push
je
sbb
ja
lahf
and
mov
sub
mov
mov
icebp
xor
sub
imul
out
add
repz
push
cmp
inc
addb
sub
lcall
jp
push
sub
int
ret
sbb
jb
pop
sti
subb
mov
loope
mov
push
mov
daa
les
sub
sub
call
add
inc
call
mov
push
lea
call
add
add
dec
mov
sub
xor
call
mov
inc
inc
or
dec
dec
lea
inc
inc
inc
inc
sub
inc
inc
call
inc
add
imul
imul
add
call
and
call
mov
dec
add
lea
inc
lea
xor
imul
dec
pop
inc
imul
dec
add
sub
pop
dec
inc
pop
mov
mov
mov
add
pop
mov
inc
inc
mov
inc
imul
movswl
movzbl
pop
or
xor
pop
inc
mov
mov
add
inc
call
add
inc
mov
dec
ret
imul
inc
push
or
dec
push
dec
and
push
mov
inc
push
dec
mov
push
dec
mov
mov
dec
add
push
ret
push
mov
push
sub
add
sub
mov
push
xor
inc
mov
call
pop
ret
jmp
inc
mov
pop
pop
ret
push
add
sub
inc
add
add
mov
sub
mov
movzbl
imul
imul
add
add
imul
lea
mov
mov
mov
lea
inc
add
add
mov
add
add
lea
pop
ret
sub
sub
mov
add
mov
mov
xor
mov
mov
sub
mov
mov
and
lea
xor
mov
mov
mov
mov
inc
inc
sub
mov
mov
inc
dec
dec
cmp
jb
xor
push
inc
and
push
inc
mov
push
sub
inc
xor
inc
or
xor
lea
inc
xor
add
dec
push
sub
imul
push
lea
sub
pop
inc
add
mov
add
inc
sub
dec
inc
inc
sub
xor
inc
movzbl
mov
lea
mov
mov
add
lea
movzbl
imul
inc
lea
add
and
dec
add
lea
inc
movzbl
mov
add
mov
dec
imul
movsbl
inc
inc
mov
mov
dec
imul
imul
jmp
add
inc
add
add
xchg
inc
add
adc
add
inc
add
add
std
or
add
into
inc
add
add
add
loopne
sbb
mov
repz
iret
gs
test
aas
inc
test
dec
sub
data16
sti
or
les
mov
jae
xchg
hlt
ds
jo
in
stc
push
push
les
out
mov
xchg
jbe
mov
mov
das
testl
icebp
inc
movsb
out
push
lea
and
cmpsb
and
sub
xlat
push
jnp
sti
push
cli
lds
cltd
sahf
mov
xor
push
jmp
cmp
jmp
sbb
dec
ret
sub
in
mov
add
js
rcrl
jecxz
cmp
rcrl
fidivrl
adc
das
imul
sti
nop
xor
or
sbb
fcmovne
rcrl
pop
and
xchg
jecxz
xor
popf
out
ret
mov
mov
cltd
xor
cs
repnz
mov
push
out
xchg
int
mov
jl
add
sbbl
add
xchg
sahf
or
sbb
es
or
into
fdivl
in
or
mov
fstl
aad
xor
push
sbb
ds
lea
inc
rol
sub
xor
inc
mov
adc
inc
in
int
ss
xchg
aam
cmp
jle
push
sbb
enter
adc
and
imul
pop
dec
mov
sbb
lods
scas
decl
pop
popa
push
aam
cmp
ret
xchg
aaa
mov
ret
andb
shrl
pcmpeqb
inc
jne
cs
dec
mov
add
mov
adc
rcr
xchg
icebp
hlt
sti
jno
mov
sbb
clc
loop
xor
lret
or
gs
sti
pop
scas
add
cmp
das
mov
sbb
xchg
movsl
sbb
mov
out
jns
je
jl
insb
mov
sbb
ret
ret
xor
call
test
add
out
inc
daa
mov
subl
fcmovbe
shr
push
lods
adc
rorb
sub
insl
cmp
or
mov
pop
adc
sarl
mov
xchg
jbe
cmp
bt
sahf
in
push
jo
pop
jecxz
push
fistpll
xchg
add
out
add
dec
ret
fsubrl
call
out
ror
mov
iret
adc
in
adc
fistps
fmulp
cmpsb
out
loopne
mov
testb
jne
xchg
dec
mov
dec
pop
and
mov
sbb
lret
pop
mov
hlt
pop
dec
xchg
dec
shll
lods
mov
jnp
in
in
int
mov
push
cli
pop
mov
in
cmp
jp
sub
imul
iret
sub
dec
mov
sbb
loop
inc
stc
in
mov
cwtl
inc
aam
jno
rcl
inc
in
mov
add
aas
xor
out
lahf
mov
in
int
imul
xlat
fnstenv
aas
cs
mov
push
mov
pop
stc
xor
out
outsl
mov
popa
pusha
insl
out
cmp
sub
outsb
cmc
popf
mov
or
xor
icebp
call
xlat
add
pop
lret
cmp
sub
fildl
movsb
loop
mov
push
out
call
aam
cmpsb
out
cmpsb
mov
jns
in
pop
pop
adc
mov
add
push
jnp
jbe
movsb
daa
dec
pushf
cmp
mov
cmpsl
enter
dec
push
test
repnz
xor
jg
je
out
aas
loope
fcmovne
js
cmp
sar
sub
aad
in
mov
sar
add
daa
sahf
test
and
decb
nop
mov
popa
pop
insl
enter
imul
xor
repz
mov
xchg
clc
adc
cmp
ficoms
xchg
inc
xor
jmp
std
rclb
fbstp
pop
adc
jbe
sub
mov
push
xlat
and
mov
fbld
cmc
jno
pop
pop
mov
dec
outsb
and
test
dec
orl
lds
cmp
cld
add
out
xor
repz
add
mov
or
movb
scas
js
and
xor
inc
aaa
jae
dec
push
inc
stc
sub
fs
call
mov
bound
pusha
or
imul
lds
sti
jp
les
pop
sub
cmp
out
push
enter
jg
sub
xchg
mov
sbb
loopne
test
loop
and
push
imul
leave
inc
movsl
push
adc
pop
popa
lcall
out
add
dec
rorl
mov
into
repnz
mov
xchg
xorl
mov
test
mov
inc
pop
sbb
xchg
bound
pusha
out
jo
jbe
shl
mov
mov
sub
push
xor
in
cmp
mov
xchg
adcb
in
addl
push
nop
movsb
not
test
mov
mov
dec
cmp
xorl
push
int3
out
or
ds
jns
repz
and
int3
inc
call
mov
cs
xor
enter
les
push
sbb
lfs
jns
out
jmp
arpl
cmp
test
movsl
int3
mov
loopne
adc
mov
dec
js
inc
mov
adc
jle
cmp
ret
leave
add
and
cwtl
or
or
pop
jnp
stc
sub
inc
sbb
pop
cmpl
pushf
popf
sbb
jbe
test
jecxz
xlat
pop
sub
xor
pop
les
xor
xor
ss
js
arpl
fstpt
add
addr16
imul
jle
cmp
sbb
cmp
and
jl
add
pop
mov
outsl
sbb
movsb
and
mov
xor
loope
fsubrs
fs
mov
lds
jb
out
lret
fidivrs
insb
icebp
cmp
jbe
xor
xchg
out
dec
dec
push
into
das
or
call
je
xchg
adc
mov
ljmp
adc
mov
shlb
stos
cwtl
xchg
rolb
inc
sbb
and
inc
sti
mov
xorb
push
add
inc
es
xlat
push
dec
jns
xchg
call
jmp
push
fisubrl
lock
mov
dec
or
jbe
xchg
rcrb
or
ds
and
mov
or
inc
in
fmuls
nop
insl
inc
xor
push
hlt
das
ljmp
addr16
inc
dec
gs
cmp
popa
jo
ret
cld
inc
xor
arpl
icebp
std
lds
and
loopne
insl
mov
xchg
cltd
mov
push
hlt
mov
fwait
stc
cs
shrl
adc
fbld
gs
fdivrs
and
test
sub
xor
cmc
mov
mov
les
enter
shlb
cwtl
xor
aas
mov
fdivl
cmc
lret
insb
std
mov
dec
mov
mov
xchg
dec
rolb
std
lret
stc
ds
testl
stc
emms
cmp
push
xlat
push
getsec
mov
lods
sahf
repnz
inc
pop
arpl
push
leave
mov
mov
aam
inc
jae
pusha
jle
mov
popf
insb
adc
dec
mov
es
mov
inc
push
sub
faddl
cs
dec
insb
pop
jg
das
scas
nop
stc
je
add
dec
mov
sub
cltd
pop
sbb
movsl
sti
loop
pop
bound
pop
jecxz
pusha
and
jnp
ret
push
mov
xor
es
ss
inc
scas
and
or
in
out
mov
dec
mov
or
lea
pop
addb
mov
imul
rcrl
sahf
add
or
inc
lret
xchg
inc
cmp
enter
xor
imul
aas
rorl
cmp
push
stc
sbb
push
cmp
pop
cmp
xor
mov
aad
dec
cs
lret
loop
ljmp
sbb
push
sub
adc
jns
jge
cs
xor
lock
lea
inc
aad
arpl
lcall
lret
insb
lret
mov
je
ds
and
or
rcr
or
cs
shlb
xor
in
cmp
ds
outsb
push
pop
mov
cmp
enter
repnz
dec
cmpl
lcall
cmpsb
fistps
test
or
jbe
mov
adc
shll
fistpll
mov
xor
xlat
insl
inc
scas
sarl
mov
or
repz
pop
pop
cmp
fisubl
cltd
loop
std
rcrb
adc
mov
dec
sbb
push
sub
inc
sbb
add
cmp
sbb
xchg
pusha
xchg
jmp
jne
mov
and
notl
fsubrl
dec
dec
jg
sbb
xchg
inc
loop
jp
add
jp
mov
bound
xchg
and
pushf
or
xchg
mov
sbb
or
jle
add
sbb
test
shrb
fisubrl
pop
xlat
and
xchg
stos
pop
movsb
lods
push
bnd
lret
ficoms
enter
xor
movsb
mov
and
movsb
xor
push
mov
stos
sarb
mov
xchg
pop
xchg
stc
mov
push
pop
pop
fldt
xchg
sbb
add
shll
pop
mov
pushf
mov
leave
push
stc
or
imul
rcll
mov
imul
dec
and
mov
sbb
inc
aaa
cli
dec
jo
jp
stc
adcl
xchg
dec
mov
jns
jbe
dec
lds
xor
fwait
jecxz
jp
les
ficoml
mov
daa
popf
push
cli
mov
icebp
jl
stc
imul
and
popf
sbb
mov
push
push
je
mov
mov
js
sbb
jl
fsub
push
adc
out
test
int
jbe
fs
leave
rolb
lds
adc
lahf
psadbw
cwtl
inc
cmpsl
jp
imul
stc
out
mov
xor
xor
cmpsb
cmp
pop
mov
or
aad
in
pop
pop
adc
mov
or
popa
add
shlb
jnp
jg
lods
mov
fldt
lret
lret
bnd
jge
pop
inc
sub
xchg
adc
pop
cld
add
or
les
cld
push
lcall
dec
cs
dec
mov
cmp
inc
stc
in
test
aad
jne
pop
mov
xor
and
sub
xchg
leave
stos
addr16
sti
data16
arpl
and
movsl
lcall
mov
adc
mov
hlt
mov
xchg
xor
jle
call
fcoms
out
or
std
or
ficompl
or
mov
inc
fsubr
imul
adc
adc
scas
in
inc
xchg
xor
add
and
leave
cmp
int3
mov
xlat
mov
dec
addr16
dec
ret
jo
adc
add
out
mov
xor
xlat
cs
push
xlat
mov
xchg
loop
push
sbb
test
jge,pn
mov
xchg
jo
cltd
sub
mov
push
pop
push
lea
push
jge
cli
das
shlb
mov
je
mov
inc
jp
inc
pop
pop
and
popf
decl
jne
xor
mov
jp
in
fwait
aam
mov
jnp
cmp
pop
call
rcll
sbb
bound
sbbl
xor
push
inc
adc
ss
push
es
inc
jg
scas
stc
je
bound
xor
stos
cmc
dec
lret
push
or
xor
xchg
sahf
inc
mov
xchg
lret
cmp
xor
dec
test
lea
lods
pop
popl
bound
std
movsb
sbb
icebp
loopne
jle
sti
push
sbb
mov
js
jmp
mov
int
ficoms
popa
jo
sub
cli
hlt
rcl
std
ffree
clc
rorl
ja
lods
pop
push
push
push
addr16
imull
xchg
sub
add
xlat
mov
adcl
mov
jae
jl
sahf
inc
mov
dec
push
arpl
inc
stc
lock
xorl
adc
loope
aaa
cli
xchg
mov
stos
sub
imul
fchs
xchg
xchg
out
pop
loopne
xchg
add
push
std
sub
fidivrl
mov
std
pop
repnz
and
jl
xchg
addr16
iret
xor
jns
xor
mov
sbb
pop
jb
cmp
xchg
dec
aam
sahf
fsubl
pop
pop
insl
mov
outsl
aam
xchg
std
dec
sbb
or
insb
sub
pop
fwait
fucom
jne
inc
test
push
or
std
out
mov
cmp
ja
imul
sub
jp
dec
inc
or
lret
int
add
add
scas
aam
xchg
int3
pop
dec
fwait
sbb
icebp
xchg
jne
orb
test
iret
mov
test
aas
xor
in
xchg
repz
mov
lret
sti
jns
leave
adc
xor
or
jge
fidivs
scas
push
into
sub
orb
or
push
mov
dec
mov
rcrb
inc
popa
gs
push
jbe
adc
stos
mov
outsb
cltd
adc
adc
outsb
in
sarb
jge
xor
push
xchg
push
lock
jle
nop
inc
jp
push
push
jno
out
fsubrl
inc
lods
fistps
cmpsb
inc
dec
or
loopne
mov
and
add
movsl
and
int3
stc
add
pop
pop
and
dec
push
xchg
stc
or
push
xor
js
and
push
cli
pop
pushf
mov
mov
mov
add
ljmpw
aaa
mov
cld
movsb
cmpsb
add
dec
xchg
lret
add
jl
jge
cmp
add
test
cltd
push
leave
jb
xorl
xor
cmp
mov
and
sahf
sbb
lcall
dec
aam
jl
mov
push
dec
adc
adc
rcll
mov
jecxz
lods
sbb
sbb
fdiv
add
and
test
mov
addb
mov
stos
mov
cmpb
inc
xor
lcall
fwait
jns
pop
les
clc
and
lods
cmp
jle
ja
add
sub
jae
cmp
repz
movsl
icebp
movsl
sarb
cli
mov
mov
js
shll
pop
mov
cmp
loopne
mov
faddl
scas
xchg
jo
jne
out
pop
ds
shrl
test
and
xchg
psubq
mov
xchg
sub
sub
loopne
push
sub
in
and
sbb
repz
fadds
jmp
xchg
subb
xchg
es
in
cli
inc
sub
push
mov
mov
inc
mov
cmp
dec
and
mov
xchg
cmp
xchg
arpl
jmp
sbb
pusha
fcompl
jle
gs
adc
push
popf
push
sahf
jg
add
shrl
add
mov
aad
jo
xor
cmp
stc
inc
pop
test
aad
inc
rorl
fcomps
or
cmpsb
adc
clc
stos
jae
push
ret
pause
popa
rcll
push
in
cltd
cmpsl
rclb
test
sahf
int3
pop
outsb
xchg
mov
mov
ds
in
xor
int3
or
or
pop
aad
adc
or
jp
xchg
mov
jmp
lock
cltd
cmp
sub
out
sahf
outsl
mov
icebp
cmp
arpl
mov
pop
mov
dec
inc
movsb
jbe
sbb
push
pop
jbe
roll
cmpb
jle
lahf
loope
loop,pt
adc
adc
movl
mov
sahf
scas
dec
mov
dec
cmp
cwtl
pop
cmc
test
int
mov
add
or
int3
jg
inc
out
lahf
in
outsl
lock
mov
sarl
fidivrs
adc
icebp
inc
in
mov
scas
ja
pushf
aaa
adc
fsubs
sub
mov
dec
mov
lcall
jnp
std
cmp
mov
pop
fucomi
mov
sbb
idivl
inc
sub
in
add
subb
pop
push
dec
mov
mov
inc
cld
and
or
daa
incb
mov
inc
xor
mov
test
inc
jb
in
xor
pop
pop
xchg
in
lret
pop
jnp
jmp
shrb
fldcw
jp
dec
in
push
lds
pusha
mov
not
cs
jno
insb
dec
cltd
cmp
out
in
popf
clc
icebp
push
mov
dec
jbe
dec
jmp
fucomi
pushf
adc
cli
and
addb
inc
xor
and
inc
shr
xor
xor
daa
jns
add
dec
xchg
pusha
push
add
mov
js
xlat
iret
scas
cmp
and
push
pop
lret
jo
xor
cmpl
ljmp
addl
aam
std
xchg
mov
pop
dec
lods
xchg
pop
sti
scas
or
dec
daa
mov
adc
rcl
sbb
mov
inc
jnp
stos
inc
jmp
sub
jl
inc
pop
test
fsubrl
mov
cwtl
pop
jmp
jnp
fildl
sub
adc
inc
jle
jl
sbb
cmp
jp
data16
fcomi
aas
fadd
mov
ffreep
rcl
jo
scas
inc
aas
sbb
xchg
movsl
aam
std
test
nop
jmp
jl
lods
cmc
mov
inc
sbb
mov
xor
cmp
data16
pop
or
inc
cs
sbb
mov
pusha
dec
loopne
jg
test
push
and
dec
fcomi
dec
ror
loopne
jns
test
and
mov
pop
add
std
mov
lcall
mov
hlt
push
cmp
push
loope
sub
cmp
fs
sub
shlb
sarb
setnp
inc
es
add
xchg
and
jl
sbbl
xchg
mov
jae
jmp
fldl
out
fdivrl
sub
pop
in
test
and
push
das
xchg
and
fldcw
jnp
pop
or
pop
clc
out
cmc
mov
shrb
mov
arpl
insb
and
dec
push
in
mov
add
test
sub
sbbb
push
movlps
outsl
fisttps
outsb
sub
push
mov
pop
outsl
int
mov
push
pop
pop
test
cli
in
loop
sub
mov
adc
jmp
out
push
insb
pop
sub
fs
mov
inc
mov
xchg
cmpsb
pop
dec
xlat
mov
ret
jbe
mov
push
adc
ss
addr16
xchg
xor
mov
lock
pop
jmp
mov
dec
jb
mov
shrb
test
aad
in
xchg
aad
inc
mov
cmp
and
xor
add
mov
leave
clc
in
scas
lcall
hlt
mov
lahf
sub
das
popf
dec
std
inc
mov
mov
rclb
mov
push
les
xchg
bound
repz
rorl
xchg
mov
pop
mov
fwait
pop
cs
stc
int
shr
inc
pop
pop
xchg
lea
popf
std
lret
into
add
mov
inc
dec
mov
mov
lret
or
or
insl
sar
lods
push
in
mov
or
sub
inc
xchg
imul
fisttpl
gs
mov
out
sub
jecxz
or
fs
and
pop
lahf
jne
add
decb
or
js
in
pop
fisubrs
jge
cmp
int3
push
mov
pop
push
cmpsb
dec
lcall
pop
and
rorw
push
popa
push
xchg
faddl
jb
push
jle
jne
pop
stos
shl
shll
repz
enter
push
movlps
rcll
lcall
pop
push
jns
inc
je
iret
sub
cs
loopne
lock
xchg
shll
leave
jle
xchg
test
ret
dec
fsubrs
or
inc
cmp
jg
shll
lea
iret
ret
pop
jno
lret
pop
xlat
std
cmc
hlt
adc
cmp
mov
mov
push
jno
out
movl
out
mov
in
xor
push
cmp
mov
jns
cld
mov
mov
fs
mov
fmull
das
leave
cmp
fsub
movsl
in
adc
mov
xor
pop
test
xchg
inc
and
in
xor
adc
mov
jp
or
clc
fsubrl
xlat
in
xchg
cmpsl
cltd
lahf
out
mov
cmp
imul
jle
test
or
mov
push
leave
add
stos
daa
scas
stos
pop
fmull
fldz
out
outsl
cltd
push
loop
test
enter
fcoms
mov
push
pop
cltd
xor
push
das
mov
xchg
or
fst
mov
sar
iret
cmp
push
stos
lret
andl
insb
mov
enter
xor
inc
mov
cmpsb
in
xchg
sahf
cmp
or
xchg
adc
mov
mov
push
data16
mov
jmp
clc
cli
mov
loopne
daa
sub
cmp
fists
push
sbb
mov
popf
xchg
add
hlt
or
testb
sub
leave
fnstenv
call
or
das
cmpsl
in
movsb
or
lods
xor
das
orl
pop
rcrl
push
or
xchg
mov
cmp
adc
adc
dec
ret
jle
lahf
jo
mov
sub
mov
lahf
dec
daa
repnz
aaa
fwait
insl
imul
dec
pop
ret
pop
adc
sub
int
data16
out
mov
push
sbb
stc
test
mov
mov
xor
adc
pop
mov
jge
dec
call
int
add
shll
adc
pop
push
xchg
cmp
test
adc
jle
lods
js
jbe
cmp
jbe
adc
test
movsl
movsl
jecxz
mov
test
ss
notl
les
loopne
jmp
mov
add
rorl
adcl
testb
sbbl
xor
daa
jp
dec
mov
test
mov
push
sbb
xor
pop
push
loop
out
dec
fdivrs
adc
xchg
pop
jecxz
xor
aad
add
sbb
pop
inc
test
sbb
xlat
out
pop
jmp
jbe
dec
aaa
add
or
iret
sub
out
aas
lret
cmpsb
out
cmp
jns
xchg
orb
or
pop
and
cmp
and
jnp
test
roll
ds
mov
sbb
push
inc
push
xchg
push
mov
inc
jmp
scas
cli
stos
push
std
mov
pusha
lret
xorl
xor
fs
sub
hlt
cwtl
add
push
loopne
dec
test
pop
out
jge
divb
je
inc
sub
jg
dec
stc
dec
into
dec
out
dec
add
xchg
jmp
cvtdq2ps
mov
iret
inc
xchg
dec
inc
or
fmull
jbe
lds
adc
jmp
imul
and
dec
mov
int
test
xchg
push
addr16
mov
scas
mov
sbbb
xchg
lret
and
mov
mov
cmp
mov
xchg
fldl
cmpl
sbb
sub
fadds
xor
cld
imul
lods
mov
mov
aam
loopne
or
push
lea
mov
and
or
xchg
and
lods
subl
and
adc
mov
mov
call
add
out
sahf
xor
popa
xchg
add
mov
loopne
lcall
sbb
fmul
xor
push
ret
mov
push
and
push
push
mov
or
fsubrp
cmpsl
mov
into
add
mov
cmp
push
pop
fildll
loope
xor
mov
test
or
in
push
addl
addr16
jb
clc
mov
dec
outsb
test
mov
movsl
xchg
jne
inc
pusha
loop
rcll
adc
xchg
mov
push
lods
mov
les
or
cmpb
out
jge
push
mov
sysenter
icebp
cltd
push
dec
test
adc
mov
mov
mov
jno
frstor
dec
loopne
jmp
jb
add
out
jecxz
lods
popa
sbb
push
iret
mov
std
dec
jg
inc
push
movsl
movzbl
lcall
outsb
daa
cltd
hlt
dec
loopne
sub
add
pop
inc
jno
add
jnp
mov
fwait
xlat
jmp
inc
jbe
test
fbstp
inc
in
les
aas
jmp
stos
push
outsl
inc
mov
jno
sbb
mov
sbbb
rcll
jae
xor
insb
mov
das
mov
adc
push
negl
shll
inc
and
cli
imul
adc
repz
cmc
jecxz
xchg
inc
mov
test
out
data16
inc
pop
mov
testb
mov
cmp
pop
cld
mov
test
add
lock
mov
and
add
push
arpl
xchg
out
push
jle
hlt
orb
leave
xor
sbb
xadd
ret
inc
or
xor
daa
add
xor
je
cwtl
ret
mov
fbld
push
push
cmp
stos
fxch
jnp
andl
fistl
sbb
movsb
lock
stc
cmpl
stos
xor
inc
mov
push
orl
les
div
std
xchg
mov
cld
pop
pop
test
cmpl
out
loope
push
ss
test
xor
popf
popa
mov
shll
mov
xchg
xor
or
mov
int
enter
cltd
or
and
mov
dec
xchg
pop
cmp
loopne
lahf
jne
mov
scas
jb
ja
cmp
bound
mov
mov
xor
sub
inc
ds
jae
jne
and
mov
mov
pop
sub
repnz
xor
push
cmp
pop
xchg
sbb
sbb
int
icebp
cmp
push
push
fisubrl
bound
stos
mov
pop
jno
stos
mov
daa
decl
pop
xor
je
subl
sub
out
test
jg
daa
fnstcw
divl
out
or
mov
xor
stos
stc
cmp
mov
lods
cmp
clc
les
leave
xchg
push
jg
pop
adc
mov
push
dec
xchg
push
fcoml
enter
or
cmpsl
xchg
pop
sarb
repz
sbb
dec
and
icebp
sbb
xor
pop
mov
cmp
into
dec
push
cli
addr16
adc
or
cmpsl
dec
jnp
es
aam
mov
shrb
out
lds
mov
enter
and
hlt
call
dec
jl
adcb
or
xor
cmpb
push
push
add
jnp
mov
scas
test
fisubrs
cmp
lods
ret
movsb
arpl
call
aad
std
mov
jnp
adc
int3
inc
aaa
and
cmp
push
loope
fs
out
filds
inc
jb
inc
push
test
shll
cmp
xchg
out
and
lea
js
inc
stos
arpl
jne
xchg
inc
mov
lahf
ss
cld
ret
sbb
out
mov
lods
movsb
and
cmp
and
gs
mov
xchg
xchg
out
push
int
imul
scas
mov
sbb
repnz
sub
fwait
cmp
cmp
and
xor
mov
cltd
push
xchg
mov
popf
movsb
add
enter
outsb
pop
fidivl
mov
imul
sbb
sbb
push
lcall
mov
push
mov
pushl
adc
lods
ljmp
dec
insb
imul
sbb
mov
cmp
cmp
outsl
and
push
mov
loop
dec
std
out
xchg
out
mov
push
cvttps2pi
jl
or
add
cs
mov
test
notb
cwtl
cmp
sbb
xchg
aaa
out
es
adc
mov
aam
gs
mov
rcrb
pop
dec
shrb
add
stos
add
ss
movb
daa
jge
push
sbb
aas
inc
push
mov
sbb
adc
enter
xor
imul
js
lock
mov
loop
xchg
insl
add
mov
imul
inc
test
dec
cs
jmp
pop
pop
test
or
fwait
jl
mov
repz
arpl
rorb
and
sub
sbb
fildl
adc
pop
orb
outsl
xchg
cmp
mov
stc
lcall
inc
jle
or
inc
xor
movsl
loope
jp
mov
mulb
js
fisubl
mov
sti
mov
jne
xor
pop
bt
shll
jl
fisubrl
mov
jle
ret
rcrb
dec
popa
dec
push
jno
fs
jae
js
mov
or
sub
jge
arpl
and
push
pop
enter
sbb
cli
xchg
aad
xor
inc
or
and
and
pop
mov
fsubl
jecxz
das
xlat
push
shll
mov
jge
imul
stos
stos
inc
int3
xor
icebp
and
cltd
jne
hlt
imul
les
aaa
mov
cli
mov
rol
dec
jns
or
sub
push
adc
out
or
gs
ds
mov
pusha
insb
call
add
fwait
sbb
add
cmp
pushf
lret
scas
mov
in
insb
jl
lret
pop
in
or
cmpsb
xlat
jmp
loopne
push
inc
sbbb
and
insl
mov
in
sbb
lret
mov
sbb
movsb
subb
jo
jne
or
push
cmp
sar
leave
add
xor
sub
call
test
sbb
jp
pop
aas
jne
push
cmp
mov
xchg
push
add
mov
push
adc
push
and
dec
dec
ret
out
dec
movsl
popf
repz
nop
add
pop
ds
shll
sbb
lahf
sub
jecxz
xchg
cmp
jmp
das
in
pop
mov
jp
movsl
mov
pop
sti
jle
adc
adc
cmp
cmc
add
fsubs
cmp
dec
scas
mov
or
mov
sub
push
push
xor
bound
sub
cltd
mov
jp
out
adc
xchg
mov
inc
loop
sbb
jmp
rcl
dec
mov
push
dec
cmp
orl
xor
mov
adc
mov
andl
xchg
stos
sarl
mov
pop
jge
rclb
pop
push
xchg
xchg
repz
jns
imul
jle
daa
fsts
inc
cwtl
sub
cltd
add
mov
xchg
pop
mov
adc
mov
or
in
jo
std
sbb
aad
mov
pop
xor
inc
mov
aas
scas
in
dec
sub
or
fwait
adc
sbb
jp
addb
int3
xchg
lret
fcmovnb
loope
jnp
dec
jmp
scas
sti
ja
out
loopne
dec
scas
pop
dec
pop
repz
cltd
cltd
out
mov
jp
nop
clc
dec
out
push
repz
push
dec
jb
push
sub
arpl
cmp
push
mov
aam
adc
out
fldl
jnp
daa
imul
pusha
imul
fildll
shrb
mov
sub
fbstp
push
fmull
ffree
in
dec
jnp
jno
jle
gs
push
inc
cmp
push
or
or
cmp
mov
xchg
shrl
pushf
sub
mov
or
rorb
lea
idiv
lods
and
push
pop
mov
ljmp
test
daa
adc
inc
or
cmp
pop
lds
stc
nop
jo
and
test
cmp
or
dec
hlt
fsubl
popa
je
sub
cmpsl
add
shl
dec
bound
out
mov
loop
jne
fisubl
inc
in
add
jnp
daa
ret
stos
cltd
mov
movsl
sbb
aam
xor
adc
addr16
fs
scas
bnd
rclb
sbb
or
inc
movsb
xor
mov
lods
hlt
movsb
xchg
sub
sahf
push
push
lret
cld
fwait
mov
xchg
or
idivl
mov
jp
es
mov
movsb
push
int3
dec
cli
mov
dec
outsb
imul
into
outsb
out
mov
test
inc
xchg
xor
jmp
js
pop
enter
fwait
push
and
lret
cmpb
add
xchg
in
adc
and
hlt
mov
xor
and
lcallw
into
or
jnp
aad
iret
cmpsb
mov
aad
sbb
scas
sbb
sbb
sbbl
outsl
iret
sti
popf
sbb
jae
pushl
aaa
arpl
stos
cmp
push
mov
dec
test
xchg
sar
jp
or
sub
and
mov
in
fcoml
push
sub
and
jno
cmc
mov
arpl
mov
int
xchg
hlt
mov
push
mov
add
xchg
push
jno
add
cmp
push
mov
les
jmp
xchg
xorl
aas
push
clc
pusha
dec
divb
ds
flds
loopne
shlb
iret
xchg
mov
data16
out
decb
add
inc
pop
loopne
jle
inc
add
jg
arpl
fsubrs
imul
lcall
cs
sub
cmp
push
std
jno
sub
pop
and
or
jb
fsubrl
lods
pop
add
xor
das
xchg
and
loope
sarb
push
hlt
mov
sub
xchg
push
cmp
push
aas
sub
fwait
arpl
cwtl
pop
popf
stc
leave
mov
xchg
mov
pushf
les
push
push
sbb
sbb
cwtl
out
and
fiadds
jle
pop
fadd
and
or
mov
xor
push
aad
lock
add
adc
dec
dec
push
cmp
test
pop
ja
fdivrs
add
mov
adcl
mov
xor
add
or
std
je
fs
aad
mov
sub
leave
pop
xchg
push
ljmp
loope
int
ds
push
movsl
push
xchg
jl
inc
fsubs
jge
dec
pop
push
stos
stos
add
inc
cmp
inc
and
imul
call
lock
mov
sbb
pop
arpl
sub
insl
sub
push
stos
fld
mulb
push
mov
sbb
rcrl
sub
mov
or
jl
jo
rcrl
cmp
mov
cmpsl
rcrb
inc
push
mov
push
mov
in
add
jle
and
jmp
adc
push
jnp
mov
jb
out
cs
xor
mov
add
push
dec
frstor
fwait
lds
and
mov
jg
xlat
loopne
and
ficoms
shlb
mov
loope
xorb
sub
orl
mov
push
mov
push
mov
repnz
and
mov
jnp
dec
push
sub
or
lahf
dec
jb
lret
std
xchg
xchg
push
sbb
sub
dec
ja
sub
test
cmpsl
imul
in
push
or
pop
and
lcall
sub
mov
jns
adc
lahf
scas
mov
jp
or
sbb
cli
or
mov
popa
adc
sub
in
cmpsl
fcom
rolb
inc
shll
xor
mov
pop
sbb
int3
pop
and
mov
xor
sbb
mov
ja
xor
mov
jns
les
dec
shll
les
adc
fistpl
int3
fmuls
outsl
adc
sub
mov
or
add
out
push
pop
rcrb
movsl
sub
arpl
incl
je
inc
inc
lods
or
out
leave
mov
or
add
rolb
cmp
test
or
outsb
dec
out
test
leave
aad
pop
js
cli
sarl
sub
xchg
pusha
jae
int
clc
or
shlb
jbe
and
cmp
scas
mov
mov
cmc
js
in
add
xchg
mov
popf
adc
mov
fst
dec
subl
imul
mov
cmp
out
mov
sub
jo
clc
mov
repz
pop
push
lea
insb
insb
repz
pusha
out
in
fninit
mov
adc
or
jp
fsubrs
cmp
jl
cwtl
mov
jecxz
pop
pop
scas
aad
loop
or
stos
inc
lahf
fs
xchg
shrb
out
addr16
jp
outsb
adc
xor
adc
out
loope
xlat
decl
enter
bound
pop
cmpsl
out
mov
jae
pop
dec
out
aam
xor
les
mov
jo
fxch
pusha
std
scas
data16
sbb
jb
mov
subl
sbbb
cmpsl
bnd
cmp
test
arpl
outsl
sub
xchg
popa
mov
or
xor
dec
repz
mov
push
mov
inc
mov
imul
push
fldl
add
push
mov
cli
in
xchg
popf
and
jg
mov
pop
xchg
pop
jno
mov
ret
bound
fidivs
xchg
cltd
sbb
not
std
faddl
pusha
shll
xchg
fistps
sub
imul
adcb
dec
push
out
pushf
xchg
push
dec
cs
xchg
or
mov
mov
adc
cwtl
sbb
mov
test
xchg
xchg
icebp
addr16
jle
and
push
xchg
mov
lcall
int3
mov
aaa
mov
pop
and
outsb
adc
popf
out
sbb
inc
xchg
add
adcb
or
and
lds
and
or
xor
mov
arpl
adc
or
pusha
add
lcall
push
sti
cmc
stos
stc
les
rol
inc
mov
cmp
fisubrs
dec
cmp
hlt
mov
inc
andl
clc
jne
push
adc
lods
aad
fld
dec
xchg
addr16
pop
push
pop
lret
sti
cmc
cwtl
stc
jmp
int3
and
clc
cmp
mov
loopne
jo
rorl
add
jp
rcr
fisubrs
mov
sahf
outsb
cmp
jo
shl
mov
sbb
xchg
ss
clc
mov
jb
pop
inc
ja
pop
push
ja
xchg
pop
or
or
and
push
sub
jns
out
into
jb
add
pop
movsb
sbb
cmc
inc
inc
pusha
mov
andb
pop
mov
or
jecxz
xlat
pop
xor
sub
jo
nop
inc
adcb
push
icebp
add
movsl
cld
push
lods
mov
xchg
repz
inc
inc
int
sbb
jg
shr
loop
inc
cmp
movsl
sarb
adc
jnp
push
xchg
xlat
pop
popa
inc
xor
mov
mov
frstor
push
and
push
nop
jb
cmc
ret
mov
fwait
imul
pop
lea
nop
stos
or
jg
xchg
in
adc
mov
and
gs
jle
call
aam
push
inc
mov
cmp
mov
adc
xor
inc
lods
lds
adc
jl
jmp
lcall
and
push
sub
ljmp
aad
mov
idivl
jmp
mov
sbb
lcall
dec
dec
jmp
cld
mov
inc
imul
clc
push
mov
imul
popf
ss
xor
jo
push
xorl
pop
sub
popf
icebp
fneni(8087
in
outsb
insb
push
mov
push
lcall
frstor
and
adc
movb
inc
pop
and
jp
lahf
fsts
pop
cs
test
cli
add
xor
jp
loop
cli
repz
popa
mov
mov
push
and
cltd
out
popa
fdivrs
mov
and
outsb
leave
shlb
jle
inc
jg
shrl
iret
sub
pop
jno
adc
jmp
jno
movsl
add
add
adc
sbb
mov
lret
push
aad
add
imul
loope
test
sbb
and
dec
imul
iret
sti
xor
dec
ret
xor
cmp
cs
outsb
xor
dec
into
inc
ljmp
movsb
jnp
or
xchg
mov
lods
int
cmp
fcmovnbe
imul
rcrl
mov
sub
insb
push
rcll
push
xor
and
cltd
shlb
jecxz
sbb
jle
sub
pop
stos
xchg
sbb
gs
mov
imul
movsb
add
jle
sub
inc
cmp
imul
int
stc
daa
cmp
lret
sahf
push
xor
sbb
clc
pop
xchg
or
mov
xchg
cmp
jo
stos
mov
mov
jp
scas
xorb
adc
sbb
ds
cmp
mov
xchg
mov
inc
adc
mov
or
ja
sbb
mov
mov
jg
inc
jle
mov
pop
sub
sbb
testl
bound
leave
stos
cmp
sub
add
push
and
ds
mov
clc
mov
mov
sahf
mov
cmp
fsubl
dec
fistl
mov
mov
dec
mov
jl
xor
mov
icebp
push
in
dec
mov
pop
in
mov
and
mov
pop
sub
xchg
xor
dec
icebp
je
and
sahf
adc
pop
sub
pop
xor
pop
in
sbb
cmp
cmp
pusha
adc
lds
cmp
popa
int
pop
push
cmpsl
scas
sbb
xchg
sub
ret
cmpsl
adc
mov
fcomps
mov
cmp
mov
adc
loopne
fdiv
dec
and
sbb
cs
or
lods
push
test
cmp
dec
adc
push
pop
iret
stc
fstpt
dec
cmp
dec
arpl
ja
mov
and
and
insb
insb
inc
sub
cmpsl
ret
mov
scas
inc
jg
and
in
jmp
cmp
or
jge
sbb
xchg
xchg
xchg
imul
xor
in
rol
xchg
leave
push
stos
sub
xchg
jmp
mov
cmpl
xor
mov
in
dec
push
sti
xor
lods
lahf
lea
adc
inc
dec
pop
shlb
pop
enter
ret
and
lods
cwtl
addr16
mov
and
dec
and
push
mov
stos
xlat
inc
adc
out
cmp
lret
jge
adc
fwait
xor
addl
jmp
jecxz
mov
mov
mov
lods
sbb
in
sbb
push
cmp
in
cmp
test
mov
or
dec
outsl
sub
sub
scas
ljmp
ss
cmp
pushf
add
in
lods
push
dec
pop
lock
jno
pop
lods
mov
ja
lock
adc
pusha
sbb
dec
mov
add
test
adc
shlb
xchg
mov
dec
mov
fisubl
gs
xor
adc
add
jp
notb
addr16
lahf
in
fwait
xchg
in
push
jb
jmp
jno
sahf
mov
lea
sti
mov
add
adc
mov
fadds
push
les
nop
mov
cmpsb
push
popf
sub
call
outsl
xchg
dec
lret
movb
sbb
jbe
push
les
dec
int
mov
inc
popf
sbb
sub
jle
popf
int3
mov
outsb
nop
das
push
push
rcrl
sbb
fiaddl
push
ret
pop
imul
int
cmp
in
xchg
push
lea
ret
mov
mov
int
jnp
movsl
jp
and
push
push
push
sub
cmpsb
cmp
add
pop
daa
jo
add
push
imul
or
sbb
js
jbe
jmp
lret
into
lods
int3
or
lds
push
sub
and
andl
out
test
or
shll
cmc
fwait
repnz
mov
mov
hlt
dec
mov
fmul
and
inc
outsl
imul
and
dec
mov
inc
xlat
jno
neg
bound
sub
pop
fdivl
out
inc
mov
pusha
add
pop
mov
scas
shrl
int
xor
rcll
out
mov
daa
cmp
outsb
or
data16
shll
fs
jbe
push
sbb
xchg
mov
mov
gs
leave
and
out
loop
dec
ss
mov
push
mov
add
shr
xchg
mov
orl
aad
mov
sub
push
inc
xchg
xor
dec
pop
jno
icebp
imulb
arpl
cmp
mov
xchg
adc
loope
inc
in
sub
in
lret
repz
fistl
mov
mov
adc
dec
push
xlat
in
pop
push
cmc
or
jae
lret
cmp
sub
mov
add
jae
fwait
ds
ja
sub
in
jb
pop
mov
dec
adc
sahf
cmp
movsb
ja
out
sub
adc
and
test
insl
jge
int3
divb
das
subb
cbtw
jnp
mov
push
ljmp
adc
out
jbe
xchg
sbb
pop
jge
push
xchg
out
cs
aas
push
xchg
les
mov
and
lock
ret
mov
arpl
pop
dec
inc
inc
js
xchg
nop
das
sbb
push
pusha
jno
dec
test
ret
das
pop
mov
adc
mov
adc
ret
rclb
loopne
stos
and
jp
leave
fildll
popa
js
insl
lcall
gs
adc
leave
mov
dec
mov
push
es
add
xchg
dec
cmp
testl
xor
in
lcall
aam
sbb
add
je
mov
push
mov
pop
ret
aas
mov
cmp
pop
mov
es
adc
stc
push
aam
mov
push
rcrb
and
jae
xchg
mov
push
xor
out
sbb
cmpsl
or
dec
imul
pop
shrb
std
dec
push
adc
sbb
ret
push
push
cmpsl
or
gs
sub
mov
and
lods
scas
hlt
fisubs
mov
cmp
pop
jg
lcall
push
cs
sbbb
or
lahf
add
mov
dec
sub
cmp
or
add
lock
mov
adc
sub
nop
rol
ljmp
mov
scas
rclb
out
dec
mov
sub
mov
cwtl
mov
negb
xor
pop
mov
mov
push
cmp
mov
and
repz
enter
mov
test
cwtl
add
or
jl
loop
outsb
nop
jmp
adc
daa
gs
mov
mov
pop
inc
ficoms
xor
inc
int3
jb
nop
aam
hlt
jns
jnp
and
mov
sub
mov
shlb
mov
lods
cmpsb
pushf
ret
fsts
inc
sbb
and
mov
clc
out
pop
push
clc
add
movsb
adc
movb
push
or
ret
fs
jmp
fisubs
test
adc
pushf
dec
and
add
fwait
xorb
int3
jb
inc
imul
jae
aad
sub
rolb
leave
fcomp
push
push
xor
out
xchg
xor
cmp
adc
mov
adc
subl
ja
and
aam
decw
daa
mov
sub
or
scas
lcall
test
popf
mov
mov
xchg
in
pop
adc
mov
mov
jno
hlt
scas
test
sub
jle
inc
mov
xor
mov
leave
xchg
sub
lds
push
xchg
dec
out
sub
cltd
sub
mov
sub
sub
or
push
mov
mov
stos
fcomps
fnstsw
inc
jae
fildll
xchg
into
dec
or
xlat
or
test
call
xchg
fistps
cmp
inc
sbb
xchg
bswap
adc
and
ret
push
jb
mov
jns
jno
add
fwait
mov
jae
fcoms
xchg
mov
jnp
mov
pop
cmp
mov
mov
mov
das
mov
mov
dec
xchg
popa
and
add
push
mov
inc
out
mov
mov
ds
jns
jbe
or
hlt
sub
fcmovnb
stc
sub
push
or
fbld
pop
jecxz
push
insb
cmp
movsl
inc
cmp
clc
clc
ja
xchg
cmp
mov
or
popf
pop
mov
sbb
out
out
and
in
inc
jb
adc
ficoms
and
nop
out
dec
lods
jmp
clc
sub
andb
push
jl
ret
ss
negb
addr16
pop
inc
dec
dec
mov
fldl
stc
outsb
inc
mov
pop
mov
xchg
mov
mov
js
push
cmp
inc
data16
mov
jae
mov
sub
dec
mov
fdivp
dec
pop
out
sbb
lea
lods
sub
jge
adc
mov
mov
out
pop
insb
and
outsb
mov
xlat
jmp
out
jle
mov
outsl
cmp
loop
dec
add
mov
enter
xor
dec
lods
std
inc
test
xchg
mov
repz
xor
sbb
xchg
or
fdivl
repnz
rorb
and
or
int
cmp
cld
icebp
add
mov
call
jns
je
xchg
das
mov
xlat
outsl
adc
mov
and
mov
mov
aam
jg
xchg
jae
xchg
inc
and
cmpsl
icebp
shll
loope
mov
jle
test
insl
int
stos
fidivrs
mov
add
push
fbstp
test
aad
jge
or
aad
fisttps
mov
add
pop
adc
or
add
fsubrl
jge
es
ja
lds
shl
adc
jl
push
sbb
cwtl
mov
daa
mov
fistps
mov
push
mov
fsubp
cmc
inc
cli
fsubl
push
mov
inc
cmp
mov
repnz
into
jo
mov
into
stos
mov
push
loopne
push
push
data16
sub
mov
xchg
stos
popa
lock
sub
sub
and
or
dec
push
lcall
stc
int
push
fnstenv
push
dec
add
sub
cmp
adc
addr16
movsl
add
pop
rorl
add
popa
adc
cwtl
scas
lock
adc
xchg
js
cmc
jbe
inc
adc
aaa
rorb
mov
mov
lods
xchg
in
lds
jl
and
inc
das
cmp
and
enter
lahf
or
cwtl
in
jle,pn
stos
mov
stc
in
xor
sbb
sub
scas
mov
inc
mov
cmc
dec
dec
stc
insl
lret
dec
repz
daa
xor
call
jl
aam
sub
hlt
adc
cmp
in
aas
sbb
push
movsb
fcoml
divl
inc
loopne
sbb
jecxz,pt
ds
and
xlat
xchg
mov
dec
add
movsb
clc
mov
or
cmc
inc
imul
dec
shll
int
push
lea
xor
jno
and
pop
insb
adc
ljmp
imul
mov
add
dec
mov
icebp
scas
lcall
cwtl
je
inc
pop
ret
jge
hlt
fisubs
xchg
mov
imul
adc
sbb
nop
loop
cli
pop
aas
xchg
adc
cmc
jns
or
clc
loopne
roll
inc
mov
sbb
ret
xchg
sub
mov
inc
xor
scas
clc
add
cli
and
std
and
loopne
mov
add
adc
mov
out
int3
cmc
enter
in
shll
jb
out
clc
push
xchg
jecxz
das
inc
aam
gs
rorl
popa
xor
outsb
nop
dec
sahf
clc
aam
in
lret
xor
mov
lods
push
in
gs
push
sub
pop
rclb
pop
sbb
shrb
in
and
rclb
scas
pop
cmp
sbbl
data16
imul
sbb
inc
outsb
rcr
sub
mov
dec
cmp
daa
call
mov
inc
lret
insb
jae
loope
cmp
clc
arpl
xor
imul
hlt
fwait
das
cmpsl
dec
enter
mov
adc
repnz
out
rcr
jns
xor
insb
cli
adcb
inc
scas
adc
scas
fidivl
pop
enter
mov
and
test
jb
ret
jl
cwtl
jbe
sbb
das
ljmp
push
or
or
cli
mov
jge
mov
mov
lods
int
cmpsb
jns
js
loop
sub
ficomps
dec
aad
sub
aam
cld
aaa
out
clc
fsubs
outsb
lret
imulb
fdivrs
pushf
mov
push
movsb
outsl
rcrb
adc
sar
int3
dec
mov
mov
adc
mov
push
hlt
sub
fadds
ret
mov
xchg
mov
addb
in
orb
fcoml
mov
out
add
dec
adc
pop
cmp
out
jae
inc
sahf
mov
movsb
lahf
xchg
shrl
pop
int3
push
mov
inc
mov
jns
push
stos
add
add
sarl
xlat
sbb
test
rorl
cmp
sub
push
popf
jp
jg
orl
cli
jg
popf
test
xchg
imul
pop
add
loope
aas
les
mov
mov
je
fmul
push
push
jnp
loop
jae
scas
push
cmp
cmpl
aas
fnsave
push
testb
ljmp
inc
xchg
icebp
push
add
insb
push
popa
shlb
inc
lds
push
stc
in
adc
outsb
cltd
or
mov
int3
ljmp
pop
out
jo
sbb
sbb
test
in
ja
int3
push
bound
xchg
repz
cmp
scas
incb
or
push
or
mov
ret
cpuid
dec
repnz
outsl
in
mov
inc
fidivrs
mov
lods
and
xchg
add
pop
dec
add
inc
cmp
xchg
in
bnd
out
aam
nop
xchg
jmp
adc
add
dec
fnstsw
add
andb
out
jmp
icebp
popf
ljmp
xchg
dec
ret
daa
sbb
and
xchg
jge
and
add
fimuls
adc
aaa
mov
pop
dec
popa
sub
pop
pop
aam
add
ljmp
lcall
icebp
jmp
insb
out
pop
rcrb
and
xor
repnz
mov
into
sbb
cmc
mov
mov
cmp
fldt
xor
pop
mov
out
xchg
bound
sti
call
sbb
xor
add
jmp
ret
outsl
xchg
cmp
cmp
out
andb
flds
add
es
and
fadds
pop
mov
mov
jl
cld
add
ds
imul
push
incl
pushf
divb
and
or
cmp
jbe
cmp
sub
adc
fcmove
inc
ret
movsl
xlat
pop
jb
gs
cmpb
sbb
jge
cmp
int
pop
xor
xrelease
xor
sti
out
fsubrs
jo
test
add
adc
icebp
fcomps
leave
ja
xlat
or
add
iret
insb
js
adc
sub
mov
xor
sbb
jns
xlat
imull
mov
test
aam
xlat
and
ss
sub
ja
inc
add
jecxz
pop
rclb
int3
insb
and
hlt
aam
inc
add
push
mov
inc
cs
mov
stos
jb
xchg
insl
arpl
dec
repz
mov
jl
mov
fcmovnbe
movsl
addl
or
push
mov
test
adc
mov
in
scas
dec
movsl
fcomps
lods
dec
mov
fldenv
add
cmp
jo
mov
cld
cmp
xor
mov
lock
mov
add
push
push
fidivs
xor
imul
sbb
xchg
sbb
jne
push
imul
popf
dec
fucomip
pop
push
and
jns
dec
outsb
mov
jmp
cmpsl
add
add
xchg
pop
xchg
mov
movsb
int
outsb
mov
scas
popa
out
jmp
mov
mov
je
rcl
and
lret
jge
dec
test
movnti
jns
jge
or
ss
add
mov
add
fsubl
pop
enter
in
fwait
lock
gs
les
outsb
xor
adc
xchg
inc
pop
adc
push
rcrb
mov
rcrb
adc
jp
aam
mov
fsts
inc
bound
xor
dec
int3
pop
sbb
mov
insb
decb
ss
sbb
rorl
je
jnp
xor
fisubl
push
pop
mov
fs
dec
ja
mov
andb
js
shrl
aam
add
ja
cld
ret
pop
es
mov
into
and
xlat
pop
cmp
and
cmp
xchg
addr16
pop
xor
mov
pop
aas
jp
lods
bound
inc
addb
add
push
mov
sbb
mov
add
cs
or
xchg
test
xchg
enter
out
dec
lock
sub
call
jg
data16
cli
mov
or
leave
jo
fwait
jo
push
sub
iret
inc
xchg
mov
hlt
sbb
pop
xlat
sti
out
xchg
dec
push
sbb
cmpsl
test
and
paddsw
xlat
rcrl
xchg
bound
sbb
or
lret
sbb
xor
pop
clc
adc
cs
mov
xor
lahf
out
xchg
and
xor
daa
shrb
mov
inc
push
mov
mov
movsb
dec
xchg
pmaddwd
cmp
or
xor
xor
pop
mov
mov
dec
xor
xor
or
dec
add
add
xchg
dec
fmull
bound
js
mov
mov
cli
dec
hlt
shl
fs
push
pop
in
mov
xlat
mov
sbb
ljmp
or
adc
lods
dec
jmp
loope
leave
fsub
ror
movsl
cmp
popf
push
mov
int3
jb
lret
test
daa
filds
fstpt
lods
movsb
nop
rorb
xor
mov
sbb
fistl
test
arpl
aam
lret
inc
shll
pop
push
in
insb
popf
bound
insb
aas
loop
cmp
in
sub
or
stc
iret
lret
pop
or
movsb
xchg
cmp
jecxz
in
push
lock
dec
cwtl
dec
and
mov
test
sahf
lret
inc
mov
inc
push
sub
push
push
jl
out
mov
stc
adc
gs
sub
push
addr16
or
dec
lret
mov
adc
adc
mov
sbb
mov
popf
dec
shll
ret
ret
jg
dec
mov
cmpl
data16
insb
push
xor
pop
lds
push
test
sbb
mov
std
test
and
lods
dec
std
push
jle
aaa
push
stc
xchg
lock
andl
sub
push
jmp
ret
push
xchg
cmc
adcb
fwait
adcl
xor
mov
mov
movsl
xchg
push
mov
push
add
je
mov
xor
xor
cmp
call
lret
je
jns
mov
mov
cmp
mov
pop
sbbb
mov
jl
sub
mov
aaa
pop
mov
cmpsb
xchg
push
or
mov
jae
sub
int
jo
or
dec
mov
mov
aaa
pop
out
roll
std
fstpt
mov
jg
int3
mov
das
arpl
out
nop
dec
popf
ds
cltd
cmp
imul
push
sub
inc
outsb
movsl
adc
mov
xor
and
inc
gs
push
xchg
aad
sti
je
stos
and
dec
pushf
dec
out
push
lret
enter
inc
mov
stos
jmp
rcll
adc
mov
jnp
sbb
inc
stos
jnp
inc
push
into
scas
pop
cmp
int
and
cmc
and
mov
pop
popa
and
push
and
sarb
dec
fcomi
cli
xor
sbb
fisubs
jl
cmp
lret
popf
cmp
inc
xchg
mov
sbb
push
xchg
mov
push
in
aas
cmp
push
shll
push
lock
scas
push
dec
sub
ret
cli
or
adc
ret
rcrl
in
inc
jecxz
addr16
adc
addr16
pop
gs
or
ret
inc
scas
pop
aas
imul
pop
or
lods
mov
jbe
pop
xor
pop
mov
mov
imul
scas
dec
aas
and
jne
xor
jne
jbe
xchg
cs
mov
fcomps
leave
cmp
mov
repnz
xlat
sbb
sbb
adc
pusha
lret
xlat
das
notl
dec
adc
in
repnz
dec
mov
sbb
stos
aaa
subb
xchg
cmp
push
fdivrs
jno
xor
cld
mulb
das
xchg
add
lret
xor
in
sub
and
lea
popa
scas
adc
leave
sub
mov
sbb
ret
mov
lret
mov
pop
mov
push
out
enter
addr16
cmpsb
pop
or
mov
lret
push
dec
cmpsl
imulb
sbb
dec
xchg
ret
data16
inc
mov
push
sbb
cltd
testl
mov
xlat
mov
xchg
pushf
or
cltd
inc
add
fwait
test
mov
rclb
movsb
or
jno
sbb
dec
pop
jne
adc
test
sub
bound
sbb
cmp
cmpsb
lds
fldt
add
or
or
mov
or
add
mov
lret
test
imul
pop
mov
popa
jo
fisttps
sbb
sbb
leave
or
xchg
jp
rorl
xchg
fidivrl
mov
mov
xor
inc
movsl
cli
out
pop
bound
sub
call
mov
aam
xor
cmp
int
xchg
pop
clc
or
int3
pop
sub
fxtract
mov
cwtl
pop
aas
mov
jecxz
sarl
cmpsl
fldl
push
or
xchg
xor
pop
lods
or
jb
push
sub
inc
adcb
and
mov
lds
cmp
xor
ret
inc
push
mov
fs
sub
shl
dec
shl
stc
add
sub
in
scas
clc
addl
movsb
insb
data16
shll
cli
inc
notl
or
int
jecxz
cmp
mov
fdivl
jmp
adc
lods
scas
mov
or
scas
jl
adc
pop
pop
push
xchg
adc
das
aaa
xchg
jb
cmpsl
mov
jns
xor
adc
pop
adc
ret
test
arpl
fisubs
pop
xchg
in
test
add
repnz
dec
dec
dec
addr16
aad
aad
fisttpll
cmp
cmp
or
jae
push
mov
cmp
pop
sahf
movl
test
int
and
mov
push
js
gs
ficomps
dec
shlb
lock
pop
pop
sbb
xchg
mov
sbb
or
aaa
icebp
or
sub
imul
xor
jl
test
xchg
or
sbbl
sub
mov
cmpsl
xchg
add
lods
sub
cmp
or
and
mov
int
xor
push
push
test
inc
jnp
test
mov
sbb
dec
pushf
or
stc
fisttps
leave
mov
push
adc
int
cmp
rorb
cmp
not
push
or
push
push
insl
add
cmp
gs
adc
nop
inc
add
test
mov
push
pop
rcrl
jecxz
imul
add
inc
or
adc
sbb
push
dec
jbe
push
mov
and
sub
adc
mov
out
mov
pop
scas
mov
adc
add
add
jl
les
iret
stos
scas
cs
int3
sbb
in
xchg
stos
movl
xchg
push
daa
dec
aaa
xor
and
push
ret
nop
and
xchg
nop
xchg
inc
push
movsl
mov
push
mov
xchg
cmp
cwtl
push
jb
cwtl
out
outsl
xor
add
xchg
outsb
and
mov
aam
loopne
xchg
mov
push
loopne
rclb
hlt
cmp
pop
push
adc
push
test
cs
dec
orl
mov
je
push
sub
sub
and
ds
cs
sub
xor
xchg
adc
push
inc
jg
and
xor
test
fwait
sbb
cmpsl
inc
sub
shlb
xor
cld
mov
ficompl
ret
push
sub
stos
mov
outsb
pop
push
mov
aaa
mov
scas
jp
sbb
les
and
mov
sarb
jno
mov
lods
push
xlat
xchg
mov
mov
and
pushf
maxps
adc
cmp
mov
enter
sub
jb
xor
rclb
adc
xor
in
mov
push
push
mov
fstpl
add
jle
imul
psrlq
xchg
outsl
mov
xchg
out
sub
jle
out
in
pop
adc
push
dec
imul
inc
loope
mov
dec
add
in
ds
mov
xor
cltd
jnp
test
sbb
loope
gs
or
out
roll
negb
push
push
xor
jg
cmpsl
pop
push
mov
test
pop
pop
cld
mov
fucomp
jecxz
jp
fmull
mov
imul
or
pushf
scas
aaa
or
and
inc
jnp
add
push
mov
sub
pop
push
scas
inc
xlat
jbe
and
and
in
stos
jne
ljmp
cmc
icebp
jb
push
sub
dec
pushf
pop
fdiv
jmp
enter
dec
pop
pop
pop
fcmovnu
inc
mov
fwait
xor
or
adc
test
jp
or
or
cld
ljmp
fldt
dec
inc
movsl
xchg
idivb
mov
inc
popl
jp
lahf
dec
add
out
cmp
cmpsb
jmp
dec
addb
sub
adc
movsl
sarl
add
push
mov
jecxz
int3
roll
add
aad
ret
dec
test
adc
push
insb
jbe
gs
jnp
xchg
daa
inc
fiaddl
rcll
and
fldenv
mov
addr16
or
pop
pop
mov
or
push
pop
mov
xor
and
and
dec
insl
push
xchg
inc
mov
ret
and
cmc
leave
mov
mov
push
inc
aas
add
xchg
fs
add
mov
popf
lret
push
mov
shll
mov
inc
inc
pop
test
jle
lret
xor
daa
pushf
xlat
arpl
jns
xchg
lret
cmp
xchg
or
add
jl
sub
addb
int
fcmovbe
cmp
pop
xor
mov
push
movsl
call
mov
ffreep
mov
dec
es
jecxz
test
lret
dec
pop
or
clc
mov
dec
mov
push
sbb
cltd
scas
push
cmp
mov
test
mov
in
addb
shr
mov
dec
add
mov
push
add
stos
xchg
inc
xor
sahf
mov
pushf
jmp
inc
js
gs
nop
fldenv
imul
dec
cs
jno
outsl
mov
fistpll
repz
inc
fiadds
cltd
cmp
sub
xorl
or
push
xchg
loopne
arpl
sbb
fsubs
and
push
xchg
adc
mov
and
leave
test
mov
push
and
test
or
fsub
jns
mov
ljmp
inc
mov
dec
fcoms
mov
stos
outsb
mov
dec
cmp
cmpsb
dec
pushf
mov
mov
sarb
repnz
popf
ljmp
in
add
xor
repnz
cltd
xchg
or
movsb
ss
mov
inc
stc
sbb
aas
loop
sbb
fdivrs
mov
lea
in
fsubp
in
mov
xor
mov
xlat
sbb
jp
shlb
test
rclb
test
xor
imul
ficompl
pop
pop
mov
inc
and
subl
out
pop
out
fistps
fildll
mov
clc
or
mov
or
push
cmpsl
jne
adc
fs
mov
lcall
xchg
imul
mov
sahf
jae
lahf
xchg
aam
push
pop
xor
ror
testb
cmp
xlat
push
nop
fsubrl
pop
shrl
mov
sbb
fwait
lods
sub
sarl
mov
sub
push
rolb
push
add
rclb
adcl
sub
add
cmp
pusha
test
lret
or
push
sbb
test
push
cmp
dec
and
mov
and
ret
mov
test
outsb
repnz
frstpm(287
cmp
lret
or
jb
mov
jl
pop
xchg
fidivrl
or
sti
das
bound
iret
scas
adc
pop
sub
fldcw
aad
sbb
fbld
sbb
mov
pop
xchg
mov
adc
adc
jg
adc
jns
outsb
ret
cs
scas
mov
iret
push
and
inc
cltd
push
lret
lods
inc
add
sbb
rol
push
fdivrs
xchg
add
add
mov
lock
pop
bnd
ljmp
ret
enter
push
pop
lahf
sub
mov
inc
lahf
sub
pop
mov
repz
in
iret
add
pop
mov
jmp
lcall
cmpsl
cld
cmpsl
mov
xchg
das
mov
xchg
fcmovu
pop
fwait
out
inc
mov
or
movb
sbb
aas
add
cmpsl
stos
sti
cmp
xchg
pop
subb
lret
daa
sahf
mov
push
aam
mov
out
adc
cld
int
mov
mov
jp
or
xlat
inc
xchg
cmp
jns
lea
aaa
sbb
sti
mov
test
mov
repnz
lret
jp
loopne
or
and
loop
inc
out
push
pop
sub
shl
aad
sbb
mov
cld
pop
mov
mov
jbe
in
lret
loopne
pop
xor
lea
movsl
mov
gs
loope
out
mov
mov
ds
aas
push
test
dec
dec
or
mov
cmc
inc
and
loopne
cmc
nop
fstpt
inc
jg
pop
inc
lret
js
int
jo
adc
mov
dec
adc
out
mov
mov
icebp
cwtl
mov
fstps
into
je
imul
andl
and
into
jl
xchg
scas
loop
adc
orl
cmpsb
sahf
ficoml
lock
icebp
inc
movsl
sbb
add
nop
mov
rcl
xor
fsubs
add
rorb
sub
xchg
in
arpl
cmpsl
jb
cmp
pop
mov
add
jne
dec
js
dec
and
mov
push
pop
mov
dec
cltd
loop
shl
jl
stc
test
xchg
icebp
adc
dec
pop
xchg
insl
and
pop
push
pop
and
mov
cmp
movsb
adc
mov
call
push
stos
pop
or
inc
jl
fs
inc
push
dec
lods
xor
aam
adc
incb
sar
repnz
dec
sub
andl
mov
xor
jb
xchg
or
mov
lods
pop
shr
or
pop
ret
aas
push
test
pop
pop
push
popa
fcmove
lcall
xlat
js
icebp
ja
pop
xor
ja
insl
xchg
outsb
bound
imul
outsb
inc
mov
push
in
sahf
inc
in
fwait
xchg
fnstenv
jl
cltd
loopne
or
mov
std
das
popf
pop
mov
ret
mov
and
sbb
out
lock
dec
outsb
jns
mov
ret
dec
mov
jnp
imull
pop
mov
xlat
stos
or
sub
cmpsb
mov
pop
pop
or
aaa
scas
mov
pop
mov
mov
adc
in
lret
adc
push
hlt
lahf
int
shlb
dec
arpl
jne
pop
lret
inc
jecxz
addb
xlat
push
scas
cmp
push
and
push
ret
jp
and
sbb
js
je
mov
daa
mull
lods
xor
dec
mov
aam
adc
add
sbb
and
push
add
push
leave
cmpsb
and
addr16
stos
hlt
xchg
fisttpl
push
mov
jns
cmc
js
lock
pushf
testb
test
sub
sbb
mov
jmp
fbld
test
inc
and
ficoms
mov
bound
push
mulb
mov
push
test
xor
pop
lret
mov
sub
xchg
cmp
call
daa
dec
dec
push
pop
mov
and
jno
cmp
cmp
pushf
dec
add
mov
mov
sub
jp
loopne
rol
dec
jp
jecxz
fnstsw
add
cmc
stos
cltd
or
test
cmp
sbb
mov
mov
or
cmp
test
mov
and
daa
andb
test
mov
and
sbb
pop
push
or
and
mov
fiadds
shll
adc
dec
fisttpl
ja
jae
pop
sahf
adc
adc
pop
out
loop
mov
sub
pop
mov
lret
mov
shll
js
sbb
xor
xchg
icebp
jecxz
rcll
add
fbstp
mov
mov
add
cmp
adc
sub
mov
pop
mov
pop
leave
or
insl
aad
fcmovnb
out
and
jbe
ljmp
test
pusha
bswap
cltd
mov
lds
mov
mov
aam
mov
pop
pop
popf
in
aad
push
inc
sahf
scas
rclb
push
mov
xor
cmp
add
xchg
test
push
addl
push
out
mov
mov
inc
mov
jp
adc
push
rcl
xchg
jae
dec
push
cs
fwait
sahf
cli
inc
in
cmp
jne
jnp
rcl
pop
cmp
icebp
inc
inc
mov
mov
mov
adc
icebp
into
ret
pop
pop
frstor
push
push
inc
mov
xchg
pop
pop
push
sbb
lret
lahf
pop
in
cmp
das
rcll
push
pop
mov
ss
mov
sub
scas
or
fistps
sub
fprem1
int
push
cmp
movsl
jl
lcall
mov
in
mov
or
rcrb
out
jno
cltd
mov
lret
aad
mov
or
test
subl
vaddss
ds
adc
and
jle
in
pop
inc
lods
jecxz
mov
jge
inc
push
inc
cld
repnz
cmp
rorl
shll
push
mov
push
jo
mov
mov
and
movsb
push
test
mov
stos
mov
loop,pt
adcb
in
mov
pop
aas
ret
mov
adc
xchg
push
mov
push
popf
popa
pop
bound
vpsraw
adc
pop
mov
sti
or
nop
jne
arpl
aad
ret
dec
push
rorl
push
data16
jns
mov
adc
sub
fisttpll
adc
and
ficoms
xchg
jo
aad
cmp
jg
mov
jae
test
popa
jae
push
mov
xlat
push
mov
test
sub
jmp
sbb
sub
in
push
sbb
push
dec
mov
cmpb
jnp
imul
popa
fisttps
aaa
push
mov
rcr
shlb
add
fnstsw
mov
std
and
xor
mov
es
bound
add
jne
int
ja
mov
sub
ret
or
int
inc
shl
lods
push
jl
push
or
lret
sub
insb
subb
roll
cvttps2pi
jp
dec
insl
movb
xor
rclb
cmc
loopne
mov
outsl
enter
aaa
dec
add
mov
int3
or
adc
and
pop
adc
leave
mov
inc
pop
out
push
mov
adcl
jp
or
movsb
adc
sbb
inc
lret
je
js
mov
imul
and
mov
rcrl
sahf
cmc
jbe
pop
icebp
ficoml
mov
dec
push
ss
xchg
popa
in
inc
jl
pop
jg
push
push
mov
fdivl
and
cld
cltd
cwtl
xlat
ljmp
cmp
sub
cltd
mov
aad
sbb
cmp
or
testb
xchg
adc
je
movsb
adc
mov
ret
adc
adc
lahf
loope
pusha
std
inc
in
and
dec
lock
sub
xchg
xor
push
sbb
xchg
out
mov
xchg
and
lcall
shlb
sub
insb
data16
mov
cmpsb
cmp
mov
fdivr
cmp
outsb
loopne
sub
cwtl
mov
imul
lret
lret
nop
xor
dec
repnz
inc
iret
stos
mov
xchg
repz
push
mov
dec
add
stc
leave
gs
cmpsb
fwait
js
adc
mov
cltd
fildl
pop
mov
cmp
lret
insb
push
inc
pop
test
xor
inc
mov
and
lret
mov
xchg
pop
sbb
cli
jp
in
lea
test
stc
sbb
pop
or
jmp
mov
into
cld
mov
inc
faddl
or
xor
jle
or
daa
inc
and
cld
fwait
lahf
popf
sbb
out
arpl
iret
loope
data16
insb
mov
out
jns
jbe
movsb
mov
push
js
mov
loope
push
xchg
inc
sbb
mov
jle
inc
sub
dec
hlt
js
xchg
lret
and
test
out
movsb
inc
jg
sub
out
add
or
int
sub
sarl
xchg
push
aad
les
add
mov
rorl
xor
ds
jb
cmp
sti
pop
stc
xor
rcr
scas
ret
sbb
cs
jp
daa
aaa
ret
mov
push
mov
mov
int3
cld
xor
shll
jns
sbbl
jb
add
popf
mov
mov
or
or
pusha
mov
push
xchg
adc
mov
fs
insl
in
mov
xchg
scas
stos
in
loope
movsb
fistl
xor
lock
int
xor
aaa
orl
fadds
xchg
adc
xchg
push
cmp
movsb
cwtl
test
pop
and
mov
lods
lock
mov
mov
pop
push
jnp
ja
lock
and
gs
cld
jbe
xor
movsl
out
test
cmpsb
lret
in
pop
cld
mov
fs
int3
mov
mov
dec
mov
popa
xchg
pushf
sbb
jp
xlat
jbe
xor
popf
pop
sub
shlb
aaa
mov
add
xor
xor
jg
aad
daa
inc
fwait
adc
scas
or
dec
in
fs
pop
loop
test
and
mov
mov
ret
xchg
add
push
out
cmc
xchg
mov
cmp
jne
inc
and
dec
les
mov
fstps
sub
pop
cli
xor
push
lahf
mov
insl
xor
arpl
xchg
mov
xlat
or
insl
lcall
mov
sarl
add
iret
jns
cmp
mov
cmpsl
cmp
mov
repnz
jnp
jb
push
pop
or
lock
jb
mov
inc
ja
test
scas
loop
mov
lock
mov
jecxz
or
mov
push
daa
dec
scas
and
xlat
or
xchg
xchg
mov
push
mov
fldt
mov
inc
pop
iret
int
mov
xor
and
gs
and
out
dec
aad
js
jmp
test
xchg
jns
jne
xor
inc
jmp
mov
movsl
cmp
and
scas
mov
pop
loopne
cli
js
inc
rcll
pop
sbb
jbe
sub
mov
cli
arpl
stc
imul
push
loopne
pop
mov
add
jne
int
mov
outsl
aam
mov
rolb
cmp
mov
insb
cmp
shr
dec
cmpb
mov
or
mov
dec
fiaddl
js
push
fsubrp
imul
sbb
add
out
lods
xchg
es
stc
cmp
push
push
inc
adc
pop
xor
mov
enter
xchg
inc
sti
or
or
jg
les
xchg
decb
pop
imul
mov
fisttpl
loop
rcl
es
lahf
mov
xchg
les
bound
out
sbb
jbe
enter
or
xor
pop
js
dec
stos
lret
add
nop
mulb
pusha
arpl
jns
push
inc
dec
repnz
adc
mov
js
jmp
mov
scas
mov
in
int
rcrb
xchg
jp
fcompl
mov
cmp
fcompl
aam
mulb
cmc
and
pop
iret
mov
sub
cld
test
daa
add
test
mov
icebp
dec
es
shl
xor
jnp
repz
mov
cs
jmp
pop
ss
les
mov
and
sub
jecxz
daa
push
cmc
cmp
imul
mov
scas
leave
scas
dec
orb
add
sbb
sahf
dec
mov
cli
fnstenv
je
cmp
dec
fwait
jge
idivl
mov
jae
insb
pcmpgtd
pop
xchg
out
inc
mov
mov
sub
aad
and
add
fyl2xp1
push
inc
imul
nop
pop
adc
out
ljmp
icebp
push
mov
fs
mov
adc
mov
push
mov
sbb
mov
sbb
pusha
mov
jecxz
cmp
imul
outsl
sbb
test
adc
sahf
pop
and
mov
xor
ja
fisttpll
testb
cmpsb
mov
fildl
cli
inc
int
idivl
dec
dec
xchg
push
icebp
out
jnp
loopne
xchg
mov
add
stos
dec
lock
loope
dec
leave
jno
test
rcll
aad
outsb
mov
xchg
jnp
or
test
aaa
gs
gs
add
and
mov
je
scas
mov
insb
insb
jns
sub
fwait
mov
mov
mov
xchg
mov
int
divps
sub
out
mov
dec
stc
fcomps
enter
jne
xor
outsb
out
cmpl
lods
rorl
mov
sub
notl
dec
xor
cmc
pop
inc
add
testl
inc
in
imul
dec
cmp
add
and
mov
test
dec
xor
pusha
sub
loope
and
xor
shrl
std
add
push
push
cli
loop
sbb
adc
mov
inc
stc
or
loope
arpl
insb
leave
xor
test
outsb
sbb
xchg
stos
push
push
int
lret
sub
ljmp
loop
pop
mov
mov
adc
scas
xchg
inc
frstor
mov
in
ds
and
xchg
jle
shrl
jg
enter
pusha
sub
sbb
pop
push
xchg
lods
dec
out
out
scas
mov
push
dec
push
adc
sbb
and
mov
and
fcmovnbe
xor
sqrtps
popa
push
mov
fistps
push
cmp
sbb
push
mov
pop
test
add
inc
cmp
scas
mov
jge
nop
add
push
or
cli
mov
pop
dec
mov
cs
out
fwait
mov
popa
dec
mov
sbb
rcrb
leave
inc
lods
mov
or
imul
in
inc
rcr
stos
inc
cwtl
movsb
insb
pop
cmp
das
push
dec
into
loop
sbb
add
stos
loopne
rcll
cs
mov
mov
xchg
mov
lea
loop
in
xchg
xor
mov
jne
or
cmp
mov
rcll
add
xchg
pusha
hlt
adc
rcll
pop
add
aas
jne
mov
add
dec
jge
dec
stc
add
mov
push
int
hlt
popa
xchg
mov
aaa
mov
push
push
insl
adc
push
shl
lea
jp
lcall
xor
adc
mov
outsl
mov
inc
xlat
jp
pop
dec
leave
xchg
sbb
add
rcr
test
mov
lahf
test
sub
adc
push
inc
in
pop
int
adc
outsb
aad
or
in
int
jge
cmp
or
dec
jle
loopne
scas
mov
rcrl
bound
out
xchg
fsubr
pop
movaps
enter
out
out
ja
mov
ja
xor
add
dec
cmp
mov
nop
dec
add
in
mov
adc
lahf
repnz
cmp
inc
fisttps
or
mov
loopne
inc
lret
gs
stos
dec
dec
adc
fwait
mov
push
rorb
rol
jne
inc
data16
fmull
bound
jno
inc
sbb
mov
jmp
iret
leave
popf
cmc
mov
push
lods
dec
dec
jle
mov
dec
cmp
in
cltd
nop
outsb
ja
cmp
push
cld
push
test
mov
rcr
push
mov
xor
inc
add
flds
mov
es
pop
add
add
adc
jbe
xor
int3
daa
dec
inc
cltd
sbb
xor
dec
push
call
dec
xor
lds
and
mov
cmp
or
daa
push
jmp
xchg
lds
sub
std
testb
mov
ret
cmp
or
loopne
loopne
subb
inc
xchg
loopne
xchg
sub
stos
xor
push
pop
dec
mov
dec
pop
pop
lret
jmp
xchg
adc
aaa
mov
inc
fisubrl
and
mov
vpunpckhdq
or
in
cmc
xchg
xor
test
mov
mov
adc
js
inc
xchg
dec
bound
pop
loop
xchg
filds
sbb
scas
and
mov
jns
ljmp
lds
hlt
es
enter
add
adc
jl
sbb
fwait
cmp
lret
jae
and
mov
jns
dec
xor
xor
enter
cmpb
clc
shr
mov
cltd
jae
rcrb
stos
mov
mov
mov
scas
fwait
out
stos
xor
lods
inc
pop
add
mov
outsb
je
cmp
adc
mov
cmp
mov
mov
and
inc
sbb
or
mov
push
ret
or
bound
add
das
aam
mov
jb
test
fdivrl
dec
dec
cmp
shrb
push
pop
add
and
mov
mov
loopne
cmp
and
cmp
cmp
jmp
mov
mov
call
cld
jo
jne
popf
or
push
pop
fadds
pop
xor
jle
jmp
mov
adc
mov
in
aaa
repnz
pop
dec
ret
imul
leave
jno
in
mov
lret
push
inc
imul
lea
jle
push
fwait
lret
jb
mov
cmp
cld
pushf
ss
ret
fbstp
sbb
mov
inc
add
dec
push
add
adc
loope
pushf
add
movsb
sub
jmp
inc
dec
lret
xor
js
sub
ud0
xchg
or
push
repnz
sarb
test
and
insb
stos
movsb
mov
mov
lods
scas
movsl
add
fbstp
aaa
mov
inc
inc
jl
jno
pusha
jp
lret
stc
mov
xor
push
fldcw
shr
les
mov
mov
or
lea
and
push
out
adc
sub
dec
mov
dec
xchg
pop
mov
mov
stos
xor
and
ret
push
push
mov
sub
test
push
xor
mov
add
outsb
scas
fisttps
cmpsl
pop
ds
popa
sub
adc
ja
mov
les
sub
pop
ds
insl
adc
orb
inc
push
sub
mov
fsubp
and
stos
sub
loop
mov
ja
pop
lock
xchg
mov
jo
mov
add
das
scas
jnp
ja
adcl
inc
pop
in
fwait
andb
mov
cltd
pop
mov
stc
int3
jl
sarl
mov
jge
or
lcall
mov
sbb
hlt
cmpsl
sbb
mov
pop
add
or
mov
std
pop
xchg
sub
int
mov
lods
add
ds
pushf
xor
push
dec
mov
sub
xor
icebp
loope
dec
je
aam
push
aas
shrb
mov
xlat
js
cmp
lods
fnsave
pop
or
xor
shl
dec
inc
movsl
xchg
cmp
rorb
cltd
sub
repnz
and
ret
lahf
jno
inc
adc
inc
dec
scas
xchg
lea
inc
sbb
enter
sbb
pop
jbe
dec
sbb
adc
ficomps
in
mov
popa
arpl
jg
xor
rcr
mov
shlb
arpl
lock
insb
mov
cld
cmp
mov
test
popa
pop
mov
icebp
mov
or
inc
or
das
cli
incb
and
in
fisubl
outsl
mov
pop
inc
imul
insb
mov
mov
push
lret
loop
sub
jnp
lock
jge
push
orl
insb
sbb
leave
pop
in
dec
rcrb
and
inc
loop
sub
or
outsb
scas
je
ja
out
mov
inc
jle
loope
xchg
sbb
idivb
xchg
pushf
and
incb
rcr
xor
outsl
lea
adc
stos
addl
mov
dec
cmp
mov
stc
dec
sahf
jg
mov
pushf
xchg
ret
dec
sbb
dec
push
std
lea
pusha
dec
sub
jl
or
add
rcr
imul
shl
mov
test
push
ret
ret
pushf
pop
or
or
dec
in
subb
mov
sti
push
sbb
inc
cmp
out
add
out
outsb
rcr
fldenv
imul
lds
and
push
and
xlat
cmp
mov
push
inc
testl
lods
push
cmp
insb
mov
lods
data16
cmp
adc
pop
push
andb
add
pop
shrb
in
dec
and
sub
dec
xchg
mov
fdiv
popf
dec
push
stos
imul
push
pop
cmpsl
and
sti
inc
push
cmp
xlat
roll
jno
add
xor
sarl
inc
shrl
arpl
sub
fmul
bound
sbb
leave
imul
mov
mov
mov
lret
call
sub
and
xchg
mov
dec
lahf
in
addps
cld
cld
aam
in
inc
ss
hlt
xchg
xchg
aas
test
dec
lods
dec
or
push
mov
pop
or
pop
cmp
jecxz
xor
cmp
out
adc
rol
mov
inc
pop
dec
jno
leave
or
arpl
fidivrl
fldl
adc
jg
jge
pop
dec
jo
ret
test
and
jo
xchg
sahf
xorl
push
cld
pop
movsb
and
rol
cmp
jae
mov
loop
je
fdivrs
pop
loopne
jbe
dec
testl
repz
xchg
inc
cwtl
test
or
in
and
test
pop
dec
cmp
adc
xchg
repz
xchg
xchg
das
xchg
jo
jl
bound
and
fsubrs
push
add
cmc
es
arpl
or
xchg
push
aas
shrl
fcmovnbe
mov
or
push
test
idiv
int
sbb
or
fdiv
das
rep
test
enter
es
ret
in
das
ja
sbb
sti
xor
mov
add
mov
out
repnz
xchg
mov
jae
jmp
add
dec
mov
inc
test
mov
addr16
and
fs
cmpsl
mov
inc
mov
adc
popf
cltd
inc
pushf
ljmp
cmp
mov
sahf
ds
sbb
fsubrs
xchg
push
fwait
pop
pop
jbe
imul
jbe
mov
insl
mov
sbb
push
dec
jmp
fistpl
nop
push
inc
lods
pop
pusha
das
int
fdivr
shll
clc
mov
hlt
repnz
negl
adc
inc
jbe
sbb
xor
mov
hlt
ljmp
leave
push
insl
mov
sbb
popa
lods
out
xor
sub
mov
jle
lds
pop
out
add
add
xchg
push
sub
pop
jno
xchg
inc
insl
cltd
icebp
sarl
call
fcoml
out
fcmovnu
or
lret
in
sub
lock
xor
ret
out
daa
xchg
mov
fmulp
xchg
pop
add
push
add
inc
inc
push
and
iret
int3
add
mov
pop
scas
mov
mov
ljmp
sbb
js
adc
sub
cmpsb
hlt
dec
test
adc
int3
mov
xor
fnstsw
cwtl
cld
add
sub
sub
pushf
ret
cli
mov
mov
push
idivl
mov
mov
add
dec
test
lods
lret
push
jns
sub
sbb
sub
add
out
out
loop
mov
inc
imul
cmp
out
xchg
inc
jae
das
das
adcb
sub
bnd
rorl
repnz
xchg
mov
dec
sti
in
add
cmp
scas
lods
pop
pushf
ljmp
loop
mov
mull
inc
mov
and
jp
pop
loope
lock
jg
xorl
lods
cmp
dec
jecxz
adc
gs
sub
jecxz
imul
or
int3
mov
push
cld
sbb
dec
and
sub
xor
cmpsb
or
call
mov
pushf
mov
rclb
pop
mov
insb
cmp
ret
pop
popf
xor
in
jbe
pop
lahf
inc
sbb
inc
pop
out
pop
add
jle
jne
inc
cmp
adc
stos
xor
sar
sbb
icebp
stos
cld
test
in
cmpsl
jmp
sbb
addr16
in
lcall
lahf
and
jp
mov
out
leave
inc
std
andb
adc
ftst
push
outsb
jp
or
ret
cli
bound
in
or
aad
shl
leave
dec
icebp
lret
je
lret
adc
sbb
ret
out
cld
jns
cmpsb
pop
and
fisttps
bound
stc
std
jne
gs
push
xor
sarl
jge
stos
mov
and
imul
pop
push
lods
sub
or
pop
outsb
movsb
int
test
pop
cmp
pop
stc
stos
inc
gs
dec
mov
lea
imull
into
add
mov
movsb
push
cmp
arpl
mov
xor
dec
mov
adc
lock
jbe
or
push
lahf
sub
add
and
inc
das
testb
fadds
dec
imul
sbb
xchg
stos
das
test
insb
out
jmp
sbb
xchg
fwait
testl
dec
test
fdivs
sub
dec
enter
negl
int3
jne
mov
or
jmp
rcrl
insb
ljmp
out
mov
test
in
ja
into
les
fisubrs
adc
mov
std
mov
hlt
sbb
pop
lret
cmp
stos
mov
jecxz
jae
imul
test
fildll
sbb
hlt
out
mov
aaa
nop
in
cmp
outsb
je
movsl
pop
shl
mov
push
cmp
pushf
push
mov
jmp
aas
inc
jbe
int3
adc
jae
cli
pop
add
and
mov
mov
mov
lds
lods
movsb
mov
xor
shrb
mov
xchg
inc
cmp
imul
scas
sbb
mov
mov
out
or
inc
sbb
pop
nop
dec
lret
clc
mov
cwtd
dec
cltd
push
loope
xor
lock
ficoms
stos
and
inc
push
xorl
pop
ficoms
in
adc
sub
add
jo
mov
mov
mov
aad
out
mov
mov
pop
add
pcmpeqb
mov
out
lock
pop
and
pop
andb
mov
jge
mov
and
ja
and
fimuls
dec
fsts
shll
in
pop
cltd
shrl
ret
aas
mov
mov
call
sub
stos
sbb
mov
lret
repz
aam
mov
sarb
mov
ret
mov
add
push
cmpb
push
jmp
cltd
mov
lods
aas
cli
mov
clc
rcr
repnz
repnz
int3
xchg
mov
decl
pop
xchg
test
mov
ja
pushf
lret
dec
call
sub
daa
sub
mov
call
mov
mov
out
leave
push
filds
pop
das
fnstsw
test
adc
lds
and
jmp
jg
arpl
and
mov
xchg
pop
mov
out
jp
xor
push
push
mov
mov
mov
sub
jb
xchg
outsb
or
or
dec
roll
roll
ss
cmp
or
fnstenv
pop
mov
sub
push
inc
loopne,pn
gs
movsl
sub
out
shrl
fiaddl
dec
bound
fadds
fdivs
in
js
popf
popa
loopne
xchg
add
hlt
jg
scas
push
mov
jne
lods
enter
mov
push
adc
pop
jp
out
mov
mov
add
enter
lcall
adc
ljmp
jne
sarb
or
xchg
xchg
movsl
incl
pop
mov
xlat
insl
mov
or
outsl
adc
push
adc
inc
mov
jnp
xchg
rclb
mov
lds
dec
loopne
lea
insb
andb
jo
in
test
lds
mov
add
jmp
adcb
add
mov
and
aas
push
int3
pop
dec
stos
adc
and
jmp
adc
add
sbb
xor
shlb
je
mov
pushf
div
data16
es
jg
pop
add
adc
jno
fdiv
sub
mov
cmp
xchg
test
fistpl
aaa
mov
push
das
in
mov
in
pop
bound
aas
not
mov
lods
add
jge
adc
rclb
xchg
and
mov
into
ds
mov
test
xchg
jb
add
cmp
push
mov
mov
jg
dec
xor
cmc
sub
aad
and
push
mov
cmp
sahf
xchg
lock
cmp
push
int
jae
xchg
mov
out
clc
sti
xchg
aam
lea
lret
outsb
nop
mov
leave
sub
addl
out
cmp
pop
rorl
popa
inc
sub
jno
hlt
sub
test
lds
and
ret
mov
jl
pop
adc
or
fcmovb
cmp
adc
test
cmp
mov
imul
rorb
xlat
push
cs
bound
mov
push
pop
pop
mov
jle
notl
out
adc
mov
jns
test
mov
xchg
clc
pusha
lock
pop
mov
jmp
sub
xchg
roll
sbb
sarb
into
adc
xchg
insb
add
mov
ret
outsl
ret
out
adc
jae
sbb
cmp
arpl
ficompl
fsqrt
mov
adc
push
in
pushf
pop
lods
jns
pop
iret
into
enter
cmp
imul
sub
fwait
call
outsl
xor
arpl
mov
psrlq
add
arpl
aas
dec
inc
sub
sub
xor
in
cld
das
out
sbb
adc
es
and
push
inc
out
outsl
jns
dec
push
pop
mov
mov
or
xchg
ret
xorb
sahf
push
or
cmp
jb
push
push
sub
repnz
adc
xor
pop
rcll
inc
stos
cmpsl
cpuid
cmpb
inc
xchg
xchg
push
ljmp
subb
mov
mov
ljmp
xlat
scas
daa
sbb
mov
aam
enter
fwait
sub
jno
fildll
addr16
rorl
loopne
push
test
sub
rorl
pop
ja
push
mov
add
out
push
sbb
aaa
jp
push
ja
xor
inc
ljmp
mov
cmpsb
mov
cwtl
cmc
mul
or
add
stos
movsb
es
cmp
sub
sbb
mov
outsb
out
fdivrp
sub
std
lea
gs
jle
mov
out
outsl
pop
pop
push
mov
pop
xchg
dec
sbb
inc
and
sbb
out
js
cs
mov
call
cmp
mov
rcl
add
and
push
cmpsl
xor
push
push
jnp
jg
lcall
pop
jbe
ljmp
inc
xchg
mov
inc
out
sub
dec
mov
xlat
dec
push
xchg
mov
ds
xchg
hlt
cmp
out
dec
mov
push
jbe
fisubs
lds
jecxz
neg
jl
mov
mov
mov
or
mov
shrl
cmp
das
mov
jmp
daa
jns
loope
mov
xor
cmp
mov
fisubrl
xlat
rcll
test
idiv
mov
icebp
adc
pop
aas
stos
addl
scas
or
lcall
popf
mov
mov
pop
mov
pop
ret
outsb
inc
adc
mov
aas
stos
jmpw
adc
into
sbb
scas
ror
cmp
inc
insl
shrb
scas
fldl
or
push
or
xchg
aad
ja
dec
popa
int
mov
lods
pop
xchg
shlb
or
cld
mov
xchg
or
lods
jbe
sub
sub
cli
int3
insl
dec
dec
xchg
loop
or
loop
inc
and
addb
and
gs
pushf
xor
movsl
push
pusha
loope
or
outsb
cmp
rclb
mov
pusha
sbb
and
popl
sti
jnp
and
pop
out
or
das
js
pop
jl
mov
jge
shlb
cmp
or
enter
iret
cmpsb
mov
xor
xchg
xor
incb
testb
repnz
xchg
cmp
mov
addr16
outsb
jmp
mov
ja
nop
or
jne
popf
scas
lock
enter
cmc
or
in
pop
repz
sub
inc
push
sub
sar
jg
ss
nopl
pop
mov
sahf
jp
push
enter
sub
xor
jle
cmpb
je
jbe
jp
pop
pop
test
push
jbe
mov
push
xlat
mulb
mov
loopne
sub
loopne
jge
fmuls
adc
enter
mov
sub
shll
sti
dec
nop
add
adc
inc
and
bound
mov
pop
jb
mov
pusha
cmp
addr16
fcomps
and
adc
imul
xchg
inc
cmp
push
xor
inc
mov
in
lahf
sti
sbb
inc
xchg
lahf
adc
jno
cmp
xchg
pop
mov
out
push
lcall
dec
xchg
cmp
or
mov
mov
lea
jae
lock
movsl
sbbb
mov
jo
push
icebp
or
test
add
ret
fldlg2
xor
pop
sahf
push
popa
scas
sub
into
cs
sub
jmp
scas
rcll
sbb
xchg
xor
pop
xchg
push
out
mov
mov
test
dec
je
xlat
jg
push
mov
cwtl
xlat
jne
lcall
stc
cltd
pop
adc
push
fwait
jg
cmp
sub
pop
sti
aad
cltd
scas
xor
xchg
cmpsl
cli
mov
sub
jo
enter
leave
int3
lods
scas
jle
mov
bound
daa
push
sub
cmc
push
mov
adc
hlt
xchg
xor
dec
nop
jmp
cmp
dec
movsl
push
mov
and
out
mov
gs
jg
pop
dec
dec
sub
adc
adc
xchg
pop
es
mov
mov
leave
rorl
xor
test
mov
test
stc
add
stos
ds
mov
fscale
sbbl
lret
xchg
loop
cwtl
cmp
std
inc
aad
xchg
rdmsr
lcall
sub
pop
jl
xor
fdivs
sub
or
mov
rcr
sti
pop
std
scas
pusha
add
mov
mov
mov
xchg
stos
or
leave
pusha
test
cmp
ret
push
sti
mov
out
mov
stos
mov
adc
fldenv
xor
and
and
xchg
int3
push
testl
mov
and
jne
es
push
and
stos
inc
sub
dec
and
mov
call
cmp
or
sub
jg
pop
in
jnp
jnp,pn
mov
mov
jnp
push
and
loop
inc
iret
mov
mulb
iret
mov
ret
fbld
ljmp
pop
pop
add
pop
xchg
jmp
js
pop
push
pop
fs
mov
repz
cmc
in
mov
fisttps
dec
pusha
or
addr16
mov
jbe
fwait
sub
mov
aaa
xchg
int
nopl
mov
ret
leave
mov
sbb
mov
into
push
es
mov
mov
push
lock
cld
mov
ret
cs
jbe
int
push
pop
mov
int3
push
cmpsl
push
sub
leave
xchg
or
xorl
aas
sub
imul
pop
lods
add
rcrl
repnz
mov
das
iret
sub
inc
movsl
or
dec
ret
inc
push
aam
out
push
imul
xchg
out
sub
dec
xor
push
into
int
and
subl
stos
xchg
dec
pop
int
push
int3
push
mov
js
mov
lods
cmpsb
add
mov
out
dec
in
outsl
jecxz
jl
mov
bound
sbb
popf
push
ret
fisttpll
push
pop
xor
mov
jo
sub
leave
sarl
add
enter
pop
inc
inc
adc
inc
test
std
inc
test
adc
cltd
addb
and
adc
mov
adc
push
les
fs
dec
jno
mov
aaa
push
xor
js
push
sbb
loop
xchg
inc
adc
out
dec
dec
dec
and
mov
and
and
push
sub
jns
ret
lret
mov
mov
pop
stos
cmp
adc
jns
jb
loop
fisubs
jbe
shll
rclb
arpl
into
mov
push
in
or
lret
negl
loope
nop
aaa
inc
call
xchg
test
inc
hlt
clc
adc
fsubrl
xchg
push
dec
mov
cmpsl
mov
loopne
hlt
xor
xchg
dec
push
or
mov
adc
out
jecxz
in
sub
mov
and
sub
cmpl
xchg
adc
cmpsl
adc
popf
xchg
in
fxch
dec
imul
hlt
lret
cli
dec
push
out
xchg
adc
clc
ds
psadbw
imul
pop
lret
insl
dec
sbb
add
cltd
pushl
pusha
pop
push
mov
pop
inc
push
sbb
add
sub
out
push
andl
cmp
jbe
lods
and
push
push
mov
xchg
lods
rcrl
dec
mov
scas
add
cmp
mov
rorl
rorl
mov
stc
lret
lods
lods
ret
add
in
lds
insl
stos
loope
mov
xchg
int
pop
ficoml
lret
add
adc
sub
and
popf
adc
popf
pop
incb
pop
pushl
xlat
ret
inc
cmp
mov
in
lds
sahf
mov
shrl
push
and
jl
fimull
push
xlat
aas
daa
stc
add
jmp
cmp
fdivrs
xor
jo
pop
loopne
and
xchg
xor
hlt
xor
push
dec
aam
fldenv
xor
cwtl
nop
push
mov
xor
inc
dec
sub
xchg
inc
dec
pop
dec
js
enter
pop
or
or
xor
cmpsl
fsubp
notl
into
and
cmp
in
xchg
mov
xchg
xlat
add
mov
cmp
pop
les
jecxz
rcrb
lock
repz
clc
hlt
dec
jmp
sbb
pushf
push
push
cmp
test
rorl
cmp
mov
dec
cld
cmp
push
sub
jne
das
push
movsl
or
inc
cmp
mov
push
jge
fadds
jne
je
cltd
inc
xor
jo
repz
rorb
cltd
adc
es
push
cmpsb
ja
push
adc
mov
inc
lods
add
sti
movsl
and
sub
ror
arpl
or
or
sarl
sub
pop
cmp
sub
imul
pop
push
daa
cmc
movsb
sbb
inc
aas
xchg
insl
in
cmp
in
jnp
insl
hlt
fldt
jge
and
out
push
les
add
jl
nop
cmpsl
pop
outsb
mov
sub
push
lea
jge
push
out
shrb
or
les
inc
sbb
jecxz
mov
adc
mov
or
and
mov
xchg
xor
add
test
cltd
jl
adc
pusha
mov
int
dec
jle
dec
or
lods
cli
dec
aam
and
jecxz
loopne
inc
std
inc
dec
gs
bound
into
push
xchg
push
shll
xchg
aas
or
xor
rorl
lock
sbb
jp
subl
cmpsl
test
mov
push
lock
xchg
enter
addb
push
lcall
ss
cmpsb
push
and
push
xor
test
js
sub
rcrl
mov
out
imul
test
mov
arpl
dec
js
inc
pop
xor
or
in
jbe
popl
mov
xchg
mov
pop
mov
inc
cmp
lcall
mov
cmc
pop
inc
dec
mov
push
fs
inc
xchg
dec
mov
fnstenv
dec
xchg
mov
or
aaa
pop
int
jl
mov
fisubl
fyl2xp1
dec
daa
adc
ja
insl
ljmp
out
push
sub
xor
add
loop
subb
sahf
jmp
jecxz
adc
add
gs
test
mov
fadds
jae
outsb
or
adc
dec
sub
jg
cmp
fldl
test
rclb
xchg
jnp
aam
insl
inc
data16
icebp
mov
sbb
mov
out
adc
nop
loope
cwtl
test
int3
movsb
xchg
fsubrs
inc
jo
cmc
xchg
cmp
arpl
mov
dec
push
outsb
pop
cmp
xchg
xor
filds
into
cmpsb
test
jl
rcr
cmp
pop
je
push
mov
cmc
sub
popa
fwait
ds
cmpsl
int3
ds
andl
jbe
movsl
sbb
ja
int
xlat
sub
push
out
jae
xor
into
out
push
xchg
sbb
and
mov
rolb
xchg
xchg
cli
mov
mov
xchg
mull
cmp
sub
cmpsl
lea
arpl
sub
sbb
aas
xor
jae
arpl
cmp
mov
jg
sbb
enter
inc
gs
sub
loopne
test
addr16
mov
push
mov
adc
mov
insb
mov
xor
aam
xchg
out
pop
lods
inc
scas
stc
add
mov
das
mov
pop
xchg
dec
or
repz
arpl
dec
or
fcmovne
scas
ds
sbb
and
loopne
lds
sub
dec
fcmovnu
int
cmpl
fidivrs
add
shl
mov
adc
mov
push
in
loopne
xchg
adc
sub
push
pop
push
leave
sub
inc
inc
inc
cmp
xor
test
pop
sbb
pop
mov
hlt
adc
pop
bound
icebp
push
push
pop
fmull
lret
scas
lret
jno
sub
daa
test
cmp
test
out
cltd
rclb
inc
cmpsw
int
and
repz
cmp
sarb
test
loope
ret
insl
lock
cltd
mov
mov
cwtl
push
mov
pop
add
fcomps
sub
dec
pop
pop
sbb
xor
in
mov
jnp
lock
push
mov
dec
inc
inc
and
sahf
daa
or
sahf
push
push
sar
xor
sub
jg
cs
outsb
cltd
cmp
divl
arpl
outsb
aam
push
inc
movsl
fsub
decl
mov
out
dec
leave
ret
mov
pop
pop
jnp
xchg
push
loopne
mov
nop
xchg
out
scas
lock
jb
nop
add
add
movsb
mov
insb
sub
cmp
test
jns
scas
hlt
jnp
test
xchg
sbb
push
cs
icebp
or
push
xchg
movsb
sarb
cmp
xchg
cmp
sti
inc
or
inc
jbe
mov
fbstp
in
adc
addr16
lds
notb
roll
push
xor
negl
mov
arpl
jecxz
test
call
daa
aas
inc
and
inc
or
xchg
dec
jle
lahf
in
jno
insb
pop
das
lods
dec
pop
aaa
gs
sbb
int
hlt
push
mov
addr16
std
sbb
inc
cmp
dec
shlb
inc
mov
shl
pop
call
fildll
mov
js
cmp
movsl
inc
jbe
xchg
adc
xchg
fldt
loope
sbb
pop
inc
bound
xor
leave
loope
movl
subb
pop
lret
cli
add
test
mov
mov
sub
mov
shll
shrl
stos
adc
xchg
xlat
sub
xchg
sti
jno
sahf
aaa
lcall
in
mov
out
inc
xor
imul
lret
js
mov
xor
leave
mov
in
int
stc
cmp
jo
xchg
mov
add
loope
pop
and
in
sarb
test
xchg
push
dec
sub
leave
int3
dec
dec
mov
mov
or
fldenv
std
stos
push
mov
cmp
mov
inc
stos
insb
xor
test
jo
cld
push
xor
pop
sub
mov
xchg
pop
leave
lret
fdivl
cmp
mov
repnz
cmpsl
ja
mov
push
fsubl
loopne
mov
stos
fldenv
xchg
or
dec
dec
pop
divl
jne
loope
ret
outsb
test
push
outsb
sub
inc
arpl
insl
loop
fnstcw
arpl
es
nop
and
popa
decb
in
hlt
or
mov
jo
stc
push
push
pop
jne
inc
xlat
sub
jbe
test
dec
or
adc
arpl
inc
fcoml
xor
adc
mov
jge
test
ds
and
mov
loop
bnd
call
add
imul
cmp
cmp
inc
jae
jne
adc
lods
mov
movsl
dec
jg
outsl
push
outsl
sbb
push
sub
and
dec
mov
gs
fsubr
andb
lea
cli
pushf
mov
sub
hlt
stc
jns
mov
push
jp
dec
lahf
push
xor
dec
inc
xchg
mov
mov
add
aas
or
inc
jge
sub
aas
jbe
inc
cmpsb
lret
adc
pop
lea
lret
add
inc
xchg
pop
inc
ret
lahf
pop
push
jnp
sub
dec
dec
fildl
jg
lock
jp
sbb
jle
rcrb
lret
call
mov
mov
sub
jg
cmp
pop
sub
adc
rorl
repz
jnp
and
jp
mov
or
addr16
divl
mov
mov
fstps
daa
jecxz
cmc
int3
dec
loope
cltd
pop
or
pop
add
iret
shr
xchg
movsb
mov
ss
clc
cmpsl
aad
fildll
cmp
fstl
lea
lret
pop
fdivrl
cmp
jae
leave
sub
leave
sub
xchg
imul
xor
adc
daa
aas
sbb
repz
pop
xchg
fcoml
scas
aas
push
push
aam
repz
jne
sbb
loop
das
inc
ret
bound
add
ret
mov
loope
xor
ds
cmp
jmp
std
and
mov
imul
rcrb
rcrb
mov
mov
push
pop
into
loope
movsl
push
mov
cmp
dec
repz
lret
ja
sbb
mov
cmpsl
popa
sub
movsb
aad
sbb
clc
enter
sarb
adcl
je
andb
fwait
arpl
mov
push
daa
mov
fwait
mov
mov
in
push
adc
mov
dec
int
lock
addr16
mov
push
hlt
cmp
lea
cld
push
sbb
loop
or
cwtl
xor
xchg
sarl
lcall
or
inc
cmpsb
stc
sub
divb
gs
push
or
or
orb
dec
call
cmpsb
iret
dec
push
inc
lret
test
cli
dec
pop
enter
outsb
sahf
cld
cmp
add
out
push
jno
cmpl
mov
inc
mov
lcall
jbe
pop
test
sbb
ja
int3
shlb
push
push
xor
inc
push
inc
fidivs
cmp
jle
mov
lret
sbb
outsb
and
cmp
lds
push
les
xchg
test
in
or
stos
into
push
fsubs
mov
in
or
roll
xchg
and
pop
jno
fcmovnb
lret
movsl
jl
jle
cmpsb
mov
push
mov
sbb
aaa
call
lea
ret
mov
movsb
or
adc
notb
nop
aas
fimull
stos
push
sarl
repz
cwtl
adc
ss
ljmp
rcl
sub
shll
cwtl
pop
pop
add
or
or
lret
aaa
adc
mov
dec
cld
cmpsl
in
rcrl
dec
pop
cmp
rol
pmuludq
orl
imul
jo
mov
and
jecxz
pusha
fwait
and
inc
loop
imul
or
mov
xchg
or
ds
pop
dec
loop
pop
xchg
clc
std
lods
fidivrl
and
mov
fstpt
call
mov
int
jbe
jl
fcoml
cmp
sahf
sub
add
push
fcmovu
dec
movl
test
xor
adcl
mov
shrb
xchg
mov
aad
and
push
add
cmp
outsb
stos
cli
jl
pop
sbb
loop
sub
mov
in
lea
jo
xor
mov
mov
push
jbe
mov
jae
scas
mov
xor
test
cmp
pusha
test
add
lcall
xchg
jle
pop
pop
and
mov
movsb
add
and
push
dec
pop
add
cmpsb
shlb
jmp
std
mov
mov
dec
das
mov
popf
or
push
add
es
leavew
pop
pop
sbb
mov
xchg
jnp
inc
subb
xchg
adc
xor
rorl
lret
inc
sub
inc
xchg
aaa
xchg
pop
or
testb
rcll
mov
pop
pop
insb
outsl
sbbl
in
adc
jg
inc
sbb
mov
imul
mov
pop
int3
mov
xchg
inc
add
xlat
pop
sub
cmpsl
jg
data16
or
shlb
cmc
add
push
arpl
xor
lods
add
push
inc
repnz
xor
scas
add
and
repnz
stos
sub
sub
sbb
outsl
pop
cmp
call
lods
mov
movsb
scas
movsb
mov
mov
inc
lahf
fisubl
pop
jns
sbb
or
xor
pop
or
xchg
xor
pop
test
dec
sbb
jecxz
mov
mov
out
add
mov
subb
lds
dec
adc
call
movsl
xor
mov
out
jnp
inc
jbe
jnp
mull
and
mov
jge
mov
test
xchg
insl
mov
xchg
bound
sbb
cmp
stc
ss
push
xchg
cltd
xchg
fldz
jmp
mov
movd
mov
sbb
xchg
aaa
inc
mov
push
cmp
loopne
dec
and
enter
push
negb
das
jns
aad
imul
jo
jmp
and
mov
lods
arpl
sbb
mov
cmp
sti
nop
icebp
lods
nop
push
mov
popa
and
bswap
mov
cltd
addr16
addr16
cmp
mov
shlb
pop
jecxz
xchg
or
cltd
mov
ss
dec
iret
jl
push
ret
test
xchg
fiadds
add
push
popa
int3
shr
ret
mov
iret
lock
pop
call
cmp
movsl
incb
aas
mov
mov
sbb
ficompl
pop
add
shlb
loope
inc
inc
int
mov
movl
sub
movsb
cld
je
sub
mov
inc
test
xchg
scas
cli
mov
sbb
lea
clc
and
dec
and
push
bound
mov
sub
pop
xor
in
imul
movsl
push
movl
or
sub
aaa
movsb
fwait
ds
cltd
cmpb
xor
lcall
mov
add
inc
pop
jb
popf
cmc
mov
outsl
orl
xor
jb
add
cmp
sbb
int
and
dec
setp
mov
loope
scas
outsb
fdivl
inc
mov
pop
les
ss
adc
fwait
jg
mov
xor
mov
inc
out
loopne
jecxz
pop
and
dec
jns
lods
roll
mov
push
dec
loop
lea
imul
shll
sub
orl
add
pusha
or
in
push
xchg
jecxz
xchg
pop
jmp
sti
mov
cwtl
aam
faddl
int
mov
lret
jno
imul
sub
add
les
inc
mov
cmc
mov
dec
jle
jae
and
popa
lea
loopne
decl
je
lea
pop
outsb
leave
addr16
repnz
imul
inc
push
sbb
adc
dec
mov
aaa
loope
or
xchg
cmp
sbb
push
mov
dec
fsubrp
stos
add
sub
call
outsl
mov
xlat
out
push
mov
or
decb
stos
ja
lods
or
hlt
shrl
mov
jae
push
fdivrs
loop
imul
or
je
in
mov
push
repz
in
jle
repz
ret
fldenv
or
shll
xchg
aaa
fildl
lret
or
js
repz
sub
test
mov
shll
inc
and
loop
fiadds
adc
aam
mov
fnsave
enter
sti
stos
mov
push
xchg
inc
movsl
sub
sub
int
push
and
pop
mov
sbb
dec
xchg
aam
jbe
add
out
push
int3
mov
xchg
inc
call
notl
lcall
lcall
lock
mov
mov
ds
jns
jne
lret
movsl
pop
dec
lds
subb
and
sub
sub
movsl
out
mov
sub
repnz
xchg
lods
sbb
jb
popf
sbb
mov
or
xor
jns
adc
pushl
popf
nop
xor
mov
shrl
mov
aad
xchg
and
dec
mov
fs
jae
fnsave
test
cmp
jno
dec
xor
aas
inc
test
lret
xor
stos
cmp
test
jns
js
xchg
xlat
sahf
jg
and
add
cmpsl
jmp
rcrb
xor
dec
inc
int
xchg
jmp
dec
addb
and
sbb
arpl
cltd
adc
fnstsw
sarb
cmc
shrl
icebp
rcr
mov
inc
sub
lock
sti
mov
in
bnd
mov
add
data16
sub
inc
fstp
mov
loopne
pusha
ljmp
movsb
in
push
iret
cmp
inc
xchg
fwait
mov
out
jmp
loop
inc
push
xlat
ja
xchg
scas
jno
into
sub
aad
dec
adc
in
sbbb
push
add
lds
bound
inc
push
mov
pop
repz
lahf
adc
xchg
add
dec
mov
lods
jle
shl
daa
loopne
adc
push
cmp
je
mov
push
cltd
ror
inc
pop
andb
sbb
mov
xchg
jg
pop
mov
mov
mov
lret
mov
lods
adc
pushf
lahf
mov
or
or
add
or
push
ficompl
lods
adc
cwtl
mov
jecxz
das
xlat
mov
test
lock
inc
mov
aad
fnstsw
push
mov
xchg
stc
and
inc
inc
push
sahf
pop
mov
dec
lods
pop
jle
scas
xchg
cmp
and
in
push
sbb
xor
push
inc
jne
mov
jecxz
dec
data16
jb
sahf
mov
aas
and
inc
jns
movsb
xchg
inc
data16
sub
mov
fnsave
push
sbb
in
arpl
cmpb
inc
push
mov
cmpsl
ss
push
cli
adc
es
push
or
je
daa
pop
dec
xor
test
ljmp
cmp
or
cmc
ret
xor
in
stc
push
daa
cmp
mov
inc
repnz
push
dec
lods
sbb
jae
movsb
nop
xchg
test
imulb
adc
les
nop
bound
lds
push
ja
push
or
in
js
mov
pop
push
notl
cld
inc
fwait
push
xorb
inc
sub
adc
cwtl
mov
cmp
pop
gs
outsl
aaa
mov
cli
sub
orb
lds
rclb
add
sahf
shl
in
inc
mov
mov
pushl
push
push
mov
push
rcll
mov
cltd
cmc
stc
or
sbb
push
rcll
popa
lods
lret
mov
jo
mov
fidivrl
and
hlt
repnz
fcoml
push
int3
jbe
je
js
push
loopne
pop
and
mov
cmp
xchg
rep
in
ss
gs
add
xor
les
imul
jp
sub
sbb
or
cmp
pop
add
nop
and
rol
jecxz
xor
mov
fdivp
xchg
mov
mov
in
or
adc
xchg
xor
push
add
and
jae
fistl
cltd
pop
loop
inc
lcall
icebp
adc
popf
mov
fsubp
jl
sub
add
adc
push
andb
adc
push
pop
sti
inc
fadd
inc
pop
or
xor
jp
jo
push
nop
adc
shrl
cmc
mov
sti
loope
ds
test
mov
movsb
dec
aas
or
mov
lcall
pop
loope
in
leave
cwtl
mov
outsl
js
xchg
repnz
adc
enter
lcall
inc
cmp
pop
inc
ja
dec
ss
mov
cmp
mov
jge
push
dec
adc
jo
mov
pop
leave
mov
cltd
fadd
lret
xor
adc
cmc
cmp
mov
push
pop
loope
dec
lret
or
repz
xlat
pop
in
popa
and
imul
cwtl
mov
mov
mov
jl
sub
xchg
xchg
lds
push
sbbb
mov
rcr
dec
mov
mov
cmp
mov
inc
inc
mov
sti
mov
pop
out
xor
jbe
sbb
icebp
loop
fcompl
mov
push
pop
dec
xchg
call
lcall
popa
cli
mov
test
shll
dec
add
fbstp
and
mov
mov
adc
xorb
xlat
xchg
mov
or
outsl
rolb
test
adcl
and
cmpsl
stos
push
dec
pop
call
jg
mov
jle
and
sub
or
mov
sub
cli
xchg
cmp
mov
pop
sub
push
je
and
jbe
adcb
daa
or
cmp
lods
lock
sub
sbb
rclb
js
and
loopne
out
or
sti
jnp
mov
jle
inc
daa
mov
mov
dec
repnz
pushf
mov
inc
mov
out
mov
mov
pop
ljmp
ljmp
smsw
jo
pop
dec
sub
mov
orb
and
imul
push
imul
mov
cld
or
sbb
pop
aas
xor
adcl
adc
movsb
jmp
outsl
cltd
movsl
mov
out
sbb
in
cmpsl
dec
rcr
mov
in
sbb
int3
fbstp
and
dec
aam
lds
imul
sub
cltd
test
stos
mov
add
imul
enter
testl
pop
mov
sahf
sub
popf
push
cli
inc
loop
sbb
push
xor
xlat
xchg
int3
mov
aad
push
data16
lahf
dec
cwtl
xchg
outsb
xchg
fdivrs
push
sub
add
cmp
pop
sub
push
pop
cs
add
ret
fidivs
subb
lret
out
movsl
test
jl
lahf
lock
ljmp
popa
add
js
es
sbb
gs
int3
insl
add
cwtl
arpl
cld
outsl
sbb
mov
jecxz
sbb
nop
dec
sbb
xor
or
sbb
add
insl
adcb
and
xchg
aaa
nop
in
adc
outsb
imul
dec
lock
mov
stc
pop
nop
mov
subl
lret
mov
in
sbb
jo
int
mov
and
jp
ret
cwtl
dec
repnz
decl
xorl
ss
cwtl
in
scas
cmp
das
decl
popf
daa
xchg
or
jno
jo
push
pop
mov
ja
push
xlat
nop
loop
sbb
inc
inc
and
repnz
pop
hlt
inc
pop
push
mov
into
dec
lds
sbb
popa
inc
fistps
sbb
popf
cmp
push
dec
adc
mov
adc
test
jmp
out
jo
int
cmp
loopne
aad
arpl
adc
mov
into
fdiv
inc
and
xchg
aad
mov
xor
pop
mov
sarb
xchg
lcall
push
xchg
jmp
xchg
and
js
shlb
ficompl
mov
dec
and
in
cmpl
imul
dec
insb
push
mov
adc
add
movsl
or
sbb
cli
and
lahf
mov
sbb
mov
dec
nop
mov
cmpsl
lret
adc
mov
inc
lods
insb
cmpb
repnz
mov
mov
push
in
aad
mov
fwait
hlt
mov
sub
push
lret
movl
xchg
add
pop
cmp
cmpb
mov
xor
outsl
push
inc
stos
shll
jnp
mov
cmp
addr16
in
mov
fs
inc
jns
pushf
scas
push
add
nop
or
xlat
cmpsl
sub
add
shrl
sarb
out
cmc
mov
dec
test
stos
jl
iret
mov
scas
mov
push
scas
aaa
mov
inc
test
jmp
call
push
xchg
mov
inc
mov
pop
mov
mov
fwait
mov
xchg
push
or
fucomp
mov
loope
and
aaa
lret
lea
lock
clc
imul
les
dec
fmull
loope
mov
js
lods
dec
mov
inc
mov
or
mov
ret
call
out
cltd
and
fs
pushf
sub
mov
jg
sub
adc
cltd
jp
jns
xchg
gs
or
adc
push
inc
and
test
or
cmc
jne
outsl
xchg
stos
test
iret
jmp
imul
push
adc
les
xorb
jno
repz
imul
adc
pushf
test
jl
cmp
popa
cmp
fstl
rcr
cmp
push
popf
mov
stos
nop
add
sbb
mov
orl
rolb
insl
das
cwtl
pop
hlt
pop
sbb
xor
jl
adc
jne
insl
cmpsl
sti
rol
xchg
lods
jo
lds
lods
mov
mov
mov
add
test
dec
xor
decb
cmpsb
rolb
mov
rolb
mov
inc
push
sbb
movsl
mov
test
mov
orb
sub
inc
aad
mov
hlt
popa
gs
rcrl
mov
inc
push
repz
mov
movsb
inc
cmpsb
mov
push
js
mov
pop
test
out
popa
ret
xlat
frstor
pop
pop
and
push
push
in
add
add
jo
mov
dec
dec
push
aaa
adc
shll
jecxz
into
jmp
mov
mov
jg
or
mov
push
lahf
and
jmp
mov
dec
jecxz
aam
jne
and
xchg
adc
cmp
dec
xor
scas
or
daa
leave
push
sti
lds
in
mov
dec
or
scas
cmp
cwtl
mov
lock
loope
test
ret
mov
lods
or
inc
lock
out
negb
adc
test
test
bound
inc
cld
xchg
push
add
movsl
mov
das
mov
icebp
mov
add
stc
xchg
mov
add
cmp
aad
fldl
add
rolb
loope
jb
jno
or
lds
mov
fcoms
mov
adc
into
push
mov
idiv
xor
add
mov
pop
sti
out
and
xor
sub
push
scas
and
stc
inc
lret
daa
push
mov
arpl
in
push
je
and
cltd
cmp
mov
xor
xchg
cmc
push
push
paddusw
pushf
fmuls
mov
data16
daa
cld
in
cmp
jae
ja
mov
cmp
pop
icebp
xlat
add
sar
cli
and
ja
pushf
mov
mov
mov
fwait
js
pop
roll
jno
mov
pop
lret
or
cmp
lret
mov
mov
sub
jg
inc
and
push
test
ja
das
jno
enter
xchg
jne
inc
inc
sub
cmp
pop
inc
jl
and
sarb
fmull
and
repz
inc
dec
push
jno
ret
insb
test
nop
jp
scas
push
lds
lods
push
leave
sbb
mov
pop
stc
jmp
das
push
push
dec
lret
stc
scas
push
ret
cmp
xchg
mov
hlt
shlb
es
add
iret
lods
sbb
cltd
pop
adc
std
andb
mov
mov
pop
mov
xchg
add
je
clc
mov
cs
rcrl
and
pushf
test
sub
mov
sbb
xor
in
inc
dec
inc
bound
mov
xchg
push
pushf
je
mov
inc
arpl
mov
push
pop
lret
shll
add
test
imul
mov
shrb
xor
int3
arpl
int3
repz
xchg
adc
mov
aas
mov
jg
movsl
ja
push
in
jl
pop
mov
aaa
pop
cmp
lods
iret
sbb
lods
cs
push
add
pop
sbb
ror
std
negl
and
jns
push
inc
lock
and
movsl
into
mov
pop
push
pushf
cs
mov
cmp
mulb
lahf
sbb
pop
fwait
jae
or
out
imul
push
loope
testl
lods
pop
mov
xchg
shrl
jmp
and
mov
loopne
dec
dec
push
dec
inc
push
mulb
mov
mov
push
jbe
jecxz
dec
and
fists
les
ret
xor
adc
push
mov
lahf
jo
in
fbld
mov
adc
push
lock
outsb
int3
cmp
push
nop
adc
aas
pop
add
push
pusha
mov
pusha
cmp
jne
pop
aaa
cmp
les
mov
mov
xor
mov
pop
mov
mov
adc
je
and
jae,pt
jo
mov
call
xor
fiadds
xlat
jo
inc
in
lahf
mov
movsb
push
adc
add
movsb
into
mov
xor
inc
add
mov
xor
call
dec
and
or
movsl
fwait
xchg
and
mov
pop
fimull
call
fisubs
bound
fmuls
add
fwait
adc
aas
mov
xchg
fwait
pop
mov
iret
mov
mov
in
int3
in
loopne
xor
jns
sub
incb
fs
pushf
inc
es
inc
cli
inc
out
and
ja,pn
adc
xchg
xchg
je
jle
pop
jecxz
mov
jmp
out
dec
add
pushf
incb
adcl
add
aad
inc
jbe
iret
push
dec
pop
sub
inc
das
inc
adc
xor
fstl
ss
xor
push
mov
push
adc
stos
pop
add
ret
xchg
jns
inc
fisubrs
pop
xchg
pop
xor
fldenv
ret
adc
cmpsl
hlt
dec
ss
popf
xchg
sbb
mov
mov
ret
and
pop
shrl
test
pop
pop
rcrb
sti
std
lcall
fistl
iret
lcall
xor
inc
aas
xchg
sti
sub
inc
sub
and
mov
xchg
or
mov
outsl
fildll
out
pusha
pop
mov
hlt
mov
test
repnz
mov
pop
iret
das
mov
or
pop
mov
lret
jmp
jne
cmp
lret
xor
ja
push
mov
or
jle
mov
jmp
mov
cmp
cmp
stos
mov
pop
jmp
dec
xchg
out
mov
adc
outsl
in
lock
sbb
nop
popf
ds
xchg
or
pop
fmull
shr
mov
orb
mov
xor
pop
inc
dec
mov
jle
dec
mov
js
add
sti
cmp
and
jg
xchg
mov
clc
push
xchg
daa
fsubrs
cmp
jmp
fisttpll
lock
xor
test
js
orl
push
scas
adc
xor
in
mov
sub
scas
add
sbb
cltd
int3
xchg
test
mov
jbe
sub
es
mov
mov
cmp
jg
ret
loop
es
test
sbb
pop
mov
mov
pop
sbb
push
test
sbb
add
jns
dec
dec
retw
lods
or
movsb
adc
mulb
xor
fisttpll
lret
adc
stos
pushf
mov
mov
aas
push
dec
into
xchg
sbb
and
xor
pop
ljmp
cmc
ljmp
inc
sub
cmp
jp
pop
ret
gs
mov
movsl
push
fs
pop
test
popf
mov
stc
pop
mov
jp
or
mov
sbb
pop
in
pop
push
or
fimuls
jns
aam
inc
jne
sbb
sbb
cli
cltd
mov
jmp
add
stos
leave
lea
xchg
mov
into
ficoml
xor
push
xchg
pop
cmp
push
cld
mov
inc
mov
mov
std
or
pop
mov
cmp
shl
iret
or
mov
xchg
pop
adc
ret
les
out
mov
pop
outsb
scas
pop
gs
aam
ror
cmp
ljmp
lahf
js
movsb
push
dec
std
data16
jnp
jle
scas
int3
iret
or
xor
inc
pop
andl
pop
pop
xchg
aad
movsl
mov
xchg
push
pop
into
inc
jle
and
jbe
xchg
add
rcrl
into
sbb
iret
stos
push
test
jl
insl
bound
mov
in
orl
ss
push
lahf
lock
sbb
sub
icebp
xchg
aaa
in
mov
iret
cmpsb
mov
cli
adc
out
mov
inc
fdivrl
fwait
lds
shll
adc
add
sbbb
js
ja
hlt
inc
xor
aas
imul
mov
inc
test
insl
mov
cli
fstps
push
iret
or
xchg
sbb
push
inc
loopne
push
pusha
and
or
adcl
sarb
xor
pop
xchg
shl
std
jno
cmc
stos
and
mov
ds
fists
icebp
mov
dec
pushf
dec
push
dec
pop
leave
int3
mov
icebp
out
sahf
cmp
and
push
int
in
into
scas
cmpsb
les
mov
leave
adc
loop
je
fsubs
aad
mov
movsb
and
es
mov
adc
adc
push
add
out
fiaddl
iret
and
in
cmp
stc
dec
out
lret
shrb
mov
fdiv
insb
test
addl
ss
fs
imul
and
es
adc
sub
jmp
dec
pop
sti
iret
cmp
push
dec
mov
xchg
xchg
add
cmp
or
mov
add
and
cmp
mov
ficomps
movsl
outsl
mov
pop
xchg
test
shlb
adc
dec
or
cmp
pop
sti
cwtl
mov
pop
and
fsubr
push
leave
loope
mov
push
lds
notl
and
pusha
jns
dec
sbb
pop
loop
sbb
dec
std
stos
pop
ds
cs
push
ljmp
lahf
ds
mov
push
or
lea
or
orl
pop
add
inc
aam
cltd
and
or
or
cld
mov
adc
pop
jae
jecxz
lods
cmp
push
jmp
xchg
or
xchg
sbb
push
fs
jl
imul
inc
add
push
ljmp
jecxz
loope
xor
jns
pop
xchg
xchg
pop
out
inc
movsl
lret
in
popa
daa
out
out
lods
mov
mov
xchg
orl
mov
or
cld
std
add
mov
push
ds
iretw
jbe
test
test
or
push
int
js
pusha
aaa
mov
test
faddl
xor
mov
or
fs
push
pop
mov
xchg
aam
mov
mov
sbb
aaa
pop
pop
xchg
daa
cmp
mov
sub
aad
jbe
inc
push
fisubl
fbstp
mov
mov
cwtl
xchg
sbb
lock
dec
shlb
dec
mov
inc
mov
in
xchg
mov
sbb
aad
stos
arpl
out
clc
inc
das
xor
ret
mov
and
and
fwait
add
lds
loope
add
leave
add
jl
addl
jnp
ret
outsl
push
and
sarl
movsb
outsb
in
xchg
and
push
in
mov
pop
jmp
push
push
adc
jmp
adc
fcomps
push
jle
add
ffree
push
pop
out
cmp
add
test
scas
movl
or
mov
push
xor
mov
xor
outsb
mov
xor
mov
xor
loopne
dec
push
inc
inc
cld
jo
adc
and
mov
mov
add
rcrl
es
loopne
add
inc
hlt
mov
lods
add
xorl
cmp
sahf
sbb
scas
scas
cmp
std
push
sti
push
jecxz
push
cmc
movsb
pop
cmpsl
movd
scas
and
sub
xchg
and
popa
repnz
mov
mov
fdivrl
cmp
aad
jae
and
inc
std
push
push
push
call
scas
pop
jb
js
xchg
dec
dec
cli
add
push
cmpsb
or
roll
gs
dec
in
pop
out
sub
imul
in
test
mov
je
leave
fisttpl
mov
bound
repz
inc
adc
leave
shlb
add
xor
frstor
inc
out
push
in
sarl
add
sub
xor
loopne
push
push
hlt
or
or
jl
inc
pop
cmp
fwait
imul
rcll
add
stc
filds
jecxz
push
lret
jb
and
test
inc
mov
fdivl
ret
xchg
push
adc
jg
mull
jns
adc
add
pushf
mov
xchg
xchg
cmpsl
ret
dec
xchg
int3
lea
notb
out
adc
movsl
cmpsl
inc
sub
add
lods
enter
repnz
dec
mov
rclb
jp
xchg
lea
addr16
cmp
imul
add
in
cwtl
iret
push
inc
pop
mov
adc
divb
push
jp
cwtl
movsl
jg
lcall
inc
adc
add
out
push
fwait
xchg
pop
inc
test
ja
ja
fidivs
pop
and
stos
enter
inc
pop
pop
mov
or
cmp
je
into
lods
jnp
jno
andb
int
push
popf
push
adc
fdivrl
push
sub
xchg
aam
shlb
mov
xchg
inc
test
pop
ljmp
push
rcll
mov
in
xchg
cli
push
mov
adc
ljmp
shrb
sti
add
pop
xor
jg
adc
inc
pop
insl
adcb
popf
test
mov
cmpb
fadd
xor
cmp
and
jbe
or
jl
xchg
mov
push
cmp
mov
inc
shll
es
push
sub
xor
jae
leave
and
sti
test
dec
mov
inc
xchg
fistps
jge
rolb
data16
pop
je
decl
or
add
dec
cmc
mov
ret
mov
jl
inc
jmp
push
lret
aam
mov
ljmp
addb
int3
push
les
fldl
xor
sbb
out
pop
sbb
jle
popa
stos
xor
into
das
mov
in
and
jne
scas
pusha
lds
ss
mov
ja
pmaddubsw
rcll
subl
inc
sahf
xlat
daa
mov
inc
sub
out
imul
outsl
fcomps
add
orl
mov
push
ljmp
mov
fidivrl
mov
sbb
lds
adc
jne
loopne
xchg
mov
lea
add
push
push
gs
and
push
shl
mov
sbb
add
adc
leave
cld
decl
mov
xorl
push
ja
shrb
int
movsl
xchg
jbe
out
jmp
or
mov
popf
mov
mov
add
jle
test
aas
add
jb
in
sbb
adcb
call
inc
mov
jle
mov
addr16
stc
xor
loop
mov
mov
jmp
mov
xor
fnstenv
cld
dec
sub
hlt
or
outsl
cld
push
xchg
cmp
mov
mov
cmp
push
mov
lods
ficomps
add
out
in
pop
push
or
adc
lcall
push
shr
aad
xchg
jmp
sub
xchg
scas
dec
xor
jnp
pop
xchg
rorl
mov
fwait
loope
sub
sbb
adc
jno
pop
cli
push
enter
sub
inc
and
cmpsl
xchg
lds
loope
push
sub
cmp
jg
fnop
sub
out
mov
cmp
je
xchg
aad
insl
sarl
jle
or
data16
lret
inc
arpl
adc
repz
aas
sub
sbb
in
and
fadd
and
mov
ficomps
fdivrs
mov
cmc
repnz
fidivl
je
mov
xchg
inc
or
inc
mov
jae
pop
lret
bnd
inc
xor
add
test
repnz
pop
mov
test
call
cs
call
repnz
es
cwtl
lret
xor
mov
lock
cmp
int
pushl
mov
xchg
mov
pop
arpl
add
movsl
in
cmp
xchg
add
and
pop
or
outsl
cs
jge
addb
jle
or
int3
daa
dec
mov
mov
dec
data16
inc
ja
mov
jne
ljmp
xchg
aam
cmp
mov
dec
or
not
sbb
scas
rcrb
add
dec
xchg
or
dec
sub
push
jbe
mov
or
push
push
inc
les
mov
pusha
cmp
or
adc
or
jnp
fbld
push
test
pop
incb
repnz
inc
xchg
mov
xor
test
dec
dec
clc
cwtl
xor
sub
in
mov
or
hlt
pop
in
sbbl
mov
imul
fdivrp
sub
mov
hlt
mov
int
lret
sahf
mov
jg
in
or
es
push
sar
push
dec
fcmove
add
out
mov
fmul
loop
bound
xor
imul
inc
scas
out
cmp
sub
jl
lcall
inc
jmp
add
or
fs
xor
push
test
mov
xchg
jo
stos
pop
andl
jecxz
clc
pushf
push
js
or
mov
iret
inc
sbb
mov
fbld
dec
sbb
out
push
pop
or
ss
dec
in
jg
xchg
or
and
stos
pop
add
pushf
push
adc
or
nop
inc
mov
mov
repnz
mov
adc
or
outsl
cld
adc
push
int
jmp
or
hlt
sub
jge
aam
cmp
sub
pandn
push
or
adc
adc
xchg
lds
int3
adc
xchg
mov
cmp
pop
sbb
cmp
movsl
adcb
in
push
cmp
cmc
cmp
pushf
xchg
mov
lea
pop
cmpsb
inc
fisubs
and
xchg
push
sub
fxch
aad
sub
cli
mov
mov
aam
mov
lcall
sbbb
sub
cmc
or
lcall
pushf
insb
andb
in
sti
adc
rcr
dec
into
add
cmc
dec
int3
lods
pop
sub
push
test
roll
push
bound
mov
xchg
je
mov
jns
pusha
idiv
add
ja
add
in
cli
ret
and
xor
jae
dec
lret
in
ffree
loop
cmp
outsb
fwait
dec
push
dec
test
aaa
out
xchg
leave
pop
popf
xor
stos
cwtl
inc
pusha
add
mov
in
test
popa
repnz
call
sbb
cmp
sbb
in
dec
jae
sarb
aad
lods
das
inc
js
movsb
dec
incl
or
and
clc
in
outsb
mov
ds
movsl
adc
mov
mov
mov
dec
push
pop
rcll
shrl
pop
mov
xchg
fucom
mov
in
push
add
sub
aas
icebp
dec
ret
lock
sub
movsl
mov
sbb
mov
sub
in
push
pop
mov
test
mov
xchg
push
dec
dec
mov
jmp
mov
test
adcb
in
pusha
xchg
adc
pop
je
xchg
jno
scas
mov
push
sti
ja
clc
mov
in
addb
sbb
add
pusha
nop
jbe
xchg
pop
leave
mov
shll
pop
call
jge
lods
xchg
test
or
gs
pop
lret
sub
mov
jns
sbb
push
lcall
fcmovbe
out
mov
daa
cld
std
mov
pop
and
cs
iret
xor
add
test
push
mov
fs
cld
mov
sub
fdiv
in
ds
fdivrl
das
add
inc
adc
nop
pop
pusha
popa
mov
add
stc
mov
xchg
repnz
ret
jae
push
cmp
test
mov
cli
mov
sbb
cs
insb
ljmp
pop
xlat
fwait
call
pop
out
mov
pop
pop
ljmp
sbb
dec
cmp
stos
scas
push
dec
inc
mov
fidivs
mov
push
rorb
loop
inc
fdivp
xchg
mov
aad
cmp
fiadds
lds
shld
jl
int3
adcl
pop
and
mov
movb
icebp
add
cmpsb
aam
sub
pusha
xchg
sub
in
lret
jl
mov
adc
mov
cmc
movsb
xchg
shrb
fildll
or
jne
scas
jae
fimull
cwtl
enter
xchg
sbb
cld
movsb
roll
mov
ljmp
mov
and
pop
in
and
xchg
sbb
ljmp
shr
inc
call
outsb
imul
shlb
pop
out
and
test
in
dec
clc
iret
cmp
fs
xorb
daa
xor
mov
mov
push
notb
xor
dec
jg
int
imul
andb
clc
sti
and
test
inc
mov
jge
lea
adc
les
xchg
sub
mov
insl
mov
add
lock
bound
popf
outsb
pop
iret
adc
mov
cld
push
pop
add
pop
ja
mov
mulps
push
jbe
push
xchg
jecxz
inc
iret
rclb
aas
inc
sub
in
pop
ret
sbb
cmp
inc
out
popf
movsb
mov
cmpsb
inc
sbb
mov
cltd
gs
dec
xor
fisubs
pop
lds
add
push
or
mov
dec
and
inc
aad
sbb
mov
rorl
repz
ljmp
mov
add
je
enter
mov
push
lods
dec
lock
fs
push
sarl
lret
out
cmp
test
out
jns
dec
sbb
mov
pop
xor
pusha
imul
insb
lds
daa
test
and
xchg
or
jmp
mov
push
mov
stos
movsb
ss
cmc
cmp
std
test
pop
shlb
cld
adc
mov
int
jp
sbb
ds
push
fcmovne
scas
add
ss
add
xchg
push
push
mov
and
outsb
inc
mov
vgetmantsd
mov
push
in
and
pop
add
sbb
lds
mov
insb
mov
push
jge
movsl
xchg
cmp
sub
ljmp
xchg
xchg
mov
arpl
inc
ret
je
sbbl
dec
ret
outsl
daa
leave
xor
mov
je
jg,pn
mov
push
mov
nop
lods
les
cmp
pop
mov
push
rcl
sbb
jmp
ds
in
stc
popa
lret
pop
mulb
mov
push
leave
sub
or
and
fistpll
sbb
dec
mov
and
mov
push
int3
pop
lds
lahf
adc
jns
jle
out
xchg
lods
jp
jge
cmpsl
jg
mov
mov
gs
inc
insl
jmp
mov
int3
loope
sbb
lret
fbstp
sub
jbe
cmpsl
nop
jo
ret
adc
push
aam
push
mov
daa
orl
xchg
dec
cld
insl
shlb
test
add
ja
iret
mov
dec
jo
data16
stos
ds
rolb
andl
insl
xchg
out
ficomps
loop
popa
or
jbe
mov
or
fs
fstpt
dec
pop
sbb
mov
cmp
out
jecxz
adcl
add
outsb
ret
test
inc
cmp
or
xchg
jbe
test
test
mov
scas
ficoml
mov
sub
sbb
int
test
cltd
sub
push
and
fimull
jecxz
pop
test
inc
pop
outsl
mov
sub
in
pop
mov
mov
shll
mov
sub
jnp
pop
jg
jno
fnstcw
fsubr
mov
cmc
xchg
mov
and
ljmp
jb
dec
pushf
inc
clc
pop
push
jno
pop
mov
popf
cmc
ds
mov
cwtl
sbb
xchg
pop
fisttpl
movl
jb
in
dec
xchg
or
loop
negl
into
sub
iret
lahf
push
pop
dec
call
mov
cltd
inc
xlat
ss
cmc
ret
xchg
pop
and
mov
adc
loop
jbe
mov
fadds
out
xor
or
sbb
aaa
sub
out
xsaveopt
adc
repz
pop
push
stos
sub
lods
sahf
or
test
insl
and
in
and
mov
or
das
xor
jns
jp
ret
pop
scas
pop
sarl
les
xor
jmp
xlat
fsubs
mov
jno
pop
test
into
cmc
pop
sbb
jno
cli
shl
add
cltd
fcmovnb
and
jmp
xor
aas
or
fldl
jecxz
pop
mov
or
jg
addl
fwait
call
or
pop
lock
call
jae
in
xchg
push
sbb
jns
mov
mov
push
adc
xor
mov
add
or
pop
aas
push
divl
mov
adc
leave
js
lods
enter
insb
fwait
pop
inc
ds
jp
mov
sub
and
cmp
lods
pusha
mov
dec
daa
xchg
mov
insl
sbb
adc
aam
and
xchg
sub
adc
push
mov
out
mov
mov
mov
imul
loop
jno
popa
ljmp
dec
xlat
stos
jno
cmpsb
jns
std
mov
xchg
mov
gs
das
repnz
insb
sti
testl
fimull
sbb
sarl
loop
sbb
add
push
fidivrs
inc
sbb
inc
int3
push
jp
pop
or
jno
mov
mov
fwait
cmp
or
lds
inc
arpl
sbb
mov
pop
stos
je
xchg
lret
shl
insb
fadd
cltd
pop
int
and
aad
mov
pop
pop
stos
push
jg
sub
shll
pop
fs
mov
rol
and
std
imul
inc
sti
xor
and
rcrl
or
jbe
or
mov
jl
push
fwait
sarb
test
pop
movsb
lea
sti
stc
sahf
pop
push
fmull
outsb
push
pop
jb,pn
aas
loopne
into
inc
inc
in
pop
sahf
lea
sbb
test
js
pop
sbb
adc
pop
lods
inc
js
or
mov
jno
daa
mov
hlt
loop
lds
xor
stos
mov
ret
outsl
xchg
jne
popf
sub
jo
sbb
push
int3
cs
or
inc
mov
lock
mov
push
adc
mov
ficompl
stc
and
enter
push
gs
imul
das
and
out
repnz
sbb
xchg
cs
or
fs
inc
jp
or
popa
or
repnz
lods
cmp
arpl
jmp
aad
imul
aaa
scas
adc
fsubp
mov
ja
lret
pop
or
xchg
int
dec
mov
jnp
cmpsl
enter
imul
je
fcomip
pop
mov
push
imul
cmp
cmp
lds
inc
scas
fdivl
insb
cld
movntps
pop
les
sbb
loope
cmp
lods
out
mov
pop
inc
xor
ficomps
xchg
jl
stos
jnp
xor
loop
call
fidivrs
xor
mov
add
aad
push
or
daa
jmp
subl
negb
xchg
and
jno
loopne
mov
rorl
ret
jg
cmp
and
xor
leave
add
mov
adcb
push
mov
insb
adcl
adcb
and
cmp
lods
out
imul
inc
std
and
mov
cmpsb
cmpsb
xor
pop
pop
and
sub
inc
xchg
xlat
lds
jge
mov
sbb
lahf
push
vpmaddwd
aad
dec
jle
and
lods
mov
inc
fcmovnbe
sub
mov
dec
pushf
shrb
push
mov
lret
lds
jae
aam
ret
and
ja
pop
into
subb
sub
lret
push
leave
inc
pop
fs
and
lods
cmc
lret
ds
lret
aaa
xor
lods
icebp
jno
lcall
aaa
push
xchg
daa
mov
xchg
out
inc
cmp
push
sub
inc
sbb
inc
jp
lret
rcrl
dec
icebp
hlt
outsb
aas
mov
mov
xchg
mov
push
xor
jae,pn
push
or
out
ds
dec
or
add
mov
daa
call
add
jmp
sahf
cmc
cmp
mov
lcall
mov
cmp
dec
jbe
xor
jl,pt
cmp
adcb
popa
gs
pop
addr16
jb
mov
mov
call
cltd
jns
cld
cli
and
popa
push
xchg
sub
adc
div
int3
xor
dec
cmpsl
fisubrs
push
repz
and
mov
mov
test
pop
mov
mov
dec
xlat
test
sbb
ja
gs
dec
dec
push
adc
pop
rclb
in
cmp
xor
shrb
cmpsb
add
bound
gs
push
or
push
and
sub
push
call
and
mov
mov
lods
in
cmc
repz
jne
dec
xchg
mov
clc
shr
out
lods
enter
sbb
pop
sbb
outsl
xor
aaa
dec
in
pop
xor
jge
pop
mov
loop
cmpsb
insl
aas
and
addb
cmp
repz
mov
push
test
loop
xchg
sub
sti
push
fdivrl
and
lods
addr16
out
mov
lods
mov
and
hlt
sbb
into
sti
add
je
push
lods
inc
push
xchg
icebp
aam
dec
dec
push
inc
iret
sub
movsb
mov
jbe
notl
xchg
and
pop
mov
out
pop
sub
inc
mov
pop
inc
push
out
mov
pop
or
mov
jns
scas
cmp
shrl
sub
fsubrs
mov
sub
adc
sub
push
daa
sbb
mov
xchg
and
push
popa
xchg
jecxz
cmc
xor
test
lret
jecxz
mov
lods
push
repnz
hlt
in
icebp
dec
ud1
xor
mov
add
lcall
jmp
xchg
jle
ret
lods
adc
or
enter
cmp
pop
push
jno
mov
push
addr16
out
out
inc
lret
call
mov
sbb
dec
lcall
adc
xor
cmpsb
clc
inc
pop
cld
mov
inc
fs
jge
jg
add
outsb
sbb
jge
lret
in
mov
xchg
dec
loop
popa
cmp
in
and
inc
adc
jle
xchg
pop
popa
outsb
je
imul
std
cmp
pusha
mov
nop
ret
add
dec
pop
fcoms
stos
inc
jmp
mov
and
inc
lret
dec
popf
cwtl
xchg
imulb
push
adc
inc
lcall
lcall
and
test
insl
mov
std
jle
cwtl
add
lahf
and
in
cmc
xchg
xor
pop
cmpb
xchg
cmp
out
push
cmp
pop
imul
test
pop
cmp
lods
jno
aaa
push
xorl
jg
mov
popa
sbb
outsb
scas
mov
jl
cld
out
jl
jno
inc
jge
in
mov
add
inc
imul
outsb
mov
lret
push
inc
into
out
into
cmp
xor
fs
dec
sti
or
add
stc
out
dec
xor
pop
push
inc
cld
lods
cwtl
pop
inc
out
sti
cmp
sub
dec
mov
popa
mov
mov
xchg
test
push
mov
xchg
xchg
pop
fwait
lock
dec
push
mov
mov
pop
into
je
xchg
inc
sub
movsl
leave
aas
rcrl
adc
in
shl
or
sub
repz
mov
loopne
xor
mov
add
sbb
xchg
faddp
fwait
mov
insb
xor
dec
pop
bound
call
cs
imul
int
mov
mov
mov
push
and
cmpsl
adc
xlat
aas
inc
or
test
in
adc
xlat
adc
das
orl
test
push
lret
adc
scas
fld
mov
arpl
cwtl
inc
fisubrl
mov
jb
insb
add
jno
bound
cmp
int
loop
mov
and
pop
dec
or
mov
aad
jmp
popa
pop
and
inc
stos
cmp
or
sahf
mov
xchg
mov
jg
and
les
jns
jecxz
jns
xchg
in
ror
push
push
cmp
ret
insl
fisubs
loope
mov
fistl
shlb
rorb
sarb
outsl
add
adc
fidivs
sahf
add
das
sbb
inc
lahf
movsl
bound
mov
xor
cli
movsl
lock
inc
fs
jmp
leave
ss
mov
push
push
xchg
test
fst
ret
sbb
jo
loop
clc
movb
dec
dec
cmp
cmp
cmp
lea
sbb
mov
adc
cmp
lahf
jae
std
xchg
sub
dec
test
pop
gs
mov
dec
mov
in
add
ret
ja
pop
sbb
aad
clc
ja
negl
dec
sbb
insl
mov
push
mov
data16
shll
lea
or
xor
mov
mov
push
pop
daa
lock
add
fisubl
adc
mov
out
pusha
loope
xchg
lods
orb
cmp
and
pop
dec
in
leave
cwtl
stos
int
inc
sbb
sub
pop
nop
ljmp
fstpl
push
out
sbb
push
jmp
cmp
push
rorl
adc
arpl
cmc
jb
lahf
fldenv
sub
xor
fldenv
jmp
loop
ds
shlb
dec
mov
fidivl
push
rcl
lods
in
mov
cld
jl
jae
jne
fs
dec
je
xor
mov
cmp
in
lcall
sub
push
add
adc
jmp
addr16
cmp
jne
push
mov
shl
lahf
repnz
xor
fidivs
cmp
fsub
insb
cltd
cmp
cwtl
or
mov
loope
dec
add
fisubs
ds
and
inc
sbb
push
test
outsb
test
leave
xchg
pop
outsl
and
daa
jnp,pt
xchg
insl
das
rol
mulb
sub
lret
test
movsb
lods
sbb
cmc
sub
vhsubpd
shll
lret
and
xchg
or
jo
and
cwtl
mov
fiaddl
jb
mov
push
scas
mov
insb
scas
rcrl
dec
je
int
in
inc
xchg
xchg
xrelease
push
sahf
push
xchg
mov
sahf
sbb
test
gs
fisttpl
xor
jo
imul
imul
in
das
cwtl
lret
xchg
push
lods
jge
int3
jl
out
out
sbb
in
fldenv
pop
push
or
xchg
cmp
cld
sbb
cs
gs
inc
add
jp
ret
leave
push
cmp
popa
add
orl
mov
arpl
leave
push
xchg
test
ja
jnp
dec
jecxz
inc
enter
xchg
and
test
imul
cwtl
or
and
adc
push
test
shl
sbbl
push
arpl
call
adc
xchg
mov
add
test
inc
dec
pop
add
cmp
std
adc
add
mov
cwtl
loop
inc
add
adc
cs
inc
xchg
adc
insb
mov
mov
scas
push
fadd
and
mov
shlb
int3
int3
divb
xchg
test
cwtl
dec
mov
popf
jae
scas
mov
cwtl
mov
stc
lds
hlt
mov
fcmovbe
xchg
cwtl
jecxz
stc
insb
sub
lahf
add
pushf
mov
pop
out
pop
xchg
adc
add
je
testl
mov
dec
lcall
push
rcl
lahf
pusha
addr16
jbe
bound
push
test
lret
leave
adc
shl
clc
pop
pop
shll
sub
ss
add
aas
call
adc
push
or
gs
test
xchg
pop
iret
and
cmp
in
movsl
add
push
std
rcr
adc
cmpsb
loopne
rcr
dec
in
jle
insl
pushf
mov
pop
push
fwait
add
call
and
mov
hlt
fdivl
mov
mov
push
mov
fadds
adc
add
or
movsl
lea
mov
popa
add
mov
negb
adc
into
adc
lret
call
or
mov
lcall
stos
fld
xchg
mov
or
loope
pop
add
dec
pop
jne
test
jg
mov
dec
lea
pushf
mov
xor
jo
cmc
or
adc
pop
mov
mov
push
ss
cli
data16
adc
sahf
inc
lret
dec
xlat
arpl
lock
les
movsb
xchg
stos
mov
mov
adc
in
sarl
mov
movsl
int3
and
lahf
xchg
int
mov
inc
cmp
mov
pop
sbb
jg
mov
fisttps
arpl
sahf
xchg
enter
es
outsb
xor
scas
and
add
push
outsl
push
rorb
xchg
ljmp
inc
inc
inc
mov
lret
xor
or
test
loope
fstpt
pusha
sahf
push
pop
sub
into
dec
cmp
loope
xchg
push
shlb
fwait
xchg
mov
cld
shll
pop
jns
iret
xlat
stos
jb
xchg
dec
popf
test
xor
fisubl
test
pop
movsl
jnp
mov
xor
or
and
adc
outsl
out
jns
xchg
addr16
iret
lahf
out
or
lods
mov
int
inc
cmp
and
jle
sub
sahf
leave
add
dec
shlb
add
sub
inc
and
push
jnp
xlat
jecxz
stos
inc
ret
xchg
in
push
and
push
cs
xlat
pop
adc
mov
adc
mov
data16
dec
mov
adc
xchg
sub
loopne
loopne
and
xchg
xor
xchg
xor
jecxz
cmp
add
loop
cltd
push
ljmp
lods
xlat
out
roll
sub
scas
mov
or
lods
mov
hlt
mov
loopne
stos
adc
dec
jecxz
sbb
in
inc
sahf
jp
aad
or
sub
jne
jbe
mov
cs
arpl
xchg
pop
and
dec
add
pop
sahf
xor
sub
je
andb
int3
jge
push
pushf
jae
js
test
popa
arpl
cmpsl
xchg
stos
je
loopne
push
je
loope
ret
repnz
ljmp
push
das
stc
test
cmp
jge
out
shr
das
call
ret
daa
ljmp
dec
mov
jecxz
movb
leave
mov
lret
int3
pushf
imul
sbb
sbb
mov
ljmp
push
xor
push
shr
sub
or
jmp
mov
rcrl
and
in
pop
add
adc
sub
xor
js
mov
int
adc
shrl
cs
test
mov
sbb
pop
fisubl
jne
into
mov
mov
ds
lods
sahf
movsl
mov
aad
les
pop
or
add
push
outsb
dec
mov
mov
scas
xor
les
jnp
xor
dec
push
out
pop
and
sub
test
shll
push
or
out
insl
lock
cmpsl
mov
xchg
cmp
push
sub
mov
shll
fnstsw
dec
movsb
fildll
int3
inc
fisubrl
cld
push
jmp
mov
mov
or
mov
mov
sbb
or
and
repnz
mov
push
fnstenv
inc
mov
xchg
mov
fcom
call
cs
sbbb
push
jl,pn
or
test
adc
cwtl
and
pop
aad
sahf
xchg
sub
sbb
fs
jle
jbe
add
xor
push
mov
xchg
xchg
adc
lea
mov
mov
cli
sbb
dec
nop
movsb
cli
mov
out
cmp
js
bound
xchg
out
and
and
mov
sbb
dec
pop
add
aam
push
popf
xor
mov
sbb
xchg
lcall
movsl
cmp
cmp
aas
inc
pop
lss
sbb
ljmp
lock
jg
stc
push
pop
notl
mov
mov
rclb
lahf
cmp
mov
data16
push
pop
daa
incb
iret
add
lcall
xchg
jp
fisttpl
adc
pop
mov
adc
bound
jmp
roll
and
ja
rcrl
push
pushf
popa
inc
gs
cld
cmp
or
clc
cltd
rclb
add
dec
test
adc
jecxz
mov
jb
fs
jbe
mul
cwtl
clc
jnp
out
lock
pop
notl
pop
lret
rolb
mov
stc
dec
clc
mov
cltd
hlt
xor
jae
or
jmp
lock
xchg
or
jne
popf
jecxz
vaddsubps
xor
cld
xchg
cli
std
or
jle
imulb
and
jmp
adc
cmpb
sub
fs
shr
cli
push
fisttps
dec
int
mov
hlt
lods
or
repnz
mov
repnz
daa
sbb
pop
jl
dec
ja
imul
mov
lea
add
lods
mov
adc
ret
addr16
iret
mov
adc
push
es
out
int
jne
test
daa
inc
sbb
pop
sti
adc
loop
and
cmp
mov
ret
xor
divb
dec
jnp
pop
adc
dec
push
int3
xchg
dec
adc
jmp
pop
push
cld
scas
adc
mov
pop
enter
inc
mov
iret
es
bound
rcrb
jl
insb
fs
out
cmpsl
push
xor
cld
insb
pop
sbb
xchg
xchg
xor
lods
les
adc
ret
cmp
fcomps
sbb
data16
adc
call
fisubrs
xchg
int
sub
repz
daa
movsl
test
xchg
xchg
or
and
mov
jecxz
mov
sti
jmp
inc
push
xor
add
loope
stos
cmp
mov
or
imul
xlat
scas
dec
add
orb
fisubs
inc
jae
sub
rcrl
sbb
xor
test
inc
sbb
lahf
and
jo
pop
out
mov
call
fwait
mov
adc
and
push
sbb
dec
outsl
cltd
and
les
mov
hlt
fwait
cmp
jbe
push
int3
gs
jmp
add
adc
ljmp
push
outsl
cmc
dec
jle
mov
out
icebp
insb
mov
jo
test
sub
cltd
and
push
and
stos
cmp
stos
scas
sub
call
inc
pop
lret
cmpsl
inc
push
iret
dec
insb
sahf
dec
cmp
daa
sub
cmp
mov
ficomps
push
or
pop
push
or
les
adc
nopl
neg
push
cmp
stc
sahf
ficoml
or
mov
popf
cmp
add
sub
imul
inc
xlat
mov
adc
mov
sub
repz
add
js
pop
mov
ret
ror
test
pop
mov
pop
rorl
push
xchg
jp
ds
jnp
addr16
push
pop
dec
adc
hlt
call
jne
popf
call
dec
rcr
xchg
jae
stos
lods
lret
out
cli
xchg
scas
jbe
mov
sub
add
mov
mov
sbb
adc
les
and
mov
incl
cmp
xlat
lcall
adc
repz
pop
lods
cld
jb
pop
xchg
and
xchg
movsb
xchg
je
inc
sub
repnz
lahf
stc
jne
inc
int
mov
mov
or
pop
xor
testl
in
test
call
mov
test
test
mov
out
or
lcall
test
cltd
in
ds
mov
inc
pop
jecxz
das
mov
or
adc
dec
cmp
mov
mov
jno
push
inc
xlat
jp
je
fstp
mov
in
out
stos
call
aam
sub
mov
stos
out
ljmp
fstl
dec
loopne
mov
mov
adc
leave
jb
lea
cmp
and
imul
ja
rorl
add
xchg
or
push
aad
xor
dec
es
repz
pop
xlat
fnsave
sbb
movsb
popa
out
ss
jae
rcr
ja
fisubrs
pop
imul
dec
adc
cwtl
fcoms
mov
push
mov
jno
cli
popl
aaa
fsubrs
and
mov
cltd
or
cwtl
pusha
in
jge
add
fisttpll
sbb
inc
or
ljmp
add
scas
cld
pop
loop
sbb
out
popa
data16
xchg
push
das
sbb
inc
pop
nop
mov
push
push
and
inc
push
pushf
and
dec
mov
mov
and
decl
flds
out
lds
cltd
mov
sub
and
pop
pop
add
push
mov
arpl
shl
aas
cli
pop
mov
mov
adc
mov
pusha
aas
inc
ds
lods
cmp
cmp
dec
inc
add
inc
aam
je
test
sub
add
cmp
in
sub
jae
das
inc
jns
mov
or
lock
fsubs
jnp
stos
lock
cmpsl
popa
mov
in
lods
rcll
pop
leave
dec
rcrb
ja
mov
add
mov
in
xor
sub
xor
jb
or
inc
push
jb
mov
adc
icebp
and
add
int
cmp
test
jne
pop
sbb
divl
outsl
rcrl
xor
xor
mov
shlb
cmp
push
mov
xchg
out
lea
sar
leave
addl
rorb
cmp
or
inc
sub
dec
cmp
mov
lods
xchg
adc
sbb
cmp
mov
jnp
dec
cmp
mov
popa
lock
int
push
hlt
push
roll
inc
pop
or
adcb
dec
repnz
in
fisubrl
rol
pop
xor
mov
jl
push
fdivrs
and
or
push
ljmp
pextrw
insl
jo
dec
mul
jl
stos
aas
lods
lret
jmp
pop
inc
mov
mov
pop
in
clc
add
or
mov
jnp
dec
xor
inc
sub
ljmp
call
and
popf
mov
icebp
fstps
push
fstps
cmp
add
sub
icebp
adc
mov
xchg
div
and
clc
nop
push
mov
sbb
xchg
mov
fadd
stos
and
lahf
ds
push
inc
push
jg
fistl
and
pop
pop
ret
and
sbbb
test
in
push
nop
push
loop
xchg
jl
ja
cmp
sub
scas
mov
dec
jecxz
cmp
sti
mov
sbb
mov
pop
in
xchg
syscall
push
jno
and
addr16
fs
fldl
xchg
and
push
lods
movsb
lahf
popf
or
cwtl
mov
nop
ljmp
ljmp
cli
aam
jne
das
add
inc
sbb
pop
unpckhps
sbb
mov
fisttpl
fists
or
mov
cmpsl
and
es
iret
and
aas
sbb
jo
stos
inc
movsl
adc
adc
jae
sbb
rclb
lcall
jge
testl
out
jae
shrl
or
mov
xor
repnz
cmp
lods
sub
mov
pop
cmp
in
xor
adc
lock
stos
push
arpl
adc
ljmp
loop
jle
jecxz
jecxz
add
inc
aaa
lods
cmp
sbb
pop
xor
dec
mov
gs
fisubs
or
pop
jecxz
inc
xor
idivl
popa
fidivl
pop
add
mov
sbb
test
jp
enter
das
or
imul
cli
cmp
mov
mov
xorl
aad
pushf
add
rolb
cmp
iret
lret
sub
jmp
int
pushf
pop
sbb
in
and
pop
inc
adc
pop
andb
and
jmp
jbe
push
pop
xlat
sub
movsl
mov
pusha
pop
cs
mov
pop
iret
lock
cmp
subb
loopne
pusha
mov
pop
pop
fs
pop
dec
add
mov
mov
inc
or
add
xlat
cmp
push
aas
dec
sti
and
xor
sbb
and
cwtl
aad
movsb
imul
cmp
insl
xor
arpl
das
mov
mov
jmp
scas
rolb
in
push
ljmp
fists
ljmp
push
loopne
mov
sub
stos
rolb
cli
stos
je
add
inc
subw
insb
icebp
jg
les
ret
scas
xchg
mov
dec
push
jae
push
cmp
cltd
sarb
loope
xchg
xor
mov
leave
loopne
push
and
jno
adc
shrb
int3
xchg
test
jmp
push
rorl
inc
je
inc
sahf
das
fwait
loopne
cmp
sbb
imul
mov
push
add
cmpsb
pop
movsb
bound
and
repnz
and
flds
movsl
fistl
imul
jecxz
jle
aaa
pop
adc
test
xor
pop
sbb
subb
xor
xchg
stc
add
cmpsl
mov
movsl
add
push
xor
xor
sbb
mov
mov
dec
add
movsb
push
pop
mov
mov
insl
xchg
in
jge
mov
pop
mov
sbb
or
inc
out
mov
mov
push
cmp
mov
adc
add
les
jne
je
push
js
loopne
cmpsl
cwtl
mov
dec
pop
hlt
fldenv
sub
scas
leave
out
jo
sbb
fwait
sub
cmpsb
int
push
lods
push
iret
adc
imul
shl
sbb
scas
aam
add
sub
aad
bound
sbb
dec
add
call
push
xorl
sarl
xor
sub
jo
jo
ret
add
popf
sarb
stos
add
push
sbb
pop
cmp
pop
cwtl
or
sub
stos
push
pop
and
xchg
mov
sbb
mov
out
lahf
mov
neg
cld
ja
testl
jae
mov
ja
fimuls
out
pop
or
xchg
ret
mov
sahf
sar
sahf
sbb
inc
das
dec
enter
sbb
loope
mov
adc
cmpsb
rorl
and
cwtl
jecxz
xor
out
sub
cmpsb
pop
pop
inc
insl
push
jno
sub
push
dec
push
mov
push
pushf
mov
scas
insb
insl
jmp
fdivl
push
out
mov
and
test
pushf
leave
mov
sub
xchg
jnp
jo
sub
xchg
stos
sub
xor
sbb
aam
into
fists
int
orb
fsubs
inc
cmc
aam
dec
mov
and
inc
pop
jecxz
sub
pop
and
sub
repnz
add
lods
push
mov
mov
jo
je
xchg
js
imul
mov
pop
jnp
addr16
pop
jge
mov
adc
popf
fnstenv
orb
dec
ret
sbb
jmp
in
xchg
mov
inc
or
dec
cld
jecxz
lock
fldenv
scas
sti
xchg
ret
dec
dec
mov
xchg
add
sbb
mov
lock
mov
loopne
jbe
dec
idiv
loope
dec
mov
push
sbb
lock
mov
push
inc
mov
nop
ss
jb
mov
lods
add
and
adc
xchg
add
mov
lea
sahf
int
insl
fwait
icebp
sub
dec
mov
call
sbb
ret
aaa
or
xor
xchg
xchg
xlat
add
or
das
dec
loopne
adcl
add
sar
popf
lea
std
aad
or
dec
mov
out
jge
sub
mov
testb
lods
hlt
call
xor
fstps
mov
cmp
mov
cwtl
pop
hlt
sub
cmc
cmp
or
and
sbb
pop
add
scas
bound
je
sub
fstpt
pop
push
dec
cld
mov
addr16
mov
pop
lret
flds
adc
andb
cmp
adc
sbb
jmp
dec
mov
mov
ret
inc
cwtl
arpl
or
sub
xchg
rcll
into
cltd
test
lahf
lock
stc
lret
and
pop
aas
push
mov
xor
std
std
clc
cmp
test
xchg
repnz
mov
cmc
fisubl
imul
mov
stc
ljmp
filds
loop
in
push
lods
push
lahf
dec
cmpsb
bound
pushfw
add
push
cmp
stc
out
and
cmp
inc
xor
cli
sarl
push
xchg
test
cmc
lock
add
xchg
pop
adc
inc
xchg
aam
inc
jo
xchg
push
xor
mov
fwait
pushf
mul
xchg
sti
aaa
je
mov
sub
mov
sbb
push
and
fwait
xchg
adc
fidivrs
mov
cmp
mov
mov
jne
cwtl
call
imul
push
mov
sub
addl
loope
xor
jmp
fcmovne
pop
cwtl
jnp
or
test
rclb
jmp
or
jmp
andb
dec
or
push
xchg
adc
xchg
js
nop
lods
leave
sbb
cmpsl
push
neg
enter
loopne
mov
test
push
pop
cmp
outsl
pop
or
rclb
mov
fstpl
fdivrs
int
push
dec
and
xchg
xchg
stos
test
out
jecxz
sbbl
repnz
loope
pop
cli
xchg
xchg
push
pop
roll
and
leave
pop
out
mov
in
jae
push
cmp
hlt
in
pusha
push
jecxz
or
xchg
daa
mov
xor
push
xorb
insb
imul
fwait
out
inc
je
lods
sbb
in
xor
gs
mov
xlat
xchg
fwait
pop
das
test
mov
in
es
dec
mov
std
testb
orb
push
cmpsl
ss
dec
pushf
sub
loope
pmaddwd
popa
aas
addr16
jb
inc
dec
dec
test
ret
dec
notb
push
mov
dec
mov
mov
push
sub
mov
out
pop
stos
push
negb
mov
lods
push
push
and
jns
icebp
jnp
cmp
pushf
shlb
loope
jp
sub
mov
sti
pusha
cmpsl
xor
xchg
out
hlt
pop
ja
add
sbb
ljmp
es
je
mov
cmp
jns
cmpsb
xchg
push
repnz
inc
pop
dec
in
clc
hlt
lods
and
mov
and
mov
gs
and
pop
lods
jns
out
js
stos
cmpsl
or
jg
ss
cld
cmp
int3
in
into
adc
ljmp
rcl
jbe
jl
popa
imul
mov
adc
repnz
xchg
icebp
sti
cmpsb
xchg
loope
cmp
pop
arpl
lock
inc
push
int3
das
xchg
jo
pusha
sbb
lds
in
jp
xor
dec
sub
mov
or
movsb
fsubrs
loopnew
sti
adc
push
jmp
mov
push
add
cs
xlat
je
dec
icebp
push
aas
add
loope
sbb
insb
mov
xchg
mov
les
rolb
pop
dec
out
jge
movsb
imul
std
inc
dec
rclb
inc
test
pop
leave
cld
xor
add
stc
andb
jecxz
loopne
jle
mov
lea
xor
adc
cmp
aam
jo
inc
sti
addr16
mov
js
in
mov
outsl
repnz
lea
mov
cmp
scas
sbb
jle
and
stc
sbbl
movsl
sub
and
in
xchg
fisttps
push
stos
cld
mov
cmp
push
mov
cmp
fisubrl
adc
and
push
jbe
jb
jl
mov
xor
addr16
fwait
stc
pop
fidivl
mov
mov
in
addl
mov
jnp
paddusb
jb
jl
pop
enter
pop
repnz
lret
jbe
jnp
xor
loop
enter
adc
inc
add
cmpsb
sub
xlat
mov
add
mov
mov
jno
cmp
cmp
pop
les
mov
cmc
jl
aas
cmpsl
cmp
ret
inc
sub
nop
test
aam
push
lds
icebp
out
pop
xchg
ffreep
cmp
movsb
xor
std
or
push
filds
and
fiaddl
loope
fisttpll
lods
fdivrp
mov
outsl
repz
push
mov
xchg
mov
daa
sti
aas
shll
outsl
xchg
test
jno
pusha
cmp
mov
xchg
je
or
scas
dec
add
jns
jae
mov
push
mov
popf
sar
push
outsl
addr16
stos
xchg
mov
mov
pusha
pop
lcall
and
cld
in
popa
ja,pt
mov
pop
sbb
call
and
mov
adc
push
cmp
iret
jo
mov
lahf
push
add
andl
push
daa
or
and
fisubrl
inc
lret
xor
mov
push
mov
mov
frstpm(287
mov
rorl
push
jge
xchg
lods
xor
shl
arpl
adc
fmuls
std
les
xlat
je
lret
or
mov
repnz
and
dec
pop
push
jbe
jno
add
sub
scas
mov
adc
shl
mov
into
add
xor
mov
xchg
sbb
push
or
dec
in
cli
or
fwait
hlt
sub
xchg
int3
or
stos
pop
or
dec
inc
mov
ja
cmp
in
sub
pusha
cli
push
repnz
adc
or
push
out
aad
test
add
in
outsl
cmpsl
aam
roll
mov
lds
mulb
jae
mov
jmp
hlt
mov
add
lods
dec
adc
jmp
fsubrs
cmpsl
jo
xchg
leave
loop
push
lahf
xor
dec
or
aaa
shlb
mov
jle
dec
bnd
loopne
xchg
je
dec
cmp
vpsllw
xchg
jmp
sbbl
enter
and
or
mov
jne
inc
and
sbb
jp
fdivrs
adc
insl
sub
stos
icebp
adc
push
dec
cmc
pop
cmp
sbb
or
dec
push
or
cmp
cltd
jne
inc
mov
adc
repnz
mov
outsl
jno
push
cmc
xor
pop
cmpsb
fwait
insl
jae
push
lock
pop
je
xor
or
lods
insb
aas
adc
loopne
dec
mov
mov
rcl
mov
sbbb
and
fs
ret
shlb
push
arpl
mov
std
pop
ret
bound
in
xor
lods
imul
scas
fidivrs
stos
mov
ss
and
in
adc
cld
adc
out
or
imul
leave
clc
pop
mulps
sbb
fbstp
scas
xchg
push
mov
xchg
daa
xor
inc
push
sub
xchg
sti
dec
jle
fadds
daa
aam
pop
add
xlat
push
into
jg
jle
xor
out
dec
lods
mov
in
jg
ljmp
mov
mov
das
pop
stos
cmp
icebp
jge
ss
shll
aad
das
rcl
cmpsl
imul
int
sub
add
popf
adc
rcrb
push
cmpsb
mov
mov
cmpsl
dec
xor
dec
dec
jns
jb
pop
pop
push
repz
in
adc
mov
mov
in
mov
pop
mov
inc
dec
shrl
cmp
shrb
jb
mov
pushf
stos
scas
decl
dec
sti
mov
jne
jnp
ret
mov
js
and
mov
filds
int
push
pushf
adc
test
cmc
inc
add
sti
lods
inc
adc
repnz
and
jo
jmp
stos
push
repz
rolb
out
pop
adc
outsb
cli
in
jnp
pop
leave
jae
pop
xchg
fistpl
inc
push
fstp
and
inc
test
sar
mov
push
adc
stos
sub
inc
sbb
nop
jae
lds
leave
lock
jle
or
pmaxsw
mov
pop
fucomip
adc
push
test
xchg
sbb
imulb
cs
adc
mov
lods
xor
jbe
jle
xor
fsubl
mov
push
push
pop
out
cld
xchg
clc
and
aaa
cli
vmaskmovdqu
shl
mov
and
xchg
add
ljmp
out
leave
cli
sti
inc
jb
xchg
gs
xchg
ret
movsl
lea
cmc
rol
or
ret
hlt
ljmp
and
xchg
inc
ficomps
stos
pop
and
mov
push
xor
loop
pushf
sub
and
adc
dec
mov
aas
jge
cmpsl
into
jnp
mov
fs
dec
subb
pop
pop
fwait
test
addl
mov
cmp
fidivs
mov
fwait
mov
mov
clc
mov
aam
ja
xchg
out
bound
sti
pop
push
ret
or
sub
mov
mov
lock
xchg
and
call
add
pop
loopne
scas
mov
inc
pop
sub
clc
or
ja
loop
sub
dec
rolb
arpl
mov
add
stos
fs
nop
mov
js
xor
sbb
jo
sbb
test
add
push
daa
addl
sbb
and
xlat
xor
leave
test
or
sbb
fisubs
fwait
sbb
mov
ja
in
repz
stos
icebp
cmp
add
sub
sarb
xchg
mov
jge
daa
cld
sub
cmp
pop
ret
push
aaa
mov
mov
inc
in
je
lds
mov
add
xor
movsl
stos
movlps
jecxz
cs
lret
mov
icebp
call
loopne
sarb
fsubrp
sbb
xor
jbe
sbb
xor
mov
rol
adc
call
mov
and
les
xchg
and
test
aad
mov
mov
sub
std
jnp
inc
stos
mov
pop
pop
movsl
inc
imul
shlb
mov
sbb
or
fstpt
shrb
adc
mov
cli
add
jge
jbe
aas
jge
imul
cmp
jbe
sahf
sbb
or
sbbl
mov
fwait
or
xchg
and
je
lcall
push
add
dec
ljmp
push
rcll
nop
enter
xchg
jno
mov
or
mov
and
insl
gs
lret
jge
push
xor
adc
mov
pop
mov
hlt
cmpsl
and
cwtl
add
pop
xchg
lea
loope
mov
lods
es
fldl
inc
adc
pop
movsl
push
mov
outsb
mov
pop
pop
push
sahf
repz
mov
push
push
dec
mov
out
add
outsl
mov
xor
lahf
or
ret
loopne
lret
push
mov
push
or
insl
clc
push
sub
sbb
mov
push
js
lods
xchg
out
xor
pop
sub
fisttps
adc
lods
sub
cld
loopne
aas
negb
dec
test
test
cmpsb
sbb
fildl
fisubrl
sbb
xchg
lds
or
iret
int3
and
mov
leave
jge
xor
pop
sub
icebp
sbb
sbb
push
fists
sti
push
pop
push
cmp
ds
inc
and
enter
ljmp
xchg
or
lret
inc
fistl
jo
jns
pop
pop
outsl
aad
notb
jmp
push
mov
lock
and
stc
int3
ficomps
dec
sub
dec
outsl
lret
pop
adc
mov
push
popf
pop
test
je
push
inc
inc
mov
push
test
out
lods
cmp
out
mov
inc
cmp
mov
mov
and
pop
add
popa
mov
push
mov
out
clc
pop
add
xorl
jae
out
divl
mov
push
icebp
push
das
leave
sbb
inc
fs
xor
cmc
mov
ret
fdiv
or
sub
mov
jmp
pop
ss
cld
dec
pop
bound
fisubl
push
cmp
aas
movsb
inc
lret
jns
and
nop
dec
bound
or
adc
leave
insl
call
and
jle
mov
enter
pop
pminub
gs
sahf
or
pop
fiadds
sahf
xchg
xchg
add
add
scas
negb
in
sti
and
in
ljmp
dec
mov
out
xchg
adc
stc
test
jb
pushf
into
adc
mov
lods
mov
push
push
xor
mov
push
cmp
mov
js
add
pop
cmp
fistl
scas
pop
push
push
lret
dec
insb
repz
xchg
mov
test
dec
mov
mov
xchg
cmp
scas
inc
lods
test
push
cmpsl
mov
pop
mov
inc
push
jp
sbb
and
xorl
or
lds
or
jge
je
out
inc
pusha
daa
push
pop
sbb
jns
nop
mov
fnsave
dec
cmpsl
mov
cs
cmpl
je
and
insb
sbb
imul
mov
lods
mov
iret
sub
popf
cmp
and
je
ret
pop
test
test
xlat
dec
sbb
sarl
dec
jp
test
inc
sub
in
icebp
mov
mov
mov
or
loop
mov
shlb
jnp
mov
stos
outsl
lcall
pop
push
mov
mov
mov
in
bound
cmpl
mov
mov
aad
je
movups
fisttpll
cli
push
or
std
jnp
jb
ss
fcoms
fnstsw
lods
add
mov
mov
stos
cld
ljmp
leave
push
addr16
sub
mov
add
sbb
aad
sarl
inc
and
pop
insl
repnz
mov
mov
fmulp
dec
jo
sbb
rol
jne
cmpb
divl
in
test
std
xchg
iret
cmp
jbe
ljmp
out
stos
jb
lahf
inc
nop
mov
pop
xorb
or
xchg
sub
stos
sarb
in
xchg
xlat
push
sub
jb
cltd
xlat
mov
lods
bound
pop
push
pop
adc
or
dec
in
add
add
pop
rcll
les
rcrb
sbb
dec
ret
xchg
push
sub
fwait
idivl
jbe
adc
icebp
imul
inc
dec
cmc
outsl
das
dec
shll
adc
in
jge
jb
sarl
stos
mov
lock
pop
adc
mov
es
neg
outsl
mov
xchg
cmpb
dec
mov
in
pop
and
mov
push
push
sbb
adc
mov
stos
sarb
subb
jl
xor
inc
sbb
lret
mov
lods
mov
and
out
or
scas
jne
inc
mov
in
jo
loopne
out
jnp
insb
mov
mov
stos
movsl
xchg
pusha
jg
mov
xor
and
add
jge
lock
adc
out
ja
enter
inc
xor
cmp
stos
inc
mov
js
ret
sub
or
iret
scas
inc
mov
sbb
jae
dec
add
pushf
mov
jecxz
jbe
adc
mov
sub
dec
push
mov
mov
hlt
and
mov
push
mov
xchg
xor
ret
dec
int3
popa
repz
push
mov
jnp
jmp
xor
push
jl
jae
bndstx
ficompl
ss
cmc
test
dec
xchg
push
bound
dec
stos
cld
fwait
repz
adc
cs
mov
mov
rol
les
jl
xchg
dec
leave
subb
mov
out
outsl
lahf
mov
mov
loop
push
lods
sarl
pop
cltd
addr16
push
into
xchg
pop
sbb
inc
add
mov
push
sub
fs
es
and
inc
cmp
lods
mov
ret
mov
pop
xor
loop
mov
faddp
fdivl
outsl
push
lods
cmpsb
push
or
repz
cs
ds
shrb
hlt
stos
xchg
in
roll
push
xchg
popf
in
add
jecxz
jmp
insb
in
stos
and
int
sub
jns
cmp
lcall
xor
jnp
pop
leave
cmp
enter
insb
nop
ds
jl
lods
clc
pop
xor
mov
aas
inc
loopne
dec
icebp
lret
lcall
jl
aaa
aaa
fs
adc
mov
inc
or
jne
mov
ds
or
xor
push
arpl
mov
dec
daa
fistpl
outsb
push
repnz
mov
repnz
in
movsl
shrl
mov
pop
add
sub
sbb
and
pop
es
lock
imul
pop
dec
add
cmpsb
pop
fs
sbb
xor
call
icebp
and
jnp
adc
inc
sub
mov
push
cld
cld
int
loopne
jge
xchg
adc
mov
push
push
inc
adc
pusha
inc
pop
pop
ret
adc
sti
dec
inc
sub
loopne
inc
rorl
popa
push
pop
jo
fucom
loopne
pop
jg
not
add
adc
dec
and
jnp
mov
and
add
xor
dec
or
cmpsl
lods
add
shll
cltd
adc
popf
mov
lahf
mov
xchg
xchg
ss
repnz
jmp
push
push
arpl
sarl
pusha
fld
xchg
aad
xchg
mov
lods
pop
cmp
lret
insb
mov
sbb
iret
fsubrs
hlt
xchg
rol
cli
xabort
lods
mov
lods
inc
hlt
inc
or
cmpsl
xchg
sbb
and
ss
bound
inc
bound
rclb
into
xor
idivl
push
adc
pop
dec
pop
and
and
ret
cmpsb
js
or
adc
cli
xor
xchg
js
xchg
inc
mov
cmp
push
xor
mov
fidivrs
pop
push
pop
test
jle
pushf
js
loope
out
sub
sbb
mov
jns
imul
adc
mov
inc
cmp
dec
jg
std
stos
decl
cmp
orl
sub
adc
cmc
ss
lods
cmpsb
pop
xor
test
stos
inc
sub
in
popa
push
andb
push
xor
aam
leave
movsb
xor
xor
xchg
mov
js
inc
inc
pop
and
je
jg
push
add
or
stos
jecxz
mov
pop
clc
pop
jmp
leave
clc
and
inc
or
sarl
mov
lret
out
xor
lcall
fxch
ljmp
icebp
jns
or
dec
testb
jbe
push
dec
xchg
test
cmc
dec
pop
cmp
lcall
icebp
ja
hlt
sti
je
mov
dec
out
out
xor
mov
sub
nop
mov
call
rorb
cmp
cld
adcb
pop
aaa
pop
aam
clc
test
movsl
sbb
add
imul
ja
jne
rorl
out
popf
cwtl
rep
fildll
shrb
mov
lods
pop
lahf
ficomps
jae
mov
test
lcall
cmp
add
loop
lcall
cmp
lahf
sub
loopne
mov
scas
movsl
cli
add
in
push
xor
lds
pop
mov
or
fisttps
push
pop
sbb
mov
xchg
add
jne
or
mov
cmpsb
xchg
add
jns
insb
pop
out
iret
es
jg
loope
pop
cli
hlt
mov
imul
movsb
popf
xchg
push
pop
sti
sbb
cmp
xor
repnz
les
jecxz
shll
xor
ljmp
sarb
adcb
fs
mov
les
cs
cmp
mov
push
adc
mov
xor
mov
loope
arpl
cmp
lds
pop
dec
cli
and
pusha
add
fmull
cwtl
xchg
dec
xchg
xchg
in
inc
sub
mov
ss
mov
test
in
cwtl
in
cmpb
lret
jp
sbb
je
sbb
popa
xor
stos
pop
out
jne
and
push
mov
mov
mov
insb
mov
xchg
ljmp
stos
shlb
pop
dec
loope
lods
mov
sbb
push
test
push
lods
lds
hlt
lods
fldt
add
cmpsl
jl
sbb
jmp
stos
fstpl
pop
sarb
arpl
outsl
aad
imul
xor
ficompl
dec
xchg
enter
lahf
cmpsb
pop
or
addb
idivb
shrl
mov
and
mov
mov
mov
pcmpgtw
daa
lahf
push
clc
out
adc
and
and
push
ja
mov
inc
hlt
mov
dec
lea
jno
jecxz
xor
and
sbb
cmp
cmc
mov
popf
cmpps
mov
filds
das
push
dec
add
jp
xchg
add
decl
adc
rorl
xor
push
lret
mov
xchg
in
fsts
out
into
mov
outsl
jns
xor
push
pop
xlat
ja
push
cmp
xlat
insb
xchg
int3
rcl
ret
fstl
fldz
nop
and
mov
xor
mov
inc
dec
jno
dec
or
ret
jns
dec
mov
fistl
loope
arpl
jno
inc
ret
mov
cmc
adc
fnstsw
inc
xor
xchg
or
dec
dec
sbb
fwait
dec
movzbl
cmp
add
jl
rolb
xchg
in
inc
pop
fwait
and
imull
imul
xor
jecxz
jo
incl
jge
dec
mov
mov
and
cmpsb
lods
jmp
fwait
xor
pop
jnp
sbb
push
push
jo
add
push
cli
jae
movsl
mov
adc
pop
mov
fsts
leave
push
jnp
sbb
inc
push
adc
lods
aas
or
popa
cwtl
jp
mov
flds
xchg
test
movsb
roll
lret
push
jge
ret
stc
ss
hlt
xchg
cmpsb
dec
sbb
sbb
xchg
xor
pop
mov
add
dec
mov
ss
and
adc
test
cmp
aas
fdivrl
mov
push
jg
aaa
aad
fcomps
imul
scas
ljmp
and
nop
inc
fdivs
inc
cmpsb
cs
rcrb
fisubs
mov
sub
sbb
mov
mov
pop
push
mov
and
pop
ss
dec
imul
cld
popf
and
sub
add
cli
mov
out
mov
lods
mov
lcall
push
data16
test
xor
xchg
nop
and
or
movsb
or
mov
mov
push
mov
popf
aad
rolb
xchg
jecxz
pop
and
push
xor
les
inc
scas
xchg
fs
gs
into
gs
xchg
repz
les
test
clc
mov
mov
add
and
movsb
scas
mov
push
pop
add
dec
or
adc
cli
lods
mov
std
iret
add
push
pop
lret
mov
mov
push
stos
xlat
push
mov
dec
xchg
clc
mov
mov
push
aas
mov
ret
insb
jnp
test
in
popf
xchg
ljmp
pushf
mov
mov
mov
cmp
push
push
sbb
hlt
imul
out
std
or
jle
mov
outsb
sbb
push
cmpsb
xchg
test
or
leavew
add
loopne
and
jg
int3
inc
pop
pushl
leave
xlat
lea
push
cwtl
arpl
mov
pushf
sbb
into
mov
loopne
mov
sti
sub
pop
pop
es
and
mov
cld
mov
aaa
jge
pop
fwait
lahf
xchg
add
mov
dec
stos
or
cmc
mov
sub
lahf
adc
push
jo
jg
enter
xor
andb
push
je
sub
or
and
dec
adc
or
fwait
xor
dec
jecxz
pop
imul
insl
das
shlb
iret
xchg
fdivl
imul
bound
int3
push
mov
mov
clc
push
inc
out
add
in
jb
stos
sub
inc
lds
cmp
aas
std
push
out
xor
pop
mull
dec
fists
imul
shr
orb
pop
push
dec
inc
cmc
push
xchg
cmp
mov
dec
jp
add
and
mov
jo
jne
pop
cld
mov
sub
jo
sub
xchg
icebp
cmpsb
repz
aad
mov
mov
lods
fwait
sbb
icebp
push
pushf
push
xor
repnz
outsb
adc
aas
jnp
fcomps
jno
repz
xlat
ss
lods
stc
test
mov
xchg
lods
mov
fwait
imul
fcomip
mov
cmp
push
mov
sub
fisubrl
jmp
in
lret
lock
xor
popf
fnstenv
adc
pop
push
fsubrl
fsubrp
pop
fidivs
xchg
addr16
add
push
jecxz
mov
inc
neg
inc
mov
ljmp
sub
cmp
js
scas
mov
cmpl
lahf
dec
dec
repz
leave
xchg
jns
fwait
ret
jmp
arpl
subb
jecxz
cmpl
sub
xor
cs
out
mov
ss
call
dec
cltd
jecxz
adc
cmc
fistpll
fdivrs
in
push
and
jl
dec
inc
call
pop
dec
adc
xchg
add
outsb
popa
cmpsl
push
fwait
cmp
test
stc
mov
pop
andl
mov
xchg
sbb
push
add
ds
pop
push
pop
in
data16
mov
inc
xlat
mov
adc
orl
sti
std
mov
mov
neg
dec
push
mov
outsl
xchg
mov
cmp
pop
and
push
jbe
adc
lods
push
cmp
mov
pusha
xor
sahf
add
xorb
sub
push
leave
nop
popa
mov
loop
hlt
loopne
mov
subb
pop
jns
sti
cld
inc
xchg
push
andl
decl
cs
xchg
cld
stos
sub
sub
mov
mov
cli
push
jno
test
stos
imul
xor
cmpsb
daa
imul
jp
popf
mov
mov
mov
js
ficomps
lcall
cmpsb
adc
cmc
inc
jecxz
outsl
xor
sbb
cmpsl
ja
rcrl
call
push
xor
push
inc
sti
rcl
cmp
popf
fs
repnz
inc
mov
cmp
ficompl
fcoml
mov
cmpsb
sarl
stos
jecxz
adc
adc
bound
mov
jns
repz
lods
jg
push
mov
rolb
jl
cmpsl
xor
or
fidivrl
enter
scas
push
sbb
dec
mov
shrb
inc
je
or
test
fsubr
sub
into
scas
pop
xor
mov
daa
not
mov
mov
es
es
shrl
aam
fstpt
int3
test
and
data16
jns
pop
push
mov
test
enter
enter
sub
cli
mov
sub
push
sbb
mov
jno
shrl
je
pushl
and
scas
sub
add
int3
and
pushf
push
and
loopne
fbld
lods
nop
jbe
insb
mov
jno
outsl
sbb
push
lret
jp
cli
sub
hlt
cmp
test
dec
cs
cmc
or
movsb
jne
cmpsl
xchg
in
dec
imul
insb
mov
adc
outsb
cmpsb
adc
or
or
jns
repz
adc
je,pt
repz
jnp
add
repz
sti
int
xor
bound
dec
repz
repnz
ja
dec
adc
andb
push
push
or
fstp
pushf
push
shrb
popa
and
fdivrl
sbbb
push
push
mov
int
lds
jns,pn
popf
sbb
into
insb
int3
dec
push
pop
stos
mov
xor
pop
mov
fwait
pop
mov
aaa
cs
push
nop
scas
inc
dec
call
jae
pop
test
into
pop
ror
popa
cmp
push
fbld
shll
andb
fwait
ret
push
popf
jecxz
ret
sub
enter
push
es
ret
sbb
sbb
mov
movsb
mov
inc
sub
aam
es
and
lret
daa
xor
gs
sub
xor
fwait
lahf
data16
test
lds
sub
adc
adc
repnz
inc
inc
or
movsb
fpatan
sahf
xchg
inc
iret
push
ja
sub
or
arpl
jns
cwtl
xchg
xor
and
test
addr16
xor
sti
es
sbb
pusha
cmpsb
stc
testb
xor
pop
cmc
push
rcrl
neg
mov
jge
fcmovnbe
push
dec
ds
xchg
stos
fnstsw
js
pop
dec
xchg
js
or
test
xchg
lcall
mov
push
pusha
popa
inc
inc
xchg
jmp
dec
addb
mov
mov
xchg
fs
lahf
xchg
pop
and
jne,pt
xchg
mov
mov
out
pop
push
addb
pop
inc
push
jo
lods
adc
sub
stos
jg
cmp
sub
ja
sbb
push
mov
mov
mov
xchg
or
sbb
aaa
fs
aam
mov
mov
aam
push
mov
fdivr
arpl
push
cmp
xor
sbb
jmp
roll
inc
adc
push
adc
fnstenv
xchg
sub
inc
rclb
inc
mov
aaa
adc
push
in
or
xchg
lahf
cmpsb
aad
add
fwait
mov
inc
lock
push
adc
pop
paddq
test
movsl
testb
mov
jo
jge
sti
mov
jp
lret
insb
xchg
fwait
jno
data16
ret
jle
xorb
ret
cmpsl
addr16
das
xchg
shll
test
xchg
outsl
mov
lock
lods
les
imul
cli
pop
and
adc
mov
mov
mov
push
adc
sbb
push
push
pop
cwtl
sbb
dec
repz
push
mov
ss
mov
fdivs
shrl
push
mov
xor
push
loop
cmp
test
xlat
popf
insl
lret
fs
jo
mov
mov
xor
pop
or
ret
and
jp
je
test
sub
lret
sub
lds
cmp
fdivl
fadds
addr16
mov
xchg
loop
shll
push
lock
inc
jbe
inc
decl
inc
into
nop
and
jge
pushl
neg
pop
pop
push
jbe
sub
adc
jb
mov
fwait
xchg
stos
adc
fstpt
jg
push
cwtl
jmp
mov
add
sub
rcll
ja
mov
pop
add
fidivrl
mov
insb
sbb
push
andb
dec
ljmp
cmp
add
xchg
pop
xchg
inc
xchg
lahf
out
and
jg
jle
adc
divl
adc
aad
jge
jge
xor
mov
in
inc
jns
inc
mov
nop
lcall
pop
push
adcb
sub
cmpsb
mov
popa
lods
jnp
das
cmpl
shll
js
out
push
sti
and
lret
es
fsts
and
out
hlt
ds
cmpsl
add
xchg
out
xor
mov
insb
mov
xchg
daa
add
lods
test
sub
jl
add
addb
jns
or
or
mov
xchg
int3
mov
rorl
repz
pop
inc
sarl
inc
hlt
jecxz
fcompl
out
stos
cs
inc
push
lret
jno
movsb
js
mov
out
xchg
xchg
jl
push
mov
es
les
mov
jo
sbb
inc
push
mov
out
movsl
aad
test
adc
out
sub
and
ja
push
test
pop
sti
xor
mov
mov
or
aad
sbb
jle
fsubrl
dec
int3
mov
sub
cmp
inc
movsb
call
mov
or
sarb
cltd
int3
push
cmp
sub
fs
aad
jo
jl
popa
jmp
pop
sub
mov
sub
xorl
out
fcmovb
pushf
add
sahf
shl
xchg
mov
rorb
sub
dec
jmp
sbb
iret
lea
out
cmc
adc
push
push
mov
jne
mov
ljmp
mov
cmp
sub
popa
pop
pop
nop
gs
pusha
lcall
xor
jbe
xchg
das
stc
pop
inc
out
cli
inc
test
pusha
sub
jne
cmp
sub
loop
ss
fbld
add
fdivrl
cmc
insl
adc
xchg
fdivl
lret
jbe
xor
es
jp
in
insl
cmp
adc
pushf
into
pop
jmp
adc
aam
xor
ret
roll
push
int
in
ret
jo
and
sbb
incb
pop
aas
les
sarl
loopne
lods
jmp
sub
inc
mov
or
add
push
xchg
sarb
inc
inc
fsubrs
adc
mov
push
sti
js
xor
sbb
inc
mov
movsb
loope
push
inc
inc
pop
adc
sub
ss
push
mov
aam
lahf
popa
and
lea
mov
flds
sbb
sahf
or
jecxz
xor
adc
je
pop
cmpsb
sbb
jge
addr16
sbb
loope
jno
jge
mov
xor
sub
jbe
ss
je
std
mov
arpl
imul
add
cwtl
es
popf
mov
aad
movsl
xchg
adc
mov
mov
mov
jb
addr16
ds
cmp
push
faddl
mov
rcl
mov
or
inc
aas
enter
cld
xchg
xor
popf
inc
mov
xchg
cltd
mov
cli
jle
inc
das
rcll
enter
xchg
clc
cmp
and
movsb
add
insb
mov
in
dec
scas
call
cmp
sub
call
imul
jno
mov
jge
adc
imull
dec
add
fidivl
xchg
mov
sub
cmpl
call
push
data16
add
push
aam
cmc
pop
xchg
xchg
jle
dec
mov
sbb
ljmp
cmp
push
sbbl
adcb
outsb
pop
icebp
push
xor
mov
cmc
or
mov
aam
loopne
push
adc
mov
add
lods
lock
repnz
dec
popa
and
daa
sahf
stos
sbb
sbb
divb
roll
fdivrl
pop
out
call
add
call
cmp
leave
sahf
stos
adc
lods
cli
gs
scas
test
dec
pop
mov
lock
xor
addr16
inc
push
mov
sub
out
adc
push
fcmovnu
jno
cltd
imul
not
sbb
arpl
nop
mov
push
xor
arpl
push
xor
iret
pop
sub
sbb
aas
rcrl
bound
aas
adc
mov
add
dec
aam
jo
mov
in
idivl
clc
out
xor
cmpsl
cltd
mov
out
jb
aas
or
cmp
ret
cmp
jns
push
in
adc
mov
ljmp
rcll
or
push
fwait
in
nop
mov
mov
mov
in
icebp
cmp
mov
jecxz
sbb
callw
or
and
add
cmp
inc
lret
scas
mov
add
sbbl
xor
dec
mov
mov
rorb
out
in
popf
xchg
fs
clc
and
fldenv
xchg
cmp
mov
or
das
ret
mov
sub
addr16
push
jbe
or
mov
push
and
out
movsb
sub
je
test
fldt
jecxz
inc
mov
pushf
nop
and
ret
mov
movsb
popa
dec
fstpt
adc
inc
data16
push
adc
dec
fs
and
or
fmull
xchg
arpl
aam
pop
mov
or
jmp
inc
pushf
cld
and
fstl
cltd
pop
pop
fsts
add
mov
push
out
fucomip
and
mov
test
inc
push
or
imul
test
push
adc
out
cmp
push
pop
aaa
sbb
enter
dec
xchg
adc
rolb
cvtpi2ps
jns
inc
xor
sbb
aaa
cli
and
sbb
je
sub
jl
xchg
lds
subb
lods
ss
xor
cs
lcall
sbbl
sbb
stos
aaa
pop
and
es
mov
adc
adc
lcall
fs
sahf
inc
cld
icebp
lcall
leave
jo
mov
push
inc
ljmp
xchg
xorl
mov
mov
adc
cmp
or
mov
jns
mov
jp
movsl
in
or
xchg
jno
jecxz
sub
lds
push
pop
jne
int3
pop
jno
cmc
rolb
scas
mov
idivl
mov
xor
ljmp
and
pusha
cmp
fistpl
xor
in
data16
enter
inc
fcomps
icebp
pop
fstp
jmp
cmp
stc
xor
mov
popa
sub
stos
lock
cmp
mov
sbb
orl
push
in
imul
rcll
push
add
test
aad
mov
in
lcall
es
xchg
and
adc
jp
enter
cltd
jae
xor
or
xchg
clc
les
int3
lret
push
sub
mov
movb
xchg
and
outsl
or
or
inc
out
out
insb
inc
into
and
imul
push
adc
cwtl
loope
sub
movsl
pop
push
negb
divl
scas
xor
mov
sub
vmovdqu
mov
fwait
inc
push
pop
pop
mov
cli
jno
xor
jg
movsl
cmp
je
dec
fnstcw
cmc
xchg
inc
mov
or
or
scas
add
aad
out
pushf
jecxz
test
jecxz
push
shll
fsubl
sub
loope
dec
jb
lea
cmp
imul
enter
inc
add
jo
cmp
pop
jno
shrb
cmpl
jbe
pusha
fiadds
stos
mov
sbb
push
push
insb
into
pushf
dec
dec
ds
daa
xchg
mov
pusha
jo
sbb
sti
pop
stos
push
fnstsw
arpl
sub
in
pop
iret
neg
adc
xor
ret
sbb
pop
vphaddubd
lods
mov
xor
inc
or
adc
sub
push
test
push
jb
or
in
and
push
daa
shl
clc
xorb
push
adc
clc
dec
iret
mov
adc
cmp
dec
lea
adc
cmp
inc
fstpt
out
pop
and
mov
jl
sub
pop
mov
sub
jae
std
outsb
aaa
movsb
cli
sbb
aaa
arpl
je
cmp
jle
jp
movsb
jg
pop
push
mov
push
sti
push
mov
dec
rclb
xlat
adc
add
cmp
and
in
cltd
fiadds
aam
stc
mov
mov
sahf
pop
imul
ja
cmpsl
int3
ja
outsl
lcall
lret
lods
popa
xchg
jecxz
ficoml
sbb
js
push
movsb
mov
rclb
inc
stc
jb
and
shll
dec
ljmp
lcall
out
mov
subb
push
shlb
inc
imul
and
push
xchg
and
scas
mov
adc
icebp
or
dec
shrb
ds
sub
jmp
push
mov
imul
xlat
out
fbld
icebp
mov
sbb
cmp
or
popa
sbb
data16
inc
je
test
shlb
rcrl
or
or
inc
insb
jg
daa
xlat
cmpsb
or
inc
shlb
mov
inc
dec
stos
pop
test
test
cmp
outsb
jo
lods
jmp
pop
jle
lods
dec
inc
jmp
fwait
push
or
dec
jmp
add
mov
pusha
fildl
cld
aaa
or
sbb
rcl
push
cltd
test
out
psrlq
das
fistl
sbb
or
mov
icebp
inc
xchg
or
bound
xchg
mov
add
push
lret
sahf
inc
xor
imul
mov
inc
fcmovb
out
fildll
pop
mov
cwtl
xor
and
fimull
insl
int
int3
mov
dec
inc
ret
ret
jp
mov
loope
leave
inc
jns
xor
or
jbe
sub
test
ja
inc
jge
popa
and
or
outsl
hlt
or
data16
xchg
mov
jge
inc
cmpsb
insl
movsl
dec
loopne
insl
pop
pop
xchg
mov
aaa
fisttpll
xor
xor
fstl
stc
aam
jge
fisttpl
mov
clc
jae
test
add
add
or
add
ljmp
push
and
adc
xchg
lcall
lods
fmuls
cli
cmc
clc
sbb
popf
test
ret
jge
jp
in
push
test
xchg
and
jno
sub
pop
pop
ja
imul
insl
push
mov
add
cmc
aad
or
pop
cli
movsb
mov
mov
mov
push
sub
xchg
inc
mov
scas
pop
js
dec
sub
mov
inc
repz
adc
fdivrl
fsubl
xchg
cmp
pusha
cmc
push
cmp
or
rcrl
enter
cli
outsl
je
mov
xchg
cmpb
testl
lea
sub
or
loopne
or
pop
stos
add
mov
xor
mov
scas
adc
inc
dec
push
sub
scas
test
in
mov
mov
out
push
mov
cmpsb
push
lea
xchg
lea
cmpb
push
jae
push
data16
jecxz
imull
push
cmpsb
cli
ds
inc
pop
add
jb
pop
in
dec
xchg
jmp
push
sub
add
mov
mov
inc
push
dec
bound
add
inc
inc
and
add
xor
push
sbb
out
mov
clc
test
rcll
sub
xor
pop
push
je
scas
push
sarl
xor
leave
add
mov
push
lods
mov
add
pop
in
aam
fldenv
sbb
jmp
icebp
or
sub
ja
aad
outsb
jg
lock
cwtl
adc
rcrb
jecxz
imul
or
mov
icebp
push
mov
nop
xlat
ss
mov
adc
leave
jae
in
lcall
push
push
sub
inc
sbb
aas
pop
mov
or
fnstcw
ja
pop
add
nop
lds
or
jo
repnz
mov
mov
push
xchg
insb
mov
xchg
in
cmc
mov
rcrb
in
pop
mov
dec
add
sbb
xchg
sub
and
popa
loop
mov
and
cmpsl
xchg
scas
push
xchg
push
outsl
sub
bound
pop
ret
cmp
add
mov
inc
cmc
push
loop
fisubl
pop
pop
icebp
ljmp
ljmp
or
cmp
add
gs
and
cmpb
pop
adc
lcall
or
pop
pusha
push
push
call
cs
mov
push
cli
loope
sti
mov
mov
inc
out
ss
inc
mov
cmp
test
dec
inc
dec
cli
mov
insb
push
jb
inc
in
aas
loop
jns
nop
mov
push
es
sti
cmc
pop
enter
jae
movsl
sub
and
dec
std
mov
push
fdivrl
addr16
std
add
pop
cwtl
lret
ficoml
jg
push
xchg
mov
mov
mov
lret
push
xchg
in
sub
add
dec
scas
cmp
loopne
out
jns
xlat
mov
dec
fldenv
int3
adc
mov
popa
pop
mov
ds
test
pop
xor
inc
mov
fwait
sub
jecxz
lahf
flds
and
ret
insb
cwtl
xor
push
cmp
adc
test
les
jp
in
inc
cmpsl
jge
test
inc
sarb
sub
jge
mov
rorl
inc
ljmp
adcl
mov
sbb
mov
mov
jg
mov
daa
sbb
fwait
mov
cld
repnz
dec
cld
cmp
pusha
andb
test
sbb
push
insb
out
pop
dec
xor
dec
mov
adc
adc
jns
and
movsb
andl
outsl
pop
sahf
test
insl
push
mov
adc
ja
ljmp
inc
mov
pop
cli
mov
mov
add
out
push
fldl
sub
subl
dec
xchg
rcrl
xlat
push
insl
pushf
push
ja
hlt
pop
sub
xorl
insl
push
inc
xor
ja
fdiv
cmp
mov
lahf
int3
adc
int
cwtl
pop
cmp
and
xor
add
js
cmpsl
lcall
and
add
or
out
mov
movsb
pusha
mov
xlat
sub
inc
inc
pop
pop
push
mov
sub
aad
mov
js
test
xchg
pop
fs
mov
push
xchg
xchg
jmp
dec
xor
out
into
jo
xchg
mov
push
mov
lock
and
out
mov
fldenv
addr16
push
or
cmovne
outsl
mov
mov
in
cli
mov
xlat
lds
xchg
int3
and
loope
push
sub
or
sub
mov
or
xor
int
xorb
cmp
adc
loopne
lret
cmp
sub
testl
adc
sub
and
or
leave
fdivrs
adc
pop
andb
inc
mov
push
bound
ret
and
jle
sub
pop
jb
popf
mov
fwait
sarl
loope
cltd
mov
xchg
lods
sbb
cmp
arpl
bound
int
fistpl
cltd
pop
into
imul
push
cmp
ds
jle
lods
sub
mov
rcl
pop
pop
fsub
ljmp
fildll
fdivrp
add
iret
push
cmp
leave
fistpll
xor
rolb
jbe
dec
mov
cmp
loop
rol
jne
jl
mov
dec
cmc
pop
popa
sbb
inc
jle
int3
and
ret
inc
insl
mov
test
adc
fs
ja
ret
pop
sahf
ds
lret
mov
sbb
rorb
outsb
inc
mov
scas
add
cld
jl
sub
rorl
mov
add
icebp
push
ds
incb
int3
jp
sbb
sbb
sbb
xor
xor
ret
xor
adc
and
loope
sbb
mov
jnp
leave
or
cltd
cltd
sbb
jb
lods
int
and
mov
and
add
movsl
test
lods
in
add
jb
int3
sbb
push
rorl
loopne
mov
add
fiadds
test
sbb
sahf
icebp
cmp
push
int3
enter
jno
inc
out
test
mov
sbb
mov
mov
call
mov
testb
push
jg
mov
ror
dec
fcmovnb
or
and
iret
mov
jge
insb
push
out
pop
js
sti
loop
push
mov
mov
inc
inc
std
mov
js
dec
adc
int
xor
aam
ret
mov
xchg
out
pop
xchg
call
stos
gs
cld
hlt
inc
shll
push
cli
not
xor
cmp
cs
fiadds
daa
lret
jne
pushl
mov
pushf
out
mov
mov
mov
add
and
lcall
or
push
daa
jp
dec
ja
push
sbb
mov
xchg
pusha
xchg
cmp
in
adc
pop
xor
aam
jo
aas
movsl
mov
adc
subb
repz
neg
mov
or
aam
mov
lcall
iret
ljmp
xchg
adc
push
add
into
cs
pushf
scas
outsl
sub
rcr
icebp
arpl
mov
lret
addr16
or
jg
popf
std
inc
adc
sbb
fld
xor
lahf
xor
mov
sbb
xor
cmp
out
mov
pop
jnp
rcrb
push
je
js
jnp
pop
stos
fsubrp
sti
adcl
and
fsubrs
outsl
cmp
les
pop
adc
dec
lea
mov
sub
push
mov
out
aas
insl
rclb
xchg
out
aas
or
cld
add
adc
inc
cli
ret
mov
repz
pop
mov
sub
sbb
js
sbb
mov
and
or
sarl
mov
cwtl
ret
outsb
xor
pop
xchg
cmp
je
dec
in
repz
mov
jl
rclb
jbe
mov
jbe
pushf
mov
pop
iret
sti
test
sbb
sar
jo
xor
iret
aam
push
std
fdivrl
ret
adc
pop
push
cmp
xchg
pop
mov
out
aaa
rolb
sbbl
jnp
movsb
scas
mov
dec
cli
push
ss
pop
jne
mov
loopne
jbe
sub
fwait
pop
add
mov
rcll
stos
and
ret
int
insl
rolb
and
stos
mov
dec
addr16
mov
std
mov
xchg
push
adc
mov
arpl
fs
rcrl
lds
lahf
adc
adc
ja
loop
mov
jp
push
fsubrl
into
sbb
imul
and
popf
cmp
mov
nop
pop
scas
mov
mov
add
repnz
push
cmp
lods
in
jb
les
das
aas
lods
mov
dec
sbb
repz
into
or
std
scas
xchg
mov
jl
fimuls
mov
mov
cmc
loop
cli
and
pop
mov
and
push
push
jb
jmp
sbb
mov
and
in
lret
repz
outsl
rcll
bound
sub
aas
fimuls
sub
xlat
stc
iret
jge
xor
fbstp
and
jecxz
sbb
loop
inc
mov
pop
fs
pop
shr
sbb
into
enter
mov
mov
je
cli
push
inc
dec
adc
push
sub
sub
mov
mov
xor
popa
enter
sbb
xor
sti
cs
adc
js
faddl
xchg
lock
and
dec
outsb
adc
repnz
mov
cmp
repnz
adc
into
cs
ds
pop
int
sub
cld
mov
cmp
inc
xor
shll
repnz
les
push
and
adc
loope
fwait
push
push
adc
in
mov
loop
sbb
cmp
movsb
sar
mov
and
stos
faddl
ror
movsb
std
xchg
dec
pop
imul
daa
roll
and
pushf
mov
jne
icebp
clc
xchg
fs
add
rcrb
sbb
sti
sbb
sub
scas
sub
xchg
out
icebp
mov
xchg
dec
scas
popf
xchg
in
into
repz
push
push
push
or
outsb
call
stc
cmp
and
sub
push
call
shl
test
clc
std
movsb
inc
in
mov
mov
mov
sahf
pop
cltd
cmp
jmp
add
mull
mov
xor
out
icebp
sbbl
fwait
cltd
shll
jle
xor
imul
pop
scas
loope
adc
inc
xchg
insb
mov
testb
sub
and
add
dec
push
popf
sub
jecxz
xchg
rolb
ja
int3
daa
js
sub
outsb
and
jp
push
mov
xor
dec
inc
sbb
adc
imul
aam
adc
mov
bound
sub
cmpsb
cmp
test
mov
sub
mov
inc
xchg
scas
arpl
xor
adc
xor
add
pop
movsb
dec
neg
rol
push
or
add
enter
fnstcw
cmpsb
dec
fdivl
fisubrl
int3
fidivrl
sarb
mov
inc
rorl
or
outsb
ja
push
dec
stos
cmp
in
cs
adc
test
fdivrs
mov
cmpxchg8b
xchg
pusha
rcrl
mov
clc
and
sbb
push
mov
inc
rorb
and
sub
dec
and
stc
ret
sub
jp
fildl
std
adc
dec
fldenv
fiadds
pushf
jbe
aaa
mov
aas
mov
mov
dec
fs
mov
lahf
xor
out
fldt
mov
inc
xchg
adc
cmp
or
sub
inc
lea
in
dec
sahf
dec
jno
mov
adc
js
xor
inc
pop
repz
inc
bound
jmp
pusha
mov
sahf
pusha
testb
pop
cmc
sbb
fsubp
orb
fnstsw
xchg
inc
or
sbb
xchg
fisubs
fistpll
es
lea
mov
repnz
cmp
shrb
adc
js
loop
adc
icebp
unpckhps
mov
jle
jg
ds
sbb
push
cmp
mov
xor
stos
jo
rcrb
dec
jg
mov
push
or
mov
inc
dec
insb
jno
int3
inc
cmp
popa
fstl
and
out
daa
inc
xor
aaa
lods
insl
push
or
fimull
mov
xor
enter
sbb
loop
cmp
iret
lods
jmp
das
mov
or
mov
shll
rcll
fsubl
jns
or
mov
icebp
cmp
imul
ljmp
or
test
fcompl
mov
pop
or
imul
jnp
xchg
jno
addr16
fdivrs
inc
push
xor
xchg
add
cltd
mov
jbe
pushf
out
fstl
outsb
xchg
and
xchg
jmp
and
mov
and
pop
jo
sbb
sbb
scas
jns
fucompp
pushf
cli
mov
call
inc
and
out
push
mov
call
test
and
loop
xor
das
into
andb
xlat
dec
mov
mov
aad
xor
jne
imul
ja
add
inc
imul
ret
or
inc
inc
mov
add
cltd
ficoml
push
fs
into
mov
mov
mov
push
push
mov
into
jo
and
les
cmp
mov
psllw
insl
push
mov
sbb
aam
out
ret
lcall
push
test
clc
shll
mov
jns
ret
push
in
or
movsb
mov
bound
push
xor
jg
into
flds
out
mov
in
andb
adc
cmp
inc
add
mov
adc
mov
xor
cmp
aad
mov
inc
push
fwait
in
dec
pop
cmp
pop
icebp
xchg
jno
lret
arpl
mov
inc
out
std
pop
mov
inc
out
adc
sbb
inc
add
xchg
or
or
outsl
mov
lods
out
mov
push
data16
aam
pushf
mov
scas
hlt
dec
mov
pushf
fmull
push
and
sbb
addr16
stos
inc
jg
loop
cli
out
loope
and
mov
add
mov
das
and
lahf
rcl
sub
lret
pop
div
lret
repz
cmp
int3
or
xor
aam
jecxz
sbb
and
push
sub
ret
scas
out
push
imul
sub
icebp
mov
cs
orl
sbb
push
xlat
mov
pop
cmpsl
add
xchg
or
mov
mov
inc
icebp
inc
in
jbe
cmpsl
sbb
xor
push
xor
std
and
dec
or
mov
ja
jge
pop
lahf
bswap
cmc
cld
xchg
adc
mov
adc
popa
std
decb
push
dec
push
inc
mov
mov
push
arpl
jge
out
in
pushf
aaa
test
cmp
or
mov
cs
mov
mov
pop
sbb
fnstsw
lods
sub
or
adcl
xor
push
fst
call
cmp
xchg
push
and
jmp
xlat
jp
and
cmpsl
fldcw
adc
add
cmp
mov
dec
pushf
hlt
stos
fldt
cmpsl
subb
fimuls
ret
push
adc
and
jle
outsb
jl
aad
jecxz
jne
mov
divb
arpl
mul
add
add
xchg
mov
cmpsl
fdivs
loope
push
add
push
fbstp
in
mov
cmp
jl
pushl
sbb
and
mov
mov
sbb
out
sar
and
push
mov
insb
inc
int3
add
imul
pop
clc
or
and
rcr
push
scas
lods
add
push
xchg
and
jb
cmp
adc
mov
int
into
mov
push
shr
dec
and
mov
mov
and
in
bound
repz
mov
test
je
shlb
cmc
dec
stos
jno
into
test
cmp
dec
adc
andb
or
outsl
cmp
stos
test
jl
cltd
stos
push
jnp
dec
ret
push
push
cmc
cmc
cltd
xor
push
addl
mov
movsb
jge
xchg
je
inc
mov
repnz
cmpsb
ret
paddusb
insb
push
and
mov
xor
mov
icebp
sar
adc
ret
adc
jg
hlt
fwait
xor
inc
js
lcall
adc
ljmp
mov
jp
jecxz
outsl
out
iret
cmp
das
push
sbb
cli
push
cmp
dec
shlb
sbb
xor
and
popa
fstl
jge
pop
bound
ficompl
mov
aas
inc
js
mov
xor
pop
xchg
cwtl
pop
orb
clc
cmpl
mov
mov
les
js
pop
lods
js
sbb
or
pop
aam
mov
add
pushf
imul
popa
cmp
insl
mov
pop
rorb
pusha
xchg
or
push
lock
enter
imul
data16
xor
push
push
in
push
push
mov
xchg
xchg
inc
test
pop
popf
jne
ljmp
pop
testb
jge
dec
fadd
pop
inc
notb
sbb
or
cld
rcr
jmp
inc
adc
push
test
push
push
shlb
adc
pop
dec
fs
popf
cmpsl
inc
sahf
xchg
add
pusha
pushf
ss
pop
push
xlat
lods
jmp
out
pusha
and
jle
lods
aaa
xchg
in
jns
cmp
lret
add
or
fsts
ss
pop
in
test
xchg
ret
aad
inc
inc
and
scas
ret
adc
loopne
stc
es
cmp
int
push
out
sbb
mov
push
fcoms
xorb
inc
cmp
out
repnz
sahf
or
hlt
and
lods
fmull
outsl
shl
sbb
mov
jbe
shr
daa
jbe
dec
mov
sarl
pop
loope
jne
dec
mov
repnz
jecxz
dec
pop
aas
and
jo
pop
sbb
jmp
sub
xor
adc
and
push
sahf
je
xchg
add
dec
dec
inc
jge
out
fistpl
mov
scas
stc
pushaw
cmc
rcr
pop
scas
jecxz
pop
fdivrp
ljmp
rorb
pop
xor
out
jg
je
addr16
out
and
inc
pusha
test
cmp
sub
add
jnp
popf
int
cld
jmp
iret
or
scas
fwait
jns
fldcw
mov
mov
icebp
push
jl
xchg
out
ficomps
mov
add
test
out
cli
orl
insl
mov
test
push
orl
or
test
sbb
mov
jmp
push
jne
pushf
xchg
out
or
jp
pop
out
std
fcoms
push
adc
sti
test
and
adc
sub
xor
nop
dec
push
sub
xor
sbb
rolb
ss
insb
loop
sbb
jne
mov
mov
adc
add
imul
pop
xor
imull
out
pop
ljmp
push
mov
mov
push
fsubrl
adcb
push
and
push
test
int3
mov
pop
ficomps
and
nop
jnp
xor
pop
add
mov
dec
mov
in
rorl
mov
scas
addr16
mov
repz
add
cmp
gs
test
int
mov
lods
mov
rcll
lahf
inc
inc
lods
push
idivl
mov
sub
jns
sti
mov
movsl
adc
aaa
xor
mov
les
push
out
mov
mov
test
mov
adc
and
push
or
insb
es
aam
push
mov
sbb
mul
xchg
mov
es
mov
imul
mov
rorl
mov
mov
fildll
jo
aaa
mov
stc
outsl
repnz
xlat
mov
iret
cmp
sub
in
addr16
rcrb
andl
push
ret
cmp
dec
jb
int
xchg
mov
cmpsb
adc
and
or
div
mov
into
aas
or
je
loop
push
lahf
enter
ja
mul
xor
out
movsb
daa
jb
into
sahf
jne
aam
filds
xlat
mov
mov
fs
clc
push
push
sub
mov
into
icebp
mov
fisubrs
mov
pop
or
sbb
mov
jecxz
dec
leave
inc
add
xchg
psubb
stos
cmpsl
ret
push
shl
xchg
mov
sbb
cmp
xchg
inc
or
sub
jo
shll
lods
icebp
push
mov
js
inc
test
cmp
subl
test
sahf
and
and
ss
cmpsl
pop
xchg
std
dec
cmp
lods
xchg
mov
cmpsl
or
pop
int
popa
mov
shll
out
loop
mov
lock
nop
lds
insl
or
jb
dec
mov
mov
jle
std
ljmp
dec
and
fbstp
cwtl
adc
insb
mov
stc
aad
and
movsl
mov
jno
pop
aad
das
mov
cmp
add
inc
xor
in
inc
push
cmc
xchg
add
adc
das
xor
inc
bound
xchg
mov
loopne
out
cli
nop
inc
push
mov
nop
sbb
sbb
gs
das
bound
push
cli
mov
cmp
or
sbb
or
mov
fmull
in
inc
jb
lods
and
inc
lods
mov
enter
pop
jbe
pop
out
cmpsl
lcall
mov
pop
das
xor
ror
dec
or
ja
sub
faddl
mov
es
jle
mov
negb
test
ljmp
push
stos
add
ficoml
aam
loopne
inc
cmc
lea
das
and
popf
int3
push
pushf
or
jp
insw
xor
mov
lock
pop
lods
jle
push
insb
add
jbe
je
ja
inc
into
mov
push
test
popa
cltd
and
pop
das
mov
into
mov
and
hlt
pop
jne
sahf
push
icebp
ficoms
idivb
shll
inc
sub
pop
or
push
sarl
lahf
jge
into
gs
add
or
jle
pcmpeqd
sub
movsl
stos
xlat
add
push
xor
pop
push
or
cld
fimuls
sbb
sub
adc
adc
loopne
or
out
jo
xchg
jg
sub
xlat
inc
cmpsb
jne
fcompl
sub
inc
ret
jmp
mov
pop
push
js
sub
aad
loope
inc
movsl
jp
orl
or
andl
shrl
out
dec
aad
andl
inc
inc
sbb
jge
mov
and
daa
mov
jnp
or
ja
mov
fdivs
and
fdivrs
sbb
push
incl
xor
rcll
dec
mov
jae
fidivs
mov
repnz
adc
push
test
inc
mov
daa
fimuls
mov
leave
and
or
cmp
bound
imul
xor
ret
lea
test
rcrb
cmpsl
sub
adc
mov
jae
insl
movsb
push
cld
mov
rorl
mov
clc
stc
jp
and
mov
jl
test
dec
xor
add
mov
cmpsl
jo
popa
enter
pop
mov
xchg
jne
mov
inc
mov
incb
addl
out
pop
pop
xchg
inc
xchg
sub
sbb
cmp
add
fnstenv
sub
sub
jecxz
dec
flds
cmpsb
ja
xchg
testb
xchg
hlt
push
sbb
lcall
enter
stc
sbb
push
xor
inc
aad
xchg
cli
movsb
inc
mov
pushf
test
cmp
test
ss
dec
mov
mov
cmc
xchg
dec
cmp
dec
push
fdivrl
dec
jne
into
es
inc
popa
mov
cmc
test
movsl
ss
fidivrl
mov
decb
clc
fbld
cmp
sbb
or
sbb
int3
mov
int3
cmp
testb
mov
xchg
push
jae
popf
add
sub
sub
inc
jge
ljmp
push
lods
clc
and
movsl
jmp
mov
cmc
lcall
sahf
adc
adc
imul
data16
stos
sub
not
pop
xchg
pop
in
dec
xor
dec
xchg
in
std
ljmp
ret
lea
mov
je
pop
out
inc
jbe
sub
cmp
cmp
mov
dec
insb
pop
mov
lods
jne
sbb
aas
imul
xchg
clc
sub
ss
jae
imul
mov
aam
cvtps2pd
daa
ss
push
sbb
pushf
inc
dec
dec
jae
stc
sbb
cltd
mov
push
lock
arpl
lret
push
mov
fcoml
mov
shrb
mov
push
std
mov
jno
mov
repz
xlat
into
inc
dec
lea
insb
scas
push
dec
cmpb
push
test
jl
pusha
popa
jno
dec
imull
rorl
push
test
sbb
sti
lods
sti
repnz
cmpsl
mov
push
in
dec
or
jle
add
cmp
jecxz
popa
and
rclb
sub
popa
inc
xor
inc
aaa
jg
and
ficompl
mov
inc
outsb
aas
popf
pop
add
xchg
lods
mov
ss
insb
or
lods
inc
sub
fisubl
mov
adc
cli
adc
aas
mov
inc
dec
jno
pusha
cmp
fs
dec
in
mov
divb
idivb
mov
data16
test
cmp
or
mov
imul
scas
inc
sub
insl
decl
add
orb
xor
lcall
or
jge,pn
ret
jae
ret
push
and
add
mov
dec
or
inc
fistps
icebp
pushf
mov
mov
add
xchg
mov
xor
or
in
cmp
popa
xor
aam
shr
addr16
jae
xchg
mov
data16
cli
in
aas
cmpsb
shll
mov
mov
int
jp
sbb
cltd
add
mov
xchg
dec
mov
xor
in
cli
lret
test
dec
mov
xchg
shrl
mov
sub
mov
fnstsw
ja
sub
inc
lods
dec
ficomps
imul
jb
jno
cs
movsb
dec
push
xchg
popa
fsubl
jecxz
ss
sbb
call
mov
cltd
pusha
mov
or
xchg
jg
push
add
fdivs
sarb
jmp
pop
push
add
arpl
mov
andl
mov
inc
mov
repnz
xchg
adc
xor
fisubrl
mov
adc
mov
insb
mov
and
cwtl
sub
pop
lea
or
xor
cld
mov
mov
rol
mov
shrl
xchg
ja
fildl
sti
fiadds
cmp
lods
out
daa
test
test
out
pushw
pop
les
push
xor
cmpb
in
shrb
xchg
dec
cmovp
out
js
push
mov
in
sbb
movsb
cld
xor
xchg
jo
shl
cli
out
les
lods
add
call
rolb
or
push
jb
idivb
xchg
bound
push
cmp
inc
inc
sub
jo
pop
jo
test
xchg
ljmp
and
push
mov
adc
mov
jb
mov
dec
gs
mov
lods
add
rorl
hlt
in
orb
fstpl
jecxz
fcmovu
sub
sub
jbe
loopne
jmp
jecxz
lock
das
inc
xchg
push
or
mov
std
clc
add
add
addr16
pop
fisubl
test
push
sub
out
push
or
mov
pop
jae
insb
adc
pop
xchg
pop
and
decl
jne
xchg
add
sahf
ljmp
push
imul
in
pop
cmp
pop
xlat
pmulhuw
fadds
cmpsb
stos
ds
ja
lock
call
imul
inc
bound
dec
lea
sub
ficomps
clc
sbb
push
sbb
xchg
out
mov
jle
movl
ljmp
loop
inc
adc
inc
outsb
and
adc
sbb
jb
adc
lcall
sbb
mov
subl
xchg
insb
je
fisttpl
leave
jg
shlb
mov
fiadds
stos
push
daa
pusha
xor
dec
or
adc
mov
dec
push
hlt
jne
stos
push
pop
stos
pop
fildl
insl
das
nop
sbb
and
ud2
inc
insl
pusha
adc
popa
add
pop
jecxz
or
popf
rcrl
sarb
rolb
out
fistps
xchg
sub
test
mov
dec
jle
jo
movsb
sahf
scas
xchg
dec
gs
stos
mov
test
gs
and
adcl
pushf
push
pop
icebp
jg
mov
pop
mov
inc
dec
das
inc
jo
dec
in
das
xor
inc
pop
out
pop
paddsw
push
popa
or
pop
aas
add
jmp
inc
fimuls
std
dec
shrb
int
inc
inc
cmp
ljmp
pop
mov
add
sti
adc
adc
rcrb
les
inc
lret
rorl
jae
std
sub
jl
aam
dec
mov
add
cmp
or
sbb
inc
push
cmpsb
aas
lahf
test
stos
icebp
mov
jne
xor
fidivrl
or
stos
test
cmc
fcomps
inc
sub
mov
push
call
xchg
and
dec
mov
fisubs
psadbw
sub
xor
pop
repz
mov
nop
pusha
decl
or
inc
pop
sbb
sub
decl
cmp
sti
testb
shl
ja
rcll
xchg
xlat
push
adc
adc
jo
stos
mov
jne
in
movsb
lcall
pop
sub
mov
and
push
das
repnz
push
std
and
mov
lret
xor
push
or
sbb
lods
jg
subl
xor
cmc
jnp
das
jecxz
mov
enter
test
push
daa
stc
pop
xchg
loop
fldenv
add
jp
aad
test
sbb
popa
mov
out
aaa
push
jo
movsb
inc
ret
mov
scas
inc
push
mov
push
sub
jb
sub
inc
pop
aam
enter
sbb
pop
rclb
jae
lds
daa
adc
xchg
sbb
aam
ljmp
xor
inc
xchg
fcmovnu
jae
std
popf
in
mov
mov
push
pushf
push
mov
push
cmp
cmpsb
lahf
cltd
cld
js
mov
inc
add
out
dec
lods
dec
addr16
and
mov
dec
scas
hlt
and
push
fs
xor
mov
or
mov
imul
sbb
mov
push
dec
cmp
sbb
outsb
pop
mov
cmpb
push
cmp
mov
movsl
xor
dec
xchg
jle
ljmp
hlt
fsubrs
in
jge
aaa
or
add
lds
xor
test
fdivs
or
and
cmp
fistpll
jecxz
loope
incb
pop
scas
push
insb
mov
mov
or
lea
jle
icebp
dec
iret
cmpsb
cli
sbb
cs
js
push
xchg
adc
fs
bound
shl
mov
fists
jns
stos
add
mov
mov
hlt
outsl
mov
mov
lret
mov
cmp
pop
mov
add
or
shlb
jae
clc
out
repz
or
iret
jg
or
mov
rcll
fsubs
popf
xor
lods
in
movsb
xor
imul
outsl
dec
int3
rolb
dec
jmp
and
jmp
dec
mov
std
movsb
push
cmp
xorb
add
jbe
lret
enter
pusha
cmp
aas
pop
xchg
push
mov
push
daa
rcrb
and
sbb
push
int3
or
test
xchg
pop
and
cltd
repz
test
push
cmc
por
cmc
lret
or
ja
lods
dec
xchg
xor
cli
jmp
test
in
jb
test
mov
loop
gs
hlt
lret
xor
in
inc
arpl
hlt
in
mov
std
cmovs
mov
fistpll
push
loopne
popa
cmc
add
fwait
in
loope,pt
inc
push
xor
lods
in
dec
dec
sub
sbb
push
mov
sub
out
test
jg
bound
xchg
mov
jbe
jmp
cwtl
xchg
jp
push
jns
dec
inc
push
or
ror
daa
arpl
xchg
pop
lea
adc
mov
daa
and
das
or
mov
adc
add
mov
popa
enter
push
imul
mov
divl
add
sbb
jae
movsl
fisttpll
fists
js
cmp
sbb
ret
sub
loope
and
push
cmp
inc
jbe
rolb
sti
mov
sub
and
push
inc
scas
pop
hlt
jo
in
and
sbb
fwait
inc
ss
push
stos
mov
ss
lret
mov
pop
ds
jl
add
mov
push
mov
mov
aad
jo
push
inc
test
jp
cmp
hlt
xor
fisubrl
cmpb
mov
dec
in
cwtl
lcall
or
loope
mov
mov
mov
pop
stos
pop
push
mov
arpl
call
test
out
test
mov
in
sahf
inc
lock
inc
lahf
arpl
in
sub
in
xchg
and
mov
or
mov
mov
mov
push
jl
stc
add
std
dec
adc
test
call
jb
mov
adc
test
dec
xchg
mov
xor
ret
push
jae
xchg
in
std
maskmovq
pop
mov
mov
push
enter
push
xchg
notl
lock
mov
mov
jnp
lock
aam
out
divl
and
in
fidivs
jbe
shlb
push
inc
ret
mov
clc
insl
lret
insl
mov
cmp
sub
cmp
jle
adc
pop
jb
jno
test
cwtl
cmc
adc
mov
jbe
xchg
testl
andl
cli
push
mov
lods
out
xor
cmp
or
add
mov
push
addr16
pop
sub
or
clc
mov
adc
stc
sbb
je
sbb
lahf
or
pushf
lea
push
fldcw
xchg
idivl
sub
ljmp
int
fisubrs
pop
negl
insb
adc
addr16
inc
pop
push
int
jge
loopne
lcall
bound
sub
or
mov
push
sbb
enter
and
iret
aam
mov
jns
jmp
cs
sbb
xor
sahf
cs
mov
insb
pop
das
or
je
jbe
cmp
cs
imul
mov
in
jbe
jnp
lea
adc
hlt
pop
movsl
xchg
int
inc
mov
inc
imul
add
add
jb
dec
inc
dec
adc
negl
lcall
outsb
pop
sarb
mov
ljmp
in
push
faddl
push
fucomi
cmpsb
mov
ss
data16
negb
dec
sahf
cmp
xorl
mov
mov
sbb
xor
mov
mov
mov
movsl
andb
pop
inc
jle
and
add
loope
push
sbb
scas
push
sub
lods
mov
pop
daa
jle
or
mov
inc
push
xchg
jecxz
lahf
mov
push
jb
ret
jl
fisubrs
inc
or
pushf
jl
and
jno
xor
lret
daa
ret
add
ja
int3
aas
lods
pop
lcall
icebp
movsl
push
pop
sbb
inc
add
mov
out
xchg
stos
push
mov
inc
mov
std
pushf
xor
xchg
mov
leave
stos
push
jg
push
xchg
das
imul
outsb
mov
xor
mov
je
lock
cmp
mov
xchg
out
jne
sahf
xor
push
or
jle
lret
xchg
aas
pop
sbb
aad
sbb
fistpll
xchg
sahf
pop
mov
jg
int
cmpsl
ja
gs
add
daa
or
es
mov
cmpsb
jno
test
jns
outsb
out
mov
xchg
xchg
cs
in
daa
lds
and
pop
in
sbbb
mov
cmpsb
out
test
aad
test
adcl
je
push
xchg
sbb
pusha
shrb
pop
xor
adc
sbb
cltd
sub
pop
and
testb
pusha
add
add
dec
mov
roll
jbe
aas
pushf
add
leave
adc
inc
rcrl
or
push
scas
add
scas
mov
sti
insb
lock
dec
stos
mov
std
lock
cmp
sub
cmp
push
sub
ds
jne
loop
push
push
in
nop
pop
inc
jns
mov
loopne
push
jp
xor
shlb
mov
xor
add
push
bound
lret
imul
mov
dec
xchg
sbb
es
xchg
addb
decb
aad
xchg
addr16
scas
or
lods
mov
mov
and
cmp
inc
movsb
ss
inc
xchg
mov
icebp
cmp
movsl
nop
dec
enter
adc
rcrl
push
ds
lret
icebp
lea
rorb
adc
repnz
jmp
xor
or
test
jg
xor
jge
jecxz
xor
sbb
add
push
mov
pop
imul
mov
sub
ja
jo
lea
dec
push
pop
jmp
loopne
or
dec
push
mov
inc
sbb
fcmovbe
jl
test
dec
dec
dec
adc
adc
cmp
clc
mov
out
push
imul
sub
xchg
movsl
sub
imul
clc
sbb
icebp
push
subb
sbb
addr16
repz
sub
imul
ret
insl
clc
popf
outsl
fistpll
push
call
xchg
mov
sbb
andb
mov
adc
gs
cmp
dec
push
mov
xor
out
stos
mov
jo
xchg
lret
cmc
sbbl
sub
sbb
sub
adcl
rclb
push
sbb
inc
adc
mov
mov
or
push
pop
in
stos
push
sub
mov
and
cmp
cmp
out
jmp
lcall
inc
lcall
lods
or
aaa
fucomi
mov
insl
ljmp
jnp
movsb
or
mov
out
mull
ljmp
fwait
add
pop
loopne
nop
inc
lahf
and
imul
sar
add
sub
ret
push
and
push
jne
sbb
cmp
and
and
mov
dec
movsb
das
ljmp
cmpsl
xor
push
xchg
das
movsb
inc
and
mov
adc
lds
xchg
ret
sbb
push
ja
sub
dec
out
mov
push
into
mov
aas
aam
jg
pop
sti
mov
insl
ja
inc
lahf
out
jl
clc
inc
sub
jp
aad
cmpsb
hlt
cmovae
and
mov
inc
ret
cmp
test
jle
mov
inc
mov
cld
scas
and
cmc
jmp
mov
fwait
cmp
pop
test
sbb
mov
sbb
mov
movsb
mov
daa
dec
jo
loop
xchg
push
xor
pop
mov
sahf
repnz
fldt
or
xor
lds
and
lcall
mov
repnz
jns
arpl
fwait
aad
lcall
adc
inc
call
repnz
pop
test
aam
popa
das
imul
jne
xor
dec
xchg
rcrb
xor
pop
xchg
mov
or
fnstcw
mov
mov
jmp
roll
push
inc
hlt
lds
ss
xchg
aas
xlat
jns
shld
cli
frstor
mov
inc
mov
jecxz
mov
xor
cli
mov
fnstsw
jbe
and
cmp
dec
repz
jne
sub
xor
mov
dec
cmpl
test
mov
in
test
push
aam
dec
out
inc
add
repnz
pushf
inc
dec
xchg
or
out
loop
into
or
mov
xchg
scas
push
pop
enter
ds
aaa
lods
mov
lea
dec
inc
mov
or
nop
leave
pop
daa
ret
arpl
sbb
testl
enter
jle
aaa
out
test
inc
shrb
enter
fdivr
dec
into
pop
mov
jbe
jl
jb
mov
push
loopne
and
push
xchg
jmp
aas
push
push
jnp
stc
outsb
cmp
loope
ss
jae
inc
lea
dec
fwait
cmpsl
lcall
sbb
sub
mov
sub
adc
mov
mov
aad
dec
enter
out
jno
jnp
fisubs
push
cmpsl
push
ja
mov
test
dec
cmp
dec
aad
or
mov
xor
pop
push
subb
pusha
fisttpll
mov
inc
leave
pop
fsubl
add
cmc
add
movsl
pusha
outsb
loop
stos
adc
cltd
popf
shlb
popa
insl
mov
mov
or
fwait
xchg
ss
pusha
arpl
mov
mov
adc
mov
add
addr16
aas
push
and
rcrb
insl
inc
bnd
mov
and
push
mov
rcr
and
mov
shl
xchg
ljmp
iret
ds
inc
aaa
cmp
fs
and
and
stos
int
mov
add
arpl
sub
sbb
pop
pcmpeqw
ljmp
and
imul
xor
aaa
sbb
in
sub
rorb
and
mov
push
lcall
decl
inc
xchg
out
inc
daa
sahf
insl
inc
outsb
cmc
imul
add
pop
cmpsl
cwtl
inc
mov
push
adc
sub
imul
pop
push
push
insl
pop
call
mov
inc
aam
sar
icebp
mov
xchg
mov
add
lcall
test
ss
ficoms
out
push
dec
mov
push
add
iret
cmpsb
fcomps
js
int
nop
repz
pop
or
call
push
pop
loopne
loop
aas
movsl
sbb
mov
fsubrs
shr
in
push
hlt
sarb
sub
push
enter
fldt
aad
cmp
rol
jmp
pop
xchg
imul
and
jb
dec
sbb
jns
sub
aam
or
pop
int
add
aad
jb
or
push
mov
repz
icebp
ljmp
push
out
flds
adc
inc
sub
mulb
add
mov
jg
xor
stos
mov
imulb
add
ret
in
push
cmp
ja
jmp
mov
adc
jb
nop
or
fldenv
ss
jecxz
lods
mov
lds
sbbb
hlt
scas
mov
mov
mov
and
push
lock
stos
inc
xchg
iret
xchg
adc
xchg
dec
jne
mov
fs
jbe
inc
cmp
xorl
nop
mov
sti
push
punpcklwd
mov
out
push
xchg
adc
inc
movsl
daa
dec
mov
mov
or
ret
lock
andl
pop
outsl
fbld
stc
jmp
or
fwait
shr
xchg
sbb
imul
pushf
mov
mov
lds
pop
or
cmp
iret
insl
fs
mov
xlat
dec
fdivr
sub
mov
data16
test
ds
dec
outsb
int
out
mov
pop
inc
call
sub
mov
or
fcomps
pinsrw
cmp
adc
and
jno
outsb
repnz
in
out
push
cs
push
cmp
and
stos
cmp
lea
mov
xchg
push
mulb
insb
add
sbb
imul
pop
and
xor
xchg
mov
leave
mov
ja
pop
psllw
push
int3
sub
or
pop
mov
xor
pop
sbb
inc
sbb
lea
int
sbb
sbb
or
sbb
enter
lds
cmpsl
sub
movsb
test
test
xchg
adcb
dec
add
outsl
mov
hlt
cld
rep
or
aad
dec
lods
push
loopne
repz
and
adc
sub
cmc
inc
js
mov
movsl
iret
mov
jo
push
push
pusha
rcrl
mov
push
inc
and
int3
xchg
push
sbb
sub
cmpsb
mov
aam
jp
sahf
add
lods
or
xchg
push
sahf
sub
sbb
enter
push
xor
push
cmpl
scas
mov
push
push
aad
or
gs
sar
lock
pop
in
insb
add
lea
pop
adc
dec
mov
out
jo
jg
rorl
sub
in
out
adc
aam
inc
inc
bound
or
lods
dec
adc
sub
sahf
repz
sbb
and
push
popa
dec
setns
ds
lret
rol
add
lret
divb
pushf
xchg
pop
cmpsl
xor
insb
mov
add
inc
rorb
push
cmp
cmp
cmpsl
in
je
out
jbe
and
mov
enter
fidivrl
loope
lret
in
push
jecxz
cmp
cli
xchg
cmp
pop
popf
enter
mov
ja
fnstenv
adc
adc
fisttps
or
andb
mov
ljmp
mov
mov
out
add
addr16
shlb
int3
xchg
sub
hlt
jne
arpl
adc
inc
test
adc
xchg
test
push
aaa
cld
in
mov
repz
adc
ds
fistpl
dec
sahf
int3
dec
pusha
cmp
jmp
inc
or
sub
jmp
lds
pop
sub
pop
std
out
aas
pop
and
je
test
int
mov
stos
rol
popf
int3
movsl
lods
jmp
cmp
iret
sbb
test
adc
push
out
xchg
xchg
fdivl
dec
xlat
lahf
into
jnp
push
mov
mov
insl
add
fsubrs
popf
adc
cmpsb
orb
andl
dec
mov
or
xchg
cmp
in
lods
arpl
les
and
push
mov
shll
je
stc
sub
les
cmp
mov
rcrb
jmp
mov
mov
in
scas
and
jmp
fimuls
jle
xor
mov
mov
add
mov
fadd
mov
xchg
das
sub
out
lret
xchg
jle
lock
mov
lods
push
jo
cmpsl
outsl
sub
into
xchg
repz
test
fnstenv
inc
add
and
scas
shl
fldl
mov
push
std
add
xchg
add
lods
nop
out
shl
sbb
cmp
mov
pop
adc
int
xchg
xor
push
clc
dec
xor
hlt
es
lds
lds
xchg
push
clc
nop
push
loop
cmp
pop
out
sbb
sbb
outsl
aam
dec
sub
lods
xor
ja
fs
cld
or
add
sub
jg
jmp
iret
or
and
cmp
cwtl
mov
aaa
jmp
mov
pop
inc
lcall
or
push
fwait
lret
call
inc
jp
leave
cmp
popa
mov
pop
std
mov
push
cmc
adc
mov
sub
xor
jmp
nop
jae
mov
ret
int
or
xor
shlb
xchg
inc
jmp
out
jl
lods
xor
adc
pop
fcmovne
ljmp
mov
cli
jnp
lods
dec
je
mov
adc
dec
push
pop
imul
out
shrl
stos
push
std
mov
lods
je
push
pop
into
leave
das
xchg
mov
mov
pop
xchg
xor
popa
cltd
adc
push
movsl
lods
iret
stos
xchg
and
leave
mov
dec
fcmovbe
int3
es
rcrb
rorb
inc
add
int
int
sub
gs
dec
mov
stos
fldt
in
jno
rolb
scas
mov
jnp
xchg
sbb
push
and
lds
push
bound
test
ss
lret
repz
dec
xor
jbe
aam
lret
mov
call
xchg
ljmp
cmpsb
push
je
rolb
fcmovnb
das
jle
bound
fsubrp
cli
js
jae
sub
test
lahf
stos
and
test
movsb
loop
leave
xor
xlat
cmp
data16
notb
pop
aam
inc
adc
adc
and
xchg
sub
iret
mov
xchg
pop
cmp
ja
repnz
loope
push
xchg
js
sbb
mov
adc
inc
int
inc
fwait
test
repnz
jo
mov
fcom
pop
clc
insb
inc
cmp
fdivs
adcl
test
dec
mov
sub
sbb
jmp
adcb
or
lds
or
xchg
jle
lods
pop
shlb
jg
shrl
add
outsl
mov
pop
cmp
mov
fistl
sahf
int
jne
loope
cmp
xchg
xor
push
aas
into
fs
clc
lods
inc
dec
ljmp
sub
and
jp
addr16
and
sub
add
adc
fs
sbb
mov
pusha
xlat
in
in
sbb
xchg
arpl
cmpsb
jp
xorl
jmp
sub
xchg
mov
imul
fisttpl
cld
and
and
clc
jle
jbe
or
bound
rcrl
fdivrs
clc
push
pop
jecxz
out
int3
icebp
movsl
adc
icebp
and
and
push
data16
hlt
cmp
and
decb
dec
aaa
out
pusha
sbb
jbe
mov
pop
pop
cld
test
loopne
sti
cli
mov
loop
repz
in
mov
sbb
jne
jne
sub
xor
outsl
mov
out
loop
cli
adc
xchg
and
jne
jg
mov
jns
inc
pop
pusha
sub
mov
adc
inc
insb
sbb
pusha
lcall
xchg
in
lods
daa
jg
mov
sub
leave
int
aaa
sbb
aam
inc
popf
xorl
loop
clc
cs
jnp
mov
cmp
dec
cs
repnz
jo
push
scas
push
enter
loopne
mov
adc
xchg
push
xchg
sbb
jo
jno
add
xchg
dec
hlt
mov
inc
decl
adc
jle
cmp
out
std
scas
dec
daa
rcrb
add
addr16
int3
ret
push
enter
mov
movb
loopne
lods
sbb
inc
mov
push
and
fistpll
ret
adc
jae
lcall
cmp
sbb
loope
pop
push
mov
lcall
insb
insl
lods
and
pop
xor
xchg
push
fidivrs
sbb
inc
sbb
rcr
imul
popf
adc
ljmp
push
and
aad
cmpl
pushf
mov
sub
or
pushf
mov
inc
xor
ljmp
mov
cmp
cltd
das
orl
ja
push
iret
mov
mov
pop
fsubrs
sahf
cltd
pop
js
int3
xor
sbb
out
nop
sbbl
mov
dec
movsl
mov
sbb
mov
in
dec
ret
ja
outsl
sbb
mov
pop
pop
xchg
test
into
push
test
and
jno
xchg
adc
mov
je
mov
fmul
mov
xlat
js
and
pop
popf
lds
call
leave
pop
js
test
imul
add
addl
jno
repz
int3
pop
lret
or
out
and
imul
addb
xor
and
test
les
adc
jno
std
movsl
in
insl
leave
sub
push
push
or
daa
cs
cmp
pop
in
sub
pop
and
push
add
shl
jbe
iret
cmpsb
gs
cli
xor
sti
mov
jnp
hlt
int3
mov
push
dec
test
jl
test
shrb
and
lock
push
pop
sub
push
cmpsb
sahf
addb
push
cmpsl
push
jge
inc
xchg
add
int
in
jbe
add
cmp
mov
and
loopne
jo
sbb
ss
outsl
ret
jmp
rcll
test
and
imul
cmp
shrl
daa
jp
xor
lahf
icebp
aad
pop
jg
scas
inc
test
outsb
or
aas
dec
in
adc
sbb
adc
adc
push
aas
pusha
sti
sub
into
ret
icebp
repnz
mov
mov
push
pop
pop
fsubrl
mov
rclb
and
mov
sub
rorl
addr16
mov
fbld
mov
xor
xor
xchg
in
mov
scas
std
jge
scas
xor
hlt
jmp
bound
xor
loopne
xchg
ljmp
stc
notl
mov
cmp
mov
mov
and
cltd
or
arpl
inc
xor
jmp
mov
and
mov
or
in
xchg
and
adc
sub
fisubrl
roll
mov
out
cmp
mov
mulb
xchg
loop
cmp
and
dec
ja
mov
je
es
daa
adcb
sbb
or
fucomi
lock
popf
pushf
xor
inc
popa
pop
mov
lods
adc
xchg
mov
xchg
and
pop
dec
fmull
cmpl
fnsave
shll
sbb
cmp
xlat
decb
pop
cmpsb
push
popf
hlt
rcrb
loope
mov
xlat
mov
test
fbstp
push
mov
mov
cmp
lret
aas
loop
imull
pop
mov
jbe
pop
movsl
leave
cmp
xchg
push
sub
aaa
inc
jp
inc
mov
pop
push
in
lret
dec
jne
mov
daa
aas
dec
ja
repz
pushf
xchg
cmc
int3
pop
cmpsb
push
mov
loopne
and
push
in
sahf
xchg
inc
lods
ljmp
repz
cld
aam
and
dec
out
decl
mov
jno
nop
addr16
inc
inc
lcall
jae
pop
push
loop
add
mov
cmp
loop
test
icebp
xor
sahf
into
push
es
inc
xor
iret
shrb
or
gs
into
pop
push
mov
xchg
js
sbb
out
ret
or
sub
cmp
fisubs
dec
das
or
pop
stos
xor
mov
jl
xchg
adc
mov
daa
rcrb
push
popf
jns
xchg
jae
sub
jecxz
sahf
xor
pop
sub
xchg
xlat
jb
push
movsl
inc
popf
pop
sbb
push
xchg
inc
popf
mov
or
scas
mov
adc
js
sbb
fiaddl
idivb
out
jo
lds
subl
jbe
sbb
imul
cld
repnz
pop
ss
xchg
mov
jmp
pop
ret
push
lret
ljmp
pop
out
popf
push
mov
aas
mov
push
out
mov
push
xchg
or
fucomp
fwait
push
push
xchg
fs
mov
fisttpll
cmp
leave
mul
je
in
xor
cwtl
stos
push
mov
jp
les
jnp
push
sbb
pop
fadds
call
or
or
fwait
sub
aas
mov
add
jne
cs
scas
push
int3
mov
inc
loope
jno
and
das
add
push
inc
fdivrs
imul
gs
mov
mov
ss
and
in
mov
xor
inc
push
dec
lods
mov
cs
and
ja
outsb
add
hlt
aad
mov
aas
hlt
aam
cmp
pop
sub
scas
pop
cmp
sbb
pop
fimuls
mov
push
pop
or
repz
lock
fcmovb
vmovups
pop
loop
adc
movsb
ror
push
jp
aas
and
cmp
scas
inc
mov
and
addl
jl
or
loope
sahf
inc
pop
xchg
pop
dec
xor
rorb
pop
cmpsb
mov
lods
rorb
sub
jge
mov
into
xor
pop
or
add
ja
sub
push
leave
scas
add
shlb
int3
sub
dec
pop
cltd
jl
xor
loop
or
jecxz
cmp
jle
sub
mov
sub
sti
mov
push
js
xor
inc
das
stos
in
and
aad
testb
xchg
test
imul
lds
mov
fcoml
mov
cmp
into
loop
ljmp
add
push
add
xchg
scas
repnz
fwait
imul
mov
push
movsb
cmpb
adc
cmp
mov
mov
ljmp
jmp
hlt
leave
mov
in
and
inc
push
xchg
and
jp
jp
lahf
mov
sbb
int
push
jg
dec
or
pop
pop
arpl
bound
sbbl
mov
push
test
xchg
out
jp
cmp
pop
sti
xor
pop
jp
ljmp
xchg
xchg
fisttps
shlb
icebp
lock
jno
mov
in
mov
clc
or
es
js
push
ja
xor
dec
fnstenv
and
push
push
cmp
push
outsb
push
pop
fldl
movsl
pop
lods
push
cmc
inc
add
pop
sbb
adc
mov
xor
fsubrs
pop
sub
adc
and
lcall
out
out
or
fxch
lds
cmpl
mov
adc
dec
pop
jge
loop
stos
push
add
cmp
xchg
mov
jns
and
push
stc
xlat
fsubs
mov
jae
pop
insb
jbe
lds
test
ret
popf
pop
and
add
add
add
ss
and
cli
dec
or
sti
inc
add
out
gs
pushl
and
sub
xchg
repnz
popl
iret
scas
out
fnstcw
hlt
push
test
mov
sbb
cwtl
cmc
aad
sbb
addl
cld
pusha
inc
pushf
hlt
adc
sti
inc
xchg
js
sub
test
divl
dec
or
push
movsb
fmuls
pop
sub
fwait
dec
xchg
aaa
jne
fsubrs
or
sub
add
cmp
sub
sbb
inc
shrl
test
sub
or
cmp
lods
push
lds
lahf
mov
jle
call
mov
lock
sub
or
stos
dec
add
push
add
xchg
aas
dec
jl
mov
insb
call
adc
mov
mov
xor
jmpw
mov
dec
push
mov
cmpb
cmpsl
ja
push
loop
dec
and
and
insl
push
jle
ja
repnz
rorl
dec
movsb
outsb
lods
js
out
enter
leave
xor
dec
and
and
mov
pusha
inc
xor
mov
xlat
sbb
out
je
fsubp
ljmp
in
mov
mov
fwait
sbb
aam
sub
sbb
ds
xor
sub
jg
push
xchg
push
pop
cmpsl
stos
lret
mov
iret
lods
fsubrs
call
sub
mov
ljmp
dec
test
lock
pop
inc
fwait
add
sahf
push
insb
pop
sub
insb
loope
adc
xor
jnp
inc
cli
jl
test
or
inc
mov
sub
loope
and
mov
pop
insl
movsb
push
imulb
leave
inc
and
jecxz
rcr
and
xlat
pop
lahf
dec
scas
xchg
jnp
jne
cmp
cltd
add
aam
cli
imul
push
insb
cs
mov
out
sub
and
xchg
sahf
xchg
mov
ret
repz
pusha
dec
push
loop
add
gs
mov
into
xor
pop
xlat
lcall
rclb
push
push
lods
rcl
stos
js
add
cmpsb
adc
push
inc
in
int3
sbbl
repz
orl
xor
jae
les
add
mov
jne
mov
xorps
add
stos
adc
or
dec
lret
xor
cmpsl
cwtl
xchg
negb
out
testl
pop
inc
lea
testl
pop
pause
inc
xchg
hlt
sti
popf
push
fisubs
or
sub
ret
fimull
in
xor
lret
pop
mov
stos
rcrb
cmp
mov
xor
sti
flds
shlb
mov
mov
sub
call
inc
nop
inc
mov
xor
out
xchg
ror
dec
sub
push
popa
jl
jae
popf
sbb
lret
mov
dec
aad
pusha
xlat
iret
mov
out
push
mov
cmc
mov
out
xchg
je
sub
push
test
iret
jae
fisubrs
test
push
adc
cmp
ret
jge
test
jae
nop
jmp
pushl
loopne
mov
iret
jecxz
pop
xchg
daa
out
pop
add
int
orl
cmp
mov
outsl
es
shrl
push
movsl
stos
sbb
js
rcrb
cmp
insl
jmp
cmpl
idiv
shlb
push
cmp
lahf
leave
mov
push
mov
dec
cmp
pop
push
inc
pop
stc
divb
sti
adc
in
mov
add
lods
adc
in
mov
fwait
lcall
sub
push
js
adcb
cs
shll
mov
movswl
int3
xchg
xlat
cmp
mov
xchg
lock
or
loope
orb
xlat
inc
and
pushl
mov
loopne
mov
sbb
adc
mov
and
push
inc
scas
popa
xor
lods
shlb
cmp
jecxz
pushl
icebp
addr16
pop
idivl
push
pop
and
ret
cld
and
mov
cmp
test
enter
outsb
mov
lcall
int3
xchg
inc
sbb
push
push
test
ret
lea
lods
sbb
mov
fsts
cmp
jne
aaa
push
cwtl
gs
out
sahf
fincstp
sbb
jmp
adc
or
lock
shlb
and
and
jl
mov
cmc
inc
sti
jge
inc
sbb
add
pushf
jle
jge
mov
jecxz
shrb
fildll
in
cmp
xchg
sbb
and
pushl
push
dec
mov
mov
inc
sub
loopne
pop
aam
dec
lret
scas
sub
testb
pop
int3
loope
test
aaa
dec
bound
in
mov
inc
std
and
imul
insl
test
shll
dec
mov
outsl
push
adc
lahf
jmp
push
shlb
insl
je
loopne
pop
pop
gs
sub
cmp
push
rcl
sti
test
bound
bnd
into
je
fistl
cmp
mov
out
loopne
push
xchg
roll
jb
rol
test
or
dec
sti
mov
sub
shll
and
ret
loope
fistpll
jge
jns
mov
or
shlb
sub
and
dec
sub
std
lret
and
xchg
cmp
imul
outsb
inc
mov
jbe
mov
xchg
in
inc
pop
mov
mov
mov
jp
rcrb
or
jno
dec
mov
lcall
cmpsl
mov
cmp
shr
inc
repz
push
into
sub
cwtl
shlb
inc
push
pop
lcall
pop
inc
inc
cmpsb
mov
data16
cld
iret
test
test
pop
fistl
jbe
leave
je
hlt
mov
adc
int3
cmc
xor
data16
ret
idiv
je
lea
fnstenv
push
loope
jmp
or
jp
or
int
int
mov
clc
sbb
mov
bound
imul
shrb
icebp
movsl
lret
std
dec
sbb
cli
popl
cmpsb
fistl
jae
rcl
sub
pusha
add
add
push
jno
cwtl
xchg
fisubs
loope
sti
sub
cmp
nop
jo
les
mov
fsubrs
dec
xchg
rorl
lret
mov
lods
xor
sbb
mov
push
loopne
mov
clc
stos
mov
cmp
mov
push
imul
arpl
in
or
adc
push
js
vmread
in
pop
push
ja
dec
scas
fldcw
xchg
daa
lret
xchg
test
mov
push
push
xchg
sbb
rorl
mov
test
dec
fsts
cmp
cli
cmp
or
sub
dec
inc
dec
add
xchg
ja
adc
mov
or
xor
jno
mov
lret
jl
fcomps
mov
and
sbb
ds
daa
cmpsl
or
sahf
into
or
inc
sarl
xchg
push
mov
add
cli
push
push
cmpsb
mov
push
inc
inc
scas
adc
mov
cmp
xchg
mov
mov
or
ss
daa
mov
shll
mov
xor
loop
dec
repnz
negb
ret
frstor
ljmp
mov
and
scas
imul
lcall
in
dec
mov
mov
fmul
jg
xor
sbb
add
movsl
sub
mov
jnp
adc
repz
mov
dec
pop
fsts
lcall
jb
push
out
adc
stc
pop
stos
cmc
sub
jno
sub
stc
lret
push
daa
mov
icebp
jmp
inc
fidivrl
out
adc
mov
aam
fsubp
bound
push
xor
les
push
cmpsb
adc
test
arpl
xor
movsb
out
ret
test
jmp
ret
inc
pop
xchg
jecxz
cli
or
cmp
dec
sbb
cmp
xor
cmpsb
add
mov
and
fwait
pop
push
dec
push
cmp
pop
mov
arpl
or
fidivl
cmp
das
imul
popf
inc
fadds
jns
or
pop
push
fwait
repz
pop
adc
add
sbb
mov
pop
sti
js
dec
or
sbb
jmp
in
inc
ror
outsb
jge
jo
push
scas
cwtl
jno
lods
xor
loopne
pusha
in
dec
jo
jecxz
scas
jne
pop
sub
jnp
cmc
int3
lret
out
movsb
xor
stos
fsts
clc
fdivr
movsb
mov
aaa
aas
iret
test
sbb
fwait
push
mov
in
call
movsl
ret
sub
icebp
out
loope
movsb
xchg
sub
fisttpl
mov
mov
outsl
leave
aaa
pop
add
dec
xor
icebp
dec
adc
and
pop
inc
dec
xchg
sbb
sbb
pop
push
aaa
mov
xchg
std
loopne
and
jo
test
je
cmp
sub
testb
fnstsw
andb
mov
push
inc
push
dec
mov
call
inc
pavgb
arpl
insb
or
inc
push
add
push
stos
and
inc
lea
lods
xor
xlat
lods
dec
mov
cmc
sub
ljmp
cmp
xor
jg
aad
cmp
cmp
mov
ja
out
out
int3
push
mov
xor
fadds
aas
testl
inc
in
push
cmp
in
push
cmpb
lret
and
lea
das
adc
repnz
or
divl
ret
mov
hlt
dec
mov
jg
pop
iret
inc
sbb
push
inc
subl
push
aas
inc
cltd
sbb
lcall
sub
ds
add
sti
imul
aam
jnp
add
ja
push
adc
cmp
lahf
xchg
mov
jae
dec
fsub
in
cli
mov
mov
hlt
fstps
or
leave
pop
iret
sbbb
outsl
adc
inc
or
mov
adc
xchg
mov
negl
popf
pop
sahf
xchg
aad
jne
mov
cmp
inc
imul
jl
lcall
xor
fdivl
cmp
xor
es
mov
loopne
inc
adc
pop
das
xorl
out
ror
xchg
pop
inc
out
mov
mov
sarl
pop
mov
cmp
faddl
dec
repz
push
loop
test
mov
arpl
push
push
stc
scas
push
fwait
jb
loopne
and
mov
mov
adc
daa
cmc
jl
adc
out
or
repnz
int3
fldpi
or
fnstcw
or
cmp
pop
sti
jmp
les
lcall
pop
xor
lea
imul
shrb
sub
inc
adc
xor
nopl
ss
xor
mov
jle
dec
inc
jmp
mov
repz
and
cmc
mov
mov
ss
sub
inc
shll
adc
pop
pop
ds
and
push
sub
ss
sbb
lcall
outsl
cmpsl
cmp
sub
cmp
xor
ret
fldenv
ret
sbb
and
int3
pop
jge
and
cmp
pushf
cmp
jo
hlt
ret
lcall
movsb
sub
dec
lods
adc
fsubr
sub
xchg
outsb
xlat
gs
pop
hlt
loope
mov
addb
adc
push
pop
pop
in
rclb
stc
fildl
test
mov
arpl
pop
cmp
xchg
outsl
mov
dec
xchg
ret
enter
dec
call
push
into
pop
popf
movsl
pusha
cmp
dec
mov
inc
jg
dec
sbb
jp
dec
fs
xor
fimuls
xor
pop
icebp
andb
fildl
and
cmp
push
dec
lds
and
xor
mov
sbb
je
mov
or
xor
rorl
or
sub
rclb
inc
mov
bound
bound
lret
dec
icebp
adc
push
sahf
adc
mov
loope
sub
rolb
out
xor
ficomps
insl
mov
cmp
xor
mov
and
pop
test
sub
jae
mov
inc
and
pop
cli
std
xchg
shlb
int3
cmp
mov
sbb
sub
int3
push
sbb
fistps
add
cltd
out
mov
repz
fldenv
cwtl
out
subb
pop
xchg
fldpi
out
adc
lahf
subl
inc
js
add
and
push
or
je
mov
mov
lods
stc
xor
stos
push
aaa
pop
xor
insl
and
ja
stc
pop
sbb
fldl
pop
orl
xorb
lods
inc
xor
pop
sbb
gs
mov
cwtl
lret
mov
pop
sbb
xlat
xor
enter
xlat
push
inc
pop
popa
inc
jb
test
inc
adc
xchg
adc
adc
sub
mov
ja
pop
xchg
rcll
gs
inc
jo
mov
scas
adc
inc
dec
mov
aad
inc
nop
es
pop
mov
mov
mov
call
xchg
adc
mov
sub
ss
aam
mov
xlat
inc
inc
mov
stos
sub
sbb
cmp
adc
or
dec
push
adc
ret
into
and
loop
lock
sub
les
pop
mov
mov
dec
push
dec
imul
insl
sahf
lods
out
mov
stc
mov
pop
inc
test
in
in
xchg
xchg
cmpsb
in
pop
push
js
movsb
lret
das
jmp
jb
ljmp
fstpt
les
getsec
divb
cmp
push
out
leave
lea
xor
push
sbb
scas
dec
inc
out
nop
or
dec
rol
pop
mov
xchg
sbb
push
aad
insb
jmp
jae
movsb
divl
xor
xor
xchg
jo
jbe
inc
xor
mulb
mov
sub
popa
jno
cltd
in
jo
sti
push
loope
testl
dec
lcall
mov
mov
xchg
rorl
xchg
sub
cltd
push
insb
jnp
fisubl
fdivr
xor
in
sbb
dec
cmpsl
sti
aad
into
jmp
shrl
iret
inc
icebp
xchg
push
in
jns
pop
xchg
jae
hlt
ret
xchg
ret
cmp
dec
icebp
adc
nop
aam
mov
bound
test
out
inc
mov
pop
iret
sbb
ja
cli
jae
pop
sbb
or
movsl
in
pop
leave
stos
inc
dec
xchg
xchg
jg
popa
push
sbbb
lret
mov
jbe
cmp
pop
stc
xchg
add
lcall
rolb
sbb
cmp
addb
push
out
mov
xchg
push
rolb
das
lahf
push
push
sbb
sub
sahf
leave
pop
lds
add
adc
jae
jmp
sub
fwait
jle
jo
mov
push
call
push
lea
scas
sti
dec
push
mov
lods
ja
cwtl
inc
sub
pushf
mov
les
xchg
or
add
inc
or
push
inc
xorl
jb
jge
insb
mov
jmp
xor
inc
popa
jmp
inc
mov
push
push
popa
call
sub
cli
ret
je
lods
sti
pushf
jne
mov
and
fistpll
jg
jnp
gs
inc
icebp
jge
in
pop
inc
xchg
pop
int
call
les
xchg
loopne
aas
push
pop
testb
jp
orb
push
xchg
mov
clc
repnz
rorb
adc
cmc
add
bnd
inc
jp
mov
call
push
cmp
rorb
mov
adc
cmc
jbe
sub
adc
out
scas
data16
out
insb
negl
mov
lds
scas
sub
insb
push
dec
repz
pop
outsb
in
scas
out
or
lods
fucomi
dec
pop
xchg
sub
cld
pop
sub
lock
popf
sub
and
mov
cmp
stc
sbb
jb
stc
xchg
adc
insl
ljmp
cli
push
mov
dec
xchg
fwait
dec
mov
and
pusha
jae
jbe
shll
pushf
xorb
clc
cmp
cmp
inc
mov
add
movsl
or
stos
sbb
mov
push
mov
int3
push
or
add
outsl
pushf
stc
and
push
pusha
xchg
repz
std
out
imul
push
inc
lods
mov
and
xchg
pop
add
movsb
add
and
mov
mov
sbb
test
or
popa
mov
dec
xchg
add
sbb
aad
pop
jno
icebp
jbe
and
pusha
mov
sub
iret
ret
pop
ja
fsin
lea
js
in
mov
imul
lret
sbb
xor
ds
call
pop
cmp
enter
sti
pop
cmp
les
daa
movsb
and
and
cmpsl
or
push
cwtl
inc
mov
lahf
mov
mov
mov
outsl
cmpsb
mov
lahf
cmp
gs
out
shrb
mov
add
push
sbb
cmpsb
mov
es
cwtl
in
adc
imul
out
push
xchg
imul
les
je
mov
jecxz
or
jle
mov
mov
mov
sbb
inc
xchg
xor
outsl
pop
mov
push
lcall
mov
push
mov
xchg
cmp
test
pop
dec
ret
cs
and
sbb
push
shlb
pop
adc
mov
dec
mov
or
sbb
les
or
leave
mov
or
push
in
xor
loop
int
sub
inc
insl
loop
stos
shrb
push
push
cli
iret
jecxz
xchg
dec
cmpsb
fcomi
stos
pushf
adc
sub
jmp
jl
and
vorpd
pop
sahf
push
jnp
mov
mov
movsb
jecxz
stos
mov
sti
push
mov
pop
cld
aam
xor
cmp
je
push
clc
pop
xchg
jle
vprotd
mov
aaa
mov
sti
dec
aam
cltd
push
insl
lods
lahf
mov
aaa
pushf
std
dec
and
cmp
fdivrs
loop
in
inc
sbb
test
inc
dec
or
js
adc
mov
and
push
inc
mov
rorl
mov
push
enter
cmp
movsl
test
dec
mov
les
stos
push
and
cmp
push
pop
push
rclb
sub
xor
sbb
call
clc
xchg
push
sbb
cltd
ret
adc
xlat
cmp
adc
sbb
popf
and
fldcw
dec
scas
lods
push
mov
in
dec
mov
cltd
adc
fbstp
and
out
push
xchg
aam
xor
out
fwait
jne
out
inc
fdivrs
mov
and
push
xor
in
push
fisubs
sbb
movsb
call
rorl
js
ret
in
mov
adc
cld
add
in
cs
jbe
mov
in
test
mov
lock
cmp
out
pushf
cmc
mov
outsb
test
xchg
rorl
jmp
cmp
outsb
js
in
sbb
aad
bound
cmp
mov
aas
aas
jg
test
push
or
int
push
andb
adc
pop
lods
popa
dec
push
mov
cli
jbe
test
fnsave
cld
cmp
jle
leave
fnstenv
test
les
movsb
jae
adc
sti
adc
push
sub
test
xchg
enter
ds
mov
mov
add
mov
xchg
push
sti
pop
add
push
push
gs
cs
shll
or
out
mov
cmp
adc
push
jae
inc
out
jecxz
fdivrl
pop
or
mov
dec
adc
cmpsl
pop
sbb
pop
les
js
push
scas
imul
pop
call
fwait
pushf
mov
fstl
test
ss
pop
rclb
shl
sar
add
mov
movsb
jns
sbb
rolb
push
adc
ds
inc
test
sub
fldenv
sar
mov
jae
repnz
cmp
dec
mov
sub
jae
inc
push
rcrb
cwtl
into
xchg
ss
adc
das
sti
xchg
or
xchg
or
out
inc
push
outsb
pop
fists
pop
mov
mov
cmp
dec
iret
test
mov
add
xor
xor
push
push
out
in
push
cmc
xor
and
mov
aas
pop
mov
xchg
daa
mov
xchg
xor
mov
jns
xchg
adc
pop
push
jle
xchg
dec
and
jo
es
push
cltd
imul
add
cmp
pop
push
mov
add
test
sahf
sahf
mov
lret
jp
sti
push
mov
sub
dec
std
pop
lods
jecxz
shl
adc
lods
sub
adc
mov
in
std
fs
jo
jae
scas
outsl
mov
push
mov
adc
cltd
and
xchg
aad
or
stos
repnz
jecxz
scas
fimuls
hlt
push
and
aam
xchg
repnz
dec
sahf
test
std
add
pop
sub
movhps
ja
xchg
cmp
ret
js
sub
hlt
rcl
push
sub
sbb
outsb
add
lahf
jbe
cmp
call
bound
pop
enter
test
inc
xor
std
xchg
lret
aam
mov
jecxz
lods
mov
mov
fcmovb
sbb
mov
sahf
mov
testb
xor
and
mov
mov
mov
rcl
push
into
mov
mov
arpl
push
inc
dec
rcrl
push
dec
test
stos
aas
inc
fmull
cmpsb
cld
mov
outsb
aad
inc
bound
dec
leave
pop
sub
or
iret
pusha
push
ss
inc
fidivs
stc
xor
pop
test
pushf
xchg
push
push
insb
jo
jg
iret
stc
aas
adc
mov
sub
lods
xor
xchg
or
sbb
imul
dec
rclb
hlt
mov
sbb
jecxz
insb
in
das
in
mov
sbb
adc
out
adc
movsl
mov
inc
dec
mov
aaa
jb
push
mov
ds
inc
aas
inc
sub
mov
inc
lahf
sahf
add
rcrb
xchg
or
fxch
stos
inc
push
cmp
dec
aam
insl
outsl
popa
mov
add
lock
xor
jle
adc
xsha256
cwtl
out
jae
cmp
data16
mov
xchg
sub
jge
mov
addb
inc
ss
xchg
je
lock
repnz
fwait
xchg
mov
pop
popa
pop
pop
push
fcmovne
pusha
xchg
dec
mov
jne
mov
dec
sbb
or
dec
pushf
sub
pop
lret
stos
jge,pt
mov
push
fnstcw
cmp
scas
rcr
mov
mov
sbb
mov
sahf
ljmp
mov
stos
test
push
outsb
test
cs
test
sub
call
lcall
jno
sub
jmp
pop
dec
inc
imul
loop
paddsw
popa
sbb
sahf
jg
or
and
jbe
stc
and
mov
call
adc
mov
loope
push
add
retw
push
pop
frstor
ds
cmpsb
and
test
sarl
push
mov
gs
lahf
frstor
mov
push
adc
mov
push
mov
push
pop
xchg
jnp
inc
jge
call
and
cwtl
test
dec
in
mov
mov
xchg
and
xor
pop
mov
cmp
sbb
aam
cmc
lds
mov
popa
and
stos
imul
insl
dec
mov
mov
jbe,pt
push
mov
push
mov
scas
dec
mov
iret
inc
mov
adc
adc
mov
rcr
dec
or
mov
aaa
or
fcmovb
xchg
xchg
dec
push
mov
shl
lahf
cmp
fiaddl
or
ljmp
adc
lds
xor
mov
cmp
outsl
aaa
fwait
sub
lcall
dec
lods
xor
mov
pop
xchg
cwtl
inc
subl
xchg
jmp
push
add
imul
jne
dec
xchg
inc
adc
in
mov
and
mov
pop
sub
mov
ljmp
popf
and
xchg
sahf
add
repz
adc
cmpsb
fiadds
mov
repnz
or
mov
and
jecxz
test
fistl
int3
pop
mov
cmp
xor
inc
jbe
sbb
aaa
mov
mov
adc
and
ret
sub
int
xor
add
dec
gs
jo
xor
or
insb
inc
jecxz
push
jne
add
dec
das
cmp
outsb
dec
cmpsb
cmpsl
pop
mov
add
and
push
mul
jo
mov
nop
hlt
xor
rcrl
fsts
mov
dec
aas
xlat
popf
inc
sbb
dec
mov
popa
jb
lret
jno
cmp
lret
or
mov
jns
or
test
sbb
ss
mov
std
dec
push
ljmp
push
adc
out
mov
clc
mov
stos
or
pushf
push
cmp
push
movsb
leave
cmc
and
scas
test
and
lret
cmpsb
push
pop
cmpsl
lcall
scas
pop
cmpb
cltd
stos
adc
add
test
push
jmp
or
pop
dec
pushf
mov
sbb
jno
scas
pop
aam
in
inc
ljmp
push
cmp
loope
dec
or
mov
lods
mov
push
ret
nop
adc
ss
repnz
jg
add
clc
cmp
and
fcoml
cmp
lret
pop
cmp
in
push
jns
fcmovne
cmp
mov
lods
pop
cmp
cmp
push
add
mov
mov
movzbl
push
loopne
lahf
mov
sub
or
inc
cmp
fs
in
mov
cmp
jle
fstps
mov
test
clc
push
push
cmp
call
mov
sahf
rolb
adc
mov
mov
call
or
or
jge
cmpsl
clc
insb
cmc
adc
jmp
clc
or
pop
push
add
lret
loopne
nopl
mov
mov
lahf
popa
iret
adc
cmpsb
xor
jbe
or
outsl
pop
rcrb
imul
cs
js
cltd
cmc
and
xchg
mov
dec
push
jmp
sbb
std
xor
fmul
sub
test
subl
popf
push
or
or
xchg
push
xchg
sar
repz
mov
js
xchg
shll
cmp
inc
int
fcom
jmp
pop
xchg
add
test
push
add
xor
fs
divl
dec
mov
fldt
imul
or
daa
insl
dec
inc
ret
mov
daa
xor
andb
lret
mov
xchg
pop
std
cmp
push
or
adc
cmp
cmp
sbb
xchg
out
fstpl
repz
and
or
and
sbb
mov
sub
shll
xchg
bound
shll
and
insb
fsubs
and
mov
lret
roll
stc
test
add
xchg
shll
cmpsl
adc
cmc
into
xchg
movsb
jmp
add
icebp
mov
mov
pop
jg
jbe
arpl
pop
daa
xchg
ljmp
sub
loope
push
jb
sbb
adc
mov
inc
sbb
inc
movsl
in
mov
in
bswap
jmp
add
lahf
cmp
inc
jge
sub
shll
lahf
clc
ret
xchg
jbe
dec
bound
cld
jmp
add
hlt
jnp
jg
outsl
mov
add
and
mov
jae
or
cmp
outsb
mov
add
inc
lahf
cmp
inc
cmp
push
push
jp
jle
jp
jo
cmpsl
push
ret
mov
push
mov
cwtl
cmpsb
dec
fcoms
cmp
jecxz
push
mov
ret
jo
inc
ds
imul
cmpsb
jmp
jo
nopl
mov
dec
mov
mov
and
push
leave
cmp
movsl
hlt
orb
stc
roll
mov
daa
fldcw
mov
fsubrl
ficomps
sarl
dec
data16
mov
mov
push
imul
lock
leave
insl
call
sub
mov
pop
insl
or
fsubl
in
adc
pusha
xchg
push
cmp
mov
repnz
loop
out
mov
out
daa
shrl
les
pop
bound
jle
mov
push
scas
lret
inc
mov
jne
dec
test
ss
icebp
call
imul
in
fiadds
mov
dec
pop
adc
decl
clc
mov
cmp
insb
jnp
les
add
add
fwait
mov
fidivs
fimull
ljmp
ljmp
cmpsl
stc
and
and
dec
add
xor
cmp
push
add
dec
mov
sub
fs
xchg
cmpsb
shrb
sbb
xor
dec
dec
and
das
stos
cmp
xchg
popl
lods
lds
in
sbb
loope
xchg
lret
cmp
nop
cmpb
push
adc
cs
push
mov
je
clc
pop
pop
mov
dec
shrl
dec
test
arpl
jle
mov
out
and
xor
and
aaa
aad
rclb
movsb
dec
loope
mov
sub
xlat
or
and
arpl
xor
dec
mov
in
divb
push
imul
clc
das
fcmovbe
cmp
mov
sbb
lods
push
lret
out
inc
sarl
inc
dec
out
mov
jns
dec
mov
dec
inc
jbe
sbb
mov
push
into
sub
sbb
mov
pop
inc
cmpsl
cmc
pop
lcall
xor
sahf
push
incl
pop
int3
fidivrs
mov
cmp
or
add
and
out
ud2
mov
aad
ja
adc
and
pop
cmp
imul
push
cmp
mov
add
push
jnp
fwait
test
mov
outsb
adc
dec
testb
mov
adc
jo
jle
cmpsb
outsl
pop
inc
xorl
addr16
adc
dec
add
adc
std
push
and
xchg
ss
cmp
inc
push
or
pop
pop
fiadds
mov
loopne
hlt
dec
xor
or
cmp
leave
push
je
fldt
cwtl
loop
sbb
movsl
and
and
mov
sbbl
sahf
push
mov
test
out
adcl
imul
xor
add
cmpsb
push
fxch
movsb
enter
inc
imul
cmp
jbe
jge
ds
cld
mov
jbe
pushf
dec
push
or
and
fnstenv
adc
jae
lods
pop
push
mov
lahf
push
jmp
xchg
pop
xchg
pop
mov
and
push
out
jae
addr16
testl
sbbb
lahf
pop
decl
mov
ret
pop
xchg
into
pop
rcrl
test
stos
mov
inc
adc
mov
jge
ficomps
cmpl
adc
inc
lret
push
cmc
pop
or
cmp
mov
jle
add
cld
gs
push
mov
test
popf
mov
daa
imul
add
sbb
and
push
jbe
ljmp
mov
imul
call
hlt
inc
mov
xchg
mov
push
pusha
fcoml
jecxz
mov
dec
dec
inc
push
sbb
inc
fs
add
pop
jp
xchg
xor
adc
int
or
enter
pop
lods
arpl
xlat
mov
sbb
adc
fisttpl
pop
mov
enter
sub
pop
add
iret
dec
dec
adc
inc
xor
xor
and
cmp
sbb
loopne
jge
in
fucomp
mov
dec
sarb
pusha
dec
lcall
jnp,pn
adcb
fsubrl
mov
jmp
repnz
push
icebp
dec
jmp
adc
fwait
push
jecxz
pop
add
outsl
fcmovu
aaa
insl
sbb
xor
mov
into
rcr
adc
pop
aam
lock
cmpsl
data16
je
mov
loopne
lea
loopne
mov
and
out
and
mov
mov
aaa
xor
push
out
add
mov
shlb
dec
aas
inc
aas
hlt
add
sub
sbb
mov
adc
mov
or
leave
idiv
push
jnp
je
imul
fcmovnu
jbe
push
add
mov
shl
sbb
bound
mov
hlt
mov
scas
imul
clc
pop
cmp
xchg
sub
or
mov
rdmsr
ret
loope
lods
ja
push
mov
xchg
bound
fcmovbe
lock
dec
or
dec
inc
xor
ret
es
stc
hlt
fs
int
xor
std
loopne
sar
repnz
aaa
add
int3
test
add
jns
dec
add
test
inc
shr
out
andb
das
xor
mov
aas
xchg
mov
mov
popf
xchg
lods
jp
sti
testb
xchg
aad
out
dec
dec
cmp
int
mov
jge
addr16
pop
out
loopne
cmp
xchg
clc
cmpsb
dec
imul
push
mov
fmuls
stos
cli
xor
mov
xor
jmp
add
cmpsl
xor
pop
sbb
xchg
pop
cmc
in
outsb
fistpl
xchg
xorb
lret
sbb
in
xchg
les
into
jne
sbb
loop
enter
xchg
addl
xchg
les
xchg
jnp
out
mov
jno
fwait
push
xor
sub
sti
xchg
xchg
pop
sbb
push
cmp
cmpsb
aaa
pusha
lock
sub
and
cmp
pop
push
dec
push
push
loope
sti
loope
arpl
or
ja
mov
or
mov
or
mov
mov
pop
int
les
movsl
mov
pushf
movb
jne
adc
in
aad
pop
xor
mov
push
cli
mov
sub
xchg
ficomps
mov
inc
cmp
test
stos
movsl
inc
mov
call
fcmovnu
les
and
mov
addl
rcll
pop
std
cltd
aam
cmp
add
mov
xor
add
int
sub
mulb
fs
clc
dec
imul
mov
mov
mov
sub
fwait
sahf
test
and
in
movsl
push
cs
xchg
std
or
inc
inc
mov
sub
int3
in
test
add
mov
iret
mov
jecxz
push
inc
and
pop
dec
cs
push
andl
mov
fldt
pop
jl
xor
fdivrs
in
aaa
cli
mov
outsb
and
outsl
jge
or
sahf
and
les
fildl
loope
ds
int3
xor
add
xor
pop
dec
sbb
leave
sub
hlt
and
fisubrs
jmp
ret
hlt
xlat
jg
push
outsb
icebp
push
push
jle
sbb
sbbl
sahf
or
lds
int
inc
adc
jne
aaa
mov
xlat
cwtl
adc
aad
mov
xchg
mov
cwtl
dec
mov
mov
xchg
lds
or
aam
aam
in
and
test
pop
xor
test
mov
addr16
xchg
push
adc
adc
out
inc
and
repz
jnp
das
fcomps
cmc
mov
ds
loop
or
dec
inc
jae
and
xor
push
sub
in
adc
fstps
xor
push
mov
mov
divl
addr16
out
fcos
incb
popf
add
mov
jae
icebp
pop
or
movsb
lock
das
dec
sub
or
popf
cli
pop
pop
and
stc
mov
dec
jbe
fsubrl
pop
xchg
mov
std
mov
cltd
pop
lcall
sub
mov
pop
out
push
ja
xor
dec
add
cld
iret
and
out
fsubrl
pop
or
mov
add
cmp
pop
and
mov
fisttps
mov
sbb
adc
out
cltd
mov
jmp
cmp
jno
jg
adc
mov
shlb
dec
test
mov
std
icebp
mov
adc
mov
xchg
js
push
test
ds
dec
xor
adc
xchg
jge
dec
arpl
lds
sub
inc
lods
push
ds
pop
insl
push
jl
add
or
jecxz
sbb
ds
cmp
popa
mov
ds
pop
inc
lret
insb
xor
rcrb
push
out
ret
mov
dec
arpl
push
pop
and
dec
leave
cmp
sub
dec
insl
sub
jecxz
test
test
pop
test
cmp
jne
dec
in
mov
loop
dec
mov
test
mov
and
push
repnz
subb
out
shr
in
sbb
sbb
jl
xchg
sub
mov
in
in
cmp
adc
shll
inc
loope
inc
or
lea
xor
jecxz
jl
stos
xor
adc
mov
pop
sbb
lcall
xchg
dec
push
xchg
push
xor
jl
cmpb
push
mov
leave
std
loope
fimuls
mov
lret
sub
mov
das
push
xchg
and
shll
jno
pop
pop
mov
jae
jnp
xor
cmp
jmp
leave
ds
push
mov
mov
insb
jae
lahf
stos
cmc
mov
sbb
hlt
add
or
loop
adc
push
inc
xchg
pop
iret
imul
push
rcll
jns
dec
ret
call
adc
int3
xchg
mov
aad
sub
stos
test
addl
mov
decb
fcomps
add
fldl
outsb
inc
mov
jns
js
or
mov
or
test
pop
add
lea
push
int3
loop
mov
int3
cmpsl
negl
dec
lret
adc
adc
push
test
or
fisubs
jnp
loope
scas
sub
inc
out
lods
imul
test
jne
sbb
jne
repnz
sahf
mov
into
mov
lds
mov
pop
test
lods
dec
pushf
xchg
dec
outsb
insb
dec
rclb
scas
inc
add
ss
mov
mov
loop
std
clc
mov
mov
sbb
jl
iret
jecxz
mov
lret
insl
adc
lods
orb
add
je
mov
lret
xchg
inc
test
adc
add
or
into
push
xchg
sbb
sbb
ja
dec
iret
push
or
movsl
loopne
jb
loop
cmovl
movb
fwait
cli
push
dec
cmc
jae
fs
out
pop
cli
add
or
shlb
inc
lds
gs
popf
pop
xlat
call
popf
pop
outsl
sub
mov
in
jl
loope
pop
mov
xchg
cmp
push
mov
mov
rorb
or
in
imul
mov
ret
in
xchg
lret
addr16
or
cmp
xchg
cmpsl
frstor
in
xchg
sahf
rorl
push
dec
adc
mov
jmp
fnsave
insb
int
push
int3
shll
inc
leave
cmc
push
push
xor
bound
pop
lcall
arpl
mov
insl
inc
jbe
mov
or
test
sbb
sbb
loop
enter
add
enter
xchg
je
mov
sub
dec
xchg
into
ljmp
cltd
lock
addr16
cwtl
mov
xor
fcoml
sahf
int
mov
sub
cs
or
adc
les
inc
or
into
imul
aas
inc
cmc
or
scas
lock
inc
sbb
test
or
add
push
shll
ret
add
dec
jecxz
pop
or
in
xor
jle
sbb
cmp
dec
insl
sub
scas
sbb
add
mov
pushf
or
ljmp
pop
je
inc
pushf
std
out
dec
sub
mov
sub
in
cltd
fmuls
je
loop
xor
shrb
mov
arpl
ja
push
shll
xchg
aam
enter
aad
movsb
inc
pop
loopne
js
enter
cli
mov
xchg
xor
hlt
and
nop
jnp
xchg
xor
add
sbb
add
popf
pop
cmp
xor
movsb
push
aaa
add
inc
leave
rclb
mov
ret
push
fisubrl
sti
mov
xlat
hlt
sbb
jo
ja
ss
stos
outsb
cmp
add
push
xchg
jno
loop
push
test
je
jge
in
mov
sub
popa
in
aam
cld
sbb
pop
jnp
cltd
push
imul
mov
rcl
test
scas
movsb
sub
xlat
push
clc
and
inc
addr16
inc
adc
xchg
inc
sti
subl
pop
test
xchg
jl
add
and
jl
arpl
jns
cmc
sbbb
adc
jp
fcmovbe
and
bound
xchg
in
sbb
jl
jo
nop
inc
pop
imul
sti
sub
xor
xorl
out
xor
xor
jo
or
into
out
pop
aaa
xorl
push
shr
xor
xchg
sub
cmpsl
cmpsb
adc
fistl
jg
out
add
divb
fs
mov
les
lea
inc
mov
and
jp
add
sbb
adc
mull
and
push
movsb
add
in
jns
insb
xor
xchg
or
sti
cld
mov
inc
add
data16
cmp
nop
shll
sub
push
push
xchg
xor
testl
in
je
and
movl
aam
or
adc
pop
mov
scas
clc
lds
jbe
into
cmc
dec
nop
push
call
test
xor
movsb
addl
sbb
pop
das
mov
inc
out
outsb
fsubp
xchg
je
pusha
in
mov
mov
mov
je
test
mov
js
sub
arpl
sbb
outsb
jae
lods
adc
add
or
cmp
aad
dec
push
jo
push
cld
push
out
lods
rorb
xchg
jae
or
fdivrs
jns
and
out
lods
repnz
lret
adc
lock
int
cmc
aas
test
sbb
repnz
cli
fsubl
inc
and
pusha
xchg
movsb
push
dec
enter
mov
push
jmp
lods
aam
adc
mov
xor
mov
stc
pop
sub
sbb
cmp
inc
mov
adc
jp
push
or
iret
xchg
jecxz
cmp
xor
dec
sar
mov
add
ja
std
pop
rorl
dec
cwtl
inc
xorw
push
mov
cmp
jg
jne
dec
int3
push
out
adc
push
mov
pop
xor
pop
mov
jnp
aam
sarl
sbb
mov
sub
pop
movsl
cs
out
xlat
mov
rclb
shll
in
inc
dec
jae
loopne
inc
jg
out
mov
add
shll
push
dec
push
popa
sbb
scas
into
out
popf
stc
jl
ficoml
sbb
add
cmp
daa
mov
xchg
adc
xor
and
jge
int3
xor
add
ja
stos
sahf
jp
xor
xor
jns
xor
pushf
mov
xchg
sub
aam
jl
jb
je
ja
call
sbb
xchg
cmp
enter
or
pop
inc
stc
fs
mov
fwait
add
int3
idivl
mov
repnz
divl
sub
setl
inc
inc
or
mov
bound
mov
cmp
ret
pop
add
mov
cmp
lea
mov
jl
sbb
pop
pop
xchg
outsl
dec
ljmp
in
sti
xchg
xor
and
lret
pusha
dec
adc
int3
test
mov
les
mov
loope
pop
insl
aad
dec
xchg
fwait
mov
jle
cmc
jecxz
popf
pop
lahf
les
xchg
int
lret
shll
jne
aas
les
mov
test
repz
rorb
xchg
cs
cmpsb
jne
out
loope
adcl
dec
cld
out
loope
outsl
cmp
xchg
cmp
out
xchg
add
xor
les
rorl
mov
push
push
cli
push
adc
xlat
out
and
stc
mov
sbb
pop
jg
test
lock
and
cmp
and
or
cwtl
sbb
xchg
mov
cmp
pushf
jecxz
lods
fs
addl
mov
stos
mov
dec
std
mov
xchg
sbb
cli
xor
cmp
mov
sbb
xchg
push
scas
in
xchg
aaa
imul
movb
scas
xchg
jae
push
jg
add
jp
mov
xor
pop
roll
hlt
mov
not
mov
cmpsb
pop
and
or
popf
in
mov
lahf
jmp
adc
pop
push
pop
add
popa
add
xor
lods
fldt
hlt
or
xchg
lret
xchg
mov
xor
pop
push
inc
xorl
push
dec
push
mov
xor
dec
mov
leave
push
out
out
xor
mov
loope
adc
mov
dec
xchg
shrw
and
es
nop
pop
pop
push
sub
je
movsl
cmp
jmp
ss
xor
pop
scas
dec
popa
push
add
notl
in
imull
adc
cwtl
and
sbb
sub
pop
lret
sub
aas
cmp
test
mov
pop
aaa
mov
xor
mov
jb
lahf
mov
cmp
sbb
addps
popa
mov
cmp
mov
jno
jge
js
fistpll
dec
movl
in
fldenv
mov
decl
rcrb
lds
adc
xor
loopne
lods
mov
jns
lods
roll
push
jno
mov
dec
repnz
mov
call
mov
stc
add
push
jb
jb
add
cmp
in
adc
aam
fcompl
int
aad
mov
popa
pushf
in
mov
xor
jmp
pusha
and
add
push
jge
scas
scas
jbe
sbb
xchg
fisubl
mov
lea
mov
dec
in
xchg
inc
test
das
cmovno
xor
xchg
adc
rcrb
imul
cmpsb
mov
push
aaa
jbe
mov
arpl
leave
jmp
add
divb
dec
mov
mov
dec
aam
xor
cmp
std
aam
arpl
xor
fsts
mov
das
sub
das
pop
adc
jmp
iret
lahf
imul
xor
xchg
out
sub
xchg
sub
lds
leave
xor
adc
popa
rclb
test
xchg
dec
xor
dec
fdivr
add
jo
fwait
jne
aas
inc
jmp
int3
or
lret
stos
sub
pop
mov
bound
cmovnp
mov
jge
insb
ror
scas
dec
adc
inc
sbbl
cmpsb
inc
mov
div
out
or
iret
repz
mov
inc
clc
fs
xchg
movsb
mov
out
jge
jno
outsl
negl
sbb
fisubl
enter
inc
adc
cltd
pop
roll
sbb
test
mov
insb
cld
pop
ret
stos
jl
ds
xchg
adc
jle
jp
add
xor
mov
sbb
mov
xchg
out
cmc
pop
sbb
sbb
mov
in
and
push
test
dec
and
std
out
cmp
mov
scas
insb
lret
add
clc
mov
mov
mov
sbb
pop
pop
pop
and
loop
popa
xor
mov
xor
imul
mov
sub
sbb
pop
pop
ljmp
mov
arpl
call
jp
dec
std
aad
cs
and
jmp
loope
cmp
hlt
jl
lods
sub
jge
loopne
xchg
cmpsb
rol
or
add
aam
xchg
test
bound
loope
in
test
pop
test
dec
sbb
int3
sahf
ljmp
fstpt
pop
ss
insl
and
sub
jno
popf
cmp
push
add
scas
mov
addr16
gs
dec
pop
inc
gs
ss
sbb
mov
pop
je
mov
nop
pop
xchg
popa
mov
insb
adc
mov
dec
cltd
add
mov
cmp
out
fimull
sbb
test
jle
adc
jns
les
push
fsubrs
and
out
adc
mov
fbstp
repnz
xlat
es
cmp
addr16
sbb
repz
sbb
push
arpl
cmp
jo
sub
mov
sub
bound
jnp
xor
notb
in
fistpll
into
aas
outsb
xlat
adc
jo
add
ret
mov
dec
push
and
push
jg
aam
out
scas
lahf
pop
fs
dec
mov
xchg
and
push
call
sbb
mov
cmc
mov
out
ss
mov
inc
push
je
dec
inc
xor
sub
xchg
mov
sbb
mov
insl
movsb
les
cmpsb
fldl
jge
push
inc
arpl
cmp
lahf
add
lds
or
or
cmp
mov
mov
push
or
in
jge
leave
mov
mov
cmpsb
jnp
test
add
and
mov
push
pop
imul
sbb
mov
jb
movsl
mov
popa
xorb
cmpb
jle
aaa
cwtl
lret
sub
dec
lods
push
fsubrs
xor
lods
sbb
ss
test
push
sub
pop
mov
push
mov
jle
jecxz
adc
adc
add
xchg
outsl
jne
roll
es
fidivrl
fnstenv
mov
and
out
add
mov
lcall
jo
add
add
and
daa
fnstcw
push
push
lcall
jbe
inc
push
loopne
scas
jle
sub
xchg
js
aas
mulb
sub
cmp
inc
xchg
es
test
inc
xchg
xlat
leave
hlt
cli
sbb
pushf
or
sub
jo
pop
aam
mov
jge
ret
nop
or
xchg
pushl
scas
js
movsl
lahf
idiv
pop
sub
out
cmp
push
mov
sbb
and
repnz
ret
movsl
imul
jp
addr16
or
cmpsl
repnz
push
test
es
pop
ret
mov
nop
aam
ret
add
rorb
mov
idivb
mov
adc
mov
and
mov
lahf
sbb
sub
test
push
pop
and
fucomip
pop
push
xchg
push
mov
add
dec
add
inc
mov
aad
cmp
mov
dec
fdivrs
wrmsr
out
mov
lahf
dec
pavgb
sbb
cs
cld
xchg
fcoml
fwait
jb
movl
lods
fcoml
mov
mov
adc
pop
push
or
fisttpll
mov
mov
mov
add
int
aaa
mov
cmpl
notl
mov
mov
enter
push
outsl
ret
ficoml
leave
jp
cmp
in
push
in
ror
sub
push
lret
pop
jb
mov
cs
popf
cli
jae
out
cs
inc
dec
inc
cmpsb
inc
adc
add
cli
out
ds
aam
push
mov
mov
fiaddl
cs
lret
lock
push
mov
mov
add
lea
push
mov
push
xchg
cld
dec
imul
sub
add
iret
imulb
arpl
je
movsb
mov
pop
or
into
out
cmp
in
inc
or
icebp
dec
fidivrs
mov
pop
adc
je
rclb
inc
mov
xchg
mov
adc
xchg
cmp
sti
xor
loope
mov
lret
std
mov
cmpsl
sub
inc
cs
cld
int3
jle
dec
mov
mov
test
or
push
push
mov
or
mov
jo
jge
repnz
cli
cli
xchg
outsl
aas
insb
stos
sbbl
inc
pcmpgtd
imul
xor
test
in
inc
cwtl
pop
inc
sbb
in
insl
pop
pop
or
xor
in
pop
jl,pn
shrl
push
sub
cmc
cmp
sbb
out
adc
cmpsb
push
mov
pop
push
xlat
mov
fcmovu
mov
outsb
xor
dec
pop
jnp
mov
ret
int3
shrl
lods
sahf
mov
xchg
dec
xchg
lods
repz
shlb
cwtl
push
loope
fldcw
test
les
jmp
mov
adc
fs
cmp
fidivs
ficoml
jno
test
mov
mov
and
popf
in
dec
xchg
clc
repz
fcompl
jl
cmp
outsb
push
xor
lcall
jge
xchg
insl
movsb
sarb
scas
stos
xor
mov
dec
push
mov
sahf
push
jnp
into
movsb
jae
jns
xchg
cmpsb
mov
cmpsl
dec
xchg
mov
mov
rep
xorb
pop
and
or
xor
and
dec
lret
sub
jl
or
shrl
xchg
ficompl
rol
cmp
cld
fistps
xchg
shll
add
inc
dec
rcrl
jbe
aaa
jmp
cmp
mov
sub
hlt
xchg
jae
loop
inc
inc
cmp
mov
sub
movsb
mov
dec
sbbb
pushf
pop
mov
mov
shrl
jbe
xchg
cmp
fdivl
xchg
add
les
in
cmp
jae
movsl
jmp
cli
mov
jmp
sahf
dec
fidivs
addr16
mov
pusha
mov
inc
aad
out
xorl
inc
lea
or
lds
cmpb
cmp
sub
test
outsb
les
push
loopne
jge
dec
js
push
mov
sub
cmp
jns
mov
sub
rorl
test
push
test
inc
xor
test
xor
push
fisttpl
jbe
std
out
int3
out
mov
icebp
pop
mov
xor
mov
test
adc
fwait
pop
xchg
mov
mov
out
hlt
arpl
push
in
or
add
stc
jp
sub
roll
rorl
test
inc
lds
mov
rcrl
xor
sar
or
xchg
push
or
mov
xchg
mov
stc
fsubrs
stos
jl
cs
es
mov
fistl
xlat
fisubrs
mov
dec
mov
daa
arpl
cmp
std
mov
pop
faddl
adc
sti
in
in
xchg
inc
mov
or
adc
add
pushf
xchg
arpl
lret
push
call
mov
push
cmp
mov
cmc
push
cltd
mov
fwait
clc
jo
xchg
push
or
sub
inc
fnstcw
xor
out
lea
into
popf
fimull
lock
cs
mov
int
cmpl
cmp
jno
mov
in
bnd
push
int3
xlat
in
push
xchg
mov
xchg
out
xor
push
rorl
scas
or
out
sub
xor
mov
pushf
call
fistpll
ret
cmc
add
test
mov
xchg
jbe
push
popf
fdivs
cs
leave
cmp
mov
cmc
inc
push
and
push
pop
pop
mov
or
xchg
inc
pop
dec
imul
mov
push
std
lock
add
add
ljmp
pop
mov
mov
and
jb
xchg
sbb
pop
add
jle
push
cmovs
add
ja
loopne
mov
xchg
in
sbb
jbe
mov
xor
icebp
lret
mov
xchg
fs
sub
xchg
xor
sub
xchg
cmp
loop
repnz
cltd
repnz
adc
jnp
mov
out
mov
push
out
out
sarb
xor
sbb
ret
adc
jnp
xchg
loopne
hlt
mov
aaa
cmc
rcl
cwtl
fsubp
mov
imul
lea
rclb
mov
xchg
mov
test
enter
shl
bound
mov
sbb
and
dec
xchg
inc
add
fisubs
mov
fistpl
movsb
pop
es
mov
push
lahf
arpl
aaa
pop
popa
ficomps
dec
mov
lahf
paddusb
sbb
adc
mov
bound
adc
push
outsl
lahf
mov
sarb
dec
mov
mov
or
fucomip
bswap
aaa
cmc
push
sub
sbb
aaa
popa
cmp
int3
hlt
inc
loopne
icebp
xor
imul
add
cmc
pop
push
stos
dec
jbe
xchg
cmp
mov
pop
cltd
mov
pop
call
test
xchg
push
jb
jbe
ret
jl
sti
mov
jbe
aaa
add
fidivrl
out
popa
nop
mov
sub
fs
pmaxub
xchg
pop
xchg
fimuls
xchg
adcl
dec
jns
dec
xchg
out
add
push
cmpb
and
jmp
sub
adc
mov
push
sbb
push
out
cld
int
sbb
push
xchg
xchg
cwtl
into
mov
dec
or
sub
lea
pushf
rcrl
std
xor
insb
jmp
add
call
mov
or
xor
dec
mov
sti
adc
or
push
push
or
call
and
call
jl
les
mov
jmp
cmpsb
and
fwait
pop
ds
add
add
cs
pop
xor
mov
inc
ljmp
arpl
fisubrs
mov
or
jb
pushf
xchg
cmpsl
int
or
inc
mov
stos
mov
popa
loopne
sbb
xor
push
sub
cmpsl
jns
addr16
xor
cmpsl
lcall
cltd
or
stos
fdivr
ret
out
jle
pop
mov
out
push
and
fdivrl
push
mov
out
mov
stos
mov
xor
dec
jl
insb
lock
imul
pop
sbb
mov
cwtl
push
insb
rorb
int3
push
sbb
push
shll
mov
add
fdivrl
mov
dec
rcll
loop
dec
pushf
leave
inc
mov
jbe
mov
pop
stos
daa
cmp
dec
push
or
sbb
mov
mov
cld
mov
popf
into
frstor
jmp
nop
sbb
push
daa
ljmp
push
or
repz
fucom
cmp
sbb
lahf
and
jae
fiadds
inc
lock
inc
mov
mov
jae
subb
adc
jns
loope
adc
lds
testb
push
pop
and
std
mov
test
call
pop
add
popa
jp
mulb
stc
idiv
sub
fucomip
mov
cwtl
jno
cmp
mov
out
xchg
mov
ja
arpl
loop
sbb
aad
mov
xchg
pop
popf
in
dec
negl
ds
bound
std
loopne
mov
rclb
les
cwtl
sarl
cmp
inc
lret
jo
ficomps
push
mov
fcmovnbe
dec
insb
jle
adc
arpl
test
adc
addb
mov
in
adc
stos
and
pop
out
mov
adc
cmp
xchg
call
movsl
jbe
ret
pop
sti
aad
pop
aad
sub
lret
pusha
push
fidivs
jp
cmp
xchg
stos
cmpsl
push
pop
dec
xor
pop
clc
orl
repnz
jle
sub
mov
nop
iret
sbb
jecxz
data16
mov
rclb
lea
into
sub
and
enter
lcall
aaa
or
push
pop
gs
fistl
in
rcrl
shlb
ljmp
scas
sbb
stc
test
fnsave
jmp
sti
xchg
ljmp
dec
or
lods
sbb
cli
test
out
dec
call
mov
adc
push
add
clc
xlat
jp
mov
sbb
sub
mov
lret
xchg
inc
push
scas
lahf
fs
jno
sub
nop
xchg
shlb
mov
sub
cmc
sti
adc
testl
push
sub
mov
xchg
ds
imul
jecxz
xor
cli
test
mov
imul
sub
lock
sub
xor
pop
mov
mov
inc
icebp
mov
dec
jae
iret
jg
lock
push
pop
or
stos
sub
aaa
imul
adc
dec
xor
dec
sbb
aam
sub
outsb
push
pusha
push
xlat
nop
scas
into
add
push
subl
cli
gs
dec
adc
fcoms
inc
movl
mov
into
outsl
push
jg
insl
aas
mov
int
lock
loope
mov
jl
ljmp
push
cmp
adc
push
stc
insl
les
daa
insb
and
inc
pop
adc
in
sbb
mov
sbb
into
xchg
enter
or
cwtl
popa
lcall
adc
in
test
bound
testl
push
pop
mov
loope
clc
dec
sbb
pop
nop
notb
or
dec
out
pop
fs
test
or
or
mov
leave
out
rcll
xor
push
je
sahf
lret
stos
adc
in
cmp
fimuls
fnsave
jle
sbb
dec
fcmovne
push
imul
les
lods
or
mov
inc
mov
jl
jecxz
jo
loop
fnstenv
dec
xorb
pop
cmp
xchg
inc
adc
in
inc
lret
jns
das
and
pop
jmp
sub
and
mov
or
jmp
pop
push
scas
pusha
outsl
arpl
mov
ret
nop
addr16
test
imul
mov
data16
ret
pop
or
std
xchg
cmp
mov
add
int3
xchg
push
icebp
pop
sbb
lahf
inc
in
mov
jl
mov
in
fwait
into
das
daa
mov
push
inc
jnp
fistps
push
decl
out
sbb
xchg
pop
xchg
jns
xchg
outsl
je
int
je
lret
popa
dec
movsb
sub
mov
cli
repz
adc
pusha
jle
sub
int3
mov
push
push
adc
pop
cli
push
popf
enter
lcall
or
push
loopne
sbb
xorb
dec
dec
sub
in
jecxz
repnz
mov
inc
cltd
mov
faddp
outsl
cs
sbb
add
xor
sub
jnp
mov
push
dec
dec
xchg
loop
stos
xor
icebp
xor
sbb
lea
cltd
sbb
dec
sub
jp
cmp
je
xor
adc
test
fisttps
ljmp
inc
cli
in
push
jp
cmc
push
cmp
and
repz
or
sahf
sbb
adc
popf
mov
jno
out
outsl
pop
mov
fadds
xor
xor
sbb
jae
outsl
pop
jecxz
leave
movsb
cwtl
aam
shll
ret
mov
in
repz
in
xchg
or
adc
jae
hlt
hlt
out
cli
mov
xchg
adc
pusha
add
test
and
jo
imul
dec
or
or
adc
cmc
mov
loop
insb
push
les
out
fmul
ljmp
mov
out
fnsave
mov
xchg
jno
jg
lret
lds
xchg
fsubp
in
fldcw
nop
xor
xor
cwtl
sar
mov
jg
pop
mov
je
aaa
mov
dec
sub
aas
arpl
jnp
rcll
cmp
add
addl
sub
cltd
dec
xchg
shrb
mov
push
loop
sbb
test
inc
lret
jne
aas
inc
inc
ret
cmp
inc
cmp
mov
dec
clc
divb
icebp
in
shlb
push
push
movsb
gs
pop
fwait
jge
pop
enter
jb
in
repz
shrb
pop
scas
sub
cmpsl
xor
sbb
mov
cmp
sbb
cmpsb
xor
mov
xor
push
dec
xor
dec
mov
loop
rcrl
nop
test
andb
and
mov
sub
enter
cltd
leave
cmc
pushf
push
lret
mov
xchg
jge,pt
pushf
popa
adc
js
shld
imul
pop
nop
pop
out
mov
daa
je
fidivl
ret
cmpb
push
and
setns
pushf
and
bnd
xchg
int
sub
xor
enter
mov
hlt
adc
or
cs
push
insb
mov
std
mov
aaa
scas
cs
and
jnp
push
hlt
xor
pop
cwtl
pop
les
popf
sbb
dec
divb
iret
addr16
rorl
sub
adc
test
mov
insl
and
call
negb
jmp
fnstenv
or
aam
push
push
jp
pop
xchg
jmp
jnp
inc
data16
repz
outsb
stos
imul
adc
or
pushf
xor
or
xchg
pop
stos
fisttpll
cmc
cmp
fsubrl
test
int3
pushf
inc
pop
mov
int3
sub
clc
lds
inc
out
mov
outsl
sti
movsl
cmp
and
sahf
xor
les
inc
dec
inc
jnp
shlb
mov
jmp
iret
mov
sbb
lods
ja
out
js
push
mov
ja
xchg
ljmpw
mov
and
mov
or
dec
push
push
enter
pop
ret
out
aam
daa
push
adc
xchg
xchg
test
stos
inc
hlt
cmp
stos
adc
push
fucomip
or
lods
xor
adc
outsl
iret
aas
fmuls
sub
das
jbe
and
mov
movsb
mov
dec
clc
lcall
test
xor
repnz
stos
test
push
aaa
std
mov
pop
rol
or
cmc
ret
lcall
inc
jl
push
or
pusha
cmp
lea
xlat
dec
sbb
cmpsb
push
lret
aas
add
loope
sahf
adc
cmovl
nop
stos
ficoms
pop
mov
sbb
lds
add
mov
es
push
repz
hlt
and
or
lret
iret
sub
xchg
xor
inc
dec
inc
xchg
pushf
cmp
cmp
xor
pop
or
sub
jns
push
outsl
jecxz
mov
out
push
les
mov
adc
outsb
lret
pop
inc
loope
scas
ret
jecxz
inc
mov
icebp
xchg
dec
fists
sbb
xchg
inc
sti
sbb
test
push
insb
dec
adc
cmpb
add
mov
sarl
addb
mov
add
addr16
mov
push
lret
gs
cmp
mov
add
mov
lret
cmp
mov
push
push
fld
cmp
jo
outsb
jmp
cmc
and
mov
add
push
sbb
xor
pop
mov
jo
add
push
jmp
movsb
adc
lahf
inc
pusha
push
in
xchg
mov
xchg
filds
xor
cmpb
jb
add
dec
popf
loop
jns
push
das
pop
mov
nop
cmp
ds
mov
enter
icebp
lcall
gs
or
les
add
inc
sbb
fcompl
and
ret
sti
fistpl
mov
or
fidivrs
inc
mov
insb
mov
cld
mov
sbb
clc
rcll
mov
mov
inc
fldcw
sbb
push
sbb
ret
mov
jg
xchg
lea
mov
sub
std
inc
add
fisttpll
enter
jo
lods
loope
rorb
adc
inc
bound
rcrl
jp
and
les
push
pop
lds
mov
mov
aaa
and
mov
jg
mov
rclb
shll
in
scas
ja
ret
std
dec
jmp
ret
cmc
push
popf
sub
les
fstpt
jmp
pop
jmp
icebp
push
leave
jle
divl
cmpb
les
mov
inc
rcrl
cmc
