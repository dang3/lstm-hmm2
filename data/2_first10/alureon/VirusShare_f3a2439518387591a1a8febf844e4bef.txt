push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
cltd
imul
sub
push
mov
fisttpl
insl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
dec
jne
out
aam
xchg
push
addr16
int3
test
cmpsl
lock
clc
jle
sbb
jmp
add
js
es
fmull
pop
lods
xor
push
xchg
push
mov
jnp
xchg
lds
fistps
clc
lds
cld
psrlw
xchg
xchg
scas
inc
cld
push
mov
pushf
mov
sbb
add
es
jae
loope
ret
xor
inc
psubb
push
lods
orb
sub
sub
sahf
pop
fimull
jo
or
pop
movsb
mov
mov
xor
lock
mov
xchg
sbb
cmpsb
ret
aam
xchg
es
jae
add
add
jg
add
push
jl
and
mov
adc
sahf
cmp
mov
xchg
lcall
ss
jle
in
insl
in
adc
outsb
push
adc
adc
add
fsubrs
cmpl
sbb
stc
sbb
dec
sbb
cmpsb
paddq
shld
in
cmp
inc
jb
sub
fstl
jne
fstpt
cmp
dec
dec
dec
fwait
cmpsb
clc
scas
fdivs
jnp
dec
or
and
rcrl
mov
add
mov
push
cmp
pop
repnz
cmc
add
mov
hlt
aam
xor
dec
lods
jae
aas
scas
add
sub
fwait
pop
leave
jle
push
push
mov
pop
push
or
test
call
jg
pushf
stos
xlat
adc
lret
push
add
cs
clc
in
daa
and
add
arpl
in
stos
and
les
sub
pop
mov
sub
sbb
push
loopne
arpl
mov
mov
fbld
dec
fistps
push
bound
lods
xor
ret
andl
jne
dec
jl
mov
je
lea
cmp
lret
add
jae
loopew
jb
cwtl
bound
pushf
jmp
push
movsb
mov
daa
add
hlt
jmp
xor
sub
std
stos
lea
lahf
xor
mov
xor
jge
imul
and
pop
cmp
mov
insl
xchg
movsb
roll
jnp
cmpsb
icebp
aam
mov
daa
dec
mov
cmpl
fbstp
inc
adc
lret
cltd
inc
lcall
sub
aad
outsl
in
adc
fcoml
mov
inc
pop
cmpsb
sbbl
pop
push
cmpsl
add
mov
and
mov
out
xchg
mov
cwtl
mov
push
rorl
add
jge
jge
data16
popa
sahf
sbb
push
or
inc
jg
mov
notw
mov
mov
pop
icebp
jo
repnz
or
inc
popa
pop
inc
and
mov
sbb
jne
mov
cmp
outsb
xlat
pusha
pop
cmpsl
adc
jo
xchg
sbb
adc
lret
add
leave
jne
inc
sub
test
loop
imul
mov
adc
xchg
or
jb
sub
js
xchg
rolb
icebp
repnz
xor
lret
loope
xor
mov
les
je
pusha
stc
cmp
imul
cmpsl
mov
and
cmp
xchg
jmp
push
sbb
adc
mov
inc
add
pop
jae
fnstcw
enter
add
sub
pop
in
xchg
test
arpl
ficoms
dec
push
fdivs
lods
xor
mov
xor
dec
gs
out
dec
sbb
arpl
ss
xor
imul
or
push
shl
adc
loop
and
movb
xchg
lret
mov
iret
ret
adc
test
mov
xorl
cli
ja
mov
cld
lcall
add
add
xchg
push
jmp
mov
pop
sbb
gs
dec
fsubl
jns
xchg
stos
push
mov
add
test
aaa
xchg
ds
scas
inc
das
xchg
xor
sbb
jl
pop
cmp
jb
dec
pop
ds
cvttps2pi
xor
lret
sub
mov
int
daa
cltd
xchg
ja
add
sub
jb
dec
pop
or
push
jmp
sbb
mov
add
sub
movsl
ds
jge
push
push
mov
cli
push
subb
jb
sbb
cmc
cmp
mov
mov
outsl
repz
mov
aad
int
xchg
stc
and
pop
dec
adc
sti
mov
push
outsb
scas
push
push
mov
cmp
pop
xor
nop
jae
or
dec
fnsave
lahf
push
dec
pop
daa
and
sub
lret
pop
sub
add
adc
sbb
mov
or
icebp
ss
sub
data16
cs
jae
push
lea
push
aam
inc
mov
nop
add
or
jo
lods
je
cmpsb
dec
sub
arpl
int
xor
dec
andnps
mov
mov
push
andl
notb
imul
in
scas
xchg
xchg
testb
hlt
loop
ljmp
out
sbb
add
arpl
aaa
in
or
add
mov
mov
jno
cmc
jnp
push
movsb
ret
inc
repz
or
pop
stos
sbb
dec
push
pop
lock
outsb
cmp
testl
adc
xchg
cld
arpl
jnp
in
popa
les
scas
pop
mov
stos
bound
push
imul
stc
sub
pushf
cmp
add
and
lods
add
paddsw
xchg
movsl
fwait
mov
outsl
insl
leave
mov
mov
lret
sub
outsb
lret
push
xor
aam
adc
popa
jecxz
cmpl
sbb
das
stos
dec
sarl
pop
daa
stc
stos
or
mov
mov
iret
int
sub
cmpsl
pop
sbb
xor
ror
xchg
push
in
jmp
mov
arpl
add
js
push
fstpl
push
ss
mov
mov
jb
dec
mov
out
xchg
mov
dec
inc
xchg
int3
repz
push
jle
mov
mov
aad
popa
jne
jg
mov
jae
fstps
mov
es
add
aaa
xor
test
jne
leave
pop
fstps
aam
insb
mov
out
dec
stc
pop
dec
lea
call
or
data16
add
sub
and
cmpsl
popf
jns
jecxz
push
push
addr16
fbld
sbb
idivl
dec
movsl
or
pusha
loopne
js
sti
add
pop
enter
std
arpl
mov
into
shll
push
fadds
push
add
into
mov
dec
popf
pop
scas
mov
pop
jo
xor
xchg
mov
push
in
push
lods
mov
sbb
cmpl
out
add
dec
add
inc
icebp
outsl
sti
adc
xchg
stos
add
es
aad
and
pop
mov
adc
sub
nop
stos
fnstcw
sbb
test
clc
push
xorb
movsl
ret
mov
sub
and
fbstp
leave
xchg
sub
inc
jnp
out
fildll
mov
rclb
xchg
dec
inc
push
aas
mov
sub
and
inc
rorb
movb
gs
sti
add
data16
add
add
jcxz
jge
cmp
adc
pop
mov
int
sub
pop
test
stc
and
fstpt
pop
xor
lods
out
and
sbbl
cs
mov
push
dec
lret
mov
pop
or
pop
pushf
lret
mov
decb
fstps
int
aaa
add
push
dec
push
popf
test
push
or
mov
add
in
int3
lret
adc
clc
out
lret
or
lcall
add
xchg
outsl
leave
add
in
push
out
mov
arpl
mov
jb
inc
hlt
mov
sarb
lret
je
dec
cltd
pop
jns
gs
insb
cmpsb
mov
pop
je
xlat
fsubs
jb
push
dec
cmp
pop
adc
imul
div
push
dec
je
adc
cli
aas
sub
cmp
mov
push
repz
outsb
lock
inc
fcomps
add
pop
xor
cs
rcrb
leave
jno
and
jmp
js
pop
ljmp
jne
in
lods
fnsave
les
imul
movsl
mov
or
je
insb
fucompp
outsl
jecxz
aaa
inc
repnz
pop
sub
push
imul
sbb
xchg
push
insl
stc
and
or
push
mov
mov
add
add
add
test
or
and
addb
es
inc
rcrl
cmpsl
xchg
rcpps
mov
dec
adc
add
adc
lods
imul
mov
pop
cmp
lock
scas
test
mov
add
inc
pop
xor
dec
cmp
mov
dec
xor
cli
dec
outsb
fsubrp
aad
into
adc
sbb
arpl
xor
lds
pop
inc
mov
jb
xchg
lret
cmp
cmpsl
in
adc
mov
das
ss
in
inc
test
lcall
mov
out
adc
mov
inc
mov
call
cltd
sub
lahf
dec
aaa
pop
imul
sub
lock
fldz
push
mov
mov
loop
sbb
sbb
shll
outsl
add
pop
call
repnz
jl
add
inc
add
das
movsl
dec
imul
add
mov
xor
xchg
imul
jmp
lret
add
div
loop
fstpl
popa
adc
adc
testl
push
xor
push
mov
push
or
adc
jmp
pop
shr
add
fcmove
in
inc
pop
and
pop
test
mov
enterw
adc
add
mov
es
push
mov
cmc
out
test
sbb
cmc
nop
xchg
call
nop
mov
cli
jns
mull
cmpsl
mov
addr16
test
mov
pop
stos
adc
iret
sub
push
imul
mov
mov
inc
sbb
jecxz
inc
movsl
adc
fstl
add
mov
mov
pop
mov
std
outsl
sbb
addr16
aaa
rcrl
pop
or
and
dec
mov
rorl
fildll
xor
adc
out
lock
adc
aas
add
jo
and
into
lcall
ljmp
fcompl
jp
push
xor
aaa
inc
mov
cmp
add
sbb
icebp
add
ss
insb
out
xchg
sbb
sub
mov
outsl
pop
and
outsl
fbld
sbb
add
fistps
pop
jg
insl
mov
jecxz
xor
in
enter
pop
jns
data16
out
sub
fmuls
and
sti
mov
out
mov
sahf
imul
scas
adc
push
jl
pop
cmp
mov
shrb
adc
outsb
xorb
xor
jns,pn
push
je
ret
cmovns
imul
int3
cmp
popf
gs
xchg
add
pop
mov
add
data16
mov
inc
xchg
fisubrs
mov
cli
cmp
idivb
lret
xchg
mov
dec
xchg
aas
xor
adc
push
dec
cwtl
repz
cld
ucomiss
add
add
inc
test
out
or
aaa
dec
mov
xor
sub
in
jae
out
pop
in
iret
popa
push
ret
push
into
in
sbb
add
jo
mov
call
cmp
xor
scas
push
xor
test
push
mov
add
and
fld
fcmovnu
sbb
sar
mov
data16
add
mov
jb
cmc
sahf
add
fmull
jne
push
icebp
push
loope
pop
xchg
add
enter
xor
and
adc
push
in
stc
add
cmc
aas
or
sahf
mov
cmp
inc
iret
jg
mov
sbb
imul
cmp
dec
loopne
xchg
mov
push
push
pusha
push
scas
adc
sarb
sub
mov
cmp
add
jl
sbb
fdiv
stos
xor
cld
fcmove
dec
outsl
mul
xchg
xlat
sub
jne
inc
int3
pop
sbb
repz
lds
pop
lahf
mov
fldcw
jge
lcall
lock
mov
mov
xchg
enter
xchg
fst
jl
xchg
pop
cmp
pop
popf
leave
adc
mov
je
jnp
adc
and
jmp
mov
jl
imul
aaa
jmp
xchg
into
mov
scas
xor
shl
add
push
dec
and
pushf
xchg
sub
cmpsb
test
fidivrs
in
sbb
cmp
jl
cmpsb
jle
push
xchg
cmp
mov
xchg
xchg
idivb
pop
cmpsl
fwait
aam
jns
xor
or
cmpsl
pop
mov
addr16
stos
loop
adc
daa
cmpsl
lret
inc
fadds
xchg
fsubrl
repz
je
cmp
shll
dec
sbb
sub
sbb
fsubs
adc
popl
hlt
xor
shrl
arpl
lea
decl
inc
dec
in
add
mov
jae
ret
push
xor
jnp
pop
dec
hlt
cwtl
jge
dec
dec
push
sbb
popf
repz
xlat
lcall
dec
loop
dec
dec
movsl
shlb
lock
int3
dec
adc
inc
sub
les
dec
ficomps
mov
loopne
fistpll
in
add
pop
stos
ret
xchg
and
adc
xor
add
push
mov
rol
sub
cmpsb
cmp
dec
sub
push
mov
add
and
inc
cmp
mov
mov
addr16
sarb
repz
add
mov
mov
mov
iret
jmp
jo
push
dec
inc
popf
add
sub
push
fiadds
push
lahf
gs
enter
outsb
lcall
jno
adc
outsb
stc
insl
xchg
pop
add
in
mov
push
xor
movsl
mov
sti
xchg
adc
mov
in
ds
sub
test
jmp
arpl
scas
adc
pop
xor
imul
fstpl
jge
scas
lock
sbb
scas
add
xor
and
orl
notb
xchg
pop
out
cmp
not
sbb
pop
cmp
mov
lds
pop
loopne
repz
add
cmp
enter
jnp
test
sub
gs
sbb
adc
syscall
loop
jne
mov
xchg
xchg
sub
jmp
add
cltd
scas
jb
adc
xchg
scas
push
xlat
mov
dec
repnz
popf
cmpsl
push
inc
cmp
sub
jp
cmpsl
xor
imull
mov
add
adc
mov
in
cli
test
or
add
xor
push
pop
sbb
cmp
pusha
stos
in
outsl
icebp
xchg
cld
insb
int
out
insb
mov
jb
and
add
sti
cmpsl
inc
lods
mov
and
xchg
daa
dec
and
adc
rolb
subb
cmp
in
xor
and
in
fldl
mov
mov
inc
mov
jmp
sbb
inc
push
lds
or
popf
push
sti
lret
popa
pop
cmp
dec
in
xor
add
into
push
mov
push
add
push
xchg
add
movsl
cli
adc
scas
jno
add
incb
fildl
mov
xchg
repz
shrl
jbe
jo
sub
jp
mov
jb
inc
insl
dec
popa
test
pop
pop
mov
mov
xchg
push
jo
xor
sbb
out
insl
pop
cmp
dec
loop
outsb
or
inc
bnd
fidivl
dec
mov
adc
add
test
popa
mov
adc
ficompl
push
push
sti
or
add
mov
fcom
jnp
test
into
ss
jno
sbb
dec
push
adc
mov
mov
dec
add
xchg
pop
mov
push
iret
cmp
sub
jle
mov
or
enter
xchg
fsubr
cmp
and
add
push
push
jno
xor
sbb
out
pop
fsts
and
cltd
ljmp
cs
push
cmpsl
mov
lock
and
mov
cmp
lcall
mull
xor
jg
mov
stos
loope
addr16
mov
push
inc
ja
adc
inc
jne
out
xchg
std
sub
add
es
jb
and
push
xchg
adc
mov
cmp
dec
jae
dec
mov
xor
xchg
mov
cmp
loop
adc
sbb
inc
push
and
inc
out
mov
dec
sub
dec
sub
fwait
loope
adc
and
and
test
sub
lahf
ret
mov
xchg
adc
mov
mov
into
das
aas
add
jl
rcrl
fistpl
pop
dec
ret
mov
movsl
cmp
scas
mov
jnp
xchg
jmp
ret
scas
loopne
fld
mov
stos
mov
xor
cmpsb
mov
pop
ss
scas
out
sbbb
cmpsl
push
hlt
out
add
pop
add
out
in
inc
rep
and
sarb
cmp
negl
lods
ds
cmpsb
loop
dec
push
out
mov
cwtl
repnz
mov
push
adc
dec
mul
pop
rcrb
sahf
add
std
or
test
push
cld
jl
es
andps
xor
dec
int
cmpsl
dec
ss
stos
xor
out
fidivrs
or
lods
lods
adc
inc
ja
jnp
pusha
push
xchg
cmp
sbb
out
sar
xlat
imul
or
jnp
push
jge
jb
repz
mov
loopne
inc
bound
xchg
popf
sti
adc
aaa
imul
add
or
push
mov
jbe
push
insb
leave
fdivl
inc
test
inc
iret
xor
inc
dec
jne
dec
or
mov
and
insl
hlt
mov
sub
xchg
push
xchg
lcall
push
hlt
jns
jo
stos
int3
lret
jb
out
pop
xchg
add
das
or
subb
subl
addr16
cmpb
mov
lods
lret
xchg
in
ret
int3
push
add
pop
dec
mov
dec
add
adc
imul
fmul
outsl
adc
test
mov
mov
sub
add
push
pop
ja
mov
ds
fst
scas
xchg
sbb
rcrb
mov
mov
insl
out
pop
push
loop
lods
xchg
std
repz
repz
in
lret
mov
repnz
fisttpl
adc
cld
and
es
shrl
xchg
jno
mov
add
pusha
adc
dec
ret
pop
rcll
sub
repnz
xor
sti
movsb
lock
inc
test
mov
lock
inc
shlb
pop
inc
jns
in
test
xor
mov
sub
inc
aam
aas
clc
ror
push
pop
repz
mov
inc
add
nop
loopne
pop
outsb
fstl
iret
lahf
xor
cmp
mull
xor
inc
dec
add
push
xchg
test
ljmp
and
orb
or
push
imul
mov
shl
inc
mov
fucom
jno
ljmp
adc
lahf
sbb
mov
dec
fldt
inc
out
add
push
push
addr16
pop
dec
idiv
jg
addr16
fs
and
push
or
jo
lahf
testl
add
addr16
xor
cmp
jmp
dec
rcll
cld
daa
arpl
xor
mov
cld
test
out
lods
xchg
fwait
pop
dec
mov
mov
fimull
push
loop
test
inc
dec
stos
mov
cli
fsubrl
mov
add
cmp
test
adc
orl
sbb
les
lret
inc
in
add
shrb
fstl
adc
out
or
imul
add
inc
sub
hlt
mov
sub
cmp
pop
jo
push
fsubr
adc
js
inc
repz
jns
lods
adc
lret
fistpl
push
sbb
xchg
and
and
cltd
loop
add
jbe
mov
ffree
test
add
add
jp
push
int
jnp
ffree
sub
xor
lret
cmp
inc
push
dec
adc
sbb
cmp
sub
mov
mov
jo
lcall
sbb
inc
or
mov
fldl
add
popa
jns
adc
stos
cmp
push
std
mov
into
sub
icebp
jne
in
adc
adc
push
sub
mov
and
rolb
cmpsl
cld
sub
test
jmp
add
fs
mov
imul
adc
mov
xor
in
movsl
popa
push
adc
loopne
pop
jb
das
int3
jno
loopne
hlt
pusha
jmp
push
fadds
mov
into
lret
enter
or
xchg
decl
in
sti
daa
adc
pop
imul
mov
and
cmp
xchg
inc
jo
pushf
out
mov
xor
push
insl
jbe
in
fs
and
mov
push
pusha
add
out
xlat
dec
lds
mov
divl
xor
sbb
mov
aaa
btr
ss
pop
enter
sbb
insl
and
test
cmpl
int3
xchg
ret
decb
adc
std
adc
or
jecxz
add
fisubrs
dec
sbb
dec
and
dec
test
xchg
cmp
add
add
in
pop
sbb
cmc
jae
ds
out
mov
sbb
mov
jecxz,pn
lahf
loope
push
fwait
aaa
shll
imul
ret
cmp
out
dec
jno
sub
jg
js
mov
xor
push
xchg
hlt
sub
mov
push
sbb
or
ljmp
add
ss
push
jecxz
dec
repz
mov
popf
push
loopne
pop
adc
leave
mov
inc
movsb
cmc
pusha
iret
mov
mov
lret
std
xor
inc
dec
out
cmp
cmp
cmpsb
imul
xor
xchg
push
add
aad
mov
sub
loopne
fstps
ljmp
pop
repz
cld
fistpll
aad
pop
jmp
add
test
sub
dec
jb
push
dec
lods
and
mov
push
mov
cmpsl
xor
mov
inc
cmpsb
arpl
lea
cld
outsl
jge
adc
sahf
rcl
lret
sbb
jno
pop
jnp
pop
push
test
lds
ja,pn
pop
or
and
fstpl
xchg
lcall
fstl
inc
add
jnp
pop
push
push
mov
mov
dec
nop
aam
add
loope
xchg
sahf
imul
loop
mov
inc
pop
test
push
leave
push
nop
imul
popa
je
fistpl
jmp
cli
lock
dec
sub
or
push
sub
push
push
shrl
cmc
inc
arpl
shrl
fdivr
out
and
dec
mov
loopne
mov
jmp
pop
cld
cmp
fwait
jle
jae
dec
add
jp
xchg
add
add
push
adc
or
call
aad
mov
pminsw
sbb
push
ja
popa
add
iret
push
mov
jno
dec
rorl
sub
push
filds
mov
pop
in
cmp
or
mov
mov
push
jle
dec
mov
or
sub
push
sub
iret
mov
insb
add
push
nop
ljmp
ss
test
cli
scas
mov
xchg
add
add
push
cmp
call
sbb
ret
ja
je
imul
shr
fwait
xchg
mov
jno
add
arpl
push
cli
loopne
test
jl
xor
lret
cli
orl
out
scas
cmpsb
cmpsb
xor
pop
roll
mov
ja
clc
sub
setno
dec
mov
fwait
adc
cmp
ds
shll
add
add
lods
push
sbb
mov
xchg
inc
es
lock
int3
cmp
adc
fisttpl
lcall
jne
sbb
mov
lods
mov
popf
mov
cmc
or
xor
cmpsb
adcl
adc
pop
mov
mov
sahf
mov
leave
push
sbb
hlt
stos
pusha
idivb
add
jl
or
push
inc
push
sub
mov
inc
sarl
sub
push
cmc
push
mov
imul
jp
mov
lcall
mov
outsb
stos
ljmp
mov
inc
rcl
xchg
dec
imul
sub
fcmovnbe
insl
push
dec
inc
adc
push
repnz
and
add
aam
jmp
cli
rcr
fiadds
add
lock
sahf
xor
mov
mov
push
popa
push
push
faddl
mov
mov
inc
lods
cli
movsb
sub
popf
mov
mov
xor
pop
mov
imul
adc
ret
xchg
add
sub
mov
inc
cltd
adc
scas
pop
dec
sbb
xorl
sahf
adc
arpl
mov
jns
stos
push
xchg
add
mov
sbb
inc
inc
cmp
gs
xor
xchg
fbstp
xchg
mov
mov
jns
aam
test
add
mov
fmuls
inc
test
cwtl
loop
pop
jp
js
jmp
dec
clc
repz
sahf
mov
les
cwtl
mov
sbb
jg
in
mov
pushf
leave
cltd
out
mov
js
inc
and
aas
lcall
pop
mov
jno
gs
cmp
test
dec
pop
xchg
test
mov
sbb
jp
mov
cwtl
mov
cwtl
ret
jns
cmp
xor
and
cmp
mov
test
mov
xchg
in
and
negb
xchg
repz
cmp
ret
xor
cltd
lods
stc
xchg
and
inc
jecxz
inc
sub
sub
rcll
data16
jb
sahf
data16
add
scas
pop
repnz
daa
mov
cmp
sti
insb
in
dec
out
sub
inc
dec
data16
fisttps
jl
rorl
repnz
inc
call
push
in
xchg
inc
insb
lcall
std
jle
push
or
cmp
cmc
fcomps
mov
jmp
jo
push
mov
adc
xor
lret
test
add
dec
fwait
aad
mov
lods
shll
enter
jp
mov
popa
out
push
leave
lods
jle
cmp
push
xlat
lahf
syscall
pop
js
xor
inc
imull
clc
mov
push
push
out
movsb
xor
in
clc
mov
fsubp
ret
rcrb
leave
lock
lar
cmpsb
ss
les
jne
iret
je
cs
sbb
setns
cmc
cli
insl
mov
cwtl
push
arpl
jnp
lret
outsb
mov
add
add
add
shl
addr16
cltd
fiaddl
mov
in
and
pop
pop
stos
into
rcll
lds
dec
xor
or
jge
gs
dec
inc
aaa
cli
inc
jl
push
sbb
sti
scas
cmp
orl
daa
outsl
out
or
push
hlt
lahf
shrb
pop
push
push
pusha
mov
sub
decb
popf
fidivl
or
add
repnz
loopne
add
mov
inc
mov
push
in
or
inc
imul
sti
sub
mov
xchg
mov
mov
pop
bound
popa
js
fistpll
mov
scas
pop
mov
ror
lods
sbb
jg
pop
cld
jle,pt
mov
in
mov
adc
mov
lret
xor
adc
mov
pop
xchg
mov
mov
xchg
adc
test
inc
jecxz
ret
add
add
jb
imul
gs
push
int3
outsl
arpl
mov
and
sbb
adc
sub
int3
into
sub
pop
sbb
stos
inc
cmpsl
ja
dec
jb
shll
mov
test
stos
add
adc
test
insb
sbb
repnz
jl
lds
or
fcmovnu
fwait
cmpsl
dec
lods
mov
gs
movsb
push
dec
lcall
sub
xchg
add
mov
mov
mov
out
jg
push
pushf
xchg
movsl
cmp
mov
and
inc
