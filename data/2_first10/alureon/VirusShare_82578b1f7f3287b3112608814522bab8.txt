push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
subl
add
cmp
jb
pop
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
lea
test
jne
pop
mov
ret
xor
ret
push
mov
add
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
add
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
dec
jne
mov
push
push
pushl
push
call
test
pop
je
mov
mov
mov
call
mov
pop
pop
leave
ret
xor
jmp
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
lea
test
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
mov
mov
add
sub
push
xor
cmp
push
push
je
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
movb
movb
movb
mov
call
cmp
pop
je
xor
jmp
push
push
mov
call
test
je
push
push
mov
call
test
je
mov
call
test
je
push
push
push
mov
call
test
je
push
push
mov
call
push
mov
call
cmp
je
mov
lods
lea
call
push
push
pushl
mov
push
call
mov
test
je
mov
mov
mov
call
pushl
pushl
pushl
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
mov
sub
xor
cmp
mov
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
add
mov
push
push
push
mov
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
add
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
mov
call
test
je
mov
push
call
test
je
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
add
mov
push
lea
push
call
movzwl
xor
test
mov
jbe
mov
mov
addl
addl
push
mov
pop
rep
mov
add
add
add
mov
movzwl
inc
cmp
jb
push
push
pushl
mov
call
pushl
mov
pushl
pushl
call
pop
pop
pop
leave
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
sub
sub
mov
andl
mov
mov
push
shr
push
and
add
push
lea
lea
pop
mov
mov
call
mov
mov
mov
mov
sub
sub
sub
mov
lods
xor
stos
sub
add
add
add
sub
add
rol
dec
jne
mov
sub
add
mov
imul
add
mov
neg
mov
add
imul
add
mov
add
push
push
add
add
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
call
mov
add
mov
add
decl
mov
jne
addl
addl
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
sub
sub
sub
add
rol
push
add
pop
jne
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
add
add
cmp
jb
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
movzbl
imul
xor
sub
decl
jne
ret
push
mov
push
push
push
xor
push
mov
call
mov
jmp
mov
movzwl
imul
add
mov
add
cmp
jne
testl
je
push
push
mov
mov
mov
add
add
xor
xor
mov
add
sub
and
mov
add
sub
pop
pop
mov
pop
leave
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
push
mov
add
sub
mov
add
mov
push
xor
cmp
mov
je
add
add
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
sub
add
cmpl
jne
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
sub
add
push
lea
push
mov
mov
mov
mov
rep
push
mov
push
pushl
mov
push
call
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
mov
mov
mov
movb
call
mov
mov
mov
mov
mov
sub
add
lods
sub
cmp
sub
mov
xor
mov
imul
sub
cmp
add
stos
rol
sub
dec
jne
pushl
mov
call
cmp
jne
push
push
push
push
mov
call
test
mov
je
mov
mov
mov
sub
subb
sub
mov
lods
xor
stos
sub
add
sub
add
sub
add
rol
push
add
pop
jne
pushl
mov
push
pushl
call
mov
mov
call
push
push
pushl
mov
call
xor
push
add
pop
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
sub
push
mov
mov
add
mov
test
jne
inc
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
xor
mov
mov
scas
je
inc
jmp
mov
mov
pop
leave
ret
dec
inc
add
inc
and
add
lcall
dec
mov
fsubrp
jb
xchg
jae
sahf
xorb
mov
lock
in
out
cwtl
jne
dec
inc
in
push
mov
mov
sbb
mov
xchg
imul
inc
and
jmp
xchg
cs
cmp
push
int3
or
push
daa
aam
pop
push
jge
outsb
adc
add
mov
scas
sub
pop
cmp
pusha
cmp
scas
scas
push
push
mov
or
xchg
inc
mov
and
in
mov
aam
sub
movsb
push
cmp
dec
mov
std
or
shrl
or
cmp
inc
pop
mov
push
mov
mov
cmp
jecxz
movsb
cld
sahf
fwait
test
sbb
in
aas
mov
leave
lcall
mov
movsl
adc
mov
mov
cmp
gs
outsb
xchg
ss
sahf
stos
icebp
sarb
push
lahf
test
repnz
ss
sub
pop
inc
out
push
loopne
je
scas
push
in
mov
pop
lcall
rclb
sub
cmpb
push
push
xor
and
add
adc
sahf
adc
mul
mov
neg
or
add
cld
pop
and
movsl
inc
add
push
lock
cmp
jge
jmp
fisttpll
sub
cmpxchg
sub
fisttpll
loope
stc
sar
xchg
and
sti
lods
xchg
add
test
mov
cmp
loop
push
and
pop
call
or
xor
xor
test
repz
xlat
jmp
fdivl
dec
sbbb
imul
jp
mov
push
jle
jnp
lods
cmc
jmp
or
repnz
xor
jecxz
jno
orl
dec
and
in
fcomps
data16
das
adc
pop
add
dec
lret
xchg
add
mov
stc
in
inc
xlat
add
fidivl
inc
jmp
popf
cmp
mov
push
xchg
mov
lock
hlt
fwait
push
enter
es
sahf
cmp
lret
pop
out
cmc
pminub
add
fucom
xchg
pop
in
mov
addb
test
inc
and
push
add
into
push
mov
push
sbb
cmp
pop
push
pop
or
push
insb
into
gs
xorl
cwtl
bswap
clc
push
mov
faddl
push
fbstp
jbe
mov
sahf
out
fdivs
cmpsl
mov
out
and
inc
pop
sbb
and
addr16
mov
add
arpl
mov
jge
and
sti
stc
push
fistps
pop
xchg
lea
push
lcall
mov
lds
push
xchg
cmp
xchg
mov
popa
loope
test
xor
mov
aam
movsl
arpl
popa
or
cmp
or
pop
push
ret
jb
out
push
outsl
pop
hlt
pop
xor
mov
xor
jmp
adc
sub
cmp
cmpsl
stos
sbb
xchg
xor
insb
out
aad
adc
fs
ss
push
stc
test
sbb
dec
andb
push
push
shrl
mov
call
cmp
dec
push
out
cmp
and
pop
fistpl
neg
xor
cmp
stos
pop
movsl
or
jo
pop
imul
pushl
in
addl
mov
and
scas
sub
xchg
dec
mov
fmul
push
jecxz
push
sbb
sub
adc
lock
mov
push
pop
xor
ret
es
mov
inc
cmp
es
sub
mov
pop
push
push
es
add
add
fisubrl
jns
xor
sbb
xchg
cmpsb
stos
jbe
frstor
push
scas
add
fadd
ret
jbe
out
aaa
stc
mov
sub
fs
cmpsl
mov
ret
mov
shl
cli
jmp
int
cmp
mov
out
cmp
inc
fsubrp
rorl
xchg
xor
sub
jb
out
iret
sbbl
sub
leave
and
les
push
mov
push
xor
popa
inc
test
scas
jbe
sub
adc
popa
ds
cwtl
sbb
pusha
inc
movsb
mov
cmp
or
fcmovbe
ss
stc
push
inc
xor
and
xor
xchg
aad
test
rolb
mov
mov
xor
jo
aas
sbb
pop
out
daa
cld
mov
std
and
push
lahf
add
jbe
adc
mov
nop
sub
dec
imul
push
dec
pop
mov
jnp
adc
int
inc
popa
gs
adc
movsl
xor
rclb
or
test
cli
pop
inc
int3
push
mov
cmp
sub
mov
sub
lods
adc
ss
lods
data16
mov
adc
lock
subl
cmpsl
xchg
add
dec
loop
sbb
leave
inc
pop
pop
and
push
dec
hlt
test
add
xor
sbbl
aas
packuswb
and
test
adc
and
xchg
in
cmpsl
out
sti
jg
sahf
imul
rorb
movsb
mov
xor
push
jmp
hlt
jmp
sub
sub
fnstenv
aad
cltd
xlat
xchg
sbb
mov
repz
lock
pop
ljmp
jge
shll
or
jae
push
imul
push
test
dec
shr
mov
cltd
cmp
push
movsl
mov
sbb
inc
aaa
int
movsb
ja
adc
divl
int3
arpl
hlt
lods
gs
mov
cmpsb
xorl
test
mov
es
or
imul
lret
out
es
in
lock
adc
mov
stos
jle
aad
mov
lret
cmp
xor
fists
adc
in
mov
push
cmpsb
xor
neg
das
data16
ljmp
cmpsl
adc
in
outsb
enter
pop
or
outsb
movsl
jae
pop
pop
xor
push
insb
mov
leave
shrb
xchg
cwtl
add
int
inc
les
rclb
std
cli
out
xchg
shl
icebp
lcall
decb
test
je
xchg
jne
mov
mov
outsl
push
lret
mov
mov
add
pop
mov
jns
sbbl
ljmp
lds
or
add
negb
add
outsb
andb
mov
xor
jl
cli
push
or
cld
push
loop
in
iret
je
lret
xor
dec
in
movsb
mov
mov
js
fmull
xchg
sub
frstor
xchg
inc
dec
inc
movsl
dec
adc
stos
and
testl
add
out
les
aaa
enter
in
inc
stos
int3
inc
js
test
lahf
arpl
xor
sbb
mov
or
jl
xor
push
movsb
test
rcr
push
mov
lds
sbb
aam
push
cmpsb
sbb
sub
add
jo
xchg
out
mov
mov
mov
inc
add
jbe
fwait
fwait
pop
cmp
sbb
iret
pop
je
hlt
shlb
dec
adc
xchg
mov
jmp
xchg
pushf
ljmp
cmp
adc
mov
int3
lods
sbb
aaa
into
mov
and
mov
xchg
add
and
loope
mov
mov
imul
out
inc
jmp
scas
push
lahf
aaa
sub
cmp
mov
or
cwtl
shl
cmc
inc
cld
pop
out
test
mov
adc
adc
std
cli
int3
sub
mov
out
jle
inc
pop
mov
ror
cmp
sti
jns
shrb
push
jecxz
sahf
push
mov
fldt
cltd
cmpsl
hlt
dec
jne
pushf
pop
andl
js
mov
inc
cltd
mulb
jae
and
add
mov
arpl
add
mov
in
dec
out
add
out
xchg
dec
xor
cmpsb
outsb
jb
inc
test
pop
mov
sub
mov
mov
shlb
cmp
push
mov
dec
ja
sub
data16
movsb
pushf
arpl
and
gs
mov
fbstp
sbb
imul
mov
adc
adc
push
or
dec
pop
lret
in
lea
leave
mov
adc
in
or
mov
inc
aad
pop
rolb
scas
or
adc
enter
cli
sti
mov
inc
sub
dec
inc
jns
lahf
into
dec
adc
and
jl
ret
push
rcll
scas
pop
int3
inc
das
xor
adc
imul
lea
ss
lods
jns
es
into
je
xchg
xor
mov
shrb
mov
je
xlat
loop
aas
test
insl
fwait
pop
jge
ljmp
ja
inc
fidivs
and
xchg
in
pop
int
push
dec
ret
loop
jl
cmp
push
fimull
in
ljmp
sub
jno
dec
lret
mov
jecxz
pusha
repz
xor
inc
xor
and
inc
fisubrs
sub
sti
xchg
in
mov
cmp
mov
mov
xchg
xchg
pop
lods
jnp
cwtl
adc
test
mov
push
and
xor
xchg
test
mov
sbb
lahf
push
mov
les
and
pop
sahf
mov
scas
and
jne
test
pop
in
aad
pop
stos
negb
push
mov
lods
jmp
test
push
js
or
mov
sbb
and
loopne
fcoml
push
shrl
mov
mov
in
dec
and
inc
pop
cmp
mov
fs
shl
es
and
and
scas
enter
inc
cmc
dec
stos
adc
stc
mov
push
push
notl
sbb
out
dec
fadd
pop
ja
sti
push
out
sbb
inc
sbb
test
std
mov
push
mov
movsb
or
dec
dec
dec
push
jle
xor
cmpsb
pop
dec
sti
inc
in
mov
loope
in
call
outsb
inc
mov
mov
in
jp
add
fisubs
dec
jnp
jge
call
sbb
lods
xchg
mov
cmp
xchg
add
and
in
scas
and
mov
xor
aam
xor
mov
cmp
inc
and
pusha
cltd
cmp
movsb
out
pop
ljmp
and
xor
cltd
add
or
das
call
pop
inc
lret
subb
scas
jl
mov
or
stos
ljmp
mov
mov
int
cli
pop
dec
inc
fmul
mov
dec
xor
sub
fstps
ja
insl
nop
ja
or
mov
adc
lcall
sarb
mov
andl
into
ljmp
ja
mov
add
bound
popf
out
ljmp
add
dec
das
jge
push
push
cmp
lret
movsl
jp
out
loope
pop
cmp
dec
repnz
jle
stos
sbb
insb
dec
jno
movsb
push
and
loope
jae
sbb
imul
in
mov
lret
sbb
in
nop
xchg
dec
xchg
repnz
mov
out
mov
xor
incb
icebp
cmpsl
mov
mov
sbb
jo
cmpsb
nop
xchg
iret
imul
scas
ret
xor
je
jns
leave
mov
mov
push
xor
shll
movsl
pusha
or
mov
das
fnstsw
push
cmpsb
mov
aad
mov
jle
mov
repz
xor
inc
mov
or
ret
push
sbb
sahf
mov
sub
mov
mov
mov
lret
dec
lcall
mov
mov
in
popa
in
mov
mov
pop
fwait
push
popa
mov
loopne
int
dec
dec
daa
inc
outsb
fdivrl
xchg
cmpsb
cmpb
jbe
cmp
add
mov
mov
jg
in
push
leave
hlt
mov
mov
add
gs
jae
jmp
mov
das
xchg
cld
mov
popa
das
mov
inc
dec
movsl
shll
addl
mov
cmpsl
lods
mov
in
mov
cmc
fiadds
fistpl
sbb
mov
push
sti
js
std
call
pop
mov
test
adc
fsub
dec
ror
nop
pop
cmpsl
mov
sbb
sbb
mov
lahf
maskmovq
mull
shll
test
mov
cmpsl
add
testb
add
fisubs
jno
mov
dec
rcll
add
aam
in
enter
lret
repnz
mov
lret
dec
js
mov
mov
leave
inc
es
adc
push
out
dec
and
ret
movsb
lods
inc
mov
fists
loope
adc
aas
pop
lret
movups
subb
ja
ja
push
roll
rcr
dec
mov
inc
imul
les
imul
aad
dec
cmovo
ss
mov
add
insb
iret
add
fsubrp
sub
cmpb
dec
mov
jecxz
rol
and
sub
pop
dec
rcrb
sbb
scas
movsl
jle
sub
scas
mov
popf
arpl
inc
into
or
loop
and
lret
outsb
xchg
mov
mov
aas
adc
mov
dec
push
mov
gs
fbstp
pop
inc
push
psrld
js
call
cmpsb
pop
mov
push
fyl2x
sbb
out
dec
inc
mov
cli
xchg
aaa
gs
cmp
and
push
inc
mov
int3
icebp
mov
fiadds
xchg
jg
jmp
cmpsl
out
fstpt
inc
xchg
cmp
xchg
pop
xchg
lahf
addr16
push
daa
mov
roll
mov
jb
inc
inc
popa
arpl
sar
pop
clc
fdivrs
pop
dec
imul
test
mov
and
fcoml
or
cltd
mov
xchg
inc
xchg
pop
in
or
dec
push
dec
aam
dec
pusha
xchg
arpl
cltd
sub
imul
outsb
insb
inc
jg
dec
mov
jnp
push
push
inc
ja
and
pop
jnp
dec
and
test
adc
out
mov
mov
stc
mov
test
enter
and
dec
pop
xor
cmp
repz
cmp
inc
dec
lahf
ss
testb
xchg
push
pop
or
jnp
lret
ror
cmpsb
xchg
mov
jle
stos
push
add
mov
add
lahf
mov
addr16
push
dec
cmp
in
add
xor
fwait
add
int3
fwait
adc
xchg
repnz
nop
xchg
popw
popf
ljmp
push
imul
sbb
push
dec
push
sub
cmpsl
hlt
or
jns
test
dec
pop
out
xor
xlat
sbbb
mov
sti
adc
mov
shll
or
sub
add
add
ret
or
mov
dec
jl
fadds
push
mulb
mov
jmp
rclb
test
sbb
mov
pusha
mov
fcomps
push
int3
pop
cmp
jmp
nop
cmp
rolb
ljmp
and
cmp
or
bsr
xchg
inc
hlt
gs
mov
shrl
mov
mov
jle
push
pop
pop
adcb
jmp
jle
aas
sub
xchg
hlt
out
shll
sbb
sbb
cmp
cmp
call
mov
imul
popf
lret
movsb
dec
insl
cltd
jb
nop
sbb
sti
push
pusha
loop
das
movsl
test
shlb
inc
jmp
push
ss
pop
das
xchg
mov
sahf
ret
mov
pushf
enter
pop
pop
sbb
in
shrl
stc
xchg
adc
mov
js
and
lcall
cltd
ret
xchg
inc
mov
inc
int
mov
into
fsubl
adc
cmpsl
lds
jl
sahf
cmp
in
testl
xchg
adc
lret
sbb
mov
inc
into
cltd
loopne
dec
push
test
inc
xlat
push
jns
jne
xchg
cmpsl
inc
ss
mov
cmp
out
in
mov
pop
xchg
shll
push
imul
push
leave
mov
int3
cmp
lods
xorb
stos
jne
cwtl
stos
out
push
jo
xchg
fs
inc
push
shll
jnp
xorb
dec
ret
or
jge
aaa
shrl
dec
arpl
pop
dec
out
dec
mov
add
stos
add
xchg
and
jns
cmpsb
mov
je
jp
movb
shl
dec
dec
sbb
jo
sub
movsl
and
mov
rclb
loop
pop
push
jno
jb
push
push
xor
test
divb
pop
sahf
std
aam
orl
jg
sahf
jb
dec
xchg
ret
adc
adc
sahf
jo
and
stos
or
int3
mov
dec
dec
inc
lret
or
loop
sub
adc
lods
adc
inc
stos
mov
imul
movsl
jge
cs
and
aam
push
jmp
push
sbb
or
rcll
push
jmp
mov
test
pop
fwait
pusha
faddl
aam
push
cmp
push
or
test
pop
push
scas
inc
jp
aas
mov
insl
mov
add
imul
lds
and
add
jo
lahf
push
pop
int
xchg
enter
sbb
into
shr
or
jo
push
in
mov
inc
scas
mov
fs
sub
in
lahf
faddl
push
xor
xor
fnstcw
lret
pop
aad
pop
ret
loope
test
add
stos
stc
mov
jl
dec
lret
inc
lret
xchg
add
and
xchg
mov
ja
movsb
ds
push
push
gs
push
call
push
in
rcr
dec
push
enter
xor
dec
pop
push
out
insb
mov
jl
pusha
xor
cld
push
stc
xchg
lcall
and
es
or
mov
sub
lock
les
xor
pop
incb
sub
scas
ljmp
or
jae
xchg
add
and
adc
mov
sub
cmp
orb
cmpsb
popf
and
jge
pop
les
es
daa
adc
jg
popf
insl
adc
pop
jnp
add
pusha
add
jno
lods
xor
ljmp
stos
mov
xor
ss
lcall
pop
shl
cld
pop
lock
out
fildl
xchg
or
jae
or
iret
or
jnp
shr
xchg
mov
cld
jl
dec
mov
je
loopne
push
mov
adc
dec
outsl
jae
fcmovnbe
push
inc
cmp
and
jbe
pop
add
aam
cmpb
mov
and
arpl
aas
mov
push
inc
jg
fld
dec
jb
cmp
mov
imull
xchg
lret
popa
xchg
push
sub
das
mov
cmp
mov
out
xor
gs
and
mov
inc
lods
leave
xor
inc
push
sub
js
pop
dec
mov
jmp
jns
add
sub
outsb
jno
pop
xchg
fmull
mov
lahf
es
addb
cmp
bound
andb
cmp
fistl
and
mov
add
xor
sub
cmp
test
push
imul
les
imul
ret
ret
ret
mov
fnop
mov
test
jo
cmpsl
loope
xlat
mov
jmp
adc
mov
xor
dec
sub
mov
jb
push
adc
shlb
pop
leave
or
shrl
add
lret
scas
mov
xor
dec
mov
push
and
xor
stos
fsubrl
sub
dec
xchg
mov
push
icebp
pop
jb
loope
pop
mov
mov
les
out
jle
cmp
push
mov
pop
dec
and
shll
jp
negb
roll
dec
arpl
mov
sub
jecxz,pt
insb
jb
inc
fisttpll
xor
shlb
xchg
mov
mov
nop
mov
insl
dec
stos
jb
ret
enter
xchg
add
shrb
mov
xchg
call
inc
mov
xchg
loope
iret
push
in
xchg
cli
es
pop
inc
fwait
movsb
mov
or
lock
jns
adc
test
inc
pop
je
jne
mov
rcrb
ficoms
test
dec
imul
movsl
mov
cmp
dec
jae
lret
outsb
jns
inc
push
mov
es
pop
dec
loop
and
sbb
cltd
mov
scas
rcrb
jp
dec
repz
cmp
cmp
pop
and
pop
pop
push
cmp
pop
movsb
cmpb
aaa
add
or
and
insl
movsl
test
adc
cwtl
fimuls
insl
adc
lods
pusha
inc
dec
mov
sarb
mov
and
inc
inc
or
push
xchg
mov
stos
stos
add
add
ficomps
mov
ja
dec
mov
fs
rcll
aas
inc
int3
incb
sbb
and
push
dec
add
inc
mov
push
mov
pop
int
loope
addr16
fdivrl
mov
in
gs
cmp
push
enter
stos
bound
mov
pop
cwtl
cmp
out
inc
jne
pop
call
xchg
or
or
ret
xchg
std
and
mov
imul
push
inc
scas
or
lods
push
fcompl
in
add
mov
les
dec
xlat
or
dec
xor
mov
lock
cltd
out
xchg
or
jle
sbb
test
mov
clc
mov
dec
pop
nop
mov
rcrl
fidivrl
xchg
or
and
scas
dec
cmp
js
push
gs
adc
xor
icebp
mov
out
jno
nop
out
lods
add
dec
stos
cmp
xchg
mov
mov
pusha
and
mov
or
lock
add
mov
push
jle
push
jl
fiadds
lahf
pop
std
aaa
pop
mov
mov
push
cmp
xchg
sbb
js
push
nop
dec
popa
das
dec
jne
add
mov
jnp
daa
enter
ficoms
sub
mov
push
pop
and
inc
testb
cmp
jbe
dec
mov
scas
ljmp
testl
movsb
xchg
testl
xor
mov
cmp
dec
fisttpl
lahf
fcmovb
cmp
add
add
push
inc
sub
loop
xchg
mov
sti
in
and
and
push
inc
ret
mov
jo
lahf
shll
cltd
jno
jnp
fwait
iret
lcall
cltd
mov
push
add
pop
xor
ret
pmulhw
sub
test
andl
movsb
or
std
popa
insb
imul
outsb
cmpsl
fwait
or
adc
push
jmp
cmp
scas
mulb
mov
es
sbb
insl
js
pop
mov
cmp
mov
clc
scas
insb
push
ss
jge
fiadds
jb
pop
lock
pop
fcompl
mov
xchg
cwtl
ja
pop
pop
push
pop
in
add
cmpsl
pop
pop
mov
jb
jle
jmp
enter
imull
inc
mov
out
jmp
pop
dec
arpl
xor
pop
std
daa
repnz
lret
in
shlb
dec
pusha
xchg
adc
mov
adc
popf
aam
pop
add
pop
daa
int3
fisttpl
pop
xchg
pushf
push
sti
rcrl
xchg
lahf
loop
xchg
out
insb
int3
pop
std
repnz
xor
repz
mov
bound
xor
pop
add
fsts
mov
mov
inc
dec
mov
and
test
xchg
xchg
outsb
imul
sub
pushf
push
dec
pop
push
ja
mov
inc
cwtl
pushl
mov
add
into
cmpsl
cmp
cmp
jb
push
and
cmp
pop
imul
pop
roll
pop
fcoml
ja
mov
dec
jge
pop
add
cmc
std
adc
adc
insl
xor
dec
clc
ja
call
mov
inc
dec
pop
daa
pop
jae
xor
scas
addl
adc
mov
cs
mov
mov
aas
adc
and
dec
fidivs
dec
mov
fisubl
jmp
mov
imul
cltd
fnstenv
sarl
cmp
push
mov
lcall
inc
imul
jl
les
push
aad
mov
cmp
inc
mov
xchg
and
ljmp
or
xor
idivb
jbe
fiaddl
sub
sarl
pop
decl
aam
leave
dec
ret
in
add
adc
sbb
les
shll
xchg
xchg
in
sub
gs
add
xchg
loope
dec
mov
and
jo
xchg
mov
cltd
and
mov
dec
cmc
mov
daa
clc
pusha
add
mov
pop
or
in
bound
xor
hlt
fiaddl
adc
xchg
xchg
dec
sbb
rcrl
incb
push
ja
sub
mov
test
leave
je
in
rcrl
mov
xchg
idivl
pop
movsl
aam
xlat
out
inc
or
push
jne
mov
pop
mov
xchg
dec
xchg
push
imull
push
lods
or
testb
cmp
inc
or
scas
jmp
mov
xor
js
in
jecxz
sti
andb
mov
push
mov
icebp
cmp
add
jne
dec
or
andb
outsl
fsts
fcoml
sbb
push
jns
imul
mov
outsl
push
imul
cmp
cwtl
mov
pop
int3
jge
ffree
imul
sub
cmp
int
push
mov
cld
sub
jo
fadd
push
pop
shl
jmp
repz
jnp
and
push
xor
lods
ljmp
mov
pop
mov
push
jo
rol
inc
pop
aad
ljmp
out
push
addr16
adc
xor
loope
sbb
add
rcr
adcl
inc
inc
ja
inc
bound
inc
mov
cmp
add
out
push
loop
in
inc
jp
call
cli
jnp
add
pop
outsl
push
mov
and
mov
enter
xor
insl
push
cmp
imulb
inc
loopne
push
pop
adc
das
and
jbe
xchg
ljmp
and
xlat
inc
adc
loopne
icebp
hlt
push
in
pop
mov
jae
test
movsb
stc
pop
push
pop
in
test
ja
jle
js
imul
xchg
lahf
icebp
add
dec
xchg
xlat
add
cmp
mov
pop
mov
jg
sub
je
andl
adc
cmpsl
outsl
popf
sbb
jo
sub
lods
lret
inc
bound
sub
pop
and
cltd
pop
into
sub
ss
rorl
and
cmp
mov
pop
and
lret
add
pop
lcall
adc
pop
dec
adc
iret
scas
pushf
sub
lock
inc
dec
inc
xor
mov
xchg
stos
cmp
mov
testl
mov
adc
cmpsl
sub
and
rcrb
fnsetpm(287
jmp
sub
xchg
cmp
pop
mov
xchg
insl
pop
ret
dec
shr
pop
cld
adc
xor
imull
aad
xor
test
cld
push
fwait
dec
int
ret
cli
push
inc
and
xchg
push
push
pop
aaa
add
and
mov
jbe
adcl
out
jbe
add
div
pop
dec
jmp
xor
lods
inc
call
sbb
and
mov
stc
fldcw
fistpl
aad
movl
or
sub
loopne
fst
and
test
lcall
sbb
sbb
movsb
inc
pop
push
sar
mov
jp
add
arpl
xor
sub
adc
jns
mov
push
push
pop
out
jns
out
xlat
lret
pop
js
adc
adc
popa
push
gs
push
daa
imul
imul
nop
xchg
inc
mov
cmpl
jge
push
outsl
and
cmp
jnp
mov
stos
mul
pop
adc
sarl
mov
test
gs
bound
mov
gs
out
pop
dec
sbb
out
and
inc
js
mov
stos
adcb
gs
add
jmp
stc
adc
add
imul
arpl
popa
add
je
add
add
imul
add
imul
arpl
jb
arpl
imul
add
push
add
add
popa
add
add
outsl
add
jae
add
jne
add
arpl
add
add
gs
fs
je
outsl
data16
add
jae
outsl
add
add
add
outsb
add
add
popa
outsb
arpl
jae
outsl
add
je
add
jb
popa
add
arpl
push
add
je
data16
insb
add
add
imul
add
je
jb
add
add
add
push
outsb
popa
je
add
add
add
je
add
bound
popa
add
imul
add
jo
je
arpl
jns
add
add
arpl
je
outsl
outsb
add
data16
add
add
add
popa
add
add
imul
fs
imul
add
arpl
je
imul
jae
add
bound
popa
insb
data16
