pop
cmp
and
adc
sarl
je
imul
inc
js
lock
loop
mov
xchg
lret
cld
mov
test
mov
pop
inc
or
cld
jg
cmp
sub
leave
repnz
insl
aad
or
test
dec
push
stos
lea
jbe
xchg
outsb
fimull
movsb
sbb
jle
push
add
pop
add
bound
shl
xchg
out
sub
loope
pop
or
fndisi(8087
pop
jl
jle
dec
sbb
rcrl
add
lods
ficompl
and
push
popa
sub
mov
sbb
jmp
aaa
mov
inc
repnz
loopne
out
cmpl
repnz
and
pushl
cmc
or
pop
xchg
out
xchg
ds
in
push
ja
stos
fs
sub
aas
leave
sarl
sti
subl
mov
add
divl
es
and
or
dec
jg
jnp
push
xor
add
mov
popf
insb
loop
leave
add
imul
outsl
ret
in
decb
jmp
push
test
dec
xchg
in
mov
sub
and
testl
nop
push
inc
fcompl
xlat
dec
ja
or
sarb
filds
pusha
loop
mov
dec
addr16
adc
cs
out
jae
or
sbbb
mov
mov
xchg
rcrl
rorl
imulb
ja
and
cmp
lret
ficomps
loope
mov
ds
ja
gs
sbb
dec
stos
jl
cltd
mov
xor
aaa
jmp
sub
call
data16
not
add
stc
cmp
in
add
inc
jle
mov
decl
jl
jecxz
call
imul
add
int3
fadds
movsl
cmp
cwtl
fstl
orb
aas
cmp
xor
fsts
arpl
enter
mov
js
inc
pop
flds
lods
jne
jp
hlt
sbb
cmp
mov
jo
pop
inc
mov
inc
xor
divl
adc
ja
mov
cmp
pop
fldl
push
gs
jg
push
pop
in
push
jbe
jno
rol
daa
cltd
or
sahf
out
lock
hlt
out
movsb
data16
out
popa
add
dec
sub
ds
xor
and
incb
mov
lea
bound
xor
sub
or
loop
mov
pop
test
jo
mov
xlat
xlat
cmp
jg
outsl
mov
xor
push
js,pn
push
push
iret
stos
sbb
jnp
xchg
sub
sbb
lret
add
and
xor
daa
loop
hlt
imul
ret
mov
push
dec
jb
xor
mov
dec
lods
mov
and
std
xor
sar
adc
ljmp
dec
mov
in
inc
pop
add
dec
rorl
add
jo
test
dec
add
in
sbb
jne
inc
repnz
jp
push
push
xor
or
jge
push
jl
jbe
xchg
dec
dec
rcrb
mov
cli
sti
cmpsl
in
rclb
data16
leave
and
and
aas
xchg
aam
jae
mov
xor
movsb
xlat
push
fwait
sub
mov
xor
rcll
sbb
lcall
mov
jb
sbbb
ficompl
icebp
lahf
mov
mov
pop
cvtps2pi
jg
pop
push
pextrw
sarb
call
cmp
leave
mov
testb
test
jbe
addr16
leave
mov
lahf
jecxz
push
clc
or
dec
ret
mov
add
movsb
adc
sbb
jge
mov
out
add
ja
xlat
out
mov
fists
test
test
clc
setbe
mov
arpl
loop
nop
xchg
sbb
jmp
or
pushf
pop
leave
aas
lods
cmpl
in
rcrb
sahf
mov
jne
test
bt
xchg
jne
xchg
jmp
sub
mov
test
pop
gs
pop
icebp
cmp
and
lahf
mov
js
mov
iret
jbe
push
mov
add
mov
call
add
movswl
call
imul
push
sub
call
lea
inc
inc
dec
dec
dec
call
dec
inc
sub
inc
add
inc
mov
lea
lea
dec
inc
sub
inc
add
call
or
add
add
dec
call
inc
mov
call
or
imul
dec
dec
dec
inc
add
or
pop
inc
imul
add
xor
pop
and
lea
pop
mov
add
add
imul
pop
inc
mov
movzbl
movzwl
dec
mov
dec
movswl
pop
mov
xor
pop
inc
dec
mov
dec
inc
call
lea
imul
dec
imul
ret
mov
and
push
inc
mov
push
or
xor
push
and
add
push
sub
push
inc
inc
mov
inc
push
mov
ret
push
inc
add
add
inc
dec
lea
sub
push
lea
add
dec
call
pop
ret
jmp
lea
mov
lea
mov
movzbl
mov
imul
add
lea
dec
and
and
movsbl
movzbl
mov
mov
xchg
add
movzwl
mov
dec
xor
dec
dec
or
add
inc
inc
imul
dec
jne
and
mov
mov
add
pop
dec
imul
pop
lea
add
pop
and
mov
sub
movsbl
inc
dec
dec
add
and
inc
inc
add
ret
push
lea
sub
and
xor
mov
imul
lea
mov
push
push
push
push
mov
inc
lea
push
lea
xor
mov
xor
mov
mov
dec
mov
mov
mov
mov
push
sub
lea
xor
lea
xor
push
add
mov
push
lea
mov
pushl
inc
call
mov
add
mov
dec
inc
mov
or
inc
mov
pop
ret
sub
mov
lea
dec
lea
inc
cmp
jb
or
xor
and
mov
mov
sub
imul
mov
add
inc
inc
sub
dec
mov
mov
dec
sub
mov
dec
cmp
jb
mov
pop
sub
and
dec
sub
dec
lea
or
dec
mov
imul
dec
dec
xor
dec
xor
dec
dec
mov
mov
add
test
jbe
inc
mov
mov
xor
lea
inc
dec
inc
add
lea
or
sub
and
dec
add
mov
dec
mov
movzbl
inc
mov
add
lea
movsbl
and
or
mov
sub
lea
mov
inc
inc
mov
mov
movsbl
mov
lea
add
lea
xor
mov
inc
dec
jne
dec
mov
movzbl
lea
dec
mov
imul
dec
dec
movzbl
mov
inc
mov
dec
sub
sub
add
lea
dec
add
mov
mov
mov
and
test
jbe
imul
dec
mov
mov
inc
dec
lea
dec
mov
dec
sub
xor
mov
lea
movzwl
inc
dec
dec
mov
or
mov
movswl
and
lea
mov
mov
mov
dec
movzbl
dec
inc
add
dec
xor
and
dec
lea
mov
or
imul
movzbl
lea
inc
mov
mov
jmp
push
mov
mov
imul
mov
dec
add
dec
inc
mov
dec
mov
inc
imul
mov
movsbl
mov
dec
dec
mov
inc
mov
sub
dec
imul
dec
and
movzwl
lea
add
add
imul
and
inc
xor
mov
lea
imul
mov
movzwl
cmp
je
call
call
inc
dec
add
inc
xor
mov
mov
xor
movzwl
mov
add
mov
add
or
call
call
mov
ret
inc
imul
pop
imul
ret
push
lea
add
inc
mov
sub
push
add
add
push
mov
push
mov
push
mov
mov
dec
inc
lea
dec
add
mov
mov
call
mov
push
sub
push
inc
pop
inc
xor
mov
sub
mov
mov
lea
inc
inc
sub
mov
dec
je
sub
mov
dec
inc
add
movswl
mov
movswl
mov
mov
dec
inc
mov
movswl
mov
inc
dec
repnz
inc
dec
add
movzbl
jmp
dec
imul
jmp
inc
inc
mov
inc
imul
lea
lea
mov
inc
dec
movsbl
or
mov
dec
pop
pop
ret
push
add
add
dec
mov
sub
inc
dec
dec
dec
inc
imul
sub
mov
lea
mov
sub
lea
dec
dec
add
inc
add
dec
mov
mov
dec
add
pop
ret
sub
dec
mov
lea
dec
mov
dec
dec
mov
mov
inc
mov
lea
lea
xor
movzbl
or
mov
dec
mov
inc
sub
inc
and
add
mov
mov
cmp
jb
mov
push
movswl
add
push
imul
mov
push
mov
lea
xor
lea
add
xor
inc
mov
xor
imul
dec
push
inc
inc
mov
dec
dec
xor
inc
dec
mov
movsbl
mov
inc
add
movzbl
xor
dec
dec
add
mov
mov
add
inc
movzbl
inc
lea
mov
and
movzwl
add
add
inc
sub
jmp
pop
cmp
mov
xchg
cmp
push
xchg
leave
jmp
adc
mov
push
pop
insl
dec
popf
lret
xchg
jbe
lcall
jge
and
push
add
outsl
add
fs
xor
sbb
loope
cmpsb
pop
roll
jae
jge
pop
jns
mov
xchg
je
insb
lods
or
adc
aad
dec
adc
outsb
push
mov
pop
and
std
imul
mov
int3
rcrb
mov
cli
sub
icebp
jno
mov
xchg
cmc
cmp
ljmp
inc
pop
push
leave
andl
scas
sub
shlb
jmp
and
mov
call
sub
cwtl
sahf
xor
push
sbb
jge
mov
inc
inc
pushf
test
mov
jb
dec
jge
shll
js
xchg
lods
pop
mov
lods
cmp
fstpl
dec
mov
stc
jecxz
xchg
leave
aad
pmaxub
das
xor
mov
xor
inc
gs
mov
mov
and
movb
mov
jecxz
inc
sub
jbe
inc
rorb
loopne
mov
and
frstor
add
es
adc
xchg
pop
and
ret
adc
adc
jb
mov
pop
adc
cmp
cmp
mov
sbb
push
fcoml
sub
mov
xchg
adc
setge
sbb
cmovns
movsl
popf
out
popa
pop
xor
pop
adc
fwait
pushf
sbb
cmpsb
pop
insb
jno
inc
pop
cmpsl
mov
jge
cld
fiaddl
lret
cmpsl
jne
inc
pushf
jns
imul
push
pushf
xlat
loope
sbb
mov
push
jns
cmc
shrl
push
mov
push
outsl
ljmp
xor
rorl
ja
pop
cwtl
mov
js
push
push
xchg
fsubl
mov
inc
adc
mov
inc
es
sub
jne
jnp
mov
pop
test
pop
sub
sbb
cld
xor
mov
gs
push
mov
jmp
jns
pop
insb
mov
popa
xchg
cli
pop
lods
push
push
and
sbb
lret
mov
adcb
filds
xchg
adc
dec
addb
sti
push
lret
ds
pop
push
jp
mov
pusha
stc
stc
dec
mov
shll
test
mov
js
std
or
cmp
jp
jg
pop
lahf
sbb
xchg
nop
pcmpeqb
shlb
iret
dec
mov
dec
jnp
aam
mov
jp
inc
xor
in
cwtl
repz
add
and
testl
xchg
fwait
out
push
add
int
jo
mov
jnp
in
pushf
or
inc
inc
mov
fadds
xor
orb
cltd
add
bound
cmp
jo
pushf
stos
pop
mov
pusha
movsb
pusha
enter
mov
xchg
push
mov
cmc
adc
in
dec
je
daa
jae
mov
rcrb
pop
je
jns
roll
rcrb
imul
lods
mov
cmp
cmp
lods
inc
ret
xchg
pop
enter
test
mov
cmp
inc
xchg
or
sahf
mov
jl
aas
or
jb
lock
sub
mov
jmp
xchg
inc
xchg
and
jns
inc
in
jl
fwait
mov
int
or
cmp
fdivrp
or
scas
pusha
or
lds
in
stos
pop
adc
outsb
mov
mov
push
push
adc
adc
push
test
iret
inc
xchg
mov
repz
jbe
add
xor
in
insl
stos
rolb
int3
aam
dec
push
cmpsl
sbb
jg
lods
daa
pop
dec
das
mov
fs
push
lods
xor
movsl
ror
inc
in
xchg
adc
and
xor
cmpsb
or
adcb
and
fucom
add
jle
loop
lock
enterw
push
add
ficompl
pop
xorl
cmp
mov
cmpl
pushf
or
pop
adc
cmp
or
inc
mov
add
inc
jae
int3
sub
testb
ja
out
xchg
jle
lods
test
leave
dec
hlt
dec
imul
les
cltd
jne
lock
mov
call
cltd
movsl
add
push
mov
lret
inc
and
mov
sbb
adc
test
jne
dec
sbb
lret
xchg
or
jle
push
lcall
cld
sub
cmp
les
mov
mov
inc
std
pop
das
data16
imul
subl
mov
orl
movsl
imul
imul
aad
inc
shr
je
add
cmc
popa
gs
mov
mov
push
pop
cld
xor
in
lods
mov
shlb
cltd
inc
cmp
test
fbstp
jg
xor
frstor
mov
dec
frstor
aam
cmp
insb
ficomps
push
add
sti
xchg
ret
inc
xor
jne
stc
jno
push
mov
xchg
xor
pop
das
xor
ljmp
sbb
sahf
mov
mov
jae
xor
inc
scas
pop
je
jb
adc
cwtl
cltd
neg
inc
mov
xchg
pushf
mov
push
mov
pop
lcall
or
adc
pushf
xchg
pop
xor
imul
lret
cmp
stos
insb
movsl
inc
mov
inc
add
cwtl
mov
jns
repnz
sbb
mov
or
lock
test
cmc
mov
je
and
or
das
mov
cli
push
and
js
roll
stc
inc
mov
rolb
xchg
insl
add
nop
inc
jmp
cltd
push
push
xor
pop
add
sub
js
fdivs
std
test
fwait
jmp
push
cwtl
mov
adc
inc
mov
lahf
ljmp
dec
dec
lahf
icebp
cld
repz
jbe
sub
xchg
lds
fcmovnb
aas
add
adc
cwtl
nop
and
push
popf
xor
leave
add
sub
popa
shll
pop
inc
mov
lcall
or
jge
pushf
imul
imulb
mov
dec
inc
inc
ja
sub
ds
cmp
lock
ljmp
xor
push
fbld
mov
das
sarl
dec
mov
cmpsb
stos
adc
pop
push
or
fsubrp
xchg
add
mov
subl
push
ljmp
add
fucomip
cmpsb
jmp
cmp
inc
rolb
jp
adc
cwtl
sbb
dec
pop
mov
pop
out
push
imul
and
pop
cmp
push
xor
scas
push
mov
lds
cmp
sub
ds
ret
out
lcall
jnp
mov
jmp
xchg
lds
and
mov
inc
out
inc
jecxz
sbb
ss
lods
jne
push
add
outsb
add
addl
js
lds
dec
loop
jb
in
neg
fstl
movsb
ret
pop
dec
jle
fdivrs
leave
or
lods
jmp
imul
and
mov
lahf
xlat
and
shlb
insb
jge
jne
mov
cmpsb
or
mov
add
xor
xchg
sahf
dec
mov
and
mov
data16
mov
dec
xor
popa
dec
sub
loope
repz
in
xor
push
scas
jmp
dec
xchg
xchg
adc
and
movsb
fstpt
and
jge
in
shr
push
jae
fsubs
mov
test
icebp
push
enter
test
insb
rcr
aas
or
jmp
pop
aad
mov
std
and
pusha
xchg
scas
push
shr
aaa
xor
pop
mov
xchg
xchg
mov
jb
sbb
lcall
and
dec
jno
lret
dec
cmp
and
mov
jecxz
movsb
adc
xor
sub
xor
iret
mov
out
mov
pop
push
dec
sti
rcrl
test
cmp
inc
mov
inc
test
in
sti
mov
orb
xchg
mov
mov
sahf
mov
mov
and
sbb
or
mov
xchg
setae
les
aaa
daa
jle
and
pop
fidivrl
je
xchg
mov
adcb
dec
mov
cwtl
mov
sub
test
adc
mov
mov
cmpsb
mov
push
test
jb
loop
lret
adc
aad
add
enter
popf
scas
add
lock
das
out
push
orb
cli
cmpsb
out
outsl
cld
aaa
inc
dec
ss
call
stos
cmpsl
mov
insl
push
adc
pop
cs
and
mov
add
adc
mov
std
lds
lds
add
addl
adc
mov
js
sbb
fisubrs
dec
loope
and
cs
xchg
aas
mov
mov
pushl
or
push
loop
mov
nop
clc
das
repnz
xorl
mov
jmp
fnsave
adc
inc
cmp
xchg
fiaddl
adc
xor
mov
iret
mov
stos
push
lods
sub
and
pop
mov
repnz
frstor
cld
rcll
xor
mov
pop
cmp
iret
xchg
or
xor
out
js
stc
mulb
in
sti
stos
sub
cmp
dec
fdivl
ja
xor
pusha
push
fsts
and
cmp
jp
mov
in
in
outsl
pop
add
arpl
and
fnsave
mov
fwait
lds
add
xor
js
imul
lcall
je
add
ficoms
fsub
mov
adc
or
in
stos
testb
repz
movsb
test
lret
pusha
xor
mov
daa
test
push
out
sbb
xlat
mov
push
sub
xchg
adc
push
cmp
dec
sbb
jecxz
cltd
rorw
xor
xor
xchg
jo
outsl
popf
sbb
mov
pop
dec
popf
adc
scas
jo
movsb
jg
mov
arpl
pop
es
jle
fsubl
fcompl
jbe
inc
out
daa
sbb
adc
in
mov
push
push
cmpb
inc
mov
aam
adc
dec
or
shll
sti
es
insl
sub
insb
xor
mov
ror
cmc
shll
shl
in
jecxz
nop
add
mov
sbb
ja
jge
jne
scas
and
sbbl
fcoml
xchg
shl
fstps
out
dec
push
rolb
mov
jp
nop
int3
push
mov
inc
sbb
loop
cmp
leave
ja
push
repnz
sub
cld
sub
enter
cmp
push
sub
leave
dec
mov
jp
lahf
insb
insl
pop
je
mov
cmp
dec
mov
jecxz
lret
mov
add
sti
mov
loope
mov
xor
pop
mov
mov
xchg
jae
stos
loope
cmp
loope
lea
mov
sub
fcompp
loope
jge
out
sbb
xor
and
bound
dec
pop
pop
fwait
sbb
shl
and
xchg
mov
push
mov
sbb
imul
pop
shll
xchg
inc
push
outsb
xlat
leave
std
adc
fwait
adc
inc
jae
out
jl
or
rorl
imul
mov
adc
mov
and
or
add
xchg
inc
mov
sub
dec
xchg
cmc
mov
sub
add
xchg
imul
cld
push
push
mov
cs
inc
sti
shl
shlb
sahf
insl
or
dec
rorb
push
mov
aam
gs
jae
ret
scas
cld
cwtl
test
mov
lea
int
test
and
insl
loope
fisttpll
mov
cli
mov
jg
dec
add
call
fdivs
into
xor
in
mov
add
fdivl
daa
xchg
xchg
mov
and
in
add
mov
sbb
xlat
call
lcall
and
xchg
sbb
lods
out
dec
sbb
inc
push
stc
pop
mov
push
adc
clc
lret
adc
dec
add
in
xor
sahf
jne
mov
scas
gs
xchg
int3
addr16
ss
test
out
fdivs
aam
daa
xchg
lret
sbb
or
jg
mov
imul
or
cmpl
fs
cmp
adc
cmp
int3
addr16
adc
pop
pusha
test
or
repz
roll
es
push
xchg
adc
imul
cmp
adc
hlt
out
cmpsb
pop
dec
cmp
push
repnz
lock
mov
mov
push
mov
dec
xchg
xlat
movsb
mov
add
stos
aad
ss
jo
in
out
xor
movsl
in
jb
fnsave
div
pop
out
add
mov
pop
pcmpeqw
mov
xor
mov
sbbb
mov
cmpsl
imul
xchg
aas
lahf
add
aam
stos
adc
es
fnstenv
arpl
push
push
inc
in
dec
shlb
shr
mov
xor
xchg
pop
fldenv
xorl
loop
enter
jne
test
inc
dec
inc
test
divl
mov
fstps
clc
loop
rclb
xchg
movb
mov
dec
adc
clc
stos
xor
push
outsl
loope
cwtl
stc
out
jg
xchg
push
adc
mov
adc
pop
daa
xchg
push
hlt
push
or
inc
add
test
mov
pop
mov
jns
cmp
rol
xchg
mov
sub
mov
sbb
mov
pop
pushw
imul
enter
mov
leave
adc
jns
mov
test
lahf
shrb
cmp
scas
sbb
dec
out
test
mov
jae
sub
out
sbb
cwtl
sarl
mov
clc
in
aad
push
mov
shlb
push
and
daa
daa
mov
inc
cmp
mov
jns
es
int
cmp
roll
call
jbe
xchg
fbstp
xchg
cmpsl
xchg
popf
sbb
mov
scas
inc
pop
fidivrs
inc
or
mov
test
cld
call
aas
cmp
lret
add
std
daa
dec
sub
outsb
nop
repz
es
adcl
inc
jge
push
push
cld
xchg
movsl
or
jmp
popa
pop
xor
popa
dec
and
daa
pop
out
insl
enter
pop
clc
sbb
imul
in
dec
sbb
sbb
shll
pop
xorb
sub
mov
imul
adc
sahf
mov
or
addr16
insb
xor
jb
cs
stos
mov
leave
or
jo
mov
stc
sub
daa
out
pop
mov
dec
outsb
jns
mov
daa
adcb
decl
rorb
inc
xchg
icebp
cmpsb
inc
enter
adc
cld
mov
insl
out
scas
push
dec
pop
adc
test
add
lahf
fidivl
pop
shrb
scas
sbb
hlt
es
dec
jecxz
mov
test
aad
inc
push
pusha
icebp
dec
mov
add
xor
xlat
pop
dec
push
je
xchg
jle
mov
enter
test
lret
ljmp
popa
andl
xchg
outsb
mov
sbb
loope
inc
xchg
scas
cmp
and
pop
rol
jb
js
roll
mov
out
sti
push
stc
xorb
in
fcomp
mov
or
cmp
sub
jmp
xor
dec
mov
je
adc
dec
pushf
fmuls
fwait
pushf
mov
lds
add
xchg
fistl
and
jg
or
jns
rorb
mov
addr16
mov
lret
dec
xor
push
jbe
mov
sbb
cwtl
je
push
outsl
arpl
std
jg
dec
sub
pop
in
outsl
ds
cwtl
ja
sahf
mov
add
fdivrl
mov
jecxz
push
lea
lods
sub
dec
xchg
fdivrs
adc
lock
sub
add
cmp
xor
cmp
cltd
fsubs
jl
jmp
jbe
ja
add
mov
mov
jl
mov
xor
ror
out
push
mov
mov
xchg
or
inc
sub
pusha
loop
ficoml
lahf
call
dec
cmp
adc
adc
push
xor
ret
mov
jecxz
repz
bound
jbe
lea
xchg
movsb
xchg
push
sub
stc
fstl
repnz
jnp
testl
outsb
push
cmc
mov
sub
xor
pop
and
fmull
and
fs
fisttpll
lret
xchg
enter
pop
jecxz
pop
jno
int3
cld
out
pop
jns
movsb
mov
insb
cmpsl
jnp
jg
and
mov
push
ret
sahf
and
mov
or
xor
sub
cli
out
cmp
bound
mov
sahf
inc
mov
mov
mov
adc
sbb
xchg
cmc
in
cmpsl
jle
dec
xchg
aam
jge
push
rcrl
ret
mov
push
insb
jecxz
inc
lock
cmp
sar
enter
decl
adc
js
dec
xorb
loop
ss
and
push
mov
cmc
insb
push
pop
out
shlb
xchg
jae
xor
int
jo
cs
push
lea
imul
add
in
aam
outsb
jbe
mov
ret
jge
insl
xlat
int
mov
clc
cltd
cltd
lds
pushf
fwait
in
movsl
movl
cli
divb
add
mov
dec
int
insb
or
dec
pop
nop
jb
into
out
pop
xor
mov
in
aaa
mov
leave
push
jae
lahf
popf
mov
push
push
lock
imul
leave
fisubrl
jo
xchg
mov
test
mov
cltd
inc
mov
jge
add
dec
cmp
aas
pop
mov
jp
dec
fildl
in
mul
and
dec
jb
test
xlat
pop
fdivs
sbb
fcom
je
push
cli
out
inc
int3
inc
mov
fmuls
jae
imul
sub
mov
into
or
dec
push
addl
push
mov
push
int
repnz
pop
cmpsb
xor
push
pop
in
xchg
sub
lahf
out
adc
iret
push
mov
sbb
mov
push
sub
testl
into
mov
sub
pop
in
push
push
pop
sbb
xlat
andl
cli
arpl
and
mov
test
mov
push
out
jp
xchg
shlb
bound
stos
js
pop
mov
pop
mov
mov
imul
adc
cs
and
aas
das
dec
shll
test
stc
xor
mov
dec
sbb
cmp
pop
imul
call
bound
out
test
mov
mov
sahf
andl
call
sbb
sub
jne
push
pop
imul
dec
enter
out
sar
dec
jecxz
rolb
dec
fwait
jnp
or
sbb
mov
adc
xchg
xchg
iret
adc
jno
daa
les
and
stos
ds
mov
mov
stos
rolb
and
in
xor
enter
xchg
ljmp
or
lods
ret
add
movsl
ja
leavew
dec
outsl
lea
fmuls
xchg
stc
dec
and
repz
dec
outsb
testb
popa
fisubs
into
and
loop
clc
mov
ret
lahf
sbb
scas
pop
mov
xchg
jp
add
add
xor
sarl
dec
jnp
xchg
lods
xchg
jp
shlb
dec
fidivrs
mov
pop
xchg
nop
push
dec
call
sbb
subb
push
mov
mov
push
lods
jmp
movsb
adc
push
and
add
test
pop
std
mov
insl
jne
jne
xchg
stos
test
les
xchg
sub
je
sub
aad
stos
mov
jg
cs
sbb
lret
xor
mov
test
rcrl
mov
sbb
push
sub
sbb
int
sub
inc
xor
call
xchg
shll
jmp
inc
mov
inc
jmp
arpl
repnz
in
in
jp
loopne
faddl
dec
aam
xor
push
sub
cmp
jo
cwtl
cmp
mov
cld
add
adc
lods
inc
and
addr16
inc
xor
enter
adc
mov
out
repnz
test
cs
sub
pop
fmul
cmp
and
mov
mov
add
fdivp
and
mov
dec
mov
insb
pop
push
mov
dec
inc
mov
xlat
mov
and
loop
cs
nop
or
orb
mov
lock
pop
jne
mov
and
adc
pop
dec
inc
sbb
adc
out
jb
cmp
pop
xchg
jnp
das
iret
lret
aas
nop
cld
sarl
or
or
dec
sub
xchg
pusha
lahf
fldcw
test
pop
dec
in
jns
shrl
aad
loop
inc
ret
dec
sub
jb
mov
inc
adc
jge
xchg
iret
lock
push
mov
outsb
rcll
push
pop
push
fs
or
mov
fstps
xchg
mov
std
inc
andl
ss
and
iret
or
inc
addr16
data16
fldcw
push
and
pop
fiaddl
mov
cmpsb
rolb
jae
or
inc
jg
mov
sbb
adc
pop
loop
pop
push
push
mov
jb
mov
fmuls
xor
push
push
push
sub
clc
jns
or
push
xlat
cld
sbb
fstl
incl
icebp
test
loopne
xchg
out
cli
fwait
xor
xorb
jle
and
test
ret
add
cmp
xor
das
mov
sti
insl
test
in
pop
sub
pop
int3
jp
lods
mov
mov
jae
adc
sarb
loope
mov
inc
mov
cli
cmp
data16
dec
inc
push
push
fxch
dec
add
mov
xor
movsl
inc
inc
aaa
into
mov
mov
add
mov
cmp
inc
inc
test
movsl
sar
push
mov
pop
bound
cltd
out
mov
fsubl
push
daa
mov
out
push
jp
sbb
sbb
mov
sbb
aam
xchg
or
push
jp
fadd
imul
adc
nop
ja
outsl
sub
call
xor
mov
xor
loopne
dec
sbb
fidivs
add
inc
add
mov
mov
stos
push
cmp
mov
jae
int3
mov
or
mov
cli
mov
clc
pop
mov
insb
xchg
mov
xor
hlt
aas
sbb
ds
dec
movsb
dec
lods
push
xchg
xchg
jecxz
lret
js
fists
movsl
cmpsb
inc
es
subb
xlat
dec
and
pop
sub
outsb
lcall
lods
inc
mov
and
fstps
cmp
mov
inc
cmc
xor
lea
push
stos
stc
mov
or
cmp
mov
mov
inc
test
in
xor
inc
hlt
in
cwtl
jns
mov
and
mov
add
jnp
inc
pop
aad
mov
mov
ret
xchg
imull
icebp
jl
imul
dec
fsubrl
cld
gs
js
decb
cmp
outsl
sbb
and
adc
out
jmp
or
mov
divl
stc
sub
sub
xchg
sub
in
aas
mov
push
jg,pn
pop
push
nop
adcl
xor
xor
leave
xchg
addr16
xor
orb
mov
aad
jno
adc
jns
in
ljmp
jl
js
bound
addr16
stc
mov
pop
mov
inc
push
ds
aaa
inc
push
pop
daa
xchg
push
mov
movsl
fadds
mov
aam
mov
in
shl
mov
ds
cmp
shlb
loop
sub
mov
xor
jno
icebp
out
fcompl
xchg
or
flds
mov
pop
scas
cmpsl
lock
jns
shll
cltd
sub
stos
dec
jae
cmp
jo
push
test
or
je
inc
loop
mov
mov
fs
sbb
xchg
test
ret
add
fdivrs
bound
out
rcrl
call
jb
dec
mov
popl
sahf
mov
mov
js
xchg
stos
repnz
cmpsl
dec
gs
out
mov
pop
cmpsb
loopne
cmpsl
inc
dec
clc
loopne
xor
pop
or
mov
xchg
dec
lret
sub
sbb
jge
jmp
mov
andl
cmp
test
rorl
push
mov
stc
pop
mov
or
repnz
stc
jmp
es
aas
adc
mov
fldl
aaa
call
and
pop
pop
dec
sub
mov
sub
ret
pop
ficompl
mov
xchg
mov
push
je
sbb
jno
xchg
inc
aaa
ja
cmp
rclb
decb
mov
jge
out
inc
sahf
movsb
mov
ljmp
add
or
sbb
or
divb
push
fidivrs
insl
aam
enter
jnp
out
call
or
loope
dec
mov
or
int3
jbe
in
test
pop
popf
lret
sub
add
xchg
inc
cmpsl
jnp
les
pushf
push
cmp
lods
dec
or
mov
cwtl
loopne
xchg
jg
pusha
repnz
mov
pop
mov
jl
add
push
jno
fisttpl
mov
cmp
stos
pop
add
cmpsl
push
jno
sbb
lahf
jp
or
dec
cmp
cmp
std
mov
xorb
xor
movsb
cwtl
lret
xchg
mov
hlt
leave
arpl
xor
inc
jns
jno
cmp
shrb
sarl
dec
add
shl
pop
mov
jp
dec
adc
out
xchg
mov
test
dec
xchg
add
repz
shrl
in
loop
jno
mov
cli
scas
push
jmp
outsb
scas
pushf
sub
jb
daa
pop
xor
add
or
int
xchg
dec
jl
mov
xor
cmpsb
fs
ss
aaa
push
dec
in
jecxz
aas
stos
sahf
scas
xchg
push
dec
int3
mov
push
pop
cwtl
enter
mov
jno
mov
jb
and
stos
push
cmp
movsb
xchg
cwtl
pop
addr16
sbb
sbb
xchg
das
and
bound
push
out
out
mov
inc
or
cli
adc
jp
mov
cld
repz
ror
mov
iret
push
lock
test
xchg
push
js
in
push
ret
pusha
sbb
jnp
mov
cmp
and
int3
aad
test
popa
lcall
cmpsb
fldt
sbb
sub
sbb
jbe
add
mov
scas
dec
xchg
mov
nop
call
andl
mov
and
xor
dec
mov
imul
push
ret
adc
xor
sbb
sbb
lock
adc
lock
and
mov
cmpsl
jno
ret
gs
push
fildl
mov
cmp
mov
push
mov
adc
mov
inc
and
aas
lock
imul
jae
lcall
movsl
and
scas
loop
pop
repnz
stos
fiaddl
cs
mov
inc
loopne
jmp
jne
leave
and
xor
xchg
scas
out
stos
xchg
cmpsl
cli
sbb
movsb
bound
adc
jb,pt
add
ds
xchg
cmp
mov
dec
adc
stos
outsl
lds
cmp
adc
movsl
cmc
sahf
cmp
and
sbb
adc
bound
or
popf
xorb
jmp
sbb
and
int
mov
shll
lret
les
jo,pn
inc
jmp
sbb
mov
repz
cmp
jnp
insl
test
mov
cli
adc
add
sub
test
mov
stos
inc
fcmove
pop
mov
adc
popf
add
inc
mov
mov
xchg
and
dec
leave
movsl
call
lds
cmp
test
stc
and
jp
lret
and
pop
pop
sbb
mov
mov
inc
add
imul
es
xchg
out
test
enter
cmpb
mov
rolb
pop
mov
dec
jbe
hlt
stc
fwait
push
sahf
stos
push
xchg
jbe
xor
imul
adc
aam
in
mov
sub
je
jb
test
ljmp
pop
lea
or
imul
add
pop
testl
mov
sahf
aaa
int3
out
sub
stos
addb
cmp
mov
movsl
rol
addr16
repnz
mov
ljmp
rclb
fistl
mov
stos
xchg
push
iret
add
popa
mov
repz
pop
sbb
cmp
shll
adc
fs
nop
add
mov
mov
dec
mov
and
es
test
ret
push
ret
imul
lahf
push
mov
movsb
in
in
xchg
int3
pop
aad
es
aad
mov
add
repnz
inc
cmp
inc
es
pop
inc
lcall
inc
pop
jge
or
int3
sub
mov
mov
push
add
jle
aas
les
inc
xchg
sti
movl
cmp
lret
adc
cmp
sar
fcmovne
mov
adc
sarb
push
lcall
add
ss
sahf
das
cmp
push
fdiv
push
movsl
dec
js
push
inc
mov
dec
push
inc
nop
cmpsb
clc
jmp
jg
call
ss
dec
and
inc
xor
addb
mov
pop
jo
iret
mov
arpl
or
mov
lods
mov
stos
cmp
pop
sar
push
pushf
jge
xchg
lret
loopne
or
sub
dec
ljmp
stos
clc
pop
movsb
pushf
xor
imul
fildll
jmp
cmp
out
out
ret
daa
pop
movsl
adc
mov
scas
in
and
imul
or
add
nop
sbb
push
outsb
movb
push
jae
dec
mov
sahf
mov
bound
sti
mov
fwait
adc
jecxz
mov
arpl
fidivl
mov
rorl
dec
push
sub
mov
loopne
jb
cmpsb
adc
mov
xchg
push
inc
idivl
jl
dec
fsubl
inc
add
mov
shll
test
ret
dec
add
movsl
jecxz
bound
cltd
xchg
sbb
cmp
pop
xor
movsb
jl
mov
xor
pop
sub
push
xor
push
xchg
leave
orb
dec
leave
mov
jo
push
repz
add
adc
mov
xchg
test
stos
sbb
lods
out
jecxz
and
andb
or
inc
push
stos
imul
negl
sub
aas
adc
rcl
push
aaa
js
in
dec
xor
out
inc
stos
push
out
add
mov
jge
add
push
mov
leave
sar
icebp
imul
insb
andb
add
mov
arpl
mov
pop
sub
aas
pop
std
cs
add
rcr
push
scas
arpl
cmp
sub
cltd
adc
pusha
imul
add
icebp
stos
sub
fistpll
aaa
bnd
imul
test
mov
pop
outsb
stc
lcall
jp
dec
repz
add
xor
hlt
xchg
cmp
mov
dec
das
sub
mov
xor
dec
mov
fnsave
iret
jns
dec
xchg
movsl
inc
push
les
lcall
dec
aam
hlt
idiv
pop
je
cmp
call
adc
xchg
loopne
xor
xchg
xor
jmp
lods
sub
sub
or
lods
fistpll
sahf
push
ljmp
pop
sbbl
movsl
pop
inc
sbb
int3
jns
cmp
bound
push
xchg
orl
pop
xchg
data16
pop
mov
cwtl
ds
sarl
or
fscale
divl
pop
sbb
xchg
sub
and
cmp
jo
pushf
lock
sti
and
mov
sub
std
lahf
xor
mov
xor
les
inc
ret
inc
sub
mov
inc
adc
arpl
pop
mov
mov
fadd
mov
adc
push
jge
jae
mov
leave
loope
jp
ret
call
sbb
enter
mov
nop
jle
jle
sub
mov
xor
sahf
xchg
inc
cmp
jmp
mov
jno
and
xchg
inc
das
jecxz
or
cmp
hlt
sahf
xor
push
or
stos
dec
push
push
jg
fstl
push
mov
stos
push
rclb
xlat
aad
fidivrs
frstor
bound
pop
cmp
and
ret
mov
xor
mov
jp
push
inc
in
add
push
mov
cmp
test
and
sub
ss
add
push
testb
ds
mov
ss
scas
add
mov
dec
fstpt
cmp
orl
rcrl
lcall
push
outsl
loope
push
es
push
out
bound
in
adc
sbb
fwait
sahf
lea
mov
pop
sbb
jbe
iret
jl
out
test
inc
popf
xchg
jl
xchg
fwait
movsb
xor
inc
jne
or
xor
sbb
cli
insl
add
pop
subl
xorl
mov
inc
fdivp
push
sub
lcall
xchg
ret
push
mov
aam
scas
cmp
imul
bound
fldt
push
cs
and
dec
mov
addr16
inc
push
out
cltd
ja
fsub
addl
sub
or
push
fnstenv
inc
fsubrs
addr16
rolb
iret
inc
mov
je
testl
mov
dec
xchg
sub
hlt
imul
nop
mov
insb
jecxz
out
data16
push
nop
adcl
xor
mov
inc
adc
xchg
jmp
out
inc
adc
es
std
gs
sbb
stos
mov
ja
jb
ror
and
pop
or
pop
xchg
push
popa
inc
lock
in
rcrb
or
mov
imul
mov
cwtl
mov
adc
adc
sar
pop
jmp
mov
nop
addr16
push
jl
aaa
push
je
pushf
xchg
in
mull
imul
lcall
popf
jno
movsb
sub
andl
push
push
ret
repz
mov
push
dec
repz
mov
xchg
in
or
mov
aam
mov
cmpsb
xor
mov
pop
xor
xchg
push
jo
jle
mov
add
popa
pop
je
repz
xchg
orl
cmp
repz
dec
add
in
pop
mov
mov
xchg
clc
scas
mov
aaa
jb
out
into
mov
add
jecxz
xchg
adc
les
repz
and
dec
int3
btr
mov
sti
fdivs
insb
add
popf
xchg
dec
inc
mov
js
pop
int
subb
pop
or
push
leave
adc
rcrl
mov
mov
stc
and
or
pop
cmc
inc
js
ret
int
mov
mov
daa
mov
outsl
enter
jg
in
pushf
stos
call
rorl
pushf
sub
push
adc
insl
sub
and
imul
cmp
mov
inc
jnp
in
pop
mov
je
mov
push
out
inc
dec
loopne
fidivrl
inc
mov
pop
jecxz
cmpsl
outsb
insb
xor
mov
xor
popa
fwait
add
adc
ret
mov
stc
pop
push
cmpl
repnz
gs
pop
out
dec
aaa
inc
pop
mov
ja
shll
rolb
mov
pop
jg
test
js
xchg
push
outsb
inc
sbb
sub
pop
mov
add
aas
or
fdivrs
mov
ret
inc
ds
pop
addb
pop
mov
mov
sbb
adc
das
lahf
mov
pop
outsl
rorl
inc
inc
cmp
or
cld
ret
rep
or
dec
outsl
cmp
pop
dec
mov
mov
push
push
movsl
sub
push
jmp
mov
jae
jbe
pop
dec
add
or
aaa
fsts
divb
pop
push
pop
mov
es
jno
or
sbb
fists
sbb
jno
in
test
push
iret
mov
scas
outsl
repnz
dec
jbe
shlb
les
jbe
out
sub
pop
push
enter
lea
mov
jg
cld
pop
cmp
sbb
jne
sub
jmp
pop
movups
insb
pushf
cwtl
leave
fmulp
pop
shlb
in
ja
je
xor
mov
or
mov
mov
bnd
dec
popf
xor
aam
sub
jbe
mov
xchg
push
hlt
mov
clc
mov
mov
mov
movsb
push
ljmp
lahf
and
fs
jle
fmulp
or
jae
ds
enter
jb
into
mov
add
mov
testb
fwait
push
fstp
nop
cli
sub
and
jge
aad
out
xchg
ja
xor
pop
mov
clc
daa
inc
popa
shr
cmpsl
mov
xor
add
popf
lock
cltd
jae
or
jns
mov
xor
jp
mov
fcompl
push
and
sahf
mov
push
in
xlat
mov
mov
push
mov
jg
and
xlat
imul
lret
dec
das
insl
cld
sub
add
sahf
scas
add
pop
or
sti
insl
fadd
ret
test
xchg
jp
sbbb
add
cmp
jge
out
jo
shll
outsb
inc
pushf
adc
pop
sub
and
jo
sarl
dec
jl
adc
divb
inc
test
dec
cmp
in
shlb
cs
sbb
sub
or
test
decb
cmp
sahf
xchg
mov
or
stc
xor
adc
lock
inc
popa
xor
stos
pop
mov
and
hlt
dec
scas
sarb
xor
ud2
data16
dec
xor
imul
nop
push
inc
fsubs
inc
dec
scas
insl
mov
lock
push
lahf
xchg
mov
inc
sahf
add
lahf
aas
jbe
jp
jle
arpl
jmp
stc
or
adc
ds
cmpl
lcall
mov
stc
fucomip
mov
jo,pn
mov
pop
pop
cmpsb
inc
dec
fiaddl
in
cmp
movsb
in
mov
adc
insl
xor
xor
mov
sahf
cmpsb
data16
stos
scas
or
fwait
mov
push
in
add
jmp
test
rcrl
jnp
or
scas
pop
or
andb
cwtl
aas
push
sbb
movsb
mov
imul
xchg
mov
cli
fisttpl
imul
inc
cld
sbb
mov
jg
rcll
dec
lahf
movsb
mov
ret
or
mov
cmp
lret
lret
push
sbb
mov
jp
mov
add
push
push
aad
outsl
sbb
popa
pop
sub
cmpsl
mov
adc
mull
outsb
fdivrs
inc
ds
les
add
pushf
jmp
sbb
add
enter
rol
cmc
pushf
push
ljmp
and
rolb
or
pop
in
sbb
into
repz
movsl
pushf
pusha
lahf
lock
push
xchg
shlb
fwait
int
ret
cmpsl
imul
and
mov
add
sbb
enter
aad
scas
insl
mov
pop
sbb
std
push
mov
test
jae
and
inc
popf
out
mov
enter
movsb
sub
mov
int3
adcl
pop
fdivs
scas
cmp
das
icebp
stc
and
loope
push
in
sbb
inc
dec
sbb
lods
nop
mov
iret
inc
inc
mov
cmp
push
fidivl
xchg
mov
or
adc
cmpsl
stos
fwait
dec
loope
out
insl
jle
lret
iret
jmp
out
and
std
popa
enter
xchg
pop
sub
and
dec
mov
stos
or
xchg
push
xlat
push
adc
mov
and
mov
ret
cmp
outsb
mov
arpl
adc
mov
lea
jns
add
scas
inc
stc
mov
es
ja
addr16
loopne,pt
out
iret
sbb
pusha
gs
cmp
bound
mov
pop
mov
es
nop
or
shl
cmp
out
in
insb
cmp
lret
fwait
lods
jbe
movsl
lea
push
lods
sub
or
sbb
int
not
mov
and
es
push
test
cmpsl
and
lret
cmpsb
lds
add
jo
in
push
fmuls
inc
cld
sbb
int
inc
inc
jle
mov
loopne
in
cmpsb
roll
hlt
cmp
jno
xor
pop
imull
push
ljmp
xor
aaa
push
int3
pop
outsl
loop
into
dec
add
sti
shll
sbb
or
push
mov
ficoms
pop
mov
leave
sub
imul
jp
ja
add
xchg
inc
imul
jge
push
out
mov
or
mov
or
int3
add
arpl
aam
mov
into
dec
push
jecxz
out
mov
pop
roll
adc
in
cmp
jo
fcomp
mov
fcmovnb
aaa
cltd
xchg
addr16
in
inc
aam
and
and
pop
mov
insb
lods
jl
mov
divl
idiv
xor
femms
insl
pop
scas
cmpl
out
xor
insb
add
mov
aas
push
insb
jnp
cmp
outsl
shl
lods
or
pop
lock
dec
notl
add
das
mov
ficompl
gs
lock
popa
jmp
cwtl
cmpsl
outsb
ljmp
stc
scas
xchg
enter
mov
stc
out
or
or
xchg
fisttpll
cmp
addb
lds
repnz
jnp
dec
cmp
mov
cli
sub
jne
inc
xor
lret
mov
jne
push
imul
pop
push
lcall
aaa
mov
pop
xchg
daa
push
inc
or
shrb
js
push
pop
lods
inc
out
int
test
mov
sahf
inc
push
fidivrl
fldenv
leave
verr
inc
mov
sbb
and
xchg
dec
xchg
mov
dec
xlat
lds
or
test
sbb
add
popa
sbb
mov
jle
sbb
js
mov
mov
and
lods
loope
shl
dec
jle
orl
push
scas
icebp
xor
hlt
push
jbe
jb
fsubrl
push
push
push
push
push
mov
xchg
fdivr
sub
aam
sub
fs
xorb
test
test
in
or
mov
hlt
sub
push
inc
lock
into
xchg
iret
dec
and
popf
out
jbe
insb
cmp
test
les
in
dec
arpl
fstps
iret
out
shlb
add
addr16
jae
out
leave
divl
sbb
fwait
mull
jecxz
ljmp
or
adc
mov
pop
or
xchg
mov
jo
mov
adc
mov
xor
loop
dec
mov
out
std
outsl
das
jp
xor
mov
into
jle
call
push
int3
xchg
sbb
std
add
jb
out
lds
iret
and
js
decl
es
lods
sarl
xchg
div
push
mov
aam
test
shrl
mov
or
jle
hlt
insb
call
sub
jo
pop
xor
add
fistpl
scas
sahf
iret
fbstp
mov
stc
mov
repnz
scas
scas
cltd
mov
test
imul
jmp
test
aas
push
bound
xchg
fsub
mov
loop
bound
int
cmp
xchg
push
enter
std
sbb
pop
gs
hlt
hlt
xchg
dec
jo
ljmp
mov
adc
lret
xor
and
push
inc
mov
push
pop
sub
xchg
cmp
call
fnstcw
inc
int3
pop
mul
mov
or
enter
dec
or
sbb
arpl
scas
lods
jp
jns
cli
call
daa
mov
mov
and
pop
into
xor
aaa
xchg
lods
maskmovq
lret
add
mov
mov
into
and
jns
cwtl
and
and
mov
ljmp
stos
jb
cld
jg
scas
add
scas
dec
int
xlat
scas
push
test
inc
xor
adc
lock
push
jl,pn
int
sarl
fwait
cmc
daa
dec
es
push
pop
lds
mov
subb
popa
std
in
mov
repz
push
pop
xchg
in
jno
popa
sbb
ret
xor
or
adc
testl
test
add
das
add
mov
fs
add
lods
push
mov
or
aaa
mov
repz
or
push
and
in
pop
fld
les
cmp
adc
cmpsl
or
mov
add
mov
pop
push
loop
mov
daa
cmpsb
outsl
sbb
sti
push
ror
bound
out
pop
cmpsl
jg
out
inc
jne
or
fs
test
cs
and
cmovae
cmpsl
inc
mov
imul
mov
xor
mov
sahf
dec
rol
ficoms
mov
repz
or
rclb
jp
push
iret
and
add
jmp
faddp
jnp
insl
dec
mov
xchg
test
push
fdivrs
jb
aad
jbe
insb
stc
dec
sub
and
push
sub
pop
fcmovu
mov
xor
arpl
jnp
iret
std
xchg
pop
inc
cmpl
je
xchg
xor
adc
ret
pusha
or
mov
cmp
movsb
xchg
sahf
in
inc
ret
loope
add
into
aad
ja
sub
adc
pop
push
ss
addl
icebp
incl
inc
inc
arpl
sub
leave
cmpsl
imul
and
pushf
and
or
jl
shr
jg
cmp
mov
decl
xor
pop
clc
cmpsl
popf
sub
xor
jns
shrl
push
xchg
cmp
loope
data16
and
inc
xorb
add
mov
dec
loopne
add
adc
mov
mov
ret
mov
adc
jo
test
and
cld
enter
or
mov
pop
xchg
arpl
xor
dec
sbbl
mov
loop
lea
lods
mov
aas
lret
and
sub
pushf
or
xor
mov
scas
or
pop
xor
add
sahf
fsincos
xchg
in
jnp
sub
icebp
clc
in
mov
sub
pop
sbb
movsb
mov
insl
sti
rcll
xchg
or
add
aam
pop
sbb
enter
fnstenv
movsb
hlt
repnz
pop
loope
and
neg
mov
xchg
cmp
repz
movsb
lea
nop
iret
xchg
or
or
loop
inc
js
lret
xchg
push
dec
pop
mov
lods
xor
jbe
subl
inc
or
dec
cli
je
cli
out
iret
shrb
das
rcr
xorb
cmpsl
stc
imul
into
jmp
les
insb
imul
and
xor
je
adc
inc
cmp
ss
cmp
inc
into
aaa
pop
mov
les
push
aam
jns
xchg
lds
in
sbb
cmp
push
dec
inc
jp
aaa
sbb
sub
cwtl
or
ret
sub
lds
mov
xchg
fists
dec
sub
jecxz
pop
or
sub
cmp
shll
push
scas
cwtl
bound
cmp
inc
push
jne
sarb
inc
add
or
paddb
jp
shlw
xor
subb
xor
pop
fwait
sti
cmp
mov
add
pop
pop
lret
andl
test
sub
pusha
out
aam
outsb
inc
lea
or
sahf
repz
xlat
nop
mov
mov
or
aam
jbe
push
cmpl
or
jo
sbb
adc
dec
in
pushf
js
dec
lret
push
mov
inc
rcrl
fcompl
loope
les
mov
test
dec
std
cmp
xor
push
mov
pop
scas
in
mov
push
mov
mov
inc
in
lahf
sti
xchg
mov
ret
in
lea
sti
adc
lret
jo
dec
mov
mov
jle
pusha
out
xlat
lret
mov
mov
outsb
lds
xchg
sarl
aad
into
loope
sbb
mov
jmp
shl
test
jo
stos
and
cli
push
or
movsb
mov
mov
xchg
ss
in
rcrb
call
imul
xchg
jns
ficoml
and
repnz
test
lds
jo
inc
or
js
jb
jnp
inc
pop
sub
adc
inc
inc
dec
or
sahf
dec
fdivl
add
sub
mov
jns
jecxz
js
js
test
cmp
popa
or
rol
pop
xchg
jg
mov
aaa
cltd
mov
xchg
daa
push
dec
mov
add
dec
adc
mov
push
arpl
dec
push
fbstp
pop
xor
and
cmp
stos
cmp
ja
addl
dec
cs
jns
lret
cmp
jl
mov
dec
pop
enter
out
mov
popa
cmp
stos
xchg
std
in
in
cld
repz
jecxz
jg
push
mov
lret
mov
cmp
out
cmp
jnp
xchg
pop
mov
push
and
sbb
insl
js
mov
rorb
or
cmp
outsl
in
cmp
cltd
addr16
mov
pop
pushf
xor
inc
out
mov
ret
add
or
inc
in
cmc
movsl
inc
lret
xlat
mov
pushf
jne
xorb
mov
inc
jle
out
jae
popa
neg
mov
jb,pn
scas
push
sbbl
mov
inc
cwtl
ss
jno
pop
popa
or
xlat
xchg
adc
dec
push
or
lahf
dec
add
lods
mov
inc
out
ljmp
dec
and
cmp
hlt
fwait
test
outsl
xlat
xchg
leave
mov
or
xchg
fsubr
xor
iret
xchg
and
fidivrl
cmp
mov
setne
dec
into
mov
std
test
xchg
xchg
inc
test
and
icebp
cmpsb
arpl
pop
inc
mov
fdivs
pop
sbb
pop
jne
and
dec
cmp
jno
push
out
xor
lahf
jne
xor
aas
into
jge
pop
and
icebp
dec
pop
push
movl
inc
movsb
xlat
push
inc
jno
aam
dec
js
push
aas
adc
mov
gs
dec
inc
jb
xor
leave
and
clc
mov
lret
pusha
mov
inc
mov
inc
sbb
loopne
shrb
dec
aam
fidivrs
mov
and
imul
push
fdivp
pop
pop
cwtl
into
out
add
stos
movsl
popa
rorb
push
cmp
arpl
jg
lret
mov
sbb
push
push
inc
mov
xor
mov
pusha
xchg
aaa
cld
ret
jg
addl
jo
inc
pop
fs
lock
icebp
mov
xor
int
repnz
sub
xchg
lret
inc
sbb
lcall
xchg
adc
sub
push
sbb
sbb
and
mov
fisubs
dec
jmp
sub
jp
leave
lock
clc
inc
push
cmp
push
repz
adc
adc
js
jo
inc
and
push
mov
xchg
mov
mov
adc
push
lods
cmpsb
push
mov
js
ss
pop
pop
xchg
cli
and
hlt
dec
cmpb
pop
popa
xchg
popa
xor
mov
leave
repz
or
movsb
jnp
jns
incl
jns
mov
call
adc
pop
cld
mov
xor
mov
std
xor
xchg
int3
imul
gs
les
pop
jge
sbb
inc
stos
stc
inc
jnp
pop
adc
or
xor
out
xchg
dec
in
add
pop
jmp
jo
fisubl
rol
or
or
pop
xor
xchg
pop
jo
pusha
test
call
mov
push
sti
xchg
bnd
popa
mov
pop
cmp
inc
adc
push
in
jae
dec
adc
mov
mov
cmp
xchg
mov
cmpb
and
pop
pop
add
repz
cmp
cli
sbb
orb
inc
and
lret
inc
xorb
in
mov
jae
jg
and
loop
adc
pop
iret
push
inc
inc
pop
adc
mov
xchg
daa
cmp
cltd
cmp
sbb
popf
cwtl
fisttpl
ret
fldt
scas
jl
shll
daa
mov
push
sub
les
lea
inc
call
decb
xor
ret
add
stos
adc
and
dec
lods
gs
adc
fcoml
xchg
cwtl
mov
xchg
divl
icebp
pop
dec
fs
cs
shrb
and
jnp
into
testl
adcl
insb
xchg
repnz
ret
lahf
aad
xor
xchg
push
leave
sbb
inc
ret
mov
out
subl
adc
out
push
jp
lcall
and
in
pop
jne
mov
jbe
pop
out
cmp
mov
in
pop
push
into
pop
mov
cmp
pop
bound
icebp
out
mov
subl
mov
xchg
ss
inc
sub
xchg
loop
cmp
repz
jl
jns
sub
pop
add
lahf
dec
jge
jmp
jge
or
lods
loopne
mov
pop
jo
mov
sar
lret
xor
and
sbb
sub
faddl
add
xchg
jbe
lea
xor
inc
and
mov
mov
lods
and
fidivl
push
jg
popf
or
pushl
nop
jns
mov
icebp
outsb
out
push
or
mov
cli
int3
mov
push
push
mov
pop
mov
lret
dec
js
add
out
jb
shlb
sbb
adc
xor
and
stos
adc
jg
lock
jmp
ljmp
daa
sbb
jbe
mov
adcl
les
int
das
shrb
inc
inc
clc
nop
dec
negl
aas
nop
push
enter
adc
jo
xchg
outsb
xor
and
mov
fwait
jne
int3
add
popa
cmp
pop
loopne
nop
sub
out
ret
jle
mov
iret
pop
ds
mov
inc
or
add
roll
in
xchg
adc
mov
stos
push
add
imul
add
mov
or
dec
inc
sarb
sub
out
dec
lret
aaa
push
call
fdivp
mov
lahf
lcall
push
sub
in
fwait
pop
je
mov
lahf
fdivr
dec
pop
add
shll
aad
cmp
popa
dec
and
rcrb
stc
repz
mov
inc
fadds
mov
pushf
fwait
mov
xlat
or
cs
shll
push
pop
test
or
adc
pusha
cld
shll
xor
frstor
cmpsb
jno
outsb
and
xor
out
mov
push
dec
iret
std
fidivrs
insb
jp
aas
adc
inc
das
inc
rolb
mov
xor
nop
jnp
cmpl
in
mov
sbb
fistpll
cmp
or
cmp
daa
inc
mov
xor
sub
fs
sub
int3
pushf
mov
aaa
cld
out
cwtl
lds
lret
inc
sarl
mov
xchg
add
stc
js
push
loopne
mov
pushf
in
test
mov
daa
lret
jg
fnstenv
jle
mul
sbb
sub
jmp
orl
and
and
dec
rclb
and
jo
in
fimull
sub
lcall
jp
dec
ret
test
mov
cmp
jbe
cmpsl
inc
dec
pusha
mov
push
stos
add
inc
sbb
mov
mov
insl
iret
xor
sbb
push
sub
push
leave
mov
xchg
fldl
xchg
mov
mov
add
popf
outsb
mov
divb
shl
jg
add
mov
jmp
add
sub
stos
cwtl
add
sub
mov
ljmp
push
and
cmpsb
and
jne
sbb
sbb
jbe
test
cmpb
cmp
mov
lret
scas
mov
in
and
add
subb
adc
data16
clc
out
mov
out
inc
jg
dec
jo
scas
stc
flds
add
out
cmp
in
cmp
jno
dec
and
arpl
insl
mov
jmp
in
rol
and
xchg
outsl
ja
js
aam
test
mov
sbbl
fisttpl
and
jle
lahf
adc
into
hlt
popf
sahf
popf
ret
scas
fadd
mov
or
test
push
or
cmpsl
add
inc
les
icebp
mov
push
or
out
mov
jbe
lods
fimuls
scas
dec
jecxz
or
inc
nop
aam
mov
inc
adc
pop
ljmp
add
xchg
mov
dec
fcomp
dec
inc
jl
add
dec
dec
mov
jo
inc
xor
stos
xchg
in
dec
out
shr
sti
movsb
fimull
aam
mov
mov
int3
pusha
dec
andb
add
icebp
fnclex
fmul
fimull
and
fdecstp
add
stc
and
mov
icebp
cmp
mov
or
loop
xchg
jle
lret
and
or
insl
loope
insb
cmp
mov
icebp
xchg
fildll
ds
jb
gs
pop
pop
ds
rol
xchg
dec
push
fadds
jns
js
push
sbb
push
jge
xchg
shr
in
sbb
ret
sbb
rclb
outsl
lock
jecxz
xor
lcall
out
xor
int
and
jmp
std
dec
fisubl
popa
ret
lods
lock
js
lea
or
pop
in
sub
dec
or
ds
cmp
lret
dec
fiadds
jbe
out
movsb
movsb
mov
insl
mov
adc
in
pop
movsl
fstpl
in
jo
and
mov
out
loop
lcall
lret
xchg
sub
scas
xor
std
out
push
fwait
cmp
lods
adc
loop
dec
pop
repnz
xor
fsubp
mov
nop
mov
sbb
or
lock
dec
orl
ret
mov
mov
cmp
pop
inc
lds
bnd
rcl
in
std
inc
lcall
fiaddl
pop
imul
mov
stos
mov
xchg
pop
aad
sbbb
shl
jns
jmp
addr16
in
dec
and
in
dec
dec
fs
loope
or
fstpl
iret
xor
jecxz
das
imul
xchg
mov
scas
cmp
orb
mov
add
lcall
push
jl
jno
mov
bound
imul
and
shrl
int3
fnsave
fdivrl
pop
jb
out
xchg
sahf
out
cltd
push
mov
adc
add
mov
mov
es
or
aam
into
pop
pusha
outsl
cmp
int3
aaa
int3
mov
jns
mov
stos
sets
push
sub
or
inc
nop
not
shrl
clc
test
fldenv
es
lock
push
arpl
inc
and
adc
lcall
adc
lods
cwtl
add
add
sti
adc
cmp
add
mov
or
push
sub
ja
cmp
inc
add
sbb
cmp
call
jne
icebp
roll
dec
mov
mov
sub
movsb
mov
imulb
inc
mov
jecxz
cmp
js
mov
jle
loope
jb
js
add
adc
xchg
loop
sbb
in
mov
sub
popa
lret
adc
push
adcl
adc
push
mov
insb
lcall
cs
jl
push
xchg
push
mov
nop
lods
push
stc
lea
xchg
pop
dec
cmp
add
add
xor
cmp
es
fistpl
mov
shll
lods
or
pushf
pusha
int3
movsb
sbb
push
and
adc
mov
mov
mov
pusha
cld
cmpsl
or
iret
pusha
push
adc
push
addr16
aam
enter
aas
bound
cmp
mov
push
pop
pop
xor
call
xchg
fldenv
shrl
jmp
rclb
mov
ss
pop
xchg
add
mov
orl
out
add
mov
mov
lcall
in
inc
push
jge
mov
xchg
mov
add
add
and
loope
mov
ja
outsb
orb
fdivrs
xor
mov
pop
and
lea
dec
orl
int
add
rclb
dec
add
jmp
test
imul
loopne
cmpl
mov
setge
loop
hlt
mov
hlt
ret
mov
out
flds
hlt
cld
pop
jmp
dec
and
mov
cmp
lret
adc
sti
or
add
and
adc
cld
push
cmp
dec
inc
stos
fcoml
mov
testb
xchg
xor
xchg
cmpsl
popa
mov
lahf
outsl
in
pop
add
mov
pushf
fistps
add
inc
mov
mov
arpl
test
cmc
push
mov
and
jae
xchg
syscall
and
add
bound
xor
pop
je
scas
push
push
in
cltd
or
out
into
or
inc
mov
dec
jle
push
shl
mov
sub
test
or
add
sub
add
sub
fdivrl
mov
mov
xorb
cltd
loope
aas
sbb
mov
push
mov
and
movsb
jne
sbb
jne
fdivs
sub
mov
adc
pop
out
pushf
pop
xor
pop
insl
mov
xor
inc
in
lea
add
in
pop
int3
inc
sub
flds
rclb
jmp
push
mov
outsl
insb
pusha
push
pop
mov
popf
js
adc
sub
hlt
repnz
sbb
jecxz
addr16
ret
adc
mov
push
gs
cmpsb
fnstenv
or
and
std
mov
jp
mov
cmp
popl
mov
imul
adc
add
jo
add
dec
cltd
lahf
push
insb
jnp
mov
sub
jg
cmpsb
pusha
xor
outsb
fdivl
adc
or
mov
pop
mov
mov
jp
dec
iret
out
cli
cld
andl
jb
les
push
adc
or
lock
cld
push
adc
mov
xchg
inc
mov
adc
mov
sub
sbb
dec
popf
jae
mov
outsl
sbb
xchg
cmp
jmp
pop
cmp
scas
adc
mov
cwtl
dec
xor
mov
lds
or
sub
xor
movsl
adc
ds
or
and
sbb
or
or
addr16
aad
adc
xor
adc
or
sbb
add
push
mov
in
mov
lcall
enter
fistps
mov
mov
fidivl
lcall
ret
ret
sbb
push
shlb
out
ffreep
add
stos
leave
mov
adc
imul
loope
loop
mov
lods
or
mov
push
push
out
sahf
adc
out
aas
ljmp
push
mov
pop
aam
push
frstor
adc
mov
insl
mov
scas
push
adc
lea
daa
mov
mov
adcb
mov
idivl
cmc
xchg
adc
mov
scas
in
jbe
in
or
popa
imul
outsl
loopne
xor
mov
dec
inc
mov
pop
mov
popa
xchg
push
jo
inc
js
aad
sub
cmc
dec
mov
push
pop
jecxz
dec
mov
push
xor
cmp
std
push
mov
xchg
xchg
or
jae
imul
xor
out
popa
jg
mov
out
loopne
hlt
xchg
xor
out
jp
insl
push
mov
movsl
pop
movsl
cmp
imul
mov
sbb
pop
mov
popf
inc
roll
xor
loop
mov
and
lfs
push
and
imul
ret
sbb
rep
div
dec
stos
lahf
aad
add
addr16
mov
stc
sub
repnz
mov
adc
add
incb
fcmovnb
ss
and
lods
popf
jb
insb
dec
or
fucomi
bound
lret
xchg
popf
lahf
in
push
sub
inc
mov
insl
sub
xor
cwtl
push
sbb
lods
and
shlb
dec
fwait
int
lock
jmp
gs
mov
stos
pop
dec
movsb
and
sbb
ljmp
aas
pop
loopne
dec
and
mov
lret
or
incb
call
bndstx
dec
out
in
rcrl
sti
push
mov
imul
mov
inc
dec
dec
and
sahf
fucomp
pop
dec
rolb
call
outsl
inc
pop
push
popa
xchg
lods
xor
scas
dec
cmp
shr
adc
push
or
subl
sub
movsb
pusha
aas
fwait
shrl
enter
cs
out
mov
int3
outsb
out
cltd
dec
int
pop
or
jo
hlt
mov
insl
xchg
pop
sarb
outsl
and
cmp
pusha
pop
shrl
fistl
push
imul
mov
mov
pop
push
mov
or
fsubrs
xacquire
int3
aas
ret
xor
cmp
mov
stc
ret
fwait
jnp
ret
stc
outsb
xor
sbb
dec
and
loopne
roll
icebp
adc
pop
pusha
sbb
rcrb
aaa
addr16
cmp
shlb
cmc
flds
jb
sub
mov
inc
cwtl
mov
cmc
lret
and
in
cld
or
mov
inc
inc
stc
aas
les
cmpsb
lret
xchg
cmp
dec
shll
arpl
sub
ss
mov
je
sub
or
fs
fidivs
and
dec
jae
out
sbb
inc
lods
push
adc
dec
xchg
stc
cmp
sub
les
ret
sub
adc
or
sbb
and
aas
les
push
ficoml
leave
or
pop
sbb
inc
rolb
out
sub
xor
adc
jnp
fildl
loop
adc
jo
sub
cmp
and
enter
les
jge
mov
daa
shrb
aas
xor
arpl
push
sub
mov
and
test
adc
movsb
imul
inc
pop
xchg
pop
jl
int
xor
push
jmp
push
sub
push
or
xor
pop
pushl
sub
shl
cmp
sbb
add
mov
je
xor
push
mov
orl
cmpsl
into
pop
adc
clc
inc
pusha
das
aad
inc
ljmp
xchg
push
inc
std
jg
repz
push
popa
mov
aas
fs
dec
inc
popa
push
test
sub
incl
adc
pusha
int3
pop
ja
popf
or
pop
xor
insb
mov
cld
fistps
sarl
push
into
loopne
loop
call
sbb
sti
xchg
xlat
pop
push
aaa
pop
dec
jp
lds
push
movsl
push
hlt
pop
dec
or
adc
sti
and
mov
jmp
xchg
jle
fcompl
xchg
xchg
cmpb
and
adc
mov
fcomps
in
into
mov
push
sbb
add
fwait
adc
out
jne
sahf
mov
lret
mov
pop
iret
adcb
adc
cli
pop
and
and
fcmove
sahf
mov
sbb
scas
leave
mov
sahf
mov
je
pop
rcll
lcall
lret
das
mov
outsl
inc
adc
je
jnp
mov
leave
jne
sti
outsl
xchg
jno
push
lds
imul
xor
push
xor
in
jo
insl
lahf
pop
mov
push
mov
sub
icebp
xchg
addr16
add
popf
popf
mov
mov
jmp
pusha
xor
and
xchg
jb
sbb
push
sti
cs
xchg
jmp
mov
and
mov
sbb
in
push
shll
mov
mov
add
jmp
mov
fsubs
jae
mov
or
dec
dec
aaa
mov
inc
and
loopne
adc
mov
push
or
iret
inc
lret
stc
lods
fistl
cmp
pop
jo
sub
lret
jae
push
mov
ja
sub
test
in
mov
pushf
mov
mov
mov
ret
jnp
rcrb
mov
add
inc
or
test
repnz
clc
sti
aam
mov
std
mov
xor
and
movsb
pop
sub
fldcw
stc
mov
popf
ss
loopne
cmp
das
test
and
xor
mov
rolb
jle
push
cmp
mov
lcallw
add
insb
in
dec
sbb
insb
cmpsl
addr16
xchg
test
add
pushf
mov
in
adc
mov
ret
cmpsl
add
push
out
pop
shrb
sbb
xorb
mov
xchg
adc
inc
push
pop
dec
xlat
push
lods
test
mov
das
stc
cmp
sahf
ficoms
or
arpl
jecxz
inc
into
push
inc
xor
sahf
repz
enter
aad
push
insl
push
sbb
inc
mov
fisubl
inc
push
insb
sbbl
lahf
inc
jno
sub
ds
imul
inc
fisubrl
jl
stos
rcrb
or
sub
inc
or
lock
mov
add
adcb
cli
enter
pop
mov
sbb
xorl
sbb
data16
fldl
movsb
cli
jb
add
movsb
jl
sahf
push
cmp
clc
xchg
or
lds
mov
sbb
aas
pop
lods
lods
inc
insb
lcall
jge
lods
push
mov
xor
push
push
push
stos
into
push
shrl
mov
in
repz
pop
cmpsb
mov
ret
xorb
xor
mov
lret
inc
insl
ljmp
in
ss
add
sarl
adc
pop
inc
mov
cwtl
jne
xchg
pushf
push
cmp
pop
sahf
in
sbbl
shlb
sarb
adcl
ds
fldcw
out
repz
sbb
cmp
mov
push
pusha
into
xchg
mov
mov
aas
out
jecxz
imul
push
push
or
xor
ftst
pop
pop
pop
xchg
out
dec
cli
popf
loopne
ds
dec
mov
ficoml
mov
mov
mov
jae
sahf
push
sub
out
pop
fwait
push
push
ret
mov
cmpl
pop
mov
and
sub
aaa
add
stos
sbb
mov
das
push
xchg
outsb
pop
ljmp
ja
jbe
pop
icebp
push
aaa
cmp
lret
sub
cmp
and
fwait
xchg
lret
inc
lret
clc
jmp
fdivrp
mov
sti
mov
sbb
pcmpeqb
and
cmp
dec
out
push
pushf
lahf
mov
loopne
jno
data16
mov
bound
or
sub
add
into
cmp
retw
add
push
cli
jle
mov
fs
pop
push
cmp
dec
cmp
mov
jae
lock
xchg
push
lret
and
jae
lcall
out
xchg
xor
and
xlat
call
insl
ljmp
ljmp
jbe
std
nop
pop
in
roll
in
jl
into
inc
jl
xchg
cmp
loope
sub
lret
mov
movsb
sbb
clc
shll
mov
in
int
or
mov
sahf
fs
aam
lret
sbb
fxtract
fbld
or
movhps
inc
nop
mov
and
insl
mov
stos
xchg
fcompl
dec
clc
sub
pop
lahf
sub
repnz
lods
bound
push
cmpb
inc
mov
and
pop
xchg
inc
push
test
aas
aad
pusha
shll
bound
je
cmpsl
inc
xchg
inc
or
push
data16
pop
lahf
xchg
inc
mov
in
dec
cld
mov
out
popf
sbb
xor
outsl
test
mulb
and
iret
cmp
jecxz
popa
mov
jg
seta
mov
push
pop
filds
es
pop
mov
out
ds
jp
inc
imul
adc
xlat
push
js
sbb
mov
daa
or
gs
sti
lret
inc
test
inc
shll
cli
xchg
cltd
mov
fstpt
dec
inc
xchg
xor
push
jp
cmp
leave
lds
adc
aaa
in
inc
mov
repz
ret
sbb
inc
push
dec
je
rorb
mov
jmp
or
mov
add
popf
xchg
or
push
mov
xchg
divb
clc
adc
jp
push
loopne
lds
aaa
enter
mov
inc
add
movsb
jl
movsl
cs
xchg
push
mov
xchg
push
push
repnz
arpl
push
test
clc
test
cld
jg
mov
jbe
mov
mov
pop
sbb
stc
iret
pop
and
mov
mul
push
and
push
mov
ret
sub
jl
mov
xor
push
pop
nop
jbe
inc
rolb
mov
and
pop
xorb
add
rclb
adc
es
test
or
mov
cwtl
cmp
aas
loopne
cltd
mov
mov
sbb
arpl
cmpsb
ja
xchg
popa
hlt
movsb
mov
mov
cltd
and
push
daa
pop
jecxz
int
imul
add
sub
sub
cmpsl
lea
adc
jb
push
dec
in
sub
jnp
lret
jo
inc
std
or
jle
orb
mov
mov
icebp
dec
mov
mov
adc
and
mov
sub
stc
in
push
rorl
jne
subb
stos
xor
inc
idiv
pop
mov
sub
cli
fbld
or
adc
in
stos
nop
add
das
ss
xor
cwtl
mov
jo
or
adc
jae
in
dec
push
push
in
rol
add
out
jp
fnstenv
sti
xchg
push
or
in
ss
dec
cltd
ja
pusha
sbb
push
mov
cmpb
mov
cwtd
call
rorl
lock
xorl
sbb
ja
pop
repnz
pop
mov
xchg
jge
add
sbb
fmull
std
loope
imul
loop
ss
jg
in
ss
fcmove
aaa
xchg
push
shr
mov
sub
out
or
cmp
insl
out
adc
add
sub
lock
mov
fdivrl
mov
popf
mov
stos
lcall
inc
jle
add
xchg
mov
xchg
lret
pop
out
sub
imul
xor
std
ss
test
mov
xchg
mov
dec
pop
test
adc
popf
cs
pop
xchg
aaa
xor
out
push
data16
push
push
iret
xchg
cmpsl
das
sub
adc
push
dec
je
test
es
stos
test
mov
jle
sbb
dec
mov
cmp
das
clc
subl
jne
jno
sbb
je
jp
xchg
sbb
pop
dec
ficoml
rcrl
mov
mov
jns
in
das
pop
jns
lds
js
cmpsl
cmp
outsb
roll
adc
iret
push
lahf
test
ret
scas
dec
push
sarb
mov
mov
movsb
and
sbb
cld
push
add
loope
dec
fidivs
scas
pop
iret
test
pop
call
rcrl
mov
iret
leave
add
push
aad
or
sub
lahf
xchg
xlat
jg
scas
movsl
iret
and
lahf
sbb
dec
pop
xchg
cmp
adc
sbb
cmp
jns
mov
or
cmpsb
hlt
mov
call
mov
clc
push
scas
mov
xorl
mov
jl
jg
in
ds
dec
jp
pop
or
adc
out
mov
push
adc
xchg
test
inc
adc
test
jne
adc
sbb
push
cmp
adc
sbb
pop
lret
jp
lret
pop
cmpsb
xchg
mov
out
or
fcmovu
out
ljmp
push
sti
push
mull
pusha
pushf
pop
jge
ret
fisubrl
pop
scas
mov
sbb
cmp
aaa
test
and
inc
mov
adc
add
mov
ds
jo
aas
sarb
adc
inc
sub
into
add
xchg
dec
pusha
es
mov
pop
ret
pop
sbb
cli
push
lds
scas
popf
or
mov
adc
cmp
sub
and
adc
push
sbb
ret
mov
int3
mov
dec
enter
mov
sbb
in
adc
fs
inc
popf
ja
push
test
rcrl
xor
adc
fcomip
add
inc
popa
es
jb
in
cmp
ljmp
push
cmc
push
in
xchg
test
in
icebp
push
mov
or
xchg
sahf
pop
push
dec
sbb
pop
and
push
sarl
mov
adc
mov
jb
dec
jg
add
jne
push
int
dec
lret
xor
mov
aam
or
xchg
dec
lods
pop
push
aas
imul
adc
fcmovbe
lcall
es
push
std
xor
xchg
cltd
enter
dec
and
pop
adc
and
scas
btc
aam
mov
jp
stos
mov
test
mov
das
dec
push
inc
pop
pop
std
sub
cli
out
leave
jae
adc
adc
int3
out
inc
shll
subb
jmp
mov
jae
arpl
ja
push
jae
sahf
mov
movsl
div
cmp
inc
push
mov
pop
jae
xchg
enter
hlt
data16
adc
push
mov
lock
int
dec
add
dec
inc
lods
adc
shrb
ret
inc
mov
jb
jmp
arpl
push
aas
cld
fdivp
sti
pusha
push
popa
inc
cmp
lods
cmp
mov
cmpl
mov
and
lods
mov
int3
xchg
push
out
mov
pop
push
nop
scas
ljmp
hlt
stos
mov
mov
hlt
add
cmpsl
jecxz
aad
xchg
push
dec
stos
out
jp
pop
lods
shl
mov
into
pop
push
jb
jl
popa
inc
or
stos
stos
daa
mov
push
or
xchg
ret
sbb
adc
cmc
mov
nop
push
nop
cmp
scas
shll
loopne
mov
jb
and
add
sbb
push
mov
sub
mov
insb
sub
dec
pop
push
xchg
loope
jae
xor
mov
cld
and
mov
push
ror
mov
push
fnstcw
outsl
dec
adc
cld
rolb
jmp
test
out
aaa
dec
mov
jns
adcl
mov
sub
dec
push
lret
sub
or
aas
pop
test
cmc
or
and
ss
inc
int3
mov
jmp
cld
mov
inc
faddl
xchg
add
jno
xlat
enter
pop
aaa
jg
ss
xchg
les
jae
jae
je
scas
bound
or
aas
in
push
icebp
mov
loopne
xchg
aaa
inc
push
pop
inc
test
push
test
out
in
dec
gs
dec
and
add
je
mov
rcrl
mov
test
mov
xor
inc
divb
into
adc
lods
cld
shl
data16
or
pop
movsb
dec
cli
jge
mov
adc
sbb
or
in
push
xchg
adc
nop
mov
popf
icebp
scas
pushf
pusha
in
sti
cmp
movsb
or
ret
scas
out
or
out
dec
stos
cmp
mov
sbb
mov
mov
adc
sub
test
add
mov
test
orb
inc
or
popa
mov
gs
fmuls
cli
sub
insl
mov
xchg
jmp
leave
fdivs
pop
jg
push
fnstenv
or
movsb
fs
or
dec
pushf
addr16
xchg
adc
pop
fimull
xor
scas
pop
mov
or
lock
cmpsb
push
xchg
mull
push
subl
sbb
pxor
pop
jbe
pusha
pop
shrl
push
cmpl
dec
sub
js
or
clc
popa
clc
rorb
sub
cmp
fmull
repnz
sahf
cmc
add
sub
jmp
xor
stc
push
fs
imul
jnp
jo
ficompl
nop
xor
adc
mov
cld
add
stos
popf
jns
loope
daa
sub
push
jns
mov
mov
sub
test
stos
mov
lret
sbb
test
iret
sbb
aaa
add
mov
and
and
dec
dec
dec
enter
sti
add
inc
test
into
jnp
mov
mov
sbb
push
in
movsl
pop
enter
sbb
pop
imul
sub
adc
jae
in
cwtl
cwtl
clc
ficompl
add
fisttpl
mov
leave
jnp
xchg
dec
mov
stos
push
xor
xchg
mov
outsb
loopne
adc
fsubr
xor
push
push
xor
sub
mov
scas
xchg
mov
xor
push
loopne
fsubrs
dec
jmp
pop
out
or
cmp
pop
and
jno
fadds
xchg
and
inc
add
lret
rorl
xor
and
xor
and
sbb
outsb
pop
mov
cli
xchg
xchg
jmp
iret
cs
xchg
rcrl
dec
lcall
outsb
push
lcall
bound
jne
push
popf
fucom
decb
mov
test
mov
and
rcll
aaa
insl
mov
out
or
scas
xorb
cmpsb
inc
js
cmp
cs
andb
jbe
mov
enter
scas
sub
sar
cmp
mov
sti
inc
sti
cli
pusha
push
push
pop
fdivs
repz
aam
or
inc
cmp
cmp
mov
lcall
fwait
sbb
out
sub
dec
shll
lods
stos
movsl
std
jnp
outsl
inc
sarl
fcmovb
and
cmpsb
mov
cwtl
inc
jmp
sahf
fdivl
gs
out
les
aad
fisttpl
test
leave
fs
mov
data16
cli
and
lea
cmp
sub
lods
jl
mov
adc
shrl
pusha
ljmp
fadds
cmp
lds
imul
mov
sahf
lods
xor
loop
ss
cmp
jo
xor
add
push
sub
pop
popl
dec
mov
test
rorl
jns
and
movsl
aaa
xchg
xchg
xchg
inc
movsl
push
shl
icebp
pop
and
fs
faddl
add
pop
xchg
outsb
lret
push
pop
shrl
sahf
mov
in
jns
dec
and
cs
xor
repz
jbe
adc
gs
les
jb
push
mov
daa
neg
sbb
cmp
into
sahf
mov
push
inc
icebp
mov
out
adcb
fwait
mov
jmp
adcb
sub
fstl
xorb
outsb
and
mov
mov
sub
cmc
push
pop
add
jnp
incb
pop
xchg
mov
rol
scas
mov
push
xor
mov
stos
loopne
scas
push
inc
pusha
lock
lret
fsubrl
xor
add
std
out
xchg
push
js
divl
pushf
inc
jbe
daa
xor
ret
rcll
insl
insb
cmc
outsl
filds
call
arpl
cld
pop
cmc
or
push
inc
inc
mov
subl
pop
push
loope
mov
rclb
push
push
lahf
cmp
mov
adc
mov
xor
das
dec
xchg
ret
sysenter
ljmp
jg
mov
rcl
lods
popl
inc
data16
ficoml
arpl
fsts
push
rcrl
pop
mov
fcoms
jmp
mov
fldenv
leave
pop
adc
imul
and
push
sbb
pushf
dec
xor
push
shr
push
cmp
mov
int
out
mov
adc
cmpsb
pop
and
repnz
and
dec
mov
in
shrb
and
pop
xor
push
insb
jl
jle
mov
inc
ja
xchg
push
cmp
xchg
sbb
popf
jmp
pusha
mov
dec
call
ficoms
fwait
arpl
fsubs
ljmp
xchg
xchg
jnp
fmull
jmp
nop
pop
cmpsb
add
mov
push
ret
adc
lods
sbb
divb
or
shll
bound
jnp
add
xchg
loope
stc
je
jmp
xor
bound
xchg
mov
scas
in
xchg
dec
cmpsl
stos
in
fdivs
lds
jno
inc
lods
mov
adc
add
xor
dec
xchg
mov
subl
lret
mov
in
and
mov
cmp
in
inc
cmpsb
xor
outsb
shll
xrelease
pop
inc
adcb
imul
adc
pop
jne
fnstcw
mov
popa
xchg
fisttpl
mov
add
pop
cmpsl
push
loop
xchg
mov
orl
mov
push
out
cmp
shrb
loope
repz
jecxz
lods
mov
inc
xchg
aas
sub
orl
sarb
and
int
pop
div
ret
jg
repz
xor
outsb
jl
movsb
aas
stc
xchg
lret
mov
fiadds
loop
stos
push
sbb
lea
ss
push
insb
dec
pushf
scas
out
stos
dec
inc
std
movl
push
xchg
jnp
add
add
rorl
or
push
iret
and
out
xchg
inc
aad
or
mov
jl
cmp
xchg
adc
cmp
inc
sahf
lahf
jecxz
mov
enter
push
or
jne
loope
das
xor
gs
daa
sub
loopne
push
ljmp
inc
and
push
shll
lahf
inc
inc
xor
lret
stos
mov
xchg
outsl
rclb
gs
mov
shll
out
cmpsl
bound
mov
mov
and
ljmp
stc
push
adc
jmp
iret
mov
adc
jge
mov
adc
xor
and
shll
mov
scas
orb
nop
cmpsl
pop
in
inc
jge
ds
adcb
mov
xor
imul
out
jno
or
popa
icebp
imul
jae
test
sti
stos
push
rolb
sarl
adc
call
and
sbb
loopne
pusha
xchg
xor
sub
std
aas
mov
into
in
insl
dec
cmp
xchg
inc
xor
in
mov
mov
cmp
dec
das
adc
shrb
xchg
dec
add
out
sbb
mov
js
mov
sub
iret
iret
js
mov
xrelease
paddd
cli
in
and
lret
jecxz
dec
fistl
jmp
stc
cli
jnp
dec
mov
lahf
mov
pop
scas
pop
xchg
push
ret
xor
mov
sub
nop
inc
mov
or
cmp
jg
test
dec
xor
mov
mov
cmp
test
mov
mov
push
inc
mov
cmp
xchg
inc
push
stos
sbb
scas
push
sbb
sbb
pushl
lret
sbb
dec
and
inc
movsb
pop
lds
flds
cwtl
and
es
pop
jle
sbb
cld
fildl
sahf
sbb
sub
mov
sbbl
push
icebp
mov
ja
in
mov
ds
sub
notl
fidivrs
inc
stos
mov
jp
ret
rcr
mov
stos
hlt
mul
adc
pop
jb
xor
ds
sbb
or
or
push
in
lcall
pop
fisttps
imul
mov
push
dec
pop
mov
pop
adc
outsb
push
mov
mov
out
cmp
jp
push
insl
mov
cwtl
into
insb
adc
pop
jl
int3
sbb
or
dec
gs
outsb
out
in
cld
sub
jo
inc
loopne
and
or
hlt
faddl
lds
inc
scas
lock
dec
or
jp
mov
adc
and
mov
int3
das
mov
and
imul
inc
mov
js
and
xor
pop
mov
pop
scas
out
jge
mov
push
test
jle
mov
jbe
imul
or
mov
hlt
mov
sub
pop
xchg
dec
mov
jg
mov
je
or
sub
dec
cs
push
mov
outsb
xchg
lods
bound
or
cld
pop
pop
shrl
call
add
pop
push
bound
xchg
dec
adc
jae
pushf
movsl
push
sbb
loopne
in
fcompl
rorw
xchg
jbe
mov
faddp
int
and
imul
jle
lea
addl
sbb
lret
fwait
jb
pop
das
fwait
mov
aaa
std
inc
pop
out
fnstsw
sbb
cmp
js
andl
sbb
daa
sbb
popa
scas
addr16
push
mov
cltd
cmp
ss
lahf
add
sbb
aaa
fcomip
xchg
stc
hlt
jle
lds
pop
mov
ret
xchg
adc
or
ds
jnp
clc
adc
imul
adc
fiadds
scas
sbb
imul
pop
lcall
xlat
and
mov
add
pop
xchg
and
popf
clc
pop
or
fmuls
out
notb
xor
mov
popf
jge
jo
cmc
mov
or
mov
hlt
pop
into
gs
mov
not
mov
insl
mov
adc
xchg
fistpl
pop
fildll
fs
cld
sub
aad
mov
ds
cmp
pop
cmp
cmc
push
pop
daa
js
inc
ljmp
lahf
lcall
sarb
or
mov
push
lods
stos
and
fadds
aas
gs
push
idivb
fdivrl
lods
push
fldl2t
jp
mov
in
je
jb
pop
xchg
lds
out
or
sbb
pop
sbb
pop
dec
punpcklwd
pop
mov
es
addr16
mov
mov
jns
pop
cld
jb
fsubl
orl
sub
xlat
mov
sahf
test
pop
lods
filds
stc
xchg
xchg
hlt
mov
jbe
imul
jns
pop
xlat
ss
insb
adc
js
aam
movsl
mov
cmp
mov
and
or
jle
push
lock
xor
and
xor
in
sti
lea
jp
jns
insl
das
es
mov
mov
aas
mov
aad
mov
cmp
or
cmp
add
lock
scas
out
inc
pop
sahf
movsbl
lods
push
icebp
pop
or
xlat
iret
sti
push
repnz
jb
ja
insl
loope
or
outsb
or
fldenv
scas
cli
pop
ror
mov
mov
int
sbb
pop
pop
mov
sub
pop
jp
lea
or
mov
sbb
cmp
sub
sub
out
and
std
sub
inc
mov
add
cltd
movsl
or
in
and
ret
rcrb
sub
mov
adc
add
pop
fbld
mov
jbe
out
test
fisttps
mov
adc
fcoml
push
sbbl
xchg
mov
or
and
mov
and
leave
xor
popf
cltd
pop
fstps
pop
out
outsb
cltd
sbb
jne
sbbb
or
pop
pop
fwait
inc
and
mov
pop
frstor
fwait
bound
xor
mov
enter
cmpsl
rorb
cmpb
mov
cmp
nop
mov
out
mov
lods
inc
mov
lcall
lret
pop
in
shl
or
push
xorb
and
add
notb
inc
add
adc
lds
cwtl
adc
sbb
push
decb
and
dec
or
mov
lods
jmp
jle
ja
push
add
or
push
xchg
and
push
pop
mov
lock
mov
jae
cs
inc
mov
and
outsl
cmpsb
fsts
ret
jecxz
jne
adcb
out
in
popa
pushf
xadd
ret
stos
inc
sub
std
xor
out
fstpl
gs
bound
cmc
insl
hlt
arpl
and
pop
out
cli
fidivl
call
loopne
xor
xchg
out
out
pop
inc
jecxz
out
adc
lret
mov
lcall
je
push
mov
pop
jbe
cltd
nop
ss
pop
jno
data16
mov
daa
es
out
es
pop
jbe
lds
jno,pt
sti
jl
jmp
stos
sarl
cmpsb
or
xor
and
roll
xchg
scas
sahf
mov
jne
xchg
in
push
dec
pop
mov
ret
aas
insb
push
cmpsb
mov
push
jae
orl
mov
mov
inc
popa
addr16
dec
mov
mov
sbbb
das
neg
mov
sbb
ja
adc
js
adc
addr16
cli
les
mov
xchg
dec
dec
cmp
xchg
jae
jnp
or
xchg
lods
push
lahf
jle
mov
and
into
mov
test
ret
dec
cmp
call
daa
movsb
lahf
inc
adc
ja
sbb
lahf
sub
jecxz
out
aam
cmp
outsl
mov
in
mov
adc
stos
or
push
std
mov
jno
in
rcrl
jmp
scas
pop
test
fbstp
rcll
test
sti
jne
adc
xor
sarl
enter
ficompl
leave
jl
in
sti
mov
sub
dec
xor
cld
lea
pop
fiadds
add
jp
cmp
or
inc
iret
add
imulb
mov
or
sub
das
shrl
push
push
xchg
test
and
dec
stos
ret
mov
and
add
push
mov
xor
push
or
int3
add
sbb
push
sub
pop
sub
cmpsb
add
adcl
push
sbb
xchg
dec
loope
inc
mov
dec
inc
scas
jbe
jg
loop
pop
jl
inc
mov
dec
pop
pop
movsl
xor
ret
push
jns
xchg
imul
pop
push
push
rol
cltd
sbb
xor
enter
mov
pop
cmp
xor
dec
sub
xor
or
sub
fsubp
push
mov
xchg
les
add
rcrl
push
cmc
xchg
push
daa
cld
adc
push
pop
mov
xchg
popf
cmp
fsubs
les
cs
aas
into
outsl
xchg
fbstp
pop
push
icebp
in
jle
cli
roll
pop
mov
and
xchg
inc
jno
aas
cmp
out
sub
pop
xchg
mov
gs
sub
or
lret
aas
lea
and
xchg
sbb
xlat
in
scas
push
stos
in
lea
pop
mov
mov
addr16
mov
or
test
dec
das
movsb
mov
pop
cmp
rorb
rorb
inc
ret
nop
push
pop
outsb
and
sbb
leave
mov
xlat
pop
jb
add
out
jle
fdivrs
fnsave
les
adc
aad
push
insb
cmp
stos
cli
es
sti
pushf
mov
and
mov
jl
int
adc
push
mov
and
add
mov
jp
hlt
xchg
push
or
add
scas
and
adc
mov
pop
mov
pop
and
sbb
mov
and
push
mov
pop
repnz
aas
dec
mov
addb
push
ljmp
jge
fldt
dec
ljmp
push
or
aaa
push
cmp
push
pop
jmp
cmpsb
adc
pop
dec
dec
in
movsl
stos
bnd
jmp
push
nop
push
or
rcr
jo
sbb
inc
jmp
out
fbld
rcrl
ss
cmpsb
push
sub
daa
dec
adc
adc
mov
in
imul
jns
ljmp
into
mov
push
and
stc
cmc
xchg
sbb
push
das
add
inc
sbb
enter
lahf
cmp
aad
pop
xchg
pop
inc
es
aam
pushf
lea
cmp
cmp
loopne
inc
nop
inc
fsubr
fisttps
hlt
out
push
sbb
add
pop
cmpsl
test
popa
imul
inc
add
dec
adc
mov
punpckhbw
mov
test
and
push
cs
mov
xchg
mov
lods
adc
jle
pushf
in
push
mov
insb
out
popa
pop
push
jno
das
xor
mov
add
icebp
cwtl
stos
sbb
jns
jecxz
or
test
cmp
clc
pop
ror
shrb
int3
enter
aam
aad
int
bound
and
cld
cli
out
jnp
aaa
fs
mov
lret
aaa
dec
and
lret
sti
lahf
das
inc
mov
sub
fisttpl
bnd
mov
dec
rcrl
mov
or
cmp
pop
jge
xor
scas
ret
ret
push
bound
mov
ljmp
jns
mov
and
pushf
mov
cs
inc
sti
or
adc
dec
pop
leave
pop
lret
or
mov
jmp
lods
pushf
ja
cltd
pop
mov
stos
aas
jl
mov
adc
dec
jb
xor
xchg
mov
outsl
adc
inc
and
xor
sbb
dec
lock
fdivl
stos
inc
push
lahf
push
and
aas
push
std
inc
pop
cmc
stos
mov
das
ja
jns
fidivrs
push
out
fxtract
outsl
xchg
lock
xorl
daa
sub
cmp
scas
add
and
icebp
xor
pop
out
add
and
mov
and
push
jl
jge
jns
push
lds
and
dec
mov
inc
cwtl
adc
sbb
sub
xor
jns
inc
js
leave
leave
xchg
mov
neg
mov
cmp
scas
shl
enter
icebp
xor
hlt
popa
cmp
mov
adc
lahf
popf
sbb
addb
sbb
leave
push
mov
cltd
xchg
xor
push
adc
clc
mov
pop
jle
lcall
sub
into
pop
dec
pop
ja
xchg
mov
xchg
mov
push
insb
pop
jg
and
mov
mov
mov
xchg
push
adc
jbe
lock
and
cmp
aas
pop
or
xor
jno
xchg
inc
es
pusha
aaa
pushf
cmpl
jo
sarl
test
sarb
ret
cli
inc
inc
in
ret
push
pop
lods
js
sbb
adc
repz
mov
mov
and
xchg
sbb
cmc
xor
mov
cltd
dec
mov
sub
cmp
jo
inc
dec
or
inc
fstps
jo
sub
mov
jge
fisubs
mov
es
fwait
mov
mov
xor
dec
cmp
mov
lret
sub
inc
mov
cwtl
push
loope
push
lds
sbb
fildll
mov
loopne
mov
fstpt
cmp
xor
movsl
mov
sbb
inc
outsl
mov
popf
push
fidivrs
inc
imul
outsl
hlt
sbb
lock
adc
rep
xchg
idiv
xchg
mov
jmp
mov
int3
imul
loope
jae
xchg
xchg
insl
mov
ja
xchg
sbbl
pop
subb
cmp
sub
fcomps
dec
cmp
je
lods
or
sbb
stos
sahf
inc
addl
mov
add
imul
lock
clc
xchg
movsb
or
in
stc
movsb
pop
xchg
popf
aad
in
cmpb
inc
xchg
xchg
das
xchg
push
jp
repnz
push
mov
lret
fmull
add
dec
mov
mov
mov
clc
call
cwtl
jg
jno
repz
or
jns
addr16
jle
mov
std
xchg
pushl
push
ja
test
seta
imul
ja
dec
out
shll
or
mov
rclb
sarb
pop
mov
fnstsw
data16
ljmp
inc
cmovns
cmp
pop
mov
movsl
es
stos
sub
in
daa
mov
out
jge
dec
push
bound
pop
mov
xchg
loop
mov
lcall
pop
mov
or
xchg
sub
inc
cltd
and
cmp
repz
sbb
mov
mov
test
outsb
loope
push
jle,pn
out
outsl
cld
dec
cmp
iret
cli
push
and
filds
xchg
jmp
out
xor
or
test
es
test
mov
pushf
inc
dec
cs
je
call
movsb
cmpsb
in
out
shr
jmp
xchg
mov
inc
xchg
sbb
push
out
push
pop
mov
mov
add
mov
and
rcr
fsin
out
dec
xchg
sub
jmp
pop
jo
fsubs
call
jle
dec
test
push
push
pop
mov
jb
xchg
xor
pushf
into
and
mov
adc
sbbl
dec
lret
int
xchg
xchg
pop
xchg
out
mov
aam
mov
jbe
cmc
fnstenv
dec
and
imul
mov
or
sbb
std
in
insb
adc
les
fadds
xor
stc
cltd
xchg
inc
stos
das
call
push
daa
sbbl
sar
sarb
adc
mov
nop
mov
mov
shrl
test
sub
out
xor
ds
sub
rcrb
lret
sub
movsl
xchg
sub
mov
xchg
dec
dec
cs
pop
mov
lret
or
test
xchg
xor
xor
jg
cmpsl
shll
sbb
icebp
bound
jns
insb
adc
sbb
xor
xor
push
push
jae
andl
pop
dec
scas
addr16
dec
jmp
mov
jle
out
popf
repnz
push
shl
fdivs
pop
ss
pop
insl
cld
adc
fstp
gs
test
mov
dec
ds
cmc
mov
stos
lcall
scas
roll
daa
aam
les
push
lock
mov
add
add
ret
dec
add
mov
repnz
adc
jno
test
in
mov
fwait
push
clc
test
xor
ret
sahf
pushf
and
jecxz
clc
cld
addl
jnp
test
dec
add
xor
scas
xor
stos
mov
jns
adc
mov
ficompl
adc
loop
jmp
movsl
push
inc
jg
push
movsb
jo
sub
stos
sub
mov
in
aaa
adc
aaa
mov
or
mov
stos
aas
push
fsubl
leave
push
sub
lahf
ret
and
pop
jl
push
sbb
mov
imul
xor
push
movq
cwtl
adc
faddl
pusha
lret
xor
dec
lcall
inc
sarb
ret
ljmp
repnz
ret
movsb
es
stos
mov
xor
xchg
sahf
std
int
insb
cmp
sbb
popf
inc
hlt
mov
bound
adc
shl
inc
cmp
shll
inc
cli
xchg
and
lods
shlb
sbb
fiaddl
ret
das
cmp
sahf
or
mov
pop
test
pop
and
mov
data16
cmp
and
cwtl
aam
push
dec
mov
lcall
jecxz
and
lcall
add
inc
andb
inc
dec
pop
stc
mov
out
or
sub
sbb
scas
cmp
outsl
outsl
into
cmp
sbb
adc
out
mov
push
push
aas
roll
sbb
test
mov
dec
pop
lcall
pusha
push
inc
jecxz
jo
aaa
push
cli
inc
out
jge
push
mov
and
jmp
push
imul
rorl
inc
sub
cwtl
dec
and
lock
adc
xchg
cmp
loopne
cmp
sub
xlat
adc
jo
in
jecxz
sbb
sbbb
adc
inc
xor
sbb
test
mov
inc
icebp
add
lcall
ja
es
out
mov
xchg
push
mov
cmp
mov
aam
sub
punpckhwd
imul
jle
call
mov
js
push
mov
imul
dec
and
push
push
cmp
fbstp
or
cltd
imul
fnstenv
xchg
test
sub
std
into
aam
cmpsl
jns
fsubl
int3
mov
add
adc
mov
cmp
loop
mov
push
mov
mov
push
dec
xor
fs
push
jge
cmp
repnz
adc
push
jno
shrb
cmp
xlat
or
xor
bound
push
arpl
inc
cmc
fbstp
lahf
mov
testb
push
sub
addr16
js
inc
aam
testl
mov
rorl
jmp
lret
cmp
cmp
pop
iret
in
scas
push
sti
pop
in
nop
pusha
and
sub
shlb
jae
dec
aad
fwait
xchg
iret
mov
pop
sarb
push
lods
mov
rep
adc
pop
and
jmp
scas
lcall
daa
sar
mov
mov
stos
call
jmp
mov
fiaddl
push
mov
mov
icebp
mov
repz
inc
in
jae
inc
test
pop
nop
or
xchg
in
xchg
mov
sub
jae
movsl
pop
mov
adc
es
xchg
sbb
push
and
in
ja
es
xor
cwtl
stc
mov
movaps
popf
ja
ljmp
mov
repnz
sub
push
ljmp
ds
xchg
cmp
jb
ljmp
add
stos
into
mov
data16
dec
popf
xchg
icebp
arpl
mov
cli
sub
popl
lret
add
adc
iret
xchg
xchg
push
push
mov
fbld
inc
xchg
push
xchg
repz
mov
cld
cmpsl
popf
mov
mov
push
cmp
inc
xchg
dec
add
call
inc
lds
sub
insl
mov
and
lret
bound
mov
gs
push
lock
jno
add
ljmp
enter
mov
lret
sub
call
sar
dec
out
adc
psraw
lret
pop
xor
pop
xchg
add
dec
cmp
pop
out
fmulp
notl
popa
loop
into
cmpl
pop
add
sbb
or
in
iret
ja
push
mov
sub
push
fndisi(8087
shrl
cs
into
pop
mov
mov
mov
xchg
imul
and
xorb
jnp
push
xchg
pop
clc
xchg
sub
out
cwtl
ja
cmp
repnz
test
cmpsl
outsb
xchg
add
mov
int3
nop
mov
jp
jb
dec
fsubrs
sub
aam
scas
jmp
shrl
icebp
aas
dec
xlat
outsl
jne
gs
mov
addr16
dec
mov
add
pop
push
bnd
add
push
cwtl
push
mov
test
cli
lods
add
xchg
lahf
fwait
xchg
jae
mov
sub
xchg
repz
rcrl
mov
arpl
jno
pop
push
rcrb
mov
sbb
push
or
jnp
xchg
mov
cli
ret
insb
aaa
outsl
jno
dec
int3
lcall
leave
sub
add
stos
imul
inc
pusha
mov
sbb
cmc
pop
sub
jp
bound
addr16
xor
int3
push
xor
inc
sbb
dec
dec
loop
mov
test
sub
xor
mov
out
and
add
or
push
add
mov
sub
mov
mov
mov
xor
jg
jne
shll
insb
cld
sahf
dec
pusha
aam
xor
lods
mov
ret
adc
push
pop
mov
popf
sbb
enter
pop
test
sub
scas
push
jl
rcrb
xor
pslld
aam
ds
xor
mov
mov
mov
adc
jmp
outsl
int3
inc
sti
mov
cmp
rcr
mov
je
aas
add
sbb
mov
push
call
and
sbb
and
mov
cmp
cwtl
out
fs
add
out
xor
repz
stc
dec
mov
rcpps
inc
pop
je
mov
mov
dec
pcmpeqw
sub
hlt
or
add
xor
pop
sub
test
cmp
push
cmp
shll
jp
lret
lea
xchg
push
call
cmp
popf
sub
push
lea
lods
add
lods
cmp
mov
ret
cmc
stc
lret
in
je
inc
jge
je
sbb
inc
test
das
inc
push
daa
jle
push
imul
cmp
mov
out
and
lret
mov
sub
push
dec
mov
mov
aam
inc
jp
imul
sbb
jns
inc
cmp
fs
mov
pop
sbb
rcrb
pop
sbbw
push
mov
ret
mov
push
rcr
sbb
sub
out
or
mov
test
imul
ret
cmp
cs
cmc
lahf
xor
adc
data16
sub
js
push
orb
mov
in
rorl
shll
movsl
js
xchg
ss
outsb
mov
jge
mov
insl
imulb
sub
mov
mov
or
jae
je
loope
popf
add
cmp
sbb
sbb
mov
and
inc
dec
or
dec
mov
cld
lcall
fmull
lock
pop
push
bound
and
inc
out
mov
pop
dec
cmovs
jae
mov
inc
sbb
icebp
in
out
subb
dec
mov
repnz
std
andb
fcom
in
pop
mov
ficomps
out
mov
sbb
xchg
shlb
or
push
add
jg
dec
xlat
outsl
aam
pop
cwtl
mov
pop
mov
or
and
test
fiaddl
jmp
sbb
sbb
popf
add
xor
sahf
dec
popa
push
into
push
cltd
push
aam
xchg
xchg
sbb
sub
sub
test
and
lahf
jg
jo
rcll
shll
imul
cltd
pop
shll
in
cs
xor
arpl
jge
jno
divl
int
sbb
es
cld
adc
cmp
mov
jne
shrb
pop
jae
jl
add
imul
aas
enter
mov
sub
js
out
mov
sub
test
ret
add
int
ret
jp
adc
cltd
and
out
dec
push
out
mov
hlt
loop
mov
sub
mov
nop
mov
jp
push
jns
and
mov
shlb
and
les
lock
js
outsl
mov
nop
sbb
mov
inc
in
test
push
loopne
push
jge
xchg
outsb
add
push
mov
leave
shl
add
pushf
mov
call
fidivs
xor
xchg
popf
fistpll
mov
dec
mov
sti
cmp
push
ret
and
jne
repz
xchg
mov
or
test
outsl
inc
add
mov
call
adc
jmp
out
and
fisubrs
movsb
iret
stos
and
ds
jmp
fsubrp
mov
mov
sbb
cmp
push
sbb
jmp
cmpsl
outsb
orl
push
fistl
in
andl
pop
pop
adc
cmpl
outsb
pop
push
stc
add
cmp
xor
in
arpl
push
shl
add
aam
cmpb
cmp
dec
pop
jne
out
repz
adc
das
movsl
mov
arpl
jo
xor
mov
lds
faddl
clc
add
sub
mov
push
scas
arpl
mov
jmp
in
or
into
sub
les
xchg
mov
loop
inc
cmp
inc
cmpsl
mov
shlb
mov
fists
outsb
fcomip
xorl
leave
mull
iret
add
in
ret
inc
add
fidivl
in
sub
leave
or
ficompl
insb
mov
std
pusha
sarb
pusha
mov
aam
push
mov
sbb
sub
loope
loope
pop
rclb
jle
jnp
or
aam
call
insl
or
xor
xor
xchg
movsl
das
cs
into
pop
imul
out
hlt
add
mov
cmp
and
loop
pushw
sub
pop
adc
testb
sbb
push
pop
xchg
mov
mov
and
mov
outsl
shl
add
mov
push
add
sbb
sti
push
cmp
jae
mov
lods
sub
inc
jne
inc
jno
cmc
push
adc
jge
inc
inc
pop
push
and
add
xchg
insl
sub
scas
adc
faddl
hlt
push
lret
pop
mov
arpl
push
out
xor
xchg
ret
push
dec
and
sahf
inc
jo
push
lods
stos
sub
sub
pop
push
mov
orb
cmp
popa
inc
out
and
jle
sub
sub
pop
mov
cmpsb
pop
cmp
popa
or
xchg
pusha
ret
dec
mov
shrl
movsb
cmp
adc
adc
push
push
fidivrs
jne
or
inc
jl
and
cli
dec
pop
es
dec
jo
int
movsl
mov
add
xlat
rcrb
xchg
mov
dec
das
add
test
leave
jg
xorl
test
jp
pusha
xor
xor
cmp
cmp
cmp
and
in
xchg
ja
aaa
es
xor
fstl
xchg
clc
movsb
xchg
push
xchg
ljmp
dec
iret
rolb
out
push
stc
adc
push
mov
out
lods
dec
xor
push
jno
xor
dec
imul
sub
ret
lods
daa
cs
mov
and
mov
negb
sbb
ret
stc
call
mov
into
inc
pop
sub
dec
add
lock
cwtl
pushf
les
push
or
sub
sub
out
pop
lds
in
aad
dec
inc
mov
xchg
adc
into
cmp
and
jae
fcoml
sub
out
push
shr
fldl
mov
cmp
rclb
pop
dec
inc
push
cmp
in
mov
mov
fs
shl
xchg
pop
cmp
add
arpl
pop
xchg
mov
dec
pop
adc
jbe
js
or
and
pop
gs
loop
or
dec
sbb
negl
addr16
mov
jnp
insb
es
fs
xor
adc
lock
inc
lods
push
mov
pop
std
aas
insl
and
jnp
xchg
in
mov
cmp
sub
iret
and
pop
push
sub
adc
stc
paddsb
inc
daa
aad
add
std
outsl
jbe
or
cmc
cmp
out
inc
int
imul
in
pop
lds
das
test
fidivrl
rol
cvtpi2ps
push
in
popf
pop
cmp
enter
lock
pop
mov
negl
mov
test
cmp
cmp
mov
mov
dec
push
fwait
iret
jns
hlt
repnz
outsb
movsb
lods
mov
xlat
mov
fwait
lods
jnp
mov
cmp
sub
xchg
jp
std
test
fmuls
sub
mov
aad
leave
pop
cs
das
jg
dec
in
mov
xchg
jge
cli
fstpl
sub
lret
inc
cwtl
movsl
sub
push
dec
and
loopne
outsb
mov
stos
adc
push
js
mov
testl
popf
jle
mov
rclb
subl
int3
lock
adc
jno
cmp
dec
sti
push
push
xchg
xchg
call
pushf
jbe
ret
xchg
add
mov
ljmp
fmull
enter
pop
mov
and
mov
sub
jb
lret
dec
testb
int
cmpsl
sub
pop
add
jle
negl
sub
cmp
pop
xor
mov
pop
mov
jmp
mov
mov
dec
je
jg
outsl
cmc
adc
std
arpl
out
adc
call
pop
insb
push
mov
xor
out
jnp
hlt
pushf
stos
enter
nop
cwtl
enter
jo
hlt
add
sub
or
sub
cmp
jp
adc
sub
dec
cli
les
xchg
iret
test
push
xchg
sub
mov
and
mov
je
popa
jge
mov
mov
mov
pop
cmp
add
sub
push
sbb
mov
mov
jle
push
cwtl
xchg
xchg
dec
adc
push
daa
mov
loop
data16
inc
cwtl
xor
fwait
mov
popl
in
mov
adc
out
push
pop
stos
clc
pop
data16
call
sti
sub
lods
lock
movsb
clc
icebp
add
sub
pop
in
sti
inc
aam
es
nop
push
or
iret
sarl
adc
mov
adc
and
cld
repnz
xor
xor
xlat
call
test
lds
sub
out
in
jl
in
and
mov
jmp
push
xchg
adc
sbbb
fsts
out
popf
lahf
pop
mov
and
xor
je
js
out
test
mul
insl
dec
stos
jnp
inc
pusha
push
or
or
lea
pop
adc
std
mov
push
sbb
shlb
cmpsl
ss
xor
push
mov
bound
xor
subl
dec
stc
add
dec
mov
cmp
or
in
int
lret
pop
ret
mov
cmpsl
js
pop
mov
bound
inc
cmpsl
add
dec
jno
inc
dec
in
inc
sbb
jae
loop
test
ja
addl
add
mov
jmp
xor
ds
and
loopne
dec
shlb
xchg
or
push
popf
or
pop
movsl
dec
insb
xor
int3
mov
inc
cltd
inc
push
arpl
lods
repnz
ret
lret
outsl
jbe
pop
popa
shll
in
fcomp
and
cli
xor
xchg
cmp
sbb
mov
into
pusha
insl
sahf
in
jle
dec
sub
sahf
or
in
adc
jae
les
ret
addl
jmp
in
ss
mov
xor
fmull
jns
cmpsb
inc
stc
inc
add
xor
out
pop
pop
pusha
jmp
add
pop
lcall
mov
fistpll
out
pop
pusha
loopne
ret
sbb
push
jp
repnz
pop
and
or
pop
inc
mov
sahf
cmp
xor
and
je
ds
xchg
mov
mov
gs
and
mov
mov
inc
mov
pusha
cs
popf
and
movsl
outsb
jl
sbb
jl
xchg
movsb
dec
ret
push
inc
imul
dec
jge
in
fdivl
bnd
sub
adc
lcall
fs
rorb
mov
arpl
dec
mov
jmp
pop
xchg
jmp
enter
push
push
sbb
lods
int3
lods
loope
inc
pop
push
mov
scas
in
aad
out
sbb
fwait
rclb
aaa
dec
ss
into
jns
hlt
in
dec
push
add
jb
cmp
mov
fbstp
and
leave
adc
les
out
repnz
adc
in
mov
testl
out
xor
fimull
pop
sahf
or
inc
in
inc
jo
das
icebp
cmp
sub
inc
repz
fnstcw
sub
push
push
xchg
xlat
cmp
movsl
sub
xchg
ljmp
das
out
call
xchg
push
loope
and
pusha
adc
pop
mov
jmp
or
add
xor
sti
cltd
push
dec
bound
xor
pop
dec
dec
cltd
dec
dec
jbe
jns
mov
frstor
pop
pop
jbe
cmpsb
mov
out
repz
cmp
xchg
mov
outsb
push
bnd
sub
mov
imul
scas
pop
fdivs
xchg
fwait
mov
out
dec
jb
adc
adc
push
std
and
cmpl
lret
ds
pop
add
int3
imul
and
insb
out
mov
add
pop
fisttpl
cwtl
pop
mov
cmp
lods
es
add
lcall
jb
rolb
pop
jmp
jns
jecxz
lret
inc
or
test
pop
inc
push
sbb
lods
mov
mov
sbb
xor
or
ret
sahf
imul
mov
push
dec
fstpl
sbb
repz
sbb
cwtl
rorl
scas
decl
int
movsl
or
cltd
adc
mov
or
xchg
xor
xchg
and
cmpsb
jmp
negb
fadds
orb
dec
add
adc
sbb
push
repnz
daa
mov
or
addr16
jb
sahf
hlt
xchg
inc
sub
in
movsl
leave
jg
and
out
jecxz
rorb
sbb
or
mov
pushf
data16
fimuls
push
mov
pop
sub
inc
mov
out
in
add
add
jle
xchg
scas
xchg
jmp
insb
test
mov
pop
inc
push
xlat
nop
push
stos
leave
mov
int3
repz
mov
fnstenv
push
fwait
ljmp
in
stc
sub
mov
mull
scas
loopne
fimull
dec
dec
test
lret
jmp
sbb
add
push
xor
xor
pop
lock
xor
out
in
fidivl
lcall
jbe
sbb
lock
mov
movsl
and
adc
test
fwait
ljmp
dec
pop
aas
mov
sarb
ds
pop
and
aam
lret
adc
lods
jne
pushf
test
add
ljmp
xor
push
push
loope
sub
or
cwtl
dec
jle
inc
pop
add
jns
jb
push
sbbb
adc
xor
jge
push
sbb
aas
pop
sbb
movsl
rorb
xchg
mull
gs
mov
pop
mov
xor
jle
ja
sub
cmp
push
lock
int3
jbe
lock
xor
inc
insl
test
daa
std
movsb
repz
xor
sub
or
ja
sti
shrb
loop
insl
shr
mov
dec
jmp
cwtl
adc
or
mov
ror
xor
iret
dec
jo
aaa
into
jno
gs
mov
das
cmp
cli
xlat
push
or
lds
jb
call
stos
cmp
xchg
ljmp
insl
jb
lret
xchg
jo
ds
cltd
ljmp
inc
jno
mov
mov
mov
cld
outsl
sbb
xchg
test
pop
ljmp
mov
call
popa
adc
inc
mov
adc
push
xor
out
sti
or
fnstsw
sub
fsts
orb
inc
fldl
movsl
ret
mov
mov
mov
mov
rolb
fstl
popf
mov
adc
andl
loop
stc
push
or
arpl
sbb
nop
rclb
or
mov
pop
mov
mov
inc
popf
adcl
xchg
mov
test
cmc
mov
inc
pop
cs
testl
xchg
lcall
mov
outsl
fcomp
push
sahf
lret
xchg
lahf
hlt
mov
or
out
ds
inc
mov
lret
outsb
and
push
lock
scas
out
inc
and
dec
in
jns
loopne
shl
mov
ja
mov
push
cmpl
fcompl
mov
and
movsb
xor
mov
stos
dec
divb
fisttpl
out
dec
lods
sbb
xchg
lcall
mov
dec
pop
pop
call
push
je
lea
outsl
and
mov
mov
mov
push
mov
and
cmpsl
adc
mov
cltd
cmp
lcall
gs
movhps
push
loope
and
inc
sub
xor
jg
ficoml
push
mov
inc
xchg
cli
mov
aaa
add
lea
inc
mov
add
sub
cmpsb
pop
add
or
out
std
mov
cmp
pop
test
jb
sbb
test
nop
jg
loopne
xorl
push
push
jle
movb
repnz
push
mov
add
add
enter
cli
jecxz
scas
lods
leave
jbe
or
iret
arpl
lods
pop
mov
lcall
roll
dec
xchg
lds
push
mov
mov
mov
or
rcrl
nop
mov
xchg
mov
add
hlt
xchg
mov
test
mov
add
shl
sbb
leave
sbb
fidivrl
loope
push
loop
jns
or
ja
xchg
push
xchg
icebp
insl
insl
jne
pop
out
fwait
arpl
mov
out
jmp
fprem
push
insl
or
stos
mov
cmp
add
mov
fcoms
pop
movsl
mov
outsl
and
push
mov
fcmovbe
mov
mov
push
push
ret
or
jbe
jo
ja
dec
push
sub
push
pop
fdivr
cmpsl
inc
cmp
jge
xor
add
aas
jbe
iret
clc
and
sbb
add
or
jmp
out
cmp
sbb
add
dec
jb
rol
mov
pop
inc
adc
pop
sbb
aad
popa
lcall
mov
push
dec
jecxz
push
and
or
mov
dec
icebp
push
xor
cmp
shlb
push
js
daa
loop
pop
xchg
xchg
mov
lret
je
mov
sbb
jno
fld
stos
dec
cmp
hlt
xchg
dec
push
popf
xchg
pop
push
sbb
aad
lock
add
jl
repz
cmp
mov
or
inc
out
and
add
and
pop
jae
filds
add
fsubl
mov
les
test
test
push
arpl
in
xor
add
mov
xorl
mov
jno
sbb
dec
clc
dec
push
jle
cwtl
pop
fsubs
arpl
lret
jae
nop
jl
das
push
shl
aam
fstpt
jb
push
jo
mov
inc
test
aas
loop
dec
clc
popa
dec
and
lahf
sub
rcll
sbb
leave
push
xor
test
jbe
push
pop
testl
xchg
lret
dec
lods
popa
pop
les
pop
into
mov
fistpl
cli
xor
nop
mov
mov
dec
pop
jl
aas
ss
lcall
aaa
gs
lock
push
cmpb
push
out
shl
js
lret
pop
dec
pop
push
sbb
pop
test
and
and
mov
test
xchg
adc
je
testb
into
mov
aad
pop
out
insb
inc
cmp
and
or
leave
mov
push
add
push
out
dec
push
lds
gs
ret
lds
jb
call
out
jmp
bound
xor
jno
jbe
inc
hlt
pop
sbb
push
nop
cmp
cmp
push
je
push
push
xchg
ds
shlb
aas
mov
je
test
sub
mov
and
mov
faddp
imul
inc
cmp
or
aas
jge
xor
mov
in
jp
mov
int3
sbb
std
gs
cmc
jg
sub
lods
and
pop
add
rorl
insl
mov
sub
jecxz
iret
add
into
shlb
push
dec
js
ror
jge
insb
xor
push
xchg
loope
jns
push
sahf
leave
sahf
jge
mov
push
fs
jp
mov
inc
aad
lds
mov
in
aaa
pop
jmp
cwtl
insl
adc
dec
aaa
fwait
in
gs
lods
cmpsl
fincstp
sub
fs
lret
push
adc
pop
pop
jb
adc
js
jno
push
ds
insl
jo
add
and
mov
add
out
inc
add
adc
add
add
loope
inc
add
mov
add
jnp
add
lcall
and
out
pop
cld
adc
clc
nop
loopne
andl
jecxz
add
pop
gs
jmp
pop
pop
cld
paddusw
or
rcr
imul
loopne
adc
in
jnp
adcb
add
in
xor
push
pop
clc
in
lea
call
dec
xchg
cmpsb
pop
xor
mov
cmp
mov
das
and
inc
add
adc
fnstenv
stc
mov
pop
cmpsb
loopne
sub
mov
ret
aad
xlat
dec
add
jge
inc
subl
scas
xchg
jg
push
fsubrl
jp
movsl
lahf
fisubrs
mov
cmp
test
mov
or
add
mov
out
popa
movsl
lret
cli
into
cmp
je
out
push
jp
lods
or
decb
sbb
arpl
mov
bound
sbb
inc
das
jmp
push
mov
sbb
dec
fcmovbe
stos
je
shrl
push
lcall
out
jnp
dec
cmp
jno
jmp
shr
xchg
into
addr16
sar
outsl
loope
idivb
xchg
dec
leave
mov
xchg
jle
mov
push
insl
add
rcl
xchg
and
xchg
or
mov
idivl
inc
inc
and
mov
mov
dec
dec
dec
aas
xchg
adc
mov
cwtl
and
int
ja
nop
mov
in
and
pop
lock
push
aaa
jmp
les
push
lret
ja
int
xor
divb
loop
jecxz
cwtl
cltd
pop
nop
xor
int3
stos
leave
sub
push
mov
or
ja
sahf
mov
outsb
cmp
mov
cs
push
mull
xor
lcall
ds
cmp
pop
xor
daa
jg
xchg
ret
je
sbb
xchg
fmuls
pop
test
cld
and
ret
leave
into
inc
call
enter
aas
and
arpl
xor
lret
lods
popa
xor
fdivrp
inc
xor
xor
lret
negb
lret
mov
xchg
je
ja
pop
dec
out
loopne
mov
loop
add
inc
pop
lcall
adc
sbbb
mov
cmc
adc
lret
push
push
popf
xlat
out
sub
jp
in
dec
loopne
sub
sub
lret
inc
insb
test
test
test
cmc
pop
or
ss
adc
bound
inc
rclb
loop
test
push
out
jmp
repz
xchg
adc
and
mov
pop
push
scas
xor
mov
clc
lods
int
cld
push
push
ret
jae
xchg
or
push
xchg
pop
adc
ss
loop
add
movsl
push
fcoms
jmp
arpl
ss
loop
mov
es
push
add
std
jle
jp
jns
push
pop
mov
jno
and
mov
mov
pop
sbb
cmpsb
into
out
test
push
and
mov
or
push
lcall
push
push
arpl
arpl
cmp
xchg
lret
pop
add
shlb
sbb
jo
out
popa
std
push
js
or
push
in
scas
mov
sbb
insl
inc
orl
add
add
or
ss
xor
jae
int
add
cld
inc
jno
adc
inc
push
into
outsb
adc
aad
mov
jmp
push
jnp
std
rclb
or
xchg
es
jp
push
cld
xor
out
mov
push
and
stos
mov
sbb
jne
inc
pop
repnz
test
inc
cmp
add
jne
test
cmp
in
shr
mov
repnz
icebp
enter
sbbl
adc
adc
repnz
pop
mov
push
aad
pop
pop
cmp
aam
pop
cmp
inc
lahf
fst
mov
add
std
arpl
movsl
pop
dec
into
inc
lea
out
push
xchg
cld
xchg
and
jge
mov
xor
jp
sub
out
scas
push
adc
inc
xchg
fnstcw
iret
ret
mov
outsb
and
mov
and
invd
xchg
mov
ss
lods
xchg
icebp
add
jl
aam
lret
lret
mov
xchg
mov
imulb
and
jno
mov
push
imul
pop
in
clc
cmp
mov
in
add
xchg
pop
in
stc
ret
loopne
subb
dec
push
dec
loopne
ret
jbe
mov
and
push
fldcw
popl
sbb
mov
jle
dec
mov
roll
mov
cmp
inc
jecxz
sub
sbb
aam
push
stos
jbe
sub
mov
inc
daa
popl
iret
jo
and
addr16
pop
ds
jle
mov
outsl
xchg
and
xor
into
stos
push
push
inc
sbb
xor
mov
addl
pop
test
js
and
xchg
loop
xor
mov
aaa
push
sub
lret
jbe
dec
mov
pop
sub
pop
mov
and
aas
fisubrs
ret
cmpsb
out
sub
xlat
and
shrl
push
adc
lds
jo
xor
jo
and
pop
inc
ja
cs
mov
mov
cmc
or
sub
jno
and
iret
dec
pop
and
jo
lock
xchg
pop
xchg
jmp
es
and
cmpsl
inc
jl
pop
xchg
sbb
aam
dec
ja
repz
mov
je
imulb
cmc
cs
push
test
xlat
addl
push
mov
faddl
sahf
mov
jne
loope
jg
pop
sub
stos
mov
inc
fcoms
outsb
mov
inc
mov
jae
leave
iret
adc
push
adcl
xor
pop
sub
repz
add
xchg
lods
movsl
dec
dec
out
mov
sub
mov
in
sbb
icebp
popa
cld
hlt
out
loopne
lcall
nop
fsubr
test
xlat
sub
xchg
in
cmp
or
data16
addr16
out
data16
mov
mov
pop
adc
lods
mov
clc
push
inc
adc
add
aaa
or
sbb
mov
test
jge
fucom
dec
adc
ret
push
pop
mov
sbb
or
aam
enter
jmp
fcom
cmpsb
jp
lcall
imul
xor
cmp
test
jnp
cmp
mov
push
repz
jns
in
std
mov
dec
and
mov
aam
ljmp
cmp
iret
into
bound
test
mov
pusha
xchg
je
loope
adc
nop
ret
add
les
jg
xchg
adc
jg
ja
mov
jecxz
inc
and
pop
mov
jnp
mov
cmp
mov
push
movsb
bound
enter
xorl
sub
mov
fst
sbb
test
jbe
fistl
addb
adc
push
out
mov
lahf
in
sub
adcl
stos
outsl
ja
add
and
inc
cli
test
addl
or
lds
sbb
mov
std
jle
pop
ja
out
lret
jno
or
lock
nop
xchg
push
movsb
cs
xchg
xchg
negl
jb
insl
fidivrl
mov
fbld
mov
daa
test
fsubrs
loop
sahf
fbld
scas
negl
sub
mov
xchg
into
ljmp
sbb
mov
sub
mov
xchg
scas
lea
out
in
fwait
or
pop
ss
xor
mov
aaa
das
icebp
psubq
mov
clc
adc
xchg
out
enter
sub
popa
adc
lods
je
or
mov
mov
imul
pop
xor
push
jmp
jae
sbb
add
xchg
leave
xchg
xchg
fwait
cld
test
cmp
lret
sub
inc
cltd
xchg
data16
push
dec
ss
repnz
xor
dec
dec
cmp
arpl
movsl
cwtl
imul
lea
outsl
push
out
cmc
ret
add
fildl
jmp
adc
ds
adc
loop
cmp
add
out
in
mov
hlt
adc
pop
mov
hlt
or
and
out
stos
imul
mov
out
dec
pop
aas
shlb
decl
pop
cmpsb
outsl
idivw
cmp
bound
divb
cmp
mov
int
cltd
mov
mov
jno
inc
mov
add
cmp
das
popa
push
mov
inc
stos
lret
dec
aad
jno
jg
loope
lods
loopne
add
add
subl
pop
ret
daa
ficoml
dec
xchg
cli
sub
test
mov
mov
sarl
incb
xor
clc
xlat
add
add
push
pop
add
and
inc
push
dec
add
xor
ret
dec
pop
mov
popa
ss
cmc
ds
or
dec
push
std
push
cmp
mov
xor
inc
mov
and
xchg
pop
add
inc
push
jb
jecxz
lods
lcall
mov
add
and
test
stos
cmp
mov
imul
dec
das
jno
jnp
leave
sbb
mov
sub
bound
sbb
push
mov
adc
jno
or
hlt
mov
pusha
and
sahf
mov
xor
fnstsw
jne
sbb
scas
add
fimuls
clc
stos
mov
mov
out
adc
mov
roll
cmpsb
imul
cmp
jbe
scas
mov
jg
stos
inc
movsl
xchg
pop
mov
mov
rcl
daa
clc
inc
out
mov
sub
jl
out
stos
or
mov
push
cmpsb
int3
cmp
rorl
xor
cmp
mov
out
rcrb
inc
xchg
jnp
mov
jno
ret
nop
or
adcb
loope
ja
pop
xor
and
lret
shlb
xor
loope
hlt
jo
mov
fidivs
pop
fsts
push
stc
loope
leave
mov
ds
dec
mov
dec
pop
fldt
mov
mov
sbb
xchg
pop
adc
aam
das
push
popf
mov
mov
std
dec
bound
sarb
push
ds
shrl
sub
and
dec
sub
add
loopne
xchg
jbe
insb
ficompl
insl
and
out
mov
gs
cwtl
mov
mov
or
repnz
pop
fldl
int3
pushf
xlat
hlt
lret
dec
xchg
or
push
stos
xchg
mov
stos
jecxz
rolb
out
pop
pusha
pushf
lret
icebp
xchg
dec
addr16
outsb
pusha
xor
mov
sbb
aam
jmp
pusha
xorb
icebp
jnp
pop
jnp
bound
sub
inc
cmp
inc
sbb
push
loopne
repz
arpl
gs
orl
outsl
inc
xchg
and
mov
fnstcw
pop
lret
add
jge
mov
sbb
jb
ljmp
cwtl
movsl
shr
cmp
mov
inc
repz
cmp
and
cmpsl
mov
mov
aad
pop
push
iret
xor
adc
adc
iret
cltd
rcrl
mov
test
pop
add
ds
add
shl
cltd
mov
cmp
jecxz
sti
lods
scas
or
lods
jo
mov
pusha
sub
loopne
dec
sbb
sub
push
in
pop
testb
xchg
xchg
pop
stc
push
jae
loope
dec
movsl
cmpsb
test
cld
gs
stos
jg
test
fwait
test
daa
cmp
xor
outsb
je
mov
lret
push
xor
fwait
lods
cltd
je
mov
jmp
jge
sub
idivb
sbb
or
ljmp
stc
dec
andl
nop
in
cmp
lods
sbb
jg
mov
pop
inc
imul
inc
mov
jmp
stos
sbb
cmc
loop
jg
cmpl
and
in
mov
shll
loope
insb
ffree
rcr
shlb
shlb
and
and
pop
lahf
lods
adc
mov
cmc
inc
pop
hlt
jbe
es
sub
popa
icebp
or
je
dec
add
sub
scas
cltd
in
fildll
test
lret
sub
out
xor
loope
push
movsl
shll
xor
js
sbb
in
add
push
and
dec
fsubrs
sbb
std
insb
out
and
out
mov
leave
cmp
inc
leave
fstp
call
jge
cmp
into
std
and
sbb
rorb
push
adc
in
mov
dec
jmp
push
mov
jb
push
sub
cmpsl
push
ficoml
out
rcrl
aaa
dec
mov
pop
inc
sub
xchg
pop
dec
mov
fs
dec
mov
popa
xchg
daa
imul
sub
xchg
hlt
mov
pushf
cmc
mov
fcoms
stos
inc
and
pop
inc
inc
in
in
push
and
in
xor
cli
jae
pop
fdivs
les
cmpsb
stos
adc
loope
je
in
stos
enter
pop
cmp
jl
lods
mov
or
dec
lods
mov
lahf
mov
mov
lret
or
test
jg
jbe
das
or
push
adc
shl
jl
push
mov
addb
sub
lods
fdivr
adc
out
dec
and
mov
and
xor
inc
xor
shll
popa
aaa
sub
sbb
jg
jns
ret
xchg
leave
in
pop
scas
push
imul
xchg
cld
fdivr
mov
and
addr16
push
sub
outsl
xor
ret
das
shrb
mov
pusha
inc
lods
xor
jmp
push
stc
push
xlat
xor
adc
arpl
movsl
sbb
out
repnz
clc
xchg
int
ret
inc
sbb
jo
cmc
mov
popa
sub
loop
int
and
push
stc
xor
xchg
add
or
icebp
aam
hlt
or
arpl
cltd
enter
mov
pop
nop
mov
mov
fs
mov
add
mov
jne
mov
iret
sidtl
repnz
mov
insb
cmp
leave
cld
and
inc
arpl
sbb
pusha
insl
or
lods
sarl
fdivrs
mov
pop
dec
sub
test
dec
shufps
jmp
push
jo
cld
cmpsl
enter
and
cmp
iret
test
dec
jge
popf
jno
out
je
fidivs
lds
jmp
test
cwtl
add
mov
aam
repnz
xor
lcall
jae
inc
xor
cmp
or
call
sti
xorb
push
jno
push
fidivrs
hlt
add
testl
and
xchg
mov
sbb
fadd
or
aad
ljmp
jmp
popa
popf
and
cld
adc
out
insl
xchg
out
fwait
dec
xor
inc
mov
add
mov
add
scas
clc
icebp
push
mov
cmpsb
mov
std
inc
arpl
push
daa
arpl
adc
inc
inc
mov
js
cmpsb
data16
xchg
enter
add
pshufw
push
sbb
das
ja
je
jnp
adc
cmp
inc
inc
out
dec
cmpsl
in
adc
into
shll
data16
rcrb
lahf
in
jp
arpl
iret
or
test
inc
sub
xchg
int3
push
xchg
jp
lret
out
mov
test
push
in
loop
popf
xchg
call
aam
lods
stc
pop
pmaxub
int
fs
adc
mov
outsl
and
push
out
lea
sub
js
cmovbe
mov
daa
sbb
adc
in
inc
das
cmpsb
xor
movsl
dec
sbb
adc
iret
pop
jae
jae
out
and
ds
pusha
dec
cs
cmp
int3
mov
shrl
mov
mov
mov
dec
enter
jnp
push
mov
es
mov
mov
pop
incl
insl
adc
scas
xchg
mov
subb
aas
movsl
pushf
adc
add
push
mov
xchg
in
fcompl
les
cs
add
iret
aad
in
aas
ss
or
inc
nop
call
cmp
jmp
addr16
inc
mov
aam
xchg
std
dec
test
mov
jmp
sub
mov
cmp
push
mov
negb
xor
jle
xchg
addr16
push
stc
xchg
mov
or
out
adc
in
hlt
lcall
stos
icebp
fsubrs
and
cmc
aam
jle
push
push
mov
aad
mov
dec
sahf
test
pop
adc
lret
sub
lock
cmc
mov
adc
push
jmp
jl
repz
pop
jg
mov
mov
mov
fcmovb
int3
adc
fsubp
fs
push
pop
or
movsl
sbb
sti
dec
or
stc
push
xchg
mov
add
xchg
bound
dec
sbb
xchg
xor
pop
and
popf
push
mov
jle
dec
inc
int
lcall
mov
push
push
loope
jp
mov
and
mov
jg
xchg
push
cld
add
add
and
aaa
xor
ss
pop
push
or
enter
pop
aaa
lods
lea
popa
int
and
insb
insb
imul
cmp
arpl
test
push
into
push
mov
pop
ret
jmp
jns
inc
sub
and
sub
mov
cs
and
in
push
sbbb
jne
sbbl
stos
cmp
lods
cmp
push
sub
adc
rcl
stos
ffreep
sti
jnp
add
inc
pop
stc
loop
lea
xchg
jno
fs
and
ret
mov
xchg
push
dec
test
dec
hlt
cmp
dec
adc
in
bound
repz
mov
push
ret
mov
data16
addr16
cmp
dec
aaa
sub
movsb
cmp
jl
sbb
lods
movsb
sti
stos
mov
cld
add
mov
dec
sub
mov
xor
pop
push
adc
sbb
cmpsb
ljmp
cmp
jg
dec
fistpl
fs
push
je
push
xchg
mov
mov
xchg
imul
aad
fwait
mov
mov
cmpsb
in
aas
mov
std
fsubrp
cmpsb
inc
repz
mov
cld
arpl
adc
push
dec
aas
les
icebp
adc
mov
inc
imul
mov
push
cmp
jle
cmp
sbb
sbb
adc
lods
xchg
mov
add
jle
jle
mov
fiadds
mov
outsb
jg
jp
js
jmp
push
lret
cmp
pop
ljmp
jge
sub
negl
movsb
sub
xor
adc
pop
fnsave
cs
pop
dec
mov
inc
fsts
push
lods
xchg
gs
or
jmp
push
shlb
cmpb
in
incb
and
loop
cmp
sarb
mov
test
lahf
negl
int
and
jl
xchg
insl
or
je
cmpsl
cld
or
in
stos
jmp
xchg
add
lods
test
ret
mov
cmp
xlat
inc
subl
jo
mov
lret
mov
mov
sbbl
adc
popa
adc
call
push
bound
fildl
or
cmp
xor
mov
stos
sub
iret
into
cmp
or
push
in
jb
adc
cli
cmp
add
inc
push
adc
in
imull
gs
cs
pushf
test
loope
ljmp
mov
push
mov
test
call
push
in
adc
test
imul
mov
cmp
decb
push
repz
fs
popl
dec
into
cmp
lret
mov
and
int
testb
add
leave
cs
sub
xchg
idivl
mov
lods
sub
leave
scas
xchg
fstp
into
popf
cmp
mov
inc
in
sub
in
push
push
pop
push
mov
jmp
or
mov
inc
sub
stos
push
dec
xchg
sahf
fsubrs
sub
inc
jmp
scas
ljmp
pop
lcall
inc
mov
mov
fidivrs
sbb
xchg
aaa
les
dec
ljmp
pushf
sbb
sub
neg
loop
aaa
cmp
notl
inc
mov
push
inc
movsl
pop
xor
or
mov
adc
add
ficompl
dec
pop
test
notl
int3
ja
mov
push
or
cmp
stos
ret
rcl
mov
jp
sbbl
lret
out
loopne
ja
adc
pop
sbb
fwait
push
mov
sub
pusha
add
dec
mov
dec
or
test
adc
sti
push
mov
pop
fisttpll
int3
and
mov
pop
pop
out
es
pop
lcall
negb
mov
adc
mov
add
dec
add
push
adc
cmpsb
sub
sbb
test
inc
sbb
hlt
outsl
repz
movsl
mov
and
ficoms
sbb
cmp
mov
aam
jnp
sahf
rcll
inc
xor
imul
divl
mov
iret
push
xor
aam
sub
ss
jmp
outsb
push
clc
jmp
rorl
mov
into
dec
cld
ret
idivb
imul
xchg
out
push
shll
push
jns
nop
rorb
or
cmpsl
xor
sub
xor
dec
test
mov
inc
dec
enter
pop
mov
popa
test
lcall
push
rol
xchg
sbb
push
mov
mov
orl
xor
in
fsts
xor
repnz
sarb
push
addr16
movsb
not
js
fistps
dec
sar
js
pop
or
out
jl
and
mov
xchg
bnd
push
outsb
jl
out
daa
loope
out
sub
sub
vsubss
mov
xchg
fs
lods
pop
sub
popa
pop
add
sub
cmpsl
sub
dec
xor
int
mov
xor
out
push
aam
push
and
push
int3
mov
add
je
in
fcompl
lcall
push
mov
loopne
pop
ds
jmp
fs
inc
in
mov
stc
xlat
fsts
mov
jg
push
lods
movsl
cld
pop
addr16
mov
cli
pop
mov
loopne
sub
ret
xchg
cli
movsl
lahf
jmp
test
sbb
icebp
cmp
or
inc
in
arpl
cwtl
divl
gs
push
jecxz
or
leave
cmp
inc
push
jns
jno
cmpsb
add
adc
mov
leave
cmp
dec
fcompl
xor
mov
xchg
xchg
or
cmpsl
mov
shll
jae
xchg
in
jnp
hlt
or
loopne
push
pop
js
das
aam
mov
push
add
ss
out
xor
scas
lds
adc
dec
arpl
into
cmpsl
cmp
mov
inc
mov
adc
mov
mov
pop
mov
adc
rcll
xchg
add
mov
mov
loope
add
rclb
mov
and
add
cwtl
mov
addr16
and
fs
mov
mov
dec
ja
mov
add
fxch
insb
mov
pop
std
jb
inc
dec
and
adc
aaa
sbb
aas
lcall
in
cmp
clc
out
das
mov
dec
arpl
fistpll
mov
fnstsw
dec
xchg
out
andl
cmpb
movb
rclb
push
mov
jb
xor
or
xchg
sbb
stos
insl
test
xor
dec
xchg
sub
ss
lock
lods
mov
mov
pop
push
test
lret
mov
mov
adc
jge
jmp
xlat
mov
sahf
in
out
icebp
out
sub
jecxz
aas
adc
jne
in
bnd
lret
lock
mov
pop
mov
inc
stos
ret
mov
fwait
movsl
cmpsb
cli
cmpb
xor
inc
ljmp
int3
inc
push
sub
adc
ljmp
loop
jb
push
inc
push
js
addr16
imul
mov
repz
popf
cld
cmp
fs
outsl
jmp
inc
xor
cmc
xorl
fisubs
xchg
out
cmovno
fldenv
addr16
ljmp
jne
andb
mov
daa
mov
fs
jl
rcr
cli
push
ljmp
test
movsl
xchg
jno
xor
addb
in
insl
aad
cld
xor
jb
lods
sbb
cmc
loope
cmpsl
inc
es
stos
inc
sbb
mov
add
jns
mov
pop
sbb
imul
loope
sbb
adc
mov
pop
mov
inc
or
loopne
push
xchg
cmp
test
xorl
in
idiv
out
push
mov
jmp
imul
mov
popf
xchg
lods
movsb
mov
mov
addl
adc
fidivl
dec
je
or
or
sub
into
icebp
scas
lods
adc
xchg
xor
js
insb
or
aas
ret
sub
loop
adc
xchg
mov
sub
leave
inc
cmp
in
push
mov
add
xchg
cmpsb
icebp
pop
cmc
leave
mov
or
adc
mov
gs
ja
jmp
or
ror
sub
pop
xchg
repz
rorl
fldenv
pop
idivb
stos
push
push
dec
pop
jl
ja
mov
aad
xorl
pop
cmpb
ss
xor
test
and
cmp
cmp
mov
inc
imul
pop
das
and
cmp
push
dec
jl
shll
lret
stc
push
aad
inc
xchg
pusha
repnz
lret
jp
mov
fnsave
inc
sub
dec
cs
stos
mov
sub
jns
adc
or
jno
push
dec
cs
or
dec
jmp
and
aaa
test
cmp
inc
jns
dec
test
mov
gs
ss
adc
popa
cmc
jl
imul
xchg
pop
rol
or
mov
add
push
leave
pop
inc
mov
daa
inc
dec
fs
outsl
add
push
mov
add
inc
sbb
pop
into
adc
call
das
insb
insb
fwait
fs
fbstp
mov
push
js
mov
push
mov
mov
and
ss
cmp
pop
js
or
add
xor
push
lret
repnz
mov
jb
jo
push
mov
cmp
xlat
outsb
nop
sbb
sahf
aam
dec
xchg
xchg
push
int
sub
inc
gs
add
test
mov
ljmp
cmp
dec
cmpsb
pop
add
mov
ja
add
sti
jne
int
mov
cli
mov
jns
sub
mov
jb
cmp
dec
mov
repnz
outsl
mov
movsl
cmp
dec
lcall
test
pushf
cmc
pop
mov
xor
pop
out
push
in
dec
push
xchg
pop
out
mov
jbe
dec
add
cs
pop
mull
dec
push
mov
xor
and
pop
fcoms
decb
test
fsubr
adc
ret
fisttps
test
inc
jp
in
jbe
enter
push
mov
inc
scas
mov
sub
add
test
ds
out
out
xorl
mov
leave
testb
push
xchg
cmc
in
push
mov
lahf
push
pop
lods
xor
notl
dec
lods
or
fidivrl
lock
cmpsb
push
movsl
mov
orb
stc
rcrl
pop
mov
bound
mov
add
jg
sbb
enter
push
fwait
lret
mov
fidivrl
xchg
mov
stos
pop
jne
pop
scas
mov
jle
adc
imulb
jne
int3
xchg
inc
leave
imul
mov
jmp
pop
sbb
dec
sbb
into
xchg
mov
ja
cmp
jle
sti
out
outsl
in
test
insl
inc
roll
out
lea
xchg
mov
js
dec
cmc
pop
das
mov
divb
cwtl
add
je
in
testl
mov
adc
adc
test
or
imul
dec
push
xchg
add
xchg
cmp
push
das
in
negb
std
mov
bound
mov
push
xor
in
sub
pusha
rolb
pop
sub
and
jg
sub
inc
dec
sbb
dec
scas
pop
sbb
test
or
cmp
mov
lods
inc
loope
fsts
lcall
roll
adc
inc
and
rorb
ljmp
jne
sbb
cmp
ljmp
es
pusha
and
add
addr16
or
je
adc
jle
xor
adc
adc
adc
imul
fidivs
jle
clc
sbb
iret
lods
pop
pop
pop
sub
popf
int
inc
cli
xor
lea
and
popf
test
jge
hlt
adc
pop
inc
push
je
test
mov
add
adc
push
push
iret
xchg
xlat
sub
jle
insl
mov
aaa
fs
lret
movsb
les
cmpsb
push
ret
cmp
push
or
xchg
lret
sub
add
ficomps
adc
add
pop
inc
mov
mov
push
in
inc
mov
movsl
inc
xchg
pop
int
add
jae
xchg
and
mov
push
popa
lret
sbb
rcll
dec
jl
in
test
stos
jle
into
jb
imul
addb
cmp
into
adc
cmpsb
scas
pop
sbb
out
shlb
pop
inc
jne
lds
stc
mov
or
stos
fs
mov
mov
aaa
cwtl
shlb
sub
mov
divl
add
pop
cld
sahf
dec
hlt
nop
pop
cmp
pop
insb
or
add
cwtl
xlat
sti
insl
inc
add
stc
rcr
and
out
testl
xor
ja
sub
jnp
out
std
jae
add
mov
cmpsl
adc
xchg
push
into
decl
mov
ja
cmp
mov
jo
add
or
jg
jle
push
mov
dec
shrb
repnz
pop
test
mov
adc
sti
xchg
xor
mov
inc
dec
pushf
pushf
out
sbb
ret
pop
mov
mov
shll
xlat
stos
xchg
push
dec
cwtl
nop
xchg
sbb
or
in
out
jne
and
es
pop
inc
pop
pop
enter
sub
stos
dec
imul
adc
aaa
pop
lret
cwtl
mov
sbb
pop
jns
movsl
add
adc
fwait
repz
adc
mov
insb
insl
bnd
mov
ret
mov
fwait
jge
mov
push
pushl
mov
jbe
inc
cmc
sysenter
stos
mov
mov
push
das
pop
sub
sahf
mov
ja
jmp
insl
loopne
push
cltd
dec
xlat
sub
adc
jg
ret
int
lret
inc
pop
dec
jo
addl
jns
out
adc
rcrl
xchg
and
daa
push
inc
lods
sub
or
sahf
xchg
mov
cli
inc
cmp
imul
mov
mov
xor
shlb
lret
cmpsb
xchg
jb
nop
sub
pop
in
into
push
cltd
sbb
push
dec
nop
pop
xor
insb
mov
cltd
cmpsb
xchg
mov
fimuls
adc
ja
mov
adc
out
leave
mov
call
mov
push
and
dec
imul
xchg
rcrl
stc
mov
addb
cmpsl
stos
cld
ljmp
cmp
adc
stc
push
add
sbb
inc
leave
lahf
cltd
xchg
dec
rcr
sbb
add
dec
pop
sbb
stos
xor
test
cmpl
ds
movsb
rcr
int3
jbe
and
insl
lcall
push
and
cs
shrb
mov
cmp
push
lods
sbb
clc
inc
mov
ret
mov
jne
call
inc
cmpsl
das
push
cmp
jno
cmc
push
jne
pop
stos
push
dec
dec
in
in
and
jg
orl
ss
inc
xor
in
sbb
inc
cs
push
sti
div
xor
sbb
cs
sbb
mov
jb
xor
jns
roll
inc
jb
mov
add
jl
lret
push
jge
cmp
mov
ffreep
xor
ret
push
or
cmpsb
loope
fs
cmpsl
gs
dec
fwait
lahf
int
loop
dec
sbb
test
shll
xor
push
loop
sbb
fcomi
enter
mov
and
pop
in
test
cld
jnp
fiadds
insb
sbb
js
mov
inc
ds
out
bnd
mov
int
adc
push
mov
add
push
pop
mov
test
pop
mov
xchg
icebp
inc
fsub
mov
and
in
mov
cwtl
mov
faddl
enter
push
jge
push
out
fucomip
arpl
int
gs
test
xchg
mov
xor
outsl
arpl
scas
shlb
in
je
xchg
inc
insl
das
ds
xlat
add
jb
adc
inc
rorb
cmp
subl
dec
inc
and
inc
adc
xchg
cmpsl
jb
test
test
and
xchg
test
fwait
dec
pop
rcr
fwait
jo
pop
and
std
mov
inc
push
pop
repnz
xchg
add
mov
mov
lods
push
fcoms
or
fiadds
call
push
fcmovnu
jg
pop
arpl
push
or
mov
xchg
mov
shll
mov
xchg
cmp
inc
cmp
xchg
and
insb
pop
xchg
fdivl
repnz
fdivl
sub
jno
sbb
ret
les
xchg
mov
cmp
mov
lods
xchg
popa
xor
mov
mov
insl
cmc
cmpsl
es
xor
sub
pop
enter
mov
pushf
push
pop
mov
xor
adc
rorl
insb
aas
dec
sub
hlt
xchg
xor
nop
iret
pop
aam
mov
xor
lock
xor
rorl
incb
addr16
icebp
sbb
in
mov
mov
pop
jno
fisubl
pop
std
mov
insl
int3
icebp
and
pop
mov
pop
xchg
lods
dec
sub
pop
insb
fldenv
lods
mov
ja
push
xor
xchg
jne
and
inc
dec
sbb
shufps
push
test
inc
add
ds
ja
mov
int
ljmp
push
addr16
rorb
cmp
xor
lock
addr16
xor
and
adc
lea
out
sbb
addr16
sbb
fcompl
push
lcall
dec
mov
add
int
pmaddwd
mov
andl
adc
stos
inc
mov
inc
cmp
adc
ret
xchg
mov
jecxz
ljmp
xor
pop
fwait
inc
jmp
adc
cmpsl
std
pop
clc
sub
jne
push
mov
push
stos
or
jecxz
push
nop
push
adc
jbe
and
stc
lock
jl
push
rolb
pusha
jge
jnp
push
pusha
bound
repz
mov
fs
cmp
jg
xchg
mov
jmp
adc
fstpt
pop
dec
pop
mov
lret
es
adc
xor
mov
aas
fwait
test
mov
mov
jno
inc
jae
sub
pop
adc
ds
mov
cmp
adc
sbb
stos
push
push
js
dec
hlt
test
gs
push
fnstcw
loope
dec
dec
push
mov
sbb
mov
xchg
arpl
sbb
icebp
outsb
xchg
jae
push
push
xor
xor
xchg
mov
mov
insl
push
test
push
daa
sti
popa
push
loopne
mov
xor
mov
mov
aas
mov
addr16
push
in
inc
cltd
pop
cmpsb
dec
mov
imul
aam
push
push
sti
xor
clc
mov
nop
mov
mov
lods
pop
xor
popa
dec
movsb
xrelease
scas
cmp
sbb
test
in
out
adc
mul
xlat
cmp
fidivrs
jae
xchg
sbb
loopne
andb
mov
pop
orb
dec
sbb
in
cltd
sbb
sub
inc
es
popa
jo
stos
test
mov
icebp
pop
mov
js
sbb
push
pop
jne
lods
subl
cmp
xlat
jns
mov
xor
idivb
push
jecxz
sbb
cmp
or
sbb
adc
lods
icebp
rorl
jg
mov
dec
push
sub
adc
ss
sub
dec
jno
mov
subl
cmp
cld
popf
mov
fsts
sbb
popa
daa
pop
loopne
inc
daa
jbe
xor
jmp
leave
cmp
mov
add
cmp
iret
mov
es
xor
scas
inc
or
ja
gs
movsb
in
xchg
loopne
adc
push
js
out
pop
cli
mov
imul
push
xchg
shl
pop
jp
test
arpl
aaa
inc
mov
jmp
sub
sub
js
mov
gs
or
sti
cmpsb
jecxz
sbb
lods
imul
lahf
out
shll
sbb
push
lahf
xchg
outsl
jo
ss
jle
into
jo
xor
cmp
dec
mov
leave
inc
xorb
nop
mov
fs
pop
and
mov
lret
fwait
add
outsl
shrb
adc
adc
gs
scas
xor
jae
or
je
mov
push
pushf
cltd
movsb
or
mov
mov
jbe
data16
pop
jb
mov
lock
in
push
dec
addl
pop
rcrb
loop
or
sbb
and
enter
rcrb
cmp
js,pn
inc
aas
in
sub
mov
mov
lds
cmp
mov
xor
inc
mov
loop
imul
jmp
mov
enter
ds
cwtl
or
es
xchg
andb
shlb
adc
cli
mov
or
mov
jbe
cmpsl
adc
std
mov
cmpsl
mov
xchg
fsubp
pop
xchg
push
out
pop
xor
and
cmpsb
lcall
addr16
test
cmp
js
in
stos
stos
mov
int3
inc
xor
ss
rorl
icebp
int3
fcoml
and
pop
int3
clc
lahf
movsb
fmuls
dec
fadd
pop
pushf
stc
fistps
out
and
and
pop
sbb
repz
in
lret
psubusw
pop
cmp
cmc
xchg
das
push
arpl
rcl
inc
push
jb
dec
enter
imulb
jo
pop
loopne
shlb
jnp
pop
notb
test
addl
idivl
mov
cmp
xchg
mov
andb
inc
fstpl
loope
xorb
imul
js
fsubrs
pop
sti
iret
xor
pop
test
sub
mov
pop
push
cmpsb
subb
dec
movsl
add
mov
pop
insb
dec
sarl
xor
adc
push
add
in
rcrl
cwtl
rcrl
negb
outsl
xchg
or
and
inc
xchg
mov
mov
jne
mov
push
inc
stc
xor
clc
adc
xchg
sbb
pop
jbe
popa
call
xchg
mov
inc
es
pop
mov
add
cmc
xchg
addr16
or
jbe
add
jle
into
xlat
xor
jo
push
mov
popf
das
ljmp
xor
cmc
scas
and
fists
test
test
push
sub
cmp
stc
fcomi
sub
inc
add
dec
inc
inc
pop
nop
andl
inc
cli
and
stos
popf
insb
inc
jo
dec
test
sbb
jns
push
or
cli
aam
aas
sbbb
or
xor
sub
add
hlt
out
adc
lret
jl
mov
mov
add
in
mov
mov
jo
pop
out
and
pop
iret
add
inc
clc
adc
mov
push
mov
fisubrl
cmpsb
roll
aas
gs
sub
jle
lock
test
leave
movsl
push
aam
gs
mov
sub
fs
or
sbb
ja
into
xor
inc
imul
cmp
popf
sbb
lret
movsl
jp
xor
mov
movsb
xchg
scas
xor
pop
insl
leave
lods
xchg
adc
pushf
fdivp
scas
and
cmpb
mov
mov
ja
lods
mov
xchg
test
jbe
bound
mov
fisttpl
add
cmc
insb
xchg
lea
inc
jg
jp
cmp
aad
pop
push
mov
call
push
sbb
mov
dec
xchg
pop
mov
sahf
mov
add
jns
cmp
mov
arpl
cmp
mov
ljmp
ljmp
fstpl
jg
inc
fucomp
inc
fdivrs
in
cmp
adc
decl
out
mov
pop
and
addl
pushf
into
inc
pop
push
xchg
pop
popf
int3
push
xor
adc
mov
sub
mov
stc
loop
test
xor
jmp
or
repnz
orl
movsb
push
andl
mov
int3
mov
loop
adc
jp
pop
mov
test
subb
test
dec
cmp
sbb
lcall
mov
push
pop
movsl
xchg
in
call
mov
or
or
jl
int3
fadds
dec
jae
adc
sahf
xor
xchg
pop
pop
add
enter
hlt
fstl
cmp
ljmp
arpl
mov
dec
lea
ds
jno
jbe
jle
frstor
test
sub
dec
and
cmpsb
imul
mov
push
repz
and
hlt
dec
cwtl
or
les
xor
popf
dec
out
xor
and
push
add
inc
lea
push
mov
xor
inc
jg
call
adc
scas
xor
mov
scas
ret
pop
in
mov
sbb
push
data16
pop
jno
rolb
dec
jo
pop
je
pop
pop
outsl
jbe
push
inc
cmp
in
subb
loopne
adc
loopne
mov
movsb
fistpll
push
inc
std
inc
test
pop
ljmp
jnp
aaa
cmp
sbb
popa
icebp
xor
xchg
xchg
enter
stos
or
fbstp
popf
jecxz
pop
push
iret
mov
xchg
aam
dec
xor
add
mov
mov
lods
lods
fsubl
or
push
or
adc
cmp
pop
movsb
inc
sub
mov
sbb
push
or
pop
jmp
dec
lea
mov
dec
outsb
pop
add
enter
inc
js
outsb
stc
addr16
hlt
adc
lret
mov
mov
es
ret
nop
cmp
loope
scas
mov
or
mov
lahf
outsb
add
ret
cwtl
rorl
fld
pop
imulb
push
jo
adc
adc
mov
push
loop
mov
je
mov
sar
shl
mov
lret
aas
dec
sti
notb
scas
mov
pop
popf
clc
hlt
enter
dec
xchg
jbe
ret
add
arpl
lods
xchg
sbb
les
mov
inc
mov
pusha
test
dec
jl
xchg
xchg
jb
cmp
aad
clc
and
ds
das
loop
ret
mov
bound
cwtl
cltd
add
mov
mov
mov
cmp
dec
xchg
jmp
fisubrl
faddl
xor
adc
pop
movsl
int
dec
popa
dec
mov
mov
jnp
test
xlat
movl
push
div
mov
xchg
repz
cmp
push
xchg
pop
pushf
mov
push
sub
mov
test
xor
ss
lret
data16
in
mov
pop
ror
jb
mov
mov
fstl
xchg
test
imul
imul
and
int
mov
add
popa
out
ss
push
scas
xor
or
or
sahf
mov
dec
xchg
add
mov
push
pusha
xor
mov
adc
in
jmp
push
mov
sbb
and
xor
addr16
stos
lods
cmp
cmp
xor
xlat
pop
mov
cli
subb
popf
inc
orl
xlat
adc
mov
add
or
scas
push
mov
mov
stc
test
es
fmul
adc
mov
jp
and
movsb
mov
cwtl
push
repz
fwait
push
and
mov
mov
cwtl
cmc
ja
mov
sub
fwait
mov
sub
mov
adcb
in
xchg
and
test
imul
inc
inc
test
mov
ret
and
int
imul
jae
leave
and
push
dec
aam
cmpsl
je
jmp
clc
mov
dec
das
rol
pop
mov
pop
call
add
sub
arpl
jno
jno
sti
loop
js
inc
and
and
push
xlat
adc
pop
inc
into
int3
dec
jbe
jge
xlat
fincstp
scas
lret
jge
lock
pop
or
xor
or
lods
arpl
xchg
cmp
dec
lea
mov
mov
pop
in
mulb
add
xchg
popf
or
cmp
in
mov
sub
mulb
xor
fisttpll
pop
push
adc
sbb
mov
insb
pop
sub
adc
loopne
shlb
push
add
inc
jae
jnp
push
orl
sarl
mov
test
and
xchg
dec
fidivs
daa
mov
rcrb
cltd
cmc
dec
leave
idivb
lret
gs
mov
sbb
mov
popa
cwtl
inc
insl
fistpl
repz
jb
loope
sti
pop
mov
aaa
mov
mov
or
rorl
mov
shll
cmpsb
test
cmp
push
add
jo
aad
leave
sbb
int
bswap
dec
mov
incl
cs
daa
bound
js
call
pop
jnp
adc
mov
xor
lret
int
cmpsl
popa
cmp
in
add
xchg
jp
into
sbb
in
or
push
jp
cmp
mov
pop
jle
jb
inc
mov
ret
pop
adc
xchg
pop
jne
mov
mov
in
inc
mov
ljmp
sub
call
cmp
dec
adc
fsubrl
out
and
sbb
data16
aas
movsl
sbb
add
inc
or
and
jp
mov
pushf
das
rcll
or
inc
mov
rorl
xchg
jns
scas
aaa
daa
jmp
ficompl
push
out
jne
sahf
movsb
inc
sarb
pop
shll
nop
or
xchg
cmp
jbe
push
mov
mov
enter
xlat
movsl
loopne
seto
arpl
test
dec
test
cmp
add
ret
out
mov
pusha
cmp
orl
aaa
rorl
xchg
aaa
adc
push
lods
push
lret
ficompl
or
xchg
mov
lods
adc
enter
sti
inc
jnp
int
and
add
jnp
fnsave
ret
negb
sahf
and
jae
cmpsb
mov
lods
cmp
dec
push
fnsave
pop
popf
aad
jmp
dec
fimull
sub
stos
frstor
repnz
ficompl
nop
push
lds
loop
xchg
adc
pop
adc
out
pop
mov
js
inc
xchg
ret
adc
xchg
and
clc
sub
push
fnstsw
insl
fs
aas
lock
out
or
xor
rorb
jb
sbb
mov
sbb
fsubrp
inc
add
mov
dec
dec
add
sub
pop
addb
or
mov
pop
sbb
roll
or
leave
pop
out
mov
jae
subb
cmpsl
and
mov
clc
jbe
mov
filds
mov
or
out
sub
dec
popf
dec
rorb
mov
cmp
mov
repz
xchg
mov
mov
sbb
orb
out
xchg
andnps
mov
lock
or
les
cmp
fcomps
lds
sub
inc
lret
lods
cltd
fsubrl
mov
or
cltd
test
ljmp
sbbb
scas
add
jle
pop
push
push
hlt
adc
pop
mov
icebp
pandn
outsl
jg
xchg
or
insl
nop
pushf
lock
popf
jae
mov
jae
dec
dec
addr16
cwtl
dec
push
arpl
mov
mov
jne
pop
es
mov
ss
stos
lea
jl
outsl
mov
push
adc
idivb
jl
out
pushf
lock
mov
push
mov
add
int3
jbe
push
cmp
aam
ja
call
aam
in
xor
shrl
xchg
and
insb
daa
and
adc
idiv
jmp
stos
in
lds
fsubrp
cmp
lahf
mov
jle
imul
sub
cmp
sub
ror
popa
mov
pop
sub
into
lret
mov
mov
not
or
jl
ja
inc
and
scas
fimull
cli
xchg
and
jo
std
orb
mov
adc
xchg
xor
inc
adc
leave
shl
mov
inc
xor
mov
mov
cld
push
les
push
push
das
mov
into
xor
mov
push
and
rolb
sbb
fdivp
inc
dec
mov
repz
loope
jp
sti
popa
jge
mov
call
stos
push
lea
jne
mov
mov
sbb
inc
push
gs
or
cmp
fbld
mov
jmp
aas
pop
ret
nop
popa
push
push
mov
ja
les
lcall
adc
aas
jg
xor
fdivrl
mov
mov
and
push
push
fimuls
pop
stos
std
ret
leave
sub
hlt
outsl
lods
and
and
cld
in
shll
mov
dec
adcb
fsub
andl
and
out
mov
out
dec
jmp
and
pusha
adc
jo
lea
pop
inc
aas
movsl
xchg
jnp
mov
das
mov
sub
dec
mov
jne
std
cmc
pop
test
jb
adc
add
das
dec
repnz
or
shll
aad
dec
leave
popa
lods
xchg
roll
push
adcl
mov
pop
xorb
pop
insb
sub
add
movsb
push
and
mov
loope
cmp
push
fsub
xchg
cmpsl
xorl
add
sbb
sub
or
mov
cmp
popa
popa
lahf
test
addl
fs
inc
and
stos
xchg
mov
pusha
push
scas
xchg
adc
push
mov
test
jb
adc
mov
nop
out
lret
jmp
push
cltd
pop
fstpt
dec
sbb
imull
sub
fdivrs
addb
test
sub
iret
ss
fsubrl
in
mov
enter
mov
or
and
cmpsl
pushf
das
dec
insl
cmpsl
fldenv
add
pop
sub
push
add
aad
mov
and
in
jne
arpl
rcl
mov
filds
shll
lods
push
sub
jb
mov
jle
rol
cmp
push
mov
dec
inc
push
inc
test
mov
push
shl
and
xor
mov
scas
les
cmpsb
and
cmp
push
nop
xchg
mov
sub
outsl
cmp
in
cltd
fld
mov
xchg
rclb
push
sub
push
shlb
or
mov
xchg
jmp
lahf
pop
pushf
mov
push
ljmp
test
dec
dec
mov
ficompl
dec
testl
pop
daa
insb
jg
sub
fucom
adc
aad
repz
push
lahf
test
mov
shlb
xor
and
adc
xchg
mov
pusha
fs
das
negl
jns
or
mov
cmpsb
test
stos
or
jae
jecxz
incb
mov
test
push
lods
xchg
addr16
push
cmc
imul
nop
fbstp
test
sti
pop
sub
xchg
xchg
pop
xchg
fsubs
out
inc
adc
aam
fistl
sbb
jno
push
iret
push
dec
arpl
inc
mov
gs
sbb
push
stos
fdivrs
dec
pop
and
mov
leave
insb
movsb
mov
jl
mov
xchg
in
ljmp
mov
push
xor
test
lcall
ss
addr16
and
rorl
and
and
fiadds
jo
push
dec
and
push
sarl
push
bound
das
lock
or
xchg
test
pusha
in
push
lock
mov
jo
push
push
push
insb
stos
cmp
cs
cmp
pushf
ror
or
out
idiv
insb
aad
sub
and
push
les
aad
rcrb
push
nop
and
xor
push
xor
enter
fisttpl
ja
shrb
mov
xor
test
cmp
cld
insl
test
mov
fnstcw
mov
ja
adc
out
xor
sbb
dec
add
jl
adc
pop
pop
sub
fwait
push
jae
scas
cmp
cmp
sub
inc
cmc
scas
aaa
mov
dec
les
pusha
clc
fstp
fcoms
fldenv
pop
rclb
lods
xchg
pop
out
dec
sub
pop
stos
sti
fdivrl
mov
dec
xor
jle
xchg
arpl
mov
scas
imul
nop
jb
sbb
cld
mov
mov
inc
xor
sarb
lret
test
fdivrs
in
rcll
out
fwait
cmp
pop
or
gs
xchg
ja
push
loopne
and
push
enter
push
rol
inc
clc
loope
cmpsb
loopne
fmull
jo
ret
nop
inc
clc
mov
mov
inc
lret
aam
add
lret
add
outsb
clc
test
sbb
cmp
xchg
jecxz
cmpb
mov
pop
xor
push
mov
aam
jg
and
jbe
pop
mov
inc
inc
lcall
dec
outsl
add
pop
test
daa
pop
addr16
das
sysexit
mov
movsb
sti
smsw
push
sar
push
out
mov
test
and
lock
and
fcomps
adc
xor
cmc
sbb
scas
dec
ret
sub
pop
out
push
or
std
lret
and
andb
cmp
push
jne
jae
lds
lods
js
adc
or
push
and
test
cmpsb
mov
add
push
inc
or
xchg
repz
mov
mov
pop
add
xchg
pop
fistpll
nop
mov
lahf
mov
and
cmp
imul
std
ja
lret
repnz
ja
or
mov
and
dec
scas
shr
xchg
in
xchg
jmp
repnz
sbb
jmp
shr
dec
mov
aaa
rcrl
dec
adc
or
mov
in
add
pop
xor
fldl
test
aad
mov
cmpsb
scas
or
add
dec
in
xor
pusha
int
mov
das
leave
xor
test
dec
cmp
xchg
jmp
fbstp
fwait
sub
push
shll
enter
dec
addr16
icebp
call
insb
mov
and
dec
and
adc
into
ror
pop
and
hlt
mov
test
jnp
inc
sbb
cli
push
mov
push
add
mov
rcl
in
inc
inc
inc
and
enter
repnz
or
fiaddl
sbb
inc
mov
cmp
or
adc
mov
out
inc
sub
adc
pop
mov
lods
push
fwait
aam
ss
mov
mov
add
pop
rolb
loopne
insl
dec
or
push
mov
jae
dec
ret
pop
in
pusha
add
xchg
dec
shlb
les
pop
or
push
inc
or
xor
or
dec
insl
gs
aam
rorl
lds
mov
rorl
sub
cli
lret
cmpsl
test
mov
ss
ja
insl
pop
movsb
ljmp
jo
in
mov
push
mov
lods
arpl
adc
jge
adc
jl
xor
es
lock
out
mov
sbb
and
jbe
push
jo
ret
adc
arpl
stos
and
jnp
enter
inc
fdiv
fwait
lahf
test
mov
mov
pop
nop
adc
xlat
mov
dec
xor
jge
mov
insb
mov
inc
ret
cmp
sub
mov
adc
jns
push
jmp
jne
ror
xlat
inc
dec
mov
push
xchg
xchg
lret
xor
inc
mov
inc
xor
xchg
add
or
movsb
adc
clc
aaa
mov
imul
mov
xor
fistl
or
dec
dec
mov
mov
jns
push
jbe
mov
addr16
inc
push
cmp
or
cmp
xchg
sbb
cmp
fcmovu
mov
mov
lcall
mov
mov
pop
sub
jge
ja
lds
jns
dec
inc
and
mov
inc
cmp
lods
mov
rcr
ss
sbb
mov
fdivrs
popf
hlt
or
xor
subb
mov
test
fidivrl
pop
cltd
add
sbb
pop
mov
mov
imul
shll
lods
scas
sub
pusha
movsb
fistps
in
mov
mov
and
mov
icebp
add
mov
push
or
inc
mov
xor
dec
xchg
lret
jns
dec
sbb
hlt
xor
movsb
test
inc
mov
mov
pop
scas
in
mov
xchg
adc
add
das
pop
xchg
or
cld
pushf
out
ljmp
sahf
lods
mov
outsb
push
cmp
hlt
jecxz
cli
hlt
cmp
enter
push
jle
mov
pop
cmp
rclb
pop
lock
mov
and
xor
sti
fwait
test
jae
inc
ja
sub
fisubrl
adc
aas
call
stc
aaa
rcll
jl
in
repz
or
cmp
out
sub
xorb
sbb
cmp
and
dec
adc
or
jns
mov
add
xchg
sub
pushf
and
in
into
pop
daa
cmp
mov
cwtl
sub
jo
jl
dec
pop
sub
std
sbb
std
ret
les
jecxz
push
cmp
push
lods
inc
pop
das
lods
imul
push
push
cmp
bound
shrl
aam
lods
loop
daa
adc
sahf
xor
xlat
push
fstpl
repnz
lea
incb
mov
sbb
mov
lret
popf
cmp
sbb
jno
push
inc
mov
or
inc
push
leave
adc
push
pop
mov
pop
mov
xor
loope
mov
mov
idivb
mov
or
or
in
adc
xor
test
cmpsl
out
cmp
sbb
inc
sub
xchg
pop
insl
or
pcmpgtd
popf
je
pop
inc
mov
jmp
mov
lock
mov
aam
sub
bound
mov
insl
repz
sub
data16
and
subb
bnd
sub
pop
push
jecxz
xchg
cmpb
jb
leave
sub
ja
mov
or
jb
cld
mov
sahf
addr16
adc
mov
xor
jle
cli
push
sarb
shl
daa
dec
sbbb
mov
xor
push
loop
cmc
inc
andb
push
cmc
push
cmp
xchg
pop
shll
shr
dec
mov
shlb
and
dec
xchg
xchg
mov
inc
mov
icebp
in
xchg
shl
and
sbb
and
push
lods
fs
add
ds
pop
push
rcll
lds
leave
insb
adc
jns
enter
mov
addl
mov
add
and
mov
insl
enter
cmp
insb
mov
sbb
mov
fmul
xchg
fxtract
mov
push
inc
or
test
fsts
mov
pop
push
add
aas
push
mov
cmp
push
or
jge
mov
loope
mov
aas
sub
dec
pop
scas
jg
pop
pop
mov
jns
andl
scas
loope
pop
daa
fimuls
adc
jp
imul
pop
mov
loopne
in
iret
sti
aas
gs
fstpl
cmp
cmp
leave
nop
add
fsubs
in
ljmp
repnz
inc
mov
mov
push
rol
repnz
cld
xor
outsb
jecxz
mov
xor
or
jae
xor
cmp
in
int
xchg
xor
mov
andl
in
inc
fimuls
mov
ret
sub
pop
call
jnp
jne
adc
ret
push
aam
aas
in
adc
sub
add
dec
add
pop
xchg
sub
out
xchg
pop
jmp
icebp
xchg
and
add
push
out
xor
xchg
dec
mov
xor
stos
addr16
pushf
or
or
test
mov
sbb
sti
inc
pop
test
out
or
pop
mov
aad
dec
stos
mov
jns
xor
inc
sbb
in
cmp
sub
loop
fldenv
ljmp
aas
ds
loope
push
mov
rorb
jecxz
pop
cmpsb
repz
mov
or
dec
mov
in
movsb
outsb
push
rcll
mov
jo
dec
adcb
pushf
adc
movsl
jb
add
mov
jl
mov
pop
push
iret
ljmp
cmpsb
xchg
cltd
mov
pop
dec
rcrl
stos
out
stc
rorb
add
daa
inc
stc
into
orb
inc
mov
mov
jns
cmc
inc
lds
jno
sub
je
insl
mov
jmp
add
and
adc
mov
mov
jmp
dec
cwtl
jb
lods
icebp
ret
jg
test
adc
or
xchg
loopne
gs
adc
mov
fisttpl
dec
ret
fxch
dec
fldenv
mov
push
stos
fiadds
dec
mov
in
add
xchg
int
out
outsl
test
xchg
push
sbb
cmc
jp
lds
addr16
cmpsl
ds
or
pop
repz
cmpb
dec
add
fneni(8087
mov
jmp
cmpsl
cli
shl
mov
into
push
addr16
mov
out
cmp
gs
xor
push
cs
ficompl
sbb
roll
test
sub
stos
in
dec
dec
imul
fiadds
push
dec
pop
lea
ljmp
lret
mov
popf
xor
push
xlat
jbe
pop
inc
mov
xor
iret
cld
dec
xor
xchg
andb
in
pop
xchg
bnd
inc
adc
jb
sahf
int3
clc
mov
flds
cli
clc
into
inc
fs
icebp
or
les
mov
sub
dec
sub
pop
xchg
sbb
fdivrs
fstpt
and
push
adcb
fcomps
push
dec
jno
push
in
adc
pop
push
icebp
adc
loopne
pop
xchg
test
lcall
and
lret
lods
pop
mov
aam
mov
pop
cmp
push
push
lret
in
pushf
repnz
mov
out
xchg
leave
int
dec
mov
inc
xor
enter
in
mov
movsb
xchg
inc
aad
stos
inc
and
add
or
dec
xchg
and
shlb
sti
jno
rclb
or
xor
or
int
mov
mov
sub
gs
jne
rcll
sub
xchg
mov
sbb
mul
mov
je
das
ficoml
rcrb
lret
sbb
add
add
fcmovb
addl
sub
cmpsl
jl
mov
daa
lock
xchg
stc
and
cmpsb
shll
xchg
lds
adc
shll
sbb
fcompl
cmp
test
decb
pop
sar
stc
mov
lea
or
lock
jg
lret
sub
cmp
shrl
leave
cmp
adc
adc
or
or
lods
in
cwtl
push
pop
shlb
inc
cmp
mov
mov
sbb
fcoms
pushf
push
js
inc
jmp
dec
repz
mov
or
xchg
scas
sub
xor
push
addr16
push
out
lahf
and
jmp
sbb
inc
std
or
mov
mov
pop
imul
ss
scas
test
add
pushf
cltd
int
lods
or
test
cmp
mov
out
fldenv
insb
mov
incb
in
push
mov
or
mov
xchg
loope
adc
mov
dec
test
int3
mov
xor
pop
iret
pushw
push
or
lds
pop
inc
jp
imul
fdivl
push
xchg
dec
shll
push
ret
mov
ds
inc
mov
loop
sbb
loopne
sbb
pop
loop
lahf
ljmp
cmp
push
or
gs
mov
jns
mov
cmp
test
and
hlt
or
arpl
int3
divb
push
aam
jb
pop
pop
insb
push
jne
incb
lods
xor
icebp
out
mov
mov
inc
in
xor
scas
mov
jmp
lea
mov
movsb
int
enter
sbb
push
cli
push
ja
or
jge
cmp
test
nop
je
xor
mov
mov
mov
out
pop
les
in
mov
mov
scas
ds
daa
and
or
mov
xor
fdivrp
mov
dec
in
jb
mov
push
mov
clc
in
inc
imul
pop
ret
xor
jne
pop
push
movsb
mov
jne
ret
push
add
mov
in
adc
sbb
leave
and
xchg
cld
jns
mov
xchg
or
xchg
outsl
cmp
mov
test
lahf
mov
stc
xchg
push
fldl
or
cmp
add
flds
stos
cmpb
jmp
imul
dec
repnz
ss
and
test
jp
fsubrl
mov
arpl
arpl
pushf
jo
push
xchg
jecxz
repnz
xor
sbb
lret
shlb
pop
sub
cmp
jnp
adc
push
mov
movsl
shl
mov
rcll
movsb
lret
fwait
loopne
cmp
mov
pop
xchg
mov
add
jnp
mov
in
mov
inc
mov
jbe
movsl
hlt
push
mov
or
mov
pop
div
loope
outsl
adc
lcall
sub
cmp
in
mov
fcomps
sub
cmp
outsb
cld
adc
dec
inc
inc
ljmp
xor
inc
mov
mov
ja
adc
or
push
insb
sub
fsubrs
clc
aas
cmpsb
lret
popf
push
insl
icebp
sbb
repz
and
sbb
jo
jecxz
lea
push
int3
pop
or
mov
mov
and
jno
cmpsl
mov
das
loope
movq
outsb
pop
sbb
and
mov
and
push
cmp
sbb
push
xchg
dec
or
add
inc
sub
cmp
push
inc
vpaddb
idivb
test
cmc
lods
rorb
jmp
shlb
dec
mov
mov
pusha
inc
push
mov
jp
out
std
or
lret
push
ja
jns
sarl
mov
xor
and
orb
scas
je
dec
and
mov
test
cmc
xchg
outsb
push
out
leave
mov
sbb
push
call
sar
mov
fiadds
and
jmp
xchg
cmp
dec
enter
xchg
adc
add
out
and
fwait
lea
lahf
stos
push
mov
ljmp
outsl
int3
jmp
cmp
mov
adc
xchg
mov
cli
jmp
xor
jne
cltd
addr16
fldl
push
fdivr
pop
mov
sub
pop
dec
xor
aam
push
sbb
imul
mov
xor
mov
mov
jle
inc
jns
jl
int
sub
and
mov
cmc
add
fldenv
repnz
popf
inc
inc
in
ds
pushf
push
shrb
push
cwtl
pusha
outsb
jbe
les
pop
xchg
jno
mov
mov
sbb
leave
test
lcall
movsb
es
scas
mov
fs
jmp
idiv
pop
mov
loopne
push
mov
cltd
nop
out
jle
cmp
int3
je
xorb
ds
lods
in
or
mov
lret
push
repnz
inc
jg
movsb
xchg
out
sub
fmulp
and
cmp
addr16
gs
cmc
faddl
xchg
jecxz
add
sbb
fwait
adc
jl
pop
pop
rcrb
jecxz
std
jmp
pop
jle
push
or
loop
fsts
add
out
shl
lret
cmp
pop
jge
test
hlt
scas
fidivl
rorl
sarl
lret
sbbl
and
inc
leave
ftst
shl
in
movsb
ljmp
fcmovnbe
and
or
filds
jle
xor
pop
sub
int3
add
test
sti
fbld
jmp
sbb
adc
loope
or
cld
mov
popf
cmp
inc
daa
jl
mov
dec
pop
pop
ds
mov
inc
pushf
xchg
pop
add
xchg
pop
jno
mov
dec
fs
jne
imul
les
push
ret
out
xchg
or
js
mov
cld
adc
cmc
in
filds
push
repz
hlt
dec
leave
add
pop
adc
push
xor
inc
fistl
mov
sbb
or
aad
out
xchg
push
mov
pop
lret
or
in
sbb
push
pop
fdiv
add
decl
imul
repz
subl
jmp
incb
pop
dec
loopne
pop
push
sub
rorl
dec
xor
sbb
fs
push
fldcw
int
dec
rcrb
test
sbb
and
mov
xchg
dec
mov
mov
shr
or
push
movsl
xor
pop
ret
and
and
mov
rcrb
icebp
mov
shll
stos
xchg
pop
jno
or
inc
push
ret
pop
prefetch
xor
dec
mov
arpl
fwait
js
inc
push
sub
sub
xor
popl
inc
jmp
imul
sbb
lahf
push
and
fcoms
mov
inc
push
mov
repz
test
mov
dec
fcomp
mov
out
and
stos
add
sbb
iret
inc
lret
rolb
mov
jl
lret
pop
or
in
inc
fstl
xchg
es
lods
push
pushf
push
cmpsl
push
fistps
cmp
push
sub
adc
cs
stc
rcrb
push
pushf
push
ss
mov
sub
add
adc
imul
cmc
mov
or
pushf
inc
loope
mov
jne
xchg
mov
and
xchg
cmp
push
icebp
arpl
xor
popa
mov
scas
adc
mov
pusha
pop
iret
xchg
sbb
flds
in
fsubs
pop
rol
add
jnp
jmp
cwtl
shll
in
mov
add
dec
mov
sbb
xchg
cli
ret
cmc
pop
pop
mov
movsb
mov
hlt
jbe
mov
stos
add
cmp
adc
rol
xchg
js
cmc
pop
stos
inc
dec
and
pop
push
shrl
or
movl
lcall
add
inc
enter
adc
aad
adc
ficoml
jl
leave
leave
rcr
xor
push
pop
sbb
cmp
arpl
or
cmpsl
sbb
notb
repnz
mov
cmp
ja
mov
and
xchg
lcall
out
mov
je
sub
in
hlt
lret
cmp
popa
sub
cmp
jg
lods
xorl
jne
dec
add
in
pop
xchg
pop
das
and
insl
jo
add
push
sub
push
or
in
sub
test
inc
mov
loopne
je
lods
scas
jmp
xor
adc
jl,pt
aad
sub
adc
and
cmc
or
jno
push
lahf
inc
mov
les
sbb
pop
cltd
hlt
nop
orl
in
or
push
roll
dec
out
mov
mov
jbe
aam
fidivs
jle
ds
in
sbb
ds
in
ds
inc
into
inc
xor
addb
xchg
dec
sbb
out
sub
add
lret
aad
js
stos
mov
mov
pop
add
fistpl
push
daa
jp
or
xchg
xchg
push
xchg
push
movsb
mov
mov
ret
pop
mov
fwait
xchg
xchg
or
and
dec
aas
mov
xchg
push
mov
mov
fcoms
lock
insl
push
loope
xchg
nop
xor
nop
fisttpl
jmp
lcall
cs
jl
sub
add
pop
jb
imul
pop
lds
cli
mov
iret
sbb
inc
subl
xor
in
pop
lods
push
sub
jp
sahf
sbb
xor
mov
mov
jae
imul
jl
imul
cmpsb
inc
push
pop
loope
mov
mov
imul
xchg
es
ja
in
sbbl
adc
pop
xchg
mov
idiv
fmuls
cmp
les
movsl
cmc
clc
in
pop
mov
add
adcl
ffree
lahf
jmp
in
cli
jo
rcr
mov
lods
in
js
mov
shrl
imul
add
pop
dec
xchg
inc
testl
in
sbb
aaa
pop
jb
mov
dec
rcr
add
push
mov
outsl
das
mov
inc
pop
xchg
pop
add
iret
aad
repz
push
jb
pop
push
sbb
cmpsb
add
fsubr
sbb
andb
stc
pop
jo
pop
clc
cmpsb
ror
push
ja
hlt
data16
inc
push
sub
js
sub
cmpsb
mov
adc
and
repnz
scas
xchg
inc
add
jge
push
push
addl
out
push
iret
shlb
scas
dec
enter
jb
sub
aaa
cmc
in
loop
sub
push
ds
push
pop
jns
xor
test
loope
pop
sbb
stos
mov
push
jecxz
pop
cltd
lods
pop
push
sub
pop
adcb
lea
mov
into
lret
mov
xor
adc
aam
sub
or
push
ja
inc
sub
in
adc
shll
jnp
push
out
mov
xor
push
xchg
mov
xchg
idiv
mov
add
pop
cmp
xchg
adc
xchg
roll
imul
mov
mov
in
lret
pop
lods
insb
das
mov
insl
pop
adc
or
in
aaa
dec
icebp
out
shrl
js
out
sub
mov
sbb
pop
lret
bound
daa
aam
adcb
dec
jl
je
add
mov
dec
xor
pushf
sub
inc
cld
lods
mov
sbb
cmp
cmpsb
imul
or
iret
scas
sbb
mov
call
mov
pop
xor
loop
pop
aad
push
or
mov
cmp
push
std
lods
jle
mov
addl
movsb
jbe
nop
cld
repnz
adc
dec
lcall
test
hlt
jno
cwtl
sub
daa
outsl
in
push
lds
sbbl
or
add
xor
filds
mov
jb
rclb
and
aad
sahf
add
cmpsb
push
lret
push
dec
mov
nop
cli
test
aas
sbb
push
and
testb
cli
inc
push
in
notl
insb
imul
pop
inc
sti
jbe
popa
lds
mov
ss
xchg
ds
out
cmp
jmp
fs
out
fs
adc
iret
es
out
scas
sub
loop
repz
push
push
add
dec
aad
addr16
loope
nop
jg
push
cmp
cmpsl
or
or
cs
fisttpll
sbb
mov
shrb
sti
mov
lods
outsb
push
repnz
adc
pusha
xchg
adc
lret
pusha
out
lcall
mov
es
xorl
cmp
pushf
jg
in
data16
xchg
adc
jle
dec
pop
mov
jae
testb
leave
mov
jmp
ret
push
sbbl
cs
pop
lret
sti
cmpsb
pop
es
and
mov
mov
push
push
or
push
push
fisttpll
ss
scas
test
jmp
sti
mov
mov
daa
aam
ret
sub
cmp
adc
das
jo
mov
mov
imul
in
insb
scas
and
and
test
pop
sub
mov
enter
mov
loope
movsl
jg
sbb
jl
cmc
fisubs
outsl
stos
cmpsl
out
repz
mov
mov
add
mov
pop
dec
sarb
movl
push
cmp
add
ds
fndisi(8087
and
jo
int3
and
xlat
shlb
adc
push
inc
jbe
movsb
cmp
mov
mov
push
and
push
mov
loopne
in
aas
mov
jmp
sub
cmpsb
fcmovb
and
jl
std
arpl
sbb
lods
or
lods
push
mov
sti
outsb
fsubs
push
pop
pop
das
aad
jb
outsl
adc
add
dec
ret
ljmp
xchg
les
aaa
adc
addr16
lcall
sub
xchg
hlt
loop
lods
int
fsts
jmp
sbb
sub
sbb
sarl
xor
ds
jle
aam
jl
sub
mov
inc
xlat
xchg
hlt
cmp
sub
fwait
call
gs
loope
pop
add
js
dec
lds
push
mov
mov
jl,pn
stos
leave
push
std
cmc
pop
daa
fwait
push
dec
les
jo
scas
ds
xor
jge
push
xlat
loopne,pn
cmpsb
pop
lahf
in
cltd
dec
xor
stc
jae
adc
adc
popl
add
ljmp
in
sub
bound
or
fisubrl
mov
push
mov
cmp
and
out
fdivrp
sbb
cmp
adc
add
dec
popa
xchg
out
mov
rol
popl
push
xchg
sbb
jae
lods
cld
lods
test
and
out
lret
movsl
or
gs
xchg
inc
lock
mov
mov
or
jo
bound
dec
orl
xchg
mov
fstpt
in
rorb
in
push
popf
sbb
add
pop
xchg
xor
jle
xchg
add
add
xchg
imul
hlt
fnstenv
inc
or
fistl
rcll
xchg
test
aam
test
sub
cmpsb
cmp
sbb
and
inc
pop
out
lret
sub
sub
mov
add
repnz
inc
repz
shrb
pop
lret
jp
cmpsl
and
xchg
xlat
into
dec
cmc
and
cmpsb
sub
push
out
mov
pop
stc
lods
dec
stc
test
loope
inc
lret
or
pushf
cmpl
cmp
add
push
dec
cmc
mov
loopne
sti
insb
mov
sub
push
inc
ficomps
or
lret
xchg
cmpsl
jo
das
dec
lods
iret
jmp
xchg
repz
and
ss
adc
repz
das
pushf
clc
jbe
jb
lahf
iret
ret
mov
ljmp
ljmp
xor
ja
pushl
and
inc
into
sbb
out
lret
cmp
repz
xor
in
jo
cld
pop
aaa
aam
mov
cmp
insl
mov
mov
xchg
sbb
ret
vcvttps2dq
lret
call
push
orl
aas
push
and
rorb
and
cmp
push
push
sbb
cs
sbbb
daa
dec
dec
pop
mov
dec
pop
mov
ja
jp
aaa
sbb
lret
xchg
lahf
out
and
testb
push
out
int3
in
fildll
jg
add
sbbb
push
and
cli
mov
imul
into
cmp
add
movsl
mov
jp
mov
fstp
or
mov
xchg
pop
push
jno
ret
shlb
add
jl
mov
mov
in
sub
loope
and
scas
fnsave
pop
cmp
and
push
fsubrl
dec
sub
cmpsb
and
jne
dec
test
or
pop
ret
jb
jns
cli
ljmp
imul
cmpsl
xchg
jbe
jmp
add
pop
sub
pop
mov
fwait
dec
stos
outsl
das
sbb
in
mov
bnd
add
xor
push
pop
fcomps
nop
out
in
std
dec
rsm
mov
inc
je
scas
adc
shrl
push
mov
sbb
fsubl
and
test
mov
je
imul
rep
rcr
mov
ret
lds
or
xor
mov
shrl
out
jecxz
movsb
lds
mov
mov
cwtl
inc
sahf
jb
mov
call
mov
aam
fwait
mov
fwait
ret
pop
jmp
int
dec
cmp
inc
cmp
xchg
jno
idivb
in
subl
aad
add
das
dec
loopne
mov
lods
xor
repz
sbb
pop
daa
fstl
iret
sbb
pop
push
inc
jle
cltd
cmpb
lock
mov
sbb
seto
pop
out
or
pop
pop
loopne
movsb
mov
lcall
scas
fimull
test
adc
mov
fdivrs
fwait
stos
fistpl
outsl
and
outsl
push
push
addr16
adc
adc
or
and
mov
imul
in
jg
lods
mov
gs
dec
pop
enter
notl
mov
sarl
iret
add
into
scas
popf
mov
dec
jp
jecxz
clc
cmpsb
lods
push
ficoms
jne
adc
in
out
sub
jle
stos
mov
mov
stos
or
pop
xchg
ret
push
dec
mov
xlat
insb
xorl
xor
sbb
or
cld
push
jae
push
lea
ficompl
and
aad
movsb
cmp
pop
fldz
loop
ds
adc
cld
xchg
rcrl
arpl
je
aad
imulb
das
or
jmp
sbbb
out
dec
insb
nop
push
das
popa
stc
stc
rorl
add
lcall
jo
mov
out
push
mov
cs
popa
mov
xchg
sbb
adc
dec
inc
lods
mov
rorb
sbb
sarb
clc
outsb
adc
imul
push
popa
lcall
xor
inc
cld
dec
adc
mov
push
mov
repnz
je
ja
dec
inc
push
faddl
inc
inc
add
mov
test
mov
into
les
push
and
add
dec
mov
rdmsr
data16
pop
in
dec
addb
push
sub
mov
stos
jmp
adc
push
push
dec
cmp
mov
clc
pop
dec
push
fimull
mov
jae
loop
stc
mov
push
sbb
mov
lods
sub
pop
test
mov
loopne
out
mov
stos
and
mov
movsl
add
in
sub
out
sub
push
test
iret
adc
cld
es
popf
jmp
push
mov
cmp
icebp
sahf
je
sub
pop
jle
dec
arpl
jl
pop
or
lahf
jl
push
sti
adc
in
pop
cmp
cmp
mov
adc
hlt
fincstp
xchg
xchg
cmc
pop
aam
mov
insl
sahf
rcl
lcall
repz
aas
out
hlt
pop
xlat
repz
xchg
iret
inc
sub
push
mov
dec
pushf
cmpsb
sbb
mov
mov
push
and
lahf
mov
outsl
mov
jb
dec
sub
push
lret
int
xor
cmp
ja
jge
sub
aad
inc
out
dec
stos
pop
daa
divl
pop
leave
sbb
imul
push
mov
pop
fwait
inc
into
jg
fstl
movsl
push
or
mov
movsb
sbbl
sub
push
pop
std
mov
loope
or
mov
jmp
mov
add
jp
sbb
pop
ret
jmp
fistpl
pop
jae
lock
jb
add
jecxz
fadds
push
xchg
sub
sub
xchg
adc
sbb
push
test
negb
inc
cmpsb
adc
je
aad
or
stos
mov
clc
roll
aam
xor
mov
mov
push
lcall
pop
push
mov
stos
stos
lea
mov
fsts
test
lods
mov
fldenv
push
jo
mov
mov
ss
xchg
enter
sbb
mov
enter
out
xchg
ror
mov
stos
mov
adc
insl
xchg
in
push
dec
dec
les
push
ds
insb
and
out
std
mov
and
arpl
sbb
mov
jnp
in
mov
cmp
mov
push
jecxz
imulb
ja
data16
ja
add
ds
ret
pop
add
pop
movsb
inc
pop
imul
mov
fisttpll
loope
cmp
inc
mov
xchg
loope
or
sbb
lret
add
dec
inc
sbb
jb
repz
sbbl
mov
rcl
dec
xchg
inc
jg
xchg
dec
pop
or
aaa
xor
push
mov
cmp
and
push
jl
lock
push
lock
in
xor
mov
adc
imul
xlat
inc
jge
or
in
sub
pop
inc
or
hlt
fsub
jb
add
dec
fsubs
icebp
dec
mov
or
mov
jns
mov
cmp
movsb
or
mov
imul
outsb
add
nop
pop
xchg
movsb
insl
sub
not
jle
or
jle
call
jp
andl
outsl
xlat
push
mov
inc
pop
jnp
mov
sbb
mov
js
loope
ds
jp
add
scas
jmp
push
je
inc
xor
nop
mov
xchg
jle
notl
push
inc
or
xchg
mov
insl
aaa
stos
addb
out
xchg
dec
add
fistpl
div
sbbl
inc
sub
jge
loop
jb
dec
push
jl
lret
sbb
fiaddl
shrb
mov
adc
cmp
or
add
outsl
leave
arpl
loopne
cmp
fsubs
cmpsl
cmp
push
js
je
rclb
dec
dec
xor
jp
int3
fistl
shl
movsl
push
inc
cmp
dec
cli
fnstcw
jb
add
mov
rcl
sbb
jo
cmc
sbb
mov
dec
idivb
out
jge
repnz
jns
jmp
sub
fwait
shrb
jecxz
ror
cmp
push
dec
or
push
and
inc
jge
dec
jno
gs
xor
mov
inc
or
data16
adc
cli
fsubrs
in
jnp
daa
pusha
cwtl
jge
add
cmp
pop
cmp
jns
add
cmp
out
cwtl
pop
xor
xor
cmpsl
ret
adc
xor
adc
arpl
mov
adcl
in
ficoms
dec
es
push
mov
and
imul
shll
mov
push
aam
push
inc
adc
loop
lock
xacquire
adc
fsubrs
sbb
pop
in
inc
inc
and
test
mov
fldenv
out
cmp
lahf
mov
ja
and
imul
lds
jo
mov
mov
pop
xchg
add
repz
and
cmpl
jmp
push
cs
jl
push
cld
xor
test
jl
movb
scas
sub
mov
mov
in
dec
rorl
into
lahf
push
xchg
lcall
and
or
xchg
pop
test
call
pop
data16
sub
cmp
and
in
es
mov
call
pushf
cmp
arpl
lds
push
jecxz
jecxz,pt
lret
bound
loope
dec
inc
lock
cmc
imul
push
fwait
stos
mov
movsb
mov
push
push
aad
ljmp
mov
icebp
into
lret
je
and
cmp
scas
out
jo
jg
mov
xor
sbb
flds
adc
dec
out
pop
mov
jnp
xchg
dec
inc
rcr
das
imul
lods
mov
enter
inc
ret
test
cld
icebp
cmpsb
xchg
cmp
mov
gs
sub
mov
fistl
out
push
movsl
mov
adcl
lods
or
sub
fiadds
dec
adc
mov
int3
pop
out
cmp
cmp
adc
xchg
fcomp
adc
mov
push
lds
pop
mov
xchg
cld
out
insl
loope
and
imul
ja
int
cs
aaa
mov
rcll
mov
mov
push
xchg
mov
lock
cwtl
adc
fbstp
mov
sbb
arpl
out
dec
jae
jo
clc
aad
incb
addr16
mov
mov
and
mov
pusha
pop
push
mov
cmp
pop
rclb
sbb
jl
mov
das
loopne
out
mov
fmuls
jno
xchg
outsl
pop
push
adc
sbb
adc
mov
or
sbb
movzwl
sbb
bound
cmp
fildll
je
dec
pop
sub
cwtl
pop
and
dec
jp
jl
dec
xor
lret
movl
mov
xor
sbb
xchg
pop
std
fimuls
push
adc
jnp
mov
loope
cmp
add
pop
test
pop
imul
add
out
gs
add
or
dec
inc
fsubp
stos
cmp
test
xchg
int3
mov
data16
mov
add
add
mov
xchg
inc
cmc
xor
out
test
dec
push
cmp
mov
push
cmpsb
jl
push
push
dec
jl
add
xchg
es
cmp
jl
xor
sti
and
cmpsl
dec
cld
jbe
xor
push
sbb
sbb
and
jg
gs
fsubrs
push
push
scas
jl
push
ret
mov
cmp
insb
xor
sub
fimull
xchg
mov
and
ja
ret
rorl
mov
inc
mov
and
fidivrs
pop
mov
push
dec
shl
or
jg
jge
cmc
movsb
mov
push
dec
mov
lock
rcr
cld
cs
pop
pop
xlat
mov
add
add
out
imul
popf
sbb
mov
int3
idivb
in
push
sub
or
mov
enter
dec
add
xchg
lahf
pushf
push
mov
movsb
xchg
lahf
cmp
mov
cmp
popf
push
lock
xchg
mov
frstor
out
cmc
push
jle
test
sbb
je
aaa
add
loope
fnstsw
cmp
nop
sbb
sub
sti
xchg
xor
push
sbb
das
inc
pop
loop
dec
mov
inc
nop
and
xchg
aad
pop
sub
push
sar
pop
shlb
xchg
xor
mov
pop
push
gs
stos
int
pop
dec
adc
jmp
and
jmp
pop
push
mov
rclb
mov
pushf
daa
js
add
lea
jecxz
pop
outsb
cmc
adc
outsl
lret
sbb
mov
mov
cmpl
mov
sub
and
out
cmp
loop
bound
cli
mov
imul
or
cwtl
and
sahf
imul
pop
int3
jl
dec
add
test
daa
jbe
and
dec
jbe
pop
insb
orl
inc
in
sbb
adc
dec
sbb
fidivs
pop
je
adc
fwait
mov
fimull
mov
push
push
fnstsw
std
dec
and
movsb
orb
sbb
cmc
popa
xchg
int3
mov
in
icebp
pop
out
xor
into
imul
repnz
mov
scas
push
mov
enter
shll
clc
imul
aaa
push
add
mov
cmpsl
or
mov
lea
jg
fcomip
stc
jne
das
shrb
cld
iret
xchg
aad
push
dec
rcrb
dec
into
stos
repnz
aaa
add
adc
sbb
stos
inc
xlat
ljmp
stos
push
into
push
fdivs
mov
mov
test
xor
mov
lcall
sub
jno
mov
icebp
lock
cmp
cmp
andb
adc
and
mov
jmp
test
leave
dec
loop
in
push
fwait
and
cmp
int
aad
mov
int3
or
pop
xchg
push
inc
test
cmp
sub
aad
insb
mov
aad
mov
bound
inc
pop
xlat
daa
cwtl
mov
jbe
insb
xchg
mov
cmp
push
lock
into
dec
push
pop
mov
aaa
and
pop
fstl
jmp
mov
hlt
stos
add
subl
int3
cmp
cltd
add
dec
xchg
dec
fs
std
arpl
aas
in
inc
pop
sbb
mov
xchg
pushf
sbbl
shrb
dec
test
stos
xchg
inc
xchg
jge
xor
cmp
in
push
inc
cmovbe
xor
pusha
mov
jl
inc
ret
call
addl
add
xchg
jae
jae
sub
iret
ret
push
jnp
fcmovne
or
sub
lcall
pop
ss
sub
mov
dec
mov
xchg
fldt
sti
cmc
popa
ljmp
jno
pop
gs
pop
mov
scas
int3
sub
mov
in
ret
fnstcw
ret
push
icebp
lret
mov
or
call
mov
inc
mov
mov
mov
ss
jle
cmp
das
add
lret
mov
lods
pop
jl
mov
fdivl
out
xchg
in
sbb
inc
mov
inc
sbb
or
cmpsl
out
insb
sbb
or
lcall
cmpsl
out
sub
int3
aam
mov
sbb
pop
push
jb
jmp
iret
mov
addb
js
sahf
int3
scas
xorl
loop
loope
mov
pop
mov
fiadds
inc
lahf
mov
jns
subb
sbb
or
sahf
dec
pusha
imul
mov
mov
xor
icebp
jge
push
leave
push
movsb
call
rol
movsb
ret
negb
clc
dec
idivb
jecxz,pt
jecxz
pop
xlat
test
mov
stc
loop
insl
jnp
fucomi
cmpsl
and
mov
mov
sti
pop
mov
push
negb
daa
sbb
in
ja
imul
out
mov
stos
mov
push
aas
jno
and
jle
push
aam
add
aad
jnp
sbb
ret
and
jge
in
cmpsb
and
repnz
stc
dec
adc
iret
push
ret
iret
and
xor
adc
jge
jo
test
cs
nop
xchg
push
out
sti
xchg
lea
rcrl
push
lahf
sbb
cmpsb
xchg
and
popf
cli
xor
rol
fcmovbe
adc
sarb
mov
xchg
mov
jmp
jns
add
rcr
jmp
xor
ficoml
bound
mov
js
sub
pop
out
cwtl
loop
lock
scas
ror
sbb
lods
cmpsb
xchg
popf
mov
mov
sub
cs
push
sahf
add
out
mov
mov
ljmp
xchg
sub
xor
jne
mov
lea
push
jnp
cmp
daa
fdivrs
xor
dec
shl
int
jb
es
pusha
mov
inc
and
popf
insb
mov
add
rcll
mov
in
xchg
jg
push
icebp
sub
or
cmp
add
sarb
or
cwtl
test
movsl
loope
ja
test
test
enter
push
adc
mov
add
dec
pusha
or
xchg
movsl
mov
xor
mov
data16
pushf
popa
lcall
sub
push
xchg
xchg
ret
pusha
shll
add
fcoml
mov
movsl
clc
test
ret
mov
leave
fistps
xchg
fiaddl
ds
fsubp
cmc
xchg
je
add
cmc
mov
in
insb
push
loop
std
or
loop
orl
imulb
cmp
dec
std
stos
fdiv
stc
and
add
adc
dec
das
ror
pushf
lock
inc
cs
inc
jb
cmp
jg
mov
sar
jl
push
push
jle
mov
pop
pop
out
jge
xrelease
lcall
inc
mov
inc
mov
push
addr16
clc
mov
fwait
pop
jge
add
pusha
inc
mov
and
popa
pop
nop
dec
lds
xchg
jbe
jbe
add
ljmp
add
in
xchg
push
push
fnstcw
stos
jle
or
dec
lock
mov
out
or
in
lret
push
adc
decb
inc
adc
push
cmpb
imul
cmp
xorl
ja
and
jecxz
rcrb
xchg
and
js
mov
mov
lods
clc
dec
in
rol
or
cld
mov
adc
sub
stos
negb
shr
inc
les
scas
mov
test
sub
movsb
subl
out
xchg
rolb
ret
rcrb
cmp
mov
jns
mov
sub
js
imul
push
or
mov
mov
addr16
dec
ret
and
lods
dec
out
inc
fisubs
jns
cmp
adc
fsubs
stos
dec
push
popf
sarb
mov
or
pop
sahf
xor
roll
dec
pop
cmpsl
pop
sbb
mov
int3
mov
pop
add
cmp
aaa
sbbl
mov
imul
sub
jge
fwait
add
gs
dec
lods
jae
pop
loopne
dec
insb
xor
call
lret
in
cltd
std
je
lret
jecxz
mov
cltd
and
adc
push
int3
sarl
mov
imul
push
cmp
push
jae
jg
adc
out
cld
push
shlb
sarl
cltd
into
pop
icebp
popf
sub
jge
outsl
leave
lcall
shlb
inc
jbe
imul
movl
int3
xchg
sahf
inc
sahf
aad
push
pop
adc
fstpt
nop
adc
pop
fcomps
adc
clc
icebp
clc
mov
and
xor
fimull
sbb
inc
dec
or
outsl
push
adc
imul
xchg
stc
sub
sbb
dec
dec
dec
sbb
sbb
ljmp
mov
push
xchg
xchg
repnz
roll
xchg
xchg
jo
lret
pop
add
mov
mov
push
xchg
fwait
and
sub
jae
enter
inc
dec
repz
js
cmp
add
xlat
jno
or
das
and
inc
std
xor
or
push
jl
mov
imul
aad
cld
les
jo,pn
cltd
scas
inc
jecxz
dec
adc
lds
into
and
push
pop
dec
fcmovnb
jp
cmc
ret
cmp
xchg
sub
pop
movsl
pushf
ja
dec
ja
scas
push
dec
pop
dec
mov
mov
popf
inc
lods
gs
aas
pop
repnz
insl
dec
cs
int
call
or
jmp
xor
movsb
or
pop
and
cld
and
jae
xor
daa
and
or
mov
out
jle
mov
sbb
cmc
xchg
sub
adc
inc
fdivrl
sub
fistps
inc
inc
cmp
outsl
mov
xchg
xor
imul
adc
xchg
xchg
aam
jae
pop
cmpsl
dec
test
push
lret
pop
inc
loop
pop
aam
out
in
bound
jns
es
cli
sbb
fwait
mov
mov
sbb
cs
in
mov
roll
inc
cmpl
in
pop
cs
nop
gs
lcall
fucomip
push
scas
mov
push
dec
std
sahf
inc
xchg
iret
lea
pop
mov
dec
pop
cmpb
or
aad
fistps
rolb
inc
rcll
insb
decb
sub
dec
mov
repz
xlat
dec
sbb
js
xlat
test
mov
cmc
inc
cmpsb
pop
add
movsl
dec
out
pop
and
shrl
mov
mov
sbb
repz
js
cli
add
rol
adc
shrb
xchg
inc
ret
leave
jg
clc
in
std
push
arpl
fnstenv
stc
adcl
xor
fisubs
out
adc
adc
push
push
js
repz
and
xor
xor
cmpsl
xchg
sahf
xor
mov
aas
ficompl
xlat
insb
stos
mov
call
sub
cmpsl
cld
jb
mov
lcall
xor
cli
push
mov
xchg
dec
movsb
mov
xchg
sub
mov
lret
dec
movsb
pop
cmp
fsubrl
push
mov
pop
hlt
cmp
inc
call
sub
test
dec
sub
inc
movsl
mov
lret
pop
incb
fs
inc
xchg
pop
repnz
arpl
adc
adc
lret
and
sbb
dec
in
test
loop
jmp
push
out
clc
sahf
jmp
sub
mov
push
dec
cmp
dec
xchg
aaa
jne
mov
jne
pop
inc
pop
sarb
shlb
push
and
push
sub
push
push
pop
insl
xchg
lods
inc
lahf
aam
mov
comiss
vmovdqu
sub
xchg
xor
add
ret
inc
rcrl
icebp
iret
inc
mov
pop
xchg
outsb
and
xchg
and
nop
movsb
popa
repnz
daa
add
imul
dec
je
cwtl
xchg
push
es
es
inc
lods
mov
shrl
xchg
fnsave
scas
dec
in
outsb
sub
jns
jae
cmovg
in
aam
pop
insb
mov
inc
movsl
mov
cmpsb
adc
mov
mov
inc
push
inc
repnz
leave
fidivs
js
push
dec
sub
loope
loope
jo
adc
cmp
cwtl
push
cmc
loope
cmp
fmul
adc
add
aaa
test
jmp
jle
or
lods
xchg
outsb
adc
add
mov
xchg
mov
inc
adc
outsl
test
xchg
mov
fxtract
hlt
mov
repz
cmp
push
sbb
xchg
adc
in
inc
mov
shlb
jle
dec
or
mov
sbb
sar
pop
scas
fcmove
jno
insl
cmc
enter
cld
mov
jbe
es
ret
loope
dec
pop
jns
mov
jbe
daa
arpl
lods
sub
test
sbb
in
xor
sub
push
imul
jae
add
jle
lret
inc
add
in
fisttpll
scas
inc
mov
adc
scas
mov
dec
js
mov
loopne
sbb
stos
push
ljmp
shrl
icebp
mov
push
hlt
mov
push
in
or
or
xchg
lods
mov
add
jno
out
lret
dec
push
hlt
sbbl
leave
fucomp
mov
xor
test
add
push
push
sar
inc
xchg
pop
fbld
xor
fisttps
mov
shll
lock
imul
fucomp
xchg
or
adc
imul
dec
cmp
jae
and
shl
idivl
test
xchg
ss
pop
mov
scas
mov
jge
xchg
sub
outsb
push
jno
fs
aas
or
loop
cltd
aas
push
add
cmp
insl
sbb
jns
fld
roll
mov
std
or
mov
push
ficomps
out
dec
or
cli
lods
mov
pusha
ljmp
jns
inc
movsb
adc
push
icebp
and
mov
mov
jge
ret
add
ds
cmpsb
cs
jno
or
xchg
pop
in
lods
jns
outsl
push
in
mov
ret
lret
in
out
scas
cvttps2pi
addr16
insb
jne
push
ljmp
cmp
jecxz
jns
popf
jnp
call
cmpl
sbb
jecxz
pop
sub
dec
mov
cltd
lods
or
mov
xchg
push
jnp
rorb
pop
ss
jae
inc
jbe
jg
mov
negb
outsl
xchg
enter
out
xlat
sub
jns
out
xchg
out
push
int3
push
fdivs
or
icebp
xorb
je
xchg
ss
cmp
fstps
sub
add
sub
dec
imul
subl
jne
mov
ljmp
cmp
xchg
rcr
push
or
mov
xchg
push
test
dec
and
cld
sub
and
imul
cmp
jb
cmp
stos
xor
or
pop
xlat
jge
add
add
add
xchg
push
sub
xchg
push
bound
mov
hlt
or
imul
test
sub
inc
cmc
test
lret
rcll
xor
enter
addr16
test
xor
movsb
push
xchg
jp
arpl
xor
xor
xorb
imul
pop
loope
pop
pop
xlat
std
xor
aam
mov
dec
es
cld
xor
cli
test
adc
dec
push
aad
xor
mov
addr16
cmp
stc
sti
and
scas
mov
ret
lds
cmpsb
dec
pop
xchg
add
call
out
pop
mov
gs
rol
lret
icebp
xor
adc
mov
jne
mov
das
jge
nop
in
pop
and
nop
fisubrs
mov
arpl
and
sbb
add
js
inc
sarb
jl
adc
lahf
and
xchg
xchg
fmuls
loope
int3
add
movsb
jge
fidivrl
cmc
and
test
cmpsl
jl
jle
int
cmp
jle
dec
mov
andb
mov
and
mov
inc
and
hlt
scas
fmull
inc
pop
flds
mov
xor
test
test
in
out
inc
in
mov
add
mov
mov
shlb
dec
pop
cmc
mov
adc
out
xchg
add
cld
xchg
stos
mov
lcall
lcall
adc
iret
push
add
push
fistpll
push
cmp
push
pop
pop
mov
mov
sub
lock
push
adc
std
cs
rcrl
iret
repz
ficomps
jno
popa
in
or
and
xlat
ret
inc
mov
mov
inc
fsubrl
mov
data16
push
fcompl
sbb
loop
push
iret
in
xlat
imul
decl
imul
rep
fcoml
mov
lcall
mov
std
pop
jp
stos
decb
cmpsl
xchg
cmc
cmpsb
sub
cli
mov
xor
aas
add
out
int3
cmpsl
das
push
pop
mov
inc
push
mov
inc
call
adc
fisubrl
in
xlat
push
outsl
fisubs
lcall
nop
jns
ja
adc
lcall
sbb
mov
xchg
mull
movsl
jmp
mov
sbb
inc
add
imul
cs
lret
mov
in
mov
test
aad
push
dec
mov
scas
mov
mov
leave
sbb
shrl
call
inc
cmp
xor
jge
jne
or
scas
sti
jnp
pop
cmp
pop
sbb
pusha
jns
mov
mov
aam
nop
stos
lea
je
stos
pop
pop
in
push
mov
cld
addb
icebp
mov
jecxz
cmp
jl
jg
cmp
cmp
sahf
lds
dec
push
xchg
sbb
frstor
jbe
xchg
lods
fucomip
paddusw
inc
sub
sbb
and
pop
insb
mov
in
jg
loopne
cltd
test
sbb
rcrb
inc
push
rorb
sub
idivl
not
add
and
lods
lock
jbe
and
inc
xchg
cmpsl
pop
sarb
cld
dec
cmp
inc
popa
or
int3
loope
and
clc
ret
test
push
pop
mov
adc
cmp
mov
xlat
inc
stc
push
sub
cs
pop
mov
lahf
inc
or
loop
test
rcrl
in
dec
and
je
outsb
dec
or
shufps
xchg
push
test
es
mov
dec
jle
iret
pop
add
xchg
ret
dec
jp
mov
jle
shl
cmp
mov
add
and
sub
fistpl
cmpsl
sbb
pop
daa
fidivl
cmp
dec
iret
fisubrs
xchg
stc
lea
mov
int3
xor
or
adc
mov
notb
aad
std
out
in
aad
js
push
cwtl
xorb
lds
sarb
cmp
enter
test
popa
dec
dec
add
or
cwtl
push
mov
std
sub
ja
push
lds
daa
hlt
push
mov
inc
pop
sti
aas
ljmp
mov
bound
adc
iret
adc
es
dec
addr16
jne
sub
push
cmp
dec
das
jne
clc
lcall
lahf
xor
cmp
test
sbb
aad
xchg
pop
xor
mov
lock
loopne
mov
movsl
andb
jne
int
mov
out
jne
pop
cmp
cwtl
mov
aaa
jmp
xchg
xor
lret
cmp
pop
sbb
mov
cmp
lahf
push
ljmp
jbe
dec
sti
sbb
hlt
imul
movsl
into
mov
push
pop
inc
sub
inc
pop
or
mov
inc
push
dec
jmp
sbb
pop
ss
mov
adc
xchg
xchg
jo
adc
xlat
fsubrs
pop
std
sub
mov
fnstcw
cmp
pop
nop
adc
negl
mov
outsb
xor
pop
cmp
adcl
add
mov
sub
jns
lahf
imul
cmc
ss
std
xor
mov
or
clc
xchg
add
negl
mov
rorb
cmpsl
test
jne
sbb
ljmp
pop
cwtl
xor
cmpsl
fmull
movsl
add
ret
iret
or
dec
mov
cwtl
jns
rcrb
pop
jl
fisubl
jle
add
loope
cmp
push
idivb
out
popa
mov
mov
mov
lock
cwtl
gs
les
movsl
xchg
add
sahf
dec
mov
mov
cltd
jle
adc
and
js
loopne
xor
arpl
pop
mov
stc
in
test
dec
sbb
inc
movsb
out
sahf
mov
push
repz
lcall
inc
fildl
jp
dec
mov
aaa
gs
sub
mov
sbb
adc
in
xor
mov
push
aas
mov
mov
outsl
and
push
sahf
jmp
jl
jge
add
ret
sub
jmp
in
shlb
jp
inc
adc
inc
sbb
loopne
add
push
sub
adc
xchg
pop
decl
lds
cmp
jnp
or
add
orps
loope
mov
push
and
xor
dec
sbb
adc
ljmp
xor
push
adc
add
lea
mov
push
mov
add
xor
mov
test
std
faddl
adcb
scas
pop
sti
inc
mov
enter
sub
ret
test
fwait
hlt
inc
js
call
lods
iret
jecxz
out
sub
aad
xchg
dec
mov
popf
lahf
sub
inc
lea
subb
fs
repnz
shl
sahf
and
lret
fldl
lock
push
sub
clc
pusha
jle
sub
cmp
inc
outsl
dec
push
das
pop
pop
sub
or
mov
sub
cmp
fisttpl
push
add
push
add
sub
dec
mov
movsl
outsl
cmpsb
jne
push
scas
adc
int
mov
xchg
mov
xor
and
sub
xchg
mov
repnz
pop
test
aas
pop
sti
mov
push
sbb
and
mov
sbb
push
cltd
sti
hlt
lock
sbb
dec
push
inc
faddp
sub
sbb
scas
mov
sahf
mov
in
mov
fsubrl
outsl
scas
pop
jmp
fwait
dec
leave
popf
mov
ljmp
out
cmp
cmpsl
or
adc
mov
lea
or
cmc
aam
hlt
mov
hlt
add
sti
addr16
mov
ss
cmp
and
xchg
pop
mov
sti
scas
mov
scas
xchg
ret
xchg
inc
stos
push
pusha
or
nop
mov
jne
scas
fmull
mov
inc
push
cmc
adc
ret
mov
pop
fidivs
bound
repz
mov
inc
rcrb
pop
sbb
cli
inc
push
jno
decl
fdivrs
cmpsl
jo
mov
shll
mov
mov
cs
pop
xchg
mov
popf
ror
jb
xchg
insl
cmp
lret
fs
fdivp
sahf
insb
pop
mov
daa
scas
xchg
or
dec
xchg
jo
in
test
in
jbe
push
push
sbb
cmp
or
sub
cmp
fwait
and
adc
fsincos
and
cmp
adc
and
xchg
xchg
outsb
add
jmp
sahf
xor
ret
pop
sbbb
shrb
xor
stos
mov
stos
daa
mov
fmull
and
std
cmp
test
mov
dec
andb
mov
xor
lcall
scas
jne
ljmp
add
jnp
fs
xchg
cmp
fists
or
dec
stc
mov
pop
lahf
lcall
mov
cld
mov
xchg
xchg
mov
mov
and
arpl
bound
addr16
dec
shl
jae
mov
cmp
ss
cmp
xlat
jmp
mov
sbbb
or
push
xchg
xchg
in
jne
sub
das
push
cli
cwtl
mov
mov
test
stc
fwait
mov
sub
daa
or
adc
xchg
roll
pop
xchg
imul
inc
mov
and
cmpsl
sbb
xor
mov
cwtl
cmp
shll
fisubrs
mov
sub
pushf
arpl
adc
mov
gs
pop
loope
mov
sbb
std
xchg
insb
mov
sbb
xor
xchg
mul
imul
adc
adcb
inc
pop
stos
stc
fcom
in
and
insb
js
sti
jecxz
add
and
fsubrl
pop
cmpl
sub
js,pt
push
pop
enter
xchg
add
pop
push
and
insb
jo
pop
and
test
jle
inc
pop
imul
dec
lea
adc
push
or
add
sub
cmp
push
movsl
shrb
add
cwtl
add
mov
push
xor
jl
dec
xchg
and
sbbb
xchg
and
sbb
push
jecxz
add
enter
push
pusha
movsb
pop
xchg
in
enter
data16
mov
ficomps
ret
pop
jbe
jno
scas
loopne
xor
sbb
mov
arpl
ret
adc
out
shll
mov
push
andb
cmpsl
out
push
aaa
repnz
out
popa
jmp
dec
mov
jnp
das
or
imul
aam
mov
movsl
sbb
fsubrl
in
jecxz
cmpsl
pop
mov
bound
mov
test
mov
sub
ret
mov
enter
mov
push
jnp
lret
icebp
out
mov
call
sub
xchg
cmp
adcl
dec
mov
inc
cmp
xchg
sub
dec
push
cwtl
in
stc
sub
aam
cmp
mov
test
sub
rorb
xchg
or
inc
andl
aas
inc
jns
adc
orl
mov
inc
into
adc
dec
cs
mov
adc
dec
sbb
jns
adc
inc
sub
das
sarl
sbb
pop
inc
movsb
ljmp
scas
out
mov
and
test
ja
jo
pop
loopne
in
test
xlat
or
and
or
inc
arpl
xchg
mov
pop
jbe
cmp
or
cmp
mov
mov
push
xor
jecxz
aam
addr16
push
push
xchg
lds
inc
xor
xor
pop
int3
movsl
cmp
dec
rcll
dec
jbe
ljmp
inc
cmc
inc
cltd
add
or
test
and
mov
inc
push
adc
mov
mov
pop
dec
pop
jae
sbb
scas
jmp
push
adc
lds
shrl
pop
orl
int3
loope
inc
push
push
or
sahf
out
cwtl
jnp
xchg
mov
xor
sub
std
fildl
lret
sbb
bound
fnstsw
sub
mov
add
jp
jb
add
cmp
pop
test
icebp
mov
lock
and
mov
cmc
fwait
neg
inc
mov
fdivrs
leave
cmp
xchg
stos
rcrl
jbe
rclb
dec
cmp
mov
jae
mov
xchg
es
add
lods
divb
dec
mov
mov
jecxz
jg
mov
pop
popa
fildl
jp
dec
xor
pushf
mov
inc
pop
adc
out
mov
push
fs
xor
xor
stc
negl
subl
movd
jns
test
mov
scas
jbe
xor
test
outsl
arpl
add
pop
js
add
add
ret
clc
sub
jge
xchg
jmp
mov
shr
push
popf
xor
push
test
mov
add
xchg
mov
loopne
fldl
enter
mov
fisubrs
dec
xor
call
out
cwtl
test
mov
adc
add
stos
dec
xor
xchg
fwait
dec
sub
cmpsl
and
pop
andb
xchg
in
jge
jnp
mov
push
sbb
fbld
fdivrl
pop
xor
mov
call
std
fs
arpl
add
gs
rcrl
enter
cmp
jns
dec
ljmp
adc
pop
inc
and
xchg
decb
sti
scas
pop
andl
cmp
ds
pop
fxch
jge
loop
call
jmp
daa
adc
jno
mov
sbbb
lock
dec
in
or
dec
sub
push
leave
push
incb
movsl
stos
aad
xor
add
repnz
aad
mov
call
sub
cmp
or
inc
decb
popa
dec
xor
push
lock
mov
push
dec
mov
sbbl
out
push
pop
mov
imul
push
stos
xchg
add
aad
rcrb
movsb
adc
lock
rolb
sub
cltd
lock
rcll
das
insl
repnz
push
into
jb
inc
andl
jae
stc
push
pop
inc
and
sti
arpl
mov
in
or
jl
iret
or
addr16
in
fistl
in
dec
lcall
out
scas
mov
and
int3
sub
mov
pop
xchg
scas
cltd
lods
mov
xchg
xor
and
jnp
xlat
pop
mov
jmp
or
shrb
jnp
mov
pusha
dec
adc
and
scas
insl
pop
aam
cmpsl
daa
or
out
dec
adc
std
mov
cmp
sub
push
stos
ds
in
xor
push
lods
sub
psrlq
xchg
adc
adc
mov
pop
mov
rcrl
cmc
arpl
and
mov
push
shll
inc
cmp
call
mov
add
ret
rclb
pop
inc
or
ficomps
inc
adc
inc
rcrl
mov
sti
arpl
inc
mov
aad
xor
test
stos
jnp
repz
adc
mov
inc
and
jp
xchg
cmp
push
sbb
push
sbb
adcl
sub
sub
push
stos
xor
or
push
arpl
mov
neg
mov
sbb
aad
cmp
movsl
outsl
shrb
nop
xchg
push
hlt
sub
xchg
jo
ss
fimull
xchg
mov
mov
mov
inc
pop
pop
in
adc
mov
mov
jmp
inc
push
pushf
xchg
stos
arpl
cld
lahf
ret
sbb
mov
push
les
ret
cs
aad
jbe
aam
jle
push
xchg
inc
sarl
emms
pop
test
out
pop
mov
pop
jb
sbb
sbb
adc
lds
push
xlat
out
or
mov
lock
sbb
push
push
test
repz
push
cmp
loope,pt
cmp
pop
pavgw
pop
sbb
outsl
or
or
cmp
fbstp
push
mov
push
push
or
adc
cmp
shlb
jmp
enter
shll
fidivrl
push
in
xor
loope
shr
filds
xchg
sbb
clc
cmpxchg
pop
loopne
aam
cli
cmp
cmp
test
aaa
or
push
xlat
fs
cli
mov
lahf
jae
fwait
mov
cmpsl
xchg
add
test
adc
test
aaa
xor
jb
mov
mov
insb
xlat
cmp
xchg
loope
pop
dec
inc
hlt
jmp
pop
fwait
mov
divb
xor
pushf
pop
push
cmp
cs
subb
mov
and
int
loop
out
jae
push
js
xor
stos
pop
jge
mov
push
test
imul
movsl
movsb
lea
in
ret
test
int3
jnp
push
aas
add
aas
sub
xchg
cmp
cwtl
daa
insl
mov
clc
push
lea
pushf
jl
xchg
ficoml
cmp
push
xor
jecxz
jg
andl
push
sbb
ss
sub
pop
dec
xlat
aad
inc
adcb
sbb
stos
sub
jno
lret
nop
fistps
aam
sti
pop
inc
add
outsb
push
jne
xlat
jl
out
lret
hlt
inc
mov
in
push
or
inc
getsec
inc
xor
dec
aad
mov
scas
mov
mov
inc
push
dec
or
sub
add
mov
pop
lahf
xor
rcr
aam
jl
movsb
cmp
lods
add
lods
insb
std
scas
setge
sub
jl
jbe
daa
inc
cmpsb
test
ss
cmp
xor
in
push
push
movl
xchg
imul
jno
and
sbb
fdivrl
iret
frndint
dec
subl
adc
push
popf
push
pop
sub
shlb
mov
bound
push
test
and
mov
clc
push
dec
stc
cs
add
lods
insb
jl
inc
mov
inc
pusha
testl
cli
fsubl
mov
aam
mov
mov
add
int
je
xchg
ja
es
fdivrs
mov
ret
out
pop
mov
cld
fcmove
stos
xchg
add
inc
int3
stos
fsubr
dec
add
test
imul
ja
aad
ljmp
outsb
adcl
mov
fcmovbe
push
mov
xchg
aaa
fcmovnb
sub
mov
aad
leave
movsl
xor
movsb
push
cmp
add
inc
inc
repnz
sbb
cmp
loopne
sbb
sbb
mov
adc
stos
ss
inc
or
test
xchg
test
out
rcrl
scas
jne
lods
or
hlt
sub
jmp
or
jns
in
iret
inc
add
cmovp
pop
loopne
xor
xchg
test
insb
test
int3
adcb
push
scas
imul
imul
sub
les
sbb
jo
sub
push
jbe
cmp
inc
pop
xchg
cmp
call
cmp
fnsave
adc
push
fadd
repnz
xorb
mov
rorl
and
insb
push
fdiv
insl
jl
push
fcmovnbe
push
and
ja
cltd
enter
jg
rcll
or
cmp
sbb
orb
repnz
cmp
xor
out
repz
es
les
or
leave
jo
lcall
jmp
inc
insb
out
xlat
adc
imul
addb
mov
inc
sbb
orb
sbbb
es
mov
mov
inc
int3
cltd
xchg
pop
leave
or
mov
fdivr
cli
xchg
movsb
fstcw
xor
pop
or
push
int
loope
add
cmc
sahf
lcall
sbb
pop
jne
dec
movsl
dec
sbb
dec
sbb
xchg
sbb
jno
and
adc
mov
outsb
ja
push
je
fsub
ret
js
adc
lock
std
fwait
pushw
lea
movb
cli
shll
les
inc
fdivr
aas
or
or
loope
adc
xchg
and
push
mov
xor
mov
mov
adc
cmp
jbe
mov
mov
popf
push
fdiv
fs
orl
lahf
stos
in
scas
pop
adc
pop
xor
jmp
sub
cwtl
fldcw
mov
test
ljmp
cli
sbb
cmp
jmp
xchg
fs
or
fmul
xchg
add
inc
jge
out
xor
mov
push
pop
fs
or
or
pop
cmpsb
and
jo
out
aad
add
imul
es
scas
mov
sbbb
loopne
pop
jne
mov
sbb
push
push
loope
js
inc
das
jg
mov
cld
jl
pop
ret
out
mov
ret
sbb
ljmp
subl
insb
adc
and
into
movsl
lret
xchg
xchg
mov
fucomip
mov
inc
push
mov
lock
push
dec
addr16
mov
lock
clc
mov
mov
push
enter
mov
dec
jnp
mov
mov
push
mov
or
dec
test
mov
jle
imul
addl
fnstsw
or
addl
adc
adc
add
insl
jbe
push
flds
jnp
push
dec
sub
inc
push
scas
test
outsb
push
jl
aad
push
aaa
rclb
loop
pop
add
cmp
in
inc
out
and
jae
hlt
imul
cmc
shl
in
sub
fisubl
into
loopne
dec
xchg
mov
and
sub
loop
inc
rol
fldcw
mov
dec
mov
xorb
imul
xchg
sarl
call
mov
stos
stos
push
movsl
nop
and
and
icebp
and
ss
sbb
aad
aaa
mov
pop
rclb
mov
sti
fadds
mov
cltd
loope
add
fistpl
icebp
fisubrs
test
out
sub
push
imul
cmpsb
xchg
ret
sbb
mov
ficomps
adc
push
fstp
arpl
mov
ja
jo
cmpsl
pop
pop
outsb
ficompl
jne
xor
pop
xchg
insb
and
pop
test
mov
xor
xchg
ja
inc
loopne
je
popa
shl
lret
sbbb
enter
and
push
loop
outsb
xchg
or
movsl
sub
xchg
addr16
lahf
popf
mov
insb
jnp
ss
sbb
xchg
lods
pop
or
pushaw
lds
push
sti
jno
jmp
cmp
cmpb
into
add
sbbl
add
adc
add
movsl
aam
add
push
mov
cwtl
aad
lahf
pop
add
jge
mov
push
fwait
js
xchg
mov
fs
data16
cmc
jb
popf
mov
cmc
js
sbbb
adc
pop
dec
push
fiaddl
sbb
dec
and
jle
mov
pusha
js
clc
push
sub
and
sbb
mov
xlat
sub
add
hlt
cmc
sti
pusha
insb
popf
mov
sub
addb
add
popa
cli
xchg
in
cmp
add
test
in
popf
add
mov
shrb
mov
inc
jmp
nop
je
out
lea
ja
ret
test
data16
nop
mov
cltd
aad
shll
mov
clc
dec
shlb
xor
sub
lcall
add
call
iret
bnd
inc
insl
or
pop
mov
test
into
inc
push
add
dec
mov
mov
bound
add
dec
xchg
xchg
mov
call
mov
lods
pop
adc
mov
add
dec
stos
inc
and
mov
sub
jae
inc
or
pop
pop
add
out
dec
test
jge
push
iret
lds
and
imul
loop
mov
fdivrs
sbb
movsl
je
scas
daa
xor
sahf
sbb
test
and
out
cmp
xchg
pop
das
imul
lods
fwait
int3
jge
dec
push
lea
cmpsb
inc
jb,pn
xor
mov
cwtl
sub
fistps
add
out
shrl
sbb
add
shrl
rolb
and
insb
loopne
popf
xchg
sub
ss
mov
bound
push
mov
add
into
lock
add
sub
adcl
jle
test
les
scas
negb
gs
fcmove
jae
mov
aaa
push
mov
rolb
mov
sahf
fcoms
sbb
cmpl
test
mov
mov
sub
sub
sbb
adc
jmp
mov
jl
fidivrl
shr
pusha
xchg
push
mov
mov
int3
mov
xor
jecxz
das
push
iret
inc
jg
pushf
inc
hlt
in
sub
ds
imul
jo
shlb
ss
cmpb
bound
in
dec
xor
dec
pop
jg
xchg
push
sub
lret
push
mov
js
dec
loopne
or
pusha
dec
scas
insb
push
dec
cmp
insl
ja
add
ffreep
xchg
scas
sarl
lret
mov
lods
enter
mov
lret
sti
shll
mov
jp
and
popf
ljmp
jae
inc
adc
incb
ja
pop
inc
movsb
xor
add
invlpg
test
scas
fsubl
and
ret
jmp
push
jo
scas
push
and
xor
cli
pop
jo
fisttps
xor
addl
stos
sub
sti
mov
sub
cli
ret
mov
mov
sub
mov
sbb
imul
test
mov
in
int3
inc
inc
push
stos
aas
adc
arpl
jae
sbb
sbb
inc
adc
loope
push
int3
fistl
dec
or
jno
dec
sub
fisubl
enter
mov
jns
push
jp
jnp
xor
nop
fst
adc
fldl2e
data16
jecxz
nop
adc
mov
imul
hlt
test
mov
lods
or
xchg
pop
call
mov
sub
adc
cltd
xrelease
fisubl
or
aam
sbb
call
out
cs
sub
stos
lahf
ljmp
pop
mov
icebp
js
negl
sbb
push
repnz
pop
rorl
sbb
xor
fsubp
pusha
sbb
repnz
fucom
icebp
lcall
fnstsw
push
test
mov
incb
xchg
cmp
fwait
dec
iret
sub
or
lods
sahf
scas
pop
cmc
out
sbb
adc
pop
mov
les
or
xchg
movsl
imul
sub
fcomp
cmc
loope
dec
fsubs
not
test
dec
push
add
or
pop
cld
xor
testb
pop
adc
neg
fistpll
add
adc
cld
cmp
add
cld
call
mov
mov
outsb
adc
mov
jmp
shrl
jno
mov
xchg
shll
aam
movl
push
push
mov
daa
jl
mov
mov
sub
xor
daa
in
mov
movb
lock
mov
add
sbb
cmp
out
push
int
dec
push
nop
iret
dec
out
sbb
scas
scas
dec
call
and
xor
mov
iret
popf
cmp
xor
jp
gs
inc
dec
push
ja
xchg
xlat
cmp
cmpb
dec
pop
int3
xor
fistl
mov
mov
insb
push
cld
inc
or
xchg
aaa
test
jne
iret
out
push
push
mov
dec
cld
bound
insb
int3
cld
cld
sbb
aad
aad
jp
sbb
sbb
imul
xchg
gs
popa
mov
leave
outsl
and
sti
inc
and
cwtl
mov
or
bound
data16
mov
push
repz
and
lret
nop
sub
or
jge,pn
stos
cwtl
push
cltd
xchg
adc
ljmp
outsl
pushf
test
inc
loop
pop
adc
sbb
mov
sbb
mov
rolb
mov
ds
aad
push
adc
jecxz
lock
or
cmp
cmp
cs
loope
mov
fwait
mov
andl
sub
js
pop
dec
jmp
lods
sysenter
rorb
out
mov
enter
xchg
sbb
pop
lret
mov
fs
adc
or
icebp
add
jae
lods
cmc
mov
fnstcw
dec
xchg
add
cmp
idiv
ljmp
cmpsb
pop
xor
mov
xor
imul
aad
push
cmp
test
rorl
test
jge
movsl
bound
sar
pop
cltd
xorb
cmp
fs
test
in
rorb
test
mov
cmpb
inc
dec
stc
push
xor
push
mov
lea
xchg
popf
mov
mov
jg
cmp
and
xchg
sub
addr16
xchg
out
push
ljmp
adc
add
lcall
mov
sti
mov
repnz
or
dec
sub
mov
ljmp
movsl
dec
push
pusha
jne
cmovo
je
or
test
push
int
adc
in
subb
xchg
test
je
pop
push
jb
add
mov
pop
and
mov
in
addl
mov
push
icebp
dec
lods
xchg
inc
in
sarl
jnp
jb
in
aas
inc
fidivs
or
cmpl
jg
mov
mov
pop
ret
mov
jae
mov
sahf
xlat
andw
shll
pop
scas
inc
subb
ja
insl
rcrb
pop
lds
xor
pop
inc
mov
adc
faddl
cmp
into
adc
mull
minps
clc
add
or
js
daa
js
xchg
insb
mov
dec
gs
adc
dec
mov
mov
jg
mov
test
test
lds
clc
testb
jecxz
xchg
mov
push
cmp
jmp
push
test
outsl
jg
mov
jmp
push
add
push
out
pushf
popa
daa
push
pusha
negl
clc
dec
xchg
jle
sbbb
xchg
mov
xor
movsl
xchg
movsb
jle
pusha
ljmp
hlt
adc
cmp
jno
fstl
dec
shlb
clc
xor
dec
lret
jno
dec
inc
or
push
cwtl
add
push
jp
push
sbb
jne
ss
les
out
cmpsl
fidivrl
mov
lea
jne
push
js
mov
mov
lods
pop
test
mov
push
out
and
pop
stc
into
xor
loop
jns
cld
sbb
dec
scas
sub
lcall
dec
imul
mov
jg
cmpl
add
lock
mov
lods
hlt
clc
dec
scas
dec
ret
sbb
sub
nop
mov
outsl
push
movsb
loopne
cmc
aad
mov
xchg
dec
push
adc
cwtl
push
add
ja
testb
popf
arpl
mov
mov
insb
js
lret
adc
lock
adc
lock
sub
lahf
in
cld
mov
push
out
pop
in
lcall
add
and
loopne
ja
clc
pop
icebp
mov
outsl
inc
jg
ljmp
test
sub
or
pop
adc
ret
and
inc
xor
cmp
cmp
xchg
sti
daa
xor
lcall
dec
cmpsb
mov
rclb
add
int3
fstl
ds
lds
inc
daa
and
data16
push
pop
mov
rolb
pop
xor
xor
popa
push
cmpsb
fcoml
push
sbb
mov
sbb
aam
lock
xchg
loope
fs
mov
mov
lcall
cli
xlat
and
mov
addr16
mov
mov
mov
cmc
stos
stc
cmp
lcall
cmp
mov
cmp
dec
int
repnz
leave
repnz
lfs
dec
jnp
push
jle
xor
fcmovnb
incl
mov
adc
daa
push
ljmp
or
dec
stc
imul
adc
daa
or
shll
pop
add
mov
inc
call
leave
and
movsb
clc
in
ja
repz
scas
push
rorl
sbb
mov
cmpsl
cs
ret
iret
cmp
lret
inc
rclb
fldcw
ljmp
add
jmp
mov
mov
aad
inc
fsubs
inc
out
loopne
cmc
mov
loopne
mov
lss
push
cmc
add
xchg
push
pop
bnd
inc
lds
jl
test
jno
dec
jae
ficomps
aam
lcall
mov
lret
xchg
cld
dec
es
cmp
inc
and
xchg
push
movsl
data16
push
mov
cs
repnz
orb
inc
shr
cld
lods
popa
lds
add
xchg
dec
repz
or
sbb
int3
daa
mov
iret
out
add
test
clc
sbb
lahf
xchg
test
mov
in
push
pop
adc
xlat
xchg
mov
cs
addb
and
jmp
gs
shrb
push
xchg
stc
sbb
repnz
call
push
push
iret
imul
add
jb
dec
dec
ja
mov
cmpsb
ds
negl
mov
daa
movsb
jnp
mov
mov
push
adc
sbb
xchg
lock
sub
stos
stos
push
imul
sub
mov
movsl
push
push
loop
mov
add
pop
jmp
clc
test
js
inc
ljmp
xor
jb
shrl
jge
sub
sbb
jne
dec
or
xchg
out
mov
ror
jle
add
nop
aam
mov
lea
cmp
pushf
mov
roll
xor
addl
xchg
dec
sbb
loop
xchg
inc
popa
inc
dec
das
sub
inc
hlt
sbb
or
das
inc
dec
xchg
inc
jecxz
cwtl
call
adc
fisubl
stc
xchg
scas
mov
fidivs
das
daa
jbe
cmpsb
arpl
scas
arpl
jb
mov
out
sbb
mov
mov
add
push
inc
roll
gs
stc
and
leave
in
leave
inc
or
movsl
mov
cmpsl
cmp
push
or
jns
or
mov
inc
dec
cwtl
and
daa
shlb
adc
sbb
ficoms
leave
cmp
pop
pop
outsb
mov
jne
ss
inc
mov
jl
pop
subb
outsl
pop
adc
lds
lahf
ss
mov
not
pop
sub
sbb
clc
arpl
jb
jmp
nop
mov
sub
pushf
dec
lds
cmp
fldl
adc
cmp
mul
push
aad
stos
jg
xor
pusha
shll
pop
push
and
xor
hlt
insb
aas
jp
push
mov
dec
cmp
int3
adc
iret
jl
daa
sbb
cmpb
aaa
add
push
repz
pop
outsb
pusha
addr16
push
shll
movsl
mov
pop
pop
std
and
jo
xor
sbb
es
push
loop
repnz
mov
rcrl
sahf
filds
push
inc
subl
mov
into
adc
popa
cmp
pop
aad
imul
mov
fldt
cltd
shll
xchg
adc
mov
lret
mov
ss
sbb
scas
lock
repnz
test
lods
mov
cmp
push
push
inc
stos
xchg
leave
fldenv
xchg
push
mov
hlt
jecxz
cmp
fsubrp
fcomps
ds
repz
fwait
jge
jmp
repz
cmp
mov
ss
pop
jmp
iret
shl
aaa
xlat
mov
clc
sbb
cltd
dec
mov
and
insl
pop
icebp
mov
add
bound
mov
add
mov
push
push
addr16
inc
sbbb
fisubl
mov
cmp
xlat
loopne
in
jg
test
adc
ja
and
fidivrs
mov
jo
pusha
pop
push
mov
and
push
clc
mov
dec
or
popf
push
or
in
outsl
sub
dec
mov
fadd
popa
or
adc
or
jnp
add
daa
sub
jns
adc
or
cmp
js
dec
mov
lock
pop
push
bound
pop
jns
fmuls
push
data16
pop
movsl
mov
xor
sti
lods
or
bound
mov
pop
scas
pop
fwait
add
or
add
xchg
lea
jl
mov
cmp
das
push
es
ds
mov
jle
pop
mov
lods
leave
test
fisubrl
int3
ret
mov
imul
in
jns
add
int3
xchg
adcb
dec
int3
sar
pushf
divl
into
cld
dec
and
rclb
test
cmp
xor
sbb
pop
jl
xchg
inc
stos
sbb
jle
push
and
dec
jno
pop
testb
push
addr16
lahf
inc
fldenv
cmp
fstpl
fildll
cld
push
xlat
jno
xchg
cli
in
cmp
outsl
adc
or
aad
jmp
aaa
push
fstpt
hlt
add
cmp
dec
jne
sub
jle
loopne
les
and
fiaddl
lea
inc
movb
repz
adc
sub
out
mov
push
add
shll
jbe
mov
iret
in
enter
jb
test
add
or
in
cmp
ficompl
inc
cwtl
pop
lahf
sbb
adc
mov
sbb
stc
inc
and
out
lds
or
loop
fs
push
dec
xor
jbe
dec
int
sbb
ds
leave
pushf
lea
xor
pop
push
dec
enter
push
jp
fwait
iret
sub
sub
inc
in
inc
scas
and
ret
jb
mov
notl
aam
or
lea
xor
daa
in
ljmp
lds
and
lahf
xor
sub
dec
sbb
sub
in
or
dec
outsl
out
mov
sub
pop
std
cmp
clc
lds
test
cmp
adc
mov
ret
clc
or
lea
jl
add
dec
outsb
jb
or
jp
in
xor
mov
ja
xchg
dec
and
dec
and
push
jge
fsubrl
adc
cwtl
incb
or
xor
sbb
mov
pop
sbb
sbb
sbb
movsb
adc
add
xchg
xchg
jp
adcl
cmp
jae
iret
jae
popf
and
mov
jb
jae
xchg
or
call
insl
cltd
in
cmp
out
adc
cmp
add
cld
push
mov
test
mov
inc
call
pop
fadd
cli
stc
xchg
aam
in
cwtl
jl
push
sahf
jmp
jne
adc
out
push
pop
into
mov
and
dec
sub
popa
mov
int
jnp
inc
and
pop
jl
pop
out
sbb
or
ja
push
mov
adc
aad
imul
cli
mov
adc
je
xor
cli
cmpsl
mov
cmc
outsb
xchg
sahf
ret
cs
cmp
fsubp
inc
sahf
lock
add
int
int3
loop
mov
add
sbb
jno
std
in
aas
jno
mov
shrb
cmp
sbbl
cmpsl
out
ds
mov
imul
lcall
cmp
das
jle
fwait
cmp
int
mov
cmp
cld
jge
pop
xchg
and
jmp
cltd
mov
jl
pop
xchg
sbb
sbb
mov
adc
cwtl
lock
minps
shll
jmp
test
adc
frstor
arpl
lds
leave
dec
mov
mov
dec
pop
loopne
loope
sbb
cmpsl
and
imul
cld
jb
mov
push
xor
scas
dec
push
dec
dec
push
enter
imul
ds
push
out
test
ret
mov
bound
dec
jmp
inc
fabs
mov
lds
push
fdivs
push
push
push
popa
das
stos
inc
jg
adc
mov
hlt
push
push
jge
push
lds
inc
fldl
in
cmp
adcl
mov
jmp
push
fcmovu
push
jle
push
xor
jnp
lea
shll
jl
ret
or
mov
or
xchg
rcr
lahf
jo
in
andb
jle
das
out
push
mov
dec
adc
xchg
xlat
xchg
je
or
gs
data16
xchg
icebp
or
push
aaa
pop
out
clc
in
je
push
daa
lea
dec
sub
xor
lahf
test
fcoms
les
jmp
sub
pop
decl
push
add
bound
push
or
add
adc
pop
movsl
sub
fldl
pop
rorl
dec
pushf
icebp
sub
mov
and
mov
mov
push
push
xor
push
and
sbb
das
inc
sbb
xor
xchg
sub
js
mov
sub
movsl
jle
inc
adc
cmp
sbb
in
sub
mov
jo
cmp
gs
push
cwtl
movsl
inc
aaa
xor
std
mov
adcl
loope
sub
push
mov
cvttps2pi
jns
pushf
pop
out
rorb
jl
pop
gs
aad
inc
add
inc
cld
mov
mov
pop
into
xchg
and
sbb
flds
or
dec
iret
mov
pop
mov
mov
aaa
ja
and
mov
loope
xchg
adc
dec
in
sub
pop
clc
ret
idivl
mov
push
cmpsb
in
pop
push
xor
stc
pop
sbbl
rorb
xor
std
dec
mov
ret
mov
ret
xchg
js
mov
js
les
jl
fs
xor
or
rorb
pop
cli
negl
gs
repnz
and
movsl
push
mov
push
cmp
loope
ret
adc
xor
in
adc
pushf
outsl
lcall
push
orl
dec
popa
jp
sbb
movsl
add
repz
movsl
adc
sahf
pushf
cmpsl
mov
fisubl
hlt
test
mov
and
loope
cmp
daa
insl
push
sub
imul
mov
shr
sahf
hlt
pop
xchg
ret
adc
loop
mov
dec
imul
fcompl
and
inc
stos
in
ret
fucom
sbb
inc
cld
jmp
inc
repz
mov
and
stos
pop
mov
xchg
mov
sub
and
adc
dec
test
mov
xlat
minps
mov
jmp
mov
je
and
push
in
sbb
rorb
xor
pop
add
in
mov
mov
xchg
jmp
loop
jl
out
cli
cmp
push
bound
cmpsl
aas
sti
push
outsb
lods
addl
jnp
jbe
lods
ljmp
test
insb
mov
popf
xchg
pop
add
cmpsb
mov
cmpsl
sub
add
enter
xorb
subl
pop
movsb
mov
mov
push
cld
test
xlat
adc
mov
push
mov
pop
vmwrite
js
fidivs
icebp
adc
inc
and
imul
lock
iret
and
adc
mov
cli
pop
cwtl
jb
pop
push
int3
sti
mov
movsl
lods
inc
ljmp
adc
push
stc
icebp
add
ds
sub
inc
sub
mov
mov
and
stos
cmp
fchs
add
sti
pop
push
outsl
mov
pop
iret
xchg
popa
jecxz
outsb
sbb
cmp
fstp
cmp
add
dec
pop
dec
pop
imul
jle
and
sti
and
pop
add
or
sti
pop
jno
mov
inc
sub
std
stc
frstor
arpl
decb
repz
in
add
es
mov
add
stc
aaa
pushf
dec
pop
jecxz
ficoml
cmpsb
pop
xchg
int
jb
shll
add
pop
mov
pusha
dec
aaa
hlt
xor
adc
movsl
das
stos
mov
sti
in
pop
cmp
enter
xor
scas
dec
inc
xor
sahf
jb
or
mov
cmp
pop
mov
sahf
pcmpgtw
aas
dec
insb
in
jae
outsb
xchg
call
mov
push
or
push
repz
aam
jno
xchg
mov
sub
andb
mov
mov
mov
test
cmp
push
pop
mov
xchg
clc
sbb
and
test
sti
nop
and
int
cld
lcall
sub
int3
dec
cld
lods
jl
xchg
push
jmp
nop
dec
mov
shlb
sub
movsb
push
inc
sub
cmp
in
jle
mov
fnstsw
andl
push
mov
and
mov
mov
pop
lahf
xchg
inc
cmpsl
add
stc
aad
sub
jne
push
mov
insl
adc
adc
jmp
daa
fdivrl
xchg
popa
fcmovnbe
imul
jl
fcomps
scas
xchg
sbb
insl
ret
xor
or
lods
fwait
jmp
and
mov
aam
xor
scas
fs
clc
je
lcall
mov
xchg
mov
shlb
cwtl
stos
out
mov
sbb
divl
ja
push
pop
xchg
out
push
lcall
sbb
add
pop
or
into
repnz
inc
hlt
and
cmpsb
sub
mov
loop
repz
jl
les
jl
pop
loop
enter
cs
xlat
add
adc
jno
push
mov
hlt
sub
xchg
xchg
adcl
ja
lahf
imul
mov
cmp
xorl
sbb
rclb
xor
xchg
add
fucom
add
divb
fyl2xp1
fldcw
add
les
nop
outsl
popl
inc
rclb
fildll
sub
loopne
xor
or
sahf
sub
jno
sub
je,pn
mov
mov
cli
ljmp
dec
xor
mov
nop
mov
add
aad
bound
mov
xor
sub
rorl
fdivrs
shlb
jne
push
pop
rorl
cltd
rorl
and
cmpsl
mov
lret
mov
loopne
ficomps
cmpsb
add
je
arpl
lods
pushf
test
xor
mov
call
and
pop
mov
lret
sub
fadd
mov
or
pushf
stos
add
icebp
mov
cld
and
push
adc
jg
and
pop
gs
mov
ljmp
mov
enter
mov
xor
mov
jecxz
push
insb
loop
and
idiv
or
sbb
xchg
outsl
arpl
adc
mov
int
addr16
mov
repnz
add
push
mov
pushf
hlt
imul
xchg
cmpsb
dec
repz
cmp
pusha
mov
cli
jecxz
jo
mov
sti
cmpsb
mov
shrb
dec
aad
mov
std
xlat
ljmp
std
push
sub
out
out
ret
sbb
in
and
ficomps
sub
sub
or
and
movsl
lds
cmpsb
jp
fcomi
aam
push
enter
jnp
push
div
ficomps
test
sti
mov
pop
out
popf
lea
iret
rcrl
push
ds
enter
test
adc
jb
and
jno
aas
xchg
cmpsl
adc
mov
fbstp
mov
push
sub
push
push
or
addr16
xchg
jl
rcrb
xchg
repz
dec
inc
pop
es
jg
jns
pop
pushf
outsb
or
sbb
adc
pusha
xchg
jne
mov
ror
pop
pop
fnclex
scas
pop
xchg
rcrl
ja
adc
mov
scas
push
addb
cltd
divl
and
insb
adc
add
cmp
mov
push
jns
and
je
popa
outsl
das
sahf
flds
mov
and
mov
jge
test
outsl
adc
xor
enter
movsl
pop
and
ret
aas
mov
arpl
loopne
sbb
subl
dec
loopne
adc
xchg
pop
sarb
scas
roll
and
andb
test
hlt
cwtl
idivl
imul
xchg
sbbl
nop
int
xchg
adc
xor
cmpps
in
jo
adc
out
data16
aad
xorb
and
pop
test
pop
push
lea
in
sub
pop
lahf
mov
rcrb
cmpsl
mov
and
dec
xchg
inc
ss
mov
pop
mov
testb
add
push
add
add
pushf
js
icebp
sub
int
or
out
sub
jle
rorb
fcmovb
push
test
sbb
popf
mov
pop
sub
push
lds
insb
das
arpl
call
inc
lret
add
sub
push
mov
jge
pop
and
cld
test
inc
loop
push
rcrb
mov
dec
lea
sub
mov
insl
and
xor
idivb
outsl
jmp
or
insl
xor
cmp
jl
adc
into
inc
data16
fs
mov
pop
mov
push
push
pop
inc
frstor
adc
jp
xor
pop
jg
dec
adc
movsl
jecxz
adc
cmp
and
jg
mov
call
in
dec
out
xchg
add
inc
cmpsl
xchg
movsl
dec
cwtl
into
je
sbb
cmpsb
push
fidivrs
add
and
aaa
xchg
int3
mov
cli
push
outsb
mov
xor
pop
lods
xchg
or
xchg
fidivs
push
sub
xlat
xchg
jb
fcompl
dec
pop
mov
cwtl
inc
outsl
pop
js
in
ret
out
inc
pop
inc
iret
insl
stos
sbb
jecxz
aas
xchg
pusha
sub
test
inc
xchg
fsubrs
mov
and
or
in
xor
cmpsl
scas
fcomps
lea
xchg
or
outsb
lock
xor
and
jne
fsubrs
stc
daa
lahf
test
mov
adc
add
jge
in
bound
test
xchg
lea
mov
sahf
pop
loop
adc
daa
pop
ret
xor
inc
mov
xchg
jno
xchg
rcr
and
mov
inc
repz
rorl
fwait
call
negl
mov
cmp
adc
add
push
or
imul
iret
and
pusha
enter
adc
ja
mov
clc
mov
roll
nop
mov
movsl
outsl
inc
repnz
jo
pop
jg
push
fistl
push
repz
lahf
mov
pop
not
inc
sbb
fisubrs
shll
sub
fwait
sub
mov
gs
dec
dec
jns
dec
stc
mov
sub
adc
mov
jp
cli
push
jmp
lods
mov
cmp
jp
inc
psubusw
pushf
fadd
enter
jp
push
sub
inc
cmp
dec
pop
mov
outsb
daa
xchg
jle
jnp
jmp
out
mov
mov
ret
out
inc
sbb
pusha
xchg
and
push
bound
pop
lea
ds
push
popf
or
pop
sbb
jge
dec
xchg
cmpsb
cmpsl
fsubrl
loopne
test
les
jmp
loop
das
out
mov
mov
out
add
mov
inc
iret
and
out
shl
stc
jmp
jle
pop
or
mov
dec
and
mov
dec
dec
mov
push
pop
imulb
int3
inc
jg
bound
cmp
mov
mov
sahf
enter
jg
sbb
daa
ss
add
loope
add
clc
inc
adc
mov
inc
add
cld
out
xor
cmp
adc
mov
cwtl
inc
fistpl
xor
xlat
loope
insl
pop
push
xor
aaa
sbb
clc
ficoml
xor
test
rolb
dec
andb
into
and
push
inc
jns
loop
xchg
and
aaa
sub
mov
push
ret
pop
ds
mov
gs
cmp
bswap
lods
jge
jmp
stc
imul
sahf
cmp
pop
bound
dec
ds
pop
int
fistl
inc
pop
sbb
or
test
dec
movswl
addl
mov
push
mov
insb
sub
js
add
mov
scas
lock
in
pushf
loopne
outsb
jne
sbb
jb
push
loop
jb
ljmp
lcall
mov
sbb
push
lea
movaps
jnp
mov
and
or
ja
push
shrl
mov
xchg
cld
mov
xor
mov
out
loopne
movsb
enter
je
std
xchg
aaa
jecxz
dec
das
mov
cmpb
jns,pt
fistpll
push
xchg
cs
sub
pop
scas
cmp
jae
push
pop
scas
lret
ret
clc
std
movsl
call
xorl
jl
in
bound
mov
and
and
dec
ja
xchg
xor
xlat
sahf
hlt
xchg
in
outsl
out
pop
jle
and
add
xlat
cmp
jne
mov
cld
ss
cmp
mov
shrb
push
cmp
daa
xchg
lods
addr16
jp
push
xlat
mov
lds
or
sbb
sub
pop
add
das
and
into
adc
push
ljmp
mov
sbb
adc
push
add
dec
inc
inc
cmp
das
mov
int3
jp
inc
adc
add
shrb
or
cmc
cmp
inc
inc
das
jns
repz
stos
data16
rcll
ljmp
sub
push
or
pause
jle
sbb
mov
jge
dec
push
pop
test
xor
or
out
xlat
cmp
mov
push
mov
sub
adc
nop
test
jbe
dec
pop
pop
fwait
add
xchg
in
rolb
push
neg
xchg
push
push
xchg
mov
add
mov
aad
cmp
mov
filds
xchg
xchg
pop
push
sbb
xchg
jle
inc
ljmp
push
popf
mov
inc
jnp
pop
int
push
popa
sbb
xchg
scas
inc
push
pop
inc
xor
inc
mov
mov
ret
lret
pop
clc
jbe
pop
fnstcw
int3
add
imul
int3
mov
test
mov
shll
cld
push
mov
inc
imul
lock
inc
mov
aas
inc
cwtl
shrl
xchg
add
mov
push
iret
loop
leave
imulb
imul
incl
int3
movsb
mov
push
cmp
jl
popl
jb
cmp
mov
push
lret
mov
cwtl
jns
xor
lods
pop
and
mov
lods
push
add
ss
sbb
and
xor
mov
icebp
adcb
movsb
inc
xchg
popa
mov
ficomps
mov
cmp
inc
jp
aaa
mov
add
cmpb
lahf
inc
ja
xchg
and
jl
mov
adc
hlt
sbb
mov
mov
lods
cmp
subb
and
bound
inc
dec
loopne
lahf
test
test
jae
or
or
ss
in
push
insb
pop
mov
stos
push
mov
push
stos
shrl
lods
pop
dec
into
pop
pop
push
pushl
pushf
xor
jns
in
js
and
dec
js
jmp
cld
mov
mov
out
push
mov
xchg
push
dec
pop
or
mov
xchg
fidivl
inc
inc
or
aas
loopne
add
sahf
push
lods
cltd
std
inc
xchg
clc
dec
clc
mov
jp
pop
cmp
ret
lods
adc
inc
aaa
jmp
loop
dec
int
lcall
push
mov
fidivrs
mov
rolb
test
inc
xchg
mov
push
das
insb
xor
popa
adc
xchg
lds
fcomi
movsb
ss
mov
out
sarl
xchg
fstl
sti
cmp
xchg
hlt
pop
or
mov
adc
mov
lods
ja
mov
adc
push
push
xchg
test
push
cmp
jg
js
repnz
push
in
jne
push
dec
testb
popa
mov
in
jno
xchg
mov
mov
pop
loopne
lea
jns
add
ret
jp
xchg
mov
pop
push
cmp
cld
cli
sbb
adc
mov
jecxz
or
popa
sbbb
lods
mov
repnz
inc
jbe
ljmp
cmp
jecxz
push
sbb
fucomp
or
ja
js
int3
aaa
or
add
fwait
pushf
jp
stos
psubsb
or
ja
dec
jecxz
movl
push
xor
jns
aaa
dec
shrb
jge
jbe
adc
sbb
add
sarb
xor
gs
jp
test
jne
dec
daa
mov
sbb
xor
xor
adc
sub
xor
push
imul
aam
pop
cmp
jle
out
adc
or
int3
imul
pop
add
data16
in
inc
mov
jge
dec
mov
adc
test
sbb
dec
insb
mov
adc
inc
mov
mov
push
lods
xchg
mov
add
inc
bswap
iret
dec
xor
push
fistps
pusha
inc
xchg
je
popa
push
jg
xchg
movaps
push
scas
cmp
pop
daa
outsb
jno
xor
addr16
daa
inc
sub
test
lds
dec
scas
adc
ljmp
mov
add
mov
jecxz
aaa
popf
pop
pop
mov
lds
mov
test
mov
sub
popf
aad
cli
mov
dec
jge
scas
or
mov
sub
flds
mov
test
push
mov
test
aaa
dec
dec
xor
xor
cs
clc
fwait
and
mov
rcrb
mov
or
dec
mov
pop
sti
hlt
in
dec
mov
mov
fwait
pop
mov
adc
pop
xchg
enter
in
mov
cs
jmp
lea
push
pop
sbb
add
jno
sbb
or
pinsrw
mov
mov
ja,pt
ss
lock
stos
sbb
stc
lods
outsb
icebp
mov
orb
pop
push
jp
in
and
sahf
sbb
cmpsl
push
jg
mov
dec
sbb
scas
rcl
xchg
and
es
mov
loope
mov
lods
sub
testl
inc
mov
mov
in
fisubrl
cmpsb
cld
fstp
mov
imul
call
call
and
jnp
test
ljmp
mov
bound
mov
mov
mov
test
fcomps
mov
gs
push
adc
inc
stos
xor
and
sub
cwtl
out
enter
dec
mov
mov
lds
rorl
stos
xchg
dec
fcoms
lahf
cmpsl
popa
fcomps
fs
sub
cld
or
pusha
test
es
andl
adc
jb
insb
lea
testb
xchg
xchg
xchg
mov
mov
cmp
push
pop
inc
cltd
push
xor
push
in
mov
sub
xchg
ds
nop
pop
mov
popf
sti
pop
out
lret
push
sarb
rcll
test
lea
nop
mov
jne
sbb
pusha
xchg
pop
cmpsb
push
mov
clc
leave
repz
repz
adc
mov
cltd
cmp
jecxz
dec
xchg
popf
pop
cltd
add
enter
repz
jae
cmp
fsubs
das
inc
inc
jb
sub
in
xchg
daa
inc
adc
sahf
push
divl
fs
xchg
mov
inc
mov
repz
xorb
jge
sub
shll
dec
cli
mov
test
mov
rcrb
xor
jl
cmp
xchg
inc
xor
nop
subb
imul
sbb
dec
popf
mov
pop
idiv
and
imul
adc
movsb
shlb
repnz
not
add
loope
sub
push
inc
movsb
sub
lods
mov
mov
xor
sbb
or
add
and
out
aad
js
ds
js
jne
jb
test
sub
js
outsl
out
push
cmp
sub
outsl
or
xchg
dec
mov
sbb
ss
xchg
sbb
enter
xchg
pop
jg
repz
ret
aam
mov
faddl
out
cmp
dec
and
mov
je
arpl
jbe
push
test
clc
sbb
pop
stos
mov
cs
sarl
into
and
pushf
rcrb
scas
xchg
orb
jne
mov
imul
sete
fists
or
xchg
xor
sbb
ret
js
and
cli
adc
sbbl
dec
lods
popa
or
xlat
mov
bound
dec
fsubrl
aaa
rol
divl
mov
int3
dec
jbe
xchg
mov
in
xchg
movsb
mov
ja
loope
or
and
xchg
fwait
adc
mov
mov
push
mov
sbb
mov
cmp
jnp
jne
mov
push
mov
jecxz
aad
dec
int3
enter
fmul
fld
mov
aad
cltd
je
pusha
jl
lahf
mov
push
fs
lret
in
out
cld
jo
mov
push
push
popa
mov
arpl
mov
mov
test
cmpsb
mov
popa
sbb
inc
xchg
arpl
sub
ds
bswap
int3
cs
mov
sbb
add
bound
js
es
sub
dec
xor
adcl
xchg
mov
fs
ljmp
fmuls
add
fists
pop
imul
andl
test
gs
and
bound
cld
add
mov
jmp
pop
push
xchg
push
jns
mov
xchg
dec
lods
int
xor
js
call
insl
icebp
bound
test
jg
cmp
ds
xor
fdivl
es
push
pop
ret
inc
fidivrs
iret
int
jnp
int3
xchg
in
push
test
jnp
test
test
mov
sbb
je
in
ljmp
andb
loope
bound
mov
mov
mov
idiv
in
sbb
sub
fs
cmpsb
sbb
pop
ret
stc
inc
mov
sbb
or
mov
pop
adc
inc
pop
inc
adc
mov
data16
xor
pop
dec
imul
mov
pop
mov
lahf
lods
mov
jmp
fdivrs
xchg
and
inc
sbb
daa
test
insl
jo
out
test
cwtl
cwtl
adc
sbb
sbb
adc
lcall
sbb
sbb
pop
mov
test
ds
cwtl
pop
sti
cld
add
or
jle
or
call
or
mov
xor
mov
xor
or
jno
mov
inc
push
rcl
std
push
cmp
pop
test
xchg
mov
sarl
jl
pop
imul
fcoml
pop
cli
stc
repz
push
push
int
dec
push
add
mov
ljmp
xchg
enter
dec
fnsave
pop
scas
imul
xlat
idivb
adc
push
ljmp
xor
cmp
insb
mov
inc
cmpsl
and
or
add
mov
pop
je
fwait
pop
jge
pop
aam
jbe
jo
jg
hlt
jp
mov
push
test
mov
psubsb
je
sbb
andb
rcrl
cmp
je
push
mov
push
jle
inc
nop
stos
adc
jmp
or
mov
out
push
sub
pop
test
and
sbb
imul
scas
lcall
mov
sub
cmc
sbb
xor
xchg
dec
stc
test
je
pop
sub
icebp
pop
stos
or
mov
je
movsl
std
jl
sub
movsl
or
add
daa
adc
out
jns
cmp
mov
in
jnp
mov
stc
hlt
jnp
fwait
inc
dec
pop
push
sub
mov
xor
dec
fstps
xchg
add
inc
or
les
cmp
fadd
insb
dec
fwait
jo
sbb
xor
dec
inc
jnp
xchg
inc
dec
mov
gs
xor
jp
mov
out
fs
mov
sbb
stos
jnp
mov
mov
pop
jmp
add
lahf
inc
shrb
xorb
mov
repz
movsl
add
push
lds
shll
shlb
data16
repz
loop
stos
jl
ja
mov
cmc
dec
das
adc
movsl
jno
test
xchg
sbb
rol
out
cs
mov
roll
ja
cwtl
ja
or
jno
xlat
and
iret
cmp
dec
push
xchg
loope
sti
movsb
xchg
jle
les
fstl
xchg
flds
xorb
stos
lahf
inc
add
dec
push
jbe
lret
lret
sbb
adc
in
insl
cmp
or
xchg
subl
dec
mov
fistpl
pop
test
pusha
fdivs
push
or
sub
xchg
xor
inc
enter
xchg
nop
mov
ljmp
jno
xchg
decl
in
mov
aas
lods
jne
inc
inc
dec
cmp
arpl
out
push
mov
fcomp
sahf
cltd
add
add
jns
push
test
scas
sbb
xchg
mov
jge
sbb
push
adc
adc
or
aad
push
movsl
data16
fiaddl
adc
cld
movsb
js
adc
jnp
iret
lods
loopne
clc
dec
inc
inc
jecxz
dec
mov
insb
shrb
jnp
fisttps
cmpb
or
mov
push
sub
icebp
outsb
bound
mov
or
jne
dec
add
dec
sub
push
aad
push
cltd
or
ja
pop
andl
mov
das
mov
and
inc
or
les
popf
xchg
addb
mov
xchg
das
std
andb
push
aam
fstl
cmp
xor
push
fsts
fimull
add
mov
arpl
jno
add
fsubrs
ja
push
sbb
mov
push
cmp
lds
pop
sbb
testl
xchg
imul
pop
incb
pop
sbb
repz
sub
ja
mov
push
and
and
adc
sti
jno
push
adc
jne
sti
and
loop
inc
dec
adc
sbb
add
ret
dec
inc
dec
mov
insb
jne
js
mov
pop
adc
mov
imul
arpl
jno
inc
add
sti
paddusw
pop
loop
xchg
push
lds
xchg
mov
inc
or
out
inc
outsl
jge
test
inc
icebp
imul
dec
ret
fldenv
or
pop
xor
das
std
jg
add
jae
xchg
push
jnp
in
nop
fstpl
jne
js
in
cmpsl
arpl
sbb
pop
ja
pop
xchg
adc
jmp
jne
cmpsb
hlt
stos
lcall
inc
lret
sbb
movsl
xchg
mov
insb
xchg
mov
loope
mov
in
shll
push
adc
jbe
sbb
jns
leave
cli
push
dec
jmp
adc
jnp
xchg
rcll
test
je
jge
xor
inc
mov
xor
ss
sub
inc
sub
cmpb
dec
sbb
sbb
xchg
inc
call
push
mov
lock
outsb
and
pusha
data16
sbb
pop
cmp
mov
jle
popf
mov
mov
inc
adc
pop
inc
or
pop
clc
inc
mov
adc
loopne
std
inc
and
pop
ja
push
mov
cmpsb
jo
mov
push
je
pop
cmc
shll
ffree
sbb
dec
sub
push
fwait
mov
fsubs
scas
lds
popf
xor
add
imul
enter
sahf
pop
sub
pusha
mov
jl
out
test
mov
js
xor
ret
movl
xor
arpl
mov
movsl
or
xchg
or
aaa
lahf
nop
or
mov
stos
cltd
pop
inc
subl
call
fsubrl
mov
push
jae
inc
pop
jmp
or
jmp
lods
adc
imul
lcall
imul
test
jnp
push
cmp
repz
inc
test
push
mov
pop
sbb
stos
int
push
out
jb
inc
int
iret
xor
pop
mov
mov
test
outsb
mov
lods
jb
inc
xor
loopne
popa
cmp
ret
inc
int
lret
es
daa
arpl
push
mov
insb
lahf
jne
fwait
xchg
push
rcrl
ds
adc
xor
mov
outsb
and
mov
adc
cmp
popf
outsl
movsl
xor
xchg
mov
nop
or
mov
fsubl
fdivl
jns
outsl
sub
mov
in
or
mov
aad
push
insl
or
pop
es
xchg
xor
ja
push
push
gs
mov
loopne
adc
pop
jmp
xor
arpl
jp
test
mov
scas
xor
mov
mov
mov
aaa
icebp
roll
mov
mov
pop
xchg
jae
cmc
and
push
fnstsw
lods
sbbb
sbbb
xchg
and
icebp
out
mov
les
icebp
cmp
push
pushf
out
cli
inc
xchg
mov
lret
sbb
inc
pop
xchg
inc
mov
cmc
mov
adc
ja
mov
pusha
jb
sbb
das
sub
pop
outsl
inc
push
dec
sti
mov
les
ds
rol
pop
ret
cmpsl
mov
call
and
and
test
push
lods
movsb
js
mov
sarb
mov
pmullw
cmp
aaa
cmp
loop
or
sub
popf
cmpsl
jl
addr16
jle
testl
lret
in
loope
inc
xchg
jb
pusha
popf
shl
ret
lret
aam
int3
movb
or
in
jmp
insl
test
cwtl
cld
pop
jp
mov
insb
mov
cld
jne
shll
nop
adcl
shr
xor
xchg
dec
sub
mov
push
sub
loop
push
shlb
dec
outsb
aaa
cmpb
inc
out
mov
sub
loop
push
add
rol
bound
fidivs
js
mov
in
arpl
add
les
mov
inc
enter
arpl
dec
rol
mov
sub
inc
and
adc
add
sub
outsb
addr16
sarb
sbb
cmp
jnp
notl
jmp
or
xchg
mov
stos
inc
pushf
cmp
xor
xor
sub
fwait
inc
js
xchg
ret
mov
push
sbb
dec
sar
mov
rolb
or
sbb
sub
movsb
mull
push
lcall
add
xor
and
xor
push
fs
insb
pop
lods
add
outsb
das
leave
push
popf
and
mov
cmp
jge
popf
inc
mov
lret
shr
test
pop
pop
and
pop
leave
insb
adc
aad
push
xor
xchg
mov
out
clc
dec
jl
js
imul
sbb
cmc
and
lods
test
add
movsl
lock
jl
push
imull
or
int3
xchg
dec
or
imul
aas
mov
scas
and
aad
pusha
sbb
imul
mov
dec
and
mov
aad
jg
push
enter
push
dec
in
sti
sub
mov
inc
imul
daa
pushf
mov
icebp
lret
pop
pop
mov
cld
push
mov
aaa
hlt
xchg
pop
and
cmpsl
insb
add
es
ficoml
jle
test
ss
inc
fdivrl
mov
cmp
inc
inc
jnp
fndisi(8087
pusha
mov
jns
lahf
sbb
add
mov
ss
ljmp
cmp
add
add
jl
adc
jne
xabort
jl
sbb
stos
cltd
lret
xchg
dec
jnp
lret
insb
cld
push
pop
cli
xor
pop
stc
mov
mov
pop
fcom
out
daa
psrad
sbb
push
cltd
pop
sarb
dec
jnp
test
or
xchg
std
sbbl
cmp
insb
mov
adc
les
das
in
aas
mov
data16
sub
or
cmp
xchg
fs
jg
mov
sub
and
nop
cltd
sbb
mov
js
jecxz
xlat
orb
jnp
mov
dec
inc
sbb
dec
add
pop
pop
dec
mov
or
test
cli
test
fnsave
test
mov
nop
sahf
fcoms
call
sbbl
xlat
ljmp
mov
in
add
in
jle
or
and
adc
xchg
mov
test
xchg
cmc
fcoms
divb
mov
dec
push
dec
xor
and
fldlg2
dec
jo
mov
ret
ss
cwtl
sahf
push
xchg
popa
or
push
adc
nop
push
test
je
mov
xchg
sahf
push
mov
inc
fs
lds
or
test
xor
loope
mov
fisttps
test
dec
and
jmp
mov
lret
xchg
dec
dec
addr16
fcomp
rclb
jne
pop
xchg
pop
adc
mov
mov
fnstcw
xchg
xchg
in
clc
pushf
fildl
sarl
aad
xor
or
fidivrl
add
call
data16
aad
ds
mov
add
insl
xchg
mov
mov
testb
mov
mov
shl
lock
pop
out
lds
sub
jmp
minps
gs
push
mov
subl
and
fcoml
call
xor
sub
pop
xlat
push
sub
cmpxchg
jmp
mov
addr16
insb
push
xor
mov
bound
repnz
push
push
addr16
in
push
ss
push
jecxz
aas
xchg
and
sbb
xor
repz
cmpsl
cmp
clc
dec
decb
jo
stos
inc
clc
xchg
loope
mov
mov
movsl
fucomip
sarl
movsl
xor
insb
insb
jno
je
sti
pop
imul
lfs
adc
jbe
xchg
xchg
sbb
mov
fidivs
mov
nop
lcall
adc
pop
enter
cwtl
pop
cmp
push
xor
lret
dec
xchg
xchg
jecxz
add
jg
data16
rorb
jno
dec
xor
in
mov
inc
inc
daa
outsl
cmp
push
fildl
mov
lret
in
push
std
loopne
jne
std
outsl
fwait
inc
add
xor
inc
test
mov
test
fsubrl
scas
mov
lods
sub
mov
jmp
sti
lret
xor
cmpb
xor
cmp
xor
ljmp
and
sti
sbb
rcpps
shrl
dec
mov
stos
std
pop
out
xchg
jae
outsb
sub
icebp
jg
das
mov
and
xchg
into
sub
call
ret
arpl
jo
mov
push
int
shlb
int
push
fisubrs
daa
jbe
bnd
or
jbe
sti
mov
cmc
bound
mov
repz
sahf
jp
or
push
adc
roll
xchg
sarb
pop
cmpsl
cli
movsl
aaa
imul
lret
cwtl
test
or
mov
inc
jno
repnz
cmp
fdiv
or
sbb
lret
in
stc
add
insb
fcoms
inc
das
inc
sahf
cmp
pop
mov
adc
xor
mov
mov
das
cmp
hlt
xchg
jle
mov
xchg
into
test
movsl
int
pop
ja
das
xor
add
pop
adc
mov
push
xchg
repz
lcall
jnp
mov
sbb
dec
mov
in
shrb
stc
mov
das
mov
dec
sti
scas
in
jne
fisttps
mov
sbb
inc
jno
pop
mov
pop
pushf
shl
xchg
fnstsw
dec
sbb
jns
fcomp
jle
jp
or
jno
dec
mov
mov
enter
pop
inc
or
out
fcmovnb
in
lods
in
hlt
inc
pop
inc
xchg
ret
pop
sub
pop
lock
and
jl
lods
jl
movsb
movsb
adc
pop
push
imulb
cmpsb
bound
jns
daa
lea
push
pop
lds
aam
push
sbb
in
push
cwtl
jecxz
in
cmpsl
sarl
inc
mov
aad
out
sahf
popf
push
dec
je
sahf
xchg
into
lahf
call
xchg
mov
jle
jnp
add
push
push
je
xchg
gs
and
ss
loopne
imul
jnp
pop
push
movsl
lret
push
jo
out
xor
lods
mov
xchg
and
test
xchg
sub
or
jg
shll
lahf
lea
cmc
dec
mov
adc
bound
call
hlt
lret
into
xlat
shll
int
fildll
fisttps
std
mov
dec
jecxz
fisttpll
pusha
cmp
clc
inc
in
insb
gs
adc
xchg
into
jae
pop
bound
daa
das
stos
push
into
xor
jno
push
dec
mov
pop
and
or
add
imul
sub
dec
gs
or
out
pop
xchg
sbb
sbb
stc
mov
xlat
mov
lahf
inc
jae
sub
scas
sbb
gs
mov
jle
rclb
sbb
sub
adcb
ret
shll
std
mov
loopne
jns
bound
jbe
pop
test
cltd
adc
push
mov
push
sbb
dec
mov
mov
ret
mov
sbb
cmpsb
jo
xor
mov
dec
or
repz
push
inc
push
mov
push
mov
idiv
inc
mov
add
std
inc
loop
rclb
je
push
or
scas
push
cmc
insb
test
mov
mov
xor
rcrb
xchg
dec
in
testl
mov
daa
loopne
out
sbb
inc
xchg
outsb
das
pop
mov
pop
shll
pushf
mov
adc
out
int3
mov
xchg
push
xor
lock
ds
push
xchg
ficoms
sub
dec
aas
mov
push
popa
in
dec
stc
jo
inc
in
ffreep
or
mov
adc
int
xor
adc
ficomps
push
lods
jl
pop
sbb
popa
lcall
cli
mov
adc
cmpl
sahf
insl
sarl
cmp
mov
punpckhwd
adc
fnsave
cmp
cmpsl
and
aad
mov
or
sbb
push
hlt
fxch
call
jecxz
cli
loope
pop
push
xchg
int3
cli
std
inc
repnz
fdivs
shr
aas
jo
test
test
mov
jmp
cmp
js
rorb
adc
dec
push
outsl
pushf
sbbl
mov
movb
jb
xor
and
adc
push
mov
pusha
lods
mov
pop
adc
push
adc
out
dec
not
mov
push
sahf
add
cld
push
shl
mov
adc
movsb
pop
cmpsb
out
adc
cmp
divb
das
and
mov
inc
cli
or
jns
pop
push
sarb
mov
ficoml
test
mov
out
jmp
test
push
add
inc
add
aaa
imulb
ja
cmp
xlat
adc
mov
jo
cmp
rcl
cmp
lahf
dec
sti
mov
sbb
jnp
jp
mov
xchg
aas
negb
into
add
sbb
mull
jbe
jg
ret
addr16
pushf
outsb
fld
xor
popf
inc
pop
iret
sub
xor
bound
call
incl
data16
or
insb
repz
xor
mov
jecxz
xchg
scas
ss
xor
inc
dec
test
fists
push
pop
dec
jbe
push
ror
mov
pop
cmp
aad
mov
pavgw
push
xchg
xchg
inc
adc
lods
mov
popa
xchg
pop
jl
jnp
ljmp
push
jp
jge
popf
add
int3
lods
push
in
shl
stos
les
movsl
bound
and
lret
std
sub
jp
roll
sub
pop
add
adc
jbe
dec
test
and
and
rcll
rcll
xchg
mov
sbb
sahf
push
setl
push
mov
adc
stos
mov
mov
ja
pop
xchg
test
pusha
ror
std
cmp
sub
stos
shrb
jg
lea
iret
mov
and
pushf
adc
push
adc
stc
xchg
mov
adc
imul
xor
idivl
adc
jae
cmp
stos
pop
popf
mov
mov
push
cmpsl
shll
inc
arpl
pop
push
sbb
xor
out
loope
adc
jge
adc
imul
mov
inc
mov
dec
mov
sbb
gs
lea
xchg
test
hlt
mov
icebp
xor
call
pop
lcall
mov
push
mov
xchg
jno
lods
push
cs
push
lods
or
dec
sahf
and
jl
testb
lea
cld
xor
add
lahf
in
shlb
lret
mov
inc
pop
jp
lret
das
add
andl
inc
sub
sub
std
popa
lods
xor
bound
sbb
push
jl
ds
adc
mov
cld
xor
or
xorb
dec
xor
jae
ret
mov
addr16
cmp
popf
ljmp
stos
or
jmp
inc
cmpsl
mov
pop
movsb
es
mov
cmp
filds
inc
lret
mov
stc
aaa
arpl
cwtl
and
aas
and
iret
xor
mov
lret
cmp
iret
push
out
stos
xchg
xchg
ja
pushf
or
in
push
cmp
mov
bound
mov
cld
or
jns
dec
xchg
imul
repz
mov
jge
in
jno
pop
jno
cwtl
and
inc
pusha
inc
in
and
or
or
aas
mov
sub
mov
jne
push
jne
movsb
inc
adc
out
xchg
jne
mov
and
or
push
sbb
les
arpl
adc
rorl
pushf
insl
push
out
enter
push
or
sbb
popf
mov
lds
repz
popf
add
ja
cltd
lret
adc
and
bound
push
dec
inc
idivb
int3
push
outsb
aas
jo
sbb
push
and
xchg
sbb
add
fsub
cwtl
xchg
xchg
sub
cmpsl
ret
js
lahf
mov
mov
rclb
loopne
jb
inc
mov
mov
add
pop
or
dec
aam
lods
jo
lahf
add
push
sub
adc
scas
dec
adc
repz
cwtl
into
cmp
std
lahf
or
lock
xchg
aaa
lret
sbb
testb
sub
stc
call
icebp
inc
and
mov
push
icebp
push
loope
sbb
fwait
pop
imul
cld
sub
cltd
fistpll
int3
sub
mov
xor
xor
jecxz
pop
fs
stos
adc
movsb
aas
or
out
cmp
push
mov
loop
call
clc
cmp
cmp
push
repnz
lret
sub
cmpsl
xchg
add
sbb
jne
add
into
sbb
cmp
loopne
cmc
lods
outsb
fadds
pop
nop
add
data16
jae
add
fadds
mov
cmpsb
push
cld
pop
xor
scas
push
leave
add
sub
jl
das
bsf
push
xchg
ss
mov
adc
popl
or
ficompl
aad
sbb
jmp
cwtl
add
into
pop
clc
mov
push
push
push
ljmp
hlt
in
push
out
sbb
sub
add
fs
mov
sbb
xchg
call
jae
pop
sbb
test
subb
movsb
fwait
cmpb
out
cmp
fucom
xor
jle
into
lret
jge
fidivrl
stos
cmpsb
lds
lock
xor
mov
test
xlat
in
loope
cmp
jno
mov
repz
xchg
stc
mov
push
lcall
aad
shlb
imul
out
xor
xor
outsl
xchg
sbb
fsubl
sub
test
mov
xchg
cmp
inc
push
push
movsl
in
fwait
jmp
adc
rcll
jmp
in
inc
pop
mov
jge
add
pop
std
dec
imul
cld
jo
lret
add
sti
into
pop
icebp
out
add
cwtl
sub
and
and
mov
jmp
dec
test
inc
jne
in
pop
and
sti
mov
decb
cld
jmp
push
rcr
sub
jge,pn
or
enter
testb
adc
jle
aam
das
push
or
ljmp
aas
dec
push
adc
mov
sbb
not
pop
push
push
lods
test
and
and
xor
gs
fnstenv
xchg
stos
adc
loopne
jp
pusha
outsb
pop
cmp
inc
out
add
repz
push
fdivl
shlb
notl
imul
xchg
and
icebp
xchg
popf
mulb
inc
out
push
cltd
jl
inc
adc
or
arpl
sub
jo
lret
or
pop
jnp
jbe
fwait
shl
push
add
fmul
dec
outsl
inc
sti
mov
cmp
std
sbb
sbb
bound
cli
test
inc
mov
les
les
in
pop
or
adc
insb
loopne
push
jp,pn
cld
pop
movsl
aaa
pop
mov
clc
shlb
jg
movsb
aas
stc
cmpl
add
sti
dec
orb
jnp
mov
int
popf
stc
xor
push
ficompl
jge
lds
mov
loope
sbb
stos
ror
add
adc
mov
inc
jae
inc
adc
ss
cltd
jl
icebp
push
imul
xchg
xchg
lret
push
fimuls
mov
sysenter
add
sub
rorl
mov
rcl
adc
fbstp
push
in
dec
icebp
scas
sar
sbb
loopne
mov
sub
loopne
ss
dec
mov
adc
cmpb
xchg
scas
roll
lret
add
adc
dec
dec
mov
negb
mov
mov
jbe
xor
test
test
imul
gs
popa
xor
or
cmp
bound
fiadds
sbb
add
jg
and
arpl
sbb
fistps
fwait
lods
aas
mov
dec
ss
enter
inc
test
inc
dec
test
pop
das
es
jae
inc
nop
inc
mov
into
mov
cmp
inc
roll
push
out
sbb
les
inc
movsl
push
mov
or
repnz
push
push
jo
add
ljmp
mov
idivb
mov
mov
push
sub
mulb
pusha
xor
insb
xor
dec
outsl
inc
add
add
inc
ficomps
mov
mov
test
push
pop
cmp
pop
leave
loop
arpl
fsubr
mov
mov
push
sbb
inc
lods
xchg
cld
fildl
cmovno
subl
push
lahf
sbb
leave
xlat
aas
inc
lea
dec
adc
cmp
adc
scas
and
stc
add
cmp
mov
int3
mov
jmp
xchg
jl
loope
ret
in
imul
stos
and
lret
test
andb
add
insl
inc
mov
and
fsubl
inc
lock
lea
lahf
stos
in
adc
add
mov
jnp
movsb
in
inc
scas
sti
enter
xlat
insl
test
push
mov
jns
hlt
pusha
test
or
or
mov
xchg
call
mov
adc
pop
loop
fbld
sub
int
jb
lea
xgetbv
xchg
xchg
cs
test
pop
shr
jle
out
mov
sub
add
or
pop
negb
and
les
sub
lods
mov
cmp
mov
lock
pop
mov
out
movsb
adc
or
or
and
xchg
mov
cmp
sbb
andb
inc
xorb
mov
rclb
mov
or
dec
jp
or
inc
xchg
sarb
adc
movsb
hlt
or
jb
mov
ret
loope
out
out
pop
fs
rcrl
adc
loop
inc
xchg
mov
loope
add
xchg
xchg
cld
sbb
jb
scas
push
or
push
movsl
pop
fcoml
adc
mov
add
push
pop
push
cmpsl
or
pop
push
mov
mov
or
mov
aam
inc
dec
cmp
sbb
xor
jbe
push
xor
sti
add
cmp
xor
cmp
cmp
out
inc
cmp
shrl
out
ja
mov
jne
and
leavew
rolb
lods
mov
jecxz
mov
shll
rsm
out
add
xchg
cs
mov
out
mov
flds
and
icebp
pop
inc
mov
xchg
jp
in
adc
xor
movsl
mov
add
mov
lea
adc
fstpt
pop
test
jl
in
incl
je
cmpsl
mov
mov
sbb
je
les
addr16
dec
xchg
hlt
inc
push
push
leave
sahf
mov
inc
xchg
sbb
imul
push
mov
xor
lock
xchg
mov
pop
je
xchg
fwait
popf
adc
mov
mov
xchg
push
shlb
pop
fwait
mov
cmpsl
stos
mov
pop
fs
add
dec
fidivs
sbbb
out
arpl
or
je
insb
pop
and
cs
push
mov
fcoms
push
movsb
test
lcall
mov
or
std
loopne
mov
xchg
movsb
push
push
pop
sbb
push
lods
xor
or
std
sbb
idiv
test
jl
add
add
test
pcmpgtd
orb
push
adc
imul
xchg
push
add
sbb
xchg
stc
push
dec
dec
lods
inc
pcmpgtd
adc
cmpsb
or
imull
rorl
add
popa
and
adc
movsb
lret
popf
imul
cli
scas
shlb
bound
scas
xor
cmc
out
repnz
out
mov
jmp
push
push
fidivrs
andb
es
sub
sahf
pop
insw
cltd
movsl
stos
xchg
clc
pop
or
push
mov
fistpl
clc
lods
test
dec
cmp
js
aad
into
std
adc
push
imul
fdivrs
cmpsb
fs
jb
or
sbb
xor
testl
mov
xor
pop
and
adc
mov
aaa
sbb
cmp
xchg
nop
xor
sub
adc
mov
add
pop
sub
outsb
popa
and
add
stos
aam
mov
repz
addb
xchg
imul
push
xchg
bound
ja
mov
xchg
push
push
jg
jae
or
outsl
pop
xchg
stos
les
std
out
dec
adc
int3
adcl
xor
rclb
data16
mov
push
adc
rcll
jbe
ror
gs
mov
sbb
jno
add
dec
mov
push
rcl
xrelease
pusha
xchg
pop
xchg
xchg
lock
jo
jo
subps
inc
jmp
sbb
push
out
loop
mov
dec
push
dec
fidivrl
out
jns
push
enter
int3
fsubr
pusha
pushf
cmp
scas
xchg
add
cmc
stos
mov
and
pop
push
cs
cltd
push
lods
clc
jg
xchg
lock
insb
sahf
cmp
adc
add
sarb
rcll
popa
call
push
dec
sarl
and
in
adc
not
ja
pop
cmc
sbb
dec
mov
jns
scas
mov
mov
jno
dec
icebp
outsb
sub
arpl
adc
mov
mov
adc
pop
lret
mov
incb
mov
cmp
inc
and
mov
stc
push
mov
xchg
repnz
cmp
arpl
jbe
fwait
xor
loopne
iret
push
ds
addb
mov
mov
les
enter
pop
or
xchg
pushf
divl
mov
jbe
xchg
inc
and
mov
cmpsb
dec
enter
nop
inc
push
lods
dec
mov
repnz
mov
scas
test
dec
add
lods
sub
mov
or
dec
mov
mov
push
jns
pop
pop
andl
or
push
aaa
mov
jne
bound
push
pusha
icebp
lods
daa
lahf
jnp
sbb
mov
push
sub
rcl
xor
mov
dec
adc
jge
out
addr16
or
mov
add
cmp
int
stc
fwait
sahf
sar
add
ret
mov
pop
ficomps
jl
add
cmp
cmp
push
mov
insb
out
fwait
int3
inc
inc
adc
mov
add
and
add
mov
sbb
xor
ss
cmp
scas
xchg
int
lahf
daa
lock
inc
add
fcomps
out
xor
mov
test
adc
xchg
push
test
call
push
adc
leave
fnsave
in
mov
loope
popa
mov
xchg
data16
dec
and
adc
jmp
pop
pop
jmp
mov
pusha
shrb
das
xchg
xchg
dec
inc
adc
xchg
inc
push
xchg
pop
ja
lret
cmp
fwait
mov
add
std
and
mov
cmp
xchg
stc
repz
pushf
cmp
add
setp
xchg
pop
jle
lods
lods
xor
lods
mov
sbb
loopne
xor
and
mov
xchg
insb
fistps
mov
adcl
fstpl
sbb
or
mov
push
cwtl
xor
pop
pop
sub
sub
fs
into
inc
sub
sbb
lret
cmp
and
mov
add
imul
mov
sub
inc
jo
jmp
mov
addr16
cmc
repnz
pusha
add
pop
dec
icebp
mov
pop
jo
sbb
daa
xchg
xchg
out
pop
ja
repz
sub
jmp
loope
mov
dec
ret
xor
or
adc
cmp
add
xor
add
mov
gs
xchg
sbb
ficoml
enter
sbb
mov
daa
or
dec
adc
xor
and
sub
test
pop
jnp
outsl
add
mov
outsb
insl
push
xor
les
addr16
test
adc
cmpsb
scas
adc
lock
das
int
sub
xor
xchg
xor
cmc
fidivl
daa
je
in
mov
les
aaa
xor
and
xchg
cli
or
mov
jae
movl
pusha
dec
ja
leave
dec
mov
and
jge
inc
jl
aaa
hlt
ret
out
sub
jne
dec
jmp
iret
add
dec
sub
leave
mov
fs
push
lcall
mov
fiaddl
pop
pop
cmc
or
test
inc
xchg
xchg
arpl
push
in
test
sub
xor
cmpsl
lods
stos
arpl
cmp
into
ret
mov
adc
repnz
fildll
add
js
movsb
ja
iret
popa
push
pop
stc
or
mov
push
in
pop
cld
hlt
jge
movsl
test
push
or
inc
mov
jae
cmp
xchg
fnsave
adc
sub
mov
loop
sbb
rclb
stos
jmp
sbb
jp
inc
sti
nop
cmovs
mov
xchg
dec
add
js
xchg
fnstenv
loopne
dec
and
fidivs
mov
adc
fnstsw
sbb
arpl
outsl
in
adc
mov
nop
inc
cmp
mov
dec
aaa
fistl
hlt
loop
lods
insb
add
lods
or
cmp
dec
jo
cmp
in
jnp
xor
jle
rorl
mov
push
sbb
clc
lcall
jmp
ja
jge
xor
mov
and
mov
fldl
out
pop
dec
mov
mov
push
xor
repz
stos
sarl
fsubp
pop
cld
lods
hlt
lcall
rcrb
pop
cmp
daa
mov
inc
repnz
ljmp
pop
movsl
pop
fidivs
add
xor
lret
pop
adcb
out
cmp
dec
pop
mov
loop
or
repnz
mov
enter
ficomps
leave
shl
and
jle
in
pop
inc
push
mov
dec
test
xchg
cmp
jmp
ficoms
fwait
jle
dec
sbb
lea
dec
xchg
jns
insl
jo
test
add
xor
push
daa
jb
nop
fdivrs
dec
mov
popf
shl
fs
xchg
xor
lret
lods
ss
gs
cmp
loop
arpl
dec
xchg
call
mov
push
jg
cmp
push
sub
lods
inc
or
cmp
cmp
sub
fs
sbb
push
xor
add
mov
pop
add
loop
mov
add
addr16
add
sbb
roll
sub
xorl
jp
dec
sub
popf
lret
bound
sarl
jp
mov
xchg
inc
push
subb
ret
pop
cli
dec
decb
jae
out
xchg
call
sbb
sub
push
lods
scas
mov
mov
jp
mov
mov
leave
pushf
loop
insb
mov
or
pushf
out
mov
fisttps
push
jg
fstpl
push
or
mov
mov
jg
lods
push
inc
fisubl
mov
fs
inc
loopne
xchg
inc
cmp
into
sub
adc
sbb
popa
das
lcall
adc
or
popa
push
loop
cmc
dec
sahf
cmpl
add
test
stos
daa
pop
sti
and
mov
xlat
and
outsl
test
jae
in
xor
or
ret
sub
sbb
cli
sbb
scas
xor
xorl
xchg
fld
mov
popf
hlt
das
pop
dec
sarl
sbb
test
sbb
inc
out
enter
jnp
pop
ret
hlt
jle
sbb
arpl
sbb
pop
jg
adc
pop
mov
cmp
sub
and
mov
insb
imul
mov
cmp
int
push
test
ja
mov
inc
int3
dec
sub
ret
insb
scas
adc
mov
imul
ss
out
ss
or
adc
in
es
xor
imull
jne
rcl
sub
and
imul
xchg
fists
inc
repz
xor
push
repz
cmp
imul
imul
imul
and
fstps
lock
scas
fstl
fldcw
and
pop
test
outsb
pop
scas
and
mov
pop
and
pushf
int3
cli
mov
jmp
jecxz
scas
shr
xchg
mov
mov
fimull
dec
ret
mov
pop
in
pop
lret
fsubrs
sti
or
xor
mov
cmp
push
cmp
fdivrs
cmp
or
sahf
imul
mov
mov
dec
adc
in
lea
mov
jg
jg
ss
stc
imul
sbb
pop
insb
negb
mov
push
mov
nop
icebp
pop
dec
sub
ret
mov
jae
jl
jle
and
cmp
or
icebp
and
cmp
addr16
xlat
ds
or
push
aaa
jne
push
imul
lcall
mov
jle
shl
mov
pusha
pop
cmp
inc
xchg
lods
sub
xchg
sbb
or
ret
push
pop
outsl
push
aam
push
push
outsl
mov
xchg
sbb
je
enter
push
adc
leave
ret
inc
mov
sub
sbb
push
xor
push
lcall
ret
mov
lds
mov
lods
xchg
lds
mov
xchg
daa
movsb
mov
rclb
mov
mov
cwtl
fmuls
mov
iret
lret
xor
cmp
push
js
xchg
popa
xchg
jae
push
add
sub
aam
daa
lcall
pop
inc
xchg
pop
lret
sub
sub
jae
mov
lret
push
outsb
fmul
out
lods
lds
aaa
mov
fstps
push
inc
and
xchg
sahf
pop
jge
adc
testb
sub
dec
mov
dec
add
and
cli
add
pop
roll
enter
fiaddl
lret
push
inc
out
jl
push
cld
insl
xchg
fstpt
std
xchg
add
cli
push
mull
cmp
popa
pusha
enter
add
out
stos
adc
mov
aam
mov
or
sub
inc
jne
sahf
push
xchg
push
sub
or
sub
or
xchg
dec
or
test
jecxz
adc
shlb
pop
fdivr
imul
sub
dec
mov
xchg
and
cmp
lock
pop
sub
sbb
add
rol
popf
fadds
and
mov
jp
pop
jl
fsubrl
adc
add
scas
movsl
or
jg
movsb
pop
inc
pop
sub
aam
pusha
jecxz
leave
mov
adc
scas
pop
popf
pushf
mov
jne
jle
sbb
xchg
mov
ret
mov
mov
data16
push
repz
sbb
ds
mov
cmp
rep
xor
loop
mov
loop
mov
mov
and
dec
repz
pop
and
dec
adc
mov
xchg
xor
mov
jne
pop
add
sub
pop
pop
cmp
dec
ds
loopne
sbb
mov
popw
or
adc
shrb
pop
test
pop
je
movsb
cltd
jl
cs
imul
leave
out
xorl
mov
lret
cmp
push
cmc
or
aaa
sub
adc
jecxz
stos
cltd
push
in
js
jl,pt
sbb
mov
dec
sub
mov
insb
ss
sahf
jle
ret
insl
iret
add
inc
jl
dec
and
sbb
xchg
mov
or
fwait
dec
or
push
pop
cmpsb
popf
add
jae
int
and
or
mov
cli
pop
les
xchg
jg
inc
push
stc
jb
call
mov
sbb
or
test
ljmp
pop
jne
stos
cmp
cs
bound
mov
movsb
test
repz
mov
xlat
push
gs
xchg
cwtl
and
push
pop
repnz
mov
jns
pusha
mov
test
pushf
cmp
jbe
sub
mov
loop
dec
pop
int3
xor
insl
mov
loopne
inc
out
inc
dec
mov
in
and
ret
fcomps
sub
dec
cs
cmp
add
fwait
push
push
adc
or
les
sar
fbstp
lds
push
push
add
sub
bswap
mov
es
ror
sub
mov
jp
xchg
jo
pop
xchg
mov
xlat
inc
push
lods
outsb
iret
std
jmp
ljmp
mov
adc
jo
xchg
testb
xchg
mov
bound
xchg
or
cli
jns
shlb
adcl
mov
xchg
sbb
cld
rcrb
pop
negb
and
sbb
repz
xor
push
dec
addb
inc
dec
idivb
xchg
push
xchg
adc
dec
jmp
std
inc
nop
add
mov
mov
mov
mov
pop
or
dec
clc
adc
dec
sarl
loopne
or
or
bound
jl
fsubp
and
aaa
xor
dec
mov
xor
sarl
popa
daa
jns
gs
loopne
mov
out
mov
out
imul
push
nop
popf
push
stc
inc
xchg
into
push
inc
dec
inc
mov
pop
icebp
addr16
mov
call
push
std
pop
sub
gs
fwait
sbb
cld
cmc
addb
add
jae
jnp
sahf
xlat
aad
add
popa
xlat
lods
sahf
dec
xchg
jg
sbb
push
push
dec
inc
mov
rorb
popf
stos
shrb
cltd
mov
addr16
xlat
pop
add
fidivrs
xor
loopne
dec
movsl
cmp
aas
stos
jp
pop
jmp
fdiv
push
xchg
fistps
lcall
sbb
jne
ror
stos
fists
adc
jb
imul
or
es
cld
iret
jae
mov
mov
inc
jmp
or
inc
cmp
inc
jmp
popa
lods
cmc
ficompl
imulb
mov
repz
mov
fs
pop
fcoml
xlat
cmp
sub
jecxz
mov
out
int
jns
movaps
outsb
iret
mov
adc
sbbl
enter
sti
ljmp
jmp
nop
pop
js
movswl
sarl
mov
loop
xor
sbb
pop
loop
sbb
into
push
addr16
pop
mov
repz
inc
xchg
das
pusha
jl
mov
push
out
fcoml
xchg
or
inc
add
popf
inc
sahf
pop
jg
roll
into
xor
scas
idivb
sbb
cli
add
jae
fisubrs
xchg
jmp
mov
dec
cmp
movsb
push
daa
out
fnstsw
mov
adc
cmp
test
dec
ljmp
mov
and
in
mov
enter
jle
dec
cmp
test
xchg
outsb
stos
fs
push
aas
xor
inc
pushf
or
aas
data16
or
jne
cmp
push
pop
mov
arpl
mov
dec
mov
and
inc
add
leave
aam
sbb
mov
cmpsb
cmpsl
jp,pn
data16
lcall
daa
stos
xor
clc
outsl
rolb
mov
xor
into
inc
sub
sbb
mov
push
cmpsb
sti
push
pop
ret
xor
inc
in
ds
ret
dec
test
xchg
jge
cwtl
adc
out
out
pop
xor
nop
or
push
pop
mov
aad
fiadds
pop
or
cs
aam
jp
insl
in
add
sbb
mov
or
scas
jno
add
sahf
rclb
cltd
fnsave
std
dec
xchg
fwait
adc
ret
popf
mov
push
push
jmp
mov
mov
dec
fidivrs
aad
cmc
and
int
push
in
add
dec
xchg
lret
stos
jmp
insl
clc
inc
xchg
sbb
subb
int3
and
push
loop
fnstsw
dec
mov
pop
jns
inc
pop
jbe
mov
outsl
enter
xchg
sub
scas
les
test
ffreep
xor
push
pusha
xor
out
andl
repz
adc
lahf
pop
fwait
jmp
push
cld
jg
pop
xchg
fsts
jbe
xchg
mov
mov
pop
rcll
xor
jnp
push
xchg
fistps
pop
jno
or
mov
incb
rorl
fldcw
ret
pop
lds
fwait
add
sti
cmp
subb
sti
xor
sub
sti
mov
jae
inc
test
cmp
adc
sbb
adc
test
or
jmp
mov
push
into
sub
mov
cmp
cld
jbe
and
insl
leave
push
sarb
mov
xchg
push
sub
xchg
pop
sbbl
jp
inc
add
xor
aam
and
adc
cmp
jle
cld
pop
jb
xor
pop
push
loopne
jmp
inc
aam
sbb
pop
iret
adc
dec
lock
loope
imull
scas
mov
lahf
loopne
pop
pop
push
cs
xchg
sbb
add
call
jo
and
mov
psubw
in
push
push
pop
mov
jbe
sbbb
mov
std
in
popf
add
repnz
mov
jb
gs
cmpsb
jmp
dec
shrl
lret
testl
add
rorb
push
jmp
int3
dec
mov
jbe,pn
jg
sbb
inc
push
add
sbb
repz
movlhps
push
jo
daa
dec
inc
ss
mov
scas
mov
jle
out
lods
stos
jg
add
lea
ja
adc
mov
xchg
outsl
xchg
cmp
mov
lods
out
jnp
pop
xchg
lret
notb
push
jne
add
addr16
adc
outsl
dec
fwait
mov
mov
ds
cli
fistps
mov
mov
in
in
call
or
in
insb
shll
jmp
arpl
mov
sub
push
es
iret
hlt
sub
pop
sbb
stc
das
and
negl
dec
sbb
outsl
clc
xchg
cli
or
push
xor
lock
pop
pop
sbb
call
mov
out
dec
ret
dec
cltd
in
push
pop
shll
pop
pop
xor
pop
cmp
xchg
std
test
push
nop
push
or
xchg
jae
add
add
je
inc
cmp
cli
jg
dec
cmpsl
xor
sub
mov
loope
jo
sub
adc
jecxz
mov
cmpsl
cltd
push
sahf
adc
jne
int3
jnp
jle
mov
mov
xor
and
jae
insl
dec
fwait
mov
arpl
xor
pop
pop
rol
cs
into
es
out
lret
imul
pushf
xor
rorl
imul
arpl
enter
fstp
jecxz
std
scas
mov
sbb
es
cwtl
aam
add
jae
out
repz
int
lahf
idivl
movsb
jae
test
cmp
mov
inc
cli
pop
shl
ljmp
ds
fwait
mov
fisubrl
pop
test
or
xchg
and
fnstsw
out
xchg
pop
das
xchg
jecxz
insb
or
in
xchg
dec
out
jl
imul
addr16
cmpsb
or
popl
sub
and
sub
insb
cmp
sti
sbb
push
dec
mov
xlat
pusha
fimuls
inc
pop
imul
ds
imul
add
ficompl
mov
pushf
mov
xor
ljmp
das
rol
pusha
and
sub
lea
xchg
repnz
jbe
push
push
in
enter
pop
sbb
scas
push
adc
out
xchg
lcall
mov
es
adc
int
add
rcrb
js
pop
push
and
and
xchg
push
repz
in
lds
shlb
xchg
int
imul
dec
jno
mov
inc
jae
sarb
pop
xor
iret
movsl
sub
aas
hlt
cmp
and
rorl
sbb
inc
loop
dec
xchg
dec
mov
mov
je
add
cmp
fs
jl
cmpsb
cmpsl
gs
stos
lret
imul
mov
xchg
sub
xlat
push
xchg
stos
rcl
jne
movsb
inc
clc
sbb
pop
and
aam
xchg
or
mov
cmp
sub
xor
nop
cmp
call
push
repz
int
enter
jl
dec
ss
cwtl
cmpsl
imul
inc
int
cmp
sub
pop
xor
js
in
lahf
push
sub
inc
fidivl
fadd
loope
inc
or
fsubrs
inc
dec
loop
pop
es
and
sti
xchg
mov
jne
shl
out
sti
or
fs
in
fstps
mov
ljmp
inc
lret
push
adc
pop
adc
add
pop
cmp
outsb
js
sub
pop
in
mov
std
imul
mov
in
test
pop
enter
push
mov
push
cld
sahf
sbb
mov
cmp
and
ffreep
inc
hlt
and
adc
in
mov
cmp
jle
jl
xor
sarl
push
sbb
fmuls
sub
mov
lea
dec
lds
cmpsb
popa
cld
fldenv
fnstenv
loop
cmp
push
jns
enter
imul
call
cwtl
lock
inc
loope
bound
jle
icebp
push
mov
fnsave
inc
xchg
movb
mov
js
ja
rorl
push
mov
or
leave
mov
test
mov
adc
push
out
dec
ja
ja
call
lods
xchg
insb
lea
stos
loope
aaa
mov
dec
inc
imull
inc
aam
sbb
sub
in
pop
ja
sahf
pop
mov
inc
mov
jae
jecxz
repz
pop
stc
jns
ljmp
mov
sbb
lcall
jge
adc
in
pushf
sti
and
push
sti
adc
rol
xchg
out
cmpl
aas
fsubs
incl
jmp
call
std
or
push
sahf
sbb
pusha
add
fiadds
ja
cmp
lret
mov
jnp
jle
jge
dec
jno
ss
fidivrl
xchg
add
mov
cld
mov
stc
es
jo
xor
or
and
into
cs
andl
xchg
arpl
js
push
enter
std
lret
into
aaa
cltd
add
dec
pop
mov
shrl
or
push
adc
stc
lret
xchg
inc
jbe
mov
jle
in
aaa
mov
fsub
jecxz
mov
push
mov
cmp
xchg
push
and
adc
pop
pop
fbstp
ljmp
xlat
js
push
push
mov
push
fdivl
sub
imul
cs
xchg
push
jge
gs
sbb
mov
xor
mov
add
arpl
testb
loopne
jge
leave
push
xchg
repz
dec
or
call
mov
sarb
sub
loope
pop
adc
stos
push
cmp
xor
std
xchg
loope
mov
pop
jnp
dec
jno
hlt
sbb
test
and
bound
cltd
jp
sub
lcall
test
daa
test
cmpl
pop
nop
mov
popa
fwait
mov
mov
imul
or
orb
dec
lds
pop
stc
int
cmp
mov
adc
out
xor
push
mov
lock
or
fs
mov
xchg
filds
cmp
int
insl
outsb
jne
adc
dec
lcall
ss
xlat
xchg
pop
or
mov
inc
cmp
cwtl
mov
sbb
cmp
aam
negb
jnp
cmp
stos
fisttpl
stc
inc
pop
mov
call
out
add
mov
adc
xor
mov
testb
cli
push
push
int
mov
loopne
fnstenv
cmp
in
fistpll
push
xor
mov
adc
fsubs
sbb
insl
pushf
mov
fldcw
and
push
lea
lds
roll
mov
push
xchg
stc
mov
mov
add
mov
imul
aad
push
mov
addr16
testl
mov
mov
jne
int
icebp
lahf
pop
filds
pusha
jns
stos
pop
xchg
ret
mov
sub
iret
jae
sbb
and
add
lret
mov
mov
mov
mov
ljmp
fnstcw
pop
repz
and
mov
and
xor
dec
and
js
inc
inc
and
xlat
fcoms
xchg
adc
mov
or
inc
push
add
push
xchg
scas
adc
bound
push
xchg
shlb
ficompl
aas
outsl
lods
shrb
hlt
scas
daa
cmp
mov
iret
push
or
push
je
andb
out
mov
push
mov
sub
fisttps
adc
mov
orb
stos
jbe
inc
sub
dec
xchg
jl
imul
add
mov
and
imul
fs
pop
mov
gs
push
push
jne
orb
scas
xchg
push
test
cmc
xor
icebp
andl
cmp
jno
mov
cmc
mov
repnz
pop
mov
pop
or
push
mov
addr16
push
pop
mov
xchg
or
and
cmpsb
sbb
ret
mov
ffree
sub
in
adc
testl
or
lods
jo
roll
lods
cmp
mov
jnp
pop
add
test
sbb
leave
adc
fwait
xor
movsl
pushf
push
mov
test
mov
lret
fwait
lcall
xor
sub
fdivr
sbb
jb
add
mov
out
lahf
fstp
jp
repz
mov
push
fbld
pusha
xorl
aad
testb
inc
repnz
pop
xchg
mov
and
add
out
arpl
cmp
jns
pop
ljmp
lret
push
fs
xor
andps
ljmp
stos
mov
rcl
fcoml
add
xor
jb
and
inc
xor
jecxz
lock
push
repz
mov
fidivrs
jmp
fmul
pushf
and
stos
push
addr16
add
cmc
in
xor
push
cld
les
pop
bound
imul
cmp
adc
adc
out
int3
xor
cli
push
aad
iret
lods
mov
movsb
cmp
into
or
jecxz
push
xlat
xor
adc
sbb
xchg
mov
aad
mov
leave
pushf
xchg
sarb
pop
ss
mov
fdivrl
icebp
mov
sub
push
pop
sti
pop
jo
push
in
loop
mov
push
and
xor
and
fucom
loop
fwait
jge
mov
cmc
xor
xchg
xchg
fisttpl
cmp
aad
addr16
fdivrs
inc
mov
sbb
int
jl
xor
in
push
mov
in
shlb
xor
xchg
sub
shlb
xor
scas
xchg
mov
call
call
js
jmp
cwtl
sbb
jecxz
rclb
pop
mov
popf
cmp
roll
in
sub
jg
mov
dec
push
sbb
cld
icebp
clc
sbbl
mov
mov
sub
jo
sub
cs
je
fimuls
es
push
mov
sub
lret
mov
pop
test
xchg
jno
add
add
lods
cld
mov
shrb
cmp
movb
or
lcall
imul
dec
pop
in
jl
mov
sub
inc
push
jg
outsb
jnp
mov
stos
inc
adc
cwtl
bound
loope
adc
jl
aad
pop
dec
mov
and
repz
pop
adc
cwtl
subl
scas
jne
ret
std
xchg
xor
pushf
xor
mov
ud2
stc
or
mov
sahf
rcll
mov
fisubrs
and
pop
into
loop
fdivrs
or
enter
sbb
adc
inc
scas
mov
mov
mov
sub
dec
mov
pop
pop
clc
sbb
sub
testb
pop
les
insb
xchg
add
ljmp
cld
jmp
xchg
xor
aas
xchg
stos
nop
sahf
rorb
nop
sbb
int3
scas
inc
test
sub
cmpsl
addr16
cld
mov
pusha
repnz
sbb
jno
iret
push
xchg
cmp
ljmp
sar
sbbl
jns
fisttps
inc
sub
jecxz
xor
je
xor
in
push
and
add
xchg
dec
cmpsb
repnz
push
jmp
pushf
outsl
out
add
mov
push
enter
imul
add
push
xchg
inc
adc
call
loopne
icebp
dec
adc
mov
cmpsb
sti
sbb
dec
inc
sub
mov
pop
mov
int3
jno
xchg
int
push
testl
xchg
mov
hlt
and
movsl
aam
inc
add
rolb
xor
pop
test
stos
pop
mov
add
lods
jl
mov
cmpb
adc
mov
insb
inc
jae
xor
sub
test
sbb
into
add
jmp
mov
mov
mov
mov
mov
mov
test
add
cmp
sub
in
mov
insl
gs
lret
daa
xchg
loope
andb
lret
or
and
dec
std
push
ljmp
add
push
cmp
jo
outsb
sbb
cs
mov
mov
loope
adc
xor
and
cmp
add
cmp
xchg
mov
enter
adc
xchg
add
cmp
int3
pop
push
add
add
lock
sbb
and
xchg
gs
out
add
pop
inc
cmc
dec
lods
or
xchg
mov
mov
xchg
push
mov
addl
addr16
rep
insl
xchg
sub
mov
lock
ret
push
mov
les
jmp
mov
aam
dec
jno
mov
jo
shrb
out
inc
xor
out
test
out
subb
mov
inc
or
pop
outsb
push
and
das
mov
cmp
lea
or
push
fidivrs
adc
aad
and
dec
inc
into
aad
pop
and
sub
or
sub
cmp
xchg
mov
sub
mov
mov
out
rcll
js
stos
mov
mov
sub
add
inc
bound
ret
sar
mov
add
inc
insl
ja
xchg
imul
sub
movsl
mov
push
jnp
popa
sub
in
cwtl
jmp
mov
xorb
out
sbb
mov
fdivrs
sbb
jle
lahf
aaa
jno
fcomps
nop
repz
jle
outsb
adcl
mov
dec
inc
stc
arpl
das
ds
cmp
jecxz
push
popa
mov
test
push
dec
repz
lea
inc
mov
std
push
icebp
sti
pop
fwait
sbb
lahf
call
pop
aam
call
dec
jp
lret
xor
mov
idivl
add
fcompl
pop
imul
insb
lcall
inc
mov
sbb
jecxz
or
push
loopne
clc
or
hlt
cmp
fstl
xor
cmpsl
mov
adc
xor
pop
stc
test
pop
lahf
hlt
arpl
inc
push
popf
xchg
pop
and
in
cwtl
dec
or
adc
cmc
or
lret
icebp
mov
cmpl
mov
fsubrs
ja
mov
push
int3
xchg
mov
addr16
push
stos
adc
pop
dec
xchg
inc
pop
push
xor
pop
and
ret
test
mov
ds
sbb
mov
cwtl
nop
shlb
add
popa
sbb
sub
frstor
and
insl
jg
inc
mov
push
push
mov
or
xor
push
in
icebp
lcall
adcb
mov
ret
cmc
jnp
iret
stos
sub
mov
pop
cltd
out
outsl
cmp
jno
adc
popf
mov
aad
xchg
in
pop
mov
les
mov
sbb
jno
ficoms
inc
add
out
mov
sub
and
xchg
pop
jne
icebp
call
ret
mov
xchg
sub
mov
sbb
shlb
dec
das
pop
push
mov
jecxz
addr16
ret
shll
xchg
ret
add
xchg
je
mov
or
sarb
pop
cltd
mov
push
and
js
jne
mov
shrb
xor
mov
adc
mov
push
test
int
mov
xor
insl
daa
insb
mov
testb
mov
and
in
push
sbb
loop
jae
sub
aas
sub
stc
jl
pop
push
mov
adc
in
js
and
cmpsb
push
or
xchg
sbb
xor
cmp
scas
pop
cmp
ds
out
stos
mov
mov
mov
nop
cmp
sub
or
sbb
adc
mov
cmp
lods
cmpsb
into
shl
add
mov
sbb
mov
movsb
daa
lock
add
xor
fdivs
adc
call
and
addr16
lock
rcrb
dec
stos
adc
jp
jecxz,pn
leave
jmp
scas
adc
jp
es
xchg
shlb
xor
out
sub
jp
test
in
jmp
xorb
jno
gs
in
pop
or
inc
add
dec
pop
cmp
mov
insl
repz
cmp
jecxz
mov
push
mov
mov
lret
int
subl
adc
pop
jl
jmp
rcpps
ja
movsb
mov
adc
adc
fmulp
sahf
and
push
mov
add
xor
pop
popf
mov
fldenv
cmp
test
xchg
jl
adc
mov
outsl
pop
test
lcall
cli
fxch
insl
or
lock
cmp
jb,pt
out
sbb
pop
pop
or
enter
or
divb
add
jp
cltd
inc
aad
mov
leave
cli
cmp
icebp
lahf
sbb
push
push
push
out
push
push
push
ret
faddl
fdivp
push
popa
cld
xchg
mov
sub
sub
push
aaa
push
add
shll
lret
rolb
sub
inc
cwtl
push
mov
mov
and
xor
jnp
jnp
outsb
push
mov
imul
sbb
inc
jo
popf
push
or
xchg
mov
sbb
clc
pop
test
dec
cli
out
daa
movsb
imulb
sub
push
cmp
push
jmp
aaa
pop
jmp
dec
add
repnz
pop
jb
mov
push
lcall
xchg
or
pop
loopne
add
jmp
adc
imul
add
and
jl
lcall
repnz
imul
jl
adc
sbb
cltd
push
or
jbe
test
daa
xchg
dec
mov
popf
or
pop
mov
lret
hlt
imul
xor
and
jno
decb
scas
sub
cmp
incb
jnp
test
inc
stc
lea
popf
jg
jns
incb
testl
subb
inc
cld
ret
int3
add
push
jb
add
lret
mov
sub
adcb
in
out
insl
mov
pop
subb
insl
cld
shrl
aam
cmp
cmp
or
push
push
lds
xor
sub
std
mov
or
hlt
cmp
in
hlt
dec
mov
test
jno
mov
cmpsl
jl
fnstcw
push
mov
adc
pop
pop
mov
jmp
pop
dec
cmpsb
mov
dec
jmp
stos
sbb
fndisi(8087
cmpsl
movsb
dec
lock
divb
push
adcb
les
push
les
imul
testb
hlt
daa
test
js
jnp
jno
test
inc
push
ja
out
xor
add
pop
jae
inc
lods
xchg
mov
adc
stos
lea
xor
mov
add
mov
cli
test
adc
arpl
addr16
jbe
lock
mov
sahf
loop
cld
fldl
in
cmpsl
fisttpl
pop
clc
scas
inc
jmp
jns
insl
popa
lahf
aam
loop
mov
add
adc
pop
and
jo
int3
mov
loope
imul
add
in
jno
mov
mov
or
call
mov
lock
add
jbe
ret
pusha
pop
cmp
andl
loope
insl
cmp
cmc
or
ret
jo
gs
pop
fiadds
mov
daa
cmpl
sbb
movsb
js
jnp
inc
dec
jp
cmc
adc
das
jp
insb
lea
rcrl
xchg
pop
aad
mov
inc
inc
mov
mov
pop
lea
inc
and
test
jg
jnp
inc
insb
mov
mov
pop
mov
sbb
mov
push
outsb
es
push
push
repnz
xchg
or
ficomps
clc
and
out
ja
orl
adc
mov
lods
repnz
jl
ljmp
int
push
repz
ljmp
imul
lods
fcoms
icebp
addl
xor
add
aad
jl
shll
adc
xchg
loop
shl
mov
int3
add
cmpsl
or
sub
push
fdivrs
mov
cmp
bound
clc
scas
cli
inc
js
pop
hlt
jl
lcall
inc
pop
hlt
loop
into
scas
cmp
mov
int3
pop
sbb
pop
lods
dec
icebp
fstps
pop
imul
adc
xchg
ljmp
mul
push
mov
imul
subb
sbb
cmp
lcall
cmpsl
inc
pop
push
push
repz
inc
xor
pop
roll
pop
aas
xor
cmp
pop
out
jno
push
inc
pop
in
aas
shl
xor
bound
hlt
cmp
fldpi
mov
cli
or
adc
push
js
mov
adc
sbb
sub
pop
fmuls
sbb
fsts
jne
pop
adc
push
negb
js
mov
mov
push
pop
add
or
jmp
or
push
mov
mov
aam
in
or
std
mov
idivb
jmp
aam
push
hlt
sub
inc
fsubrp
sub
arpl
repz
mov
out
jg
push
fcoml
ja
sbb
je
iret
and
cmp
and
adc
lret
fwait
test
inc
pop
add
sarl
xor
movsl
push
sub
dec
es
pop
pop
mov
or
inc
lea
pop
and
push
cld
mov
mov
push
xchg
jns
loopne
sti
lret
sahf
int
adc
cmp
cld
out
inc
loope
inc
cmp
mov
hlt
cmp
inc
jnp
sbb
mov
inc
push
adc
cmp
test
adc
jo
test
xchg
arpl
cmp
mov
popa
inc
and
jp
cs
inc
or
ja
icebp
into
lret
inc
mov
std
outsb
je
inc
ljmp
push
cmp
inc
or
sub
in
stc
lock
jle
mov
mov
inc
xchg
mov
addb
ret
or
jp
pop
cs
outsb
ss
xchg
out
outsb
sbb
add
negl
jns
jbe
mov
push
cmp
lock
fcoms
and
sub
cmpb
ja
dec
add
cmp
popf
mov
je
inc
out
push
stc
cli
enter
mov
jns
jbe
cs
mov
jg
mov
xor
inc
scas
inc
jmp
xchg
push
dec
loope
popa
sbb
mov
out
sub
cmpsl
mov
leave
mov
enter
sbb
adc
pop
or
add
addr16
loop
loop
add
mov
aaa
mov
inc
lcall
add
pop
push
mov
cli
fdivs
iret
mov
dec
cmp
mov
clc
inc
and
cmp
frstor
jb
bound
jbe
pusha
pop
popl
xor
loop
or
ss
pop
inc
adcb
mov
adc
aam
inc
jmp
shlb
add
jbe
add
pop
cmp
and
or
fs
inc
stos
mov
call
sti
cmp
pop
and
xor
cmp
stos
mov
push
or
repz
out
and
ljmp
loopne
sbb
subl
fwait
iret
gs
dec
xchg
clc
jb
pop
mov
push
jecxz
ss
and
loopne
pop
bound
dec
cmp
or
xor
lods
xor
mov
jecxz
test
scas
mov
int
xor
loope
fidivrl
out
add
call
adc
mov
dec
mov
bound
ja
rol
jb
and
mov
xor
fimuls
in
inc
sub
mov
inc
pop
jg
test
mov
push
mov
xor
mov
adc
clc
sub
pop
nop
xor
dec
pop
psubd
loope
xchg
daa
cmpsb
outsb
mov
inc
dec
pop
sub
inc
push
cmp
scas
mov
dec
xchg
int
fsubr
fdivp
xor
fistps
mov
and
adc
adc
out
leave
mov
xor
xor
xchg
mov
subb
jle
movsl
stc
sub
lcall
sub
ss
inc
fidivl
lods
xchg
lcall
rcrl
mov
push
mov
ret
cmpsl
and
and
arpl
movb
mov
fdivrs
inc
add
push
cmp
sti
xchg
mov
cli
jle
scas
aaa
xchg
shr
std
push
pop
jb
jb
imul
pop
xchg
pop
inc
jnp
xor
aas
add
xor
loop
cld
lods
and
mov
ret
fisubrl
sahf
das
int3
or
mov
and
sbb
outsl
lock
push
rcrb
dec
lds
fisttpll
xchg
push
out
xchg
jae
scas
xor
ljmp
inc
loopne
rorb
pop
inc
xor
shll
mov
dec
cmpsl
and
cmpsl
inc
repz
push
mov
pop
test
fcmovnb
push
insb
cld
scas
sbb
push
outsb
lods
orb
out
repnz
sbb
dec
cwtl
mov
movsl
mov
bound
stos
xchg
in
out
pop
fiadds
in
and
xor
ds
sbb
loop
iret
fs
in
outsl
mov
xchg
mov
push
and
aaa
mov
pop
out
int3
fldcw
dec
sub
ljmp
pop
and
fidivrl
inc
movsb
daa
fwait
sbb
push
mov
mov
pop
xor
sub
push
mov
ss
xor
pop
jnp
call
lret
cmp
lds
cmp
cmpsl
jle
inc
ret
test
adc
cmp
addr16
inc
test
push
and
out
inc
adc
popa
sub
sahf
sub
stos
outsl
les
lods
outsl
pushf
xchg
or
sub
push
in
push
or
idivl
xchg
jns
test
push
test
cmp
add
sarb
loopne
mov
sbb
ja
arpl
inc
inc
push
cltd
and
jnp
idivb
mov
int3
into
cmpb
shll
xor
popf
xchg
jecxz
popa
insb
xchg
pop
push
ftst
xchg
and
dec
mov
push
jle
int
scas
add
push
scas
mov
dec
jecxz
stc
or
les
sub
fildll
cmp
mov
mov
cltd
data16
adc
mov
pop
cld
jns
adc
jp
cmp
mov
jb
lret
xchg
jmp
dec
ss
mov
pop
mov
aas
shrl
jge
sbb
out
or
jl
testl
dec
pushf
adc
xor
mov
sub
adc
out
pop
dec
mov
cmp
xchg
jmp
iret
or
loope
pop
mov
fsubrs
in
stos
push
dec
jae
dec
fcompp
dec
mov
jge
mov
and
ds
ja
pop
fwait
cmp
ljmp
dec
hlt
jno
push
pusha
in
and
jnp
xor
fs
mov
lret
jle
movsl
mov
fwait
sahf
jb
mov
or
push
cmp
aam
jo
jecxz
mov
mov
pop
daa
mov
sub
rcl
xor
nop
dec
orl
xchg
imull
sbb
mov
movsl
jno
jnp
out
sub
sti
mov
mov
shl
xchg
arpl
rcrl
scas
sub
rorb
push
enter
insb
jnp
int3
sub
outsl
dec
pop
adc
add
cmp
sbb
and
xor
cmp
test
das
pusha
cmpsl
sbb
mov
orl
sub
aad
mov
jl
cmp
std
xlat
push
pusha
andl
adc
dec
loopne
xor
cmpsl
add
jo
je
pop
or
insb
loope
cmp
jmp
xor
xlat
dec
lods
nop
sub
and
popa
and
pop
ds
push
pop
stc
and
subl
outsb
mov
add
lret
mov
outsl
test
cli
cmp
fucomi
pop
fcmovbe
aam
push
imul
dec
pop
dec
jle
and
mov
lret
sbb
push
pop
mov
pop
icebp
loopne
fbstp
scas
gs
aad
mov
pop
mov
scas
or
