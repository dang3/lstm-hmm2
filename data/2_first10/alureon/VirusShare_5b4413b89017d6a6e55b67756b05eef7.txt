push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
mov
cltd
imul
sub
push
mov
fisttpl
insl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
dec
jne
mov
pop
mov
js
aaa
icebp
adc
int
adc
aad
sbb
mov
scas
cmp
cmpsb
inc
push
ret
fisubl
sub
sbbb
adc
add
lcall
mov
xchg
icebp
popa
xchg
adc
sub
add
xor
or
or
test
cmpsb
pop
in
aaa
in
mov
lods
xor
pop
fwait
in
clc
push
dec
inc
movsb
mov
pusha
jbe
loope
cmp
jo
jne
push
sub
pushf
in
pop
nop
in
pop
bound
or
sub
fwait
js
aaa
add
mov
add
add
push
mov
add
cmp
xchg
ret
or
outsb
lea
das
jnp
mov
push
cmp
sub
xlat
or
test
dec
pop
xchg
dec
clc
js
push
out
jge
popf
cwtl
rorb
xor
and
push
outsl
lahf
mov
mov
sub
fwait
or
std
mov
mov
xchg
ljmp
in
cmc
push
add
add
add
in
add
push
inc
push
icebp
jbe
in
flds
xor
ficompl
stos
iret
jp
ja
and
sub
iret
jge
pop
sbb
cmp
adc
pushf
jecxz
gs
pop
inc
inc
ds
pop
rcrl
fmuls
push
out
and
sub
inc
loope
inc
mov
repz
ret
mov
mov
aas
pop
and
aad
into
arpl
dec
pop
inc
add
add
idivl
adc
shlb
xchg
xor
jl
int
sahf
pop
mov
add
es
sar
jns
lret
out
push
mov
stos
or
popf
into
add
jb
mov
je
mov
xlat
in
lret
sub
pop
sbb
addb
xchg
popf
out
fisubs
iret
popa
bound
pop
jns
mov
push
scas
outsl
add
fwait
xchg
cwtl
stc
lods
push
xor
mov
add
sub
mov
in
xor
loopne
filds
xchg
lods
adc
test
push
mov
and
sbb
fldcw
adc
add
int3
mov
dec
scas
pop
out
popa
push
popa
dec
inc
dec
cld
dec
jmp
test
movsl
push
in
and
sti
jne
cmpsl
jmp
xchg
data16
sbb
cmp
push
dec
jbe
or
jmp
and
mov
loope
test
cmp
push
fnsave
pop
or
jno
adc
jg
lock
cltd
icebp
dec
outsl
dec
sbb
ret
mov
test
adc
pop
ficomps
mov
cmpsb
into
adc
jge
lret
fwait
or
jo
inc
inc
push
bnd
dec
or
test
mov
mov
mov
pop
push
xchg
xor
stos
xor
xor
in
adc
jge
adc
jnp
or
mul
stos
adcl
cmp
out
sbb
insl
mov
push
and
outsb
lock
pop
cmp
mov
dec
out
inc
xchg
pop
xor
rorb
or
add
aaa
sbb
stos
call
or
in
imul
mov
lea
or
mov
iret
lahf
cmp
sub
inc
add
test
inc
inc
mov
clc
cmpb
mov
push
shlb
add
shlb
inc
lods
in
stos
mov
jae
lock
inc
je
or
cmp
xor
sbb
ret
lret
add
mov
xor
pop
jns
mov
dec
sbb
scas
fldenv
iret
and
sub
fidivl
inc
sbb
cmp
jnp
test
jle
sub
jge
lcall
imull
inc
lds
inc
cwtl
into
adc
add
add
push
jmp
out
div
ret
sub
inc
pop
jg
push
sbb
pop
adc
mov
jp
xor
push
pop
imul
popf
cli
cmp
xchg
dec
jbe
mov
arpl
xchg
xchg
push
loope
pop
leave
xchg
inc
dec
push
mov
shrb
mov
or
clc
xor
or
dec
ljmp
sub
insl
cmp
lods
add
add
repz
addl
movsl
pushf
dec
rcrb
and
mov
mov
popa
dec
or
push
xchg
inc
xlat
jecxz
push
jl
or
in
sbb
loop
jp
insl
push
sub
mov
jl
je
push
dec
rorb
mov
cld
jbe
out
mov
aam
mov
sti
setne
aaa
aaa
adc
movsb
push
jmp
sbb
lcall
add
push
mov
in
push
jb
pusha
iret
jge
aaa
in
pop
outsl
scas
xchg
sbb
aam
rcrl
test
shll
cmp
lret
adcb
or
in
adcl
adc
xchg
sarb
dec
push
stc
pushf
rorl
push
outsb
xor
scas
rcrl
loopne
adc
mov
dec
xor
sub
jne
sahf
sbb
add
add
rolb
adc
or
rclb
mov
loop
pop
inc
das
mov
jnp
mov
mov
dec
or
mov
rcr
mov
in
mov
pop
lock
sub
pop
mov
scas
pop
leave
cmp
inc
and
test
cmp
pop
mov
adc
inc
mov
jge
xchg
xchg
out
aas
push
sarb
pop
scas
out
mov
add
add
cmc
jg
pop
and
daa
fists
push
test
stos
pushf
adc
les
push
adc
or
call
std
mov
scas
pop
jmp
add
push
out
mov
in
lret
cmp
outsb
pop
test
pop
xchg
js
mov
sbb
adcb
jo
das
fidivs
imul
icebp
cmpsl
mov
push
sub
cwtl
add
fisubs
add
add
cmp
xchg
cmc
dec
or
mov
ljmp
clc
les
stos
stc
in
rcl
cmp
cld
iret
pop
cs
lret
hlt
add
mov
mulb
mov
bswap
jae
inc
sub
outsl
cmp
pop
mov
ja
sbb
inc
leave
push
fwait
jle
notl
hlt
fucomp
or
pushf
cltd
push
pop
mov
ror
mov
mov
push
cmpsb
sbb
jb
popa
insl
loop
mov
jo
pusha
fldt
jge
addr16
jmp
daa
inc
cmp
jno
mov
or
mov
push
cmc
jns
ficompl
inc
cwtl
lret
data16
faddl
stc
dec
and
jb
xor
repz
jb
jp
lret
addr16
mov
push
add
int
pop
add
int
cmp
movsl
adc
pop
je
int
lcall
push
pop
mov
mov
push
xchg
stc
test
and
outsl
imul
hlt
push
pop
enter
xchg
xchg
or
pop
test
mov
aad
scas
or
ljmp
push
call
sbb
movsb
or
rorb
pop
loopne
in
push
mov
add
pop
loop
cld
movsl
cli
data16
shlb
mov
cmc
enter
arpl
je
jnp
mov
inc
je
cwtl
xchg
ss
cltd
daa
icebp
int
movsb
jne
sub
stos
lods
cld
ljmp
fcomps
clc
fldcw
lret
loop
jo
xor
or
aam
lods
sahf
cmpsb
jmp
pop
aad
in
jne
pushf
mov
cmpsl
push
or
fmuls
leave
mov
push
stos
lret
mov
out
imul
jnp
adc
incl
add
add
loope
shlb
xchg
js
call
in
test
imul
pop
sahf
pop
imul
ljmp
and
fwait
dec
outsb
mov
mov
iret
mov
jmp
js
pop
sarl
mov
test
int
repnz
xlat
xchg
inc
add
mov
dec
xchg
xchg
mov
mov
or
mov
stos
push
fdivrl
movsb
add
mov
mov
pop
push
push
sub
cmpsb
jne
mov
ja
jno
or
cmc
mov
jae
pop
sub
dec
xchg
sub
cmp
jno
shll
fstpl
xchg
cmc
cmp
and
mov
inc
cmp
cmc
insl
mov
pandn
pop
into
lcall
std
stos
mov
jnp
mov
les
add
and
aas
sbb
bnd
cmpsl
jle
push
test
mov
lods
pop
dec
dec
and
into
and
shlb
mov
aas
and
test
jg
jge
mov
add
xchg
mov
popa
mov
in
pop
sahf
andl
or
dec
jge
hlt
push
xorb
pusha
imul
loopne
movsl
adc
lcall
add
jae
xchg
popf
push
push
sbb
mov
incl
cmp
add
pop
jp
ds
ret
popa
jg
bound
xor
push
sbb
fsubs
push
cli
popf
inc
jmp
pop
lea
jecxz
mov
jne
xor
sahf
push
dec
mov
xlat
fadd
cltd
int3
lret
inc
iret
cmpl
test
shll
mov
fisubrl
or
mull
mov
stc
sbb
sbb
add
xchg
hlt
xchg
test
rol
call
les
or
sbb
push
clc
mov
sbb
jns
inc
inc
ds
lret
xchg
push
mov
cmova
and
aad
inc
mov
mov
or
xchg
movsl
mov
in
clc
fadd
bound
stos
pop
pop
cmp
dec
sbb
repz
jns
test
add
testl
add
xchg
adc
cmp
in
push
test
rclb
movsl
lock
fistl
dec
repz
mov
mov
aas
mov
jo
add
popf
stos
cmp
jmp
xor
addb
ret
ss
or
ss
out
cmc
sub
add
fwait
add
popa
pop
adc
mov
adc
push
add
movsb
push
outsb
adc
pop
stc
pop
pop
mov
or
icebp
lret
ds
scas
pop
push
add
ja
inc
adc
cmp
rol
xor
adc
add
in
lret
jns
movsb
call
sbb
lahf
les
std
mov
jmp
add
jnp
sub
jecxz
or
add
lods
cmp
xor
adc
stos
lods
push
rorb
dec
jmp
in
ret
xchg
dec
pusha
or
std
pop
or
pushf
or
dec
adc
mov
into
rcrb
and
adc
jle
les
mov
lret
cmp
mov
mov
jo
dec
flds
es
mov
dec
xlat
addb
stc
shrb
pop
test
inc
aad
and
insl
lcall
insl
das
loop
xchg
cwtl
fisttpll
data16
outsb
xor
scas
cwtl
test
push
sub
cmp
mull
loop
inc
mov
movsl
sarb
push
add
iret
add
pop
rcll
mov
mov
pop
fstpt
jecxz
jle
sbb
cmpl
mov
call
xchg
jb
dec
out
cmc
outsb
scas
adc
stos
outsb
mov
cmp
xor
adc
dec
out
lcall
add
add
fildl
in
mov
mov
orb
ret
lcall
pop
jge
mov
popf
adc
cmp
jnp
adc
mov
fidivrl
jns
sbb
sbb
das
xor
mov
push
aas
dec
push
cmpsb
sbb
imul
negb
scas
jns
cmp
jl
lds
cli
or
fs
push
pop
dec
inc
cmp
push
lahf
ja
popa
pop
repnz
int3
lds
mov
lock
cmc
loope
sahf
fisubs
fs
in
stc
xor
cmp
rclb
adc
and
cmp
inc
adc
shrb
pushf
sub
inc
fimuls
mov
jns
shrl
jl
dec
xor
or
inc
imul
ret
pusha
mov
cwtl
cmp
adc
and
mov
xor
cmp
mov
mov
mov
les
test
dec
mov
into
mov
dec
dec
sahf
shl
sbb
sub
xchg
inc
add
in
adc
mov
sar
cmpsl
mov
popf
ret
mov
mov
cmpsl
and
fildll
inc
dec
lret
addr16
adc
shlb
mov
add
mov
dec
jnp
jl
ljmp
xchg
popa
jl
sbb
mov
sti
and
jbe
negl
push
cmpsl
call
mov
mov
shlb
lcall
popf
setno
repnz
mov
xor
dec
xchg
cmp
rcrl
sub
sbb
sbb
jnp
loop
fmul
in
out
in
sbb
mov
inc
iret
mov
dec
jae
sbb
mov
stos
mov
add
pushf
xchg
sbb
cs
adc
cmp
push
aas
inc
mov
xchg
push
pop
push
pop
in
mov
adc
imul
insl
sahf
movsl
call
in
pop
test
movsl
lahf
cwtl
and
adc
push
push
je
adc
addr16
movl
add
jo
in
test
adc
add
mov
sar
inc
or
lock
pop
fstl
aad
adc
jmp
sub
sti
out
xor
out
add
into
dec
xchg
jae
loope
std
lcall
idiv
jecxz
sbb
adc
jne
shl
xchg
fdivrp
popa
dec
add
inc
jmp
daa
cs
imul
xor
lods
std
add
xlat
in
or
nop
cmpsb
inc
xor
mov
lcall
pop
dec
inc
jne
shr
sbb
ja
pop
mov
cmp
aam
pop
add
xchg
mov
sub
loope
cwtl
jg
aam
mov
ss
imul
add
cmc
cwtl
sbb
jge
andb
outsb
push
mov
jno
in
jmp
bound
add
jp
pop
push
int3
rorb
push
outsl
add
cmp
fdivs
repz
xchg
jp
xchg
push
mov
shrl
ret
test
out
and
add
add
mov
cmp
enter
jo
push
or
test
sarl
popf
fs
inc
and
mov
adc
mov
lea
mov
inc
ja
int3
sahf
icebp
add
add
sbb
xchg
stos
cmp
add
mov
adc
mov
dec
or
mov
fimuls
jno
outsb
pop
inc
test
hlt
pop
and
lcall
xchg
xchg
cmp
xchg
int
xorb
out
adcl
jp
push
js
xchg
sub
xor
not
mov
fistpl
movsb
mov
xor
fcmovb
xor
xor
and
add
outsb
loope
addb
incl
pop
test
lods
int
enter
les
in
sub
add
fadds
cmp
iret
cmp
sbb
mov
nop
fstps
mov
cmp
add
fsubl
popa
insb
int
sbb
jns
les
inc
js
jle
inc
repnz
xor
lods
lods
rolb
or
pop
subb
scas
push
das
pop
xchg
xchg
add
add
repnz
sub
push
and
cmp
sub
xor
sti
pop
das
ds
out
stos
icebp
xchg
and
test
sbb
clc
ret
sbb
pusha
xchg
push
bound
mov
or
leave
add
inc
adc
sub
inc
pop
xchg
lods
scas
push
dec
mov
in
xchg
jp
int3
dec
mov
popf
cmp
cmp
scas
pop
pop
xchg
sbb
adc
jne,pn
sti
mov
mov
add
hlt
test
psubsb
pop
inc
out
jo
in
fsubrl
out
pop
xchg
pushf
add
lea
jb
popf
or
mov
popf
adc
push
or
push
cld
lahf
xor
decl
sbb
xor
js
mov
mov
add
add
sbb
flds
and
in
xchg
test
cli
sbb
or
fsubrp
pop
roll
mov
test
ja
imul
bound
sub
enter
add
scas
xchg
cmovp
in
xchg
clc
movsl
fdivr
decl
sti
add
jnp
jbe
sti
and
cmp
xchg
mov
fs
filds
cmp
lea
or
cmp
fwait
movsb
push
cld
xchg
add
inc
sbb
or
stos
rcr
adc
sub
xchg
xor
sahf
xchg
bound
push
test
stos
push
fucomp
out
into
stos
mov
icebp
pop
push
sar
adc
dec
jbe,pn
mov
shrb
or
xchg
cld
mov
push
pop
cmpsb
popf
std
leave
outsl
push
xchg
mov
add
cmp
and
mov
jmp
add
mov
sbb
push
mov
out
jl
cmp
aaa
scas
aas
shl
mov
outsb
and
push
mov
andl
stc
jle
gs
jne
push
push
sub
in
xchg
int3
mov
cmp
xchg
fs
insl
sbb
push
bound
addl
repnz
daa
or
add
sub
mov
loope
ljmp
lcall
or
stos
add
add
jmp
bound
movsl
cld
call
fsubrl
sbb
and
outsl
ror
je
sti
push
into
inc
pop
pop
jge
and
xchg
adc
cmp
test
mov
in
sub
outsb
lcall
push
xchg
cmp
xchg
xchg
rcrl
xor
sub
jnp
call
aas
imull
sub
jno
clc
lret
mov
lock
sbb
push
pop
sbb
pop
mov
call
icebp
jno
ss
js
cmpsb
dec
outsl
dec
push
rcll
into
cmpsb
pop
inc
sub
outsb
push
sub
xchg
push
scas
add
mov
cmp
and
pushf
push
sarl
cmp
dec
inc
sbb
jg
dec
add
pop
mov
adc
jl
sub
fstpl
mov
mov
dec
mov
jbe
lss
pop
adc
push
mov
out
sbbl
mov
lret
stos
push
adc
lock
and
dec
repz
mov
loopne
cwtd
xchg
cmp
mov
icebp
out
bound
clc
pop
mov
cmp
call
aas
cs
push
ret
add
sub
or
mov
push
lret
cmc
push
leave
adc
dec
mov
mov
add
dec
mov
test
add
cmp
add
sub
rcl
mov
in
mov
fucomip
shl
cwtl
pop
pushf
adc
clc
test
pop
sub
loope
mov
push
or
test
aas
sub
mov
out
jl
iret
inc
adc
inc
and
cmp
fisubs
mov
sub
cmpsb
jmp
mov
fsts
movsb
scas
jbe
cld
fisubl
loope
sub
mov
inc
loop
cs
push
push
test
mov
and
push
pop
in
pop
adc
cli
cmc
mov
pop
faddp
ja
mov
bound
daa
xor
jno
stc
in
adc
jbe
sbb
filds
or
dec
divl
cld
mov
clc
lock
shlb
push
cmp
repnz
push
movsb
cmc
ficomps
js
or
fucomi
test
out
fists
outsl
xor
pop
rol
lods
add
loop
scas
sbb
ficoml
sbb
mov
fwait
icebp
decb
and
jge
sbb
mov
aam
jns
dec
xor
mov
int3
pop
sbb
pushf
es
sub
add
enter
add
jmp
imul
ror
fcomps
outsl
push
ljmp
inc
test
or
sbb
test
push
stos
lds
movb
sbb
sub
mov
idivl
imul
push
stc
mov
outsb
jmp
sar
lahf
aam
dec
movsb
xchg
xor
inc
int
sub
out
push
lcall
scas
sub
mov
add
add
std
add
sbb
mov
sbb
adc
fadds
adc
mov
dec
jg
mov
outsb
fcmovu
outsl
xchg
outsb
push
shlb
and
cmp
test
in
mov
je
pop
fisttps
sub
cmp
cwtl
les
lea
sbb
xorb
push
inc
xchg
jnp
mov
lea
add
leave
jno
adc
cmp
mov
shrb
addb
mov
sub
movsb
xor
arpl
or
and
clc
in
movsb
push
bsf
imul
xchg
jb
pop
addr16
xchg
mov
jmp
mov
pop
repnz
imul
sbb
mov
aaa
jnp
test
adc
push
into
sbb
or
movsb
adc
lock
push
test
xchg
fbstp
je
in
adc
les
or
adc
mov
jmp
pop
imul
movsl
loop
sub
cmp
mov
test
jecxz
loop
stc
stos
js
loopne
pop
sti
repnz
aad
jno
leave
std
js
lret
les
fwait
jno
nop
les
sahf
pop
shll
pop
sbb
add
fsts
xchg
call
test
into
dec
mov
fs
add
outsb
inc
push
cmp
lahf
mov
mov
mov
ljmp
mov
sbb
lds
xsha256
cmpsb
xchg
cmp
dec
or
sar
pop
aad
outsb
out
cmp
stos
daa
jle
or
cmpb
js
or
mov
xchg
fadd
xlat
je
lret
jge
and
and
lcall
xor
dec
lods
sub
sub
jge
push
adc
and
aam
push
mov
mov
data16
ror
enter
mov
push
jle
je
push
sub
lds
repz
cmp
inc
pusha
lock
bnd
dec
dec
aas
jno
icebp
int
fchs
sbb
or
call
add
sbb
inc
push
mov
lds
js
push
pop
aam
mov
adcl
mov
push
sahf
fsubrl
subl
mov
xor
cmc
int3
stos
dec
pushf
ret
pop
mov
xor
bound
test
pop
lods
bound
or
repz
out
xor
mov
mov
movsl
add
mov
cmp
mov
jo
cmpsl
pop
mov
gs
push
fdivs
inc
outsb
outsb
mov
or
mov
inc
jp
mov
rcll
adc
enter
and
sbb
xchg
aam
push
fldcw
fsubl
stc
shr
scas
call
pop
cld
pop
add
add
mov
sub
inc
mov
xchg
jle
jl
mov
rep
pop
ret
mov
inc
imul
nop
pop
xor
rcll
and
jne
push
push
aam
in
cmp
mov
lcall
sbb
leave
aaa
xlat
aas
iretw
call
imul
popf
cmp
mov
repz
test
jbe
leave
inc
pop
ds
push
ja
add
insb
lea
pop
ja
xor
bnd
dec
and
sub
pop
mov
sbb
xchg
aaa
add
xchg
jo
jle
push
lret
sbbb
push
mov
leave
mov
add
inc
imul
pop
dec
xchg
loope
adc
ret
dec
mov
jno
fbld
mov
xchg
hlt
in
in
adc
out
mov
or
js
imul
dec
ds
cmpsb
mov
stos
aam
dec
mov
pop
stos
sub
imul
xor
clc
cmp
fcmovnb
xchg
movb
sbb
sbb
add
repnz
insb
or
es
ja
xchg
movsb
jo
or
ficomps
rorb
jnp
push
das
add
jnp
dec
and
imul
lods
fwait
outsl
jo
sub
push
repz
ret
adc
test
xor
sub
jl
jecxz
call
dec
cmp
out
cmp
mov
fcomip
xchg
aas
dec
sub
movsl
mov
add
cmp
xorl
add
mov
adc
sub
sbb
mov
or
sbb
push
xchg
test
test
frstor
fwait
cmp
jecxz
inc
out
andb
sbb
movsl
js
jp
mov
jae
pop
lods
pop
dec
inc
jge
scas
lods
xchg
lods
jmp
and
pusha
test
add
stos
int
or
xor
out
sub
in
mov
push
pop
and
cmp
sub
lcall
in
subl
cli
lock
mov
push
inc
addr16
jge,pn
aam
sub
popf
pop
pop
jmp
xor
stos
mov
repnz
in
xchg
loopne
data16
int
or
ret
subl
dec
ljmp
xchg
add
xchg
pop
or
adc
rcll
das
ljmp
arpl
add
mov
mov
pop
push
outsl
addr16
adc
movsb
ror
mov
add
popl
decb
stc
dec
and
ret
jmp
mov
mov
mov
cmpsb
enter
inc
add
dec
xlat
sub
mov
add
stc
js
fcomps
push
mov
sbb
mov
popa
icebp
xchg
popf
jg
es
add
mov
mov
inc
fmull
and
mov
add
dec
sbbb
aad
rclb
add
push
lret
arpl
pop
inc
lahf
inc
aaa
aam
inc
adc
cld
dec
xchg
push
inc
rorb
add
add
add
mov
cld
jns
cmc
xlat
into
sbb
call
push
mov
leave
scas
adcl
xchg
das
mov
lods
mov
jnp
adc
mov
iret
mov
shlb
push
push
cmpsl
push
test
or
jmp
mov
das
push
pushf
adc
daa
mov
imul
in
jl
imul
jne
jo
and
lock
mov
add
or
ss
sub
sbb
mov
cld
lds
cmpsl
insl
das
aad
out
outsb
icebp
cmp
cmpsb
jp
shll
xchg
push
in
adc
xchg
push
sbb
add
jge
mov
divps
push
sub
je
aam
and
xchg
insb
pop
sbb
mov
in
mov
jno
sub
xor
popa
cwtl
mov
in
xor
arpl
jl
movsl
mov
mov
jno
jns
sub
pop
loop
enter
rolb
dec
dec
cmc
je
sbb
xchg
or
outsl
dec
insl
push
addr16
pusha
iret
je
and
je
cmc
xlat
test
dec
dec
and
pop
sub
movsl
sub
test
pusha
cmp
pop
fsubrs
xchg
ret
mov
xchg
lock
xchg
dec
cli
in
lret
xchg
add
jae
sbbl
lods
sbb
bound
push
ja
mov
sbb
sti
rolb
loopne
push
lcall
inc
scas
jbe
ljmp
dec
mov
dec
int3
pusha
movb
rclb
or
mov
jo
push
adc
sbb
nop
xchg
stos
pop
jge
fwait
lods
lcall
stos
pop
aas
cmpsb
lods
movsl
aad
call
lcall
or
xor
fadds
xchg
add
insb
dec
mov
inc
iret
xchg
jae
dec
push
adc
outsl
dec
mov
pushf
into
push
