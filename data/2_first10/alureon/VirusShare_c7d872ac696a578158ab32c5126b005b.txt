push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsl
inc
mov
jle
aad
push
or
xchg
addb
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
and
dec
pop
stos
or
leave
pop
sub
fists
popf
out
jne
cmp
fsubrp
fisttpl
enter
mov
jno
int3
ret
sti
negl
mov
lods
mov
jo
jg
cmp
lahf
insb
fdivrl
xchg
fabs
dec
dec
loop
pop
outsl
lcall
push
mov
add
notl
add
add
cmp
insb
jl
mov
cmp
movsb
pop
js
adc
mov
mov
cmp
adc
push
pop
mov
aam
into
in
cmp
xchg
pusha
pushl
andb
jp
push
lods
ss
sbb
pop
subl
push
xor
cmp
outsb
popl
mov
addr16
ret
mov
mov
fwait
jmp
mov
jno
mov
or
xchg
cmc
scas
cmp
mov
jb
adc
add
xor
or
mov
repnz
orb
and
clc
aaa
inc
xor
fcomps
mov
or
xor
cmp
jno
pop
movsb
popa
cld
aaa
ja
push
aaa
ds
hlt
push
pop
dec
cmp
movsl
movsb
ret
mov
mov
jae
mov
in
mov
ret
in
fld
cmp
xchg
out
or
jle
add
lcall
pop
xchg
cmp
mov
adc
les
push
mov
add
cli
pushf
pop
xchg
gs
sub
fsubs
pop
adc
out
xor
jp
xchg
sbb
xor
lahf
xchg
sub
lret
dec
out
rcrb
mov
mov
int
add
in
lods
popa
nop
inc
out
inc
aas
out
popf
mov
enter
add
lahf
cmp
outsl
mov
lahf
mov
dec
sub
loopne
lods
and
iret
loopne
jl
mov
or
insl
cwtl
pusha
inc
and
fwait
mov
cmpsb
sbb
rorl
je
mov
adc
pop
test
repnz
push
push
fildll
aad
movl
hlt
and
jo
movsb
sti
js
and
enter
lock
sbb
out
adc
xchg
mov
lods
in
mov
bound
add
mov
data16
xor
xchg
mov
repz
pusha
popf
pop
xor
lcall
mov
push
repz
push
xor
mov
je
push
dec
jo
loope
add
mov
lret
cmp
call
fwait
sub
jnp
cli
adc
mov
xchg
lret
cmp
loop
inc
mov
lcall
ret
pop
jmp
push
sahf
in
rcll
out
idivb
jmp
imul
pop
xchg
out
dec
xchg
punpckldq
jne
and
ret
mov
clc
inc
cmp
loop
xchg
sarb
in
push
add
fsubrs
icebp
scas
test
mov
adc
cmp
ret
mov
cld
shlb
mov
adc
xchg
repz
jbe
jecxz
cmp
mov
mov
fs
mov
loope
dec
or
das
xchg
push
xor
cli
test
scas
int3
dec
pop
cmpsl
mov
cmp
lock
rclb
popl
aas
test
cli
xchg
adc
cli
icebp
notb
aam
jo
cmp
push
sbb
lret
mov
cld
dec
adc
add
and
aaa
inc
lret
stos
mov
ret
testl
add
add
mov
mov
or
out
sar
pop
sub
mov
lock
jl
loope
mov
push
imul
inc
ss
aas
adc
xchg
sti
xor
mov
mov
out
arpl
push
or
adc
jb
popa
mov
jae
inc
mov
cmp
pop
and
pop
add
inc
outsl
mov
insl
sbb
mov
dec
add
mov
sub
test
icebp
mov
aaa
xchg
dec
repnz
in
xor
push
sbb
lret
sbb
insb
inc
outsl
scas
lret
std
cmc
jg
out
jo
dec
aam
in
lret
dec
outsl
test
outsb
push
inc
xchg
mov
or
jbe
test
fs
jecxz
test
adc
mov
xor
dec
sti
mov
jbe
in
test
arpl
inc
inc
ret
out
aad
jecxz
jecxz
es
and
add
add
jp
and
jb
jmp
xor
sbb
jae
mov
lret
mov
mov
and
mov
sub
jge
pop
pop
inc
or
xchg
and
and
jle
out
push
out
mov
xor
mov
lahf
xchg
repz
cmpsl
mov
cmpsl
mov
sbb
dec
repnz
fcomp
inc
aam
add
add
adc
jecxz
add
inc
imul
or
repz
jb
cli
lods
sahf
movsb
mov
mov
add
mov
inc
cmp
cmc
into
rcll
arpl
mov
call
mov
int
jge
out
ja
push
inc
icebp
fsubrl
iret
test
sar
mov
xchg
stc
pusha
cmp
addb
xchg
xchg
mov
int
dec
inc
jmp
lea
cmpsb
ret
lods
in
mov
sbb
mov
mov
add
mov
pop
xchg
adc
adc
adc
fsubp
ret
push
add
outsb
leave
lahf
dec
decb
insb
add
cmp
daa
adc
or
push
aaa
mov
jne
fsts
add
mov
adc
leave
arpl
mov
stos
add
cmp
mov
xor
imul
pusha
pushf
leave
mov
data16
loop
pop
out
sbb
inc
loop
mov
jl
sbb
mov
test
insb
sbbb
bound
push
jae
pop
xchg
pop
aas
bound
andb
cmp
insl
outsl
jne
mov
adc
xchg
mov
leave
mov
inc
add
in
and
xor
bound
push
fisttpl
je
adc
je
fwait
sub
xor
adc
adcl
or
sbb
bound
daa
or
test
scas
mov
jne
scas
lods
adc
add
xchg
int3
inc
pop
lahf
icebp
lret
imul
xchg
dec
xchg
test
scas
or
bound
add
loope
lret
or
mov
movsl
jns
add
add
sub
xchg
pop
pushf
jl
out
jae
int3
test
xchg
sub
mov
cld
xor
iret
or
call
add
or
and
popf
fsubrp
push
sub
add
inc
xchg
dec
jl
add
or
cld
cmp
daa
imul
jmp
movsl
pop
ss
ret
pop
add
in
fwait
add
add
inc
pop
and
xchg
imul
fs
imul
sbb
ret
ret
xor
mov
or
jp
mov
aad
lods
cmc
pop
fnstsw
jle
cmp
lods
out
shll
sti
jmp
push
sarb
je
push
dec
push
mov
incl
dec
dec
xchg
jns
mov
mov
mov
fcoms
pushf
popf
add
and
jno
stc
nop
in
mov
in
jns
jge
outsb
mov
sub
jbe
cmp
test
lock
adc
mov
stos
js
push
dec
jo
pop
jp
mov
cli
sub
cmpsl
inc
and
clc
data16
mov
outsb
mov
cmp
pop
inc
pop
or
adc
flds
mov
jle
adcb
mov
and
pop
jo
add
add
mov
xchg
dec
rol
ds
ss
lahf
rol
sbb
scas
mov
fiadds
loope
jle
clc
xor
pop
call
out
arpl
xlat
int
std
insb
sbb
or
xchg
sbb
xor
sbb
pop
stc
xchg
sub
out
addr16
cwtl
mov
data16
push
lret
push
pop
add
mov
xchg
mov
dec
movsb
std
add
xlat
fld
mov
add
fwait
pushf
lea
mov
popf
bsr
add
scas
push
jl
lods
xchg
rclb
fs
mov
fdivr
or
insb
cmp
fdivrp
jne
mov
and
pop
mov
std
cmc
xchg
pusha
or
push
adc
std
xchg
xchg
std
jns
mov
jbe
sti
xor
aam
imul
pop
pop
rcll
xchg
cwtl
aas
in
mov
call
mov
push
test
push
loope
lds
js
mov
and
lods
jae
scas
jmp
adc
iret
xor
xor
testb
popf
sbb
incb
mov
mov
fs
xor
sbb
pop
jle
or
lea
call
sbbb
dec
in
jmp
add
add
or
jne
mov
jecxz
sub
xchg
mov
xchg
mov
loop
je
cmc
pop
idivb
decl
xchg
xor
into
test
stos
fsubl
mov
scas
pop
out
ja
aam
or
cmp
js
stos
xchg
mov
sub
fisttpl
cmpsb
iret
scas
sbb
jl
jge
xchg
addl
add
insl
inc
cli
fwait
scas
mov
adc
je
je
jo
in
lahf
aas
inc
inc
lds
ds
iret
mov
mov
pop
mov
or
fwait
cmp
sbb
sbb
jb
jecxz
sub
scas
test
outsl
push
and
and
mulb
in
int3
mov
pop
aas
xchg
cld
nop
sbb
add
jmp
ret
push
mov
es
jne
xchg
sbb
decl
pop
cmpl
or
stc
ds
pop
xchg
jmp
xchg
movsb
sbb
fsubs
test
jnp
push
push
icebp
outsl
cmpb
clc
push
mull
stos
push
push
xor
sbb
lock
jle
adcb
mov
xchg
sahf
testl
gs
mov
add
add
clc
mov
adc
jle
cmp
or
pop
scas
and
mov
xchg
push
mov
mov
std
aam
push
sbb
xchg
outsb
mov
scas
cmp
enter
js
mov
xor
test
lds
inc
nop
dec
lods
mov
add
mov
xorl
fwait
mov
inc
push
jmp
push
cltd
jl
pop
sbb
jp
sbb
cmovs
adc
add
add
sti
popa
adc
sbb
sbb
sub
mov
inc
add
mov
mov
aad
jle
sbb
scas
push
int3
fnsave
mov
xchg
out
mov
mov
dec
mov
sbb
or
and
sub
repnz
outsl
cs
mov
iret
scas
or
insl
vpaddw
hlt
pop
out
sub
out
addb
fwait
repz
or
add
add
mov
test
xor
mov
data16
mov
mov
inc
push
je
inc
inc
pop
ja
cmp
sahf
mov
int3
or
je
jno
test
push
ret
imull
lds
jmp
rorb
divl
cmpsb
loopne
aas
jo
lret
mov
adc
into
iret
and
mov
add
jbe
mov
arpl
mov
xchg
aam
pop
mov
or
leave
orb
movsl
or
call
inc
aad
sahf
add
scas
add
cmpsl
and
aad
out
repz
mov
push
data16
das
inc
and
jns
cld
pop
xor
mov
js
hlt
cmp
inc
cmpsl
pop
jnp
sub
xchg
ss
shll
popf
cmpsl
cld
lds
mov
and
or
aas
add
add
out
mov
add
pop
or
mov
int
andl
mov
call
mov
xchg
out
adc
inc
ja
push
dec
push
iret
insl
jl
fiaddl
int
mov
sub
and
cmp
leave
out
incb
leave
xchg
in
mov
test
push
jns
dec
and
cmp
adcl
jle
inc
movsb
cli
cmpsl
fs
repnz
add
imul
cs
mov
out
pop
push
leave
rcr
adcl
jno
or
push
sbb
or
sub
jbe
popf
jecxz
xchg
cld
loopne
inc
inc
and
add
add
mov
jb
lcall
fdiv
xor
sbb
pushf
out
dec
inc
adc
add
neg
inc
or
rcrb
inc
daa
xchg
adcb
jno
adc
stos
mov
push
fdivr
aad
and
outsb
lret
fs
pop
add
jno
repz
cli
fwait
dec
mov
pop
movsl
xchg
cmc
sbb
outsl
or
frstor
cli
mov
lret
insb
ficomps
fwait
push
test
sub
jecxz
call
outsl
test
sahf
lea
push
jbe
jae
mov
sub
fwait
sub
pop
iret
and
aaa
adc
sub
dec
or
fdivp
pop
inc
ljmp
add
out
or
lcall
inc
jle
jae
frndint
sub
xrelease
loop
je
pop
jns
das
clc
data16
sbb
cmp
jg
inc
int
hlt
ret
outsl
popf
xor
dec
mov
and
cmp
decb
dec
push
icebp
loop
pusha
movsb
mov
pusha
shrb
xor
ffree
mov
aam
cmpsb
and
mov
xor
ret
popf
pop
arpl
sub
inc
rcr
popf
lea
and
dec
add
mov
clc
push
loop
or
add
or
push
sub
mov
push
pop
int
adc
jbe
inc
or
int
cmp
mov
in
in
sub
mov
lds
lcall
lahf
dec
mov
ds
sbb
push
lds
lods
mov
int3
xorb
jge
addr16
mulb
jne
outsb
ja
mov
addl
inc
xlat
outsl
cmc
cmp
add
gs
push
fwait
push
fcomp
xor
xchg
dec
std
inc
adc
mov
and
and
repz
lret
mov
push
arpl
or
cmp
pop
test
int
clc
pop
xchg
add
rcll
std
fwait
cmpsl
or
gs
xlat
cltd
and
in
xor
inc
jo
add
push
jb
out
fs
shl
inc
or
mov
rclb
rcll
lock
cwtl
xlat
mov
mov
push
cmp
out
sbb
add
xchg
ret
xchg
push
ret
pop
cmp
pop
lret
dec
movsl
xchg
and
pop
lret
lcall
jno
sbb
xchg
fs
sub
cmp
hlt
ret
add
and
jg
wbinvd
cmpsl
jmp
jns
subb
scas
sti
or
xor
jmp
popa
add
push
push
pop
and
rol
lret
sbb
lahf
addb
cmc
shr
insb
xor
mov
push
push
lods
inc
sahf
jb
dec
loope
jae
mov
or
xchg
rcl
cs
dec
push
sub
push
mov
pop
mov
add
cld
jnp
popl
xchg
sahf
ror
es
sbb
loopne
sbb
sbb
data16
in
push
filds
imul
mov
push
cmpsl
cli
jnp
cmp
sarb
imul
sub
sbb
add
jl
jp
jb
adc
xor
pop
jge
lahf
arpl
push
pop
mov
xlat
cmp
inc
fs
adc
add
cld
adc
cmp
cmpsb
xor
add
add
push
pop
mov
jp
xchg
adc
arpl
and
mov
gs
mov
mov
in
jecxz
test
xchg
and
shrb
jns
into
or
lcall
movsb
lods
shr
fidivl
int3
dec
loop
jg
loopne
pusha
push
pop
shrb
lock
lret
or
jmp
mov
push
push
push
add
xor
mov
xor
mov
daa
out
adc
cmp
dec
out
les
ret
sub
pop
int
int3
adc
add
hlt
nop
fnsave
and
cmp
subb
pop
xchg
imul
insl
push
mov
dec
push
loopne
cwtl
loopne
xchg
out
xchg
fsubr
xchg
xchg
dec
roll
push
insb
pusha
ret
cltd
fcoml
call
add
int
sbb
add
loopne
int3
lret
and
dec
xchg
or
repz
clc
ret
xor
scas
jno
xchg
ret
mov
push
popa
adc
mov
sbb
stc
sbb
inc
add
mov
aas
xor
cmp
icebp
jb
adc
icebp
inc
jnp
mov
mul
das
or
adc
in
adc
push
add
scas
xchg
push
lcall
xorb
shrb
cld
in
pop
fisubrl
into
fwait
xchg
xchg
and
xchg
outsb
sbbb
popf
mov
pusha
mov
push
mov
icebp
jmp
aaa
scas
dec
notrack
outsb
je
push
in
fdiv
in
outsl
pop
rcll
jp
dec
js
repz
sub
jb
imul
daa
mov
mov
fmull
out
repnz
add
add
shlb
aam
mov
subl
inc
pop
bound
mov
faddl
push
lahf
mov
dec
mov
adcl
imul
in
pop
inc
enter
lods
test
pop
or
pop
pop
sti
adc
addb
les
jp
push
stc
mov
movb
add
out
aas
cwtl
sbb
rorl
imul
notl
loopne
inc
fs
push
mov
mov
sub
ficompl
mov
aas
test
fisubrs
and
ljmp
or
and
and
mov
icebp
xor
nop
aam
pop
lock
mov
mov
sbb
add
dec
push
ja
jge
fadd
cmp
mov
pushf
test
push
sbb
xor
add
push
fmuls
dec
push
mov
sbb
cmp
adc
cs
clc
mov
or
xchg
xchg
out
fldcw
sarb
das
cmpsb
cli
pop
fsubl
nop
push
lods
jmp
xor
sbb
addl
insb
xor
out
rclb
pop
pop
xor
dec
xlat
mov
frstor
jl
xchg
ss
sub
aam
add
mov
sarl
push
push
or
pop
cld
cmpsb
aas
xor
sti
push
fdivr
mov
out
push
enter
sbb
repnz
mov
les
and
push
lds
and
iret
mov
sbb
jmp
pop
xor
je
jecxz
and
sti
gs
pop
mov
das
ljmp
xchg
sub
jno
push
mov
mov
inc
add
cmpsb
testl
mov
add
sub
loop
lret
pusha
in
or
xor
push
jmp
xchg
dec
mov
aas
sbb
pop
leave
addr16
shlb
cmc
jmp
mov
ljmp
dec
lods
mov
test
sbb
pusha
or
mov
nop
xor
daa
inc
and
stos
inc
mov
aam
add
fs
dec
lret
jbe
adc
inc
push
push
push
test
inc
lock
push
push
sbb
stc
test
xor
jl
xlat
xchg
add
jne
lods
xor
or
or
add
popf
and
sbbb
or
or
loopne
inc
and
xlat
ret
sti
insb
lods
cwtl
stos
ret
xchg
shlb
scas
cmpsb
adc
ficompl
add
iret
lahf
js
or
sub
jns
mov
fsub
sub
inc
push
sbb
pop
push
loop
jge
mov
stc
pop
inc
test
inc
sbb
add
add
add
pop
into
jb
mov
shrl
daa
mov
push
mov
xor
and
push
mov
jb
xchg
roll
pop
jnp
popa
fmull
add
int
add
hlt
imul
mov
ja
push
mov
popa
lock
pop
mov
or
aaa
ffree
loop
inc
add
fmull
leave
iret
sbb
fcoms
xor
movzbl
stos
ljmpw
and
pop
mov
mov
iret
ja
cld
dec
jns
into
arpl
xchg
in
adc
and
lock
mov
stos
ffree
cs
loop
test
mov
cmp
roll
cli
lods
dec
jnp
add
scas
shll
mov
sub
cmc
cmpsb
pop
gs
sahf
mov
xchg
popf
in
icebp
mov
and
or
xchg
in
lds
push
in
mov
add
arpl
lcall
das
scas
cmp
je
cwtl
arpl
mov
repnz
adc
lret
aam
mov
dec
loope
mov
stos
sbb
neg
push
pop
daa
insb
mov
mov
pop
jo
push
adc
mov
sub
add
imul
fstps
das
or
test
xor
dec
jmp
loope
and
test
push
inc
mov
cmpsl
shll
jp
mov
loopne
jno
sbb
add
push
std
pusha
arpl
sti
push
mov
arpl
pushf
in
pop
ss
sbb
je
fsubrl
push
pop
add
cmpsl
sub
loop
repz
sub
xor
or
cld
inc
cltd
mov
int3
test
sub
repnz
inc
fidivrl
jmp
js
lods
mov
cmpl
pop
fwait
xor
je
outsl
inc
jmp
jmp
add
push
pop
and
jge
ljmp
jmp
xchg
mov
outsl
dec
cld
cmc
mov
jle
aad
sbb
sbb
xor
sub
stos
rolb
sub
hlt
int
daa
shll
mov
stc
sub
js
mov
into
add
lret
pushf
mov
push
sub
or
inc
lods
adc
roll
add
cld
push
sbb
in
sti
or
rolb
stos
xor
lret
in
jnp
push
cmpsb
in
mov
xacquire
loopne
das
adc
cmp
popa
push
sub
mov
cmp
leave
scas
gs
aad
push
sub
inc
int3
or
imul
daa
fwait
lahf
movsl
push
iret
or
mulb
jb
jp
xor
dec
lock
jns
dec
mov
dec
adc
iret
insb
sub
jno
mov
lds
dec
xor
shll
mov
sub
and
test
pop
in
daa
dec
cltd
xchg
aas
addr16
pop
in
xchg
jnp
rorl
mov
xor
sub
sub
and
fldt
lods
inc
imul
sub
bswap
or
xchg
mov
sbb
add
jo
sbb
insb
fwait
js
mov
les
in
sub
push
sbb
sub
stos
clc
test
out
incb
and
jl
bound
and
icebp
hlt
movsl
adc
out
in
paddd
in
mov
stc
movsb
push
ss
aas
push
imul
jle
pop
orb
dec
adc
sub
fsqrt
pop
sbb
push
fxtract
pop
and
cmpsl
mov
add
add
fstps
mov
dec
int3
cs
add
pop
std
inc
cmpsb
xor
test
push
aad
ret
iret
cs
pop
sbb
mov
cmp
jmp
cs
inc
fs
in
rol
sub
push
jecxz
adc
sub
adc
nop
aad
adc
mov
jle
sub
ds
jp
sbb
lods
bound
sub
push
jbe
roll
jns
push
inc
mov
add
xor
cld
inc
mov
mov
push
jle
pop
push
fildl
mov
inc
pop
movsb
fdivrp
jmp
adc
mov
push
and
int3
mov
jecxz
sahf
mov
and
std
jmp
sub
mov
sahf
adc
add
inc
testl
pop
cwtl
cs
sbb
orb
pop
mov
push
outsb
mov
sbb
add
add
lods
sbb
xorl
mov
mov
and
test
adc
mov
es
cmc
push
and
shll
add
sub
dec
ret
xlat
push
add
orl
fchs
or
cli
push
loopne
test
add
inc
movsl
and
adc
fcmovnbe
ret
xor
add
mov
orl
cmpsb
cmpsl
mov
hlt
xchg
pushf
negl
jp
push
mov
pop
mov
fs
jne
xor
sub
inc
push
stc
nop
mov
icebp
sub
fisttpl
cmpl
inc
add
jge
gs
mov
scas
pop
and
sbb
xchg
mov
cmp
mov
or
arpl
popa
in
cmp
std
xchg
popf
repnz
xorl
add
jnp
insl
out
sbb
shlb
push
into
ffreep
or
add
aas
ror
test
cmp
mov
cmpsl
clc
in
or
shlb
mov
mov
add
cli
sbbl
outsl
and
jp
fdivrs
leave
inc
mov
mov
std
mov
xchg
dec
mov
pop
stos
sarl
push
repnz
push
cmpsb
shlb
outsb
pop
lods
out
aas
arpl
sbb
lds
mov
clc
sub
mov
inc
fsubs
and
in
pop
mov
adc
push
push
push
and
testb
or
pop
into
jmp
mov
call
adc
dec
loop
movsl
test
enter
lret
jl
lret
dec
repnz
shlb
lret
sub
lahf
int
xor
mov
mov
sbb
rol
push
xor
lsl
push
dec
adc
cwtl
jbe
or
fldt
test
es
add
imul
dec
jle
loope
fsub
mov
stos
enter
jae
das
jno
and
outsb
out
jge
xchg
cs
inc
pushf
aad
push
fstps
pop
dec
sbb
das
adc
in
push
inc
scas
jecxz
faddl
movsl
push
xor
xlat
adc
xchg
int
in
pop
jae
sub
repz
lods
push
push
fbstp
inc
adc
sub
push
add
in
arpl
inc
jae
cmpl
and
aaa
testb
sbb
rcl
xchg
pop
inc
and
add
dec
aas
lret
roll
in
pop
adc
adc
add
leave
shlb
imul
fcompl
and
mov
jmp
repz
fs
lods
adc
clc
push
xchg
sbbl
xor
insl
ret
push
add
cltd
push
jle,pn
adc
test
hlt
pop
pop
out
iret
sub
xor
hlt
repnz
xchg
pop
push
and
pop
int
add
sbb
imul
pop
mov
cwtl
dec
cmpsl
insb
sti
call
add
xor
ret
cs
add
out
out
and
and
leave
cli
inc
sub
into
inc
push
stos
mov
sti
dec
xor
or
shll
mov
xchg
repnz
xor
sub
ret
mov
xchg
bound
add
sbb
rclb
aam
add
xchg
js
mov
daa
mov
add
cmp
mov
and
pop
xchg
shr
data16
jns
xor
or
dec
pop
and
js
mov
add
xchg
fwait
dec
inc
add
dec
add
mov
clc
fsts
jg
loopne
dec
or
mov
stc
xchg
xchg
pusha
leave
add
add
cs
pop
test
clc
cmp
inc
jp
cli
scas
jle
ret
lods
ret
aas
or
mov
enter
popa
sub
lods
and
pop
mov
add
inc
add
xlat
repz
test
stos
mov
jnp
inc
shrl
gs
aaa
loope
test
mov
daa
mov
lret
shll
adc
or
push
mov
loopne
jl
push
ret
add
add
popf
or
leave
shr
jnp
xor
es
xchg
daa
loopne
lret
mov
test
mov
sub
fnstsw
add
pop
lea
mov
cmc
scas
cmp
arpl
imul
or
movsb
shll
sbb
xchg
rol
idivb
fildl
xchg
loopne
ja
movsl
inc
addb
push
ret
cmp
les
and
push
xchg
out
xchg
je
ror
ljmp
out
and
movsl
aam
ss
out
insl
pop
lea
repz
mov
sub
mov
out
xchg
in
cmp
add
xchg
jl
shlb
mov
popa
or
outsb
stos
nop
pop
js
stos
pop
test
push
rcr
aaa
aaa
mov
inc
out
adcl
pop
cwtl
cmc
mov
jne
leave
mov
push
add
or
aas
nop
mov
