add
sbb
cmp
and
mov
cmpsl
xor
add
inc
lock
jmp
fsubrs
push
mov
imul
lea
call
inc
add
call
mov
push
mov
call
and
inc
dec
add
movzbl
and
call
inc
or
movzwl
and
lea
inc
imul
imul
lea
add
add
mov
sub
call
imul
add
movsbl
inc
inc
call
add
inc
call
xor
mov
sub
inc
dec
inc
add
pop
and
add
dec
add
inc
pop
add
add
pop
add
mov
mov
mov
pop
dec
add
inc
mov
movzbl
mov
mov
movzwl
pop
sub
mov
pop
inc
mov
mov
add
add
call
mov
dec
mov
movzbl
ret
movsbl
mov
push
mov
inc
push
dec
mov
push
inc
mov
push
inc
add
push
mov
mov
mov
lea
dec
push
mov
ret
push
movsbl
mov
imul
add
inc
mov
mov
push
or
mov
call
pop
ret
jmp
sub
and
lea
mov
movzbl
dec
imul
xchg
lea
xor
inc
add
xor
dec
imul
dec
movzwl
inc
mov
dec
dec
jne
mov
mov
movzwl
add
pop
inc
and
pop
inc
dec
pop
mov
dec
mov
dec
dec
dec
inc
mov
mov
inc
inc
add
ret
push
push
lea
inc
push
dec
or
and
sub
add
mov
push
mov
mov
imul
lea
push
add
add
dec
dec
add
dec
sub
push
lea
mov
mov
push
dec
lea
xor
inc
sub
push
dec
or
push
inc
inc
pushl
dec
call
lea
add
mov
mov
dec
sub
or
mov
mov
pop
ret
xor
cmp
jb
lea
xor
dec
mov
sub
movsbl
mov
dec
dec
inc
movsbl
inc
or
inc
inc
inc
mov
cmp
jb
lea
pop
inc
add
lea
add
dec
mov
lea
movsbl
inc
mov
and
sub
inc
xor
dec
xor
mov
dec
mov
dec
dec
test
jbe
mov
imul
inc
inc
dec
inc
dec
add
movswl
lea
mov
mov
and
mov
or
mov
dec
inc
movzbl
lea
dec
add
imul
add
and
inc
dec
mov
inc
imul
mov
movsbl
mov
inc
imul
mov
dec
imul
add
mov
and
dec
jne
movzwl
mov
mov
dec
add
inc
imul
dec
movzwl
mov
and
mov
mov
add
imul
mov
add
and
lea
lea
lea
mov
movswl
mov
test
jbe
inc
mov
add
dec
xor
lea
mov
lea
sub
mov
dec
lea
movswl
inc
lea
inc
inc
mov
movzwl
dec
movzwl
dec
and
or
mov
mov
dec
sub
movzbl
inc
imul
add
mov
xor
and
dec
sub
mov
mov
mov
movzbl
sub
dec
mov
inc
sub
mov
sub
movsbl
movzbl
add
mov
add
inc
jmp
push
inc
lea
add
dec
mov
mov
dec
inc
dec
movzbl
dec
imul
inc
mov
inc
lea
sub
dec
sub
add
inc
lea
mov
lea
mov
mov
mov
inc
mov
imul
add
dec
sub
lea
inc
mov
mov
inc
inc
cmp
je
mov
imul
and
push
lea
call
call
add
sub
call
call
inc
add
mov
dec
mov
dec
dec
ret
inc
mov
pop
lea
ret
push
mov
imul
mov
dec
imul
push
dec
inc
push
lea
push
mov
push
dec
mov
inc
mov
mov
call
inc
push
mov
lea
xor
mov
sub
movzbl
neg
inc
mov
lea
mov
dec
dec
mov
dec
lea
mov
lea
mov
inc
mov
mov
dec
je
inc
add
inc
mov
inc
mov
mov
add
add
mov
xor
repnz
and
lea
add
movzwl
jmp
lea
mov
lea
inc
dec
dec
dec
lea
jmp
sub
dec
and
dec
sub
sub
dec
movzbl
pop
pop
ret
push
inc
add
and
inc
sub
dec
movswl
inc
lea
sub
mov
xor
mov
inc
mov
dec
inc
inc
mov
lea
xor
mov
dec
dec
and
add
dec
pop
ret
sub
imul
mov
mov
dec
mov
xor
or
mov
xor
lea
mov
inc
or
xor
inc
lea
mov
sub
lea
inc
and
inc
lea
sub
lea
mov
cmp
jb
mov
push
lea
movsbl
push
inc
mov
push
inc
inc
xor
dec
add
xor
add
xor
xor
dec
dec
push
movzwl
mov
mov
dec
sub
xor
inc
dec
mov
dec
mov
mov
mov
xor
movzbl
dec
lea
add
dec
imul
add
add
inc
movzbl
movsbl
dec
and
inc
mov
mov
add
inc
add
mov
mov
movzwl
lea
sub
dec
jmp
pop
mov
ljmp
pop
test
mov
in
ja
addr16
mov
clc
sbb
lahf
jno
xchg
cwtl
jl
loopne
popa
in
fwait
clc
inc
pop
pop
mov
scas
cmp
ss
inc
imull
mov
jmp
aad
mov
fbstp
movsb
jb
std
shrb
jmp
lcall
pop
and
or
push
push
insb
ljmp
pop
jl
push
in
adc
jmp
cmpsb
je
xor
ds
jle
xchg
or
or
lret
and
mov
inc
in
idivl
pop
lret
cmp
mov
mov
dec
inc
cmp
pushw
mov
xor
pop
inc
push
in
scas
fsub
lock
test
xor
stos
lcall
jmp
lahf
pop
hlt
icebp
xchg
or
mov
jne
repz
aad
and
dec
out
jnp
push
cmp
clc
lahf
push
mov
bound
add
pop
inc
cmc
cmp
pusha
cmc
test
dec
jno
cmp
adc
mov
inc
sbb
and
or
cld
out
je
cmp
jns
int3
jle
bound
leave
pop
lahf
push
push
push
cmp
clc
adc
inc
ret
int3
incl
sub
daa
push
mov
mov
xchg
mov
test
mov
pop
adc
cmp
push
adc
sti
pop
mov
sbb
andb
adcb
mov
dec
out
and
and
js
clc
mov
rol
dec
or
adc
idivl
mov
rcll
and
pop
lods
push
push
sub
lcall
sbb
add
cmpsl
fmull
pop
stos
push
jbe
sahf
js
xchg
jg
ds
inc
shll
add
mov
push
xchg
pop
jb
into
movsl
daa
pop
add
inc
mov
jl
pushf
jbe
jle
adc
adc
enter
js
cmpl
mov
pop
iret
mov
fcoms
or
lret
lret
pop
push
out
aad
cmpsb
mov
out
pop
fninit
xor
lahf
or
xlat
je
imul
jne
push
adc
std
hlt
ljmp
ljmpw
scas
mov
push
ret
push
iret
aas
cmp
adc
imul
ljmp
dec
mov
ror
mov
lock
or
jae
xor
fcompl
jnp
cmp
daa
jns
sub
shlb
pop
add
jbe
mov
loope
cld
out
cmp
push
pop
in
popa
inc
hlt
cmp
lods
outsl
xlat
add
push
cmp
lock
outsb
repz
cli
xchg
repz
dec
sub
fs
push
mov
push
mov
gs
call
andl
xor
cmp
inc
cmp
mov
xchg
std
push
loop
mov
rcrb
mov
jl
push
pop
xchg
dec
call
lcall
fistl
lea
or
nop
pop
pop
push
nopl
fildll
pop
repnz
icebp
dec
push
divl
test
push
mov
pop
int
aad
aaa
jbe
or
fucomp
inc
add
lea
addl
movsb
imul
xor
sub
data16
out
fmull
jb
loop
loope
jmp
cltd
mov
addl
and
or
scas
jmp
insl
lret
jle
push
and
jecxz
add
push
jo
mov
push
rol
xchg
fsubrl
lahf
dec
in
and
js
jno
sarb
mov
mov
cmp
clc
pop
fwait
mov
pop
add
sub
jmp
in
cld
aas
aas
or
leave
out
pushl
loope
test
bound
faddl
mov
xlat
inc
into
imul
mov
jo
inc
out
lock
cmpsb
mov
loop
pop
xchg
jecxz
imul
add
or
aaa
jno
test
arpl
test
imul
inc
movl
xor
xor
add
pop
pop
mov
xor
js,pt
call
sub
inc
shrb
je
or
icebp
imul
adc
add
fdivs
sub
sahf
ret
mov
test
sbb
mov
fnstcw
sub
push
shrb
jle
fnstenvs
add
dec
push
mov
jle
push
std
sbb
push
inc
lret
pusha
enter
sub
jns
pop
lret
sbb
mov
stc
mov
nop
mov
es
lea
lret
jecxz
ret
sar
jecxz
add
cmp
push
pandn
jmp
jp
jg
sbbb
mov
xor
pop
xchg
leave
dec
lret
add
ja
xchg
outsb
mov
inc
jne
int3
inc
fnstenv
out
mov
and
jb
and
stc
pop
cld
or
dec
push
fs
cltd
pop
mov
jecxz
inc
xorl
mov
jecxz
mov
jl
mov
je
clc
in
fimull
jo
mov
push
push
sub
mov
ds
add
pop
repz
mov
std
jns
in
inc
outsb
pop
daa
ret
jg
iret
xorb
push
out
ret
push
int
mov
clc
call
divl
imul
mov
in
jg
addr16
testl
inc
and
or
cmp
int
clc
lods
xor
mov
sbb
and
nop
jp
fs
jnp
mov
ja
mov
iret
inc
mov
loopne
fdiv
push
imul
test
mov
pop
push
cmp
xchg
repnz
fisubrs
test
adc
roll
cld
mov
insl
inc
addl
sbb
les
push
fcoms
rcl
bnd
sub
jb
add
mov
dec
lret
adc
cmc
jl
mov
xchg
pop
mov
rcrl
ret
inc
jne
lahf
jp
ds
add
cmp
fstpl
push
lret
adc
adc
ror
push
mov
data16
add
test
movsb
cmp
jo
pop
es
mov
call
leave
icebp
pop
pushf
jbe
lods
imul
rcrb
rcrl
lock
adc
sbbb
out
pop
or
dec
mov
dec
mov
push
cmp
sbb
cmp
stos
test
cli
xchg
inc
daa
not
jnp
dec
jp
or
pop
mov
call
std
cmpsl
and
dec
jns
aas
xchg
push
xchg
jmp
mov
ficoml
popf
gs
jge
push
mov
cli
jne
test
cwtl
call
aas
test
xor
and
scas
cmp
lret
push
movsl
jle
push
pop
dec
mov
inc
mov
ret
ja
xor
or
and
mov
jnp
sub
push
and
adc
pop
mov
dec
pop
js
dec
outsb
fsubl
das
fists
aas
fucomi
xchg
jg
add
mov
fistpl
ds
stos
rorb
es
fisubrl
cs
lcall
cmpl
pop
sbb
mov
into
shrl
xor
mov
and
push
inc
pushf
and
outsl
in
sbb
mov
inc
sbb
xchg
xor
jae
pop
jle
or
mov
add
add
jno
enter
dec
jle
fs
dec
arpl
leave
cmp
push
push
mov
fst
jb
aaa
jg
pop
scas
cmp
lahf
lods
loope
scas
sub
loope
inc
push
sub
mov
mov
daa
pop
pop
jb
imul
lretw
and
mov
jbe
pop
ja
jnp
jnp
fcoml
adc
xchg
pop
lods
repz
mov
iret
mov
xor
shrb
pop
test
aad
test
sbb
lock
shl
fmuls
cwtl
inc
fildl
sub
shll
in
pcmpeqb
sbb
dec
sbb
and
xor
les
mov
addr16
out
add
mov
jae
xchg
test
dec
divb
out
in
pop
xor
add
jmp
adc
xor
mov
xlat
pop
call
pusha
and
sub
xor
xor
fs
xor
lret
xor
adc
fisubrs
push
nop
outsl
test
jo
lods
repz
pop
sbb
dec
mov
jp
mov
fistpll
dec
inc
or
fistl
mov
pop
xor
mov
jl
hlt
pusha
inc
or
stc
lods
jl
jne
shlb
mov
sbb
mov
cmpsl
je
push
lods
and
push
xor
decl
loope
fistpl
inc
fmuls
inc
les
push
bound
int3
lds
mov
mov
sub
fistpll
jb
push
jg
push
cmp
aas
pop
xchg
cmp
dec
push
inc
xlat
scas
cmp
jb
sti
inc
pop
inc
lret
sbb
stos
or
jns
in
inc
xchg
cld
mov
icebp
add
es
leave
lods
out
icebp
and
imul
jns
push
xchg
push
mov
or
xchg
or
pop
mov
or
movsl
and
cld
pusha
jge
les
ret
fisttpl
scas
mov
push
shll
notl
mov
test
loop
push
push
lds
fcomps
and
cli
cmp
inc
lahf
sub
roll
outsl
loop
and
movsb
jb
sti
jo
fwait
pause
fists
mov
sbb
pushf
imul
cmp
leave
gs
fucomi
jg
lock
cmp
and
xor
cli
inc
push
lock
movsl
xor
cld
pop
cmp
mov
addb
sbb
dec
push
sbb
jg
or
lret
ficoms
fdivr
and
dec
or
push
jp
stos
and
nop
push
add
out
jmp
dec
push
sti
call
pusha
cmpb
cld
and
fwait
sub
ss
ficoms
paddsw
pop
cmp
into
mull
cwtl
aad
xchg
mov
push
outsb
jno
dec
icebp
repnz
shrl
stc
cmp
mov
push
fdivl
out
mov
nop
in
cmp
clc
jbe
in
fs
xor
loop
sbb
clc
clc
jmp
decb
into
xor
test
pop
clc
adc
pop
aam
outsb
inc
fstpl
adc
add
push
repz
dec
jl
push
push
push
lahf
inc
xchg
dec
pop
push
insb
mov
xchg
xchg
arpl
push
mov
scas
in
repz
imul
sbb
repnz
pop
js
lock
mov
mov
or
inc
dec
out
jge
cmpsb
dec
add
outsb
jb
fwait
ret
je
das
test
or
xchg
cmpl
inc
sub
arpl
mov
dec
or
xchg
mov
cmp
push
lcall
sbb
sahf
idivl
jl
nop
mov
mov
mov
sahf
jb
sbb
in
sbb
or
fstps
dec
mov
insb
cmp
sub
in
scas
lret
mov
jno
mov
mov
xlat
mov
or
sbb
sbb
xchg
out
out
movsl
inc
adc
push
mov
mov
insb
jmp
aaa
or
jo
fildl
xlat
and
sbb
imul
push
mov
mov
fcomi
jns
lret
in
stc
and
aas
ja
lods
mov
fwait
add
sub
or
test
and
out
cld
lcall
push
dec
dec
add
jne
inc
sub
jg
arpl
hlt
fcoms
shll
push
out
outsb
and
jbe
push
xor
jns
mov
sbb
jge
mov
adc
mov
test
or
aad
inc
aaa
inc
andl
call
fwait
dec
fsubrs
subps
mov
je
mov
test
aam
dec
lahf
out
inc
fcompl
jb
sahf
jnp
lds
addr16
fcoml
push
shrb
shll
jnp
jl
fstpt
int3
sbb
ret
push
mov
imul
cmp
aad
imul
mov
push
mov
mov
rcrl
sub
iret
sahf
test
jno
pusha
xor
add
mov
repnz
pop
jmp
push
or
cli
out
sub
movsb
adcb
call
jae
in
mov
cmp
add
sti
and
sbb
int
fwait
iret
jp
pusha
sbb
aas
outsb
sbb
or
push
dec
lret
fisttpl
push
fsubrp
andl
lock
rclb
cmp
or
inc
xchg
int3
aad
pushf
icebp
fnsave
dec
test
sti
scas
sub
or
add
or
or
xchg
add
mov
fstl
pop
xlat
pop
jnp
sbb
jg
jge
jo
pop
incb
pop
insl
push
fcmovnbe
pop
xor
xchg
and
and
push
int
je
repnz
fbstp
cli
pop
dec
xor
loopne
lea
ret
xchg
push
ds
jecxz
sub
nop
loopne
pop
out
sub
fcomp
mov
pop
pop
mov
sub
xor
dec
jl
enter
jb
loop
prefetch
or
leave
out
cmp
sbb
push
adc
pop
sub
mov
stos
ljmp
or
lret
rorl
sub
xchg
mov
inc
cmpsb
dec
cmc
add
add
inc
xchg
enter
xchg
pop
lods
ficoml
inc
cmp
dec
aad
mov
xor
lcall
inc
pop
pushf
popa
mov
sbb
inc
into
in
xchg
dec
ja
lahf
call
cli
cmc
mov
xor
push
xor
cmp
fs
icebp
push
aaa
ret
movsb
fwait
dec
sub
and
mov
sub
in
lds
pop
stos
insb
pushf
mov
leave
xchg
outsb
pop
aas
popf
icebp
fsubs
aaa
lods
cld
sbb
rcrl
push
dec
inc
movsl
adc
mov
mov
dec
dec
loopne
scas
inc
pop
out
stos
pop
mov
xchg
imul
mov
mov
lret
mov
fistpl
loope
adc
dec
movsb
aam
inc
add
xor
pop
adcl
andl
scas
jle
loop
adcl
mov
pop
leave
subb
js
cli
orl
std
sbb
or
adc
loope
pop
loopne
call
imul
add
das
sub
loop
mov
pusha
mov
mov
xor
xchg
leave
sub
outsb
clc
div
fucomip
xchg
cwtl
popf
std
shll
inc
dec
mov
cmp
das
and
mov
pop
push
jmp
push
xchg
or
mov
loop
xchg
push
test
gs
cmp
mov
cmpsb
mov
jbe
in
mov
sbb
dec
pop
and
and
pushf
and
imul
inc
jl
push
ds
mov
es
repz
les
mov
mov
cmp
std
xchg
addr16
ret
js
lods
ret
js
lea
adc
shll
jbe
andps
add
xchg
push
ret
adc
lret
add
mov
fldt
inc
js
pop
loopne
xor
adc
std
lds
in
xor
mov
mov
dec
mov
add
and
adc
push
pop
loop
into
xchg
sub
pop
adc
inc
mov
and
ss
dec
sbb
pop
sbb
mov
pop
and
and
fisubs
in
pop
lods
jl
das
xchg
idivl
dec
out
scas
imul
cmc
inc
mov
ds
dec
push
cs
ss
add
mov
clc
mov
dec
or
pop
outsl
dec
les
das
imul
cmp
fldcw
push
ret
dec
sub
aas
aam
fs
les
sbb
pop
shll
and
int3
stc
js
adc
cmp
lods
cmpsb
pop
aad
movb
jge
pop
sub
aaa
pusha
shr
ljmp
xlat
insb
cmp
cli
and
or
sub
dec
and
jp
mov
test
rcrb
xchg
in
jb,pn
fsubrs
sti
imul
sub
sub
jae
pop
inc
push
or
adc
xchg
mov
addr16
jnp
jno
add
push
stos
jbe
fcompl
jae
leave
aam
call
xor
icebp
in
dec
subb
dec
iret
jl
mov
mov
js
dec
fwait
xchg
jmp
pop
ret
in
fwait
in
scas
push
jp
push
adc
mov
in
call
dec
adcl
xchg
in
or
mov
or
xor
call
es
pop
dec
cmp
cmpsl
lods
mov
imul
loop
mov
cli
pop
call
leave
out
clc
fiaddl
arpl
pop
imul
sbb
rcl
mov
jp
push
cmp
and
cmp
push
jno
or
dec
lods
add
ljmp
dec
jns
outsb
add
popf
shll
xchg
lods
enter
cli
add
stc
mov
cld
push
lahf
dec
stos
mov
lret
inc
mov
int3
mov
push
fwait
mov
std
add
push
in
add
or
std
sub
push
loopne
rorl
push
inc
adc
inc
mov
inc
sub
jg
stos
es
and
lods
hlt
xchg
loope
xchg
clc
sahf
mov
and
lds
sbb
jg
jecxz
mov
inc
sub
push
leave
xor
xorb
popf
into
mov
in
mov
mov
mov
mov
popa
push
or
dec
dec
das
sbb
push
leave
mov
out
cmc
sti
mov
data16
into
in
into
mov
mov
dec
adc
daa
and
out
pop
lahf
sub
mov
jmp
xorb
icebp
in
xchg
inc
adcl
or
inc
out
xchg
stos
dec
movb
addr16
lcall
xchg
loopne
dec
punpckhwd
pop
test
insl
jne
cmp
insb
mov
scas
sti
mov
shrb
movntps
push
mov
cmp
int3
sub
mov
cmp
aas
fcomps
cltd
xor
cmp
push
jl
loope
jmp
les
in
jmp
sbb
sbb
xchg
add
sbb
imulb
push
rcrl
movsl
fdivrs
and
leave
mov
adc
or
xor
mov
add
pop
testb
xor
divb
push
mov
fadd
jbe
or
aas
fucom
ds
subb
lahf
in
push
je
data16
mov
cld
aam
push
shlb
aad
or
dec
popa
cmp
jo
cli
insl
cmc
add
xchg
push
cld
lcall
int
dec
jnp
f2xm1
mov
pop
or
and
lret
loopne
shll
jp
mov
mov
shlb
jno
shr
ljmp
mov
push
jp
pop
loop
arpl
movsl
mov
and
fadd
and
jno
cmc
movq
xor
and
push
xor
sti
push
pop
adc
scas
pop
sub
mov
pop
push
cmp
jle
jae
dec
adc
push
xchg
lret
fisubl
jne
pop
cld
dec
jmp
lea
inc
insb
xor
mov
aas
insl
xchg
cmpsb
outsl
jb
xlat
pop
jecxz
lock
jnp
into
add
mov
mov
movsb
cmc
outsb
sarl
add
pop
lods
jnp
movl
or
inc
adc
push
push
stos
adc
aad
mov
and
out
mov
pop
sub
lret
imul
push
mov
push
lock
repnz
lcall
mov
aas
cmp
shll
push
out
push
fidivrs
dec
adcb
cmpsb
add
pop
loop
outsb
movsl
or
daa
pop
push
adc
sub
push
test
mulb
push
xor
or
imulb
rolb
jns
mov
testb
or
ljmp
sti
hlt
xor
not
rol
cmp
jnp
jecxz
cmc
xor
sahf
xchg
cmp
xchg
push
iret
stos
stos
test
in
idivl
loope
loope
call
xor
iret
test
lahf
loope
sarl
push
push
imul
ficompl
in
fists
dec
dec
xor
xor
mov
push
int3
xor
cs
sbb
stos
es
jb
dec
xor
push
test
movsb
adc
divl
or
mov
cmp
mov
in
daa
mov
xlat
mov
dec
daa
fistpl
sar
push
test
lcall
sti
xchg
imul
and
movsl
mov
sbb
push
and
scas
in
in
inc
movsb
out
mov
scas
or
pop
ss
imul
push
lods
adc
cld
adc
sbb
lret
movntq
out
xor
dec
add
xchg
jecxz
cmpsb
mov
fs
inc
lea
jnp
push
jne
rcrl
mov
pop
test
cld
lods
and
into
cmc
mov
mov
or
sbb
ds
cmp
clc
enter
outsb
sbb
pop
mov
stos
int3
push
mov
and
jge
les
or
mov
or
mov
xor
pop
mov
jae
stos
je
and
int3
lds
and
neg
mov
jg
aas
lea
rcrb
push
fsubs
pop
aam
jo
hlt
mov
addl
out
stc
mov
scas
cld
mov
cmc
addl
out
adc
cmc
mov
jmp
sub
dec
cmpsl
repnz
cmp
ljmp
xor
ret
movsl
stos
push
out
popf
xchg
adc
mov
push
insl
inc
call
mov
push
das
popf
pop
adcl
pop
andl
sub
inc
pushf
adc
mov
stc
push
jns
pop
inc
jle
inc
dec
sbb
popf
imul
ljmp
add
movhps
add
imul
and
mov
pop
aam
cmpsl
sbb
and
push
mov
dec
fsubp
push
cltd
js
jmp
xor
js
fldl
dec
out
sub
scas
pop
inc
mov
pop
push
sub
pop
xchg
cmp
cmp
push
cld
jnp
mov
dec
daa
fcmove
in
or
insl
jns
mov
cltd
ret
scas
nop
push
cmpb
push
jbe
popf
cli
jne
xchg
dec
int3
pusha
jge
lock
xor
and
push
mov
pop
push
and
shlb
dec
mov
ja
inc
cwtl
out
testl
dec
jp
xor
testb
iret
in
fsub
fisubs
push
loop
sbbb
insb
xchg
dec
mov
mov
in
push
leave
jb
jge
outsb
or
popf
pop
lret
fdivrl
lret
out
and
mov
addr16
mov
pop
mov
mov
or
shrd
insb
push
pop
int
ftst
stos
push
mov
push
sub
das
mov
mov
pop
fsub
cmp
out
xor
jnp
cltd
and
ret
push
es
or
and
adcb
sbb
mov
push
iret
sbb
jl
mov
pushf
das
icebp
arpl
jmp
ficompl
pop
dec
push
jo
pop
inc
push
aaa
mov
pushf
cli
cmp
pop
xchg
jb
ret
adc
push
or
xchg
inc
xchg
dec
mov
push
mov
fidivrl
hlt
adc
push
arpl
jne
mov
repnz
sub
scas
and
mov
stos
dec
mov
mov
push
adc
not
jns
sub
cmpsb
mov
or
arpl
into
mov
sbbl
ficomps
movsb
loope
test
lock
add
pop
sub
dec
cmpsb
arpl
leave
jle
lods
jo
aam
sub
popa
mov
lock
in
sahf
sbb
icebp
xchg
scas
scas
pop
mov
out
dec
aam
popf
es
mov
outsb
cmp
adc
stc
sahf
push
fwait
enter
mov
stos
mov
and
cmp
or
mov
pop
dec
mov
out
inc
jno
mov
out
mov
test
andl
sbb
push
aas
cmp
fpatan
mov
and
add
fcoml
adc
xchg
mov
test
es
pop
jle
pop
xchg
cmpsb
dec
ret
add
icebp
clc
lcall
and
repnz
enter
mov
orl
pop
or
fcmovnu
xchg
popf
stos
sahf
icebp
push
mov
push
enter
xor
data16
es
adc
les
in
pop
daa
or
mov
pop
mov
stos
adcb
or
push
push
mov
xchg
and
push
xchg
cmc
pop
xor
push
inc
mov
int3
in
dec
mov
mov
rcrl
push
imul
mov
push
insb
mov
mov
sti
cs
sbb
or
mov
xor
repnz
mov
adc
int
cmpsl
fbstp
xor
fdivrl
adc
xlat
les
pop
jo
aaa
mov
mov
cwtl
jge
mov
fisubrl
mov
sbb
shll
pop
sbb
in
pop
int
ljmp
xor
pop
adcb
mov
adc
jl
daa
pop
lret
mov
push
inc
aad
dec
das
sub
jae
test
mov
addr16
out
dec
inc
adc
hlt
insl
repnz
add
sbb
insl
pop
lods
mov
in
cmp
inc
fcoml
adc
js
xor
mov
ljmp
lahf
jl
das
pop
adc
cmc
sbb
jae
jmp
fcoms
int3
mov
xor
enter
inc
ficoml
inc
or
add
mov
movsb
aaa
inc
and
out
pop
xchg
mov
fstl
std
add
icebp
out
sbb
cmp
sbb
pop
loopne
and
xchg
out
add
sub
insb
cld
pop
push
pop
push
rorb
mov
xchg
mov
mov
cmp
dec
mov
sbb
fidivs
in
pushf
out
jecxz
cli
rolb
sbb
xor
insb
fsubrs
adc
xor
addr16
es
mov
jp
dec
jg
in
gs
add
cs
add
fcmovb
sbb
mov
mov
push
popf
xchg
dec
out
dec
xor
or
int3
out
adc
adc
imul
mov
mov
stos
mov
cmp
push
xlat
pop
jae
ret
lret
jg
shl
pusha
mov
mov
lahf
add
sbb
pop
adc
sub
ret
add
or
rolb
mov
pop
xor
jae
in
subl
popa
loopne
repnz
fsubrl
cli
mov
and
imul
cli
into
jns
pause
outsb
mov
jg
xor
negb
and
pop
les
mov
inc
and
push
cmp
insl
daa
lds
push
jns
sbb
stos
jb
adc
dec
movsb
mov
lret
dec
nop
fsubl
push
jmp
repz
and
xor
insb
outsl
mov
and
lods
sub
mov
push
xchg
jnp
mov
fstpt
scas
inc
addr16
lcall
loop
in
inc
insb
clc
mov
repnz
ret
mov
loope
stos
add
cmpsb
inc
pop
mov
pop
aaa
dec
je
dec
adc
push
push
icebp
jae
rorl
daa
or
dec
or
enter
clc
push
push
test
mov
ja
ret
nop
cs
clc
enter
aas
mov
pop
test
cmp
dec
adcb
sbb
and
adc
jnp
in
add
cli
and
xor
and
xchg
clc
sub
sub
and
mov
decl
adc
maskmovq
negl
and
lahf
int3
mov
sbb
jecxz
out
mov
mov
sarl
nop
test
lret
stos
into
insb
pop
jg
push
loop
inc
stos
icebp
inc
add
xorb
aaa
pushf
pop
or
or
jne
sub
pop
inc
out
stos
cmp
push
jle
into
outsb
xlat
adc
stos
stos
dec
out
mov
fcompl
aas
test
subb
jo
cmp
ret
stos
mov
dec
mov
sbb
movsl
mov
push
dec
ficoml
jge
mov
push
sbb
test
cmp
ret
stos
cmp
push
lods
push
sarb
add
sub
imul
repnz
cld
popl
cmp
repz
lea
adc
mov
in
mov
loop
lea
dec
sub
xchg
call
xchg
outsl
lcall
outsb
dec
dec
and
gs
mov
mov
jge
push
rorb
push
fcomps
insl
fnstsw
in
cli
jns
repz
es
dec
push
lods
dec
sub
pop
into
pushf
jmp
xchg
inc
shr
dec
cmp
cmp
lock
and
or
call
subb
repz
lcall
xor
fldl2t
dec
sbb
push
push
push
ds
outsb
adc
out
imul
sbb
xchg
add
int3
mov
fs
xor
ja
cs
cltd
lahf
cli
in
mov
mulb
and
mov
je
or
push
jns
ss
mov
movsb
data16
pop
out
sub
pop
fwait
aam
sbb
std
int3
cmp
scas
in
adc
lret
xor
std
shlb
push
adc
mov
mov
icebp
lods
mov
xchg
mov
push
mov
add
jl
sub
loope
xor
mull
pushl
mov
xlat
lret
sbb
pop
ja
pop
orl
push
mov
or
leave
sbb
mov
sbb
mov
ret
cmp
sarb
or
mov
or
fwait
rcrl
xor
xchg
mov
fwait
nop
lret
sub
test
flds
xchg
inc
adc
mov
mov
sbbl
add
stos
inc
sbb
lds
mov
enter
xchg
stc
call
xchg
adc
adc
int3
icebp
jno
sub
jle
mov
aaa
xchg
insl
lock
inc
or
and
enter
dec
stos
fs
xchg
ss
adc
sbbb
fistpl
pop
adc
nop
movl
xchg
and
or
xor
setl
sub
mov
orl
push
leave
dec
fsubrl
mov
ret
bound
mov
cmpsb
ljmp
in
inc
and
xor
and
sub
shrb
call
fstps
ret
xchg
das
in
movsl
stos
cmp
jl
push
jecxz
sub
int3
inc
mov
mov
fwait
mov
repz
jl
ret
cmp
pop
addr16
imul
pushf
and
push
lret
push
xchg
mov
cs
mov
mov
or
repnz
testl
fld
sti
sub
sub
xor
xchg
pop
mov
lret
je
repz
pop
adc
stos
xor
xlat
mov
and
add
mov
mov
or
sub
push
je
mov
lret
mov
aam
cmp
movsb
scas
jecxz
ret
mov
in
mov
sub
repz
test
int3
fwait
sbb
xlat
lds
cmp
imul
mov
cld
sbb
inc
into
pop
aaa
sahf
ljmp
imul
adc
xchg
jno
movsb
cwtl
mov
adc
in
xor
jnp
fldenv
ja
inc
lods
outsl
lea
cmp
mov
sub
enter
add
rolb
cwtl
fisttps
popf
xor
stc
cli
push
test
xchg
or
xor
pop
jbe
adc
xchg
mov
mov
sbb
lret
lock
out
mov
repz
stos
icebp
pop
rcl
add
inc
mov
push
test
mov
into
and
add
cltd
xchg
fisubrl
push
aas
adc
rorl
leave
or
clc
cmp
mov
sbb
push
lret
imul
repnz
push
pushf
fstpt
out
push
add
pop
imul
xchg
push
dec
push
pop
mov
sahf
or
aam
xor
cmp
pushf
into
cmp
and
or
mov
and
test
sub
loope
incb
push
pop
dec
pop
cli
iret
insl
add
add
add
mov
push
mov
pop
pop
outsb
cmc
outsl
ljmp
xor
scas
or
cmp
mov
xchg
in
pop
shrl
inc
pop
inc
testb
and
sub
mov
dec
adc
scas
cmp
ret
inc
push
push
hlt
jge
lds
jg
jecxz
jle
mov
faddl
inc
das
and
fiaddl
adc
call
pop
shrl
stos
xchg
xchg
inc
jecxz
stc
scas
inc
mov
add
out
xor
movsb
mov
push
hlt
add
and
xor
out
int3
xor
mov
mov
dec
cwtl
cmpsb
xor
ret
xchg
and
movsl
pop
add
xor
cmp
pop
xor
cli
inc
fnstenv
jmp
and
ja
pop
nop
ljmp
shrl
mov
sbbb
cmp
shl
pop
pop
lods
test
leave
mov
and
jl
push
pop
int3
popa
stos
pop
and
dec
int3
dec
ret
mov
in
or
lds
or
sbbb
pop
shlb
scas
dec
mov
and
icebp
push
sub
andl
pop
bound
faddp
ret
push
sbb
faddl
adc
pop
inc
push
popf
jmp
test
leave
les
cmp
mov
inc
nop
arpl
fcmovnbe
sti
clc
sub
xor
sub
imul
add
sbb
es
bound
decl
je
ja
sbb
icebp
sub
int3
clc
inc
mov
add
sub
shlb
mov
sbb
cwtl
xor
invd
subl
mov
lds
add
mov
repnz
pop
pop
push
loop
daa
cmp
popf
mov
mov
jo
xor
outsb
out
pop
in
mov
cs
test
leave
in
test
fldcw
sub
inc
xor
aam
dec
loop
test
cmc
jmp
sub
pop
ret
ja
mov
add
ficoml
xchg
test
xor
inc
mov
inc
lret
dec
mov
push
xchg
jae
fstl
mov
push
cli
cs
imul
int3
and
into
loopne
cmp
jl
xchg
cli
pop
push
test
cmpsb
bound
mov
fnsave
and
aam
mov
pop
and
cmp
aad
loopne
ja
pop
sbb
push
bound
cwtl
push
mov
push
jns
sbb
inc
loope
mov
jbe
push
lea
out
push
sub
cmp
fs
insb
xchg
mov
hlt
shrb
mov
pop
insl
inc
jge
popf
mov
xchg
lret
add
adc
xor
lret
mov
lods
call
pop
sarb
jae
and
cmp
xchg
jmp
inc
sbb
in
subb
sbb
cmp
clc
push
jnp
and
dec
push
cwtl
push
xor
pop
fcompl
push
loopne
add
and
divb
test
out
push
jnp
lret
pop
or
pop
pop
test
xlat
jmp
jno
les
pop
mov
jmp
mov
fldl
sbb
adc
testl
es
xor
out
push
jp
in
fsubl
add
aam
les
imul
xchg
ds
sahf
ficoms
insb
pusha
repnz
icebp
fdivrl
adc
insl
inc
mull
jg
adc
and
mov
shl
pop
lock
stos
sbbl
lock
push
sub
or
orb
nop
aaa
pop
inc
subb
add
insl
pop
scas
aam
jecxz
cmp
loop
pop
dec
pushf
loop
mov
inc
ret
dec
pop
mov
test
push
enter
mov
mov
rcrb
xchg
aas
mov
dec
out
push
xchg
scas
dec
in
dec
in
into
fdivrl
ret
fucom
push
pop
push
dec
sbbb
mov
test
js
dec
mov
jmp
inc
dec
fsubr
xchg
fcoms
mov
jb
jle
insb
sbb
pop
jmp
mov
stc
jmp
sub
lcall
mov
push
repz
adcl
sbb
xchg
lods
jae
mov
sbb
out
xor
loop
mov
cs
leave
sbb
mov
lock
jp
mov
and
fdivl
push
inc
or
push
mov
adc
sbb
mov
mov
addr16
xchg
shlb
aam
fistpl
adc
mov
test
or
outsb
mov
addr16
pop
push
out
aaa
pop
sub
ss
testl
stc
outsb
fdiv
fildll
inc
push
jp
inc
enter
lods
popl
jb
push
push
mov
cmc
pushf
jbe
lds
sti
pop
in
push
sbb
int3
pop
jns
inc
stos
mov
mov
sbb
lds
jae
adc
pop
sub
adc
sbb
mov
inc
push
push
data16
pop
adc
jne
or
sbb
aad
mov
pushf
out
jge
jnp
cwtl
xor
or
push
push
ss
in
mov
cmpsl
mov
adc
scas
sub
mov
test
jle
xor
add
lods
scas
in
loope
lea
xor
xchg
xchg
cmpb
data16
xchg
sbb
mov
xor
shrb
sub
sbb
mov
and
clc
jg
les
adc
imul
scas
mov
mov
xlat
mov
sbbl
add
insl
sbb
repz
addb
pusha
loopne
xor
std
xlat
adcl
jl
stos
cs
add
sbb
and
xor
sub
and
jae
sbb
pop
jmp
xor
xchg
mov
ret
shll
in
mov
scas
cmp
incl
mov
jmp
es
xchg
xor
out
mov
insb
lahf
rclb
rcr
cld
push
ja
nop
lret
cltd
jp
or
es
js
xor
pop
neg
fwait
xor
cwtl
sub
inc
push
xlat
pop
mov
mov
call
xor
pop
test
aaa
mov
shr
adc
xchg
fcompl
and
mov
xchg
pop
and
fimull
add
xchg
mov
adcl
xlat
fisttps
cli
mov
xchg
movsb
loop
aam
push
jecxz
mov
bound
lds
jl
pop
inc
aaa
dec
test
sub
sub
xchg
dec
out
pop
mov
nop
add
push
sub
sbb
loope
leave
lcall
icebp
test
pop
mov
sub
sub
daa
dec
or
sbb
leave
pushf
push
aam
inc
jp
sub
popfw
jnp
lods
jae
scas
mov
add
push
push
cltd
cs
pop
call
scas
or
sbb
xchg
scas
imul
adc
arpl
pop
push
dec
ss
loope
fistps
mov
fiaddl
pop
loope
je
adc
adc
xchg
popa
inc
cmpsb
mov
es
aad
test
xor
sbb
clc
pusha
mov
andl
xor
or
add
gs
pop
mov
jle
push
push
inc
cmp
insb
fildll
mov
in
addl
add
adc
sbb
pop
mov
out
push
popf
cmpsl
dec
mov
mov
or
ljmp
mov
mov
pop
fmull
in
xlat
push
push
push
push
scas
xchg
stc
mov
jbe
lcall
mov
and
mov
push
sub
int
push
mov
fisttpl
iret
or
xlat
cld
dec
shl
stos
fisttpl
or
jmp
pop
xor
call
sahf
movzwl
sti
notb
jl
dec
iret
xchg
jmp
xor
leave
repnz
scas
xor
addl
jae
lcall
cmp
xor
iret
push
idiv
decl
fdivl
out
sub
sub
xor
sub
push
cmp
add
sbb
mov
test
mov
push
pop
mov
pop
outsb
inc
imul
out
fwait
daa
xchg
mov
out
outsl
idiv
daa
cmp
sub
out
rclb
xchg
mov
add
cmpsb
test
and
inc
jg
ja
pop
orl
mov
add
pushf
insl
fs
cmp
orl
loop
xor
or
lock
adc
push
or
mov
inc
adc
dec
ds
push
jns
push
rclb
popa
daa
in
cmp
sti
adcl
pop
fnstenv
out
jno
jb
popf
es
das
repz
jge
jmp
and
jnp
icebp
sub
imul
rcl
inc
adc
movsl
daa
inc
adc
mov
leave
repnz
jp
xchg
or
jne
cmp
jle
mov
push
push
xor
in
add
and
fwait
push
mov
push
adcl
and
cli
int3
lock
xchg
aaa
lcall
sbb
mov
cmp
push
or
into
test
jno
mov
mov
loopne
ret
movsl
mov
lea
sbb
add
movsb
in
ret
lea
ficomps
or
pop
cmp
xor
out
vphadduwd
mov
imul
leave
mov
push
mov
mov
mov
mov
orl
inc
repnz
stos
clc
fnstcw
pusha
cmp
js
jb
popf
outsl
jnp
ss
repnz
repz
inc
adc
sub
jo
dec
aam
inc
in
adc
mov
in
lret
test
xchg
cmp
lock
icebp
clc
xor
imulb
and
leave
push
dec
call
or
adc
ret
inc
adc
adc
pushl
or
fmull
jle
enter
pop
mov
cmp
push
pop
mov
push
popa
enter
adcl
fcmove
inc
imul
push
setbe
pop
adc
add
lds
stc
cwtl
js
popa
fildll
stos
je
and
popf
lea
cmp
xchg
sbb
sahf
and
stc
xlat
dec
cmp
push
int
mov
jo
iret
or
roll
loopne
push
mov
mov
adc
pop
add
or
jno
adc
je
cmp
jge
aad
clc
loope
leave
xchg
scas
pop
fwait
mov
sub
sarl
or
fsubs
sti
add
jbe
movsl
adc
jge
mov
lock
xchg
mov
sub
mov
outsb
inc
mov
mov
dec
mov
jno
or
and
cmc
jne
fwait
cmp
jns
fsubrl
inc
push
inc
xor
pusha
pop
gs
stos
adc
sub
xchg
xchg
mov
lahf
fwait
push
mov
ret
fildl
lods
ret
and
jp
inc
stc
jns
mov
push
roll
lock
and
cmp
lods
lahf
sahf
aas
mov
pop
mov
lret
jp
ss
into
cmp
out
shl
cmp
push
notl
ds
cmpsl
cmp
sbb
cmpsl
or
mov
or
sub
fwait
push
pop
jle
jp
sbbl
lret
rcr
or
subb
pop
xor
mov
cmp
xchg
cmp
mov
cmpsb
jnp
aaa
outsb
xor
test
adc
aas
cwtl
fcmovnbe
lcall
dec
imul
cmp
mov
push
dec
adc
sbb
mov
dec
xchg
mov
shlb
lock
fcoml
ret
cld
fstl
pop
aad
clc
sub
scas
push
aaa
in
adc
jl
cmpsl
mov
sub
in
add
and
stos
imul
push
pop
insl
sub
push
loope
test
subb
mov
push
add
jae
in
sbb
clc
scas
insl
jne
shl
mov
add
dec
aad
movsl
pop
xchg
cmp
push
fcmovnu
inc
inc
inc
sub
jne
jbe
adc
pop
push
dec
pop
ret
adc
mov
enter
sti
daa
sahf
cmpsb
push
out
inc
popf
sub
rorb
test
aam
ret
popa
or
fldcw
mov
dec
jl
mov
cmp
jb
pop
cmc
mov
pop
sbb
jl
sar
dec
or
mov
int
jg
pop
loopne
push
lahf
lret
cmp
push
fisubrs
mov
cld
xchg
mov
jno
mov
test
outsb
das
inc
sub
int
or
xor
sub
ja
xor
repnz
pop
sbb
pop
push
mov
shr
dec
ss
and
jno
sub
dec
lahf
mov
stos
mov
outsb
cmp
add
iret
nop
xchg
lret
aam
sbb
mov
bound
pop
psraw
dec
dec
fiaddl
push
testb
jle
and
sbbb
lods
cmp
sub
dec
and
das
jl
mov
sub
sub
ret
mov
aad
jge
xchg
cmp
jecxz
icebp
int
xlat
lcall
mov
dec
mov
mov
je
aas
addr16
dec
int3
and
push
es
lret
add
jo
mov
jecxz
cs
jbe
mov
lea
fisubs
popa
mov
fsubl
mov
xor
xchg
std
hlt
loopne
aad
ret
pushf
sbb
call
jae
pop
sbb
xor
xlat
cmp
mov
pop
sub
ret
pop
mov
out
pop
hlt
cltd
jnp
fsubs
repnz
insl
pop
and
pop
mov
bound
aaa
jnp
sbb
dec
sub
jno
inc
stc
cltd
loopne
mov
inc
xchg
jns
inc
js
push
cmpsl
rcrb
mov
xor
jmp
popf
inc
hlt
cmp
pop
aad
dec
or
mov
test
push
sub
int
add
xor
sub
xchg
pop
inc
xor
aam
xchg
test
and
test
push
movsl
pop
push
mov
xchg
adc
daa
cmp
ja
fistpll
pop
mov
jo
insl
idiv
push
mov
ss
dec
adcl
je
jecxz
add
push
jge
in
push
call
push
push
cmp
jnp
or
insl
xchg
dec
dec
pop
sbb
int3
lret
pop
imul
jns,pt
cmpb
push
pop
inc
sub
adcb
or
dec
in
bound
fbld
inc
sahf
sbbl
sahf
pushf
jno
mov
mov
inc
mov
lock
sbb
mov
cmc
push
sub
jns
das
jg
jecxz
cmp
pop
xor
es
leave
lret
xchg
or
add
jbe
mov
inc
scas
jecxz
repnz
lods
lret
cmp
fcomps
pop
pusha
sub
fldl
xchg
jle
fstpt
aaa
mov
cmpsb
push
sbb
lea
sbb
ljmp
scas
ret
cwtl
lds
push
pop
sub
sub
repnz
jae
sub
subl
out
jno
scas
cmp
sbb
dec
and
xor
pop
aad
sbb
sub
sbb
pusha
imul
mov
in
test
pop
and
dec
out
sbb
lock
popf
inc
in
push
lods
out
lods
or
fidivrs
in
data16
scas
fstpt
jns
jmp
ljmp
nop
aad
movsl
mov
sbb
lret
std
adc
je
mov
push
jg
ret
das
incb
lods
movsb
xlat
jnp
mov
inc
in
into
lret
xor
pop
mov
xchg
roll
push
and
loope
sbb
adc
lods
pop
pop
add
jae
ds
mov
insl
xor
cwtl
scas
and
xor
clc
mov
mov
stc
adc
push
mov
sub
pop
rclb
hlt
sbb
and
mov
cld
dec
xor
les
xchg
push
in
push
sub
je
std
xor
jo
mov
inc
test
ljmp
cmp
hlt
fs
outsl
addb
or
jae
push
push
and
mov
mov
andl
fsubs
jbe
xchg
addb
sbb
insl
cwtl
inc
inc
sahf
lret
jecxz
inc
sbbl
dec
insb
xor
sub
xchg
clc
cmpb
lock
jmp
bound
enter
add
stc
jne
jne
mov
icebp
call
xchg
insl
aas
adc
cmc
iret
imul
jge
insb
mov
insb
inc
adc
lret
mov
and
xchg
int
lock
cltd
addr16
es
or
out
call
sti
sub
or
bound
repnz
push
outsl
loopne
popf
xchg
cmp
mov
push
sub
jae
mov
test
xchg
fnstenv
push
push
into
mov
into
cmpsl
dec
aas
xor
mov
mov
mov
sub
inc
sbb
jno
sub
movsb
movsl
mov
cmp
ret
dec
mov
inc
pop
add
sbb
xchg
test
pusha
scas
ret
mov
mov
cmpsb
or
fcompp
addr16
jge
jne
sahf
sahf
outsl
test
mov
sub
adcb
pop
idiv
and
roll
movaps
xchg
out
cld
add
mov
mov
or
push
dec
nop
sbb
add
rcrl
adc
mov
lret
aad
test
push
test
jns
test
popa
add
outsl
dec
jns
mov
rolb
mov
push
in
add
pop
aaa
testb
divb
mov
repz
mov
inc
pusha
scas
ljmp
sbb
xor
mov
xlat
sbb
pop
aam
in
lahf
mov
pop
xor
xchg
lret
rcrl
movsl
loope
stos
jne
mov
push
add
xor
sbb
xlat
movsl
pop
mov
in
pop
push
and
lods
std
jbe
clc
xchg
int
insl
sub
xchg
add
orb
into
ja
popf
jg
jle
mov
jp
jae
ficoml
jl
add
and
fists
sbb
mov
lea
stos
push
ret
loopne
cmpsb
loope
imulb
outsb
out
sub
cmp
and
cmc
jecxz
pop
jne
cmp
jmp
adc
in
scas
cmp
ret
sub
mov
jne
int3
xorl
jne
test
fwait
adc
popa
adc
out
xor
lds
stos
outsl
add
mov
rcrl
mov
xchg
in
hlt
mov
sbb
xchg
repnz
aam
inc
xchg
mov
jg
mov
mov
mov
bt
dec
dec
mov
inc
popf
lods
enter
dec
push
out
push
adc
es
pop
shl
jae
fildll
test
adc
cmp
jo,pn
lahf
xchg
dec
imul
jge
mov
xlat
push
push
jbe
out
xchg
pop
out
in
push
lock
mov
mov
pop
mov
mov
jmp
xchg
xchg
in
jbe
psraw
mov
mov
sahf
push
push
sahf
mov
in
fbld
mov
inc
add
adc
addr16
testl
sub
push
push
add
dec
insl
pop
lds
cmp
jae
fnsave
sub
add
mov
sub
arpl
sub
mov
int3
mov
jg
dec
test
inc
ficoms
pop
test
cmc
xlat
jbe
add
mov
pop
mov
call
push
hlt
cmp
das
sahf
mov
push
xor
cli
jmp
xchg
nop
les
stc
and
or
jne
rolb
cmpsb
adc
push
push
iret
cld
lds
test
ss
pop
push
sbb
push
and
cli
aad
pop
push
push
jmp
aad
push
pop
in
sbb
rcr
add
xor
pusha
addr16
push
or
xchg
stc
mov
cmpsb
insl
cmpsl
dec
push
xor
add
nop
jl
fistl
int3
rorl
dec
or
sahf
pause
clc
lock
lds
in
mov
and
scas
xlat
sub
stos
mov
lods
jecxz
aam
or
hlt
stos
fisttpll
sbb
out
test
lcall
in
mov
push
das
in
lret
fnstsw
and
hlt
mov
or
sub
divb
mov
mov
aad
xchg
std
lock
inc
hlt
dec
lock
inc
sub
and
xlat
cmpsl
xor
sarb
jne
add
fistps
dec
fs
adc
push
push
jb
ficoml
ret
xchg
sbb
pop
inc
add
sub
std
mov
push
fisttpll
cmp
push
and
icebp
enter
out
jecxz
add
jne
pop
ljmp
cli
xchg
mov
and
jl
out
cld
mov
mov
ljmp
cmpxchg
decb
stc
xchg
sbb
scas
ret
repz
mov
add
cmp
adc
icebp
sbb
and
icebp
daa
add
mov
pushf
adc
ja
inc
xor
inc
mov
and
in
sbb
or
inc
dec
leave
cmp
mov
dec
ljmp
popa
dec
ja,pt
mov
jno
test
pop
sbb
xchg
aas
mov
shrb
pop
dec
dec
clc
in
pop
test
adc
xchg
adc
outsl
lea
and
adc
mov
arpl
mov
and
in
push
dec
psubw
mov
xchg
iret
cli
and
cltd
out
push
pop
imul
mov
es
dec
jno
sbb
iret
movsb
addr16
xchg
inc
gs
push
lret
rorl
mov
ss
lahf
out
adcb
push
imul
pop
dec
xchg
push
frstor
bound
fildll
dec
insl
cli
mov
dec
mov
adc
push
nop
test
je
pop
es
es
and
pop
addr16
inc
push
xchg
and
pop
mov
inc
adc
xchg
push
cmp
nop
insl
fldenv
lahf
fldl
rcrl
pop
xchg
fwait
sub
fs
jmp
add
xor
push
arpl
fs
seta
or
ds
sbb
mov
icebp
xchg
lcall
xchg
or
dec
add
push
iret
dec
jno
in
pop
shrl
pop
dec
gs
outsb
fstp
cltd
lea
hlt
jno
mov
push
fsubs
lods
jno
loop
subl
fildll
fisttpl
enter
cmpsl
pop
loope
mov
push
add
cmc
lock
dec
cmpsb
xchg
mov
ja
xor
lods
subl
loopne
add
das
repz
rcll
int
jp
dec
mov
lret
js
add
mov
jo
xchg
sub
addr16
push
pop
and
aaa
push
dec
test
vmovhps
mov
xor
stos
mov
rsqrtps
out
mov
adc
xor
add
mov
mov
rorb
add
cld
mov
aas
mov
xor
loop
cmp
in
sub
pop
outsl
ds
mov
mov
inc
sub
stos
fistl
clc
add
sarl
sub
jo
adc
test
pop
xor
and
mov
xchg
push
mov
out
dec
jecxz
add
mov
out
and
enter
mov
jae
gs
dec
sahf
repnz
or
pop
mov
outsb
addr16
mov
cmp
xor
jl
stos
sbb
push
orl
lock
pop
lcall
push
xchg
pop
cmp
pop
ficomps
mov
sub
xor
addb
mov
push
push
decb
clc
movsl
xchg
jno
pop
jo
js
pop
sub
xor
mov
dec
mov
leave
xchg
inc
hlt
mov
cmpsl
push
push
imul
pop
cld
clc
shrl
mov
movsl
jg
out
xchg
repz
mov
mov
pop
divl
pop
enter
insb
loope
pop
cmp
fists
fs
mov
cvtps2pd
sbb
sahf
aas
sub
cmp
call
xor
mulps
clc
xchg
clc
sbb
push
jg
dec
jg
pop
cmp
jns
test
xor
or
or
adcl
dec
pop
pushf
cld
adc
lock
xchg
adc
sub
cmpsb
clc
out
ret
clc
ds
nop
stos
xchg
fnstsw
adc
cltd
test
fdivl
pop
andl
jae
lret
rclb
ud2
sub
pop
push
or
pop
and
jmp
stc
push
inc
push
pop
lcall
cmc
test
xlat
pop
xor
mov
clc
fisttpll
roll
inc
xchg
inc
loop
testl
inc
push
push
mov
and
cmpsb
add
movb
xor
sub
fmuls
sahf
jmp
cs
jg
sbb
sbb
cwtl
pop
mov
mov
js
fidivrs
pop
pop
clc
xor
mov
mov
jmp
mov
int3
mov
sub
in
push
or
pop
mov
cmp
inc
dec
push
sti
mov
cmp
pop
cltd
fmull
imul
cli
mov
daa
pop
dec
xchg
jae
mov
scas
outsb
inc
pop
adc
icebp
loope
scas
lds
aas
insb
sub
pop
shrl
jg
negl
mov
stos
aaa
xchg
xlat
or
aam
testl
jne
cld
cmc
xor
cmpsb
repz
jp
int3
pop
pusha
push
mov
out
stc
ds
arpl
pushf
and
aad
xlat
loopne
push
icebp
or
inc
push
jl
mov
ja
test
stos
fimuls
sub
dec
mov
inc
loop
jle
popf
jg
push
lods
xchg
dec
xchg
call
pop
ss
push
shrl
xchg
xchg
sbb
popf
movsb
fwait
pop
cmp
adc
lods
lock
gs
add
insb
movsl
jns
add
imulb
push
mov
or
lea
inc
add
shll
int3
inc
or
mov
mov
pop
pop
push
push
pop
mov
mov
fwait
sub
adc
in
insb
xchg
adc
imul
pop
jne
maxps
jg
iret
xor
outsb
loopne
fiadds
add
push
ja
cmpsb
ret
enter
sub
adc
dec
push
jae
test
mov
jo
out
jns
or
xor
sub
enter
sbb
sbbb
add
shll
jg
add
xchg
ljmp
sub
hlt
scas
outsb
add
fisubrs
pop
es
lods
lahf
cwtl
cld
mov
mov
lock
iret
xchg
mov
out
decb
or
sti
sub
shll
mov
cs
rorb
mov
ss
dec
pop
and
ret
aad
inc
cmp
inc
push
mov
arpl
pop
push
pop
add
fisttps
call
rorb
and
mov
lods
and
sub
add
cs
jecxz
sub
test
mov
jge
ret
outsb
or
cmp
addr16
addr16
int3
jb
pop
iret
inc
pop
out
aam
sub
addr16
clc
cs
xor
int
inc
imul
push
pop
in
mov
push
jae
jne
fbstp
push
out
xor
and
mov
xor
mov
sarl
cwtl
loop
xchg
mov
std
add
stos
cs
fistps
cmpb
dec
mov
jp
in
add
shlb
ja
pushf
testb
arpl
xchg
cld
cli
mov
stc
lahf
push
adc
or
push
cs
dec
add
jle
mov
popa
add
pop
push
cmc
pop
jmp
testb
adc
cmp
mov
imul
pop
pop
jnp
dec
mov
mov
dec
insb
mov
inc
in
or
insl
jmp
stos
repnz
and
gs
adc
repz
mov
jb
gs
inc
arpl
inc
sub
mov
inc
push
nop
inc
mov
cs
pop
out
sbb
mov
xor
repz
cmpsb
fstl
and
mov
xor
pusha
xchg
in
pop
in
mov
mov
je
xchg
fdivs
enter
xchg
or
sarl
out
outsb
mov
repz
dec
jp
arpl
push
sar
roll
mov
pop
cwtl
std
inc
and
ja
xor
mov
jp
mov
shrb
mov
add
roll
icebp
les
test
nop
pop
xchg
icebp
push
inc
nop
mov
lret
jnp
cmpsl
stc
adc
or
cli
mov
mov
or
or
cwtl
lahf
call
js
pushf
cmp
loop
ljmp
nop
pop
push
fistpll
ss
lock
inc
cs
ja
int
pop
ss
scas
add
xor
sub
sub
inc
xor
addb
movsl
sbb
pop
imul
leave
call
lea
adc
loope
and
inc
add
das
pop
sub
mov
sub
out
mov
dec
or
int
insb
pop
mov
out
dec
pop
mov
sub
dec
cld
imul
sub
js
andb
ss
bound
jns
mov
push
daa
push
rcrb
sub
dec
push
jne
mov
test
pop
push
movsl
imul
adc
xor
mov
testl
xchg
and
aad
insl
mov
cmp
scas
push
andb
dec
insb
icebp
test
call
or
jmp
es
add
and
adc
mov
xlat
jmp
call
jge
xchg
scas
mov
cmp
fiaddl
pushf
adc
jnp
mov
pop
loope
xchg
pop
test
push
pop
pushf
insb
int3
addb
lock
lahf
sbb
bound
jg
mov
add
pop
mov
xor
dec
mov
cwtl
out
neg
dec
inc
sbb
push
pusha
mov
icebp
stos
cltd
daa
cmp
or
fwait
clc
fs
and
je
stos
pop
lcall
mov
dec
xlat
xlat
inc
bound
in
insl
ljmp
jbe
or
cs
and
add
shrb
xchg
mov
xor
xchg
push
frstor
stos
in
ljmp
out
in
clc
aas
cmpsb
in
jmp
xor
aad
lea
push
testb
mov
cmp
xchg
pop
and
or
cli
inc
hlt
or
fists
leave
and
or
push
inc
je
pop
stos
daa
push
and
jo
orb
xor
cs
sbb
rorb
push
lds
mov
fadd
test
popf
xor
addr16
in
mov
push
sbb
add
or
fisubrl
cmp
push
cld
sub
push
stos
and
dec
sbb
pop
mov
mov
andl
aas
mov
fmull
pop
pusha
add
jp
inc
xchg
jae
cmpsb
sahf
jnp
sahf
divl
mov
rolb
je
xchg
rcll
pop
jbe
inc
mov
pushf
or
push
in
pop
pop
or
cmp
pop
daa
inc
clc
sub
fwait
cmp
mov
nop
and
iret
sbb
test
mov
cld
icebp
addr16
mov
idivb
jg
insb
loope
es
push
int3
test
sbb
call
leave
sub
and
or
test
js
xchg
xchg
pause
arpl
mov
mov
or
aaa
pop
dec
aas
lods
popf
add
sahf
inc
loop
xor
sbb
icebp
mov
push
das
push
ret
jb
or
xchg
push
push
pop
jge
in
gs
xchg
mov
call
jno
or
or
popf
cmp
test
jmp
ljmp
arpl
fbstp
push
popa
push
fdivrl
fists
fwait
loope
and
mov
pop
js
xor
rorl
push
mov
adc
test
cmp
sub
mov
fcmove
push
out
cwtl
pop
add
daa
pop
scas
sbb
inc
cs
das
int
lods
sarb
dec
add
addl
sbb
mulb
int3
call
sbb
cmp
jmp
cld
icebp
nop
fistps
inc
out
int
mov
gs
jo
iret
pop
ret
adc
sbb
inc
mov
leave
scas
add
mov
je
movsb
arpl
adc
popf
xor
push
insb
and
rcll
inc
push
lcall
out
lea
leave
ret
sub
sbb
mov
rcl
and
sub
xor
cld
lods
jbe
sbb
xchg
addl
cmpsb
rcrb
fdivr
sbb
sbb
aad
jno
push
add
and
jle
rol
movb
mov
out
mov
cmpsl
push
shll
inc
cmp
add
cs
adc
fldenv
cmp
and
sub
push
fnsave
dec
imul
ret
add
dec
xor
jp
pop
in
cmpsl
or
in
jecxz
pusha
aad
mov
imul
mov
jne
push
jb
lea
adcb
movsb
int3
test
out
inc
sbb
dec
mov
lret
xchg
dec
lret
int3
adc
es
test
les
mov
xor
xor
rolb
mov
dec
mov
test
jecxz
xchg
xor
push
push
and
xchg
js
mov
sub
fldt
adc
xchg
cld
out
fnstsw
or
lea
xor
out
jbe
in
das
mov
xor
nop
andl
data16
mov
in
pop
push
pop
xlat
ja
addr16
and
mov
pushf
arpl
test
push
jmp
and
adc
or
dec
testb
outsb
xor
shl
std
imul
jp
data16
mov
jne
push
dec
push
lcall
fmull
jg
outsb
mov
mull
daa
shrb
mov
lds
bound
or
cltd
arpl
xchg
jns
push
push
inc
lret
repnz
mov
or
jle
inc
ljmp
or
push
add
dec
or
nop
mov
mov
cmp
and
adc
cmpb
mul
lahf
addr16
jecxz
iret
stos
mov
mov
repnz
adc
sub
clc
hlt
pop
or
sbb
pop
mov
fmuls
lret
jg
sar
incl
repz
pusha
xchg
mov
cmp
mov
add
and
xlat
mov
dec
cmpsl
cmp
aaa
add
test
push
push
xchg
in
push
jb
leave
iretw
aaa
lods
mov
aam
aaa
stos
pop
push
andb
jno
sti
scas
lahf
lret
sub
add
adc
addb
mov
mov
hlt
pusha
push
cmp
dec
fcomps
jbe
imul
jbe
jbe
cmc
mov
es
sbb
int
daa
or
pop
or
pop
ret
std
ljmp
dec
adc
sub
adc
lret
movsl
test
adc
js
push
orb
es
xchg
icebp
test
in
aaa
insb
lret
jnp
nop
mov
sub
repnz
dec
push
mov
scas
in
dec
push
jl
out
mov
cmpsl
clc
and
rcr
fucompp
pusha
lock
dec
aas
mov
sbb
jl
sti
push
jbe
mov
cs
fwait
incl
xchg
or
test
bound
mov
push
in
or
pop
xor
insb
mov
ds
jae
leave
cld
or
pusha
cmp
pop
mov
pusha
adc
es
lret
scas
mov
mov
sbb
fucomi
adc
popa
lods
ja
push
inc
mov
lret
push
jne
mov
cmpsb
xor
xchg
inc
ret
ret
ret
sbb
les
data16
je
push
cwtl
int
es
xchg
neg
or
data16
gs
ret
sub
iret
xor
leave
rcrl
mov
mov
jns
imul
adc
sbb
cmp
std
inc
sahf
scas
lock
insb
and
xor
cmp
adc
mov
rcl
neg
inc
mov
mov
sbb
insb
push
int3
sbb
sub
pushf
sbb
pop
xchg
outsb
inc
xchg
sti
nop
xor
cmp
aad
xchg
pop
push
inc
cmp
pushf
sbb
mov
jb
mov
inc
cmovo
jecxz
fcomi
adc
scas
xchg
out
loopne
repz
push
sahf
addr16
sub
jmp
cwtl
inc
fnstsw
pop
dec
push
mov
dec
in
out
loopne
lret
add
jmp
ror
or
arpl
cwtl
jb,pn
mov
and
pop
cmp
scas
subb
das
orl
push
xor
imull
jecxz
dec
fistpl
in
push
fwait
int3
adc
fst
cmp
clc
adcb
mov
mov
xchg
jns
ficoms
push
or
imul
sbb
push
pmullw
add
sbb
jb
mov
fs
sbb
pop
call
mov
jle
cmpsb
fbstp
loop
inc
int3
or
iret
inc
out
movb
popl
loopne
imul
pop
ss
xchg
sbb
dec
cs
loope
daa
dec
jmp
mov
ss
dec
push
into
push
sbb
pop
or
pushw
lret
mov
mov
push
subl
out
lret
pop
cmp
cmp
dec
sub
aaa
mov
mov
rol
stos
push
sbb
iret
and
lret
or
jmp
stos
bound
dec
fbstp
mov
bound
pop
xchg
add
jl
ret
sbb
push
jnp
and
mov
mull
mov
sbb
lret
repnz
xor
incb
cmp
and
lret
aad
movsl
sub
fisttpll
daa
movsb
je
lea
int3
xchg
aam
bound
add
pop
jle
outsb
loopne
pop
xchg
xchg
mov
adc
lahf
inc
adc
push
in
repz
pop
dec
fldcw
stos
shrl
xor
ror
daa
and
add
xor
mov
cmp
cltd
es
lahf
stos
loopne
jns
jge
fdivrl
shr
imul
cmp
sahf
xchg
and
mov
lret
pop
outsl
push
fdiv
jne,pn
dec
das
ss
addr16
test
add
xlat
pop
push
mov
mov
and
xor
mov
push
lahf
xlat
inc
pop
jno
leave
shll
das
add
xlat
iret
and
sub
push
and
inc
jo
push
push
into
and
sub
daa
adc
inc
hlt
mov
mov
jge
aas
jns
pop
push
or
js
mov
popf
loop
mov
cmpsb
add
fwait
sbb
test
pop
and
jbe
popa
fists
fcoml
scas
fistpl
inc
out
mov
rol
sbb
adc
leave
add
add
popa
sbb
xor
in
dec
cmpb
mov
and
insl
jo
adc
push
int3
iret
jo
cmp
dec
mov
les
xchg
adc
fldcw
mov
mov
push
in
sub
addr16
jne
test
sbb
mov
enter
test
sub
or
sub
and
in
xor
sbb
out
cmp
sbb
out
push
in
test
and
fdivp
mov
fdivl
insl
push
dec
pop
inc
or
insl
dec
lods
cli
mov
das
lcall
movsl
cli
dec
inc
ss
shl
into
jne
arpl
stc
and
inc
rcll
jno
dec
xchg
pushf
fstpt
lds
sub
in
aam
push
inc
repz
fdivrs
push
push
das
jns
pushf
dec
xor
pop
and
cmpsb
jns
clc
cmpsl
sub
imul
lret
mov
test
out
add
mov
rorb
xlat
mov
lods
sub
arpl
jns
mov
inc
xchg
push
jo
add
sub
dec
mov
imul
insl
sbb
stos
fsubs
das
xchg
shll
cmc
push
rolb
inc
mov
hlt
shlb
xchg
aas
ret
movsl
xchg
fnstsw
adc
mov
jl
in
imul
ret
sbb
imul
lock
pop
dec
ds
xor
inc
mov
mov
ret
mov
shrb
lahf
popa
ss
cmp
jle
pop
sbb
push
iret
xchg
int3
sub
push
xchg
pop
in
cmp
inc
xchg
decl
imul
aad
cmc
test
or
jb
shl
test
push
mov
shrl
xchg
xchg
inc
in
mov
inc
mov
xcrypt-ofb
cmpsl
scas
lret
add
insl
add
xchg
popf
data16
sub
movsb
push
xchg
rcrl
push
cmp
inc
inc
adc
popf
shrl
inc
mov
adc
pop
mov
rcrl
and
xchg
mov
and
fdivl
pop
cwtl
cmpsl
jno
std
bound
cli
stos
mov
xlat
cli
mov
insb
es
sarl
xor
jb
outsb
jmp
inc
dec
in
loope
fmul
stos
hlt
sub
jge
inc
lods
push
loopne
shll
out
addl
mov
mov
mov
scas
scas
rorl
daa
int
push
xor
or
lock
inc
dec
push
add
fsubrs
xor
int
push
dec
in
sbb
movsl
jmp
jmp
repz
jp
xchg
inc
outsl
pop
xor
add
xchg
movsl
aad
cltd
jp
test
lret
pop
clc
mov
jecxz
shrl
push
mov
sahf
stos
dec
mov
sbb
cmp
jp
sub
add
mov
dec
bound
mov
add
mov
lods
mov
adc
outsl
push
pushf
cmpsb
and
leave
xchg
mov
dec
scas
repz
fcom
inc
jl
pop
mov
shr
roll
and
mov
icebp
out
mul
jb
sub
hlt
inc
and
cmp
push
shll
and
xchg
out
or
mov
outsl
push
aaa
das
sub
bnd
in
fsubs
cmp
gs
xor
cmc
testl
sti
or
cld
mov
or
lds
in
cmp
mov
cmp
loop
fldcw
mov
ret
movsl
shll
mov
xor
or
outsl
mov
fwait
test
out
pop
cmp
push
mov
int3
jb
pop
imul
jb
xchg
inc
pushf
or
add
cwtl
adc
adcl
enter
mov
jbe
pop
or
mov
in
lea
aas
movsb
dec
pop
push
xchg
bound
dec
invlpg
push
pop
lods
pop
jnp
jp
gs
mov
push
sub
jbe
cmpsl
fstpl
repnz
fistl
mov
daa
int
data16
pop
mov
mov
and
iret
adc
mov
push
adcb
lods
mov
mov
jo
adc
mov
into
cmp
sub
or
aam
scas
adc
cld
in
add
sub
ficomps
mov
cmp
fdivrs
sarb
mov
cltd
fdivs
ficoms
add
addr16
and
inc
fs
jecxz
jecxz
roll
jl
ljmp
cmp
jp
sti
test
scas
adc
add
outsl
adc
lock
jg
sub
test
dec
xchg
push
aas
push
fidivrl
imul
sti
repnz
dec
scas
rol
test
jb
out
inc
ja
cmp
lock
into
hlt
rol
cld
lret
leave
cli
das
jae
cmp
or
subb
mov
lock
cwtl
sbb
or
hlt
xor
add
insb
loop
and
andl
push
push
arpl
mov
lret
aas
jmp
xchg
sub
aam
xchg
mov
test
ja
inc
movsl
jns
or
and
stos
lods
hlt
xchg
lods
nop
push
jle
pop
push
lahf
push
push
dec
or
add
inc
and
outsb
pop
out
xchg
outsl
cmp
xor
mov
mov
inc
mov
mov
inc
ss
sub
rorl
xlat
cmp
sahf
sbb
add
aam
jne
mov
add
cmp
inc
mov
xchg
lds
mov
ds
sub
icebp
movsl
pop
fwait
insb
aad
xchg
out
dec
mov
in
pop
das
aam
or
adc
inc
push
mov
imul
xchg
bound
lea
popa
mov
add
cmp
sbbl
stos
and
sub
add
cwtl
xchg
mov
imul
dec
jg
mov
mov
xchg
or
sar
bound
ja
push
call
lret
mov
xchg
push
jo
adc
in
das
enter
in
and
mov
mov
cmp
shrl
pusha
leave
dec
cmp
movsb
mov
fisttps
and
pop
insb
mov
aaa
aaa
and
xchg
inc
mov
aam
popa
jle
lea
inc
lock
jle
ret
or
bound
adc
or
sbb
mov
sbb
mov
xchg
cmp
pushf
fiaddl
int
jnp
je
adc
add
push
xorl
sbb
dec
data16
cmp
mov
cmp
cmp
fcomi
cmc
loop
in
mov
jb
push
cmp
xchg
lods
nop
adc
pop
popl
cs
push
das
mov
or
lods
shl
push
mov
jg
hlt
fs
rcl
add
imul
pop
push
pop
cwtl
lahf
mov
jno
sti
fmull
movsb
loope
mov
sub
or
inc
push
lahf
jl
sub
lahf
sahf
xchg
cmp
bswap
push
aaa
ss
insl
jne
fistpll
repz
out
mov
das
call
or
cmp
loope
mov
divl
xor
jge
jp
in
fcoms
mov
mov
fidivrs
jecxz
jg
pop
aam
push
outsl
jbe
xchg
mov
jno
inc
mov
lock
rorl
mov
ss
leave
sub
inc
adc
sbb
or
push
pop
imul
jno
les
pop
xor
sub
loope
iret
mov
test
stos
or
pop
jb
pusha
mull
cmpsl
sahf
pusha
inc
jo
sbb
push
push
mov
mov
imulb
test
adc
cmp
out
sub
inc
pop
sbb
jmp
mov
push
mov
les
sbb
loopne
cmpsb
in
add
and
enter
cmp
iret
fcmove
out
mov
test
loop
mov
lds
adc
cli
je
cmp
pop
jle
jp
out
movsb
cld
dec
adc
push
cmp
ljmp
mov
dec
sbb
mov
xlat
dec
das
push
add
mov
mov
jl
sbbb
push
daa
orb
adc
pop
push
movsl
out
inc
xor
push
push
fwait
mov
jns
call
outsb
and
xor
add
scas
in
push
fildl
dec
mov
add
lcall
cmp
inc
sahf
scas
add
sahf
repz
or
ss
fld
pop
cmp
repnz
add
in
pop
lods
popf
ja
fsts
jge
repz
loope
addr16
hlt
jecxz
lahf
cmp
in
imul
mov
mov
dec
pop
push
add
ss
xchg
ds
push
into
imul
adc
jne
fisubrs
movsl
pushf
xchg
dec
xor
xchg
mov
fnstsw
clc
xchg
shll
xchg
lret
movsl
shrl
cmp
nop
pop
mov
jg
ret
mov
sbb
shlb
les
push
or
in
orb
mov
and
xor
test
movsb
cmp
in
imul
add
sub
insb
xorl
loop
xor
pop
insb
mov
into
mov
dec
fs
mov
jne
mov
jmp
push
call
test
xlat
and
sbb
and
cmp
xchg
mov
or
sbb
fstpt
mul
fwait
jno
lock
push
fcompl
push
mov
int3
cmpsb
pop
sbb
sbb
stos
xchg
jmp
jne
sub
stc
xchg
icebp
sub
cmp
push
jmp
sbb
int
or
xchg
ficoms
mov
push
movsl
xor
mov
sub
mov
cmp
jns
dec
aaa
or
or
out
nop
push
sbb
cwtl
int3
adc
lret
inc
sbb
ss
sbb
mov
pushf
push
les
pop
popf
out
scas
and
lret
stos
xchg
repnz
mov
sub
sbb
add
add
adc
cmp
movsb
dec
cltd
les
mov
daa
enter
mov
test
aas
inc
test
sub
sub
pop
push
xor
lock
push
shr
addr16
lods
lods
and
dec
sub
or
jge
popf
lods
cltd
ret
mov
inc
mov
lods
orl
adc
fwait
and
dec
arpl
xlat
push
add
shll
xchg
jns
pusha
pop
dec
push
test
xor
dec
int3
stc
and
ret
pop
sbb
cmp
or
fs
push
shll
subl
imul
shll
out
sarl
lock
add
fucom
xchg
jb
mov
jnp
int3
divb
xor
stc
xor
adc
jb
mov
mov
popa
sbb
cmpsl
mov
andl
dec
cwtl
adc
divb
jmp
mov
mov
adc
lds
mov
je
fildll
ljmp
pop
andl
push
mov
scas
xchg
mov
fsubl
dec
cld
int3
js
push
pop
push
je
mov
movsb
add
test
test
fcoml
jle
data16
subl
int3
jo
and
data16
dec
or
pusha
ds
sub
pop
jmp
sub
add
jbe
or
mov
xor
mov
movsb
add
enter
mov
out
jbe
add
sub
cwtl
dec
mov
pop
das
push
dec
nop
xchg
sub
lods
and
fs
aaa
cs
xlat
mov
xchg
adc
sub
scas
xchg
push
aas
push
aad
jmp
icebp
hlt
xchg
paddusw
lcall
jo
add
clc
in
pop
or
out
mov
pop
add
icebp
mov
push
hlt
scas
clc
mov
das
xchg
imul
cmp
sbb
pop
add
out
xor
add
lock
cmpsl
sub
lcall
imul
je
jne
jle
in
mov
test
xlat
jp
cmp
nop
push
push
mov
add
cmp
dec
popl
sbb
cmpsb
adc
cmp
cmp
in
cmpsb
sar
adc
push
jp
and
or
push
and
push
addr16
imulb
rcl
es
xchg
jg
js
cmp
fbld
push
add
int
psrld
inc
xor
xchg
push
int3
cmpsb
int
gs
dec
ret
rolb
sarb
cli
rclb
adc
inc
ljmp
mov
test
in
or
shlb
jbe
sub
and
xor
fisubs
stos
jmp
or
cld
inc
lret
subb
ret
stc
jb
fs
xchg
popf
or
sar
clc
mov
cmc
iret
jae
cmp
imul
in
incb
push
and
fisubrl
cmp
mov
cmpsb
push
mov
xor
sub
sub
and
jns
mov
test
mov
repnz
shl
dec
adc
ss
loope
fcomp
stos
ja
xchg
sub
mov
insl
jbe
add
push
sub
lods
pop
pusha
negb
lahf
repz
stos
stos
and
out
mov
jae
insl
test
movsl
bound
jl
mov
fwait
push
inc
inc
adc
dec
or
insl
mulb
mov
push
test
inc
lods
or
lahf
addr16
pushf
push
cmp
mov
add
add
jb
sub
mov
pop
push
jne
stos
mov
mov
shlb
dec
js
mov
lret
dec
aaa
mov
mov
sarb
push
in
lret
mov
cwtl
sbb
jecxz
sbb
jae
pop
test
mov
xchg
push
js
das
or
les
dec
sbb
daa
int3
jl
push
aaa
sbb
or
or
pop
mov
mov
mov
test
mov
leave
gs
sbb
pop
outsb
lds
aam
dec
jp
and
xchg
xchg
test
lods
cmp
lahf
fs
or
loope
inc
dec
into
pop
dec
loop
shl
lea
je
ljmp
test
pop
inc
lret
aad
not
mov
dec
popa
call
jmp
cld
jbe
dec
ret
mov
push
cmp
lea
loopne
xchg
cmp
movsb
mov
into
iret
lcall
dec
sar
lahf
push
int
movsl
leave
clc
inc
dec
cmc
ffree
sbb
mov
sbb
push
cltd
xchg
cmp
sub
jmp
mov
cmpsb
les
jno
in
sbb
dec
push
xorl
les
mov
sbb
imul
mov
mov
shll
mov
pop
adc
mov
lds
repnz
shll
sub
faddl
ss
push
xchg
push
mov
aas
subl
clc
xor
push
stos
sub
aaa
call
addr16
push
pusha
push
shlb
lds
cmp
jae
int3
or
jle
js
repz
cld
pop
sbb
test
or
mov
dec
scas
test
mov
je
je
cmp
jge
cmpsb
add
push
jecxz
and
in
mov
pop
jmp
imulb
ja
loop
mov
loope
gs
and
int3
pop
push
dec
xchg
les
fstl
xchg
inc
cmp
movsl
sub
dec
adc
rcrl
lahf
gs
xchg
sub
fcomp
nop
mov
std
xchg
insb
imul
adc
test
mov
enter
mov
dec
out
jg
or
cwtl
jge
xchg
decl
mov
xchg
or
test
xor
add
xchg
in
fnstenv
es
rol
and
adc
dec
mov
mov
aaa
popa
roll
dec
pop
std
loopne
pop
pop
dec
mov
movsl
pop
jecxz
int3
js
lods
into
fcmovne
movsb
cmp
notl
bound
and
push
aad
jmp
in
imul
shlb
repnz
xor
ss
pop
xor
pop
daa
mov
outsl
andb
jl
and
lahf
jp
cmp
jb
hlt
cmp
push
fbld
lea
push
mov
inc
cmp
repnz
xor
inc
nop
xchg
ret
inc
push
enterw
push
loopne
and
nop
push
pusha
cmpsb
sub
loope
push
cmc
mov
outsb
inc
fstp
jns
adc
dec
xchg
push
push
fdivrp
mov
jl
es
push
out
pop
movsb
mov
sub
in
and
fadds
fistps
lock
insl
std
test
lcall
out
cmp
mov
xor
out
cmp
clc
leave
pop
addr16
push
enter
push
cs
push
mov
mov
jb
push
fildll
ret
ja
dec
lea
or
aas
inc
xchg
mov
sbb
pop
arpl
push
sbb
mov
pop
incl
outsb
pop
mov
lea
js
or
or
lea
or
fwait
lds
mov
and
adc
push
sbb
pop
insb
fidivs
js
js
les
xchg
icebp
into
push
insl
cmp
outsb
inc
sbbb
pop
mov
jno
loope
in
fs
xor
ljmp
addr16
jmp
aad
mov
xchg
test
cmp
das
andb
xchg
popa
add
dec
push
out
inc
fld
mov
faddl
mov
cmc
pop
fnsetpm(287
inc
pop
sub
jns
mov
pop
add
fstpl
outsb
push
repz
outsl
shll
xchg
sbb
xlat
or
xor
pop
out
nop
xor
mov
mov
xor
enter
in
lds
mov
mov
add
pop
stc
jmp
xchg
push
arpl
mov
push
inc
es
cmc
xchg
into
mov
dec
pop
popf
lret
repz
int
cmp
mov
mov
sbb
xorl
adc
iret
pop
jns
fisttpl
xor
lea
sti
mov
cmp
mov
add
aam
xchg
mov
mov
out
dec
lret
movsl
xchg
mov
mulb
jns
pop
imul
xchg
popf
into
stos
lea
jmp
pop
mov
jl
mov
les
mov
cmc
and
jno
lahf
sub
rcll
sbb
push
test
icebp
jmp
mov
aad
cmp
push
mull
icebp
imul
xor
lea
repz
sti
xor
sub
mov
in
fdivrs
adc
cmc
sub
push
and
mov
add
int
imul
es
mov
sbb
mov
outsb
xchg
xor
popf
fnsetpm(287
bound
adc
push
js
mov
jge
add
addr16
bound
mov
adc
cli
fdivrl
es
cmc
pop
cmp
cmp
clc
faddl
jae
fsubp
push
and
or
gs
or
mov
repnz
fiadds
nop
mov
jne
std
mov
sub
into
scas
fs
mov
bswap
jmp
jge
dec
sub
inc
xchg
fwait
stos
jnp
xchg
frstor
popf
lahf
or
fnstenv
sbb
mov
std
jne
inc
mov
lret
fadd
out
outsb
ljmp
inc
pop
pop
fcoml
add
mov
xchg
xchg
dec
mov
ds
jmp
out
shrb
outsl
test
lods
cmp
jb
int
and
mov
repz
popf
lcall
and
cld
daa
repz
xchg
dec
pushf
add
sub
out
js
pop
add
jo
lahf
jbe
loope
ds
mov
jo
imul
arpl
mov
and
inc
xchg
pop
sahf
lea
fcoms
mov
and
xchg
sub
mov
cwtl
je
ljmp
dec
fadds
stos
add
lods
xchg
mov
lret
aam
mov
push
sub
sub
int
jne
jns
adc
jne
test
les
mov
out
fiaddl
test
push
mov
and
cmc
pop
sub
pop
inc
stos
lds
fs
mov
or
fisttpl
idivl
dec
cli
cs
push
inc
pop
and
and
jnp
sub
sub
and
mov
test
mov
mul
stc
sub
mov
inc
sbbl
push
fwait
sub
lret
xor
es
icebp
in
es
mov
cmp
nop
dec
dec
cmp
xchg
mov
inc
mov
mov
ss
pop
mov
outsb
cwtd
in
mov
cmpsb
mov
jbe
std
jo
or
pusha
adc
out
jmp
stc
mov
popa
stos
and
cwtl
pop
push
aad
into
jae
xchg
test
aaa
or
xchg
dec
mov
jl
or
pop
roll
mov
add
adc
xchg
push
xor
aad
mov
fisttpl
mov
pop
setl
inc
adcl
ret
cmp
xor
mov
add
sbb
jo
push
push
jae
xchg
sarb
jmp
clc
imul
mov
inc
and
mov
jl
call
fs
shl
jle
xchg
and
or
arpl
mov
dec
sbb
insl
js
cld
fadd
mov
dec
or
and
push
mov
and
adc
cmp
cld
cli
cmc
aad
arpl
stos
orb
sub
xchg
out
cmp
push
adc
shl
cmpsb
rcr
push
mov
popa
mov
ja
sbb
fcmovbe
hlt
pusha
xor
mov
arpl
cmp
mov
insb
jmp
bound
test
jmp
pop
and
sarb
pop
rcll
jle
mov
jns
pop
lcall
mov
jmp
add
ss
xchg
fstpt
imul
ficoms
add
out
aaa
addr16
cmc
ds
in
andb
adc
inc
mov
lret
pop
imul
out
dec
dec
mov
sti
jb
mov
stos
or
jb
cmpsl
xchg
in
ja
aas
sbb
add
push
xchg
adc
test
push
shl
adc
ljmp
adc
jle
jmp
cmp
in
mov
jge
bound
rclb
inc
mov
popa
cmp
add
and
sbb
jle
pop
sub
mov
mov
sbb
dec
xchg
add
pop
mov
test
lock
mov
and
aad
pusha
stc
popf
std
movsb
xor
mov
lahf
inc
in
cmp
adc
mov
addr16
fidivs
inc
mov
pop
ret
xchg
mov
and
ljmp
stos
repz
pop
xchg
fcomi
dec
cmp
or
sub
addr16
xchg
fsubl
call
adc
fiadds
out
dec
gs
push
jno
and
pusha
int
mov
dec
loopne
add
sub
in
pop
and
add
fs
xor
jnp
pop
adc
push
enter
xchg
repnz
es
jge
xchg
mov
cmpl
add
cmp
jae
fistl
pop
bound
in
popa
out
test
cmc
xor
xlat
iret
sbb
fnstcw
popa
lods
test
and
dec
adc
jp
inc
aas
into
imul
icebp
push
dec
adc
or
mov
fdivrp
mov
pop
enter
cwtl
je
fwait
or
mov
pop
movsl
fcoml
lret
pushf
dec
pop
rclb
push
insl
xchg
pop
fst
or
adc
xor
mov
ja
repz
call
lods
scas
or
dec
shl
push
lods
jmp
mov
imul
les
sub
adc
mov
ja
add
sub
lea
movsl
test
fsub
adc
jmp
subl
cmp
jns
lods
xor
pop
add
dec
jbe
ljmp
ss
movsb
xchg
adc
sub
push
int
pop
das
out
xor
push
dec
push
xchg
ficomps
pop
or
sbb
jb
in
push
adc
aam
inc
cmp
call
mov
movsb
sbb
sahf
sub
mov
stos
push
leave
jns
dec
jmp
jle
das
icebp
inc
lock
and
dec
sbb
cmp
lret
push
jmp
lods
or
dec
imul
dec
push
mov
jb
inc
jae
cs
cmpsb
adc
std
jmp
popf
int3
dec
sub
sub
add
aad
cmp
loopne
sbb
add
lret
fldenv
sub
sub
and
jns
test
push
stos
add
sbb
lea
sbb
out
rcll
sbb
pusha
jae
xor
sbb
faddl
arpl
out
das
push
call
sub
loop
and
pop
bound
push
mov
imul
push
ljmp
mov
les
iret
and
inc
xor
cmpsb
aaa
cwtl
pop
mov
mov
insl
stos
mov
test
gs
sub
add
and
psubusb
or
lds
jmp
pop
xchg
rcll
arpl
outsl
stos
pop
sub
fidivs
sbb
aaa
icebp
adcb
jae
mov
and
lea
fisubl
mov
cli
jns
xchg
push
into
sbb
fcomp
rorl
and
cmc
movl
popf
push
jb
ss
sub
movsl
call
outsb
adcb
jnp
xchg
insb
mov
sbb
sub
add
leave
ret
jecxz
cmp
mov
push
push
enter
daa
xlat
fistps
test
cwtl
lods
push
shll
cltd
push
dec
je
sbb
inc
dec
mov
sub
mov
pop
adcb
loopne
lock
rclb
mov
mov
cwtl
stos
sub
sub
jbe
loope
sub
in
dec
out
sar
mov
adc
sub
out
xchg
fldenv
xchg
xor
bnd
pop
push
inc
sahf
mov
mov
out
in
imul
cmp
mov
mov
cmp
xchg
pushf
add
xlat
xorb
idivl
gs
dec
adc
lds
or
js
ja
inc
pop
out
dec
loop
out
stc
inc
inc
mov
daa
xorb
ja
mov
mov
xchg
clc
pop
push
mov
dec
and
adc
jb
add
fadds
dec
stc
push
cmp
movsb
ret
cmpsb
pop
std
or
int
lret
test
movl
jg
fldenv
decb
xor
fildll
push
mov
lret
lret
pop
and
or
adc
xor
clc
xor
cmp
jns
mov
adc
xchg
cmp
nop
push
dec
adc
push
dec
mov
int
lock
cs
sub
iret
ss
cmpsl
stos
shl
mov
ret
and
lock
popf
push
dec
sub
jns
inc
cmp
ds
fwait
dec
sub
xchg
mov
out
xchg
pop
js
iret
or
insb
out
scas
pop
test
push
inc
repnz
shr
mov
test
fisttpl
xchg
xor
cld
lcall
xchg
out
fistps
lret
clc
hlt
mov
jne
xchg
pop
push
fmuls
fmulp
je
stc
mov
jae
xor
fdivrl
and
call
cmp
and
and
and
xor
dec
scas
cmp
lods
sbb
test
dec
lods
mov
hlt
sub
push
sahf
jae
mov
inc
push
dec
adcl
fwait
in
mov
adc
into
in
js
popa
lret
outsl
pop
cltd
fsubp
shl
jle
lea
push
decl
or
cmp
mov
xor
int
rcll
mov
jmp
push
lods
or
jmp
out
stos
lret
pop
mov
scas
and
dec
sti
insb
jo
dec
jecxz
ret
cmc
sbb
mov
push
mov
jge
subl
xchg
sub
lds
cmc
fsubl
mov
add
lret
cmp
xor
test
jae
ljmp
loop
adc
push
pushf
dec
pop
popa
xchg
mov
pop
push
aaa
in
mov
push
cmc
jmp
adc
movsb
mov
fsubp
je
out
sbb
lahf
mov
into
insb
jge
fbld
xor
shll
or
clc
xchg
dec
dec
arpl
nop
xorl
and
adc
dec
out
pop
cwtl
stos
adc
push
adc
inc
jg
testl
lods
filds
adc
ljmp
jb
adc
loopne
lods
into
sti
jbe
push
dec
lods
in
test
fsubrl
and
repz
inc
and
mov
imul
mov
popa
rol
enter
loope
notb
mov
std
mov
cli
pop
int3
mov
jecxz
daa
push
negl
subl
jle
dec
push
and
cmp
dec
xchg
mov
les
inc
jbe
imul
or
ja
cli
out
nop
arpl
add
cli
ds
es
mov
fstpt
sbb
into
mul
sarl
cmp
pop
or
shll
fisttps
xor
xchg
shlb
cmp
cli
push
loopne
mov
test
lds
push
add
icebp
cmp
cld
les
mov
mov
iret
add
jl
mov
sub
jae
inc
insl
sbb
mov
cmp
cmc
sbb
xchg
jle
pop
push
inc
push
insl
jmp
inc
in
js
push
out
lds
pop
pop
add
inc
ljmp
int
mov
sub
xchg
dec
pop
sbb
dec
pushf
jnp
mov
cli
add
mov
andl
adc
inc
mov
iret
push
pop
clc
insl
stos
cmp
leave
hlt
aaa
out
sarl
ficoml
shrb
dec
mov
or
add
and
mov
cld
add
xor
fidivl
movsl
test
aas
test
xchg
pop
add
mov
and
mov
in
dec
addb
or
inc
decl
pop
pop
and
mov
cmp
shlb
outsl
push
aad
popa
inc
stc
rorl
lahf
ljmp
arpl
movsl
pop
stos
leave
jle
enter
dec
aaa
mov
sub
jecxz
in
ror
or
inc
mov
insl
cmpsb
js
ja
das
sub
mov
cmp
out
fistl
and
nop
add
frstor
sbb
jbe
mov
jge
xchg
and
cmpsl
mov
push
mov
push
les
fldcw
and
movsl
loope
leave
ficoms
cmp
xchg
lahf
add
mov
jmp
insl
negb
fdivl
jg
xlat
mov
mulb
in
lods
xchg
xor
rcrb
push
push
aas
lea
ffreep
pop
rcrl
lahf
jno
stc
rol
adc
iret
xchg
push
sub
pop
mov
sub
sub
mov
test
inc
jp
test
jbe
sub
xchg
into
stos
or
les
pop
stc
adc
xchg
xor
outsb
lcall
test
pop
fiadds
sub
out
push
push
fsubs
sbbb
dec
std
jns
and
icebp
jnp
cld
push
mov
int3
sbb
jp
xchg
xlat
xchg
loope
pop
imul
jbe
bound
stos
or
ljmp
sbb
adc
hlt
stos
jl
ja
pop
mov
test
fimull
addb
ljmp
dec
inc
cmp
add
loope
xor
xchg
adc
push
loopne
es
loop
lock
adc
push
cmc
xlat
mov
ret
clc
stos
jo
loop
dec
mov
fsts
inc
and
push
stos
push
push
fwait
dec
xchg
sti
sbb
stos
or
cwtl
pop
dec
sbb
mov
imul
inc
jne
jno
ja
hlt
pop
mov
pcmpeqd
sub
mov
xor
iret
test
test
and
pop
push
jae
push
cmc
pop
mov
jge
adc
mov
jp
mov
mov
dec
fs
inc
lret
lret
pop
lods
in
jo
cmc
jae
aaa
je
xlat
sbb
ss
sbb
fdivr
icebp
inc
idiv
mov
repnz
sahf
mov
outsl
lds
fstpl
in
sub
mov
cwtl
adc
stos
lea
sbb
and
mov
loope
pop
pop
xor
sub
jno
mov
lret
dec
mov
add
ds
mov
pop
sub
add
repz
add
fs
mov
pushf
and
movsb
dec
dec
and
popf
push
bound
push
lock
adc
sub
jnp
sarl
lods
sbb
mov
push
mov
cltd
sbb
lret
sbb
mov
mov
push
bswap
scas
push
xchg
mov
arpl
sbbb
jmp
aam
cltd
mov
push
mov
scas
imul
mov
and
inc
lret
ss
jge
sbb
mov
dec
dec
inc
mov
xchg
in
dec
pop
les
lcall
jge
push
mov
push
pop
repz
dec
sahf
filds
lret
cli
push
sahf
andb
push
aad
push
jne
enter
je
sub
mov
pop
mov
mov
add
in
leave
lcall
push
sub
mov
xchg
ss
bswap
mov
repz
xchg
sbb
in
cmpsb
gs
mov
sbb
push
push
cmp
jp
cs
fistpl
int3
push
rorl
gs
test
movsb
shl
push
jmp
fisubl
dec
mov
cmp
sti
frstor
adc
pop
into
xchg
jnp
ja
fsubp
inc
dec
mov
lock
sub
dec
mov
iret
aaa
pusha
das
mov
mov
mov
subl
or
sbb
ja
addr16
mov
negb
inc
in
scas
sarb
or
fisttps
testl
mov
mov
adc
std
loop
in
out
mov
xchg
sbb
mov
xchg
and
jo
in
dec
movsb
mov
cmp
insl
cmpsl
rolb
cmp
jnp
icebp
xchg
jl
movsb
mov
mov
pop
loop
int3
pop
das
dec
lea
pop
sub
mov
scas
aaa
add
mov
dec
lret
es
cwtl
cmp
in
call
pop
or
pop
jne
and
inc
insl
or
out
pushf
shrb
mov
add
sbb
or
sbb
cmp
imul
jo
bound
pop
sbb
add
fsubrp
int3
mov
aad
fimull
xor
sub
xor
dec
pop
xor
js
mov
out
fildll
ds
push
add
test
repz
popf
lret
je
lods
scas
adc
sbb
xor
dec
fbstp
mov
jp
mov
shrl
mov
test
or
scas
rcl
scas
mov
or
mov
sbb
inc
add
mov
cmpsb
shll
push
sbb
in
push
and
flds
cld
gs
xor
movsl
aam
pop
lea
xchg
mov
sub
loop
sahf
jecxz
adc
cmpsb
pop
xchg
js
mov
mov
xorl
inc
pop
inc
fldenv
and
pop
int
aam
mov
das
insb
inc
and
cld
scas
out
cli
push
ficompl
or
hlt
nop
lahf
cwtl
adc
test
xor
dec
lahf
jbe
fidivs
jl
cwtl
mov
or
popl
pop
movsw
pop
ret
or
test
sub
mov
ss
push
pop
iret
clc
sbb
and
fs
shrl
xchg
out
and
xlat
mov
psrad
sbb
ljmp
insl
push
in
adc
inc
mov
dec
ljmp
imul
cmp
rcll
out
test
mov
and
xor
dec
shrb
mov
cmp
lahf
addr16
inc
lret
cmp
mov
cmp
lret
loopne
jns
mov
dec
inc
cltd
cmp
loop
dec
and
aad
aaa
lock
dec
int
fisubrl
scas
mov
mov
xchg
sub
in
pop
mov
pop
iret
mov
add
decl
xor
xchg
xchg
or
mov
push
stos
leave
incb
repz
jge
xchg
xor
fstps
lods
sub
inc
jno
cmp
sub
pop
inc
movsl
pop
mov
out
test
pushf
xor
addr16
push
outsb
imulb
lds
rclb
mov
cmc
outsb
movsb
fimuls
push
jbe
jge
jmp
push
inc
add
push
frstor
jmp
push
popa
pop
insb
jecxz
shll
jl
mov
push
or
rcrl
mov
cld
mov
dec
or
nop
int3
sbb
imul
mov
jg
push
pop
jp
mov
das
int
pop
shl
or
gs
fistps
xlat
les
cmp
call
dec
and
inc
bound
shrb
repz
and
cmp
dec
fs
add
stos
lea
jae
push
repnz
lret
push
and
stc
xor
aam
sub
cmpb
shlb
in
imull
inc
hlt
je
inc
dec
das
mov
in
push
shl
mov
xchg
mov
mov
add
ljmp
lret
das
fists
or
fstpl
sbb
lods
test
repz
pop
scas
adc
loopne
test
fnstcw
dec
jp
out
scas
sbb
inc
outsb
push
cmpsl
daa
push
ja
jne
push
sub
enter
inc
ja
xchg
pop
std
into
pop
mov
cmpsl
rol
aam
in
icebp
ja
dec
mov
sti
adc
std
mov
xor
mov
xor
scas
or
xchg
xor
xchg
test
pop
mov
xchg
sub
mull
in
shrl
push
loop
sbb
pop
jb
test
js
data16
movsb
loope
push
push
inc
push
enter
push
mov
in
push
scas
xor
sbb
cltd
sahf
popa
out
adc
andb
je
fisubs
jno
xchg
stos
fildll
dec
push
mov
mov
loope
ret
stos
in
stos
xor
sarl
add
int
out
out
rcrb
shlb
enter
push
popa
and
int3
cmc
std
adc
out
push
ret
inc
out
adc
mov
pop
jmp
and
dec
push
cwtl
sbb
sarl
mov
nop
sub
jns
out
popf
and
subb
sbb
bound
push
arpl
or
adc
mov
insl
inc
jb
fcomps
adc
cld
pushf
es
and
fists
jae
cmpsl
call
adc
xor
mov
clc
jle
and
sti
push
repz
or
mov
jbe
xchg
jno
dec
adc
out
aas
mov
in
sbb
mov
sub
mov
lret
and
scas
cwtl
pop
and
and
mov
pop
lahf
adc
lods
sbb
enter
mov
push
lcall
mov
pop
lds
jo
imul
shr
add
add
jno
ja
sarb
xchg
fs
push
pop
mov
dec
cwtl
mov
adc
sbb
mov
push
push
jae
sub
or
lret
bound
stos
mov
lds
sub
xor
movb
gs
pushf
imul
mov
xor
dec
mov
jb
ret
fiaddl
int3
mov
and
arpl
fnstenv
lret
enter
push
push
ss
int
inc
inc
push
fldcw
test
mov
cli
dec
mov
ljmp
pop
subb
sbb
lds
incl
in
nop
nop
push
cmp
iret
addb
lret
jg
push
push
and
test
dec
pop
jns
jns
cmp
pop
push
jns
ret
addr16
jl
add
adc
loope
daa
stos
mov
cmc
push
dec
mov
stc
pop
cmpl
jb
push
fldln2
ficompl
sub
jle
sub
movsl
jns
xchg
jae
sub
fldt
cmp
imul
sar
jo
inc
push
xchg
icebp
xor
dec
fistps
push
std
jnp
dec
notl
push
addr16
jno
and
adc
jmp
xor
mov
in
sbb
hlt
dec
mov
cmpsl
lods
mov
out
psubb
jg
jns
add
outsl
nop
fldcw
rorb
arpl
xor
cmp
jo
push
out
push
clc
fdivrp
fbld
stos
aaa
inc
addl
and
sbb
shlb
out
inc
sub
sub
stos
xchg
inc
repnz
sub
ret
jns
fwait
popa
arpl
add
jno
pop
xor
sbb
nop
inc
mov
push
dec
shlb
and
sub
adcb
imul
ficoms
sbb
cmp
cwtl
xchg
push
mov
mov
in
or
ror
in
adc
or
insl
mov
inc
idiv
or
jg
dec
jle
pop
sbb
and
xor
or
sbb
in
mov
mov
xor
or
test
jp
add
pop
mov
repz
mov
aas
call
push
inc
cmpsb
lret
sub
fcomp
jns
xchg
jg
inc
in
into
lret
clc
daa
dec
cmp
test
mov
rorb
pop
call
or
dec
paddd
or
xor
adc
data16
clc
jb
shlb
push
pop
lret
cli
pop
rclb
adc
cli
mov
fcmovb
sahf
sbb
icebp
and
lret
outsb
cmp
pop
out
into
push
imul
movsl
stos
jl
test
stc
sub
loop
push
lods
sbb
sbb
mov
adc
mov
dec
in
in
sub
test
pop
jp
xchg
out
leave
into
aas
inc
hlt
into
mov
xor
cmc
insl
xchg
xchg
outsl
out
mov
jnp
lret
std
fdiv
dec
push
push
dec
jge
std
int3
xchg
movsl
push
sbb
fiadds
cld
xchg
mov
adc
and
add
fildll
adc
pop
or
lea
xlat
inc
adc
roll
jno
cwtl
cmp
out
mov
out
xor
aad
pop
mov
orl
xchg
cmp
sahf
add
inc
adc
add
in
int3
addl
in
mov
add
push
daa
lock
or
rol
xchg
inc
mov
xor
loope
push
add
add
invd
imul
add
cmpsb
cmp
jnp
mov
fwait
jl
fwait
xchg
cltd
mov
adcb
dec
dec
jmp
in
loopne
mov
xchg
rorl
or
shlb
je
and
sub
notl
addr16
movsl
cmp
cmp
xor
je
xchg
outsb
sub
icebp
imul
or
rolb
xor
mov
pop
aam
lods
mov
push
and
ja
push
and
jge
adc
jb
jmp
int3
mov
push
mov
mov
pop
movaps
outsb
sarl
jecxz,pn
sub
fmulp
inc
into
rorb
test
in
cmc
fdivrs
mov
pushf
cmpsb
sbb
in
or
dec
xor
mov
shrb
or
fstpl
lcall
pop
inc
fwait
jo
sbb
cmpb
aas
imul
sub
pop
adc
mull
push
pushf
mov
add
insb
sahf
lods
jmp
xchg
pop
clc
sbb
sahf
lahf
cmp
arpl
mov
or
nop
cmp
xchg
sub
jbe
mov
pushf
or
mov
sbb
xchg
pop
inc
adc
test
es
inc
cli
xor
ret
mov
dec
in
out
mov
mov
pusha
sbb
adc
out
dec
sub
loop
cmp
cmovne
pop
and
cwtl
dec
icebp
fcoml
int
xor
stos
inc
mov
mov
xchg
push
add
add
and
std
pop
cmc
inc
jp
enter
pop
push
insb
inc
sarl
aad
fwait
loope
cmpsb
inc
and
test
roll
int3
adc
sub
lret
inc
fs
ljmp
xchg
adc
xchg
enter
jle
pop
iret
push
pop
push
imul
out
aad
lea
xlat
jns
movsl
xchg
daa
ljmp
test
jmp
data16
icebp
mov
lret
sub
jg
add
int3
mov
cwtl
jnp
jbe
pop
push
mov
in
xchg
scas
fisttpll
add
lahf
das
gs
ss
jns
in
sbb
ss
jmp
sbb
mov
and
test
out
lods
sbb
fistpl
xchg
cmp
mov
mov
sbb
mov
xchg
cld
xchg
stos
repz
mov
pusha
mov
or
mov
inc
sub
fcmovne
in
cmp
in
cmp
sbb
mov
pop
test
loopne
sahf
pusha
sahf
addr16
stos
cld
sub
jp
fstps
ret
push
ja
mov
jns
lock
frstor
rclb
int
fimuls
shl
xchg
ds
sbb
pop
dec
pop
add
inc
in
pop
adc
lods
nop
lcall
jl
xor
or
loope
cmp
outsl
or
insl
jl
les
or
mov
xchg
mov
loope
pop
dec
loopne
add
sbb
push
pop
mov
sbb
add
imul
pop
inc
lcall
xchg
mov
imul
es
pop
in
push
jno
xchg
sarl
cs
xlat
popf
dec
pop
sti
mov
data16
lods
lret
cmp
mov
dec
stos
out
sub
jo
jae
mov
xchg
mov
or
xor
pop
pop
movsb
inc
lds
ret
push
ret
push
pop
int
mov
xlat
cli
int
fcomi
shll
in
push
rcl
sbb
pop
orb
inc
xorl
adc
cmpsl
add
dec
and
in
imul
rolb
inc
icebp
add
sub
and
push
or
push
enter
inc
scas
push
mov
jnp
mov
push
popl
fwait
cmpsb
mov
test
xorl
lret
mov
fnstsw
push
shl
inc
adcb
sub
iret
addb
int3
sub
push
popa
lcall
sti
sbb
adc
push
mov
jb
sub
sub
dec
aam
xorb
mov
push
das
lcall
mov
imul
cmpb
mov
pop
add
int
shll
in
int3
imul
enter
add
jmp
push
test
lods
test
sti
push
cwtl
sti
es
push
jnp
std
ficomps
ja
add
sub
cmc
pushf
and
call
sti
shrb
stos
aad
iret
mov
dec
jbe
insl
bound
inc
ret
adc
scas
cld
xor
jo
mov
clc
js
push
xchg
inc
inc
fsubs
lods
fcomip
jae
pop
mov
jg
and
mov
sub
push
push
ja
stos
xchg
push
sbb
xor
test
mov
push
mov
mov
std
add
sbb
cli
out
and
das
dec
dec
sub
jnp
in
sarb
ret
shrb
dec
les
xchg
mov
jmp
and
dec
dec
dec
out
rorb
outsl
outsl
lret
lcall
pushf
mov
movsl
inc
ret
std
xchg
lds
mov
mov
adc
int
cmp
mov
mov
lods
mov
sub
xor
mov
sahf
push
dec
push
xor
mulb
xchg
jb
jnp
sub
push
adc
popa
mov
sbb
pop
fisttpl
sti
lock
aaa
clc
scas
and
fmull
data16
loope
scas
add
cs
push
mov
mov
or
jnp
sub
jmp
pushf
or
movsb
imul
pop
xchg
into
jl
mov
je
sub
inc
xlat
dec
lea
bound
icebp
jnp
sub
push
or
out
inc
xchg
std
insl
sahf
xchg
push
popf
inc
clc
fidivl
xor
cld
mov
jnp
add
mov
rolb
push
iret
fstpl
pop
jae
ret
jae
subb
test
and
or
insb
dec
jbe
xchg
push
out
cmpsl
orl
xor
stc
incb
or
pop
xor
adc
add
mov
push
xchg
icebp
ficoml
pop
jo
sub
push
rorl
stos
sbb
cmp
xor
jb
mov
push
push
lock
js
sub
nop
je
mov
xor
or
fcmove
cmp
ret
cmpl
pop
cmp
jmp
rorb
mov
cmpb
jg
test
aas
cs
sub
mov
adc
arpl
test
outsb
cmp
push
call
jl
or
mov
in
mov
in
int
jecxz
adcb
mov
push
leave
into
xchg
sar
push
sbb
loop
pop
xor
mov
or
std
sbb
icebp
sarl
enter
pop
inc
add
jp
cmc
cwtl
xchg
dec
pop
in
mov
adc
jle
mov
or
repz
mov
cmp
fwait
test
and
aam
and
in
shrb
xor
outsb
jl
jbe
jl
repz
add
mov
mov
hlt
aas
push
mov
testl
inc
out
sbb
fisubrs
cs
sti
jb
push
cmp
stos
aas
loope
jnp
or
mov
pusha
cld
pop
jmp
pop
dec
mov
addr16
jnp
rorl
pop
orb
cmpsb
test
sbb
sti
cmp
mov
insl
xchg
jp
faddp
and
mov
cmp
je
adc
sub
notb
push
sarl
clc
les
cmp
leave
push
ret
call
xor
push
pop
or
daa
test
dec
mov
std
cs
mov
jns
arpl
icebp
not
and
mov
mov
mov
loope
testl
les
pushf
lcall
mov
inc
add
cmpsl
lea
xchg
leave
mov
jo
out
bnd
shll
pop
cmp
insl
and
jl
xchg
cmpsl
add
leave
cmp
fxch
cmpsb
out
icebp
or
fsubrs
jecxz
cmp
xor
out
rcrb
add
sub
in
loopne
bound
cli
test
add
jle
mov
jecxz
sbb
icebp
jo
mov
cmpsb
pop
sahf
dec
leave
orl
mov
das
pop
icebp
mov
add
scas
in
mov
ljmp
arpl
xlat
pop
inc
int
jp
push
adc
idivl
or
or
mov
jbe
xchg
cmc
sti
outsb
test
push
in
lock
xor
mov
clc
out
test
outsl
push
xor
push
std
xchg
addb
idivb
xchg
xor
or
into
movsb
mov
js
jnp
mov
cli
push
fnstcw
out
mov
xor
lret
cs
mov
pop
adc
jae
in
xor
or
lret
and
cld
rcll
or
stos
popl
push
lret
movsb
xchg
fmuls
stc
rcl
jg
fwait
lret
hlt
add
cmpsl
scas
pop
inc
dec
sub
and
xlat
and
mov
cld
insw
xor
test
enter
cmpsl
pop
sbb
inc
in
stos
mov
sub
fwait
jnp
jbe
jg
mov
movsbl
lods
gs
add
mov
lock
insb
or
adc
add
sub
out
arpl
sbb
sub
data16
shlb
push
pop
enter
mov
inc
cmp
sub
sub
std
add
cmp
rol
addr16
cwtl
imul
mov
inc
cmp
push
xchg
jg
and
dec
ret
jge
xorl
pop
jnp
lret
out
icebp
das
mov
addl
push
scas
sbb
sar
mov
mov
leave
mov
mov
push
adc
add
cltd
stos
aam
push
mov
sti
add
rorb
arpl
cmp
int
mov
andl
cld
jbe
cli
cld
mov
push
out
adc
adc
adc
les
add
insb
adc
push
repz
add
mov
arpl
adc
cmpsb
adcb
lods
sbb
aad
jg
jb
in
jg
add
mov
sub
sti
xchg
jo
aas
das
mov
cmp
sub
dec
sub
orl
aas
rcrb
pop
rcr
xchg
iret
push
xchg
pop
sub
aaa
adc
divl
in
cmp
pop
xor
jmp
sbb
push
cltd
inc
addr16
mov
dec
mov
pop
dec
xorb
out
adc
cmp
push
arpl
inc
xchg
cmp
in
xor
shll
mov
cmp
pop
sub
mov
or
xlat
jg
divl
pop
mov
xchg
hlt
test
pushf
and
out
lods
xchg
sbb
out
aas
pop
xor
aam
jmp
and
fwait
push
fldl
cmp
and
push
setnp
int3
jg
int3
sti
mov
or
ljmp
inc
cmp
cmp
insl
inc
mov
mov
es
push
dec
or
and
push
mov
jne
jp
push
push
mov
je
pop
push
aam
fcomps
pop
loope
iret
mov
sub
and
adc
fdivrs
pop
fmuls
ss
mov
mov
add
mov
mov
jne
add
xchg
and
out
or
or
das
pop
dec
dec
xchg
mov
scas
jbe
clc
mulb
inc
mov
ret
aad
lods
leave
jb
push
leave
pop
and
das
nop
xor
push
fcoml
and
testl
push
jl
cmp
movsb
adc
mov
cmp
sub
aas
or
mov
add
push
test
push
mov
xchg
insb
test
add
popl
imul
fnstcw
mov
cwtl
push
and
sbb
jne
inc
cmpsl
xchg
addr16
mov
pop
stc
out
jne
clc
fcmovnu
push
shlb
subl
shrb
lret
shlb
jge
fwait
push
daa
xor
dec
push
fnstcw
adc
inc
in
pop
cmp
popf
inc
sub
sbb
movsb
sahf
stc
in
or
push
and
iret
popl
call
sbb
sub
decl
rcr
movsl
lods
add
xor
ror
sub
mov
mov
and
push
cld
xor
mov
or
test
mov
mov
scas
sbb
inc
mov
dec
mov
in
sarl
cld
or
jo
pusha
ljmp
orb
or
sbbb
cmp
lods
mov
sbb
ret
aas
mov
adc
sbb
add
dec
movl
es
and
into
inc
cmp
es
dec
dec
inc
xchg
mov
mov
testl
xor
lea
sub
loopne
adc
std
jecxz
fdivl
pop
popa
and
sbb
push
int3
push
fidivl
bound
ret
dec
js
or
mov
mov
repnz
jo
out
push
xchg
cwtl
mov
inc
mov
jl
inc
into
scas
mov
adc
xor
clc
cld
lahf
cltd
sub
mov
jnp
iret
mov
inc
mov
mov
repnz
sub
in
mov
xor
movsb
cmp
enter
movsb
loopne
adc
jg
mov
adc
xchg
out
imul
xor
push
cld
push
bound
pushl
push
jne
push
adc
or
cmp
pop
repz
je
dec
pop
lret
loop
aam
and
mov
jmp
test
sbb
jnp
int
daa
push
cmp
and
test
cmpsb
subb
out
fdivs
inc
push
jg
cmp
jmp
aas
repnz
sub
xor
sub
xchg
jae
ds
and
pop
lcall
dec
rcll
negb
pop
loopne
repnz
stos
pop
in
popf
daa
add
rorl
mov
sbb
xor
push
mov
xchg
jge
add
push
movsl
inc
mov
sub
mov
imul
xchg
fldcw
fistpll
xchg
mov
xor
cmp
xchg
stos
mov
lret
cmpsl
xchg
out
sub
nop
sub
dec
jecxz
push
jl
push
push
pop
scas
sti
stos
add
xchg
cmp
clc
in
mov
loope
or
sub
push
cmp
in
gs
lods
push
out
stos
adc
push
fistl
fsubs
test
inc
ret
push
push
bound
pop
cmp
scas
xor
dec
fisubrs
iret
test
pushf
cwtl
and
sahf
xor
enter
dec
arpl
out
rcl
mov
mov
xchg
cld
sbb
loope
sbb
fucomip
movsb
xchg
fs
lock
std
jne
cmp
pusha
adc
or
dec
mov
adc
mov
rolb
and
mov
push
lea
stc
cmc
mov
mov
push
in
xchg
xor
and
negl
loope
fmull
das
mov
test
xor
adc
jecxz
in
call
cmpsb
mov
jno
push
lds
btr
or
fmuls
cli
xchg
inc
out
test
clc
push
cmc
jbe
push
mov
pop
icebp
sub
xor
cmc
nop
cmpsl
mov
pop
pop
sub
arpl
push
push
popf
push
movsl
ds
xchg
inc
jb
xlat
sub
add
mov
cmc
out
dec
jg
int
outsb
pushf
pop
pop
je
or
scas
das
mov
test
pop
stos
mov
jnp
and
inc
repz
in
ds
xor
fwait
sub
dec
inc
or
repz
sbb
and
cmpb
addr16
cli
xorb
xchg
push
inc
and
push
int
push
mov
ficoms
lret
adc
bound
adc
sahf
std
adc
xlat
mov
ds
pop
lds
loop
inc
mov
nop
xor
cs
or
out
icebp
gs
xor
xchg
adc
stc
ja
fistps
icebp
jne
or
icebp
add
sahf
insb
mov
and
and
inc
mov
out
dec
sbb
mov
push
sbb
loop
jae
mov
xlat
addr16
add
cmp
nop
rorl
mov
and
mov
mov
pop
jl
lock
sub
pusha
sbbl
bound
shrl
pop
stc
push
rcrl
pushf
dec
xchg
fstpt
je
nop
pop
je
push
popa
sub
dec
xor
sub
jo
in
adc
outsl
rcr
aad
jns
out
push
inc
sbb
push
rcr
mov
inc
sbb
push
or
mov
out
scas
pop
in
leave
mov
loope
int3
sbb
add
cwtl
int
ds
mov
cmp
outsb
lea
mov
mov
and
ror
inc
adc
and
outsl
lods
adc
xchg
lock
cwtl
shll
xor
dec
and
cli
aas
imul
addb
sbb
aas
xchg
and
mov
mov
add
adc
cli
or
push
push
adc
lret
mov
pushf
mov
push
out
adc
push
test
pop
mov
insb
cmp
js
lock
jg
mov
repz
aas
dec
xchg
mov
jecxz
nop
jo
pop
cmp
repnz
pushf
lret
insl
outsl
nop
xchg
sub
int
hlt
out
orl
mov
test
enter
push
jo
and
mov
subb
inc
into
mov
jge
xor
sub
jmp
mov
pop
out
push
aaa
push
mov
adc
repz
sti
dec
dec
fdivl
jge
cld
sbb
ret
push
sub
lds
repnz
ss
and
adc
jle
mov
pop
loope
xchg
addb
call
xchg
sbb
out
vzeroupper
adc
pushf
dec
out
loope
sbb
out
jp
mov
lods
popf
sbb
or
xchg
mov
or
sbb
inc
push
mov
add
and
and
iret
mov
shlb
es
aad
cmp
push
mov
jns
hlt
into
xchg
xchg
js
call
ss
enter
or
jl
sub
mov
fadds
mov
mov
or
in
ja
and
sub
repnz
fcmovnbe
add
sti
sub
or
into
xor
pop
cmpsl
sarl
and
jge
push
ficomps
sbb
xor
mov
push
xchg
push
push
mov
mov
add
xchg
inc
scas
mov
movsb
xchg
xchg
das
sub
fisttpl
repnz
xor
jle
xchg
pop
outsb
mov
and
in
mov
push
ret
cmpsl
test
push
or
mov
pop
stos
pop
sti
xchg
mov
dec
lret
pop
mov
icebp
xchg
out
or
and
sub
bound
mov
adc
and
mov
mov
mov
jo
in
lods
cmpsl
dec
enter
push
xor
test
push
sub
mov
insl
mov
push
cmp
les
in
add
aaa
fstp
test
cmp
je
sub
sub
cli
call
aas
lret
out
sub
in
sub
lahf
outsl
fidivrs
mov
or
dec
addr16
shll
adc
rcll
adc
mov
jl,pn
nop
sbb
adc
popf
rcll
rorb
imul
mov
scas
inc
ret
notb
mov
sbb
fildl
aad
int
pop
leave
push
jne
mov
aad
addr16
je
pop
loope
pusha
adc
xor
aas
mov
and
pop
hlt
dec
add
dec
pop
fs
and
lret
pop
mov
adc
ja
test
sub
xor
iret
testb
or
add
leave
out
mov
popf
lock
leave
out
inc
dec
imul
pop
mov
xchg
loop
or
outsl
pop
ret
jb
ret
mov
pop
mov
outsb
andps
je
ftst
xchg
cmp
fs
in
mov
lods
and
out
jmp
pop
lea
jecxz
push
sub
add
cmpsb
sbb
xchg
pop
shl
pusha
dec
xor
ret
mov
push
shll
xchg
mov
push
add
outsl
inc
dec
aad
stos
repz
jbe
int3
ds
xor
jo
xor
mov
mov
jl
xchg
inc
cmpsl
hlt
fnsave
scas
sub
jb
jecxz
lods
insl
inc
cmp
aaa
movsb
mov
test
movsb
shrb
adc
stc
pop
inc
xor
in
jno
push
push
push
push
loope
sbb
adc
loop
clc
in
mov
mov
pop
jb
pop
les
mov
pop
mov
jns
sub
sbb
inc
outsb
jae
fnsave
leave
inc
cmp
adc
iret
mov
or
loopne
jl
daa
cmp
fdivs
fwait
sub
insl
cmp
mov
imul
test
imul
sbb
mov
dec
jg
or
loop
jecxz
mov
pop
or
loop
cmp
dec
lahf
cmp
in
push
push
js
fld
sahf
ret
stc
sub
shrl
std
sti
adc
icebp
jb
or
lods
mov
fistps
cmp
jmp
jp
xchg
popa
loopne
pop
orb
mov
xchg
jmp
sti
pop
jo
sbb
cmpsl
dec
rorb
push
es
test
or
jg
ljmp
mov
jbe
inc
out
pusha
mov
das
jb
pop
mov
lds
xlat
ljmp
jb
mov
pop
in
andl
mov
push
or
mov
addl
mov
insl
sahf
mov
dec
inc
and
mov
mov
rclb
loopne
sti
sub
add
stos
jnp
les
pop
stos
jb,pn
jp
cmpsb
mov
mov
add
xchg
xor
gs
inc
loopne
jae
pop
xchg
jmp
and
into
scas
xor
mov
shll
inc
loop
xchg
ja
in
daa
sub
dec
xchg
movsl
clc
sbb
mov
jbe
jnp
mov
int
fisttps
sub
lcall
pop
mov
dec
add
cmc
inc
shlb
cmpb
or
jl
jle
es
mov
inc
mov
ds
in
push
scas
repnz
sub
aaa
cwtl
ret
mov
test
leave
sti
rcll
jo
dec
push
insb
mov
jecxz,pn
imul
mov
cmp
cmp
inc
mov
mov
cmp
nop
cmp
sarl
and
daa
push
mov
pop
or
mov
pop
dec
fildll
and
jge
jae
mov
out
pop
dec
xor
pop
in
data16
lds
ds
push
js
repz
push
adc
add
jno
popf
xchg
xchg
sti
bound
imul
jecxz
sub
xor
aam
jb
fdivs
out
test
pop
sbb
arpl
inc
fsts
xchg
lock
dec
and
popf
cmp
imul
push
imul
in
ss
xchg
cmc
xchg
jbe
push
and
and
mov
jg
adc
fcoms
in
imul
aas
cli
mov
mov
adc
fdivrs
cmp
out
or
xchg
mov
pop
push
in
ljmp
daa
xor
inc
std
inc
out
xchg
mov
aaa
cmp
insl
fcmovnu
inc
inc
scas
and
jo
xchg
lock
arpl
sarb
mov
sarl
mov
jns
sti
push
fisubrs
mov
push
or
mov
pop
ja
xchg
pop
xchg
cmc
test
rcl
shlb
mov
out
lahf
dec
stos
cltd
cli
lds
notl
fxch
negb
pop
addr16
insb
pop
shrl
and
mov
outsl
ja
push
xor
aaa
test
mov
sbb
or
testb
je
test
xchg
enter
cmp
and
icebp
inc
es
xor
lods
sahf
push
popf
push
and
daa
stos
adc
daa
nop
or
repnz
or
pop
add
es
repz
hlt
mov
sti
pop
mov
rclb
sub
flds
xchg
xchg
hlt
lret
push
dec
in
stos
push
dec
or
pop
push
test
xor
divl
and
mov
and
pop
mov
xlat
xchg
xchg
ss
imul
call
testl
add
loope
xchg
adc
push
mov
in
rcrb
push
clc
add
movsl
mov
lds
sahf
xor
ret
ret
into
sbb
in
lods
push
pop
leave
sub
gs
popf
ror
and
mov
scas
aam
repnz
ds
and
pop
xchg
lret
dec
inc
lret
push
call
adc
pop
fidivrl
aam
sbb
inc
je
loopne
shll
add
sbb
sbb
xor
or
imul
lcall
pop
inc
mov
je
das
sbb
fiaddl
jnp
inc
dec
jnp
testb
lods
xchg
fdivrp
pushf
sahf
sub
aam
and
and
das
stc
dec
bound
std
sub
out
pop
sub
mov
cmp
dec
aam
aad
loopne
insl
ljmp
imul
mov
mov
mov
mov
and
jno
xor
sti
sub
dec
cli
ficoms
lea
and
sahf
iret
cli
sbb
lds
lcall
xchg
xchg
mov
mov
lods
xlat
inc
add
inc
test
jl
xor
insl
inc
adcb
push
stos
jnp
mov
xchg
or
pop
sbb
xchg
sbb
cmpsb
sbb
cmp
ja
jbe
hlt
push
jno
mov
js,pt
pop
test
jno
pop
cld
mov
in
stc
jae
popf
cmpsb
push
or
sahf
icebp
jg
setne
pusha
jmp
add
out
cld
cmp
jne
fwait
dec
into
shrb
xchg
flds
sub
jb
neg
xchg
ja
jne
lea
jb
ret
mov
and
insl
fstl
lret
mov
addr16
sahf
lods
cld
repnz
adc
cmp
pop
jle
or
or
jns
lds
adc
ret
mov
repnz
test
and
add
sbb
and
adc
mov
or
in
shll
lret
push
jnp
dec
mov
repz
jg
sub
out
and
into
or
ss
lahf
test
ja
cmp
add
push
in
sub
mov
mov
mov
test
iret
jne
cmc
mov
arpl
out
es
cvttps2pi
add
out
xchg
jge
add
stc
pop
jns
sub
inc
outsb
cwtl
dec
lods
ret
movsl
call
mov
mov
mov
mulb
push
notl
test
mov
ljmp
lods
int
dec
test
lock
sbb
mov
test
cmp
inc
aad
movsl
enter
mov
loopne
mov
in
lds
xor
clc
daa
jp
cmpsl
mov
pop
add
neg
adc
ja
xor
sbb
push
cmp
or
movsl
movl
mov
xchg
lcall
push
jge
les
mov
or
pop
and
and
jo
lcall
pop
call
jo
outsl
aam
cwtl
push
sahf
push
cmp
push
mov
push
inc
jns
lds
fs
cmp
cltd
mov
repnz
insb
or
dec
inc
flds
imul
pop
push
std
icebp
aas
rcrb
outsb
lods
mov
sub
pop
add
inc
push
mov
mov
or
mov
mov
jo
ret
fnstsw
push
inc
pop
mov
lds
je
push
push
push
adc
outsl
sbb
push
xor
mov
rolb
test
movsb
lret
push
sbb
jbe
cmp
outsb
mov
pop
ja
sub
subb
jo
mov
add
mov
xchg
adc
xor
lret
data16
enter
jl
mov
gs
lods
ret
mov
jge
sub
pop
std
mov
cmc
mov
or
inc
inc
mov
add
pop
add
enter
outsl
mov
sub
xchg
btc
stc
adc
adc
arpl
pop
inc
ret
das
pop
stc
into
je
cmp
aam
into
xlat
cmp
outsb
jl
std
jg
jl
jmp
adc
pop
leave
or
in
out
or
fmul
hlt
popa
lods
std
cmc
cmp
aam
pop
push
or
addr16
push
pop
les
lds
cmc
pop
push
adc
push
jg
mov
mov
arpl
jmp
xor
sti
fisubl
or
pop
sub
das
pop
pop
mov
xor
lahf
out
xchg
movl
ss
push
das
jecxz
mov
dec
ljmp
cmp
scas
mov
lahf
mov
cmpsb
lods
movsl
mov
out
lret
mov
pop
lock
xor
std
out
test
rdrand
pop
mov
cltd
stc
inc
ds
push
jp
les
jns
lods
sub
cmp
in
pushl
gs
dec
mov
or
movsl
iret
inc
sbb
inc
push
sub
mov
aam
fwait
cmp
js
cmp
xchg
dec
cwtl
outsl
or
cmp
jg
lods
hlt
xor
sahf
xchg
out
shll
jge
adc
cld
xor
push
xchg
sub
mov
popa
mov
lret
imull
xchg
loope
push
inc
jno
cs
out
je
aaa
mov
imul
rcl
mov
cmp
stos
lds
sahf
or
dec
pop
inc
enter
int3
arpl
bound
adc
es
ds
xchg
fdivrs
mov
xchg
js
js
rolb
scas
fs
add
les
mov
ds
or
call
js
push
cmp
andl
xorl
mov
mov
cmp
sbb
dec
mov
push
inc
mov
inc
mulb
jb
or
inc
pop
bound
xorb
aaa
adc
in
jg
adc
add
aas
jb
std
push
ja
imulb
push
cmpsl
cmc
lds
addr16
scas
sbb
cld
push
jo
jecxz
inc
push
push
test
mov
inc
hlt
dec
jnp
ds
pop
ret
add
adc
sbb
inc
cld
js
pop
mov
fstpl
mov
jae
adc
jg
mov
cmp
negb
mov
adc
mov
std
sarl
repz
sub
xor
adc
outsb
int3
movsb
call
mov
add
add
xchg
negl
movzwl
dec
fs
dec
addb
out
dec
pop
lret
cld
cmp
and
xchg
repz
es
ja
and
das
or
push
mov
or
xlat
loope
pop
push
push
fists
das
loopne
cmpsl
mov
mov
cwtl
mov
pop
loop
out
nop
adc
lods
popa
lds
pop
cmp
loopne
pop
scas
xchg
cmp
ds
lea
lods
pushf
dec
in
ds
test
mov
pop
fstpl
xorb
inc
mov
and
rcrb
mov
push
xchg
and
fstpl
sahf
mov
adc
jo
int3
aas
push
push
lock
sub
iret
test
mov
jmp
inc
cld
cs
mov
loop
adc
jbe
ljmp
into
sbb
mov
bound
loop
pusha
pop
lds
imull
or
push
ret
push
ljmp
dec
mov
imul
xchg
leave
je
cwtl
leave
xchg
filds
stos
cs
cwtl
pop
adcl
mov
mov
mov
fcomp
push
repz
push
cmp
jo
lods
lods
mov
jp
sub
fwait
push
mov
lods
ljmp
adc
rcr
movsl
lcall
xor
inc
imul
adc
les
jns
call
int
fimull
test
mov
cmp
jmp
fidivl
orl
mov
int
sahf
scas
xchg
cmp
xchg
test
xor
bound
int3
cwtl
mov
aam
in
dec
mov
sub
iret
adc
sbb
mov
icebp
lods
aam
mov
push
mov
sub
scas
jmp
xlat
mov
mov
push
jno
adc
push
dec
adc
test
mov
adc
inc
stos
mov
and
cmp
hlt
aad
cld
sbb
out
stos
pop
pop
sbb
repnz
pop
jb
xor
cli
dec
cli
adc
xchg
inc
and
fs
dec
xchg
mov
bound
test
inc
std
out
inc
mov
sub
mov
pushl
arpl
mov
inc
ds
stc
test
loopne
push
scas
insl
adc
aam
or
scas
dec
or
daa
xor
sbb
sbb
pop
xchg
pop
loop
repz
mov
shrl
int3
push
mov
test
scas
cmp
sbb
xchg
mov
outsb
lds
push
push
xchg
xchg
mov
ret
adc
ficomps
push
in
insl
outsl
push
mov
mov
push
mov
or
dec
ds
testl
scas
not
push
into
in
add
fiaddl
dec
add
lods
lds
je
sbb
mov
and
scas
or
loope
jp
lods
adc
push
imul
mov
ljmp
push
add
adc
fisubl
js,pt
addr16
adc
jp
int
loop
and
mov
aaa
cmpsl
in
jmp
push
and
sub
push
jle
rcrl
jnp
fs
loop
and
popf
movsl
jbe
dec
jno
sub
adc
dec
inc
xchg
jnp
rcrl
sbb
stc
out
pop
js
ret
sub
daa
jmp
jae
mov
jne
ret
xchg
mov
outsb
popa
loop
insb
add
in
in
sahf
cmp
pop
mov
ja
lret
out
mov
mov
cwtl
fcomps
fldcw
jp
les
xor
add
push
mov
adc
pop
or
cwtl
loope
jl
xchg
mov
sbb
and
cmpsl
jle
cmp
jne
inc
ret
imul
cmc
jns
mov
lret
mov
cmp
jns,pn
popf
push
jo
sbb
add
js
jmp
sahf
pop
xchg
xchg
cld
arpl
add
pop
push
dec
cmp
icebp
ret
sbb
pop
in
aam
cmp
mov
cltd
sbb
out
xchg
movl
pop
fs
addr16
xchg
jns
push
pop
mov
sahf
or
ds
push
stos
roll
add
fildl
cmp
inc
stc
out
ss
add
out
aam
ss
ret
push
xchg
cmp
mov
iret
adc
pop
icebp
mov
jne
pop
xor
cmp
xor
dec
adc
jns
stos
or
rcrb
add
data16
xchg
insb
xchg
and
je
xor
lret
jnp
jnp
pusha
xchg
pop
mov
sub
mov
fcmove
push
dec
inc
aad
adc
cmpsb
xchg
jae
cmp
or
jge
vunpcklps
mov
jmp
arpl
jge
xchg
dec
inc
in
loop
bnd
xchg
pop
adc
mov
cltd
sti
pop
sbb
dec
imul
mov
mov
cwtl
daa
mov
mov
xor
mov
adc
push
xchg
or
test
inc
das
sub
xorl
out
or
push
mov
and
mov
je
pcmpgtd
inc
pushf
mov
mov
pusha
ds
ficomps
push
xor
frstor
in
gs
test
mov
rclb
out
loopne
mov
clc
arpl
pop
dec
sbb
push
daa
or
sahf
call
xor
jp
lods
dec
popa
xchg
fistps
inc
lcall
add
sbb
daa
lods
adc
call
sbb
mov
xchg
int3
cmp
std
cwtl
stos
mov
sub
enter
lret
cmp
nop
mov
sti
pop
inc
xor
les
mov
jl
cmpsl
rcll
inc
in
jg
cmp
fstps
pop
push
js
cmp
imul
cmc
fimuls
and
jns
js
xor
out
mov
negb
fsubrl
bound
out
cmp
adc
cmp
xchg
pop
int3
imul
icebp
push
and
fnstcw
imul
scas
pop
arpl
cvtdq2ps
sahf
dec
lea
pop
mov
mov
mov
addr16
push
stos
fildll
in
in
xchg
ss
pop
lock
inc
fdivr
mov
pop
ljmp
push
ja
es
mov
push
push
add
jp
push
dec
sbb
jl
outsb
xor
xor
and
pushf
lds
xchg
in
pusha
ret
stos
rorl
lods
mov
or
adc
shrl
dec
rcrb
xchg
std
fwait
push
and
ret
xor
fimull
aas
push
adc
push
stc
daa
lods
jb
jecxz
test
pop
pop
jl
je
sbb
pop
sbb
lods
xor
add
pop
lods
add
int
adc
pop
push
or
jo
cld
mov
xchg
adc
dec
es
negb
or
stos
lahf
jmp
scas
xor
leave
cmp
pop
cli
inc
arpl
popf
add
rcrb
popa
sub
lds
jle
test
xchg
or
add
xchg
mov
into
xchg
cmpsl
rolb
in
stos
jb
or
into
fcomi
xchg
pop
adc
es
repnz
pop
aad
std
test
mov
aad
pop
jg
sbb
int3
jmp
push
pop
inc
jmp
insb
push
add
out
call
add
stos
dec
push
fidivrl
lods
jbe
adc
inc
in
push
xchg
jae
xchg
xchg
movsl
and
orl
or
push
jmp
jmp
sbbb
out
inc
sub
ds
stc
lret
sbb
push
add
dec
lds
mov
ds
mov
or
xchg
inc
mov
ljmp
icebp
add
jge
test
adc
idivb
mov
jecxz
sbb
cmpsl
aam
sub
imul
mov
add
push
sbb
xor
dec
adc
les
arpl
mov
inc
adc
testl
hlt
in
pushf
data16
xor
jne
insb
stos
and
out
dec
int3
mov
mov
push
scas
cmovle
jmp
outsb
mov
fdivs
inc
sub
adc
out
or
xchg
fildl
jns
or
dec
aaa
mov
sub
lock
or
aaa
scas
addr16
mov
mov
jmp
out
jp
mov
imul
adc
mov
cmp
add
dec
adc
pushf
fwait
roll
jmp
insl
pop
add
dec
inc
xchg
mov
cmpsl
and
jge
push
sahf
adc
xorb
clc
es
fcos
cmp
inc
adc
int3
mov
icebp
testl
jecxz
dec
jbe
lods
mov
ja
lret
xor
mov
imul
jo
or
addr16
fidivs
push
nop
mov
jge
pop
jno
cltd
mov
or
jle
jp
pop
ss
pop
adc
mov
xchg
or
lcall
and
imul
dec
xlat
inc
ds
into
dec
jne
xor
movsl
inc
subl
adc
jle
inc
add
js
fisubs
ds
cmpsl
adc
out
mov
ror
mov
pop
add
push
in
es
repnz
sub
lds
jecxz
mov
pop
xchg
fs
and
cmp
popa
in
icebp
andb
push
rcl
test
mov
push
push
cmpl
cmp
pop
sbb
inc
push
ja
hlt
std
in
gs
or
shlb
outsb
sbb
testl
mov
mov
cmc
or
mulb
adc
dec
mov
push
inc
mov
mov
lock
loope
lock
out
dec
add
stos
mov
dec
cmp
imul
daa
mov
jo
rorl
in
dec
pop
call
int3
fs
outsb
sub
cld
into
push
dec
cmp
mov
mov
xchg
subb
or
fiadds
loop
xchg
addr16
or
sti
add
dec
imull
pop
dec
pop
cmp
pushf
pop
xchg
bound
and
mov
inc
insb
add
jmp
xchg
loop
mov
mov
mov
inc
sub
inc
sub
jle
in
in
lods
gs
add
xor
cmpsb
out
cmp
call
cmp
mov
in
clc
aaa
and
ja
lret
or
roll
jbe
lock
mov
fsubl
jns
add
cmp
inc
mov
in
push
sbb
or
push
arpl
prefetcht1
mov
mov
lahf
or
ret
mov
mov
sarl
icebp
xchg
leave
sub
jbe
ja
fidivrl
pushf
cs
lcall
sub
add
ret
mov
mov
adc
jae
pop
imul
lods
push
cli
push
cmpsb
push
dec
push
dec
inc
pop
mov
push
jcxz
cmp
inc
or
loop
jle
movb
test
pop
inc
icebp
aas
sbb
sarl
fucom
mov
adc
or
xchg
xchg
jbe
inc
daa
add
adc
rcrb
mov
in
lds
and
scas
popa
out
movsl
std
paddsb
dec
push
cwtl
mov
dec
mov
dec
or
inc
sub
iret
imul
pop
mov
lods
outsb
jne
in
pusha
cwtl
daa
imul
xor
test
cmpl
dec
sub
test
stos
and
push
jmp
xor
aaa
fs
jle
pop
push
adc
dec
imul
pusha
xchg
data16
imul
insl
cli
cmp
jl
mov
jle
mov
adc
pusha
lea
into
push
in
fs
pushl
mov
sub
pop
dec
push
cmp
xchg
into
mov
lods
shrb
inc
in
add
enter
les
jno
xchg
sub
xlat
mov
pusha
fwait
int
loope
cmpsl
sahf
and
push
leave
jle
sub
ljmp
neg
shl
icebp
lret
and
cmp
xor
mov
cmc
pop
jl
stos
out
push
cmp
adc
inc
jp
cmp
js
jg
mov
mov
sbb
mov
imul
pusha
fistps
call
and
scas
adc
and
pushf
mov
inc
pop
push
loope
push
rolb
loopne
arpl
test
into
mov
sbb
push
ds
subl
sub
sub
xchg
mov
scas
jmp
mov
enter
lods
enter
lock
lock
es
enter
push
rcll
sbb
orb
jp
mov
sub
mov
or
xchg
dec
push
adc
lret
mov
jno
popa
lock
pop
mov
inc
push
pop
sarl
jne
sbb
mov
xchg
es
in
and
int
es
jne
push
pop
push
or
scas
inc
rcrl
jno
in
pop
in
mov
fnstenv
push
add
outsb
push
ds
mov
sbb
pop
aaa
fstl
insl
es
inc
mull
repz
fisubs
cmc
pop
jno
mov
mov
out
jge
xor
mov
je
in
cs
xor
mov
in
or
mov
push
lods
adc
hlt
mov
adc
insb
rep
mov
in
lcall
cmp
shrb
xchg
in
mov
mov
stc
outsb
fidivrl
xchg
or
arpl
inc
sahf
scas
sahf
mov
nop
xchg
push
das
test
popf
mov
popa
movntps
xor
xchg
push
mov
jge
jge
cmpsb
ds
push
insb
pop
jle
jmp
mov
cmp
mov
push
xlat
pushf
mov
outsb
jge
add
xchg
xor
mov
and
or
pop
fbstp
mov
pushf
mov
cltd
testb
ret
sbb
std
repz
mov
cmp
pop
or
push
and
pusha
pop
fsubl
mov
add
cltd
add
pop
mov
mov
scas
mov
aaa
sbb
or
jno
cmpsl
std
xor
cs
mov
cwtl
xor
mov
movb
xchg
xorb
pusha
lods
lret
test
cwtl
mov
mov
sbb
data16
in
fisubrs
adc
mov
adc
test
clc
test
and
xchg
mov
rcll
ja
fcmovnu
repnz
and
sub
scas
mov
cmc
aaa
loop
stos
dec
aam
pop
jge
jp
pop
rolb
ficoml
or
out
or
fs
stos
mov
and
lea
xchg
icebp
cmc
xchg
or
sub
out
int
and
sub
scas
aaa
stc
gs
or
mov
insl
xor
repnz
ficomps
daa
aaa
mov
add
faddp
sub
sbb
fstpt
push
jl
sub
sub
mov
xor
sbb
mov
mov
and
sbb
int
iret
push
add
or
mov
ja
fdecstp
outsl
lods
out
hlt
insb
cmp
xchg
xchg
lds
out
rol
sbb
shrl
fbld
xchg
fiaddl
movsb
jo
or
ja
sub
cmc
rorb
fcmove
jge
fsubrs
shrl
jnp
mov
test
ret
pop
jle
es
xor
sahf
push
mov
or
xor
mov
popfw
and
mov
mov
cmp
ja
add
repz
leave
lock
add
mov
jl
add
imul
fnstcw
inc
stc
cmp
scas
or
leave
frstor
sub
shrb
adc
dec
nop
inc
ja
xchg
mov
add
inc
push
dec
and
aaa
outsl
loopne
lret
pop
and
mov
sub
cwtl
sub
sbb
dec
iret
cmp
loop
fnstsw
cmp
loop
xor
adc
lock
out
std
lods
in
out
fxch
lahf
pop
iret
mov
imul
push
bound
nop
dec
ds
inc
test
cltd
sbb
mov
push
sub
pop
or
dec
push
pop
mov
sbb
push
pop
fidivrs
push
mov
and
enter
ja
sbb
lea
inc
fcoms
lcall
insb
or
das
je
pusha
lcall
lea
ljmp
aam
mov
mov
cmp
xor
add
fcom
and
push
shll
cmp
ja
popf
inc
insb
in
inc
sub
les
add
mov
or
mov
mov
lahf
sbb
rcrb
lock
test
xchg
xor
loope
sub
fisttpll
test
repz
shlb
lcall
daa
mov
jle
lds
cmpl
inc
xchg
int
xor
sahf
lea
repnz
xchg
roll
imul
lret
cmp
in
imul
xchg
push
in
xor
dec
lods
mov
mov
fwait
dec
jmp
test
adc
sbb
inc
sub
xchg
icebp
dec
xlat
fcmove
mov
ja
or
jl
clc
pushl
xchg
sub
dec
in
push
aad
mov
mov
faddl
data16
enter
insb
or
inc
in
dec
imul
dec
ss
iret
adc
push
je
jnp
rclb
lahf
mov
jp
xor
les
cmp
jg
and
stos
xchg
mov
sub
loopne
mov
lods
xchg
pop
jg
jmp
xchg
xorb
mov
orb
push
bound
lcall
loop
xor
xchg
lea
xchg
and
cld
push
into
sbb
sbb
push
repz
cmpsl
loope
clc
or
lahf
cs
fidivl
leave
fistpl
mov
mov
lcall
mov
orl
mov
std
pop
pop
dec
push
loopne
mov
lret
xlat
sub
lea
sub
sarl
pop
push
jnp
pop
rcrl
and
les
dec
outsl
imul
aas
stos
lods
popa
jecxz
sahf
stos
mov
mov
je
jns
enter
stos
jnp
pop
push
jns
rolb
jo
loop
and
push
movq
imul
std
sahf
divl
inc
clc
jecxz
lock
add
scas
push
or
rorl
lret
push
jno
loopne
loopne
xchg
jp
mov
mov
push
ret
push
or
test
xor
ficoms
inc
in
fiadds
ret
in
cld
sbb
ds
push
mov
sahf
mov
mov
ror
adc
mov
and
movsb
xchg
dec
das
shl
les
ljmp
sbb
popl
scas
mov
fiadds
daa
into
dec
hlt
fisubl
lret
pop
pop
xor
mov
outsb
add
and
cmp
mov
int
aad
ljmp
jno
lret
daa
mov
xor
mov
inc
andb
les
out
mov
sbb
mov
sbb
imul
repnz
cmp
fidivs
inc
dec
sub
fldcw
bound
add
cmpsl
jg
int
test
addr16
pop
stos
out
push
sub
mov
mov
clc
push
push
stos
and
dec
mov
cmp
mov
shr
push
jns
fs
xor
cmp
mov
push
adc
mov
push
mov
int
sbb
stc
xlat
sbb
push
cs
xchg
or
les
in
lods
andl
push
or
or
xor
addr16
cmp
inc
cmpsb
pushf
daa
shll
aad
repnz
insl
imul
sub
dec
push
sti
and
outsl
das
mov
pop
subb
lods
or
stos
aaa
mov
push
mov
lds
or
popa
out
xchg
test
pop
decb
js
pop
icebp
sub
adc
out
mov
lods
jno
push
int3
mov
mov
imul
js
or
mulb
sub
outsb
andl
enter
or
mov
pop
fiadds
or
pop
jmp
addb
adc
mov
cmp
mov
loop
mov
cld
lcall
repz
jae
scas
mov
aam
xor
out
lock
push
inc
or
xor
popf
adc
aam
dec
mov
mov
and
sub
or
pop
in
and
shll
jno
inc
leave
cmp
jb
xchg
sub
mov
pop
push
cmp
xchg
mov
mov
xchg
ljmp
jne
cld
xor
call
in
mov
fnstcw
mov
cli
inc
test
jns
and
push
sub
sti
popf
test
sbb
push
ret
and
or
ja
insl
or
jae
in
call
sbb
sbb
pop
xor
mov
push
push
scas
aaa
stos
push
mov
aaa
pop
sbb
stos
xchg
fisttps
or
lock
test
mov
sbb
dec
notb
inc
jb
dec
push
jle
adc
mov
jge
xchg
inc
and
insb
ljmp
xlat
push
add
cmc
adc
cmpsb
pop
push
push
mov
lds
stos
and
daa
jl
xchg
aam
xlat
ja
mov
xchg
call
aad
add
pop
pop
icebp
das
and
subb
cmp
iret
pop
movsb
add
das
sub
les
pop
lret
cmp
sysexit
mov
fnstenv
hlt
and
xor
rorb
mov
mov
dec
aas
mov
rcr
mov
imul
cmovb
cli
cltd
jg
bound
das
mov
jp
in
shl
shlb
iret
das
frstor
int
pop
lret
out
fimull
mov
xchg
push
iret
xor
add
sbb
xor
and
or
push
iret
movsb
bound
xlat
std
out
mov
sub
dec
mov
and
sbb
insl
ds
cwtl
xor
push
push
popf
inc
mov
sbb
loop
jns
daa
int
add
fwait
ss
mov
jbe
mov
xchg
ret
cld
rolb
arpl
in
js
adc
cmp
fcmove
icebp
shll
es
sbb
push
in
mov
loope
ja
jecxz
stos
push
mov
mov
push
push
xchg
sub
sbb
stos
mov
xor
mov
mov
pop
adc
pushl
pop
daa
lcall
sbb
inc
int
jno
sbb
pop
shlb
mov
pop
out
and
sti
aam
jb
popf
sbb
pop
push
std
divl
jg
aad
movsb
add
inc
sti
dec
aaa
insl
add
in
pop
sbb
iret
ficomps
aaa
mov
sub
psadbw
push
jne
pushf
add
sub
int
rclb
adc
adc
and
pop
or
inc
sub
push
outsb
pop
aas
lea
pop
gs
mov
stos
add
fnstcw
fisttpll
mov
stc
mov
pop
mov
orb
pop
leave
out
aaa
je
dec
inc
loop
sahf
cmc
int3
mov
jne
xchg
daa
pop
add
mov
dec
sub
inc
sub
fsubrs
xchg
test
rclb
sub
aaa
inc
push
bound
imul
loopne
pushf
imul
out
cltd
sbb
sbb
leave
sbbl
das
hlt
push
sbb
xor
or
push
es
sub
pop
popa
loopne
or
or
enter
cmp
pushf
arpl
mov
mov
enter
roll
lret
in
mov
in
push
in
gs
and
mov
fcoms
sub
out
daa
mov
pop
jg
test
mov
aaa
out
test
sarb
imul
cmpsb
out
dec
lret
mov
std
mov
loope
xchg
sbb
add
push
mov
idiv
addl
and
divl
jmp
rcr
adc
bswap
and
xchg
inc
fisttps
mov
inc
imul
and
xor
ret
cmpl
adc
popf
or
repnz
or
fisubrs
out
push
mov
and
jo
mov
pop
dec
or
push
sbb
cld
push
ja
and
xchg
and
aas
in
outsl
paddsb
das
inc
call
xor
fisubrl
pop
jne
mov
mov
lea
shrd
cmp
imul
dec
mov
cwtl
sbb
popf
ret
ds
push
nop
xor
mov
push
jmp
jle
mov
repz
jle
sahf
xor
test
lods
dec
fistpl
adc
cmpsl
ljmp
sbb
into
xchg
ret
inc
iret
notb
xchg
jmp
lds
mov
cmp
xor
lea
sbb
out
sbb
dec
scas
stos
mov
mov
cmp
jge
fsubl
xor
lea
ret
mov
test
push
int
xchg
shrb
pop
scas
mov
jge
sub
jl
jae
sub
call
fnstcw
leave
outsb
pushf
daa
iret
add
dec
pop
xchg
les
mov
dec
xchg
int3
subl
mov
xor
xchg
cmp
in
push
or
push
clc
adc
out
inc
mov
sbb
mov
into
mov
call
test
inc
clc
js
adc
add
pop
pushf
jecxz
iret
lods
incb
leave
push
jno
lcall
and
jmp
lret
iret
and
dec
pop
or
add
mov
push
rcll
sub
adc
pop
push
out
fsubl
in
cmp
pop
pop
pop
mov
xchg
push
sub
mov
mov
or
cmp
pop
in
pushf
push
push
lcall
jno
fists
lock
lock
stos
popa
sbb
lods
testl
icebp
data16
dec
rcl
sub
or
fstl
and
addps
or
mov
dec
and
imul
stos
mov
cli
imul
shll
addr16
mov
jns
mov
jo
insb
jl
outsl
and
ret
cmp
jecxz
mov
adc
pop
xor
ds
pop
mov
pop
jne
cmp
dec
xchg
inc
rcr
scas
adc
or
mov
out
or
xchg
into
mov
or
scas
push
dec
aad
or
sar
xchg
rol
je
mov
divl
aad
inc
mov
cli
sbb
daa
fcmove
jno
out
cmp
pop
push
aaa
loop
or
mov
mov
jb
inc
out
jp
jae
jg
push
jecxz
xchg
ss
test
or
xchg
cmpl
mov
mov
sbb
xchg
pop
mov
leave
imul
push
mov
jl
repz
mov
data16
sti
pop
daa
dec
leave
and
je
sub
sub
inc
mov
mov
mov
xchg
jne
ja
xchg
outsb
push
jge
mov
push
mov
push
ljmp
into
test
lods
pop
shll
inc
cmp
mov
dec
pop
sbb
sarl
and
loope
sbb
sti
or
outsl
in
inc
sbb
outsb
pop
and
nop
dec
lret
mov
dec
inc
xchg
inc
pop
movsl
aaa
fidivrs
push
cmpsb
in
popf
or
repz
cld
add
lret
loopne
sbb
out
add
es
sar
pop
bound
in
insb
and
dec
jbe
push
dec
ret
jmp
mulb
movsb
cmp
test
cltd
fistpll
push
ds
xor
test
js
lcall
xor
xlat
sub
addl
jg
hlt
fdivl
in
aaa
aad
mov
sti
sub
xchg
nop
enter
aam
push
xchg
dec
push
loope
lock
jmp
call
mov
iret
cmp
hlt
xor
jle
jl
mov
pop
cltd
pop
xchg
adc
dec
repnz
in
popa
sub
sbb
test
cmp
sbbb
js
orb
fs
add
out
jns
mov
es
cs
popa
jl
daa
push
data16
sub
inc
mov
popa
adc
leave
sub
push
mov
fsubrp
push
adc
mov
das
shll
nop
rol
sbb
adc
ljmp
cs
leave
dec
cld
sub
inc
xor
cmp
pop
mov
mov
push
loop
aas
pusha
imul
ss
decl
mov
ds
add
push
out
xor
insb
test
scas
pop
mov
enter
xchg
out
dec
cli
xor
scas
xchg
xor
clc
push
into
je
jo
es
push
jb
cmp
xchg
outsl
pop
push
scas
aaa
mov
cmp
sbb
sahf
push
pop
cmpsl
xor
arpl
mov
sbb
lahf
fimull
pop
nop
scas
inc
push
loopne
inc
out
mov
cmp
sub
jmp
sbb
notl
push
test
push
std
pop
or
mov
xor
ret
imul
add
clc
push
shll
cmp
push
enter
in
sbb
inc
mov
cmc
mov
rclb
dec
xchg
sbb
mov
sbb
pop
call
ds
movsb
pop
xchg
mov
orb
pop
xor
std
xchg
pop
out
mov
lret
addb
add
adc
push
adcl
call
inc
jecxz
sub
lcall
or
sub
sbb
ja
adc
iret
movsl
cmp
popf
data16
xlat
pop
aas
sub
daa
dec
mov
sahf
scas
jb
mov
lea
and
in
inc
or
mov
xchg
or
push
cmp
movsl
outsl
push
xchg
mov
scas
lret
or
xchg
dec
filds
das
scas
movsl
scas
rclb
mov
mov
out
mov
xor
mull
cwtl
jg
inc
sti
cmp
shl
sbb
sarl
mov
es
xor
and
mov
ja
movsl
lcall
mov
jb
or
sbb
adc
out
das
dec
pop
mov
jnp
jmp
aas
std
repnz
pop
pop
push
xor
adc
cld
ds
sbb
dec
js
sbb
jle
mov
xchg
xor
push
mov
push
mov
mov
scas
xchg
xchg
test
outsb
mov
stos
push
xchg
lret
int
es
cmp
sbb
jo
arpl
and
adc
jno
add
lret
outsb
pop
or
xchg
clc
popa
jae
outsb
add
xor
das
mov
jns
jg
mov
lret
sahf
pop
xor
fbld
fldt
pop
scas
jg
pusha
clc
loope
test
inc
xor
pop
xor
out
jae
fildl
orb
es
inc
dec
mov
push
inc
or
push
sbb
sbb
sti
lahf
cmp
cmc
mov
bound
pop
ljmp
pop
cmp
mov
mov
adc
test
ljmp
add
mov
or
js
popf
in
enter
or
or
sahf
mov
sub
pop
dec
aad
fwait
inc
push
sbb
cwtl
add
ljmp
push
into
inc
mov
inc
push
mov
fwait
les
jne
outsb
popf
mull
add
flds
add
sar
pop
jo
mov
xchg
sarl
pushf
xor
fisubs
call
dec
adc
jb
movsb
push
sbb
scas
sub
jb
movsb
push
xchg
sub
stos
stos
cmp
loop
cmc
fninit
mov
xor
push
dec
movl
les
push
in
mov
mov
imul
aas
mov
into
xchg
sub
push
ja
repz
inc
mov
add
mov
xchg
sbb
stos
jns
mov
cltd
and
ret
cmp
nop
xor
push
stc
adc
test
xlat
push
jmp
add
cs
jnp
clc
xchg
pop
pop
aad
sbb
stc
mov
out
mov
data16
loope
in
int3
call
mov
inc
mov
sub
std
mov
incb
mov
cmp
xorl
xchg
or
icebp
sub
stc
and
xchg
es
inc
or
xchg
sub
cli
add
pop
dec
mov
lret
xor
popf
jmp
mov
es
outsl
mov
arpl
out
popa
dec
mov
and
rorl
stos
gs
aaa
jbe
dec
sbb
mov
or
cmpsb
mov
xchg
fmul
dec
push
loope
aaa
popa
in
xchg
jge
es
les
gs
cs
fmull
icebp
shlb
mov
adc
cmp
call
les
frstor
push
out
test
sbb
jmp
fistpll
sub
jbe
sbb
xchg
add
jge
dec
pop
mov
sub
or
mov
push
stc
sbb
push
addr16
adc
mov
xchg
mov
lods
add
xor
jmp
xor
fistpl
aaa
in
pop
lods
icebp
or
or
pop
aam
aam
jb
push
imul
ljmp
sti
or
sbb
dec
push
mov
lret
iret
push
or
lea
jb
mov
or
into
push
rorl
push
pop
mov
cwtl
dec
lea
and
mov
jg
scas
cmp
pop
xchg
mov
bound
xor
or
scas
fsub
or
push
loop
push
fwait
adc
mov
bound
pushf
sub
mov
ds
fstl
or
nop
pop
jno
int
cmpsl
pop
fisubs
mov
jge
sbb
mov
jno
push
push
inc
je
lcall
enter
jne
jecxz
pop
xchg
ret
xor
imul
mov
hlt
scas
adc
pusha
xlat
pushf
mov
jnp
es
repz
add
popa
jmp
subl
mov
gs
or
inc
imul
sub
mov
aad
push
push
jbe
sbb
sahf
rolb
cltd
mov
lods
jno
into
in
jnp
out
jo
lock
sub
repz
cmp
xor
cmpsl
jg
ds
adc
mov
loop
stos
es
push
dec
mov
push
hlt
ja
xchg
addl
pop
imul
loope
lret
clc
pop
int3
into
xor
mov
or
bnd
dec
sbb
push
pop
sahf
jo
pop
mov
cwtl
insb
dec
mov
in
mov
sub
scas
lea
addr16
aam
xchg
dec
pop
addr16
xchg
std
imul
addb
cmc
incb
inc
xchg
add
outsb
push
mov
in
jecxz
test
jle
mov
jno
loop
jg
xor
aaa
jb
mov
add
notl
into
jl
and
out
nop
and
dec
xchg
es
insb
pusha
cmp
sub
in
std
out
mov
push
push
jbe
mov
insl
frstor
std
pop
pop
inc
or
aas
xor
add
and
or
sub
nop
sbb
push
outsl
and
or
stos
fistpl
or
add
into
xor
adc
pushf
popa
in
push
rep
shl
jbe
repnz
cmpsl
pop
mov
pushf
push
lock
inc
gs
ret
jb
loopne
xchg
or
add
enter
divb
mov
pop
cmp
das
mov
mov
lock
mov
hlt
imul
dec
adcl
hlt
jnp
enter
dec
lret
mov
pop
push
push
xor
divb
xchg
jnp
call
cld
in
mov
push
cmp
sub
sbb
nop
pop
std
mov
push
push
cli
pushf
jb
jmp
inc
inc
sahf
cmpsl
jo
repz
test
or
add
push
add
lods
cld
xchg
subl
jecxz
out
sbb
or
xchg
loopne
jl
sahf
movsl
dec
xor
je
lcall
std
icebp
mov
cmp
xor
stos
mov
cmp
inc
cmp
int
xor
jns
test
mov
pop
jns
mov
jae
shlb
fnstcw
fbld
sbb
outsb
ficoml
pop
pop
jb
or
inc
std
imul
mov
sub
ljmp
mov
pop
adc
repz
nop
repz
push
sarb
shr
add
push
xlat
mov
pop
into
cmp
jae
mov
adc
scas
push
jmp
push
in
jge
insb
pop
stc
fdivrp
loopne
js
mov
xor
inc
sti
mov
mov
fcmovne
or
aas
cltd
test
inc
sarb
mov
aad
push
sahf
mov
pop
out
ret
inc
rorl
add
inc
xchg
mov
cmpsb
movl
push
pop
jp
pop
push
mov
leavew
in
push
and
cltd
fldcw
xchg
out
test
pop
mov
fsub
cmp
roll
lret
outsl
pushf
mov
shlb
lods
and
into
fdivp
stos
das
xchg
setle
jecxz
mov
mov
in
adc
sub
jp
pusha
cmpsb
ss
out
int
jne
lret
mov
mov
ror
jecxz
out
xchg
insl
dec
mov
jns
jle
fwait
and
jno
mov
xchg
adc
push
loope
xchg
mov
icebp
lock
xor
or
into
shl
outsl
jno
int
jno
inc
add
les
sub
test
shl
cmp
andb
cs
xorl
leave
pop
test
loope
scas
cs
mov
pop
push
stos
dec
dec
pop
repnz
shll
sbb
jno,pt
es
xchg
or
xchg
mov
inc
loopne
pop
sbb
push
out
pop
hlt
xchg
lret
sarb
sahf
adc
sbb
mov
fwait
idiv
cltd
fsubl
outsl
aaa
ret
hlt
enter
pusha
loopne
mov
xor
sbb
and
outsb
push
scas
popf
in
dec
ret
loope
cmpsl
stos
fidivrs
mov
mov
push
xorl
mov
jle
dec
cmp
mov
sub
push
rclb
loopnew
xorl
add
aad
call
inc
movsl
test
jns
mov
leave
scas
sub
in
dec
adcb
rep
mov
jg
in
clc
pop
and
add
add
or
addr16
and
and
lods
dec
cmp
sub
or
jnp
sub
or
push
xor
jb
repz
ljmp
mov
inc
js
test
movsb
cli
jp
repz
mov
jbe
mov
addr16
mov
or
mov
mov
mov
into
dec
dec
les
in
shrb
inc
pusha
jb
and
insb
mov
adc
pusha
arpl
mov
cmp
cmp
fsubl
fiadds
data16
or
shl
fnsave
daa
dec
mov
lahf
pop
mov
shrl
in
or
pop
ljmp
push
cmp
mov
loopne
cmp
testl
add
xlat
cs
mov
int3
dec
imul
jmp
mov
or
mov
xorl
rol
and
and
xor
or
mov
jnp
das
or
cs
test
pop
xchg
mov
push
xchg
inc
hlt
cltd
jb
jae
fdivs
gs
test
popa
cmpsl
ja
adc
data16
jp
pop
xor
rcrl
loop
push
dec
jp
adc
add
test
aam
cmp
pop
incl
push
je
fistl
jo
sbb
push
fists
add
pushw
mov
or
and
loopne
out
pop
and
dec
les
imul
dec
mov
movsl
fisubrs
mov
aam
and
imul
sub
adc
jge
lret
mov
and
xchg
icebp
mov
dec
movsb
xor
ss
mov
test
in
js
mov
xor
push
cwtl
or
inc
inc
dec
addb
cmp
inc
stos
ja
lods
adc
xchg
in
cld
insb
jl
pop
sub
jg
rolb
jne
adc
dec
xlat
aad
mulb
jecxz
mov
not
mov
out
jle
cmp
call
mov
mov
lods
das
cmp
test
cs
push
dec
add
jno
sbb
cs
and
aaa
pop
jp
xchg
jmp
jbe
daa
aad
xor
push
loopne
fnstsw
add
out
mov
sbb
jbe
push
rcrl
pop
push
mov
lods
aas
lret
mov
adc
and
js
arpl
mov
cld
sub
das
hlt
lock
mov
mov
xor
mov
mov
shl
push
inc
or
ja
cld
leave
mov
mov
movsl
fsubrs
push
inc
sbb
sbb
aam
icebp
icebp
popf
cmc
jnp
and
cmp
jne
push
sbb
outsb
mov
push
and
and
jg
cwtl
loopne
inc
add
jg
push
filds
sbb
ja
and
jecxz
add
repz
inc
in
mov
cs
sub
out
out
jecxz
test
outsl
xchg
sbb
mov
in
or
sahf
imul
jno
jo
mov
dec
pop
cli
movsw
fnstenv
cmp
push
sub
mov
repnz
scas
mov
pop
pop
xlat
popf
fwait
movsb
cld
push
mov
notl
cmp
jae
sarl
xor
push
add
addr16
sbb
jo
clc
jle
pop
aam
cmc
adc
sbb
xor
sub
test
mov
mov
shrl
popf
enter
mov
aad
sbb
pushf
and
inc
cwtl
inc
jb
xchg
fisubrs
pop
push
mov
mov
pop
movsl
imul
push
and
mov
out
rolb
mov
sub
pop
imul
inc
mov
cmp
test
mov
hlt
add
inc
cmp
arpl
popf
cwtl
jb
enter
mov
and
inc
das
mov
pop
es
scas
stos
popa
iret
lret
sti
jnp
push
mov
sbb
cmp
mov
or
fisttpl
pop
ja
mov
lret
pushf
inc
xchg
mov
inc
inc
cmp
mov
mov
testb
mov
or
xor
outsl
mov
out
push
fildl
shll
mov
hlt
lahf
jnp
data16
leave
dec
cltd
sub
adc
lret
lds
push
cmp
shll
dec
cmp
andl
xchg
mov
push
mov
add
ljmp
mov
jmp
and
xchg
xor
dec
rcrl
andb
cmc
mov
xlat
mov
mov
xor
mov
in
subl
fdivp
dec
cmp
add
adc
mov
test
popa
pop
xchg
lret
aam
outsb
sbb
imull
sbb
and
add
popf
jo
pop
jae
inc
in
mov
jmp
bound
loop
mov
adc
pop
pushf
mov
cmp
jmp
adc
or
adc
sub
jns
mov
jg
jecxz
add
pop
cmp
shlb
and
mov
dec
add
and
jl
mov
idivl
jp
jns
xchg
mov
cmp
ret
inc
cmp
cmp
jg
outsl
es
jmp
arpl
sub
rcrl
rorb
mov
inc
mov
cmp
add
fcomps
test
push
ds
inc
sbb
adc
dec
xchg
push
add
xchg
test
loop
add
mov
icebp
push
pop
gs
nop
out
rclb
out
dec
call
and
adc
loope
push
mov
js
sarb
in
mov
jl
cwtl
cmp
xor
jp
mov
popf
xchg
inc
leave
dec
repnz
add
fisubrl
inc
bound
in
ja
pusha
push
cmpsl
daa
cli
and
mov
int
in
inc
out
jb
push
jecxz
loop
dec
outsb
pusha
int
or
adc
jecxz
add
sbb
cli
pop
jae
loope
sbb
pushf
jl
mov
sub
cli
cmp
add
ja
divl
test
push
cmp
imul
pop
xchg
push
sub
mov
add
js
repnz
mov
bound
popf
pop
dec
das
cmp
mov
adc
mov
notb
ss
inc
fcmovnu
cmp
and
or
mov
cmp
outsl
ja
adc
sahf
sub
pusha
inc
push
in
lcall
fnstenv
scas
and
cmp
mov
stc
pusha
lea
ss
into
inc
add
push
xchg
iret
fxch
out
sar
cmp
in
sub
hlt
pop
iret
xor
sti
mov
mov
mov
dec
jp
mov
bound
or
sbb
int
shlb
jle
dec
leave
pop
adc
repnz
dec
lds
add
jb
ds
fwait
stc
xchg
inc
dec
mov
and
mov
mov
mov
ja
leave
iret
imul
dec
mov
or
push
inc
dec
loopne
aas
and
xor
xlat
sti
inc
push
dec
dec
adc
sarl
pop
aas
dec
xchg
out
and
and
add
xchg
cmp
stc
jns
jb
lret
cmp
shll
adc
adc
pop
xor
loopne
inc
sub
jp
inc
nop
xchg
add
cmp
add
mov
push
js
dec
sub
testb
fdivl
and
adc
popf
push
push
inc
and
inc
dec
mov
mov
mov
inc
int3
dec
mov
jle
mov
sar
pushf
and
mov
push
stos
out
test
gs
inc
jp
inc
sub
mov
add
or
jmp
pop
xor
mov
pop
nop
fldcw
cs
out
push
jb
test
and
sbb
xor
jmp
imul
jp
mov
cmp
xchg
inc
cmp
fistps
dec
inc
shll
out
cld
push
insl
cwtl
pop
popf
clc
dec
rorl
xchg
or
fcoml
lea
in
dec
les
divb
xlat
push
das
cmp
jmp
adc
addl
jp
add
jbe
xchg
xchg
ret
lds
flds
lea
add
loopne
ds
iret
jns
sahf
inc
mov
shlb
cltd
adc
mov
movsl
pop
xchg
pop
lret
xor
shlb
jns
sti
mov
mov
cltd
lret
dec
pop
cmp
mov
and
shrb
outsb
sarb
pop
jnp
xor
adc
leave
mov
ljmp
jo
push
and
hlt
lret
xchg
pop
xor
add
cmp
pop
ljmp
lret
cmp
aam
pop
mov
jno
stos
nop
push
insl
mov
mov
fwait
bound
xor
shl
xchg
jae
xor
pop
into
pop
insl
fimull
mov
add
aam
push
inc
lods
inc
scas
or
in
nop
aas
mov
pop
loope
addr16
cmp
sbb
int3
dec
jns
mov
add
icebp
inc
test
stc
in
jl
pop
shrb
jne
mov
dec
mov
popf
or
jnp
cli
repz
mov
insb
adc
xchg
push
jle
add
cs
out
or
sbb
adc
movsl
fs
test
shll
or
mov
lcall
imul
mov
in
cs
ror
jb
or
call
inc
jo
insb
das
int
out
andl
aas
lock
xor
leave
loope
ja
push
adc
jmp
and
sub
xchg
dec
add
cmp
dec
test
pop
add
jno
or
stos
xchg
jp
pop
push
test
sub
rcll
sarl
mov
mov
cld
rcrb
fxch
xor
inc
sahf
jae
xchg
jp
arpl
xchg
inc
xor
pop
insl
cmp
jmp
inc
pop
fstp
aas
push
mov
jecxz
ret
jmp
cmp
in
adcb
out
dec
xchg
push
lret
pop
test
xor
imul
jecxz
sub
xchg
test
mov
jl
cltd
mov
stc
into
sub
sub
lods
in
cmp
fs
lds
mov
or
dec
and
rorl
dec
pop
mov
ret
and
aad
ljmp
mov
outsl
pop
inc
sub
push
pushf
out
out
rorb
lea
mov
jbe
stos
fisubs
lcall
mov
addr16
test
paddsb
lahf
dec
inc
xchg
or
daa
aad
call
and
pushf
push
mov
sbb
shr
aaa
std
jne
mov
ja
fs
outsb
pop
sub
gs
in
fcoms
inc
xchg
std
dec
push
sbb
scas
dec
xchg
ja
pop
int3
push
mov
out
adc
push
cmp
adcl
cmp
mov
loop
fcoml
stos
hlt
mov
rcr
ds
sbb
xchg
xorl
xchg
pop
jmp
in
in
cli
movsb
orl
jg
xchg
and
addr16
in
mov
int
sti
ss
pop
loopne
das
mov
xor
leave
inc
xor
push
xchg
mov
test
sbb
fwait
sub
pop
jb
xchg
cmpsl
add
xchg
cwtl
xorl
pop
lods
push
pop
inc
call
add
clc
data16
add
lock
inc
xor
or
test
fcoms
out
hlt
stos
cli
pop
movsb
jne
dec
cli
pushf
sub
mov
psrlw
mov
lahf
fwait
or
push
mov
cli
adc
stc
or
jg
pop
pop
filds
cmp
xchg
outsb
lret
jp
popa
jo
push
loop
into
ja
jno
mov
pop
inc
es
gs
das
bound
jg
cmc
cmp
fndisi(8087
imul
lret
push
jae
fstpt
lds
xchg
orl
fisttpl
iret
inc
xor
aad
pop
pop
scas
push
push
test
mov
xor
cltd
xchg
loope
xchg
dec
jmp
dec
jp
std
adc
adc
aam
xor
jb
sbb
push
lds
nop
ds
add
inc
dec
clc
dec
or
in
cwtl
fisttpl
ret
add
mov
mov
mulb
loope
pusha
imul
stos
jns
cmp
outsb
cmc
add
int
mov
sti
jmp
int3
add
inc
inc
pop
das
test
mov
mov
aaa
inc
pand
fisttpl
mov
orb
les
inc
pop
mov
dec
jl
int
in
xchg
in
mov
fst
push
add
and
inc
out
adc
jge
out
outsl
adc
mov
push
inc
rolb
sarl
cwtl
mov
shrl
out
ret
cmpl
out
pop
sbb
pop
loope
add
or
pop
adc
aam
call
xchg
stos
add
fistl
popf
lds
push
adc
adc
fildll
jnp
adc
addl
lods
pop
xchg
mov
jp
andl
mov
add
mov
push
inc
or
sar
inc
popa
and
xchg
and
xor
lret
add
add
sbb
sub
push
mov
or
enter
std
std
fnstcw
rolb
add
je
jl
xor
mov
leave
insl
cmp
stc
mov
popf
and
add
insb
out
inc
aam
jo
ds
dec
out
cli
jg
mov
sub
mov
leave
mov
and
movb
hlt
pushf
test
mov
and
push
adc
sahf
push
addr16
in
jb
xchg
icebp
loopne
jbe
daa
mov
les
sbb
fwait
jle
xchg
adc
fstl
cmc
jbe
jmp
pop
scas
jo
sbbl
mov
add
or
iret
or
adc
sti
mov
in
adc
lea
mov
pop
mov
rclb
dec
fisttpl
xor
cli
push
sbb
inc
mov
fcmovu
mov
dec
test
or
sbb
in
mov
and
mov
ja
or
jle
sti
arpl
mov
movl
sub
ja
pop
clc
imul
test
add
imul
cmp
pusha
decl
mov
pop
cs
cmpsb
adc
fbld
insl
inc
fstl
jnp
mov
mov
rorl
js
and
lret
cmp
das
scas
xor
sbb
push
inc
loope
mov
jbe
aad
mov
jno
test
movsl
inc
or
inc
ds
popa
outsb
cld
adc
add
fisttpl
or
sahf
dec
rorb
jb
inc
jo
aad
mov
mov
test
ret
jae
fnstcw
or
dec
lods
jo
push
push
add
cld
jle
cs
inc
cmp
call
pusha
test
sbb
push
push
mov
push
jl
sbbb
mov
outsl
mov
mov
addr16
xlat
xor
or
xchg
ret
inc
cmc
ss
pop
std
or
pop
adc
fstps
imull
and
jae
inc
stos
and
popa
xlat
ret
in
stc
xor
jns
mov
enter
movsl
gs
or
sbb
mov
pop
addr16
cmp
jmp
or
imul
stos
stos
mov
jb,pn
jnp
out
cli
leave
lcall
lahf
sub
pop
es
inc
icebp
push
mov
test
jae
dec
cmpsb
faddl
inc
into
test
hlt
sahf
and
pop
mov
add
xor
std
push
test
jp
nop
test
jge
shlb
icebp
out
jne
mov
and
pop
mov
stc
lret
out
subb
xor
and
push
inc
jecxz
inc
jnp
repz
and
mov
in
add
dec
pop
pop
xor
xor
add
sbb
mov
inc
pop
popa
xchg
ret
xchg
sbb
into
jae
jecxz
das
xchg
xchg
mov
push
jmp
in
idivl
mulb
push
out
pop
ret
mov
mov
pop
push
dec
scas
dec
rorl
adcb
mov
stc
scas
bound
dec
test
mov
xor
scas
fsubrs
add
push
fiadds
ja
push
jne
fimuls
aam
shll
sub
sbb
rcrb
roll
pushf
mov
dec
repz
mov
jbe
push
clc
sbb
add
lods
stos
lods
into
pop
sub
jne
xchg
aaa
pop
fisubs
loopne
jge
xchg
push
jb
xchg
iret
xchg
lods
fstpt
or
mov
aad
and
xchg
push
movsl
pop
lret
outsb
jae
enter
subl
jge
cmc
lods
mov
mov
xchg
sbbb
je
xlat
sahf
sub
and
divl
xchg
xor
sub
pop
adc
sbb
je
dec
and
xchg
call
pop
add
mov
jmp
push
adc
lea
in
stos
add
add
sub
mov
inc
sbb
pop
push
popa
leave
cwtl
call
inc
cmp
sti
lcall
fistpll
xchg
pop
cmc
gs
sbb
jmp
rolb
fstl
stos
jg
in
fstl
and
bnd
call
mov
xchg
repz
jae
sahf
imul
addb
xchg
std
shll
mov
or
sub
add
lea
addr16
ret
and
leave
mov
insl
adc
cld
repnz
jnp
xchg
mov
repnz
in
pop
shr
mov
or
mov
xchg
jge
add
enter
xor
in
sahf
pop
aad
jle
adc
subb
jb
inc
xchg
inc
test
call
dec
aam
mov
repz
and
adc
or
add
lcall
push
mov
out
imul
lret
pop
mov
push
outsl
ret
andl
movsb
test
inc
sbb
stos
push
xor
sub
stc
movsl
sub
nop
adcb
in
inc
add
cmp
and
sbb
mov
sarb
or
outsb
dec
test
cmp
inc
xor
int3
jo
add
sub
insb
xchg
in
mov
int3
jo
push
sub
cmpsl
imull
aad
pusha
pop
sub
nop
dec
data16
ror
mov
sar
lahf
or
lahf
aad
xchg
mov
imul
cmpsl
add
or
sbb
hlt
inc
subl
mov
incl
mov
add
mov
loopne
xchg
arpl
xchg
jae
xchg
jnp
mov
push
div
movsl
xchg
inc
xlat
fsubrp
add
in
mov
cmc
rcrb
aaa
shll
xor
mov
mov
movsb
ret
push
inc
add
pop
sub
pop
inc
mov
ljmp
jp
leave
icebp
in
out
insl
adcl
mov
push
sub
cmpsb
jg
dec
sub
inc
mov
lock
add
dec
push
insl
pop
shll
xchg
push
sbb
jp
daa
sub
ret
adc
push
ljmp
sbb
mov
scas
push
sarb
dec
and
test
bound
daa
fdivs
mov
ficomps
pop
enter
cmpl
xchg
fdivrp
ret
loop
dec
xlat
xchg
mov
lods
cltd
in
insb
or
iret
imul
mov
inc
sub
stos
pushf
out
scas
stos
inc
rolb
dec
test
je
jg
mov
xlat
mov
or
test
jmp
das
lret
shlb
lcall
fimuls
sbb
add
cs
mov
orl
dec
sbb
fistpll
add
add
das
adc
adc
int3
push
fimull
mov
mov
shlb
adc
stos
adc
mov
movsb
lds
bound
sbb
out
call
scas
sbb
aaa
imul
lods
and
push
xchg
xchg
movsl
in
adc
test
dec
imul
or
xchg
cmp
jb
and
fiadds
mov
adc
push
ja
nop
add
mov
fiadds
fcmovnbe
fsub
loopne
ficoms
sti
ja
dec
dec
push
jbe
clc
sahf
fidivrl
lock
nop
outsb
shll
in
int
scas
inc
fsts
pop
ffreep
js
lret
sub
xchg
inc
aad
daa
pusha
notb
and
lahf
cwtl
pusha
sub
fmuls
xor
fcmove
es
popf
pop
out
sar
jl
sahf
add
faddp
stos
and
ja
cmpsb
imul
and
sbb
cmpsl
icebp
inc
imul
dec
pop
xor
mov
inc
cmp
js
shr
cmpsb
sub
adc
cmc
cmp
mov
repnz
scas
pop
adc
iret
push
sbb
arpl
mov
cmp
cmp
cmp
call
cmp
ficoml
xchg
jne
les
call
inc
sub
ss
adc
dec
xor
testb
in
push
push
add
inc
xor
lods
push
enter
jbe
jo
jecxz
xchg
test
pushf
leave
popa
and
mov
xchg
push
xlat
sahf
test
add
fs
sub
jbe
sub
lahf
xlat
int3
mov
daa
sbbb
sub
or
push
inc
xor
ss
xchg
lahf
dec
cltd
imul
lea
or
sbb
cwtl
mov
cmp
cltd
mov
inc
jmp
adc
test
les
push
pop
lock
leave
icebp
ds
movsb
cmp
stc
jp
xor
sbb
jbe
dec
or
mov
pop
dec
xor
decb
jmp
leave
jae
mov
xchg
shl
fcmovbe
jns
repnz
jno
mov
roll
bound
cld
int
mov
xchg
into
repnz
xchg
daa
push
push
push
mov
test
rorl
je
jle
inc
mov
fnstcw
xor
xor
ret
clc
lcall
inc
mov
xchg
dec
mov
lcall
cld
pop
pop
aaa
jo
cltd
outsb
or
mov
sti
inc
xor
pop
dec
hlt
or
add
add
add
inc
leave
push
cmp
or
dec
and
shrl
scas
or
fs
xor
int3
cmp
cwtl
icebp
ret
sbbl
mov
push
lds
scas
fisubl
jns
rorl
xchg
and
pop
out
lret
jecxz
sarb
out
mov
jnp
lcall
push
es
push
jecxz
add
sbb
in
adc
mov
ljmp
sbb
aam
mov
or
jecxz
xchg
sbb
adc
lea
jb
mov
ja
xor
cmp
fimuls
push
mov
stos
aas
xchg
mov
push
ret
push
pop
sub
cltd
xor
enter
int3
xchg
sti
rorl
out
movsl
pop
push
fwait
add
movsb
cmpsb
jbe
mov
insb
push
mov
sub
stc
jg
jecxz
out
nop
fmull
cltd
jno
mov
or
in
cltd
jl
movl
sbb
jnp
push
push
cmp
ret
dec
mov
sub
mov
sti
sbb
push
push
mov
mov
test
roll
bound
dec
daa
push
icebp
stc
dec
mov
jge
movsl
ret
xor
nop
inc
mov
xor
mov
jb
xor
test
mov
ror
daa
mov
or
and
sbb
xor
dec
mov
push
cmp
fimuls
fwait
pop
cmp
mov
std
addl
out
mov
rcl
push
ret
je
sub
sbb
push
add
aam
enter
les
xchg
sbb
mov
sub
mov
mov
mov
out
adc
mov
ljmp
sub
jg
movsb
push
jle
mov
and
pop
xchg
add
push
or
nop
mov
movsb
dec
sbb
push
pop
push
pop
fsubs
out
femms
mulb
arpl
add
pushl
mov
mov
push
inc
jmp
push
and
adc
mov
div
pop
and
mov
ja
lds
or
jmp
jno
mov
lahf
jne
push
inc
mov
dec
fiaddl
into
shll
inc
adc
cmpb
pop
cmp
inc
inc
ljmp
dec
mov
cmp
imul
mov
push
iret
adc
jl
and
iret
and
mov
aaa
cmp
aaa
ljmp
pop
add
mov
repnz
test
je
sti
cmpsl
rcrb
idivl
jecxz
cmp
add
lahf
dec
cmpsb
add
or
pusha
ficoml
fwait
cld
sar
adcb
int
or
mov
lods
jno
ljmp
mov
jg
fwait
mov
push
in
in
into
aam
mov
jbe
mov
jne
xchg
dec
hlt
in
inc
stos
shrl
stc
out
imul
and
pop
xchg
outsl
jmp
test
mov
push
dec
mov
push
out
repnz
mov
xor
sub
add
mov
push
fisubrl
and
sbb
push
outsl
mov
popf
das
jge
mov
out
pop
adc
xchg
push
cmp
sbb
push
stos
add
dec
rcrb
cld
mov
int
jge
add
scas
mov
jo
jb
test
insb
jg
cmp
sbb
dec
pop
out
sbb
test
loope
je
and
and
pop
sub
jne
outsb
dec
mov
mov
insb
imul
lock
add
mov
adc
lock
rcll
jo
xor
xlat
sub
push
xorl
pop
adc
mov
pusha
shrb
faddl
les
movsl
push
movsl
xchg
in
addb
dec
push
insb
cmpsb
xchg
lret
xchg
fidivl
pop
sub
iret
orl
mov
sbb
popf
stc
adc
pusha
cwtl
repnz
jo
loop
scas
xchg
xorl
jb
cltd
sar
jge
pcmpgtd
loopne
mulb
push
nop
jae
xchg
loop
mov
inc
xchg
push
mov
repz
mov
pop
ljmp
pop
jae
adc
or
out
xchg
adc
pusha
cwtl
nop
mov
adc
xchg
rcr
repz
ss
push
or
or
scas
and
arpl
dec
test
mov
xor
mov
cmp
jle
and
cli
es
lret
lcall
mov
mov
push
lret
xchg
shl
cmp
xchg
cwtl
pop
cmpsb
xor
repnz
xor
adc
inc
cmp
or
inc
call
int3
or
int3
adc
cmp
add
mov
jae
imul
push
aas
in
lds
xchg
pop
pusha
xchg
xor
movsl
sbb
jg
jle
ss
xchg
cs
sbb
cmp
dec
loopne
aas
dec
xchg
in
adc
sti
pop
or
icebp
repz
xchg
and
sbb
hlt
cmpsl
stos
pop
es
mov
xor
ret
jle
and
cmpsb
cld
and
xchg
mov
test
je
adc
sub
adc
stos
stos
ficoms
dec
push
xchg
jg
jbe
lods
sbb
sbb
sar
mov
arpl
aaa
jno
add
fcoms
sub
imull
sbb
js
jge
fs
adc
mov
fiaddl
outsb
jne
mov
adc
rorb
jp
push
scas
mov
xchg
sbb
sub
inc
fidivs
add
push
aaa
xchg
data16
and
bound
mov
and
mov
int3
cmp
mov
mov
add
mov
pop
mov
and
insl
loopne
test
push
or
pop
mov
dec
mov
sahf
lock
ds
cwtl
mov
arpl
test
mov
enter
mov
scas
xchg
xchg
mov
dec
filds
mov
jg
jne
stos
inc
cmp
pushf
xchg
mov
popf
cld
adc
js
clc
sbb
pop
mov
ret
sbbl
mov
sbb
sub
sub
enter
and
lret
xchg
cltd
lret
jle
xchg
imul
movsl
dec
dec
inc
xchg
insb
arpl
test
push
ret
pop
sub
mov
mov
or
jne
jecxz
mov
dec
out
shl
fistl
adc
sar
mov
push
xor
push
sbb
jg
xchg
lods
adc
adc
jecxz
cmp
sub
xchg
sub
mov
bound
mov
cmp
inc
gs
xchg
add
jbe
jbe
and
cmp
xchg
andl
es
aas
sbb
shlb
and
mov
cmpsb
mov
xlat
cmp
add
test
push
call
test
or
cld
lods
lcall
setge
lds
movb
movsl
adcl
cltd
test
loop
mov
pop
xchg
sbb
movsb
xchg
scas
adc
xlat
sbb
cmp
cmpsl
testl
outsb
rcll
fs
leave
cmp
lods
and
jae
mov
std
movsl
or
in
and
and
in
jge
sub
stc
test
jns
adc
scas
rep
pop
inc
ret
cli
xorb
and
jb
loop
mov
and
stc
and
rol
push
cmpsl
outsb
dec
lret
add
sti
out
jnp
dec
sbb
cmp
test
out
pop
sbb
arpl
inc
stc
popf
xchg
ret
icebp
repnz
movsl
je
ds
pop
ds
xor
mov
sub
and
mov
sarl
mov
xor
mov
xchg
cmpsl
arpl
inc
shrb
jb
ret
add
dec
gs
test
scas
adc
xchg
imul
mov
aad
pop
add
and
js
pop
lahf
push
out
mov
inc
stos
lods
subl
sar
adc
dec
inc
scas
nop
mov
jp
imul
int
xchg
xchg
and
shll
push
scas
mov
inc
aam
enter
shll
mov
or
jno
adc
orb
icebp
addl
popa
mov
and
mov
scas
mov
lahf
insb
xor
ret
lock
mov
pop
cwtl
orl
push
push
mov
out
lock
jmp
add
outsb
mov
lahf
mov
mov
lods
or
mov
out
stc
cmp
jbe
sub
loop
sbb
or
sbb
pop
push
dec
lret
mov
pop
mov
lods
and
and
cmp
mov
insl
mov
cmp
add
pop
xchg
movzwl
cmpsb
sti
hlt
gs
or
and
xchg
fbld
xor
loope
and
clc
mov
adc
lret
push
mov
xchg
cld
mov
push
aam
imul
mov
cmpsb
dec
sub
add
sbb
gs
daa
jno
lea
enter
jae
cwtl
sbb
add
xchg
jnp
out
mov
popa
or
xchg
ds
or
mov
repz
popf
xchg
andl
sbb
dec
test
xchg
cmp
mov
adc
dec
js
xchg
movsb
lret
or
nop
dec
aaa
rcrl
gs
push
pop
dec
sbb
jne
cmp
scas
out
sbb
out
or
add
xchg
mov
inc
mov
les
mov
ret
ss
xchg
insb
mov
repnz
mov
inc
pop
cwtl
jne
int
push
jnp
fildll
xchg
lods
push
out
fst
jp
dec
or
cmp
xchg
mov
sbb
hlt
and
cld
add
add
test
cmpsl
push
stos
mov
pop
cmc
test
test
js
arpl
std
fwait
xor
cmpl
fstpl
leave
pushf
mov
and
cwtl
xor
shll
xchg
and
sbb
sub
arpl
and
jmp
mov
bound
or
push
movsl
adc
lcall
push
outsb
cs
and
xor
xor
in
nop
xor
in
pop
in
js
mov
push
daa
pop
cli
jmp
add
xor
cmpsb
xor
ficompl
or
jmp
and
pusha
je
mov
mov
cs
shlb
jecxz
xchg
push
notb
jns
mov
addb
xor
sub
sbb
repnz
lds
into
xor
fsubl
scas
in
mov
negl
das
rcl
mov
jmp
inc
int
add
or
add
mov
aaa
xchg
sbb
mov
jns
nop
inc
inc
das
add
push
pop
std
enter
cwtl
push
es
push
mov
or
enter
dec
add
pop
das
gs
adc
pop
movsl
sub
ficomps
push
aam
outsl
ret
leave
push
enter
fldenv
stc
inc
jbe
add
orl
les
fdiv
cld
push
mov
lods
outsb
mov
or
adc
bound
test
in
inc
dec
and
fisubl
lock
add
pop
add
mov
push
fnstcw
repnz
shll
jp
sub
hlt
sub
movsl
jmp
cmp
aas
xor
icebp
repnz
mov
fists
dec
mov
xor
mov
and
lods
rcrb
pop
lods
shrl
jl
pusha
std
xor
xchg
sub
mov
pushf
push
mov
lock
inc
repnz
dec
je
lahf
popa
hlt
inc
int3
pop
xor
mov
jmp
jl
loope
jmp
cs
bound
pop
add
fs
test
cwtl
jmp
sbb
mov
sti
inc
lahf
sbb
push
enter
jp
xor
mov
fdivrs
sub
adcb
and
cmp
cmc
mov
out
push
loope
lcall
jne
dec
add
mov
jne
xchg
pop
mov
or
loopne
js
stos
hlt
lods
sbb
pushf
push
inc
popa
in
ret
das
lods
cmpsl
pop
sub
daa
cmp
arpl
pop
cmpl
sbb
mov
cmc
push
movsl
aaa
sub
iret
push
dec
dec
insl
cld
std
mov
jp
inc
fistpll
push
leave
push
push
movsl
xchg
fwait
or
icebp
push
add
repz
mov
sub
lea
mov
inc
and
pop
inc
mov
lcall
in
jns
mov
test
pop
shrl
dec
xor
das
push
push
test
out
cltd
pop
iret
dec
outsl
or
lret
fildll
das
imul
imul
movsb
pop
fldl
cltd
lahf
in
jo
pop
jb
mov
push
cwtl
inc
movsb
mov
enter
jb
pop
scas
jp
scas
sub
xor
pop
adc
mov
mov
mov
pop
sub
cwtl
mov
jno
and
cmpsb
mov
data16
cmp
imul
gs
arpl
fistpll
mov
mulb
mov
add
add
jecxz
pop
pop
fiadds
and
addr16
fldcw
xor
fcomps
pushf
push
mov
je
cld
push
incb
int
jge
cmpb
sub
jnp
movsl
loope
ud2
mov
jae
inc
or
out
add
loop
iret
ss
out
outsl
adc
sbb
idiv
sbb
sub
jge
jl
add
mov
mov
jl
addr16
mov
cmp
imul
inc
loope
or
fistps
cmp
or
push
cmp
xor
mov
xlat
cltd
test
push
xor
lds
iret
xlat
or
xlat
jp
aad
pop
fwait
lods
inc
xor
lds
adc
adc
mov
xor
xchg
sub
mov
cmp
xor
sub
xor
ss
cmpsb
xlat
and
adc
jp
mov
sbb
mov
push
lret
fwait
mov
fists
repnz
lds
test
ljmp
jl
push
and
test
mov
lret
fsubr
adc
fs
push
cld
popf
cmp
sub
sub
or
jne
pop
mov
stos
xchg
outsb
inc
dec
cmp
stos
les
inc
adc
dec
imulb
jl
loope
inc
mov
add
repz
mov
test
les
je
lds
sbb
es
scas
ja
push
psubsb
test
inc
inc
mov
mov
jmp
mov
mov
mov
stos
outsb
icebp
push
aam
scas
mov
jno
es
adc
xchg
in
pop
cmpsb
orb
push
lock
loope
mov
push
lahf
add
mov
lods
push
mov
jo
and
jg
push
loopne
jmp
and
lcall
xchg
nop
fsubs
push
js
push
loopne
lcall
insb
dec
or
jge
jmp
sub
fcoml
push
mov
inc
jle
jecxz
popf
mov
adc
out
push
jno
sarl
ljmp
push
nop
and
sub
xor
fld
call
test
fs
inc
into
sbb
ss
add
xchg
jns
pop
pop
mov
or
out
mov
jp
cli
test
push
ret
movsl
xchg
pop
mov
repz
xchg
popf
std
je
mov
lahf
mov
jl
pop
in
lock
faddp
shrb
pop
cltd
out
loop
inc
cli
jl
lret
pop
int3
pop
cs
mov
add
rclb
push
jne
mov
pusha
jns,pt
push
cmp
out
mov
pop
sub
cli
ss
pushl
xchg
sbb
data16
sub
cmp
pusha
hlt
out
les
fwait
mov
sub
pop
cmp
cwtl
sti
sub
or
dec
sub
sub
or
mov
adc
enter
repz
int
cs
adc
and
adc
cmp
mov
outsl
js
gs
mov
negb
fimuls
cmpsb
mov
repz
cmp
test
cmc
inc
cmpsb
mov
movl
icebp
loop,pn
cld
mov
sbb
jns
dec
sbb
testl
push
addr16
push
and
lret
in
lods
cmpsb
ljmp
out
dec
imul
ja
outsl
or
xor
ret
adc
xchg
xor
jle
iret
and
pushf
mov
pop
jg
mov
mov
cmp
das
cmp
test
adc
out
dec
mov
cs
pop
pushl
push
jl
mov
out
aad
mov
xor
jno
shrl
out
push
inc
dec
push
inc
cmpsb
dec
jmp
das
inc
inc
xor
or
gs
pop
and
fcoms
into
push
in
filds
xor
rcrl
add
and
das
mov
outsl
and
ret
mov
dec
jl
jl
push
mov
mov
addr16
pop
or
lock
and
sub
adc
mov
push
dec
push
cld
fisubrs
xor
adc
and
cld
push
mov
mov
dec
into
adc
mov
pop
jge
rclb
sbb
ret
lahf
mov
ljmp
popa
and
cwtl
adc
mulb
adc
push
rcl
aaa
ljmp
loop
jbe
jbe
aam
fstpt
pop
inc
jns
mov
inc
rcrb
test
adc
jmp
fstl
scas
pop
xchg
sbb
push
fcompl
insl
inc
cmp
scas
sti
mov
sbb
movsl
add
jo
mov
xchg
fstps
stos
adc
and
add
popf
xor
jle
or
mov
lahf
insl
push
ja
insb
push
adc
lret
loope
push
cmp
sub
js
adc
fisttpl
mov
push
lret
test
push
or
out
push
gs
out
sarl
xchg
add
add
sub
bound
push
mov
sub
jne
mov
xchg
jmp
xor
jnp
fcmovne
add
jne
pop
or
inc
mov
jns
xchg
xchg
adc
jp
jns
negb
shr
mov
dec
mov
inc
dec
shrl
inc
sub
cmpsb
fsubrl
call
mov
xchg
xor
mov
dec
bound
aad
jmp
test
mov
test
jae
pop
pushf
sti
xchg
notb
xchg
and
aas
neg
stos
xor
mov
div
pop
outsb
addr16
lods
in
jle
and
cmpl
imul
xchg
push
xor
imul
ljmp
jb
xchg
xor
jns
lock
add
stc
mov
or
mov
rcrb
aad
mov
or
and
loopne
jmp
cs
push
int
sub
ljmp
scas
dec
cmp
xchg
rol
sub
pop
gs
test
lea
dec
movsb
loopne
mov
in
subl
push
dec
fs
popa
xor
push
jnp
add
mov
sub
aam
loopne
add
subl
push
xlat
test
dec
xchg
fistpl
and
fstl
out
test
mov
lods
cmp
stos
dec
imul
rcrl
out
jns
xor
arpl
push
inc
ja
popa
cmp
sub
sbb
push
mov
mov
gs
jp
xchg
or
inc
fldln2
ja
in
cmpsb
and
mov
lret
or
imul
ss
push
mov
add
sbb
fdivrl
das
push
nop
sbb
and
ja
fs
sub
int
in
and
adc
xor
nop
popa
pop
pop
dec
lret
in
icebp
jbe
cmp
out
call
mov
add
dec
mov
int3
daa
ficompl
out
clc
cmp
fisubrs
mov
mov
test
mul
push
pop
jns
or
fnstenv
ret
fsubr
aaa
sbbb
pop
xchg
lods
imul
add
and
xor
mov
mov
inc
test
push
out
xor
and
je
sti
adc
sti
pop
mov
pop
cwtl
dec
push
cmp
hlt
js
cmp
imul
or
cmp
pop
in
adc
cmpb
and
push
ds
fcoms
movsl
adc
mov
sub
cmp
popa
out
je
fs
lock
mov
int3
fldl
clc
push
ljmp
int
outsb
sbb
inc
add
mov
mov
xlat
cmp
push
mov
inc
aad
xor
push
jmp
cmp
aaa
pusha
jbe
loop
nop
clc
mov
push
in
movsb
sbb
cmp
outsl
lcall
int
cmp
mov
dec
es
in
cmp
lds
into
nop
xchg
mov
xchg
shlb
dec
fidivs
mov
mov
inc
cmp
js
lea
and
lods
lods
sahf
add
cmp
decl
and
loopne
mov
lret
leave
stos
aas
mov
cmpl
in
insb
adc
bound
fucomip
popf
fdivs
fbld
addr16
pop
mov
in
mov
mov
shlb
push
loope
inc
test
pushf
inc
in
or
inc
inc
xor
xor
mov
jnp
adc
sub
mov
mov
test
push
test
das
push
fcoms
dec
inc
cwtl
shlb
aas
sbb
arpl
dec
add
andl
mov
sbb
in
cwtl
sub
xchg
jno
cmp
fisubrl
cld
lret
lds
add
orb
sub
enter
cmc
jp
dec
pushf
push
inc
jbe
sbb
dec
push
sub
xor
mov
shll
pushf
xor
add
arpl
fmul
sub
jl
cwtl
rcrl
inc
sbb
stos
pop
imul
out
pop
xchg
jno
xchg
push
inc
dec
jl
inc
lods
shll
cmp
subb
sbb
lods
cmc
dec
ds
idivl
in
mov
aam
dec
mov
mov
push
jno
mov
jl
sti
sub
mov
lret
and
rcl
cmp
adc
mov
pop
pop
and
test
jp
xor
jmp
test
mov
rcrl
inc
mov
lea
cli
data16
sbb
add
jae
cmp
inc
addr16
dec
cmp
aam
cwtl
add
test
sbb
insb
pop
jb
push
cltd
push
out
mov
xchg
mov
sarl
cmp
popa
sbb
push
pop
pop
cmp
push
out
cmc
cmp
mov
cmpsl
je
les
xchg
insl
push
fidivs
sub
lea
loope
call
push
adc
jbe
xor
inc
popf
xchg
sbb
push
icebp
mov
pop
cmpsl
add
mov
cwtl
sub
rcl
cwtl
inc
inc
out
adcl
stc
loope
mov
lret
push
xchg
mov
into
pop
sub
insb
mov
cmovno
out
aam
cltd
test
mov
cmpsl
adc
inc
lcall
ljmp
sub
fsubl
inc
in
pop
aaa
mov
push
push
dec
subb
daa
stos
add
xchg
jb
adc
cmpsb
cltd
mov
adc
mov
rcrl
adc
mov
js
cwtl
insb
stos
push
into
lahf
imul
add
imul
pop
inc
lea
outsb
inc
shrl
loop
mov
jo
mov
aad
adc
xchg
arpl
incb
lock
xchg
mov
jg
jle
icebp
imul
mov
bound
div
inc
test
bound
mov
ja
addr16
gs
out
cmp
pop
es
hlt
imul
cmp
ret
adc
lds
or
dec
je
insl
mov
dec
mov
pop
jns
lea
or
pop
and
cmpsl
sub
nop
call
dec
mov
popa
mov
cmp
push
xchg
insl
cmp
stos
dec
ret
insb
cmp
jno
scas
in
js
sub
inc
into
xchg
jno
mov
aad
push
pop
inc
mov
add
adc
leave
clc
lret
jbe
fstp
movsb
sbb
jg
adc
jnp
mov
cmc
sarb
xorb
arpl
jmp
fs
mov
push
jl
xchg
sub
and
pusha
jg
mov
xchg
jg
sub
pop
jno
or
cmp
inc
xlat
hlt
fmuls
adc
jae
test
sub
adc
test
aam
sbb
cmp
movsl
sbb
cmp
inc
fstpt
hlt
push
addb
mov
mov
jl
outsl
lcall
into
lods
clc
js
dec
lods
mov
cmpsb
es
xor
and
mov
popa
inc
inc
arpl
pop
push
inc
insb
cs
inc
ds
inc
sbb
pop
cwtl
es
cmp
cmp
and
cmc
scas
mov
cmp
gs
mov
ljmp
pop
jg
scas
mov
mov
lods
popa
cmp
push
stc
mov
lret
mov
int
adc
in
mov
inc
scas
fdivrl
lods
mov
mov
dec
adc
and
call
and
inc
outsb
gs
repnz
cmc
jns
gs
mulb
in
add
mov
push
pop
inc
leave
add
daa
lret
loop
adc
mov
stos
adc
push
inc
xor
jb
cmpb
jb
jecxz
sahf
xor
cltd
push
sub
mull
in
pop
cmp
jmp
jno
or
mov
dec
gs
sub
push
stos
fld
mov
inc
jnp
sti
mov
icebp
and
mov
or
xor
or
repnz
jmp
cld
jo
push
add
and
dec
push
jbe
cmpsb
lahf
xor
jle
xchg
addl
aad
mov
cmp
fcoml
arpl
lods
push
adc
cmc
jle,pn
mov
mov
cmc
stos
jmp
or
pusha
jp
je
cmp
add
add
cltd
push
aad
ds
jns
push
pop
aas
aas
mov
mov
idivb
pop
or
xor
mov
dec
push
dec
xlat
cmp
fsubrp
mov
push
stos
and
or
add
loope
adc
mov
sub
clc
jo
jae
jbe
xchg
lds
mov
lods
fnsave
and
mov
jl
movsb
cmpsl
lock
aaa
push
and
pop
sbb
addr16
adc
jle
lcall
mov
jne
pop
xchg
sbbb
das
jbe
test
ds
mov
push
push
lret
sti
adc
jae
sub
inc
ret
jo
adc
adcl
pop
int3
fisubl
clc
xor
pop
mov
adc
add
jne
lahf
cmp
fisubs
popf
dec
cmp
out
movsb
adc
lahf
sbb
out
clc
stc
add
loopne
fistl
jmp
jge
xor
popa
jmp
fisttps
out
push
insb
inc
cmp
ljmp
sbb
mov
sbb
shrb
add
xor
mov
mov
out
pop
aam
sub
fcmove
push
fsubrs
mov
jbe
push
lret
js
cmp
xchg
xor
add
dec
xchg
jecxz
xchg
cmp
sbb
lret
fcoml
push
jo
sub
sub
int3
out
shlb
mov
popf
push
cmp
lret
xchg
jb
ljmp
dec
mov
sbbb
fs
mov
push
aam
fildl
ds
jbe
fnstsw
cld
je
or
test
fsts
add
and
jecxz
pushf
test
out
orl
sbb
jno
cmp
mov
cmp
cmp
ljmp
arpl
popa
sub
aas
cld
in
std
test
stos
mov
and
cmpsb
fdivp
mov
or
add
and
dec
adc
xor
mov
sbb
xor
xor
and
insl
mov
sahf
xor
movsl
lahf
cltd
sbb
jb
pop
jge
imul
lods
movsb
pop
jmp
dec
push
mov
repz
aas
aas
adc
sub
or
dec
xchg
arpl
sub
push
clc
jo
mov
dec
loop
popa
dec
mov
mov
xchg
movsl
sbb
lahf
mov
pop
pop
push
imul
xor
jg
nop
jnp
hlt
testl
inc
int
mov
sarl
pushf
jno
mov
jp
cmp
jns
das
data16
imul
mov
fcmovnbe
subl
insb
pusha
sbb
cmp
adc
test
xchg
xlat
mov
clc
mov
outsb
ja
fdivl
lcall
sbb
stc
roll
sbb
repz
fdivp
pop
cld
sti
jae
cmpsl
push
aas
in
push
and
xchg
stc
adc
add
xor
insb
fsts
dec
in
js
int3
popa
pop
and
in
cmc
dec
lods
push
stos
fnsave
jmp
clc
aam
lret
or
repnz
mov
in
in
inc
sub
inc
jecxz
les
rcr
fdivs
and
int3
out
adc
jnp
pop
es
enter
out
iret
js
inc
repnz
push
or
int
mov
pop
popf
shrl
or
lods
inc
mov
jmp
xchg
add
fldt
adcl
out
mov
push
push
shr
test
sarl
add
fwait
rol
in
push
jl
insl
mov
cmc
adcl
in
rorl
addr16
cmp
xlat
push
mov
mov
cli
mov
pop
xor
out
pusha
popl
sbb
es
adc
mov
dec
nop
jno
outsl
inc
add
mov
mov
pop
push
cmp
icebp
xchg
fdivp
lcall
dec
mov
add
addr16
mov
lds
ds
jmp
pop
and
and
bound
stos
cmpsl
xchg
outsb
dec
xchg
lret
in
push
es
mov
inc
dec
jbe
push
test
xchg
sub
rorl
jno
insl
lods
icebp
scas
imulb
dec
dec
ror
inc
sahf
add
rclb
mov
xchg
inc
push
sbb
push
sub
call
mov
adc
jl
cmp
sti
js
stos
add
mov
cmpsl
mov
adc
shll
xchg
jnp
and
sarb
into
and
aaa
inc
pop
sbb
push
jns
lods
ljmp
xchg
lcall
or
xchg
pop
xlat
ficoms
pop
shl
mov
push
addb
mov
dec
lahf
aas
fcomip
je
stc
xchg
int
sbb
mov
imul
sub
xor
jbe
lret
dec
xor
add
and
push
xlat
lds
mov
mov
pusha
stos
cld
sub
xchg
lahf
stos
inc
cmc
das
std
inc
std
xchg
bound
xchg
test
imul
push
jo
rclb
dec
std
sbbb
and
xchg
pop
inc
sbb
jle
mov
stc
dec
adc
sbb
notb
int3
sti
cmp
scas
push
or
jecxz
mov
fwait
xor
xor
out
shll
dec
into
push
popf
sub
fistpll
cmp
movsb
mov
adc
test
xchg
inc
jmp
push
pop
sarb
lds
mov
leave
mov
pop
sbb
cmovnp
std
lods
push
outsl
ret
std
outsl
in
xchg
push
ret
lock
stos
dec
imul
jl
std
outsb
je
imul
stos
mov
xor
lds
jl
neg
imul
pop
and
xchg
stc
jg
mov
stos
and
fs
js
mov
or
test
cld
stc
cmp
enter
outsb
sbb
adc
jne
mov
lret
add
fidivrl
addr16
in
pop
incl
lahf
test
and
cmpsb
xchg
xor
sbb
jmp
adc
or
test
std
into
rcll
je
cmpsl
mov
add
adc
dec
popa
ja
mov
icebp
decl
scas
leave
mov
mov
nop
xchg
push
addr16
ficomps
loopne
mov
imul
inc
push
adc
mov
cmp
aaa
jge
test
pop
int
not
test
sbb
adc
sarb
out
stos
mov
shll
push
movb
mov
jl
mov
or
incb
dec
dec
call
pop
pop
outsb
and
or
mov
addl
cld
and
xor
mov
lret
divl
jecxz
push
mov
test
jno
in
inc
push
xchg
pop
aas
pop
jp,pt
mov
cmp
scas
push
mov
or
test
lcall
push
stos
mov
lret
lcall
cmp
scas
out
in
push
xor
inc
cli
ss
mov
orl
stos
xor
das
repz
dec
inc
mov
loope
out
cltd
cwtl
arpl
sbb
cmp
mov
lret
rorl
jno
lock
out
pop
mov
dec
mov
pop
adc
movsl
fistps
mov
mov
xchg
dec
lcall
icebp
in
xor
pop
and
pop
cmp
test
movsl
add
mov
mov
xor
mov
adc
jg
data16
pop
lds
adc
or
adc
dec
fistl
pop
mov
pushf
lods
add
fwait
push
cli
and
jecxz
and
push
dec
aad
cli
xchg
stos
xchg
mov
out
pop
pop
loope
pop
in
mov
xor
xchg
addb
les
pop
jg
xchg
inc
lcall
arpl
cmp
cwtl
mov
popl
cmp
mov
in
mov
andl
push
mov
xchg
insb
cmc
sub
jno
sbb
mov
cld
dec
mov
and
je
xchg
data16
push
or
adc
shlb
pusha
pop
lds
add
xchg
cmpsb
inc
icebp
mov
leave
stos
cmp
jg
cli
fisttps
test
lock
xchg
or
cmc
repnz
unpcklps
fbstp
mov
out
or
xor
push
sbb
and
sub
aad
mov
ljmp
pusha
in
loopne
inc
mov
jns
aam
jb
cmp
je
in
addr16
movsl
adc
cwtl
pop
mov
xlat
hlt
adc
mov
pop
je
outsb
lahf
imul
daa
cmpsb
icebp
sub
jle
sbb
ja
cltd
push
arpl
sbb
xor
pop
cmp
cli
sub
ret
jle
bound
push
or
mov
imul
test
mov
push
fdivs
cli
sub
daa
fistpll
mov
mov
dec
mov
xor
scas
daa
iret
les
repz
stos
aad
pop
mov
dec
mov
xor
dec
nop
movsl
scas
dec
ficoml
push
clc
xor
es
dec
push
and
les
push
xchg
clc
xor
mov
popf
inc
mov
pop
xor
sbb
aas
mov
je
dec
repz
jnp
cs
inc
sub
jmp
sub
ds
add
dec
leave
int3
pushf
mov
cmp
arpl
in
out
bound
lods
loope
pop
gs
push
or
int
andb
addr16
or
and
dec
mov
mov
pop
rorb
out
mov
sub
adc
rcl
xchg
sub
insb
popf
stos
lcall
mov
inc
dec
or
nop
mov
je
jno
jbe
arpl
push
je
test
ljmp
pop
mov
hlt
into
mov
fdivr
clc
mov
stos
into
data16
mov
leave
testb
out
test
sub
stos
push
dec
add
test
lret
fldl
mov
js
cmp
stos
aam
cmp
mov
mov
mov
and
mov
sub
or
jl
orb
jno
je
pop
xlat
daa
push
mov
dec
dec
sub
lcall
hlt
xchg
mov
lcall
jl
mov
pop
dec
andb
jo
dec
adc
lods
mov
xchg
ljmp
mov
imul
dec
jb
cli
ret
ret
xchg
adc
into
ficomps
and
jg
and
data16
push
dec
mov
lret
out
sub
out
lods
pop
cmp
dec
cmp
testl
push
mov
aad
pop
lahf
repnz
das
std
mov
sti
adc
xchg
xor
inc
jp
sub
loope
pop
test
cmp
sbb
lds
push
or
jno
sub
lds
and
dec
mov
pop
mulb
cmp
push
mov
cmp
cmp
sub
cmp
fisttps
add
and
push
repnz
repz
mov
in
fsts
cmpl
mov
sbb
in
push
push
push
dec
loopne
cld
sahf
and
push
jns
test
enter
in
pop
imul
jg
xchg
xchg
lcall
adc
aad
mov
shlb
xor
inc
fmull
sbb
sub
sbb
mov
fdivs
adc
aas
pop
pop
and
add
adc
cmp
sahf
decl
sbb
adc
cmp
jecxz
pop
in
push
sarl
lds
sub
mov
lock
cmp
jb
sub
lods
popl
cmpsb
fwait
lret
es
rolb
jo,pt
mov
das
decb
xchg
and
fwait
jmp
loop
mov
cld
pop
cmc
add
dec
ljmp
insl
lahf
loope
sbb
mov
push
sbb
inc
dec
xchg
push
aaa
adc
xchg
xchg
addl
push
inc
xor
jle
sub
mov
push
jb
or
jecxz
and
push
push
dec
xor
add
adc
mov
cmp
push
in
pop
pushf
inc
jo
stos
sbb
scas
call
gs
push
bound
sbb
lock
push
add
bnd
and
cmc
sti
or
aas
pop
add
inc
inc
pop
arpl
pop
jg
mov
cmp
xchg
or
mov
mov
scas
lret
cmc
rcrb
loop
cli
mov
mov
mov
xchg
pop
add
jmp
iret
scas
inc
cmp
inc
test
cli
push
sub
sub
sub
adc
cs
dec
mov
or
dec
jae
xchg
in
push
mov
mov
lahf
or
jp
stos
nop
sub
push
clc
inc
xchg
int3
inc
pusha
mov
sub
lods
repz
jg
stos
or
mov
jge
lahf
add
mov
dec
adc
mov
mov
jmp
cmpsl
xchg
sub
pop
jnp
lret
movsb
movsl
clc
push
movsb
xchg
or
ja
and
lods
aas
int3
in
mov
mov
pop
out
push
mov
mov
outsl
imul
jbe
cmp
xchg
stos
xchg
test
subb
jne
xchg
scas
mov
fisubs
out
mov
out
outsl
push
scas
cmp
adc
fcomps
xlat
and
push
inc
push
push
jo
in
lods
lea
lret
pop
mov
push
insl
ret
cmp
pop
shll
repz
js
mov
jmp
shll
test
jge
push
imull
inc
arpl
mov
or
insb
fisttpll
mov
sub
aaa
add
add
adc
push
or
inc
inc
lret
cmpb
fisubl
jns
push
xchg
push
out
cmp
cmpsl
xchg
jmp
push
adc
std
fsubrl
addl
into
jmp
cld
mov
jg
jae
xor
test
lods
mov
js
test
repnz
jne
xchg
pop
mov
mov
lock
push
idiv
jecxz
mov
inc
mov
mov
mov
jns
stos
push
pop
xchg
lcall
mov
cmp
sub
mov
mov
es
testl
out
fwait
cmc
xchg
sbb
js
stos
jp
inc
xor
rcr
lret
and
outsb
cmpsb
popf
cli
cmp
push
cmp
sbb
cmp
mov
test
test
cmp
mov
inc
inc
in
jmp
or
ret
or
icebp
mul
xlat
jmp
xor
mov
xchg
mov
mov
jo
cmovge
add
xor
sarl
sbb
rcr
aam
fisttpl
insl
adc
divl
pop
js
jnp
pop
fnstcw
cli
adc
jle
int3
lcall
inc
and
cltd
xchg
in
data16
lea
lcall
and
hlt
mov
lret
push
clc
arpl
sbb
stc
out
cmp
cwtl
pop
fadd
mov
add
out
jns
bound
clc
imul
nop
aas
jbe
div
cwtl
mov
call
enter
dec
shr
mov
cmp
out
and
out
mov
jb
lret
cmpsl
pop
adc
in
sarl
or
cli
xchg
int3
mov
jne
ja
mov
ror
sub
movb
mov
fwait
aas
mov
jmp
daa
pop
jb
stos
mov
ds
pop
ds
xchg
int
mov
cli
int
jle
lock
repz
imul
loopne
lds
test
inc
and
jle
push
testb
addr16
mov
mov
outsb
daa
mov
dec
push
mov
xchg
adc
inc
lea
dec
dec
cmp
pop
addr16
jne
int3
dec
lods
pop
cld
mov
lret
adc
push
imul
pop
js
jg,pt
sub
and
sub
movsb
sub
jle
cmp
cli
jnp
outsl
outsb
dec
fld
push
out
sti
mov
mov
fmull
clc
imul
out
cmp
jae
cmp
cmp
sub
add
ja
dec
js
fistpll
push
cmp
fldt
mov
pop
pop
or
fcom
arpl
push
cltd
pop
and
es
and
pop
les
cmp
test
repnz
push
mov
add
daa
jne
out
insl
dec
push
fistpl
xor
in
orb
inc
inc
sti
out
icebp
mov
lret
sub
cmpsl
add
xlat
or
mov
cmc
cmpb
lea
jp
sub
mov
push
loope
cmp
add
dec
xchg
bound
inc
jnp
sbbl
add
jne
out
scas
and
inc
sahf
mov
imul
ja
xchg
and
repnz
hlt
and
jmp
and
fwait
in
pop
rcll
test
rolb
sbb
movsb
dec
lock
scas
call
int3
mov
lahf
inc
js
xor
mov
addr16
mov
fidivl
inc
sti
adc
movsb
mov
rcl
mov
outsl
bound
xchg
jo
sbb
push
movsl
inc
adc
imul
in
lahf
xchg
daa
lods
mov
cmp
ss
enter
sub
push
insl
rclb
bound
cmp
clc
jmp
stc
xchg
mov
jecxz
mov
jne
or
daa
sbb
stc
mov
xor
inc
lcall
jp
mov
sti
inc
out
hlt
pop
sbb
adc
mov
in
bound
repnz
mov
push
repz
fstl
sbb
and
outsb
scas
xchg
clc
cmp
repz
lcall
shr
lds
sub
jo
sub
movsl
mov
add
mov
jg
sub
sbb
xor
fwait
dec
fdivl
lock
push
cmp
adc
insl
daa
mov
xor
clc
insb
pop
sbb
test
je
or
xchg
adc
sti
test
ret
imul
out
incb
mov
push
movsl
movsb
fs
es
mov
dec
jle
dec
xor
stos
sub
adc
push
inc
mov
add
stos
add
jmpw
movsl
insb
filds
pop
scas
push
and
dec
dec
cmp
sbb
out
xchg
inc
leave
cli
push
rorl
jge
fs
mov
xlat
xchg
inc
push
or
add
fwait
ja
js
mov
jnp
clc
dec
into
rolb
out
fildl
push
imul
add
js
mov
out
mov
mov
or
ficoml
inc
das
jle
pop
lahf
jo
fmull
rcrl
cmp
in
sub
in
dec
mov
call
inc
inc
pushf
push
mov
xor
pop
hlt
test
sti
inc
movsb
cmp
dec
adc
adc
outsb
lahf
cltd
repz
in
or
repz
fcoms
popf
and
dec
lods
int3
testl
sbb
mov
sub
mov
leave
ds
mov
out
shll
push
jae
in
scas
stos
xor
mul
imul
in
ja
and
jmp
push
repnz
aam
jne
scas
in
popa
loop
xchg
negb
add
pop
sbb
push
inc
cmp
xchg
jno
inc
jae
xor
bound
xchg
jp
test
jae
mov
sti
xchg
imul
outsb
dec
lret
mov
lods
fwait
pop
pop
insb
lret
xor
mov
fdivr
pop
and
icebp
sbb
mov
loop
adc
sub
roll
xchg
add
cmp
out
add
fcomps
pusha
pop
push
shll
sub
js
or
and
mov
dec
adc
jne
mov
aam
jp
les
and
stos
and
icebp
sbb
dec
sub
push
enter
adc
mov
lret
or
shr
lea
sti
roll
jae
inc
xlat
movsb
dec
sarl
in
add
arpl
in
jne
shrl
cmp
xchg
sarb
add
cmpsl
sub
int
or
mov
shrb
imul
lods
movl
hlt
repnz
mov
lods
pusha
test
addr16
mov
and
pop
pop
rorl
mov
mov
jb
pop
fs
jno
mov
jbe
dec
test
cld
mov
jp
insb
dec
inc
repnz
jb
sti
gs
jbe
popa
outsb
ret
cli
sbb
mov
sub
icebp
dec
fstpl
cltd
loop
mov
sbb
xorb
cmc
adc
pop
gs
es
cli
insb
xchg
pop
jle
shrb
rcrb
popf
cwtl
dec
push
jmp
lods
dec
add
in
lods
adc
inc
out
in
daa
loope
mov
push
mov
stos
sub
mov
arpl
and
test
scas
push
push
call
cld
fidivrs
jp
pusha
adc
dec
pop
cmp
adcl
dec
data16
jmp
adc
in
xchg
cmp
scas
test
jmp
cld
into
out
shlb
pop
repnz
xchg
add
mov
ret
mov
add
sbb
or
add
adc
pop
push
negb
addr16
jnp
mov
repnz
pop
cwtl
xchg
cmp
rol
jp
xor
adc
leave
add
bound
arpl
xor
int
ret
and
int
add
cltd
std
jne
sbb
pop
jmp
mov
xchg
mulb
ljmp
mov
jo
and
cmc
mov
stc
add
in
sahf
ds
jnp
rcrl
stc
popf
call
xor
push
mov
cwtl
pop
stos
sbb
xor
pop
into
dec
and
fisubrl
cli
das
loope
push
jo
ja,pn
int
dec
pop
sub
sub
push
jnp
and
clc
faddl
loopne
sbb
imulb
pop
add
adc
in
sbb
cmp
test
mov
adc
cmp
jb
push
mov
hlt
sbb
xor
lods
popa
ret
lcall
jp
push
imul
or
cmp
out
jbe
jecxz
cmp
fsubrl
dec
repnz
mov
mov
pop
mov
push
push
shll
mov
ds
cli
inc
mov
fcmove
inc
push
adc
pop
dec
ss
push
lds
dec
out
dec
add
adc
dec
add
adc
jp
nop
ret
rorb
dec
pop
sarl
mov
jle
jmp
call
imul
xor
movsl
jle
and
mov
dec
cwtl
and
in
cmpb
js
in
mov
sub
lods
dec
icebp
mov
stc
or
or
jle
cld
in
push
and
into
cmp
xchg
aad
pmullw
add
decl
push
or
pop
fs
loop
repnz
into
nop
cmp
or
cmp
push
sbb
mov
data16
mov
pop
mov
or
jb
cmpl
jno
test
sub
jp
push
clc
in
xor
add
mov
mov
shlb
in
cwtl
out
daa
pop
testb
leave
int3
xchg
les
lock
lret
mov
jle
stos
jb
sbb
mov
xorb
xor
and
jge
loope,pn
mov
rorb
in
xchg
mov
jnp
cmc
andb
sub
outsl
pop
dec
ficoml
mov
loop
in
pop
cmp
insl
pop
lret
stos
in
push
jbe
pop
shr
xchg
dec
xor
mov
hlt
loop
or
push
sti
out
dec
out
repnz
cwtl
negl
pop
out
sti
push
ret
inc
jge
ret
mov
jo
add
sbb
int
sti
cwtl
jnp
jmp
add
mov
std
fdivr
out
jg
movsb
and
mov
add
shlb
adc
mov
loop
push
or
dec
mov
in
sarb
repz
lahf
xor
out
lock
push
fsubrs
loope
add
stos
pop
jbe
pop
add
cmp
jae
dec
sub
in
push
arpl
add
or
push
into
std
iret
or
xchg
outsl
mov
dec
lea
xchg
imul
push
or
imul
scas
iret
fiaddl
andb
pop
push
nop
fcmovnu
repz
cltd
outsl
pop
int
sbb
inc
shl
or
add
inc
cwtl
or
mov
mov
stos
fidivs
test
push
mov
in
test
push
rcll
mov
clc
sbb
push
mov
inc
sub
mov
sub
push
xor
inc
mov
call
clc
xchg
cmp
imul
mov
adc
sahf
mov
and
lods
cmp
in
ret
xchg
pop
push
ret
mov
neg
js
stos
test
lock
mov
out
mov
incb
pop
cmp
cmp
sub
push
add
mov
int
or
lret
sahf
cmp
mov
cwtl
add
cmpsb
mov
mov
push
mov
and
sbb
popf
push
in
xor
jecxz
adc
push
push
mov
stc
cld
shrl
jg
inc
pop
movsb
daa
stc
stos
mov
ficoms
clc
sub
daa
mov
xor
test
les
dec
mov
or
out
fmuls
pop
xchg
ror
test
lahf
outsb
hlt
lods
adc
out
mov
mov
ss
dec
mov
sbb
add
sahf
ret
mov
and
add
mov
movsl
mov
xor
in
aad
push
xchg
xchg
add
xor
and
add
pop
clc
mov
cli
inc
in
xchg
pushf
sbb
jp
popa
pop
fdivs
sub
lods
stc
sbb
in
push
inc
fcmovb
popf
enter
mov
sbb
aad
es
in
test
pop
xchg
pop
xor
jbe
jge
add
sub
icebp
inc
test
sub
aam
jle
movsl
das
mov
adc
dec
and
pushf
mov
nop
mov
cld
test
loopne
pop
jp
fldcw
cli
leave
add
inc
jns
mov
inc
and
lods
negb
negl
psubusb
ja
pop
sar
or
imul
lock
hlt
in
or
ja
shrl
aam
jne
js
scas
aas
out
icebp
lcall
sub
xor
lock
push
faddl
leave
movsb
fs
add
push
xorb
mov
push
dec
push
sbb
std
mov
and
xchg
jge
sub
sahf
cmpl
sub
push
idivl
js
ss
imul
out
mov
test
cmp
push
stos
or
ljmp
jmp
and
adc
xor
cmp
loop
pcmpgtb
add
or
push
pop
sarb
outsb
aad
cltd
cmp
inc
repz
push
push
movsb
sarb
movsl
aam
mov
mov
xchg
xchg
ss
shlb
pop
in
mov
fisttps
push
push
jecxz
push
cwtl
pop
pop
inc
jg
jle
iret
outsl
mov
inc
insl
push
push
dec
adc
stos
mov
mov
fsubs
sbb
push
ds
jno
pop
fistps
push
push
xor
xor
add
addb
or
mov
aam
dec
pop
push
adc
push
lret
or
jecxz
subb
push
dec
inc
fs
insb
in
dec
outsl
pop
js
sti
fmuls
in
outsb
xor
addr16
ret
or
mov
and
adc
aas
and
rclb
jg
push
je
jle
push
adc
popf
imul
aas
lcall
sub
cmp
outsl
mov
mov
jge
insl
cli
dec
incl
dec
and
lock
jae
cwtl
jmp
outsb
xor
push
jb
pop
cmp
sub
and
mov
add
mov
out
in
rorb
test
icebp
mov
sarl
les
es
jns
dec
insb
lea
outsl
xchg
test
mov
adcb
out
sub
inc
cltd
mov
sbb
test
add
or
cli
je
loop
push
out
push
outsb
jo
add
bound
adc
sub
inc
test
dec
xor
lret
testl
orl
xchg
cli
or
xchg
aas
cmp
notl
shlb
add
fs
or
or
mov
in
cmpsl
inc
bound
movsl
fsubrl
xor
aad
call
adc
inc
aam
xchg
mov
add
mov
mulb
lret
mov
xchg
push
lcall
cmp
adc
dec
pop
pop
inc
xchg
push
mov
sub
outsb
pushf
cmp
sub
mov
push
sbb
imul
pop
data16
or
xor
dec
fucomip
sub
push
jmp
mov
add
add
leave
ja
push
outsb
dec
push
test
xor
mov
imul
jae
filds
data16
fistps
int
sbb
fucompp
pop
adc
add
cmc
clc
popa
push
xor
in
cmp
push
fs
mov
mov
pop
nopl
loopne
stc
jp
mov
mov
or
test
lock
or
popf
mov
pushf
outsl
xor
dec
sbb
mov
lds
mov
add
ja
ds
into
push
out
sbb
inc
aaa
ret
cltd
jp
insb
sbb
or
push
addr16
repz
mov
ja
pop
adc
add
xchg
sbb
insl
adc
and
shlb
push
push
xor
dec
jmp
les
shrl
add
loop
out
aaa
adc
xor
fnstcw
adc
push
and
dec
dec
cmp
outsb
inc
aad
jbe
lock
adc
push
dec
sub
ret
jg
inc
xchg
pop
cld
add
jp
test
arpl
xchg
jecxz
push
mov
stc
sub
pop
and
or
cmp
sub
fbld
pop
inc
scas
push
cmp
movsb
mov
add
int
sub
adc
sub
push
or
js
xor
pop
jle
add
xchg
push
addr16
mov
jmp
xchg
outsl
or
scas
sub
add
mov
cmc
dec
pop
sbb
lea
mov
or
dec
mov
xchg
or
mov
add
mov
les
mov
mov
pop
xchg
mov
adc
into
jg
jne
fisubrs
cmp
arpl
imul
mov
divl
mov
arpl
inc
pop
aaa
sub
xor
adc
into
pop
outsl
and
xor
jno
loope
ret
xor
std
cwtl
or
test
push
pop
leave
cmp
inc
ja
push
xor
pushf
imul
repz
mov
cmp
mov
and
and
mov
and
inc
or
cmp
sub
fstpt
and
mov
pusha
jecxz
mov
in
xchg
hlt
lods
out
xor
fwait
pusha
int
addr16
push
mov
and
jle
repnz
sbbl
jmp
jb
loope
pop
jp
push
shl
ret
add
mov
in
jmp
inc
sahf
shlb
mov
test
sub
cmc
push
movsb
cmpsb
hlt
loopne
pushf
or
jnp
add
int3
dec
xchg
in
lods
cmp
nop
or
lcall
aas
and
cltd
add
sbb
jo
adc
dec
adc
cmp
mov
cmp
dec
loopne
pop
mov
dec
or
push
pop
fimull
mov
leave
sbb
rcl
or
lods
or
aaa
iret
daa
imul
loop
mov
mov
movsl
sahf
add
out
add
mov
dec
or
xchg
xchg
pushf
jle
or
iret
stc
jp
out
cld
cmp
lods
mov
and
outsb
add
jecxz
push
or
data16
inc
mov
inc
or
ds
sub
mov
shr
fsubrs
fcoml
jle
scas
hlt
aaa
fstpt
push
lock
adc
and
push
in
lcall
mov
out
sub
divb
xchg
das
icebp
fbld
stc
and
add
mov
mov
push
xchg
pop
xchg
sub
daa
ljmp
int3
filds
mov
shl
jne
int
inc
mov
inc
ds
dec
adc
mov
push
cmpsb
stos
aaa
scas
add
sbb
adc
js
and
wrmsr
shrb
jl
in
adc
jmp
pop
test
adc
mov
cld
dec
js
imul
pop
push
movsb
mov
fwait
or
push
movsb
mov
jns
loope
lea
sub
xor
cmp
push
adc
subl
fists
adc
popf
cltd
das
ljmp
jb
ds
cmp
xlat
xlat
mov
je
inc
xchg
pusha
out
out
xchg
or
push
insl
xchg
jne
fmulp
push
std
mov
lahf
push
rcl
jne
jno
out
push
dec
jp
adc
mov
jp
sti
mov
pop
jns
push
jp
test
mov
jb
test
push
in
aad
je
push
sub
aaa
cld
popf
rclb
data16
pop
in
sub
add
stc
xor
test
rcl
ret
jo
mov
fbstp
outsl
pop
jne
or
add
jmp
mov
je
sub
inc
xor
daa
dec
idivl
push
jmp
pop
or
push
push
loope
aam
repz
pushf
pop
xor
pop
jge
mov
cmp
pop
lcall
pop
hlt
or
xorb
test
les
sub
jbe
mov
loope,pn
add
aam
mov
pop
or
mov
movsl
int3
xchg
cs
push
sbb
lea
jl
mov
rcl
rol
cmp
cmpsl
ficoms
scas
dec
dec
push
jge
xor
in
pop
mov
inc
mov
fsubr
imul
fidivs
cmp
in
hlt
add
pop
inc
inc
inc
test
lods
insl
clc
bound
push
add
inc
xchg
call
mov
pop
mov
or
pop
mov
inc
aad
jae
orb
cmp
out
jecxz
mov
or
mov
jne
aaa
cs
pop
sti
dec
adcb
ljmp
add
xor
pop
shl
push
inc
adc
jo
inc
pop
xchg
stos
cwtl
cltd
lahf
cmp
dec
jle
cmp
js
and
cs
inc
fbstp
dec
pop
nop
lcall
ret
xchg
mov
sahf
pushf
dec
sti
xchg
pop
loopne
imul
jp
push
xlat
pop
jle
in
pop
jns
mov
mov
out
mov
idivl
jecxz
jle
fwait
push
cmpl
adcl
es
push
mov
adc
pushl
imul
ret
int3
dec
mov
mov
add
rolb
aaa
sahf
add
lret
cmp
pop
xor
imul
pop
ret
xchg
mov
jg
stos
add
ss
scas
and
movsl
push
cmp
inc
clc
aad
jl
ret
in
in
lcall
mov
dec
pusha
mov
mov
test
adc
call
insb
lcall
xor
push
enter
add
adc
and
push
xor
pop
sub
pop
stc
out
test
xchg
xchg
push
push
and
punpcklwd
dec
fisttpll
movsl
sub
cmp
iret
out
loope
ljmp
sub
cmp
test
in
jnp
fsubrs
aas
jne
inc
pushf
inc
add
cmp
add
cli
mov
jo,pn
jmp
mov
lret
xchg
cwtl
lahf
fiadds
xchg
repz
jge
stos
mov
add
add
push
insb
rcrl
xor
dec
xchg
inc
adc
neg
imul
ss
push
int3
push
push
outsl
fcmovb
jecxz
adc
test
push
mov
xchg
gs
out
sbb
or
lds
add
popf
test
cmp
jle
jg
lods
cmp
cmp
xor
mov
mov
sub
loop
sbb
shlb
dec
mov
loope
test
in
xlat
pop
push
js
std
test
dec
xchg
clc
sub
stos
idivb
fidivl
lea
jae
loope
stos
in
mov
loope
jno
push
xchg
jecxz
nop
or
inc
cmpl
mov
pop
fs
jno
pop
adc
movsl
inc
push
mov
mov
inc
dec
lret
aam
in
jne
xchg
xor
xchg
adc
jno
daa
adc
xchg
test
mov
fwait
and
xchg
insb
sti
pushf
inc
adc
bound
mov
rcll
inc
sbb
movb
jnp
sub
jmp
add
adc
fstl
jbe
aas
shl
outsl
xlat
sahf
jge
pop
xchg
jne
shlb
test
movsb
outsl
dec
cmp
and
jb
addr16
adc
push
int
cwtl
dec
mov
sti
or
repnz
mov
sub
loopne
mov
lret
xor
orl
sub
jg
push
call
sbb
xor
inc
inc
push
pop
mov
hlt
dec
pushf
jp
jecxz
movsb
sahf
mov
mov
sbb
xchg
sub
push
or
and
mov
mov
stos
pop
mov
add
add
enter
xchg
lods
call
repnz
push
scas
sti
jo
movsb
fisubrl
and
cmp
pop
addr16
ds
jmp
push
ret
mov
int3
mov
add
test
mov
inc
std
and
mov
jecxz
cmp
test
fs
sahf
mov
inc
mov
shll
mov
push
cld
pop
mov
jbe
lret
pusha
pop
jecxz
cltd
fcoms
into
and
out
rcl
or
and
or
mov
xor
inc
and
xor
loop
cmpsl
jne
scas
adc
imul
jo
rolb
in
or
fldl
test
pop
push
push
push
xchg
xor
shll
dec
ret
dec
imul
lahf
cld
xor
inc
jae
insl
xor
push
insl
pop
arpl
cmp
jle
cmp
cld
inc
inc
lds
pop
in
jbe
cmc
das
cs
fsin
mov
mov
and
fists
dec
xchg
stos
ret
movsb
mov
and
orb
push
xchg
mov
repz
dec
add
into
inc
sbb
add
mov
xchg
or
mov
inc
dec
cli
je
fcompl
decb
dec
add
mov
dec
sub
data16
incl
cmp
dec
fistl
ss
pop
shll
jmp
push
mov
inc
push
fwait
xchg
xor
xchg
test
inc
mov
push
xchg
push
pop
movsl
iret
xchg
pcmpeqb
mov
cli
cmp
push
mov
dec
aaa
add
rcl
mov
cmp
sub
cltd
or
inc
jmp
inc
jbe
fdivrs
sti
fbld
shlb
dec
sar
mov
int
sti
mov
or
fneni(8087
aas
in
jb
addr16
cwtl
jbe
bound
pop
adc
imul
xor
mov
pop
mov
mov
mov
sbb
scas
js
sub
filds
stos
or
push
and
xor
pop
jmp
pop
jno
lds
inc
jo
pop
mov
cmp
ss
add
and
xor
in
fwait
xchg
cmp
aas
out
push
inc
add
popa
and
add
jg
add
enter
mov
dec
add
fwait
rcll
test
loopne
dec
jo
in
lods
xchg
push
cmp
popf
inc
cmpsb
inc
jg
call
sub
inc
adc
jecxz
push
aas
movsl
ljmp
js
push
lds
fisttpll
sbb
push
push
add
je
insl
std
mov
fidivrl
or
add
outsl
je
adc
push
call
in
sub
pusha
lods
adc
cmp
movsl
rcl
pop
popl
imul
dec
subl
sub
push
arpl
jp
insb
sbb
lcall
adc
stos
mov
or
stos
das
fs
and
aam
pop
cltd
fcomps
je
loopne
jg
cld
out
ffree
aad
xchg
sbb
js
test
addl
push
dec
addb
sub
jle
xor
cmc
pop
aam
fdivl
mov
loopne
cmp
shrb
jg
lcall
sub
ficompl
sbb
mov
addl
loop
inc
cwtl
subl
vmread
adcl
mov
test
jp
loopne
sub
je
cwtl
or
dec
loopne
out
push
fdivrl
outsl
push
sub
enter
cmp
icebp
dec
dec
in
mov
insl
je
cmp
iret
xorl
inc
jecxz,pt
pop
movsb
push
cltd
mov
jg
push
pop
ljmp
fdivs
jne
inc
das
in
mov
jo
scas
test
cmp
repz
cmp
ret
push
outsb
cmpsb
mov
movsl
ja
xor
push
ret
outsb
into
cmp
dec
pushf
mov
push
repz
cmp
push
xchg
inc
lret
stos
jle
sbb
imul
xor
nop
pop
jne
jge
dec
mov
pop
fdivrl
dec
sub
jo
cs
lds
rcrl
das
mov
stos
loop
pop
or
adc
sbb
lcall
fs
mov
push
mov
and
in
cvtdq2ps
sub
push
jbe
jb
pop
sti
push
jbe
xor
xor
sub
testb
lret
lods
repnz
pop
push
push
jmp
std
pop
sahf
jae
sbb
pop
cmp
test
add
pop
cmp
stos
cmp
and
inc
imul
rorb
lret
dec
gs
sub
sub
std
jle
dec
aad
jne
sub
cmp
lret
std
xchg
pop
adc
fdivrl
pop
dec
mov
dec
in
add
xchg
sahf
xlat
fistpl
lret
mov
mov
lock
xchg
or
mov
das
sarl
xchg
push
out
aas
or
int3
xlat
or
mov
mov
or
dec
mov
arpl
or
sti
xor
add
loope
in
js
shrl
out
or
rorb
sub
jmp
xchg
mov
loop
xchg
out
push
scas
cs
jge
popf
jno
sub
pusha
sbb
pop
repz
adcb
sbbb
xor
mov
xchg
lods
in
je
push
iret
les
jo
inc
sbb
incl
enter
shlb
add
lret
cmp
jae
dec
adc
in
es
stos
in
lds
sub
dec
pop
push
xchg
ret
pop
lret
or
xchg
mov
cmp
dec
mov
jg
mov
cmpsb
stos
mov
adc
mov
je
mov
or
or
scas
add
fnstenv
insb
mov
mov
sbb
fwait
lret
dec
pop
flds
insb
push
dec
cmp
mov
cmpl
mov
fscale
nop
loopne
push
movsl
jp
jg
sbb
sahf
cmp
lret
std
movsb
mov
sti
pusha
cwtl
mov
xor
mov
outsl
and
pushf
bound
lahf
adc
sbb
pop
push
cmpsl
sbb
shlb
sbb
add
sbb
jg
sub
cmc
mov
push
cmp
mov
je
inc
movsb
or
sbb
pop
lea
add
lcall
inc
cmp
aam
and
mov
xor
cld
jl
inc
mov
xchg
xor
pusha
xorb
int3
push
lods
xchg
pop
mov
cld
mov
inc
pop
in
mov
sti
loopne
lcall
wbinvd
add
sbb
mov
push
adc
pusha
cmp
push
mov
sbb
pop
and
sub
cwtl
imul
sub
iret
lret
adc
imul
push
out
jp
popf
pop
fbld
fs
in
aad
pop
movsb
inc
push
cmpsb
xor
inc
jg
int3
mov
aas
movsb
shlb
cmp
xor
pop
mov
pop
fdivrl
or
lods
outsl
or
push
and
into
push
test
mov
and
mov
insb
fmuls
xchg
sbb
xor
pop
outsb
mov
lret
adcb
push
jae
mov
mov
jbe
pop
sub
pop
xchg
jl
insb
rol
rcrl
fsubrs
cmpsb
cmp
dec
add
shrl
dec
sbb
hlt
mov
mov
mov
out
push
fstp
fldl2e
adcb
lahf
pop
add
xor
or
je
test
repz
add
jnp
std
dec
scas
hlt
icebp
mov
clc
lds
xchg
movsb
mov
xchg
sub
pushf
mov
repnz
les
add
jo
shl
push
lcall
sbb
insb
ret
pop
stos
sti
adcl
scas
or
test
lea
js
js
jle
mov
cmpsl
out
lods
aaa
sbb
xor
add
fcoml
ficoms
or
ljmp
inc
dec
add
push
sbb
rorb
adc
push
or
sbb
cmpsb
jno
rol
xchg
test
sbb
sub
inc
shlb
sti
hlt
push
lcall
dec
mov
dec
mov
je
sbb
iret
rol
int
imul
or
dec
lds
rcr
cmp
jg
jne
aad
and
das
push
bound
sub
and
dec
inc
push
sbb
xor
sub
xor
clc
out
addl
test
add
sahf
cmovne
fisttpl
xlat
sub
gs
ss
xchg
sub
shll
and
push
push
rcrl
jmp
xchg
push
ljmp
sub
fcomps
aad
xlat
movsb
push
jne
and
push
shlb
out
repz
pop
and
jo
mov
push
int3
nop
jo
int
sub
add
test
cmp
mov
test
fldcw
mov
sbb
cmp
mov
xor
mov
jno
push
mov
and
ss
cmc
scas
push
mov
mov
addr16
icebp
icebp
clc
fcomps
xchg
inc
add
call
loop
xor
outsb
pop
nop
adc
repz
dec
int3
lock
jecxz
call
sbb
mov
push
jmp
stc
sarl
pop
iret
fdivrs
fsubrs
fwait
jl
xchg
jecxz
dec
xor
sbb
jne
sbb
fmuls
adc
pop
push
and
mov
lods
leave
das
xchg
in
pop
mov
fwait
and
mov
xchg
inc
cmovo
lret
loope
push
mov
ja
imul
ret
pop
mov
pop
cmp
mov
dec
sbb
or
pop
pop
and
mov
sbb
into
cmc
adc
loope
fwait
mov
pop
push
rcr
pop
fcoms
sub
rep
mov
mov
je
jb
dec
dec
iret
cmp
fwait
sub
repz
loope
jno
gs
xchg
dec
adc
ds
add
mov
cvttps2pi
xchg
inc
out
and
repnz
outsb
jp
inc
leave
mov
loope
outsw
xor
add
pop
js
jns
adc
lret
jp
pop
les
in
iret
mov
into
movsb
loopne
es
scas
rclb
pushf
adc
mov
clc
pop
inc
xchg
movsb
push
cmpsb
fdivrs
jno
out
mov
ss
aaa
subb
jnp
stos
sti
cmp
fstl
xor
push
lret
cmp
dec
mov
add
cwtl
xchg
cmc
cmpsb
add
dec
in
rclb
and
or
push
sti
dec
pop
ret
movsl
movsl
mov
mov
push
and
jb
mov
mov
pusha
scas
xor
add
pop
inc
cld
movsb
nop
and
dec
out
testb
loope
xor
xor
dec
cwtl
enter
xor
or
sbb
pop
cli
adc
and
in
aaa
cmp
adc
mov
xchg
cmp
mov
outsl
imul
add
lods
icebp
out
pop
dec
test
mov
mov
xchg
cmc
mov
xor
push
cmc
shrw
sbb
xchg
es
lcall
xor
idivl
cmp
bound
insl
test
jp
and
cld
push
inc
adcb
loope
sbb
sbb
js,pt
xor
repz
dec
mov
jo
cmp
jge
or
imul
mov
icebp
adc
pushf
call
mov
scas
lods
mov
mov
inc
movsl
ja
ja
cwtl
inc
cld
cmpsl
test
subb
and
arpl
inc
mov
pop
mov
fwait
dec
xchg
sub
imul
std
dec
clc
or
rorb
cmc
xor
push
roll
mov
mov
shrl
xchg
das
daa
cmp
sbb
movsb
ja
and
insb
outsl
outsl
jne
mov
movsb
inc
inc
push
ss
pop
orl
xchg
push
push
mov
adc
jl
mov
cmpsl
test
push
das
wbinvd
or
xor
sbb
test
out
sub
jbe
push
test
ja
cmp
lds
jmp
jp
add
mov
pop
xchg
mov
xchg
inc
xor
ret
adc
sbb
jnp
cwtl
and
or
decb
in
repz
mov
jne
popa
jns
insl
jnp
xlat
cmp
mov
outsb
mov
xchg
push
push
in
dec
popl
lods
push
xchg
push
mov
lret
xchg
fiadds
xor
cli
xchg
ret
push
mov
sbb
dec
mov
cs
fsub
iret
clc
lea
push
stos
pushf
mov
stos
lock
pusha
dec
mov
out
outsb
aam
mov
jnp
movl
shlb
int3
std
pushf
lret
es
movsb
dec
gs
mov
and
mov
push
aaa
xor
outsl
sbb
or
enter
rol
shrl
loopne
movsl
lahf
cmp
inc
cli
cmp
repnz
push
jle
loopne
mov
int
jmp
movsl
mov
pop
xchg
dec
adc
nop
push
shr
inc
imul
fcoms
lock
pop
mov
out
xor
jo
gs
outsl
fcomi
repz
pop
fsubrl
repz
xchg
xor
insl
icebp
add
fs
sbb
pop
cmp
add
rcrb
cmp
jg
adc
sub
sub
ja
jecxz
int
test
dec
xchg
cli
pop
dec
inc
push
adcb
es
inc
jns
push
in
lods
movsl
sarl
lahf
aad
mov
out
testb
stos
mov
cwtl
outsb
push
ret
push
test
pop
icebp
xor
xchg
mov
cmp
gs
jecxz
clc
pusha
mov
adc
mov
lea
pushw
xor
mov
mov
mov
in
sahf
jg
fisubs
popa
jno
mov
mov
in
gs
dec
and
test
add
outsb
jae
jp
sub
hlt
push
notl
aas
and
fcoml
xor
adc
mov
vmwrite
or
out
js
das
cli
xchg
add
push
xchg
repz
xchg
mov
push
lret
out
mov
in
loopne
adc
push
cmp
inc
jmp
inc
mov
ss
mov
arpl
xchg
ret
icebp
xlat
js
ds
mov
jno
add
dec
ss
movsl
jp
bswap
sub
dec
pop
inc
rorl
cli
adc
data16
mov
out
add
dec
ret
pop
and
imul
popa
pop
mov
pusha
inc
iret
dec
inc
lods
xor
mov
shll
cmp
loope
xor
inc
movsb
outsl
repnz
pusha
mov
mov
stos
pop
push
sub
mov
push
leave
pop
lods
xor
lds
push
and
sbb
fsubl
insb
fldt
test
pop
ret
pop
hlt
xor
in
and
popa
je
and
sbb
pusha
mov
xor
mov
loopne
in
mov
cmp
xor
dec
cwtl
mov
xor
cmpsl
mov
fstpt
mov
popa
aas
hlt
sbb
xor
aas
mov
adc
enter
aad
jmp
jns
and
add
adc
dec
pop
push
cmpsl
and
ret
test
leave
mov
dec
jle
lea
popf
cmpsb
leave
jno
negb
sub
scas
test
je
lret
xor
mov
sti
mov
out
adc
scas
mov
sbb
mov
mov
inc
mov
xchg
xchg
scas
stos
xor
cmp
xor
pop
dec
add
ljmp
mov
mov
adc
movsl
movsl
xchg
xor
mov
mov
gs
inc
gs
ja
add
pop
xchg
inc
std
lret
call
jmp
jno
add
or
jb
loop
subl
loopne
and
imul
pop
dec
jns
push
repz
mov
xchg
stos
add
subb
sub
rcl
shll
and
sbb
xor
cld
js
push
lret
arpl
in
and
sbb
mov
repnz
lret
inc
cmp
mov
sub
js
lea
pop
daa
mov
movsl
jbe
xor
daa
jne
cmpl
shrl
lahf
imul
ja
push
pop
mov
pop
aad
addr16
loopne
lods
test
sub
pop
cmp
cmp
mov
jle
adc
xchg
mov
xchg
bound
push
aam
dec
mov
aam
cmp
mov
and
pop
lret
es
and
pop
cmp
lds
pop
pop
cmpsl
out
das
add
push
fstl
faddl
test
mov
sbb
aaa
mov
add
add
mov
lret
jbe
rclb
scas
btl
mov
mov
das
jbe
jmp
push
mov
stc
lods
xchg
push
mov
das
nop
pop
push
sub
incb
pop
pop
decl
inc
or
or
in
mov
loope
pushf
jno
cmp
icebp
inc
push
pop
adc
jnp
rcll
into
out
cmpb
data16
sub
dec
mov
ss
mov
ljmp
lods
push
jp
push
mov
hlt
aam
ds
dec
jbe
in
imul
xchg
iret
mov
and
xchg
into
or
pop
js
mov
addr16
aad
and
mov
lret
test
cltd
adc
or
lcall
cmc
inc
movsl
dec
adc
outsl
repz
sahf
lret
mov
and
dec
dec
cwtl
push
je
mov
mov
mov
adc
mov
bound
sbb
stos
push
sub
cmp
inc
das
fldcw
cmc
sbb
jecxz
hlt
xchg
lds
js
andb
ss
and
mov
nop
leave
mov
sub
mov
decb
or
or
cs
out
push
mov
cld
push
jmp
shll
mov
mov
pop
add
xlat
outsb
cmp
les
test
pushl
arpl
rorb
daa
jno
lea
sbb
mov
out
int
sub
call
jmp
dec
mov
sub
or
jae
mov
fadd
ficomps
in
mov
ret
pop
adc
mov
inc
xchg
xor
add
mov
push
xchg
out
test
inc
data16
ret
ja
icebp
xor
push
or
out
mov
xor
loop
into
mov
jnp
gs
add
mov
sbb
hlt
cmp
test
fidivrs
cli
inc
lahf
pop
jg
int
rorl
imul
lock
sub
cs
and
lds
in
or
test
jnp
adc
jb
jne
and
or
fisubl
adc
or
and
push
sub
xlat
cltd
stc
and
add
imulb
jae
lock
gs
addl
testb
popa
lret
call
pop
xchg
mov
add
ja
xorb
cmp
ds
jno
jb
mov
scas
push
lock
inc
adc
xchg
cmpl
sub
lods
sub
lods
add
jmp
inc
lcall
mov
aad
pop
mov
or
pop
fimuls
dec
mov
cmp
leave
mov
xchg
mov
cs
clc
les
test
mov
pop
adc
cld
shlb
xchg
sahf
push
mov
push
mov
cmp
lods
sbb
iret
negb
cmp
xchg
mov
cld
add
sti
cwtl
cltd
mov
das
or
shrb
lods
cmc
mov
leave
int
or
iret
or
add
in
fwait
std
xchg
dec
add
inc
fstps
jmp
stc
fcmovnb
jecxz
bound
cmc
cmc
hlt
mov
and
ds
movsb
jmp
je
lods
jg
pop
sbb
aaa
mov
and
pushf
xchg
jbe
int3
xlat
aad
inc
pushf
adc
push
mov
pop
pop
mov
cmpsl
or
ret
sub
call
mov
dec
pop
in
ret
push
dec
lcall
dec
mov
popf
out
movsl
lods
add
int
rorb
out
xlat
fdivrp
fdivrs
dec
in
jle
mov
xor
cs
adc
pop
sbb
mov
jge
and
ret
data16
push
lret
js
inc
push
roll
cmpsb
das
enter
fwait
in
stc
pop
lods
mov
aaa
sub
andb
push
sbb
cmp
rcr
jb
fnstenv
data16
jmp
out
outsb
or
insb
cmc
add
test
lret
or
xlat
stos
inc
test
das
icebp
xor
and
mov
testb
daa
add
mov
iret
pop
cmp
jge
or
out
fadds
out
ja
stos
lods
jecxz
loopne
add
sub
sub
ret
mov
fsubs
hlt
dec
mov
push
mov
out
cmp
mov
add
lock
test
dec
lahf
mov
popf
adc
cmp
in
daa
insb
cld
lods
imul
iret
xchg
out
lds
repnz
fisubs
cmp
mov
lretw
mov
cld
out
shlb
imul
pop
sbb
dec
lret
mov
cwtl
repnz
mov
ss
sbb
sub
stos
or
fbld
jle
cmp
movsb
pusha
adc
xchg
lret
lods
stc
test
cmp
xlat
cmp
subps
ds
aad
inc
cli
test
mov
jmp
lret
push
addl
cli
out
out
cmp
xor
std
pop
lock
hlt
stc
xor
negb
jno
stos
das
add
pop
dec
int
push
inc
xchg
add
test
mov
and
push
mov
shrl
das
int3
shrl
popf
repz
or
stos
push
and
pusha
rcrl
es
mov
je
cwtl
add
addr16
orl
mov
pop
jge
jns
or
daa
mov
push
cmp
sub
cmp
insb
inc
add
jecxz
xchg
and
bound
dec
sbb
je
sarb
sbb
xchg
sbb
inc
dec
cmpsb
jns
enter
rcrl
aaa
ja
int
movsb
je
and
sbb
add
leave
outsb
jg
sbb
push
cmpl
dec
mov
lock
dec
movsb
mov
in
mov
jbe
call
imul
ret
mov
xchg
or
xlat
lret
dec
jge
dec
inc
mov
jl
and
jno
and
repnz
mov
je
cltd
es
iret
scas
mov
into
int
push
les
cmp
add
ret
sbbb
jg
bndldx
sub
aas
ret
dec
mov
add
fbstp
xor
adc
mov
cmc
js
loop
pop
and
in
cld
inc
push
addb
mov
stos
movb
inc
cmc
pop
rcrb
and
out
inc
push
push
or
xor
je
adc
sub
sub
stos
into
mov
jg
add
lret
scas
push
movsb
fadd
ret
cmp
pushf
out
inc
imul
inc
fsub
out
xorl
int
dec
call
les
jae
mov
or
arpl
call
inc
lods
and
call
adc
jbe
jl
or
fnsave
and
push
add
mov
and
or
je
scas
xchg
push
mov
push
fcompl
outsb
test
dec
jo
sub
lret
popa
jb
daa
pop
jecxz
in
inc
fwait
and
push
lods
lret
roll
das
fsubs
pop
movaps
xchg
fstpl
sbb
xor
hlt
ret
test
adc
inc
add
movsl
lea
leave
mov
aaa
adc
and
test
xchg
lahf
xor
mov
shlb
lahf
lret
outsb
mov
lock
sub
xchg
and
data16
inc
push
mov
frstor
mov
aaa
std
mov
inc
adc
and
shll
inc
xor
cmp
insb
xchg
lcall
decl
mov
cmp
ds
adc
pop
add
adc
mov
or
leave
pop
sub
ljmp
movsl
jns
adcb
out
shll
mov
lcall
push
mov
imul
icebp
in
and
xor
jmp
sub
push
sbb
mov
xor
push
cmp
mov
or
adc
pop
or
fmuls
es
insl
fcomps
cwtl
mov
xor
push
jecxz
xchg
cmp
movsl
xchg
cmp
ret
fmuls
and
add
les
sbb
repz
lods
mov
mov
mov
stos
std
mov
fnstsw
adc
or
xchg
ljmp
dec
lods
test
dec
les
hlt
cmp
jp
call
xor
clc
push
das
pop
xchg
cmpsb
out
orb
addr16
outsb
lods
iret
inc
lods
lods
stc
clc
daa
push
inc
inc
xchg
sahf
push
add
mov
inc
in
insl
or
fs
call
xor
dec
pop
stos
outsl
mov
xchg
das
or
cs
xor
pop
test
mov
cmp
jl
xlat
icebp
ret
mov
shl
cmpsl
outsb
movsb
movsl
faddl
andb
sbb
sbb
mov
mov
cs
pop
inc
push
inc
fmuls
out
mov
adc
jne
push
xor
fdiv
aad
jb
jnp
js
xlat
scas
and
and
mov
out
or
and
mov
rcrl
jmp
arpl
sbb
aad
mov
aam
xor
fcmovnbe
fwait
mov
adc
bound
das
addr16
int3
xor
dec
iret
pop
and
into
insb
dec
call
rcll
jl
sub
imull
push
test
mov
sub
movsl
mov
ficomps
nop
rclb
aam
addr16
pop
cmc
movsl
mov
ljmp
inc
mov
or
in
pop
fldenv
mov
cmpsb
xrelease
push
test
mov
aad
pop
inc
xor
lret
mov
pop
dec
dec
shll
fisttps
push
jmp
push
jb
test
mov
aad
outsl
movsb
pop
xor
pusha
mov
xor
dec
cmp
jo
xchg
push
mov
add
rorl
adc
lahf
xchg
push
sbb
jb
clc
hlt
mov
sbb
data16
ljmp
sub
mov
cmpsb
push
xor
sub
dec
mov
and
fidivrl
inc
mov
mov
in
xor
pop
lods
mov
dec
and
fnstsw
jmp
jnp
scas
popa
icebp
ds
fldcw
push
push
stos
popl
add
push
mov
int
jge
or
fdivs
movsl
lds
in
jg
popa
sub
cmpsb
mov
jno
dec
and
jg
jmp
sbb
pop
push
inc
mov
cmp
xchg
ret
test
add
add
or
and
mov
das
shlb
out
fisubrl
sbb
sti
cmp
in
mov
idiv
inc
mov
jbe
xor
push
adc
lahf
xchg
xlat
mov
decl
pop
xchg
clc
pop
subb
adc
loopne
jo
insb
stc
dec
push
or
dec
nop
movsb
les
jg
fidivrs
mov
negl
popa
popf
inc
lret
jge
lea
or
mov
clc
sbb
inc
cmp
jb
insl
adc
mov
stc
testl
sub
add
push
out
xchg
dec
mov
mov
popf
aas
ficomps
dec
dec
rcrb
push
cmpsl
jnp
mov
out
xchg
pop
lcall
xchg
jl
xchg
dec
pop
xchg
fs
daa
pop
sarl
mov
andw
or
scas
iret
nop
sub
lret
xchg
daa
imul
mov
shl
sbb
cmp
dec
pop
push
push
add
bound
cmpsb
addr16
andb
lret
int3
lret
cmp
jae
outsl
cmc
mov
clc
mov
cmp
movsl
in
cmc
fadd
xlat
push
mov
ja
mov
cmpsl
and
sbb
mov
pop
push
aad
fiaddl
ljmp
xor
pop
jno
push
cmp
sub
jecxz
cltd
lods
ror
cmc
mov
xlat
sub
push
adc
cmp
jo
dec
inc
arpl
mov
test
sbb
stos
repnz
jl
cmp
sti
xchg
mov
sarb
js
ret
push
push
inc
fwait
rcr
xor
scas
jbe
test
mov
sub
outsl
sbb
fldenv
jmp
mov
jle
cltd
mov
int
cmpsl
mov
pop
movsb
int
stc
adc
int
adc
mov
cmp
sbb
push
jge
sbb
pop
addr16
test
dec
mov
stos
jmp
gs
mov
es
cmp
rcrl
pop
lcall
push
mov
sub
sbb
sub
int3
and
sub
popa
out
mov
inc
mov
pop
lcall
adc
adc
loop
or
mov
push
hlt
fildll
and
and
mov
mov
inc
int3
xor
mov
add
push
mov
sub
inc
stc
add
lret
in
xchg
test
lahf
pop
aas
or
stos
dec
fidivrl
popa
push
dec
ret
lods
lods
jae
mov
cwtl
rorb
mov
or
jecxz
stos
add
gs
mov
jle
dec
pop
push
xchg
out
in
jge
in
jp
push
shll
icebp
je
shrb
inc
in
aam
push
dec
jns
cld
sbb
out
and
add
in
iret
add
cmp
cmpsl
inc
movsl
imul
adc
loop
jg
nop
testb
ret
cltd
jo
sub
call
xorl
inc
xor
and
push
or
fsubrs
pop
les
adc
sbb
sbb
in
inc
stos
fadd
mov
xor
stc
adc
pusha
jnp
jae
jp
fcmovne
data16
out
stos
cs
cltd
shrl
inc
test
mov
clc
push
add
adc
mov
loopne
sahf
not
sbb
push
iret
andl
aam
data16
mov
loopne
push
sub
mov
popa
push
pop
test
xchg
cmp
shr
enter
das
repz
cli
in
fiaddl
das
roll
popf
jg
loopne
in
ror
mov
and
xor
mov
test
jne
or
adc
xor
imul
ja
cmp
mov
lods
sub
lds
leave
pop
sub
and
sahf
inc
cwtl
lret
cwtl
adc
sub
adc
daa
fneni(8087
jns
xlat
jge
test
adc
add
jb
mov
cmp
adc
pusha
dec
push
imul
js
jg
push
ljmp
loop
lret
push
xchg
mov
lds
mov
ljmp
insb
push
jns
add
push
fldenv
jg
outsl
mov
xchg
call
mov
stos
sbb
or
les
xor
in
outsb
daa
outsb
hlt
int3
mov
or
enter
pop
sahf
adc
jae
adc
mov
mov
daa
and
mov
gs
mov
cli
cld
pusha
inc
stos
rol
sarb
jl
idivb
pop
add
lock
dec
xchg
mov
mov
xchg
outsb
cmp
inc
add
test
pop
jmp
sbb
dec
pop
repz
out
ljmp
lcall
push
push
mov
loop
rcl
mov
in
sbb
sbb
rcr
jg
xlat
add
pop
sub
jmp
fstpl
mov
push
add
xor
jmp
outsl
pop
push
dec
cltd
xor
inc
lcall
and
outsb
mov
sub
xchg
add
sti
xchg
dec
fsubl
or
das
loopne
inc
dec
push
aas
scas
imul
lret
push
sub
adc
cmp
icebp
xchg
aas
aam
testb
push
xchg
repz
adc
xchg
pushf
in
stos
inc
cltd
or
push
xchg
stos
xchg
shrb
push
push
test
lods
loopne
pop
call
mov
add
push
int
sbb
lcall
mov
test
mov
jmp
jae
clc
stos
mov
sub
in
scas
in
xor
insl
lods
rolb
mov
xchg
mov
sub
bnd
pop
hlt
lret
fwait
xchg
sub
fldl
jg
push
inc
stc
and
xchg
sti
push
push
pop
std
jne
sbb
push
push
movsb
in
testl
mov
xchg
call
test
inc
jo
aaa
inc
hlt
mov
cmp
push
pop
lods
sahf
int
lods
xor
pop
outsl
mov
or
cwtl
aaa
nop
adc
add
jae
dec
movsl
call
jnp
out
mov
imulb
scas
jge
loope
scas
outsl
lahf
mov
jb
insl
je
inc
add
jns
pop
jmp
pop
sub
jg
jge
sub
mov
adc
dec
out
xor
jge
xor
call
dec
mov
xchg
ja
pop
loop
jp
or
pushf
lcall
repz
jns
and
loopne
xchg
xchg
mov
push
mov
out
test
push
xor
jno
xchg
loop
push
xchg
loope
or
in
cli
test
jo
pop
loopne
inc
lahf
add
stc
xchg
push
lock
adc
test
jecxz
mov
xchg
outsb
test
stos
sahf
cmpsl
jnp
jge
addr16
dec
lds
or
enter
les
mov
scas
pop
and
aad
pop
xor
mov
adc
mov
lahf
ret
push
mov
fs
mov
test
and
push
scas
sti
sub
test
js
into
arpl
pop
out
enter
or
outsl
inc
push
fs
cmpsl
mov
xlat
shr
gs
sbb
rorl
push
daa
lea
adc
inc
cwtl
loop
mov
jmp
rcll
fs
xchg
mov
sbb
add
cmc
push
shr
movsb
adc
lods
hlt
hlt
push
lock
mov
jge
scas
add
sbb
xor
les
mov
and
lahf
js
jg
dec
loopne
jmp
sbb
insb
xor
mov
subl
pop
or
fwait
loope
pop
out
stos
mov
jbe
mov
iret
and
adc
loop
cmc
nop
cmp
rcll
les
imul
in
iret
scas
cmp
fistpll
hlt
inc
jg
jno
or
mov
sahf
aam
jbe
ficompl
mov
stc
iret
popa
mov
and
insl
fcompl
pop
in
mov
aad
cmpb
adc
sbb
bound
or
int3
popa
rorl
cmp
fwait
push
test
mov
aam
sub
pop
pop
pop
xchg
call
or
fistps
test
lcall
adc
lea
push
clc
xor
mov
negl
dec
repnz
mov
xorb
xchg
xlat
into
stos
loopne
daa
arpl
adc
ds
add
xlat
dec
push
pop
pop
mov
int
jle
sbb
sub
dec
fstpl
stos
and
xorl
push
xor
inc
sbb
jne
cli
out
sbb
imul
shrb
mov
cmp
fisttpl
pushf
bswap
jl
jecxz
aam
ret
call
dec
jp
les
mov
mov
mov
loop
cltd
adc
lods
push
pop
data16
in
pop
mov
add
or
adc
mov
add
jb
push
inc
daa
int
inc
lea
adc
imul
shll
lahf
insb
xchg
call
outsl
push
xchg
push
pop
inc
cmpsl
adc
cmpsb
pop
push
dec
mov
push
out
aam
pop
push
xlat
or
mov
fcmovnb
push
pop
mov
test
scas
add
arpl
pop
inc
lods
das
sbb
push
jb
in
jb
popf
arpl
ret
mov
sub
or
icebp
imul
jecxz
out
xchg
in
ljmp
push
repnz
push
mov
push
loope
ja
xrstors
aas
add
cwtl
cli
pop
mov
jno
cltd
sbb
mov
sub
dec
test
aam
sbb
and
movsl
test
stos
test
sub
scas
dec
push
out
and
jg
sbb
mov
pop
mov
das
inc
sub
sarb
mov
mov
push
fdivs
cmp
repnz
repz
mov
mov
in
xor
sbb
sbb
jo
in
jne
xor
lods
shrl
mov
test
push
rolb
imul
nop/reserved
jmp
push
cmp
sti
mov
push
sti
or
adcb
and
jg
bound
xchg
ret
inc
imul
mov
mov
push
and
mov
push
das
mov
fcoml
movsb
mov
pop
fbld
in
inc
adc
test
pop
push
rorl
add
adc
cmp
scas
fidivl
lock
mov
ljmp
pop
xlat
mov
stos
insb
inc
and
aaa
cmp
cli
cmc
std
push
push
cmp
ss
ljmp
cmc
shlb
es
xchg
cmp
push
sahf
inc
or
push
das
fs
movb
jbe
mov
and
clc
inc
cmpsb
inc
push
cmp
repz
jno
dec
faddp
fists
mov
lods
xchg
cmpsl
frstor
sbb
cli
pop
push
into
mov
sbb
out
inc
hlt
scas
ljmp
add
stos
sbb
inc
fdiv
jb
mov
pop
inc
mov
ds
inc
mov
pop
hlt
sbb
lods
xor
or
int3
add
mov
ds
testb
inc
and
dec
jnp
sbb
stc
in
test
les
addr16
mov
int
push
sub
xchg
ret
jl
mov
cwtl
push
mov
int3
enter
cmpb
inc
movsb
movsb
pop
notl
fsubs
jmp
outsb
adc
mov
xor
rcll
pop
aaa
xchg
push
test
push
imul
in
add
in
lods
jle
or
inc
fcomps
aas
mov
sbb
aaa
xchg
dec
cmp
mov
ja
cmc
pop
mov
test
and
mov
aas
les
and
and
aam
popl
mov
mov
jb
sub
iret
sub
inc
stos
sub
or
aad
aam
jecxz
or
push
andb
xor
ret
lahf
stos
mov
and
cmp
cmpsb
loope
mov
mov
stc
movsb
push
xor
js
push
adc
pop
xor
sub
lahf
out
push
je
sub
or
add
push
mov
or
pop
push
roll
inc
mov
outsl
sub
mov
lcall
sub
rclb
negl
push
sbb
test
xchg
enter
push
cli
pop
jne
pop
and
cmpsb
xlat
lds
fistps
xor
aaa
lock
jns
shll
enter
jp
cmp
cli
mov
dec
inc
cwtl
insl
push
adc
or
dec
lea
mov
cmp
in
jmp
orl
mov
and
push
cmp
and
ss
xor
cs
jmp
pushf
cmp
xor
lods
dec
aaa
or
clc
jle
jp
jg,pt
xchg
xor
cwtl
jae
or
mov
les
inc
pushf
test
dec
xorb
push
xor
adc
aaa
js
call
push
push
push
xchg
lahf
fsub
ja
aaa
loope
mov
sbb
not
inc
mov
push
std
or
push
xchg
ret
sub
fisubl
lret
jmp
pop
in
addr16
mov
test
mov
mov
divl
add
mov
cli
popf
movsl
movsl
repnz
sub
inc
inc
sub
jle
push
inc
push
push
sbb
dec
sub
daa
mov
fstpt
or
xlat
pop
mov
push
adc
xchg
mov
std
push
stc
stos
fs
insb
or
cmpsb
stc
fisubrs
adc
add
mov
sub
aas
cwtl
aad
push
jbe
in
sbb
or
xorb
sbb
hlt
fdivs
pop
xorb
add
lcall
test
push
rcrb
iret
les
jb
and
dec
xor
shlb
dec
sub
imul
sbb
inc
leave
shl
jae
int
or
repz
mov
xchg
mov
mov
dec
enter
movswl
icebp
lret
incl
es
out
jge
inc
outsl
insb
jo
and
sar
test
pop
xlat
sar
jl
xchg
add
je
sbb
stos
icebp
loopne
mov
sub
idivl
ficomps
imul
out
sub
repz
dec
sbb
mov
insl
dec
test
pop
insb
and
ds
insl
push
daa
xchg
sub
test
push
cmp
in
loopne
arpl
cmp
pusha
jns
mov
js
cmp
shll
iret
xor
adc
adc
shrl
mov
cmpsb
enter
out
sbb
or
movsb
and
xor
mov
testb
iret
xlat
xor
mov
add
pop
xchg
dec
mov
rsm
je
adc
int
in
cli
inc
inc
inc
pop
pop
and
xchg
jge
rcrl
pop
in
dec
popf
lret
out
data16
and
sbb
push
pop
lds
lock
cmp
jl
jmp
ljmp
inc
adcb
out
jl
out
add
mov
jp
push
pop
stc
xchg
mov
iret
mov
fucomip
and
add
clc
pop
xchg
sub
sub
repz
cwtl
add
int3
ret
mov
jge
popf
stos
ds
imul
cld
jmp
testb
adc
hlt
les
mov
mov
stc
inc
sbb
loopne
sbbl
js
mull
push
insl
popf
push
inc
mov
xorl
pop
xchg
mov
movsl
cmp
push
push
ja
push
push
sub
into
ljmp
adc
xor
inc
xor
mov
adc
jp
cs
pop
in
pop
repz
jle
pushf
std
out
mov
jne
dec
sti
mov
rorb
dec
cmpb
int
sarb
pop
scas
das
fdivrl
std
mov
movsl
mov
shrb
sti
in
dec
scas
xchg
push
aas
xlat
push
cmp
out
push
adc
icebp
repz
or
lea
inc
jae
rolb
mov
addr16
cmp
cmp
and
loope
pusha
dec
and
and
hlt
cmc
stc
xor
and
outsl
adc
insl
sub
xor
into
cmc
fisubl
jbe
jae
cmp
loop
das
pop
test
mov
sar
nop
push
psrlq
out
xchg
pop
orb
pop
cmpsb
jmp
movsb
jle
push
pop
fdivrl
insl
sbb
pop
xchg
in
lock
jg
aaa
sbb
cmp
shlb
loop
lret
shr
mov
cli
jo
mov
push
leave
aaa
add
mov
shrl
call
aam
mov
push
fsub
mov
out
mov
inc
aas
pushf
push
cmc
push
fldt
pushf
faddl
xor
ljmp
cs
cmp
dec
test
inc
ret
and
addr16
mov
movsl
imul
or
movb
js
fistpll
and
mov
hlt
xor
insl
or
inc
outsl
dec
xorb
cmpsl
push
aaa
ljmp
clc
in
and
sub
push
sub
pop
adc
loop
add
sbb
and
mov
inc
cltd
mov
aad
test
mov
in
lea
insb
mov
gs
setb
test
mov
lahf
subb
mov
sub
dec
adc
sub
lret
popl
inc
filds
cmp
sub
in
pop
test
pop
aaa
mov
sti
cmpsb
js
mov
js
fstpt
mov
pop
fimull
inc
mov
push
xchg
insb
fwait
push
arpl
pop
add
test
mov
cs
aam
cwtl
mov
xor
out
or
cmp
popl
ds
inc
dec
dec
sbb
gs
and
mov
mov
and
mov
sbb
bnd
adc
rclb
mov
xor
pop
mov
and
sar
cmp
adc
popf
cmp
dec
es
mov
pop
push
or
inc
in
loop
jmp
push
mov
add
adcl
push
push
lods
mov
mull
in
dec
or
jno
dec
iret
dec
jne
insb
dec
je
cmp
sbb
cmp
mov
insb
inc
dec
or
cmp
pusha
test
push
sbb
and
fldl
bound
mov
add
insl
pop
ss
scas
push
pop
pop
sub
int3
mov
inc
mov
push
imul
dec
jl
pop
ljmp
push
outsb
cmp
xchg
jae
cmc
adc
dec
and
mov
scas
push
fisubrl
hlt
aaa
clc
inc
jnp
or
nop
idiv
xchg
into
aaa
test
pushf
dec
int
jb
jmp
daa
and
in
daa
arpl
and
jecxz
pusha
pop
mov
xor
inc
repz
pusha
adc
and
ja
popf
fwait
jg
sub
in
mov
mov
js
test
add
sbb
out
ret
push
cmpsb
or
pusha
cmpsl
orl
xorb
adc
xlat
xchg
mov
ljmp
pop
or
repnz
mov
jecxz
sub
cmp
shlb
push
loope
mov
push
insl
fdivl
dec
fwait
mov
mov
and
movsl
mov
add
jl
push
sbb
faddl
sbb
and
shl
cmc
push
jae
je
xor
push
push
dec
lock
push
push
cmp
movsb
xchg
insl
jle
arpl
push
and
repnz
pop
rcrl
mov
call
out
mov
pushf
mov
mov
idivb
stos
sbb
pop
xor
movsl
leave
fldt
rcll
jecxz
cmpsw
sub
dec
ficoms
lret
add
mov
mov
jg
int3
cld
and
ret
aam
xchg
push
mov
jb
cmp
cmp
pop
jp
test
push
and
inc
pop
jae
jl
popa
push
scas
add
ficoms
add
add
cmpsl
jecxz
fsubs
sub
or
and
enter
mov
sbb
pop
mov
mov
in
jo
shll
inc
in
shrb
daa
mov
sbb
sbb
or
ror
adc
xchg
cli
mov
pop
popf
dec
cltd
int
in
bound
fsubs
test
cmpsb
dec
ret
pop
cld
mov
subb
sub
push
je
mov
cmp
stos
iret
movsl
jbe
dec
sarb
adc
pop
pop
dec
adc
xchg
xchg
sti
jge
out
mov
lock
dec
iret
jge
lock
jno
decb
rcl
mov
loopne
cmc
jecxz
and
fbstp
cmp
adc
mov
shlb
cli
mov
adc
jmp
aam
xchg
pop
repz
int
cmp
aaa
mov
fcmovnu
pop
lods
pusha
mov
inc
loopne
test
mov
fcoml
arpl
cmpsb
outsb
add
dec
int
adc
xor
bound
cmp
pop
xchg
aas
outsb
repnz
cmp
adc
jno
movsb
mov
insl
and
out
cltd
mov
inc
fwait
lret
jae
out
jae
mov
popf
add
mov
dec
push
jmp
mov
sbb
xor
sbb
or
outsb
xchg
lods
stos
add
inc
sub
jmp
mov
sahf
pop
in
inc
sbb
push
inc
adcl
in
rorl
das
ss
mov
lods
sub
mov
mov
cmp
or
cmc
jl
into
dec
lret
clc
jb
mov
xor
and
push
ret
cmp
int
mov
call
aaa
ret
call
ss
sub
addr16
arpl
mov
sub
lcall
sbb
jge
sbb
insb
div
cmp
call
xchg
xchg
xor
mov
dec
dec
sarb
ror
cmp
and
sub
testl
pushl
pop
shrl
sbb
jmp
mov
insb
inc
pusha
shll
repnz
scas
jno
arpl
sbb
push
mov
add
sub
jmp
clc
jg
lcall
xor
out
jmp
notb
icebp
dec
decb
cmp
push
mov
add
dec
ret
xor
dec
mov
out
mulb
xchg
lret
or
lods
loope
xchg
add
mov
sbb
aaa
add
push
jl
cld
dec
push
lods
fidivrs
inc
leave
push
sti
and
inc
xchg
xchg
mov
cwtl
les
ds
sub
inc
shrb
xorb
xchg
sbb
jge
insb
mov
pop
push
int3
sarb
jecxz
sti
mov
shll
adc
fistpll
mov
js
sbb
or
or
pop
mov
test
cmp
inc
cmpsl
ss
fiaddl
jo
fistl
popf
push
stos
aam
inc
test
push
adc
sub
lock
sbb
inc
shl
lcall
or
je
push
int3
ds
les
into
negl
sbb
pop
ljmp
test
sbb
pop
push
xor
out
pop
pop
in
add
insb
mov
stc
lods
inc
fs
mov
cmp
sub
or
stos
scas
add
mov
mov
nop
xchg
and
or
cwtl
sbb
and
jmp
in
xchg
xchg
fsubrs
mov
cli
call
xor
sahf
or
mul
mov
xchg
repz
test
test
jmp
sbb
test
cltd
jae
jo
dec
popa
mov
add
bound
les
inc
xor
lret
out
pop
and
mov
jo
test
push
mov
pop
cltd
roll
mov
mov
mov
insl
fwait
in
cwtl
xor
int
mov
push
stc
sub
lcall
mov
mulb
inc
pop
fmull
int
or
std
xchg
mov
mov
mov
xchg
loop
or
rcll
idivl
pop
and
xchg
cwtl
subl
in
imul
cmp
sbb
stos
inc
out
cwtl
popa
and
inc
sbb
mov
xchg
jnp
lock
push
scas
icebp
cmp
iret
adc
jg
jg
movsl
stos
insl
mov
lcall
jmp
cmp
jge
stos
add
gs
je
stc
out
loope
dec
pushf
loop
and
cmp
pop
adc
mov
jl
addr16
xchg
pop
fwait
sti
pop
leave
stos
data16
icebp
into
xorb
jb
cmpsl
xorl
fs
sahf
inc
mov
push
cmp
aaa
out
in
add
push
mov
cltd
dec
mov
test
jle
fildll
push
aam
sbb
push
xor
sub
popf
sub
jae
add
cwtl
push
adc
xlat
and
icebp
xor
push
stos
rcrl
jecxz
push
push
pop
repnz
out
out
xchg
xchg
dec
push
or
rol
xlat
daa
into
mov
and
test
test
push
call
push
roll
outsl
and
jmp
mov
shld
mov
cmp
shll
xlat
xlat
aaa
insl
mov
out
bnd
outsb
shlb
sbb
scas
or
into
daa
jbe
jl
pop
sbb
push
cmp
push
mov
fwait
loopne
pop
push
aaa
mull
in
mov
loope
sti
xchg
rcll
mov
or
mov
ret
stos
lds
bound
shll
jl
pop
sbb
les
mov
nop
test
cld
dec
sub
sbb
es
add
sbb
cmp
push
mov
jp
cli
and
mov
push
shlb
mov
pop
fwait
pop
cmp
cmpsl
lods
daa
std
arpl
repz
rorl
in
stos
push
fcmovnbe
fcoms
push
jnp
adc
sbb
dec
adc
test
inc
cmp
in
and
sbb
adc
push
jmp
icebp
xchg
xchg
mov
in
push
sbb
push
aas
ffreep
scas
push
jne
or
mov
and
xchg
adc
inc
jno
sub
push
fcompl
cmc
sbb
fcompl
mov
ss
inc
sahf
std
xor
mov
dec
add
decl
scas
loopne
xor
mov
insb
lea
ret
sub
mov
fcmove
pop
or
sub
xchg
or
pop
cmp
jnp
push
rorl
sub
push
int
in
ret
xchg
jno
fs
lea
cmp
cmp
and
sub
xor
dec
div
pushf
mov
add
mov
jmp
add
mov
out
pop
xchg
inc
jp
or
fadds
nop
jne
jecxz
xor
bound
sub
dec
inc
mov
cmp
jbe
pop
push
cld
addb
daa
lods
addr16
dec
aad
pop
add
fisubs
or
add
jle
inc
mov
pusha
dec
in
mov
pop
sbb
add
cmpsl
xchg
adc
push
jae
fst
bound
int
int3
jbe
cmc
stc
pop
lahf
stos
fwait
push
mov
mov
pop
dec
jge
xchg
cld
mov
xor
add
mov
in
jae
mov
fstl
mov
shrl
xor
mov
call
and
dec
inc
aas
in
insb
push
sub
dec
cld
sub
mov
in
jns
cli
idivl
orl
lcall
gs
cmp
in
std
das
iret
out
in
outsl
push
stos
leave
sarb
cmpsb
lret
add
mov
mov
pop
jnp
fisttps
mov
sbb
dec
pop
cmp
subl
fsubr
jmp
mov
mov
xor
arpl
fmull
jae
mov
inc
cwtl
dec
mov
add
mov
mov
and
pop
ja
dec
mov
mov
jmp
mov
aas
jg
fwait
sbb
add
pop
loope
ds
xlat
jg
sbb
dec
jmp
adc
push
aas
inc
and
mov
push
push
cmpl
cmp
mov
mov
in
or
fsubr
push
xchg
cli
aam
js
inc
lcall
xchg
pop
lret
loop
adc
out
adc
andl
mov
push
notl
and
and
jecxz
or
sub
or
cmp
aam
popa
mov
add
addb
mov
xchg
sub
int3
dec
and
jecxz
mov
sbb
subl
jne
pop
shl
dec
lea
pop
fisttpl
iret
mov
xchg
cmc
push
clc
fcompl
fisttpl
mov
aam
ss
add
movb
sub
testl
ljmp
subb
loopne
adc
mov
in
pop
or
test
pop
xchg
bound
outsb
insl
stos
lock
bound
add
ss
cmpsb
jg
xor
rcl
fs
xor
fldenv
mov
jle
add
mov
addr16
inc
cmp
nop
or
loope
pop
std
jno
pop
lea
rolb
mov
mov
in
push
loop
or
popa
add
inc
inc
negb
jmp
popa
jp
movsb
mov
cwtl
adc
mov
add
add
hlt
xor
mov
aaa
sub
inc
pusha
push
fwait
cli
jecxz
lcall
and
sub
jns
adc
cmp
int3
cmpsb
stc
lods
xchg
pusha
testl
lock
nop
insl
mov
aam
mov
adc
push
or
or
jns
lahf
stc
sahf
pop
jb
ja
aaa
mov
mov
mov
xor
jmp
stos
aaa
jno
dec
in
push
or
and
push
push
inc
test
mov
int3
xchg
or
pushl
cltd
loopne
int3
mov
push
mov
pusha
mov
lods
sub
sbb
es
int
stc
pop
add
fs
rclb
cli
pop
dec
dec
daa
mov
in
insb
sbb
imul
scas
movsb
cltd
sub
rcl
add
lods
ss
inc
inc
sbb
mov
aam
sarl
iret
call
test
fidivl
outsb
dec
popa
and
mov
dec
stc
cmp
jl
popa
xlat
add
icebp
pop
gs
into
ss
jle
into
mov
imul
cmp
jnp
push
stos
xor
lods
pop
out
inc
dec
mov
ret
bswap
pop
xchg
pop
or
lret
loop
scas
sub
add
cmp
stc
mov
push
inc
jg
fnstsw
bts
or
aaa
mov
int
cmpsb
pop
push
inc
push
pop
dec
sub
mov
inc
lcall
cmp
mov
jp
cmpsb
lds
or
js
adc
lods
mov
aad
je
dec
mov
push
pop
fs
and
xor
inc
xchg
arpl
fdivs
lret
mov
dec
adc
ss
add
insl
test
sub
iret
adc
or
jae
cmc
insb
lahf
mov
pop
jle
fistl
jmp
icebp
mov
je
dec
cmpsl
xchg
xchg
outsb
in
or
addr16
xchg
xchg
ret
outsl
xchg
mov
and
rorb
das
lret
mov
rcrb
mov
rcrb
aaa
pop
cli
push
dec
jecxz
movsl
outsb
add
push
and
mov
xchg
in
adc
subb
test
xor
in
and
add
iret
push
xchg
adc
cmp
pop
ds
inc
outsb
jl
jmp
sbb
pop
dec
das
mov
push
enter
cmp
ljmp
push
sbb
mov
shl
and
push
cwtl
out
mov
test
mov
mov
popa
out
add
cwtl
adc
cmp
inc
js
push
ffreep
pop
int3
jle
mov
daa
int
mov
sbb
or
cmp
mov
mov
popf
in
iret
mov
dec
xchg
pop
popa
idiv
in
fildll
ja
mov
daa
pop
mov
adc
cmc
fimull
sbb
mov
and
cmp
xlat
or
and
push
and
lea
jge
jae
or
and
addr16
or
add
sbb
push
test
xchg
and
jnp
mov
iret
mov
inc
test
ds
loop
data16
pop
cmpsb
jl
inc
adc
loop
sbb
mov
imul
inc
ret
jbe
xor
outsl
mov
xor
test
cmp
mov
sti
cwtl
mov
out
fisttpl
sub
ss
dec
mov
je
popa
cmc
aam
adc
inc
pop
xchg
arpl
hlt
sub
inc
pusha
lds
sahf
les
std
mov
bound
test
fs
mov
andb
test
out
cmp
call
mov
aaa
jecxz
js
pusha
into
adc
pop
test
jae
pop
into
pushf
inc
or
cli
mov
jecxz
scas
xor
dec
test
lret
test
aas
jmp
pop
stos
sbb
lods
ss
sahf
pushw
pop
cmpsb
gs
gs
pop
xchg
mov
lcall
cs
mov
cmp
pop
mov
loope
xor
fcmovne
mov
lock
jae
sti
jmp
stos
pop
and
inc
sbb
in
push
cld
dec
dec
test
in
out
sbb
int
jbe
arpl
sarl
stos
cmc
mov
nop
cli
mov
dec
cmpb
push
inc
data16
scas
pop
cmp
mov
inc
xlat
pop
sbb
in
fsubl
xchg
inc
addr16
sahf
aas
mov
xor
fwait
imul
mov
sub
add
cli
sub
loop
mov
or
scas
aas
outsb
sub
movl
movsb
enter
xchg
stos
push
mov
adc
cli
test
leave
inc
and
popa
cmp
jmp
rolb
in
inc
loop
xor
or
or
push
cltd
lcall
aas
adc
sbb
jp
and
xchg
dec
cmpl
sub
pop
or
je
es
mov
cmpsl
push
shrb
pop
shlb
pop
lret
add
adc
aam
push
jnp
jle
or
repnz
int
xchg
mov
xchg
dec
cwtl
gs
cld
push
xchg
jmp
and
fnstenv
xor
xchg
mov
mov
sahf
dec
dec
xchg
mov
mov
aad
cs
ja
out
ljmp
jle
fxch
imul
sub
sbb
lods
out
fsts
in
cmpsl
mov
lret
or
ret
fstpt
mov
cli
push
flds
lods
jae
mov
rolb
bound
push
aad
hlt
dec
out
cli
mov
sub
sbb
cs
pop
fmulp
cmpsl
mov
in
test
dec
mov
mov
mov
push
mov
int
fisubl
push
les
loopne
mov
cmpsl
out
inc
adc
jnp
into
faddl
mov
xchg
pmaddwd
push
xlat
mov
out
pop
sbbb
imulb
inc
sub
cmp
ljmp
dec
xchg
mov
mov
arpl
loop
inc
adc
shrb
mov
sub
data16
jge
int3
dec
adc
add
je
aaa
fldl
inc
sbb
cli
push
scas
inc
in
mov
leave
xchg
push
cs
fsubp
mov
sub
push
cmpl
or
daa
jmp
hlt
rcrb
gs
mov
mov
xor
hlt
xabort
jecxz
xor
stc
dec
rolb
fisttpll
lret
mov
fldenv
and
leave
push
inc
bound
cmp
shlb
cli
jecxz
stos
ficomps
jmp
push
cmp
and
mov
push
xor
lret
into
jle
mov
cli
add
sub
out
fxtract
vxorps
stos
xor
xlat
fdivp
in
cs
or
xor
jl
xchg
inc
addb
aad
addr16
xor
jnp
repz
sub
jge
sub
repz
fildll
outsb
jbe
cmp
add
lret
xchg
clc
mov
xchg
clc
addr16
mov
aaa
xor
xchg
jl
sarb
xchg
gs
insb
stos
push
imul
or
arpl
fwait
inc
jb
jns
xchg
xchg
popa
lds
aad
in
cmc
xchg
jo
push
mov
push
xor
mov
shlb
std
repnz
cwtl
sti
inc
movl
jp
mov
jb
mov
orb
ret
clc
shl
aam
pop
aad
add
or
das
rorl
insb
add
push
into
lret
sub
push
shlb
xchg
js
mov
cmpsb
mov
test
ret
mov
pop
cld
test
fistl
mov
push
push
pop
xor
add
add
int
or
xor
jle
jo
dec
adc
decb
or
jmp
xchg
icebp
ds
xor
shlb
push
xor
popf
shl
cmp
jle
lahf
mov
jecxz
fcoms
push
hlt
sbb
xchg
mov
bound
sbb
ds
enter
dec
pop
xlat
or
xorl
sub
and
jnp
orb
and
push
subl
int3
or
and
jge
and
std
sub
sub
adc
pop
push
daa
and
mulb
out
dec
mov
sbb
fisubl
pop
dec
xor
cmp
inc
jnp
cmp
sub
cmp
push
dec
adc
fdivr
or
movsl
ds
dec
jl
iret
add
imul
sbb
out
cli
add
fidivrs
imul
data16
scas
or
fnsave
out
inc
mov
es
mov
mov
sbb
sub
fstpl
mov
and
je
fsubr
das
sbb
imul
dec
adc
xor
aas
shrb
mov
cmp
movsb
ja
cmp
icebp
imul
jle
mov
mov
mov
pop
out
jb
or
movsl
inc
mov
dec
movhps
addb
xor
leave
mov
sbb
mov
jg
out
mov
push
or
sbb
push
adc
aam
sub
mul
mov
std
cmp
jp
jnp
add
jge
dec
shr
clc
bound
jle
pop
bound
rclb
icebp
das
mov
std
or
xchg
adc
popa
in
cs
mov
mulb
lahf
mov
or
push
ficoml
xchg
jns
mov
cmp
aaa
xor
pop
sbb
pop
inc
jno
jg
fstpl
andl
mov
lods
ret
mov
inc
sub
pop
pop
dec
stos
mov
lret
mov
cmc
pop
adcb
cwtl
dec
adc
lds
mov
dec
es
push
add
rcrb
push
sbb
mov
inc
mov
mov
cld
clc
jp
mov
inc
insl
jb
aad
pop
push
xor
nop
lret
sbb
jbe
push
add
aaa
aas
dec
mov
adc
push
or
pop
or
xchg
ret
bound
cmp
mov
and
int3
stos
or
and
ljmp
mov
mov
inc
andb
sti
xchg
js
xor
test
push
lret
mov
in
hlt
jecxz
cmp
ja
enter
aam
xchg
sbb
mov
popa
mov
sub
sbb
hlt
push
mov
sbb
xor
inc
adcb
push
lea
lahf
cs
sbb
dec
and
jnp
xor
dec
mov
loop
ja
push
fimuls
dec
cmp
push
scas
fcompl
mov
cwtl
movsl
lret
int
adc
jl
push
xcrypt-ctr
cmpsl
pop
push
sub
jae
mov
sbb
jecxz
mov
sti
dec
call
cmpsb
or
xor
and
mov
add
sahf
fwait
xchg
sub
andb
pop
lock
push
cmpsb
fwait
jge
jge
hlt
jmp
sub
and
push
jmp
pop
sbb
mov
pop
test
push
out
mov
xor
pop
je
jmp
dec
call
movsl
push
sbb
jge
loopne
dec
shrb
jmp
fdivs
mov
cmpsb
push
shlb
mov
ret
popa
mov
ss
sub
cmpb
ds
add
ds
rolb
pop
sub
les
je
inc
fnsave
push
add
dec
fisubrs
test
or
jmp
stos
pop
inc
arpl
push
push
push
adc
mov
insl
xor
repz
jb
enter
in
stos
pop
clc
repnz
repz
add
adc
lcall
cmp
aad
int3
je
add
pop
ljmp
addr16
xlat
or
cld
fucomp
pop
pop
cmp
mov
sbb
pop
mov
xor
xchg
aam
cmc
aaa
ficoml
clc
jecxz
shrb
jb
mov
mov
and
int
pop
shl
scas
push
mov
mov
incb
pop
iret
mov
jp
mov
xchg
insl
jp
or
and
adc
test
jb
arpl
xlat
cmpsb
pop
mov
es
scas
mov
sti
jne
inc
neg
mov
mov
push
lods
mov
ret
inc
inc
sbb
jno
inc
out
test
movsl
inc
mov
ljmp
xchg
stc
cs
arpl
roll
push
pop
xchg
in
or
je
push
jge
adc
scas
in
pop
sub
adc
sub
shrl
cwtl
das
sub
pushf
push
ja
xchg
pop
imul
rcrl
movsl
call
xchg
push
xor
leave
add
mov
fldenv
fisubs
orb
inc
adc
jbe
pop
push
mov
pop
clc
pop
xchg
jl
push
cmp
pop
mov
in
xchg
movups
in
pop
cmp
cmpb
or
pushf
mov
dec
mov
gs
pop
xor
les
inc
fs
mov
jp
daa
jmp
aaa
jecxz
cmp
add
dec
outsb
scas
stc
xchg
pop
xchg
shl
xorl
cwtl
sbb
jo
loopne
insb
in
inc
stc
jle
test
mov
pop
mov
xchg
fucomp
aaa
cwtl
mov
cmpb
cwtl
push
ds
inc
mov
insl
push
cltd
icebp
addl
in
inc
divl
mov
jmp
xchg
fstpl
icebp
mov
dec
adc
dec
cs
in
ds
or
pop
and
jne
arpl
and
dec
push
pop
sbb
xor
aas
out
xchg
add
add
lods
mov
fs
cmp
mov
push
inc
call
mov
cmc
iret
cmp
out
pop
push
bound
ldmxcsr
and
jmp
bound
inc
inc
loope
cmpsb
sub
cmp
sbb
es
shl
mov
adc
push
cmp
mov
xchg
xchg
and
paddb
sarb
dec
mov
inc
test
lahf
jbe
in
popa
mov
cs
or
and
andb
sbb
testb
sub
inc
mov
jnp
leave
dec
sbb
out
jbe
imul
sbb
stos
add
enter
or
dec
add
xchg
xchg
in
jmp
xchg
jbe
cwtl
mov
xchg
mov
dec
int3
fwait
adc
xor
and
leave
pop
xchg
dec
inc
xchg
icebp
push
pop
inc
mov
adc
mov
nop
mov
sbb
test
hlt
and
into
aam
cmp
in
jns
dec
cmp
cld
push
pop
loop
mov
out
mov
adc
dec
sbb
lds
shll
clc
jle
push
repnz
scas
sbb
jmp
xchg
jecxz
mov
sub
and
fldcw
pop
inc
mov
shl
scas
push
inc
mov
jle
cmp
or
inc
push
pop
pop
mov
out
mov
lret
add
insb
jns
fs
ss
in
pop
push
cwtl
shlb
pop
inc
adc
rclb
fs
or
and
mov
in
push
lret
outsb
sub
and
dec
jo
repz
cmpsl
or
movaps
fs
jl
imulb
nop
jl
lret
and
sub
xchg
outsb
and
sti
dec
repnz
or
cmc
outsb
sarl
and
lret
insl
ja
xchg
pop
lahf
dec
outsl
iret
xchg
pop
inc
in
repnz
imul
jb
mov
in
fbstp
cmp
xchg
sbb
push
inc
lcall
icebp
fsubl
mov
shll
fildl
or
in
mov
ret
pop
inc
ret
mov
mov
or
into
shufps
ds
pop
pop
aad
mov
jo
or
inc
sbb
push
cmp
push
pop
jge
and
icebp
fidivs
loopw
popf
mov
out
js
dec
test
cmc
ret
pop
xor
data16
jno
and
jns
mov
push
dec
dec
and
sub
fidivrl
sub
inc
dec
jns
jb
cmp
mov
pop
mov
cmp
push
and
loope
sbb
arpl
sarl
mov
mov
sbb
lea
and
add
mov
xchg
sbb
pushf
cmp
cmp
push
dec
ljmp
cld
add
lret
call
push
pop
pop
add
lret
xor
jle
push
mov
ret
stos
lea
daa
add
mov
test
push
decb
mov
shll
enter
jbe
scas
les
sub
mov
in
outsb
pop
pushf
or
repz
mov
inc
pop
mov
jbe
add
imul
jmp
aas
ret
bound
push
dec
inc
pop
adc
outsl
cmp
mov
jge
ljmp
push
adc
movzwl
dec
dec
mov
scas
stos
jns
loopne
jns
xchg
es
jnp
push
push
outsl
test
sarb
add
or
test
into
pop
and
pushf
xorb
inc
fwait
and
sub
push
mov
jl
and
or
push
out
in
pop
cmp
or
jp
lds
xchg
pop
jle
mov
clc
sub
out
sub
jnp
adc
mov
cmpsb
push
xor
jge
jns
jecxz
sub
repz
icebp
xor
loop
sub
gs
jmp
cli
push
out
lock
out
imul
jo
push
data16
mov
inc
pop
cmc
sbbb
mov
inc
sbb
outsb
xchg
cli
ja
lcall
jo
aas
dec
mov
das
outsb
scas
pop
ja
cmovg
fldt
mov
gs
cmp
bound
movsl
dec
pop
stos
aad
sub
arpl
in
popf
mov
fucom
jecxz
leave
scas
inc
xchg
push
shll
sub
xchg
mov
movsl
add
pop
inc
pop
orb
movsl
mov
lods
pop
into
lds
stos
mov
jge
push
insl
les
outsb
mov
or
inc
mov
mov
mov
icebp
mov
and
das
test
hlt
rclb
jge
pop
xchg
in
std
jne
cmp
je
add
push
mov
aas
dec
ds
mov
mov
lcall
xor
mov
mov
jle
jb
xchg
pusha
outsl
pop
arpl
scas
outsl
scas
sub
mov
sbb
repnz
adc
roll
mov
xchg
dec
or
shlb
push
imul
push
sub
adc
dec
repnz
dec
push
mov
lods
ror
clc
add
clc
push
pop
jmp
sub
xchg
xor
ds
adc
jmp
adc
fsubl
or
dec
dec
ljmp
push
or
mov
in
jnp
faddl
or
or
stc
xchg
inc
sahf
std
mov
pop
std
fs
mov
and
adc
pop
jmp
lcall
mov
jmp
xchg
movsl
ss
fidivrs
xorl
leave
ror
shrb
cmp
movl
push
mov
imul
pop
lea
outsl
mulb
pushf
mov
outsb
mov
out
mov
sbb
mov
jge
call
mov
pop
cwtl
out
pop
dec
push
es
xor
and
jns
and
xchg
mov
jecxz
icebp
sub
cmp
loope
xor
and
out
mov
stos
lret
imul
stc
and
inc
adc
push
stos
hlt
mov
outsl
dec
outsl
sub
mov
iret
or
add
jae
in
xchg
jg
movsb
clc
aas
xor
lods
adc
jg
mov
fildl
fs
xchg
lcall
mov
adc
or
shl
subl
push
sub
out
push
add
js
fs
jp
mov
add
jb
jecxz
and
mov
hlt
aas
pushl
pop
loopne
jmp
mov
mov
pop
stc
or
ss
add
lret
incl
sub
mov
push
aas
movsl
mov
jbe
mov
insl
negl
and
je
inc
or
aam
dec
pop
imul
push
stos
sti
sub
ds
jno
sbb
inc
mov
mov
loopne
mov
sub
and
cld
pusha
sbb
xchg
cmpsb
aas
jo
sbb
hlt
add
outsl
and
stos
ss
out
nop
outsb
aam
sti
pop
jns
pop
sti
xor
jg
sbb
movsb
mov
push
jle
stc
fdivs
les
pop
jns
mov
lret
mov
lret
or
jmpw
sub
push
add
lods
xor
or
out
mov
notb
adc
lahf
jae
and
aas
push
add
push
jne
push
xchg
mov
stos
and
repz
dec
pusha
shl
mov
iret
fists
aaa
mov
or
lahf
pop
je
xchg
ficompl
out
ljmp
push
xchg
das
xor
jae
jnp
leave
cmp
shrl
lea
mov
test
inc
popa
loopne
vpminsw
adc
pop
mov
fnsave
sub
xchg
outsb
cmp
jl
or
mov
xor
adc
and
pop
inc
test
gs
in
imul
mov
inc
std
jecxz
inc
ret
or
add
pop
testb
aad
call
out
flds
fdivrl
stc
mov
cmp
aaa
popa
fs
jl
sbb
test
leave
and
cli
dec
push
ds
inc
icebp
cmp
push
mov
push
add
lret
test
cwtl
pusha
pop
dec
and
and
sahf
out
ss
out
js
and
mov
add
cli
xchg
jbe
xor
jg
daa
mov
cmp
enter
ljmp
push
into
dec
pop
sbb
int3
rcl
xor
ror
leave
les
js
pop
mov
and
pop
jmp
enter
mov
pop
mov
lock
cmpsl
dec
pop
mov
in
out
cmp
sub
pop
enter
cmc
aas
into
pop
cmp
push
ret
pushf
rclb
test
icebp
adc
enter
loope
std
mov
cs
lds
xchg
jge
das
mul
mov
les
lds
ds
mov
mov
push
jmp
inc
or
push
out
xor
int3
bound
push
mov
adc
cs
jnp
aas
mov
arpl
sbb
lcall
push
sti
arpl
mov
mov
push
dec
std
dec
mov
repnz
daa
aas
outsb
fistpll
inc
add
jbe
jg
push
into
or
es
test
push
pusha
sbb
dec
mov
mov
cs
inc
jg
fdivl
das
push
loopne
call
cltd
out
xchg
subl
adc
xor
pop
nop
fistpll
lock
lcall
enter
adcb
cmc
repz
sti
loopne
xor
cmpsb
mov
xchg
icebp
loopne
popf
cmp
outsb
and
sbb
and
push
icebp
mov
mov
push
mov
sbbb
cli
fists
mov
push
add
jp
lds
inc
fsubrp
xchg
pop
je
dec
shll
or
outsl
out
xor
lds
pushl
loop
lock
lods
gs
enter
testl
cmc
cmp
out
movsl
xchg
loop
out
loopne
clc
mov
lods
cmpsb
ja
xchg
inc
or
inc
push
adc
jmp
sbb
add
sbb
add
add
add
mov
aad
push
cmpsl
mov
shl
jbe
sub
or
orb
push
cli
js
frstor
aas
jns
lcall
in
cmp
insb
in
adc
scas
inc
sbb
cmp
rorb
movsb
and
adc
std
push
sahf
jae
jb
test
push
xor
mov
adc
mov
out
ror
xchg
shll
test
jns
and
daa
adc
mov
push
shufps
sbb
in
pop
inc
mov
inc
dec
mov
rorl
sbb
fldl
dec
ss
mov
lea
std
sub
dec
sub
cmpsb
mov
das
cld
add
fwait
les
call
les
loope
js
adc
pop
scas
popf
mov
scas
xchg
dec
push
add
insl
cmpb
add
dec
fisubl
inc
pop
jg
add
xchg
jo
or
adc
mov
xchg
stos
stc
adcl
xchg
nop
stos
aaa
jl
dec
enter
cmp
es
div
test
add
roll
push
hlt
xchg
insb
fcmovb
fdiv
push
mov
push
push
mov
cld
mov
inc
fstl
cltd
je
mov
adc
or
xor
mov
cs
subb
fwait
psubusb
mov
outsl
sbb
jno
sbb
shrb
cmp
pop
test
dec
inc
ljmp
inc
cmp
cli
jmp
scas
dec
lods
dec
lods
ljmp
adc
jae
loope
adc
repz
push
and
fdiv
mov
int3
sub
das
pop
pop
xlat
scas
dec
mov
loope
sub
cmp
jb
daa
push
mov
lret
xor
mov
ja
pushf
or
sub
test
in
shr
jb
out
data16
sbb
pop
div
ja
popa
jno
clc
negb
mov
sti
inc
nop
ffreep
or
stos
shll
aad
add
ret
clc
popl
mov
insl
lahf
xorb
repz
mov
jl
and
xor
movsb
fiaddl
xchg
jbe
push
fidivrs
mov
jne
lret
xor
icebp
scas
es
push
or
loopne
imul
sbb
cmp
and
jge
cmp
jbe
jge
leave
sbb
fsubl
sub
jmp
mov
jb
pop
call
shl
test
jbe
arpl
mov
pop
cld
daa
out
ja
xor
loopne
cmp
stos
xor
and
cmp
sarb
or
push
mov
mov
popf
repz
ds
loopne
cmpsw
cmp
inc
mov
inc
mov
sahf
in
jnp
fildll
mov
int
mov
sbb
mov
in
xor
js
xor
ret
cmpsl
mov
arpl
jp
movsb
sbb
shlb
in
stos
mov
hlt
sti
dec
sbb
orl
orl
mov
inc
dec
mov
and
iret
mov
jge
pop
bound
or
shll
mov
or
pop
testl
scas
adc
add
out
fisubrl
dec
or
cltd
pop
jb
xchg
xchg
popf
les
lods
subb
subb
cmp
scas
and
sub
jno
mov
sub
xchg
cld
das
scas
or
fwait
push
add
xchg
jno
test
out
popa
fildl
xchg
dec
and
cmp
lret
mov
sub
das
cmp
nop
xor
pop
sub
xor
dec
mov
pop
pushl
inc
das
lret
sti
ljmp
mov
mov
jne
int
cmp
rorl
out
mov
jl
cmpsl
jecxz
movsb
sub
and
insb
lahf
repz
aam
mov
and
inc
scas
or
or
gs
pop
loop
fsubrs
popa
inc
fdivr
movsb
inc
clc
in
lods
dec
lret
lret
push
xor
adc
cmc
out
or
or
jnp
lret
add
push
sarb
and
scas
jbe
xlat
test
cmovl
fildll
mov
mov
sub
in
loopne
sbb
andb
lock
leave
fwait
cmp
jg
xlat
daa
or
adc
sub
pushf
adc
imul
in
rorb
leave
xorb
mov
or
sub
and
mov
and
shrb
or
push
enter
mov
and
and
sbb
addr16
push
push
push
pop
dec
push
mov
in
jecxz
nop
outsl
jns
scas
les
arpl
popf
insl
das
test
add
jno
aad
xchg
nop
mov
ret
mov
in
add
inc
lret
aam
jnp
add
cltd
aaa
lcall
sbb
shrl
fimuls
daa
xor
inc
pop
gs
inc
test
cmpsl
push
jo
pushf
lahf
or
sbbb
or
fld
jp
and
xor
pop
mov
push
sbb
mov
test
mov
push
lods
xor
fwait
cmp
pop
lret
repnz
xchg
xchg
cs
jmp
cld
repz
insw
ret
inc
scas
dec
jge
dec
fcmovnu
in
jp
inc
shrl
cs
cmp
lods
lcall
jns
das
jae
std
sub
int
daa
aaa
jo
inc
dec
cbtw
addr16
sub
sub
repz
inc
add
lea
mov
out
loopne
xchg
mov
adc
cld
lods
jo
xlat
pop
mov
outsl
cmp
inc
cmc
in
xchg
xchg
arpl
mov
test
mov
dec
movsb
hlt
and
push
sub
aam
mov
mov
mov
sub
dec
scas
and
jle
pop
ljmp
cmc
movsl
jne
jp
ds
lea
in
adc
xchg
push
in
pop
loopne
stos
xchg
adc
std
fcoms
repz
dec
xor
fwait
int3
fistpll
fs
fsubr
pop
aaa
mov
dec
cmp
xor
rolb
lret
lock
inc
cmpsl
and
inc
push
ror
pop
xor
and
fcomip
lcall
int
adc
mov
mov
fs
cmp
mov
jns
push
cmpsb
sti
add
push
inc
out
jns
add
xor
out
or
rclb
sahf
xlat
xchg
and
popf
xor
test
or
test
mov
mov
jno
and
pop
fisubrs
jmp
std
andl
pop
mov
add
cld
lea
push
inc
mov
push
sub
fcompl
in
sbb
dec
add
cltd
adc
fistpl
pop
dec
int
cmp
lds
and
scas
pop
mov
mov
adc
jl
ret
shrb
ret
xorb
sbb
mov
mov
push
mov
dec
sahf
fildll
jge
mov
cmp
or
mov
add
pusha
lds
xchg
jns
std
xor
into
std
stos
push
scas
push
aas
rcrl
push
insl
std
fmulp
insb
bnd
mov
fisubrl
and
and
dec
sbb
adc
stos
and
enter
les
cmpsb
sbb
jo
sub
insb
sbb
sbb
int
adc
pushf
lods
dec
xchg
mov
roll
mov
pop
jno
loopne
stos
and
xchg
cmp
mov
and
pop
out
mov
aad
add
jle
xchg
xlat
mov
push
cltd
dec
jge
cmc
movsl
inc
push
pop
fnsave
fnstcw
add
sbb
mov
std
mov
mov
cmpsl
jbe
cmp
gs
mov
adc
test
jne
jnp
jno
cmp
sbb
mov
pop
push
mov
ficompl
jne
in
push
and
fsubrl
jg
pop
jmp
test
sbbl
sub
hlt
lret
stc
cmp
jae
mov
insl
push
sahf
pop
test
adc
enter
jp
aas
loopne
push
shlb
cltd
repnz
inc
fisttpl
jno
xor
out
pop
mov
inc
dec
insb
jmp
movsb
clflush
pop
mov
addb
lea
dec
shrb
push
insb
ja
das
cmp
xor
xchg
stc
push
int
mov
inc
mov
fstps
xchg
gs
sub
call
stos
pop
loope
jbe
pop
into
into
xor
or
sbb
or
sbb
xor
sub
mov
into
lret
mov
mov
jl
push
mov
std
or
rorb
mov
mov
xchg
ss
test
ret
lahf
lods
adc
jg
inc
testl
in
shl
das
jbe
stc
or
repz
and
out
jbe
jo
mov
cmpsl
xchg
lcall
aas
fimuls
cld
jmp
pop
pop
mov
and
jns
out
test
push
je
and
push
xchg
push
fsubp
lahf
pop
sub
inc
sub
iret
push
cmp
push
and
lahf
insl
cwtl
lcall
movl
jmp
push
xchg
cmp
insb
jmp
arpl
add
xchg
mov
clc
cli
sti
sti
ret
adc
or
adc
sbb
inc
scas
xchg
pop
pop
jg
jp
into
int3
sub
jmp
pushf
sti
fimuls
test
je
or
mov
mulb
sub
mov
xorb
dec
add
icebp
stos
jns
jb
or
arpl
cmpsl
imulb
or
test
pop
pop
lods
dec
in
jne
sarb
pop
aam
push
push
mov
loop
and
lret
neg
les
movsl
inc
add
mov
dec
mov
shll
add
inc
inc
push
movsl
sub
add
daa
mov
xchg
fs
stos
lret
xchg
in
mov
mov
and
cwtl
sub
icebp
mov
aad
ja
stos
inc
cld
insl
das
add
lcall
mov
les
icebp
popa
ret
clc
and
mov
dec
loope
in
pop
adc
xor
pop
jge
ret
int3
jmp
mov
loopne
pop
push
push
xor
add
or
cltd
int3
pop
mov
lock
movsb
push
ret
dec
in
adc
inc
cli
pushf
fwait
and
loop
daa
jae
inc
into
push
leave
xchg
push
imul
adc
shll
push
clc
cltd
movsb
xchg
cmpsl
xor
pop
push
mov
jns
daa
push
cld
jmp
nop
and
sub
and
fs
arpl
outsl
hlt
ret
scas
cmp
jecxz
arpl
cltd
insl
jae
in
das
pop
sub
xchg
call
aam
cmpsl
mov
mov
inc
sbbl
inc
ficoms
popf
movsb
lea
adc
dec
xchg
inc
test
cli
rol
push
cmp
hlt
mov
pop
jl
xchg
mov
sar
outsl
fcmovb
jg
push
popf
or
xchg
leave
imul
repnz
das
sbb
out
cs
jns
add
test
icebp
leave
gs
cmp
not
xchg
icebp
mov
ret
jno
and
dec
stos
outsl
nop
gs
stos
xchg
mov
fisubrl
out
xor
sahf
and
out
int3
adc
nop
and
outsb
sti
xlat
sarl
outsl
cmp
cmpsl
mov
sub
dec
or
lods
inc
imul
divl
jle
mov
hlt
push
subb
rcrb
mov
loope,pt
insl
andl
mov
pop
add
inc
scas
mov
jo
int3
pop
xchg
xor
vmwrite
add
jo
lcall
call
fstp
xchg
or
data16
push
test
xor
clc
lea
xrelease
and
or
cmpsl
movsb
idivl
popf
adc
push
xchg
inc
xor
adcl
lods
sub
das
aas
push
cmc
mov
out
adc
dec
dec
xor
mov
dec
cmc
push
imul
test
push
out
adc
loop
cmp
inc
js
push
mov
adc
pop
jmp
add
jle
add
inc
fcomip
dec
jmp
mov
and
cld
mov
xor
xchg
aas
push
sar
fstpt
xor
dec
incb
add
push
push
sbb
sub
pop
inc
sbb
clc
or
inc
fidivrs
nop
pop
test
push
cmp
mov
xchg
and
dec
das
orl
sarl
sbb
movl
and
xchg
lea
add
shlb
push
inc
mov
and
and
and
jb
xchg
inc
rcrb
mov
shrl
loopne
imul
pushf
ret
cmp
lods
or
outsb
xchg
lock
jae
dec
aam
and
outsb
jmp
dec
dec
adc
or
je
mov
adc
dec
jge
jmp
mov
mov
fwait
or
lods
inc
js
test
insl
ljmp
xchg
cmc
mov
or
inc
stc
out
fcomps
jns
out
lods
xchg
icebp
popf
dec
jne
shll
xlat
inc
inc
xchg
mov
into
push
outsb
aas
imul
mov
shlb
int3
out
mov
or
and
sbbl
aas
fisubl
mov
ret
cmpb
ja
cmp
insl
jae
push
call
lock
xchg
adc
mov
out
xor
aas
sbb
pop
out
ret
and
adc
mov
or
sub
mov
into
sbbb
imul
ds
xor
or
call
sbb
xor
fistl
or
sar
jo
adc
push
dec
lds
insb
ds
dec
jecxz
push
test
shr
jb
or
mov
lcall
push
jno
rcrb
push
pushf
cwtl
scas
popf
das
cmc
push
inc
and
aas
ret
inc
into
insb
mov
lret
js
jae
and
loope
jns
inc
lods
mov
mov
sbb
cmp
sbb
std
mov
aaa
or
imul
jns
push
push
add
outsb
test
iret
int
sub
xchg
cltd
cld
sar
push
mov
arpl
xchg
out
xor
xchg
je
mov
out
lds
addr16
sbb
test
xor
mov
out
push
pop
push
xor
cmpsb
ret
bound
les
imul
mov
pop
push
mov
enter
lods
push
fs
das
xlat
mov
rolb
notb
xlat
sbb
mov
add
cmp
loopne
sbb
sub
sub
pop
push
imul
out
pop
jb
nop
out
leave
mov
cmp
bound
fsubr
insb
mov
lea
inc
mov
inc
push
divb
cmp
loopne
mov
popf
rorl
add
imul
sub
mov
push
ds
sub
mov
xor
xorb
stc
inc
adc
lea
test
adc
sbb
pop
mov
add
jo
or
push
inc
mov
popl
pop
adc
add
jnp
pop
mov
int
mov
push
jns
test
mov
pushf
jnp
lea
mov
arpl
or
xor
fimull
dec
test
add
jnp
es
or
pop
cmpsb
in
ret
or
lock
out
loop
out
jb
js
test
lcall
mov
jnp
outsb
sub
out
sub
lcall
sbb
div
stos
xor
xor
xor
xorl
and
mov
and
lods
dec
xor
sbb
cmp
enter
mov
mov
xlat
sbb
jmp
cmp
fucomi
out
sar
jmp
push
pop
sarb
and
outsb
dec
adc
mov
cmp
out
sub
push
or
pop
ffree
sbb
push
cmp
outsl
mov
repz
mov
out
mov
push
mov
scas
or
xchg
xchg
out
mov
sbb
xchg
fldl
arpl
jb
jno
pop
orl
jb
enter
cs
outsl
addr16
ret
data16
xor
ds
pop
dec
jmp
sbbb
jle
cs
adc
xorl
gs
jge
xor
out
add
das
xchg
mov
xor
sub
popf
aam
adc
pusha
push
ja
addr16
xor
int
test
daa
jbe
ret
sub
xchg
outsb
push
push
out
movsl
fdivrs
sbb
arpl
shrl
inc
insl
aam
lea
mov
loopne
fsubrp
xor
pop
fdivr
pop
cltd
jns
sub
pop
dec
arpl
lods
and
push
mov
add
shll
pop
xchg
in
fmull
jp
rorl
xor
mov
push
mov
push
dec
xchg
stos
cltd
popa
xor
add
and
divb
iret
adc
sarl
lea
test
mov
jnp
fcompl
ss
xchg
sub
mov
lods
or
push
mov
adc
mov
fcmovnu
hlt
jl
xchg
push
ret
lds
test
ss
pop
fsubrs
add
cmp
cwtl
add
push
push
es
aas
dec
jo
push
xchg
sbb
test
xchg
xor
ljmp
push
pop
mov
cld
daa
into
cmpsl
fcoms
jno
or
sahf
mov
das
mov
inc
pop
insl
push
and
mov
mov
sti
aas
adc
stc
pop
shlb
loop
pop
ja
pop
inc
jmp
ret
pop
cmpb
push
sub
add
movsl
int
mov
popf
jl
inc
push
sahf
popf
mov
pop
sub
xchg
in
dec
inc
js
outsl
cltd
sub
xchg
sbbl
popf
cmp
scas
inc
ror
fistpl
adc
or
das
sbb
neg
cld
sub
sub
cmp
js
jb
jnp
or
jns
sub
pop
mov
push
jnp
in
sbbl
out
cs
jmp
dec
loop
es
or
xor
cwtl
out
aad
test
repz
ror
cmp
stc
mov
cmp
xor
cmp
fistpll
jno
jbe
call
out
cmp
cmp
pop
xchg
pop
leave
mov
call
gs
cwtl
inc
lahf
sahf
rorl
push
addr16
push
or
pop
es
sarl
mov
int3
aaa
loop
xchg
xlat
xchg
jmp
pop
sarl
orb
mov
pop
mov
int3
nop
cwtl
popf
repz
movsl
lods
in
inc
mov
imul
jmp
ja
jecxz
inc
and
jge
mov
mov
and
aaa
mov
ret
mov
sarl
ja
mov
nop
sbb
punpckhwd
clc
outsb
sub
xor
std
cmp
or
cmp
adc
mov
xor
dec
lahf
mov
mov
cltd
sbb
sahf
xor
mov
iret
xor
push
les
bt
jns
mov
jge
test
fcoml
popf
clc
jge
cmp
outsl
xor
add
test
pusha
cmpsl
aam
inc
push
decb
add
std
movsl
xor
pop
dec
adcl
cwtl
sub
pop
mov
out
pop
cltd
int3
xor
or
dec
in
clc
mov
mov
out
push
adc
imul
xor
push
imul
dec
loop
adc
and
pop
or
cltd
or
xchg
xchg
leave
or
mov
cld
push
int3
cmp
cltd
int
mov
es
std
enter
mov
jmp
xor
adcb
icebp
xchg
or
sbb
dec
xchg
mov
jp
xlat
div
int
mov
dec
sbb
jge,pt
dec
fnstcw
add
mov
xor
and
insl
das
pushf
inc
xchg
jb
jbe
pusha
xlat
ds
rolb
dec
pusha
scas
cmp
dec
cmpsb
jns
int3
xchg
sbb
insb
cmp
or
xor
test
and
insb
pop
ret
psrlw
iret
inc
into
jmp
or
push
int3
arpl
out
or
out
scas
sbb
stos
test
push
ja
arpl
and
cltd
cmp
mov
push
pop
in
rcr
add
clc
lds
xor
mov
cmp
scas
mov
lahf
jb
inc
adc
jmp
pop
adc
dec
xorb
cmp
xlat
adc
mov
xchg
stc
loopne
aas
mov
mov
pop
jae
jb
mov
sub
mov
mov
push
jns
and
scas
lret
mov
pushf
inc
or
mov
xchg
push
enter
push
int
adc
push
je
popf
push
arpl
sub
and
cmp
push
add
jle
push
pop
mov
push
shl
sarl
and
inc
push
sbb
pop
icebp
adc
mov
xchg
jbe
lea
inc
inc
xor
mov
data16
ret
into
sbb
dec
inc
fdivrs
pop
mov
mov
sub
push
cmp
lret
inc
lods
push
pop
popf
cmp
scas
movsb
imulb
stos
stos
xor
sahf
jae
jp
lret
push
call
or
or
adc
adc
in
jl
sbb
lret
movsl
rorl
icebp
mov
dec
orl
add
cld
jl
mov
daa
adc
jne
lods
pop
add
mov
xorl
in
mov
outsb
and
push
lds
mov
xchg
push
lcall
adc
in
inc
leave
jno
add
dec
dec
out
mov
das
cs
es
cmp
mov
mov
fmul
sbb
jl
popl
pop
mov
add
sub
sub
push
clc
sbb
lods
fcmovne
cmp
or
pusha
and
rcrl
mov
push
adc
fcoml
jns
lea
das
fidivs
xchg
divl
insb
mulb
xchg
sub
aam
xor
insl
sub
adc
loopne
imul
cmpb
iret
test
dec
xor
in
test
mov
jecxz
pop
jnp
shll
xorb
out
das
mov
or
mov
jo
pop
adc
xlat
out
insl
or
in
loopne
push
and
repnz
fwait
jg
repnz
mov
pop
fldenv
adc
mov
lret
je
out
mov
call
or
pushf
jo
stc
ss
add
or
jb
mov
cmp
mov
sar
mov
insb
faddl
xchg
cmp
inc
notb
movsb
nop
mov
push
and
sub
cmc
xor
scas
push
in
ret
hlt
cmpsl
mov
jbe,pn
in
mov
fcmovne
xchg
lcall
xchg
xchg
cwtl
adc
mov
shlb
adc
and
xor
sbb
mov
sub
inc
mov
jge
adc
repz
push
pop
cmp
mov
inc
dec
fwait
shlb
outsb
sub
pushf
sub
roll
sub
mov
mov
pop
loope
or
cmpb
es
xor
dec
add
rclb
cmp
icebp
jo
inc
fwait
repz
cmp
pusha
dec
push
inc
dec
xor
cltd
adc
loop
inc
jnp
mov
sub
cmpl
adc
daa
pop
stos
lcall
hlt
xor
cmp
mov
inc
add
jo
fwait
cmpl
sbb
scas
repnz
jbe
and
add
pusha
and
and
rclb
imul
dec
fnclex
mov
fwait
cmp
and
sub
out
sbb
xchg
jnp
and
mov
mov
and
fcoms
xchg
icebp
std
cmp
sub
xchg
aaa
test
pop
cmpsb
mov
jne
adc
xchg
outsb
testb
sub
jae
adc
sbb
sbb
int
push
in
xchg
cli
je
aaa
int
fidivl
hlt
mov
in
jns
adc
sbb
jmp
push
icebp
shrl
push
pop
add
dec
push
cmp
test
adc
ret
xor
sbb
or
lods
add
faddl
data16
repnz
jecxz
sbb
movsl
lahf
mov
fmuls
push
test
aaa
sub
ja
outsb
mov
jecxz
push
in
inc
leave
and
int3
mov
adc
leave
fdivrs
nop
enter
pop
mov
addb
push
xor
mov
adc
ror
loopne
mov
test
test
mov
mov
lods
sub
or
cmp
insb
ss
ja
inc
mov
push
stos
push
jb
mov
in
fistpl
add
adc
fwait
addl
xchg
cmp
fistpll
mov
sbb
ror
clc
aad
ds
repz
xor
add
dec
and
shlb
jns
dec
or
nop
aaa
out
jg
mov
pushl
mov
std
xchg
inc
mov
and
std
adc
enter
das
divb
mov
mov
das
push
push
add
aad
out
inc
mov
mov
rclb
sbbb
or
pop
mov
fldcw
stos
add
jb
adc
test
mov
fidivl
cmpsl
adc
pusha
mov
or
sbb
daa
or
or
loopne
les
push
decb
std
adc
or
xchg
lock
or
mov
and
daa
cs
lahf
and
mov
sub
outsb
scas
icebp
jecxz
push
ss
sub
popf
jmp
and
cmp
ret
add
mov
pop
outsb
sub
ljmp
push
add
mov
test
fsubrl
mov
out
aas
loope
js
imul
in
sti
ljmp
cli
aad
addl
iret
xlat
test
bnd
pop
xor
rorb
add
div
adc
int3
xor
pop
jl
cmp
popf
push
push
add
adc
add
test
pop
outsb
fucomp
arpl
test
xor
push
lods
adc
inc
dec
inc
or
mov
push
loope
jns
icebp
cmpl
sbb
cmp
push
das
repz
mov
lret
scas
pushf
cmp
and
mov
push
cmpsl
jge
push
lcall
dec
cmp
les
lcall
movsl
inc
push
jmp
mov
popf
jbe
mov
xchg
push
sbb
push
addr16
and
cmp
xchg
jo
adc
pop
flds
push
mov
icebp
and
clc
mov
pop
mov
stos
mov
and
pop
cmpsl
sbb
jae
push
adc
cltd
movb
add
add
or
mov
mov
stos
int3
cmp
xchg
pushf
mov
xchg
scas
jae
test
pushf
xchg
dec
mov
inc
jmp
mov
jnp
xchg
pop
mov
je
scas
and
out
xor
pushf
and
repz
insb
pushf
jne
lods
jns
icebp
ds
icebp
cmp
icebp
test
pop
pop
pop
and
dec
lahf
iret
pop
dec
add
mov
mov
stc
hlt
lds
lcall
jp
mov
aaa
mov
mov
imulb
and
fcmovu
cld
xchg
cmp
jle
xor
adc
inc
dec
sub
jp
mov
bound
inc
sar
push
loope
int
and
mov
add
or
lods
ss
dec
daa
push
sub
jge
stc
pop
int3
fisttpl
sub
mov
adc
fadd
push
call
addr16
push
pop
xor
sbb
jnp
rcrb
js
mov
mov
cmp
pop
test
rcr
push
into
mov
pop
dec
push
sub
mov
out
test
sar
xor
inc
push
lea
stos
aas
ja
inc
loopne
imul
js
scas
sub
das
sub
and
jae
les
inc
sbb
lret
cmpsl
push
push
dec
out
or
gs
cmp
fnstcw
cmpsb
js
xchg
jo
movsb
push
push
xchg
xor
mov
xchg
cmp
fiaddl
cltd
jno
inc
cmc
mov
in
jno
inc
ds
test
pop
pop
sbb
inc
and
inc
jbe
mov
mov
mov
cld
adc
rorl
js
xacquire
jno
bound
cmpsb
cmpsl
int
test
jnp
jb
imul
aas
sub
push
clc
insl
sub
fldenv
pop
pop
mov
lods
in
addb
xlat
out
insb
in
jp
lods
and
mov
scas
mov
inc
dec
inc
xor
shl
pushf
iret
shll
lcall
xchg
arpl
pop
negb
sbb
ljmp
pop
cltd
popf
inc
int3
push
mov
aam
fcom
mov
pop
jns
jmp
cmpl
movsb
stc
xchg
adc
mov
mov
scas
lock
sbb
or
cs
aam
cmp
popa
das
popa
push
mov
call
sti
stc
sbb
cmp
movsl
sbb
out
iret
in
stc
mov
fs
into
push
fstpt
sbb
in
fildl
int3
fstps
and
push
pop
xchg
mov
push
dec
mov
and
scas
repz
movsb
or
mov
add
dec
add
mov
out
cltd
stos
pusha
xor
test
jno
cmpsb
and
adcb
or
mov
xchg
xor
mov
and
rorb
jge
sti
mov
jne
ret
mov
mov
out
and
push
add
add
fwait
inc
add
adc
add
and
add
cmp
inc
add
mov
inc
add
jp
add
loop
mov
sub
ret
mov
dec
mov
cmp
xor
in
test
ja
xchg
ret
ss
or
lahf
aaa
dec
popf
or
mov
insb
inc
repz
cmp
cmpsl
push
or
bound
xlat
lds
mov
lret
jb
jecxz
sbb
mov
pop
scas
mov
daa
sbb
xchg
jge
sub
movsb
jns
mov
xchg
pusha
shl
aad
jge
jp
cmpsb
mov
ss
cmp
subb
outsl
sbb
jb
sbb
loope
iret
lahf
and
lods
imul
mov
stos
jns
jmp
pop
or
fistpl
leave
dec
jb
iret
insl
das
addr16
leave
push
xchg
dec
mov
and
pop
xchg
sbb
xor
mov
add
pop
pop
movsl
test
cmp
in
int
mov
addr16
mov
or
sbb
mov
shl
insl
jo
sbb
push
lock
and
fnstcw
dec
jp
leave
xorb
adcl
push
dec
pop
orl
sbb
je
xor
in
push
or
call
movsb
xchg
push
movsb
pop
mov
xor
mov
mov
rol
cmpsl
fwait
nop
imulb
hlt
jmp
push
int
mov
cmpsb
shrl
nop
in
cmp
pusha
shll
mov
or
das
fwait
sbb
xchg
sub
jmp
ja
and
jo
xorl
aas
incb
das
dec
sbb
sub
test
arpl
ret
std
sub
sarl
pop
dec
fistpl
andb
and
cmp
pop
or
js
test
mov
or
and
lret
mov
movsl
out
push
push
stos
jge
int3
mov
xchg
or
cmp
aaa
and
push
movsl
mov
push
sub
push
xchg
xor
aad
dec
pop
popa
hlt
xchg
xor
jo
arpl
pop
mov
lret
scas
adc
add
mov
xor
out
mov
jae
notb
or
sub
cmp
mov
hlt
add
outsl
jno
test
mov
das
test
sar
in
mov
lea
in
mov
push
sbb
xchg
push
lea
xchg
xchg
sub
into
and
cmp
sarl
adc
cmp
jecxz
cmp
adc
cmpsb
jno
mov
lahf
pop
xchg
mov
into
push
jns
jge
adc
sbb
cmp
lods
dec
jbe
xlat
ss
jnp
cmp
adc
jne
mov
bnd
pop
je
mov
push
sub
adc
xchg
sahf
jne
adc
jne
mov
add
add
ljmp
cmp
imul
in
xchg
in
shr
xchg
mov
movsb
hlt
pop
mov
xchg
dec
stos
jmp
adc
out
repz
sub
popf
cmp
adc
int3
lods
jbe
push
mov
scas
sbb
sub
imul
loope
pop
ret
lods
into
out
or
mov
ret
pop
mov
pop
mov
mov
and
sbb
or
out
mov
mov
and
aaa
pop
stc
adc
cmp
leave
outsb
popf
push
adc
cld
inc
mov
mov
inc
pop
xor
jb
push
sub
popf
je
push
mov
push
add
lods
loop
std
cs
mov
daa
add
scas
pop
retw
pop
mov
out
fisubs
cmp
je
or
mov
adc
push
jl
enter
push
pop
xorl
into
int
mov
xchg
imul
aam
xor
xor
mov
xchg
iret
cmp
les
shll
and
in
pop
xchg
pop
lock
and
in
xor
in
mov
mov
mov
popa
imul
push
das
push
mov
pop
inc
mov
mov
jo
mov
add
push
and
pushf
testl
jge
addb
dec
cmc
insb
add
loop
sub
out
jo
sbb
mov
scas
add
loop
push
push
je
adc
hlt
xchg
test
fldenv
pop
call
addr16
add
push
aad
in
std
jl
out
mov
out
cmpsb
push
mov
movaps
pop
lods
pop
xchg
nop
imul
pop
or
pop
fwait
mov
cmpsb
push
cwtl
sbb
xchg
dec
xchg
jg
call
sbb
sbb
push
pushl
mov
bound
jl
jmp
pop
insl
xchg
out
mov
jnp
adc
xchg
mov
sub
mov
ja
repnz
xchg
xchg
jns
fisubrl
and
sbb
fwait
fwait
push
and
stos
mov
mov
test
xor
ljmp
jg
and
mov
lea
rolb
imul
pushf
mov
push
sub
pop
xor
mov
sub
mov
imull
and
add
fnsave
into
and
mov
ret
sbb
add
pushl
push
inc
xchg
sbb
lods
dec
pop
pop
call
adc
fadds
mov
dec
sub
mov
inc
and
scas
addl
add
add
pop
inc
enter
ds
fwait
sbb
aas
leave
mov
adc
hlt
mov
loopne
aaa
add
inc
aas
fistpll
pop
pusha
imul
pop
mov
sbb
xorl
ss
mov
fs
jno
out
xor
cli
mov
mov
test
insl
incl
jbe
mov
movsb
dec
xchg
jnp
iret
dec
and
dec
jge
xchg
jle
addb
push
loope
fadds
int
push
push
xor
rclb
xor
jb
inc
data16
cs
push
adc
sub
rorl
mov
rolb
push
fstl
inc
sbbb
icebp
or
shrb
das
jno
sti
mov
ljmp
lret
add
mov
push
xchg
push
lods
lea
stos
stos
mov
and
cmpsl
mov
push
push
sub
add
sbb
mov
cmpsb
inc
or
pop
in
mov
lea
push
add
xchg
outsl
es
cs
in
lock
cld
faddp
loopne
or
sbb
push
jno
sub
inc
push
cltd
lahf
outsl
stc
jge
ret
arpl
cli
xchg
stos
mov
xor
sub
js
add
xchg
pop
inc
or
icebp
sbb
mov
sbb
sub
lods
sub
push
mov
enter
pmulhw
lea
mov
push
push
jmp
jnp
mov
sub
fwait
mov
adc
int
fistps
cmpb
cwtl
ret
cld
lods
ljmp
inc
mov
or
adc
scas
and
movsb
or
push
lock
fmul
mov
pop
in
mov
xchg
shlb
inc
mov
cmp
cmp
jmp
ja
adc
ret
outsl
push
mov
addr16
adc
pushl
mov
lds
xlat
stos
mov
jb
fisttpl
jl
xchg
mov
imul
lods
in
fldenv
jns
rcrb
xor
adc
mov
lods
stos
pop
mov
ds
mov
add
ret
mov
lods
into
sub
pop
test
sub
lock
push
xchg
jmp
stos
or
mov
popa
bound
aaa
pop
lds
mov
movsl
dec
and
roll
xchg
out
in
popf
sbb
jg
add
adc
sbbl
jne
mov
push
sub
enter
arpl
aad
mov
xlat
push
mov
xchg
ret
sbb
dec
test
js
pushf
mov
xlat
sti
enter
dec
add
push
loope
inc
inc
ss
sub
cmp
mov
push
mov
scas
test
fstps
aad
jae
add
push
popa
iret
cmpsb
inc
push
cmp
les
xor
mov
sub
in
ja
fldcw
out
inc
shrb
ret
cmp
mov
rclb
mov
sbb
inc
shll
lds
dec
int3
mov
push
cmp
dec
xchg
roll
push
cmc
mov
lret
xchg
lahf
cmp
mov
movsb
jno
cmp
inc
xchg
mov
push
pop
lock
jl
lcall
stc
sahf
in
dec
lods
add
mov
repnz
lods
cwtl
push
adc
sbb
popa
fbld
and
sbb
cli
fdivs
xlat
push
call
mov
mov
rclb
mov
dec
lcall
dec
daa
inc
push
aas
lcall
scas
les
aaa
cmp
daa
fstpt
jmp
mov
ljmp
cmp
lods
ss
insl
enter
push
stos
cmp
pop
imul
js
push
mov
addr16
rcll
out
and
mov
jl
lods
lods
out
jbe
pop
push
jmp
cmp
lds
pop
ja
xorl
pop
stos
arpl
js
push
fbstp
push
pop
jnp
stos
dec
xchg
jnp
negl
xchg
add
insl
adc
inc
mov
or
push
rorl
inc
push
inc
jecxz
pop
cli
enter
outsb
mov
arpl
jecxz
mov
aas
mov
notb
lcall
je
cli
jne
repz
imul
jb
adc
mov
inc
mov
lret
jle
bound
add
mov
jns
mov
pop
pop
inc
stos
cmpsl
fldcw
add
icebp
das
imul
pop
sub
push
sub
push
pop
pop
js
fs
out
and
pop
jp
pop
push
push
imul
xchg
cmp
dec
inc
and
loopne
pop
dec
sahf
add
stc
lret
mov
frndint
push
sub
or
jmp
cmp
dec
dec
push
dec
les
adc
lret
mov
or
scas
add
enter
cs
sbb
loope
jae
pop
push
mov
xchg
cld
xchg
add
add
or
lret
in
das
aas
add
mov
aam
mov
mov
movsl
mov
and
mov
in
xor
fidivrs
pop
inc
dec
push
dec
fstpl
push
cmpsb
push
mov
adc
ja
pop
clc
cmp
inc
sbb
imul
and
add
xor
xchg
lcall
in
pop
leave
cmp
inc
push
hlt
push
sar
push
leave
jno
jne
sub
enter
ficompl
sbb
pop
test
in
pop
testl
xor
push
mov
int3
push
hlt
dec
scas
add
insb
pop
pop
pusha
jge
sub
scas
jnp
aaa
sub
pop
imul
idivl
xor
cmp
mov
pushf
xor
and
mov
fsts
adc
ja
and
or
movsb
scas
cmpsl
outsb
jns
jae
imul
insl
sub
outsl
loopne
pop
jo
mov
or
lock
cwtl
ljmp
or
fimuls
aaa
jns
pop
xchg
mov
push
inc
or
in
inc
pop
cmp
cmpsl
ficompl
adc
pop
data16
stc
sub
mov
lea
dec
inc
fsubrs
xor
xchg
sarb
stos
push
shlb
aam
int3
cmpsb
mov
and
mov
add
dec
test
jge
mov
cmp
test
sbb
sbb
ljmp
negl
pushf
iret
int3
jecxz
mov
fstl
adc
mov
dec
mov
lcall
mov
xchg
das
jmp
scas
into
pop
leave
enter
sub
cmp
and
xchg
pop
aaa
push
stc
jnp
dec
aam
data16
inc
xchg
popa
and
test
test
imul
fs
roll
mov
into
inc
outsl
inc
bound
mov
pop
sbb
pop
xor
xchg
and
sahf
push
adc
and
xchg
xchg
test
xchg
pusha
frstor
aas
cmp
aas
mov
mov
push
xor
imul
les
mov
clc
pop
dec
lret
jge
mov
nop
push
dec
lret
jae
mov
lret
mov
andb
sbb
jnp
lret
inc
or
cwtl
sbb
push
push
jno
or
add
lret
sti
mov
std
sub
movsb
mov
sub
xchg
push
and
cwtl
inc
push
add
sub
push
jno
and
mov
and
lretw
add
in
cmp
xor
and
rcl
mov
test
pushf
mov
push
inc
mov
or
push
jnp,pn
or
leave
ss
dec
pop
in
add
lret
sub
mov
xchg
inc
sub
mov
notl
ds
data16
cmpsl
jmp
lods
or
inc
push
shlb
orb
mov
imul
gs
add
pop
mull
or
mov
ljmp
out
mov
cmc
lret
repz
testl
push
fstps
or
cmp
lea
pushf
cmc
out
aam
sarb
cli
fmull
mov
mov
negb
lcall
inc
cmp
icebp
lds
bound
or
jge
enter
inc
cltd
sub
inc
movsb
test
pop
mov
pop
lcall
dec
lea
cmc
pusha
aaa
sub
imul
mov
and
pop
in
aas
icebp
mov
xadd
jnp
lret
cmp
cmp
inc
je
mov
ljmp
std
and
jbe
cmp
add
dec
imull
inc
push
add
sub
push
adc
xor
push
adc
or
mov
fs
jle
movsb
cmp
sbb
imull
dec
jecxz
inc
ds
xor
in
mov
adc
sub
add
das
dec
mov
xchg
cmp
ret
scas
lret
loope
cli
sub
lds
jne
ss
mov
mov
repz
mov
test
jl
push
inc
lahf
add
jns
test
or
out
inc
pop
mov
and
adcb
aas
lea
lret
aaa
push
out
int3
shll
sahf
cmc
xchg
and
addr16
cmp
imul
pop
mov
and
xor
dec
int3
inc
stc
stos
into
push
cli
sbb
addb
scas
mov
mov
cmp
mov
lea
mov
lods
lahf
and
gs
sbb
lds
cmpsl
sub
dec
mov
dec
cmc
mov
subb
xchg
pop
push
push
jo
mov
sti
repnz
fcoml
mov
mov
xlat
pop
dec
mov
jnp
mov
jne
cmp
scas
idivl
mov
and
pop
js
xlat
dec
call
stc
xorb
push
xchg
sbb
add
push
fcoml
add
daa
out
push
add
jnp
ret
xor
hlt
push
cmpsb
pop
out
popa
push
fiadds
push
mov
dec
lahf
fcompl
sahf
or
dec
enter
inc
ss
dec
jb
pop
popf
fnstsw
testl
fisubs
mov
adc
add
xlat
fidivs
inc
xchg
push
pusha
jge
mov
mov
std
mov
mov
xor
ret
mov
in
xchg
inc
shrb
in
sbb
sarl
movsb
mov
out
stos
inc
scas
jp
fdivr
cmpsl
push
pop
test
in
in
icebp
stos
sbb
mov
pop
es
adc
je
xlat
inc
xchg
add
add
mov
repz
test
xlat
call
outsl
into
mov
call
lds
aaa
bound
movsb
aaa
xor
gs
ds
lea
cmp
add
and
mov
loope
fsub
pop
scas
cli
insl
push
push
dec
mov
int3
cmp
xor
dec
cli
test
xchg
pop
ja
cltd
pop
dec
cmp
lret
xchg
jno
gs
bound
jecxz
push
clc
mov
xchg
es
cmp
mov
enter
or
xorl
daa
and
popa
cmc
stos
fisubs
stos
shlb
scas
outsl
inc
mov
xchg
mov
cwtl
xor
sbb
and
repz
mov
pop
add
sub
out
inc
mov
sbb
int
cmp
inc
sbb
aam
int3
cmpsl
sbb
pop
mov
fisubl
and
sti
clc
addl
ja
mov
push
inc
mov
cmp
mov
push
call
sbb
ret
and
pop
fisubs
popa
sbb
test
jb
negl
push
jmp
test
adcb
sbb
add
jecxz
out
push
lds
push
shll
push
push
repz
dec
icebp
push
fcmovnu
cmp
popa
gs
push
adc
das
bound
cwtl
inc
push
aad
fnsave
cmp
adc
sahf
sarb
xor
frstor
sbb
pop
arpl
adc
adc
out
pop
stc
cmpsl
pop
xchg
fstpt
seta
std
jbe
adc
xchg
out
push
push
out
sbb
lods
clc
inc
scas
add
in
push
dec
nop
jl
ljmp
icebp
shrb
adcb
mov
inc
arpl
mov
mov
push
xchg
pop
sub
adc
cli
inc
sarl
or
nop
test
sub
enter
das
fildll
fistpll
pushf
scas
lods
xchg
sub
sub
mov
inc
xor
int3
sbb
jbe
outsb
push
jl
in
in
mov
adc
test
cmpsl
pop
and
gs
scas
adc
insl
cmp
call
ljmp
jo
adc
xor
mov
rclb
ds
mov
imul
sbb
movsl
movsl
jbe
mul
cmp
aad
jbe
xor
mov
sbb
mov
and
cmp
sub
lods
mov
adc
and
cmp
mov
mov
inc
jo
daa
mov
in
xlat
sbb
movsl
enter
or
test
cld
pop
pusha
into
or
movl
dec
outsl
cmpsl
aas
or
ret
push
or
mov
pop
cld
push
jmp
mov
les
jno
mov
and
lock
push
into
and
nop
inc
mov
sbb
scas
mov
inc
jp
cltd
outsb
jb
push
in
jb
ljmp
mov
jns
mov
mov
push
xchg
inc
push
or
fucom
flds
sub
lret
in
dec
xor
insl
arpl
dec
mov
pop
iret
xchg
sbb
lcall
pop
mov
lods
out
lock
mov
arpl
bound
cmp
jno
jp
sub
xchg
push
pop
jb
mov
movsl
mov
cmp
xchg
int3
sahf
push
ret
int
inc
fld
in
push
push
into
lds
add
sub
nop
cltd
jne
xchg
cmp
sub
lock
aam
icebp
inc
mov
cwtl
pop
push
ss
push
sub
stos
sub
jl
push
lcall
mov
inc
and
les
cs
sbb
ljmp
orb
mov
and
insl
lock
jno
pop
cmp
popa
incb
lds
pop
popl
dec
fwait
int3
hlt
test
mov
imul
mov
or
sahf
mov
push
in
mov
sar
nop
push
and
inc
cmp
jbe
jb
xchg
xorb
sbb
fistpll
cmpl
dec
pop
jmp
cld
lret
sbb
cld
add
es
sahf
lods
scas
xchg
pushf
sti
cmp
aas
or
sub
fsubl
pop
xchg
std
inc
mov
push
or
cmp
jl
sarl
addb
push
aam
sub
loop
arpl
xchg
sbb
bound
adc
scas
mov
aam
cmpsb
rolb
sub
mov
add
mov
rol
inc
cmp
inc
stc
in
and
xchg
xor
inc
xchg
test
adc
hlt
and
loopne
sbb
lds
rcrl
sbb
pop
xchg
cwtl
test
adc
into
xorb
mov
and
jle
mov
mov
test
fs
iret
int
mov
push
ret
repz
sbb
stos
dec
sbb
int
cmp
outsb
sahf
xchg
and
pop
ret
ret
inc
mov
push
nop
es
pop
clc
xchg
push
daa
dec
sub
out
lods
cmpsb
popa
pop
jmp
nop
mov
movsb
sbbb
pop
mov
unpckhps
aad
pop
xchg
add
fsubrs
fwait
xchg
rclb
sbb
imul
bound
push
pop
push
arpl
add
cmp
fs
enter
sub
dec
mov
movsb
mov
shll
cmpsb
add
inc
lret
nop
sub
int
mov
nop
ljmp
fisubs
pop
push
cmp
xchg
xchg
out
inc
mov
test
clc
dec
xchg
and
mov
mov
pushf
inc
jno
jno
dec
pop
mov
xor
jbe
and
call
push
shll
adc
dec
fwait
int
shll
mov
mov
and
push
adcl
imul
stc
inc
scas
adc
ljmp
cld
test
pop
pusha
lods
aam
aam
out
xchg
ljmp
out
mov
ret
pop
rol
inc
je
pop
cmpsl
idivl
mov
dec
mov
mov
pop
clc
push
mov
rolb
scas
data16
jnp
xor
mov
add
test
xchg
mov
insb
xchg
pop
mov
jmp
lcall
mov
clc
pop
int3
mov
das
es
mov
push
xor
pop
sbb
inc
lcall
lock
sbb
push
lea
stos
mov
insb
jl
pop
es
fistpll
jecxz
xchg
jle
mov
inc
xchg
pop
daa
or
cmc
std
hlt
ja
xchg
push
mov
leave
pop
mov
fisttpll
or
and
mov
jo
inc
dec
in
xor
jl
sbb
ss
cwtl
imul
imulb
or
jl
stos
jle
int3
mov
movsl
jecxz
fisubl
add
sbb
adc
jae
fwait
enter
or
sar
push
repnz
stos
shr
mov
xor
push
push
leave
mov
xchg
sahf
lock
jl
xor
xchg
test
jmp
mov
lret
scas
add
dec
enter
adc
ja
sahf
lahf
fs
jmp
imul
xor
adc
rorl
outsb
push
xor
rcll
xor
ret
loope
in
xor
mov
loop
add
gs
push
dec
pop
and
pop
ljmp
add
push
jmp
or
imul
ficompl
push
scas
pop
add
dec
sbb
cmp
fbstp
cmp
mov
and
add
popa
mov
jo
add
add
fimuls
xchg
or
and
daa
mov
adc
icebp
test
stc
push
pop
ss
mov
ret
fistps
call
cli
int
or
fsubrl
rorb
jns
shll
rcrb
into
jl
or
and
sbb
gs
fists
mov
mov
pusha
jle
and
adc
xchg
sub
stos
aaa
and
dec
and
mov
cmp
adc
inc
or
fwait
mov
insl
xor
jae
sti
movsb
sub
mov
pusha
icebp
adcb
add
sbb
cmp
rcrb
jg
movsl
push
mov
sub
cmp
subl
xor
in
ret
lret
add
lahf
dec
lods
adc
push
dec
test
cli
lret
in
movsb
fmull
pushf
pusha
popf
lock
test
das
cmp
rol
sub
lea
cltd
mov
mov
sar
repz
fsubl
out
ficomps
in
adc
arpl
xchg
test
ficomps
or
pop
dec
jg
and
repz
neg
jno,pt
repnz
daa
lock
push
loopne
mov
popf
dec
inc
lret
pop
mov
mov
mov
lcall
rclb
and
add
pop
xchg
cmp
fidivl
test
call
addb
mov
std
mov
sbb
in
xchg
les
loop
dec
adc
dec
insl
sar
sahf
adc
dec
dec
outsb
lock
adc
pop
das
stc
rclb
test
dec
lahf
fstpt
addr16
mov
lea
mov
pop
adc
sub
inc
inc
push
dec
inc
jmp
addr16
daa
ss
mov
leave
loope
sbb
xlat
cmp
ret
dec
subl
lock
xlat
jae
stos
cmp
addb
inc
mov
scas
or
es
xor
mov
dec
fistpl
xchg
loope
inc
hlt
xor
sbb
add
sar
jl
push
cli
sub
adc
sahf
loope
push
adc
xchg
inc
nop
call
gs
mov
mov
cli
fsub
jae
inc
add
mov
mov
test
dec
pop
ficoml
mov
inc
jmp
mov
pop
xchg
aas
push
subb
mov
push
enter
sti
fwait
cmpsb
push
pop
pop
adc
fxch
dec
xor
push
aaa
and
shr
out
xlat
mov
xchg
sub
cmp
lods
nop
mov
sub
jecxz
sub
fistpll
mov
loope
xchg
push
lahf
testl
adc
shrl
addl
and
and
mov
cli
clc
cmpsl
jl
shrl
inc
testb
arpl
lods
gs
cmp
mov
test
sub
loop
pop
sbb
lahf
xchg
ss
les
jg
adc
sahf
mov
leave
push
push
push
inc
mov
into
mov
cmp
movsl
pop
shr
out
repnz
out
push
ret
cli
shrl
mov
xor
push
mov
dec
rcrl
bound
xchg
dec
ret
dec
sub
lret
mov
or
sbb
js
mov
push
mov
mov
fisubrl
push
inc
adc
mov
mov
leave
mov
popf
sbb
repz
in
ds
jmp
hlt
dec
adc
pop
jnp
sbb
push
loopne
lcall
and
stos
and
adc
and
mov
jl
les
movsl
pop
sti
xchg
inc
dec
shufps
andl
mov
das
cli
fwait
and
mov
inc
adc
adcl
icebp
inc
out
rolb
or
mov
cmp
sbb
cli
push
cmp
sbb
pop
mov
mov
pop
popa
mov
das
mov
cld
adc
add
mov
mov
mov
scas
lods
mov
cld
push
les
jg
shrl
mov
pop
stos
pop
sti
loop
xor
mov
es
scas
dec
out
cmpsl
fnstcw
pushf
vandps
jmp
pusha
or
aad
es
rol
int3
aaa
xchg
mov
push
sub
jecxz
js
and
mov
sbb
adc
sub
sub
or
les
fs
mul
xchg
out
in
loope
dec
xchg
lea
inc
jmp
and
enter
movsl
mov
xchg
fisubrs
add
xchg
test
cmpsb
aad
or
push
loop
dec
mov
mov
cmpb
add
or
mov
mov
add
inc
inc
pop
lahf
fidivrs
mov
lea
test
and
aaa
pushf
cmp
rol
fistl
jmp
xor
stos
add
inc
addr16
dec
sub
pushf
lahf
cwtl
inc
xchg
adc
lcall
mov
out
adc
hlt
add
js
mov
sbbl
decb
dec
nop
dec
xchg
cmp
aam
out
frstor
mov
xor
ret
push
pop
insb
icebp
lahf
push
dec
or
sub
sub
sub
dec
inc
mov
inc
int
xchg
es
mov
repnz
fwait
stc
jge
aas
insl
cmp
mov
aad
and
pmuludq
mov
out
scas
mov
out
iret
mov
inc
repz
jmp
xor
lret
pop
inc
cmp
push
mov
mov
add
in
pusha
sub
and
loopne
into
jnp
ljmp
dec
pushf
int
jmp
sbb
out
lods
fbstp
cmp
lods
int
rorb
pop
xrelease
inc
and
addr16
lret
and
mov
pop
xchg
cld
call
not
sti
adc
js
scas
out
mov
shr
mov
outsb
shlb
out
mov
adc
lock
test
pop
mov
add
and
in
cmp
mov
adc
fldenv
jbe
hlt
push
xchg
jmp
int3
sub
sti
aas
adc
fwait
xchg
or
inc
xlat
lods
nop
or
push
sar
inc
icebp
cmp
int
xchg
jne
mov
xor
jno
nop
gs
add
fistl
enter
dec
lcall
xchg
cli
or
mov
outsb
repz
xchg
mov
dec
mov
in
fcompl
and
lahf
mov
inc
inc
pop
or
lock
aas
pop
inc
out
pop
lods
lcall
or
or
and
test
mov
pushl
cmp
enter
xchg
dec
inc
sub
cmp
enter
and
push
sti
mov
xor
mov
icebp
adc
nop
xor
lods
pop
mulb
leave
inc
sti
or
fmul
jmp
lret
mov
push
adc
push
repz
mov
loopne
push
jle
int
and
add
push
shrl
test
sub
daa
iret
mov
shlb
cltd
jb
fcmovb
js
cld
cmp
sarl
jl
test
ljmp
mov
mov
mov
sub
mov
inc
test
loopne
in
int3
dec
mov
jae
inc
inc
out
stos
mov
add
mov
movsb
repz
cmpps
mov
pop
xor
into
pop
push
jnp
dec
xchg
cs
or
pop
inc
lret
loope
imul
jp
dec
stc
pop
pmulhuw
cmpsb
sub
push
mov
jl
jno
out
mov
inc
rcl
add
cwtl
out
mov
lds
flds
daa
and
cs
outsb
mov
lret
fcoml
insb
add
das
pop
andb
mov
int
stc
lods
xchg
mov
cmp
or
xor
scas
sbb
jecxz
inc
std
sbb
xchg
cmp
or
outsb
movsb
aam
xchg
test
shl
fistpll
sub
dec
ss
or
push
test
jae
dec
rcll
mov
mov
das
lods
or
sarl
push
pop
sbb
nop
enter
shlb
outsb
sub
inc
enter
ret
add
pop
add
cld
cmpsb
pop
stos
jmp
mov
sbb
adcl
fwait
pop
jl
xor
leave
jg
subb
cmpsb
cmp
shrb
mov
shlb
sub
mov
fisttpll
xchg
imul
pop
jl
out
pop
mov
lods
mov
ficoms
mov
arpl
pusha
push
adc
dec
ss
ret
adc
ret
mov
int3
xor
pushf
dec
scas
adc
bound
xor
push
jp
adc
bound
jnp
and
add
cmp
and
mov
adc
divb
push
lret
popf
lock
mov
add
mov
pushf
divb
mov
fwait
mov
xchg
and
add
mov
jns
cmpsb
sub
out
fistps
mov
cmp
pop
dec
mov
scas
mov
mov
lahf
aaa
insl
outsb
push
daa
push
clc
cmp
add
stos
jb
xor
and
sbb
adc
push
xor
sbb
push
xor
stos
cmp
jno
or
and
mov
cwtl
xchg
jne
aaa
hlt
jb
movsb
rorl
movsb
push
add
nop
sbb
fnstenv
xchg
stos
mov
fnsetpm(287
cmpsb
icebp
imul
out
pop
ret
je
movsl
fdivl
cmpsb
arpl
xchg
loop
cmp
stc
xlat
test
mov
lret
adc
inc
mov
stc
in
repnz
and
stos
cmc
add
add
xlat
or
negl
in
mov
cmp
test
add
mov
mov
addr16
lds
pop
rclb
stc
aas
je
mov
test
sub
mov
in
hlt
fldcw
fucomi
jge
std
sub
mov
in
stos
les
mov
mov
adc
orb
cmpsl
insl
mov
addb
movsl
adc
ffree
xchg
pop
mov
push
das
test
inc
ljmp
jecxz
into
mov
inc
pusha
fldt
lds
inc
mov
imul
sahf
mov
ret
lock
add
mov
jge
js
inc
xchg
mov
in
mov
push
mov
mulb
stos
dec
xchg
movzbl
inc
cmp
leave
ret
sti
xchg
or
loopne
and
pop
das
cmp
xchg
push
das
mov
outsl
rclb
mov
aad
in
ret
imul
jmp
rcll
and
test
or
fstpl
adc
pop
dec
push
subl
icebp
repz
push
sahf
fists
int
mov
add
and
jbe
push
push
cmp
push
sub
adc
cmpsb
push
movsb
cs
stos
mov
ficompl
cmp
orb
mov
scas
pop
sarl
mull
mov
repnz
cmp
dec
cld
mov
jb
mov
pushf
sbb
jbe
rolb
andb
hlt
sub
insb
mov
sahf
push
ja
sub
push
or
test
mov
pop
inc
test
aaa
iret
cmp
mov
dec
mov
push
pop
jg
test
scas
adc
flds
int
mov
xor
stos
fiaddl
or
cs
enter
push
cmp
imul
hlt
lret
daa
fsubs
xchg
xor
lds
mov
push
std
push
or
lret
out
mov
stos
sub
push
pop
hlt
data16
and
lahf
ljmp
sub
in
push
rorl
imul
stos
mov
inc
pop
aam
mov
add
mov
loope
cvttps2pi
dec
pop
cmp
adc
bnd
ja
dec
movsl
mov
push
mov
jp
sahf
cwtl
add
das
ljmp
mov
mov
jno
lock
stos
pop
ja
or
mov
sbb
mov
xor
mov
imul
stos
dec
sbb
addr16
push
jnp
pop
es
jne
pushf
push
addr16
das
out
mov
mov
stc
ja
leave
aam
lcall
pop
jno
pop
sbb
mov
out
and
mov
hlt
dec
push
outsb
into
rcr
and
loope
add
and
sbb
adc
xchg
mov
dec
mov
out
gs
bound
sbb
icebp
jb
jb,pn
pop
jmp
mov
bound
loopne
fdivrp
into
popf
shlb
mov
and
inc
mov
aaa
frndint
or
in
mov
popa
jb
xchg
fs
insb
cmp
aaa
or
les
pop
mov
sub
insb
mov
andb
push
iret
fs
pop
push
mov
mov
test
add
xor
pop
imul
scas
jg
arpl
popa
sub
push
adc
arpl
sub
push
imull
imul
in
and
cld
dec
inc
addb
les
push
or
push
int
js
and
sbb
fldenv
and
jne
or
jne
leave
mov
add
in
in
dec
in
xor
sbb
or
fwait
jnp
jg
inc
sbb
arpl
lcall
push
stos
cmpsb
dec
cli
or
push
pop
and
ss
mov
push
mov
mov
int
xor
dec
int
lcall
mov
ss
cli
jp
xchg
cmc
push
push
or
notb
sbb
push
dec
aad
insb
negl
pop
mov
xchg
shl
daa
test
and
xor
int
lret
pushf
lds
pop
sbb
ret
ljmp
hlt
dec
jne
sti
xor
int
inc
lea
das
nop
xchg
cmp
jae
cmp
jb
dec
jg
mov
jmp
jne
mov
lret
dec
cltd
and
push
stos
iret
in
repz
pop
jns
clc
lea
fidivrs
xchg
stc
push
js
push
jp
inc
adc
dec
xchg
inc
cli
loope
add
std
test
fdivrl
inc
arpl
xchg
arpl
outsb
jne
push
push
inc
pop
or
pusha
movsl
sahf
dec
cmp
ds
aaa
fwait
xor
cmpsl
ljmp
jle
scas
lods
test
fisubrs
lahf
xor
jb
adc
pop
jo
push
sbb
mov
jo
cmp
sahf
into
lret
jl
mov
dec
jmp
mov
add
inc
or
sahf
cli
jecxz
lea
or
fs
push
int3
inc
xchg
dec
or
inc
mov
pop
jb
push
std
mov
add
aad
adc
inc
sbb
stos
push
jecxz
js
movsb
xlat
insb
popf
sub
call
mov
fsubl
cld
shl
mov
xchg
mov
shll
hlt
fdiv
popf
cmp
lock
xchg
lahf
add
fnstsw
mov
xchg
xor
ds
pop
sub
xchg
add
push
loopne
dec
insb
outsl
inc
sbb
or
adc
lea
cmp
cli
mov
or
cli
pop
fisttps
lods
jno
pop
dec
xor
fldenv
mov
repnz
std
roll
scas
add
dec
fs
jbe
add
movsl
xor
sub
xor
lcall
sub
dec
stos
pop
push
int3
add
push
lock
or
sbb
xchg
aam
fucomi
into
dec
add
mov
push
sbb
insl
js
or
mov
ret
mov
sbb
lods
jmp
neg
adc
mov
mov
mov
mov
push
addr16
sbb
push
xorl
jne
aam
push
hlt
xor
dec
rol
sub
sub
je
sub
mov
pop
xchg
or
sub
in
pop
or
xchg
movsb
enter
inc
fsubs
ds
cmp
ljmp
dec
test
adcl
mov
dec
or
sub
hlt
and
push
or
repz
seto
pop
add
repz
aam
mov
lds
inc
imulb
je
push
pushf
dec
add
test
mov
dec
leave
call
pusha
clc
pop
ss
popf
lods
cmpsl
jecxz
ret
aad
ror
pop
cmp
int
add
lcall
jge
jno
or
loopne
mov
inc
jo
adc
fiaddl
adc
mov
jmp
sbb
jnp
nop
outsb
mov
shl
cmpsb
pop
icebp
cmc
test
xor
lods
push
adc
enter
hlt
outsb
imulb
insb
dec
cld
and
push
fstl
js
mov
or
lahf
fiadds
lret
xchg
mov
add
test
add
cmp
fcmovb
push
cmp
push
push
mov
xchg
fmull
addr16
add
pushf
mov
cmp
mov
mov
jg
push
pop
shll
pop
add
mov
pop
es
push
sub
mov
into
jmp
hlt
inc
pop
dec
test
xchg
inc
push
rorb
inc
es
decl
pop
adcb
dec
push
xlat
jns
jo
pushf
and
loop
inc
add
test
add
cmpsl
sub
movsb
movsb
outsb
jl
mov
les
xor
inc
jecxz
in
ss
xor
aad
push
inc
push
sbb
ret
pop
lcall
sub
or
imul
lock
cwtl
sbbl
mov
pop
jecxz
int3
mov
xor
xchg
mov
mov
xorl
add
inc
xor
dec
js
cmc
pop
fbstp
xor
scas
sbb
adc
inc
inc
jns
cld
adc
dec
hlt
and
push
fcoms
xchg
mov
scas
or
in
sbb
lcall
add
cmpsl
jns
test
data16
inc
mov
test
inc
int
pop
mov
cmp
jno
aad
imul
adc
jne
into
mov
jb
mov
push
test
push
xchg
fidivs
xchg
add
jg
jmp
call
jb
leave
lea
cmp
jnp
add
fs
cld
dec
and
pop
and
sub
es
popa
aam
pusha
fisubs
test
mov
mov
nop
repnz
lds
mov
mov
mov
scas
add
in
push
dec
insl
adc
call
test
mov
xchg
jge
aaa
mov
inc
sub
js
cmc
push
mov
jge
ja
mov
dec
mov
jmp
rcr
cmp
xor
mov
bound
xchg
hlt
sub
lahf
xchg
imul
xchg
push
mov
sub
lret
es
pop
ljmp
and
inc
fidivs
test
int
neg
call
scas
into
fcoms
pop
pop
mov
enter
in
or
outsb
jbe
push
mov
dec
daa
out
adc
movb
cwtl
adc
mov
xchg
sub
jge
sub
jns
rcrb
scas
inc
ret
mov
inc
sub
adc
mov
cs
adc
popl
cmp
shll
in
pop
cmp
mov
mov
mov
dec
fidivs
sbb
stos
xchg
in
jns
pop
psllq
lret
mov
xor
mov
and
jnp
push
sub
xor
push
test
lea
jo
pop
mov
std
pop
add
push
test
pop
mov
cmpsb
fcom
aas
jg
adc
enter
daa
mov
mov
mov
or
js
jmp
lods
test
inc
aas
mov
ud1
imul
lock
out
jnp
dec
mov
jno
imul
leave
lahf
cmpsl
sbb
jle
xchg
enter
mov
insl
lret
punpcklwd
push
inc
mov
movsb
sub
mov
jle
shll
shrl
push
sub
sbb
mov
fcoms
aam
jle
stos
cmp
push
adc
pop
mov
mov
and
jno
sub
fidivl
jbe
or
cmp
adc
jmp
xor
out
add
dec
nop
jecxz
push
or
push
adc
mov
stos
jnp
and
dec
lcallw
enter
aas
in
fistpll
pusha
cmpsb
pop
sbb
ret
pop
pushf
dec
jno
xchg
adcb
pop
test
sub
sub
and
fs
push
and
push
xchg
inc
inc
pop
cld
addr16
pop
push
add
movsl
subl
xchg
or
in
mov
adc
xchg
jp
movsl
mov
aam
jmp
jb
mov
out
mov
or
out
xor
mov
xchg
pop
or
mov
out
in
push
mov
mov
stc
int3
jns
mov
xor
pop
mov
repz
or
adc
sbb
fistpll
pusha
icebp
jo
jmp
dec
mov
adc
and
imul
mov
jge
inc
pop
mov
xor
or
mov
sti
iret
out
jns
xabort
dec
lods
pop
lahf
pop
movsb
dec
in
mov
push
add
mov
jmp
stos
or
inc
je
fidivl
inc
fwait
int
pop
push
mov
vcvtdq2pd
sub
mov
data16
add
push
jmp
loopne
pusha
mov
outsb
mov
mov
aad
or
rcrb
adc
and
dec
movsb
std
add
sub
cltd
sbb
ss
fdivr
pop
in
shll
sub
mov
stc
les
lds
ja
addb
sub
mov
xor
inc
sti
dec
or
pop
xor
stos
xor
pushl
addr16
call
flds
jecxz
aaa
stos
mov
cmpsl
repz
scas
lret
lea
inc
clc
push
pop
cmp
mov
jmp
mov
or
rcrl
inc
dec
stos
sub
repnz
xorb
or
fcmovnbe
inc
dec
ret
or
shrb
mov
push
sub
scas
jae
pop
lods
pop
push
xchg
adc
jae
xchg
test
lock
lret
in
add
in
pop
shll
pushf
rorb
xor
pop
push
sub
xchg
mov
adc
jl
ja
push
inc
xchg
push
cwtl
or
sub
add
mov
cmp
data16
rcrb
repnz
adc
decl
mov
faddl
lea
adc
lds
rclb
xor
xor
movsb
lds
dec
sahf
cmpb
popa
pusha
outsb
sbb
jle
jl
in
fsubrl
es
dec
push
loopne
sar
jecxz
cli
fsubl
insb
lock
into
enter
enter
mov
shrl
pop
xchg
sti
fst
mov
push
pop
cmp
mov
sub
pop
hlt
movsb
xor
mov
inc
pop
inc
test
ds
pushf
sbb
push
sbb
sub
or
mov
add
lret
out
jg
popa
dec
push
ljmp
out
xchg
test
pop
sbb
xchg
fbld
arpl
sub
nop
movsl
or
inc
pushf
in
hlt
int
mov
insl
mov
sub
mov
aaa
mov
pop
jmp
icebp
pop
jae
std
sti
jne
test
xchg
test
push
push
add
inc
xor
cwtl
xchg
xor
stc
and
xchg
add
test
pop
and
out
je
inc
add
lea
inc
pusha
sbb
jne
jl
rcll
pusha
pusha
push
cmp
cmp
lcall
lock
lret
es
inc
mov
jmp
cwtl
mov
fwait
cmp
cwtl
shrl
push
ja
ja
dec
jge
xchg
adcl
nop
inc
jo
push
sbb
jge
inc
jo
xor
int3
cwtl
aas
or
je
lods
sub
xchg
test
jo
mov
push
pop
fxtract
addr16
lret
xchg
shlb
jg
xor
mov
lret
lock
cmp
jp
or
aas
dec
xchg
push
xchg
xchg
cli
stc
mov
adc
pop
inc
and
das
sbb
test
cwtl
outsl
xchg
jg
dec
jbe
jae
fimuls
adc
nop
cmc
inc
aaa
gs
in
incb
arpl
shrl
sbb
mov
mov
mov
std
into
push
data16
fwait
daa
dec
pusha
mov
mov
hlt
movsl
test
lret
shrb
sbb
les
stc
rcl
shlb
bound
dec
add
mov
out
adc
adc
pop
pop
pusha
sbb
mov
enter
add
push
push
fidivrl
xchg
and
mov
inc
xchg
or
dec
fwait
ds
jae
jae
sahf
xchg
insl
or
jecxz
add
pushf
fcomps
adc
jmp
push
push
stos
jns
pop
vfrczsd
jo
cmpl
xor
lret
pop
push
xchg
cmpl
cmpxchg
dec
mov
push
hlt
push
aad
xor
nop
adc
dec
stos
mov
pop
pop
arpl
cmp
scas
pop
xor
add
icebp
dec
mov
jle
mov
iret
movsl
jo
outsl
bound
push
aad
xlat
orb
cwtl
je
pop
push
sub
fwait
xor
into
dec
mov
mov
int3
lcall
mov
xor
fs
out
jns
mov
orl
lock
roll
outsl
scas
lock
mov
adc
pusha
push
mov
mov
mov
test
ja
mov
pop
addl
popf
push
femms
fcmovb
dec
sbb
add
js
dec
push
sub
sti
mov
ja
leave
insb
cltd
out
mov
call
mov
sbb
fidivs
aaa
jo
outsl
nop
clc
xchg
mov
rorl
cmp
add
or
aas
adc
mov
test
orl
sub
ss
xor
jmp
adc
xchg
leave
push
inc
push
call
js
fxtract
outsb
sbb
loope
sti
cmpsb
rorl
xchg
sti
mov
sbb
stos
pop
das
lcall
inc
test
pop
or
scas
adc
push
lahf
enter
notl
repz
addr16
sub
add
adc
cmpsb
das
mov
fs
icebp
lds
dec
add
pop
mov
push
add
and
mov
mov
outsb
pusha
cmp
lret
sarb
imul
push
iret
mov
mov
inc
jge
cltd
in
pushf
mov
hlt
mov
out
ret
dec
and
or
popf
jl
sahf
inc
int
add
jns
or
and
addr16
hlt
or
pushf
or
lods
jp
loopne
ja
cmpsl
inc
mov
andb
stc
mov
or
loopne
nop
ds
fs
out
enter
aam
lods
or
add
ds
fs
mov
mov
pop
arpl
cmp
outsl
sbb
mov
imul
pop
and
pop
inc
sub
mov
xchg
xchg
loope
ljmp
inc
push
loopne
sar
fldl
sti
scas
sbb
clc
push
xchg
sti
dec
xor
iret
daa
sub
notl
lds
stc
sahf
adc
and
aam
fwait
sub
imul
push
or
xchg
inc
cld
inc
movl
jne
fbstp
jp
mov
in
hlt
lods
subl
pop
ss
fisttps
mov
fcompl
mov
movsb
shlb
push
dec
dec
orb
push
and
incl
adc
xor
dec
enter
add
sbb
pop
popf
mov
pop
pop
es
jp
push
lea
inc
or
ret
jo
mov
test
mov
push
add
mov
mov
call
push
lret
push
leave
xchg
adc
lds
shl
js
push
cmpsb
jge
jo
rcrb
sub
stos
movsl
jns,pt
and
jl
iret
mov
pop
ret
ss
mov
inc
ficoms
scas
xchg
into
xchg
stos
xor
mov
leave
sbb
xchg
out
rcrb
cmp
push
in
mov
add
mov
pop
jmp
jl,pn
shlb
sti
push
add
push
pop
addr16
inc
movsl
jl
ss
jmp
sti
mov
outsl
es
cmpsb
lea
rol
fs
mov
adc
adc
and
insb
pop
mov
jge
repz
jmp
xlat
cmp
push
mov
sub
xchg
ljmp
negb
push
test
jno
pop
ljmpw
xor
sub
sbb
das
mov
testb
bound
imull
xchg
jp
or
sbb
mov
popa
les
fucomi
mul
adcb
subb
mov
push
cli
ss
jmp
or
mov
xor
in
fcoms
pop
stc
daa
dec
mov
shlb
movsl
fbld
paddusb
int3
daa
push
jb
inc
pop
jmp
fs
nop
fsts
enter
mov
cld
dec
cltd
push
cmpsb
dec
jb
mov
fmuls
fdivs
mov
repnz
rorl
das
out
or
xor
hlt
or
pushf
push
pop
je
dec
aam
jb
or
jmp
adc
mov
and
std
addr16
mov
lods
roll
imul
dec
xor
inc
idiv
repnz
mov
dec
test
xor
dec
cmp
xchg
fidivs
ficompl
aad
aaa
stos
fisubl
sub
mov
add
xchg
out
arpl
test
add
and
mov
sub
aaa
sub
or
cmp
lods
imul
and
test
jecxz
fsubrl
cwtl
xor
scas
mov
les
das
aas
aaa
mov
filds
fsub
dec
xchg
pop
mov
sbb
add
and
clc
out
push
inc
pop
cltd
repz
fdivrp
pop
in
scas
fnstcw
fisubl
mov
sbbl
jg
xor
xor
mov
mov
push
xchg
ljmp
mov
lock
mov
popa
dec
aaa
mov
or
adc
push
mov
pop
call
mov
push
daa
jbe
adcb
mulb
adc
sub
jmp
adc
pop
mov
cmp
cmc
sub
push
or
test
mov
or
adc
xor
sub
inc
fists
xchg
mov
negb
jg
cmpsb
fcmovbe
sbbl
dec
xlat
push
and
std
push
popf
xchg
cld
push
inc
lock
jno
push
push
push
push
jmp
jne
add
repnz
xchg
outsb
cmpsb
repnz
push
mov
out
jno
out
mov
jae
sub
ja
fwait
out
popa
outsb
test
cmp
jae
fbld
sbb
loope
xchg
pop
addr16
sub
mov
stos
inc
jle
pop
stos
int3
mov
pusha
inc
xchg
neg
out
std
fsubp
add
sbb
out
and
pop
pop
pop
xor
in
rol
lahf
or
jne
inc
mov
leave
fistpl
aam
fstl
jae
add
fnstsw
mov
insl
fstl
add
adc
ljmp
mov
pop
lcall
ret
push
in
outsl
ljmp
push
xchg
sub
inc
mov
incb
adc
out
sub
or
popa
pusha
push
call
out
mov
rorb
int3
movsb
fwait
mov
test
iret
aam
faddl
dec
add
inc
test
push
sbbl
pop
enter
pop
fwait
mov
sbb
pop
pop
add
pop
jle
data16
shufps
lea
or
ret
pusha
int
movsl
sti
xlat
sahf
mov
xchg
add
mov
xchg
jae
mov
sarb
jmp
jbe
ret
mov
jmp
and
addl
popf
sub
jnp
mov
dec
es
out
sahf
dec
iret
jns
cmp
jo
xchg
das
fdivrs
arpl
push
add
pusha
inc
lret
jb
mov
adc
cld
movsw
adc
mov
mov
sarl
scas
sub
and
push
orb
inc
sbb
leave
aam
cld
or
xor
enter
ja
sub
mov
lock
jge
imul
pop
mov
and
int
sbb
lahf
dec
scas
stos
jge
lea
bound
pusha
sub
jmp
push
jle
xchg
imulb
add
dec
mov
arpl
jae
cltd
inc
int
mov
sub
push
outsb
ret
adc
inc
or
and
sub
lock
push
push
adc
stos
ja
pop
popa
push
xchg
in
das
scas
sbb
cmp
sub
xchg
sub
adc
je
cli
fs
xchg
sbb
sbb
mov
insl
mov
std
mov
mov
ror
dec
ljmp
dec
insl
jmp
jae
push
jnp
scas
mov
lea
fnsave
mov
rorl
mov
cmp
les
adc
sarl
mov
jle
push
mov
aaa
mov
inc
xor
xchg
or
stos
xchg
lret
dec
in
and
out
jnp
jecxz
inc
xor
cmp
mov
loope
ds
xchg
je
pop
in
out
ljmp
inc
adc
test
push
adc
or
pop
sub
jmp
sub
and
outsl
ds
out
je
sbb
jmp
jno
xor
add
std
lods
push
icebp
push
mov
dec
mov
dec
gs
sub
imul
clc
xchg
cmp
lock
in
aad
dec
aas
cwtl
pop
out
dec
scas
in
inc
mov
pop
addr16
ds
mov
jnp
jne
cmp
pushf
repz
test
lock
push
das
data16
movsb
shlb
mov
mov
push
inc
jecxz
stos
cmp
or
pop
lahf
jg
insl
xor
sub
pop
leave
daa
cmp
xchg
cmpsl
xchg
outsb
push
or
add
mov
cmp
ds
mov
in
add
rorb
sbb
ss
push
ret
sti
lret
mov
xchg
int3
roll
pop
push
rcr
aas
and
cmp
jb
roll
pop
imul
push
pop
push
sarl
xchg
xor
dec
pop
pop
push
mov
sbb
cmc
or
iret
push
jge
jb
mov
arpl
js,pt
cltd
call
lds
daa
aas
mov
lcall
loope
shll
push
pop
mov
aam
out
cmp
int3
aas
sbb
lcall
inc
es
rcrb
jp
bswap
xchg
push
sub
insb
lahf
std
test
or
popf
inc
sbb
mov
lock
sarl
mov
pop
clc
sarb
filds
xchg
lahf
stos
bnd
dec
int3
popa
repnz
dec
ret
push
inc
les
push
fmulp
add
jae
xchg
and
pop
pusha
inc
fstpl
pop
sbb
sub
add
push
mov
lcall
mov
and
add
cli
loopne
out
xchg
sbb
jno
cmp
mov
icebp
loopne
adc
paddsw
cmpsl
repnz
test
jp
and
push
rcl
cli
call
and
mov
push
fsubs
fs
cld
hlt
push
outsl
ret
dec
cmp
xor
xchg
fcompl
iret
lret
lds
fldcw
js
in
fbld
sub
lds
sarl
xor
xlat
call
dec
and
pop
dec
clc
xor
or
lret
xor
iret
jge
sti
popf
push
mov
or
cwtl
sub
out
mov
aam
mov
push
pushl
cwtl
or
pop
scas
jle
add
loopne
pop
mov
xchg
sti
cmp
shll
mov
out
adc
roll
jo
and
jb
xorl
jmp
mov
cmc
pop
xchg
mov
dec
mov
jno
fcmovnu
sar
jg
mov
sbbb
cmp
inc
cmp
mov
jmp
inc
jnp
rol
push
cwtl
dec
loopne
xchg
das
inc
movsb
mov
lds
int
js
mov
and
pop
sbb
or
loop
xchg
sub
das
test
push
andb
or
xor
js
push
orl
imul
pop
movl
shr
jle
mov
mov
insb
add
rol
adc
popf
sahf
or
pop
add
test
stos
insb
mov
ja
mov
icebp
push
adc
cmpsl
in
xor
jnp
push
sub
pop
push
mov
or
mov
test
mov
sub
pop
out
cmp
lret
pop
cmpsb
out
xchg
lahf
xchg
cwtl
outsl
mov
mov
repnz
sub
test
pushf
jmp
mov
push
in
les
xor
iret
arpl
jg
sub
mov
pushf
mov
xchg
xlat
pop
and
jle
fcmovne
lret
cld
pushf
cmp
sarb
mov
lds
push
lea
pop
push
and
test
xor
call
push
mov
mov
testl
test
push
mov
icebp
add
dec
jle
ds
out
icebp
int
idivb
push
mov
aad
adc
ljmp
add
mov
sub
mov
xchg
icebp
mov
dec
scas
ds
iret
mov
or
or
data16
cmc
dec
push
outsl
add
repnz
cwtl
jno
pushf
dec
leave
jge
test
pop
icebp
outsb
push
or
mov
add
loopne
mov
cmc
jmp
shr
mov
fcompl
imul
cmp
push
outsb
push
popf
xchg
pcmpeqd
loope
inc
and
fstpl
fnstsw
inc
push
and
repz
repz
push
mov
repz
lock
out
jne
pop
mov
sbb
pop
cs
sbb
inc
lds
add
xor
fldt
in
jne
out
in
fwait
jg
jae
xchg
push
xchg
sbb
cmpsl
xor
cmp
jge
push
or
cli
aam
test
jae
inc
dec
pop
cmpb
int
js
xchg
inc
mov
xchg
mov
notb
jb
dec
int3
mov
clc
adc
mov
shll
out
lcall
mov
clc
xor
push
fiadds
sub
or
xor
cld
call
lret
jecxz
mov
lahf
jp
adc
ror
mov
sti
ret
pop
dec
jle
jo
pop
shl
jne
inc
xor
pop
mov
and
dec
int3
popa
mov
lods
outsl
scas
sbb
pop
xchg
pop
into
stc
or
or
sub
add
push
fstl
and
mov
sbb
jg
mov
add
in
sbb
fst
cmc
pop
and
lea
scas
test
fwait
xor
or
clc
pop
es
cmove
jg
enter
or
adc
imul
dec
popa
out
xor
mov
xor
dec
add
movsl
cmp
xor
dec
mov
cmpsl
push
jae
imul
push
dec
arpl
add
insb
mov
inc
xor
push
mov
das
mov
out
inc
jg
sarb
mov
pop
push
rorl
mov
sbb
adc
jae
push
sarb
xor
xor
ffreep
xchg
mov
call
outsw
and
sarb
lods
mov
push
repnz
xchg
fimuls
pop
andb
imul
scas
iret
or
xchg
das
adc
adc
cli
push
push
push
sub
sahf
fisttpl
push
mov
and
movnti
shll
pop
fnstsw
dec
sbb
addr16
cld
shll
sub
mov
es
adc
popf
mov
std
adc
into
icebp
add
popa
repnz
addl
xor
movsl
insl
repz
rcl
cwtl
push
mov
xor
in
xchg
cmp
mov
cmp
inc
inc
and
xchg
cmpsl
cmp
out
mov
push
dec
and
adc
lods
xchg
mov
fdivl
pop
jmp
cmc
cmp
pop
fxch
xlat
daa
fildl
addr16
and
sbb
inc
sub
rolb
fidivrs
jo
notb
jno
hlt
mov
sar
ret
notb
xchg
ret
icebp
fwait
into
rclb
jp
movsb
add
jns
xchg
pop
outsb
shll
shl
data16
add
sub
or
push
add
and
rcr
mov
sti
dec
add
movsb
clc
mov
clc
mov
sub
fimull
movsl
xchg
adc
andl
cli
rcll
jg
jecxz
shll
cmp
pop
sarl
cmp
inc
cli
test
xlat
push
add
loop
cltd
mov
mov
add
inc
inc
jne
je
xchg
test
jg
add
shrb
sbb
sahf
in
data16
jne
out
and
inc
adc
stc
push
adc
out
cmp
dec
pusha
testb
cmp
sbb
or
jle
mov
call
movsl
cmp
push
and
popa
ret
add
dec
clc
jl
bound
aas
mov
rorl
sbb
ljmp
adc
fdivrs
adc
pushf
ds
push
jle
mov
mov
fwait
insb
test
outsb
mov
xor
in
fchs
mov
mov
test
gs
cmp
push
adcw
sbbb
mov
and
notb
push
xor
clc
pop
push
jb
movsl
mov
mov
add
or
cmpsl
ret
jb
add
les
cmpsl
sbb
cmp
lret
mov
xchg
and
jae
mov
or
scas
aas
out
add
dec
sub
mov
cwtl
inc
xor
inc
or
movb
inc
nop
outsb
dec
fcoml
mov
dec
gs
mov
sti
roll
stos
sbb
jp
pop
xchg
fmuls
dec
jge
jbe
jl
mov
mov
mov
cli
rcrl
mov
push
inc
not
cmp
push
sub
cmpsb
addr16
fwait
pavgb
fcmovnb
cmp
stc
add
xchg
dec
xchg
aam
or
out
pop
jge
jp
sub
sub
push
mov
inc
je
stos
fwait
mov
shrl
arpl
aad
mov
imul
pop
fistl
in
jl
pop
bound
jno
es
stos
les
and
jg
or
push
sub
outsl
adc
or
jns
stos
or
mov
mov
push
add
das
jae
jmp
jbe
ret
or
mov
imull
dec
popa
popf
shrl
pop
mov
adc
mov
adc
std
enter
cmpsb
lret
and
mov
mov
push
push
mov
pusha
nop
pop
xchg
in
mov
or
imul
mov
inc
popf
ss
inc
adc
fcoml
in
shr
inc
dec
std
loopnew
push
adc
pop
mov
dec
mov
sbb
aas
jnp
mov
mull
xchg
rcrl
lods
jno
jle
incl
loope
lea
daa
stos
jmp
movsb
or
and
push
jl
fistpll
xor
rorb
and
lcall
pop
jb
mov
imul
pusha
insb
pop
push
xor
cmc
xchg
cli
and
arpl
pop
cmc
xchg
pusha
cwtl
sbb
cmp
cmp
scas
insb
cltd
inc
and
insb
shl
cmpsb
loope
sub
mov
jae
rcrl
dec
cld
cmc
adc
mul
xchg
jl
popa
insl
call
popf
mov
rolb
or
stos
das
pop
pop
xchg
add
std
daa
mov
jecxz
jge
mov
sarl
arpl
or
rorl
cmpsb
aad
jns
outsl
xor
fdivrs
jbe
add
push
jbe
outsb
xchg
jno
jnp
popf
adc
hlt
dec
lods
or
sub
inc
sti
sbb
fadds
stc
mov
outsl
pop
mov
cmpsb
pop
push
adc
mov
outsl
mull
jbe
pop
jle
lret
fsub
pop
and
mov
add
xor
in
bound
pop
add
pop
xorb
sbb
add
and
or
pop
pop
jne
mov
ds
mov
sub
mov
sub
or
stos
out
push
adc
out
shll
roll
cmp
push
stos
gs
lock
shlb
jp
pop
jmp
pop
mov
nop
xor
leave
dec
loopne
js
xchg
adc
push
adc
or
int3
pop
mov
pop
fists
outsb
push
call
pop
or
jecxz,pt
cltd
push
sbb
shlb
es
cmpl
xchg
or
sbb
shrl
pop
jmp
sub
aas
sbb
fwait
jge
repz
out
pop
fdivl
ja
inc
mov
and
cmp
outsb
das
pop
inc
sub
or
clc
or
jo
pusha
mov
aas
int3
icebp
dec
ljmp
ljmp
ret
and
inc
packuswb
pop
adc
inc
mov
stos
mov
repnz
test
lods
xlat
cwtl
dec
add
pop
dec
leavew
jp
ja
pop
jae
fbstp
inc
movsb
sbb
add
aad
lods
push
dec
imul
jge
ficomps
fs
lock
mov
dec
addr16
aaa
call
js
mov
je
loopne
adc
xor
mov
lahf
lods
mov
lret
pop
ja
ljmp
sbb
cmpsl
mov
jbe
std
or
xchg
lods
shrb
add
push
shlb
push
and
jns
xor
scas
pop
popa
pop
push
jae
inc
jge
sbb
std
shrl
sarb
mov
push
sub
pop
iret
aaa
mov
in
movsl
aas
cs
stos
and
aad
add
push
movsb
sbb
shll
jmp
push
dec
adc
adc
and
stos
and
clc
mov
mov
aaa
push
js
mov
das
cmp
cmp
bnd
bound
movsl
push
scas
push
jne
jno
dec
mov
fisttps
fs
decb
jo
andb
decl
and
add
ja
cli
mov
add
aad
jne
lretw
je
fistpl
rorl
mov
jae
mov
xor
jl
adc
inc
repnz
pushf
cmpsl
inc
or
loop
popf
push
sbb
and
lret
cwtl
pop
clc
push
inc
out
inc
jmp
jmp
imul
sub
loopne
ja
sub
xchg
shll
push
push
add
sub
movsl
xlat
imul
cltd
inc
mov
sti
movsl
daa
jmp
sub
call
and
add
ja
int3
ss
xacquire
jl
inc
decl
ffree
push
xor
cmp
loopne
shll
push
scas
sub
dec
jmp
push
mulb
push
jns
cwtl
push
push
mov
mov
sbb
inc
jo
cwtl
push
sbb
mov
xchg
lods
jecxz
add
dec
adcl
add
pop
out
adc
repnz
mov
dec
repz
inc
pinsrw
pop
lds
jb
push
adc
negb
add
push
pushf
leave
sti
clc
push
cs
in
jne
pop
repz
ret
and
push
loopne
push
movsb
test
adc
xchg
outsl
cmp
add
stos
inc
inc
popl
push
jo
jno
lods
xor
cltd
jmp
xor
sub
and
cmc
and
add
clc
adc
adc
enter
cltd
jbe
out
inc
xchg
test
in
cmc
lret
fldenv
cltd
aas
xchg
and
adc
pop
rcrb
std
mov
shl
pushf
mov
mov
and
out
std
mov
lahf
jecxz
stos
xchg
subb
mov
leave
lods
xchg
or
xchg
sub
orl
cmp
in
inc
push
out
push
pop
pop
fcmovnbe
stc
rclb
shlb
jge
stos
outsb
adc
sub
inc
out
call
sub
ss
mov
cltd
jmp
inc
cmp
sub
push
or
pop
dec
neg
and
add
cs
insl
sarb
mov
idiv
popa
popf
aaa
add
cwtl
jl
fcoms
inc
pop
cmp
xor
test
push
sub
dec
sbb
imul
sub
ja
cmc
popa
das
dec
lds
orl
xor
mov
lret
subl
shr
sbb
sbb
leave
add
adc
dec
scas
dec
cwtl
loopne
sti
dec
outsb
rcrb
pop
out
icebp
ret
int
adc
xchg
and
aaa
fidivrs
jno
pop
jb
inc
outsb
xor
or
insb
pop
and
adc
pop
gs
lcall
mov
mov
mov
movsb
dec
xchg
lds
popf
repz
pop
adc
popf
sub
mov
push
out
subb
ljmp
arpl
xacquire
xchg
jg
in
sub
ret
and
jno
adc
pop
imull
bound
into
xor
les
push
sarl
or
popf
popa
sub
push
les
and
pop
dec
lods
pop
add
clc
jmp
sub
adc
or
movsb
pop
stc
sub
dec
mov
mov
or
fcmovnb
xor
jmp
test
mov
push
fwait
int3
sub
or
leave
adc
icebp
stos
xchg
sub
xchg
lahf
cmp
jbe
push
pop
popa
pop
xchg
push
out
add
xchg
les
scas
and
ja
inc
and
cltd
lea
lods
inc
jle
in
pop
xor
and
xchg
scas
test
dec
push
jb
jg
or
dec
cmp
xchg
in
adc
xchg
adc
into
aas
push
dec
or
sub
cltd
cmp
cmc
out
cmp
loope
sar
and
adcb
out
iret
pop
xorb
call
sub
imul
out
mov
aaa
int
lret
jecxz
xor
inc
xlat
rcrl
or
addr16
jne
jmp
dec
lea
cmp
in
or
lea
or
adc
gs
jns
jg
xor
adc
sub
and
pusha
or
jno
pop
mov
inc
push
jne
mov
push
mov
movsb
xchg
push
sbbb
test
iret
orb
or
push
and
lahf
lock
bound
or
sub
imul
mov
ret
mov
shlb
xor
mov
roll
cld
mov
jg
jb
cmp
push
xchg
inc
xchg
sahf
push
lret
xchg
scas
ss
pop
inc
adc
fimull
clc
test
stc
xor
or
sub
cmp
pop
scas
popa
mov
out
stc
call
sbb
clc
filds
dec
popa
mov
sub
fadd
push
pop
push
and
cmpsl
sbb
or
adc
in
push
sbb
les
mov
pop
inc
push
and
push
inc
adc
lahf
enter
jae
mov
sub
mov
arpl
fnstsw
fimull
mov
adc
inc
mov
xchg
shll
adc
pop
sbb
push
push
lods
inc
pop
inc
push
lcall
divl
aad
mov
lods
scas
dec
pop
popa
inc
inc
pop
fidivrl
jno
sbb
cs
mov
faddl
ret
popa
js
mov
testb
sbb
outsl
or
dec
mov
js
cmp
xchg
sbb
and
cmc
and
mov
aam
imul
sti
xchg
jp
ret
lret
imul
imul
fstp
lret
cmp
aad
sahf
mull
mov
pop
push
xor
and
lcall
and
sbb
mov
fisubl
xchg
jbe
mov
xchg
mov
and
add
and
test
dec
jge
lock
aaa
sahf
std
cmpsl
pushf
sub
fptan
movsl
dec
xchg
mov
jae
and
addr16
cmp
je
cmp
or
cmpl
dec
dec
sub
in
mov
mov
outsb
andb
rorl
inc
cld
imul
sbb
jbe
sarb
jbe
xchg
mov
lock
mov
cli
adc
test
fdivrl
mov
jo
xor
aam
shlb
cmp
stc
arpl
loopne
fcmovb
xchg
scas
sub
int
imulb
or
push
jne
in
add
ficomps
movsl
inc
dec
adc
mov
fs
xchg
xlat
sahf
pop
mov
and
mov
inc
sarb
fstpt
add
cmp
push
ficompl
dec
mov
jmp
out
hlt
sbb
or
mov
push
ds
ror
dec
add
or
in
mov
push
xor
mov
cmp
xchg
leave
leave
jmp
pop
clc
xor
adc
into
iret
shr
repnz
xor
test
sub
sub
add
arpl
xchg
sbb
lahf
pop
mov
mov
xchg
arpl
roll
mov
inc
pop
cmp
scas
cmc
mov
and
mov
icebp
cs
pop
shlb
leave
arpl
inc
sub
out
int3
mov
jae
lahf
lods
dec
pop
add
mov
mov
push
or
enter
add
arpl
xor
mov
adc
andb
cwtl
mov
mov
imul
jecxz
mov
xchg
lods
aam
adc
mov
mov
sub
fwait
xor
push
pop
xor
push
or
xchg
jge
sbb
popa
mov
mov
stos
ljmp
stos
stos
mov
nop
rcll
jmp
add
adc
pop
jo
jp
push
out
or
idivb
insl
add
jb
lods
rcr
push
sbb
bnd
cmp
mov
mov
shlb
mov
add
aam
xchg
fsubs
and
or
jmp
and
push
jb
sbb
les
adc
addr16
ficomps
xchg
lcall
sti
jno
add
fucomp
cmc
adc
xchg
push
movsb
mov
mov
jns
popf
popf
int3
dec
outsb
adc
sub
imul
les
bound
int
test
lea
insb
pop
cmc
push
mov
inc
jg
call
add
adc
leave
mov
cmp
or
sbb
or
sub
push
pop
out
data16
jbe
pop
movaps
je
lret
sbb
xchg
sarb
fisubrs
or
xor
dec
push
sub
adc
inc
or
jne
in
aas
lahf
ljmp
imul
data16
cld
lds
call
or
or
inc
pop
rcll
sub
pop
add
cmp
pop
pop
in
or
ds
bound
adc
pop
mov
xchg
loope
call
jl
sbb
adc
jg
int
add
movsl
gs
popa
das
cmpsl
pop
movsb
fs
mov
rorl
pop
dec
push
mov
sbb
mov
sub
enter
sub
mov
repz
test
aad
repnz
dec
mov
adc
cmpsb
and
scas
mov
or
je
pop
jle
push
popa
inc
inc
stos
jno
jge
jg
or
sub
es
bound
mov
loop
mov
inc
shlb
aam
or
cli
push
jo
sbb
mov
and
pop
mov
push
push
ljmp
les
pop
jb
testb
out
insb
into
mov
lcallw
je
or
lcall
jle
dec
insl
and
or
pop
andl
mov
outsb
pop
xchg
not
mov
lea
rcl
mov
popa
loop
jns
mov
cmp
xchg
inc
aam
insl
or
sbb
stos
pushf
fldenv
pop
movsb
pop
dec
aam
sub
stc
mov
pop
fwait
push
xchg
aad
arpl
sbb
sub
cmp
clc
sub
mov
mov
mov
scas
ljmp
lret
aaa
inc
in
in
mov
push
rcr
seto
push
loopne
fistps
xchg
movsb
addr16
pop
adc
and
mov
and
inc
cltd
dec
popa
mov
push
fistl
in
mov
sub
in
jno
push
jg
pop
push
dec
les
rorb
xor
push
dec
int
pop
pop
mov
and
ljmp
int
push
in
int
inc
popf
mov
popf
incl
test
insl
gs
pusha
and
jbe
add
test
outsb
sarb
loopne
inc
mov
sbb
pop
or
fs
cmp
mov
stos
pop
jle
pusha
fildl
pop
adc
jle
pop
push
mov
sbb
push
mov
aas
pushf
test
inc
mov
push
push
fcompl
push
jle
stos
mov
inc
mov
adc
movsl
imul
xor
mov
add
cmc
lahf
xor
aam
in
cmpsb
daa
and
cmp
nop
es
inc
cwtl
loopne
mov
sbb
insl
pop
xchg
jno
add
movsl
jno
xchg
fidivl
fidivrl
test
jg
mov
mov
adc
mov
gs
dec
and
out
repnz
mov
cmovb
mov
in
sbb
ja
jno
negl
loopne
xor
subl
cmp
fisubs
movsl
cmpsl
jae
icebp
inc
scas
inc
inc
push
movsb
je
out
scas
popf
pop
jle
mov
fisttpl
movsb
xchg
lds
orb
lock
hlt
sbbl
cld
adc
pop
or
cmp
outsl
mov
adc
mov
xchg
aad
rcrl
mov
adc
out
incl
out
fst
lock
adc
in
imul
adc
int3
subb
mov
lods
adc
dec
fldenv
in
xchg
ret
shl
sub
call
and
divb
inc
inc
sub
and
sbb
enter
pop
cmpsb
fsts
ds
sbb
ds
pop
imul
dec
or
push
fidivrl
and
lods
jne
cs
repnz
mov
lds
and
nop
xchg
or
push
lcall
adc
push
push
xchg
shr
cs
cmp
fldcw
inc
push
mov
or
dec
cmp
sbb
sub
cmp
or
sub
push
test
daa
imul
push
lods
mov
in
repnz
jecxz
cmp
lods
mov
aad
arpl
sahf
test
scas
mov
in
mov
cmp
sub
out
mov
cmp
aam
outsb
mov
fld
fmuls
or
pop
jmp
lock
in
dec
and
and
imul
jmp
orb
jle
in
adc
mov
rcll
mov
enter
lods
jo
xor
xchg
js
imul
stos
fisttps
sub
popa
outsl
sub
push
jg
out
movsl
mov
dec
dec
mov
hlt
lods
add
cmp
xlat
and
je
adc
adc
mov
push
repnz
das
adc
push
inc
in
ljmp
jmp
fdivrl
mov
popf
xchg
decl
push
je
or
aam
inc
imul
shlb
sub
stos
sahf
cli
dec
lods
imul
lcall
and
xlat
jl
daa
lds
pop
hlt
add
fstps
cs
rorb
mov
mov
shlb
insl
xchg
lret
cmp
mov
or
inc
cmp
and
mov
icebp
loop
repz
fistl
dec
pop
add
xchg
ljmp
int3
pop
hlt
out
add
jne
dec
repz
repz
push
xor
in
lcall
or
mov
jg
ds
add
in
xor
cmpsl
mov
inc
shlb
outsb
cmpl
and
negl
lret
xor
jmp
or
mov
insl
cmp
mov
adc
jg
pushf
mov
in
int3
cmc
adc
pusha
xchg
mov
mov
cmpl
add
addr16
cltd
dec
outsl
cmp
stc
cmc
mov
jl
lods
or
xor
push
or
pop
xchg
adcb
dec
dec
sub
mov
cmp
in
lods
je
add
and
dec
pop
jno
test
xor
sub
stos
scas
mov
in
jnp
sbbb
fwait
jmp
js
mov
insb
test
add
je
push
sub
xor
sbb
fsubrl
bound
scas
add
fwait
cmp
insl
mov
fistpll
andb
mov
outsl
out
enter
mov
lock
dec
jmp
stos
push
inc
mov
xorl
cmp
lahf
jle
psrad
mov
pop
sbb
mov
cmpl
add
adc
pop
add
pop
inc
in
xchg
je
sbb
mov
repz
xor
sbb
sbb
push
je
jno
add
mov
sub
mov
or
inc
adc
lods
ret
and
mov
in
mov
das
enter
rcr
lret
sub
nop
icebp
mov
test
xor
cli
dec
add
xor
xchg
pop
or
adc
ds
mov
mov
cmp
jmp
aaa
dec
push
xchg
outsw
cmp
repz
xor
fstpl
idivb
sbbl
aad
inc
test
fwait
pop
xor
mov
stos
push
sub
sub
sbb
or
sbb
push
push
movsl
push
sub
pop
mov
std
call
fcmovu
ljmp
inc
sbb
push
pop
or
clc
js
cld
mov
popa
cmp
push
adcb
addr16
mov
mov
xor
push
int3
out
cmp
inc
call
jns
shll
mov
lds
mov
lret
push
scas
int3
add
popf
pop
nop
xchg
sahf
pop
fdivrs
pop
or
push
or
inc
mov
add
sbb
dec
sbb
jb
add
xor
movsl
or
and
negl
push
dec
mov
outsb
push
push
cs
or
push
jne
in
pop
xchg
sbb
shrl
popf
fcompl
or
daa
pop
cmpsl
dec
push
xchg
or
aad
loop
f2xm1
pop
cmp
movl
inc
inc
fxch
mov
lcall
mov
sbb
loope
cmp
add
and
fs
test
movsb
sub
mov
jp
jmp
sub
push
inc
pusha
sub
je
xor
ss
xor
int3
cltd
mov
adcl
ljmp
or
outsb
rcrb
cmp
xchg
jns
mov
push
clc
fdivrs
insb
mov
jg
lret
add
sbb
mov
shll
jae
mov
inc
push
push
mov
fistps
daa
gs
negl
xor
sbb
mov
lahf
mov
add
call
pushf
mov
mov
mov
xor
push
jg
adc
sbb
xlat
add
aam
insl
rcrb
addl
mov
sti
inc
mov
jmp
mov
ret
mov
mov
imul
aas
aaa
lock
adc
push
cmp
cltd
out
jmp
add
xor
dec
leave
cmp
pop
pop
jmp
mov
xor
daa
jp
hlt
adc
jo
adc
push
xchg
push
gs
pop
sbb
adc
loop
mov
clc
sti
into
clc
push
shll
inc
mov
mov
add
adc
lret
jnp
lea
cmp
shrb
mov
out
sbb
inc
nop
mov
lret
dec
xor
lcall
andb
popf
andb
pop
out
push
sbb
push
repnz
loope
adc
xchg
or
inc
shll
cld
into
dec
fadds
mov
or
fmuls
shr
xor
sbb
xchg
cmc
aas
jne
jae
out
pop
repz
fs
bnd
iret
enter
idivl
pushf
aad
fistpll
push
dec
dec
pop
lea
mov
pushw
inc
mov
mov
inc
les
push
add
mov
dec
imul
cwtl
pusha
push
adc
dec
mov
stos
test
adc
fistps
xchg
jae
sub
std
sbb
or
pop
imul
jmp
and
test
into
cli
test
push
fbstp
out
fwait
jmp
inc
hlt
sbb
inc
xchg
lds
pop
adc
out
push
into
jmp
cwtl
cltd
and
enter
xlat
hlt
cmp
add
pop
xchg
sub
icebp
or
pop
fsub
leave
push
fs
mov
cmp
add
xchg
add
sbb
jb
out
xor
lods
jne
ljmp
stc
repnz
jns
hlt
cwtl
scas
pusha
ret
inc
mov
sub
and
mov
rcrb
adc
pusha
mov
das
jmp
call
mov
jbe
pop
notl
mov
andl
test
lods
in
repz
mov
gs
loope
pop
ljmp
shlb
jp
jns
jno
in
rcl
sbb
mov
repnz
orb
mov
jbe
ds
mov
mov
rcrl
xchg
xchg
and
cmp
mov
xchg
pop
xchg
xorb
outsb
add
mov
jnp
and
mov
and
je
in
cmp
xor
mov
jl
jno
sub
jle
test
mov
mov
mov
scas
adc
andb
push
cmp
add
add
ss
movsb
sbbl
jne
sub
mov
sub
imul
outsl
jle
xchg
lcall
mov
sahf
or
addl
xchg
add
pop
mov
mov
adc
pop
sbb
cmp
adc
mov
ja
shlb
sti
pop
xchg
mov
inc
lods
scas
pop
leave
jl
nop
adc
pop
lods
mov
test
xchg
inc
outsb
inc
mov
fisttpll
in
inc
lahf
push
xchg
fbstp
es
push
int3
jns
push
in
xor
outsl
fdivrs
stos
sbb
jmp
into
insl
ljmp
aad
js
mov
mov
pop
and
jmp
or
jo
jb
cld
mov
push
je
xchg
xlat
add
sbb
push
adc
test
test
shl
mov
xor
or
jb
fldt
xor
or
arpl
repnz
add
jge
lahf
fiaddl
test
outsb
pop
lods
fxch
test
mov
jl
jbe
adc
ret
jge
jmp
mov
stos
adc
or
sub
and
popa
cmp
pop
nop
shrb
cmpsl
and
mov
or
fs
aad
lock
inc
adc
gs
push
push
adc
sbbb
out
test
jnp
push
scas
test
push
fwait
js
push
or
icebp
dec
into
inc
rorb
data16
xlat
imul
and
cltd
repnz
inc
fldl
loope
adc
pushf
and
push
mov
jge
pop
pop
mov
jl
adc
lea
out
push
cmp
sbb
push
out
pop
push
inc
fsubl
push
or
inc
push
cmc
lret
push
mov
push
push
in
inc
dec
lret
push
cmp
je
pop
out
insb
mov
mov
cwtl
lcall
stos
pop
jne
xchg
add
out
repz
and
mov
lcall
clc
hlt
mov
jp
cltd
in
jl
jecxz
inc
or
cmp
cmpsb
jecxz
jb
xlat
sub
xchg
jne
fwait
dec
scas
addb
pop
bound
jle
or
imul
sub
sbb
mov
push
or
fldenv
mov
out
sahf
in
call
xchg
fstps
js
inc
add
out
mov
cld
xor
divb
or
push
gs
lahf
mov
fbld
pop
jbe
xor
sub
loop
jge
data16
xchg
in
nop
stc
mov
jbe
push
sbb
sbb
imul
or
jl
dec
xchg
call
cli
div
lds
xchg
negb
sub
sub
and
or
cltd
shrl
cmp
xchg
xchg
ror
inc
clc
lret
push
clc
stos
jl
arpl
and
and
mov
xor
or
fdivrl
stc
incl
lret
push
mov
xor
adc
xor
sub
clc
gs
jge
cmp
ret
aam
popf
or
insl
pusha
repz
jo
push
into
mov
mov
mov
les
pusha
xchg
pop
cmp
je
in
push
pop
inc
fwait
pushf
movsl
ds
cmp
in
adc
hlt
mov
inc
or
adc
imul
cmpsb
mov
xchg
jae
dec
insl
andb
jl
in
cmp
jp
jno
mov
xchg
orl
dec
pusha
hlt
and
sbb
jmp
pop
into
mov
jo
jo
mov
lahf
in
jg
int
loopne
jnp
sahf
cmp
aaa
jne
or
lods
das
outsb
mov
cltd
dec
adc
ds
subb
in
sarl
enter
pop
push
outsl
inc
push
mov
shll
dec
mov
cmp
adc
cmp
cmc
add
fisubrs
mov
dec
cmp
push
mov
sbb
and
pop
test
test
sub
dec
push
mov
mov
adc
mov
xlat
in
stos
and
mov
add
pop
jl
fwait
add
ret
dec
mov
mov
in
lds
xlat
pop
adc
jne
lret
js
sbb
repz
push
pusha
cmpsl
pop
xchg
iret
pop
pushf
jl
test
add
and
push
testl
cmpsb
jnp
pop
jne
lods
lcall
jecxz
fstpt
mov
cmp
fidivrs
xchg
push
outsb
nop
cmp
pop
push
xor
fwait
out
inc
ss
xchg
sti
pop
popf
mov
stos
mov
push
xchg
sti
call
pop
pop
mov
addr16
cmpsb
aaa
cmovle
ret
dec
push
lahf
daa
adcl
test
and
sbb
ljmp
idivl
mov
lcall
loopne
sub
es
cwtl
aam
mov
lods
mov
xchg
jmp
jmp
fdiv
xorb
cmpsb
adc
xchg
and
divb
cs
andb
push
pop
and
out
mov
lds
push
sub
pop
cmp
xchg
xchg
aas
add
dec
nop
data16
mov
aaa
imull
mov
mov
lret
pushl
in
aaa
push
pushf
pop
sbb
movsb
cmovge
push
lods
pop
mov
xor
ret
jg
insl
jo
frstor
movsl
cwtl
inc
movsb
pop
mov
mov
dec
pop
adc
stos
fiaddl
xor
cmp
sbb
xchg
std
sbb
jecxz
ds
test
das
mov
mov
loopne
adcb
push
testl
jne
pop
mov
push
lcall
mov
xor
cmc
cmp
mov
or
add
mov
jnp
xor
shll
push
jns
lea
push
cmp
jge
int
daa
mov
cld
pop
outsl
mov
test
out
pusha
pop
rolb
xchg
sarb
dec
jl
add
sbb
or
fwait
mov
add
xor
lods
std
pushf
inc
rolb
push
inc
sbb
test
adc
jns
decb
test
jne
stc
je
add
push
in
ret
out
inc
out
fcomi
mov
inc
or
repnz
stos
push
or
std
xchg
xchg
int
dec
cmp
sbb
and
push
push
dec
dec
adc
jno
jmp
ds
test
mov
cmp
mov
imul
add
dec
popa
scas
ljmp
pop
sbb
sbb
leave
mov
pushf
or
movb
shrl
sbb
sarl
test
ficompl
jns
mov
aam
cmpb
pop
adcl
pop
es
push
mov
fldcw
loop
call
repz
loope
insb
fistps
mov
xchg
movb
aas
bound
inc
xchg
sub
add
push
fcomip
cli
push
cltd
in
ror
ja
jecxz
ret
mov
dec
insb
mov
jle
test
sahf
add
icebp
jp
sbb
lock
cli
into
movsb
push
fldt
sub
jge
and
push
fistps
cmpsb
sarb
xchg
imul
jae
stc
push
shll
insl
addl
xchg
imul
stos
ja
push
and
mov
xlat
pop
xchg
mov
insl
pop
out
mov
inc
idivb
lods
pop
inc
sbb
in
mov
popa
and
imul
popf
mulb
mov
push
inc
cmc
mov
daa
std
cld
mov
jnp
ret
test
mov
and
fimull
adc
lods
nop
mov
push
pop
mov
stc
dec
cmp
cmp
out
mov
sbb
mov
push
and
or
xor
imul
pop
fld
jb
push
std
stc
daa
fnsave
push
cmp
in
into
sbb
dec
pop
inc
push
pop
ret
icebp
mov
out
push
push
daa
cmp
out
fists
inc
call
mov
add
minps
dec
pop
loope
add
repz
fsts
pop
ds
fs
rolb
jns
pop
or
sub
das
mov
and
jge
movsl
daa
sbb
and
hlt
sbb
and
aaa
in
push
dec
popf
push
pop
mov
shll
dec
xchg
add
dec
mov
cwtl
in
ret
bound
push
mov
mov
gs
lods
xor
xor
ret
in
repnz
add
cmp
mov
mov
out
outsb
jecxz
aad
call
bound
cmp
pop
pushf
and
xchg
aam
push
jb
push
leave
or
scas
incb
xchg
jne
adc
dec
ret
add
dec
cmc
sub
dec
and
test
pop
int3
jmp
inc
add
stc
int
into
add
push
loope
loop
lahf
test
lock
pop
cmp
cli
daa
loop
ret
push
xor
lods
sub
add
stos
pop
iret
push
popf
repz
loop
mov
sbb
daa
jbe
push
add
rcrb
mov
push
mov
dec
notb
and
mov
pop
adc
sbb
call
out
sub
jp
pop
jmp
dec
cmp
mov
mov
mov
or
das
add
cmpsl
lds
rcrb
xor
push
jae
xchg
out
push
call
xchg
adc
mov
data16
xchg
mov
mov
dec
outsb
jecxz
mov
dec
inc
and
pop
or
movsl
out
dec
dec
dec
cmp
jns
mov
insl
sbb
arpl
add
cmp
lahf
mov
cli
shlb
xlat
xor
dec
mov
mov
shll
mov
pop
movsl
jo
cltd
test
xchg
adc
rclb
rorl
int3
ret
fwait
xchg
xchg
mov
inc
adc
ds
push
jmp
notl
gs
push
push
sbb
sub
push
btr
jo
aas
xchg
jmp
imul
sbb
mov
loopne
movsb
loope
cmp
outsl
mov
loope
insb
add
fisubs
jecxz
add
out
imul
sbb
sub
xor
sbb
jb
cwtl
and
mov
out
jae
mov
mov
jnp
ds
out
rol
dec
imul
cmc
or
adc
add
adc
fcmovnb
adc
fmuls
xchg
cmp
cmp
sbbl
out
test
push
inc
mov
dec
jne
outsl
out
ds
aad
lods
push
dec
sbb
cmpb
mov
cmpsb
in
fbld
mov
out
lret
in
arpl
or
icebp
pop
add
es
pushf
bound
inc
xchg
lret
push
pop
in
int3
or
lods
adc
cmp
adc
adc
xchg
lahf
add
or
ret
jno
adc
adcl
xchg
cmpsb
mov
pop
out
cmc
mov
pop
mov
insb
mov
stc
xor
pop
js
jecxz
xchg
push
shll
mov
gs
jne
mov
repnz
jle
inc
jne
push
mov
gs
jmp
cmp
sbb
mov
push
and
jl
xor
ret
sub
inc
and
adcb
fs
test
and
xchg
and
movsl
js
cmp
add
dec
out
addl
xchg
imul
dec
push
pop
xchg
dec
lods
push
push
bound
pop
cld
adc
cwtl
gs
push
and
stos
insb
cwtl
sbb
mov
push
dec
int
imul
sub
ss
dec
xor
loop
scas
ljmp
mov
mov
loop
add
js
push
aaa
push
repz
sbb
popa
and
std
cwtl
xlat
fsubrs
mov
xlat
pop
bound
xor
adc
and
add
lcall
repz
push
out
data16
mov
and
and
push
insl
imul
inc
inc
mov
outsb
inc
mov
testb
pop
in
xchg
andl
mov
mov
test
testb
cmp
loope
pop
sub
ja
jns
cmp
xchg
sahf
fnsave
jecxz
inc
mov
ror
mov
test
aad
cmp
mov
jmp
je
dec
fisubrl
sbb
jge
push
in
jecxz
lret
or
cmp
shl
imul
out
orl
fs
in
sub
or
notb
mov
jbe
test
loop
cmp
es
cmp
adc
ret
ret
ss
in
inc
test
insb
movsb
mov
xor
loope
insb
adc
push
lret
scas
mov
call
popa
lahf
andb
clc
arpl
sti
jnp
shld
mov
scas
sbb
jne
jmp
lea
sub
mov
xchg
movsl
mov
sbb
mov
add
clc
daa
adc
jns
inc
push
movsb
lcall
pop
xchg
add
lds
mov
mov
mov
jmp
fiaddl
or
scas
icebp
sbb
xor
fsin
aas
jge
push
lea
idivl
not
xorb
hlt
lret
sti
cmpsb
int
scas
sbb
or
jne
fisttpll
push
ret
jae
arpl
sub
xor
loopne
mov
lret
cwtl
clc
stos
outsb
insb
fwait
mov
rcll
or
popa
fdivr
push
notb
push
loop
add
rcrb
mov
rcll
adc
or
outsl
xor
in
stos
add
es
leave
enter
xor
adcl
shrb
inc
pushf
shlb
mov
out
pop
das
or
jge
cmp
cmp
pop
js
mov
mov
xor
std
daa
ljmp
sub
adc
ret
into
adc
mov
fisubs
lea
out
cwtl
out
mov
and
xor
dec
or
sarl
mov
test
fmulp
rcrb
jge
push
or
notl
add
sub
in
bound
ss
cwtl
dec
adc
mov
repnz
xchg
pop
sub
cmpsb
scas
and
sub
sub
aaa
mov
pop
aad
fwait
xchg
cs
sbb
pop
rcl
adc
cld
pusha
popa
and
jecxz
sub
in
repnz
jo
js
popf
add
sbb
pusha
jb
or
and
aaa
imul
cmpsl
outsb
xchg
shlb
inc
cmpsb
lock
cmp
bound
ljmp
out
or
cli
lds
fbstp
aad
movsb
out
out
xor
lahf
fwait
aas
mov
lods
decl
xor
mov
mov
mov
test
xchg
jb
xor
lods
cmp
rcrb
pushf
rorl
inc
inc
lea
jne
addr16
jbe
ds
ret
rcrl
mov
out
ret
or
leave
insl
lods
out
xor
outsb
cmp
cwtl
jge
leave
dec
movb
xchg
add
ret
jmp
lds
loopne
dec
sub
dec
loopne
or
pop
sbb
ret
push
nop
into
in
int
dec
icebp
cmp
push
aad
or
das
cmpsb
daa
cmp
or
cmp
adc
dec
sbb
pop
inc
test
imul
leave
push
psubw
xchg
sub
daa
pop
xor
mov
pop
loop,pt
add
add
fisubl
rcll
adc
aad
mov
das
test
mov
push
pop
jl
sbb
int
popf
les
pop
dec
mov
xchg
icebp
add
and
xor
dec
pop
jbe
xabort
cli
xor
stos
arpl
sub
cli
fmull
push
inc
ds
test
mov
jb
jg
xchg
pusha
mov
sahf
sub
lret
xchg
rcrb
mov
add
popa
popa
mov
aad
aad
push
push
int3
cwtl
cmp
stos
data16
add
div
cmp
arpl
sub
pop
stc
or
xchg
adc
lods
push
outsl
sbb
das
inc
and
gs
cltd
adcl
pop
cwtl
jae
mov
xchg
lods
popf
jl
xor
arpl
inc
rcll
ret
push
pop
test
cwtl
mov
sub
fld
xchg
ret
in
lea
ret
xchg
cmp
frstor
or
into
testb
out
inc
stc
clc
xlat
adc
jnp
add
and
push
inc
in
cmp
call
mov
shl
or
jns
lds
lret
cmp
push
jmp
mov
cmp
mov
test
xchg
jo
mov
mov
loope
rorb
movsl
out
das
imul
lcall
mov
notl
adc
jo
jb
mov
js
leave
inc
popa
and
out
mov
js
push
cmpsl
inc
iret
cld
jle
xor
repnz
ss
leave
sbb
adc
ja
mov
push
add
call
add
cwtl
out
mov
sbb
jp
jecxz
fldcw
popa
out
xchg
sbbl
mov
push
fisubs
jp
rclb
insb
sahf
push
sub
sub
sarl
mov
jns
jle
xchg
in
repz
stc
sbb
cmp
mov
xlat
dec
dec
xor
mov
or
inc
hlt
icebp
mov
cmc
adc
push
stos
imul
or
movsb
jb
scas
add
push
outsl
push
test
out
aad
popa
inc
rclb
sbb
mov
out
inc
gs
fdivrl
xchg
cmpsb
xchg
adc
rcrl
aam
push
ficoml
push
ja
mov
rcr
or
xchg
fstps
pop
fadd
sbb
push
lods
mov
test
jbe
xchg
mov
inc
arpl
hlt
mov
mov
adc
sub
iret
mov
jle
pop
aad
sahf
mov
ret
jnp
out
gs
pop
sub
andl
aam
iret
jp
xlat
inc
icebp
and
loopne
cmp
jbe
repz
fstpl
mov
push
lock
loopw
orl
add
dec
or
int3
add
stos
mov
or
jle
popl
add
dec
cmpsl
pop
testb
leave
add
mov
cmc
xor
imul
shrb
mov
mov
iret
mov
sub
cwtl
arpl
insl
mov
add
inc
jmp
pop
jle
mov
jp
mov
jae
cmpsb
addb
mov
xchg
pop
push
push
in
enter
lods
xchg
sub
sub
pushf
pop
les
xchg
movsl
clc
mov
repz
test
mov
clc
and
fnsave
mov
fmuls
mov
scas
fwait
pop
data16
out
loop
or
call
jecxz
add
mov
pop
ret
mov
subb
insl
cmp
push
push
sub
stc
adc
xchg
and
neg
outsb
addr16
mov
push
and
rolb
mov
ds
fs
sub
sub
add
dec
dec
xchg
jg
cwtl
inc
fmul
dec
xchg
and
ret
fnstenv
inc
rcr
fxch
or
inc
lahf
inc
add
test
cmp
clc
out
mov
jns
dec
and
shlb
adc
cmp
les
push
xor
ret
sbb
xchg
push
mov
mov
scas
xor
pop
xor
or
lahf
mov
ss
stos
bound
sti
fisubl
cld
or
movsl
xchg
adc
aam
outsl
xor
lods
aas
shrl
aaa
test
aam
push
dec
mov
test
repz
in
call
les
cli
ss
jle
fwait
out
inc
mov
movsb
rcl
outsb
inc
and
popf
mov
mov
xchg
int3
push
enter
cmp
jno
jl
dec
in
and
push
leave
fildll
jmp
mov
arpl
mov
mov
and
fistpl
scas
push
push
lods
and
or
dec
int
add
inc
aas
jecxz
lcall
lea
mov
add
ficomps
push
int
lods
add
repz
loopne
imul
cmp
mov
mov
sbb
rcrb
nop
cmpsl
out
inc
stos
into
pop
xorl
rcrl
sub
fcoml
push
out
sub
dec
cltd
repz
icebp
imul
mov
cltd
cmc
push
negl
mov
dec
mov
fcompl
leave
add
sub
mov
mov
cmc
mov
cmc
pop
dec
in
mov
inc
inc
mov
mov
jmp
mov
mov
jne
fstl
inc
pushf
psubusw
jmp
fcompl
mov
mov
jecxz
loope
cmp
sti
test
aaa
jne
jle
xor
add
sbb
dec
inc
xchg
or
push
addl
adc
adc
repz
xor
or
fwait
sbb
lods
push
mov
inc
aas
fdivp
push
jmp
xchg
pushf
adc
lea
jmp
je
sbb
scas
jbe
mov
ljmp
and
xor
test
jmp
les
jl
enter
xchg
or
dec
mov
inc
adc
dec
js
outsl
out
xchg
sub
das
cmp
lret
int
rcrb
pop
ss
out
insb
jg
cmp
mov
mov
idivl
fucomp
pop
fwait
xor
rorb
inc
sub
mov
adc
cmpsl
fwait
pop
mov
pop
pop
je
mov
mov
dec
and
xchg
sbb
shll
insl
out
jae
mov
sbb
rorb
inc
add
dec
popa
lcall
push
pop
arpl
pop
js
fildl
jmp
and
or
js
mov
or
faddl
leave
sbb
stos
cmp
and
mov
add
clc
andl
add
mov
les
add
cmp
sub
addr16
mov
push
xlat
in
pop
aad
jns
insl
adc
mov
daa
sub
and
push
inc
cmp
test
mov
xchg
push
push
jecxz
dec
sbb
clc
gs
inc
push
cltd
push
jmp
in
out
cwtl
in
fiaddl
fcoml
jnp
cmp
mov
shlb
xlat
rolb
fiadds
mov
xor
and
les
inc
incl
bound
cmpsb
mov
pushf
call
test
sbb
jle
cmp
jle
push
xor
mov
mov
jbe
xchg
hlt
pop
fdivrs
nop
cltd
int
and
sub
or
repz
stos
inc
jle
push
movsb
jns
das
testb
adc
test
mov
arpl
mov
mov
push
pop
stos
cmpsl
sub
mov
push
pop
jno
xchg
out
jg
push
sbb
mov
mov
jb
mov
inc
ret
sbb
out
pop
decl
arpl
lock
pop
sub
les
pushf
mull
jp
je
fdivrl
or
and
fdivrs
or
es
vmovntps
shrl
aas
mov
sbb
lock
test
loopne
fistps
mov
inc
jmp
cmp
add
push
jo
dec
out
xor
fcomps
sbb
test
jg
mov
mov
adc
imulb
out
int3
add
ret
add
sub
pop
lea
lods
mov
pop
cmpsb
call
sarb
cmp
and
scas
sub
leave
hlt
and
pushf
pop
push
mov
mov
mov
insl
add
in
push
pop
or
and
jae
mov
jg
add
hlt
add
in
inc
ja
cli
hlt
xor
mov
js
lods
mov
sbb
cs
jecxz
pop
scas
mov
and
lret
mov
in
js
clc
or
mov
je
dec
cwtl
mov
xchg
adc
mov
push
mov
insb
loope
bound
repz
aad
xor
dec
sbb
jmp
idivb
shl
and
mov
cmpsl
jno
outsl
out
cmpsb
repz
icebp
stos
mov
enter
mov
cltd
xlat
dec
lahf
popf
adc
out
sub
pop
mov
and
adc
sub
mov
cmp
sbbb
xchg
xchg
pop
andl
mov
and
xor
jnp
pop
pop
lcall
pavgb
cmpsw
inc
xchg
mov
lret
xor
int
push
movd
into
dec
fbld
lods
push
and
jl
inc
push
sbb
mov
mov
or
sbb
dec
gs
out
sub
mov
push
fcomps
pushw
mov
jp
mov
or
mov
pop
inc
xor
sub
adc
jno
or
jp
sbb
xor
ret
add
stos
into
mov
jb
jp
xchg
push
jmp
movsb
mov
push
xchg
jg
test
test
push
fstpt
sub
nop
mov
sub
dec
cmp
sbb
xchg
outsb
sbb
stos
dec
ret
add
divl
je
enter
sub
push
mov
pusha
nop
sub
pop
pop
dec
fiaddl
inc
push
sbb
int
xchg
lock
xchg
sub
nop
cmc
mov
clc
cmp
xchg
sti
mov
jno
rorl
adc
jo
mov
rorb
je
idivb
xor
xchg
xor
jbe
xchg
push
sbb
xor
nop
sbb
pop
imul
inc
push
push
les
mov
fwait
in
xor
fwait
test
shrl
or
push
ret
leave
xor
mov
cmp
daa
sub
arpl
and
mov
jmp
iret
cld
jne
lret
pop
movb
pushf
push
rorl
pusha
in
gs
mov
mov
ja
jnp
pop
mov
sub
icebp
mov
int
lret
in
mov
push
or
mov
xor
and
dec
mov
push
cmp
sbb
push
lods
jnp
stc
lret
rorl
dec
xor
jae
inc
mov
int3
push
push
and
imul
decb
rclb
loopne
addb
dec
cld
pusha
negl
movsb
gs
nop
lahf
pushf
jp
int
mov
in
inc
mov
pop
pusha
xor
jo
repz
mov
mov
imul
jb
rol
push
dec
dec
cltd
loopne
fidivs
xchg
in
subl
pop
pop
cmp
shld
jmp
mov
xor
call
imul
mov
mov
lods
not
pop
mov
jle
add
pop
mov
pop
jns
into
add
repnz
cmp
mov
faddp
or
add
push
adc
bound
mov
sbb
cmc
mov
test
cltd
mov
mov
sub
fisubl
aaa
ds
sub
idiv
jmp
ficomps
dec
cmpsb
ss
push
or
sub
stc
jle
fs
mov
mov
testb
or
int
stc
shrb
xchg
inc
mov
adc
dec
outsl
pop
xor
rorb
push
cmpsl
fsubr
push
cmpsb
push
loopne
mov
in
cmc
cmp
cltd
shll
dec
xor
jl
inc
bound
xor
and
ds
shlb
adc
aaa
dec
enter
repnz
adc
popf
shlb
mov
sbb
jecxz
pop
sahf
and
fsts
xchg
out
outsb
inc
sub
sbb
bound
inc
mov
js
inc
add
in
out
jne
das
bt
push
loope
push
scas
push
cmc
xchg
clc
mov
sub
xor
inc
mov
adc
mov
nop
test
mov
ret
sar
sbb
jp
pop
jae
pop
push
add
xchg
test
adc
orb
mov
jecxz
daa
sub
jp
jae
inc
test
push
dec
mov
xchg
jbe
xor
ljmp
mov
mov
es
mov
inc
mov
fdivr
dec
aaa
jmp
test
pop
sbb
mov
add
mov
nop
jmp
jns
cmpsl
or
push
iret
stos
shlb
cltd
clc
fcom
mov
pushf
gs
push
xor
jl
cmp
fdivrl
lahf
hlt
lret
stos
xor
cs
inc
sar
xchg
jmp
leave
adc
repnz
jae
mov
lret
clc
hlt
push
adc
gs
pop
dec
out
xchg
sub
out
in
nop
stos
aam
xor
mov
test
pusha
mov
adc
dec
mov
pop
mov
push
adc
outsb
inc
nop
add
xchg
xor
mov
mov
movsb
in
mov
xchg
mov
mov
add
dec
mov
adc
dec
sbb
in
push
jns
lret
xor
inc
pop
add
fucomp
xchg
clc
push
shll
repnz
scas
xchg
push
jo
fs
inc
xor
push
cmc
inc
icebp
pusha
adc
hlt
xlat
inc
jb
aad
js
cmpsl
xor
pushl
cmp
xor
xchg
sbb
cmpsb
lahf
cmpl
in
xor
test
stos
jo
idivl
pop
push
lret
out
and
cltd
push
rcl
icebp
dec
push
frstor
sbb
jns
ret
and
fnstsw
aaa
sahf
xchg
fmuls
dec
imul
jmp
inc
fdivrs
faddp
mov
aas
inc
cmp
sbb
ret
sub
ficomps
test
xchg
out
lock
add
pop
jmp
dec
call
sbb
push
cmc
test
and
lds
repz
aas
shlb
adcl
rorl
repz
cmp
mov
daa
dec
pop
mull
push
test
mov
dec
pop
inc
pop
or
sahf
imul
scas
xor
inc
outsb
ficoms
pop
cmc
pop
xchg
cmpsb
outsl
cmpsb
imul
push
inc
pop
push
lcall
jae
movsl
jo
cmpsb
repnz
xchg
imul
fdiv
roll
fwait
inc
repnz
inc
cmpsb
popa
aad
dec
add
testb
arpl
inc
push
in
sub
xorb
mov
in
push
push
cmp
dec
nop
cld
push
inc
pop
jl
stos
push
jg
mov
inc
and
outsl
sbb
pusha
cld
fsubrl
test
add
ret
mov
push
repz
cmp
mov
cmp
fcoms
std
mov
cmpsb
inc
add
imul
adc
xorb
iret
jo
dec
xchg
movsl
adc
or
mov
repz
call
xchg
xchg
mov
int3
mov
or
mov
jle
sbb
xor
jp
in
sub
jmp
xchg
xor
push
loopne
jp
loop
popf
data16
mov
sub
adc
pushf
mov
cmp
lods
mov
xchg
dec
xchg
cmp
rcrb
ret
repnz
dec
mov
or
sbb
sub
andw
icebp
sbb
shl
insb
pop
in
push
sub
add
insl
xor
loopne
imull
outsb
push
mov
cmpsl
ds
fucomip
fnsave
stos
or
scas
push
push
push
mov
sbb
xlat
call
mov
fbld
outsb
adc
jmp
out
sbb
int
mov
cli
leave
adc
pop
rcl
icebp
aad
mov
leave
aad
push
pop
cs
mov
inc
out
xor
mov
pop
mov
dec
inc
cmc
cmp
inc
in
mov
dec
push
js
div
pop
rcr
daa
call
stos
and
or
push
aaa
push
jmp
adc
mov
in
inc
ret
les
jp
pop
mov
xchg
sbb
ja
js
stc
ret
shrb
ljmp
push
movsl
lods
pop
nop
imul
sbb
mov
js
imul
adc
faddl
jecxz
pop
push
mov
mov
push
lahf
into
inc
xor
cmp
sub
ret
mov
xlat
xlat
ret
sarb
push
dec
mov
or
dec
and
scas
leave
pop
dec
or
pop
push
scas
mov
inc
sbb
xor
fstl
and
loopne
cwtl
lcall
xor
test
jns
subl
mov
jmp
mov
popf
mov
mov
mov
stos
nopl
xor
stos
fs
xor
arpl
lods
push
inc
fisttpll
push
xchg
lods
scas
mov
pop
xchg
fwait
cld
mov
xchg
lock
aad
imul
adc
dec
fwait
dec
mov
jns
or
repz
lcall
jecxz
lret
lret
and
adc
dec
test
mov
cmc
push
cwtl
sbbl
xchg
mov
aam
sbb
bound
mov
push
in
cmp
mov
mov
xchg
jg
sbb
dec
mov
mov
lds
cltd
mov
adc
xlat
xor
cmp
mov
jo
daa
dec
ss
pop
mov
daa
sbb
call
fbld
sub
push
adc
test
ljmp
sbb
data16
addr16
push
jns
xchg
fdivrl
outsl
mov
ret
xchg
adc
xchg
xlat
data16
xchg
adc
rcll
xlat
and
ret
lods
lcall
lahf
test
xor
sub
lock
jbe
ljmp
dec
inc
inc
push
mov
mov
or
push
pop
cmp
icebp
inc
pop
mov
lcall
jno
lods
or
cmp
mov
pop
jno
jbe
test
sbbl
jb
mov
pop
and
dec
push
in
addr16
or
dec
cmp
xor
cmp
jl
das
and
mov
pop
in
sbb
cmpsb
popf
jecxz
movsb
push
sbb
add
cmp
mov
cmp
mov
pop
push
jp
mov
push
push
lahf
mov
sub
push
xorl
pop
xchg
xor
shrl
lock
pushf
or
and
sbb
add
adc
js
pushl
xor
cmp
idivl
push
ret
in
sub
jg
xor
out
or
sahf
dec
add
fildl
arpl
inc
jnp
push
fs
add
mov
or
shrl
lret
xchg
mov
cli
mov
ja
lret
stos
ss
inc
jnp
cltd
xor
push
mov
jno
sub
cwtl
pop
iret
iret
aad
jno
lret
nop
lret
arpl
decb
movsb
insl
or
sub
add
push
aas
jecxz
leave
out
incb
mov
fldcw
arpl
ljmp
fistpll
mov
push
popf
dec
lods
pop
mov
mov
push
icebp
xchg
xchg
outsl
std
mov
fcmovne
jno,pn
repz
rcrb
pop
mov
cmp
xor
jge
fisttps
fdivrl
in
loop
and
repnz
int3
cmp
adc
and
pop
mov
pop
fwait
lret
xchg
xchg
cmp
es
mov
dec
jl
clc
or
testl
inc
faddl
leave
push
xchg
in
fildll
aas
iret
lret
push
pop
pop
push
dec
inc
push
push
scas
hlt
mov
jb
mov
shrb
dec
sub
aad
ljmp
jle
mov
aam
inc
cmp
mov
xchg
aad
lock
xchg
xor
insb
xchg
add
add
lea
inc
in
das
out
hlt
sbb
dec
or
jp
mov
mov
test
cmp
push
sti
mov
jne
stos
std
lahf
push
push
adc
into
push
int
packuswb
inc
push
or
fsts
jecxz
lahf
imul
dec
in
loopne
mov
sub
xchg
or
fbstp
xchg
loopne
inc
je
sub
dec
out
xor
inc
mov
sahf
xchg
leave
stos
fidivs
rorb
pop
out
push
ds
mov
orb
lret
mov
pop
dec
mov
xchg
repz
or
mov
lods
fisubs
enter
test
roll
mov
shll
xchg
dec
mov
lods
sub
adc
cld
test
sub
push
gs
stos
int
movsb
xchg
jae
mov
push
repnz
pop
lods
mov
movsl
int3
inc
fdivl
sbb
fsubs
cmc
and
sar
fstps
push
loopne
mov
push
mov
sahf
iret
adc
xchg
jno
shl
xchg
repnz
clc
mov
xchg
mov
push
outsb
mov
xor
pop
rolb
adc
fisubs
mov
outsb
mov
aas
cmc
adc
call
xor
and
push
pop
into
add
cwtl
xchg
mov
imul
cmp
add
movsl
orl
dec
hlt
add
out
pop
lds
adc
sbb
lods
stos
pushf
and
add
mov
arpl
and
pop
testb
lahf
sbbl
out
inc
jne
test
mov
jge
mov
jae
in
mov
add
mov
mov
and
and
mov
dec
into
loop
push
mov
popa
nop
in
pushf
popf
cmp
arpl
xchg
xor
lea
and
pop
inc
and
test
sub
fwait
divl
gs
sbb
mov
repz
iret
inc
roll
jg
ja
ja
and
lds
arpl
enter
jmp
out
lock
mov
mov
fisubs
mov
push
jge
inc
mov
insl
cmp
mov
xchg
mov
jo
rorl
xchg
lea
outsb
add
int
mov
sub
aam
stc
mov
cmp
scas
pop
xchg
daa
and
insl
sbb
sbb
scas
lock
cmc
fs
loopne
sbb
cmp
or
mov
gs
pop
into
out
shlb
mov
aas
push
mov
gs
pop
dec
repnz
cli
xchg
in
or
stos
cmp
sub
stos
sub
movsb
std
ret
cmp
aas
addr16
in
lods
add
pop
aam
je
loopne
mov
jne
imul
insb
push
cmp
sub
push
mov
mov
mov
sahf
sub
and
jnp
pop
lods
scas
fs
jns
cmp
dec
pop
mov
mov
mov
pop
in
pop
xor
or
arpl
daa
jnp
jl
outsl
mov
mov
fsubrl
adc
push
jmp
lcall
add
jne
xor
fnop
sub
fdivrs
int3
out
arpl
xchg
mov
pushf
xor
ficoml
daa
cmpsl
lret
pop
jge
out
inc
pop
sub
jns
xlat
out
cld
xchg
sub
sahf
in
xchg
shrb
adc
pop
hlt
addr16
imul
cmp
out
cmc
das
xchg
jmp
cwtl
mov
push
xchg
negb
xor
rorl
dec
mov
dec
mov
mov
push
mov
mov
ret
data16
mov
hlt
xchg
xchg
imul
inc
lods
mov
mov
fxch
xchg
mov
pop
xor
stos
dec
dec
rcr
pop
lea
mov
iret
pop
mov
xchg
xchg
insl
outsl
jecxz
fwait
fwait
xchg
dec
pusha
mov
pusha
jg
gs
add
es
push
jns
mov
mov
mov
fs
sbb
mov
mov
test
push
jle
inc
cmp
xor
das
lods
out
and
sti
pop
insb
or
lret
cmp
addr16
mov
jne
mov
mov
pop
sbb
fistps
mov
push
jne
insl
aaa
cmp
and
xor
sub
bound
loopne
in
push
dec
cmp
lds
cmc
sahf
jge
popa
sbb
jo
jg
call
mov
cmp
loop
imul
insb
add
fwait
adc
jmp
lock
sub
xor
mov
and
dec
xchg
push
sub
push
vmread
adc
jo
repnz
popf
shll
cltd
fistpll
mov
out
adc
out
mov
iret
sbb
adc
jae
test
not
xchg
inc
inc
cmp
cmpsb
std
arpl
sbb
push
push
adc
pop
ret
cs
arpl
enter
sbb
fcoms
jo
inc
shlb
jge
xchg
dec
frstor
add
sub
call
aam
pop
imulb
cmp
out
sub
push
inc
fs
xchg
push
out
syscall
loop
testl
jbe
insl
arpl
and
imull
insb
jle
ficoms
jno
int
adc
sbb
or
dec
sub
adc
dec
and
pop
mov
adc
es
shll
stc
inc
cmp
cmc
cmp
sti
rol
inc
leave
mov
js
leave
push
outsl
movsl
into
sub
fsubr
cltd
push
push
push
jecxz
lods
lret
inc
and
xchg
fsubrs
stc
loop
aam
jae
jne
test
cmp
dec
mov
fsubrl
adc
xchg
xchg
inc
xchg
call
repnz
sbb
cwtl
fs
daa
cli
scas
push
jg
adcb
mov
les
enter
adc
pop
ret
rorb
cltd
and
insl
ficomps
jno
je
shll
mov
les
jl
mov
mov
sbb
es
movl
and
mov
aam
or
scas
push
hlt
cltd
cmp
lock
cmp
pushf
jb
add
jbe
mov
push
dec
repz
xor
xor
lds
cwtl
ficoms
imul
mov
ja
push
add
std
mov
loope
lret
cmp
jg
pop
repnz
rorl
fisttps
icebp
inc
mov
cwtl
loop
jge
fwait
push
or
add
outsl
ret
jo
fstpl
pop
inc
ret
pop
rcrl
cmp
insb
in
loopne
outsl
out
adcl
adc
jl
pop
out
pop
fiadds
or
sbb
test
daa
mov
imul
in
xchg
add
mov
mov
add
mov
push
inc
xchg
mov
jns
or
shl
inc
lahf
cli
mov
push
leave
and
in
mov
push
pop
adcl
jnp
mov
enter
cmp
pop
jae
cmp
jge
push
lahf
daa
call
jecxz
jns
enter
add
fisubl
add
push
push
xchg
loopne
roll
adcb
loope
cwtl
sbb
cmp
data16
imul
and
popa
cli
cltd
or
rorb
test
nop
sub
fisttps
push
mov
xlat
aaa
mov
sarb
cmpsb
test
xchg
pop
fidivl
jb
jo
out
mov
int
add
jp
mov
mov
fdivl
push
inc
stc
jb
adc
call
popa
add
fmul
adc
shll
or
xchg
or
pusha
ljmp
sub
jp
rclb
mov
rorb
adc
mov
xchg
roll
adc
imul
mov
ss
js
je
test
add
and
add
push
mov
mov
ljmp
inc
xchg
testb
test
push
xchg
push
fistpll
dec
inc
bound
xor
scas
sub
repz
fsubl
roll
ror
lcall
into
loopne
dec
dec
loop
clc
jno
ds
lods
inc
and
jno
dec
popa
pop
cs
out
lods
adc
or
xchg
xchg
lahf
xor
cmp
cmovs
bound
add
stc
imul
or
push
add
dec
jge
mov
lret
int3
out
mov
loopne
mov
fcmovu
jmp
pop
dec
pop
ss
clc
mov
cli
int3
xor
ret
fs
mov
push
outsb
push
sbb
pop
cltd
xchg
sub
sarl
test
ss
faddl
in
mov
jo
aad
lcall
mov
dec
xchg
mov
mov
ret
adc
mov
jne
lock
sub
dec
clc
mov
ret
mov
aaa
pusha
in
cmpsb
push
insl
out
cmp
pop
mov
test
jp
mov
sti
jp
insb
mov
and
repnz
stc
xchg
lock
xchg
dec
pop
fwait
and
test
aas
pop
mov
loope,pt
push
mul
not
push
mov
lds
add
pop
ljmp
fistl
fiadds
add
nop
mov
out
lret
loopne
cmpsb
jmp
int
xor
sub
pushf
xchg
sbb
push
lods
pusha
lods
inc
xchg
fwait
push
leave
pop
clc
sub
gs
xor
sbb
test
ljmp
sub
xchg
mov
sbb
mov
cmc
cmp
roll
std
pop
fsubr
pop
test
pop
imull
lahf
jns
jle
mov
pop
adcl
insb
push
cmc
adcl
orl
push
pusha
xor
sub
out
sub
push
mov
and
fdivrl
sbbl
cld
movsb
notl
dec
dec
cld
xchg
bswap
pop
cmp
or
lea
jns
or
movsl
cwtl
je
mov
mov
pop
fucomip
les
pop
push
adc
xchg
xchg
adc
in
xor
cli
inc
cmp
cwtl
in
mov
lret
mov
mov
stos
pop
add
pop
cs
pop
mov
aad
cmpsb
call
repnz
lods
dec
daa
dec
inc
jg
out
dec
sub
lds
adc
dec
scas
fistl
or
out
mov
jbe
add
std
push
imul
and
xchg
sub
gs
pop
mov
fadds
fwait
mov
push
fsubrp
jnp,pt
adcb
add
push
std
xchg
push
test
adc
fsubp
lods
mov
sub
pop
inc
cmp
mov
xchg
fsubl
xchg
mov
daa
mov
cs
adc
lahf
dec
sbb
or
mov
pop
rcl
jo
xor
movsl
add
sub
or
cmp
leave
rolb
xor
mov
into
sahf
stos
mov
ds
xchg
add
cli
std
frstor
andb
add
inc
bound
sbb
or
xlat
push
out
dec
in
xor
js
and
add
int
add
subb
mov
mov
setnp
cmc
mov
sub
cmpsl
or
dec
sbb
mov
mov
rol
leave
xchg
out
xor
nop
icebp
aas
repz
outsb
into
pop
xlat
repnz
push
ret
cmpb
in
push
cmpsl
lahf
pop
stc
and
test
inc
ljmp
push
jno
repz
in
mov
jae
jnp
insb
insb
xor
rep
cmp
mov
cld
push
in
sub
lods
pop
sti
aad
mov
add
dec
push
xchg
test
or
pop
imul
rcrl
mov
ljmp
add
mov
cmp
pop
pop
lea
sarb
push
mov
pop
jecxz
push
cli
mov
pop
stc
sub
stc
and
idiv
lds
lcall
sbb
push
add
iret
sbb
rorl
push
ficoms
stos
jecxz
ret
fwait
xor
and
subl
loope
or
lahf
icebp
dec
jmp
movsl
jnp
or
pop
lret
lea
repnz
jp
cmp
sarl
aas
in
test
call
inc
sahf
ljmp
stos
dec
sbbl
pop
aaa
and
and
imulb
cmp
ret
jnp
jecxz
into
add
iret
push
jge
test
rcrl
insb
popa
and
jl
dec
cs
leave
jecxz
mov
adc
ret
std
cmpsl
mov
mov
xor
sub
jl
sbb
push
jle
imul
xchg
fmull
adc
jno
push
fs
pop
inc
repz
jno
mov
mov
stos
aad
push
adc
push
int
push
cs
mov
push
es
xor
adc
cli
stos
scas
mul
stc
movsb
enter
repnz
jmp
adc
mov
cmpsl
rcll
cmpsl
jecxz
inc
adc
ja
adc
loope
sub
push
lods
dec
sarl
sub
pop
loope
scas
mov
xchg
aaa
iret
sbb
sub
pop
jg
and
add
mov
xchg
test
mov
movsb
bound
push
mov
xchg
mov
xor
inc
lret
fdivrs
add
sahf
dec
cmpl
movsb
fcmovnbe
movb
sub
and
lods
dec
loope
iret
clc
shlb
jnp
aad
jecxz
pop
jbe
hlt
sub
vminps
out
loop
cmpb
scas
xor
cmp
xlat
dec
sub
sub
subl
push
dec
pushf
lea
inc
xchg
out
inc
push
lods
pop
push
outsb
div
in
mov
das
mov
ljmp
je
stos
movl
ljmp
frstor
mov
dec
scas
jp
inc
lret
pusha
mov
sbb
popf
daa
cld
add
xor
cmp
jl
outsl
fdivrl
jnp
into
xchg
and
faddl
movsb
pop
mov
clc
xchg
std
mov
lret
int3
lcall
jmp
jne
arpl
dec
stos
call
or
push
lock
push
mov
xchg
sub
cli
fists
dec
fs
mov
cmp
iret
movsl
dec
jmp
add
mov
inc
lret
loop
jbe
mov
push
mov
imul
das
jno
popf
sub
inc
sbbl
push
popa
mov
addb
gs
lret
mov
lds
fadds
mov
in
push
push
movsb
pop
lods
inc
xchg
cld
ljmp
pop
mov
lds
aam
loope
outsb
insl
ljmp
repz
push
sbb
popf
loop
adc
sarl
and
scas
cmpsl
or
inc
xor
stos
xor
mov
xchg
cwtl
xchg
jg
mov
dec
out
lods
cmp
jns
popa
cmp
dec
add
fldenv
jg
or
mov
push
mov
xor
ficomps
jo
test
mul
push
pop
movsb
lahf
test
hlt
scas
mov
jne
sbb
addr16
dec
inc
or
imulb
pop
xchg
cmp
cmp
in
cmpsb
xor
adc
aam
out
jae
push
gs
jae
mov
in
and
adc
dec
and
pop
cmc
ljmp
lret
scas
sbb
cmp
jo
jnp
insl
int3
arpl
sahf
and
jno
jns
arpl
or
and
pusha
nop
jg
xchg
push
fwait
ss
cmp
stos
cmp
mov
into
ljmp
mov
insl
mov
mov
test
jecxz
jecxz
xchg
outsb
fcoml
inc
pop
adc
ss
push
divl
jno
cld
test
jno
mov
movsb
dec
rcrb
not
xchg
cmc
and
lret
adc
mov
dec
popa
movsb
addr16
adc
cmp
in
sbb
stc
pushf
pop
cmp
xchg
mov
ret
and
sahf
push
stc
dec
push
hlt
jnp
js
es
popl
mov
inc
in
mov
fsubrp
and
xorl
jmp
dec
inc
mov
out
nop
rcl
stos
push
push
js
fcomi
outsb
out
or
or
mov
fwait
jg
lds
subl
fs
pop
cmp
push
cs
out
or
enter
mov
icebp
push
fcomps
filds
sbb
push
popf
scas
add
in
scas
inc
fisttps
sti
xor
call
enter
mov
cli
test
lods
lock
loope
or
gs
gs
jbe
roll
mov
cli
nop
cmp
push
adc
mov
push
mov
aad
mov
jnp
pop
test
loop
mov
movsb
sahf
shll
jge
inc
mov
cwtl
or
out
daa
divl
stos
mov
int3
imul
inc
cmc
sbb
xchg
cmp
inc
cltd
inc
addr16
xchg
pop
repnz
cmp
in
pop
dec
dec
cmpsb
jb
sub
or
inc
les
mov
sahf
in
popf
jmp
inc
sti
mov
fwait
xchg
fwait
mov
mov
cmpsl
mov
jmp
mov
stos
sbb
xlat
cmpsl
mov
fdivl
aam
sbb
xchg
xchg
sub
mov
ja
xor
or
clc
dec
mov
pop
sbb
mov
std
bound
lods
es
adc
cld
xor
pop
or
stos
int3
or
add
fmuls
or
adc
popf
loopne
mov
insb
adc
shll
pop
jl
cmp
mov
lock
jo
cmpsl
shlb
sti
sbb
pushf
xor
movsl
cld
loop
ljmp
or
call
push
arpl
pusha
mov
cld
mov
sub
scas
loope
test
pop
stos
dec
and
cwtl
outsb
push
fmulp
imul
mov
mov
lret
sahf
xor
scas
mov
cmp
mov
sub
mov
pop
into
pop
aas
jne
dec
in
pop
mov
add
scas
iret
out
fwait
int
ds
stos
push
add
outsl
lret
mov
pusha
incb
pop
push
fistl
mov
mov
hlt
das
jp
outsl
push
xchg
dec
movsb
mov
repnz
xchg
pop
adc
xchg
cmpsb
scas
mov
sbb
mov
push
in
pop
fs
rcrl
popa
icebp
aas
movsb
mov
add
xchg
shll
xchg
xchg
sbbl
xor
jge
gs
insb
enter
sbb
mov
popf
jg,pn
mov
xchg
adc
cld
jecxz
cli
daa
lahf
jmp
int3
xor
insb
outsb
sbb
div
jno
inc
adc
es
sbb
fsubrs
push
xor
out
mov
imul
inc
mov
push
push
push
adc
imul
loop
inc
iret
lret
rcrl
push
ds
xor
mov
sarb
mov
jle
cvtpi2ps
push
aad
repnz
iret
ss
jle
sbb
ret
inc
mov
dec
xor
dec
pop
push
lcall
sub
push
xor
aad
arpl
dec
leave
pop
add
sahf
repnz
aas
push
jle
sub
or
mov
inc
adc
mov
incl
loopne
mov
repnz
loope
inc
pop
ds
lea
fwait
data16
lea
repz
mov
push
nop
gs
lds
pop
jl
inc
adc
xor
inc
and
jmp
xor
jae
cmp
addr16
jl
pop
cwtl
xor
jno
sti
sub
ret
test
movsbl
lret
pusha
daa
inc
and
xchg
mov
jbe
mov
test
wrmsr
jnp
aam
js
dec
push
jbe
jmp
cmp
sub
fdivr
in
cltd
stos
lret
pop
dec
inc
pop
jno
adc
cwtl
into
xlat
and
adc
xchg
mov
push
xchg
mov
stc
xchg
cwtl
inc
xchg
add
and
das
sub
jmp
or
jae
jle
popf
jl
adc
mov
lock
xchg
xchg
popa
push
ljmp
bound
push
out
xchg
push
fs
outsb
movsb
scas
outsb
bound
je
stos
loopne
mov
push
out
pop
fnstsw
ret
div
prefetch
or
loopne
sbb
or
maskmovq
testl
data16
fnstcw
cmp
mov
stos
mov
andb
daa
mov
push
xchg
jo
das
lret
out
pop
repnz
and
sbb
adc
sub
or
repz
ds
in
repz
and
shlb
xchg
das
push
push
xor
mov
adc
jne
cmp
mov
daa
mov
ret
and
xor
mov
aam
mov
dec
push
dec
ja
jge
dec
and
dec
mov
mov
adc
mov
xor
addr16
sub
adc
jmp
xchg
and
sub
mov
in
sub
aaa
in
insb
hlt
jne
and
in
aas
xchg
cld
sbb
ret
pushf
addr16
inc
push
jp
xor
leave
in
pop
sub
call
repz
mov
adc
add
sbb
movsl
push
jg
out
mov
push
cmpsl
cmpsb
pop
add
dec
scas
xor
sbb
mov
mov
inc
decb
mov
rorb
sub
loopne
push
jp
loop
lret
sbb
xchg
sub
les
dec
test
pop
mov
mov
les
jge
cld
sub
push
xor
or
shll
fwait
dec
loope
pop
loop
cmp
mov
mov
or
inc
xchg
sbb
mov
in
lcall
push
mov
inc
shl
pop
insb
sbb
push
dec
pop
and
icebp
cld
test
icebp
aaa
sbb
jo
and
stos
fsub
xor
cmp
and
or
inc
add
ds
fisttpl
push
call
das
inc
int3
push
out
clc
dec
idivl
movsb
in
push
lds
jo
or
dec
mov
jecxz
adc
or
jmp
push
ud2
inc
sbb
sub
mov
repnz
imul
movsb
xchg
and
lea
add
lcall
add
lcall
inc
jae
mov
add
and
les
cltd
dec
sbb
lock
xchg
ljmp
sbb
testb
mov
xchg
jb
leave
ja
and
js
in
mov
mov
mov
xlat
and
or
lcall
lods
mov
out
lock
or
sbbl
mov
mov
xor
inc
cmp
shl
in
adc
jl
jno
push
sub
or
adcb
fstl
shlb
faddl
push
jle
xlat
stos
push
jmp
bnd
subl
test
fimull
jbe
xor
inc
push
xchg
std
adc
out
repz
xor
jb
arpl
mov
lods
inc
mov
mov
xchg
lret
fs
mov
iret
adcb
data16
pop
ja
sarl
pop
push
or
sub
add
fs
std
imull
pop
addr16
test
fsubp
js
pop
xchg
mov
test
aaa
jp
ss
and
pop
jl
xchg
dec
add
ret
shrl
inc
loopne
push
in
je
scas
jl
and
sbb
mov
mov
xor
fisubl
sahf
mov
xlat
push
and
adc
or
mov
fidivrl
xchg
sub
or
mov
test
lds
mov
sti
ljmp
std
cmpsb
sbb
push
xchg
adc
movsb
push
sbbb
movsl
int
out
daa
jecxz
pushf
in
roll
cmp
pop
push
fldl
xchg
fildl
loop
cmp
test
bound
mov
stos
arpl
stc
inc
out
xlat
mov
push
imul
inc
outsb
inc
or
movsl
mov
jg
cmp
pop
mov
ret
inc
adc
mov
and
aam
sti
insb
or
mov
add
popa
lods
lock
adc
in
je
jno
fs
sbb
lcall
jno
shrl
popf
xchg
dec
jl
dec
sub
iret
insb
sub
mov
push
iret
xchg
ficompl
or
and
in
sbb
dec
sbb
mov
mov
jmp
mov
loopne
fs
repnz
jns
xchg
and
lret
mov
push
xchg
loopne
sbb
push
pop
pusha
jp
fildll
cmpsl
ja
xchg
aad
pop
out
mov
sub
into
sbb
dec
daa
add
loop
aad
fdivrp
jecxz
imul
pusha
lock
aas
clc
mov
lock
stc
hlt
cmp
push
cwtl
xchg
cmc
or
jb
jae
jmp
adc
xchg
sarl
and
pop
xchg
fwait
xor
cmpsb
inc
pushf
xchg
and
das
scas
xchg
or
cmc
pop
sbb
cld
gs
dec
idiv
xchg
out
fbstp
cmp
or
push
ja
jbe
test
fwait
push
fldenv
stc
jg
xchg
dec
pop
and
jb
dec
pop
std
xchg
mov
outsb
into
test
jge
dec
fdiv
xchg
mov
call
sbb
pop
mov
fwait
or
inc
add
fstl
inc
cmc
in
xchg
cmp
mov
incl
ror
notb
jle
iret
push
sub
cmpsb
xchg
xchg
dec
arpl
cmpb
gs
mov
cmp
pop
lea
cmp
xor
add
cmp
jl
adc
mov
push
and
pop
sub
mov
mov
cltd
and
cmpsb
pop
jl
out
pop
add
jns
fadds
hlt
xor
fisttps
in
inc
enter
jae
pusha
and
imul
xlat
ret
leave
sub
call
fwait
sub
ljmp
cmp
ljmp
and
mov
jo
pop
test
daa
cmp
jnp
ds
cwtl
mov
push
adc
mov
sbb
shlb
add
movsl
gs
iret
adc
test
inc
cmp
mov
scas
insl
je
clc
and
int3
push
les
daa
xor
xchg
lcall
in
ds
xchg
je
jbe
enter
fdivrs
loopne
inc
add
pop
sub
mov
outsb
aad
jle
rcrl
sub
lahf
aas
sbb
mov
adc
frstor
dec
jbe
push
cmp
pop
fidivrs
cmp
es
inc
and
in
in
scas
push
pop
fadds
loop
leave
add
ja
fs
ss
jns
out
sti
xor
xor
jae
int3
or
sub
xor
dec
mov
sub
cmp
loopne
sub
cmp
jo
add
cld
pop
arpl
loop
lret
cli
xor
ljmp
xchg
jmp
mov
loope
ror
mov
in
sub
mov
fsubrl
push
dec
jns
pop
cld
jp
mov
sub
test
sub
mov
mov
push
arpl
std
test
les
cmpb
cmp
test
sti
loope
pop
lret
lahf
lea
or
mov
push
ret
cld
cmpsl
ret
bound
mov
mulb
sbb
orb
pop
xchg
inc
into
push
cmp
ffree
xchg
pop
daa
cmp
jo
mov
clc
jmp
mov
jae
rorb
stc
out
push
inc
test
sbb
xchg
ret
cltd
adcb
cmp
nop
pop
cmp
add
and
dec
adc
lcall
jo
fcmovne
cmp
xchg
xlat
adc
cmc
dec
mov
out
lcall
sahf
xchg
push
pop
aaa
ja
fdecstp
test
mov
cmp
mov
add
xor
and
mov
ja
or
out
pop
aaa
ret
mov
mov
subb
adc
or
push
int3
push
cmp
cmc
dec
or
std
test
mov
repz
fisttps
daa
pusha
sbb
jg
fsubs
sub
xchg
mov
call
pusha
adc
jmp
fdivrl
lret
pop
ljmp
icebp
gs
mov
xchg
push
outsb
out
mov
stos
mov
loopne
testb
cmc
dec
call
jp
fcompl
aas
dec
dec
pop
jp
jnp
lock
jge
adc
xor
notb
daa
sub
cmp
pop
mov
ja
xchg
push
stos
sub
mov
sub
xlat
ss
mov
sub
not
mov
push
test
rorl
dec
cld
orl
mov
mov
pop
addr16
inc
into
test
ljmp
pop
and
popa
lods
add
popf
mov
sub
xor
mov
outsl
jns
call
mov
ret
push
cmc
jl
pop
cmp
adc
mov
out
repz
jae
inc
and
movsl
js
inc
mov
pushf
inc
xchg
pushf
cld
sbb
add
loop
fwait
sbb
in
mov
xchg
in
mov
jnp
and
push
or
in
and
dec
cltd
sub
sbb
mov
mov
divps
cwtl
cs
data16
test
pushf
pop
jl
jg
and
jmp
fisubrl
fisubl
std
push
xorb
or
icebp
das
int3
test
int
movsb
push
sbb
cmp
scas
lret
hlt
xchg
lods
outsb
test
test
push
jnp
jg
stc
and
sbb
enter
inc
int
mov
xchg
out
adc
shl
pop
vmaxss
jae
and
adc
mov
mov
jb
sbb
push
sub
mov
repnz
cmp
add
mov
jne
sub
dec
fwait
popa
fistpll
xor
lock
lds
mov
mov
xchg
pop
int
cli
into
inc
mov
pop
stos
aad
sub
loop
inc
pop
mov
jge
jg
fldl
xchg
mov
rorl
jge
mov
out
ret
sub
mov
inc
sbb
movsb
sub
cli
icebp
and
fidivrs
cmove
pop
adc
jbe
in
cmp
sahf
dec
les
dec
push
mov
push
xchg
outsl
enter
pop
jle
in
cmp
push
jb
jg
xorb
cmp
pop
pop
in
sub
xchg
inc
hlt
div
sbb
out
dec
xchg
mov
movsb
push
ror
or
fnsave
repz
ja
mov
mov
mov
dec
out
push
jecxz
fs
inc
and
sbb
push
mov
jno
inc
add
dec
push
jg
es
mov
bound
iret
push
aaa
stos
mov
lods
nop
add
mov
stc
xchg
stos
dec
outsb
dec
mov
pop
add
enter
dec
repz
les
inc
loop
mov
daa
mov
dec
in
lock
fnstcw
mov
scas
xchg
push
fcmovu
pushf
jne
lock
push
xor
or
movsb
mov
cmp
jle
fnstenv
dec
xchg
out
inc
xchg
orl
pop
jae
popa
add
sbb
nop
mov
push
cmp
out
dec
scas
jp
jno
hlt
add
jle
lret
push
sbb
popa
inc
stc
cmp
mov
clc
jne
dec
inc
shrl
sub
dec
mov
leave
dec
rcll
cld
adc
inc
xor
xchg
shrl
xor
in
pop
jo
jb
loop
pop
int
rorb
cli
ljmp
aaa
inc
mov
dec
pop
int
testl
mov
lahf
sbb
loopne
repz
or
loop
icebp
xchg
test
mov
das
jmp
or
loope
sbbb
addb
mov
dec
pop
roll
add
push
fs
js
xchg
mov
imul
ja
out
adc
fimull
lret
ja
push
mov
pushf
mov
std
push
pop
jo
adc
xchg
sub
xor
movsb
jge
fisubl
pop
fcmovnu
out
cmp
rclb
mov
inc
les
fiadds
xchg
push
add
lods
ret
stos
rcrl
loope
or
cmpsl
sub
cld
or
jbe
in
popa
adc
outsb
cmp
pop
dec
and
inc
push
sub
ret
mov
rcrl
pop
fistpl
sqrtps
jne
jb
dec
mov
lods
mov
inc
inc
adc
fs
add
pop
loop
sbb
sbb
imulb
jnp
jl
paddq
shl
sbb
sbb
or
cltd
push
lods
ja
inc
lcall
lds
outsb
pop
adc
push
pop
cmp
test
mov
ret
imul
sub
ficompl
fstl
aas
push
fildl
inc
mov
cmpl
dec
mov
pop
jb
hlt
into
sbb
sbb
fsubrl
push
outsb
pushf
insb
int
jo
inc
lahf
std
jno
jae
xor
insb
sbb
idivb
stos
leave
sbb
push
mov
xor
xchg
and
and
cmp
ss
iret
mov
cmp
sbb
add
sub
imul
mov
push
push
xor
jle
roll
push
sbb
sbb
lock
dec
flds
push
adc
mov
inc
adc
je
sbb
sub
xor
push
inc
or
push
add
rclb
js
int
mov
jae
cwtl
adc
dec
pop
dec
cld
js
xor
mov
lret
inc
nop
sarb
pop
aad
mov
int
adc
scas
stc
icebp
bound
stos
or
mov
test
jmp
jbe
cmp
sub
push
xor
sahf
iret
jbe
stc
mov
imul
shll
push
dec
mov
test
push
push
pop
outsl
adc
aas
mov
mov
mov
mov
jmp
jb
pop
lret
inc
cmpsl
leave
outsb
loope
sarb
data16
mov
sbb
mov
xchg
gs
pop
lods
popa
inc
jnp
scas
dec
pop
aam
cmc
cs
or
movsl
mov
xor
jmp
aam
ret
js
insb
sar
cs
inc
shl
lock
outsl
aam
out
aam
scas
and
arpl
pop
mov
add
adc
sub
xchg
icebp
andl
shlb
inc
inc
mov
aad
outsb
cmp
jne
lret
or
mov
push
in
pop
jmp
lret
xor
subl
mov
pop
jmp
xchg
sahf
push
lcall
or
or
ret
push
push
dec
je
lds
fldt
mov
lcall
in
out
cmp
shr
fcoml
jns
bound
mov
jnp
inc
aaa
jp
pop
ret
add
ret
lcall
lods
dec
sbb
fcmove
js
jle
fiadds
add
push
into
mov
cmp
daa
mov
outsl
and
js
mov
iret
ja
push
or
pushf
sahf
jl
ret
xor
and
pop
pusha
in
jmp
jns
jno
fs
mov
sub
xor
and
leave
testb
push
in
sub
or
sub
and
mov
mov
sbb
pop
repnz
push
jb
movsl
push
js
mov
mov
push
jmp
cmpsb
rorl
dec
sbb
jp
aaa
inc
out
adc
jae
jne
sarb
test
dec
mov
outsb
lret
in
out
cltd
mov
repnz
and
jns
jae
mov
lods
mov
pop
sbb
pusha
pop
or
push
pop
xor
fmull
cmp
mov
inc
in
bound
jbe
pusha
adcl
dec
adcl
rcrl
lret
in
imul
repz
push
inc
push
pushf
dec
push
cmpsb
iret
cltd
js
and
inc
jmp
add
lahf
enter
lods
fwait
adc
sub
pop
sti
repnz
jmp
ljmp
lahf
lret
addr16
xchg
pop
lea
push
call
push
jl
enter
jp
movsb
call
sub
shl
hlt
jb
rep
xchg
sub
mov
lods
out
arpl
sbb
jl
dec
mov
rcrl
xchg
push
lods
sbb
dec
jbe
ja
adc
shr
xchg
cs
out
shrl
inc
sbb
push
push
mov
jl
pushf
jnp
xchg
into
repz
xchg
test
push
ret
inc
repz
lret
mov
jp
jle
sarl
fcoms
je
dec
out
sub
jmp
imul
mov
mov
sbb
and
sub
fistps
arpl
in
js
jnp
movsl
push
inc
lods
jnp
lock
xchg
testl
jnp
sbb
in
inc
mov
fisubl
leave
cwtl
ds
std
leave
shlb
and
mov
jmp
addr16
jg
cmp
aam
lret
mov
inc
jmp
lods
outsl
rsqrtps
mov
shll
movsl
jmp
aad
sbb
adc
cmp
pusha
enter
xchg
mov
jb
shlb
jbe
in
adc
lods
xor
and
and
push
mov
jg
popf
jle
inc
shlb
into
xchg
out
xlat
cwtl
nop
add
jae
add
popf
daa
mov
out
into
popf
mov
or
pop
std
dec
xchg
sbb
or
mov
push
rclb
jns
xchg
jg
daa
xchg
fbstp
cmp
pushf
inc
ret
dec
es
rcll
addr16
rorl
sub
pop
into
xchg
dec
ret
test
out
push
fiadds
in
sub
scas
pop
sahf
mov
test
mulb
add
dec
inc
jp
or
mov
push
pop
mov
push
lahf
inc
pop
aad
xchg
pop
push
aad
or
or
mov
and
and
jne
adc
in
int
and
pushf
jg
sbb
fs
xchg
mov
cwtl
jae
and
push
std
lock
clc
push
jmp
xor
inc
sti
add
aad
mov
xlat
lahf
inc
js
lret
push
push
push
sub
push
lods
sub
mov
sbb
cmpsb
cwtl
cwtl
pop
lods
psllq
insb
and
or
push
ret
pusha
leave
shrl
adc
mov
add
or
mov
and
jns
cmpsb
adc
mov
outsb
stos
pop
xchg
mov
hlt
call
dec
rol
dec
cmp
scas
cmp
adc
inc
adc
in
sbb
dec
pop
mov
mov
pop
sbb
cld
xor
mov
xchg
cwtl
cmp
cld
adc
xchg
aaa
mov
mov
add
pusha
movsl
test
outsb
jg
clc
jo
and
mov
xchg
mov
jle
xor
out
pop
int3
ja
sbb
pop
or
insb
mov
sub
cmp
outsl
inc
les
jne
test
xchg
rcrl
or
fbstp
ljmp
dec
cmp
jno
mov
lcall
pop
pop
cmc
int3
cmp
dec
pop
mulb
xchg
add
sbb
jmp
or
clc
jnp
call
jg
std
lock
ljmp
sbb
xchg
fcmovu
push
out
add
imul
stos
mov
in
push
insb
lea
pop
jne
pop
dec
cmpsl
push
inc
cmp
iret
cmpl
mov
adc
lods
or
and
pop
mov
fiadds
adc
inc
inc
mov
icebp
jo
repnz
mov
enter
incl
inc
jae
cmc
inc
push
cld
mov
outsl
jle
or
mov
and
or
orl
sub
dec
pop
imul
sub
xor
pop
mov
xor
gs
movl
addr16
aaa
push
xlat
pop
sbb
cmp
adc
adc
psrlw
lahf
jge
mov
incl
shrb
add
fnstcw
push
sub
lahf
lock
adc
les
ret
sahf
testl
sarl
jge
sbb
clc
sbb
ret
rolb
pop
sbb
js
mov
insl
mov
ret
icebp
adcb
sub
cmp
cld
dec
pop
testl
mov
and
cld
insb
fadds
xchg
lcall
stos
jne
out
inc
sub
pop
mov
stos
out
cwtl
icebp
iret
mov
es
push
decb
mov
pop
and
mov
pop
jmp
xchg
jmp
repz
hlt
imul
ret
in
ja
mov
dec
fistpll
adc
out
adc
arpl
scas
outsb
mov
js
xchg
xor
sbb
mov
scas
js
orb
in
push
lret
pushf
jno
leave
arpl
mov
bound
test
pop
cli
test
cli
cld
inc
pop
cmpsl
sbb
pop
xchg
mov
ret
pop
and
test
pop
repnz
test
imul
fwait
ja
mov
stc
xor
mov
inc
js
gs
insl
dec
leave
cmp
arpl
inc
out
lods
jecxz
call
aaa
xchg
pop
jns
and
data16
push
push
fsubs
add
cmc
push
adc
pop
sub
orb
sub
aaa
sub
scas
or
sbb
sub
fmuls
ljmp
lcall
lret
xor
js
adc
stc
jge
leave
les
out
mov
xor
scas
mov
add
sub
out
hlt
outsl
sahf
sbb
daa
out
push
lret
jmp
shlb
sub
jp
inc
xor
stc
push
sub
adc
ljmp
nop
lods
outsb
cmp
mov
dec
sbb
dec
cmpsl
rorl
jl
cmp
xchg
mov
into
cmp
stc
mov
movsb
sbb
jno
mov
fnsave
fcomip
mov
arpl
add
mov
test
sub
mov
adc
dec
lods
xor
pusha
mov
add
lock
bound
xchg
in
adc
mov
push
nop
mov
stc
inc
sub
xchg
mov
dec
test
sbb
mov
outsb
arpl
movsb
jecxz
xchg
loope
mov
push
inc
into
or
test
aad
push
clc
xor
add
lods
div
xchg
push
cmp
adc
and
cli
inc
pop
clc
lds
sahf
mov
push
xchg
sahf
fwait
xlat
iret
fs
cmpsb
shr
stos
popf
leave
imul
stos
xor
sbb
mov
sarb
fimull
mov
sub
and
fistpll
daa
idivb
pop
cmp
push
push
iret
jmp
and
sub
mov
xchg
add
and
shlb
iret
call
sub
repnz
mov
push
dec
push
sub
lods
or
xchg
or
sub
sub
mov
icebp
lods
cmp
add
outsb
cmp
sbb
int
or
xor
xchg
test
mov
test
loope
mov
rclb
popf
mov
out
pop
mov
and
movsb
scas
push
dec
cld
pop
add
pop
add
or
scas
adc
ljmp
cmpsb
add
jne
adc
jae
inc
mov
mov
test
xchg
mov
data16
fsub
or
jmp
jnp
mov
pop
jo
adc
scas
lods
mov
cmpsb
scas
xchg
lret
lods
sub
or
and
xchg
pop
mov
js
cs
mov
fldl
add
adc
pushf
pop
andl
leave
js
pushf
je
jmp
sbb
push
adc
push
stos
cmpsl
inc
hlt
inc
cmp
lret
adc
sbb
loope
leave
mov
pop
out
sub
ds
insl
xor
idivb
mov
repz
leave
js
adc
mov
imul
or
jo,pt
xor
inc
xchg
lods
clc
add
dec
xchg
call
mov
test
leave
xor
cmp
adc
enter
and
jecxz,pn
cmp
mull
ss
inc
cmp
or
ss
xor
fcmovnu
dec
sbb
ficoml
sub
arpl
insb
mov
cmp
rorb
lret
js
push
mov
pop
xchg
inc
aas
movq
jnp
loop
xchg
in
push
mov
inc
or
xlat
loop
sbb
add
or
xor
jns
aaa
or
test
sbb
aaa
ret
das
mov
add
add
jl
add
rolb
lret
push
lret
idivb
xchg
scas
test
cmp
xor
mov
fs
scas
movsl
cmp
mov
dec
pusha
xchg
insb
pop
roll
inc
push
mov
and
cmc
inc
xor
and
inc
and
sbb
out
test
sbb
in
rorb
dec
fisubs
mov
lahf
adc
aas
mov
scas
ss
mov
or
scas
dec
sbb
mov
ret
addr16
dec
testb
jnp
mov
jg
jne
or
out
xor
inc
xor
mov
shl
lea
lahf
lcall
jnp
xor
sub
adc
pop
arpl
mov
xchg
int3
cmp
lret
aam
mov
and
jl,pt
arpl
sub
pop
add
pushf
hlt
jo
add
mov
inc
mov
mov
pop
add
jns
mulps
push
in
hlt
push
cwtl
xchg
popf
lahf
mov
stc
out
imull
push
cmp
inc
fbld
int3
in
and
cmp
jmp
ret
mov
fsincos
pop
test
jns
mov
push
mov
rcrb
sbb
mov
mov
jge
ljmp
pop
leave
xor
sub
movsb
scas
js
cmp
jecxz
lds
and
mov
pop
loop,pt
cmp
sbb
jnp
call
adc
test
jno
movsb
imul
mov
ret
loopne
aad
and
popf
ret
jno
mov
cwtl
mov
in
jae
rcrb
mov
sub
mov
xor
pop
lcall
roll
jb
mov
xchg
insl
test
cmp
mov
jg
popf
rcll
or
mov
gs
outsl
stos
repnz
xchg
inc
dec
sbb
andb
and
mov
mov
jge
and
call
sub
sbb
xor
into
daa
dec
daa
sub
std
addr16
mov
pop
pop
inc
xor
decl
cmpb
pop
outsb
or
sti
mov
sbb
adc
mov
stos
fwait
in
jl
xchg
sub
cmpsl
rorl
in
stc
jge
mov
pop
cmpb
inc
xchg
inc
ret
ljmp
popa
inc
xchg
cs
icebp
pop
push
stc
pushf
mov
into
punpcklbw
sbb
jl
aam
data16
pop
shlb
sbb
add
cwtl
js
rclb
fwait
popa
jo
pop
subl
inc
push
dec
das
mul
inc
mov
clc
repnz
fwait
cmovbe
lret
fldt
sbb
mov
sbbb
xchg
int3
pop
add
mov
mov
or
jmp
sub
iret
lock
ss
mov
xor
adc
cmpsl
jl
mov
movb
nop
cmp
jge
or
or
fwait
dec
cmpsl
mov
cmpb
mov
push
pop
test
cli
sub
subb
cmc
mov
cli
into
sub
fidivs
push
jo
mov
movsb
xchg
cmp
or
mov
dec
xchg
hlt
mov
mov
std
call
jns
add
pop
push
stc
pop
data16
cmc
xor
out
or
sbb
icebp
xchg
sbb
mov
cs
repnz
fidivs
mov
jns
push
scas
sbb
imul
and
imul
popa
or
adc
sbb
cmp
nop
into
mov
jg
pop
mov
inc
pop
andl
cmp
xchg
mov
movsb
cld
nop
lea
inc
lret
stos
movsl
fsubrp
add
icebp
out
mov
jne
clc
stc
adc
mov
fadds
fstpt
outsb
dec
orl
dec
cmc
sbb
imul
pushl
sbb
inc
ret
fdivrs
rcll
push
lret
imul
mov
pop
xchg
fldenv
fidivs
xchg
push
cmp
jb
test
cmpsb
daa
inc
scas
xchg
out
fnsave
mov
xchg
out
add
mov
mov
shl
and
cld
sbb
addr16
xchg
outsb
inc
popf
clc
xchg
xchg
jmp
ss
push
xor
and
push
inc
cmp
out
xchg
mov
nop
lcall
aaa
imul
iret
ljmp
inc
shlb
in
xor
rcr
sbb
sbb
sarb
jnp
add
divb
in
cmp
cmp
insb
and
out
mov
or
addr16
scas
sub
mov
ss
rorb
pop
xchg
test
cmp
ja
popa
xor
sti
push
ljmp
cmp
pop
or
push
jo
adc
jl
popf
pop
cmp
test
mov
out
fnstsw
cmpsl
imul
scas
mov
enter
ret
test
xor
daa
push
icebp
addb
cmp
inc
shr
leave
sub
ret
addr16
test
daa
mov
pop
mov
jecxz
inc
mov
sbb
jmp
mov
inc
xchg
cmp
xor
jae
pop
loopne
repz
and
and
incl
sbb
dec
mov
test
xchg
mov
add
shrb
pop
loopne
sub
lret
in
test
mov
pop
mov
pop
cmpsb
cmpsb
pop
pop
lods
rcll
jl
inc
mov
lock
adc
mov
jno
mov
stc
and
es
movsb
out
pop
je
jle
cmp
cltd
stos
cmp
mov
test
nop
mov
jns
mov
fnstcw
sahf
sbb
mov
sbb
ljmp
aaa
lahf
dec
inc
cmp
rorb
outsb
and
xchg
inc
sbb
jl
cmpsb
cmp
adc
sub
pop
dec
cmp
out
xor
jge
enter
inc
pop
out
mov
mov
pop
adc
sbb
xchg
push
call
and
add
xor
and
in
test
push
ja
dec
pop
pop
pop
add
jle
pop
sarl
or
sbb
popa
push
pop
or
mov
sbb
and
sti
pop
push
and
roll
or
add
clc
loop
add
pushf
das
icebp
stos
sbb
dec
cmp
cwtl
sub
xor
xor
jge
popl
sub
sub
adc
dec
aaa
fdivs
pop
mov
xchg
in
push
or
leave
lret
pop
and
mov
fwait
xchg
inc
or
sbb
pop
imul
or
aaa
sbb
dec
ds
fcomps
xchg
stos
ret
divps
sub
mov
test
mov
sub
mov
aad
push
xchg
and
dec
fildll
mov
mov
das
pop
loope
dec
mov
fisubs
or
es
mov
xchg
test
xor
cmp
shrl
jo
nop
sub
pop
dec
xchg
leave
sbb
add
mov
push
xor
lret
stos
cltd
fcoms
lcall
push
xor
mov
mov
adc
add
or
test
xchg
inc
jg
loope
jns
pop
add
jmp
les
cmpsb
icebp
dec
inc
leavew
out
arpl
mov
xor
add
gs
sbbl
out
and
popa
imull
mov
mov
in
outsl
icebp
inc
jmp
and
aaa
sbb
add
push
aas
mov
mov
fsincos
dec
adc
pop
mov
xor
jo
pop
aaa
push
orl
lock
jmp
jns
stos
xchg
xor
imul
pop
xchg
in
push
not
adcl
jbe
and
insl
sub
mov
inc
movsb
xchg
pop
jb
xor
cmpsl
adc
push
lods
js
xor
movsl
in
cmp
fisttpl
push
xchg
js
xchg
mov
nop
mov
adc
fsubl
aad
movsb
testb
cmp
mov
dec
shl
pop
in
or
popf
lahf
jge
cli
je
xchg
jle
mov
jns
fwait
inc
out
or
mov
enter
scas
mov
jno
or
mov
xchg
and
icebp
data16
faddp
test
and
out
inc
repnz
loope
xor
imul
pop
in
ja
aas
jp
push
lods
jge
int3
mov
rorl
frstor
push
fldcw
decl
xor
lods
pop
push
cltd
std
bound
aam
lret
insl
or
leave
mov
fdivrl
mov
pop
imul
test
fildll
test
mov
jecxz
lock
ja
jno
shr
mov
sbb
test
mov
std
ret
xchg
mov
adc
lcall
jns
es
les
lods
pop
dec
inc
jno
push
ret
popf
or
lahf
cmp
out
dec
mov
aad
xchg
dec
lods
enter
mov
pop
gs
lcall
ret
cmp
insb
and
loopne
xchg
fs
hlt
sbbl
xchg
and
fsubrs
sbb
je
push
mov
movsb
les
bound
mov
dec
inc
cmc
adc
xchg
mov
shll
loop
and
pop
ja
dec
mov
or
dec
cmc
fwait
shll
pop
pop
in
push
jne
xchg
xorl
fmuls
push
ss
jmp
imul
sbb
pop
xor
push
pop
xorb
loope
aam
ss
dec
test
lds
lcall
xor
pop
add
and
cmpsl
push
adc
nop
fbstp
jmp
std
jle
and
imul
add
cmp
mov
lock
out
inc
pop
popa
cld
jne
mov
add
loop
lcall
dec
loope
ret
dec
fistl
push
std
lods
ljmp
loop
push
std
cmpsb
xchg
add
or
aas
xor
lods
enter
shll
jmp
imul
ss
mov
fwait
cmpsb
adc
sub
adc
lea
push
rclb
cmpb
bound
inc
out
jns
xchg
pusha
leave
mov
popa
addl
sbb
or
repz
ja
pop
inc
pop
jecxz
adc
imul
xor
test
loopne
xchg
inc
adc
or
iret
fwait
jne
inc
fmul
pusha
or
decb
clc
or
fiaddl
loopne
pop
cmpsl
pop
dec
pop
push
mov
pop
pop
inc
cmc
xchg
xchg
inc
xchg
out
cltd
clc
pop
pop
int3
lahf
test
sbb
nop
mov
push
inc
inc
pop
cmpsl
lock
jne
fisubrs
inc
and
orl
lahf
ss
ljmp
int3
and
ret
or
pop
xchg
jnp
push
dec
sbb
dec
insb
mov
dec
jb
mov
jns
adc
adc
movsb
repnz
repnz
stos
ret
mov
fnsave
xchg
cld
jmp
xchg
sub
cmc
je
mov
push
inc
pop
cmp
dec
scas
mov
out
add
insl
sub
jmp
xchg
stos
mov
push
outsl
mov
stos
sub
cmp
add
add
arpl
xor
xchg
or
stos
in
or
repz
adcb
loop
dec
mov
out
add
scas
push
xor
mov
out
fiaddl
outsl
dec
imul
adc
stos
movd
orl
lock
xchg
dec
xchg
movsb
fs
adc
add
push
nop
fnstsw
mov
loope
out
inc
push
jno
xchg
mov
jmp
rolb
shlb
mov
addb
scas
sub
xchg
test
ss
sub
dec
aaa
cltd
add
sbb
ficompl
daa
adc
add
sbb
mov
movsb
inc
movsl
test
push
lcall
lret
popa
mov
aaa
dec
decb
out
mov
cwtl
adc
push
stc
mov
mov
sbb
mov
pop
lods
push
mov
fs
ret
inc
sub
xorl
jge
push
jnp
cmp
popf
fwait
mov
into
pop
push
jb
repz
aaa
mov
pop
add
popa
ret
adc
mov
push
and
adc
push
test
pusha
iret
fstpt
dec
xorb
add
jae
sbb
fadd
sub
daa
and
sbb
test
push
nop
es
in
sti
fildll
add
jmp
mov
or
sahf
out
in
lahf
xor
ss
push
call
jl
dec
pop
adc
stos
sbb
mov
lea
mov
iret
loopne
or
and
mov
mov
push
sbb
cmp
lods
xlat
or
dec
xchg
mov
inc
adc
dec
std
pop
xor
sbb
mov
xchg
sbb
or
pop
rcll
xor
jl
leave
pop
test
xchg
test
cmpsl
lods
mov
out
jbe
or
pop
push
xorl
mov
rcrl
pop
mov
outsb
or
inc
inc
jb
jne
sbb
inc
xor
sbb
mov
mov
sub
fcmovnb
inc
pop
stc
in
pop
xchg
cmp
inc
sbb
sarb
jecxz
iret
repz
std
mov
js
subb
cwtl
cmp
jecxz
mov
xor
out
loope
jae
inc
xchg
xlat
mov
gs
fdivl
fs
mov
pushf
jmp
xchg
ret
fistpl
faddp
sbb
jecxz
mov
mov
imul
pop
mov
out
les
jo
sub
negb
dec
xchg
jb
push
xchg
pop
loopne
or
pop
pop
addr16
ret
sbb
divl
jecxz
stc
push
or
loope
jb
pop
pop
lea
jg
int3
dec
cmpsb
lods
mov
stos
mov
mov
sbb
mov
loop
aad
push
aam
inc
test
sbb
add
cmpsb
jl
lock
jmp
cmpsl
jno
push
insl
dec
int3
in
fistpll
push
mov
outsb
int
mov
cmp
adc
stos
lret
hlt
icebp
addr16
in
xchg
stos
hlt
sbb
daa
xor
jle
jp
lcall
inc
int3
push
dec
outsl
out
stc
out
mov
lret
mov
sub
aam
mov
xchg
add
sub
sub
fidivrs
fucomi
dec
popa
dec
xor
bound
xlat
sub
jb
movsb
fwait
push
cmpsb
mov
pop
js
mov
cmp
lods
and
sbbb
inc
aas
jo
xchg
call
popl
test
sbb
or
inc
out
fdivr
out
xchg
ret
ror
push
jmp
fnstsw
daa
inc
mov
inc
add
push
lret
nop
mov
pop
push
xchg
lret
ret
arpl
or
lea
mov
add
int3
sbb
out
rolb
mov
or
js
push
mov
lods
fisubl
ja
in
pop
mov
test
aaa
stc
and
mov
xchg
adc
fmuls
and
adc
int3
sar
xchg
push
aad
adc
daa
add
sub
dec
pop
dec
dec
adc
inc
out
inc
pushf
pop
lret
enter
xor
mov
mov
js
addr16
xor
fldt
xchg
xchg
pop
test
ja
inc
sub
int3
and
jno
jle
pushf
nop
cmp
push
jno
cwtl
movsb
mov
cli
mov
add
inc
call
sahf
into
cvttps2pi
fcmovnbe
fcompl
push
or
aas
pop
pop
mov
push
test
mov
jb
xor
out
xor
jno
jecxz
dec
stc
sbb
jbe
push
cltd
sahf
sbb
sbb
adc
das
divb
lret
or
pop
and
inc
int3
cmpxchg
shl
xchg
test
dec
lcall
cmp
jecxz
xchg
and
jns
pop
pop
xchg
cmp
add
sub
mov
inc
mov
jl
lret
and
mov
push
mov
pushf
cli
add
aad
or
gs
cmp
mov
cmc
shl
xchg
xchg
inc
mov
jnp
in
sbb
push
dec
jne
call
subl
push
loopne
or
insb
push
ucomiss
aam
imul
fidivrl
mov
add
push
and
cmp
cmpsb
mov
push
in
test
sub
dec
mov
cs
mov
dec
inc
mov
andb
aas
sub
dec
inc
xchg
or
in
mov
and
mov
inc
cmp
cmc
subb
xchg
sub
xchg
push
lahf
mov
push
shll
lret
or
in
cmp
ja
loopne
gs
stos
add
jne
mov
test
ret
jle
cld
in
std
cmp
mov
test
js
aaa
and
das
mov
out
cltd
jp
sbb
cmp
lds
dec
popa
loopne
daa
jge
sti
out
shrb
lods
inc
mov
jno
rol
xor
xchg
push
ret
lea
daa
push
cmp
bound
mov
lret
aad
loop
dec
push
lds
lcall
pop
add
push
dec
inc
or
mov
mov
cmp
ljmp
xchg
in
jmp
inc
xchg
js
into
lret
stc
in
push
add
test
pop
cmpsl
shr
xor
jo
adc
fdivrs
out
das
cmc
lods
andl
les
fidivs
sub
lods
fwait
enter
cmpsl
pop
xchg
rclb
stc
xor
push
xor
dec
shlb
ja
pop
jo
jbe
sbb
roll
mov
dec
fwait
imul
xchg
icebp
pop
cmc
mov
push
mov
movsb
or
dec
inc
cmpl
push
push
cmp
inc
insb
stos
cwtl
inc
daa
imul
pop
dec
subl
mov
cmp
or
jns
push
mov
cmp
mov
pop
les
dec
bound
rclb
mov
mov
dec
jge
mov
insb
mov
lds
mov
call
mull
cld
arpl
xchg
dec
inc
imul
das
xchg
and
inc
lea
lret
fimuls
clc
int
imul
cmc
cmp
mov
push
push
push
or
mov
xorb
in
mov
dec
xor
js
xchg
sbb
insl
bound
fcmovnu
and
push
aaa
jp
and
push
fwait
mov
mov
mov
dec
negl
lcall
leave
xorb
jbe
sbb
mov
ret
mov
adc
pop
call
sub
mov
mov
add
dec
pop
dec
xor
push
add
es
pushf
idivb
icebp
jbe
jne
xchg
hlt
bound
cwtl
cmc
adc
inc
int3
dec
fldenv
xchg
iret
mov
fwait
inc
and
add
adc
or
xchg
adc
mov
shll
pop
inc
add
inc
jl
pop
sub
or
das
gs
add
push
mov
imul
mull
test
js
push
scas
and
adc
mov
test
int
dec
outsl
orb
adc
dec
pop
pop
xchg
stos
xor
out
out
ljmp
xchg
lods
mov
shrl
mov
arpl
jo
cmp
je
push
or
mov
daa
inc
stc
repz
enter
pop
xor
or
mov
jb
sti
mov
pop
mov
inc
addb
insl
or
sbb
xor
in
scas
dec
aaa
and
nop
mov
pop
xchg
int
out
xor
in
mov
rolb
rcrb
xor
andl
add
in
jmp
xor
inc
sub
ss
scas
xchg
shll
mulb
dec
outsl
movsl
mov
mov
iret
mov
pop
pop
adc
xlat
scas
add
pop
jnp
adc
jns
pushf
mov
push
xor
xorb
call
fs
jmp
xchg
in
fcmove
lret
cmp
cltd
mov
pop
mov
jo
cmp
and
mov
mov
enter
cmp
ret
nop
cld
xor
xchg
lds
int3
jg
or
jmp
aaa
mov
xor
lcall
adc
sub
push
jne
scas
jae
inc
mov
popf
inc
imul
mov
lods
pop
imul
and
mov
and
xor
xchg
sub
push
movsb
jge
cwtl
adcb
mov
es
lock
and
loopne
xchg
pop
xor
mov
adc
call
test
test
repz
pop
movsb
aad
outsl
jecxz
dec
xchg
and
int3
int3
lcall
cmp
sub
out
push
dec
pushf
pop
pop
add
lock
test
frstor
or
push
mov
adcb
out
pushf
xchg
dec
or
and
cs
adc
shll
cmp
popa
xor
pop
das
adc
into
push
push
popl
inc
xchg
insb
jp
popf
mov
xlat
fsubl
stc
loopne
addl
rol
inc
mov
popf
lods
cmc
inc
mov
xor
mov
xor
lods
pop
test
and
inc
out
aas
imull
test
push
lods
sti
push
mov
xor
arpl
and
out
stc
fidivl
rclb
aad
push
out
cs
inc
and
inc
dec
mov
icebp
adc
shlb
or
jbe
fwait
xchg
outsl
dec
and
push
push
xor
xchg
mov
xchg
xchg
or
xor
jae
outsb
push
int3
cmpsl
jo
pusha
sub
push
mov
rorl
jle
xor
test
mov
sti
add
and
outsb
repnz
mov
aas
lret
mov
rdtsc
xchg
mov
test
lea
sbb
mov
and
mov
inc
pop
inc
jne
loope
sbb
xchg
addr16
or
mov
xchg
sbb
lret
inc
sbbb
inc
jae
ret
fcomi
jno
cltd
ds
mov
ret
out
out
pushf
push
lret
cmp
xchg
jle
and
cmpsl
rolb
sarb
mov
dec
popa
popf
test
repz
xchg
jne
pop
sub
jb
lea
lods
add
mov
add
xchg
stos
outsl
mov
insb
add
stc
sahf
inc
add
imul
and
cmp
add
ljmp
pop
push
jmp
fnsave
jae
adc
mull
and
out
add
dec
or
cmp
push
loopne
inc
mov
nop
rol
xor
dec
mov
push
shll
fidivl
popf
filds
pop
sbb
xor
dec
stos
dec
mov
mov
shll
or
add
pop
inc
out
add
add
and
inc
test
xchg
push
pushw
sbb
jnp
cmpsl
push
xchg
xchg
pusha
push
dec
add
dec
scas
lahf
test
mov
cmp
or
lcall
mov
setnp
nop
and
sbb
add
pushf
rcl
fldt
sbb
add
xor
addl
mov
sub
mov
inc
test
das
jge
adc
popf
ljmp
hlt
and
sahf
dec
jmp
negb
fs
dec
pop
push
inc
andb
out
inc
clc
cmpl
adc
cltd
jnp
cmpb
aaa
jecxz
testl
repz
cmc
xchg
cmp
int
mov
mov
mov
cmp
test
adc
test
xchg
repz
je
subl
cmp
mov
in
mov
call
fwait
or
sub
sub
cld
cmp
loope
jb
mov
inc
push
sub
inc
add
hlt
push
sub
imul
fisttpll
popa
xchg
fsubrl
cmp
aam
aas
lods
and
mov
rcrb
dec
je
addr16
cmpsb
fdivrp
pop
mov
dec
jns
loopne
in
xchg
cmp
mov
or
jb
popa
add
dec
xor
imul
pop
fiaddl
jns
fwait
scas
frstor
popf
pop
sub
mov
je
lret
shrb
and
pop
fcmovnbe
lds
mov
push
jmp
push
imul
aad
adc
iret
loope
dec
inc
fwait
in
inc
std
nop
xchg
mov
pop
pop
mov
int3
loop
insl
lgs
outsl
jp
pop
and
outsb
sbb
or
or
xchg
pusha
xchg
out
fistpl
xchg
mov
add
push
popa
lock
cmp
fcmovnbe
add
rcr
add
xchg
and
inc
aad
pop
xor
outsl
xchg
lret
mov
mov
dec
xchg
mov
stos
fsin
lret
mov
adc
sbb
or
shll
stc
lcall
in
xchg
sub
push
sub
faddp
cltd
xchg
xchg
sbb
aaa
out
mov
jno
gs
mov
mov
sbb
int3
mov
push
enter
push
mov
xlat
pop
testl
out
push
testb
dec
mov
icebp
xor
add
into
xor
jb
push
cmp
imul
and
or
jae
lar
sti
pop
or
hlt
fistpl
jle
out
sahf
ret
jmp
dec
cmp
inc
pop
or
je
clc
mov
mov
ljmp
insl
cmp
movsb
and
mov
das
sbb
fmull
outsl
or
sub
cmpsl
sub
xchg
pop
cwtl
and
inc
add
dec
ja
es
push
cmp
xchg
sbb
aad
fcmovnu
popf
scas
rorl
int
jg
lcall
push
xchg
sbb
mov
and
mov
mov
adc
cmove
mov
mov
mov
lahf
lock
inc
sub
xchg
negl
fisttps
push
push
sbb
enter
dec
fsub
mov
test
push
dec
or
in
dec
loope
arpl
xorl
and
repz
sub
xchg
movsb
jb
mov
xor
out
cmp
repnz
or
loopne
nop
std
rcr
je
push
dec
addr16
test
inc
pop
sub
fwait
outsb
leave
fistl
jno
push
jns
pop
out
out
stc
iret
fwait
dec
lret
cmpsl
aam
sub
pop
jo
mov
clc
dec
in
cli
mov
cltd
lods
jae,pn
int
ret
mov
das
xor
cmpsb
or
fwait
decl
in
jbe
rcrl
and
decb
or
stc
xchg
inc
fcoml
mov
sbb
pop
push
mov
fildl
pushl
mov
stc
lret
mov
out
mov
adcb
lods
push
ficompl
adc
shrb
scas
inc
and
das
and
lahf
int
mov
xchg
nop
stos
movsl
push
jg
inc
aas
jl
push
test
pop
adc
jb
fistpl
add
das
mov
mov
pop
inc
js
pusha
mov
cwtl
inc
xlat
lcall
mov
popf
gs
inc
nop
icebp
mov
dec
repz
sub
sub
stos
jge
or
test
pop
push
notl
shlb
les
pop
cmc
rcll
pop
jae
or
lcall
dec
mov
cmc
cmpsl
jo
push
or
push
push
push
lods
push
cmp
xor
sbb
popf
enter
in
mov
subl
adc
out
jae
add
inc
aad
rclw
stc
mov
aas
cmpsb
fwait
lods
scas
and
pushf
dec
outsl
and
pop
add
push
insl
and
xor
nop
lock
xchg
push
fcomp
jl
push
pushw
cmc
inc
add
in
sub
aad
jmp
jp
sbb
pop
idivb
jle
and
add
push
jb
jmp
and
aad
adc
jl
sub
popa
push
mov
sbb
and
dec
addr16
int3
lods
stos
cmpsb
stos
pop
mov
push
testl
xchg
dec
icebp
add
dec
mov
ljmp
aad
jnp
aad
pop
cmp
xchg
and
cmc
sbb
dec
int
sbb
dec
out
xor
psllq
xor
add
outsb
out
out
xor
and
roll
xchg
in
jle
ljmp
dec
jae
fwait
aaa
sub
pop
rorb
out
dec
popf
and
jb
jmp
out
pop
dec
lea
icebp
push
out
dec
loop
pop
push
mov
test
xchg
xlat
inc
xchg
jo
loopne
movsl
movsl
or
stos
shlb
repnz
test
adc
stc
push
or
xor
lods
mov
test
add
lret
jae
or
sub
push
cld
mov
fidivs
or
mov
lock
cmc
pusha
mov
sbb
pushf
jge
xorb
xchg
aam
push
mov
dec
sub
je
push
or
mov
dec
in
cmp
mov
fdivl
aaa
scas
xor
lock
sbb
dec
pop
push
sbb
fstpt
or
fdivl
pushf
clc
ret
test
dec
lret
iret
inc
dec
shlb
call
mov
mov
dec
push
pop
jp
jecxz
sti
mov
xchg
and
call
push
cmpsb
sbbl
ret
or
and
mov
push
sbb
inc
pop
push
paddd
cmp
and
cmp
jmp
jl
fucomip
nop
mov
lods
push
and
stc
testl
jno
pop
dec
sub
pop
outsb
addr16
cmp
in
sbb
sub
fld
cli
loope
add
mov
fdivrl
ja
fadd
aas
sbb
jecxz
cmpsb
int
mov
jbe
jge
inc
fwait
or
imul
cmp
dec
mov
repz
ret
iret
jg
sub
xor
rorl
jb
mov
or
call
clc
arpl
fiaddl
sbb
mov
aas
sbbb
popf
outsl
loopne
cmc
fbstp
or
and
xchg
push
push
jp
fmull
adc
add
mov
mov
in
ret
mov
jnp
sbb
dec
movsb
push
out
lret
xlat
lcall
xor
test
scas
inc
jecxz
lock
mov
fs
mov
xchg
or
mov
mov
mov
pop
push
dec
arpl
dec
pop
inc
enter
imulb
or
cmp
sbb
mov
pop
pop
xor
sti
test
lock
aam
mov
aaa
pop
xchg
cmp
inc
mov
mov
xor
fisttpll
dec
cmp
inc
and
into
mov
sahf
jl
cmp
jmp
xchg
mov
dec
andb
mov
xchg
int
lods
ja
add
mov
xlat
imul
dec
adc
cltd
jmp
sub
sbbl
into
jp
movsl
stos
insl
popl
movsb
and
jecxz
cmpsb
push
hlt
cmp
push
gs
jo
jne
stos
inc
push
or
and
pop
in
filds
lret
test
rorl
and
pop
push
cltd
push
out
out
imull
jl
orl
mov
popa
push
inc
jecxz
dec
test
sti
dec
fiadds
push
push
cmp
int
lret
cmp
mov
jmp
lods
dec
mov
out
jl
mov
mov
pushf
mov
or
pop
and
add
int3
fcoms
out
test
or
insl
incl
adc
pop
andl
mov
mov
loop,pn
sbb
dec
add
jnp
xor
jne
mov
fldl2t
repz
push
xchg
cmpsb
lcall
out
sbb
mov
std
aad
out
dec
push
mov
cmc
outsl
sbb
adc
jecxz
repz
int3
int3
mov
repnz
out
adcb
sarb
mov
shll
fwait
loop
sub
cld
movsl
cmp
rcrb
icebp
sub
pusha
jno
les
mov
in
or
jae
cmc
xor
jne
xchg
scas
push
loope
cmp
sbb
aad
mov
repz
mov
push
and
inc
adc
mov
mov
or
xchg
rcrb
scas
fildll
mov
fists
dec
xchg
gs
pop
xor
loopne
add
sub
pop
adc
add
jns
push
andl
testl
dec
jno
lahf
hlt
sub
or
loop
mov
mov
cwtl
lods
add
sub
out
push
aam
and
push
gs
sbb
cmp
pop
cmp
pop
lods
and
leave
bound
pop
and
pop
out
mov
push
sbb
dec
or
fdivs
ret
pop
jae
push
fisttpll
int3
loop
add
and
add
dec
push
pusha
inc
int3
iret
mov
sub
pushf
subl
lcall
jg
incb
push
shlb
scas
inc
fidivs
adc
and
push
das
push
push
push
out
cmpsb
or
xor
jp
inc
sahf
cwtl
leave
mov
cli
xor
sbbl
int3
xchg
fnsave
fldcw
xor
pushf
cli
aaa
outsl
repz
ss
ja
xor
mov
call
fcmovnu
add
leave
mov
aam
ss
xlat
stc
push
inc
inc
pop
aas
and
sbb
xchg
lahf
cwtl
ror
adc
mov
stc
int3
mov
or
sub
hlt
cmp
sbb
push
and
push
or
xchg
sub
arpl
lret
pop
stos
add
or
imul
and
mov
jae
sar
scas
imul
inc
push
ds
popl
sub
sub
pop
xor
jg
dec
xor
scas
rclb
xchg
imul
xchg
cmp
dec
adc
push
repnz
mov
maxps
push
in
cmp
and
fildl
clc
cmc
ljmp
mov
outsl
aaa
jl
out
dec
ds
xchg
jg
inc
dec
or
scas
sbb
pop
jmp
mov
in
pop
pop
rcrl
pop
and
or
fwait
arpl
xor
dec
sbb
xchg
dec
pop
jle
repnz
or
or
pop
aaa
jl
xor
ficoms
inc
addr16
ss
imul
hlt
push
idivb
adc
shr
mov
fcmovb
jge
mov
lds
pop
lods
ret
mov
jne
orl
push
push
jb,pn
mov
adc
add
data16
inc
les
cmpsb
jecxz
in
push
sub
sub
mov
dec
stos
pop
loope
test
test
add
xchg
call
sub
lock
xchg
fcompl
mov
int
std
loopne
push
cld
lds
add
pusha
or
rorb
sbb
add
sahf
test
xchg
xor
loopne
adc
sbb
cld
in
rcr
outsl
jmp
mov
dec
mov
inc
fistpl
insl
rcr
ret
sub
cmpl
pop
jns
insl
pop
mov
sar
or
icebp
cli
test
ja
dec
pop
fs
ret
mov
lret
lcall
cmp
les
mov
mov
js
xor
xor
push
cmp
mov
nop
aas
dec
sbb
addl
cmp
adc
adc
enter
les
test
pusha
xchg
test
mov
ss
sbb
adc
push
pop
xchg
mov
mov
dec
movsb
ja
pop
cmp
mov
ret
addb
xchg
scas
cwtl
fidivrl
or
mov
inc
mov
ljmp
sub
fabs
insl
aad
insb
xor
sarb
and
scas
sbb
ret
xorb
add
les
outsb
aas
lea
push
cltd
mov
loopne
mov
mov
stc
xchg
xor
cmp
xchg
sarl
inc
in
pop
add
dec
jne
in
inc
cli
adc
jg
mov
add
imul
and
inc
sub
xchg
lods
pop
fnstenv
xor
cmp
outsb
ret
addr16
xorb
sbb
cmp
mov
call
pop
ss
add
rcrl
fsubl
sub
sbb
dec
xor
dec
pop
rcrb
clc
pushf
push
pushf
fstp
popf
sbb
fs
mov
push
push
mov
arpl
sahf
es
jns
jg
leave
xchg
sub
xlat
pop
out
popf
mov
shlb
or
shll
pop
cmp
xchg
ror
jnp
scas
ja
daa
popa
cmp
dec
mov
dec
inc
cmp
inc
jns
test
sub
adc
cmc
stos
mov
fwait
hlt
push
dec
mov
sub
cs
outsl
mov
jl
jb
or
and
sbb
in
lea
jp
out
sbb
cltd
cmp
dec
stc
leave
pop
js
psllw
pop
cmp
out
clc
mov
mov
sar
pop
ljmp
inc
lock
pop
cmpsb
mov
push
sbb
sbb
in
inc
mov
repnz
mov
lret
cmc
cmp
shll
push
bound
mov
dec
sbbb
sub
mov
sub
cmp
xchg
out
jnp
sub
icebp
fwait
mov
rcl
sub
aaa
mov
repz
int3
fists
xchg
or
sbb
mov
imul
inc
aam
dec
loopne
fsub
test
adc
and
jp
xchg
out
adc
das
mov
mov
pop
call
out
popf
sub
stc
jp
lds
repnz
neg
mov
push
sti
mov
lods
mov
imul
mov
mov
and
outsb
std
ficoml
mov
test
jmp
hlt
mov
jp
pop
xchg
ret
movsb
pop
xchg
subb
add
lahf
lds
xchg
shrl
das
sub
inc
imul
insb
dec
das
imul
sbb
jns
jae
int3
imull
inc
push
in
ss
insl
fbld
push
xor
je
ds
decb
cli
lods
icebp
cmp
les
push
adc
lods
mov
sub
jmp
mov
imul
mov
ja
fmul
jle
aad
mov
push
add
mov
add
inc
xor
push
pop
adc
inc
and
xor
iret
xor
xorl
fisubrs
cmpsb
popf
aaa
arpl
imul
and
push
xchg
add
cmp
punpckldq
psubw
rdmsr
push
xchg
inc
push
aad
inc
sub
dec
mov
and
add
mov
aaa
mov
or
mov
pop
dec
mov
push
xor
push
jo
in
or
push
pop
inc
pop
fwait
test
and
add
or
inc
es
xor
xlat
aam
fisttpll
insb
mov
das
or
outsb
push
dec
pop
repnz
mov
push
adc
jmp
pop
sbb
popf
loopne
mov
aaa
and
dec
and
out
sbb
lret
negl
dec
add
jecxz
mov
lock
xchg
xor
iret
jp
dec
dec
scas
stos
mov
data16
mov
xchg
sub
adc
push
mov
mov
test
aas
dec
not
pop
pop
lods
int3
subl
je
xor
or
mov
test
adc
adc
pop
inc
les
mov
mov
or
adc
or
scas
ss
push
bound
adc
adc
cld
fwait
dec
sub
xchg
lret
repz
inc
push
ret
mov
rclb
lcall
lcall
mov
xor
jmp
shrl
lods
fnstcw
mov
aas
fstpl
xchg
mov
push
fcompl
fstpt
jle
jmp
pop
jo
call
and
dec
dec
xchg
mov
xchg
std
sub
iret
xchg
jecxz
jl
and
mov
sbb
pop
hlt
pop
cmp
inc
cmp
ret
nop
mov
xor
xor
repz
xor
or
sbbl
add
notl
push
dec
test
loope
aas
bound
fcomi
popa
call
cmp
clc
push
jnp
or
add
jge
mov
decl
adc
shl
push
lods
dec
pop
and
adc
adcb
in
cmpxchg
mov
stos
cmpsb
int3
inc
es
xor
push
xchg
outsb
cmp
fwait
les
dec
pop
aaa
push
cmp
sbb
ljmp
cmpsb
xor
lods
mov
outsl
andl
rclb
subl
mov
pop
xchg
aam
push
push
sar
jge
and
push
imul
push
sub
iret
loop
dec
imul
cmpsb
popf
adc
dec
cs
adc
push
notb
shrl
jmp
mov
fwait
jle
shlb
adc
mov
addl
pop
jl
mov
cmp
mov
popf
mov
pop
fs
iret
push
sub
mov
pop
pop
mov
in
and
cmpsb
mov
sbb
imul
insl
inc
int
fadds
mov
clc
subl
jmp
sbb
mov
into
es
lret
and
in
aad
gs
fdivrs
push
sub
lret
jmp
pusha
scas
pop
mov
inc
xor
xchg
js
push
mov
sub
cmc
sbb
es
push
adcl
adc
cmp
test
add
loop
scas
arpl
fldl
pop
pop
pop
sub
push
es
and
pop
sub
push
jb
add
inc
push
aas
push
ds
adc
xor
inc
inc
ret
cld
ss
lds
jno
push
cmp
fscale
mov
inc
jle
je
pop
mov
sub
mov
aaa
inc
adc
adcl
and
stos
ds
push
or
in
lret
cmp
xchg
xchg
jbe
pop
test
fxtract
inc
idivl
cmp
mov
test
sub
mov
outsl
dec
push
movsb
cmp
jl
int3
out
cmp
loope
or
mov
fdivs
push
test
add
push
pushf
adc
inc
sub
insw
jg
fistpl
sub
mov
xchg
sbb
in
xor
shlb
sbb
push
lcall
in
xor
push
fcmovu
pop
pop
cmp
pusha
fsubl
or
add
xor
in
push
sub
loope
xchg
push
stc
or
lret
stc
push
mov
sbb
popf
cmp
cmp
pop
jmp
sub
cmp
imull
lret
jnp
pop
test
out
jne
sahf
mov
push
leave
add
int
mov
mov
js
bound
sub
add
fmuls
pushf
push
inc
push
inc
jecxz
imul
sub
mov
in
nop
inc
mov
jns
dec
popf
fiadds
sbbl
add
mov
and
xorb
add
mov
dec
inc
jb
movsb
pushf
sbb
add
lret
test
xor
xchg
xor
jne
mov
and
cmpsl
xor
mov
jg
ljmp
fdivr
jecxz
leave
push
mov
nop
push
mov
fmul
sbb
cs
fidivl
mov
iret
adc
out
out
notb
sub
xor
xchg
xor
xchg
mov
push
push
mov
add
mov
inc
addr16
stos
mov
inc
out
popf
xor
pop
xlat
incb
pop
mov
mov
push
test
sbb
push
push
fiadds
jl
sti
in
xlat
jno
orl
hlt
or
sbb
jb
adc
xor
int
ret
xor
lret
filds
cmpsb
inc
out
enter
mov
push
and
lea
sbb
sti
iret
leave
pop
or
jbe
xchg
movb
std
das
dec
xor
aam
enter
in
cli
adc
ja
xchg
sbb
insb
jno
loopne
add
mov
loope
jmp
bound
loopne
fisttpl
push
dec
and
hlt
push
inc
add
add
sub
jmp
and
cwtl
rcl
test
pusha
shll
push
rclb
sti
in
mov
mov
mov
sub
jmp
push
pushf
adc
daa
xchg
clc
movq
dec
sub
aas
mov
roll
xor
sub
into
test
insl
dec
pop
sbb
dec
jb
inc
push
xchg
inc
adc
sahf
cmp
dec
lcall
ss
dec
cwtl
out
and
mov
xlat
inc
pop
adc
dec
popa
shrb
loop
mov
xchg
pop
mov
dec
lods
or
dec
jne
push
in
shrb
lret
out
subb
or
adc
mov
dec
std
gs
inc
mov
mov
mov
in
hlt
imul
adcb
sarl
pop
lods
popa
jb
pop
fimull
pusha
xor
xor
test
loope
jmp
out
mov
jo
testl
sub
in
sbb
mov
es
ret
xor
sub
mov
pop
xchg
fildl
and
pushf
pop
pop
xor
dec
shrb
aaa
outsb
mov
adc
add
clc
test
xor
mov
dec
add
sbb
imul
xchg
inc
repnz
or
adc
les
mov
xchg
jb
mov
mov
lret
sub
xor
je
out
insl
mov
aam
mov
loop
cmp
popf
fcmovu
nop
mov
das
sub
enter
ds
les
jmp
loopne
xchg
dec
arpl
arpl
push
mov
jge
jno
dec
xchg
sbb
xor
in
push
inc
dec
mov
nop
divb
push
add
scas
and
xor
xchg
push
inc
bound
or
clc
cmp
fisttpl
push
jg
push
sub
faddl
lods
cli
arpl
xchg
call
xchg
mov
sub
iret
into
add
mov
ret
in
dec
mov
or
dec
pop
inc
jae
add
outsb
mov
leave
xor
add
enter
loopne
lret
sub
in
dec
dec
scas
jecxz
subb
cmp
clc
cmp
inc
cli
cli
movsb
jmp
insb
mov
inc
fstpl
aam
push
out
cmp
jne
cmp
sbb
dec
cmpsl
fcmovne
xchg
jg
sub
adc
adc
test
in
sbb
shll
adc
or
and
fwait
lea
lock
sbb
mov
mov
imul
mov
enter
sbb
push
cmp
jl,pn
inc
sahf
test
popf
mov
jecxz
insb
repnz
xchg
std
xchg
add
or
pop
dec
xor
xlat
push
orb
imul
movsl
les
mov
push
dec
mov
lret
imul
je
out
add
inc
stos
shl
dec
test
divb
mov
xchg
mov
sbbb
add
xor
sub
push
daa
popa
and
ss
pop
dec
js
mov
fnstcw
popf
iret
inc
xor
mov
mov
sub
es
xor
xor
push
lahf
xchg
cltd
pop
fnstcw
xor
in
add
aad
push
dec
mov
test
mov
fadds
xor
in
cli
hlt
shlb
mov
cltd
pop
sti
jle
test
cld
pushf
insl
pusha
mov
bound
loop
stc
mov
and
cmpsl
scas
cmp
fadd
mov
xchg
dec
or
insb
cmpsb
mov
lcall
jns
enter
scas
in
mov
adc
sbb
xchg
sarl
mov
mov
xchg
push
es
lret
cmp
hlt
mov
mov
rclb
inc
mov
adc
adc
movsb
outsb
mov
push
xchg
dec
inc
xor
and
jmp
pop
leave
aaa
pop
stc
adc
arpl
fcomps
into
inc
mov
and
adc
data16
imul
in
and
out
int
mov
mov
lret
and
pop
rorb
pop
pop
add
and
dec
inc
add
loope
cmp
xchg
out
jo
cmp
sbb
sub
add
mov
pusha
pushf
pop
push
outsb
jne
imul
ds
inc
popf
imul
sar
jbe
xchg
pop
sub
es
test
cmp
push
push
jbe
or
cmc
or
xor
mov
jl
xor
inc
scas
xor
or
gs
push
cld
mov
jecxz
sbb
arpl
in
out
mov
js
pushf
das
daa
xor
lock
mov
sbb
scas
hlt
popa
cwtl
inc
pop
in
lock
sub
jns
hlt
in
popl
call
adc
xchg
leave
mov
sbb
jecxz
ljmp
pop
shll
imul
xor
push
and
int
ljmp
adc
cmp
adc
sbb
push
and
ja
sbb
mov
pop
and
leave
imul
fs
addb
xchg
dec
or
sbb
jl
fildl
and
push
out
xor
fimull
dec
lcall
adc
je
ljmp
int
rcrb
or
inc
dec
jae
clc
int
cmp
das
repnz
cmp
xchg
loopne
and
and
push
mov
test
ds
test
cmp
loope
fdivp
lcall
shll
cmp
pop
bnd
repnz
mov
loop
test
dec
out
adc
pop
xlat
cwtl
add
arpl
call
pop
imul
xchg
lahf
adc
pop
mov
in
test
or
in
lods
xchg
mov
hlt
mov
pop
jno
dec
stos
sbb
stos
pop
lret
xchg
outsw
arpl
lds
mov
pusha
lret
js
push
cli
xor
cld
and
and
xorl
mov
stos
sbbb
aaa
adc
add
jne
not
dec
int
xor
dec
into
imul
add
xchg
push
pusha
ds
fstpt
js
xchg
push
fneni(8087
xor
loope
adcl
dec
inc
les
push
xchg
outsb
pop
adc
fcmove
inc
daa
push
xor
sub
xchg
pushf
test
or
shrb
and
cmp
scas
idivl
gs
movsb
inc
sub
out
in
jge
or
add
jge
cli
adc
mov
scas
jmp
je
pop
adc
orl
or
jl
shrb
mov
push
xchg
xchg
into
jb
popa
lcall
xor
adc
mov
lahf
stos
mov
lea
add
jle
xor
clc
aam
push
cmc
call
rol
ret
lds
mov
jg
xor
outsb
or
push
cmp
mov
ljmp
fidivs
aam
scas
mov
cmovge
psubq
repnz
adc
xlat
arpl
cmp
mov
lea
shrl
aad
mov
insb
adc
and
ljmp
push
jb
jge
lods
xor
ret
sbb
insb
xchg
lock
add
lock
adc
pop
and
incl
xchg
adc
cmpsl
mov
out
push
jp
cwtl
add
add
nop
dec
jb
xor
sahf
mov
sbb
push
xor
test
cmp
mov
cwtl
pop
inc
dec
je
cmpsl
adc
scas
js
aad
pop
icebp
and
aam
imul
xchg
stos
test
push
mov
lock
stos
push
addr16
cmpsl
shr
or
in
mov
dec
xchg
in
mov
add
in
push
inc
loopne
lock
data16
push
sahf
leave
mov
and
ja
enter
shl
pop
lcall
inc
sub
lds
in
push
aas
fstl
loope
sub
sbb
fmull
cmpl
pushf
pop
adc
pushl
shlb
test
into
ja
sti
ret
mov
cltd
add
sbb
add
mov
sbb
or
fidivrl
lahf
out
adc
add
pop
dec
xlat
pop
sub
pusha
jg
inc
ficomps
cmp
popf
xor
stc
lwpval
pop
incb
xchg
inc
in
mov
dec
divb
dec
xor
imul
sbb
daa
jle
xor
ds
cltd
mov
sub
shrl
insl
adc
pop
addr16
or
cmp
in
imul
dec
sbb
enter
mov
iret
jbe
dec
cmc
xor
addr16
popa
clc
test
mov
cmp
enter
xchg
scas
imul
sarb
inc
jbe
mov
mov
lret
fs
xchg
fwait
cmp
mov
inc
jle
dec
jns
push
mov
lock
push
hlt
imul
adc
sub
pop
sbb
mov
mov
dec
or
dec
pop
pop
xorb
lret
stos
adc
fwait
push
mov
cs
inc
jno
movsl
sub
jbe
aas
int
ja
adc
sbb
adc
out
adc
dec
test
xor
mov
jns
or
adc
push
rclb
fsubrl
pop
pusha
jge
cmp
jne
push
nop
lods
int
mov
lahf
jle
into
fistps
sub
push
sbb
and
push
xchg
sub
or
repz
fsubs
inc
outsb
sahf
push
fidivrl
cmp
jns
incb
push
pop
jle
lods
leave
mov
cmpsb
mov
and
stos
fnstsw
mov
inc
dec
mov
add
mov
cmp
popf
xor
rclb
jns
lea
pushf
insb
aad
cmp
mov
mov
mov
and
jne
push
imul
pushf
sarl
mov
mov
adc
xchg
inc
ja
mov
stos
bound
inc
js
dec
mov
inc
js
push
jecxz
jnp
bnd
cwtl
movsl
je
mov
fwait
mov
nop
jns
xchg
and
cmp
and
pop
jbe
add
pop
push
xchg
cli
icebp
adc
adc
ret
out
push
push
mov
dec
sbbl
jmp
jp
lea
hlt
push
pop
xor
or
ret
fdivs
ds
pop
inc
test
push
repnz
rcrb
in
fidivrl
mov
add
movsl
mov
mov
movsl
clc
cmp
mov
cwtl
jno
test
jne
mov
div
daa
mov
dec
mov
insl
inc
inc
std
push
in
sbb
cmp
clc
dec
and
pushf
jns
test
cmp
fisttpl
lock
add
sub
or
lods
cmpsb
scas
mov
jb
mov
sub
sbb
sbb
inc
sbb
test
sub
inc
jmp
fcmovne
pusha
lcall
cld
pop
adc
scas
jge
mov
out
lea
movsb
clc
test
mov
mov
fstpt
push
pop
inc
xchg
lds
sub
ds
push
mov
add
mov
popf
push
jmp
lods
xlat
add
lds
rcrl
mov
or
lret
and
dec
loopne
cmp
test
mov
mov
aas
enter
inc
inc
sbb
mov
cmp
dec
and
adc
and
cli
repz
mov
push
insb
mov
inc
rorb
and
sbb
rcll
mov
dec
mov
mov
sub
insl
or
inc
xchg
jl
mov
clc
mov
fsubrs
inc
sub
inc
in
mov
repz
lock
xchg
lret
in
roll
imul
fwait
add
jl
scas
std
lods
js
xor
cmp
jo
adc
les
ficoml
mov
fimull
stc
push
mull
movsl
test
adc
push
xor
and
enter
cmc
outsb
jo
sbb
ds
add
inc
int
inc
jp
in
dec
cwtl
pop
ss
fisubrl
xor
cmpsl
xlat
cmp
repz
sahf
pusha
movsl
adc
lret
xor
loop
bound
mov
cld
cli
fists
cwtl
cmc
pop
out
mov
iret
sbb
adc
mov
dec
xchg
adc
sub
scas
fmuls
push
inc
outsl
dec
cwtl
or
imul
pusha
aaa
xchg
sbb
inc
aaa
int3
loope
pop
sbb
lahf
pop
clc
lret
sub
jns
jo
test
std
push
test
lods
cli
xchg
js
test
push
mov
jmp
or
negb
lea
push
or
mov
add
sub
push
cli
pop
popf
push
adc
shrl
je
jp
sti
jecxz
mov
pop
scas
sub
add
mov
iret
push
cmp
in
inc
push
push
adc
jo
test
mov
xor
sbb
fdivs
outsl
xor
call
mov
out
test
cmc
sub
fwait
xchg
rorb
adc
xchg
xchg
mov
loop
lock
dec
pop
jno
ja
jl
xor
adcb
sub
insl
mov
aam
lret
enter
call
inc
or
repnz
aad
jno
in
call
dec
dec
add
cmpsl
mov
nop
jo
jo
mov
jne
inc
lock
or
cmp
cmp
lods
mov
ficompl
ret
lock
fdivr
dec
lahf
mov
inc
mov
jnp
push
adc
ret
inc
jecxz
ss
mov
popf
in
and
xchg
inc
push
mov
cmc
test
push
mov
insl
add
adc
stos
adc
and
pop
pop
jo
mov
xor
dec
test
fisttpll
bound
jge
jecxz
pop
adc
pop
jbe
mov
adc
adc
or
xor
std
popa
mov
mov
idiv
mov
xor
test
and
ljmp
aad
mov
repnz
pop
aad
cmpsl
mov
inc
push
pop
ds
add
or
xchg
enter
mov
xlat
mov
popf
repz
insb
fdivs
sbb
xor
mov
jl
pop
xchg
mov
xor
dec
clc
lock
fsubl
fisubs
push
loopne
mov
jp,pn
push
in
xchg
and
inc
sti
push
and
inc
imul
sbb
cltd
jg
pop
sub
pop
cs
and
adc
dec
push
mov
jge
pusha
xlat
lea
add
dec
not
scas
jbe
adcl
loope
mov
mov
inc
and
mov
jecxz
bound
int3
inc
in
push
cmpsb
out
push
sbb
insb
std
aaa
add
xchg
adc
sub
inc
sbb
jno
pop
insb
jmp
cli
sbb
and
notb
pop
mov
pop
out
gs
mov
inc
mov
or
jl
pop
stc
shlb
mov
dec
in
pop
lret
test
cmc
das
aas
cwtl
test
sti
fcmovu
jmp
repnz
sahf
inc
insb
xchg
popa
dec
incl
jge
xor
pop
gs
daa
call
out
adc
xchg
daa
mov
sbb
ret
adc
dec
rcr
aam
adc
cltd
test
cmp
fdiv
xchg
sbb
mov
jecxz
dec
and
and
ret
pop
popf
call
ret
xor
sbb
push
mov
inc
pop
es
mov
pop
jge
movsb
xor
xor
xor
xor
mov
xor
popl
lret
in
lods
inc
lds
out
repnz
push
pop
add
push
idivl
jae
insl
sub
add
cmp
push
cmpsl
cmp
pop
test
add
movsb
dec
and
add
ds
dec
inc
xchg
cs
pop
aaa
lret
or
mov
push
test
or
mov
pop
aaa
fnsave
hlt
popa
sbb
push
lahf
shrb
pop
ret
mov
imul
ret
push
xchg
add
adc
add
mov
pop
xchg
mov
pop
push
adc
or
mov
pop
pop
and
ret
out
inc
sahf
push
cmpsb
jne
xchg
es
imul
fdivrs
jno
insb
or
xchg
call
mov
mov
enter
cmp
gs
loope
outsb
out
mov
daa
add
popa
jne
imul
jecxz
out
jbe
jno
call
aaa
in
cmp
jg
ds
sub
aad
and
cmp
je
into
loop
mov
ffreep
movsl
movsl
add
inc
and
push
xor
nop
gs
into
jo
mov
rcl
out
and
inc
xchg
cmp
lahf
mov
cmp
mov
sbb
and
out
mov
mov
add
mov
fldenv
gs
pop
jns
pop
js
cmp
jne
mov
sub
loopne
sbb
out
repz
cmc
xor
add
and
loop
test
pusha
loopne
xchg
push
dec
daa
dec
ror
mov
rorb
pusha
push
test
xchg
shlb
lea
sbb
fs
sarl
inc
jae
fnstsw
and
mov
cmp
addl
pop
dec
dec
sub
jo
jle
popf
xchg
aad
pop
aaa
jecxz
leave
inc
sub
shll
sub
insl
ret
mov
adc
sahf
in
insl
sub
insb
bnd
mov
ljmp
movsb
std
fdivr
in
gs
out
test
pop
lods
sbb
xor
inc
push
je
pop
xor
sbb
push
cmp
cmpb
int
push
push
pushf
push
add
xor
xchg
pop
daa
popa
mov
xchg
rol
int
xor
or
xchg
ss
mov
out
mov
or
sahf
sbb
cmc
test
xlat
cld
xchg
jae
mov
push
jp
ds
enter
and
jmp
push
aam
movsb
in
cmp
test
repz
sti
imull
and
in
dec
fnstsw
jmp
push
mov
fmuls
xor
sub
dec
jno
es
dec
out
sbb
push
clc
test
daa
or
repnz
imul
test
jnp
xchg
shll
push
ss
inc
pop
mov
lret
and
in
adc
nop
js
mov
xor
push
bound
cltd
push
cs
es
lock
adc
jmp
sbb
push
out
leave
jmp
xor
mov
mov
inc
pop
ja
into
pop
sbb
cwtl
or
jns
aaa
lcall
sub
lret
mov
aad
popa
xchg
jecxz
daa
xchg
push
das
jp
leave
sbb
push
xor
inc
cmc
fs
xor
iret
mov
cltd
mov
cmp
dec
sub
cmp
sti
mov
mov
ffreep
sbb
cmc
or
ret
push
inc
and
ja
fsts
xor
cltd
loope
jge
inc
es
aaa
addr16
sub
inc
and
push
movsb
std
add
ljmp
inc
pop
lcall
push
cmp
movsl
imul
and
scas
dec
mov
cmp
das
cs
sbb
jge
lahf
mov
xchg
stos
ficoml
das
hlt
adcb
pop
push
adc
and
imul
aad
out
hlt
cld
mov
inc
cmp
rorl
jmp
push
notl
xor
stos
enter
imul
xchg
jb
pop
aad
lahf
notb
in
out
push
popa
pop
xor
daa
dec
stos
mov
je
cmp
xchg
test
stos
adc
mov
sub
mov
mov
inc
dec
enter
or
inc
inc
add
or
pushf
aaa
mov
add
ret
in
shr
push
pop
mov
and
iret
adc
adcb
mov
notl
dec
pop
mov
sbbl
sub
bound
xor
repnz
flds
add
inc
mov
push
add
and
cmp
stos
movsb
lret
outsb
sub
xor
fidivrl
mov
test
popl
pop
mov
aas
lret
xchg
inc
mov
pop
loope
rorb
mov
jle
insb
push
jbe
and
test
and
scas
daa
mov
pop
jbe
addr16
xchg
lcall
aaa
sub
and
pop
addr16
sbb
es
xchg
jp
adc
dec
les
cwtl
push
es
js
mov
adc
cmp
hlt
dec
cmc
mov
mov
addr16
sub
fs
or
insl
and
movb
cmp
xchg
mov
mov
jecxz
in
push
sub
adc
mov
pop
add
sbb
add
shr
std
lret
jmp
clc
pop
mov
arpl
dec
rorb
cmp
add
loopne
push
shlb
add
jp
mov
push
sarl
pushf
pop
xor
cmp
cs
es
into
xchg
fsubrl
sub
rorb
mov
xchg
xor
or
cmp
push
jge
xlat
xchg
mov
insl
icebp
cwtl
adc
fidivl
out
mov
cs
cmp
xchg
pop
sahf
push
pop
int
or
pushl
aam
loop
pop
rcll
add
push
push
scas
or
subb
inc
clc
xchg
sti
xchg
test
scas
push
dec
dec
pop
subb
int
repz
jbe
pop
leave
inc
xor
mov
sbb
fisubl
pop
test
nop
add
lods
or
mov
mov
and
or
repz
dec
mov
lret
cltd
pop
mov
mull
sbb
sub
lds
test
inc
mov
ret
pop
jae
cltd
cmpsl
call
sbb
decb
jae
aam
rol
mov
rcrl
mov
mov
mov
bound
dec
and
mov
mov
jnp
adc
je
xlat
sbb
sub
daa
xor
repnz
ljmp
inc
xor
dec
push
dec
dec
in
mov
or
jno
xchg
js
push
ljmp
xchg
nop
dec
pop
xlat
aas
lea
stos
cmpsl
cmp
std
icebp
nop
jle
test
inc
into
pop
stos
fmul
cmp
bound
adc
pop
in
ret
mov
lret
lcall
adc
shl
pop
or
mov
testl
jb
add
mov
dec
icebp
dec
sub
inc
popl
xor
cmc
stos
inc
in
mov
add
insl
pop
cmp
test
cmp
repnz
loop
addl
pop
and
mov
imul
jle
aaa
push
dec
lock
mov
lea
je
and
push
jecxz
aad
movsl
addb
dec
push
lahf
cmp
mul
out
push
sbb
cmpsl
arpl
dec
cmp
or
scas
es
push
pusha
inc
push
push
adc
lret
sbb
lea
xor
pop
xchg
es
xchg
push
adc
sbb
movsb
adc
xor
and
ret
aaa
mov
cmc
repnz
stc
popf
dec
lods
pop
jne
jbe
mov
orl
mov
daa
xchg
xchg
mov
out
adc
ljmp
add
pop
or
adc
jo
popa
and
pop
sti
jbe
add
jno
xlat
inc
in
push
mov
fsubrl
int
adc
std
aaa
pop
into
pop
cmp
divb
push
xchg
mov
dec
mov
inc
cli
and
lahf
xchg
insl
rorb
repz
and
adc
xor
fwait
out
adc
jb
push
sub
test
stos
daa
inc
data16
add
outsl
cltd
sub
jno
mov
mov
xchg
sbb
xchg
scas
xchg
mov
xchg
loope
cmp
fdivrl
cmpsb
push
fld
out
xchg
imul
sub
xchg
sub
lret
ss
jge
data16
loop
xor
aas
xor
adc
inc
ja
shrb
loope
add
std
and
aam
or
addr16
mov
pusha
push
jno
jmp
in
fldcw
pop
dec
dec
es
mov
or
jmp
or
ror
lea
push
aas
xor
cmp
lds
test
in
xor
lcall
std
jmp
fsubrs
sbb
dec
shl
push
lcall
and
clc
and
std
sbb
adc
adc
orb
jg
and
xchg
cmp
jb
cmp
lcall
lea
sarb
loope
push
shlb
out
sbb
jmp
mov
xor
and
mov
rclb
mulb
adc
lea
clc
jp
and
lret
scas
pop
mull
sbb
pop
xchg
std
aad
das
jnp
rcrb
adc
sahf
popf
jp
aaa
push
inc
repnz
push
int3
pusha
adc
xor
mov
xchg
pop
sub
push
idivb
adc
pop
cmpsl
or
nop
mov
pop
mov
aad
clc
jno
fisubrs
cmp
dec
adc
shr
inc
jg
lahf
test
xchg
lcall
adc
inc
dec
stos
test
jae
mov
rorl
mov
push
xchg
iret
cmpsl
test
mov
adc
xor
out
ja
push
rcrl
data16
jl
es
or
jge
int
adc
inc
out
pop
inc
aaa
push
sub
in
out
imul
into
jle
add
xchg
and
xchg
insl
gs
lahf
dec
inc
fldpi
push
push
inc
gs
or
in
dec
cmp
aaa
aaa
clc
add
fstpt
movsl
xchg
in
dec
pop
test
scas
repnz
or
mov
sbb
or
sub
test
mov
xlat
cmp
leave
movsl
sbb
sub
mov
jbe
and
sbb
push
sarl
jae
rcll
cmp
mov
push
inc
push
push
jge
pop
dec
inc
jp
sub
push
sub
inc
call
cmp
loopne
popa
inc
pop
xchg
or
adc
pop
cmp
outsl
push
mov
jge
ljmp
or
lret
addr16
push
fwait
stos
adc
popa
int3
add
add
mov
movsb
push
dec
push
jecxz
jecxz
enter
cmpb
fidivrl
cmp
adc
dec
mov
inc
aam
cmpsl
dec
mov
fstps
push
pushf
cmp
and
cmc
test
jnp
ret
xchg
movsb
insb
jnp
mov
xlat
aaa
xchg
pop
cmp
lds
stos
mov
pop
lcall
outsl
sahf
inc
pop
xor
imul
add
fists
add
jmp
or
testl
in
jbe
mov
cmp
and
test
cmp
push
xor
pop
or
jg
aad
imul
sub
sbb
xchg
push
inc
das
mov
mov
jns
mov
sbb
clc
out
fisubrs
push
loope
testl
dec
lret
mov
or
jno
cmp
xchg
test
mov
cmc
and
xor
mov
movsb
icebp
sub
push
bound
mov
imul
nop
js
data16
cwtl
push
sbb
int3
sahf
adcl
jp
push
xchg
push
and
push
out
dec
movsl
mov
jo
in
rorl
pop
shlb
push
lea
les
lods
cwtl
mov
aaa
jae
cwtl
pop
repz
inc
xor
enter
fnsave
ja
addb
or
mov
pop
add
gs
shll
mov
movsb
jne
push
popa
int
dec
movsb
or
cwtl
fisubrl
mov
xlat
out
fimuls
loope
dec
xchg
cmp
neg
sbb
sbb
mov
leave
stc
mov
test
icebp
dec
jb
pop
ret
leave
or
in
cmp
mov
mov
jns
fwait
jp
mov
shr
ss
ja
add
cmpsl
hlt
sub
pusha
out
mov
mov
xchg
sbb
rorb
aaa
arpl
lea
sub
sub
les
pop
jnp
lods
jmp
inc
sub
mov
dec
pushf
adc
adc
je
sub
repz
push
pusha
inc
cli
xor
dec
rolb
lret
scas
inc
add
mov
jle
cmpsb
xor
shlb
cld
or
jb
and
lea
pop
leave
int3
add
pop
push
stos
xor
lcall
add
aas
andl
fcomps
addl
dec
or
or
out
outsl
leavew
fisttpl
call
jo
out
sbb
jmp
loope
pop
or
jbe
mov
or
pop
movsb
mov
sti
in
fnstenv
enter
test
and
stos
int3
push
imul
cmpsl
jge
adc
outsb
adc
fdivrl
out
mov
xchg
addr16
xor
in
inc
int3
cli
mov
xor
stc
xor
mov
stos
ja
push
sbb
lods
push
adc
sub
inc
andb
lcall
push
pop
sbbb
mov
imulb
sub
shlb
ret
mov
dec
orl
jo
adc
rcrl
into
mov
xchg
inc
push
lahf
mov
scas
pop
pop
cli
popa
dec
push
int3
cli
arpl
push
and
das
fcmovnb
dec
or
pop
dec
push
jno
ds
stc
jo
test
andl
jno
std
test
cmp
cli
sbb
lea
push
pop
pop
in
lcall
mov
mov
dec
inc
pop
dec
cmp
or
mov
in
ret
push
jno
aam
cmp
aas
vpshaw
loopne
stos
pop
xchg
mov
and
add
pop
and
in
in
aad
pop
std
jnp
lods
mov
add
fcmovu
int
imulb
add
sti
mov
decl
mov
mov
iret
sbb
shlb
imul
push
fidivs
add
xchg
stos
lahf
pop
cmp
sub
imul
adc
and
jns
sarl
pushf
cmpsb
push
pusha
and
pop
call
lods
ljmp
pop
lds
xchg
or
in
adc
cs
jbe
pop
pop
jb
or
cmp
ss
lods
sahf
sbb
out
les
fimull
xor
repnz
lods
into
test
inc
xchg
in
mov
sbbl
ss
lret
loopne
ucomiss
pop
lock
and
and
cld
inc
add
mov
imul
fisubrs
push
scas
pop
setnp
mov
xor
pushl
mov
xor
dec
outsb
testb
cltd
dec
xor
int3
add
dec
push
clc
xchg
lret
cli
add
les
ljmp
push
xchg
into
sub
shlb
shrl
inc
sahf
add
push
inc
test
adc
push
jae
cmp
jo
add
nop
int
loopne
pop
ja
mov
outsb
adc
add
cmp
push
arpl
enter
mov
mov
imul
adc
push
sub
lahf
daa
adc
dec
mov
aam
mov
movsl
sub
xchg
out
icebp
scas
and
popa
aam
cmp
outsl
push
pop
repnz
ljmp
fildll
and
push
sub
pop
cld
outsl
xchg
mov
push
cmovno
mov
rcll
sbb
lret
decl
cwtl
add
insb
inc
loop
and
aaa
out
arpl
jb
sub
daa
mov
fisubl
or
mov
push
scas
and
rolb
sbb
fists
test
cmc
jl
nop
xor
sbb
push
push
push
cld
xlat
dec
movsl
sub
mov
and
scas
incl
lret
int3
cmp
sub
cmp
or
mov
lahf
add
push
mov
dec
mov
add
test
fmul
jmp
dec
and
clc
push
enter
and
mov
cli
xchg
jle
in
lods
jp
inc
push
xchg
cmp
outsl
loope
loop
jecxz
pop
in
dec
mov
daa
fcomp
inc
mov
out
ljmp
test
addr16
add
movsl
shr
pop
mov
cmp
dec
test
mov
sti
or
jne
push
cmp
or
iret
rcll
inc
cmp
test
mov
sbb
popf
fbstp
imul
push
movsl
clc
pop
out
xchg
mov
add
mov
add
pop
sbb
push
shl
mov
stos
in
movsb
dec
test
pop
dec
cmpsl
push
or
pop
and
shrl
arpl
and
shrb
in
pop
xchg
in
into
popf
test
loopne
andb
xor
fwait
arpl
popa
insl
push
push
xor
pushf
leave
out
inc
add
add
shrb
pop
push
or
and
sub
lds
mov
leave
xor
insl
daa
loope
enter
scas
push
repz
jno
cmp
mov
popa
insl
arpl
lds
enter
test
mov
xor
clc
xor
aas
xlat
adc
mov
out
insb
push
insb
jge
stos
cwtl
xor
adc
js
dec
mull
mov
mov
enter
test
sahf
mov
push
shl
lods
mov
xchg
cmp
cmpsb
addl
push
push
inc
mov
adcb
push
insb
or
outsb
push
pop
cmp
ret
test
test
inc
andl
fbstp
mov
ljmp
push
push
mov
gs
rcrb
hlt
xchg
sbb
sar
pop
lock
stos
sbb
aam
aas
shrl
add
sub
cli
scas
mov
jp
ficoml
jne
adc
sub
nop
inc
ja
rcr
sub
ljmp
aad
add
cltd
addb
lahf
lea
jg
cmp
int3
sbb
jge
mov
inc
jecxz
inc
movsl
loopne
add
mov
push
pop
daa
cmp
stc
xchg
or
cmp
lret
xchg
mov
mov
push
sbb
pop
sub
ret
mov
lock
andl
mov
lahf
je
pop
imul
orl
pop
js
mov
or
mov
pop
sarl
in
mov
jge
lods
repnz
sub
xor
and
ret
hlt
ljmp
pusha
sbb
xchg
out
inc
push
popf
sbb
mov
add
pop
push
jmp
in
pop
repz
mov
xchg
mov
popf
repnz
ss
mov
inc
sub
lods
ss
aaa
mov
test
xchg
pop
push
cmp
xchg
out
out
push
push
jp
gs
shll
sbb
cmc
jbe
in
aad
dec
call
stos
jg
xchg
imul
add
pushf
aaa
imul
or
or
pop
inc
and
pushf
mov
test
adc
cmc
js
xor
les
pop
lods
int
enter
jmp
sbb
add
inc
cltd
mov
cmpsb
pop
fstpt
shrl
and
xchg
fcmovbe
pop
inc
and
inc
std
and
add
mov
xlat
or
rcrb
imul
cmp
push
jp
jl
cmp
movsb
jo
or
cmp
sbb
repnz
test
or
push
sub
xchg
and
add
mov
xchg
jno
sbb
dec
mov
jbe
jecxz
mov
and
pop
dec
mov
subl
ja
je
jae
shl
mov
std
aad
ss
adc
adc
mov
movsb
sub
pop
sbb
cmp
sub
cld
add
insb
push
out
insl
popa
scas
or
pop
test
imulb
cli
notl
out
mov
sbb
in
jo
and
pop
cmpsl
scas
mov
pop
jne
add
lret
push
clc
push
dec
andb
das
and
inc
and
imul
outsl
dec
int
jg
adc
cmp
stos
jmp
mov
orb
les
push
fcmovnu
cmp
jb
sbb
fdivr
cmp
mov
push
sub
dec
pop
pop
mov
lods
jg
mov
loope
adc
aad
mov
cltd
cmc
push
jae
imul
lods
insb
add
fdivrl
and
sub
cmp
mov
cli
shll
imul
cmp
jns
cmp
push
inc
out
repz
fdivrl
adc
dec
adc
cmp
mov
gs
hlt
popf
icebp
jg
pop
cmp
push
cli
ror
stos
insb
push
popf
push
mov
cmc
cmp
aad
addr16
ds
lret
mov
jge
dec
mov
cs
mov
or
pop
push
fdivr
ljmp
cmp
mov
es
insb
mov
mov
loop
ret
repnz
aam
pop
push
mov
pop
mov
shl
ljmp
cmp
xor
mov
mov
ljmp
jnp
push
dec
inc
subb
imul
cmp
or
loop
mov
jg
ficompl
xchg
push
push
andnps
insb
js
or
pop
fildl
or
inc
sbb
mov
pop
push
xchg
ds
mov
jns
movsb
cmp
xchg
cwtl
xchg
xchg
subl
icebp
xlat
arpl
add
subl
les
test
xchg
mov
sub
cmpsl
jb
cli
jg
xchg
sub
in
gs
fnstcw
pop
mov
repz
dec
xchg
movsb
cmpsl
fisttpll
mov
or
aas
pop
xor
pop
pop
push
push
mov
adc
iret
cmp
jns
leave
push
test
lods
out
cmp
loop
in
popa
inc
dec
js
sub
jne
dec
rorl
jmp
xchg
push
mov
jnp
in
push
push
jmp
roll
mov
jl
sub
jno
cmpsl
int
adc
push
mov
js
xchg
leave
cwtl
scas
or
filds
lahf
movsl
lret
adc
jecxz
fdivrl
inc
lret
pop
or
jo
notb
cwtl
add
adc
mov
cmp
fimull
mov
cs
or
xlat
add
inc
int
test
popa
cmp
insb
xchg
sub
fmuls
cmp
mov
lock
inc
and
test
jae
imul
addb
rcrl
xchg
add
mov
jne
push
in
xchg
test
sahf
mov
and
ja
popa
lea
jp,pt
scas
dec
push
mov
cmpsb
movsl
inc
jmp
jl
scas
hlt
push
sbb
out
or
push
xchg
adc
fidivl
adc
jne
out
push
ja
in
lods
fwait
int3
lea
cmpsl
push
mov
clc
mov
inc
add
pop
xchg
add
cwtl
test
or
jno
xchg
imul
mov
mov
pop
test
inc
dec
jmp
out
mov
sahf
mov
mov
mov
aam
mov
rclb
sbb
fldt
shll
pop
dec
sub
iret
mov
iret
jge
push
dec
cwtl
adc
repnz
mov
pop
mov
nop
dec
in
push
loope
jo
push
inc
inc
in
cmpsb
mov
das
or
adc
or
dec
pop
popa
adc
mov
inc
pop
icebp
ret
dec
dec
sub
imul
das
xor
cwtl
adc
cmc
mov
lds
jnp
loop
mov
mov
jmp
sti
dec
mov
jle
lods
add
sbb
rorl
dec
ret
inc
mov
fdivrl
les
enter
jae
jg
adc
out
cmp
xor
test
and
int3
jns,pt
pusha
aad
sti
lods
jae
xchg
pop
lret
int
sbb
cmp
jmp
popa
mov
or
loope
xchg
dec
into
sub
mov
and
dec
jle
xchg
std
or
test
rorb
sbb
and
sti
jnp
scas
push
addl
push
test
popa
fisttpll
movsb
pop
ret
sbb
adc
outsl
fildll
xchg
push
mov
pop
in
push
lret
mov
mov
repz
add
popa
cli
jg
mov
xchg
sub
sbb
scas
das
cmp
mov
into
and
cwtl
outsl
mov
popa
cmp
jo
scas
cltd
add
push
dec
ss
and
ficoml
out
jl
jnp
inc
packssdw
xchg
push
or
ja
daa
repz
scas
adc
test
inc
popf
pop
inc
lods
outsb
daa
jmp
mov
and
ficompl
sbb
cli
inc
xor
mov
adc
ja
iret
aaa
repnz
jmp
xor
int
adc
adc
mov
in
movsl
jns
cs
gs
jg
cmp
mov
jb
mov
test
and
sub
push
jle
mov
adc
out
mov
sbb
out
add
inc
into
test
arpl
mov
sar
mov
fsubs
push
xchg
fcoml
add
ret
mov
ret
dec
rcrb
inc
sar
mov
loope
xor
xor
shll
or
mov
xchg
inc
mov
dec
fcmovnbe
sbb
int
out
fwait
insb
cmpsb
sub
mov
fildl
aad
lds
imul
mov
js
push
in
outsb
xchg
int3
mov
pop
mov
hlt
push
pop
cld
pop
inc
in
std
cs
out
sti
addr16
adc
int
jnp
aad
push
cmc
arpl
and
xchg
imul
push
push
jnp
fwait
cwtl
xchg
fildll
fildl
mov
inc
add
dec
sub
arpl
rcll
jge
aam
shll
cmp
mov
loop
pop
add
std
pop
out
rcrb
dec
jae
das
aad
xor
push
popf
cmp
jb
cmpsb
je
ss
into
pusha
stos
xor
dec
adc
fidivrl
pop
xchg
popf
push
push
inc
popa
inc
sbb
xchg
fs
pop
inc
add
pop
push
and
outsl
and
sub
fwait
mov
in
mov
add
xor
sbb
pop
test
inc
mov
stos
mov
xchg
aam
add
lock
xchg
add
push
xchg
stos
mov
mov
clc
lcall
xor
adc
and
push
ret
rorb
push
pop
pop
das
mov
mov
call
mov
sbb
sub
mov
cmp
xor
ret
dec
cs
movsb
sub
scas
fisttpll
lock
adc
pop
test
out
mov
out
inc
or
add
or
inc
nop
scas
outsl
push
or
xchg
pop
adc
sbbl
call
shlb
add
std
cs
push
pushf
data16
xor
cmp
cmp
adc
cwtl
pop
dec
les
jecxz
ja
mov
jmp
test
fnstsw
popf
cmp
add
cmpl
movsl
mov
fstps
pop
int
inc
js
daa
dec
sub
out
lods
jmp
icebp
dec
ret
dec
cmp
cwtl
fdivrs
movsl
or
sub
popf
aam
push
jecxz
clc
pop
push
clc
jg
ret
lret
cltd
imul
mov
and
push
pop
ror
dec
cwtl
mov
rcr
fimuls
and
popf
popf
sbb
stc
out
lods
pop
xchg
shr
ljmp
adc
push
out
mov
cmpsl
mov
std
and
push
mov
push
jmp
movsb
jbe
inc
subl
mov
cli
je
mov
mov
xchg
stos
lods
outsl
dec
sub
daa
mov
enter
cmpsl
mov
add
dec
dec
xchg
fcoms
adc
fcompl
loope
roll
pop
inc
ret
mov
into
or
add
loopne
test
cld
jp
add
pop
cmp
mov
sub
cwtl
push
pop
mov
cmp
or
xor
lock
loop
jg
sub
loope
mov
push
xlat
fisttps
cmp
gs
pop
xchg
pop
fnsave
and
es
push
pop
mov
outsb
sub
sub
mov
fsubl
fistl
or
pop
daa
cmp
fisubs
push
add
and
push
in
jl
inc
fistps
fnstenv
pushf
xchg
adc
dec
ja
add
xchg
int
pop
fcompp
mov
or
dec
ljmp
sbb
in
jecxz
lret
icebp
jbe
loope
hlt
push
leave
mov
loope
push
pop
leave
jle
jnp
pop
mov
sub
sti
aaa
mov
jo
add
out
push
subl
adc
imul
cmp
push
or
xchg
sti
hlt
int3
xor
jmp
sub
cltd
push
mov
push
ljmp
dec
xchg
icebp
inc
ss
fsubr
jmp
push
jnp
stc
mov
outsb
xchg
push
xor
dec
cli
xchg
mov
iret
jge
loop
movsl
fadd
loope
fstp
adc
out
sarb
std
xchg
cmp
pop
adc
pop
nop
add
mov
mov
cmpl
xchg
data16
setns
pextrw
dec
mov
inc
stos
enter
std
test
sbb
loopne
scas
pop
xor
inc
rorb
rorl
mov
cltd
pop
std
fcoml
xor
outsl
ss
dec
dec
outsb
ja
daa
push
mov
mov
xor
push
clc
les
cltd
movsb
mov
lods
iret
sub
lods
push
rclb
cmp
shll
lds
or
cmpsl
sbb
repnz
shlb
call
mov
sbb
xchg
mov
jge
jge
xor
mov
dec
fisubrs
iret
push
dec
lds
aam
mov
cltd
loope
inc
mov
repnz
cmc
xor
fwait
cwtl
stos
cmp
out
xlat
in
xor
int
jmp
imul
xor
sub
aam
sbb
pop
das
mov
lret
sbb
push
jmp
or
jne
sub
xchg
xchg
test
or
cltd
mov
inc
shll
pop
inc
lods
jge
inc
cld
cwtl
cmp
out
clc
cmp
shlb
mov
int3
sub
ret
add
push
mov
sbb
mov
out
mov
imul
xor
daa
push
and
in
mov
sarl
jnp
and
dec
adc
or
bound
ja
and
xchg
sbb
cmpsb
sbb
ja
jbe
dec
movsl
add
mov
cli
dec
mov
mov
xor
push
aas
sub
insl
cmp
jnp
sbb
es
jbe
xor
insb
inc
dec
dec
xchg
push
fld
push
mov
sub
add
rcll
fldcw
in
or
je
pusha
inc
jg
es
inc
lds
jecxz
repz
ja
aaa
and
mov
mov
aad
or
cmpsl
in
sub
sbb
adc
jb
pop
mov
and
outsb
stos
outsb
add
sub
push
jg
js
notl
loopne
loopne
jae
jmp
xor
or
mov
pop
add
jl
add
insl
dec
dec
cli
xor
dec
clc
popf
adc
movsb
xlat
push
cld
fnsave
js
xchg
mov
sub
and
jbe
rcll
aas
cld
inc
mov
push
mov
sti
xor
mov
test
xchg
sub
and
ret
lods
and
xor
lahf
movsb
mov
push
fisttpll
fldt
xor
add
mov
jg
orl
repnz
sbb
aam
or
pop
sub
jmp
out
xchg
movsb
mov
pushf
xchg
in
dec
scas
aaa
xchg
pop
dec
adc
inc
int3
jecxz
cmpsb
mov
and
adc
nop
push
insl
jno
leave
jae
scas
stos
xor
mov
xchg
push
frstor
or
jmp
shl
xor
jbe
lock
push
sbb
xchg
aad
jecxz
pop
in
push
mov
das
fists
out
add
jns
mov
push
sub
push
adc
roll
enter
cld
cwtl
inc
prefetcht0
dec
and
mov
fwait
test
out
adc
jnp
pslld
dec
and
shll
in
gs
rcrb
sub
imulb
outsl
or
push
lahf
dec
cltd
dec
adc
mov
push
cmp
into
pushf
test
dec
pop
sub
xchg
push
and
ljmp
add
or
pop
xchg
outsl
fcmovnb
mov
and
xchg
in
push
mov
mov
xchg
push
fisttps
mov
pop
pushf
testl
or
xchg
cmp
rcrb
filds
and
push
clc
data16
dec
roll
iret
test
in
stos
rcrl
fistl
neg
adc
stc
sub
xchg
sarl
adc
sbb
inc
in
pop
adc
mov
clc
lcall
hlt
dec
repz
cltd
rorl
dec
sub
xchg
mov
lods
jge
mov
xor
cmpsb
nop
jne
dec
mov
jg
xlat
lds
in
dec
push
adc
add
popa
ja
mov
jns
sahf
and
cs
pop
jns
push
decb
pop
test
xchg
push
mov
mov
repz
push
fwait
and
sbb
pop
fnstcw
xchg
mov
lods
aam
ja
shl
nop
popf
and
pop
mov
arpl
and
mov
jae
and
cli
repz
pop
jb
cli
cmp
outsb
jne
and
fsubrl
dec
push
hlt
daa
loopne
in
aad
nop
adcl
cmc
in
es
lahf
mov
push
push
jo
pop
mov
jo
lods
mov
ja
cmp
mov
mov
dec
cmp
into
loop
or
xor
aam
stos
push
and
and
mov
dec
mov
mov
jb
rcll
push
outsl
lea
clc
push
jnp
imul
nop
pop
lahf
test
sbb
mov
ret
fabs
and
iret
cwtl
add
mov
or
scas
dec
add
mov
stos
dec
inc
in
dec
ja
hlt
ljmp
ljmp
imul
mov
cltd
xor
or
sub
arpl
int
mov
ret
push
pop
push
mov
sti
xchg
pop
dec
je
sub
popf
dec
fld
jbe
cmc
mov
add
fistl
rcr
popl
repz
repnz
lds
loope
xchg
mov
sahf
in
sub
fidivs
mov
mov
xchg
adc
dec
mov
push
xchg
sub
repz
popa
fwait
imul
icebp
jecxz,pt
jmp
xor
js
fyl2xp1
test
add
inc
or
sbb
iret
push
mov
test
ljmp
bnd
mov
sub
imul
dec
cmp
push
push
sub
test
ds
sbb
inc
xchg
repz
leave
jo
fisubrs
xchg
sbb
fdivl
out
movsb
cmp
pop
aas
inc
sbb
sub
enter
mov
pop
sbbb
xor
add
mov
int3
orb
dec
adc
mov
or
sti
rcrb
shlb
dec
xor
imul
enter
aad
je
cmp
lret
fisubs
add
jne
cmp
fcmovu
add
movsb
les
add
idivb
in
hlt
pushf
sub
mov
inc
out
sahf
add
or
adc
cmc
mov
cwtl
cs
inc
pop
pop
popa
stos
sahf
es
mov
int
jno
mov
cmp
clc
or
mov
pop
adc
inc
and
inc
inc
cli
pop
jge
hlt
xchg
cmp
movsb
or
ror
test
xchg
dec
jl
jnp
and
or
mov
and
or
push
iret
xor
or
inc
loopne
loope
xchg
movsl
jmp
add
rcl
xchg
test
push
pop
nop
out
std
gs
mov
cmp
dec
pushf
dec
xor
mov
nop
jg
ljmp
and
in
mov
adc
shr
mov
pop
cwtl
xor
ss
xor
push
leave
fstpt
fldt
adcl
enter
fistpll
mov
pop
add
scas
stos
mov
inc
sub
add
sti
ss
aas
je
mov
xchg
cmp
adc
push
mov
rol
cs
mov
fsubrs
mov
aad
sub
rcrl
cmc
shlb
mov
inc
cmp
sti
xchg
sub
mov
add
fdivrl
test
xor
pop
add
in
and
movsl
inc
inc
popa
xchg
cmc
add
fstpl
int
bound
mov
fbld
jle
and
jbe
push
jmp
cli
cld
sbb
mov
arpl
mov
jl
sbb
scas
dec
or
fsubs
mov
xorb
into
jnp
inc
mov
cmp
mov
test
xor
mov
scas
call
and
push
mov
repnz
or
jl
pop
push
jg
jnp
sub
fimuls
fnstcw
fdivs
std
xchg
and
stos
cs
mov
lret
aaa
subb
lea
push
and
insl
sub
cmp
pop
enter
rcll
jle
jne
and
jg
xchg
sbb
icebp
cwtl
imul
mov
mov
out
mull
and
jp
sub
mov
dec
popf
sahf
pavgw
add
and
ret
pop
sar
pop
test
popf
pop
jecxz
add
daa
adc
repnz
fstps
or
mov
push
xchg
cmp
pop
dec
cmp
cwtl
mov
jne
jns
xchg
and
cltd
and
aas
sbb
loopne
in
lcall
pusha
xchg
mov
mov
dec
push
vmovsldup
test
cli
jno
addr16
rcll
aam
data16
and
lods
fsub
and
repz
sbb
dec
test
add
ss
or
cmp
xlat
cmpsl
stos
bound
jbe
rorb
mov
stc
lret
xchg
xor
bound
lods
jnp
pop
out
int
fsubp
dec
mov
fcomp
into
inc
ljmp
lret
push
shll
lea
repz
dec
enter
xor
xchg
imul
and
stc
push
loope
adc
popf
sbb
cwtl
bound
fcompl
icebp
imull
adc
in
mov
lods
sub
mov
out
and
cltd
rcll
sub
inc
into
into
pop
pop
aaa
scas
jle
sti
xchg
mov
sbb
rolb
adc
jmp
loop
jns
shll
cld
aad
dec
push
aad
ds
mov
or
scas
dec
mov
sbb
or
fbstp
aaa
test
push
insb
cli
bound
mov
push
add
dec
shlb
mov
cli
mov
lds
cmpl
cmp
imul
dec
in
mov
push
cmc
ret
mov
jge
imul
xor
jmp
popa
mov
xchg
shll
movsl
mov
ficompl
fsubl
adcl
pop
int3
faddp
xchg
xor
loope
cmpsl
xchg
mov
push
addl
mov
in
add
js
lahf
inc
or
sub
out
ret
mov
dec
popf
testb
push
loope
mov
int3
cltd
outsb
push
mov
xor
inc
jo
repnz
jle
sbb
mov
cmp
jecxz
popf
push
leave
push
orl
out
repnz
jge
push
cmpsb
aad
dec
stc
rorl
shll
dec
mov
dec
jo
in
xchg
pop
jl
ja
nop
pop
insb
adc
decl
or
xchg
clc
mov
mov
pop
sbb
mov
sbb
mov
cmpsb
and
push
jp
mov
jae
jnp
xchg
mov
rcrb
in
xchg
xor
test
stos
out
inc
ss
cmpsl
ret
enter
xchg
or
adc
mov
jns
test
xchg
adc
and
rorb
mov
repz
out
lcall
sbb
cmp
jns
mov
pop
lods
cmp
jp
test
jp
xor
jae
mov
into
leave
jno
in
jbe
jle
inc
ret
popf
cs
mov
or
or
adc
aas
mov
or
hlt
or
je
iret
lret
into
jecxz
adc
jae
and
and
inc
fmull
sti
dec
jne
rorl
movsl
add
jp
xlat
cmpl
push
fs
in
adc
adc
sbb
xor
xchg
sbb
or
xchg
sbb
sbb
out
mov
xchg
stc
sub
inc
shlb
inc
fsubrs
jecxz
xchg
lret
lcall
out
cmp
push
in
pop
je
mov
test
inc
fnsave
cmpsl
bnd
repz
cli
mov
sub
jp
ret
mov
and
sbb
mov
mov
adc
push
dec
jmp
popa
pop
pop
pop
inc
sbb
push
pop
sarb
sub
mov
icebp
popl
adc
cld
mov
out
rolb
mulb
cld
scas
push
jns
cmpsl
inc
mov
fadds
cwtl
sub
mov
mov
ficompl
loopne
enter
les
and
inc
test
and
ja
mov
lods
add
insb
lahf
fadds
test
rcrl
dec
dec
rol
adc
mov
fprem1
outsl
jno
lcall
adc
loope
mov
in
push
xlat
div
ret
add
jo
xchg
test
fs
ficoms
jne
cs
inc
dec
push
mov
xor
lcall
cmp
mov
mov
push
inc
dec
in
idiv
int
xchg
mov
mov
outsl
mov
xor
mov
sti
cmc
jmp
lods
repnz
cmpb
pusha
mov
inc
mov
jp
loop
cltd
jp
fs
lahf
lret
sahf
addl
jne
test
sahf
push
in
cmp
loop
movsl
adc
nop
sbb
and
mov
cmp
push
aaa
add
jb
mov
addb
jae
imulb
cmp
and
lods
int3
pusha
mov
pop
call
or
in
setle
in
or
insb
mov
cmp
adc
mov
and
insl
scas
jle
or
js
pop
pop
fstpl
mov
fsubs
dec
xor
enter
gs
ret
mov
aas
into
icebp
push
add
adc
mov
adc
fidivrl
inc
adcb
and
xlat
mov
cmc
mov
in
bound
sahf
xchg
xchg
insl
stc
push
insb
xor
inc
xor
mov
lock
arpl
or
adc
lods
cmp
cmpsl
ret
cmpsb
jg
pop
enter
js
out
push
imul
dec
xor
mov
hlt
or
lret
stos
nop
les
mov
iret
or
outsl
pop
mov
pop
or
dec
popa
hlt
pop
cmp
repz
rolb
mov
rcrb
jb
pop
decb
jecxz
cltd
dec
push
popa
fcomi
pop
scas
decb
pusha
xchg
add
pop
pop
cltd
scas
jle
mov
push
es
loopne
insl
outsl
dec
negl
mov
add
jns
xchg
movsl
adc
cmp
xor
and
into
inc
mov
or
pop
add
sub
mov
mov
xchg
mov
repz
aas
push
xor
sub
mov
sbb
add
push
loope
movsb
call
pop
into
mov
push
insl
imul
imul
xor
cmpsb
jg
cs
imul
pop
mov
xchg
push
xchg
insb
outsl
cmpsb
push
into
sub
loopne
push
xchg
sbb
jnp
mov
push
sub
fcoms
xor
push
jne,pn
pop
inc
fwait
int3
push
xlat
xchg
je
cli
mov
enter
addr16
cmp
out
std
xor
mov
sbb
in
jle
imul
mov
rcl
outsl
jg
dec
cmpsl
lock
jmp
jg
add
addr16
shlb
enter
xor
and
push
adc
imul
cmp
lods
sbb
int3
movb
add
dec
push
fidivrl
packsswb
add
cmpsb
and
das
jmp
adc
dec
fldcw
sti
pop
lock
jnp
mov
incb
out
push
push
jns
or
and
arpl
or
ret
mov
lcall
rcrl
ds
shll
fwait
in
jmp
mov
dec
cwtl
pop
push
mov
fcmovnu
inc
ss
pop
outsb
in
push
movsb
repz
sub
mov
pop
mov
insl
roll
xor
ja
inc
rorl
rolb
pop
pop
and
mov
sbb
rep
sbb
xchg
cmp
or
gs
inc
mov
call
inc
xchg
nop
int3
xchg
mov
sbbl
nop
cmp
inc
lods
pushf
or
popf
xchg
cs
shlb
sub
dec
popf
popf
push
xorl
arpl
or
push
or
and
cli
pop
hlt
pusha
inc
add
call
sbb
cmpsl
scas
sub
call
ss
fcmovne
add
xor
jne
and
aam
lods
hlt
mov
shr
mov
out
popa
cmp
stos
dec
xchg
pop
mov
jecxz
and
add
cmpsb
xchg
or
lea
xor
or
inc
xchg
push
movsb
jns
mov
push
into
adc
inc
mov
mov
loopne
add
fsubs
hlt
stos
pop
enter
stos
outsl
movsl
mov
cmpsb
or
mov
and
je
fisttps
or
sbb
xor
jns
iret
das
lahf
fsubrl
lret
inc
push
fistl
cmc
stos
mov
or
fisttps
cmp
imul
fistl
xchg
testl
jp
out
xlat
sub
add
adc
lcall
clc
iret
cmp
add
fdivrs
inc
stos
and
pop
fisttps
fildl
enter
and
test
loop
adc
mov
test
add
pop
call
pop
jb
or
fs
cmpsl
sub
push
xor
pop
xor
sahf
mov
lock
mov
stos
cmc
aas
or
and
sarl
cmpsb
sbb
insb
lcall
jae
gs
pop
xor
sub
xor
dec
push
rclb
dec
dec
adc
fcoms
jle
leave
add
jg
and
xchg
lahf
and
mov
jmp
outsl
pushf
adc
scas
or
and
jae
mov
lods
adc
or
es
push
pop
sbb
bound
or
inc
add
cmp
jns
jne
add
mov
rclb
sub
stos
movsb
xchg
neg
aaa
cmpsb
out
stos
adc
jnp
jle
mov
or
out
jns
sub
in
and
cmp
or
lahf
jo
mov
mov
jae
mov
inc
push
sub
xchg
xchg
push
xchg
inc
lret
jae
sti
aad
push
pop
mov
addr16
inc
inc
mov
or
push
test
add
repz
gs
pop
sbb
mov
sub
sbb
sbb
mov
fsubl
mov
add
jb
xchg
lods
push
std
pop
push
or
aad
outsb
nop
mov
and
mov
leave
cmp
cmc
xchg
sub
repz
bound
outsl
cmp
addr16
rcrl
inc
lcall
push
mov
lea
push
mov
mov
ss
mov
mov
xchg
cmc
xchg
lahf
cmp
push
ret
in
push
sub
push
stos
mov
jo
stc
xor
repz
cwtl
mov
mov
push
dec
mov
mov
out
or
sbb
mov
shl
hlt
inc
shll
mov
pop
jmp
xchg
repz
fisubrs
aaa
jp
cmp
out
lods
mov
xor
je
jg
mov
bound
adc
insl
push
cmp
popf
dec
insl
ret
std
test
push
mov
test
cwtl
lret
xchg
lds
inc
mov
cli
and
mov
lea
cmp
mov
xor
cld
adc
insb
or
push
roll
stc
mov
lcall
gs
enter
xor
jb
fs
xchg
mov
xchg
ljmp
adcl
std
rorb
das
repnz
pusha
shrl
and
fiadds
das
stos
sbb
lcall
pop
mov
jns
sub
out
cltd
scas
sub
loope
int3
je
and
ljmp
movb
mov
xchg
fistpl
insb
aam
jle
dec
pusha
sti
cmp
insl
mov
cs
push
and
ds
adc
fninit
ja
test
xchg
xor
fcmovnbe
add
push
pop
inc
out
dec
inc
sahf
ja
add
aaa
out
cmp
sub
mov
sub
or
push
xor
inc
imul
xorl
cli
lock
cld
jg
cmp
stc
fsubrp
cmp
mov
mov
dec
and
add
xor
or
pushf
out
jecxz
pop
mov
or
popa
sub
push
mov
and
xchg
out
and
repz
ret
dec
mov
lahf
ficoml
add
mov
cli
divl
in
xor
push
xchg
jge
push
outsb
cmpsb
mov
or
xor
sub
inc
sub
adc
call
jecxz
jno
jp
pop
pusha
xchg
push
pop
cmp
sarb
lcall
push
icebp
xchg
bound
push
mov
ss
scas
mov
cmp
inc
out
jmp
cmp
jo
roll
and
stos
cld
cmpsb
jo
lahf
inc
mov
push
movsb
je
call
xchg
inc
outsb
dec
xor
cmpsl
push
inc
enter
jge
xor
push
scas
bound
add
lea
push
pop
adc
xchg
ss
cmpsb
incb
jmp
movsl
xor
mov
push
add
or
stos
stos
pop
and
les
mov
mov
inc
clc
cmp
jno
rcrl
pusha
aaa
xor
cli
out
or
sti
add
and
rcl
incl
ret
rcr
in
in
xchg
enter
add
gs
push
test
je
and
lods
lahf
int3
and
enter
rcrb
pop
rcrl
cmpsl
inc
lcall
inc
adc
jecxz
jae
pushf
arpl
cmp
jne
mov
dec
mov
and
loopne
sub
and
repz
sub
bound
ds
je
lahf
lret
lcall
adc
jno
push
shr
shl
sub
les
or
movsl
out
je
jl
inc
aaa
sti
das
fldcw
pusha
test
push
adc
pop
sti
das
and
rorl
sbb
inc
jns
mov
pop
fistpll
or
mov
push
mov
dec
xor
inc
movsb
cmp
or
popf
cwtl
dec
and
sub
inc
movsl
adcl
sahf
sti
xchg
xchg
adc
mov
rclb
push
lahf
cs
lods
mov
popf
cmpsl
xchg
in
or
and
vpsubw
inc
addr16
adc
sub
mov
inc
outsl
mov
mov
in
lods
push
bound
test
jns
mov
mov
push
inc
mov
int
cmp
push
push
dec
adc
xor
enter
jecxz
imul
xorl
ljmp
rcll
pop
add
jecxz
xor
rclb
out
std
fcmovb
xlat
mov
fs
icebp
mov
cltd
andl
mov
fadds
push
xchg
fmulp
pop
mov
mov
icebp
sti
and
cmp
dec
mov
mov
xchg
mov
add
leave
jge
daa
xchg
mov
into
test
mov
ret
push
jno
sahf
xor
lahf
xchg
xor
xchg
fwait
cmp
and
cs
mov
int
fsubr
les
dec
fbld
cli
pop
lahf
cmp
xor
stos
cmp
adc
pop
pusha
insl
push
xor
and
mull
xchg
pushf
daa
data16
jle
pop
fldt
pop
pusha
cmp
dec
cmp
icebp
andl
sub
inc
scas
loop
sbb
loop
push
out
mov
popa
out
addl
js
jg
test
and
inc
push
xor
arpl
cmp
test
test
pop
xchg
aaa
adc
lret
xchg
adc
mov
andl
mov
xchg
je
add
jg
inc
jb
aas
dec
sbb
into
adc
dec
test
xchg
cmp
or
mov
fsqrt
mov
xchg
repnz
sub
sbb
fimull
mov
out
or
fnstsw
push
mov
push
push
push
scas
sub
mov
out
adc
punpcklwd
mov
dec
cmp
popa
inc
push
dec
jge
mov
jp
sahf
sub
mov
cmpsl
cmp
das
cmp
sbb
int
insb
stos
gs
inc
stos
push
je
mov
fimuls
xor
xchg
or
sub
add
fwait
jg
hlt
lods
bound
mov
test
ret
lods
and
in
dec
sbb
add
xor
push
cmpb
sbb
push
rorl
jge
push
push
jecxz
xor
add
sysret
dec
imulb
push
loope
or
ss
add
movsl
push
out
outsl
aad
jle
lods
inc
xor
mov
and
idivb
or
mov
sbb
inc
sbb
in
or
aad
mov
xchg
xor
push
ja
mov
sarl
lret
cltd
aas
inc
cld
sub
aas
jae
inc
je
mov
pop
pusha
adc
xchg
add
pop
xchg
dec
cmp
jae
cmp
das
mov
out
aas
xchg
cld
mov
dec
les
inc
cmp
in
fldcw
cmpsb
inc
je
pop
jl
loope
jge
call
push
mov
orl
mul
inc
pop
stc
stc
cmp
jae
or
call
pop
mov
in
pop
dec
xchg
call
aam
dec
jns
push
xor
cltd
loopne
divl
push
icebp
jge
fisubrs
pop
leave
pop
sbb
mov
fldcw
ret
fmulp
lret
push
cli
or
or
xchg
mov
jnp
add
sahf
enter
fldenv
pop
cmp
js
sub
lods
push
dec
cmp
imul
pop
cs
movsl
cmpsl
pop
xchg
rcrb
in
add
dec
and
repz
mov
inc
xchg
in
aaa
into
push
push
loopnew
fdiv
fucomp
sbb
cmp
inc
cmp
sub
repnz
out
and
icebp
dec
add
sarl
dec
into
pop
push
aam
std
pop
mov
or
push
sti
xor
pop
xchg
sub
and
aad
mov
jne
xor
jl
cld
test
loop
mov
popf
mov
pop
xor
adc
xchg
fcomp
cld
cmpl
js
pop
push
notb
lock
lcall
jbe
hlt
repnz
shrb
xchg
sbb
jno
xor
jmp
xchg
sbb
out
jns
cmp
jne
pop
xchg
inc
mov
popa
imul
out
jne
outsl
inc
xchg
popa
inc
shl
ja
jo
pop
outsb
add
js
or
push
jge
fisttpll
push
sub
movsl
cmpsl
loope
jp
es
sub
push
push
scas
pop
xor
aaa
imul
inc
imul
cmp
fsubr
dec
test
or
jae
stos
cld
pop
xchg
imul
js
fimuls
push
in
icebp
or
cmpsb
xor
xor
je
loope
rep
xchg
jbe
cwtl
xor
cli
jnp
add
push
push
push
cmp
dec
and
sub
imul
jmp
dec
inc
mov
jge
mov
mov
in
bsr
jg
cmp
sbb
mov
in
xchg
in
inc
cld
popa
rol
sbb
pop
push
insb
adc
jnp
jno
jns
loope
test
add
test
cmp
jo
and
cmp
jecxz
shrb
cmp
data16
add
mov
cwtl
cltd
stc
mov
jl
sub
push
sub
out
ljmp
mov
in
fwait
dec
pop
sub
lods
adc
push
daa
sbb
adc
cmp
jg,pt
mov
add
xchg
mov
data16
add
add
outsb
rclb
fsub
mov
psrld
cs
cmp
stos
xchg
ret
popf
in
cld
sbb
jo
adc
bound
loopne
cltd
aaa
cmc
ja
add
fiaddl
jle
mov
das
sti
ret
ljmp
stc
xchg
popf
mov
in
cmp
push
jno
xchg
and
hlt
pop
push
stos
popa
mov
ljmp
xchg
popa
rclb
aas
fsts
or
daa
movsl
jecxz
add
inc
xchg
rclb
rorl
fidivl
push
imul
enter
inc
into
sub
out
cmp
cli
dec
inc
pusha
ss
lods
sarl
push
iret
jge
lods
imul
cwtl
int
or
mov
lahf
pop
push
cmp
jmp
mov
mov
ja
enter
mov
adc
daa
popf
cmp
gs
inc
jmp
xchg
add
ds
shlb
inc
mov
aad
imul
sub
pop
das
lret
bnd
pushf
inc
call
adc
add
and
xchg
pop
add
test
pop
and
adc
pop
and
loopne
adc
cmp
iret
popf
push
rcrb
jl
mov
add
and
lods
xchg
or
xor
cmova
leave
sub
push
adcl
mov
leave
inc
xor
and
push
lret
out
dec
loop
pop
das
pop
pcmpeqb
loopne
pop
aaa
inc
and
push
pop
das
inc
lahf
xor
pop
movsb
jb
ss
lds
mov
jl
and
arpl
xor
inc
ss
cwtl
lret
mov
aad
push
pop
lret
mov
mov
xor
mov
push
cmpsb
loop
mov
imul
sbb
push
cmp
cmpsl
sbb
mov
xchg
pop
sub
in
adc
pop
icebp
andl
inc
push
sub
iret
lcall
fcmovnb
scas
xchg
hlt
inc
pop
xlat
pop
mov
lret
sbb
add
and
mov
mov
xchg
pop
sbb
add
fcomps
negb
sbb
or
repnz
cmp
pop
jo
or
es
push
out
and
inc
push
mov
jle
es
jne
int3
jb
pop
fildl
mov
add
lock
fs
inc
lret
not
rcrl
and
or
add
mov
dec
icebp
rclb
lds
test
mov
mov
add
mov
loop
adc
jl
cli
mov
int3
mov
mov
mov
inc
jecxz
call
inc
dec
add
cmpsb
roll
mov
pop
mov
imul
dec
aam
dec
push
dec
mov
push
cmp
mov
sbb
pop
int3
out
nop
lods
inc
cld
aaa
mov
test
push
mov
int3
aam
sub
aaa
fwait
jp
xor
jns
ja
lods
pop
arpl
sbb
fisubrl
lods
sar
fldcw
int3
cli
push
xchg
push
jl
scas
enter
sub
imul
sbb
push
cmp
scas
ja
mov
sbb
sar
arpl
call
cmp
in
in
push
fstpt
leave
mov
dec
sbbb
push
and
add
addr16
shlb
dec
shlb
rorl
inc
mov
lret
and
rclb
in
in
imul
push
dec
movsl
mov
test
outsb
hlt
mov
xchg
xchg
add
in
mov
out
rcll
and
jecxz
out
cmp
mov
inc
lock
test
and
insl
je
loope
cmp
mov
inc
pop
and
stos
xchg
es
movsl
mov
mov
adc
rcrl
das
std
nop
mov
jmp
mov
inc
cmc
cld
ds
aam
enter
ja
sbb
and
lret
dec
mov
outsb
dec
push
insl
lret
push
cmpsl
loope
movsb
mov
ret
inc
jne
jnp
inc
add
inc
fisubs
or
cmpsb
jne
pop
xchg
mov
outsb
pusha
fisubrl
mov
loop
ss
div
scas
lea
lahf
aam
or
test
inc
jae
loope
inc
pop
jle
inc
pop
adc
jge
aaa
addr16
jmp
sub
test
jmp
icebp
jnp
stc
pusha
pop
jl
cmp
js
test
mov
fistpl
xor
cmpsl
aaa
or
xchg
cmp
lds
rclb
jb
mov
ss
enter
mov
push
mov
lock
pop
imul
or
pop
xor
push
in
add
jae
xor
es
repnz
into
dec
adc
scas
mov
mov
shlb
imul
out
das
in
xor
inc
decb
lret
lret
addb
test
jnp
cmpsb
cwtl
adc
xchg
xlat
cli
sbb
leave
and
pop
add
mov
scas
aam
pop
cmp
lods
or
add
push
leave
mov
mov
cs
sub
orl
push
lret
mov
and
addr16
lret
adc
popa
sti
test
sbb
les
cmpsl
cmp
icebp
popf
mov
int3
push
dec
ljmp
and
imul
jle
add
push
cs
and
popf
js
nop
add
idivl
or
jbe
ds
cs
cmp
jmp
xor
and
push
push
inc
ret
xor
dec
jae
add
pop
lret
push
jo
push
inc
mov
add
jns
pop
cmp
xchg
pop
sbb
cli
mov
pop
sti
add
mov
popf
insb
push
inc
movb
popf
aaa
lcall
xchg
rcrb
pop
test
jl
mov
fsubl
lods
xchg
fwait
mov
mov
lret
into
frstor
xchg
mov
adc
and
xchg
mov
out
aaa
xchg
jge
scas
push
pop
mov
pop
shll
popf
pop
aas
jno
push
es
push
mov
inc
sbb
adc
push
cwtl
add
sbb
aaa
mov
add
in
enter
cmp
push
jnp
out
je
sti
pop
mov
xor
cltd
push
push
mov
jle
and
or
adc
sbb
outsb
mov
mov
mov
cmpsb
xchg
mov
scas
mov
icebp
dec
sti
or
push
xchg
imul
or
shlb
outsb
add
pop
out
push
or
push
cmp
cmp
mov
dec
call
jo
adc
dec
adc
xchg
dec
dec
add
xchg
jg
aam
push
add
fs
imul
jl
pop
stos
jnp
rorl
jne
paddb
into
cmp
xor
jl
stos
mov
pop
fwait
jge
sbb
sub
sub
int
popf
mov
shl
mov
jbe
mov
ss
sahf
xor
enter
dec
or
push
cmc
jnp
loope
repnz
insb
popf
mov
int3
je
cmp
mov
call
loope
rcrl
jecxz
mov
mov
jb
incl
clc
stc
sbb
outsb
sbb
sub
fwait
add
orb
xor
adc
imul
dec
loopne
ss
es
adc
and
pop
pop
or
adc
lahf
insb
or
dec
ficoms
inc
inc
call
aad
sub
push
adc
ret
xor
cld
ret
lds
test
pop
xor
cmp
cmp
sub
pop
inc
stc
fsubs
jbe
jl
mov
leave
mov
sbb
and
loope
test
fadds
rolb
in
mov
and
xchg
fsubl
bound
movsl
pusha
leave
cmp
imul
vhsubps
sub
fldl2e
into
cs
or
loope
push
or
or
stos
adc
inc
push
jg
ja
xor
mov
popa
add
sbb
push
lcall
bound
jae
and
aaa
call
dec
add
leave
pop
mov
fildll
push
mov
sbb
ljmp
xor
mov
aas
jg
add
mov
leave
decb
add
sub
xchg
jno
jp
xor
popf
mov
sarl
adc
mov
cs
cltd
scas
sbb
test
js
push
xchg
inc
mov
stos
pop
inc
mov
jb
stos
adc
or
data16
add
int3
cs
sbb
inc
add
mov
ret
mov
jnp
in
fistpll
push
out
sbb
cltd
cmp
cmp
push
out
pop
jbe
jbe
imul
mov
xchg
fwait
loope
movsl
shrl
jnp
lahf
in
xchg
bound
fcoms
dec
rcrl
stc
iret
jbe
add
stos
fisttpl
xor
xor
shrb
mov
cmpsb
sbb
pop
mov
outsb
in
fiadds
or
dec
mov
in
fwait
in
jae
or
je
or
cld
add
jne
lds
sub
jp
neg
or
aam
or
aaa
pop
mov
push
add
ret
and
enter
dec
scas
or
mov
test
lods
fistpll
addb
into
cltd
and
hlt
pop
clc
cltd
adc
push
outsb
shlb
adc
adc
xorb
sub
fistl
mov
les
xchg
cmp
push
cmp
mov
inc
leave
ret
jne
push
dec
les
lea
dec
push
fstpt
mov
out
sub
mov
testl
lahf
mov
leave
mov
mov
fs
add
call
sbb
mov
rclb
or
popf
push
cmp
mov
addr16
dec
rolb
fsubrl
add
sub
ret
in
inc
jne
movsb
out
cli
cmpsl
push
mov
aad
jnp
insl
mov
int
leave
imul
jp
out
outsb
out
sahf
subb
xchg
and
aad
enter
call
movb
sub
jl
insl
sub
xchg
xchg
inc
pop
pop
xchg
in
adc
jle
cld
mov
add
mov
jns
stos
pop
cmp
rcll
sahf
cmpsb
mov
push
fs
loope
jge
clc
lret
pop
das
sub
cmp
mov
jb
es
mov
xchg
mov
sub
test
sub
sbb
lods
sbb
xchg
adcb
xchg
mov
sbb
bound
inc
or
mov
fcomps
loop
sub
leave
sarl
imul
insl
push
les
arpl
or
movsb
andl
leave
jg
sbb
add
fidivl
lcall
aas
fsts
sub
aam
leave
xor
jae
out
icebp
sbb
dec
outsl
xchg
inc
fnstenv
adc
cmp
sbb
push
and
insb
add
mov
outsl
or
lods
jae
dec
loope
in
mov
push
mov
fisubl
iret
mov
test
into
sqrtps
mov
cmp
xchg
and
dec
das
out
lret
jb
mov
scas
das
popl
cmc
enter
mov
cli
adc
sbb
mov
xor
cmpsl
push
or
movsb
pusha
insl
xchg
xlat
call
pop
negb
out
push
dec
aaa
les
xor
dec
ljmp
dec
mov
dec
add
sbb
jp
movsb
inc
xor
dec
test
cli
repnz
movsb
scas
inc
mov
loopew
insl
adc
xor
aad
mov
xchg
dec
mov
imul
or
xor
cmp
jo
pushf
stc
lods
aas
fs
dec
jne
clc
xchg
stos
sub
mov
loope
movsl
sbb
fcoml
nop
mov
mov
pop
out
rcl
movsl
adc
jae
ficoml
lods
mov
push
xchg
pop
and
sbb
xor
adc
and
mov
lods
add
gs
movsl
ljmp
push
jle
xor
push
std
mov
and
mov
or
sub
xchg
adc
mov
dec
hlt
orl
mov
adcl
aaa
pop
push
sub
adcl
mov
xor
mov
push
scas
push
push
sarl
ljmp
mov
mov
push
js
mov
pop
ret
xchg
xlat
and
inc
mov
lea
and
jecxz
mov
mov
dec
and
test
mov
adc
adc
jne
je
push
std
gs
mov
loope
dec
and
scas
fnstsw
insb
insl
push
out
mov
xchg
jae
cwtl
push
jne
cmp
ds
xlat
rorl
mov
jns
scas
ja
mov
pop
ljmp
clc
mov
xchg
imul
cwtl
inc
ss
mov
in
daa
pop
adc
sub
stos
xor
ret
sbb
dec
sti
int
test
ja
xchg
or
movsl
mov
cmp
inc
inc
dec
jbe
aaa
imul
lahf
mov
mov
push
mov
cmp
sti
sahf
rorb
adc
adcb
fcom
icebp
jp
jno
sti
mov
or
mov
jns
in
out
cmp
xor
mov
stos
ret
xchg
orb
jnp
cmp
andl
mov
popf
test
and
jno
jae
notb
or
shlb
fistpl
sbb
mov
lods
rcrl
movsl
mov
xor
pop
mov
mov
add
test
sbb
mov
les
call
and
fists
xchg
mov
ss
stos
lea
mov
push
adc
mov
test
push
clc
nop
mov
mov
or
testb
int
add
sub
pop
sbb
nop
cmp
stos
aad
test
push
cld
loopne
mov
imul
push
add
xlat
insl
push
shll
loope
add
int
loope
and
jns
aam
imul
sub
fistps
push
pop
fidivrl
mov
fiadds
mov
pop
mov
repnz
fisubl
fcomps
inc
xchg
cmpb
push
sbb
aam
xchg
popa
xchg
mov
pop
clc
jg
gs
lods
ret
test
daa
jl
add
and
inc
out
scas
negb
movsl
loope
data16
out
shl
jmp
and
jle
data16
or
popf
jle
pop
add
sbb
sbb
popf
fsubrs
je
cmpsl
jbe
mov
jb
fnsave
bound
push
jns
int
xchg
cmp
xchg
jg
int3
push
adc
mov
fldl
mov
push
ret
lods
popa
jmp
inc
mov
imul
mov
add
fs
mov
loop
xchg
xor
push
lcall
inc
jecxz
test
and
ljmp
mov
xchg
or
adc
mov
orb
push
pushf
add
xchg
cmpsb
push
sbb
jge
ret
outsb
inc
cmp
inc
push
push
addr16
test
adc
das
adc
jmp
movsb
rcrl
inc
enter
push
pop
inc
cmp
enter
mov
adc
dec
mov
push
add
fs
js
inc
ja
test
jne
mov
add
mov
out
or
fs
out
out
mov
cmp
pop
inc
jle
lea
and
mov
aaa
outsl
push
je
mov
imul
repz
or
xor
add
mov
shrb
dec
xorl
jmp
stc
cli
hlt
in
dec
sub
hlt
cltd
mov
push
loop
cmp
int3
push
popa
or
add
and
mov
inc
jns
ljmp
int
pop
jmp
cmpsb
ret
sbb
repz
adc
lcall
imul
shr
pop
xor
sbb
outsb
inc
dec
jmp
repnz
jg
and
nopl
and
dec
pop
inc
jnp
xchg
repnz
sub
jp
dec
jae
sub
int3
inc
and
in
push
cmp
hlt
xchg
jle
pop
xchg
mov
sub
mov
jae
xor
cmp
pushf
mov
cmp
fbstp
scas
push
stos
test
mov
ss
mov
push
jl
aaa
testb
sbb
sub
pop
dec
andb
mov
fistpl
into
xchg
rolb
add
cmp
mov
in
push
inc
and
push
loope
mov
aas
cli
mov
aas
cmp
xlat
jne
repz
xor
jne
or
or
cltd
jle
nop
je
and
dec
dec
test
jbe
stc
push
pop
push
dec
int
es
in
in
gs
in
fistl
xchg
push
iret
xor
das
sbb
adc
daa
int
repnz
cltd
adc
addb
pusha
test
xchg
test
je
dec
lcall
mov
or
int
inc
mul
xor
sbb
sub
fisubl
xlat
fwait
addr16
dec
imul
jmp
or
push
pop
pushf
push
jne
mov
and
movsl
jb
mov
sbb
es
adc
divl
nop
cmp
xor
dec
mov
or
lds
rolb
jmp
adc
outsb
mov
subl
int3
mov
in
pop
xor
dec
inc
dec
hlt
xor
sub
cltd
ss
shll
cmp
pop
mov
lret
cmp
and
in
xchg
fisttps
cmp
push
jmp
pop
daa
and
mov
and
inc
ret
stc
push
pop
sti
cmp
scas
mov
inc
movsb
cmp
mov
sar
test
mov
jp
inc
scas
push
test
inc
mov
sbb
pop
ja
push
clc
movsb
add
loope
dec
lret
mov
add
in
sub
lods
push
jg,pt
in
sbb
sub
fmulp
or
addr16
adc
jmp
mov
sahf
bound
adc
cmp
sti
dec
into
pop
or
out
orl
aaa
popa
jle
sbb
pop
cmp
in
xchg
mov
aad
cmpsl
jge
sub
mov
jo
fnstsw
or
dec
orl
push
dec
mov
insl
jge
dec
mov
mov
popf
dec
fisubl
in
add
xchg
mov
add
addl
in
and
cmpsb
scas
mov
aam
daa
or
ret
pushw
jb
and
dec
cmp
cs
inc
leave
and
and
loop
ret
ljmp
iret
imul
pop
cs
mov
xchg
sbb
inc
jl
adc
push
out
fnstenv
jne
lods
cmpsb
pop
outsb
scas
xchg
test
xchg
lcall
jb
adc
iret
fsubs
or
add
test
imul
pushf
cmpl
xchg
hlt
mov
push
data16
xor
in
rcll
mov
adc
jmp
cmpsb
pop
bsf
rclb
inc
adc
popf
adc
lods
push
dec
cltd
pop
in
cmp
leave
clc
or
lcall
xchg
mov
repnz
or
jae
and
mov
inc
je
cld
xchg
mov
insb
int3
imul
and
push
aas
or
jno
cmp
mov
inc
loop
sub
xor
test
fsub
rorl
pop
push
or
cmc
popf
push
lcall
sub
adc
sbb
push
inc
jbe
test
or
cmp
in
pop
or
sub
pop
fcmove
aad
mov
rorb
lods
fisttpl
aad
mov
rclb
mov
lods
loopne
sbb
cmp
mov
mov
or
aad
cltd
imul
add
sub
xchg
jl
dec
aas
in
loop
sub
dec
das
sbb
mov
lret
lods
sbbl
daa
daa
int3
xchg
lds
pop
and
push
push
xchg
jno
push
insb
pop
ss
icebp
add
push
add
arpl
movb
lods
sbb
pop
aam
or
sub
movsl
cmp
sbb
and
dec
xchg
stos
ss
in
and
xchg
cmp
cmpsb
mov
addr16
mov
xchg
scas
test
lock
movsl
test
mov
mov
mov
js
movsl
sbb
push
fsubrl
jbe
xor
jae
aam
lret
out
int3
cwtl
mov
push
fst
in
sub
sbb
scas
es
cmp
push
sub
cli
push
notl
mov
or
cmp
test
xchg
mov
mov
push
add
pop
icebp
mov
stos
lods
inc
pushl
mov
push
or
cwtl
inc
or
mov
fwait
jl
lret
aaa
fs
xor
popf
ss
inc
fdivl
mov
mov
and
sub
pop
jae
xchg
std
xor
in
pop
aas
jl
in
cltd
xor
int
cmp
xor
mov
sub
jo
loopne
xlat
rolb
xor
stos
adc
pop
push
aad
jb
push
jle
lret
sub
jne
xchg
sub
mov
cmp
add
jb
mov
add
jl
jecxz
loope
imul
inc
loopne
out
loope
mov
mov
push
je
push
jne
mov
movsl
and
inc
or
mov
out
push
aas
inc
aaa
mov
std
xor
mov
icebp
push
xchg
outsl
popf
and
cld
sbb
dec
sub
test
addr16
dec
and
gs
in
stc
jp
push
xor
popa
and
xlat
in
add
and
jns
popa
ja,pn
mov
testl
adc
imul
sub
dec
jns
xchg
push
ffreep
xchg
data16
cs
je
mov
xchg
mov
inc
xchg
mov
add
dec
pop
shll
cmp
cmp
ja
lods
jmp
push
movsb
or
jge
loop
jg
shll
rcll
aam
icebp
out
push
int3
repnz
fisttpl
mov
in
leave
add
data16
push
push
fimuls
rcr
int3
sti
mov
add
pusha
cld
stos
dec
cmp
je
xchg
adc
out
or
sti
pop
das
or
mov
xchg
inc
and
xor
xchg
mov
faddp
ja
or
fstpt
jp
push
stos
in
sbb
mov
cltd
push
out
shl
scas
shld
jne
adc
dec
ret
or
out
call
and
xchg
push
inc
add
pop
mov
dec
pop
mov
dec
inc
push
ret
int3
dec
rorl
addr16
xchg
mov
jae
fcompl
push
jle
insl
add
jb
repz
clc
mov
popa
pop
lods
push
scas
scas
lods
pop
daa
push
fistps
jmp
call
ljmp
sbb
push
aam
insb
lahf
inc
cmp
fistpl
cs
jp
clc
js
xlat
dec
xchg
repz
cmp
test
inc
push
or
sbb
lcall
popf
mov
mov
xor
gs
mov
loope
lock
loop
cld
xchg
cltd
pop
push
cmc
ret
mov
aad
jne
dec
clc
scas
in
loope
in
ficomps
push
xchg
clc
push
cld
aad
sub
shrl
gs
xor
jnp
cmp
imul
fs
mov
mov
imul
iret
adc
and
cmp
lcall
push
lret
xchg
dec
aaa
sahf
sub
fadds
push
je
inc
into
ja
pop
adc
repz
push
fadds
sub
and
pop
adc
popf
scas
cmp
jb
and
push
loopne
stos
insb
mov
adc
mov
dec
jp
testl
in
das
divb
in
shl
out
dec
sub
out
mov
or
pushf
inc
ljmp
xchg
cmp
fwait
and
cmc
test
out
inc
fwait
or
mov
inc
fucomp
sti
dec
and
mov
inc
mov
and
pop
mov
xchg
insl
outsb
cmc
mov
jae
test
loopne
mov
pop
in
mov
mov
cli
xchg
addr16
int
add
and
cmp
sub
ja
stc
stos
cmpsb
jno
pop
cs
clc
add
es
add
push
jae
mov
xor
andl
cwtl
and
xor
xchg
dec
outsl
mov
aad
shll
mov
dec
mov
dec
mov
xor
pusha
jmp
sbb
repnz
fwait
and
push
add
or
repnz
pop
ret
sbb
adc
fistl
gs
out
pop
popf
ss
lea
out
aam
ret
mov
or
std
sbb
mov
lea
js
jns
not
xchg
cmpsb
xchg
lret
mov
or
jbe
or
sub
icebp
fld1
jnp
loope
mov
scas
loop
inc
xchg
clc
pop
dec
imulb
add
or
pop
cwtl
pop
xor
adc
and
mov
xor
xor
call
pop
rorl
mov
push
jnp
aad
int
mov
or
ret
insb
icebp
jle
sbb
dec
les
mov
addr16
inc
jp
push
push
bound
jg
mov
jns
mov
jnp
adc
lcall
movsl
iret
andb
ja
push
mov
sbb
dec
push
out
iret
push
negb
rorb
bswap
sbb
movsl
js
scas
mov
mov
stos
push
dec
jl
or
loop
dec
es
popf
call
mov
mov
in
sub
jae
jle
arpl
notl
and
stos
xor
rorl
lds
out
push
mov
popa
jo
ret
xor
pushf
pop
pop
xchg
in
mov
sbb
idivb
adc
shll
xchg
call
fisubl
mov
push
dec
adc
stc
fs
addb
shl
xor
mov
push
mov
mov
adc
pushf
int3
mov
mov
incl
or
ret
cmp
push
xor
fimuls
dec
pop
mov
ficompl
cld
adc
cmp
mov
mov
mov
cmp
inc
popa
movsl
test
fisubrs
bound
mov
in
aas
push
addb
pop
pop
mov
lods
vpcmpgtw
pop
push
out
pop
popf
xor
addr16
ljmp
call
mov
mull
lds
jns
jo
jnp
jg
mov
cmpsl
and
add
popa
sub
push
loop
cwtl
cmp
lret
loop
hlt
pop
xchg
ret
loope
pop
lods
push
hlt
sub
imul
adc
lods
idivb
out
lret
sbb
sub
gs
sub
and
mov
lods
insb
test
test
xor
cmp
add
cmp
lcall
daa
inc
adc
insb
xor
jns
lret
out
xchg
pop
adcl
and
popa
fbld
stos
fiaddl
cmp
iret
test
cmp
inc
push
jae
dec
cmc
push
inc
lret
jmp
adc
outsl
pop
je,pt
dec
sbb
call
das
pop
aas
arpl
or
sbb
inc
in
lcall
cmp
xchg
decl
push
cmp
cmp
sub
cmpsb
push
fbstp
jecxz
adc
movsb
cmpsl
inc
adc
in
jno
xor
xchg
adc
cwtl
xlat
movsl
xor
sbb
add
mull
mov
add
int
sbb
in
inc
xor
int3
add
aad
mov
jno
xchg
push
popa
clc
mov
inc
fsubrs
stos
rcrb
data16
in
sbb
mov
orl
lahf
xor
jne
insb
dec
mov
mov
movsb
and
mov
daa
xorl
loopne
push
out
push
movb
cmpl
aad
sub
mov
lret
comiss
jbe
mov
insb
mov
jns
repz
nop
arpl
xchg
inc
inc
xorl
dec
xor
add
rorb
cltd
lahf
cwtl
push
pop
jns
mov
es
jns
rorl
mov
cld
dec
pop
mov
shlb
loop
push
fldt
mov
jecxz
mov
sub
push
in
lock
ja
mov
in
inc
and
mov
adc
cs
cmp
les
inc
or
dec
pop
fdivrs
aam
push
scas
jg
mov
mov
lods
sti
nop
mov
cmc
mov
inc
fsts
out
sub
adc
faddl
jp
das
fistpll
mov
lahf
adc
cmp
push
out
xchg
lret
gs
lea
cmp
jnp
in
fdivs
or
sub
cmp
cmp
leave
iret
int
pushf
mov
xor
mov
fcompl
in
ljmp
testl
fbstp
je
push
cmpsb
ds
fwait
movb
jno
adc
scas
mov
call
push
js
scas
fs
dec
loop
and
mov
sub
adc
and
loopne
sbb
jbe
hlt
je
pop
inc
loopne
daa
mov
xchg
push
daa
das
and
jo
sub
adc
test
and
ja
ficoml
xor
scas
xor
or
in
sub
push
inc
jge
in
outsb
stc
inc
repnz
sbb
mov
and
cld
mov
test
mov
cwtl
imul
jl
mov
push
mov
stos
sbb
mov
jmp
stos
lods
push
pop
loop
mov
stc
xchg
mov
fcomps
xchg
jns
mov
mov
and
fidivs
and
sub
enter
pop
pushf
adc
out
movsb
cmp
lods
in
mov
das
push
into
repz
lea
cltd
pop
loop
push
sub
xor
push
pop
push
cmp
in
inc
insb
popf
mov
je
sbb
xchg
fnstsw
jb
dec
or
sub
pop
mov
xor
gs
popa
pop
and
cmpsb
lahf
outsb
mov
mov
pusha
pop
mov
shl
je
mov
movsl
into
push
xchg
jno
cltd
pop
aas
mov
jo
sbb
pushw
mov
jl
iret
cwtl
pop
stos
dec
sbb
push
push
insb
xlat
rcll
lea
cmp
dec
call
and
fistps
dec
out
push
cmp
push
push
mov
mov
cmc
repnz
inc
jle
inc
cmc
mov
cld
js
addb
cmpsl
push
rorb
mov
shll
and
xchg
rorl
fistpll
cli
xor
push
jp
int3
mov
jmp
dec
pop
mov
inc
stos
addr16
ficomps
jecxz
daa
in
je
mov
cli
mov
add
jae
xchg
push
cmpsl
leave
dec
xor
mov
cs
fdivrl
adc
xor
sbb
aam
nop
cltd
mov
xor
test
stc
push
sub
in
xchg
mov
mov
mov
jbe
shlb
pop
imul
add
call
or
fdivl
roll
in
iret
imul
push
mov
mov
ljmp
mov
aam
add
popa
movl
mov
add
icebp
outsb
in
sbb
pop
cmc
xorb
mov
push
in
test
aas
cmp
xchg
push
or
push
jo
je
jge
and
stos
jecxz
sarb
and
lcall
mov
push
rcrl
xchg
dec
ret
mov
pop
mov
pop
mov
or
pusha
popa
cs
cltd
cmp
pop
filds
sub
jle
jno
adc
xor
ret
xchg
adc
xchg
loop
cmpsl
mov
adc
ss
push
sub
inc
push
pushf
jmp
push
cmpb
data16
leave
mov
scas
adc
add
and
enter
jecxz
sub
inc
sub
lods
enter
lock
ficompl
xchg
sbb
sub
xchg
push
gs
pop
add
into
xor
fsts
fcmovne
out
add
adc
test
test
dec
loope
mov
insl
punpcklwd
jg
mov
popf
add
ds
jle
nop
sti
xor
adc
xor
mov
mov
add
ret
jnp
shlb
sbb
xor
mov
jnp
xlat
inc
flds
out
inc
in
imul
fbstp
stc
cld
xlat
inc
pop
outsl
int3
add
imul
fmull
and
jge
pop
or
or
xchg
enter
in
jno
out
nop
fmul
dec
sub
sbb
test
stos
xchg
xor
sbb
jge
inc
lea
es
movl
dec
stc
data16
test
or
sub
inc
outsl
xchg
jae
jl
stos
sbb
test
fmuls
int
inc
scas
fldl
shr
sbb
fildll
xor
mov
test
sbb
dec
pop
and
jno
jnp
loopne
inc
mov
ss
daa
test
fnstcw
mov
scas
ret
cmp
mov
mov
cmp
or
xchg
inc
popa
sbb
xchg
in
jns
add
xchg
std
pushf
lods
xchg
xchg
fdivs
dec
mov
cmp
ljmp
fnstcw
pop
cmpsl
sarl
mov
stos
sbb
shll
jle
xor
roll
bound
js
mov
sbb
loop
xchg
push
sbb
push
stc
and
and
sbb
popa
bound
aad
mov
xchg
jg
push
push
sub
std
hlt
psllq
loope
insl
fildl
cli
or
ss
mov
and
sub
mov
add
jnp
sub
das
jecxz
jmp
xchg
and
test
stc
push
popf
rcl
sbbl
jo
jge
sbb
mov
xchg
mov
mov
mov
cmp
mov
aam
pop
inc
imul
je
xor
pop
sbb
sub
dec
aam
icebp
sti
loope
shlb
xor
call
push
fiaddl
je
cli
mov
fwait
loopne
insl
ljmp
out
loop
andb
xchg
pop
cmc
fldenv
call
jl
xchg
sahf
mov
mov
pop
dec
push
push
inc
pop
cmp
fsubrl
push
daa
test
mov
push
cwtl
loop
fnstcw
fwait
lret
popl
pop
mov
pop
mov
fwait
mov
aaa
dec
mov
test
jl
and
adc
addr16
add
scas
cmc
mov
add
sub
les
mov
mov
add
dec
out
or
imul
push
addr16
xor
jae
inc
cmp
fidivl
fcomp
cmp
outsl
aas
xchg
fsub
fstp
in
and
sbb
and
cmp
fdivrl
inc
les
xchg
and
aad
and
add
test
xchg
out
loop
adc
outsl
lods
pop
loop
or
mov
fiadds
fidivl
jo
bound
and
mov
mov
xor
mov
mov
mov
mov
push
jmp
fs
popf
repnz
xor
int3
sub
pusha
jbe
xchg
jg
pop
jo
mov
lock
scas
call
rcrl
sbb
loopne
inc
mov
mov
sbb
roll
movsb
push
mov
test
sub
in
adc
stos
and
push
mov
loop
add
js
es
mov
repnz
push
sahf
mov
aas
dec
mov
not
dec
lea
cmp
lret
jle
mov
andb
outsl
mov
daa
mov
and
clc
inc
pushf
and
cmpsb
out
mov
push
push
imul
inc
dec
adc
or
sbb
stos
stos
gs
cmp
andb
mov
push
xor
jle
divb
adc
mov
jo
in
sub
test
sahf
mov
jae
daa
and
add
out
cmpsb
shll
call
add
pop
orb
pop
mov
ja
stc
int3
sbb
add
cwtl
fsubs
insl
jno
jmp
mov
scas
lods
into
call
lods
adc
xor
jg
lahf
xchg
aam
test
mov
lcall
push
jo
jle
dec
add
inc
clc
xorl
dec
nop
push
adc
dec
fbstp
xor
cmp
jecxz
mov
fnstenv
in
pusha
or
cmp
sbb
sbb
inc
sbb
push
mov
or
sub
inc
push
aaa
jnp
imul
imulb
add
pop
mov
loopne
push
mov
sbb
xchg
jmp
or
ja
std
test
xor
loopne
into
sub
idiv
inc
fidivs
loope
sub
psubw
mov
xor
sbb
sahf
fists
cmp
ljmp
jbe
test
cmp
dec
xchg
hlt
xor
andb
add
mov
xchg
call
push
andl
or
or
xchg
add
and
incb
pop
shrl
cmpsb
push
lret
rcrl
clc
jo
pop
xlat
int
mov
add
test
pop
xor
cwtl
pop
std
xor
das
sbb
cs
popf
mov
or
mov
dec
daa
ret
xchg
dec
inc
icebp
cltd
fistpll
sbb
imul
push
jle
mov
out
pusha
push
stos
dec
int
dec
stos
lods
mov
cwtl
dec
cmpsb
mov
xchg
inc
jmp
jmp
pop
mov
stos
addr16
xchg
into
dec
sub
rcl
dec
pop
fisubs
adc
and
xor
sub
push
dec
dec
sub
pop
out
call
and
js
pop
imull
testl
lods
sub
mov
popa
xor
imul
hlt
cwtl
mov
adc
or
leave
add
scas
into
jae
stos
xchg
sub
movsl
insl
and
and
addl
rcrb
scas
je
sub
mov
std
add
mov
pop
nop
or
dec
mov
and
pop
aam
add
xchg
mov
dec
jno
xor
cmp
cli
and
stos
pop
adc
fbstp
lods
imul
adc
xlat
stos
mov
add
int3
cmp
adc
andb
addb
pop
ljmp
dec
xor
cmp
and
jne
add
rclb
test
mov
in
sub
pop
pop
cmp
lea
stos
dec
cltd
aam
push
arpl
adcb
enter
sub
mov
mov
fwait
insb
xor
faddl
and
add
push
mov
add
mov
add
ljmp
movsb
add
jge
sbb
stos
lret
mov
cmp
add
ret
addr16
adc
push
dec
xchg
mov
je
sub
pop
les
mov
addr16
xchg
in
push
stos
xlat
jno
pop
test
subb
lahf
inc
pushf
stc
fs
cmpsl
sbbb
fs
dec
rclb
pop
mov
xorb
fsubs
or
sbb
ss
cld
mov
xlat
fcmovnb
mov
ret
adc
fnstcw
fimull
cmpsl
adc
js
movsb
cmp
test
cmpsb
xor
sbb
and
loope
lahf
mov
push
mov
insl
imul
ss
inc
sub
mov
fbld
mov
xor
sbb
inc
rolb
insl
aaa
push
xchg
das
mov
pop
adc
lods
push
mov
inc
sahf
scas
cltd
pop
xchg
insb
sbb
popf
xchg
ds
aaa
pop
ret
nop
test
rorl
popa
xchg
les
dec
fwait
pop
in
jns
ss
repnz
mov
fnstcw
je
sbb
sbb
or
je
push
out
dec
pop
addl
scas
rcl
inc
or
das
lret
xor
arpl
hlt
popa
pop
jb
xorb
sahf
xor
fstpt
jl
hlt
or
pushf
aas
mov
xchg
aas
add
out
pushf
sbb
ljmp
push
xchg
cmc
xchg
pop
push
xor
nop
xlat
mov
cld
sbb
lods
add
xor
jns
cmp
lods
xchg
xchg
push
je
push
gs
rcl
inc
jno
jle
or
jo
int3
rolb
loope
ljmp
aas
das
adc
push
into
mov
das
sub
xchg
imul
add
inc
cmp
ja
insb
insl
xlat
jae
sub
jmp
repz
jno
xchg
pop
fstpt
or
add
adc
daa
aas
in
sarb
daa
test
gs
add
mov
mov
movsl
jns
sub
jl
outsl
addl
cmpsl
mov
jl
adc
jg
shlb
int
dec
xchg
negl
xchg
fldt
ljmp
dec
shll
cmpsb
or
adc
clc
loopne
dec
adc
inc
movsb
sbb
daa
sbb
mov
jns
mov
into
mov
stc
or
pop
xchg
and
jecxz
dec
repnz
mov
lods
in
shrb
cmp
fstps
mov
xchg
in
insl
shll
mov
lahf
clc
enter
mov
sub
cmp
mov
sub
inc
imul
jo
push
pop
fdivrs
ret
mov
cmp
mov
and
lods
in
or
int
mov
xchg
es
push
push
xor
add
xchg
jle
xor
scas
jl
push
data16
sahf
and
sub
xor
adc
es
xor
neg
sub
sub
jne
dec
inc
xor
xor
push
js
rcll
test
add
out
dec
out
inc
movsl
scas
push
add
out
subl
outsb
addr16
pop
jecxz
adc
mov
hlt
je
call
jg
popa
cmp
pushf
inc
fstps
mov
xor
xchg
xor
repnz
push
pop
outsl
pop
out
mov
xor
sub
cmpsl
adc
movsb
lcall
inc
cld
sbb
icebp
pop
enter
fistl
in
mov
push
in
insb
test
into
cs
or
fstps
mov
sub
xchg
cmp
sub
lret
push
lret
pushf
stc
mov
xor
xchg
scas
ss
pop
fisubrl
test
in
sarl
hlt
mov
push
mov
mov
cmc
fsts
lcall
sti
out
out
jg
cmp
scas
or
ja
in
fnstenv
outsl
fcompl
dec
mov
test
sub
cmp
dec
mov
scas
and
dec
jg
popa
jb
push
mov
mov
addr16
loopne
cwtl
xor
call
fidivl
shr
and
mov
adc
sbb
xchg
je
xlat
inc
cli
jp
into
pop
and
sbb
adc
in
scas
nop
lcall
cmp
in
add
outsb
scas
outsb
fwait
dec
test
adc
sub
sarl
inc
aaa
into
lods
aam
lret
out
lret
loop
mov
rorl
out
xchg
sbb
jae
scas
add
xor
push
out
xor
xchg
lods
jb
mov
xor
mov
pop
jmp
cmp
cmp
cmpsb
push
sbb
cmp
jae
pop
adc
mulb
mulb
ds
push
mov
pop
iret
fcmovnb
sub
int
jge
pop
pop
sbb
mov
stc
mov
fldcw
add
or
or
in
or
dec
push
js
mov
add
jbe
jmp
push
mov
adc
jns
sbb
push
pushf
sbb
fidivs
mov
sbb
call
sti
scas
dec
inc
lcall
pop
aas
in
lock
jl
idivb
lock
repz
pop
aas
scas
xchg
xchg
mov
sub
mov
out
adc
das
xchg
aam
mov
or
aaa
push
jo
sub
lods
add
mov
push
dec
dec
nop
cmp
fdivrs
sub
xchg
inc
stos
sub
xchg
dec
dec
cmp
inc
cld
fcoml
mov
repz
icebp
loopnew
in
popa
jne
adc
mov
mov
nop
loopne
sbb
rolb
sbbb
mov
out
mov
scas
das
int3
imul
fxch
arpl
cli
mov
jno
dec
jmp
hlt
dec
sbb
xchg
ja
jnp
jmp
xor
test
test
aas
cli
aas
popa
inc
shll
or
push
push
outsl
and
outsb
stc
dec
push
add
xor
or
jne
mov
ljmp
fsubrs
jp
xchg
mov
pushf
add
faddl
test
bnd
fisubl
inc
push
mov
mov
xchg
ss
jg
ftst
int
add
jmp
stos
movsb
mov
stc
daa
xor
inc
das
movsl
push
mov
ds
push
out
daa
ja
mov
push
push
and
or
mov
clc
and
cmpsb
lods
sbb
sbb
scas
pop
ljmp
daa
pushf
leave
aas
pop
mull
pusha
call
and
pop
sti
sbb
mov
mov
mov
je
loope
filds
xchg
or
xchg
or
sub
daa
sub
sbb
data16
inc
or
pop
inc
outsb
xchg
sti
inc
rorl
jae
jle
and
mov
ret
push
popa
mov
dec
mov
and
fdivl
mov
or
stos
xor
push
inc
js
jae
jle
cs
fmuls
ss
cmp
repz
push
jns
xor
or
shr
dec
and
jp
mov
jae
ljmp
fwait
loope
addb
pop
jae
stos
sbb
sub
mov
das
jecxz
and
xchg
xor
imul
xor
subl
in
pop
aaa
push
inc
je
int
sbb
aad
lret
sub
hlt
mov
jmp
mov
pushf
inc
dec
js
mov
xor
mov
jle
int3
push
xchg
jl
imul
sbb
sub
and
bound
xchg
cld
xor
std
mov
nop
push
ljmp
shr
cmc
pop
dec
cmpsl
adc
inc
pop
mov
scas
sbb
jecxz
mov
jmp
jno
pop
mov
xorb
inc
inc
in
insb
sti
into
cld
push
cli
xor
std
jno
sub
int
imul
cmp
cmp
sbb
add
mov
sub
pop
xchg
mov
add
adc
dec
stos
and
push
sub
mov
mov
test
scas
mov
push
scas
mov
push
bnd
call
push
inc
mov
data16
das
push
ss
daa
lods
movsb
loopne
mov
movsl
in
dec
mov
jnp
pop
enter
mov
add
sbb
aam
std
push
out
mov
mov
cmp
cmp
orl
pop
ficoms
adc
pop
lret
das
push
mov
add
cmp
sar
imul
das
or
cmpb
xor
mov
std
out
std
lock
sbb
or
bound
jge
mov
adc
jmp
or
out
mov
hlt
jbe
rclb
or
mov
push
ljmp
xor
test
data16
cmc
frstor
mov
pusha
dec
push
jo
cwtl
and
rcr
jno
in
jge
out
pusha
sbb
sbb
cmp
push
repz
pop
jmp
lock
jo
test
arpl
andb
inc
sub
fbstp
cmp
push
mov
outsb
icebp
push
pop
subb
pop
xchg
sbb
xor
cmp
mov
fmulp
mov
xlat
mov
inc
mov
jne
adcb
shll
jbe
and
fnstcw
lret
xor
inc
mov
xchg
mov
outsl
cltd
mov
dec
movsb
leave
sub
test
das
mov
test
sub
das
add
popf
in
out
dec
mov
ljmp
scas
aam
adc
sub
pop
push
jo
mov
imul
js
xchg
daa
ret
aaa
add
sub
imul
cmp
add
sti
jmp
mov
sbb
xchg
ds
out
jno
sub
bound
rcrb
push
add
fisttps
mov
adc
fnstcw
mov
jecxz
xchg
add
das
js
jbe
adc
hlt
pop
push
cmpsl
mov
dec
adc
in
shll
daa
push
movsb
xor
adc
adc
jno
cmc
sti
and
call
and
mov
sbb
cmc
xchg
or
cmp
inc
fcoml
mov
adc
lahf
mov
push
jbe
jbe
push
xor
lods
mov
push
outsl
test
fldenv
inc
pop
test
inc
cmpsl
mov
mov
fmul
push
out
pop
icebp
dec
mov
dec
test
in
adc
push
pop
ror
jl
test
divb
pop
dec
in
stos
pop
shl
daa
setae
mov
jecxz
mov
add
shl
inc
lcall
push
dec
xorl
in
aam
ret
mov
movsb
rorb
adc
mov
xor
insb
xchg
mov
lahf
test
in
loope
mov
jo
lods
inc
jb
inc
and
mov
pop
xor
mov
jnp
jbe,pn
mov
das
imul
sbb
and
cmp
clc
out
mov
push
xchg
pop
mov
push
nop
jnp
cmp
lcall
and
mov
movsl
fbstp
add
cmp
add
cmp
push
fwait
fwait
inc
xchg
xchg
xlat
fsubl
pop
negb
movsl
iret
mov
mov
lock
pop
ret
and
mov
fisttpll
rorl
inc
pop
push
iret
push
add
hlt
xchg
pop
dec
arpl
insl
fldenv
dec
cld
dec
mov
scas
dec
sbb
decl
or
or
stc
xchg
imulb
mov
idivl
xchg
add
cli
xchg
ret
ds
in
jl
fsubs
test
pop
lret
add
cmp
add
lods
fsubrs
dec
in
or
sub
in
push
fstpt
mov
pusha
rcrl
cmc
jl
pop
in
jno
sbb
jge
insl
lahf
repz
cmpsl
add
adc
push
mov
repz
or
add
adc
jnp
shll
out
into
inc
ljmp
cmp
mov
outsb
push
xchg
cmc
in
lcall
hlt
cmpsl
in
jge
jne
cmpsl
ja
push
les
add
lds
and
out
popa
ds
orb
add
daa
jo
movb
out
test
les
mov
add
sahf
jge
cmpsl
loop
lret
cmp
xlat
pop
or
cmp
imul
pop
inc
xchg
mov
orl
fsubr
mov
add
sti
sub
je
lock
xchg
cmc
sub
and
lret
add
xor
push
push
sbbb
xchg
xor
rol
fdivl
int
cmc
lods
jecxz
js
je
adc
cwtl
mov
push
arpl
ss
or
jb
repz
cmp
mov
data16
scas
je
xor
xor
outsb
ret
sbb
jae
xor
imul
shll
cld
test
pusha
or
push
xchg
in
shl
xor
add
daa
xor
push
scas
insb
ret
in
mov
push
mov
repnz
mov
xchg
dec
cmp
jmp
sti
cmp
fldcw
movsb
leave
dec
and
or
pop
int
and
sbb
push
daa
xor
imul
and
jle
icebp
or
mov
fcoml
test
cmc
cwtl
jl
push
out
or
mov
mov
or
leave
icebp
xchg
jl
popa
push
out
fwait
out
xor
test
hlt
addr16
ds
rol
mov
mov
mov
jge
loop
mov
loop
mov
pop
push
cwtl
adc
sarw
dec
dec
in
mov
push
jl
adcl
inc
gs
test
mov
stc
lea
xor
pop
orl
xchg
rolb
aas
mov
xchg
push
orl
xchg
jo
mov
daa
xor
mov
push
xchg
dec
packuswb
imul
push
push
mov
subb
sub
cwtl
addl
or
cld
push
sub
std
push
xchg
outsl
iret
dec
add
jb
pop
ss
mov
or
mov
add
dec
orb
fidivs
xchg
adc
inc
addr16
and
mov
pop
push
xor
inc
rclb
xchg
inc
dec
in
test
das
push
xor
dec
adc
sbb
cmpsl
pop
into
sub
std
inc
fidivl
mov
fwait
jp
pop
mov
and
test
xor
outsb
cwtl
mov
jb
lret
lret
pop
pop
lret
add
cmp
add
mov
les
fsubrs
dec
mov
les
lock
cmpsl
sbb
pop
arpl
pop
jne
leave
stc
lea
dec
or
loop
lret
xorb
adcl
mov
addl
addr16
iret
nop
shlb
test
jge
pop
ficompl
fsubrp
pop
and
jp
mov
and
or
xchg
ljmp
cmp
mov
fsts
int
cmp
lcall
imul
sbb
add
cmp
mov
mov
cld
outsb
xor
push
fsubrl
mov
das
imul
cld
je
sub
daa
aaa
add
mov
popf
shl
in
jae
lret
pop
lahf
jno
xorb
fcompl
xorb
enter
mov
adc
lret
pusha
fidivrl
cmp
adc
dec
cltd
sbb
loop
dec
jg
xchg
push
repz
xor
andl
dec
mov
pop
in
arpl
jnp
xchg
inc
ja
mov
aad
arpl
or
jl
lods
xchg
hlt
sbb
je
push
pop
cmp
dec
aam
xchg
fcmovnu
loop
mov
lcall
fimull
call
adc
xlat
and
mov
rcrb
mov
dec
pop
out
stos
inc
mov
xchg
shrl
lahf
add
iret
jmp
sub
inc
xor
shrl
pop
je
cmpsl
hlt
ds
adc
push
cmc
nop
lcall
or
fcompp
in
testb
xchg
xlat
cwtl
std
int
iret
mov
and
mov
pop
mov
adc
inc
xor
sti
mov
ljmp
pusha
cmp
gs
mov
fistl
mov
ljmp
int3
ret
inc
aaa
rclb
jne
push
sub
or
xchg
mov
xor
lds
inc
mov
pop
fcoms
dec
xor
sub
inc
mov
mov
mov
or
sti
popf
jl
or
sub
mov
fnsave
inc
imul
adc
mov
fst
loop
in
incb
xchg
stc
or
out
mov
fsubrs
insb
jnp
fwait
mov
sbb
fidivrl
or
pop
rcll
test
jb
cwtl
sub
and
imul
adc
xchg
test
jge
lcall
mov
fmuls
jmp
ljmp
loope
jo
je
add
xchg
les
lds
test
and
pop
mov
pop
jb
cmp
fimull
mov
jno
clc
sub
push
cmpsb
js
mov
mov
dec
push
daa
sbb
popa
cmp
scas
pop
xor
adc
jae
bound
dec
add
fildll
mov
roll
ds
clc
jle
fcomip
push
into
jne
daa
leave
cmpsl
mov
les
jl
test
repnz
and
mov
pusha
into
cmp
pop
lret
aad
push
ja
cmp
jo
and
fwait
rolb
in
sbb
push
loopne
stos
xchg
mov
aam
aam
popf
jl
mov
xor
call
jne
es
pop
add
push
xchg
mov
push
sub
pop
mov
jnp
imul
sbbb
mov
test
jg
jb
add
cli
fdivr
std
mov
xlat
insb
or
aas
xchg
pop
ljmp
and
jnp
xchg
subl
pop
jae
cmc
fsubs
inc
mov
inc
dec
out
cwtl
js
rcll
push
pop
fdiv
lock
inc
sbb
jg
call
or
mov
lret
and
pop
push
adc
adc
clc
nop
shll
xlat
js
push
xchg
xlat
cwtl
xchg
and
mov
scas
pop
sbbl
jge
movsb
xchg
sub
pop
repz
lcall
cmpsl
data16
pop
imul
cs
shll
and
xchg
stos
pop
out
pop
push
shrl
testl
outsb
ljmp
dec
cltd
or
inc
out
lock
push
mov
popa
data16
push
les
or
out
adc
inc
push
pop
into
jae
inc
xor
out
cltd
cmpsb
mov
dec
stc
and
loopne
ja
jle
cmp
jae
mov
fsub
imull
in
into
addb
push
xchg
pop
cmp
pop
xor
test
andl
dec
jp
jbe
rcrb
jp
sub
fisubrl
cmpsb
add
divb
jmp
push
mov
push
fsub
pop
ds
pop
ret
inc
lret
inc
loop
sub
clc
addr16
pop
cs
das
shl
sbb
hlt
and
xchg
in
sub
daa
dec
xchg
inc
out
std
js
cli
fnsave
lret
xor
pushf
out
sub
jmp
pop
pop
sarl
adc
or
jb
dec
aad
sbb
rolb
jae
xor
imul
or
xor
ds
clc
jg
popa
xchg
fdivrl
dec
mov
or
or
cmp
pop
adc
insb
mov
mov
das
fisubl
push
loopne
in
sub
sbb
popf
mov
push
insb
push
jp
dec
gs
sbb
cmpl
mov
ss
mov
or
xchg
xor
insl
cltd
pop
sbb
dec
sbb
xorl
pop
or
outsl
loope
fmuls
xchg
sbb
cltd
pushf
loop
pop
popf
push
sbb
inc
popf
mov
das
dec
xchg
add
mov
or
cmp
clc
out
and
pushf
inc
nop
inc
xchg
or
aam
xor
mov
adc
in
xchg
hlt
movsl
jl
mov
fisubl
sbb
xor
punpckhwd
lea
ljmp
adc
loop
push
add
adc
xchg
in
push
pop
dec
pop
int
mov
sbb
icebp
mov
jb
test
jl
fdivp
mov
mov
mov
xor
adc
xchg
xchg
xchg
ret
push
pusha
or
addps
fcomp
loopne
int3
xor
fstps
nop
adc
and
mov
les
dec
dec
and
sbb
sub
mov
xor
dec
clc
popa
dec
jae
xchg
or
hlt
mov
add
pushf
add
sbb
sub
sti
imul
lock
imul
and
push
cmc
aas
cli
nop
notb
sub
bound
mov
aas
cmp
cmp
or
push
ja
fnsave
xor
push
adc
sbb
add
add
fisubs
clc
scas
xor
add
popa
addr16
movsl
push
insl
inc
xor
adc
mov
scas
lock
stos
roll
fsts
into
lahf
add
push
pop
jns
out
inc
lock
cmpsl
jae
xor
xor
imul
pop
dec
roll
leave
test
sbb
out
ss
movsb
mov
imulb
cmp
jbe
inc
pushf
stc
aam
pop
aad
xchg
lret
mov
in
push
aas
jg
ljmp
daa
inc
pop
leave
lods
mov
mov
lret
mov
aad
mov
mov
shlb
fldl
pop
or
xchg
sbb
push
and
adcl
cmpsb
xchg
push
add
ret
add
sub
mov
loop
jns
int3
jmp
xchg
cmp
mov
lds
sbb
jge
cwtl
pop
pop
fidivl
adc
push
pop
pop
stc
jbe
adc
das
aam
lcall
mov
xor
pop
mov
jle
ljmp
pop
or
ds
jge
mov
push
jge
mov
jecxz
ljmp
add
cwtl
std
cmp
jl
sbb
sub
insl
pop
mov
jl
lahf
add
and
mov
rorl
cmp
lods
and
fmul
inc
sahf
add
push
jnp
imul
ja
sbb
out
imul
jb
fwait
pop
ja
sbb
cmp
cmp
stos
pusha
scas
dec
test
orl
aas
or
bound
gs
mov
movsl
lds
jg
cmp
testl
fisubrs
sbb
cmp
arpl
adc
mov
jo
int3
sbb
inc
repz
stc
cmp
push
add
ds
fcmovne
add
test
sub
out
mov
lret
in
pusha
adc
repnz
repz
ja
repnz
jne
ret
jecxz
scas
push
jns
negl
fcmovu
test
mov
outsb
sub
xchg
inc
mov
imul
repz
test
fildll
sbb
jge
pop
xchg
pop
orb
xchg
aam
roll
mov
out
pop
and
dec
dec
cli
popf
addl
mov
sub
xlat
ret
insl
int3
cmp
shrb
sti
jl
ret
mov
lahf
push
adc
sti
sub
std
std
xchg
les
enter
cld
out
pop
sbb
add
add
pop
mov
jae
gs
pop
sub
mov
dec
nop
imul
sub
add
push
pop
and
and
rclb
pop
in
fdivs
repz
xchg
lcall
and
pop
inc
pusha
pop
loopne
sbb
xchg
aaa
sbb
clc
lahf
jne
jo
mov
push
jnp
jle
xor
pop
leave
pushf
xor
shlb
out
adc
sub
mov
bound
adcl
imul
xlat
adc
mov
icebp
in
dec
jl
xchg
push
lret
sub
fdiv
sbb
ret
pop
movsb
mov
xchg
mov
rol
inc
aad
lret
leave
dec
int
ret
faddl
xor
push
xchg
into
jmp
test
mov
shlb
jl
sub
jo
pop
mov
or
and
dec
mov
cmp
imul
push
jnp
xchg
xor
jmp
lret
fwait
dec
imul
or
adc
and
sbb
sbb
jmp
pop
jle
push
mov
inc
pop
dec
out
movb
cwtl
jmp
into
sbb
insl
jl
cmp
mov
and
and
jle
jae
inc
andb
mov
add
daa
cmp
xlat
popa
in
fcmovnu
aam
push
ror
xchg
fstpt
or
cmc
mov
and
or
call
mov
or
cs
lret
and
popf
add
pop
mov
xor
jnp
mov
pop
popf
cld
and
xor
or
pop
cmp
xor
test
sub
ljmp
dec
mov
jns
inc
sbb
mov
jg
mov
pop
sti
das
and
mov
lret
jbe
iret
lcall
stos
sub
and
pop
cmp
mov
mov
push
mov
or
xchg
in
scas
lock
sbb
pop
and
mov
fiadds
in
movsb
sub
dec
enter
sbb
aad
out
or
add
imul
jp
int
insl
or
pop
cmpsl
stos
fwait
xchg
scas
ficomps
sbb
cmpsl
xchg
pop
stos
notl
jge
xchg
mov
dec
fmuls
cmc
sbb
cmpsl
ret
push
jns
xor
lods
push
lret
stos
and
pusha
jnp
jno
ficomps
dec
mov
sub
inc
jne
adc
xchg
dec
sbb
cld
pop
jg
scas
mov
jns
dec
cltd
cs
add
stc
jmp
call
mov
mov
movsb
out
push
icebp
xor
stos
mov
sbb
lods
jno
pop
inc
sar
add
pop
xor
sbb
sub
into
lret
mov
pop
mov
ljmp
push
in
fadds
xorl
orl
ret
pop
pop
push
in
push
fadds
cltd
ret
xchg
or
test
adc
push
mov
fsubl
ljmp
or
imulb
jnp
sbb
sub
fs
rcl
adc
dec
xchg
xlat
add
arpl
xor
xchg
sbb
sarb
and
jge
xor
sub
aaa
fldt
int
xchg
js
fidivs
jae
dec
lret
jg
movsl
div
push
lcall
mov
adc
imul
xor
inc
pushf
inc
mov
bound
je
es
shll
cmpsb
adc
bnd
push
cmpl
dec
notl
cmp
xor
ret
push
imul
addl
int3
push
jbe
enter
inc
dec
add
in
dec
andb
les
pop
fidivrl
mov
sub
cmpsb
xor
adc
mov
xchg
push
push
jmp
xchg
stos
mov
mov
and
xor
lods
std
add
pop
test
push
lea
daa
stos
ljmp
pop
sbb
cmp
pop
push
or
imul
addb
inc
sub
es
or
into
adc
pop
in
in
fwait
sbb
cmc
xchg
push
xchg
add
sti
addb
pop
or
pop
ja
loop
xchg
lahf
outsb
pop
or
mov
mov
xor
mov
add
push
gs
mov
inc
call
adc
sqrtps
and
out
mov
cs
add
or
jae
lods
mov
ret
xor
mov
scas
xchg
or
xchg
mov
mov
push
push
lret
cmp
leave
cmp
in
subl
adc
stos
dec
cli
je
jle
xor
repnz
cmp
mov
mov
mov
xchg
cltd
ret
aad
divl
lcall
push
sub
aad
mov
bound
jne
pop
je
dec
hlt
addr16
or
sub
test
xor
stos
es
xchg
repnz
mov
xchg
sub
mov
jno
inc
sbb
imul
cmp
cltd
daa
xorb
rolb
test
popa
mov
test
xchg
mov
lds
push
mov
sti
mov
adc
push
clc
repnz
shrb
cwtl
inc
nop
or
outsl
orl
sbbl
and
lret
fs
add
push
dec
cwtl
cs
das
push
cmpsl
out
js
or
fmul
push
inc
push
adc
mov
mov
jg
pop
and
roll
pop
and
cmpsl
xchg
pop
xlat
inc
xor
rcr
lods
cli
cmp
xchg
xchg
dec
pop
jno
imulb
fnstsw
lods
sub
repnz
and
fwait
xor
test
push
lret
push
insb
mov
data16
stc
adc
imul
ss
lahf
push
lret
mov
adc
xchg
sbb
sub
insl
sub
lret
es
mov
sub
test
jns
adc
pop
jnp
cmpsl
data16
cs
dec
cli
pop
pusha
sbb
jmp
dec
or
das
adc
fiadds
fistl
xor
jno
jecxz
mov
lods
sbb
repnz
arpl
mov
push
push
cs
xchg
je
es
inc
cmpsl
jnp
xor
or
jns
call
bswap
icebp
mov
cmpsl
test
mov
push
roll
popa
test
movsl
xchg
cmp
jl
mov
and
cmc
jecxz
stos
fs
xchg
cmp
lods
xorb
fisubl
mov
in
or
add
mov
repz
jp
xor
cmpsb
pop
pop
and
xchg
ficompl
ds
xlat
mov
push
inc
sbb
xlat
inc
shrb
in
fucomip
in
dec
or
ret
jmp
lcall
and
adc
mov
and
push
jecxz
in
add
jo
jnp
repz
std
xchg
inc
mov
push
movsl
pop
xchg
rcr
cmpsl
addr16
mov
xchg
sahf
repnz
adc
sbb
outsb
inc
mov
outsb
fistl
push
cmp
leave
jb
jge
lods
jp
je
pop
je
sbb
mov
dec
sbb
and
lret
mov
xchg
fsubrs
push
les
mov
call
repz
dec
mov
inc
stos
jge
mov
mov
sub
test
pop
cmpsl
test
scas
fldcw
push
ja
shlb
stc
pushf
adc
loope
sbb
pop
xchg
cmpb
sub
push
js
popa
push
inc
scas
add
pop
in
xor
clc
mov
dec
mov
adc
mov
push
mov
stos
je
lea
dec
stc
lea
push
mov
les
rcll
lods
sub
dec
xchg
xor
mov
mov
adc
xor
int
push
cwtl
into
mov
out
addr16
cli
sub
sub
sub
sahf
push
cmp
mov
les
fimull
cwtl
push
movsb
mov
mov
jb
adc
lock
mov
hlt
jb
mov
or
cmp
mov
sub
and
cld
mov
int3
push
xchg
cmc
filds
jnp
mov
xor
dec
das
jo
push
scas
jb
jmp
mov
push
arpl
dec
adc
cmp
pop
push
cli
lods
fcoms
sahf
stos
mov
or
out
test
jp
repz
jmp
leave
call
or
out
aam
fcompl
fwait
mov
pop
push
es
mov
mov
leave
fnstcw
cltd
sbb
addb
jmp
adc
push
lds
mov
fwait
cmpsl
lds
mov
std
sbbb
mov
cwtl
fisttpl
test
and
out
sahf
cmp
xor
mov
jl
xor
fidivrs
in
add
adc
inc
fstpt
push
mov
mov
jae
int3
add
push
das
dec
xchg
xor
and
and
nop
out
lret
rolb
jno
int
or
dec
sti
repz
daa
js
cld
push
pop
stos
stos
sub
movsb
sahf
xor
push
jnp
push
or
cmp
push
dec
and
pop
xor
popa
pop
bound
testl
jae
mov
lds
cmp
jo
xchg
mov
imul
sbb
pop
pusha
push
pop
push
imul
mov
push
lret
mov
mov
jle
aam
inc
pop
sbb
and
sbb
pop
pop
cs
sbb
divl
mov
hlt
int
or
cwtl
sbb
jl
sub
mov
dec
imul
lahf
xchg
inc
cli
sub
dec
xchg
subb
dec
sub
pop
sbb
es
aaa
pop
andl
push
cwtl
adc
add
mov
pop
mov
in
subl
cmp
inc
xchg
push
pop
pop
mov
cmp
insb
jge
nop
je
mov
pusha
push
ret
test
mov
add
daa
pop
pushf
call
outsl
sub
hlt
push
add
test
aaa
test
mov
bound
movsl
insb
jnp
sbb
js
or
and
lret
addr16
adc
ljmp
xor
pop
xchg
mov
fidivrl
in
iret
pusha
mov
aam
daa
sti
mov
mov
das
test
add
in
insb
test
and
lods
movsb
jno
ret
or
sbb
lcall
sbbb
mov
xor
sub
pop
or
data16
hlt
icebp
xlat
mov
repz
mov
push
lods
dec
and
arpl
mov
jl
xchg
mov
inc
mov
stc
mov
repnz
shlb
and
sub
aad
jg
or
lds
jp
pop
dec
arpl
fs
ret
negb
insb
test
sub
cmp
sti
das
sbb
push
xor
jo
arpl
loope
jle
push
cmpsb
and
or
xchg
lea
into
sbb
jg
or
jnp
lea
add
cmpsl
xlat
das
xchg
rcrb
repz
test
outsl
add
addl
or
lods
popa
dec
int
aam
addl
loopne
push
lcall
bound
cmpsb
in
jmp
and
loopne
pop
inc
pop
addr16
lds
jle
adc
add
bound
jg
xor
fwait
xchg
push
mov
movsb
subb
arpl
dec
mov
repnz
popf
cltd
lret
out
jl
cmpsb
arpl
add
fiadds
lret
iret
clc
je
shl
stos
sub
pop
dec
jbe
icebp
jg
clc
pop
das
adc
repz
sahf
aam
mov
cs
out
sub
dec
lea
adc
dec
int
cmc
fcmovbe
sub
clc
pop
in
or
jbe
add
mov
jo
shll
rol
inc
add
cmpsb
sub
adc
lods
and
jmp
loop
xor
or
adc
mov
inc
adc
movsb
xchg
dec
adc
mov
je
movsb
push
arpl
lds
pushf
js
push
jbe
scas
cmpsb
lods
push
jno
popl
jae
jne
jg
mov
mov
cmp
andl
cmp
into
and
xor
xchg
and
dec
jb
cmpsl
ja
test
xor
mov
in
jb
scas
ss
jg
incb
pop
push
in
movsl
or
inc
push
rcr
jae
jns
xor
cs
add
les
hlt
lcall
lock
pop
scas
xchg
bound
xchg
pop
pop
mov
add
addr16
sbb
pop
fwait
push
xlat
pop
scas
fcmovb
jecxz
xchg
cld
iret
or
lods
std
sub
in
in
add
jp
cmp
jns
xor
xchg
mov
ja
add
popf
shll
cmpsl
and
xorb
fwait
jnp
or
sti
and
imul
sbb
cmp
mov
jnp
mov
outsb
out
pop
mov
push
cmp
jp
in
mov
adc
test
fdivrs
jne
pop
xor
aaa
insb
lcall
dec
in
or
mov
or
lods
cmp
dec
popa
mov
lret
rcr
sahf
fmuls
jp
cmpsl
mov
mulb
push
mov
arpl
and
jl
mov
bound
xlat
outsl
sub
or
add
scas
movsb
dec
mov
dec
out
clc
cmc
adc
fcmovnu
or
xor
pop
sbb
mov
mov
mov
pusha
mov
jmp
cltd
mov
aam
adc
dec
fisttps
rep
imul
std
pop
pop
mov
shll
mov
sub
jmp
xchg
xor
mov
daa
jg
mov
ret
xchg
ffreep
mov
je
adc
outsl
xchg
into
mov
pop
insb
fsubrs
fsqrt
mov
pop
push
loop
dec
mov
jno
cmp
das
shll
and
loope
cmp
shl
inc
add
fwait
xchg
out
test
je
kmovb
into
push
pop
or
mov
lods
mov
aad
mov
rorb
or
xor
add
insl
or
jmp
xchg
xor
mov
and
pop
aam
xchg
pop
ljmp
inc
into
adc
ja
pushf
movsl
inc
mov
outsb
out
shrl
outsb
push
in
ja
loope
adc
adc
adc
frstor
and
cmpsl
adc
cmp
lods
cwtl
bound
das
test
sub
push
std
sbb
outsl
outsb
sarl
ficoml
rcrl
fsts
in
lret
jo
test
int
scas
movl
pand
dec
ss
jecxz
fwait
push
mov
andl
adcl
dec
imul
or
sub
cmp
mov
scas
push
xor
shl
and
xor
add
fmull
or
mov
pop
cmp
mov
xchg
mov
daa
xchg
mov
mov
bound
push
int3
sbbb
mov
out
mull
or
es
dec
push
fisttpll
pop
jno
jp
mov
cmp
in
xorl
sti
or
adc
stos
enter
jge
xor
mov
ficompl
movsw
add
cli
push
ret
ret
cmc
push
xchg
rorl
mov
ljmp
add
fwait
loop
flds
mov
imul
xchg
pop
jns
aas
xorl
lods
mov
imul
fbld
mov
dec
jae
dec
sub
mov
mov
das
lcall
repz
push
mov
pop
add
cmp
in
jge
push
lods
push
addr16
mov
gs
push
into
jp
inc
stos
jle
adc
scas
push
lahf
push
pushf
jle
fnstsw
inc
movb
push
mov
aaa
fcmovb
test
mov
dec
push
lea
in
ja
sti
stc
insl
pop
popa
jecxz
jecxz
lahf
iret
imul
orl
fbstp
jle
xor
xchg
fdivrs
out
sub
in
mov
or
cmp
lcall
mov
xorl
jno
mov
ds
mov
dec
hlt
iret
pusha
daa
add
outsb
nop
xchg
jmp
sub
sbb
int
cmp
ds
ss
add
and
or
bound
mov
out
es
mov
iret
lock
cli
aad
or
jne
leave
lods
push
clc
add
mov
xor
test
jmp
out
movsl
add
dec
scas
add
sbbb
add
test
mov
cmp
movsb
mov
inc
es
xor
or
arpl
mov
cmp
enter
sub
and
xor
xor
sbb
lahf
mov
mov
inc
out
inc
inc
mov
arpl
mov
ja
or
add
pop
mov
pop
sub
in
cmpsl
sbb
roll
and
mul
push
jp
or
xchg
or
inc
cmpsl
or
aam
add
inc
clc
sbb
xchg
xchg
xor
add
imul
and
or
test
cltd
movsb
adc
xor
mov
jg
rcrb
je
mov
add
mov
popa
gs
sub
popa
sbb
inc
mov
mov
cmc
fstps
into
es
or
push
dec
add
lea
and
add
fs
inc
adc
cs
and
repz
mov
sbb
lea
xchg
jecxz
sbb
and
adc
mov
mov
cmp
push
sti
orb
outsl
lret
subb
std
mov
clc
xor
cmc
aaa
pusha
push
mov
in
add
mov
aas
or
cmpb
test
test
ss
xchg
sub
aam
std
mov
dec
andl
pop
in
mov
clc
mov
add
cmpsl
cmpb
filds
and
jl
inc
sbb
mov
mov
in
mov
mov
dec
mov
adc
sbb
and
mov
sbb
insl
addr16
sbb
aas
or
pushf
mov
and
dec
xor
and
imul
test
aaa
push
adc
inc
cs
mov
lods
out
loopne
out
cmpsb
int
mov
add
and
stos
sbb
inc
sti
mov
stos
aam
arpl
push
dec
jnp
fistpll
mov
sbbl
or
mov
xchg
inc
mov
and
lret
and
mov
jb
or
mov
aad
adc
pushf
ja
mov
mov
cmp
iret
xchg
pop
daa
jge
or
dec
jecxz
pop
vpmulhuw
mov
cmp
imul
lock
xlat
jge
in
pop
movsl
xchg
jl
jg
loopne
pop
rol
jb
add
xchg
xchg
call
lret
jecxz
fisubs
adcl
inc
out
aaa
hlt
loope
icebp
out
xor
adc
dec
fxch
stos
pop
pop
data16
fimuls
mov
push
or
stos
or
and
xchg
aaa
fists
ljmp
lds
loopne
push
add
adc
or
arpl
fnsave
mov
shll
xor
add
out
xor
sub
inc
mov
xchg
shlb
mov
fadds
sbb
les
orl
adc
push
shll
loope
lds
jle
sbb
cwtl
ja
mov
out
mov
ljmp
or
sti
sbb
jle
in
dec
push
xchg
add
pop
cmp
push
imul
dec
int3
subb
sbb
mov
and
or
outsl
dec
iret
in
std
xchg
cwtl
mov
iret
fcomps
sub
xchg
and
pop
sbb
test
aas
or
add
pop
sbb
mov
mov
pop
xchg
push
outsb
pop
push
sahf
sarb
cs
pop
cmp
out
pop
imul
mov
mov
pop
dec
mov
int
aam
fldt
sbb
mov
jne
cld
mov
sub
cld
xchg
into
push
popa
outsb
je
test
scas
loop
lods
shlb
mov
test
pushf
lds
or
inc
push
out
add
and
mov
test
dec
lds
mov
add
dec
push
imul
pop
cld
and
mov
sbb
mov
fcomp
lods
sub
push
sub
push
notb
sub
sub
sbb
dec
pop
push
mov
lds
cltd
push
sbb
scas
std
mov
xor
mov
cmp
mov
xchg
bound
jns
cli
or
movsb
mov
imul
sti
dec
lods
out
cltd
jmp
lret
sbb
pop
fscale
cmp
imul
push
retw
xchg
and
sbb
clc
xchg
mov
pop
outsl
movsl
jbe
add
xor
je
sahf
in
pop
jns
mov
xor
and
push
and
jp
rorl
or
adc
sub
mov
sbb
test
outsl
loopne
jmp
push
pop
in
repnz
outsl
sbb
shrb
jecxz
adc
mov
adc
or
rorb
mov
pop
movsb
adc
gs
dec
mov
test
push
lods
rcrb
sub
dec
cli
test
jp
xor
ljmp
jl
loop
or
push
fwait
fsubrs
nop
jns
scas
and
mov
xchg
sbb
sub
cltd
aad
xor
cmp
mov
in
push
push
test
subl
out
imul
ss
imul
addr16
pop
xor
shlb
lret
rcr
xor
mov
pop
stos
ja
cli
or
sbb
xchg
inc
jne
ds
push
ret
lahf
add
icebp
dec
adc
inc
mov
div
push
pushf
mov
ss
outsb
add
outsl
out
jb
push
cmp
ljmp
cmpb
test
mov
test
or
idivb
dec
nop
mov
test
mov
xor
dec
fisttpll
cs
int
push
dec
cmpsl
jae
sbb
sbb
pop
fcoms
push
movsl
rcrb
cmp
lret
jo
ljmp
xchg
sub
rcr
mov
cld
lret
push
mov
aas
xor
pop
cmp
loope
call
jl
xlat
adc
frstor
adc
xor
scas
clc
push
dec
xlat
dec
mov
fcoms
mov
lret
sbb
jl
out
insb
sub
insl
loop
dec
je
lea
aas
int
cmp
mov
push
mov
dec
inc
inc
xorl
arpl
mov
fcmovne
out
fisttps
icebp
inc
push
add
jns
mov
jle
pop
test
dec
popl
dec
or
adc
add
jle
jno
push
popf
loope
popf
pop
dec
or
xchg
mov
int3
dec
fistps
xchg
fldenv
aam
jg
rcl
dec
adc
xchg
in
cltd
lea
f2xm1
add
sbb
pop
and
jne
sub
fyl2xp1
aas
pop
mov
mov
push
mov
push
popf
cs
loope
fs
movsl
and
and
cs
and
adc
xor
daa
pop
lds
jge
subl
mov
pop
xchg
cmp
in
insb
popw
fiadds
mov
insl
xor
shll
lds
dec
subl
gs
xchg
jmp
mov
aas
loopne
cmp
imul
scas
jg
pop
sarl
pusha
mov
outsl
pop
inc
int3
dec
aam
push
test
add
ret
cmpsb
test
dec
push
fdiv
daa
pop
out
shll
pop
icebp
mov
and
stos
lods
movsb
mov
je
mov
mov
xor
add
mov
mov
js
xchg
jb
pop
icebp
pop
jae
mov
pop
lds
repnz
mov
jb
lods
xor
fisubl
jne
add
popf
test
xchg
seta
aam
rclb
sub
push
roll
and
sbb
or
pop
add
lock
mov
clc
outsb
insl
push
adcb
aas
repnz
jns
rorb
fisubrs
sub
insb
clc
jns
lock
data16
sti
andb
test
lods
pop
mov
cwtl
hlt
out
adc
jmp
loopne
or
add
sahf
adc
loope
sbb
adc
jmp
in
jae
inc
mov
or
jns
or
or
and
cmp
inc
or
in
in
sbb
sahf
xor
shlb
jns
push
sub
inc
fwait
out
call
daa
sub
sub
inc
dec
dec
inc
jl
ja
test
jle
int3
repnz
and
nop
jb
adc
rcl
xchg
push
push
cltd
cmp
test
xor
push
mov
addb
subps
in
scas
xchg
sbb
xchg
sub
movsb
inc
sbb
es
cli
mov
mov
icebp
jecxz
rorl
lds
fsts
cmp
add
lock
mov
js
movsb
inc
aas
outsb
dec
jbe
fidivl
dec
pushf
popf
cwtl
add
popf
jae
and
pop
jecxz
dec
mov
sahf
outsb
jecxz
dec
push
jns
lds
pop
pop
enter
arpl
out
sub
push
or
jecxz
mov
fmuls
push
out
mov
xor
mov
mov
enter
fstpt
ret
repz
pop
out
or
pop
add
roll
adc
mov
repz
or
pop
cmp
xchg
jle
gs
xchg
mov
test
fiadds
add
inc
divl
mov
push
insb
loopne
xchg
jbe
pop
rorl
sbb
fildl
mov
bound
jle
test
ja
imull
inc
inc
in
rcll
hlt
lods
add
lahf
pop
outsb
xlat
pop
jbe
push
cmpsb
mov
popa
fistpl
cmpsl
mov
push
xor
xchg
sub
rcrl
stc
adc
jns
insl
cmc
test
pop
popf
xor
pop
push
leave
aam
sbb
sub
xchg
cwtl
sub
mov
adc
sar
test
lods
stos
cmp
jne
ret
dec
pop
shlb
stc
dec
hlt
sub
aad
and
not
mov
jno
and
mov
jmp
adcl
lds
jbe
cli
xchg
in
mov
mov
mov
cmpl
inc
mov
hlt
pop
arpl
daa
roll
jno
mull
mov
mov
int3
xchg
mulb
push
mov
or
xor
lea
movsb
push
jp
pop
xor
mov
pushf
fdivrp
in
add
imull
add
imulb
pushf
add
inc
xchg
cmp
xor
or
js
adc
scas
cli
nop
jo
sahf
fiadds
jb,pt
add
sbb
mov
leave
or
out
adcl
stos
fadds
mov
dec
adc
jmp
dec
adc
fldl
sbb
nop
fwait
adc
inc
out
daa
mov
mov
mov
imul
mov
incl
jmp
shll
jbe
dec
rclb
mov
pop
sarb
xchg
mov
adcl
mov
rclb
or
lods
movsl
xor
pop
arpl
push
loopne
div
jmp
cmp
sahf
add
in
adc
shrb
cli
inc
mov
mov
pushf
mov
std
jmp
dec
jmp
cmp
cmp
add
pushf
mov
xor
int
lcall
inc
push
or
xor
insl
dec
les
cmc
push
sub
daa
mov
jle
shr
xor
dec
mov
das
mov
jge
pusha
stos
iret
and
add
orb
add
sub
mov
add
sbb
xor
shlb
mov
dec
jae
inc
or
pop
push
sbb
negb
and
push
loope
popa
push
in
jno
pop
jb
or
ljmp
sbb
cmpl
ja
and
xchg
sbb
xor
stc
addr16
jge
push
sub
fmuls
jb
scas
insl
sub
popf
jle
icebp
sub
and
outsb
loope
cmp
por
push
adc
cs
jle
repnz
mov
popf
cld
repnz
je
je,pt
scas
push
xchg
inc
xor
push
sarl
fimuls
mov
push
pusha
inc
add
and
sbb
sub
pop
mov
adc
xchg
repnz
loopne
cmpsl
mov
push
stos
or
push
stc
sbb
push
ja
adc
test
sbb
lea
mov
sbb
sbbl
mov
and
mov
addr16
ds
outsb
mov
xchg
xchg
jne
ss
jbe
add
and
dec
dec
inc
call
clc
cli
xchg
xchg
lcall
mov
fdivrp
aam
jl
lahf
and
iret
out
mov
dec
fcmovnb
cmp
ja
aad
ret
repnz
push
shll
pop
mov
popa
jae
xor
pop
mov
mov
loope
add
pop
loop
sarl
loope
les
dec
imul
je
cmp
xchg
hlt
call
out
jmp
pop
cmp
adc
cmp
xchg
stos
pop
cmp
mov
aaa
mov
xchg
bound
mov
scas
sbb
or
ret
test
std
leave
js
fisttpll
xchg
lea
lock
inc
adc
cwtl
mov
mov
and
pop
out
jg
loopne
aas
repnz
cltd
xchg
and
in
mov
xchg
fwait
and
mov
pop
jmp
cmpsb
in
hlt
pop
and
push
push
cmp
pop
dec
jbe
push
rorl
jbe
lods
xchg
loopne
pushl
sar
xchg
loope
out
jmp
xchg
lahf
cmp
insl
xchg
fdivs
or
imul
xchg
outsl
sub
mov
push
inc
cs
push
jb
dec
dec
adc
imul
add
xchg
ja
std
adc
das
adc
and
push
out
dec
sbb
arpl
pusha
mov
push
xor
ja
jp
rol
add
fs
and
mov
dec
sub
sub
and
arpl
mov
jmp
shr
and
push
sub
movsb
pop
dec
jp
bswap
dec
scas
xchg
fwait
outsb
sub
adc
out
scas
sbb
cltd
push
cmp
adc
xchg
dec
pop
rorl
inc
push
xchg
push
sbb
sbb
sub
aas
das
cmpsb
or
mov
adc
xor
xchg
mov
mov
mov
and
jmp
adc
test
mov
sti
pop
and
pop
jp
or
aad
or
mov
mov
dec
inc
dec
aad
or
push
mov
psubb
loope
or
movsb
in
pop
mov
mov
add
push
decb
mov
gs
in
sub
pop
lods
mov
pop
in
mov
sarl
mov
xor
ljmp
jno
adc
int3
out
pusha
inc
and
cmp
adc
dec
dec
inc
adc
xchg
xor
jecxz
or
xlat
jecxz
into
outsb
sahf
mov
adc
gs
adc
cmp
loop
ret
pop
scas
mov
pushf
aad
iret
repnz
or
or
xchg
xchg
lret
popa
xchg
cmpb
mov
les
lock
sub
imul
stos
or
jno
inc
or
fsubr
cmc
insl
cmp
and
sahf
rcrb
mov
mov
loop
ljmp
cmp
xchg
sbb
daa
iret
inc
add
xchg
in
in
sarb
cmpsb
bound
and
xorl
imul
lds
dec
pop
xlat
lds
negb
adc
inc
js
rorb
mov
push
shrb
jmp
or
loopne
icebp
cmc
push
fistpl
and
jnp
push
imul
sub
aaa
push
fwait
and
xchg
scas
movsb
pop
jae
shrl
add
loop
mov
inc
sub
or
sahf
bound
pop
aaa
pop
sub
push
loop
xchg
aaa
mov
sbb
dec
mov
loopne
inc
jg
inc
xchg
mov
enter
xchg
jmp
jmp
mov
sbb
shlb
fildll
jg
dec
and
scas
aam
sar
fsubl
lds
or
mov
les
mov
test
inc
fsubrp
xchg
jbe
fimull
cmp
fists
addl
movsb
or
cmp
dec
jae
sbb
cmp
std
add
in
push
pop
mov
sahf
fs
cld
popa
jns
cld
mov
xchg
xor
jle
pop
cmp
jecxz
cmp
movsl
push
into
push
and
test
out
push
in
pushf
lock
sbb
jl
pushf
das
pop
lea
pop
sbb
add
loop
aam
stc
mov
add
mov
push
pusha
fs
pop
jge
add
pop
out
jnp
pushf
push
shlb
mov
into
test
dec
inc
sbb
test
push
sbb
pop
repnz
lret
jmp
mov
lcall
mov
push
ret
out
xchg
leave
pop
fldl
aaa
pop
sub
pop
loop
and
lock
cmpsl
mov
movsl
inc
orl
mov
cmp
in
or
jmp
mov
adc
out
and
and
jbe
fbstp
in
iret
adc
lahf
mov
dec
ds
incb
push
dec
mov
sub
inc
incl
rcrl
cmp
adc
sbb
adc
fsubs
loopne
pop
jp
out
add
outsb
stos
jecxz
jbe
xor
fsubs
mov
pop
outsl
adc
nop
jecxz
mov
mov
inc
repnz
out
shll
daa
jle
aas
cmc
push
test
arpl
std
mov
hlt
sub
xchg
inc
mov
cmp
js
pop
xor
jp
jecxz
jne
push
scas
cli
lahf
aad
xchg
iret
testb
sar
inc
inc
xchg
rcr
scas
push
nopl
in
sub
fisttpl
mov
sub
or
lret
aas
aad
pop
fsubrl
test
or
in
imul
dec
out
sub
stos
es
insl
pop
ss
dec
stos
adc
aaa
out
gs
or
cmc
or
sbb
test
std
inc
addb
jns
dec
pop
dec
sub
jecxz
push
add
mov
jle
push
cwtl
cmp
aad
mov
int3
mov
addb
hlt
jno
out
addr16
sbbl
or
push
fndisi(8087
add
repz
insl
mov
sub
nop
mov
mov
int3
pop
and
inc
fisubs
shl
mov
and
push
nop
test
loop
inc
add
mov
fimuls
jg
jp
pop
sarb
out
leave
sub
rol
dec
test
stos
aad
xchg
xchg
pop
jmp
imull
inc
mov
sub
imul
jbe
dec
xchg
sahf
xchg
add
ljmp
cltd
lret
xchg
mov
stc
insb
out
mov
jl
insb
outsb
stos
in
inc
mov
pop
add
out
mov
pop
testw
sub
jns
mov
or
mov
xor
cmp
lcall
leave
mov
jl
sbb
ja
pop
jmp
push
roll
iret
cmpsb
mov
sbb
fldpi
fsts
push
jp
xchg
ret
mov
ret
and
subb
inc
and
sti
sbb
fists
test
dec
imul
out
movsb
mov
xor
xchg
xchg
in
stc
xor
aaa
xchg
cmp
xor
orb
mov
test
clc
loopne
stos
and
adc
fdecstp
or
push
lret
arpl
into
mov
mov
insb
popa
cmp
pusha
popa
xchg
inc
int
fistl
xchg
lcall
or
inc
or
lret
and
sti
jbe
rorl
mov
ret
fimuls
push
lock
lret
or
sahf
cmovbe
scas
add
jmp
lahf
mov
jb
and
rclb
mov
mov
dec
sbb
jmp
das
inc
test
xor
pop
jle
cs
jbe
mov
dec
push
add
lahf
or
pop
lods
ljmp
mov
ret
insb
adc
test
inc
or
dec
stos
mov
pop
mov
xchg
push
aas
imul
or
inc
fiadds
fists
out
jae
jge
enter
push
push
aaa
dec
psubsw
mov
mov
sahf
insl
nop
jno
mov
cwtl
push
or
mov
push
push
xchg
mov
sub
scas
or
push
xor
icebp
jns
pop
and
cs
jmp
adc
test
repz
jp
pop
jb
addb
xor
jge
scas
push
sbb
add
sbb
xlat
cmc
loopne
scas
aad
inc
mov
rcr
inc
jecxz
scas
inc
mov
ljmp
sti
add
repz
cmpsb
ficompl
testb
xchg
sub
test
out
fldl
pop
popa
loope
cmp
jnp
adc
xor
pop
mov
mov
jl
or
push
test
les
mov
ja
fs
incl
cwtl
insl
adc
xchg
inc
cwtl
inc
pop
add
xchg
jg
int
push
push
inc
lock
mov
xrelease
enter
mov
push
je
adc
enter
adc
cmc
test
mov
cmc
dec
mov
arpl
push
mov
mov
pop
insl
mov
cmp
enter
sbb
adc
mov
mov
pop
jnp
mov
nop
add
insb
and
cmpsb
cmp
pop
xchg
fsubp
jae
xor
data16
mov
inc
lea
loope
cmp
gs
sub
push
das
scas
rorb
jg
xchg
ljmp
xchg
loope
sbb
sbb
cld
fcoms
out
xchg
sbb
xlat
divb
jnp
fisubrl
pop
jne
in
imul
pop
jle
inc
push
mov
jae
pop
pushl
cmpsb
mov
push
inc
insl
push
std
or
repz
cmp
clc
ja
adc
pop
sbb
ljmp
push
movsb
jbe
fucomi
adc
pslld
mov
test
dec
xchg
pop
push
repnz
push
not
pop
sub
mov
roll
xlat
ficoms
pop
int
fs
xchg
fists
pop
dec
inc
sub
insl
pop
mov
mov
mov
nop
jp
es
cmp
cmp
xor
ret
dec
scas
sub
test
int
and
ss
in
es
es
movsl
push
cld
lret
push
jnp
adc
cmp
dec
ret
mov
mov
or
dec
or
jae
or
shrb
pop
pop
dec
lret
adc
loope
movl
lahf
stos
das
ljmp
outsb
mov
cmpsl
aad
add
cli
jge
addr16
out
dec
and
bound
out
test
mov
lods
and
mov
loop
divl
ror
movsb
fistpll
xchg
addr16
dec
enter
push
lret
ret
xor
aam
and
mov
repnz
mov
mov
sbb
movsl
xor
testb
and
lahf
out
loope
jg
out
add
mov
pusha
shrb
rcrb
cs
js
mov
repnz
sub
in
sbb
jo
outsb
outsl
std
xchg
ljmp
jl
mov
mov
xlat
lods
add
jnp
jae
and
lods
movsb
add
icebp
dec
dec
lret
dec
inc
inc
push
or
mov
cltd
inc
pop
clc
gs
lods
lods
xchg
mov
mov
xchg
sbb
sti
dec
add
scas
push
mov
out
test
mov
push
test
pop
xor
cmpsl
add
xor
xchg
jb
jno
fxch
mov
lods
xor
js
adc
push
sbb
jns
push
jp
push
sbb
int3
into
rcrb
push
adc
jne
out
jmp
dec
adc
cltd
fmull
test
or
pop
std
int
leave
out
or
shlb
cs
loop
xor
mov
and
jbe
jb
sbb
stos
sahf
mov
xor
lock
sahf
loopne
xchg
in
xchg
call
cmp
mov
pushf
push
adc
jl
sub
and
sti
push
push
mov
into
in
mov
mov
rcl
dec
jb
inc
ret
cmp
mov
jbe
mov
sahf
sbb
shr
xor
push
mov
arpl
cmp
mov
nop
repnz
das
jbe
imul
mov
out
adc
jno
out
adc
rorl
cltd
cmc
cmpsl
dec
sub
enter
sbb
xchg
jecxz
xor
sub
in
pop
and
or
adc
push
xorl
fidivl
repnz
sub
and
fsubrl
sti
cmp
mov
lret
xor
mov
int3
out
sub
daa
sbb
test
sbb
repnz
pop
scas
test
xchg
push
cmp
adc
inc
mov
sub
adc
add
sub
inc
jo
pop
rcrl
sub
sub
and
stc
xor
pop
xchg
mov
lods
cmp
lock
lret
stos
bound
push
sub
cmp
mov
mov
out
push
pop
xor
cmpsb
cmc
prefetchnta
mov
mov
in
js
push
sbb
andb
jecxz
repz
jp
rcl
jmp
fwait
sub
rcrb
fs
test
mov
push
and
into
ds
or
push
sbb
push
test
jbe
mov
das
jno
mov
test
dec
out
test
test
push
pop
cmp
out
jmp
jge
clc
stos
int3
movsb
aaa
test
hlt
data16
lds
jp
add
cmp
lahf
js
sahf
fdivrl
mulb
or
add
stc
push
and
mov
test
fiaddl
outsb
mov
repz
lock
cmp
and
xor
fisttpl
aad
aad
into
push
popf
adc
andb
ljmp
push
jp
cmp
mov
clc
adc
std
cli
addl
scas
lods
or
adc
mov
inc
sti
or
push
pop
clc
inc
lods
insl
cmp
jecxz
rcrl
push
repz
push
jmp
ret
pop
fidivrl
sahf
loop
movsl
lods
aaa
or
mov
lret
mov
shlb
jae
test
pop
mov
aam
mov
icebp
pop
xor
lds
into
mov
fdivp
cmpsb
inc
es
mov
jno
pushf
adc
js
cli
js
xor
xchg
std
das
popa
sbb
pop
mov
adc
outsb
and
xchg
adc
sub
inc
add
pop
sub
push
ds
mov
mov
inc
mov
push
cli
movsl
push
xor
aam
mov
push
lods
dec
push
mov
in
out
clc
stos
and
fisttpll
int
cmp
arpl
xchg
stos
cmpsb
push
add
pop
imul
inc
or
lahf
dec
mov
mov
xchg
in
xor
push
bound
es
stos
iret
lahf
push
add
xor
or
leave
in
sbb
in
inc
stos
jmp
lea
fs
add
or
dec
iret
loope
cmp
xchg
xchg
ljmp
mov
mov
ja
mov
in
or
add
push
adc
enter
fildll
inc
mov
fdivrl
and
test
ds
call
jne
sbb
mov
fiaddl
ret
jg
stc
mov
movsb
xlat
mov
je
dec
stos
pop
sahf
push
dec
inc
pop
mov
fldcw
sti
xor
icebp
jns,pt
repnz
ja
fstpl
add
lods
fwait
xchg
mov
or
or
loop
xor
mov
or
mov
push
pop
aas
dec
cmpsl
mov
leave
shlb
mov
aad
cmp
jo
mov
pop
rclb
cmp
mov
out
stos
xlat
test
subl
pop
pop
pop
mov
adc
ja
aas
ss
inc
push
dec
sbb
mov
inc
rcrb
lret
cmp
or
cmc
notl
and
cmp
imul
push
or
cmp
es
or
dec
test
pop
shrb
test
pusha
jge
outsb
cwtl
inc
sbb
test
mov
in
fdivr
lods
jle
lret
adcl
pop
leave
push
jecxz
cmp
fmulp
and
out
and
orl
adc
aas
inc
mov
ds
test
push
inc
adc
push
dec
and
pop
sub
into
stc
cli
pop
sub
jno
mov
pop
push
push
xor
xor
adc
mov
mov
mov
inc
pop
or
jl
inc
and
sbb
cs
mov
add
add
scas
sub
imul
adc
out
lahf
mov
imull
cmp
int
ja
xor
sub
xchg
lds
mov
mov
adc
loope
cmpsb
cli
and
adc
pushf
xchg
push
leave
and
cmp
adc
mov
push
rcrl
fstpt
add
inc
push
sbb
stos
push
sbb
xchg
dec
push
into
sbb
aas
mov
cmpsl
pop
out
fldcw
in
roll
stos
add
mov
sahf
bound
cltd
mov
sbb
mov
push
push
inc
imul
orb
or
bound
pusha
pushf
jo
das
xor
fmuls
jecxz
push
rorb
outsl
jnp
inc
mov
dec
pop
xor
cltd
and
popf
dec
dec
push
loope
nop
xchg
xchg
add
jge
int3
mov
mov
adc
dec
loope
adcl
pop
cmpsl
xor
push
and
es
jno,pn
xlat
jb
ret
mov
lods
movnti
je
clc
pop
mov
jnp
xchg
int
mov
int
lcall
dec
scas
ja
push
cwtl
pop
sbb
mov
add
call
cli
es
ja
fisttpl
testl
ss
xchg
mov
inc
cmp
pop
jl
sbb
loope
dec
div
inc
push
rorb
cltd
jle
test
sub
test
xchg
inc
out
test
sub
jae
xor
not
cltd
cmp
or
shll
insb
mov
cmp
cmp
sub
lods
nop
xor
aad
imulb
push
xor
jno
mov
inc
inc
or
sbb
pusha
jb
lock
in
sbb
mov
out
mov
inc
and
mov
lods
sti
add
test
rcrb
movb
arpl
sbb
les
sbb
loope
xchg
enter
stos
push
hlt
test
inc
repz
sub
orl
mov
jo
fmull
pop
int3
and
in
cmp
dec
push
enterw
repnz
lret
mov
imul
inc
daa
dec
out
insl
hlt
outsb
popf
xor
and
int3
inc
cmc
add
mov
sub
xor
jl
pop
cs
scas
mov
dec
lds
mov
mov
into
mov
and
into
sub
adc
adc
shlb
and
pop
push
inc
push
cmp
cmpb
xchg
orb
mov
pop
ds
lea
inc
stc
outsb
es
in
mov
push
dec
cltd
xlat
repz
cmpl
jns
adc
int
in
jmp
mov
lret
jge
sarb
out
aad
push
add
cld
ljmp
or
dec
sub
xchg
or
add
es
cmc
enter
ret
sbb
rcl
xor
jns
mov
mov
sub
dec
mov
fcmovbe
mov
dec
jge
ds
xchg
mov
mov
push
sbb
jmp
ret
aas
arpl
insb
scas
fnstenv
jb
imul
cmp
mov
fucom
pushf
dec
test
fbld
pushf
add
imul
lret
cmp
lahf
mov
add
xor
mov
fisttps
out
imul
jb
add
sub
mov
or
inc
mov
inc
mov
shl
lds
stos
rcl
imul
out
in
inc
mov
jb
pop
adc
rorb
sub
inc
test
out
psadbw
jnp
xchg
adc
dec
jne
ja
xorl
out
push
add
fldt
cmp
call
cwtl
repnz
loope
inc
jae
push
mov
repnz
outsl
jae
push
jbe
jecxz
cmpsl
lahf
jg
scas
jne
aad
sarl
std
pop
rol
in
xchg
xor
mov
fnstcw
xchg
pop
push
push
outsb
sahf
mov
jecxz
outsl
out
push
aam
sahf
fadds
jbe
sub
sbb
ljmp
leave
xor
fisttpll
cmpsb
xchg
xchg
jbe
push
subl
adc
ret
push
rcrb
sub
ret
push
test
xor
cmc
leave
inc
adc
mov
scas
data16
divb
mov
sub
mov
xchg
rcrl
lahf
push
push
sub
movsl
gs
sahf
push
fimuls
jnp
xor
dec
outsl
adcb
xchg
and
mov
pop
leave
xor
int
es
push
jl
mov
or
imul
jmp
xchg
lahf
push
mov
aaa
int
aam
roll
je
and
mov
add
ds
pop
insl
pushf
rcll
jne
ljmp
xchg
jmp
sti
mov
jl
xchg
jbe
dec
icebp
icebp
gs
mov
dec
mov
pop
movsb
flds
push
inc
xor
inc
cmp
inc
nop
pusha
repz
ljmp
mov
outsb
add
rcr
in
out
loop
not
or
lds
add
arpl
xor
or
cmp
cltd
gs
int
add
add
stos
and
test
mov
dec
hlt
shrl
rcr
stos
pop
in
sbb
dec
and
mov
inc
push
fistpl
or
sub
jg
mov
pop
push
sub
lret
ljmp
sbb
mov
jecxz
stos
jecxz
cmp
mov
daa
movsl
mov
imul
btr
loop
arpl
xchg
inc
je
das
mov
sbb
and
into
inc
add
dec
jne
imul
or
dec
xor
push
mov
push
mov
push
mov
mov
add
inc
imulb
pop
in
mov
and
nop
lock
xchg
mov
xchg
cmc
xor
das
in
mov
cld
inc
test
std
out
add
jo
mov
xor
ja
cmpsl
dec
xchg
jp
mov
repz
push
fldt
or
je
sub
scas
xchg
xchg
cmp
pop
or
adc
adc
inc
inc
jb
lods
aam
ret
idivb
pop
add
xor
xor
inc
sub
push
mov
mov
into
jns
push
xchg
mov
mov
sbb
mov
push
push
out
cli
loope
test
xlat
inc
lahf
push
rcrl
sub
mov
ljmp
pusha
cmc
pop
hlt
mov
cli
push
sbb
nop
mov
push
xor
fldt
mov
push
icebp
arpl
xchg
dec
mov
enter
mov
mov
jp
repz
bound
inc
mov
pop
fstp
xor
adc
pcmpgtw
xor
icebp
fdivrs
in
mov
sahf
jle
pop
inc
xor
inc
add
sbb
sub
add
cmp
ds
jne
sar
mov
mov
repnz
dec
adc
sahf
icebp
jecxz
push
ja
arpl
mov
inc
cld
xor
bound
lods
mov
jne
mov
mov
adc
mov
push
cmc
in
jbe
sub
fadd
jp
aam
fisubrl
lea
cmp
cwtl
mov
pop
mov
enter
scas
push
inc
mov
daa
xchg
sti
sbb
add
imul
mov
gs
outsl
pop
add
push
pop
adc
test
mov
pusha
jno
jl
xchg
xchg
or
push
cmp
rcrl
sti
mov
je
in
and
outsb
xchg
push
adc
in
adcb
paddsw
push
or
add
inc
jnp
shrb
xchg
inc
jmp
out
mov
mov
mov
out
sbb
lock
ljmp
call
fldl
ljmp
xor
push
jmp
cmp
push
rorb
int
push
cmc
cwtl
inc
ret
dec
jmp
push
mov
test
add
jmp
mov
jmp
nop
xlat
cmp
fdivrs
sub
lcall
dec
arpl
xor
mov
xchg
notb
faddp
mov
call
ret
mov
pusha
scas
inc
stos
in
xchg
ret
hlt
fdivrs
ret
pop
or
mov
fidivrs
js
cmp
adc
addr16
popf
or
sarb
rcrl
mov
mov
mov
fsubp
ret
pusha
ljmp
les
test
mov
addr16
sub
rcll
xchg
test
int3
pop
dec
cltd
sti
sbb
fisubs
or
jecxz
test
cmp
inc
cld
fucomp
add
clc
inc
cmp
fistl
enter
xchg
daa
mov
aam
ja
mov
imul
sub
scas
jmp
mov
subl
mov
int
push
ret
mov
test
mov
aaa
rcr
mov
cs
cld
xchg
mov
xchg
cmpsl
dec
sub
imul
out
xor
and
es
mov
jl
fidivrl
std
stos
pushf
subb
movsl
cld
arpl
in
divb
pop
insl
pop
cmc
mov
sbb
mov
mov
sub
movsl
dec
mov
cmp
jg
push
js
pop
pop
inc
mov
add
ret
fstps
bound
negb
xor
jp
dec
sbb
jg
std
xchg
dec
sti
inc
repnz
xchg
push
shll
dec
jb
lret
xchg
push
mov
ljmp
int3
push
xor
jg
pusha
test
shll
ss
xchg
pop
xchg
orl
mov
mov
or
pop
push
pop
je
test
push
daa
ret
in
ret
mov
pop
add
icebp
je
cli
addb
pushf
iret
push
inc
pop
push
jno
fildll
aas
dec
pop
sbb
repnz
fisubrs
mov
xor
cmp
pop
xacquire
mov
inc
stos
or
push
mov
sub
mov
sahf
fists
adc
add
fldt
stc
fs
rcrl
lcall
test
xchg
sarb
leave
loopne
xor
jmp
movsb
sbb
pop
out
imull
sub
sbb
add
outsl
xchg
ret
data16
stos
cmpsl
sub
mov
xor
daa
rcrl
enter
pop
adc
icebp
nop
sub
and
jno
sti
and
jmp
out
sbb
test
pop
dec
mov
and
inc
adc
in
sub
lcall
xchg
pop
mov
mov
dec
loope
pop
sub
test
popf
je
jp
test
inc
cmp
addr16
scas
test
je
clc
and
pushf
outsl
popf
and
adc
rcrb
lcall
movsw
dec
push
out
test
xor
mov
aaa
push
sub
lcall
sarb
cmpl
mov
adc
dec
xorl
jmp
cmpsb
jno
adc
cmp
insl
and
mov
pop
mov
mov
incb
lea
loope
adc
pop
mov
and
sti
mov
aas
lock
jae
push
pop
xchg
lock
fstl
xchg
cmp
push
fsubrs
sbb
cmp
pcmpgtd
mov
and
fwait
iret
mov
jmp
adc
xor
pop
sti
sbb
enter
imulb
in
pop
loope
fcmovne
shrl
imul
jns
ja
xchg
and
pop
sarb
rorb
push
add
and
inc
jne
jge
fnstcw
pusha
mov
inc
or
aam
je
lret
iret
cs
xchg
rcrb
in
mov
outsl
cmp
lret
jg
jb
clc
leave
jno
jns
mov
das
xor
insl
jns
ja
or
in
into
fld
push
into
xlat
xchg
sub
inc
sub
fists
adc
sub
rcr
out
testl
and
push
cmpsb
inc
jno
aas
push
xchg
icebp
adc
sahf
cmp
les
xchg
dec
xor
shll
fidivs
mov
mov
call
add
push
cmp
or
scas
inc
sahf
repz
out
sbb
ret
in
add
dec
jge
lods
into
jb
inc
test
and
adc
sub
stos
inc
ss
mov
aaa
dec
jbe
ljmp
inc
cs
mov
nop
cltd
rcr
pop
scas
mov
leave
xor
xor
and
mov
loopne
xor
inc
xchg
mov
movsl
je
dec
jp
jle
sub
push
daa
jg
xchg
mov
inc
ljmp
movsb
test
addr16
inc
push
js
and
test
test
mov
jp
xchg
iret
sahf
andl
adc
icebp
jne
call
xchg
shrl
stc
adc
fildl
pop
sub
cmp
or
jmp
sarb
mov
out
es
inc
idivl
outsl
lret
sbb
mov
push
cs
es
sub
dec
mov
pop
inc
fmuls
or
adc
adc
fwait
dec
cltd
dec
push
pop
repnz
sbb
xor
scas
lock
leave
fiadds
fdivrp
aas
dec
or
mov
imul
insl
subps
xchg
and
cld
pop
or
mov
sub
cwtl
lods
sarb
cli
jnp
data16
or
js
cmpb
and
adc
push
push
daa
jnp
mov
pop
jb
and
add
repnz
sub
push
leave
sub
sbbb
sub
rcll
daa
and
inc
push
mov
pop
daa
mov
mov
dec
jns
arpl
scas
hlt
xchg
cmpsb
xchg
pop
xchg
cld
inc
mov
data16
push
inc
jp
popa
stos
add
shrl
imul
pop
mov
insb
hlt
aas
shll
jg
and
xchg
fs
inc
fcmovne
into
mov
imull
sbb
fldenv
xlat
sub
adc
lea
popl
shl
jge
sti
pusha
test
mov
or
sbb
push
adc
xchg
mov
cwtl
scas
push
adcl
stc
mov
call
lahf
dec
lahf
push
in
lock
repnz
xchg
xor
mov
inc
mov
and
mov
add
hlt
out
jmp
xchg
pop
mov
loopw
mov
xor
adc
adc
xchg
push
mov
push
stc
loop
ss
int3
mov
scas
loope
repz
loop
add
cmp
lods
pop
daa
shrb
decl
pop
add
inc
fs
add
pop
enter
push
adc
ss
mov
mov
out
pop
xor
xlat
mov
xchg
mov
mov
push
jmp
pop
dec
clc
lahf
fsubs
loope
push
jnp
cltd
fimuls
sbb
xchg
mov
mov
pop
mov
sub
fsubrs
push
aad
xchg
mov
jle
gs
push
rol
aam
cmp
das
xor
mov
jae
sub
xchg
sbb
xchg
and
sti
pop
mov
xor
lods
shrl
into
fcomi
pushf
push
movsl
and
cld
inc
js
sub
fisubrl
and
stos
leave
je
imul
fstps
jae
icebp
lods
sbb
inc
mov
sub
shrl
mov
pop
int
xorl
cmc
dec
push
aad
lret
pusha
xchg
cmp
xor
mov
jle
jne
xor
xchg
jno
xlat
dec
xchg
inc
cmc
inc
cmp
pop
je
xchg
mov
or
int
or
dec
jno
dec
and
mov
test
ja
inc
aad
and
cmc
fcmovu
popf
mov
je
enter
pop
aas
loop
or
out
inc
mov
push
nop
mov
shlb
inc
shrb
aaa
sahf
sbb
fldenv
mov
mov
imul
mov
adc
jo
loope
push
mov
sbb
sbb
nop
sub
mov
jns
mov
push
adc
in
sbb
in
fildll
pop
jge
out
enter
pop
pop
xchg
call
cmp
pusha
pop
mov
sub
pop
rcr
std
notb
in
mov
add
imul
cmpl
movsl
inc
inc
and
out
jnp
lock
std
cld
or
insb
sbb
adc
jns
icebp
lret
pop
sub
popa
ljmp
lret
dec
jae
add
gs
in
pushf
jno
dec
popa
sahf
insb
jmp
cld
fists
jmp
in
mov
out
out
frstor
dec
jge
cltd
leave
cwtl
pop
outsb
scas
idiv
loopne
jb
adc
pop
lods
inc
push
push
cld
pop
mov
lret
insl
icebp
adc
lahf
mov
icebp
in
adc
cmp
adc
or
cmp
mov
mov
test
inc
xor
xor
lods
push
leave
xchg
out
hlt
aam
jge
movsl
sub
stos
xor
mov
inc
lret
jge
hlt
lea
es
ss
pushf
push
cltd
push
jp
jae
movsb
or
push
and
test
sub
fs
jbe
sbb
sub
lahf
sub
or
pop
lds
cmc
inc
sub
add
into
arpl
mov
es
xchg
cli
test
mov
cmp
jns,pn
stc
jne
adcb
iret
pop
inc
inc
sub
fistpl
xlat
lods
jecxz
cmpsb
push
cmpsb
fs
cmp
jecxz
adc
sarl
test
movsb
mov
mov
sbb
daa
stos
pop
lock
jb
xchg
sbb
and
pop
xor
inc
cmp
mov
lret
fisttpl
adc
jecxz
mov
shll
push
lea
dec
jecxz
js
push
jae
dec
subb
xor
cmp
push
mov
cmp
cmpsl
dec
mov
inc
ss
test
mov
ja
fs
inc
push
decb
scas
lret
test
arpl
adcl
push
mov
imul
out
push
mov
push
out
cmc
retw
mov
adc
dec
xchg
or
jmp
imul
popa
rclb
sti
push
push
pop
and
sub
lretw
sub
lcall
sbbl
jno
or
pop
push
dec
nop
xor
pop
nop
mov
mov
imul
push
push
fsub
jl
dec
sbb
xor
adc
inc
xchg
mov
mov
lcall
lea
mov
pop
sub
stos
pusha
outsl
mov
mov
in
adc
es
dec
in
call
pop
adc
stos
mov
cmpsl
testb
imul
negl
sbb
out
push
mov
fwait
sahf
insb
push
movsb
lods
addr16
stos
jmp
loope
sub
adc
fsubrp
jne
push
cltd
stos
mov
pop
ja
mov
loope
fwait
cmp
test
adc
gs
xchg
mov
stos
outsl
dec
imul
add
lds
lret
or
mov
scas
dec
js
xchg
jmp
cs
iret
call
shll
loope
xchg
in
pusha
push
xor
aas
jp
insl
sub
imul
pop
sbb
mov
xchg
int3
jne
fpatan
aad
and
jo
lret
inc
sahf
mov
iret
stc
inc
insl
outsl
jmp
or
out
cmp
in
cmp
sbb
adc
aaa
xchg
rcrb
adc
inc
adc
jp
xchg
stos
jle
mov
cmp
mov
xchg
dec
jnp
lds
out
or
call
push
daa
popa
sbb
mov
pop
ja
stos
mov
test
aad
xchg
call
pop
scas
mov
mov
cs
cmp
inc
je
xlat
ret
cmp
add
or
mov
and
add
into
mov
xor
pop
rep
sub
std
pop
cmp
sub
mov
jmp
adc
idiv
add
jns
mov
dec
ds
imul
mov
xchg
xchg
lahf
lods
nop
and
cmp
push
jmp
loop
shrb
sahf
jbe
and
jae
dec
jle
sub
sub
mov
mov
lea
aad
sub
sub
mov
shrb
int
push
mov
xlat
and
xchg
addb
lea
roll
jmp
in
sbb
ficoms
test
adc
xchg
sub
dec
or
lods
cltd
icebp
out
movsl
pop
xchg
push
jmp
cld
nop
and
push
idivb
push
jge
push
adc
outsl
pop
adc
pop
push
out
inc
inc
sbb
pop
xor
dec
rcrl
sub
stos
out
xchg
test
jmp
shlb
pop
stos
xchg
cwtl
std
sbb
gs
mov
push
mov
adc
test
and
shlb
xchg
xchg
cmp
push
sub
mov
adc
add
mov
mov
jecxz
stc
in
sub
cli
mov
jmp
lock
add
int3
cmp
adc
imul
sbb
ljmp
sbb
aas
dec
nop
nop
add
xchg
jnp
decl
mov
repz
xor
cmp
movsl
jno
scas
dec
sbb
and
mov
jecxz
clc
lods
movsl
movsb
xlat
or
mov
aam
xor
popa
cmpsl
out
test
jno
mov
aaa
mov
lods
cs
test
inc
add
xchg
gs
mov
mov
insb
paddsb
int
cmpsb
sbb
daa
stos
mov
add
movsl
cmp
jb
les
fisubrl
lret
mov
lahf
sub
mov
addl
test
clc
fidivs
mov
pop
fnstenv
xlat
inc
and
lods
decb
and
push
jl
mov
ret
mov
mov
test
and
ds
push
mov
repnz
stos
and
faddp
sub
inc
push
cmc
mov
in
mov
imulb
stos
data16
sub
pusha
das
inc
clc
out
dec
aad
xchg
loop
push
repz
mov
jo
add
leave
sub
pop
rolb
out
sbb
pop
push
test
dec
mov
cmp
mov
aas
std
or
cmp
decl
out
testl
inc
lret
fisttpl
movsl
xchg
decl
repz
stc
or
cs
movl
roll
mov
stc
data16
sahf
imull
repnz
adc
cmp
jge
sub
out
push
outsb
lahf
or
aas
rcrb
jmp
fmull
jb
xchg
ficoms
mov
sbb
mov
inc
cmp
xor
jge
pop
pop
lods
fcoml
mov
dec
lock
movsb
jl
inc
out
xlat
scas
sub
mov
test
call
std
aad
cmp
fs
mov
and
jb
jp
fstpt
push
cld
popa
sahf
setae
xor
jmp
test
xor
loope
ljmp
int3
jno
add
ljmp
jnp
xor
adc
lods
xchg
fsubp
sub
push
mov
mov
data16
sti
fildll
icebp
out
jnp
sbb
inc
or
lret
mov
jl
loope
loopne
dec
bound
cltd
es
pop
xlat
push
call
call
lods
test
jnp
gs
rclb
int3
jg
jo
dec
mov
subb
xor
cld
push
or
in
ret
lret
negl
lea
jns
andb
mov
mov
cmp
outsl
dec
mov
or
lods
pushf
int3
inc
je
outsl
cld
cmpsl
cmp
out
cmpsl
sub
repz
xor
add
loop
jbe
dec
cmp
adc
fistpll
fs
pop
iret
out
outsb
in
in
aad
mov
inc
sbb
data16
repz
es
aaa
adcl
mov
xchg
subl
call
pop
dec
push
int
stos
mov
push
in
adc
lret
lret
mov
pop
call
enter
jge
jge
ljmp
cmpsl
add
cmpsl
in
or
mov
iret
mov
cmp
test
adc
and
xchg
fidivs
mov
shll
cmpsb
push
pop
loope
loopne
dec
mov
enter
push
sub
or
dec
add
lret
adcb
addr16
jmp
popa
clc
dec
or
mov
cmp
loopne
add
call
in
insl
fistpl
lock
fldcw
popa
rorl
xor
lret
lds
pop
imul
and
addr16
es
aas
jne
inc
das
hlt
inc
lcall
bound
mov
fisttps
outsb
aad
jne
push
imul
dec
stc
addl
fs
test
adcb
mov
icebp
dec
hlt
pop
ja
cmp
cli
xor
jl
inc
inc
xor
jg
adc
mov
xchg
in
and
adc
fwait
pop
push
mov
ja
sti
imul
call
mov
add
cmpsb
inc
pop
jns
xchg
mov
mov
mov
pop
push
addl
cs
mov
push
fildll
mov
js
imul
loopne
push
sub
xchg
sub
mov
loopne
mov
in
and
fwait
aam
pushf
lds
xchg
adc
push
subps
push
js
mov
outsl
xor
dec
adc
jp
iret
addr16
or
ljmp
add
clc
adc
shll
popa
adc
mov
add
fincstp
xchg
inc
movsl
dec
movsb
add
mov
or
mov
jns
jle
add
push
clc
push
leave
lretw
fsubrp
adc
les
dec
jno
mov
jne
push
mov
mov
shl
nop
mov
fwait
cmp
sub
jne
mov
dec
and
repnz
pop
lret
inc
lret
dec
insb
xor
jno
mov
xlat
idivb
pusha
daa
leave
sub
fstpl
xor
nop
mov
mov
or
or
add
aas
roll
push
add
addr16
out
and
fsubrs
call
push
and
sahf
bound
jb
outsl
lret
lret
mov
decl
push
jae
ljmp
int
xchg
and
hlt
aam
fsub
add
dec
cmp
call
je
mov
mov
push
adcl
data16
cli
dec
sbb
mov
in
sbb
pushf
xor
sbb
ds
cs
inc
movsl
xor
fstl
xchg
xchg
inc
cmp
repz
bound
lods
movsb
push
dec
or
xor
pop
stos
dec
pop
xor
mov
imul
mov
add
nop
popf
ret
push
sbb
aad
lret
and
xor
mov
sub
cmp
subl
int
movb
dec
divl
sbb
mov
sbb
push
mov
adc
mov
cmp
pop
xorb
inc
popf
andb
loope
cmp
iret
push
push
mov
into
inc
fwait
dec
icebp
mov
adc
dec
sbb
push
mov
ret
xor
fdivp
pop
leave
arpl
jle
repnz
into
ds
or
pop
mov
dec
dec
insb
xchg
ret
and
leave
dec
or
and
cmp
fcoms
or
nop
iret
sbb
imul
cli
jecxz
mov
aaa
rclb
inc
lods
pop
ficompl
adc
daa
int3
gs
adc
add
sti
pop
call
and
rol
or
ss
jne
inc
xchg
add
sbb
inc
sarb
dec
xchg
fldcw
jb
lret
and
arpl
out
sarl
cli
add
inc
mov
sub
mov
xor
addl
loop
cs
pop
and
pop
ja
mov
xlat
mov
fmulp
fmuls
adc
and
add
dec
dec
pop
cs
xor
cmp
mov
stos
xor
jp
cwtl
jl
into
in
repnz
jbe
pop
fs
mov
push
aam
loop
aaa
lods
jl
and
fwait
scas
mov
sub
add
cmpsb
mov
cmp
out
test
mov
ds
pop
js
pop
loope
aam
nop
push
rcrb
xchg
jl
mov
push
ds
ljmp
movb
or
jo
sbb
sbb
mov
jmp
xchg
gs
pop
sbb
jo
push
xchg
add
fwait
pop
jno
pop
and
mov
mov
mov
or
mov
repnz
cmpsl
fildl
mov
fistps
data16
pop
aam
xor
lea
lods
sbb
hlt
stos
jbe
dec
mov
lret
or
stos
push
stos
sar
sub
repz
mov
inc
mov
add
and
cmp
rcrb
xor
and
sbb
ret
dec
lods
je
je
addr16
adc
mov
pop
lock
or
xor
addr16
divl
imul
lods
xchg
outsb
add
push
push
pop
pop
pmaxsw
mov
xchg
add
jbe
dec
cmp
int
push
and
jge
add
mov
cmp
neg
aas
notb
sbb
mov
pop
sub
mov
popf
xchg
ds
cwtl
cmp
stos
mov
outsl
pop
shlb
pop
dec
shll
and
stos
pop
lock
mov
lcall
mov
call
dec
mov
in
xchg
mov
adc
push
inc
push
ljmp
cs
pop
and
outsb
sub
rclb
cmpsb
cmp
sahf
or
fadd
aad
test
adc
test
pop
js
dec
sbb
sub
lods
push
repnz
push
pop
out
pop
data16
imul
cmovae
sub
in
outsl
neg
pop
sub
lcall
fistl
lods
loop
mov
cwtl
mov
outsb
xchg
inc
or
xorl
sbb
dec
adc
testl
jg
repz
outsb
mov
adc
sub
cmpsl
outsl
or
cmp
mov
adc
ss
shrb
mov
cwtl
test
push
inc
and
popa
mov
in
insl
xlat
dec
mov
or
roll
dec
pop
enter
les
pop
mov
fcmovne
cwtl
sbb
xchg
divb
sahf
int
push
sub
dec
mov
or
stos
aad
push
insl
or
ljmp
inc
add
sbb
inc
fs
loope,pn
add
cmp
adc
cltd
mov
rcrl
sbb
daa
scas
push
inc
inc
inc
stc
push
shll
mov
stos
or
and
xchg
dec
xchg
jae
pop
mov
je
fbld
push
js
jb
lods
cld
push
mov
test
enter
push
flds
ret
or
or
nop
xchg
dec
mov
addr16
fs
sbb
or
call
sbb
mov
and
sbb
pop
cmp
mov
notl
xchg
mov
mov
xchg
imul
pop
jae
shl
pop
sub
daa
das
sbb
scas
inc
movsb
cli
fwait
inc
jle
push
xor
cltd
push
sarb
mov
sbb
cld
mov
add
pop
std
lret
sahf
mov
jno
and
xor
cwtl
mov
in
rorb
sbb
pop
cmp
xchg
sahf
adc
scas
pop
mov
mov
popa
into
mov
push
mulb
mov
mov
mov
enter
cmp
inc
or
sbb
pusha
dec
inc
bound
mov
cmpsb
xchg
cmp
mov
pop
popf
inc
cltd
loope
xchg
addr16
jae
scas
lock
jb
jp
mov
scas
roll
add
aaa
cmp
mov
call
dec
lods
imul
push
cmp
movsb
fwait
mov
xchg
pop
mull
cwtl
push
push
push
inc
dec
insb
loope
or
ss
lahf
mov
popf
sub
outsl
insl
and
faddl
sub
jle
mov
addr16
jbe
xchg
in
negb
jge
stos
movsb
aas
sbb
shrl
mov
movsl
cwtl
mov
data16
mov
push
shr
mov
ss
and
mov
outsb
jo
or
inc
mov
mov
das
loop
jns
xlat
imul
pop
aad
pop
stos
std
cmp
inc
adc
loope
cltd
mov
int
js
sub
and
fisubl
mov
push
or
inc
push
test
sbb
enter
jmp
shll
bound
das
sbb
outsb
lds
sub
and
jle
push
mov
fcom
fcmovnbe
out
gs
sub
pop
xor
mov
shr
fcomps
push
mov
leave
out
daa
imul
out
ja
mov
mov
sub
int3
jmp
cmp
sbb
bound
sahf
scas
xchg
dec
ljmp
and
and
ja
ror
pop
mov
push
aaa
xchg
add
pusha
mov
jbe
xchg
push
mov
mov
sbb
int
xlat
lods
scas
pop
adc
xlat
fimuls
cmpsb
mov
sti
mov
mov
mov
mov
inc
push
sbb
and
test
insl
sti
mov
sub
int
enter
cmp
ret
mov
rcl
add
in
cltd
adc
ffreep
bound
lods
adc
add
push
dec
inc
scas
add
xor
sub
inc
fdivr
mov
nop
mov
mov
cmp
xchg
iret
out
xor
ret
push
sbb
jmp
and
ds
sub
adc
ror
jae
fcompl
nop
loop
inc
cmp
scas
jle
shrl
pop
sub
les
lcall
sarl
sub
add
fldl
insb
push
fsubrl
sti
out
xchg
and
add
aas
lods
pop
pop
aam
call
or
mov
mov
stos
jmp
adc
inc
mov
mov
cmp
pop
xchg
xchg
and
js
fisubrs
push
jae
aaa
cmp
xor
sarl
or
mov
imul
mov
and
add
cmc
mov
ljmp
aam
iret
out
mov
mov
sti
je
scas
int3
pushf
cmp
push
cmp
mov
mov
sub
subb
lret
outsl
loope
lcall
pop
pushf
inc
sahf
xchg
es
shl
xor
mov
fmul
hlt
imul
cmpsl
xor
jge
jae
inc
mov
mov
and
les
jmp
jecxz
psllq
lahf
push
xor
sub
dec
test
add
sbb
dec
rcrl
es
out
adc
lret
leave
push
cmp
xor
xlat
pop
push
movsl
inc
sbb
paddusw
add
repz
jge
loop
xor
inc
jp
push
cltd
mov
test
adc
xchg
mov
loop
mov
movsl
mov
fistpll
dec
shll
testb
xor
pop
daa
cltd
cli
je
cmp
jno
shl
mov
and
or
add
add
out
pop
jae
push
adc
mov
push
test
mov
jne
mov
fistl
int
nop
mov
ret
mov
xchg
popa
dec
dec
mov
cmp
shrb
push
sub
adc
xorb
add
adc
fidivrs
iret
jp
mov
ds
jge
add
xor
repnz
cmp
fwait
jb
or
in
jmp
mov
pop
rorl
enter
int
mov
dec
jns
xchg
scas
xchg
sub
xchg
popf
cmpsb
mov
ja
dec
xchg
mov
xchg
cmp
inc
hlt
pop
push
xchg
clc
push
mov
dec
adc
test
add
adc
cmc
cmpl
fisubrl
cmp
push
mov
mov
mov
subb
mov
mov
jg
or
bnd
sbb
ds
in
mov
iret
pop
outsl
sarl
mov
and
mov
mov
popa
pop
jecxz
loope
add
movsl
pushf
cld
rorb
jae
fists
divb
aas
inc
outsb
sbb
lcall
sti
pop
negl
jno
rorb
dec
adc
insl
cmpsb
call
fistl
pop
add
lahf
xchg
in
xor
adc
enter
mov
dec
cmpsb
jl
pop
mov
ret
mov
jnp
adc
xchg
inc
and
and
sub
adc
xor
bound
xor
pop
icebp
mov
pushf
ret
pop
jno
pop
std
cli
into
mov
pop
shlb
iret
jl
lcall
test
cli
mov
in
mov
fcmovnb
je
cmp
push
cmpsb
mov
inc
push
add
mov
pop
movl
mov
cmp
xchg
lock
inc
xor
and
jmp
mov
mov
or
sti
fs
jns
xchg
sub
ret
shr
push
testb
dec
fadds
loop
lahf
out
outsb
fistpl
cwtl
pusha
jl
fists
push
test
jns
pop
cli
xchg
jno
lahf
xor
or
dec
mov
es
push
enter
xlat
cld
mov
mov
inc
nop
sub
repnz
out
push
pop
lock
push
filds
sub
inc
sbb
lahf
ss
mov
pushf
push
data16
repz
xchg
sub
cmc
dec
xchg
dec
mov
dec
bound
je
cltd
lods
test
cmp
sti
cli
and
push
iret
loopne
aaa
jecxz
xorb
adc
xor
sbb
cmp
jmp
xchg
mov
aas
and
in
jl
jbe
data16
insb
mov
pusha
je
adc
ds
cltd
repz
pop
pop
ret
jbe
cmp
out
mov
sub
ljmp
test
mov
mov
jnp
stc
gs
aam
add
scas
pop
push
movsl
mov
call
xor
mov
sub
pushf
cmp
sub
outsb
repnz
mov
icebp
gs
dec
or
add
dec
xchg
inc
les
ljmp
add
inc
xor
jno
out
clc
add
insb
fildl
and
push
xchg
lret
mov
sub
push
pop
dec
testb
das
ss
inc
ret
movb
cmp
inc
fistpl
jo
cs
cld
mov
mov
cmpb
hlt
cs
dec
sbbl
notb
cwtl
xor
xor
push
sub
subb
push
aas
roll
jbe
icebp
call
adc
ficompl
xor
cwtl
push
xor
imul
shll
dec
add
push
leave
aam
rcll
cmp
mov
imul
sbb
enter
insl
or
rcrl
pushf
pop
pop
push
jne
pop
xchg
pop
jmp
stos
scas
std
cmpsl
mov
push
adc
ja
js
imul
jo
dec
ror
jmp
shll
stc
mov
popa
dec
pop
mov
lds
fscale
mov
lods
jb
out
push
dec
mov
pop
xchg
cs
fsts
ds
outsb
repnz
dec
adc
jl
mov
stos
push
cmp
std
hlt
mov
inc
popa
pop
dec
xchg
mov
inc
or
popa
sti
ja
dec
dec
mov
sahf
negb
push
sbb
sbb
xchg
pop
rorb
jae
jns
loope
lock
hlt
sub
cmpsl
mov
push
std
sahf
aas
sbb
cmp
jo
add
dec
cmp
nop
sub
jno
test
pushf
lock
jecxz
cld
push
adc
xor
idivb
mov
push
fwait
xchg
or
or
aad
jl
push
insl
xlat
call
xor
pop
mov
dec
hlt
jmp
mov
adc
aam
mov
push
out
xor
test
pop
add
and
divl
adc
sti
lods
jb
rcll
pop
pop
inc
and
cmp
xchg
dec
sahf
lret
adc
push
out
mov
sbb
sbb
and
mov
cmpsb
push
test
cmp
adc
test
popa
sbb
jne
mov
xchg
jecxz
pop
sbb
fcmovu
sti
inc
or
int
push
sbb
push
mov
data16
rcl
stos
hlt
and
or
aas
push
rcr
adc
inc
xchg
pusha
adc
test
add
xor
rcl
iret
pop
add
divb
icebp
mov
and
jno
pop
inc
mov
xor
lock
jp
xor
test
pop
daa
dec
xor
test
push
fidivrl
push
fcomps
push
filds
cwtl
pop
ret
dec
lea
out
and
mov
das
adc
mov
inc
scas
or
test
rcr
jae
push
popa
jl
popf
mov
flds
inc
xor
pop
cmp
mov
lret
mov
cmova
jp
shrb
lods
outsb
movsb
arpl
dec
movsl
sbb
jmp
into
adc
sbb
lds
stos
xchg
in
lret
das
ja
loope
ret
xor
adc
leave
xchg
sbb
add
test
lret
fcoms
inc
mov
repnz
dec
daa
inc
js
clc
cmp
xchg
xor
aad
mov
mov
jmp
hlt
test
mov
mov
sbbb
popa
push
mov
repz
push
adc
ds
cmp
cmp
jp
jne
dec
xchg
fisttps
aaa
pop
jmp
cmp
mov
imul
jno
cmp
pop
push
sbb
mov
dec
ds
pop
push
add
inc
into
inc
mov
cmp
mov
and
mov
jge
sub
repz
xor
js
clc
std
cltd
ljmp
in
adc
jp
sub
pop
ret
mul
outsl
fmull
pop
add
jecxz
mov
push
sub
dec
loopne
and
jno
and
into
cmp
jo
and
test
dec
or
andl
dec
jg
nop
sub
test
mov
mov
cmp
int
cmp
pusha
dec
sub
jmp
cmp
mov
cld
lock
mov
sbb
cmpsl
mov
xchg
movsb
lahf
or
xchg
add
rolb
add
cmp
fists
mov
in
sub
cld
dec
jp
ficoms
inc
sbb
jl
ss
pusha
lods
mov
rcr
jle
xorl
lahf
js
je
les
packsswb
loop
ja
push
and
lret
cmp
sbb
inc
add
mov
lcall
dec
push
ret
orb
cli
nop
or
add
enter
dec
orb
cmp
movsl
sbb
and
int
xchg
out
xor
pop
repz
out
sarl
or
movsb
xchg
pop
leave
inc
std
int
sub
mov
pushf
mov
add
stc
push
add
push
jecxz
lea
pop
iret
pop
sbb
push
outsl
push
sbb
xchg
ret
pop
inc
dec
jecxz
jp
shlb
adc
cmp
lahf
mov
lea
and
jbe
stc
mov
xlat
mov
add
adc
insl
add
data16
xchg
shlb
test
shrb
xchg
or
xor
sbb
jmp
stos
test
mov
test
jne
pop
xchg
xor
into
in
jle
out
mov
dec
pop
cmc
jns
or
aam
dec
dec
sbb
aaa
push
nop
in
roll
jp
mov
mov
cmp
and
fsts
inc
jge
fdivs
and
es
mov
mov
ss
cmp
loopne
clc
aam
lahf
fisttps
mov
mov
jae
jns
out
int3
pop
and
sbb
mov
inc
outsl
test
ljmp
pop
add
xchg
inc
sbb
in
jle
mov
mov
outsl
cmpsl
and
in
fsubrl
enter
nop
mov
pop
aad
xor
sbb
pop
roll
out
xchg
pop
xor
cli
cwtl
sbb
cmp
setns
push
cmpsl
jmp
popa
xchg
sbbb
js
sbb
mov
fstpt
push
push
pop
cmp
xchg
rolb
fstps
mov
or
add
lcall
xchg
and
lcall
lret
clc
roll
shlb
les
sbb
insl
sbb
ret
mov
fdivs
call
fxch
out
cmp
mov
adcl
push
ret
mov
cmp
push
xor
popf
out
popf
push
mov
sub
ret
call
test
or
jg
push
sbb
push
jp
sub
sbb
inc
mov
jne
or
mov
mov
imulb
iret
lcall
stos
sbbb
pop
sbb
push
lahf
add
jbe
mov
loop,pn
in
sbb
pushf
jb
loope
std
ljmp
or
sub
nop
xchg
push
das
jbe
mov
xchg
mov
mov
enter
testl
xchg
cmc
into
mov
jb
stc
push
in
or
testb
cwtl
sub
adc
loopne
jbe
push
ret
es
and
mov
test
mov
in
nop
rcrl
jno
mov
std
gs
xchg
iret
push
cmpsl
push
jecxz
sub
jl
jecxz
xchg
outsb
imulb
shl
mov
fistpll
jge
pushf
cmpsl
jnp
xor
scas
adc
and
push
int3
stc
sub
outsl
xchg
data16
sub
xorl
jns
imul
cmpsb
mov
repz
scas
adc
mov
imul
movsb
sbb
push
aam
ja
fadd
rorl
insl
jb
push
movsb
mov
pushf
bswap
mov
mov
cmpsl
push
or
pop
adc
push
and
or
lods
jge
repz
mov
in
dec
out
fsubs
pusha
pop
dec
filds
push
ret
int3
adc
imul
stc
jecxz
dec
idivl
ret
leave
inc
xchg
mov
test
movsb
movb
mov
shr
sub
or
imull
sti
repnz
or
push
inc
imul
mov
arpl
jg
mov
hlt
insb
dec
add
inc
mov
jb
jbe
sub
daa
in
mov
sub
jmp
inc
fimuls
cmc
cli
cmp
insl
jns
xchg
dec
lds
pusha
xlat
dec
push
enter
push
in
dec
mov
lods
repnz
aas
mov
insb
loope
inc
xorb
or
je
sbbb
aas
mov
iret
and
cmp
or
sub
shr
subl
inc
push
xchg
sbb
push
jmp
frstor
jl
pop
out
lcall
sbb
stos
pop
jg
jb
mov
in
xor
shlb
mov
xor
icebp
cmpsl
push
inc
arpl
punpckhbw
ds
jns
stos
pop
movsb
lret
iret
movsl
nop
mov
and
in
ljmp
xchg
clc
cs
mov
mov
adc
lret
lods
fs
add
xor
lcall
shl
xor
dec
in
cmpsl
add
xor
adc
in
push
sbb
pop
fisttpl
mov
and
sbb
jg
push
jle
jl
xchg
xor
fiadds
push
rol
pop
stos
mov
jmp
jbe
lcall
fsubs
mov
jo
xor
inc
jo
sub
ja
int3
xlat
insl
jp
sbb
loopne
loopne
aas
jg
lret
cmp
scas
daa
inc
out
or
xor
popf
jns
jb
push
jmp
mov
and
frstor
out
les
sahf
int3
mov
adc
jp
adc
pop
inc
pop
mov
dec
outsb
or
js
dec
lods
push
test
or
cs
lds
in
push
fxch
jecxz
les
out
jnp
sub
xor
inc
inc
lods
pop
pop
dec
jbe
inc
pusha
rolb
dec
jnp
sbb
cmc
cmp
mov
push
jo
push
shrb
mov
fadd
leave
pop
pop
rcrb
push
jne
mov
inc
pop
dec
xorb
testl
xchg
sub
outsb
aad
push
jmp
xchg
mov
jmp
aad
xchg
xchg
jbe
jge
clc
jb
xchg
and
xor
out
mov
loope
sarb
or
push
and
mov
mov
lret
jge
imul
cwtl
push
mov
fucomp
imul
mov
les
test
aam
push
jb
pop
pop
aas
jp
mov
jns
pop
lret
es
jcxz
rol
push
add
add
push
jmp
in
mov
inc
and
mov
xchg
jnp
cwtl
ret
xchg
cmpsl
jnp
es
cmp
jmp
jns
or
push
and
fprem
inc
jmp
stc
iret
rol
dec
subl
xor
or
mov
push
inc
pop
dec
mov
mov
repz
jbe
fldcw
mov
mov
arpl
mov
mov
sarb
je
enter
lock
mov
inc
inc
fidivs
add
inc
jbe
add
cmp
sub
xchg
inc
cmp
inc
sbb
mov
lock
loopne
ss
stc
xor
xor
sub
mov
movsl
and
out
mov
out
das
out
repnz
lcall
mov
hlt
testl
mov
jno
pop
pop
stos
roll
jns
dec
xchg
repz
rorb
add
xor
add
inc
cli
jns
pop
fnsave
inc
fcoms
out
xor
stc
mov
popa
pop
or
roll
lret
cmp
int3
lahf
lock
dec
push
ficompl
sub
push
jbe
jno
push
in
mov
test
fs
movsb
insb
pop
ud0
pop
dec
xchg
pop
out
cmp
sti
push
dec
mov
ss
test
or
inc
mov
sbb
inc
mov
stos
inc
xor
add
lods
test
aad
test
rclb
push
mov
ja
jbe
mov
mov
std
icebp
mov
mov
divl
or
push
pop
rol
mov
les
sarb
add
push
push
mov
mov
shrl
sahf
or
dec
xchg
adc
mov
out
jmp
pop
sub
mov
aad
pop
je
addr16
push
cld
adc
inc
outsb
popf
cltd
and
mov
dec
rcrl
adcb
and
lret
loopne
pop
rorl
push
or
sub
mov
mov
jnp
rolb
shlb
scas
push
sub
mov
out
fmul
inc
sbb
dec
dec
iret
inc
popa
lods
in
cmp
adc
mov
mov
push
cmp
mov
pop
push
mov
dec
inc
adc
xchg
icebp
add
in
les
mov
jmp
inc
xor
cmpl
pop
and
mov
cmp
jbe
jmp
and
sub
push
pushf
sub
and
adc
test
ja
push
pop
push
mov
pop
pop
dec
fistpl
push
xlat
mov
ss
push
notl
arpl
ss
ja
inc
cmp
fmull
loopne
mov
je
jb
dec
cmc
jno
xor
dec
jle
gs
arpl
sub
sub
push
daa
std
lods
cvtpi2ps
dec
sar
fidivs
pop
mov
aaa
into
adc
jnp
stos
and
popa
scas
repnz
xchg
stos
loope
mov
mov
gs
xor
jecxz
lahf
gs
cmpsl
lods
pop
loop
movsl
jnp
jl
mov
jmp
popf
sub
cwtl
xor
outsl
fsubl
mov
lret
and
and
icebp
sub
mov
inc
dec
inc
fwait
push
in
test
and
shrl
test
sub
rorl
jmp
lods
mov
sbb
push
sbb
push
lret
bound
bound
mov
subb
push
les
mov
scas
and
or
lcall
lods
cmp
mov
jns
fcomi
rcrl
adc
inc
fisttps
sub
mov
and
mov
jnp
lea
shl
or
pushf
mov
xor
dec
mov
cmp
aad
vhaddps
dec
push
inc
fucomp
out
or
and
add
loope
es
scas
adc
adc
aas
icebp
mov
xlat
ja
sbbl
sbb
sub
in
mov
data16
jle
je
leave
inc
add
jp
fisubs
aas
jmp
cld
fisubl
outsb
loopw,pt
cwtl
xor
and
inc
aam
and
or
outsl
push
sbbl
dec
sbb
sub
loopne
mov
orb
ja
mov
ret
jle
inc
shl
or
push
shl
sbb
mov
outsb
into
imul
and
clc
dec
in
sbb
scas
sub
jo
outsl
and
dec
xchg
and
je
push
cwtl
pop
pop
imul
pop
rcl
bound
or
movsl
roll
and
in
outsb
cltd
cmp
add
test
pop
sarb
cmpl
cwtl
jp
sarl
test
xor
mov
xor
aam
adc
sub
clc
cmpsl
cmp
insb
mov
and
out
inc
add
insb
sub
mov
inc
scas
fists
jecxz
jb
inc
addl
hlt
and
ds
in
jmp
cmp
and
out
inc
mov
push
push
jno
sub
push
pop
call
lds
push
push
mov
xor
pop
fnstenv
adc
ss
add
movsl
add
jbe
sbb
add
sbb
int
pop
sbb
pop
popa
addr16
notb
insb
repnz
jmp
mov
pop
je
popf
jle
in
inc
and
aaa
push
jl
xchg
pop
dec
loop
insb
push
push
cwtl
les
mov
lcall
fstpt
mov
test
sbb
daa
dec
loopne
xor
mov
fisubrl
iret
scas
jle
aam
in
adc
pop
xchg
inc
bound
push
mov
out
hlt
aad
pop
cmp
dec
lretw
xor
lods
push
push
insb
push
inc
xchg
sub
xchg
pop
scas
sub
mov
lahf
fnsave
xchg
in
lea
lds
push
lret
adc
lret
lret
jb
push
dec
out
xchg
test
cmpb
in
mov
add
int
cs
imul
lea
arpl
dec
push
repnz
loopne
push
push
in
or
sbb
popf
jo
and
mov
adc
adc
add
or
inc
add
xor
or
or
add
test
adc
mov
push
ljmp
notb
or
fdivl
sarb
fimuls
js
movsb
push
lcall
outsl
aas
shll
sahf
add
jge
jmp
cld
mov
cmp
out
dec
pop
loope
outsl
dec
mov
hlt
test
loopne
into
xorb
sub
scas
push
jb
data16
pop
cmp
dec
test
adcl
jmp
mov
add
popa
sbb
xchg
adcb
push
sub
mov
loope
push
push
dec
mov
xor
adc
aad
gs
iret
arpl
cmpsb
or
std
jns
mov
int
dec
xchg
out
popa
ret
fists
adcl
sti
mov
je
insl
jl
movntps
sbb
inc
mov
push
pop
shrl
imul
and
jo
jne
in
enter
pop
mov
dec
push
out
clc
or
mov
push
popf
sub
das
pop
imul
push
cmp
jg
into
mov
subb
and
pop
push
cwtl
pop
addr16
into
xchg
xchg
push
dec
pop
clc
inc
ljmp
popa
es
jecxz
mov
mov
lea
mov
jbe
inc
push
pop
gs
dec
int
in
mov
aas
xchg
push
shr
js
xor
add
inc
testl
push
je
and
mov
ja
add
add
nop
cmpsl
jmp
fcoml
stos
andl
mov
aam
and
xchg
inc
addb
call
pop
lea
test
icebp
lock
adc
movsl
fsubl
push
les
inc
loope
cmpsl
gs
mov
in
mov
imul
es
inc
dec
mov
sbb
fdivl
push
jmp
mov
sbb
dec
stc
call
movsb
sahf
nop
cltd
fcoms
cmpsb
adcb
aas
pshufw
sub
pop
push
out
ja
sbb
jae
sbb
dec
inc
out
pop
add
hlt
movsb
xchg
or
sub
fnstcw
cs
scas
or
lret
dec
testw
cld
popl
xlat
scas
inc
push
fists
mov
mov
push
or
imul
mov
pushf
cwtl
stos
cmc
into
mov
jmp
in
shll
fld
sub
sbb
cltd
ret
push
insl
mov
xorb
cmp
and
aam
jns
xor
cmp
pop
nop
ret
inc
cmp
cli
imul
out
jle
adc
loope
push
sbb
cmp
add
inc
popa
movsl
lcall
cmp
xor
aas
fstl
cwtl
xor
bound
mov
inc
push
ljmp
scas
xchg
cmc
addl
jge
or
repz
add
lahf
pop
dec
repnz
fidivrl
movsb
std
pop
sub
lea
jb
push
mov
stos
fdivp
jmp
xor
fidivl
dec
pop
mov
mov
jl
andl
cltd
sar
push
jl
movb
or
test
ss
test
push
or
out
int
jne
notl
addb
push
aad
imull
repz
mov
insl
lock
in
xchg
sti
and
dec
cmp
stos
sarb
je
rclb
fildll
inc
daa
pop
sub
cmpsb
notl
lret
and
mov
mov
ret
mov
adcl
dec
lea
dec
icebp
xor
cmpb
cs
out
push
lock
repz
add
test
jo
sbb
jle
xor
imul
ret
cltd
pop
mov
adc
xor
inc
inc
cmp
mov
enter
adc
pop
fdivs
in
push
xchg
cs
lea
cli
push
mov
das
jnp
mov
xor
fisubs
mov
push
xchg
jae
call
mov
fs
mov
pop
mov
dec
jbe
sbb
outsb
dec
push
outsl
ret
fadds
inc
pop
xchg
jecxz
dec
xchg
xor
les
push
ds
sbb
mov
imul
or
cmp
leave
cmpsb
in
push
mov
jae
mov
lcall
outsl
sub
test
cwtl
movsb
call
adc
fiadds
sahf
cli
push
inc
mov
adc
in
xchg
xchg
rorb
orl
push
add
dec
adc
mov
ja
testb
dec
enter
mov
fstpl
int
sub
push
test
pop
pop
jns
sbb
adc
jmp
xor
arpl
lods
inc
jmp
fbld
repz
adc
outsb
inc
mul
and
stc
subl
add
mov
fwait
sbb
icebp
mov
cmpb
je
xchg
dec
push
cmpsb
inc
cmp
jmp
cmp
lcall
jns
xchg
xlat
xchg
xchg
lahf
mov
adc
sub
inc
cmpsl
bound
inc
fstpl
sti
cmp
pop
lds
sub
repnz
mov
nop
lret
test
test
fsts
mov
add
push
adc
jmp
adc
xchg
add
sbb
push
push
not
push
scas
xor
adc
xor
loopne
arpl
xor
sbbb
movsl
int
and
dec
sahf
fwait
jnp
rorl
inc
popa
and
into
mov
fstpl
aas
sub
ds
jle
or
stc
inc
faddp
cld
jmp
xlat
push
ja
popf
add
and
dec
and
in
lcall
sti
push
js
jbe
xorb
call
sub
fstps
fbld
jae,pn
repnz
in
ret
jmp
popf
enter
popl
xor
mov
xchg
jbe
cmp
mov
xchg
ror
cmpsb
mov
pushf
push
loop
push
sbb
ret
fwait
jmp
in
and
or
mov
sub
popa
dec
push
pop
mov
jmp
mov
mul
jno
jno
or
addr16
loopne
push
es
test
and
dec
inc
cmpsl
jnp
leave
add
faddl
aad
xlat
sbb
mov
xor
inc
xlat
jo
fcmove
movsb
in
adc
in
cmp
pop
xchg
fadds
lahf
pop
je
pusha
jo
cmp
test
push
mov
das
and
pop
scas
push
push
adc
pop
repz
fldl
jecxz
mov
cli
fstl
mov
mov
stos
xchg
insb
pop
sbb
and
fisubs
and
cmp
outsb
std
xchg
imul
sbb
jbe
fisttpll
push
and
sub
adc
mov
je
or
and
add
push
insb
std
out
cmpsl
aas
or
and
stos
jg
cmp
mov
mov
outsb
dec
jmp
out
jmp
cmpsl
jno
xlat
jl
cmpsb
popf
adcb
mov
mov
in
negl
es
xor
mov
aas
cmp
xchg
aad
call
inc
lods
jg
rorb
add
jg
cmp
add
into
movsl
mov
xchg
jae
pop
fs
fwait
mov
js
pop
lods
inc
inc
out
or
loopne
hlt
dec
ret
inc
je
jb
sub
ret
gs
je
and
aad
cs
rcr
adc
sbb
jle
insl
les
mov
add
and
rcrl
push
pop
les
ds
das
cmp
xor
shrl
push
mov
lret
mov
in
xchg
lcall
fcoms
outsb
call
inc
push
jne
add
sbb
sub
sbb
cwtl
mov
jecxz
roll
fs
pop
xorl
out
xchg
cmp
cmp
stos
push
lret
xor
xor
sub
dec
jg
pop
stos
xchg
fildl
or
xchg
dec
inc
mov
fistpll
rcrb
add
dec
xchg
dec
iret
daa
sbb
out
lea
cmp
mov
xlat
cmpsb
add
enter
cltd
std
sti
sbbb
and
cmp
adc
jno
mov
jns
adc
xchg
idivb
cld
repnz
pop
roll
inc
sbb
or
test
in
lds
mov
aas
ja
sbbl
leave
ljmp
aaa
insb
mov
sbb
adc
icebp
and
dec
cmp
pop
pop
int3
adc
mov
xchg
and
fistpl
shlb
pusha
mov
ficompl
pop
ds
lret
jle
fistps
mov
sbb
nop
mov
lods
cmp
inc
dec
pop
movsb
ds
jnp
pop
imul
jmp
adc
sbbl
jg
xor
test
out
dec
repz
lcall
sbb
rcrl
sbb
or
adc
xor
loopne
pop
dec
sbb
dec
jae
or
pop
jmp
testl
push
stc
fs
dec
bound
jl
outsb
and
fs
jbe
in
add
lds
jl
mov
add
rcl
dec
and
popa
xor
jae
jge
add
mov
rorl
arpl
dec
test
fcomip
int3
test
fisubrs
out
pop
ds
sub
xchg
ljmp
inc
mov
xor
xchg
iret
jecxz
pop
stos
dec
enter
mov
ja
mov
and
inc
mov
js
sbb
shl
or
stc
or
and
add
lds
mov
sbb
rcl
jnp
jle
outsb
pusha
cmp
xor
dec
xchg
paddusb
dec
mov
sub
push
cmp
add
dec
jnp
fcmovnu
loope
xchg
jmp
sarl
add
outsl
sbb
clc
pop
mov
mov
sbbb
pop
imul
inc
arpl
je
dec
mov
push
push
and
fnstcw
pop
mov
mov
or
adc
push
dec
imul
sahf
shlb
mov
xorl
dec
lea
cmpsl
or
dec
filds
mov
in
cltd
dec
mov
out
ret
iret
dec
push
imul
cmova
ret
jno
and
mov
dec
jns
mov
in
sbb
adc
xor
repnz
lret
ja
repnz
xor
js
pop
pop
cld
mov
popf
inc
pop
xchg
add
aas
imul
push
adcl
jnp
outsl
dec
mov
cwtl
adc
lahf
and
xchg
cmpsl
das
adc
push
les
int3
aaa
loope
pop
inc
aam
jnp
pop
xchg
cltd
add
mov
pop
mov
or
imul
add
xchg
xlat
lahf
mov
add
inc
mov
or
xchg
icebp
xor
adc
cmpsb
jns
testl
popf
jl
nop
inc
scas
mov
repz
sub
and
out
in
fbld
and
dec
adc
sbb
and
sti
inc
cltd
add
into
sub
pop
jbe
shr
adc
jns
in
repz
sub
loope
sti
test
push
jae
mov
pop
cli
inc
add
fwait
xor
pop
pusha
push
jo
movsl
jnp
insb
adc
sbb
pop
fxrstor
out
and
xchg
std
jp
std
add
sub
mov
mov
pop
sbb
push
inc
adc
ret
and
ret
push
pop
mov
xchg
pop
cwtl
xchg
pop
das
lods
fucomi
sbbl
scas
inc
pop
out
cmp
xchg
xchg
cld
cmp
aaa
mov
cmp
inc
push
sub
jae
xchg
stos
cmpb
xchg
pop
and
inc
mov
add
mov
mov
scas
jno
loopne
outsb
and
jmp
jbe
adc
arpl
mov
sbb
lds
cmp
fnstcw
fsts
jbe
add
push
cmp
stc
test
out
or
rorb
mov
test
jge
xchg
sbb
pop
fbld
jge
shlb
repnz
sbb
mov
sbb
inc
sbb
push
fwait
testb
pushf
xor
xor
push
aam
stos
cmpsl
loop
xchg
jno
enter
mov
divb
mov
ja
in
hlt
ljmp
sti
pop
out
pop
mov
xchg
xor
mov
and
cmp
mov
cs
das
mov
xchg
or
inc
insb
in
pop
jge
cmpsl
js
incb
xchg
das
dec
inc
repnz
stos
push
mov
test
mov
push
lret
imul
add
sub
scas
pop
mov
popa
lock
xchg
les
cmp
ror
jecxz
int3
pusha
lret
sbb
jmp
daa
out
stos
or
test
adc
mov
sub
fndisi(8087
jmp
daa
outsl
cmp
xchg
ss
je
lods
xlat
icebp
adc
push
xchg
std
cwtl
dec
sbb
push
popf
inc
inc
mov
sti
add
mov
pop
cld
aam
mov
gs
jge
pop
xchg
add
jb
mov
sahf
mov
or
mov
fildl
cltd
cmpsb
fldl2e
push
cmpsb
ljmp
sarb
leave
fs
mov
xorb
lcall
jb
repz
enter
push
jns
cmpsl
and
dec
adc
mov
sbb
sbb
rclb
xor
mov
add
xchg
mov
orl
jle
add
pop
push
or
mov
push
out
sbb
add
mov
imul
inc
sbb
popf
cmp
jno
push
cmp
movsl
fbld
ss
shlb
ljmp
mov
xchg
in
sbb
xchg
pop
addb
std
stos
sbb
scas
popl
sbb
stos
addr16
xchg
xlat
clc
aad
shl
jnp
rolb
pop
icebp
outsl
pop
fists
pop
add
xchg
arpl
cmp
ficoml
xor
pop
in
not
mov
loop
int3
ja
imul
xor
cwtl
and
arpl
ret
and
adc
jle
sub
bound
outsb
sbb
mov
pop
sbb
xchg
sbb
push
cmovge
and
jb
jmp
dec
in
scas
inc
lahf
cmc
mull
mov
imul
or
sbbb
jns
sahf
and
jae
addr16
adc
sbb
pop
sbbl
int
pop
into
lds
sbb
xchg
pop
imulb
sbb
int
fistpl
repnz
inc
mov
jmp
loopne
rol
sahf
sbb
arpl
stos
pop
push
and
int3
push
mov
dec
pop
mov
out
in
jbe
test
mov
sub
and
fisubl
pop
fwait
adc
adc
push
mov
jg
mov
mov
ljmp
and
fcoml
mov
push
lret
jnp
xor
fs
add
sbb
push
inc
xor
add
cwtl
add
sbb
sbb
push
xor
pop
sub
sbb
push
or
cmp
les
insb
lahf
push
push
cmp
xchg
hlt
jbe
mov
cld
mov
loope
rorl
mov
jns
jne
and
mov
push
xor
xlat
mov
jle
mov
adc
xchg
cmp
jb
stos
outsl
aad
dec
mov
jbe
cld
shrl
fcmovu
sub
test
lods
loopne
sub
repnz
cmp
and
pop
repz
inc
sub
lods
and
xchg
addr16
xor
cli
pop
and
dec
nop
push
enter
imul
mov
xor
xchg
clc
mov
xchg
fdivrs
in
cmpsl
sub
mov
insb
cmpsb
cli
xor
out
ja
jb
negl
xor
sub
add
push
cwtl
cli
leave
int
sub
pop
mov
pop
push
mov
incl
dec
icebp
stc
fisttpll
fldln2
aaa
shll
ds
jp
in
fmulp
mov
pop
mov
push
cmc
shrb
fildll
dec
xchg
mov
mov
mov
cmp
call
insb
mov
in
jl
push
decl
cmpb
mov
dec
les
fldenv
dec
in
test
lahf
jb
jnp
fstps
test
xor
ljmp
push
push
test
jbe
stos
xor
sub
ss
fwait
mov
dec
lcall
jno
jbe
pop
or
add
clc
pop
test
mov
cwtl
shlb
xchg
mov
movsb
flds
push
ret
add
imulb
inc
mov
and
push
fidivs
xchg
mov
xchg
jno
jb
dec
jne
mov
mov
mov
dec
jg
or
mov
xor
cld
add
adc
dec
or
mov
sub
push
mov
mov
js
xchg
lods
loope
adc
mov
pop
popf
loope
shlb
ljmp
mov
clc
movsl
ds
arpl
imul
insl
dec
add
jb
xchg
jnp
dec
scas
hlt
dec
or
enter
mov
pop
cs
xor
out
mov
movsb
repz
dec
out
pop
inc
repz
mov
jle
or
call
push
cs
cli
jo
mov
cltd
cmp
adc
jo
rorl
xchg
fdivl
call
inc
adc
sub
and
pop
cmp
add
stos
cmp
mov
incl
lret
pushf
arpl
lock
push
loopne
sbb
xchg
rcl
repz
pop
fidivrl
xor
into
pop
xchg
sbb
into
aam
or
mov
lock
repz
xor
sub
cmc
aaa
dec
mov
inc
inc
cli
inc
mov
in
mov
scas
rorb
jge
leave
push
adc
mov
rclb
dec
notl
dec
lcall
or
sub
shr
nop
icebp
in
xchg
movsl
cmp
pop
inc
pop
pop
repnz
dec
ljmp
pop
cs
movsb
iret
sub
push
or
push
das
push
push
pushf
jmp
add
lock
rcr
insl
xchg
data16
and
clc
jns
loop
dec
push
lods
pop
mov
notl
shlb
pop
insl
mov
shl
sbb
push
adc
ja
dec
inc
lods
push
outsl
push
cmpsl
es
sub
dec
cs
add
push
stc
inc
xchg
mov
adc
mov
nop
mov
outsb
jns
xlat
and
dec
push
cmp
xchg
adc
pushf
std
insl
adc
inc
int
int
push
jno
ja
shrb
lods
mov
aad
mov
scas
pop
cmp
out
fimull
mov
into
inc
push
xchg
jmp
lods
popf
arpl
inc
dec
testl
dec
pop
ret
jns
int
push
push
movsb
rol
push
outsb
sub
xchg
xchg
mov
xor
mov
roll
push
int3
mov
arpl
mov
cmp
mov
push
scas
mov
popa
sub
lods
mov
push
jmp
aad
lock
imul
stc
sbb
notb
inc
mov
mov
in
push
iret
jle
jp
repz
int3
cmc
dec
neg
mov
pop
pop
aas
xchg
sub
xor
dec
sbb
je
movsl
or
mov
jno
movsl
outsl
hlt
cmpsb
rclb
xchg
push
jg
pop
push
push
sbb
jnp
mov
jb
rol
ror
cmp
mov
fsin
mov
mov
jecxz
cltd
push
pushf
subl
out
jns
lea
add
push
add
inc
push
call
das
dec
cmpsl
mov
loope
mov
out
das
xlat
jl
mov
mov
outsb
or
fadd
push
cmp
jecxz
fistl
mov
data16
and
jnp
xchg
and
loop
sahf
and
xchg
adc
push
icebp
cmpsl
mov
cmp
insb
pop
adcb
mov
pop
dec
mov
scas
push
fildl
mov
jo
or
into
rclb
vmwrite
xchg
push
js
jae
push
push
mov
les
orl
and
cmp
ret
lcall
pop
pusha
aad
and
jmp
cmp
aam
fildl
sbb
dec
xchg
and
jae
stc
xchg
or
hlt
sbb
add
mov
xchg
fcmovb
pop
movsb
ret
stc
or
std
popa
lds
sahf
pop
sti
xchg
xorl
sbb
lea
push
cmp
js
movsl
mov
movsb
fcmovbe
out
or
pop
loopne
push
xchg
adc
scas
push
gs
add
mov
push
std
adc
jns
imul
push
test
mov
lahf
aad
cmp
fstps
sbb
loop
push
cmp
insl
push
ljmp
pop
loopne
add
mov
ds
cmp
fcmovnbe
and
mov
sti
in
stc
stos
ljmp
adc
mov
push
cmpl
sbb
sub
mov
and
test
leave
test
stc
mov
negl
clc
sbb
and
inc
jmp
mov
iret
sub
dec
in
mov
pop
dec
out
dec
popa
lock
cmp
js
sub
cmp
push
fsubrl
xchg
xchg
lds
outsl
cwtl
clc
fistps
xor
xor
cltd
jo
pusha
dec
mov
sbb
mov
pop
or
insb
adc
repnz
shll
sub
movsl
add
arpl
mov
enter
push
lret
inc
push
pop
ret
mov
cmpl
aas
aas
les
repz
sub
out
test
lock
out
pop
mov
into
mov
push
into
mov
loopne
jne
rorl
dec
testb
popf
push
or
adc
fwait
xor
imul
mov
stc
icebp
push
jmp
mov
hlt
mov
loop
dec
add
or
jl
sti
insb
jl
imul
push
pop
test
outsl
dec
xchg
enter
and
cltd
mov
dec
insl
mov
out
jbe
mov
fucomi
sub
xchg
stos
sub
mov
push
push
shrb
inc
mov
dec
das
gs
xor
add
sti
sub
dec
xchg
sbb
into
movb
sub
adc
pop
shll
sti
frstor
sub
dec
scas
mov
sbb
out
sbb
jle
aaa
xor
mov
jp
or
inc
xchg
fwait
test
xlat
gs
divb
ljmp
dec
xchg
cmpsl
inc
xchg
clc
rcll
mov
add
int
dec
jmp
out
cld
inc
scas
gs
mov
ret
pop
push
out
cwtl
cwtl
popf
in
mov
mov
mov
pushf
sbb
pop
js
sbb
adc
pop
xor
dec
fistpll
adc
dec
lods
mov
lret
add
ss
dec
mov
cld
xchg
jno
je
mov
iret
lret
sub
rorb
dec
roll
sar
sub
sbb
xchg
mov
ja
dec
mov
insl
out
gs
mov
dec
daa
cld
push
jbe
test
sbb
outsb
fucomip
stos
out
shl
add
pop
adc
cld
cmp
pushf
sbb
repnz
sbb
xor
push
aam
test
and
xor
fidivl
idivl
jbe
mov
repz
fcom
ret
mov
pop
or
dec
jnp
repz
negb
test
lea
dec
stos
jne
and
loop
lret
sahf
mov
add
test
in
insl
cld
mov
mov
fsubrs
xchg
add
dec
cmp
cmp
mov
mov
enter
jb
push
nop
ja
mov
bound
mov
repz
push
sub
mov
sbb
dec
pop
cmpl
cmpb
push
push
dec
pop
pop
and
push
divl
flds
add
negb
out
movsl
jmp
movsl
or
pop
adc
mov
popa
sub
sub
leave
or
stc
jl
dec
mov
push
pop
ret
inc
or
xlat
xlat
xchg
mov
in
cld
repnz
je
rcr
dec
adc
lahf
rcrb
shll
std
leave
bound
sbb
outsb
arpl
mov
repnz
out
sub
mov
jge
rsm
test
ror
pop
or
jmp
gs
shrb
jl
mov
fnstcw
sahf
pop
pop
xchg
int3
adc
mov
ljmp
or
scas
call
inc
jge
aam
xchg
cmp
pop
pop
faddl
xor
fcoml
inc
fldcw
push
cmp
mov
xchg
daa
imul
scas
cmp
aas
adc
sub
jg
ljmp
loopne
xchg
jecxz
mul
iret
testb
shl
jg
enter
mov
mov
xchg
lea
aaa
aam
or
imul
xchg
cwtl
movsl
lods
add
sbb
addb
cmp
divl
js
loopne
dec
cmp
decb
jbe
mov
lea
cld
xor
lock
mov
cltd
mov
add
jo
mov
scas
mov
xor
mov
and
push
fmull
push
mov
cmp
xchg
push
mov
push
clc
jo
push
pushf
fisubl
push
push
lea
push
pop
popf
mov
pop
int
push
inc
roll
cli
xor
pop
pushf
and
push
sbb
popa
xchg
xchg
add
or
xchg
mov
pop
xlat
popf
push
fidivs
mov
in
ljmp
sbb
xchg
dec
lcall
mov
mov
adc
push
test
add
rcl
dec
hlt
or
xlat
cld
push
out
jge
out
pop
ret
popf
xchg
inc
mov
mov
shlb
iret
cmp
adc
mov
jb
jecxz
enter
outsb
adc
cli
mov
sbbl
dec
mov
ja
testl
xchg
push
sarb
outsb
push
cmpsb
test
andl
dec
pop
lret
or
and
and
xchg
cmp
out
or
pop
xlat
pop
xchg
shll
pop
adc
sbb
xor
pop
shl
mov
mov
mov
outsl
int3
sub
sub
flds
ja
xchg
dec
adc
sbb
sub
ror
dec
scas
xor
pushf
or
pop
push
sahf
aam
mov
xchg
jge
pop
pop
or
cmc
push
or
ja
cltd
pop
imul
in
lds
out
ljmp
icebp
fistps
hlt
jo
sbb
mov
and
mov
pushf
adc
clc
rclb
rcrb
cli
clc
sub
cmp
xchg
pop
testb
aam
xchg
je
mov
aam
mov
mov
push
mov
arpl
sbb
mov
dec
and
insl
and
ljmp
daa
mov
ja
into
out
cs
out
aas
and
adc
shl
rcr
into
sarl
adc
sbb
nop
push
pop
sbb
push
hlt
sahf
jl
into
das
mov
stc
mov
push
mov
inc
xchg
cmp
hlt
and
xlat
jmp
das
fucomp
outsb
cmp
inc
incl
lret
dec
cli
mov
jmp
xor
decb
add
in
pop
inc
andl
jl
ffreep
inc
repz
outsl
iret
jnp
out
inc
jo
in
fwait
aam
dec
cwtl
mov
leave
adc
mov
aam
and
mov
cltd
push
xchg
repz
sbb
clc
dec
push
sahf
jns
in
mov
add
test
jl
out
aaa
shlb
xor
pop
inc
mov
dec
shll
popa
add
scas
mov
cmpsl
sub
mov
pushf
push
fnstenv
push
in
in
xor
fsubs
dec
push
or
mov
negb
cwtl
cmp
incb
stos
xchg
fcompl
adc
roll
ss
sbb
ja
popl
fdivrp
add
test
sbb
leave
mov
test
mov
hlt
lret
xchg
hlt
cld
test
test
pop
cmpl
mov
jecxz
mov
outsl
push
mov
jp
aam
dec
mov
inc
repz
fwait
ret
nop
lea
mov
jnp
shr
fidivl
loope
sub
cmpsl
xor
and
mov
add
mov
test
ds
mov
es
movsb
les
mov
out
lret
push
push
fidivrl
jno
adc
sahf
ds
pop
cld
ja
or
std
cmp
nop
jb
mov
adc
les
adc
cwtl
jns
xchg
dec
push
push
adc
inc
cmp
adc
rcll
clc
sbb
jecxz
pushl
movsl
lock
les
test
inc
mov
shl
ds
test
sub
pop
ss
out
faddp
pop
mov
pop
fiadds
and
mov
stos
repz
popf
nop
lahf
inc
xlat
jae
add
jno
push
pop
xor
sbb
aas
fadd
add
out
test
popaw
rcl
sbbl
cli
test
xor
fabs
xchg
shll
adc
add
push
cmp
icebp
and
jo
andb
leave
dec
or
inc
dec
and
xchg
lahf
sub
mov
xchg
xor
fld
into
pushf
pop
decb
roll
dec
mov
ss
adc
mov
fistpll
shl
adcb
pop
pop
loopne
leave
mov
or
in
pop
mov
icebp
into
mov
pop
inc
push
leave
in
push
xchg
data16
push
notl
stc
lods
sbb
jo
mov
sbb
jbe
push
mov
push
pop
leave
shlb
dec
pop
dec
ret
jno
cmp
clc
jnp
cmpsb
mov
ret
pushf
push
or
or
ljmp
sub
sub
pop
and
testb
sub
decb
sbb
mov
and
into
sub
out
xchg
pop
out
out
sub
dec
fsubl
insb
leave
dec
in
aam
adc
push
mov
push
ret
push
mov
into
imul
mov
mov
cli
add
xorb
test
push
leave
jb
loop
push
in
popa
sub
sbb
popa
push
xchg
push
mov
outsl
out
cld
in
fdivs
mov
sbb
xchg
inc
fldenv
orb
clc
sti
mov
or
adc
add
push
out
add
les
outsl
mov
mov
cmpsl
and
ret
nop
push
scas
in
sahf
lods
jno
insl
popa
xchg
call
add
sbb
repz
ret
test
adc
pop
fisubs
sbbb
xchg
rcrb
enter
xchg
add
fcoms
mov
or
jbe
push
stc
cli
sub
and
dec
addb
dec
jo
shll
mov
xlat
dec
stc
pop
cltd
fiadds
movsb
lea
jl
fldl
scas
int
xor
mov
xor
dec
ss
pop
push
mov
ljmp
xchg
adc
sub
adc
jg
lret
and
aad
push
shrb
mov
push
outsl
data16
mov
xchg
pop
arpl
ret
arpl
mov
xor
aam
ss
jge
pop
mov
push
loopne
stc
pop
mov
pop
dec
mul
movsl
mov
out
push
ficompl
scas
repnz
outsb
push
push
sahf
jp
cmp
cmp
dec
in
xor
xchg
aad
pop
dec
pop
mov
dec
nop
lods
data16
mov
dec
xor
std
and
dec
mov
cmp
aam
outsb
mov
jb,pt
cli
mov
std
aaa
push
fwait
shll
xchg
movsb
sbb
insl
hlt
dec
adc
ss
mov
dec
dec
mov
xchg
sbb
das
fcompl
or
mov
or
repz
fsts
out
lock
fwait
mov
test
stc
aad
cmp
std
push
mov
shll
sti
arpl
fisubrs
push
xor
jle
fs
or
pop
cmpsl
ss
fistl
call
push
les
mov
lods
cmpsb
push
pop
mov
pop
data16
out
pop
sub
les
or
enter
test
dec
pop
push
cltd
pop
cltd
pusha
mov
js
sbb
jp
sbb
pop
add
adc
push
push
cs
in
test
cmp
inc
ljmp
xor
aaa
into
mov
inc
mov
mull
jp
xchg
and
pop
mov
int3
aas
or
adc
lds
sbb
mov
rolb
into
xchg
fs
je
ret
pop
mov
cmp
jmp
lods
xchg
add
jne
ss
in
in
fistpll
arpl
or
jmp
push
push
nop
mov
insb
lds
pop
cmp
sbb
cld
xchg
jnp
sub
jns
loopne
mov
xchg
movnti
or
roll
xchg
cwtl
jnp
sbb
inc
push
inc
jmp
lea
shll
popa
xchg
hlt
les
movsl
pop
mull
add
call
jmp
jns
loopne
sbb
loope
cmp
jne
xchg
fmuls
repnz
sbb
aas
in
mov
je
repz
mov
dec
inc
mov
in
pop
xlat
mov
or
mov
aas
mov
and
out
fmull
jl
sub
jno
lcall
xor
in
les
mov
jnp
dec
inc
mov
enter
orb
xchg
mov
xor
mov
xchg
movsl
scas
addr16
mov
mov
jecxz
add
jecxz
mov
mov
inc
jb
or
stos
in
xchg
jnp
sub
cmpsb
and
rcrb
xor
imul
sub
jo
push
insl
test
dec
stos
jg
jbe
scas
jecxz
gs
fistl
jnp
xor
push
adc
fadd
es
or
mov
sahf
pushf
push
jle
mov
pop
push
push
push
les
mov
pusha
xchg
dec
adc
and
dec
addr16
cmpsb
mov
adc
cmp
sub
xchg
push
cmp
or
sbb
ret
mov
add
cltd
mov
imulb
dec
fisubl
mov
pop
xor
jne
mov
sbb
mov
sbb
ljmp
sbb
dec
cmpsl
ss
mov
ja
sbb
ss
pop
fwait
adc
mov
ffree
in
dec
add
cmp
jmp
call
aam
jle
add
pop
cs
insb
inc
cmp
xor
cmc
adc
cmc
pushf
jns
push
mov
sbb
mov
xor
fsubs
pop
scas
pusha
sbb
dec
ss
sbb
xor
mov
push
mov
shll
clc
xor
pusha
xchg
xchg
mov
andps
cmp
pop
test
or
dec
test
popa
shl
es
out
xchg
pop
cmpb
fdivs
adc
add
jecxz
shll
pop
push
sbb
adc
in
cmp
push
bound
ds
jnp
aaa
lea
adc
out
push
out
mov
icebp
mov
sbb
add
jbe
mov
xchg
pop
icebp
pop
adc
stc
ljmp
loopne
xor
push
aaa
sbb
daa
push
inc
icebp
jl
cmpsb
xor
jb
cmpsb
jp
je
testl
push
int3
add
dec
xchg
test
notl
xchg
xor
mov
cmp
rorb
mov
cmpsl
bound
xor
xor
int3
bound
mov
ljmp
cwtl
pop
dec
imul
scas
mov
dec
and
mov
xor
js
shrb
dec
inc
add
mov
in
mov
dec
pop
mov
dec
xchg
jns
movsl
xchg
jae
scas
in
push
rorb
dec
adc
movb
aad
pop
dec
mov
adc
mov
mov
outsl
jge
mov
cwtl
jns
pop
adc
mov
cmp
fwait
cli
ror
and
outsb
or
bound
test
push
pop
out
adc
or
imul
shll
or
inc
inc
push
sub
jae
mov
rorb
test
jg
sub
iret
movsl
pop
rclb
fisttps
dec
mov
fcoms
fnstcw
pop
popf
leave
ds
aam
inc
clc
mov
mov
je
push
loop
jnp
mov
jle
ljmp
push
mov
dec
cli
ja
mov
popf
or
push
adc
inc
sub
xchg
jl
add
jl
xchg
out
push
dec
es
mov
aaa
jo
lds
cmpsl
loopne
fmuls
js
pop
sub
pop
and
popf
enter
pushf
push
repz
add
mov
fistl
cmpsl
gs
stos
cmc
jl
leave
pop
in
nop
repz
leave
or
jo
dec
sub
or
xchg
dec
or
mov
cmpsb
cmc
icebp
add
into
mov
into
imul
pop
adc
cmp
fwait
mov
in
add
cmp
lahf
lret
push
or
nop
imul
lods
mulps
push
bound
jo
lods
jbe
orb
jno
sti
xchg
mov
or
cmp
cmp
xlat
sub
scas
cli
inc
xor
push
cld
push
fimuls
je
ret
sbb
mov
and
ret
scas
push
movsl
push
aad
jmp
fcmovnu
mov
and
xor
jns
push
sub
and
dec
jecxz
xchg
repnz
lods
and
mov
push
mov
ret
pusha
lahf
xor
mov
into
repz
mov
lret
inc
cmc
cwtl
xchg
add
insb
ss
ror
push
into
cltd
sbb
mov
sub
icebp
cli
pop
sub
adc
popf
or
push
jbe
sbb
mull
sbb
mov
mov
push
sub
pop
int3
inc
call
jle
xchg
daa
push
leave
add
test
cmpsl
sti
addl
sub
sub
sub
push
or
movsb
pushl
adc
mov
fcompl
pop
and
and
mov
aam
inc
int
dec
and
push
xchg
mov
jecxz
xlat
and
lods
jmp
and
hlt
jmp
add
loopne
js
stos
mull
hlt
sahf
insb
push
xor
fdiv
mov
lods
jnp
mov
lea
push
lret
cmc
or
or
jge
rcr
adc
sbb
fneni(8087
or
iret
leave
xor
outsl
and
fnstenv
ds
push
addb
rcll
ds
mov
sbb
dec
xlat
xchg
mov
mov
pop
mov
jp
xor
jge
std
adc
stc
xor
inc
sub
pminsw
sbb
imul
sbb
and
mov
inc
dec
dec
enter
imul
xor
jnp
mov
je
stos
add
iret
push
mov
adc
insl
xchg
mov
jge
aad
cmp
mov
nop
xrelease
aaa
imul
inc
jae
aaa
adc
xor
adc
mov
call
les
sbb
fdivs
adc
pop
cmpsl
cli
cwtl
jp
fldz
test
pop
mov
cld
and
inc
dec
cmp
xor
mov
and
cmc
frstor
fld1
jecxz
add
mov
pop
mov
cmp
inc
dec
or
cmp
lret
jge
sbb
into
lods
popa
in
xor
mov
lret
dec
bound
data16
and
iret
pushf
popa
dec
ljmp
inc
in
cmp
xor
insl
mov
mov
das
mov
mov
icebp
jecxz
pop
out
sti
imul
outsb
dec
pusha
xorps
or
mov
cmp
repz
add
cmp
mov
cmpsl
pop
out
inc
daa
lods
mov
jmp
movsl
inc
pop
es
adc
adcl
cli
stos
push
ds
sbbb
push
js
js
insl
movsb
shrb
pushf
clc
ds
sub
xor
jno
mov
ret
add
add
aaa
test
repnz
dec
mov
xor
insl
xchg
mov
jnp
in
sbb
imull
mov
jnp
test
mov
dec
aad
int
test
stc
pop
cld
adc
push
int3
movsb
pop
data16
ret
mov
fbld
lods
sub
sub
inc
mov
jp
loope
fidivrl
push
adc
imul
mov
outsl
xorl
add
ret
call
pop
ja
xchg
jmp
mov
push
aam
mov
push
popa
lock
fnstenv
inc
xor
sub
or
jo
xchg
lret
enter
roll
and
sbb
sbb
inc
divl
test
dec
ror
int
pop
decl
jp
movsb
xor
in
xlat
es
fiadds
or
xor
fmull
adc
lea
add
pop
insl
or
inc
addr16
adc
adc
or
int
cmc
pop
fimull
scas
pop
push
jno
mov
adc
dec
mov
les
adc
and
sub
popa
sbb
out
jae
push
out
pusha
and
xor
mov
sahf
adcl
mov
js
cli
inc
inc
aaa
jg
fnclex
push
mov
sub
lods
loopne
pop
cmp
insl
sbb
lds
cmp
stos
idivb
or
shll
lea
inc
inc
push
mov
inc
dec
mov
inc
inc
fidivl
fsubs
subl
cltd
jae
sti
pop
loopne
rorl
les
idiv
mov
dec
mov
jno
dec
pop
loop
fmull
test
mov
cmp
mov
lcall
icebp
cmpsb
ret
ja
icebp
hlt
mov
cs
daa
movsl
sub
outsb
inc
das
dec
leave
mov
xchg
sbb
hlt
iret
rcl
sub
mov
pop
and
int3
push
cld
lret
mov
push
dec
jae
mov
in
adc
sar
nop
cmpsl
imul
int
mov
ficoml
pop
dec
insl
mov
lcall
sub
mov
lock
fidivs
cmp
popa
lret
mov
clc
fs
mov
or
les
mov
or
int
push
cmpsl
sub
or
hlt
lret
in
sahf
mov
pop
and
and
fstps
fisttpll
aad
mov
push
cmp
icebp
adc
mov
pop
xor
mov
into
jo
std
dec
xchg
test
jge
push
mov
int
aas
jl
jg
fsubrs
lea
fldl
xor
aad
leave
repnz
imul
je
mov
pushf
push
or
push
jnp
movsl
jnp
add
rorl
stos
dec
test
cmp
call
lea
cmp
mov
pop
lcall
pop
outsl
daa
pop
pop
inc
pushf
push
cmp
xor
lcall
loope
test
shll
push
inc
push
xchg
cmpsl
push
ret
mov
xchg
dec
sahf
sbb
pop
cmpsb
jae
add
shll
dec
dec
adc
inc
aad
and
cmc
stos
push
jg
pop
cmp
add
aad
dec
xchg
dec
pusha
repz
dec
imul
popa
jg
pop
rorb
xchg
test
addr16
in
dec
fsubrl
int
fs
mov
jns
mov
sbb
push
pop
mov
jno
jo
cmpsl
push
xchg
fldt
es
aaa
xchg
fstps
pop
sub
xchg
or
sbbb
xor
mov
sbb
adc
orb
inc
ficoms
push
lds
or
mov
mov
mov
pushf
sbb
mov
mov
jmp
add
jmp
lods
xchg
dec
mov
lcall
lcall
xchg
lret
mov
mov
sbb
push
and
arpl
popa
xor
ss
jge
sub
imul
dec
mov
jge
and
insb
in
pop
ljmp
lret
cmp
xchg
aad
cmp
movsb
add
xchg
das
adc
mov
lcall
pop
or
hlt
push
fbld
fs
cwtl
jo
push
mov
test
push
sbb
or
pop
stos
out
fdivl
mov
push
popa
cltd
fimull
xchg
lock
sahf
aad
rcrl
and
daa
sahf
subl
ljmp
xchg
data16
int
sub
jp
push
mov
out
out
pop
push
jmp
add
shll
fiadds
mov
ss
mov
mov
push
mov
push
daa
pop
ror
and
add
mov
cmp
or
movl
cld
loop
push
shll
jle
out
in
add
mov
out
mov
inc
or
push
scas
cmp
mov
test
in
inc
mov
ja
inc
pop
jmp
sub
sbb
mov
daa
pop
test
jge
ds
aam
rolb
dec
test
mov
sbb
sub
data16
in
mov
mov
xor
or
jnp
das
lods
scas
notl
cmp
in
cwtl
shl
or
sarb
or
pushf
insb
sarb
test
mov
inc
pop
adc
ljmp
jno
in
test
adcb
mov
loopne
stc
push
dec
scas
inc
push
push
lds
int
add
add
loopne
notl
jge
xchg
into
cli
add
es
mov
sbb
sbb
aaa
add
pop
mov
pop
cld
dec
jge
cld
gs
addr16
lds
aas
sbb
or
xchg
mulb
push
xchg
push
push
push
cmp
cmp
sbb
test
xchg
mov
xchg
out
jecxz
sub
xchg
cwtl
out
adc
arpl
mov
adc
sti
hlt
fldenv
inc
xchg
mov
cmp
inc
hlt
adc
mov
aaa
sbb
sub
sub
repnz
or
sub
mov
xor
ret
clc
shll
add
jp
cltd
scas
xchg
test
inc
add
bound
out
movsl
inc
dec
cmp
dec
gs
lret
inc
mov
add
js
rcl
jne
cmp
fwait
int3
cmp
lcall
shl
jns
add
add
xorl
rcrb
icebp
or
pop
movsl
out
popf
mov
adc
add
push
sbb
xor
idivb
lods
popf
loop
push
or
and
mov
mov
dec
inc
mov
adc
mov
or
ss
fldenv
cld
repz
cmp
jl
pop
stos
stc
adc
or
lds
pop
sahf
sar
mov
jno
ss
repnz
inc
jp
ss
insw
xor
out
and
dec
lret
aaa
mov
jb
jnp
fwait
pop
movsb
mov
cmp
mov
mov
punpcklwd
push
out
js
test
jnp
lds
stos
xor
push
int
cmp
sbb
pusha
pusha
mov
mov
sbb
int3
fcmovnb
lds
pop
mov
jo
or
jge
fcmove
rcrl
das
je
popf
int3
push
mov
nop
pop
dec
cli
mov
sub
xor
ficoms
mov
pop
lea
icebp
int3
scas
mov
divb
jecxz
lahf
jno
shlb
mov
pop
push
sti
ljmp
xchg
sarl
push
mov
pop
mov
popf
xor
lea
nop
cmp
pusha
mov
outsl
insl
push
out
mov
dec
mov
fs
test
xchg
lods
sahf
out
xor
mov
leave
and
mov
sub
inc
xorl
xchg
jp
xchg
lret
sub
cmp
sbb
sub
pushf
insl
cmp
and
mov
sbb
bound
cwtl
pushf
mov
cmpsl
pop
insb
dec
dec
mov
mov
inc
aas
shlb
dec
jge
xlat
popf
sti
subl
cltd
pop
add
repz
and
fsubl
imul
push
jl
pop
div
int3
les
lahf
sub
dec
push
inc
lahf
fs
in
insl
pop
and
outsl
rolb
sbb
jno
push
xchg
dec
lcall
add
js
pop
in
out
xchg
mov
xchg
add
pop
cmc
cmpsl
clc
inc
rcrb
icebp
push
push
mov
les
inc
dec
xor
scas
std
call
dec
data16
das
ret
and
xor
in
inc
or
lock
iret
nop
arpl
orb
dec
cmovg
bound
scas
in
add
jl
insl
mov
adc
or
xchg
cltd
lcall
inc
xor
adc
jecxz
std
pmuludq
pop
test
mov
push
sub
mov
outsl
arpl
out
movsl
test
push
test
sub
jbe
and
sar
inc
pushf
and
out
and
test
mov
ss
das
mov
dec
xor
mov
repnz
aam
and
in
add
sarl
or
or
sub
aas
pop
in
mov
shlb
bound
pushl
pop
push
into
inc
mov
adc
enter
test
cmp
adc
loop
ljmp
lods
fwait
loop
andb
jae,pn
sbb
lret
mov
add
cmpsb
outsl
es
jo
xor
push
cwtl
cmp
adc
sub
sbb
stc
dec
mov
leave
stos
mov
scas
inc
mov
pop
addr16
push
mov
adc
push
or
lret
addr16
test
shlb
icebp
inc
pop
test
test
popf
sti
clc
jecxz
movsl
pusha
sbb
pop
mov
mov
inc
push
mov
popl
ret
pushf
cmp
fcomp
xor
ds
cmp
addr16
sub
out
add
inc
jmp
mulb
mov
sarl
pop
or
addr16
rcl
insb
les
add
repz
xchg
mov
in
cmpsl
pop
decl
cmp
loopne
rorb
dec
or
mov
mov
int
int
scas
and
inc
or
cmpl
mov
test
pop
in
inc
pop
and
loop
imul
int
push
aas
mov
and
movsl
call
dec
mov
sub
movsl
es
enter
add
imul
cwtl
scas
mov
sbb
push
add
sub
out
push
mov
in
cmp
sahf
in
mov
or
jbe
xchg
mov
pop
pop
movsl
lret
mov
test
popf
gs
imul
in
jnp
je
xchg
pop
cs
mov
push
outsl
daa
push
mov
xchg
mov
fidivl
pushf
into
ficompl
shrb
std
data16
aas
cmp
sahf
push
xchg
popf
sub
in
aas
and
test
push
pop
mov
outsb
popl
xchg
add
dec
cmp
repz
inc
pop
call
add
or
pop
scas
pop
jg
jp
push
aad
loop
int3
ret
add
dec
arpl
mov
popf
sbb
mov
inc
sbb
xor
dec
daa
movsb
popf
push
dec
fwait
mov
test
inc
cmpsb
mov
leavew
xchg
pop
call
lcall
idivb
cmp
push
or
jae
mov
adc
jae
xor
push
and
lcall
rorl
mov
insb
addr16
push
add
js
mov
xchg
inc
cmp
jg
inc
push
jno
daa
inc
aas
pusha
jge
jo
mov
jnp
test
pop
scas
fcoms
ds
out
rcrb
andl
hlt
cmp
andb
cmp
insb
mov
fdivrs
xchg
sub
mov
aad
int3
mov
rcl
sub
outsl
js
mov
rdpmc
jae
cmp
stos
mov
test
rolb
mov
bound
lret
mov
push
or
sti
int3
popa
inc
mov
push
inc
mov
xor
outsl
sub
sbb
push
loop
inc
mov
sub
mov
fdivrs
mov
pop
adc
aad
pop
xor
pusha
xchg
pop
cmp
dec
call
dec
lahf
xor
int3
cmp
mov
xchg
enter
andnps
sahf
js
inc
and
repz
sub
scas
pop
adc
sar
fistps
hlt
bound
lock
mov
jae
jno
imul
add
clc
test
fisttpll
fnstsw
jle
fs
ljmp
pop
push
sbb
dec
cmp
xor
xchg
jns
pop
ljmp
dec
scas
mov
xchg
mov
xchg
insb
jae
jno
jbe
lahf
imul
mov
std
and
test
and
fisttpll
dec
jle
ficoml
jae
sti
cs
int3
stos
add
xchg
arpl
and
scas
outsl
repnz
nop
sub
push
xchg
and
xchg
incl
cmc
out
ljmp
clc
iret
sub
dec
push
decl
rorl
test
jl
jo
es
sti
jbe
cmp
xor
sbb
pop
std
jge
pop
lret
mov
out
into
and
dec
shrb
outsl
jno
add
jo
sbb
inc
mov
int3
jnp
mov
adc
lods
mov
hlt
mov
clc
sbb
rcrb
fidivl
mov
nop
pop
push
movsb
sub
in
push
jge
sub
mov
sbb
loop
cwtl
sbb
pop
add
sti
cmp
out
lods
stos
fcmovnu
xor
sti
mov
call
addr16
js
pop
icebp
mull
cmpsl
mov
and
jo
jl
es
sub
cs
mov
sbb
test
pop
mov
xor
fidivl
dec
xor
cmp
jb
subl
imul
sbb
mov
popf
jb
mov
push
jno
cmp
addr16
sub
loop
movsb
mov
insb
gs
xchg
xlat
ds
and
sbb
jne
lods
test
les
lahf
mov
insl
jmp
add
insb
pop
inc
jmp
xor
jo
jnp
mov
ret
adc
fmuls
mov
push
out
rorl
cli
scas
filds
jns
out
cs
dec
push
push
mov
repnz
jo
jb
sbb
cltd
repz
popl
popl
imul
rolb
adc
stos
nop
jb
inc
daa
cli
nop
movsb
mov
mov
addr16
dec
xchg
clc
mov
rcrl
xor
enter
addr16
insb
cli
rep
das
add
cmpsl
dec
jnp
mov
adc
scas
dec
add
icebp
sti
ret
xchg
mov
test
add
jmp
cli
sub
daa
jecxz
addr16
jl
clc
mov
in
outsb
push
sub
add
lods
das
push
jno
insl
pop
std
jnp
fsubrs
jb
in
je
std
add
outsl
into
incb
mov
pop
insl
sbb
push
or
sarl
leave
adc
add
adc
jae
test
mov
lret
adc
insl
adc
jl
into
mov
lcall
jl
ficompl
inc
sbb
ja
mov
or
lods
or
cwtl
call
cmpsl
add
insl
pop
nop
jns
out
sahf
loop
pop
push
adc
add
dec
dec
cmp
fstps
sub
adc
movsl
mov
pusha
lds
sub
inc
inc
icebp
call
mov
clc
aas
sbb
mov
ror
inc
and
je
mov
add
pop
mov
movhps
dec
xchg
mov
outsl
push
fwait
or
push
scas
dec
sahf
mov
adc
xor
mov
cli
lock
sarl
sub
cmp
int
call
cmp
ds
or
cmp
imul
cmp
out
adc
int
cmpsb
push
xchg
mov
addr16
and
in
dec
scas
or
add
mov
in
mov
mov
mulb
jmp
shrb
mov
mov
mov
pop
add
push
and
dec
xlat
clc
in
jl
fadds
jmp
rcll
and
jbe
xlat
or
xchg
outsl
jecxz
enter
mov
repz
subb
sub
and
dec
xchg
fs
jbe
pop
xchg
sarb
push
repnz
es
cmpsb
loopne
push
rcrl
ret
imul
movsl
movl
fiadds
push
test
xor
repz
or
outsb
fmull
mull
sahf
sub
test
fists
mov
mov
push
sub
insl
and
cmp
add
test
mov
mov
dec
rcl
cltd
loope
test
jnp
jg
mov
xorb
fisubrl
popf
aad
ficompl
jb
mov
adc
jge
mov
or
nop
icebp
mov
lock
jmp
shlb
mov
out
pop
pop
mov
and
adc
add
ljmp
pop
in
orl
jmp
mov
push
movsb
shrb
and
fs
movsb
aam
push
mov
dec
pop
push
mov
lcall
and
aaa
adc
mov
cli
add
pop
jae
subb
std
mov
repz
sbb
adc
inc
lock
mov
xchg
adc
mov
mov
aad
adcl
mov
adc
push
sti
icebp
movsb
push
ja
insb
pop
mov
lahf
mov
scas
les
and
pop
jbe
inc
and
pop
mov
popa
mov
jge
into
adc
fsubs
outsl
int
jecxz
pop
xlat
sbb
mov
cmp
addr16
int
xlat
add
add
sbb
ret
sti
mov
fldl
mov
popa
shll
cwtl
shl
cltd
pusha
dec
xor
out
jp
lods
dec
cs
mov
stos
add
fmuls
in
orl
adc
scas
mov
movsb
sbb
or
shll
push
add
and
sub
scas
adc
push
and
das
int3
xor
negb
cltd
lret
shr
mov
mov
out
rol
mov
pop
loop
popa
or
std
push
rcl
mov
outsl
lods
mov
in
inc
adc
mov
stos
xor
lods
push
mov
dec
ror
mov
es
fcomps
aam
jle
push
mov
out
pop
cmpsb
jno
dec
and
arpl
out
fldt
xchg
xor
loopne
fyl2xp1
xor
repz
repz
inc
fsubl
aaa
sbb
adc
ja
sbb
lret
sub
mov
in
repz
frstor
mov
mov
sub
xchg
fcomps
negb
xchg
into
push
sbb
mov
rcrl
adc
movsb
mov
sbb
and
shll
cwtl
jnp
add
stc
mov
push
test
repnz
inc
mov
out
inc
dec
xchg
jmp
push
mov
fstpt
std
lcall
int
into
jmp
ficoml
push
repz
sahf
pop
sbb
loope
je
push
mov
inc
push
sub
sub
adc
sbb
and
pop
jae
jne,pt
inc
aaa
sub
insl
pop
jo
nop
fsubrp
test
lods
clc
lods
out
xorl
icebp
mov
cmp
aas
orl
aam
inc
rol
in
shl
jmp
in
sub
pusha
sbb
push
mov
stos
add
mov
loope
xor
es
pop
dec
push
cli
movsb
out
out
out
rclb
jl
dec
adc
test
lret
xchg
pop
test
mov
sbb
je
push
sub
sbb
mov
jne
js
sbb
or
mov
in
lds
aaa
adc
cmp
add
jl
add
mov
add
vpcmpgtw
jge
jmp
cmpsl
jl
cmp
shl
xchg
insb
aad
add
push
pop
inc
or
iret
sbb
mov
xlat
xchg
out
pop
or
int
mov
xor
or
sarb
loopne
dec
outsl
xor
sbb
and
or
xchg
jge
jne
add
movsl
ret
or
dec
pusha
xchg
ss
jne
adc
push
add
inc
imul
ficoml
lea
inc
push
outsb
xchg
mov
xchg
outsl
mov
or
aaa
or
ds
scas
xchg
pop
test
mov
lret
mov
cmc
pusha
stc
in
jne
clc
enter
incl
out
jnp
insl
push
push
push
inc
jl
lret
xor
rorl
adc
mov
cmc
fstpt
sbb
jecxz
popf
adc
nop
jl
cvtpi2ps
pop
mov
cld
and
mov
and
les
es
imull
ds
stc
push
xor
xor
aaa
cmpl
inc
stos
pop
mov
mov
mov
cld
jne
aas
sbb
dec
mov
cmc
pop
pusha
ds
mov
daa
fs
test
iret
pushf
mov
sbb
add
pop
decl
dec
stos
mov
push
loop
dec
enter
sbbl
hlt
xchg
in
mov
xchg
push
shlb
in
sbb
push
in
insl
adc
ljmp
xor
pop
lods
mov
loope
or
sub
cs
mov
push
clts
cmc
mov
mov
aaa
lahf
cmp
rcll
adc
add
lds
jge
aad
xchg
xchg
sbbb
dec
loop
or
add
lea
cli
adc
adc
aam
xlat
cmp
xchg
dec
sub
int
rcr
mov
out
lds
movsl
pop
xchg
mov
xor
test
out
out
nop
cs
testl
addr16
jg
and
leave
adc
addr16
icebp
sbb
shll
test
mov
cld
pop
or
inc
mov
xchg
aam
and
xchg
inc
lods
popa
test
xor
jg
aad
das
cld
decb
icebp
shlb
test
andb
xchg
test
sahf
jb
orb
daa
ss
jne
icebp
xor
inc
push
xor
mov
mov
sbb
mov
push
mov
aad
and
jge
sbbl
fdivs
in
push
rcrl
scas
sub
int3
mov
mov
dec
sub
arpl
pushf
push
cmp
push
ja
push
call
and
jns
adc
mov
stc
sahf
pop
or
push
dec
push
jne
pop
adc
dec
lea
nop
xchg
mov
andb
loopne
and
jmp
cld
insl
cmpsb
adc
notb
stos
pop
test
ja
dec
aas
mov
lea
in
in
int
sbb
mov
pop
dec
jecxz
cmp
in
push
imul
shl
or
jl
repnz
out
lock
cmpsb
push
cs
fnstcw
sub
mov
xor
out
lods
jle
mov
inc
jle
lds
mov
mov
pop
sbb
jo
mov
mov
pushf
mov
xchg
cmp
xchg
mov
int3
mov
insl
popf
rclb
add
hlt
push
or
popa
insb
and
inc
cmc
xchg
mov
push
sub
orb
fisttpll
mov
cmc
aam
mov
xchg
fiaddl
sbb
je
cld
and
data16
in
pop
cmp
fimuls
sub
std
or
xor
xorl
xor
pop
sbb
inc
adc
loopne
cmc
pusha
lret
xor
das
sub
out
cmpl
rclb
mov
and
dec
lcall
in
pop
dec
push
dec
xchg
ds
mov
xorb
jne
cmp
inc
jle
and
dec
dec
insl
mov
xchg
mov
push
jmp
cmp
test
cmp
xor
adc
sbbl
shlb
cmpl
outsl
cmp
fisubs
xchg
ror
mov
shlb
push
jp
fildl
mov
stos
div
mov
je
dec
rcrl
lahf
mov
sub
pop
mov
jmp
jo
iret
ret
addb
cmp
push
scas
repz
stos
jo
mov
arpl
inc
xchg
inc
inc
cmc
add
insl
adc
imul
pop
sub
push
dec
push
pushf
nop
mov
test
cmp
mov
xchg
cmpsl
arpl
mov
in
push
pop
jb
arpl
popf
shlb
xchg
xor
repnz
adc
xchg
pop
mov
aas
jnp
je
repz
mov
lds
mov
fnsave
int3
xor
shll
ret
mov
pushf
dec
addr16
leave
cmpsb
cmp
lret
testb
mov
push
xchg
push
dec
xorb
mov
xchg
add
inc
pop
cltd
jmp
xor
mov
add
bndldx
or
pop
mov
loope
shrb
int3
jge
push
sbb
iret
cld
out
xor
push
mov
test
or
lds
cmp
jno
loope
imul
cmp
or
sti
repz
cmp
mov
jns
push
addl
bnd
faddl
test
dec
mov
out
rcll
and
jbe
ret
ja
mov
mov
dec
aaa
pusha
loopne
loope
fs
test
in
inc
mov
mov
mov
mov
inc
add
fsubl
lods
or
loopne
pop
fidivrl
cmc
mov
dec
gs
lods
nop
add
std
lahf
insl
push
xor
lcall
jp
cltd
in
data16
inc
outsl
rclb
push
inc
inc
jl
adc
push
adc
loope
jnp
pop
xchg
jl
and
sbb
jg
cmpl
aad
jb
add
mov
add
xorb
sahf
push
out
es
sbb
inc
xlat
sub
in
mov
or
test
xorb
xor
popa
test
xlat
jle
sbb
mov
mov
push
lock
mov
pushf
insl
jae
push
mov
sbb
test
xor
mov
sbb
pop
push
mov
xchg
xor
xchg
sti
punpcklwd
out
cmp
iret
xchg
jne
stc
dec
call
add
in
ficoml
es
enter
popf
dec
xchg
push
sbb
aam
xchg
push
sub
xchg
sub
inc
xor
dec
clc
adc
jp
push
sti
cmovs
inc
dec
fsubl
inc
add
mov
jno
lret
int
dec
addr16
adc
es
in
in
leave
jl
and
repz
insb
dec
jecxz
lcall
pushf
clc
popf
push
xchg
loop
repnz
std
stos
adc
xor
sub
bound
in
es
cmc
push
repz
iret
stos
in
out
cwtl
xor
dec
rclb
lds
jl
mov
jp
movsl
mov
push
fs
mov
and
push
mov
adc
add
pop
mov
inc
and
cmp
stos
fcmovne
lock
leave
xchg
push
sub
xchg
push
addr16
outsb
imul
out
and
in
adc
nop
fimuls
int3
pop
push
jge
xchg
sbb
sbb
or
shl
std
ror
push
shll
xor
and
mov
push
rorb
andl
jecxz
push
les
imulb
out
pop
mov
jno
pop
and
adc
mov
mov
lods
jge
rol
jg
std
decl
dec
jb
imul
in
in
lahf
test
cmp
pop
sbbb
and
insb
pop
sub
cmp
jno
popf
scas
repz
in
rol
and
xchg
ljmp
push
push
pop
and
in
add
cmp
pop
je
sbb
xlat
arpl
notl
adc
and
cmp
test
aad
das
shr
cmp
sub
arpl
jp
xor
loopne
ficoms
inc
les
dec
xchg
and
outsb
leave
cmp
dec
call
insl
sub
scas
mov
lods
jno
data16
pop
loopne
in
pop
test
loopne
push
pop
outsb
or
dec
ds
lods
fcmovnu
add
movsl
add
rclb
ja
aaa
popa
bound
cli
insl
pop
jb
repnz
jno
int3
xchg
int
or
stos
lock
pop
cwtl
mov
jge
popa
lahf
jbe
sbb
jae
ss
inc
scas
imul
iret
dec
aas
test
push
mov
loopne
fisubs
push
hlt
mov
inc
dec
jo
sub
in
fcoms
addr16
lds
dec
imul
in
inc
cmp
sbb
sbb
jl
jg
mov
jmp
mov
mov
jmp
inc
fidivrs
jne
hlt
inc
inc
add
in
scas
and
mov
pop
pop
pop
xchg
jnp
test
add
test
sbb
aas
xor
ds
cli
sub
incl
dec
jmp
fcomps
xchg
mov
inc
push
jmp
jp
jo
xor
call
xchg
bound
jl
cltd
fcomps
mul
mov
xor
call
scas
pop
frstor
daa
dec
mov
sarb
icebp
fwait
xlat
sti
cmc
dec
mov
mov
scas
push
aaa
out
and
mov
jg
fs
subb
sbb
adc
or
iret
jno
test
lea
ret
and
mov
cwtl
xchg
add
mov
stc
mull
scas
mov
push
or
in
mov
xor
jbe
negb
call
or
xchg
xchg
mov
shr
inc
lahf
xor
scas
mov
mov
add
push
hlt
mov
sub
jb
rcrb
pop
aas
cmp
popf
mov
xchg
test
cmp
jns
fucomip
or
mov
dec
xchg
inc
das
lock
mov
push
fsubl
xchg
mov
add
adc
sti
push
dec
stc
and
sarb
loope
mov
and
aas
push
sbb
das
cmc
mov
cmp
mov
sbb
fisubrl
fs
in
mov
je
cli
sub
mov
cmpsl
jne
xchg
sbb
cmp
int
adc
aaa
dec
or
cmpsl
push
pop
xchg
pop
test
inc
nop
out
sahf
lock
lods
jae
mov
in
sti
pop
cld
js
add
bound
test
aas
leave
mov
in
imul
pop
shll
shl
ret
mov
leave
roll
sti
stc
in
lcall
mov
mov
lahf
sub
test
cmp
xchg
addr16
cmp
pop
cmp
out
dec
xorl
and
pop
mov
mov
adc
bound
or
cmpsl
sub
jmp
nop
push
dec
std
jp
mov
push
jp
int
icebp
ja
pop
dec
and
pop
adc
ror
das
xor
sbb
cmp
adc
xor
inc
dec
test
or
adc
mov
cltd
sub
fdivr
push
es
sahf
repz
inc
push
int
pop
xchg
pusha
addb
mov
sahf
xor
xchg
mov
inc
ret
jg
or
pusha
pop
jo
pushf
add
push
xchg
jns
push
jbe
shlb
add
sbb
cmp
jp
xchg
add
testl
cwtl
mov
inc
xor
sti
pop
mov
push
xor
xchg
sub
repz
out
add
sub
movsb
int3
mov
flds
popf
popa
push
pop
lds
movsb
cld
test
xchg
outsb
cmp
xor
enter
pop
mov
or
jecxz
cwtl
insb
clc
xor
adc
loop
mov
cld
aaa
xor
adc
xor
inc
dec
dec
add
jns
ret
in
jb
ret
repnz
cmp
sbb
mov
es
fdivs
repnz
pop
inc
sbb
or
and
mov
and
cmpsb
xchg
das
mov
sahf
repz
push
repnz
mov
decb
in
and
insb
inc
pushf
sbb
sub
shrb
daa
test
icebp
lahf
loop,pt
cwtl
xlat
pop
aam
cmp
fsubrl
cltd
add
bound
mov
pop
jmp
out
les
daa
mov
xor
icebp
xor
sahf
shlb
jecxz
dec
mov
mov
faddl
js
push
push
mov
test
sub
aaa
push
jg
pop
xor
adc
sets
jge
pop
cltd
insb
dec
push
jl
fwait
jno
jge
dec
mov
jae
jle
cmp
dec
or
sbb
ret
mov
push
loop
dec
jle
jb
ds
jae
cs
push
out
jno
aaa
jmp
lret
in
cmovs
sarl
cmpsl
pop
push
add
nop
jae
push
jbe
jg
repz
daa
add
jecxz
cs
fisttpll
and
inc
pop
jmp
xor
test
add
std
mov
adcb
jg
inc
test
jns
popa
call
adc
scas
or
fidivl
movsb
loop
shrl
js
xor
mov
add
inc
xor
adc
mov
cmpsl
mov
mov
sub
mov
out
into
imull
mov
in
rorl
aaa
jmp
sub
jnp
outsl
imul
pop
jbe
lods
je
fadd
push
cmp
mov
fistpll
mov
loope
cs
add
mov
shll
mov
and
nop
rol
jle
pop
dec
pop
push
and
adc
xlat
push
pusha
pop
repnz
add
gs
fistpl
notl
sbb
fsqrt
xor
jno
movsb
adc
out
sub
repz
je
sbb
and
mull
adc
clc
outsl
push
pop
fucom
push
mov
out
pop
int
dec
sub
fldcw
lret
xor
in
mov
mov
dec
test
xchg
sbb
stos
les
and
outsb
sub
jle
je
and
ja
imul
xchg
cmpsb
shlb
out
mov
xor
adc
sbb
mov
dec
stos
fidivs
push
cmp
int3
mov
sarb
jecxz
jo
cwtl
orb
inc
insb
mov
pop
mov
in
mov
mov
pop
mov
inc
imul
aas
jmp
lret
xor
testb
insl
mov
sahf
mov
test
and
ss
inc
pop
pushf
inc
and
ja
dec
xlat
movsb
jae
cmpsb
sbb
mov
cmc
mov
jmp
sub
or
in
std
dec
adc
push
and
std
fmulp
jecxz
add
sti
mov
mov
ss
xchg
dec
push
push
rcrl
ret
sahf
les
xchg
fbstp
les
je
add
pop
mov
pop
cmpsb
xchg
jb
fs
daa
sti
pop
xchg
hlt
out
testb
or
mov
xchg
in
fs
jge
into
mov
sub
dec
pop
mov
loop
xchg
inc
jo
lret
pop
mov
mov
std
mov
leave
xchg
pop
mov
cmpsb
insl
in
movsl
movsl
arpl
lods
stos
sbb
mov
and
or
add
lahf
out
outsb
inc
adc
sub
ds
outsl
and
shl
test
in
jb
add
icebp
int3
push
stos
dec
lcall
xorb
out
lret
daa
sub
fwait
loopne
jbe
mov
sbb
sub
addl
std
adc
test
mov
jp
test
adc
ja
std
les
pop
xchg
pop
rolb
pusha
sti
lea
stos
sub
iret
lret
out
les
jne
loope
aaa
lea
repz
cwtl
out
rclb
fmuls
pop
xorb
jne
loop
mov
arpl
adc
dec
xchg
sahf
dec
testb
int3
popf
mov
aaa
cmp
mov
mov
cltd
adc
cmpl
pop
dec
repz
cltd
fbstp
push
cmp
jnp
lods
dec
outsl
aam
cli
inc
icebp
mov
inc
xor
pop
and
sarb
sti
pop
outsl
scas
sub
ret
movb
jg
add
stos
cmp
fidivl
testl
fidivl
imul
cmp
xchg
push
sahf
stos
dec
sbbl
sbb
addr16
xlat
mov
push
icebp
rol
aam
stc
mov
xchg
pop
and
mov
inc
mov
or
adc
daa
mov
cmpsl
lahf
enter
sahf
inc
jb
imul
dec
jl
push
xchg
lock
loop
fdivrl
fisubl
ret
add
loope
leave
popa
fsubs
clc
mov
sub
out
push
xchg
push
ret
mov
pusha
aam
push
aas
es
lock
insl
xchg
xchg
xchg
scas
mov
push
cld
rclb
push
push
jge
push
lcall
sahf
das
cmpsl
cwtl
xchg
gs
and
call
or
loope
gs
outsb
jge
and
lods
jl
inc
mov
push
mov
sub
stos
std
sbb
js
jle
fs
les
enter
into
roll
xlat
pop
lods
data16
pop
mov
icebp
inc
fstl
jecxz
cmc
hlt
push
lods
push
sbb
call
and
dec
ret
cmp
mov
pop
es
cmp
lret
sbb
fnstcw
push
and
sti
test
push
xor
mov
push
and
mov
test
cmpsl
push
sub
jl
popa
movsl
pop
fsubrl
push
ja
and
sbb
and
leave
sarb
sub
dec
pop
adc
cld
cltd
inc
aas
cmp
ret
push
jae
xorl
or
sub
xchg
dec
sub
jno
mov
rcl
sub
pop
inc
push
daa
inc
push
xchg
inc
bound
notb
cmc
add
adc
lea
in
and
jo
dec
xchg
jmp
xor
push
sarb
pop
mov
in
jge
xchg
andnps
jb
repz
jnp
xor
inc
inc
lahf
sub
xor
cmp
rcl
in
repz
out
push
loopne
mov
or
fcompl
pop
lods
aaa
or
nop
and
xchg
inc
inc
inc
xor
xchg
hlt
mov
js
add
in
faddp
jmp
rolb
repnz
aaa
jg
and
ficoms
add
lds
pop
test
hlt
jno,pt
icebp
xchg
push
mov
test
insb
cld
sub
jnp
inc
push
jl
pushf
xor
into
scas
adc
pop
or
mov
mov
mov
pop
insl
mov
rcl
andl
ljmpw
push
fistpl
jbe
add
push
mov
inc
es
xchg
mov
sbb
into
pop
inc
add
rorb
ss
imul
mov
fdivs
add
ret
sahf
mov
fs
movsb
aam
xchg
pop
aaa
or
cmp
icebp
pop
adc
sbb
push
rol
pusha
cli
push
add
lcall
loopne
lods
popf
push
aas
insl
or
pop
rolb
mov
and
pop
call
pop
cmp
mov
lock
jp
dec
stos
ljmp
test
mov
jb
pop
testb
xor
stc
icebp
lret
sub
clc
cmpsl
dec
push
test
mov
faddl
fwait
xchg
push
mov
fisubs
and
pop
lods
sub
adc
lret
int3
mov
lea
loop
mov
inc
cmp
mov
cwtl
sub
and
push
mov
cli
bound
add
bound
push
rorb
mov
fdivrs
aas
lock
cmp
push
sub
lods
jae
lahf
sbb
pop
ja
cmpsl
mov
rcll
mov
and
out
mov
dec
mov
lcall
pop
adc
ljmp
jae
jo
sub
xor
hlt
mov
cmp
sub
jl
xchg
fistpll
jbe
notl
ljmp
out
sbb
prefetch
or
mov
shl
mov
mov
push
sbb
int3
mov
mov
push
and
sub
lods
sbb
bound
mov
jb
popf
adc
pop
mov
mov
push
pop
cmc
dec
icebp
mov
adc
jb
xchg
leave
lret
ds
es
jb
sbb
mov
test
inc
push
je
int
scas
movsb
stos
jp
xchg
adc
lods
enter
pop
push
mov
mov
bound
or
test
in
jno
out
out
fldcw
pop
fdivrs
jae
loop
adcl
jb
ja
mov
xchg
push
mov
and
pop
inc
stos
int
out
mov
stos
pop
adc
aad
xchg
mov
cmp
and
cmp
mov
lods
imul
scas
repnz
sub
push
dec
dec
push
in
adc
sub
insb
sub
push
inc
push
ret
mov
dec
scas
pusha
jge
enter
pop
out
pop
sahf
pop
cld
lds
sbb
adc
cmp
pop
xor
inc
xchg
fcoms
push
xor
fimuls
jle
inc
int
in
xchg
pop
and
sub
inc
je
sbb
jmp
testl
sbb
ljmp
jbe
adc
mov
pushf
inc
sahf
leave
lods
mov
mov
insb
jg
dec
mov
ljmp
sbb
cmpl
sub
push
or
mov
mov
mov
cmpsl
xchg
jp
rolb
push
iret
xchg
mov
call
pop
mov
loopne
push
xor
bound
fdivs
mov
mov
push
frstor
xchg
mov
cwtl
imul
sub
sbb
mov
punpckhdq
clc
das
call
shll
jg
pop
adc
jecxz
es
call
scas
stos
aas
outsb
dec
or
js
loop
clc
xchg
or
stos
or
inc
or
push
cmp
in
mov
fimull
inc
orl
fs
clc
aas
dec
scas
stc
xchg
stos
cs
push
lods
movsl
divps
stos
or
nop
out
adc
dec
jnp
rcrl
push
pop
out
xrstor
xchg
stc
lds
and
addr16
jnp
push
mov
call
jo
pop
mov
dec
mov
rcll
pop
mov
add
cmp
xor
cwtl
mov
lahf
test
imulb
mov
mull
into
loopne
cmp
dec
rcrb
dec
lahf
mulb
gs
out
movsb
xor
and
and
xchg
xor
movsl
scas
stc
inc
sbbb
ret
cmp
jno
ljmp
enter
sahf
aam
jge
pop
int3
adc
bound
xchg
das
shrb
andb
xchg
sub
jle
shl
xor
lea
push
mov
jnp
ret
push
xorb
movsb
inc
std
stos
enter
cmc
out
mov
lahf
ljmp
mov
outsl
aad
and
dec
cwtl
push
fstpl
jp
shr
pop
inc
hlt
filds
stc
lahf
test
fmul
sbb
mov
mov
mov
mov
das
push
xor
mov
inc
std
add
jnp
das
mov
xchg
cmp
incb
adc
jnp
xor
cmp
and
ds
fcmovnb
or
jns
in
pop
sub
hlt
sub
fcmovnbe
fldcw
aaa
push
test
addr16
ror
xor
imul
dec
in
add
xor
jecxz
jge
rcl
push
sahf
cmp
int
daa
mov
aam
lahf
xchg
xchg
test
cmp
inc
stc
test
hlt
pmaxsw
push
fdivr
mov
pusha
test
mov
movsb
add
je
jno
in
scas
dec
scas
clc
inc
repnz
pop
pop
je
lea
pop
fldt
jne
pop
cmp
cmp
lea
mov
test
push
or
mov
inc
fmuls
mov
xchg
and
cmp
mov
sbb
fistl
in
movsl
sub
mov
sub
scas
lods
dec
mov
fcmovu
movsb
mov
xor
or
xchg
mov
popa
cmp
inc
imul
sub
cmp
adc
insb
add
fidivs
adc
aaa
pop
push
jbe
add
mov
sbb
add
sbb
pop
cmp
dec
adc
cmpsb
push
addr16
xor
mov
mov
mov
jp
push
repnz
sbb
das
xchg
mov
lahf
stos
pop
insl
fwait
lock
fldt
leave
push
mov
ljmp
les
xchg
cld
lods
cltd
xlat
jno
xor
xchg
lods
xchg
add
inc
mov
add
lret
fdivl
neg
enter
stos
ja
cli
jbe
or
push
xor
or
pop
mov
faddl
insb
lea
shll
inc
mov
cltd
imull
pop
fstpt
xchg
lods
mov
push
sbb
sub
out
lock
lods
cmp
out
mov
cltd
mulb
mov
sti
xchg
jo
lea
sub
shll
xlat
sbb
adc
mov
cmpsb
push
enter
mov
mov
popa
cmpsb
cmp
popf
push
or
pop
fs
mov
jge
inc
add
sbb
ds
mov
adc
ja
jnp
mov
sub
adc
adc
enter
test
xchg
inc
add
cmp
push
gs
and
or
xorl
out
jmp
xchg
push
dec
in
cmp
outsl
push
decb
jl
popa
push
aas
inc
loope
int
sbb
movlps
in
repnz
popf
sub
jp
inc
icebp
or
fldenv
xchg
xor
push
cli
jp
mov
push
jo
xor
lcall
cmpsb
outsl
cwtl
pop
mov
inc
outsl
mov
mov
xchg
dec
lods
cmp
arpl
xchg
sbb
jnp
aad
aad
movsl
pop
add
push
neg
fwait
adc
cmpsl
push
ret
add
xchg
pop
lahf
push
jmp
sbb
mov
or
xor
cld
xchg
mov
dec
mov
insb
cmpsb
inc
push
js
jbe
ljmp
test
fucomi
add
cmpsb
xchg
cmc
imul
mov
repz
out
sub
push
mov
push
mov
test
push
out
ret
sub
sbb
mov
lahf
fidivl
push
lds
mov
loopne
js
push
loop
xchg
xchg
jge
jg
sub
lock
pop
xchg
xor
and
call
imul
cs
xor
dec
rcll
mov
out
lock
pxor
jnp
pop
test
imul
jmp
inc
xlat
or
aad
rclb
outsb
jmp
scas
mov
stos
inc
leave
js
push
inc
adc
mov
cmp
int3
adc
xchg
push
std
cmp
mov
nop
jg
and
mov
xchg
adc
je
mov
lock
mov
jge
xor
cmp
mov
addr16
push
jmp
jg
or
ss
mov
in
mov
pusha
in
sbb
fdivl
sti
cld
rclb
mov
push
lods
push
sti
xor
pop
mov
jno
xor
push
outsb
lods
js
in
mov
out
stos
xchg
rcr
mov
sub
repnz
push
mov
ds
enter
js
loop
inc
int3
mov
sbb
cmp
inc
pop
jnp
ss
nop
rcl
push
inc
jbe
mov
aas
adc
dec
movsb
ret
mov
leave
pop
push
andb
pushf
push
cld
mov
xor
enter
insb
or
push
shl
imul
or
adc
jecxz
jbe
loope
pop
xchg
dec
xchg
or
out
pop
lods
bound
je
lret
xchg
ss
dec
mov
jbe
leave
adc
ja
mov
sub
push
je
fs
lret
out
dec
cmp
push
jno
cli
pop
dec
push
lods
xor
push
sbb
test
sti
xchg
sub
jg
cmp
cmp
ret
jl
xchg
jg
aaa
pop
dec
and
push
out
xor
loopne
cmp
lock
sub
mov
test
mov
out
mov
insb
les
mov
dec
jae
leave
jmp
jbe
sub
push
fwait
jge
fsubs
fidivrl
std
cs
repnz
mov
ss
or
dec
insl
sub
repz
mov
mov
xchg
or
movsb
mov
shrl
dec
dec
pop
jp
mov
push
cmp
adcl
sbb
and
movsl
cmp
cmpsb
outsl
mov
call
data16
jo
in
mov
dec
out
je
mov
xchg
loop
cmpsb
bound
push
out
imul
movsb
and
addr16
imul
xor
loopne
fistps
inc
ss
xor
mov
daa
xor
fidivrl
jmp
sahf
jbe
xorl
cwtl
sbb
cld
jae
pop
iret
adc
cwtl
lcall
push
pop
adc
push
lods
test
stc
cmp
or
ja
ss
sbb
std
into
jnp
ss
fcmovne
pusha
idivb
or
adc
cltd
mov
inc
cwtl
in
push
push
mov
cmp
dec
pop
test
jle
aad
sub
imul
imul
leave
dec
scas
in
push
adc
icebp
faddl
data16
cltd
push
adc
jl
xlat
sbb
xor
ret
mov
pop
bnd
push
mov
lods
icebp
lods
push
sub
pop
push
test
cwtl
pop
adc
aam
inc
inc
xor
mov
push
and
pop
cs
adc
xor
cmp
push
jge
std
adc
nop
out
popa
pop
pop
xchg
and
jb
xlat
lds
xchg
js
sbb
pushf
push
dec
loop
das
out
dec
movsl
lds
fbld
arpl
addl
les
popa
mov
xchg
aad
jecxz
ret
fisubs
jp
xlat
xchg
ret
jg
aas
js
and
imulb
pusha
xchg
jbe
pop
popa
xor
arpl
mov
jle
hlt
lret
sarb
sub
notb
and
push
add
loopne
xorb
or
add
jb
test
cmp
mov
push
ret
scas
sub
lahf
popf
fisubrl
mov
lahf
jo
pop
shl
int
adc
sbb
ret
insb
and
loope
cmp
scas
movb
jnp
push
pop
clc
in
mov
inc
fbstp
jnp
minps
lcall
movsb
aas
adcb
jbe
in
pop
jmp
and
jg
jo
scas
and
add
dec
inc
ret
fnstsw
int
lea
into
sti
in
sub
test
insb
orl
xchg
cmpsb
dec
or
jne
mov
gs
packsswb
sbb
jne
lea
js
iret
push
sub
ja
jl
xchg
inc
outsb
scas
clc
add
int
cltd
insb
push
and
enter
dec
mov
add
imul
sub
sub
xchg
push
loop
imul
rolb
jmp
and
push
mov
xor
xchg
jge
pop
loop
mov
mov
inc
aaa
jno
test
pcmpgtw
aaa
mov
push
pop
movsb
mov
lret
int
es
popa
sti
inc
xchg
mov
popf
hlt
daa
aam
mov
movsl
ja
inc
jb
push
and
insb
sarb
push
jp
cs
adc
mov
dec
pop
and
cs
sub
daa
imul
int
outsl
push
mov
pop
pop
jno
inc
addb
inc
orb
pop
and
ret
adc
sub
mov
mov
fadd
cmp
sbb
test
xchg
push
addb
jle
push
jge
iret
xchg
push
xchg
xchg
int
mov
rolb
insl
fwait
xor
jge
cmp
cmp
or
lea
pop
pop
sub
mov
push
dec
adc
cs
mov
and
jge
imul
pop
xchg
mov
mov
xchg
lods
dec
or
fdivrs
int3
rol
cmp
mov
mov
push
fldl
add
call
repnz
ret
pop
pop
push
xchg
pusha
add
fsubrs
add
pop
insb
sub
sub
mov
addb
cmpsl
add
subb
test
jmp
ljmp
pop
jns
xchg
jb
mov
jae
fsubrp
push
inc
aad
or
mov
pop
aad
dec
jnp
outsl
les
lahf
out
sbb
scas
fdivl
int
and
sti
push
imul
cmpsl
push
xchg
add
dec
xchg
imul
mov
loope
fwait
dec
ret
push
sahf
or
jmp
sub
dec
jno
movsb
mov
bound
jns
push
pusha
or
popw
pop
js
inc
sti
mov
inc
lods
stos
push
fsubr
sarb
mov
sti
test
add
lock
outsw
loopne
sub
mov
mov
pusha
inc
xchg
inc
imul
xchg
inc
aaa
jnp
stc
inc
jbe
mov
add
out
jno
mov
call
dec
xchg
push
outsl
and
mov
outsb
sarb
ficoml
add
push
shlb
loop
or
add
inc
cmp
push
jae
dec
sub
jno
aas
push
cwtl
movb
mov
xchg
dec
sbb
test
push
sbb
dec
dec
mov
add
pop
dec
imul
xor
sbbb
imul
test
add
mov
mov
sbb
mov
mov
adc
rcrb
hlt
push
pop
inc
jl
arpl
loopne
push
or
dec
cmp
jg
ja
adc
lock
mov
orl
stc
xchg
dec
test
add
outsl
push
sbb
hlt
cmp
popf
sbb
sub
xchg
or
aam
enter
lahf
push
dec
push
pop
xor
out
add
xchg
and
mov
mov
xchg
popa
add
cmc
data16
jle
call
xlat
and
inc
adc
popf
dec
push
cs
adc
or
push
pop
inc
sbb
loope
jp
and
jecxz
or
insl
xor
or
jle
ds
sbb
jle
in
rclb
cmp
mov
sub
inc
icebp
adc
ljmp
adc
cld
mov
mov
add
neg
ss
arpl
stc
std
pop
mov
or
push
dec
into
and
ja
test
insl
xor
push
mov
subl
in
shlb
sti
xchg
pop
outsl
lock
jle
xor
fmull
popf
test
into
rorl
cmpl
xorl
adc
mov
mov
mov
and
popl
aam
movsb
sbb
adcl
loopne
push
cltd
or
es
adc
lret
movb
pop
sub
out
sub
rcrl
ret
jp
lods
sub
hlt
jg
mov
mov
cli
dec
movsb
fidivrs
lcall
test
add
imul
jle
arpl
push
add
out
shlb
mov
iret
xchg
sub
cmp
js
ror
sti
stos
insb
ja
dec
push
push
les
test
in
loop
das
xchg
ja
xchg
lahf
dec
mov
aad
pop
mov
inc
adc
daa
dec
xorb
rcll
inc
lds
mov
aad
aam
repnz
or
xor
fldcw
mov
push
cmp
and
push
fsubl
sub
xor
jl
xchg
inc
mov
movsl
and
lea
in
imul
push
mov
cmp
jne
cmp
jbe
orl
add
sub
out
cmc
add
rorl
in
cmpsb
es
pushf
push
pop
hlt
xor
xor
pop
sbb
lods
xchg
sti
xor
jg
and
mov
jb
jp
xor
test
sbb
sbb
cmc
mov
cwtl
sbb
mov
mov
imul
test
es
ret
dec
add
xlat
leave
popa
pop
sbb
push
scas
mov
or
in
jno
cmpsl
hlt
sub
mov
jmp
mov
pop
je
leave
sbb
ret
mov
mov
jns
shll
data16
lcall
je
mov
ljmp
xlat
pop
mov
mov
xor
xchg
mov
jno
jle
test
pop
mov
xchg
lods
fcmovu
aaa
nop
xchg
icebp
popa
aad
xor
pushf
mov
orb
jp
sti
test
inc
dec
xor
test
enter
imul
test
in
les
cs
gs
fiaddl
mov
nop
add
test
enter
and
loope
sbb
lock
jg
dec
scas
cwtl
add
jl
lcall
leave
push
lret
pop
subb
xchg
mov
add
adc
jne
adc
dec
sub
ret
xchg
ja
inc
movsb
ljmp
and
inc
inc
push
iret
cmpsb
mov
mov
adc
mov
dec
cmpsl
or
sbb
rorl
and
sahf
adc
add
jmp
cmp
xchg
or
cmc
pop
adc
add
xchg
inc
push
arpl
scas
aas
jnp
call
inc
mov
rorb
pop
aaa
xchg
lahf
ja
shll
sbb
adc
add
pop
inc
stos
xor
cltd
xor
cmp
inc
mov
cld
scas
adc
subb
mov
xor
and
ret
mov
adc
mov
push
rclb
in
adcb
call
xchg
adc
into
sbb
fwait
insb
push
lret
popf
xor
loopne
push
roll
sub
adc
inc
popf
test
and
hlt
or
test
cld
jecxz
clc
pop
pop
lcall
icebp
cmpsl
cltd
negb
push
xchg
ficomps
jmp
mov
push
jmp
add
lea
xchg
je
gs
cmpsb
mov
or
xchg
pop
mov
in
mov
inc
or
lcall
cmp
dec
sbb
adc
mov
pop
pop
pop
xor
in
fstpl
push
sub
popf
test
movsl
xchg
lock
sub
lds
adc
sub
and
xchg
stos
cmp
jb
pop
test
mov
jbe
pop
popa
mov
and
in
and
popa
and
dec
and
sar
push
into
pop
pop
inc
out
imul
lret
jge
lret
push
pop
ljmp
imul
or
imul
inc
inc
adc
cmp
or
inc
fimull
data16
adc
lds
shlb
push
ljmp
in
mov
lock
movsl
add
notb
or
inc
dec
mov
lds
enter
dec
jg
imul
and
inc
repz
xlat
inc
lds
adc
std
outsb
das
jmp
hlt
pop
pop
hlt
mov
xchg
dec
fcoml
or
or
pop
cmp
pop
gs
popa
cmp
adc
subb
mov
pop
mov
or
cmp
mov
adc
and
mov
icebp
out
fnstsw
cmp
lret
xchg
cmc
cmc
xchg
adc
cld
scas
mov
mov
repz
cmc
inc
pop
sub
pop
mov
xor
jae
adc
in
mov
stos
dec
and
add
aam
sub
aad
jns
and
addr16
inc
repz
testb
pop
inc
xor
leave
sub
jne
negl
pop
cmpsl
in
pop
lea
loope
adc
inc
sahf
add
ret
pop
sbb
and
sub
sub
mov
hlt
imul
adc
pop
mov
mov
iret
sub
jb
sbb
push
in
idiv
inc
push
jns
int3
inc
imul
shl
mov
xchg
shrl
fwait
inc
or
xlat
xchg
std
fisttpl
stos
jns
mov
jg
cmp
gs
mov
sub
fcoml
pop
fisubs
or
inc
inc
js
push
mov
pop
loopne
push
mov
lret
xor
fadds
daa
sub
lods
inc
mov
pop
jp
stos
mov
pop
add
inc
inc
push
aad
jns
dec
js
pushf
popa
in
loop
stc
mov
dec
jle
adc
sub
iret
xchg
cmpsb
dec
sbb
pusha
inc
xor
inc
add
cmpsl
jne
outsl
xchg
nop
push
xchg
enter
add
mov
insb
mov
nop
xor
lods
jbe
fstpt
xchg
adc
jbe
jle
orb
push
adc
dec
adc
sbb
sub
nop
mov
lds
mov
dec
popa
ds
push
and
pushf
outsb
aas
xchg
cmp
inc
jl
lock
dec
xchg
inc
xor
push
pop
cmpsl
adc
jle
je
scas
mov
aad
dec
les
in
mov
test
cmpsl
aas
push
jmp
into
cmp
aaa
dec
sbb
lods
popf
cmpsb
cmp
push
cwtl
mov
aaa
loope
mov
and
mov
mov
add
leave
jmp
sbb
movsb
and
lcall
es
fstl
stos
cmp
stos
fs
jge
xor
insb
dec
test
repz
cmp
test
movsl
lret
xchg
jecxz
scas
sub
add
in
mov
iret
mov
dec
jle
mov
adc
push
out
xchg
pop
sarl
cmp
test
out
leave
fidivs
test
nop
scas
pop
jnp
jle
jno
push
cmp
sbb
and
loope
aam
mov
push
outsl
cmp
lcall
imul
cmpsb
psadbw
jl
aam
pop
outsb
dec
and
out
push
mov
or
and
rclb
dec
mov
popf
andl
call
sbb
cmp
sahf
lret
or
jae
inc
dec
hlt
xor
test
fists
pop
add
arpl
fs
push
loopne
test
jnp
or
addr16
cmp
cmp
jecxz
fcoml
inc
inc
adcl
jge
out
fiadds
cwtl
push
mov
sbb
cld
lret
jo
push
inc
inc
ds
ja
jmp
test
inc
fnsave
lods
ss
pop
fstpt
roll
push
stc
or
js
add
mov
cmp
js
cmp
jg
inc
mov
lock
insb
das
popf
and
inc
sub
cltd
loop
insb
jb
mov
push
xor
mov
shlb
pop
movsl
adcb
add
lahf
and
dec
push
adc
inc
sbb
and
test
cmp
mov
xor
or
push
push
addr16
fisubrs
push
leave
push
cltd
es
mov
and
lods
ret
mov
ficoml
scas
cwtl
inc
shlb
nop
aad
popf
or
xchg
aad
ret
xchg
pop
in
mov
pop
adc
mov
dec
xchg
dec
scas
lods
ljmp
or
jno
sarb
pop
fsts
popa
rcrl
jae
xchg
cli
arpl
ror
mov
mov
adc
jne
repnz
add
xor
and
addr16
jmp
js
mov
cmp
push
xor
cmpb
sub
mov
lock
std
test
jo
adc
sub
lahf
add
cmc
popf
mov
cmp
cltd
dec
pop
push
in
mov
movsb
pop
mov
dec
mov
pusha
push
pop
inc
popa
mov
sbb
sbb
dec
loop
add
or
test
jecxz
hlt
in
jge,pt
pop
add
or
add
int
push
and
test
sub
sbbl
dec
test
aas
in
dec
lock
loope
repnz
lock
hlt
mov
icebp
fcmovbe
inc
dec
ja
jae
out
insl
cmp
xlat
ret
in
shrl
repz
aas
xor
inc
xor
mov
xchg
sbb
sahf
stos
and
sbb
inc
mov
fisttpll
lea
lods
leave
mov
sub
push
mov
cmp
aas
mov
incl
jns
pop
stos
movsb
mov
ljmp
mov
and
inc
pushf
int
mov
mov
adc
in
and
ja
mov
push
push
shr
xchg
jne
add
mul
iret
icebp
ss
das
mov
add
mov
cld
es
scas
jne
sti
ja
and
jnp
mov
or
sbb
cmpsb
jo
mov
sbb
xlat
xchg
mov
and
mov
mov
pop
repnz
cmp
xor
stos
sub
cs
jnp
ret
nop
hlt
xor
pop
sti
push
or
sub
push
shlb
push
std
mov
gs
gs
fstpl
cltd
fs
icebp
add
stos
cmp
mov
repnz
mov
adc
xchg
mov
scas
popa
push
gs
adc
mov
mov
xchg
imul
cwtl
in
dec
xor
push
jb
loop
mov
loop
pusha
das
fldcw
icebp
testb
add
lret
test
mov
jnp
addb
enter
inc
test
adcl
sub
adc
dec
push
sub
push
xor
std
dec
pop
out
scas
stos
mov
lock
push
xchg
xor
les
bound
sbb
sbb
push
sahf
test
cmp
mov
stos
cmc
push
dec
jp
movsb
movsb
push
mov
cmp
xor
movsl
subl
int
outsb
mov
in
lahf
daa
sarb
iret
sbb
sbb
loop
adcb
mov
add
iret
aas
pop
xor
aas
pop
sbb
mov
aaa
sarl
mov
push
add
cli
pop
jns
pop
rol
rorl
sbb
mov
stc
aas
or
shrl
adc
loope
add
mov
mov
cmp
cli
sbb
out
pop
int
orb
mov
push
mov
and
pop
scas
mov
jg
cs
in
push
cs
pop
inc
cmp
mov
repnz
lea
xor
cmp
movsb
adc
mov
xor
test
sbb
inc
rcrb
int
dec
insl
fldcw
or
sub
adc
and
xlat
push
cmp
clc
sbb
add
stos
xchg
jge
adc
add
add
mov
pop
cmp
leave
push
gs
adc
in
inc
sub
and
push
out
inc
push
xbegin
test
out
in
cmp
out
sahf
pop
cmpsb
inc
hlt
out
pop
loopne
xor
add
stc
push
xor
shlb
cli
xor
mov
add
sub
fists
jnp
cmpsl
push
push
sub
daa
push
movsl
mov
out
es
mov
push
inc
or
test
ret
xor
repnz
rolb
add
hlt
mov
cmp
sbb
sti
stos
fcmovu
pop
leave
in
out
xlat
inc
fwait
mov
shrl
adc
or
rclb
pusha
test
sub
inc
dec
icebp
push
cmpsb
jmp
jmp
lea
pop
roll
push
in
jmp
lahf
std
movsl
daa
adc
pop
das
dec
adc
mov
cmp
std
lods
lods
push
jp
test
dec
mov
xor
fcompl
shrb
xor
repz
das
push
data16
xor
xchg
xchg
pop
pop
add
aam
cmp
stos
push
cmp
movsl
lock
aam
push
xor
adc
lahf
lahf
aam
or
push
out
mov
cmp
lods
or
cmc
xor
imul
shr
test
ss
js
adc
sub
sbb
lods
repz
test
fimuls
xor
lock
jae
push
sbb
inc
sub
and
sbb
pop
and
cmp
jle
pop
adc
xchg
insl
xor
aaa
push
fnstcw
xor
xchg
iret
sub
sub
arpl
fldl
adc
mov
adc
cmp
inc
das
popf
dec
rcrl
daa
push
push
jno
cwtl
scas
in
int
cmp
out
push
sub
sbb
push
cmpsb
lds
movsl
shr
sub
cmp
sbb
movsb
and
jbe
cld
jecxz
xchg
fs
xchg
movsl
jno
mov
pusha
xchg
mov
test
push
xlat
idivb
adc
shrl
adc
outsl
cmp
fisubrs
mov
mov
icebp
test
push
jno
add
xlat
mov
cmp
insl
jae
ds
vprotw
data16
inc
inc
dec
sub
inc
mov
push
aas
xchg
call
adc
dec
jmp
or
cmpsb
push
or
add
pop
pop
push
loopne
outsb
inc
addb
add
jae
mov
inc
std
mov
icebp
fldcw
insb
and
mov
rolb
pop
mov
xorl
movsb
fwait
test
and
jae
in
inc
in
insb
repz
out
push
fs
xchg
inc
xlat
clc
std
cmp
jb
popa
adc
jg
test
movsl
lods
out
ja
popf
cmc
aas
into
jmp
rorb
clc
sub
push
push
ret
clc
jbe
jp
add
push
inc
ja
stc
pop
and
add
pop
mov
roll
pop
and
daa
sti
add
insl
xor
loope
jo
lods
push
test
dec
or
cmp
lods
mov
fs
enter
stos
daa
adcl
loope
push
mov
hlt
sti
xor
les
pop
shrb
popf
mov
or
imul
movsl
clc
add
xchg
cld
jmp
or
mov
add
mov
scas
jmp
int3
lret
push
sarb
nop
in
adc
outsl
jns
jmp
xchg
xchg
mov
popa
mov
xor
mov
ljmp
call
or
out
mov
pop
aaa
movsb
or
or
xchg
jae
add
jnp
and
dec
fwait
pop
in
sbb
cmc
int3
std
fiaddl
testb
stc
inc
dec
lret
pop
scas
push
repz
mov
inc
sbb
xlat
fidivrl
xlat
div
pop
pop
rclb
sub
fs
rcll
shlb
fwait
dec
flds
es
int
jne
jo
mov
out
stos
call
add
mov
inc
xchg
push
imul
dec
mov
cli
cmpsb
mov
std
movsb
repz
cwtl
addl
lret
xchg
jp
xchg
nop
or
mov
push
add
loopne
and
stos
das
data16
cmc
sbb
add
push
mov
jbe
sub
xchg
aaa
or
jmp
roll
sar
jmp
daa
inc
sbb
push
mov
or
jne
in
push
int
fistpll
dec
cmc
add
add
pop
cwtl
mov
pushf
jne
push
mov
test
jge
fwait
sbb
xchg
jle
sub
clc
dec
loop
int
dec
ficoml
in
cmpsb
mov
adc
scas
mov
fadds
and
adc
bound
xchg
test
in
decb
or
sub
inc
xchg
in
cmpsb
fisubrs
out
and
in
sbb
fucom
cmp
std
jg
lods
sub
ret
subl
pushf
in
xchg
xlat
add
pusha
pop
scas
mov
and
es
add
adc
jmp
in
aas
push
push
push
cmp
and
ret
std
mov
gs
push
ret
xor
push
xchg
sbb
mov
jge
mov
test
aas
dec
lcall
mov
idivb
stos
jne
jne
cmp
lea
pop
jmp
std
xchg
mov
jb
jno
dec
inc
jmp
mov
xchg
lods
stos
fstpl
mov
jno
sti
inc
mov
hlt
aaa
loope
and
push
lods
scas
mov
push
bound
and
jo
add
and
cli
popf
sbb
pop
cmp
or
iret
add
push
dec
loopne
mov
inc
sbb
adc
sarb
sub
outsl
loop
loope
mov
xor
call
pushf
mov
int
loopne
pusha
pop
cmp
or
mov
mov
mov
xor
pop
adc
fwait
mov
sbbb
mov
mov
hlt
jae
xchg
lock
pushf
jae
pop
dec
imul
push
add
xchg
cmpsb
push
dec
in
out
xor
mov
cmp
lea
xchg
insb
mov
pop
addr16
and
rep
jmp
test
add
shr
shll
rcrl
test
push
mov
add
inc
dec
jmp
inc
and
ljmp
push
sbb
xor
sbb
xchg
xchg
shr
loop
call
pop
inc
enter
xor
mov
sbb
mov
addr16
sbb
fstpt
sahf
jbe
popa
js
xchg
xchg
das
rorl
outsl
jo
cmp
enter
adc
ficoms
lock
pop
pop
inc
jmp
jge
pop
push
adc
cmp
inc
mov
out
in
add
iret
les
push
dec
and
vmwrite
adc
cs
xchg
nop
dec
mov
add
hlt
xchg
lea
adc
mov
push
sbb
test
and
and
lcall
push
data16
xchg
insb
sub
push
cli
adc
sahf
dec
xchg
insl
or
mov
shrb
add
notl
ucomiss
js
jnp
pop
xchg
adc
or
push
stc
or
hlt
aad
data16
xlat
das
add
notl
adc
mov
jg
out
loop
movsb
cli
int3
fsubrs
das
jnp
dec
mov
je
inc
out
mov
mov
enter
sbb
sahf
loopne
mov
push
and
shll
sub
lret
fiadds
and
mov
mov
clc
inc
out
jne
cmpsl
ss
xor
xchg
xor
xor
int
cmpsl
mov
enter
jmp
xor
insb
scas
sbb
int3
add
jo
ljmp
out
cli
cmc
pop
lret
jnp
and
sub
bound
outsb
xchg
addr16
sbb
push
push
test
aas
xor
xchg
mov
jns
cmp
cmp
cs
mov
push
lock
push
bound
inc
mov
loopne
pushf
mov
ja
xchg
inc
mov
cld
xor
testl
rclb
sub
mov
mov
call
adc
pop
lods
sbb
xor
jnp
sbb
xor
loopne
sbb
sbb
dec
sbb
ljmp
das
and
movsl
xor
insl
mov
imul
or
push
mov
inc
loop
dec
sub
lret
lods
in
int3
aaa
sub
out
push
mov
xchg
and
dec
mov
popl
js
sub
xor
jae
pop
mov
adc
push
mov
add
aam
in
leave
or
push
cmc
push
pop
xchg
call
pop
sbb
fistl
stos
pop
push
loop
or
out
or
sti
xchg
lods
movsb
jp
vrcpss
jmp
test
mov
std
push
push
imul
iret
aam
icebp
cmpsl
movsl
jecxz
inc
fisubs
xacquire
repz
mov
aad
movsl
insl
shrb
enter
push
fwait
js
and
jnp
mov
pop
adc
mov
push
mov
lret
aad
shll
sbb
mov
push
pushf
xchg
adcl
mov
ret
in
mov
mov
xchg
dec
scas
xorb
inc
or
xor
pop
jmp
icebp
jl
cmp
mov
test
push
dec
popa
outsl
shlb
sub
scas
fbld
add
or
test
pop
inc
push
ds
sahf
pop
pop
test
ret
loopne
inc
dec
stos
inc
ss
dec
sub
fwait
call
iret
mov
aam
hlt
add
push
or
test
adc
out
cmp
fidivrs
loop
sub
popf
inc
das
jno
mov
mov
inc
mov
mov
pusha
pop
xchg
pop
dec
into
adc
jecxz
dec
out
sahf
jmp
jle
into
pop
mov
cld
add
mov
jne
cmp
cmpsb
pop
leave
data16
adc
adc
out
or
mov
cmp
dec
pushf
mov
daa
xchg
mov
mov
addl
inc
or
fwait
push
test
rcrl
xor
dec
test
inc
or
or
sub
pushf
push
scas
subb
inc
sarl
xchg
push
sbb
insb
fstpl
rclb
outsl
sub
orl
fwait
pop
mov
bound
aad
ljmp
loopne
xlat
jp
les
cmc
pop
xchg
pop
lahf
push
cli
mov
cmpsl
dec
cmpsb
push
dec
idivb
shrb
sub
cli
pop
adc
mov
pop
int3
loopne
pusha
or
repnz
xchg
dec
xchg
xor
mov
repz
mov
clc
inc
xchg
xchg
xchg
add
arpl
out
cmp
mov
rol
sbb
adc
into
add
cwtl
sub
sub
cltd
pop
dec
mov
mov
mov
inc
fxam
mov
scas
xchg
mov
push
fisubl
mov
inc
cld
sbbb
sti
out
inc
mov
pop
mov
mov
mov
push
or
insl
cmpsl
jge
and
aaa
and
add
pop
jecxz
dec
cmp
insl
jge
jns
push
test
sub
cmp
shl
loope
fisttpll
mov
in
aas
add
aam
mov
push
xchg
adc
std
push
nop
pop
das
aas
xor
cmp
mov
dec
inc
mov
or
push
and
insl
adc
ss
or
inc
pop
lcall
in
ret
addr16
jno
inc
xor
mov
cmp
setns
sub
into
inc
xor
and
xlat
fistpll
mov
ljmp
xchg
dec
inc
mov
js
sub
fnstsw
and
clc
imul
lret
jge
jae
scas
int3
cld
dec
sbb
xchg
shll
test
or
jno
mov
ljmp
shrl
fsubp
push
fstpl
jge
jg
loope
das
xor
mov
dec
inc
lods
add
aas
jno
mov
mov
cmc
rcll
mov
dec
mov
mov
sbb
mov
push
mulb
inc
lea
xchg
adc
test
lahf
fcomp
mov
icebp
repz
lcall
flds
jb
fsubs
cmpsb
packsswb
gs
add
dec
fnstenv
ds
mov
xchg
push
or
outsl
xchg
punpckldq
xor
add
dec
mov
jae
popa
dec
adc
mov
hlt
fcmovbe
push
mov
test
add
jle
loop
add
repnz
test
aad
cmp
xor
ljmp
iret
mov
ja
inc
pushf
aad
inc
repz
xor
aam
xor
xor
pusha
jg
icebp
jns
push
sub
pop
pop
cmp
xor
add
sbb
subb
mov
insb
mov
das
mov
cwtl
pop
sbb
and
sahf
jle
lods
push
cmpsb
xchg
push
jo
cmp
shlb
insl
fnstcw
std
adc
mov
jnp
fisttpl
push
xchg
fstps
push
out
ror
push
xor
das
or
bound
aas
loopne
in
inc
push
and
jne
stos
std
hlt
mov
sbb
mov
inc
punpcklwd
popf
imul
xchg
mov
aas
xorl
dec
call
dec
mov
cmc
mov
std
aam
sub
mov
leave
mov
mov
popf
mov
push
lret
js
adc
enter
adc
cmp
jp
mov
jecxz
and
xchg
or
jmp
addl
lret
or
insl
cmp
bound
shll
ss
push
outsl
sahf
jecxz
jl
jne
dec
and
sbb
jl
xor
or
mov
jno
or
adc
pop
and
sub
fistpl
pop
sub
or
out
in
fsubl
jp
mov
cmp
je
xor
cmpb
imul
mov
inc
call
or
xchg
xor
sbbb
sub
pop
icebp
popa
push
dec
add
xchg
adc
push
enter
fcoms
xchg
or
sti
pop
hlt
movsb
and
or
xor
xchg
fsub
mov
dec
sub
xchg
and
pop
lock
jne
test
std
cmp
jb
mov
dec
inc
cmp
cmp
cmp
bound
xchg
pop
fisubl
cmpsl
xchg
push
insb
leave
das
movsl
dec
imul
aas
sahf
add
stc
jo
fstpt
pop
lahf
pop
mov
jl
mov
cwtl
pop
jmp
push
adc
push
lock
bound
cld
pop
push
icebp
and
cmc
adc
jecxz
add
outsl
or
ds
push
pop
enter
lods
and
repnz
repnz
adc
ret
adc
sbb
or
fnstsw
aad
fst
stos
push
lock
fidivrl
mov
cmp
les
mov
push
fldl
pusha
xchg
pop
outsl
es
loopne
mov
mov
lods
jge
push
xor
int
inc
addr16
mov
shll
push
sub
test
or
je
adcb
cld
sbb
jae
push
adcb
push
subl
rolb
imul
jno
sahf
ljmp
adc
popf
inc
push
push
jns
fsts
sbb
xchg
or
pop
add
mov
pop
cmp
sub
mov
jge
outsl
hlt
insl
ds
dec
and
push
fistpll
cmp
cmp
sahf
push
sbb
dec
fmuls
xor
sub
sub
jbe
add
cmp
jge
pop
addl
or
jmp
sbb
retw
or
in
enter
out
loop
in
pop
enter
jmp
shll
push
into
cmp
cmpsl
cmp
push
stos
add
mov
lds
push
mov
dec
xchg
sbb
cmpsl
sub
int
in
push
push
ror
xchg
es
push
cmp
subl
mov
insl
stc
add
jo
cwtl
xchg
popa
xor
jmp
mov
rolb
xchg
and
pop
adc
or
add
dec
cmp
pop
test
jb
cmp
hlt
add
out
mov
mov
das
cmpsl
not
jmp
dec
aad
lcall
xchg
test
mov
pop
or
pop
aaa
mul
or
sub
xor
aaa
into
mov
out
fldcw
lods
decb
xor
and
jecxz
fcoml
lret
mov
bound
and
rcr
jno
sbb
ss
in
mov
hlt
arpl
dec
mov
out
cmp
mov
popl
shlb
in
push
jmp
mov
test
dec
mov
and
lahf
cmpsl
mov
popf
fldcw
push
imul
fadds
fwait
loope
data16
sub
nop
in
cmp
push
push
mov
cmp
xor
xchg
and
hlt
add
sbb
repnz
add
test
stos
sbb
sbb
dec
push
pop
adc
sub
xor
adc
aas
aaa
in
mov
mov
jl
mov
pop
mov
outsl
stc
cld
int3
xchg
and
or
loopne
mov
cmp
insl
mov
loop
push
mov
js
or
ss
mov
xchg
repnz
insl
and
xchg
icebp
and
jp
mov
test
fcmovnb
pop
sub
test
lods
sbb
xor
fsubrl
or
push
jg
lahf
pop
or
scas
ljmp
out
push
das
cmp
rorb
jnp
sbb
xor
cmp
incl
dec
add
mov
icebp
pop
pop
idivb
fstpl
push
aam
mov
stos
and
jae
insb
out
inc
dec
xchg
jbe
ljmp
push
adc
insb
into
inc
pop
lds
je
cmp
sbb
cmpsl
cmp
jns
push
inc
or
lds
arpl
jo
sub
dec
add
jnp
sub
jae
sub
xor
push
and
push
sahf
sbb
out
add
lds
cmp
add
cmpsb
repz
lods
cmp
loopne
or
mov
mov
sbb
or
movsb
mov
jns
cli
mov
jmp
ja
cmc
push
jg
fwait
mov
xchg
lods
call
push
push
xchg
in
jecxz
orl
ret
stc
inc
xchg
pop
cmpsl
dec
pop
mov
sub
int3
lods
xchg
sub
pop
pextrw
sub
xchg
scas
loopne
push
fs
ljmp
pop
lods
jbe
ds
mov
out
pop
pop
mov
jl
mov
rorl
imul
push
and
push
pop
iret
popf
push
cltd
sbb
dec
mov
loope
push
dec
jl
jne
mov
jg
aad
pop
xchg
in
add
and
sbb
cmp
cwtl
push
xor
aas
mov
fwait
data16
add
in
jnp
xor
jnp
loope
pop
lret
and
mov
daa
cmp
mov
add
mov
lret
or
aas
xchg
jle
loopne
cmp
jecxz
movsl
divps
jmp
sub
test
test
mov
mov
in
pop
dec
icebp
jo
mov
dec
cltd
mov
out
add
ja
mov
fists
outsb
loopne
ljmp
out
rorl
enter
jle
push
cmp
mov
inc
in
clc
orb
dec
fnstenv
ds
or
aas
cmpb
mov
rcrl
cmpsl
cmp
sub
mov
pop
dec
cwtl
adc
pop
add
pop
stc
aam
loop
jno
std
shr
repnz
pop
or
xchg
xchg
addr16
jp
inc
sbb
or
movsl
push
cmpsb
int
dec
addr16
mov
pop
mov
call
imul
out
add
ds
mov
lods
mov
fwait
xchg
pop
or
push
jne
popf
and
dec
push
movsb
mov
xor
pushf
pop
xor
jl
std
jns
test
push
adc
addl
jp
push
pop
pop
inc
arpl
enter
mov
pop
sub
pop
jge
pop
xchg
adc
fbld
mov
fstps
jae
imul
cmpb
pusha
fs
ds
or
pop
jb
mov
jge
mov
fcomps
aas
dec
dec
int3
es
mov
add
popa
push
dec
inc
lret
pop
or
mov
sbbl
pop
arpl
xor
xchg
sbb
xchg
dec
rolb
mov
and
fidivs
adc
shl
push
add
sub
stos
mov
pusha
mov
fistl
cmpsb
push
stos
fstpt
jge
fdiv
add
xchg
cmp
insl
pop
sbb
iret
nop
cwtl
in
iret
mov
lcall
ficompl
roll
mov
jno
pushf
or
sbbl
into
dec
sti
aad
mov
lods
pop
xchg
cmp
xchg
dec
mov
add
push
mov
push
imul
xchg
filds
pop
mov
xchg
dec
jge
inc
xor
mov
add
jecxz
loop
push
sti
pop
fisubrl
scas
std
xor
mov
clc
or
movl
dec
aad
test
nop
lahf
dec
xchg
cmp
add
insl
mov
cmp
leave
mov
sub
test
fiadds
dec
test
stos
jp
jne
insb
lds
loopne
dec
push
pushf
jo
push
jg
sub
jb
inc
sub
pop
dec
xor
repnz
and
imul
and
mov
mov
mov
imul
xor
stc
add
clc
loopne
dec
out
lea
std
dec
into
push
sbb
fsubl
inc
mov
xlat
and
hlt
add
gs
outsb
aas
push
push
lds
les
pop
repz
stos
xor
jmp
lods
mov
inc
cmp
lret
outsl
insl
lods
out
loope
inc
ficompl
or
ret
out
shrl
int3
xor
inc
push
mov
mov
xchg
movsl
dec
cli
pop
popa
and
and
add
mov
test
dec
lock
mov
dec
sbb
lods
cmpsl
addr16
lea
cld
dec
push
mov
cld
ret
sahf
scas
cmc
cmc
cmp
pop
mov
mov
mov
or
lahf
mov
cltd
shll
mov
mov
pop
jle
fsts
mov
into
sbb
cmp
cltd
fcomps
lcall
int
fs
jo
jmp
inc
add
fwait
in
movsl
mov
dec
sbb
mov
push
repz
xor
adc
test
pop
jne
cmp
xchg
cs
int
and
xor
mov
mov
inc
xor
pop
ret
shrb
cld
sbb
xchg
cwtl
mov
shlb
clc
inc
lahf
xorb
mov
adc
dec
cmc
gs
and
int
and
es
test
rcr
dec
mov
pop
idivb
pop
cmp
sub
outsl
dec
pop
fidivrs
lock
or
jne
testb
ret
mov
test
sub
loop
imul
insl
stc
mov
push
xchg
jno
lods
pusha
daa
ret
sarb
fiadds
fldenv
mov
mov
xor
mov
push
push
xchg
in
push
pusha
test
xor
loop
cld
outsb
sub
add
ss
gs
inc
add
mov
mov
jnp
cmp
js
adcb
mov
mov
dec
sub
cmp
fwait
xor
and
mov
mov
data16
stos
jp
xor
mov
push
fcmovb
jnp,pn
stc
adc
add
push
ror
into
mov
adc
insb
fs
cmp
leave
push
inc
jae
jg
xchg
xchg
outsb
cwtl
sub
clc
frstor
jno
xchg
and
jp
sbb
negl
inc
aas
stos
mov
es
leave
in
inc
popf
mov
int3
xchg
movsb
push
sbb
pop
mov
xor
pop
jae
pop
jne
je
lock
fs
jmp
dec
push
cwtl
or
cmp
and
and
in
cwtl
std
test
cwtl
lret
cmpsl
xchg
sbb
mov
sar
xchg
daa
mov
jae
jbe
jns
aad
mov
in
cmp
test
jnp
dec
sahf
fdivrp
loopne
and
dec
or
mov
dec
jns
adc
xchg
jle
mov
pop
and
adc
push
mov
enter
cmpsb
sbb
mov
sub
dec
inc
and
adc
test
sbb
sbb
lock
cltd
push
lods
aam
adc
daa
pushf
leave
adc
les
and
dec
mov
aaa
leave
mov
pop
ja
lock
test
lods
mov
sbb
insb
sbb
es
stc
ja
inc
fildll
loope
cmp
mov
sbb
mov
or
inc
cmp
and
imul
jae
clc
in
arpl
lcall
test
nop
and
pop
icebp
cmp
cmp
dec
add
arpl
lds
xor
cmpsl
mov
ljmp
or
mov
int3
adc
inc
xchg
ds
cmp
stos
sub
mov
icebp
mov
loopne
hlt
push
aas
je
in
cmp
adc
out
and
xor
mov
gs
inc
mov
mov
push
jbe
push
hlt
pop
shlb
fcompl
lret
sub
inc
cwtl
push
cmc
fisttps
das
mov
or
or
into
push
pop
stos
std
leave
push
adc
add
pusha
xchg
jbe
xchg
mov
fs
lret
pop
std
pop
jae
inc
outsb
jmp
fldl2e
in
ret
testb
enter
lahf
ljmp
in
cmp
ret
scas
movsb
js
cmpsl
imul
iret
adc
lds
fildll
test
mov
es
outsl
mov
out
sbb
or
leave
lock
arpl
in
sub
mov
lods
push
jb
adc
shrl
xlat
jo
mov
enter
adc
rcrb
push
es
setnp
jb
adc
push
and
cmpl
sti
lret
sub
daa
ret
push
das
out
ja
mulb
icebp
andnps
cmp
das
nop
push
adc
repz
mull
in
cmp
pop
adc
push
arpl
jb
push
xor
testb
int3
lods
mov
fimuls
and
add
scas
ret
bound
and
sbb
aas
outsl
xor
out
int3
push
cmp
add
nop
adc
les
repnz
js
movsb
adc
mov
sti
xchg
push
push
cltd
rclb
loope
es
fcmove
mov
adc
scas
adc
pop
jbe
loope
cs
negl
cmp
mov
cmp
fldl
nop
les
shll
adc
cltd
mov
push
ja
out
adc
dec
push
aad
insb
dec
int
pop
cmpb
in
jl
mov
xchg
mov
mov
mov
lahf
mov
jecxz
mov
in
cli
popa
cmpsb
outsb
sbb
frstpm(287
mov
je
imul
aam
adc
aas
fimull
shll
sub
ret
rcll
mov
ja
push
mov
mov
mov
mov
in
ficompl
movsl
int3
cmpb
mov
mov
adc
movsb
mov
or
xor
bound
jge
rcrl
xor
dec
cmp
fistps
nop
sahf
out
cs
mov
addl
or
xchg
inc
mov
hlt
loope
int
and
out
jmp
in
clc
cld
jp
js
sub
mov
sbbl
das
xchg
in
aas
ds
or
fadd
call
std
xor
mov
icebp
sub
push
jae
mov
xor
imul
push
and
mov
jmp
addr16
repz
aam
insb
test
sbb
ja
fldt
jbe
cmp
add
dec
adc
mov
fsubr
movsb
push
mov
xor
in
pop
mov
dec
add
insl
xor
dec
mov
test
imul
popa
mov
jne,pn
push
hlt
cmpb
mov
sbb
sbb
pop
insb
xor
jge
arpl
push
jns
xor
sbb
call
bound
cmp
or
mov
sub
test
sub
jae
and
inc
jno
fwait
jp
mov
loopne
xor
mov
pop
loopne
call
mov
mov
inc
ds
aad
xchg
dec
sub
fldt
xchg
or
adc
jecxz
rorl
sahf
sarl
pusha
stc
loope
inc
imul
fildl
and
cmc
ret
jmp
mov
cmp
xchg
lcall
or
std
aad
inc
stc
outsl
fsubs
lds
ljmp
clc
pop
je
sbb
sbb
fdiv
or
fdivs
cltd
scas
data16
or
xchg
mov
dec
xchg
movsl
xor
mov
movsl
repnz
leave
mov
fwait
add
jns
sub
adc
lods
cld
inc
and
sub
xchg
jbe
addps
cld
xchg
mov
and
inc
sub
lret
mov
lods
gs
xchg
cli
mov
stos
daa
imul
popf
stos
int3
pop
testl
push
loop
shll
lcall
and
pusha
mov
adc
outsb
jb
jmp
cs
and
pop
in
xlat
pop
or
in
fcomps
cmp
dec
xlat
out
stos
and
ficoms
incl
pushw
and
push
xchg
jg
add
sti
jp
hlt
and
xorb
mov
mov
xchg
jg
fbld
mov
cmp
lcall
movb
jmp
xchg
inc
cwtl
mov
or
cmpsl
push
pop
cmp
lret
push
aad
sub
mov
jnp
arpl
out
jbe
cmpsb
pop
sub
fiaddl
jbe
rorl
repz
lret
push
pop
loope
fwait
cltd
mov
mov
cmp
or
int3
mov
lret
popf
aas
daa
and
daa
arpl
mov
cmp
pop
in
in
sbb
xorl
adc
or
test
insb
dec
mov
decl
loop
insb
push
popa
mov
loopne
jne
jns
mov
rcr
xchg
xlat
xchg
cmp
add
stc
lcall
jmp
stos
movsl
jp
dec
popf
hlt
sub
out
movsl
js
adc
imul
mov
xchg
xor
and
repnz
jbe
jecxz
aas
into
add
dec
imul
jge
sarl
sub
pop
ja
repnz
mov
or
mov
sub
jecxz
add
push
adc
clc
jnp
and
sub
add
ss
fs
push
xor
scas
xchg
jo
jbe
sbb
xchg
cmp
mov
cmp
in
inc
pop
fildll
js
ss
add
sub
enter
xor
enter
dec
test
loop
fdiv
jecxz
xor
enter
push
cwtl
frstor
adc
imul
es
sti
fcmove
shll
mov
lret
iret
mov
cmp
repnz
mov
gs
outsl
jl
ret
cmp
ja
out
xor
jl
mov
adc
insb
jmp
int
out
fcoms
scas
inc
lds
pop
push
repnz
movsb
jge
testb
cmp
adc
and
mov
bound
fcomps
add
dec
or
lods
xchg
outsl
mov
fsubp
addb
stos
lret
pop
in
addb
repz
jg
pop
and
gs
cmp
mov
jbe
es
pop
lea
inc
test
pop
adc
mov
movsb
push
jb
pop
sti
push
inc
popf
mov
ss
jns
adc
sarl
adc
cmp
sahf
push
mov
inc
cmpsb
xor
aaa
insl
adc
fistpll
xlat
scas
mov
adc
adc
aad
ja
ret
loopne
push
jg
push
push
jne
imul
xchg
cmp
mov
pop
mov
mov
mov
dec
xor
repz
mov
les
jge
mov
sti
and
jp
lds
push
mov
inc
sbb
adcb
push
pop
enter
mov
fbld
pop
cmp
rcrb
adc
sub
lock
lods
in
lcall
cs
insl
pop
or
xor
and
lods
sub
icebp
ljmp
hlt
dec
leave
int
outsb
daa
ljmp
adc
pop
or
jecxz
jmp
into
scas
adc
aas
fmuls
insl
out
fsts
dec
adc
inc
test
addr16
sahf
lcall
pop
testb
scas
mov
rcrb
push
aaa
ljmp
shlb
xor
repnz
cmpsl
mov
fmuls
imul
jecxz
dec
mov
out
push
lock
or
push
lock
mov
cmc
jbe
mov
lcall
loope
jns
insl
jo
sahf
cmp
pusha
dec
js
dec
ret
jge
dec
clc
pop
scas
adc
shlb
adc
xor
bound
mov
and
stc
xchg
subb
mov
lea
ficompl
fnstenv
add
pop
xor
lahf
gs
or
out
xorb
inc
getsec
or
cltd
scas
stc
fnsave
jb
out
out
push
mov
outsb
js
jno
popf
and
aaa
aam
loopne
push
daa
push
repnz
out
dec
xchg
outsb
xlat
sbb
mov
pextrw
push
icebp
aad
js
outsb
adcb
push
fdivrs
int
and
mov
adc
sbb
pop
mov
sbb
push
or
push
mov
sbbl
lea
lea
inc
jbe
inc
aas
jns
in
notl
adc
jg
inc
adc
jnp
add
xchg
test
int
dec
mov
jmp
push
xor
insb
add
or
enter
inc
inc
out
inc
dec
inc
adc
dec
icebp
cmp
ljmp
fs
inc
popf
mov
push
dec
test
sbb
xor
sbbl
inc
ror
sub
movsl
fimuls
cmpsl
xor
mov
cltd
adc
inc
insl
or
xorb
lret
popa
out
gs
and
nop
cmp
mov
jge
ret
lds
or
inc
loop
mov
aam
xchg
pop
stc
cmc
fstpt
fimuls
xor
sub
imul
icebp
enter
jbe
pop
sarb
adc
push
pop
inc
sub
aas
sti
xchg
daa
and
mov
mov
rorb
add
cwtl
sbb
cmp
fisubrl
dec
pop
inc
xchg
pop
inc
jmp
mov
jne
js
pop
hlt
mov
push
je
pop
inc
or
jno
fsub
adc
pop
push
lock
adc
scas
rcl
adc
repz
aad
lahf
les
lret
es
lret
mov
push
lds
mov
js
pop
cltd
lods
fbld
mov
jl
aam
mov
jp
scas
fisttpll
jmp
push
lcall
inc
or
cli
xchg
inc
js
mov
outsb
xchg
dec
and
cmp
push
shlb
and
popa
lods
jnp
arpl
pushf
or
scas
and
jp
xor
cmp
mov
inc
cmp
adc
jns
dec
lcall
mov
test
and
dec
iret
push
test
lret
lcall
fwait
lock
fildl
adc
pop
adc
gs
jmp
mov
test
mov
ljmp
mov
iret
imul
int3
mov
js
xchg
push
loope
xorl
test
pop
jg
add
inc
mov
clc
jmp
sub
jge
dec
les
push
sbb
mov
movsb
in
roll
cmp
xchg
xchg
xlat
scas
adc
sub
fcompl
xchg
aad
ja
lock
out
xchg
push
sub
inc
fdivl
pop
adc
in
gs
sbb
ljmp
outsl
mov
add
int3
daa
test
cmp
cmp
sbb
scas
aaa
push
dec
dec
test
fs
lcall
push
les
dec
jg
gs
mov
fsts
dec
jne
out
xor
lahf
cltd
rol
loope
adc
stc
dec
cld
push
pop
es
stos
outsl
nop
hlt
out
add
popa
mov
pop
sub
sub
inc
stos
xchg
push
and
jae
imul
jmp
cmp
xor
pop
sub
mov
xor
ret
fisubrl
aas
and
stos
dec
cld
xchg
mov
push
ficompl
mov
xor
add
sbb
xor
push
lea
pop
adc
cmp
cld
mov
mov
and
stos
and
sub
pop
push
dec
test
testb
in
in
imul
repnz
mov
or
push
push
in
adc
push
adc
movsb
pop
pushf
pop
fisttpll
in
mov
pop
data16
xchg
mov
cmp
sub
movsb
enter
test
aam
mov
dec
sarl
xchg
rcrl
xchg
mov
gs
into
stos
outsb
fnstenv
mov
xchg
jecxz
inc
clc
xchg
shl
xchg
xchg
add
push
les
icebp
and
lea
ret
orl
orb
cmp
lret
pop
imul
mov
pop
jae
mov
xor
ret
loope
jle
jmp
aad
ret
js
test
fdivs
in
cld
repz
clc
xor
inc
adc
jl
scas
loopne
xchg
adc
xchg
in
pop
mov
add
adc
mov
das
cli
pop
mov
pop
call
stc
add
int
lcall
jnp
add
mov
push
cltd
faddp
stos
sbb
outsl
loopne
push
imul
test
ja
js
xchg
push
loopne
imul
popa
xor
or
mov
cmp
push
mov
orb
jmp
in
jl
stos
out
inc
sbb
repnz
dec
fs
pop
iret
addb
rcl
ss
ljmp
jbe
repnz
sub
mov
mov
cwtl
jmp
dec
push
mov
mov
sbb
popa
push
xor
es
mov
push
xor
dec
scas
rcr
pop
xchg
rol
daa
cmp
mov
aaa
jae
mov
ljmp
mov
lahf
movb
test
xor
mov
adcb
aad
mov
cwtl
cli
scas
subb
jnp
idivb
sub
mov
xchg
or
jg
out
cwtl
mov
into
cmc
hlt
or
dec
adc
enter
jno
jae
jbe
popf
aaa
and
fildll
xlat
jp
mov
pop
jae
xor
pusha
cmp
sarl
das
sbb
enter
je
sti
and
cmp
ret
xchg
fstpl
cmp
adc
gs
xchg
loop
push
lods
dec
xchg
cld
inc
insb
insl
fsubs
jecxz
lock
cmpps
or
inc
xchg
pop
xor
dec
ja
cmpsl
jmp
mov
sub
sub
cmp
aad
sahf
xchg
fdivs
pop
mov
lret
lock
aas
jmp
pop
lock
xlat
cltd
mov
adc
jle
dec
ficoms
or
pushf
out
insb
outsl
mov
das
scas
les
adc
fadd
push
dec
add
jbe
lcall
std
push
inc
push
mov
fwait
out
andl
xchg
mov
jns
out
jp
call
inc
cmc
inc
das
cs
into
cwtl
mov
mov
aad
test
out
push
xchg
lret
orl
pushf
add
cbtw
jmp
sub
xchg
inc
in
lods
shll
jp
fcomi
jp
jo
sbb
gs
cli
pop
fprem1
mov
add
xorw
nop
cld
stos
or
mov
pop
add
inc
cmpsb
cmp
sub
adc
mov
and
dec
cmpsl
repz
push
mov
fwait
aam
pop
ret
mov
and
sbb
in
mov
push
hlt
xorl
or
daa
std
push
dec
xchg
add
adc
push
mov
and
inc
and
jmp
sub
rorb
pushf
sub
je
push
fwait
inc
inc
iret
pushf
pushf
sbb
pusha
mov
jmp
icebp
scas
dec
es
dec
lahf
mov
and
mov
stc
dec
ficoms
push
mov
aam
or
shll
mov
or
sub
xchg
gs
xor
jne
shrb
mov
push
xchg
daa
shlb
movsb
mov
in
inc
std
xor
andl
les
push
in
movsb
xchg
mov
inc
aad
adc
test
or
sahf
xlat
scas
testl
xor
pop
mov
shll
iret
pushf
mov
jno
into
cmp
and
pop
addr16
mov
hlt
mov
in
data16
inc
cmp
jl
loopne
in
mov
insl
cmc
scas
push
shlb
adc
loop
inc
inc
adc
push
fcmovnb
cltd
icebp
add
or
dec
xchg
aam
or
movsl
push
push
jmp
enter
in
dec
jp
insl
mov
push
inc
pop
dec
or
test
dec
lcall
arpl
jno
gs
cmp
cli
rorl
xchg
test
xor
enter
out
hlt
cmp
mov
mov
jp
iret
xlat
test
xor
mov
sbb
pop
in
inc
insl
fdivl
push
xchg
icebp
mov
adc
lods
push
jg
je
lods
xchg
enter
pop
adc
adcb
leave
mov
iret
sub
pop
mov
push
xchg
pop
or
mov
cmpsb
adc
mov
movl
mov
out
outsb
call
fisubrs
int3
iret
cwtl
mov
and
mov
xlat
jo
push
nop
insb
xor
fwait
dec
rcrb
inc
dec
dec
pop
cmp
adc
fwait
inc
arpl
lcall
cmp
or
ret
mov
mov
cmpsb
sub
test
cld
cltd
je
rcr
test
mov
aas
repz
test
popa
test
sbb
in
xor
inc
test
js
xchg
mov
sbb
out
mov
xlat
loopne
mov
push
cmp
test
movsl
jge
mov
mov
ss
add
out
lock
popa
jnp
movsb
test
dec
sbb
movl
jne
push
cmc
leave
pop
fstl
je
jno
cmp
cmp
movsb
aaa
mov
cmpsl
rolb
mov
jne
notl
hlt
std
inc
ret
push
xlat
pusha
xchg
repnz
dec
add
je
jle
mov
mulb
jle
int
notl
jmp
or
scas
sub
mov
insb
add
mov
fxtract
dec
testb
les
jl
or
mov
adcb
mov
out
xchg
int
push
xor
pop
push
cmp
adc
mov
cmp
mov
dec
push
inc
gs
js
mov
lock
mov
inc
dec
sbbb
addr16
pop
movsb
je
sbb
out
pop
xchg
adc
inc
pop
jecxz
roll
or
and
ljmp
ficomps
mov
test
pop
push
test
jae
shrl
dec
dec
mov
or
mov
scas
arpl
push
sbb
lret
inc
movsb
mov
enter
or
inc
loope
cmp
sub
cmpsl
push
popa
mov
lahf
or
popa
and
fwait
and
es
and
shrb
shll
fistps
outsl
dec
int3
aam
and
aad
sti
push
jge
jp
cmp
jnp
jne
push
stc
jmp
push
imul
mov
cltd
nop
nopl
into
pop
xchg
push
scas
outsl
rcrb
mov
pushf
es
push
lahf
gs
popf
add
orl
pop
cmp
cltd
std
push
pop
int3
or
and
sub
mov
jecxz
jecxz
std
jecxz
stos
or
cmc
imul
ficompl
jmp
arpl
shll
fcmovu
pop
sahf
cmpl
push
xor
je
stos
adc
cmp
dec
mov
movsl
mov
adcl
push
mov
xor
adc
cmp
xchg
xchg
roll
push
sub
xor
adc
bswap
mov
imul
xchg
cmpsb
inc
adc
loop
mov
notb
orl
dec
or
inc
xor
test
icebp
sbb
mov
out
or
jmp
outsb
ret
cmp
add
mov
cmp
xor
mov
repz
mov
mov
stc
dec
lahf
jmp
sbb
jb
jl
gs
movsl
and
outsb
pusha
or
add
sbb
lock
adc
xorl
add
scas
sub
fwait
or
adc
loopne
push
dec
push
mov
mov
shl
insl
into
iret
les
pop
testb
outsb
jbe
or
mov
rcrl
adc
repnz
pop
and
idiv
clc
xchg
mov
cmovl
repz
js
in
push
push
clc
pop
push
add
sbb
loopne
std
int
sub
add
iret
pop
outsb
inc
mov
dec
sbb
xchg
xchg
xor
jnp
stos
push
mov
mov
test
aad
lods
mov
es
jb
movsl
xorb
out
inc
aas
fsub
push
lahf
lcall
mov
push
adc
add
fwait
mov
mov
xor
sbb
outsb
outsb
dec
xor
pop
adc
shl
pushf
sbb
aam
jno
sbb
cltd
push
les
repnz
dec
adc
fisubrs
and
jbe
push
inc
lods
insb
rcr
ret
lret
xor
fldl
divb
jmp
lcall
fs
xchg
mov
aaa
jmp
mov
bound
insl
push
inc
adc
movsl
push
loopne
mov
aam
dec
xor
ds
mov
stos
repz
inc
sbb
jnp
notl
and
xor
fisubrs
dec
xor
lea
leave
enter
cwtl
jns
out
mov
pop
jnp
test
sbb
push
movsb
ds
in
imull
push
mov
push
mov
sub
lea
cwtl
pop
loope
decb
mov
movsb
sub
xchg
adc
and
ja
lret
cld
rorl
add
and
out
mov
pop
int3
cmpsb
xchg
xor
jp
std
arpl
push
sub
popfw
imul
and
mov
and
xlat
sub
cmp
testb
movsl
fwait
pop
lds
sub
pop
cltd
lock
out
inc
cmpsb
fidivrs
sub
mov
frstor
and
es
jb
mov
xchg
stc
add
outsb
sub
imull
inc
pusha
fstl
xor
add
sbb
cmp
icebp
cwtl
movsl
outsb
xchg
mov
lock
outsb
sahf
mov
mov
sub
mov
imul
inc
xchg
mov
sbb
or
fsubrs
lret
pop
insl
xlat
fwait
xchg
rorl
jns
int
and
mov
adc
rolb
push
adc
or
fstl
lret
push
xchg
movsb
sub
pop
pop
or
jnp
sub
ffreep
mov
pop
or
sti
dec
dec
stc
ja
cmpsl
gs
push
xchg
data16
jle
or
lahf
ss
cmc
int
push
pop
push
fsubl
push
lods
xchg
inc
pop
adc
jbe
dec
out
mov
hlt
in
jb
mov
arpl
ret
lods
fidivl
jg
cmp
pop
add
mov
sub
and
lods
leave
in
testb
xchg
lahf
inc
mov
mov
test
sbb
aad
push
pop
xor
sbb
jmp
sub
xchg
mov
mov
adc
pop
fwait
cli
test
xchg
outsb
sbb
dec
lret
cltd
popf
ja
call
lcall
xchg
cmpl
fbld
cmp
pop
inc
out
mov
inc
mov
jecxz
test
stos
icebp
imul
decb
popa
out
jb
outsb
mov
shl
mov
and
in
pop
or
sahf
add
call
addr16
adc
out
pop
inc
pop
mov
push
add
xor
cmc
push
push
nop
iret
repz
pop
mov
insb
jp
lods
negb
or
stc
lcall
je
out
jg
daa
out
cmp
das
pop
cmp
inc
adc
inc
xor
push
fadds
push
popf
stos
sbb
data16
add
insb
mov
aaa
outsb
cmp
shlb
add
adc
enter
sub
adc
lods
mov
mov
mov
pop
push
inc
jmp
xchg
push
insl
push
or
jp
add
inc
push
in
leave
jns
push
cmp
or
and
jo
in
pop
inc
pop
shrb
repnz
xor
jmp
pop
popf
lret
divl
xor
test
and
cmp
or
out
mov
lods
jno
jb
fadd
lret
test
call
mov
lods
cmpsb
sbb
clc
hlt
mov
into
lret
mov
xchg
mov
repz
test
sbb
add
add
adc
lahf
cwtl
mov
psadbw
xchg
xchg
mov
push
cmp
and
imul
and
out
cmpsb
push
ret
mov
daa
je
arpl
mov
aas
mov
cmp
dec
xor
rorl
in
dec
subl
mov
or
stc
jae
insl
mov
dec
cld
and
call
mov
sbb
aas
inc
bsf
xor
and
fcoml
cmc
cmc
iret
popf
mov
jns
enter
scas
das
push
sbb
fldenv
loope
lock
repnz
roll
sar
jle
mov
xchg
push
inc
mov
dec
out
faddl
add
cltd
sub
xchg
mov
mov
enter
inc
cmp
scas
cld
or
ud1
repnz
add
test
addr16
lret
cmp
cs
push
mov
push
mov
outsl
ret
popl
es
lea
push
mov
leave
push
pop
inc
enter
pop
mov
mov
int
cmp
insl
int3
sub
fldenv
fistl
push
mov
pop
inc
sbb
scas
xchg
jp
bound
dec
jns
ret
negl
xchg
pop
xor
hlt
scas
negl
inc
test
inc
mov
sub
xchg
pop
shl
aas
addl
neg
pushf
xchg
xchg
mov
cmpsl
imul
dec
inc
dec
xchg
jmp
test
dec
pop
inc
lods
cmp
popf
shrl
mov
inc
out
fldt
aad
sub
inc
cmpsl
xchg
jl
push
jle
pop
ret
outsb
jb
mov
pop
jp
call
sti
insl
loopne
es
hlt
bound
mov
mov
sar
sbb
aas
jnp
add
enter
cmp
lods
dec
mov
dec
ds
pop
pop
loopne
mov
test
imul
sbb
scas
inc
cli
in
sbb
fbld
pop
stos
ljmp
ret
cli
rcl
inc
in
sbb
bound
dec
and
dec
cs
lret
mov
pop
in
sub
aas
popf
insb
adcb
mov
cmpsb
pop
or
dec
push
and
sub
ret
xchg
or
cld
xlat
mov
jno
stos
add
push
insl
inc
sbb
mov
js
xor
lea
mov
dec
xor
jbe
fs
push
lods
in
adc
adc
shrb
add
sbb
ret
fisttpl
pop
popf
aad
test
or
mov
mov
sub
repz
scas
pop
and
mov
xor
ret
mov
adc
in
cltd
idivb
dec
jb
inc
fstl
push
xlat
fists
mov
stc
jbe
inc
int
sub
cmp
or
pop
push
sub
out
mov
mov
cmp
lret
dec
fists
mov
inc
test
ja
nop
dec
cmp
loopne
xchg
adc
repz
xor
bnd
mov
xchg
das
xchg
mov
push
lods
daa
ss
lods
xchg
fdivp
test
pop
sahf
or
leave
lret
adc
iret
popf
jns
out
nop
movl
sarw
ljmp
jb
hlt
adc
pop
cmp
movsl
fdivl
pop
cmp
or
leave
pusha
test
pmaxsw
mov
xor
dec
adcb
sub
std
out
mov
inc
test
scas
divl
les
or
xor
mov
cmpsb
inc
cld
cli
fsubs
test
rcrb
jo
mov
inc
jl
shll
jle
or
sub
test
and
cmpsb
jbe
test
mov
mov
cld
and
pop
notb
fdivrs
pushl
repnz
rcrl
daa
sahf
popf
ds
test
cmpsl
xor
push
or
xchg
add
sbb
xchg
mov
ja
jge
inc
xchg
inc
repz
je
icebp
lahf
out
push
movsb
scas
mov
stc
fwait
pop
push
addr16
fnstcw
incb
outsb
jo
ja
out
or
aad
das
dec
or
outsw
push
jnp
stos
bound
lret
mov
lcall
repnz
push
jp
xlat
out
iret
pushf
jl
adc
push
roll
sahf
sbb
ficompl
shlb
inc
add
mov
mov
jmp
inc
mov
iret
je
mov
dec
jne
cmp
imul
lea
push
push
jno
adc
xchg
testl
mov
pop
imull
jbe
imul
clc
adc
xor
dec
push
aam
mov
mov
jns
jns
movsb
movsl
dec
lret
add
jmp
and
sbb
std
dec
mov
aam
xor
push
fs
mov
fsubl
incb
into
loopne
mov
xor
jne
add
sbb
nop
sbb
les
mov
sbb
imul
js
fldt
dec
popf
and
sbb
push
pop
shl
mov
pop
pushf
mov
dec
inc
and
or
cmpsb
testl
aam
mov
fadds
cmp
adc
hlt
push
cmp
push
jp
rcr
sahf
scas
sti
add
dec
jg
push
sbb
mov
lahf
dec
push
pop
enter
addr16
ret
mov
bound
imul
dec
lock
inc
shlb
daa
or
jp
loopne
push
scas
inc
cli
pop
int
shl
shr
mov
ss
adc
cmp
cmp
cmc
fmull
mov
push
pop
or
adc
ja
mov
sbb
cmpsl
jge
aas
pop
pusha
sbb
je
subl
in
in
imul
and
sbb
lahf
mov
dec
cmp
pop
stos
sub
sbb
mov
adc
dec
bound
ret
les
fnstsw
jb
movsb
shll
cmp
and
std
jge
pop
jne
xchg
pop
mov
mov
aad
xchg
and
xchg
fs
sub
fs
ret
sarl
pop
into
test
into
inc
xor
or
push
test
push
loopne
xchg
pop
stos
pop
push
call
lahf
pop
mov
pop
stos
insl
pusha
dec
out
cmp
jg
adc
xor
cmc
fldt
xlat
lret
fiaddl
or
sbbl
ja
jg
mov
fstpt
aaa
xchg
movsl
mov
jno
inc
popf
mov
push
sbb
xchg
mov
pop
sbb
mov
push
daa
mov
pop
dec
sahf
inc
jnp
lea
es
out
dec
jae
insl
test
jns
xchg
ja
add
and
ret
xchg
int
or
cmpb
cmp
outsl
mov
orl
or
xor
sub
push
idivl
sub
enter
cmp
shl
jle
lea
fstl
test
xchg
inc
int
test
fbstp
lods
subl
lods
sarb
cmp
aaa
daa
push
mov
push
js
mov
add
mov
lret
popf
or
in
cmp
int
out
sbb
push
sub
mov
sub
push
push
mov
aam
or
je
pop
and
pusha
testb
int
scas
push
in
ss
mov
jl
aad
jnp
and
movl
push
icebp
fnstcw
xchg
loopne
bound
add
dec
xchg
cmpsl
data16
mov
fcompl
ja
push
ret
pop
sti
mov
mov
sub
dec
dec
loope
xchg
int3
xor
add
mov
dec
lea
xchg
lock
movsl
fldenv
outsl
es
test
mov
test
mov
push
pop
mov
push
lret
sbb
pop
inc
or
push
lcall
cltd
jp
jnp
rorb
or
jmp
fs
mov
adc
push
popf
dec
ljmp
testb
in
mov
jno
jne
test
mov
push
adc
inc
sub
add
sbb
inc
xchg
or
loopne
jo
xchg
jb
inc
stos
or
js
stc
mov
pop
pop
ds
and
mov
imul
outsb
adcb
or
sub
ret
popf
xchg
fidivrl
pop
movsl
pop
jb
xchg
dec
pop
loopne
mov
and
adc
mul
dec
lret
notl
push
ds
aaa
popf
dec
es
push
lahf
es
pop
jbe
mov
sbb
xchg
aas
push
add
xor
pushf
add
inc
aam
roll
test
and
and
dec
shll
add
aad
xchg
aam
dec
pop
fidivrl
xor
repnz
or
mov
cld
push
mov
push
sub
or
in
sub
cmc
sub
imul
imul
enter
je
shlb
js
stos
jo
pop
gs
daa
jl
xor
clc
push
and
pop
lret
and
fstl
sub
push
scas
dec
xorl
cli
add
push
push
adc
push
repz
pop
push
repnz
adcb
pop
sbb
pop
insb
push
scas
andl
imul
rolb
mov
mov
xchg
icebp
ss
add
push
dec
cmc
fistpll
jnp
outsb
das
cltd
fnstcw
inc
push
iret
fistpl
pop
hlt
push
jno
andl
mov
jne
in
adc
pop
sti
addr16
mov
mov
jb
bound
mov
les
fadd
inc
cmpsl
jge
mov
pmaxub
enter
adc
push
and
pushl
mov
add
dec
and
ja
push
out
inc
test
cmpsb
cmp
insb
xchg
pop
cmp
push
pop
pop
out
mov
ds
dec
fdivrl
les
sub
int
pop
stos
stos
xchg
xor
mov
cltd
xor
test
lea
je
movsb
bound
dec
stos
jns
pop
js
bound
push
mov
cmp
adc
enter
jl
lahf
and
in
test
test
lock
sbb
jns
pop
xchg
sub
aad
and
cmp
cmc
jge
add
and
and
ja
push
das
cmpsl
sahf
popa
js
pop
in
push
sti
jae
out
pop
dec
fnsave
mov
fstl
dec
cwtl
dec
mov
popa
jle
push
lret
pop
jns
sti
inc
and
iret
mov
jp
shrl
out
shlb
or
mov
out
clc
ljmp
out
pop
sahf
fs
mov
jmp
mov
mov
sbb
stos
js
jp
fcmovnbe
out
pop
lods
pop
pop
repz
xor
imul
stc
pop
out
incl
mov
gs
pop
js
xlat
jne
test
or
add
mov
outsb
pop
jno
popa
scas
in
roll
loop
adc
add
pop
push
insb
testb
daa
lcall
mov
roll
xchg
and
repz
pusha
sbb
pop
fs
inc
and
sbbb
add
mov
pop
jecxz
rcl
gs
iret
jg
cmp
xor
cmc
xor
push
xor
pop
lds
repnz
out
jle
or
sti
movsl
aaa
xchg
cmpl
jle
cli
lods
adc
pushf
shrl
lock
dec
ds
mov
test
lret
andb
mov
out
cmpsb
insb
pop
insb
and
xchg
pop
out
rorb
jb,pn
repnz
aas
xorl
dec
out
cld
std
cs
xchg
sub
popa
mov
pop
pcmpgtw
orl
leave
lea
inc
in
into
inc
jge
sti
or
dec
nop
add
lret
mov
push
adc
and
and
inc
bnd
rorb
aaa
jle
nop
imul
test
and
jnp
stos
and
xor
movsl
ja
gs
inc
add
lcall
shr
jl
adcl
mov
push
lods
and
and
call
js
mov
je
mov
daa
pop
dec
gs
repnz
xor
inc
roll
adc
cli
push
inc
pop
inc
sti
dec
cmp
dec
pop
je
lock
aam
in
xor
fnstenv
xchg
sub
std
xchg
sbb
mov
in
or
dec
das
dec
cmpsb
xchg
das
dec
xchg
mov
lahf
push
add
movsb
in
ss
cltd
jno
js
insb
sub
jnp
ret
jnp
mov
dec
and
cmpsl
out
cmovns
sub
or
mov
pop
test
mov
xor
fnstsw
and
jae
stos
or
and
mov
push
lret
rclb
fcomip
aad
fcompl
sub
cmp
sbb
shll
out
into
lods
mov
ret
out
enter
xor
mov
out
out
mov
jbe
cmc
ja
add
cmp
cmp
push
int3
lcall
push
push
xchg
inc
lcall
mov
sbb
push
aas
mov
int
mov
inc
cmpsl
arpl
bound
pop
mov
mov
sub
imul
pusha
repz
movsb
out
cmp
repz
xchg
lahf
outsb
mov
jg
rorb
jbe
xchg
jmp
js
and
or
xchg
cmp
adc
cmc
mov
scas
xchg
test
popf
sbb
or
add
push
cmovb
in
shrb
iret
mov
hlt
pushf
push
bound
pop
sbb
addr16
sahf
jnp
cld
push
shl
sti
lock
ja
das
mov
or
jmp
ficompl
loop
cmp
ja
dec
cmp
xor
and
jecxz
fstpt
ret
pop
inc
faddl
adc
scas
in
scas
dec
xchg
je
aas
addr16
fmull
dec
xlat
and
jns
int3
test
inc
push
test
dec
loope
test
call
hlt
shl
and
or
push
xchg
xchg
sub
adc
mov
or
xor
sahf
sti
sbb
jbe
mov
adc
or
pop
mov
shlb
clc
dec
push
aam
lahf
mov
cmp
ljmp
setl
jmp
lret
xorb
mov
loop
mov
cmp
loopne
shll
popf
scas
add
pop
aas
hlt
cltd
test
jg
insb
lahf
sub
dec
insb
and
addb
lret
inc
pop
mov
push
cmp
dec
mov
mov
mov
pop
lahf
js
int
sub
jle
int
mov
int3
mov
fsts
mov
icebp
shrl
in
aas
add
adc
mov
lea
loopne
add
pop
push
sbb
lret
cmpl
mov
xlat
icebp
aam
adc
adc
cmp
push
arpl
lds
imulb
stos
mov
stc
test
push
ret
and
add
xor
mov
test
mov
aam
imul
mov
cmp
pop
jne
pop
mov
cmpsb
sbb
insl
mov
or
adc
pop
fmuls
pop
ror
mov
mov
shl
loopne
mov
enter
mov
cltd
dec
push
fists
pop
lcall
cli
lcall
pop
sahf
out
and
clc
bound
mov
sub
mov
xchg
fstpl
aam
or
jl
cli
dec
dec
movsb
lods
fldl
mov
cmp
mov
cmp
movsb
xchg
cli
insb
push
jns
cmp
push
mov
out
push
sbbb
mov
jecxz
add
bound
and
or
xor
cmp
push
xor
jns
arpl
imul
ja
into
arpl
fistl
cmp
and
add
push
lods
shll
ds
out
add
mov
mov
jae
mov
decb
mov
pop
mov
push
aaa
aaa
popf
out
aaa
ljmp
mov
jmp
sbb
mov
daa
mov
add
int3
mov
cmpl
repnz
sti
aas
mov
dec
add
mov
inc
adc
mov
sub
out
inc
push
mov
mov
dec
mov
xchg
jecxz
movsl
divl
and
clc
aas
xchg
ficoml
lcall
dec
das
outsl
iret
fisttps
movsl
jno
and
rcr
mov
bound
inc
fsubr
icebp
dec
jb
gs
inc
scas
and
adc
push
xchg
sub
and
adc
adc
add
and
test
push
movsl
es
stos
mov
mov
xor
out
mov
pop
int3
or
notb
ffreep
dec
insb
sub
push
cmp
gs
movsl
push
fucomip
mov
test
mov
xchg
mov
stc
loopne
in
xor
call
or
repnz
sub
adc
mov
xchg
pop
sub
add
xor
lea
cltd
dec
pop
sbb
jb
into
adc
mov
aaa
cmp
jo
ja
ret
sbb
mov
push
fbstp
int
mov
les
stc
lods
cltd
mov
sub
xor
insb
inc
ret
fsqrt
lahf
movsl
sbb
mov
or
clc
add
jns
sbb
mov
pop
push
mov
jne
sub
push
daa
jl
mov
add
cld
stc
lods
out
and
sub
adc
dec
aas
in
leave
pop
cmp
ret
loope
and
xlat
aaa
push
mov
xor
leave
cmp
sub
lods
push
pusha
es
dec
mov
push
inc
and
testl
std
push
xor
stc
stos
dec
cmpsl
xor
jnp
xchg
xor
movsb
or
repz
stc
jl
jb
nop
into
xchg
mov
mov
ficoml
inc
sbb
xor
neg
or
mov
addr16
sbb
xor
adc
cmpsl
sub
aaa
movsb
mov
int
pop
std
ret
xchg
addr16
cmc
lret
mov
lods
sbb
cs
dec
jecxz
cltd
push
fimuls
add
inc
push
pop
jae
xor
stos
mov
inc
jnp
popf
sti
sub
cmpsl
sbb
cltd
es
add
pop
jmp
out
aam
repnz
push
xchg
mov
pop
shrb
push
jnp
clc
pop
movsb
push
or
jge
push
fidivs
in
mov
fiadds
dec
out
and
dec
dec
add
imul
call
push
popf
nop
and
push
pop
inc
pop
mov
pop
outsl
jmp
and
aas
incb
mov
insl
mov
ret
or
stos
ljmp
es
mov
iret
loope
mov
sub
fs
xor
sbb
sbbb
popa
jecxz
dec
add
in
lret
jle
jl
inc
ds
xchg
mov
in
arpl
push
cltd
jecxz
mov
sbb
and
dec
gs
lahf
mov
fisubrs
sbb
pop
mov
jb
and
out
fcmovnu
ss
gs
cmp
xchg
ucomiss
cmp
aaa
mov
leave
bnd
xchg
cltd
mov
insb
enter
aad
addr16
test
fsubrl
inc
adc
sbb
test
leave
lea
lock
pushf
cmpsl
and
out
pusha
sbb
xor
and
sub
push
sbb
dec
sub
dec
insb
mov
and
or
inc
push
cmp
push
imull
xor
scas
dec
fndisi(8087
lahf
xor
shll
jmp
and
loopne
jecxz
pop
sti
cmp
mov
hlt
imul
out
pusha
test
xchg
jmp
inc
push
jp
stc
and
push
xchg
lret
not
fldcw
dec
stos
xor
jge
pop
xchg
cmp
dec
out
jge
sar
add
jl
push
adc
ja
pop
insb
outsl
sub
repz
insb
mov
enter
dec
mov
and
pop
pop
jle
xchg
pop
mov
inc
lret
jo
dec
sbb
test
cmpsb
jl
and
or
fwait
out
mov
scas
mov
fwait
sub
adc
jae
push
sub
add
mov
lea
mov
shrd
push
out
add
inc
out
imulb
enter
mov
jle
out
inc
cmc
mov
dec
sub
out
ret
movsb
push
popa
sbb
dec
mov
push
aaa
pop
xchg
fidivl
and
icebp
xchg
or
dec
data16
and
push
adc
jl
fldt
add
or
ficomps
adc
xor
or
push
inc
adc
add
push
xor
cmp
cmpsl
jge
fs
mov
call
jmp
lock
push
pop
mov
sbb
movsl
int3
test
add
push
push
add
jo
pop
add
lcall
popf
lahf
xchg
mov
mov
mov
idivl
push
gs
cmp
mov
pop
push
add
lds
shl
enter
dec
shlb
or
xchg
gs
cmp
mov
add
hlt
popl
cmpsl
clc
and
push
pusha
pushf
sub
out
test
push
push
inc
jnp
mov
arpl
and
out
outsl
iret
add
mov
outsl
or
add
outsb
cld
outsb
add
shrl
fs
inc
movb
ficoml
cmp
mov
adc
aam
pop
jle
cmpsb
std
lcall
out
icebp
inc
xor
fisubl
dec
mov
add
in
lods
xor
int3
dec
mov
call
dec
push
fcmovnb
xor
jbe
jecxz
pop
or
sbb
outsb
push
out
imul
std
sbb
sub
test
add
mov
sahf
xchg
lret
mov
dec
movsb
xor
and
pusha
xchg
loopne
dec
xor
inc
jbe
das
das
sub
out
sahf
fdivp
mov
mov
cmc
pusha
xor
mov
lahf
repnz
mov
insb
dec
sub
mov
jl
mov
sbb
jp
mov
jl
xchg
lret
js
sti
fcoml
out
and
ds
negl
mov
jne
mov
and
mov
clc
push
cwtl
out
sahf
jb
testl
fiaddl
adc
stos
test
negb
in
stos
lret
pop
sarl
shl
sbb
xchg
cmp
out
push
pop
fs
cmp
ds
inc
loopne
jmp
inc
sbb
pop
shr
aas
and
sbb
das
xchg
loope
jnp
xchg
lret
xor
cwtl
pop
jne
enter
pop
push
mov
test
pop
add
or
dec
add
int
push
inc
sbb
mov
dec
inc
jo
iret
leave
int3
push
sub
stc
mov
jge
sbb
push
insb
push
mov
sub
push
dec
in
mov
fmul
adc
les
out
and
cmp
mov
cs
mov
mov
in
xor
or
xchg
and
sbb
sbb
and
or
cltd
test
jb
sub
mov
int
das
imul
adc
cmpl
ds
dec
sub
sbb
push
cli
bound
jo
xchg
jae
fsubs
lcall
mov
dec
stos
mov
clc
insb
enter
sub
or
jns
scas
xchg
mov
test
mov
pcmpgtw
sti
mov
sar
pushf
fadd
inc
in
das
arpl
adc
pop
fcompl
sub
adc
repz
les
and
popf
inc
daa
jge
dec
mov
sbb
sub
sbb
icebp
xchg
mov
lcall
repnz
push
jb
mov
cmp
pop
and
std
std
mov
imul
cmp
sbb
test
dec
lea
mov
mov
inc
ret
cmp
xorl
stos
scas
and
adc
mov
insb
mov
daa
negl
lcall
mov
add
and
and
rolb
xchg
fcoms
mov
mov
je
cmp
pop
pop
test
or
pop
or
mov
mov
jge
es
and
es
push
inc
jp
xlat
mov
cmpl
jl
pop
in
stc
stc
jge
testl
cmp
fbld
cltd
mov
sahf
adc
cmp
sub
jle
xor
ja
fs
clc
fisttps
pusha
lret
and
mov
pop
mov
clc
xchg
aaa
dec
stos
in
sbb
ret
xor
xor
cmc
insb
push
mov
cld
aad
push
xor
lods
lret
dec
cltd
jns
in
mov
fnstenv
jmp
ja
dec
pop
mov
mov
mov
repnz
adc
dec
push
out
imul
daa
and
mov
jge
sbb
scas
paddq
pushf
ret
imul
cmpsl
inc
xor
fisubrl
lods
test
mov
and
dec
in
in
xchg
sub
or
insl
scas
test
lods
test
pop
add
mov
ljmp
xchg
xchg
aas
stos
std
int
jo
sbb
out
rcll
xlat
xor
into
cs
mov
ret
inc
ds
int3
jb
cmp
mov
xchg
dec
insl
dec
ss
mov
push
sub
stos
adc
test
and
mov
popa
mov
data16
sub
or
popa
movaps
or
or
sub
shrl
lds
adc
fdivrp
or
or
add
fiaddl
dec
jge
ja
popw
in
jmp
mov
lahf
cmp
xchg
add
sub
jb
sahf
mov
ret
cmp
sub
and
ljmp
fisttpl
xchg
mov
cmp
es
in
pop
xchg
loopne
adc
jo
add
and
push
inc
arpl
mov
jle
ljmp
dec
or
fcmovne
mov
lcall
aas
xchg
sub
imul
mov
mov
jmp
lods
jo
fimull
cmp
jnp
cmp
lcall
sub
pusha
push
xchg
dec
adc
mov
scas
lcall
mov
push
fsubl
mov
scas
add
inc
sahf
aad
xchg
cli
fsubl
std
xchg
outsl
stc
arpl
mov
icebp
lods
push
dec
movsl
xor
or
add
dec
push
sub
cmpsb
sbb
mov
xor
pop
cmp
mov
cli
repz
lahf
push
mov
lret
outsl
xchg
ficoms
adc
cmp
sbb
inc
mov
loopne
jo
daa
stc
insb
pop
push
jp
and
mov
frstor
aaa
sub
icebp
daa
adc
iret
cmpsl
es
mov
sarb
cmp
mov
fcmovnb
cmp
insb
int
lret
mov
ret
mov
add
add
icebp
jmp
cmc
dec
data16
jbe
mov
loopne
mov
shr
lahf
xor
xor
movsb
mov
fidivs
pop
push
fnstsw
xor
popf
push
mov
sbb
xchg
in
scas
xchg
sbb
sub
aas
xchg
aad
int3
lock
dec
fadd
addr16
lcall
aas
mov
sbb
or
add
pop
mov
into
jno
or
std
xchg
cmp
xchg
lods
push
add
ljmp
mov
stos
lods
pop
push
or
xchg
mov
fadd
or
cmp
jb
hlt
insl
hlt
xor
pop
mov
dec
xor
sbb
mov
mov
mov
pop
cmp
icebp
push
xchg
into
gs
lret
mov
fisttpll
pop
mov
mov
stos
sub
out
push
and
push
xchg
adc
loope
jg
aam
jo
enter
sub
or
push
fcmove
mov
fidivrs
mov
cmp
mov
ret
cmp
loopne
or
pop
arpl
lcall
insb
outsl
add
addr16
lock
leave
push
insl
mov
jg
out
and
cmp
xchg
push
lods
cmp
pop
out
out
push
outsl
push
cmc
test
out
add
ret
sti
jbe
adc
pop
sbb
ja
xchg
movsb
into
push
and
add
mov
lds
pusha
mov
popa
mov
mov
out
loopne
fs
adc
in
jb
mov
sbb
or
or
aaa
popa
sbb
push
and
jp
xchg
sub
dec
mov
outsl
test
popa
mov
cmpsl
imul
mov
sbbl
cmpsb
xor
cmp
test
iret
xchg
loope
xchg
jb
adc
cmc
into
add
cmp
jmpw
arpl
cli
arpl
mov
ds
call
push
fwait
push
sub
and
out
lods
int3
addr16
jl
or
push
pop
into
jmp
pushf
mov
mov
dec
jae
add
xchg
add
pop
push
into
xchg
cli
cmp
loop
xorb
es
scas
subl
fbstp
or
or
xchg
in
test
mov
push
dec
stos
mov
adc
aad
pop
mov
mov
dec
leave
inc
mov
or
mov
jnp
out
and
or
insl
or
adc
imul
jl
inc
add
repz
mov
pop
pusha
mov
cmp
mov
inc
adc
sbb
xchg
adc
pop
and
pop
int
dec
push
sarb
pusha
je
adc
repnz
adc
mov
jle
gs
mov
sahf
mov
jmp
xchg
push
jbe
or
out
shrl
dec
inc
jo
loop
ja
out
aam
aad
and
mov
ss
fs
sahf
rol
iret
iret
js
scas
add
adc
lret
bound
add
dec
rol
subb
jbe
xor
stos
or
cmpb
decl
sbb
cmp
mov
and
sarb
push
lahf
loop
loop
les
and
mov
mov
pusha
pusha
scas
sbb
xchg
inc
inc
fistpll
aas
in
fs
pop
das
cltd
fistpl
mov
les
notb
sub
movsb
pop
mov
popa
inc
popf
aas
xorl
and
add
js
sbb
loope
xchg
dec
push
cli
add
int
xchg
stos
out
sub
push
mov
dec
xor
cwtl
dec
stos
push
fildl
add
inc
andl
jns
xlat
dec
and
and
mov
jl
mov
aam
out
xor
lahf
adc
js
fmuls
aad
xor
add
out
xchg
sub
xchg
int3
xchg
mov
dec
and
jl
ret
mov
daa
lcall
adc
shlb
mov
lea
les
fucomip
shrl
push
dec
hlt
pop
mov
pushf
mov
mov
test
mov
mov
std
leave
jg
sub
imul
mov
cmp
or
sbb
lcall
cwtl
mov
and
push
idivb
std
imul
cmp
mov
mov
adc
dec
adc
and
dec
aam
fwait
push
push
xor
scas
add
xlat
cmp
stos
or
xchg
scas
and
fimull
mov
inc
in
push
iret
js
pop
mov
inc
cli
aad
sub
jno
popf
sub
fdivs
sub
lahf
mov
mov
stos
jbe
xchg
cli
push
jne
ret
mov
push
out
fistps
jecxz
int3
dec
fisubrl
sbb
insl
mov
sbb
push
mov
lret
enter
addr16
enter
test
jl
push
je
in
cmpsl
out
clc
push
shll
outsb
mov
into
int3
dec
pop
and
pushf
cmp
sbb
inc
adcl
add
ljmp
in
mov
ret
jo
or
notb
adc
sbb
lea
mov
mov
pop
je
test
fcompl
pop
rcr
push
ja
clc
or
sub
push
nop
ret
outsl
lcall
aaa
xor
mov
adc
lahf
test
jns
cmp
repz
fimuls
mov
repnz
ja
xchg
fisubrs
or
leave
sub
lcall
or
cltd
pop
fiaddl
sub
addb
iret
cmp
cwtl
lods
pop
sahf
xchg
stos
shrb
xlat
sarl
pusha
jno
push
rcrb
icebp
out
call
mov
xchg
imul
push
add
in
add
data16
ret
ds
dec
cltd
mov
pop
xor
imul
pop
addr16
add
orl
sbb
mull
aaa
dec
mov
pop
mov
and
repnz
icebp
sbb
or
push
lock
push
insb
lds
pop
inc
stos
and
mov
andb
fdivl
outsl
lcall
xchg
sarl
cmp
sub
lea
popf
incb
mov
insl
out
daa
pushf
inc
add
pop
jle
push
ss
cld
das
inc
rcrb
mov
mov
sub
xorl
loope
jae
xor
ret
popf
push
push
arpl
mov
sbb
or
dec
sbb
std
and
mov
xor
test
in
daa
mov
andl
push
in
adc
xchg
rcll
xchg
out
movsb
jb
pop
mov
inc
std
call
mov
sti
xor
pcmpeqb
mov
sub
lock
outsl
cs
js
and
ja
pop
ss
pop
lret
movl
inc
inc
mov
test
pop
add
pop
popa
adc
xchg
adc
mov
shr
in
cmp
inc
push
call
lret
scas
icebp
xor
or
sti
scas
loope
inc
lahf
lds
cs
ss
stc
xchg
pop
jle
nop
pop
adc
jb
sub
ja
xchg
daa
mov
push
testl
ss
dec
mov
xchg
cs
xchg
inc
fs
push
cltd
sti
leave
dec
push
push
add
push
push
shlb
shl
mov
jp,pn
mov
dec
sub
push
mov
and
mov
lock
dec
mov
movsb
pop
adc
xchg
roll
xchg
dec
add
inc
loope
ja
out
fidivl
int3
ljmp
xor
pop
or
in
adc
mov
adc
inc
sti
jno
sbb
arpl
sbb
pop
test
xchg
leave
stc
inc
push
xchg
seto
push
adc
ret
lcall
mov
mov
lret
arpl
fistpl
push
arpl
insb
test
test
cmpsl
add
aad
lcall
mov
daa
push
jno
inc
stos
jns
movsl
mov
and
sub
orb
mov
std
and
enter
andb
aas
inc
xchg
mov
dec
and
cmc
push
dec
pop
fxch
js
sti
adc
fcmovbe
adc
push
aam
cmpsl
shlb
xchg
dec
xchg
push
rorl
add
lahf
xor
jnp
lret
jl
sbb
mov
scas
shr
aas
mov
inc
adc
clc
jle
sti
mov
push
movb
lret
loope
popf
jg
shrl
jo
cwtl
xor
or
cmpsl
cmp
lret
rcl
lahf
hlt
out
mov
dec
sti
test
and
sbb
sub
inc
mov
loope
dec
dec
in
push
lds
adc
sub
jl
loopne
xchg
js
loopne
or
and
int
pop
xlat
mov
in
nop
test
xchg
and
push
je
popf
jmp
ds
fdivp
cltd
xchg
xchg
icebp
mov
sarb
pusha
divl
push
testl
negb
sbb
ret
cmp
sbb
mov
js
xor
cmp
push
mov
pop
inc
sbb
test
ljmp
pop
jnp
cmc
iret
in
or
jbe
cli
sbb
xor
xchg
outsl
adc
in
adc
pop
lds
pusha
push
or
loope
mov
aaa
cmc
pop
inc
pop
in
jb
popf
pusha
dec
adc
test
pop
sahf
pop
mov
test
cmpsb
lea
flds
xor
sbb
in
out
mov
pop
pop
jb
pop
fistpl
das
imul
lret
fdivrl
mov
push
not
xchg
mov
push
sbb
ljmp
mov
or
insb
imul
cmp
push
js
fidivrs
dec
mov
dec
push
pop
aam
dec
data16
xchg
outsl
add
in
adc
jb
hlt
aad
pop
add
cmp
jmp
sub
xor
movsl
sbb
and
test
cli
push
iret
imul
pop
aas
fiaddl
push
adc
push
mul
mov
mov
or
lret
lods
pushf
dec
mov
in
or
inc
xor
cmc
inc
mov
pop
cltd
xchg
push
dec
xor
cmp
mov
mov
test
pop
cltd
es
mov
leave
pusha
sub
es
rorl
pusha
fidivrs
push
jb
out
sub
addl
mov
pop
inc
mov
int
push
packssdw
aad
and
jbe
xor
dec
adc
mov
clc
dec
adc
pop
test
sub
push
aas
add
ja
nop
cwtl
aad
sahf
pop
pushf
xor
cwtl
or
jbe
mulb
pop
pop
test
xor
adc
or
sbbl
xchg
inc
es
stos
sti
and
mov
cmpl
or
lods
sbb
add
lock
mov
ds
ds
rorb
fnstsw
dec
jno
in
inc
ret
push
sbb
repz
jns
jb
dec
lea
ja
ljmp
sub
xor
pop
lods
xchg
pushf
test
mov
shlb
dec
jecxz
dec
ss
mov
mov
sub
in
inc
sub
test
xor
jno
movsl
out
daa
sub
mov
flds
lret
add
mov
xor
inc
xchg
mov
xchg
xor
movsb
sub
iret
shll
shrb
xchg
pavgw
or
push
mov
mov
sbb
push
cmp
jb
shlb
sub
xchg
mov
loopne
bound
push
push
jnp
push
xchg
sbb
push
xchg
mov
jne
jae
adc
aam
sbb
jl
lds
movsb
call
add
mov
mov
divb
fwait
repz
imul
sub
jae
xchg
xchg
js
es
ja
frstor
std
sti
mov
out
xchg
rclb
push
mov
call
push
dec
mov
inc
push
jmp
sbbl
or
insb
or
in
sbb
gs
push
cmpsb
adc
dec
pop
jmp
aaa
push
inc
test
inc
push
clc
xchg
imul
idivl
xor
and
cmp
out
in
pop
mov
fidivl
je
fucomi
adc
outsb
and
icebp
fstl
cmp
and
xchg
shl
out
add
imul
and
sbb
dec
insb
out
jae
inc
xor
adc
addr16
shlb
mov
pop
mov
mov
cmp
jge
stos
dec
fildll
xor
xor
inc
movl
dec
outsb
dec
add
lds
adc
push
cmc
sub
jno
addr16
daa
pop
xchg
push
mov
stc
xchg
out
shlb
jp
dec
testb
cld
lea
repz
frstor
cltd
xchg
std
fs
mov
xor
ror
in
push
adc
and
xchg
xlat
mov
cwtl
sbb
cltd
fisubl
pmulhuw
dec
sub
and
adc
sbb
cld
pop
push
popf
xor
add
data16
imul
pop
or
cmp
and
push
ja
lahf
divb
jge
in
and
push
fidivl
xchg
scas
cmp
cmpsb
imul
jnp,pt
std
jge
mov
lret
xchg
adc
call
jl
mov
les
in
je
pop
ret
sub
mov
movl
pop
repz
cmp
cwtl
insl
inc
mov
repz
loop
xor
push
cmc
pop
movsb
push
mov
adc
xor
orl
mov
mov
cwtl
or
repnz
movsl
xlat
std
cmp
sub
xchg
pop
stc
mov
jbe
lods
in
out
mov
and
sahf
add
sbb
pop
test
jnp
inc
add
adc
pop
sarb
out
add
xor
and
push
jmp
into
push
fdiv
call
sbb
inc
sub
mov
aad
mov
add
push
adcb
lahf
adc
mov
pop
aas
mov
scas
inc
popa
sub
sbb
inc
xchg
stc
add
sub
fnstsw
mov
jo
mov
mov
xchg
scas
popf
and
sub
push
pop
cmp
iret
lahf
cli
mov
js
cltd
repz
mov
cwtl
dec
push
add
push
lods
mov
inc
ficompl
repnz
out
cmpsl
sub
dec
pop
pop
and
lock
push
jle
push
pop
int
dec
popl
ret
adc
ror
xchg
sbb
sti
es
mov
filds
xchg
jg
adc
add
xor
xchg
aas
andl
jp
mov
push
lahf
sahf
lods
shrb
mov
adc
mov
xchg
push
pop
pop
mov
enter
jne
push
mov
lahf
popf
mov
call
xor
test
sub
sbb
mov
inc
adc
and
and
roll
xor
xchg
xchg
imul
jbe
mov
mov
mov
sbb
cli
lcall
or
into
addr16
fadd
lea
aaa
mov
cmp
and
xor
mov
notb
jb
iret
pushf
in
dec
flds
pop
movl
cmp
sub
aad
pusha
cli
jmp
pop
js
adc
scas
loope
lahf
imul
std
push
sub
and
negl
aas
xlat
jp
mov
adc
xor
scas
sahf
sbb
lods
lds
lock
xchg
ror
jg
lods
xchg
push
test
dec
lds
inc
push
dec
insb
shrl
and
inc
repnz
sbbl
add
cltd
cmp
cmpsl
bound
sub
or
push
mov
lods
cld
sbb
push
test
mov
lds
iret
mov
push
int3
movsl
inc
aaa
mov
shl
out
adc
push
rcll
imul
xchg
aad
outsl
fstpl
daa
mov
pop
aaa
sti
lret
ss
fcoml
pop
rclb
lock
divl
sub
lock
aad
sub
mov
ret
cmp
jge
push
out
sbb
and
xlat
adc
jp
ljmp
sub
test
loop
mov
cs
out
mov
add
sbb
push
retw
mov
or
inc
cmpl
pop
pop
insb
lods
add
dec
adc
imul
mov
fisubrl
mov
js
jb
je
mov
pusha
hlt
xchg
gs
ljmp
int3
pusha
repz
or
pusha
fmull
movsl
fcoml
pusha
add
and
push
push
xchg
xchg
mov
cltd
lahf
orl
test
xchg
mov
xchg
push
cltd
push
cld
mov
pushf
rorl
sbb
std
xlat
mov
mov
mov
out
sub
into
enter
mov
cmp
inc
xlat
mov
les
mov
pop
sub
mov
mov
vsqrtpd
fs
or
xchg
dec
xchg
mov
jbe
aaa
xchg
sub
cmpsb
sbb
popf
sti
push
int
mov
pop
out
jne
push
adc
adc
inc
stos
and
sub
arpl
mov
dec
jp
jae
inc
push
sbb
or
test
dec
sub
sbb
push
and
ja
inc
dec
pop
xchg
mov
add
or
hlt
cwtl
add
cmpsb
cmp
stc
pop
hlt
pop
and
jns
aam
mov
xchg
jmp
addr16
mov
insl
lret
shl
inc
adc
ret
mov
test
arpl
sub
and
lods
lahf
or
outsl
rcll
sbb
clc
and
cmp
mov
cltd
je
pop
pop
imul
or
mov
inc
xchg
xchg
inc
add
jae
sarl
pop
mov
ja
ljmp
mov
cmpsl
sub
stos
shl
dec
push
cltd
pushf
lods
bound
int3
pop
sbb
loop
mov
jl
sti
and
daa
aas
and
pop
inc
fists
out
test
push
inc
daa
jae
pop
dec
data16
pop
les
xor
inc
clc
shll
sahf
ss
or
sbb
shll
and
mov
daa
inc
dec
sbbb
xchg
or
push
outsb
xor
sub
bound
shll
lcall
pop
dec
pushf
icebp
pop
mov
mov
sbb
test
std
add
mov
sbb
pause
fcoml
dec
int3
jbe
jg
orb
fmull
sbb
adc
and
and
sbb
mov
pop
das
ret
icebp
into
subl
cmp
lcall
stos
mov
jno
fdivrs
out
shl
cwtl
pop
inc
test
mov
cli
lock
xchg
arpl
int
daa
mov
jp
adcb
xor
daa
mov
adc
mov
dec
out
ss
fidivrs
lcall
data16
cmp
rcrb
fninit
and
mov
pop
lds
ss
test
inc
xchg
leave
movsl
xchg
sbb
std
mov
sbb
dec
loop
push
dec
xor
mov
jp
scas
popa
hlt
fcompl
pop
adc
outsl
mov
daa
das
adc
xchg
lahf
out
lret
insl
into
cwtl
mov
lds
test
popa
pop
popa
faddl
xor
dec
jae
jge
fidivs
dec
xor
mov
adc
in
inc
push
push
sbb
ds
lock
popa
fwait
cmp
shr
cs
add
popa
jae
fmull
or
shll
xor
xor
arpl
movsl
mov
jns
bswap
push
push
fisubrl
and
popf
xor
shrd
loop
adc
mov
sti
rorl
push
xchg
xchg
xchg
pop
int
or
sub
fnsave
cmp
iret
jo
xchg
outsb
aas
adcl
sbb
push
mov
cltd
pop
inc
pop
add
fists
xchg
xor
jmp
cmp
cs
cmpsl
mov
mov
jmp
sbb
or
mov
sbb
mov
aad
pusha
jp
fcoms
test
jae
mov
bound
gs
pop
fisubrs
pop
ds
jnp
cmc
sbb
mov
cmp
xor
and
adc
icebp
imul
push
std
int
cs
clc
and
adc
outsb
cmp
push
lahf
jnp
aaa
push
stc
inc
adc
inc
out
scas
mov
jb
loopne
leave
mov
fsubrs
cltd
mov
push
push
je
push
sti
inc
int3
xchg
mov
inc
inc
ficoml
shrb
adc
and
xor
or
loopne
mov
insb
imul
das
sbb
xchg
in
push
arpl
sbb
cwtl
out
add
ja
pop
mov
adc
sbb
pusha
sub
stos
pop
cmp
pop
jne
xor
orl
and
sub
sub
or
fisubrs
std
cmp
cltd
cltd
fcomp
jp
mov
aaa
mov
sbb
inc
roll
stos
push
test
lds
xor
out
jb
xlat
push
push
add
or
adc
fdivl
sub
push
pop
mov
mov
xlat
push
or
adc
sub
cmp
pop
dec
xchg
cwtl
jo
push
insb
aad
clc
jo
mov
div
push
or
xor
xor
lret
jp
repz
adc
xor
xlat
inc
orl
cmp
sbb
jno
xor
rcrl
test
mov
and
das
shlb
pop
dec
call
xchg
lds
scas
gs
test
xor
dec
dec
xchg
cli
ds
pop
pop
and
cmc
dec
jmp
lds
in
pop
hlt
das
ss
pop
jecxz
inc
das
ja
jecxz
insb
in
movsl
mov
push
mov
push
mov
add
mov
mov
scas
mov
jle
test
rep
jl
or
add
jl
push
rclb
xor
enter
inc
fucomp
mov
cmp
adc
cs
jae
testl
cmp
inc
mov
mov
pop
iret
stos
enter
sub
cwtl
les
xchg
in
fnsave
xchg
and
aaa
dec
imul
call
cmp
and
adc
fiadds
inc
test
push
xor
jmp
aam
arpl
loope
lds
xchg
pop
lods
adc
std
sbbb
test
mov
pop
imul
mov
xor
inc
fsubrp
fs
pop
mov
pop
mov
push
sub
fidivrs
xor
js
js
test
out
sbb
cs
pop
cmc
xor
sub
jle
jne
mov
mov
xchg
xor
mov
scas
sub
sub
imulb
push
add
cli
mov
data16
das
pop
cmp
push
xchg
inc
xor
jp
mull
enter
xlat
popf
and
nop
pop
rol
fstl
in
mov
aad
jp
pop
data16
dec
mov
mov
inc
push
not
cld
sbb
mov
push
xorb
cmp
and
fistps
mov
or
pop
and
arpl
mov
test
outsl
sti
mov
pop
and
int
outsl
aad
sbb
cwtl
adc
xchg
btc
fisubrl
sti
mov
pop
xor
stc
cmp
inc
jmp
sbb
push
mov
inc
xor
in
pop
lds
pop
xchg
sub
pop
add
cld
xor
fdivr
fbstp
clc
sbb
mov
and
adc
addr16
sub
ficoml
jnp
fs
dec
sbb
repz
testb
jl
adcb
push
jle
stc
add
nop
inc
adc
cwtl
test
inc
xor
ljmp
jl,pt
loopne
ja
sub
cs
mov
sub
fbstp
jbe
lods
mov
xchg
push
out
lods
sbb
inc
mov
lea
adc
scas
lods
outsl
movsl
inc
aam
adc
push
dec
fwait
cmp
sbb
xor
scas
test
cmp
push
jg
inc
or
push
lret
stos
std
pandn
mov
sbb
test
adc
ffree
lcall
dec
lahf
xchg
incl
imul
or
xor
or
cmpsb
pushf
pop
jl
lret
cmp
xchg
imul
dec
jl
or
mov
and
adc
mov
adc
xchg
repz
jle
push
mov
push
and
lcall
aas
jns
pop
fldt
pop
repz
ret
push
mov
jno
sub
ds
fstp
adc
pusha
xor
in
cmp
insl
and
lds
xchg
lods
cmp
in
sbb
adc
inc
test
shr
adc
fldt
mov
mov
mov
in
inc
push
sbb
jmp
and
xor
hlt
mov
aaa
pop
mov
or
imul
jecxz
stc
and
psrlw
or
in
bound
lea
ja
ss
dec
jnp
lahf
add
mov
mov
in
jae
push
sbb
jo
cmpsb
sahf
fcomp
stos
inc
xor
cmp
add
dec
jbe
pop
push
out
jp
and
push
test
enter
ror
mov
xchg
repz
push
lahf
js
jbe
and
pop
pusha
xor
clc
test
lea
mov
incb
lret
std
adc
sbb
scas
mov
enter
jno
xlat
loope
cmp
xchg
mov
xor
nop
lret
pop
xchg
xchg
jno
jmp
adc
enter
jnp
into
out
rdpmc
imul
mov
adc
jge
aam
mov
inc
shll
call
and
mov
add
inc
mov
fiadds
aam
push
out
cld
fdivp
add
push
pop
movsl
cmp
inc
mov
mov
pop
and
daa
sub
out
xchg
rclb
sub
lods
ja
aad
dec
xchg
push
adc
mov
sub
cli
push
push
cmp
test
ljmp
cmp
imul
lret
mov
push
xor
mov
aam
push
cmp
sti
xchg
pop
leave
sbb
dec
cmp
movl
lret
add
cmp
xchg
lea
aam
stos
shl
pop
lock
mov
in
mov
cli
xor
cmp
xchg
lret
rorb
pushl
stc
sbb
push
imull
push
roll
rcrb
fldenv
sahf
sahf
ja
adc
adcb
pusha
pop
xchg
and
inc
out
clc
ljmp
or
mov
std
cmp
mov
mov
xor
pcmpeqd
mov
rcrl
shr
mov
lods
insb
push
cli
and
mov
sub
jg
pop
push
jnp
imul
lock
mov
dec
xor
mov
and
hlt
and
xor
pop
add
je
shlb
pop
or
jecxz
sub
cmc
loopne
and
or
cmpsb
aam
cld
push
les
das
mov
add
les
in
add
test
das
mov
jnp
int
cwtl
and
jae
mov
mov
das
jne
outsb
pop
mov
stc
sbb
imul
dec
adc
shlb
aad
jo
fs
out
mov
out
test
pop
insb
dec
inc
xadd
loope
sahf
fcmovnbe
loope
es
decl
fs
ds
add
mov
mov
inc
dec
imul
inc
in
mov
push
mov
adc
xchg
mov
adc
jp
dec
push
aad
jp
and
jne
cmp
cld
or
fldt
xor
pop
js
push
lock
sahf
mov
ja
cmp
popl
imul
ds
pop
cli
sub
outsl
cli
add
cmpsl
subb
stos
push
movsb
mov
push
mov
int3
aad
lea
push
scas
mov
xor
cmp
cwtl
adc
sbb
test
mov
enter
xchg
lret
out
cmc
sub
rcll
and
jne
add
shr
or
pop
dec
pusha
es
xchg
add
mov
ja
pop
std
dec
data16
cwtl
xor
out
jecxz
jp
fmuls
std
mov
cmpsl
dec
dec
lock
inc
push
adc
aam
test
iret
adc
pop
fsubrl
mov
imul
ret
pop
lahf
xchg
leave
push
js
movsb
aas
push
pop
xlat
shl
js
test
mov
test
les
in
jg
das
cmp
ror
shlb
jae
jns
mov
sti
lea
dec
in
lock
sub
jae
in
pop
std
sub
ja
xchg
pushf
cwtl
pop
mov
push
xor
cmp
rorl
dec
xchg
dec
sub
sub
xor
and
jno
repz
iret
cmp
add
int3
add
pop
or
and
pop
js
sbb
add
jle
inc
xchg
daa
or
cld
pop
jg
xor
add
sub
leave
inc
cli
push
cmp
loop
adc
cmp
inc
adc
pop
cli
xor
push
int
adc
xchg
test
and
cmpsb
mulb
mov
dec
outsb
sbb
mov
pusha
adc
out
pop
pop
xor
fmuls
stos
iret
push
loope
mov
or
pop
xorl
push
rcrl
xor
rorb
pop
sbb
add
lcall
fbstp
xlat
jge
hlt
mov
cs
jb
push
push
adc
or
sub
stos
ret
fistpll
push
xchg
lock
test
and
jbe
shl
mov
jns
cld
inc
inc
xor
mov
popa
jno
dec
hlt
dec
inc
bound
pop
add
fwait
in
icebp
iret
lock
cmp
sbb
jecxz
pushl
daa
push
out
out
pop
insl
and
add
stc
lds
je
ret
or
rorb
rcr
sbb
test
cmp
xchg
loopne
pop
sti
iret
lcall
add
cmp
pop
jne
filds
das
cmp
pop
mov
ror
mov
adc
mov
cmp
bound
pop
les
and
cmp
ljmp
daa
test
or
cvtps2pd
mov
sub
dec
lcall
ds
ja
add
or
fildll
sub
adc
cltd
mov
pop
outsl
push
mov
rorb
push
imul
and
xchg
movsl
or
aas
push
call
gs
mov
cmc
mov
or
subb
fwait
push
jb
sub
clc
ja
mov
leave
fstpt
test
outsl
repnz
xchg
adc
mov
sbbb
bsr
gs
inc
inc
dec
into
mov
push
xor
jecxz
dec
and
sbbl
mov
repz
ret
xor
add
xor
movsl
xchg
shlb
loope
ret
insb
ljmp
mov
xchg
xor
test
mov
add
ficoml
xchg
cmp
iret
in
inc
or
shll
mov
sti
xor
insb
lods
mov
cs
out
data16
imul
xchg
mov
xchg
stc
mov
in
jmp
mov
sub
insb
mov
inc
push
lods
repnz
arpl
push
lret
jae
outsb
sub
jp
jo
mov
inc
in
and
mov
stos
push
push
add
faddp
jae
jge
sbb
out
mov
xchg
mov
and
mov
stos
jle
push
push
mov
cmpsb
cld
and
icebp
adc
ljmp
out
test
pop
mov
dec
adc
pop
nop
lahf
lahf
adc
sub
mov
dec
out
adc
pop
sbb
scas
cmp
dec
and
sbb
lds
dec
jb
mov
cmp
xor
dec
pop
sub
fsubrs
pop
inc
ret
lret
clc
push
mov
in
mov
dec
lret
push
mov
insb
ret
iret
jl
lahf
sarb
fstl
test
test
lea
clc
mov
push
xor
in
mov
inc
or
jno
mov
mov
inc
mov
push
jle
inc
pop
mov
mov
add
push
rcrl
icebp
push
xchg
mov
cmp
and
ja
shrb
bswap
pop
test
aaa
inc
in
lret
pop
mov
dec
int
xchg
mov
add
mov
adc
jne
cmpsl
xor
sub
pop
adc
and
jns
stos
mov
out
lcall
lods
add
adc
add
xchg
sub
mov
fnstenv
cmp
ret
repz
lcall
push
xchg
mov
call
sbb
cmp
js
xchg
mov
daa
movsb
mov
jb
push
mov
xchg
dec
stos
xchg
pop
call
enter
xchg
push
daa
cltd
outsb
aaa
inc
mov
xor
addl
push
sub
cld
sbb
leave
xor
addr16
das
fs
xchg
jnp
roll
push
ret
xor
adc
les
pushf
mov
push
and
int
imul
inc
xor
xchg
pop
push
aas
jae
stos
data16
mov
popa
mov
mov
imul
mov
negl
sbb
fwait
loope
sbb
adc
test
lds
or
sbb
cmp
into
ja
cmp
cmp
jno
je
inc
dec
repnz
fdivrs
inc
push
xchg
and
aas
mov
push
sbb
inc
mov
xchg
xchg
cmpsl
sbb
sbb
mov
dec
out
inc
fbld
lcall
mov
mov
cmc
jle
loop
or
add
dec
and
rcrb
mov
cmp
aaa
movsb
xchg
daa
rorb
sub
xchg
daa
popf
mov
xchg
jp
and
int
push
mov
mov
mov
lea
mov
jnp
rcr
or
in
or
stos
test
jno,pn
outsb
jecxz
sbb
xor
in
addr16
lods
lahf
lret
incl
pop
push
nop
int3
inc
popf
test
cs
mov
ja
pop
popf
inc
mov
lahf
jbe
jbe
inc
xchg
shr
xchg
sarb
push
mov
inc
mov
stc
mov
dec
repz
enter
jmp
and
or
xor
lcall
mov
mov
call
clc
fwait
mov
jle
ficompl
cld
add
and
push
mov
adc
ret
dec
add
or
lret
jecxz
sub
and
das
lods
lods
jo
idiv
arpl
pop
jno
mov
das
sub
fcmovb
xchg
lcall
pop
fwait
loope
adc
rorl
loope
sbb
sbb
mov
dec
xchg
mov
addl
mov
rclb
xor
subl
lea
jmp
mov
cld
mov
das
xor
ss
jmp
pop
mov
mov
xchg
add
dec
sbb
add
in
jecxz
sbb
mov
or
pop
push
pop
nop
ljmp
leave
jb
jns
cli
add
or
movsl
in
sub
xor
mov
adc
jns
jae
pop
jno
pop
adc
pop
jmp
out
lcall
jae
insl
push
cmc
mov
clc
or
ret
ret
orl
jecxz
push
mov
cmp
mov
adc
subb
shr
pop
stc
or
push
dec
push
sbb
out
or
fcom
movsl
popa
dec
xchg
fmul
scas
popf
add
push
movsb
sbb
daa
jae
dec
pop
test
pop
test
add
pusha
jge
rorl
jmp
fdivr
scas
jno
lea
add
rol
out
mov
sbb
mov
or
pop
cld
push
add
jmp
add
sub
or
cs
xchg
fnsave
into
shl
roll
jns
sub
pop
add
and
fcmovb
mov
scas
pushl
lea
jae
mov
add
ffree
xlat
leave
aam
push
push
les
push
inc
mov
imul
mov
xchg
sbb
pop
test
sub
lea
cld
hlt
push
fwait
inc
adc
lcall
stos
daa
lahf
mov
hlt
gs
cmp
xor
addr16
xchg
ror
xchg
add
push
sti
jbe
imul
mov
pop
test
sti
sahf
push
inc
pop
push
push
mov
push
jae
mov
xor
push
fsubs
mov
xchg
lahf
or
inc
adc
rclb
subl
dec
cmp
nop
and
dec
pop
js
fbstp
jg
jmp
xor
sub
dec
repnz
xchg
mov
push
test
sub
sarb
dec
bnd
pop
xlat
mov
ret
fwait
scas
lret
jecxz
mov
cld
cli
pop
out
iret
jmp
cmc
sbb
lcall
loopne
mov
test
es
xor
lock
shl
inc
mov
cmovp
lock
loop
cmp
sub
in
pop
testb
adc
cltd
fildl
shl
enter
xchg
ja
or
push
mov
les
and
xor
popf
cmp
jno
add
mov
jg
ds
repnz
jb
fnstenv
push
push
lret
sarl
xor
in
stos
cltd
lcall
and
xchg
mov
scas
repnz
fidivrl
pop
add
data16
pop
lret
aad
and
gs
aad
pop
push
imul
or
cmp
int
jmp
fcompl
dec
rcrl
sbb
and
mov
js
ror
in
test
mov
or
popf
mov
push
pop
jmp
ss
fwait
xchg
mov
popa
sbb
cltd
cmpsb
lcall
mov
xchg
sub
xor
add
add
dec
add
cmp
mov
cmc
dec
ja
rol
jp
inc
nop
mov
bound
test
sbb
pop
cmp
in
jp
cli
xlat
cwtl
xchg
adc
insl
push
aaa
sub
std
es
adc
hlt
rep
popf
push
in
mov
outsb
jecxz
in
mov
mov
inc
movsl
xchg
push
sbb
add
dec
adc
dec
in
gs
xchg
hlt
add
add
jns
mov
xor
push
pushf
add
dec
dec
xor
push
mov
outsb
int3
push
pop
mov
cmp
std
inc
cmp
mov
arpl
pop
mov
xchg
or
pop
lea
jo
and
dec
leave
dec
aad
loope
adc
xchg
sub
pop
out
ja
jecxz
push
xchg
pop
mov
pop
sarb
and
mov
cmpsl
arpl
movsb
scas
inc
sbb
xchg
xor
cmp
xchg
subl
xor
mov
push
fadd
int
sub
mov
pop
inc
add
mov
or
cmp
data16
insl
out
sbb
jb
mul
jp
repnz
ja
mov
mov
lret
push
mov
sbb
push
or
xor
pop
addr16
imul
xlat
out
outsl
sbb
cmp
add
and
lret
cli
iret
adc
lcall
fnstcw
add
nop
inc
and
test
fadds
adc
mov
mov
mov
dec
mov
aad
xlat
ja
test
mov
push
push
mov
ret
fs
out
lcall
rolb
test
enter
add
and
cmp
mov
adc
loop
or
sbb
sbb
aam
ret
sbb
push
fsts
push
mov
fstl
xorl
sub
xchg
aas
pushf
inc
cmp
pop
pop
imul
jo
fistps
push
xchg
mov
pop
repnz
mov
movsl
lods
mov
std
inc
xor
out
sahf
out
lea
out
push
fs
sbb
fdivl
mov
adc
lods
and
cmp
cltd
sbb
aaa
mull
push
les
fnstenv
xor
add
dec
repnz
xlat
push
add
das
and
mov
aaa
dec
int3
push
imul
lea
or
xchg
and
sti
neg
sub
push
adc
leave
test
mov
aad
dec
cwtl
cmpsb
cli
dec
push
jecxz
ja
pop
test
dec
insl
int3
fisttps
lret
sub
incb
sbbl
inc
xchg
and
test
and
js
and
call
and
pop
test
int
push
stos
ss
rep
lret
mov
sub
into
push
jnp
lcall
inc
stc
xchg
adc
xor
jle
adc
rol
xchg
scas
dec
pop
repz
mov
xor
xchg
ret
xlat
daa
mov
pushf
push
jge
fsubs
push
pop
ljmp
aaa
loope
or
cmpsb
addr16
loop
call
add
jg
test
dec
leave
arpl
push
shlb
fldt
and
aam
aad
lds
xor
fwait
add
pop
xor
sub
icebp
adc
imul
xor
icebp
mov
pop
je
pushf
push
dec
cmpsl
das
adc
xchg
data16
ss
xchg
into
cltd
sbb
movsb
push
adc
add
es
lcall
or
aaa
or
pop
jbe
fmul
fsin
mov
push
stos
sub
add
pusha
mov
and
jbe
stos
mov
cld
dec
add
aaa
sbb
sub
pusha
xor
inc
lods
pop
test
add
arpl
aam
mov
jbe
sbbb
test
pop
fsubrs
and
pop
inc
sbb
cmp
push
adc
mov
mov
or
and
inc
xchg
sbb
fwait
xor
imul
mov
pop
pop
mov
push
push
xchg
or
popa
cmp
hlt
jnp
sub
fiadds
sub
std
or
out
mov
xchg
xchg
inc
xor
gs
in
cmp
push
subl
or
jae
lock
repz
jbe
pop
sbb
jmp
rolb
jbe
xchg
imul
leave
mov
mov
pop
jns
cmpsb
data16
negb
mov
out
ja
mov
mov
call
popl
inc
ja
mov
xor
and
in
icebp
push
xchg
cld
rorl
lock
xchg
pop
stos
clc
adc
jge
repnz
mov
repnz
cltd
inc
aas
mov
mov
mov
xchg
cmp
mov
or
lahf
lcall
sbb
idivb
jns
rcrl
or
xchg
jge
sbb
xor
lods
adc
lock
repnz
lods
inc
stc
cmp
and
inc
icebp
xor
adc
mov
aas
jne
mov
stc
xchg
fsubp
add
mov
call
jge
pop
push
loop
out
xchg
and
sub
mov
mov
mov
pop
mov
push
xlat
iret
stos
sahf
mov
mov
mov
rclb
inc
xchg
ret
iret
push
jae
and
sbb
and
sbb
loope
adc
data16
mov
pop
or
mov
dec
xchg
out
fidivrl
stos
idivl
add
inc
push
xorl
js
mov
mov
das
cmpsb
push
fbld
add
ljmp
les
mov
out
sub
cmp
iret
or
jns
mov
ja
inc
fbstp
shll
cs
push
xor
xor
or
in
add
ds
test
jmp
sbb
imul
sub
lret
lock
add
mov
mov
repnz
test
push
jg
int
movsl
pop
xor
out
stc
and
mov
mov
jmp
shr
leave
xchg
aad
fwait
jle
fidivl
pop
stos
mov
jae
jnp
adc
dec
insl
adc
mov
pop
repz
aam
cmp
cmp
fwait
ret
sbb
cmp
aaa
cwtl
jge,pt
push
push
dec
neg
adc
mov
sti
push
sbb
mov
stos
nop
sub
fs
fldt
loopne
rcrl
adc
push
mov
add
xchg
xlat
jmp
sbb
test
call
push
push
in
mov
jb
out
mov
mov
sub
decb
icebp
lret
adc
dec
movl
loope
adc
lcall
fldt
in
stos
mov
sbb
mov
push
and
test
ffreep
or
cmp
lods
gs
dec
dec
xorl
add
dec
in
sarl
push
and
out
and
imul
sbb
add
or
push
loope
mov
xor
jge
mov
inc
int3
mov
lock
pushf
or
lock
sub
add
enter
insb
popa
mov
adc
sarb
jmp
xchg
fiaddl
jbe
lret
cbtw
jl
icebp
stos
jecxz
daa
insl
jae
sub
and
sub
scas
int
pusha
jge
or
icebp
pop
das
dec
jb
jg
es
shll
popa
mov
push
mov
outsb
mov
jp
popf
movsb
sub
ljmp
mov
add
loop
mov
jno
inc
push
add
mov
jg
dec
or
stc
fcomps
pop
adc
out
sub
std
subb
aam
adc
push
push
cmp
and
fstl
push
scas
push
cli
and
xor
movsb
cmpb
mov
xor
push
inc
xchg
push
pop
dec
insl
pusha
orb
cmp
pop
add
adc
push
push
fisubl
push
cli
pop
lds
lea
nop
push
es
xchg
std
das
imul
and
mov
fs
fisttps
push
dec
aad
imul
or
test
push
fisubrs
into
jbe
jbe
mov
inc
sub
loop
jmp
cmpb
sub
mov
in
rcr
inc
fsubs
fcmovbe
push
add
or
test
mov
inc
lods
loope
iret
leave
ss
cmp
in
pusha
les
pop
enter
pop
je
push
sbb
dec
and
push
pushf
mov
mov
jl
jb
cmc
push
pop
gs
outsl
insb
push
sub
cmpl
push
test
lret
and
stos
int3
hlt
aam
mov
pushf
scas
decl
xchg
ret
push
pushl
xlat
dec
call
adc
xchg
ret
jb
sub
sub
cmpsb
iret
sub
mov
jecxz
sahf
repz
mov
addr16
pop
sub
push
mov
icebp
mov
or
mov
stos
jle
add
ficoml
add
jne
jmp
and
push
iret
cltd
loop
aad
aam
xchg
push
dec
test
pop
je
sysexit
adc
push
fisubrs
jae
sub
sti
pushf
xchg
push
dec
out
sub
and
adc
fwait
mov
mov
push
enter
movsl
mov
lods
les
stos
push
jae
add
in
inc
fidivs
out
sub
push
inc
mov
and
js
mov
pop
push
dec
outsl
xor
stos
add
dec
jno
mov
fwait
loopne
dec
push
jno
mov
dec
inc
dec
sar
out
or
mov
js
mov
xor
dec
mov
adc
jg
jmp
cmpsb
dec
or
and
mov
cmp
mov
cmp
repnz
xor
nop
pop
pop
jno
in
mov
pop
iret
jb
xor
sub
lahf
mov
fwait
push
inc
gs
or
dec
mov
sbb
xchg
sbb
ja
das
dec
sahf
xchg
cmpsb
jne
cmpsb
pop
dec
test
xorb
sbb
fcomp
std
fwait
push
decl
stc
clc
xor
inc
ja
out
test
inc
sbb
xor
ja
mov
jo
nop
cmc
ss
mov
push
mov
jl
xlat
xor
psrlw
jg
les
xchg
imul
je
mov
cmp
outsl
sub
push
loope
pushl
cltd
mov
sbb
xrelease
test
jmp
sbbl
push
dec
xchg
mov
push
inc
negb
in
or
stos
stos
sub
and
js
and
outsb
bound
and
inc
cmp
movsl
aad
xchg
sarb
ja
add
popa
sbb
inc
dec
out
sub
rclb
pop
iret
push
jnp
arpl
out
ljmp
imul
in
rorl
cmpsb
in
aas
mov
js
mov
xchg
cmc
and
test
out
ss
cmpb
xor
lods
aas
xchg
xchg
jno
inc
mov
adc
jo
orb
push
loope
xchg
ret
lods
add
adc
mov
insb
pop
lock
mov
fucomi
jno
sbb
cli
cltd
mov
inc
inc
mov
divl
scas
jne
mov
lea
les
push
or
inc
or
aaa
fs
push
imul
popa
fistl
movsb
into
mov
bound
cmp
hlt
roll
mov
add
mov
test
pop
popa
or
ror
mov
mov
lret
push
pop
filds
gs
mov
ret
xchg
or
pop
mov
ss
jg
hlt
negb
mov
lds
inc
in
incl
xchg
call
aam
jno
and
push
sarb
cmp
inc
jnp
mov
mov
mov
mov
cli
ljmp
out
fadd
pushf
and
pop
add
xor
xor
jns
mov
mov
scas
push
cld
sbb
adc
pop
outsl
sub
xchg
lods
add
scas
clc
pop
sbb
pop
ss
fdivp
jns
sbb
inc
cmc
mov
sahf
je
dec
jge
push
xchg
mov
out
cmpsb
push
inc
pop
pop
push
adc
loopne
mov
and
inc
jp
std
mov
aaa
mov
shll
jno
push
scas
sbb
push
add
jbe
cld
mov
fcmovu
lds
jecxz
push
ja
pop
scas
pop
shlb
out
push
adcl
or
int
repz
jecxz
sahf
test
mov
jle
mov
and
repz
push
cmp
addl
out
test
adc
pop
outsb
movsl
sub
sub
jmp
shll
popf
mov
je
sbb
lret
mov
mov
bound
pop
mov
out
test
mov
ja
je
jp
adc
jae
nop
jo
imul
lcall
cmp
push
mov
cmpb
je
fst
dec
jl
test
dec
into
aad
into
das
scas
inc
fsubs
sub
out
jge
aaa
fdivs
les
mov
mov
dec
aaa
mov
sub
lret
movsl
dec
adc
adc
pop
dec
mov
scas
mov
or
cli
mov
dec
icebp
jle
call
mov
lret
in
rcrb
mov
dec
pop
shll
es
and
andl
in
int3
hlt
call
sbb
add
xchg
insb
mov
adcb
outsb
cli
cmp
inc
cltd
outsl
scas
cmpb
sahf
push
jp
mov
push
cmp
stos
fistl
or
sbb
and
xchg
add
test
loopne
dec
test
and
in
in
push
mov
mov
ljmp
dec
repz
and
in
xorl
cmp
xchg
inc
and
cmpsb
push
mov
xchg
xchg
adc
mov
and
decb
dec
ljmp
in
sbb
sub
add
sub
out
fimuls
out
out
mov
jnp
cmp
jo
mov
out
ja
stc
sahf
fcoms
push
xor
adc
div
fidivl
xchg
les
pusha
mov
mov
sbb
fsubs
fmulp
inc
cmc
jo
adc
push
into
inc
mov
scas
fmul
and
mov
inc
cli
inc
dec
inc
cmp
adc
leave
and
sbb
int
inc
out
push
fisttps
mov
xchg
pop
adc
add
and
jmp
add
daa
orl
in
or
mov
nop
mov
sbb
dec
dec
imul
retw
or
cmp
xor
outsl
adc
cld
arpl
xchg
pop
fs
test
xor
ret
fsubs
test
insl
lea
scas
xchg
ja
inc
cmp
inc
pusha
jae
movsl
mov
mov
mov
mov
adc
out
addr16
mov
mov
push
cld
repnz
push
cmpsb
jl
mov
mov
ja
int3
mov
mov
test
cmovb
leave
gs
pop
sbb
movsl
xchg
lcall
sbb
cs
movsb
ja
lret
sbb
add
or
into
push
inc
out
and
jle
add
shrb
int3
xchg
push
aam
push
mov
mov
js
addr16
xor
enter
imul
and
push
cs
pop
push
dec
outsl
mov
push
test
mov
cwtl
loopne
insb
imul
cmp
test
ficoms
inc
rcll
test
dec
xor
sub
sar
ret
fnstcw
dec
and
out
dec
or
popa
cmc
jae
sbb
cld
fsubs
dec
push
stc
jle
add
xchg
push
data16
or
adc
mov
inc
mov
mov
andb
std
mov
scas
sbb
jb
out
repz
sub
ss
daa
ja
xchg
shlb
jbe
lahf
icebp
xor
ds
and
in
mov
mov
adc
ret
add
xchg
hlt
jg
fdivrp
pop
mov
xlat
push
mov
movb
jl
popa
mov
and
jmp
xor
jae
stos
mov
enter
adc
mov
loop
arpl
jne
lret
xor
or
cltd
fstl
add
mov
mov
subl
int
mov
ss
mov
cmp
addr16
mov
mov
es
push
popf
jo
movsl
mov
loope
cli
out
out
push
adc
pushf
inc
pushf
popf
int
fidivrl
ficoms
and
ja
xlat
dec
cmc
xchg
shrl
mov
cmpsb
lcall
jno
jb
mov
mov
and
xchg
sub
into
cld
mov
mov
clc
and
int
push
jge
sbb
jnp
aad
ror
xchg
inc
mov
daa
mov
mov
xchg
inc
les
hlt
out
push
ja
sarb
ret
daa
xor
loope
dec
cmp
pop
mov
scas
stos
cmp
loop
push
shll
mov
inc
ret
mov
loop
xchg
popa
sub
push
jbe
enter
cmp
xchg
jmp
frstor
mov
push
frndint
insl
xchg
cmp
dec
mov
mov
mov
mov
sbb
xor
neg
pop
add
int
add
inc
jge
cmpsl
or
test
cmp
add
sbb
ljmp
xchg
xchg
lcall
testb
dec
data16
mov
aas
repz
or
pushf
out
fwait
pop
leave
loop
inc
je
test
sub
sub
push
hlt
aas
roll
loopne
test
mov
ljmp
loopnew
aas
sub
stc
sub
rclb
jmp
mov
sub
pop
popa
mov
loop
adcb
mov
pop
leave
cmpl
out
cmpsb
shll
cld
stos
cmpsl
mov
fdivrs
cmp
sub
sub
mov
out
out
or
xlat
mov
inc
jp
cmc
int
lea
subl
out
jge
sub
subl
mov
and
sub
mov
cmp
mov
and
sti
jo,pn
decb
outsb
mov
lds
sub
and
aad
xor
push
cmp
cmc
sub
xlat
or
int
jae
sbb
xchg
mov
imul
cld
shl
mov
adc
outsl
xchg
pop
pushf
cld
dec
fsubp
in
scas
fwait
repnz
push
or
add
pusha
sub
mov
mov
pushf
jmp
sub
test
shrb
sbb
push
nop
cli
or
dec
lcall
in
jle
aas
or
sbb
sbb
or
outsb
jle
push
in
dec
jg,pt
jl
push
or
into
mov
test
bound
mov
subb
add
scas
daa
lcall
lret
mov
das
sbb
xchg
mov
sub
adc
xor
adc
loop
js
scas
insb
cmp
enter
fs
xor
in
outsl
loope
test
jne
ss
in
mov
out
adc
sbb
cmp
cmpsb
shl
and
clc
sarl
cmp
mov
ror
test
data16
sub
mov
sbb
mov
mov
imul
xor
out
xor
adc
insb
sarl
jecxz
mov
add
ja
fistps
test
inc
call
sub
inc
lock
xchg
cmc
dec
pop
pop
mov
fsub
test
out
sbb
lret
mov
jle
cmpsl
insb
cmp
adcb
cmp
out
or
into
or
mov
stc
push
lahf
bound
mov
out
mov
aaa
test
iret
aad
sub
icebp
lret
inc
adc
int3
add
mov
bound
in
in
in
je
push
out
push
imul
aas
pop
mov
mov
jno
insb
pop
fcmovnu
fcomps
and
aam
dec
int
mov
js
mull
mov
fsub
hlt
je
or
sub
rcll
dec
cs
cmp
imul
or
or
test
scas
hlt
push
daa
shll
lods
mov
and
sbb
daa
outsl
aam
push
fisttpl
xchg
jecxz
mov
into
add
adc
stc
jbe
out
fdivs
bound
lods
xorl
dec
pop
sbb
xor
cmp
vucomisd
mov
je
leave
lea
cmp
retw
adc
xor
sub
enter
add
adc
adc
ljmp
hlt
pop
xlat
cli
push
in
mov
daa
pop
movsb
sub
adc
bound
mov
in
aam
imul
push
inc
aas
lods
test
sarb
cmp
out
out
lods
jne
pop
test
cmpl
cmpsb
and
das
sarl
loopne
enter
daa
xchg
mov
mov
push
and
fwait
adc
lahf
push
pop
ss
jmp
pop
aam
fs
push
mov
jg
and
lret
call
sbb
cmp
stos
and
imul
xchg
lods
cmp
stc
lds
xchg
jo
jns
xor
fldenv
cltd
mov
ljmp
cmp
and
aam
ret
cmc
jne
inc
and
jge
add
stc
mov
adc
fiadds
stos
jns
sbb
ret
xor
jo
cmp
inc
sarb
push
jmp
dec
lcall
div
jge
lcall
dec
test
pusha
loopne
xchg
lahf
test
out
rcll
dec
out
dec
push
aaa
cmpsl
xchg
aad
pop
loopne
insl
cli
outsl
or
dec
fdivr
mull
sbbb
jge
mov
mov
xchg
lods
cmc
or
dec
xchg
mov
adc
dec
push
mov
mov
movsl
sub
jp
test
pop
sub
lahf
xchg
and
scas
sub
es
pop
cmp
stc
pop
jo
jl
mov
iret
xlat
aas
dec
movsb
pop
fsubs
dec
notb
xchg
mov
push
int
test
mov
mov
int
das
imul
test
mov
inc
daa
push
outsw
cltd
mov
inc
mov
and
cmp
jmp
and
jne
outsb
push
pop
nop
iret
pop
aaa
cmp
add
out
adc
loop
xchg
jae
xchg
movsb
pop
dec
jle
add
gs
inc
jns
test
cmp
clc
out
subb
fistpll
loop
out
pop
add
jb
std
jno
stc
jmp
or
jmp
cmp
mov
xchg
dec
fstpt
mov
sub
lret
in
outsb
ret
std
ffreep
outsb
cmp
imul
cli
std
and
xchg
sbb
adc
push
cld
mov
rorb
mov
adc
sbb
mov
mov
aam
mov
dec
xor
dec
insb
cwtl
imul
or
aas
aaa
xchg
cld
out
test
sti
mov
lods
out
loop
clc
add
add
out
sbbl
call
xchg
es
pop
out
inc
and
sti
xchg
add
mov
insb
sar
dec
popf
xlat
ret
and
or
fcomps
add
sbb
cmpsl
mov
sub
js
xlat
test
and
mov
in
aad
xchg
lock
add
xor
outsl
push
xchg
xchg
pushf
fs
jecxz
mov
enter
iret
xor
mov
out
ficompl
push
xchg
shr
or
sub
pop
fbstp
mov
sub
out
cmp
jecxz
in
adc
adc
cmp
adc
add
arpl
outsl
leave
mov
mov
loop
adc
ja
pop
lahf
cmpl
aad
fadds
test
enter
pop
or
scas
xchg
hlt
cmpsl
mov
add
and
mov
push
add
inc
dec
or
cs
cmpsb
mov
int3
js
mov
aam
add
adc
sbb
jns
inc
inc
das
out
push
sarb
stos
outsl
pcmpgtb
stos
xchg
jae
pushf
jge
sbb
and
inc
mov
pop
outsb
push
adc
mov
nop
pushf
cmp
mov
push
pop
push
lods
loope
jmp
shll
test
mov
fwait
hlt
push
into
imul
js
not
xor
xor
add
std
push
imull
fimuls
shll
or
cmp
push
cltd
jp
shll
rorb
push
lahf
mov
nop
adc
and
sysexit
or
mov
shrl
cmpsl
or
sbb
xchg
lock
push
xchg
and
mov
or
add
les
sub
mov
fistl
repnz
mov
rcpps
lret
hlt
rcrb
push
in
dec
lcall
cmp
scas
or
sub
xchg
dec
adc
mov
dec
dec
inc
mov
das
push
rclb
sub
mov
je
pop
loop
sub
cs
fildl
cmp
or
ror
xchg
xchg
xor
ss
xor
add
sahf
popa
outsb
ret
inc
push
scas
in
out
push
jb
mov
out
fcomps
out
cmpsl
xchg
daa
jmp
add
mulb
pop
fucompp
addr16
data16
js
xchg
pop
addr16
fdivrl
mov
push
jg
add
dec
cmp
pop
adc
adc
imul
sti
movsl
xchg
push
push
and
jns
loope
mov
aaa
movsb
stos
fidivl
mov
mov
gs
out
pop
jmp
movsb
adc
imul
xor
sarl
rcl
or
xchg
bound
arpl
rcrb
push
xchg
xchg
sbb
adc
lahf
inc
xor
xor
rcrl
lea
inc
adc
ret
lret
or
mov
cmc
add
hlt
dec
clc
sub
xchg
push
testl
sbb
push
stos
cltd
push
jmp
xchg
out
cmp
out
ss
add
cltd
arpl
cmp
rcrl
inc
rorb
pop
push
inc
mov
jno
push
cmp
pushf
mov
cmp
stos
add
iret
fistpl
cmp
inc
pop
loope
add
dec
cmp
es
mov
pop
loop
xchg
sbb
loopne
insl
add
and
testb
push
out
mov
aas
adc
test
dec
sub
sbb
shlb
add
pop
fcmovb
nop
cmc
push
mov
or
scas
push
insl
data16
int3
push
shlb
scas
mov
inc
ljmp
rcll
pop
imul
sbb
aaa
lods
adc
mov
mov
sbb
jmp
sub
inc
pop
push
loop
test
movsb
jno
outsb
or
inc
cltd
fldt
loope
es
cwtl
push
push
popl
call
mov
add
pop
cmp
or
scas
fsubrl
flds
test
ljmp
jmp
push
movsl
mov
cmc
cmpsl
popa
and
pop
in
or
xchg
xor
xor
mov
push
mov
sbb
js
lret
incl
dec
pop
inc
or
clc
insl
sbb
dec
mov
bound
mov
mov
pop
pop
xchg
xchg
ljmp
sub
fsubs
pop
push
or
clc
pop
pop
icebp
dec
in
and
push
cs
adcl
and
dec
or
xchg
jl
or
dec
fdivl
dec
bound
mov
sub
jle
pusha
leave
jp
or
xor
lahf
enter
xchg
mov
mov
lcall
sarl
or
jle
fidivrl
push
add
outsb
or
dec
pop
adc
lods
imulb
mov
inc
dec
aad
pop
and
incl
arpl
negl
shrl
shl
inc
lcall
std
movsl
push
mov
dec
add
add
dec
sub
pop
in
lahf
xchg
push
lcall
out
stc
xor
lret
inc
lret
cmp
or
mov
test
inc
int3
mov
lcall
mov
mov
movsb
fsubs
sti
sti
mov
and
mov
mov
lock
stos
dec
jecxz
inc
jo
aaa
in
ret
pop
mov
pop
jmp
mov
lret
out
dec
add
push
xor
loopne
mov
mov
pop
data16
jns
mov
xor
or
and
jge
push
dec
dec
popf
mov
sbb
out
test
sub
cmp
insb
inc
lds
cmpsb
insl
push
push
lods
sub
ja
inc
and
xor
or
or
adc
mov
cmp
lods
decl
mov
dec
jae
cs
add
stos
mov
mov
or
or
addl
jbe
jge
divb
int
nop
sti
jl
int3
fs
mov
sub
int3
mov
lret
jp
add
aad
add
jne
pushf
mov
sub
push
pusha
int3
inc
push
fs
xorb
jno
ret
pop
insl
inc
sub
sub
sub
add
fildl
sti
test
scas
xor
push
adcb
push
pop
add
mov
daa
mov
stos
loop
ljmp
repz
xchg
and
mov
enter
popa
push
adc
loopne
jge
mov
aas
xchg
cmp
loop
dec
adc
fsubp
stos
inc
xlat
push
push
out
adc
movsl
mov
sub
dec
mov
sarl
sbb
sbb
mov
dec
mov
and
adc
mov
push
xchg
pusha
imul
sub
je
sbb
pop
mov
test
ja
roll
lcall
popa
stc
sub
mov
mov
sub
xor
mov
cmp
pop
sbbl
push
add
jns
cmpb
jbe
lods
and
fidivrs
sbb
clc
sar
imul
cmp
adc
mov
push
ljmp
std
inc
dec
loope
call
or
push
lea
push
nop
andl
add
outsb
adc
pop
lret
scas
and
dec
sarb
or
roll
sub
adc
jp
int
sahf
in
pop
inc
icebp
aad
test
push
ret
sbb
pop
xor
mov
mov
lock
insb
sbb
inc
dec
lea
fs
test
outsb
pop
enter
scas
sub
pop
movsb
cmpl
cmc
lods
sarl
decl
cmp
outsb
ret
stos
jae
iret
push
sub
xor
jns
pop
sbbl
popf
mov
int3
adc
shlb
sti
jno
xchg
ljmp
push
inc
aam
push
inc
test
call
dec
arpl
popf
jecxz
clc
pop
gs
divl
cmp
push
fnstcw
jnp
sub
xor
sbb
cli
test
jl
xchg
mov
popa
mov
or
cmp
in
repz
jns
mov
lret
add
cmp
adc
outsl
jnp
into
and
nop
lahf
pop
xor
pop
loop
push
lea
sarl
jnp
mov
jg
dec
rcll
in
sub
lods
and
mov
lret
pop
out
push
lret
mov
pop
test
add
aas
dec
mov
inc
mov
cltd
dec
shlb
in
push
fstpt
pushf
out
dec
push
jnp
fldt
in
sub
not
clc
testl
orb
sarb
jbe
cli
mov
xchg
lods
movsl
sub
push
or
mov
stc
cmp
jmp
dec
cmp
dec
aaa
xchg
je
mov
dec
xchg
cmp
pop
mov
add
std
scas
or
and
pushf
js
lock
js
lods
andl
sbb
cmp
sbb
call
push
test
and
mov
mov
and
aad
stos
loope
pop
addb
ret
pop
fimull
jno
xor
xor
pop
pop
daa
mov
addb
dec
push
jns
fisubrl
loopne
insl
push
popa
push
outsb
cmp
xor
cs
lcall
nop
push
xor
xorb
ds
or
jb
pop
inc
popa
mov
adc
jecxz
nop
out
push
xor
daa
into
insl
push
es
sbb
mov
mov
arpl
cmp
jecxz
push
add
rorl
mov
jp
xchg
call
aas
mov
jmp
mov
ret
pop
into
xor
sbb
cld
mov
cwtl
pop
call
outsb
addr16
push
stos
lret
stos
aaa
fcomps
lea
adc
mov
fsubp
test
add
and
push
mov
sbb
lahf
jl
sub
bswap
into
mov
sbb
loop
rcrl
push
pop
iret
jg
inc
jne
out
dec
fcomps
imul
cmp
dec
xlat
mov
sub
repz
xor
shll
imul
jecxz
insb
in
or
ror
inc
mov
leave
lods
push
test
out
cwtl
rcrl
cmp
aam
inc
inc
out
insl
cli
jecxz
orl
or
xorl
sbb
xor
mov
clc
mov
push
movsl
mov
push
insb
push
orb
pop
addl
jp
orl
push
adc
add
dec
push
inc
test
addr16
in
jbe
sahf
pop
cmp
jge
sub
sbb
insl
jne
out
in
in
jbe
arpl
rcll
das
clc
xchg
sub
dec
or
push
xlat
and
orb
gs
aaa
cmp
pop
mov
scas
xlat
lahf
lock
mov
inc
mov
xchg
jecxz
jge
test
repz
xchg
pop
xorl
xchg
add
jbe
cli
int3
add
outsb
jb
xchg
fwait
cld
imul
out
into
in
pop
int
xchg
and
outsb
idivl
pop
mov
aas
loopne
ret
in
adc
push
inc
les
jmp
repz
cmp
sub
mov
cmp
lret
fwait
dec
mov
imul
jle
or
enter
les
int3
prefetch
sbb
xchg
inc
insb
clc
pushf
imul
test
mov
push
dec
xlat
sub
cmp
adc
push
inc
inc
lds
sub
idivl
adc
adc
mov
cmp
sbb
call
ret
sbb
call
pusha
aad
rcl
and
rcll
fndisi(8087
mov
and
mov
into
pushf
add
fs
push
adc
outsb
cld
aam
inc
dec
mov
mov
lods
rorb
enter
clc
enter
pusha
or
in
pop
xchg
or
dec
push
in
cmpb
mov
or
and
decb
mov
insb
fsubrl
imul
add
and
adc
or
sub
decb
inc
outsl
jbe
mov
negb
mov
enter
fsubrl
push
xchg
shr
jo
sub
mov
sbb
or
pop
cmp
and
int
push
out
push
xor
nop
adc
out
inc
dec
cmp
sbb
push
scas
clc
jb
and
cmpl
movsb
fidivs
mov
cmp
xchg
xor
shrl
out
pop
in
jae
and
aas
xchg
mov
test
dec
adc
cld
jp
lock
out
push
jge
hlt
sbb
cmp
xchg
leave
xchg
push
mov
mov
inc
out
dec
enter
iret
stos
andb
fildll
insl
xchg
xor
je
inc
sub
das
aam
xchg
inc
popf
add
and
out
sahf
cmp
mov
sub
js
mov
mov
jg
mov
dec
adc
iret
inc
mov
mov
adc
leave
fwait
push
jge
mov
jo
lds
mov
dec
pop
push
out
add
arpl
jp
ljmp
mov
imull
pop
jge
xchg
adc
cmp
jno
cmpsl
or
xchg
mov
xchg
xor
insb
std
xchg
rcll
cli
not
int
add
sahf
enter
cltd
fcoml
scas
inc
cwtl
inc
jl
lods
sbb
clc
aam
lcall
sub
push
rep
shlb
outsl
das
movsl
pop
xlat
lcall
lds
out
jb
sahf
inc
inc
rcrb
iret
mov
push
imul
mov
fwait
adc
and
lods
inc
push
mov
cmp
int
pushl
xor
fisubrl
test
xchg
add
adc
mov
push
mov
jmp
mov
sbb
mov
lahf
pusha
cmp
lcall
dec
pop
test
push
dec
dec
sbb
stc
lret
int
xorb
or
daa
mov
sub
jl
call
jae
outsb
dec
and
test
fs
sbb
shr
inc
mov
imul
dec
cld
mov
sub
pop
xchg
test
push
jmp
adc
ds
mov
dec
or
inc
loope
lcall
push
aam
out
pop
repz
dec
jmp
jecxz
or
cmp
mov
nop
cmovnp
pop
ret
cld
mov
xor
lahf
sbb
scas
aad
and
sub
add
cmc
sbb
and
adcb
aaa
push
dec
push
mov
push
sarl
gs
xchg
sub
sub
dec
sahf
jecxz
xor
stos
mov
jg
jae
jbe
inc
push
enter
sbbb
punpckhbw
ficompl
mov
pop
mov
sbb
mov
jbe
clc
test
cmp
mov
add
faddl
loop
ret
mov
mov
xor
lret
inc
jne
es
jge
dec
je
or
rorl
mov
xor
sbb
scas
in
aaa
in
push
insb
mov
imul
es
push
jl
lcall
shlb
ret
faddp
push
outsl
js
andb
lock
js
or
imul
addr16
int
shlb
inc
js
cmp
push
in
shll
aaa
push
fs
mov
xchg
xor
lret
push
cmp
inc
mov
pop
cli
mov
test
or
xor
jmp
jne
push
adc
stc
lds
out
sbb
push
inc
cmp
popf
lcall
inc
push
xchg
push
rorb
jl
dec
pop
lcall
lret
xchg
push
sbb
loope
lock
test
mov
xor
dec
cltd
pusha
leave
std
inc
hlt
fldt
fistps
clc
shl
test
int3
sub
mov
push
lret
push
push
sahf
cmp
call
xchg
xchg
and
mov
or
or
xchg
aaa
adc
imul
ret
rorb
pushf
xchg
xor
pop
in
clc
cmpsl
dec
out
je
cmpb
inc
pushf
stc
or
sub
mov
dec
ja
iret
cmp
inc
cmp
sub
arpl
dec
shrb
rcrb
or
mov
xor
mov
jp
lahf
and
fstl
lods
dec
ret
pusha
movsl
call
push
fstpl
call
pop
add
and
mov
test
bound
sub
test
lock
pop
lret
mov
dec
dec
out
cmp
shrl
sbb
xchg
cld
testb
je
ss
into
imul
push
popf
inc
adc
ja
or
mov
add
dec
sub
das
mov
lcall
mov
pop
pop
jg
sub
rcll
push
sbb
dec
inc
popf
lock
cmpsb
adc
cmp
ljmp
daa
xor
or
dec
je
mov
pop
bound
loope
cs
sbb
pop
push
push
sbb
xchg
cmp
sbb
push
movsl
je
cli
rorb
sti
je
inc
add
pop
lret
les
add
inc
sbb
outsl
dec
xor
adc
adc
or
insb
sbb
std
jp
sub
mov
sbb
fisttpl
sub
add
jnp
aas
jmp
test
sub
cmp
xlat
adc
sbb
scas
call
pop
decl
in
sti
mov
and
ljmp
mov
test
lods
cmp
inc
pop
dec
lahf
and
cmp
scas
xchg
sub
aam
in
adc
mov
scas
aam
jmp
sbbb
mov
lret
pop
mov
lcall
test
fs
adc
mov
pushl
scas
adc
xchg
cmpsb
jp,pt
xchg
lods
jmp
push
sub
data16
call
cmc
ror
scas
stos
inc
out
mov
push
stos
fmuls
aaa
sub
cmc
push
int
faddp
loop
push
pop
adc
lcall
outsl
in
and
sbb
mov
int
jbe
lcall
push
xchg
jmp
dec
test
mov
or
shrb
scas
hlt
and
jo
inc
fcom
or
popf
fsts
add
hlt
sub
hlt
sub
out
lods
jp
jbe
out
aas
xchg
inc
mov
lcall
jns
cs
push
jmp
dec
cmp
and
inc
lcall
xor
icebp
sbb
test
and
rcrb
sbb
cmp
out
cwtl
adc
das
orl
adc
aaa
imul
inc
aad
and
xchg
testl
lods
and
or
ret
push
xchg
mov
es
fcompl
and
stos
paddd
add
vmulpd
cli
add
mov
push
in
jbe
je
mov
lret
dec
outsl
dec
lds
lret
insl
xchg
stos
and
push
ss
fidivl
adc
xor
add
push
and
and
pop
ss
add
jge
jne
enter
movsl
jp
lret
stos
shrl
dec
mov
and
cmpsl
mov
mov
out
cwtl
ss
scas
inc
mov
sti
adc
ljmp
jnp
mov
mov
xchg
xchg
out
push
les
mov
cmp
mov
push
mov
xchg
out
cmpsb
fidivrl
popa
loopne
and
mov
in
xchg
ror
lods
cld
scas
fbstp
mov
jmp
hlt
dec
xor
adc
adc
std
cmpsb
mov
aad
sbb
mov
xchg
add
insl
and
add
std
mov
aas
out
sbbl
sbb
add
inc
jl
ja
add
aam
repnz
pop
icebp
in
xchg
leave
fcmovbe
mov
imul
mov
into
dec
mov
xchg
insb
imul
or
imul
and
leave
std
lea
xchg
xor
xor
roll
test
sub
push
mov
add
bound
push
hlt
mov
mov
mov
and
xchg
xchg
cltd
jmp
insb
sahf
cld
int3
push
pusha
xchg
sub
jle
jnp
jo
lds
mov
push
call
mov
dec
ja
rclb
lds
insl
imull
test
xor
xlat
rclb
push
mov
dec
roll
loope
mov
mov
cwtl
fwait
dec
js
les
sbb
pushf
sub
or
xchg
mov
dec
or
or
mov
es
inc
in
add
sbbb
jmp
das
hlt
test
ss
pop
pop
jo
divl
sub
cmc
sub
mov
dec
andb
inc
mov
cltd
pop
mov
and
int3
push
int
stc
in
ds
stos
popa
dec
jmp
cli
pop
xor
out
sbb
fisubl
jb
add
orl
mov
fsubl
decl
pop
repnz
in
arpl
push
insb
es
push
push
and
shlb
jo
xchg
mov
aam
enter
or
adc
and
nop
adc
xor
loopne
inc
pop
jo
or
aaa
add
xchg
test
int3
out
lods
rol
pushf
cs
aaa
cmpb
bound
and
shr
lods
cmp
lods
stos
and
add
xchg
pop
push
xlat
lods
sub
lods
xor
scas
pop
out
dec
push
push
adc
insb
jnp
add
inc
adc
dec
pop
and
inc
push
mov
jb
movsb
push
sub
inc
dec
pop
adc
ficoms
xchg
sub
push
mov
cmpsb
loopne
and
sub
test
sub
cltd
xchg
je
xor
popf
add
push
fdivr
push
mov
add
arpl
dec
mov
dec
mov
repnz
cmp
inc
fdivr
dec
loope
mov
sbb
loopne
jno
push
adc
aaa
or
lds
shlb
iret
and
in
dec
cs
adc
xchg
pop
sahf
mov
cmp
sti
shll
and
imul
lea
push
sarl
ljmp
testl
or
loop
fcomps
inc
pop
in
out
pusha
jl
test
pop
jb
fildl
and
adc
pop
cmc
xor
ja
jb
ja
sub
adc
lcall
mov
add
mul
and
mov
fs
mov
jg
cmpb
fsubrs
scas
mov
mov
ss
inc
jbe
add
movsb
addb
lods
in
adc
leave
mov
mov
push
loop
icebp
mov
mov
cld
push
lods
icebp
jns
clc
add
popl
lcall
pop
mov
mov
scas
mov
jnp
subb
out
sahf
and
inc
nop
push
push
xor
in
sub
fisubrs
insb
pop
call
xchg
sbb
adc
mov
mov
inc
push
push
mov
ud0
dec
test
pushf
xchg
adc
cld
imul
mov
xor
mov
stos
sbb
leave
test
dec
mov
nop
je
ffreep
jg
in
mov
inc
fsub
ss
pusha
fimull
mov
in
jl
scas
mov
dec
ficoms
mov
fcompl
xor
and
dec
push
cs
fildl
clc
hlt
xchg
pop
jl
mov
lcall
sarl
out
cmp
fmuls
mov
push
call
leave
jo
push
jge
and
jmp
xor
push
lahf
cmc
sub
addb
xor
lods
sti
dec
and
xor
sub
imul
xchg
fistl
loope
pop
pop
cmpb
rcrl
aam
mov
fstpt
mov
mov
cmp
dec
je
dec
sbb
lods
lock
mov
mov
out
std
lods
fmuls
adc
test
out
sub
pop
add
ljmp
gs
call
xchg
rclb
jl
adc
sub
in
or
and
pop
push
xor
adc
std
jmp
sub
add
stos
rcl
out
outsb
mov
mov
xchg
gs
sbb
std
push
inc
test
mov
es
fmuls
lcall
sub
testl
push
xor
add
mov
int
jns
insb
movsb
mov
iret
loopne
mov
sub
divb
xchg
sub
xlat
pop
pop
into
mov
inc
cmc
push
repz
enter
cmp
rorl
shlb
push
push
inc
ret
pop
into
sub
or
jmp
push
pop
out
clc
lods
pop
clc
ss
insb
pop
add
cmpsb
dec
jno
cmpsl
xor
ficompl
adc
xchg
mov
pop
mov
cltd
add
loopne
fs
lret
lret
les
adc
or
or
in
xchg
int3
adc
aaa
sti
fisubl
out
sub
jle
and
jl
mov
es
cmpsb
xchg
ja
or
out
pop
dec
pop
insb
imul
mov
popa
and
outsb
loopne
outsl
ret
mov
jmp
rcrl
inc
inc
aad
mov
pop
sbb
dec
dec
mov
iret
ja
sbb
inc
jne
jle
mov
dec
addb
push
imul
inc
or
cmp
pop
push
imul
enter
jb
jmp
cmp
xchg
es
test
mov
popa
cmp
and
rcll
aaa
add
xchg
push
mov
aas
in
cmpsb
push
idivl
mov
mov
cwtl
push
out
popa
dec
jl
mov
addl
fistps
push
arpl
loopne
insl
mov
into
adc
jge
mov
mov
mov
mov
cmp
pop
popa
int3
pop
fistps
push
xor
cltd
shlb
jne
ja
aad
jne
test
pop
mov
call
jne
lcall
mov
test
daa
pop
sbb
popa
inc
xchg
or
xchg
subb
push
addr16
mov
adc
cmpsl
movsl
shll
sbb
ss
lret
jnp
shlb
jnp
adc
dec
mov
int
stos
pop
test
nop
inc
fs
cmpsb
push
pop
in
jno
or
jnp
pop
push
gs
mov
rcrb
das
jno
out
sub
pop
xor
enter
sbb
sub
imul
sarb
pop
jecxz
adc
and
mov
mov
les
out
movsl
cmpsl
pushf
push
lods
inc
sti
xchg
aas
add
xchg
fwait
repz
sub
mov
add
inc
outsb
bsr
or
and
aad
push
loopne,pn
and
outsl
stos
pop
pop
push
adc
add
mov
mov
mov
icebp
mov
jge
test
xchg
std
out
cmp
out
shll
push
imul
sub
sti
mov
sbb
mov
cs
pop
out
js
sahf
fimuls
iret
and
mov
xlat
fdiv
popa
sbbb
popa
add
nop
filds
mov
test
mov
or
cmc
adc
call
aad
in
in
mov
mov
out
jno
fisttpll
inc
lock
cmp
mov
or
fsub
mov
rcrb
shrl
pushf
pop
sub
mov
push
faddp
or
int3
dec
movsl
pop
sub
and
iret
sub
cmp
into
in
mov
jo
call
mov
pop
ror
leave
jecxz
sbb
insl
sbb
push
mov
cmc
adc
cmp
cmp
add
fisttps
mov
loope
adc
out
mov
cs
aas
lret
nop
dec
ss
test
cmp
daa
push
ljmp
pop
inc
addr16
or
rorl
in
adc
add
cs
inc
movsl
std
shrl
sarl
sub
sbb
jno
push
pop
inc
int3
sbb
jmp
repnz
ss
jns
in
jno
lea
popa
fidivrs
loop
mov
roll
add
idivl
rcll
jecxz,pt
sub
int3
adc
iret
cmpb
push
addr16
jo
bound
and
pop
push
jb
mov
mov
les
mov
xchg
std
mov
inc
int3
push
out
dec
xor
inc
ret
popf
xchg
or
lea
lret
mov
lret
mov
pushw
or
rcrl
aad
enter
bound
movl
repnz
mov
mov
xor
cwtl
scas
jb
fadd
out
sbb
inc
addr16
mov
sub
cmp
mov
sbb
dec
insb
adc
test
jl
cmp
fildl
and
inc
clc
jne
popa
jg
adc
int
pop
adc
aaa
add
xor
sbb
jno
gs
fisubs
jns
sbb
pop
fldenv
and
cmc
xor
lds
fstl
arpl
dec
out
out
xor
loopne
pop
push
push
jne
mov
aaa
or
aad
dec
jb
addr16
imul
fstl
ret
lahf
fst
cltd
mov
mov
pusha
scas
mov
cmp
adc
push
pop
jmp
xchg
push
es
adc
cmp
icebp
mov
inc
or
xor
scas
addl
pop
rcll
inc
icebp
ljmp
xchg
or
fsub
je
outsl
lcall
fildl
shll
mov
test
xor
jb
or
fsubrs
ljmp
inc
jle
mov
insb
jb
dec
sbb
ret
lret
jl
jp
pusha
sarl
xor
inc
fcoml
sub
inc
stos
fildl
std
or
mov
lea
adc
aas
enter
and
add
add
mov
push
lret
mov
in
testl
popf
js
xchg
and
mov
sbb
lahf
lock
rclb
loopne
cmpsl
mov
adc
sub
push
cmp
xlat
movsb
mov
xchg
inc
ja
mov
adc
loope
out
push
or
push
mov
das
add
mov
or
ss
sbb
fwait
dec
fidivrl
movsl
pop
movsl
fsubl
rcr
cmpsb
js
call
cmpsl
mov
sub
loop
jecxz
insb
mov
pop
pop
mov
push
ljmp
cli
sbb
pop
sbb
xlat
jle
cs
dec
imul
fistps
mov
pop
jo
push
stos
jae
fs
mov
in
sub
jb
stc
cmpsl
mov
mov
int
push
cmp
shlb
lock
jne
add
or
filds
mov
xchg
jecxz
xchg
and
mov
std
rol
in
decl
jge
add
jl
mov
hlt
jg
push
std
call
xchg
or
in
ficoms
or
dec
jne
jo
out
push
dec
push
packsswb
stos
sub
sub
inc
sbb
jge
lcall
bound
or
cmc
stos
cmp
cmpl
decb
lret
bndstx
testb
mov
xchg
push
arpl
add
pop
pusha
mov
cltd
sbb
mov
push
andl
dec
add
sub
mov
enter
and
js
in
pop
cwtl
adc
and
mov
das
or
mov
ret
pop
or
jno
sbb
push
loop
mov
dec
mov
inc
in
mov
adc
cwtl
dec
sbb
outsb
mov
cld
aaa
adc
jp
dec
dec
out
fsubl
cmp
sub
repz
pusha
les
add
xor
lahf
sbb
pop
sbb
call
mov
in
mov
mov
mov
ficompl
mov
fisubl
add
das
inc
sbb
pop
inc
dec
and
mov
sahf
jge
mov
jl
xchg
sub
inc
in
or
mov
clc
pop
dec
jl
xlat
cmp
inc
les
gs
sbbb
outsb
ja
pop
arpl
mov
jo
movsb
sub
fbstp
shrl
outsb
fisubrl
push
jmp
js
out
mov
pop
mov
call
cmp
sub
outsb
pop
lock
dec
jbe
mov
frstpm(287
mov
fisttpll
