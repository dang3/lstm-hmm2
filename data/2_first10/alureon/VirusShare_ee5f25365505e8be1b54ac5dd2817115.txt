push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
mov
cmc
mov
mov
jne
outsl
pop
iret
ljmp
fiaddl
jnp
into
rolb
pop
sub
aaa
sbb
mov
push
add
leave
mov
andb
test
and
in
push
in
and
out
cmc
aaa
pop
add
ficompl
jl
mov
sbb
ds
or
mov
or
add
xchg
repz
sub
mov
mov
out
and
add
jnp
imul
inc
inc
std
dec
loop
dec
ss
mov
cli
lea
rol
inc
and
cmp
mov
inc
lock
xchg
dec
cmp
ja
xchg
lds
test
mov
nop
pop
repnz
cmp
data16
out
ljmp
push
int
js
inc
setnp
popa
fimuls
pop
dec
test
arpl
sub
add
sub
pop
or
mov
aam
cmp
jecxz
fneni(8087
dec
inc
pop
je
cltd
pop
pop
lcall
sbb
movsl
inc
cltd
xor
mov
mov
inc
lret
leave
xor
xor
shr
cld
jae
aaa
test
xor
jge
mov
call
inc
pop
movsl
int
cmpsl
mov
or
jecxz
xchg
lcall
push
xlat
popl
aad
jle
jg
xor
jl
daa
mov
or
cli
rorl
stc
dec
popf
int3
dec
shrl
daa
sbb
shlb
jbe
cmp
or
jno
faddl
mov
jecxz
lret
pusha
inc
fcoms
int
rcrl
push
push
shrd
ja
insb
hlt
outsb
xor
into
and
test
test
add
ffree
data16
and
imul
xchg
lock
jmp
add
add
scas
std
mov
cmpsb
and
inc
xchg
push
dec
jl
pop
xchg
pop
hlt
jecxz
rcrl
inc
mov
ja
fwait
pop
leave
cmp
out
outsl
xor
mov
data16
stos
mov
or
cli
lret
push
mov
int3
pushf
lcall
pop
jge
cmp
cltd
cmp
lret
rcrl
cld
loopne
insb
int
in
add
jle
test
add
xchg
mov
stos
xchg
fcoms
insb
ret
out
add
cmp
add
pop
jmp
xor
xchg
fildl
push
popa
arpl
mov
outsl
clc
ja
xor
andl
adc
and
dec
and
or
inc
xchg
lcall
orps
iret
int3
and
push
arpl
adc
inc
lahf
sbb
xchg
xor
mov
mov
or
adc
add
add
sub
cmp
daa
popf
shlb
ret
outsb
xchg
sub
lods
adc
into
in
inc
iret
iret
cmpl
stos
sbb
mov
movb
pop
cmp
icebp
push
dec
xchg
call
test
xchg
adc
and
stos
mov
jle
mov
aas
cs
cmp
rol
xchg
cmc
in
pop
insb
pop
xchg
pop
es
out
cmp
inc
testl
pop
cmp
jae
out
lods
mov
add
movsl
loop
mov
add
ljmp
mov
in
dec
xchg
mov
mov
shll
jo
rcll
test
out
fdivrl
repz
outsl
add
push
xorl
and
negb
cld
mov
xchg
int
fs
dec
stos
stos
jmp
mov
push
mov
cltd
in
mov
inc
mov
mov
pop
fiaddl
xor
adc
adc
sti
xor
push
test
orl
inc
bound
fnstcw
pop
stc
popf
cmp
dec
imul
lods
iret
or
sbb
push
out
test
inc
cmp
mov
imul
mov
mov
rcll
mov
or
int
inc
ret
stc
test
mov
mov
outsb
pop
mov
outsl
xor
sbb
jb
loop
cmc
sbb
sbb
lret
ret
pop
in
das
mov
xor
cmp
std
bound
cmpsl
xor
cmp
mov
lret
stc
add
fdivl
push
cmpb
mov
ss
xchg
fwait
cli
xchg
js
sbb
xchg
mov
dec
sub
test
ret
push
lahf
xchg
pop
ss
jge
jge
xchg
loopne
in
mov
sbb
je
add
add
add
add
loop
fiaddl
sahf
fimull
sbb
pop
cmp
imul
sbbb
lea
lds
mov
rcll
xor
icebp
sti
in
push
insb
loop
es
stos
mov
aaa
lods
out
shrl
jo
jmp
cmp
xlat
cmp
and
and
jnp
add
add
loope
mov
lds
fs
mov
mov
rcl
outsl
fnsave
mov
inc
int3
or
jbe
sub
mov
cltd
pushf
sti
les
jg
push
lods
lret
aam
cmp
adc
ret
push
inc
cs
int3
insb
sub
cmp
mov
sub
push
shll
dec
mov
rclb
inc
dec
fsubrs
xchg
aaa
mov
insl
mov
mov
inc
cmp
dec
das
inc
pop
fsubl
hlt
jle
or
mov
cmp
das
call
and
incb
scas
add
pop
stos
sahf
jae
dec
sub
lods
fiaddl
lret
data16
jmp
rolb
fstl
movsl
lock
fwait
out
mov
lds
scas
outsb
mov
cld
enter
inc
mov
mov
mov
add
add
enter
xor
mov
into
ljmp
mov
xchg
enter
test
popf
insl
adc
xchg
lret
mov
negl
or
add
jne
fstpt
lret
ss
andb
mov
dec
cmp
out
dec
lea
sbb
clc
push
push
pop
int3
mov
pop
cmpsb
mov
push
pop
sub
mov
jae
std
in
pop
dec
test
fmull
divb
xor
xchg
aaa
push
out
cli
loope
xor
aas
fwait
mov
jns
pop
jl
sub
cwtl
xchg
dec
popf
sub
xchg
xrelease
add
ret
roll
mov
mov
ljmp
lods
or
int3
mov
push
in
and
cltd
cltd
or
mov
and
xor
lahf
mov
mov
xorb
hlt
push
mov
loope
addr16
push
int3
inc
cltd
adc
dec
adc
dec
xchg
lock
sti
jge
push
daa
divb
ss
fsubs
pop
mov
mov
push
and
push
dec
or
out
cmp
cs
lock
inc
cmp
clc
lea
and
test
add
pop
fdivs
mov
dec
xchg
and
push
andb
adc
or
jns
pop
pop
dec
cli
imul
cs
sarb
sbb
mov
scas
cmp
xchg
mov
xchg
push
in
test
mov
in
cmp
pop
push
mov
inc
popa
adc
outsl
sub
negb
cmp
and
pop
fstps
enter
add
add
popa
push
add
dec
test
rorl
lret
or
hlt
fs
dec
xchg
shr
adc
insl
addr16
mov
fstps
in
ss
jb
test
test
push
in
insl
mov
or
mov
xlat
fwait
mov
bt
add
nop
inc
sbb
in
mov
imull
mov
adc
add
out
iret
scas
mov
cmc
dec
fwait
and
cwtl
inc
lcall
and
push
add
fistps
mull
cs
enter
push
outsb
xchg
testb
mov
inc
imul
add
jns
shrl
outsb
int3
lods
mov
lcall
sbb
ja
pop
aaa
add
das
test
mov
sub
mov
lods
int3
mov
cmp
adc
push
movsb
ja
pop
stos
xor
call
xchg
cltd
adc
fistl
push
lcall
mov
pop
popf
push
xchg
in
divb
les
sti
cmp
push
inc
mov
jne
mov
adc
mov
enter
pop
lock
ror
cmp
loop
cli
add
add
out
pop
and
xor
lods
xchg
lcall
ror
mov
jnp
and
addr16
pop
mov
ret
dec
outsl
add
dec
int
push
popf
push
gs
jns
mov
push
pop
notb
xchg
xchg
jle
hlt
add
imul
sub
shrb
pop
sub
insb
js
mov
inc
cmp
cltd
fcomp
inc
and
mov
adcl
jecxz
mov
push
jns
loopne
mov
add
dec
dec
les
fistpll
and
or
fnsetpm(287
fildll
dec
xor
adc
shll
mov
sbb
push
das
cmp
roll
or
and
jno
pusha
push
loop
bnd
mov
pop
push
loop
lods
imul
add
push
in
stos
and
int3
mov
cmp
ret
push
mull
add
out
cmp
and
mov
test
xor
pop
call
ss
test
lret
imul
jecxz
iret
pop
dec
lahf
aaa
jge
hlt
pop
mov
fdivrs
dec
cmp
add
dec
mov
dec
pop
test
in
dec
mov
arpl
cltd
pop
out
pop
dec
xchg
out
cmpsb
mov
add
inc
jne
adc
push
pop
jecxz
mov
mov
repnz
jbe
fisttpll
add
add
dec
cld
and
adc
sbb
sbb
scas
leave
xchg
and
mov
dec
cmp
add
pusha
popf
mov
stc
insb
notl
xchg
jnp
ljmp
push
jae
out
insb
cwtl
orb
stos
dec
mov
cmove
add
pop
jo
mov
dec
subb
out
jg
adc
cmp
fwait
adc
xchg
rcrb
inc
fcompl
pop
fldl
add
add
lcall
iret
in
push
outsb
call
stos
xor
inc
in
lds
pushf
cli
inc
mov
lock
addr16
lods
pop
and
pusha
jmp
xchg
das
mov
fnsave
jp
rol
push
and
lock
push
test
mov
mov
outsb
loope
popa
add
and
pop
mov
aaa
mov
add
add
mov
sbbb
pmaddwd
xchg
or
test
adc
dec
popf
and
idiv
jmp
testb
lods
push
mov
push
xchg
shll
lods
mov
ret
jb
outsb
shrb
cmpsb
test
cmp
aad
cmp
jcxz
insl
mov
fisubl
xor
rcr
das
ret
xchg
notl
mov
or
jecxz
xlat
das
jb
xchg
add
add
mov
aas
xchg
fs
sbb
or
cmpsb
stos
push
aad
sub
push
and
in
es
jecxz
jno
xchg
shrl
fildl
rorb
add
dec
test
inc
adc
loope
addl
push
insl
je
stos
push
insl
cmp
fbstp
cmp
das
pop
and
fisttpl
adc
or
loop
add
jmp
aad
daa
into
cmpsb
xchg
out
int
aas
lcall
addl
dec
fsubr
repnz
jbe
and
and
sbb
adc
push
fildll
lods
test
shrb
jmp
jg
sbb
jle
fildll
sbb
and
jb
jge
fstpl
sub
lock
pop
jg
add
add
test
leave
and
xor
lock
inc
mov
fidivrl
dec
notb
xchg
mov
push
inc
sub
fst
and
insl
mov
add
outsb
dec
imul
cli
jne
sub
arpl
loopne
sbb
test
inc
pop
popa
mov
outsb
movsl
das
fs
call
out
mov
cmp
mov
sub
lods
mov
xchg
les
popf
jne
jl
add
add
fcoms
mov
lret
mov
js
fisubrs
jp
fninit
cmp
pop
cmpsb
cld
sbb
mov
mov
rcr
sbb
aas
mov
add
push
jne
push
movsl
dec
out
nop
leave
xor
xchg
inc
test
call
adc
mov
jecxz
ds
cltd
add
adc
sti
jmp
mov
add
add
scas
push
lret
mov
sub
or
push
jecxz
fs
jmp
loope
inc
add
xor
call
out
sub
pop
fadds
xlat
and
lret
ret
mov
inc
int3
imul
aad
mov
dec
dec
addr16
xchg
push
js
aas
mov
jne
ja
jnp
dec
xor
repz
das
cmpsb
adc
pop
cmp
daa
add
and
and
dec
pop
xchg
and
xchg
jae
adc
in
or
fnstenv
cli
aaa
test
stos
dec
pop
je
sahf
dec
or
xchg
adc
pushl
fadds
out
rorl
popf
pop
orb
rcl
pop
ss
or
and
movsl
aad
push
out
and
rcll
add
stc
jl
cld
and
sbb
jmp
iret
sahf
mov
add
add
mov
mov
scas
mov
loope
dec
push
jmp
xlat
fnstsw
pop
inc
mov
lods
xchg
lods
adc
push
fldl
mov
lea
lds
xor
addr16
push
test
add
fidivrl
mov
movsb
push
test
test
or
cmp
adc
inc
sbb
popa
call
pop
push
push
frstor
xlat
adc
mov
sub
das
aaa
adc
or
test
es
mov
das
jnp
jmp
xchg
lods
in
adc
outsb
into
xchg
or
add
fsubs
and
je
divl
inc
push
and
jns
scas
xlat
xor
lahf
add
pop
and
movsb
mov
sub
or
bound
xchg
frstor
ja
movsl
testb
sbbl
add
add
insl
adc
jmp
or
sbb
fcmovnbe
pop
ljmp
push
mov
stos
add
iret
and
in
in
test
pop
rol
jmp
shrl
or
cltd
icebp
mov
sti
and
scas
mov
pop
sbb
into
outsb
mov
jecxz
mov
pusha
int3
adc
dec
push
mov
addr16
sarl
cmp
adc
mov
and
out
mov
mov
ret
scas
idivb
add
out
inc
mov
push
inc
add
cmp
sahf
movsl
adc
popa
jle
mov
or
lahf
sar
and
aam
leave
push
bound
adc
shlb
out
cmp
test
iret
stc
push
scas
jne
test
and
clc
ss
inc
sub
jl
push
cli
or
adcl
clc
in
fdiv
lcall
jmp
es
cwtl
divb
outsb
aam
das
cli
mov
inc
push
repz
push
pop
sub
cmpsl
cs
out
jg
cli
pop
push
test
out
into
arpl
adc
data16
inc
loope
test
xor
mov
jns
test
sbbb
jge
mov
aam
and
test
cmp
subl
xor
xchg
add
das
xor
sub
fldcw
xlat
xchg
mov
decb
xor
es
xchg
dec
mov
and
movb
jb
xchg
and
xor
enter
push
int
adc
mov
ret
jne
fbstp
or
dec
dec
sub
das
and
cmp
jo
pushf
xchg
arpl
mov
ja
cmp
inc
es
cmp
lods
pop
push
xor
inc
adc
mov
sub
ja
pop
sub
cmp
or
add
sub
call
leave
push
mov
xchg
out
adc
fs
jecxz
inc
hlt
or
lods
push
xchg
fadd
sti
pop
lds
jne
or
pop
sarl
stc
faddl
mov
ss
jns
xlat
lods
ljmp
data16
adc
outsb
lret
icebp
dec
pop
cmp
push
xor
ja
sbb
sub
mulb
sbb
adc
inc
mov
push
xor
xlat
shr
lret
std
pop
add
mov
push
test
cltd
test
in
mov
push
inc
out
lahf
pop
shrb
add
jp
add
xchg
mov
loope
or
mov
jno
sub
add
pop
test
jnp
cmp
mov
mov
xchg
pop
pop
es
orl
rcr
mov
pop
xchg
test
push
stos
sub
ss
loope
aaa
and
pushw
daa
sbb
add
cmpsb
lds
test
cmp
mov
sub
lds
rorb
inc
shrb
mov
into
jge
bound
stc
xchg
cmp
jle
icebp
push
or
xlat
enter
fsub
mov
testl
pop
dec
iret
add
sub
xchg
jns
push
fiaddl
ret
movsb
dec
arpl
sub
mov
cs
jle
imul
jno
sub
xchg
add
add
pop
mov
cmpsb
arpl
add
and
f2xm1
mov
push
in
sbbl
xchg
xchg
inc
mov
popf
in
jnp
aas
xor
cli
nop
lea
es
lea
add
lret
rep
or
sub
inc
add
or
pop
xchg
lcall
xor
or
dec
or
add
or
andps
mov
mov
inc
jne
push
cmp
clc
mov
sbbb
mov
jle
iret
fildll
ret
loop
test
xor
cmpsb
sbb
loopne
jno
in
mov
push
jle
fnsave
imul
data16
sahf
jb
mov
add
mov
push
outsb
xorb
mov
push
ror
adc
mov
jmp
test
jne
and
arpl
test
sbb
jno
sti
jge
ss
gs
push
xchg
sub
mov
lret
xlat
sub
mov
fstps
or
dec
cmpsb
cmp
imul
stc
adc
and
out
adc
push
mov
fwait
int
mov
pop
test
sub
fwait
paddq
or
ss
enter
xchg
inc
js
add
and
bound
rcl
mov
sub
imul
lea
stc
shrl
xchg
pop
jmp
lcall
ret
add
jae
int
jno
movsl
xchg
jp
lcall
push
das
ja
pop
mov
pop
iret
hlt
push
jbe
mov
mov
bt
fldcw
xchg
ljmp
out
inc
lods
and
lods
fcoml
and
add
dec
push
daa
mov
push
jg
test
sarb
nop
bound
push
mov
rolb
push
dec
cmpsb
fistl
jnp
insb
or
xor
jge
adc
dec
adc
popf
divl
cmp
ficoms
scas
scas
pop
mov
bound
dec
mov
jl
sbbl
push
cmc
xchg
addr16
dec
jmp
mov
dec
adcl
and
mov
xchg
roll
add
pop
pop
mov
adc
sub
fbstp
push
cmp
sbb
inc
sub
sbb
in
sar
add
lcall
jmp
clc
shrl
cli
fstl
mov
cs
sbb
adc
push
dec
jo
jg
pop
or
push
push
std
in
sbb
pushf
in
inc
repnz
scas
inc
cmp
sbb
xor
repz
add
popf
ficoms
xchg
dec
xchg
cmc
xor
adc
pop
rorl
pop
pop
loop
scas
jp
sbb
xchg
insb
xchg
sbb
mov
or
adc
mov
xchg
jle
fcmovb
neg
lods
loope
repnz
mov
lods
test
es
enter
rclb
scas
xor
mov
je
lahf
addr16
cmp
pop
cmc
fstps
in
icebp
sbb
mov
add
mov
fstps
xchg
stc
add
jb
cmp
addb
int3
add
dec
mov
jle
imul
les
rolb
sbb
cmc
enter
leave
gs
inc
pop
push
outsl
dec
sbb
stos
xor
cmp
cmp
subb
fcmovnb
repz
cli
add
xchg
dec
or
fwait
ret
lea
push
test
pusha
adc
adc
jb
out
or
aad
xor
mov
sahf
add
xchg
pushf
mov
mov
in
loope
pop
mov
mov
jmp
std
ffree
ja
mov
adc
mov
jp
inc
aaa
mov
pop
pop
adcl
jmp
sbb
adc
stos
jl
jp
sbb
pop
dec
mov
outsb
in
mov
dec
xchg
mov
dec
fbld
pop
mov
push
xchg
pop
or
rcrl
mov
in
ja
insb
ljmp
add
mov
push
xchg
test
lods
aaa
push
push
pop
sub
fldcw
xchg
negl
mov
shl
enter
mov
outsl
outsl
fbstp
xor
xchg
iret
iret
movsl
test
sub
lock
mov
jmp
jnp
ret
ret
clc
fcos
ffreep
sub
std
gs
push
jg
jo
jge
dec
mov
or
mov
sbb
sbb
lcall
add
add
mov
or
ja
shlb
push
mov
add
jle
repnz
pop
jo
imul
pop
adc
cli
cmp
and
pushf
mov
movsb
ljmp
jae
jnp
cmpsl
std
call
dec
andl
stc
ss
jge
arpl
cmp
fmull
leave
mov
xlat
add
adc
add
push
dec
shr
loope
jg
add
enter
and
push
push
or
push
jns
pop
xor
inc
aas
jae
lret
dec
ds
and
ljmp
movsl
xor
sub
test
pop
inc
add
imul
mov
fwait
mov
adc
sub
mov
test
add
dec
jmp
fists
sti
aas
loop
inc
dec
cmp
push
test
lret
cltd
call
fnclex
adc
repnz
and
movsl
inc
dec
xchg
movsb
je
sar
sub
jb
scas
jle
ret
pop
insb
inc
xchg
int
sbb
jl
mov
sub
cwtl
pusha
ss
jle
add
adc
testl
in
add
lds
sbb
cmc
push
push
sub
inc
xor
sub
fsts
inc
stos
mov
incl
inc
inc
cmpsl
or
fisttps
sti
test
mov
jl
xchg
push
int3
push
sbb
fcomp
dec
rcl
pop
ret
fsts
cli
mov
int3
cmp
pop
xchg
or
lahf
imul
js
dec
aas
cld
pop
pop
mov
jg
aam
mov
push
sahf
mov
lret
ja
pop
add
add
cs
cmp
scas
dec
call
cmp
xlat
cwtl
hlt
pop
shl
and
push
xor
shll
xchg
xchg
movsl
loopne
cmp
movsb
nop
push
add
cmp
dec
nop
jno
testl
test
imul
dec
std
ret
mov
pop
fwait
ss
jae
mov
int
call
fldcw
jge
mov
int3
icebp
fildl
pop
pushf
je
adc
xchg
add
scas
ret
out
lcall
cmp
into
add
je
fbld
push
xchg
leave
lret
hlt
cltd
adcb
sbb
cmp
pop
or
lcall
and
bound
fwait
xor
mov
test
mov
mov
push
jbe
push
lods
insl
mov
pop
sahf
bound
and
arpl
fimuls
cmpsl
pop
xchg
stos
pop
pop
pop
sub
jp
mov
xchg
int3
clc
pop
or
repnz
lds
pushf
mov
sbb
lods
inc
xchg
or
mov
sub
jg
enter
jae
pop
je
jmp
push
mov
adc
addr16
or
mov
scas
cmp
push
dec
mov
jb
pop
repz
in
loop
xor
rcrl
test
add
and
pop
scas
sub
xor
roll
push
das
cwtl
lcall
and
mov
stos
lcall
jp
in
fdiv
mov
rolb
pop
cmp
xor
cli
movsl
push
mov
mov
cmp
repnz
push
lds
inc
loop
nop
jbe
add
fnstenv
test
sbb
push
jns
sub
enter
adc
add
mov
out
add
or
xchg
lds
cltd
and
mov
cmp
jae
stos
outsl
sbb
cmpsl
pop
and
icebp
aaa
js
lds
dec
adc
dec
push
mov
cmpsl
dec
add
icebp
mov
arpl
add
lahf
sahf
sub
cmp
aam
fbstp
mov
dec
mov
int3
jmp
xchg
call
add
add
and
push
sub
xor
jo
cmp
inc
mov
sub
inc
and
insl
addr16
into
test
loopne
out
movsl
rcrb
popa
out
jnp
fildl
loope
mov
dec
inc
out
pop
xchg
pop
push
jp
leave
and
jmp
dec
add
imull
mov
cld
stc
call
add
clc
arpl
mov
inc
jle
sbb
repnz
add
fs
int
sbbb
adc
lcall
jne
pusha
cmpsb
mov
cwtl
inc
cmp
sbb
jge
fs
or
fsubs
int
pop
inc
fstpl
add
pushf
lods
out
nop
lods
loope
cmp
test
ret
movb
leave
sub
push
push
lret
add
shrb
mov
mov
xchg
call
test
mov
arpl
add
jle
add
push
mov
hlt
fisttpll
cltd
lahf
rclb
movsb
push
dec
insl
pusha
js
sbb
pop
lret
loopne
and
inc
adc
add
dec
sbb
mov
out
ret
loop
hlt
pop
gs
sbb
pop
pop
adc
mov
sti
cmp
pop
sbb
leave
cmp
mov
imulb
or
jp
mov
leave
loope
aad
cmc
add
mov
push
mov
push
movsl
sbb
or
sbb
pop
inc
inc
xor
add
xchg
lcall
push
sti
xor
mov
sbb
and
push
xor
inc
jns
add
sbb
mov
notl
cmp
and
sbb
mov
add
mov
pop
in
mov
sub
xor
and
adc
or
jl
ss
lcall
mov
dec
mov
jne
jo
out
test
jmp
pop
fcmovbe
sti
mov
cmc
sub
scas
imul
mov
xchg
pop
xrelease
aaa
mov
cmp
pop
push
movsb
xchg
xlat
xor
dec
ss
shll
add
push
push
out
js
mov
sbb
mov
cmp
push
xor
push
dec
in
jp
aam
mov
jmp
add
add
inc
push
icebp
enter
rolb
mov
xor
aad
and
insl
jge
call
addr16
outsb
orb
rcrl
shll
add
dec
stos
iret
bound
imul
in
mov
jne
rclb
add
lea
inc
sub
sti
mov
mov
dec
xchg
out
jecxz
shrl
testl
roll
mov
in
lret
pop
decb
ret
mov
fstps
mov
push
ljmp
shrb
xchg
sub
icebp
mov
inc
adc
mov
cmp
xor
shrb
movsl
or
pop
mov
pop
call
cmp
movsl
jecxz
test
inc
xchg
sbb
mov
sub
sub
inc
addl
jb
mov
add
xchg
fbld
adc
andb
push
mulb
xchg
jb
mov
clc
aas
and
test
into
or
or
mov
mov
xlat
push
sub
dec
mov
jge
mov
int
arpl
mov
and
repnz
out
addr16
int3
popf
xchg
daa
fists
xor
aas
mov
out
xor
pop
gs
push
pop
nop
xor
sub
pop
jne
aam
insb
pcmpeqb
and
popf
cmp
outsb
jl
inc
repnz
push
dec
aaa
cmp
