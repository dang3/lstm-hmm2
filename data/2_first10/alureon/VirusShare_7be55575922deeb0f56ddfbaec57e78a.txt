sub
fstps
cmp
not
push
test
ds
xchg
pop
out
insl
pop
mov
jl
js
mov
pop
lea
sub
enter
cld
std
mov
adc
jl
mov
hlt
or
xchg
daa
push
mov
push
sarl
mov
cmp
test
pop
in
fbld
xchg
loop
pop
adcl
jno
mov
xor
ret
filds
cmp
leave
push
xor
xor
inc
jl
int3
sbb
xchg
fadds
sub
and
xchg
sbb
xchg
sbb
arpl
add
shlb
cld
and
and
inc
push
lcall
pop
adc
jne
mov
fnstsw
addl
in
shl
and
cld
mov
lea
not
or
xlat
pop
xchg
mov
and
outsb
mov
mov
aas
lahf
addb
pusha
das
jl
aad
clc
mov
adc
jno
mov
ficoms
repz
push
xor
test
ljmp
cltd
scas
adc
dec
addl
cmp
mov
cwtl
inc
fwait
dec
inc
dec
imul
dec
loope
jg
jg
mov
mov
jecxz
xchg
push
fcmovnbe
dec
lcall
cmc
lahf
sbb
or
lahf
int
mov
push
rcrl
xchg
je
xchg
daa
pop
sarl
mov
or
add
movsl
jb
je
cmp
sbb
icebp
mov
push
mov
xchg
xchg
mov
cmp
jb
xor
or
int
fcmovb
lahf
xchg
mov
xchg
inc
pop
mov
bound
xchg
in
xor
pushf
test
inc
add
mov
test
cld
xchg
pop
push
lods
sbb
mov
pop
mov
sbb
jns
adc
loope
adc
mov
xor
insb
push
push
hlt
and
je
mov
ds
pusha
push
adc
stos
dec
adc
ret
in
inc
inc
icebp
insb
cmpsl
cmp
mov
aas
mov
fistpll
and
loope
push
or
repz
outsb
aam
push
jp
cmp
gs
hlt
jle
outsl
pop
lock
sub
xchg
jo
push
sub
mov
dec
jge
loopne
mov
dec
ljmp
fdivrp
imul
xchg
pop
aad
sbb
movsb
ja
je
scas
aad
sahf
lods
and
cmp
fisttpll
ret
and
ljmp
jbe,pn
push
shll
adc
inc
sub
add
bound
mov
push
mov
shll
pop
pop
fcompl
clc
into
jl
fadds
dec
xchg
or
fwait
sub
shll
push
lahf
pushf
push
addl
push
or
or
call
push
or
pop
leave
bnd
test
pop
push
shll
and
cmp
insl
test
fsqrt
es
mov
add
notb
jno
es
arpl
repnz
stos
jae
mov
adc
cmpsb
mov
mov
adc
xlat
xor
outsb
sbb
jb
mov
int3
das
jecxz
inc
push
fmuls
xchg
shl
mov
pushf
iret
mov
cli
lahf
dec
dec
sbb
cmp
mov
int3
repnz
idivb
pop
add
fmull
movsb
or
scas
adc
insl
ret
or
sahf
cmp
into
push
jmp
fnstcw
mov
pop
fimuls
dec
aaa
fcoms
sub
popa
push
dec
mov
adcb
testb
sub
iret
sbb
or
adc
icebp
call
mov
gs
sub
int3
mov
add
aad
addl
xlat
pop
adc
pop
out
cwtl
jp
or
cmpb
jmp
mov
rcrb
cmc
int
push
pushf
loopne
dec
mov
out
add
hlt
dec
scas
jle
ficompl
fwait
push
jmp
popf
jl
gs
pop
iret
pop
push
cmc
outsb
inc
and
mov
xchg
cmpsl
mov
jp
inc
popf
lock
fstpt
lods
xlat
sub
scas
xchg
lods
in
inc
sarl
cs
lea
mov
icebp
push
jne
jno
sahf
sahf
loopne
dec
out
pop
xor
jmp
pop
fs
sti
aas
mov
sar
mov
pop
push
mov
popa
in
push
dec
push
imul
push
mov
cltd
add
pop
mov
int3
loop
jbe
sub
inc
sub
in
inc
push
push
aad
or
inc
movsb
jb
shll
mov
sbb
mov
mov
mov
out
inc
xchg
pop
jg
inc
dec
adc
pushf
push
cli
mov
daa
mov
cmp
insl
cmp
ja
daa
jg
int3
push
add
inc
das
cmp
sbb
push
andb
insb
ds
or
movsb
mov
vdivsd
cld
cwtl
cmc
imul
movsb
xchg
sub
std
int3
sub
add
mov
pushf
outsb
aam
fs
imul
pop
fildl
sub
push
nop
mov
cmpsb
lea
fs
fldt
dec
int
dec
push
xchg
pop
adc
setne
mov
dec
add
adc
mov
stos
sbb
ljmp
and
aad
jb
lods
jns
add
pop
jmp
add
inc
adc
lock
out
shll
dec
and
mov
shl
xor
ss
lcall
sbb
dec
mov
push
movsl
push
je
and
add
xchg
dec
jmp
adc
mov
dec
xchg
test
and
xchg
js
sti
jbe
pop
push
sahf
addb
mull
add
sub
jge
sbb
imul
je
in
mov
enter
sub
pop
shll
test
push
insl
add
hlt
ds
loopne
fstpt
cmp
pop
call
pop
pop
jo
xor
push
rcrl
scas
push
sub
pop
pushf
xor
cmp
xor
xchg
cmp
inc
fidivrl
andl
push
pop
add
in
push
add
js
popf
or
popf
clc
iret
hlt
xchg
gs
mov
dec
ficoms
jns
add
lahf
sbb
jnp
scas
dec
mov
mov
mov
clc
and
mov
mov
stos
push
cwtl
fwait
mov
add
jns
mov
jle
pushf
js
mov
inc
imul
sbb
mov
push
stos
mov
sub
out
movsl
mov
dec
cmpsb
push
pop
clc
imul
mov
mov
lret
sub
or
cli
imul
xchg
sub
mov
mov
dec
adc
loop
or
das
in
gs
mov
push
sbb
fisubl
mov
inc
aam
fisubrl
or
lods
mov
xchg
jb
movsb
in
insb
dec
and
add
cmp
jne
shll
sbb
gs
jp
and
mov
mov
fadd
test
mov
pop
xor
cmp
mov
js
movsb
xchg
iret
push
in
mov
out
push
xchg
bnd
cwtl
out
dec
sbbl
mov
push
pop
stc
mov
jne
and
mov
cmpsl
mov
aas
leave
ds
scas
lds
std
jge
pop
add
jo
fistpl
rclb
repz
or
mov
aad
cld
insb
das
fdivrs
imul
cmpsl
jbe
lds
xor
ltr
xchg
mov
push
or
or
cld
into
inc
sub
push
mov
mov
dec
call
dec
mov
call
sub
push
and
call
xor
lea
inc
add
dec
inc
call
dec
imul
add
inc
lea
inc
mov
mov
sub
and
inc
mov
imul
dec
call
inc
add
dec
inc
inc
call
dec
dec
call
dec
mov
inc
xor
dec
mov
mov
inc
inc
pop
lea
inc
add
add
dec
pop
mov
imul
pop
add
imul
add
movswl
pop
sub
dec
xor
imul
mov
inc
lea
mov
pop
mov
dec
pop
lea
mov
mov
movsbl
dec
call
movsbl
lea
and
mov
ret
dec
movswl
push
sub
inc
push
dec
sub
push
dec
push
mov
mov
push
imul
mov
mov
inc
add
push
dec
ret
push
lea
movzbl
inc
add
mov
dec
mov
push
sub
add
inc
call
pop
ret
jmp
inc
and
mov
dec
movzbl
add
mov
xchg
dec
inc
mov
mov
xor
lea
mov
inc
mov
inc
mov
lea
dec
jne
or
mov
dec
inc
pop
xor
movsbl
pop
dec
or
pop
mov
xor
lea
sub
dec
dec
and
add
mov
or
lea
add
ret
push
push
dec
sub
push
mov
imul
mov
mov
dec
mov
push
mov
lea
sub
dec
push
inc
inc
inc
add
sub
add
inc
push
imul
mov
dec
push
dec
inc
xor
dec
mov
push
imul
add
push
lea
inc
pushl
add
call
mov
add
and
mov
inc
movzwl
dec
inc
imul
pop
ret
mov
cmp
jb
movswl
xor
imul
dec
mov
add
mov
dec
movsbl
inc
dec
lea
imul
xor
movswl
movzwl
mov
sub
imul
cmp
jb
mov
pop
add
movzwl
mov
add
movzbl
dec
inc
add
mov
add
lea
add
xor
mov
mov
xor
dec
mov
lea
lea
test
jbe
inc
or
xor
mov
sub
inc
inc
xor
inc
dec
lea
mov
and
or
sub
mov
imul
inc
movzbl
add
sub
add
movzwl
movzbl
and
add
xor
mov
inc
mov
inc
mov
sub
mov
mov
mov
imul
dec
inc
inc
mov
dec
jne
imul
mov
mov
or
dec
or
inc
lea
inc
inc
movswl
mov
movzbl
add
mov
dec
lea
lea
dec
add
mov
imul
mov
test
jbe
mov
mov
sub
dec
inc
mov
dec
add
movzwl
inc
sub
lea
lea
movzbl
lea
inc
imul
sub
dec
dec
movzwl
lea
and
dec
lea
mov
mov
xor
movzbl
and
sub
add
imul
or
and
mov
inc
mov
add
inc
movzbl
movsbl
add
mov
inc
dec
mov
mov
add
movzbl
lea
mov
add
sub
jmp
push
mov
mov
and
sub
sub
mov
inc
add
movzwl
mov
dec
movswl
lea
mov
and
inc
mov
dec
sub
xor
and
dec
dec
imul
mov
inc
mov
sub
mov
add
add
xor
mov
lea
inc
mov
inc
movsbl
mov
cmp
je
sub
inc
lea
push
or
call
call
mov
mov
call
call
inc
xor
mov
mov
inc
dec
xor
ret
and
dec
pop
dec
ret
push
mov
mov
inc
inc
mov
push
dec
imul
push
mov
push
and
push
dec
and
lea
add
sub
call
lea
push
dec
and
xor
lea
sub
lea
neg
lea
lea
inc
lea
add
movswl
mov
dec
lea
mov
inc
xor
inc
imul
xor
dec
je
inc
sub
sub
mov
add
sub
mov
mov
add
and
movswl
repnz
movzbl
mov
add
sub
jmp
sub
imul
mov
imul
lea
mov
sub
sub
jmp
or
and
sub
dec
inc
sub
inc
add
pop
pop
ret
push
sub
mov
inc
sub
movzwl
dec
mov
sub
movswl
sub
inc
dec
movsbl
lea
movzwl
movswl
imul
dec
lea
imul
dec
inc
dec
inc
sub
lea
pop
ret
sub
and
mov
inc
inc
mov
add
add
mov
mov
sub
mov
mov
sub
xor
lea
imul
mov
dec
dec
inc
dec
inc
dec
and
or
inc
cmp
jb
mov
push
inc
add
push
inc
mov
push
mov
lea
xor
lea
sub
xor
dec
mov
xor
add
imul
push
mov
mov
mov
mov
xor
sub
mov
mov
inc
mov
imul
movzbl
lea
mov
dec
imul
add
mov
and
add
mov
movswl
movzbl
lea
add
lea
inc
and
movzbl
mov
inc
inc
dec
mov
or
movzbl
imul
lea
mov
jmp
adc
loope
sbb
ja
sub
dec
cli
in
lds
xor
lea
jmp
xor
daa
in
rcll
add
pop
mov
or
xor
cmp
je
pusha
iret
mov
xchg
pop
lods
add
dec
ret
or
pop
ss
cmpsb
push
in
sbb
add
test
mov
inc
sbb
in
xor
sub
data16
adc
pop
mov
test
fcoms
push
and
pop
popl
in
cmp
xchg
sbb
call
mov
aas
aas
icebp
das
sbb
cltd
daa
cmpsb
lods
add
out
and
push
dec
test
mov
sbb
faddl
mov
push
orb
rorl
sbb
daa
test
sub
lods
daa
popa
popf
push
aam
fsubr
dec
addb
bound
sbb
lret
ljmp
loope
cs
daa
pop
sbb
lock
mov
jo
outsb
push
je
jb
cli
cmpsl
sub
sbb
lret
lods
ffreep
cmpsb
mov
dec
mov
mov
inc
xchg
shrl
fstpt
add
sbb
or
adc
roll
pushf
mov
adc
add
test
sbb
fsubrl
dec
insl
push
jbe
and
in
mov
cmp
hlt
pop
outsl
popf
out
xchg
mov
jp
or
lods
fists
add
sbb
mov
test
nop
jnp
mov
loop
pusha
cmp
pop
imul
cmp
ret
push
lods
subl
xorl
adc
cmpl
inc
icebp
pop
cmp
jns
roll
inc
mov
pusha
sub
jge
pop
lds
arpl
mov
mov
cwtl
out
inc
fs
jle
je
outsb
sbb
xchg
imul
xchg
xor
mov
in
fbstp
cmp
stc
jp
pop
add
mov
cmp
sbb
lods
jle
adc
inc
pop
sti
push
in
lret
and
lcall
xchg
das
js
and
in
out
jl
test
lret
insb
xchg
and
dec
mov
jo
and
xchg
ja
fidivrs
xor
cltd
xchg
test
mov
das
xor
es
std
lahf
cmp
orl
lea
adc
cmpsb
stc
and
xchg
adc
cmpsb
cmpsl
cmp
xchg
and
fs
leave
nop
and
pusha
or
bound
sub
xorl
orl
jne
out
mov
and
cmp
sbbb
and
into
jl
lret
lock
dec
imul
or
movsl
popf
daa
arpl
adc
adc
hlt
rcrb
push
lcall
xor
lock
rcrl
scas
cmc
fisubl
in
mov
xor
inc
fidivrs
cli
jb
sub
adc
push
jnp
jbe
add
clc
ja
ljmp
pop
and
mov
xchg
lods
jg
icebp
fisttpll
and
imul
mov
imul
add
push
sbb
add
cwtl
xchg
iret
or
and
xchg
mov
out
mov
xor
xchg
cmp
ljmp
dec
imul
add
inc
sbb
mov
pop
or
es
xor
cwtl
mov
js
pushl
and
pusha
in
add
sub
fst
xorb
insl
pop
int3
add
aaa
pushf
loop
push
enter
mov
xchg
cmp
mov
jp
jge
jns
dec
scas
sub
out
mov
jne
lcall
mov
je
xlat
mov
mov
nop
push
les
aas
out
cmp
cmp
aad
subb
xchg
addr16
ds
cltd
lea
iret
jg
mov
mov
imul
sub
cmp
sbb
gs
sti
adc
notl
jl
imul
jo
ljmp
sub
aam
sti
stos
sbb
inc
jnp
shlb
cmp
sub
lea
adcl
lcall
movsb
jmp
clc
iret
les
xor
jae
leave
sub
repnz
or
in
aam
jbe
or
xchg
icebp
sbb
orb
int3
jno
or
test
xchg
push
pop
popf
cmp
mov
jb
mov
je
jle
daa
jnp
in
sahf
ds
cmp
std
lds
addr16
mov
mov
xchg
adc
sub
ljmp
out
les
and
addr16
and
xchg
nop
out
inc
cmp
mov
mov
int
adc
jne
test
mov
mov
cmp
into
push
sbb
rcr
xchg
dec
mov
inc
aas
dec
mov
jb
push
scas
sti
clc
stos
subl
jo
mov
cmpl
xchg
and
lods
cmpsl
aad
add
cltd
ret
jne
sahf
sarl
out
test
fwait
mov
or
cmp
loop
outsl
rcrb
int3
and
pop
or
nop
adc
ffreep
cmp
scas
daa
bound
movsl
push
xlat
daa
xchg
or
test
jmp
pushf
lods
cltd
adc
mov
iret
sbb
data16
sub
arpl
outsl
sbb
outsl
dec
cmc
cmpsw
mov
sub
pop
adc
ret
add
pop
pop
clc
out
mov
add
add
and
popf
jl
mov
jne
in
jmp
inc
pop
mov
negb
cmpl
scas
mov
daa
push
sub
push
sbb
dec
out
add
jge
loopne
xchg
add
outsb
lock
dec
mov
hlt
mov
out
xchg
test
dec
add
and
xchg
cmp
stos
adc
xor
stos
lock
push
shlb
rcr
sub
iret
mov
ja
and
test
xor
lahf
mov
and
mov
mov
add
pop
aaa
xchg
shrl
lods
sub
jle
enter
rorl
jge
cltd
xchg
sbb
mov
addr16
mov
lahf
adc
sub
cmp
fdivl
adc
mov
mov
xchg
push
sub
push
lret
rolb
shrl
enter
aas
mov
pushl
push
out
subb
or
inc
xor
jp
add
pop
jmp
add
nop
cmc
gs
scas
lahf
mov
xor
insb
cmc
cmc
in
in
pusha
sbb
in
xchg
jno
and
mov
ljmp
cmp
popf
andl
mov
mov
mov
mov
jne
push
orb
gs
mov
lret
jne
das
add
jbe,pn
pop
dec
daa
fs
jecxz
cmp
out
sbb
stc
xor
or
sarl
pop
jno
cltd
outsl
mov
je
sub
dec
xor
ds
cmpl
adc
jge
ret
ret
orl
ss
mov
mov
scas
jb
inc
loope
icebp
in
lret
sub
sub
decl
stos
adc
test
adc
and
jno
pop
mov
xchg
int3
imul
cltd
movsl
mov
mov
and
cmpsl
inc
pop
les
outsl
and
fldl
xchg
repz
inc
mov
sbb
jecxz
and
call
js
mov
cmp
jno
dec
ret
pop
lods
cmpsb
cmpsb
outsl
loopne
rcl
lock
pushf
cmpsl
mov
ret
cli
jne
dec
mov
into
mov
decb
pop
xor
sub
dec
fimuls
sub
rcrl
orb
dec
repnz
mov
sub
testb
mov
scas
and
cltd
repnz
cmp
and
outsb
mov
mov
negb
popf
rcrb
unpcklps
int
mov
popa
dec
jbe
jns
mov
shrb
pop
cmp
inc
inc
scas
add
mov
xchg
pop
push
loope
in
lea
mov
xor
dec
daa
sahf
sub
aad
clc
xchg
jno
outsl
cs
xor
push
int3
pop
jnp
cmpsb
bound
mov
jmpw
jns
pop
mov
xor
dec
rolb
inc
daa
push
pop
lret
mov
aam
pop
push
inc
add
xor
mov
push
rclb
mov
enter
stos
mov
sbb
test
push
insb
scas
xor
test
mov
lea
and
fsub
loopne
fwait
jno
xor
ja
lea
andl
loope
ds
add
call
test
xchg
leave
dec
addr16
cmp
les
cmp
cltd
daa
sub
in
jns
or
and
lahf
add
fidivl
lods
cmpsl
aas
mov
loop
mov
mov
mov
adc
cmp
push
pusha
mov
js
xchg
pop
cs
scas
movsl
data16
mov
je
push
out
sbb
lods
mov
aaa
fwait
shrl
sub
lds
jge
fisttpl
stc
pop
gs
imul
in
add
and
nop
sbb
shlb
push
inc
aas
cmc
scas
jbe
jns
and
mov
insb
pusha
xorl
aaa
cmc
ret
ljmp
mov
xchg
mov
in
mov
out
xor
pop
cld
add
push
decl
lret
pushf
lcall
cmp
pop
aaa
out
dec
xor
test
pop
adc
aam
rolb
clc
sub
pop
cmp
pop
add
cmp
lret
pop
insl
sahf
pop
or
xor
imul
cmp
lahf
mov
pop
mov
lahf
push
ds
addr16
or
mov
dec
psllw
jg
lods
jle
jp
mov
push
mov
or
cwtl
ss
enter
notl
and
sub
mov
hlt
gs
xchg
stos
leave
imul
pusha
add
cmp
mov
in
mov
ret
lcall
xor
filds
rolb
push
imul
loopne
testb
xor
das
xchg
ja
jbe
jb
sub
or
mov
pop
cmp
je
int3
push
stos
cli
pushf
daa
psrlq
out
loopne
cs
mov
stc
inc
mov
aam
inc
or
sbb
xchg
outsb
shll
add
and
inc
lds
fstpt
out
inc
push
xchg
push
jbe
adc
dec
outsb
push
loopew
insb
test
lods
lea
orl
cmp
imul
mov
and
sti
mov
sub
adc
or
int3
inc
xor
mov
dec
dec
mov
rol
jb
mov
sub
push
pop
lret
xchg
es
enter
mov
in
nop
addr16
pop
outsb
ss
inc
cs
xchg
ftst
xor
movsl
in
jp
insb
pop
arpl
insb
iret
push
cmpsb
and
ficompl
ds
xchg
mov
cmp
int
icebp
dec
clc
ds
or
incl
dec
pusha
adc
push
mov
popf
mov
pop
add
xor
or
pop
shlb
inc
popa
int3
std
adc
sub
mov
das
fs
or
test
lock
pop
push
lods
popf
xchg
xor
stc
add
imul
fistps
push
push
dec
push
daa
cmp
push
fdivrp
sarb
dec
push
mov
sti
and
mov
jae
rcrb
inc
incb
loop
int3
int3
and
pop
xchg
mov
xchg
int
aaa
stos
cwtl
into
stos
pop
sbb
mov
cs
mov
pop
bound
cs
pop
loop
sub
in
clc
fnsave
jmp
and
pop
sub
jne
into
aaa
xor
dec
sbb
jo
movsb
js
xlat
mov
inc
push
and
mov
jns
ds
aaa
loop
fnstcw
sub
push
jmp
inc
and
es
pop
mov
xor
xchg
and
out
scas
stos
movsb
mov
push
filds
inc
test
leave
mov
bnd
cmp
test
outsl
mov
dec
push
mov
mov
xor
imul
pop
jle
sbbl
ljmp
incb
jno
ficomps
hlt
aas
fmulp
xchg
out
ret
xor
or
out
pop
popa
dec
mov
ljmp
jmp
stos
mov
adc
fistl
sbb
sbb
fiaddl
int
push
icebp
std
hlt
cmp
push
dec
movsl
int3
mov
mov
mov
inc
jb
mov
testb
in
pop
in
xchg
add
adc
add
xchg
xchg
into
cld
xchg
jne
push
pop
aad
push
data16
mov
les
notb
mov
sbb
pop
cld
loop
mov
xor
shl
cld
jl
test
repnz
mov
notb
jp
mov
cmp
push
jb
and
lods
or
push
sarb
mov
decl
mov
out
test
ficomps
and
mov
sahf
xor
mov
pop
ffree
sbb
in
push
push
lret
mov
inc
out
jns
mov
xchg
mov
push
mov
mov
cmp
inc
lock
inc
pop
xrstor
sahf
xchg
mov
or
xor
xor
mov
mov
mov
dec
mov
xchg
xchg
mov
cltd
jle
fnstcw
and
jle
popa
sub
pop
ret
mov
push
xor
rclb
sub
pop
adc
ljmp
movsl
cmp
cmpsl
push
loope
add
je
addr16
or
xor
loopne
inc
cwtl
scas
add
out
sarl
jo
and
add
adc
xor
dec
loopne
add
pop
scas
mov
mov
mov
repz
out
push
in
cltd
sub
mov
repz
mov
sarl
cwtl
mov
lret
mov
jns
inc
fmull
int
sub
lods
xchg
popl
dec
fwait
jl
packuswb
loop
mov
dec
outsb
aaa
addr16
mov
ljmp
pop
jp
mov
adc
fbld
pop
imul
in
mov
cmp
icebp
sahf
dec
je
pop
xchg
imul
stos
mov
test
and
mov
pmullw
mov
mov
mov
mov
andl
es
xor
inc
xor
xchg
and
push
aad
xchg
imul
and
or
movsb
jns
xor
xor
push
dec
adc
shlb
imul
mov
negl
xor
out
mov
or
in
jl
stos
pop
gs
pop
push
jge
test
gs
pop
and
or
dec
cmp
inc
mov
iret
sub
icebp
loop
push
adcb
neg
dec
pop
ds
xchg
jle
or
les
dec
clc
adc
xorl
pop
pop
repnz
or
sbb
pop
jbe
cltd
push
pop
in
push
ret
dec
cmp
scas
sub
mov
das
fstpt
lahf
sub
adc
and
jae
mov
movsl
sub
and
ret
pop
scas
fs
mov
xlat
imulb
repnz
jne
push
mov
inc
into
mov
push
rclb
and
scas
cmp
and
andb
and
dec
leave
pusha
call
rorb
in
incb
popf
inc
adc
sbb
dec
sbb
pop
mov
adc
xor
enter
dec
xchg
leave
xchg
cmpsl
lods
scas
lcall
push
filds
outsb
mov
push
adc
cli
xlat
adc
push
push
mov
test
jg
into
cli
adcb
cmp
orb
stc
pop
outsl
jp
es
repnz
loopne
inc
mov
and
neg
movb
xchg
pop
cmpl
xchg
lahf
mov
aas
sub
cmp
mov
adc
push
cmp
sbb
or
gs
push
xlat
jle
add
mov
or
pop
shll
fs
pop
mov
sbb
loopne
roll
xor
add
or
lahf
mov
bound
scas
jb
and
adc
sub
int
into
sbb
cmp
call
pop
inc
sub
add
repz
sbb
adc
imul
jb
loop
jl
movsb
push
mov
inc
cmpsl
hlt
icebp
mov
jb
mov
insl
jg
and
movsb
mov
mov
stos
xchg
or
lret
push
scas
test
loop
cmc
jo
outsb
mov
xor
push
outsb
lret
inc
notb
cmp
ja
test
inc
pop
xchg
push
jnp
and
inc
cwtl
in
cmp
add
add
dec
ja
jno
lcall
in
sub
je
stos
and
mov
rcpps
call
jae
push
xchg
out
insb
enter
sbb
inc
and
sbb
js
mov
bound
fstps
or
cmc
int3
xchg
mov
insl
push
outsb
add
pop
cmp
push
xor
xlat
adc
xchg
std
pop
test
test
testb
repz
test
fnstcw
inc
cltd
pop
sbb
bound
inc
push
mov
aad
rcrl
mov
or
sub
and
mov
jl
push
push
or
lret
inc
mov
scas
jecxz
aad
fdivrl
jle
dec
rol
testl
inc
nop
cmp
xchg
cmp
movsl
sub
jbe
adc
or
pop
xchg
fwait
sbb
in
adcl
xchg
cmp
hlt
jp
enter
jnp
leave
lods
in
loop
enter
imul
sub
out
gs
mov
fsubp
hlt
xor
dec
and
out
insl
cmp
loope
jnp
movsb
mov
ret
pop
cmpsl
xchg
pop
cmpsb
mov
int3
adc
cmp
jo
test
xchg
nop
mov
xor
push
aam
in
mov
sbb
xor
and
push
mov
add
insb
sti
jne
shlb
jbe
jo
loopne
sbb
pusha
inc
xchg
xchg
jae
mov
shlb
inc
mov
jo
lcall
mov
nop
sub
sarb
cmpsb
cmc
inc
fisttpl
out
addb
push
xor
mov
push
lret
aad
js
mov
cmp
xchg
repnz
sbb
or
divb
mov
aam
and
sbbb
or
push
mov
push
xchg
jo
lods
xchg
scas
lds
push
or
lods
adc
sbb
fildl
fucomi
lret
add
test
push
xor
jl
pusha
repz
mov
dec
and
jo
inc
pop
mov
clc
aad
inc
outsb
and
xor
outsl
icebp
ja
mov
jbe
jle
inc
mov
xchg
xor
testl
lods
push
mov
mov
xor
jmp
fwait
outsb
sub
push
cld
add
cmc
mov
push
mov
dec
add
enter
hlt
push
lock
inc
imull
push
movb
xchg
icebp
int
mov
xchg
xchg
sbb
push
jbe
xor
imul
rcrb
movsl
loopne
push
adc
ljmp
cmp
mov
nop
inc
push
mov
xchg
dec
add
ret
movb
mov
nop
cli
cmp
test
mov
sbb
xor
stc
insl
jnp
jne
or
sub
inc
mov
or
jge
xchg
mov
hlt
cmc
mov
xor
mov
add
pushf
jle
xchg
leave
imul
std
jne
push
ds
and
insl
int
dec
add
mov
xchg
jge
popa
aaa
xor
jge
fldl
inc
add
pusha
or
mov
fmuls
popf
btc
cmp
rcr
icebp
cmp
xlat
mov
add
lock
push
lahf
sub
mov
mov
cmp
dec
fcom
insb
sahf
inc
frstor
jecxz
scas
push
push
push
and
ret
adcb
xchg
inc
repnz
cmpsl
orl
shll
mull
dec
ds
imul
outsb
rclb
mov
dec
xor
pop
xchg
mov
pop
jb
or
les
scas
test
mov
imul
inc
and
inc
sahf
popf
cmp
cmp
push
pushf
sbb
xlat
je
js
jnp
out
imul
mov
outsl
jmp
pop
mov
dec
cmp
arpl
or
xchg
out
dec
aam
lcall
cli
pop
mov
and
dec
and
xchg
xchg
stc
xor
mov
mov
sbb
mov
int
addr16
repnz
out
cmp
imul
out
cmp
xor
xor
in
lock
adc
adc
pop
into
pop
mov
daa
popa
aaa
fstl
xchg
xor
pop
mov
int3
or
pop
clc
mov
negl
inc
sti
sub
push
jle
push
std
call
or
fidivrs
mov
and
test
mov
pop
cltd
dec
inc
jae
or
fldl
nop
push
arpl
xchg
push
and
rorl
movsb
xchg
cmp
stos
fisttpl
mov
mov
popf
xor
xchg
loop
mov
dec
cmp
pop
add
jns
jp
push
aaa
jne
dec
xlat
loope
cmovl
jnp
sub
push
stos
push
loopne
int
ljmp
or
and
xlat
mov
dec
and
pop
sub
je
pushf
test
sbb
xor
nop
call
bound
cmp
mov
cmp
test
add
jne
mov
cmp
loopne
test
jns
jmp
ss
repnz
xchg
int3
mov
aam
jmp
bound
lods
je
aad
leave
dec
gs
cmp
aaa
jne
into
sub
aad
cmp
vgf2p8affineinvqb
es
clc
jo
dec
push
in
cli
inc
and
xchg
pop
push
push
bound
push
cmp
lahf
popa
push
test
dec
insl
inc
mov
cmc
sub
sub
cli
ds
adc
lds
inc
shll
xor
sub
pop
pop
mov
orl
adc
call
fstl
sub
sub
xchg
sub
jp
or
loop
aad
sbb
xor
test
fmuls
pop
adc
adc
mov
test
sub
mov
sub
lcall
adc
mov
lret
xor
ja
loop
fsts
mov
aad
jno
mov
test
adc
lret
mov
int3
loope
out
jae
inc
and
xor
xor
add
mov
inc
ja
mov
loopne
jae
pop
or
xor
out
fdivs
iret
push
push
loopne
loop
or
sbb
sbb
sbb
pop
pop
push
add
test
fsts
and
adc
mov
cmpsb
shll
mov
sbb
add
js
int3
das
int
push
cld
add
ret
jmp
xchg
iret
sbb
xchg
jns
inc
or
sahf
rcrb
and
scas
mov
mov
aad
jns
fistpll
lret
jne
dec
loope
add
cli
mov
fbld
adc
jle
inc
mov
jecxz
jbe
out
movsl
jnp
rclb
and
mov
mov
dec
mov
mov
mov
inc
outsb
or
rcrb
mov
xchg
or
nop
lcall
clc
loopne
ja
lds
xchg
sbb
xlat
shrl
outsl
test
in
xchg
add
movsb
imul
push
push
push
xchg
dec
imulb
ror
adc
mov
dec
cmpsb
jg
in
and
sbb
popa
push
inc
aaa
push
bnd
rcrb
pop
imul
mov
push
lret
mov
mov
int3
test
in
mov
insl
dec
insb
cwtl
loopne
fisttpll
adc
scas
fistpll
out
sti
movups
pop
stos
fldt
cmp
or
rcrl
jecxz
jo
pop
cs
jae
xchg
cmc
hlt
inc
adc
mov
les
outsb
icebp
mov
rorb
loope
mov
shr
mov
orl
inc
jge
and
into
push
nop
push
add
cmc
into
enter
out
in
pop
ret
iret
or
test
pop
jae
mov
pop
fcoms
push
sub
sub
lcall
ret
outsl
in
cltd
add
pop
pop
and
cmp
mov
pop
das
push
out
xchg
adc
es
addb
cmpsb
divb
insl
jmp
cmp
xor
ret
stos
loop
jl
dec
mov
lods
imul
in
and
fs
or
outsb
js
or
leave
bound
xchg
xlat
orl
repz
fnstenv
popl
movl
mov
xchg
and
jo
lods
roll
cmp
cmp
adc
sbb
dec
add
pop
subb
xchg
sbb
movsl
pop
lret
popl
mov
test
rcrl
je
insb
scas
jo
cmp
push
cmp
icebp
clc
inc
adc
hlt
add
insb
pop
nop
or
sub
call
dec
jb
dec
ss
push
mov
inc
es
mov
mov
scas
pusha
adc
xor
add
pop
cwtl
insb
push
aaa
test
loop
cli
fnsave
push
mov
cmp
lods
ss
call
popf
or
int
pop
out
xchg
ja
in
fwait
pushl
push
jmp
jns
inc
sub
repz
inc
nop
jno
sbb
cmpsl
and
sarb
lret
mov
incl
ja
in
scas
sbb
mov
loop
inc
in
out
xor
lock
sbb
push
mov
mov
xchg
imul
outsl
lret
mov
mov
or
jns
loopne
sbb
sahf
out
cld
lcall
leave
sbbb
subb
fimull
sahf
jmp
or
dec
fsubr
test
inc
cmp
loop
mov
cwtl
adc
sti
xchg
adc
pop
dec
mov
in
dec
push
aad
adc
sub
xchg
cmpsl
lds
repz
mov
jb
adc
fcomps
or
mov
gs
cmp
cs
sbb
fiaddl
out
mov
xor
cmpsl
or
pop
hlt
cmp
inc
and
gs
mov
xchg
iret
movsl
dec
lods
stc
xor
mov
adc
ret
xchg
or
loopne
xorl
test
push
test
lcall
pop
inc
cmpsl
xor
enter
mov
sbb
mov
sahf
push
inc
dec
imul
ret
cltd
add
popa
pop
cmc
repnz
jb
icebp
and
jge
pop
nop
call
fcoml
xor
and
fistl
orl
int3
sbb
ja
dec
aas
movsl
ret
faddl
sahf
jo
jno
dec
in
mov
or
aam
cltd
ja
shl
mov
es
ret
mov
stos
aam
leave
mov
in
xlat
xchg
subb
aad
das
fcompl
jmp
pop
mov
fwait
dec
hlt
fsubrl
imul
loop
icebp
ret
addr16
adc
pusha
sbb
xchg
sub
inc
or
jmp
and
inc
fistpll
mov
jo
add
or
mov
xlat
mov
push
push
movsl
inc
pop
adc
fs
add
fimull
fadd
outsl
sbb
add
pop
sub
ret
xor
jge
inc
lahf
lahf
lcall
fxch
push
jae
shr
jbe
push
sbb
cmp
arpl
jmp
icebp
or
popf
push
mov
adc
rolb
lahf
jnp
nop
in
push
inc
push
fiaddl
test
push
rcrb
jae
outsb
or
mov
xchg
jle
mov
lds
call
lea
mov
mov
adc
insl
in
lods
add
out
out
int
jne
addr16
xchg
les
push
pop
aam
xor
pusha
inc
mov
jl,pt
iret
mov
jnp
dec
in
stos
loopne
inc
clc
shrl
subl
mov
pop
int3
xor
sbb
inc
dec
mov
jle
push
lds
xchg
and
stc
or
mov
insl
jl
dec
jae
outsl
inc
xlat
pop
or
xor
outsb
sbb
ss
xor
push
notl
std
sbb
push
sub
dec
divl
add
mov
cs
mov
jle
mov
pop
xor
loop
lret
lret
inc
sbb
lea
jns
aaa
dec
lock
fld
js
in
movsb
xchg
xchg
pusha
jne
add
fsubp
xlat
mov
mov
shrl
ret
xor
pop
pop
push
aas
int3
addr16
es
test
jnp
and
xor
out
ds
pushf
fisttpll
mov
test
push
scas
hlt
sub
mov
loopne
push
mov
sbb
and
pop
in
insl
xor
push
loope
xchg
testb
popa
cmpsl
rcrb
cmpb
cli
jge
into
lods
incb
cmp
popf
mov
xor
cmp
pusha
dec
mov
inc
push
imul
jo
pop
pop
movsb
test
leave
lret
push
inc
jae
in
inc
lods
cli
pushf
cld
xor
inc
mov
cmpsl
inc
jne
jp
jns
fstpt
leave
jbe
jle
in
inc
mov
adc
shl
inc
int
push
imull
fstl
rclb
sbb
jp
push
cs
cmp
frstor
enter
pop
pop
imul
dec
std
iret
fidivs
mov
daa
lods
je
mov
mov
mov
mov
popf
out
mov
addr16
jg
lods
pop
mov
jns
xor
pop
pop
and
out
jae
adc
cmp
rcrl
pushl
lahf
lods
rcrb
rcrl
movsb
shll
in
jmp
push
mov
or
or
orl
lds
jb
mov
lret
je
push
sahf
sub
daa
out
hlt
test
pushf
data16
push
sahf
arpl
push
and
lcall
lods
jecxz
std
loopne
pop
mov
mov
mov
cmp
xor
rclb
insb
and
cmp
les
jae
mov
pop
aas
push
or
iret
movsb
and
lret
daa
js
mov
mov
push
int3
xor
int
jbe
lret
ja
testl
push
addr16
ds
shr
inc
cs
imul
ja
cli
sub
imul
mov
mov
and
pop
mov
xor
cs
and
jle
test
adc
cmc
jns
pop
lret
sbb
mov
mov
jbe
dec
jecxz
cmc
jp
imul
pop
sub
cltd
lds
sbb
scas
push
fs
pop
mov
sub
pop
mov
in
xchg
xchg
enter
sbb
push
push
xchg
mov
icebp
inc
mov
xchg
in
aaa
pushf
dec
out
push
cwtl
pop
orb
cltd
fistpl
rorl
and
je
test
in
insb
dec
jno
sahf
xchg
fisubrl
jg
fstpl
loope
into
pop
or
add
dec
clc
bound
test
out
xchg
popa
push
push
jmp
or
cmpsb
sbb
cwtl
shl
in
popa
insl
add
or
jmp
sub
mov
sti
pop
sbb
fstps
pop
push
ljmp
cmc
cmp
outsl
shrl
mov
mov
in
sar
mov
hlt
and
inc
dec
addr16
inc
loopne
popf
sbb
adc
xor
push
lcall
inc
dec
mov
jne,pt
aam
daa
inc
cmpsb
jne
in
add
shlb
jo
xchg
aas
pmuludq
pop
xor
icebp
inc
xor
xchg
dec
inc
gs
mov
fcoms
lret
fidivs
mov
xchg
inc
pop
xchg
loope
inc
cmp
rclb
icebp
cmp
jo
movb
adc
inc
mov
popf
inc
push
sub
mov
insl
shll
movsl
insl
jmp
je
rorb
jns
lahf
das
push
cmp
push
mov
adc
cmp
icebp
stc
inc
ret
mov
leave
lods
sub
xchg
jae
sbb
punpcklwd
sbb
mov
popf
cmp
dec
jp
fucomip
inc
mov
sbb
rolb
cmp
lea
cmpl
adc
fsubr
adc
inc
movsl
cwtl
outsl
loope
sbb
sub
and
mov
sub
repz
aas
push
dec
dec
cmp
push
fwait
mov
aas
aaa
pop
pop
lcall
stos
and
aam
and
adc
clc
popa
scas
cmpsl
cld
mov
adc
jbe
in
pop
pusha
jb
dec
call
mov
jns
mov
test
jo
push
mov
decl
dec
cmpsb
nop
jp
in
insb
push
inc
movsl
sbb
jle
iret
in
sbb
hlt
cmp
mov
pop
ja
xchg
subb
jae
popa
xchg
sbb
in
xlat
and
xor
mov
into
into
jne
jecxz
inc
into
sub
inc
repz
pop
xchg
lretw
jmp
pop
rcll
js
xor
lret
push
mov
xchg
sub
fs
xchg
push
mov
sbb
out
rcrb
mov
int3
pop
aad
add
and
ret
mov
inc
outsl
add
cmpsb
lds
xor
scas
pusha
mov
and
imul
incb
mov
or
icebp
xor
cmp
add
pusha
in
lods
xor
paddw
pusha
mov
cld
cmp
into
pop
je
loopne
xlat
cmp
push
sub
icebp
in
dec
jb
loop
mov
xchg
push
cwtl
aad
outsb
lods
scas
stos
aaa
cmp
push
mov
movsb
shrb
and
int3
cmp
xlat
loope
pop
ljmp
push
mov
insl
fisubs
mov
adc
sub
sbb
rol
inc
aad
fabs
test
mov
mov
add
rorb
fldt
xorb
push
mov
jns
jae
in
stc
fcompl
mov
dec
sti
jmp
jge
shl
jb
inc
aad
jg
arpl
and
jecxz
pop
enter
jge
mov
sbb
popf
es
adc
push
shrl
orl
popa
mov
mov
lret
add
daa
stc
push
out
mov
ds
popa
bound
cld
pusha
enter
dec
fwait
sahf
outsb
adc
pushf
out
xor
and
int3
mov
leave
add
cmp
cmp
mov
mov
in
jo
add
sbb
in
push
pushf
inc
mov
call
push
addr16
mov
clc
scas
sbb
rorl
push
lods
mov
outsb
movsl
or
xchg
stc
iret
push
out
popa
lcall
inc
inc
cmp
push
in
sub
adc
int3
mov
and
ja
mov
cltd
and
sub
mov
scas
cmc
std
negb
lahf
add
sub
add
cltd
mov
aad
sbb
aad
in
mov
push
sbb
pop
inc
pop
loope
inc
test
insl
and
sbb
push
adc
movl
arpl
mov
mov
popf
int3
push
insl
dec
mov
xor
inc
xchg
sub
sub
sbb
sub
or
lret
test
call
push
pop
jae
popa
fimuls
add
push
enter
rcll
cmp
dec
xor
push
adc
sub
in
push
sbb
std
cs
sti
mov
mov
repz
jmp
pop
or
dec
pop
and
stos
test
pop
and
idivl
into
xor
mov
xchg
aaa
sub
cmpsb
add
push
ja
sub
es
sub
lahf
and
lahf
push
sub
cmpsb
pop
imul
sub
dec
roll
popf
lea
std
pop
fdivs
rorl
fisubs
inc
rcr
add
ja
stos
rorb
into
or
orl
test
fidivrs
test
insb
dec
loope
or
sbb
inc
stos
add
mov
xchg
sub
jns
insl
in
mov
std
sub
jno
jecxz
pop
repnz
loop
sub
test
movsb
xchg
cwtl
mov
jae
cltd
pop
cli
mov
shll
mov
push
andl
fcoml
test
shlb
pop
sub
pop
sti
imul
pop
stos
test
xchg
ljmp
cmpsl
mov
cmpl
insl
and
daa
inc
or
adc
pop
mov
cmp
add
inc
arpl
push
pop
imul
sbb
jecxz
ljmp
add
mov
sbb
jo
jb
jmp
leave
push
push
out
pusha
into
jne
pop
pusha
mov
das
cmp
mov
push
inc
xchg
push
idivb
lret
aad
sbb
xchg
lahf
pop
and
mov
pop
ret
into
adc
int3
fs
ss
sub
fisubs
loopew
adc
inc
cld
or
jbe
jge
enter
fisubrs
leave
jecxz,pn
xchg
push
inc
cmpsl
sub
push
lea
dec
pop
out
ret
cmpsl
add
gs
gs
mov
je
push
inc
stc
pop
insb
jns
cmpsl
cmp
or
add
add
adc
jae
inc
jmp
jo
push
sub
push
sbb
push
cmc
arpl
sub
and
ds
data16
jo
mov
inc
mov
hlt
fst
bound
add
cli
fcmovne
subb
test
lods
push
lods
test
mov
push
mov
cmpsl
mov
ret
adc
in
sbb
adc
pop
push
leave
js
inc
mov
inc
jle
mov
xchg
ss
dec
fdiv
adc
cs
popa
daa
movsl
nop
dec
xchg
jmp
test
inc
pushf
lret
mov
rolb
mov
xchg
data16
lahf
push
or
push
leave
cmp
xchg
int
popa
push
stos
add
xor
cwtl
int
movb
fmull
jb
or
jbe
lahf
jl
andb
pop
inc
dec
out
mov
jmp
mov
fs
pop
fdivrs
mov
jecxz
push
mov
jmp
sahf
sbb
fisttpll
call
icebp
sub
fimull
enter
addl
mov
mov
mov
sbb
mov
xchg
pop
fnsave
repnz
ret
cltd
push
xor
or
insl
movsb
scas
iret
fidivrl
jbe
out
xor
pop
sub
sbb
push
push
lcall
inc
popf
in
lea
inc
mov
sub
xor
idivl
aas
out
call
movsl
cmp
xchg
leave
cs
roll
sbb
in
dec
mov
pop
mov
leave
out
stos
test
dec
in
out
mov
xchg
add
stos
scas
mov
ret
xchg
outsb
mov
adc
mov
scas
pop
push
clc
sbb
push
repnz
cmp
sub
mov
idivl
in
fmul
jle
push
imul
or
push
jne
dec
push
nop
xchg
fimuls
ljmp
pusha
mov
pop
sbbl
mov
sarb
data16
punpckldq
sub
mov
out
pop
mov
cmpsb
xlat
outsb
cld
cld
lods
ret
pop
loope
cmp
lods
and
push
ss
or
jl
popf
inc
test
xchg
movsb
pushf
jmp
inc
nop
fstps
enter
cmp
and
mov
cmp
mov
es
rclb
xor
mov
adc
dec
xchg
xchg
scas
xor
adc
clc
lea
add
ds
sti
ret
int3
mov
push
add
clc
aas
add
cs
stc
les
sub
sub
sahf
jmp
test
xchg
sbb
outsb
cmp
mov
add
mov
or
sub
adc
lahf
cmp
nop
stos
sti
push
lds
bound
packuswb
popf
fnstsw
shlb
fnsave
lods
lret
ss
mov
dec
add
pusha
rclb
ljmp
insl
rorl
push
adc
jmp
mov
testl
or
stos
adc
sbb
push
pop
nop
into
addl
jl
lahf
lret
mov
adc
test
adc
mov
inc
jmp
push
jns
adc
shlb
pop
std
dec
ret
cs
jno
stc
mov
push
adc
loop
mov
xchg
mov
int3
and
popf
sub
jmp
add
mov
lds
fnstcw
in
jmp
cld
rcll
sbb
imul
xchg
and
xor
cmp
dec
les
jae
mov
das
inc
xchg
sub
aas
jo
arpl
loope
dec
mov
jbe
xchg
sub
fadds
cmp
arpl
aas
pushf
int
cmpl
inc
cs
sub
sarl
or
pop
cmp
add
ljmp
sar
add
dec
inc
pop
push
sahf
das
xor
mov
int
ficompl
mov
and
stc
add
jl
pushw
push
call
icebp
xor
sahf
jecxz
cld
cmpsl
pop
outsl
jno
dec
shll
icebp
sbb
xchg
push
stos
xchg
xchg
pop
push
jbe
xchg
mov
fimull
cmp
stos
and
aad
jl
xchg
rolb
mov
lds
mov
add
dec
dec
test
mov
jbe
cltd
xchg
pop
mov
sarb
pusha
sar
mov
mov
jb
fdivr
dec
aas
movsl
xchg
je
call
or
pop
iret
out
xor
iret
cmc
cmp
sub
inc
lods
dec
push
push
mov
mov
jno
stc
test
or
push
int3
sbb
negb
ljmp
rclb
add
sahf
repz
add
mov
insl
movsb
ret
xor
sahf
push
jmp
mov
dec
dec
add
or
sub
push
and
aas
pushf
jne
out
push
xor
cld
cs
sub
mov
jnp
adc
shlb
cld
pop
outsl
sbb
and
scas
add
sub
fists
popa
mov
xchg
add
sar
cmpsb
sarb
xchg
inc
les
xor
sbb
cld
shlb
iret
push
loopne
mov
loop
je
sbb
popf
aaa
mov
add
sti
sahf
sub
xchg
xor
rolb
adc
lods
sub
inc
movd
dec
insl
jl
das
pop
pop
mov
xchg
rcr
movsb
push
fstl
lret
push
loop
xlat
test
dec
insb
cmpsb
bnd
inc
push
aas
js
mov
cmc
mov
fisttps
xchg
sub
mov
shl
pop
cs
jbe
dec
call
pusha
xor
mov
or
pusha
push
insb
ret
jbe
push
loope
jns
out
pop
push
cmp
fisubl
adc
push
inc
mov
scas
sbb
mov
mov
int3
add
adc
or
jno
pop
push
cmp
xchg
adc
hlt
mov
jb
daa
scas
push
jge
adc
jl
clc
mov
mov
cmp
add
dec
mov
ja
push
cmpsb
push
cmp
xchg
mov
push
sbb
and
adc
mov
mov
fistpl
xchg
and
pusha
test
xor
ja
nop
xor
sahf
out
cmp
lods
sarl
ret
repnz
faddl
int
push
xor
fisttpll
jo
sub
adc
push
and
pop
dec
push
in
leave
xchg
add
adc
push
arpl
cmp
dec
cwtl
ret
jne
js
mov
in
out
mov
xlat
pop
dec
mov
adc
insb
xchg
scas
lret
nop
scas
fst
sbb
roll
xchg
pop
outsb
jg,pn
aaa
xor
in
dec
adc
in
adc
out
mov
sbb
rclb
and
shl
or
in
dec
or
ds
and
sbb
into
sarb
push
mov
dec
stos
or
mov
mov
shr
sbb
test
mov
rcll
mov
xchg
popa
cmp
shrl
out
pop
fwait
loop
jl
pop
cmc
and
dec
push
adc
out
fcmovb
mov
cmp
mov
dec
sahf
or
shll
out
daa
push
rcrl
subb
push
ds
xchg
push
notb
daa
cmp
shrb
lret
sahf
cmc
loop
loop
add
es
mov
mov
adc
popl
push
xor
aas
and
dec
scas
aad
out
decb
jae
repz
jge
rcrl
fsub
pmaxub
cli
xor
dec
sub
cmp
sub
nop
stos
inc
mov
push
das
out
jle
das
mov
lods
cmp
aas
jbe
lds
jle
sub
gs
ljmp
in
add
imul
call
in
aaa
push
sub
xlat
shrl
and
stc
xlat
std
or
dec
xor
push
enter
dec
daa
xchg
notl
mov
in
lock
and
add
mov
inc
jo
xorb
jp
xor
mov
mov
dec
xchg
cmpsl
outsl
push
sti
push
mov
lock
movsl
sbb
mov
ret
popf
clc
sub
and
mov
xchg
mov
call
outsl
test
sbbb
xchg
pop
cltd
jb
mov
pop
xchg
xor
aas
mov
leave
ljmp
pop
mov
fbstp
insl
ret
cmp
mov
jno
mov
stc
and
lock
xor
cbtw
mov
enter
dec
inc
dec
cmp
sbb
xor
pusha
jbe
shlb
je
mov
mov
mov
faddl
dec
cmpsl
push
xchg
push
int3
mov
mov
fucom
xor
push
imul
mov
scas
dec
or
push
xor
jb
in
mov
inc
mov
lods
cmpb
ljmp
xor
mov
or
pushf
cmp
movsl
pop
jae
adc
testb
mov
push
fimull
and
jp
insl
and
or
lahf
js
addr16
in
stc
out
movsl
or
jp
and
sbb
jb
or
imul
int3
scas
in
fisubl
ja
inc
mov
mov
or
sbb
movsl
push
lcall
cmp
pop
mov
popa
loopew
sbb
push
cmp
lods
jne
sub
fsubr
pusha
pop
les
sarb
je
dec
das
pop
lcall
lcall
insl
es
adc
pop
popf
cmp
subb
and
dec
data16
adc
je
sub
in
xor
add
sub
out
and
lods
cmp
sbb
pop
mov
mov
jo
ds
pop
sbb
test
movsb
fs
add
andl
loopne
jge
cmp
cwtl
mov
fldcw
into
cwtl
fistpll
pop
pop
pop
int
add
mov
in
sahf
imul
and
nop
mov
cli
xor
xor
cmp
js
loope
shrl
sahf
sbb
xchg
hlt
pop
js
in
rcrl
mov
mov
cmpsb
dec
gs
fs
add
outsl
iret
daa
or
jmp
dec
fistl
clc
sub
mov
pop
jle
cltd
mov
pop
bswap
les
imul
aas
es
mov
aaa
or
xchg
arpl
and
ja
sub
push
pushl
push
xchg
push
adc
out
rorl
lods
sbb
cmp
inc
or
lret
movl
xchg
sahf
hlt
push
sahf
lods
ficomps
stos
push
mov
int
fst
or
aas
das
dec
incb
out
mov
lret
cmp
jnp
sarl
dec
es
mov
add
sbb
mov
mov
sbb
push
dec
ja
pop
mov
jl
push
sub
mov
orb
or
xor
and
mov
dec
push
lds
icebp
fs
jge
enter
fadds
imul
test
adc
jnp
adc
or
into
sub
mov
pop
sub
sub
sahf
pop
leave
and
and
lds
dec
int3
and
inc
addr16
cmpsl
push
outsl
inc
xchg
jb
fistl
test
loopne
push
mov
cltd
dec
jns
or
in
inc
sbb
xchg
inc
jae
xchg
in
leave
pop
jbe
mov
aaa
inc
dec
push
out
sahf
fdivl
mov
mov
or
out
jnp
loope
mov
stos
push
stos
icebp
ret
mov
xchg
xor
sub
dec
fidivs
jbe
js
add
lock
aad
and
arpl
sbb
jne
ja
mov
xchg
dec
xor
cmpsb
push
pop
mov
and
cmpsb
mov
cli
mov
push
adc
sbb
mov
nop
add
mov
mov
mov
cwtl
cmp
bt
sub
mov
and
mov
stos
cmp
fs
lds
cs
cltd
leave
xchg
xchg
adc
std
mov
fdivrs
xor
push
lock
pushf
es
sahf
loope
sbb
repz
jmp
mov
loope
call
movsl
out
mov
mov
stc
mov
jns
cltd
fstl
fcompl
cltd
icebp
lods
add
add
stc
pop
sbb
mov
pusha
shll
lcall
sti
shll
lods
mov
push
mov
adc
mov
mov
imul
icebp
jg
fdivl
pop
loope
pop
sbb
cmp
jo
es
cmp
mov
dec
fcoms
in
cmp
and
jno
xchg
mov
aas
jmp
sti
or
fwait
mov
mov
adc
mov
xor
sub
cmp
mov
sbb
mov
js
sub
xor
je
in
mov
dec
rclb
pop
stc
jae
xchg
ret
or
fs
push
mov
sbb
pop
ficoml
jecxz
or
jg
sbb
aaa
sbb
push
xor
jae
mov
cwtl
mov
and
mov
xchg
mov
xchg
iret
movsl
repnz
lcall
pop
mov
rcl
push
cmp
xor
mov
lds
stc
sbbb
idivb
imul
xchg
or
cwtl
fidivrl
ret
sub
arpl
adc
insb
add
arpl
lods
jp
mov
or
mov
in
outsl
sbb
jae
pushf
fidivl
punpcklwd
lahf
leave
ljmp
divl
je
mov
dec
dec
cmp
imul
xchg
hlt
xchg
add
dec
stos
inc
push
test
add
test
mov
mov
pop
test
and
hlt
sbb
jb
push
lods
xor
das
push
mov
jl
pop
mov
call
mov
cwtl
and
faddl
xchg
push
andb
xor
pop
jecxz
jp
movsl
imul
mov
cmpsl
inc
sbb
sub
xchg
xor
cmp
and
add
dec
inc
clc
lods
into
clc
lods
pop
iret
adc
xlat
mov
xor
pop
jns
dec
in
dec
in
adc
ljmp
ss
mov
jp
xor
pop
cld
pop
les
or
ret
mov
push
movsl
lcall
dec
int3
and
pop
inc
repnz
lcall
sbb
out
sub
addr16
repz
jmp
xrelease
call
adc
mov
sbb
aad
into
repnz
pop
jno
add
iret
push
jle
icebp
jbe
jae
or
mov
lret
mov
loop
or
lcall
fcmovb
mov
pop
ja
adc
test
daa
loope
push
xchg
push
fidivrs
in
jno
pop
jmp
push
sub
addb
dec
cltd
int
in
and
mov
or
or
outsb
sbbl
sub
cmp
daa
mov
rorb
aad
int3
sub
inc
stc
xor
into
xlat
je
cli
mov
mov
ds
adc
cmpsb
or
inc
mov
je
pop
mov
stos
scas
dec
pop
mov
sti
or
popf
dec
arpl
es
cwtl
idivl
popf
shlb
sbb
inc
xchg
test
rolb
ret
jl
jmp
stos
sarb
add
insl
test
aad
mov
push
repnz
scas
push
push
pop
dec
fcomi
pushf
int
mov
or
lret
xor
lcall
push
xorl
scas
sub
aas
loop
shll
inc
add
lahf
sbb
loop
adc
subl
inc
sbb
mov
leave
push
test
xchg
in
push
mov
enter
xor
rcl
std
jb
pop
xor
sub
in
dec
repnz
js
and
fidivl
xor
stc
dec
sbb
mov
cmp
hlt
mov
iret
dec
data16
int
mov
loopne
push
cmp
push
and
nop
push
addl
inc
jle
imul
enter
or
xchg
jp
test
add
mov
xchg
push
mov
movsb
ja
jmp
cmp
nop
pop
lcall
cmp
dec
jns
daa
mov
sbb
or
inc
mov
lea
or
shr
xor
xlat
push
mov
adc
add
add
add
mov
add
xchg
add
xchg
insl
add
int
add
pop
mov
add
adc
icebp
loope
imul
aam
sub
cmpsl
dec
cmp
test
fcoml
lds
adc
push
inc
mov
cmc
add
xor
push
mov
out
inc
sti
mov
or
adc
fsubrs
cmpsl
enter
cmpsb
sti
inc
push
imul
mov
dec
jne
dec
push
and
xor
in
or
xchg
jnp
mov
sub
jno
lds
call
or
in
daa
mov
cmp
mov
popf
sahf
jp
pop
and
mov
push
push
repnz
push
rcrb
outsb
std
out
repz
es
test
cld
sbb
lods
xchg
shll
dec
movsl
addr16
in
scas
ja
loope
xchg
mov
mov
mov
push
and
lahf
push
popa
addr16
movsl
mov
gs
push
rolb
mov
arpl
pushf
pop
sub
jmp
in
inc
xchg
clc
in
jbe
cltd
adc
pop
mov
roll
rolb
ljmp
pop
mov
in
fisttps
pusha
push
cld
es
cmp
sub
int3
jmp
or
xor
pop
test
mov
mov
push
ss
push
fcmovne
inc
fwait
mov
mov
fwait
mov
mov
cmc
jae
jae
test
sub
lret
out
adc
cmpsl
jg
and
jl
add
pop
outsb
xchg
inc
hlt
inc
frstor
adc
cmp
fldcw
arpl
pop
inc
push
loop
mov
mov
xchg
push
inc
jb
divb
call
cmp
cmp
push
cmp
or
mov
inc
jl
int3
fs
xor
in
mov
dec
out
arpl
ss
lret
jb
cmp
imul
daa
xor
mov
int
add
and
inc
dec
stos
fwait
cmp
shl
iret
loopne
jle
sbb
test
fwait
andl
mov
push
push
cmpsb
push
add
sbb
bndldx
dec
jnp
sbb
clc
cmp
xchg
xchg
icebp
arpl
fnstcw
jle,pn
js
leave
pop
out
sarb
jecxz
xchg
xchg
push
cmp
xchg
add
inc
ds
adc
adc
adc
in
inc
loopne
push
push
cmpsl
jae
shr
push
imul
ds
push
pop
sbb
fldenv
fldcw
fidivrl
jp
repnz
push
mov
cmpsb
arpl
pusha
mov
hlt
dec
mov
loope
mov
add
inc
jbe
jne
fnstcw
pop
ja
movsl
cmc
adcl
or
push
sub
imul
imul
or
cwtl
jl
add
or
adc
mov
xor
adc
adc
lcall
mov
lcall
js
cmp
fstpt
pop
lods
fsubr
jno
xlat
cmp
fstpl
pop
les
loop
dec
cmp
xlat
lods
outsb
jnp
clc
insl
insb
arpl
mov
dec
out
xor
xor
call
movsl
mov
dec
cmpsl
or
negb
xor
jns
inc
mov
fbld
outsl
dec
or
mov
insb
sub
mov
or
mov
sbb
mov
jbe
lahf
insl
lcall
hlt
stos
shrl
negb
in
mov
test
hlt
and
fdiv
iret
cmpsb
jno
fsubl
mov
out
xchg
adc
dec
pop
xor
cmp
int3
and
add
xchg
das
cmp
push
xchg
inc
inc
dec
inc
or
mov
ret
mov
loop
push
repz
sbb
and
jno
and
sub
push
cli
and
jnp
sub
inc
pop
test
sbb
mov
jmp
jnp
nop
gs
imull
add
push
sti
or
aad
lea
pop
or
inc
dec
xchg
mov
jb
rolb
xchg
imul
pop
lahf
mov
inc
enter
idivl
into
push
stc
popa
xchg
push
mov
add
test
jo
adc
ret
pop
mov
xor
fidivrs
jb
aad
push
jno
and
mov
lods
mov
es
mov
fmul
mov
jecxz
aam
cmp
inc
out
and
push
rorb
jmp
xchg
sahf
imul
outsl
push
xor
add
outsl
nop
dec
sbb
cmp
iret
lds
lea
cwtl
cwtl
dec
rol
adc
pushf
push
pop
mov
aam
hlt
xchg
push
mov
inc
inc
addb
aas
pusha
inc
xchg
sub
dec
fistpll
rcrl
scas
mov
push
dec
push
rorl
mov
cmp
lds
mov
sbb
fstps
dec
cld
mov
inc
mov
sub
push
and
aaa
or
xor
xor
add
push
lods
pop
stos
mov
cmp
insl
fildll
cmc
add
aam
sub
movsb
dec
invd
clc
into
insl
outsl
lods
lret
leave
loopne
cmp
push
arpl
adc
sub
fcomp
jmp
cli
xchg
repz
out
mov
jl
fisttpl
insl
push
dec
mov
in
xchg
mul
and
sub
ret
pop
data16
aaa
imul
cld
cmpsl
lea
push
mov
fcom
sub
jnp
out
mov
pop
inc
arpl
xchg
shlb
add
lock
mov
pop
and
in
lahf
lock
inc
mull
add
shlb
mov
push
adc
test
jns
out
jg
sbb
adc
xor
aaa
cli
sahf
xchg
xchg
push
push
sbb
dec
cmpsb
addb
and
lret
std
dec
fdivs
push
mov
dec
push
test
jne
mov
inc
mov
js
dec
ret
outsl
xor
psadbw
cld
jge
lahf
push
adc
cmpsb
dec
ret
push
aam
sub
sub
jb
dec
push
movsb
cs
and
jecxz
xchg
mov
jecxz
add
cwtl
es
dec
dec
jle
mov
pushf
push
pop
aaa
mov
in
in
pop
mov
xor
jo
or
mov
mov
add
fucomp
push
lds
ret
cmp
flds
mov
xchg
jne
mov
cmp
outsl
jge
ficoms
xor
inc
popf
dec
arpl
test
idivb
mov
mov
jns
add
inc
int
mov
mov
out
fstpt
mov
cmp
shll
inc
add
mov
or
ljmp
stc
cmp
adc
dec
cmpsl
aaa
out
pop
fimuls
jmp
mov
inc
adcb
lock
popa
mov
pop
jl
out
dec
and
outsl
ljmp
cmp
sbb
loop
in
inc
lods
add
jmp
ljmp
scas
and
fucom
ror
mov
inc
hlt
mov
inc
not
loopne
lds
add
xchg
pop
jg
jle
call
movsl
lcall
imul
addl
dec
stc
jne
sbbb
sub
jge
mov
pop
subb
loope
test
cmp
movsb
push
jo
pop
fs
pop
idivb
xchg
inc
inc
shlb
lret
mov
mov
xchg
mov
mov
les
xchg
movsl
fcoml
pop
incb
cmc
adc
xor
test
in
fistpll
sub
sub
divb
xchg
pop
jo
add
stos
sub
push
add
add
aad
adc
pop
test
inc
aaa
iret
fnstcw
cmc
pusha
stos
xchg
popa
arpl
test
add
fadds
sub
bnd
cli
leave
adc
push
jno
lods
in
fidivrs
outsb
mov
xchg
sbb
dec
push
sbbb
sar
loop
pusha
mov
mov
pop
mov
jb
test
mov
outsb
inc
ds
cmp
add
add
out
sub
imul
adc
push
icebp
dec
movsl
fcompl
stos
pop
movsl
mov
test
push
sbb
jo
ds
mov
repz
data16
pop
jb
and
cmp
addr16
xchg
fistl
adc
push
or
pop
fwait
out
mov
jnp
and
enter
mov
aaa
jge
inc
in
xchg
and
pop
pop
std
lret
test
add
jnp
dec
sbb
add
cltd
cmp
stc
out
outsb
mov
or
xchg
sti
and
fdivrs
adc
xor
out
inc
loop
add
outsl
imul
out
jge
inc
push
test
adc
xchg
jecxz
ljmp
in
and
leave
jecxz
inc
mov
fnstsw
fcomps
outsb
or
out
gs
test
push
push
sbb
rorb
stc
or
std
pop
rol
repz
inc
int
cmp
lds
pop
or
jns
dec
mov
lret
int
xchg
mov
push
mov
leave
or
fists
fisubrl
push
sarb
mov
lahf
out
and
fidivrl
sub
test
stos
inc
add
enter
push
popa
add
add
rcrb
add
adc
jb
xor
sahf
jle
sub
enter
test
push
xchg
add
das
sbb
mov
ficoms
roll
das
or
cli
out
aam
xor
and
inc
and
in
mov
fnstsw
or
or
jg
dec
call
push
cmp
xchg
jge
loope
xchg
mov
fs
stc
mov
popf
or
push
shrb
mov
movsl
repz
ljmp
dec
ljmp
das
mov
inc
cmpsb
pop
push
push
adc
fimuls
mov
pop
mov
jo
dec
test
xor
and
in
out
test
cli
fsubl
je
shrb
pop
out
clc
ficoms
mov
cld
inc
mov
das
outsb
sbb
std
lahf
rdtsc
push
repz
js
test
adc
sub
test
adc
rolb
cmpsl
and
lea
pop
insb
add
dec
pop
ljmp
cmp
dec
xor
test
push
in
jmp
ja
int
pushf
mov
or
lahf
cli
sahf
jg
jae
in
fiadds
adc
or
stos
add
shlb
repnz
inc
daa
or
sub
subl
std
test
xchg
popw
or
rorb
sub
out
sbb
or
scas
jp
adc
fisttps
dec
stos
mov
adc
daa
mov
inc
jb
jno
ret
mov
std
inc
xchg
mov
insb
add
cmpb
xor
cmp
shrb
pop
adc
add
push
jae
xor
enter
push
mov
xchg
and
inc
int
shll
pop
outsb
mul
pop
sub
insb
pusha
dec
pop
subb
fnstsw
mov
mov
xor
and
in
and
fldln2
arpl
lahf
fsubrl
je
jmp
add
dec
cmp
lret
mov
xchg
fisubs
clc
pop
push
fcmovb
inc
xor
sbb
fldl
popa
or
pusha
sbb
sti
iret
insb
jae
mov
jge
and
iret
outsl
and
push
iret
mov
sahf
lock
std
iret
repz
scas
insb
inc
push
mov
fidivrl
shl
inc
bound
stos
xchg
imul
insl
jne
mov
mov
jg
inc
cmp
add
sbb
add
mov
cwtl
xchg
xchg
adc
add
cmp
mov
add
sahf
push
addl
adc
imul
ss
in
mov
jmp
adc
push
stos
push
xchg
sbb
outsb
scas
andl
mov
add
adc
test
lods
jns
xor
aas
lcall
ja
mov
mov
push
pop
roll
inc
inc
sub
call
imull
flds
jle
add
jle
aad
mov
bound
mov
fistpl
add
jbe
fucomi
repnz
mov
sbb
push
int3
xor
push
mov
jb
mov
sbb
in
rcrb
cmp
cwtl
lock
mull
or
scas
jae
test
inc
jns
out
mov
xchg
addb
sbb
dec
xor
push
test
outsl
inc
and
dec
pop
sar
lods
sti
pop
scas
or
insl
cmp
cmp
pop
mov
testl
mov
sbb
stc
jge
or
icebp
sub
loopne
push
and
call
mov
mov
push
xchg
sbb
nop
mov
out
push
stc
and
xor
xor
mov
add
ds
rcll
pushf
gs
adc
fiadds
in
mov
jle
fcoms
loope
adc
adcl
sub
fcoms
out
jecxz
mov
cwtl
orl
mov
aaa
shll
push
ret
aaa
ss
adc
inc
jle
loopne
shll
jl
xchg
int
jge
inc
adc
lahf
int3
shr
adc
outsb
es
push
inc
stc
leave
out
cs
mov
mov
or
sbb
or
push
cwtl
cmpsl
push
jnp
shl
pop
mov
add
fiadds
cmp
and
fsubrs
stos
lcall
pop
pop
mov
and
lods
mov
das
scas
xchg
mov
pusha
dec
mov
xlat
call
dec
xor
fs
sbb
add
and
jo
inc
jno
inc
xchg
js
mov
inc
push
fucomi
pop
inc
cmp
inc
stc
mov
mov
fdivl
sub
adc
pushf
cltd
daa
bound
lea
adc
and
in
mov
xchg
adc
sarb
or
pop
imul
add
sub
shrl
mov
inc
dec
lret
leave
pop
stos
dec
xchg
sub
dec
cltd
int3
xchg
lds
add
aaa
xchg
mov
jl
sbb
inc
inc
stc
sbb
sub
fidivrs
cmp
mov
add
inc
inc
daa
cs
push
push
fs
adc
add
add
ljmp
leave
xchg
push
xchg
fbstp
pop
cmp
and
mov
bswap
sbb
jnp
xchg
lahf
fidivrs
rclb
jno
aam
pop
mov
push
std
inc
fdivrs
mov
mov
mov
jb
aam
repnz
sub
sbb
int3
adc
lds
sub
outsl
hlt
scas
fstpt
rcrl
jle
mov
jb
push
cwtl
sar
popf
cmpsl
mov
push
stc
sti
loope
jns
jb
push
jge
xchg
data16
pusha
lahf
mov
sbb
or
mov
jnp
mov
adc
pop
or
pop
mov
ret
into
adc
imul
fdivs
popa
mov
fsubrp
jno
mov
roll
push
psrld
push
mov
sub
xchg
xor
imul
fwait
mov
cltd
and
cmp
cld
test
push
int3
push
push
loop
xchg
popa
xchg
jle
add
das
and
mov
in
mov
mov
scas
add
pushf
imul
jl
fdivs
shll
imul
lods
push
mov
and
xchg
mov
push
mov
das
cmp
fisttpll
lock
faddl
mov
jl
sub
lea
xchg
mov
pop
xor
rcll
or
jne
stc
pop
loopne
mov
loope
jl,pt
adc
ffree
loop
into
dec
shlb
jb
jno
cmpsb
ljmp
into
imul
popa
dec
loope
cld
pop
lfs
cmp
pop
sti
xchg
aas
pop
xchg
push
pop
stc
adc
lea
mov
jne
and
pop
xor
xchg
in
xlat
pop
test
enter
fistpll
jno
pop
jnp
xor
mov
scas
in
jb
mov
xor
pusha
out
cmp
sbb
push
sbb
mov
sub
jb
js
mov
ljmp
rorl
mov
fwait
iret
addr16
sarl
shl
xchg
adc
outsl
push
es
cmpsb
push
mov
mov
fsubl
lret
in
std
lret
je
sbb
xchg
inc
cltd
les
and
pop
sbb
add
pusha
test
mov
xchg
mov
in
mov
inc
lcall
mov
adc
gs
adc
mov
sub
ja
addr16
shll
loope
shr
jbe
scas
and
jl
lock
js
imul
or
aad
bound
mov
dec
adc
or
imul
jb
mov
xor
mov
adc
mov
pop
out
int
movsl
sbb
or
cld
in
aam
xlat
scas
jg
test
cmc
call
add
lods
add
cmp
pop
dec
push
shlb
mov
aam
enter
pop
lock
dec
xchg
in
xchg
es
push
mov
sub
cmp
push
iret
lods
divl
dec
push
jle
rcr
add
in
cld
push
stc
sub
jno
xor
mov
mov
xchg
dec
and
add
sub
push
or
xor
nop
xor
rcl
pop
lock
test
xchg
clc
mov
sarb
xchg
push
mov
lret
in
cmp
xor
test
repz
call
lods
pop
jb
xor
hlt
ret
in
cli
mulb
shlb
add
mov
pop
out
popf
xchg
aad
jge
or
insb
loopne
xor
lods
fmull
shll
xor
dec
mov
xor
or
mov
stos
mov
jbe
sub
xlat
out
mulps
adc
lods
into
mov
or
sub
inc
fwait
and
out
pop
into
xor
cmp
gs
cmp
in
sahf
outsl
pop
and
cmp
test
adc
jg
xchg
pop
mov
lock
pop
xchg
add
mov
aaa
repz
repz
push
ret
dec
or
add
and
push
shll
inc
ficomps
adc
pop
mov
aam
jns
push
loopne
mov
or
clc
adc
sbb
lock
outsl
je
xchg
pushf
push
cmpb
xchg
pop
scas
sub
out
mov
adc
push
cltd
push
inc
fs
cmp
shrb
or
mov
aad
sarb
cmp
fmull
xchg
ret
loop
push
mov
push
cmp
mov
adc
mov
or
add
adc
fimuls
cmp
mov
mov
jae
pop
sbb
xor
loope
mov
mov
xor
lcall
je
mov
dec
adc
pop
test
mov
and
push
jns
shl
xor
stos
mov
lds
cmpl
xlat
pop
scas
push
adc
sub
xchg
push
scas
fs
mov
xorl
cwtl
and
loop
jg
mov
cmp
xor
mov
aas
adc
dec
and
frstor
pop
nop
mov
xchg
cld
lret
pop
mov
ret
sub
jl,pt
scas
mov
cltd
push
out
mull
out
mov
push
testl
pop
dec
scas
subl
jecxz
xorb
insl
xchg
outsl
mov
inc
jns
jae
jmp
sub
outsb
repnz
insb
mov
decl
test
insb
filds
stos
lods
rorb
les
adc
mov
test
sub
dec
cmp
ja
jge
mov
cmp
mov
xor
loop
scas
and
pop
stos
mov
mov
sti
jo
mov
lcall
cwtl
push
inc
pop
add
int3
sub
cbtw
xlat
mov
push
adc
mov
adc
jmp
dec
push
push
add
testl
mov
xorl
call
jbe
leave
lock
in
loop
pop
mov
cmp
insl
out
in
rcrl
mov
call
data16
jne
aaa
pop
mov
add
xlat
jl
jb
mov
lret
arpl
mov
lock
sub
lods
cmp
nop
aam
outsb
inc
enter
fildl
pop
or
shl
adc
sub
cmp
rcl
or
imul
add
stc
adc
xor
pop
mov
into
add
mov
js
sub
pop
xorb
stc
sbb
ljmp
out
lret
ja
lds
inc
jl
jno
lods
rcrb
inc
stos
jge
xor
loope
jb
bound
pop
es
jnp
mov
dec
or
xchg
rolb
xlat
out
mov
movsl
movsb
mov
jb
push
and
pop
mov
roll
or
data16
xchg
rcll
jns
dec
xchg
scas
adc
sahf
sub
push
inc
push
jl
les
cmpsb
pop
jno
and
pop
mov
mov
lcall
in
xchg
sahf
sbb
adc
lea
xor
sahf
dec
pop
inc
or
cmp
fnstenv
xor
mov
xor
repz
push
std
jne
orb
jnp
repz
fsubr
xlat
rcrl
lahf
pop
out
lea
xor
shll
xchg
in
push
mov
and
cmp
popa
cs
iret
mov
sbb
xlat
xchg
or
loope
test
or
mov
cmc
jne
nop
add
adc
arpl
inc
inc
xor
cli
push
lret
pop
dec
orb
enter
push
lcall
repnz
mov
xor
lock
mov
cmc
mov
mov
scas
je
pop
in
enter
sub
hlt
movsb
add
mov
int3
jae
ds
fwait
mov
ret
mov
dec
inc
arpl
cmp
inc
cli
add
inc
pop
clc
or
pusha
jb
leave
xchg
mov
sbb
mov
push
adc
cmp
sub
pushf
test
jl
push
push
and
mov
lret
and
insl
jne
in
imul
add
pushf
lret
cmpsl
pop
aas
inc
stos
dec
push
jns
into
lea
mov
push
jbe
fmuls
sub
dec
xchg
push
je
mov
xlat
or
insb
andb
insl
test
enter
push
inc
add
mov
xor
or
fld
or
and
xlat
out
xor
pop
pop
int
and
xor
out
jns
ljmp
sbb
cmp
xor
xchg
mov
cmc
mov
shll
fcompl
cld
or
scas
mov
pop
cmp
xchg
out
lahf
jne
push
mov
cmpsl
mov
mov
lock
jl
xor
add
push
aam
aad
add
notb
mov
add
lret
bound
add
or
or
add
mov
sub
inc
cmp
div
out
std
sbb
and
or
xor
cmp
movsl
aam
mov
add
adc
jmp
dec
adc
stc
jmp
sbb
push
idiv
xchg
push
insl
fmuls
dec
test
sbb
subl
pop
xchg
outsl
mov
xor
shrb
adc
inc
shr
inc
int
pop
das
or
xor
out
add
sbbl
adc
movsl
jns
mull
das
xchg
jae
repnz
vmovupd
js
adc
out
inc
fimull
sub
sbb
push
mov
lods
and
xor
out
cmp
into
imul
not
fdivrs
jmp
xchg
insl
outsb
rcrl
xchg
mov
jg
pop
add
pop
cmpsl
hlt
adc
lret
insb
mov
inc
jno
inc
jbe
and
out
xor
jae
cmp
punpckldq
push
xchg
mov
std
pop
and
sarl
fs
pop
popf
jp
jae
jmp
pop
imul
xchg
xchg
jo
insl
mov
pop
add
dec
ret
pop
push
pusha
sub
imul
clc
add
xorl
push
sbb
gs
jg
fnsave
push
insl
dec
loopne
jge
rorb
sub
out
cmp
dec
scas
jecxz
mov
pushf
xchg
jge
enter
jbe
sub
jb
sti
add
sbb
and
out
ss
mov
mov
jp
xor
aad
mov
mov
mov
ficomps
hlt
dec
movsl
pop
adc
pop
jmp
add
pop
jns
fbstp
test
xchg
lods
cmpsl
cmp
and
adc
mov
cltd
lods
mov
mov
dec
cmp
into
frstor
aad
test
js
lret
xor
add
ds
std
sub
aaa
add
lcall
mov
addb
add
jp
cwtl
cmpl
out
add
mov
cmp
jo
jp
mov
das
inc
mov
cmc
jp
inc
add
push
lahf
jge
subl
and
push
scas
sbb
and
mov
dec
dec
jl
pop
adc
add
call
mov
mov
std
inc
lret
dec
ret
mov
cltd
pop
movsb
push
or
mov
addb
ret
add
mov
jp
es
jl
fwait
push
movsb
and
ror
fcomps
or
mov
ficompl
cmpsl
mov
xor
lret
pop
sub
test
or
pop
push
pop
sub
ret
xchg
fnstsw
adc
stos
sbb
push
in
push
jae
mov
insl
mov
int3
cld
jle
jae
mov
sbb
movsb
dec
pop
jb
xor
inc
cmpsb
in
mov
into
std
adc
push
stc
adc
jmp
mov
sub
push
test
or
stc
je
jns
incl
insb
mov
jbe
pop
stos
enter
sbb
push
sarl
stos
xor
arpl
mov
sub
mov
subb
mov
hlt
mov
push
xchg
xor
aad
dec
sbb
mov
aad
cs
sub
aad
scas
push
scas
mov
out
scas
jb
sbbl
arpl
push
rcl
or
and
push
inc
push
dec
sarl
sbb
and
out
fcom
and
or
inc
or
sbb
ret
icebp
mov
add
mov
dec
jle
or
out
sub
daa
push
out
fwait
push
mov
sub
out
insb
jge
xor
sbb
sub
mov
cli
or
xchg
movsb
sahf
jns
ret
leave
pop
jmp
sbb
push
test
xor
outsl
jmp
add
adc
rcl
pop
mov
cmp
xchg
xchg
cmp
or
mov
mov
jg
xchg
stos
cli
xor
lcall
scas
test
or
aas
testb
fimuls
ljmp
adc
lcall
iret
mov
and
aad
adc
cmp
outsl
roll
fdivl
cwtl
dec
mov
dec
dec
cmp
in
dec
inc
lods
push
add
insl
adc
push
pop
icebp
jg
and
lcall
cmc
cmpsl
cld
cmp
cmp
xchg
push
icebp
stos
mov
notl
mov
das
pop
mov
add
push
xor
lcall
cmp
and
or
dec
stos
nop
cmpl
stc
enter
outsl
or
mov
clc
adc
movsb
jne
adc
push
loop
test
add
popa
lret
sbb
push
mov
fwait
shlb
adc
xorl
lea
addr16
cmp
ret
fdivl
insl
sub
and
scas
mov
pop
incl
lods
mov
push
iret
lret
pop
jmp
insb
gs
stos
add
or
add
mov
xchg
ljmp
fldl
or
test
pop
mov
adc
sahf
test
jb
or
mov
cld
mov
jl
data16
mov
xor
push
jae
pop
in
inc
push
pop
xchg
fildll
push
test
pop
iret
xchg
out
xor
xchg
inc
push
in
sbb
scas
sub
jns
xor
jne
ret
mov
xor
mov
out
sbb
iret
je
xchg
dec
movq
sbb
sub
fsubrs
insb
lods
icebp
push
loope
jp
jno
pop
cmpsl
dec
pusha
xor
pop
shr
push
pop
gs
outsl
rcl
mov
sti
pop
mov
adc
cmpsb
cmc
push
sahf
shlb
scas
aas
mov
in
test
cli
icebp
xor
sub
test
mov
fwait
cli
adc
rclb
sbb
lret
fidivl
inc
int
mov
int3
jo,pt
push
cmp
test
mov
idivl
into
dec
fimuls
sarb
popf
inc
adc
xchg
insb
jmp
sub
dec
dec
lcall
dec
out
test
inc
xchg
push
dec
adc
add
fwait
inc
iret
dec
movsb
push
inc
mov
sub
push
out
stos
push
xlat
push
xchg
and
adc
leave
cltd
icebp
cwtl
int
ja
js
loop
popf
js
out
push
enter
cwtl
test
out
xchg
sub
mov
mov
fists
ret
or
fs
mov
cmp
pop
imul
pop
add
and
cld
arpl
and
mov
push
fdiv
in
add
fisubl
jbe
mov
aaa
xchg
xchg
in
adc
adc
push
xchg
pushf
fptan
cmc
pop
stos
lret
hlt
dec
or
jb
lret
dec
jnp
xor
sti
ds
xor
xchg
in
xchg
cli
push
and
cmp
ret
mov
cltd
fbstp
mov
loopne
cltd
arpl
jl
outsl
sub
inc
inc
mov
std
mov
add
movsb
xor
imul
xchg
hlt
out
fnsave
shll
mov
dec
inc
inc
subl
jmp
sub
sub
push
adc
mov
mov
in
and
stos
dec
std
ret
mov
mov
xor
mov
fidivrs
les
add
fdivrp
or
out
ss
clc
xchg
sbb
leave
sbb
sub
cmc
aad
insl
add
pop
movsb
pop
inc
lahf
or
sbb
pop
in
stc
push
inc
add
and
mov
dec
popf
or
popf
cmpsl
shrb
jecxz
and
mov
xlat
in
dec
xchg
sub
cld
movsb
pop
push
mov
push
push
pop
cmc
mov
cli
test
in
fmuls
inc
movsl
mov
add
das
lcall
push
rcl
inc
or
arpl
xchg
push
aas
scas
add
stos
push
fs
push
lret
and
pop
in
into
hlt
fs
sarb
mov
add
adc
pusha
outsl
dec
stc
rcr
lds
cli
sbb
sub
push
mov
push
popf
push
mov
jns
cmp
mov
call
scas
push
adcb
sbb
push
andl
dec
mov
xor
popa
shlb
fidivl
adc
inc
mov
adc
ret
fbstp
inc
cmp
jo
jne
push
xchg
ja
jo
cmpsl
ret
das
lock
popa
fisttpl
popl
mov
lods
xor
sbb
sbb
fistpll
pop
mov
push
pushf
cld
jbe
mov
mov
xchg
mov
xchg
push
or
lret
int
das
xchg
cmp
push
out
les
fdiv
pop
mov
xchg
loop
int
mov
push
stos
push
sbb
decb
xor
adc
mov
out
xor
add
or
sub
shl
xchg
jecxz
add
inc
inc
jecxz
pop
ror
icebp
jecxz
adc
fldcw
and
and
or
xlat
imul
pop
cwtl
lock
pushf
insl
lock
sub
adc
leave
hlt
mov
jne
popf
dec
xor
jnp
or
enter
push
mov
loopne
mov
shlb
mov
test
call
stos
push
xchg
jbe
push
cmc
hlt
mov
lea
addb
xchg
movsl
pop
data16
pop
mov
inc
push
jno
lods
fdivrl
sti
xor
cmpsb
jb
ret
in
cmp
jne
adcb
jg
ja
xchg
loop
cmp
and
test
stos
out
mov
mov
xor
pop
sti
aaa
push
xor
add
push
cmp
inc
and
mov
js
call
add
add
inc
iret
jmp
cmc
pop
pop
push
push
enter
and
dec
int3
outsl
decl
lea
mov
or
cli
nopl
sub
add
fs
mov
je
ret
add
stos
inc
or
in
jecxz
mov
lret
mov
sub
outsl
push
pop
shll
into
jne
xlat
and
or
cltd
mov
movsl
loop
xchg
mov
sub
notl
or
push
je
push
outsb
inc
mull
pusha
aad
ds
dec
repz
dec
roll
inc
popf
loopne
xor
fcmovnb
lret
mov
xchg
mov
pusha
cmp
sbb
stos
test
mov
add
dec
sub
xlat
iret
pushf
fcomps
outsl
sbbl
das
repz
mov
repz
mov
in
push
mov
jp
inc
or
insl
lret
daa
out
rcl
les
mov
in
inc
adc
push
rcrb
jb
mov
lods
dec
sti
jne
mov
sarl
je
pop
leave
mov
or
out
adc
xchg
fsincos
push
js
loop
jg
or
imul
mov
subb
sbb
sti
sbb
sahf
and
lods
lret
jl
jae
out
addr16
pop
inc
or
iret
mov
push
cmp
jno
jno
lret
fadds
pop
movsl
sbb
ljmp
data16
mov
or
pop
jmp
mov
jno
cmp
mov
dec
inc
repnz
xchg
xor
mov
icebp
mov
pop
jecxz
or
cwtl
in
mov
push
mov
xchg
xchg
out
fstpt
xor
test
sti
iret
cmp
rorl
pop
sbb
je
orb
pmaxsw
andb
stos
sub
inc
push
dec
out
sarl
sub
shrd
in
movsl
push
sub
psubsw
rcrb
ss
mov
outsl
imul
xchg
test
notl
cld
fiaddl
jle
mov
sti
mov
add
lret
mov
popa
je
xor
cltd
sub
adc
cld
jae
mov
mov
pop
hlt
push
xchg
push
and
add
jge
xor
sti
inc
shrl
outsl
rcr
in
scas
ljmp
mov
sbb
hlt
push
mov
inc
xor
jne
xor
xchg
arpl
stc
or
dec
pop
out
sbb
jns
jg
or
mov
dec
sbb
ret
jmp
xor
in
adcl
out
mov
mov
xor
xor
enter
fsubrs
dec
sub
shrb
fisubs
push
das
cmp
aad
test
xor
pop
test
es
dec
xor
jp
insb
pop
inc
lahf
cli
int3
bound
push
mov
into
mov
cmpsb
add
push
mov
pop
sbb
inc
shll
mov
cmp
imul
lcall
inc
and
mov
add
xchg
push
mov
or
xor
xor
int
jno
add
into
test
imul
je
dec
xor
lret
pop
or
imul
pop
cmp
call
xchg
outsb
or
and
je
cmpsb
dec
xlat
arpl
loopne
repnz
lds
mov
test
out
lods
cmp
pop
int3
cmp
addl
jge
xlat
sub
jae
or
dec
inc
or
js
sub
lcall
mov
or
mov
aas
add
insb
je
fiaddl
or
inc
lea
jmp
push
fiaddl
xchg
sbb
repz
jo
mov
jge
mov
add
xor
pop
out
imul
jb
pop
arpl
xchg
mov
es
inc
xor
mov
cmpsl
mov
sub
imul
cmp
loope
mov
lret
sbbb
lea
lahf
adc
sub
lret
dec
sti
adc
mov
dec
test
cmpsl
mov
xor
or
shlb
xchg
mov
ds
bound
std
add
cmp
add
sub
and
loop
or
pop
std
jle
inc
dec
jecxz
sti
cmpsb
daa
lods
xor
fs
jnp
sbb
cld
fdivr
adc
mov
imul
lock
inc
ret
jl
cwtl
lcall
repnz
cli
pop
in
cmp
out
jp
xlat
sub
mov
mov
in
in
mov
pop
mov
aas
dec
ss
in
xor
in
pop
sub
adc
adc
outsl
or
stos
dec
call
or
out
addr16
popa
add
das
cmp
mov
mov
lret
inc
gs
fldt
inc
arpl
imul
sarl
or
xor
cmpsl
pushf
fwait
int3
mov
mov
xchg
inc
std
mov
pusha
cld
jl
add
xchg
test
xor
dec
lods
out
push
sahf
data16
adc
idiv
das
jecxz
and
cmp
dec
pop
lds
nop
mov
mov
subl
push
jbe
decl
xorl
push
push
sub
lret
mov
insb
and
fwait
jmp
cmp
jl
xchg
das
les
mov
aas
clc
sub
xor
adcb
sub
movsb
jmp
jmp
sbb
dec
jmp
scas
inc
mov
dec
mov
imul
insb
pop
cmpsb
test
subb
pop
push
jmp
jmp
mov
inc
push
xor
sbb
fcmovnb
sbb
inc
and
enter
mov
xor
mov
push
mov
outsb
je
test
stc
mov
xchg
and
inc
jl
inc
mov
mov
mov
pop
xorb
add
cmc
add
dec
loopne
push
push
inc
cmp
inc
aaa
or
out
xchg
push
leave
or
lods
loope
stos
lea
lret
cmp
and
jg
fstpt
xchg
call
rcr
pop
lret
push
jle
mov
sub
andl
fwait
dec
jne
pop
rcrb
jecxz
test
in
xor
jo
addr16
mov
js
lods
das
das
xor
aas
jb
mov
stos
out
inc
aam
xchg
cmp
adc
mov
mov
push
push
xor
in
pop
mov
push
push
xor
mov
js
xchg
jp
shrl
sub
scas
jle
ss
pop
fwait
pop
fsubr
add
xlat
mov
lahf
mov
ss
add
pop
iret
jns
push
fildll
push
mov
mov
mov
inc
jb
cltd
lea
gs
xchg
pop
pop
subb
fs
test
ss
cmpsl
mov
jmp
cs
dec
les
cmp
mov
and
js
xor
adc
pop
cmp
mov
int
test
jg
loope
pushf
stos
lock
xchg
decl
pop
xchg
imul
sbb
neg
fwait
in
std
or
movsl
jge
mov
pandn
scas
jae
sti
cmp
mov
mov
mov
push
sbb
outsb
mov
sbb
sub
insb
jp
cmc
push
stos
mov
and
out
dec
pop
ljmp
loop
scas
jl
scas
adc
inc
cmpxchg
addr16
lods
lock
jge
xchg
sub
pop
jb
repz
cmp
pop
pop
repz
cld
in
fwait
jo
push
sub
rcl
ficompl
aad
movsb
les
fidivl
cld
sub
mov
mov
mov
les
xor
inc
ss
popf
jns
sub
inc
or
lea
push
jns
addr16
mov
and
shll
xchg
into
call
shl
mov
int
imul
lcall
les
sbb
push
insl
push
jbe
pop
add
fmuls
aam
test
xchg
mov
bound
adc
mov
or
mov
dec
in
xor
insl
movsb
adc
xor
shr
sbb
inc
nop
rclb
int3
add
pushf
pop
sbb
cmpsl
sahf
int
divl
push
xor
cld
and
inc
cmp
xchg
fidivs
in
lret
pop
jge
mov
mov
and
cmp
shll
sbb
jae
xor
fbld
mov
fsubr
jge
and
stc
or
outsl
es
shll
daa
cmp
xor
add
enter
fiaddl
mov
or
push
shrl
mov
popf
data16
push
xchg
xor
incl
aaa
out
add
stos
mov
aaa
jmp
inc
dec
ss
clc
in
repz
xor
sub
and
shl
repnz
dec
es
fcmove
inc
add
pop
xor
rolb
sub
or
pop
lea
and
xchg
inc
dec
testb
negb
jge
or
xchg
xchg
mov
shr
aad
call
inc
pop
adc
and
cli
mov
iret
push
mov
mov
dec
jmp
fwait
imul
mov
push
xor
push
sarl
mov
outsb
adc
mov
xor
sarl
mov
jb
std
notb
add
daa
ljmp
xchg
inc
pushf
sub
or
mov
hlt
ss
clc
mov
xor
xlat
cwtl
xor
mov
jg
dec
xchg
cmpsb
mov
cmpsl
lods
into
adc
lea
cmp
jle
rclb
leave
jb
jecxz
outsb
loope
into
lcall
cmp
add
fcoms
jle
mov
out
inc
repnz
mov
ss
data16
xor
jle
push
mov
data16
sbb
aam
jmp
mov
fists
push
xorb
adc
lret
dec
xchg
bound
mov
faddl
mov
inc
popa
lods
inc
iret
jbe
call
and
gs
lods
fstpl
test
pop
mov
mov
ljmp
in
inc
adc
adc
xchg
out
jae
cmc
add
or
imul
mov
adc
dec
rorl
popf
ds
or
sub
ret
pop
xchg
lcall
adc
jmp
out
mov
pop
cmpsb
neg
orb
mov
jnp
adc
mov
inc
adc
addr16
mov
xchg
push
loopne
incb
cmp
adc
push
shrl
xor
repnz
rorb
leave
pop
xchg
or
bound
loop
testl
in
and
jbe
lcall
xor
jg
cmc
mov
jne
shl
xor
dec
mov
xor
fs
or
push
adc
inc
xor
jo
xor
and
mov
adc
gs
rclb
jbe
add
xor
out
cmc
lock
and
scas
cmc
push
xchg
jbe
adc
outsb
adc
add
cmp
adc
push
xor
cmp
dec
mov
or
mov
loopne
in
or
test
mov
cmpsb
sbb
stos
ja
mov
out
fistpll
jg
ret
push
push
xchg
pop
cltd
sub
sub
mov
xchg
out
repz
jle
lcall
push
mov
out
repz
or
ret
sub
movsl
stos
cmp
call
ja
repnz
xchg
aad
jl
in
fdivr
lahf
xchg
sub
dec
mov
sub
stos
xorb
xor
jge
mov
and
xchg
int
adc
push
add
andl
in
loop
mov
cmpsl
cmc
jae
xor
ljmp
rolb
add
sub
lahf
lret
lret
lret
jo
in
addl
stc
leave
ljmp
push
clc
popf
iret
xchg
loop
and
shll
add
mov
in
sbb
hlt
sarb
add
push
ss
adc
push
je
push
das
sbb
shll
mov
sahf
pop
loopne
mov
mov
dec
mov
fisubrs
andl
repz
adc
inc
push
pop
pop
adc
inc
lds
fwait
aad
movsl
mov
add
ret
in
lret
sub
cmpl
ljmp
mov
jp
pop
mov
cmp
mov
or
xor
xchg
fs
popa
or
lahf
arpl
mov
xchg
ret
cmp
call
push
jle
adc
ljmp
data16
cwtl
and
repz
push
xchg
int3
jg
fsubrl
test
outsb
pop
aaa
dec
in
pop
lahf
inc
sbb
into
das
mov
hlt
cmp
js
sub
cmc
out
pop
jle
lret
sbb
sub
xor
jp
cmp
dec
adc
lcall
cmp
jnp
ret
add
add
mov
lret
rcrl
cld
cmp
aad
sub
imul
and
push
mov
pop
mov
lahf
lcall
cwtl
pop
xor
mov
or
mov
icebp
loope
jns
and
xor
sub
clc
movsl
jns
ja
inc
ljmp
stos
sbb
fmull
cmp
add
jo
subl
insl
fcmovnb
push
fstpl
inc
mov
out
ja
or
mov
mov
les
pop
xchg
or
pop
les
push
dec
xor
lds
ljmp
leave
push
aaa
add
xchg
jne
sti
movsb
addr16
icebp
inc
inc
shlb
jbe
imul
adc
into
xchg
sbb
jecxz
out
stos
test
nop
pop
dec
call
push
adc
pushf
xchg
mov
sbb
stc
hlt
and
fdivs
dec
mov
sub
outsl
in
and
in
pop
in
jno
cmp
pop
pop
jnp
repnz
ret
mov
sub
adc
test
mov
mov
mov
outsb
dec
mov
xchg
subb
dec
mov
inc
mov
sti
out
jne
ror
lret
fidivrl
aas
test
das
pop
jne
mov
mov
add
xor
cmpsl
pop
push
mov
pop
mov
and
xor
loope
pop
dec
push
jp
jge
call
sub
notl
mov
adc
push
ljmp
mov
xor
stos
push
push
fiadds
jb
nop
mov
iret
test
and
pop
rclb
pop
rcrb
pusha
add
test
or
popa
gs
mov
mov
xchg
sub
xchg
and
xchg
into
movsb
dec
clc
mov
fdivrs
sub
mov
add
push
pop
icebp
pop
adc
xchg
iret
repnz
shlb
movsb
shll
enter
stos
ds
and
stos
ja
mov
cmc
in
jb
and
sbb
mov
push
call
loope
mov
sti
pop
inc
and
and
dec
out
and
push
push
adc
jbe
cwtl
jnp
fnstenv
dec
shlb
jl
popf
cmp
jno
bound
fnstcw
fdivl
or
cmpsb
call
jno
popf
cs
movsb
pop
or
ss
jo
es
and
out
and
push
imul
fucomp
mov
imul
jle
lahf
jns
or
mov
popa
inc
in
fisubs
pop
sbb
lahf
cmp
out
cmp
gs
repz
pop
inc
inc
mov
addr16
xor
movsl
ja
adc
pop
es
mov
inc
cmpsl
xchg
and
xchg
cmpsb
mov
enter
lods
ja
jae
pusha
out
mov
sahf
push
daa
jecxz
mov
ficoms
xchg
aas
adc
cmp
fcoml
mov
aas
mov
jge
pop
dec
mov
shrl
pusha
pop
lret
jge
push
add
out
pop
cmp
push
and
lock
clc
mov
sbb
and
testb
stos
daa
ljmp
mov
fidivl
mov
dec
cmc
mov
or
fisubl
and
jg
or
xor
xor
jg
mov
add
and
dec
sbb
sub
or
jae
mov
xchg
test
insb
cmc
sbb
cli
inc
ja
adc
iret
pop
jae
mov
arpl
cmp
rcrb
pusha
sahf
mov
xadd
fisubs
jo
into
repz
dec
xchg
push
je
adc
stc
and
jecxz
mov
cmp
iret
cwtl
mov
out
pop
and
pop
inc
mov
adc
cmp
testb
cld
cld
mov
fldt
sti
mov
sub
jnp
inc
pop
xchg
dec
adc
adc
dec
jge
xchg
das
ds
inc
and
jae
repz
iret
out
push
sbb
pop
dec
add
xchg
xchg
dec
ljmp
frstor
inc
cmp
xchg
jno
sbb
push
push
insb
cmpsb
mov
or
dec
std
mov
and
or
xchg
dec
test
sub
sbb
movsl
and
push
mov
cmp
lret
adc
aad
testb
cmp
ficompl
test
pop
push
mov
ret
lods
add
xchg
add
movsb
jecxz
or
int3
fildll
dec
addb
jecxz
invd
shld
inc
and
imul
xor
fstl
mov
xor
pop
daa
movsl
and
push
xor
in
bts
mov
iret
out
insb
gs
fnstenv
ja
pop
push
sbb
pop
mov
ljmp
mov
push
jo
jne
cld
std
push
inc
jmp
bswap
pop
out
push
mov
ja
adc
movsl
ret
call
int3
add
cmp
fmul
lock
inc
in
iret
hlt
jecxz
mov
jp
mov
lds
cmpsb
outsl
xor
jno
jge
or
adc
mov
mov
mov
cltd
aad
jecxz
adc
pop
loope
sub
xchg
addr16
jp
and
jo
loope
out
adc
nop
xchg
fs
int
addr16
jle
out
adc
xchg
mov
sub
call
mov
xchg
and
xchg
and
dec
arpl
out
dec
or
or
jmp
cmp
push
cmp
add
sahf
jns
addr16
out
xor
cmp
movsl
pop
mov
mov
aaa
in
imulb
or
scas
arpl
and
loop
mov
or
jo
mov
adc
pop
aad
rclb
loope
mov
getsec
xchg
mov
rclb
inc
and
adc
cmp
lcall
mov
pop
xchg
inc
and
jmp
mov
cltd
jecxz
or
mov
fsubs
dec
push
pop
addr16
dec
mov
rol
fninit
popl
jg
xor
mov
jne
jb
sahf
or
cmpl
mov
mov
mov
test
sub
pop
mov
push
movsl
lcall
insl
inc
jnp
sbb
mov
pop
jecxz
out
rorl
inc
nop
sbb
cmp
lock
sub
jb
in
adc
push
test
ja
test
lahf
inc
jge
enter
leave
js
icebp
stc
lcall
lret
mov
lods
cmp
es
fistpl
push
iret
out
mov
insb
inc
push
movsb
out
sti
test
aas
push
jg
jg
cmp
mov
hlt
dec
mov
sbbb
push
cmp
and
jns
or
and
loope
div
lahf
jecxz
inc
aad
fldcw
mov
xchg
outsb
mov
xor
aaa
test
xor
mov
inc
fildll
inc
or
push
add
sbb
adc
adc
enter
and
mov
lret
addl
loope
inc
pusha
xchg
mov
out
sahf
jle
sub
dec
add
adc
fldenv
test
ret
imul
inc
xor
xchg
jno
je
mov
adc
gs
arpl
mov
leave
mov
inc
insl
cmp
dec
mov
cmp
dec
lret
push
pop
jg
sbb
ss
add
sbb
sub
mov
mov
loope
xor
pop
outsl
mov
pop
dec
lds
xchg
pop
pop
sahf
test
loop
adc
jp
imul
mov
ret
jmp
mov
divps
or
inc
clc
aam
jnp
and
hlt
sub
call
cwtl
dec
lcall
gs
fsubrp
inc
pushf
sub
stc
cld
dec
adc
inc
out
out
aaa
sub
xchg
mull
stos
and
lret
or
mov
xlat
inc
arpl
mov
in
std
dec
jo
scas
rclb
jne
cs
pusha
rolb
dec
jle
lock
loope
je
adc
xor
std
movsl
mov
inc
sbb
xorb
aaa
not
hlt
fs
int
cwtl
jl
mov
add
ljmp
fwait
stc
fisttpl
push
into
xor
adc
ja
fcmovbe
mov
sti
cmc
insl
pop
mulb
addr16
testl
lret
pop
cmp
xor
int
push
or
sub
std
popf
bound
inc
repnz
lret
dec
jo
mov
dec
insl
jmp
mov
inc
or
jnp
jp
dec
cmp
stos
icebp
icebp
stos
pop
aad
mov
imul
and
sbb
outsb
jge
fs
js
adc
mov
pop
ljmp
mov
ficoml
pop
cld
loop
jo
lock
ret
xor
jae
not
sub
mov
test
je
cwtl
or
xchg
sbb
pop
and
mull
test
scas
pushf
mov
test
jp
mov
ljmp
jb
xor
out
xchg
pop
add
mov
movsb
jmp
xchg
push
test
call
std
push
into
or
pop
outsb
scas
dec
dec
testl
push
push
xor
xchg
mov
or
lds
mov
push
loopne
outsl
in
xchg
push
mov
icebp
xor
loope
pushf
or
mov
xor
sti
movsl
in
adc
xchg
dec
or
nop
adc
cmc
add
jne
gs
adc
xchg
and
xchg
cs
test
outsb
movsb
pusha
jmp
fdivrl
mov
pop
xlat
adc
pop
fldcw
stos
sub
sub
in
repnz
shll
aad
fisttpll
pop
xlat
jp
pop
aam
cltd
push
inc
or
adc
jbe
mov
imul
loope
jmp
rorb
repnz
and
push
bound
xchg
repnz
xlat
fildl
ret
loope
pop
or
repz
push
pop
adc
or
daa
push
mov
fwait
inc
insb
xor
pop
pop
mov
push
push
mov
or
add
jns
sub
mov
outsb
mov
sbb
lods
jge
xchg
scas
and
sbb
int
push
imul
add
ljmp
jae
pop
lahf
fld1
out
adc
into
pushf
addb
xchg
cltd
sarl
dec
jne
shlb
mov
push
mov
mov
cld
dec
imul
push
outsl
xlat
rcll
stc
sbb
jecxz
dec
mov
sub
aaa
xlat
imul
loopne
dec
imulb
add
cld
imul
push
jae
lahf
jmp
aaa
xchg
sti
fcoml
mov
xor
push
sbb
pop
push
lcall
add
dec
es
add
sub
xor
stos
xor
mov
pop
jecxz
push
fdivp
mov
pop
mov
mov
fnstenv
leave
clc
icebp
cwtl
insb
pop
mov
push
mov
xchg
outsl
xchg
jne
mov
fisubs
cltd
pop
fmuls
outsl
outsl
scas
je
sub
adc
cmpsb
insb
andb
or
imul
or
fsts
punpckhbw
mov
roll
cld
xor
outsl
mov
gs
iret
leave
mov
out
cmp
test
mov
dec
mov
inc
cld
pop
jecxz
xor
insb
pop
bound
insl
inc
fildl
lods
cmp
xor
lret
or
xchg
std
push
mov
es
in
adc
and
inc
pop
movsl
mov
inc
ret
add
dec
cmp
out
mov
xchg
sbb
jecxz
imul
lcall
jl
lods
adc
test
in
jg
in
lea
aas
mov
into
adc
rolb
cltd
mov
xlat
add
cs
jle
dec
icebp
mov
pop
clc
mov
rorl
cmp
adc
shrb
loope
sbb
pusha
in
icebp
sbb
pextrw
push
outsb
inc
lret
ljmp
pop
adc
pop
hlt
ljmp
jo
push
loop
stos
fwait
lds
outsb
push
ret
sahf
mov
clc
xor
or
xor
loope
daa
mov
pop
ret
ss
pushf
out
cmp
add
and
mov
mov
js
mov
lahf
and
loop
and
es
in
adcb
sub
xlat
in
lret
rolb
push
mov
pop
orl
repnz
jae
xlat
mov
or
test
sarl
xor
or
dec
cs
clc
fs
jnp
lds
and
in
adc
and
push
jmp
mov
enter
xchg
cltd
rolb
cmc
clc
jbe
jae
pop
mov
push
mov
or
add
cmp
lock
fsubl
jno
iret
fidivl
pusha
add
or
sub
andl
xchg
addr16
aas
sarl
std
inc
leave
add
leave
adc
and
imul
sarl
xor
repz
sub
push
cmp
out
imul
popa
cli
xchg
lds
jns
ja
loop
stc
cmpsb
cli
xlat
cmp
xchg
arpl
mov
adc
ja
sub
cmp
cmp
shrb
cwtl
out
scas
daa
sub
pop
mov
lea
rcll
int
test
xchg
xor
push
xor
scas
xchg
fwait
cltd
cmpsl
repnz
rclb
mov
and
mov
mov
dec
jbe
pop
dec
mov
fnstenv
sub
outsb
inc
dec
fisubrl
sbb
leave
cwtl
cmpsl
mov
int3
outsl
mov
pop
pop
xor
leave
outsl
js
pop
push
xchg
insb
cmp
scas
sti
clc
jmp
ret
mov
movsl
mov
pop
cmpsl
push
icebp
jg
adc
lea
scas
call
ljmp
inc
lock
cwtl
imul
sbb
jne
stc
cmp
dec
mov
subl
insl
sub
outsb
mov
xchg
std
add
xor
sub
call
cld
loopne
jb
lea
mov
in
xchg
pop
jge
adc
pop
pop
aam
sub
test
jmp
mov
mov
int3
nop
mov
cmp
dec
and
mov
in
lods
pop
dec
scas
fldt
cwtl
xchg
cmp
push
jecxz
jecxz
incl
movsl
out
movsb
in
insb
adc
pop
sub
adc
sbb
test
inc
or
inc
inc
lret
jns
cs
fdivr
cmc
push
mov
mov
cmp
cmp
sub
cld
and
dec
sti
pop
in
mov
stos
in
push
imul
sahf
jle
pop
and
and
outsl
addl
or
add
fistpll
fs
jecxz
pushf
movsb
jno
mov
dec
push
out
aas
push
clc
lock
inc
pusha
out
js
jb
fwait
sbb
int
sbb
aad
add
cltd
xchg
ret
insb
dec
movsb
cmp
addb
mov
pop
mov
cmpsl
add
inc
pop
sbb
adc
mov
adc
sbb
sbb
test
dec
jmp
nop
imul
jns
mov
ret
sbb
outsl
setbe
mov
add
mov
rclb
xchg
movsb
or
out
jl
sub
jecxz
nop
push
int3
sub
popf
mov
stos
xor
xchg
std
aaa
add
pop
imulb
in
or
pop
mov
mov
aaa
push
mov
shlb
dec
arpl
in
sub
cmc
mov
mov
jns
rorl
jg
jne
jb
sahf
push
push
out
je
xchg
mov
lock
imull
adc
shrl
nop
in
cmp
mov
and
jge
adc
and
mov
pop
add
jno
lods
in
int3
push
scas
decb
movsb
sbb
xor
jae
inc
roll
dec
push
daa
insl
xor
std
push
push
jecxz
ljmp
daa
lds
pop
inc
shrl
repz
fiadds
push
mov
fstpt
xlat
lea
jecxz
inc
bound
int
push
mov
test
pop
cmp
push
xor
mull
cmc
shl
jno
aas
inc
clc
adc
dec
sbb
dec
inc
pop
call
jg
adc
sub
sahf
repnz
sbb
push
and
inc
outsb
in
push
mov
pop
movsl
cmpsb
inc
sbb
out
insl
add
aaa
out
pop
sbb
mov
mov
out
stc
jne
shrl
and
fbld
enter
add
insl
pop
test
or
adc
arpl
sbbl
adc
enter
sbb
leave
add
sub
dec
jg
mov
enter
fcmovne
mov
or
sub
sub
and
push
xor
adc
xchg
and
sub
rcrl
cmp
addr16
stos
jnp
cli
std
das
shlb
cmp
insb
outsl
aad
pop
repz
je
inc
mov
mov
roll
xor
dec
pop
test
sub
xor
mov
dec
pop
xor
pop
ret
fsubrs
jbe
sub
jg
xor
xrelease
jl
imul
insb
pop
jns
outsb
scas
stos
and
pushf
push
push
sarb
jae
sbb
xchg
mov
inc
jmp
push
mov
sbb
cmpsl
imul
mov
or
mov
roll
loop
sbb
pop
mov
mov
jbe
pushf
mov
dec
iret
or
lret
pop
das
jg
cli
lock
push
imul
mov
imull
es
in
imul
and
mov
xchg
pusha
ljmp
mov
ret
sti
inc
ja
xor
xchg
cmpsl
mov
mov
mov
mov
movsb
ljmp
mov
test
out
sti
fnstenv
xchg
pop
or
mov
jno
lods
and
jns
push
mov
push
sub
shlb
sbb
mov
lret
jnp
pusha
mov
jmp
or
aaa
mov
rclb
cmp
nop
xor
sub
jmp
data16
mov
dec
jo
adc
fnstenv
sub
shlb
subl
subl
cwtl
arpl
cmc
sub
jg
pop
xchg
in
nop
mov
or
mov
lds
rep
sbb
dec
mov
imul
test
cld
push
cli
out
ja
adc
jno
mov
dec
mov
loope
pop
loope
test
lds
lea
repz
lret
popa
orb
cs
mov
les
shrl
dec
lcall
mov
call
push
dec
clc
xchg
stc
cmp
mov
cmpsb
in
mov
pop
push
inc
pop
enter
or
in
insb
mov
lods
mov
jne
add
jmp
movsb
test
lock
jbe
push
jmp
js
movsl
inc
push
mov
mov
stc
add
mov
in
lret
mov
inc
adc
sub
adc
mov
sub
jecxz
ror
sti
cwtl
fs
enter
mov
mov
addl
xor
shll
arpl
jecxz
and
mov
sbb
out
pushf
and
add
xor
aaa
stc
sti
loope
or
sti
pop
xchg
fbld
xchg
stos
fistpll
int3
inc
ficoms
adc
data16
pop
jne
sbb
push
insl
mov
mov
sub
jg
or
arpl
lds
mov
cs
mov
stc
push
inc
pop
imul
mov
mov
repz
ret
inc
test
cmc
mov
int3
or
inc
int
mov
lcall
ret
cld
mov
jae
jne
mov
pop
mov
adc
cld
mov
lcall
test
xor
in
pop
adc
js
pop
push
push
popa
test
cwtl
adc
mov
mov
add
xorb
cwtl
jb
rorl
push
aam
and
cltd
xchg
jl
stos
stc
out
jns
sub
lock
das
movsb
sub
cs
push
jnp
mov
xchg
adcb
mov
jge
push
dec
adc
inc
push
push
mov
mov
cli
aaa
out
leave
int3
xor
sbb
jg
iret
cs
jl
ficoml
xchg
xor
outsl
and
jne
cmpsb
sub
dec
ficompl
and
imul
popa
pop
adcb
rclb
inc
insl
stc
outsl
sbb
mov
repz
je
nop
repnz
call
adc
sarb
jae
int3
lcall
cmp
mov
ror
sti
orps
test
fwait
adc
mov
and
mov
push
movsb
xor
xchg
or
sbb
mov
insl
push
shlb
or
push
imul
adc
sbb
jo
xor
idivl
in
cli
clc
in
xorl
outsb
rep
lea
aad
imul
mov
xorb
or
push
dec
imul
mov
test
jmp
je
cmp
ret
std
mov
pop
dec
dec
aaa
xlat
std
xor
push
fstpl
les
adc
test
xor
lahf
cld
mov
mov
cmpsl
adc
adc
out
ds
cmpsb
je
hlt
push
icebp
push
sbb
jl
fimull
push
test
hlt
jg
lcall
push
cmpb
sarb
shlb
sub
cmp
jns
scas
add
inc
out
aad
in
adc
mov
xchg
xchg
push
jmp
fsts
pop
cmpsb
xchg
inc
lret
out
fmul
sub
add
mov
pushf
pushf
mov
icebp
scas
cmpsb
mov
repnz
cmc
das
dec
imul
mov
sub
add
ret
mov
xlat
divb
aas
dec
lds
dec
mov
cmpsb
lahf
jnp
nop
adc
sub
push
jg
sub
cmp
mov
and
add
add
jmp
mov
adc
popa
cmp
jnp
rorb
pop
cmpsb
call
xor
push
std
and
addb
loopne
imul
push
call
mov
pop
jns
stc
xchg
adc
mov
inc
sub
xchg
movsl
stc
rorb
out
insl
or
cmpsb
lock
loopne
or
adc
mov
dec
test
xchg
jmp
mov
dec
push
lret
xor
pop
adc
int
mov
cld
and
movsb
and
mov
mov
mov
ret
mov
xchg
sub
or
pop
stc
jbe
mov
test
jb
push
adc
push
mov
leave
push
adc
sbbb
inc
xor
jg
call
lret
adc
mov
push
mov
ljmp
repnz
adc
pop
inc
mov
lret
mov
icebp
mov
lock
out
inc
add
push
repnz
sub
inc
es
pop
enter
test
fs
dec
jb
lds
cmp
loopne
out
loop
add
addb
adc
shl
push
inc
cmpsb
mov
sub
in
in
jne
mov
mov
cmp
fnsave
pop
mov
test
sub
loope
cli
cld
add
adc
pop
sbb
add
mov
mov
sbb
in
mov
shll
aad
mov
sbb
ret
dec
mov
push
jle
add
adc
sarl
sbb
jmp
fwait
test
cmp
pop
enter
mov
cs
pop
mov
cmc
aad
push
divl
mov
loop
sub
mov
xchg
push
inc
mov
cmp
xchg
sbb
scas
lret
jg
sbb
repnz
es
cmpsb
mov
push
shlb
inc
ljmp
push
sbb
add
popf
ja
popf
fldenv
in
andb
jno
mov
sbb
subb
mov
lods
out
ret
add
mov
jno
aas
push
hlt
in
aaa
iret
jno
outsb
orb
not
lea
loope
outsb
sbb
out
cmp
mov
stos
xchg
mov
jbe
mov
pop
cmp
inc
shrd
mov
pop
jbe
dec
mov
movsl
dec
mov
inc
loop
shrl
jmp
hlt
pop
in
aam
xor
mov
adc
insl
stos
cmp
sbbb
mov
mov
jecxz
fldl
or
sbb
pop
or
and
pop
mov
imul
and
mov
test
push
push
dec
lods
in
xor
inc
add
jbe
inc
outsl
add
sbb
or
std
shrl
jnp
xchg
imul
mov
ret
sbbl
ret
icebp
in
orl
cmp
sub
repnz
psubusb
add
cmp
push
pop
and
stos
ret
mov
pop
cmc
push
fists
rcr
test
outsl
push
mov
call
ds
sub
cmp
adc
sti
mov
cwtl
cltd
repnz
into
ja
aaa
shlb
adcb
ret
cs
jp
dec
xchg
cmp
xchg
shrb
mov
lds
mov
es
or
add
adc
pusha
pop
aas
cmp
inc
notb
fs
sub
clc
pop
int3
dec
xor
ret
int3
mov
incb
lcall
repz
repz
in
sub
pop
add
sub
add
sbb
cmc
or
inc
sub
in
aaa
sbb
out
inc
sbb
fstl
sbb
scas
shll
push
gs
adc
jbe
int3
mov
jo
push
sbb
xchg
jnp
bnd
add
cmp
imul
in
arpl
bound
mov
dec
clc
mov
dec
mov
adc
and
ljmp
sub
pop
xor
dec
dec
adc
lret
lret
icebp
inc
mov
adc
cs
dec
cld
scas
cmp
outsb
test
inc
push
dec
mov
and
add
lret
xchg
push
enter
jbe
fisttps
mov
cmp
int
insb
pusha
subb
scas
pop
lcall
jg
in
mov
cmpsb
in
cld
jbe
dec
sub
ljmp
push
jp
mov
push
and
jbe
lret
pop
and
testb
mov
es
and
jo
push
mov
xchg
aaa
inc
push
add
xchg
xchg
jge
in
mov
mov
and
les
sbb
mov
mov
insb
imul
xor
xchg
es
into
jno
fistl
pushf
sahf
fidivrs
pop
and
or
notl
cld
insl
xchg
movsl
and
cmp
out
sbb
mov
inc
in
push
cmp
jmp
lods
or
jns
or
dec
xor
add
dec
jo
sub
push
mov
adc
adc
jge
in
outsb
push
xchg
fcoms
daa
dec
sub
in
ffreep
mov
aaa
inc
cmp
xor
lahf
insb
imul
js
cmp
dec
jno
pop
orl
stc
inc
shlb
and
cltd
xchg
mov
xlat
je
sub
rorb
xchg
and
mov
lahf
mov
int3
push
inc
or
push
dec
cmpsl
dec
mov
lea
int3
pop
adc
jb
or
sbb
push
push
jmp
sub
inc
sbb
rorb
push
jbe
cmpsl
push
mov
into
notb
and
movsb
ret
or
inc
fdivs
push
mov
push
pop
in
mov
jl
and
aaa
outsb
mov
sbb
mov
ljmp
clc
push
fisttps
in
add
scas
lahf
sub
out
cmp
inc
jg
fistl
loop
add
out
in
in
icebp
cmp
xchg
xor
pop
mov
ljmp
sbb
sub
push
fsubrs
xchg
out
out
xor
cs
push
mov
and
lds
std
cmc
inc
sbb
cli
xlat
out
in
xchg
lret
add
in
sbb
cmp
movsb
cmp
sbb
pushf
enter
leave
in
bound
popf
ss
inc
clc
stc
faddl
mov
in
lret
cwtl
and
jle
cmp
jae
or
ud1
jmp
xorb
in
dec
int3
jns
sarl
cmp
mov
dec
pop
jnp
sub
dec
cmp
repnz
aad
adc
int
lahf
iret
or
idivl
cmc
call
scas
xor
cmp
cmp
imul
xorb
dec
movsl
jne
aas
mov
sub
rcll
adc
dec
shll
adc
inc
jp
aad
xchg
add
lret
mov
and
call
adc
sub
mov
dec
fsubrs
movsl
xchg
mov
in
stc
repz
mov
ret
cltd
in
imul
add
mov
outsb
or
dec
rorl
aaa
lods
lock
les
andb
inc
scas
cmp
push
and
std
insl
mov
fs
fmulp
cmc
fs
push
movsb
out
mov
test
or
subl
pusha
inc
sub
mov
inc
or
ss
lret
in
cmp
data16
xchg
js
add
je
pop
loope
cmp
ss
jecxz
enter
inc
es
push
pop
fsubp
mov
fiadds
mov
ss
clc
dec
xlat
inc
daa
pusha
insb
xchg
scas
popa
inc
adc
push
mov
xchg
pop
add
jne
dec
mov
mov
dec
jbe
jmp
lret
add
jmp
daa
pop
mov
add
cmpsl
mov
cmp
push
or
lods
and
push
cmpsb
jns
aam
inc
lock
popa
addr16
jb
mov
cmp
jae
mov
aaa
mov
enter
cli
test
mov
xchg
mov
pop
clc
mov
push
push
test
mov
mov
and
mov
push
sbb
test
sub
mov
push
xor
sbb
aaa
dec
outsb
cmp
repz
rclb
scas
mov
mov
in
outsb
jle
enter
dec
dec
call
add
mov
pop
sbb
mov
in
nop
rcl
scas
jb
hlt
negl
jne
xchg
cmpsb
aas
loope
and
mov
mov
stc
addr16
push
jle
fstl
int3
movsb
jns
subl
inc
add
cmp
mov
cmp
dec
push
fadd
add
jp
pop
push
or
and
jb
test
dec
adc
loop
cmc
pop
xchg
aam
sbb
or
enter
xor
sub
xor
xor
push
sub
push
adc
cmp
enter
cmp
add
xor
or
pop
pop
mov
jbe
mov
mov
mov
cmpsl
mov
jns
bound
xchg
mov
adcb
lea
nop
shll
sbb
ss
outsl
scas
ret
cmpsb
adc
sbb
clc
xor
pop
js
lret
faddp
and
inc
cmc
addr16
push
bound
insb
into
dec
and
cltd
and
mov
jnp
adc
sbb
loopne
sub
adc
add
dec
inc
addl
push
fdivr
jge
add
sub
pop
test
enter
imul
push
lds
shrb
icebp
stos
loop
cs
xor
loope
ss
lds
insl
xchg
sub
shlb
xchg
jge
mov
jle
dec
or
inc
xchg
mov
lret
pop
cmpsl
mov
mov
lret
mov
sbb
jmp
xlat
adc
push
lahf
mov
pusha
sub
cli
aad
cmp
rcr
jb
mov
mov
inc
fidivs
or
mov
mov
jns
mov
jecxz
sti
ficoml
and
cmp
lcall
test
cmpsb
fcmove
adc
fiadds
jb
mov
mov
addr16
orb
add
popa
movb
outsl
xchg
cs
shll
aaa
push
roll
mov
in
xorb
loop
jecxz
xchg
rorl
mov
cmp
repnz
shll
dec
notb
enter
adc
xchg
psubq
adc
xchg
sub
inc
cld
bound
fwait
jb
adc
leave
scas
hlt
or
cwtl
and
mov
dec
or
loope
pop
mov
push
sbb
aas
pop
and
addl
repz
dec
andb
loope
jmp
in
xor
xchg
comiss
cmp
shlb
data16
cld
cltd
sbb
cli
imul
stc
lret
in
shl
xor
dec
push
hlt
int3
rorb
mov
mov
imul
repz
push
jae
lret
repz
push
mov
aad
call
inc
js
pushf
xor
aad
bound
jbe
pusha
fsubrl
rclb
test
dec
mov
pop
sbb
push
dec
lahf
lds
mov
inc
je
pop
pop
movsl
js
inc
pushf
sub
mov
jnp
rorl
inc
add
mov
xor
push
xchg
jmp
add
or
ds
mov
scas
push
lods
les
xor
scas
andb
ficoml
jp
jge
nop
cmp
cmc
imul
nop
das
mov
andb
lret
arpl
enter
adc
pop
pusha
or
cmp
or
aaa
sbb
mov
lods
push
mov
cld
out
cs
cli
adc
push
int
pop
jg
xor
sarb
and
dec
inc
cmp
out
jmp
and
cmp
mov
orb
xor
fs
stc
push
adc
je
cmc
and
stc
sarl
jecxz
adc
cmpsl
in
jle
jno
daa
sbb
testl
adc
jb
or
rorl
movsb
inc
mov
pop
out
lahf
dec
jecxz
mov
aad
mov
jp
sbb
dec
xchg
mov
insl
mov
sub
jo
insb
ret
xor
test
nop
ss
jecxz
iret
xchg
dec
dec
lea
pushf
insb
fwait
shl
mov
insl
mov
inc
xchg
jb
add
mov
lods
outsl
xchg
jbe
sbb
test
movsb
xchg
sahf
add
iret
out
loope
jo
and
js
sar
xchg
adc
in
cmc
lret
outsl
addr16
push
cmp
adc
mov
cmp
shrb
call
add
call
sub
dec
lods
ret
cmp
jnp
pop
mov
or
inc
add
rolb
xor
ja
subl
adc
cmp
inc
cmp
xorb
and
cmp
cmp
test
lret
dec
fldt
and
imul
stos
into
adc
fstps
push
jmp
bound
cs
sti
sub
sbb
fdivl
jle
jp
out
xor
cmpsl
fs
rcr
jne
sub
fstl
mov
int
add
in
std
jl
cmp
lcall
out
data16
into
jbe
dec
inc
pop
pop
pop
in
fucom
fs
clc
aas
jmp
sbb
les
push
mov
insl
add
je
lcall
pop
test
sbb
mov
popa
push
jne
or
mov
mov
push
mov
ret
std
push
mov
push
push
mov
pop
xchg
out
and
pop
inc
jae
cmpsb
and
inc
out
adc
fcomps
jg
lahf
mov
cmc
in
dec
jl
loopne
out
sbb
adcb
stos
lock
in
fmul
adcb
push
mov
int3
out
xchg
adc
jecxz
repnz
call
sub
push
mov
jle
call
stc
mov
out
aam
adc
test
cld
out
call
sbb
adc
push
pop
xor
push
sbb
add
addr16
mov
jecxz
std
mov
mov
movsb
or
mov
in
sub
push
cmp
out
push
jae
cs
jl
dec
cmpsb
or
sbb
dec
xor
stos
and
and
lret
xchg
mov
push
mov
outsb
lret
push
jns
mov
int3
push
inc
fistps
mov
movsb
jecxz
dec
xor
rolb
into
cmp
rcll
andl
sarb
scas
scas
test
fmuls
add
or
hlt
mov
mov
in
shrb
dec
pop
mov
inc
in
adc
xor
sti
into
inc
mov
aad
dec
inc
aas
jo
cmpb
adc
inc
sarl
add
mov
pop
ja
dec
sbb
fwait
or
sub
jb
fucomip
push
mov
stos
cmp
cmc
lret
mov
mov
dec
inc
clc
jbe
adc
arpl
mov
movsb
mov
cmp
scas
mov
cmp
pop
ret
loop
xchg
mov
xlat
xchg
cld
mov
in
loopne
push
cltd
jnp
jnp
cli
push
or
pop
adc
adc
and
fsincos
dec
jo
and
add
repnz
add
inc
in
push
ret
push
pop
pop
mov
inc
mov
xor
adc
cmp
pop
addr16
xor
push
popl
fidivl
inc
sub
add
pusha
adc
dec
and
mov
test
xchg
stos
scas
call
test
mov
mov
add
pop
subl
inc
inc
adc
mov
repz
pushw
insb
mov
imul
cmpsb
ficoml
ret
adcb
mov
jmp
ds
cwtl
lods
push
arpl
shrb
or
push
push
xchg
dec
lods
ljmp
pushf
dec
imul
xchg
jne
cmp
sub
or
bound
out
std
jns
and
mov
mov
sub
pop
sbb
or
pop
or
es
sub
mov
dec
pop
icebp
loop
cli
imul
or
inc
outsb
das
mov
pop
sub
mov
push
hlt
in
cmp
mov
or
int3
aaa
xor
cmp
add
stc
ja
test
xor
lcall
popf
jl
inc
rolb
mov
ja
xchg
outsb
and
mov
sub
xchg
and
les
sti
mov
pop
sub
xchg
mov
add
pop
daa
data16
mov
hlt
movsl
scas
or
push
pop
hlt
xchg
cmp
push
and
mov
jno
daa
mov
pusha
leave
sarb
cmc
ja
addr16
bound
jns
scas
xchg
iret
movsb
mov
std
and
fnstenv
push
loope
cmp
and
and
xor
xchg
arpl
stos
add
pop
int3
cltd
out
es
inc
mov
js
repnz
add
testb
fists
cli
es
pop
jno
dec
mov
stc
push
mov
data16
jno
test
stos
outsl
and
and
adc
jo
in
fistl
cmp
test
mov
clc
mov
outsl
lea
pop
cld
cmp
imul
in
lcall
xchg
cmpsb
or
jge
clc
and
sbb
adc
xchg
rcl
jp
fists
pop
dec
mov
mov
cwtl
shlb
add
push
sbb
jmp
dec
inc
jb
sub
mov
and
dec
pop
popa
test
mov
mov
or
adc
cs
inc
and
lock
xlat
xor
insl
cmp
scas
test
add
loope
in
and
sbb
in
aam
mov
mov
adc
popf
pop
xchg
ljmp
pop
mov
mov
jmp
lcall
pop
inc
xor
xchg
data16
lret
sbb
mov
cmp
cmp
xor
pop
sarb
jl
adc
in
inc
xchg
jae
xchg
shll
mov
xchg
adc
jp
sub
pop
add
rep
xor
das
mov
scas
insl
jecxz
jb
jb
int
jp
jmp
cmpsl
test
add
std
les
aas
dec
add
sub
addr16
or
push
popa
jge
faddl
lea
mov
loopne
in
mov
das
scas
mov
ss
mov
dec
movsl
or
mov
cmp
dec
jg
add
sbb
mov
xor
jmp
out
and
repz
insb
xchg
or
jns
and
aad
imul
ss
movsl
out
shr
loope
add
fnstcw
outsl
sub
cmp
dec
add
inc
loopne
loope
jb
mov
idivb
inc
cmp
pop
mov
mov
xor
xor
into
push
sbb
popf
rorl
xlat
aas
loope
out
icebp
bound
and
mov
adc
pop
movsl
std
js
je
fs
fisubs
push
ja
pop
sti
pop
incb
add
ret
push
mov
mov
xchg
cmpsl
sbb
sarl
gs
and
and
xchg
loope
jg
ret
adc
dec
and
cmp
popl
mov
add
cmp
push
cmp
sub
imul
popf
in
aam
pop
mov
mov
and
cmp
inc
jb
sbb
dec
cmc
aad
jle
mov
cmpsl
xor
mov
mov
cmp
hlt
loop
push
in
adc
rcrb
lock
adc
loop
cmp
pushf
rorl
mov
aas
add
mov
jle
cmp
lds
fmuls
dec
notb
test
fnstenv
rolb
jmp
push
mov
das
ss
mov
imul
mov
mov
dec
pop
shll
cmp
mov
test
jae
cmc
push
clc
in
sbb
neg
lock
or
mov
mov
sbbl
pop
ss
jo
ret
imul
dec
jmp
mov
push
fildl
add
mov
cld
cmp
inc
fwait
cmpsb
scas
addr16
fsubrl
mov
push
mov
pop
cmp
cmc
bound
pop
inc
repnz
dec
lret
test
imul
lret
mov
mov
sub
stos
aas
clc
fldt
sahf
cmp
neg
sbb
sbb
dec
clc
mov
add
mov
pop
mov
sbb
mov
or
dec
or
stos
lock
cmp
shrl
inc
into
stos
push
mov
pop
aam
psubd
inc
pusha
add
and
cmp
scas
push
pop
cli
clc
cmp
mov
bound
test
imul
inc
aaa
push
clc
jo
outsl
lret
and
push
loopne
xor
or
daa
inc
xchg
inc
and
loopne
leave
adc
jne
push
movsb
adc
mov
adc
fiaddl
sbb
add
or
or
inc
loope,pn
xchg
cmc
push
aam
sbb
ds
and
xchg
sbb
pop
adc
pop
lret
loopne
cvttps2pi
in
stos
cmp
and
mov
mov
xchg
mov
test
inc
mov
dec
push
dec
dec
sub
icebp
and
xchg
ret
scas
out
in
push
data16
push
xlat
or
sbb
lock
sahf
pop
out
sub
jmp
jmp
add
mov
je
or
inc
and
into
cmpb
loopne
stos
xchg
scas
xchg
out
aaa
lea
jp
int3
data16
mov
jnp
sub
testl
shl
add
scas
mov
add
jbe
inc
out
arpl
arpl
mov
cwtl
fwait
mov
out
jno
cld
xlat
push
into
pushf
push
push
pushf
popf
stc
inc
xor
leave
xchg
push
fucom
dec
push
xor
pop
push
jbe
mov
sub
jp
xchg
int3
leave
mov
cmp
fdivr
push
dec
js
mov
jae
fcmovb
outsl
imul
inc
pop
and
sub
mov
or
mov
bound
mov
stos
mov
push
nop
cmpsl
sbbl
clc
icebp
lock
pop
sbb
dec
and
shr
lods
sub
push
sbb
xor
into
data16
jb
add
push
out
dec
ds
sbb
hlt
sub
ret
pop
sbb
ficoms
xor
dec
aas
mov
adc
mulb
sbb
mov
insb
mull
shll
rclb
jmp
mov
arpl
and
mov
dec
popa
aas
mov
stc
push
ret
mov
push
dec
mov
lods
lea
fnsave
push
xchg
or
or
or
icebp
jge
or
leave
iret
cmc
jno
inc
mov
mov
popf
mov
divl
lret
out
dec
icebp
stos
xchg
sbb
mov
pop
jmp
outsl
jp
test
subl
mov
add
int
mov
or
rcll
arpl
mov
mov
inc
sub
adc
pop
cmp
fmul
or
xchg
loopne
or
push
call
js
lods
add
test
rclb
int3
mov
xchg
int3
arpl
add
mov
cwtl
push
pop
cmp
push
es
pop
sti
fcompl
fsubrp
add
push
pushf
lahf
das
mov
in
mov
inc
cmc
movsb
or
scas
mov
inc
aas
mov
cs
repnz
outsb
inc
gs
aas
inc
incb
and
sbb
in
fstl
mov
adc
gs
or
out
in
add
or
out
decl
jecxz
inc
jb
xchg
cld
push
gs
inc
jo
jmp
std
xor
pop
inc
shr
ja
jp
loopne
jmp
scas
mov
lret
fimull
inc
jmp
aad
push
sahf
jnp
and
jle
pop
test
push
sbb
fistpll
mov
aaa
push
mov
adc
push
mov
cwtl
out
lock
loopne
pop
int
xor
mov
aam
enter
cmp
repz
ret
adc
aad
jmp
push
cwtl
inc
in
fistps
test
jae
out
push
add
in
adc
mov
xor
pop
lret
xchg
das
mull
imul
lds
adc
mov
aas
pop
fistps
adc
pop
stc
cmc
cmpsl
test
push
sbb
adc
sub
sahf
sub
xor
xlat
fwait
xchg
pop
pop
or
clc
test
mov
jge
jmp
sub
adc
fmul
pop
sub
iret
lahf
jge
mov
cmp
cli
pop
xchg
mov
test
sbb
pop
cmpsb
test
in
fdivs
test
out
lea
out
pop
sub
mov
orl
push
jno
out
mov
xchg
sub
mov
jbe
movsb
call
aad
xchg
test
push
or
cli
js
mov
mov
out
cld
lods
mov
adc
inc
sbb
push
sahf
mov
xor
scas
subb
test
and
leave
push
mov
xor
popf
sbb
xor
dec
mov
mov
cmp
push
pop
inc
adc
xchg
mov
push
mov
das
mov
stos
or
les
dec
mov
imul
lret
lret
sub
ret
incl
scas
mov
lret
mov
sub
pop
push
jb
add
xor
ret
sbb
jns
aas
sbb
add
mov
clc
xchg
leave
and
scas
sti
jbe
dec
cwtl
cmp
lods
sbb
xchg
inc
push
testl
xlat
and
dec
push
test
xchg
or
mov
notb
stos
cmp
test
adc
mov
mov
bnd
aaa
lret
call
int3
int3
lods
pushf
mov
push
push
fldt
xchg
lcall
in
xchg
dec
mov
dec
jmp
sbbl
ds
testb
xlat
jl
dec
push
xchg
pop
int
inc
sbb
decl
ja
lret
jmp
shl
mov
push
xor
push
insb
ffreep
scas
fbld
mov
sbb
movsl
das
mov
adc
push
sti
in
sbb
xchg
nop
ss
orb
push
jecxz
xor
negb
add
bound
xor
mov
aaa
push
clc
stc
mov
or
cmpsl
popf
inc
movsl
orl
sbb
lea
mov
dec
jns
rclb
inc
out
mov
gs
aad
sbb
pop
inc
es
test
imul
test
shrb
aaa
mov
inc
pop
jne
inc
cltd
fstpt
les
outsb
adc
dec
and
inc
lea
shr
out
cwtl
push
pop
xchg
ds
cmc
push
lock
lods
outsl
icebp
jae
arpl
enter
adc
push
xchg
mov
and
scas
aam
xchg
inc
nop
adc
sahf
and
jg
xor
int
xor
popl
pop
scas
cmpsl
ret
lahf
inc
add
inc
call
les
add
fimull
pop
xor
fmulp
mov
pop
lds
cmp
jnp
adc
cwtl
lret
dec
cmpsl
mov
cwtl
sub
sbbb
push
andb
sbbb
xor
orb
scas
testl
outsb
test
push
xor
xor
rolb
add
jp
and
sbb
pop
std
std
and
mov
test
outsl
scas
out
or
data16
dec
cmpsl
add
lahf
scas
xorb
xor
loope
mov
stc
mov
jbe
int3
cmp
leave
stos
data16
pop
ss
ficoms
stos
jae
mov
mov
xlat
fidivs
imul
xorl
jecxz
mov
jns
sbbb
pop
sub
cmpsb
mov
icebp
in
sbb
icebp
inc
inc
ja
jns
jl
push
lret
jecxz
xchg
jo
inc
push
adc
icebp
pop
shl
fistpll
jle
xchg
xchg
inc
mov
pop
mov
and
push
call
scas
rorl
data16
pop
movsl
or
adc
xor
std
mov
mov
fucompp
mov
rorl
pushf
cld
jb
mov
out
jb,pt
jnp
or
inc
lcall
sbb
cwtl
push
add
pusha
push
clc
push
leave
pop
rcrl
push
sbb
jno
pop
lret
push
push
andl
clc
jns
dec
lahf
data16
mov
push
pop
inc
lock
adc
popf
or
add
pop
outsb
pop
cmpsb
sub
subb
sbb
stos
lret
in
mov
jne
fs
add
test
jns
push
sub
xor
lods
dec
push
into
pop
cltd
push
ja
pop
adc
hlt
pop
roll
xor
cmp
push
std
or
or
and
and
divb
adc
sarl
cmp
adc
lret
fimuls
mov
push
movsl
scas
sbb
iret
mov
jp
sbb
and
sub
ja
cmpsb
inc
jae
dec
arpl
aaa
and
mov
js
shlb
hlt
and
mov
add
aam
mov
movsb
outsl
dec
shlb
fmuls
cmc
push
jne,pt
pop
negb
mov
rolb
xor
mov
mov
dec
cmpb
stos
cwtl
and
or
mov
lods
xor
jecxz
mov
repz
inc
push
mov
lea
stc
push
ja
xchg
pop
orb
test
mov
dec
jbe
ds
pop
push
pop
hlt
movsl
pop
out
sbb
push
mov
and
gs
fildll
inc
dec
cmc
ret
push
pusha
or
in
icebp
add
xor
mov
and
add
jne
fbstp
xchg
int
fildl
mov
std
dec
or
ficompl
bound
add
mov
jae
jecxz
adc
lret
imul
data16
add
xlat
das
xchg
sub
push
sub
xor
lds
lea
and
cs
or
dec
std
in
or
mov
jg
mov
sub
hlt
mov
or
call
scas
movsb
mov
sub
test
icebp
xchg
stos
or
lret
call
aad
subl
mov
xchg
imul
lock
lods
std
ljmp
out
test
inc
mov
int
or
js
xchg
cmpsl
cmp
and
mov
pop
and
cld
imul
sbb
leave
out
lods
jne
das
and
push
scas
adc
shlb
sbb
in
push
jbe
popf
int
xchg
scas
jne
xor
loope
fnstsw
clc
lret
or
push
mov
ficompl
ljmp
repz
cmp
cmp
imul
mov
cmpsb
arpl
sbb
sarl
loopne
jns
fmuls
es
inc
jnp,pn
mov
fnstsw
add
outsb
mov
arpl
or
xor
add
xchg
push
shlb
xor
lods
and
fmuls
inc
arpl
push
mov
mov
dec
loop
imull
pop
lret
enter
jl
out
dec
add
movl
lock
es
stos
xorb
ret
adc
add
mov
dec
xor
cmpsb
shlb
lret
popa
cwtl
xor
and
push
sbb
adc
inc
sub
jmp
jge
movsb
jle
pop
fiadds
adc
mov
cmpsb
sub
shrl
and
fadd
pop
dec
fwait
xor
xchg
push
or
pop
orl
pop
or
mov
cltd
push
sub
push
add
sbb
dec
adc
push
mov
repnz
out
push
cli
pushf
xor
ljmp
jne
dec
lret
lahf
pushf
bound
fsubl
jbe
pop
vcmpps
fstps
inc
mov
aaa
mov
fwait
es
repnz
subl
stc
leave
test
push
xchg
push
sub
inc
outsl
arpl
sbb
fdiv
mov
rcrl
add
pop
mov
out
jne
jb
popf
das
js
push
mov
sub
inc
pushf
in
andb
shl
inc
push
add
mov
dec
int
test
idiv
std
jle
push
dec
insl
adc
xor
sub
mov
dec
jno
push
add
pop
add
leave
aaa
lret
out
cmpsl
lahf
mov
sub
cld
cwtl
add
aad
rorb
mov
xchg
sub
lock
jge
insb
mov
imul
dec
xchg
jns
add
xchg
ret
mov
mov
add
sahf
cmp
sub
xor
fnstcw
lret
or
push
sti
push
lcall
sbb
mov
push
pop
inc
out
lcall
imul
movb
xor
aas
jbe
iret
shrb
sbb
fdivs
sbbl
dec
and
lea
lret
enter
leave
aaa
imul
divl
jae
shr
call
or
dec
and
dec
outsb
mov
mov
mov
cli
add
jnp
addl
cmp
push
pop
outsl
cld
adc
insl
and
test
mov
jae
mov
test
and
clc
dec
jb
js
les
aas
dec
sbb
ret
jb
push
mov
mov
bound
xchg
adc
sub
aas
in
and
and
in
jg
mov
fisubrl
lcall
dec
sub
fadds
cmpsb
and
outsl
dec
mov
popa
xchg
pop
repz
mov
jne
mov
leave
fiadds
pop
push
lds
adc
cmp
stos
mov
dec
adc
or
add
bswap
test
int3
and
xor
sub
xchg
ficomps
mov
fs
cltd
aas
aad
repz
push
mov
xor
lods
ret
cmp
lcall
inc
or
add
dec
jle
outsl
stc
mov
les
jbe
cs
and
cmp
shrb
push
jo
cmp
pusha
mov
add
cmp
loope
into
arpl
cld
test
data16
movl
xchg
cli
push
out
mov
fld
push
jle
je
mov
xor
adc
xor
or
push
push
sbb
mov
jae
fcoms
sbb
adc
inc
mov
stc
lret
shl
jbe
xchg
xor
pop
xchg
pop
cmpsl
sar
je
enter
push
and
inc
fdivs
mov
jne
test
inc
mov
in
xchg
and
mov
aad
mov
mov
sti
addr16
dec
insl
mov
sub
jge
adc
movsb
mov
cmp
inc
adc
jmp
mov
out
xor
test
mov
mov
inc
push
enter
push
les
stc
or
bswap
and
mov
cwtl
jl
dec
adc
pop
adc
pushf
sub
pop
adc
xchg
ds
mov
jns
out
mov
jne
lock
icebp
icebp
xor
push
bnd
in
xchg
jbe
sub
and
inc
psrld
mov
loope
and
outsl
call
add
jb
rcrl
xor
stos
cltd
es
test
outsb
mov
jecxz
imul
cld
pop
cmp
push
mov
mov
push
outsl
mov
or
adc
cld
add
and
fidivrl
mov
insb
or
loopne
push
fdivrs
call
imul
iret
int3
insl
cmp
sub
xlat
repz
adc
xor
inc
mov
insb
test
cwtl
rolb
cmp
rcl
cltd
push
push
mov
movb
mov
push
lret
rorb
adc
mov
adc
dec
dec
push
or
popf
shrb
push
in
insb
inc
push
push
xchg
dec
pop
jnp
addl
push
jb
popf
clc
loopne
mov
mov
xchg
xor
mov
mov
fs
loope
and
dec
jle
lods
push
cmp
xchg
loopne
mov
repz
sub
mov
das
subb
cmovno
inc
loopne
add
imul
mov
mov
mov
push
ret
ljmp
xor
adc
cltd
or
xorb
jns
xchg
hlt
lcall
scas
into
imul
fbstp
or
out
inc
mov
ret
cmpl
rcrb
andb
and
jecxz
pop
pop
cmpsl
fidivs
dec
int3
jne
ja
int3
jb
push
sbb
shl
mov
insb
push
rcl
mov
cmp
or
pop
mov
add
push
mov
mov
lea
xor
xchg
stc
push
cmpsb
scas
lret
int
xor
ja
loop
popa
mov
cli
out
jne
pop
insl
ret
ss
lcall
pusha
dec
bound
or
jno
data16
jae
cmp
lods
sbbl
std
jns
addb
loop
sbb
popa
movsb
movsb
pushw
ljmp
syscall
bound
mov
xchg
ljmp
fwait
sahf
mov
loopne
jl
adc
out
add
mov
idivl
mov
inc
xchg
arpl
ljmp
dec
dec
jbe
mov
dec
mov
cmp
jnp
mov
jg
and
lea
xchg
je
pop
shl
in
fmul
ljmp
dec
mov
mov
mov
xchg
push
sbb
mov
popa
ljmp
fwait
or
fisubs
icebp
push
jl
mov
aas
mov
aaa
js
addr16
mov
xor
leave
stos
ret
out
xchg
std
and
fmull
mov
loop
jmp
xchg
jo
inc
and
stos
enter
je
sub
scas
lods
or
clc
xchg
pop
fadd
xor
lock
loope
fisubl
push
xchg
test
ja
add
loopne
jns
pop
xchg
adc
sub
cmp
add
loope
xchg
stc
pop
daa
cmp
lret
filds
pusha
cmp
clc
pop
inc
sbb
lcall
addr16
test
adc
adc
mov
lock
mov
cmp
xchg
xlat
mov
push
fdivl
mov
faddp
push
adc
sbb
mov
adc
enter
rcrb
pop
out
ss
mov
repz
lahf
push
push
fbld
xor
add
pop
jg
jbe
pop
xlat
nop
jecxz
rcll
ret
addl
sbb
and
cld
sub
mov
je,pn
rcr
lock
adc
out
shlb
mov
add
mov
mov
lcall
cwtl
adc
push
xchg
push
cmp
push
xorl
or
and
outsb
in
ljmp
pushf
jmp
xlat
jne
pop
cwtl
cwtl
fdivl
in
iret
test
mov
iret
sbb
dec
pushf
or
inc
cwtd
dec
insl
jmp
adc
cs
xor
xor
cs
push
outsb
and
enter
xchg
fistpll
mov
shlb
mov
jbe
gs
or
add
mov
fwait
out
jp
jge
ljmp
js
xchg
jecxz
rol
rcl
or
dec
adc
jmp
ret
je
lds
mov
xchg
adc
jo
and
insl
add
jmp
mov
adc
add
ret
adc
mov
das
inc
cltd
jae
push
or
aam
aaa
jb
cmp
or
mov
mov
lcall
sub
imul
or
stos
xor
loop
jnp
push
movsb
mov
gs
int3
lods
xchg
adc
mov
mov
loope
fs
jb
out
out
push
xchg
daa
ds
outsl
pop
dec
mov
cltd
aam
nop
out
nopl
mov
sbb
gs
cwtl
outsl
xlat
outsl
jle
lds
cmp
scas
pause
pop
pop
push
mov
lods
scas
jbe
pop
fsubs
daa
add
inc
popa
add
cmpsl
cmpsl
dec
aad
mov
scas
pop
cs
sub
fidivs
jnp
popa
mov
jno
xor
fisttpl
dec
xor
and
sbb
insb
fnstsw
push
movsb
sti
mov
add
add
add
orl
pop
xlat
dec
leave
mov
insb
fnstcw
stos
jne
push
out
shll
jns
cmpsl
loope
and
ffreep
push
mov
mov
or
xor
test
xchg
test
mov
sarl
fs
xor
ss
les
dec
pop
ljmp
fnclex
das
adc
jge
sub
xchg
xchg
insb
pop
outsb
push
mov
push
push
xor
loope
or
test
and
inc
xchg
lds
jo
insl
lret
xchg
sub
xor
stos
in
sbb
xor
xchg
sbb
icebp
mov
shll
ja
mov
push
cmp
lods
and
pop
xchg
jl
cwtl
adc
and
push
mov
mov
stc
sub
lahf
sbb
and
hlt
jmp
pop
sbb
xchg
push
pop
popf
adc
or
cmp
test
inc
inc
pop
out
add
add
decl
inc
adc
ja
cld
adc
xor
popf
dec
xor
cmp
bound
add
lret
in
dec
je
push
pusha
loopne
movsb
ljmp
daa
xlat
push
add
into
mov
add
or
xlat
ds
cwtl
inc
hlt
push
adc
outsl
jmp
jb
clc
gs
jae
ds
icebp
jecxz
test
xchg
repnz
mov
jle
xlat
fs
sub
stc
dec
xor
int
pop
mov
sub
negl
test
add
xor
fstpt
shll
dec
mov
jne
inc
push
mov
add
sbb
aam
mov
in
into
fidivrl
sbb
rcll
out
jmp
adc
mov
lahf
xor
rcrl
xor
ret
in
loope
jge
or
adc
sbb
cwtl
mov
xor
or
mov
jb
sbb
int3
loopne
push
xchg
je
adc
jnp
mov
ret
negl
or
xchg
data16
and
insl
jbe
xchg
mov
les
roll
and
cltd
bound
xor
nop
xchg
pop
xor
and
sub
leave
push
data16
jecxz
and
sbb
add
popf
mov
jge
xchg
or
icebp
lret
movsl
or
movsl
mov
test
add
xor
das
es
repz
add
pusha
sbb
mov
xchg
and
idivb
ret
xor
nop
xchg
pop
mov
insb
es
and
iret
popa
gs
pop
stos
daa
push
jge
stc
aam
mov
aas
inc
out
inc
mov
out
pop
andb
xchg
cmp
cmpsb
mov
loope
mov
pop
xor
movsb
pop
das
mov
push
lret
jecxz
clc
add
push
fsubl
sbb
imul
add
jne
mov
mov
dec
imul
out
stc
inc
movsl
push
ds
sarb
or
aam
icebp
mov
ds
dec
test
lahf
test
inc
cltd
mov
lahf
cmp
mov
add
inc
rclb
jmp
pop
lods
sub
push
out
lret
addr16
add
aad
lcall
xor
push
dec
loope
xchg
inc
scas
fwait
mov
imul
stc
jns
xchg
nop
cmp
mov
in
pop
mov
add
jo
mov
les
or
andl
mov
add
pop
xchg
cltd
mov
mov
dec
fs
rorb
push
subl
ret
mov
push
sbb
leave
sar
mov
adc
jmp
sub
push
cs
dec
inc
xor
fadd
stc
stc
scas
cmp
sbb
sub
decb
dec
ss
xchg
or
sti
xchg
xchg
paddsb
sbb
cmpl
lods
repz
pop
push
or
es
repz
inc
in
setnp
cwtl
pop
popf
xor
enter
das
pop
repnz
imul
sub
jns
test
jnp
jmp
xor
xchg
sahf
test
adc
jbe
fidivrl
pop
into
cli
jnp
cwtl
jg
mov
pop
lret
jl
test
pop
popf
pop
push
hlt
cwtl
ret
cmpsb
adc
js
mov
mov
inc
sbb
insb
mov
jb
mov
adc
ds
inc
fidivrs
sbb
pusha
jl
dec
xor
mov
ret
add
or
push
mov
jp
insb
shll
outsl
shlb
push
mov
pop
add
roll
stos
cmp
shrl
cmp
jg
pushf
cli
addr16
shll
sub
ja
pop
ja
cs
push
emms
sbb
mov
adc
sbb
push
add
ss
or
mov
aaa
rcll
adc
lods
dec
mov
cmp
leave
daa
or
in
aam
and
jge
adc
mov
jo
lahf
shlb
push
adc
pushf
addb
iret
jp
add
cmc
mov
jmp
mov
in
inc
mov
loope
inc
dec
mov
add
mov
xchg
dec
fcompl
inc
pop
in
popf
andb
xchg
loopne
dec
cmpsl
mov
leave
xchg
inc
dec
dec
xchg
xchg
push
jp
pop
iret
jno
push
cmpsb
pusha
fsubl
jb
jb
push
dec
dec
xlat
fstps
pmulhw
pop
xchg
add
mov
cmp
sub
mov
or
cs
int
inc
aaa
xchg
andl
push
or
xchg
mov
sub
in
mov
ret
adc
or
jno
insl
add
push
es
popa
rcl
sub
cltd
sub
xchg
jge
call
cmp
fidivrl
inc
xchg
and
scas
sub
jecxz
xorl
and
sbb
xlat
in
inc
nop
push
xchg
jg
into
cmp
jmp
lret
xchg
dec
jecxz
shrl
push
cmpsb
push
xchg
pop
fistl
sarl
jecxz
iret
or
iret
xor
and
mov
nop
add
add
sbb
xchg
pop
dec
fnop
cmp
leave
scas
nop
adc
mov
push
xchg
xor
fldt
push
in
xchg
adc
fwait
fs
cmp
lods
sbb
xchg
mov
sbb
pop
fists
aad
in
mov
mov
and
enter
push
bound
hlt
adc
leave
push
gs
mov
cmp
mov
jl
int
cmp
pop
inc
and
pop
adc
sbb
cwtl
xchg
leave
and
or
ljmp
xchg
cld
gs
sahf
or
aad
dec
mov
mov
test
or
jmp
bound
mov
adc
sar
test
ret
push
mov
jge
out
inc
out
jno
pop
and
jmp
xchg
adc
lret
sti
or
imul
lock
outsb
mov
jne
cltd
into
push
loope
divl
push
mov
mov
incb
ret
stos
fldl
mov
ret
fimull
cltd
out
push
ret
lods
or
sub
fidivrl
scas
mov
rcrb
or
sbb
dec
rcll
out
in
xchg
call
and
inc
dec
mov
sub
mov
inc
and
add
cltd
cmp
xchg
cld
iret
xor
mov
add
addr16
adc
test
sbb
or
jp
sbb
adc
and
cli
lds
and
xchg
dec
iret
sub
shl
push
sub
movl
fstpt
xchg
and
test
lds
subl
adc
jmp
in
sub
test
mov
push
aas
imul
mov
pop
mov
sbb
xor
fcomi
push
mov
pop
mov
adc
sub
and
cld
mov
sbb
push
imul
jns
mov
jecxz
xchg
data16
repz
out
int
arpl
pop
mov
cmovb
xchg
repz
cmp
iret
push
insl
xchg
xorl
stos
jp
or
popa
push
mov
addr16
add
jl
add
inc
and
idivb
pop
repz
inc
cltd
lods
and
insl
cmp
inc
insl
leave
xchg
mov
bound
lret
lods
sbbb
jge
xchg
xorl
mov
sbb
and
imul
jb
in
int3
mov
shll
in
fsub
sub
xchg
dec
jae
mov
fimuls
orb
pop
cmc
mov
pop
test
push
xchg
dec
stc
push
mov
fs
xchg
cltd
mov
xchg
pushf
sub
insb
lods
movb
and
rclb
icebp
lahf
add
in
movsb
add
pop
xchg
xchg
mov
jae
cmp
adcl
std
mov
aad
pop
sahf
xor
cwtl
add
fiaddl
push
push
popa
insb
mov
lret
push
mov
push
mov
aas
mov
int
testb
sbb
pop
or
aam
fidivrl
mov
xchg
insb
nop
popf
addr16
nop
sub
aam
shlb
xchg
dec
sub
loope
mov
in
lods
test
pop
push
scas
or
jbe
xlat
lds
mov
stc
add
aas
out
xorb
out
mov
ficomps
dec
stos
ss
mov
bound
lretw
xchg
lahf
jo
push
les
addr16
aad
sbbl
dec
jp
xchg
cmpsb
hlt
rolb
cmp
stos
dec
test
pop
ret
negb
mov
mov
sbb
or
and
dec
negb
pop
andl
mov
push
arpl
inc
out
pop
xchg
orb
pop
loopne
push
aad
gs
stos
andb
lcall
mov
jb
jne
daa
lock
mov
ss
push
cmc
adc
add
mov
inc
ja
or
mov
subl
stos
imul
adc
call
pop
push
mov
jecxz
fdivs
mov
jno
test
dec
test
enter
push
in
ljmp
jp
cmpsb
cmpsb
daa
push
