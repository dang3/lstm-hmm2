inc
sbb
ja
sbb
ja
add
add
dec
fbstp
xor
ja
jns
ja
insl
fidivs
dec
fidivs
jns
ja
jmp
fbstp
ja
ja
out
fnsave
imul
ja
jl
ja
jo
ja
push
fidivs
dec
fidivs
fbstp
add
add
inc
ja
movsl
ret
ja
out
ret
ja
les
or
ja
icebp
shll
les
rol
ja
push
ret
ja
ret
mov
popf
ret
ja
sahf
ret
ja
add
add
icebp
ja
fyl2x
ja
xor
ja
imul
cs
add
bnd
xchg
ja
jmp
repz
fdiv
ja
xor
add
icebp
ja
add
add
incl
jl
mov
jl
nop
jl
scas
cmpb
jl
lret
loope
cmpb
jl
cltd
cmpb
jl
xor
jl
dec
cmpl
int3
int3
push
mov
sub
push
mov
mov
or
mov
mov
xor
sub
mov
sub
mov
mov
test
jne
mov
xor
add
add
mov
or
mov
mov
xor
sub
sub
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
cmp
jne
add
xor
sub
mov
add
mov
sub
sub
cmp
jne
add
or
sub
xor
mov
sub
mov
sub
mov
add
mov
or
xor
test
je
xor
mov
mov
sub
sub
add
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
cmp
je
xor
sub
sub
mov
call
call
sub
mov
sub
mov
mov
add
or
xor
call
cmp
jne
add
add
add
mov
call
cmp
je
or
sub
mov
mov
mov
add
mov
push
sub
add
add
mov
xor
call
xor
or
mov
mov
add
add
mov
call
call
mov
add
sub
mov
or
call
test
jne
xor
mov
sub
mov
mov
call
push
test
jne
mov
mov
or
or
xor
call
mov
or
xor
or
mov
call
or
xor
sub
mov
call
test
je
mov
add
sub
add
call
cmp
je
add
xor
mov
mov
xor
sub
mov
add
call
sub
xor
sub
or
add
sub
or
call
push
mov
sub
or
xor
xor
mov
sub
or
xor
or
mov
sub
mov
call
test
jne
sub
mov
mov
add
call
call
xor
or
mov
add
or
xor
add
call
mov
sub
or
xor
sub
xor
mov
call
push
xor
mov
mov
mov
call
test
jne
or
sub
add
sub
mov
mov
or
sub
call
or
mov
mov
add
mov
xor
add
call
add
mov
sub
or
call
cmp
je
mov
add
xor
or
or
call
cmp
jne
or
xor
sub
xor
call
sub
sub
mov
mov
sub
xor
mov
or
call
cmp
je
or
mov
add
add
add
call
call
call
mov
cmp
je
xor
or
add
sub
or
call
mov
sub
mov
add
sub
call
mov
add
add
xor
call
cmp
je
mov
sub
xor
or
call
mov
cmp
je
add
sub
add
mov
or
mov
sub
mov
sub
mov
call
add
add
mov
xor
xor
xor
add
sub
cmp
je
xor
mov
mov
xor
xor
xor
call
cmp
je
xor
sub
sub
xor
sub
xor
sub
call
sub
xor
mov
sub
mov
xor
call
add
mov
or
add
or
mov
sub
or
call
call
cmp
jne
mov
sub
add
xor
xor
call
mov
mov
cmp
jne
mov
or
add
mov
add
sub
mov
mov
call
sub
add
add
sub
call
cmp
jne
mov
add
mov
sub
sub
or
mov
mov
cmp
jne
mov
add
mov
add
add
call
call
movsl
xor
add
or
sub
xor
mov
test
jne
mov
mov
add
sub
add
call
call
cmp
jne
mov
sub
xor
xor
call
call
xor
xor
xor
mov
mov
mov
call
sub
sub
mov
sub
mov
mov
sub
call
add
mov
or
xor
or
sub
call
cmp
jne
sub
sub
sub
sub
sub
sub
or
or
call
call
cmp
jne
mov
sub
add
mov
add
xor
call
mov
add
mov
or
mov
mov
xor
call
mov
or
add
or
sub
call
mov
mov
or
mov
xor
mov
xor
mov
test
je
mov
or
xor
mov
xor
call
cmp
jne
cmp
jne
or
mov
or
xor
call
call
mov
xor
xor
xor
or
call
mov
mov
xor
mov
mov
xor
mov
mov
call
xor
add
mov
add
add
or
mov
call
cmp
jne
xor
or
xor
mov
mov
add
call
call
cmp
jne
sub
mov
add
mov
or
mov
mov
call
call
add
mov
mov
mov
sub
add
add
xor
call
sub
add
sub
sub
call
cmp
je
or
xor
mov
or
call
call
test
je
mov
or
xor
xor
sub
xor
sub
xor
call
xor
xor
xor
mov
or
call
cmp
jne
or
add
or
or
call
cmp
je
sub
sub
xor
or
mov
add
sub
sub
leave
ret
push
mov
sub
push
push
mov
xor
add
or
mov
mov
add
add
mov
cmp
je
mov
mov
or
sub
xor
or
add
add
add
mov
sub
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
cmp
jne
xor
mov
xor
or
mov
add
sub
xor
add
mov
mov
mov
add
sub
or
xor
mov
sub
add
mov
mov
mov
or
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
mov
mov
or
sub
xor
sub
mov
sub
mov
mov
mov
test
je
sub
xor
add
or
or
mov
add
or
sub
or
xor
mov
add
or
mov
or
mov
or
cmp
je
sub
mov
sub
or
mov
or
add
cmp
jne
mov
mov
sub
or
or
add
add
sub
mov
mov
mov
mov
add
mov
or
mov
xor
add
or
sub
sub
mov
or
mov
mov
add
mov
test
je
mov
mov
mov
mov
xor
mov
xor
mov
cmp
je
xor
sub
sub
mov
add
mov
add
add
xor
mov
or
add
mov
mov
or
or
mov
xor
xor
sub
sub
mov
push
call
cmp
je
add
mov
mov
add
add
call
call
cmp
je
mov
or
add
sub
push
call
mov
mov
mov
add
or
xor
sub
or
or
mov
xor
or
mov
mov
call
call
add
mov
sub
sub
mov
mov
sub
mov
call
call
cmp
jne
add
mov
mov
xor
xor
xor
mov
call
call
add
mov
add
mov
add
cmp
je
or
sub
mov
mov
xor
push
call
sub
mov
mov
xor
xor
sub
mov
push
call
mov
mov
or
mov
xor
call
cmp
je
mov
xor
sub
or
call
cmp
jne
add
add
mov
sub
mov
push
call
xor
mov
mov
mov
push
call
push
call
mov
sub
mov
xor
mov
xor
push
call
call
mov
sub
mov
mov
or
push
call
call
test
jne
add
sub
xor
xor
sub
mov
mov
add
call
test
jne
or
sub
or
mov
mov
call
mov
add
xor
add
or
mov
call
cmp
je
sub
mov
add
mov
mov
xor
mov
mov
call
mov
mov
sub
mov
call
or
or
or
mov
xor
mov
push
call
push
call
mov
add
mov
add
mov
mov
xor
call
cmp
jne
add
mov
mov
mov
add
sub
mov
sub
movl
call
call
mov
sub
mov
mov
sub
or
or
add
call
cmp
jne
or
sub
xor
xor
call
cmp
je
add
sub
mov
or
push
call
push
sub
mov
push
mov
push
call
mov
mov
or
add
cmp
jne
or
mov
mov
xor
sub
mov
mov
add
mov
sub
mov
xor
xor
mov
or
cmp
je
sub
xor
add
or
xor
mov
add
cmp
jne
sub
sub
mov
xor
cmp
jne
add
add
mov
or
or
xor
mov
xor
or
mov
add
add
add
mov
cmp
jne
sub
add
mov
mov
cmp
jne
mov
mov
mov
or
sub
mov
add
add
or
xor
or
cmp
jne
or
sub
sub
sub
or
mov
mov
or
mov
mov
mov
mov
or
cmp
jne
add
mov
sub
mov
add
or
mov
xor
xor
add
add
xor
cmp
jne
add
sub
sub
mov
sub
or
sub
cmp
jne
add
or
mov
mov
mov
mov
mov
mov
add
xor
xor
mov
sub
xor
mov
mov
mov
mov
sub
mov
mov
cmp
jne
cmp
jne
xor
or
mov
or
mov
call
mov
mov
or
add
mov
xor
call
sub
sub
mov
add
or
cmp
je
mov
mov
sub
add
add
mov
xor
sub
call
cmp
jne
xor
sub
mov
sub
or
xor
mov
add
mov
or
add
xor
call
add
sub
xor
add
or
call
cmp
jne
xor
mov
add
mov
xor
push
call
cmp
je
sub
xor
mov
mov
sub
movl
call
call
mov
mov
mov
sub
add
add
call
sub
mov
sub
mov
add
add
call
mov
xor
mov
mov
xor
call
cmp
je
add
mov
xor
mov
xor
call
cmp
jne
xor
mov
or
mov
mov
or
mov
xor
call
xor
mov
add
mov
sub
mov
push
call
call
sub
or
mov
mov
call
cmp
jne
add
add
mov
add
sub
mov
xor
cmp
jne
mov
mov
mov
or
xor
mov
call
add
mov
mov
add
xor
push
call
cmp
jne
mov
mov
mov
xor
sub
movl
call
add
mov
mov
add
add
sub
call
mov
sub
xor
xor
add
call
call
cmp
je
xor
mov
or
mov
xor
mov
add
mov
xor
cmp
jne
add
xor
sub
add
add
xor
add
or
mov
push
call
cmp
jne
mov
mov
add
sub
add
mov
sub
add
call
or
xor
sub
sub
mov
mov
or
sub
add
mov
call
cmp
jne
mov
add
mov
or
add
add
sub
call
mov
or
mov
mov
mov
sub
push
call
or
mov
mov
add
or
sub
mov
sub
movl
call
push
call
xor
mov
xor
sub
mov
mov
mov
push
call
call
cmp
je
or
mov
mov
add
sub
or
mov
xor
add
call
cmp
je
add
add
or
mov
sub
sub
xor
call
mov
or
or
mov
push
call
sub
or
mov
xor
add
or
call
mov
or
or
mov
add
add
xor
mov
call
cmp
je
mov
add
or
or
xor
mov
xor
mov
push
call
cmp
je
mov
or
sub
mov
mov
or
push
call
mov
mov
mov
mov
add
sub
call
cmp
jne
mov
add
sub
sub
add
call
test
je
mov
xor
add
add
xor
sub
call
xor
sub
mov
add
mov
mov
mov
call
xor
xor
mov
sub
mov
mov
or
push
call
cmp
jne
mov
xor
mov
xor
sub
push
call
cmp
je
mov
sub
xor
mov
xor
call
call
push
sub
mov
push
sub
movl
call
add
xor
xor
add
mov
add
mov
or
add
add
mov
mov
test
jne
mov
add
mov
xor
add
or
cmp
je
mov
add
xor
sub
sub
mov
or
xor
mov
xor
sub
add
mov
or
cmp
jne
mov
mov
mov
mov
add
add
test
jne
mov
mov
sub
sub
test
jne
add
mov
sub
xor
xor
cmp
jne
add
mov
add
xor
sub
movl
call
sub
movl
call
cmp
je
sub
mov
add
xor
mov
sub
movl
call
mov
add
mov
mov
mov
call
cmp
jne
or
or
mov
mov
sub
or
mov
mov
push
call
xor
or
mov
sub
mov
add
mov
call
xor
mov
add
xor
or
or
mov
or
push
call
sub
movl
call
mov
sub
or
sub
add
add
add
call
push
call
cmp
je
mov
mov
mov
add
xor
call
mov
mov
sub
xor
mov
or
add
mov
mov
mov
xor
sub
mov
or
call
test
je
or
xor
or
mov
mov
mov
mov
call
push
call
cmp
je
mov
mov
mov
mov
mov
mov
call
call
add
mov
mov
mov
xor
call
mov
xor
add
add
add
mov
push
call
cmp
je
sub
mov
mov
xor
mov
sub
sub
xor
or
xor
mov
mov
add
or
mov
or
push
call
mov
or
add
xor
mov
mov
mov
mov
sub
movl
call
cmp
jne
mov
mov
or
xor
push
call
mov
xor
or
xor
mov
push
call
cmp
je
xor
mov
mov
xor
mov
call
cmp
je
or
mov
add
xor
or
mov
sub
or
call
xor
add
xor
mov
add
cmp
je
xor
mov
xor
or
add
sub
xor
push
call
mov
sub
mov
mov
mov
mov
push
call
xor
mov
mov
or
mov
sub
sub
mov
push
call
cmp
jne
mov
add
mov
sub
add
sub
movl
call
push
call
mov
add
or
mov
xor
sub
call
xor
xor
or
mov
add
mov
mov
cmp
jne
mov
mov
sub
sub
or
or
mov
sub
movl
call
mov
xor
mov
xor
mov
call
cmp
je
mov
mov
mov
mov
mov
sub
push
call
add
sub
mov
or
call
mov
push
call
cmp
jne
sub
xor
or
mov
call
xor
mov
mov
sub
mov
call
push
call
add
sub
or
or
or
mov
mov
mov
push
call
cmp
je
mov
xor
add
mov
sub
sub
movl
call
call
cmp
je
mov
mov
xor
add
add
sub
call
add
sub
xor
sub
add
or
or
push
call
cmp
jne
xor
mov
mov
add
xor
add
sub
sub
mov
push
sub
mov
mov
push
call
mov
xor
add
mov
mov
xor
or
cmp
jne
mov
xor
xor
sub
xor
mov
mov
or
or
xor
sub
mov
cmp
je
mov
xor
xor
mov
or
mov
add
add
xor
xor
sub
sub
mov
add
sub
mov
cmp
jne
cmp
je
add
xor
xor
mov
mov
add
sub
or
sub
mov
mov
sub
sub
mov
cmp
jne
cmp
jne
or
mov
add
mov
sub
sub
sub
mov
call
test
je
mov
mov
or
mov
call
mov
mov
sub
mov
mov
mov
mov
cmp
jne
or
mov
mov
xor
sub
mov
test
je
or
mov
add
sub
xor
xor
mov
call
mov
add
sub
mov
add
mov
or
mov
push
call
add
add
mov
sub
mov
mov
mov
add
call
call
mov
mov
or
sub
mov
add
mov
call
cmp
je
add
sub
sub
sub
mov
xor
mov
mov
push
call
sub
sub
mov
mov
push
call
cmp
jne
sub
mov
add
mov
sub
push
call
xor
mov
mov
add
mov
xor
call
cmp
je
mov
mov
sub
xor
mov
mov
mov
mov
or
mov
sub
sub
movl
call
call
mov
or
add
mov
call
cmp
jne
mov
mov
xor
add
call
cmp
je
mov
mov
or
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
sub
call
call
cmp
jne
mov
xor
mov
add
mov
xor
call
sub
mov
mov
sub
call
cmp
jne
add
mov
sub
or
xor
mov
or
call
mov
push
call
mov
add
sub
mov
call
sub
mov
mov
mov
mov
or
add
mov
call
cmp
jne
mov
sub
mov
mov
add
or
add
call
sub
xor
mov
mov
mov
push
call
cmp
jne
xor
mov
mov
sub
push
call
call
add
xor
mov
or
xor
or
xor
sub
call
push
call
cmp
jne
or
mov
sub
mov
push
call
cmp
jne
xor
add
mov
add
mov
or
call
xor
xor
mov
mov
push
call
sub
mov
or
mov
push
call
sub
xor
or
add
xor
xor
call
test
jne
sub
mov
or
add
sub
push
call
xor
xor
add
sub
push
call
add
or
add
sub
add
cmp
jne
or
mov
mov
or
mov
add
mov
push
call
xor
add
mov
mov
push
call
cmp
jne
sub
mov
add
or
mov
add
add
call
call
cmp
jne
xor
mov
add
mov
xor
mov
mov
sub
sub
mov
xor
push
call
mov
mov
add
sub
sub
add
call
call
sub
mov
or
or
sub
add
or
push
call
cmp
je
mov
or
add
sub
mov
push
call
cmp
jne
or
mov
add
mov
mov
xor
push
call
mov
mov
or
xor
mov
call
test
jne
add
add
mov
or
xor
mov
mov
mov
xor
add
mov
push
call
or
mov
or
add
call
push
call
mov
mov
or
mov
call
sub
movl
push
sub
mov
push
call
cmp
jne
or
add
mov
add
add
or
mov
sub
cmp
jne
xor
mov
mov
mov
mov
add
add
mov
mov
add
or
mov
or
or
or
xor
or
mov
add
mov
xor
xor
cmp
jne
cmp
je
mov
or
sub
xor
cmp
je
sub
mov
xor
xor
mov
add
mov
mov
or
xor
mov
mov
sub
mov
mov
or
or
or
or
or
or
mov
cmp
je
mov
mov
add
mov
add
mov
test
je
sub
mov
sub
or
add
mov
sub
add
mov
add
mov
xor
or
mov
cmp
jne
or
xor
add
sub
test
jne
or
mov
mov
sub
mov
add
mov
cmp
jne
add
mov
mov
mov
mov
mov
cmp
jne
add
add
sub
mov
xor
xor
push
call
cmp
je
mov
sub
sub
sub
add
xor
sub
or
push
call
cmp
je
mov
sub
mov
xor
call
mov
mov
mov
add
mov
push
call
mov
sub
mov
sub
xor
mov
add
mov
sub
mov
or
or
mov
push
call
cmp
je
or
or
mov
sub
sub
sub
add
pusha
cmp
jne
add
mov
mov
mov
xor
sub
call
or
sub
xor
mov
mov
mov
mov
xor
add
push
call
cmp
je
or
sub
add
or
xor
sub
mov
sub
call
add
or
sub
xor
call
cmp
je
xor
mov
xor
mov
mov
mov
add
sub
add
mov
or
mov
call
mov
mov
mov
mov
mov
mov
call
xor
mov
mov
sub
mov
add
xor
mov
cmp
jne
mov
mov
or
sub
mov
call
cmp
je
sub
sub
or
mov
sub
call
mov
sub
add
add
or
xor
sub
xor
sub
movl
call
or
mov
xor
add
add
call
cmp
jne
mov
mov
xor
add
add
call
cmp
je
add
sub
sub
mov
mov
add
mov
or
xor
add
mov
add
mov
xor
or
or
push
call
xor
mov
or
sub
mov
call
cmp
jne
mov
mov
mov
mov
push
call
xor
mov
add
or
add
mov
mov
call
cmp
jne
or
sub
add
or
or
call
mov
sub
or
sub
push
call
add
mov
mov
mov
add
add
mov
mov
call
add
sub
or
mov
mov
push
call
push
call
cmp
je
add
mov
add
sub
or
mov
mov
mov
push
call
call
cmp
jne
mov
xor
mov
add
xor
add
add
call
or
add
mov
or
add
call
push
call
cmp
jne
mov
mov
add
sub
call
test
jne
mov
sub
mov
mov
push
call
or
mov
mov
xor
add
mov
mov
sub
sub
call
add
add
or
xor
mov
sub
xor
mov
push
call
call
cmp
jne
mov
mov
sub
xor
mov
or
xor
sub
movl
call
cmp
jne
or
sub
or
add
xor
xor
xor
mov
call
xor
or
or
sub
sub
mov
xor
call
cmp
je
mov
xor
mov
add
sub
mov
mov
add
call
cmp
jne
mov
or
mov
sub
or
mov
xor
mov
mov
mov
add
or
or
call
sub
xor
add
mov
mov
mov
call
mov
add
mov
mov
push
call
cmp
je
xor
xor
mov
mov
xor
mov
mov
sub
movl
call
or
xor
mov
xor
or
mov
or
mov
push
call
mov
add
add
mov
push
call
or
sub
mov
sub
xor
xor
sub
mov
push
call
sub
movl
call
cmp
jne
mov
or
or
or
or
cmp
je
mov
or
sub
add
or
or
mov
mov
push
call
mov
mov
mov
mov
or
sub
mov
xor
call
mov
or
add
or
mov
mov
sub
or
sub
sub
mov
xor
xor
mov
cmp
je
or
add
or
or
mov
or
add
xor
xor
xor
mov
sub
movl
call
call
cmp
je
add
add
sub
add
or
mov
add
mov
cmp
je
mov
mov
add
add
add
push
call
push
call
sub
mov
mov
sub
or
sub
xor
add
add
mov
xor
or
sub
movl
call
call
mov
mov
add
xor
add
xor
or
mov
push
call
cmp
je
mov
sub
add
mov
add
mov
add
mov
call
or
mov
mov
mov
xor
add
call
cmp
jne
add
mov
sub
xor
xor
xor
add
or
mov
mov
mov
mov
mov
sub
push
call
cmp
je
or
or
or
xor
or
sub
mov
mov
push
call
ret
int3
int3
int3
inc
aas
add
ljmp
add
adc
add
add
pushl
adc
add
ljmp
add
push
adc
add
aas
add
jmp
add
nop
adc
add
inc
add
ljmp
add
enter
inc
inc
add
pop
inc
add
add
add
js
add
mov
add
add
movb
out
add
hlt
inc
add
push
inc
add
adc
add
es
add
ds
add
push
inc
add
pusha
inc
add
push
add
addb
xchg
inc
add
cmpsb
inc
add
add
add
les
add
inc
add
faddl
add
inc
add
lock
add
add
add
push
inc
add
sbb
add
and
add
xor
add
add
dec
inc
add
push
inc
add
bound
add
add
add
add
mov
add
inc
add
ret
add
inc
add
call
inc
add
or
add
sbb
add
inc
add
inc
inc
add
pop
inc
add
add
add
jo
add
addb
xchg
inc
add
test
add
mov
inc
add
inc
add
in
add
hlt
inc
add
push
inc
add
sbb
sub
inc
inc
add
dec
inc
add
add
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
jbe
jb
imul
add
outsb
push
gs
imul
add
je
gs
imul
jne
add
stos
add
outsb
push
jb
arpl
jae
outsl
imul
add
add
gs
push
gs
imul
jne
add
or
inc
gs
arpl
imul
imul
outsb
je
outsl
insb
add
out
push
gs
jo
outsb
dec
gs
add
add
addr16
jb
popa
je
dec
gs
js
add
add
addr16
insb
jne
push
rolb
push
gs
jb
popa
je
dec
gs
js
add
add
push
jae
push
outsl
imul
jb
jbe
insb
gs
lods
add
outsb
push
inc
dec
popa
outsb
popa
addr16
add
scas
add
outsb
push
gs
imul
add
gs
imul
outsb
addr16
gs
imul
imul
push
gs
gs
gs
dec
gs
add
add
addr16
jne
jb
dec
outsb
outsw
dec
gs
add
faddl
push
gs
outsb
jne
push
popa
insb
jne
inc
add
push
inc
push
dec
xor
cs
dec
dec
add
adc
pop
data16
jo
outsb
add
add
jae
ja
jb
outsb
je
add
add
outsb
insb
outsl
arpl
xchg
add
insb
jne
push
pop
pop
jae
je
jae
jb
popa
je
gs
add
xchg
add
insb
outsl
jae
add
xchg
pop
pop
jo
pop
insw
outsl
fs
mov
je
add
add
ja
insb
jo
popa
add
lcall
pop
popa
jo
pop
je
jo
add
je
pop
insb
je
popa
add
add
arpl
arpl
add
cmp
pop
imul
insl
add
add
js
je
insl
jae
arpl
cs
insb
add
les
inc
gs
imul
je
js
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
bound
arpl
jo
add
add
gs
je
inc
dec
inc
push
arpl
outsb
add
mov
push
gs
inc
js
outsb
je
outsl
imul
inc
outsl
jo
dec
gs
inc
imul
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
clc
add
arpl
insb
add
add
gs
je
inc
imul
imul
mov
push
gs
inc
js
outsb
je
outsl
imul
inc
gs
jne
jb
outsb
je
bound
arpl
xor
push
imul
inc
dec
xor
cs
dec
dec
add
add
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
ja
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
imul
popa
jae
inc
jb
outsl
jb
add
add
je
gs
imul
or
dec
gs
jo
gs
jb
jns
mov
inc
js
je
jb
arpl
jae
outsl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
gs
outsl
arpl
gs
outsb
outsw
inc
add
add
je
jne
jb
outsb
je
push
add
pop
add
je
imul
mov
push
jb
arpl
jae
fs
outsl
push
gs
imul
or
dec
gs
jo
jb
popa
je
add
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fcmovnbe
fmul
adc
mov
jmp
shll
pop
lcall
jecxz
mov
leave
je
nop
lods
jl
xchg
jne
call
mov
pop
lahf
fnstcw
sub
dec
negl
pop
push
dec
lret
mov
outsl
push
or
mov
js
adc
cltd
mov
adc
hlt
stos
loope
add
sbb
daa
dec
pop
repz
addr16
out
mov
sbb
ljmp
ret
outsl
xor
jbe
jecxz
sub
stos
lahf
mov
push
jmp
xchg
jmp
push
xchg
mov
mov
pop
push
sahf
and
dec
ss
xchg
int
adc
add
test
rol
mov
mov
jge
xchg
imulb
addr16
imul
dec
lahf
inc
cld
adc
add
jns
push
bound
sub
xlat
push
in
mov
enter
pop
add
aad
sbb
scas
fcomps
addb
pop
sbb
repz
sbb
jl
fisubl
int
call
mov
xor
cmp
stos
mov
mov
rcr
inc
shl
bswap
in
adc
mov
loope
mov
faddl
mov
mov
ficoms
in
out
sti
int
ret
loopne
and
fisttpl
jge
xchg
aad
adcb
inc
out
sarl
test
pop
or
jbe
in
xchg
inc
es
inc
push
rclb
scas
cmp
add
or
sti
sbb
cs
sub
adc
negb
dec
adc
jns
and
mov
popf
cmp
push
dec
movsl
aas
and
push
cmpl
cmc
push
pop
cld
into
cmpsb
dec
pop
jle
push
adc
mov
icebp
subl
xorl
in
shl
lahf
pusha
shrb
adc
cmp
adc
fildll
loopne
xchg
ss
add
lea
and
je
cs
pop
ljmp
sub
dec
clc
bound
push
negb
in
in
cltd
pop
jb
hlt
xchg
pop
nop
mov
adcl
add
xchg
das
xor
test
aaa
out
ds
imul
mov
mov
xor
mov
jmp
fldcw
add
mov
jmp
mov
and
and
xchg
das
std
test
out
insl
mov
pop
sbb
loopne
mov
xor
mov
daa
divb
cmp
lcall
sub
and
push
ret
jnp
and
sub
push
pusha
push
pop
fwait
mov
mov
xchg
add
rcll
sbb
xor
insb
in
pop
jbe
jo
or
sti
int
nop
scas
sub
mov
add
inc
orl
arpl
ja
or
fcomip
mov
push
pop
mov
mov
inc
mov
out
or
aas
popf
popa
out
dec
mov
out
out
std
pushf
xor
adc
dec
mov
mov
popf
xor
mov
push
mov
xchg
inc
in
xor
mov
test
ljmp
out
loop
scas
or
xchg
enter
lock
fdivrs
sti
fdiv
popa
sbb
push
insl
xor
pop
js
gs
in
pusha
ss
mov
mov
sub
decb
push
adc
dec
ret
push
mov
ss
outsl
mov
sub
xchg
mov
sbb
mov
stos
pusha
fs
imul
add
push
or
ds
jae
mulb
and
in
xlat
insl
mov
out
mov
loopne
jecxz,pt
pop
jp
mov
repz
adc
arpl
mov
mov
add
sbb
int
sub
mov
push
xor
jo
dec
in
movsl
pop
push
jmp
inc
dec
shll
outsb
sub
mull
imul
jge
mov
xorb
insl
mov
xlat
mov
push
ds
sbb
jl
mov
push
fisttpl
das
and
rorb
or
xchg
dec
rcrl
f2xm1
inc
xchg
jno
arpl
out
xchg
jg
xor
lods
addr16
inc
or
push
mov
jmp
lds
or
nop
dec
jnp
adc
call
addr16
xchg
nop
call
xor
daa
in
jae
and
adc
or
pusha
outsb
push
scas
js
jo
mov
push
push
mov
imul
sub
mov
nop
xchg
repz
sbb
cli
js
int3
jnp
cmpl
mov
mov
pop
mov
lret
push
in
test
mov
call
ljmp
stos
xchg
or
push
cld
shll
clc
cmc
cmc
lea
sahf
aas
xchg
sub
je
pop
nop
nop
mov
and
push
xchg
pop
push
jbe
ss
subl
xchg
mov
scas
xor
nop
xor
sub
jne
cmp
xchg
in
mov
testl
sub
fucomip
lcall
or
mull
xor
in
pop
jne
jecxz
stos
imul
iret
cmpsl
shlb
ret
shl
out
push
add
je
out
dec
dec
sbb
negb
and
out
inc
cmp
xlat
mov
xchg
sbb
push
ds
rcrb
jp
pop
dec
xor
fsts
inc
jg
fwait
repnz
push
fstps
xchg
les
sahf
gs
push
pop
sbb
es
lret
add
xor
icebp
xchg
lods
jecxz
jg
and
js
cmc
lock
subl
je
mov
and
push
test
dec
addb
stos
out
lahf
sbbl
cmp
clc
pop
aas
ljmp
push
loope
test
cmp
aam
dec
mov
idivl
or
ljmp
ss
insb
hlt
sahf
repnz
imul
movswl
add
scas
fidivs
jo
in
lock
pop
mov
sbb
sbb
push
test
cmp
push
sar
in
adc
sbb
sub
adc
mov
fadds
test
adc
cwtl
or
adc
sti
add
pusha
inc
pop
stc
sbb
or
pusha
push
xor
sub
dec
mov
lods
shll
xor
cmp
loop
ret
lds
cwtl
mov
dec
ss
sbb
jp
add
lret
scas
mov
adcl
sbbb
cltd
push
xchg
mov
pop
sbb
or
dec
sbb
mov
pop
lret
cmpsl
imul
clc
adcl
lods
push
stos
xchg
addr16
add
dec
inc
push
cmovg
push
fisubrs
mov
mov
adc
mov
push
mov
in
js
data16
test
pushf
adc
pop
arpl
adc
adc
shrb
pushf
out
inc
push
jbe
andl
int3
lods
cmc
lret
rcl
std
xchg
pusha
jbe
incb
call
movsb
stos
pop
mov
rclb
or
jne
fimuls
cmp
and
xor
push
jnp
test
mov
mov
mov
add
sub
mov
stc
sub
loopne
xor
ret
push
mov
xchg
leave
daa
aas
repnz
adc
clc
ficoms
sub
xchg
repz
xchg
jmp
loope
mov
clc
lret
adc
insb
or
outsb
adc
xchg
mov
jnp
pop
pop
mov
and
ret
add
xor
sub
fmull
cwtl
out
jmp
cld
cwtl
jecxz
test
lret
dec
mov
addr16
or
cmp
rorb
js
enter
sti
sbb
mov
mov
pop
adc
jmp
add
sti
pop
xchg
repnz
mov
and
insb
es
inc
sub
insb
mov
incb
push
in
inc
das
inc
pop
insb
sbb
dec
insl
fstpt
cmpsl
imul
hlt
movsl
fisubs
inc
out
es
repnz
popa
mov
add
add
pop
push
ja
jno
push
pop
mov
jge
mov
push
push
rorl
push
stos
fwait
clc
sub
je
sbb
push
mov
xor
scas
dec
sti
test
scas
fwait
ret
adc
repz
movl
cmpsl
movb
cmc
jne
sar
movsb
xchg
shl
jne
add
ret
adc
in
push
sbb
mov
loop
into
into
jne
push
pop
divb
mov
movsl
mov
xor
out
test
scas
movsb
ss
imul
add
and
sub
jmp
shrl
add
jno
xor
fstl
lret
divb
jecxz
cli
adc
ss
arpl
jbe
xchg
pop
sub
inc
out
cmp
les
ljmp
cltd
cmp
idiv
xorl
lods
sarl
aas
cmc
xor
out
jg
hlt
mov
mov
pop
dec
cli
add
adc
mov
mov
mov
mov
add
inc
repz
out
inc
sub
or
mov
out
mov
int3
mov
inc
cmp
dec
sub
jecxz
sbb
cmpsb
nop
out
pop
daa
push
les
jge
dec
ret
cmp
addr16
jnp
and
jmp
jne
sub
sub
or
in
add
test
xchg
mov
sbb
pop
sbb
cmc
in
scas
mov
repz
insl
sbb
aad
data16
jbe
lahf
xchg
mov
clc
call
pop
and
xchg
push
stos
and
dec
dec
aas
xchg
iret
in
fsubrl
mov
loope
mulb
jl
xchg
dec
mov
and
imul
sub
fs
add
pop
imulb
cs
shll
aam
rclb
int3
mov
pop
fnstenv
pop
inc
fs
lods
mov
pop
out
dec
pop
xor
mov
loop
sub
sub
stc
xchg
pushf
das
in
clc
fistl
fcomps
stos
add
stos
into
xchg
loope
jecxz
inc
push
adc
xchg
out
cmp
cmp
cmovns
fstpl
cmc
movsl
inc
mov
xchg
mov
xchg
mov
mov
push
adc
push
outsl
pop
or
pop
sbb
shlb
outsl
pop
js
repz
sub
sub
cmp
jecxz
mov
inc
pop
cmp
pop
jo
lret
sub
cltd
test
pop
sbb
fisubs
ficomps
movb
push
mov
dec
xorb
mov
test
xlat
cmp
mov
in
int
stos
sarb
rcr
xor
add
js
fmuls
stc
push
or
mov
pop
repz
or
mov
scas
cmpsl
mov
popf
addr16
sub
dec
adc
leave
rcll
mov
movsb
sti
ret
add
push
pushf
inc
rcll
jg
fwait
push
shl
pop
rolb
pop
jl
sub
sbb
fdivrs
test
test
dec
packsswb
aaa
sar
xchg
inc
xchg
dec
or
xor
out
lret
in
cmp
stos
mov
jle
push
icebp
repz
repz
sub
adc
js
arpl
mov
nop
mov
jnp
mov
pusha
ljmp
mov
xchg
out
pop
push
jb
jbe
adc
jg
adc
sbb
sub
lret
out
adc
cmpl
push
fmul
insl
mov
test
imul
test
pusha
cld
outsb
adc
notb
jo
leave
jns
dec
lcall
in
push
xchg
das
mov
push
test
out
in
xor
into
out
add
pop
xor
mov
mov
sub
shlb
push
imul
xor
aam
add
imul
cs
out
inc
or
js
sar
inc
call
cmp
or
aas
cwtl
iret
push
dec
inc
mov
push
je
pop
inc
fbld
cmc
jmp
and
inc
mov
inc
lret
push
push
enter
add
ret
dec
xlat
int3
packsswb
fs
or
pop
sarb
cmc
test
mov
and
jge
lock
je
movb
mov
and
mov
mov
jp
in
sub
out
jns
jb
movq
inc
mov
add
and
push
mov
stos
xchg
dec
jmp
xor
inc
cmpb
xchg
pop
fwait
add
mov
push
mov
jmp
lahf
andl
pop
push
incl
mov
inc
fnstsw
mov
xor
push
inc
adc
int
fsub
and
lcall
sar
fsubrl
push
sub
and
pop
and
rorl
imul
lock
push
or
xchg
xchg
sbb
xchg
cmc
cmp
outsl
lock
fisttpll
in
pusha
xchg
js
sahf
push
dec
jbe
mov
dec
insl
leave
loopne
fisubrs
xchg
stc
fmul
loope
sarb
dec
stos
inc
dec
in
rcr
sub
add
pop
sub
out
inc
jo
int3
mov
lock
and
xor
cmp
push
pop
ljmp
push
xchg
jmp
js
dec
in
mov
and
out
jb
out
cmp
inc
les
push
idivb
sub
fisubrl
out
jge
and
push
pop
rcrb
inc
out
outsl
sti
lret
cmp
int3
xchg
enter
jo
pusha
and
jmp
xchg
fisttpl
fsubp
lds
es
mov
pop
sbb
sub
inc
add
jo
leave
stc
adc
sub
das
or
lret
jno
dec
stos
notl
jp
sub
lods
and
push
mov
aaa
pop
cmp
int3
push
mov
push
ret
cmp
shl
push
push
xchg
sub
mov
jne
xchg
push
and
jb
insl
ljmp
in
xlat
mov
pop
pop
xor
stos
mov
pop
loopne
inc
mov
fstpl
adc
fstps
push
jmp
nop
idivb
inc
dec
icebp
pop
fadds
jne
and
pop
clc
movl
and
gs
fistpll
jnp
add
in
fistps
call
lahf
pushf
in
pop
cmp
pop
pop
cmovns
in
cmpl
rcll
into
dec
pusha
cli
test
fwait
ja
and
cmpsl
cwtl
pushf
loop
mov
dec
dec
cltd
or
push
imul
pusha
xor
lret
outsl
int3
daa
hlt
lds
pop
leave
lock
inc
fwait
xchg
inc
data16
mov
or
iret
rclb
daa
xchg
add
jg
mov
daa
push
sbb
lds
out
faddl
aas
loope
sarb
mov
pop
adc
jnp
mov
fidivl
mov
or
ljmp
stc
bound
mov
ds
xchg
ja
xchg
inc
xor
cmp
int3
ficomps
sub
mov
das
push
fsubrs
sbb
dec
push
fisubl
les
in
aam
xchg
iret
pop
mov
jl
ficoml
add
or
or
sub
mov
jle
jo
pushf
popf
sub
mov
add
fmull
cmp
and
or
dec
aaa
pop
and
jl
arpl
cwtl
in
jge
add
sbb
in
imul
aad
testl
cmp
jp
add
jnp
xchg
js
mov
inc
or
xchg
cmp
mov
mov
or
mov
mov
sahf
insl
pop
dec
insl
cld
fldt
xchg
imul
mov
mov
into
or
mov
or
in
cmp
and
scas
add
sbb
stos
pop
repz
mov
int3
mov
and
fwait
pusha
push
ss
std
inc
mov
lock
test
outsl
mov
xlat
insl
aam
jge
stos
pop
xor
icebp
jl
xlat
cmpsl
fwait
xor
adc
dec
or
sti
lds
loop
lret
sbb
mov
push
mov
lods
xchg
idiv
je
jae
inc
pop
hlt
das
push
in
xor
mov
aaa
mov
mov
xor
adc
mov
sbb
dec
lret
pop
xor
jno
ljmp
orb
xchg
lcall
inc
xchg
cmp
fldt
fsubp
pop
stc
testl
cmp
mov
ja
cmp
and
stos
lods
rclb
and
dec
push
ja
pop
outsl
xchg
inc
es
nop
mov
aad
cli
jno
mov
popa
scas
lret
mov
stos
add
inc
pop
sub
mov
cltd
lret
fildl
mov
cmp
inc
mov
dec
push
and
pop
jae
int3
mov
pop
dec
pop
jg
dec
scas
cs
mov
ret
push
cmp
jo
push
mov
call
insb
sub
cli
out
cmpb
shl
xor
jo
mov
stos
sub
and
xchg
jnp
scas
flds
and
fists
and
pop
cli
mov
ret
or
fmull
jp
lret
cwtl
xor
shlb
sbb
push
outsl
and
mov
dec
cmp
inc
sbb
xchg
lock
xor
sbb
out
pop
std
rcl
jb
js
fadds
ja
push
popa
xchg
ljmp
lahf
insl
fisubrl
lcall
mov
adc
ja
mov
fdivs
fnsave
sbb
add
scas
fidivrl
leave
cmp
repnz
pop
mov
xchg
xchg
push
scas
popa
sub
mov
push
stc
cmp
call
movl
lock
test
mov
dec
mov
xchg
adc
jg
lock
pop
aad
fcompl
adc
and
sbb
push
pop
js
fwait
mov
xor
rcrb
iret
test
fcomps
shrb
popa
test
rcrb
jl
in
and
pop
repnz
push
movsl
mov
lret
adc
mov
xchg
ret
jmp
mov
jl
ljmp
dec
jp
std
scas
shrl
mov
ficompl
sbb
shufps
xchg
mov
sbb
mov
jns
push
mov
pop
xlat
mov
pop
rclb
out
xchg
ffreep
push
adc
jb
mov
mov
mov
jbe
inc
mov
lahf
repz
add
in
sub
cltd
cmp
sub
jbe
lea
repnz
pop
mov
ror
jae
xor
sub
add
xchg
lds
inc
pop
mov
mov
sub
mov
loope
cmp
or
out
in
xor
lret
sbb
jecxz
pop
sub
aaa
popf
movsb
scas
div
into
jnp
xchg
jae
and
mov
jae
clc
jns
shrl
stc
push
push
adc
aam
fldcw
daa
push
in
push
sti
push
jg
cmpsb
mov
sbb
sahf
xor
pop
xchg
lods
sbbb
mov
fwait
jmp
xchg
lret
xor
push
xlat
lret
fdivr
pop
mov
xchg
push
mov
popl
mov
in
insl
mov
jns
mov
pop
rolb
jns
sbb
std
pop
aas
dec
sub
and
lret
push
cmp
ja
push
add
inc
gs
aas
inc
jnp
pop
xchg
xor
pop
into
dec
push
cmp
xchg
and
sarb
addr16
cmp
movsb
lahf
adc
mov
adcb
xchg
dec
or
arpl
stos
mov
adc
adc
shrl
xor
xor
std
mov
mov
das
dec
jae
popa
call
mov
push
adcb
je
mov
test
jb
inc
daa
pusha
or
push
sub
push
mull
and
push
jae
in
pop
daa
aam
mov
xor
mov
fwait
dec
add
lea
xorb
jmp
xchg
jg
dec
jno
cld
cmpsl
add
jp
jne
jbe
jp
lock
ret
sbb
pop
mov
sbb
mov
push
jmp
lahf
int3
xchg
mov
jg
mov
ja
fcmovnbe
imul
mov
insl
arpl
stc
push
shlb
pop
cmp
push
ret
push
ss
lea
xchg
loopne
incb
dec
pop
xor
mov
mov
enter
aam
sbb
sbb
int
packssdw
adc
enter
adc
movsb
pop
fcmovnbe
mov
out
rcrl
leave
mov
insb
std
sbbl
ljmp
aaa
push
xchg
mov
mov
mov
lret
adc
or
movsl
xchg
pop
sub
sub
movsl
in
outsb
mov
add
xor
sbb
pushf
jnp
std
into
xor
mov
leave
idiv
daa
jo
addb
leave
add
cmpsl
sahf
std
push
pop
sub
inc
cmp
mov
mov
sbb
push
fs
mov
sbb
imul
in
jmp
pop
scas
fcom
fcomi
xor
sbb
xor
filds
push
xchg
in
stc
jecxz
sbb
outsb
pushf
xchg
inc
push
out
repnz
sub
inc
sahf
pop
jmp
xchg
sub
dec
pop
push
inc
push
push
cltd
aam
xchg
mov
mov
jae
xor
xchg
in
pop
xlat
push
dec
mov
lds
sub
pop
sub
mov
inc
mov
mov
faddl
shl
repnz
sbb
dec
jae
sbb
pop
ficoml
push
lahf
add
popa
faddl
add
sub
lods
movsl
rol
lea
call
push
das
sub
sub
in
xchg
iret
leave
or
call
jae
add
mov
movsb
repz
aam
in
divb
pop
mov
shll
jo
cs
jl
scas
das
add
mov
jb
and
cmp
push
adc
mov
scas
adc
lods
call
cmp
stos
xchg
pop
or
les
dec
pop
sbb
jl
dec
inc
mov
imul
cmpb
mov
xchg
sti
inc
xchg
imul
push
arpl
or
pop
scas
cmp
imul
cmp
int3
in
std
dec
mov
xor
xchg
pop
adc
outsl
jmp
lea
notb
push
push
pop
add
fidivrl
add
add
jb
scas
dec
aam
outsl
out
adcl
jno
jae
pusha
imul
mov
xchg
test
aad
add
cmp
pop
push
cmp
inc
push
inc
inc
fcmovb
mov
icebp
pop
cmp
pushf
mov
repnz
cmpsl
dec
mov
sub
in
imul
icebp
sbb
add
bound
sub
xor
test
push
mov
imulb
inc
rorb
movsb
add
aad
bnd
hlt
xor
xchg
andl
push
xchg
call
adc
rcrl
sti
femms
push
xchg
pop
push
mov
pusha
mov
and
adc
into
outsl
dec
pop
pop
js
jmp
or
and
cmpsl
sahf
sub
cmpsl
mov
cmpsb
outsb
jge
xor
add
rolb
mov
lods
or
push
xor
les
aaa
push
test
sub
pcmpgtw
sub
pop
sub
lds
dec
cwtl
stos
cli
insl
add
in
jns
add
inc
ljmp
or
sbb
inc
jae
dec
xchg
xor
cli
js
call
sub
lahf
je
xor
jle
rcrl
imul
jecxz
sub
lret
movsb
xchg
xchg
inc
in
adcb
out
out
in
insb
loopne
loop
and
flds
lds
mov
mov
mov
daa
mov
xchg
sub
loopne
xchg
mov
aaa
xchg
xlat
inc
mov
add
cmp
cld
imul
jno
and
flds
push
mov
shll
xor
push
outsl
or
add
popa
pop
sub
sbb
sbb
pop
xor
repnz
loope
sbb
daa
in
push
pop
xchg
mov
jb
outsb
mov
arpl
sahf
sbb
in
jbe
frstor
pop
mov
pop
xchg
lea
pop
xor
iret
inc
dec
sub
xchg
and
fsubrs
imul
or
fistps
inc
test
jbe
push
adc
cmp
ret
mov
inc
sub
outsb
repnz
push
jno
xchg
loope
roll
and
cld
test
repnz
shr
fwait
mov
xchg
lret
xor
sbb
les
fwait
push
jecxz
leave
pop
xchg
sbb
sbb
addr16
pop
or
int3
fbstp
add
in
push
adc
test
loopne
mov
jecxz
jo
icebp
mov
push
rorb
xchg
xor
mov
cli
cmp
jb
push
mov
je
inc
cwtl
popa
pop
and
aaa
sbb
out
es
test
into
jb
test
xchg
jmp
push
xor
clc
adc
scas
push
mov
into
push
inc
outsl
rolb
push
test
cltd
xor
stc
xor
xor
xchg
xchg
sar
and
jne
ljmp
xchg
add
es
add
cmp
fsubrl
and
mov
jge
pop
and
iret
mov
rep
ds
scas
mov
aaa
fldenv
fidivrl
jmp
cltd
xor
popa
jl
xchg
jge
dec
pop
push
mov
xchg
fistpl
lcall
sub
jle
rclb
movsb
loopne
outsl
or
mov
les
mul
mov
imul
ja
add
shrb
pop
sbbb
stc
out
dec
sub
and
lods
mov
cltd
mov
sbb
xchg
sub
lea
addr16
jge
sahf
jp
mov
add
sbb
adc
pop
into
in
jmp
push
dec
loopne
je
test
jne
ljmp
sbb
fdivs
push
or
lods
aas
mov
pop
fistpll
cmc
scas
stos
and
add
mov
out
or
stos
xchg
sbb
bound
loopne
std
lods
inc
arpl
dec
cld
cmp
imul
add
leave
sti
test
enter
jns
icebp
add
mov
stc
loop
ret
repnz
pushf
or
fwait
adc
mov
arpl
ret
jmp
rolb
test
sub
and
pusha
cmp
push
xor
js
outsl
rcll
jo
push
pop
clc
leave
push
mov
in
or
add
sub
dec
push
icebp
fidivrs
xchg
sub
push
lret
sti
mov
ds
mov
mov
pop
add
inc
pop
scas
xchg
sub
lcall
adc
push
popf
fists
fsubs
test
outsb
add
xchg
sbb
sbb
mov
pop
xchg
lods
je
mov
call
push
mov
test
daa
pop
imul
out
mov
or
outsl
jae
lahf
mov
sub
in
loope
das
es
mov
and
pop
xor
push
test
out
gs
rclb
fmull
dec
shl
pop
mov
rclb
push
in
stos
or
adc
sbbb
adc
aas
add
mov
pusha
fcmovb
mov
pop
and
in
xor
push
lea
mov
xlat
fld
sub
push
inc
push
fistps
xchg
ja
jae
call
and
jo
scas
cmp
push
cmp
addr16
mov
popa
scas
pop
xchg
daa
dec
push
pop
sub
outsl
push
out
xchg
inc
pop
stc
mov
mov
rol
ret
jl
and
rclb
fdivr
and
popa
jae
or
xchg
jl
sub
xchg
popf
fisubrs
rclb
dec
push
and
cld
aas
mov
xchg
cmp
push
lods
mov
leave
rolb
nop
pop
jns
jo
test
int
mov
cld
into
xlat
pop
lret
mov
adc
mov
repnz
movsb
jo
ja
inc
pop
mov
scas
cmpsl
test
jge
test
adc
lods
enter
push
push
fildll
cmpsb
adc
std
and
cmp
xor
inc
pop
mov
mov
pop
xor
popf
pop
xor
cs
shrb
sub
dec
aam
xlat
rcr
mov
xchg
ret
sub
pop
or
pushl
test
push
sti
add
repnz
imul
out
push
std
outsl
xorb
lods
push
mov
js
in
mov
adc
and
pop
test
sbb
decl
pop
xchg
jecxz
cmp
enter
jno
clc
xchg
adc
mov
adc
jge
cmpsl
pop
loop
roll
int3
test
jge
push
sub
dec
ja
daa
inc
in
add
lods
xchg
and
xchg
pop
jae
movsb
inc
xor
subl
jecxz
mov
add
jp
das
fxch
jg
fistpl
out
pop
mov
in
jmp
jae
stc
das
adc
xchg
xchg
ja
sarb
aam
repz
rorb
jle
sub
sub
push
xchg
into
jle
sbb
inc
mov
addr16
mov
sub
and
outsb
fsubrs
ficoml
sahf
and
cmpb
cmp
cmpsl
lock
mov
xor
xchg
lcall
push
ds
scas
push
jae
out
sub
nop
inc
sub
sub
arpl
stc
jo
adcl
fildll
scas
seto
shlb
push
or
addb
scas
sbb
pop
and
sub
cmp
pop
cmp
dec
pop
inc
jecxz
div
out
xorb
sub
sbb
pop
mov
cmpb
push
cwtl
and
std
adc
fwait
lahf
jmp
pop
mul
fs
or
cwtl
ja
xlat
mov
addr16
mov
dec
mov
push
cmc
clc
mov
push
mov
inc
mov
loope
xchg
dec
into
cmpb
add
daa
sub
lods
inc
and
mov
aam
bound
adc
test
or
scas
mov
mov
sbbb
xchg
and
mov
jle
lcall
and
lcall
mov
xor
mov
es
pop
pop
repz
stos
lret
negb
je
mov
dec
sti
inc
push
or
fsub
mov
xor
xchg
cli
add
xchg
pusha
aas
nop
xchg
fsub
mov
or
scas
enter
xchg
jmp
fcoml
out
loop
ret
mov
sub
pop
scas
push
xchg
shrb
xlat
in
out
mov
add
int3
jecxz
les
jb
cmpsb
nop
sbb
or
sbb
mov
push
out
jbe
sub
and
ds
fwait
mov
fucomp
int3
push
xchg
shrb
les
mov
inc
lret
mov
movsb
sbb
mov
hlt
shrl
mov
aad
cmp
xchg
xor
xchg
push
mov
push
fcoml
sub
mov
mov
sub
push
jbe
xchg
pop
dec
jmp
imul
test
jmp
xor
add
push
inc
cmp
addr16
sub
gs
dec
ja
xchg
xchg
js
sbb
and
add
fwait
popa
adc
aas
repnz
ss
fcomip
loopne
pop
and
cmp
stos
jno
add
pop
into
cli
or
jo
jbe
cmp
and
in
gs
ja
es
pop
cmp
pop
pop
push
jns
hlt
hlt
mov
sbb
inc
rcll
movswl
in
mov
int
ljmp
cltd
adc
roll
lods
int3
enter
data16
sub
jecxz
and
call
push
adc
jmp
hlt
ja
repnz
aaa
cmpsl
mov
je
cmp
stos
ljmp
jge
aas
xor
mov
cmc
xor
cwtl
add
leave
ss
in
jmp
sub
movsb
out
out
mov
sub
jecxz
sbb
test
daa
sbb
jae
add
xchg
mov
add
ret
sbb
push
ret
cmc
xchg
dec
sbb
jmp
cmp
mov
incl
aad
push
out
repnz
cltd
push
loop
add
pop
bound
cld
arpl
pop
nop
and
mov
clc
dec
inc
mov
loopne
stos
mov
mov
lods
and
subb
aad
lea
imul
inc
lret
xor
jmp
sub
push
pushl
jno
cmpsl
insb
cmp
pop
sbb
xchg
xchg
aas
mov
jne
xchg
sti
sub
mov
jge
fildll
stos
push
jae
cmp
sti
inc
das
jg
pop
mov
hlt
outsl
xor
jno
shrl
cmc
dec
mov
pop
push
mov
pushf
scas
lret
cli
mov
cmp
mov
xchg
xchg
faddl
out
mov
repz
xor
in
pop
in
out
movsb
jge
mov
scas
mov
daa
hlt
mov
dec
push
or
scas
mov
xor
xlat
cld
insl
aas
inc
aam
mov
xchg
outsb
jnp
lahf
mov
jno
inc
adc
sub
out
mov
in
jp
xchg
adc
dec
jp,pn
and
cmc
pop
lcall
add
repnz
test
fwait
mov
or
repnz
icebp
adc
mov
mov
mov
or
sti
jecxz
iret
fcmovbe
and
gs
mov
push
mov
js
sbb
jae
add
push
inc
jae
mov
jbe
incb
addb
das
jge
pop
jmp
dec
mov
fcmovbe
inc
aad
data16
vsqrtps
cmp
push
cmp
mov
and
push
sbb
xlat
outsb
stos
and
faddp
sub
sti
pop
imul
jo
mov
cmc
jmp
div
and
cmpsl
mov
lods
fisubrs
popa
mov
mov
xor
stos
cmp
pop
addb
aad
sar
pop
lahf
es
addl
sbb
scas
mov
mov
inc
icebp
dec
js
cmpsl
add
aad
mov
jecxz
pop
lods
rcrb
mov
mov
lret
add
sbb
dec
daa
adc
dec
pop
xchg
push
dec
pop
int3
in
and
sub
cld
scas
inc
push
sbbl
cs
and
inc
ss
xchg
adc
add
gs
jp
mov
out
addl
add
add
loop
movsl
fdivrl
mov
xchg
add
mov
jg
push
or
js
lret
cli
ja
add
decl
pop
aaa
pop
pop
rorb
clc
sbb
mov
out
imul
and
loop
pop
into
jnp
repz
sbb
lds
push
out
cmp
clc
out
in
inc
mov
sub
movsb
mov
popa
sub
adc
xor
cwtl
bswap
dec
inc
cli
jg
cmp
push
lret
sbb
push
sub
jmp
pop
mov
out
into
jle
scas
outsl
cmc
sbb
cmpsb
lahf
repz
loopne
rcl
jno
bound
xchg
and
cmp
loope
xchg
cwtl
or
push
push
push
insb
jge
and
xor
and
dec
fnstcw
insb
ss
lock
rcrl
in
cmpsb
add
cmp
fwait
popa
dec
pop
fistps
pop
adc
dec
arpl
mov
ficomps
cwtl
sub
notb
mov
dec
dec
push
fwait
int3
add
test
icebp
jp
cmpsl
loop
jo
adc
subb
adc
mov
into
sub
or
mov
mov
popf
push
imul
inc
imul
mov
xor
lahf
jge
sbbl
stos
decl
pushf
daa
loope
mov
mov
out
js
push
daa
pop
out
stos
std
sti
or
xchg
pop
outsb
sub
or
add
xchg
stc
sbb
lods
sahf
lods
jmp
pusha
jl
lcall
leave
add
jmp
rorb
ret
jge
ret
jg
push
mov
inc
and
cmp
mov
sub
mov
mov
and
int
xchg
imul
addr16
and
cmp
inc
cmp
fcompl
scas
lock
xor
adc
cmc
out
jno
or
cli
pop
mov
frstor
lret
or
daa
jnp
xchg
arpl
jle
icebp
jo
out
jl
sub
repnz
sbb
adc
add
add
mov
stos
dec
out
mov
mov
xlat
jge
inc
fidivs
ds
loope
outsl
jnp
bound
cwtl
lds
int
rorl
mov
pop
pop
jge
movsb
dec
inc
je
test
stos
cmp
shlb
xchg
mov
xchg
pop
jno
inc
pop
mov
pusha
rol
nop
push
mov
push
and
xor
mov
ret
orb
mov
rcrl
dec
pusha
mov
cmp
cli
mov
enter
fbld
std
jbe
mov
or
jns
pop
imul
mov
mov
ret
testb
daa
xor
int3
cmpsb
sbb
jecxz
or
repz
sbb
and
insb
notb
sbb
inc
shll
call
movsl
mov
or
and
jmp
imul
pushf
stos
cld
popa
sti
jge
loopne
mov
xchg
mov
ja
dec
jbe
ret
or
aaa
jae
scas
lods
mov
sbb
push
mov
mov
out
mov
lret
outsl
mov
stc
add
scas
in
push
or
imul
jmp
sub
dec
fisubrs
je
dec
hlt
mov
xlat
das
ss
pop
jne
ffree
leave
xchg
jge
test
insl
arpl
ret
sbb
pop
lods
xor
hlt
hlt
insb
jns
add
jno
inc
jbe
mov
addr16
mov
cmpsb
imul
je
pop
ljmp
imul
je
sbb
jmp
fmul
push
mov
out
xchg
or
es
lds
pop
lea
xchg
push
and
test
addr16
je
inc
xchg
divb
pop
insl
sbb
xchg
pop
or
xchg
push
mov
sub
mov
jb
inc
xlat
pop
jmp
push
lea
data16
or
adc
adc
mov
mov
out
popf
popa
call
add
pop
and
int
jne
inc
cmp
andl
jmp
mov
dec
xchg
js
sbb
lcall
xchg
xchg
addr16
mov
fists
sub
les
leave
enter
pop
push
mov
imul
jno
jle
mov
movsl
inc
mov
gs
scas
leave
jo
add
cmp
mov
stos
jmp
push
push
adc
add
xchg
mov
or
mov
cmp
jae
cmp
xchg
aad
pop
add
daa
mov
je
mov
xor
cld
repnz
fnstenv
jp
scas
adc
cmp
mov
mov
cmp
mov
pop
outsb
fstpl
inc
int3
jle
mov
adc
adc
jg
mov
mov
out
ret
incb
inc
xchg
inc
push
inc
xchg
ljmp
outsb
ret
aas
fldt
stos
pop
out
or
dec
aad
and
xchg
and
fwait
pop
sbb
addr16
lret
jl
sbb
nop
nop
xor
in
add
loope
out
inc
mov
fmulp
cmp
divl
push
rcr
cli
std
je
fwait
dec
shll
dec
add
inc
pop
jmp
inc
pop
mov
mov
sbb
imul
cwtl
push
lahf
ffree
repz
sti
mov
bound
cmp
rclw
add
lods
daa
mov
leave
in
xchg
push
dec
push
repz
ds
rorb
out
jl
add
nop
pop
clc
imul
push
inc
shl
jmp
pop
jl
adc
ror
xchg
cwtl
adc
aaa
repz
repz
and
push
pop
repz
push
adc
jne
rolb
repz
js
fmull
mov
inc
xor
pop
mov
cmp
rorb
test
xlat
divl
bound
pop
lods
loope
in
or
ja
cltd
inc
test
mov
cltd
mov
sub
sbb
xor
mov
repz
adc
cli
push
cmp
stos
adc
mov
mov
mov
mov
xchg
das
inc
add
int3
in
pop
lods
dec
jb
sti
or
push
pushf
fstl
and
sti
sub
repnz
sbb
pop
inc
push
lea
popf
rclb
sahf
adc
popa
loop
lahf
js
sbbb
push
out
adc
das
xchg
imul
push
jmp
and
fwait
inc
ljmp
stos
filds
cmpsb
rcrb
iret
enter
lret
xchg
subb
leave
ret
add
mov
mov
mov
inc
rolb
test
pop
fstl
leave
cmp
pop
dec
add
popa
ret
xchg
pushf
xchg
inc
icebp
dec
loope
int3
pop
mov
dec
insl
add
cmpsl
mov
addr16
jno
lret
into
iret
scas
out
fcompl
outsl
int
test
cld
cli
and
int
mov
fcmovbe
dec
or
imul
xchg
iret
je
sub
fucomip
push
int3
dec
aaa
xor
subb
mov
dec
lcall
mov
push
les
mov
popa
sbb
inc
adc
decl
imulb
jmp
icebp
pop
mov
sbb
in
ret
jne
add
adc
mov
mov
sbb
std
ret
xchg
aaa
aaa
pop
lahf
xchg
les
push
mov
jb
aaa
inc
sub
scas
or
inc
stos
pop
aad
push
push
cltd
inc
movsl
lret
mov
mov
jo
mov
xchg
aas
mov
aad
sbb
jo
ficoml
and
mov
fisubrl
icebp
mov
mov
jecxz
or
mov
mov
ret
sbb
inc
repz
mov
pushl
pop
sbb
jnp
push
addl
push
aam
test
cmp
add
mov
loope
aam
jmp
cmpsl
lret
xchg
movsb
push
ja
push
aam
fucomi
arpl
test
cwtl
jbe
sti
dec
add
cmc
jne
add
mov
jecxz
leave
xor
pushf
fstpt
mov
out
lea
dec
push
jmp
sub
std
in
test
fisttpl
das
adc
mov
movsl
dec
adcl
leave
rcll
fnstenv
lods
cmpl
pop
in
mov
and
outsl
jo
outsb
rcrb
push
sti
pop
and
lods
push
iret
or
out
jp
lcall
jbe
in
cmp
sbb
xchg
call
rorb
sub
rolb
adc
repz
and
lret
cmp
fwait
cmpsl
push
cli
sub
inc
data16
mov
je
cmp
add
and
cli
mov
mov
lods
and
dec
aas
sub
and
lods
outsb
cmpsb
test
dec
jg
cmpsl
xor
into
mov
mov
sbbl
fldt
test
or
setno
cli
movsb
les
lretw
sahf
sub
xlat
outsb
or
test
sarb
mov
scas
das
dec
jecxz
adc
push
std
mov
stos
adc
mov
or
loopne
xor
mov
sub
mov
add
scas
sbb
and
push
jle
pop
ror
cli
pop
add
sub
mov
sub
dec
addb
pushf
lret
mov
sti
jno
sti
fwait
stos
pop
xlat
js,pt
jg
dec
add
iret
sbb
das
sub
inc
lods
xchg
cmp
arpl
adc
pop
cmp
gs
mov
in
popa
mov
xchg
sbb
aaa
and
movsb
dec
out
into
arpl
leave
sbb
stos
sbb
and
out
xorl
cmp
pop
add
xor
fstl
jne
jle
test
sti
sub
setno
fcom
or
jmp
rolb
jg
add
sbb
inc
and
adc
fwait
cmp
mov
lods
lods
push
push
pop
fnstcw
sub
inc
and
ret
xor
insb
cmp
dec
mov
sub
sbb
jns
and
dec
sti
push
dec
cmp
add
fbstp
xchg
sub
push
cmp
mov
cmc
push
or
mov
xchg
mov
pop
sub
loop
xchg
or
jb
int3
sub
das
aaa
arpl
cwtl
push
mov
mov
jg
ljmp
push
adc
pop
popa
jecxz
sub
pop
sbb
jge
mulb
popf
std
xor
fdivl
sub
dec
fstps
ljmp
cmpsb
push
and
push
adc
adc
gs
add
shlb
pop
out
ljmp
hlt
xor
and
fwait
ret
ja
sti
dec
xchg
mov
out
in
mov
xchg
add
in
adc
mov
pop
sbb
aad
pop
push
outsl
insb
dec
push
cmpsb
scas
xor
cmp
ljmp
cli
mov
out
mov
push
push
dec
pop
lock
bound
inc
pushf
sub
fldenv
scas
scas
cmp
ss
popf
test
in
cmp
andl
movsb
loope
push
stos
jae
data16
ja
xchg
or
imul
pop
dec
pop
js
xchg
lds
xchg
lahf
add
call
rcr
rolb
iret
sbb
test
arpl
cmc
roll
les
cs
pop
dec
and
push
push
pop
dec
mov
js
leave
lods
daa
pop
cmc
or
push
dec
test
movsl
insl
inc
cmp
ss
cmp
or
sahf
popl
pusha
out
test
add
adc
sbb
sub
call
scas
push
insb
int
add
sbbl
mov
cmc
cmp
cld
iret
push
lcall
lods
enter
iret
pop
loopne
inc
lods
loopne
out
push
xor
push
imul
sbb
xor
repnz
mull
ja
fldl
push
js
pusha
mov
sub
arpl
roll
push
xchg
mov
cwtl
mov
push
shrl
out
enter
cmp
loope
adc
xor
mov
dec
inc
sti
push
jne
sbb
stos
cmp
sbbb
in
incl
adc
or
outsl
sbb
in
mov
jg
push
pop
sbb
subb
lret
ljmp
push
mov
mov
psraw
lock
fldenv
sbb
test
mov
mov
or
js
js
fcmovb
cmp
sbb
add
arpl
xchg
cmp
cmp
xor
pushf
cwtl
jecxz
rorl
fidivrl
cmpsl
repnz
and
lret
js
pop
and
fldt
in
pop
inc
ljmp
sarl
fcomp
ja
ss
push
hlt
inc
mov
jb
cmp
fwait
sbb
jnp
test
xor
pushf
icebp
xchg
xchg
cmp
dec
cmpsb
inc
sub
inc
xchg
cld
je
pop
mov
push
cmp
lret
rcll
psadbw
rcl
xchg
mov
ret
jo
mov
push
mov
cmp
imul
loop
dec
ljmp
test
dec
rorl
mov
sbb
nop
cmp
in
xchg
popf
or
mov
jns
test
cmpsl
outsb
adcb
mov
and
inc
push
adc
jb
push
push
adc
xor
add
iret
test
aam
mov
mov
in
andl
dec
jbe
cmp
aam
dec
mov
outsl
rolb
jnp
jbe
inc
int
out
sbb
mov
testb
ret
in
popa
mov
lds
jl
pop
jns
cld
mov
fiaddl
leave
ljmp
fsts
imul
sbb
and
cmp
into
out
nop
mov
mov
stc
xchg
test
sti
push
arpl
adcb
js
imul
ds
imul
mov
ret
push
xchg
das
pop
cmp
or
dec
sbb
pop
out
jge
leave
jl
das
inc
aaa
mov
shlb
cs
cltd
mulb
lret
pop
fwait
or
aaa
shlb
inc
addr16
mov
in
inc
pusha
and
fcomps
loopne
ret
flds
xchg
jle
fidivl
inc
dec
hlt
push
lret
rorl
fldl
jmp
inc
and
cmp
movsl
push
fsubrp
push
cmpsl
or
jo
dec
loop
xor
push
int
adc
jnp
inc
and
lods
imul
pop
xchg
xorb
push
pop
push
pop
pushf
movsb
arpl
jb
xchg
sub
sahf
insl
push
sub
sbb
js
out
jo,pn
push
add
lods
cmp
ret
jne
test
out
push
arpl
xor
lock
jg
pop
sbb
dec
and
fcomp
cwtl
xchg
ror
jnp
or
movsb
sub
iret
js
sahf
call
gs
pop
and
sbb
jb
call
jnp
out
div
jne
dec
syscall
sub
jp
cmp
jecxz
inc
stc
mov
aaa
leave
xor
rcrl
in
jge
push
push
or
ds
lock
mov
fwait
sub
xor
stc
fildl
lods
jb
or
loope
test
or
pushf
and
ret
pop
iret
incb
mov
in
mov
int
or
shll
xor
mov
dec
push
rclb
imul
dec
pop
loopne
test
push
daa
pop
clc
repz
out
imul
int3
int3
sub
outsb
push
mov
ss
mov
mov
sbb
xor
mov
fdivl
test
adc
push
in
inc
sbb
ret
mov
sbb
repz
sub
jbe
pop
mov
subl
push
inc
stc
roll
pop
jl
xor
inc
cmp
inc
adc
lods
add
dec
int3
enter
out
mov
and
call
and
or
pop
jecxz
mov
mov
bound
inc
add
mov
test
inc
sbb
mov
scas
add
gs
scas
addr16
mov
pop
scas
mov
adc
jno
scas
rolb
pop
movsb
fwait
loop
insl
cmp
mov
lock
jno
mov
iret
sbb
js
rcrb
push
sbb
mov
add
xor
aas
cmp
xchg
xor
dec
xor
lods
mov
dec
popa
mov
cmpsl
stos
divb
pop
iret
push
clc
xor
push
xchg
sbb
pop
pop
push
cmp
je
pop
test
aas
sbb
cmp
sub
imul
xlat
test
iret
fistps
sbb
mov
push
cld
lcall
fs
and
bound
shl
cmp
jb
adc
mov
loop
sbb
pop
dec
adc
mov
lods
jl
jno
add
push
mov
scas
adc
lock
pop
xchg
pop
sub
faddl
jg
aaa
scas
push
sbb
test
and
dec
or
adc
pop
cmp
ljmp
jns
pcmpeqw
aaa
jne
fstps
add
aam
sbb
push
pop
pop
or
push
push
cmpsb
mov
lock
cmp
inc
jl
and
movsb
push
add
xchg
mov
add
clc
lods
decl
test
shll
subl
fisttps
loopne
push
pop
test
add
fsubl
dec
dec
adc
adc
loopne
divl
mov
dec
pop
ja
mov
std
fmuls
jecxz
sub
dec
call
cmc
jo
jo
mov
pop
in
inc
out
add
push
out
clc
dec
int
sar
pop
mov
xchg
lret
div
cld
fwait
loop
mov
mov
js
xor
cmp
subb
push
data16
fidivrl
insb
lcall
xor
adc
mov
shrl
fadd
push
out
js
ficoms
dec
push
out
mov
jae
sti
or
xchg
test
and
loope
inc
imul
adc
nop
push
lock
hlt
push
fldcw
push
je
mov
or
pop
orl
mov
sub
ds
push
mov
xor
xor
sarl
test
das
pop
and
cmp
div
mov
mov
sub
xchg
dec
sbb
pop
mov
jg
xchg
je
call
fcomps
pop
mov
ss
push
test
jl
push
pop
call
mov
ljmp
adc
mov
xchg
shlb
ljmp
mov
filds
ret
fs
mov
outsl
sub
rorb
daa
sbb
pop
filds
scas
out
cmp
divl
lcall
push
popf
ljmp
sub
aam
mov
inc
xchg
out
add
les
popf
xor
pop
lods
in
in
dec
add
or
sarl
jmp
das
inc
dec
stc
xor
addr16
adc
pop
xchg
mov
push
std
in
pop
dec
loop
sti
mov
push
push
mov
js
pop
and
mov
jbe
or
rolb
andps
shll
inc
lret
push
lock
jl
jae
sahf
add
aad
push
fnstsw
repnz
pushf
jle
mov
cld
stos
add
sti
dec
cmc
loop
lods
sahf
lds
pop
and
sahf
and
add
sub
mov
loop
lods
jl
loope
jne
cmp
pop
repnz
add
cli
call
push
data16
inc
push
mov
jo
adc
iret
xor
jno
cmp
dec
das
fisttps
inc
xor
repz
in
pusha
dec
adc
out
roll
sub
sarb
aaa
xor
jge,pt
xor
push
sub
daa
jnp
push
push
mov
sbb
setb
lock
jle
and
lahf
sbb
or
pop
leave
mov
mov
pop
ret
jle
cwtl
popa
xchg
cmc
gs
jnp
jbe
and
and
push
jb
mov
pop
sbb
in
pop
pop
test
xchg
mov
sti
ljmp
lret
cli
inc
popa
mov
enter
mov
push
adc
lods
mov
jno
icebp
das
cli
jmp
jns
cmp
push
outsl
xor
pop
sarl
insl
popf
aam
insb
add
cmp
push
hlt
std
int
cmpsl
sbb
and
and
sahf
mov
aas
gs
enter
mov
xchg
xchg
push
push
mov
in
mov
inc
or
inc
ja
inc
mov
jle
pop
xchg
xchg
sbb
fs
cli
aaa
sub
cmpsl
aad
pop
xchg
int
mov
add
shlb
enter
jecxz
scas
mov
cmp
jne
xor
orb
xorl
mov
into
std
stc
popl
int3
sbb
xchg
lds
out
push
mov
in
xor
mov
stos
jmp
out
adc
pop
add
ss
push
dec
xchg
sub
push
aam
fidivs
pop
xlat
jg
icebp
jne
jbe
les
jmp
in
jge
mov
sub
shll
clc
repz
sbb
fidivrl
data16
ds
mov
cmp
mov
fdivr
or
hlt
jmp
movsb
outsl
push
out
mov
test
mov
jnp
push
leave
inc
dec
xchg
aam
ret
pop
out
test
repz
sbb
inc
fwait
mov
fistl
push
add
pop
js
xchg
sub
orl
push
push
lds
ss
mov
call
add
pop
das
jo
mov
pop
les
int
pop
inc
mov
xchg
lcall
mov
mov
inc
jg
pushf
and
jp
andl
inc
sbb
jg
rolb
dec
ret
add
subl
mov
fnsave
xchg
fsubp
hlt
test
movsb
add
pop
mov
sbb
dec
fildl
daa
sub
mov
bound
pop
aad
mov
bound
ljmp
pop
jp
push
mov
push
lahf
movsb
mov
sub
mov
mov
es
dec
sub
testb
push
jb
das
scas
push
sti
mov
xchg
je
loope
cmp
in
xchg
xchg
outsl
jne
jle
pop
cmp
mov
lahf
lcall
mov
xchg
jl
xor
iret
inc
les
adc
or
mov
push
movsbl
arpl
mov
cli
andl
push
or
lea
mov
mov
sbb
cmp
cmp
and
ds
adc
push
hlt
icebp
pop
cmp
jp
ror
or
mov
test
sti
cmp
pop
push
jmp
loop
inc
cmp
imul
ficoml
fnstsw
notb
dec
xor
pop
test
inc
stos
and
inc
imul
cmp
mov
mov
xchg
inc
out
outsl
push
inc
jns
mov
cmp
dec
dec
daa
repz
sbbl
cmp
jecxz
pushf
inc
jmp
xchg
negl
cmpsb
mov
push
fistpll
xor
xchg
in
ljmp
stc
pop
cmc
sub
cmp
jmp
icebp
inc
xchg
inc
subb
ss
sub
cli
sbb
cmpsl
xor
mov
int
leave
add
rcll
iret
popf
jle
leave
rcl
add
in
imul
push
std
insb
mov
pop
movsl
mov
xchg
push
fldenv
jns
repz
push
test
in
dec
xchg
sub
in
dec
test
push
push
mov
nop
loopne
pop
daa
imul
inc
inc
lea
dec
divb
mov
popl
push
jge
adc
in
pushf
int
or
test
jb
inc
add
repnz
outsl
outsb
pop
insb
sub
dec
or
mulb
fsub
orb
pop
test
fdivr
mov
scas
xchg
insb
sub
fidivrs
enter
sarb
mov
jo
mov
xchg
loopne
xchg
mov
inc
push
addr16
mov
push
jno
iret
add
mov
clc
fcomi
in
outsb
sbb
jmp
in
jnp
sbb
in
fidivl
dec
and
sub
jl
lahf
in
push
test
push
cmc
push
push
ljmp
mov
xor
add
cmp
rcr
or
dec
sarb
jb
xchg
xor
push
dec
cmp
das
mov
lahf
cmp
rcr
xor
adc
repz
cli
adc
sbb
int
sbb
push
xor
ljmp
loopne
jmp
or
insl
inc
push
xor
cmp
cmp
int3
mov
ficoml
ja
sbb
rclb
mov
and
sbb
sahf
rorl
stos
mov
dec
adc
inc
dec
jbe
xchg
stos
lods
movl
mov
cmp
lds
mov
cli
fs
mov
dec
push
ret
add
xchg
inc
in
inc
mov
or
std
xchg
and
lcall
add
xchg
or
lret
or
pop
jmp
jg
jge
dec
inc
movsb
movsl
sbb
sti
lret
mov
nop
mov
std
out
xor
sahf
popa
mov
cmp
sbb
or
lds
mov
mov
and
hlt
adc
xor
rorl
jns
cmp
inc
mov
inc
and
cli
roll
sub
pop
das
add
je
scas
hlt
cmp
push
popa
adc
push
test
sub
imul
xor
mov
cmp
cwtl
fdivrp
scas
cli
data16
cmp
popa
iret
iret
pop
xor
fnsave
adc
and
stc
xchg
jmp
daa
loop
hlt
pop
sahf
xor
addb
mov
dec
and
push
add
xor
inc
out
mov
sbb
fucom
xor
stos
dec
cmc
sub
adc
ret
pop
lret
xor
and
mov
lcall
in
sbb
dec
sbb
pop
add
jns
xchg
mov
loope
mov
cli
ljmp
or
or
inc
mov
ret
repz
sbb
inc
dec
push
mov
mov
je
pop
mov
call
iret
jno
leave
lret
fisttps
pop
loop
and
xchg
xor
sub
scas
inc
mov
jle
mov
mov
sbb
out
lods
fisubrs
push
xchg
pushf
nop
stos
lret
shl
jge
ds
mov
or
xor
filds
test
int3
cs
rcll
xchg
and
mov
mov
movsl
jno
push
pusha
inc
jmp
in
jl
popa
add
add
fldcw
or
mov
dec
xchg
popa
imul
stos
movsb
xor
mov
popf
out
test
out
cwtl
fisubrs
add
xlat
jo
sub
loope
negb
xchg
dec
pop
push
mov
enter
push
and
insl
jnp
mov
xchg
jae
mov
and
cmpsl
lock
jg
pop
xchg
arpl
push
mov
out
repz
push
inc
shll
adc
pop
sbbl
jp
nop
dec
pop
fwait
sbbl
jne
fcmovne
pop
sti
mov
pop
jge
cmp
jae
jne
std
out
mov
jnp
mov
test
or
das
scas
movsl
cmp
sahf
in
outsl
jp
inc
insb
xchg
xchg
cmp
pop
or
adc
or
out
jge
or
pop
xlat
js
sbb
pop
ds
xchg
bnd
jge
adc
ret
js
test
inc
icebp
jae
sub
add
sub
lret
push
test
insl
fldcw
inc
mov
sbb
movsb
cmp
cmp
xchg
pop
dec
sub
pop
imul
out
xlat
scas
ljmp
les
xchg
hlt
insl
pop
jae
loop
imul
xchg
stc
fwait
or
sti
shrl
cmp
inc
add
in
hlt
fistl
sbb
jne
jl
push
popaw
in
sub
inc
cltd
pop
dec
cwtl
fsincos
inc
test
sub
or
jle
stos
rcrl
dec
popa
test
repnz
cmp
sbb
mov
es
mov
or
repz
and
push
inc
shll
push
mov
adc
ss
out
fidivrl
addr16
and
pusha
ds
movsl
push
lret
out
add
in
mov
icebp
in
sahf
cmp
icebp
movsl
xchg
push
stos
add
clc
sbb
dec
xchg
jo
dec
aas
mov
mov
xor
popf
in
bound
cmpsl
test
push
lods
mov
call
rcrb
lret
mov
jb
lret
popa
push
icebp
std
jno
and
mov
insl
out
pop
mov
push
leave
leave
adc
icebp
ret
xchg
and
xor
mov
or
cmp
xchg
sbb
dec
jg
in
jne
xchg
inc
fdivs
icebp
lds
mov
jae
mov
mov
adc
pop
sbb
pop
dec
mov
adc
push
fcmovnu
das
adc
xor
xchg
xlat
and
ret
adc
and
mov
dec
je
mov
lcall
or
roll
ja
add
pop
jmp
mov
sahf
sbb
mov
xchg
ret
lahf
inc
les
ds
insb
decl
lock
loope
notb
inc
sbb
push
gs
cs
add
hlt
out
sub
push
add
jb
jl
and
mov
xlat
cli
lahf
and
sarl
sbb
pop
stos
or
inc
mov
push
es
xchg
and
lcall
mov
or
pop
xchg
pop
inc
stc
jne
out
fistps
pop
loop
sbb
mov
leave
out
mov
add
xchg
pop
jg
push
imul
mov
push
divl
sahf
sub
rcll
nop
jno
ss
xor
rep
es
or
outsb
mov
pop
repnz
mov
ret
jp
fs
mov
cmc
int
pusha
xor
adc
mov
stc
in
mov
mov
adc
mov
pop
sbb
jno
insb
mov
es
mov
jns
push
cld
sub
or
pop
sbb
lahf
or
jne
fnstcw
enter
imul
pop
mov
inc
es
mov
iret
push
dec
test
mov
sub
and
test
mov
shlb
sub
mov
sub
loop
push
inc
mov
mov
cmp
mov
iret
cmp
and
sub
ljmp
or
sub
and
fildll
lds
jnp
mov
arpl
lods
jl
lret
pop
popa
mov
and
out
inc
adcb
mov
pop
mov
aam
call
sbb
xor
aaa
and
iret
xchg
xchg
mov
popa
daa
mov
loope
cli
fidivs
out
xchg
xor
inc
adc
adc
pop
sbb
fisubrl
imul
sti
xchg
test
shlb
in
dec
repnz
push
adc
jge
std
lret
and
fnstcw
iret
push
cmp
sub
jp
nop/reserved
cwtl
into
add
jge
adc
push
xlat
jp
shll
dec
jg
fldenv
inc
jbe
stos
jle
fxch
je
scas
sub
imul
sti
xchg
loopne
imul
jno
and
fs
jns
test
or
and
outsl
stos
pop
sub
mov
dec
ds
out
sbbl
cmp
mov
test
fs
cmp
loop
fnstsw
fcoml
mov
sbb
lcall
inc
sti
fs
hlt
inc
dec
push
sbb
insl
fisubrs
mov
loope
or
jae
add
adc
pop
sbb
or
cmp
leave
mov
test
into
int3
sbb
cltd
jge
or
cmp
in
test
popa
or
push
jne
push
cwtl
sbb
out
stos
mov
cmpsb
xlat
ljmp
es
inc
fwait
nop
sub
scas
lret
mov
out
or
adc
add
aad
and
dec
mov
mov
js
rclb
test
ret
jge
pop
gs
lret
pushf
inc
ja
jo
jno
mov
pop
test
lods
movsl
mov
sbb
sub
lret
cmp
orl
push
outsb
outsl
fnstsw
jbe
push
pusha
sub
aaa
rol
cmp
lock
lret
sub
ljmp
pop
test
jge
mov
jl
and
mov
ret
rorb
mov
xor
mull
ret
test
and
loope
in
mov
insl
outsl
cmp
inc
aam
push
pop
and
or
scas
orb
in
add
xchg
pop
inc
adc
shl
and
mov
pushf
addr16
add
jg
cmp
xor
outsl
push
xchg
popa
dec
push
lds
mov
push
mov
faddl
or
mov
xor
sbb
add
les
add
in
mov
sarl
and
int3
xchg
sub
mov
sahf
adc
mov
aaa
lcall
fs
xchg
test
mov
jo
shlb
xchg
inc
lods
pop
outsb
xchg
cmp
adc
stc
push
adc
mov
add
or
test
cwtl
fs
xchg
jl
popf
test
fwait
lock
scas
in
jle
push
mov
lahf
xor
add
loopne
and
sbb
inc
add
gs
fstl
ds
pop
andl
jge,pt
push
cmp
movsb
sub
push
xlat
pushf
pop
push
mov
push
shl
mov
nop
fwait
jle
push
mov
sbbb
testl
aam
xorl
inc
mov
fsubrp
insb
pop
mov
xchg
cmp
fadds
out
mov
jae
cmp
aam
jnp
insb
cmpsl
mov
add
mov
push
imul
cmp
sti
hlt
into
or
sbb
pop
pop
mov
push
cmc
mov
movsl
xchg
sbb
out
adc
mov
js
or
cmpsl
mov
mov
lea
int3
mov
ljmp
adc
out
lods
adc
add
in
xchg
mov
out
or
xchg
xchg
rorl
test
sub
sbb
lea
sub
outsl
push
mov
xchg
mov
add
ret
loop
xor
mov
cmp
fsubp
dec
ja
or
call
push
jbe
add
adcb
mov
mov
aam
push
pop
and
lahf
or
and
ss
lods
movb
enter
mov
jl
jno
push
sub
ds
fisttpl
cmp
ret
mov
fs
jl
sbb
inc
jge
sbb
popf
push
push
cmp
ficoml
out
dec
scas
xor
push
sub
mov
in
ffreep
adc
fisubl
into
scas
shlb
push
jne
movsb
ds
sbb
mov
sub
imul
jbe
lods
out
fcoms
pop
push
movsl
xor
push
fstps
lcall
push
xor
pop
xor
mov
in
push
arpl
sub
outsb
sub
ud2
mov
adc
adcb
cltd
bound
xor
mov
sub
sahf
xchg
cltd
in
jne,pt
loop
or
dec
jbe
jecxz
jl
mov
popf
unpckhps
add
xor
les
pop
mov
lcall
arpl
outsb
xlat
mov
inc
les
repnz
lret
or
jle
fldt
jb
adc
jb
iret
pop
push
adc
adc
sti
in
xor
in
mov
int
lret
in
outsb
imul
push
xor
imul
mov
call
fsubrl
cmpsl
or
pop
sbb
iret
bound
push
xchg
jne
xlat
jne
fildll
push
pop
mov
sub
gs
fcmovb
and
mov
xor
inc
mov
stos
pop
mov
loop
and
js
add
cmp
stos
cmp
pop
add
dec
mov
ret
icebp
data16
hlt
pop
std
cmc
mov
stos
mov
aas
in
bound
adc
xchg
pop
add
sbb
sbb
mov
or
adc
pusha
pop
xchg
jae
or
dec
jge
fidivs
dec
icebp
add
and
jne
add
pushf
jbe
fwait
lret
ret
popa
dec
mov
fmul
and
fmull
popa
sub
hlt
aad
push
push
das
xchg
lds
and
iret
mov
mov
call
push
dec
mov
inc
push
hlt
hlt
ret
mov
dec
cmp
mov
adc
mov
loopne
sbb
mov
invd
pop
mov
sbb
movsl
mov
jp
clc
mov
pop
vandnps
or
lea
decl
fiaddl
adc
lcall
into
mov
int3
push
sub
pop
clc
lds
jbe
shlb
xchg
mov
and
cmpl
push
sarb
loop
enter
inc
lret
adc
cmp
ficomps
movsb
in
or
arpl
and
pop
das
sbb
jge
jnp
or
clc
popa
test
inc
enter
divb
das
incl
xor
jne
lods
jns
aad
shll
lods
pusha
pop
inc
lahf
outsl
mov
mov
or
push
and
xor
in
xor
stos
add
popa
jb
testb
dec
jne
push
sarl
mov
fsubs
shlb
cld
ljmp
xchg
loope
pop
pushf
pop
in
cmpsb
xor
dec
pop
push
nop
xchg
jnp
jno
jns
scas
jge
das
pushf
andb
stos
lret
shrl
inc
xchg
fnsave
clc
in
sub
mov
movsb
in
aam
ljmp
push
popl
jae
fs
insb
repz
mov
or
push
push
xor
fnsave
mov
inc
xchg
mov
mov
push
cltd
mov
mov
mov
repz
in
add
sub
outsb
inc
jmp
push
inc
shll
sbb
mov
cwtl
fldz
cli
sub
testb
and
popa
inc
jge
pushf
mov
mov
popf
inc
cmpl
dec
xor
pop
pushf
xchg
fdivs
test
mov
mov
icebp
jns
std
imul
movsl
sbb
enter
ret
inc
movb
jmp
nop
popa
sbb
add
outsl
icebp
jecxz
test
and
cmp
enter
jp
loop
ret
xorb
fisubrl
pop
inc
out
jmp
idivb
jno
cmp
mov
stc
divb
daa
and
imul
pop
adc
lea
insl
rolb
pop
popl
cmpsb
push
push
frstor
aad
lret
mov
imul
test
xchg
scas
hlt
loope
pushf
xor
jbe
stos
movsb
and
dec
ret
xchg
cs
outsb
iret
outsb
push
scas
jb
ja
loopne
mov
mov
jecxz
and
in
adc
pop
mov
test
adc
xchg
in
add
xor
mov
pushf
addr16
in
mov
mov
lds
cmc
sbb
inc
out
xchg
push
push
sub
sub
shrl
in
cld
cmp
jg
xlat
out
jmp
push
sbb
popf
xor
mov
jnp
xchg
lret
pop
jne
mov
lock
shl
dec
sbb
fnstcw
push
rcrb
sub
jne
stc
in
jle
fistpll
pop
inc
adc
sub
fdivrs
sbbl
gs
adc
xchg
push
jae
mov
les
pop
dec
std
mov
ret
mov
xor
inc
mov
cmpsl
dec
sahf
jo
xor
add
sub
xchg
add
sub
fisubl
mov
ret
dec
or
dec
movsl
mov
pop
mov
aaa
arpl
lock
loope
dec
out
lea
lahf
jecxz
or
sti
int
jbe
jne
xchg
ss
jb
dec
cld
arpl
dec
mov
fwait
shl
xor
js
repz
pop
fwait
sbbl
pop
sti
dec
mov
push
sbb
fildl
sbb
pop
or
inc
jae
insl
pop
pop
fdivs
mov
pop
add
and
nop
or
inc
adc
js
and
or
pushf
test
and
mov
clc
int3
dec
pop
or
data16
out
mov
xchg
rcrb
popa
loope
pop
rclb
icebp
lea
cwtl
pop
cmp
and
xchg
decl
fstps
insb
dec
mov
dec
xor
sti
lret
dec
jbe
fldl
jg,pn
adc
add
mov
xchg
rol
mov
jns
sti
and
fldcw
xor
movsl
aad
fldcw
push
ficoml
iret
xor
cld
aam
hlt
xor
lret
push
push
subl
mov
out
dec
mov
push
pushf
movsl
cmp
push
adc
test
lret
push
jle
sub
sbb
push
sub
mov
sub
cmpsb
lret
cltd
dec
cwtl
test
pop
stc
mov
push
mov
dec
mov
ja
leave
in
sahf
fnsave
mov
inc
push
push
sbb
xchg
jle
in
out
sbb
pop
divl
xchg
lods
fistpll
sub
popa
sub
pushf
imul
jbe
adc
sbb
lahf
jo
ror
jb
pop
push
fcomip
jmp
pop
xor
inc
mov
add
and
sbb
scas
mov
outsb
and
jb
icebp
nop
inc
test
push
or
lret
mov
or
sub
jl
add
lret
or
in
iret
xchg
push
dec
out
dec
cmpsb
loop
push
inc
xchg
test
jg
mov
xchg
dec
arpl
push
and
add
cli
sub
mov
inc
xor
sti
mov
out
rolb
aaa
mov
cmp
cmp
xchg
cmp
xor
jbe
sub
xor
icebp
test
std
out
dec
inc
aaa
call
fadds
add
scas
mov
xor
dec
in
xchg
hlt
sub
and
fiaddl
pop
lock
bound
fcoml
in
into
enter
pop
lahf
insb
dec
iret
das
and
jnp
lcall
jmp
lret
cwtl
inc
mov
in
loop
stc
push
rclb
lret
popa
cmp
add
je
mov
push
dec
mov
dec
mov
add
dec
mov
pushf
fstl
add
pusha
lds
lahf
dec
loope
dec
pop
repz
icebp
jo
lods
push
scas
mov
jne
imul
flds
div
mov
gs
test
mov
mov
inc
std
cltd
xchg
leave
fmuls
pop
stos
add
dec
jno
push
xchg
scas
pusha
les
mov
das
fsub
pop
in
dec
bound
dec
xchg
shlb
loope
push
inc
cmc
hlt
stos
lahf
ljmp
fs
push
iret
jo
mov
add
jl
outsb
enter
add
mov
xchg
iret
aam
daa
sub
loopne
int3
xlat
loop
outsl
lcall
mov
sbb
jno
into
xchg
push
jle
or
lock
mov
or
pop
or
test
out
adc
out
adc
adc
addl
std
mulb
jecxz
mov
pusha
ret
sahf
cmp
pop
inc
lahf
insl
push
test
jecxz
loopne
mov
push
mov
out
add
sbb
inc
popa
push
aad
push
jge
push
xchg
incl
dec
add
daa
fcoms
mov
add
mov
iret
jl
fisttpl
aam
in
pop
das
cmpl
mov
jle
jge
and
xlat
adc
sub
jmp
pop
push
cltd
mov
push
jecxz
xor
add
in
sahf
icebp
pop
mov
and
popa
ret
or
add
push
mov
out
fstpt
add
pop
rcl
shll
std
pop
mov
je
mov
stos
fwait
mov
jnp
jle
repz
push
mov
pop
ret
adc
test
fs
int
sarl
jae
push
push
jge
add
pop
test
xchg
xchg
push
leave
cmp
cmp
dec
cltd
nop
inc
popf
dec
aam
cmp
xchg
or
sub
cwtl
dec
lods
movsl
lcall
or
xor
jno
je
out
cmp
std
or
imul
and
popa
and
xchg
test
pop
jb
sti
lds
jns
mov
mov
fisubrl
pop
and
ss
push
movb
repnz
xor
mov
sbb
jne
aas
outsb
xchg
gs
xchg
pop
pop
push
pop
imul
mov
cld
dec
gs
movsb
xor
fdivp
jno
xor
sub
xchg
lcall
mov
enter
adc
mov
out
jecxz
loop
and
fwait
das
mov
dec
cli
lds
mov
sub
mov
add
xor
rorb
sbb
adc
mov
mov
or
out
cmp
push
nop
mov
jmp
adc
test
loop
test
cmc
lret
aas
jecxz
cmp
cmp
int3
ficoms
push
sbb
sub
cmp
push
add
sub
je
dec
into
pop
dec
js
ljmp
and
jne
sbb
cmpsl
jb
daa
jmp
outsl
outsl
fsubrl
mov
int3
and
pusha
dec
adc
fdivrs
ljmp
sbb
add
cmp
jae
or
sub
lret
jge
jle
xchg
movsb
ljmp
loope
jg
mov
push
aaa
push
inc
mov
je
sub
pop
or
dec
clc
xor
sbb
cmp
cwtl
add
out
xor
lret
mov
cmpsl
pop
popf
loope
pop
fcompl
scas
mov
pushl
and
sub
pop
clc
cmp
lea
cmp
mov
mov
cmp
sub
xchg
and
xchg
and
mov
mov
shlb
inc
push
aad
ret
mov
or
or
clc
cmpsb
ret
inc
xor
xlat
cmp
sub
dec
sbb
test
push
rcl
insl
imul
xor
or
xor
imul
xor
jecxz
andb
inc
inc
dec
out
sbb
add
dec
push
leave
adc
test
lret
fbstp
stos
int
push
cmpsb
enter
in
enter
jl
and
mov
sub
adc
add
mov
test
jae
xchg
popf
sbb
jg
jnp
inc
fs
mov
lock
lds
lods
repnz
inc
divb
lods
int
outsl
sbb
push
orb
test
xor
dec
cmpsl
and
dec
pop
das
lret
mov
jge
inc
stc
mov
mov
or
outsb
add
push
ss
cmpsb
pop
mov
or
shll
into
mov
sbb
mov
data16
popa
jmp
sahf
and
or
pop
xchg
ret
xor
lcallw
or
cmpsl
cmp
push
jno
mov
ror
xchg
insb
xchg
dec
sub
sahf
aad
dec
loop
xchg
xor
push
pop
sbb
inc
lahf
mov
sub
frstor
gs
push
in
lahf
aam
cmc
orb
mov
rcr
jnp
and
in
push
sbb
out
mull
daa
jo
iret
xor
aam
mov
je
cmp
jns
dec
jo
ss
jecxz
iret
sub
inc
jbe
movsb
xchg
hlt
dec
in
fists
imul
loopnew
dec
cmc
es
mov
cmpsl
stos
pushf
cmc
sub
repnz
mov
sti
sub
cmc
in
xor
dec
sbb
js
xor
fmul
push
outsl
fildl
leave
mov
frstor
test
mov
push
push
ds
push
mov
mov
sbb
jg
adc
push
sbb
jbe
inc
jle
add
fsubrl
or
xor
or
jp
mov
add
mull
jno
dec
fisubrs
xor
aaa
das
popf
lea
adc
jp
test
movsl
lock
lea
inc
and
push
aam
lret
xchg
pop
cli
mov
lcall
out
mov
xor
cltd
jmp
mov
repz
jae
fstps
fisubrl
push
adc
add
outsl
jmp
movsl
filds
mov
out
xor
add
add
shrb
sub
pop
ror
push
pop
dec
incb
inc
rsm
mov
popf
xor
in
sub
pushf
lock
test
shr
out
pop
out
pop
add
jp
cltd
cmp
nop
xchg
cmp
sarb
sbb
out
dec
and
enter
lret
or
scas
movsb
inc
inc
or
movsl
pop
into
jno
or
cmp
cmpsb
cmp
push
loopne
mov
gs
sub
out
cmovnp
std
mov
dec
inc
jmp
mov
imul
jno
aas
leave
dec
jnp
jg
jnp
insb
mov
xor
in
jbe
cli
ja
mov
jg
sub
cmp
not
mov
push
inc
test
adc
out
or
pusha
jne
int3
lahf
dec
in
jp
push
mov
sub
stos
mov
jl
mov
test
xchg
mov
loopne
adc
mov
stos
cmc
ret
pop
cmp
inc
adc
pop
js
mov
popa
cmpsl
adc
in
stos
mov
cmpsl
lods
mov
jmp
ds
enter
in
jle
mov
pop
adc
xchg
cmpsl
push
xchg
sbb
leave
cmp
or
jne
sbb
cmpsl
or
orl
adc
ljmp
add
fcom
cmp
jp
outsl
out
ficoms
pusha
imul
lahf
push
loopne
aam
iret
cmp
cs
rcrb
jno
push
fmul
mov
dec
pushf
dec
sub
out
dec
pop
jnp
pop
in
or
pop
sub
add
push
jns
adcl
mov
lahf
ljmp
pop
ss
out
fs
push
aas
sti
je
push
popf
lds
sbb
jnp
cwtl
nop
mov
mov
aad
nop
mov
mov
mov
fistpl
mov
jg
add
outsb
dec
jb
scas
adc
sub
incl
shlb
mov
dec
lock
ds
mov
push
xchg
movsb
jne
mov
and
sub
scas
jp
lods
rcrl
repz
mov
sar
sub
lea
ljmp
mov
hlt
jns
in
mov
mov
xchg
outsb
mov
dec
psubusw
ss
mov
push
orb
mov
mov
sub
pop
call
gs
and
es
xor
sti
popf
loop
mov
popa
or
lret
mov
adc
jbe
xchg
mov
dec
sub
push
jo
xchg
test
sub
pop
imul
out
xlat
mov
xlat
and
and
stos
aad
and
sub
das
mov
xchg
pop
xor
cs
mov
ss
xchg
out
hlt
cmc
or
int3
pop
call
push
pop
fucom
sbb
scas
xor
dec
xor
xchg
repnz
jo
in
fsubs
clc
push
inc
ljmp
ss
stos
popf
jp
or
and
idivb
or
pusha
loopne
out
xchg
pop
mov
sbb
cmpsl
aas
mov
int3
adc
hlt
sbb
mov
loope
fimuls
loope
dec
xor
mov
pop
jae
jo
rcll
push
fwait
rcll
jmp
add
adc
aad
pushf
incl
jnp
inc
enter
imulb
scas
das
xchg
lods
push
inc
pop
push
mov
lock
xchg
and
je
fldl
pop
push
inc
or
jnp
mov
cld
cmpb
sub
add
lea
stos
inc
in
pop
jnp
fisubrs
std
mov
and
mov
mov
mov
xchg
rolb
cmp
cmp
adc
jmp
mov
hlt
push
cmpsl
pop
add
fldl
or
adc
int3
in
mov
or
mov
insl
mov
into
icebp
push
fisubl
sub
inc
dec
sbb
mov
mov
call
and
jo
adc
sub
pop
les
pushf
adc
cli
mov
lret
inc
repz
jnp
ret
mov
or
jmp
add
out
pop
imul
and
and
popf
mov
push
dec
dec
dec
rcl
cwtl
push
loope
lahf
scas
je
jb
xor
dec
jo
cmp
lods
mov
xchg
jmp
cmp
les
js
and
lea
sbb
mov
xor
test
add
mov
int
incl
lods
pop
leave
fwait
mov
sub
icebp
notb
xchg
push
mov
lock
jae
stc
stos
cmc
aam
jmp
sbb
cmp
mov
ja
xchg
adc
out
jne
cmp
sub
ljmp
push
jbe
aam
xchg
jne
mov
mov
push
hlt
sub
scas
mov
dec
adc
xor
sbb
fwait
mov
push
sbb
imul
pop
sarl
repz
mov
push
aad
ret
enter
imul
sbb
call
imul
inc
je
cld
cmp
and
jnp
lea
add
mov
sub
sub
push
popf
lock
inc
mov
mov
dec
jecxz
aas
jg
dec
out
mov
mov
push
cld
jbe
dec
icebp
cs
daa
stc
lock
cwtl
or
and
test
enter
xor
out
stos
or
inc
lock
imul
sbb
shlb
xorl
popf
push
push
out
scas
sub
jl
xchg
sbb
xchg
pop
inc
pop
jle
fiaddl
jmp
jbe
and
xchg
xor
ljmp
jno
into
loope
int3
outsl
pop
xor
testb
das
clc
in
add
push
jmp
in
jecxz
sbb
stos
fadds
pop
out
pusha
mov
mov
outsb
or
xchg
lea
mov
fisubs
into
aas
mov
fwait
lods
and
jp
push
lcall
mov
test
fs
cmp
sub
xchg
cmpsl
fisttpl
adc
ret
test
faddl
imul
pminsw
jb
dec
push
push
or
sarl
xchg
dec
push
sub
cmp
pop
mov
sbb
xchg
mov
insl
or
outsb
cmp
out
jnp
xchg
loopne
mov
in
clc
add
or
std
mov
cmp
notl
outsb
imul
jo
add
and
xchg
stc
xor
mov
pop
out
mov
movsl
push
inc
daa
add
sbb
out
test
mov
ficoms
shr
push
mov
jmp
sub
inc
mov
sbb
leave
int
inc
and
ss
jno
leave
inc
sbb
jnp
inc
mov
mov
repz
scas
in
pop
ljmp
lcall
mov
mov
pop
aaa
inc
inc
lds
daa
mov
leave
jo
out
or
aam
popf
sub
repnz
jl
and
scas
mov
xchg
xor
xor
mov
and
test
inc
and
arpl
hlt
sbb
push
shlb
enter
out
aam
cmp
pop
sbb
jle
push
fnsave
xor
mov
shr
mov
mov
adc
push
addr16
xor
cmpsl
push
dec
sub
xchg
inc
imul
pop
inc
cmc
test
cltd
jmp
addr16
clc
xchg
lahf
lret
mov
jae
subl
outsb
rcll
or
outsb
or
and
out
rorl
adc
popa
lcall
ss
pushf
fcomps
test
aad
jo
aaa
test
lods
jne
push
jle
push
and
loop
or
or
cmpsb
mov
add
push
stos
mov
in
addr16
jne
push
nop
mov
and
xorl
pusha
push
inc
push
inc
xor
mov
sub
adc
stc
mov
or
push
adc
int
dec
pop
gs
pusha
and
jo
or
pop
sbb
fdivr
bound
rcrl
lret
ret
lahf
or
add
int3
lods
stos
out
dec
sahf
jecxz
popf
stc
xchg
in
stos
imul
aad
lret
or
sub
js
fmull
sub
lcall
jl
aad
jecxz
sbb
int3
out
and
xor
sub
rcr
mov
testl
popf
or
movsb
inc
dec
cli
and
pop
mov
push
das
je
jne
iret
mov
mov
int3
cmpsb
enter
push
popa
xchg
pop
leave
xchg
push
out
xor
aad
test
cmp
out
lret
movsb
fildl
jae
push
stos
cmp
dec
cmpsb
inc
pop
cmp
dec
outsb
sbb
dec
movsb
in
sbb
cld
xchg
addr16
and
or
gs
jp
dec
lret
cmc
mov
adc
cltd
push
mov
cld
scas
and
insb
pop
cmp
fdivrp
sbbl
testl
call
arpl
test
mov
jle
sub
fsubs
stos
sbb
aad
mov
cmc
int3
mov
ds
fcmovnb
and
enter
in
push
loope
ss
call
in
jmp
push
daa
lea
mov
xor
sbb
jmp
enter
jmp
jmp
loope
jle
add
inc
mov
jbe
lds
bound
popl
adc
inc
or
out
fsubrl
in
ds
mov
in
jl
shlb
shl
mov
add
out
out
dec
dec
or
notl
test
aaa
negb
in
mov
push
fstps
ret
cmp
sub
xor
leave
xchg
pop
mov
fstp
lods
mov
mov
fsubrs
dec
cwtl
sarl
cwtl
aad
negb
es
ret
mov
push
mov
test
iret
repz
sbb
imul
jne
cmp
pop
fwait
in
mov
stos
jmp
in
js
in
jne
or
sbb
push
imulb
leave
mov
sub
imul
mov
sti
ret
addr16
fadd
ja
daa
out
sar
mov
pop
mov
xorb
clc
shrl
jecxz
xor
mov
push
adc
notb
dec
imul
and
mov
fcoms
hlt
pop
adcl
gs
mov
out
loope
ljmp
movsl
int
lret
js
push
das
outsb
std
jb
dec
pop
loope
ss
push
xchg
hlt
cmp
js
sub
xor
lret
dec
push
inc
leave
test
sbb
inc
inc
xchg
adc
dec
stos
hlt
ljmp
xchg
scas
in
pop
fwait
sbb
enter
push
xor
das
pop
cltd
out
push
xchg
push
aas
call
dec
push
popf
in
push
jb
out
and
mov
cmp
in
add
dec
out
jg
cmp
testl
xlat
rcrl
es
xor
mov
cli
lock
jmp
dec
outsb
test
adc
mov
sub
dec
xchg
nop
mov
push
mov
lods
or
xchg
mov
in
dec
fisubrl
mov
inc
push
pop
xchg
jmp
push
inc
xchg
js
ret
fistpl
sbb
sti
push
push
mov
adc
std
add
pop
sub
and
xor
and
add
adc
les
imul
ss
pop
push
nop
rol
mov
sahf
fcomps
xor
cld
xchg
dec
jecxz
sarl
cmp
js
pop
pop
xchg
out
jle
out
ret
mov
push
pop
xchg
mov
loope
xor
adc
lahf
addr16
cmp
lahf
xor
das
or
clc
jne
or
cmp
push
jae
mov
jp
aam
xor
je
cld
test
pop
xor
mov
imul
xor
mov
test
cmp
scas
cli
jne
jb
xchg
push
lahf
mov
mov
sbb
ficoml
mov
sbb
cmp
pop
xchg
mov
cmc
insb
mov
inc
or
dec
or
adc
es
fmuls
inc
pop
jns
mull
fdivs
inc
jecxz
lret
xchg
fnstcw
jnp
xchg
lret
sti
xor
fcoml
add
in
test
std
xchg
xchg
flds
sub
cs
std
cmpsb
or
in
adc
cld
in
mov
bound
jae
mov
aam
pop
cmp
mov
sarl
mov
xor
and
ljmp
inc
bound
mov
mov
mov
or
scas
jmp
mov
xor
test
xor
pop
out
mov
out
xor
roll
jp
sub
push
mov
insl
xor
sbb
push
in
sub
jo
cmp
out
jae
insb
and
sbb
push
int
mov
xorl
add
mov
cli
mov
pushf
cmpsl
dec
cmp
aad
xchg
jg
xor
jecxz
adc
adc
xor
lret
js
or
div
in
mov
dec
sahf
mov
ret
mov
adc
aam
or
pusha
mov
out
repnz
jne
cltd
popf
loope
lcall
inc
dec
fidivrl
ljmp
mov
adc
mov
icebp
xchg
iret
inc
cmc
xlat
inc
jg
mov
lcall
add
push
in
jle
and
push
repz
aam
movsb
sbb
inc
dec
jle
push
mov
sahf
out
add
gs
js
jecxz
pop
sub
xor
xchg
clc
aaa
sub
fistpl
cltd
daa
ret
add
test
push
adc
inc
jl
test
lods
sub
inc
iret
mov
lret
addr16
in
or
sub
lds
pop
xchg
cmp
adc
dec
cmp
clc
in
lahf
popf
idivb
dec
adc
flds
xchg
push
jl
mov
jge
rcl
lods
cli
sbb
lds
clc
lret
pop
add
cmp
push
fs
je
test
lock
addr16
data16
jns
mov
fdivr
sbb
inc
loope
or
push
into
cmp
xchg
imul
jg
arpl
jnp
cmpsb
and
popa
enter
mov
xchg
inc
jp
mov
xchg
jp
movsl
adc
fists
insl
inc
imul
jno
xor
adc
fwait
mov
xchg
call
lcall
pop
fs
xchg
jnp
jb
jnp
leave
and
xchg
in
es
popf
xchg
sbb
rcrl
pop
popa
sub
es
inc
inc
mov
ficomps
in
inc
in
xchg
enter
add
jg
lahf
dec
or
or
gs
dec
out
cmpsb
jbe
xchg
cmc
dec
mov
cmc
jle
divl
pop
pop
out
mov
fidivs
jae
popa
les
cmp
xor
cmp
inc
in
fldcw
subl
jnp
hlt
lcall
in
outsb
nop
out
aas
push
pop
mov
inc
mov
lods
repnz
aas
mov
and
pop
push
or
fdivs
xchg
mov
sbb
and
xchg
inc
outsb
and
sahf
es
jle
mov
out
inc
xor
jge
cld
or
mov
scas
or
in
sbb
aaa
dec
dec
inc
cltd
out
push
lods
inc
or
repnz
jecxz
mov
pop
lret
mov
ficomps
or
pop
ret
xor
sbb
cmp
fildll
push
shll
popa
or
adc
rol
push
mov
sbb
arpl
arpl
test
addr16
repnz
xchg
add
push
mov
loop
je
adc
sub
xchg
cmp
push
arpl
fisttpl
push
hlt
jl
pop
fcomip
aaa
or
std
enter
sub
mov
into
daa
pop
mov
aam
inc
xchg
xchg
push
pop
sbb
repnz
and
push
stos
repz
movsl
insl
push
cmc
jns
sub
xchg
cmp
mov
add
aad
cs
jl
mov
nop
xchg
pop
or
mov
push
sahf
jno
or
gs
pop
jge
repz
xchg
mov
call
vmaxsd
xchg
inc
subl
pop
mov
movsb
mov
loope
rcrb
adc
popf
pop
cmp
sub
sub
jle
loope
cmc
mov
sti
xchg
xor
mov
sti
push
dec
xorl
jo
shl
popf
neg
popa
outsb
mov
push
pop
cmp
cli
addb
les
inc
out
adc
mov
std
sahf
sub
xlat
nop
and
mov
cmpsb
add
dec
aad
pop
xor
and
pop
in
jne
mov
mov
jle
inc
rcrb
in
lret
or
mov
mov
dec
xor
mov
dec
pop
inc
outsl
rorb
adc
gs
in
ficompl
in
fstp
xchg
lahf
push
sbb
lds
xor
xor
xchg
out
push
rcrb
and
xor
mov
push
and
imul
stos
push
inc
hlt
lods
rcrb
into
hlt
jp
mov
mov
fdivl
rcrl
mov
pop
jne
mov
into
jmp
mov
push
shrl
call
sub
mov
mov
out
sub
dec
fists
inc
push
sahf
aaa
adc
xor
insb
inc
divl
xor
out
shr
lret
pusha
jbe
xchg
xchg
mov
into
lds
repz
stos
rorl
add
scas
out
out
lods
test
inc
xlat
sbb
ret
add
dec
lds
push
xchg
sarb
fidivs
add
jmp
movsl
mov
xchg
les
test
cmc
lods
cmc
mov
fstl
push
or
jmp
adc
mov
stc
fstpl
sub
sub
gs
mov
mov
das
sbb
ja
adc
push
xor
rcll
cmp
adc
cmp
sub
lcall
mov
leave
and
push
in
cmp
jno
xor
inc
outsb
repnz
dec
sbb
fnstcw
lret
adc
sub
ja
xchg
enter
ret
pushf
call
sub
lods
or
sbb
add
std
pop
and
pop
mov
mov
jmp
lahf
mov
int
mov
in
mov
aaa
add
shll
mov
pop
jle
xchg
mov
cmp
fwait
pushf
cltd
xor
xor
cld
insl
inc
cmpl
cwtl
pop
pop
leave
push
test
pop
sub
jmp
pop
push
into
jge
pop
shl
js
cld
push
push
mov
in
nop
into
adc
xlat
pop
enter
aas
loopne
add
stos
mov
cmc
je
add
lcall
cmc
jge
cmpsb
mov
ret
pop
inc
pop
ss
lret
outsl
aas
hlt
movsl
outsl
in
cli
mov
repz
jle
dec
jle
leave
inc
iret
lea
sub
and
cmpb
cmpsb
mov
fiadds
adc
das
ss
test
mov
test
ffree
dec
icebp
mov
sti
or
jle
push
dec
nop
push
fildll
call
dec
arpl
aas
inc
je
dec
imull
das
sar
lcall
dec
je
jg
outsb
ds
mov
rcrl
push
adcl
mov
mov
cmp
pop
out
out
and
mov
icebp
sub
rorb
dec
stos
pop
jge
movl
jnp
or
mov
rcr
dec
dec
sbb
mov
and
scas
ret
call
or
mov
sub
arpl
lcall
lods
fists
jns
mov
jecxz
xor
and
scas
mov
inc
popf
mov
mov
leave
scas
insl
or
aas
call
xchg
icebp
js
arpl
jg
jle
or
bswap
or
test
mov
stos
int3
out
jp
out
mov
rclb
jg
or
dec
lret
lret
xchg
mov
mov
ds
leave
jne
cltd
mov
out
mov
jecxz
cwtl
mov
pop
inc
test
addr16
dec
dec
sbb
dec
popa
ja
stos
dec
out
sbb
mov
xor
mov
subl
sub
sti
sbb
cmp
das
rorl
sbb
add
adc
sbb
int3
dec
cmp
insb
adc
fstpl
xchg
loopne
and
add
xchg
add
jle
xchg
iret
cmp
push
dec
inc
stos
mov
mov
std
add
mov
mov
sub
adc
push
js
and
pushf
lret
adc
cs
out
add
add
sbbl
mov
jo
or
in
mov
mov
out
adc
jge
or
shl
out
aaa
cli
pop
pop
sub
or
icebp
cwtl
jne
out
push
lods
cmc
subl
aaa
mov
and
sub
dec
aas
aaa
dec
add
out
aam
fidivs
inc
and
xor
mov
pop
cmp
sub
or
add
imul
stos
sub
dec
aas
int
mov
mov
cmc
cli
into
mov
adc
xlat
sub
cmc
sahf
mov
ljmp
int
sbbb
insb
out
inc
cmp
movsb
imul
enter
scas
test
cmpsb
dec
mov
je
sub
mov
adc
in
adc
jp
cmp
bound
push
test
inc
add
sahf
icebp
xor
pop
stos
jns
mov
mov
xor
in
sbb
or
sahf
fs
lods
out
inc
je
sbb
je
mov
inc
aaa
ljmp
mov
mov
in
mov
jb
push
mov
mov
shrb
adc
movsb
mov
lea
xor
popf
lock
lret
push
pop
pop
mov
lret
dec
sub
mov
in
sbb
cmpsl
shlb
test
fistl
lret
int
xor
push
dec
test
push
or
pop
mov
je
lahf
mov
imul
cmpsl
repnz
iret
hlt
sar
sbb
xlat
fidivs
adc
cmp
daa
or
sub
sahf
sti
icebp
sbb
xchg
lods
adc
or
es
adc
mov
nop
and
cmp
fiadds
lahf
popl
mov
pop
mov
out
loop
sub
jbe
stos
push
aam
rclb
popa
sub
jae
push
stos
xchg
cmp
jmp
repz
std
ja
or
sbb
adc
pusha
sub
jns
pop
lret
imul
sub
xor
xchg
cmp
mov
xchg
mov
fwait
or
cmp
mov
sub
scas
mov
inc
arpl
sub
mov
push
dec
clc
jno
sub
pusha
jl
dec
pop
and
sub
pop
push
gs
dec
bound
jmp
sbb
les
push
stc
push
fcom
xchg
dec
inc
lret
loopne
rcrl
outsb
cli
aam
orl
inc
call
fists
sti
inc
adc
mov
add
push
sub
cmp
or
dec
ljmp
cs
xchg
jmp
pop
mov
fidivrl
pop
stos
push
subb
in
ror
cmpsl
pop
sti
mov
dec
pop
stos
cmp
pop
sbb
push
in
adc
push
loop
pop
inc
cmpsl
fidivs
repnz
mov
fstpl
into
decb
out
mov
or
cli
outsb
divps
sub
fidivl
mov
add
sbb
lea
in
push
cmp
pop
fsubrl
aas
xor
arpl
jmp
and
dec
cmp
insl
or
das
cmpsl
adc
stos
sub
out
shrl
rolb
inc
and
sub
mov
aaa
mov
js
gs
pop
bound
and
sub
lahf
xlat
jns
enter
cmpps
sbb
inc
jp
test
push
mov
fnstcw
adc
cmp
pop
imull
outsb
outsl
jp
inc
and
cwtl
push
shr
cmp
mov
jecxz
hlt
pop
inc
pcmpeqw
lret
mov
das
push
xor
test
sbb
jbe
fmull
push
fnstenv
push
push
or
je
hlt
mov
inc
das
fimull
aas
pop
js
xlat
lret
sub
jb
sbb
and
out
sbb
cs
pop
jg
inc
add
xor
adc
jg
mov
push
mov
neg
mov
and
neg
imul
xchg
add
out
jl
xchg
insb
pop
movsb
cltd
cld
pop
mov
mov
mov
push
jle
sbb
push
gs
mov
xchg
xchg
cmp
sbb
mov
pusha
sbb
js
lods
mov
jg
outsb
daa
jle
inc
mov
or
scas
iret
mov
bound
dec
mov
shll
stos
in
pop
push
fs
cmovp
cmpb
shll
test
sub
or
push
push
cmp
lret
push
nop
xchg
mov
or
sub
leave
in
jae
lods
adc
jno
add
and
fstpt
adc
xchg
sbb
pop
dec
inc
scas
inc
jb
cld
stc
lcall
les
jo
aas
cltd
fstpl
cmp
aaa
call
je
add
mov
cmp
out
inc
and
add
pop
add
mov
imul
pop
xchg
push
cmpsl
aam
pop
cltd
add
sahf
lret
and
stc
fcoms
mov
jne
mulb
cli
adc
mov
mov
sub
negb
adc
adc
andl
test
mov
cmp
jae
dec
ljmp
dec
lahf
sub
stos
mov
lret
cmp
inc
add
jecxz
cltd
mov
sbb
and
pop
hlt
push
pusha
fildll
jge
fstpl
nop
fcmovnbe
out
inc
dec
push
fdivs
adc
adc
push
mov
js
sub
addr16
movl
call
dec
imulb
and
mov
je
jmp
insl
jg
mov
mov
iret
push
jecxz
in
repz
push
jg
hlt
and
roll
mov
pusha
push
push
cmp
sbb
orb
aaa
fldt
sub
in
scas
push
xchg
sti
xchg
sub
seta
xor
dec
mov
cmp
or
push
fsubs
pop
sbb
add
sbb
add
ja
dec
mov
push
in
out
subl
push
ret
cmp
jecxz
dec
clc
sub
xor
xor
js
pushf
lret
hlt
adc
push
xchg
js
ja
stc
addr16
sahf
cmp
popf
aaa
loop
push
add
test
push
fdivs
lret
jmp
scas
push
rorb
push
jno
div
xlat
sub
in
jns
sti
xchg
enter
mov
add
xchg
pushf
shlb
std
cmp
les
push
and
mov
outsl
pop
push
jno
sub
mov
push
mov
lock
add
call
xor
sbb
shll
or
jno
sahf
push
repnz
inc
jb
xchg
cltd
xor
ss
jecxz
push
mov
lahf
cli
cmpl
mov
fnstenv
pop
fwait
inc
call
int3
orb
fdivrl
dec
sub
add
out
das
cmp
push
mov
sub
mov
ret
addb
push
xchg
or
fdivp
mov
ret
repz
dec
imul
sub
fistpll
sbb
sub
subb
inc
in
orb
shrb
mov
or
push
es
mov
mov
call
mov
shl
mov
fdivl
ret
insl
mov
and
mov
pop
cmc
aaa
dec
pop
mov
aad
mov
and
divb
dec
iret
jbe
xor
fistpl
mov
pop
and
dec
pop
adc
enter
test
bound
je
dec
sub
pop
fistpll
inc
xchg
dec
inc
adc
mov
add
test
mov
mov
cmp
mov
push
jle
mov
ljmp
sub
jnp
loopne
sub
aam
dec
lods
sbb
stos
inc
adc
sub
pop
icebp
out
xchg
sbb
pop
push
mov
cmp
rcll
mov
seta
cmp
cmpsl
imul
cmp
js
in
inc
inc
incl
mov
jae
add
and
jge
xchg
call
cld
aas
pop
sbb
push
and
push
jo
cmp
pop
in
pop
mov
mov
fimull
out
lcall
inc
adc
cmp
imul
movsl
aam
rol
cmc
adc
dec
loopne
shll
cmp
xor
aaa
xchg
push
pop
sub
movsb
cmpsl
jg
sbb
xlat
or
out
lds
int
sub
jp
fidivs
sarb
movsb
cli
jecxz
mov
xor
sub
aas
call
iret
ret
pop
enter
andl
clc
in
sub
loop
xor
sub
lret
fwait
xchg
out
into
shrb
or
test
pusha
out
sbb
fbstp
mov
aaa
repnz
push
push
or
and
das
sub
pop
dec
es
xchg
ljmp
leave
mov
sti
mov
inc
mov
add
adc
xrelease
out
push
inc
and
bound
sub
inc
test
mov
pop
sub
test
push
aas
mov
fwait
std
mov
dec
push
mov
adc
jmp
pop
rol
pop
push
dec
mov
cmp
mov
xor
mov
add
daa
test
adc
or
repz
lahf
aad
pop
or
loopne
sbb
jns
sbb
stos
and
ret
pop
sub
shll
jns
add
push
push
es
jne
aas
addl
pop
repz
int
mov
xchg
push
sub
aaa
xor
jge
cmpl
pop
js
mov
dec
notl
jg
push
adc
movsl
pop
aas
inc
mov
xlat
pusha
jne
imul
pusha
or
subb
pop
in
jnp
push
and
in
mov
cwtl
jp
xor
call
or
jecxz
insb
daa
mov
std
or
pop
push
clc
sbb
and
daa
scas
pop
pusha
in
dec
jge
stc
push
clc
adc
out
sbb
mov
daa
jnp
mov
pop
cltd
xor
add
xchg
ror
dec
scas
outsl
add
ljmp
mov
inc
inc
pop
scas
mov
push
adc
pop
das
xor
repnz
out
sbb
ljmp
insb
lahf
nop
add
aaa
sar
cmpsl
lret
xor
dec
lret
jmp
cmp
push
and
fists
shl
fsubp
hlt
xlat
adc
cmpsl
push
or
cmp
cmp
stc
sub
js
je
ret
movsb
mov
loopne
outsl
mov
das
popl
mov
xchg
mov
int3
mov
fmul
aam
es
sbb
cltd
inc
iret
jp
imul
mov
push
daa
loope
mov
jg
xchg
inc
mov
mov
rolb
dec
mov
sub
int
popf
aam
mov
les
jcxz
sub
out
in
out
inc
aaa
jle
mov
xchg
sub
int
ret
add
popf
mov
pop
mov
fcomps
lcall
xor
shrb
std
dec
sub
sub
call
pop
push
repz
arpl
ds
add
adc
clc
mov
jg
das
mov
jbe
push
clc
pop
scas
xchg
fildl
push
clc
sti
test
lret
lahf
gs
pop
repz
cmpsb
cmc
fsubs
shrb
jp
fmulp
int
fadds
insl
int3
inc
sub
lcall
sbb
imul
inc
ja
mov
inc
adc
lret
inc
xchg
xchg
jmp
xchg
xlat
mov
jg
negl
sbb
sub
mov
ja
sarb
mov
pop
add
arpl
dec
adc
pop
pop
test
sub
lahf
insb
test
sub
xchg
popf
jbe
das
xchg
jl
loop
test
lret
int3
stc
add
fdivrl
xor
or
mov
clc
js
dec
mov
and
lahf
mov
divb
xchg
scas
cmc
movl
cmpsb
test
pop
push
sub
lcall
in
add
cmpsl
or
pop
push
cmp
jnp
outsb
ds
pop
pop
fldt
inc
adc
int3
and
lcall
jmp
js
cmp
int3
push
test
sbb
jle
inc
jmp
dec
push
scas
dec
pop
dec
lds
dec
sbb
sub
add
inc
inc
sub
pop
call
add
mov
jle
inc
mov
inc
pop
fprem
daa
lea
ret
mov
jae
arpl
dec
loopne
or
ljmp
test
ficoms
test
test
pop
scas
arpl
sti
insb
fdivl
sub
shrb
mov
dec
inc
inc
mov
shl
dec
loopne
movsb
jmp
lret
jb
push
lods
es
or
dec
fimull
push
mov
call
fs
xlat
mov
xor
test
data16
push
aam
sbbl
or
add
dec
xchg
jp
test
mov
jle
mov
sbb
add
les
hlt
outsb
mov
leave
dec
cmp
jl
jg
divl
lods
mov
fisubl
mov
scas
jle
or
rcrl
adc
pop
cmp
mov
rcrb
adc
sbb
lock
fmull
mov
fmul
mov
arpl
mov
push
sub
fmuls
jmp
sbb
loope
sbb
xchg
sub
lock
test
jne
andl
jecxz
sub
mov
xlat
xchg
pop
xchg
loope
push
or
cmpsl
pop
ljmp
pop
ss
jbe
addr16
movsw
push
cltd
pop
fwait
ds
cld
mov
lock
push
jmp
lods
jns
out
fcomps
jnp
mov
mov
push
cltd
sbb
enter
sbb
lods
adc
push
ret
scas
stc
mov
fcom
dec
or
cld
and
mov
jae
push
repnz
popf
pop
lods
adc
push
jecxz
push
call
adc
push
dec
push
push
lds
fisubs
jp
xchg
mov
add
js
dec
loope
popl
negb
push
popf
lret
push
push
add
mov
aam
notb
rcr
cmp
cmp
shrb
insl
mov
add
inc
push
pop
sub
sub
enter
mov
fwait
out
mov
or
mov
mov
inc
aas
adc
imul
pop
imul
lahf
arpl
or
pop
lret
xor
jae
out
je
daa
je
inc
repz
mov
mov
in
mov
aas
inc
sti
and
mov
popf
or
jl
fisttps
dec
fs
mov
sub
lret
xchg
cmpsb
sbb
or
dec
pop
scas
pop
adc
inc
cmp
jge
adc
mov
add
sub
xchg
sbb
push
in
dec
shll
fdivrl
and
out
adc
or
aam
scas
sti
push
or
push
lods
aas
shlb
mov
test
pop
popa
clc
ss
pop
push
in
inc
inc
scas
out
xor
mov
mov
popa
xor
cmp
mov
cmp
out
mov
in
or
test
xchg
add
inc
mov
lcall
iret
leave
push
imul
rcrb
into
push
sbb
cmp
xor
mov
aaa
testl
mov
lods
sub
lds
shufps
adc
iret
pop
jmp
sbb
xor
fdivl
test
and
in
mov
clc
negl
push
mov
mov
sbb
jecxz
rsm
xlat
in
lock
xor
lods
xchg
loop
adc
mov
pop
jmp
ljmp
push
mov
inc
mov
pop
sbb
movsb
pop
rcll
js
andl
rclb
es
das
add
adc
je
cmp
push
sub
ds
jo
loope
lock
cld
add
xor
jno
push
xor
std
sub
lcall
pop
ja
mov
mov
inc
lret
test
stc
inc
cvtps2pd
fwait
pop
and
pop
pop
push
cli
sub
mov
fwait
xor
sub
jne
xchg
enter
adc
mov
test
inc
mov
outsb
popa
je
add
xor
mov
dec
mov
ljmp
call
aad
xor
sub
movl
stos
push
insl
push
jp
and
push
loopne
mov
xchg
clc
push
mov
mov
leave
fldlg2
add
dec
test
mov
dec
scas
push
xor
xchg
mov
add
ss
pop
es
add
dec
fstl
xor
jmp
mov
xchg
loopne
add
push
adc
add
mov
cmc
dec
pop
xchg
out
jb
in
jmp
ja
dec
je
inc
js
clc
lock
push
dec
and
je
xor
push
mov
inc
decb
push
sar
stos
and
stos
negl
inc
daa
jmp
mov
lock
jb
orb
sub
adcl
movl
