rol
xor
shr
push
mov
add
pusha
mov
lea
xor
neg
lea
push
mov
lea
and
ret
add
mov
lea
movl
xor
xchg
xchg
shr
shl
movl
mov
mov
not
movl
neg
mov
movb
rol
cmp
mov
xchg
lea
lea
mov
mov
rcl
rcl
push
neg
xor
not
nop
lea
mov
and
not
nop
mov
lea
mov
lea
xor
neg
not
not
xor
push
shl
mov
adc
xor
xor
call
ror
mov
mov
cmp
nop
xor
sbb
neg
mov
nop
lea
mov
lea
call
or
lea
mov
mov
rcr
push
mov
mov
lea
shl
lea
nop
mov
shr
nop
xor
mov
xor
movl
not
mov
movl
not
and
movl
not
lea
movl
mov
mov
lea
nop
mov
mov
rcl
ror
lea
nop
mov
xchg
nop
mov
cmp
movw
mov
lea
xor
add
movb
xor
not
nop
neg
mov
nop
mov
xor
mov
rcr
call
mov
mov
or
jne
mov
rcl
neg
lea
nop
or
mov
mov
mov
nop
not
mov
mov
neg
lea
xor
or
je
lea
xor
sub
mov
nop
rol
mov
nop
lea
mov
mov
mov
rcr
rcl
lea
nop
shr
sbb
xor
push
xor
mov
popl
xor
mov
not
movl
ror
mov
push
mov
mov
adc
xor
mov
push
mov
add
call
mov
lea
xor
mov
rcl
inc
jne
neg
shl
dec
not
lea
not
xor
xchg
rcr
rcl
lea
nop
not
xor
mov
nop
mov
adc
mov
mov
rcr
mov
xor
cmp
xor
mov
nop
mov
lea
mov
xor
nop
shl
neg
mov
xchg
neg
pushl
mov
xor
or
mov
pushl
xor
mov
xor
nop
mov
and
nop
lea
xchg
mov
mov
popl
mov
mov
rol
popl
mov
shr
nop
xor
shl
mov
neg
mov
nop
not
not
xor
lea
shl
nop
not
not
mov
not
xor
lea
nop
add
rol
lea
nop
xchg
not
lea
xor
not
lea
rcr
mov
mov
push
neg
mov
rcl
mov
push
mov
mov
push
mov
lea
push
neg
mov
xor
lea
call
mov
shr
mov
movl
rcl
xor
nop
xor
ror
nop
neg
mov
xor
lea
neg
mov
push
sbb
xchg
xor
xor
sub
push
mov
neg
xor
mov
push
xchg
mov
xchg
push
mov
cmp
neg
push
sbb
shr
shr
call
xchg
add
nop
lea
cmp
nop
neg
not
ror
lea
mov
neg
xchg
push
mov
shl
xchg
push
not
or
push
xor
mov
xchg
push
lea
xchg
shl
pushl
xor
mov
mov
call
mov
rol
or
nop
sub
mov
xor
nop
neg
lea
rcr
xchg
mov
lea
mov
mov
rol
mov
ror
push
xchg
mov
rol
xor
shl
push
mov
mov
and
lea
push
mov
mov
rcl
pushl
cmp
xor
mov
and
call
xor
xor
nop
xor
add
xor
rol
xor
nop
lea
xor
lea
mov
lea
shr
not
mov
mov
lea
push
rcl
xor
lea
push
xor
neg
pushl
not
mov
push
rcr
xchg
rcl
pushl
mov
lea
shl
rcl
call
mov
xor
rol
neg
neg
nop
xor
add
xor
mov
xchg
nop
neg
mov
push
mov
mov
adc
mov
push
neg
xor
push
mov
xor
mov
push
and
not
mov
push
xor
lea
rcl
mov
push
lea
shl
pushl
lea
mov
lea
call
add
mov
xor
mov
mov
lea
nop
lea
xor
xor
not
nop
neg
mov
popa
leave
jmp
mov
mov
xor
xor
mov
push
or
rol
call
lock
sbb
divb
jg
mov
test
cmp
adc
mov
sbb
out
mov
xchg
and
outsb
cmp
cli
and
sub
jmp
mov
jmp
sub
inc
xchg
leave
cmpsb
sub
out
bound
shll
movsl
pop
and
mov
ret
pop
call
mov
add
or
sub
pop
sbb
xchg
repz
mov
stc
cmp
dec
test
sub
sbb
repnz
cltd
ret
xor
scas
and
mov
mov
xchg
and
sbb
dec
int
int3
out
pusha
inc
fucomip
dec
add
cld
cmp
pop
xchg
mov
add
push
sbb
adc
dec
push
insl
xchg
jmp
addr16
in
mov
xchg
adc
out
dec
mov
mov
and
pop
xor
popf
cmp
pop
cmp
std
adc
adc
into
jl
jb
lret
cmp
jg
mov
pop
sarb
jmp
xchg
fdiv
frstor
mov
ret
movsb
adc
aad
jbe
inc
prefetchwt1
scas
push
xchg
xchg
leave
int3
mov
stos
sub
imul
and
ss
mov
insb
sub
push
sub
jle
in
jae
pop
ret
mov
push
es
adc
lods
and
and
and
and
adc
xchg
xor
add
imul
repnz
adc
stos
mov
fsubs
in
jl
sbb
push
shlb
jmp
mov
jmp
icebp
adc
ja
ljmp
jmp
movsl
or
pushf
xchg
mov
lahf
aam
sbb
push
sub
test
dec
dec
sbb
stc
icebp
inc
out
cmc
mov
xorl
in
popf
adc
xor
ss
xchg
aaa
xor
cltd
push
xor
sbb
lds
jmp
cmp
jmp
loop
push
inc
jne
es
cltd
shl
outsl
sbb
repz
push
js
aaa
cs
out
lahf
enter
sbb
jp
mov
or
cli
sub
sub
nop
add
imul
test
sub
or
adc
jbe
out
div
mov
lock
jmp
pop
mov
mov
add
imul
inc
adc
mov
mov
mov
dec
aaa
int3
xchg
fnstcw
xchg
adc
mov
test
sub
pop
dec
sbb
outsl
push
cmp
mov
rolb
fstpt
push
pop
aam
std
sbb
xor
ljmp
mov
inc
add
and
cmp
in
xchg
or
das
pop
add
jg
mov
xlat
push
sbbl
mov
ss
hlt
inc
fs
sbb
imul
add
sahf
lahf
add
daa
imul
hlt
scas
mov
xchg
lret
mov
mov
xchg
ds
dec
call
into
ficompl
jno
pushf
aaa
int
adc
push
pop
cld
or
stc
inc
add
nop
out
xchg
movsl
jne
out
cmpsl
aam
inc
lds
neg
lcall
jecxz
in
clc
dec
test
inc
cmc
pop
sbb
lock
jns
test
jl
gs
sbb
cmp
xchg
sbbb
call
rcll
pop
ret
sbb
scas
daa
xchg
lds
pop
cmp
mov
icebp
pop
sarb
cmpsl
stos
pop
aaa
repz
popa
lods
mov
or
or
mov
push
push
xor
cmp
cmp
push
mov
mov
add
pop
add
test
and
insl
or
push
xor
xlat
lret
push
imul
movsl
add
loopne
pop
mov
fwait
rcrb
push
mov
mov
js
call
jecxz
out
xchg
add
mov
scas
shlb
push
repz
xor
mov
jo
mov
fstl
sbb
cwtl
lret
and
jl
xor
ljmp
or
push
inc
xor
aaa
adc
push
jle
jo
data16
fwait
mov
ficoms
mov
push
add
movsl
xchg
xchg
and
fimuls
mov
xorl
data16
stc
outsl
fs
test
push
jne
aas
movsl
shrl
add
mov
push
scas
adc
aad
into
aad
iret
rcr
and
cmpsl
sarb
out
nop
cmp
or
jne
mov
sub
xlat
aad
icebp
popf
inc
xor
inc
shl
int3
cmpsb
lods
mov
push
das
jae
dec
adc
es
outsl
and
sub
popf
adc
lods
movsl
push
push
fs
sbb
push
xchg
test
cmpsb
cs
push
jecxz
lret
jg
and
push
adc
addr16
pop
test
lods
xchg
dec
push
jg
cmpsl
lods
push
mov
movsl
mov
sbb
mov
and
push
cmc
xor
dec
xlat
fstpt
cli
out
jge
mov
cmp
enter
push
jp
mov
jecxz
add
jp
sub
movsb
movsb
call
cld
imul
and
xor
push
fxch
ja
adc
xor
cld
add
adc
popw
inc
mov
pop
pop
fstp
mov
sub
ds
fwait
outsb
xor
leave
sub
xchg
aaa
rclb
or
push
mov
adc
inc
loope
hlt
add
pop
fistl
pop
lods
xor
xor
sub
dec
shlb
fdivl
jbe
inc
popa
add
jne
sub
cli
cmpsb
cmpsl
lret
adc
xor
xor
in
mov
adc
arpl
mov
cmp
sbb
call
mov
adc
int3
pop
mov
mov
fnsave
lds
ret
ficoml
lock
lret
sbbb
xchg
test
pop
pushf
jmp
sub
jnp
outsb
add
pop
pop
xor
mov
xchg
call
call
and
sbb
sub
jne
jmp
and
sbb
jmp
fdivs
and
mov
add
pusha
arpl
movsl
push
insl
mov
loope
jle
aad
sti
popf
sub
pop
adc
add
rolb
lds
xor
in
adc
jbe
xor
cmp
xor
fnstsw
test
jle
pop
add
ffreep
inc
test
cwtl
sub
imul
jmp
or
imul
into
icebp
mov
das
mov
shrb
push
inc
mov
jmp
into
xchg
test
fldt
mov
xchg
andl
pop
add
scas
sub
add
out
and
pop
mov
aam
hlt
ds
inc
movsb
arpl
mov
fucompp
mov
dec
pop
xor
in
outsl
jae
aad
mov
leave
paddusw
sbb
test
xor
pop
movsl
fadds
xor
dec
mov
xchg
mov
xchg
fildll
pushf
repnz
daa
hlt
lods
jb
xor
add
insl
aad
dec
sbbl
jge
cmp
stos
dec
xorb
test
ds
xor
jmp
pop
addr16
lds
in
stos
push
xor
lods
or
lock
lahf
popf
push
das
dec
mov
ror
test
push
test
aam
or
xchg
fnstenv
roll
jp
adc
rolb
xor
jns
sti
shr
sti
lock
jno
dec
jge
lods
dec
popf
inc
aad
inc
and
and
test
js
mov
loopne
lret
addr16
fwait
xchg
iret
mov
sub
jge
in
lds
jle
stos
push
mov
dec
mov
cltd
jno
insb
and
sub
in
mov
aas
add
dec
repz
push
leave
fldcw
push
nop
xor
lcall
or
faddl
ret
addr16
out
inc
out
aaa
adc
lea
