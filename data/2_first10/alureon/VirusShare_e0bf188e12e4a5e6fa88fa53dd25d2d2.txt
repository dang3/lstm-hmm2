jne
lea
mov
push
mov
mov
and
call
mov
imul
call
inc
push
dec
call
lea
add
add
sub
and
call
inc
add
dec
mov
inc
inc
sub
add
mov
add
add
mov
movswl
dec
call
dec
add
sub
dec
imul
call
inc
mov
call
movzbl
xor
lea
dec
xor
dec
lea
dec
dec
pop
and
dec
inc
add
mov
pop
dec
add
pop
lea
add
imul
inc
pop
mov
xor
lea
inc
inc
mov
mov
mov
pop
mov
inc
pop
mov
dec
mov
inc
mov
call
add
dec
sub
lea
ret
add
inc
push
mov
dec
push
add
dec
push
lea
dec
push
movzwl
inc
push
sub
mov
mov
or
mov
push
and
ret
push
dec
sub
inc
mov
mov
inc
push
add
mov
inc
call
pop
ret
jmp
mov
and
xor
mov
movzbl
add
lea
xchg
lea
sub
movswl
mov
xor
lea
mov
mov
mov
inc
inc
add
dec
jne
mov
mov
add
imul
pop
lea
movzwl
pop
inc
add
pop
add
lea
dec
xor
lea
sub
inc
dec
inc
inc
lea
add
ret
push
push
add
or
push
movsbl
dec
inc
dec
sub
mov
push
dec
mov
inc
mov
push
mov
movsbl
dec
inc
add
dec
dec
push
mov
mov
inc
push
inc
add
xor
mov
and
push
lea
xor
push
inc
mov
pushl
dec
call
mov
add
mov
movsbl
lea
mov
dec
mov
dec
pop
ret
dec
cmp
jb
imul
xor
add
dec
mov
movsbl
lea
mov
sub
mov
inc
and
mov
dec
mov
inc
mov
and
mov
cmp
jb
inc
pop
xor
add
and
inc
inc
mov
or
dec
movzbl
sub
mov
xor
inc
sub
xor
dec
mov
dec
test
jbe
lea
xor
dec
movzbl
dec
inc
and
mov
dec
add
sub
and
movsbl
sub
mov
mov
mov
movzbl
dec
inc
add
and
dec
mov
mov
add
sub
mov
mov
and
mov
inc
dec
mov
mov
lea
dec
lea
mov
dec
jne
mov
mov
xor
and
mov
or
mov
dec
inc
mov
sub
dec
mov
mov
mov
and
sub
dec
mov
xor
sub
mov
inc
mov
test
jbe
inc
sub
inc
mov
and
sub
mov
sub
add
movsbl
or
inc
sub
movsbl
and
inc
dec
imul
add
add
and
mov
and
add
add
mov
dec
add
movzbl
add
inc
add
mov
lea
and
mov
sub
mov
inc
lea
movzbl
lea
lea
mov
and
imul
mov
xor
mov
movzbl
mov
inc
add
add
jmp
push
dec
inc
lea
dec
sub
mov
imul
inc
add
lea
mov
mov
lea
lea
movzwl
sub
add
lea
imul
inc
add
mov
inc
dec
lea
inc
dec
xor
sub
add
inc
mov
xor
dec
dec
dec
inc
add
dec
cmp
je
dec
dec
dec
push
add
call
call
add
add
call
call
movswl
mov
inc
dec
mov
add
movswl
ret
inc
and
pop
mov
ret
push
add
add
dec
dec
add
push
mov
inc
push
inc
push
xor
push
inc
dec
lea
inc
dec
call
dec
push
movzwl
movswl
xor
imul
sub
add
neg
movsbl
inc
mov
sub
dec
and
mov
inc
mov
mov
movsbl
dec
inc
dec
add
dec
je
dec
inc
inc
mov
dec
sub
mov
lea
mov
lea
mov
repnz
sub
add
add
add
jmp
dec
mov
movzbl
dec
movsbl
dec
sub
mov
jmp
mov
dec
lea
inc
dec
mov
dec
lea
pop
pop
ret
push
mov
dec
movzwl
dec
lea
add
movzwl
mov
inc
add
lea
inc
lea
imul
inc
inc
xor
dec
dec
mov
mov
mov
inc
add
inc
dec
lea
pop
ret
sub
mov
mov
mov
sub
mov
sub
inc
mov
dec
xor
mov
dec
mov
xor
inc
sub
mov
mov
inc
inc
sub
or
lea
lea
mov
mov
cmp
jb
movswl
push
mov
mov
push
add
mov
push
and
add
xor
xor
or
xor
add
xor
xor
and
mov
push
lea
inc
mov
sub
dec
xor
mov
lea
mov
or
mov
mov
dec
inc
movzbl
add
lea
add
add
lea
add
dec
movzbl
dec
sub
sub
or
add
inc
movsbl
add
inc
imul
inc
mov
mov
inc
mov
add
jmp
xchg
dec
or
lret
std
subl
into
add
dec
sbb
notl
fisubrs
aad
dec
xchg
es
outsb
or
fs
sti
mov
enter
or
test
vpcmov
repnz
test
aas
cmp
push
outsb
orl
rolb
inc
repnz
leave
push
and
xor
and
outsb
shr
test
push
inc
xor
ss
sahf
cwtl
xchg
mov
outsb
filds
pop
xchg
jb
aaa
and
sub
xchg
out
xchg
cmpsb
cmpsb
cld
push
mov
mov
popf
pop
outsl
sub
mov
push
jle
ret
xor
xorl
xor
push
jb
stos
fdivrl
in
in
mov
cmpl
lea
inc
push
aad
mov
dec
lcall
push
into
sub
aam
push
push
push
in
aas
push
xor
dec
dec
aas
sbb
repz
jp
xchg
ret
outsl
or
in
adc
sub
clc
and
inc
push
mov
dec
sbb
in
pushf
mov
jbe
popf
gs
adc
xchg
insl
scas
add
shll
fidivrl
mov
push
sub
leave
fisubs
pmaddwd
mov
mov
cwtl
dec
mov
lcall
movsb
inc
mov
push
sbb
movsb
push
add
push
xchg
int
pushf
push
dec
test
imul
movsb
int3
mov
pop
pushf
inc
and
adc
jae
inc
dec
or
jl
rol
or
adc
push
xor
or
add
imul
lret
add
sub
mov
mov
aaa
rcrb
xorl
push
inc
push
fcompl
or
sti
fldt
add
scas
arpl
fidivrs
or
stos
icebp
xchg
lods
pop
cld
push
lods
outsb
jns
roll
fs
push
scas
scas
xor
sahf
sub
cmp
test
inc
jo
cltd
cli
mov
add
mov
shlb
in
push
xor
pop
enter
lds
data16
outsb
mov
mov
int
fsubs
sbb
inc
mov
jmp
sbb
inc
push
jo
cmp
pop
pop
out
adc
es
inc
fmuls
adc
clc
je
push
aad
push
adc
xchg
inc
mov
jb
sbb
lret
jbe
fildll
mov
push
loop
dec
mov
mov
test
inc
test
xor
adc
pop
gs
sahf
inc
jmp
or
insb
dec
mov
ficoml
aad
lds
pop
sbb
lds
test
pop
iret
enter
push
mov
int
jae
ret
aam
push
lods
add
cltd
add
xchg
icebp
test
jge
addr16
fld
adc
sub
jecxz
and
jo
stos
push
jne
pop
xchg
jge
mov
jbe
mov
pop
jle
mov
jnp
sub
sbbb
sbb
jmp
test
cmp
jmp
in
or
ljmp
push
adc
les
dec
cmp
dec
cmp
mov
push
lret
sbb
lock
sub
pop
jnp
xor
add
cli
cli
xchg
loope
or
lods
sbb
dec
xchg
pusha
mov
pushf
push
cmpsl
inc
icebp
xor
add
mov
pop
incb
mov
sub
insb
imul
sub
cmp
inc
gs
mov
mov
movsl
mov
fcoml
fcom
jo
repnz
xor
jp
pop
daa
inc
push
jl
jne
jge
cmc
inc
fsubs
add
mov
outsb
bound
pop
jo
mov
xchg
popa
and
idivl
mov
jecxz
jns
adc
movsb
rclb
cmp
pop
add
fs
out
jp
adc
xchg
cmp
loop
or
cmpl
js
mov
push
cmp
bound
mulb
nop
pushf
adc
jbe
pop
add
out
push
int
xor
icebp
push
push
jb
ja
push
outsb
pop
loop
jl
or
jae
test
fcompl
popa
push
inc
imul
jecxz
in
mov
scas
push
jge
adc
jg
or
xchg
sub
ja
adc
shll
or
push
adcl
xchg
fildl
mov
jg
xchg
mov
dec
adc
test
lahf
movsl
cmp
hlt
mov
adc
stos
stos
xor
aas
inc
adc
mov
das
and
inc
pop
add
ret
push
lahf
ja
ret
xor
shll
pop
mov
xchg
sub
mov
dec
xchg
lret
test
add
sub
pop
ret
fistpl
shlb
out
lea
jp
jg
lock
loop
push
sub
cmp
xchg
les
push
imul
sub
mov
setle
jl
insl
pop
xchg
lea
mov
pop
cmp
rdpmc
adc
lea
or
cmp
mov
push
push
subb
mov
lret
jg
pop
mov
mov
fists
push
sbb
mov
mov
pop
popa
mov
mov
xor
lea
cmp
adc
dec
mov
dec
cs
arpl
adc
mov
cld
mov
push
jb
push
add
push
push
mov
push
xchg
mov
inc
arpl
cmpl
sbb
cwtl
shl
mov
mov
rorl
and
sub
push
jl
sbb
mov
cmc
or
call
imul
sarl
add
jle
xchg
mov
pop
test
mov
pop
mov
push
sar
cmp
popl
lret
xchg
sbb
push
adc
jmp
xor
in
fdivrs
mov
push
xchg
data16
mov
jmp
inc
fstpt
out
imul
push
or
flds
mov
jl
pop
add
inc
xchg
arpl
dec
ja
pop
inc
rclb
push
fwait
cmc
test
mov
mov
xlat
fcomps
test
fwait
push
dec
inc
loop
and
fstl
push
cmp
clc
fisttps
cmp
inc
pop
lds
sub
push
out
hlt
cli
test
pop
push
popf
mov
addl
sub
mov
jle
fistps
rorb
js,pt
pop
loope
sbb
shll
sub
cmpsb
fsubrp
loop
mov
jnp
cmp
in
add
mov
dec
push
pop
or
jl
imul
cmp
outsl
fisubs
adc
icebp
jle
mul
mov
data16
pop
scas
fs
rcrl
loop
dec
mov
insl
lods
movsl
dec
clc
mov
push
lock
test
test
adc
xchg
mov
push
push
mov
adc
push
movsl
inc
rcrb
xchg
sub
jne
icebp
shl
stos
iret
mov
jecxz
pop
mov
push
jne
fstpt
fsubr
pop
into
add
dec
jmp
subb
mov
movsl
imul
and
cmpsb
jmp
and
ljmp
out
lret
mov
and
clc
pop
xchg
lods
into
jl
or
mov
arpl
call
mov
cmpsl
xchg
inc
shrl
stos
int
dec
cli
or
ret
xchg
cmp
icebp
roll
sbb
or
push
pop
cmpxchg
insl
test
aad
ja
mov
lcall
in
mov
dec
ss
pop
or
int3
leave
mov
pop
jg
js
xchg
dec
adc
cs
int
mov
cmpsb
mov
mov
push
je
test
repz
push
xlat
mov
mov
jle
enter
scas
enter
jmp
xor
fld
cltd
cmc
or
sbb
popa
and
adc
inc
jecxz
outsl
testl
mov
shrl
add
data16
imul
jge
lds
loop
mov
pop
clc
insl
pop
cmp
in
push
adc
xlat
mov
stos
lods
or
mov
sbb
push
xlat
leave
cli
loopne
hlt
imul
jo
adc
insl
popa
inc
xchg
push
pop
je
xchg
xchg
xchg
mov
push
add
mov
cli
pop
inc
dec
popl
movsl
dec
jp
sub
and
fs
push
in
xchg
push
mov
mov
das
add
cmpsb
stc
pop
sti
sbb
faddl
pop
push
scas
inc
add
outsl
dec
pop
pop
aad
pushf
mov
fwait
cltd
xchg
mov
xor
pushf
js
out
jbe
or
loope
fisttps
test
lret
or
and
mov
inc
xchg
or
mov
mov
hlt
push
mov
lods
xor
push
push
pusha
xor
sbb
mov
ret
ljmp
lea
adc
xchg
xor
out
and
mov
out
insb
xor
aad
xorl
cmpsl
mov
pop
gs
sti
mov
pop
aam
lods
add
cmpsl
mov
roll
inc
mov
push
les
sub
shl
sbb
jge
sti
fcomp
and
clc
sbb
adc
in
pop
scas
pop
xor
pop
pop
lcall
in
add
jl
subb
cmpsl
or
and
and
pop
cmpsb
or
cmp
pop
mov
or
dec
scas
fs
rcrb
dec
adc
sub
mov
jle
push
push
call
cmpsb
jge
lahf
jb
popa
bound
movsl
xor
lock
xor
xorb
add
std
sahf
lods
xchg
add
lret
js
outsb
sbb
pop
fidivrs
and
test
outsb
ja
jg
dec
lods
fsubrs
mov
test
cmp
in
rcll
pop
pop
mull
mov
adc
lds
sub
dec
ret
push
sub
repnz
shll
add
add
das
push
pop
adc
dec
cmp
or
mov
pop
scas
stos
es
and
lcall
mov
mov
push
mov
dec
arpl
and
lds
addr16
push
and
jp
mov
shr
mov
sub
and
pusha
cmp
and
ficoml
je
lahf
cmp
and
push
addr16
dec
and
subb
add
cmpsl
addr16
ret
mov
sbb
add
cmp
jb
mov
test
jns
sub
sub
fdivr
int3
and
mov
adcl
sbb
int3
sahf
mov
xorl
or
pop
push
pop
repz
push
push
mov
mov
or
mov
push
jnp
loop
mov
jle
mov
jae
hlt
jbe
ds
cli
fdivrl
xchg
cwtl
or
jmp
stos
addb
xchg
lock
mov
mov
push
les
dec
in
push
nop
sbb
add
jne
enter
bound
stos
cmp
fiadds
jmp
mov
nop
jne
jecxz
xchg
mov
xchg
push
jb
cmp
push
int3
scas
lret
cmpsb
mov
loope
clc
int3
fs
push
imul
inc
push
stc
mov
arpl
lret
inc
mov
and
das
icebp
je
fwait
inc
out
call
sub
adc
inc
and
rep
dec
test
xchg
adc
popa
mov
mov
cmp
lods
mov
adc
xchg
mov
xchg
int
nop
push
repz
xchg
add
jg
adcb
shll
gs
lds
nop
in
jbe
inc
fsubl
ror
daa
ds
pop
stos
outsl
xchg
test
repnz
push
outsb
iret
aad
gs
bound
ret
and
adc
and
and
pop
daa
mov
mov
js
xchg
insl
outsb
add
dec
aam
or
pushf
sub
dec
std
mov
push
rcl
sahf
outsb
add
ljmp
mov
dec
mov
push
hlt
cmpsb
pop
cmpsl
test
inc
mov
iret
add
jge
std
inc
dec
push
push
inc
pop
sbb
sbb
cmp
fidivs
push
das
adc
outsb
mov
mov
out
movsb
cmpsb
or
loope
andb
in
jnp
push
jnp
xchg
jl
mov
xor
imul
test
add
sahf
sbb
movsl
pop
add
stc
les
jb
pop
jns
dec
scas
stc
xor
into
cmp
ret
addl
mov
or
lret
cli
daa
ficompl
xchg
mov
push
je
lret
stos
in
pop
and
mov
mov
addr16
cld
in
repz
test
jg
jl
cmpsl
fst
repnz
ret
notl
adc
stos
fs
call
mov
xchg
dec
sub
push
sbb
dec
sahf
mov
dec
es
ss
sbb
into
bound
cmp
je
sub
sub
sub
add
mov
pop
pop
sbb
mov
sbb
lret
lods
jns
movsl
out
push
mov
xchg
clc
sahf
add
int3
xor
es
mov
insl
push
pop
inc
and
call
bnd
cmpsb
jmp
xchg
scas
xor
push
lods
movsl
pop
aas
test
adc
or
mov
xchg
js
cmp
cmpsl
lcall
pop
sbbl
sbb
mov
in
test
das
xchg
out
lret
test
js
out
bt
inc
xchg
mov
je
aad
fadds
sub
push
add
adc
test
inc
xchg
mov
lret
push
sub
adc
subb
fstpl
arpl
aam
aam
movsb
push
inc
jle
aad
inc
add
mov
filds
dec
testl
les
xor
cmp
test
sub
sub
cwtl
aas
cmpsl
sub
outsb
xor
fdiv
cmp
sbb
push
xlat
aad
lods
int
mov
es
movsl
rorl
xchg
jg
push
jge
and
daa
test
add
fwait
ret
fcoms
push
jae
movsl
adc
and
pop
mov
lret
add
xor
bound
in
and
jb
subb
orb
xchg
lret
push
lret
ret
xchg
dec
and
shl
decb
xor
jb
test
cld
cli
xchg
loope
mov
push
and
inc
pop
mov
std
pop
dec
ret
add
adc
lods
jnp
outsb
sbb
mov
mov
dec
test
or
lods
enter
or
imul
mov
pusha
mov
iret
jg
pop
mov
in
sub
icebp
pop
test
and
mov
mov
lods
outsl
fs
xchg
jecxz
out
lods
rcrb
adcl
add
mov
push
pop
int3
inc
pop
inc
inc
cmp
cs
xlat
xor
jno
pop
push
push
xchg
and
and
pop
mov
test
repz
std
bound
rcrb
xchg
jp
fsubrs
cmp
fcmovnu
dec
sar
daa
adc
pop
mov
lea
dec
xchg
pop
mov
xor
lds
push
and
mov
pop
mov
adc
movsl
xorb
pop
repnz
es
addl
mov
leave
sti
inc
push
add
or
mov
dec
mov
lcall
arpl
fstpl
pop
mov
aaa
shll
xchg
xchg
in
pushl
mov
cs
lea
adc
rorl
jp
mov
out
int3
adc
add
test
cmp
push
pop
ret
dec
in
je
imul
lods
xor
jno
push
pop
test
fdivrp
cmp
push
aam
dec
mov
add
cmp
out
sub
mov
jno
repnz
xchg
pop
popa
mov
nop
lods
xlat
adc
jo
fbstp
pandn
or
adc
cmp
inc
sahf
pusha
sti
cli
mov
arpl
adc
push
mov
ss
icebp
cmpsb
dec
jb
xor
cvttps2pi
std
jmp
and
les
xlat
sub
fistl
push
rolb
mov
aam
leave
icebp
push
inc
pop
sub
mov
and
xchg
mov
sbb
cmp
xor
pop
xchg
cmp
addr16
and
jmp
dec
test
daa
adc
mov
or
dec
das
clc
mov
sahf
adc
dec
mov
sub
inc
lcall
scas
xor
jo
sti
popl
test
sbb
mov
mov
push
dec
mov
cmp
mulb
adc
inc
mov
mov
shrl
fmuls
flds
int3
scas
or
push
repnz
mov
faddp
xchg
inc
cmp
ja
fidivs
aam
sti
dec
icebp
fdivs
cli
xor
cld
mov
inc
shlb
xor
pop
fucom
data16
xchg
inc
cmp
test
jbe
xor
pop
dec
fldenv
mov
outsb
std
out
xor
test
movaps
mov
inc
lret
sub
dec
movq
mov
test
mov
push
adc
cmc
lods
les
mov
mov
int3
ret
lock
iret
mov
xor
sahf
push
repz
mov
lea
inc
sbb
loop
testb
idivb
xchg
cltd
lock
mul
xor
shll
imul
orb
gs
mov
stos
push
adc
bswap
mov
je
and
jo
loopne
enter
imul
gs
add
cmp
inc
xchg
repnz
lods
stos
jbe
cld
out
pop
mov
pop
sbb
push
and
lock
adc
fcompl
cmpsb
mov
movsl
in
movsb
adc
fnstsw
xchg
jo
sub
mov
test
lret
in
xchg
int
mov
sbb
fucom
push
inc
fisubrl
cmp
inc
cmp
int3
push
xchg
and
xor
out
cli
repz
cmpsb
add
imul
lock
cmpsl
mov
in
xor
adc
cmp
push
fcmovnu
mov
or
adc
push
test
xor
jle
das
inc
out
fwait
mov
pop
xchg
sub
loope
xor
xor
dec
test
ffreep
in
repz
sbb
in
out
mov
jmp
xchg
ret
adcl
cmp
jl
aam
out
stc
xchg
xlat
mov
cli
shll
xchg
xchg
mov
rclb
in
sbb
fsubr
adc
jg
push
lret
mov
cli
in
rolb
cmp
xchg
fistpll
jae
lret
xchg
lea
or
cmc
adc
lret
dec
inc
inc
xchg
outsb
sbb
xchg
adc
int
inc
roll
std
sbb
fnstsw
adc
jnp
jmp
or
es
and
mov
loop
test
jno
stos
popa
cli
fdiv
stos
and
rorb
add
or
fwait
sub
xor
and
inc
sbb
ret
mov
sub
fsubrp
mov
pop
sbb
outsb
cmp
add
ljmp
and
push
int3
decb
jne
outsl
fcomps
sbb
or
dec
jae
adc
sbb
push
push
pop
pushf
xor
mov
add
mov
icebp
mov
insb
xchg
popa
jecxz
mov
xchg
sahf
cmp
cltd
cmpsb
jne
sub
fisttpl
mov
mov
clc
and
sub
aad
jnp
and
out
xchg
pushf
xchg
dec
jae
sbb
pop
fdivl
daa
xor
jns
pop
lea
adc
adc
in
out
jb
and
fnstsw
inc
push
lods
popa
aad
pop
add
stos
repz
and
mov
daa
mov
cli
xchg
pop
lcall
dec
test
test
das
rolb
int3
sbb
dec
int3
lea
scas
adc
pusha
stc
xchg
mov
imull
fwait
scas
dec
add
es
sbb
ret
sahf
adc
popa
popa
out
incb
rcrl
cmp
push
xor
movsl
xor
repz
mov
dec
pop
jae
xchg
adc
sbb
or
imul
xor
and
cmpsl
mov
mov
xchg
lods
mov
dec
or
xor
test
jle
inc
push
and
ret
mov
sub
cmp
ret
cmp
and
mov
adc
xor
bound
push
cmpsl
sbb
dec
pop
repnz
inc
dec
mov
dec
aas
mov
adc
xchg
lcall
or
test
test
call
arpl
mov
mov
mov
pop
xchg
add
cmp
into
andl
imul
lahf
adc
pslld
pop
loopne
push
pop
mov
and
adc
jp
fwait
mov
sbb
leave
fldl
imul
outsl
loope
aaa
mov
insb
cmp
cwtl
popf
pop
mov
pop
outsl
aas
xor
popa
mov
dec
and
push
xorl
sub
popa
adc
cmp
mov
out
and
mov
push
push
inc
push
dec
or
dec
mov
push
and
add
roll
bound
out
pop
or
sub
sti
mov
xchg
cs
xor
int3
sub
lret
ds
repnz
in
adc
out
inc
push
sub
xor
jns
dec
cmp
popa
fistl
and
sti
cmp
dec
sub
cmp
pusha
lret
pop
mov
lcall
stos
sti
adc
dec
stc
pop
mov
push
pop
icebp
shlb
test
pop
dec
mov
test
cmc
ss
test
lret
je
sub
cmpsb
mov
mov
pop
xchg
imul
and
sbb
mov
lret
popf
jo
push
lahf
arpl
dec
aad
push
negl
ss
jbe
cmpsl
lahf
mov
inc
push
sbb
sub
imul
fistpll
shrl
in
dec
stos
cmp
std
jge
je
call
jle
loopne
gs
jle
push
popa
xchg
xchg
xor
test
roll
push
mov
loope
test
xchg
adc
push
in
xor
cs
rclb
xor
sbb
bound
push
jecxz
add
movb
jg
push
loop
mov
cmp
into
dec
mov
jne
aaa
cmp
pop
cmp
cmp
xor
flds
ja
jl
mov
and
adc
adc
cltd
pop
stc
imul
xchg
sub
xor
add
mov
arpl
inc
out
mov
int3
lods
mov
aas
add
addb
inc
ds
dec
lahf
das
or
or
cmc
sub
jo
mov
mov
stos
insb
ds
mov
add
or
push
mov
cmc
test
cmp
or
jne
aam
int
gs
cld
repnz
pand
and
mov
sbb
loop
adc
cmp
popa
and
or
pop
jg
push
pop
pop
lds
pop
dec
mov
enter
fidivrs
inc
ds
jne
rolb
das
imull
jo
cmp
or
ss
jmp
lock
or
fsubs
mov
imul
fdivr
lea
loope
push
or
ss
xchg
jg
push
jmp
jbe
leave
xchg
cmp
xorb
and
cmpsb
sbb
mov
mov
and
cltd
push
jle
inc
cmp
sti
sbb
hlt
add
imul
ss
bound
popf
adc
fldl
cs
pop
mov
stos
outsl
shrl
pop
inc
xor
fwait
mov
sbb
adc
pushf
pop
dec
ljmp
add
cmp
pop
mul
sub
and
mov
leave
push
mov
mov
mov
mov
into
pop
loope
pop
sub
popf
insb
sub
mov
sub
popa
xchg
clc
pop
adc
jb
in
sbb
decl
sub
jno
cmp
es
sahf
popa
pop
cs
mov
mov
xchg
cmp
imul
call
cmp
aaa
leave
pop
xchg
jns
fdivl
xchg
or
scas
xchg
adc
rclb
adc
dec
push
imull
fucomi
icebp
cmpb
mov
dec
inc
fnsave
xchg
daa
out
movsb
cli
test
and
sarl
inc
xchg
pop
std
jp
xchg
dec
lea
inc
repz
add
imul
aam
push
push
jb
mov
adc
add
imul
push
ret
xlat
lods
xchg
fiadds
xlat
neg
ret
mov
addr16
jbe
jle
push
out
repnz
dec
mov
in
dec
and
loope
repz
cmp
enter
push
cmp
dec
xlat
jge
pop
jo
aam
dec
lock
xor
sbb
lret
cmp
pop
cmp
fs
push
sbb
pop
or
jecxz
and
mov
mov
add
cmp
inc
jbe
into
andb
dec
mov
or
pop
and
lock
cmc
les
add
subl
sub
loope
call
cmp
hlt
jmp
adc
sub
xchg
repnz
xchg
mov
pop
jbe
cmpsb
and
xchg
sbb
fistpl
push
add
shl
mov
mov
pusha
loope
adc
lcall
inc
xchg
sti
push
xchg
shr
std
mov
and
out
mov
xchg
jmp
iret
mov
arpl
inc
in
test
or
sbb
push
fs
cli
adc
in
xor
scas
mov
cmp
bound
and
popa
jb
stos
push
push
cmp
lahf
cmp
push
adc
call
dec
dec
xor
repz
dec
test
out
scas
rorb
test
repnz
lock
push
addr16
mov
sbb
cmp
push
mov
repz
sbb
shlb
stos
ret
in
jns
or
mov
lock
or
js
cmpsb
jge
loopne
mov
inc
aam
ja
inc
cli
sti
test
imul
popf
imul
in
dec
js
inc
xor
dec
mov
sub
mov
push
pop
cmp
mov
adcl
or
pop
sub
jae
sub
iret
pop
pop
out
shlb
push
bound
lret
cmp
mov
mov
jnp
xchg
push
sahf
cltd
cltd
pop
push
and
incl
call
fimuls
and
fsubrl
dec
mov
lret
sar
sar
nop
adc
cmp
xchg
in
sahf
fmull
ret
ds
push
lahf
leave
adc
cwtl
cmp
mov
lods
int3
cmc
imul
adc
sub
pushf
lahf
xor
adc
fstpt
dec
push
pop
lods
adc
js
and
add
mov
dec
stos
jo
jae
mov
xor
cmpsb
cmpsb
sahf
mov
in
adc
lcall
divl
cmp
ret
fdivr
sbb
ficomps
add
jecxz
xchg
rcrl
addr16
push
cli
sub
fstpt
and
pusha
mov
ja
mov
adc
jno
adc
inc
fdivrs
loop
xor
repnz
adc
push
scas
mov
add
loope
mov
xor
add
push
adc
inc
jmp
and
divl
or
inc
dec
cmp
xor
xor
push
scas
jne
filds
loopne
pop
xchg
cli
add
adc
std
aas
dec
and
and
mov
in
and
adc
je
add
mov
push
adc
sub
out
xchg
hlt
jl
rorb
sub
call
ret
inc
xor
rorb
mov
pop
jmp
mov
xor
mov
out
idivl
outsb
push
lret
dec
in
adcl
mov
sub
mov
mov
lret
leave
jmp
pop
mov
lods
jg
out
xor
sahf
enter
cmpsl
repnz
jmp
and
push
add
outsb
pop
mov
lds
loope
and
xchg
push
mov
gs
pop
mov
jle
loop
mov
mul
das
mov
rorl
subb
xor
fstpt
mov
jnp
loop
nop
mov
jge
div
push
cmp
add
sti
inc
inc
imul
jnp
and
xchg
aam
push
jno
dec
or
nop
and
mov
dec
or
push
rcrl
sub
loopne
sbb
or
ret
aad
call
ja
inc
add
js
xchg
push
mov
pop
push
inc
cmp
jle
or
xchg
xor
mov
fistps
aad
xchg
sub
popa
mov
push
dec
sbb
aaa
mov
mov
mov
push
aad
cltd
mov
shl
cmp
mov
lods
jnp
xchg
repnz
pop
gs
lock
scas
dec
xchg
xchg
fmul
mov
inc
lods
imul
lods
push
mov
stos
sarl
mov
scas
push
sarl
mov
les
iret
insl
mov
lret
mov
xchg
adc
aas
movsb
icebp
and
mov
sbb
loope
inc
or
dec
or
divb
cmpsb
dec
push
xchg
fwait
rorb
mov
add
push
xlat
test
shlb
and
push
ja
sbb
aad
sub
or
adc
cmp
mov
jg
loopne
decl
xchg
ficoms
xor
mull
push
mov
xchg
int3
xchg
xlat
jmp
and
mov
add
mov
test
fdivrs
sub
adc
dec
add
cmp
push
and
mov
es
cli
xor
lods
fisubl
cltd
cmp
adc
leave
ror
push
mov
push
xchg
jbe
scas
cmp
jecxz
push
push
loopne
clc
leave
pop
mov
out
ss
inc
pop
out
or
mov
icebp
pop
aas
rcl
pushf
sbb
shll
in
ds
push
stos
xchg
push
cli
xor
mov
push
stos
xchg
test
mov
mov
mov
and
and
hlt
clc
fisubrl
push
and
jno
xor
xchg
inc
out
cmp
jne
sbb
fsubl
xchg
rcll
ret
arpl
push
add
filds
sbb
xchg
xchg
or
dec
sbbb
cli
mov
mov
add
lds
dec
fwait
inc
orb
fwait
inc
je
fildl
in
test
lds
and
shlb
lods
les
ds
adc
movsb
adc
test
or
filds
mov
out
mov
mov
pop
cmp
and
xchg
es
mov
lods
or
sub
lock
nop
pushf
test
int
clc
pop
xlat
inc
insb
std
arpl
mov
inc
cmp
in
jb
lds
aad
inc
xchg
inc
push
addr16
pop
add
aas
push
stos
pop
mov
mov
insb
insb
jno
and
adc
cmpsb
movsl
icebp
lods
mov
scas
lods
push
add
mov
jmp
cmp
or
pop
js
loopne
add
push
inc
add
xchg
sar
and
rcll
fstpt
sti
lahf
cld
sbb
ja
push
stc
rcrl
push
pop
add
icebp
and
add
and
loop
xchg
fidivl
and
in
push
and
sbb
add
test
dec
mov
pop
fisttpll
mov
add
adc
in
pop
xlat
push
jle
and
jns
mov
xchg
lret
mov
daa
stc
cmp
adc
movntq
or
dec
cli
pop
and
or
cmc
aam
gs
or
fldenv
lods
sub
or
push
mov
repnz
subb
fisttpl
cmpsb
mov
leave
fstps
loopne
mov
scas
sub
mov
sbb
push
jbe
dec
ror
lcall
dec
xchg
mov
push
mov
scas
loopne
jne
and
inc
jecxz
jge
xor
lret
mov
push
inc
test
push
popa
into
enter
fisubrs
push
lret
mov
or
std
stc
aad
mov
ss
jns
pop
stos
mov
xchg
jo
cmp
mov
xor
lahf
leave
fcom
and
mov
mov
mov
in
xlat
inc
jne
addr16
loopne
and
xchg
jbe
rcr
push
push
pop
out
sarl
push
and
jnp
mov
addr16
push
loop
mov
daa
out
mov
lea
cmp
daa
jne
nop
cwtl
add
test
mov
in
clc
cmp
mov
sahf
cmp
jbe
ficomps
sub
fidivl
mov
mov
lahf
inc
jne
insb
mov
orl
pop
add
sarl
addb
mov
mov
fcomi
loope
fwait
hlt
jl
pop
lret
jmp
aad
push
push
js
movsl
idivl
sbb
or
dec
mull
xlat
push
lea
cmp
push
jne
sbb
sub
and
cmp
push
mov
lods
or
stos
cwtl
out
or
sub
je
inc
pop
or
cmp
hlt
mov
xchg
iret
sbb
pop
stos
fs
clc
add
mov
iret
sub
out
aaa
xchg
negb
in
dec
in
aad
fcmovbe
mov
rcrb
pop
inc
std
jnp
jp
xchg
outsl
mov
xor
mov
jg
or
popf
inc
lods
jo
shll
xlat
mov
jge
test
fstl
ss
data16
bound
in
cmp
ljmp
dec
mov
data16
stos
int
xchg
jp
sub
push
mov
or
ret
or
outsl
arpl
pop
push
jg
inc
fisubrl
cmp
pushf
stc
sbb
and
sbb
and
les
loopne
call
test
push
out
jmp
xlat
cmp
dec
push
xor
cltd
sub
rclb
push
enter
imul
dec
dec
or
sbb
into
cwtl
js
enter
sub
scas
loope
cmp
hlt
xchg
outsl
sub
data16
les
hlt
xchg
or
add
inc
rorb
cmp
push
inc
mov
push
jecxz
cli
rcrl
and
xchg
dec
enter
sub
aas
pushf
push
insl
movlhps
sub
aaa
jg
mov
and
add
int
andb
aad
pop
inc
mov
cld
cmp
movsl
push
arpl
xor
cmpl
fcoml
push
test
sub
ss
loopne
xchg
pop
aad
push
xor
or
push
mov
dec
aaa
jb
mov
lret
into
lea
mov
in
inc
cmovns
rclb
in
sbb
mov
in
mov
mov
sub
adc
cltd
imul
pop
mov
push
pop
or
jo
pop
test
cmp
add
sub
dec
inc
jecxz
sbb
lea
loop
scas
data16
sub
decb
bound
iret
xchg
sahf
aas
stos
push
gs
dec
inc
insb
mov
sbb
add
dec
inc
mov
loop
test
or
or
icebp
and
jns
adc
xchg
jecxz
sbb
and
sub
push
xchg
mov
imul
inc
addr16
lods
int3
pop
sub
lock
or
fs
mov
dec
fwait
push
adc
push
test
cmpb
inc
sti
sub
rclb
or
adc
push
pushf
loope
inc
mov
shl
xchg
push
loope
das
mov
inc
out
js
pop
ja
das
lds
jge
push
mov
mov
sub
xchg
push
mov
es
push
mov
push
aas
jle
xchg
sub
push
sahf
jg
leave
push
adc
fdivs
push
js
add
hlt
adc
inc
iret
mov
aaa
cmpsb
or
mov
and
je
pop
sub
jmp
outsl
dec
into
pop
cld
xorb
jle
inc
inc
cmp
popa
sub
jo
cltd
repz
mov
mov
arpl
cmp
insb
lds
xor
mov
push
fcom
icebp
dec
pop
mov
mov
dec
ret
mov
in
or
int
jmp
cmp
mov
in
mov
xor
mov
dec
scas
sub
sbb
xchg
cmc
pop
inc
adc
and
mov
out
out
fcmovb
adc
push
mov
pop
cmc
lods
stos
mov
xor
outsl
aam
lahf
divb
xor
rcrl
xor
push
xchg
insl
arpl
lock
lret
add
xor
repz
mov
sub
outsb
sub
lds
add
fldcw
lock
lret
nop
cmp
or
push
jle
mov
lret
test
adc
je
aad
in
push
add
sub
test
jmp
loop
js
pop
sbb
xor
clc
popf
xor
fstp
insl
data16
les
pop
jno
sbb
sub
inc
filds
repz
leave
push
call
add
sub
bound
addl
mov
fisubrs
frstor
fsubrs
outsl
cmp
xor
xchg
add
pop
mov
or
sahf
inc
cmc
icebp
sbb
push
inc
ret
ja
and
sub
or
insb
add
inc
add
sahf
and
mov
daa
daa
push
sub
sbb
inc
xor
sbb
addr16
lods
ss
fwait
push
push
xchg
inc
xlat
push
and
movsb
imul
clc
jne
test
jmp
addr16
lock
ret
mov
mov
dec
popf
xor
add
jne
ljmp
mov
pop
adc
sahf
clc
loop
mov
call
pop
and
mov
mov
mov
mov
insl
mov
cmpl
aaa
add
adc
mov
hlt
imul
rorb
adc
lea
lock
mov
dec
xor
lret
jb
mov
rcrb
or
pop
and
std
or
test
pop
jecxz
jb
hlt
dec
pusha
jno
sub
pop
jl
cmp
mov
jae
sbb
aas
sbb
mov
jge
lcall
push
pop
icebp
mov
dec
cmpsl
js
push
pusha
inc
lret
inc
into
xor
ficoml
push
pop
fucom
or
and
lds
add
andl
jae
repnz
lahf
daa
pop
mov
inc
enter
idiv
movsb
jge
cmp
inc
in
pushf
adc
add
int
mov
or
test
cmp
mov
jecxz
mov
nop
dec
mov
cmp
stos
push
je
mov
popf
or
lret
push
push
inc
jmp
mov
jb
jns
imul
push
xchg
ret
int
mov
pop
inc
es
sbb
and
and
ljmp
daa
flds
jg
stc
in
out
cs
inc
clc
push
xor
adc
lock
xchg
push
sbb
xchg
xor
arpl
movsl
add
xchg
add
repz
pop
pop
xchg
loop
sbb
mov
inc
aad
sbb
rol
xlat
data16
or
pushf
mov
xchg
call
add
ja
jge
int3
mov
repz
popa
jg
xor
mov
cmpl
mov
jae
ss
ds
mov
std
xchg
dec
daa
push
repnz
decb
pop
arpl
pusha
add
aas
adc
mov
insb
ret
pop
xchg
adc
enter
push
mov
nop
mov
jle
int
push
fs
pushf
dec
lods
mov
cmp
sbb
ljmp
mov
mov
xor
enter
shll
lds
lahf
add
pusha
jnp
lahf
mov
cmp
xchg
mov
cli
push
adc
and
pushl
jmp
push
daa
shll
push
scas
lcall
xor
inc
xchg
push
sbb
fnstsw
push
dec
mov
sbb
push
or
test
mov
sub
sbb
sub
mov
mov
bsr
addr16
cmp
cli
jbe
jle
or
cmc
stos
sti
addb
push
int3
pop
mov
and
push
lock
or
js
dec
aas
lret
clc
lret
mov
ljmp
push
ficoml
mov
push
movsb
mov
xor
insb
dec
notl
daa
xor
mov
pop
call
in
loopne
pushf
adc
or
mov
inc
int3
or
loope
aam
sbb
pop
jg
push
sub
sbb
dec
mov
sub
sar
scas
dec
mov
cmpsl
sbb
jg
mov
xchg
inc
mov
jle
ja
in
push
xor
cmp
imul
add
mov
mov
xchg
aaa
inc
shll
or
add
popa
nop
add
rcrb
in
sbb
dec
notl
ljmp
xchg
cmp
push
add
gs
test
dec
test
mov
xchg
loop
imul
in
adc
cld
dec
inc
cli
es
cli
mov
vpmacsdql
andl
hlt
lcall
mov
add
add
mov
xchg
push
sbb
inc
jmp
xchg
int3
dec
loop
or
lahf
jg
sub
sub
add
and
cmp
jno
pop
cmc
mov
and
xchg
mov
mov
std
lods
dec
sub
repz
push
mov
pop
push
mov
ja
sub
nop
out
mov
xor
push
pop
movsl
xchg
and
sbb
mov
mov
ja
lds
subb
bnd
ja
pop
testb
cmp
dec
aas
xchg
fdivr
sbb
pop
lods
pop
mov
jne
lea
leave
xchg
cmp
dec
int
insb
es
mov
aaa
dec
int
faddl
xchg
call
mov
in
push
lea
jne
scas
xor
ss
xor
daa
out
mov
cs
leave
ror
lods
divps
cmpl
mov
push
gs
lcall
jno
ret
dec
imul
mov
sub
adc
dec
out
jle
sbb
stos
sub
sahf
popf
mov
and
jg,pt
jle
inc
icebp
mov
mov
and
jecxz
das
aad
loop
inc
inc
mov
sbb
inc
cli
inc
pop
shrb
xchg
and
lock
or
bound
cwtl
cs
cli
jno,pt
insb
dec
inc
shld
or
lods
roll
and
xor
adc
inc
adc
pop
mov
cwtl
ljmp
sbb
stos
xor
mov
jg
test
pop
aad
and
jecxz
mov
shlb
xchg
sti
jne
in
jbe
fcmove
mov
fists
sahf
mov
cmp
inc
cvtps2pi
bound
and
fldcw
je
sub
pop
jg
stos
imul
test
test
fwait
inc
shll
subl
lahf
jno
adc
inc
pop
lahf
xchg
jns
ja
int3
xor
lock
lret
daa
sarl
js
xor
or
or
stos
add
lods
xchg
jbe
jmp
xor
sub
cwtl
push
sub
mov
mov
insb
ret
pop
mov
pop
or
lret
stos
nop
insb
ret
daa
or
jns
dec
shr
fwait
push
dec
push
sbb
sub
fldenv
mov
or
mov
jo
stos
fiaddl
pop
mov
bound
cmp
sbb
sbb
pop
imul
xor
pop
mov
fdivrp
insl
or
or
xchg
lea
movsb
mov
push
lods
pop
adc
sbb
cld
rcrl
insb
sub
cwtl
and
enter
out
sarb
popa
xchg
rolb
pop
int
mov
stc
cmp
bound
loop
xchg
push
rorb
or
loop
adc
sub
sbb
pusha
cmpsb
mov
aaa
cmp
leave
mov
add
or
or
dec
mov
jbe
out
es
imul
jo
mov
dec
enter
dec
mov
xchg
call
out
inc
mov
push
scas
jbe
lret
mov
pop
xchg
or
xchg
cmp
dec
or
xchg
setae
lods
mov
ja
mov
cmp
pop
je
push
sub
xlat
loopne
shl
mov
call
inc
scas
or
xchg
imul
outsb
inc
test
inc
and
shl
repnz
xor
outsb
mov
jae
xor
pop
sarb
aam
fmuls
cmpsl
sbbb
test
jae
and
rcl
jno
roll
repz
scas
cmp
cwtl
mov
clc
rorl
out
cltd
leave
data16
jmp
pop
add
xor
in
cld
rorb
ffreep
enter
pop
enter
dec
jge
push
insl
lea
jecxz
lock
jp
xor
stos
dec
ja
cmp
xor
rolb
mov
rclb
js
xchg
lcall
dec
jle
pusha
pop
jle
in
call
daa
jno
xor
or
dec
mov
dec
icebp
sbb
mov
push
sub
fcoms
or
add
mov
cmp
dec
xchg
ret
dec
or
pop
into
cmpsb
lods
push
cmc
je
push
add
leave
pop
in
adc
icebp
mov
lods
movswl
mov
adc
lahf
cmp
sbbb
cmpsl
aam
and
jne
rcr
ss
cmc
add
adc
aaa
push
addl
js
adc
add
fwait
cmp
or
push
out
mov
mov
mov
daa
call
fidivl
dec
pop
inc
nop
test
or
sub
adc
xchg
out
addb
gs
lret
mov
jp
push
js
outsl
mov
pop
popf
sar
stos
and
or
and
xlat
andb
mov
xor
and
ljmp
popf
pusha
in
andb
jne
jae
add
fsubrp
test
sbb
xor
aaa
jmp
inc
pop
sbb
test
push
xchg
adc
stos
adc
int
xchg
mov
cmp
stos
lret
jg
mov
push
fwait
lret
xor
je
cltd
push
andl
scas
fcmovu
and
aam
fisttps
cmp
xchg
dec
cs
or
mov
or
cld
mov
lds
mov
mov
pop
ret
fstps
inc
test
mov
cs
ror
lock
lahf
mov
jle
loop
es
fs
test
outsl
dec
insb
stos
jp
nop
adc
xchg
sahf
gs
add
incb
jno
icebp
imul
jmp
add
movsl
cmp
cltd
add
fwait
rcll
or
dec
pop
mov
cltd
cld
lods
jno
loop
fldl
imul
loopne
inc
mov
fmulp
cli
xor
sbb
sbb
jmp
jle
add
mov
mov
sbb
xor
pop
or
jbe
stos
sbb
mov
jb
sub
push
fs
pushf
and
push
clc
shl
xlat
stos
add
xchg
js
jge
push
pop
sub
icebp
sub
mov
movsb
or
or
outsl
lock
out
leave
sti
mov
jb
jg
dec
leave
mov
mov
ljmp
mov
push
fimuls
pop
sub
testb
outsl
enter
pop
int3
mov
stos
movsb
stc
add
test
jo
stc
popf
sbb
lods
mov
lock
lea
clc
adc
loope
xchg
fwait
jae
xor
cltd
push
cli
les
lcall
test
mov
inc
pop
cld
pop
pusha
xor
mov
sub
inc
notb
jne
push
das
push
popl
mov
and
mov
ret
push
pop
fcmovb
mov
or
ret
xor
mov
icebp
cli
insl
xchg
cli
dec
fs
sub
mov
dec
mov
stos
popf
inc
adc
mov
pop
out
add
fstl
lcall
movups
sahf
push
clc
pop
cwtl
pushf
repnz
cmp
or
and
add
pop
rolb
jo
cld
std
cld
lods
xchg
jbe
sahf
push
xchg
insl
mov
orps
jp
pop
push
push
inc
add
loope
stos
xlat
inc
fdivrs
jmp
movsb
aad
or
xchg
jns
in
mov
adc
ss
cmpl
decb
adc
je
fucomp
xor
ds
stos
or
or
cli
pop
or
sbb
jl
jg
add
adc
jecxz
mov
mov
push
dec
jg
xchg
or
jo
pop
adcl
leave
lods
mov
fcom
xchg
jle
pop
or
rcr
fs
repnz
and
mov
inc
loope
test
xchg
mov
jmp
pushf
jae
mov
popa
or
adc
repz
add
orl
mov
gs
adc
mov
xlat
in
or
cli
sbb
dec
jno
fsubr
push
shl
mov
xchg
mov
push
and
sbbl
jl
hlt
mov
mov
lods
daa
test
push
idivb
cmc
loope
sbb
stos
add
decl
test
push
or
or
lcall
mov
mov
xchg
push
xor
push
dec
lods
fisubl
jne
sbb
add
jae
std
lea
inc
fmuls
imul
or
xor
fsubrs
xorl
cli
dec
cs
sub
cmc
repz
dec
std
stc
orl
adcl
cmp
mov
adc
out
test
jbe
xchg
repz
and
lock
lods
adc
out
xchg
mov
lock
pop
fldenv
movsb
and
int3
mov
sub
inc
or
cmpsb
out
cmp
aas
push
imul
in
adc
pop
icebp
out
push
mov
sub
or
paddw
test
jns
mov
pop
in
or
fcompl
dec
adc
aam
sub
incb
adc
movsl
scas
pop
jno
insb
js
inc
push
faddp
sub
pop
pop
fiaddl
fs
add
cmp
popa
dec
pop
xchg
xchg
hlt
jecxz
xchg
add
lret
dec
iret
mov
push
jo
movb
push
stos
mov
pop
adc
test
pop
repz
xor
sbb
pushf
pop
lret
shrl
fistl
movsl
std
jne
sbb
cmp
mov
pop
outsl
add
lret
sub
mov
xchg
rorl
rorb
and
clc
xchg
ljmp
xchg
loope
aad
dec
pop
mov
ljmp
imul
pop
xor
into
dec
fdiv
cmpsb
pop
mov
loop
push
into
aad
lea
imul
pop
jmp
xor
add
movsl
nop
repnz
lock
shld
daa
mov
mov
arpl
push
ja
lahf
stc
push
std
xor
pushf
add
nop
dec
rcl
adc
cmc
lock
incb
add
ds
cmp
inc
push
xchg
fistpll
push
sahf
push
or
decl
sahf
pop
lods
fildll
popa
inc
or
xchg
ret
cmp
int
lret
enter
pop
movsb
maskmovq
idivl
add
js
in
mov
add
mov
aad
mov
add
faddl
lods
mov
jecxz
pushf
push
pop
sbb
push
imul
mov
dec
pushf
mov
repz
add
cmp
lret
loop
movsb
std
out
cmp
xlat
out
and
sbbb
mov
repnz
cmpsb
insb
dec
mov
cmpsl
bound
leave
ss
es
mov
or
jnp
fs
movb
aas
mov
sub
pop
cli
mov
xchg
int3
xor
mov
pop
fcomp
cs
lret
loop
out
in
mov
add
stc
mov
mov
aas
popf
stos
fwait
sbb
fildll
inc
mov
in
loopne
inc
aaa
xchg
jns
popa
ror
jns
hlt
xchg
cmpsl
fstl
mov
xchg
fldl
loop
es
iret
xor
pop
pushl
mov
adc
orl
xchg
mov
divl
lods
cmp
cmc
jae
insl
in
sti
jle
push
insb
out
cli
push
ror
jnp
into
sbb
push
outsb
loopne
dec
mov
xor
mov
sbb
mov
loopne
lret
dec
ret
out
xor
dec
jmp
inc
fwait
cmc
andb
flds
in
stc
leave
outsl
or
cmp
ret
jno
loop
cltd
mov
test
test
xor
inc
nop
adc
movsb
lret
lret
movsl
jno
nop
sarb
outsb
ret
mov
sbb
mov
add
pop
inc
pop
cld
jb
mov
mov
jl
addr16
aad
mov
jl
cld
sub
cmp
nop
popl
xlat
dec
inc
or
das
aas
lret
jg
pushf
jmp
jmp
js
jno
cmp
mov
mov
das
aaa
pop
fst
test
pop
xor
push
pop
push
or
adc
stos
jge
pop
xchg
sub
cli
pop
lock
sbb
scas
push
jl
test
xlat
pop
mov
jmp
push
mov
xchg
ds
cli
push
addr16
or
fdivl
pop
and
imul
fsubl
inc
mov
inc
cwtl
pop
ret
repnz
test
and
lock
mov
in
mov
stc
dec
xchg
in
js
decl
popa
movsl
in
or
jl
mov
call
adc
rolb
sub
out
mov
pusha
mov
stos
and
pop
shlb
xlat
aaa
fnstenv
xchg
inc
or
push
mov
imul
or
ja
ret
pushf
mov
add
repnz
or
mov
mov
push
loopne
notb
mov
or
dec
pusha
fstpt
pop
testb
xor
sub
movsl
lcall
js
pop
pop
pop
sub
rol
imul
cmp
subl
rorb
faddp
jecxz
xchg
loopne
daa
pop
fcoml
iret
dec
xchg
adc
mov
inc
add
jne
cmp
ljmp
cltd
jmp
lcall
pop
adc
xor
adc
in
jl
mov
int3
mov
sbb
scas
mov
in
inc
aam
xor
push
and
popf
or
sub
es
mov
insb
sahf
adc
jo
pop
cmp
fcomip
add
movsb
scas
jge
mov
ljmp
fmuls
cwtl
lods
mov
stos
test
ret
ja
and
xchg
loop
dec
push
mov
xchg
fmuls
outsl
shlb
or
mov
adc
xor
xchg
pop
fidivs
jne
add
pop
add
pop
enter
int3
mov
mov
flds
jno
sarl
mov
test
inc
adc
mov
bound
push
add
or
lret
out
mov
cmp
pop
push
xchg
fs
pop
cs
jge
mov
subb
fsubrl
jne
pop
add
lahf
xchg
adc
call
cwtl
ror
add
jno
dec
ds
adc
pop
cmp
out
nop
adc
push
mov
test
es
jp
fcompl
lods
mov
sub
leave
pop
out
leave
dec
xor
mov
aam
testb
xchg
test
js
mull
out
or
mov
or
or
lods
mov
fists
jno
cltd
lods
xchg
sub
cmp
pusha
mov
add
sub
sbb
popf
out
bound
xchg
cmpsb
and
scas
jo
push
lods
fstpl
cmp
orb
outsl
dec
fmull
rorl
pop
jo
jns
ss
xchg
xchg
lods
mov
push
ret
push
push
idivl
jecxz
aaa
lret
pop
repnz
dec
cltd
sub
aad
sub
dec
lret
pop
cmpsb
jno
jno
sbb
clc
sbb
mov
push
outsl
cmc
jb
scas
fisubs
and
pop
imul
test
fadds
scas
scas
sbb
mov
pop
push
sub
lret
xchg
stos
adc
daa
mov
ss
adc
jge
mov
scas
ljmp
ret
in
call
int
xchg
aam
xchg
test
adc
sbb
fcompl
test
out
mov
mov
add
add
cmp
scas
arpl
loope
test
in
pop
pop
pop
aad
push
aaa
loope
iret
ja
xchg
push
in
sahf
sub
and
nop
ffree
fadds
popa
dec
push
cwtl
mul
adc
pop
ret
or
out
mov
jg
sub
in
xor
fldenv
test
stc
mov
xlat
cs
jno
fldt
push
push
fisubs
leave
fimull
shrl
sub
int3
movsb
data16
movsb
outsl
and
mov
out
ret
and
xchg
mov
pop
fs
ja
push
jg
cmp
xlat
aam
add
xchg
in
inc
test
imull
xchg
enter
mov
fwait
push
cli
leave
js
cmpsl
xor
test
stos
push
ret
fisttpl
insb
or
and
ja
dec
mov
mov
fwait
inc
incb
lods
pop
jns
repz
push
xchg
int
add
pop
xchg
sbb
loopne
jb
inc
jle
and
inc
add
lcall
add
sahf
ljmp
cmp
mov
stos
int
cmp
sbb
pop
cmp
lret
nop
les
adc
div
pop
sbb
mov
pusha
outsl
ret
sub
xchg
mov
aas
ror
fiaddl
cmp
mov
adcl
and
mov
loop
mov
pop
push
out
stos
test
ja
push
orb
and
and
push
fcomps
ljmp
dec
popf
fcomp
test
sub
aas
test
add
cmc
and
xchg
loope
pop
xchg
sarb
insl
cmp
imul
sbb
mov
dec
movd
mov
test
fs
daa
add
adc
cld
in
and
out
xlat
nop
divb
out
les
sbb
sarl
int
movsl
or
xchg
movsl
stos
notl
mov
push
test
loopne
push
inc
popa
xchg
inc
arpl
arpl
sub
out
mov
neg
dec
jge
aas
insl
push
xchg
cli
jae
test
fcmovbe
sti
mov
iret
out
sbb
fimuls
std
xchg
rcll
sbb
push
push
scas
jecxz
xor
insl
cld
aad
cld
dec
mov
mov
dec
add
cmp
aas
outsb
xchg
faddl
lret
sbb
outsb
pushf
mov
neg
leave
jge
jae
inc
push
cwtl
push
cmpsl
add
in
movsl
cwtl
sbb
negb
mov
popf
xchg
and
cwtl
sbb
pop
cmp
jle
fcompl
sub
mov
jae
mulb
cmp
cmc
test
pushl
xchg
andb
dec
call
xchg
cmp
fcoms
push
xor
stc
adc
call
pop
pop
icebp
movsb
pop
dec
cmp
mov
push
adc
std
or
ja
inc
xchg
cld
sub
xchg
push
mov
push
rclb
mov
push
rcl
sbb
pop
inc
add
cmpsl
push
sahf
xchg
cltd
imul
push
cmp
jl
pop
jle
rol
mov
adc
sbb
mov
mov
jecxz
mov
and
call
orl
fdivl
xchg
add
inc
sbb
outsl
dec
sub
enter
mov
daa
andl
addr16
mov
mov
fs
push
mov
mov
cmp
jne
aas
pop
jecxz
hlt
cmp
or
lcall
int
fdivs
cmp
leave
xchg
aaa
or
xor
mov
insl
mov
js
cmp
jge
jmp
or
lret
mov
jmp
jbe
hlt
fsubl
incb
lds
fldt
call
sbb
icebp
addr16
and
sbb
and
inc
fcmovne
pushf
stc
int3
js
sbb
inc
outsb
aam
pusha
fcompl
inc
sub
test
in
cmpb
jg
or
cmp
mov
xchg
sub
adc
or
neg
jge
xchg
fcmovne
lods
dec
fs
aad
mov
das
jl
jmp
xor
pop
stc
cmp
nop
mov
sub
imul
hlt
xchg
cmp
fistpl
and
pop
sbb
mov
fwait
scas
fistpll
xchg
mov
enterw
mov
xor
sar
scas
je
clc
cltd
insl
divl
orl
pop
adc
nop
cmp
icebp
xor
inc
cs
xchg
cmpsb
mov
sub
xchg
pop
mov
lods
jbe
nop
bound
sbb
mov
dec
out
xchg
lret
cli
add
push
stc
es
mov
and
or
cmpsl
into
mov
push
adc
add
pop
jmp
stos
fldt
pop
jbe
sti
and
lods
xchg
sahf
push
xor
out
dec
pop
mov
call
cld
fldcw
jmp
pushf
bound
or
sbb
fwait
sub
outsb
js
dec
mov
jl
shlb
xor
jbe
add
mov
or
pop
jle
cmp
dec
lds
cmovbe
clc
loopne
loop
mov
mov
cmp
mov
iret
call
call
das
jne
shlb
aad
push
pop
sub
mov
fistps
mov
repz
xchg
xchg
mov
hlt
xor
idiv
adc
sub
rcll
ja
xor
inc
adc
pop
mov
and
cmp
int
insb
hlt
lods
mov
out
push
gs
mov
cmp
sub
push
dec
ficoms
lds
rorl
cwtl
mov
arpl
divl
dec
push
sub
fnsave
jns
das
mov
aad
pop
pop
sub
test
jmp
aad
flds
xchg
and
dec
cltd
test
fistps
or
rorl
hlt
and
pop
push
or
and
iret
test
sahf
mov
fwait
jno
ret
and
enter
xlat
pop
xchg
loopne
ud2
data16
inc
mov
xor
ret
jmp
lcall
or
icebp
sets
inc
push
adc
in
out
call
cmpl
push
xchg
cs
test
lret
inc
xchg
xchg
jbe
mov
push
aam
testb
lret
lods
mov
mov
rorb
or
lods
lret
out
fs
inc
enter
mov
jmp
xlat
push
pusha
mov
adc
ds
pop
xchg
mov
lods
in
dec
ret
scas
enter
xchg
mov
jecxz
pop
std
adc
xchg
sub
fildll
lret
xchg
inc
in
lods
push
or
pop
push
mov
vcvttps2dq
mov
dec
fidivrs
xor
lcall
cltd
outsl
sub
cs
roll
sbb
push
add
addr16
out
sbb
mov
or
enter
jb
xchg
pop
mov
jge
test
js
shlb
lock
and
pushf
dec
jge
stos
aaa
call
insb
mov
in
push
movsb
adc
xchg
lret
out
cltd
sti
jno
jl
int
out
jl
and
call
call
mov
lods
mov
pushf
xchg
mov
cwtl
mov
mov
push
add
jmp
mov
xchg
jne
xchg
jp
scas
add
testl
imul
mov
xchg
and
lret
fsubrp
and
or
and
or
add
xor
out
jbe
pop
or
fisttps
mov
add
xchg
pop
or
cmp
ret
repnz
jne
scas
gs
mov
cmpsl
jle
js
sbb
cld
add
inc
mov
arpl
pop
clc
fwait
aaa
cmp
jo
mov
inc
pop
jg
sarb
inc
outsl
push
xchg
sbb
mov
test
icebp
adc
mov
dec
mov
leave
or
xchg
stos
xchg
fucom
dec
xchg
adc
js
sahf
inc
jecxz
jl
mov
enter
jb
cwtl
repz
mov
sub
bound
leave
je
or
xchg
rorl
pusha
mov
or
leave
dec
in
and
aam
mov
leave
sbb
mov
out
or
das
loop
push
fidivs
inc
xchg
icebp
adc
loop
scas
push
and
push
movsb
in
in
xchg
rorb
aas
pop
jg
mov
push
jecxz
nop
dec
and
int
addr16
push
data16
lods
mov
jl
iret
cmp
notl
dec
push
stos
pop
bswap
movsl
xchg
push
sub
test
dec
outsb
stc
scas
inc
out
jns
lret
push
jge
cmp
in
fmul
xchg
stc
inc
pop
inc
xor
pop
mov
imul
or
xchg
jge
jae
aam
xlat
mov
push
and
cs
jbe
aaa
sub
jp
sub
xor
add
lahf
pop
xchg
adc
cmp
xchg
add
pop
cmp
aas
jl
inc
mov
sub
cmp
mov
dec
out
cltd
cmp
dec
mov
clc
fstpt
mov
popa
stos
insl
sti
std
mov
pop
pop
mov
sub
loop
enter
lret
out
push
add
cmp
pop
jp
repz
push
loopne
out
xor
jmp
sarl
aas
push
test
mov
mov
jle
mov
call
adc
push
add
orl
push
mov
movsl
sub
mov
mov
ljmp
dec
adc
sbb
mov
inc
stc
insb
fnstsw
push
and
les
adc
xlat
inc
pusha
inc
idivl
fxch
xorb
adcl
fstpt
dec
lahf
or
mov
or
cwtl
sub
push
jnp
jmp
add
lea
mov
out
mov
cmp
stos
js
dec
pop
fwait
in
pusha
or
cltd
dec
inc
in
call
mov
mov
cmc
test
clc
sbb
push
addr16
mov
jne
sbb
pushf
pop
and
ss
xor
pop
cmp
ss
jmp
les
test
stos
fisubrs
sub
enter
and
pop
lahf
or
push
and
xor
hlt
adc
xchg
or
mov
push
popl
ja
push
jge
aad
ret
dec
scas
mov
dec
pop
push
mov
xor
mov
cmpsl
add
inc
lock
out
push
xor
cmp
mov
fwait
sbb
mov
or
lret
and
xchg
mov
aas
xor
js
cmp
repz
movsl
inc
add
ret
shl
cmp
ret
popa
cwtl
in
cwtl
jl
cli
dec
leave
in
iret
aas
cmp
pop
shlb
dec
cmp
int
xor
or
in
addr16
dec
jno
fld1
jle
push
mov
jne
repz
xchg
mov
div
sbb
cs
notl
ret
xchg
frstor
fwait
pop
inc
jbe
rcr
hlt
jl
xor
xchg
push
adc
push
mov
pop
roll
mov
loope
sub
push
jns
pop
push
push
je
xor
adcl
jno
fildll
fldl
xchg
pop
das
out
in
cmpsl
or
mov
mov
hlt
inc
sub
push
mov
xor
mov
xchg
mov
and
mov
mov
scas
inc
fwait
mov
fs
int
push
pop
fnstenv
and
les
or
cmc
arpl
dec
add
cmp
push
add
mov
movl
ljmp
incb
pop
test
out
and
ja
inc
cmp
fdivs
jo
push
jecxz
fcompl
dec
mov
or
fisttpl
arpl
fsts
mov
test
jmp
enter
test
push
jmp
mov
imul
pop
push
sbb
call
loopne
xorl
ljmp
xor
enter
jmp
dec
and
sub
loop
in
arpl
mov
cld
fcmovnb
add
sbb
or
jno
push
loopne
mov
scas
sub
push
xchg
adc
insl
test
jns
sbb
sub
mov
scas
mov
jl
dec
or
add
jns
ja
out
add
leave
movsl
push
adc
leave
jns
sub
push
add
shl
rolb
inc
add
imull
xlat
lods
cmp
push
sub
inc
jmp
std
mov
notl
xor
and
outsb
push
cmp
std
mov
mov
add
cmp
test
inc
aaa
sub
rcrb
dec
xchg
hlt
sarl
int
cmp
dec
sahf
filds
movsl
cmpsb
int3
mov
lcall
shrl
repnz
cmp
arpl
stc
into
nop
pop
jp
pop
push
mov
cld
dec
inc
pop
pop
mov
push
orl
lods
mov
jl
pop
jb
inc
sbb
xchg
ret
nop
push
mov
cmp
xchg
aas
push
cmpsb
dec
cmpsl
add
lret
enter
push
cltd
cmp
popa
enter
loop
push
gs
adc
inc
scas
imulb
insb
add
pop
dec
dec
test
fildll
jo
leave
or
and
cmp
frstor
gs
daa
or
inc
mov
ljmp
or
push
mov
je
and
pop
xor
rcll
imul
jge
fdiv
sti
fbld
lea
mov
xlat
cmp
sarl
jbe
int
pop
ss
lahf
xchg
push
pop
inc
fwait
jge
leave
dec
add
adc
jne
insb
cmpsl
jl
mov
arpl
mov
ret
mov
enter
add
mov
fdivl
sub
fisttpll
jge
jge
pop
sbb
push
ret
cltd
adc
adcb
js
jg
lea
popf
in
xchg
enter
in
xor
or
nop
call
cmc
inc
scas
andb
dec
add
jae
lret
lea
sbb
cltd
lods
arpl
sub
mov
push
mov
hlt
mov
hlt
sub
or
sti
lods
pop
sub
ficompl
mov
pushf
mov
add
sub
xor
es
xchg
push
sahf
or
push
loopne
idivl
lods
jmp
jmp
xor
mov
lds
addb
inc
add
ds
or
cmp
or
outsb
lock
pop
mov
xchg
jnp
xchg
sbb
lods
adc
out
jbe
pop
sbb
dec
and
mov
and
jno
rclb
push
mov
cmp
push
nop
test
cmpsb
ret
nop
js
sub
pusha
adcl
mov
push
or
add
pushf
ja
ljmp
push
lret
cmp
lock
xchg
mov
fwait
jns
mov
sub
xor
jo
stos
lds
stos
and
cmp
pop
dec
xor
or
ds
mov
sarl
jp
sahf
fstps
stos
fmull
dec
add
popa
in
sub
lea
into
fisubrs
sbb
xlat
mov
pop
fsubs
arpl
or
jnp
pop
call
popf
stos
mov
cmp
out
hlt
call
iret
or
dec
dec
into
dec
xor
sbb
test
fldt
insb
cs
jae
leave
mov
or
test
mov
pop
loop
jg
xchg
insb
data16
and
cmpsb
xchg
cltd
xor
inc
cld
ss
xor
loopne
nop
jae
pusha
outsl
add
mov
pop
pop
je
mov
les
jl
inc
push
pop
lahf
idiv
lcall
test
and
add
sub
push
xlat
push
cmp
xor
cli
or
or
movsb
inc
jg
pop
mov
div
add
jne
insb
testl
sbb
xor
push
adc
out
lock
xchg
lds
sbb
pop
mov
push
jg
mov
cmp
mov
into
pop
scas
nop
cltd
je
sub
scas
ss
movsb
leave
pusha
pop
fistps
lea
inc
fadd
fstpt
movsl
jl
cmpsl
or
jmp
push
sbb
inc
mov
or
pop
cltd
popa
cmp
movsb
push
rorl
call
fwait
jne
mov
or
clc
iret
pop
lahf
bound
ret
mov
pop
jnp
sub
xchg
lock
stos
ffree
mov
popa
xchg
fsubrs
xchg
arpl
call
les
imul
scas
push
into
popf
lock
ret
sub
fadds
push
mov
sub
xchg
fdivrl
sahf
inc
out
dec
xchg
repnz
add
iret
int3
adc
mov
xchg
mov
lds
mov
notb
add
mov
sbb
das
xchg
std
cmp
in
mov
and
cwtl
gs
push
jecxz
jecxz
dec
lcall
imull
sbb
bound
fldl
or
adc
pop
mov
add
push
push
push
lret
lret
jb
jmp
mov
dec
inc
push
jnp
or
aas
test
scas
cmp
shll
push
das
xor
pop
mov
cmp
repnz
or
out
cmp
and
notb
cmp
imul
imul
cld
pop
clc
into
jb
vpsubusw
into
mov
pop
mov
sub
das
or
imul
pop
sub
pop
sub
add
push
jno
lock
lods
and
adc
lahf
outsl
out
push
ljmp
jae
push
pop
sbb
inc
insb
faddp
sahf
lahf
mov
rcrb
pop
xor
jp
jge
xor
mov
or
gs
adc
lret
xchg
movsl
fwait
cmc
mov
fnstcw
out
clc
and
mov
push
mov
and
mov
imul
add
xor
lods
aas
cmp
es
adc
lcall
mov
fcoms
pop
mov
sbb
ds
dec
test
int3
lock
into
and
repnz
outsb
loop
rcrb
fisubrl
jno
mov
je
jno
rclb
movsl
sub
mov
insb
clc
outsb
fiadds
xor
cmpsl
int3
xor
add
sbb
add
sahf
cmp
adc
sbbb
add
rcrl
adc
inc
adc
pop
sub
xchg
mov
std
repz
cmc
cwtl
je
dec
mov
pop
sti
lea
and
iret
aam
jl
in
inc
jecxz
mov
cwtl
pop
inc
mov
add
call
push
cmovbe
shrb
test
jno
sub
cmp
sbb
clc
and
lods
insb
pushf
adc
out
or
stc
xchg
mov
popa
cmp
cltd
loope
adcb
inc
adc
pusha
lods
arpl
pop
lods
test
xorl
dec
dec
sub
xchg
cmp
mov
jp
xchg
dec
jbe
mov
mov
icebp
xchg
aad
mov
enter
dec
cmp
fstpl
push
xor
cmp
add
out
adc
jp
mov
lock
mov
xor
scas
and
pop
xor
lods
and
dec
movsb
inc
inc
int
clc
cs
pop
xor
test
push
lods
outsl
test
scas
push
or
mov
push
clc
cs
push
loop
mov
out
jmp
out
lret
sti
mov
mov
movsl
dec
repnz
sbb
stos
push
sbb
lods
mov
and
cmp
sbb
cli
and
lret
jno
and
jp
ljmp
adc
hlt
into
in
push
in
or
aad
or
fucomp
mov
pop
inc
test
out
pop
xor
or
xchg
je
mov
lcall
mov
jge
scas
inc
inc
jp
mov
cmovle
adc
and
bound
and
icebp
das
jg
inc
addr16
test
inc
dec
std
or
lcall
nop
imul
adc
test
xrelease
gs
cmp
mov
test
sub
out
push
std
call
adc
cld
dec
sub
mov
mov
lret
stos
jb
jge
dec
aaa
cmp
inc
or
stos
cltd
pop
push
out
sbb
test
fwait
mov
aam
jecxz
daa
imul
adc
leave
shrb
dec
int
push
mov
mov
or
into
jg
pop
pop
sub
and
mov
cwtl
mov
scas
fbld
adc
cmpsb
fildl
dec
mov
mov
sbb
sti
pop
jne
inc
sub
pop
jecxz
add
fdiv
or
ljmp
jg
in
lds
xor
xchg
cwtl
icebp
into
jnp
sarl
pop
loope
ret
sti
ret
packuswb
or
push
add
adc
icebp
loop
mov
push
sub
pushf
fbld
sub
xor
subl
daa
fsubs
cld
sub
int
imul
jne
sbb
jle
jg
aam
into
push
inc
mov
pushf
aad
push
cltd
fistps
sub
sub
sub
sub
mov
icebp
add
cmp
clc
jo
inc
xchg
shrl
sbb
int3
inc
cli
and
cltd
pop
and
js
in
jge
and
dec
dec
test
xchg
sbb
and
adc
mov
xchg
fcomi
push
jmp
sub
jmp
ror
hlt
aaa
bound
les
dec
adc
and
loopne
aam
dec
bound
cmp
dec
lcall
mov
mov
jp
add
lcall
mov
dec
inc
es
cmpsl
mov
xor
xor
mov
xchg
and
aas
ds
into
gs
movsl
ljmp
dec
lea
insb
rorb
xchg
pushl
std
xor
xor
push
adc
scas
ret
jmp
mov
xor
in
xchg
in
stos
mov
and
mov
jnp
je
cmp
and
dec
cli
and
shlb
leave
cmpsb
and
mov
adc
pop
pop
mov
push
jecxz
clc
shr
test
mov
stc
dec
pusha
sbb
in
ret
mov
fwait
daa
iretw
mov
pop
cwtl
push
push
sahf
sbb
int
jmp
pop
lret
dec
mov
add
lods
fs
int3
mov
jmp
lahf
dec
jmp
icebp
sbb
mov
pop
xchg
sub
jne
outsl
out
in
jne
push
inc
lahf
arpl
sub
imul
ret
test
test
daa
mov
ss
adc
xor
cld
push
or
shrb
iret
push
out
mov
adc
cmp
dec
sbb
insb
imul
data16
inc
jmp
mov
jp
fwait
mov
mov
add
xchg
or
loopne
icebp
popa
or
and
pop
jl
nop
mov
test
ret
mov
fisubl
mov
mov
xorb
mov
shll
inc
cld
fisttpll
lahf
jns
push
pop
mov
push
or
pop
data16
and
lods
xor
into
cmp
imul
cmp
adc
mov
fadd
out
mov
jge
dec
xor
clc
sarl
out
lods
mov
cmpsl
aaa
inc
stos
xorb
sbb
pusha
loopne
data16
mov
fdivrl
dec
sub
inc
push
lret
mov
and
mov
aam
cmp
data16
pusha
in
sub
out
add
arpl
scas
push
idivb
popf
imul
pushf
hlt
loope
daa
test
out
sti
ret
loop
adc
lea
xchg
pop
xor
mov
push
pop
push
or
mov
push
push
outsb
sarb
outsb
mov
push
adc
mov
mov
sbb
pop
xchg
xor
sti
jo
add
test
adc
cwtl
inc
pop
scas
rorl
dec
int3
shlb
rorb
clc
insl
clc
pop
repz
dec
in
in
sub
leave
dec
and
push
fadd
mov
enter
xchg
mov
push
pop
mov
int
sub
jb
gs
or
loopne
in
xor
push
bound
add
mov
sbb
jmp
push
aas
popl
cmc
sbb
add
or
adc
cmpsb
pop
jmp
ljmp
out
lock
pop
mov
shrl
rep
xchg
sbbl
or
imul
inc
cmp
mov
dec
in
inc
aad
pop
adc
jbe
mov
cmp
inc
inc
adc
sbb
es
call
cld
add
jg
rcrl
cmp
push
mov
xorb
push
cmp
mov
inc
add
mov
push
inc
or
test
xchg
mov
sbb
cmpsb
popf
cmc
xor
cmp
jmp
and
gs
les
sbb
jecxz
jl
scas
pop
cltd
scas
inc
sbb
cmpsb
bound
imul
cmpsb
push
rorl
mov
sub
sti
add
fildl
jne
inc
xor
xchg
scas
adc
ja
push
stos
movsb
cmp
mul
xor
ja
test
mov
iret
mov
push
xor
es
dec
in
repz
mov
pslld
push
xlat
dec
outsb
adc
mov
inc
sub
inc
dec
xorl
push
sbb
ficoml
add
shlb
cmp
sbb
and
cld
jg
stos
adc
loop
jo
iret
nop
js
pop
mov
inc
cmp
leave
mov
dec
sti
mov
lods
icebp
adc
loopne
cltd
xchg
dec
stc
adc
pop
js
xchg
ja
fisubs
jmp
mov
inc
and
push
pop
sub
jno
inc
cmpsb
sub
out
xor
dec
nop
adc
cmp
jecxz
sarl
in
xor
test
inc
test
data16
out
popf
xchg
xorb
out
cmp
loop
add
nop
repz
cmc
jnp
jge
adc
inc
dec
dec
mov
xchg
push
xchg
inc
sub
sub
mov
jb
dec
pop
sub
xchg
js
and
in
fs
addr16
sahf
scas
aad
sub
jbe
xchg
sub
add
fisubrs
std
loope
lret
pop
cmp
in
sarl
or
jnp
negb
into
mov
jle
cmp
fs
xchg
sahf
repz
add
inc
add
mov
out
insb
jg
stos
dec
hlt
push
das
mov
mov
ror
push
insb
cmp
sbb
and
mov
filds
pushf
icebp
movsl
inc
mov
or
stos
sbb
mulb
shr
jp
pop
dec
dec
into
lock
scas
cmc
mov
std
loope
movsl
or
adc
sub
xchg
das
mov
mov
fwait
sbb
into
xor
pop
aad
icebp
jns
movsb
push
mov
bnd
cltd
iret
mov
aam
and
sbb
call
pop
aas
ds
gs
mov
dec
mov
nop
xchg
pop
inc
and
imul
adcl
int
jbe
push
jge
out
jmp
mov
adc
pop
dec
bound
js
and
movsb
mov
imul
fwait
push
or
outsl
xchg
sub
sahf
mov
jg
adc
scas
mov
inc
pop
outsb
movb
lret
add
mov
sbb
adc
dec
cmp
mov
or
jae
iret
ds
ja
outsb
adc
sbb
les
jb
lahf
mov
loop
or
cld
repz
adc
ds
push
in
mov
jecxz
clc
mov
cmp
dec
ds
sbb
into
inc
popa
repnz
jmp
and
nop
xchg
mov
test
int3
ds
mov
pop
jb
cli
cmp
mov
ficoms
push
imul
scas
sbb
cmc
in
mov
push
repnz
jmp
sub
adc
jle
xor
pop
or
pop
test
adc
cld
mov
dec
mov
pop
jnp
mov
dec
inc
mov
dec
sbb
add
repz
xor
aam
cwtl
jle
lods
xor
jo
lods
test
cli
dec
jmp
inc
in
pop
adc
lret
inc
cli
imul
imul
ljmp
mov
out
fsubrs
adc
movsl
call
mov
in
xchg
mov
stos
xor
in
inc
divb
in
fmulp
mov
jmp
mov
fwait
pop
in
cmp
inc
pop
adc
mov
jb
fstl
inc
mov
cmp
repz
scas
test
adc
ds
inc
enter
pop
push
cmc
inc
lcall
shrb
push
mov
or
mov
push
sar
mov
inc
or
mov
sbb
push
subb
inc
movl
out
xor
dec
adc
cwtl
stos
mov
lret
jmp
ss
mov
sub
out
jbe
sbb
stos
lret
jae
pop
pop
or
mov
loope
into
jle
daa
fs
jbe
dec
test
xchg
hlt
ficompl
push
or
shll
xor
imul
jg
sub
dec
gs
cmp
cmp
push
sub
fstp
fistpl
and
mov
sub
in
pop
jae
cmp
mov
xchg
and
xor
or
insl
hlt
and
mov
aam
mov
mov
rorb
or
inc
mov
loope
xlat
insl
and
divl
add
mov
dec
pop
sahf
mov
sti
out
loopne
jp
leave
std
jno
mov
or
jmp
aas
enter
push
pop
xor
fisttpll
mov
mov
ljmp
mov
cmp
mov
jge
movl
fmuls
scas
cmp
adc
test
fisubrl
inc
cmp
cmpl
cli
aaa
test
xor
or
cld
cltd
fld
cltd
cmp
xchg
repz
fdivs
dec
popf
popf
jecxz
push
outsb
mov
xchg
and
fs
stos
mov
sub
xor
xchg
fsubrs
mov
stc
xor
push
imul
data16
pop
clc
aaa
xchg
pop
or
or
addr16
push
scas
stos
inc
push
mov
jne
shrb
or
ljmp
and
adc
les
mov
jmp
pop
idiv
inc
sbb
push
dec
inc
and
inc
pop
push
in
sbb
push
add
lcall
shlb
into
fstps
adc
mov
and
pop
lods
faddl
inc
in
fimull
lods
dec
loopne
or
mov
mov
pop
dec
in
push
or
add
or
xchg
sarl
push
pop
cmp
mov
cmpl
sbb
dec
xor
xchg
gs
push
sbb
loope
bound
pop
movsl
adc
mov
push
sub
shlb
jbe,pn
xchg
cli
fldcw
xorl
add
cmpl
mov
aam
jnp
xor
shll
inc
xor
mov
xor
sub
aas
nop
cmp
sti
xlat
vorps
fs
jb
adc
aas
pushf
sbb
push
xor
and
push
mov
cmpsb
cmp
sbbl
rclb
push
mov
addl
jbe
loope
xor
cmp
and
add
aas
fs
je
pop
sar
cmp
and
mov
push
test
mov
jno
dec
push
cli
mov
popa
out
ret
leave
popf
sbb
or
xchg
scas
pop
and
fwait
aas
aad
push
dec
gs
negb
and
cmp
jno
ds
sub
out
pop
jmp
nop
push
mov
lret
test
aaa
xchg
push
cmp
adc
dec
ljmp
pushf
push
or
fmull
dec
rcrl
jge
je
insl
mov
cwtl
cld
bound
mov
test
in
mov
xchg
xor
inc
sub
push
dec
ret
imul
stos
out
stos
xor
xlat
ret
arpl
lock
call
cmc
or
outsl
das
stos
popa
daa
ja
or
aam
jbe
sbb
popa
inc
imul
dec
ficoms
ret
xchg
in
cmp
fmuls
pop
call
popf
out
jnp
test
repz
jb
sub
pop
mov
rclb
mov
repnz
dec
in
pop
sbbl
popa
xor
xchg
in
cs
loope
aam
clc
inc
mov
and
ja
test
mov
xchg
dec
xchg
sbb
cmc
pusha
enter
inc
xchg
add
xchg
pop
adc
inc
imul
mov
haddps
pop
xchg
xor
sbb
outsb
dec
cmpxchg
addr16
bound
insb
cs
int3
lret
sbb
mov
inc
cmp
movsb
stos
inc
or
repz
push
pop
flds
pop
repz
adc
xchg
xchg
jbe
and
sub
mov
in
cmp
jmp
insl
mov
jp
inc
xchg
xchg
mov
and
mov
dec
sub
js
lods
iret
aas
or
mov
int3
lcall
push
jge
scas
lahf
shl
sub
fidivl
xchg
jae
mov
in
xchg
fildll
into
cmpsl
rcpps
xchg
addr16
mov
insb
inc
lret
cmp
rorl
add
mov
sti
lahf
adc
mov
rep
adc
push
push
jge
cmpsl
sub
adc
outsb
pop
xor
pop
cs
sti
fstl
add
stc
inc
mov
out
mov
mov
inc
cli
jns
cmp
pop
pop
hlt
pusha
mov
mov
data16
cmp
aam
test
adc
mov
mov
pop
xorb
inc
jle
ja
fmuls
int3
xchg
pop
lcall
sahf
xchg
pcmpeqd
add
scas
xchg
mov
mov
mov
pop
pop
rorb
add
mov
dec
rcll
sahf
add
leave
jp
fwait
mov
fnsave
jno,pt
cmpsl
push
adc
xor
xchg
mov
cmc
or
pop
mov
adc
push
idiv
mov
call
ret
lea
mov
stos
sarb
rol
cmpb
jae
jne
fimuls
push
shr
push
es
sbb
stos
xor
pop
or
pop
and
cmp
test
xchg
pmaxub
adc
xor
cmp
clc
clc
mov
aad
inc
jns
ljmp
jbe
xchg
in
cmp
pop
lret
imul
repnz
jns
das
sub
add
shl
lock
mov
mov
int3
push
lods
or
xchg
fwait
inc
cmp
test
push
test
xor
push
adc
sub
scas
push
adc
dec
mov
adcb
pop
in
das
bound
adcl
xchg
and
and
test
jmp
dec
fidivl
mov
out
in
and
xor
lret
movsl
aas
imul
push
scas
ljmp
sarb
bound
sub
sbbl
int3
push
ficoml
cmp
adc
sbb
lahf
inc
movl
push
sbb
jnp
cmp
lret
outsl
mov
out
cmpsb
outsl
fcmovne
jo
mov
int
push
push
in
dec
sbb
inc
fimull
jb
mov
stc
dec
add
aas
cltd
out
mov
mov
push
test
jnp
push
imul
lret
xchg
lret
int3
push
push
cmpsb
add
jmp
push
push
pop
jl
mov
std
mov
xorl
adc
fwait
pop
mov
add
lcall
nopl
test
push
push
cmp
adc
fdiv
lahf
sar
add
test
mov
mov
fdivr
aad
cmpsl
in
jp
mov
shrb
or
cwtl
adc
loope
sub
fldl2e
roll
mov
cwtl
dec
lock
xorl
cld
pusha
push
andl
mov
in
jno
xor
push
pop
invd
loope
arpl
stc
in
cmpb
faddl
mov
sbb
sub
xchg
je
sbb
mov
jb
sbb
addb
dec
into
cmp
repz
lock
ds
cmp
outsl
jg
mov
into
jns
sub
xchg
aaa
call
repnz
cmp
dec
mov
arpl
push
push
enter
js
jge
xor
dec
mov
loopne
pop
push
mov
dec
repz
adc
mov
cmpl
cmp
rorl
rolb
sbb
mov
lock
jns
cs
and
lret
sub
add
aaa
xchg
add
dec
pop
mov
repnz
pop
repz
adcb
test
pop
aam
movsb
stos
jae
jo
mov
dec
jmp
incl
sub
push
arpl
add
cmp
and
adc
fnstcw
aas
repnz
inc
sbb
cmp
inc
sti
loopne
cli
jp
icebp
orb
inc
and
mov
fbld
stc
lock
dec
out
xor
mov
imul
cmp
pop
push
bound
sub
clc
lret
dec
mov
push
clc
xchg
xchg
cmc
xchg
push
mov
dec
outsb
outsb
vpaddq
lret
push
je
movsl
out
ja
push
push
es
add
lods
sbb
push
out
inc
repnz
jl
inc
mov
sbb
push
pop
mov
jno
out
in
add
jo
or
mov
aam
push
cmp
sub
jle
fdivrs
es
cmp
jp
cmp
xor
lea
adc
jge
push
ret
stc
push
nop
mov
jo
jmp
or
and
mov
mov
subl
mov
or
or
sbb
sub
push
dec
add
pop
je
lock
pop
sti
in
fldcw
enter
dec
dec
xchg
xor
clc
fldl
jb
jo
je
int3
scas
xor
jl
ja
neg
adc
sub
sub
cli
pushf
jl
lods
fcomps
adc
pop
les
xor
mov
push
insb
xchg
imul
jmp
or
shl
push
pop
xchg
je
add
out
xlat
out
das
and
aas
fst
and
mov
in
xor
int
testl
data16
fldenv
add
test
nop
out
not
mov
mov
scas
cmp
pop
mov
jecxz
or
mov
pop
sbb
int
xchg
test
inc
sub
cmc
or
dec
cmp
jle
scas
mov
int3
popa
or
xor
addr16
sbb
aad
cmpsb
push
add
out
leave
push
fwait
sbb
dec
dec
sbb
in
imul
cmp
and
mov
sub
fldt
daa
cli
jnp
adc
inc
lods
in
out
and
mov
add
ret
or
loop
loope
jb
mov
jns
fists
cmp
mov
outsb
movsb
pop
aaa
mov
fsubp
fdivrs
daa
jnp
mov
stos
jge
sti
or
bound
fmul
inc
rorl
sbb
test
fsubrs
enter
popa
add
sub
pop
xchg
add
cltd
in
data16
into
popf
fwait
push
daa
mov
ljmp
push
repnz
and
xor
hlt
mov
jbe
lds
jb
xor
add
aam
inc
or
pop
mov
inc
xchg
loop
int3
cwtl
fisubs
pop
adcb
mov
lahf
mov
scas
dec
jecxz
in
popf
shrl
test
flds
and
xlat
xchg
or
xchg
lods
push
rcll
inc
or
lds
cltd
inc
fwait
fwait
imul
insb
or
cs
and
aam
ljmp
mov
add
pop
je
jno
xlat
xchg
or
mov
repz
fistpl
fidivrs
in
jnp
sub
cs
lret
add
fwait
ss
andl
jmp
pop
sub
pop
xchg
lods
cs
lods
inc
insl
call
popf
ja
or
fnstcw
mov
fwait
xchg
push
cmc
push
mov
sbb
in
insl
imul
shlb
mov
inc
mov
push
movsb
fnsave
imul
ret
dec
push
leave
dec
push
inc
jae
out
cmp
mov
ret
cli
and
sahf
call
jl
shll
pop
loop
orps
lods
insb
repz
push
dec
pop
jb
push
repnz
jp
inc
jecxz
add
push
xlat
rclb
addr16
faddl
add
adc
add
cmp
pushf
hlt
adc
in
inc
inc
cltd
xor
ss
in
shll
mov
lahf
cmp
dec
mov
and
adc
daa
pop
push
inc
lret
popa
mov
jge
jns
jae
or
fcomps
pop
filds
negb
lods
or
lods
stos
adc
push
repz
add
mov
in
mov
addl
out
jecxz
mov
jno
out
xchg
pop
imul
test
jae
cmpsl
rorb
ss
aas
aas
push
cmpsb
sbb
sbb
jne
cmp
jecxz
call
stos
push
cltd
testb
mov
call
daa
xor
add
or
outsb
movsl
clc
cmova
pop
loope
subl
mov
push
cwtl
jmp
movsl
cltd
sub
sahf
xor
mov
lret
sub
adcl
shlb
sbb
test
cmpsl
aas
mov
mov
cmp
enter
push
push
jmp
xlat
pop
in
das
cmp
nop
flds
sub
in
fst
pop
mov
jns
sbb
ds
loopne
fdivr
cmpsb
int
mov
cmc
mov
push
adc
inc
and
pop
rorb
inc
push
push
and
sbb
add
mov
cld
lock
lock
xchg
add
dec
shlb
cmpsl
stos
movsl
dec
pusha
decl
xor
mov
xchg
lods
and
insb
imull
les
and
inc
mov
sub
dec
adc
cmp
cwtl
sub
or
xchg
or
adc
fcoms
mov
iret
dec
sbb
fsubr
mov
fdivs
adc
dec
mov
fcoml
lods
movsb
mov
out
rcr
out
data16
xor
or
mov
cwtl
mov
stos
cmp
push
icebp
imul
shll
jno
fisttpll
jne
dec
mov
mov
loop
cmp
decl
xchg
jg
inc
movsl
repnz
push
out
cmp
outsl
cmp
add
fisttps
fnstenv
mov
inc
jl
cltd
leave
enter
test
lahf
adcl
inc
cmpsl
jne
pop
adc
and
mov
cmp
sub
or
cli
push
enter
mov
in
push
lock
mov
movsb
mov
rclb
mull
paddw
in
xor
inc
xor
js
insl
add
fsubrs
and
push
adc
imul
sub
mov
and
mov
bound
jne
lea
leave
mov
and
test
jmp
pop
shrl
cmpsb
enter
shlb
push
int3
sbb
ret
sub
lea
fldenv
leave
lds
mov
icebp
jnp
inc
out
hlt
sbb
mov
sub
repnz
js
lret
fwait
mov
arpl
push
xlat
pop
popa
test
dec
stos
lret
addr16
dec
sbb
dec
mov
loop
popf
mov
je
push
jbe
mov
or
lods
arpl
ret
mov
xlat
jle
in
inc
xlat
xchg
push
adc
je
gs
cltd
adc
push
out
ret
add
inc
xor
shlb
gs
insb
mov
fstps
and
frstor
sub
into
xor
into
popa
imul
push
popf
and
push
es
cmc
cmp
or
out
cwtl
cli
inc
push
idivb
cwtl
sbb
outsl
dec
mov
push
jp
mov
dec
add
xor
push
fiadds
sub
js
mov
mov
pop
addb
int
mov
sti
pop
test
in
int
adc
sub
cld
lock
mov
pushf
dec
scas
loope
mov
std
dec
inc
outsl
shl
iret
push
pop
mov
or
mov
lcall
imul
mov
lds
mov
out
daa
aam
push
and
in
pusha
or
sbb
sbb
xor
gs
jns
cmpsl
int3
push
jae
mov
idivl
ja
adc
sti
cmp
inc
mov
into
jmp
aas
mov
nop
lea
jg
jle
and
sub
out
fcmovbe
mov
sub
jecxz
xchg
xlat
fisttps
mov
orb
jg
jnp
dec
mov
dec
mov
iret
mov
shlb
jnp
stc
jo
xor
xchg
push
xchg
dec
pop
imul
mov
je
jge
and
cmp
mov
imul
ss
and
out
decb
and
sbbl
mov
shl
jge
std
jno
jne
sub
mov
pop
iret
ror
dec
scas
cmp
lods
call
js
in
xchg
loop
ret
xchg
es
mov
mov
xchg
xchg
in
add
add
jne
jo
cmpsl
dec
hlt
and
lock
xor
add
and
shrl
pushf
cld
ret
pop
mov
jecxz
inc
fs
add
xchg
push
decb
ror
dec
mov
and
jp
adc
xor
scas
sub
pop
ja
mov
push
out
das
call
ss
sub
in
jge
test
movsb
push
jb
loope
hlt
push
sbb
pop
mov
hlt
xchg
inc
dec
xchg
pop
test
mov
inc
xlat
mov
cmp
and
outsl
call
in
inc
in
and
cmpsl
sub
mov
xlat
mov
nop
enter
mov
jle
push
hlt
sub
out
mov
dec
out
rorb
xchg
movsb
pushf
mov
divb
ror
nop
test
cmpsl
mov
pop
lahf
mov
jg
enter
shlb
mov
std
mov
sub
ret
movsb
adc
fs
jbe
jbe
shll
jne
fisubl
icebp
jns
sbb
sbb
or
arpl
add
int
rcrl
test
std
cmp
adcb
pop
in
add
mov
stc
mov
and
jns
adc
shr
rorl
out
bound
popa
add
xchg
cwtl
std
push
hlt
cli
push
push
jae
ljmp
iret
jns
pop
sbb
push
push
lret
outsb
aam
lret
adc
and
out
les
sysexit
and
mov
add
gs
cmc
adc
dec
loopne
imul
insl
pop
mov
leave
aam
sbb
stos
mov
xchg
iret
add
push
les
inc
stc
sub
out
addr16
fldenv
cmpsb
jno
push
jbe
mov
sahf
mov
cmpsl
lock
mov
dec
nop
push
fldcw
add
jg
xchg
pusha
popf
pop
xor
or
shrb
jmp
addb
push
sbb
push
ret
pop
mov
and
push
in
fwait
dec
and
loope
sub
push
pop
int3
subl
inc
pop
xchg
push
fldl
sub
add
or
adc
mov
xor
jp
fldt
xchg
mov
in
arpl
andl
sbb
repnz
inc
lock
xchg
sbb
inc
int
mov
cld
xchg
jg
fstl
adc
pop
xlat
ret
lods
stos
rol
xchg
sarb
ret
lock
mov
mov
fstl
scas
insl
pop
adc
dec
mov
addr16
xchg
sub
pop
out
cmp
cmp
xor
and
jle
xor
ret
and
test
xchg
ja
sbb
js
cmp
test
ljmp
xor
mov
call
xor
in
mov
fwait
cmp
pop
add
dec
stos
nop
test
push
cwtl
push
pop
je
cli
push
dec
popf
lahf
stc
cmpsl
add
sbb
adc
movsl
xchg
fs
test
inc
loopne
mov
sub
jg
mov
sahf
out
fsts
pushf
pusha
mov
xchg
cmp
in
xchg
jnp
and
imul
je
aad
xchg
add
sub
jecxz
push
sbb
xchg
sbb
jle
ret
in
xadd
jns
stc
xor
mov
popa
jno
lret
jb
add
mov
push
dec
add
dec
jmp
xlat
mov
jns
test
mov
fistl
mov
and
inc
ffree
mov
cmp
xlat
leave
in
cmpsb
inc
sbb
mov
outsl
add
leave
sbb
mov
xchg
aam
call
mov
xor
sbb
notb
mov
js
and
jg
mov
mov
pop
cmpsb
pop
jmp
or
lds
lcall
and
add
push
icebp
aad
and
mov
mov
push
or
das
les
shl
fstpt
es
cli
jmp
leave
pop
mov
icebp
pop
xor
jo
inc
rol
lods
fdivrl
out
lcall
lcall
xlat
xor
jl
scas
loopne
xchg
iret
sbb
ror
inc
xor
shld
cmp
enter
sti
and
cmp
repz
and
enter
std
fisubrs
add
and
icebp
jno
mov
mov
xchg
adcl
rcrb
movsl
cmp
pop
add
xchg
mov
mov
cmpl
popa
sbbl
loopne
and
daa
pop
add
add
sbb
push
lock
clc
roll
dec
xchg
jmp
popa
ljmp
pop
or
mov
dec
subl
aaa
movsb
repnz
ret
outsl
xor
xchg
xor
mov
sbb
outsl
push
ret
fstpt
cmp
inc
scas
ret
jne
cwtl
add
cmp
and
jo
movsb
sbb
test
fiadds
cltd
push
stos
sub
insl
das
push
insl
or
xor
pop
jne
sbb
mov
mov
lods
mov
mov
and
cmp
inc
and
jo
ljmp
aaa
push
loop
mov
jno
add
shlb
jo
dec
test
popf
and
movb
jbe
and
push
std
mov
enter
out
sbb
out
mov
out
sbb
sub
fistl
add
test
js
inc
mov
out
mov
inc
or
mov
aam
jne
daa
sub
in
daa
pop
fisubl
inc
jge
pop
and
sbb
dec
push
hlt
cmp
cmp
pop
addb
xor
outsl
insb
dec
hlt
xchg
mov
sub
insb
jbe
xchg
sub
ja
pop
or
jle
and
or
jl
pop
shrb
bound
lock
test
mov
add
or
adc
incl
xor
mov
xchg
dec
xchg
out
mov
jecxz
mov
lahf
xor
aas
or
xchg
sub
jecxz
jp
mov
xlat
xchg
ror
mov
push
xor
mov
cwtl
cmp
inc
sahf
clc
pop
cmpsb
cmp
xor
into
test
mov
cmp
shll
cmp
rclb
imul
push
movsb
mov
lcall
loop,pn
out
mov
sub
dec
mov
xchg
push
mov
inc
inc
gs
gs
je
imull
sbb
mov
xor
int3
ds
out
enter
mov
sti
out
and
xor
fwait
push
inc
mov
clc
xchg
into
aam
outsb
dec
addr16
mov
lahf
cs
pop
lret
rorb
push
pop
into
mov
test
fwait
xor
jg
in
fiadds
out
pop
inc
jge
inc
test
call
mov
sbb
jmp
dec
adc
test
ret
xchg
dec
pop
rol
mov
push
cmpsl
sbb
call
inc
mov
jge
xchg
dec
inc
hlt
xor
insl
jge
out
xchg
mov
and
xchg
and
cs
ds
dec
mov
pop
cs
nop
movsb
iret
pusha
xor
ret
mov
or
pop
xchg
pop
fmull
mov
sub
fs
or
jbe
loop
jb
mov
out
adc
leave
bound
or
sub
push
lods
or
xor
pop
testb
or
cmp
mov
ja
pushf
imull
and
mov
mov
mov
lret
sbb
ja
xchg
jecxz
xchg
orl
in
pop
adc
out
add
adc
adc
add
mov
in
mov
shrd
mov
enter
js
mov
je
cs
pushf
bound
arpl
and
adc
loop
jns
or
shll
sahf
pusha
xchg
fnstsw
xchg
xchg
jnp
in
adcb
xor
mov
fisubrs
rcr
std
bound
adc
push
push
mov
jb
ds
stc
inc
testb
push
jbe
fldl
subl
xlat
xor
cmp
leave
not
jecxz
loope
mov
loopne
sub
mov
and
cmp
ja
insb
pushf
sub
shl
aam
or
sbb
stc
xchg
cli
or
cmp
stc
cmpsb
outsb
adc
sbb
repnz
iret
jl
arpl
add
cs
mov
pop
xchg
popa
jmp
mov
or
mov
cmp
mov
cltd
ss
adc
jno
adc
cmp
cltd
dec
popa
mov
mov
and
push
ret
sub
mov
mov
sbb
jp
mov
ljmp
ds
iret
pop
lret
dec
lahf
aas
or
sahf
shrb
and
push
popa
sbb
orl
inc
call
or
inc
push
iret
jno
or
inc
pop
push
aad
rcrb
in
nop
jmp
fcomi
inc
inc
movsl
int3
xor
sub
and
pop
sbb
insb
sbb
push
pop
in
popf
jg
test
sub
fs
sbb
sahf
mov
ds
pop
add
test
hlt
cmpsb
mov
popa
dec
outsl
fnstenv
arpl
les
mov
cltd
test
xor
out
xchg
clc
mov
idivl
mov
out
mov
push
int
mov
sbb
stos
jb
adc
js
outsl
repz
dec
ljmp
jb
mov
add
lret
sbb
ljmp
shufps
push
rcrb
bound
inc
add
bound
loop
stos
movsl
sub
popf
adc
push
cmp
dec
xlat
lret
dec
mov
icebp
lea
sbb
dec
lret
xor
add
adcb
xchg
ret
mov
sbb
outsb
sub
jmp
cmp
testl
sub
mov
test
bound
push
lods
mov
cltd
sbbb
sbb
sbb
sarl
dec
dec
xor
outsb
loope
leave
pushf
mov
lds
push
pusha
ds
stos
or
sub
ret
bound
dec
fisttpll
loope
add
je
out
daa
pop
jecxz,pt
aam
dec
ja
lods
sub
test
jle
xchg
pop
push
outsl
cmp
icebp
mov
jbe
outsl
xchg
dec
inc
jle
jle
test
fimuls
jg
in
lds
adcb
and
mov
jecxz
pop
cmp
enter
pop
adc
shll
pop
sbb
mov
mov
jbe
out
jmp
mov
push
xchg
pop
out
lret
adcl
and
mov
inc
jle
dec
push
outsb
fimull
xchg
cld
sub
in
movsb
bound
dec
sub
ret
in
jno
cld
add
inc
fbld
mov
or
jl
test
int
xchg
jg
or
ror
xchg
mov
ds
mov
xchg
mov
shrb
mov
mov
xchg
jnp
into
and
shrb
push
jmp
scas
adc
stos
insl
loopne
ret
cmp
movsb
scas
push
mov
std
mov
and
insb
push
push
movsl
pop
pushf
stos
arpl
jnp
loopne
ficompl
or
adc
mov
dec
jle
stos
inc
jo,pn
aaa
insb
mov
pop
mov
repnz
add
out
mov
dec
xor
shlb
lods
push
adc
push
call
sahf
std
sti
stos
ds
scas
es
or
cmp
dec
pop
cmc
sbb
push
pop
jo
in
ret
aad
pop
dec
sub
pop
leave
in
daa
xchg
jmp
mov
lcall
xchg
pop
xchg
out
sarb
mov
jecxz
pusha
repz
jge
dec
imul
pop
repnz
mov
leave
adc
incb
adc
xor
stos
push
sbb
inc
sub
loopne
stc
xchg
test
out
dec
adc
lods
das
cli
rorl
mov
mov
sub
loope
ret
stc
xchg
pop
add
adc
dec
mov
pop
mov
xchg
pop
sub
pop
in
xorl
push
add
fistps
jo
jae
cld
in
imul
cld
sti
enter
xor
sbb
stos
xor
inc
cmpsl
xchg
test
push
jae
fistps
and
test
lds
dec
repz
lods
call
dec
xchg
mov
movsl
stos
cmp
lods
lret
filds
fadds
jle
and
push
add
add
sbb
dec
test
into
fldcw
mov
pop
xor
mov
add
xor
fsts
inc
movsb
pop
iret
add
pop
lret
cltd
rorb
daa
shlb
lret
jne
and
add
aad
or
sub
leave
xchg
dec
xchg
inc
lret
pop
bound
test
fs
test
fmul
jecxz
jmp
orl
fimull
jge
pop
mov
xchg
fwait
push
test
cmp
and
xor
lods
dec
inc
pop
ss
mov
ss
fstp
sub
ds
scas
push
sub
push
nop
sbb
out
fsubs
adc
push
dec
jae
out
pop
jecxz
mov
push
in
sub
out
aaa
inc
push
ret
icebp
stos
stos
int3
mov
add
test
imul
sbb
sub
imul
adc
imul
inc
adc
lcall
jg
pushf
xor
or
pop
jecxz
outsb
mov
popf
enter
inc
rcrb
in
inc
or
test
adc
sbb
movsb
test
scas
pop
stos
movsl
push
dec
xchg
popf
in
fistl
jb
ret
mov
rcll
movsl
in
and
scas
adc
mov
fldcw
int
fcmovnu
pushf
add
lods
pop
cmp
jmp
jnp
std
xlat
movsl
push
xor
iret
mov
adc
pushf
xchg
inc
pushf
add
repz
sub
push
out
jo
or
jl
daa
mov
rcrl
cmp
fwait
imul
cld
fwait
mov
std
and
outsl
and
mov
xchg
addl
mov
loope
mov
mov
mov
pop
mov
outsb
cmp
shl
dec
fnstenv
cmp
lds
iret
push
pop
xchg
xor
inc
fisttpl
lods
add
adc
mov
mov
enter
stc
or
cmp
sub
loope
mov
arpl
or
cmpl
test
shll
jecxz
mov
xchg
insb
int
mov
adc
push
int3
test
imul
les
and
out
lcall
or
adc
rcll
or
push
jns
xchg
insb
loop
cmp
inc
push
mov
and
mov
divb
cmpb
mov
sub
push
and
cltd
lret
sub
xchg
aad
sub
arpl
outsl
pop
dec
jne
dec
ja
ds
sahf
cmp
sub
mov
addr16
shl
cmp
xchg
popf
jne
fbstp
and
lods
push
int3
push
pop
lret
mov
dec
repz
cmp
mov
sbb
insb
lods
repnz
ds
adc
jo
or
jl
pop
xchg
das
pop
inc
lret
jae
or
push
in
aam
pop
dec
push
fs
jmp
xor
repz
inc
adc
cmp
or
fbstp
mov
lcall
pop
lods
cbtw
sub
cli
xor
xor
pop
xor
push
and
inc
imul
inc
sti
push
icebp
push
bound
int3
push
insb
xor
xchg
cltd
into
cmp
test
mov
aas
sarb
pushf
dec
push
push
pusha
sub
ss
iret
sbb
movl
sbb
rcl
and
aaa
in
je
mov
add
stos
popf
sarb
jae
insl
xor
stos
lcall
jbe
mov
jo
mov
mov
stc
scas
lods
xchg
pop
std
or
std
lods
push
in
fldt
cwtl
cmp
test
jp
push
xchg
mov
lea
daa
inc
mov
das
inc
leave
mov
cmp
jne
jp
mov
xchg
xor
mov
stos
push
incb
inc
hlt
pop
or
shlb
insl
jae
adc
cmp
lods
nop
mov
mov
movsl
pop
daa
or
pop
xlat
xor
inc
decb
lds
push
cs
lea
pop
dec
jmp
jns
push
into
xchg
stos
mov
sub
mov
mov
gs
movsl
push
lret
xchg
das
cmp
mov
xchg
ret
enter
lods
incl
push
movsl
xlat
test
sahf
test
iret
mov
mov
in
push
xchg
gs
lret
cld
pop
dec
rcr
sbbb
js
in
mov
insl
jbe
cmp
pushf
and
jbe
inc
sbb
mov
cltd
push
cmp
jno
xor
data16
ljmp
xor
cmp
push
in
sti
in
and
or
pop
adc
jg
cmp
or
popa
adc
sbb
loop
xor
or
nop
ljmp
test
push
bnd
add
repz
fildl
decl
mov
ljmp
jo
mov
xor
sbb
and
aas
into
sbbb
sti
cld
cmp
shlb
out
sarl
jns
push
ljmp
jecxz
fdivr
sub
fadd
scas
mov
xchg
aaa
adc
sbb
bnd
pop
push
stc
inc
mov
sbbl
sahf
adc
stc
mov
and
push
mov
insb
sbb
lret
mov
shrl
inc
je
mov
iret
adc
iret
inc
jle
sub
sub
mov
xchg
div
inc
js
push
pop
dec
xchg
jne
mov
imul
push
xchg
pop
test
push
shlb
mov
jne
xor
test
or
sbb
mov
ljmp
aam
xor
dec
and
int
in
dec
icebp
xor
mov
dec
mov
arpl
outsb
mov
jbe
xchg
punpcklwd
test
adc
ds
add
mov
cmp
es
jle
mov
ficoml
lret
push
mov
push
out
mov
xchg
test
imul
push
aad
jl
fcoml
inc
call
test
jnp
add
mov
xor
subb
push
jbe
filds
fisttps
mov
inc
adc
mov
jnp
push
scas
fcomip
test
push
mov
cmp
mov
leave
dec
call
pop
fwait
repnz
cmpsb
lods
aad
add
and
xor
rcr
push
cwtl
repz
dec
arpl
clc
lcall
push
lret
fnstenv
aam
mov
push
and
ja
pop
bound
mov
int3
push
jno
fldcw
lods
in
outsb
xchg
outsl
sub
roll
adc
fldt
pusha
fincstp
cmpsl
sarb
imul
sub
lea
inc
sbb
lahf
xor
not
icebp
jb
insb
mov
sbb
and
adc
jo
jno
adc
mov
xchg
lahf
in
outsl
jg
das
jp
push
fs
movb
into
sbb
daa
pop
adcb
jmp
je
into
mov
ja
das
sbb
mov
mov
scas
jns
cmpsl
fisubs
and
adc
cmpsb
insl
pop
push
arpl
aas
call
xchg
and
rcl
scas
ja
push
ret
push
sub
jne
sub
xor
xlat
mov
shl
mov
jae
xchg
push
shrb
sti
in
cli
in
bound
gs
cltd
movsl
mov
push
mov
mov
mov
sbb
fcomi
ss
cmp
sbb
jmp
dec
testb
movsl
pushf
adc
xchg
jne
inc
lret
cmp
pop
add
repz
mov
xchg
outsl
movsl
pop
push
loope
int
lret
xlat
push
scas
jg
push
mov
or
xor
fiadds
movzwl
cmp
xchg
pop
adcb
lods
out
scas
aam
movsl
push
in
rcrb
fnstenv
repnz
fstl
ljmp
mov
xchg
add
inc
pop
and
ljmp
cmp
pop
xchg
mov
xlat
icebp
in
fmuls
into
jns
dec
push
and
dec
out
mov
adc
dec
cmpsb
leave
into
push
jnp
cmc
pop
push
jl
test
scas
addl
push
hlt
es
xchg
xchg
testl
push
fsubrl
cli
repz
loope
mov
les
nop
pop
imul
xor
loopne
mov
sub
cli
dec
leave
ret
lock
mov
adc
adc
mov
jo
hlt
in
inc
mov
arpl
shl
cmp
sub
test
add
sub
sti
and
ljmp
jnp
cwtl
fsts
and
ret
je
stos
cmpsl
arpl
dec
push
mov
jae
sub
xchg
xor
mov
sub
adc
xchg
movb
fs
or
sbb
xchg
cmc
inc
xchg
repnz
jnp
aad
add
pop
adc
iret
push
mov
loop
outsb
lods
popf
loope
scas
mov
xor
test
dec
xchg
lahf
mov
xchg
mov
sub
push
int
fists
fcomps
jo
push
mov
jle
or
addr16
lds
sbbb
rolb
fmul
mov
cmp
aas
sub
mov
xor
in
add
ret
dec
scas
imul
pop
bound
mov
sub
mov
nop
inc
movsb
push
add
or
adc
notb
push
mov
arpl
inc
out
and
xchg
dec
out
push
xor
sbb
mov
sub
aad
xor
inc
out
aas
xsaves
cmp
xchg
cwtl
lret
inc
rolb
jle
mov
pop
sahf
std
fisttpl
fcoml
fwait
xchg
cmp
out
cmp
std
icebp
nop
stc
xchg
cmp
movsb
call
jno
fbld
test
or
ror
ret
popa
adc
gs
stos
lods
daa
sub
gs
jecxz
or
gs
sti
cmp
push
test
xchg
repnz
mov
lahf
movsl
jo
cmp
push
out
push
xor
sbb
push
jo
add
notb
cmp
jp
push
mov
mov
cltd
mov
sbb
cmc
mov
sbb
push
ja
xchg
dec
mov
and
push
mov
les
repnz
lods
inc
outsb
int
ds
lret
mov
aad
insl
cmp
lahf
cld
mov
mov
xor
sub
into
xor
negb
push
push
test
dec
add
rorl
mov
jp
jge
push
cmpl
pop
mov
jne
and
cs
imul
push
enter
les
inc
cli
or
adc
adc
mov
xor
pop
test
pop
and
loope
dec
mov
imul
xchg
push
gs
and
lods
jl
data16
mov
daa
push
xor
inc
leave
mov
push
int3
dec
bound
sub
lods
mov
cmc
jg
rcll
outsb
and
and
stc
pop
inc
dec
lock
xchg
enter
or
loop
stc
divb
sbb
mov
lret
daa
repnz
cs
mov
cmc
pop
aaa
aaa
sub
adc
test
jl
dec
testb
mov
or
sbb
call
data16
and
pop
mov
mov
jnp
or
mov
nop
cmpsl
jecxz
add
mov
add
icebp
repz
jb
mov
pop
xchg
add
rcr
push
dec
out
stos
push
rcrb
icebp
addb
scas
subl
push
push
pusha
pop
sub
movsl
jge
aas
add
pop
sbb
xchg
jns
jmp
jnp
mov
pop
js
mov
jbe
sub
les
adc
test
dec
imul
cltd
jl
jne
mov
lea
add
xchg
imul
inc
inc
call
nop
popa
aam
xlat
mov
shl
mov
mov
pop
pop
xchg
inc
sub
sub
cmc
addl
std
sahf
testb
push
pop
shrl
in
and
aad
es
pop
sub
jge
dec
imul
lods
iret
xchg
mov
xor
cmp
stc
lret
repnz
jno
xchg
pop
xorl
add
pop
mov
out
or
dec
xor
add
or
push
imul
call
icebp
sub
ds
xor
sub
pop
aaa
repnz
addr16
fstpl
cmpsb
or
jg
ds
mov
dec
inc
jne
lcall
fisubs
inc
outsb
jp
push
mov
in
in
mov
and
mov
mov
into
inc
out
dec
call
sbb
mov
popa
ds
loopne
dec
setnp
mov
frstor
scas
adc
lds
mov
imul
adc
jmp
lahf
dec
sbb
jns
fcmovnbe
xor
cmpsl
jg
cli
cltd
jge
sbbl
push
rcll
in
and
int3
inc
sbb
push
or
test
sbb
scas
sbb
mov
jge
adc
test
or
mov
fs
dec
and
push
dec
test
shll
mov
sahf
ljmp
push
cs
ret
mov
in
lret
sbb
subl
push
inc
xlat
and
dec
push
mov
addb
mov
insb
cmp
test
repnz
mov
roll
aad
cs
jns
add
cmp
cmp
aam
fcomp
jmp
cmp
in
mov
mov
test
sbb
test
pop
xchg
sti
and
push
push
test
xchg
shll
add
cmc
add
or
jmp
lret
pop
repnz
int
push
jge
ja
pop
push
es
fucomip
jp
testb
mov
or
push
ja
sbb
mov
cmp
or
and
das
add
add
sub
or
ret
out
xor
repnz
cld
test
js
jo
and
scas
xchg
cmpsl
adc
fcom
dec
arpl
cwtl
cmpsl
out
dec
imulb
xchg
mov
jmp
clc
cwtl
push
cmc
out
sub
cli
insl
inc
mov
shll
mov
mov
push
pop
loope
xchg
ja
cmpsl
aaa
sbb
out
push
fwait
test
in
cld
cltd
into
dec
sub
pop
push
pop
leave
je
mov
inc
js
jp
mov
jecxz
fldcw
std
mov
shl
ljmp
testl
aas
adc
mov
in
paddusb
inc
mov
jo
sbb
mov
arpl
xchg
int
pop
int3
xor
lock
push
push
test
jle
rorb
int3
push
shl
test
js
out
js
lods
adc
cmp
mov
out
loopne
shll
add
cmp
and
sub
test
icebp
pop
jge
icebp
mov
xor
fnstcw
in
arpl
xchg
lods
jmp
cmp
or
outsl
jl
mov
pop
shll
mov
and
push
les
sbb
adc
mov
mov
xlat
push
or
pop
cmp
pop
shll
int
mov
out
iret
jle
fs
jle
jns
fdivs
inc
in
pop
mov
cltd
mov
cmc
sub
jle
pop
push
pop
dec
fidivs
mov
lret
push
ret
loope
mov
mov
aas
xchg
xchg
fidivs
jbe
repz
js
iret
adc
popa
stos
mov
movsb
push
or
je
push
fs
repz
sub
fmul
aad
imul
mov
lods
out
lret
in
fs
add
gs
cmp
rcrl
xor
or
out
mov
out
ljmp
push
je
sti
pop
out
int
ss
inc
daa
int3
push
jb
shll
dec
in
shlb
js
cmp
mov
scas
out
enter
insb
lods
dec
mov
jge
or
mov
dec
lret
rclb
shrl
push
or
cld
and
fidivrl
cmpsl
ja
arpl
sbb
mov
loopne
orl
and
int
mov
test
imul
xor
push
sbb
in
pop
sbb
sahf
fcompl
popa
jge
lods
arpl
lret
jl
mov
aam
imul
data16
sbb
insl
jae
sub
jmp
push
je
xchg
mov
pop
xchg
xchg
and
mov
add
daa
pushf
inc
xchg
in
mov
lock
dec
xchg
inc
push
mov
mov
pop
or
push
les
test
lret
adc
out
push
aad
sbb
mov
inc
inc
pop
cmp
aam
pop
out
testl
out
mov
mov
into
or
ja
cmpsl
test
int
sbb
adc
xchg
in
in
and
notl
inc
loopne
push
pop
scas
push
dec
rcrl
pop
mov
aaa
sarb
lahf
push
inc
stc
jno
or
iret
mov
push
lret
mov
adc
iret
pop
jg
lcall
lods
and
adc
inc
mov
js
inc
add
jl
int
rcrb
fdivr
enter
movhps
rolb
inc
adc
dec
std
ljmp
push
out
push
lret
cmp
int3
push
add
or
sub
sbb
dec
jo
fiadds
or
pop
adc
fs
int
xchg
dec
repnz
les
call
outsb
and
sbb
je
cmp
xchg
leave
mov
out
jo
iret
push
out
out
movsl
xchg
xchg
cmc
roll
pop
mov
iret
loope
mov
incb
push
sar
xor
bound
test
fsts
adc
arpl
daa
inc
stos
adc
fbld
loop
lea
enter
dec
sub
sub
test
push
jmp
mov
push
das
mov
movsl
push
dec
or
out
adc
stc
sub
imul
cltd
testl
or
pop
sub
inc
negl
movsb
js
adc
sarb
cltd
enter
lret
jmp
push
ds
mov
inc
repz
mov
lds
jo
mov
pop
or
pop
mov
and
data16
aas
xorl
roll
mov
mov
add
and
xlat
inc
xchg
fbld
repnz
mov
inc
inc
bound
jg
xor
lds
shrb
dec
dec
push
mov
or
sub
jp
shlb
jae
mov
push
cmp
mov
cmpl
jle
pusha
cs
or
imul
loope
movsb
push
ss
cmp
dec
dec
sahf
mov
ljmp
or
mov
aad
jg
cmp
pop
dec
mov
adc
cmp
mov
adc
ror
dec
fcoms
movb
lods
jnp
adc
mov
sbb
add
mov
mov
push
xor
push
icebp
cmp
inc
adc
jne
inc
pusha
cs
add
xchg
lcall
aad
sub
add
jl
ljmp
pop
mov
adc
lods
repz
jns
xchg
and
fbstp
cmp
xchg
dec
repz
inc
lock
adc
push
jmp
hlt
negl
sbb
stos
xor
inc
lock
mov
jle
jmp
test
lods
idivb
fmull
add
enter
lods
scas
add
iret
dec
fs
sbb
push
rcll
sbb
test
leave
pop
aad
decl
lock
loope
and
aas
popa
je
xchg
push
dec
clc
inc
adc
sub
in
flds
sarb
and
pop
sub
hlt
xchg
mov
addr16
in
sbb
sbb
fwait
mov
mull
sub
sub
pop
in
push
rcrl
push
inc
out
inc
imul
out
jae
test
mov
test
mov
dec
js
adc
lds
shl
mov
sub
clc
fucomip
insb
jnp
std
adc
fsubr
rol
add
repz
push
pop
je
sbb
fwait
into
mov
out
sub
pop
test
dec
gs
add
pop
std
mov
jo
insl
fnstcw
test
push
notb
icebp
ja
test
lds
out
inc
cmc
jno
adc
cmpsb
js
int
and
neg
xchg
sub
jo
pop
mov
xlat
addr16
fisttps
jo
xchg
push
mov
test
gs
pop
outsl
cmp
jg
mov
push
xchg
sub
jae
test
iret
dec
lcall
xchg
jns
movb
adc
add
xchg
inc
mov
movsb
ss
mov
daa
add
pop
data16
push
imul
test
mov
mov
cmp
pop
jg
cmpsl
aaa
call
ret
cmpsb
adc
scas
sbb
xorl
adcb
shrl
stos
fnsave
adc
invd
pop
lcall
int3
jns
sub
fidivs
mov
aaa
xchg
jne
and
fwait
mov
roll
cmp
jecxz
mov
fstpl
mov
mov
cmp
fidivrl
stc
jle
fs
das
clc
xchg
ret
pop
push
pop
ret
adcb
insb
add
ljmp
and
loop
fists
ret
arpl
loop
push
push
mov
xorl
idivb
mov
adc
cmc
mov
and
fmul
inc
mov
xor
jge
rcr
pop
mov
inc
leave
mov
adc
or
cmpl
ffreep
cmpsl
in
out
xchg
loopne
loope
rorl
clc
mov
xor
test
rclb
mov
and
scas
jo
xor
xor
and
in
and
je
stos
dec
data16
xor
std
int
addl
xchg
inc
jg
scas
mov
push
xorl
xchg
adc
pop
clc
and
lods
push
pop
das
sub
pop
bound
icebp
std
inc
in
jbe
arpl
pop
in
mov
test
mov
mov
mov
popa
popf
rclb
leave
fisubrs
leave
adc
dec
js
aam
cs
movsl
sbb
xor
and
and
andl
scas
test
adc
pop
push
xor
out
dec
adc
jecxz
test
rclb
int3
gs
jl
adc
xchg
fistps
sub
stos
mov
sbb
mov
xchg
adc
js
repz
popf
ss
lret
jo
in
or
orb
sbb
mov
fiadds
fabs
int3
mov
adc
stos
icebp
pop
sub
jge
mov
dec
mov
cli
jge
lea
pop
inc
jle
subl
rclb
dec
in
add
xchg
in
out
pop
dec
mov
mov
xchg
push
scas
inc
test
push
xchg
adc
lock
jb
leave
aad
dec
adc
cmpl
pop
fsubr
out
stc
dec
xor
xor
stos
dec
mov
scas
mov
inc
shl
mov
push
jle
xchg
shrl
bound
into
jb
dec
lea
dec
push
push
adc
mov
aad
cmp
push
adc
sub
fidivs
xchg
ret
aam
push
sub
or
jle
cld
jecxz
out
adc
in
shlb
test
adc
inc
inc
fmull
xor
or
xor
mov
movzbl
pop
negl
jne
inc
test
loopne
lret
jae
fsubl
sbb
frstor
lret
xor
xchg
imul
xor
xchg
or
xchg
xor
push
xchg
fbld
sub
adc
test
dec
xor
gs
xchg
sub
fs
mov
scas
pop
pop
xchg
adc
shr
jno
add
sub
xor
test
cmp
mov
loope
pop
fisttpll
xlat
mov
jmp
lods
inc
shrb
mov
inc
addr16
jnp
and
and
add
inc
call
xchg
lods
pop
push
adc
in
xchg
rcll
mov
mov
lds
ret
js
mov
inc
sbb
sub
lret
dec
stos
nop
addr16
xchg
mov
jmp
into
loopne
jne
push
dec
shl
loop
sbb
pop
in
xor
xchg
nop
adc
inc
cmp
cltd
adc
inc
filds
popf
scas
pushf
ret
outsb
mov
leave
hlt
dec
xor
scas
mov
lods
adcb
and
push
lret
push
frstor
icebp
inc
fs
nop
movsb
addr16
cmpsl
js
not
push
sbbl
movsb
lahf
stos
js
cmp
cwtl
fnsave
call
jne
fists
xchg
repz
sbb
ret
stos
repz
mov
adc
fisubrl
incb
push
xlat
movsb
push
or
sub
jecxz
fs
pushf
enter
in
addl
movl
imul
mov
sarb
in
cmpsb
jnp
jo
jp
js
cmp
leave
xchg
cld
mov
jae
stc
cmp
shlb
out
xchg
pop
sbb
cmp
loope
out
nop
jle
testl
movsb
incb
loopne
fisubl
or
cmp
gs
cmp
add
fnstenv
jb
xor
or
nop
xchg
xchg
fcomps
xlat
adc
aad
enter
dec
and
es
int
cmp
sub
pop
inc
inc
mov
push
aaa
sub
sub
sbb
data16
fimuls
call
cmp
pop
push
in
test
mov
adc
lods
lret
dec
mov
in
cmp
rorb
inc
enter
pop
add
ljmp
pop
data16
movsb
in
xchg
fptan
popa
mov
lods
ja
push
xchg
js
cli
mov
test
push
sbb
adc
jl
cmpsl
scas
sub
test
ds
fistpll
insl
push
arpl
js
ja
pop
lcall
mov
insl
lahf
sub
pop
cmp
lods
daa
popf
mov
add
and
sub
aas
push
and
mov
int3
pop
mov
sub
push
outsb
rorb
insb
lds
sbb
cmpsl
jns
push
jecxz
add
icebp
inc
sub
dec
cmp
sub
cmpsl
test
loopne
mov
and
or
xchg
in
iret
outsl
cmp
clc
div
hlt
mov
xor
jno
xor
stc
pop
mov
jnp
loop
js
xor
xchg
cmc
add
mov
lret
push
aam
pop
cmp
xchg
inc
mov
or
dec
lods
rcrb
arpl
imul
in
xchg
pop
mov
ret
xchg
fld1
mov
pop
jo
fcmovnbe
adc
stos
pop
or
popa
xchg
ds
inc
testb
jge
pop
add
ja
and
rcr
or
and
sub
mov
mov
pop
popa
sbb
inc
mov
test
dec
clc
loope
xchg
adc
in
inc
leave
push
dec
mov
jno
xchg
push
jg
out
fucomi
movb
mov
xchg
lret
sbb
dec
in
repz
sub
xor
imul
pop
jns
in
mov
push
popf
or
mov
test
in
adc
sti
push
xchg
mov
add
xlat
inc
rolb
push
cmp
int3
push
inc
dec
out
pop
add
sarl
push
mov
mov
jne
je
faddl
int3
insb
jge
sub
push
jns
lcall
xchg
pop
mov
adcb
shrb
mov
out
test
jbe
jns,pn
xor
add
rcrb
inc
pop
push
jb
popa
xor
mov
adc
add
mov
jp
mov
mov
pop
mov
jp
mov
mov
xchg
fs
inc
stos
jo
fistpll
cli
pop
xchg
sub
aas
bound
or
dec
sbb
int
adc
out
xlat
movsb
stos
cmp
xchg
cwtl
or
sub
cmpl
or
sbb
xchg
mov
les
sbb
iret
jp
xchg
adc
cli
test
mov
faddl
fucom
push
mov
cmp
push
cmp
insl
adc
inc
movsb
dec
mov
cmp
mov
pop
sar
int3
push
jb
iret
xlat
dec
testl
dec
rolb
push
sub
pop
sub
push
push
das
jo
xor
out
shrb
push
push
test
bound
lahf
mov
xor
adc
mov
xlat
test
inc
fadd
imul
imul
mov
inc
mov
movsl
fadd
xor
lock
jne
push
dec
fucom
out
outsl
or
faddl
dec
std
aas
sbb
xchg
lret
fistl
mov
movsb
ret
je
sbb
and
roll
dec
fildl
mov
data16
jae
dec
mov
repnz
jno
xor
and
mov
stc
add
xchg
jp
push
inc
icebp
sub
mov
jle
addr16
push
test
or
xor
in
lds
cwtl
aas
push
daa
fistpll
hlt
icebp
xorps
mov
adc
in
daa
out
xchg
push
call
js
mov
mov
adc
sahf
insb
jbe
mov
adc
mov
ret
or
xor
mov
vmaxss
pop
inc
sar
cmpsl
outsb
test
xor
lret
jge
lea
les
xchg
and
inc
rcll
add
mov
jmp
ret
jae
jne
lcall
aad
cmc
decb
inc
jle
mov
clc
cmp
inc
pop
pop
push
xor
jne
jo
mov
int
xlat
push
mov
mov
mov
or
imul
mov
and
push
or
cmp
aaa
jno
and
push
inc
add
add
int
xlat
cmp
sbb
mov
movsl
pop
pop
adc
and
aas
movsb
push
test
hlt
jle
pop
inc
and
sbb
in
rorb
mov
xchg
sub
insb
loopne
aam
subl
or
add
int
int
into
jno
lods
outsb
fnstcw
push
jo
inc
rclb
ret
out
mov
mov
popl
ret
pop
test
subb
sbb
pop
xchg
jo
jo
adc
fadds
lock
addr16
out
xchg
nop
icebp
and
sbb
bound
mov
or
lcall
sbb
jb
ret
aas
loope
push
or
xlat
addr16
loope
js
mov
adc
mov
jo
daa
jmp
test
lods
mov
or
sub
jne
xchg
lret
sub
fs
pop
xor
icebp
push
mov
and
mov
dec
sbb
xlat
pop
mov
adc
sbb
scas
cmp
bound
adc
xchg
std
push
dec
push
test
push
xchg
push
shrl
sbb
sub
mov
les
stos
loop
orl
insb
sahf
push
sbb
enter
ss
aad
rclb
loop
xlat
dec
loope
mov
negl
cmp
jge
push
xchg
cmpb
jae
mov
popf
sahf
lcall
popa
xor
in
ror
mov
lea
enter
loop
out
leave
push
mov
pop
xchg
shll
xor
cmpsb
pop
cvttps2pi
mov
add
mov
add
test
iret
rcl
add
adc
inc
inc
cs
jge
shlb
out
sub
aam
lret
cmpb
sbb
cltd
dec
or
mov
jns
jbe
push
sub
sub
cltd
adc
outsb
jp
push
add
mov
pop
xlat
cmp
inc
sarb
inc
fsts
fidivs
xchg
mov
pop
sbb
lret
loopne
cltd
xor
adc
loopne
add
dec
sbb
mov
mov
mov
mov
push
cltd
dec
push
add
cmpb
ret
mov
sub
dec
popf
call
les
add
int3
nop
push
stos
notb
movsl
or
jmp
stc
jne
xlat
adc
fucom
or
data16
xchg
int
arpl
xchg
test
scas
cmp
inc
mov
rorl
test
xor
cwtl
scas
movsl
mov
add
pop
mov
enter
jp
jle
popa
push
dec
pusha
fstps
popf
mov
sub
xor
xchg
jge
and
push
sti
movsl
pop
dec
push
scas
clc
ret
jge
mov
sub
xchg
repz
fs
das
pop
inc
loope
out
cs
sub
in
sahf
pop
or
sti
pop
adc
adc
les
xor
and
repnz
mov
ret
mov
mov
push
pop
outsl
stc
pop
sbb
push
and
mov
aam
cmp
jl
repnz
push
push
je
cmp
jb
sub
leave
jmp
outsb
ljmp
popa
std
and
aas
out
jae
addl
gs
jp
dec
inc
sbb
mov
pop
push
mov
jle
icebp
and
loope
gs
mov
mov
mov
sub
cmp
test
push
xchg
stc
cmpsb
jp
pop
sbb
mov
xchg
xchg
inc
mov
or
inc
aam
cmp
lock
ficoml
jae
xchg
pop
test
ss
pushf
pop
mov
das
dec
mov
jns
mov
pop
rorb
push
test
lret
addr16
and
pop
jl
cmp
sti
std
rorb
mov
dec
or
arpl
iret
sub
mov
in
inc
lods
dec
cld
add
or
out
cmp
add
push
fidivs
adc
cmp
stos
test
mull
mov
or
jge
or
cmc
jmp
rorb
jecxz
add
push
arpl
fsubp
push
push
mov
push
stos
mov
es
jnp
pop
lret
sti
ds
call
stos
add
int
aad
cli
mov
sbb
cmp
dec
shlb
mov
pop
inc
push
fwait
mov
or
popf
pop
lcall
xor
jmp
mov
sub
and
sub
push
cli
sbb
mov
push
jns
lret
ja
sub
and
stos
dec
cld
clc
popa
outsl
cmpsl
pop
sub
adc
leave
daa
jo
cld
out
inc
loopne
cmp
ud2
xor
pop
inc
dec
mov
jecxz
fbstp
out
mov
iret
stc
lea
mov
xor
fistl
arpl
mov
mull
scas
shl
test
push
xchg
andl
stos
push
sbb
pop
inc
mov
push
out
cmovg
cmp
dec
mov
sbb
mov
shll
and
mov
inc
sbb
pop
movsl
dec
add
add
mov
and
pop
lret
mov
and
xchg
mov
inc
ret
sti
push
fidivrl
add
mov
jg
in
gs
shlb
mov
mov
aam
aaa
jb
push
add
push
out
aas
xchg
cld
xor
sbb
inc
lock
and
and
nop
lds
loopne
insl
or
inc
and
mov
mov
and
bound
jno
mov
subb
scas
add
mov
test
xchg
nop
sub
cwtl
cmp
cmpb
pop
lods
in
or
sbb
xor
jbe
mov
mov
dec
pop
test
push
es
sbb
insb
mov
xor
std
cmc
jecxz
xorb
testl
add
mov
adc
sbb
pop
jnp
jns
fwait
jp
je
xchg
xor
cmc
jmp
fcoml
mov
in
bound
add
scas
add
mov
sub
int3
mov
push
out
in
sbb
frstor
jb
dec
enter
lds
dec
int
mov
xchg
mov
cmc
ds
outsl
dec
lret
neg
aaa
adc
aas
std
mov
lock
mov
scas
pop
aam
out
or
aad
xchg
push
and
stos
in
icebp
sbb
aad
and
das
popa
adc
or
jl,pn
pop
out
aad
test
and
sbb
cmp
or
xor
push
xchg
push
jnp
test
sbb
leave
loop
dec
lretw
pop
fcomps
lock
jns
dec
aas
rcrb
and
pop
ja
pushf
sti
mov
in
lret
imul
outsl
call
es
movsl
mov
test
mov
mov
repnz
push
loop
mov
test
je
xor
imul
pushf
xor
ljmp
push
mov
add
out
shlb
push
cmpxchg
mov
arpl
mov
pop
add
cli
pushf
or
mov
mov
jmp
movsb
inc
sub
shlb
pop
aaa
or
mov
idivl
mov
cld
rep
add
mov
aam
in
cmp
lock
loop
jne
dec
mov
push
xchg
mov
leave
or
or
pop
xor
call
push
roll
mov
out
mov
cs
sub
mov
stos
int3
pop
cmp
push
outsb
and
lock
adc
andb
ret
js
push
sahf
je
lret
sub
popa
xchg
xorl
mov
cmp
xchg
mov
push
stos
adc
or
fisubrl
int3
popa
lcall
push
jb
cli
cmpsl
loope
mov
push
add
mov
pushf
int
sbb
or
and
push
repz
data16
adc
pop
test
jmp
imull
pop
hlt
sets
mov
sbb
loopne
shll
dec
in
lcall
jp
lock
dec
lods
jae
sub
xor
mov
icebp
pop
cltd
in
cld
cmp
ja
mov
mov
push
and
jae
and
fdiv
clc
mov
sbbl
out
mov
sbb
ja
lods
dec
mov
mov
or
xor
jnp
mov
xchg
gs
cmp
es
mov
lret
mov
ret
loope
pop
movsb
test
imul
dec
ds
adc
and
sbbl
dec
pop
adc
shrl
aam
cld
mov
scas
mov
or
and
sbb
jmp
mov
mov
inc
gs
out
stos
add
adc
movsl
clc
mul
enter
sub
push
cmpsl
fwait
dec
mov
mov
int
jo
jp
jle
mov
adc
sub
insl
js
clc
pop
mov
inc
mov
xchg
xorb
jns
dec
nop
inc
imul
movsl
addr16
loop
scas
jb
mov
adc
cltd
mov
cs
daa
sub
imul
hlt
inc
imul
cmp
xchg
sbb
popf
loopne
imul
cs
ljmp
xchg
xchg
xor
or
xor
and
outsl
pop
or
add
jnp
push
sbb
or
dec
loope
mov
pusha
and
jmp
enter
int
add
fwait
xor
xlat
sbb
dec
mov
jecxz
clc
jns
or
lret
mov
rcrl
jae
pop
idivl
jno
mov
jmp
push
inc
sub
je
insb
xchg
inc
add
xchg
dec
sub
int3
add
outsl
loope
jge
mov
pop
mov
sub
mov
dec
icebp
push
dec
scas
push
ficomps
push
lahf
and
lock
jnp
sbb
push
sbb
ret
and
loopne
imul
dec
lretw
or
int
mov
sub
imul
pop
cmp
jg
mov
mov
dec
in
lcall
in
stc
cmc
push
cld
subl
or
adc
pushf
cmpsl
push
add
pop
mov
xor
add
cmp
xchg
or
jp
adc
mov
inc
dec
out
mov
lcall
insl
roll
insb
mov
inc
stc
jne
or
addr16
pop
loope
mov
lret
sub
scas
popf
test
stc
insb
lcall
or
out
or
jno
push
mov
lahf
in
mov
test
sub
adc
add
add
sbb
movb
shll
dec
into
add
xchg
sub
jb
mov
mov
add
pop
hlt
out
lahf
inc
pushf
pop
out
out
nop
mov
and
jg
sub
js
sub
or
and
jb
dec
clc
rcl
push
jmp
popa
pop
push
repz
xor
iret
mov
xor
icebp
mov
js
incb
outsl
adc
pop
ret
movsb
nop
push
push
xchg
mov
arpl
inc
sub
lahf
mov
shl
int3
lahf
push
sub
mov
inc
sarl
sbb
gs
daa
sahf
pop
push
sti
fbstp
mov
jno
cmpsb
mov
arpl
mov
xor
shrb
addb
je
mov
fucomip
sub
test
inc
xchg
loop
dec
js
inc
sbb
dec
cwtl
test
mov
sub
pop
jo
test
jbe,pn
mov
dec
pusha
sbb
scas
nop
inc
mov
cmp
aas
or
int
insb
mov
push
dec
and
xlat
xchg
sbb
mov
jle
pop
pop
cmc
or
cmp
mov
ret
xchg
icebp
leave
mov
hlt
clc
or
loope
andb
jmp
jmp
fs
sbb
xchg
addl
outsl
cmp
jnp
xor
pop
push
mov
fcmovnbe
frstor
dec
pop
lret
pop
mov
xchg
movsb
jae
push
jb
fisubl
shll
loopne
push
sbb
mov
es
add
int3
pusha
jne
and
js
fadds
push
stc
hlt
shll
loope
in
lahf
lret
inc
dec
popf
inc
stos
leave
mov
dec
cmpsb
daa
int3
lea
insb
pop
jae
les
int3
pop
jg
cmp
sbb
shrb
cmc
rolb
in
xchg
and
mov
pop
lea
push
jo
push
cmpsb
imul
popa
or
push
sbb
add
jae
insl
push
fisttpl
xchg
xchg
jmp
xchg
repz
imul
mov
stc
lcall
ffree
mov
mov
int
add
enter
mov
or
sub
and
push
sub
sbb
inc
lds
and
rcr
cmp
js
imul
xchg
aad
xor
jae
and
push
aaa
push
sub
insb
sbb
popf
fcompl
insb
addr16
cmp
data16
pushf
mov
inc
shll
leave
cmpsl
xor
xlat
ds
and
mov
jge
mov
adc
push
data16
into
fldt
inc
mov
addr16
dec
pop
icebp
pop
jecxz
lcall
decl
mov
or
iret
cmpsl
xchg
inc
lods
cwtl
je
pop
push
mov
mov
push
xchg
data16
ficoms
cmpsb
cmp
lret
cltd
shr
or
sub
mov
ret
sbb
push
addr16
and
and
mov
jle
dec
fldcw
sbb
dec
add
rorl
xchg
scas
adc
mov
inc
js
in
pop
cmp
in
pop
jb
push
inc
mov
idivb
sbbb
ficomps
clc
fsub
push
sbb
mov
xchg
popf
nop
orb
outsl
jnp
xlat
stc
mov
test
or
enter
jg
fst
mov
sbbb
lret
mov
in
neg
or
mov
out
movsl
subl
sbb
nop
cwtl
xchg
mov
adc
aad
jo
daa
or
inc
sbb
ret
dec
dec
pop
mov
fsubrs
sbb
aas
jmp
data16
xchg
and
ret
mov
jmp
cmc
repnz
in
mov
mov
sbb
vpslld
fisubrs
nop
lahf
pop
fld
ret
gs
adc
pop
insb
push
mov
add
xchg
es
xor
inc
jns
fcmovb
inc
daa
fnsave
stos
cli
mov
mov
and
into
loop
jns
imul
test
jo
cmpsl
xchg
mov
add
outsl
repnz
test
jge
aaa
or
fcos
out
ljmp
ljmp
or
movsl
jmp
movsb
stos
aas
lret
or
mov
pop
scas
cmp
data16
jg
lahf
adc
shrb
cmp
and
xor
mov
mov
hlt
fs
mov
je
xchg
jno
dec
jno
mov
fs
mov
mov
mov
or
and
add
js
push
sbbb
outsl
mov
nop
lret
mov
je
sbb
xor
adc
idivb
nop
xor
repnz
and
insb
out
pop
sbb
fiadds
fwait
jne
push
mov
ret
mov
fisttpll
std
insl
enter
mov
jge
dec
xor
xchg
test
sarl
sbb
rorl
aam
fidivs
and
bound
in
mov
outsb
jbe
jbe
repnz
xchg
subb
mov
cmpsb
pop
pop
movb
sbb
jae
lea
fcomps
push
adc
ficoms
cmp
leave
and
ret
out
mov
mov
jecxz
imul
hlt
cli
outsl
enter
mov
shld
xor
mov
sbb
pusha
push
pop
jno
mov
mov
mov
mov
sbb
xor
and
movsb
add
xchg
mov
imul
sub
xorb
push
xchg
jmp
ds
sbb
aad
add
mov
outsb
mov
repz
sbb
aad
sbb
cli
inc
xchg
pop
pop
cmpsl
push
push
jb
xor
outsl
xor
stc
mov
adc
pushf
js
dec
jg
jecxz
nopl
dec
or
push
js
lahf
das
repnz
icebp
or
and
dec
sti
mov
mov
add
cmpsl
sbb
sbb
and
mov
mov
mov
test
call
lea
flds
lret
or
mov
outsl
insb
pushf
mov
and
dec
mov
fists
rorb
stos
add
push
lret
ljmp
ljmp
mov
ret
xor
pushf
mov
jb
jbe
fbld
repz
test
mov
mov
loope
arpl
sahf
mov
lea
jmp
les
adc
add
addb
or
das
push
adc
or
inc
mov
daa
mov
or
call
xor
xor
ret
ds
ljmp
xchg
sbb
rcrb
push
xchg
xchg
fisubl
mov
enter
mov
lock
xchg
mov
adc
out
cwtl
sbb
movb
sub
push
out
adc
dec
mov
cli
pop
inc
sub
sbb
insl
or
inc
std
push
pop
xchg
dec
out
sub
cs
jg
lea
push
xchg
fidivrl
pop
and
and
inc
lods
xchg
jno
cmp
outsb
push
push
hlt
pop
xor
nop
add
es
fiaddl
lcall
xchg
not
or
rcl
mov
test
mov
in
aas
add
sbb
xchg
or
adc
aas
push
js
in
push
adc
adc
cmp
fidivs
jbe
js
push
cmp
mul
lock
es
shl
xchg
pop
aam
mov
int3
decl
icebp
adc
add
es
ret
outsl
pop
adc
push
rcr
mov
dec
mulb
cltd
inc
push
mov
ror
jecxz
add
jmp
sbb
mov
pop
inc
dec
out
mov
push
aas
push
jbe
ja
and
mov
or
jecxz
mov
jb
je
subl
dec
adc
sbb
cmp
pusha
or
jbe
sarl
cmpl
decb
addr16
lret
inc
jo
test
push
or
jne
fwait
xor
mov
mov
shrl
dec
shrb
jno
adc
std
push
ds
pop
lret
stos
adc
test
test
or
insb
and
mov
or
ss
add
jns
push
outsb
jecxz
pop
xchg
mov
cmpsb
test
sti
jo
xchg
shl
dec
jp
mov
add
fnstsw
add
or
adc
insl
xchg
pop
cld
xor
add
mov
jg
loopne
sub
mov
ret
xchg
movsl
jns
pop
sarl
rorl
jge
add
sarl
cmp
push
imul
ss
add
lea
out
imull
outsb
add
dec
mov
jns
dec
pusha
imul
stc
xchg
pusha
shl
xor
dec
pop
mov
mov
je
or
shr
push
mov
sub
xor
shr
mov
int
fisubrs
out
lds
jae
jb
add
aam
jb
mov
dec
ljmp
gs
test
imul
fisubrl
add
std
xor
stc
outsb
push
inc
repnz
jle
xor
add
aaa
jmp
aad
lea
push
pop
icebp
test
mov
sub
pop
cs
and
lea
pop
pushf
jnp
and
or
xor
adc
xor
lock
ja
or
mov
mov
and
jae
mov
outsb
shl
out
pop
jge
insb
out
fisttps
xchg
mov
je
cmp
icebp
bound
test
mov
mov
shr
leave
lcall
nop
push
add
inc
shl
mov
pop
int3
sbb
sbbb
add
pop
or
ja
lcall
lods
jl
out
lahf
mov
adc
mov
les
out
sti
outsb
push
ret
jb
inc
or
push
mov
aad
and
mov
pop
cmc
addr16
jl
dec
push
or
loope
lock
orl
inc
xchg
shll
gs
inc
in
and
jmp
std
insl
cmp
xchg
mov
add
adc
pop
fisttpll
sbb
sub
add
test
lds
mov
add
leave
mov
lret
lea
jge
outsb
jno
dec
stos
sbbl
and
mov
sub
incl
mov
xchg
shlb
addb
adc
xor
daa
test
fs
fbld
fistpl
lcall
mov
leave
pushf
sarl
repnz
es
test
xchg
mov
cli
adcl
nop
xchg
aam
mov
mov
bnd
ret
or
jl
mov
leave
lret
sbb
ret
divb
int
jp
stc
sub
push
jecxz
and
pusha
pop
into
jp
fisubrl
jp
in
mov
fisttps
mov
lret
stc
mov
out
inc
je
popf
sbb
mov
jae
inc
ds
aas
dec
inc
adc
mov
add
add
and
pop
or
loope
pop
jnp
aaa
cmc
mov
push
out
mov
and
jmp
xchg
add
lods
cmp
fs
cmpsl
pop
and
and
mov
xchg
add
push
fisttpll
cmp
and
adc
mov
ret
mov
xchg
adc
mov
popa
nop
or
push
sti
sahf
das
push
dec
and
mov
ljmp
ret
bound
cs
sub
int3
imul
mov
pop
rclb
lds
pushf
hlt
in
jmp
mov
fisubrs
cmpsb
cmp
dec
movsl
sahf
pop
test
or
xchg
leave
pusha
cli
in
roll
mov
mov
mov
idiv
xor
xchg
es
adc
movsl
daa
or
xchg
stos
es
add
and
mov
test
cmp
pop
sbb
inc
daa
movsb
xchg
fstp
or
xlat
fmulp
and
xchg
mov
sbb
sti
hlt
mov
repz
dec
js
enter
inc
xchg
movsb
push
sbb
jbe
add
out
popf
cmpsl
aaa
insb
mov
leave
pmulhw
mov
jp
lret
pop
adc
mov
testl
push
les
or
add
pop
enter
jnp
pop
mov
ja
mulb
add
add
icebp
and
and
and
pushf
adcb
aaa
ret
inc
inc
sub
cmp
jne
pop
popa
lret
sbb
mov
jnp
aaa
addr16
dec
xchg
adc
adc
sbb
xor
clc
dec
mov
sbb
xor
cmp
mov
loope
test
jno
sbb
aad
jb
inc
and
push
and
cmp
clc
push
push
insb
test
add
jo
mov
adc
lahf
xchg
mov
outsl
sub
sbb
lock
dec
roll
fcmovnbe
ret
fistpl
pop
pop
mov
and
mov
dec
loopne
jl
ja
jne
sub
stos
cmp
scas
jne
push
movsb
outsb
lods
jecxz
pushf
dec
and
mov
and
mov
jae
imul
ljmp
jg
xor
jecxz
lds
lret
aad
fimuls
pop
pusha
popf
mov
js
push
xor
std
mov
and
dec
jmp
or
icebp
add
dec
scas
mov
in
popa
sahf
and
addb
add
ret
cmp
out
inc
push
inc
push
movb
mov
inc
dec
mov
jae
call
xor
mov
and
mov
cmp
adc
orb
cmp
lds
sti
add
imul
pop
rclb
push
mov
pusha
push
dec
sti
pop
insl
and
in
or
xchg
lds
inc
push
jecxz
mov
and
aad
mov
shlb
mov
cmc
mov
mov
jmp
mov
pop
clc
popa
fsubrs
outsb
nop
inc
lods
dec
shrl
mov
in
sbb
push
pop
xor
adc
mov
mov
scas
jmp
mov
mov
mov
xchg
ret
fsubl
add
pop
mov
dec
cld
nop
fwait
and
cmp
pop
inc
loop
mov
and
sbb
sbb
out
xchg
lods
fists
mov
cld
pop
in
jae
xor
mov
fwait
push
jp
in
pop
rcll
addb
mov
rolb
inc
sbb
sbb
push
idivl
outsl
pop
sahf
in
push
std
mov
notb
push
mov
call
aaa
leave
lret
in
scas
fwait
sbb
and
jmp
movsl
jg
mov
push
std
xchg
in
test
pusha
outsl
lret
outsb
adc
cmp
or
inc
out
mov
scas
jecxz
lahf
das
push
inc
mov
andl
mov
xorl
mov
call
out
mov
add
push
ret
jecxz
push
push
mov
xchg
dec
aaa
jns
mov
pop
les
jl
push
scas
push
in
sub
inc
lret
dec
popa
daa
sub
push
push
ret
test
or
and
jg
xor
jmp
mov
pop
leave
frstor
insb
dec
repnz
add
dec
xchg
movsb
mov
imulb
jle
and
pushf
pop
jbe
mov
xorb
pop
scas
aaa
mov
pop
icebp
jb
and
push
mov
ljmp
sti
pop
fwait
cmp
je
mov
ret
ret
mov
leave
call
or
fidivl
or
push
aam
push
adc
push
mov
or
fwait
cmp
repz
repz
push
xor
jmp
sub
mov
xchg
add
test
jge
pop
sub
aas
cmpsl
push
and
jmp
jb
aad
cmp
inc
sbb
pop
popa
add
mov
sbbb
arpl
nop
mov
mov
bound
lahf
repz
pop
push
sti
xchg
leave
add
int
inc
stos
xchg
jg
dec
inc
sahf
or
cltd
adc
scas
pushf
cmp
test
mov
jae
sbb
push
scas
and
xor
pushf
xchg
js
out
mov
les
sub
mov
ja
aaa
push
fisttpl
scas
jb
sbb
repnz
xor
mov
inc
sub
push
lock
mov
mov
sbb
dec
sub
js
add
dec
int3
inc
fs
outsl
lret
rclb
xor
je
fsubl
jae
lds
es
jecxz
test
inc
lcall
rcr
mov
add
adc
dec
sbb
daa
aad
fcmovbe
rorl
or
aas
or
pop
push
pop
pop
or
fldl
nop
inc
mov
xchg
das
je
call
jb
ss
or
sub
mov
mov
push
fldt
mov
push
push
and
inc
das
hlt
adc
cmp
adc
inc
jbe
pop
jp
daa
jge
jne
lret
pop
hlt
clc
subl
hlt
stos
fisttps
daa
mov
mov
dec
cld
fcoml
les
fstpt
insb
xchg
imul
mov
mov
cmp
cmc
dec
popa
sarb
add
inc
jae
lods
int
add
das
into
or
pusha
fld
inc
sub
adc
jecxz
xchg
out
add
imul
push
fwait
int3
in
and
dec
shll
popa
mov
stos
mov
sbb
cs
scas
adc
jecxz
add
and
or
or
hlt
std
pop
ljmp
cmp
fwait
dec
addr16
pop
mov
bound
inc
aaa
and
mov
mov
xor
data16
sti
subb
out
pop
inc
add
jbe
imul
lea
in
scas
cmp
movsb
mov
add
into
pop
inc
out
ret
cmp
lret
lods
lcall
xchg
jge
sub
xadd
pushf
push
mov
psubb
jl
push
stos
mov
loopne,pt
mov
js
insl
aad
xchg
push
or
stos
xchg
xchg
rol
jne
daa
ret
lahf
push
push
mov
inc
pop
shr
mov
addr16
mov
popa
push
das
mov
sbb
gs
dec
jp
xorb
out
push
mov
int3
and
imulb
loopne
push
aam
data16
push
fs
push
mov
and
sub
loope
adc
or
je
fildll
pop
call
push
add
add
ficomps
xchg
xchg
pusha
jl
cmp
daa
sbb
dec
mov
mov
in
scas
cli
movsl
jno
shl
lahf
insb
pusha
sarb
mov
mov
nop
inc
lcall
cltd
inc
mov
std
mov
ficompl
lahf
adc
mov
mov
ljmp
test
call
or
fs
fcomp
stos
inc
fs
sbb
scas
mov
fldcw
pop
hlt
rclb
sahf
scas
cmpb
xor
fisubs
loope
int3
aas
aad
imull
aam
in
iret
and
sbb
lret
sbbl
pop
mov
stos
dec
shll
faddp
push
mov
adc
pop
dec
movsb
inc
ljmp
gs
push
out
in
inc
iret
and
xor
lret
xchg
push
pop
ljmp
shlb
cmp
push
fnstenv
test
mov
mov
dec
mov
fstl
icebp
pushf
dec
loop
mov
xchg
or
repz
mov
ss
aad
sub
lea
fidivs
sahf
in
lret
cmp
subb
sbb
into
stos
aas
fwait
add
pop
sahf
pop
push
adc
fwait
adc
mov
inc
pop
xchg
sbb
nop
in
int3
es
mov
sub
inc
cmp
mov
imul
lock
jmp
loopne
dec
lret
loopne
es
inc
sbb
int3
xlat
mov
push
sbb
sub
adc
xor
stc
std
out
and
test
test
gs
mov
leave
int
dec
lcall
mov
pop
mov
rolb
or
int3
les
movsl
sbb
or
jg
cltd
pop
testb
rorl
mov
inc
xchg
pop
lret
xchg
pop
scas
mov
add
add
das
push
and
loope
add
push
fwait
inc
jmp
ret
insl
or
ret
xchg
loope
and
stos
call
movl
sub
movsb
xchg
xchg
cltd
mov
mov
test
adcl
mov
adc
int3
faddl
pop
outsl
xchg
add
push
gs
mov
jmp
lea
mov
push
shll
test
jecxz
subl
add
pusha
push
dec
jl
sbb
jne
in
pop
push
adc
mov
pop
sbb
dec
pop
adc
imulb
lds
pop
loopne
cmp
or
rcrl
mov
sbb
add
mov
or
mov
dec
imul
pop
aad
std
lea
call
and
out
jge
cmp
mov
cmp
outsl
mov
xor
cmpb
ljmp
xor
xor
add
push
sbb
cs
push
sahf
sub
or
pop
cmp
mov
lret
fincstp
push
sub
jmp
sub
mov
arpl
xchg
dec
sahf
xchg
testb
jno
out
pop
push
add
mov
push
imulb
ret
adc
scas
das
mov
mov
and
or
rol
and
gs
push
push
dec
jns
pop
pop
test
inc
repz
fcoml
sub
loope
fisubrs
ja
mov
pop
push
jmp
outsb
out
mov
out
es
or
mov
stc
pop
loope
inc
shl
xor
pop
test
add
movsl
cld
outsb
flds
jmp
mov
push
pop
lahf
in
fwait
sbb
sub
xchg
enter
in
or
push
subl
mov
cltd
or
push
push
in
pop
push
mov
int3
pop
or
push
and
cmp
xor
sahf
mov
ret
lret
rorl
sub
fldl
sub
in
pop
loopne
pop
mov
push
std
mov
adc
pop
je
out
out
mov
xchg
mov
push
adc
and
fdivrl
cmpsl
jl
mov
mov
jns
fidivrs
aaa
and
add
pop
outsl
fdivs
and
xchg
shr
mov
int
aaa
out
es
icebp
jns
cmp
in
dec
es
aaa
movsl
fadds
loope
jne
call
cmovge
pop
loopne
add
das
out
inc
int3
mov
jne
mov
cld
idivb
cli
fbld
and
xor
adc
or
and
cmp
shll
data16
daa
fldcw
mov
mov
dec
xor
ja
fsubs
sbb
pop
xlat
je
or
fcmove
pop
xor
fs
aas
inc
jge
and
xchg
in
inc
mov
pop
xor
mov
mov
scas
dec
fsubrl
or
xor
pushf
imul
xchg
jnp
in
scas
clc
or
loope
xchg
int
repz
pop
stos
pop
inc
and
popf
lea
jbe
pop
fstl
movsl
test
aam
inc
jmp
cmp
mov
dec
fnstcw
mov
cmpb
mov
push
sub
xchg
lods
push
xor
out
mov
scas
and
cli
mov
aaa
sbb
shl
add
outsl
xchg
fldl
stos
mov
xorb
pop
xlat
sarl
pusha
push
ror
ret
aad
dec
cmp
add
ljmp
std
pop
aaa
adc
mov
lcall
mov
cmpsb
mov
in
cmp
sbb
mov
enter
mov
ss
addr16
out
or
shll
cmp
repnz
lea
int3
push
adc
lea
dec
shlb
popa
ret
loope
jb
fldt
ljmp
sbb
lods
or
xchg
std
sbb
loope
into
lret
add
in
xor
sub
jnp
test
iret
iret
push
inc
aaa
lock
sub
mov
clc
sbb
mov
xor
mov
mov
xchg
js
test
or
pusha
push
inc
insb
jo
orb
mov
arpl
push
into
inc
cmp
xchg
addr16
stos
test
xchg
loope
imul
sbb
dec
cmp
add
stos
mov
adc
sbb
subl
out
xchg
popf
lret
mov
fldenv
jae
sti
movsl
imul
pop
shlb
cs
inc
mov
lods
test
insb
dec
das
push
mov
test
pop
xlat
dec
je
mov
or
sbb
scas
cmp
ja
sub
repnz
loope
lea
scas
jo
daa
and
push
mov
add
mov
aaa
xchg
xchg
or
andl
fisttpl
pusha
xor
push
sbb
add
adc
dec
adc
mov
movsl
mov
cmc
adc
cmp
mov
mov
mov
add
hlt
std
jne
push
pusha
fwait
arpl
mov
stos
test
dec
daa
fwait
pop
sahf
lret
aas
add
adc
adc
sub
test
stc
sahf
inc
jno
test
xchg
lret
stos
cmpsl
lods
add
iret
push
ss
xchg
movsl
out
pop
inc
xchg
das
jno
adcl
lds
cmc
cmp
lcall
jge
cld
mov
jle
aas
fpatan
cmp
pop
sub
sarb
int
push
jg
fstpt
mov
je
sub
cmc
frstor
dec
lcall
mov
cmp
mov
int
mov
fnstcw
nop
cmp
jecxz
mov
out
in
or
notb
je
cmpsb
mov
cwtl
and
or
loope
push
fsubp
shr
inc
ss
inc
in
call
sub
sub
jg
lret
cli
jmp
test
pop
aad
sbb
test
sti
jns
ljmp
jne
decb
stos
roll
dec
sbb
and
xchg
adc
scas
idivb
cli
fsubrs
xor
cmp
mov
lret
xchg
xchg
daa
xor
ret
popa
mov
cmp
call
roll
mov
mov
stos
jns
lret
out
mov
cs
iret
into
inc
incl
stc
ljmp
or
xchg
jp
mov
pusha
pop
sub
dec
int
popa
filds
mov
sbb
fldl
in
or
cmc
mov
push
cld
mov
fwait
adc
xor
bnd
push
das
sub
sub
iret
add
adc
loopne
adcb
sbb
lret
inc
cmp
adc
popf
dec
add
mulb
xchg
and
mov
shrb
xchg
nop
call
mov
fcoms
pop
add
pop
mov
mov
fwait
fs
fwait
xchg
clc
hlt
in
lret
pop
mov
xor
in
daa
es
scas
or
xchg
popa
push
cmp
sub
jbe
into
inc
inc
scas
xchg
outsl
add
call
dec
xlat
cld
idivl
jbe
xor
scas
push
cld
pop
pop
and
jmp
xchg
es
mov
dec
shrl
mov
pop
add
mov
pop
mov
je
sub
out
sub
mull
inc
and
cli
xor
es
nop
xchg
or
imul
in
adc
test
int3
pop
sbb
xchg
imul
push
cwtl
lret
xchg
push
clc
fnsave
sbb
in
xchg
das
enter
enter
testb
xchg
adc
lods
nop
fs
andb
jg
addr16
mov
shll
mov
lds
and
add
xchg
jns
dec
sbb
add
inc
add
enter
adc
add
and
add
sub
inc
add
add
fadds
test
add
out
out
jp
test
fdivrl
and
jg
sbb
popf
scas
pop
lea
cld
sub
or
pop
into
jl
mov
addr16
or
lret
shrl
aaa
stos
sub
jl
and
movsb
fwait
mov
add
enter
mov
push
repz
add
push
insb
lret
add
mov
addr16
daa
inc
cmpsl
ret
xor
mov
movsl
adc
inc
add
inc
pop
cltd
lods
xlat
test
scas
jno
xor
es
push
mulb
les
test
pop
sbb
inc
jle
rorb
add
jecxz
mov
pop
fcoml
lret
ffreep
inc
mov
pop
outsl
fcoms
xor
packuswb
xchg
jae
lahf
lret
mov
xchg
nop
mov
in
addl
ss
add
rorl
rolb
out
faddl
mov
outsb
insb
or
aaa
jne
xorb
inc
outsb
xor
sahf
mov
adc
rorl
cmc
outsb
jge
add
aaa
stos
push
fwait
push
fs
lods
decl
mov
add
jnp
cmp
nop
dec
mov
ror
lods
or
or
push
or
xor
in
out
stc
dec
jmp
and
adcl
inc
sar
cmpsl
test
sbb
sbb
adc
push
xchg
nop
dec
pop
inc
movsb
ret
or
pop
pop
fistpl
adc
or
leave
add
aad
cltd
das
jle
mov
and
cs
daa
sub
add
fisttps
loope
loopne
add
ljmp
jge
sbb
outsb
sub
xlat
dec
mov
stos
outsb
hlt
inc
mov
mov
inc
test
loop
aas
cmovno
inc
loop
push
cwtl
sub
mov
pop
mov
addr16
mov
dec
sub
fwait
push
daa
dec
or
inc
xchg
fwait
aam
mov
dec
cmpb
rcrb
jp
pop
ds
push
aam
lahf
daa
ds
push
xlat
inc
out
inc
loope
cmp
ficomps
arpl
xchg
ja
sbbb
adc
pop
dec
mov
inc
cmp
cltd
popa
dec
sbb
mov
loope
lock
lcall
rcr
push
jno
adc
int3
sub
sbb
push
jg
adc
mov
adc
je
pop
aaa
inc
out
xor
rcl
sub
imul
sub
sbb
or
pushf
bound
or
dec
stos
das
mov
mov
adc
adc
cwtl
mov
imul
cmp
sbb
pop
jne
cmp
ljmp
es
iret
sbb
xchg
pop
cmp
repz
orl
test
pusha
das
and
sbb
lret
fistpl
mov
sbb
js
jl
push
insb
pop
sub
inc
or
add
test
fsubrl
xchg
fwait
adc
dec
movsl
xchg
sbb
fwait
pop
dec
and
sbb
sahf
jne
mov
stos
mov
jae
mov
sbb
call
rcrb
es
mov
lret
jge
pop
mov
jle
rolb
add
decb
adc
xor
fdivs
jl
fisubs
xor
mov
bound
cmpsl
insb
xor
adc
out
mov
pusha
dec
rolb
clc
jle
jns
pop
pushf
cmp
sbb
mov
push
sub
popa
mov
test
loopne
es
cmc
loop
notl
fdivrs
cmp
or
push
mov
mov
data16
cwtl
xor
dec
dec
jmp
mov
fsubp
dec
sub
inc
icebp
mov
push
jno
push
xchg
stos
movsb
scas
inc
xchg
pop
in
pop
add
adcl
dec
jae
in
and
movsb
nop
push
js
iret
test
out
test
pop
insl
je
xor
aam
stos
jb
pop
call
cld
lods
push
orb
out
mov
inc
outsl
mov
cwtl
cmp
lret
shll
and
xor
pop
sub
xorl
pop
jg
sub
iret
icebp
inc
adc
mov
jmp
hlt
aaa
xor
jbe
loop
jecxz
popa
jg
pusha
jle
and
adc
lea
mov
adc
loope
stos
ss
add
adc
or
or
jnp
xchg
mov
std
into
ss
mov
icebp
sbb
dec
and
and
adc
push
push
mov
insl
jecxz
imul
movsl
pop
or
xchg
call
mov
bound
movsb
cmc
lcall
inc
out
jge
hlt
add
or
aaa
ret
lea
pop
sub
mov
popf
shll
add
orb
std
ret
data16
or
sub
mov
xchg
jg
jb
add
mov
xchg
mov
nop
scas
mov
jb
je
lahf
clc
and
js
cmpsl
pop
inc
xor
bound
mov
jne
jnp
mov
and
xor
sub
pop
add
sub
xchg
push
das
jne
and
cmp
scas
push
xchg
xchg
mov
mov
imull
and
adc
push
mov
cs
push
insb
divb
icebp
clc
dec
add
stos
push
sbb
add
adc
pop
mov
adc
jbe
jp,pt
in
mov
fidivrl
push
aad
scas
sub
subl
lods
loop
push
test
mov
movsb
mov
shlb
fwait
arpl
pop
xor
xchg
jnp
ss
push
iret
mov
negl
int
fdivrl
jmp
mov
lock
int
push
jg
mov
int
lret
add
loop
loope
fldcw
mov
jns
inc
lcall
sarb
js
ja
mov
push
dec
clc
mov
cmc
shlb
iret
fucomi
neg
add
in
cld
push
xchg
lret
xchg
add
mov
repz
lds
fcomi
push
mov
add
mov
push
fmuls
lret
mov
xchg
testl
cmp
inc
test
jbe
pop
dec
inc
lret
push
jp
sbb
pushf
xchg
arpl
cltd
mov
ret
shl
mov
push
sub
xchg
xchg
cmp
loopne
pop
dec
sub
add
mov
lahf
sarb
in
sbb
ds
idivb
mov
les
out
pop
mov
roll
xor
pop
sbb
push
and
lea
enter
xor
sub
xchg
sbb
test
sub
clc
and
fldt
push
or
xor
int3
jns
cwtl
xchg
iret
insl
fabs
lcall
mov
fwait
int
dec
xchg
iret
test
gs
and
shrl
mov
int3
push
jmp
push
ss
pop
jl
mov
arpl
mov
mov
rolb
ds
jbe
loop
enter
daa
daa
bound
add
and
ss
mov
or
and
lahf
roll
test
or
hlt
push
sbb
and
arpl
cltd
inc
out
leave
lahf
pusha
jmp
dec
mov
push
in
cwtl
pop
jne
cmp
fldcw
ror
dec
mov
xchg
iret
xchg
cmp
mov
out
shlb
scas
stos
mov
cmp
aad
push
and
mov
xchg
push
dec
pop
dec
out
mov
add
jge
mov
inc
test
insb
sbb
add
mov
and
mov
xchg
pop
loopne
shlb
xor
std
addr16
int
je
xchg
out
aad
xchg
out
dec
shl
or
or
sahf
inc
mov
into
bound
push
jae
sub
outsl
mov
pop
loope
popf
xor
jl
fadd
mov
pop
repz
push
mov
test
negl
ja
test
sti
push
xor
mov
jae
mov
sbb
into
lock
pop
insb
jmp
test
dec
cmpsl
inc
push
push
bound
cmp
lods
mov
aas
adcb
loopne
jb
enter
outsl
cli
stos
xor
adcb
mov
pop
cmpb
and
sbb
iret
xor
xor
cmpsb
insb
adc
idiv
mov
shr
xor
sbb
test
lcall
lahf
es
xor
cmp
and
sahf
arpl
adc
in
pop
insb
fisubl
inc
in
cwtl
enter
pop
inc
in
cmovl
jb
cmp
mov
repnz
add
rcll
int3
sbb
pop
lods
xchg
xsave
aas
hlt
sbb
cltd
inc
iret
add
and
sub
cmpsb
insl
fidivrs
push
pop
mov
adc
and
or
ds
cmp
xor
es
push
xor
jnp,pt
pop
clc
bound
adc
xor
push
add
ds
mov
add
outsl
and
jns
fdivl
repnz
pop
enter
jno
push
je
movsl
mov
subb
lds
pop
inc
popf
out
pop
and
mov
pop
inc
push
imul
fnsave
fsubrl
xor
jno
mov
shlb
or
mov
pop
aam
mov
cmp
in
mov
inc
sbb
and
fcmovnu
rcrl
addr16
daa
xor
out
adc
xlat
out
inc
dec
je
aas
add
cmc
and
enter
cmp
outsb
xchg
mov
mov
or
sarl
ljmp
or
mov
or
jae
mov
das
cmp
cs
push
test
lock
call
das
test
cmpsl
and
xchg
push
stos
mov
test
cmp
sbb
nop
adc
cmp
popa
hlt
inc
mov
out
or
sbb
push
cwtl
cmp
sbb
push
dec
adc
dec
mov
mov
fidivrs
fcoms
jno
pop
iret
jae
adc
les
mov
ret
test
cmp
fisubl
dec
addr16
scas
sbb
stc
mov
mov
aaa
push
std
xor
dec
dec
cmpsl
sbb
jo
sbb
arpl
mov
and
mov
xchg
mov
add
js
mov
fwait
inc
or
sahf
sub
push
push
jnp
imul
aas
lcall
mov
addr16
or
in
mov
les
cmp
loop
xchg
xchg
sub
into
mov
out
pop
ret
clc
dec
adc
fcomps
out
jae
jge
add
mov
push
in
jg
imull
int
inc
add
adc
pop
test
mov
add
jbe
rcrb
inc
daa
xor
sarb
lahf
sbb
test
in
push
dec
dec
xchg
enter
int3
jge
into
loopne
mov
imul
sbb
inc
call
dec
sub
je
dec
stos
xor
cmpsb
lods
fisttps
xchg
push
mov
adc
jbe
xor
adc
xchg
in
movsl
ljmp
aaa
sbb
shll
cwtl
cs
xlat
jmp
pop
sbbb
outsb
sub
jae
xchg
out
cs
sahf
pop
push
aam
or
push
and
add
data16
jne
pop
push
ret
push
pop
pop
jle
mull
sub
out
fmul
aad
pop
mov
popa
add
outsb
mov
sbb
outsb
loop
inc
add
inc
and
pop
inc
lods
push
jae
sti
cmp
push
stos
cmpsl
mov
inc
push
push
ret
data16
pop
xor
jl
fldcw
lock
mov
sbb
xchg
mov
jecxz
push
loopne
xlat
fs
clc
push
mov
and
scas
fld1
mov
push
xchg
jne
inc
mov
cmp
lcall
cmp
jbe
adc
shll
mov
push
and
inc
push
add
cmp
stos
lods
pop
clc
sub
sbb
enter
rorb
push
es
cmc
int
mov
pop
lcall
cmpsb
rolb
test
jne
add
push
fyl2x
rolb
mov
mov
jge
pop
push
sub
adc
adcb
ret
adc
cmp
jmp
and
jb
and
in
data16
sub
add
pop
mov
mov
hlt
xor
push
sbb
mov
sbb
ret
imul
add
pop
jb
inc
and
jne
pop
ret
or
stos
or
pop
inc
pop
icebp
aad
ja
cmp
jnp
sbb
sti
adc
outsb
push
nop
dec
int
int
xrelease
dec
add
lods
cmp
add
in
pop
push
subl
fisttpll
inc
push
scas
pop
cmp
mov
into
mov
pop
ss
mov
jno
cmp
out
and
pusha
data16
pop
dec
add
xor
rcr
addr16
mov
ss
loop
dec
mov
adc
xor
test
scas
gs
and
cmc
jne
and
or
cmp
les
mov
inc
clc
jmp
dec
add
in
out
pop
imul
jmp
repz
add
lods
cmp
andl
ja
test
stos
ror
push
mov
add
daa
movsb
lcall
add
int
dec
bound
fwait
lods
xchg
dec
mov
cmpsb
mov
hlt
xor
cmp
and
xchg
xor
sahf
push
repz
dec
scas
xor
es
mov
fs
mov
lea
fs
lea
pusha
ret
cmp
cmp
stc
pop
or
mov
sub
push
cmc
mov
mov
imul
push
sub
cmp
sbb
xchg
int3
inc
mov
idiv
adc
pop
dec
popa
jns
or
hlt
test
rcl
inc
jge
mov
pop
adc
inc
push
jne
add
jns
stos
out
or
push
xor
mov
in
std
mov
jnp
fstps
fmull
mov
shrl
daa
arpl
jl
mov
stc
scas
hlt
shlb
lds
xor
mov
push
stos
push
adc
in
leave
mov
jmp
data16
sub
lods
push
adc
dec
icebp
cmpsl
cmpsb
cltd
and
repnz
fimuls
fnstenv
sub
mov
fldenv
dec
xchg
repz
fwait
inc
mov
dec
push
xchg
xchg
jle
ret
outsl
push
xlat
sbb
js
bound
adc
mov
xchg
pushf
ret
xchg
push
dec
jno
jg
inc
lods
stc
ret
pop
add
dec
jns
sbb
mov
lret
xchg
push
cmc
mov
lods
sti
jns
in
and
or
popf
sub
movsl
enter
cmpsl
adc
dec
dec
add
mov
dec
inc
pushf
pop
mov
negb
into
ljmp
aaa
fisubrs
jge
shr
inc
inc
pop
imul
mov
add
sub
ja
xchg
jae
jne
filds
das
jmp
test
mov
add
or
jns
sub
xchg
das
ficomps
aad
repz
pop
pop
out
sub
mov
xchg
fwait
repnz
jbe
adc
rcrb
ret
push
jge
cmp
push
inc
mov
ret
adc
cmp
xchg
out
in
pop
pusha
mov
fcom
xor
add
lds
mov
andl
int
jbe
std
lock
sahf
insl
stc
in
mov
add
nop
mov
arpl
and
dec
pop
cmc
ficoms
inc
push
jb
in
inc
sbb
mov
negl
push
mov
les
push
add
sub
cs
mov
xor
stc
std
cmpsb
les
jmp
out
div
mov
push
jecxz
cltd
ss
add
out
mov
jge
subb
ljmp
sti
outsl
cld
std
js
or
lret
divl
and
pop
enter
cwtl
movsl
push
mov
xor
jmp
and
sahf
lret
out
jmp
pop
pop
mov
fcoml
push
fiaddl
inc
or
push
push
cmp
jg
push
dec
aad
call
icebp
jp
repnz
adc
lcall
and
sar
addr16
adc
jbe
sbb
push
ret
mov
into
out
or
cmp
cld
push
or
cmp
xlat
mov
inc
cld
dec
or
jmp
das
push
sarl
push
stos
push
stc
loopne
pop
pushf
mov
jno
cmp
movsl
adc
stos
test
or
jmp
cmc
pop
repnz
inc
mov
loope
push
push
mov
xchg
xchg
subb
inc
test
sub
loop
dec
sar
push
into
test
lret
pop
pop
inc
mov
popa
loope
and
push
std
and
pop
and
sahf
popa
idivl
inc
out
push
in
adc
adc
adc
es
aas
scas
popf
scas
ljmp
sub
add
xlat
fisubrl
ljmp
xchg
inc
loope
lods
add
js
clc
xchg
movsl
pop
pop
mov
jbe
jno
inc
or
cwtl
jbe
xlat
repnz
cmpsb
repz
xchg
push
daa
loope
jmp
and
mov
push
and
push
xor
xor
aad
jmp
mov
int3
xlat
push
pop
sbb
sub
cmp
leave
fcmovnb
xchg
lods
fwait
je
mov
push
lcall
pop
dec
jle
mov
outsb
mov
pop
fstl
test
lcall
sub
sub
jno
push
add
mov
bound
inc
aad
ja
stos
lods
out
push
xchg
movsb
mov
call
std
add
addr16
adc
xchg
dec
sahf
clc
mov
imul
xchg
jmp
xchg
std
decl
mov
out
xchg
inc
mov
xchg
mov
pop
jg
jle
iret
int3
jno
out
data16
movsb
lret
popf
jo
scas
jno
add
lahf
sbb
fstl
push
sbb
push
mov
cwtl
outsb
or
fdivr
rcrl
sti
pop
add
inc
dec
repnz
fwait
lods
rorl
lret
stc
sub
adc
jae
and
jmp
jnp
push
sub
sub
add
ret
mov
pop
dec
popa
mov
inc
dec
and
imul
push
repz
sub
jno
lret
repz
shll
das
pop
push
fimuls
sub
pop
xchg
pop
xchg
jmp
lret
icebp
jo
lods
je
fadds
mov
sub
jns
sbb
sti
mov
jp
stc
clc
jno
sti
fsubs
dec
sarl
fsubl
sbb
mov
in
lods
and
outsl
loope
xor
mov
mov
adc
add
stc
bound
stos
lods
sub
and
lahf
cvtps2pd
mov
mov
mov
xchg
shrb
mov
dec
push
jne
jo
in
jmp
dec
jne
std
sahf
cmp
shlb
rcl
out
aam
enter
insb
lcall
adc
xchg
std
adc
inc
rclb
and
push
movb
imul
int3
notb
fucomip
add
movsl
and
popa
outsb
jle
push
xchg
fisubrl
or
fildl
cli
outsl
or
lock
jge
sub
or
xchg
push
clc
mov
popf
movsl
outsb
enter
jne
pop
pop
loopne
ret
cld
in
pop
adc
insb
sub
pop
scas
in
pop
shll
in
insb
jbe
jnp
xchg
mov
jne
call
icebp
mov
xor
inc
xor
pop
cmp
push
in
divb
cmp
pop
xor
fwait
pushf
mov
add
sti
dec
addb
je
je
popa
lds
ljmp
add
push
cmp
daa
rorl
push
mov
jb
push
cwtl
cld
ficoml
jo
clc
pop
iret
push
push
cmp
xor
scas
sbb
popa
scas
clc
pop
xchg
push
cmp
popf
testb
pop
mov
mov
dec
cltd
dec
js
sub
loopne
sub
push
mov
mov
cmp
jno
fisubrs
push
adc
pop
ljmp
aas
lahf
int
shl
sub
pop
add
pop
add
mov
pop
push
cmpsl
jle
popf
pusha
sti
or
xchg
xor
mov
je
js
cmpsb
add
insb
inc
call
hlt
pop
or
aam
jp
sbb
push
and
pop
adc
mov
movsl
dec
std
fsubrl
add
push
sbb
xchg
mov
sub
xor
je
jl
lods
shl
push
rcr
inc
or
cli
pop
negl
adc
sub
xor
adc
xchg
mov
or
pop
fmul
mov
negl
fwait
mov
dec
jbe
arpl
lret
push
mov
mov
xchg
cs
ds
ss
leave
rorl
aad
jmp
mov
jae
xchg
insl
insl
cmp
mov
loope
mov
fbld
lret
xor
dec
sub
push
inc
pop
fdivrl
xchg
sbbl
call
mov
pop
into
pop
jmp
jo
mov
addr16
mov
sbb
cmp
mov
xchg
fimull
movsb
ljmp
lahf
inc
xchg
mov
imul
out
jnp
ret
sbb
popf
flds
imul
test
iret
pop
lcall
inc
and
aas
data16
lods
add
imul
ror
jmp
add
bound
out
pop
addr16
mov
pushl
fdivr
ss
nop
push
jg
inc
adc
xchg
ja
jo
dec
faddl
cmc
add
lret
nop
lret
cmpsl
aad
sub
out
mov
decl
cmp
pop
mov
test
fisttps
movsl
mov
jecxz
jg
mov
aas
movl
cld
rorl
scas
dec
leave
fidivrs
roll
push
rcl
lret
rorb
push
sbb
aam
rolb
imul
xor
sub
pop
test
xchg
pop
cltd
faddl
test
mov
int3
sbbl
adc
in
data16
jl
sbbb
lcall
sbbb
add
cli
and
and
nop
pusha
sbb
pop
xlat
mov
dec
call
dec
sbb
xor
fwait
or
stos
cmp
sub
mov
xor
jnp
aad
movb
lds
das
jno
leave
jmp
and
rclb
enter
setge
popfw
test
cld
pop
cmc
pop
cwtl
jl
and
xor
icebp
or
js
dec
push
into
adc
xorb
daa
push
adc
dec
adc
scas
out
push
pop
add
mov
in
mov
loop
sub
cmp
ret
sub
dec
sbb
dec
mov
xlat
repz
cwtl
inc
cmpl
mov
and
cwtl
shr
divb
ja
in
test
ds
movsl
pop
fldt
cltd
icebp
test
dec
inc
dec
xchg
dec
stos
cmp
ret
mov
lahf
add
stos
or
movsl
in
adc
scas
mov
mov
hlt
clc
fcompl
or
sub
lea
nop
xchg
sub
cmpsl
fsubrs
or
fidivl
xchg
bound
mov
sti
nop
aad
call
xor
push
inc
shlb
test
push
pop
push
mov
addl
push
dec
adc
mov
in
lahf
mov
jl
adc
jno
pop
mov
jae
mov
lret
or
add
jbe
cmpsl
jg
notb
pusha
xchg
mov
xor
pushf
iret
pop
popa
mov
incb
repz
insb
shll
jnp
jnp
clc
push
in
orl
inc
ficoms
cmc
gs
shrb
xchg
cli
fsubl
lcall
and
test
push
xchg
fsubrl
insl
xchg
mov
xchg
lret
xor
repz
adc
mov
es
in
dec
test
and
add
and
mov
aas
rcll
shll
jl
mov
out
mov
scas
or
stos
cmp
jne
stos
mov
dec
or
inc
cltd
sub
js
add
inc
stc
mov
mov
ljmp
scas
vmaxps
xlat
rclb
sbbb
fisttpll
jle
mov
or
lds
pushf
or
mov
dec
inc
cmp
outsb
fwait
pushf
mov
jmp
and
inc
mov
in
or
mov
test
cltd
sub
push
pop
sbb
add
mov
ret
pop
mov
xor
sbb
push
js
cmp
pop
mov
ljmp
cmp
cmp
jg
xchg
or
dec
push
pop
cli
cmpb
loope
stos
adc
pusha
stos
lea
inc
cmp
in
test
data16
mov
sbb
xlat
test
cmp
add
shll
xchg
mov
push
rolb
cmp
mov
or
cmp
aad
mov
push
mov
mov
inc
ret
ja
imul
dec
pop
pop
and
push
push
lret
pushf
insl
addl
in
rorb
outsb
cli
cli
or
je
loop
mov
push
dec
sbb
push
aam
push
bsf
imul
sbb
jmp
jo
xor
or
mov
int
mov
clc
xlat
pop
fiaddl
sbb
or
and
mov
push
test
sarb
lods
stos
pushf
fistps
shlb
out
mov
mov
sti
mov
sbb
fiaddl
add
jmp
pop
test
insl
fwait
sub
aad
sbb
adc
rorb
push
idiv
outsl
xor
loopne
mov
adc
mov
add
cmpb
and
and
lock
push
cmp
xchg
shll
add
push
sbb
ret
stos
mov
in
outsl
fs
jecxz
xlat
xchg
je
jne
pop
into
call
inc
std
or
imul
test
add
ficomps
sbbl
push
dec
or
cmp
push
push
push
cld
mov
out
xor
add
lret
push
std
jno
mov
adc
shll
sub
gs
aad
xchg
inc
push
add
ja
push
orl
and
adc
xchg
ret
out
mov
insl
daa
mov
adc
outsb
mov
mov
pushf
fmull
jae
cmovbe
xorl
xchg
mov
mov
mov
push
lods
inc
cmp
mov
xchg
fcoms
jmp
loop
in
jb
movsb
in
jns
pop
int
mov
mov
sub
add
push
push
ljmp
divb
push
cwtl
push
sti
fistpll
mov
inc
jg
or
jle
test
into
jge
xchg
cmp
add
std
jns
xchg
sti
scas
jno
shl
scas
push
cmp
push
ss
data16
insb
jle
xor
xor
adc
cmp
pop
and
enter
jle
mov
cmp
jne
xchg
push
mov
mov
push
sub
lods
das
sbb
jg
fdivr
mov
mov
cmp
pop
sub
lahf
push
ficomps
andl
clc
lods
int3
leave
fisttps
pop
cmc
xchg
ss
inc
ret
mov
lods
aas
es
pusha
icebp
add
xchg
lods
sbb
mov
xchg
sub
aas
loop
mov
add
inc
cmp
sub
loopne
add
mov
xchg
jb
sbb
mov
mov
cli
lods
pop
fld
popa
jp
mov
inc
and
xchg
aam
mov
cmc
mov
das
ss
sub
mov
cmp
sub
jmp
or
jo
jp
adc
fisttps
sbb
adc
cmpl
cwtl
add
mov
insl
mov
add
popa
adc
sahf
pandn
jbe
mov
add
dec
dec
shlb
mov
sti
int
bound
loope
aaa
mov
lret
adc
test
sahf
mov
mov
pop
and
xor
cmp
dec
lock
mov
les
pop
movsl
pusha
lcall
fs
mov
jne
push
jmp
push
fisubl
inc
imul
jb
and
clc
lahf
cmp
mov
xchg
mov
cli
jae
arpl
sub
dec
stos
push
repnz
fsub
lea
sbb
sbb
mov
lret
jno
jl
fistpll
sbb
nop
cwtl
mov
or
fidivs
fwait
mov
xchg
mov
xchg
mov
data16
fdivrl
mov
add
aad
sbb
jle,pt
scas
mov
sbb
mov
aaa
inc
mov
imulb
imul
and
pop
adcb
sbb
xlat
in
fwait
cmp
mov
inc
xchg
cmp
adcb
ljmp
jb
inc
mov
dec
sbb
notl
test
pusha
sub
pop
sbbb
cli
mov
mov
push
jae
push
lds
add
imul
mov
pop
jnp
add
jb
jmp
mov
or
add
mov
jecxz
fidivrl
push
sbb
sub
ljmp
cld
roll
loope
jno
leave
inc
mov
mov
lock
sbb
sub
ljmp
aaa
nop
pop
js
inc
stc
clc
inc
add
int
add
sti
aaa
fistpll
iret
mov
sub
xor
or
std
test
imul
cli
mov
cmp
adc
lea
jno
das
xor
jecxz
mov
jge
std
mull
cwtl
test
subl
imul
jnp
xchg
orb
enter
stos
aaa
xchg
lock
push
xchg
mov
in
ljmp
fdivrs
fwait
sbb
dec
add
dec
mov
sbb
dec
mov
xchg
cmp
cltd
out
jge
adc
jg,pn
movsb
adc
or
leave
js
pop
fs
aaa
pop
dec
outsb
in
js
push
cmpsb
mov
imul
jnp
mov
popf
push
out
es
imul
out
idivl
jbe
out
les
or
cltd
jb
xor
pop
scas
jg
cmp
ljmp
or
popa
insb
push
mov
icebp
ss
jne
sbb
jl
lcall
rcrl
adc
mov
loop
push
add
pop
cwtl
clc
add
dec
movsb
add
jbe
jae
inc
rorb
das
add
cmp
pop
mov
aad
lret
fwait
sbbb
mov
cmp
xor
push
jbe
sahf
and
pop
sub
aas
shll
rcrb
icebp
adc
and
push
jp
xor
mov
leave
cmp
or
iret
lds
ljmp
lahf
jb
dec
iret
dec
xchg
addl
leave
adc
cmp
sbb
jne
fldt
out
pushf
pop
xor
push
or
sub
pop
pushl
out
enter
divl
movaps
subb
xchg
cli
sbb
jae
mov
scas
xor
pop
shl
call
andl
lods
or
inc
stos
test
rcll
sub
sti
movsl
pop
rorb
adc
dec
pop
fistps
rolb
in
jno
add
add
mov
test
loop
mov
inc
pop
lahf
or
or
outsl
inc
jb
adc
inc
lret
ds
fisubl
scas
ffreep
mov
mov
push
mov
rclb
mov
lods
mov
gs
iret
push
xor
push
fs
loopne
mov
lods
iret
hlt
incb
mov
and
sub
dec
xor
cmp
packuswb
mov
out
xchg
sub
movsb
mov
mov
lret
jle
ret
mov
or
xor
mov
mov
xchg
lods
pop
jl
pop
adc
call
popf
jbe
cs
push
stos
lret
stc
and
sub
insl
or
adc
ret
fimull
inc
mov
std
jns
jne
or
mov
push
or
sub
testb
pop
sbb
xor
xchg
es
adc
pop
jne
xchg
lock
sbb
mov
arpl
xchg
add
rcrb
rorb
lret
bound
mov
icebp
push
dec
rol
jnp
pop
fwait
enter
lcall
mov
mov
sub
hlt
imul
jno
add
int3
scas
imul
cltd
mov
or
call
sub
mov
mov
pop
andb
insb
cmpsl
daa
std
enter
jns
cmp
out
xor
mov
lock
mov
cli
pop
scas
dec
add
mov
cmp
xor
ljmp
dec
mov
outsl
out
cmp
leave
enter
push
or
fadds
and
xchg
push
lss
or
dec
pop
pop
dec
jne
repnz
call
mov
cmp
imul
shr
enter
ja
push
mov
or
nop
fcmovnu
lret
jge
jmp
mov
mov
int3
js
cmc
add
xlat
add
out
add
out
or
cmp
pop
andl
inc
inc
mov
cmpsb
cmpsb
gs
neg
cmp
addr16
mov
or
loop
add
lret
out
dec
lods
test
roll
sbbl
mov
ljmp
or
xchg
xchg
and
out
dec
push
andl
sbb
cmpl
cmpsb
inc
popa
orl
fwait
fs
inc
addr16
test
ljmp
cmp
jg
iret
imul
mov
sahf
in
push
mov
movsb
xor
pop
stos
movsb
cmpsb
rcr
outsl
pop
push
add
ljmp
fcmovnbe
in
je
clc
and
jp
aad
push
push
ljmp
test
add
push
sub
and
mov
inc
jbe
jae
imul
sub
sbb
and
daa
nop
out
lock
jmp
pop
fcoml
repz
xchg
testl
mov
daa
mov
xchg
lea
push
push
ja
cmp
loop,pn
sbb
mov
mov
data16
xlat
mov
into
sbb
stos
lea
filds
pop
xchg
and
push
fildl
sub
inc
fcmovnbe
ret
mov
aad
dec
lret
fstl
aas
mov
sbb
ss
dec
fsubr
clc
arpl
adc
out
pop
sahf
dec
movsb
xchg
xchg
cmp
and
jmp
gs
cmpsb
adc
pop
loop,pt
mov
out
sbb
adc
pop
mov
add
jo
sbb
adc
lcall
inc
fwait
gs
les
pop
xchg
sbb
mov
mov
dec
clc
mov
mov
cmp
repz
loopne
std
data16
push
loop
inc
and
call
push
jb
adc
cmp
cmp
push
pop
inc
repz
out
cmpsl
loopne
jp
ret
ret
loope
lret
insl
movsl
int3
test
popf
cld
and
jge
cmp
sub
xor
fwait
mov
jno
pop
inc
insb
pop
push
mov
sbb
jmp
aad
mov
imul
push
xchg
sbb
in
pop
fst
lar
dec
ret
out
adc
inc
repnz
mov
jae
arpl
mov
test
mov
jg,pt
mov
sub
call
clc
fidivs
mov
iret
cmc
adc
daa
or
mov
jge
mov
push
daa
sahf
lret
shll
xorb
xor
int
adc
cwtl
pushf
js
js
push
imul
scas
mov
testl
xlat
addl
addb
outsb
imul
aad
in
push
je
cmp
rolb
sar
or
int
flds
mov
cmpsl
cmp
add
insl
in
imul
push
pandn
cmp
nop
mov
and
adc
adc
pop
movsl
pop
lds
sub
ret
add
mov
insl
lds
aam
jl
and
testb
inc
out
sub
sbb
jg
push
pop
clc
sbb
push
pop
movsb
sub
cli
inc
fwait
aam
stc
xor
cmp
pop
andb
mov
cmp
or
sub
dec
lods
mov
nop
leave
subb
dec
aam
or
pop
std
inc
nop
ds
mov
mov
into
loop
jae
bound
and
scas
jo
pop
pop
jge
std
sti
adc
pop
xchg
sub
jecxz
dec
mov
jae
inc
in
dec
xor
cmp
mov
mov
mov
fistpll
sub
rclb
out
cmc
hlt
sub
mov
out
dec
lods
movsb
push
jle
adc
xor
mov
dec
cld
in
fistps
pusha
cs
imul
aad
mov
outsb
add
sub
xor
push
push
cmp
loopne
cs
repz
mov
pop
in
and
push
js
and
dec
scas
cltd
xor
fstpl
push
push
jg
in
das
cwtl
xor
mov
loop
jecxz
mov
or
add
xlat
adc
mov
or
or
mov
pop
mov
lods
loop
or
lock
xchg
scas
mov
xchg
add
fstps
stos
loopne
jle
pop
xchg
imul
pop
pop
sub
dec
mov
int
push
js
dec
jl
loopne
jb
push
dec
pop
lahf
and
insl
adc
jns
test
loop
int
imul
sub
inc
aam
mov
and
icebp
cmp
movsb
enter
int3
jg
bound
jmp
push
loop
aaa
mulb
sbb
les
sbb
pop
cmp
dec
xlat
fcoms
pop
lods
pop
xor
out
pop
into
dec
mov
sbb
add
and
mov
xchg
jg
faddp
sahf
push
xchg
out
xor
lods
and
inc
leave
bound
fbstp
push
pop
jmp
jg
insl
cmc
leave
lcall
cld
add
imul
fsubl
lcall
jae
into
xchg
cltd
and
sets
xchg
scas
je
aam
pop
jle
add
shr
mov
rorl
cld
sub
jae
mov
adc
cltd
mov
in
mov
test
mov
rol
and
lret
mov
pop
inc
repz
mov
xlat
bound
aad
lods
test
adc
ffreep
imul
bound
push
rol
int3
dec
mov
rorl
pop
xor
lods
int3
sbb
vpgatherqq
gs
mov
hlt
movsb
bound
icebp
dec
addr16
repz
mov
mov
xchg
mov
xchg
pop
add
stc
ss
cwtl
mov
jns
jae
mov
jg
pop
test
add
adc
cmp
push
push
fistps
xor
and
je
andb
dec
scas
pop
rcrl
aad
test
fisttpll
xor
ret
mov
mov
popf
xor
push
iret
dec
sub
and
sbb
jne
lds
js
xor
xchg
dec
in
cwtl
mov
adc
movsl
xchg
xor
jno
jl
lock
lcall
sub
add
pop
sbb
jg
add
mov
jno
popf
mov
pop
push
cli
pop
data16
ja
mov
lcall
add
shl
pushf
push
into
idivb
jle
pop
pop
push
daa
jg
pop
and
inc
cmpsl
sbb
and
fldcw
xchg
idivl
loope
repz
pusha
rclb
out
mov
sub
cmp
test
mov
clc
fs
xor
jb
jmp
jo
cmp
out
fs
ljmp
addr16
push
icebp
cwtl
push
dec
in
pop
cmpsb
fdivr
mov
mov
insl
int
in
cmp
test
outsb
and
and
xor
pop
cmp
pop
ja
cmp
ljmp
pop
cld
mov
daa
out
fadds
shrb
xchg
pop
mov
int
rclb
or
mov
fnstcw
pop
rorl
jno
xlat
cli
adc
cmp
lea
push
out
iret
or
cli
jmp
cli
jmp
xchg
arpl
xor
aaa
xorl
ljmp
fcoml
dec
inc
ss
js
out
mov
jns
out
fcmovne
sbb
add
sahf
cmp
test
or
mov
addr16
xchg
pusha
add
lret
xchg
aad
nop
roll
xchg
mov
lods
inc
dec
jle
rclb
scas
pop
call
sub
and
je
sahf
xchg
push
or
add
xchg
push
xchg
outsl
cmp
dec
ljmp
imull
lods
jb
in
xchg
hlt
je
or
fnstenv
or
cs
xchg
xchg
sub
imul
lea
dec
insl
dec
movsb
mov
fmull
xorps
jnp
jb
push
jno
xlat
push
clc
lods
sbb
jnp
sub
sub
mov
jmp
lret
sahf
and
inc
test
and
mov
sbb
fldt
push
ja
ljmp
xchg
loope
outsl
roll
insl
negl
inc
out
vmwrite
adc
inc
ljmp
ljmp
test
lret
jp
mov
mov
or
adc
jns
dec
fldenv
and
push
fdivrs
cmp
mov
nop
popa
inc
lods
push
cld
movsl
pop
jp
pushf
cmpsb
push
inc
pop
adc
mov
or
xor
push
sbb
mov
cmpsl
outsb
sti
xchg
or
add
clc
sar
mov
cmp
inc
pushf
cs
leave
ja
lcall
clc
ja
push
aas
and
add
jo
push
adc
dec
sahf
mov
jno
int3
outsb
popa
insb
cmc
add
sub
frstor
pop
xchg
jnp
push
xor
imulb
ds
sahf
mov
jecxz
movsb
stc
bound
dec
cmp
mov
jnp
test
fisubs
out
out
adc
lock
mov
rcl
jg
es
lods
icebp
in
xchg
jbe
stos
sub
jg
pusha
add
jno
xchg
cmpsl
fs
aad
fidivl
rcrl
sub
mov
inc
aaa
inc
iret
sub
jle
cli
dec
adc
pop
or
in
mov
lock
sub
lret
sub
test
push
shrb
pop
cwtl
pop
je
lds
int
lcall
nop
xor
out
pop
mov
lds
bound
or
xchg
dec
mov
xchg
inc
cmp
inc
pop
jns
dec
dec
cs
mov
lods
aaa
adc
rcll
and
les
lds
imul
pop
mov
cmp
jp
pop
jae
shll
pop
pop
dec
push
in
lret
dec
in
outsb
dec
sbb
scas
xchg
xchg
push
ja
mov
sbb
add
fidivl
aas
and
jp
inc
filds
add
push
adc
js
std
cmp
je
dec
lock
in
xor
jl
sub
sarl
loopne
push
or
repnz
lods
leave
hlt
xor
cmpsb
ficoms
jae
add
imul
add
ffree
outsb
mov
jbe
cmpsb
mov
jae
sbb
cmp
xchg
lods
leave
mov
aad
sub
push
inc
in
repz
test
add
pop
mov
in
mov
sti
cmp
or
imul
and
and
inc
xchg
jo
xchg
stos
je
or
out
scas
xlat
ret
gs
xchg
ds
lods
insl
ljmp
ret
lock
pushf
fwait
inc
imul
stc
test
cmpsl
jle
mov
nop
loopne
push
pop
or
jbe
mov
rcrb
lret
cmpsl
sbb
clc
cld
fs
leave
sub
adc
jne
mov
and
xchg
pusha
push
push
rorl
and
pop
sbb
add
stc
and
mov
es
or
jl
sbb
mov
gs
pushw
sub
movsl
leave
dec
and
push
sbb
fbstp
or
shrb
lea
or
test
jl
repnz
cmp
fisttpl
pop
xor
and
test
and
mov
jp
iret
fninit
pop
jae
mov
mov
mov
cmp
loop
scas
lock
push
dec
adc
rol
push
stos
jb
push
lods
xchg
mov
adc
rcll
in
push
call
cltd
repnz
dec
or
ds
loope
jb
add
shll
lcall
fisttpl
adc
pop
bound
jnp
ret
cmp
inc
fmuls
or
xor
movsb
int3
jae
das
int3
mov
and
into
out
push
jge
fwait
dec
sbb
pop
stos
jmp
jg
mov
sbb
les
adc
popf
push
shlb
push
or
mov
sub
lods
jbe
clc
test
repz
inc
sbb
adc
pop
fdiv
lcall
jb
pop
lock
dec
pop
pop
xor
and
outsl
mov
dec
inc
aas
pusha
sub
movb
loope
inc
push
xor
xchg
jno
lret
fstl
mov
int
jle
pop
ret
fsubrs
sub
nop
inc
mov
inc
test
fwait
adc
lret
call
outsl
out
and
in
scas
in
mov
mov
out
push
pusha
xor
fstps
daa
add
loop
cs
js
iret
or
stos
mov
ljmp
loopne
pop
sub
cs
dec
nop
mov
out
jae
dec
out
mov
test
movsb
loope
push
inc
mov
mov
ss
mov
lret
mulb
sub
bound
pop
mov
in
hlt
push
xchg
or
mov
adcl
pop
sahf
xor
lea
fdivrp
mul
cmp
mov
mov
push
icebp
jb
xor
sbb
movsl
sarb
adc
adc
ret
into
and
das
scas
cs
enter
into
arpl
outsb
in
sub
pop
xchg
fwait
xchg
shrl
lret
lea
icebp
jmp
inc
test
xorb
das
aaa
sbb
lods
repnz
and
push
movb
icebp
out
and
fildll
sub
outsl
aam
stos
divb
mov
loope
push
and
outsl
cmp
inc
imulb
movsl
test
mov
shll
pop
mov
dec
cmp
lods
xor
push
jnp
fcompl
imul
and
ss
int3
and
or
cltd
mov
insb
out
fiadds
push
aam
stos
ret
cmc
sub
cmpsb
or
xchg
in
shr
rcrl
adcb
sar
sahf
or
lret
fcoml
lods
movsl
add
or
dec
leave
cli
mov
into
out
jnp
push
and
adc
lds
pop
dec
sub
addr16
mov
lret
adc
dec
fildll
arpl
dec
jo
xchg
cmp
push
push
mov
movsl
jae
jge
pop
in
fisubl
push
fs
pop
add
in
xchg
lret
rol
gs
scas
mov
mulb
ffreep
insb
in
ja
cmpsl
jmp
jno
push
insb
push
scas
rcrl
lea
and
xchg
mov
mov
xchg
mov
cs
mov
das
test
ret
scas
jno
push
jns
rorl
mov
jb
and
and
cmp
movsb
dec
in
aaa
mov
jmp
imul
dec
enter
mov
sbb
mov
jge
pusha
fcomps
mov
sbbl
pushf
pop
sbb
cs
adc
enter
test
mov
and
xor
out
or
or
cltd
es
lds
pop
inc
jne
add
push
xchg
mov
xchg
jne
rcl
mov
daa
cmp
mov
pusha
and
mov
jae
or
loope
into
addb
imul
ds
mov
pop
add
mov
stos
gs
add
cli
insl
lds
xchg
xchg
bnd
mov
push
pop
neg
xchg
repz
popa
imul
push
cmp
loope
mov
xchg
rcr
leave
lcall
push
call
daa
sbb
push
push
cmp
pop
jge
repz
fwait
mov
xchg
daa
rorl
int3
mov
clc
loope
fs
clc
push
jb
neg
jecxz
loop
pusha
pop
rcrb
dec
ds
push
pusha
push
sub
testb
xor
fcoms
roll
jp
jg
repz
mov
or
xchg
jae
or
divl
loopne
fmull
mov
jnp
xchg
rcrl
dec
lds
sbb
fistpll
rorl
in
cltd
inc
mov
push
or
out
push
inc
aam
lods
or
inc
add
dec
fldt
mov
aas
outsl
sbbl
inc
rcll
cmp
dec
xchg
pop
scas
fistpl
rorl
test
aam
adc
addr16
xlat
and
push
xor
cmp
mov
pop
imul
insb
int
sahf
mov
adc
adc
jg
cmpb
pop
mov
in
sub
adc
movsb
sbb
mov
das
rcr
shl
jne
sahf
and
call
fucom
inc
aas
dec
dec
push
pushf
imul
mov
shll
ss
icebp
xrelease
mov
mov
push
sbb
aaa
cmpsb
jmp
in
out
jno
inc
inc
into
push
push
sbb
cld
add
dec
jne
push
mov
jne
out
ds
and
xor
or
lds
ljmp
jno
jecxz
loop
movsl
inc
push
sahf
mov
repnz
or
outsb
mov
icebp
lods
or
test
cmpsl
scas
pop
pusha
and
loope
aad
sbb
jno
and
pop
js
sahf
mov
sub
leave
cmp
lock
inc
jle
pop
pop
scas
or
addl
push
imul
call
stos
sbbl
dec
fdivl
sbb
push
jno
je
pushf
xchg
xchg
cmpsl
dec
or
xchg
fisubl
mov
cmpsl
push
jge
pop
push
ss
loopne
add
xor
pop
pop
leave
xor
into
mov
pop
cmp
sbb
das
xchg
jae
jl
mov
xchg
data16
cmp
lds
and
xorl
cmpl
jle
sbb
mov
std
lods
out
arpl
scas
cli
rorl
push
sub
outsb
cs
lcall
jecxz
inc
jb
mulb
iret
sbb
mov
mov
mov
shll
popa
cmp
cmp
arpl
sub
fbld
imul
cmp
ret
sahf
mov
not
mov
addl
imul
loopne
ljmp
jmp
popf
dec
jae
pusha
pop
push
test
cmp
cmp
inc
loop
out
inc
push
jecxz
mov
sub
dec
adc
mov
pop
gs
adc
scas
insb
mov
sub
lock
jl
subb
jns
mov
pop
mov
sti
fsubs
add
jmp
and
add
movsb
pop
adc
jns
adc
sti
pop
adc
add
cmp
stos
jb
lds
fstl
out
cmp
xor
bound
jmp
push
sahf
mov
aaa
jle
call
or
push
pushf
sub
mov
dec
mov
es
aad
jp
adc
jae
cwtl
lea
jne
nop
aam
xchg
jnp
bound
or
dec
xchg
sub
iret
xor
iret
jecxz
add
add
push
fstpt
cmpb
mov
mov
enter
adc
and
lds
movsl
sti
inc
mov
xor
icebp
jge
das
and
push
inc
loope
scas
add
or
in
sub
jbe
outsb
lods
push
mov
imul
jo
stc
fisubrs
sbb
adc
xchg
in
pop
addr16
hlt
push
sub
mulb
dec
xor
xor
imul
mov
outsb
mov
movb
js
add
cmp
lcall
add
in
mov
push
mov
outsl
pop
mov
enter
push
negb
pop
ljmp
jnp
daa
mov
rcr
pusha
inc
jp
inc
fisttps
pop
jge
xchg
pop
push
jae
pop
repz
in
adc
and
clc
arpl
jo
and
mov
sub
push
pusha
dec
xchg
insb
sbb
mov
mov
mov
shlb
push
jne
mov
icebp
iret
fstpl
insl
cmpsb
mov
mov
lahf
jmp
js
add
sbb
fsts
pop
push
dec
ud1
or
xchg
cli
jle
subl
je
push
int3
in
adc
lods
mov
pop
call
bound
xchg
and
sbbb
daa
mov
inc
ja
sbbb
stos
mov
aaa
js
jge
push
mov
scas
cwtl
test
int3
pop
out
mov
out
rorb
add
sub
xchg
dec
outsl
mov
into
pop
cmp
mov
mov
enter
ds
insb
jb
add
ret
lret
loop
ds
push
out
addr16
sub
mov
stos
in
fwait
push
das
xor
movsl
ret
inc
dec
jg
xchg
or
mov
push
mov
push
push
mov
sub
mov
das
mov
data16
aaa
in
jg
jbe
pop
pop
cld
and
jmp
fldl
fwait
adc
test
sub
fistpll
push
push
pop
or
cld
dec
mov
mov
call
icebp
inc
push
adc
adc
jnp
imul
dec
lahf
cmp
add
mov
test
insb
je
lock
gs
cld
mov
xor
jne
scas
pop
stos
imul
mov
push
sbb
into
ret
jge
sbb
cs
push
faddl
xchg
sahf
xor
xor
pop
sti
test
hlt
divl
outsb
movsb
mov
lods
pop
in
push
fwait
sbb
xchg
xchg
subb
arpl
sbb
mov
lods
int3
les
mov
insl
jge
stc
mov
pop
and
int
stos
xor
inc
dec
imul
mov
test
loop
jle
ja
dec
mov
inc
insb
icebp
dec
jge
jl
mov
cmp
dec
xor
cmp
xor
dec
sub
push
roll
mov
sub
add
clc
cmp
test
leave
or
push
sahf
mov
loope
out
jecxz
cmp
pusha
lret
xchg
or
or
mov
fmuls
in
cmp
mov
pusha
idivb
stos
fabs
push
iret
pop
xchg
movsb
std
xor
ficomps
adc
adc
cmp
sub
rolb
mov
stos
sub
cmp
out
add
sar
scas
ret
push
and
mov
cmp
mov
imul
repnz
mov
pop
out
xchg
or
in
int3
add
inc
adc
das
nop
push
xor
add
outsb
fcmovnu
jmp
xchg
in
mov
in
scas
mov
and
incb
or
xor
mov
mov
repnz
xchg
lds
pop
xchg
adc
pushf
in
jl
in
test
xor
test
jecxz
sub
jmp
mov
lock
xorl
inc
lods
mov
nop
es
int
mov
add
mov
int3
mov
ret
jg
add
and
inc
jmp
cwtl
jp
imul
test
and
in
aas
popfw
inc
and
clc
sbb
mov
push
pop
in
fistpll
sarl
mov
out
pop
mov
rclb
cmp
dec
adc
xor
fdivrl
xchg
xor
lret
jg
pop
pop
push
and
and
pop
adc
mov
scas
cmp
iret
loop
jge
sbb
es
fdivrl
sub
faddp
sbb
mull
cmp
ret
sbb
push
enter
mov
or
into
mov
outsl
scas
daa
mov
and
cli
std
std
popa
das
xchg
lahf
test
stos
inc
cli
pop
test
mov
fbld
scas
mov
scas
mov
lock
inc
or
sub
jmp
xor
leave
inc
dec
xor
popa
cmpsb
cmp
idivb
fldenv
sub
lret
movsl
push
scas
lds
fcmovnu
jp
inc
arpl
jns
and
mov
pop
push
ret
mov
mov
popa
imul
pop
sbb
push
fsts
cmp
fcmovnb
xchg
adc
pop
outsb
xchg
inc
fnstenv
fcmovnb
push
imul
xchg
ja
and
les
ss
adc
pop
inc
out
js
fildll
sub
sbb
inc
pusha
rorb
outsl
iret
inc
lcall
adc
jge,pt
push
idivb
je
cmc
mov
sarl
lods
sub
inc
ret
iret
push
mov
sub
into
xchg
ret
mov
lahf
and
dec
scas
mov
std
push
stos
vpmacsdql
pusha
ficoml
jae
clc
dec
mov
push
les
bnd
push
cmpsl
out
sbb
jbe
mov
call
pop
loopne
insb
imulb
int3
outsl
inc
adc
leave
test
dec
inc
scas
mov
insb
popa
mov
mov
mov
jb
pop
jg
repnz
xor
dec
movsb
mov
xchg
and
or
cmpsb
aaa
adc
icebp
xchg
mov
or
aaa
inc
ret
pushf
inc
xchg
aaa
pop
cmp
inc
movsb
jg
or
jno
xchg
insb
and
fcmovbe
icebp
sahf
push
shrd
imul
xchg
lods
pop
adc
hlt
xchg
nop
lea
cmp
push
loopne
xchg
mov
aaa
push
cwtl
mov
push
sub
lock
sub
addl
fldl
or
aad
sub
ret
push
int
aas
in
push
push
insl
pop
mov
addr16
out
sbb
push
outsb
inc
dec
hlt
push
dec
sbb
xor
dec
dec
xor
mov
stc
cwtl
pusha
pop
xor
push
xor
out
icebp
xchg
iret
outsl
xchg
data16
aam
push
pop
xor
push
test
cli
xchg
aas
ljmp
push
jbe
cltd
dec
dec
mov
lret
lcall
imul
jle
lret
mov
jg
cmpb
xchg
push
frstor
add
outsb
pop
cwtl
iret
dec
shrl
sub
jno
pop
xor
xchg
or
inc
inc
xchg
mov
out
loopne
push
rorl
popf
adc
scas
jno
mov
or
adc
dec
mov
mov
add
ja
subb
stos
popl
jae
repz
out
push
enter
mov
outsl
cmp
jg
rol
xor
adc
adc
dec
sarl
sub
stos
adc
lret
cwtl
fmul
icebp
add
mov
in
push
xchg
mov
mov
pop
pop
push
push
call
outsl
and
pop
in
mov
adc
jno
testl
hlt
xor
inc
xor
imul
lds
push
push
lods
adc
adc
cwtl
and
adc
jecxz
mov
leave
jb
mov
inc
add
rorl
inc
aaa
shlb
sub
sub
arpl
and
lea
jle
push
jae
leave
sqrtps
xchg
mov
shrb
pop
and
jecxz
and
sbb
addr16
mov
inc
sub
test
push
enter
xor
pop
adc
inc
mov
adc
jno
ror
lahf
bound
or
cmp
rorl
cltd
sub
icebp
push
xor
lret
out
test
aas
sahf
std
fstpl
addl
popa
test
inc
aam
shl
add
fprem
or
lods
jmp
aam
call
inc
xor
loope
pop
movsb
fnstsw
sub
outsl
push
repnz
and
lret
in
movsl
shll
cmc
jle
je
xchg
cmp
push
adc
mov
out
adc
adc
mov
sub
int
adc
mov
push
int
add
mov
mov
mov
gs
xor
push
aaa
xlat
test
cs
sbb
sbb
bound
or
cld
jno
test
adcb
stos
jp
aad
push
insb
les
in
leave
add
test
sub
dec
sbb
sub
push
lahf
dec
xor
jmp
push
add
pop
or
inc
mov
inc
jbe
loop
pop
pop
add
jmp
cmp
scas
jno
adc
in
call
push
iret
into
and
and
insl
mov
xchg
test
out
mov
and
or
xchg
sub
sub
in
mov
daa
mov
outsb
mov
sbb
xor
xchg
dec
enter
inc
test
loope
cs
jmp
sub
jo
sub
fucomi
cltd
lea
jbe
dec
push
add
in
cmpsl
aam
addr16
sub
mov
stos
insl
xchg
test
mov
sbb
cli
pop
in
jmp
inc
insb
es
fistps
int
sub
outsb
sbbl
mov
mov
inc
arpl
cld
cld
mov
movl
shll
shrl
add
adc
pop
test
pushf
sub
negb
insb
sbb
scas
mov
ret
loope
movsb
jmp
sbb
jecxz
add
or
or
std
bound
test
inc
mov
leave
add
cwtl
mov
dec
mov
clc
andb
mov
add
jne
jle
push
div
loop
aaa
fisttpll
jg
movsl
mov
mov
pop
mov
cmp
inc
adc
popa
stc
mov
dec
push
mov
dec
jmp
js
insb
lahf
mov
or
xchg
add
dec
fiadds
xor
mov
pop
push
dec
sbb
cmp
ds
stc
mov
xchg
inc
mul
add
jo
cmp
les
popf
shrb
adc
ss
inc
fsts
inc
jbe
xchg
adc
repz
enter
lds
xchg
cmc
mov
push
mov
add
inc
rcll
or
ja
adc
je
out
scas
jno
insb
sahf
mov
aaa
mov
xor
mov
cmpsl
cmc
sub
ja
stos
pushf
or
or
pop
mov
mov
mov
loopne
lods
popa
outsl
mov
push
cmp
in
push
out
imul
pop
mov
mov
and
dec
std
dec
outsl
push
cmpsl
push
cmp
in
jmp
lds
int3
dec
jne
and
sub
push
xchg
push
or
fcmovnb
gs
jo
add
loopne
pop
pop
adc
aas
jnp
cs
je
lods
aas
mov
cmpsb
sub
xchg
pushf
inc
sbb
cmp
xor
push
ljmp
lock
loop
dec
rcrl
cmp
push
out
loopne
cmp
imul
push
aam
ja
inc
adc
mov
add
dec
bound
pop
push
dec
insl
xchg
fwait
jl
lds
adc
inc
mov
outsl
xor
dec
xor
ds
mov
out
mov
js
and
xchg
xor
fisubs
push
push
leave
pop
enter
repz
ds
je
out
sti
xor
and
rcrl
jo
mov
pusha
sbb
sub
aam
ud0
in
inc
pop
movsl
std
repnz
xchg
and
dec
sbb
sub
arpl
jno
or
sub
movsb
into
pop
fldl
adc
orb
int3
mov
mov
mov
lock
dec
jae
and
mov
push
adcb
mov
dec
add
and
sbb
and
pop
cmc
or
enter
lret
or
int
cmp
jno
js
andl
das
jae
sub
data16
loopne
jno
fwait
and
movsb
xor
test
push
xor
mov
cmp
nop
in
pop
vdivss
dec
add
insb
xor
jmp
cmc
stos
int3
cmp
popa
sbb
clc
sbb
outsl
fs
xchg
push
arpl
outsl
mov
or
in
pop
push
mov
cli
pop
gs
cwtl
sub
mov
das
dec
mov
and
ss
jp
add
push
push
insb
cmp
insl
out
repz
mov
push
icebp
arpl
out
imul
out
pop
xchg
icebp
adc
lret
fistl
popa
jecxz
mov
lods
add
cmp
and
jge
stc
sub
and
outsb
fnstsw
dec
addr16
sahf
xor
sbb
insl
dec
xchg
cmp
arpl
lcall
mov
xor
sub
out
arpl
sbb
and
pop
mov
mov
out
lea
push
data16
imul
mov
ds
jae
imul
or
xchg
xor
ss
sbb
sub
fs
and
pop
push
mov
dec
cli
loopne
xor
push
daa
sub
jno
mov
je
mov
and
les
orb
loop
mov
add
inc
fucomi
jge
int
add
xchg
sub
fsubl
cli
sbb
mov
std
pop
test
add
sub
push
or
pop
idivl
cmp
imul
aas
rorl
mov
mov
aas
xor
sbb
cmp
or
cmp
jmp
aam
stos
adc
les
push
lods
movsl
adc
push
jecxz
bound
arpl
cmp
fcompl
or
pop
scas
and
shll
aaa
into
pop
out
ds
pop
popa
sahf
inc
lahf
dec
scas
lock
ficoml
and
rcrl
and
inc
rorl
popf
pop
dec
ss
cli
jnp
dec
int3
inc
es
mov
dec
lods
sub
fildll
pop
sbbl
ret
jnp
arpl
dec
sub
cwtl
jg
lods
mov
inc
lods
jnp
out
loopne
bound
imul
loop
js
int3
stos
mov
push
xchg
clc
fwait
inc
scas
jmp
mov
ja
sbb
sbb
mov
pop
ss
mov
cmc
out
inc
jo
ss
jl
pop
sahf
insb
gs
dec
jecxz
push
adc
mov
imul
xor
fstpl
loop
sbb
mov
lcall
addr16
nop
rcrl
js
scas
adc
mov
out
and
out
and
pop
ljmp
popf
call
lret
inc
pop
cmp
imul
je
into
lret
add
sub
enter
lea
decb
mov
popa
stc
mov
in
xor
or
fistps
in
enter
dec
jne
adc
push
cmp
loop
xchg
mov
add
cmp
xor
sbb
and
into
mov
mov
sub
lret
cmpsl
pop
push
push
pop
or
pop
loope
hlt
or
push
std
adc
stos
mov
xchg
and
pop
repnz
stos
mov
ret
cmpsl
mov
jae
dec
lret
xor
call
mov
mov
loopne
mov
movsl
dec
pusha
cmc
jne
mov
jae
push
ss
xchg
sub
adc
push
scas
sbb
pushf
mov
cmp
pop
movsl
shl
xchg
jb,pn
or
mov
push
pop
or
xor
movsl
inc
aas
out
int3
add
mov
jno
mov
jns
loopne
fs
fstps
pop
push
sub
mov
adc
jns
mov
push
xchg
jbe
mov
xchg
shlb
add
mov
hlt
sub
push
and
lods
xchg
dec
jle
and
dec
stc
andl
movsb
xchg
addr16
xchg
and
xchg
xchg
repnz
adc
out
xor
sbb
rolb
mov
and
ret
and
daa
cmpsb
add
gs
mov
in
pop
cmp
ljmp
jb
shlb
lret
or
push
mov
out
jg
inc
in
pop
xchg
push
hlt
in
push
pop
data16
repz
mov
jle
cmpsl
or
cmp
ret
dec
subb
cmp
sub
dec
into
cmc
shlb
pop
pop
les
mov
lods
fisttpl
jl
dec
mov
dec
jge
cmp
data16
jg
push
aam
add
das
rol
push
xchg
hlt
sbb
fcomp
inc
ret
or
je
xchg
je
lods
out
fsubp
repz
aam
jmp
or
popa
pop
sahf
enter
cmp
loop
setge
std
int
loopne
pop
jmp
add
push
xchg
lods
xchg
out
adcb
mov
fcomps
pop
mov
or
lods
mov
enter
imul
adc
mov
push
lds
xchg
loop
xchg
mov
sbb
rol
inc
cmp
fcmove
xor
fadd
nop
repz
scas
js
fsub
popa
test
and
mov
lahf
pop
out
dec
or
adc
and
lods
inc
xchg
into
outsb
inc
mov
imul
add
mov
jns
lods
dec
fmuls
xor
cmp
sub
rolb
mov
sbb
scas
mov
sbb
rcr
mov
stos
pop
in
xchg
sub
inc
in
push
mov
ss
pusha
mov
popa
pop
lods
xchg
sbb
push
outsb
cwtl
mov
pusha
pop
mov
or
jo
movsl
pushf
cmp
test
xchg
sbb
stos
jl
sub
cld
jnp
mov
xchg
jmp
stc
fs
lret
adc
sub
mov
shlb
mov
xchg
xchg
dec
sbb
into
aam
ljmp
inc
lahf
dec
pop
cs
lahf
shrb
lcall
mov
add
sti
xor
sbb
xchg
jge
jns
pop
xchg
test
loope
rolb
mov
ja
imul
imull
mov
rcr
aad
jmp
pushf
sbbl
xor
mov
lret
leave
cmpl
cmp
xchg
lret
addl
fists
movsl
jno
ret
mov
jb
and
push
mov
mov
out
sti
add
inc
jle
push
xchg
xor
aad
in
in
or
adc
lret
mov
mov
stos
or
mov
enter
sub
add
sbb
mov
repnz
imul
mov
or
jle
lods
popa
cmpsb
add
sub
dec
inc
lea
test
cs
lret
sbb
test
or
subl
mov
pop
pop
fldln2
insb
mov
push
in
in
or
mov
sub
addl
pop
daa
scas
test
rolb
or
mov
mov
pop
and
pop
add
push
xor
insl
inc
add
scas
test
adc
int
rcr
jbe
out
push
push
jl
fnstenv
mov
push
das
adcb
jecxz
xor
mov
pop
ds
enter
insl
jns
xchg
hlt
push
int
pushf
shll
mov
push
mov
leave
fldcw
pop
xlat
aaa
pop
pop
adc
inc
aad
mov
pop
movsl
xchg
jne
mov
mov
mov
xchg
cmp
cmp
push
push
mov
xchg
cli
pop
rcll
mov
lcall
aaa
dec
mov
and
icebp
adc
sub
or
int3
sbb
pop
pop
or
cmp
mov
sub
adc
pop
cmpl
sub
xchg
and
cmp
idivb
mull
cmpsl
dec
ja
js
mov
in
fldl
les
add
faddp
vsqrtps
mov
mov
test
in
dec
shrl
std
mov
jns
data16
jg
mov
sarb
adc
inc
pop
push
pop
sbb
repnz
aas
nop
orl
cmpsb
xor
cmp
xor
daa
enter
adc
mov
add
inc
and
into
and
repnz
xchg
in
pop
mov
ja
add
cmp
inc
jbe
pusha
cli
push
cmpsl
xchg
mov
ss
cmp
lret
addb
and
inc
arpl
arpl
mov
gs
test
pop
dec
push
lods
xor
pop
lahf
mov
rcl
or
sub
cwtl
es
adc
add
enter
in
sub
jge
in
nop
mov
addr16
movd
xor
cltd
subl
lea
xlat
stos
mov
xchg
inc
xor
movsb
dec
pop
jae
call
push
jp
ds
int3
sbb
mov
aad
leave
sbb
xchg
add
arpl
into
popf
or
dec
xor
push
or
aam
cmpl
jecxz
fs
icebp
pop
dec
fidivl
dec
iret
es
pop
inc
out
pop
repz
pop
mov
stos
xchg
rol
sbb
inc
or
xchg
jp
and
js
cld
sbb
or
stos
shr
icebp
mov
push
dec
mov
popa
jns
and
mov
outsl
outsb
mov
shll
jg
in
test
dec
shrl
call
push
mov
repz
out
add
pop
repnz
andb
enter
push
sti
inc
js
out
mov
ljmp
es
int3
push
lret
std
pop
jns
add
mov
pop
add
lret
aas
lret
mov
and
cs
in
loopne
dec
add
fistpl
outsl
mov
pop
lahf
decl
pop
int3
xlat
push
mov
pop
sbb
scas
int3
das
cld
fnstsw
sbb
or
repnz
cmp
push
outsb
hlt
adc
shrb
mov
sub
cmp
add
popf
nop
jae
addl
mov
add
fnstcw
neg
cmpsb
jns
mov
je
out
lea
mov
out
aaa
sti
sub
cltd
xchg
cld
mov
inc
sub
sub
test
xor
jl
fistl
inc
jle
jae
popa
sarl
in
sub
test
fldcw
pop
inc
xchg
jl,pn
test
aas
mov
inc
mov
push
xor
cld
xlat
in
outsl
mov
inc
cs
int
mov
mov
dec
jmp
hlt
push
jecxz
adc
inc
jecxz
scas
frndint
mov
and
ljmp
stos
pop
test
pop
daa
popf
mov
pop
pop
test
mov
and
fwait
js
test
test
mov
jecxz
mov
xor
stos
jne
add
fmull
xlat
insl
rcll
fucom
xchg
js
mov
std
xchg
adc
bound
dec
pop
fmuls
call
test
test
leave
xacquire
insb
push
mov
lods
inc
lock
in
pop
fbld
mov
or
adc
scas
test
das
xchg
jp
add
xchg
mov
mov
xor
repnz
push
xorl
ds
dec
lock
pop
nop
test
ss
inc
lds
and
ljmp
insl
jmp
aaa
lahf
push
or
insb
jecxz
jns
jns
push
int3
or
pop
pop
call
fldenv
sbb
daa
pop
stos
mov
jg
cli
jg
outsb
shl
xor
sti
dec
push
orb
mov
push
or
mov
inc
add
add
inc
daa
or
dec
fstpl
mov
addl
movsl
jmp
mov
test
inc
mov
sbb
sub
das
shr
in
jo
inc
lds
adc
iret
lret
sbb
outsl
mov
dec
mov
dec
loop
inc
js
shll
aas
popa
loop
mov
and
xor
pop
pushf
loopne
mov
jp
adc
add
cmp
mov
fildl
add
adc
popf
mov
pop
mov
dec
insb
fisttpl
cmp
mov
loope
add
push
loop
and
rcll
outsl
in
das
rclb
dec
mov
adc
push
pop
dec
jns
pop
mul
push
fldenv
mov
fmull
jl
and
pop
bound
jno
repz
and
ljmp
stos
cs
loop
mov
pop
sbb
jmp
out
and
jmp
cltd
icebp
jecxz
dec
mov
stos
lcall
cli
lret
loopne
insb
xor
loop
fistl
jno
and
data16
dec
rcl
jecxz
inc
push
imul
mov
out
sbb
imul
repz
pop
mov
ds
jbe
mov
jbe
lods
ja
xor
dec
subb
adc
cld
adc
xor
cs
aam
pushf
sbb
ret
pop
mov
push
movsl
outsl
mov
dec
mov
loop
mov
jne
jg
dec
sbb
mov
fstl
ds
dec
sub
jmp
push
scas
cmp
xchg
dec
cmp
mov
cwtl
repnz
stos
iret
inc
in
add
mov
mov
xor
addb
adc
in
jbe
lret
imul
push
das
xor
cmp
das
pop
lds
jmp
lock
xchg
cs
mov
xor
aas
test
stos
add
or
pop
mov
pop
and
push
lahf
cmp
push
int
jl
mov
mov
shll
outsb
mov
mov
cmp
add
jbe
xchg
inc
nop
test
scas
ret
or
sbb
aam
sub
sub
and
cmpsl
popa
xor
lret
outsl
sub
mov
push
jle
ss
and
sub
aaa
ss
loopne
fstpl
jno
lock
cmp
inc
addl
cmp
xor
ja
ds
dec
push
dec
mov
cmp
shlb
dec
mov
aad
cmp
mov
xlat
fldt
jl
fcmovb
mov
xchg
pop
aad
add
bound
jle
sahf
in
jl
push
mov
sbb
dec
sbb
int3
lahf
sub
sub
mov
push
mov
dec
dec
jp
gs
jmp
push
shll
mov
xchg
mov
inc
push
out
mov
test
iret
das
inc
dec
dec
lods
mov
mov
pop
xlat
cmp
movsb
roll
sub
in
rolb
jg
pushf
in
ret
inc
stc
cld
inc
test
or
sbb
add
stos
aad
sub
xor
mov
stc
test
jmp
decl
xlat
fmuls
inc
mov
mov
inc
popf
jecxz
test
rol
scas
in
aam
mov
arpl
js
shrl
scas
jnp
sbb
and
dec
pop
sub
inc
hlt
clc
and
fadd
decl
out
dec
icebp
lret
xchg
cli
in
notl
jg
dec
jo
and
adc
pop
xlat
lea
sbbb
pop
or
and
rcr
das
mov
xor
xchg
shl
das
call
adc
add
ljmp
mov
or
mov
inc
xchg
pop
ficompl
add
js
lea
shlb
ja
dec
aaa
in
add
aam
loopne
test
clc
les
inc
repz
fs
pop
jmp
inc
mov
jmp
and
dec
or
mov
add
aam
or
mov
pop
int3
cmpsb
ss
roll
pop
jmp
pusha
int
mov
or
jecxz
bnd
dec
sub
mov
test
sub
out
lahf
sahf
sub
xchg
or
xchg
cmp
or
inc
and
xor
dec
jle
jae
sbb
pop
mov
xchg
test
jo
fs
xlat
jne
pop
xor
add
pusha
stos
push
jle
xor
ret
cmc
addr16
int3
push
jne
adc
lea
fwait
and
add
cwtl
pusha
mov
pop
roll
mov
mov
cli
cmpsl
xchg
pop
mov
mov
ret
mov
movsb
dec
xchg
imul
mov
jns
push
rorb
stc
inc
cmp
adc
mov
and
fdivrl
into
adc
ret
xlat
ljmp
aaa
and
pop
adc
popf
pop
cltd
push
pushf
and
call
sbb
mov
mov
stos
popa
lds
mov
push
jmp
fcoml
ja
aas
outsb
into
jno
out
in
iret
xchg
ljmp
push
leave
xor
mov
dec
mov
daa
les
test
imul
mov
into
js
mov
and
mov
lahf
sub
cld
sbb
fldt
mov
mov
pop
cmp
push
sarl
loopne
pop
mov
ss
aam
subb
jge
mov
dec
or
mov
int3
sub
aas
push
push
dec
inc
scas
nop
add
and
pop
push
test
ds
bound
scas
idivl
fldcw
xlat
in
lods
inc
dec
fs
sub
or
sbb
lahf
sbb
add
clc
aaa
addr16
or
lods
sti
cmp
pusha
clc
pop
in
or
cli
pop
stc
ljmp
mov
test
outsl
fs
xchg
mov
xor
repz
sbb
outsb
into
test
mov
sub
mov
out
pop
fmuls
adc
push
fstpt
push
jno
aad
ret
add
mov
inc
and
ljmp
mov
jnp
cltd
jmp
dec
mov
fs
aad
incb
call
out
pop
and
lock
sbb
jecxz
sub
aaa
mov
dec
dec
cmp
inc
sbb
in
dec
inc
loop
and
mov
lret
in
repnz
data16
movsl
mov
lcall
jne
loop
test
repz
xrelease
adc
or
decb
loope
xchg
insl
xchg
in
dec
imul
push
fnstcw
jnp
addl
and
daa
sbb
xor
sbb
add
subl
push
cmc
sbb
lret
adc
push
inc
mov
mov
xlat
loopne
jg
cltd
insl
aaa
mov
sub
or
test
sar
test
out
repz
inc
or
mov
push
dec
dec
movsb
adc
scas
add
push
sahf
jmp
push
cmpsb
adc
mov
mov
or
xor
or
jge
jl
xor
ret
adc
dec
movsl
addr16
mov
outsl
stos
addb
lcall
mov
add
xchg
jnp
mov
sbb
or
xor
and
dec
lret
fisttps
cli
mov
xchg
jge
cmp
fisubrs
jnp
sbb
sub
loopne
cmp
cmp
jns
mov
rcrl
cli
fsubs
sub
nop
inc
sbb
lock
jnp
es
cmp
hlt
jo
ret
test
pop
fwait
mov
push
out
adc
gs
jmp
cmp
push
add
xchg
push
enter
jmp
arpl
mov
or
jl
adc
xor
pop
mov
adc
popa
adc
test
imul
dec
push
push
cs
xchg
add
ljmp
push
inc
inc
idivb
adc
lret
std
nopl
pop
mov
les
enter
lret
mov
popa
roll
inc
xchg
mov
xchg
pusha
mov
pop
pop
push
lods
xchg
das
repnz
xor
cmc
push
repz
sbb
sub
cs
mov
pop
gs
imul
push
sbb
or
jmp
orb
int3
and
adc
xor
xor
cmp
imul
mov
and
es
push
fimull
mov
mov
cwtl
lea
mov
call
rorl
pop
mov
and
inc
inc
add
pop
ret
push
js
add
dec
dec
or
loope
lea
xor
aas
gs
mov
pop
aad
mov
imul
iret
jae
repz
dec
into
mov
jne
adc
mov
popa
mov
icebp
and
gs
outsl
test
fsubr
sarl
add
push
mov
cmpsl
mov
mov
fildll
sub
cwtl
dec
enter
pop
pop
and
outsl
cmpxchg
outsl
xchg
xchg
xchg
mov
test
roll
xor
push
icebp
mov
pusha
lods
test
inc
icebp
sbb
out
lock
xlat
cmp
mov
testl
dec
xchg
ds
jae
shl
push
sub
add
pcmpeqb
mov
sbbb
leave
testb
cli
outsb
lods
mov
pop
scas
cmp
xchg
pop
sub
pusha
incb
loope
outsw
popa
mov
lahf
xor
loope
push
cli
cmp
dec
mov
clc
dec
ljmp
jp
lcall
loopne
add
push
cld
and
repz
icebp
push
out
out
xchg
dec
jmp
mov
bound
jmp
fwait
jo
inc
pop
jo
shll
mov
js
insl
lods
xor
adc
add
shll
and
jg
sbb
or
mov
or
scas
xchg
inc
pushf
xor
mov
sub
mov
add
adc
sub
xor
repz
or
lahf
mov
pop
jle
jecxz
jl
js
in
xor
lods
xor
mov
iret
jecxz
imul
call
add
ret
repz
cmp
pop
fdivrs
in
mov
cmp
adc
arpl
in
xchg
adc
add
dec
faddl
popa
cs
push
adc
sbb
ret
jle
sub
leave
xchg
or
outsl
stos
fisttpll
jmp
pop
adc
arpl
dec
shrl
push
add
and
xchg
jno
lahf
mov
push
add
or
jle
push
movsb
xorl
cs
aas
imul
call
pop
fsub
in
call
daa
mov
aam
sti
pushf
mov
inc
bound
test
shlb
js
call
nop
imul
loopne
addr16
inc
outsb
cs
imul
mov
push
in
pop
in
lods
les
inc
xchg
nop
cmp
push
ljmp
xchg
or
pusha
ret
xchg
pop
adc
stc
push
xchg
push
imul
loopne
jb
cltd
aam
shr
cmp
mov
mov
bound
leave
sarb
adc
dec
dec
cmp
in
pop
sbb
popa
dec
rcrb
insb
xor
push
add
insb
shlb
int
cs
add
mov
inc
add
cmpsb
mov
and
or
test
jo
and
inc
bound
pop
xchg
ljmp
push
jmp
push
enter
xor
insl
mov
inc
leave
cld
cmpsl
out
lea
jns
push
mov
mov
arpl
mov
inc
push
ret
sub
dec
or
lahf
push
push
popa
shll
xor
sahf
cmc
aam
and
adc
mov
test
adc
xchg
incb
add
jne
dec
ja
ret
pop
dec
stos
cltd
jecxz
adc
sti
shlb
lret
fs
adc
jb
xor
or
sub
lahf
imul
sub
xchg
pushf
repz
pop
rolb
cmp
xor
popa
test
adc
or
inc
sbb
jmp
push
cmp
cs
and
cmp
mov
sti
aam
sahf
stos
fisubl
inc
cwtl
push
xchg
dec
int3
xor
ds
in
test
mov
rcll
xor
stos
subl
add
and
pop
push
daa
dec
and
ud0
cmp
stos
in
aas
mov
js
test
sarb
fildl
sti
mov
sbbb
icebp
clc
stc
in
push
jb
mov
outsb
pusha
loopne
mov
mov
sbb
adc
loop
mov
pcmpgtb
sarl
ret
and
test
lret
jnp
xchg
subb
dec
fistpl
lds
jp
popa
shlb
xlat
aas
xlat
jmp
adc
xchg
ds
ljmp
push
int
push
jae
in
adc
ss
xchg
and
data16
jecxz
popa
andb
cmpsl
insl
inc
das
pop
test
jle
dec
mov
jbe
sub
ljmp
mov
test
fidivrs
xchg
loop
stos
xor
push
sub
cmp
sub
xchg
leave
stos
mov
mov
stos
sbb
inc
push
call
rcr
xor
xor
in
push
pop
xchg
mov
cmc
push
inc
add
pop
push
cli
sbb
dec
or
jg
lret
imul
rclb
ficomps
aam
loopne
jno
pop
jae
jbe
out
dec
fnstsw
add
fildll
and
inc
ss
sub
dec
sbb
and
arpl
mov
inc
mov
mov
std
adc
ficomps
in
cmp
into
fildl
sahf
inc
mov
in
dec
lock
js
imul
mov
mov
insl
add
out
dec
jne
sbb
shll
incb
dec
int3
subl
jecxz
clc
jae
xor
mov
jle
shl
scas
mov
add
mov
addr16
ja
mov
jg
pop
mov
test
rorl
mov
or
and
jle
pop
inc
pop
and
out
scas
push
or
nop
fistpll
push
xchg
dec
mov
xchg
insb
mov
loop
lds
orl
lods
imul
adc
push
mov
add
ffree
adcb
dec
sbb
mov
negb
hlt
jp
lretw
sbb
cmp
rcr
in
repnz
loopne
icebp
ret
decl
cmp
in
push
pop
jl
and
lret
push
cmpsl
hlt
scas
and
sbb
cmc
sbb
cli
jp
add
insl
push
shl
jb
or
ret
js
mov
stos
ja
cmp
mov
pop
cmp
sbb
xchg
jno
or
stos
js
loope
dec
imul
sub
addb
div
inc
adc
xor
mov
xchg
ljmp
pop
and
mov
shrl
mov
ficoml
dec
fstps
inc
pop
rcrl
sub
mov
in
repz
jp
imul
mov
and
xchg
xor
mov
xor
shlb
cmp
xchg
movsl
inc
mov
sbb
mov
aam
lret
jg
pushf
rclb
adcb
jnp
stos
data16
cmp
jno
sbb
movsb
lret
push
dec
inc
xorb
movsb
mov
hlt
push
loope
xchg
pushl
sbb
insb
jo
data16
cmp
fsub
xchg
jno
hlt
mov
sub
pop
lret
sub
sbb
mov
jge
lods
inc
mov
pop
and
adc
jns
jbe
les
cs
dec
lods
nop
and
ss
bound
idivb
mov
adc
jnp
fidivrs
inc
fsubrs
sub
inc
cmp
repnz
sub
dec
sbb
insl
les
mov
xchg
jbe
aaa
shlb
out
pop
xlat
xchg
movsl
insl
push
dec
mov
mov
cmc
jge
jo
stos
inc
jp
cmp
repz
mov
cmpsb
cmpsl
data16
jae
jle
and
push
jg
popa
ficoms
or
jb
es
shll
rorb
and
ret
sbb
std
pop
cmpsb
or
clc
push
mov
pop
add
cmp
fnstenv
inc
sub
or
imul
lds
cmpsb
scas
jmp
pop
je
subb
ret
sbb
arpl
mov
aaa
lock
jns
jns
xor
lods
or
lret
movsb
hlt
xor
lods
pop
pop
movsb
xchg
and
test
dec
pop
cmp
ret
mov
and
or
cmp
ja
jp
in
js
cmp
add
mov
insl
jle
mov
out
push
pop
stc
shll
mov
out
testb
out
int3
shrl
inc
jbe,pn
sbb
stc
or
adc
imull
dec
in
stos
cmp
and
ret
loop
or
dec
push
imul
sub
sbb
or
lea
scas
xchg
lahf
cmpl
loope
dec
loop
cli
mov
xor
out
movsl
xor
popa
cli
incl
mov
or
imul
and
mov
dec
sbb
jb
fldenv
pop
stc
adc
mov
lcall
push
xor
out
jl
xchg
dec
sbb
cmpsb
mov
lahf
test
push
mov
outsb
fwait
push
xor
std
cmp
xchg
sbb
mov
pop
mov
aad
xchg
push
sub
test
daa
jns
or
cmpsl
data16
ljmp
or
dec
pshufw
into
and
filds
lahf
mull
dec
mov
and
jmp
push
into
sub
mov
icebp
xchg
popa
popf
out
andb
ljmp
and
xchg
stos
flds
repz
cwtl
cld
insl
repnz
outsl
pop
sub
push
cmc
outsb
lods
cmpl
mov
popf
movsl
or
aaa
sahf
addr16
sahf
incb
js
in
das
or
out
lea
inc
jmp
aam
aas
lds
lret
or
adc
fwait
shrb
bnd
or
hlt
addb
stc
jl
aad
ret
aaa
pushf
imul
lcall
xor
lahf
jp
mov
sbb
and
sub
push
mov
adc
adc
jns
pop
cmp
mov
jmp
test
hlt
dec
jge
mov
dec
mov
cmpsb
dec
push
lret
outsl
pop
add
das
pop
loope
mov
ret
lods
add
es
adc
aad
cmc
sbb
pushf
lds
and
pop
fists
mov
inc
xor
in
pop
jne
out
pop
pop
loopne
dec
sub
imul
pop
out
mov
push
xor
lds
mov
inc
pop
dec
ja
mov
jecxz
test
or
inc
xchg
sbb
or
cmp
sbbl
add
aaa
push
icebp
jecxz
jb
push
push
negl
ljmp
insb
sarb
pop
xor
notb
mov
sub
hlt
les
cli
push
add
gs
lods
sti
daa
ret
or
mov
lods
loope
pop
or
xor
mov
xchg
cmp
or
jp
testl
push
xchg
xlat
jno
int
nop
cmc
mov
lods
lcall
fmul
loop
push
pop
pop
xor
out
iret
bnd
jl
sbb
ljmp
add
xor
jecxz
popa
sbb
addl
push
enter
push
std
cwtl
je
lea
pop
jnp
subl
imul
notb
mov
je
or
push
jne
push
cwtl
lods
cs
fcoml
out
loope
popa
js
mov
test
lea
filds
or
mov
notb
pop
rep
cwtl
mov
outsb
movsb
mov
jp
repnz
or
dec
shlb
unpckhps
pop
test
adc
fisubs
test
xchg
es
add
push
xchg
jge
adc
scas
mov
pusha
fldenv
enter
and
int3
ds
fwait
icebp
jnp
sar
push
test
mov
inc
add
popa
fucomp
pop
pushf
inc
aam
les
sub
cmpsb
lea
out
repnz
xchg
int3
mov
xchg
jo
lea
or
mov
in
pusha
je
adc
dec
pop
xchg
mov
ret
dec
decb
ja
and
sub
inc
mov
mov
and
pop
scas
cwtl
jecxz
jb
out
mov
in
fwait
mov
mov
pop
xor
dec
in
xchg
jge
repz
cmp
dec
rcr
in
movsl
loop
stc
mov
lock
xlat
or
adc
add
adc
cmp
cmp
adc
inc
or
mov
add
cli
btr
rclb
not
pop
add
jp
xchg
pop
xchg
push
inc
test
sahf
adc
pop
mov
or
cmpsl
lods
jb
mov
lods
fwait
lock
sub
sub
xchg
adc
mov
mov
cmp
lods
lret
cmp
mov
adc
mov
test
cmp
push
jns
dec
movhps
into
daa
sahf
nop
inc
jmp
xchg
jno
push
inc
sub
insl
jne
xor
int3
inc
jl
jne
sbb
push
mov
pop
jg,pt
cmp
fldenv
and
movsl
lahf
push
mov
push
pop
aam
xor
mov
pop
in
cld
mov
mov
adc
and
mov
nop
mov
jmp
dec
nop
ds
jae
popf
pop
fisttpll
arpl
mov
negb
popf
in
aad
fstpl
adc
xor
and
jno
xchg
xchg
pushf
fstpt
icebp
stos
fisttpll
pop
idivb
cmp
sbb
fidivs
stos
jmp
fst
mov
mov
push
xchg
popf
rorb
dec
pop
inc
loop
cmp
out
xorb
pop
mov
mov
lcall
inc
scas
mov
test
repz
cmp
jo
adc
lods
outsl
fdiv
mov
push
stos
and
dec
out
rcrl
mov
mov
lock
pusha
insb
es
push
idivl
push
out
jne
sbb
adc
xchg
sti
cli
pcmpeqw
and
clc
cmpsb
stc
out
jge
loop
fsubs
int3
push
rcr
fs
add
hlt
popf
std
push
push
sbb
mov
or
xchg
and
fcmovnbe
adc
add
dec
inc
call
out
inc
fs
mov
js
test
xor
sbb
hlt
xchg
js
push
add
and
lahf
outsb
xchg
mov
cmp
mov
inc
push
push
fwait
popa
in
pop
clc
sbbl
sti
cmp
imul
test
pop
sub
push
or
iret
push
adc
leave
cmp
into
cmp
fwait
popa
pop
sub
sbb
lret
cmpb
pop
lods
xchg
pop
cmp
sub
pop
sti
inc
mov
push
mov
aam
mov
loopne
inc
out
gs
and
aaa
sbb
pop
adc
fucomi
jno
xchg
in
push
insl
mov
enter
shrb
jp
mov
xchg
jns
out
and
add
testl
xor
clc
nop
cmpl
mov
sub
enter
gs
sti
mov
icebp
stos
ffreep
push
cmpsl
xorl
mov
hlt
repnz
jo
std
dec
push
add
mov
push
cmc
jbe
mov
sbb
subb
sub
fwait
mov
adc
rolb
shrb
repz
mov
jecxz
jae
dec
insb
ficomps
popf
rcrl
es
adc
addb
into
push
lret
std
mov
sti
jg
rcll
jl
mov
add
add
into
filds
imul
sub
jp
push
push
das
fwait
sahf
sbb
sar
test
hlt
shl
lods
imul
pushf
xchg
arpl
inc
ss
and
push
add
mov
inc
sub
sub
and
sub
movsb
scas
xchg
clc
aad
sbb
je
and
inc
pop
sti
dec
hlt
pop
ljmp
and
or
cwtl
lret
pop
mov
ja
cld
inc
pop
lret
xchg
sbb
test
mov
xor
xchg
jbe
std
push
push
xchg
pop
insl
adc
inc
push
pop
push
jo
mov
and
pop
pop
lret
xchg
pop
mov
dec
pop
push
pop
ret
pop
pop
and
js
jmp
jmp
jmp
and
data16
add
cwtl
cs
xchg
xchg
jge
fists
cmp
aad
push
sbb
pushf
cli
add
pop
jne
pop
aas
jb
into
out
jle
loopne
stos
xchg
add
or
js
adc
mov
inc
fdivr
xor
and
and
pop
mov
cltd
jmp
negb
add
rolb
sbb
pop
bound
sbb
sbb
in
loopne
cmp
mov
dec
xorl
dec
mov
pop
movsl
push
push
jb
dec
repnz
cli
mov
sub
sub
arpl
mov
repnz
rcll
cmp
arpl
jno
and
lahf
sub
fldcw
jne
shlb
jmp
pushf
daa
aaa
movsl
or
imul
iret
inc
xchg
sub
addr16
mov
jmp
les
mov
into
icebp
cwtl
or
mov
bound
jg
decl
inc
iret
icebp
mov
jno
sbb
sbbl
outsl
add
loope
mov
xchg
dec
cmp
xchg
sub
frstor
mov
test
jmp
push
in
pop
mov
and
pop
popl
les
addr16
je
mov
int
cmp
xlat
cli
jb
adc
jecxz
test
push
and
lret
inc
mov
mov
mov
adc
xlat
add
inc
sbb
lds
xchg
sub
int
push
xor
insb
loop
imul
cwtl
cmc
push
mov
jb
cltd
xor
mov
rcrl
or
push
lret
add
cmpxchg
pushfw
dec
shll
push
popf
icebp
mov
mov
fdivrl
sub
or
insl
push
outsl
cltd
dec
xor
test
hlt
adc
cwtl
jmp
aam
adc
jecxz
mov
xchg
pop
insl
lods
ljmp
lret
ja
loope
mov
imul
lods
add
dec
sub
jecxz
mov
mov
cmp
cmp
mov
sti
insb
ret
mov
sub
mov
inc
inc
in
les
or
mov
sub
inc
mov
ja
inc
and
cmpsb
mov
inc
push
mov
hlt
jge
mov
xor
cwtl
pop
xor
pop
jecxz
push
xor
aad
push
adc
in
out
fisubrs
enter
jnp
mov
mov
stos
lock
imul
xor
repnz
dec
roll
jl
or
arpl
pop
loop
into
leave
and
mov
cld
xor
xlat
cltd
adc
shr
dec
sti
mov
cmp
in
div
add
scas
mov
aas
dec
aad
test
or
push
scas
or
cmpsb
push
aas
ljmp
inc
test
mov
pusha
rcl
sahf
sbb
mov
jne
shrb
bound
pop
lock
gs
mov
xchg
cld
sbb
or
and
inc
fnstcw
les
lret
sbb
int
shll
shll
in
xchg
imul
pop
decb
stc
adc
jne
cli
in
mov
insl
jle
jo
xchg
mov
popf
fistpll
xchg
fs
fxch
lret
imul
leave
push
pushf
ljmp
sbb
pop
fs
push
sbb
js
stos
fsub
movsb
lret
mov
outsb
int3
mov
je
gs
sbb
iret
sub
pop
add
cmp
sbb
xchg
lods
mov
aam
gs
enter
fcom
inc
cld
cmp
repz
aas
scas
shlb
adc
orb
out
cmc
xorb
pop
cmp
outsl
and
cmp
mov
mov
pushf
stos
jnp
sbb
or
inc
mov
rcrb
mov
mov
rcrl
sub
sbb
in
jbe
stos
sub
dec
shll
iret
mov
xchg
mov
push
pushl
in
out
call
pop
or
fisttpl
cmp
push
xlat
jg
enter
sti
mov
fs
test
imul
push
out
insb
pcmpgtb
xor
cmp
xchg
aas
or
addl
iret
sbb
call
dec
mov
leave
xchg
dec
fstps
inc
sahf
pop
sub
repnz
out
lret
or
mov
dec
xchg
cld
cmpsb
cs
imul
mov
pushf
fldt
mov
test
push
cld
xchg
cmp
imul
gs
pusha
outsl
in
mov
xchg
or
mov
push
push
sub
in
add
sarb
add
fdivs
inc
xchg
std
pop
mov
mov
in
mov
jo
xor
mov
les
push
cmp
fs
fdivrs
movsb
jge
sbb
ret
mov
cld
cmp
lcall
mov
fstps
mov
xchg
jge
cli
pop
mov
or
pusha
cmpsb
push
cwtl
les
bound
ja
out
pop
out
out
jp
roll
jecxz
pop
into
add
jl
mov
rorb
fisubl
dec
pop
scas
stos
adcb
pop
jo
xlat
sbb
mov
or
sub
cmc
xor
pop
stos
enter
and
xchg
enter
test
popa
mov
data16
inc
jno
dec
test
or
mov
mov
xchg
xlat
mov
lcall
xor
mov
pop
and
sbb
xchg
repnz
ficoml
push
sarl
dec
movsl
pop
mov
lock
cmp
loope
cmp
mov
in
pop
ret
adc
shlb
clc
clc
daa
lret
mov
adc
push
test
or
std
in
or
lahf
hlt
cmpsl
outsl
mov
testl
clc
push
xor
clc
sbb
test
cmp
sub
inc
rcrb
push
divl
sbb
mov
mull
pop
daa
stos
xchg
push
add
mov
cltd
cmpsl
mov
mov
pop
xchg
xchg
push
vsubpd
movsb
addr16
mov
add
inc
daa
adc
jp
cmp
mov
jb
push
xchg
sahf
mov
ret
xchg
ljmp
mov
mov
out
mov
test
push
cmp
and
mov
call
nop
jbe
insl
scas
and
movl
outsb
cli
mov
nop
xchg
push
mov
mov
ret
imul
pop
test
pop
sti
xchg
xchg
shll
roll
jne
jbe
repz
scas
aam
or
sub
cwtl
cmp
dec
cld
mov
mov
mov
jge
sbbl
mov
test
xchg
pop
sbbl
sbb
cld
xor
sbb
movsl
clc
mov
xor
mov
cmp
dec
sub
mov
pusha
into
jg
mov
push
adcl
push
insb
imul
mov
mov
cmp
xor
mov
or
aaa
rcll
sub
mov
mov
dec
pushf
push
jecxz
aas
divl
adc
cmp
in
loop
and
xchg
lret
cld
mov
cmp
imul
rcrl
daa
ljmp
loope
xor
mov
jb
sbb
sub
push
iret
pushf
test
mov
xor
shlb
jns
ja
outsl
inc
sub
daa
das
push
cmp
mov
dec
cmp
xchg
mov
js
movsb
push
test
push
lcall
out
and
lret
or
pop
adc
lret
push
mov
mov
jb
jbe
fdivrl
cmc
fcmovbe
roll
jno
mov
lods
imul
inc
jns
pop
orb
mov
push
ret
fidivrs
sub
and
loopne
or
imul
adc
pop
ds
imul
xchg
mov
rorb
mov
xchg
inc
repz
ret
ret
nop
and
xor
outsb
enter
insb
fwait
stos
sbb
out
cmc
pop
dec
in
cmp
js
mov
mov
adc
out
fistps
add
inc
sbbb
push
pop
push
and
inc
and
cltd
stc
shlb
rcrl
mov
fwait
jecxz
in
sub
sub
mov
fidivrl
sub
push
outsl
cs
aaa
in
cld
movsl
mov
jns
rcrb
mov
mov
inc
adc
mov
in
push
xchg
icebp
sub
imul
push
inc
and
sbbl
pop
add
and
cmp
push
test
cmp
adc
ret
mov
mov
imul
aaa
jmp
mov
pop
fstpl
sub
das
push
jae
popa
jno
xchg
dec
xchg
and
fidivrl
shll
jno
sbb
add
loopne
into
xor
cmpsb
pop
add
test
jo
sub
jge
insb
movsl
cmpsb
and
sbb
test
outsb
and
mov
lret
or
sbb
daa
mov
sbb
inc
inc
arpl
sbbl
out
das
or
fcomps
mov
out
add
rcrb
push
inc
cmpsl
fldcw
gs
sbb
das
call
lea
push
mov
add
cmp
scas
inc
fucomp
test
xchg
rorl
lahf
loopne
repnz
sbb
and
mov
test
jge
push
aaa
ret
cmp
aad
inc
icebp
push
sbb
pop
inc
xchg
push
push
addr16
imul
mov
cs
or
adc
adc
rcll
test
push
in
cmpb
push
arpl
int
in
jge
pop
hlt
jecxz
and
test
xchg
jg
ret
push
stc
sub
aam
mov
cmp
fs
xchg
and
mov
pop
cmpsl
arpl
test
jg
dec
add
mov
mov
xchg
repnz
popaw
dec
scas
insl
jno
mov
inc
in
and
xchg
movzwl
lods
sbb
xor
cmp
mov
sar
mov
push
je
lcall
enter
fwait
dec
enter
add
ja
fisubl
fidivrs
lods
pushf
or
push
or
into
xor
stos
mov
jbe
ficoms
popa
add
sub
lods
add
inc
std
pop
push
outsl
test
fisubrs
repz
xor
fwait
mov
outsb
inc
bound
out
xchg
test
mov
and
dec
pop
inc
icebp
daa
cmpsb
cli
jb
mov
out
lods
adc
mov
xchg
cltd
pop
outsl
es
add
xchg
out
daa
jb
fldt
sbb
in
inc
ret
repz
fcompl
sbb
shl
pusha
mov
cmpsb
xor
rsm
xchg
int
hlt
xchg
sti
test
les
mov
xchg
xchg
push
scas
cmp
sbb
dec
jns
cmp
js
or
jge
or
std
or
pop
adc
fs
fwait
add
add
xlat
js
je
jle
jno
dec
popf
jmp
inc
mov
mov
xchg
mov
sub
dec
movsl
pop
repnz
push
shlb
jle
jne
mov
sbb
daa
stc
adc
xlat
inc
fcoms
lods
adc
or
jp
xchg
inc
in
sbb
push
dec
jno
or
das
jmp
pop
lods
cmpsb
and
sahf
xchg
sub
ja
cmp
aaa
mov
dec
fcomp
xor
ja
mov
mov
sbb
sbb
cs
ds
arpl
nop
rcll
cmp
neg
xchg
aas
push
jb
adc
sub
in
push
mov
adc
or
bound
repz
add
rol
nop
das
int
test
sti
subl
dec
jge
push
out
sub
mov
lret
mov
push
mov
bound
lret
add
dec
cld
pop
dec
pop
xlat
lods
adc
dec
push
add
add
or
mov
fsubrl
sbb
push
jmp
mov
into
insl
jmp
sbb
push
mov
xor
dec
jmp
sbb
jmp
dec
mov
ret
cmp
sbb
aas
or
mov
ljmp
mov
cli
loopne
and
cltd
dec
sbb
sub
add
jns
test
jp
in
inc
adc
divb
les
pop
pop
loope
clc
div
aam
call
les
lock
add
sbb
mov
jae
mov
sbb
adc
rcrb
pop
jle
aad
cmp
and
dec
jbe
pop
cmp
subl
test
outsl
adc
cltd
dec
mov
cmp
jno
push
and
lret
addr16
lods
sbb
inc
inc
mov
imul
push
scas
popa
jecxz
loop
dec
mov
dec
lods
mov
jbe
mov
into
cld
xchg
cmp
outsb
sbb
out
testl
fidivrs
aam
aad
clc
fistps
cmp
push
scas
movsb
xchg
in
xchg
xchg
jmp
and
jae
cmpsb
shll
rcr
xchg
jle
testb
sub
nop
or
jecxz
sub
iret
xchg
test
pop
jb
or
push
sub
inc
xchg
mov
cltd
or
lahf
test
pop
sbb
push
inc
subb
in
fidivrl
and
cmp
xchg
xchg
push
inc
inc
jb
movsl
or
lock
add
adc
pop
mov
pop
push
xchg
fwait
jns
dec
pop
ds
dec
xchg
mov
jle
fnsave
xor
adc
pop
pop
push
in
push
pop
xlat
bound
in
lahf
iret
fwait
icebp
sbb
adc
inc
sahf
ffree
test
sub
or
out
push
les
xor
mov
in
inc
xchg
lcall
mov
popa
repz
sbb
adc
jecxz
push
test
call
push
hlt
in
out
out
ja
scas
les
and
xchg
ja
mov
scas
and
and
aam
xchg
popf
mov
jbe
shll
int
xchg
imul
in
sub
pop
fbstp
movsb
pop
cmp
xor
jae
sub
and
xchg
mov
das
sbb
sbb
inc
loope
inc
xor
xor
mov
mov
xchg
push
divb
jb
mov
lcall
pop
sahf
jno
lcall
cs
pop
sti
popa
adc
jae
push
gs
fisttps
sbb
dec
sub
ret
pop
jle
mov
std
rol
dec
mov
cmp
loop
jne
ret
mov
jg
pop
dec
and
xor
adc
push
push
add
ret
inc
rolb
mov
sbb
popf
and
sti
dec
dec
inc
subl
jne
push
mov
filds
pop
push
cld
out
and
add
out
dec
jbe
lds
sub
clc
and
push
ficomps
pop
int3
filds
scas
xlat
jg
xorb
mov
mov
outsl
popa
adc
mov
or
and
push
mov
cmpsl
lds
cmp
out
mov
mov
xchg
movsb
mov
out
xchg
out
xorl
cli
mov
xchg
cmp
push
cmpsb
scas
sub
not
sub
jg
dec
adc
xchg
push
cli
rcl
dec
repnz
inc
push
or
push
icebp
mov
jbe
adc
cwtl
adc
movsb
mov
xlat
nop
jp
pop
cmpsl
jmpw
add
fists
dec
in
dec
push
test
dec
push
insb
add
loope
in
sub
xor
neg
enter
ret
and
pushf
add
stos
outsb
dec
outsl
pop
call
xor
xchg
push
push
jl
xor
and
rorl
dec
push
in
push
or
and
sbb
dec
xlat
lds
xor
mov
ret
lcall
fnstcw
mov
add
stos
add
sbb
movsl
dec
pop
jns
lods
fadds
out
cmpsl
sbb
cmp
ds
sub
push
inc
es
ljmp
jl
xlat
sti
jmp
das
xor
and
cmpsb
mov
jecxz
xchg
lahf
xchg
test
cli
sahf
std
lods
inc
ljmp
pop
outsl
int3
lahf
vpshad
sbb
sub
xor
inc
aas
xor
xlat
add
ja
pop
and
mov
pop
and
and
lods
fcompl
xor
mov
std
subl
inc
add
test
mov
scas
enter
enter
add
sub
push
mov
jbe
jb
and
cmp
sbb
int3
and
and
sbb
mov
out
call
add
ret
ljmp
test
pop
pop
aaa
int3
jo
cmc
inc
aaa
in
lahf
or
movsb
cli
or
lahf
je
rorb
es
mov
push
scas
jne
es
lret
outsb
or
cld
push
ds
sbbb
pop
jb
test
mov
or
mov
shlb
into
mov
aam
cmp
in
shl
orl
leave
lea
dec
or
xor
and
call
mov
loop
outsl
js
push
add
jno
xchg
test
add
inc
or
hlt
or
aam
idivb
shlb
imul
in
pop
lock
popf
jp
test
stc
ds
adc
mov
inc
loop
in
and
or
nop
sub
fcomp
inc
push
divb
mov
xchg
mov
loope
pop
push
stos
ds
add
sub
mov
movl
lcall
nop
cwtl
sbb
imul
stc
jge
dec
sub
sbb
sbb
pop
notl
push
aam
sub
pusha
mov
jl
xorl
out
mov
aam
ss
out
call
outsl
add
and
or
ljmp
inc
hlt
jle
mov
jns
and
test
icebp
xchg
arpl
mov
imul
push
movsb
jg
xlat
mov
cmp
in
ss
adc
insb
ret
mov
fwait
inc
pushf
les
arpl
adc
jne
orb
popf
arpl
xchg
or
imul
push
lea
inc
cmpsb
xor
dec
mov
push
xchg
or
xchg
sub
out
mov
das
leave
pop
in
mov
testb
adc
daa
nop
sub
xchg
stos
mov
pop
aas
jne
adc
pop
aad
shrl
into
mov
outsb
xor
sub
push
mov
pop
arpl
in
nop
jb
pushf
mov
mov
nop
dec
sbb
scas
sbb
jecxz
scas
or
pop
inc
mov
sbb
dec
call
mov
push
pop
pop
ds
mov
mov
arpl
push
popf
mov
push
sbb
mov
mov
dec
push
ja
rcr
mov
push
xor
mul
jmp
cld
in
mov
jmp
pop
ds
lcall
inc
dec
in
pop
hlt
mov
popa
lock
push
inc
mov
jl
lcall
add
movsb
inc
add
or
inc
sbb
add
je
or
xor
dec
add
cmp
pusha
sub
mov
push
dec
fwait
and
xlat
aad
mov
xchg
and
repz
push
scas
mov
aad
or
cmc
cwtl
imul
add
jo
das
or
jecxz
insb
dec
outsl
adc
xor
in
repz
negl
inc
fiaddl
outsw
jg
dec
pop
add
add
mov
sub
xchg
bound
sbb
ret
inc
and
rep
sbb
loop
insl
lds
ljmp
and
push
aaa
sbb
cmp
push
add
cmp
ficompl
sbb
xlat
push
adc
or
cs
movsb
or
sti
jecxz
add
ret
aam
pop
pop
jle
int
push
cmpsl
fistl
pushf
jp
mov
jge
xchg
lcall
int
pop
dec
call
rclb
mov
push
mov
mov
jno
ljmp
inc
mov
mov
jl
cmp
adc
push
cwtl
dec
pop
sbb
roll
shrl
mov
pusha
push
aas
dec
push
push
xchg
jl
call
pushl
cld
push
ss
sbb
shl
aaa
lods
popa
daa
mov
mov
stos
mov
xchg
imull
mov
jae
pushf
enter
mov
ficomps
inc
add
mov
mov
jbe
adc
aaa
pop
ss
inc
xor
popa
in
sub
adc
push
dec
movsl
sub
mov
jns
mov
and
pushf
push
pop
pop
jmp
movsb
mov
adc
xchg
or
push
jl
xchg
in
cmp
add
adc
sbb
mov
ret
stos
mov
es
stos
pop
pop
add
mov
dec
push
sub
fldln2
or
jbe
out
mov
or
mov
mov
inc
inc
loop
sbb
cmc
call
cmc
push
in
hlt
and
push
cmp
push
aad
adc
gs
notl
orl
lods
mov
inc
mov
hlt
js
repz
cli
lods
adc
push
xor
mov
jo
lcall
ljmp
xor
sbb
add
push
sbb
and
shlb
stc
std
cmp
fstpt
loopne
adcl
cmp
inc
cltd
push
push
and
test
cld
jb
xchg
and
cmpsl
in
popf
sbb
ret
fs
sbb
push
dec
xor
jo
shll
arpl
lods
mul
or
out
jl
jne
push
imul
loope
cmp
iret
push
inc
aas
mov
in
gs
dec
cs
outsb
je
dec
jmp
add
dec
sahf
lahf
add
notl
lock
shlb
add
adc
fstpl
orb
cmpsl
sbb
cmp
into
fwait
adc
fisubs
cmp
addl
jl
fsub
cs
push
mov
mov
pushf
mov
pop
popf
dec
cmc
stc
cmp
push
xchg
cmpb
push
add
xchg
cltd
test
daa
mov
rclb
xchg
inc
inc
in
call
push
subb
in
hlt
mov
into
hlt
ss
xor
pop
cmpsb
outsl
shlb
pop
daa
push
push
and
das
scas
movsl
out
and
adc
test
les
and
or
and
sub
mov
je
inc
push
xorb
mov
in
gs
push
xor
movsb
nop
lret
std
jbe
dec
in
addr16
enter
in
iret
or
jl
add
aas
les
jnp
dec
mov
push
in
rcl
jp
hlt
aam
dec
cmp
into
add
leave
jbe
test
out
adc
mov
add
test
enter
fiaddl
xlat
mov
jge
sub
aaa
inc
pop
je
add
loop
sbb
inc
xchg
xor
into
iret
xor
mov
enter
nop
insb
adc
jle
enter
or
cmp
dec
sbb
aaa
nop
xor
gs
lock
push
mov
push
and
xlat
bound
rcll
mov
xlat
vmread
mov
adc
cmc
imul
mov
lods
mov
add
adc
cli
mov
aas
mov
out
popf
out
cwtl
pushf
and
mov
andl
arpl
xchg
stos
pop
pop
inc
call
mov
gs
mov
or
lret
mov
jnp
xchg
jb
add
pop
xor
repz
mov
jo
or
push
push
lods
xchg
mov
inc
aas
lods
in
rolb
aaa
fcmovu
test
loope
adc
mov
lods
mov
stos
lret
sbb
les
and
push
call
roll
imul
into
adc
mov
jo
arpl
or
test
jp
or
mov
mov
inc
lods
xchg
movsl
sbb
into
jb
sar
lods
cmp
adc
cmp
fildl
jno
pop
into
cmpsb
cmp
out
js
mov
mov
hlt
or
clc
fiaddl
enter
cmp
gs
and
dec
or
int
insl
in
or
out
mov
xchg
or
sbb
dec
push
mov
mov
xchg
mov
jno
loop
or
xchg
fldenv
mov
out
outsb
je
mov
test
jae
cmpsb
das
outsl
and
cmp
mov
jge
inc
fidivrs
and
xor
xor
xor
shll
lret
mov
cmpb
inc
mov
mov
sbb
inc
mov
xchg
or
pop
pop
lret
xchg
cmp
int3
or
xchg
test
or
mov
dec
loopne
xchg
push
and
dec
xor
dec
mov
adc
cmpsl
and
mov
dec
or
lea
and
test
push
xchg
andb
movsl
jl
stc
cld
push
jge
push
add
cmp
xor
mov
lock
mov
mov
xor
jne
jb
or
aas
xor
sbb
sti
movsl
movsl
xchg
mov
incb
addr16
lock
repz
fcoms
jns
and
out
and
sbb
lods
gs
or
inc
loopne
cld
out
xor
jge
mov
lds
imul
jmp
dec
ss
jg
mov
fdivrp
icebp
xlat
bound
sub
mov
jbe
stos
movb
inc
mov
sub
cmc
in
jo
mov
aaa
push
xchg
lds
call
mov
hlt
jns
pop
jo
or
xchg
iret
cmc
divb
mov
push
and
ss
xchg
imul
fnsave
sub
push
popa
cli
or
aam
lret
jg
pop
cmc
fisttpl
fstl
xor
xchg
sbb
sbb
push
fldl
adc
sub
xor
cmp
fnsave
movsb
bound
dec
sbb
popa
sahf
fs
stos
dec
movsb
lds
sub
bound
pop
and
xor
movsl
xor
rcrl
ja
aas
push
or
xor
sub
mov
aaa
mov
cmp
clc
sub
inc
xlat
nop
mov
push
leave
rorb
cwtl
adc
int3
in
and
inc
jo
jmp
jle
sbb
aaa
jle
sbb
push
insl
ja
daa
fwait
pop
dec
push
aam
add
jmp
jno
ret
in
out
sub
sub
movsl
aam
in
jbe
cmpb
fldcw
cmp
dec
xchg
rclb
xchg
push
lods
mov
aam
add
rcrl
clc
mov
outsb
push
cmp
call
mov
js
popf
scas
bound
lret
lds
das
cwtl
std
inc
daa
mov
dec
pop
repz
rcll
inc
sub
or
ret
cmp
cmc
lret
mov
sarb
cmpsb
and
cltd
xor
mov
mov
mov
add
imul
pusha
jl
int
jb
aaa
clc
xchg
out
dec
jno
sbb
mov
cs
test
push
sahf
and
jmp
mov
test
pushf
push
sarl
rcll
xchg
cmp
pusha
dec
lods
or
test
add
stc
hlt
xchg
inc
test
push
dec
pop
inc
push
cmpsl
sbb
es
shrl
add
insb
xor
nop
in
test
imul
loopne
jne
xor
mov
and
pop
pop
insb
sar
es
inc
adc
cmpsl
jb
cmp
lock
out
xor
sti
mov
inc
sbb
nop
rcrl
push
mov
or
xchg
frstor
and
lcall
xor
or
testl
dec
std
mov
icebp
jge
aaa
dec
pop
imul
xor
sbb
aad
adc
jmp
imul
dec
mov
pop
mov
pop
mov
cmp
data16
xor
xorl
outsb
xor
rorl
ds
mov
dec
or
aas
push
and
ljmp
outsb
cld
movsl
pop
ljmp
cmp
or
inc
push
mov
xor
jecxz
dec
push
test
cld
and
fimuls
ljmp
popf
adcl
test
stos
mov
add
int3
in
add
and
divl
int3
dec
je
jns
subl
push
fdiv
mov
out
gs
pop
xchg
push
push
pop
adc
xchg
addr16
imul
or
stos
lcallw
in
and
push
dec
mov
dec
cli
shll
rclb
inc
call
fsts
and
xor
pop
xor
sbb
pop
sub
pop
mov
call
push
out
push
mov
shrb
aaa
mov
push
insb
push
imulb
popa
dec
into
shlb
mov
xor
xor
pop
dec
pushf
mov
mov
mov
push
aad
inc
enter
adc
repz
pop
mov
dec
and
imul
push
inc
jne
dec
sub
bound
ljmp
lds
adc
jno
xor
xor
push
test
lret
pusha
in
cmp
out
push
and
rcrb
enter
mov
inc
mov
dec
lret
mov
cmpsl
push
push
add
xchg
or
addr16
mov
inc
popf
dec
pop
bound
mov
out
lods
push
loop
leave
sbbl
and
jmp
push
mov
shrb
dec
aam
inc
push
cli
and
ss
jns
dec
push
ds
test
jo
mov
jg
mov
mov
adc
xchg
xor
mov
stc
test
xor
andb
shlb
insl
cmpsl
fisubl
sbb
cltd
or
aas
imul
rcrl
pop
add
mov
sbb
ja
movsb
pop
or
aam
movsl
sub
sub
inc
int3
push
push
sub
out
sbb
xchg
mov
xor
dec
fsubrs
repz
push
outsl
jbe
andb
sub
test
jne
xorb
xchg
mov
push
loop
out
add
and
addr16
into
je
sub
sub
xchg
cld
sub
roll
lret
xchg
cmp
jb
mov
jno
adc
aas
adc
or
sbb
bound
mov
stc
movsb
inc
jo
jb
ret
cmp
imull
lcall
xor
push
dec
jmp
cmp
flds
mov
adc
clc
lods
fidivrs
repz
push
out
inc
sub
or
sbb
xor
sub
rcrl
sub
sbb
in
idivb
cwtl
aaa
mov
dec
inc
or
cmp
xchg
inc
repz
sarl
xchg
cld
ficoms
arpl
mov
dec
pop
hlt
aaa
inc
cmpsl
inc
out
insb
ss
jnp
dec
mov
les
lahf
repz
int
and
push
scas
mul
out
fisubrs
dec
push
push
xlat
pop
cmp
push
xchg
incb
fs
jnp
and
pop
test
sub
jb
xlat
mov
jne
jno
cmp
adc
int
clc
mov
data16
bound
call
addl
mov
xchg
fists
cld
int3
pop
cmp
mov
les
shrl
mov
inc
lock
or
fmul
add
adc
mov
xchg
and
les
push
ja
insl
dec
pushf
jmp
test
call
daa
sbb
fs
mov
je
and
push
jmp
cwtl
push
insl
sub
push
insl
test
add
push
mov
mov
ds
fstps
mov
cltd
inc
ror
push
cmp
or
jmp
dec
jle
out
in
cltd
xorl
jbe
or
sbb
gs
iret
rol
divb
push
nop
insl
lods
jae
ret
sbb
fwait
push
mov
icebp
out
or
sub
fwait
dec
nop
pop
icebp
jne
add
out
mov
mull
sub
sbb
mov
inc
mov
mov
dec
pop
dec
adc
in
imul
xor
popf
pop
add
bound
scas
or
sbb
scas
push
jmp
fstpt
mov
movsl
nop
or
imul
mov
pop
in
push
push
and
in
mov
shll
iret
into
jnp
sahf
push
out
iret
mov
sub
js,pt
aas
movsb
or
aas
mov
scas
jbe
and
adc
or
fs
sbb
test
mov
lret
test
repz
orb
dec
movsl
andl
add
dec
cmp
roll
push
mov
aam
mov
and
inc
jp
push
imul
test
jmp
shr
jnp
movlps
mov
mov
adc
ds
lods
test
nop
or
adc
dec
add
out
fs
add
addb
and
test
lahf
mov
jmp
subb
adc
fisubrs
pop
pushf
adc
les
test
pop
popf
lcall
lock
daa
inc
jecxz
fs
mov
adc
pop
jmp
mov
cli
mov
shll
jmp
sbb
inc
daa
xchg
mov
push
pop
sbb
mov
or
push
call
cmp
cmp
sbb
adc
cmc
fwait
xchg
stos
push
add
pop
cwtl
jle
jmp
sbb
movsl
cmpsb
jo
lret
sbb
mov
inc
dec
jge
orb
sub
pop
push
inc
ficomps
pop
outsl
mov
or
push
or
loope
mov
push
mov
cmp
inc
jmp
xlat
lahf
cmp
clc
mov
or
ss
insb
push
out
sbbb
stc
fdivl
xchg
lods
cmp
sbb
xor
adc
gs
and
jno
jecxz
add
or
jecxz
push
sbb
shrb
std
pop
inc
pop
data16
pop
mov
add
mov
cmp
dec
shll
clc
dec
icebp
shll
mov
into
push
sub
je,pn
inc
dec
sbb
mov
jno
dec
sbb
stos
mov
imul
pop
xchg
xor
aaa
sbb
shll
shr
push
pushl
push
jmp
rolb
push
dec
std
imul
cmp
mov
mov
push
int3
fidivrs
push
or
adc
cmp
hlt
inc
hlt
call
jae
mov
cmpsl
mov
pop
lahf
dec
pop
add
cltd
cmp
jmp
jo
cmp
cwtl
jno
dec
or
adc
cmp
rol
push
sub
xor
lahf
mov
adc
mov
in
std
stos
test
mov
dec
stos
mov
mov
mov
mov
scas
stc
cmp
add
out
jbe
jmp
rcl
adc
cltd
push
mov
xchg
repnz
ljmp
pop
adc
sub
jne
sbb
movsb
adc
push
inc
xchg
loop
mov
mov
dec
std
xlat
mov
hlt
sarb
das
push
push
mov
iret
dec
inc
icebp
mov
dec
mov
iret
mov
mov
xchg
xlat
xorb
sbbl
mov
icebp
rcrl
ret
add
push
sarl
xchg
push
push
adc
sbb
lcall
bound
mov
cmc
and
push
aad
xor
stos
pop
adc
add
pop
and
or
andl
pop
cltd
cmpb
xchg
cli
and
sub
testl
jnp
and
xor
inc
mov
in
lret
sub
cmc
push
sti
jns
or
cs
cli
xchg
cld
push
ds
sub
movsb
into
mov
fisttpll
push
push
shrb
cs
outsl
cmc
les
int
ficompl
and
or
sub
cmp
lock
cwtl
gs
pop
das
xchg
movsl
jmp
insb
daa
add
faddl
and
mov
repnz
loope
loope
cmp
fidivs
sarl
mov
xor
test
imul
mov
sbb
stos
jmp
int3
lds
in
mov
cmpsl
mov
lock
repnz
mov
inc
adc
daa
cs
push
push
mov
cmp
call
cltd
loope
adc
mov
call
rcrl
cmp
loopne
xchg
int
shrb
popa
mov
pusha
ja
in
es
mov
sbb
fistl
add
out
fmul
adc
cmc
dec
ds
and
das
adc
lret
std
int3
xchg
sbb
cmp
sahf
dec
mov
int3
xchg
sbb
aad
mov
into
aad
xlat
sarl
insl
adc
dec
mov
jo
fnstenv
mov
nop
jo
mov
sbb
and
mov
aam
or
pop
in
cltd
xor
push
sbb
sarl
js
insb
js
lods
arpl
je
adc
and
iret
aaa
imul
orb
dec
push
in
je
add
push
push
pop
sbb
test
jmp
adc
js
inc
xchg
cmp
lds
xchg
cmc
pop
mov
cmp
notb
xor
dec
mov
lods
daa
jge
xor
and
mov
mov
lds
jb
jp
enter
lods
cli
sub
sub
fisttpll
adc
fsubr
imul
jnp
lret
or
mov
into
cmp
mov
sbb
fdivs
mov
sarb
sbb
test
mov
mulb
inc
add
iret
popa
pusha
mov
add
and
das
cmp
jp
ret
addb
fcompl
cld
push
sub
fs
pop
and
mov
jge
push
cmc
jno
mov
insb
and
sbb
sbb
mov
repz
or
clc
xlat
in
push
lret
xchg
pop
subl
test
sahf
inc
in
mov
rorl
mov
mov
sbb
inc
out
ja
pop
aaa
in
cmp
sub
scas
mov
cmpsl
outsb
mov
add
enter
push
bound
and
pop
ss
sbb
cmp
out
xor
jmp
gs
inc
sub
push
cmpsl
jl
jo
xchg
sub
mov
jno
push
test
addl
outsl
clc
and
push
mov
pop
push
adc
fs
dec
adc
stos
in
hlt
add
and
push
inc
mov
cmp
iret
xchg
cmp
add
inc
push
push
lret
loopne
sarb
lds
or
popl
jp
and
cmp
stos
add
shrb
loopne
inc
mov
cmpsb
ds
pop
inc
test
mov
jp
iret
shl
pop
lcall
xor
dec
out
int3
xor
mov
ss
cmp
xor
and
repnz
sub
into
fxch
mov
sub
push
dec
loope
jecxz
or
mov
sbbl
std
push
jge
repz
pushf
and
jmp
pop
test
jno
outsl
jle
mov
into
inc
insb
std
stos
pop
mov
lret
pop
mov
and
or
imul
in
adc
shlb
sub
das
lds
stos
xchg
or
pop
xchg
je
in
arpl
xchg
sub
pop
outsl
bnd
xchg
xchg
xchg
sbb
dec
aam
xchg
cmpsl
shr
repnz
roll
or
mov
imul
stos
sbb
xchg
pop
rcrl
cs
push
mov
imul
aas
rol
and
aam
sbb
test
jg
sti
sbb
std
out
ret
inc
cli
lahf
shrb
and
mov
daa
mov
jge
lahf
dec
mov
sbb
iret
pop
or
cmp
mov
adc
push
cmp
pop
shll
loope
dec
pop
cltd
minps
cmp
jg
sarb
insl
pusha
stos
sbb
mov
out
cmpb
out
shll
xor
xchg
jnp
add
jp
ss
scas
mov
sub
in
ss
imul
cmp
cmp
std
iret
std
jge
cmc
inc
push
mov
arpl
inc
outsl
cmpsb
or
fisttpl
rcll
test
scas
jae
movsb
xchg
xor
inc
and
in
jle
xchg
add
push
outsb
xor
jl
or
subb
jle
dec
push
xor
test
test
dec
std
pop
mov
adc
push
mov
fisubrs
xchg
daa
pop
mulb
adc
rol
fs
scas
pop
push
movsl
pop
add
mov
xchg
popf
mov
lret
loopne
dec
movsl
fcoms
add
sbb
jno
add
and
loop
push
rorb
andb
inc
js
arpl
pop
mov
fbld
dec
sbb
popf
addr16
jmp
add
add
push
inc
mov
movsb
or
xor
or
push
mov
scas
ret
cmp
sbb
mov
lret
or
and
ja
test
cltd
inc
sti
adc
lcall
xor
mov
pop
ja
jns
lcall
xchg
cmc
mov
push
jno
sub
shlb
pop
mov
adc
cwtl
xor
or
loopne
mov
subl
push
push
pop
push
aam
cwtl
ds
lods
sbb
into
dec
and
mov
and
aad
aas
movsb
jp
mov
scas
mov
xchg
js
loope
inc
add
orb
stos
movsb
cmpb
test
into
mov
mov
not
iret
test
subl
mov
jno
test
cmc
scas
mov
pop
fsubs
lds
jae
dec
inc
fstl
cli
mov
fcmovnb
jmp
scas
int
xor
sbb
divb
mov
cmp
and
and
pop
sub
out
adc
pop
mov
iret
in
ss
cmp
and
adc
mov
call
jl
jmp
mov
clc
sbb
pop
pushl
pop
mov
mov
test
mov
and
gs
jno
jg
ret
push
lock
test
test
xchg
cltd
inc
and
or
jae
sub
dec
scas
cltd
push
jecxz
addr16
imul
jno
adc
and
push
iret
add
jbe
int
fsub
jo
jecxz
mov
mov
or
pop
mov
gs
inc
xor
shll
xor
jnp
sub
in
stc
jb
clc
and
adc
lcall
in
sbb
test
ret
clc
jg
jmp
cmp
call
scas
mov
nop
psubusb
sub
push
shr
jl
sbb
jo
pop
xor
pop
push
stc
outsl
dec
in
in
out
test
cli
popa
aas
inc
data16
scas
jecxz
cltd
dec
and
loopne
das
je
or
in
movd
lret
pop
lock
fwait
ret
sbb
hlt
lahf
in
in
cmp
arpl
add
xchg
mov
sub
sarb
pop
and
jg
sub
mov
mov
jp
hlt
mov
sub
fcmovne
fwait
mov
jno
das
stos
mov
xchg
loop
or
stc
push
mov
mov
mov
iret
daa
mov
or
jne
addr16
loop
mov
or
adc
test
fcomps
es
daa
sub
add
adc
inc
pop
aaa
push
fs
xor
popf
pop
mov
and
mov
aad
outsb
daa
mov
lods
pop
movl
jl
pop
scas
fwait
sbbl
gs
cmp
in
insl
fnstcw
inc
mov
push
clc
mov
pop
leave
sub
inc
lret
adc
add
mov
imul
adc
popa
adc
push
js
jbe
in
stos
mulb
adc
xor
cmpsb
mov
or
ds
and
xchg
mov
add
dec
ljmp
pop
scas
je
or
xor
push
pop
sub
adc
fstps
xchg
lret
je
mov
and
pop
sti
or
imul
mov
dec
jmp
push
jecxz
lock
pop
jb
mov
pop
sahf
arpl
xor
aas
out
push
mov
jl
xor
dec
pop
ret
pop
aam
and
loopne
insl
sbb
push
enter
inc
fistl
add
mov
ss
mov
jne
cltd
jnp
in
adcb
mov
cmc
push
icebp
xchg
jae
aas
adc
pop
sub
mov
mov
cmp
bnd
lods
leave
fstpl
push
pop
movsb
popf
insl
push
addl
push
lea
xchg
clc
bound
dec
lret
ret
jge
dec
sub
cli
divl
add
jle
cmp
xchg
jg
cmpsb
ret
mov
adc
dec
hlt
daa
xchg
in
push
rorb
xlat
ds
add
dec
xchg
addr16
fmuls
mov
ja
or
dec
mov
adcb
imul
jbe
push
sbb
mov
in
stc
fcoml
mov
in
and
push
es
addr16
mov
cli
out
push
jnp
or
cmp
out
inc
push
dec
scas
and
or
pushf
loope
mov
dec
xchg
test
add
aam
pop
loop
pop
xchg
cmp
rorb
test
add
push
aas
push
or
xor
in
aaa
inc
es
nopl
and
jp
fucomip
or
or
push
jno
jg
inc
mov
sbb
les
sti
fmuls
mov
inc
sub
sub
dec
fcmovb
stc
mov
imul
jbe
je
sbbl
jg
call
nop
in
xchg
in
ljmp
insl
in
push
fdivl
mov
rcr
es
sbbl
insb
and
dec
jns
lods
add
sbb
mov
cmc
xchg
push
sub
into
dec
out
int3
pop
cmp
and
pop
sbb
mov
imul
inc
xchg
xchg
jmp
and
or
lcall
xchg
ret
les
lock
mov
cmpsl
adc
xor
and
fcoml
add
cmp
sub
jl
pop
daa
mov
mov
xchg
adc
add
push
or
add
sbb
cli
pminsw
pop
movsl
sarb
fucomip
imul
mov
lret
sub
mov
dec
jge
in
mov
loopne
or
aam
or
lock
push
mov
xchg
outsl
mov
and
cmp
sbb
pop
popl
out
arpl
adc
jmp
arpl
xchg
jnp
mov
push
test
xor
nop
jo
ficomps
andb
jge
mov
mov
xor
mov
loopne
scas
jnp
sbb
push
fwait
leave
push
jbe
and
mov
cli
push
outsb
rolb
inc
sub
xchg
aad
or
dec
mov
aam
jg
loop
loope
jmp
das
sbb
insl
loop
ds
jne
xchg
mov
into
xchg
lock
fiaddl
fmulp
add
cmp
js
loopne
mov
movsl
cmp
ds
push
mov
mov
add
add
xor
repz
into
imul
fdivr
rclb
sub
pop
sub
jb
sbb
arpl
add
jmp
mov
inc
popf
pop
shll
mov
mov
sbb
push
cld
push
mov
addr16
push
mov
push
inc
outsb
mov
es
sbb
jg
lahf
andl
bound
mov
mov
sub
and
movsl
mov
mov
loopne
push
lock
jbe
stos
or
test
add
xchg
loope
test
push
and
scas
fdivrs
inc
cmpb
pop
fstpl
int3
imul
push
les
sbb
fmuls
ljmp
pop
cmp
sub
cmpsb
pusha
int
sbb
unpcklps
push
jp
ret
in
mov
sub
xor
daa
popl
scas
jae
sub
int3
int3
cmp
dec
jecxz
cltd
mov
loope
mov
scas
add
repz
bswap
xor
mov
inc
xchg
add
mov
push
sti
ss
inc
inc
xchg
std
loope
fucomi
into
mov
or
fists
gs
out
faddl
rorl
and
xor
jmp
adc
stc
xchg
das
cs
and
push
out
cmp
aas
jp
sub
adc
lahf
int3
cmp
xor
inc
inc
dec
fsubl
outsb
out
pop
pop
mov
adc
dec
fidivl
jl
pop
rcll
sbb
adc
xor
jmp
xchg
mov
in
mov
sub
fnstcw
loopne
push
not
in
shll
test
mov
sahf
pop
xlat
out
daa
enter
xchg
inc
or
arpl
sbbb
loop
adc
icebp
xor
push
das
mov
shl
in
or
pop
jo
and
adc
int3
stc
mov
xchg
mov
sub
inc
adc
in
aas
mov
iret
mov
push
addr16
inc
add
jp
add
pop
test
adc
push
lods
or
push
jmp
cmc
xchg
mov
mov
add
and
sbb
lret
push
mov
lret
sbb
push
cmc
cmp
jo
and
or
leave
ret
stc
cmp
mov
les
test
mov
loope
xchg
clc
dec
les
stc
les
xor
mov
or
int3
jae
or
cmp
mov
mov
mov
fidivl
adc
nopl
cltd
xchg
lods
bound
loop
pop
lods
pusha
mov
outsb
frstor
sahf
decb
outsb
mov
lods
fadds
movsb
push
adc
cmp
inc
popa
push
xor
sub
cmp
cmp
rcrl
ss
addr16
pusha
in
add
movsl
sub
jno
lods
inc
sbb
add
jecxz
pop
dec
sub
scas
popa
adc
mov
lods
cmp
lret
dec
inc
lds
fildl
fdiv
test
fmull
push
sub
dec
es
sub
andl
dec
je
sub
push
jbe
cmpsl
adc
testl
and
inc
or
inc
push
pop
adc
add
push
inc
xor
repnz
mov
xchg
xor
xor
jo
push
sbb
dec
sub
mov
lret
ret
cmpsl
push
clc
sbb
adc
mov
add
jmp
enter
xor
or
push
stos
xchg
push
xor
jae
jp
jmp
adc
jns
sbb
and
repnz
add
lods
and
cmp
xchg
cs
mov
lock
pop
or
push
push
inc
test
jg
mov
loopne
mov
inc
lcall
sbb
or
dec
jnp
dec
out
push
sbb
sti
movsl
dec
pop
jle
sbbl
repnz
pop
repnz
cltd
or
shll
fistps
sbb
cli
push
jl
lcall
add
and
push
and
dec
fcoms
call
cmp
fdivl
pushf
dec
int
iret
jle
adc
sub
xadd
aas
push
mov
xchg
sbb
aaa
ret
aaa
and
mov
rol
cmp
inc
adc
cmp
out
jl
jp
mov
nop
fwait
cmpsb
inc
xor
cltd
mov
and
add
fs
dec
es
sahf
dec
outsb
shl
aas
out
mov
xchg
aam
mov
push
pop
mov
std
jno
and
mov
cmc
sub
mov
mov
mov
push
call
cmpsl
sbb
pop
fildll
or
mov
sub
push
cmp
mov
dec
mov
mov
sahf
fs
adc
pop
add
ss
insl
adc
pop
scas
fnstcw
inc
mov
shlw
in
jp
push
add
aas
dec
sub
jno
dec
test
icebp
pop
push
jmp
scas
xchg
xchg
stc
jg
out
int3
mov
lea
ja
mov
aad
add
movsb
fistl
test
repz
xchg
mov
mov
inc
daa
mov
stos
loope
movsb
pop
jo
lods
sub
pop
or
and
outsl
outsl
adc
les
add
xorl
stos
pop
cmc
sahf
xchg
enter
fs
repnz
dec
stc
je
pop
data16
insl
push
incl
orb
sub
xchg
dec
ljmp
std
pop
xor
dec
lock
aad
cmp
scas
mov
adc
cmp
loop
sbb
mov
mov
aad
xor
sbb
cmp
sbb
mov
sbb
popf
incb
fnstcw
sub
aaa
and
enter
mov
mov
pop
out
outsb
rclb
mov
xchg
mov
lahf
sbb
mov
clc
mov
loope
add
into
sbb
stos
call
enter
sub
movsb
cmp
out
pop
dec
stos
mov
fsubrs
dec
lret
cmpsl
fwait
mov
aas
insl
mov
daa
mov
pop
add
scas
push
loopne
inc
pop
mov
fwait
insb
sbb
inc
sub
adc
lahf
xchg
jb
push
fdivp
cmp
adc
jbe
inc
sub
mov
sbb
lahf
pop
lret
push
pop
fldenv
mov
pushf
dec
or
jo
add
cmp
jbe
inc
cmp
mov
push
fidivs
adc
in
bound
in
mov
out
js
jg
into
in
dec
jns
outsb
sbb
mov
mov
aaa
dec
lock
jg
mov
cmp
and
pop
xchg
add
cmp
adcl
jl
inc
testb
mov
lods
mov
out
and
jb
cs
sub
jo
popl
jno
pop
jns
fmull
mov
shll
cmp
pop
cs
nop
sbb
xchg
jl
jl
pop
notl
test
pop
cmpb
xchg
adc
sbb
cmp
addr16
adc
int3
pop
outsl
sub
scas
js
cmp
movsb
add
adcb
loope
aam
mov
sbb
mov
adc
arpl
sub
shrb
push
lock
scas
push
dec
mov
jp
loope
or
inc
test
adc
hlt
mov
scas
cli
out
jne
in
jne
push
test
pop
inc
push
in
fcmovnu
sbb
icebp
ror
loope
repz
inc
mov
lcall
stos
mov
xchg
int3
aam
stos
sub
or
sub
hlt
dec
shll
pop
stos
sub
movsb
jns
mov
and
in
mov
data16
adc
sub
in
add
sub
das
mov
mov
cmc
int3
cmp
jb,pn
mov
cli
outsb
mov
addr16
hlt
xchg
cmp
xchg
and
cmc
ljmp
adc
mov
sahf
or
jge
jle
sub
movsb
dec
jno
sub
call
push
sbb
aaa
cwtl
mov
jge
mov
or
pushf
dec
ret
arpl
lret
insb
mov
inc
cwtl
xchg
mov
cmp
push
dec
fsts
mov
div
jne
mov
jp
sarb
sub
adc
xchg
aaa
inc
lcall
rorb
lods
sub
jo
inc
dec
sbb
rol
inc
test
lock
cli
lcall
jle
adc
jecxz
inc
pop
inc
ret
pop
xchg
xchg
loope
pop
test
in
scas
lea
mov
rcrb
sbb
out
cmp
dec
dec
in
cmpl
decb
lret
sub
jnp
aaa
sub
xchg
mov
into
xor
cmpsb
aaa
xchg
mov
jg
das
mov
and
mulb
sbb
pushf
aad
mov
pop
sbb
shl
and
ret
addr16
iret
pop
fcoms
dec
inc
pop
jb
lahf
sbb
movsb
sub
fmuls
fmulp
xchg
sbb
cmp
push
jl
xlat
inc
sub
push
lcall
clc
fcmovu
ss
mov
repz
cwtl
inc
popf
pop
int
mov
add
scas
dec
mov
jb
jb
adc
arpl
push
js
leave
cmp
jp
icebp
add
inc
mov
push
and
or
pop
push
push
lds
dec
and
dec
jmp
inc
cs
jp
pop
fnstsw
add
add
mov
mull
and
push
dec
push
and
pushf
and
cld
mov
dec
ja
sub
mov
cmc
int
in
push
xor
xlat
and
pop
sub
pop
add
test
pushw
xchg
sub
add
pop
jmp
inc
pop
popa
xchg
add
pop
xchg
pop
mov
out
mov
lds
nop
je
mov
xor
jnp
out
lret
addr16
mov
outsb
push
stos
adc
iret
push
mov
shrl
mov
icebp
push
fisttpll
dec
ja
xor
jnp
jmp
pushl
test
mov
lods
ja
icebp
les
repz
inc
divl
js
enter
aam
insl
sbb
add
xchg
and
push
mov
ficompl
ficomps
cmp
lcall
in
add
xchg
ljmp
fiaddl
xchg
jmp
mov
pop
test
out
dec
mov
pop
mov
fadds
sub
lods
inc
xchg
iret
scas
push
aad
icebp
popa
mov
jae
outsb
nop
adcl
sbb
dec
xor
fbld
adc
popf
push
adcb
jecxz
rcr
cmp
inc
or
or
into
scas
jmp
cmp
mov
pop
sub
fidivs
push
cltd
lds
movsb
lcall
jle
out
arpl
pop
cltd
sbb
sti
call
popf
sbbb
imul
pusha
xlat
mov
xchg
adc
adc
daa
pop
lods
xor
nop
inc
dec
data16
fidivrl
inc
add
popf
in
mov
aad
repz
dec
test
clc
jle
sbb
aaa
and
in
out
mov
sub
mov
ljmp
and
dec
pop
ret
imul
dec
lret
push
mov
cmp
clc
push
in
fs
pop
idivl
jae
sbb
ret
decl
call
lcall
icebp
stc
bnd
hlt
adc
bound
xchg
stos
fildl
xor
jmp
fiaddl
fcomps
mov
cmp
stc
in
mov
rcrb
jbe
mov
or
cmp
push
adc
jb
mov
sub
push
ja
mov
in
xorb
or
into
jne
jo
and
int3
adc
cmp
xchg
notl
test
pop
inc
mov
or
dec
add
ja
insb
test
and
sub
iret
jl
or
mov
and
and
mov
lret
lahf
pop
mov
xchg
mov
inc
dec
add
ret
push
sti
push
cmp
sbb
js
vmovss
mov
or
leave
ss
pop
pop
jmp
mov
mov
ja
mov
adc
lret
icebp
movsb
or
xor
cld
mov
cmp
jo
adc
test
inc
pop
roll
dec
cmp
dec
cld
pop
sbbl
shll
aaa
push
cmp
xchg
pop
dec
sbb
sbb
jns
mov
add
jo
imul
push
xor
push
lea
out
or
xor
xchg
subl
jmp
in
scas
stos
push
rol
pop
jb
nop
fnstenv
dec
xor
aas
iret
insl
mov
ljmp
xchg
inc
scas
pop
loop
mov
mov
int
loope
mov
pusha
sbb
in
push
add
xor
das
push
fbld
subl
sub
idiv
ljmp
lock
negl
fldl
insb
xor
and
pop
neg
scas
jne
gs
cmp
add
push
dec
out
mov
inc
out
cmp
mov
repz
in
cmpsl
jae
and
loop
nop
sbb
cli
sti
mov
cmpsl
aas
imul
sub
sbb
mov
je
cwtl
jmp
aaa
adcb
sbb
shrb
pushl
mov
cs
dec
adc
jecxz
mov
inc
push
pop
outsb
inc
mov
les
mov
lret
push
and
rol
ds
cmp
or
outsl
into
hlt
push
sbb
scas
cltd
sub
mov
mov
push
ljmp
and
jle
lods
outsl
aam
sti
cmp
mov
rcr
sbb
mov
pop
pop
inc
mov
dec
mov
mov
mov
inc
leave
push
jns
cs
psubsb
stos
stos
mov
jne
rcrl
xor
lds
inc
and
popa
shlb
sbbl
pusha
mov
fisttpll
fistl
dec
movsb
cmp
fsubl
adc
sub
shlb
scas
sbb
mov
jp
aas
mov
sub
sbb
popf
jmp
movsl
fsubrs
mov
std
dec
and
mov
xchg
ds
adc
aaa
int3
or
sarl
popl
cmp
push
fucomip
and
dec
push
sub
and
sbb
mov
fisubrs
adc
lcall
and
mov
mov
xor
vminsd
xorb
outsl
add
cmp
jl
in
movsb
jo
std
loopne
int3
fbstp
mov
sti
inc
adc
lds
in
bnd
xor
call
cmp
push
cmpsb
inc
jg
leave
push
fiadds
xor
test
popa
xchg
mov
mov
decb
push
push
jno
jle
gs
push
incb
jl
fcompl
std
lahf
setle
lods
mov
jg
mov
enter
xchg
mov
aam
sub
push
fwait
int3
inc
mov
jo
les
sarl
mov
or
fnstenv
or
aaa
hlt
push
inc
repnz
mov
lods
lcall
mov
push
lcall
out
lret
xor
cmp
cld
xor
mov
or
imul
xchg
inc
push
mov
mov
cwtl
xor
lods
jp
inc
lret
cmc
aad
add
in
leave
mov
fcmovnbe
push
push
or
shlb
mov
addr16
jae
xor
sarb
dec
xchg
out
sub
into
sbb
jbe
rorb
or
pop
and
pop
push
out
sbb
in
cmp
ja
push
cmp
pop
roll
mov
dec
cmpsl
lock
cld
push
jb
fimull
xor
sub
imul
inc
xchg
aaa
cld
xchg
scas
stos
add
notl
cmp
jp
xchg
das
int3
rolb
xchg
orb
sbb
jge
jg
pop
sub
test
cmpsl
dec
push
addr16
les
inc
je
push
pop
or
nop
xchg
adc
jmp
cmpsb
jno
or
loop
jg
in
movsl
sti
lret
in
dec
imull
sub
pushf
lret
es
dec
push
mulb
stos
cs
jb
ret
lock
mov
sahf
in
xchg
iret
xor
xlat
stos
jbe
arpl
lods
xchg
addb
movsb
add
imul
adc
ret
das
cmpsl
jmp
movb
mov
pcmpgtb
jae
fidivrl
into
dec
cwtl
hlt
xor
sub
gs
aad
ds
dec
outsl
in
out
sbb
and
outsb
stc
cmpsb
jno
sahf
inc
sti
mov
push
fcoml
xor
lods
stc
sbb
xor
xor
fisubrs
adc
sti
push
or
jne
pop
test
mov
pop
orb
jle
sbb
jecxz
ret
test
jge
pop
adc
es
ret
fsubp
bnd
lods
or
jo
xchg
in
es
dec
cmp
inc
cld
cwtl
mov
data16
popa
sbb
in
cmp
mov
dec
cwtl
gs
adc
or
mov
testl
sbb
sbb
roll
cmp
xor
dec
sbb
push
ret
imul
or
je
mov
xchg
push
cltd
outsl
stos
inc
lcall
insl
repz
pop
add
popf
or
jle
nop
scas
fiaddl
rorl
adc
push
std
fwait
push
sahf
mov
mov
repnz
push
aaa
push
lods
fldenv
jns
xlat
xlat
sbb
movsl
inc
push
xor
iret
cli
outsl
jns
push
xchg
into
pop
pushf
xlat
popa
cmp
pop
fwait
inc
mov
adc
out
mov
mov
shlb
stos
jg
dec
dec
mov
inc
jg
xacquire
aad
imul
mov
xor
aas
and
popa
xchg
pop
push
test
fisttpll
mov
ja
xchg
sbb
pushf
rclb
mov
daa
shll
push
cltd
les
aam
xchg
shlb
jnp
fisttpll
push
mov
fs
addl
mov
pop
cmp
inc
jb
outsw
push
lods
adc
dec
call
push
jle
orb
push
and
notl
test
fwait
es
or
das
push
xchg
std
dec
pop
jp,pn
pop
fcomip
sub
pusha
fmuls
inc
testb
dec
xor
aas
inc
and
mov
into
int3
jl
or
arpl
mov
mov
jge
cmp
add
push
push
push
imul
enter
out
adcb
cltd
mov
shrb
push
in
cmp
out
adc
movsl
ficompl
push
fimuls
pop
pop
pop
cmp
mov
pop
mov
lret
stos
into
push
test
fcomps
sub
in
dec
sahf
cmpsb
cltd
sub
pop
sub
sbb
jp
mov
cld
sbbb
pop
hlt
pop
nop
shrb
inc
enter
cmp
popf
icebp
push
aaa
dec
fists
fidivrl
ja
push
int3
mov
or
inc
rorl
roll
sbb
inc
jnp
xchg
test
aaa
xchg
inc
push
add
popl
adc
jo
lahf
hlt
add
test
insl
inc
push
pop
and
dec
xchg
int
pavgw
mov
mov
push
stos
in
andl
mov
icebp
fisttpll
cmp
add
jge
int3
cmp
inc
xchg
mov
bound
out
fmuls
cs
mov
mov
loopne
jnp
mov
cli
push
stc
cmp
adc
mov
jae
neg
imul
jecxz
adcl
mov
cmpsl
cmp
inc
lret
cwtl
mov
rol
outsl
mov
mov
pop
mov
push
adc
icebp
pop
push
pushf
clc
cmp
cmp
xorb
pop
js
mov
out
aaa
jmp
mov
out
imul
push
insb
mov
in
sub
fbstp
cmc
dec
dec
mov
aaa
push
cli
dec
push
scas
adc
addr16
hlt
insb
fstpl
int3
int
push
andl
mov
push
in
mov
mov
or
and
into
adc
aad
mov
pop
pop
fists
and
push
lea
add
imul
ror
fcompl
in
ljmp
popa
inc
int3
test
lcall
ss
cltd
fdivrl
enter
jl
cmp
test
daa
inc
rdmsr
cmc
in
jmp
sti
loop
in
rcrb
mov
aad
fstps
xchg
pusha
jae
cmpsb
or
pop
ret
dec
mov
mov
inc
mov
pop
les
aam
mov
adc
push
fsubl
clc
jg
or
mov
imul
ret
or
mov
aas
and
add
aam
std
add
jnp
mov
add
pop
loope
std
movsb
pop
call
pop
add
stos
mov
loop
andl
jmp
inc
push
dec
stos
popf
xor
jae
je
loop
add
mov
cmp
add
pop
sbb
pop
add
les
mov
xchg
rolb
test
inc
pop
scas
mov
or
xchg
and
push
xchg
out
and
xchg
xchg
popa
jbe
insb
jecxz
mov
xchg
mov
and
scas
out
xor
xor
ds
xor
inc
dec
orl
mov
aad
or
sub
sub
int
mov
movl
test
fistl
movsb
adc
push
xlat
sub
lahf
dec
pop
mov
mov
inc
xchg
pusha
call
iret
cmpsl
lods
addr16
inc
enter
xlat
iret
leave
lds
lcall
vmread
test
in
or
mov
xchg
push
call
fwait
leave
les
inc
js
adc
fdivs
fs
test
mov
stos
call
dec
repz
and
arpl
repz
add
bound
push
pop
icebp
nop
inc
sub
ljmp
dec
rcll
jmp
ret
push
inc
push
mov
jmp
xchg
push
mov
xchg
xor
cmpsb
sbb
and
outsl
sbb
fsubs
lcall
push
sub
and
jmp
adc
or
add
cmp
add
cmc
jg
or
adc
jae
pop
inc
xor
adc
scas
xchg
mov
or
cmp
outsb
out
lock
xchg
xchg
sub
mov
mov
xlat
loopne
add
dec
fs
insl
sbb
jb
aam
mov
jo
cmp
sarl
cmp
popf
pop
jp
cmp
adc
aad
lods
add
xchg
cmpsb
sub
sbb
mov
out
lret
or
dec
push
repz
mov
stc
sub
cmp
sub
xor
add
or
push
test
or
inc
movsl
mov
pop
add
adc
inc
push
jno
inc
in
ret
insl
sbb
cmpb
cltd
push
sbb
adc
and
jle
movsl
mov
enter
jns
mov
cmp
ret
push
or
data16
std
pop
jb
cmp
inc
sbb
add
add
pop
lret
push
pop
xchg
xchg
sbb
mov
fisubs
add
rorb
adc
sti
push
mov
mov
dec
iret
or
mov
repz
jno
fucom
cli
cld
sub
add
inc
inc
xor
cmp
outsb
outsl
push
lahf
jmp
repz
out
fadd
jns
imul
push
imul
sbb
mov
imul
cmp
jecxz
int
gs
mov
xchg
fidivrl
out
pop
aas
into
adc
cltd
ds
pop
cmp
ljmp
sbb
xchg
std
sub
dec
cltd
test
scas
sbb
ss
inc
stos
cmp
mov
cmp
mov
leave
mov
sub
iret
push
jne
sbb
shll
dec
sbb
aaa
or
imul
jecxz
loop
mov
dec
cmp
mov
jmp
add
jns
push
clc
or
lcall
lcall
cmp
sbb
fwait
xchg
dec
sbb
jp
outsb
fwait
cmp
div
push
jp
or
pop
mov
xor
inc
sbb
mov
es
or
fcomps
dec
loopne
outsb
adc
mov
dec
mov
xor
enter
in
daa
orl
outsb
test
fwait
jmp
mov
push
push
push
outsl
pop
or
dec
ficompl
inc
adc
mov
inc
inc
lret
stc
sbb
into
lret
sub
es
inc
sub
jne
sub
mov
popa
testb
testb
mov
mov
bound
jno
out
mov
ljmp
cmpsl
sar
cmp
sbb
mov
or
cmc
fdivrs
mov
outsb
push
or
dec
rorb
out
dec
arpl
fidivrs
jg
les
shl
and
add
jo
jnp
xchg
mov
push
sub
inc
popl
inc
js
adc
mov
mov
scas
jecxz
nop
jbe
mov
xchg
jecxz
ja
in
sub
cwtl
enter
adc
arpl
sbb
mov
mov
push
push
in
xchg
and
xor
imul
pop
fcompl
mov
nop
inc
stc
mov
aam
adc
inc
push
shl
scas
leave
pop
pop
sub
imul
sbb
sahf
test
ret
lock
pushf
pop
mov
cs
mov
imul
mov
ffree
sbb
push
pop
jnp
dec
pop
rcll
lcall
sub
cmpsb
push
xchg
xchg
or
push
jnp
jmp
cld
xchg
add
add
jmp
into
sbb
callw
push
xchg
pushl
sub
mov
mov
xlat
stos
stos
outsb
adc
cmp
mov
and
xchg
mov
cli
mov
sbb
jge
sbb
in
jmp
adc
jbe
ficomps
mov
sbb
std
test
push
roll
sbb
jecxz
jecxz
clc
repz
sarb
ret
mov
mov
mov
cltd
lea
mov
ret
xor
fwait
dec
in
pop
fidivrs
jae
ret
pop
xchg
jo
inc
test
and
gs
xchg
outsb
xchg
lods
lcall
sub
sbb
push
jp
data16
mov
imulb
ficomps
incb
dec
stos
push
rcrb
fcompl
aaa
in
inc
adc
sub
jg
jo
sbb
int
dec
aas
test
xchg
test
mov
dec
pop
cmpsb
iret
call
inc
out
mov
xor
xlat
cli
xor
xor
icebp
and
adc
movsl
jg
movsb
enter
ret
push
push
jg
testb
xor
std
cmpsl
cs
int3
sti
pop
mov
fsub
mov
fdiv
loopne
lret
lea
pop
adc
pop
ret
inc
ds
cmp
jecxz
mov
and
mov
negb
xor
fwait
sub
push
adc
mov
je
sub
push
ljmp
pop
cmpsl
pop
insb
fisubrs
sti
or
daa
fst
jl
dec
aas
mov
ds
dec
out
neg
add
stc
cltd
out
shrb
lods
inc
arpl
mov
or
std
shrb
ret
jne
call
cltd
ret
push
fs
inc
sub
fs
and
pop
repnz
or
inc
loope
cmp
cmp
or
mov
ret
jge
pop
jge
lcall
sahf
call
pushf
inc
or
sub
fistpl
jge
loopne,pn
adc
mov
pop
cmp
cmpsl
cmp
mov
xor
test
mov
sbb
xor
fsubrl
aas
hlt
addb
jns
sbb
testl
and
xchg
loop
jnp
push
mov
stos
or
loop
movsl
jle
decb
mov
cmp
fimuls
inc
add
aaa
inc
outsb
jg
mov
repz
xlat
push
sub
sti
sbb
or
xor
push
iret
mov
mov
hlt
xor
fstp
into
pop
inc
lahf
push
cmpsl
sbb
addr16
ljmp
add
pop
idivb
jle
jne
push
and
outsb
xchg
push
push
ss
xor
push
call
cmc
rcrl
mov
andl
dec
inc
movsb
xor
dec
or
fisttpll
cld
or
cltd
pop
adc
mov
mov
rcr
sbb
gs
sbb
into
dec
push
insb
sub
mov
in
mov
dec
outsb
sbb
movl
cltd
pop
bound
outsb
arpl
push
sub
dec
cld
or
str
popa
stos
cmp
xor
pop
sub
inc
cmp
clc
jb
mov
inc
fwait
lret
fs
std
repz
inc
adcl
xor
shr
shrl
pop
push
lcall
lcall
js
xchg
out
dec
and
xchg
and
dec
inc
sahf
or
add
dec
mov
adc
inc
stos
inc
dec
push
adc
stc
dec
pop
mov
mov
dec
xor
imul
icebp
adc
mov
mov
mov
cmc
sbb
arpl
lods
jmp
aad
dec
jae
cmpsl
inc
push
lea
jnp
and
xchg
ljmp
inc
int3
mulb
rcrb
mov
add
lods
push
idivb
lods
cmp
insl
cmp
mov
xlat
sbb
movsl
add
imul
mov
out
jo
fstl
fiaddl
xor
shlb
es
add
out
pusha
in
repz
xor
ja
inc
enter
mov
sub
xchg
and
negb
xchg
or
mov
es
push
cltd
out
mov
pusha
mov
lods
sub
ss
lahf
mov
and
push
sbb
xor
sub
mov
gs
add
shrl
inc
fisubs
sub
mov
fstpt
cmc
push
fwait
test
test
popf
lret
and
or
xchg
loope
fwait
aas
and
sbb
dec
pop
dec
in
addr16
sub
lret
stc
mov
pop
dec
cmc
out
mov
ja
mov
add
mov
fistps
push
mov
cltd
xor
subb
movl
roll
mov
fstps
rorb
mov
xor
mov
movsl
add
add
sub
or
dec
jne
inc
adc
insb
mov
stos
xor
ja
js
lret
sub
imul
or
xor
or
dec
xchg
mov
orb
add
ret
jmp
paddusb
fistpll
rcrl
push
movsb
add
xchg
idivl
fcomp
adc
cmp
xlat
push
jno
stos
adc
test
hlt
cld
stos
push
psrlw
pop
mov
fwait
out
jle
in
inc
mov
pop
pop
mov
test
iret
mov
push
mov
sub
sbb
pop
repz
sbb
add
std
aas
cmc
in
hlt
movsl
aas
fmulp
or
jl
test
dec
daa
std
jl
rclb
mov
lcall
popf
xchg
adc
mov
dec
xchg
shlb
stc
insl
repnz
mov
sub
addb
cltd
rolb
sahf
xchg
data16
cmc
mov
cmc
icebp
dec
cmp
mov
aaa
cmc
cld
cmpsl
mov
fsubrs
fdivl
out
sti
adc
cmc
add
cs
rcll
stc
in
inc
push
jp
sbb
jmp
mull
mov
in
xor
hlt
inc
xchg
lods
mov
in
push
or
adc
cmpsl
ljmp
xchg
ret
mov
add
out
jnp
push
ds
mov
mov
jno
fistps
sbb
add
in
cmp
and
xchg
dec
iret
cwtl
pop
adc
inc
mov
test
mov
push
mov
pop
sarb
fcoml
ds
aam
push
or
movsb
adc
rcr
jns
nop
push
mov
cmp
jge
pop
push
movsb
scas
push
mov
xchg
xchg
es
stc
bound
bound
xchg
and
inc
insl
push
ljmp
sub
adc
add
into
pop
inc
jae
push
sarb
divb
sub
or
sbb
jae
mov
out
jmp
aaa
xchg
js
je
jns
scas
push
and
test
stos
sbb
fsubs
or
mov
or
add
fadd
pop
mov
or
faddl
mov
fisttpll
xor
js
cmpsb
push
xchg
pop
cld
pop
add
test
xor
jmp
sarl
fs
dec
cltd
push
scas
rcl
lahf
inc
jo
fstpt
xchg
or
insb
mov
and
dec
mov
xchg
rep
xor
xchg
jb
out
fidivrl
loop
popf
cmp
jle
cmp
fsubrs
dec
cmp
add
or
sub
mov
push
pop
adc
jns
movsl
or
call
and
pop
and
pushf
std
push
mov
out
ficomps
sub
push
lods
enter
push
jg
pop
stc
pop
out
mov
sbbl
fisttps
sbb
sti
inc
sub
mov
push
test
out
popf
rorl
lea
aaa
rol
enter
into
nop
sbbb
mov
and
jge
icebp
cmc
icebp
iret
pushf
push
jecxz
push
rcll
cmp
pop
imul
push
out
jbe
mov
int3
addr16
xchg
in
inc
xchg
ret
mov
xor
out
cmc
inc
or
les
adc
or
mov
sbb
jne
xlat
xchg
cmp
lods
imul
test
xchg
xor
mov
jb
push
es
cld
popa
jne
lods
div
dec
mov
bound
mov
sbb
dec
fcomip
mov
and
test
add
in
jmp
mov
jne
and
xor
inc
repz
add
ret
xchg
ds
movsb
jae
mov
test
jge
sahf
std
icebp
pop
push
jge
push
test
les
imul
std
mov
sub
cmp
movsl
scas
dec
push
or
jg
les
out
jge
mov
push
testl
push
lods
lret
mov
testl
ret
das
imul
inc
sbb
icebp
jno
repnz
mov
clc
daa
pop
lock
int3
jg
mov
fcmovbe
add
or
fldcw
jns
or
push
filds
adc
repz
sbb
or
call
pop
clc
test
add
movsl
sbb
mov
mov
in
xor
das
sbb
sub
and
mov
dec
pop
jecxz
sub
bound
ficompl
ret
mov
mov
jecxz
xor
insb
ja
stc
lahf
sub
push
jb
daa
xchg
shlb
or
negl
pop
mov
adc
sub
fwait
xor
cmc
arpl
repz
in
cmp
mov
push
sbb
jne
xchg
mov
repz
adc
mov
xchg
xchg
cmpsb
lds
mov
mov
mov
jb
lock
insb
and
sbb
out
cwtl
or
fs
cltd
mov
stos
xor
aam
out
mov
mov
mov
mov
aam
sub
sbb
mov
fistps
repnz
dec
jecxz
gs
sarb
pop
ds
sub
jns
imul
push
loope
sbb
add
push
int3
int
or
mov
pop
popf
fnstsw
xchg
adcb
mov
push
outsl
fimull
add
imul
fdivr
push
int3
xor
imul
js
sub
or
inc
fmul
in
repnz
mov
jnp
mov
xor
std
repz
sub
scas
mov
insb
push
notb
jno
lcall
test
es
pop
cmc
pushf
cmp
jle
aad
aad
call
or
pop
or
add
repz
pusha
into
add
mov
pop
lods
pop
adc
aam
adc
es
xor
dec
cmpsl
pop
push
in
and
flds
pop
cmc
test
enter
int3
mov
or
mov
pusha
jne
mov
jg
or
or
ret
fcomp
sbb
mov
and
in
test
mov
dec
mov
add
pop
hlt
pop
frstor
inc
and
cmp
mov
fldenv
stc
push
jbe
jns
cld
stos
cmp
nop
mov
inc
jge
sub
jl
aaa
mov
inc
or
sub
push
sarb
fldl
or
and
xor
push
inc
jecxz
cs
lret
js
dec
jle
dec
je
xor
aas
push
in
add
not
mov
push
test
adc
js
adc
and
dec
ret
mov
in
dec
montmul
cmpsb
add
or
cmpsb
loop
ds
mov
loop
and
out
adc
add
inc
cltd
imul
divl
jo
xor
push
inc
add
addr16
push
hlt
or
jne
lods
xlat
ja
fucomip
mov
cmp
and
repnz
in
cmp
pop
and
xor
pushf
pop
mov
les
into
cmp
and
iret
and
gs
jge
arpl
inc
push
xlat
sahf
jb
lds
mov
lret
adc
gs
or
ret
adc
or
dec
in
jne
xacquire
dec
push
pop
sub
or
scas
pop
fcoms
pop
gs
adc
xchg
add
adc
sbbb
dec
shl
push
jge
mov
add
shl
sbb
jns
cltd
call
cmp
imul
lods
push
xchg
xorb
pop
push
cmpsl
xchg
addr16
mov
lahf
daa
fbld
test
lods
cli
add
jb
inc
pop
adc
clc
mov
adc
push
insb
sub
cli
cmc
push
mov
rcrb
ret
fcmovnb
mov
clc
imul
and
mov
jg
negl
jns
jle
pop
out
es
frstor
adc
fnstcw
push
into
lret
jg
cmpsb
mov
test
ljmp
test
push
addl
and
or
dec
sbb
insb
mov
hlt
imul
jmp
mov
iret
stos
mov
mov
jl
mov
aam
inc
enter
out
push
mov
aad
iret
pop
add
adcl
mov
mov
call
lods
aad
push
cmc
fstpt
dec
mov
int3
mov
jge
dec
cmpsl
popf
imul
inc
push
out
incl
stos
pop
nop
add
ds
or
push
test
mov
dec
xchg
cmp
dec
inc
rcr
inc
mov
test
mov
sti
xor
iret
or
iret
or
loop
mov
mov
leave
inc
or
mov
inc
fists
andl
sub
aam
xchg
in
push
push
cmpl
cmpsb
test
pop
lret
lds
push
pop
fnstsw
sbb
adc
movsl
test
pop
jns
xor
add
cmpsl
lret
xchg
bound
jne
popa
in
jg
call
push
mov
sbb
cmpsl
insl
shrl
jmp
jnp
and
test
sarl
push
adc
cmp
lods
insb
jmp
pop
mov
push
test
adc
xor
fisubl
pop
xchg
bound
out
or
xchg
repz
imul
push
push
stos
inc
pop
call
add
xchg
stos
popa
pushf
arpl
dec
in
mov
jnp
das
and
aas
loop
mov
sub
sbb
sub
cmp
loopne
xor
cld
and
jb
pop
lock
imul
mov
pop
mov
mov
and
stos
cmp
and
mov
inc
and
mov
mov
addb
sbb
add
mov
xlat
movsb
daa
fisttpl
mov
mov
in
inc
fwait
dec
inc
and
test
cmpb
or
lock
fimull
sahf
adc
sbb
js
je
pop
mov
out
jecxz
bound
and
sarl
push
clc
les
push
dec
jmp
xchg
fcomps
push
jmp
lret
adc
jp
mov
mov
enter
adc
out
cltd
jecxz
mov
and
mov
sbb
or
fimull
or
cmpsb
pop
sti
pop
dec
je
adc
xchg
xor
cwtl
sbb
out
cmp
push
sub
pop
jb
icebp
popf
leave
sub
adc
sub
repz
jecxz
fildl
pop
fcomps
lods
xor
mov
add
fldt
filds
sub
inc
das
mov
loop
push
sub
mov
sub
inc
sub
sub
sub
les
cltd
cmp
mov
add
sahf
push
push
or
pop
pop
cmpl
jp
je
adc
mov
ret
insb
xor
add
call
push
in
loopne
fucomi
lock
push
rorb
mov
mov
stos
push
sbb
into
sbb
lahf
lds
test
lods
or
lods
or
mull
nop
movsb
inc
mov
jae
mov
mov
int
sti
sbb
ret
cmpsb
bound
sbb
mov
xor
clc
ror
lods
mov
and
sub
lcall
and
and
loop
mov
jmp
cmp
inc
in
out
adc
sbbl
mov
nop
fwait
cmp
add
adc
mov
mov
xor
cwtl
push
icebp
inc
in
roll
rcrb
or
rcrl
shll
pushf
out
ljmp
sub
int
mov
icebp
cmp
push
iret
push
inc
xchg
std
rcrb
fld
push
xchg
cmc
jno
pop
mov
dec
or
shll
cmpsl
mov
xchg
pop
sub
add
dec
rcrb
push
mov
mov
adc
push
add
cmc
movsb
pop
or
sbb
push
ret
repnz
inc
jl
dec
mov
loope
cli
or
iret
int3
int3
and
xchg
pop
adc
cmc
xor
push
push
jnp
jmp
xor
xor
add
xchg
pop
xchg
jns
push
adc
jo
mov
and
insl
hlt
adc
in
and
mov
cmpsl
and
ss
insb
lods
movl
ds
adc
mov
sbb
push
mov
jge
in
xor
jb
mov
int
jl
xor
test
jge
mov
sbb
pusha
ja
and
mov
in
add
outsl
movsl
push
fs
inc
out
xor
xor
movsl
mov
xchg
dec
inc
mov
fldcw
pusha
bound
push
data16
aam
or
mov
test
popa
and
jnp
outsl
notl
shlb
daa
jno
stos
jne
xchg
in
mov
xchg
xchg
jmp
xorl
addr16
xor
sub
inc
dec
pop
scas
sbb
andnps
insl
and
scas
push
test
pushf
mov
call
push
sbb
fldt
test
and
mov
stc
dec
or
pusha
ror
out
jecxz
inc
sub
ffree
mov
punpckhwd
inc
cmpsb
mov
push
insb
movsb
jns
divb
inc
or
sbb
jmp
imul
xor
sub
fsubrp
lods
and
xchg
movsb
cltd
and
xor
push
popf
frstor
outsl
jecxz
movsl
adc
mov
cmpsb
addb
and
repnz
aam
cmp
int3
arpl
addl
adc
repnz
sbb
mov
sub
andl
sub
subl
pusha
gs
pop
loope
pop
push
vpshab
shrl
loope
inc
inc
mov
jmp
add
sub
mov
scas
sbbl
leave
negl
xor
xor
adc
loopne
mov
std
sub
ds
fidivl
pop
jnp
push
stos
mov
jb
push
daa
or
xor
insb
not
inc
xorb
push
test
jecxz
cmp
xor
mov
fstpt
or
popf
pushf
std
jbe
in
lahf
sarl
xor
xor
jbe
mov
insb
sbb
outsl
int3
jbe
jo
adc
push
fwait
aad
or
or
dec
lahf
jae
mov
sbb
xchg
fisubs
or
aad
mov
dec
pop
leave
add
rol
stos
add
cmp
aaa
add
push
jle
aad
nop
ret
enter
fisttps
popf
test
sub
dec
lcall
ss
mov
sahf
sub
jl
psubsb
pop
les
or
mov
lret
loopne
xchg
and
stc
adc
sbb
mov
pusha
adc
sbb
out
mov
dec
outsl
jmp
dec
inc
mov
or
sub
push
popa
cmpsl
pop
push
sarl
mov
les
fidivl
mov
cmp
addr16
shlb
push
arpl
inc
mov
in
pop
addr16
cmp
mov
jb
ss
dec
lods
das
mov
adc
sar
pop
jecxz
mov
in
ffree
xor
ror
icebp
stos
insb
pop
aam
fs
adc
or
xor
enter
xchg
aam
loop
pop
aad
hlt
bound
dec
xor
dec
lock
imul
aaa
push
out
ljmp
out
xchg
pusha
scas
popa
cwtl
jmp
mov
mov
flds
shlb
jae
mov
mov
cmc
aaa
adc
xor
arpl
mov
enter
mov
mov
arpl
mov
repnz
sbb
xor
cli
lods
ja
sbb
mov
or
int
add
shrb
loop
fists
mov
out
xchg
cmp
sbb
sub
push
cmp
mov
or
enter
pop
sub
rclb
pinsrw
clc
fwait
mov
data16
pop
jno
orl
pop
mov
mov
ds
mov
mov
popf
data16
mov
cld
push
xchg
mov
hlt
mov
xor
out
pop
pop
fcomp
xlat
cmpsb
inc
xor
push
shl
les
xor
mov
fisubl
out
and
mov
inc
mov
cwtl
ret
and
mov
mov
lret
xor
mov
pop
push
or
icebp
popa
mov
jbe
mulb
shrl
sub
imul
or
bound
push
sbb
mov
ret
insb
je
lods
push
mov
and
movsb
jb
dec
hlt
in
add
sub
pop
ja
jge
sbb
in
test
add
daa
inc
aam
ret
popa
mov
push
xor
cli
pop
xchg
jne
sbb
mov
xor
mov
lret
loope
jmp
lods
fcom
push
push
pop
jbe
mov
add
push
cmp
jo
repnz
adcb
cwtl
fdivs
mov
or
out
mov
add
fisubrs
pusha
push
popf
mov
or
int
and
out
sbb
je
sub
mov
jb
mov
adc
clc
push
sarl
test
fs
jno
mov
sub
and
inc
outsb
fnstenv
sbb
adc
sahf
test
sti
stos
addr16
iret
xchg
push
xchg
mov
stc
icebp
jbe
push
mov
cmc
mov
lcall
push
add
cli
xchg
out
jnp
ret
mov
sbb
test
out
or
jle
jbe
sar
lods
lds
lcall
lds
jns
mov
fisubs
ret
inc
dec
aas
fiadds
mov
inc
in
adc
dec
les
jno
cmc
loope
out
fstpl
imul
stos
cmp
roll
mov
xor
cmp
mov
and
jae
aad
mov
daa
sti
out
xchg
mov
mov
mov
or
and
aam
mov
ret
mov
jmp
mov
test
cmpsb
addb
mov
shlb
mov
xor
andb
test
jecxz
cmp
inc
out
add
repz
xchg
insb
xchg
push
std
fisttps
mov
push
mov
cmp
inc
dec
cmp
repnz
adcl
mov
test
movsb
rcr
scas
ret
add
dec
negl
adc
and
call
je
or
mov
cmp
adc
lods
sub
gs
dec
lods
xchg
fldz
fnsave
mov
jge
repnz
leave
mov
int3
cmp
mov
push
dec
sbb
xchg
pop
xor
and
cs
lcall
jg
mov
inc
subl
mov
es
adcb
lret
stos
jbe
jns
arpl
fincstp
mov
mov
loope
adc
in
pop
adc
and
test
cmp
xlat
rolb
arpl
stos
loopne
test
sub
push
cld
or
or
cmp
call
jbe
xor
jns
mov
pop
jle
ljmp
adc
sbb
adc
jmp
pop
cwtl
jo
pop
ss
leave
push
stc
xor
popf
and
or
cmp
push
fsubl
cli
fistpll
jmp
mov
scas
mov
or
jbe
adc
xchg
jns
in
test
mov
out
fidivrl
push
loope
enter
scas
fdivrs
out
sbb
mov
push
jno
in
mov
mov
popa
clc
pop
pop
sarb
cltd
push
or
lea
movsb
cmp
negl
fisttps
fcmovnu
movsb
cmc
jb
sbbl
xor
mov
pop
xor
orb
mov
jnp
mov
xchg
push
pop
out
das
scas
stc
bound
xor
loope
divb
inc
mov
loop
cmc
fiadds
xchg
out
movsl
jl
lea
inc
or
cmpsb
adc
fsubs
jmp
mov
aad
pop
adc
loope
push
pusha
and
mov
or
pop
adc
and
xor
stc
jp
subb
and
xchg
sar
adc
add
lds
pop
icebp
mov
sbb
jl
mov
push
push
and
xor
mov
or
add
xchg
std
sbb
dec
jae
jmp
xor
mov
lret
push
sbb
jg
add
mov
xchg
push
or
mov
or
movsb
ljmp
and
sti
aam
mov
pop
xchg
xchg
jb
sbb
adc
ret
stos
or
dec
je
and
test
hlt
pop
xchg
mov
xchg
jae
das
xor
pop
mov
add
jmp
sbb
sbb
mov
xchg
ds
mov
xor
or
and
pop
enter
push
insb
aad
jae
inc
cmpsb
xlat
push
jnp
movsl
mov
popa
decl
adc
fstpl
cld
insl
pop
mov
xor
cmp
sahf
fucomi
mov
inc
frstor
and
test
or
sub
insl
test
inc
aaa
addr16
nop
shl
movsl
lock
lret
pop
push
mov
dec
mov
sub
inc
inc
fwait
lods
mov
mov
xchg
dec
and
mov
iret
mov
adc
sbb
add
icebp
add
add
es
and
xor
aam
jecxz
cmp
mov
mov
mov
addr16
lret
into
inc
xor
out
jp
scas
or
cmp
mov
or
add
and
inc
jae
dec
lahf
cli
sbb
cli
mov
icebp
ficoms
mov
pop
dec
ljmp
repnz
sbb
fnstcw
or
in
cmp
pop
movlps
push
pop
pop
push
adc
cmpsb
insl
xor
mov
out
aas
jno
cmp
pop
inc
push
addr16
add
popf
popf
mov
push
in
inc
mov
push
ja
xchg
jle
pop
or
clc
fistpl
data16
mov
scas
push
icebp
inc
sub
xor
mov
cmp
mov
loopne
mov
lea
out
xchg
inc
jecxz
add
ss
jmp
add
xchg
sub
nop
mov
lcall
lret
cs
lret
pop
lret
fdivrl
sub
xchg
ljmp
mov
sahf
rcrb
fidivrs
xchg
lcall
lods
enter
mov
es
inc
mov
mov
push
pusha
push
into
pop
pop
sarl
dec
sub
arpl
dec
inc
es
xchg
add
jae
push
mov
and
xor
push
lret
jnp
addr16
xor
dec
inc
lods
pop
mov
les
and
push
popf
lret
jmp
xor
sub
out
rorb
int
xchg
popf
aam
out
lds
idiv
imul
mov
push
popa
test
jne
xchg
pop
mull
pusha
xlat
arpl
push
imul
mov
cmp
leave
adc
stos
out
dec
outsb
cmp
xor
xchg
out
cwtl
xchg
xor
xchg
lahf
jb
push
div
xor
xor
jno
push
add
jb
or
clc
jmp
leave
or
shll
and
inc
push
xor
mov
mov
sbb
test
cmp
mov
and
mov
cld
cmp
call
adc
je
pop
fsubrs
js
shl
ret
mov
lret
xchg
inc
push
pop
mov
inc
imul
adc
mov
insl
rcrb
enter
or
xchg
jbe
pushf
jo
inc
js
pop
sub
add
call
mov
lds
pop
and
and
loopne
sbb
mov
cld
rol
mov
xchg
and
test
mov
push
repnz
popf
inc
pusha
cmpsb
andl
inc
or
and
mov
jae
xchg
sbb
in
scas
add
test
mov
mov
mov
adc
lcall
push
push
stc
dec
adc
jae
movsl
scas
inc
je
xor
push
jecxz
test
mov
dec
insb
mov
adc
punpcklbw
sbb
xchg
and
push
js
sbb
imul
hlt
movsb
dec
flds
push
call
cmp
xchg
pop
stc
mov
clc
mov
jl
inc
ja
cmp
loopne
cmpsb
cltd
pop
adc
xchg
and
fs
ret
jne
aad
adc
sahf
in
xor
and
pop
aad
pushf
add
mov
mov
inc
pop
adc
xchg
divl
sub
test
fistl
adc
insl
out
lret
scas
and
ljmp
sub
mov
pop
push
pop
les
ret
adc
clc
into
xor
sbb
bound
fs
pop
inc
lret
xchg
andb
flds
call
xchg
outsb
sbb
push
mov
pop
sbb
xor
icebp
xor
and
cmpsl
pop
inc
cmp
mov
pop
in
cmp
in
mov
sbb
pop
popf
xor
inc
stos
mov
adc
pop
mov
fistpll
ret
dec
jge
jns
mov
jbe
nop
pop
ud0
push
out
xchg
xchg
in
out
jo
inc
popf
cmp
ja
and
cltd
dec
lahf
or
sbb
fdivrl
aaa
imul
sbb
lods
push
inc
incb
jno
pop
out
jno
xlat
sarl
xor
mov
push
mov
cmp
and
pop
scas
ret
xchg
lods
mov
rcll
mov
ja
push
sub
rclb
push
cmpsb
lods
iret
pushl
cli
pop
sbb
jne
and
adc
outsb
pushf
sbb
outsl
int3
mov
adc
add
mov
sahf
jo
add
pusha
daa
xchg
fmull
stos
ljmp
sbb
outsb
rcrl
jno
in
lock
inc
and
mov
jle
je
and
xor
faddl
sbb
sbb
popa
repnz
inc
mov
pop
cmp
or
aad
pop
lcall
mov
push
sbb
into
sarl
add
cs
pop
dec
lods
xor
jmp
filds
mov
outsl
pusha
cmpsl
je
jbe
push
shll
sbb
lock
dec
out
push
jns
mov
std
data16
xchg
pop
cmpsl
out
insb
out
xchg
mov
hlt
movsl
or
fisubrl
cmp
mov
mov
fisttpl
add
add
test
xlat
cwtl
pop
mov
out
jbe
test
lahf
xor
cmp
xor
lcall
sub
imul
xor
imul
pop
push
pop
cli
js
js
mov
cmp
lea
sub
or
aad
push
add
test
ja
scas
inc
stc
jae
adc
outsl
inc
xor
jge
out
mov
inc
cltd
rcrb
mov
xor
sub
mov
inc
or
mov
push
xlat
pop
ss
jmp
lods
and
dec
inc
sub
xlat
and
not
add
sbb
push
dec
mov
or
push
mov
dec
jmp
fmuls
outsb
js
and
pop
push
sbb
cs
cwtl
push
loopne
in
jecxz
mov
lea
jae
lret
xchg
out
mov
stos
add
test
stos
arpl
loopne
inc
out
popf
loopne
arpl
jecxz
rcll
push
mov
mov
push
inc
inc
xorb
push
mov
push
in
mov
dec
xchg
hlt
loop
call
jns
roll
cld
rcll
and
adc
rol
addr16
dec
mov
dec
cmp
xor
inc
xor
xchg
test
sub
pop
js
xorb
neg
jp
adc
jl
dec
inc
or
pushf
push
test
scas
mov
xor
adcb
add
out
aaa
xor
loope
movsl
xor
loopne
push
fisttpl
ss
push
push
dec
xchg
enter
imul
add
dec
xchg
push
inc
add
cmp
inc
xorb
cmp
in
mov
add
jge
out
xchg
test
arpl
push
pop
loopne
jae
ret
mov
or
lods
ret
lret
jmp
add
mov
sub
mov
push
mov
mov
cmp
or
andb
hlt
and
scas
test
fistl
mov
scas
cmpsl
and
cmp
push
pop
push
lahf
cmp
inc
test
in
add
jnp
fcompl
jmp
push
mov
sub
aas
repz
frstor
out
pop
inc
das
sbb
xor
jnp
arpl
mov
cmpsb
sub
sti
clc
pop
mov
xchg
insb
fistl
addr16
cmp
mov
push
mov
aad
inc
xor
lea
in
xorl
cld
push
cs
test
shlb
or
fcoml
cltd
int
outsl
add
add
jne
mov
jno
mov
out
mov
cmp
cli
repz
sbb
repz
adc
or
jne
add
dec
jnp
or
iret
in
imul
sbb
xchg
xchg
dec
loop
sub
mov
rcrb
mov
jl
pusha
fdivs
mov
xorb
movsb
add
mov
sub
hlt
incl
in
iret
insb
dec
sub
int3
xchg
pop
insl
push
inc
xor
jb
sbb
in
mov
sbb
push
imul
xor
sti
dec
sbb
in
push
ljmp
int
jge
fdivr
push
lds
and
fists
rorl
push
xor
aaa
in
sti
or
cmpsb
xchg
lods
xor
mov
out
lds
repz
inc
in
inc
push
mov
aam
dec
sub
test
enter
std
mov
or
mov
xor
fwait
cmp
push
inc
jmp
and
repz
mov
fs
mov
sub
lahf
fimull
testl
or
sti
sub
push
sbb
jne
sub
mov
jmp
lcall
inc
jle
cmp
aas
cli
and
mov
stos
xchg
dec
push
cmc
and
inc
scas
xchg
sbb
clc
jp
cmp
inc
aaa
loopne
fucomp
push
mov
add
or
bound
xor
jge
mov
dec
dec
jg
sbb
pop
mov
jns
rcr
shl
sub
inc
andl
or
sbb
lret
xchg
cmp
fcmovne
fisttpll
inc
cmp
mov
mov
or
int
je
lods
jmp
sub
dec
out
pop
jae
xchg
aam
nop
mov
pop
mov
fwait
xor
jmp
repz
faddl
cmp
out
loope
jl
dec
sub
xchg
mov
ret
es
pop
cmp
in
sub
jbe
addb
mov
pop
or
sbb
jl
and
stos
jae
arpl
stc
cwtl
adc
xchg
push
lds
stos
push
mov
or
negb
and
xorl
mov
rcll
xor
inc
inc
in
push
add
mov
pop
imul
fwait
in
imul
aam
inc
scas
ret
pop
cmp
jns
ret
loop
xchg
xor
jbe
lods
push
mov
scas
xchg
pop
rcrl
imul
dec
mov
jns
mov
push
jmp
je
test
mov
adc
mov
nop
pop
fistl
pop
jl
xchg
sub
xor
cmpsl
xlat
and
pop
rcl
push
dec
mov
fwait
sub
lcall
loop
in
push
mov
or
cli
enter
out
inc
xor
push
cmp
pop
xchg
bound
push
cmp
add
icebp
outsl
add
test
fldl
push
push
jbe
jmp
and
mov
rcll
outsb
in
rolb
cmpsb
out
lods
xchg
sahf
ds
ljmp
xchg
test
push
pop
push
add
xor
push
repnz
push
les
pop
xchg
gs
sub
fs
ffree
inc
push
cmp
sub
js
ja
xor
cli
loopne
icebp
incl
add
imull
nop
cmp
pop
jmp
mov
pushf
push
orb
in
cmpsl
mov
daa
lcall
jbe
xchg
xchg
out
xchg
int3
rolb
mov
and
jecxz
adc
push
pop
mov
inc
addl
hlt
xor
mov
and
out
push
or
sbb
test
scas
mov
out
jns
clc
movnti
pop
mov
mov
cmp
adcb
push
jb
push
cs
xchg
xchg
dec
rcrl
push
sbb
or
in
xor
sbb
in
fldt
fimuls
jno
loopne
addl
jb
sbbl
andl
repz
aam
pop
and
fnstsw
sbb
mov
cs
out
push
push
inc
sti
setp
scas
cmp
andb
xor
je
jno
movb
fwait
test
sbb
fst
pushf
ss
push
js
mov
rolb
pusha
lcall
out
ljmp
xor
mov
cmp
mov
xchg
sarb
jmp
call
sbb
ret
into
adc
dec
mov
test
test
xchg
or
inc
push
and
xlat
dec
pop
lcall
mov
fisttpl
loopne
out
xor
in
and
enter
filds
lret
cmp
mov
shrl
mov
arpl
iret
sub
xor
push
cmp
cmp
jnp
xchg
xchg
sub
addr16
jmp
arpl
enter
into
and
sub
outsb
fs
in
lahf
rorb
xchg
pop
xchg
adc
xchg
fcomi
or
push
test
dec
or
lret
mov
or
push
xor
fiaddl
outsb
mov
lods
push
push
daa
lea
sbb
ds
idivb
mov
leave
ljmp
loope
push
push
out
mov
daa
lret
jg
mov
insb
inc
pushf
push
cmpb
pop
jg
sub
imul
jb
cwtl
xchg
lds
and
inc
aam
movsb
pop
dec
xor
push
in
les
xorb
pop
hlt
into
dec
hlt
inc
jl
fnstcw
push
mov
pop
inc
add
push
or
add
xor
aaa
pop
xchg
cs
inc
ret
rcrb
and
sahf
dec
dec
add
call
outsb
stos
adc
cmc
ret
mov
gs
arpl
push
mov
xchg
mov
in
out
cltd
mov
gs
int3
lds
in
cmpb
popa
shll
push
pushf
mov
adc
pop
stos
cmp
addl
stos
mov
cs
inc
inc
inc
and
mov
dec
push
insl
data16
push
xor
leave
pusha
dec
fldenv
ds
or
pop
es
or
xorl
popf
or
int
loope
mov
div
in
xchg
jge
mov
adc
lcall
fcompl
fldcw
inc
mov
mov
dec
ror
fistpl
jl
bnd
adc
jno
in
pop
sahf
adc
mov
out
inc
mov
add
push
call
nop
sbb
fcmove
pop
mov
mov
adc
lock
inc
mov
push
inc
aam
mov
nop
cltd
adc
fadds
fcomps
movsl
mov
fidivrl
inc
fidivrl
pop
push
xchg
sub
mov
inc
in
add
jo
mov
jmp
adc
jp
in
stc
movsb
das
scas
daa
pop
std
adc
push
mov
xchg
aad
testl
cmpsl
mov
mov
sub
adc
sbb
or
sub
sub
add
data16
repnz
cmpsl
mov
add
movsl
mov
test
enter
xor
frstpm(287
xor
scas
pop
faddl
add
mov
mov
mov
dec
mov
and
sub
rolb
sbb
mov
sahf
fidivl
ljmp
ja
cli
jne
in
addr16
xor
out
cmp
jp
sbb
popa
in
lcall
test
xor
mov
pop
jmp
cltd
out
sbb
lahf
push
push
aas
dec
push
adc
lods
cmp
sub
or
lcall
sbb
out
xchg
rolb
loope,pn
push
fcmovnbe
push
popa
lods
lret
sub
cmpsl
push
das
aaa
aas
xchg
pop
andl
dec
insb
loopne
das
and
dec
out
fcompl
repz
and
pop
mov
cmpb
jnp
xor
and
test
push
xor
jg
xor
loop
int3
lret
cltd
insl
pop
mov
inc
in
nop
repz
aaa
loop
push
xchg
popf
out
mov
mov
inc
es
cld
pop
shr
pop
dec
imul
imul
jmp
icebp
insb
shll
scas
push
and
dec
aam
and
cmp
insb
jp
adc
roll
in
or
or
push
jl
gs
xor
mov
xchg
fs
jl
sbb
or
cmpsl
xchg
rol
jns
ficompl
gs
lahf
xchg
mov
or
dec
insb
jmp
xor
arpl
fwait
mov
ljmp
pop
loopne
xchg
add
popf
fcmovnbe
add
jecxz
in
sbb
xor
scas
pop
mov
xor
dec
lcall
or
mov
test
div
xor
push
aad
clc
push
mov
mov
sbb
gs
or
inc
stos
pop
enter
mov
mov
leave
test
jp
xor
mov
and
pop
inc
dec
or
cmp
push
shll
shrl
inc
adc
data16
jbe
sti
dec
or
fs
xor
jp
adc
adc
cs
popf
popa
cltd
pop
testb
or
mov
lock
xor
hlt
add
push
sbb
inc
and
outsl
lods
test
bound
jo
lds
and
xchg
and
iret
stos
cmc
pop
sub
jo
mov
cmc
mov
movsb
stc
adc
xor
xchg
lods
test
int
repz
lret
xchg
cltd
add
test
dec
fidivl
add
in
and
and
mov
mov
add
xor
in
pop
cmp
outsl
leave
jle
mov
inc
jb
sarb
pop
mov
cmp
mov
mov
mov
mov
mov
mov
mov
std
mov
jb
out
sub
mov
and
push
rcll
xor
adc
mov
xlat
xchg
adc
int
popf
jbe
add
lods
mov
jb
mov
lods
jbe
les
push
add
and
jb
or
stc
and
dec
neg
mov
cmp
sub
and
data16
lcall
push
shrb
nop
icebp
add
cmp
out
aad
jg
cmp
mov
pusha
add
enter
inc
iret
imul
roll
int3
push
push
into
out
shlb
inc
popa
imul
les
mov
xchg
iret
sti
pop
cmp
push
out
add
mov
int
xor
mov
loope
mov
scas
adc
adc
subb
repnz
add
ret
dec
mov
add
add
lods
aaa
dec
fs
cmpsl
or
mov
xor
scas
loope
lods
outsl
push
or
pop
or
mov
or
mov
shr
lea
int
leave
dec
ja
loop
push
lods
ret
std
subl
pusha
repnz
out
icebp
rol
push
pusha
mov
mov
gs
pop
jb
outsl
push
lahf
fildl
inc
ja
je
push
mov
popf
cli
imul
icebp
out
adc
cmp
loope
jo
push
sbb
inc
movsb
mov
daa
jae
int
enter
mov
lock
add
js
pushf
outsl
insl
ret
jmp
jne
jne
in
pop
and
mov
mov
test
test
cmp
inc
push
add
loop
nop
mov
push
bound
mov
adc
lock
xor
jge
sub
andb
int3
add
mov
inc
dec
sbbl
subb
xchg
mov
cmpsb
add
push
ja
test
jb
xchg
sarb
jo
insl
ljmp
insb
mov
popa
stos
cmpsl
jae
pop
into
inc
repz
daa
cmovb
lret
int
adc
adc
mov
pop
lret
int3
punpckhwd
lods
xor
mov
lret
push
lods
rorl
xchg
movsb
cmpsl
lds
mov
push
adc
xor
cltd
loop
leave
daa
xchg
sbb
adc
cmp
xchg
and
cli
push
insb
jns
jbe
pop
mov
cmpsl
mov
bnd
pushf
pop
push
cmc
cs
cmp
sahf
mov
mov
movsb
insl
mov
test
push
in
push
insl
fisubs
out
repz
jnp
fistps
lahf
inc
jecxz
push
popa
mov
daa
xchg
mov
sbb
in
jl
sbb
cmpsb
hlt
lahf
in
mov
dec
adcb
into
iret
mov
jnp
sub
push
inc
and
aad
mov
shl
js
xchg
xor
imul
dec
inc
or
push
into
ret
sub
pop
decl
jbe
pushf
sbb
and
bnd
push
mov
push
add
or
sahf
jp
les
xchg
dec
imul
lock
mov
lds
test
sub
xchg
les
dec
push
mov
daa
inc
ss
outsl
cmp
insl
out
cmpsl
jmp
push
gs
push
mov
xor
dec
inc
mov
mov
mov
ja
mov
icebp
push
cwtl
cmpb
andl
push
or
push
adc
add
repnz
mov
and
add
cmpsb
mov
mov
sbb
jmp
int
lea
ret
pop
fstpt
call
and
je
pusha
push
mov
setle
dec
into
push
sti
mov
ja
sbb
cmp
and
ret
call
fs
int
das
xchg
pop
ret
popa
popf
ljmp
sbbl
neg
or
push
lods
inc
mov
leave
xchg
je
push
inc
out
inc
and
add
outsl
cmp
mov
jle
fst
jnp
xchg
in
pop
mov
lea
jge
jmp
and
mov
ja
imul
lcall
insl
mov
mov
mov
mov
mov
pop
and
cmp
repnz
adc
mov
aam
push
nop
mov
shrl
sub
add
pushf
push
adc
or
xlat
nop
mov
mov
aad
mov
adc
jnp
sub
aam
dec
xor
scas
xor
or
and
fs
insb
lcall
jmp
push
pop
cmp
xchg
sbb
mov
adc
rcrl
or
push
fxch
pusha
mov
fdivrp
cmp
dec
xor
add
xlat
push
test
jl
ret
pop
inc
rcrl
xlat
mov
in
and
push
xchg
bound
mov
test
or
sbb
clc
or
scas
mov
clc
jecxz
xchg
dec
xor
cmpl
js
jae
pop
gs
loop
sub
daa
and
fistl
pop
and
mov
sub
pop
jne
mov
inc
stos
xchg
push
mov
int3
dec
cwtl
leave
push
testl
pop
add
sbb
xor
push
mov
ret
or
dec
pop
or
or
mov
mov
cmp
jnp
into
mov
cmp
popf
movsb
enter
data16
jmp
cmp
mov
jnp
pop
repz
adc
pop
fxch
sbb
jne
dec
lret
sbb
fldenv
mov
data16
aas
std
out
mov
xor
rorl
inc
test
cwtl
sbb
mov
ret
jp
or
lcall
or
mov
push
int3
and
cli
hlt
pop
sub
add
push
imul
scas
and
test
aas
mov
xchg
xor
sub
sub
or
mov
mov
fcomps
dec
roll
ja
outsl
mov
xchg
xor
iret
xor
mov
xlat
or
dec
xchg
push
jo
cmpsl
mov
mov
pop
daa
in
adc
jne
sub
mov
outsl
cmp
movsl
add
mov
sbb
mov
cmpsb
push
push
ss
jg
test
push
adc
sub
clc
roll
arpl
xor
push
je
inc
test
rclb
loopne
cmp
sub
ljmp
ljmp
repz
subb
or
dec
repnz
lret
shrb
adcb
sahf
add
inc
pushf
dec
sub
leave
in
cmp
movsb
jo
je
push
push
sbb
call
and
ret
cmp
loop
or
rcrl
sbb
enter
push
adc
clc
pop
aas
pop
stc
pop
arpl
pop
pop
or
push
adc
test
fucom
ficomps
push
movsl
jae
jnp
lcallw
imul
pushf
sub
aam
or
lock
int3
or
push
cmpsb
test
aaa
fs
lcall
push
xor
outsb
or
push
push
incb
jbe
cmc
mov
les
push
hlt
fsubs
lahf
inc
xor
or
repz
inc
fdivl
into
push
jecxz
jecxz
xchg
dec
dec
in
rcrb
push
xlat
shll
in
aaa
or
mov
incb
mov
xchg
dec
xchg
pop
mov
adc
pushf
fwait
out
xor
jb
repnz
xor
sbb
movsl
xchg
pop
cltd
dec
int3
push
sbb
pop
push
data16
jae
mov
sbb
fs
cmc
push
imul
into
adc
data16
add
in
xchg
xor
loopne
fists
xor
add
xor
fstpt
jne
fwait
loope
mov
repz
dec
out
pop
in
jg
adc
in
inc
xchg
add
lcall
out
adc
stc
mov
negb
aad
out
loope
dec
mov
enter
sbb
jbe
add
or
jbe
daa
dec
adc
xor
lahf
mov
push
mov
out
mov
jle
xlat
mov
jo
imul
add
pop
mov
loop
jo
cmp
jp
int
push
dec
dec
shlb
inc
sbb
outsl
jno
out
push
adc
or
sbb
in
mov
adc
and
stos
icebp
sbb
pop
adcl
jp
in
shr
fwait
test
das
xchg
das
out
aam
mov
outsb
ffreep
divb
int
or
ja
cld
lods
cmp
xor
sub
pop
xlat
xor
jb
stos
push
aam
push
dec
adc
rcrw
mov
and
mov
xchg
cmpl
sbb
cld
cld
mov
aaa
xlat
mov
movsl
cmp
add
xchg
fimuls
xchg
sub
jg
xchg
ja
or
mov
not
add
lea
sbb
das
clc
fxch
jmp
xchg
mov
cli
sub
hlt
sahf
dec
add
int3
jp
cmpsl
repnz
daa
clc
sbb
or
divb
int3
or
push
scas
ss
out
repz
adc
sarl
in
lock
and
ja
add
cmp
int
or
or
fsubrs
fnstcw
clc
sub
fnstsw
sub
cmp
das
clc
leave
push
fucomi
xchg
xor
outsl
rcrb
movsb
jnp
shlb
inc
xor
xchg
shlb
cli
sbb
push
insb
jo
adc
sbb
and
inc
or
movsl
sub
jne
iret
sub
mov
lret
inc
cmc
inc
scas
pop
mov
cmpsl
dec
in
aam
fidivrl
and
push
mull
subb
sub
mov
loop
inc
xchg
shll
sub
enter
inc
xchg
sub
cmp
sub
fcompl
bound
inc
lcall
frstor
adc
xchg
andl
sbbb
xchg
les
jne
lahf
xor
imul
nop
push
add
sti
inc
jae
cmp
popf
push
mov
xchg
jns
adc
sub
mov
mov
mov
sub
xchg
es
xor
sbb
xor
call
xchg
mov
jo
fidivrs
push
pop
mov
iret
aas
out
out
aam
push
mov
cs
roll
or
rcll
fsts
add
mov
cmp
arpl
jnp
test
in
push
shlb
nop
ret
js
mov
ljmp
neg
adc
pop
push
jae
cmp
dec
sbb
mov
mov
xchg
pop
mov
or
out
and
push
andb
sub
sbb
out
cwtl
jecxz
sub
addb
push
and
mov
adc
cltd
sti
lcall
insb
mov
jp
mov
arpl
mov
adc
flds
aas
push
faddp
scas
lds
push
shlb
mov
jg
bound
add
jne
inc
and
jo
iret
arpl
stos
movsb
clc
or
add
ja
fwait
test
in
jp
out
int3
cmp
and
mov
jb
mov
or
enter
inc
xchg
xor
bound
test
stc
sub
movsl
icebp
jae
inc
insl
mov
push
ds
cs
sti
pop
dec
mov
sub
xor
fcoms
add
and
xlat
scas
test
inc
push
iret
inc
dec
adc
cmpsl
mov
inc
test
fs
data16
and
inc
std
jl
mov
xchg
test
fisttps
xlat
cmp
mov
mov
mov
cmpsl
xchg
or
fbld
pusha
iret
fdivp
push
xlat
push
jne
xchg
fisubrl
nop
xor
xor
mov
add
mov
stc
test
mov
push
andnps
loope
je
repnz
sahf
ret
dec
je
shlb
lahf
push
out
movsb
hlt
dec
adc
cmc
sub
jo
jg
jb
or
add
push
jb
iret
pop
or
ds
adc
jno
mov
sbb
or
add
std
and
jnp
sbb
lock
sbb
ficomps
push
pop
push
pusha
cmp
sub
mov
dec
jnp
je
jmp
leave
ljmp
jne
xor
mov
sahf
or
ds
fiaddl
pop
push
pop
or
and
jne,pt
fcom
cmpsl
or
aaa
pop
jns
push
push
popl
rolb
test
xor
leave
sarb
jo
jle
lret
popa
sub
jnp
and
outsb
xchg
push
fdivs
jle
dec
test
cltd
sbb
xchg
mov
xor
negb
add
inc
lods
fisubl
cmp
jl
adc
insl
int
mov
addr16
out
fidivrl
cmp
das
repnz
leave
imul
ja
and
xlat
decl
lock
mov
sbb
cmp
mov
pop
pusha
jae
fistps
xchg
push
testl
cli
inc
dec
jae
push
std
pop
or
bound
inc
mov
fimull
insb
mov
repnz
je
adc
ja
rorl
pushf
popw
push
aad
gs
inc
insl
movl
xchg
rolb
fildl
cwtl
xchg
cmpsl
adc
mov
xlat
and
mov
mov
pop
jle
testb
ljmp
mov
pop
mov
and
lods
sub
inc
xor
cmp
xchg
imul
push
call
movsl
pop
insb
mov
and
pop
xchg
push
es
mov
mov
pop
enter
jle
std
ficoml
ljmp
mov
mov
and
adc
mov
outsb
hlt
jo
int3
xor
dec
mov
and
pop
lahf
push
dec
xchg
js
pop
sbb
inc
xor
arpl
jae
les
mov
cwtl
outsb
xchg
jns
add
jg
jbe
or
mov
fs
stos
je
repnz
out
push
mov
imul
ret
out
fistps
mov
imul
xchg
add
fldenv
fisttpl
adc
xchg
sarl
cld
shl
xor
insl
in
cltd
out
cmp
add
ret
fs
cmp
adc
ds
out
aam
jl
inc
xor
fwait
push
daa
push
adcl
mov
sbb
add
pop
cmp
cwtl
imul
cmp
jle
arpl
xor
sbb
ret
in
xor
pop
pop
xchg
jns
xchg
lds
mov
dec
push
inc
je
push
in
pushf
popa
lods
fstpl
sahf
inc
clc
inc
inc
mov
imul
jg
fistl
mov
sub
out
rcr
xchg
inc
mov
jge
clc
mov
insl
out
jnp
es
inc
push
in
push
js
test
jno
int3
adc
cmp
mov
dec
push
arpl
xchg
and
popa
lock
std
adc
ljmp
jns
imul
jo
test
push
insb
add
fidivl
mov
pop
in
lret
iret
sub
pop
and
pop
jbe
add
sub
fcmovb
cmp
pop
mov
pushf
insl
xor
fwait
loope
xchg
mov
mov
jno
jmp
push
mov
xchg
mov
fidivs
pop
dec
lahf
push
flds
jl
mov
es
mov
adc
andb
mov
dec
or
in
pop
fstps
filds
wrmsr
shll
add
mov
sti
xchg
push
std
ficomps
pop
sub
sub
lods
in
mov
jp
pop
repz
inc
mov
mov
inc
cltd
lds
aam
mov
push
lods
xchg
or
push
stc
cli
faddl
repz
jmp
stos
mov
push
mov
loope
cmc
pop
cmp
jp
cwtl
out
xor
inc
ds
stos
mov
repnz
jmp
lahf
inc
push
mov
xchg
das
aas
fs
test
gs
es
push
stos
rorb
jle
pop
jbe
xchg
push
scas
repnz
sub
cmp
pop
xchg
push
sub
out
out
stc
nop
les
push
das
xor
hlt
aam
fsubs
cli
dec
cmp
cmp
shll
ss
jp
iret
dec
test
mov
or
jl
mov
sub
das
sub
popa
rolb
mov
adc
xchg
out
dec
nop
imull
push
jne
jecxz
jg
ficompl
lea
mov
pop
int3
or
xor
or
inc
idivb
iret
or
popf
mov
jle
adc
shll
cmp
ret
mull
mov
inc
out
bound
inc
pusha
cwtl
imul
lods
add
dec
dec
sub
sub
mov
ret
scas
jbe
data16
aad
sti
aas
mov
insl
rolb
cs
and
dec
fisubl
push
enter
das
pop
pop
loopne
outsl
repnz
shlb
leave
shrl
leave
mov
mov
mull
jmp
xor
push
jg
jns
daa
fsubrl
mov
rorl
jg
test
test
jnp
xchg
scas
inc
jge
sub
xor
cwtl
push
in
mov
nop
ficomps
sbb
mov
in
xchg
xchg
cmc
xchg
mov
sbb
das
dec
repz
test
cld
sbb
jge
adc
stc
mov
cmp
push
cmpsb
jg
mov
scas
ja
pop
cli
fmuls
and
mov
aaa
pop
jge
cmp
std
test
and
out
and
lds
jg
mov
adc
pop
ja
lock
ja
repnz
dec
pop
mov
icebp
push
xor
bound
lods
hlt
cmp
push
jmp
and
fisubl
lahf
pop
cmp
mov
cld
fsubr
subl
outsb
xor
loopne
cld
test
int
xchg
pop
sti
aam
ret
sbb
in
and
mov
mov
in
adc
mov
sahf
shlb
int
pop
add
bound
lea
xor
sub
and
xchg
sahf
and
pop
dec
rcrl
pop
and
insb
js
out
xor
lret
mov
pop
loopne
popf
dec
mov
xchg
scas
incl
cmp
mov
jbe
sub
lret
sti
mov
inc
imul
and
aas
adc
outsl
xchg
sub
outsb
negb
loopne
lcall
xor
mov
fldenv
adc
cltd
pop
es
inc
xchg
ss
jns
dec
inc
sub
jo
add
sub
sub
xor
into
arpl
and
jmp
inc
mov
clc
dec
nop
add
xlat
cmp
jb
cs
mov
xchg
test
add
ret
push
clc
push
mov
ja
mov
insb
pop
pop
test
aam
mov
pop
add
sbb
xor
test
int3
fstpl
int3
xchg
lds
sti
scas
lret
inc
add
arpl
sbb
jnp
subl
push
icebp
test
repz
mov
adc
mov
out
xlat
mov
push
lahf
les
add
fiadds
dec
jo
dec
out
daa
in
scas
pop
push
fnstsw
je
arpl
jb
outsl
inc
int
scas
cmp
sbb
inc
lds
icebp
icebp
test
cmp
mov
enter
or
ja
and
inc
mov
pop
lahf
cmp
xchg
push
mov
notb
outsb
jle
mov
mov
add
sarl
in
sub
lret
mov
adc
jns
mov
bound
sub
pop
or
sarb
mulb
cs
lods
into
xor
test
popf
shrl
idiv
outsl
in
xorb
outsl
movsb
into
out
sarb
and
lret
in
ja
test
sahf
jmp
inc
mov
data16
sbb
shll
dec
dec
movsl
ljmp
rol
je
scas
aad
sbb
cmpsl
loopne
pop
xchg
pop
ja
lods
sar
arpl
dec
ja
aas
inc
or
mov
in
pop
cmpsl
add
lods
and
sbb
ret
out
mov
adc
aas
stc
sbb
push
cmp
shrb
je
inc
push
pop
cmpsl
adc
popa
adc
xchg
mov
mov
adc
and
je
dec
pushf
cmpl
repnz
lahf
loopne
push
pop
mov
scas
jle
xchg
sbb
cli
push
popf
decl
mov
push
push
in
fidivrs
addr16
and
test
or
pushf
iret
ja
mov
and
test
pop
xchg
lds
lret
and
push
dec
addb
jae
cwtl
push
mov
xchg
scas
adc
popa
dec
fldl
cmp
leave
pop
adc
jg
subb
pop
xchg
fisttpll
les
fcomp
xchg
enter
sti
mov
jp
dec
inc
xchg
rol
fidivrl
dec
mov
and
rcrb
adc
mov
mov
ljmp
adc
and
ds
pop
mov
push
push
jb
inc
sbb
mov
mov
or
add
add
cld
pop
lret
pop
es
inc
filds
into
push
or
fld
jo
sbb
daa
fstl
sbb
jbe
cli
cld
sbb
sub
sbb
cltd
cld
das
xor
jbe
jp
mov
in
je
xchg
jg
sbb
cmpsl
jle
outsl
negl
jmp
push
dec
dec
mov
gs
mov
pop
mov
lock
outsb
and
ret
loope
test
mov
dec
jmp
in
dec
popf
inc
pushf
aas
mov
or
xchg
adc
stc
inc
in
scas
rorb
bound
mov
popa
outsb
cmc
movsb
push
mov
insb
inc
xor
lcall
int3
fdivrs
sub
cwtl
call
scas
adc
mov
or
ljmp
adc
in
and
popa
cmpsl
mov
pushf
xchg
dec
filds
or
fildll
pop
test
outsb
js
xorl
push
mov
jae
xchg
dec
into
sub
insl
nop
repz
xchg
inc
sub
fcompl
popa
pop
and
pop
sub
inc
gs
xchg
mov
movsl
cmp
ret
mov
and
and
loop
xor
lahf
sbbl
pop
dec
inc
mov
mov
sbb
push
cld
dec
mov
adc
testb
dec
pop
lds
jle
in
ret
test
adc
xor
std
mov
sbb
lahf
xchg
rcll
out
xor
lock
pop
inc
jle
fdivs
js
jb
iret
ret
cli
push
xor
std
notb
add
mov
js
dec
in
stos
push
adc
sbb
sub
xchg
divb
popf
aam
rcll
mov
pop
inc
xor
adc
inc
into
adc
dec
movsb
jno
dec
or
loope
xchg
cmpsl
loopne
sbb
pop
scas
roll
cltd
cmpsb
cmp
and
mov
int3
sbb
out
xor
inc
fucomp
pop
pusha
and
push
mov
imull
dec
mov
sete
fsubl
shl
in
into
and
movsb
aam
jmp
sub
jne
mov
lret
dec
sub
fwait
xchg
and
fstpl
out
push
xor
in
sbb
push
or
and
cmp
push
and
mov
add
push
pop
push
mov
push
cltd
jmp
in
xchg
mov
outsb
lret
rolb
inc
inc
sbb
xchg
data16
jo
mov
fsubl
push
inc
push
shll
fcmovbe
sbb
shlb
arpl
cmpsl
pop
adc
inc
movsl
pop
ljmp
es
jecxz
enter
sahf
shll
loop
xchg
std
inc
cmpsb
mov
fstps
xchg
sub
inc
rcrl
mov
mov
push
sub
xor
jb
mov
add
scas
mov
pusha
xor
dec
inc
out
jle
mov
jl
arpl
pop
js
aad
push
ja
pop
sbb
repnz
push
cmpsl
movsb
orb
lcall
ret
mov
sarb
adc
cltd
inc
mov
sbb
clc
dec
cli
sub
xchg
cmpsl
lods
sub
jbe
cmp
mov
insl
pop
cmp
inc
loop,pn
jmp
sarb
mov
out
mov
push
push
sub
jo
mov
pop
decl
pop
int
lods
mov
ljmp
inc
aaa
jb
insb
mov
mov
push
add
in
dec
fsubrl
sbb
push
push
adc
pop
cltd
pop
sub
mov
add
rcll
pop
mov
jbe
bound
sarl
nop
pop
repnz
shl
and
inc
outsl
outsl
adc
add
test
jnp
mov
lret
cmp
test
das
ds
aas
xchg
xchg
mov
hlt
add
add
push
mov
loopne
das
pop
cli
std
xchg
fdivl
shll
ljmp
gs
ljmp
or
sbb
xchg
bound
leave
mov
cltd
sti
pop
push
sbb
js
pop
into
shl
loop
add
mov
jb
inc
in
lods
imul
stos
std
push
mov
push
sub
dec
and
push
xlat
jno
adc
jo
and
pop
jae
outsb
out
xor
push
fs
add
mov
push
sub
jo
mov
mov
pop
sbbb
pushf
insl
mov
pop
push
add
hlt
fisubrs
fmuls
popf
xor
pop
cmp
sub
add
aaa
cmc
enter
push
sub
push
cli
hlt
or
pop
daa
das
xchg
and
jge
into
loope
push
sub
mov
mov
push
jecxz
jmp
sysret
mov
stos
cmp
stos
and
jl
stos
pop
mov
dec
out
insl
xor
daa
fcmovbe
sbb
jl
xor
sub
push
imul
cmpsb
fnstenv
out
pop
shr
pushf
jmp
movsb
dec
push
xchg
and
shrl
or
adc
in
test
ja
add
or
nop
aad
mov
in
mov
add
inc
aas
into
xchg
stc
push
ljmp
loop
arpl
aaa
jae
and
dec
jmp
push
or
iret
add
and
cltd
mov
dec
inc
lods
ss
test
pop
inc
mov
dec
scas
dec
fsub
dec
aam
test
pop
aad
inc
or
loope
iret
shll
in
out
fld
test
jg
sub
sbb
aam
in
mov
mov
add
jnp
scas
cmp
or
mov
mov
mov
sub
cmp
xor
imul
sahf
xor
jecxz
mov
stc
and
or
mov
out
jbe
cmpsl
xor
jns
xlat
or
in
mov
arpl
xchg
lock
adc
pop
shlb
jecxz
pusha
rdmsr
xchg
push
dec
xchg
cmp
mov
hlt
gs
int3
iret
cmp
clc
rcrb
sub
loop
jns
adc
mov
jecxz
ja
mov
or
pop
pop
dec
lods
insl
jnp
mov
jo
or
mov
fstps
pop
stos
je
pop
out
gs
pop
dec
dec
jo
pop
xchg
insb
test
sbb
lock
xchg
push
push
cld
sub
add
cmp
outsl
xor
js
add
pop
adc
insb
pop
pop
loop
out
andb
mulb
cld
test
inc
dec
jg
or
pop
mov
cmp
out
nop
popf
adc
mov
mov
jge
cwtl
cmp
push
test
fistps
aaa
lea
movsl
jmp
sbb
lods
or
test
inc
push
nop
mov
test
sti
es
xchg
push
add
adc
sub
mov
movsl
mov
lcall
dec
dec
and
jge
jbe
lea
aaa
jge
clc
aam
pop
cmpsl
fstpl
mov
sahf
push
mov
in
jmp
add
push
inc
les
push
xor
adc
or
push
orb
xor
aas
mov
mov
imul
in
fiadds
lahf
shll
lds
add
rcrl
mov
aas
push
sbb
mov
xor
adc
cmc
les
fnsave
adc
cltd
push
or
push
insb
movswl
cmp
daa
jns
mov
cmpsl
fwait
in
inc
filds
test
mov
mov
sub
rep
adc
cmpsl
lods
or
pop
ret
or
push
ss
inc
jg
andl
fs
mov
ja
iret
xchg
push
dec
mov
outsl
std
sbb
adc
xchg
pop
inc
mov
icebp
mov
xor
std
pop
push
rcrl
icebp
inc
jg
adc
pop
add
jbe
mulb
sahf
jne
sbb
sbb
mov
test
hlt
add
mov
int3
push
mov
nop
jmp
pop
test
dec
dec
jge
mov
adc
mov
xor
cmp
daa
insb
in
dec
in
inc
inc
mov
imul
inc
push
xor
and
xchg
dec
sub
fwait
mov
adc
xchg
in
sub
jp
out
mov
sbb
sti
mov
sub
rolb
fisttpll
outsb
testb
leave
pop
sbb
or
nop
in
and
in
sbb
nop
out
pop
negb
js
mov
ret
xchg
inc
cltd
lods
push
scas
mov
inc
jno
fisttpl
fnsave
jae
pop
sub
fstp
xchg
jae
mov
adc
ss
popf
lods
cmp
out
mov
xor
mov
or
jp
movsb
data16
xor
lea
mov
out
jb
jno
push
mov
push
test
sub
jecxz
in
in
stc
sti
test
sbb
lds
inc
int3
sub
pop
cli
std
add
sub
mov
imul
ja
inc
in
cmpb
js
adc
lahf
mov
rcrb
std
inc
pop
or
sub
stos
mov
mov
push
lcall
jb
xor
cmp
test
in
sub
je
mov
mov
jg
rclb
mov
pop
or
jmp
into
out
inc
movsl
mov
loope
mov
push
imul
xor
mov
jg
jecxz
aad
jp
je
test
outsl
aaa
js
aas
cmp
inc
push
and
fstsw
aam
xor
xchg
scas
dec
xchg
cmp
mov
cmp
sahf
sahf
lahf
pop
xor
adc
push
sub
push
jb
jb
pop
inc
pop
mov
push
sti
es
out
nop
jns
cmp
adc
cmpsl
pop
popf
mov
inc
xchg
mov
shl
jno
xor
je
cmp
std
jb
outsl
hlt
repz
fcmovbe
sub
sbb
inc
sub
mov
repz
add
inc
jb
insb
rorb
cld
pop
insl
outsl
and
andl
arpl
scas
clc
jecxz
mov
jl
fwait
mov
sti
xchg
lock
mov
or
ss
mov
jbe
ret
in
repz
mov
or
lds
pop
iret
leave
cli
pop
adc
lahf
jae
test
sti
jle
mov
out
adc
mov
ret
and
push
jns
shl
test
mov
imul
loope
mov
imull
pop
and
imul
sti
mov
fistpl
jle
std
fs
jp
mov
push
push
ret
or
nop
aas
scas
cmpsb
sub
ret
mov
leave
xor
je
or
lds
mov
int3
test
test
inc
xchg
scas
rcrb
lods
and
imul
outsl
mov
mov
lahf
mov
or
sbb
fiadds
pop
jb
pop
ficoms
lock
cltd
fcom
pop
pop
pop
fisttpll
int3
sbb
out
pushf
adc
xlat
mov
dec
int3
xchg
test
pop
push
inc
cmp
jb
ljmp
mov
push
int
dec
xor
rcl
xlat
gs
bound
cltd
fs
pop
dec
fldt
sub
mov
les
or
xchg
fisttpl
out
add
stc
xchg
xor
ja
xor
ljmp
aaa
pop
jle
add
mov
into
adc
pop
loop
inc
adc
leave
mov
stos
hlt
xchg
cmpsb
add
loopne
pop
jno
and
out
mov
mov
fadds
mov
ror
add
ficomps
aam
sarb
cwtl
jb
cltd
stos
stc
shll
push
mov
ja
cmp
push
mov
jecxz
loopne
push
pop
adc
pop
inc
or
cld
movsl
mov
call
loope
or
daa
bound
addr16
adc
xor
out
shld
mov
pop
pushf
jp
jle
test
in
lea
pop
aas
inc
ljmp
xor
je
xchg
xchg
or
mov
xor
jg
sarb
pop
inc
inc
xlat
mov
push
mov
in
in
sub
and
in
fcmove
jae
xchg
call
lcall
add
je
rdmsr
mov
mov
ret
out
lock
pop
es
rol
mov
push
dec
xchg
stc
orb
lods
loop
xchg
in
out
cmp
imul
lahf
out
inc
fstpl
jae
or
das
xor
cwtl
mov
scas
ror
jge
inc
sarb
scas
cmpsl
xlat
sarl
jns
dec
int
xchg
jp
xchg
pushf
jle
outsb
inc
shrl
adc
lea
xor
out
fs
adc
mov
rcr
imul
mov
pushf
sub
mov
sbb
or
lds
cmc
ret
push
fnstcw
pop
push
jae
pop
rcll
iret
xor
dec
add
daa
fdivrs
adc
push
jg
ja
or
mov
mov
mov
fwait
pop
sahf
mov
mov
mov
stos
sub
jb
imul
mov
movsb
sti
fdivrp
loop
sub
cmp
ret
jp
cld
lock
pop
out
push
mov
dec
jne
cmp
pushf
push
call
push
sub
inc
xorl
xchg
xchg
cltd
mov
addl
test
xor
sbb
ss
hlt
lock
negb
push
js
int3
cltd
icebp
lret
mov
popf
jno
or
out
cltd
xchg
cld
add
mov
push
lds
push
mov
xchg
ds
test
adc
or
lods
push
jb
cwtl
and
lods
pop
xor
adc
xor
mov
aaa
pop
xor
mov
xchg
into
fisttpll
sub
mov
dec
cwtl
xor
popl
and
scas
xorl
jp
and
jl
pop
pushf
stos
je
insl
and
ret
rcl
fs
jo
pop
mov
iret
notb
jmp
ret
adc
test
mov
xchg
cmpsl
rclb
lods
push
dec
dec
mov
fs
mov
shrl
xchg
fiadds
sub
shll
add
push
fcoml
cmp
inc
jle
jmp
cmp
cmc
pop
pusha
push
adc
ljmp
mov
outsb
xchg
pop
cmp
push
insl
push
or
cmp
mov
or
aas
movsb
cltd
pop
neg
sub
and
pop
xor
pop
out
out
pop
jl
idiv
cmp
sbb
sub
nop
dec
lret
add
outsl
clc
mov
loop
stos
pop
lea
cmp
jbe
daa
outsb
mov
push
int3
or
pop
xor
adc
out
mov
std
repz
mov
hlt
icebp
sub
fsubrp
in
sub
pop
or
out
fdivr
add
in
sahf
les
mov
imul
adc
mov
pop
jg
clc
dec
dec
inc
adc
movsl
cmc
jp
sub
cmp
lcall
aam
je
data16
adc
jecxz
mov
and
mov
inc
repnz
jno
mov
cli
idivb
notb
rcrl
fsubs
aas
pushf
jg
les
scas
out
push
js
sub
xor
xor
sahf
fisttps
adc
pop
insl
call
push
xor
xor
sti
out
rcrb
es
sti
lods
sbb
push
stos
mov
and
jmp
sti
mov
dec
in
inc
cmpsl
sbb
sarb
add
pop
add
pop
popf
xchg
std
mov
cmpsb
push
leave
inc
dec
pop
mov
push
add
xor
pop
divl
imul
cwtl
scas
arpl
jge
std
xlat
cwtl
movsl
jl
push
popa
push
xor
or
adc
lret
sub
dec
ja
jo
in
mov
int
mov
pop
jbe
andb
sbbb
sub
fucom
std
jecxz
mov
orb
xor
fcompl
add
cmp
subb
cld
xor
rcl
out
fwait
cs
push
jp
sub
sbb
imull
aas
clc
xor
loop
jbe
mov
mul
add
cwtl
fisubrs
xor
loope
fmull
repz
cltd
loopne
nop
nop
shrb
lds
movsl
mov
add
dec
imul
js
stos
add
mov
in
mov
xor
cmpsb
cld
daa
add
add
push
mov
pop
adc
mov
lahf
lret
jno
inc
jecxz
mov
fcomi
cmpsb
push
fmuls
lret
ret
and
nop
sbb
lret
jle
add
outsl
adcb
sub
fsub
mov
adcb
push
fdivrs
inc
push
frstor
ret
sahf
jp
sbb
sub
add
cld
mov
cmc
lret
mov
add
adc
inc
jae
loopne
sbb
inc
mov
addr16
loope
gs
test
push
sahf
ja
stos
cltd
and
lods
add
xor
sbb
xchg
inc
xrelease
aas
cmc
jb
add
push
roll
out
xor
test
cmp
adc
jle
xchg
xchg
out
movsl
loop
in
xchg
out
clc
sub
testb
cwtl
scas
mov
sbb
fdivs
mov
int
popf
idivl
dec
fcmove
sbb
fimuls
jne
pop
aad
out
into
jl
dec
inc
ja
mov
push
mov
mov
add
pop
jp
sub
loopne
or
aam
cld
jns
daa
cmp
inc
shll
xlat
add
pop
ja
and
fimull
enter
out
loopne
loope
xor
jl
mov
or
insb
int3
inc
push
fdivl
ss
jo
insb
shrb
sti
mov
jg
jecxz
test
adc
jnp
xor
jno
dec
cmpb
cmpsl
mov
pop
cwtl
push
test
test
and
addl
out
and
andb
stos
jns
stos
aaa
xchg
dec
movsl
mov
cli
test
mov
out
imul
xchg
insl
int
scas
bound
js
mov
push
iret
xchg
mov
xchg
mov
jb
jmp
push
or
cmp
cld
add
idivl
mov
mov
jmp
jbe
cltd
pusha
popa
aam
mov
mov
es
jmp
sub
add
sbb
int3
jmp
subb
movsl
inc
in
sbb
cmp
lds
cltd
xchg
fcmovnb
adc
pushf
scas
or
cmpsl
mov
adc
out
jne
jle
sbbl
movsb
xor
and
push
ja
sub
sub
mov
shlb
jno
dec
sbb
into
xchg
mov
int3
xor
dec
int3
mov
in
mov
inc
adc
mov
pop
push
xchg
inc
cwtl
imulb
gs
out
jb
cs
cmp
mov
pop
shrl
movsl
mov
mulb
mulb
jge
rcrl
dec
ret
sub
fistps
out
or
pop
add
sbb
cmp
push
push
xchg
dec
repnz
mov
sbb
cmp
dec
out
add
xor
mov
mov
push
mov
mov
sbbb
dec
push
shrb
call
popa
dec
and
xchg
dec
inc
adc
daa
cwtl
std
jae
faddl
jl
mov
jmp
jl
push
mov
add
int
in
jg
adc
sbb
shll
sub
mov
mov
int3
bound
adc
pop
mov
mov
mov
inc
testl
js
xor
fbld
or
daa
xor
push
push
fstps
ret
xchg
jne
dec
xchg
and
lahf
push
push
and
ret
imul
mov
adc
xchg
int3
pop
ljmp
pop
stc
jecxz
adc
adc
mov
loope
inc
out
fimull
push
test
addr16
rolb
pushf
fstps
jo
pop
mov
xor
rcrl
movsl
in
or
jae
lds
ret
mov
push
pop
lods
popf
int3
xchg
ret
jmp
cmp
cmc
bound
je
cmpsl
push
or
imul
jge
pop
cmpsl
mov
mov
dec
xor
dec
pop
rorl
iret
push
shr
sub
xchg
lahf
dec
std
or
pop
jae
pop
push
sti
adc
ret
pusha
loop
hlt
cli
jo
shll
mov
insl
pmullw
fs
sub
dec
rolb
push
lods
adc
lods
call
scas
shrb
in
imul
push
pop
push
pop
dec
xchg
jno
mov
xor
insl
mov
and
dec
pusha
rcrl
fisttps
outsl
repnz
and
mov
xchg
cmpsl
addl
mov
arpl
xchg
shlb
push
mov
sahf
add
xchg
jle
fldcw
shll
dec
or
ss
je
xor
inc
out
jmp
and
imul
mov
or
adc
jl
nop
xor
lret
arpl
jbe
pushf
les
movsb
push
push
scas
fcomp
leave
xchg
test
xor
ja
adc
mov
adc
adc
out
pusha
pop
divb
sub
fcoms
lods
ljmp
sub
fbld
rcrb
leave
add
xor
jmp
fistps
mov
push
fwait
cmp
push
int3
repz
sub
movd
cmp
or
stc
cmp
aaa
inc
int3
mov
jns,pn
loope
sub
in
mov
adc
sbb
adc
pop
or
out
cmp
mov
in
push
or
repnz
and
mov
mov
inc
int3
fisubrs
dec
test
jp
adc
mov
divl
in
add
cmpsb
test
popa
sub
aas
push
out
enter
fdivr
mov
or
bound
jbe
rcrl
mov
test
cmp
lret
les
fwait
pushf
pop
pop
in
jp
stos
insb
or
pop
out
test
repnz
stos
pop
ret
out
jno
push
in
scas
jge
mov
rorb
or
mov
inc
xor
insl
clc
sbb
pop
inc
mov
xchg
cmpsb
js
fsubl
sbbb
push
xor
or
loope
imul
jnp
mov
imul
mov
iret
decb
mov
outsb
stos
xor
shlb
stos
orb
jmp
cmpb
pop
shl
cmp
mov
pop
into
std
out
pop
xchg
pop
inc
xchg
mov
xchg
icebp
std
or
inc
dec
arpl
aaa
ret
js
nop
lea
jno
cmp
dec
mov
mov
cld
insb
push
pushf
stc
cmp
jp
fs
arpl
sub
pop
loope
cmpb
outsb
pop
push
out
jnp
and
pusha
mov
jae
push
sbb
sub
pavgb
insb
jl
sbb
mov
or
mov
jnp
mov
mov
push
fsub
mov
xor
jecxz
mov
sub
lcall
lea
ss
enter
xor
cmpsl
fisubs
rcl
es
outsb
xchg
adc
sub
addr16
cwtl
enter
std
insb
push
inc
xchg
add
xor
pusha
scas
shrb
cli
jl
jl
test
and
fmull
mov
xchg
pop
push
rcrl
and
in
pop
or
pop
cwtl
stc
and
push
mov
jmp
pop
pop
sbb
and
inc
mov
aas
add
sti
into
scas
sub
xchg
cmpsb
inc
bound
push
aam
dec
movsl
mov
hlt
cmp
mov
push
in
sbb
cld
inc
push
push
cmp
cmp
pushf
fsqrt
or
stc
sub
andl
movsl
add
cltd
adc
movsb
popf
cld
and
aam
jae
sbb
and
iret
fimuls
in
into
push
xchg
mov
in
xchg
mov
and
das
and
movsb
dec
sub
sahf
mov
int
xor
or
out
psubusw
inc
js
loop
inc
xchg
mov
push
out
pop
and
roll
ljmp
pop
cmp
ret
mov
xlat
sbb
ret
fisubl
psraw
sub
xor
mov
mov
out
adc
push
sub
dec
pop
fidivrl
mov
push
std
dec
mov
sti
xor
sub
jne
bound
inc
pusha
into
loop
mov
sti
arpl
iret
out
push
push
xchg
loopne
xor
sbb
and
sbb
inc
mov
adc
cs
pop
add
adc
xchg
gs
sub
push
sub
mov
adcl
inc
add
in
mov
inc
cmp
mov
mov
mov
and
fcompl
lods
inc
in
fisttpl
mov
mov
cmpb
dec
outsl
and
mov
faddp
jne
add
xchg
xchg
aas
add
fxch
repnz
daa
mov
mov
add
mov
test
aam
pop
mov
fidivs
rcrl
popa
cmpsl
jp,pt
or
pop
push
pop
jb
inc
xchg
jbe,pt
jmp
fbld
xlat
scas
mov
int3
test
loopne
cli
sbb
stos
xchg
sbb
mov
xor
inc
rcr
ds
xchg
push
stc
xor
movsl
pop
lcall
and
inc
xchg
icebp
dec
sub
jecxz
mov
ds
in
push
outsl
mov
sub
in
cltd
aam
mov
mov
mov
aas
pop
lcall
sub
out
idivb
jge
xchg
std
in
push
mov
mov
dec
and
subl
cld
out
jecxz
pop
jg
push
cmc
stc
ljmp
xor
push
test
add
into
inc
clc
cwtl
daa
inc
jmp
scas
dec
push
ffree
add
leave
mov
sti
enter
loopne
clc
repnz
push
sbb
jmp
stc
call
sub
lods
mov
cmp
push
shrb
xchg
xchg
xchg
inc
xchg
mov
add
pushf
pop
js
mov
aaa
lcall
fistpll
in
mov
out
jnp
popa
mov
add
leave
popa
jbe
xor
loope
adc
shlb
xchg
pop
dec
es
pop
popf
ret
xchg
addr16
inc
xor
aas
jne
sbb
out
jle
add
shlb
jmp
xchg
xor
cmp
mov
outsb
addl
shlb
push
bound
push
arpl
lcall
fstl
outsb
ljmp
in
xchg
cmpsl
cld
xor
jbe
pop
lock
sub
cld
scas
in
adc
cmp
out
jb
pop
out
jbe
mov
jmp
gs
in
add
cmc
daa
aad
test
mov
ja
mov
jbe
ljmp
daa
popf
pop
cmpsb
lret
bound
xor
rcl
jmp
cwtl
jbe
add
nop
jmp
pop
push
or
pusha
and
iret
pop
add
mov
jbe
push
inc
dec
jg
faddl
dec
jbe
subb
jecxz
scas
fldcw
stc
sub
push
add
imulb
mov
adc
mov
add
sub
adc
dec
pushf
mov
cmp
and
lds
divb
mov
lea
mov
jp
push
jl
lea
incl
test
scas
aas
inc
inc
adc
mov
ror
rcll
mov
sub
dec
sarb
sbb
and
pop
push
jmp
bound
repz
inc
es
lods
fcmovnu
rcrb
xor
fwait
sarb
lock
xchg
mov
mov
addr16
test
popa
sahf
mov
insl
je
jecxz
loopne
sti
repz
sbb
xchg
push
mov
fwait
nop
clc
fidivl
insl
cwtl
icebp
shlb
push
das
inc
mov
or
hlt
adcb
dec
mov
pop
loope
adc
cmp
cmp
xchg
pop
sbb
mov
push
mov
push
ret
jns
cmp
sub
dec
out
gs
je
cmp
pop
out
xchg
lahf
es
add
sub
push
mov
push
and
push
inc
add
jb
add
callw
inc
mov
add
mov
fs
add
push
jmp
loop
or
push
loopne
cld
sub
or
sub
and
sahf
popf
iret
xor
aad
test
mov
icebp
adc
and
sub
ret
sbb
push
cmpsl
call
fldt
test
inc
jb
xor
xchg
or
ror
fcmovnu
mov
jg,pt
ret
jp
imul
das
outsl
sbb
sbb
mov
loopne
mov
jg
dec
pop
addr16
mov
rcll
inc
mov
jb
lret
and
cmp
shll
and
xlat
pop
add
mov
sub
sbb
fwait
xchg
mov
sub
jg
or
xchg
jbe
mov
fdivrl
lahf
mov
mov
inc
xor
xorb
mov
adc
testl
add
pslld
add
ret
add
adc
jge
imul
add
mov
sar
test
cwtl
jb
push
mov
adc
repnz
mov
sahf
xor
movl
daa
es
orb
addl
or
mov
adc
dec
lret
arpl
lods
mov
insl
mov
dec
pushf
in
inc
adc
add
enter
add
aas
leave
mov
iret
outsl
inc
loop
lret
in
cmp
scas
sbb
cltd
fwait
push
add
mov
inc
push
hlt
or
xchg
sbb
cs
jnp
xchg
fstp
dec
movsb
add
out
dec
sahf
xor
sbb
pop
push
cmp
jo
imul
icebp
int
mov
cmpsl
cltd
adc
push
rcll
ret
iret
dec
ss
sub
out
mov
mov
test
lea
mov
out
xchg
inc
push
popf
test
jmp
mov
call
jne
std
int3
pop
inc
int
movsb
arpl
xchg
lods
popa
jb
mov
mov
or
inc
mov
lods
das
add
lods
out
mov
and
fwait
std
call
outsb
pop
xor
out
imul
imul
mov
ret
mov
in
push
clc
popf
sbb
in
loopne
xchg
jbe
stos
fwait
scas
and
test
leave
dec
shl
loopne
sti
add
out
ss
iret
jo
rclb
scas
mov
sbb
sbb
cmp
popa
mov
or
rol
inc
stos
loopne
dec
shl
inc
imul
sbb
das
mov
out
mov
fsts
and
cmc
lcall
mov
mov
int
cmp
xchg
push
imul
push
add
xchg
jb
repnz
xor
xchg
fdivrs
inc
sbb
jmp
add
aad
mov
sahf
shl
mov
call
sbb
es
inc
mov
sti
ret
pop
jo
push
adc
mov
icebp
icebp
fcompl
push
je
mov
in
cmp
inc
dec
xchg
xor
arpl
or
sti
jle
addl
mov
jbe
adc
std
add
scas
sub
push
int3
lret
mov
xchg
pushf
and
add
jp
je
mov
and
pop
in
or
cmpsl
imul
movsl
sahf
jnp
sbb
push
adc
cld
popf
xor
stos
inc
js
bound
mov
cmpsb
call
dec
dec
jl
rcll
xor
scas
xchg
xor
push
je
test
sub
out
mov
pushf
sbbl
sahf
mov
lcall
dec
inc
sub
movsb
and
lods
and
jns
sbb
mov
cwtl
pop
push
mov
mov
jnp
push
dec
and
adc
insl
repnz
lds
int
push
mov
ffreep
call
dec
inc
cmp
cmp
xchg
movsb
test
aam
push
xchg
xor
push
push
sub
lret
adc
aam
sbb
mov
mov
addb
je
jle
pop
or
push
jb
ror
xchg
mov
push
dec
sub
scas
mov
xor
lock
cmp
cmpb
mov
cmp
mov
adc
add
roll
nop
jae
orl
ret
stos
insl
xor
ror
aam
enter
sbb
mov
je
mov
gs
outsl
or
or
sahf
in
or
push
pusha
stos
cmpsl
sbb
ss
cmpsl
mov
pop
jl
pop
test
fwait
inc
xchg
movsl
push
stos
jecxz
sub
mov
pop
dec
cmpsl
fldl
inc
lods
dec
sbb
cli
gs
in
test
dec
mov
aam
sub
push
cmp
hlt
add
icebp
addl
les
xchg
sub
cli
lea
icebp
stc
jb
lcall
mov
mov
mov
sti
sbbl
lock
adc
add
and
loop
pop
jecxz
cmp
fs
push
dec
mov
inc
mov
in
fwait
jo
es
pop
mov
xchg
stc
jmp
jmp
lea
and
imul
pop
lea
xchg
pop
in
es
push
xor
add
insb
lret
xlat
add
adc
insb
test
mov
lock
mov
push
imul
jg
inc
inc
cmc
gs
mov
rcll
inc
testb
fsubp
dec
sub
push
fimuls
scas
fdivp
negl
pop
lahf
fucomp
fldenv
popf
mov
xor
iret
mov
or
mov
dec
xchg
mov
mov
int3
shll
add
into
push
push
cltd
les
or
sbb
jl
test
ret
fmuls
cmp
imul
int
cwtl
dec
push
pop
sub
in
sub
add
fcomps
inc
popa
dec
aad
jecxz
jae
daa
loope
sbb
add
loop
mov
xor
sbb
hlt
enter
add
bound
sub
imul
pop
pop
fldt
or
aam
push
sub
insl
mov
jo
dec
inc
mov
mov
xchg
btr
adc
dec
add
iret
ljmp
cmpsl
lods
jns
insl
jns
pop
pop
xor
ror
fucomp
pop
inc
mov
push
pop
pop
ss
push
mov
push
push
repnz
and
data16
je
mov
jno
jg
add
mov
int3
addr16
mov
dec
shll
push
sub
std
push
adc
xchg
sbb
outsl
jl
jmp
lret
movsb
push
cmpsl
sub
xor
in
nop
es
push
mov
lret
fistps
or
jmp
ret
iret
aam
subb
jbe
lret
jne
test
pop
hlt
cltd
lcall
shll
jmp
adc
xchg
pop
pop
push
push
cmp
add
stos
jb
cmp
cmp
popa
ret
sbb
mov
adc
dec
in
out
cmp
sahf
and
addb
clc
andb
push
mov
fistl
push
rolb
popa
sbb
sbbb
shlb
pushf
enter
cmpsl
jno
xchg
insl
je
cmp
testb
out
lret
popa
and
leave
in
jp
ja
mov
pop
jmp
daa
enter
pop
jecxz
dec
lock
push
pusha
cli
ja
roll
xlat
lret
sarb
outsb
mov
sub
sub
addps
mov
call
dec
test
pop
jo
cmp
test
jno
stc
pop
mov
scas
mov
push
fldl
inc
fidivrs
push
repz
outsl
out
lods
in
inc
cmp
fcomip
insl
test
add
repz
fs
loopne
inc
sarb
mov
dec
mov
out
xchg
xchg
add
rolb
mov
mov
mov
jmp
push
xchg
out
pop
cmp
mov
shlb
inc
in
dec
inc
push
cmc
pop
mov
add
std
xor
jmp
mov
mov
pop
pop
rcrb
jo
rcrb
inc
jp
add
sbb
xor
jne
jb
lods
lock
jnp
rclb
rclb
inc
or
pop
out
inc
mov
mov
xchg
jle
ret
or
ds
scas
outsb
sbb
sarb
ret
insb
jno
jne
xor
orb
cmc
aaa
mov
and
pusha
add
aad
int3
xchg
ja
inc
aas
popf
dec
add
dec
iret
dec
dec
scas
sbb
sbb
push
lea
pop
nop
and
mov
and
clc
not
or
mov
mov
repz
fiadds
and
andl
push
sti
xor
scas
pop
stc
push
pusha
dec
ljmp
popa
sbb
andb
and
int
sub
jmp
mov
shll
leave
mov
sti
les
mov
mov
sub
imul
scas
cmpsb
dec
mov
iret
mov
or
push
pushf
lcall
mov
push
mov
lods
or
push
or
sti
je
lret
in
test
dec
repnz
dec
sub
inc
mov
iret
call
mov
cmp
or
lret
out
fwait
push
fwait
jnp
sbb
outsb
cmp
push
cmp
shlb
inc
int
jns
rol
inc
in
les
sbb
dec
mov
and
xchg
inc
sbb
aaa
push
sbb
mov
sub
loope
adc
cmpsb
mov
fsubs
iret
add
pop
push
movsl
adc
out
loope
testl
in
test
lods
jno
add
and
mov
dec
add
jl
rclb
repnz
inc
dec
lea
fwait
stos
xor
xor
jg
cmp
dec
mov
test
rorb
adc
lcall
xchg
push
push
mov
pop
dec
mov
push
sbb
add
in
jno
xor
jecxz
xlat
sti
dec
jno
addl
pop
and
nop
inc
xchg
in
in
fistpll
dec
cltd
push
sub
sub
aas
rcr
cwtl
xlat
cld
mov
jge
sti
ljmp
push
shr
xlat
stos
push
imul
and
push
push
das
repnz
cmpsl
or
lock
mov
daa
inc
or
ds
cmp
out
sbb
testb
cmp
and
jb
inc
dec
fisttpl
pop
lret
outsl
mov
rcl
xlat
sub
roll
daa
pop
xchg
and
inc
jl
enter
test
and
xchg
mul
fs
jb
mov
mov
mov
popa
dec
inc
loop
hlt
mov
fs
cmp
sub
into
push
mov
out
xor
mov
xchg
push
imulb
inc
imul
incl
jne
jnp
shlb
cld
adc
and
push
mov
adc
loope
cmp
jno
movsb
testb
ret
sbb
iret
movl
inc
and
in
jle
pusha
pop
fwait
jmp
inc
push
and
pop
out
test
imul
lods
sub
loopne
fisubrl
mov
loopne
jnp
push
push
fnstsw
xchg
adcb
xchg
and
int3
sbb
cmp
xchg
add
mov
cmpl
push
xchg
ret
gs
xchg
mov
add
les
pop
aas
and
fcoms
aam
outsl
pop
jmp
sbb
insb
xchg
mov
jmp
mov
mov
mov
push
shrl
cmpl
sbb
imul
scas
pop
mov
inc
out
add
jne
and
cmp
push
arpl
jne
into
ret
in
outsb
add
or
or
push
or
sub
sbb
imul
mov
sub
fidivrs
inc
shr
daa
dec
xchg
push
jle
mov
out
fadd
mov
cmp
mov
push
pop
enter
ret
ret
shrl
ret
sub
mov
and
xor
xor
orb
inc
lret
cmp
cs
test
sub
mov
out
mov
inc
mov
test
dec
sub
test
inc
adc
test
pusha
enter
outsb
into
cmp
lahf
pop
repnz
jg
xchg
pusha
fwait
inc
sahf
push
ljmp
inc
addr16
js
jne
dec
daa
ds
sar
mov
or
cwtl
pop
in
test
int
pop
xchg
std
in
int
mov
and
mov
fnstsw
adc
or
push
and
or
fdivl
mov
xchg
pop
jle
xchg
in
dec
enter
popa
je
mov
sbb
ja
push
adc
jge
bound
bound
mov
dec
imul
fwait
stos
ret
cmp
outsb
dec
push
cmpsl
movntq
out
inc
pusha
mov
add
xchg
ret
rolb
mov
pop
xlat
in
cmp
mov
dec
mov
cmpsb
dec
or
sbb
cmp
mov
mov
mov
lods
scas
and
and
movsl
orl
ljmp
xchg
mov
repnz
ljmp
loopne
rorl
push
add
add
xor
mov
ret
or
sbb
fs
movsl
bound
in
xor
je
lret
int3
lret
pop
inc
movsl
adc
mov
ret
jno
jecxz
into
js
cmp
push
lock
fyl2x
jb
aas
xor
popf
mov
add
inc
int3
inc
cmp
ljmp
pusha
add
andl
jne
dec
int3
sbb
insl
hlt
movq
fistpl
sub
cmp
inc
test
cmp
push
jl
ds
add
inc
jne
push
sti
and
in
jbe
lret
cmp
pop
mov
out
inc
ljmp
ljmp
or
push
inc
shrb
jp
in
xor
push
lahf
es
mov
xor
fcomps
stos
inc
mov
movb
mov
inc
sbb
out
mov
jmp
adc
cltd
adc
jecxz
mov
push
fsubl
inc
cld
sarl
or
insb
in
push
jmp
shlb
sbb
dec
sub
pop
mov
dec
imul
scas
jl
push
fbstp
rorl
xchg
add
sbb
inc
push
push
mov
sub
pop
pop
test
out
call
add
jecxz
fcoml
subb
loopne
test
aaa
lods
data16
jp
fs
xchg
loope
imul
mov
jmp
adc
inc
push
leave
sub
cmp
mov
xor
divl
in
out
aad
imul
jmp
dec
or
dec
bnd
ret
mov
dec
scas
mov
stc
mov
adc
mov
add
add
popf
mov
aad
in
loope
cs
fistpll
inc
jp
inc
iret
sbb
inc
subl
lcall
sahf
adc
xchg
pop
cwtl
int
cwtl
sti
repnz
outsb
incb
scas
loop
mov
dec
mov
das
inc
inc
dec
lds
sbb
push
clc
sahf
outsb
jle
push
sub
xchg
xor
movsb
popf
jecxz
sbb
fidivrs
or
adc
and
cmpb
imul
inc
and
add
and
push
in
mov
hlt
jnp
in
inc
sub
mov
mov
pop
insb
enter
xor
mov
ss
lock
sar
lret
push
daa
std
cli
push
iret
cmp
out
int
in
lcall
and
mov
mov
mov
mov
enter
cmp
xlat
pop
adcb
pop
or
orl
fisubl
lods
xor
cmpsb
mov
das
lods
test
or
cli
cmp
mov
sbb
cmp
mov
xchg
pop
shll
dec
or
insl
stos
jmp
lods
cmp
jg
or
inc
dec
aam
xorl
fstl
push
test
fwait
and
xor
popa
or
dec
pop
inc
mov
jb
into
dec
ret
pop
pop
mov
cmp
outsl
sti
xor
push
movsb
or
or
sbb
inc
test
aas
add
gs
add
out
icebp
sti
or
xchg
lret
sbb
sub
mov
cmp
inc
pop
xor
jp
aam
stc
sbb
pop
scas
cs
push
or
enter
adc
push
adc
and
arpl
popa
imul
iret
mov
ret
inc
popf
shlb
pop
pop
cmp
scas
loopne
lcall
jl
adc
add
jo
add
or
icebp
stos
je
cmpsb
add
out
in
cmp
adc
cltd
data16
movsl
jo
out
pop
xor
arpl
mov
test
and
fadd
adcl
mov
stos
lds
pop
subl
jl
xor
nop
stc
cmp
imul
cli
std
mov
aas
sub
scas
divl
inc
xor
cmc
ss
or
lret
or
xchg
dec
mov
cmc
outsl
lods
push
sti
or
mov
pop
cld
sbb
sub
std
mov
add
test
imulb
lds
cmpsl
lret
jae
cld
aaa
or
jae
jle
movsl
and
insl
dec
ficoms
pop
xor
or
jecxz
mov
and
frstor
cmpsl
add
xor
xchg
pushl
and
dec
incb
aas
lea
in
or
sbb
rcl
dec
xor
mov
outsl
aaa
pop
xor
mov
test
out
fdivrs
pop
xchg
sbb
cmp
push
outsl
mov
bound
pop
lahf
pop
xchg
sbb
cmpsb
daa
cld
dec
aas
cs
mov
fcoms
shl
sti
mov
cmpsl
mov
lea
cmp
cmpsl
insl
cmpsl
scas
movsb
cwtl
xor
sub
nop
or
cmp
or
dec
mov
int3
mov
pop
cmpb
push
lods
in
hlt
add
pop
sti
jo
iret
pushf
in
push
sub
in
pop
push
xor
add
inc
and
push
adcl
push
cmovbe
dec
iret
mov
ljmp
test
outsl
pop
fcmovnb
xchg
sti
stc
fdivl
aad
roll
jmp
mul
lock
fcomp
dec
cmpsb
sbb
fsubl
test
xor
jnp
loopne
jae
fnstcw
inc
rorl
js
lret
mov
push
jno
sbb
adc
push
scas
es
jns
pop
cli
mov
sbb
xchg
pop
mov
jp
out
mov
push
xor
xchg
cmp
nop
cmp
in
sub
scas
and
cwtl
addr16
xchg
pop
push
sub
mov
fiadds
jae
xchg
adc
out
and
stos
aas
mov
jmp
jae
lret
xchg
mov
lock
xlat
or
in
xchg
xor
sbb
adc
cld
inc
lods
outsl
aas
pop
insl
mov
out
sub
xchg
jmp
jae
repnz
ret
cmp
fwait
cwtl
add
ja
inc
cmp
mov
adc
movsb
fldl
pop
push
adc
jnp
subl
lahf
xchg
call
popf
test
outsl
sbb
dec
add
push
inc
sub
mov
fs
xor
jecxz
pop
lcall
pmullw
xchg
fwait
imul
icebp
pop
or
nop
testb
add
fs
cmp
cmp
inc
push
xor
out
xor
shr
push
popf
mov
gs
add
add
gs
out
lds
inc
sbb
dec
cmp
popa
sbbb
mov
push
aas
sbb
inc
xor
mov
xchg
sbb
dec
mov
cmp
loopne
sahf
roll
mov
dec
enter
jg
dec
aam
push
adc
pusha
mov
or
shl
enter
xchg
mov
addr16
xchg
notb
mov
jns
int
cld
int3
lahf
inc
int3
jmp
add
fstpt
adcb
test
add
insb
jbe
out
mov
mov
enter
pop
insl
lret
les
xor
push
loopne
ret
and
mov
shrb
xor
out
sub
sbb
mov
and
jbe
xchg
pop
xchg
mov
mov
sbb
inc
mov
or
mov
fwait
and
icebp
shl
mov
pushf
adc
mov
popf
or
dec
mov
out
sbb
cmp
jb
push
sub
movsb
cltd
cmpsb
mov
cwtl
or
ja
cmp
fdiv
or
repz
ja
jl
ss
pop
pop
or
test
test
push
jp
or
jno
sub
mov
xchg
fdivrl
fidivs
sarb
ret
shrb
push
dec
pop
cmc
roll
setbe
roll
movsb
cmpsl
or
aaa
cwtl
mov
pop
cmpsb
lods
hlt
outsl
inc
arpl
xchg
sbb
push
dec
popa
jmp
inc
jbe
push
mov
faddl
dec
push
or
std
inc
xchg
xchg
adc
je
in
insl
ret
or
inc
inc
shll
push
jge
les
xor
gs
lret
and
stc
jnp
into
sbb
xchg
xchg
cmc
sbb
push
ficompl
fs
mov
es
or
adc
and
in
in
push
or
mov
adc
lret
fdivrl
sbb
insl
adc
push
jnp
or
mov
insb
fstps
gs
fldt
mov
push
test
mov
pop
mov
hlt
jno
pop
adc
jne
and
fs
and
cmp
ss
or
sbb
into
shrl
mov
ja
cmp
sub
jl
or
jo
push
sbb
aaa
and
cltd
adc
mov
daa
dec
aad
push
leave
pop
repz
mov
in
stos
add
mov
add
push
into
scas
lahf
dec
mov
xchg
stos
cmp
and
cmpsb
std
arpl
pop
push
nop
aaa
dec
xchg
jmp
sbb
pushf
mov
push
push
xorb
pop
stos
pop
mov
je
xchg
mov
jmp
fnclex
sbb
cmpl
cwtl
sub
mov
cltd
mov
pop
fldcw
outsb
inc
into
or
fists
roll
movsl
sbb
cwtl
inc
mov
and
pop
mov
push
bound
add
inc
and
mov
mov
mov
test
xlat
xchg
mov
xor
xchg
push
xchg
add
cwtl
repz
fsubr
outsb
shlb
stos
push
stos
mov
fidivl
shll
jno
test
jp
ljmp
repz
aad
cmp
and
repnz
cs
fwait
dec
inc
dec
jno
mov
in
adc
pop
lock
inc
fstl
icebp
movsl
test
lret
mov
mov
sub
sub
mov
addr16
mov
push
aad
pop
fldt
mov
shr
int
add
stc
xchg
insb
xchg
ss
sbb
dec
jl
adc
jne
pop
adc
xchg
ja
das
xchg
cmp
inc
sbb
mov
clc
mov
aaa
mov
fbstp
dec
jb
mov
xchg
aad
and
xchg
cltd
rclb
sbb
ss
shll
lds
ret
aas
jne
and
push
or
loopne
mov
sub
adc
stos
lea
mov
out
mov
test
daa
lret
or
lock
decb
js
data16
push
adc
fldcw
or
scas
rorl
pop
in
jp
aam
or
push
mov
adc
mov
test
pop
mov
cwtl
das
xor
ja
sub
jl
mov
sbb
in
adc
out
cmpsl
adcb
xchg
data16
jo
mov
mov
mov
adc
jno
or
test
frstor
ljmp
arpl
xchg
adc
inc
in
das
movsb
fisttpll
sub
test
aaa
ret
pop
movsb
add
and
insl
lret
imulb
push
sti
pop
push
xchg
das
lcall
int3
leave
ljmp
cmc
sub
fildl
es
mov
mov
shll
add
sbb
mov
hlt
pushf
fnstenv
dec
cmp
push
xor
inc
fcoml
dec
movsb
insl
movl
pop
dec
mov
adc
stc
or
pop
test
jge
cmp
not
outsl
cli
xchg
add
pop
xchg
out
and
rorl
fnstenv
adc
jl
rcrb
mov
jbe
cmp
sub
cmp
inc
jl
mov
mov
es
xchg
cwtl
popf
clc
sbb
add
xchg
out
sbb
push
mov
aam
pop
xor
cmp
xor
idivl
dec
das
loopne
xor
cmp
lock
adc
popf
hlt
in
sub
fbstp
sbb
fnsave
lcall
add
and
push
dec
icebp
enter
dec
idivl
mov
lret
loopne
lock
mov
mov
inc
ror
popa
ss
insl
push
imul
out
xor
aad
popa
shll
or
lock
adcl
dec
mov
out
call
das
decl
adc
adc
loope
sbb
xor
cmp
mov
dec
vsubss
inc
out
or
mov
lcall
adc
cmp
pop
adc
push
jge
or
popf
lret
mov
jmp
lahf
mov
pushf
push
and
xchg
in
ds
push
mov
or
or
stc
push
inc
lret
mov
aas
pop
rolb
mov
xor
ljmp
mov
pusha
psubusw
movl
js
stos
and
mov
pop
mov
sbb
or
cmp
sarb
push
out
popf
daa
add
mov
mov
sub
jae
shrb
ror
cmp
les
icebp
ret
xchg
xchg
add
add
jnp
nop
sbb
roll
std
mov
call
daa
jae
inc
dec
outsb
xchg
mov
dec
mov
dec
sub
je
lock
sbb
push
ljmp
pop
test
mov
nop
lret
mov
int3
les
cltd
test
ds
sbb
inc
fwait
or
aaa
add
and
lcall
dec
mov
adc
ljmp
mov
loope
dec
mov
ret
lret
push
and
mov
loope
and
adc
add
rolb
imul
add
imul
popa
pop
cs
sub
jo
or
in
rcrl
push
mov
jmp
cmc
pop
mov
jle
into
ds
out
in
cmp
xchg
jno
int3
lea
jb
mov
out
rcrl
test
sub
ret
push
pop
leave
add
lods
insb
dec
outsb
imull
rorb
and
mov
or
in
in
mov
push
sarl
xchg
fisttpl
cld
inc
icebp
jbe
cmpsb
test
mov
frstor
mov
xlat
push
sub
pop
lcall
adc
jecxz
push
rorl
mov
iret
dec
push
add
adc
test
push
stc
ljmp
cmp
addl
jae
adcl
sub
sub
and
xchg
adc
sub
fwait
dec
les
inc
pop
andl
adc
cmp
or
sbb
ss
inc
fstpl
lods
popf
shll
pop
dec
and
xor
in
jge
add
ljmp
add
adc
outsl
inc
stos
mov
cmp
test
std
clc
push
cmp
or
push
xor
pusha
cli
sti
mov
jb
sbbl
push
mov
aaa
push
add
out
add
inc
pop
scas
adc
inc
jae
in
pushw
pop
rcrb
or
mov
js
inc
mov
insb
mov
insb
fdivs
or
sub
scas
add
push
or
movsb
in
lea
imul
bnd
fisttps
adc
mov
cmpsl
jb
sbb
out
cmp
mov
mov
je
daa
dec
push
mov
lea
or
jmp
ud2
jl
stc
sbb
rcl
mov
mov
dec
pop
addl
fildll
adc
sbb
adc
popf
push
add
xchg
dec
push
sub
push
loope
daa
mov
fsts
inc
scas
bound
pop
fdivrs
imul
test
insb
and
mov
xchg
push
lcall
stc
pop
test
std
push
xor
ljmp
xchg
jns
pop
adc
lcall
inc
xchg
jmp
cmp
push
lea
cmp
add
mov
add
sbb
dec
jecxz
mov
fstp
iret
aad
es
adc
nop
mov
stc
sub
out
fs
ja
aaa
imul
dec
push
mov
mov
les
xchg
add
push
push
and
jno
mov
jle
dec
stos
mov
lahf
out
lret
ret
into
aaa
call
pop
call
push
icebp
inc
mov
push
mov
xor
orb
fs
mov
jg
cmp
movsl
jnp
movsl
lret
mov
mov
mov
notl
loopne
cmp
cmp
cltd
ss
std
nop
sub
stos
dec
dec
jle
jns
test
xor
in
inc
mov
out
mov
sti
jae
jl
cmp
gs
gs
xchg
cmp
dec
xchg
jle
fnsave
stos
mov
mov
lock
mov
fwait
int3
lock
cmp
mov
mov
jns
lods
sbb
and
ja
dec
add
int
nop
jae
add
mov
es
loop
in
mov
mov
test
inc
dec
rdtsc
subb
call
popa
mov
adc
jno
inc
inc
cmp
rorb
pop
call
enter
pusha
subb
scas
push
cmpsl
mov
jmp
sbb
out
cmp
test
add
mov
js
insb
je
aam
lahf
cmp
outsb
xchg
push
subb
mov
fcompl
push
xchg
push
push
or
cmp
mov
sub
popa
jg
pop
mov
stos
aam
jne
cltd
out
neg
mov
or
or
movl
xchg
jge
and
clc
out
push
imul
fnstcw
enter
insl
rclb
test
into
or
or
sub
jae
stos
and
shlb
sub
dec
and
jle
cmp
stos
xchg
cld
jmp
pop
push
int
mov
or
push
movsl
push
movsb
mov
jo
fisubrs
cmc
pop
int
push
ret
call
mov
outsl
adc
push
mov
out
add
pop
or
sahf
out
cs
mov
xchg
cmp
push
dec
mov
mov
cmp
dec
outsl
fdivr
jns
jne
mov
mov
xor
aam
loop
xchg
rcll
jg
xor
fdiv
aam
repnz
stos
xchg
add
dec
push
mov
imul
mov
jbe
and
iret
inc
test
xchg
repz
pop
nop
mov
xchg
out
add
mov
clc
mov
mov
dec
pusha
push
sahf
fld
xlat
xor
xchg
movsl
movsl
mov
arpl
nop
fcmovnb
mov
lret
dec
xor
test
mov
cltd
aaa
or
and
push
ret
sbb
or
jo
cmp
lret
aad
out
ret
or
in
xor
jnp
cld
std
add
push
cmc
xchg
push
pop
popa
push
xor
addr16
dec
pop
sub
xchg
hlt
and
cld
nop
adc
inc
sbb
shlb
add
es
ljmp
push
fwait
shl
jbe
jno
inc
fildll
pushf
bound
jno
xchg
std
pushf
cmp
in
inc
or
cmp
xor
jnp
ret
adc
adc
lods
adc
inc
lret
adc
xchg
rcr
xchg
cmpsl
loop
inc
inc
push
dec
mov
out
fdivs
adcl
add
dec
push
insl
sbb
push
mov
mov
dec
sbb
insb
insl
xchg
cmpsl
ss
pusha
ret
dec
scas
and
cld
movsl
nop
aas
adc
leave
cmp
decb
inc
cmp
or
aam
lcall
std
sub
sub
mov
mov
mov
pop
cld
je
sub
pop
notl
ret
lret
fdecstp
xchg
mov
lret
lods
pop
or
addl
mov
sub
imul
cmpsb
in
cmp
add
daa
pop
fimull
es
sahf
repnz
imul
leave
int
push
xchg
fnstsw
mov
mov
lret
ja
fwait
lret
adc
and
daa
or
and
cmp
addb
xlat
xchg
add
pusha
pop
sub
dec
js
in
mov
push
aam
xchg
test
mov
jecxz
jnp
movsb
aas
rcll
scas
dec
add
mov
mov
dec
loopne
lret
test
scas
push
lock
mov
and
cmp
jge
shr
movsl
in
mov
mov
mov
mov
mov
mov
bt
addb
jae
in
adc
add
shlb
aad
inc
cmp
push
and
push
adc
adc
push
mov
iret
aaa
xorb
mov
mov
mov
xchg
lret
adc
outsl
jo
nop
push
mull
xchg
fsubrs
cmpsl
ficomps
andb
js
or
push
and
inc
stos
mov
mov
xrelease
mov
and
jmp
dec
shlb
push
dec
pop
cs
lcall
xchg
xchg
push
xor
test
lods
push
pop
dec
les
push
cwtl
fidivrs
adc
sbbl
xor
lcall
cmc
sbb
and
arpl
cld
in
bound
dec
in
aaa
cmp
lods
cmp
test
cltd
xchg
mov
out
test
repz
nop
fisubl
bound
lods
or
sub
push
adc
mov
pop
jae
lret
lret
popl
imulb
mov
clc
ficoml
std
fstl
mov
dec
mov
cmpb
dec
fwait
cltd
sbb
push
lds
dec
push
jnp
adc
dec
ret
push
ljmp
call
fcmovb
cmc
arpl
icebp
lcall
lea
add
push
ja
popa
cmp
and
mov
insl
in
add
jmp
aas
ds
out
test
mov
mov
pop
pushf
call
push
mov
push
ja
inc
fcmovne
mov
inc
mov
cmp
and
and
es
inc
sub
or
cmc
int3
cltd
mov
inc
push
or
fwait
repnz
shll
mov
fucomi
add
bndldx
dec
mov
sub
jp
or
jp
jge
stc
imul
fistps
scas
cmpsl
fimuls
xor
cmp
sbb
pusha
ss
lds
xlat
mov
push
jns
mov
dec
outsb
xchg
jae
shrb
mov
mov
xchg
jle
mov
les
inc
pusha
movsl
stc
xlat
leave
dec
sahf
roll
push
and
ficoml
lret
insb
sbb
push
add
fdivp
xchg
jle
fstps
lret
sub
inc
test
cmp
cltd
fcmovu
mov
sbb
push
jmp
lock
adc
je
jl
in
insl
mov
xchg
sub
push
arpl
or
cwtl
pop
push
js
adc
mov
cltd
xchg
add
jb
dec
jmp
cli
insl
xor
shl
cmpsb
or
sti
dec
test
mov
faddl
lods
jge
lods
outsb
xor
in
xchg
inc
jmp
sti
cmc
pop
mov
pop
jne
mov
mov
sub
cmp
inc
jb
lock
aaa
ret
sub
std
out
lahf
imul
and
iret
mov
lods
pop
jl
mov
pop
arpl
xor
mov
and
mov
sbb
outsl
pusha
cmp
loope
in
jnp
mov
sbb
sti
mov
mov
pop
call
in
ss
mov
xchg
xchg
jmp
fmul
cmpsb
jne
std
mov
sub
dec
xchg
pop
push
mov
sarl
sar
add
mov
dec
fxch
cmc
imul
dec
insb
in
les
into
clc
cmp
mov
mov
xor
iret
cltd
sti
xlat
cmp
dec
xchg
sahf
aad
push
cli
push
add
inc
cld
mov
aaa
lds
xor
push
ficoml
adc
push
mov
push
shrl
sbb
sbb
sbb
scas
fnstsw
inc
pop
lcall
mov
popf
jl
sbbl
imul
add
lods
lcall
pop
fsubs
xchg
sbb
jecxz
inc
pop
call
lcall
ret
xor
adc
test
mov
iret
js
push
out
inc
jae
sahf
pop
xorl
mov
dec
test
xor
jg
dec
std
jae
pop
out
retw
xchg
or
xchg
fists
or
bound
and
in
maskmovq
mull
aaa
mov
xor
inc
fdivrl
stc
adc
adc
or
fists
adcl
je
cmp
jecxz
sbb
in
cmp
push
das
int
cltd
repz
dec
ljmp
call
cmp
inc
movsl
into
dec
movsl
icebp
minps
adc
in
aam
arpl
repnz
fstpl
bound
push
xor
cmc
cld
aas
in
fs
popa
stos
scas
pusha
fs
lret
add
pop
sbb
andb
std
cmp
ret
jbe
adc
cld
daa
mov
in
cli
cmp
mov
sahf
adc
lahf
jne
rclb
dec
lds
or
or
mov
stos
aaa
shrb
cwtl
and
jne
xchg
push
push
nop
popf
adc
out
mov
les
addr16
ljmp
data16
aaa
jae
clc
xlat
inc
xchg
repz
and
inc
jae
imul
dec
data16
or
sbb
movsb
js
ror
pandn
stos
cmp
adc
nop
movsl
cltd
cmc
mov
stos
icebp
subl
sarb
pop
mov
mov
cwtl
movsl
in
pop
adc
sbb
lahf
loope
outsb
lret
add
pop
dec
std
mov
mov
mov
lret
pushf
inc
mov
std
repnz
mov
dec
scas
out
lret
push
inc
popf
fsubrs
lret
std
lret
cmp
and
fadds
repz
jb
sbb
outsl
push
loopne
es
mov
bound
incb
outsb
mov
shl
mov
push
stos
js
repnz
paddq
invlpg
shrl
dec
loope
out
xor
xchg
or
shl
mov
call
mov
test
rcll
adc
mov
repnz
pusha
push
push
and
imul
inc
inc
pop
out
insl
shrl
mov
pop
insl
jle
ret
stc
mov
push
imul
sbb
dec
in
and
pop
dec
sbb
cmp
lods
loop
adc
mov
enter
push
push
shll
pop
shl
push
mov
daa
add
nop
or
pop
xchg
xlat
sbb
test
and
mov
sub
cmpsb
out
dec
jne
sub
les
xor
add
cld
mov
addl
cmp
iret
popf
cmc
ds
mov
and
jbe
mov
push
in
cmpsb
rclb
adcb
loope
pop
lahf
push
mov
in
std
jmp
mov
arpl
dec
jmp
xor
loop
sarb
scas
call
sbb
mov
sahf
xor
fwait
fwait
xchg
es
xchg
out
bound
push
xchg
inc
xor
or
movsl
add
push
aas
pop
pop
add
insl
icebp
push
stc
inc
out
insl
mov
notb
adc
mov
ret
sub
inc
jl
and
pop
push
mov
push
pop
xlat
std
mov
mov
aam
mov
add
inc
test
arpl
sbb
shl
ss
movsl
pop
or
cwtl
lds
xchg
add
mov
mov
in
insl
add
arpl
mov
mov
cltd
cmovp
xchg
pop
ds
mov
push
or
jge
lock
cld
scas
cmp
outsl
loopne
cmp
xchg
sti
sub
adc
stos
sbb
clc
adc
jle
and
lcall
mov
ljmp
hlt
in
dec
add
pop
sbb
fiadds
lods
movsb
je
and
jne
jmp
xor
push
movsl
xchg
adc
fwait
adc
clc
mov
hlt
mulb
dec
jne
jp
mov
jg
adc
aad
lds
jmp
mov
js
or
jnp
cs
sbb
lcall
cmp
adc
add
and
xchg
test
jo
es
xor
inc
aas
int
in
push
and
cltd
ss
fdivrp
cld
rcl
sub
jecxz
pop
sbb
xlat
aaa
ljmp
or
jnp
sti
mov
int3
and
enter
dec
fdivrl
mov
mov
dec
fldenv
jg
addr16
in
subl
mov
adc
es
insb
mov
inc
sbb
add
scas
mov
arpl
sti
or
in
pop
and
divb
stc
out
pop
fwait
cmpb
fists
mov
je
test
pcmpgtw
xor
fsubs
insl
pop
inc
mov
jmp
push
push
jne
pop
sbb
jae
jns
sbb
fstl
jb
pushf
and
addr16
dec
clc
push
dec
push
xor
jae
in
cli
pop
mov
mov
mov
or
jle
cmp
int3
xchg
xlat
cmp
inc
nop
insl
xor
ss
jp
inc
fsubl
cmpsb
popf
test
jne
jb
ja
shrb
popa
data16
dec
ds
adc
pop
mov
icebp
jecxz
divl
lret
and
push
jo
mov
and
test
sbb
scas
loopne
mov
lcall
rcrb
mov
inc
aad
sahf
jno
mov
das
gs
push
and
push
pop
ja
out
ss
add
xor
jb
pop
add
jp,pn
push
and
pop
dec
push
dec
jno
bound
cmp
cmp
cmpsl
cmpsb
shrb
dec
push
je
mov
fsubs
sbb
dec
repz
add
int
pop
xchg
xor
aam
insl
popw
inc
fbld
push
jnp
icebp
push
mov
andb
adc
stos
cmp
adc
add
dec
sbb
in
xor
dec
in
lcall
ds
jne
ljmp
adc
nop
push
xchg
jo
scas
jne
jnp
jnp
mov
adc
push
dec
mov
ja
test
dec
jl
outsl
jne
push
mov
mov
mov
jae
pop
subl
xor
addl
xchg
sub
sub
cltd
movsb
pusha
sub
cmp
int3
mov
mov
mov
cmpsl
pop
push
mov
das
andb
lcall
nop
push
jae
sbb
dec
add
stos
imul
mov
and
push
pushf
out
mov
cmp
adc
repz
and
add
leave
lret
push
stos
jge
dec
mov
leave
int3
lods
cmp
int3
inc
cs
xchg
stos
lods
or
pop
cmp
pop
movsl
cmpsl
sub
xor
or
xchg
push
arpl
add
repz
sbb
adc
idivb
out
jo
test
sub
loop
sbb
loop
pop
pusha
mov
mov
imul
xchg
cltd
mov
push
or
int3
cmp
cmp
push
jmp
jmp
cmc
js
jno
cmp
mov
xchg
and
setb
jge
fistl
adc
aaa
cmpsl
inc
mov
mov
hlt
pop
in
cli
test
jg
jmp
mov
sub
xchg
in
mov
push
add
ficoms
sub
dec
ds
lds
push
jmp
cmp
js
mov
jae
outsl
cmp
mov
cmp
cwtl
mov
mov
sub
pop
stc
leave
add
jb
decl
repnz
je
outsb
mov
cmpsb
push
stos
jle
imul
sub
test
out
cmc
ret
aad
movsb
cmpl
shlb
jmp
dec
mov
add
in
inc
cmp
adc
scas
jne
test
pop
testl
xchg
into
aaa
mov
xorl
mov
loop
lahf
cli
push
mov
mov
push
sbb
adc
push
dec
mov
sub
imul
sbb
sarl
std
and
nop
mov
int3
lods
xor
mov
out
gs
sbb
cld
inc
mov
pop
adc
mov
movsl
out
inc
push
popa
ja
enter
xchg
pop
inc
fscale
lock
cli
das
cli
pop
jecxz
jbe
insl
or
mov
inc
lods
xchg
pop
cmc
sqrtps
xchg
inc
popa
and
and
mov
ljmp
in
cmp
jb
fisubrl
mov
dec
enter
and
xchg
cmpsb
cwtl
or
imul
int3
mov
cmpsb
cltd
xor
aas
pop
movsl
adc
push
xchg
mov
clc
js
add
jnp
sub
xchg
or
lcall
in
jmp
and
mov
je
jecxz
inc
inc
jnp
push
push
aam
xchg
sarl
in
ss
imul
rolb
inc
push
fwait
pop
inc
pop
scas
int
les
mov
enter
ret
insb
inc
daa
and
pop
pusha
push
idivb
test
pop
lock
sbb
jecxz
push
cmpsb
int
sbb
sbb
nop
xor
xchg
sub
xlat
cld
dec
pop
inc
jge
dec
std
mov
cmpsb
pop
push
inc
push
xchg
push
pop
dec
rclb
insb
and
lcall
xchg
push
jecxz
or
jns
mov
std
cmpsl
andb
scas
cli
rolb
jmp
sti
pop
add
mov
test
repz
fsubrs
pop
clc
dec
aaa
add
int3
movsl
adc
jmp
adc
mov
fsubl
fists
jmp
test
sub
ds
movsb
js
adc
jle
mov
cwtl
pop
int
or
mov
mov
cmp
mov
scas
mov
xchg
call
xchg
lret
dec
aaa
add
inc
mov
std
dec
jl
fwait
cmp
sbb
loope
inc
push
bound
roll
sbb
add
fistps
mov
pop
fwait
rcrb
dec
push
faddl
insl
jg
dec
adcl
lahf
out
pop
xchg
push
lds
mov
lahf
and
frstor
sub
mov
aaa
jp
leave
add
iret
and
jb
cmp
xchg
test
in
sub
pop
push
dec
inc
and
stc
je
add
cmp
push
add
jp
pop
fcmovnbe
bound
sbb
int
or
cltd
popa
and
outsl
sbbl
pop
xor
inc
test
sbb
dec
idivl
aaa
mov
adc
cmpl
push
rorb
inc
mov
push
cltd
out
xchg
mov
rcrb
jnp
push
int
fidivrs
inc
pop
insb
xorb
icebp
inc
lret
enter
sub
int
js
sbb
scas
lret
xor
mov
aaa
out
dec
fdivl
ja
daa
pop
stos
adc
xchg
xor
mulb
jmp
xchg
push
push
mov
mov
inc
bound
movsb
in
push
jbe
inc
mov
xchg
loop
jne
add
int3
scas
push
cmp
mov
inc
push
add
ret
xchg
fstpt
outsb
add
outsb
sarl
pop
rcrl
mov
lds
out
inc
and
test
aaa
pop
pop
stos
sahf
mov
mov
adc
or
insl
push
ss
push
cmp
ds
aam
pop
nop
push
test
xchg
les
outsb
test
mov
mov
popf
imul
cmp
nop
dec
mov
ljmp
xchg
insb
bound
sti
push
mov
pop
sub
test
mov
popf
nop
or
mov
sbb
imul
bt
je
sub
mov
jne
dec
cmp
pop
clc
fildll
imul
cli
jge
fs
data16
cmp
fstpt
sub
imulb
pop
fisttpl
int
cli
xor
jg
pop
data16
fcmovbe
mov
stos
lock
mov
push
aaa
leave
addr16
out
cwtl
pop
push
mov
jo
push
data16
cmovo
rorb
je
in
push
jecxz
mov
push
ljmpw
adc
out
push
sbb
repz
inc
mov
jne
sub
mov
push
int3
cmp
fmull
cmpsb
clc
mov
icebp
bound
test
stc
dec
out
mov
bound
jbe
dec
test
pop
or
imul
fdivrs
mov
in
push
outsl
inc
scas
or
xchg
loope
xchg
test
pop
adc
push
lret
shll
cmc
movsb
icebp
mov
cltd
pop
cld
cli
jp
add
add
inc
pop
mov
shl
scas
xor
cltd
fcoml
dec
movsb
push
mov
hlt
ss
aad
cmp
xchg
out
push
addr16
leave
sub
sub
ret
mov
dec
mov
out
xchg
imul
fucomip
jbe
sti
ds
adc
std
divb
jg
or
test
nop
data16
icebp
out
sub
dec
jp
inc
rcll
ffreep
cmpsl
add
sbbb
adc
cltd
push
aas
cwtl
jecxz
popf
ja
push
mov
mov
jp
mov
fwait
cmp
inc
jle
cmp
cmp
mov
xor
mov
cwtl
es
sbb
dec
or
mov
js
bound
ret
stos
lret
pop
jg
sahf
jle
imul
inc
or
mov
dec
jb
out
int
bound
or
inc
neg
out
fstps
cmc
lods
add
fsubr
cltd
test
scas
data16
pushf
sbb
imul
mov
shlb
outsl
jnp
sub
pusha
inc
incb
inc
xchg
push
or
dec
jge
addr16
rclb
adc
mov
test
xchg
cltd
pushf
loope
inc
pop
enter
aam
jp
jecxz
mov
test
out
fs
mov
mov
popa
xor
aaa
or
xchg
mov
in
bound
mov
mov
leave
jp
out
xchg
mov
inc
mov
mov
repnz
mov
mov
gs
pop
adc
push
js
pop
fdivrl
lret
lret
add
fdivrl
cli
lcall
out
rcl
cli
mov
mov
mov
sbb
mov
sub
int3
pop
movsb
xor
add
dec
loop
dec
sub
daa
dec
pusha
mov
pop
sub
push
js
movsb
and
push
ret
fmull
addr16
push
in
movsl
sbb
adcl
test
push
cltd
mul
jbe
insb
sbb
and
mov
xor
mov
mov
jg
inc
xor
fld
pop
fnsave
jnp
jno
jmp
adc
jbe
mov
jle
push
iret
and
xchg
fcom
fimuls
pop
ljmp
dec
inc
inc
jecxz
insb
xchg
int3
push
mov
mov
std
mov
aaa
scas
mov
mov
jne
or
hlt
cltd
popa
movsl
imul
mov
das
fchs
sbb
fldcw
insl
ss
shr
inc
cmp
sub
mov
fsubr
aam
pusha
pop
fisubl
lds
lds
pusha
fadds
dec
arpl
mov
or
push
arpl
lods
insb
fcomi
int
pop
add
movsb
sbb
xor
in
sti
xlat
dec
shlb
ss
aas
xor
mov
daa
or
push
out
jb
fidivs
add
push
or
mov
in
inc
cmp
and
inc
cli
adc
mov
push
push
jo
test
xchg
in
nop
pusha
jb
shll
cmp
mov
dec
jg
mov
bound
pop
incb
lahf
mov
dec
sbb
call
jno
js
pusha
pop
mov
jmp
std
sti
nop
ja
push
ret
in
out
gs
aaa
stos
scas
bound
daa
outsb
popf
and
icebp
les
jns
lds
stc
mov
and
push
fdivs
jecxz
xchg
cltd
pop
lock
jns
jg
xchg
pop
lods
outsl
or
xor
sbb
jg
lods
xchg
push
push
mov
pop
ss
push
and
dec
loope
dec
push
xor
pop
stos
sub
or
cwtl
sub
lods
ret
sub
or
mov
testl
pop
xchg
dec
pop
adc
fimuls
xchg
negl
push
sub
push
cmp
push
xchg
jp
jg
test
sbb
cld
or
xor
shrl
inc
jnp
push
iret
push
flds
setb
inc
jb
bound
add
lods
fstpl
icebp
and
pop
jle
sub
loopne
in
pop
dec
ja
jno
inc
in
adcl
sub
loopne
lcall
sub
pop
test
out
sub
movaps
xlat
mov
dec
addr16
inc
push
sbb
mov
iret
xor
mov
lock
sahf
dec
ret
dec
aam
xor
xchg
jbe
cld
imul
xchg
cmp
dec
xor
idivb
decl
inc
clc
test
andl
cmp
out
shrd
stos
enter
in
int3
inc
mov
push
outsb
test
rcr
jmp
popf
or
push
imul
jbe
sub
imul
fwait
std
frstor
sahf
pusha
mov
mov
loope,pt
xor
sub
jecxz
cmc
cmc
add
sub
sub
sbb
xchg
dec
push
lret
jp
addr16
mov
hlt
cmp
dec
sarl
mov
in
xchg
xchg
test
push
out
sbb
mov
scas
in
dec
into
push
outsb
mov
add
sub
popa
sub
mov
push
int3
inc
cmpsb
add
cmpsb
push
rcrb
xlat
shrb
sbb
pop
and
pop
or
mov
push
dec
cltd
and
shl
in
loope
mov
gs
into
iret
es
int
cmp
jne
and
sub
mov
lods
xor
xor
shrb
fcmovne
lock
test
inc
cld
mov
bound
rcr
cmp
pop
jmp
push
dec
xor
mov
push
adc
int3
sar
lds
adc
inc
push
pop
popf
xchg
add
pop
xchg
add
inc
add
add
or
sbb
jp
cmpsb
cmpsb
or
cld
xor
aad
inc
mov
add
imul
or
add
pushf
in
pusha
shlb
out
xchg
push
jge
adc
iret
and
mov
popl
sub
sub
adc
scas
fwait
rcr
xlat
adc
adc
dec
aas
addr16
mov
or
dec
fldt
inc
add
scas
jmp
mov
dec
mov
add
push
stos
inc
mov
and
mov
jb
push
rep
jno
jmp
mov
pop
dec
adc
fistpll
cli
dec
or
push
push
addl
or
in
icebp
jle
sbb
xchg
cmp
sub
add
sbb
lcall
mov
mov
pop
addps
dec
jle
sbb
and
popa
in
or
or
subl
js
adc
push
ficoms
jle
outsl
sub
movsb
add
je
in
push
stos
xchg
or
lret
jge
data16
add
dec
subl
mov
mov
stc
daa
cmp
or
movsb
add
pusha
in
push
pushf
cmp
pusha
loop
dec
lea
lea
mov
dec
mov
data16
adc
loopne
jecxz
dec
leave
push
adc
adc
sub
or
imul
xchg
sbb
movsl
sbb
mov
gs
jge
mov
add
ret
aam
push
dec
xorb
jnp
sub
les
lods
filds
and
repz
sahf
das
cmp
and
div
mov
sub
std
rcrb
cwtl
xchg
and
std
mov
jle
ljmp
push
mov
das
xor
add
sub
or
fsts
lret
sbb
fucompp
fdivrs
mov
outsb
cwtl
out
xchg
or
inc
daa
jae
movsl
pop
int3
inc
mov
inc
sbb
iret
es
sbb
push
iret
xor
jne
xchg
insl
fidivrs
xor
idivb
outsl
push
aad
outsl
xchg
cmp
pop
or
iret
push
ret
cmp
mov
fldt
ss
push
mov
lret
fmull
aas
sbbl
das
pushf
jnp
shll
and
lods
dec
jl
int
pop
dec
jno
sbb
sbb
hlt
js
xchg
iret
add
mov
cmc
inc
lods
dec
or
testb
pop
mov
outsl
jg
lahf
jbe
and
xchg
jmp
sub
xchg
xchg
push
fisttps
and
lds
insb
adc
xchg
fstpl
popf
insl
inc
push
inc
and
adc
mov
lock
or
jle
push
lahf
imul
jle
repnz
pop
iret
js
jmp
loopne
inc
in
cli
test
mov
or
mov
xor
cld
adc
push
add
pop
inc
sub
push
inc
mov
nop
ljmp
push
add
cs
add
popa
mov
and
sbb
cmp
cwtl
adc
mov
aaa
cmpsl
push
or
bound
pop
int3
shll
inc
lods
cmpsl
adc
add
jge
ret
push
mov
filds
or
in
popf
in
adc
aad
aas
sub
and
xchg
pop
xchg
sahf
aas
jno
lret
loop
pop
sbb
cld
xchg
xor
divb
inc
scas
cwtl
jg
cs
sub
push
lea
push
pop
push
mov
and
xor
in
pop
jns
adc
cmpsb
stos
fdivl
cmp
cmp
insb
fwait
lods
rcr
dec
jb
dec
mov
inc
fcom
sti
jno
cmp
add
xor
and
ds
jl
cli
mov
mov
stos
adc
repz
mov
stos
jnp
xor
data16
in
in
inc
fcoms
xlat
cmp
lock
xor
lahf
push
xor
test
dec
pop
mov
adc
inc
fisttpll
sub
pusha
test
out
xchg
lods
mov
iret
add
stc
clc
sub
lea
mov
fdivl
adc
stc
repnz
mov
mov
xor
aas
jge
xor
out
out
test
sub
xor
lret
rcrl
fmull
inc
loop
mov
mov
and
or
lret
push
sbb
mov
dec
xchg
lea
sbb
imul
jno
scas
jbe
cmp
mov
sub
xchg
jno
sbb
lcall
aad
xchg
cmp
mov
dec
jecxz
push
mov
pop
cmpb
push
bound
das
negb
fwait
sub
add
jp
xor
xor
xor
movsl
xorb
inc
xchg
push
xchg
shll
lcall
cmp
pop
test
cltd
cmp
push
inc
push
enter
loope
cltd
mov
adc
push
shll
std
xor
jbe
and
and
jae
sbb
adc
xchg
shll
pusha
mov
aam
sbb
mov
jmp
outsl
arpl
negb
push
dec
dec
test
jmp
ss
test
pop
repz
mov
test
lret
aas
fmuls
outsb
push
scas
lea
push
rcrl
pop
fcmovbe
nop
pop
add
mov
sbb
cmp
test
or
or
fnstenv
sub
xchg
fistl
ja
push
fucomp
pop
outsb
fidivs
inc
data16
add
pop
dec
cmp
mov
sub
aad
adc
dec
xor
dec
xor
rcll
in
in
test
jae
enter
lret
lods
movsb
lods
xlat
sub
insl
jne
sahf
aad
jne
les
repz
test
mov
fstl
jns
notb
inc
push
mov
clc
adc
into
call
or
fists
rcrl
shll
leave
mov
push
jnp
mov
rcrl
je
or
xor
movsb
pop
or
xchg
sbb
add
popa
jl
subb
push
in
mov
sub
or
dec
push
xor
xor
cli
add
cld
je
mov
js
xor
pusha
cmp
cmp
dec
cmpl
xchg
sbb
ds
lock
addr16
dec
out
in
test
clc
jg
inc
aaa
fcoml
mov
dec
std
test
shlb
inc
jns
clc
pop
push
sti
outsl
pusha
cs
sbb
lods
mov
inc
loope
ret
jne
sahf
loop
cwtl
cwtl
add
xchg
neg
fisttpl
cmp
jle
adcb
mov
xor
adc
inc
mov
inc
or
push
jp
fnstcw
add
test
bound
or
jns
cmp
movl
shlb
mov
and
mov
push
xor
lret
inc
or
loope
jb
fimuls
push
cltd
insb
shufps
fidivl
mov
lahf
shrl
mov
jns
cmpsl
movl
lret
dec
or
sbb
imul
sarl
push
jb
bswap
fcoms
cli
mov
cltd
push
into
mov
inc
jnp
les
dec
sti
add
adc
cmp
mull
or
push
lcall
pop
lret
adc
sahf
mov
mov
dec
outsl
adc
addr16
ds
xor
outsb
push
mov
icebp
xor
lahf
stc
adc
mov
mov
adc
cmp
lea
ret
push
jge
xlat
fdivrl
push
loop
ret
fstpt
dec
js
in
add
andl
fadds
mov
shlb
es
cltd
popf
movsb
int
jp
or
div
lods
dec
call
les
xlat
pop
jnp
jbe
mov
rcl
loope
or
ret
pop
add
inc
imul
into
and
loope
rcr
int
push
lcall
insl
dec
or
pop
dec
movsl
mov
adc
dec
rol
or
pop
lret
add
lds
mov
out
and
pop
inc
sbb
rcll
sub
aad
mov
daa
jae
push
mov
mov
push
mov
add
in
mov
xchg
out
dec
xor
and
xchg
imul
dec
shll
into
fcmovbe
mov
jnp
notb
push
rcrb
js
dec
fistl
stos
inc
jmp
sti
pop
pop
mov
sbb
jns
nop
hlt
xor
and
sbb
ret
lcall
lahf
dec
pushf
iret
aaa
mov
testl
repnz
loop
gs
push
mov
cwtl
fsts
notl
push
xor
jnp
es
pop
mov
add
imul
pop
or
pop
jmp
or
int3
add
adc
dec
cwtl
cs
pop
and
arpl
pop
aam
jnp
dec
into
bndldx
mov
inc
mov
jecxz
pop
push
jne
add
jno
imul
leave
or
push
outsb
mov
cwtl
jae
dec
adc
inc
sahf
mov
add
sub
in
mov
mov
lds
cld
push
push
iret
push
mov
xchg
js
data16
adc
mov
or
pop
cmpsl
sbb
ret
cld
daa
cmpsb
fs
jb
add
leave
rolb
jl
test
add
sbb
xchg
test
daa
jns
jne
ja
shlb
cli
push
call
movsl
push
dec
jb
stc
adc
or
mov
push
mov
add
test
pop
leave
dec
dec
aad
cmp
dec
hlt
fistl
mov
inc
push
inc
cmpsl
add
adc
and
shrl
inc
cli
push
mov
dec
ljmp
push
and
and
and
arpl
loope
lsl
rcrb
loop
aad
out
adc
test
mov
in
iret
aam
cmp
out
mov
mov
jae
iret
lahf
cli
sub
add
xchg
imul
jae
mov
cmp
shl
pop
add
mov
xor
add
fdivrs
cmp
sbb
es
jns
xchg
sbb
xchg
sub
scas
in
movsb
pushf
jns
mov
test
dec
pop
aas
in
daa
cmpb
scas
or
and
cli
mov
push
push
mov
sub
insl
jge
xchg
sub
xor
fistpl
fmuls
xor
gs
inc
aad
out
mov
roll
movsl
xchg
shlb
dec
outsb
movsb
arpl
andb
imul
ds
xchg
aas
aaa
mov
fsubrs
cmc
sub
jmp
mov
sti
ret
les
jge
std
pushf
loopne
cs
cmpsl
jp
call
mov
popa
jns
mov
lock
mov
insl
xchg
mov
js
mov
add
dec
rorb
rcrl
daa
sub
sarb
dec
fs
mov
sub
testl
pop
push
movsb
inc
xchg
dec
cmp
mov
sub
jb
sub
pop
jne
stos
jb
mov
push
out
loope
or
cmp
inc
dec
hlt
add
dec
xor
insb
out
in
jo
push
lret
inc
sti
pop
int
int3
stos
mov
and
push
adc
mov
movsb
fcmove
xchg
repnz
push
mov
nop
sbb
pop
xchg
push
and
sti
std
jmp
shlb
sbb
mov
cltd
jecxz
add
fmulp
pop
push
cmp
js
add
fsubs
lcall
push
and
jne
cmp
fwait
xchg
add
dec
sub
enter
and
xchg
es
sbb
mov
xor
jbe
mov
jno
mov
cltd
aas
imul
pop
xor
cmp
jle
jb
inc
mov
hlt
lods
pop
pop
test
scas
mov
jbe
sub
std
inc
sti
out
cmpsl
pop
lret
ljmp
mov
cltd
out
push
clc
cmp
dec
pop
test
or
cld
jbe
or
insb
addr16
ds
lods
sbb
fisttpll
bound
les
mov
notb
sub
jge
and
cmpsb
pop
jg
dec
mov
ss
and
push
push
fnstcw
mov
inc
notl
lea
mov
xchg
cwtl
sbb
xchg
sbb
daa
fistpll
xchg
test
lea
cmp
adc
add
out
jp
sahf
and
imul
cs
fnstcw
cli
je
std
out
add
jecxz
ja
test
clc
jge
lods
test
rcl
pop
insl
bound
sbb
add
loope
cltd
mov
je
cmp
ret
iret
fs
sub
add
mov
mov
sub
dec
fmul
repz
cltd
cmpsl
and
test
outsb
jb
and
movsb
cmp
in
fcoml
sti
adc
in
mov
cld
enter
fld
bound
push
into
jne
sbb
fucom
iret
cmp
mov
stos
xchg
lcall
std
mov
jae
cs
mov
add
aas
dec
xor
mov
gs
mov
adc
dec
mov
hlt
fistps
outsb
cmp
xchg
mov
mov
mov
jo
push
mov
mov
xchg
sub
dec
adc
mov
idiv
lods
fcomps
pop
les
add
pop
insl
add
stos
jo
xor
aas
inc
lret
cmp
sub
inc
or
stos
or
popf
dec
cmp
movsl
dec
jbe
add
add
lahf
mov
fistps
xchg
mov
mov
stos
cmp
dec
rorl
push
fwait
cmp
loope
xlat
in
dec
lahf
xchg
pop
inc
jmp
int3
inc
testl
pop
xchg
rolb
dec
mov
xchg
loop
dec
cmp
aas
jne
mov
adc
loopne
std
fldt
loopne
mov
push
shrl
ja
sbb
out
cld
cmp
setl
mov
push
mov
aas
xchg
sub
jae
add
mov
jno
adc
jo
repnz
inc
mull
xchg
push
hlt
int
scas
pusha
pop
pop
orl
and
test
pop
hlt
fdivrs
fidivs
push
cmpsb
adc
mov
cmp
clc
dec
xchg
lods
add
and
in
imul
insb
sti
inc
popa
test
dec
jmp
sti
xchg
mov
cwtl
cs
sub
je
int3
out
adc
add
cmp
insb
pop
jno
cmpsb
pop
daa
mov
pop
jo
xor
mov
sti
ret
sbbl
push
push
sub
xor
shr
xor
sbb
mov
cmp
mov
insb
scas
jb
stos
inc
sbb
add
orl
enter
aaa
cmp
das
lods
repz
out
sub
or
insl
xor
bound
ja
add
pushl
and
repnz
mov
jnp
adc
dec
push
sahf
push
lret
dec
adc
inc
pop
sbb
xchg
mov
in
fisttpll
fs
movsb
outsl
and
pop
popa
mov
insl
mov
cmp
fisttpl
fwait
pop
lret
xor
cmpsb
idivl
into
mov
cmp
push
scas
or
add
aad
std
fisttpl
mov
insb
push
inc
pop
mov
xchg
ja
js
nop
mov
pop
sub
notb
call
push
xor
sub
and
fimuls
and
fnstcw
std
sub
push
stos
mov
mov
pop
stc
xor
ljmp
jg
or
or
jns
std
pop
mov
inc
push
and
loopne
push
dec
stc
mov
loope
sub
mov
ljmp
cld
cmp
loope
std
or
sub
fs
push
adc
adc
mov
in
pop
das
lret
push
aad
in
push
daa
add
daa
icebp
add
imul
cwtl
jl
lds
into
ljmp
addr16
pop
mov
push
test
pop
cvtdq2ps
addr16
pushf
dec
mov
mov
adc
cltd
cmp
xor
cltd
lahf
jnp
hlt
mov
push
in
sbb
dec
fdivl
push
hlt
inc
movb
or
jae
and
aas
andb
mov
sbb
mov
jo
pop
sti
pop
sub
or
insb
mov
or
adc
lods
cmpsl
repz
push
cmc
sar
lock
sti
mov
add
mov
mov
rol
pop
das
jno
icebp
nop
xor
cmp
jge
loope
or
xchg
sub
jne
mov
lret
cmp
subl
mov
push
fwait
divl
loopne
paddsb
mov
adc
xchg
inc
and
cmc
xor
fisubrs
sti
js
movsl
mov
cmp
sub
arpl
pop
fcmove
xchg
cmpsb
repnz
cmp
iret
ror
lret
lret
cmp
test
nop
sbb
in
sti
xchg
mov
popa
xchg
adc
mov
sahf
lcall
xchg
out
sbb
fstpl
jmp
xchg
enter
cs
add
push
push
imul
imull
clc
xchg
inc
push
xor
pushf
xchg
and
out
cli
pop
arpl
push
fcoms
inc
aas
and
xchg
repz
mov
ja
sub
rclb
sub
cmc
pop
push
insl
addr16
xchg
iret
scas
xchg
xchg
loope
daa
dec
push
mov
mov
mov
dec
adcl
out
in
rcrl
sbb
sbb
stos
mov
mov
out
push
push
fidivl
xor
iret
fs
insl
popa
pop
sbb
fmul
jb
fs
add
cwtl
fdivrl
dec
jmp
test
jb
movsl
mov
sub
ss
or
popfw
shrb
or
and
lahf
dec
dec
cmp
insl
jle
sarb
sbb
mov
pop
sub
gs
mov
xchg
or
das
ljmp
cmc
xor
or
hlt
xchg
ds
pop
leave
xor
jmp
in
sti
lret
or
fcomps
lods
sub
lea
imul
lahf
icebp
xchg
sbb
or
es
mov
mov
ljmp
out
rorb
int
pop
xor
adcb
mov
repnz
ja
int3
jb
imul
push
xchg
mov
jnp
mov
fs
loopne
push
xor
in
sbb
stos
push
les
xchg
out
in
xchg
cltd
loopne
jno
push
xchg
movsb
lods
pop
mov
ja
jecxz
jecxz
mov
lods
inc
xchg
cmpsl
stos
adc
adc
lahf
or
mov
ja
mov
std
aad
in
push
pop
leave
mov
mov
in
or
add
mov
repz
sarb
std
adc
mov
aas
enter
add
fildll
cli
bound
hlt
xor
adc
xor
dec
dec
subb
fldenv
out
mov
jno
daa
aad
xchg
enter
jle
push
sti
xor
imul
dec
pop
outsl
xor
pop
adc
daa
lcall
push
lea
lods
idivb
dec
xor
je
in
leave
inc
mov
stos
scas
ret
negb
sarb
mov
add
lahf
bound
cs
xchg
sbb
stos
push
lret
ljmp
fwait
sbb
and
jmp
jns
outsb
and
or
cmp
add
stos
push
sti
mov
ret
mov
adcb
mov
movsl
mov
lea
mov
xlat
out
imul
push
outsb
enter
sbb
in
xchg
mov
mov
in
add
mov
loop
xor
fs
sbb
xor
and
fdivrs
push
stc
int
mov
lcall
popa
dec
push
sbb
adc
dec
into
jbe
cmp
stc
or
rcll
jmp
rcr
or
rorb
jmp
push
jge,pt
mov
push
loop
int3
test
pusha
ror
jecxz
lock
insb
nop
adc
daa
stos
outsb
bound
xchg
mov
arpl
dec
or
jp
movsl
lret
mov
xchg
xor
cmp
mov
int3
cmp
aas
rorb
loop
jge
mov
fsub
ficoml
cwtl
cmpb
xchg
jns
mov
pop
mov
sub
jg
mov
jg
jle
rcrb
pop
fldenv
aaa
insb
xchg
adc
adc
mov
or
bound
mov
outsl
int
xor
rorb
jge
gs
jno
fldcw
int3
cld
les
fsts
mov
add
sub
std
movsb
cld
mov
adc
aas
add
push
arpl
xor
rcrl
clc
iret
dec
fwait
sub
loop
cmp
mov
sub
movsb
add
inc
jo
xchg
xor
mov
or
cmp
dec
hlt
sub
inc
mov
and
hlt
pop
jno
mov
xlat
mov
stc
pop
fdivs
sbb
xchg
aam
loop
jmp
or
mov
pop
add
rolb
and
xchg
push
jmp
clc
add
xor
and
xor
lea
xchg
shll
dec
out
ljmp
ret
cmp
cmc
ljmp
pop
mov
aas
inc
pop
das
fimull
mov
mov
incb
add
test
lret
sbb
mov
jmp
das
mov
pop
adc
test
mov
pop
loop
cmp
sbb
add
dec
out
pusha
int
dec
mov
jg
cmpsb
adc
cltd
fwait
shl
cmpsb
xchg
stc
lods
clc
fisubrl
adc
cltd
pusha
xor
hlt
xchg
cmp
and
insl
out
arpl
in
jp
mov
add
sahf
scas
ret
cmp
xor
scas
adc
push
jmp
mov
push
adc
push
xchg
push
arpl
cltd
cld
arpl
add
fimull
jge
ja
pop
jno
mov
pop
dec
xchg
sti
xlat
mov
and
sbb
add
lret
add
jmp
cld
daa
imul
jmp
pop
push
addr16
imul
mov
xor
xchg
and
fs
js
add
mov
mov
push
sbb
jbe
jp
mov
push
cmp
push
lock
popf
sbb
ds
mov
jl
call
notb
mov
loop
sub
pop
cmp
pushf
sti
out
dec
aaa
jp
inc
ror
cmp
shr
push
xor
mov
lea
jg
ds
outsl
cmpsl
loope
arpl
sti
lds
jno
pop
cmc
cmpsl
pop
xchg
inc
call
ss
dec
add
jmp
adc
add
sub
gs
in
dec
cmp
dec
imul
divl
fidivrl
xor
lods
fsubp
jp
mov
mov
inc
imul
push
aas
js
loop
daa
pop
sti
imull
push
out
int
mov
add
xchg
cmpsl
sbb
mov
sbb
inc
and
sub
adcl
outsl
xor
test
into
loopne
cmp
cmp
call
dec
xor
xlat
pop
push
out
pop
test
rcl
lds
add
lds
testl
mov
cltd
adcl
rcl
sbb
ret
push
sub
jno
bound
je
in
stos
mov
pusha
rcll
dec
inc
cltd
aaa
ss
cmp
jno
addr16
jmp
cli
out
adc
imul
xchg
pop
xchg
mov
leave
sti
into
inc
pop
pushf
inc
jge
js
add
daa
cs
ret
sbb
pusha
mov
dec
xor
inc
orb
mov
enter
jne
or
cmp
int3
jecxz
cs
pushf
dec
push
pop
jl
add
psubsw
mov
aad
xchg
xor
jecxz
xchg
or
stos
sbb
mov
add
dec
sbb
add
mov
mov
adc
and
fwait
dec
push
cmpsl
les
mov
mov
xchg
push
mov
fs
push
mov
mov
fucomp
pop
adc
cwtl
loopne
clc
fdiv
add
adc
pop
xchg
xor
xchg
pusha
subb
dec
jae
movsl
sbb
xor
add
outsl
mov
imul
push
mov
xchg
pop
ss
addr16
aad
cmp
scas
jl
adc
cmc
cwtl
arpl
scas
loopne
test
cltd
add
in
call
pop
xor
fs
mov
mov
cli
jne
adc
pop
sti
pop
cld
add
cld
jg
cmpsl
push
mov
pop
mov
mov
jb
or
test
scas
pop
cmpsl
push
movsl
popf
repnz
dec
push
data16
icebp
lret
xchg
sti
loop
xor
mov
dec
frstor
inc
jmp
push
jno
pop
inc
test
sub
in
dec
out
pusha
outsl
out
pusha
leave
jne
insl
inc
loop
fadd
js
pop
shrb
stos
and
add
jo
lcall
cmpsb
ficoms
mov
mov
adc
in
xor
adc
add
int3
test
jne
inc
aaa
pop
ja
xor
stc
cmc
add
cmp
adc
push
lcall
enter
xor
jne
xchg
notb
mov
sbb
add
pop
jo
push
scas
and
jae
imulb
jae
dec
mov
ljmp
sub
or
jb
xor
dec
stc
mov
mov
outsl
pop
dec
stos
cmpb
lods
das
nop
and
jp
loop
fs
loope
fbld
jecxz
filds
inc
enter
xor
cld
mov
popa
push
mov
xchg
cmpl
lods
faddl
inc
or
inc
aam
jle
inc
mov
insb
aad
aam
sbb
test
mov
mov
jge
cmp
lret
mov
leave
xlat
pop
jmp
mov
push
mov
ret
mov
push
mov
in
sysexit
xor
ds
mov
cmp
dec
and
jno
xor
jns
test
and
es
popf
mov
in
rorl
dec
cmp
xchg
inc
out
call
mov
sbb
mov
in
pop
push
adc
push
mov
test
xchg
mov
and
inc
pop
adc
mov
cmpsl
or
mov
mov
mov
cli
stos
outsb
cmp
jecxz
pop
loop
out
aad
sub
mov
cmp
fsts
daa
cwtl
mov
pop
fnstsw
ret
repnz
out
adcb
cmp
leave
dec
sar
lds
enter
and
movsl
pop
push
pop
cmpsb
cmpsl
dec
sbb
push
push
fsubl
dec
push
sbb
jg
ret
lods
cmp
ret
pusha
jns
or
add
mov
xorb
xchg
cmp
ret
rcrl
jge
call
add
das
loop
xchg
sahf
icebp
cmc
add
data16
lcall
pop
mov
daa
push
pop
push
cmpsb
shrb
push
mov
ficomps
aaa
ss
mov
sub
shlb
or
rcl
pop
mov
push
or
push
or
enter
pushf
jl
ljmp
rcr
popa
cmp
xchg
rcrb
add
push
inc
into
ficoml
lds
cmp
push
sbb
not
orl
leave
dec
into
lahf
sbb
cmp
jns
mov
fmuls
xor
jnp
imul
enter
cltd
mov
repnz
cmpsl
outsl
mov
into
mov
out
sub
gs
cmp
loope
adc
dec
rorb
xchg
push
jecxz
ljmp
lods
aam
xchg
sbb
push
jbe
jnp
test
adcb
std
jle
dec
lods
icebp
push
xchg
int
out
mov
loopne
sbb
outsl
popf
pop
cltd
pop
in
aaa
mov
sahf
push
cmp
dec
dec
call
test
push
stos
ja,pn
sbb
mov
xlat
outsl
mov
mov
sbb
mov
xorl
adc
and
repnz
out
aaa
xor
movsb
adc
mov
xchg
jne
cmp
inc
dec
inc
mov
lea
rol
dec
push
xorb
xchg
jmp
mov
or
jno
jne
pop
ds
mov
sub
ja
movsb
insb
jp
leave
jns
test
stos
xor
mov
lret
cmp
dec
mov
or
call
cmp
cmpl
dec
test
xadd
dec
adc
mov
clc
rcrb
outsl
mov
insl
mov
xchg
sbb
lock
dec
mov
cmp
mov
dec
int
sub
jbe
or
subb
call
clc
and
pop
cmpsl
jo
sbb
adc
dec
divb
roll
call
jge
call
mov
popa
aad
int3
mov
pop
test
mov
mov
movsb
xor
push
pusha
inc
push
cmpsl
scas
out
out
shrl
icebp
jecxz
sub
jmp
adc
mov
dec
movsb
fstps
cmpb
jg
jno
add
pushf
mov
xor
pop
in
xor
sbb
jnp
push
or
inc
mov
inc
mov
sub
xor
repz
popa
aad
mov
shlb
int
mov
cmp
ret
inc
stos
nop
jno
arpl
jae
or
mov
mov
shlb
mov
cmc
je
dec
std
lea
das
add
mov
testl
mov
roll
in
and
mov
hlt
xchg
shr
loope
xlat
sbb
repnz
aaa
pop
xlat
xor
enter
push
adc
repnz
xchg
jp
jb
das
dec
in
push
xchg
inc
mov
pop
call
push
andb
and
adc
cmpsb
popf
mov
sbb
in
or
push
xor
gs
lods
rol
lods
adc
negl
or
pop
int3
push
imul
mov
inc
addr16
cltd
outsb
es
je,pn
xor
add
lods
mov
bnd
aam
sub
and
and
std
sbb
shlb
dec
push
jae
scas
ret
mov
xchg
imul
imul
mov
sbbb
mov
adc
sbb
mov
and
jge
jbe
test
dec
test
add
push
lret
mov
ret
mov
leave
icebp
inc
imul
or
aam
dec
test
pop
lfs
cmp
push
sbb
das
fdivrs
push
lcall
inc
xor
pop
dec
out
or
popa
aaa
fidivs
mov
insl
sub
rclb
fcmovnu
arpl
mov
mov
add
push
sbb
out
decl
fbld
fldl
pusha
fidivs
pop
test
hlt
es
cwtl
pushf
out
nop
into
cmp
loopne
jno
fsubp
mov
cltd
mov
mov
xchg
pop
bnd
xchg
iret
dec
adc
pop
adc
imul
mov
lret
fisttpl
sahf
cld
insl
mov
shl
cld
add
popa
add
jnp
repnz
stos
mov
inc
or
neg
stos
icebp
and
cmp
imul
xor
lock
mov
loope
es
inc
xor
repnz
mov
test
cwtl
mov
pop
xor
push
mov
ror
xor
push
mov
stc
mov
aas
mov
push
mov
nop
imul
or
outsb
enter
cmp
and
std
stos
or
add
mov
outsb
push
loop
mov
mov
jno
sub
fdivrs
test
js
pop
repnz
xchg
adc
lods
in
stc
sub
or
ret
xchg
lret
add
lea
mov
jecxz
jg
arpl
lock
loop
pop
pop
cmp
jg
inc
xchg
push
popf
inc
xchg
adc
int3
dec
push
push
xor
in
and
mov
shr
sti
adc
aaa
dec
and
inc
repz
shll
sbb
iret
pop
mov
xor
pop
sbb
add
mov
mov
mov
add
dec
addb
sub
mov
cmp
add
xor
pop
fiaddl
or
pop
out
je
pop
jns
push
imul
in
push
jge
mov
inc
cltd
les
lea
inc
add
push
sbbb
sub
pop
mov
icebp
lret
cmp
mov
xchg
test
lcall
jge
mov
daa
adc
out
in
insb
dec
movsb
andl
outsb
daa
inc
imul
jnp
jo
testb
or
leave
or
mov
fsubr
fistpl
mov
rorb
jge
in
xchg
mov
or
dec
or
jne
mov
lret
jno
inc
ret
add
test
movsl
faddl
inc
add
mov
or
cltd
scas
jo
xchg
push
or
scas
in
mov
adc
push
xor
sarl
scas
in
inc
ret
fldl
jo
cld
in
and
cmp
jbe
fstpt
inc
sti
ret
adc
jae
xchg
rcrb
andb
or
push
mov
neg
xor
push
lds
repnz
mov
mov
mov
cmpsl
mov
jo
fmul
adc
or
nop
xchg
jmp
fildl
in
cmp
pushf
xchg
mov
mov
jns
push
add
push
mov
jb
imul
test
xlat
das
pop
mov
loope
jg
mov
jbe
xchg
xchg
jmp
inc
push
test
shl
adc
xchg
insb
push
testb
add
in
cmp
loope
pop
and
fcoms
sti
loopne
and
lods
xchg
xchg
inc
ret
fldl
adc
aaa
dec
enter
js
fsubrs
mov
sub
adc
lock
scas
push
xor
movsb
xchg
inc
ds
mov
in
mov
cmp
loope
lcall
cmp
mov
or
adc
xchg
cmpsb
repnz
stos
jge
cmp
popf
push
idivl
dec
jns
dec
out
loop
xchg
mov
je
mov
cmp
jge
je
scas
mov
test
push
add
pop
daa
sub
subl
adc
dec
sub
fwait
push
stos
jp
mov
cmpsb
inc
mov
inc
xor
faddl
fbld
movsb
enter
adc
inc
scas
dec
push
jecxz
pushf
adcb
pop
adc
cmc
push
mov
mov
pusha
add
or
scas
hlt
jge
stos
incb
int3
jbe
jae
push
aas
pop
push
adc
enter
mull
cltd
repnz
lods
ljmp
imull
pop
pop
adc
mull
aam
adc
pop
incb
jnp
in
loop
out
jb
out
sbb
sub
dec
int
insl
or
dec
lea
mov
sbb
lea
call
test
fldl
cmc
test
loope
std
jbe
inc
sbb
sbb
mov
imul
mov
fldenv
pop
xor
out
cmc
pushl
xlat
dec
dec
jb
mov
lcall
sub
inc
in
and
mov
outsl
mov
mov
jmp
mov
repz
cld
mov
or
movsl
shll
icebp
add
mov
loopne
adcl
sub
into
or
mov
fs
outsb
mov
mov
lcall
xchg
cmpsl
pop
jmp
fisttpl
test
sahf
push
sub
pop
mul
and
jge
sub
shr
jle
sarl
jns
sub
xchg
sub
test
je
dec
dec
jno
pop
in
add
popa
push
