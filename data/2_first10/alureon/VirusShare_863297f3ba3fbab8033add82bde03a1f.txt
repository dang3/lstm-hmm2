xchg
not
xor
mov
xchg
rcl
xor
xor
not
mov
rcr
mov
lea
mov
xor
cmp
jne
mov
lea
mov
lea
lea
mov
mov
ror
lea
xor
xor
neg
cmp
jne
lea
xor
shr
mov
mov
neg
add
shr
cmp
jne
lea
push
push
lea
push
lea
push
call
cmp
jne
ror
rcl
xor
neg
neg
rcr
xchg
lea
mov
xor
neg
xchg
mov
cmp
jne
xor
mov
xor
xchg
lea
neg
xor
xchg
lea
and
add
mov
xor
cmp
jne
not
xor
mov
mov
mov
xor
lea
push
push
push
push
push
push
push
call
cmp
jne
neg
xchg
mov
rol
lea
mov
rol
neg
shr
cmp
jne
xor
ror
mov
xor
lea
mov
xor
sub
mov
cmp
jne
mov
rol
xchg
mov
mov
lea
lea
cmp
jae
xor
and
mov
lea
movl
ror
xor
movl
xor
mov
cmp
jne
xor
mov
xor
mov
shr
lea
xchg
mov
xor
xor
not
lea
mov
xor
cmp
jne
xor
neg
call
xchg
not
ror
xor
and
xor
not
rcl
cmp
jae
add
mov
neg
mov
rcl
not
xchg
xor
lea
mov
adc
mov
neg
cmp
jae
mov
and
mov
lea
mov
cmp
jne
mov
lea
mov
lea
push
push
push
push
call
push
add
lea
lea
add
popl
cmp
jne
shr
mov
mov
xchg
mov
rcl
popl
lea
cmp
jae
xchg
rcr
neg
and
mov
xor
mov
push
lea
push
push
lea
push
pushl
call
cmp
jne
add
call
xchg
rol
lea
push
cmp
jne
not
xor
movl
mov
xor
lea
rol
movl
rol
mov
mov
mov
xor
cmp
jae
xor
lea
xor
xor
push
cmp
jae
not
push
lea
push
push
lea
push
pushl
call
cmp
jae
lea
shr
add
shl
rol
rcl
cmp
jne
shr
mov
neg
ror
rcl
shr
lea
xor
lea
mov
add
xchg
cmp
jae
xor
add
and
lea
mov
mov
pop
mov
xchg
mov
mov
shr
cmp
jne
rcr
rol
xor
xchg
not
xor
xor
add
lea
ret
lea
lea
not
cmp
jne
shl
mov
not
lea
shl
lea
xor
neg
mov
mov
cmp
jne
lea
movl
shl
neg
ret
xor
mov
cmp
jae
lea
xor
inc
jne
rcl
lea
mov
ret
and
mov
not
xchg
xor
mov
xor
and
lea
lea
not
mov
push
call
cmp
jae
push
mov
sub
pusha
mov
shr
ror
xor
neg
cmp
jne
not
mov
mov
mov
mov
mov
mov
lea
cmp
jne
mov
mov
lea
mov
add
mov
shr
push
lea
neg
adc
xor
mov
rcr
cmp
jae
dec
jne
mov
xor
mov
add
lea
lea
xchg
popa
leave
call
call
mov
cmp
jne
movsl
nop
mov
lds
mov
jbe
lcall
sbb
dec
push
sub
inc
pop
xlat
iret
imull
mov
fisubrs
or
push
adc
je
dec
mov
movsb
addb
pop
push
or
sub
ret
or
cltd
mov
add
mov
lock
test
fbld
mul
xchg
jl
xchg
mov
mov
sahf
addr16
jl
mov
mov
push
xchg
sahf
lahf
or
push
inc
add
mov
std
in
dec
mov
ret
sub
into
test
xchg
xlat
push
sarl
stc
not
fcmovb
mov
in
push
jl
xchg
mov
outsb
sahf
imul
test
pop
cmp
push
enter
mov
subl
je
dec
adc
xchg
idivl
jae
mov
orb
out
pusha
lock
xchg
testl
scas
pop
cmp
push
out
js
testl
sbb
int
xchg
push
cmp
lret
xor
push
dec
cmp
mov
in
xchg
stc
dec
dec
mov
cwtl
arpl
mov
test
xchg
lds
cmp
jno
stos
sub
cmc
aam
dec
add
jbe
mov
sti
fidivrl
push
popa
test
sub
push
mov
aaa
rcrb
jne
iret
repz
ret
mov
daa
notl
lret
fidivrl
fwait
ret
sub
imul
pop
mov
mov
cwtl
arpl
mov
test
shll
mov
or
cmp
neg
cmp
sub
pop
mov
inc
mov
les
filds
not
pop
lcall
sub
aam
sub
sub
mov
mov
inc
cmp
paddw
rorb
bound
pop
adc
cmp
ret
sti
fildl
pop
pop
in
mov
test
imul
push
push
cmp
cwtl
shl
sub
out
or
mov
sub
psrad
mov
int3
testb
loop
les
or
es
arpl
push
orb
inc
stos
xchg
arpl
dec
fwait
ljmp
test
int
loopne
inc
pushf
xor
push
sbb
mov
enter
shlb
stc
inc
xchg
ljmp
orb
cmp
ds
aam
jnp
xchg
inc
fisubrl
mov
jnp
outsb
loope
pop
cli
or
mov
or
mov
sub
jns
in
test
mov
add
aaa
das
int
hlt
paddsw
mov
in
int
adc
and
sub
jmp
inc
sbb
insb
aam
jmp
inc
pop
jo
test
push
xchg
pop
fs
testl
add
mov
jmp
insb
repnz
test
inc
push
pop
pop
movsb
xchg
jns
cmc
adc
sbb
lds
sub
idivl
sub
jmp
icebp
mov
mov
ja
jne
or
cmp
fimull
ret
pop
jnp
aam
dec
pop
int3
push
jnp
pop
sbb
push
int
cmp
cwtl
shl
sub
out
sbb
mov
stos
ror
ljmp
sarl
push
les
sub
xchg
pop
lock
imul
fisubrl
or
inc
aad
jnp
outsb
adc
les
adc
adc
push
stos
imul
push
cmpsb
pop
xchg
scas
imul
add
les
aam
mov
mov
insb
int3
mov
jmp
les
pop
push
sti
pop
mov
jnp
mov
out
fwait
sub
test
sarl
jnp
adc
test
cmp
mov
jnp
test
popf
lock
add
jle
movq
int
cmp
loop
push
xchg
pop
ljmp
dec
pusha
lds
aad
mov
add
pop
mov
stos
fildll
push
jnp
mov
sbb
mov
adc
mov
mov
aad
pop
pusha
out
mov
pop
std
or
xor
xchg
mov
and
mov
dec
inc
sti
lret
ret
jo
inc
paddd
cli
mov
pop
sbb
and
jne
inc
cwtl
leave
and
sbb
push
jnp
mov
or
cmp
ljmp
fstpl
rcr
pop
mov
add
inc
jns
aam
inc
lds
mov
mov
dec
mov
bound
cmp
ljmp
and
lock
and
je
pop
in
xchg
and
in
dec
xor
dec
pop
inc
adc
dec
jno
outsl
outsl
test
nop
pop
mov
mov
jo
scas
jecxz
popf
aam
and
out
sub
test
mov
dec
test
push
loope
das
push
mov
xchg
dec
inc
test
and
test
mov
dec
test
sub
test
mov
or
cmp
ljmp
and
add
sbb
js
aam
lret
out
dec
test
aam
lds
in
jmp
mov
jmp
inc
mov
jmp
repnz
xchg
inc
les
ljmp
sub
icebp
mov
rorb
cmp
daa
int3
test
mov
lock
jmp
jo
jo
xchg
and
lods
mov
fiaddl
jmp
adc
aam
leave
mov
mov
mov
jmp
cld
inc
js
cmc
mov
and
mov
or
hlt
ret
jecxz
inc
outsb
out
inc
test
int3
mov
pop
in
fldt
inc
out
sar
mov
loope
es
mov
popf
sti
js
repz
das
xlat
lahf
andb
inc
cmp
cmp
push
mov
lods
cmp
leave
aam
add
aaa
push
std
inc
push
sub
test
xor
and
ret
mov
int
sub
shlb
fwait
cmp
out
xor
adc
sbb
dec
mov
testb
or
in
jne
stos
in
add
rorl
and
sbbl
fmuls
scas
test
sbb
call
test
aas
rcrb
popa
sub
add
jg
pushf
mov
hlt
inc
in
hlt
add
ficoml
test
inc
test
and
insb
mov
leave
pop
or
add
pop
mov
push
mov
mov
test
pop
xlat
push
in
les
leave
mov
xchg
push
addl
sub
insl
adc
push
lret
test
lret
jns
mov
sub
mov
mov
fwait
into
xor
add
jmp
lcall
shlb
xor
jnp
or
js
stc
adc
or
cltd
lds
scas
inc
int
popf
popf
neg
ljmp
sbb
mov
cmp
mov
xchg
test
jcxz,pt
jb
daa
addl
jmp
jnp
and
xchg
loopne
test
or
test
loopnew
adc
pusha
adcl
bound
push
pop
jnp
in
jns
scas
and
lock
lods
les
mov
fimull
pop
push
adc
xchg
push
pop
es
and
mov
jg
lea
add
fiaddl
out
les
jge
aad
jl
clc
in
jo
fmuls
mov
jmp
push
mov
scas
js
outsb
or
adc
xor
stos
aad
lahf
xlat
out
les
sub
dec
aas
mov
dec
dec
test
call
js
sarl
sub
int
inc
int
sbb
add
lock
xor
jg
pushf
lds
loopne
or
pop
cli
out
dec
jg
mov
jns
jl
dec
ja
notl
and
loope
scas
xchg
out
mov
cli
jbe
push
arpl
inc
shlb
lcall
call
int
cmp
test
icebp
xor
dec
das
sub
cmp
cmp
scas
mov
mov
push
jb
mov
mov
lods
ja
cld
fwait
mov
mov
js
mov
test
fcomps
jecxz
add
and
add
adc
mov
ljmp
in
fbstp
fsubrl
push
iret
mulb
mov
jmp
data16
jg
add
shrl
mov
or
dec
add
push
mov
jg
pop
inc
fisttpl
adc
ja
xor
lock
mov
repz
aad
jnp
adc
mov
sbb
jge
aam
mov
stos
xchg
pop
addr16
sbb
leave
mov
notb
jne
pop
stos
movsl
aam
pop
mov
ret
or
push
shrl
ret
cmp
insl
lahf
fisttpll
adc
notb
pushf
cmp
sbb
sbb
add
mov
inc
inc
and
xor
jns
dec
or
cmp
test
lahf
jb
sar
stc
and
repnz
lods
jo
mov
pop
xchg
in
inc
push
popa
add
jl
or
add
or
or
ret
sub
add
rcl
shrb
icebp
jo
xor
dec
inc
xchg
fistpll
cmpsb
hlt
ljmp
cmp
mov
aam
popa
test
movsl
int
or
mov
bound
adc
addr16
rcrb
inc
mov
sbb
out
cmpl
sub
jg
xchg
and
cmp
jns
ret
arpl
jl
sub
cwtl
inc
xchg
cmpsl
xchg
cmp
out
insl
sbb
jp
xor
outsl
mov
xchg
int
mov
dec
loope
jae
mov
pop
jecxz
push
xlat
mov
loopne
sbb
and
pop
imul
sahf
jo
mov
ret
fsub
xor
pop
repz
and
loope
dec
in
rolb
mov
adc
ja
dec
enter
xor
aas
testl
loop
repnz
mov
mov
movsl
enter
pop
push
dec
xchg
cmp
lods
notb
sbb
push
scas
pusha
adc
jecxz
mov
mov
jno
js
fwait
pop
mov
fdivrl
cmpsl
ja
mov
repz
ljmp
dec
push
sub
out
pusha
push
sub
mov
outsb
or
movsb
call
mov
mov
xchg
dec
and
cmpsb
mov
or
add
mov
enter
cmpsl
sub
dec
cmpsl
adc
pop
xchg
inc
xchg
and
pop
in
