mov
push
mov
sub
push
push
push
pushl
call
push
pop
xor
push
lea
rep
pop
lea
rep
push
pop
lea
rep
mov
xor
movl
mov
mov
movl
xor
mov
mov
movzwl
mov
lea
push
mov
call
cmp
mov
je
addl
inc
add
cmpl
jb
mov
mov
push
lea
pop
mov
lea
push
movl
movl
mov
mov
movl
call
mov
cmp
jge
push
push
push
push
push
push
call
call
xor
cmp
setg
pop
pop
pop
leave
ret
push
push
push
push
push
push
call
xor
cmp
jbe
pushl
call
inc
cmp
jb
xor
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
add
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
inc
inc
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
mov
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
add
push
pop
pushl
lea
add
call
mov
test
jbe
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
pushl
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
mov
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
test
jbe
mov
mov
sub
mov
mov
jmp
mov
mov
mov
mov
inc
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
mov
cmp
jb
lea
push
xor
mov
test
jbe
push
push
push
pop
sub
mov
mov
mov
lea
lea
mov
ror
imul
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
mov
add
mov
mov
sub
mov
add
movzwl
lea
mov
movzwl
lea
mov
mov
mov
mov
xor
xor
cmp
jae
push
push
mov
mov
addl
push
pop
rep
mov
mov
add
add
mov
movzwl
inc
cmp
jb
pop
pop
mov
add
pop
mov
xor
inc
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
mov
mov
push
mov
cmp
je
push
call
mov
pop
pop
ret
mov
push
mov
sub
mov
mov
push
mov
mov
push
mov
mov
movl
lea
movsl
movsl
movsl
mov
mov
push
movsl
mov
push
lea
push
push
mov
call
mov
pop
pop
call
leave
ret
mov
push
mov
mov
pushl
mov
push
pushl
call
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
jmp
push
mov
sub
push
push
xor
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
add
xor
add
incl
mov
push
mov
call
mov
mov
mov
xor
mov
div
mov
mov
mov
not
add
mov
sub
xor
mov
mov
add
inc
cmpl
jb
testl
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
push
mov
push
call
mov
mov
add
mov
add
test
je
andl
mov
sub
add
mov
mov
mov
mov
add
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
mov
add
lea
add
cmpl
je
or
sub
mov
mov
sub
lea
add
mov
mov
mov
mov
add
push
push
push
call
mov
push
mov
call
xor
pop
inc
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
mov
push
mov
push
rol
push
mov
test
je
mov
jmp
push
call
mov
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
pushl
call
push
push
push
pushl
call
mov
mov
lea
mov
lea
add
add
mov
pushl
mov
mov
call
pushl
mov
mov
call
pushl
mov
lea
mov
call
mov
add
lea
mov
pushl
and
pushl
push
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
sub
mov
add
mov
sub
mov
je
mov
test
je
push
mov
add
test
jbe
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
add
addl
decl
jne
mov
test
ja
pop
pop
pop
xor
inc
leave
ret
jmp
cmpsl
pop
jns
xchg
push
jge
sbb
rolb
test
pushf
mov
leave
iret
stos
cmc
test
negl
push
lcall
or
movsl
or
stos
mov
rcrl
cmpsl
sahf
outsl
movsb
popa
outsb
pop
cmc
ret
fldcw
jns
xchg
push
jge
sbb
rclb
test
pushf
mov
leave
iret
stos
cmc
test
negl
mov
pmullw
and
or
aad
mov
adc
sbb
push
test
mov
js
dec
aad
xchg
fxam
dec
cld
int
insb
push
loop
es
fidivs
or
xor
pop
sub
jecxz
mov
in
clc
mov
out
add
sub
mov
imul
mov
dec
call
xchg
sub
test
push
bound
inc
imul
add
add
ljmp
jno
cli
out
or
mov
sahf
in
test
mov
daa
pop
fcomp
aas
out
stos
in
xchg
mov
loop
test
sbb
inc
adc
ja
push
cwtd
ja
jb
filds
out
push
pop
push
jmp
aas
in
mov
inc
push
loopne
sbb
insb
lcall
repnz
add
xchg
daa
dec
pop
push
add
xchg
subb
lock
pop
mov
shlb
call
mov
or
clc
mov
push
ret
out
icebp
push
mov
xor
mov
lods
and
xorl
push
jmp
fdivp
cmc
sbb
outsl
push
cltd
bound
out
clc
ljmp
loop
testl
divl
cmp
mov
sbb
imul
add
add
add
xor
pop
repnz
xchg
icebp
xor
xor
popl
mov
cwtl
shlb
int
aam
xor
pop
cmp
or
cmp
mov
aam
das
mov
arpl
call
dec
dec
lea
and
push
xor
dec
into
insb
fistl
lock
sub
in
fisubs
xchg
jecxz
push
shll
bnd
mov
jns
mov
dec
and
add
ret
mov
mov
pop
dec
dec
mov
add
ja
mov
mov
shrb
int3
mov
jmp
jmp
testb
jle
push
adc
lods
push
mov
js
mov
icebp
pop
fidivs
in
std
mov
inc
sub
push
out
add
notl
pop
cmp
out
jp
sbb
add
add
add
stc
out
clc
repz
pop
xor
aad
ljmp
dec
jns
rclb
sbb
adc
cld
popa
testb
sbb
jp
mov
imul
mov
jmp
push
adc
das
fisubrl
jle
jae
pop
pop
add
sub
stos
je
cmp
inc
rcrb
mov
or
lret
cmc
cli
scas
sub
scas
int
shll
adc
sub
pusha
adc
mov
shl
mov
jb
sub
dec
inc
mov
or
ds
sbb
xchg
push
mov
xor
mov
inc
test
out
mov
mov
sbb
cmpsb
xchg
mov
aad
fdivl
mov
and
xor
hlt
jnp
push
into
gs
xchg
ret
aas
dec
mov
scas
mov
cld
mov
and
lods
cltd
insl
cmp
cmp
in
inc
sahf
or
andb
int3
fs
sarl
les
lds
je
shll
mov
mov
mov
dec
xor
es
lahf
popa
mov
fdivl
xor
sbb
arpl
loopne
js
jp
aad
cmp
xor
fsubl
add
sbb
jecxz
dec
sub
orb
xor
xchg
and
add
test
mov
fs
jns
cs
sub
pop
shl
pop
add
dec
pushf
ds
jb
in
mov
add
cmp
push
mov
mov
stc
imul
std
pusha
mov
arpl
stos
push
rorb
negb
jo
dec
jno
jmp
add
xchg
lock
jle
xor
fcompl
outsl
inc
notb
sub
rol
bound
mov
or
jecxz
mov
jb
sub
add
jge
bound
bound
fistl
leave
inc
pop
call
mov
cmp
push
test
jg
pusha
pop
je
pop
xor
aam
lods
and
and
add
add
add
add
add
jl
in
jno
cmc
xchg
mov
cmp
popa
xchg
jmp
pop
out
dec
js
lret
loopne
in
and
lea
jge
sbb
jge
push
or
mov
loop
repnz
xlat
lcall
sar
or
lret
mov
adc
cmpsl
jnp
sti
rorl
cmp
xor
bound
jmp
leave
xlat
imul
add
add
add
inc
das
cmc
rorl
out
xor
das
pop
lcall
jns
push
ffreep
das
lods
or
mov
into
jp
adc
es
push
popa
fstpl
inc
clc
jne
addr16
fsubr
test
nop
dec
sbb
jne
stc
roll
adc
ljmp
inc
lret
adc
mov
sti
stos
jmp
xchg
repz
mov
xor
sahf
movsb
flds
add
enter
mov
mov
mov
add
xor
test
mov
leave
daa
add
jb
cld
adc
push
bound
dec
rcrl
jbe
stos
push
in
pop
sbb
fisubrl
aas
ftst
push
popf
push
mov
aaa
mov
jmp
jge
inc
inc
scas
popf
sar
les
or
fisttpll
inc
dec
xchg
mov
flds
mov
sub
add
mov
mov
incl
imul
inc
pop
xchg
sti
lds
in
lcall
push
inc
in
xchg
jno
shrb
pushf
sbb
faddl
dec
je
xor
sub
sbb
push
rorb
inc
mov
push
cs
pop
mov
lds
ret
lea
jbe
mov
push
mov
dec
xlat
ljmp
jo
add
add
push
out
mov
add
mov
add
sub
jp
imul
pop
jle
jl
sbb
jnp
dec
mov
xor
adc
pushf
and
and
lock
jp
mov
adc
das
sbb
test
mov
stos
stos
outsb
mov
movsl
or
into
dec
incl
cmpsl
jl
sbbb
add
ror
imul
add
in
int3
push
mov
lret
jp
inc
xchg
mov
fnstcw
sar
xchg
enter
cltd
lret
mov
das
test
mov
cmp
sub
lret
lcall
mov
orb
cmc
jp
xor
clc
lcall
std
xor
out
cld
rclb
mov
cwtl
test
setno
sub
sbb
pop
dec
jae
cmpsb
test
mov
aad
pop
and
dec
and
sbb
jl
sbb
shll
lock
sahf
sub
ficompl
cwtl
mov
arpl
xchg
movb
es
push
sub
iret
add
and
push
shr
int3
cmp
sub
arpl
add
js
add
gs
add
mov
pop
clc
and
mov
gs
adc
xorb
lock
mov
sub
mov
push
pop
and
mov
hlt
negl
xor
rorl
mov
sbb
inc
xor
test
imul
and
dec
pop
jmp
and
sbb
out
sub
push
jecxz
jl
mov
add
movsb
sbb
mov
pop
or
in
cmp
iret
and
movsl
xor
lea
scas
and
or
push
loopne
mov
popa
xor
cmpsb
outsl
popf
int
cmp
push
cmc
pop
and
fstpt
pop
enter
js
inc
xchg
xchg
xor
lret
lods
and
fmuls
inc
pop
cmp
test
dec
sub
cmp
cmp
or
jb
and
add
add
rcrb
xorb
aam
push
testb
fs
push
mov
push
mov
xor
pop
dec
jb
add
sahf
scas
lret
lahf
stos
pushf
xor
mov
rclb
inc
mov
cmp
inc
cmp
mov
lds
jnp
loope
js
mov
adc
ja
push
js
movsb
xor
pop
pop
and
pushf
mov
xchg
insl
jns
jmp
ret
jnp
push
roll
or
xchg
push
mov
sbb
cmp
fwait
and
mov
dec
aaa
cmp
les
jp
push
mov
inc
int
cmp
xor
outsl
adc
dec
jecxz
xor
pop
rorl
push
push
in
sub
ret
pop
mov
scas
push
add
daa
scas
mov
push
movsb
xchg
test
add
dec
xor
pop
subb
lret
aaa
mov
cltd
cmpsl
push
fistps
pop
add
add
movsl
enter
rol
sbb
mov
cwtl
push
gs
adc
xor
jle
testl
test
sahf
dec
mov
cs
dec
cltd
sbb
enter
jp
xor
mov
inc
shrb
add
cmp
mull
scas
nop
fwait
push
xchg
xchg
bound
push
pop
cmc
lcall
mov
andl
mov
movsl
add
pop
js,pn
jnp
pusha
add
add
xchg
ret
aas
sub
ficomps
decl
data16
popa
mov
icebp
sub
repz
popa
popl
lcall
pusha
inc
shll
cmp
fisttpll
mov
lcall
dec
push
shlb
je
pop
adc
mov
jo
inc
imul
clc
dec
insb
inc
jp
ja
push
or
jg
cmp
add
add
add
enter
out
insb
out
subb
rcrw
hlt
dec
mov
std
mov
popf
pop
cmpsb
add
inc
cmpsl
pop
inc
imul
icebp
divb
dec
pop
adc
mov
repnz
mov
xchg
pushf
jg
xchg
mov
push
shlb
out
xor
cld
dec
xchg
data16
imul
cmpsl
js
mov
add
inc
cli
and
push
cmpsl
stc
pop
jb
dec
mov
rolb
outsb
aam
xchg
fwait
rcrl
out
std
loop
and
jne
jge
cmp
outsb
lods
gs
sub
xchg
add
sub
pop
and
loope
dec
jecxz
mov
in
test
jge
jecxz
xchg
sahf
jae
pop
fildll
xor
leave
dec
inc
xor
dec
movsb
ret
gs
add
cli
mov
add
outsl
pushf
addr16
sahf
jbe
sti
stc
ret
mov
adc
dec
and
js
add
jb
loope
add
cmpsb
das
mov
mov
test
cmpsl
testb
sbb
sub
decb
out
scas
inc
push
icebp
or
fistps
or
sub
push
cmpsl
xor
lret
pushf
pop
mov
in
mov
xor
repz
dec
lods
lahf
or
dec
pop
aaa
jo
test
cltd
mov
add
add
arpl
inc
aaa
fbstp
add
mov
mov
mov
and
xor
loope
or
cmpsb
call
mov
movsb
inc
testb
in
cld
test
inc
and
sbb
popf
lea
int
sub
int
rclb
push
pop
push
std
jb
jbe
xor
push
xor
fisttps
cmp
loope
xor
jmp
and
loopne
inc
sub
dec
insb
inc
ss
das
xlat
mov
data16
pop
repz
sbb
data16
add
mov
inc
cs
mov
mov
nop
testb
fimull
adc
mov
add
push
jns
data16
ret
pop
rorb
insl
jp
cli
xchg
fimuls
shll
lods
add
jg
fcmovnb
test
mov
gs
sub
lret
push
cmc
bnd
sub
xor
movsb
dec
call
cmp
push
mov
dec
jmp
scas
xchg
sti
fsubrl
in
sti
mov
mov
push
lods
xlat
jbe
and
call
mov
dec
popa
in
mov
push
in
adc
pop
in
cmp
mov
pop
jne
rolb
mov
fbstp
mov
fidivrl
arpl
adc
push
jo
pop
jmp
mov
ret
cltd
push
add
stc
insl
cwtl
gs
and
mov
inc
add
add
pop
shlb
mov
cmpsl
fs
ljmp
mov
jg
push
and
cmp
push
insl
pushf
adc
insl
int
outsb
xor
jmp
dec
insl
cs
inc
sbb
pop
subl
mov
mov
int3
xlat
mov
dec
test
outsl
sbb
dec
jle
outsb
cmp
lods
mov
sbb
out
adc
icebp
jg
push
sbb
push
mov
les
clc
arpl
adc
std
jne
sub
lret
pop
and
add
shrl
das
cld
fdivr
jle
lret
xor
stos
dec
lods
ret
cmp
push
roll
fdivr
add
cmp
mov
daa
addr16
inc
jne
add
mov
popf
in
lea
adc
xchg
aam
test
ss
jl
aas
push
scas
mov
mov
mov
lret
mov
push
hlt
sub
roll
add
inc
add
lea
sbb
xchg
test
xchg
gs
mov
adc
pop
cmp
stc
add
or
insb
adc
mov
js
in
inc
fidivl
movsl
out
jns
mov
cwtl
mov
ds
test
inc
jmp
fwait
out
cltd
sbb
mov
dec
fcompl
ds
scas
outsl
xor
push
adc
nop
arpl
mov
dec
imul
mov
lock
push
xchg
adc
cmpsb
mov
add
scas
stc
arpl
inc
je
cmp
lea
les
jmp
fildl
and
ret
popf
sbb
pop
adc
adc
mov
fisttps
mov
data16
movsb
in
push
call
cmpsb
cwtl
pop
es
mov
in
lret
call
mov
pop
inc
mov
jle
jnp
pushl
dec
push
test
out
sbb
jle
and
inc
sbbb
icebp
or
arpl
in
xor
inc
pop
dec
sbb
lea
add
inc
icebp
jecxz
addl
mov
fbld
mov
call
xor
aad
loopne
stos
ljmp
jg
subb
popa
xor
jo
push
test
stc
in
bound
or
or
cmp
movb
push
adc
sarb
xor
sub
mov
sarl
fbld
subb
mov
add
rclb
adc
lods
loopne
xchg
or
push
cwtl
in
mov
jne
xchg
cwtl
jecxz
je
popf
mov
mov
fs
and
xor
out
mov
movsl
clc
xorl
fstl
les
jg
imul
aam
or
sti
push
fdivrl
leave
cwtl
sbb
andb
adc
push
call
add
test
dec
adc
and
add
sub
jnp
xor
push
mov
add
ret
push
leave
fisubrs
pushw
cmp
and
dec
mov
popf
adc
or
cmpsl
out
and
sbb
mov
pusha
mov
sarb
mov
jge
lret
adc
mov
sahf
dec
or
jnp
test
hlt
or
xchg
ja
test
dec
xor
ja
leave
dec
pop
ds
mov
xchg
fsts
testl
add
add
add
add
bound
outsl
and
pop
shlb
jl
fidivs
jns
or
stc
je
xor
xchg
popa
sbb
pop
pop
es
or
mov
pop
inc
sbb
cld
rcll
adc
mov
test
int
lahf
push
rcll
dec
mov
push
adc
lea
jns
vandps
jmp
mov
cmp
addb
add
add
addr16
sub
mov
pop
adc
mov
sub
sub
xlat
xor
xor
xor
rorl
xor
sbb
ss
mov
out
mov
and
out
repnz
into
and
and
xchg
push
cmpsb
jmp
lret
mov
lods
outsl
je
push
inc
jae
ret
aam
sbb
loopew
cmp
dec
adc
outsb
mov
add
add
cltd
jbe
adc
arpl
or
add
sub
loope
nop
pop
fdivp
rcrl
lds
cmp
test
push
inc
jmp
sub
rorl
inc
mov
mov
ja
jg
inc
int
ret
dec
xchg
aaa
mov
xchg
mov
fimull
mov
sarl
jbe
xlat
stc
repz
cltd
jb
scas
xchg
fsubp
fwait
repz
add
mov
mov
popf
mov
jmp
dec
push
es
pop
shll
add
sub
fwait
popa
outsl
data16
and
jmp
das
insb
xchg
into
lcall
adc
dec
cmp
xor
popf
mov
jbe
mov
stos
cmp
clc
mov
mov
mov
push
call
add
add
add
adc
pop
int3
cmp
mov
sbb
inc
push
inc
jp
lea
lds
mov
mov
aad
cwtl
and
adc
mov
mov
jo
cmp
mov
jbe
jg
mov
js
in
scas
jp
lcall
or
sbb
lods
lds
fsubl
int3
dec
push
lret
imul
out
add
push
lock
fs
and
push
inc
cld
pop
xor
pop
pop
int3
xchg
or
add
pop
or
loope
bound
mov
jae
or
sub
cltd
jae
movsb
std
sbb
push
cmpsb
stc
inc
push
pop
inc
xor
jo
dec
pop
aas
xchg
sub
sahf
jo
into
xchg
fnsave
dec
inc
add
jnp
loope
cmp
loope
xor
leave
add
or
sbb
pusha
or
mov
lock
pop
xchg
std
cmpsb
ss
pop
pop
out
mov
xor
dec
jge
pop
push
adc
cmp
xchg
mov
pop
les
inc
test
jbe
fidivrl
loopne
mov
dec
sbb
mov
leave
sub
xchg
fcompl
pop
mov
lahf
push
mov
lock
imul
gs
jecxz
sahf
mov
push
data16
mov
lock
pushf
xor
xchg
outsl
push
pop
mov
das
imul
sub
in
mov
icebp
rcl
xor
push
add
mov
sub
xchg
fcomi
movsb
mov
fs
xor
jmp
fdivr
fstps
test
push
repz
jle
daa
int3
add
mov
pusha
jmp
jl
dec
fistpl
add
add
jns
dec
dec
ffree
loopne
pushf
outsl
inc
out
ss
jge
lea
into
adc
lea
mov
sub
push
test
sub
mov
inc
ljmp
imul
inc
jne
into
mov
imul
xor
or
xchg
ja
cmp
jno
mov
cmp
test
fiaddl
clc
sub
add
out
mov
sub
xor
mov
cmp
push
pop
ret
mov
dec
xor
push
push
pop
jg
xchg
pop
popf
gs
pop
mov
je
dec
push
in
stc
and
xchg
int3
pop
mov
inc
leave
dec
adc
out
sub
les
arpl
inc
xchg
cli
sub
sub
or
jmp
sar
xchg
and
fisubl
dec
popa
add
add
imul
mov
jae
cltd
mov
iret
js
pop
and
cmp
dec
out
cmp
lods
in
xchg
inc
movsb
mov
lods
lret
repnz
fsts
imul
int3
and
dec
push
mov
jge
sub
jge
aas
sbbb
pusha
dec
dec
iret
sub
pop
loopne
enter
bound
iret
push
add
notb
les
push
add
int3
hlt
std
sub
jecxz
mov
sti
cmp
repnz
loope
jns
dec
pop
cli
bound
mov
out
and
das
mov
shrb
icebp
mov
into
cmpsb
loopne
clc
aaa
dec
mov
cmp
dec
inc
fsubr
orb
jle
jns
imul
pop
sbb
imul
jno
lds
add
loop
iret
out
and
in
dec
testb
lods
cmp
clc
aam
mov
add
inc
xlat
cmp
push
es
lds
fnstsw
outsl
add
mov
mov
jle
xchg
cmc
push
dec
imul
xor
fcmovb
push
out
test
cli
fistpll
jbe
mov
or
loope
ret
int
mov
mov
idivb
jecxz
dec
add
add
scas
xchg
and
mov
sbb
shl
rorb
sbb
shll
mov
dec
inc
adc
push
inc
sub
push
push
cwtl
mov
lock
daa
fs
push
movsl
shrl
mov
loop,pt
shlb
aad
and
fnstenv
outsl
and
leave
sbb
lods
js
loop
mov
movsb
add
cmc
and
in
addr16
fstpt
jg
insl
inc
test
cmc
jno
xchg
mov
add
add
add
add
lock
jmp
dec
push
mov
fnstcw
mov
out
mov
dec
daa
scas
int3
push
fcomps
dec
ja
jne
xchg
mov
pushf
pop
dec
mov
das
clc
and
pushf
inc
cld
and
addr16
jge
and
in
push
adc
push
lods
xchg
add
test
fisttps
out
sub
jmp
dec
test
or
adc
jns
add
fidivrs
pop
mov
sbb
xorl
pop
movsl
nop
xlat
dec
clc
xor
sub
out
ljmp
push
jge
mov
andb
movsl
ret
mov
mov
pop
adc
es
loope
jle
das
pop
shll
sub
cmp
icebp
frstor
dec
inc
das
push
xchg
test
inc
in
mov
lds
das
imulb
test
add
sbb
mov
push
dec
lret
sti
pop
stos
lret
dec
jne
mov
lock
cli
xor
fwait
inc
fwait
push
ret
imul
loope
xchg
adc
fldenv
pop
int
sbb
lock
or
jae
cmp
mov
cmp
arpl
ja
adc
into
push
int3
or
push
mov
addb
adc
jne
dec
das
pop
cld
negb
in
outsb
mov
add
ljmp
rorb
sbb
jnp
mov
dec
add
mov
xchg
add
xchg
mov
add
imul
loop
fbstp
jbe
dec
pop
notl
lock
das
scas
insl
cmp
inc
inc
mov
in
dec
fstpt
scas
dec
or
fsubs
mov
sbb
lret
xchg
je
lcall
bnd
out
lds
add
add
and
mov
aaa
xchg
cmp
sahf
sub
pop
cmc
iret
mov
jle
xor
pop
dec
fwait
mov
loopne
jmp
or
add
insl
cmp
cltd
pop
lea
and
test
mov
push
icebp
hlt
decb
lds
adc
sub
ss
out
nop
mov
sub
mov
sub
xor
push
fiaddl
add
mov
pop
xor
imul
outsb
sarl
movsl
and
sbb
mov
mov
xor
div
sahf
cmp
insb
cmpsb
add
das
les
imul
jo
cmpb
pop
and
xchg
insl
adc
into
push
aaa
cwtl
jnp
ret
fidivrs
mov
jecxz
sub
das
into
out
add
cmp
adc
push
nop
sub
mov
sbb
mov
mov
negl
add
mov
roll
loopne
cmpsl
fidivrs
repnz
jecxz
and
int3
inc
mov
add
fldl
xchg
xor
dec
add
push
cmp
cmpsl
jmp
ret
inc
pop
dec
add
sbb
inc
cmp
inc
inc
push
push
mov
add
add
add
iret
mov
lds
mov
sub
pop
jae
hlt
push
push
call
cmpsb
fmuls
shlb
xor
and
popa
jmp
repnz
push
inc
and
lret
out
cmp
sub
lds
sub
iret
pop
jmp
movsb
std
aam
fidivrl
stos
mov
push
mov
dec
sbb
push
shrb
andb
push
xor
int3
insl
cmp
sub
test
iret
inc
jl
cmpsb
imul
add
add
add
add
out
mov
mov
lock
push
lret
pop
adc
repnz
inc
ljmp
aaa
mov
xchg
or
rcll
fcmovu
sbb
lret
inc
push
aaa
fiaddl
adc
scas
adc
xchg
es
mov
ret
sbb
pusha
cltd
fs
jmp
jl
jne
jae
repnz
outsb
movsb
pmulhuw
je,pt
pop
outsb
test
add
push
cmpsb
out
aad
mov
mov
pop
add
cmp
mov
pop
cmp
adc
dec
or
fcmovu
mov
add
mov
push
cmp
fnstsw
test
call
jnp
insb
out
lods
dec
mov
test
jmp
enter
jmp
pop
js
lcall
adc
popf
dec
fwait
dec
call
and
mov
inc
dec
adc
sbb
mov
les
xchg
push
mov
add
jmp
mov
mov
xor
scas
fbstp
sbb
loop
arpl
mov
test
xchg
loopne
sub
je
inc
xchg
push
mov
jecxz
in
sub
cli
inc
add
int
int
adcb
outsb
adc
cmp
addr16
jb
sbb
pmaxub
xor
fstpt
jg
inc
add
scas
out
xor
data16
pushf
sub
inc
inc
ss
xor
icebp
xchg
pop
fxch
jo
jnp
cmpsl
pop
xchg
push
sub
loop
or
mov
or
pop
fistl
cmc
bound
mov
pop
cli
fwait
dec
jb
or
sti
push
out
dec
or
jo
sbb
and
call
jg
jmp
mov
jge
jle
insl
mov
dec
pop
shll
fisubrs
aas
mov
int
dec
movb
mov
int3
add
add
push
sbb
cld
pop
mov
bound
movsb
inc
add
inc
ss
or
mov
cli
inc
stos
sbb
jp
pushf
sbb
pop
std
shrl
cwtl
push
andb
adc
or
lret
mov
repz
jecxz
jle
cmc
gs
mov
jge
sub
in
fcoms
mov
sbb
add
bound
div
shll
sbb
mov
add
loopne
pusha
popa
lock
test
gs
sarl
hlt
icebp
psadbw
mov
not
jns,pt
mov
cmc
inc
or
std
mov
and
lret
sub
add
sahf
jge
jo
mov
scas
lahf
stos
add
mov
pop
imulb
test
fsts
sub
mov
push
push
sbb
xchg
xchg
xor
repz
xor
dec
cmp
arpl
push
jnp
xchg
add
add
add
cs
sub
push
int3
roll
daa
test
sub
mov
lods
loop
stos
pop
push
push
push
push
sbb
xchg
xchg
cmp
addr16
sub
popf
push
or
rcll
ss
int3
adc
and
jbe
mov
xchg
fstpl
das
mov
adcb
cli
cmpl
inc
pop
arpl
xor
lret
into
xchg
add
pop
inc
frstor
cld
jg
int
ret
in
push
mov
or
sub
add
out
and
outsb
adc
adc
subl
rclb
sbbb
es
in
call
mov
sub
push
out
mov
mov
push
rcrl
std
in
push
inc
insb
int
dec
xchg
jno
cmp
mov
test
cmp
rol
xchg
notl
push
jecxz
aas
mov
aaa
jle
dec
ret
stos
xor
sub
cmc
pop
rolb
jno
cltd
jne
fucomp
mov
and
push
cmpsb
mov
push
pop
jg
sbb
and
imul
orb
mov
and
jne
ret
sti
push
xchg
jg
pop
mov
fimuls
dec
cltd
pop
scas
addr16
dec
into
xchg
push
jnp
data16
mov
mov
repz
mov
into
lahf
add
movsl
pop
add
jge
adc
mov
mov
lcall
jnp
cs
add
idivl
shll
xchg
mov
dec
rorb
mov
cmp
xchg
or
push
test
add
mov
fcompl
lret
popa
xor
sahf
lea
pop
cmp
insb
push
jle
pop
adc
hlt
fcom
push
sbb
js
add
push
pop
int3
and
lods
dec
into
jno
aad
mov
icebp
add
pop
mov
insl
add
adc
leave
mov
mov
int
add
cs
mov
aam
push
fistpl
inc
pop
icebp
loop
movsb
and
loop
jb
xor
and
pop
sub
cs
mov
push
xchg
sbb
pop
mov
xchg
sti
xor
sbb
adc
mov
push
sti
push
add
dec
or
andl
mov
movsb
imul
add
imul
inc
adc
mov
xor
cli
jp
lahf
sahf
nop
adc
jle
pop
sbb
std
rol
add
fwait
mov
mov
aam
loop
dec
lods
cmp
xor
push
mov
push
nop
mov
jp
sar
in
sbb
mov
mov
lods
mov
mov
cmp
mov
testb
in
sbb
push
push
je
daa
mov
in
jmp
push
xchg
iret
add
pop
push
push
sbb
push
fsubrs
arpl
add
mov
jp
js
cmp
push
subb
and
int3
dec
ret
lea
addr16
es
cmp
addr16
add
pop
lret
or
in
cltd
mov
adc
stos
jge
push
aaa
add
add
das
popa
js
out
pinsrw
sbb
jno
sarl
push
push
inc
in
ret
or
mov
inc
add
lods
orb
inc
popa
pop
leave
add
es
mov
nop
jle
adc
xor
xchg
sti
outsl
and
cwtl
dec
cmpsl
push
loop
in
mov
cs
inc
mov
inc
mov
jp
push
mov
mov
inc
pushf
fistl
cmc
int3
xor
pop
sahf
sbb
std
pushf
or
push
div
in
dec
add
adc
cltd
jp
and
pop
cmp
or
sti
inc
stos
xor
clc
xor
mov
test
les
jns
outsb
add
cwtl
dec
jl
xchg
jns
lcall
dec
add
pop
and
xchg
pop
mov
cmc
xchg
int
add
xchg
push
outsl
repz
lods
popa
stc
cs
mov
enter
mov
aad
jnp
es
lahf
push
jp
out
fldl
jle
cmc
pop
pusha
pop
loopne
lahf
ljmp
pushf
imull
lock
push
pop
insb
daa
push
add
loope
movb
adc
imul
bound
mov
add
jge
popf
xor
xchg
xor
data16
xchg
jge
sub
inc
mov
cmpsl
jne
ret
pop
imul
add
sbb
sub
shl
or
or
inc
xchg
rcll
fmuls
stos
decb
jge
sbb
bound
repz
mov
cmpb
jmp
fstl
loope
cmp
sub
and
push
cmp
stc
mov
mov
jns
inc
fwait
sti
imul
jge
es
pop
inc
pop
xchg
lea
test
add
add
add
lret
arpl
int3
xchg
xor
inc
outsl
jne
cmp
adc
mov
jae
or
ss
mov
mov
pusha
loope
adc
adc
sbb
and
in
jecxz
mov
xorb
les
jg
imul
xlat
mulb
repz
dec
xchg
out
js
test
fs
jbe
flds
xchg
dec
in
xchg
das
push
ljmp
fwait
mov
add
stc
cwtl
mov
sub
xlat
xchg
xlat
stos
jg
shrl
push
push
outsl
pop
mov
sahf
mov
aam
sbb
sub
jp
mov
or
lret
in
sub
inc
jo
adc
je
ret
jg
lock
cmp
xchg
mov
sbb
clc
stos
mov
andb
scas
mov
and
pop
jbe
cmp
subl
aad
push
cmp
jg
adc
fdivrs
add
add
add
add
dec
out
test
xorl
popf
popf
sbbb
movsb
fcmovbe
cwtl
lcall
bound
lcall
push
les
mov
lock
xchg
shrl
xor
sahf
addr16
adc
mov
aam
and
repnz
sbb
add
inc
or
pusha
dec
xchg
dec
adcb
lcall
pop
adc
sub
fstl
push
xchg
data16
repz
add
add
add
add
out
loope
test
mov
bound
outsb
imul
push
cmp
fsubs
pop
mov
cmpb
mov
cmp
sbb
lret
dec
jns
pop
scas
or
xlat
divb
xor
rolb
ret
frstor
pop
xor
addr16
mov
repnz
jbe
outsl
gs
inc
call
and
mov
jae
push
add
add
dec
dec
sbb
call
and
and
mov
xchg
movb
or
jns
les
or
outsl
add
inc
inc
mov
cmp
mov
xchg
and
cli
popf
jg
int3
adcl
lock
sbb
repnz
jge
jo
and
xchg
sbb
push
xor
das
xor
in
rorl
xchg
leave
and
je
sbb
add
push
fwait
add
ss
xor
mov
je
stos
jns
jno
push
jnp
jnp
ss
call
out
mov
fmuls
stos
jmp
fwait
inc
xchg
fstps
andl
enter
out
adc
cmp
inc
mov
pop
aaa
in
mov
jle
xchg
mov
dec
or
shll
popf
ret
orl
stc
es
sbb
inc
popf
push
fbstp
jbe
fmull
je
jmp
sbb
add
sbb
inc
push
pusha
out
lret
pushf
shlb
aam
idivb
rcrb
and
and
inc
sub
cld
cmp
pop
addr16
mov
xchg
jno
test
sbb
xchg
fistpl
loopne
mov
mov
adc
inc
les
aas
imul
xor
lods
add
outsl
pop
pop
adc
mov
adc
add
add
mov
push
aam
push
or
jno
cltd
jbe
mov
inc
dec
stos
dec
jp
xor
mov
add
jno
cmp
sbb
fs
icebp
sbb
xor
push
push
gs
movsl
loope
and
mov
push
imul
mov
jmp
pop
mov
mov
cwtl
sbbl
or
outsb
and
pop
fnstcw
nop
sti
or
dec
add
add
icebp
inc
mov
test
daa
push
and
subb
dec
int
das
cld
dec
mov
push
fcom
ds
in
add
jle
inc
jle
sbbb
push
enter
dec
add
addr16
inc
mov
sub
mov
pusha
dec
xor
cmpsl
pop
ret
fwait
pop
sub
icebp
insb
int3
shll
aam
and
inc
subl
mov
adc
push
xor
aaa
push
cs
imul
add
add
ss
arpl
push
pop
js
mov
and
clc
pushf
push
push
mov
int
dec
add
in
ret
mov
and
test
ficoml
or
jb
test
jne
popf
movsb
mov
cmp
fidivl
push
xchg
or
mov
or
pop
sub
xor
das
inc
sarb
sbb
cwtl
pushf
sbb
mov
out
pop
mov
mov
xor
ds
mov
and
ret
daa
scas
and
mov
xor
jp
mov
cli
dec
and
pusha
lock
xlat
and
inc
popa
scas
mov
pop
ljmp
pop
xor
data16
repnz
push
and
stc
xor
pop
sbb
and
cmp
imul
popa
push
shlb
dec
mov
fbld
push
dec
push
sub
mov
pushf
xchg
push
jmp
jb
mov
add
mulb
mov
mov
fistl
adc
mov
mov
sbb
scas
mov
pop
popa
in
mov
jmp
call
jae
cmp
cmpsb
cwtl
outsl
repnz
sub
repnz
mov
aaa
std
and
mov
add
lahf
dec
push
add
add
add
add
add
out
mov
adc
adc
and
pusha
mov
test
fiaddl
bound
hlt
test
cli
out
and
movsb
outsl
shrl
aad
jmp
inc
xchg
xchg
out
insb
vmovdqu
add
inc
mulw
jp
leave
out
cmpsl
mov
leave
mov
jl
xor
pop
xor
les
inc
arpl
add
add
add
mov
out
jo
jnp
mov
iret
cmp
imul
fs
out
push
imul
imul
xchg
sbb
icebp
fsts
inc
stos
out
call
mov
mov
adc
jbe
mov
lret
adc
jo
add
or
aad
push
icebp
dec
xlat
lock
inc
mov
aaa
and
or
pop
jnp
pushf
mov
or
ret
in
int3
mov
jmp
lret
test
add
add
lods
insb
movsb
pop
jp
dec
mov
mov
loope
adc
sbb
jns
ja
sbb
pop
test
dec
mov
loope
int
orl
and
jge
lahf
xchg
pop
call
stos
sub
lahf
lahf
lcall
pusha
dec
lahf
xchg
test
xor
xchg
out
xchg
lea
les
out
outsl
sub
dec
ja
roll
notb
mov
add
and
jmp
repnz
cmp
sub
pop
lods
lods
out
pop
pusha
lret
frstor
sbb
sub
gs
push
std
add
adc
ja
jno
test
mov
stos
rorb
lea
mov
pop
fldt
jle
sub
mov
lcall
push
mov
movsl
jae
push
lahf
and
xchg
shrl
xchg
xor
movsb
imul
les
push
ret
inc
lock
call
ret
push
lahf
xchg
push
imul
fstpl
out
adc
jo
pop
push
shlb
sub
lret
mov
jb
inc
imul
inc
test
dec
insb
vpackuswb
mov
mov
lea
sub
fwait
xor
dec
jns
iret
in
pop
dec
pushf
rorb
and
mov
mov
scas
inc
dec
lods
adc
call
scas
dec
es
dec
outsl
pushf
es
add
xlat
lret
cmp
outsb
pop
int3
adc
fs
arpl
adc
sbb
lock
in
xor
mov
test
cmp
pushf
pop
adc
jnp
repz
mov
ficoms
xchg
iret
mov
outsl
adc
adc
es
inc
cmp
sub
je
dec
int3
sbb
jmp
xchg
jecxz
mov
test
lcall
rorl
jle
dec
and
mov
xchg
push
test
inc
push
sbb
das
mov
out
fildl
push
jp
jmp
gs
and
loope
fs
sahf
stos
lret
jns
call
test
pushf
movsl
iret
mov
xchg
popa
aaa
lret
or
add
dec
insb
and
add
outsb
fucomp
mov
imull
push
mov
jmp
fisttpll
adc
cmp
pusha
gs
cmp
in
lcall
push
dec
outsb
nop
mov
ljmp
stc
fdivl
lods
dec
iret
pusha
pop
mov
fs
xchg
push
xchg
add
push
insb
jae
std
or
pop
push
push
repnz
jb
xchg
fimuls
add
int
daa
inc
or
mov
testl
cmc
xchg
stc
xchg
mov
ret
pop
pop
fstpl
pop
mov
xor
pop
scas
pop
push
dec
rcll
sbb
test
mov
xchg
jne
cmp
sahf
sub
and
test
arpl
aas
or
push
aas
sbb
pop
pusha
push
xchg
mov
adc
enter
add
sub
push
shl
in
lahf
mov
clc
stc
addr16
mov
out
adc
subl
loopne
or
addl
jno
stos
cs
cmpsb
and
xor
add
cmp
xor
sti
adc
fisttpll
adc
mov
stc
fcomip
mov
ss
addr16
insb
jmp
mov
add
jnp
add
add
fcoms
lock
cmp
int3
push
xor
pusha
fidivrs
mov
push
in
out
sub
jg
addb
pop
xchg
xchg
inc
fcomip
dec
xor
xorl
cmp
xchg
pop
fbstp
subl
push
xchg
cmp
dec
es
dec
xor
xlat
and
inc
inc
or
das
rclb
cmc
adc
add
xchg
pop
add
add
dec
test
jg
call
dec
cmpsb
in
test
mov
pop
mov
lea
lock
or
and
sub
adc
test
loope
push
ret
or
idivb
jecxz
fists
dec
or
and
xchg
stos
in
push
jp
cmp
