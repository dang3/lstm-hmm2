push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
jmp
mov
jmp
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
movsl
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
mov
nop
xorps
nop
sub
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
jmp
add
jmp
push
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
add
jmp
push
add
pop
jmp
mov
jmp
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
add
nop
xorps
nop
movl
nop
xorps
nop
xor
nop
xorps
nop
lea
nop
xorps
nop
lea
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
lea
mov
nop
xorps
nop
add
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
xor
jmp
pop
jmp
push
nop
xorps
nop
inc
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
inc
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
push
nop
xorps
nop
addl
nop
xorps
nop
mov
nop
xorps
nop
push
jmp
xor
jmp
add
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
push
nop
xorps
nop
push
jmp
mov
jmp
xor
or
nop
xorps
nop
nop
nop
xorps
nop
nop
nop
xorps
nop
cmp
nop
xorps
nop
jne
nop
xorps
nop
jmp
add
add
add
jmp
add
cmp
nop
xorps
nop
je
nop
xorps
nop
add
nop
xorps
nop
nop
nop
xorps
nop
push
nop
xorps
nop
subl
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
pop
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
jmp
mov
jmp
pushl
nop
xorps
nop
push
nop
xorps
nop
movl
nop
xorps
nop
call
nop
xorps
nop
pop
jmp
push
jmp
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
jmp
call
jmp
mov
nop
xorps
nop
add
nop
xorps
nop
xor
or
nop
xorps
nop
xor
nop
xorps
nop
sub
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
add
sub
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
push
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
pop
nop
xorps
nop
xor
nop
xorps
nop
push
nop
xorps
nop
mov
jmp
pushl
jmp
movzbl
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
add
sub
nop
xorps
nop
xor
push
add
pop
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
xor
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
inc
nop
xorps
nop
mov
nop
xorps
nop
cmp
nop
xorps
nop
jb
nop
xorps
nop
mov
nop
xorps
nop
xor
nop
xorps
nop
xor
nop
xorps
nop
pop
nop
xorps
nop
test
nop
xorps
nop
jbe
nop
xorps
nop
add
nop
xorps
nop
movzbl
jmp
inc
jmp
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
xor
or
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
dec
nop
xorps
nop
jne
nop
xorps
nop
mov
jmp
pop
jmp
test
nop
xorps
nop
jbe
nop
xorps
nop
sub
nop
xorps
nop
movzbl
nop
xorps
nop
mov
nop
xorps
nop
movzbl
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
nop
nop
xorps
nop
mov
nop
xorps
nop
mov
jmp
call
jmp
nop
nop
xorps
nop
push
add
pop
nop
xorps
nop
movzbl
nop
xorps
nop
movzbl
nop
xorps
nop
xor
nop
xorps
nop
inc
nop
xorps
nop
dec
nop
xorps
nop
jne
nop
xorps
nop
pop
nop
xorps
nop
pop
nop
xorps
nop
pop
jmp
inc
jmp
pop
nop
xorps
nop
add
nop
xorps
nop
push
nop
xorps
nop
ret
nop
xorps
nop
lea
mov
jmp
dec
jmp
mov
nop
xorps
nop
shl
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
pushl
nop
xorps
nop
push
jmp
call
jmp
xor
nop
xorps
nop
mov
nop
xorps
nop
add
nop
xorps
nop
cmp
nop
xorps
nop
je
nop
xorps
nop
sub
nop
xorps
nop
jmp
nop
xorps
nop
xor
nop
xorps
nop
xor
add
nop
xorps
nop
lea
nop
xorps
nop
lea
nop
xorps
nop
mov
nop
xorps
nop
mov
nop
xorps
nop
lea
nop
xorps
nop
add
nop
xorps
nop
push
pop
nop
xorps
nop
add
nop
xorps
nop
ret
pop
xor
sbb
mov
adc
fimuls
in
pop
jmp
fildl
xchg
sar
dec
xchg
loopne
lock
arpl
xchg
dec
cwtl
sub
push
adc
mov
ljmp
out
mov
sub
push
jb
or
bound
push
sbb
lods
xor
jecxz
popa
loope
fstpt
mov
push
adc
int3
das
cmp
and
outsl
sub
aam
cmp
mov
mov
adc
inc
stos
js
mov
inc
insl
stos
and
stos
mov
or
in
sbb
enter
lret
push
inc
push
mov
test
dec
jp
repz
cmp
imul
fisubrs
sbb
sbbb
shll
lea
fwait
test
repnz
loope
cmc
rorb
push
out
jecxz
fldt
adc
mov
idiv
xchg
push
cmp
int3
pop
add
inc
mov
jecxz
mov
sahf
leave
mov
in
mov
cmp
dec
add
pop
mov
cld
ja
jno
cmpsb
mov
push
ret
mull
push
lds
fisubrl
lret
cld
cltd
mov
sbb
or
fcompl
movsl
cltd
xor
cmp
jb
outsl
mov
int
fidivs
fld
pop
pop
push
cmpsl
dec
icebp
loop
mov
pop
or
fs
mov
insl
out
add
shll
scas
pushf
and
mov
add
dec
popf
mov
enter
and
pusha
scas
pmaddwd
pop
xchg
pop
or
cltd
and
mov
loope
in
sahf
dec
jns
scas
push
sbb
push
aad
shl
cmp
jl
add
jb
aad
jnp
or
push
mov
js
inc
adc
adc
loopne
adc
or
push
test
cmp
rorb
sbb
int
ljmp
push
data16
mov
xchg
ljmp
popa
jo
mov
negl
and
outsl
sub
cmp
sub
insl
sub
or
decl
pop
mov
jb
fsubrl
out
loop
jae
jg
repz
adc
fcmovbe
pop
ficompl
or
push
add
outsl
mov
pop
cmp
out
sarl
in
js
cltd
hlt
fucom
sar
mov
mov
jg
push
xchg
sbb
push
add
push
xor
fcmovb
int3
ljmp
mov
cwtl
mov
lds
xchg
je
andb
cmpl
ljmp
push
lret
pop
mov
movsb
or
dec
fildll
jg
lock
sbbb
jnp
aam
nop
sub
and
fsubs
ss
ljmp
mov
ret
inc
inc
std
enter
inc
rorb
jmp
jnp
or
mov
addr16
cmpb
and
lods
repz
jge
lods
add
cli
xor
sbbb
popa
idivb
sbb
movsl
mov
cwtl
xchg
pop
test
popf
push
imul
mov
inc
pusha
xchg
mov
out
insb
popa
les
in
pop
xchg
and
insl
nop
push
cmp
shl
lret
jge
add
and
sarl
dec
add
enter
in
fnstenv
xchg
jp
call
pushf
leave
clc
mov
shl
aad
jae
testb
mulb
cmp
ja
push
push
mov
in
mov
out
jp
scas
add
roll
xor
cs
sbbb
inc
in
imul
test
jmp
adc
das
mov
arpl
dec
cltd
inc
adc
sbb
xchg
ret
jg
out
jmp
fsubr
xorb
fsubrl
clc
andl
mulb
lods
sbb
jecxz
aas
push
cmc
fwait
insb
cmp
cmp
mov
sti
mov
xchg
sahf
push
add
cmp
pushf
and
shl
cs
mov
xchg
ficompl
and
loope
loop
mov
fcomip
pop
push
and
lcall
pusha
lcall
pop
cs
push
stc
xchg
fisttpll
mov
or
test
in
push
loopne
mov
jp
cmpsb
fsubp
dec
push
aas
lcall
mov
loope
pop
push
lods
jmp
fs
es
test
sub
or
int3
sbb
push
ret
icebp
rorb
pop
daa
enter
push
or
jbe
sbb
ss
mov
and
fsubs
or
pmaddwd
and
jb
jmp
repnz
into
out
in
pushf
les
and
dec
jg
cwtl
cli
pop
sub
xchg
loopne
out
sub
je
cmc
mov
or
pop
adc
repnz
stc
xchg
bound
fmuls
jno,pn
ja
addr16
cmpsl
lahf
push
mov
adcb
and
cmp
fmuls
stos
xchg
xor
mov
jns
pop
iret
inc
std
mov
push
jnp
lock
mov
outsb
push
cmp
into
aaa
pop
repz
fnsave
movsl
cmpl
adc
push
push
test
sbbl
jne
les
aam
leave
divl
test
leave
jno
cltd
rcrb
imul
pop
js
or
call
dec
dec
add
insl
pop
mov
cmp
dec
xor
mov
test
lods
fcompl
mov
fadds
stos
xchg
push
jmp
call
mov
fbstp
fistps
sub
hlt
lret
pop
fwait
out
pop
adc
mov
jmp
mov
call
pop
mov
sbb
and
imul
cltd
adc
les
rorl
mov
das
mov
adc
std
cmp
inc
mov
sarl
xorps
aam
dec
cmpb
pop
aad
data16
orl
jecxz
jmp
jno
add
pop
aam
mov
test
jo
lds
shll
adcl
daa
test
nop
mov
lods
pop
lea
push
mov
outsb
fs
out
add
adc
fld
addl
and
xor
mov
xchg
leave
jne
imul
bound
movsb
xor
inc
in
sub
dec
xor
cli
dec
sti
and
cmp
jp
inc
mov
mov
out
loop
dec
mov
gs
xchg
xor
data16
add
mov
ja
jbe
fs
loopne
pop
mov
int3
jmp
mov
dec
cmp
lahf
les
inc
or
icebp
les
imul
xchg
outsb
popa
push
xor
push
jnp
xor
cld
test
xor
ss
mov
gs
fcompl
or
pop
loop
outsb
dec
inc
inc
jbe
inc
sub
insl
cmp
cmp
in
lret
pop
jo
push
sub
add
sub
mov
les
pop
xchg
sbb
mov
enter
shll
test
ss
xchg
jno
inc
loop
hlt
inc
subb
dec
inc
mov
push
sbb
les
xchg
fbstp
fsubp
or
dec
adc
aam
in
mov
or
shr
and
sahf
dec
fidivl
xor
aad
mov
mov
addb
scas
push
dec
ret
lret
mov
sti
or
xor
rcr
and
push
std
jns
call
cmp
loope
or
xor
sar
push
into
loope
popa
popf
inc
fimull
cmp
popf
cli
in
sahf
fs
mov
aad
add
push
or
fbld
sbb
enter
jg
xchg
cmp
in
push
add
jge
fwait
insl
aas
mov
sub
pop
pop
cmp
push
call
push
jae
jno
call
lock
sarl
fstl
ficomps
nop
mov
mov
int3
fwait
jno
push
in
cmp
je
in
rclb
sbb
push
lahf
jbe
fdivrs
enter
jno
pop
mov
insl
or
push
inc
push
lea
mov
lret
in
push
jns
inc
gs
mov
cmp
les
stc
mov
shll
xor
pop
lea
test
dec
mov
mov
inc
xor
mov
pushf
cltd
jne
pop
fisttps
push
mov
shrl
push
push
push
mov
pusha
test
lods
cmp
sub
loope
jb
cli
sub
lret
enterw
out
in
leave
jl
aas
sbb
mov
inc
ret
nop
ja
icebp
jo
adc
test
shl
jg
lret
stos
mov
inc
sahf
hlt
adc
out
or
inc
mov
lret
lret
mov
cmp
mov
cmp
jl
mov
dec
movsb
mov
rcrl
in
xchg
pop
inc
pop
or
jg
scas
sbb
ljmp
ss
or
enter
arpl
icebp
mov
aad
orl
idivb
push
mov
lahf
mov
in
inc
cmp
dec
pop
test
lcall
inc
fisttps
push
pop
ja
in
sbb
add
jg
mov
lret
mov
insb
cmp
cld
fistps
sti
mov
pop
sub
xor
lods
movsb
mov
lahf
sahf
test
jb
stos
stos
loope
jbe
sti
adc
mov
sub
test
fs
jecxz
je
lods
pop
popa
pop
in
pop
or
push
mov
or
push
jecxz
repnz
jnp
push
and
push
movl
data16
jle
cwtl
lret
dec
or
xchg
out
lds
movsl
adc
add
mov
jle
xor
inc
push
jnp
ss
mov
or
adc
jbe
adc
insl
pop
jns
jle
fdivl
out
pop
pop
mov
push
mov
adc
test
repz
daa
xchg
aaa
or
in
fisubl
mov
mov
mov
xchg
mov
cli
adc
popa
push
das
push
filds
call
cli
add
arpl
push
xchg
or
aas
daa
mov
lret
xchg
cld
or
repz
insl
add
subb
es
jnp
lahf
pop
cmpsl
dec
push
jbe
cmpsb
pop
pushf
and
stc
push
sub
inc
push
sti
cltd
cmpsl
pop
lret
dec
fcoml
iret
rorb
lock
std
xchg
dec
adc
adc
sub
cld
fdivrs
cmp
mov
push
jb
and
int3
sub
leave
fisttpll
xor
inc
mov
adc
mov
dec
inc
lret
call
cmp
dec
loope
mov
inc
jo
loope
cli
hlt
scas
xchg
nop
es
mov
sbb
repz
cmp
jg
sbb
pop
jnp
sbb
pop
mov
xchg
sub
mov
in
mov
aad
jmp
xor
into
repnz
pop
mov
jnp
mov
mov
cmc
mov
add
daa
push
sti
std
aad
inc
insb
mov
nop
js
lret
inc
xchg
ret
negb
or
adc
lds
scas
scas
push
pop
pop
andl
push
mov
xchg
xor
or
dec
lcall
outsb
sahf
cmpsl
mov
cmp
xchg
fdiv
inc
sub
inc
pop
inc
adc
xchg
dec
adc
xor
out
adc
iret
pop
adc
aas
stc
push
arpl
jmp
mov
repnz
cmc
call
pop
jge
xor
lret
add
into
test
iret
shr
shll
in
loopne
ret
dec
jle
jp
mov
data16
stos
pop
lock
lods
xchg
std
notl
mov
cld
add
cmp
mov
in
ja
into
loopne
mov
fstl
pop
cmc
scas
pop
push
fs
shrb
sub
sbb
out
mov
push
lods
pop
mov
adcl
aaa
dec
aad
cmpsb
out
cmp
dec
out
mov
pmaxsw
push
inc
jns
imul
div
push
js
js
xor
cmp
jmp
mov
cmp
pushfw
add
mov
dec
out
cmpsl
insb
mov
xchg
iret
xor
orl
rorb
add
loopne
outsb
mov
rcrb
scas
pop
repnz
mov
jns
ret
jl
sbb
add
cmc
insb
dec
rolb
adc
xor
fbld
mov
xchg
mov
popf
mov
dec
popa
or
pop
pop
dec
fnsave
lods
test
int
xor
mov
jp
adc
mov
and
cwtl
sbb
sub
jl
ret
push
fsts
lret
mov
xchg
pop
jbe
ret
outsb
outsb
data16
push
inc
aad
mov
mov
cmc
rep
mov
cmp
daa
mov
lods
scas
push
dec
dec
pushf
movsl
pop
lret
jno
scas
xor
stc
mov
pushfw
pop
andl
add
mov
je
rcll
jg
xor
xchg
hlt
mov
rdmsr
cli
or
les
sbb
leave
lds
mov
stos
scas
pop
pusha
enter
sub
fcomp
pop
jmp
pusha
lock
cmp
fists
sub
or
sbb
cmp
pop
and
xor
mov
mov
insb
shrb
xchg
and
mov
mov
cs
cwtl
outsl
or
sarl
adc
push
adc
out
fucomp
inc
pop
jge
fcoml
push
repz
lds
enter
cli
and
pop
xchg
out
out
das
xlat
mov
outsb
mov
inc
push
or
imul
push
mov
mov
push
sub
std
fldl
in
inc
out
and
jl
sub
sub
into
lret
mov
mov
fs
dec
push
jo
hlt
inc
div
push
idiv
cmc
mov
jns
pop
in
fisttpl
bound
imul
cli
cmpl
lahf
loop
fildll
dec
jmp
xchg
jo
nop
in
out
pop
pop
fimull
loopne
lods
mov
lods
push
jp
adc
pop
xor
push
rclb
xor
or
cmp
inc
test
and
jne
hlt
pop
test
push
mov
js
data16
xor
push
into
lods
fwait
sar
aas
fstl
fwait
shrl
mov
mov
ret
jl
mov
push
jp
jg
and
jno
xchg
lea
pop
pop
aaa
cmpl
xchg
rorb
jns
clc
jl
sbb
sub
out
mov
lahf
or
inc
daa
dec
cltd
out
mov
jno
test
movsl
jle
or
add
jnp
ja
enter
or
cmpsl
aaa
xchg
mov
inc
inc
test
xor
xor
test
add
fcoml
es
push
push
inc
cmp
mov
cmp
inc
lret
xchg
lods
pop
hlt
cli
adc
mov
xor
dec
jecxz
xchg
mov
sbb
test
mov
gs
pop
sub
dec
mov
add
pusha
inc
inc
bound
enter
mov
call
add
mov
push
sbb
push
xchg
ret
test
inc
movsb
pop
pop
repz
or
js
mov
popf
or
xchg
pop
push
jns
jg
call
std
outsl
cmp
nop
push
test
dec
pop
push
mov
fdivrl
mov
std
das
pop
xor
and
in
xchg
je
insb
pop
cmc
in
mov
push
xorl
jno
out
cmpsl
dec
dec
sbb
into
inc
dec
sbb
out
adc
imul
add
popa
enter
aam
mov
scas
iret
lods
jl
fwait
iret
mulb
test
sub
cs
cmc
out
aad
hlt
fsubrp
test
mov
aad
dec
mov
es
mov
lea
push
call
mov
popl
adc
loop
adc
insb
stos
jecxz
or
mov
leave
iret
fisubrs
loop
leave
cmpl
mov
adc
dec
cltd
cli
aas
in
sbb
mov
pop
imul
adc
addl
lcall
inc
dec
mov
cwtl
jmp
lahf
sub
xchg
mulb
outsb
sub
loope
out
cwtl
mov
test
rorb
ret
jae
enter
add
inc
lahf
dec
inc
sbb
cmp
bound
scas
cmpsl
movsl
xor
inc
clc
sti
stos
adc
sbb
lds
pop
fwait
inc
scas
orb
cmp
sbb
ja
jmp
js
test
daa
push
inc
out
jne
into
mov
adc
mov
mov
mov
lcallw
sub
sub
add
cmpsl
and
xorb
mov
cmp
xchg
pop
iret
xor
rclb
cmpsb
aam
pop
mov
ljmp
and
shlb
and
xor
jecxz
cmp
dec
sub
or
mov
xchg
movsb
sbb
or
pop
jbe
inc
rcrb
push
outsl
jnp
xchg
int3
push
cmp
push
inc
or
or
cltd
or
std
insb
out
cmc
xor
sbbl
dec
jle
add
shlb
mov
add
mov
push
push
push
and
cltd
fisubrl
enter
es
add
out
pop
add
lahf
sbb
xchg
pop
jnp
mov
lods
mov
push
scas
sbb
loopne
mov
shrl
dec
mov
hlt
xchg
xchg
cmc
mov
pop
ss
aad
negl
lods
stc
mov
jg
stos
leave
xor
cmpb
sbb
cmpsl
xor
pushf
and
add
inc
rcr
cli
movsb
pop
inc
test
cmpsl
xchg
rcrb
add
iret
dec
fisttpll
xchg
dec
adc
les
cs
nop
mov
jno
inc
mov
mov
ja
add
fwait
xor
adc
nop
das
xlat
in
lret
std
int
lods
out
ss
mov
jne
ss
and
cs
stc
pop
mov
outsb
aad
mov
fwait
xorb
shrl
push
loope
xchg
movsb
inc
mov
xchg
pusha
jp
xor
movsl
mov
sarl
pop
or
lock
add
xchg
jg
je
adc
xchg
enter
daa
add
mov
push
adc
lret
fs
js
push
xor
dec
mov
jle
repz
in
idivl
mov
lea
decb
jge
and
aam
nop
test
adc
ljmp
sub
lock
out
sub
popf
push
and
adc
pop
pop
push
mov
movsb
push
shrl
mov
pop
test
ret
sahf
sub
inc
clc
xor
jmp
vpaddsw
jne
cs
lods
lret
xchg
add
cmp
cld
clts
cmp
xchg
jbe
test
mov
stc
jmp
lretw
ret
sbb
adc
inc
clc
sbb
cld
mov
pop
fldl
gs
pop
test
pop
adc
repz
mov
out
add
lods
aad
imul
jae
lds
push
fsubrl
lahf
adc
mov
mov
xchg
or
inc
sbb
fwait
ret
adc
nop
adc
jno
inc
sbb
hlt
sub
pop
loope
pop
inc
insb
xchg
push
xlat
dec
cmpsl
popa
ljmp
imul
ret
enter
adc
dec
adc
in
xchg
cbtw
rcrl
cmp
in
test
pushf
jp
aam
fwait
xlat
out
movsl
mov
dec
loope
test
mov
jno
xchg
sbb
scas
enter
out
xchg
mov
xchg
jle
xchg
dec
push
loop
cli
fldcw
insl
rclb
into
aas
ljmp
outsb
and
cmpsl
stos
in
lock
inc
lret
add
cmp
cmp
xor
add
popa
jb
lock
movsl
adc
in
xchg
mov
xchg
dec
and
sbb
imul
mov
imul
cmp
test
loopne
jnp
jmp
xlat
jmp
daa
xor
jns
xchg
xchg
cmpb
das
and
push
adc
mov
xor
sub
cwtl
inc
fwait
and
push
sbb
push
filds
jecxz
lds
cmpb
and
add
mov
xor
pop
jg
movl
or
jnp
pop
jle
dec
xlat
stos
xchg
push
pop
scas
push
push
addr16
test
mov
push
sbb
outsb
xchg
push
adc
mov
xchg
mov
dec
adc
ret
adc
scas
es
int
mov
pop
pop
mov
push
pushf
cld
in
pop
inc
das
dec
xchg
sbb
rcr
jl
test
mov
sbb
add
repz
das
sbb
inc
loopne
xorb
add
sub
xchg
adc
repz
cwtl
mov
seto
stc
mov
stc
jecxz
sbb
stos
repnz
lret
jecxz
jno
in
xor
mov
movsl
mov
mov
jns
xor
mov
aaa
shlb
in
and
push
int3
mov
mov
aas
inc
aam
pop
mov
dec
inc
aam
nop
or
rcl
and
aas
js
mov
xchg
push
mov
xchg
gs
pop
jg
int3
loop
sahf
lret
inc
push
jge
mov
out
fidivl
outsb
inc
enterw
enter
mov
cltd
addr16
imul
hlt
les
fcoms
jo
adc
lret
mov
stc
pop
sbb
insl
add
xor
push
jl
fldt
subb
dec
cs
jg
inc
inc
dec
fdivrs
jb
xchg
jle
sbb
les
push
mov
in
or
les
imul
xchg
bound
push
flds
sbb
cli
xor
icebp
fisubl
and
sbb
pop
push
movsb
cmp
sub
lock
lods
dec
call
mov
icebp
test
popl
gs
lahf
arpl
dec
outsb
mov
push
or
jp
xlat
adc
cmp
addl
pop
adc
lea
lahf
repnz
js
sbb
cmpsb
mov
push
jbe
lcall
push
xlat
sahf
add
fcoms
push
movsb
lods
push
das
movsl
jge
ficomps
jns
dec
mov
mov
icebp
inc
mov
add
lcall
insl
pop
je
roll
mov
imul
push
enter
xor
in
and
cmpsl
mov
cmpsb
mov
int
or
rcrl
popa
mov
cmp
out
dec
rcrl
ret
test
xor
inc
ror
out
fwait
jbe
stos
mov
cmp
xchg
and
cs
dec
cmpsb
adc
rorl
shll
mov
out
gs
cmp
sub
add
mov
lret
scas
mov
mov
call
jl
add
cmp
sub
std
pop
dec
xchg
jmp
out
imul
cmpb
sbb
and
js
cmp
add
lods
int
jecxz
push
jns
mov
adc
and
sahf
lcall
mov
cmp
out
mov
repz
sbb
push
jp
cli
popa
rep
jne
or
or
mov
jns
pushf
repnz
push
jge
sbb
fisttpll
jmp
mov
push
stc
add
pusha
insl
nop
addr16
cltd
mov
sbb
inc
outsb
pop
inc
mov
cmp
iret
rcll
js
xchg
sub
popa
cmp
das
sub
daa
and
and
aaa
sub
cmpsl
ljmp
test
roll
pop
aas
clc
xor
adc
test
popf
testl
cmp
cmp
mov
in
push
cltd
xlat
ds
jecxz
pushf
enter
sbb
push
cli
or
mov
xchg
shrb
push
pop
lock
adc
sbb
int
call
pop
push
test
xor
mov
ss
cmp
jae
add
dec
xchg
dec
lcall
push
fcomp
mov
and
js
stos
out
leave
jnp
lods
xlat
or
ja
xor
js
push
leave
je
dec
movsl
lcall
fs
data16
aam
inc
push
dec
push
sub
fmul
out
addl
jg
sar
filds
sbb
enter
lret
push
lret
jne
repz
aam
je
mov
bound
cmp
dec
das
add
mov
cmp
or
lret
hlt
imul
sbb
stos
jl
dec
pop
out
insl
add
push
fs
cmpsb
in
loopne
xor
push
jae
push
or
lahf
xchg
push
add
mov
jle
incb
std
scas
push
push
dec
push
pop
jp
lods
insb
pop
ds
in
push
jbe
je
test
adc
andl
sub
cltd
inc
out
imul
cmp
xlat
inc
hlt
fsubs
mov
scas
add
push
adc
lds
sub
test
lds
xor
nop
das
or
inc
test
add
sub
stc
jbe
pop
imul
and
int
ret
rorb
mov
xchg
test
icebp
fmuls
sbb
orl
xchg
cmp
jbe
insl
adc
jp
sbb
sub
cmp
addr16
inc
jle
insl
cwtl
mov
shll
pop
push
ret
sub
mov
lods
test
cmpsb
cwtl
and
imul
leave
mov
cmp
xor
rorb
lods
outsl
mov
push
or
cwtl
lds
adc
cmp
les
je
jge
lea
sti
pop
jg
cmc
out
xchg
ret
cmp
ret
enter
xchg
icebp
out
inc
jecxz
pop
cld
add
add
fcomi
lods
mov
or
pop
push
mov
insl
ja
cmc
sbb
shlb
cmpb
mov
out
shll
rcr
gs
popa
or
mov
movsb
inc
cli
adc
test
lret
fistpl
jge,pn
pop
imul
test
ljmp
lcall
orl
cmp
ficomps
mov
adc
push
stc
mov
icebp
push
cmp
xor
push
rcr
insl
mov
mov
mov
test
mov
pushf
pop
cmp
xor
dec
std
jle
sti
mov
mov
xchg
sub
mov
shlb
mov
push
and
out
flds
add
jmp
fsubrs
cmpsl
adc
out
xchg
xor
push
popa
sbb
lcall
sarb
jle
shll
nop
or
arpl
scas
inc
lea
and
inc
inc
cmp
cmp
adc
mov
pop
mov
lcall
or
xchg
fisttpll
iret
stos
insl
sbb
jle
popa
popa
pop
sbb
in
jge
mov
sbbb
sbb
adc
jmp
cltd
sub
add
test
dec
or
adc
or
aad
std
and
je
sbb
pop
aas
jl
lock
adc
or
fmulp
call
add
xchg
popa
faddl
push
sbb
cli
lahf
aas
mov
cli
daa
fwait
sub
movsl
cmp
cmp
rclb
lea
xchg
outsl
jg,pt
leave
inc
mov
test
cmp
inc
fcomps
into
loopne
jecxz
add
outsb
incl
in
mov
mov
dec
jmp
xor
cld
stos
lahf
cltd
ja
aad
fimuls
xor
