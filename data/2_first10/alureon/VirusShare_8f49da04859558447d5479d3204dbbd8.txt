push
mov
add
pop
add
pop
add
mov
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
pop
add
pop
add
pop
add
pop
add
mov
add
mov
add
mov
add
mov
add
mov
add
pop
add
mov
add
pop
add
add
pop
add
mov
add
mov
add
jp
dec
movsb
and
cwtl
int
sub
lret
sbb
outsb
pop
mov
pop
mov
dec
push
jl
inc
addr16
imul
inc
je
loope
popa
and
dec
and
dec
pop
mov
stos
js
subb
inc
mov
das
cmp
lods
cwtl
adc
call
cs
inc
sti
aad
jae
pop
push
jbe
lret
dec
mov
mov
xchg
dec
cwtl
lahf
scas
pop
sbb
and
not
shrl
inc
add
jo
mov
xchg
imul
out
fdiv
das
pop
jle
lret
in
push
mov
mov
clc
push
xchg
popa
add
mov
xor
popf
mov
cli
cwtl
sbb
cmpsl
mov
adc
imul
xchg
mov
pop
cmpsl
mov
loop
jbe
lret
xor
cmp
adc
insl
jle
mov
jmp
stos
imul
ljmp
xor
inc
cwtl
inc
cmp
mov
cmc
stc
pusha
arpl
xor
jl
inc
hlt
test
mov
ficomps
xor
test
sbb
xchg
dec
dec
and
push
pop
lret
jae
cmp
and
or
jp
inc
adc
daa
sub
inc
dec
push
sti
sbb
jns
adc
hlt
int
les
xlat
sti
subl
sbb
xchg
xor
das
inc
sti
inc
out
enter
xor
adc
pop
pop
pop
insb
mov
mov
arpl
faddp
insl
adc
fsubrl
or
test
xchg
cltd
ds
stos
sahf
push
and
clc
mov
lret
mov
ret
push
aas
movsb
pop
pop
jle
cltd
scas
mov
loop
aad
adcb
cmovne
out
push
inc
dec
mov
mov
sahf
stos
loopne
mov
pop
daa
xchg
jae
xor
mov
mov
push
lcall
mov
in
sahf
shll
and
xchg
aad
ficoml
dec
mov
dec
mov
jecxz
and
fsubrs
sbb
xchg
push
repz
push
cmp
mov
fcmovnbe
or
adc
subl
cmpsb
mov
jns
add
ds
xchg
xor
push
mov
pop
pop
cld
arpl
lods
pop
jnp
jg
jne
mov
test
insb
mov
fisubrl
mov
outsb
mov
mov
shl
push
sbb
xchg
xchg
jo
mov
test
in
mov
addb
xchg
xchg
mov
push
mov
cmp
push
jg
addb
dec
mov
mov
lds
leave
rcrb
stc
les
stos
jb
mov
inc
in
ret
mov
jno
mov
xor
xchg
shll
mov
pop
rcrb
jmp
jo
or
adc
sub
push
add
mov
cmpsl
sarl
clc
jg
call
pop
out
xor
and
fidivrs
cmp
loopne
mov
popf
add
xor
fildl
fistpl
jo
sub
bnd
pop
mov
mov
cmp
mov
mov
ja
xlat
jae
fmulp
scas
add
and
mov
push
call
ds
icebp
adc
rclb
xor
or
add
stos
mov
xchg
add
into
mov
mov
push
mov
inc
inc
call
lea
sub
call
inc
push
inc
call
dec
mov
xor
inc
mov
call
movswl
imul
mov
mov
inc
add
mov
movswl
dec
sub
add
inc
inc
dec
call
mov
add
dec
lea
lea
call
sub
inc
call
mov
imul
imul
dec
mov
mov
lea
add
pop
dec
imul
inc
add
mov
pop
dec
inc
pop
lea
inc
sub
inc
pop
inc
add
add
imul
inc
add
xor
inc
pop
inc
lea
pop
sub
imul
mov
inc
dec
call
add
mov
movswl
mov
ret
movswl
movswl
push
add
push
xor
lea
push
movzbl
dec
push
mov
inc
push
mov
sub
mov
sub
lea
push
sub
ret
push
dec
sub
dec
dec
sub
lea
inc
push
dec
mov
push
and
call
pop
ret
jmp
sub
and
dec
imul
movzbl
inc
and
xchg
sub
mov
inc
add
xor
add
dec
mov
mov
inc
lea
add
dec
jne
inc
mov
inc
and
pop
inc
imul
pop
inc
dec
pop
sub
and
or
sub
sub
mov
imul
mov
inc
inc
inc
add
ret
push
imul
lea
imul
add
mov
and
mov
mov
push
push
push
push
mov
xor
add
push
lea
add
dec
sub
lea
inc
inc
sub
inc
mov
inc
push
inc
inc
xor
dec
sub
push
add
lea
push
or
inc
pushl
mov
call
movswl
add
add
lea
or
mov
xor
mov
dec
pop
ret
jb
lea
xor
dec
add
mov
lea
mov
imul
mov
inc
movzwl
sub
mov
mov
lea
movzbl
mov
dec
dec
cmp
jb
xor
mov
movsbl
xor
movzbl
xor
lea
pop
lea
inc
test
jbe
mov
inc
xor
lea
lea
inc
imul
inc
lea
inc
xor
mov
dec
and
mov
mov
or
inc
dec
imul
dec
inc
add
dec
and
mov
inc
mov
mov
dec
movzbl
lea
mov
add
dec
inc
and
add
movzwl
mov
inc
mov
mov
add
movzwl
mov
imul
dec
mov
dec
inc
inc
lea
add
imul
dec
jne
inc
mov
movzbl
movzbl
add
add
lea
dec
mov
lea
lea
mov
mov
mov
mov
inc
inc
mov
inc
mov
mov
inc
mov
test
jbe
movzwl
inc
mov
sub
lea
mov
xor
lea
lea
mov
dec
sub
lea
dec
add
inc
dec
add
mov
lea
mov
dec
and
dec
inc
mov
mov
or
movzbl
add
lea
add
add
lea
and
mov
movswl
mov
sub
add
movzbl
dec
mov
mov
mov
mov
mov
inc
lea
movzbl
add
add
add
sub
jmp
push
call
sub
xor
sub
inc
xor
sub
mov
inc
sub
dec
inc
mov
xor
xor
mov
mov
mov
movzbl
shl
mov
mov
xor
lea
mov
push
sub
mov
mov
call
inc
pop
dec
mov
mov
movswl
add
imul
dec
mov
cmp
je
call
call
dec
iret
mov
dec
inc
movswl
dec
inc
or
inc
lea
add
inc
lea
sub
movzwl
pop
imul
ret
push
imul
dec
sub
dec
lea
push
imul
and
push
add
push
or
push
xor
add
push
dec
lea
mov
lea
add
call
lea
push
add
push
and
pop
dec
lea
mov
or
mov
mov
dec
lea
inc
mov
dec
dec
je
inc
mov
lea
mov
add
inc
inc
mov
imul
mov
mov
mov
mov
sub
dec
movsbl
xor
repnz
and
mov
add
sub
jmp
add
inc
mov
inc
add
dec
movzwl
sub
inc
movsbl
lea
sub
jmp
dec
dec
mov
or
pop
pop
ret
push
movsbl
add
inc
inc
sub
mov
add
add
inc
dec
add
mov
inc
movsbl
sub
inc
dec
sub
imul
movzbl
lea
imul
inc
mov
imul
pop
ret
sub
inc
mov
lea
movzwl
mov
mov
mov
mov
lea
mov
mov
xor
sub
xor
add
inc
mov
sub
dec
inc
add
inc
dec
inc
mov
lea
cmp
jb
dec
push
lea
or
push
inc
mov
push
and
dec
mov
dec
xor
xor
inc
add
xor
mov
add
xor
sub
push
xor
mov
xor
imul
dec
mov
add
dec
mov
xor
movzbl
add
dec
xor
mov
add
or
mov
add
add
mov
movzbl
sub
add
lea
add
mov
sub
lea
inc
inc
inc
mov
mov
inc
add
dec
sub
inc
cmp
jmp
cmpsb
pop
test
cmp
push
decb
cmpsl
ret
and
insb
jne
mov
pop
mov
scas
sub
and
test
dec
xor
mov
jmp
int3
jns
dec
minps
mov
jle
outsl
mov
inc
sbb
scas
pusha
fdivl
sti
test
jp
mov
sub
add
aad
cld
cmp
mov
addr16
mov
inc
addb
mov
adc
mov
push
daa
stos
movl
insl
fcoml
xchg
xchg
xor
lds
sbb
ja
mov
cltd
inc
jp
sub
cmp
mov
dec
iret
cltd
push
jns
stc
push
cmp
scas
adc
std
xor
pop
pop
mov
push
inc
xchg
cmc
mov
stos
test
cmp
ss
jo
stc
mov
mov
or
cmp
leave
cltd
icebp
jo
jbe
push
sti
mov
cmp
or
subb
push
into
imul
xchg
aas
shll
ficompl
push
sti
dec
cmc
sub
test
sbb
daa
shll
loopne
andb
mov
imul
adc
popf
repz
imul
shlb
inc
mov
jae
push
dec
fimuls
sub
and
jnp
leave
pop
mov
adc
mov
movl
add
les
dec
xor
movsb
aam
pop
out
movsb
insl
stos
hlt
popa
sbb
jb
dec
cli
mov
out
cmp
imul
add
mov
in
and
push
xchg
loope
jp
jne
ret
cltd
xchg
mov
cmpsl
xorb
lcall
sti
sbb
insl
fnop
lret
incb
or
push
addr16
out
lcall
ljmp
adc
lods
pop
or
ror
push
jne
stc
ficoms
rorl
dec
cwtl
lods
cmp
pushf
adc
cmpsl
inc
mov
sub
imul
sub
push
mov
cltd
pop
pusha
les
sbb
push
mov
mov
ds
push
and
dec
mov
int3
cwtl
cmpsl
pop
xor
sub
jge
dec
mov
divb
test
jmp
inc
push
jecxz
addr16
jno
loop
dec
jbe
push
mov
addl
and
out
gs
cli
imul
add
aad
ljmp
mov
mov
mov
xchg
leave
mov
pop
jmp
nop
pop
aad
idivb
ljmp
inc
lods
rclb
pop
int
jl
insb
orl
test
js
sbb
popfw
fstpl
inc
push
inc
mov
fisttps
popa
xchg
push
push
js
incl
roll
stc
push
notl
mov
pop
jecxz
mov
mov
pushw
setl
in
in
hlt
sbb
push
xor
sub
outsl
test
sub
or
stc
pop
and
aad
xchg
or
sub
mov
mov
mov
pushf
sub
fwait
adc
dec
sbb
mov
inc
sub
scas
lcall
outsb
dec
mov
roll
stc
mov
jbe
jecxz
mov
in
fnstsw
and
fs
shr
shlb
lret
loope
or
push
xor
scas
adc
stos
mov
lods
or
dec
cmp
inc
jbe
mov
loop
cmpsl
cli
in
movsl
call
test
push
adc
sbb
scas
daa
nop
mov
call
loop
mov
movups
mov
das
dec
or
dec
cld
xchg
ret
int3
inc
sarl
or
add
dec
stos
inc
add
fmul
xor
or
popa
mov
int3
dec
ljmp
mov
es
nop
or
push
jecxz
movl
inc
dec
jge
imul
call
in
mov
into
cmp
jg
je
mov
movsb
push
cli
testb
roll
hlt
sub
adc
add
jl
and
and
in
dec
mov
lahf
mov
pop
call
jnp
mov
jne
and
and
mov
cmp
mov
lcall
sub
mov
shrl
add
cs
mov
lock
stos
cltd
in
mov
and
dec
in
ljmp
jbe
xchg
push
nop
xchg
dec
adc
and
jns
cli
mov
cmpl
lds
xchg
add
testl
push
inc
hlt
lret
imul
cli
inc
clc
jne
cmpsb
xor
movsb
dec
lods
dec
mov
xchg
movsb
sub
sahf
and
push
int3
mov
mov
test
xchg
lahf
xor
cltd
pop
push
rdmsr
adc
sbb
imull
fs
add
adc
repz
ret
jbe
call
push
and
mov
lds
lcall
push
adc
adcl
cmpsb
mov
divl
lock
test
stos
pusha
add
stc
xor
repnz
scas
push
xor
mov
inc
sbb
lods
push
imul
ja
pop
xchg
mov
adc
push
ja
data16
bound
mov
mov
es
xchg
mov
dec
cld
xor
dec
adc
adc
cmp
out
pop
cmp
xchg
and
cmpl
jle
in
inc
imul
jb
or
add
pop
push
aam
cmpsl
mov
inc
cmp
pop
cli
jle
jp
nop
inc
xchg
xchg
shlb
xorl
in
inc
gs
cmpb
sub
aaa
sub
popa
push
mov
cmp
sbb
fucomip
add
mov
or
iret
lds
repnz
xlat
mov
sbb
mov
sub
mov
push
dec
cwtl
and
sbb
outsb
pop
xchg
push
sub
dec
mov
push
imul
inc
or
inc
cmpsw
xchg
and
mov
imul
jnp
sbb
xchg
jae
xchg
mov
arpl
dec
dec
movsb
and
dec
cwtl
fwait
jnp
jmp
lods
scas
and
out
fdivr
jnp
cmp
push
divb
shrl
jo
data16
imul
xchg
jo
mov
je
das
mov
scas
repnz
jo
mov
fwait
stc
push
fxch
sub
clc
mov
or
xchg
das
je
dec
push
sub
pop
or
push
icebp
aad
shlb
or
xchg
or
pop
inc
adc
pop
pop
cli
fistpl
int3
movl
sbb
insl
or
push
stc
imul
dec
mov
aaa
fldt
sub
mov
or
lret
arpl
mov
dec
incb
fincstp
shll
bound
fnstenv
pop
lods
adc
imul
sbb
jecxz
push
mov
dec
xor
sbb
adc
inc
push
int
jno,pt
sbb
in
clc
inc
sahf
insb
dec
mov
mov
inc
push
add
into
cmp
sbb
pop
sti
adc
adc
fwait
mov
or
mov
subb
xor
jl
push
lret
cltd
lds
pop
inc
push
mov
jae
add
out
insl
je
ljmp
xor
adc
fadds
lret
sbbb
dec
mov
ljmp
adc
scas
cmpsl
cmp
incb
dec
cmpsb
enter
and
xchg
cld
or
pop
cmpsb
sti
dec
lods
inc
push
lds
cmc
adc
mov
add
fnstsw
lea
ret
sub
movb
and
mov
xor
adc
mov
pop
or
jg
js,pt
cmc
mov
sahf
mov
arpl
cmp
cmp
jbe
lea
pop
mov
mov
and
pop
xchg
push
mov
mov
xchg
jg
dec
clc
jle
xor
scas
mov
inc
shl
mov
xor
test
fistpl
push
mov
cmp
dec
jg
aas
pop
dec
ljmp
mov
xchg
ljmp
fistl
lret
mov
aaa
jecxz
ljmp
jb
lret
jl
cs
fbstp
push
ficomps
jecxz
cmp
jp
sub
mov
jle
pop
divb
xchg
xor
aam
out
jne
jne
ret
shlb
shr
jl
je
popf
jp
jle
imul
in
adc
xchg
popl
stc
mov
mov
mov
das
and
test
out
inc
jae
js
cld
cltd
mov
lds
push
mov
sbbb
out
repz
push
add
ss
jle
dec
sarl
jne
les
cli
lock
xor
push
cmp
jb
aam
lods
mov
outsl
sbb
fsub
mov
xchg
add
xchg
mov
cmp
or
hlt
lret
in
imul
test
fwait
vandps
aaa
add
jecxz
jns
inc
sub
inc
pushf
fildl
addl
inc
shrl
lock
cmovs
loopne
cmp
jecxz
hlt
imul
cmp
push
loopne
hlt
int3
shlb
jmp
xchg
lret
call
mov
or
dec
mov
scas
add
push
sti
xlat
ficoms
test
xchg
dec
iret
popf
je
js
cltd
call
jns
sbb
cmc
mov
orl
mov
mov
in
or
lock
sub
sbb
push
cmpl
cld
mov
out
add
push
mov
xor
jp
lds
push
sbb
ret
negl
sti
or
jg
out
jmp
mov
xchg
mov
sub
jne,pt
jle
push
inc
mov
adcl
int
dec
das
xlat
imul
dec
in
jne
push
mov
test
xor
imul
inc
sbb
ret
mov
xlat
arpl
fistps
cltd
test
roll
imul
jmp
push
dec
jbe
mov
mov
int3
jbe
out
mov
adc
pop
dec
repnz
aas
mov
mov
xor
test
mov
or
jns
mov
pusha
sub
nop
cltd
fcmovnbe
mov
inc
or
ljmp
in
jmp
pop
cld
cmpsb
andb
repz
loopne
data16
push
scas
negl
jmp
pop
fcoms
test
call
inc
test
gs
push
pop
xchg
insb
xor
out
xchg
adc
test
scas
sar
mov
adc
mov
fimuls
push
sub
mov
rolb
xlat
in
jno
and
lcall
adc
daa
hlt
aaa
mov
loopne
loope
sbb
sub
icebp
shrb
ja
add
test
dec
inc
or
xchg
mov
mov
lcall
jg
sub
add
mov
aaa
mov
call
add
mov
in
dec
addb
movsl
hlt
iret
cmp
pop
test
std
inc
lret
js
xor
cs
mov
cltd
pop
push
cmp
push
fs
mov
sub
pushf
adc
es
popa
gs
cmp
dec
movl
lods
and
sbb
mov
mul
or
xchg
mov
jno
or
mov
cmp
pop
fbld
mov
dec
inc
xor
adc
push
dec
cmp
popf
mov
push
inc
dec
ret
mov
stc
mov
test
jns
dec
push
cmp
and
popa
ret
call
cmp
out
repnz
xor
repz
outsl
sti
xchg
fldenv
jge
test
cmp
mov
popa
std
lahf
lds
inc
or
inc
repz
cwtl
stos
jg
popf
fnstsw
push
and
dec
jp
mov
adc
push
xchg
mov
aaa
repz
addr16
dec
mov
add
ss
inc
cmpb
sahf
xchg
mov
push
push
ljmp
fsubs
fcoms
testl
sbb
adc
mov
add
xor
pushf
scas
lea
cmp
and
call
add
imul
or
jmp
pop
sar
test
lods
dec
jo
out
adc
mov
jle
jno
andb
fmull
enter
jg
inc
daa
lcall
cwtl
pushf
cmp
scas
adc
ret
push
pushf
outsl
xchg
xor
lret
std
or
xor
sub
pop
lahf
je
xor
xchg
out
outsb
sbb
xor
sbb
pop
jbe
and
loop
loop
scas
mov
push
adc
test
mov
inc
push
out
pop
hlt
xor
adc
mov
repz
addr16
cs
or
sbb
mov
xor
insb
scas
lods
and
xchg
fisttpll
or
sub
imul
outsl
adc
test
in
cwtl
dec
lock
pop
mov
mov
sub
cs
fadd
jae
push
aad
mov
into
pop
add
push
xor
xchg
ret
sahf
loopne
xchg
or
mov
in
xor
mov
mov
xorl
punpckhwd
add
mov
adc
mov
or
sub
sbb
aad
mov
and
xor
mov
inc
ret
mov
divl
lds
mov
dec
aad
inc
cmc
ret
ficoml
lcall
or
push
mov
mov
sub
aad
dec
inc
lret
mov
xchg
cs
push
push
dec
push
cltd
mov
pop
mov
mov
scas
xchg
push
mov
inc
cltd
popa
mov
cmc
and
roll
aas
xchg
jecxz
lods
rol
cmp
dec
mov
adc
stos
sbb
or
push
enter
push
ds
fmulp
pop
scas
mov
frstor
mov
inc
jecxz
jae
roll
sbb
out
sub
int3
push
jbe
inc
popa
addr16
adc
jno
mov
ss
mov
scas
or
and
cs
sbbb
dec
sub
fisttpll
popa
push
out
pop
pushl
testl
out
addl
imull
sub
jns
sub
sahf
cmc
xchg
pushw
or
jnp
aam
sub
cmp
imul
sbb
inc
shll
xchg
andl
or
xchg
xor
leave
push
scas
repnz
cmp
cmp
pop
push
xor
xchg
outsl
sub
stos
jnp
in
out
inc
dec
mov
xor
pop
inc
insl
push
outsl
xchg
sbb
in
lcall
dec
mov
es
pop
pop
mov
mov
mov
pmaxsw
dec
jns
push
xor
dec
iret
sbb
mov
sub
mov
adc
mov
fcmovbe
stos
mov
xchg
xchg
add
fwait
xchg
jne
daa
sub
std
loop
pop
cmp
and
pop
shl
push
stos
xchg
adc
and
cmp
test
mov
or
add
push
lret
cmp
add
sub
jl
inc
movsb
xor
mov
inc
fistps
pushf
mov
jae
xor
and
jne
inc
aas
and
mov
jp
add
mov
pop
pop
int3
mov
movsl
in
sbb
lcall
out
or
test
or
pop
push
sub
pop
scas
loop
inc
cmpsl
xchg
subb
mov
gs
pop
push
bound
jns
je
fwait
pop
mov
sub
mov
cmc
mov
mov
sbb
xchg
sub
into
pop
add
popf
inc
sub
sub
adc
rorl
or
into
mov
cwtl
adc
icebp
call
jge
es
dec
cmp
inc
out
fwait
les
xor
orl
cmpsb
mov
inc
xor
cli
lret
jns
scas
fdivrs
in
scas
in
mov
xchg
js
cli
pusha
xchg
negl
pop
add
pop
fs
enter
imul
les
lds
xor
dec
adc
adc
test
outsl
push
test
push
pop
jmp
data16
scas
mov
or
std
jns
outsl
clc
mov
xchg
jo
rorb
imul
jns
popf
sub
cmpsb
les
aas
fdiv
xor
arpl
adc
sub
std
adcl
xor
or
add
and
adc
mov
negl
add
cltd
not
test
ret
sub
test
and
mov
pop
sbb
data16
and
pop
mov
mov
orl
adc
test
push
push
push
pop
ss
dec
adc
inc
push
push
fcom
das
push
sub
sbb
cmp
mov
sbb
ja
xor
and
data16
negl
inc
or
jne
pop
push
pop
adc
mov
or
mov
fisttps
mov
dec
mov
js
jg
fdivr
mov
xchg
repnz
push
push
rclb
data16
dec
out
pop
or
pop
movsb
dec
mov
push
popf
mov
lods
sub
pop
inc
xor
push
sub
xor
push
bound
jge
inc
adc
bound
stos
ljmp
sbb
xor
daa
test
in
ret
adc
mov
or
and
insb
inc
lds
sbb
idivl
or
adc
xor
fldl
clc
clc
inc
into
jmp
sbb
in
leave
jecxz
hlt
movsb
out
xchg
add
shll
cmp
pop
jle
pop
mov
in
es
aam
shlb
shrb
and
jns
pop
push
cmp
add
pop
shll
sub
fcomps
out
out
push
mov
dec
pushf
and
add
mov
ljmp
mov
jo
add
pop
pushl
xchg
test
adc
push
lea
fisubrl
les
ret
inc
dec
mov
stos
cmp
inc
lcall
test
xchg
mov
sbb
shll
cmpsb
and
and
xchg
xchg
or
repz
das
mov
nop
cmp
add
sub
pop
shll
mov
addl
int
cltd
jne
mov
mul
movsb
sbb
or
cld
push
sub
in
stos
imul
lods
mov
push
fidivl
stos
dec
jns
js
lret
mov
mov
icebp
bound
pop
xlat
xchg
mov
lret
jmp
jb
inc
cmp
test
xor
inc
jno
add
xchg
daa
testb
push
int
push
ret
out
push
out
sub
and
mov
jge
hlt
xlat
adc
loopne
movsl
outsl
cmpsb
jg
pop
sbb
or
cmp
repnz
mov
jge
popl
or
lcall
inc
jbe
pop
inc
pop
int
jae
adc
push
cmpsl
cltd
test
lcall
and
icebp
insl
je
dec
jp
daa
ljmp
fsubrl
mov
sbb
shlb
jo
push
out
dec
push
add
jo
fucomi
testl
pop
call
jp
outsb
outsl
cld
or
mov
push
sarl
fwait
in
cmpsb
popa
in
orl
xchg
fdivs
adc
cmc
or
adcb
jnp
sahf
push
xor
mov
fcoms
lds
push
test
sbb
insl
xor
aaa
add
imul
popf
mov
stos
out
insb
push
xchg
jecxz
fs
lahf
call
into
mov
sbb
outsb
dec
xchg
mov
inc
jne
arpl
or
sbb
sub
adcl
mov
cmp
or
dec
push
lea
arpl
mov
pop
push
daa
mov
sbb
out
push
mov
mov
ret
test
js
testl
cmp
hlt
adc
and
jp
fstpl
data16
add
jle
outsl
repz
mov
pop
aaa
mov
jecxz
jnp
subb
jno
shlb
fsubp
pop
xlat
push
pop
or
sbb
stos
inc
adc
cmp
mov
mov
xor
or
push
imul
addr16
add
xor
in
stc
cmc
jp
sub
mov
fiaddl
inc
mov
push
xchg
sbb
in
fs
dec
sbb
out
cmc
push
mov
shrb
cmp
dec
push
pop
aam
icebp
loopne
xor
movsb
sbb
mov
add
jne
jo
and
movl
jno
movsb
sbb
dec
and
out
out
movsb
mull
fsubrl
lds
int3
dec
mov
mov
ja
int
jle
lods
pusha
test
fwait
or
mov
data16
rol
icebp
jl
outsb
xor
fsubrl
mov
cmp
andb
mov
stos
cld
movsb
xchg
mov
mov
sbb
mov
jle
test
jae
and
scas
sub
call
sub
xor
sub
inc
pop
lahf
ret
dec
push
stos
and
pop
pop
jg
inc
inc
mov
ret
mov
subb
mov
adc
add
inc
add
pop
push
shrb
aas
mov
ror
and
push
pop
loopne
lret
cmp
xor
aaa
pop
inc
leave
and
mov
sbb
pusha
xchg
or
mov
fldcw
adc
ss
mov
les
jg
cmp
and
lods
ret
hlt
lea
jl
scas
mov
xor
je
or
loope
in
mov
add
addr16
push
or
imul
cmp
hlt
in
fnsave
push
adc
lds
outsl
shll
int
ret
jmp
dec
cwtl
push
mov
jo
add
push
stc
iret
icebp
push
lret
daa
jo
inc
pop
clc
imul
dec
imul
or
packsswb
in
pop
mov
aas
adc
mov
adc
push
lds
push
test
mov
mov
inc
xorb
scas
outsb
jo
cmpsl
push
fmull
enter
xchg
mov
sub
and
js
mov
lods
push
mov
in
xchg
xchg
mov
push
dec
dec
popa
pop
push
mov
mov
jl
ja
dec
sub
or
or
in
or
cld
pop
incb
into
xor
lret
pop
mov
and
in
push
fiaddl
movsb
inc
or
sub
arpl
in
out
pop
xchg
inc
loop
jnp
std
dec
or
sbb
mov
xlat
cmc
inc
adc
sbb
fcomip
adc
push
xchg
xchg
imul
leave
dec
mov
sub
cmp
popa
insb
push
cmpsb
dec
xor
and
adc
mov
cmc
pop
pop
push
and
dec
pop
xchg
ja
fcmovnu
xor
fs
sti
stos
cmp
mov
and
ret
fisubl
shlb
mov
ret
pop
addr16
inc
sbb
jecxz
add
roll
or
lods
mov
mov
es
pop
test
adc
loopne
sbb
mov
xchg
jo
mov
das
outsl
loopne
fcmovnb
sbb
ret
loopne
sbb
call
leave
push
loop
rorb
push
inc
sbb
inc
push
cmp
sahf
and
jb
test
jp
mov
push
jge
insl
xchg
pop
mov
dec
mov
pop
add
sub
jge
mov
mov
mov
jbe
loope
xchg
pop
mov
push
imul
jo
adc
lods
scas
out
push
int3
mov
in
jmp
pop
pop
pop
fdivr
mov
enter
pop
std
or
lock
pusha
and
repz
add
pop
dec
xchg
inc
mov
dec
mov
inc
cs
int3
cs
sbb
addr16
sub
in
int3
out
xchg
cmp
mov
sbb
push
mov
cmp
dec
outsb
aas
scas
jno
add
sub
cltd
xchg
adc
inc
or
vdivpd
outsb
cmp
jmp
icebp
sbb
adc
mov
xchg
xor
popa
mov
xchg
jmp
lock
cld
and
icebp
ds
addr16
outsl
dec
add
orl
mov
cmp
in
ss
pusha
sub
push
cs
mov
push
in
sbb
push
cmpsb
jmp
sub
push
add
jnp
dec
jb
jno
lret
out
xor
shrb
adc
pusha
sub
test
push
and
adc
jae
and
popa
mov
pop
adc
sti
inc
test
or
mov
js
leave
and
test
cmpsb
mov
mov
mov
pop
out
mov
sbb
icebp
in
xchg
lock
stos
lock
outsl
sub
rorl
push
ja
repnz
and
mov
cs
pushf
mov
push
push
adc
icebp
jo
jp
jns
sub
inc
mov
dec
mov
sbb
lods
jmp
pop
or
lahf
in
jmp
fildll
jbe
repnz
les
push
xlat
push
push
jns
stos
mov
into
add
shrl
fildl
inc
ss
fs
scas
repnz
outsl
sbb
into
data16
pop
xchg
dec
mov
fdivrl
xor
cmp
movsl
sbb
pop
add
movl
fcompl
mulb
mov
dec
sbb
xor
movsb
jl
dec
daa
cwtl
fwait
and
push
or
das
cs
daa
movsl
pushl
inc
sub
out
lock
hlt
push
xor
sti
lods
fs
or
cmc
lret
jne
lret
out
in
cmpsb
and
rcpps
xor
push
push
mov
xchg
cmp
aas
jge
stos
xchg
inc
cmp
aaa
movsl
ja
inc
pop
daa
hlt
ret
sarl
adc
movsb
mov
minps
test
mov
leave
out
notb
loopne
pop
rolb
jae
xor
pushf
ret
adc
sahf
xor
mov
inc
out
inc
mov
sti
mov
mov
mov
mov
sti
cld
adc
into
jae
ret
inc
ret
mov
dec
push
pop
xchg
lcall
rcl
jmp
shlb
and
enter
gs
pop
jmp
mov
xor
es
sub
out
mov
inc
mov
fbld
adc
inc
jae
pop
clc
pop
sbb
add
push
cmpsb
and
mov
mov
shld
ffree
sbb
gs
icebp
adc
xor
faddl
lods
sub
and
pushf
dec
data16
push
mov
xchg
jmp
pop
dec
dec
movb
insl
inc
aas
in
mov
mov
mov
sub
xlat
cs
pop
mov
cli
jo
aad
xor
mov
sub
aad
xor
pop
pushf
mov
daa
mov
outsb
fyl2x
stos
pop
sbb
adc
add
adc
mov
mov
test
out
ret
shlb
mov
out
push
loop
xchg
subl
testl
pop
data16
clc
in
jecxz
aad
sbb
in
cmove
jp
lods
movb
sub
jle
and
in
cmp
fstpt
stc
dec
sbb
nop
clc
pop
mulb
pushf
mov
jmp
sbb
push
je
je
test
mov
dec
and
jge
pop
dec
fs
inc
dec
lcall
ss
dec
nop
fmull
cmc
jecxz
int
xor
ret
rcll
inc
push
fildll
lret
pusha
leave
jno
cmp
sbb
cmpsb
hlt
test
mov
jo
push
ja
dec
xor
jmp
sti
sbb
lds
jp
add
in
fcompl
push
adc
mov
mov
pop
or
jae
and
shll
dec
mov
push
xor
icebp
aam
sub
sub
adc
pop
popf
sar
or
xorps
or
push
loop
lock
jbe
pop
pop
std
and
shlb
push
ljmp
cmp
loop
arpl
repz
mov
sub
out
push
add
in
pop
push
aas
aam
xchg
dec
xchg
cmp
xor
push
mov
mov
push
xchg
adc
cmp
xchg
push
dec
bound
in
test
iret
vandnps
and
jecxz
fwait
and
arpl
add
and
inc
bound
sbb
mov
mov
cmp
pusha
pop
lahf
divl
mov
fisttpl
mov
sahf
inc
inc
adc
pop
mov
add
jge
xor
in
mov
jg
sub
pop
into
daa
dec
or
inc
push
outsl
in
stc
xor
mov
mov
adc
rcll
lahf
je
pop
mov
and
outsb
notl
sarb
iret
or
adcl
mov
push
test
ds
sub
loop
mov
mov
aam
cmp
jnp
mov
into
jmp
or
or
push
push
inc
inc
sub
inc
pop
out
push
push
or
in
cmp
inc
sbb
frstor
iret
mov
xor
lret
insb
shll
mov
cmpsl
les
mov
insl
add
out
dec
inc
cmpsb
xor
out
push
sbb
push
sbb
in
jmp
sahf
cmpsl
and
shr
or
cmp
inc
jbe
in
mov
out
sbb
dec
cwtl
lea
das
int
cmpsl
sahf
mov
fmul
push
cmpsb
fstpl
test
cmpsb
testl
bnd
sub
cld
adcl
nop
sysexit
add
aam
xchg
fistl
and
dec
jecxz
insb
jp
out
cwtl
inc
xchg
sub
mov
sbb
call
inc
xor
xchg
sbb
mov
inc
cmpsl
mov
dec
push
aam
adc
rcrl
mov
ljmp
dec
ds
inc
call
stos
inc
test
icebp
aaa
pop
jecxz
int3
jl
int3
cmp
popf
mov
jb
xor
cld
sbb
aad
ljmp
or
out
dec
xchg
cmp
test
sbb
lea
imul
push
loope
ss
pushf
xlat
mov
sub
hlt
inc
lahf
call
aam
jg
push
and
in
xchg
jo
outsb
mov
adc
adc
ja
test
stos
cmp
shl
or
push
push
mov
bswap
mov
add
call
and
in
dec
mov
pop
ds
jp
cli
addb
icebp
imul
pushw
push
pop
popa
mov
mov
adc
lahf
and
std
push
sbb
mov
xor
xlat
push
push
inc
xor
xor
mov
in
cs
mov
mov
pop
push
sbb
cmp
pop
lcallw
lods
cmp
popf
dec
and
popa
scas
jne
adc
lcall
lret
popa
mov
mov
sti
pusha
rcrl
dec
sbb
testb
test
nop
jae
inc
andb
dec
nop
xchg
mov
sbb
jmp
fisubl
cmp
push
dec
adc
out
cmp
pop
shlb
sahf
adc
add
lret
cltd
scas
push
dec
rcrl
adc
test
pop
and
sti
sahf
in
ficoml
and
test
dec
mov
fs
mov
jge
jge
mov
loopne
push
fs
js
inc
jmp
cmp
mov
add
int
mov
dec
in
and
les
imulb
mov
test
addr16
in
loopne
sub
lods
xor
daa
sub
lret
ja
imull
aad
xchg
xchg
nop
sub
gs
jnp
adc
outsl
lds
xchg
sub
push
pop
xchg
outsb
repz
push
cmp
mov
jecxz
jg
iret
mov
mov
mov
sbb
ss
stos
inc
stos
stc
mov
pop
call
fwait
popf
mov
xchg
in
jl
mov
jne
xchg
test
out
adc
movsb
mov
sub
push
loopne
inc
push
fistl
jg
add
mov
out
push
push
aaa
aad
jecxz
lahf
sti
jg
mov
aam
push
and
test
mov
mov
pusha
dec
sbb
jmp
push
push
jbe
aaa
gs
jo
inc
fs
jnp
scas
repz
divb
sets
inc
daa
sarl
mov
jnp
adc
xor
jge
out
imul
call
jns
mov
push
lea
int3
dec
or
lods
cmp
out
mov
loope
mov
or
inc
loopne
mov
test
addr16
and
xor
push
sbb
mov
xor
xchg
pop
sub
cmpsb
in
mov
sbb
mov
push
push
push
andb
xchg
fisubl
fidivs
lods
inc
mov
and
lret
sbb
mov
imul
std
movsb
dec
xorb
cmp
mov
movsl
mov
sbb
sub
dec
xlat
daa
mov
dec
ja
mov
or
mov
fmuls
jo
divb
push
xorb
lret
test
ror
fcoms
push
dec
mov
dec
scas
jmp
cmpsl
mov
ret
out
mov
cld
jo
js
je
push
jnp
adcl
mov
mov
fcoml
push
fists
out
in
adc
sbb
out
dec
dec
sbb
mov
mov
fstpl
xchg
mov
xchg
sahf
push
aas
mov
jne
rcrb
addr16
dec
inc
in
push
lea
jmp
jnp
inc
enter
mov
fisubrl
scas
mov
repnz
jge
stc
cmpsl
xchg
cmp
mov
orb
imulb
stc
inc
mov
cs
cmpb
vorps
fwait
inc
cmp
push
cmp
incl
adc
fbstp
shll
insl
and
jmp
out
in
jp
sbb
ss
stos
jo
sbb
insb
iret
xor
push
jecxz
jle
hlt
ficompl
jo
out
sub
sub
adc
mov
dec
jg
aaa
jmp
je
insl
or
test
adc
jmp
mov
mov
insl
repnz
ja
aam
add
sbb
add
cli
scas
mov
movsl
jns
test
mov
dec
scas
and
lds
test
std
mov
dec
lcall
fldenv
mov
or
jmp
pop
ret
push
jmp
or
xchg
inc
stos
jne
mov
shrb
jmp
mov
in
cli
mov
adc
or
fs
aaa
mov
adc
xchg
roll
addb
call
mov
lahf
and
cmpsl
mov
xchg
sbb
fldln2
mov
stos
add
sub
fcoms
lret
mov
jno
xchg
cmp
jno
jno
addr16
enter
loopne
push
pop
ljmp
inc
push
stc
or
push
jge
xor
sub
cmp
or
sti
lds
dec
push
cltd
test
jmp
loopne
mov
lds
in
or
loopne
enter
icebp
loope
iret
negb
rcr
xchg
popa
or
outsb
xor
add
sub
jle
fmuls
inc
scas
outsb
je
cmp
cli
push
jb
sub
shr
and
lea
cmpsl
out
fcoms
popa
jmp
jecxz
ljmp
mov
jns
or
cltd
aam
sub
push
adc
pop
jae
mov
fisttps
movsl
test
loop
lock
and
add
sbb
sbb
dec
roll
sub
mov
lock
mov
mov
sub
daa
lcall
fildll
jae
adc
hlt
mov
imul
or
jl
jb
cmp
aam
jge
and
jo
pop
call
jg
mov
dec
call
mov
rolb
int3
mov
cli
push
scas
mov
pop
dec
repnz
lcall
imul
or
ljmp
adc
frstor
push
rol
adc
or
mov
mov
mov
mov
adc
and
int3
pusha
and
in
lahf
cmpsl
push
cmovs
jg
mov
fnstcw
cli
imul
lock
dec
roll
idivb
stos
popa
sbb
ja
out
lcall
xchg
pop
ljmp
icebp
insb
adc
or
imul
in
or
xchg
sbbb
or
loope
add
xor
xchg
sub
mulb
in
inc
stos
mov
shl
pop
mov
arpl
nop
lcall
loope
push
push
cmp
lods
fcos
stc
cmpsl
test
fwait
adc
data16
adc
sub
pusha
cmp
bound
aaa
mov
jnp
mov
jl
mov
mov
ffree
push
iret
gs
push
mov
xor
mov
jae
and
pop
int
cs
adc
adc
ja
ljmp
sbb
xor
arpl
pop
or
out
test
movsb
ficoml
fiadds
add
sbb
shlb
push
or
xor
and
and
xor
addr16
test
sbb
ja
xchg
adc
mov
dec
dec
push
mov
adc
divl
jno
pop
out
mov
cmp
jno
sub
daa
leave
mov
add
push
fsubs
test
push
xchg
test
pop
mov
fwait
sub
xor
add
aaa
mov
jns
add
addl
dec
stos
ret
fadd
cmc
cmpsb
mov
push
jg
jb
cmpsb
inc
aad
xor
jmp
cltd
mov
inc
mov
roll
icebp
int
adc
insl
js
test
outsb
cmp
mov
xor
jno
and
sub
icebp
adc
pop
bnd
push
cmc
test
cmc
loop
mov
lock
ja
jmp
lea
inc
pop
leave
pop
adc
test
sbb
mov
xchg
push
sbb
mov
push
pop
mov
cld
mov
xor
cli
enter
pop
jmp
fdivrs
and
subb
pop
mov
in
push
pop
xlat
sbb
in
movsb
mov
test
xor
pop
inc
int
sub
pop
mov
decb
mov
add
push
dec
and
add
pushf
pop
and
out
xchg
testl
adc
bnd
add
xchg
and
mov
xchg
ret
jno
mov
lahf
std
les
in
or
ljmp
mov
mov
aas
in
pushf
push
add
aaa
movsb
loop
inc
mov
cli
add
repnz
and
popl
cmp
sahf
inc
cmp
daa
adc
add
jmp
pop
add
or
adc
adc
xchg
mov
adc
mov
imul
pop
pop
xlat
push
daa
or
shlb
push
xor
lahf
mov
icebp
cmp
shlb
shlb
sub
test
dec
add
lret
mov
pop
jne
mov
sahf
roll
mov
xor
mov
jge
add
lods
jbe
stc
rorl
inc
jl
sti
fistpll
sbb
cmc
int3
dec
movsl
pop
mov
jno
rcl
inc
xchg
faddl
and
lea
mov
cmp
push
sub
sub
mov
jle
mov
fidivl
ret
add
mov
mov
xchg
in
sbb
or
mov
sub
jnp
xchg
xchg
insl
andb
mov
jle
outsl
cmp
push
jbe
mov
jno
sbb
add
in
mov
mov
iret
sub
into
out
add
incb
mov
fsubs
mov
pop
cmpb
push
sarl
addb
jg
repz
cmp
decl
lcall
and
xor
adc
mov
push
stos
popa
xlat
jmp
outsl
ljmp
and
fsubl
push
movsl
fldl
repz
clc
lret
test
xchg
pop
out
mov
jge
and
scas
cwtl
clc
scas
sub
out
lods
jle
cmc
movsl
aam
jno
fadd
stos
lock
dec
pop
movsb
adc
inc
cmc
stc
dec
sahf
pusha
push
shlb
add
lea
xchg
fucomp
mov
bnd
sub
push
dec
jb
mov
mull
outsb
out
xor
pushf
pushf
push
inc
movsl
sbb
xchg
aam
dec
mov
or
shl
ss
outsl
and
mov
inc
pop
cmp
ficompl
and
pusha
dec
dec
iret
mov
inc
mov
sub
add
inc
mov
mov
iret
push
add
cs
int
fdivs
xor
sti
movsb
ljmp
clc
and
sbb
jno
add
jle
mov
faddp
xchg
adc
imul
push
in
std
rcrl
or
push
popa
dec
pop
repz
lcall
dec
fimuls
xchg
inc
in
cmpsb
imul
jbe
lds
adc
cld
pushf
enter
rcrb
fimuls
mov
and
addb
mov
push
les
imul
fidivl
mov
xor
shll
fstl
sub
or
iret
xchg
ja
into
pusha
adc
icebp
adc
jnp
xchg
push
arpl
lret
cmp
adc
cmpsl
pop
pop
into
add
lret
sti
xchg
pop
xchg
mov
mov
leave
xchg
aaa
pushf
test
dec
push
cmp
add
out
imul
add
filds
std
je
cltd
mov
cld
lods
out
add
ljmp
jns
shlb
pop
ficompl
jbe
cmpsl
imul
dec
jae
icebp
arpl
xchg
jmp
shrb
push
jb
xor
and
mov
ficoms
fsubl
dec
fs
pop
cmp
fdivr
sbbl
leave
xchg
adc
jg
jmp
add
mov
sbb
test
sbb
push
mov
xchg
ss
sub
mov
call
inc
or
cmp
pushf
std
mov
sub
and
cli
dec
mov
pop
ljmp
or
push
ljmp
dec
bound
mov
test
adc
add
daa
pop
mov
mov
pop
cmp
out
loopne
add
mov
je
in
jp
fcoml
dec
fsts
push
insb
lods
push
lock
or
loopne
jle
cld
xchg
shll
pop
outsb
int
dec
pushf
jge
jp
movsl
pushf
dec
mov
pop
sub
cmpsb
mov
and
push
mov
adc
mov
xchg
repz
cmp
iret
jbe
fcomip
ja
push
popf
xchg
in
cmpsb
mov
xor
or
adc
push
lock
sbb
or
push
xchg
pop
pop
mov
xchg
adc
xchg
gs
add
inc
jl
xor
jb
fisubrs
mov
xchg
inc
mov
test
movsb
adcl
sub
lds
jp
div
pop
mov
inc
xchg
sub
sub
mov
push
lds
test
fbstp
cmpsb
lods
mov
in
subl
les
mov
outsb
sbb
xchg
scas
or
loope
push
icebp
cmp
sarl
test
outsb
pop
insl
sub
roll
xor
lock
mov
pop
pop
int3
pop
and
les
mov
rorl
fadds
push
xorl
popa
push
pop
out
dec
subl
out
inc
in
loope
std
mov
pop
pusha
out
sub
and
mov
rolb
sbb
jb
jl
mov
xlat
lds
lods
into
mov
xchg
bound
aad
incl
stc
insl
mov
pop
in
loopne
popa
xchg
cmp
das
leave
fistl
adc
pop
sub
incb
inc
and
mov
cld
push
out
pop
xchg
jp
push
jae
cmp
imul
cmp
or
jl
fxch
pop
outsb
add
das
mov
push
pushf
jmp
jge
bnd
jmp
outsb
adc
ss
xchg
loop
mov
cwtl
fisubrl
mov
sub
mov
adc
dec
stc
sarb
cmp
add
sub
cmp
mov
dec
mov
adc
mov
cmpsl
fisubl
repnz
pushf
xchg
jle
inc
out
xor
lret
outsl
push
xor
fnstcw
loopne
add
es
fs
jnp
jns
mov
out
cmp
shrl
dec
imul
mov
out
popf
aad
lds
lcall
adc
int
out
hlt
dec
inc
sbb
pop
pop
dec
ljmp
popf
aas
inc
pop
jl
dec
icebp
mov
mov
icebp
push
cmp
scas
xchg
adc
fdivrl
mov
outsb
stc
loop
mov
or
inc
mov
sarb
or
negl
pop
mov
sub
sbb
mov
push
dec
js
sub
int
add
popa
movl
fs
push
push
test
mov
mov
jnp
inc
jecxz
in
jecxz
test
sbb
ret
mov
fwait
jp
ret
mov
jbe
push
sub
xchg
sub
and
fstps
into
pop
imul
scas
adc
ret
mov
adc
and
shll
gs
dec
adc
out
adc
adc
push
enter
stc
inc
ljmp
mov
xchg
jle
sbb
hlt
outsb
xor
jmp
rol
jb
mov
push
notl
int3
clc
out
inc
or
inc
xchg
mov
jmp
xchg
mov
insb
pop
aaa
cld
repz
and
sahf
addl
outsb
sbb
shr
mov
inc
lods
outsl
leave
mov
loope
mov
out
mov
into
or
jle
fsts
mov
xchg
push
testb
test
add
cmp
pop
add
sbb
iret
cmpsb
sbb
je
xor
loop
loope
addr16
lret
data16
arpl
fstl
shlb
andl
das
outsb
mov
inc
outsb
into
iret
dec
inc
fisubrl
inc
sub
pop
in
jp
sub
fwait
mov
sbb
out
sbbl
mov
pop
mov
mov
pop
andl
mov
insl
inc
adc
adc
inc
enter
xchg
in
mov
cwtl
and
xor
add
mov
jl
adc
rcr
int
daa
add
dec
loopew
adc
stc
gs
lret
ds
inc
xor
repz
repnz
lods
pop
rcll
fucomip
sbb
jmp
cmpsl
in
jmp
movsl
das
testl
out
and
rorb
and
push
rcl
inc
sub
popf
outsl
push
shl
lret
stos
pop
push
leave
call
clc
pop
iret
sub
xchg
shr
loopne
arpl
fstpt
sbb
jb
push
out
outsl
xchg
fbld
shlb
cmp
jmp
cmpsb
xchg
ds
hlt
adc
out
xchg
xor
ds
jecxz
stos
mov
psrlq
cltd
cmp
mov
pushf
repnz
cmp
sti
shrb
add
dec
pop
mov
movsb
adc
aaa
imull
js
ja
imul
pop
push
xor
xchg
xor
adc
mov
ret
mull
mov
mov
stc
dec
inc
aad
pop
dec
enter
xchg
cmp
cmc
das
adc
inc
xchg
inc
cltd
or
adc
shlb
pcmpeqb
call
lahf
in
xchg
dec
mov
pushf
add
xchg
icebp
cld
cmp
out
or
arpl
adc
jle
sub
in
push
test
in
cld
loope
dec
sti
jle
int
adc
dec
shlb
sub
sub
lret
jne
sub
les
addr16
mov
fnstenv
addr16
repz
nop
aad
xchg
add
lahf
fdivrp
xchg
mov
mov
sbb
loop
or
cmpsb
jp
push
dec
mov
xchg
int
mov
xor
sub
in
jge
mov
ret
xor
popl
add
stos
outsl
push
lock
js
std
sub
test
mov
imul
lret
pop
xchg
jmp
and
jne
adc
pop
xchg
pushf
and
aad
stos
int3
sub
xor
cmpl
roll
int3
lret
inc
adc
xor
lret
xchg
mov
mov
or
sub
inc
mul
mov
rorl
inc
aam
adc
cmove
out
add
cli
mov
flds
sub
aad
pop
or
mov
cmp
dec
xchg
add
jmp
inc
ret
in
cmp
rolb
shlb
dec
rcrb
xchg
jle
cmp
mov
mov
fisttpll
cld
push
std
inc
repz
xor
xchg
jecxz
and
sbb
jecxz
stos
in
jmp
push
lret
lds
and
cmpsl
stos
ss
cld
mov
sarb
adcl
ljmp
mov
outsb
aas
dec
sti
xchg
cmpsl
add
scas
js
push
aaa
add
jnp
aad
mov
cmp
enter
imul
fmuls
daa
daa
xchg
sarb
in
enter
out
mov
fxch
adc
and
jmp
inc
nop
or
fildll
dec
in
sbb
pop
mov
sub
jb
and
jecxz
mov
fisttpll
mov
ljmp
lock
sbb
test
or
or
push
xchg
mov
push
fbld
jnp
mov
mov
ficoml
xchg
pop
sub
loop
scas
jae
out
adc
jl
push
mov
pop
sbb
cmp
mov
xchg
cmp
add
pop
inc
mov
push
mov
sbbl
adc
adc
jle
jbe
sbb
outsb
imul
jae
loope
mov
outsl
ss
repnz
repnz
jg
sbb
lcall
sbb
jb
mov
iret
lods
push
mov
in
xchg
sbb
jb
std
shll
inc
in
mov
outsb
xor
push
int3
fwait
sbb
xchg
adc
ret
inc
fnstcw
push
dec
rclb
mov
movsl
les
loope
mov
ss
fwait
mov
xorb
test
jb
adc
fcomps
mov
and
loop
push
leave
dec
fiaddl
inc
hlt
rcll
jae
adc
aaa
mov
mov
js
cmp
cld
and
lcall
js
push
cwtl
popf
and
int
cmp
xlat
sub
lock
mov
mov
jmp
scas
sbb
push
icebp
scas
mov
adc
jnp
adc
mov
or
dec
lock
push
pop
ret
xchg
jns
and
or
adc
mov
daa
nop
sbb
mov
push
mov
mov
xor
rcrb
int3
ja
mov
adc
cmp
addr16
lods
adc
xchg
sbb
arpl
andl
shrl
jge
or
push
pop
in
scas
pop
mov
inc
pusha
test
jns
or
rolb
xlat
das
and
add
fldcw
fbstp
sahf
testb
loopne
adc
jno
push
adc
mov
mov
outsb
fcmove
clc
push
mov
out
push
aaa
pop
out
inc
in
mov
mov
push
int
push
in
inc
inc
test
scas
xchg
push
mov
leave
sbb
movsb
pop
aad
push
fidivrl
enter
inc
mov
fwait
sahf
jge
sbbl
inc
push
out
stos
out
mov
imul
inc
sub
decl
pop
insb
inc
pop
push
mov
or
push
imul
outsb
cmpl
ja
push
loopne
mov
and
and
rorl
or
mov
sbb
jge
movsb
push
and
sarb
inc
jb
mov
daa
ffree
shlb
std
dec
test
in
mov
xlat
mov
aad
xor
inc
bound
je
ret
rolb
cwtl
jle
push
push
dec
push
sub
aam
lcall
imul
mov
mov
xor
pop
lods
xor
mov
in
dec
xor
jb
into
stos
xchg
mov
push
jns
lds
add
cmp
cli
sbb
bound
dec
pop
add
cmpsb
mov
cwtl
jmp
test
add
adc
nop
mov
sub
stos
int
imul
fcmovnb
je
bound
xchg
push
jno
adc
ja
inc
das
cmp
xor
dec
outsb
shll
std
shrb
xchg
or
mov
xchg
inc
aad
fisubrs
fdivrs
jle
inc
pushf
xchg
shrl
or
dec
cmp
pusha
or
pop
mov
mov
add
adc
lods
adc
jb
les
fnstenv
repnz
inc
push
arpl
sub
aas
stos
mov
cmp
lcall
sub
aas
cli
daa
jecxz
cld
cmp
fimull
nop
pushf
fsubrl
adcb
push
cmp
insl
ja
dec
faddl
and
sub
ss
stos
push
cwtl
loopne
mov
int
loopne
fxch
fisubl
fmull
cmp
sahf
inc
or
push
inc
cltd
fwait
or
cmp
add
inc
aam
pop
sub
loope
in
push
cmp
or
lret
ljmp
shll
pop
icebp
pop
test
movsl
mov
inc
sti
xor
jp
ficoml
mov
push
test
dec
out
outsl
je
clc
xchg
xor
mov
mov
jecxz
rcll
addr16
movsl
or
cmp
sbb
adc
icebp
push
addb
cli
mov
imul
sbb
mov
xchg
cli
jge
jg
fidivrs
adc
xchg
mov
mov
loope
adc
es
sbb
push
xchg
filds
lahf
fiaddl
dec
mov
mov
stc
testl
mov
arpl
mov
inc
or
pop
les
mov
dec
pop
movsb
jp
loopne
lret
add
dec
dec
push
shll
xor
push
add
outsl
repz
pusha
test
lret
mov
sbb
jne
lret
into
cmp
aas
cs
adc
mov
jmp
lret
cmp
loope
mov
pop
test
inc
lock
pusha
xor
repz
xor
dec
in
push
and
mov
out
add
cs
movsl
pushf
jmp
xchg
arpl
xchg
sub
out
mov
xchg
lahf
adc
cmp
pop
push
mov
xchg
sahf
test
or
inc
add
dec
or
cmp
loopne
pop
jnp
push
cmc
jo
xor
lcall
iret
jl
das
scas
sub
inc
lcall
xchg
flds
ds
in
stos
cli
sub
roll
cmp
inc
jnp
pop
pop
inc
mov
mov
test
mov
pop
xchg
adc
cmp
out
xor
sbb
sbb
call
xchg
scas
in
or
sbb
rolb
fldl
test
shll
ljmp
jns
and
cmp
pushf
cmp
xor
out
dec
xor
push
jge
lds
cltd
mov
pop
shrb
jge
xchg
jp
mov
lcall
cmc
imul
popf
xchg
push
idiv
dec
lods
push
mov
stos
and
mov
iret
push
inc
pop
xor
nop
out
fisubrs
adc
clc
pop
ljmp
dec
add
jmp
jl
orl
in
pusha
aaa
add
push
insl
adc
cld
mov
inc
sub
lret
or
subl
lds
lret
xchg
loope
loope
fs
inc
sbb
sbb
test
mov
cltd
lock
adc
xor
fdivl
adc
iret
jp
loopne
push
push
sbb
lahf
cld
dec
xchg
arpl
or
pop
ja
or
and
lds
xlat
jno
jl
or
cwtl
adc
test
repnz
enter
inc
rcrb
xor
mov
out
movsb
pop
mov
cmpb
sub
push
std
pop
das
pusha
stc
mov
jl
push
cmp
aaa
inc
mov
shrl
sbb
movsb
notb
inc
jnp
pop
insb
shl
push
out
inc
ja
mov
cli
push
jb
es
inc
cwtl
xchg
cmc
and
mov
stc
cwtl
imul
mov
push
add
stc
mov
je
lret
push
test
movsb
pusha
push
daa
mov
pusha
shl
push
fistl
pop
bound
out
fwait
jmp
lcall
pop
xchg
aad
leave
repnz
cmp
in
or
cmp
es
std
int3
sub
ret
sub
mov
mov
rcr
add
out
jbe
stos
jnp
hlt
jns
fsubl
mov
jl
mov
or
add
imul
mov
aas
adc
inc
adc
fimuls
mov
dec
pop
xchg
mov
jg
xchg
pop
mov
cmp
sub
push
rcr
movaps
bound
and
jmp
sahf
das
nop
clc
outsl
lahf
pop
or
das
xlat
sub
or
lods
sub
xor
pop
inc
mov
lds
rol
dec
cmp
out
and
jnp
inc
dec
push
ret
and
push
testl
repz
call
mov
je
into
hlt
xchg
fiadds
std
push
jb
cwtl
push
int
ud0
es
cwtl
push
test
stos
adc
and
ss
scas
pop
cmp
bound
cmp
movb
fstpl
add
push
or
dec
enter
jecxz
push
or
adc
mov
pop
push
mov
cmc
sbb
push
pop
pop
or
sbb
mov
mov
lret
sub
sub
cmpsl
xchg
adc
ss
push
aad
pop
jbe
sbb
cwtl
pop
mov
cs
loop
push
frstor
pop
mov
pop
cltd
xor
sub
jge
or
popa
sub
jae
sbbl
into
clc
mov
mov
imul
sbb
fcoms
xchg
add
int3
aam
cmpb
icebp
cmp
gs
mov
mov
inc
or
xchg
mov
aad
push
ljmp
and
push
ds
fisubrs
jge
jecxz
push
aaa
in
in
pop
ret
sub
mov
mov
sahf
aad
paddusw
hlt
pop
jo
push
scas
and
scas
stc
fistpl
mov
stos
aam
sub
iret
mov
sahf
jg
jbe
cmp
lds
and
mov
push
add
std
sbb
mov
and
mov
sarl
xor
repnz
scas
mov
cwtl
jge
mulb
inc
outsb
pusha
cmp
push
lret
xor
pop
sub
jo
and
shll
lret
xchg
xor
ret
push
pop
push
inc
cmp
stc
pop
adc
loope
dec
lods
addr16
loope
mov
rolb
cld
jae
call
loopne
or
inc
ret
sbbb
into
mov
lods
in
stos
lds
in
sti
xor
jae
mov
pop
push
fsubrp
int3
mov
outsb
xor
lods
or
xchg
dec
inc
inc
xor
hlt
jno
outsl
pop
icebp
mov
jns
xchg
stc
aad
or
add
out
fcomi
and
mov
popf
daa
xor
clc
divl
sub
inc
in
cmp
ljmp
add
dec
pop
mov
push
in
ljmp
movsl
dec
shr
ja
outsb
mov
das
aad
xor
mov
fadd
rcl
push
jp
mov
stos
xor
sar
jne
sub
cmp
fsubp
int3
pop
add
test
xchg
xchg
lret
sahf
rcrb
mov
dec
aam
add
insl
inc
test
cwtl
and
mov
cltd
lds
mov
test
dec
and
out
jb
jg
xor
push
clc
fsts
jmp
aad
jmp
insl
push
cs
pop
clc
ret
std
outsl
push
lret
sub
cs
pop
pminub
mov
xchg
sub
aad
inc
inc
jno
mov
in
adc
and
and
jp
test
cmp
cmpsl
imull
mov
stc
mov
sarb
adc
mov
js
scas
adc
inc
mov
ljmp
lea
push
pop
test
shll
imul
sub
push
std
add
or
add
mov
sub
aad
pop
jb
xchg
jnp
insb
mov
mov
pop
mov
mov
mov
cs
sahf
jl
iret
cmpsb
mov
cli
loop
cmp
push
das
mov
mov
pop
pop
mov
cs
pop
sti
cld
loopne
xchg
shl
xor
lods
push
gs
test
js
jns
xor
out
mov
adc
into
inc
dec
mov
dec
cwtl
mov
mov
dec
in
sub
ret
or
out
pop
lods
sarb
mov
pop
outsb
sbb
dec
cmp
test
fstpt
mov
movsb
js
and
xchg
xchg
int3
mov
fwait
sbb
xorb
cmc
call
popf
add
aaa
xchg
inc
out
gs
clc
pushf
lods
loop
xchg
repnz
add
pop
out
mov
lock
das
rol
mov
das
push
pop
das
pop
or
clc
xor
mov
jecxz
mov
loop
sbb
imul
jge
push
dec
or
push
sub
or
or
out
pop
call
mov
xchg
ds
std
mov
popf
jo
stos
xlat
adc
imul
sbb
and
mov
ret
pushf
cmpsl
dec
mov
data16
js
inc
sbb
cmp
out
mov
pop
rclb
sub
mov
repnz
jge
and
sbb
das
xchg
push
and
jmp
aad
push
stos
adc
xchg
cmp
sahf
xor
les
test
cmpb
adc
xlat
mov
scas
mov
stos
dec
fldt
scas
test
push
stos
add
mov
push
fwait
jl
mov
push
pop
mov
cld
lea
call
cmp
add
js
shrl
outsl
nop
shl
inc
jne
cmp
repnz
xchg
pop
or
dec
mov
sbb
pop
sbb
cmpsl
sub
or
sub
lds
mov
cmp
cmp
sbb
lret
adc
cmp
jmp
repnz
mov
fcmovu
jo
cli
sahf
xor
in
cltd
in
or
pop
mov
add
in
jp
cmp
jnp
and
mov
into
loopne
adc
push
test
jmp
mov
add
pop
jecxz
or
fs
cmp
sub
cmp
outsl
xor
rorb
push
xlat
sbb
inc
mov
sbb
ljmp
jnp
xchg
mov
push
ret
insl
inc
sub
adc
mov
shlb
cmp
cmpb
xchg
insb
inc
in
xor
negb
loop
lret
cmp
leave
mov
insb
sbb
dec
inc
test
cmpsl
in
add
xor
cli
jp
loop
jo
js
mov
push
ret
sbb
jbe
icebp
lock
stos
xchg
pop
cli
jnp
shlb
jns
push
insl
fldt
jno
adc
or
orb
mov
sub
lods
push
or
mov
jge
jle
insl
mov
jecxz
or
lcall
iret
mov
mov
mov
inc
push
bnd
inc
xlat
cwtl
cmp
int
iret
mov
pop
scas
inc
fstl
addr16
ret
iret
std
int3
outsl
pop
movsb
xor
pop
les
push
adcl
jp
or
dec
sarl
cwtl
mov
insl
sbb
mov
pop
sti
inc
jg
xchg
xchg
scas
jle
jno
or
loope
cmp
or
sarb
xor
and
test
or
test
inc
push
sub
adc
inc
fldpi
push
mov
sbb
daa
sti
xchg
jo
repnz
push
ret
xor
mov
fisttps
stc
in
hlt
mov
inc
pop
push
dec
into
lea
and
mov
cmc
mov
mov
jle
insb
nop
or
lret
popa
mov
jnp
test
es
dec
pop
fs
jmp
jne
sbb
add
adcb
inc
stos
mov
negl
int
mov
fdivl
fidivl
push
xor
push
lock
or
pusha
inc
das
aad
mov
sub
xlat
cmp
inc
dec
xor
cmp
xchg
sub
fnstcw
lret
sbb
sarb
cld
loop
js
js
repz
adc
cli
test
addb
inc
out
lock
ds
fwait
pushf
inc
je
adc
leave
jnp
mov
out
xchg
ljmp
or
cmp
xlat
push
mov
xor
pop
int
icebp
mov
shll
ja
xchg
data16
imul
pop
and
ds
scas
cmp
push
inc
test
adcb
jmp
sub
addr16
mov
andb
push
stc
adc
jecxz
push
testl
rcrb
xor
and
stc
data16
sbb
test
sahf
pop
xchg
leave
push
stc
xlat
adc
jp
cmc
jge
inc
xchg
out
aam
data16
lret
ret
push
repz
pop
in
mov
lcall
cmp
add
into
mov
jle
pusha
repnz
dec
pushf
push
adc
jo
fsubrp
sbb
outsl
lcall
xchg
notb
aas
rcrb
ss
cmp
cmp
adc
js
testb
sarb
loopne
out
sti
push
and
loope
and
push
jmp
cltd
pop
or
dec
push
ss
cltd
mov
mov
rcl
and
clc
sub
cmp
jmp
aam
mov
int
mov
test
push
js
xor
dec
xor
scas
push
jmp
xchg
mov
sbb
cmp
scas
push
jmp
xchg
sarl
add
adc
shll
push
sub
cmp
xor
mov
das
fwait
cmp
mov
mov
ja
or
push
test
repz
push
inc
push
int
ror
fimull
call
ret
jbe
xchg
out
sti
xchg
dec
mov
into
and
push
jb
adc
push
cmpsb
in
pop
imul
xchg
inc
lahf
inc
xchg
sub
cmp
test
cwtl
iret
frstor
add
fscale
movsb
jne
fstps
jmp
push
mov
pop
cmp
adc
pusha
sbb
divb
scas
dec
popa
cs
push
adcl
and
pop
jge
outsb
cmc
daa
xchg
pop
mov
pop
or
shl
enter
ds
in
sub
pusha
sbb
jbe
sub
pop
es
je
aam
je
inc
mov
leave
iret
or
mov
je
in
testl
bound
add
pop
pushl
dec
push
fcmovnb
mov
xchg
or
mov
xor
mov
lods
cmc
fildl
das
mov
bound
dec
rcrl
movsb
movsb
sub
jg
dec
add
insb
and
in
scas
stos
inc
or
jns
sbb
lret
dec
mov
shrl
aas
adc
xchg
adc
xor
inc
int
cmc
and
jne
xor
inc
lcall
mov
xor
or
push
and
aas
stos
inc
test
daa
mov
aam
pop
cmp
icebp
dec
mov
xchg
in
jns
cwtl
sbb
mov
and
pop
lds
nop
or
call
arpl
mov
gs
dec
sub
int
xor
push
imul
jg
mov
mov
popa
or
lock
push
faddp
lcall
lea
adcl
and
fsts
sbb
and
add
loop
lahf
mov
mov
fisubrs
add
jmp
repz
mov
xor
pop
adc
push
and
cmp
lods
adc
shll
in
add
push
push
xchg
cmc
test
mov
jne
js
imul
and
or
mov
pop
std
inc
mov
sbb
movsl
insl
imul
test
sbbb
mov
jnp
jg
lea
and
xchg
in
xor
inc
call
shl
fstpt
cld
push
and
pop
ljmp
jbe
stos
sbb
sbb
xor
mov
pop
cmp
int3
xor
push
xlat
inc
jo
pop
mov
jo
lcall
fisubl
dec
pop
ss
push
mov
sbb
xor
or
ljmp
loop
adc
adc
mov
cmp
add
int3
mov
in
shlb
add
jbe
lods
repz
dec
sti
or
and
inc
test
loop
mov
push
add
push
mov
xchg
lock
or
pop
cs
ficompl
test
xorl
push
add
outsb
ljmp
mov
inc
xor
xor
aad
pop
push
jg
cli
fsubr
xor
addr16
fstl
mov
cltd
push
pop
bound
sub
inc
repz
inc
cmpsl
cltd
or
rcrl
inc
dec
lds
loope
fs
mov
pop
cmp
xor
lcall
shlb
call
sub
add
xchg
xor
loopne
hlt
and
jmp
push
or
icebp
mov
jb
scas
ret
and
cli
lret
fistpl
mov
mov
and
pop
cmpsl
push
popf
sub
adc
imul
push
jno
arpl
jle
arpl
mov
jno
les
mov
push
outsl
push
mov
call
out
mov
push
not
xchg
repnz
lods
sbb
imul
mov
stos
das
push
out
pop
cmp
cli
xchg
add
pop
push
mov
mov
das
inc
fdivrl
xor
inc
sbb
dec
push
dec
inc
jecxz
or
dec
loop
lock
mov
jo
pop
fwait
sete
push
shrb
mov
mov
repnz
xor
push
aaa
push
adc
sub
data16
mov
mov
cld
out
inc
pop
in
push
test
inc
cmp
inc
xchg
fs
push
test
cmp
std
out
jg
in
repnz
dec
repz
push
cmp
mov
sub
fwait
mull
mov
ret
in
jp
out
mov
and
aas
add
and
cli
cmp
mov
out
bound
cmp
dec
je
pop
mov
insl
add
cmc
xchg
xor
inc
lcall
push
mov
imul
lods
adc
jmp
mov
sbbb
add
sbb
jae
lret
pop
je
pushf
sbb
es
pusha
xchg
sahf
mov
xchg
push
sub
inc
mov
ja
cmp
mov
aas
xchg
test
sub
lahf
mov
clc
lahf
inc
or
cmp
push
leave
sub
out
add
divb
fstl
dec
or
out
jns
les
mov
push
jp
aas
daa
cld
outsb
ficoms
push
pop
jnp
cmpl
dec
ljmp
pop
fwait
xchg
movl
jo
decb
stc
mov
pop
xchg
cmp
aas
sub
sti
jge
inc
pop
mov
jg
aas
repz
lods
out
pop
push
cmp
jge
bound
pop
data16
iret
fmull
repz
mov
mov
test
sub
insb
std
repnz
shlb
loopne
or
out
pop
push
std
sub
sbb
outsb
mov
pop
jecxz
or
mov
lds
adc
das
push
rcrb
test
jns,pt
push
inc
add
in
mov
bnd
mov
std
jns
add
stos
xchg
lods
clc
jmp
lcall
stc
ds
xchg
bound
xor
pushf
sbb
daa
or
aaa
stos
add
jecxz
pop
daa
lods
or
pop
cmc
cmp
cmp
push
mov
test
addl
gs
mov
pop
mov
adc
cltd
js
add
adc
jecxz
jle
outsb
adc
sbb
into
icebp
test
ret
pusha
addb
xchg
jns
mov
dec
lahf
add
push
inc
cmp
imul
int3
or
arpl
std
scas
incl
imul
mov
adc
or
pxor
shrl
xchg
aas
mov
inc
test
outsb
push
or
xor
out
pushf
xchg
jp
addb
dec
roll
jp,pt
lods
dec
fcoml
sahf
mov
jle
aaa
mov
popa
push
mov
sbbl
xchg
add
bound
push
xor
xchg
shll
add
loopne
sub
loop
movsl
subl
imul
je,pt
repz
sub
rorl
sbb
fs
iret
arpl
jb
stos
loop
sbb
push
add
add
mov
es
fwait
add
adc
fidivrl
lods
std
and
leave
jbe
xchg
je
cmpsb
imul
pop
cld
inc
andl
addr16
jle
ror
adc
gs
lret
sub
push
test
addb
cli
mov
cmp
in
jmp
mov
mov
out
add
shlb
sbb
jge
xor
shrb
loopne
into
in
sub
call
push
lds
mov
fcmovnbe
cltd
mov
lods
mov
pop
fmul
ficoml
js
fisubrs
or
call
ljmp
inc
cmp
aas
xor
pop
pop
mov
mov
lods
mov
addb
xchg
movsb
mov
loop
ja
stos
pushf
popa
js
mov
mov
sbb
mov
fdivrl
mov
sbb
mov
pop
loopne
dec
push
mov
inc
int3
lret
adc
sti
xchg
int3
sub
xor
into
test
and
mov
adc
iret
addw
mov
jno
add
hlt
mov
push
popa
xchg
or
xchg
adc
pop
sub
inc
or
sbb
out
test
ja
mov
repz
xchg
xchg
or
aaa
scas
movsl
or
loop
mov
push
mov
test
cmp
repnz
cmp
xchg
jmp
les
fwait
ja
dec
add
aas
mov
pushf
dec
add
push
jmp
rolb
sbb
cwtl
cwtl
inc
xlat
scas
and
hlt
xorl
movsl
inc
iret
scas
mov
xchg
sub
push
mov
cmp
aad
sub
sub
sub
lods
jle
dec
fisubrl
out
mov
jmp
imul
cmp
test
jb
int
leave
loop
xchg
daa
pop
in
cmp
inc
dec
scas
mov
ja
icebp
in
add
cmpsl
sti
or
sbb
fnstenv
js
xchg
test
mov
lcall
enter
lods
mov
dec
enter
aad
adcb
aam
rorb
xchg
mov
repz
fwait
mov
push
mov
xchg
jnp
push
jo
cmc
jmp
adc
mov
sub
mov
es
aad
jp
fwait
je
mov
bound
fs
mov
add
push
int3
sbb
push
outsb
sbb
imul
stos
cmc
ljmp
insl
sbb
jnp
fwait
xacquire
int
push
sub
test
inc
mov
mov
mov
testl
outsl
out
cmpb
jl
mov
cmp
test
rcl
hlt
mov
add
out
sub
lret
pushf
es
stos
inc
xlat
push
cs
add
incb
lds
push
repnz
jl
inc
and
xor
lahf
fnstcw
pop
dec
or
sbb
rcll
and
cwtl
push
add
sbb
test
sub
lret
dec
add
cmpsb
hlt
add
mov
fs
mov
stc
stos
xchg
push
pop
adc
fbstp
jge
lods
cltd
aas
jno
cmpsl
sbb
or
cli
xorl
shr
and
lods
test
cmpsb
adc
sarb
mov
lock
push
mov
stc
aas
ja
mov
pop
xchg
out
cli
adc
cwtl
xor
add
sub
movsb
out
shrb
fisubs
out
push
adc
mov
hlt
add
dec
mov
push
lock
mov
cmp
adc
sub
mov
popf
rolb
xchg
iret
shr
enter
pop
loope
or
or
mov
push
add
pop
popf
std
ja
or
aas
shll
daa
cmpsl
subl
pop
cs
or
stc
push
push
pop
sub
adc
jno
ret
imul
out
mov
movsl
fadd
lahf
push
fisttpl
loopne
sbb
or
cmpsl
in
lods
mov
xor
rcrb
call
xlat
xchg
or
les
push
outsl
lods
cmpsb
call
icebp
or
loopne
sbb
in
inc
xor
fcmovbe
repnz
scas
inc
pop
and
in
jo
sub
cmpsl
add
sub
ds
jo
inc
mov
lea
mov
xchg
mov
mov
xor
xchg
popa
into
inc
cmp
jp
mov
xor
sub
sbb
and
stos
dec
dec
and
xchg
xchg
sbb
int3
in
xchg
aam
dec
xchg
mov
das
xchg
inc
xchg
cltd
popf
add
incb
push
lea
popf
je
xchg
jne
xor
mov
js
push
loopne
out
adc
insb
sbb
or
or
pop
loope,pt
mov
shrl
test
imul
hlt
repz
pop
mov
sub
in
pop
adc
cmpsb
push
rorl
push
je
jp
jo
rcr
repz
mov
cltd
xchg
orl
xchg
into
in
addr16
push
push
test
mulb
mov
mov
mov
loopne
cmpb
pop
or
lcall
int3
les
add
inc
adc
mov
sub
dec
and
fs
or
xor
lock
cmpl
and
adc
adc
adc
adc
mov
mov
ljmp
cli
pop
in
dec
and
jg
int
shl
sbb
ret
sbb
lret
popa
mov
repnz
mov
out
sti
fistl
ss
push
or
addr16
in
pop
pop
fidivrl
es
mov
jne
ret
int3
lahf
ret
jb
loopne
or
sub
inc
fnstenv
push
lcall
add
or
lcall
mov
sub
xlat
dec
mov
add
mov
or
sbb
shlb
mov
inc
sub
cld
movsb
movsl
adc
mov
outsl
mov
xchg
out
push
sub
pop
sbb
rorl
xchg
daa
ret
and
out
hlt
mov
xlat
fwait
movsb
iret
pop
xor
int3
jno
push
pop
mov
jo
mov
push
or
jb
movsl
movsb
sbb
sahf
in
add
adc
leave
mov
xchg
push
movl
or
pop
mov
lods
push
and
fs
test
cli
adc
cli
push
or
int3
call
push
mov
mov
ljmp
arpl
and
fidivrs
out
out
adc
repz
lret
sbb
cmc
sbb
push
testl
aas
jl
icebp
js
test
sbb
ljmp
addr16
sbb
cmp
fwait
pop
pop
push
andb
fwait
into
lods
push
mov
or
std
push
in
rol
inc
lcall
xor
and
test
mov
xchg
inc
stc
int3
scas
add
pop
mov
mov
mov
pusha
test
cs
dec
inc
in
mov
jmp
adc
out
fwait
adcb
or
ds
inc
cli
imul
sbb
lret
inc
and
out
lock
in
or
and
sub
jl
and
daa
sbb
or
mov
lds
push
mov
jecxz
jne
sbb
mov
sbb
pop
adc
shrl
out
cmp
repnz
mov
call
jg
sbb
xchg
int3
nop
cmc
pop
lods
lea
test
movsb
cld
clc
lret
test
js
jno
in
cmc
test
jp
push
aad
jmp
adc
movsl
scas
dec
dec
cmp
xor
mov
jbe
cwtl
mov
pop
jg
pushf
div
sahf
lcall
adc
dec
push
adc
lock
inc
push
mov
mov
fucom
jns
insl
loopne
cmc
xchg
mov
cmpl
xchg
aam
sahf
inc
lret
sahf
mov
filds
mov
pop
pop
inc
movsl
jno
mov
idivl
xlat
adc
cld
lock
enter
push
sbb
das
or
jb
jb
sub
fwait
jecxz
imul
dec
inc
cmp
repnz
sti
cwtl
loop
aaa
adcl
or
hlt
fs
cld
adc
sbb
packssdw
int
xchg
das
mov
and
push
imul
push
mov
cmp
out
outsb
add
sub
jp
push
pop
aam
cmpsl
gs
cmp
insb
jecxz
fs
fimuls
stos
cmpsb
repz
aad
jge
insb
incb
in
adc
xchg
pop
sahf
xchg
and
mov
aam
sub
sbb
out
mov
jns
rorb
push
jno
lock
in
ficoms
inc
stos
dec
push
test
mov
jecxz
divl
add
mov
addb
pop
sbb
or
jle
je
push
push
addb
pop
and
pop
push
and
in
xchg
hlt
push
inc
add
aad
push
ja
jne
leave
sub
int
dec
in
and
sbb
xor
mov
push
cmpsl
outsb
scas
cmpsb
fwait
lds
fldt
in
scas
hlt
sbbl
es
jb
adc
sbb
mov
adc
jl
clc
mov
xor
add
stos
or
das
jmp
sbbl
mov
out
push
add
sbb
aaa
aam
mov
pop
daa
test
xchg
shl
sbb
cmc
pusha
jae
shlb
iret
ds
lcall
dec
mov
loope
filds
lock
inc
sbb
aad
les
int
xor
sbb
sub
loopne
fidivrs
add
jb
lock
sti
aas
dec
outsl
jecxz
in
pusha
sbb
dec
enter
and
and
stos
jae
jo
cmpsb
outsl
xchg
loope
sub
rclb
sbb
jnp
out
cltd
sbb
out
dec
imul
xor
outsl
nop
in
insb
add
dec
sub
xor
mov
pop
push
xlat
test
arpl
es
loop
int
push
test
and
push
add
adc
adc
sub
mov
jg
and
sub
xchg
push
cmp
or
clts
lahf
repnz
ja
stc
push
mov
mov
stos
in
cmovb
push
scas
fbstp
mov
ret
bound
in
pop
in
mov
into
mov
or
movb
push
in
pop
imull
or
mov
loope
ljmp
push
inc
xor
lret
movsb
cltd
scas
bound
fsubs
dec
ljmp
stos
and
imulb
or
push
fisubrl
mov
cwtl
outsl
or
mov
and
sbb
jecxz
insl
xor
in
jno
test
cwtl
inc
lods
push
inc
leave
mov
mov
mov
xchg
mov
mov
mov
dec
jo
int3
push
push
pop
pop
sub
popf
xchg
in
testb
mov
inc
icebp
cs
rol
and
dec
jno
push
xchg
fwait
movsb
dec
mov
add
or
push
mov
jo
dec
inc
or
xchg
adc
sub
fsubl
or
insl
jg
adc
xchg
hlt
fwait
les
hlt
inc
and
inc
xchg
dec
outsb
nop
jo
les
mov
stos
sub
xlat
adc
pop
out
dec
clc
sub
mov
cmpsb
xor
add
mov
ljmp
hlt
leave
daa
cmpsl
ror
cmp
sbb
add
lods
xchg
test
push
mov
scas
xor
mov
mov
or
push
cld
push
mov
cmc
ffree
enter
cld
insb
cmp
push
push
dec
insb
jns
cmp
dec
inc
mov
xor
mov
xchg
outsl
jbe
iret
adc
adc
imul
lds
ja
mov
sub
pop
push
nop
mov
add
aaa
enter
xchg
sbb
mov
jmp
cwtl
push
shll
jb
cmpsl
lcall
shll
xchg
dec
inc
call
mov
and
xchg
push
dec
ljmp
cmp
loopne
loop
jp
push
xor
icebp
push
mull
adc
dec
push
mov
xchg
sbb
dec
cmc
mov
or
jp
adc
insl
rcl
jmp
jmp
add
push
add
fwait
jne
jo
push
cmp
xchg
ljmp
or
dec
cmp
notl
xchg
lods
pushf
mov
or
push
test
outsb
cmp
aaa
nop
adc
adc
adc
imul
ss
pop
pop
mov
les
sbb
les
and
int
testl
adc
insl
repz
sbb
std
pop
loop
aad
cmp
inc
loope
jb
jecxz
mov
ds
scas
shlb
pop
xor
ds
mov
mov
hlt
cli
cmp
push
push
int
leave
mov
pop
xchg
mov
ss
fimull
mov
dec
test
push
dec
xchg
stos
pushf
cmp
mov
cmp
sub
xchg
cs
mov
mov
aas
adc
outsb
das
insl
and
fdivrl
shll
adc
lea
dec
inc
fsubrp
mov
subl
cmp
ret
shl
loope
lcall
push
pop
sbb
and
push
mov
jae
cmp
jae
loop
cmp
push
cmc
into
xchg
mov
adc
xor
mov
pop
ljmp
rcl
mov
cmp
xlat
fdivrs
lods
mulb
or
xor
fisubrs
xor
sbb
in
cmpsb
inc
xor
std
imull
mov
inc
sub
mov
add
jle
xor
sub
jo
out
sub
sbb
push
fidivrs
test
xchg
dec
in
lret
aas
ljmp
jb
xor
icebp
jnp
sub
jl
jno
push
push
test
outsb
out
stos
ja
push
lds
mov
popl
sarb
pushf
mov
pop
xchg
or
and
and
arpl
outsl
js
sar
cs
in
add
testb
cltd
dec
sahf
push
std
std
cli
inc
xchg
sub
mov
stos
cmp
dec
aad
fiaddl
jno
xor
loop
lret
shll
in
inc
xchg
pop
and
fiadds
dec
pop
test
bound
jns
xchg
jge
push
add
je
in
mov
inc
das
cvttps2pi
cld
clc
mov
fdiv
movsl
mov
add
ljmp
jnp
cmp
in
pop
out
adc
aaa
sub
shlb
and
js
xchg
js
cmp
add
xlat
out
jl
mov
jb
repnz
ficompl
test
addb
cmpsb
mov
mov
scas
int3
xchg
lea
xor
idiv
jl
dec
push
pusha
test
add
pop
and
loopne
orb
out
lods
mov
call
add
ss
aas
orl
iret
cld
cmp
mov
cmc
out
push
or
cmp
decb
rclb
jmp
pop
mov
mov
jmp
nop
fcompl
leave
dec
cmpsl
cmpsb
jmp
xchg
mov
out
test
loop
popf
add
or
and
pushf
shll
dec
cmpsl
push
jns
sub
sub
and
rcrb
test
jne
lods
and
aam
mov
jne
shrb
sub
jns
and
fistpl
jno
and
add
repz
mov
lock
lods
mov
cmp
in
cmp
in
scas
stos
lret
jecxz
orb
mov
out
in
loopne
ja
loopne
or
jecxz
sahf
pushaw
jnp
test
inc
mov
es
call
mov
andb
mov
insb
cmpsl
aam
push
out
jl
outsb
add
popf
pop
sbb
loop
dec
push
test
jecxz
notl
push
push
fisttps
or
scas
imul
out
sub
xchg
popa
cmp
mov
fisubs
pop
xchg
xchg
bound
mov
pop
in
jmp
adc
das
aas
xchg
cs
jns
fildll
in
cwtl
push
xchg
fwait
dec
enter
gs
or
xor
and
cmp
mov
sub
or
xchg
xor
dec
jecxz
daa
out
out
or
jmp
aam
pop
icebp
lea
xchg
fwait
jne
stos
fildll
push
mov
aam
imul
sahf
mov
xchg
data16
pop
mov
cmp
ds
shll
ret
pusha
inc
movsl
rclb
gs
push
aam
xchg
sub
jg
std
mov
test
loop
mov
jns
mov
mov
clc
pop
sbb
adc
push
outsb
push
test
imul
es
out
iret
dec
movsl
stc
imull
add
rolb
mov
ja
dec
pop
add
inc
es
movsb
mov
sbb
mov
and
xchg
mov
mov
lahf
enter
dec
dec
out
sti
out
lods
push
mov
sub
or
xchg
adc
nop
push
mov
inc
mov
popf
inc
add
pop
push
mov
inc
jbe
into
loopne
jge
pusha
and
in
pushf
ljmp
cltd
adc
mov
cwtl
mov
xchg
lds
adc
out
call
orb
or
mov
sub
jns
or
stos
into
pusha
mov
xor
mov
pop
rorb
ljmp
dec
ljmp
ffree
and
pop
cmc
fsubrs
js
cmpsb
stos
out
fisubrs
out
xor
sbb
and
fisttpll
cld
pop
sub
jb
jnp
fildl
add
aas
pop
lea
test
jmp
jg
mov
xorl
dec
jbe
adc
in
call
jp
xchg
pop
jmp
faddl
orl
fwait
int3
sub
fwait
sub
xor
dec
popa
xchg
icebp
xchg
or
mov
pop
cmp
neg
jge
xor
add
or
pop
mov
out
mov
and
adc
scas
jo
loop
cmp
jae,pn
or
cwtl
aaa
push
push
adc
std
inc
jmp
push
imul
addr16
repnz
inc
repnz
push
out
dec
xor
adc
mov
add
or
pop
scas
mov
push
add
jnp
ret
push
xor
pop
daa
fists
test
dec
mov
xchg
lea
lea
and
stos
dec
mov
leave
mov
out
add
jl
mov
imul
into
xor
jp
je
dec
mov
mov
inc
jge
xchg
bound
in
cltd
sarb
mov
jnp
xchg
mov
add
jb
das
js
jle
das
dec
mov
dec
add
xchg
lcall
cwtl
sbb
sub
cmp
pop
fdivrs
mov
ret
lret
xchg
mov
and
movsb
cmc
xor
xor
data16
sbb
testb
push
xor
push
sbb
add
fucomi
outsb
xchg
and
xchg
jbe
int
shrb
inc
inc
jae
loope
sub
jl
out
js
arpl
and
mov
lret
adc
ret
sahf
or
mov
loop
add
cmc
sub
xorl
cmp
loope
jecxz
mov
dec
jne
fisttpll
cmp
or
and
loopne
bnd
push
mov
dec
cld
xchg
jo
or
int
cmp
pushf
sub
scas
xchg
lds
lea
or
cmp
insb
sub
sub
mov
xor
jbe
mov
ret
sub
push
xchg
jecxz
dec
gs
mov
inc
scas
inc
dec
insl
imul
inc
inc
pop
or
in
push
lret
in
ret
ds
push
imul
arpl
movsb
adcb
push
dec
dec
addr16
fisttpll
sbb
fisubrs
pop
icebp
in
scas
xchg
xchg
jecxz
mov
stc
rorb
mov
negb
adc
scas
inc
sbb
push
lcall
xchg
push
xor
and
ja
pop
push
add
fidivl
mov
inc
push
test
push
mov
imul
ja
push
mov
dec
xchg
dec
stos
test
cltd
fwait
loope
enter
hlt
loopne
je
jecxz
stos
jmp
push
and
cmp
push
sbb
lea
mov
mov
adc
sahf
insb
xor
inc
fbstp
sbb
shrb
jbe
pop
dec
jae
xorb
jl
scas
std
pop
cmp
sbb
mov
clc
arpl
jecxz
or
xchg
gs
jo
pushf
test
and
xchg
ficomps
out
jmp
xor
cmpsb
sub
subb
movsl
inc
out
mov
flds
mov
add
sub
pop
shll
xor
in
imul
cwtl
fucom
adc
dec
fcomps
inc
xor
arpl
addr16
stos
mov
insb
inc
repz
cwtl
in
shr
and
pop
mov
xchg
sbb
sbb
into
test
jnp
push
inc
popf
adc
mov
subl
idivb
ret
lret
test
or
inc
gs
popf
mov
fadds
shr
clflush
insl
jb
addr16
vmovq
icebp
cmc
gs
outsb
movsb
xchg
scas
lret
bound
and
sub
cwtl
gs
addr16
jp
dec
stos
pop
loope
in
movsl
pop
or
mov
out
pop
push
cs
mov
dec
insl
es
xor
sahf
mov
sti
mov
push
xor
rcll
mov
and
aaa
mov
add
in
and
or
bound
mov
xchg
insl
xchg
adc
sub
fs
test
loop
inc
ja
adc
mov
pop
push
inc
sbb
scas
fistps
push
test
mov
adc
fs
dec
push
js
jl
orb
jno
jl
mov
dec
popf
sbb
xchg
jo
dec
jno
mov
test
fadd
shl
dec
test
jae
inc
sbb
lds
cmpl
push
stos
jge
and
scas
jge
dec
push
ja
loopne
test
testb
pop
xchg
jmp
push
fwait
ja
and
sub
sbb
mov
inc
pushf
xchg
cmp
fnstcw
fistpll
xchg
or
cltd
pop
push
adc
cmp
movsb
jnp
ficoms
jnp
mov
add
or
xchg
imul
pop
mov
outsb
orl
stos
fnstenv
mov
mov
stos
hlt
push
data16
negl
cld
cwtl
in
testb
jg
xchg
lret
pushf
movsl
sub
add
call
inc
push
jp
mov
adc
sbbl
nop
lods
shll
enter
xor
fsubl
xchg
mov
rol
icebp
and
add
lods
fyl2x
fnstenv
fwait
movsb
fdivrs
xchg
dec
push
or
es
jb
ds
push
mov
cs
ja
cmp
lea
or
mov
add
cmpl
add
mov
xchg
jae
or
sbb
clc
arpl
pop
mov
pop
fldt
xor
sbb
ljmp
pop
pop
outsb
in
in
rcl
pop
dec
jg
and
cs
imul
xor
shll
clc
in
insb
in
mov
jecxz
insl
mov
adc
ret
outsl
mov
les
cmc
fnstcw
mov
cwtl
sbb
cmp
sbb
decl
sahf
shl
xor
loope
and
int3
insb
push
add
out
cmpsl
call
outsl
mov
jl
addr16
test
jl
pop
movsb
sti
mov
adc
dec
sub
xor
ss
mov
mov
sub
adcb
out
push
and
lods
xor
jae
jae
push
sub
int3
je
xor
pusha
sbb
sub
scas
sbb
inc
jl
out
imul
push
pop
push
jae
mov
fidivs
mov
movl
mov
pop
xchg
inc
pop
leave
push
or
push
mov
xchg
rolb
cli
mov
xor
sti
xchg
testl
pop
test
push
dec
xor
push
push
mov
mov
xor
in
test
xchg
lods
cmc
adc
shll
fldt
addb
mov
sub
loope
sbb
mov
outsb
push
stos
movsb
add
test
enter
xlat
loopne
pop
fsubrs
push
or
frstor
outsb
out
stos
into
push
mov
pop
mov
sub
and
and
cmpsb
out
cltd
inc
ficoms
pop
enter
push
xchg
sbb
aad
icebp
cli
or
cs
iret
in
es
shr
adc
lcall
dec
lcall
sub
fwait
push
testl
popf
or
sbb
and
sti
inc
and
add
daa
add
sbb
xor
push
loop
mov
lahf
push
ret
xchg
xor
and
cmp
lea
rcll
cwtl
jmp
xchg
ds
pop
pop
sbb
scas
push
cmp
aas
movsb
pop
jnp
xchg
cmp
aas
pop
mov
icebp
mov
and
cltd
ljmp
cmpsb
sub
mov
mov
imul
push
sub
sahf
shlb
movsl
sub
daa
jo
ret
pop
movsb
pusha
sbb
repnz
push
xor
mov
out
and
xchg
xor
pop
xchg
imul
int3
cmp
decb
add
push
add
ret
cmp
popf
mov
pop
add
push
adc
push
sbb
popf
iret
out
test
adc
aad
mov
and
ja
and
fistpll
xchg
sub
aas
sub
push
push
jae
jle
mov
push
mov
push
jle
dec
mov
out
pop
notl
es
jne
push
test
sbb
loope,pn
mov
imul
xchg
xchg
jae
lock
lea
outsl
and
xchg
mov
inc
cs
cmpsl
aad
ljmp
stos
jne
subl
ret
scas
xchg
ret
xor
mov
mov
shlb
outsb
ss
lods
add
sbb
xor
mov
outsb
imul
cs
and
xlat
add
jb
fidivl
adc
aam
cltd
cmp
fsubl
pop
cmpsb
idiv
das
roll
mov
test
inc
jg
movsl
pop
xchg
dec
cmp
pop
int3
push
and
repz
adc
test
push
xchg
loop
shrl
mov
call
cs
arpl
ret
in
pop
mov
int3
push
mov
das
cmpb
mov
mov
mov
imul
iret
int
or
roll
or
add
pop
lods
add
cltd
mov
imul
lea
mov
cltd
pop
mov
mov
leave
es
or
loope
sub
movsl
fsincos
xchg
jbe
adc
test
mov
cli
int3
sbb
jno
pop
jae
setl
and
fstl
cli
pop
mov
movsl
lcall
pop
out
sub
test
inc
iret
int
jae
gs
mov
dec
xchg
sub
and
dec
enter
shlb
cli
les
mov
adc
stos
call
dec
dec
in
cmp
and
mov
cmp
dec
sbb
jb
cmp
fucomi
inc
jo
adc
pop
fs
mov
out
sub
in
nop
and
sahf
adc
mov
out
push
lods
mov
push
and
dec
fdivl
in
in
imul
loopne
dec
clc
xchg
inc
movsb
or
dec
loop
jne
test
outsb
mov
add
dec
std
repz
lods
jnp
icebp
lcall
or
mov
fidivl
sbb
adc
push
sub
iret
test
push
cmpsb
cmp
into
in
cli
jns
cmp
inc
in
cs
xor
rolb
add
xchg
bsf
daa
outsb
test
dec
hlt
jmp
cwtl
cltd
cmp
adc
mov
outsl
adc
sub
out
or
add
adc
mov
push
mov
mov
push
xor
xchg
cld
inc
rclb
mov
mov
enter
lea
cli
rcl
mov
adc
mov
ja
xlat
jl
in
lock
jecxz
lea
dec
cmp
mov
add
lahf
xor
repnz
inc
loope
cli
adc
mov
sbb
lock
inc
lds
fildl
mov
lods
dec
addl
jl
dec
iret
push
or
pop
imul
pusha
into
pop
fisttps
lret
les
jle
xchg
pop
mov
mov
and
int
cmp
stos
gs
push
in
dec
and
scas
jg
divb
loop
mov
cmp
cmc
pop
jb
cmc
cs
inc
mov
arpl
mov
dec
test
in
lret
jns
push
pop
pop
nop
popa
sbb
leave
add
aas
insl
fucomp
int3
adc
in
pushf
mov
push
add
push
mov
cmp
dec
loope
pop
stos
mov
sbb
test
cmp
cli
mov
lret
sbb
and
mov
jnp
dec
sarl
sub
xor
movups
icebp
jecxz
pop
test
aaa
stos
stos
mov
mov
aad
aad
inc
and
xchg
adcb
jmp
xchg
jb
fnsave
mov
mov
leave
mov
push
pusha
cli
add
jb
mov
test
adcl
je
cmc
dec
cmp
and
adcl
sbb
mov
movsb
pop
pop
jno
xchg
xchg
cwtl
lods
cmpsl
lds
push
frstor
xor
mov
gs
mov
les
mov
pushf
sbb
add
gs
out
pinsrw
xor
lods
mov
cld
leave
clc
imul
sbb
and
mov
sub
push
add
testl
popf
in
mov
jae
xorl
xchg
or
cmc
stos
inc
stc
dec
insl
sarb
into
out
dec
pop
cltd
aad
cmp
or
iret
iret
filds
leave
lea
scas
adc
add
jmp
stc
pop
fdivrl
sub
filds
cmp
mov
addr16
or
in
loop
enter
xchg
pop
jmp
ror
xor
jmp
cltd
arpl
fs
pop
pop
push
fsubrs
dec
leave
in
jle
enter
xchg
sbb
inc
mov
or
icebp
add
pop
out
dec
dec
push
es
ret
lcall
testl
sbb
rcll
cltd
maxps
sbbl
fiadds
mov
sub
outsl
cmp
movsl
add
pop
mov
fistps
mov
mov
inc
scas
lock
xor
push
neg
arpl
jle
les
xor
pop
jne
pop
inc
and
xchg
loopne
mov
and
mov
push
cmp
das
rcrl
ret
lahf
mov
stos
movsb
pop
sbb
mov
mov
shll
add
jge
lds
fsts
aas
mov
xchg
addl
imul
int3
mov
fwait
iret
mov
dec
push
mov
insl
or
pop
popf
xchg
inc
js
movsl
xchg
movsb
jne
xchg
mov
loopne
insb
jb
imul
or
aad
popf
sbb
inc
dec
dec
lahf
xor
das
in
rorb
adc
push
mov
add
pop
cmp
dec
xlat
fcmovne
lods
xor
mov
inc
data16
sahf
jno
sub
adc
leave
lcall
call
sti
sub
popf
shll
cwtl
les
adc
push
insb
xor
stc
pop
ljmp
mov
adc
mov
cmp
inc
jb
hlt
enter
lret
mov
cmp
arpl
outsb
shll
movsl
aad
jecxz
in
stc
in
jnp
jge
push
xchg
std
add
inc
mulb
lods
movsb
xlat
push
push
jno
push
aaa
fbstp
js
fwait
lods
jo
mov
pop
loop
inc
rol
mov
ja
fistps
sti
add
in
stc
mov
inc
mov
mov
adc
mov
imul
lret
mov
out
adc
sub
cltd
lods
insb
pop
and
mov
mov
aaa
ficoms
cmp
sbb
outsb
add
mov
cmp
or
popa
lods
mov
jecxz
cmp
shl
in
xor
mov
addb
aad
mov
inc
push
add
push
lock
int3
cli
push
movsl
fisttpll
loop
fsubrp
arpl
inc
xchg
imul
sbb
push
xor
enter
repnz
js
or
pop
adc
xor
dec
aad
lock
les
xlat
adc
push
or
add
xchg
sbb
popa
and
in
in
int3
sbb
sbb
sbb
lock
mov
std
xchg
add
add
push
shll
clc
ret
fisubrs
cli
ljmp
lods
stc
inc
aas
inc
mov
cltd
fcmovb
lret
out
iret
test
cltd
ret
mov
call
bnd
add
lret
arpl
lahf
add
sbb
dec
pop
and
push
nop
sub
mov
xlat
sub
outsl
test
xor
hlt
ja
or
cwtl
sbb
adc
movsl
cli
js
into
shrb
hlt
test
jge
mov
xor
mov
filds
dec
jae
lea
fistpll
dec
test
loopne
mov
imul
jne
lea
mov
xchg
pushf
repz
popa
jl
imul
and
data16
pop
adc
scas
add
rcll
std
pop
mov
cmp
mov
scas
cmp
sbb
into
sbb
xchg
sbb
int
pop
outsb
enter
add
enter
mov
xchg
lahf
sbb
push
int3
int3
jge
mov
and
adc
and
sbb
out
inc
sbb
jle
xchg
pushf
stos
push
in
adc
leave
xlat
jns
cmp
shrd
clc
movsl
imulb
dec
ljmp
or
adc
mov
dec
jecxz
out
andb
xor
jo
fs
and
pop
pop
lret
loop
subl
cmp
mov
movsl
je
fidivrs
push
or
loope
jo
sbb
test
cwtl
mov
jle
push
jb
or
mov
or
fsubl
es
dec
or
mov
xor
or
cmpsl
push
dec
pop
mov
push
lret
and
xchg
orb
xchg
ljmp
inc
mov
outsl
pop
push
mov
inc
aaa
lds
sub
mov
dec
jp
aaa
es
xchg
stos
cli
sbb
arpl
popf
or
push
fucom
outsb
push
pop
inc
clc
rolb
push
pop
popf
xlat
add
lret
pop
shll
sub
pop
jae
inc
cwtl
js
xchg
cmpsb
pushf
in
push
cmp
test
std
sbb
push
test
mov
lock
inc
fistps
rcrb
push
aaa
fwait
int3
mov
movsb
mov
mul
push
adc
in
mov
popa
xchg
cmp
adc
sbb
stc
xchg
cmp
in
mov
flds
cs
jbe
out
fucomp
adc
mov
shrb
pop
movsl
sub
mov
aam
stc
jecxz
sbb
sbb
jae
mov
imul
add
cmp
mov
adc
xor
pop
pop
mov
or
mov
push
pop
dec
pop
mov
aam
js
jg
dec
scas
sub
roll
hlt
sbb
dec
lret
fsincos
hlt
sbb
push
insb
mov
jg
lret
mov
add
cld
mov
dec
mov
pop
xchg
sbb
dec
jb
ljmp
mov
mov
or
mov
and
pop
mov
dec
xlat
rcll
cmp
call
aas
icebp
mov
sub
aaa
xlat
ss
add
out
adc
out
clc
mov
xlat
fiaddl
push
insl
xchg
add
mov
out
push
cs
fisubl
mov
out
or
push
test
sahf
inc
pavgw
inc
fmulp
pop
cmp
sbb
repz
sub
push
fistpl
imul
or
cmpsl
cld
sbbl
add
adc
pop
jge
pop
cmp
cmp
mov
ret
mov
jl
scas
aaa
int
cs
dec
inc
add
insl
loop
adc
dec
mov
mov
jae
in
jmp
lods
mov
mov
mov
sahf
sti
jo
imul
jno
push
lahf
decb
mov
dec
shrb
xchg
insb
pushl
xchg
fwait
jbe
sub
rcr
push
clc
mov
pusha
inc
cmpsl
inc
out
in
je
cmc
fwait
and
inc
add
sbbb
push
xchg
jne
out
jge
ror
cmp
sbbl
inc
and
mov
aas
imul
mov
sbb
jmp
or
dec
fdivrp
dec
mov
add
push
jns
sub
mov
fmulp
outsl
sbb
push
sub
call
out
and
and
aaa
out
cmp
fldt
sub
xlat
pop
pop
jmp
divl
jb
pop
dec
sar
inc
stos
cwtl
mov
xchg
inc
xchg
popa
and
pop
in
aaa
test
gs
dec
inc
mov
fstps
adc
dec
mov
lods
sub
add
pop
jno
icebp
dec
mov
sarb
sahf
mov
ja
and
sub
addr16
add
repz
test
icebp
inc
inc
xchg
pop
mov
or
mov
push
adcl
ds
lea
repz
jns
sahf
fmuls
ret
cs
arpl
sbb
jle
outsb
lret
xor
or
test
adc
jmp
les
mov
daa
cld
mov
lret
push
xor
xchg
test
sbb
xor
mov
adc
add
hlt
mov
insl
jbe
icebp
psubsw
push
mov
andb
sub
mov
inc
jge
cmp
je
push
lret
movsw
inc
fnstcw
sbb
movsl
xchg
loop
aaa
nop
mov
les
push
pop
ds
ss
mov
lods
jo
jl
mov
popa
ret
xchg
pop
addr16
movsl
pop
ljmp
fucomp
daa
or
out
lods
fs
xor
mov
lea
jns
mov
cmp
jns
fcomi
inc
mov
insl
jge
iret
std
movsl
or
insb
pushf
cmpsl
mov
lds
sub
cmpsb
mov
pusha
rol
and
sub
and
sbb
fisttpll
aas
jg
mov
xchg
movsb
mov
fldenv
insb
bnd
stc
cmp
out
inc
and
cli
jnp
mov
ret
pushf
xchg
push
mov
jo
repz
dec
sbb
out
xor
fcomip
sub
push
mov
or
mov
xchg
sub
gs
int3
xchg
lock
push
fdivp
sbb
rol
je
mov
inc
lret
jns
rcrl
adc
inc
lods
add
xchg
dec
adc
sub
adc
rolb
testb
in
out
xchg
imul
cli
xchg
mov
cs
mov
mov
and
mov
cmp
lahf
fidivl
jmp
pop
lods
arpl
clc
jbe
rclb
cmp
adc
stos
enter
mov
mov
pop
inc
sar
ss
pop
pop
mov
sbbb
push
xchg
and
fiaddl
add
scas
cmp
add
add
imul
add
adc
mov
add
scas
inc
add
pushf
add
mov
out
xchg
out
and
int
add
push
mov
mov
shr
jnp
xor
xor
cmp
xor
mov
or
repnz
add
loop
xorb
mov
aad
or
int3
jns
sbbl
rcrl
or
mov
push
in
jb
repz
in
fadd
es
cmpsl
pop
cmc
gs
jmp
les
jne
lods
pushf
ljmp
aad
jb
xchg
popa
hlt
jns
cmp
lret
aaa
xchg
cmpsl
idivb
in
push
push
out
xchg
push
jno
dec
rcrb
jb
loopne
call
sub
push
std
push
in
imul
jecxz
pop
xor
push
subl
xchg
jp
mov
pushf
pop
mov
aam
add
ds
add
stos
mov
cmp
jne
aam
fmul
mov
bound
fs
test
push
out
inc
jne
jns
lret
out
int
hlt
lods
pusha
pusha
lahf
inc
cmpsb
pop
mov
out
out
ja
loop
dec
mov
mov
fidivs
rclb
call
or
jno
stos
pop
mov
jns
add
cmpl
insb
mov
pop
imul
mov
je
inc
mov
std
int
hlt
std
push
xor
jmp
loope
sub
scas
popa
fisubs
mov
push
and
push
loopne
out
lret
add
xchg
xor
sub
sub
jne
aam
inc
leave
cld
xchg
mov
jg
add
dec
adc
jne
idivl
ret
adc
inc
fimull
out
movsb
sub
lret
mov
icebp
ret
repnz
scas
jne
sti
dec
mov
lgdtl
ljmp
jmp
push
insl
or
mov
xor
popa
dec
adc
ss
inc
jne
lock
xor
and
inc
mov
push
dec
xchg
cmc
adc
fstpl
add
mov
mov
icebp
aad
pop
dec
sub
data16
iret
push
cltd
mov
sbb
test
outsl
adc
nop
xor
jb
dec
loopne
jmp
sub
push
push
lretw
push
rcrb
outsl
or
movsl
fcomps
imul
sub
mov
jo
sbb
xlat
shr
iret
dec
jmp
rcl
jle
mov
cs
inc
pop
out
push
test
dec
pop
stc
mov
inc
cwtl
int
add
cmp
fdivr
jo
into
lret
jnp,pn
pop
setle
sub
xchg
dec
push
push
enter
je
daa
outsb
mov
push
jp
aaa
js
cmpsl
xlat
ret
rorb
jle
test
sbb
jbe
cmp
rolb
and
adc
in
sbb
sar
data16
std
filds
cmp
dec
add
roll
sbb
mov
aam
insl
cwtl
int
out
fdivs
lret
jb
mov
or
sbb
jns
add
inc
call
xchg
sub
or
push
lds
dec
mov
bound
andb
imul
nop
decb
push
jl
xchg
mov
jo
xor
aas
repz
bound
decb
pop
and
push
sbb
ds
or
mov
cmpsl
je
cld
jbe,pn
push
push
std
fstps
loopne
xchg
adc
outsl
stc
ret
pushf
fwait
sar
std
std
push
cwtl
push
adc
and
inc
mov
xchg
or
lea
bound
scas
mov
pop
les
sbb
xchg
loopne
sbb
push
andl
shr
add
lahf
out
outsl
fs
inc
xchg
out
pop
nop
push
xchg
stos
dec
ds
push
es
cltd
dec
jne
dec
jns
cmpsl
stos
cmpsb
jp
push
ret
pop
or
mull
and
pop
das
jo
out
jae
fldl
aas
stos
or
test
mov
mov
xlat
in
arpl
cmpsl
nop
fstpl
and
pop
push
in
jne
ret
and
addl
cs
stos
lods
sti
pop
and
mov
inc
cli
mov
push
in
movsl
ss
call
adc
out
lods
scas
loope
pop
call
xor
popa
addl
addr16
ret
push
jo
cvttps2pi
adc
orb
fidivl
pop
hlt
lret
push
movsl
ret
xchg
js
dec
pusha
les
sbbb
movsl
movsl
int3
or
cmp
push
mov
mov
xlat
sbb
je
stc
test
mov
repz
dec
shll
jo
pop
dec
sub
inc
les
pop
shufps
in
xchg
push
ror
pop
jle
pushf
mov
mov
pop
mov
pop
cmp
in
pop
add
sub
and
mov
pop
pop
mov
out
in
or
insb
outsb
cmp
sahf
and
pushf
add
dec
inc
jle
inc
clc
enter
fsubs
xor
mov
or
je
cli
mov
mov
ljmp
inc
jmp
rolb
cmpl
adc
aas
xchg
testb
aam
insb
sub
cmp
adc
out
mov
lock
sub
push
repnz
clc
mov
icebp
mov
aam
ss
inc
stc
push
add
adc
inc
jge
test
lods
lock
das
jle
xchg
jb
cs
dec
test
jae
push
mov
movsl
push
add
rcr
cmp
or
ljmp
jl
sahf
in
mov
fiadds
jae
lods
inc
sub
mov
mov
jbe
into
pushf
aas
jnp
enter
mov
lock
push
or
aad
xor
mov
fs
xor
mov
add
or
rcl
and
iretw
enter
jge
pop
and
enter
arpl
or
push
movsb
add
ss
sub
fcoms
lods
insb
push
mov
pop
fisttpl
popa
sbb
inc
sub
bound
hlt
add
in
int
mov
sahf
movsl
mov
outsb
cmp
mov
add
mov
pop
sub
clc
pop
stos
mov
loope
or
fwait
adc
das
xor
in
xchg
adc
ja
stc
data16
cmp
inc
or
test
jo
out
sub
adc
mov
mov
adc
pop
imul
mov
rorb
stos
test
scas
imul
ret
mov
mov
sub
xor
mov
call
lods
nop
arpl
ja
jmp
adc
sbb
int
stc
xor
hlt
jno
stc
movsb
call
js
add
stos
xchg
iret
negb
aad
dec
lock
xchg
dec
or
repz
daa
jmp
xlat
cmp
lret
pop
sti
push
mov
fiaddl
scas
popf
stos
insb
sub
or
gs
sub
mov
adcb
inc
add
not
mov
xchg
push
push
xor
test
push
lahf
jl
or
or
idivb
in
xchg
testb
xor
or
js
loope
xchg
cmp
test
pop
out
scas
adc
in
push
jnp
xchg
loop
jo
in
sbb
cli
jmp
lahf
sbb
add
pushf
popf
int
pop
jno
out
lods
adc
mov
js
stos
push
fwait
dec
stos
add
jge
push
dec
add
mov
xor
jae
lds
pop
sahf
inc
loop
test
lock
popa
lret
and
pop
cmp
jl
lret
mov
int3
sbb
sahf
sbb
enter
xor
mov
dec
popa
jg
mov
adc
lods
addl
and
cmpsl
dec
sub
rcll
xor
mov
aaa
sbb
xchg
in
pushf
mov
pusha
fdivrs
inc
addr16
adc
dec
or
jbe
lret
cltd
fs
sbb
imul
dec
xchg
jge
cld
xchg
jmp
mov
add
std
sbb
and
xor
in
pop
cmp
js
mov
cs
push
dec
fld
test
imul
inc
iret
sub
fsubrs
test
sub
or
je
lods
inc
loop
inc
xchg
stc
xor
aad
dec
cmp
in
or
mov
std
cwtl
in
stc
cmpsb
push
or
loopne
sbb
sbb
jae
bound
popf
sub
scas
sub
jl
sti
jno
popf
nop
test
stos
popf
mov
xchg
dec
aad
sub
mov
jge
imul
mov
push
jno
fsubrs
push
cmp
out
dec
xchg
mov
push
pushf
pop
lret
add
mov
scas
mov
ds
mov
sub
push
arpl
push
test
lods
ret
xor
xchg
or
aam
dec
in
adc
add
adc
add
dec
mov
subb
xor
ficomps
int3
loop
push
xchg
and
ret
int
int
sub
xor
cmp
in
sbb
lock
jmp
cmpsb
adc
xchg
dec
xchg
xlat
push
dec
mov
imul
lret
lock
or
ja
or
das
not
ja
test
mov
pop
and
cmp
push
jge
outsl
imul
pop
sub
sahf
ret
insl
dec
pushf
cmp
rcrb
cmp
xchg
ret
add
outsl
test
lea
sahf
push
in
es
fisubs
sbb
cmp
mov
dec
mov
xchg
repnz
and
addr16
dec
lods
popa
and
sub
pop
cld
mov
xor
add
inc
mov
int
sbb
mov
daa
cli
hlt
xor
es
into
mov
sbb
and
iret
mov
cmp
nop
mov
xchg
mov
lahf
loopne
xchg
mov
dec
loop
cmp
jl
mov
mov
bound
add
jnp
fisttpl
ss
jp
pop
mov
scas
xor
jno
or
inc
out
mull
mov
jbe
jns
lds
jnp
push
xchg
push
mov
fbstp
xchg
std
insl
sbb
cmp
inc
mov
bound
push
mov
and
dec
mov
push
add
lock
sahf
das
xor
sahf
outsl
mov
or
div
xchg
jnp
mov
inc
xchg
xchg
sar
sub
cmp
outsl
lret
inc
xor
xor
or
jnp
push
inc
adc
and
or
cld
jb
popf
sbb
sub
outsb
rorb
in
sbb
leave
dec
xor
cmpsb
jae
inc
arpl
push
notb
adc
jmp
arpl
or
inc
add
mov
adc
xor
or
xor
mov
pop
inc
insb
js
sub
adcl
in
xor
test
pop
les
push
jb
dec
lods
scas
shld
stc
imul
jl
cmp
ret
mov
adc
fs
insl
aas
mov
jo
orb
cmc
in
cmp
jge
sub
xchg
adc
sbb
sbb
sub
in
popa
dec
aam
neg
incb
mov
pop
out
and
leave
sbb
mov
lcall
roll
pop
orb
xchg
inc
ds
sub
xor
fnstenv
xbegin
cmp
cmp
dec
rcll
inc
out
pop
sbb
repnz
inc
fldenv
add
nop
xchg
cmp
sub
xor
dec
mov
test
sahf
in
out
jae
jae
cmpsb
insl
mov
xorb
insb
add
call
into
mov
mov
or
in
inc
cmp
mov
dec
sbb
mov
sub
mov
daa
in
xor
ljmp
rcll
jmp
cmp
fistpl
push
scas
and
lret
inc
push
inc
icebp
bound
adc
pop
push
adcb
dec
sbb
insl
js
lcall
subb
cltd
pmovmskb
scas
test
aam
jne
stos
pop
pop
mov
fsubrs
stc
add
push
jle
and
hlt
aam
out
cmp
outsb
into
aaa
pop
inc
dec
dec
jno
and
xor
inc
enter
cwtl
nop
and
xchg
add
push
ret
in
or
fistpl
jge
iret
insb
imul
xor
rclb
loope
lock
in
mov
popf
sbb
imul
neg
loope
or
mov
xor
aaa
adcb
cli
inc
sbb
test
xor
mov
jnp
repnz
sbb
mov
mov
repz
mov
and
dec
test
pushf
cmp
fdivrp
outsl
imul
leave
inc
or
cwtl
fidivs
in
jg
shll
nop
arpl
fnstcw
mov
pusha
mov
aas
std
out
pop
lcall
loopew
popf
mov
jbe
cltd
push
inc
rolb
jae
cld
and
cld
inc
add
stos
data16
xor
push
dec
or
lret
jnp
lock
sbb
jmp
xor
imul
jecxz
jnp
bound
cmp
movsl
mov
push
adc
xchg
adc
stos
or
movsl
ja
ds
sub
mov
sub
test
mov
lock
jmp
add
adc
xchg
xchg
add
cmp
sbb
push
cmp
aaa
fs
outsl
lahf
int3
in
loope
cs
sbb
dec
repnz
out
addr16
pusha
pusha
mov
pop
call
and
mov
and
test
insl
add
mov
mov
mov
cmp
adcb
mov
dec
fwait
lock
cmp
dec
aad
jmp
lods
in
out
roll
and
inc
fwait
sti
pop
lret
push
xchg
mov
daa
sbb
std
pop
sbb
mov
cltd
testb
lret
push
imul
jnp
nop
inc
cmpsl
mul
mov
clc
mov
shrl
mov
addr16
mov
fmuls
add
int3
jae
pushf
sbb
inc
mov
ret
dec
das
jle
sahf
push
mov
fnstsw
mov
pop
loopne
cli
data16
and
mov
inc
out
cli
std
push
pop
outsb
out
pop
pop
and
aas
pop
xor
cs
dec
dec
jno
repnz
outsb
add
sub
scas
adc
inc
int3
or
fdivl
outsb
enter
gs
jmp
cltd
mov
push
pusha
fcompl
rcrl
sub
aas
jge
lahf
and
sbb
test
arpl
leave
pop
xchg
ja
inc
jecxz
jle
test
pop
lret
movsb
mov
pushf
rcll
or
cmp
lods
repnz
pushl
cli
inc
lahf
hlt
xchg
outsb
imul
jo
mov
xchg
inc
bound
mov
sbb
add
jmp
shll
or
mov
xchg
js
hlt
cmp
arpl
mov
pop
fdivs
aaa
lcall
xchg
imul
pop
dec
and
lods
sub
lds
sbb
mov
jge
stos
push
std
icebp
iret
pop
xchg
pop
dec
fstps
test
and
out
int3
sbb
gs
xchg
fwait
fs
ror
inc
dec
outsl
into
mov
dec
jbe
cltd
jno
scas
push
dec
push
push
orb
je
mov
lds
stos
fwait
push
pop
test
jmp
hlt
popa
xchg
pushf
pop
mov
cmp
div
scas
jns
add
enter
pushf
and
xchg
mov
cmp
sub
jbe
lret
mov
lret
mov
fwait
or
test
mov
adc
mov
jb
inc
test
lock
imulb
xor
scas
sub
popa
sub
out
mov
pop
sbb
jle
adc
bound
jp
jo
xchg
sbb
int3
pop
push
xor
pop
pop
xchg
cld
adc
mov
jge
ror
lret
lcall
ss
das
inc
in
pop
push
popf
xor
xchg
and
inc
and
lods
push
mov
jno
mov
push
add
fsub
adc
aas
dec
sbb
nop
pusha
push
cwtl
jg
out
and
cmp
aam
mov
lret
and
stos
xor
dec
mov
cwtl
push
leave
jg
sbb
shrb
sub
and
in
jnp
mov
hlt
xor
das
loop
or
scas
add
push
jge
mov
mov
sbb
std
cli
adc
sub
lea
inc
push
xor
and
out
ret
xchg
clc
inc
clc
sub
add
mov
cmp
inc
idiv
popa
add
sub
push
clc
pop
repnz
cmpsl
xor
mov
and
pop
adc
daa
add
outsb
dec
es
cmp
int3
inc
cmp
dec
jp
jno
out
or
xchg
pop
daa
mov
pop
cmp
scas
pop
adc
stos
dec
aaa
cld
pop
jge
add
mov
push
jmp
cmpsl
sar
cmpsb
lods
cltd
sub
dec
idivl
loopne
mov
aad
xor
lds
inc
movl
pop
cld
scas
lods
out
insl
xor
xchg
mov
adc
push
pop
mulb
cwtl
push
aad
add
aas
adc
and
mov
out
adc
pushf
sbb
sbb
sahf
lcall
pop
ss
aas
clc
popa
mov
xchg
sbb
loop
scas
clc
xchg
les
out
cmc
xor
mov
adc
sub
xor
jne
inc
xchg
xchg
jae
cltd
adc
pop
cli
shlb
jo
mov
nop
shlb
int
test
fsubs
adcl
jg
mov
xchg
inc
push
rcr
xchg
ficompl
adc
cld
mov
orb
inc
fsubrl
mov
mov
fsubrs
fisubrl
mov
sti
and
jno
mov
out
inc
out
scas
ljmp
outsb
jno
sbb
subb
sarb
mov
outsb
imul
ds
adc
inc
xchg
jae
dec
dec
xor
dec
fnstcw
addr16
xchg
inc
bound
jns
mov
movsl
test
lret
call
sub
xor
push
hlt
repz
xorb
xchg
addl
in
push
in
movb
pop
jo
xchg
xchg
jecxz
fidivrs
fbstp
dec
mov
jmp
mov
movb
repnz
movsb
and
and
cwtl
mov
dec
iret
loopne
mov
sbb
addl
cmp
ret
decl
ljmp
push
jmp
mov
ss
adc
inc
lods
mov
cmp
xor
cmp
jne
mov
shl
mov
mov
inc
cmp
lds
xchg
xchg
lcall
repnz
in
int
ljmp
movsb
aas
lock
inc
mov
inc
lods
ja
mov
cmp
addb
push
sub
and
aad
in
hlt
sub
int
adc
mov
std
jne
in
test
and
mov
pop
loopne
adc
repnz
inc
mov
stos
ljmp
cmp
jno
sub
jl
adc
push
inc
stos
in
pusha
sahf
sbb
test
test
dec
mov
pop
mov
pop
cwtl
lods
movsl
sti
jbe
lods
push
or
adc
pop
test
xchg
fstps
je,pn
cmp
adc
add
xchg
jmp
push
ret
jne
out
sbb
insb
add
fimuls
push
shl
mov
out
mov
adc
dec
push
xor
or
fwait
pushf
pop
loope
mov
repz
outsb
lods
sub
testb
aad
fnstcw
jno
push
lret
mov
ja
pop
push
out
inc
out
das
jae
inc
cli
ja
ja
xchg
sahf
and
or
mov
sub
lods
xchg
dec
popa
pop
idivl
sarl
jg
xchg
test
jns
sbb
aam
mov
fcmovb
jg
add
xor
call
xor
xchg
push
add
mov
lea
and
mov
ret
xor
sub
push
and
pop
es
sub
lds
aam
and
call
pusha
cmp
sub
js
xchg
jl
pop
icebp
fistl
or
cmp
add
adc
pop
or
in
iret
inc
adc
ds
jnp
or
arpl
and
ds
imul
xchg
std
jo
repnz
add
ljmp
lock
cli
adc
lea
addr16
das
pushf
pop
filds
mov
cmp
cmpsl
add
xor
jl
cmp
push
shl
ljmp
into
xchg
fstpl
and
push
push
pop
mov
ret
mov
pop
stos
inc
orb
xchg
and
xchg
movsl
mov
adc
or
pop
inc
rorl
repnz
push
xor
repz
push
fidivrl
xor
mov
call
repz
push
xor
adc
fisubrs
mov
jb
jb
and
ja
xor
xlat
lods
fstpl
loope
mov
testb
adc
and
int
pop
mov
xchg
sub
push
insl
scas
insl
push
adc
popf
sbb
cli
lds
xchg
fnsave
push
inc
jne
jnp
and
dec
xor
sub
push
xor
cld
nop
outsl
ljmp
ret
sbb
mov
xchg
mov
cmpsb
xchg
shlb
out
mov
fsubrs
dec
dec
stos
add
mov
push
fnsave
js
mov
into
adc
xchg
in
sub
loopne
dec
or
xchg
out
and
nop
push
mov
cmp
aam
jle
jmp
js
mov
add
imul
pushf
mov
outsb
inc
pop
bnd
mov
jns
sbb
sbb
mov
inc
rcrb
mov
mov
sahf
add
test
in
or
push
cmp
test
mov
fnsave
fistps
stos
in
and
or
out
jmp
pop
push
aam
and
jmp
lock
adc
push
mov
in
test
pop
inc
rcll
mov
call
sub
rcll
imul
je
js
es
in
cmpsb
ret
mov
inc
iret
negb
inc
push
mov
inc
jg
mov
and
jo
mov
movsb
and
push
sub
cli
push
in
or
fidivrl
mov
rolb
and
insb
shlb
mov
test
outsb
nop
cmp
push
mov
mov
cwtl
scas
mov
jns
xor
and
add
test
das
and
xorl
mov
scas
inc
nop
push
pop
fwait
sub
ljmp
out
divb
or
or
outsl
daa
fdivrl
adc
stos
mov
lahf
jmp
cmc
lea
jge
mov
aaa
pop
and
iret
sub
test
lcall
sahf
das
mov
mov
test
xor
jg
or
fimuls
pop
and
pop
das
iret
nop
push
lahf
jno
push
jne
lret
es
das
fxch
repz
adc
or
out
mov
lock
inc
pushf
fs
and
inc
cmp
sarl
mov
lss
mov
xchg
lret
outsl
daa
adcl
xor
inc
fistpl
call
lahf
xor
jb
push
lods
icebp
jp
xchg
mov
out
mov
and
sub
lret
shr
and
cmpsl
xor
out
mov
push
fldcw
out
fisubrs
cltd
subb
xchg
cmp
rorb
push
sub
fbstp
pop
inc
cld
int
int3
cmp
arpl
insl
or
scas
xchg
push
adc
sub
cli
pop
sahf
and
push
cmpsb
enter
add
cwtl
rorl
dec
xor
and
hlt
sbb
sub
cmp
mov
mov
add
movsl
xor
or
sbb
outsl
sbb
pop
pop
mov
pop
mov
out
mov
push
cmp
stc
and
out
pushf
es
mov
scas
and
mov
mov
mov
push
or
dec
pop
pop
cmpsb
fdivr
xor
test
inc
sarl
xlat
mov
jmp
mov
out
mov
subl
mov
or
cmp
or
mov
mov
mov
push
sbb
pusha
mov
cmp
add
mov
clc
mov
cltd
jge
movsl
mov
mov
in
add
and
xchg
adc
in
ret
fisttpl
jnp
adc
scas
pop
dec
push
imul
fs
jecxz
les
jno
call
ja
js
inc
aas
cmpsb
and
mov
push
cs
lcall
sub
int3
out
adc
jmp
aad
adc
push
inc
pop
xor
mov
mov
lret
out
pop
sub
test
sub
fimuls
std
xchg
dec
push
push
ror
das
ffreep
stc
and
rorl
and
inc
push
adcl
xchg
movsl
mov
lret
mov
in
shl
cs
add
jg
adc
lcall
mull
inc
ja
sbb
in
std
je
insl
movsl
inc
push
daa
pushf
sti
sarl
xor
xor
jne
pop
dec
mov
inc
sbb
inc
xchg
fsubr
jmp
mov
mov
push
mov
daa
mov
push
lods
xor
inc
das
push
gs
loopne
fwait
mov
loopne
xchg
out
pop
ret
push
shll
mov
xchg
ljmp
pop
fdivl
mov
or
inc
arpl
inc
inc
filds
outsl
hlt
pop
pop
pushl
push
repnz
mov
data16
aad
jae
mov
sbb
ljmp
mov
rol
int
adc
fisttpll
enter
dec
sub
push
fmull
pop
xchg
aam
sub
or
pop
cmp
jle
fs
mov
jns
lods
stos
mov
ficomps
cmpsb
sub
insl
int
mov
insl
push
dec
loop
enter
pop
enter
test
adcl
jmp
aaa
dec
sti
ljmp
xor
adc
les
sbb
test
pop
jmp
fcoml
ja
bound
pop
cli
filds
shll
jno
push
xchg
lcall
inc
inc
ss
fisubs
ret
cltd
dec
aas
mov
bound
mov
frstor
je
movsl
add
leave
push
inc
sbb
imul
jae
pop
jg
ret
pusha
js
icebp
push
shlb
pop
push
hlt
lea
jmp
fcmovne
test
xor
mov
pop
xorl
daa
jp
xor
imul
popf
cld
jns
mov
pop
and
imul
cmp
ds
add
cmp
mov
jb
cs
mov
sbb
or
cli
js
inc
clc
into
sbb
mov
xchg
adc
pop
rcrb
add
pop
out
test
sbb
daa
enter
mov
jmp
nop
xchg
test
jg
decl
cmp
sahf
jle
mov
sbb
mov
push
adc
notl
es
xor
fsub
xchg
and
xor
push
fisubrs
mov
mov
pop
movb
adc
push
fs
addr16
dec
fnstenv
test
adc
sbb
xchg
ret
sbb
and
subb
or
ljmp
add
and
jnp
xorl
aam
shlb
or
xor
data16
jo
ret
in
jo
mov
push
fildll
fisubl
aas
adc
cmc
rcll
addr16
xchg
scas
push
movsl
stos
xor
das
mov
push
es
ud1
pushf
jno
pop
pop
push
add
or
cltd
mov
dec
mov
lods
jnp
xchg
in
in
pop
jb
pusha
stc
or
push
sub
jmp
cwtl
xchg
loop
inc
jnp
push
push
inc
scas
push
sbb
pop
push
xchg
push
cmp
add
aam
and
mov
mov
xchg
bound
sbb
mov
sub
loop
pop
mov
cmc
xchg
dec
jae
scas
cmp
and
scas
cmp
js
or
insb
xor
dec
jbe
out
test
xchg
aam
mov
daa
cs
fisttpll
lea
dec
mov
lahf
sub
sub
movb
push
cli
popf
push
scas
data16
popa
xchg
inc
daa
outsl
shll
pop
push
add
mov
gs
test
add
lods
arpl
pop
jbe
push
cmp
or
push
xchg
xlat
mov
in
das
xchg
sbb
mov
ljmp
add
stc
fdiv
jne
mov
jae
push
lret
shll
cwtl
pop
out
inc
cs
xor
mov
in
and
clc
loopne
es
sub
fisubl
mov
mov
jnp
mov
nop
aaa
adc
pmuludq
or
hlt
adc
push
scas
sub
sbb
sbb
test
pop
sub
sbbl
test
shrl
movsl
xor
and
arpl
jle
lcall
or
shrb
adc
gs
add
and
je
jp
in
mov
ja
sub
call
xchg
cmp
in
fildl
cmp
or
xorl
or
jno
jns
jae
fcomip
into
ret
insb
sub
jg
leave
pop
sahf
mov
mov
adc
add
imul
nop
stc
inc
stos
jg
xor
and
or
mov
shll
subb
inc
shll
cmc
lods
sahf
mov
mov
xor
push
test
insl
mov
std
inc
push
fidivrl
cmp
lock
ja
mov
movsb
lods
mov
mul
lods
das
lret
lcall
inc
pop
push
leave
jle
push
jg
call
out
mov
cs
mov
sarb
jb
dec
cmpb
popf
ret
das
cwtl
shlb
lcall
sbb
sbb
int3
int
ss
push
xchg
or
daa
dec
lods
lods
cld
popa
pop
cltd
ret
jns
mov
aas
pop
mov
test
xor
outsl
mov
mov
jg
inc
inc
stc
es
jmp
jnp
mov
push
shll
loop
call
pushf
mov
dec
imul
xor
mov
fidivl
cmp
aad
xchg
sub
mov
mov
sbb
dec
fwait
addr16
add
orl
push
lcall
clc
mov
mov
xor
add
stos
hlt
mov
dec
stos
stos
adc
xor
mov
dec
sbb
das
push
mov
dec
aas
jbe
movsb
shrl
sub
fiaddl
es
xchg
sub
outsl
xchg
movmskps
cmp
lahf
push
sub
xchg
fisubrs
rcrl
daa
ret
pop
mov
sbb
mov
sbb
pop
pop
stos
sub
inc
jge
imulb
sahf
push
sbb
mov
mov
xchg
sbb
into
sbb
sbb
std
std
jg
mov
pextrw
outsb
cmp
out
jl
fcoms
ss
sbb
inc
icebp
inc
fmulp
push
fnstsw
lods
aaa
iret
aad
dec
push
int3
cmpsb
mov
mov
adc
sti
cmp
rcrl
sahf
lds
addr16
outsb
imull
mov
insb
lods
or
xor
and
push
stos
subb
xchg
and
bound
je
jae
pushf
xor
pusha
sbb
xchg
adcl
cld
cmc
fdivp
test
ja
xchg
mov
aaa
scas
mov
jle
in
cwtl
mov
call
addb
mov
clc
pop
in
and
mov
sar
xchg
scas
in
pop
adc
pop
mov
push
jbe
outsb
adc
sarb
outsl
or
push
mov
xor
daa
xchg
mov
jno
mov
push
sbb
mov
or
jge
cmp
scas
add
mov
add
fcmovnb
pop
out
xor
pop
mov
stc
fs
icebp
jne
mov
into
imul
imul
mov
mov
out
in
cmp
fsubr
mov
jne
xchg
lahf
xor
pop
lods
loopnew
adc
mov
xorb
mov
fwait
jmp
repnz
jb
inc
and
push
in
push
mov
test
sub
or
in
lock
cli
push
fidivrl
mov
addr16
fs
hlt
fldenv
jns
lret
adc
fisubs
jp
ret
add
adc
scas
test
and
mov
es
xor
leave
enter
arpl
inc
add
xor
jb
cmp
fwait
push
cmp
jbe
jno
test
jbe
jo
mov
mov
fmuls
out
sbb
inc
fidivs
out
mov
push
fmull
rcl
outsl
lock
xor
cwtl
jno
push
dec
inc
mov
adc
fbstp
test
sbb
mov
and
xor
mov
cs
movsb
sub
xchg
xor
push
mov
fadds
cmp
mov
push
paddsb
adc
mov
aas
adc
cli
int
mov
aad
pop
push
dec
sahf
cmp
inc
sbb
lea
xor
jp
in
or
mov
movsb
add
dec
frstor
lds
xchg
xchg
call
cmp
movsl
fildl
sbb
mov
ret
inc
ljmp
aam
xor
out
fnstcw
cmp
std
push
dec
andl
dec
jge
mov
test
clc
jge
push
inc
bound
cmp
or
aad
sbb
or
and
fisubrs
test
nop
or
insb
hlt
sub
and
ficoml
aad
jae
pushf
mov
push
fstl
xchg
js
cs
mov
xchg
add
sub
mov
je
jp
aad
dec
sub
icebp
pavgb
mov
in
pop
sub
lret
pop
pop
lock
dec
divl
inc
jo,pn
xchg
sub
arpl
sahf
mov
mov
dec
add
insl
xor
add
sbb
enter
xchg
pop
inc
jb
adc
push
sbb
pop
insb
push
fnstcw
jb
cmc
inc
dec
gs
dec
or
out
mov
jno
sahf
mov
mov
add
xchg
out
pop
ret
mov
push
cmpsb
pop
ret
xchg
cwtl
mov
inc
xor
lret
hlt
inc
push
push
pushf
dec
push
sbb
ret
xchg
cmpsl
jae
xchg
jge
cmpb
aas
daa
popf
js
repnz
in
sti
notb
lods
insl
dec
mov
xchg
inc
addb
cmpsb
call
das
xchg
jae
repz
sbb
jl
mov
lret
addb
push
jecxz
not
sbb
sub
mov
pop
aaa
inc
sbb
or
inc
jnp
jp
jl
mov
iret
imul
mov
cld
cmp
lea
in
stos
mov
cltd
sbb
push
or
lock
mov
lret
jge
std
fcomp
icebp
dec
outsl
lahf
sub
aam
jp
lds
mov
sub
in
inc
cwtl
insl
fidivrs
insl
lcall
fiaddl
xchg
repnz
push
rcll
sbb
or
xlat
pop
scas
xchg
icebp
add
fldt
sub
sbb
mov
mov
jne
fwait
pushl
adcl
orb
add
cltd
inc
js
sub
aaa
cwtl
hlt
in
int
in
fisttpll
scas
xchg
std
jg
push
push
call
mov
pushf
jmp
mull
aad
jp
add
jbe
aas
mov
jnp
adc
mov
dec
sbb
sub
shrl
mov
adc
subl
add
push
addr16
xchg
sti
cld
outsl
mov
mov
fmul
cmpsl
stos
iret
inc
sub
jge
test
dec
xor
mov
and
add
out
call
and
jae
repnz
scas
cmc
pop
repz
jle
mov
dec
movsb
lods
push
cmp
outsb
adc
dec
movsl
sub
stos
mov
or
cltd
cmpb
movl
xchg
insl
sbb
call
mov
push
mov
dec
cmpsb
xor
pop
mul
push
add
mov
mov
xor
iret
imul
cmpsl
insl
out
and
scas
adc
and
and
out
ret
sti
imul
cmp
add
sbb
and
jnp
cld
mov
fistps
dec
jmp
cltd
nop
and
push
fisttps
aaa
adc
ror
xchg
stos
jmp
or
filds
mov
push
and
push
movsl
cmp
call
pop
inc
pop
mov
sub
scas
xor
inc
fs
jmp
xor
pushf
sbb
mov
cmpsb
xor
or
sub
adc
mov
outsb
mov
mov
aad
lret
mov
lds
adc
in
loope
mov
push
and
jmp
mov
arpl
in
aas
rcl
das
loopne
and
sahf
js
xchg
and
sbb
test
repnz
das
outsb
push
pop
fidivs
sbb
cltd
cmp
add
adc
xchg
dec
mov
pusha
mov
push
ficompl
push
in
mov
pop
cmp
push
mov
xor
jbe
add
mov
and
mov
dec
psrlw
xchg
pop
jb
sbb
cld
add
mov
xor
ja
pop
in
cmpsb
dec
jnp
addr16
mov
out
leave
fnsave
out
jno
cld
in
js
and
mov
mov
xchg
and
add
lods
and
push
jge
push
mov
ret
ss
nop
lea
jbe
xor
pop
pop
lock
rcrb
or
daa
cmp
stos
jmp
call
or
sti
aad
addr16
mov
iret
jle
movsb
daa
xchg
ficoml
sub
fistpl
enter
cmp
sub
jbe
int
and
jle
or
mov
ja
fsubrp
cmpl
xchg
testb
or
or
out
sbb
mov
sbb
push
jns
jne
fists
add
mov
inc
jb
or
inc
jl
mov
enter
and
daa
push
cs
mov
nop
cmp
jp
pusha
mov
push
xchg
or
or
or
roll
test
sub
jmp
jecxz
jl
dec
push
leave
fcmovnu
cmp
cmc
cli
mov
mov
xor
orb
fiaddl
add
jae
sbb
jne
lret
mov
flds
mov
jne
les
jne
out
rorl
stos
inc
mov
sub
or
pop
xchg
adc
ret
xor
das
movsl
mov
adc
and
sarb
mov
movb
push
jnp
test
insb
mov
cmp
sub
jne
sbb
insl
push
aad
js
sti
mov
enter
sbb
jle
push
jbe
in
iret
dec
pop
add
mov
outsb
jecxz
and
dec
mov
sbb
call
cmp
dec
leave
push
jl
xor
lcall
andb
out
sub
out
xchg
add
ss
mov
or
mov
cmpsb
fcompl
xlat
cmpsl
sbb
sbb
pop
hlt
mov
pop
sti
mov
fucom
fcompl
and
dec
pop
dec
dec
sbb
add
jecxz
movsl
dec
jnp
pop
lea
lds
fwait
data16
out
mov
jno
dec
inc
ds
adc
push
test
and
cli
hlt
nop
cmp
jne
xchg
addr16
addr16
dec
sbb
sub
or
lret
jg
lahf
xchg
insl
imul
mov
ss
mov
shlb
imul
xor
jge
cmp
jno
mov
fimuls
je
mov
jle
adc
sub
inc
mov
sahf
cld
js
dec
repnz
sahf
sub
adc
sub
sti
pop
dec
lret
inc
in
cmc
inc
lods
imul
fucomip
ljmp
pop
shr
ja
imul
sub
add
ret
test
inc
into
or
mov
or
adc
jg
loop
clc
orb
pusha
cmpsl
xlat
test
test
pop
xchg
and
mov
pop
outsb
sub
cmp
adc
add
xor
xchg
pop
loop
xchg
cli
fsubrs
mov
pushf
fwait
das
cli
jg
or
leave
mov
push
sbb
xor
ffree
enter
jno
cli
push
pop
js
mov
mov
xor
repnz
xor
inc
sar
adc
push
mov
xor
out
test
cs
movsb
rorl
push
inc
bound
cmp
mov
push
jg
hlt
mov
and
push
push
pop
stc
and
insb
mov
adc
sub
and
adc
cltd
lods
adc
fsubrs
fsubrs
and
lods
movsl
adc
jmp
movsb
xchg
inc
dec
push
cmp
inc
arpl
sbb
faddl
sarl
push
int3
xchg
push
mov
sub
push
pop
sbbl
sbb
ds
in
mov
sub
dec
in
les
or
xor
mov
pushf
inc
xor
mov
sbb
loope
scas
and
sbb
xor
scas
loope
mov
lds
mov
enter
cmpl
xor
scas
popf
orl
cltd
or
out
test
pop
mov
in
pop
xor
subl
fsubrs
push
jmp
fcmovnu
add
lds
mov
or
nop
sub
and
mov
ret
push
mov
adc
roll
inc
test
nop
cmpl
insb
ljmp
mov
and
cmp
outsb
dec
in
jb
add
aaa
push
push
mov
mov
hlt
decl
xchg
ja
mov
mov
pusha
push
and
outsl
adc
mov
or
hlt
rorl
pushf
dec
je
dec
lea
ds
add
call
xchg
out
xchg
mov
adc
pop
pushf
xchg
xchg
mov
adc
pop
inc
inc
arpl
call
popf
clc
add
repz
stos
mov
shrb
or
pop
add
or
iret
or
inc
and
cmc
pop
mov
or
xor
push
subb
dec
faddl
push
push
cs
fadd
into
sbb
inc
mov
icebp
xchg
cli
insl
xor
mov
push
into
mov
adc
jbe
cmp
je
dec
ja
sbb
cmp
pop
inc
dec
cltd
repz
jmp
pop
or
jmp
imul
test
dec
mov
jp,pt
xchg
aaa
das
cmpsl
and
mov
and
sub
aad
dec
xchg
mov
fiaddl
xchg
adc
nop
cli
jnp
cld
mov
cli
enter
mov
sbb
rcll
mov
jno
pop
xor
call
imul
cmp
je
ret
mov
clc
add
mov
loope
add
in
mov
mov
mov
sbb
mov
cmp
mov
ja
mov
xor
cld
xchg
stos
repz
mov
mov
stc
bound
and
outsb
and
neg
inc
xchg
scas
leave
push
or
cmpsb
lea
mov
dec
call
repz
fsubl
mov
in
testl
jno
mov
mov
enter
xor
test
mov
mov
xchg
mov
cmpsb
add
cmp
push
or
jl
cmp
mov
mov
push
call
push
xchg
fildl
cmp
clc
jno
pop
pusha
pop
sbb
mov
mov
inc
loopne
sbb
icebp
cmp
dec
push
in
ret
push
test
xor
fldt
mov
xchg
inc
xchg
adcl
mov
mov
mov
dec
mov
iret
pop
xchg
mov
mov
loopne
into
neg
mov
leave
rcl
fwait
divb
jns
cld
rcrl
test
addl
out
sbbl
ret
aam
jb
mov
aaa
subb
and
ja
repz
and
int
mov
into
sub
shr
cmp
inc
fcomps
test
fstpt
jbe
pop
stc
push
jge
jecxz
push
and
dec
jae
rorl
push
jo
das
cmp
das
fiadds
add
lock
orl
inc
fmuls
jb
jg
push
shrb
js
mov
add
les
push
jno
push
xor
xor
and
mov
aad
pop
sahf
mov
sti
pop
fisttpl
dec
jns
pusha
pop
push
xchg
data16
sti
add
xchg
aas
and
mov
xor
aam
data16
push
xor
movb
stos
je
push
and
adcl
daa
xor
test
jl
sbbl
mov
aaa
jmp
jno
dec
mov
out
es
push
cltd
inc
stos
inc
jmp
hlt
out
jmp
dec
popf
push
fs
shr
ja
xchg
clc
mov
jp
and
inc
fldt
shrw
mov
xor
fcoms
cltd
daa
into
ja
or
insb
inc
test
adc
outsl
inc
je
mov
imul
mov
rcll
test
mov
jnp
and
insb
rorl
inc
stos
mov
pop
pop
mov
mov
cmp
pop
pop
push
and
or
xor
mull
push
cmp
test
sbb
push
and
mov
test
xchg
sub
shll
clc
dec
cwtl
dec
les
cwtl
bound
xor
mov
popf
lods
insl
cmp
pop
push
adc
cmp
repnz
in
fstpt
xor
mov
loopne
pop
dec
pop
stos
mov
repz
ficoms
stc
nop
cmp
decl
aaa
cmpsb
pushf
nop
dec
les
test
push
push
out
push
lods
sub
call
inc
sahf
jl
lods
xchg
lret
jbe
bound
xchg
jmp
adc
mov
mov
inc
in
adc
fldl
cmc
lret
xor
mov
inc
mov
imul
or
scas
out
cmpsl
jno
mov
and
and
outsl
daa
mov
cmp
and
aaa
stos
sub
hlt
xchg
loope
xchg
mov
das
mov
ss
mov
or
sub
push
dec
lahf
shr
movsl
jo
mov
loop
xor
mov
repnz
pop
prefetch
xchg
das
mov
sbb
lahf
nop
vmwrite
mov
repnz
fs
leave
cli
and
mov
cmp
mov
pop
movsb
adc
jbe
mov
out
add
or
movsl
xlat
insb
mov
xor
dec
scas
sbb
adc
xor
push
xchg
mov
jl
push
addl
adc
scas
xchg
lcall
mov
icebp
std
mov
mov
cmp
ss
cwtl
sahf
call
xchg
inc
jle
js
icebp
adc
imul
jns
cli
cs
gs
fisubs
cld
mov
outsb
mov
je
sub
dec
xchg
xchg
cmp
outsb
test
adc
fnstenv
push
aam
inc
repnz
lret
mov
sbb
sub
iret
and
mov
dec
ljmp
out
xor
xchg
loope
mov
lcall
push
cld
sbb
cmp
xchg
loop
fcomi
cmpsb
pop
mov
xchg
jbe
hlt
cmpsl
iret
mov
dec
cmp
scas
inc
mov
lret
mov
add
hlt
cmp
into
mov
pop
arpl
nop
or
jmp
dec
ficoml
pop
lret
rcrb
iret
hlt
adc
hlt
push
test
adcl
push
push
mov
ror
fs
aas
xor
js
lds
sub
adc
adcl
xchg
push
and
and
sbb
cmp
xchg
mov
cmpsl
xor
js
push
xchg
aam
pop
mov
mov
cmpsb
rcrl
clc
ffree
add
in
or
mov
add
push
and
push
and
out
daa
push
sbb
sbb
dec
push
adc
pop
ret
add
stc
rcll
adc
repnz
add
cmp
imul
inc
ret
add
cli
adc
orl
push
aam
or
arpl
or
test
adc
lock
mov
pop
jne
adc
leave
xchg
aas
outsb
dec
dec
cmp
mov
ljmp
dec
adc
mov
movsb
aam
fistl
push
sbb
js
sub
lods
xor
ds
mov
mov
sti
pop
cltd
out
clc
shlb
sbb
xchg
xlat
mov
clc
shll
add
mov
push
hlt
jge
repz
out
fstp
add
insl
push
psubw
bound
cmc
mov
sbb
jae
sub
adc
imul
das
sbbl
daa
jmp
jge
mov
and
into
mov
sub
movsl
loop
fnstenv
jnp
into
add
hlt
ret
push
arpl
mov
xor
ret
pop
test
insl
mov
pop
mov
or
fdivl
jmp
add
push
insl
cmp
mov
mov
int3
sbbl
sub
push
xlat
arpl
push
jne
jne
lods
mov
dec
add
add
ret
unpckhps
mov
movsb
sub
imul
jb
rcl
mov
xchg
cmp
aam
iret
xor
and
push
lods
popa
dec
sbb
negb
daa
and
sub
ficompl
test
inc
sarl
loopne
mov
pop
fucom
add
jb
negb
dec
fisttpl
imul
cwtl
xchg
enter
xor
addr16
jp
test
fwait
jp
and
lahf
cmc
dec
inc
pop
dec
popa
add
jp
dec
and
jbe
and
pushf
out
lcall
jnp
pop
fldcw
xchg
adc
ror
cs
outsl
inc
mov
clc
adc
test
mov
xchg
scas
jb
xorl
mov
mov
out
push
ret
add
push
fnsave
ret
es
loope
cltd
movsb
pop
cmp
imul
idivb
sahf
test
les
test
push
xor
ret
fnstenv
jp
outsb
pop
scas
mov
enter
mov
mov
rorb
sar
or
or
ja
add
sub
clc
bound
fwait
jns
jns,pn
repz
mov
arpl
inc
fmuls
pop
jo
movsb
outsl
sub
cmp
test
xor
jb
or
xchg
mov
xchg
stc
loope
sbb
lods
test
insb
xor
add
pop
out
mov
lock
jbe
mov
lcall
fsubrs
mov
jmp
pop
les
test
cmp
scas
popa
mov
aaa
sbb
mov
std
jae
testl
add
shl
fdivrs
or
sbb
add
out
inc
mov
shlb
xchg
sub
sub
pop
ret
les
xchg
popf
dec
cmp
imul
mov
imul
push
pop
inc
mov
addb
ret
pop
test
xor
outsb
cld
ret
ljmp
movsb
imul
sub
ds
fbld
inc
push
out
pop
xor
dec
add
lock
xchg
jne
call
cli
jge
push
or
loop
or
sbb
cs
push
pop
outsb
loop
aad
stos
aaa
jbe
rclb
inc
ja
cmp
cmp
pop
mov
mov
incl
test
ficompl
ss
pushf
into
inc
fdivr
pop
jge
xor
insb
xor
mov
es
dec
pop
std
mov
dec
dec
jl
and
outsb
cld
sbb
repz
and
add
dec
lcall
add
mov
dec
dec
mov
inc
xorb
arpl
dec
test
dec
fisttpll
cmpsl
cmp
push
sbbl
ss
sbb
sbb
cmp
rclb
or
push
xor
and
xor
inc
gs
movsl
or
xor
add
test
dec
inc
shrl
mov
divb
mov
nop
cmc
mov
popf
sub
push
or
xor
fimull
ret
cmpsb
call
cmp
cmp
aad
aaa
pop
jne
xor
inc
mov
xor
ret
je
dec
aam
jge
out
cmp
mov
or
dec
adc
dec
dec
adcb
jmp
sbb
adc
sbb
xchg
inc
mov
lcall
test
les
pop
push
cli
push
rcl
sbb
jns
jmp
shrb
jmp
sub
iret
dec
adc
jbe
sub
xor
and
imul
sub
mov
inc
and
add
push
leave
xchg
fdiv
in
push
sub
cmpsl
test
inc
shlb
push
cmpsb
sub
outsl
push
jge
mov
push
and
aad
jl
push
add
mov
pusha
lock
fnsave
mov
subb
dec
nop
cmp
mov
xchg
repnz
lods
adc
inc
mov
ss
outsb
imul
out
mov
xchg
mov
or
cmp
xchg
pusha
jecxz
inc
mov
mov
xlat
scas
and
ljmp
popf
adc
mov
pushf
nop
jb
xor
push
pop
dec
jl
xchg
inc
sub
dec
inc
push
jns
push
popf
add
add
xor
dec
ret
data16
fidivrs
jl
push
push
jo
insb
push
push
pop
test
cmp
xchg
adc
inc
movsl
pop
aad
ret
inc
aad
out
idiv
out
ret
add
pop
leave
or
addl
xchg
push
dec
mov
pushf
pop
push
insb
sub
out
inc
pop
or
ljmp
cli
inc
test
iret
xchg
xor
call
add
out
mov
ficomps
hlt
rclb
cli
aas
dec
ret
es
or
xlat
push
mov
pop
jns
mov
nop
repz
sbb
int3
sbb
adc
inc
iret
into
mov
dec
jle
mov
cmpl
jno
mov
jge
xchg
mov
dec
out
inc
mov
popa
sbb
adc
cltd
sar
jae
inc
lret
test
inc
mov
pop
mov
sbbl
enter
mov
jne
into
cmp
mov
in
and
data16
add
call
or
mov
or
and
sub
lods
pushf
test
mov
cld
popf
fstl
xbegin
std
out
stc
jmp
outsb
fdivl
movsl
xor
xchg
dec
adc
fs
fucomi
cmp
imul
ja
rcll
in
adc
leave
dec
or
jle
adc
mov
mov
fs
pushf
fcomps
loop
cs
data16
daa
outsl
jge
aad
adc
ss
aad
lret
sbb
dec
out
push
pop
cmpsb
adc
mov
cmpsb
cmpsb
sub
jecxz
jp
mov
jmp
xor
adc
or
outsb
mov
push
inc
jb
das
cwtl
gs
and
jp
test
pop
jl
aam
int
das
int3
stos
inc
dec
mov
pop
js
es
jbe
mov
xchg
insl
movsb
or
mov
mov
inc
sub
jb
push
scas
es
fsts
cltd
inc
ljmp
push
shll
jbe
inc
je
shll
aad
xor
in
dec
xchg
into
mov
es
push
je
mov
mov
popf
mov
int3
pop
orb
arpl
scas
dec
adcb
lret
aaa
and
sbb
cmp
lock
push
sbb
push
dec
adc
pop
into
scas
jb
invd
mov
addr16
aad
jle
cld
or
jbe
out
sti
jg
sbb
pop
out
push
into
mov
loop
in
mov
xchg
fcoml
jmp
lods
jl
fwait
jecxz
mov
inc
mov
xchg
in
dec
stos
scas
mov
mov
mov
mov
mov
je
add
frstor
arpl
stos
adc
xchg
cmp
and
jecxz
divb
cmc
test
decb
add
gs
jle
adc
mov
hlt
add
jle
mov
mov
daa
sub
gs
sbb
and
xor
outsl
mov
testb
cmp
jmp
in
xor
mov
add
dec
and
aas
cmp
adc
out
xchg
add
adc
insb
and
push
enter
fsubl
incl
xchg
test
mov
xor
mov
sbb
jno
insl
mov
dec
pop
rcrl
es
jmp
jge
jp
mov
rcll
cs
mov
test
mov
out
jecxz
inc
int
popa
sahf
add
xchg
xchg
fistps
mov
mov
fwait
lods
jle
std
mov
pop
sub
lods
mov
and
inc
popf
loop
dec
aaa
icebp
xlat
pop
jbe
js
mov
and
jbe
inc
jne
enter
adc
popf
cld
imul
jne
in
or
scas
push
xchg
jo
scas
jno
fwait
insl
call
dec
mull
outsl
jae
imul
outsb
cli
insl
cmpsb
in
in
push
aad
aaa
mov
insl
rcrl
daa
inc
cltd
das
gs
loope
push
rclb
negl
mov
or
mov
adc
popa
fdivrs
adc
stc
lret
xor
scas
adc
sahf
jl
cs
mov
sub
push
add
cmp
sbb
pushf
movl
fbstp
adc
and
ss
and
push
adc
push
sub
push
push
inc
mov
push
mov
in
adc
lea
stos
pushf
lods
fnstsw
xor
pop
insl
dec
jmp
imul
int3
push
lahf
popf
jo
jle
out
jg
pop
out
ret
mov
add
lret
aad
mov
std
sbb
inc
jg
popf
inc
cs
dec
pop
test
sbb
inc
xorl
test
xchg
andb
arpl
lcall
scas
scas
insl
jmp
inc
add
icebp
ret
leave
lods
lcall
or
imul
push
hlt
enter
or
fnsave
lcall
inc
mov
lock
push
cmpsl
xchg
mov
leave
inc
es
ljmp
inc
dec
mov
pop
in
xchg
push
or
in
enter
sub
lahf
icebp
mov
shrl
test
and
push
adcb
notl
and
mov
mov
cmp
push
pushf
jecxz
lock
cmp
mov
pop
filds
stos
movsl
cmp
mov
inc
orl
imul
push
icebp
lock
add
push
mov
mov
cmpl
pop
xchg
cli
xor
ja
and
das
cmp
sbb
jnp
leave
cmp
dec
inc
and
pushf
out
pusha
push
pop
inc
sahf
or
jb
lock
in
xchg
aad
popa
mov
loop
and
and
pop
stos
inc
test
push
in
repz
enter
mov
iret
dec
adcl
or
push
cmp
test
in
push
addl
mov
xor
adc
scas
into
jmp
xchg
jae
cmpsl
adc
shrl
sub
mov
xchg
jb
mov
inc
push
data16
dec
es
and
cmp
cmp
jle
inc
adc
in
popf
out
pusha
js
fdivs
pop
aaa
adc
aas
and
jmp
mov
aam
lods
call
pop
imul
imul
dec
outsb
loope
lea
xchg
lods
fidivl
adc
int3
cmpsl
aam
cmp
inc
dec
enter
add
fstps
js
inc
fwait
pop
nop
out
iret
les
lods
lock
mov
and
push
decb
pushf
aam
iret
cmp
or
pop
stos
xor
push
movsl
xlat
sub
add
fildll
and
paddw
add
fimuls
cmp
jb
push
notb
sub
repz
ret
ljmp
mov
addr16
dec
jnp
gs
pop
lock
aad
xchg
cld
sbb
sbb
popf
insl
ret
jne
outsb
pop
sub
dec
push
push
dec
sub
sbb
xlat
inc
sub
dec
movsb
call
out
push
or
fldl
xor
sahf
mov
int
xchg
sbb
fildl
push
add
push
fdivl
xchg
mov
xchg
cmpsl
cmp
pcmpeqw
fiadds
and
xor
mov
fdivp
iret
mov
fnstcw
jns
mov
cmpsb
fdivl
mov
xlat
stc
gs
inc
icebp
pop
adc
jb
std
sub
int
mov
and
or
jmp
sub
xchg
sbb
pop
in
and
in
push
add
cmpsl
xchg
inc
hlt
push
push
sbb
rcl
dec
lock
adc
xchg
xchg
sbb
ret
pop
bound
push
fwait
jmp
aam
shrb
mov
pop
pop
sbb
aad
notb
lret
outsb
push
jnp
cmp
adc
and
loop
sbb
jb
mov
scas
test
cltd
mov
pushf
dec
lods
dec
stos
lahf
or
push
dec
fisubl
xor
idiv
hlt
cmpl
add
inc
shlb
mov
push
js
test
js
inc
push
movsb
jno
sbb
es
jle
push
dec
pop
push
lock
fcompl
int
inc
and
aam
out
xchg
das
xchg
es
lods
lock
jg
movsl
jb
scas
jae
testb
sub
push
push
mov
mov
inc
in
mov
push
dec
fdivrs
mov
mov
jl
and
rcrl
fldt
lea
insl
or
loop
imul
int
ds
inc
aam
add
push
fwait
out
adc
add
mov
aas
adc
int
push
pop
stos
mov
push
xchg
sbb
fs
int3
jle
push
sub
iret
sti
and
aas
sub
dec
mov
cmp
xlat
pushf
add
int3
mov
mov
jo
xchg
icebp
push
lds
leave
xchg
cld
cmp
insl
stc
pop
leave
andl
mov
mov
cli
sub
lcall
cmpsl
je
fnstenv
aas
xchg
push
push
fcompl
fwait
sbb
sub
pop
and
cmp
xchg
mov
jae
mov
sub
xor
cmp
and
pop
cmpsb
test
xor
or
dec
call
testl
gs
pop
jo
push
gs
jo
sarb
add
push
sbb
popa
sub
lcall
mov
stos
add
loop
dec
dec
push
pop
xor
lahf
imul
nopl
jnp
iret
xlat
lds
sahf
or
rcrl
cmp
push
notl
test
iret
mov
jg
mov
push
int
push
push
cmp
aas
or
dec
lods
sub
loopne
pop
push
pop
mov
xchg
call
pusha
decl
xor
stos
lea
xchg
in
dec
mov
fcompl
leave
xlat
loop
imul
pop
test
pop
loopne
pop
lahf
sub
push
iret
and
cmpsb
les
adc
push
xchg
inc
mov
out
pusha
cmp
aas
imul
sub
stc
mov
xlat
and
pop
cwtl
mov
lret
fists
aam
push
pop
repz
push
loop
add
lret
xor
andb
outsl
push
icebp
mov
pmuludq
jp
popa
fstl
jae
lds
push
cmpl
sub
push
mov
loop
mov
and
idivb
repnz
sarl
pop
inc
rcrb
xor
outsl
and
dec
cmp
mov
dec
andb
inc
mov
test
cmp
push
cmp
cld
repnz
std
and
jmp
add
lods
push
sbb
ret
aas
and
gs
or
fwait
lcall
xchg
enter
jnp
fwait
inc
jp
out
lock
xor
pop
repz
stos
push
add
cmpsl
mov
mov
jnp
push
cld
jnp
mov
insl
test
jg
les
inc
stc
hlt
push
xchg
test
jo
xchg
into
add
cmp
pop
mov
adc
sub
pop
lock
add
sub
sbb
fisubs
sti
insl
dec
jle
fisttps
pop
iret
jmp
lcall
mov
js
and
dec
xchg
std
push
pop
push
mov
mov
dec
imul
orb
push
or
fildl
dec
aaa
daa
int
out
cmp
cmp
cmp
jp
pop
inc
ja
dec
pop
mull
subb
add
sbb
pushf
lahf
ret
sbbb
ret
mov
xorb
rclb
pop
inc
mov
xchg
inc
and
out
pusha
xchg
loope
mov
roll
fsubr
or
ret
sti
xchg
repnz
add
iret
mov
movsb
pusha
sarb
sbb
pushfw
mov
adc
fcoms
popf
jmp
push
lret
fs
sbb
lock
mov
add
mov
lds
mov
test
xor
mov
mov
insb
lret
dec
and
push
pop
mov
outsb
insb
inc
or
jnp
bound
and
dec
jmp
or
pop
test
popf
ficoml
cmp
xchg
inc
mov
outsb
xor
mov
ljmp
push
sbb
pop
jmp
cld
push
daa
jle
mov
cmp
in
and
xchg
xor
movsb
xchg
xchg
inc
jle
pushf
enter
pop
or
add
rcll
xchg
mov
or
jecxz
mov
dec
xor
push
scas
mov
mov
pop
sahf
add
push
cli
sub
xlat
inc
aas
bound
je
lret
lea
rcr
sbb
add
ljmp
dec
imul
inc
push
fst
stos
fsubrp
lret
dec
push
filds
and
sbb
loopne
xlat
out
fwait
xor
mov
cmc
mov
mov
xchg
test
xchg
xchg
cli
mov
dec
test
in
mov
pop
cmp
or
mov
imul
and
adc
or
bound
fsubl
push
adc
add
xchg
and
adc
test
js
xor
pop
cmp
sti
and
rclb
lcall
loop
lea
sbb
loop
xchg
shlb
outsl
cmpsb
add
in
lahf
xchg
pop
sub
dec
fdiv
cs
pop
pop
push
jo
repz
mov
jmp
neg
arpl
iret
mov
mov
or
cmp
sub
cmpsb
pop
xor
push
aam
jnp
and
sbb
mov
fimull
adc
xchg
je
dec
pop
scas
jg
loope
repnz
ss
shr
sub
loopne
mov
xchg
in
jp
adc
lds
cld
jnp
repz
mov
or
shrb
dec
dec
cltd
or
call
pop
lahf
inc
dec
pusha
mov
push
jge
lods
push
xchg
in
clc
sub
sbb
test
or
mov
sbb
in
insl
jmp
sub
rcrb
jo
daa
sbb
int3
cmc
inc
push
clc
or
stos
je
fsubrl
pop
pop
pop
mov
inc
movsl
cmpsl
adc
test
aam
movsl
push
pushf
ret
mov
std
mov
jle
dec
sub
adc
dec
imul
inc
lret
dec
inc
push
or
into
dec
movsl
popa
push
out
sub
mov
aam
insb
lret
fmuls
fbld
out
fbld
or
mov
xchg
cmp
sbb
add
jle
xorb
push
les
fidivrl
xor
jle
imul
movsb
cs
add
pop
cmp
stos
sub
jno
dec
mov
std
mov
rclb
xor
scas
add
mov
mov
rcr
mov
fwait
aas
std
mov
mov
push
ljmp
or
pushf
mov
jb
xchg
inc
fnstsw
and
dec
jg
mov
je
xorb
xchg
fildll
xchg
ljmp
jns
fisttpll
mov
push
cmp
mov
cmp
fs
sub
std
ljmp
and
out
in
ret
dec
mov
mov
lds
inc
push
cmpl
inc
sarb
mov
lret
mov
stos
pop
fadds
and
xchg
push
xlat
lret
movsb
jg
jae
xor
jo
pop
fwait
test
inc
add
xlat
mov
outsl
jnp
xor
cmp
sbb
push
pop
xchg
fwait
scas
jg
lods
mov
mov
xor
pushf
or
add
es
inc
dec
jnp
pop
sti
sarb
sub
xchg
add
dec
movsb
push
dec
in
fistpll
xchg
ljmp
mov
les
pushf
inc
sti
out
xor
scas
add
mov
jg
sbb
je
fimuls
lods
aaa
bound
cltd
sub
add
sbb
jno
xchg
jns
clc
addl
push
dec
mov
push
sahf
jg
mov
pop
and
or
in
inc
xor
sbb
test
in
or
decb
push
lahf
mov
or
stos
lds
nop
mov
imul
xor
sub
sbb
rolb
les
shlb
push
test
xchg
mov
inc
mov
or
in
aas
rclb
add
shrb
xchg
les
mov
cmp
dec
inc
jl
cmp
mov
mov
pop
sub
sbb
push
inc
daa
out
loop
sahf
test
sub
pop
jbe
dec
scas
not
scas
jp
push
add
mov
sbb
outsl
mov
sub
xor
incb
pop
and
and
addl
dec
fcoms
sldt
sahf
scas
std
int
mov
rcll
test
push
mov
sbb
or
sar
pop
insb
mov
ljmp
and
leave
jmp
jnp
xchg
movl
imul
push
or
mov
mov
cld
fwait
sbb
pop
in
repnz
cmc
and
jmp
adc
roll
test
cmp
add
mov
ja
xchg
fnsave
and
inc
sarl
outsb
test
jl
outsb
cmpsl
xor
ret
sbb
dec
pop
mov
insl
popa
or
mov
push
jecxz
mov
das
fs
and
andb
fsts
clc
in
pop
pop
pop
mov
adc
mov
mov
adc
or
imul
push
call
stos
push
mov
push
xor
xlat
rol
fmulp
aad
jo
adc
jnp
fisubs
ret
adc
test
ljmp
cmp
ja
loopne
insb
mov
jmp
mov
cmp
xchg
sub
jno
push
pusha
or
ljmp
inc
mov
sub
shll
add
jb
pusha
xchg
inc
mov
sub
or
xor
pop
cmpl
mov
mov
mov
outsl
jae
sub
lods
mov
jns
in
int
xchg
xchg
xor
das
adc
lds
mov
addr16
jno
adc
dec
xchg
adc
addr16
subl
lods
cwtl
adc
xchg
pop
pop
icebp
xlat
and
sub
xchg
xor
adc
fdivl
cmp
clc
sbb
push
push
mov
ljmp
pop
cld
mov
lcall
out
cmpsl
out
enter
arpl
or
mov
cltd
inc
and
mov
mov
into
in
xchg
pop
mov
in
stos
inc
test
xchg
mov
jge
ret
mov
cmp
fwait
movsl
shll
sar
insb
sbb
mov
inc
xchg
mov
inc
fwait
je
or
and
ljmp
nop
int
daa
loope
push
shrl
xor
in
inc
sbb
stos
push
adc
sub
inc
sub
lahf
ljmp
pushf
cli
cmp
xor
mov
xchg
pop
ljmp
out
cwtl
push
pop
out
ljmp
mov
and
sub
test
sbb
pop
aas
adcb
adc
sbb
jno
popa
shlb
mov
int
cmp
test
filds
push
mov
sub
fdiv
js
scas
fisubrs
sub
mov
push
cs
fsubrs
into
pop
in
mov
arpl
mov
mov
mov
nop
lcall
stos
fistpll
std
out
mov
push
xchg
jae
cwtl
or
jge
fsubs
push
dec
add
push
adc
test
and
fs
lock
pop
into
pop
hlt
pusha
arpl
add
sbb
or
std
mov
xchg
xor
dec
pop
mov
sbb
repz
fwait
ret
cmpsl
and
rorl
mov
insb
jge
lahf
pop
aas
fistps
and
aas
inc
jbe
sbb
mov
push
test
sarb
or
imul
bound
loope
push
fldz
test
sub
xchg
xor
and
aaa
sti
aaa
inc
mov
sub
sub
cmp
pusha
aaa
jg
sbb
orb
loope
popf
cli
xor
mov
movsl
or
sub
pop
subb
sbb
lds
repnz
dec
test
imul
xchg
addr16
push
jns
sbb
mov
dec
pop
pop
je
add
pop
cwtl
rorb
sub
dec
addr16
mov
or
pushf
dec
fsubl
leave
cmp
or
xchg
negb
divl
ret
outsl
mov
mov
adc
mov
jns
imul
mov
xor
pushf
scas
icebp
int
daa
loope
jb
repz
in
orb
outsb
out
push
push
xlat
pop
dec
sub
add
and
dec
popa
xorb
ret
jl
cwtl
jne
pop
pop
stos
sti
sbb
ja
mov
ret
xor
stos
mov
es
test
cmpsl
out
repz
test
sti
lcall
shll
insl
fiaddl
push
cmp
dec
rcrb
dec
dec
imul
mov
pop
sbb
ret
jae
or
out
aaa
jo
fisubrl
insl
and
daa
clc
test
loop,pn
stos
movsb
inc
and
aaa
call
pop
xchg
and
sub
les
adc
out
xlat
pop
popf
pop
icebp
outsb
xlat
subl
pop
daa
push
out
ret
mov
ffreep
aam
lcall
sbb
insl
jecxz
sub
mov
xchg
enter
push
cmpsb
or
push
fiaddl
pop
push
push
mov
inc
mov
mov
jno
push
clc
mov
mov
push
faddl
aam
push
hlt
std
jmp
and
imulb
and
aad
xor
das
xchg
movsl
push
mov
lret
lahf
mov
inc
inc
mov
loop
push
cld
pusha
push
xchg
jno
fwait
pop
in
mov
sub
inc
inc
add
fisubs
pop
int
dec
insb
or
jbe
pop
jg
cmpsb
cmp
sbb
call
add
mov
rcrb
rcl
mov
das
xchg
cmp
mov
and
scas
xor
cmp
imul
mov
inc
xor
addr16
fiadds
xor
shrl
mov
repnz
cli
mov
xchg
push
arpl
jl
push
mov
clc
mov
inc
ss
xor
mov
jbe
movsb
sbb
jnp
mov
xor
pop
push
push
dec
loopne
cmpsb
rcl
sbb
scas
in
shll
movsl
cmp
das
lods
adc
roll
xchg
inc
pushf
jecxz
pop
rcr
mov
lret
cmc
add
xchg
ds
in
dec
dec
jo
xchg
ljmp
pop
stos
cmc
imul
aas
outsb
mov
enter
inc
or
inc
decl
xor
iret
test
cwtl
std
dec
stc
data16
out
cmp
in
fildl
jbe
iret
mov
sub
jb
div
test
mov
sbb
addl
outsl
je
fucomi
repnz
inc
fiadds
in
bnd
sbbl
es
inc
pop
adc
adc
xchg
movsb
cwtl
dec
lahf
imul
xor
nop
mov
mov
dec
mov
jmp
and
and
fs
int3
jbe
push
sbb
mov
into
jo
sbb
outsl
subl
cmpsl
shll
in
cmc
and
das
push
jge
xchg
lods
sbb
inc
pop
out
or
test
test
pop
daa
out
xor
ss
mov
push
test
mov
adc
in
rcrl
lods
add
inc
cli
sbbb
gs
push
sbb
mov
adc
leave
xchg
enter
jnp
pusha
lret
fcmovnb
dec
imul
addb
sbb
leave
lret
addr16
loope
or
das
mov
cld
xor
dec
mov
sub
mov
sbbl
mov
add
pop
or
lcall
mov
jg
mov
pop
dec
add
xchg
cmp
cmp
movsb
cmp
test
ss
ja
adc
xchg
lahf
xchg
inc
adc
out
or
dec
data16
pop
xor
lahf
mov
sub
data16
call
stos
adc
frstor
lods
mov
cmp
xorb
push
inc
cs
loopne
pop
jle
sbb
clc
or
xor
jae
add
repnz
xor
sub
fmul
adc
cmp
mov
adc
jle
out
dec
inc
sub
jnp
cmp
push
inc
mov
mov
fwait
xchg
sbb
push
in
lock
shll
adc
cmp
mov
out
sub
js
ljmp
inc
pop
jo
test
push
out
lock
lret
pushf
movsb
cld
je
adc
pop
fdivl
shl
lock
push
andb
add
lock
pop
fnsave
lea
jo
add
pushf
sbb
xlat
add
lock
mov
data16
mov
js
cld
cmpsb
mov
dec
sub
adc
bound
pop
xchg
ret
lea
mov
sbb
das
sbb
mov
shlb
mov
jl
shlb
or
cs
jnp
popf
dec
mov
add
enter
push
jecxz
sarl
jecxz
mov
or
out
pop
dec
andl
daa
loopne
push
shll
fs
daa
sbb
and
imul
xchg
lcall
cmp
sub
fsts
and
xchg
cmpsb
sub
fwait
aam
insl
xchg
sbb
loopne
jb
sbb
out
add
lcall
jle
insb
jo
mov
fs
loope
cwtl
aam
pushf
stos
cmp
lods
aaa
push
mov
add
inc
arpl
mov
dec
pop
or
sub
hlt
dec
push
sbb
flds
mov
push
mov
cs
aam
out
mov
push
jnp
dec
rorl
xchg
mov
lock
mov
andb
lods
popa
outsb
jnp
nop
jmp
sbb
pop
dec
leave
test
pop
or
push
orl
mov
and
mov
outsl
bound
mov
xchg
dec
add
sbb
or
mov
sbb
add
jno
pop
mov
js
in
mov
pop
mov
or
mov
jae
aas
inc
jl
lcall
ja
mov
sbb
jnp
xchg
inc
jp
adc
lea
mov
inc
pop
dec
stos
xor
xlat
cmpsb
sbbl
call
mov
push
iret
mov
jae
test
push
sbb
dec
enter
mov
in
or
out
cmp
xor
shll
lcall
dec
imul
faddl
jmp
in
jp
pop
mov
xchg
or
cli
xchg
mov
xchg
add
into
pop
push
call
push
xor
popa
pop
gs
push
cmp
sbb
test
xchg
int3
and
sub
jg
sbb
subl
and
stc
es
pusha
pushf
js
xchg
in
insb
sub
lret
add
mov
lods
loopne
xchg
sbb
adc
mov
push
jne
in
lods
into
adc
clc
push
add
and
inc
test
and
andb
cld
jne
stos
push
xchg
adc
pop
push
jp
adc
xor
clc
xchg
movsl
jo
idivb
mov
xlat
push
ljmp
loopne
cmc
push
inc
mov
and
int3
scas
fwait
mov
push
mov
test
mov
jbe
movsb
dec
dec
test
out
xor
pop
mov
pop
mov
in
sub
sbb
jnp
scas
clc
outsl
xor
inc
xlat
add
push
insb
sbb
ss
mov
xor
jns
jmp
sti
jle
pop
shrl
and
and
pop
pop
vpminub
cmp
sti
sub
push
inc
jae
je
negl
mov
pop
stos
cmc
jmp
movsb
jb
mov
mov
cmpb
mov
cmp
xchg
imul
arpl
adcl
fadds
daa
or
xor
jg
mov
popa
outsl
cld
das
cwtl
cmp
pop
movsb
inc
test
jecxz
dec
sub
jmp
cld
sbb
sbbb
fsubrp
adc
sbb
je
icebp
sub
push
push
cmp
jne
imul
int
or
and
aad
mov
mov
sub
bound
cmp
or
push
jmp
push
dec
adc
lcall
hlt
std
divb
mov
cmp
aam
mov
in
mov
das
add
mov
js
stos
jg
sti
test
xor
out
sub
insl
aad
f2xm1
mov
aaa
ds
mov
cmpsl
pop
and
pushl
xchg
pop
push
pop
push
mov
or
ss
movsl
es
adc
xchg
testb
stc
mov
cmp
sti
push
popl
xchg
aas
cmp
fldt
and
mov
movsl
mov
js
fnstsw
test
out
mov
pop
out
stos
aam
arpl
xor
scas
sbb
cmpsb
ror
pusha
mov
insl
loop
sub
push
mov
push
or
scas
fsubrs
outsl
shll
dec
jo
or
xchg
stc
sar
mov
mov
pop
inc
add
cmp
cmp
cwtl
push
xor
addr16
add
push
and
out
fisubrs
xor
lahf
aas
das
ljmp
jne
xchg
and
mov
test
clc
adc
stos
push
in
loope
mov
shlb
xchg
stos
ret
push
movsl
fimuls
or
movsb
aaa
out
dec
test
cmp
imul
fiaddl
pop
icebp
scas
inc
push
dec
and
xchg
xchg
cmp
mov
inc
jne
push
insl
mov
xlat
and
pop
or
adc
outsl
pop
or
cmc
mov
jb
stos
mov
cltd
push
add
aam
push
lret
lcall
sti
dec
add
das
mov
adc
and
push
sbb
lds
push
stos
mov
out
cmc
js
and
jns
inc
js
xchg
iret
call
push
xchg
aam
movsl
sub
jo
lea
xor
lret
out
clc
fstpt
jae
jp
mov
addr16
push
dec
sbb
es
cltd
arpl
mov
jbe
dec
xchg
imul
sub
scas
push
lds
add
outsb
inc
xchg
cwtl
insb
repz
jmp
and
mov
push
mov
enter
fcomi
rcrb
and
jne
lds
push
push
pop
data16
in
call
inc
dec
adc
xor
xchg
add
dec
mov
dec
cld
dec
add
lock
and
jmp
xchg
add
arpl
dec
jbe
stos
inc
mov
adc
lahf
mov
test
fdivl
mov
ljmp
cmp
mov
xchg
testb
pusha
and
adc
push
mov
aaa
jb
cmp
sti
dec
cmc
sbb
cmp
int
outsl
jns
lock
lcall
ret
push
lret
mov
sbb
push
push
xchg
stos
sbb
sysexit
nop
ja
adc
or
xor
gs
je,pt
mov
gs
pop
les
fwait
in
xchg
mov
push
ret
jno
lods
pop
jge
clc
dec
ror
mov
lret
ja
sbb
add
mov
pusha
jmp
mov
or
mov
mov
inc
cmpsb
fidivs
inc
hlt
mov
dec
inc
stos
arpl
ds
jnp
sub
mov
xor
cmpsl
out
lcall
push
sbb
cmp
lret
jae
jbe
js
lahf
cmp
ljmp
cs
int3
dec
mov
jge
je
fcoml
les
neg
pusha
repnz
pop
out
or
mov
mov
lret
test
mov
xor
and
les
mov
push
inc
jne
push
daa
ret
rorb
pop
or
mov
pop
pop
inc
adc
mov
mov
jmp
xor
mov
out
xor
inc
mov
jle
and
leave
fucomip
pop
xor
in
mov
pusha
incl
int3
dec
outsb
cmp
outsb
loope
or
and
mov
and
mov
nop
nop
aas
addr16
adc
cmp
fmul
les
popa
loopne
negl
and
mov
fs
mov
jle,pn
or
aas
push
cld
sbb
mov
inc
xchg
push
lahf
xchg
mov
jmp
imul
ret
popa
add
jecxz
sub
je
mov
aaa
imul
orl
mul
out
add
adc
adc
in
sub
jo
jo
cmp
jmp
js
mov
sub
insl
and
xor
sti
mov
andl
mov
adc
adcb
add
mov
pop
jno
xchg
stos
mov
jb
callw
xchg
jecxz
enter
jb
dec
push
shrb
stos
mov
xor
nop
popf
xor
lret
out
pushf
cmpsb
bound
aad
gs
jbe
insl
and
lret
bound
mov
mov
rep
add
lcall
inc
enter
enter
daa
mov
fiadds
cmp
mov
inc
mov
ds
mov
adc
add
clc
pop
xor
rcll
stos
xchg
mov
sub
sbb
scas
xor
pushf
jg
push
push
test
inc
and
inc
imul
ret
cltd
jge
aas
fmull
in
xor
mov
idivl
and
rcll
leave
push
sub
pop
outsb
dec
aam
push
outsl
arpl
jle
fnstenv
push
mov
mov
cwtl
xchg
inc
out
dec
mov
stc
cmp
push
hlt
adc
enter
in
in
sti
xchg
repnz
cli
cmp
ror
je
adc
adc
and
add
popf
jecxz
stos
adc
push
and
lea
xchg
mov
mov
loope
mov
cli
jno
adc
cli
or
mov
out
xor
jecxz
fdivrp
lds
push
sbbl
les
cli
clc
jp
xor
jae
nop
inc
and
push
add
test
fstpl
jnp
adc
aaa
stos
repnz
mov
popf
arpl
scas
lods
pushf
or
mulb
adc
out
sbb
push
mov
je
insb
repz
stos
jg
jne
lock
fidivs
lret
sbb
and
repz
xor
add
lods
xorl
push
ficoml
scas
jl
pusha
mov
push
adc
push
fsubrl
fs
adc
cmc
dec
outsl
pop
fildll
lds
or
test
in
in
push
int
jp
or
les
fsubrs
mov
fucomi
dec
cmpsb
sahf
cwtl
dec
in
repz
push
int
mov
aam
sarb
xor
sbb
lcall
xchg
or
mov
cltd
jbe
lret
icebp
jno
mov
inc
adc
lahf
push
and
aad
mov
clc
scas
and
or
xchg
or
lret
cltd
jmp
adc
adc
rcll
push
cmc
test
sub
inc
in
jb
pop
mov
lods
xor
cmp
cmpsl
jno
mov
push
dec
cltd
call
mov
aad
xchg
mov
sbb
cwtl
xor
push
sarl
fists
pop
repz
jb
dec
pop
sub
and
test
pusha
pop
xchg
or
cmpsb
xchg
out
push
mov
pop
out
ljmp
loopne
jnp
jno
jo
dec
jns
loop
xchg
xchg
movsb
and
xchg
fstpl
movsb
pop
dec
ss
cmp
xor
fidivl
jno
ret
xchg
push
lods
mov
mov
pop
fldenv
xlat
sbb
mov
push
sahf
bound
pop
add
mov
dec
pushf
js
ret
jmp
das
push
xor
idivl
in
outsb
jne
stos
mov
fstpt
mov
jge
push
pop
ljmp
lods
fmul
adc
insl
jae
push
xor
mov
inc
mov
mov
mov
pop
xchg
mov
and
stc
sbb
pop
icebp
loop
jb
xor
xor
jne
call
roll
fadds
sti
and
pop
cs
aam
mov
nop
sbb
or
movsl
fimuls
popf
xlat
and
lea
adc
xchg
test
sbb
xor
popf
pop
scas
outsl
jno
adc
push
outsb
cmp
push
adc
cs
into
outsb
repnz
xor
xchg
ret
and
mov
scas
sub
mov
popf
pop
push
and
in
ss
push
divb
test
xchg
stc
lds
sub
or
mov
xlat
xchg
shrb
cmp
sbb
ds
or
int3
xchg
sub
decb
and
rolb
jnp
mov
dec
fwait
nop
push
mov
pop
inc
mov
rcrl
jne
adc
and
pop
mov
std
call
mov
adcl
adc
xchg
mov
cwtl
xlat
ficoms
fsubrl
mov
movsb
xchg
lret
and
lahf
cmp
hlt
dec
or
xchg
mov
sahf
repnz
mov
push
neg
jo
in
fnstcw
pop
in
pop
cmp
cwtl
popl
dec
push
ja
jle
outsl
pop
push
dec
mov
cmpsb
xchg
push
sub
pop
icebp
pop
jo
cmp
jo
ss
and
fnsave
sbb
sub
jecxz
mov
cmp
jne
test
mov
mov
mov
sub
ja
dec
test
ljmp
xor
inc
insb
jmp
lods
dec
scas
mov
and
fisubrl
mov
pop
sub
push
push
xchg
out
cmc
xorb
andb
pop
mov
jmp
or
xor
xchg
shlb
movsl
sbbb
cmp
test
pop
lret
int
mov
cmp
in
lds
push
and
clc
fnstcw
jo,pt
je
dec
pop
ficoms
jae
daa
popa
rcrb
pusha
cs
fdivl
mov
lock
faddl
cltd
lahf
repz
or
cltd
sbbl
sbb
out
test
lret
pop
rcll
xchg
addr16
xor
test
lret
testb
mov
in
pusha
xor
popf
in
and
or
cli
addl
dec
fldenv
imul
jnp
notl
ret
xor
ss
push
jb
mov
jmp
out
mov
mov
cmp
jae
and
push
nop
xchg
mov
pop
mov
jle
xchg
adc
mov
inc
inc
add
shll
xor
sahf
fldl
shrl
push
out
sbb
mov
daa
adc
sub
std
inc
stc
mov
shlb
outsb
jno
mov
dec
or
pop
dec
repz
xor
xor
jbe
add
hlt
sub
lods
jo
push
inc
cld
mov
in
fimuls
sub
dec
icebp
pusha
rdmsr
cmp
std
mov
mov
jge
cmp
out
inc
push
adc
xor
jle
add
or
xchg
pandn
jl
andb
xorb
xor
popa
mov
xor
rolb
mov
xor
or
and
lret
xlat
mov
or
fimull
int
mov
fstpt
sbbb
stc
mov
leave
dec
adc
jmp
mov
cli
sub
lods
mov
pusha
push
add
dec
sbb
xchg
dec
pop
pop
jne
es
repnz
lahf
out
mov
inc
dec
xchg
jp
xor
test
fisttpll
pop
icebp
and
pop
cld
or
or
mov
push
scas
adc
mov
lods
push
inc
push
fcoml
or
pop
out
sub
dec
cmp
mov
scas
lods
mov
test
pop
xchg
jb
mov
out
adc
jo
and
inc
inc
pop
adc
clc
mov
lret
and
ljmp
mov
mov
fptan
stos
mov
movsb
push
sub
stos
lea
xchg
cmp
jge
sub
xchg
jle
test
in
rcr
jle
xor
jmp
push
insb
subb
orb
mov
dec
les
in
js
insl
jae
rcrb
iret
fldenv
jge
add
sbb
scas
mov
insl
das
jmp
jl
insb
lea
and
dec
adc
pop
or
clc
ret
stc
xlat
clc
jg
push
add
jb
int
xor
push
aam
loope
mov
loop
rcrl
sahf
sbb
add
rol
inc
repz
ljmp
xchg
mov
mov
bnd
andb
xchg
fwait
xor
mov
push
mov
jbe
sbb
lods
vsqrtss
imul
or
mov
movsw
movsb
lcall
sub
or
mov
lcall
in
outsl
jp
jmp
cwtl
in
gs
loope
mov
adc
testl
out
imul
aas
rcrl
push
mov
and
adc
out
ffree
or
push
mov
pop
sbb
popf
stos
mov
aad
and
adc
push
ficomps
add
sti
mov
adc
psubusw
ret
pop
push
sub
mov
shlb
or
cmc
inc
jnp
movsl
subl
aad
daa
mov
ret
enter
out
cmp
push
sbb
shl
and
loopne
xchg
imull
inc
sti
and
sub
xchg
fs
aam
jp
push
or
jne
pop
dec
sbb
or
mov
or
pop
gs
das
jmp
nop
xchg
out
push
sub
pop
sub
scas
jb
shrl
rol
mov
stos
out
and
int3
inc
leave
mov
inc
ret
inc
mov
lods
push
or
jg
pop
sbb
fisttpll
pop
aas
cmp
push
xchg
scas
jns
nop
xor
test
mov
scas
or
adc
dec
aaa
arpl
imul
mov
push
cmp
inc
mov
jmp
cmp
xchg
or
adc
sub
arpl
jmp
mov
pop
mov
dec
adc
int3
addr16
mov
imul
rcrb
xor
shll
cmp
dec
jge
js
je
pop
xchg
popa
sbb
ret
cltd
pop
adc
test
pop
sbb
or
add
andl
fstp
cmc
into
xchg
adcb
movsb
rorb
push
icebp
and
add
enter
pop
pop
or
adc
movsb
enter
or
push
aaa
push
jl
sbb
pop
and
enter
pop
xchg
lea
cwtl
push
fcomp
cmpsb
aam
and
cmp
loope
sub
mov
out
inc
xchg
std
push
jl
stos
in
jmp
movsl
xorl
inc
ret
in
aad
lods
fcmovne
pop
out
or
test
pop
sti
lock
jecxz
add
xchg
js
mov
push
loopne
jg
sbb
inc
je
fisubs
xchg
aad
stos
mov
stos
pop
sbb
notl
adc
js
incl
push
jae
fimull
sbb
sub
imul
call
sbb
icebp
lods
outsb
loopne
mov
mov
xchg
inc
mov
popf
iret
or
call
fcompl
shrb
lret
cld
jb
js
add
aad
inc
push
xor
sbb
dec
lds
or
xchg
jb
iret
xor
stos
outsb
push
inc
adc
mov
iret
cmp
loopne
and
jae
insb
cld
pop
mov
adc
punpcklwd
lds
stc
icebp
fcmovb
pop
jb
inc
les
inc
je
mov
xor
push
xchg
js
or
sbb
lea
std
mov
pop
jge
mov
mov
inc
pop
movsb
lods
jl
lcall
test
loopne
rcll
cmc
or
sarl
les
roll
adc
push
adc
lods
hlt
fcomp
sbb
sahf
jmp
popa
in
sbb
or
daa
add
cli
sub
adc
sub
pop
stos
xor
leave
adc
js
pop
into
mov
ss
cmp
mov
jnp
fisubrl
mov
push
js
test
popa
std
adc
mov
mov
sti
xchg
lret
std
shll
pop
or
inc
imul
sbb
cmpsl
pop
aaa
cmp
into
jmp
pop
inc
inc
lret
adcl
mov
add
lods
mov
sub
je
iret
iret
and
scas
push
into
rcr
pop
outsl
or
push
push
pop
ss
mov
jmp
dec
stos
jb
test
testl
and
jne
mov
shr
sub
jb
push
cli
sub
js
ljmp
orl
xor
mov
or
xchg
lock
pop
cmp
push
dec
loop
push
int
movsb
in
insb
rcrb
xchg
mov
cmp
push
inc
shr
sub
jbe
arpl
out
and
add
jle
out
xor
cwtl
nop
sbb
lock
ljmp
into
cmc
push
inc
ss
imul
jmp
mov
leave
jge
out
or
jmp
mov
push
rolb
nop
push
cmpsb
leave
movsb
lds
mov
dec
xor
jl
int
jmp
add
jns
dec
ljmp
gs
sub
in
add
dec
xlat
add
int
dec
mov
xchg
rol
jno
lods
jp
sbbb
jle
sarb
aam
add
mov
add
cmc
mov
frstor
fbstp
or
mov
pushf
xchg
mov
ret
insb
pop
push
inc
jg
mov
sub
ds
mov
arpl
fwait
mov
fwait
daa
push
inc
xchg
repz
imul
fwait
xor
cmp
cs
aaa
push
fldcw
and
cli
mov
aas
sbb
popf
mov
shlb
xchg
pop
cmpsl
repnz
add
cmp
jg
cltd
and
sub
fisttpll
adc
stc
test
mov
push
xor
and
xchg
inc
int3
sbb
cmp
scas
push
adc
fdivrl
divl
pop
xor
push
push
pop
arpl
xchg
add
dec
xchg
pop
or
dec
sub
fnstcw
fcmovnb
adc
dec
ja
pushf
sahf
aas
and
loope
pop
pop
pop
loopne
add
stos
or
jno
pop
pop
inc
mov
and
add
mov
sahf
mov
mov
repnz
cwtl
mov
ljmp
js
outsl
push
jne
push
push
jge
divl
or
enter
sti
mov
mov
mov
xlat
xchg
mov
lcall
mov
scas
idivl
orb
jmp
bound
cld
dec
mov
outsl
sbb
pop
loop
lcall
and
dec
adc
pop
pop
xchg
mov
mov
and
adc
dec
fiaddl
jne
out
cld
sti
movsl
sub
das
arpl
outsb
ja
push
jg
lcall
cmp
jmp
iret
cld
fs
sub
cld
inc
or
movsl
imul
repnz
es
xchg
cli
imul
pop
ss
add
lcall
bound
lcall
sub
addr16
jae
mov
fsubrl
into
add
xchg
shlb
sahf
int3
repnz
into
and
shrl
mov
adc
mov
out
adcb
xor
insb
fsubr
push
add
sub
mov
fwait
mov
scas
fcomi
sbb
mov
xlat
les
pop
jno
sbb
cmpsb
outsl
or
popf
in
jp
cmp
xlat
sub
jle
scas
loope
out
mov
imul
push
ss
jg
cmp
imul
mulb
fisubl
cmp
cld
je
gs
sub
daa
dec
lods
jle
in
test
cwtl
sbb
sahf
mov
into
test
and
jnp
mov
lea
mov
jae
js
cmp
cltd
cpuid
icebp
cs
add
aaa
jo
jne
jo
in
lock
push
add
outsl
mov
add
in
mov
push
int
and
add
icebp
sbb
cs
jg
pop
filds
jge
lods
jmp
inc
xchg
jge
pop
lods
repz
cli
addr16
inc
mov
lods
fucomp
mov
mov
popa
inc
mov
in
orl
lahf
sub
dec
mov
add
lods
movsb
mov
fsts
in
inc
push
lret
int
push
cltd
push
push
inc
lahf
cmp
clc
leave
xor
mov
fsubrs
add
xchg
cmp
push
dec
je
cltd
sbb
add
push
pop
addr16
or
mov
aaa
mov
or
outsb
rcrl
pop
inc
and
dec
xchg
mov
adcl
cltd
aaa
jne
hlt
dec
int3
das
mov
inc
shl
pop
lcall
imul
push
dec
jecxz
push
xchg
out
lock
add
sub
rcrb
mov
sbb
push
jl
sbb
pop
mov
or
bound
jno
in
mov
pop
cmp
mov
mov
fwait
imul
xchg
lret
std
jle
rcll
jo
cmp
cltd
pop
in
imul
sub
jbe
pop
push
fadd
lock
push
fadds
mov
ljmp
pop
jns
shlb
xor
xchg
jl
andb
push
jge
lret
cmpsb
dec
nop
push
fdivrl
dec
jecxz
mov
sbb
jp
dec
jmp
xchg
sub
out
mov
inc
stos
rorl
and
in
sbb
cmpsb
xor
aam
adc
repz
pop
jle
adc
and
push
insl
push
lea
loop
aaa
shrb
cmp
filds
mov
loope
push
pop
ss
inc
orl
mov
js
inc
push
jmp
cmp
aad
and
rcrl
add
pusha
xlat
push
in
and
cmp
lds
mov
mov
int3
ffree
fsubrp
sbb
mov
in
sub
test
outsl
adc
push
fiadds
dec
clc
arpl
movsb
std
out
xor
and
xchg
insb
push
mov
xor
sub
jmp
dec
push
mov
pop
dec
shlb
test
aam
sahf
adc
ljmp
push
xchg
mov
ss
inc
add
and
mov
xchg
mov
jnp
pop
out
and
or
mov
cmp
je
and
and
pop
jp
lods
aam
jns
es
sti
mov
cmp
push
gs
mov
and
arpl
jno
pop
rcr
fldt
jns
and
pop
xchg
fimuls
xchg
dec
mov
nop
pop
scas
es
mov
mulb
push
cmp
andl
int3
xor
fistps
shll
add
mov
sbb
sub
insl
adc
ret
test
adc
in
subb
jne
jle
frstor
sub
xchg
sbb
fwait
aas
jmp
jne
pop
addb
mov
xor
loop
lcall
inc
cli
sbb
adc
cmp
sbb
adcb
dec
pop
pop
add
mov
lret
pop
and
mov
fcomi
xor
add
or
ficoms
test
iret
jge
arpl
mov
xor
leave
inc
in
jb
dec
push
push
sub
out
insl
jno
test
movups
xchg
xchg
adc
sub
xchg
or
jecxz
shll
and
mov
pop
jne
sbb
push
cmp
call
int3
xor
cmp
fstpl
outsb
loop
inc
push
push
test
pop
xor
lock
mov
sbb
rol
jnp
imul
call
stc
pop
inc
in
out
cmpsl
imulb
imul
loop
pop
xchg
sbb
sbb
push
cmp
sti
shrb
call
outsb
pop
out
and
cwtl
sahf
sub
cmp
sbbb
in
dec
testl
stos
push
loopne
shll
sbb
mov
sub
dec
jg
adc
dec
cmpsb
imulb
outsl
sub
cmp
push
les
mov
fsubr
not
pop
roll
sbb
lds
push
aam
popa
jge
mov
sbb
mov
dec
xchg
xor
leave
cltd
out
xor
mov
and
cmc
pop
std
je
lea
scas
inc
add
cli
mov
lahf
mov
cmc
cmpsb
ficomps
les
lahf
std
cli
sqrtps
pop
hlt
loop
fbstp
ja
pop
cmp
xor
and
jbe
xor
ja
or
daa
xchg
imul
push
mov
jg
and
imul
insl
sub
pop
in
pop
rolb
jo
stos
out
add
negl
mov
push
mov
or
es
lock
mov
dec
cmpl
repnz
jmp
adc
cmp
push
inc
test
lahf
adc
test
xlat
inc
jae
jno
sub
or
push
jne
clc
lea
jne
imul
fs
aam
aam
jge
push
mov
test
popa
les
and
mov
jne
ds
xchg
fstl
mov
or
dec
ret
std
sahf
imul
inc
popf
fsts
adc
cmp
imul
data16
dec
pop
in
aad
jno
or
dec
stos
lcall
call
lea
push
push
inc
mov
mov
fistpl
inc
repz
daa
mov
push
sahf
loopne
int
cmp
push
jmp
or
jb
jecxz
cli
ss
js
xor
mov
jns
jl
dec
sub
dec
in
into
push
mov
push
in
inc
lds
movsl
dec
lea
xlat
outsb
cmp
lock
mov
cmp
cmp
imul
inc
mov
jle
movsbl
sbbb
loopne
or
in
push
mov
fdivrs
fistpll
in
xchg
sub
sti
outsb
clc
clc
cwtl
jecxz
or
insl
add
cmpsb
loopne
out
cli
pop
xchg
insb
std
mov
and
pop
ss
dec
dec
rcll
mov
imul
enter
cmpsl
push
mov
cmpsb
movsb
pushf
shll
push
cwtl
inc
arpl
push
cmp
xor
and
jne
dec
std
and
mov
sbb
mov
or
adc
or
enter
arpl
cli
fistpl
sbb
pop
mov
outsl
fsubs
or
fstl
test
lea
notl
mov
adc
aaa
fldt
call
and
test
inc
test
iret
jl
jp
sub
mov
or
out
sti
push
push
cmp
jmp
movsl
mov
sbb
cmp
mulb
fbstp
cli
imul
sub
outsl
stos
mov
outsb
popa
and
in
mov
mov
fcompl
inc
inc
je
shlb
stc
dec
or
js
cltd
mov
pop
out
enter
xor
jge
aas
std
int
adc
inc
loope
jo
dec
xor
in
pop
lcall
add
ficoms
jg
pop
xchg
xor
iret
inc
stos
sub
test
add
ja
dec
pop
mov
jnp
push
ss
cli
out
aad
sub
dec
loope
popl
sahf
mov
cltd
mov
shl
inc
push
inc
sub
aas
add
sahf
jmp
adc
push
test
cmpsl
lcall
xor
add
loope
loop
cmpsb
hlt
cld
push
jns
clc
jp
xor
and
jnp
mov
shrl
insl
iret
pop
and
adc
movsl
adcb
hlt
push
jne
ficoml
xchg
sub
sub
sub
cmp
insl
bound
mov
dec
mov
jne
leave
shr
adc
inc
aaa
jbe
mov
nop
pop
push
jp
jo
mov
das
rcr
sti
or
dec
mov
inc
push
pop
lods
fimull
popa
mov
je
ss
outsl
jg
mov
dec
add
dec
addr16
js
movsl
push
outsb
mov
sub
int
fldcw
aam
int
inc
mov
out
push
orl
loopne
mov
mov
clc
ss
ss
jmp
cmc
xor
or
mov
in
xor
mov
or
xchg
xchg
xor
and
push
mov
push
lahf
xor
mov
push
push
adc
loop
inc
adc
push
es
pop
cmpsl
jbe
sub
push
jb
pop
repz
cs
daa
shll
lcall
sbb
and
ss
cmpsb
fisubl
mov
add
jns
push
int3
mov
sbb
mov
testb
aaa
dec
pop
lock
sbb
xchg
xor
std
fs
nop
push
addr16
dec
nop
out
mov
mov
mov
cli
test
lahf
loop
mov
add
pop
testb
lret
out
aas
pop
popa
pop
lea
popa
add
adc
shlb
push
mov
test
sub
jnp
adc
and
jmp
imul
clc
xchg
test
aas
lret
ljmp
dec
pop
mov
mov
or
icebp
loopne
cltd
mov
push
and
adc
in
in
imul
or
stos
shll
pushf
cmp
push
sub
sub
call
movb
sahf
cltd
arpl
or
incb
fdivrs
inc
scas
cmp
inc
push
in
rolb
jbe
andl
out
call
lea
ja
inc
out
lahf
cmp
pop
int
jle
ds
xchg
icebp
out
les
push
jno
imul
dec
or
push
cld
dec
cwtl
jl
add
js
fdivp
push
add
rcll
push
xlat
or
hlt
push
fdivs
loope
jne
xchg
jmp
loopne
sub
adc
stos
jecxz
lret
rclb
xchg
push
aad
mov
inc
pop
inc
adc
enter
pop
push
sbb
clc
rcl
dec
or
testb
jo
je
scas
int
jns
inc
push
sub
add
or
and
pop
hlt
add
test
pop
out
insl
decl
lods
fsubs
push
jb
fwait
xlat
sub
jns
daa
pop
sub
sahf
sahf
and
xchg
imul
cmp
rcrb
pop
imul
cwtl
repz
sub
mov
cmp
out
pop
jo
add
iret
cmc
out
inc
fldl2e
cwtl
adc
sbbb
aam
rcl
pop
inc
fwait
cld
adc
test
out
stc
pop
xchg
xorl
out
insb
xor
nop
mov
js
aas
cwtl
push
push
mov
jle
pmulhuw
enter
sbb
mov
js
ret
iret
sub
js
int3
imul
mov
cmp
inc
inc
jle
push
fldt
pop
dec
mov
jle
mov
jge
jmp
movsl
fidivrl
fs
jne
lds
insb
jmp
mov
lret
fnstcw
push
into
cmp
shll
dec
and
pop
mov
dec
jne
sbb
sbb
dec
and
and
push
xchg
pop
mov
popl
xorl
outsl
fadds
stos
mov
jo
ret
mov
add
sub
je
and
pusha
arpl
mov
push
popl
iret
cs
push
or
lods
out
sbb
mov
and
sub
rcrb
pop
adc
in
xchg
fs
enter
imul
pop
pop
in
lahf
and
or
enter
setle
xor
jp,pt
pop
not
jge
push
jl
jecxz
mov
clc
fidivl
pop
sub
push
push
ret
cltd
xchg
mov
mov
loop
xor
inc
movzbl
adc
ret
scas
js
aad
mov
sub
mov
rcrl
dec
push
xchg
mov
mov
decb
add
sbb
not
adc
adcl
es
stos
add
cmpsb
lret
mov
je,pt
shlb
inc
pop
loop
dec
jg
fbstp
iret
jle
lock
pop
jns
movsl
xchg
sub
repz
ret
jbe
insl
and
outsl
dec
sub
mov
pushf
pop
jnp
push
mov
testb
lahf
push
lea
xchg
xchg
imul
sti
in
push
pop
lods
or
imul
mov
adc
out
and
xor
stc
rcll
nop
cmpb
mov
push
add
outsb
push
jmp
inc
bound
pop
mov
pop
fsubs
pop
mov
enter
ret
rol
stc
sbb
sbb
gs
mul
mov
push
xor
imul
or
fcoml
ud2
pop
add
test
mov
sahf
add
loopne
fwait
xor
mov
insb
int
jns
mov
xor
iret
push
mov
push
jae
or
adc
xor
ljmp
xor
dec
or
cmp
in
rolb
sbb
inc
sahf
or
cmp
mov
comiss
pushf
rcl
lock
test
insl
fwait
vpmullw
sarb
jge
cmp
hlt
fld
js
mov
xor
xor
shrd
and
sub
arpl
push
adc
jo
loopne
fisttpll
popl
and
pop
loop
inc
fidivrl
cmp
aaa
movsb
push
fsubrl
mov
cltd
push
mov
imul
mov
enter
pushf
add
and
mov
adc
push
leave
adc
pop
push
dec
xchg
sarl
sub
push
outsb
lahf
dec
xchg
jmp
call
push
repz
adc
inc
sbb
push
mov
add
push
adc
sub
sub
xchg
xchg
xchg
rorl
call
inc
pop
aaa
pop
push
data16
adcl
cmp
cmp
pop
bound
sub
je
xor
cld
and
fwait
outsl
js
mov
data16
jge
mov
out
out
ret
mov
in
inc
out
pop
pop
cmp
fs
outsb
icebp
notl
inc
mov
repz
adc
or
stc
xchg
jge
int3
repnz
inc
ljmp
daa
push
sub
jb
and
xchg
ss
sar
insl
loop
push
shrl
rcl
insb
jno
test
mov
fnstenv
orb
jbe
rcll
bnd
and
lret
lods
and
mov
scas
lret
mov
adc
and
out
lahf
mov
shr
mov
outsb
mov
sbb
popf
mov
jge
mov
xor
addl
push
ss
dec
push
je
add
mov
dec
popa
mov
xchg
and
call
adc
xchg
nop
fnstsw
ds
add
cmpl
outsl
fwait
push
adc
mov
push
jmp
aas
imul
pop
js
clc
pop
sub
mov
or
imul
orb
cmp
insb
std
cs
and
data16
mov
xchg
shlb
pop
sbb
hlt
mov
xchg
push
mov
pop
daa
mov
daa
lcall
jge
xchg
stc
gs
fs
push
and
mov
cwtl
sub
leave
push
mov
fnsave
jo
fisttpll
fidivl
pop
or
gs
stc
xchg
rcrl
in
pushf
mov
cld
int3
inc
fcmovnbe
fdivs
xor
pop
ja
insl
jge
out
xchg
mov
inc
sub
loope
pop
cltd
and
inc
ret
push
pop
aas
sub
sbb
pop
addb
shll
fisttpl
mov
add
popf
lret
mov
das
cmp
xor
les
int3
scas
leave
mov
cmp
sbb
cwtl
jp
jmp
ds
mov
push
js
sub
sbb
lock
fistps
in
mov
addr16
xchg
jne
mov
out
popl
roll
mov
mov
pushf
adc
inc
mov
xchg
mov
dec
sbb
test
mov
ror
add
mov
mov
lret
xchg
mov
fisubl
sub
xor
testl
jne
daa
data16
inc
xchg
stos
rorl
jbe
pop
in
lahf
cmp
je
jo
arpl
lods
mov
mov
insl
inc
jmp
mov
xchg
out
lods
dec
lcall
push
push
push
enter
xchg
fistl
jge
inc
adc
rcrb
add
pop
mov
add
stc
sbb
mov
and
xor
ret
cltd
cmp
out
inc
mov
cmpsl
cmc
adc
mov
pop
mov
pop
fidivs
lcall
mov
das
clc
cli
sahf
test
fcomip
jne
jno
lcall
push
sub
mov
jg
bound
adc
mov
pop
aaa
mov
lahf
add
roll
hlt
imul
xchg
mov
xchg
dec
xor
iret
sub
hlt
xor
jl
jmp
cmc
fmuls
mov
or
test
or
lret
fildll
cli
jp
insb
pop
xchg
cmp
shll
jbe
add
inc
dec
and
js
sbb
add
mov
out
push
xchg
outsb
mov
jno,pn
aad
test
test
int
mov
lods
cmpsl
or
cld
out
mov
imul
loope
fmuls
bound
test
ror
sbbb
repnz
jbe
in
imul
xchg
pop
sbb
mov
jb
andb
pop
pop
loopne
dec
icebp
sub
jecxz
addr16
lds
cltd
cmc
jno
adc
lcall
hlt
add
add
sub
decl
mov
mov
mov
mov
pop
push
in
mov
pop
dec
cmpsb
adc
push
xchg
or
jl
sub
mov
negl
outsb
and
out
inc
xchg
call
xchg
mov
sti
inc
mov
call
sbb
dec
fistl
das
js
mov
sbb
xor
mov
xchg
je
mov
inc
cmp
fcmove
js
mov
sbb
or
xchg
dec
ret
push
out
fldl
outsl
pushl
cmp
mov
mov
das
popa
xchg
inc
inc
lock
push
fiadds
mov
cld
xor
fcmove
push
pop
ficomps
push
mov
std
mov
cmp
cld
cwtl
lock
cmpsl
mov
mov
jp
adc
insl
lcall
loop
mov
jo
jp
add
jne
ss
sub
clc
lret
fsubp
sbb
jecxz
jp
push
inc
popf
subb
push
push
test
stos
mov
push
das
fwait
fs
es
outsl
push
push
stc
in
mov
cmp
jno
fsts
jle
dec
xchg
xor
js
testb
add
sub
pop
or
xchg
or
adc
sysexit
jecxz
insb
sbb
sbb
adcb
in
xchg
test
inc
cltd
mov
push
sub
xchg
mov
pop
cld
sub
push
sub
pop
xor
mulb
dec
push
jo
pop
or
mov
mov
add
sbb
pusha
sub
out
rorb
jp
and
fwait
xchg
xchg
adc
ja
inc
loop
fsts
test
sbb
imul
fstp
pushf
arpl
ficomps
fchs
add
push
fcompl
jg
jp
lods
and
das
push
ror
add
mov
fcoms
adc
xlat
adcb
jo
pusha
push
sbb
popf
push
out
out
imul
insb
sbbb
cmpsb
lods
aad
out
std
aam
lods
xlat
lret
imul
xchg
add
adc
fistpl
sub
mov
aad
in
movsl
roll
fcoml
or
fnstcw
pop
pop
or
popf
push
xor
clc
sub
sub
mov
pop
stos
mov
and
cmp
scas
loopne
cltd
repz
dec
jmp
mov
sub
aas
lock
adc
gs
and
mov
fcomp
cmpsl
insl
push
enter
fadds
adc
sub
lods
stos
lret
and
adc
dec
fidivrl
sub
bound
loope
mov
movsb
cmp
dec
js
mov
sahf
cmpsb
pop
mov
stos
loopne
pop
ljmp
xor
lret
xor
push
scas
xor
pop
push
push
add
sbb
jmp
sahf
ret
mov
lods
mov
adc
testb
loopne
sub
cmp
addl
and
fstl
aas
adc
inc
xor
jge
shlb
inc
cmc
xchg
push
mov
ja
xchg
daa
incl
cmc
mov
cmp
cmp
retw
sub
push
addl
mov
push
cmp
mov
push
notb
add
and
push
fxch
cli
in
jne
subb
sub
imul
jp
mov
dec
mov
cs
stos
js
nop
out
push
sbb
aaa
loopne
cmp
pop
test
scas
clc
je
xchg
dec
inc
inc
jl
dec
or
dec
jecxz
pop
inc
enter
lea
dec
cmp
and
mov
mov
sbb
adc
ret
pop
int
sub
je
ret
inc
aaa
lahf
jge
and
rcll
dec
sub
sub
shl
gs
shrb
adc
sbb
jb
es
and
add
in
push
pop
cmp
test
ja
cs
rcll
jne
or
dec
jecxz
xor
mov
add
fisubrl
cmp
mov
sub
fisubrs
xor
inc
pop
push
rclb
ljmp
ds
mov
dec
mov
stos
and
push
jmp
jmp
scas
das
fnstenv
inc
pop
push
mov
push
fidivrl
insl
das
out
mov
cmp
dec
das
push
mov
push
cmc
push
loop
mov
push
inc
cwtl
scas
or
jp
stc
xchg
add
pop
and
daa
mov
jnp
iret
or
xchg
dec
ljmp
push
jg
loopne
jae
and
xor
adc
jl
jl
inc
movsb
fmuls
hlt
and
sahf
inc
ja
inc
mov
mov
or
jne
mov
negb
or
stc
inc
mov
jmp
repnz
repz
sbb
mov
movsl
or
pop
xor
cmp
imull
in
sbb
lea
xchg
sub
gs
cmp
sub
mov
xor
aas
push
mov
sbb
jae
cmp
test
pusha
cmp
sbb
push
aaa
xor
rcrl
sub
sub
js
insb
xor
dec
adc
imul
xchg
aas
int
popa
jno
or
pop
pop
ds
mov
repz
lret
cmp
mov
and
lcall
inc
clc
mov
dec
mov
rclb
lods
fs
mov
movsl
repz
jmp
mov
adc
inc
aas
add
lcall
jp
sub
cs
mov
or
and
mov
mov
aam
pop
xchg
addr16
sbb
jo
pop
inc
out
cmpsl
test
dec
push
xlat
and
inc
dec
cwtl
pop
rcr
mov
push
dec
pop
add
push
push
mov
imul
or
mov
decl
rcrb
mov
call
dec
dec
in
push
cmc
lds
pop
ljmp
cli
hlt
bound
push
sbb
jae
inc
dec
push
sahf
adc
mov
mov
dec
pcmpgtb
push
cli
jne
inc
orb
outsb
fdivrs
xor
adc
xchg
inc
pop
inc
cmp
cmp
movsl
mov
pusha
loope
jne
aad
jb
outsb
rclb
or
pop
sbb
pop
mov
cmp
xor
mov
push
rcrl
sub
jo
sbb
add
je
push
in
push
push
pop
pop
pop
and
pop
cmp
dec
mov
mov
jo
pop
pusha
sahf
enter
pushf
cmp
xchg
xorb
jp
mov
incl
aaa
fisubs
pop
mov
loope
xor
subl
add
mov
pushf
mov
push
push
push
rcrl
mov
call
inc
test
pop
dec
add
int
aas
mov
cmpsb
sbb
xor
inc
arpl
scas
or
mov
inc
jae
add
or
sbb
inc
popa
repnz
mov
shll
enter
mov
sbb
xchg
mov
movsl
clc
xchg
scas
adc
sbb
repnz
add
not
dec
cmp
lods
pop
xchg
adc
sbbb
sub
mov
mov
pop
pop
jne
loope
jmp
fidivs
mov
aaa
dec
jmp
inc
dec
mov
stos
fs
popa
aad
or
cmp
jmp
sub
xchg
test
ret
aas
cld
je
mov
addl
repz
cmp
daa
stos
jecxz
mov
cmp
mov
addr16
jl
inc
sti
sbb
fcoml
sbb
xchg
test
sub
inc
xor
hlt
fwait
inc
sbb
ds
lret
arpl
jecxz
and
hlt
cmp
lods
push
mov
js
mov
loopnew
sub
les
inc
pushf
jb
mov
repz
mov
pop
pusha
orb
mov
pop
cmp
inc
out
lds
sub
es
mov
push
lea
xchg
mov
pop
inc
jns
mov
jbe
pop
cli
pusha
inc
push
loopne
int
out
sub
mov
nop
push
scas
mov
add
in
addb
xor
add
outsl
repz
test
es
or
mov
retw
cmp
and
daa
and
cmp
xchg
pop
xchg
and
inc
push
fidivs
jl
imul
std
add
lret
mov
cmp
xchg
pop
leave
cmp
xchg
enter
fpatan
mov
inc
adc
cli
pop
loope
cwtl
mov
out
mov
push
push
rorl
stc
call
fld
jae
sahf
sub
jmp
or
add
xchg
mov
mov
adc
mov
fwait
pop
jp
mov
js
fldt
int
pop
adc
xor
cmp
out
std
dec
inc
fnstenv
in
sub
jns
jp
and
cmp
roll
adc
mov
mov
mov
mov
call
mov
je
mov
movsb
cmp
fisttpll
mov
shlb
lea
push
decb
inc
mov
fsubrs
arpl
jno
stc
stos
test
loop
ljmp
mov
lea
fists
fiaddl
add
xchg
mov
xchg
push
inc
ss
inc
xor
cmp
loopne
in
pushf
int
leave
je
movsl
inc
pop
push
adc
enter
lret
and
mov
test
test
push
cmp
sahf
xor
jp
imull
jge
fs
enter
insl
das
int3
jge
mov
insb
mov
push
fimull
cmp
lcall
les
sub
sub
pop
pop
ret
outsl
sbb
cmp
in
jecxz
jmp
addr16
mov
jmp
out
into
jno
or
jbe
adcb
jmp
sbb
push
jle
outsl
or
push
fldt
push
addr16
mov
ds
dec
jmp
cli
cmc
bound
int
dec
mov
cmp
adc
mov
lret
fistpl
icebp
fldt
sahf
bound
in
push
repz
test
lds
xchg
fbstp
or
loop
int
out
xchg
inc
push
mov
or
mov
inc
stos
ret
mov
ljmp
imul
pop
adc
add
rcll
scas
push
imul
mov
cmc
in
add
sbb
adc
xor
mov
stc
adc
jg
sbb
adc
and
lcall
jo
pop
std
in
push
xlat
inc
ficompl
mov
adc
outsl
out
ss
or
in
cltd
pop
int3
mov
fsub
jg
fldt
pop
fstps
sub
pop
gs
pop
in
sti
cmp
push
mov
lcall
lret
and
in
adc
daa
sbb
pop
cs
xchg
roll
sbb
cmp
jge
inc
clc
popf
in
pop
sub
mov
bound
mov
cs
rcr
push
mov
mov
popa
addr16
pusha
or
push
pushf
dec
mov
and
sub
push
pop
mov
mov
and
and
fcomps
leave
push
push
sbb
std
mov
fldl
lret
cmp
pop
lock
mov
jp
subb
jnp
sarl
inc
sbb
mov
lahf
out
or
sahf
lcall
add
lock
push
cmp
int3
cmp
idivb
andl
sti
test
repnz
xor
sbb
sub
dec
dec
inc
mov
jge
jmp
pop
js
ss
lods
mov
cmpl
mov
cmp
pusha
iret
lock
jg
cld
sarb
pop
negb
xchg
clc
dec
xchg
imul
pop
xchg
add
or
cs
test
pop
in
cli
sub
xchg
iret
pop
jmp
repnz
cs
fistpl
or
fmul
mov
mov
nop
in
cmc
pop
out
jb
mov
shr
scas
fcoml
jbe
push
ljmp
fwait
std
movsl
icebp
cmp
push
stos
outsb
jecxz
sbb
lods
add
pop
xchg
in
cmpl
cmpsl
xchg
and
pop
pop
loopne
dec
ss
mov
push
stos
cli
mov
xlat
mov
mov
inc
adc
cld
xor
bound
xchg
mov
xchg
and
aaa
imul
pushl
fstl
lahf
inc
push
xchg
xor
mov
frstor
leave
inc
cmp
fs
ret
fmul
fisubrs
adc
mov
mov
xchg
push
pop
sarb
int
push
lcall
pop
cmpsb
leave
xorb
push
into
scas
cmp
repnz
scas
test
jmp
sbb
pop
dec
movb
addl
in
dec
or
jbe
std
lea
gs
xor
pop
sar
cmpsl
or
mov
jmp
sub
jg
ficoml
repnz
cmc
movsb
shlb
pop
add
je
cld
inc
mov
rcrl
sbb
push
dec
jae
lgs
sbb
push
enter
inc
mov
cmpsl
xchg
dec
push
leave
jbe
int
ja
mov
fldz
into
bound
aas
sbb
jae
mov
in
in
shll
std
mov
jecxz
fcmovnu
mov
sbb
cmpsl
fldenv
cmp
sti
xor
sub
nop
mov
fnstsw
out
xchg
push
lahf
iret
in
push
mov
sbb
xchg
in
pop
and
stos
adc
xor
cmp
adc
ficoml
mov
outsl
jp
test
sbb
push
pop
adc
daa
sbb
mov
rclb
loop
aam
push
aas
add
insb
shrb
out
adc
lahf
sub
rorb
push
adc
test
shll
push
dec
and
fwait
iret
mov
sbb
pusha
dec
sbb
js
imul
add
mov
xor
pop
mov
mov
push
mov
clc
lret
and
sub
dec
or
push
test
addl
mov
mov
push
add
jne
dec
mov
mov
push
dec
or
stos
mov
add
lods
int3
sbb
mov
and
sub
cmp
les
dec
mov
cli
mov
inc
stos
xchg
cmp
mov
dec
xor
imul
pop
scas
aas
loope
andb
push
or
jne
mov
in
cmp
or
fnstsw
arpl
imul
cmp
data16
ja
mov
cmp
cmp
stc
testl
mulb
popa
out
add
sbb
outsb
xchg
and
frstor
in
pop
loopne
xchg
ja
sbb
xchg
jnp
cmc
adc
xor
lcall
lods
rol
xlat
int3
cmc
and
stc
movb
mov
gs
pop
xor
mov
lret
dec
lcall
jno
or
pop
xchg
ds
fstpl
rolb
lea
dec
push
sub
adc
cmp
adc
cli
push
dec
pushf
aad
rorb
xor
cmp
mov
push
inc
sub
sti
jae
cmp
and
jae
scas
push
adc
repnz
out
aas
inc
xor
dec
in
int
fnsave
ds
ds
dec
addb
and
xchg
in
mov
push
cmp
psubw
int3
jle
xor
mov
andb
inc
pop
dec
test
test
int3
test
mov
mov
or
mov
push
push
test
push
mov
stc
mov
in
xor
out
inc
push
mov
or
dec
mov
push
ljmp
clc
mov
es
cltd
roll
je
pop
sub
clc
sbbl
cltd
jmp
or
cli
and
rorb
sub
jmp
mov
sbb
xchg
xlat
jo
sbb
daa
adc
js
daa
stos
loop
in
mov
mov
out
int3
out
push
fcomps
inc
sbb
cmp
jo
scas
inc
sbb
push
pop
xor
sahf
jno
pop
shl
js
mov
lods
rcrb
xchg
mov
cmp
lret
pop
cmpps
ds
adc
xchg
xor
mov
pop
mov
adcb
push
sbb
repz
pop
push
pop
mov
mov
sbbb
fucomip
shrb
divb
lds
push
and
jae
dec
sahf
pop
inc
popa
enter
mov
sbb
and
mov
xor
bound
sbb
add
jmp
pop
mov
movsl
cwtl
push
iret
mov
rcrw
js
sarl
jno
and
cmpsb
ss
pop
in
int3
lea
pop
int
stos
shl
dec
cli
cmp
pop
jno
in
into
js
push
fs
lods
add
addr16
andb
push
pop
xchg
adc
push
out
jns
leave
into
cwtl
lret
push
addr16
cs
mov
pop
adc
icebp
fistpll
test
enter
pop
add
adc
mov
cli
popf
jp
sti
push
loope
and
jmp
adc
cmc
jns
sbb
pop
mov
pop
cmp
stc
es
fwait
sub
std
add
add
or
shlb
cwtl
aad
cmpl
fisubrl
daa
js
push
filds
xlat
mov
jnp
and
nop
mov
insw
das
mov
fcoml
add
xor
stos
xchg
push
fisttps
cmpsl
xchg
loope
das
enter
sub
packuswb
out
iret
xor
mov
pop
add
sti
pop
or
ja
mov
std
jbe
jb
orl
xor
pusha
shrb
mov
stos
ds
test
push
pop
sbb
mov
inc
pop
xlat
push
popa
jb
popa
xchg
cmp
jge
pop
fbld
jmp
jmp
mov
push
xchg
mov
jo
sbb
pop
push
hlt
sub
mov
pushf
ljmp
mov
cmp
xchg
push
mov
push
xchg
mov
orb
rclb
test
repnz
adc
stos
aam
pop
js
pop
jle
in
flds
inc
add
cmp
xchg
clc
inc
mov
outsb
add
fisttpll
mov
fbld
int
jb
xchg
test
sbb
and
xor
int3
cmp
mov
pop
test
sahf
adc
scas
or
cmpsb
inc
pop
sub
mov
rcr
pop
iret
xchg
mov
mov
add
aad
or
pop
mov
jne
pop
xor
and
out
out
sahf
sbb
mov
cmpsl
nop
and
mov
adc
pop
imul
jb
pop
lret
push
or
out
sub
pop
pop
jp
add
js
mov
addr16
out
sbb
pop
pop
xor
pshufw
xlat
movsb
push
lods
clc
insb
rcrl
aaa
test
mov
mov
sub
sbb
repnz
stos
popf
sbb
add
imul
add
or
arpl
fdivp
inc
mov
orps
push
or
inc
pusha
pop
addr16
into
cli
icebp
into
loopne
arpl
cli
iret
popa
dec
lahf
push
movsb
mov
inc
inc
ffree
inc
mov
dec
xorb
push
mov
das
cltd
or
add
in
mov
xchg
sbb
pop
adcb
bound
mov
int
xchg
out
shrb
dec
push
fnstenv
ja
xor
inc
test
cmc
clc
xor
into
push
inc
das
or
mov
pop
pop
shrb
push
loopne
gs
lea
in
lcall
rclb
cltd
xchg
pop
in
mov
mov
shlb
adc
ror
sbb
sbb
inc
idivl
pop
sbb
fsubs
xchg
pop
movsl
jle
lret
popf
sbb
dec
repz
data16
loope
mov
xor
push
jl
xchg
icebp
js
into
mov
inc
es
hlt
das
sbb
out
cmp
loop
adc
cmp
pop
push
cmp
cmp
jecxz
sub
xchg
or
xchg
push
fstpt
scas
pop
or
ret
and
ss
mov
or
xor
add
leave
fwait
test
fiaddl
loopne
jne
lds
mov
dec
push
push
cmp
aaa
fnstcw
mov
dec
add
js
out
std
rolb
mov
vmptrst
test
stos
loop
gs
push
sub
loope
pop
xor
mov
pusha
cmp
xorb
mov
push
mov
dec
adc
jl
hlt
adc
xchg
sub
adc
mov
arpl
dec
mov
lds
lcall
sbb
sub
imul
xchg
add
dec
push
repnz
add
mov
inc
pusha
fimull
les
sub
sti
dec
pop
push
in
lods
xor
gs
mov
or
js
add
imul
and
xchg
pop
xor
stos
pop
testl
cmc
ficomps
jge
pop
push
into
push
xchg
imul
aaa
fisubrl
out
call
pop
mov
subl
andl
push
lahf
push
xor
dec
xchg
fstpl
test
push
lds
cmp
pop
mov
popa
sbb
imul
mov
pop
pop
push
test
or
es
arpl
jmp
and
jno
sub
push
sub
loopne
in
xlat
cmp
push
push
test
movsl
shlb
jne
adc
outsb
sbb
mov
ljmp
fucom
inc
int3
stc
lcall
push
pop
enter
add
mov
pop
jae
out
icebp
fwait
mov
mov
xlat
sbb
in
and
fists
lcall
adc
scas
hlt
mov
stos
inc
inc
cmp
lret
mov
jmp
adc
movsb
mov
mov
lea
push
mov
sub
push
mov
mov
xor
ljmp
push
cld
or
ret
jge
sbb
or
shll
outsl
mov
rolb
ret
clc
and
gs
mov
cmp
push
dec
leave
int
mov
mov
inc
push
mov
inc
in
in
filds
lods
cmp
jge
sub
adc
pop
jmp
je
lahf
popa
adc
xor
hlt
aas
mov
jecxz
dec
jno
pop
mov
push
out
xor
aaa
aam
and
jb
xlat
adc
adc
popa
outsl
mov
dec
sbb
or
adc
imul
mov
fisttps
flds
pop
cmp
cs
jecxz
and
push
enter
mov
fistpl
and
xor
add
add
aas
xchg
aam
and
xlat
dec
mov
lods
lods
test
pop
std
add
push
daa
jecxz
pop
pop
jne
xchg
cmp
pushf
mov
mov
dec
rcrl
dec
jmp
stc
repz
add
aas
int
push
mov
lods
adc
xchg
cli
mov
test
mov
jl
xor
push
mov
cmpsl
les
nop
xlat
out
cmpsb
pop
mov
fsubl
dec
lock
adc
repnz
popf
in
adc
dec
std
mov
push
outsl
pop
arpl
mov
mov
or
fisubs
lock
lods
pop
out
je
cmp
in
jb
int3
and
rorb
inc
xchg
icebp
add
mov
sub
dec
test
push
lock
add
test
cmc
pop
jb
xchg
xchg
pop
cli
dec
dec
or
das
bound
mov
mov
stos
inc
shl
push
out
push
ss
adc
push
mov
push
adc
push
aad
imul
popf
inc
fs
mov
add
push
sbb
imul
ljmp
in
inc
fistps
std
popa
adc
outsl
in
popf
cld
or
outsl
pop
in
mov
sub
loope
xchg
add
pop
add
push
mov
cmp
insb
add
mov
push
outsl
ss
and
adc
or
repz
pop
pop
inc
dec
push
mov
or
mov
xlat
call
sub
popf
mov
jns
int3
fdivrl
movsb
loop
fsubr
inc
popf
lcall
lcall
push
out
movsl
cltd
loop
inc
movsl
jns
jp
add
enter
cld
divl
sbb
jns
cmpsb
stos
out
fdivp
popf
xchg
jg
push
out
out
fbstp
fcmovbe
in
and
dec
cmp
jle
lds
out
sahf
test
push
mov
shll
push
fistps
sbbb
mov
aam
daa
in
jbe
mov
loope
adc
sbb
sub
and
jae
cwtl
push
fiaddl
add
xchg
js
mov
stos
cmp
data16
fdivr
mov
mov
fcoml
cli
adc
inc
shrb
sbb
dec
inc
mov
test
push
shl
icebp
cmp
pop
add
or
gs
roll
fidivl
xchg
gs
js
movl
mov
mov
or
inc
xchg
cmp
stc
inc
fisttpll
jl
rolb
sub
imul
add
pop
push
or
inc
pushf
add
in
in
divb
cltd
xor
mov
xlat
cmp
push
cwtl
in
mov
sbb
cmpb
push
dec
outsl
dec
add
shll
pop
fsubr
inc
lods
movsl
or
adc
popf
sub
mov
in
add
in
loop
sti
cmp
jno
mov
mov
fmul
jne
dec
outsb
or
mov
push
cmp
insb
push
stc
lods
and
or
or
cwtl
lods
add
pop
test
stc
sub
push
add
add
pusha
xchg
pushf
enter
in
shl
aas
sbb
pop
xchg
jo
out
adc
adc
mov
adc
inc
nop
int3
dec
fldt
cmp
pop
xchg
xchg
in
jno
ljmp
mov
js
mov
jp
jnp
sbb
or
push
out
lret
inc
gs
jmp
pop
xor
pop
outsl
stc
push
outsl
sbb
sbb
pop
popa
loope
push
push
lret
mov
dec
sbb
or
sub
push
jne
xor
popl
aad
ret
test
jp
mov
dec
cmp
daa
xchg
sti
int3
addr16
mov
mov
repnz
adc
popa
or
lcall
outsl
out
sahf
into
loop
fsts
ss
loop
xor
mov
in
adc
adc
fidivrl
aad
cmp
imul
sub
fsubr
lea
les
icebp
or
das
clc
in
adc
divps
push
push
and
push
inc
cmp
push
and
aad
pop
or
arpl
sub
push
inc
lahf
fists
inc
mov
mov
pop
mov
repz
es
add
xlat
inc
fildll
xor
jmp
mov
dec
push
push
or
pop
mov
push
cmp
and
mov
pop
sub
cmp
insl
mov
adc
test
fldl
xchg
mov
lods
pop
sar
mov
mov
lea
pop
cmp
addr16
mov
fnstsw
and
inc
push
add
aam
shll
aad
sbb
add
inc
jecxz
push
pop
adc
repnz
out
pusha
hlt
fnsave
hlt
or
cltd
push
mov
push
adc
pop
repnz
cmp
adc
mov
popa
sbb
and
insl
jle
fidivl
cmc
xchg
iret
outsl
xor
mov
adc
mov
and
sbb
andl
ja
mov
iret
mov
lods
jmp
or
lcall
roll
addb
imul
dec
lods
mov
or
inc
sti
stc
fstps
add
mov
xchg
push
lock
mov
inc
movsb
cmp
mov
mov
add
and
aad
fisubl
push
mov
and
mov
stos
loope
or
pusha
sub
loopne
ljmp
jge
dec
xor
mov
out
rolb
jno
xchg
push
sbb
pop
cmpsl
push
fisubs
xchg
iret
cwtl
mov
inc
popa
add
pusha
test
imul
mov
lret
sbb
adc
rcr
mov
fcompl
xchg
jle
push
mov
xor
roll
sub
ljmp
fnstenv
jbe
sarl
hlt
cmp
popf
fildll
loop
push
fildl
lret
lock
jno
dec
shll
rclb
cs
xchg
jo
or
cmp
lods
jbe
hlt
cs
leave
mov
mov
in
xchg
cmp
lds
xor
idivl
adc
xor
stos
pop
add
iret
movsl
mov
clc
rcrb
adc
jle
pop
jnp
mov
cmp
xlat
xchg
mov
or
js
dec
dec
cmp
xchg
clc
divl
or
inc
out
add
jmp
sbb
mov
adc
mov
jle
les
mov
mov
and
movsb
jno
insb
xlat
insb
xor
mov
mov
gs
inc
mov
ret
int3
stos
int3
xor
dec
ret
pop
leave
out
mov
push
mov
jge
pop
mov
mov
inc
rorb
lock
in
jp
sbb
mov
gs
loopne
mov
sbb
xor
mov
jecxz
js
arpl
clc
out
ss
arpl
fdivs
push
orb
adc
popf
imul
pop
inc
out
jo
inc
lcall
lret
fwait
push
ret
lret
jp
test
lret
loopne
or
aam
xchg
push
lods
and
loop
inc
sub
sub
cli
and
xchg
in
out
mov
dec
xchg
subps
data16
adc
lahf
cmp
sbb
sbb
fmuls
lds
mov
sbb
sub
enter
push
in
and
add
xor
loop
scas
lods
adcl
inc
ja
addb
lods
push
pop
sbb
fsubrs
imul
inc
sub
in
lret
xor
push
mov
pop
sti
or
loop
lds
cli
add
fstenv
mov
sub
pushf
push
in
movsl
add
jae
jns
lods
jmp
pop
arpl
in
pop
mov
popl
xlat
pop
or
cmp
cld
mov
out
inc
sub
scas
sbb
clc
inc
ficomps
jo
jecxz
pop
sbb
add
and
xor
and
test
call
fildl
scas
pusha
imul
scas
fildll
in
hlt
js
mov
or
aam
js
cmpsb
dec
test
movsl
loop
push
inc
imul
cld
adc
mov
adc
scas
push
adc
sub
leave
jmp
outsl
jp
push
xchg
data16
test
mov
nop
fdivs
cmpsb
scas
push
mov
std
sahf
jo
aas
push
inc
test
xchg
or
sub
push
popf
sbb
pop
add
lret
test
out
movsl
jl
push
pop
imul
jecxz
popa
lret
mov
push
pop
sbb
insb
nop
movsl
inc
cmp
and
scas
repnz
roll
ss
rclb
fs
mov
and
xorb
mov
mov
ja
cmp
inc
mov
pushf
push
mov
fldenv
and
test
or
xor
out
jg
je
sub
cmp
mov
nop
sub
inc
fisttps
movsl
jmp
sub
enter
mov
and
lock
xlat
fcoms
xor
popa
and
ret
popf
cli
xchg
stos
aam
or
sub
sbb
rcr
ret
mov
add
bound
xchg
repz
lret
dec
mov
das
lret
jbe
dec
cmp
push
mov
stos
rcll
sbb
repz
ret
mov
js
pop
es
mov
pop
jp
sub
imul
xchg
test
or
or
test
sub
mov
push
sbb
cmc
mov
mov
fimull
add
daa
loop
cmp
test
mov
add
sub
std
push
ds
into
xchg
pop
adc
and
jmp
and
cwtl
inc
inc
test
mov
sbb
mov
sub
lcall
xchg
sub
insl
push
cltd
inc
lock
jb
jp
pop
mov
sbb
inc
sub
jne
push
inc
mov
and
xchg
mov
xor
adc
test
cwtl
les
jle
aad
icebp
mov
into
jo
adc
faddl
bound
and
shl
and
jbe
ljmp
movsl
roll
cmp
push
xor
test
cmp
cmp
mov
rclb
out
xor
scas
test
sub
sbb
pop
cmp
dec
int
push
pop
jo
icebp
and
and
xchg
addr16
sar
int3
mov
ret
push
pop
aad
cmp
in
mov
pop
lahf
sub
pop
movsl
mov
popa
outsl
into
cmp
or
mov
adc
mov
mov
lods
cmp
imul
movsb
shll
clc
cmp
jmp
jmp
iret
inc
mov
es
xor
push
sub
scas
adc
add
jo
add
jbe
mov
sub
inc
lahf
leave
shr
fldt
sub
cmpl
mov
stos
fidivl
mov
jecxz
mov
mov
or
les
je
xor
xchg
add
pushf
cmp
cmpsl
sub
cmp
aad
repz
sahf
or
push
sbb
xchg
and
lods
std
loopne
or
jl
sbb
outsl
mov
dec
jae
shll
aad
jo
bound
sarl
sbb
outsb
push
dec
lock
inc
mov
cmc
aaa
in
xlat
xlat
push
addr16
test
ret
mov
add
pop
or
daa
dec
outsl
push
mov
mov
addr16
cmp
ret
xor
jo
rcr
pop
lret
out
out
mov
movsb
mov
enter
push
mov
add
ficomps
sbb
mov
jns
jl
dec
lock
and
lar
out
xor
jmp
pop
jbe,pt
loop
and
scas
into
cmp
and
call
mov
mov
mov
cmpb
pop
lcall
mov
int
dec
mov
push
cmc
dec
sub
mov
outsb
push
mov
outsl
cmpsl
fisttps
sbb
fnstsw
or
div
adc
cmp
mov
ret
stos
insl
fwait
das
ret
cmc
jne
adc
add
fildl
jne
cmpl
es
adc
inc
pop
mov
mov
pop
xor
mov
leave
add
mov
inc
cli
repnz
inc
pop
xchg
xchg
sub
mov
enter
sub
data16
cmp
inc
dec
or
subl
xor
pop
in
inc
ret
jp
xchg
fs
fsincos
push
outsl
push
push
and
inc
test
add
sbb
in
js
adc
int3
push
out
sbb
imul
mov
mov
or
sub
imul
mov
test
dec
push
pop
cmp
insl
addr16
and
adc
es
dec
mov
insb
inc
inc
les
or
clc
dec
outsb
jle
pop
push
imul
xchg
push
jmp
push
imulb
clc
xchg
in
sub
hlt
dec
cmpl
ret
clc
pop
mov
cmpl
das
adc
cmp
sbb
mov
into
push
arpl
call
pop
ktestb
cli
inc
lods
rcll
in
jg
decl
in
cmpsb
or
out
add
stos
jbe
sbb
stc
pusha
or
es
shll
adc
pop
lods
pop
push
and
add
cwtl
test
xor
cwtl
mov
xchg
cmp
xor
push
movsl
dec
scas
push
cmpsl
enter
or
push
das
inc
jae
mov
hlt
mov
mov
mov
jo
into
pop
cwtl
std
lods
gs
stos
dec
mov
push
bound
out
addb
pop
sub
xorl
xor
mov
push
push
cmp
aam
add
test
lahf
push
sbb
dec
dec
cs
xlat
sbb
fiadds
push
testl
inc
adc
add
bound
shll
mov
loope
or
insb
xchg
xchg
aaa
scas
dec
sahf
mov
mov
xor
das
sub
adc
xlat
loopne
pop
mov
mov
dec
push
mov
call
das
repnz
or
mov
enter
xor
loop
scas
popf
push
out
sub
iret
cmp
xchg
xor
push
push
in
add
xchg
mov
ss
sbb
rcl
dec
add
scas
sti
stc
add
add
jg
fiaddl
push
cmpl
test
and
cmpsl
and
mov
pop
test
push
cmp
sbb
mov
sub
in
dec
sbbl
mov
lahf
out
inc
aas
inc
jno
or
pusha
or
ret
fadd
outsl
pop
fcomi
xor
rcrl
xchg
into
pop
xchg
xchg
daa
sbb
cli
dec
dec
mov
sarb
adcb
ja
nop
je
enter
sub
add
xor
popf
or
xor
inc
jb
pop
and
cs
cli
icebp
push
js
js
bound
mov
leave
stos
mov
pop
das
inc
rol
loop
mov
scas
dec
test
loope
jae
cmp
cmp
xlat
not
sbb
xchg
cmp
cmc
or
mov
adc
mov
fs
nop
push
nop
in
dec
stos
adc
cmpsl
mov
dec
orb
sub
dec
repz
syscall
and
xor
aas
or
and
js
movsl
inc
push
rol
pop
pop
mov
mov
and
sub
nop
jp
nop
lret
lock
inc
fisubrs
scas
dec
adc
mov
movsl
pop
dec
shrl
xor
cmp
andl
loopne
lahf
adc
out
inc
ret
xchg
mov
mov
inc
sarb
xor
inc
lret
daa
stos
lcall
dec
inc
push
in
push
rclb
enter
adc
rolb
test
inc
dec
data16
test
out
loopne
push
faddl
mov
dec
sti
or
adc
movsl
add
or
add
cwtl
loopne
sub
ds
shll
inc
fbstp
push
dec
cltd
and
std
jecxz
sub
mov
jl
push
add
jb
inc
dec
mov
pusha
js
mov
add
pop
fs
sbb
cltd
or
fisttpll
rorb
fwait
pushf
jecxz
notb
aam
push
push
loop
rol
mov
inc
rcr
mov
into
pop
imul
sbb
add
fidivrs
imul
inc
xchg
stos
add
xor
fisubrs
sar
out
push
aas
subb
xchg
inc
out
mov
aaa
jp
lock
pop
icebp
movb
jg
insb
pop
jecxz
rolb
or
test
test
shll
insb
xor
and
sub
adc
out
addb
shlb
sub
jbe
sbb
sub
in
outsb
popf
inc
xrelease
cwtl
mov
jmp
mov
mov
inc
adc
mov
xor
cmpsl
or
sbb
rdrand
adc
daa
pop
aaa
push
lock
arpl
mov
mov
dec
fistpll
push
xor
jg
aaa
imul
mov
mov
inc
addr16
xchg
or
daa
dec
pop
dec
imul
shlb
stc
xor
xchg
jb
std
inc
add
inc
sub
mov
inc
jns
insl
movsb
mov
rcr
jnp
push
mov
mov
push
inc
adc
jns
lock
xor
shll
pop
leave
mov
pop
jl
aas
inc
dec
scas
mov
aas
aam
cmp
pop
insb
in
dec
or
call
ja
std
sbb
lods
and
adc
aaa
mov
popa
cmpb
jl
pop
add
lret
sbb
rcr
shr
or
xor
in
ss
int
hlt
cmp
insl
sub
dec
jl
add
jno
push
pusha
popf
nop
cltd
fwait
cmpsl
push
loope
push
mov
sub
lds
mov
mov
movsb
rorl
push
add
pop
popf
loope
inc
adc
push
jp
pop
sbb
cmpl
sbb
lret
adc
mov
sbb
cwtl
pushl
cs
mov
or
push
daa
sub
sub
xchg
loopne
arpl
mov
lret
loopne
ret
push
in
push
pop
out
rclb
sbb
lret
out
add
pop
notb
aad
mov
mov
pop
mov
jne
roll
mov
decb
fsts
dec
pop
dec
mov
aaa
and
mov
stos
jl
insl
sbb
or
clc
xor
sbb
jmp
test
and
sbb
mov
and
jge
jo
inc
pusha
push
and
lahf
add
inc
clc
roll
or
mov
adc
pushf
push
loopne
cltd
test
or
pop
lea
loop
inc
ljmp
js
jns
cmp
push
xor
add
and
nop
sbb
sub
cmp
xchg
addl
inc
fisubrs
push
data16
cli
cmpsb
pop
fcoms
push
scas
xchg
cmp
push
mov
sbb
mov
inc
adc
jecxz
mov
push
adc
push
pop
adc
jl
ret
or
or
fs
push
sahf
jo
inc
stc
int3
pop
xchg
pusha
lods
push
cmp
testl
aad
push
enter
inc
movsb
jb
mov
push
mov
cs
or
mov
sub
dec
push
int3
push
jno
cmp
ficoms
outsb
test
xlat
pop
popf
rcrb
ret
pop
pushf
add
add
out
roll
cmpsb
cmpsb
mov
adc
mov
loopne
addr16
shrb
push
inc
test
scas
sub
dec
in
jle
pop
cmpsb
lock
or
adcl
dec
jae
aas
pcmpeqw
mov
rcll
mov
ret
push
aaa
inc
xorb
rcrb
push
bound
mov
ret
xchg
lahf
push
pop
pop
scas
mov
test
dec
add
cwtl
bound
pop
and
dec
daa
mov
pop
ljmp
fwait
daa
or
sbb
leave
inc
test
in
xchg
mov
and
js
mov
icebp
push
mov
xchg
mov
jl
mov
bound
cltd
subl
jge
pop
dec
mov
subl
clc
in
adc
loopne
pop
decl
jecxz
mov
inc
subl
movsl
fidivrl
lret
xchg
dec
push
adc
mov
or
fisttpll
adc
jl
lock
inc
jbe
cmpsb
push
mov
mov
add
jbe
out
setns
mov
mov
sub
dec
inc
cmp
lds
pop
jl
adc
leave
outsb
fstps
icebp
lret
data16
sub
out
fcompl
mov
push
hlt
mov
outsl
out
inc
popl
sub
jae
fisttpll
cmp
rclb
sbb
cmp
aam
pop
mov
cli
loop
jg
lret
cltd
add
insb
dec
push
mov
mov
push
test
mov
xor
and
xchg
cld
fimuls
xor
and
imul
lret
push
xchg
fisttpll
jae
cmp
mov
movsb
rorb
mov
insl
fsubr
mov
push
addr16
sub
xor
sub
or
shrb
lods
add
push
lret
mov
mov
orb
mov
cld
pop
lret
sbb
inc
aas
stos
cltd
out
cmc
nop
aaa
jg
mov
jne
pushl
cmp
push
push
mov
sub
or
mov
xchg
loop
xchg
int
or
xchg
je
bound
pop
mov
push
jge
add
std
add
xchg
movsl
insb
gs
sbb
xor
into
cltd
ficomps
mov
jg
pop
add
loopne
and
push
movsl
adc
xchg
cmp
stos
out
mov
xchg
aaa
sub
pop
ja
pop
jo
enter
cli
xchg
push
outsb
and
mov
pop
fdivp
bound
add
push
js
xor
or
sbb
mov
es
dec
cmp
jmp
or
loope
lea
jno
push
icebp
int
or
mov
cmp
jns
nop
pop
cmp
pop
fstps
imul
fmull
movsb
fdivl
notb
mov
lahf
hlt
ss
or
xchg
mov
pop
jnp
in
mov
adc
out
xor
sub
adc
pop
lret
dec
adcb
cmc
ja
in
inc
xchg
int3
std
push
ss
xlat
in
notb
mov
dec
cmp
out
sub
imul
mov
or
repz
lret
jle
mulb
pop
sub
xor
cmpsl
pop
inc
loope
jno
arpl
mov
mov
call
in
loop
gs
imul
jge
and
fnstcw
adc
xchg
mov
pop
and
in
mov
leave
mov
das
test
fimull
sbb
mov
imul
addr16
loope
inc
mull
jae
dec
push
push
imul
daa
dec
popf
aad
inc
insl
sub
loop
jmp
lcall
or
add
jno
rol
push
push
xchg
mov
repz
in
push
cld
or
inc
es
add
jnp
xchg
dec
xlat
into
shrl
dec
push
pop
jo
lds
mov
add
sub
jge
adc
mov
push
jle
lahf
inc
pop
add
sti
fwait
out
pop
inc
xchg
stc
pusha
ficompl
mov
popf
je
mov
out
xchg
nop
mov
into
cmp
aad
push
test
mov
xor
repz
ss
aad
dec
in
xor
into
mov
push
or
push
adcb
dec
cltd
xor
sbb
push
aaa
mov
pusha
mov
mov
sub
fwait
mov
xchg
sbb
mov
dec
add
xchg
nop
push
insl
cmc
mov
sbb
xchg
mov
adc
call
cmp
popa
js
or
pop
dec
cld
bound
and
pop
push
xchg
js
cmpsb
push
pop
out
ret
rol
and
xor
xchg
jnp
mov
outsb
push
and
in
adc
mov
mov
xchg
popf
push
test
jne
lds
add
loopne
inc
dec
mov
lret
jl
ljmp
ret
les
pop
push
inc
lds
test
test
xor
in
dec
sub
out
mov
jne
adc
xchg
xor
frstor
adc
or
mov
lret
cmpsl
stos
fxch
cmp
xor
insb
jns
jnp
push
mov
fcompl
sub
jnp
inc
pop
cmpsl
inc
cmp
hlt
mov
push
pop
adc
repz
xor
xchg
jne
ljmp
stos
pop
inc
ljmp
fildll
jb
lahf
inc
cmp
bound
lods
sub
sbb
cmp
adc
inc
call
or
add
mov
push
mov
gs
push
out
inc
enter
sbb
aad
jle
xchg
out
repz
xchg
sbb
outsb
and
int3
pop
push
push
or
push
or
cltd
xlat
jns
dec
fisttpll
insb
cmp
outsl
xchg
stc
sbb
mov
sub
sbb
push
fimuls
stos
and
push
insb
out
rcrl
add
xor
imul
fwait
mov
push
lret
push
cmp
push
or
mov
shlb
sbbb
push
pop
xor
mov
jle
mov
ret
loope
xor
outsb
dec
ss
push
inc
push
loope
mov
mov
jo
into
xchg
sub
mov
outsl
xor
or
cmp
ja
lret
sub
and
cmpsl
dec
xchg
adcb
mov
and
subl
inc
das
out
ja
xchg
insb
or
lret
mov
scas
and
mov
cmp
and
xchg
mov
xchg
pop
mov
into
fisubl
jge
pop
hlt
cs
iret
inc
fidivl
mov
push
inc
je
imul
inc
add
add
std
ds
jb
cld
out
clc
pusha
adc
push
imul
pop
cli
mov
insl
fnsave
or
pop
popa
cmpsl
aaa
cli
ret
xor
jnp
adc
pop
stos
nop
dec
js
and
jecxz
and
xchg
loop
pop
xor
or
lcall
in
mov
push
mov
cli
insl
pop
dec
inc
rorb
jns
jge,pn
sbb
cld
and
mov
movsl
out
test
lods
xor
popa
xor
add
lods
and
pop
and
dec
pop
push
add
imul
dec
mov
mov
pop
mov
aad
loope
or
mov
mov
inc
xchg
sub
adc
adc
sarl
aad
bound
push
mov
js
jne
pop
xchg
or
test
lds
lret
cs
cmp
movl
add
shlb
sbb
cmpsw
xor
add
xlat
shlb
scas
xchg
pop
out
sbb
jg
dec
jmp
insl
push
adc
or
and
sti
gs
pop
inc
or
pusha
rorl
xchg
jge
sbb
mov
jne
pop
push
dec
cs
mov
cmp
ret
addr16
sbb
inc
aad
add
xchg
xor
xchg
push
pop
xor
filds
repz
push
or
and
aad
sbb
or
pop
sahf
popa
cltd
es
scas
dec
outsb
adc
mov
cmp
jmp
lcall
fimuls
mov
and
scas
pop
call
leave
jmp
lods
sbb
fcomip
mov
pop
scas
hlt
out
push
flds
mov
stos
xchg
xchg
xchg
xchg
das
push
inc
mov
jnp
bound
mov
shrl
xchg
add
aam
loope
mov
inc
and
or
loopne
mov
popf
xlat
cmp
inc
xchg
sub
rclb
jmp
imul
dec
sub
dec
and
push
call
mov
jmp
jne
cltd
cwtl
pushf
xorl
loopne
sub
or
pop
lea
or
mov
imul
xchg
inc
dec
inc
arpl
dec
loope
lods
stos
push
push
dec
and
hlt
jmp
rcll
in
push
daa
loope
les
mov
mov
mov
lahf
pusha
push
add
or
sub
xchg
mov
sbb
mov
adc
inc
dec
subb
es
cli
inc
scas
mov
xchg
fisubrs
out
sbb
push
pop
xor
jae
mov
xlat
mov
mov
mov
sub
dec
or
xchg
inc
scas
rol
rol
cltd
jmp
fdivrl
xchg
out
adc
pop
sbb
jmp
in
cmc
or
ret
arpl
mov
dec
movsb
cmp
movsl
in
insb
push
mov
daa
cmpl
fmull
jae
inc
fcoms
sub
and
mov
fimuls
fldl
ret
out
nop
jae
dec
fsubl
jo
inc
lcall
test
jns
outsl
shll
fisttpl
xor
xchg
lret
test
mov
stc
add
inc
adc
mov
xchg
rcll
jecxz
mov
or
push
or
push
mov
orl
in
out
fcomip
std
sub
sbb
mov
push
add
cld
loop
lock
push
mov
xor
push
int3
jns
or
scas
leave
cli
fstps
xchg
push
js
add
sub
pop
iret
int
pushf
lods
pop
jo
and
and
pop
idivl
pop
jno
dec
outsb
sub
jbe
mov
push
and
ficompl
or
popf
fistl
fwait
popl
xchg
push
mov
add
ret
push
fists
sbb
cwtl
lret
xor
pushf
add
and
dec
lret
mov
daa
fiadds
xchg
add
push
add
cmpsl
inc
push
mov
adc
jle
add
out
cmp
fbstp
rcll
adc
cmp
je
shlb
loopne
lods
jb
loope
inc
pop
mov
jb,pn
mov
stos
cli
mov
shll
adc
or
cmp
pop
mov
mov
add
dec
xchg
out
add
mov
lret
loop
scas
inc
dec
adc
jle
mov
in
sub
fmulp
xor
sar
push
and
ret
enter
cwtl
fnstenv
fsubl
jno
orb
mov
enter
push
pop
aad
add
inc
or
jmp
mov
sbbl
jge
loopne
pop
mov
call
adc
mov
popa
mov
push
xor
cltd
mov
loop
mov
inc
mov
or
mov
pop
aam
cs
dec
xor
lahf
cli
mov
fiaddl
jp
xchg
test
shll
decb
stc
jle
rcrb
push
mov
lds
repnz
rorb
notl
or
mov
sbb
cs
inc
dec
jno
fchs
jmp
test
icebp
mov
and
sbb
mov
mov
jno
lea
dec
outsb
mov
enter
mov
cmp
jbe
inc
hlt
jecxz
xchg
or
out
add
imul
rcr
push
outsl
or
add
add
adc
cmp
scas
gs
adc
ljmp
pop
mov
pop
cmp
fwait
xchg
push
sub
pop
test
dec
add
cmpsl
out
mov
mov
test
mov
cmc
push
sbb
aam
andb
xor
stos
adc
aad
mov
push
push
push
pushf
ljmp
xchg
addr16
aas
pop
cwtl
lock
xor
outsb
dec
mov
inc
and
xchg
cmc
out
out
mov
je
pop
js
hlt
loopne
test
mov
dec
insl
int3
sbb
inc
sbb
mov
mov
imul
pop
ja
hlt
jns
xchg
fisttpl
shlb
in
adc
add
push
xor
and
out
dec
sub
dec
cli
aaa
push
adc
dec
push
mov
dec
dec
daa
movsb
sbb
aas
repnz
out
sti
sbb
fdivl
sub
adc
sti
push
nop
jmp
mov
gs
xor
adc
js
cmp
jbe
pop
sub
orb
sbb
and
sbbl
pop
loope
mov
iret
jae
js
stos
dec
dec
pop
lods
inc
cmc
sahf
roll
rol
inc
push
insb
dec
mul
inc
add
iret
jb
xchg
sbb
js
cmp
and
xor
sbb
pop
aas
sbb
jge
sub
push
std
mov
xor
mov
push
mov
ja
xlat
and
push
jg
inc
xor
repnz
mov
inc
jnp
mulb
mov
xor
add
cld
xor
xlat
and
mov
xchg
xor
repz
xchg
mov
pop
sbb
and
pop
aas
pop
sbb
add
mov
negb
sub
sub
cltd
and
and
or
mov
ret
in
inc
push
pop
faddl
mov
fisubrs
repnz
sub
cmp
or
sub
mov
fstpl
subl
mov
sub
adc
lods
jb
sbb
sub
cs
push
and
dec
cli
test
fadds
sti
sahf
out
mov
out
cmp
subl
jecxz
fldl
sub
enter
shll
cmpsl
das
div
rcrb
jg
push
cmp
rolb
call
out
outsb
call
pusha
test
or
jge
and
xchg
push
jle
lods
mov
addr16
cmp
jl
orl
outsl
sub
lds
mov
fistpl
mov
enter
mov
add
lods
fdivs
mov
in
cwtl
and
inc
jno
in
xchg
inc
lret
xchg
scas
cltd
lock
in
adc
out
lock
mov
push
stos
sub
xor
clc
enter
and
cmpsb
push
outsl
jo
ficoml
sbb
hlt
fnstsw
iret
adc
lret
sti
shll
jo
inc
dec
movsb
ljmp
icebp
aam
jp
or
jnp
out
xor
or
mov
ljmp
gs
out
lea
xchg
subl
scas
mov
bound
push
adc
push
pop
shlb
sar
push
test
nop
adc
pop
test
cmp
jns
push
mov
xor
adc
mov
or
cmc
iret
mov
adc
dec
push
cltd
sbb
shll
mov
push
outsl
or
pop
dec
jne
popf
xor
mov
pusha
mov
and
xor
add
pop
push
xor
jp
scas
shl
fcom
xor
mov
jmp
xchg
ret
fdivr
dec
dec
xchg
imul
incb
dec
mov
aam
sarb
dec
std
jb
pop
test
inc
sub
inc
mov
lahf
add
adc
mov
add
inc
fcmovne
jo
pop
aaa
cmp
pop
lret
xchg
addr16
nop
cmp
repz
sbbl
mov
or
inc
cmp
pop
dec
push
sbbl
jno
aad
ja
movsb
inc
into
xor
in
mov
sub
dec
fdivl
outsb
xchg
int
mov
sbb
aam
jb
adc
push
fldenv
push
and
mov
in
test
jo
sub
mov
lock
loope
leave
les
mov
hlt
into
jl
repnz
loopne
sahf
pop
ret
mov
push
or
lock
filds
push
or
ret
aad
shr
push
cmpsl
lods
xchg
cwtl
in
fisubrl
push
cmp
cmp
jbe
into
sub
mov
das
add
xchg
in
pusha
fimuls
xchg
or
and
scas
lods
cld
jbe
cmpsb
addl
cmpsl
jae
add
mov
aas
sub
jae
pop
adc
loop
inc
or
test
data16
jmp
dec
mov
lock
iret
mov
sub
push
sahf
xchg
repnz
int
lahf
out
call
in
adc
or
data16
call
pop
testl
push
cmc
aam
es
les
or
push
and
pop
rorl
jmp
test
shrl
into
ret
mov
repnz
mov
pushf
loope
and
lret
jnp
inc
arpl
sahf
xchg
adc
aas
push
mov
lcall
mov
dec
mov
pop
out
scas
mov
int3
and
mov
scas
dec
mov
fmull
in
jnp
push
ljmp
lret
movsb
icebp
jl
cwtl
ljmp
jl
arpl
pusha
lods
add
cmp
dec
sbb
push
fadds
push
or
enter
push
arpl
popf
adcb
mov
adc
or
jmp
mov
inc
fcmovu
je
fs
and
xor
cmp
pop
xchg
and
loope
test
cld
clc
fcmovnu
enter
adc
cmp
popf
ss
fidivrs
cmpsb
icebp
push
cld
sub
mov
add
hlt
aas
shll
jle
fucomi
xorl
dec
fs
xchg
mov
hlt
sub
shll
lods
es
loop
aas
test
int
std
pop
mov
mov
dec
sub
push
lcall
sbb
dec
addr16
jle
jle
shlb
movsb
mov
mov
push
test
and
mov
inc
dec
cmpsb
and
cmpsl
mov
xchg
repnz
mov
cmp
shl
xchg
dec
mov
inc
ffree
push
or
mov
xchg
add
inc
stc
std
outsl
mov
cmp
sub
adc
out
stc
inc
mov
aam
ret
lock
jl
pop
fcomps
mov
inc
push
adc
lcall
xor
call
out
lds
pop
ficoms
and
ljmp
or
cmpsb
cmp
fcomp
jmp
scas
jns
pop
mov
push
mov
test
aas
xchg
fistps
sahf
inc
popf
adc
es
ja
in
out
dec
mov
loopne
je
xlat
mul
lock
movsl
sbbb
add
movsl
sar
inc
out
inc
pop
in
scas
std
add
scas
sub
aad
cmp
jl
push
mov
add
mov
test
test
insl
sbb
stos
nop
inc
push
jp
leave
jle
dec
push
inc
and
pop
mov
or
sbb
test
cmp
mov
mov
testb
std
sub
loope
jne
mov
rclb
jno
stos
push
sbb
iret
clc
loopne
rolb
jae
outsl
loop
push
mov
shlb
sbb
pop
jnp
cmp
jo
daa
fwait
mov
lret
push
test
les
cld
dec
mov
fwait
push
ds
mov
or
jno
in
cmp
inc
dec
cmpsb
stos
pushf
adc
pop
stc
cli
jbe
xor
faddl
out
xor
dec
pop
pop
fisubrs
aas
nop
jge
popa
lods
outsl
lock
jbe
loop
icebp
push
push
aam
mov
mov
jecxz
xor
xchg
jl
jge
imul
pop
push
imul
nop
out
dec
ret
mov
jae
sub
jl
jbe
sub
add
inc
mov
mov
add
ja
in
fadds
aaa
pop
sbb
pop
xchg
mov
cmp
outsl
sti
jl
pop
fidivrs
int3
in
js
movsl
iret
mov
cli
imul
mov
inc
das
mov
call
test
aas
cltd
sahf
scas
and
mov
cmp
inc
push
or
mov
inc
push
pop
push
rcll
out
cmpsl
sbb
subb
mov
aad
cltd
cli
inc
in
jmp
in
popf
mov
pushf
insl
sub
lcall
mov
in
lock
outsb
in
fucomip
lcall
fidivs
ds
test
sbb
sub
into
pusha
jnp
jl
je
push
push
filds
cs
pop
mov
pusha
jmp
inc
insb
les
in
icebp
mov
mov
loop
mov
popa
fcom
mov
fwait
xor
repnz
inc
and
int3
rcll
fisubrs
movsl
or
adc
pop
push
add
lret
xorb
add
pop
das
and
testb
insl
fs
hlt
loopne
movl
pop
push
add
push
adc
stc
jns
mull
outsl
xor
push
pop
and
push
cld
cmc
jno
test
movsl
sti
addr16
bound
push
ljmp
push
adcb
ret
jb
mov
cmc
cmp
scas
mov
pop
insl
push
dec
out
mov
out
aam
or
xrelease
fwait
call
sbb
push
pop
lretw
jg
or
leave
clc
mov
sbb
sub
pop
lods
pop
xchg
sarl
sub
aas
daa
mov
lods
mov
rcrb
cmp
push
addr16
fwait
mov
xchg
stos
pop
jg
je
sbb
in
sahf
jns
mov
adc
lods
xor
adc
lods
inc
jge
sbbb
out
fists
imul
xlat
pop
or
fimuls
movsb
cs
dec
loop
fcomps
xchg
int
mov
movsb
shll
int3
lcall
orl
movl
shlb
adc
dec
shll
out
enter
and
insl
test
pushf
fiaddl
aaa
pop
ret
mov
into
sbb
or
int
pop
aas
xor
stos
push
loop
dec
mov
xchg
push
jmp
sahf
mov
pop
cs
cmp
aaa
cmp
add
fnstcw
dec
mov
cmp
mov
pushf
push
pusha
mov
dec
jmp
roll
push
das
cmp
mov
mov
addl
or
pop
or
outsl
add
pop
cmpb
repnz
out
sbb
jg
dec
fld
ljmp
pop
stos
inc
das
es
rorb
data16
push
nop
imul
clc
or
sti
hlt
adc
movsb
sub
repnz
roll
sarb
psubq
pop
sub
lock
hlt
xor
mov
mov
jno
mov
mov
or
das
fimull
dec
mov
es
mov
decb
xchg
popa
and
or
push
pop
xchg
and
inc
inc
push
out
mov
scas
cmpsb
add
ja
mov
sub
sbb
rcr
fwait
out
or
adc
ja
mov
jecxz
sbb
dec
add
xchg
fists
lds
cld
sahf
and
push
push
aaa
xchg
inc
jg
flds
lcall
jge
add
sti
xor
lods
int
loope
aaa
adc
int
shr
faddl
sbb
mov
inc
subb
lods
aad
mov
aad
ret
push
leave
cmp
test
pop
cld
cli
lcall
push
xchg
cltd
pop
mov
dec
push
pop
faddl
and
xchg
mov
nop
fsubrs
jb
xor
jae
in
mov
ret
mov
js
sbb
imul
jp
idivb
mov
nop
and
pop
jmp
cmp
popa
adc
decl
test
mov
adc
sub
fisttps
fistpl
jo
push
cs
xchg
addl
in
nop
xchg
lcall
mov
or
in
cltd
jae
in
idivl
jae
lret
add
push
sub
adc
inc
pop
push
and
push
mov
add
xacquire
sti
mov
les
repz
repz
stc
cwtl
sub
pop
mov
cmpsl
sub
pop
xchg
push
inc
inc
push
and
dec
xor
fisttpl
je
and
es
idivb
icebp
cld
inc
jp
dec
push
loopne
sub
mov
dec
cmpl
dec
lcall
add
cmp
push
enter
ss
xchg
push
inc
aas
cmp
add
sbb
int3
pop
aad
jae
fsubs
in
sbb
std
mov
inc
and
xor
mov
cmp
adc
out
jno
dec
add
ffreep
jno
fwait
sub
jle
in
mov
mov
aas
jge
leave
pop
inc
icebp
sbb
inc
pop
push
cwtl
push
pop
sub
sub
call
into
sbb
xchg
xor
push
mov
orb
inc
inc
stos
fisubl
inc
push
testl
mov
add
or
mov
imul
mov
xchg
sbb
cmp
jle
xor
out
movsb
xchg
in
sahf
xchg
fwait
ljmp
mov
cmp
insl
xchg
inc
inc
push
cmp
inc
in
jge
xor
xchg
pop
pop
sbb
adc
shll
hlt
filds
movsb
ljmp
or
jecxz
subb
imul
add
hlt
dec
ljmp
leave
adc
fwait
xor
mov
jb
sbb
pop
or
flds
sbb
out
xlat
pop
daa
push
xchg
mov
mov
jp
pop
add
clc
push
imul
dec
repz
in
loope
and
fcom
out
and
mov
ja
mov
das
xor
js
and
push
pop
mov
out
out
sub
lds
scas
lock
jo
cmpsb
cmp
aad
add
in
std
scas
lcall
fadds
ljmp
cli
mov
scas
mov
dec
fidivrs
fsubs
fs
sbb
out
sub
xchg
leave
repz
push
jmp
or
fsubl
push
ljmp
cmpsb
repz
inc
test
push
xor
xchg
aam
mov
xchg
xor
pusha
mov
xor
sub
lahf
loopne
fcmovnbe
ficoms
jmp
lds
inc
clc
xlat
iret
fidivrl
in
clc
pop
cmp
push
gs
std
ficompl
mov
cmp
pop
fwait
es
xor
and
test
cs
js
fcoml
scas
pop
mov
mov
stos
ds
mov
into
inc
jnp
pusha
scas
xorb
and
sub
sti
sarb
add
cmp
xchg
sbb
adc
imul
cmp
sbb
and
pop
sub
stc
cmp
mov
mov
sub
enter
rorb
ret
push
out
jg
jge
add
cmp
cwtl
loope
fwait
lods
lcall
mov
lock
pop
push
sahf
cli
xchg
sarb
lock
add
fisubrl
jb
add
and
adc
push
xchg
into
and
pop
gs
fiaddl
sbb
orb
sub
gs
xor
or
ljmp
int3
jmp
jo
mov
insl
or
shrl
jnp
pop
inc
lods
in
adcl
test
inc
cmp
pop
dec
or
pop
call
addb
sub
and
aaa
push
leave
test
sbbb
lods
and
lods
add
in
cmp
pop
aas
push
jo
and
inc
inc
hlt
cmp
jb
orb
ljmp
or
dec
ja
add
cmp
cmpsb
and
mov
stos
cmp
mov
or
inc
jnp
out
add
jno
push
push
popa
ds
in
or
adc
or
das
out
cwtl
scas
loopne
or
xor
iret
jnp
jle
cmp
xor
ffree
adc
jns
jbe
data16
cmpl
lea
js
cmp
mov
jge
aas
into
jno
xchg
dec
jbe
lcall
mov
mov
bound
or
mov
mov
loope
jae
xorb
call
sub
mov
inc
repnz
sub
incb
int3
mov
pop
jmp
enter
imul
fmull
stos
fs
in
aam
ss
and
pop
sbb
adc
iret
jmp
mov
ljmp
and
movb
rclb
jecxz
test
inc
lea
adc
pop
push
out
jb
cwtl
div
pop
je
cmpsl
jae
xor
jl
mov
dec
add
idivb
sub
inc
mov
out
lret
pop
into
in
loopne
in
add
or
ret
push
insb
push
les
xor
nop
popa
cwtl
cltd
fcoms
lock
mov
and
mov
cmc
jmp
ret
outsb
cwtl
fstps
add
sti
lcall
ja
pop
lret
or
dec
fcos
push
jle
ja
in
cli
shlb
rcrl
dec
fwait
es
ret
repz
int3
nop
sub
lea
mov
loopne
inc
fcmovu
mov
shll
ret
fneni(8087
movsl
fs
pop
pop
sub
xchg
sbb
mov
jmp
xchg
jae
xor
mov
in
inc
xchg
jns
call
out
dec
xchg
hlt
xchg
scas
jnp
sub
push
jnp
shll
pop
cmp
cmc
pushf
and
mov
cmp
jle
xor
enter
xchg
outsb
jae
xorl
inc
or
pop
push
cmp
and
xchg
hlt
add
adc
aaa
mov
mov
xor
int3
pop
movl
shll
inc
movsl
stos
cmc
repnz
es
xor
xchg
in
cmpsl
aas
out
les
xor
or
jne
mov
aas
jnp
inc
jmp
dec
lock
fldcw
test
pop
fsubrl
xchg
sbb
pop
icebp
test
icebp
and
dec
xchg
add
pop
jae
enter
cmc
mov
repnz
sbb
dec
enter
call
dec
hlt
mov
sub
xchg
cmp
inc
dec
xor
jne
ret
andl
mov
adc
aad
pusha
fimuls
and
mov
std
les
sub
stc
jae
mov
jnp
ret
popa
ret
idivl
cmp
adc
and
leave
imul
fcomps
iret
mov
popf
cmp
inc
aas
push
cmp
sub
xor
push
mov
aas
pop
jne
ret
es
ds
mov
outsb
lret
and
mov
scas
push
xchg
mov
mov
add
call
popa
imull
mov
cmp
scas
mov
sbb
pop
add
or
mov
or
sub
loop
ss
fs
xlat
mov
aam
int3
add
xchg
and
jmp
arpl
pop
pop
mov
pop
fadds
and
jl
inc
cmpsl
add
ljmp
or
pop
mulb
mov
shrl
in
lret
sbb
ja
int
jo
and
iret
adc
pop
dec
cwtl
mov
jge
jg
lret
push
mov
sbb
jecxz
scas
loopne
into
push
push
popa
ljmp
ss
dec
andb
lcall
sub
lahf
jmp
lods
je
pop
decl
push
cmp
lret
jns
jp
pusha
xor
pop
push
push
scas
xchg
les
or
loopne
mov
lcall
mov
test
in
pop
ljmp
icebp
lret
into
out
xor
testl
ret
xchg
mov
push
aas
pop
inc
stc
push
xchg
xchg
push
jp
es
fwait
lahf
inc
jbe
and
pop
jae
cmpsl
imul
clc
dec
adc
shl
or
mov
and
cli
jle
in
sub
push
cld
pop
scas
mov
xor
fisttpll
rcrl
push
inc
push
hlt
push
shll
cmp
outsl
lahf
add
push
jecxz
les
push
incl
les
je
clc
sbb
hlt
or
test
fimuls
mov
dec
test
mov
movsb
mov
mov
pop
sub
loop
shlb
out
xchg
push
lret
push
in
mov
mov
ds
ret
rcr
out
popa
xchg
adc
sahf
sub
pop
ljmp
stos
fwait
stc
mov
add
faddl
or
inc
fsubr
imul
jecxz
shl
shrb
adc
jp
mov
pop
loopne
test
xchg
xchg
stc
fcmove
hlt
push
dec
adc
ja
jp
cmp
xchg
push
je
xor
mov
push
sbb
pusha
fcmovne
fs
xchg
dec
out
lock
and
or
aaa
or
arpl
adc
cmc
cmp
pop
adc
insb
cmp
popf
adcb
fidivrs
cli
divb
mov
cmp
rcr
jl
pop
mov
add
or
mov
pop
lods
shr
add
cs
mov
ds
mov
sub
out
add
test
push
cmp
mov
fsubrl
inc
mov
popa
cwtl
mov
cld
xor
push
push
jne
adc
ret
inc
les
addr16
or
dec
test
mov
mov
mov
leave
lret
push
repz
or
and
xlat
nop
es
lock
mov
not
fdivrp
call
shlb
jp
cmpsl
lods
sbb
inc
ja
cmpsl
jnp
jno
ret
mov
out
data16
push
out
aaa
mov
mull
mov
sub
repz
outsl
clc
sub
cltd
cli
mov
add
dec
repz
movsl
shll
das
sbb
popf
push
decl
jp
mov
frstpm(287
arpl
inc
xor
mov
sub
sub
lcall
daa
out
call
push
jmp
sub
mov
cmp
xchg
sub
lods
cmp
inc
adc
pop
cmp
daa
jbe
shll
mul
mov
lea
push
xor
fwait
jecxz
push
jo
pusha
lret
sti
ret
jb
adc
mov
mov
push
sub
pop
out
movsl
mov
lret
jge
imul
aaa
fnstsw
and
sarl
pop
pop
leave
push
fisttpl
rcl
jbe
loopne
js
cmp
dec
out
inc
pop
push
push
xor
cmp
dec
clc
les
out
movsb
add
ret
dec
loop
pop
mov
mov
iret
push
mov
enter
bound
leave
rorl
jp
loope
imul
insl
xchg
in
bound
add
rorb
stos
push
mov
mov
fstpt
cmp
lret
sti
aas
ss
sub
lds
xchg
cmpb
sub
cltd
sub
test
and
call
inc
jmp
ss
call
repz
shll
lcall
sbb
sti
fldt
mov
les
out
shrb
cmpsl
inc
lret
repnz
mov
repz
pop
pop
push
cmp
hlt
lods
xchg
pop
mov
lahf
lea
ror
inc
xor
xor
dec
les
mov
stos
or
lods
sbb
or
clc
and
xchg
jns
sahf
sub
xchg
adc
or
push
aaa
loop
test
add
mov
adcb
add
outsb
dec
jecxz
pop
dec
shlb
inc
mov
inc
cmpsl
lods
fmull
int
pop
sub
mov
stc
adc
insb
add
lea
sub
adc
subb
insb
out
shlb
dec
clc
imul
mov
xchg
dec
pop
dec
pop
cmpl
and
fmull
push
jge
jns
sub
jecxz
bound
mov
inc
xchg
cmpsb
mov
and
dec
xlat
adc
lret
lret
pop
add
xor
rorl
incb
sub
arpl
sub
mov
insl
aaa
jmp
push
sbb
add
push
mov
je
inc
lret
ja
out
loopne
jb
repnz
test
ret
mov
ficoml
sti
int3
shll
lods
xchg
adc
lahf
imul
mov
js
stc
and
push
mov
jbe
lds
movsl
repz
add
imul
mov
sub
pop
cltd
jns
test
mov
mov
cmp
test
jge
outsb
fstl
cli
rcrl
mov
je
sub
insb
mov
push
pop
sti
outsl
fmul
pop
roll
and
mov
cmc
cltd
pop
sbb
add
hlt
xchg
in
cmc
add
push
sub
dec
push
mov
outsb
dec
jbe
mov
add
fs
lods
xchg
out
add
rolb
mov
fildll
dec
cmp
aad
and
or
in
or
and
push
mov
outsw
inc
push
sbb
push
dec
push
fwait
movsb
adc
mov
stc
push
testb
adc
hlt
mov
mov
out
xchg
xchg
in
test
push
sbb
mov
jns
into
mov
inc
xchg
bound
aam
inc
clc
int
jge
or
add
mov
or
out
xor
clc
dec
inc
bound
mov
jbe
mov
pop
adc
sbb
js
xchg
pop
fiaddl
sbb
gs
inc
lods
xchg
cltd
mov
xchg
outsb
jns
jg
lret
mov
fdivrl
pop
push
insl
xor
fstps
icebp
inc
sub
cmp
decb
stos
pop
ret
jb
jmp
aad
dec
in
sub
cltd
xchg
pop
insb
adc
fidivs
icebp
push
test
arpl
mov
stc
cwtl
adc
jb
and
or
insl
test
mov
xchg
clc
ret
mov
stos
test
pop
xchg
ds
imul
jle
popa
test
lcall
pop
js
push
pop
es
out
jb
out
movsl
mov
fcomip
fstpt
shl
xchg
mov
js
add
cld
ret
insl
dec
mov
jmp
repnz
fsave
pusha
ds
and
sahf
orb
mov
adc
push
or
mov
adc
xor
lods
mulb
out
fldz
aam
cmp
das
cltd
or
dec
hlt
addr16
jge
movsb
pop
clc
sub
cmp
mov
jbe
inc
inc
push
enterw
sti
scas
ljmp
hlt
enter
iret
mov
shlb
mov
or
cmp
xor
lahf
mov
sbb
subl
dec
and
enter
push
xchg
pop
repnz
push
outsl
dec
fldl2t
xor
lods
into
arpl
pop
aam
xchg
pmulhw
fildl
pop
xor
sub
jbe
mov
cli
cli
test
stc
push
inc
xor
jne
push
test
stos
fisttpl
add
scas
cli
es
xor
and
icebp
lret
mov
lods
sbb
es
jnp
shrb
outsb
pop
xor
outsl
mov
in
jne
jle
xchg
sahf
mov
pop
push
out
insb
das
loopne
push
xchg
andl
push
inc
cmpsl
sti
pop
pop
inc
dec
jecxz
test
ja
sarl
fimull
jp
xchg
movsl
or
mov
je
in
pusha
fldenv
pushl
sub
addr16
cs
or
or
movsb
push
les
sub
and
lods
cltd
inc
int3
jmp
mov
xor
xchg
mov
gs
fcoml
sub
daa
jbe
imul
adc
add
lea
xchg
adc
mov
mov
jecxz
insl
push
dec
les
add
xchg
push
pusha
in
cmc
pop
add
add
push
out
xor
dec
in
movsb
popa
add
cs
lods
sub
inc
mov
rcrl
jmp
and
jl
jo
and
xchg
in
dec
cmc
lret
fsubrs
dec
rorl
test
mov
jmp
jne
and
push
orb
adc
mov
es
stos
into
push
xor
mov
push
xchg
push
mov
cld
addb
xlat
pop
mov
out
xor
adc
shll
repz
aam
jne
push
xchg
fsubs
jo
inc
push
jae
mov
mov
push
and
lea
adc
push
sbb
adc
inc
pop
dec
xchg
lods
cmp
xlat
jae
jp
push
sub
popa
hlt
lahf
enter
dec
test
push
nop
rcr
int3
mov
rsqrtps
fnsave
xor
xchg
push
hlt
pop
es
sbb
cltd
dec
jae
cltd
mov
scas
cli
jg
and
and
push
in
pop
push
add
add
dec
add
mov
fcomps
insl
pop
mov
and
mov
push
mov
pop
lods
sbb
mov
push
mov
xor
aas
mov
inc
sbb
lods
repz
repz
es
mov
dec
sar
add
in
xchg
mov
das
fs
jge
cmp
xchg
rcrb
fildll
inc
int
jnp
aas
in
movb
int
rolb
pusha
xorl
cmp
imul
cmp
insb
aam
pop
and
loopne
adc
pop
out
xchg
mov
rclb
inc
sub
in
lahf
lods
movsb
cmp
hlt
leave
xchg
inc
pop
jl
add
and
mov
imul
movsl
fmull
leave
cmp
mov
xor
imul
andl
push
jmp
jge
add
adc
iret
inc
sbb
mov
adcl
jno
dec
sub
push
les
inc
xchg
push
xchg
mov
jno
or
pop
ret
push
insb
sbbl
mov
mov
cmpsl
sub
push
pushf
dec
iret
into
insb
arpl
xchg
jno
icebp
xchg
js,pn
ret
pop
fstpl
sbb
pop
nop
pop
adc
sbb
xorb
aas
mov
add
mov
int
int3
fisttpll
out
repz
fimull
mov
inc
adc
clc
sbb
fwait
shl
pop
outsb
pop
jnp
iret
sahf
mov
pop
or
sub
movb
cmp
cmpsl
dec
fnstenv
or
or
bound
loope
pop
scas
sub
mov
or
fbstp
lea
shlb
mov
sbb
out
lods
push
cmp
mov
jge
orl
jbe
adc
xchg
push
add
mov
sub
or
mov
dec
sbb
jnp
les
cwtl
sbb
sbb
xor
rcrb
jp
nop
cwtl
add
mov
mov
xchg
sub
xor
mov
test
inc
mov
imul
cmpxchg
stos
cwtl
mov
xlat
and
std
sti
test
adc
mov
jp
xor
lret
or
ss
and
jecxz
jb
fnstsw
movsb
clc
dec
pop
rcll
mov
inc
test
dec
mov
push
pop
enter
mov
push
cmp
repz
lret
cli
loope
pop
out
shr
xchg
adcl
rolb
pop
mov
cmovle
fimull
or
mov
and
xor
or
sbb
sbb
xchg
mov
mov
sub
into
daa
cld
mov
push
sahf
dec
or
add
add
mov
lret
jb
inc
test
mov
dec
lods
ss
cwtl
lods
fs
or
dec
and
jl
and
cs
xor
sahf
cmc
ror
push
outsb
add
popf
mov
daa
and
jbe
push
jle
dec
mov
push
dec
cmp
pop
ja
add
aas
adc
or
pusha
mov
popa
push
sbb
notb
xchg
xchg
xchg
mov
dec
sub
enter
jno
shll
daa
add
and
add
sbb
aam
aam
sbb
mov
fdivrp
test
mov
daa
cmpb
adc
cmp
aad
loop
pop
lret
in
repz
lret
sub
dec
mov
push
shl
loope
mov
push
and
lea
or
icebp
jbe
int
or
dec
icebp
sbb
jo
mov
inc
addr16
cmp
loope
sbb
mov
cli
xor
cs
in
rcr
repz
xor
dec
gs
jo
sbb
jl
push
ds
sub
jp,pn
ds
xchg
iret
mov
push
add
das
push
orl
inc
js
dec
fsub
inc
ds
push
gs
mov
xor
lds
stos
push
jae
ja
cwtl
ss
inc
fimull
and
repz
ror
iret
shll
adc
mov
sarl
dec
inc
jp
adc
sbb
aas
insb
push
aam
fbld
sub
xchg
jnp
cmp
hlt
cmp
sub
xchg
ret
push
jb
fsub
inc
push
lods
cli
test
hlt
jbe
mov
mov
push
test
mov
fisubl
push
clc
imul
and
dec
fsubp
js
inc
and
sub
andl
sub
out
push
bound
add
add
adc
sbb
xchg
or
push
pop
outsl
mov
or
mov
sbb
scas
stc
adc
jg
and
fmuls
jp
or
nop
lds
mov
in
push
int3
push
cld
push
push
cmc
inc
fwait
mov
xchg
xchg
dec
cmp
push
mov
cmp
test
pop
test
aaa
cmp
negl
mov
jmp
andb
xchg
hlt
push
push
mov
ss
and
inc
mov
subb
jl
mov
pop
xor
enter
sbb
pop
bound
mov
mov
pop
aaa
ja
xchg
dec
iret
inc
xchg
insl
in
out
call
add
sbb
sub
and
inc
cmp
icebp
bound
mov
add
stc
aaa
push
shrl
dec
dec
add
or
lret
push
xchg
jmp
sub
lahf
sahf
pop
or
push
mov
stc
dec
lock
aaa
arpl
push
rcrb
push
jle
rol
ret
gs
nop
push
ret
shlb
inc
push
test
sbb
pop
dec
or
ds
mov
mov
pop
or
std
cwtl
add
test
xchg
in
movsl
dec
cli
mov
nop
and
jmp
lea
xchg
inc
dec
adc
mov
shr
mov
mov
outsl
or
fbld
jle
mov
push
mov
dec
adc
pushf
out
xor
pop
into
xor
push
or
mov
repz
or
andb
data16
or
lock
mov
je
scas
push
xchg
xchg
jns
add
add
sbb
jno
loopne
dec
xor
jmp
cltd
std
cmc
test
std
out
xor
mov
gs
mov
xor
pop
fimuls
mov
add
das
pusha
push
push
xor
xchg
adc
xchg
jmp
pushf
lahf
out
inc
add
jne
lea
xchg
mov
popf
lock
xor
jnp
xlat
xchg
mov
outsb
ret
and
xchg
add
cmp
sub
call
ja
push
mov
pop
jno
xchg
pop
xchg
jg
sub
dec
loope
call
psrlq
into
push
mov
jecxz
imul
call
fwait
xchg
stos
add
pop
adc
ret
rol
into
mov
ror
mov
cli
lret
sbb
das
int
mov
and
negb
and
fisttps
lahf
xor
dec
and
mov
sbb
mov
pop
popf
push
fwait
adc
pusha
xchg
int3
clc
jp
adc
cmp
imul
mov
mov
sarl
pop
out
fimuls
aam
repnz
outsb
out
pop
push
test
sbb
outsb
loope
aaa
jle
fs
jmp
jge
les
pop
aas
loop
mov
push
pop
and
js
sub
nop
sbb
jbe
cltd
sub
imul
add
test
lcall
loopne
cld
mov
popa
cmpsl
cmp
sbb
mov
and
scas
mov
pop
in
jno
sub
ljmp
cmp
lahf
lahf
xor
xlat
push
pop
loopne
icebp
pop
mov
pop
sub
cmp
lea
cwtl
mov
jns
cli
jbe
jno
js
sbb
pop
daa
push
lret
adc
shr
xchg
adc
aam
adc
lahf
orl
pop
nop
push
sub
rorl
jl
fs
test
lea
cld
je
pop
mov
mov
add
xor
push
or
adc
cmp
fdivl
gs
js
xchg
js
dec
push
jp
movups
fbstp
in
stos
lcall
or
arpl
pop
mov
packssdw
adc
inc
lods
xlat
aas
fs
pop
jp
fsubs
and
and
mov
adc
pop
dec
in
inc
sub
subps
xor
stc
or
inc
lret
pop
inc
fldenv
mov
and
mov
js
je
and
aad
in
or
fidivrs
pop
iret
jp
add
xor
dec
or
call
lea
sub
push
loope
sbb
cmp
or
lcall
imul
lcall
mov
lds
dec
sbbb
jle
cld
sub
std
lock
les
gs
mov
fsubrs
sub
jbe
gs
out
xchg
js
mov
std
jg
push
xchg
adc
iret
mov
ret
mov
out
in
dec
mov
aad
sbb
iret
fimull
pop
dec
repnz
js
lcall
cli
repnz
lret
cs
loope
or
bound
add
inc
pop
ss
cld
pop
mov
movsb
fstl
mov
sub
xchg
mov
std
std
enter
adc
adc
cmp
cmpsl
dec
mov
into
mov
js
jp
shll
adc
ficomps
es
or
stc
mov
xchg
in
fcomp
cmpsb
or
jg
insl
cwtl
std
adc
movsl
mov
pop
shlb
push
in
xor
xchg
sbb
xor
leave
mov
popa
jnp
xchg
ret
or
inc
dec
or
fndisi(8087
xchg
ret
aam
inc
jecxz
lds
jle
insb
aam
lock
pushf
pushf
jecxz
inc
fcom
mov
test
out
inc
jl
dec
ret
push
cmc
outsb
lcall
jl
hlt
clc
xchg
daa
stos
cmp
jbe
je
jbe
cs
mov
cvttps2pi
inc
in
popa
lea
push
sub
pop
imul
push
sbb
xor
stos
jecxz
icebp
lods
or
push
sbb
jmp
int
mov
or
imul
loope
inc
loop
xor
xor
add
cmp
pop
or
sub
cmp
loope
xor
sub
pop
cmp
je
int
or
inc
negb
pop
push
mov
adc
mov
adc
mov
pushl
xor
push
xchg
push
jnp
das
rcr
xor
pop
aad
scas
add
js
aas
mov
sub
add
mov
jb
cmpsb
mov
lods
scas
pop
jne
pop
jnp
das
cmpsl
mov
sub
push
add
dec
add
push
cmp
cs
sub
jge
lods
shlb
test
mov
mov
mov
jp
dec
push
mov
fs
outsb
or
sbb
cmp
pop
dec
inc
xchg
lods
leave
sub
mov
mov
shlb
adc
adc
xchg
fs
sub
movsb
mov
xchg
inc
and
das
movl
movsl
insb
int3
loope
mov
shlb
mov
std
sti
sub
imul
xor
and
cs
push
lahf
popa
je
stc
mov
pop
sub
cmc
cmp
push
cltd
cmp
pop
out
mov
jae
adc
loop
push
mov
cmp
adc
fistpll
fldt
cmpsl
mov
fcoml
sbb
inc
sbb
sub
out
mull
scas
addb
mov
cmp
dec
ljmp
sub
sti
push
adc
sbb
cmp
pop
loopne
or
or
sbb
testb
cmp
mov
mov
lret
and
addl
loop
pusha
test
je
mov
mov
mov
fimuls
shll
dec
sub
popf
jo
aad
and
mov
mov
xlat
push
and
inc
add
cltd
in
cmp
fdivl
out
test
pop
outsl
sbb
dec
adc
mov
clc
cmp
push
mov
lret
movsb
dec
lcall
cmp
sub
fsubr
cmp
cwtl
or
mov
iret
daa
add
jbe
mov
adc
inc
pop
mov
cmp
push
fstl
dec
pop
gs
mov
jle
sarb
lea
out
test
push
cld
cmp
les
ja
movsl
int
mov
fidivrl
int3
data16
sbb
scas
out
popa
arpl
sbb
ljmp
mov
pop
jns
xchg
scas
incb
fdivr
bound
outsl
mov
dec
in
lret
mov
stc
inc
bound
sub
push
inc
jecxz
and
imul
sub
mov
pop
bound
int
jge
adc
or
jecxz
mov
dec
and
fcompl
in
sub
leave
stc
xchg
test
push
mov
lret
andb
dec
dec
jnp
movsb
clc
insl
cmp
loop
es
dec
push
notl
es
pop
test
inc
jmp
lret
pushf
sub
test
jns
lcall
incb
xor
push
shll
push
shlb
out
call
and
sahf
sub
mov
lahf
lock
pushf
mov
ljmp
sub
notl
pop
push
mov
push
or
bound
out
push
cmc
xorl
imul
aam
jb
push
ljmp
enter
aaa
jmp
mov
add
mov
sbb
mov
aam
jmp
pop
gs
and
out
mov
pop
cmc
dec
sbbl
addr16
jl,pt
int
xchg
xchg
pop
mov
xor
out
mov
push
or
insl
pop
fdiv
mov
cli
decb
in
loope
sti
sub
pop
mov
pop
test
pop
sbb
popa
cli
and
jle
mov
pop
ret
mov
ficoml
mov
and
cs
sbb
mov
into
push
adc
lock
push
mov
sub
cwtl
cmp
mov
fcompl
shlb
pop
addl
xor
push
jbe
xchg
loopne
jp
push
insb
test
xchg
les
add
xchg
outsl
leave
jae
jecxz
shrb
sub
xchg
dec
cmp
into
repz
outsb
jne
dec
insb
aad
mov
pop
cmp
add
insl
fistpl
jg
mov
ret
inc
or
push
fwait
mov
and
and
in
and
sarl
into
or
sti
jo
test
stc
or
cs
arpl
imul
push
pop
cmpl
xchg
mov
cmp
push
add
outsl
or
or
int3
movsb
loop
stos
xchg
mov
shrl
je
pop
clc
loopne
pop
sbb
xor
dec
inc
lret
std
in
inc
repnz
testb
aas
pop
loopne
jge
push
leave
lods
ret
push
sub
sub
leave
loopne
clc
sbb
mov
dec
repnz
mov
mov
jl
in
lcall
or
mov
cmp
es
data16
jecxz
cwtl
out
inc
movl
sub
push
insb
sub
or
mov
inc
mov
dec
loop
lret
ret
sbb
int
dec
sub
mov
in
inc
mov
jns
push
aad
xor
shlb
pop
addb
mov
xchg
andl
push
out
scas
pop
in
inc
daa
daa
add
add
inc
cmpb
inc
subb
add
add
push
sub
shl
sarb
movsl
aad
cli
sub
roll
in
mov
mov
aaa
or
loop
idivl
inc
pop
outsl
sub
fdecstp
or
pop
mov
ljmp
jg
adc
inc
mov
and
shll
mov
movsl
jae
sbb
fstps
mov
mov
inc
mov
call
adc
lds
testb
push
mov
outsb
or
add
lds
xor
int3
pop
mov
scas
inc
mov
mulb
pop
lock
adcb
iret
out
push
cmp
or
out
pop
xor
aas
xchg
sbb
mov
dec
mov
repz
lret
sti
mov
jecxz
notb
fdivs
push
gs
in
pop
xlat
jecxz
cmp
cmp
mov
jae
mov
pushf
or
sahf
ja
dec
addr16
stos
sarb
xchg
push
fnsave
mov
stc
push
xchg
jo
aaa
xchg
pop
or
imul
jno
aas
lods
fcoml
xor
sub
das
mov
xchg
or
push
push
inc
mov
js
loope
sbb
xor
sub
ss
imul
test
pop
adc
mov
lahf
orl
adc
inc
out
adc
or
in
jno
mov
stc
in
pop
push
jo
xchg
sbb
pop
xor
jbe
sbb
push
out
cmpsl
fidivs
cwtl
xor
pop
xchg
fisubs
jmp
push
call
pop
scas
mov
push
add
pop
xchg
loop
nop
notb
mov
add
aam
adc
ds
xchg
loopne
sub
fmuls
hlt
xchg
mov
sub
adc
call
shrl
adc
mov
push
lahf
mov
xchg
and
inc
jl
call
mov
inc
or
jmp
gs
sbb
mov
add
mov
std
cltd
cli
pop
adc
push
das
stos
push
dec
shll
or
ds
inc
ja
stc
stos
push
or
enter
fwait
and
and
std
addr16
popa
shr
mov
repnz
loopne
les
scas
adc
popf
pop
je
shrb
fildll
loope
xor
movsb
lahf
push
popl
inc
repnz
pop
xchg
aad
mov
cmp
std
jge
decl
jp
je
xchg
push
push
or
mov
and
xchg
enter
nop
mov
sbb
add
jnp
jne
sub
sbb
sbb
xchg
mov
jae
or
jo
lcall
ret
push
sub
push
add
scas
add
dec
sahf
lea
ljmp
into
pop
pop
orb
and
ds
ljmp
inc
push
lret
sub
pop
je
dec
add
aad
jne
jns
ret
dec
sti
test
jmp
push
insl
ss
in
sub
xor
and
mov
sub
je
jne
push
add
stc
lods
lock
lods
mov
call
push
pop
mov
insb
push
xchg
sbb
sbb
xor
xorl
data16
loope
int
lods
aas
jmp
icebp
pop
or
mov
cmp
push
jbe
lret
adc
xchg
loop
shlb
loope
push
add
pop
fcoms
pusha
add
mov
imul
add
ds
sbb
mov
fimuls
sahf
dec
or
stos
add
sbb
and
push
insb
in
sbb
fistl
adc
into
dec
jecxz
daa
popa
out
out
fisubrs
dec
js
sbb
neg
lret
push
push
fnsave
xor
rclb
mov
negl
or
int3
jg
sub
push
sbb
sub
push
push
std
adc
out
xchg
mov
push
xchg
sbb
xor
pushf
dec
push
jbe
and
insl
add
in
and
loopne
lock
mov
jp
nop
sub
pop
sub
mov
hlt
pushf
in
lods
out
cltd
adc
cs
pop
in
sbb
cmp
dec
out
pop
xor
push
cmp
shll
fbstp
stos
mov
mov
mov
in
jl
fdivs
les
push
bnd
add
fdivl
mov
out
jg
loope
in
scas
icebp
inc
jecxz
ret
mov
scas
or
lret
out
rclb
rcl
fstps
mov
jno
sbb
mov
test
fwait
into
xor
mov
gs
sbb
sbb
jecxz
inc
addb
sbb
adc
jne
repnz
sarb
and
xlat
stos
ret
addr16
cmp
push
and
mov
xchg
inc
adc
out
or
dec
hlt
mov
inc
pop
popa
push
add
xor
cmc
mov
xchg
or
mov
popf
jb
sub
push
jmp
mov
pop
scas
rcll
sub
es
enter
aam
jno
outsb
negl
cs
sbb
stos
xchg
fs
mov
and
mov
xor
inc
arpl
or
sub
gs
adc
repz
push
xorb
sub
test
sub
jno
push
icebp
sub
ret
testl
cmp
sbb
xchg
lock
inc
xchg
sbb
cli
jnp
loope
push
jmp
mov
je
test
fnstsw
lret
test
mov
add
andb
sub
into
loopne
mov
dec
pop
pop
dec
pop
jno
sbb
jb
jae
std
inc
pushf
pop
xchg
stos
sub
out
dec
andl
fidivrl
lcall
scas
mov
fnsave
lea
push
dec
or
ret
xchg
lahf
push
mov
inc
inc
jmp
adc
out
inc
test
cltd
adcl
aam
rcl
imul
in
repnz
ret
sar
fisttpl
xor
lret
mov
xor
in
popa
ja
jns
in
dec
inc
js
je
adc
arpl
xchg
loope
dec
sbb
ljmp
jmp
pop
add
add
fisubrs
dec
jg
cmpsl
ljmp
and
add
and
and
add
dec
stos
test
stos
jmp
xchg
into
sbb
jge
jns
inc
subb
sub
loope
mov
pop
rorb
fistpll
add
xchg
cmpsb
push
test
testb
or
cmc
pop
xlat
sub
ss
push
rcl
imul
add
sbb
inc
int
add
inc
inc
xor
xchg
mov
or
dec
mov
xor
loope
js
call
enter
push
mov
shrl
test
jo
mov
ret
ja
or
ljmp
data16
adc
xor
mov
sbb
push
daa
negl
and
sahf
addl
jae
lock
sahf
or
out
fs
movsl
mov
xchg
xchg
shlb
push
ds
pop
dec
dec
adc
cmp
or
fisttpl
fwait
sbb
loopne
mov
dec
and
imul
imul
sub
mov
jg
test
dec
pop
cld
fisubrl
lods
stos
mov
pop
ljmp
jecxz
scas
outsl
cmpb
mov
andl
sbb
sarb
in
daa
popa
cmp
je
cmp
jo
rcl
imul
lahf
inc
lret
mov
jo
pop
repz
push
and
pop
ja
and
nop
cmp
inc
mov
inc
jle
sub
aam
add
add
mov
loop
dec
jo
mov
testb
pop
xchg
iret
ja
insb
mov
out
mov
fcomi
pop
sub
fistps
push
setle
ljmp
ds
in
mov
sbb
mov
or
and
add
cmp
fisubrl
rcrl
mov
or
xor
sbb
xchg
mov
lea
pop
idivl
dec
inc
xor
sub
test
lea
addr16
addr16
call
pop
out
dec
lahf
push
inc
cmovl
mov
fsubp
cmp
sar
fcompl
xchg
mov
shlb
mov
fildl
xchg
pop
je
pop
mul
repnz
or
adc
lret
aad
dec
dec
adc
call
pushf
daa
mov
push
ret
addb
dec
push
mov
rcll
and
loope
mov
addl
shll
jno
adc
jle
cmp
jmp
dec
or
ljmp
divb
lret
pop
es
lcall
jle
stos
fldt
push
push
test
shlb
call
xchg
cmpsl
jno
pop
xor
movl
xchg
add
ret
cmp
pop
cwtl
mov
cmpsl
pushf
pop
xor
stc
lea
sub
sub
fdiv
repnz
or
adc
sarb
mov
cltd
cmp
mov
lcall
mov
dec
jo
cmp
mov
stos
aad
int3
aaa
int
and
jnp
addr16
loop
lods
add
mov
in
adc
les
or
jecxz
les
push
pop
push
movsb
jg
or
lret
nop
aas
push
stos
cld
in
faddl
xchg
and
push
mov
or
add
cmpsl
in
sbb
int3
push
push
mov
add
lock
and
clc
xchg
and
imulb
mov
mov
test
fisubrl
das
lock
sbb
mov
fnsave
mov
mov
outsb
ret
les
cmc
pop
push
adc
dec
ret
xor
fldt
and
stos
out
cli
mov
adc
fs
pop
dec
call
loop
das
mov
or
addl
stc
ds
cmp
stos
jns
pop
pop
rorb
xor
popa
pop
sbb
and
fnstenv
les
fldt
int
cltd
inc
repnz
das
adc
pop
sub
sahf
inc
les
outsb
mov
pop
jns
cwtl
std
leave
and
pop
mov
mov
push
test
sahf
xlat
je
xchg
pop
xlat
popf
sub
xchg
add
repnz
xchg
xor
out
push
fwait
addb
movsl
adc
les
fwait
push
mov
mov
loop
mov
out
clc
xor
xor
cmp
into
xor
movl
and
andl
lea
add
mov
pushf
push
cld
dec
ret
lret
scas
xor
aaa
xchg
mov
cli
nop
les
pop
mov
mov
xor
dec
scas
xchg
add
test
clc
adc
test
inc
mov
lahf
sub
ja
pop
popa
icebp
inc
div
aaa
lods
pop
cmc
lret
call
lods
aam
xor
fmull
repnz
out
in
in
dec
out
es
and
cmp
and
test
lock
in
sbb
ja
data16
pop
mov
out
rol
sub
je
in
xchg
lahf
daa
jbe
lods
xchg
sbb
pop
mov
jnp
cmc
sub
call
cli
scas
ss
cmpsl
jae
jl
in
xor
loop
adc
cmp
in
lret
icebp
pop
fs
test
insb
inc
jge
lret
or
push
imul
pop
lods
ret
sub
mov
sbb
jb
rcrl
xor
jecxz
insl
fwait
dec
out
repnz
pop
imul
add
sbb
xor
mov
sub
mov
mov
inc
scas
jecxz
negb
mov
add
loopne
sbb
outsl
fisttpl
adc
into
and
pop
sbb
and
jge
js
add
jbe
lret
fnstsw
sbb
pop
rcrl
sbb
lret
xor
cmpsb
push
mov
rcll
mov
outsl
lea
push
pusha
dec
push
mov
pop
aad
adc
je
testl
jmp
daa
adc
out
add
dec
lcall
testl
jecxz
xchg
std
sub
jo
das
xlat
lahf
cmc
fwait
out
jp
jmp
fcomps
aad
test
pop
xchg
in
add
jmp
push
push
xor
imul
lds
into
aad
movsl
adc
clc
or
mov
push
sti
ja
lcall
pop
loopne
cs
outsb
data16
lods
pusha
jnp
cmp
cmc
add
cmc
out
jge
mov
xor
clc
push
popf
mov
xor
jl
int
jno
lcall
fcoml
in
mov
pushl
adc
mov
mov
aam
rcrb
cmpsl
pop
sub
mulb
stos
loopne
fsubs
ficoml
jno
push
mov
cmp
out
mov
sbb
xlat
mov
aam
xor
rclb
daa
sbb
out
xor
jle
out
mov
xchg
rorl
sbb
pop
dec
push
cltd
cwtl
adc
xor
lods
dec
rol
add
rorl
es
roll
outsl
imul
xor
sbb
mov
mov
inc
sub
ds
lock
scas
xchg
mov
repz
int
sub
add
repnz
loopne
adc
scas
outsl
add
scas
daa
outsl
dec
cmc
mov
je
xchg
pushf
incl
adc
lret
mov
xor
xchg
adc
add
and
jmp
pop
insl
pop
sar
and
mov
inc
mov
hlt
dec
outsl
fistps
adc
not
fimull
shl
push
into
lcall
jmp
xor
inc
clc
mov
negl
lods
sub
into
addr16
add
jecxz
mov
push
cltd
imul
adc
cmp
sbb
push
mov
pop
pop
shlb
test
mov
iret
push
or
pop
cmpsb
lock
xor
xchg
lcall
xchg
jl
push
jbe
xchg
out
out
cmpb
jmp
xchg
mov
pop
loop
out
nop
adc
cmp
subb
sarl
push
pop
insl
jg
jae
and
xchg
mov
scas
adc
lcall
inc
pop
push
dec
xchg
jl
or
test
inc
xorb
sbb
ljmp
cmc
push
dec
jo
je
mov
inc
adcl
add
pop
mov
mov
lds
pop
sbb
ror
sub
jg
jb
jecxz
cltd
outsl
cli
sbb
mov
sub
mov
xor
or
push
rorl
or
lcall
mov
aas
cmp
jg
pushf
and
xor
push
xlat
dec
jns
jp
out
repz
cmp
push
xor
mov
mov
xchg
daa
sbb
mov
push
or
scas
mov
push
repz
xchg
xchg
imul
lret
xor
cwtl
loope
leave
addr16
mov
fcoms
inc
in
mov
lods
mov
jge
pop
jae
nop
fwait
push
gs
fdivrs
jle
push
xor
fiaddl
jp
sbb
xchg
cmp
ljmp
rclb
sub
std
insl
cmp
or
sub
adc
xchg
adc
je
rcl
aad
or
jno
cmp
sub
pushf
mov
int
out
outsb
push
cs
ljmp
loopne
inc
bound
movsl
jle
xchg
sub
stos
sti
add
mov
xor
and
inc
cli
pop
sbb
frstor
jnp
pop
popf
pop
fisubrl
mov
fidivrs
mov
lea
cltd
xor
jl
push
cmp
and
sbb
cmpsb
imul
jmp
add
jbe
adc
call
lods
push
std
push
sti
sbb
pop
lods
mov
ss
imul
add
in
inc
es
popf
imul
cmpsl
sub
sbb
pop
cmpsb
lcall
out
into
shl
iret
cmpsl
jno
xor
push
iret
movsl
mov
lcall
loop
cmpl
clc
push
adc
aas
push
mov
mov
ss
xor
mov
aas
repnz
outsl
incb
sub
std
jecxz
les
into
xor
in
sbb
jp
lcall
mov
das
in
push
and
and
sub
cmc
sub
xchg
mov
xchg
cmp
dec
xchg
mov
mov
imul
call
cmp
out
les
inc
mov
jge
ss
jecxz
in
es
inc
sbb
jecxz
inc
sub
mov
push
and
test
pop
lods
cmp
dec
sub
sub
xchg
les
dec
sub
add
jecxz
outsb
inc
jae
mov
or
movsb
xchg
in
in
xor
or
sub
lret
addb
daa
and
and
sbb
outsb
adc
mov
lods
dec
xchg
xchg
in
push
je
in
mov
lcall
test
pop
cwtl
inc
movsl
rcr
mov
outsb
int
xor
js
cmp
sti
int3
fnstenv
popa
xchg
ret
push
cli
mov
cltd
fidivl
js
es
ret
dec
xchg
ja
jbe
jl
add
mov
dec
aas
jmp
fdivrl
cmpsb
xchg
xchg
add
adc
out
push
rclb
fdivs
xor
inc
das
xor
cmovae
aam
add
call
pop
push
cmp
xorl
inc
pop
push
mov
fsts
push
repz
enter
in
sub
js
js
fisttps
fnstenv
mov
in
or
or
faddl
fisttpl
lea
inc
lods
imul
pop
or
jae
loop
inc
push
aaa
and
pop
fdivrs
rolb
roll
jg
jns
mov
aad
je
push
cmp
iret
sub
add
nop
sub
pusha
lods
aad
inc
xlat
jp
outsl
in
dec
jno
dec
xchg
pop
mov
mov
push
add
add
jns
push
pop
dec
sub
out
cs
cmc
dec
lods
dec
mov
xor
inc
adc
dec
mov
repnz
mov
cs
shrl
jge
adc
mov
cmp
sub
mov
int3
pop
fldcw
push
out
xlat
lds
sub
test
mov
adc
out
test
nop
js
enter
sub
test
pusha
nop
nop
pop
dec
pop
adc
inc
dec
pop
cmp
cld
daa
pop
jne
cmp
imul
inc
cld
rclb
xchg
out
jle
dec
daa
lock
cmpsb
enter
mov
push
mov
dec
in
mov
fidivrs
ss
sub
xor
add
cmc
out
mov
pop
xchg
mov
mov
and
test
lret
add
cmp
ds
call
xor
shll
sbb
sahf
iret
fwait
mov
or
jae
mov
es
and
aam
out
cwtl
in
pop
jecxz
movsb
movsl
jb,pt
xchg
push
inc
fidivl
cltd
and
cli
pop
outsb
xchg
popa
es
add
mov
js
mov
loop
aaa
pop
add
rcll
enter
gs
lahf
scas
int3
dec
les
xor
add
ja
in
add
mov
bound
jnp
fisttpll
pop
mov
lret
out
pop
int3
inc
xchg
pop
sbb
imul
cltd
sbb
push
shrl
outsl
addl
shrb
mov
push
xchg
outsl
enter
fnstsw
lcall
outsl
insl
aam
lcall
lods
jns
rclb
xlat
cld
push
ja
es
aam
xchg
ret
shll
xor
shll
rcr
inc
push
daa
add
xchg
xchg
mov
gs
sbb
aas
divl
insb
sahf
pop
xchg
movsb
and
repnz
loope
mov
xchg
imul
jg
loopne
std
mov
adc
mov
push
adc
pop
or
out
sub
add
inc
mov
jbe
or
xor
xor
or
mov
fs
inc
test
adc
xor
dec
push
loopne
jns
jmp
pop
les
sub
push
jg
mov
push
xor
mov
out
xor
mov
fidivl
mov
adc
xor
xchg
sub
daa
loopne
jp
jmp
adc
cmp
mov
rol
adc
pop
in
enter
outsl
adcb
xor
xlat
adc
or
loop
pop
cltd
test
xor
xchg
addl
jo
fs
out
pop
mov
push
lahf
mov
pop
push
cmpsl
cmpsl
insl
jo
xorb
pop
sub
or
loope
fcmovnb
cli
jne
jae
sbb
xchg
scas
mov
out
inc
add
sbb
pop
cli
sbb
icebp
mov
mov
outsb
lods
dec
lods
cli
insl
push
add
mov
pop
jmp
mov
in
dec
pop
std
inc
insl
clc
ret
into
xor
adc
insl
mov
and
int
shrb
call
mov
jno
into
xchg
fldcw
mov
pop
push
xchg
loopne
or
testb
push
add
pop
das
cmc
sub
fldl
lods
scas
cs
in
inc
in
sub
xchg
xchg
sbb
mov
pushf
ret
dec
test
test
xlat
lock
jbe
sti
jae
cmpsb
shrl
adc
push
data16
lods
divl
pushf
sub
jbe
into
mov
push
iret
cld
pop
outsl
cld
inc
sub
cli
stc
cmp
lahf
jo
xchg
cwtl
addr16
or
lret
pop
hlt
xchg
cmpsl
ja
lret
loopne
movsl
mov
inc
push
movsl
push
and
push
mov
mov
inc
inc
stos
sbb
jb
add
pop
add
loop
jno
std
lahf
fwait
aas
out
or
mov
push
add
add
popf
mov
ror
adc
in
xchg
mov
cmpsl
inc
inc
call
add
std
mov
cmpsl
jnp
adc
iret
add
dec
pop
lds
sub
cmp
xor
xlat
ret
cmp
mov
imull
icebp
mov
cmc
leave
fisubrl
add
out
fldl
xor
mov
nop
stos
jne
scas
add
fbld
movsl
xor
xchg
js
add
and
fs
push
cld
cmp
int
mov
js
push
dec
lea
or
mov
cmp
adc
lea
cmpsb
ljmp
push
mov
cltd
stos
jne
or
mov
test
loopne
sbb
pop
lods
sub
mov
lret
mov
andl
cwtl
adc
sub
add
outsl
lcall
mov
mov
outsb
notb
inc
lcall
out
dec
jmp
mov
xor
into
or
out
bswap
pop
stos
stos
aam
sub
bound
in
jbe
mov
sub
decl
jle
sahf
push
push
stos
cltd
pop
addr16
xor
pop
mov
jae
out
add
ret
pop
sub
mov
xor
dec
sbb
jecxz
pop
rcrl
dec
mov
mov
adc
lahf
fsubr
jo
lods
loope
jns
stos
mov
and
pop
cld
inc
outsb
out
cmp
xchg
dec
inc
push
adc
out
in
mov
mov
push
stos
pop
sub
enter
idivb
lret
pop
adc
push
les
push
jg
dec
pop
lods
rorl
add
adc
fwait
sbb
cwtl
and
sub
lret
inc
sub
pusha
add
repz
dec
sbb
mov
addb
lret
xchg
jno
fs
xchg
and
mov
push
jge
pushf
adc
or
jg
popa
shlb
mov
pop
les
dec
fidivrs
add
cmpsb
mov
jb
repnz
mov
fcoms
data16
adc
imul
xchg
jmp
dec
out
mov
mov
or
hlt
bound
dec
and
dec
aad
and
js
stos
push
fimuls
rcl
jp
or
outsb
lahf
stos
out
scas
lcall
inc
rorl
xchg
or
sbb
push
dec
faddl
icebp
mov
sahf
cmp
clc
enter
sahf
mov
js
push
call
xchg
sarb
push
pop
jl
sbb
mov
pop
aaa
mov
mov
and
pop
pop
jecxz
fwait
arpl
lods
stos
sbb
in
in
pop
xchg
jge
sub
outsb
call
loop
mov
int3
push
pop
jge
stc
outsb
jmp
lock
aam
adc
int
mov
pusha
nop
pushl
idivl
add
movsl
dec
lea
pop
pop
out
sub
push
push
pop
lahf
out
xchg
fstpl
mov
inc
outsl
insb
dec
jne
shl
cli
pop
xchg
mov
ret
xchg
mov
push
fsubl
repnz
push
test
repz
sub
js
leave
jae
cmpsb
jnp
add
xchg
adc
call
pop
cmp
out
repz
pop
ljmp
and
mov
mov
fdivrl
inc
aaa
enter
sbb
or
jne
xchg
in
sarb
or
dec
stc
mov
jo
xchg
dec
mov
inc
ret
hlt
cmpsb
in
roll
adc
scas
cmp
mov
cmp
gs
push
incl
daa
in
mov
lods
rcl
aad
adcb
stos
mov
out
push
cli
or
in
imul
je
aam
sub
jbe
rcll
mov
dec
push
rcrb
lock
clc
gs
les
lock
dec
dec
cmp
adc
scas
cld
aad
mov
push
aas
pop
and
lcall
popa
pop
inc
xchg
sub
ljmp
loopne
dec
dec
pushf
stos
pop
leave
out
mov
and
push
outsb
inc
sub
movsl
and
mov
lods
inc
lea
and
cmp
xchg
dec
xchg
lcall
xor
repnz
dec
loop
sub
inc
aas
test
xchg
fldln2
pop
push
outsl
es
sbb
scas
les
fidivs
add
inc
mov
stc
mov
cmpsb
mov
xor
mov
adcl
add
inc
insb
pop
pop
cmp
ljmp
fmull
clc
sbb
in
push
lock
sbb
dec
add
or
leave
arpl
int
imul
or
pop
call
mov
enter
daa
xlat
rolb
ret
or
mov
inc
cmpsb
loope
mov
in
jl
jno
add
and
xchg
cmp
xor
mov
iret
cltd
and
in
cs
inc
pop
or
fchs
mov
xchg
scas
aam
repnz
jo
cmp
sub
insl
adc
out
loopne
les
jmp
xchg
push
mov
cmp
imul
xchg
pop
bndldx
mov
cmp
mov
and
cmp
test
and
jne
xchg
dec
mov
jnp
push
cld
nop
and
xor
push
clc
lds
xchg
lods
jbe
ljmp
rcpps
fisubrl
mov
imull
jns
jmp
imul
sbb
popa
mov
xchg
inc
ror
test
outsb
adc
jae
mov
stos
and
xor
fstps
dec
cwtl
test
outsl
jecxz
mov
push
jle
pop
mov
xor
jnp
cmpsl
ret
sti
mov
xor
scas
mov
and
inc
cwtd
mov
test
arpl
je
pushf
nop
cli
negl
inc
xchg
push
out
movsl
es
std
xchg
testl
mov
out
fcoms
outsl
mov
xchg
lahf
ds
cwtl
jmp
jbe
sub
adc
push
jne
out
adcl
inc
pop
les
ljmp
pop
xchg
or
je
addr16
xor
movsb
pushf
das
mov
loop,pn
jnp
fcmovu
mov
pop
jnp
scas
lret
fmull
mov
sahf
adc
enter
cmc
cmp
lods
jg
adcl
aad
aas
sbb
push
lret
mov
leave
jns
dec
rcl
dec
cmp
mov
aad
daa
jge
sbb
pusha
into
jecxz
sub
add
ret
dec
xor
aad
push
subl
inc
mov
int
lea
or
cmp
inc
dec
out
pop
mov
push
mov
mov
xor
push
in
push
mov
iret
pop
or
ljmp
add
data16
xchg
jl
cmc
rorb
ret
cmp
and
fs
out
and
mov
addb
jbe
adc
lcall
sbb
push
and
mov
lcall
daa
mov
orb
das
cmpsb
js
or
in
movd
rclb
filds
test
nop
mov
scas
js
lock
push
or
xchg
ja
xorl
mov
data16
sub
dec
int
push
or
add
sbb
lret
mov
call
xchg
arpl
scas
pop
cmp
out
imul
lea
loop
in
mov
xchg
jns
sub
and
ds
pop
cmp
int3
xor
mov
or
mov
sub
cltd
je
xchg
cmp
shll
in
cs
sub
dec
cmp
outsl
fdivrs
aad
sti
int3
sbb
cli
xchg
jg
loopne
loope
mov
jecxz
cmpsb
test
repnz
cmp
nop
pushf
xchg
cmpsb
ja
fidivrl
stos
jg
pop
ljmp
adc
mov
test
in
movsl
aas
popf
fadds
mov
and
mov
xor
sbb
fwait
scas
ds
mov
mov
mov
xchg
cmp
mov
outsb
xor
fnstsw
int3
outsl
mov
jg
mov
js
inc
dec
rcl
pop
sub
or
mov
xor
and
jp
push
lret
or
adc
lock
fcoml
mov
sti
mov
mov
mov
je
enter
adc
pop
sbb
fwait
mov
push
xchg
lret
mov
les
push
xchg
insb
push
pop
push
pop
insb
fnstsw
push
sub
xor
add
cmp
cs
stos
addr16
lcall
pop
mov
stos
dec
mov
ficoms
leave
movsb
les
addl
fs
inc
push
mov
mov
and
mov
iret
call
jl
cli
cmp
mov
mov
mov
push
jmp
shrb
adc
mov
jle
loop
inc
sahf
push
arpl
stos
iret
mov
dec
test
imul
ja
mov
stc
mov
idiv
mov
inc
mov
lret
shl
loope
pop
inc
js
xchg
mov
jns
das
dec
jo
das
push
add
inc
dec
or
adc
mov
or
jle
lods
mov
adc
adc
inc
sbb
sub
sub
jno
lahf
out
test
je
imul
pushf
lods
push
lret
arpl
test
jmp
add
jge
inc
sub
les
subb
arpl
incb
lahf
lock
mov
push
adcb
xor
clc
jo
enter
push
ds
add
jae
inc
lods
pushf
xor
or
inc
negl
mov
pop
dec
test
push
outsb
idivb
xchg
fsts
call
pop
mov
into
cmp
lret
and
inc
rolb
mov
mov
movsb
pop
inc
ja
xlat
push
dec
and
mov
push
fs
fstl
inc
jnp
outsl
xor
inc
aas
xor
push
aas
xor
call
insl
call
daa
mov
add
push
mov
xor
mov
lret
xchg
loopne
jg
push
ret
or
add
test
das
fisubrl
fdivrp
rcr
mov
mov
stc
inc
ja
movb
mov
fstl
mov
fadd
loope
dec
mov
es
imul
test
je
xchg
pop
stc
push
repz
test
push
xchg
or
cmp
stc
xchg
adc
movb
repz
mov
cmpsb
cmp
les
ljmp
cmc
mov
xchg
gs
mov
xchg
or
test
dec
fs
out
ret
lds
inc
test
xchg
jo
mov
frstor
jbe
xchg
mov
mov
loope
mov
inc
lret
xchg
stos
sbb
push
push
adc
insl
scas
dec
pop
push
jmp
sbb
pop
js
or
add
ret
ret
mov
mov
hlt
loop
mov
into
les
push
daa
test
sub
inc
cmpsl
lods
push
sub
fs
and
cmp
or
fwait
mov
stos
lea
daa
loop
fisubl
test
pop
mull
ret
mov
daa
fs
and
cmp
jns
loop
ljmp
mov
in
push
arpl
cmpsb
and
repz
mov
jae
cmp
xchg
xchg
jb
ljmp
test
popa
loope
dec
cmp
add
stos
push
rorl
push
push
xor
or
cltd
mov
pop
adc
or
test
pushf
lret
push
leave
dec
cmpsb
jp
jne
fsubs
imul
ljmp
out
dec
adc
xchg
gs
jl
jbe
sub
mov
mov
lock
add
inc
push
push
sub
mov
mov
test
mov
lahf
or
mov
xchg
popa
jne
pop
add
dec
push
pop
mov
insl
and
xor
push
pop
or
lods
cmc
sub
lods
arpl
adc
inc
pop
inc
shlb
sbb
inc
mov
push
test
mov
push
xor
mov
popa
pop
and
xor
cltd
fs
sbb
xor
xlat
sti
sti
repnz
ljmp
xchg
fs
add
and
call
fistpll
inc
mov
pop
mov
icebp
jnp
addr16
inc
xchg
repnz
push
rolb
or
not
loopne
popa
and
xor
xchg
sbb
repnz
mov
pop
bound
cli
xor
aad
xchg
or
or
subl
das
xor
in
lock
jno
lret
scas
sbb
js,pt
dec
and
mov
stos
lds
nop
leave
cmp
xor
leave
addr16
fstpl
out
mov
in
or
adc
flds
jle
sti
pop
mov
arpl
test
or
fdivrl
jno
call
cmp
aas
loopne
ja
mov
jno
push
lret
je
xor
insl
jnp
xor
aad
or
out
cmpl
jle
test
nop
sbb
lock
stos
pop
or
clc
jg
rclb
ljmp
mov
xor
jecxz,pn
mov
mov
pop
or
mov
xchg
cmpsl
mov
xchg
adc
mov
lret
xchg
ja
push
mov
shll
xlat
icebp
js
shrb
popa
mov
cmp
cltd
dec
mov
cmp
xor
mov
mov
subb
scas
inc
out
idivl
scas
mov
jbe
jbe
adc
sub
insl
pop
and
add
loop
arpl
test
xlat
adcb
jle
rorb
fnstsw
mov
hlt
cmp
filds
fnstsw
in
jns
pop
out
in
scas
mov
sub
leave
fists
ljmp
dec
ret
jmp
or
sbb
mov
xchg
mov
pop
mov
inc
mov
xchg
sub
inc
icebp
mov
sub
jg
ret
test
imul
sub
cli
es
and
fs
mov
das
pop
adcl
cltd
test
cs
cmp
out
mov
push
mov
mov
adcl
add
fisubs
pop
xchg
mov
add
adc
add
sbb
repnz
stc
loope
jmp
movsb
bound
test
pop
xlat
incl
imull
out
mov
mov
and
and
mov
xchg
test
sbb
jg
or
inc
fistpll
push
push
call
shrb
imul
in
notl
jbe
inc
mov
lods
shll
adc
cmpsl
add
lock
aaa
mov
pop
push
popl
dec
xrelease
fistpl
dec
mov
adc
jg
jge
gs
pop
bswap
aad
add
adc
in
inc
dec
sub
js
cmp
push
push
cmpsl
pop
add
int3
or
cmp
mov
sbb
dec
insb
in
inc
cmp
push
pop
adc
xor
mov
mov
push
mov
imul
shll
rclb
add
pop
shrb
cmpsl
mov
add
inc
mov
lcall
jns
mov
ljmp
pop
mov
ljmp
and
push
push
mov
mov
fdivs
andb
dec
es
cmpsl
out
and
pop
pop
enter
addr16
dec
dec
loop
jecxz
push
jge
imul
fisubl
imul
mov
mov
out
mov
out
and
aas
cmp
lret
sbb
cmp
mov
insl
addr16
push
nop
insl
mov
pop
cmp
rep
fistl
fidivrl
mov
add
loopne
out
sub
dec
mov
dec
mov
andb
mov
dec
aaa
mov
mov
arpl
lahf
sti
sbb
xor
jl
mov
xchg
sbb
shl
dec
mov
adc
jb
pushf
bound
rorl
dec
push
push
imul
mov
mov
addl
es
or
jb
dec
outsl
mov
syscall
xchg
cmpsb
add
mov
or
add
cmp
push
ljmp
ds
push
pop
xchg
add
jl
mov
jge
push
nop
xlat
mov
jnp
aam
out
pusha
leave
ljmp
ljmp
outsl
cmp
dec
and
cmp
fxtract
mov
lock
mov
ffreep
or
shrb
jbe
mov
test
subb
sahf
push
push
sub
in
sti
inc
out
jbe
mov
stos
xchg
hlt
xlat
rol
inc
push
mov
aas
out
je
or
ret
jnp
pop
sub
cli
std
int3
xorb
fldenv
jecxz
pop
xchg
jns
pop
rclb
or
loope
outsb
push
pop
in
cli
dec
int
pop
jne
jl
loopne
push
mov
scas
add
adc
in
jge
ret
cld
cmc
mov
dec
rcr
lds
outsl
and
add
xor
std
adc
inc
stos
in
mov
xchg
adcb
jb
shrb
into
mov
push
mov
mov
jle
insl
rcl
sbb
rcrl
xchg
js
ja
vmovd
pusha
mov
cmc
sbb
aas
dec
mov
aas
mov
in
mov
pop
in
and
inc
jno
and
xor
jne
adc
pop
sbbb
stos
inc
mov
popf
sub
in
lods
stc
lods
daa
add
nop
rclb
mov
pushf
pop
test
in
les
cwtl
xlat
ds
inc
cmp
pusha
subb
bswap
fs
fmuls
out
iret
or
jecxz
stc
xor
pop
data16
rorb
push
dec
bnd
xchg
ja
pop
mov
mov
into
and
xor
lock
test
push
push
movb
pop
aas
icebp
sub
add
aaa
arpl
mov
sbb
divl
mov
leave
mov
sub
mov
mov
sub
fs
lahf
shld
sbb
or
ficoml
cs
and
clc
subb
cmp
pop
cmpsl
jne
scas
mov
es
fsubl
mov
repnz
mov
lods
and
adc
dec
sbb
sbb
and
loopne
mov
adc
inc
scas
stos
enter
pop
mov
push
in
add
sarb
add
int
movsb
inc
clc
xchg
lret
or
das
mov
pop
arpl
inc
cld
pop
or
insl
insb
pop
stc
out
xor
or
fbstp
mov
stos
lods
rolb
push
and
stos
xchg
and
shrl
push
xor
aad
sbb
lret
jecxz
lods
pop
insb
cmp
pop
std
lcall
pop
ja
loopne
loopne
dec
punpckhwd
outsl
jb
add
out
mov
fidivs
arpl
out
cmp
inc
cmpsl
mov
mov
pop
sbb
data16
cmpsl
bound
shrb
int
in
mov
nop
imull
and
mov
xchg
jbe
ret
hlt
cmc
mov
test
cmp
addr16
js
scas
mov
mov
movsb
std
lret
pop
jl
sub
push
pop
shrb
nop
xchg
push
addr16
jns
mov
dec
xor
sub
or
cmp
or
mov
mov
add
push
pop
insl
jnp
jo
push
push
bound
aaa
mov
add
inc
xchg
jb
daa
adc
cmpsb
xor
pushf
jbe
or
ljmp
addr16
lods
mov
out
ret
aas
add
aad
sub
imul
and
int
ficoml
inc
fs
or
xor
jnp
cld
pop
ret
inc
stos
sbb
in
adcb
mov
loop
scas
scas
jae
orl
or
xor
iret
pop
loope
push
cmp
dec
push
inc
sub
stos
mov
mov
mov
loopne
push
mov
outsb
pushf
ret
jge
in
orb
dec
iret
leave
add
ja
inc
dec
daa
dec
lods
add
test
mov
cmpsl
or
fadd
and
pop
testl
push
mov
adc
neg
icebp
mov
push
dec
popa
aas
inc
mov
or
sarl
aaa
mov
aam
das
sahf
push
push
pop
cmove
repnz
shl
or
movb
sbb
pop
imul
ss
or
xlat
adc
test
or
out
jae
shrl
sub
dec
cwtl
ja
mov
aas
push
mov
fwait
ss
push
gs
stos
adc
test
cli
inc
lcall
aad
mov
push
inc
and
push
jae
roll
es
mov
and
xor
pusha
icebp
fdivrp
adc
imul
stos
and
call
mov
pop
and
push
aas
sub
stos
xor
lds
mov
js
ficoms
in
and
repz
movb
stc
aam
fcoml
jne
cld
cmc
je
jle
or
gs
std
daa
jle
pop
das
mov
jl
inc
jb
push
rorl
aad
pop
out
rcl
fcomps
int
insb
decl
movsb
addr16
std
fsubrs
pop
hlt
adc
xorl
mov
or
dec
pop
lcall
adc
mov
pop
push
sbb
xor
aaa
insb
jbe
filds
cmp
stos
push
clc
sbb
cmp
repz
hlt
fidivrs
mov
sbb
aam
jle
cmc
pop
lods
xchg
or
dec
push
lret
or
test
mov
pushf
jns
frndint
cmp
cltd
arpl
or
dec
push
gs
jmp
mov
mov
sub
iret
xor
sub
inc
fst
push
adc
in
rcll
mov
in
mov
push
ret
jecxz
std
xor
lea
xor
add
sub
cmc
ljmp
addr16
movsl
test
mov
dec
bound
cmp
test
int
sbb
pop
push
mov
push
iret
das
pop
dec
cmpsl
test
and
int
mov
pop
inc
das
push
popf
out
clc
jge
add
movsb
shr
sub
ja
sti
sahf
mov
outsb
inc
cmpsb
pop
inc
and
test
adc
or
adcl
ror
pop
mov
int
lock
pusha
stos
popf
sarb
sub
sbb
sub
jl
sbb
xchg
jne
mov
lds
das
lock
add
xor
lods
xchg
mov
and
mov
sbb
sbb
fisttpl
icebp
or
cmp
pop
xchg
faddl
mov
add
lret
hlt
ja
jle
pop
stc
neg
sub
jo
clc
enter
mov
jmp
dec
xlat
push
mov
xchg
lret
adc
jb
and
dec
addb
xor
cmp
lret
bound
or
and
jns
ret
xor
aam
xor
ja
jle
lret
cmpl
test
pop
imul
sub
fidivrs
in
sbb
cs
cmp
outsl
fdivrs
lahf
jl
mov
pop
fsubrs
stos
cmpsb
jb
xor
xchg
sbb
out
inc
arpl
dec
or
lds
les
or
insb
bound
xchg
push
outsb
sub
int
push
adcl
movsl
stos
lcall
cli
jl
mov
push
xchg
add
insb
xchg
or
push
cmp
dec
lcall
xor
into
out
jo
add
das
dec
jae
aaa
loop
shlb
mov
jl
xchg
movsb
jae
sbb
rcll
in
ss
sbb
andb
jns
jne
mov
cmp
sub
mov
js
push
jg
jbe
out
movsb
subl
jge
pop
mov
pop
adc
pushf
inc
xchg
rcll
insl
jl
test
shlb
mov
ljmp
or
jne
lock
xchg
sub
ja
xor
lds
sub
xor
cmp
cmp
mov
inc
iret
jo
outsb
fs
lahf
mov
repz
cmp
or
push
cmpsl
push
out
push
stos
and
adc
mov
cs
call
xchg
cmp
cmpsl
ret
sub
pop
mov
imul
into
dec
or
movsb
push
mov
out
jo
int
or
stos
pop
xchg
ss
dec
lcall
ja
xor
rcll
gs
dec
pop
add
pusha
fisubrs
das
mov
nop
jmp
or
lret
and
pop
fisubrl
ret
pop
data16
mov
cld
icebp
sti
imul
inc
stos
js
stos
dec
and
je
cmc
add
rcrl
push
sub
sub
cmc
fidivrs
sub
mov
hlt
rcrb
int3
popf
cmp
pop
je
mov
add
or
sub
inc
mov
lods
test
xor
imul
lahf
pop
xchg
aas
mov
adc
bound
lret
cmc
mov
and
pop
jno
jge
aaa
xchg
inc
adc
and
bound
mov
icebp
push
adc
data16
cmp
and
fisubrs
fildl
add
ret
push
inc
lock
mov
and
repnz
cltd
cmpb
inc
cmp
les
gs
xchg
test
or
stos
pop
cmp
pop
mov
pop
dec
adc
insb
or
mov
inc
ljmp
pusha
pop
std
in
cs
inc
adc
int
mov
fwait
in
inc
movsl
adc
mov
and
or
adc
jo
jno
cltd
adc
fstp
and
loope
jp
adc
sub
mov
push
jmp
pop
outsl
mov
cmp
jle
add
jle
divb
xchg
jno
sub
test
add
mov
test
fsubl
hlt
rclb
pop
mov
jb
add
push
stos
cmp
sbb
hlt
xlat
or
pop
arpl
mov
add
mov
jmp
fcomi
lret
popa
or
loopne
or
clc
dec
fiaddl
xchg
and
cmp
mov
lods
xchg
fwait
out
pop
add
aaa
pop
dec
add
add
imul
mov
frndint
repz
sbb
cld
shr
es
lret
imul
fucomi
sub
pushf
lahf
out
insb
imul
jecxz
cld
or
jle
mov
dec
mov
popa
imul
stos
xor
or
sub
pop
pop
adc
pop
int
ret
xchg
lahf
sbbl
popa
dec
fisttps
ret
test
stos
mov
mov
hlt
clc
sub
jle
shlb
movsb
lods
filds
adc
mov
xchg
fcmovb
ret
scas
jae
call
mov
and
xchg
jne
dec
subb
sub
push
inc
mov
and
clc
dec
in
ret
int
insb
or
dec
aad
mov
imul
loopne
movsl
loopne
std
sbb
inc
loope
sub
out
xchg
subl
incb
adc
xor
movsb
cli
rcrl
cmpsb
jnp
push
das
jp
mov
lret
mov
xchg
nop
jecxz
clc
add
sbb
cld
dec
inc
popf
aad
pop
adc
xchg
jmp
fsubrs
push
js
ret
incl
fwait
push
cli
lds
lds
sahf
je
bound
inc
inc
ljmp
cmpsl
pushf
enter
das
push
jns
data16
mov
mov
jb
sub
mov
std
xchg
pop
repz
bound
push
inc
cmp
enter
sub
fsts
or
mov
out
xchg
push
pushf
out
js
fs
mov
in
pop
mov
aam
hlt
mov
pop
in
jg
scas
jae
jb
sub
push
lds
mov
push
and
fistps
dec
stc
loope
into
mov
jb
push
pop
or
rclb
push
aam
popa
cld
jb
cmp
into
inc
fldenv
dec
mov
test
rcr
cmp
cld
sub
jnp
scas
out
sub
cmpsl
pop
mov
sahf
movsb
stos
sti
and
mov
inc
cmp
dec
push
mov
and
mov
aam
jne
push
inc
cmpsl
jp
int
and
insl
xor
rol
pop
and
mov
lock
cs
mov
push
bound
int3
inc
sti
fistpll
stc
lds
lods
add
lods
or
pop
push
mov
mov
lcall
dec
lea
pop
dec
add
dec
daa
sub
xchg
cmp
call
daa
xor
in
ja
inc
mov
sub
pushf
and
sbbl
das
test
jge
sbb
and
out
aas
mov
stc
call
mov
or
ret
cmp
hlt
int
or
fildll
cwtl
xor
lock
fsts
xor
test
cs
popa
ljmp
ljmp
je
adc
and
cmp
pop
pop
add
scas
aam
or
lods
in
add
jae
jg
jl
xchg
mov
inc
lock
cmp
jecxz
add
lods
pushf
jge
mov
lods
fnsave
adc
sbb
mov
test
adc
push
mov
iret
aam
push
cmpsl
roll
icebp
jle
and
bound
xchg
mov
mov
xor
cmp
int3
jp
nop
repnz
fmuls
jns
movsl
sbb
dec
mov
not
decl
inc
hlt
mov
sbb
iret
cmp
les
mov
mov
sbb
fimuls
sbb
and
pushf
adc
pop
mov
cwtl
insb
jmp
bound
movsb
loopne
adc
ds
sub
and
das
and
inc
scas
cmp
cmp
mov
push
mov
cmp
push
loopne
fcomps
lds
fstpl
mov
loop
xchg
arpl
imul
scas
push
out
adc
int
xorl
scas
mov
fsubrs
int
push
ret
jmp
imul
cmp
lahf
fwait
or
cmpsl
inc
je
jg
jbe
pop
cmc
pop
divl
cs
js
das
stos
push
test
pop
sbb
