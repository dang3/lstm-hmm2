push
mov
sub
add
push
push
xor
push
mov
call
lea
push
push
mov
call
pushl
mov
call
mov
xor
push
add
pop
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
jne
testl
jne
cmp
jne
mov
call
mov
jmp
cmp
jne
push
mov
mov
mov
sub
add
sub
mov
lods
xor
stos
sub
sub
add
cmp
sub
add
ror
dec
jne
push
push
push
mov
call
pop
test
je
idivb
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
xor
inc
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
leave
ret
push
lea
sub
add
push
push
push
xor
mov
push
mov
call
test
jne
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
lea
push
push
pushl
mov
call
mov
push
lea
push
lea
push
mov
movb
movb
movb
movb
movb
movb
movb
mov
call
add
cmp
add
cmp
jne
cmpb
je
in
add
add
call
push
push
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
cmp
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
sub
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
jne
mov
pushl
pushl
pushl
call
jmp
pushl
mov
pushl
push
push
call
xor
pop
pop
pop
add
add
leave
ret
push
mov
mov
mov
add
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
cmpl
jb
push
push
push
mov
mov
mov
add
sub
mov
lods
xor
stos
sub
cmp
sub
add
test
sub
add
ror
lea
test
jne
pop
pop
pop
pop
ret
push
mov
sub
add
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
inc
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
lea
test
pop
leave
ret
push
push
push
push
mov
call
mov
jmp
push
mov
sub
add
push
mov
mov
add
mov
test
jne
add
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
xor
cmp
je
lea
test
push
add
pop
cmpb
jne
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
lea
test
dec
jne
pop
mov
ret
xor
ret
push
mov
push
push
mov
mov
mov
mov
mov
mov
add
push
mov
lea
lea
push
push
test
je
test
je
mov
push
sub
pop
mov
mov
inc
lea
test
jne
lea
mov
mov
mov
mov
sub
add
sub
mov
lods
xor
stos
sub
add
sub
sub
add
add
ror
add
jne
mov
mov
sub
mov
add
mov
imul
add
mov
imul
add
mov
mov
neg
add
add
mov
add
add
and
add
movl
mov
mov
mov
add
sub
mov
call
mov
mov
add
xor
add
decl
mov
jne
pop
mov
addl
subl
pop
pop
leave
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
add
sub
add
cmpl
jne
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
push
xor
call
jmp
movzwl
imul
add
add
cmpb
jne
test
jns
sub
add
and
or
mov
pop
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
sbb
add
scas
dec
movl
pushf
add
pop
sbb
rolb
sub
ss
and
in
jns
adc
addl
popl
dec
cmc
cmp
jl
sbb
inc
cmc
popf
je
mov
andl
sub
out
in
dec
xchg
aam
mov
insb
rcll
std
shll
out
int
sahf
mov
int3
dec
xchg
lret
lcall
sti
fbstp
mov
lcall
scas
xchg
mov
mov
std
fadds
arpl
sub
bound
in
dec
mov
pop
aad
test
dec
into
sbb
xlat
ljmp
add
test
xor
mov
shr
sbb
rcrb
mov
movsl
jecxz
test
packssdw
popa
mov
mov
pusha
sbb
pop
sbb
xor
lea
call
push
repz
pop
push
xchg
lods
push
or
scas
shrl
cld
push
or
cmp
andb
xor
sub
imul
pop
lret
jmp
push
cs
lods
jge
jne
mov
jp
and
cmc
repnz
pop
bound
cmp
jae
lret
dec
mov
loope
jno
ret
stos
or
pop
loopne
pop
mov
mov
subl
addr16
ja
lret
in
mov
xchg
push
cmpl
dec
leave
inc
or
dec
lds
cmpsb
outsl
pop
xor
mov
inc
inc
into
mov
mov
imul
or
loop
cmpsb
dec
sbb
cli
xor
mov
negb
xchg
dec
jg
pop
outsl
rcrl
sub
and
movl
fdivs
add
shlb
mov
loop
cmp
cmpsb
jp
mov
nop
shrl
adc
push
cmp
pop
xor
jo
xchg
adc
add
scas
pop
and
mov
mov
inc
add
and
negl
adc
xchg
xchg
adc
pop
add
jp
cmc
or
mov
mov
jns
jns
jno
sbb
push
jo
int
outsb
inc
aad
jmp
dec
test
fs
les
or
and
xor
rolb
pop
adc
je
rcr
mov
sti
inc
out
out
inc
or
mov
adc
pop
mov
dec
test
pushf
rcll
and
xor
lahf
sub
and
dec
les
dec
or
adc
jns
sbb
outsb
cld
xor
push
inc
fnstsw
jmpw
jne
mov
jns
xchg
pop
fdivl
cld
scas
mov
leave
ds
inc
lret
push
push
fsubrl
add
push
cs
stos
push
cmc
int3
push
daa
aad
cmp
mov
adc
mov
lea
add
repz
lods
jbe
xor
icebp
sbb
mov
inc
ret
shlb
test
aad
out
out
mov
push
jp
push
leave
xchg
test
in
insl
pusha
loop
jnp
aam
xchg
repnz
pushf
sbb
pop
xor
jg
icebp
stos
shlb
cli
pop
imul
mov
movsbl
mov
add
fwait
xchg
imul
sbb
add
pop
je
mov
ja
cli
sub
popf
add
shll
or
mov
cmp
imul
cmp
push
or
sub
xchg
xchg
dec
adc
push
dec
push
mov
push
jl
stos
push
hlt
jmp
push
daa
jno
add
pop
loopne
pop
push
mov
dec
rorb
cwtl
inc
push
pop
mov
lock
xor
and
leave
mov
lods
ds
fimull
mov
dec
test
cwtl
pop
sub
leave
cmp
in
ret
aam
scas
addr16
insl
xor
adc
mov
mov
sbb
push
rcr
sti
mov
mov
lret
sahf
mov
lret
roll
ret
clc
mov
xchg
pop
adc
cmp
pop
out
rcrl
dec
pop
mov
inc
mov
ss
outsl
bound
mov
cwtl
jne
pop
push
das
jo
insb
je
push
mulb
pop
clc
fwait
push
mov
jns
or
sarb
icebp
jle
push
cli
dec
pop
ds
pop
mov
dec
jmp
lods
pop
lahf
pop
les
pop
xlat
add
jbe
adc
ljmp
sub
mov
push
sub
icebp
mov
cmp
iret
push
lds
scas
iret
or
pushf
je
addl
inc
or
icebp
cmp
xchg
nop
xor
ljmp
loopne
mov
xchg
mov
push
jae
ja
pop
xchg
shl
enter
ja
pop
push
ret
mov
cmc
loopne
mov
dec
out
ucomiss
adc
push
sti
adc
lods
xchg
fnstenv
mov
dec
clc
push
icebp
ja
pop
lahf
aad
inc
fsubr
sub
cld
jp
xchg
sub
xchg
hlt
ds
mov
dec
cmp
je
out
sbb
sbb
negb
data16
mov
mov
xor
fstpl
fstps
icebp
ficoms
loope
ljmp
dec
cmp
mov
lret
mov
xchg
add
enter
mov
das
add
pop
jmp
stos
and
test
repnz
in
cli
out
xor
inc
and
sbb
jecxz
mov
mov
sub
xchg
mov
push
inc
shrb
aas
mov
lods
jl
xor
inc
xchg
fstpt
rolb
sbb
loopne
sub
xor
push
jecxz
push
hlt
xchg
loop
add
popf
mov
adc
jbe
sub
add
rol
sahf
xchg
pop
xchg
adc
or
scas
and
jmp
call
shl
or
sbb
fsincos
cmp
xlat
sbb
mov
jo
ds
aaa
out
lock
inc
and
dec
clc
mov
cmp
mov
sub
out
lahf
cmp
sahf
pop
sbb
inc
mov
xchg
lods
out
cmp
and
jae
shll
loopne
sub
fisubl
mov
enter
mov
add
cmp
scas
out
cmp
mov
xchg
mov
mov
flds
cli
pop
pop
mov
lret
mov
xchg
inc
or
or
jnp
mov
mov
or
insb
or
in
mov
jo
push
inc
sub
push
mov
jnp
dec
mov
dec
pushf
jge
stos
sahf
loope
sbbb
sub
xchg
xchg
int3
xor
and
dec
inc
inc
cs
cmp
test
mov
inc
xor
pop
xor
outsb
lcall
andb
xchg
loopne
and
sbb
repz
jp
divl
xor
add
popf
out
dec
mov
mov
shrl
adc
nop
mov
xchg
and
adc
das
push
sbb
stc
mov
add
mov
jns
cmp
inc
fiadds
bound
stos
lods
lea
or
insb
std
ds
pop
divb
test
inc
lahf
mov
xchg
cmp
add
mov
shll
fsubrl
and
roll
mov
scas
cmp
ds
roll
xlat
adc
fwait
lret
mov
inc
pop
cmp
jno
mov
cli
mov
popf
scas
pusha
test
push
pop
mov
pop
outsb
jge
iret
data16
rcll
jle
cltd
pop
lods
pushf
fistl
outsb
xor
xchg
ret
or
aas
dec
ja
out
dec
dec
adc
cmpsb
add
inc
push
push
lret
pop
jl
and
fnstenv
std
decl
inc
fs
push
les
mov
pop
cmp
addl
xor
sbb
add
loop
inc
lds
pop
shrl
mov
or
fists
xor
inc
dec
idiv
xchg
stos
push
sub
cmp
xchg
dec
mov
jecxz
loope
js
mov
int3
push
push
sarl
pop
xor
mov
cmp
mov
loop
mov
call
inc
inc
aas
pop
push
mov
rcrb
xor
xchg
imul
add
jo
mov
cmp
movsl
cwtl
cmp
jecxz
add
cmp
je
mov
je
fdivl
and
pop
outsl
and
or
push
outsl
push
inc
mov
js
test
pushf
pop
ret
fwait
lret
das
inc
decb
sub
and
jo
mov
jecxz
push
orb
adc
shll
fnstsw
push
lcall
je
rcrl
add
sbb
cwtl
das
xchg
mov
aad
repz
mov
rcr
xor
loope
jno
or
call
xchg
mov
lret
fmull
mov
data16
mov
cld
lcall
rcr
ss
in
sbb
ja
lock
aam
cmpsl
sub
loop
jge
inc
dec
pop
loopne
popa
gs
je
repnz
cld
sub
mov
mov
and
sub
insl
loopne
in
push
mov
xor
adc
cli
rcrb
rorb
mov
jg
insl
jge
dec
cmp
sbb
test
stc
cwtl
div
push
pop
jb
or
sbb
inc
inc
sbb
inc
fs
ret
and
xchg
jne
or
pop
dec
mov
loopne
iret
mov
sbb
push
out
lahf
xchg
pcmpeqd
test
dec
adcl
pop
xlat
inc
sti
push
adc
in
mov
sub
pop
aas
movsl
pop
clc
adc
or
mov
aaa
je
jnp
push
hlt
cld
push
loop
lock
mov
inc
lock
mov
and
mov
push
test
push
xchg
popf
or
sarl
sub
das
cmpsb
mov
jnp
lea
mov
mov
loop
cmp
add
shll
xchg
dec
jle
mov
loop
int3
push
jmp
sbb
xchg
lods
pusha
and
adc
das
stos
loop
lret
mov
out
mov
inc
push
inc
pop
and
adc
fistps
dec
stc
jae
out
fwait
sub
cld
push
js
adc
int3
mov
in
je
and
xor
dec
movsb
inc
mov
int
push
in
mov
mov
ret
xlat
popa
and
mov
xchg
ret
shrb
arpl
lahf
pop
dec
jmp
lret
aaa
sbb
pop
bound
pop
add
push
mov
sti
mov
push
mov
mov
push
push
nop
lahf
sbb
pop
mov
cmp
and
lret
in
sbb
cmp
cld
sbb
dec
loop
adc
clc
dec
les
sbb
add
jno
insl
je
popf
pushf
and
mov
cld
lcall
lds
xchg
sub
ficoml
pop
mov
jp
jmp
xchg
je
sub
enter
inc
in
or
or
xor
adc
lcall
cmpsb
dec
lods
std
jle
int3
add
jle
fucomi
gs
imul
xchg
mov
inc
in
iret
push
adc
sar
push
call
sub
mov
sub
cs
insl
movsl
jns
push
out
pop
movl
xchg
xor
mov
xor
cs
lcall
out
int3
nop
xlat
nop
xchg
into
push
mov
mov
jbe
cltd
imul
mov
es
mov
mov
fwait
sahf
stos
loopne
ret
push
shlb
fs
adc
inc
aaa
sub
hlt
sahf
repnz
ds
in
mov
scas
aad
push
ficoms
inc
test
push
pop
jmp
rcl
or
stc
es
nop
mov
push
and
add
mov
movsl
fcomps
sbb
ljmp
iret
aas
adc
test
iret
out
add
mov
lods
lret
ja
lods
daa
sbb
xor
movsl
inc
mov
inc
lods
std
mov
adc
lds
adc
pop
lods
push
sub
dec
and
pusha
push
in
or
ja
je
xor
dec
mov
lcall
pop
xorl
mov
cmp
fcmovbe
std
ljmp
popa
mov
stc
jmp
lock
loopne
push
sbb
push
or
xor
subl
addb
in
pop
adc
js
mov
int3
sbb
sub
jecxz
aas
push
stc
movsb
icebp
mov
jg
jns
pop
shrl
or
cmp
pop
jnp
push
addr16
adc
mov
jmp
aad
dec
outsl
arpl
jbe
out
adc
arpl
sbb
mov
add
dec
or
daa
dec
jne
pushf
bound
xor
aaa
arpl
xchg
cmp
or
loop
les
xchg
cmp
jnp
test
sub
jne
mov
inc
in
leave
add
add
or
addb
cwtl
and
lret
pop
iret
jl
jmp
fdivrs
mov
insb
fpatan
add
mov
jecxz
adc
aam
jmp
aam
pop
out
push
shlb
and
dec
mov
inc
jge
fwait
push
js
fidivrl
sbb
push
adc
mov
pop
inc
cmp
xor
mov
shl
sub
fnstcw
or
cmp
sbb
add
je
pusha
xchg
sbb
xchg
jmp
jne
and
fwait
enter
inc
es
xor
mov
lods
arpl
xchg
dec
cmp
and
cmp
jo
jns
pop
and
lds
popa
push
lock
pushf
arpl
inc
test
and
fbld
or
xor
scas
and
jns
insb
in
mov
push
inc
xor
fisttpl
ss
dec
sbb
sub
ss
or
int3
jle
pop
clc
add
inc
int
stc
dec
jns
loop
dec
inc
or
rorb
sub
dec
inc
imul
push
sbb
imul
movsl
cs
xchg
cs
scas
mov
ja
cmpsl
cmp
out
add
les
mov
mov
repnz
mov
lret
xchg
arpl
iret
push
and
pop
sahf
push
mov
sub
roll
frstor
or
mov
and
or
sar
sub
xchg
bound
movsl
out
inc
ret
dec
mov
in
jnp
out
push
sub
add
das
push
jo
inc
loop
mov
stos
lods
fwait
les
lahf
iret
or
mov
jo
stc
es
mul
cmp
cs
cs
loope
mov
orl
movb
add
xor
cmp
stos
sti
add
lahf
and
add
sbb
std
add
insl
sub
aas
mov
repnz
dec
mov
and
or
add
pushf
mull
jmp
or
sar
inc
popa
xor
cltd
int
roll
arpl
mov
icebp
sub
jle
test
mov
mov
add
mov
icebp
push
push
xor
sub
and
xchg
cld
cmp
fstps
loope
cmp
dec
lods
icebp
inc
mov
inc
push
fidivl
movsl
xchg
sbb
das
jmp
adc
stos
iret
mov
icebp
mov
rcrb
jo
cmc
fwait
pushf
fnstenv
and
rcll
and
shlb
pop
cltd
outsb
cmc
and
lret
in
fildll
int3
daa
faddl
jge
push
mov
movsl
cmpsl
xchg
xor
shl
idivb
ret
cmove
lret
xchg
neg
inc
inc
les
scas
push
xchg
out
dec
gs
dec
icebp
or
cs
sti
mov
cmp
cmp
cs
incl
or
outsl
jb
test
sti
in
mov
test
adc
xchg
aam
fistpll
lret
push
fcompl
aam
insl
pusha
inc
lea
cld
sbbl
adc
sbb
pop
push
add
lahf
mov
mov
sbb
push
push
divl
cmp
push
lods
mov
mov
in
scas
addr16
sbb
mov
adc
adc
jp
das
js
movsb
lret
insb
push
loopne
iret
mov
mov
or
pop
sub
sar
ljmp
imul
sbb
gs
addr16
mov
in
lock
lea
add
fdivr
dec
dec
lcall
pop
add
fdivs
mov
outsb
rclb
lcall
stos
fs
adc
rcr
pop
mov
adc
outsb
int
sub
mov
and
inc
into
test
test
cmpsl
movsb
in
cs
not
jnp
mov
mov
lods
adc
ficomps
js
loop
push
inc
dec
cltd
pop
pop
add
xchg
and
mov
push
mov
cmp
sbb
cmp
mov
addr16
fistl
imul
incl
insl
inc
in
xchg
aad
add
insb
movsl
mov
pop
les
add
push
inc
push
rol
hlt
insl
add
jecxz
xlat
adc
inc
inc
mov
cltd
inc
inc
imul
inc
repz
xor
xor
std
decl
add
je
dec
paddq
lret
push
stos
in
or
ja
call
pop
cmp
jp
mov
daa
out
sbb
ret
pop
xchg
or
push
cltd
cwtl
inc
aad
ja
xchg
in
movsl
inc
mov
fs
jle
mov
and
mov
pop
iret
ss
xchg
mov
xchg
leave
icebp
mov
fnstcw
push
jmp
cli
adc
enter
insl
push
cmp
adc
icebp
pop
stos
jg
sub
sbb
jnp
mov
hlt
inc
popa
cmpsl
out
jno
insb
std
push
cmp
data16
int
cwtl
xor
popf
fwait
data16
addr16
xchg
push
xchg
push
mov
sub
push
outsl
movsb
ss
decb
mov
push
loop
mov
js
ja
jg
cmp
mov
lcall
jae
xchg
testl
das
cmp
jne
push
and
and
pop
xchg
pop
xor
out
fisubs
test
push
cmp
jae
inc
js
xchg
lea
mov
lcall
pop
decb
mov
stos
mov
in
sti
or
enter
mov
xchg
jmp
test
movsb
xor
lcall
aam
cwtl
mov
pop
insb
push
jp
lock
jnp
mov
je
jmp
jbe
mov
xchg
xchg
fdivrl
push
loopne
mov
fistps
sub
xchg
push
sub
fisubs
sahf
push
lcall
mov
adc
push
fldcw
subb
jle
mov
add
mov
mov
xchg
jb
xchg
adc
lcall
shll
jmp
psrld
xor
xchg
insl
adc
adc
in
sub
stos
repnz
int3
flds
mov
or
es
and
fidivrs
dec
out
pop
js
jb
xchg
insl
outsb
pop
jl
sbb
lea
pop
mov
shrl
je
push
push
adc
add
loop
or
inc
dec
int3
fidivrs
add
sub
int3
lock
xchg
sub
adc
popf
outsl
sbb
push
mov
in
js
cwtl
adc
lock
mov
je
add
int
mov
fists
sbb
mov
cltd
sub
sbb
in
je
bound
sahf
sub
fadds
pop
in
pop
out
mov
sahf
xor
cmovb
add
lahf
ret
mov
or
int
add
jle
mov
xor
add
fcoms
test
aas
sahf
sub
mov
pop
pop
insl
mov
es
lea
subb
xor
shrl
lods
push
js
dec
mov
outsl
pop
push
into
je
jmp
fwait
test
push
jo
es
push
fwait
mov
cli
or
push
inc
jbe
push
jns
push
push
in
cmp
adc
in
mov
xor
das
sti
xchg
das
push
ret
mov
push
addr16
js
and
repz
lcall
push
jmp
inc
ret
aas
inc
mov
ds
or
orl
outsb
mov
ror
pushf
xor
test
mov
insb
hlt
fmulp
popl
sub
ss
faddl
lods
leave
dec
ficoms
and
push
sub
dec
clc
mov
sub
add
mov
out
add
fistpll
adc
mov
push
aaa
popl
or
xchg
add
jge
pop
cmp
stos
mov
add
flds
jle
push
movsb
cmp
dec
loop
sub
cwtl
test
mov
jnp
not
or
lret
inc
out
int3
mov
das
or
push
movsb
movl
jnp
ja
sbb
mov
movsb
cmpsb
imul
lods
mov
pop
lret
pop
int
stos
lds
sbb
shrl
std
stos
or
inc
orl
cmp
shl
or
inc
inc
xchg
mov
inc
je
mov
jecxz
sahf
jg
cli
call
jmp
jne
lahf
sub
in
add
sbb
add
cmp
mov
add
shlb
mov
rcr
ret
lcall
cmpsb
mov
xor
gs
mov
js
in
sahf
imul
xchg
xlat
jl
imul
das
xchg
pop
lcall
xor
mov
fcomps
add
jp
loop
stc
insb
in
int
test
test
jmp
pop
add
leave
pop
pop
cli
or
jno
out
leave
sbb
adcl
je
rolb
aad
test
and
ret
int3
pop
repnz
push
bswap
mov
enter
mov
adc
mov
hlt
sarl
adc
push
mov
push
dec
and
inc
mov
hlt
sbb
fldl
mov
dec
mov
inc
xchg
jbe
add
lea
push
mov
ss
fdivs
mov
mov
imul
or
jge
sbb
es
pusha
clc
divl
push
cmp
test
gs
lret
call
jae
and
jge
iret
pop
std
hlt
es
repz
cmp
cli
out
int
in
fwait
mov
inc
push
loope
adc
je
xor
ljmp
mov
shrb
dec
mov
mov
mov
mov
out
aam
mov
leave
ret
push
jecxz
scas
nop
js
addr16
dec
mov
or
pop
lahf
lock
lock
cmpsl
sbb
mov
imul
addr16
add
jl
xchg
mov
cltd
imul
adc
fstps
push
push
in
mov
mov
lahf
iret
add
cmp
pop
jl
pop
jne
mov
dec
sbb
add
xor
sahf
mov
or
ret
dec
cwtl
xchg
ficoml
shlb
repz
cmp
mov
push
inc
outsl
test
rol
push
gs
xor
push
fsubrl
stc
mov
mov
pop
icebp
pushf
dec
icebp
call
testb
xor
ss
dec
leave
and
out
lds
cmpsl
or
mov
out
test
pop
dec
xchg
insb
push
pop
test
movsb
sti
xchg
movsb
jg
loope
push
cli
xchg
jle
sbb
mov
sti
add
out
cmp
mov
cmp
cmpsb
loope
daa
add
bound
jp
jno
icebp
cltd
leave
cmc
and
idiv
xchg
int
ds
xchg
xor
or
inc
in
push
pop
mov
aam
in
sarl
je
loop
shr
push
into
out
nop
xchg
imul
inc
pop
cmp
jae
in
pop
test
flds
pop
ficoml
lret
mov
or
mov
cs
dec
in
jg
and
rcr
or
push
jmp
xchg
sub
or
jp
fwait
jo
sub
jo
stos
push
sub
pop
push
cmp
aam
std
adc
inc
hlt
addr16
jb
ja
enter
cmpsb
jno
jge
dec
outsl
jp
mov
pslld
leave
inc
fbld
jge
push
in
pop
mov
dec
xchg
xlat
cld
jle
ss
sub
mov
mov
sbbb
insl
sbb
pop
cld
stos
mov
fimull
inc
push
mov
inc
imul
mov
scas
pop
mov
aam
jg
add
inc
sbb
sub
scas
shrl
fdivrp
mov
addr16
in
not
jne
mov
inc
je
and
or
movl
orb
ljmp
push
jo
jno
dec
sti
jecxz
jnp
push
dec
cmp
adc
lods
push
stc
push
mov
dec
jl
outsl
ds
out
daa
pushf
jg
movsl
xor
ret
mov
or
pop
ja
mov
fldenv
cmp
mov
pop
sub
lcall
test
lret
mov
or
dec
xchg
imul
fs
jb
cmp
sbb
mov
clc
mov
jo
icebp
push
sarl
shr
addr16
mov
ffreep
add
sub
or
mov
cmp
shrl
stc
inc
xchg
or
dec
xchg
insl
mov
movsb
or
mov
std
mov
rorl
push
hlt
jno
fisubrs
stos
cmpsl
adc
orb
sub
stc
push
push
aas
ljmp
jp
cmpsl
movsb
sti
inc
ficoml
rorl
sub
std
cmp
jns
xchg
sub
movsb
push
jecxz
popa
xchg
dec
add
push
hlt
mov
mov
loop
test
cld
pusha
cmp
add
fs
adc
in
xchg
sbb
or
fsubs
outsb
inc
ljmp
add
pop
lahf
push
xor
jl
dec
cmc
sub
outsb
sbb
pop
aad
xchg
rcrb
aas
sbb
pop
add
xchg
mov
cld
pop
cmp
pop
rcrb
lahf
inc
lea
fsubrl
inc
xor
xor
fisubs
sti
clc
cmc
cs
xchg
jns
xlat
in
push
call
jmp
lods
mov
sub
enter
mov
pop
mov
sbbb
mov
icebp
sub
mov
push
les
fwait
scas
lea
fcomp
inc
out
cs
xorl
popf
sub
jge
outsb
lds
push
sub
fiaddl
fisttpl
jle
push
mov
adc
dec
mov
rorb
jno
push
cmc
inc
js
mov
inc
ljmp
pop
ret
adc
stc
push
mov
cmpsb
mov
lods
sub
push
xchg
movsl
sbb
xchg
push
push
in
enter
subb
xchg
ds
or
sub
or
mov
test
pop
std
xchg
xchg
jbe
scas
push
inc
mov
aam
clc
mov
out
push
shll
mov
xchg
mov
stc
ret
or
inc
pop
xor
test
mov
cmp
mov
call
aas
mov
or
les
aaa
adc
repz
jg
int3
dec
addr16
sti
mov
in
jne
fldl
fidivl
dec
mov
jp
leave
push
stos
push
mov
movb
mov
fs
stc
adc
pop
test
pop
add
jne
add
or
arpl
cmp
or
or
rclb
cwtl
sub
pop
test
repnz
mov
push
mov
sub
lds
sbb
je
adc
or
xor
push
iret
sahf
lods
xor
loope
ficoml
loopne
sub
xchg
loopne
fistl
cli
or
imul
adc
push
and
in
mov
leave
int3
jle
ja
adc
cmp
cld
push
mov
dec
jnp
adc
push
pop
cmp
sbb
addb
sbb
cmp
mov
loop
jbe
aaa
cs
shlb
aam
aaa
negb
xchg
aaa
test
or
pop
aam
in
es
popa
xchg
std
out
or
out
aaa
inc
imul
inc
push
sbb
std
movsl
mov
and
xchg
xor
inc
jle
push
out
xchg
push
inc
pop
xlat
aaa
sbb
movsb
fisttps
out
scas
sbb
les
icebp
jp
jge
mov
les
pop
faddl
and
fiaddl
std
jbe
jecxz
rcrl
push
in
and
cli
or
es
gs
mov
loope
xchg
out
ljmp
cmp
aas
scas
dec
in
adc
in
stos
or
or
test
cwtl
and
sub
add
mov
or
add
mov
out
lcall
and
sahf
mov
push
sub
pop
dec
mov
mov
xor
add
je
push
fdivs
shrb
xchg
jecxz
std
and
scas
ds
jl
cs
jno
lahf
faddl
lock
xor
lds
dec
clc
xlat
cmp
movsl
xchg
pop
sbb
inc
test
rcll
xchg
cmp
stos
std
rcrb
sbb
or
add
scas
xchg
fdivs
call
push
jns
fdiv
fwait
mov
lock
cmp
mov
outsb
fcmovb
sub
cli
lock
pushf
mov
inc
popa
jl
popa
mov
cs
add
dec
out
dec
jno
mov
inc
or
shrl
notl
mov
fwait
add
sbb
push
jb
je
xchg
ret
pushw
outsb
dec
fidivl
jmp
xor
mov
ss
inc
fwait
out
out
push
dec
mov
or
xor
ss
or
sub
mov
into
dec
or
sub
js
add
pop
fsubrl
inc
xchg
shl
loope
insb
cmc
push
fsub
lock
xor
push
je
roll
or
inc
iret
mov
lret
imul
jmp
and
inc
push
mov
enter
test
push
sub
inc
hlt
ss
xchg
inc
adc
mov
ret
and
jecxz
pushf
and
push
mov
stos
hlt
repnz
rcrl
divb
adc
repnz
out
loopne
cmp
pop
dec
hlt
add
or
add
add
and
xchg
mov
into
scas
hlt
cmpb
data16
pop
adc
mov
mov
jecxz
addb
incl
mov
out
outsl
ja
adc
mov
cwtl
sahf
push
cltd
insl
testb
jmp
cmp
es
mov
dec
shlb
mov
push
mov
xchg
cs
xor
in
test
repnz
or
scas
cs
pop
mov
mov
sbb
add
adc
fisubs
mov
xor
sbb
xchg
into
push
push
add
mov
jmp
and
ds
or
inc
mov
inc
add
fsts
add
or
jae
fwait
negl
jne
and
mov
jl
push
movsl
mov
sbb
jns
in
ret
insl
adcl
leave
jle
mov
mov
loop
push
pop
jno
loop
jo
cmp
aam
cmpsl
inc
and
stc
in
add
and
pop
shrb
sbb
add
dec
loope
stos
push
incl
mov
iret
outsl
stos
enter
ss
jmp
push
ficompl
pop
call
cli
cmp
call
jmp
mov
xor
mov
repnz
jae
mov
incl
fsubrl
xchg
data16
nop
es
xor
jecxz
test
int
imul
and
test
mov
cld
inc
sbb
stos
adc
lods
jb
pop
jo
in
lods
dec
stc
in
aam
cltd
je
dec
ss
test
jle
jno
aam
or
leave
xor
data16
xchg
and
ret
je
movsl
pop
cmc
push
xchg
inc
jle
jl
add
cmp
dec
arpl
popa
out
add
xlat
cltd
dec
insl
popf
test
xchg
jmp
inc
inc
repnz
push
sub
and
jae
scas
fwait
aas
in
in
jne
ja
int3
mov
in
orl
sahf
or
dec
dec
jbe
pop
cli
adc
or
add
out
in
push
push
pop
enter
daa
and
adc
sub
sub
fidivrl
pop
and
in
xchg
xlat
addr16
fistpl
test
js
jge
push
stos
mov
pushf
js
mov
clc
test
scas
add
jmp
frstor
gs
cmp
inc
push
aad
pop
push
fbstp
push
out
sub
inc
mov
inc
dec
stos
mov
inc
push
test
add
cmp
scas
cmp
pusha
jns
push
rcrl
lret
mov
add
jns
jbe
ja
inc
mov
inc
inc
sbb
xor
pusha
arpl
int
dec
cmp
imul
push
fadds
mov
push
loop
lods
in
addl
aam
push
adc
dec
fisubrl
sbb
xor
push
loopne
jae
inc
adc
imul
gs
mov
movsb
in
xchg
sub
push
mov
inc
xchg
fcomip
xorb
push
mov
cmp
stos
ljmp
xor
lcall
or
in
adc
lea
in
mov
dec
mov
push
gs
sbbl
adc
mov
sub
int
mov
sub
out
push
lods
stos
stos
xchg
popf
es
push
push
leave
mov
std
fstpl
pop
mov
scas
cmc
fs
fbstp
shlb
xchg
push
xor
pop
repnz
cmp
lods
push
xchg
push
mov
cmpsb
lahf
fldl
sub
lock
mov
fwait
insb
lock
movsl
lds
jne,pn
push
push
adc
lods
call
adcl
ljmp
ret
adc
mov
fsubs
ds
scas
jb
int
push
xor
repnz
xor
sbb
int
jg
inc
aam
mov
arpl
data16
mov
nop
or
repz
int
sub
xor
mov
cmp
scas
jg
jp
aam
add
orb
dec
fmulp
jo
insb
pushf
das
int3
dec
popf
pop
cli
jmp
cmc
stos
aaa
jae
sbb
dec
mov
shl
push
jae
rorb
ret
rcrb
es
push
xor
es
loop
loopne
adc
inc
mov
pop
mov
test
inc
xlat
jg
in
pusha
sbb
addr16
imul
cmp
mov
cmp
or
lret
jns
and
push
and
lods
push
lds
mov
leave
test
xor
adc
sub
jecxz
mov
sbb
je
add
mov
xor
xor
rcrl
mov
or
mov
ret
xchg
push
xchg
in
cmp
arpl
push
cmp
jecxz,pt
xchg
ffree
add
or
xor
cli
cmpb
fistl
cmpsb
mov
insl
out
sub
cli
fimuls
fbstp
loopne
shll
add
fsubs
imul
lret
mov
xchg
lea
not
clc
dec
mov
into
mov
test
or
iret
movsb
fs
js
aad
dec
xor
pop
pop
mov
ror
icebp
imul
shrb
rorb
jno
xor
or
sahf
stos
cwtl
in
das
stos
pusha
aad
aas
int3
pop
or
outsb
mov
jno
adc
sbb
mov
or
pop
jecxz
pop
mov
cmp
in
push
xchg
aam
push
arpl
xor
pop
outsl
cld
loopne
daa
or
or
cs
push
and
scas
mov
inc
inc
insb
fs
jns
mov
out
aas
int
jle
sar
lods
test
push
inc
popf
movsb
insl
mov
inc
sbb
mov
fwait
les
mov
out
aaa
cmpsb
add
aad
ss
sub
jmp
pop
clc
add
shlb
sbb
push
pop
or
push
lea
mov
shr
pop
popf
add
pop
fsubr
cmp
popa
sahf
sbb
mov
mov
pop
sti
mov
adc
and
sub
iret
jns
jp
sbb
sbb
or
gs
fsts
push
jge
cmp
cmp
push
pop
jo
imul
dec
and
sar
mov
inc
ud0
js
jnp
pop
add
stos
mov
out
in
push
ja
mov
pop
jl
mov
loope,pn
rcll
bound
cmp
outsb
mov
sti
stos
add
and
xor
es
jle
push
inc
cmp
xchg
popf
or
cwtl
stos
movsb
add
pushf
cmc
jae
scas
adc
xlat
orb
ret
rcr
fimuls
sub
push
or
repnz
inc
lret
xchg
sbb
cmp
nop
mov
pop
dec
fdivl
mov
icebp
inc
test
arpl
leave
fsubrs
mov
mov
push
ja
cs
push
adc
sbb
in
mov
clc
nop
jecxz
stos
negb
pop
pop
daa
sub
loop
fxch
mov
cs
mov
xchg
or
or
shrb
xor
int
mov
push
xchg
mov
popa
mov
sbb
scas
frstor
subl
pushf
pushf
out
dec
sub
clc
pop
or
subb
fiadds
pop
mov
jae
imull
lock
sbb
add
ret
cmp
insl
lret
sti
test
xchg
gs
mov
cmpsl
lret
fldcw
stos
xor
dec
or
lret
mov
or
push
jns
sahf
out
or
and
adc
addr16
mov
push
add
xchg
mov
push
out
mov
add
cmp
push
insb
inc
loop
sbb
dec
push
mov
loope
push
daa
or
mov
cmp
push
mov
insb
enter
fdivrs
out
sbb
inc
or
push
jge
pop
push
lods
cld
dec
lahf
into
repnz
js
std
int
mov
lahf
ljmp
pop
xchg
jmp
jmp
and
mov
mov
imul
dec
mov
or
mov
cmp
leave
add
inc
jo
mov
lret
mov
call
loopne
sbb
arpl
inc
aam
add
enter
jno
lods
stos
and
sbb
push
push
leave
push
enter
rorl
xchg
rolb
jmp
je
icebp
int
xor
ja
push
scas
jmp
cli
jnp
aam
repz
in
shl
pop
jp
push
hlt
cmp
push
gs
xchg
adc
mov
add
add
loope
hlt
dec
lret
mov
pusha
jb,pn
mov
mov
iret
mov
cmp
scas
and
push
int
lds
mov
mov
push
adc
pop
sti
dec
pop
adc
cmp
mov
or
movsb
mov
imul
pop
jbe
lds
jl
movsb
sbb
in
dec
shlb
jl
scas
daa
arpl
lods
mov
pop
push
scas
xchg
shr
dec
fadds
in
or
fistl
sarb
xchg
iret
mov
ljmp
mulb
fcompl
and
ljmp
mull
out
and
sbb
xor
adc
sbb
fwait
les
mov
mov
lret
sub
xor
jmpw
scas
fdivrs
add
cltd
js
lahf
pushf
push
ss
inc
lods
cltd
pop
clc
filds
cmp
jno
mov
rol
rorb
std
jge
fsubrp
ss
dec
jo
cmpsb
push
fmuls
add
mov
into
mov
adcb
lahf
push
adc
jecxz
loop
cltd
testb
repnz
loope
outsb
jns
cmp
ja
cmp
inc
push
xchg
sbb
imul
lock
pop
pop
and
outsl
cld
or
movsl
dec
push
lret
push
bound
pop
das
enter
mov
jbe
mov
mov
mov
add
sub
inc
loopne
test
out
int
xchg
test
fnstsw
and
mov
mov
xor
add
pop
mov
or
cmpsb
jecxz
popf
jnp
fdivr
outsb
push
sahf
xor
push
mov
mov
dec
lods
pop
adc
jno
dec
dec
cmp
mov
pop
jnp
add
add
ficoms
push
sbb
jns,pt
mov
ljmp
in
sbbb
dec
scas
out
jle
in
mov
test
mov
inc
aam
mov
adc
jge
jbe
sub
cmp
fisubrl
add
push
cli
js
push
cmp
dec
lret
dec
filds
push
mov
add
pop
in
or
dec
sub
lret
lock
xor
pushf
cmpsb
outsb
push
jns
cmp
psubw
jne
push
mov
push
sbb
cmp
pop
repz
inc
iret
sub
pop
push
or
xchg
adc
pop
cld
push
pop
inc
push
sbb
imul
xchg
xor
das
push
inc
pop
stos
push
and
movb
jl
pop
mov
cmp
repz
insl
lret
xchg
mov
mov
jnp
adc
add
repnz
stos
and
cmp
scas
sbb
inc
movsl
icebp
sub
jecxz
xor
mov
sbb
push
sbb
stos
fldenv
bound
or
xor
push
leave
jno
sbb
mov
add
jne
mov
xchg
push
std
mov
imul
mov
insb
insl
add
mov
cli
fwait
loopne
test
pop
add
and
dec
aaa
sub
jecxz
in
es
sub
ret
xor
xor
loope
adc
mov
mov
cmc
push
nop
pop
popa
mov
add
add
insl
add
add
arpl
push
add
je
add
gs
popa
bound
push
je
outsl
add
arpl
je
jb
imul
je
add
gs
arpl
add
imul
jne
add
add
jae
jae
popa
imul
gs
arpl
add
add
jb
popa
add
add
add
add
add
outsl
data16
jne
arpl
arpl
add
jae
add
insb
add
outsb
add
je
push
add
jo
jb
outsl
add
add
jne
je
add
add
add
outsl
add
add
outsb
add
add
add
add
jo
jb
je
outsl
outsb
sub
outsl
ja
jb
add
arpl
je
outsl
outsb
add
je
insl
popa
je
arpl
add
outsl
add
insl
add
je
imul
jae
outsl
bound
arpl
outsb
jae
outsl
jo
outsb
imul
add
add
add
add
insb
gs
