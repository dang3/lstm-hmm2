lea
xor
xchg
xor
push
mov
add
pusha
xchg
mov
mov
push
mov
mov
lea
add
ret
cmp
mov
neg
movl
mov
lea
lea
mov
mov
movl
mov
xor
not
mov
not
movl
lea
xor
movb
xor
mov
lea
mov
and
mov
push
lea
not
nop
mov
add
nop
sub
mov
add
xor
lea
xchg
neg
lea
xchg
mov
push
not
rol
mov
call
mov
and
mov
neg
adc
nop
lea
mov
xor
nop
mov
xchg
mov
call
mov
xor
neg
xchg
push
lea
mov
nop
mov
mov
nop
not
shl
mov
shr
movl
xor
mov
xchg
mov
mov
movl
mov
mov
movl
lea
xor
mov
mov
movl
not
not
nop
mov
mov
nop
mov
adc
shl
mov
xor
nop
xor
lea
xor
xor
movw
shr
rol
mov
movb
or
not
mov
mov
nop
xor
rcr
xor
rcl
xor
nop
mov
xor
call
mov
or
xchg
or
jne
rcl
lea
cmp
mov
nop
xor
mov
xor
mov
mov
nop
mov
xor
mov
xor
neg
xchg
mov
or
je
or
mov
mov
mov
nop
xchg
adc
shl
not
or
nop
and
lea
lea
mov
sub
mov
mov
lea
mov
not
nop
xor
rol
xor
neg
xchg
push
shl
lea
popl
and
ror
mov
xor
movl
rcl
mov
push
xchg
lea
mov
xchg
rcl
push
xor
not
xchg
call
mov
lea
lea
lea
inc
jne
mov
adc
rcr
mov
dec
mov
mov
mov
xor
xor
mov
mov
not
sub
nop
mov
rcr
lea
rcr
nop
sub
ror
lea
mov
lea
lea
xchg
mov
nop
lea
neg
lea
nop
mov
not
xor
pushl
cmp
xor
lea
pushl
mov
mov
xchg
neg
nop
mov
xchg
nop
mov
mov
lea
not
popl
not
mov
xor
popl
mov
lea
mov
sub
xor
nop
mov
adc
xor
mov
xor
mov
neg
rcr
xor
mov
nop
mov
mov
lea
xor
rcl
nop
neg
not
mov
neg
ror
nop
xor
neg
adc
rol
nop
rcl
mov
not
lea
mov
mov
push
or
shr
not
mov
mov
push
not
lea
push
mov
lea
mov
xor
lea
push
mov
mov
mov
mov
call
mov
mov
neg
not
neg
movl
neg
mov
or
shl
mov
nop
mov
and
lea
neg
nop
shr
mov
ror
cmp
or
lea
lea
mov
mov
sub
push
mov
mov
push
xchg
shr
push
xor
mov
lea
neg
neg
push
mov
not
mov
neg
push
xchg
mov
call
not
mov
xor
mov
nop
rcr
shl
lea
neg
nop
shl
ror
mov
lea
mov
mov
xor
mov
push
mov
neg
adc
lea
mov
push
mov
or
rcl
push
mov
mov
push
mov
neg
sbb
pushl
not
xor
not
shl
lea
call
mov
shl
rcr
nop
mov
lea
nop
not
lea
xor
xchg
mov
lea
mov
rcr
mov
sub
lea
push
xor
rcr
push
xor
xor
lea
push
xor
lea
pushl
mov
mov
xchg
xor
rcr
call
mov
xchg
xor
lea
nop
mov
neg
sub
mov
mov
nop
mov
rol
rcr
not
lea
xchg
neg
push
ror
sub
and
neg
push
mov
mov
mov
shl
rol
pushl
lea
mov
xor
mov
xchg
push
xor
xchg
xor
adc
pushl
rcr
mov
call
mov
xor
neg
mov
xor
nop
not
or
xchg
nop
mov
shl
mov
mov
push
mov
sbb
rcr
push
mov
ror
lea
push
mov
rcl
xor
neg
push
mov
cmp
push
mov
xor
mov
push
rcr
xor
mov
pushl
mov
mov
mov
neg
rol
call
add
add
mov
mov
add
nop
mov
mov
lea
nop
mov
xchg
popa
leave
jmp
add
mov
not
push
lea
mov
call
jnp
cmpsl
cmp
sbb
scas
cli
mov
cwtl
sbb
adc
leave
xor
or
jo
add
sbb
cmc
mov
xor
mov
jecxz
sbb
ss
decb
sub
lds
push
outsb
mov
dec
dec
sub
sbbl
lahf
sti
shll
pop
arpl
sub
inc
repnz
lret
ja
xor
and
pop
push
call
rorb
dec
push
fimuls
jp
jmp
mov
xor
mov
mov
sub
sarb
je
fwait
jnp
xor
rep
iret
and
mov
dec
jecxz
or
jns
in
iret
xchg
xchg
cmc
add
bound
aas
cmpb
icebp
mov
ja
sti
out
cmpsl
cld
pop
jnp
fwait
or
pop
cmp
jmp
xorl
rdtsc
hlt
nop
dec
outsl
std
pop
pop
rep
pop
xchg
jmp
pop
mov
bound
test
fchs
in
nop
and
cmp
jo
popl
adc
mov
orl
jbe
out
fdivs
ss
cmpsl
mov
test
addr16
sbb
push
das
xorb
xor
mov
mov
inc
push
push
push
ficoms
jge
incl
outsl
ljmp
call
pop
ds
ja
mov
bound
mov
lahf
sahf
cmp
mov
hlt
in
insb
push
jmp
lret
xchg
imul
addr16
mov
mov
fcoms
mov
test
dec
adc
or
add
adc
arpl
inc
pop
inc
fnstenv
sub
inc
aaa
rolb
test
sbb
aad
push
jno
xor
xor
shrb
cs
int
push
pop
mov
xchg
dec
sbb
dec
inc
xor
and
icebp
jmpw
das
pop
insb
xlat
jg
rolb
mov
negl
inc
gs
add
inc
loope
inc
inc
xchg
inc
pop
lds
pop
fsub
dec
adc
inc
mull
adc
cmp
mov
andl
loope
jb
lahf
push
stos
ret
fsubrl
cmp
mov
cmp
popf
or
dec
lea
loope
lock
jecxz
adc
inc
cmp
xor
aas
popa
dec
add
push
lds
jl
das
jnp
mov
and
mov
adc
push
mov
dec
and
mov
adc
insb
movsl
inc
or
sbb
inc
jge
mov
mov
notl
lret
call
pushf
push
aam
das
inc
sub
pop
adc
jge
add
fdivl
add
std
fcoms
mov
cltd
mov
fldl
fstpt
std
pusha
into
ss
xchg
push
push
jge
clc
in
add
cmp
and
imul
out
dec
pop
push
mov
popa
push
cs
shlb
iret
aas
out
mov
inc
xchg
adc
movsb
push
jg
push
mov
popf
out
xchg
sti
inc
add
mov
subl
dec
or
stc
fwait
dec
pop
push
repnz
mov
xor
mov
push
mov
xor
int
pop
out
add
ret
inc
mov
das
into
repz
fdivrs
out
cmc
xchg
add
into
rorl
repz
or
pop
idivb
or
mov
add
dec
fwait
push
arpl
popa
mov
sub
mov
adc
push
xor
dec
sbb
sub
fdivl
mov
pop
pop
dec
test
shr
repnz
sahf
push
and
frstor
jp
or
cmp
inc
lcall
pop
stos
mov
xor
cmc
mov
mov
sti
gs
and
imul
add
or
and
clc
sbb
bound
jle
movsb
int
dec
pushf
xor
xor
jb
adc
arpl
out
xchg
jbe
fwait
out
sub
fisttps
sub
jp
lahf
mov
add
adc
xor
jno
cmpsb
xlat
divl
pusha
lods
push
push
mov
xor
in
daa
enter
push
and
dec
xor
adc
sub
push
fidivs
js
hlt
sarl
enter
shl
pop
jo
adc
icebp
mov
lods
lcall
mov
rclb
pop
mov
pop
nop
push
lret
out
addb
int3
gs
jl
jp
clc
adc
xchg
in
mov
inc
scas
add
fstpl
jge
xchg
testl
mov
in
and
xchg
mov
mov
xor
mov
dec
pop
movsl
ljmp
xor
movsb
test
pop
ds
xor
flds
cmpsl
xor
test
adc
out
xor
inc
in
jle
sub
mov
xchg
mov
mov
pop
add
ljmp
push
jne
fidivrs
data16
cmpsw
or
lock
orl
test
push
pop
xchg
js
mov
lahf
cmp
stos
ret
fisttpl
add
cmc
mov
call
je
call
rcl
sub
test
inc
rcrl
xor
push
xor
leave
gs
add
jle
imulb
pusha
mov
insb
mov
sub
sub
mov
xchg
fwait
dec
lea
daa
lods
dec
lods
negb
movsb
inc
loopne
and
in
ret
mov
pop
fwait
xlat
push
cli
sahf
dec
nop
jnp
in
cli
mov
jge
pop
mov
sbb
out
loopne
stc
pop
jne
popf
adcl
mov
dec
out
cmp
fs
and
mov
inc
cmp
adc
inc
push
or
cmc
xor
pop
push
loop
jnp
movsb
mov
xchg
jne
lock
cs
xchg
push
cmp
xor
lret
push
js
cli
push
aas
mov
inc
cld
imul
sbb
int
push
insb
xor
mov
pop
aam
push
jno
cmp
das
out
fsubrs
jge
fs
cmp
fidivs
fdiv
mov
sbb
add
sahf
jnp
or
jecxz
and
loope
cmp
into
ja
movd
adc
mov
xlat
insl
mov
jp
fildl
nop
aas
and
subb
push
push
mov
rolb
xchg
movsb
lahf
xor
fidivrs
iret
sub
sbb
or
adc
pop
push
loop
fs
jae
add
xor
push
rcll
adc
mov
mov
inc
push
subl
adc
gs
dec
xchg
pop
pop
or
push
cmp
lret
data16
adc
xchg
mov
sub
inc
scas
inc
xchg
pop
clc
push
aad
mov
xchg
test
lock
push
cmpsl
mov
mov
pcmpgtd
pop
bnd
in
pop
pop
xchg
xor
ds
mull
dec
movups
push
stc
sahf
mov
push
lock
xorb
sub
pop
sbb
mov
add
mov
and
cs
mov
loop
mov
dec
sarb
icebp
add
insb
mov
fidivrl
cmp
or
cmp
mov
imul
xor
xor
nop
sahf
push
popa
test
or
subb
jae
mov
push
jne
scas
clc
jecxz
pop
push
inc
orb
arpl
cs
mov
sahf
negl
stos
add
cmp
pusha
scas
enter
add
div
mov
cli
cwtl
cmp
dec
clc
sbb
enter
