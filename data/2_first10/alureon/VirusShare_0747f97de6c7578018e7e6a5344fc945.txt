mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
add
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
push
xor
call
jmp
movzwl
imul
add
lea
test
cmpb
jne
test
jns
sub
add
and
or
mov
pop
ret
push
mov
sub
test
sub
push
mov
mov
add
mov
test
jne
add
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
mov
xor
cmp
je
push
add
pop
push
add
pop
cmpb
jne
ret
push
push
push
push
mov
call
mov
jmp
push
mov
cmpl
jb
push
push
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
sub
test
sub
sub
add
add
ror
lea
test
jne
pop
pop
pop
pop
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
add
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
inc
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
add
add
cmpl
jne
pop
pop
leave
ret
push
mov
sub
sub
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
lea
test
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
lea
test
pop
leave
ret
push
mov
push
push
mov
mov
mov
mov
mov
movzwl
add
push
mov
lea
lea
push
push
test
je
test
je
mov
push
sub
pop
mov
mov
add
push
add
pop
jne
lea
mov
mov
mov
mov
sub
cmpl
sub
mov
lods
xor
stos
sub
sub
sub
sub
add
ror
dec
jne
mov
mov
sub
mov
add
mov
imul
add
mov
imul
add
mov
mov
neg
add
add
mov
add
add
and
add
movl
mov
mov
mov
add
add
mov
call
mov
mov
add
xor
add
decl
mov
jne
pop
mov
addl
test
addl
pop
pop
leave
ret
push
mov
add
testl
sub
push
push
xor
mov
push
mov
call
push
mov
call
push
mov
call
push
call
lea
push
push
mov
call
pushl
mov
call
mov
xor
inc
cmp
jne
push
pushl
push
pushl
call
jmp
cmp
jne
testl
jne
cmp
jne
mov
call
mov
jmp
cmp
jne
push
mov
mov
mov
sub
sub
mov
lods
xor
stos
add
sub
sub
sub
add
ror
lea
test
jne
push
push
push
mov
call
pop
test
je
idivb
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
xor
push
add
pop
jmp
cmp
je
push
push
push
push
call
push
mov
call
xor
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
push
add
pop
lea
test
jne
pop
mov
ret
xor
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
add
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
lea
sub
add
push
push
push
xor
mov
push
mov
call
mov
cmp
jne
cmp
je
mov
jmp
push
mov
call
mov
push
lea
push
push
pushl
mov
mov
call
push
push
push
push
mov
call
push
mov
lea
push
push
pushl
call
mov
push
lea
push
lea
push
mov
movb
movb
movb
movb
movb
movb
movb
mov
call
add
addw
sub
cmp
ja
lea
call
cmp
je
in
add
add
call
push
push
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
sub
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
subl
subw
addl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
subl
addl
push
pop
rep
mov
add
sub
add
mov
movzwl
inc
cmp
jb
xor
push
push
push
push
push
mov
call
mov
call
cmp
je
in
jne
mov
pushl
pushl
pushl
call
jmp
pushl
mov
pushl
push
push
call
xor
pop
pop
pop
add
test
add
leave
ret
sub
add
fwait
inc
in
mov
das
add
inc
push
out
mov
testb
outsl
inc
cmp
fisubrs
fldt
int
hlt
movsl
xor
push
adc
dec
sbb
out
in
mov
push
out
aas
ds
mov
xlat
out
dec
gs
pop
movsb
movsb
sub
cmp
outsl
adc
mov
sahf
mov
pop
subb
push
adc
xor
mov
sbb
mov
mov
mov
hlt
dec
ja
lret
flds
add
sbb
ljmp
inc
popa
jmp
inc
movsl
cwtl
popa
push
stos
and
mov
jo
xchg
addr16
cmpl
movsl
ds
pop
rcr
jnp
jno
lret
cmp
sub
ret
stos
jns
inc
loopne
test
cmpb
cmp
je
xchg
fs
jp
das
pushf
test
aas
and
andl
les
pop
mov
jnp
jp
ljmp
xchg
dec
sub
adcb
pop
jns
or
mov
sub
sbb
test
ret
outsl
rolb
cwtl
inc
push
outsl
ss
stos
ljmp
mov
les
es
movsb
mov
and
in
dec
mov
mov
cmc
ds
adc
std
in
cwtl
es
sbb
stos
sti
pushf
jo
or
sbb
sub
jmp
and
cmc
lret
lods
push
dec
and
xchg
mov
adc
jge
cltd
mov
lcall
aam
enter
stos
dec
and
aad
outsl
ss
testl
icebp
fwait
jg
sub
xor
sbb
adc
arpl
enter
and
cwtl
push
jge
push
andl
mov
fisttps
pop
das
bnd
loope
out
js
jp
test
sbb
adc
cmpl
add
pop
aaa
jno
jmp
mov
lret
mov
add
gs
sbb
jo
mov
inc
pop
jno
inc
sbb
pop
testl
je
outsl
dec
popa
arpl
mov
xor
xchg
arpl
lods
cmp
leave
pop
push
pop
std
insb
sbb
or
and
in
ror
dec
jbe
push
loopne
jmp
sbb
lods
sub
aad
shl
and
pop
sbb
sti
push
pop
mov
aam
scas
sti
jnp
add
xor
repz
push
sub
cmp
jmp
sub
inc
ds
sbb
dec
cmpsl
inc
les
daa
outsl
pusha
lods
sbb
js
es
xchg
add
inc
movsl
or
add
sub
sti
aaa
jmp
pop
push
mov
mov
les
mov
mov
xchg
mov
cld
sub
sbb
pop
mov
or
rcl
push
and
jecxz
fwait
cmpsl
nop
jb
push
pop
jo
les
movsl
testb
mov
addb
jbe
push
movsb
or
test
popf
testb
pop
insl
jae
and
stos
sub
rcl
inc
lds
inc
addb
sbbl
sbb
or
loope
test
ljmp
or
subl
arpl
lret
dec
fcoml
neg
jl
add
lock
lods
roll
out
jl
ljmp
dec
push
insb
out
mov
xor
cmpsl
lret
scas
and
ret
sub
add
mov
fisttpll
mov
and
xchg
mov
or
xchg
push
je
lahf
mov
and
sbb
movsl
pop
sub
jb
cmpsl
mov
inc
xor
fimull
faddl
or
daa
pop
cmp
je
in
fwait
push
push
pop
clc
xchg
pop
xor
lahf
test
add
sub
flds
out
cmp
and
outsb
in
or
pop
add
in
inc
orl
ret
lahf
lods
pop
dec
dec
push
dec
outsb
insl
mov
shl
jle
in
or
sub
test
xlat
xchg
dec
mov
shl
cs
mov
out
push
jecxz
cmp
lods
iret
pop
ja
iret
in
shlb
loop
push
ret
inc
push
clc
mov
daa
lahf
subl
cmc
fdivl
xor
lds
xor
jmp
cmp
rcl
cmc
mov
loope
cld
aaa
lahf
adc
loop
cmp
arpl
pop
pushf
cmpsl
rolb
mov
in
test
jno
cmp
push
stc
outsl
jns
rorb
inc
scas
inc
test
loopne
mov
and
mov
jae
xchg
or
xor
lods
and
and
cmc
adc
jge
testl
addr16
pop
jge
and
xorb
sbb
sti
jg
bound
inc
xchg
out
inc
ljmp
loop
je
xor
add
mov
dec
fcom
lahf
mov
xchg
sub
lahf
fidivs
shrl
pop
lods
adc
shll
inc
adc
push
in
outsb
mov
pusha
cld
popa
jle
cmpsl
mov
jne
jecxz
js
int3
xor
adc
mov
cmp
stc
cmp
xor
repnz
add
mov
jl
or
stc
push
push
cmc
mov
push
fsubrl
dec
mov
arpl
cmpb
out
xchg
arpl
xchg
test
and
incb
mov
jle
imul
js
cltd
addr16
mov
or
xchg
jbe
dec
mov
and
out
in
addr16
outsl
ja
sbb
in
test
pop
scas
aas
js
frstor
add
pop
mov
cltd
pop
mov
hlt
fs
lahf
imul
mov
inc
and
pop
fwait
and
repz
fs
fisttps
je
enter
xor
mov
in
addb
je
or
je
mov
in
inc
push
lcall
sbb
outsl
or
cmpsl
mov
leave
xchg
sub
pop
repnz
jecxz
out
pop
adc
pop
js
cmp
mov
movsb
loopne
and
repnz
pop
pop
lret
jecxz
cmp
dec
pop
mov
mov
mov
pop
xchg
rcll
sbb
mov
inc
repz
fdecstp
outsl
mov
xor
sti
cli
int3
adc
xchg
js
adc
add
xchg
jp
hlt
test
adc
fdivs
or
mov
mov
pop
shl
out
outsb
out
bound
mov
xchg
dec
hlt
mov
jae
inc
ret
adc
lea
orl
fcompl
lods
cmp
adc
sub
cmp
jp
pop
xchg
dec
inc
loop,pn
pop
lcall
imul
clc
loopne
shlb
adc
pop
rolb
add
cwtl
jge
jp
rclb
mov
out
adc
xor
lret
push
push
mov
iret
frstor
sub
popf
cmpsl
lret
cld
inc
xchg
mov
pop
xor
jbe
imul
into
cmp
hlt
jo
out
mov
pop
aas
inc
sub
mov
jnp
jl
cmp
test
jo
add
pusha
mov
test
lds
call
subl
stc
add
push
push
cmpsb
add
insl
test
sub
push
imul
sbb
adc
xor
inc
and
inc
adc
dec
adc
shlb
adc
lds
pop
fimuls
fwait
leave
adc
dec
xchg
or
cs
mov
dec
in
imul
test
mov
imul
int
mul
scas
and
ljmp
movsb
mov
push
push
fs
adc
dec
shl
sarb
pop
ret
das
xor
or
inc
je
push
cmp
push
jns
push
out
ret
and
divb
jo
mov
jp
jno
inc
adc
ret
daa
sub
stos
mov
jo
leave
push
roll
mov
mov
lea
xlat
add
out
dec
loopne
fldcw
pop
pop
lret
cmovno
ret
mov
insl
push
filds
xchg
icebp
insb
dec
or
std
data16
rol
mov
add
je
or
jp
sarb
icebp
aas
or
xchg
pop
jno
adc
jle
mov
hlt
mov
inc
das
mov
sbb
jmp
loopne
lds
jg
ret
repnz
adc
push
sbb
xlat
xchg
push
push
mov
cmpsl
test
mov
dec
pop
inc
add
sbb
inc
cmp
in
movsb
stos
mov
pop
jb
lret
aam
sbb
pusha
mov
mov
mov
xorb
fwait
jbe
movl
mov
mov
cmp
repnz
cld
lret
out
cli
xor
mov
out
mov
sahf
cmp
ret
hlt
mov
mov
fsts
mov
jae
ds
call
jecxz
mov
hlt
mov
mov
add
stos
repz
gs
add
leave
fs
insb
adc
cmpsl
scas
mov
fidivs
push
loopne
sub
and
arpl
inc
push
test
stc
cs
or
ffree
jnp
push
sahf
sbb
cmpsl
out
mov
or
jmp
mov
leave
ret
mov
xor
enter
inc
insl
inc
in
dec
jmp
adc
test
sbb
subb
adc
jl
aaa
jnp
inc
int3
pop
inc
jno
in
cld
cmp
adc
or
das
fbstp
xlat
lds
inc
aam
xchg
aad
div
xchg
and
pop
out
sbb
movsbl
add
mov
jnp
adcl
pop
out
jl
in
fildll
cmp
and
lcall
imul
sbbb
add
cmc
test
subl
mov
inc
leave
jp
ja
ficomps
out
je
sub
jae
jns
mov
je
pop
xor
loopne
sarb
mov
jl
mov
push
or
ret
and
xor
add
jnp
mov
sbbb
cli
xor
aaa
adc
out
push
scas
pop
rolb
inc
push
xor
stos
and
adc
and
gs
pop
mov
mov
inc
popa
fimull
dec
sub
int3
or
xchg
in
and
push
mov
xchg
xchg
mov
push
xchg
inc
xchg
cs
in
sbb
das
xchg
sbb
adc
mov
xor
sbb
loopne
add
jbe
scas
sarb
jmp
rolb
lock
repnz
sub
in
sbb
dec
aaa
sbb
les
rorb
clc
pop
adc
inc
lods
push
shrl
mov
mov
sub
pushf
inc
les
mov
fwait
pop
jne
xchg
ss
shrd
sbb
mov
dec
bound
inc
in
and
sti
dec
adc
lods
fnstcw
cmc
add
loope,pn
cmp
push
push
mov
pandn
xor
xchg
adc
lods
mov
xchg
add
test
jae
imul
push
xlat
xor
sub
and
je
and
cmp
mov
push
xchg
ret
mov
cwtl
fcmovb
roll
adc
mov
xchg
insb
or
stos
dec
jnp
data16
add
rolb
pop
mov
lret
sahf
adc
dec
mov
jae
adcl
movsb
jmp
repz
stos
sub
mov
inc
xchg
xchg
jg
adc
lock
mov
decb
mov
mov
aad
xlat
or
rcrb
or
dec
fwait
xchg
lcall
fnstsw
pop
sbb
add
xchg
pop
mov
test
pushf
sub
sar
add
push
jp
adc
jnp
dec
xchg
sub
and
aad
sub
cmovns
cmpsl
xchg
push
jb
mov
mov
mov
out
std
push
and
loopne
fs
addb
jecxz
jle
mov
sub
test
jmp
cmpsb
inc
mov
sbb
add
xor
in
jge
outsb
idivb
add
xchg
fdivs
xchg
jbe
sub
add
out
addr16
popa
and
add
jbe
mov
call
not
mov
in
xor
mov
andb
repnz
aaa
jns
adc
sbb
ds
cltd
and
lods
jecxz
push
mov
popf
xchg
shlb
dec
cltd
and
data16
or
loopne
addb
ret
popf
js
in
arpl
sbb
cli
cmc
pop
lock
cmp
mov
add
lods
sub
push
sbb
ss
ret
pop
inc
cltd
ljmp
pop
lea
adc
cld
jmp
cmp
cmpsb
xchg
aam
les
cmp
inc
add
xlat
push
pop
shrb
adc
loopne
push
adc
insb
or
int
enter
jno
sti
mov
mov
push
lds
pop
imul
fwait
rorb
loope
ss
popl
out
mov
loop
ja
cmp
pop
mov
mov
xchg
xlat
pop
add
cli
clc
je
lea
ja
or
add
fs
aas
push
fistl
sub
dec
mov
xchg
and
jle
adc
ljmp
cltd
mov
cmp
pop
mov
gs
outsl
cmp
and
outsb
dec
cmp
mov
mov
cmp
movsl
inc
mov
into
dec
mov
cmp
pop
cmc
jmp
shrb
inc
xchg
ret
mov
and
cmpsb
and
xchg
push
push
stos
add
repnz
mov
jp
push
fstl
or
add
mov
and
iret
adc
xor
outsb
cmc
push
sub
in
shlb
dec
aas
shlb
jne
dec
pop
mov
inc
rorb
cmp
int3
pop
push
imul
xor
fcomps
mov
int
mov
mov
adc
or
xor
movsb
sbb
mov
jp
xchg
testb
sti
push
dec
in
jmp
push
fstpl
add
pop
clc
iret
in
dec
popf
cmp
sahf
insl
scas
iret
in
add
nop
inc
push
dec
jl
xor
and
popa
adc
test
pop
das
sahf
cmp
add
shr
pushf
pop
out
pop
pop
sbb
lret
mov
sti
xchg
lods
add
xchg
scas
inc
jno
int3
push
dec
sbb
mov
xchg
jg
scas
push
xor
pop
xor
iret
mov
gs
xor
daa
call
ret
sarl
inc
cld
jmp
jbe
orl
aam
ljmp
cmp
cli
dec
xchg
mov
aad
das
loopne
jge
out
jno
xchg
sbb
adc
sbb
in
in
or
mov
mov
adc
jmp
push
pop
jne
pop
xchg
or
sub
daa
movsb
aas
dec
sub
in
xor
int
xchg
cmp
sbb
sarb
ret
cltd
cmp
out
mov
popa
xor
out
ljmp
jno
mov
and
pop
push
jne
frstor
pop
inc
cmpsb
jp
jbe
lock
gs
mov
mov
or
scas
outsl
call
jl
addr16
ljmp
out
add
add
pop
mov
jp
jo
add
fcompl
cltd
ja
add
cmpsl
jl
std
mov
xor
pop
and
xchg
adc
mov
mov
mov
xchg
cmp
sbbl
pop
clc
insl
es
out
in
push
adc
hlt
and
dec
add
and
adc
shl
pop
mov
add
out
cmpb
mov
add
icebp
addr16
or
xchg
adc
jbe
add
mov
stc
jp
push
cld
cltd
sti
cmc
sbb
jmp
sbb
imul
inc
enter
xchg
jg
lock
mov
mov
imull
add
lcall
ljmp
mov
sub
lea
imul
ss
add
sub
repz
xchg
fisubl
dec
inc
in
push
push
push
inc
mov
and
push
jbe
push
fistpll
adc
xchg
jp
mov
cmp
out
imul
gs
lock
and
mov
xor
lods
push
cmp
js
jne
cmp
nop
dec
cmpl
xor
add
clc
push
sbb
sarl
dec
mov
sbb
das
or
dec
in
test
pop
notb
arpl
or
mov
push
movsb
sarl
pushaw
enter
aaa
daa
push
into
adc
out
ss
ficoml
pop
jge
and
gs
sahf
mov
in
push
push
shlb
nop
mov
loop
dec
mov
lods
pushf
lods
mov
dec
mov
fisubs
pusha
sub
lahf
stos
xchg
lods
shlb
pushf
stos
inc
sbb
cmp
push
test
cmp
push
push
dec
fnstcw
or
mov
and
test
add
push
je
outsl
stc
and
mov
fcomps
jns
icebp
mov
pusha
leave
out
scas
push
call
cmp
out
cwtl
push
cmp
loopne
stc
sub
pop
loopne
mov
mov
adc
push
ljmp
cmp
clc
sbb
popf
adc
cmp
push
sub
orb
loope
clc
dec
pop
add
test
shl
sub
cli
inc
movsb
rep
ss
mov
shrl
add
xor
bound
lods
and
icebp
xor
aam
or
ja
add
add
cmp
push
scas
jns
scas
or
les
aas
xchg
jle
in
out
cmp
mov
in
xchg
fucompp
js
repz
mov
xchg
fsubs
lods
movsb
mov
enter
or
arpl
insb
les
cmp
dec
jg
adc
pop
loope
je
arpl
pop
sub
fistpll
in
jp
and
xchg
xchg
push
xchg
mov
imul
push
sub
into
inc
jbe
pop
xchg
ret
xchg
leave
sarb
cmp
cmp
dec
sbb
fxch
addl
sub
and
das
out
cmp
pop
gs
lea
mov
jge
mov
jge
mov
das
or
repnz
pop
and
dec
sub
jg
mov
add
xlat
inc
lds
andl
outsb
aad
adc
mov
cmp
pop
lret
mov
xchg
mov
stc
shrl
fsubrs
xchg
mov
cmp
sbb
fucomi
or
add
js
loopne
jbe
lds
push
les
dec
push
dec
mov
in
outsl
repnz
lret
popa
scas
sub
in
xchg
sbb
lcall
ljmp
dec
and
in
es
fcmovb
dec
int3
hlt
aas
test
and
xchg
out
dec
pop
pop
push
mov
add
aam
add
in
outsl
icebp
les
leave
in
imul
and
ret
ss
xor
stos
push
sub
push
loopne
ret
xor
xor
mov
fistps
and
outsb
or
and
aam
or
ja
xchg
fadds
rorb
out
or
or
sub
cmp
xchg
cmp
xchg
jae
pop
into
sti
add
fldcw
outsl
adc
add
mov
lea
addb
loope
out
sub
mov
arpl
cmc
imul
mov
scas
les
push
add
push
adc
jnp
fs
xchg
jae
iret
cld
lahf
ljmp
xor
mov
addr16
idivb
ret
gs
sub
dec
bound
lods
mov
je
mov
aad
xor
pop
mov
insl
mov
lret
adc
and
xchg
cmp
sub
rclb
cltd
xchg
jecxz
xor
addr16
xchg
mov
fstps
dec
repz
nop
idivb
stos
decb
rolb
dec
in
jnp
popf
call
push
jmp
lcall
xchg
cld
andl
mov
sub
cld
cmp
sub
or
testb
mov
inc
lock
inc
nop
or
xchg
loopne
mov
xchg
pop
push
iret
aaa
imul
sub
inc
lods
cltd
jmp
fcompl
mov
mov
pop
mov
movsb
xor
and
cmc
addl
out
mov
adc
rcrl
pop
mov
cmp
rcrb
mov
dec
fwait
cld
insb
adc
es
aad
ljmp
push
ds
test
jmp
jle
inc
xchg
adc
dec
lret
pop
icebp
nop
cmp
adc
or
and
jbe
sbb
fwait
mov
lret
dec
push
xor
rcrl
stc
out
nop
xor
xor
mov
pop
or
incb
jmp
js
test
imul
inc
divl
cmp
jmp
sub
pop
sub
push
sbb
xchg
push
daa
push
mov
mov
aaa
in
adc
nop
fadd
or
shlb
jo
push
sarl
mov
icebp
arpl
push
clc
movsb
les
push
call
mov
negl
add
loopne
and
mov
out
or
cmp
loopne
inc
imull
cld
out
lret
lods
dec
and
std
pop
dec
dec
pop
xor
sbb
lock
mov
or
ret
test
mov
lret
imulb
js
aam
pusha
pusha
loopne
xchg
in
outsb
pushf
lret
in
push
movl
sbbb
lea
sarb
repz
dec
and
subb
jl
mov
mov
mov
xchg
hlt
mov
dec
xor
cmp
cwtl
push
xchg
out
fwait
push
sbb
mov
xchg
or
push
hlt
push
out
sub
nop
lahf
and
sbb
aas
test
and
jecxz
xchg
cmpsl
dec
in
loope
test
push
mov
nop
mov
iret
jg
insb
pop
pop
and
pop
push
pop
mov
into
pop
lds
mov
sahf
cmp
sub
aaa
cmc
test
cmp
adc
stos
cwtl
pop
jecxz
dec
jg
and
dec
sbbb
jp
fdivs
jl
test
gs
jo
pop
jbe
into
push
push
ja
xor
mov
mov
stos
popa
je
xor
mov
inc
mov
adc
loop,pn
mov
in
dec
mull
cmpsb
lret
push
adc
sbb
cmp
dec
mov
adc
cli
jecxz
aaa
sub
pop
icebp
shl
lcall
lds
test
test
adc
imul
sbb
or
lahf
or
lret
jb
ss
inc
and
cmp
in
add
pop
mov
jmp
sub
mulb
sub
in
dec
daa
in
and
imul
out
lock
push
pop
add
aaa
imul
insb
push
int
cs
jb
icebp
fimuls
bound
push
mov
dec
xchg
sbb
lahf
adc
rorl
ret
and
je
cmp
xor
jno
lods
and
sbb
push
xchg
push
std
xchg
in
jo
sbb
fwait
pop
lods
hlt
push
cmc
adc
cmp
inc
cltd
dec
pop
scas
push
push
push
pop
outsb
pop
sbb
clc
mov
addr16
pop
sub
fsubrl
xor
adc
lahf
imul
and
lods
add
ret
and
dec
or
aas
aas
add
mov
scas
push
mov
mov
or
add
xor
xor
sub
dec
xchg
repnz
aas
xchg
mov
int
cmp
mov
clc
shr
adc
sub
dec
jne
adc
lcall
sub
loopne
movsl
mov
jg
xchg
xchg
xchg
in
cmp
inc
adc
outsb
mov
fldl
stc
pop
pop
jmp
and
fildll
insb
repz
mov
xor
fnsave
insl
mov
out
adc
mov
mov
adc
imul
ror
xchg
and
lcall
cli
inc
arpl
push
lcall
lock
mov
dec
lahf
pop
in
and
jmp
in
nop
test
cltd
and
xchg
push
movsl
nop
test
lcall
pushf
je
scas
insl
sub
pop
out
lods
push
addr16
sarb
pop
xchg
test
mov
adc
out
into
adc
pop
add
test
cwtl
pop
cmp
xchg
cmp
pop
pop
pop
xor
repnz
sub
push
jne
dec
xor
jno
das
cmp
lock
jno
or
and
lret
roll
ds
repz
jp
scas
das
ror
or
jp
mov
aaa
push
xor
pop
outsl
mov
xchg
rcrl
jecxz
inc
dec
xchg
das
sub
hlt
call
jne
jne
push
jne
cs
mov
dec
lahf
mov
mov
push
sub
std
mov
sbb
out
push
add
cmp
dec
jae
insb
jecxz
cli
mov
sbb
lea
dec
push
cltd
or
dec
mov
rcr
out
add
fldcw
test
dec
mov
std
lea
insb
xchg
fs
jecxz
popa
cli
int3
rep
arpl
jp
mov
movsb
shrl
jnp
aas
push
mov
lcall
addr16
mov
iret
in
cmp
add
xchg
mov
nop
push
jo
dec
jnp
dec
inc
push
mov
scas
loopne
and
popa
rorb
aaa
mov
mov
dec
sar
out
insb
push
ds
mov
in
xchg
arpl
push
insl
sub
pusha
pop
test
or
popf
sub
shlb
fidivrs
out
sbb
enter
nop
cmpsb
fwait
imull
mov
das
lods
negb
jo
ficoms
cmp
cmp
arpl
mov
push
sub
sub
into
add
mov
mov
dec
add
push
push
inc
out
sbb
in
data16
mov
and
cwtl
jle
roll
ss
aas
sbb
mov
stos
mov
test
int3
into
push
scas
or
sbb
mov
push
push
out
loop
cmp
adc
jle
mov
sbb
ss
xchg
mov
or
fildl
jmp
push
sbb
icebp
sub
mov
cmp
pop
iret
mov
jae
incl
jbe
aam
sti
mov
push
pop
ficompl
bound
jbe
push
scas
inc
sahf
xor
aam
outsb
adc
aam
test
pop
aad
xor
mov
jno
push
jne
pusha
jb
mov
jb
cltd
jecxz
mov
inc
jmp
mov
negl
adc
and
mov
push
iret
push
dec
lret
icebp
test
inc
xchg
mov
mov
add
inc
dec
aaa
lret
jbe
int3
mov
out
mov
lods
xchg
sbb
and
daa
jns
jecxz
mov
into
popa
gs
scas
enter
les
lods
xchg
dec
push
push
mov
sbbb
mov
in
cmpsb
mov
sets
sub
dec
nop
fs
push
mov
pop
ja
mov
subl
jae
cmp
bound
cmpsb
push
rorb
rolb
xor
and
adc
out
sub
cmp
popa
cld
fcomp
adc
pop
repz
xor
cmp
lret
in
inc
hlt
es
inc
fstpl
and
xorb
push
add
outsb
dec
push
inc
or
and
rorl
adc
out
mull
sti
fistl
addb
cmpl
leave
repnz
sub
shlb
stos
mov
pushf
insb
xor
in
mov
cwtl
xchg
add
inc
or
lock
cli
rcll
jae
icebp
repz
mov
jg
fs
nop
testb
insl
mov
push
jle
popfw
pop
std
pop
sub
int
pusha
or
in
sbb
add
adcb
adc
not
xchg
bound
push
pop
cmpsb
push
xchg
out
pop
loopne
data16
fisubs
dec
xor
sub
lret
sahf
cmp
jnp
push
add
daa
sbb
cli
xor
mov
cmp
shll
or
push
test
fs
xor
jb
push
lock
lock
dec
ja
or
mov
cli
inc
lahf
sbbl
push
dec
pop
aam
jp
out
addr16
mov
cmpsl
xorb
icebp
xchg
jb
shl
add
mov
inc
scas
popf
popa
xor
fnstsw
cmp
or
pusha
clc
or
ret
and
fs
adc
pop
int
lods
fstpl
mov
daa
gs
imul
sub
push
sub
mov
test
push
cli
dec
xor
loop
cs
lock
sbb
dec
xor
dec
insl
xor
mov
in
push
out
aaa
xchg
push
ffree
lret
dec
imulb
mov
icebp
lret
test
mov
xlat
sbb
xor
cmpsb
fldt
les
sbb
movsb
ror
jmp
jae
xor
push
adc
loope
fldcw
roll
outsb
dec
jp
ja
iret
push
divb
lods
test
pop
popf
jns
dec
mov
and
fisubrs
mov
jg
idivl
mov
xor
fldcw
in
mov
in
shlb
xor
or
jge
dec
cs
mov
jo
mov
arpl
out
shll
dec
pop
add
enter
fisubl
xor
enter
add
cli
lret
jl
aaa
ljmp
dec
dec
ffree
or
cmp
lret
lcall
lret
lea
popf
test
lahf
shlb
push
aam
popa
cmp
ljmp
divl
test
jmp
ret
jp
xchg
rolb
adc
aas
inc
lahf
in
in
gs
dec
add
imul
es
test
sbb
andl
dec
mov
rolb
jge
loop,pn
repz
sbb
or
xor
aaa
ds
push
cmp
loop
int3
push
fadds
imul
push
ja
push
mov
sbb
sbb
or
int3
and
dec
call
inc
push
shrl
and
sbb
mov
mov
cs
cmc
repnz
adc
fldl
sarl
jae
adc
sub
push
inc
test
sub
jge
or
xchg
rcll
xor
mov
leave
hlt
sbb
pop
addr16
xchg
cmpsl
ror
cwtl
aam
push
jge
xchg
mov
iret
sbb
xor
xor
das
mov
jl
or
dec
stos
xchg
popf
imul
and
mov
cmpsb
gs
push
mov
mov
sbb
dec
xor
addl
pop
mov
lock
fcoml
je
adc
pop
in
iret
lahf
cli
lahf
scas
push
xchg
and
jge
fildl
inc
fildl
fcmovbe
lret
orl
jle
outsb
sub
mov
cmpl
fstpl
movsb
xor
pop
mov
test
add
xchg
mov
inc
xor
cmpsl
mov
bsr
push
inc
and
mov
push
add
fs
test
rclb
xor
stos
jb
add
pushf
jmp
mov
popa
mov
mov
inc
movsb
pop
stos
sub
ret
push
ret
aam
insl
mov
pop
imul
push
push
push
ljmp
jmp
decb
inc
lcall
mov
mov
mov
fs
out
mov
addr16
push
rol
push
add
pop
pop
cli
pop
xor
inc
es
or
and
in
fcompl
bound
rcrl
cmp
int
xor
fisubl
mov
pop
mov
jno
mov
outsl
mov
inc
std
add
inc
mov
int
push
test
pushf
dec
push
xchg
cwtl
push
cs
pop
or
mov
sbb
mov
mov
push
popf
pusha
in
outsl
mov
mov
adc
rcl
push
add
fdivs
push
orb
data16
xchg
jo
sbb
or
or
nop
pusha
jp
jo
rolb
or
and
aam
pop
pop
test
push
pop
mov
xchg
pop
roll
jge
movsl
jno
dec
adcb
fnstsw
lahf
or
insb
pop
fstp
mov
jb
je
loop
mov
jge
nop
add
pop
dec
in
push
in
mov
dec
in
out
stc
cmpsl
cmp
push
xor
js
pop
pusha
sub
add
fs
xchg
mov
lret
mov
js
lea
insb
push
jns
cmp
movsb
add
call
jp
mov
jecxz
pushf
shll
insl
bound
jns
stos
sbb
sub
mov
xchg
mov
cmp
mov
std
aas
sbb
jle
xor
mov
ret
fs
cwtl
lods
sbb
clc
mov
stos
jecxz
mov
aaa
and
add
shll
jmp
xor
fldcw
push
lea
in
incb
clc
mov
mov
scas
cli
cmp
cmp
cmc
enter
jo
push
shlb
sbb
subl
bound
rcpps
pop
stc
jecxz
ret
insb
inc
xlat
ret
in
cmp
or
cmp
enter
sbb
mov
pop
imul
and
pop
insl
std
loope
push
jle
dec
dec
sub
loopne
mov
stos
stc
idivb
daa
sarb
sub
dec
push
xor
push
aas
inc
iret
das
int
mov
insb
js
aam
out
out
pusha
dec
xchg
test
mov
fiaddl
out
mov
sbb
insl
lods
idiv
ja
out
je
xor
scas
jne
xor
cs
mov
frstor
lods
fsubp
push
inc
call
cmp
dec
cmpsl
and
sbb
xchg
popw
sbb
js
sahf
cwtl
lods
cld
mov
jb
xor
mov
in
sti
and
lret
adc
in
dec
inc
cmpsb
and
jp
mov
fdivrs
in
sbb
jp
es
inc
cwtl
pushf
add
test
fnstcw
imul
stc
fs
sti
jbe
mov
mov
push
mov
pop
cmc
mov
cwtl
push
xor
xor
into
insl
in
jecxz
sbb
dec
mov
in
lahf
pop
fidivrs
mov
mov
push
ret
leave
xor
push
shrb
cmc
lcall
rcll
cwtl
cmp
data16
popf
aaa
ljmp
xchg
mov
out
and
jmp
cmp
mov
outsl
push
decl
rcll
cmp
sbb
sarb
cltd
fadds
inc
jbe
aaa
jecxz
stc
sub
push
add
and
xchg
scas
mov
mov
mov
xor
bound
cli
xchg
sub
adc
mov
mov
test
mov
ljmp
dec
dec
enter
cmc
mov
cmp
mov
cmp
or
gs
test
cmp
outsb
sub
int
subb
add
cli
ret
out
outsl
inc
sub
popa
addr16
int
cltd
mov
sub
pop
in
loop
jbe
subl
cmpl
cmpl
aad
pop
mov
mov
sub
dec
mov
add
push
xor
movsb
fdivrl
shlb
mov
fwait
jecxz
scas
jmp
pop
inc
adc
mov
and
cmpl
das
cmp
sar
push
xchg
jge
shrb
sahf
popf
pop
repz
xor
xchg
lcall
movsb
ja
mov
mov
inc
aad
loopne
jle
mov
add
dec
adc
ret
mulb
icebp
and
dec
pop
xorb
fdivrp
xor
cld
xor
cld
addr16
ret
pusha
cmp
fwait
leave
jecxz
inc
xchg
test
add
lahf
inc
and
add
adc
jo
sub
fdivs
jmp
jne
pop
lret
outsl
jno
jno
imul
orb
test
mov
repnz
xor
dec
cld
scas
lahf
sbb
pop
lods
scas
stos
arpl
mov
rcl
jbe
adc
loope
xchg
add
lock
add
mov
jl
push
sbb
ss
push
push
rclb
pshufw
fcmovbe
loop
gs
xor
xor
inc
nop/reserved
das
shlb
jb
or
pop
adc
ret
cmp
jnp
out
inc
adc
or
sub
add
fwait
add
and
jns
sub
test
adc
and
ds
fs
xor
pop
or
adc
push
xlat
out
shlb
bound
add
inc
popa
push
pop
cs
mov
and
mov
repnz
sub
mov
mov
mov
mov
lods
adc
jb
leave
sahf
push
in
dec
cmpl
lods
sahf
mov
mov
stos
mov
sbb
adc
sbb
shl
rcl
lds
cmp
sub
cmp
mov
cmp
xchg
movsl
dec
dec
jns
lds
cld
mov
test
mov
mov
scas
in
dec
imul
adc
jecxz
test
sub
pusha
add
scas
push
or
test
mov
ja
movsb
push
sahf
in
inc
push
xchg
fstps
lock
add
mov
push
lds
mov
stos
ret
jecxz
sbb
dec
cmp
push
or
aas
faddp
out
pop
mov
sbb
out
mov
mul
jmp
jb
mov
mov
fiadds
sub
in
cmp
negb
mov
dec
add
adc
pop
jecxz
add
adc
xor
loope
push
xchg
dec
imul
ja
mov
pop
cmp
mov
and
bnd
lret
mov
aad
not
shl
aas
add
xchg
std
test
push
cmp
sbb
popa
push
add
pop
jo
daa
insl
push
xchg
insl
sbb
xor
xor
inc
jae
mov
fidivrl
or
jl
andb
mov
iret
dec
mov
cmp
xchg
xor
lods
inc
push
inc
stos
dec
pop
mov
push
mov
mov
loopne
movsb
and
mov
popa
xor
repnz
lock
mov
jg
pop
scas
outsl
enter
loope
push
pusha
inc
cmp
mov
push
mov
xor
xorl
xchg
outsb
inc
push
sbb
xor
mov
jle
jl
pop
add
iret
aam
in
lret
pop
movsb
dec
xchg
repz
rcl
mov
imul
push
mov
popa
jbe
adc
adc
jge
mov
add
and
enter
ret
push
shll
mov
mov
push
jno
mov
adc
out
stos
iret
and
mov
ds
cli
inc
mov
pushf
lea
sub
mov
jne
xchg
or
cmp
xor
stos
nop
add
sub
fidivs
mov
fidivl
inc
adc
ds
pusha
test
jmp
jb
daa
test
cmp
mov
lret
pop
push
push
mov
pop
cmp
mov
xor
push
sarl
pop
js
push
aam
daa
sub
xchg
mov
xlat
xor
scas
adc
jns
push
pop
fsubrl
mov
inc
cmp
notl
pop
mov
daa
mov
loop
test
xchg
mov
into
int3
or
inc
and
jge
adc
xlat
pop
pop
insb
in
ja
enter
lock
or
inc
push
adc
jle
mov
push
adcl
fwait
or
lea
adcl
jp
pop
sub
inc
inc
adc
mov
push
subl
sub
movsb
lea
sti
daa
inc
pop
xchg
sub
sub
and
inc
inc
pop
inc
mov
insb
shrl
ljmp
xchg
dec
fsubs
dec
push
aam
xchg
orl
shrb
in
dec
mov
xchg
jmp
test
pop
subl
loop
push
fadds
sbb
cmp
and
add
outsl
mov
leave
jle
xchg
sti
fst
int3
pop
fdivrl
jns
mov
pusha
subb
jne
sub
pop
sub
pop
xlat
mov
xchg
push
jg
xchg
add
sahf
lret
pop
mov
mov
lcall
dec
push
push
repnz
inc
push
push
mov
push
jl
fisttpll
ja
pop
hlt
sbb
dec
cmpsl
int3
jmp
ja
and
push
push
mov
mov
or
mov
mov
jge
and
xchg
cmp
xchg
lods
sbb
lea
xchg
mov
rolb
fists
push
aaa
add
pop
cmpps
adc
call
js
xchg
sbb
add
insb
add
add
add
imul
jno
imul
add
je
add
add
add
add
je
jb
imul
insb
add
jb
popa
add
arpl
push
add
add
add
add
outsl
jb
add
add
add
gs
gs
imul
add
add
popa
add
popa
add
add
outsb
add
ja
jb
add
outsb
add
add
jo
outsl
jns
add
popa
arpl
outsb
jae
add
je
add
add
add
jo
outsl
add
add
add
insl
add
outsb
add
add
add
add
je
imul
add
popa
