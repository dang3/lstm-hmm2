push
mov
push
call
push
sub
pushl
shl
xor
shl
sub
add
rol
mov
add
popl
lea
ror
pop
add
ret
push
call
push
push
call
pop
pop
push
push
call
addr16
push
addr16
push
pop
pop
push
push
jg
outsb
outsl
jl
bound
insb
push
fs
js
arpl
pop
insl
push
jne
jge
data16
pop
push
pop
jb
insb
jae
fs
jg
jo
bound
jb
push
jle
jle
je
fs
push
pusha
push
pop
push
pop
js
pop
arpl
push
jb
jp
jbe
push
js
imul
push
pop
jnp
fs
ja
push
fs
jns
pop
jl
jl
jp
outsb
popa
bound
insb
add
add
add
sbb
ljmp
push
push
push
push
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
add
mov
xor
push
not
lea
inc
rol
shr
sub
mov
sub
xchg
push
push
call
push
call
mov
push
push
push
call
mov
add
mov
sub
jne
push
push
call
pop
pop
push
push
push
push
call
pop
pop
pop
push
push
call
xor
push
add
sub
inc
lea
xor
pop
ret
push
push
push
push
call
mov
cmp
jne
push
push
call
pop
pop
push
add
add
xor
sub
sub
pop
mov
pop
mov
pop
add
push
push
push
push
call
push
mov
push
push
push
push
shr
rol
ror
pop
push
push
pop
mov
add
mov
add
add
push
sub
pop
add
push
push
push
call
add
push
call
jo
pusha
je
jp
jle
push
fs
jae
push
jae
push
pop
push
bound
js
jno
push
push
pop
imul
pop
jl
pop
jb
outsb
jge
pop
js
pop
insl
imul
push
jp
push
push
insl
jnp
ja
pop
je
ja
jae
bound
push
push
pop
pop
push
jg
pop
jae
arpl
gs
pop
pop
pop
pop
pop
push
outsb
jg
jge
jb
arpl
push
addr16
bound
push
je
gs
jbe
bound
imul
fs
jle
pop
outsl
jp
je
jne
js
push
push
push
push
jo
pusha
pop
pop
insb
je
insb
push
jo
pop
push
push
imul
jne
push
push
push
outsl
jne
jp
pop
jne
outsl
pop
jno
insl
jge
pop
push
jo
jl
popa
arpl
arpl
push
pop
jb
jle
pop
jne
insl
pop
jae
imul
pop
pop
bound
push
imul
jg
push
jo
popa
push
pop
jle
jp
jg
pop
imul
push
data16
insl
insl
jge
jge
push
jns
push
push
jno
jnp
pop
jnp
push
jns
pop
jnp
pop
jbe
push
outsb
outsb
jns
pop
jbe
imul
imul
jp
jge
js
push
pop
pusha
jp
jbe
pusha
push
pop
jl
jl
addr16
pop
jl
imul
jg
ja
jp
jo
jns
pop
pop
arpl
jae
je
push
pop
push
pop
push
gs
insl
pop
jbe
push
push
pop
pop
arpl
push
pop
pop
bound
push
push
insb
jnp
jne
pop
jb
push
push
js
bound
gs
popa
push
push
pop
jnp
push
push
arpl
push
pop
jl
addr16
jae
popa
push
jp
push
outsb
jnp
imul
imul
push
jl
insb
jp
insl
pop
push
push
pop
push
push
jl
jb
push
je
pop
jb
jno
pop
insl
push
insb
pop
popa
push
add
add
add
cwtl
sti
decl
xchg
mov
add
call
add
call
data16
pusha
js
jae
jae
fs
pop
pop
gs
push
imul
js
imul
jne
push
jge
insl
bound
addr16
push
pop
je
push
jge
jb
jne
ja
ja
pop
outsb
popa
pop
pop
push
push
pop
pop
jnp
jo
jp
imul
push
push
push
jno
push
jle
jle
jae
push
js
insb
je
imul
jl
push
pop
je
gs
je
jns
push
jle
pusha
push
pop
insl
imul
outsl
push
push
push
jbe
imul
pop
imul
imul
pop
push
ja
push
jge
pop
push
pop
jg
imul
imul
insb
push
push
pop
outsl
push
jp
push
pop
jbe
arpl
push
jno
imul
pop
jne
pop
push
jns
jp
pop
push
popa
jp
imul
jnp
push
push
push
push
jbe
push
jb
pop
jbe
jl
pop
pushw
pop
jp
push
jg
imul
push
jo
jnp
jge
jae
jp
insb
push
push
bound
jbe
outsl
push
jb
push
arpl
push
push
pop
pop
push
insl
push
push
jns
outsl
addr16
popa
push
jo
outsl
bound
gs
push
push
jns
outsb
js
popa
addr16
js
push
outsl
push
jg
bound
arpl
jae
popa
push
pop
insb
outsb
push
jg
jne
jg
jae
jl
push
imul
ja
jae
insl
outsb
gs
pop
js
jge
pop
pop
jae
push
push
outsl
jle
bound
push
jge
pop
data16
push
popa
pop
jl
jl
push
push
pop
jle
jle
push
outsl
jb
fs
gs
pop
insb
pop
push
push
jb
push
push
pop
popa
addr16
pop
insl
gs
push
jb
addr16
push
ja
js
push
push
jle
data16
push
push
addr16
add
rclb
or
add
call
add
call
pop
push
rol
rol
dec
not
dec
shr
sub
pop
mov
add
mov
add
add
push
ror
add
shl
add
rol
xor
xor
pop
add
push
push
call
add
mov
add
add
call
push
push
push
call
pop
pop
mov
pop
push
rol
lea
add
pop
leave
push
push
sub
dec
add
shl
not
not
mov
xor
pop
push
lea
rol
pop
push
push
shl
sub
not
pop
call
push
call
jmp
mov
push
push
dec
add
add
add
mov
sub
pop
push
push
call
push
call
push
sub
lea
rol
pop
push
push
shr
shr
lea
lea
shr
pop
call
push
ror
ror
rol
sub
shl
mov
add
xchg
push
call
push
push
push
not
xor
inc
mov
xor
pop
push
shr
shl
lea
xor
rol
mov
sub
xchg
push
push
push
call
push
call
mov
push
push
call
movl
movl
movl
push
push
push
dec
add
ror
rol
dec
shl
dec
mov
xor
pop
push
shl
shr
inc
pop
push
call
mov
push
sub
not
pop
call
mov
push
push
xor
inc
mov
xor
pop
push
rol
shl
ror
lea
add
pop
push
push
push
call
je
pop
insl
jl
je
pop
jo
pop
jo
imul
push
push
push
outsb
popa
imul
pop
popa
jns
fs
addr16
push
jne
pop
pop
push
jno
push
imul
push
pop
pop
arpl
imul
jnp
jbe
je
outsl
pop
jle
pop
popa
insl
jns
imul
pop
push
outsb
je
pop
jge
pop
pop
jle
push
bound
push
insl
bound
jne
data16
jle
jge
push
jo
pop
jge
js
outsl
jnp
push
data16
jb
push
jns
pop
pop
pop
pop
pop
pop
jns
push
ja
push
pop
jp
js
push
push
pop
pop
jo
push
addr16
jno
jbe
push
pop
jl
arpl
pop
jnp
imul
imul
jp
pop
push
imul
add
add
add
mov
outsb
sldt
push
push
sub
pop
call
push
mov
add
xchg
push
call
push
push
push
push
push
call
call
push
push
lea
inc
dec
mov
xor
pop
push
call
push
push
push
push
call
push
push
push
call
call
push
not
add
dec
mov
sub
xchg
push
call
jbe
push
push
pop
outsl
jge
pop
pusha
pusha
pusha
jno
push
jo
popa
bound
push
imul
push
push
push
pop
jns
push
js
pop
gs
arpl
jne
jl
jb
pop
jb
bound
outsl
pop
insb
push
jae
push
imul
push
pusha
fs
insl
bound
imul
push
pop
jb
pusha
arpl
insl
push
pop
pop
jg
jbe
pop
popa
push
pop
data16
jb
imul
jnp
jne
jle
jns
je
push
js
jbe
jno
push
jae
jbe
pop
gs
js
pop
gs
jge
jg
imul
push
outsb
pop
pop
pop
pop
jb
jns
jg
jo
pop
popa
jp
imul
pusha
pop
push
imul
jno
jl
push
jnp
push
pop
pop
jge
pop
jns
jnp
push
pop
jl
push
pop
pop
pop
push
imul
arpl
push
jb
pop
outsl
fs
jg
insb
insl
jp
pop
jg
gs
push
jnp
popa
gs
push
push
outsl
pop
pusha
outsb
push
push
outsb
outsl
pop
data16
jae
jg
insl
bound
pop
pop
push
popa
push
push
push
push
call
push
call
pop
push
rol
rol
ror
xor
shr
shr
pop
pop
pop
leave
push
push
push
push
call
xor
inc
ret
push
push
add
inc
inc
mov
sub
pop
push
dec
sub
lea
xor
pop
push
call
push
call
push
add
dec
pop
cmp
jbe
push
push
push
push
call
add
pop
pop
pop
call
jne
jp
push
push
outsl
jnp
push
jns
bound
outsb
push
insb
push
jo
jo
pop
pop
push
pop
imul
jg
pop
pop
push
push
push
push
jo
je
imul
pusha
pusha
addr16
push
pop
pop
pop
data16
insl
jnp
pop
push
pop
jns
jnp
bound
ja
data16
push
jnp
jae
pop
push
pop
outsl
outsb
pusha
push
jg
jbe
pop
push
jns
push
jae
gs
pop
outsb
push
push
imul
jl
je
bound
push
pusha
push
js
push
jb
jae
pop
push
jo
jle
outsb
outsb
outsb
pop
pop
js
pop
outsl
imul
pop
pusha
bound
jbe
pusha
outsl
ja
outsl
pop
pop
jb
jp
pop
pusha
outsl
push
pop
push
pop
popa
jl
push
jae
jne
pusha
pop
jns
push
jg
jb
pusha
outsl
gs
pop
pop
jp
jno
jae
pop
pusha
popa
fs
jo
pop
jp
jne
fs
jle
insb
pusha
fs
arpl
pusha
jo
push
push
push
fs
ja
jne
push
push
push
jle
push
push
jb
push
popa
push
js
pop
insl
ja
push
jg
jle
bound
pop
ja
jge
jns
pop
push
outsb
insl
push
jbe
addr16
jo
push
pusha
js
pop
je
push
pop
outsl
jp
pop
push
jle
jl
push
jo
jns
jp
push
jno
jo
jb
push
gs
pop
jno
push
push
jo
push
push
popa
push
arpl
pop
push
ja
push
addr16
jnp
imul
pop
addr16
outsl
jl
bound
pop
pop
push
imul
imul
jg
pop
arpl
jp
jg
addr16
push
push
imul
push
call
pop
pop
push
not
ror
ror
shr
pop
xor
push
push
call
ret
pop
push
push
push
lea
not
not
sub
dec
rol
ror
mov
sub
pop
push
push
push
call
push
call
push
xor
push
ror
add
pop
dec
push
push
push
push
call
mov
inc
inc
push
push
push
call
cmp
jbe
jmp
cmpw
jne
pop
push
push
push
push
call
cmp
jbe
ret
push
push
push
push
push
call
call
push
xor
add
xor
shr
pop
add
jmp
mov
push
add
sub
add
rol
mov
xor
xchg
push
dec
inc
pop
push
call
xor
push
xor
shr
lea
inc
sub
pop
sub
push
push
shr
dec
add
shl
add
pop
push
push
jmp
or
je
xor
push
push
call
pop
push
ror
lea
dec
rol
xor
shl
rol
pop
pushl
pop
mov
mov
mov
push
xor
mov
sub
xchg
push
ror
inc
xor
rol
pop
push
push
rol
add
dec
ror
pop
call
cmpl
jne
add
push
push
lea
sub
xor
sub
add
dec
mov
sub
pop
push
push
push
call
call
push
push
ror
lea
sub
mov
xor
xchg
push
push
call
push
push
xor
pop
push
call
mov
push
push
push
push
push
call
push
push
ror
add
add
pop
mov
add
add
mov
push
push
push
push
call
xor
push
push
push
call
add
push
add
rol
sub
pop
add
push
push
call
mov
xor
push
push
push
push
call
rep
push
lea
dec
sub
pop
pop
mov
add
add
mov
xor
push
push
push
call
mov
push
push
push
push
push
call
xor
push
push
call
add
push
push
call
mov
push
push
push
push
push
call
xor
push
push
call
arpl
pop
jne
pop
je
jp
push
jae
pop
jo
jl
jns
push
pop
push
push
pop
fs
push
fs
insl
pop
insl
jge
push
jl
jns
pop
arpl
push
pop
push
jnp
jns
outsb
push
jl
popa
jl
outsb
pop
insl
bound
jns
jbe
outsl
jae
arpl
imul
jne
bound
arpl
bound
jno
js
imul
push
jns
push
push
pop
push
jo
jle
jp
pop
jge
pop
gs
data16
jne
data16
fs
insb
push
pop
pop
pusha
imul
pop
bound
pop
push
push
jb
push
jg
jp
jno
push
pop
imul
jb
pop
push
pop
push
addr16
jb
jnp
bound
pop
push
push
js
push
pop
push
pop
jae
jg
push
pop
jl
pushw
data16
push
je
ja
imul
jl
jle
push
fs
jle
ja
push
jno
push
imul
insl
bound
push
popa
pop
push
push
push
data16
jnp
pop
pop
pop
popa
push
popa
jg
insl
pop
data16
pop
jnp
outsb
pop
jle
push
jae
jb
jge
popa
pop
push
push
push
push
je
jb
pop
pop
push
pop
pop
push
push
push
fs
outsl
pop
push
jae
jne
arpl
insb
push
ja
jg
js
bound
imul
jle
pop
push
pop
pop
insl
bound
popa
pop
outsl
outsb
je
jnp
outsb
insb
push
insb
jno
push
call
add
push
push
push
push
call
add
add
mov
push
push
lea
inc
mov
xor
pop
push
sub
xor
inc
add
pop
push
push
not
ror
sub
shl
xor
xor
pop
call
push
push
add
mov
xor
xchg
push
inc
shl
not
ror
not
lea
pop
push
push
push
call
push
call
push
inc
shl
shr
dec
pop
mov
push
push
push
inc
add
pop
mov
add
add
push
shr
sub
sub
rol
lea
ror
pop
mov
push
push
push
call
xor
push
push
call
add
push
ror
xor
rol
rol
lea
add
ror
pop
add
mov
push
call
arpl
jl
jb
bound
imul
jl
outsb
je
outsb
pop
push
data16
pop
push
push
jge
js
jno
pop
jns
pop
jae
jnp
ja
push
jns
insb
push
jle
jne
popa
jo
jae
push
imul
fs
pusha
jno
jge
push
pop
pop
bound
pop
outsl
pop
jno
push
outsl
pop
outsb
je
push
insb
pop
ja
push
popa
insb
push
imul
push
fs
outsb
pusha
jne
push
pop
jnp
insl
pop
jl
push
jg
push
push
pop
pop
push
arpl
push
push
outsl
jns
jnp
push
jl
jne
insl
outsl
pop
bound
je
outsb
jp
jl
jle
jp
pop
jnp
addr16
outsb
push
pop
imul
push
jb
pop
jnp
fs
jno
imul
push
call
xor
push
push
push
push
call
add
rep
push
not
pop
mov
push
push
push
push
push
call
xor
push
push
push
push
call
add
or
je
mov
xor
push
push
push
call
mov
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
add
add
rep
push
add
lea
sub
ror
sub
pop
mov
xor
or
je
mov
add
push
push
call
rep
pop
push
sub
shl
sub
add
mov
xor
xchg
push
sub
shr
add
pop
pop
push
push
call
mov
jmp
push
mov
push
push
call
add
push
push
push
call
push
push
push
push
mov
push
push
push
push
call
mov
add
mov
add
mov
push
push
push
push
call
add
xor
mov
xor
push
rol
lea
ror
pop
rol
xor
inc
cmpb
jne
push
push
call
cmp
je
add
push
sub
rol
pop
cmpl
jne
xor
pop
pop
pop
call
jae
push
pop
pop
push
js
insb
jno
jo
jge
pop
push
jbe
pop
insl
pop
pop
push
push
imul
pop
pop
push
jae
jno
ja
jb
arpl
popa
pop
push
arpl
imul
pop
pop
js
push
jnp
push
push
jp
push
pop
jl
jbe
bound
jb
data16
push
je
je
pusha
ja
push
push
pop
pop
jp
ja
pop
push
outsl
pop
pop
push
addr16
jae
js
jl
fs
outsl
push
outsl
jbe
jg
push
push
push
pop
jp
push
outsw
pop
jno
ja
jle
arpl
bound
insl
push
pop
jne
addr16
push
pop
bound
pop
pusha
je
push
pop
arpl
jno
push
push
imul
je
jb
push
jno
arpl
addr16
jnp
push
insw
jg
push
push
popa
pop
fs
pop
jne
push
js
jp
jbe
je
popa
pop
push
jge
jnp
jg
pop
bound
data16
pop
jae
jbe
bound
popa
push
insl
jnp
jae
je
push
ja
jo
arpl
push
jge
pop
jb
ja
jb
jb
jl
pop
imul
je
pop
jb
push
jae
addr16
push
je
jge
pop
js
jge
jns
jns
jnp
pop
jne
push
jge
pop
push
imul
pop
jl
pop
pop
pushw
pop
push
ja
jle
jp
jns
jno
push
jae
push
bound
jo
jge
jge
jne
jne
pop
push
push
jp
jp
imul
pop
pop
jg
push
pop
fs
jno
pop
js
arpl
bound
imul
push
push
je
addr16
jo
push
jl
pusha
pop
jl
je
pusha
popa
jne
ja
push
push
call
pop
pop
leave
ret
push
dec
add
rol
shl
pop
mov
add
mov
push
sub
dec
pop
push
call
xor
pop
pop
push
dec
shl
xor
pop
pop
pop
pop
leave
ret
push
add
lea
sub
shl
add
pop
push
mov
push
push
push
call
cmpl
jne
mov
push
inc
shr
sub
rol
sub
pop
jmp
mov
push
push
push
push
call
and
pushl
pop
sub
jmp
push
push
call
sub
pushl
push
push
call
pop
sub
push
push
push
push
call
cmp
jne
mov
push
shr
rol
pop
add
push
add
pop
movzwl
push
push
push
call
sub
cmp
jne
leave
ret
push
dec
rol
add
add
ror
rol
add
pop
push
mov
add
push
push
lea
ror
xor
pop
push
push
push
mov
push
push
lea
shr
add
dec
ror
pop
pop
push
push
push
push
call
mov
push
push
push
push
call
add
mov
add
push
push
push
push
call
pushl
push
add
pop
popl
push
push
call
mov
add
xor
push
sub
sub
xor
sub
ror
pop
lea
mov
add
xor
rol
push
push
push
push
call
nop
push
rol
lea
not
pop
nop
xor
nop
push
push
push
call
nop
push
push
call
jge
fs
pop
addr16
push
push
pop
push
pop
imul
push
insl
push
pusha
je
jge
pop
jbe
insb
jb
jl
pop
popa
jno
push
popa
jl
push
push
push
push
jb
jge
pop
jg
push
outsb
push
jo
imul
outsl
pop
jo
insl
push
outsb
gs
push
jle
jg
arpl
jnp
gs
data16
push
outsl
pop
pop
ja
pop
jb
bound
push
imul
pop
imul
add
ret
in
incl
mov
xchg
add
call
nop
push
push
push
push
call
nop
cmpb
jne
nop
push
push
push
call
nop
cmp
je
push
push
push
call
nop
nop
push
pop
inc
push
add
shl
inc
shr
lea
pop
nop
call
jae
push
outsb
je
jo
gs
pop
push
push
fs
push
bound
push
pusha
push
js
jno
pop
jae
bound
fs
jp
jbe
push
js
push
jnp
pop
outsb
je
js
outsl
jne
jnp
pop
outsb
jo
push
push
pop
addr16
jg
insb
jp
jg
pop
push
pusha
outsb
jbe
push
pop
pop
push
jl
jnp
bound
pop
jge
gs
outsb
pop
push
push
jne
jg
jle
push
jb
ja
pop
fs
push
js
jge
pop
pop
imul
pop
je
pop
push
pop
fs
jge
jp
insb
insl
jp
outsl
jne
fs
jp
jl
pop
push
pop
push
jbe
jb
push
pop
js
pop
push
gs
push
jge
pop
gs
insb
jl
bound
push
push
pop
push
pop
push
push
popa
pusha
js
push
pop
arpl
jbe
jle
bound
jo
insl
pop
push
pop
push
imul
pop
jnp
push
outsl
jg
jg
fs
addr16
push
popa
push
pop
jo
push
push
jne
pop
pop
jp
push
arpl
jns
outsl
popa
jns
push
push
push
push
jl
push
insb
outsb
addr16
jne
push
jo
push
jo
pop
pop
fs
data16
popa
addr16
imul
push
pusha
jle
addr16
jge
outsb
pop
insl
pop
pop
jo
pop
fs
jge
insb
addr16
addr16
jbe
jae
push
push
insl
gs
jb
jo
pusha
ja
js
pop
addr16
pop
jle
fs
pop
jo
insl
pop
fs
outsb
pusha
push
jb
pusha
jp
popa
push
jbe
popa
jb
push
pop
pop
push
pop
jl
jno
insl
jno
jo
jp
insb
pop
ja
push
pop
jne
push
gs
push
pop
insl
jns
pop
popa
jne
push
jge
arpl
js
jb
push
imul
imul
data16
jl
pop
push
arpl
insb
bound
jo
jnp
outsl
jbe
push
imul
insl
arpl
push
jo
add
add
add
aas
jecxz
call
ret
cmpl
call
push
push
call
mov
add
push
add
sub
pop
movzwl
mov
add
push
not
add
shl
pop
mov
push
push
push
call
add
pop
pop
pop
pop
push
add
add
add
not
sub
xor
rol
pop
leave
push
push
call
ret
inc
in
sbb
aaa
sbb
aaa
sbb
aaa
sbb
aaa
sbb
js
sbb
jns
sbb
aaa
sbb
aaa
sbb
pop
or
mov
sub
push
inc
dec
std
lret
xchg
pop
and
push
pusha
in
push
enter
mov
fcmovnbe
daa
imul
sti
push
sbb
stos
lcall
and
aas
cld
insb
xor
pop
imul
cmc
in
lock
scas
push
mov
mov
inc
mov
fmuls
lea
into
mov
std
loop
hlt
sbb
sub
test
mov
jp
mov
adc
call
mov
pusha
xchg
outsb
sbb
and
pusha
push
and
xlat
dec
sbb
mov
in
jmp
push
cli
aam
xor
sahf
cld
fisubs
stos
mov
movsl
dec
xchg
inc
jp
aaa
lea
roll
mov
out
mov
ja
inc
dec
mov
repz
sbb
aas
shrb
adc
rorl
in
cmp
or
in
and
out
lcall
cmpl
jle
sbb
repnz
lret
sub
scas
ficoml
fimuls
mov
cmp
pop
and
push
add
scas
pop
and
add
aam
imul
stos
jecxz
fwait
mov
cmp
jmp
dec
jne
mov
sub
sub
adc
inc
dec
cmp
dec
jno
add
aaa
in
iret
flds
out
ss
add
and
push
push
mov
jmp
add
and
pop
mov
mov
daa
lcall
cmp
cmp
mov
xor
xor
es
dec
xlat
aas
and
pop
imul
push
sub
xchg
or
and
into
jecxz
mov
cmp
sbb
test
repz
jmp
add
mov
jo
or
push
sahf
mov
sete
aam
pop
xabort
int3
leave
aad
pop
push
js
sub
mov
cmp
sarb
sub
es
jbe
sub
adc
mov
push
lock
push
dec
loop
arpl
pop
fbstp
adc
ror
mov
dec
gs
mov
std
fildll
iret
jl
in
mov
inc
add
daa
sbb
mov
xchg
xor
aas
inc
sbb
ds
inc
jge
adc
mov
ret
lds
sub
test
dec
out
inc
jbe
cld
out
jecxz
inc
popf
mov
mov
fldl2e
xchg
adc
push
out
out
movsl
pop
cmpxchg
loope
movsb
sti
xchg
shlb
dec
idivl
xor
popf
mov
ja
xchg
loop
pop
jmp
add
xchg
xor
in
test
cmovle
mov
push
shlb
xchg
adc
fsub
inc
adc
jae
lcall
pop
pop
incl
jb
addr16
push
ss
dec
or
loope
push
xrelease
adcb
imul
and
mov
lcall
loopnew
jge
cmp
push
sub
jnp
cmpsb
fbld
adc
test
nop
icebp
in
daa
push
ficoml
sub
mov
fs
imul
mov
and
inc
add
test
inc
jbe
fistps
iret
cmpsl
rorb
movsb
adc
mov
xchg
out
sub
ljmp
call
iret
fwait
mov
outsb
xor
sahf
mov
loope
push
or
cmp
lock
mov
int3
leave
sub
mov
mov
pop
jo
decb
stos
les
stos
and
lcall
mov
jne
dec
clc
fwait
cli
sbb
sbbl
les
insb
stc
xchg
adc
xchg
aam
ret
cmpsb
nop
mov
fnstenv
cwtl
lahf
push
ret
loope
xchg
xchg
pop
mov
rorl
in
pop
divb
jae
imul
inc
cltd
popf
pop
adc
rcrb
xchg
mov
jl
icebp
insb
leave
push
xchg
sti
or
outsl
mov
cmp
cmp
stos
stos
cmp
xor
js
arpl
adc
add
nop
sub
pushf
in
cmp
out
daa
pop
adc
cltd
or
dec
imul
imul
sub
in
test
dec
xor
call
ljmp
sbb
sbb
xchg
xchg
push
repz
lahf
mov
popa
dec
fs
or
push
mov
fists
xlat
ja
ljmp
aas
loopne
mov
push
mov
dec
pushf
pop
xor
xchg
rcll
fsubrs
dec
fcoms
ss
daa
jl
into
push
sarl
shl
add
insl
js
inc
jns
ss
in
pop
xchg
rorl
sub
mov
mov
stos
lds
std
shrl
out
jb
fimuls
addw
scas
fldcw
fcomp
and
mov
adc
les
pop
jle
and
add
ljmp
mov
jmp
je
or
push
mov
jne
leave
cmpsl
scas
sub
fdivrs
and
negl
sbb
jl
push
ja
imul
cmpsl
pushf
fisttps
pushf
jno
dec
add
mov
addr16
cltd
lds
iret
js
mov
xchg
inc
sbb
inc
and
mov
ret
loope
add
push
repz
sbb
test
mov
mov
sahf
mov
loope
mov
mov
mov
xchg
int
push
sbb
pop
xor
mov
mov
xor
push
xor
test
je
pop
jne
insl
je
pop
movsl
popa
xchg
sbb
dec
jecxz
xchg
lcall
add
xor
lcall
cmp
inc
and
aas
push
sub
mov
cmp
pop
lcall
lcall
add
inc
push
push
int3
push
mov
int
sub
or
popf
or
mov
jns
jnp
lock
hlt
outsl
dec
xchg
pop
xor
repz
sub
mov
ljmp
inc
xor
dec
fs
jns
pushw
ljmp
push
addb
insl
and
sub
cmp
call
and
pop
gs
xchg
loop
out
push
jno
in
push
icebp
xor
lcall
idivb
jno
add
jmp
mov
cmpsl
je
mov
sbb
and
outsl
pop
jp
or
aad
xor
jb
outsl
xchg
iret
jae
aad
pcmpgtb
sbb
sbb
mov
shlb
mov
dec
test
or
push
mov
mov
jne
pushf
cmp
scas
cmp
mov
inc
jmp
aam
ss
in
cmpsb
jle
jnp
mov
push
in
cmpsl
mov
stc
shlb
pop
rcll
fiaddl
push
mov
jecxz
popf
lcall
and
pop
jnp
std
idiv
popa
inc
adc
mov
jmp
gs
insb
repz
movsl
jne
add
js
mov
xor
mov
stos
xchg
adc
dec
add
fldt
sbb
mov
imul
or
xchg
mov
jle
pop
adc
or
or
pop
push
and
call
int
xlat
push
pop
pop
add
iret
sub
or
push
imul
cmpl
push
add
pop
rclb
lods
shrb
movsl
jge
jge
enter
push
sti
sub
es
fiadds
mov
les
xor
inc
mov
xchg
cmpsl
push
std
fisubl
fidivs
add
fcomp
push
jne
ret
push
lret
loop
or
lcall
fs
adc
jmp
xchg
jmp
stc
push
addr16
or
loop
in
cmp
mov
fstpl
fimuls
lret
aaa
in
stos
xlat
lcall
sbb
mov
or
lds
scas
mov
add
xchg
pop
jae
dec
inc
dec
call
cld
ret
mov
cmp
lret
leave
addr16
mov
and
push
shrb
hlt
or
scas
ss
cmc
jp
lock
inc
mov
sub
movsl
cmp
xor
clc
test
cmp
xchg
mov
cmp
add
popa
or
pop
mov
or
lret
hlt
addb
rcr
push
scas
sbb
inc
xor
aad
sub
stos
dec
add
cmp
sbb
insl
test
aaa
pop
into
test
test
and
lds
inc
mov
rcll
mov
inc
xchg
jle
shlb
mov
stc
pop
ljmp
out
sub
add
sbb
rcr
test
repz
stos
jmp
mov
xchg
fbld
out
call
xor
jg
adc
pop
insl
inc
sti
sahf
mov
xchg
test
xlat
xchg
in
xor
inc
in
fwait
fwait
and
ljmp
je
loop
lods
icebp
jb
ret
xchg
sub
xchg
aad
andb
mov
out
add
mov
add
stos
sbb
push
jb
or
mov
ja
and
inc
mov
out
int3
jbe
mov
outsl
jns
push
dec
cmp
jb
mov
in
in
int3
pop
cli
mov
fsubrl
jne
inc
les
das
movsb
and
jne
pop
mov
enter
dec
clc
pushf
ljmp
cmp
outsb
or
push
cmc
out
sub
stos
arpl
inc
lret
dec
pop
dec
shl
cmp
mov
jo
je
adc
adc
popa
test
mov
into
xor
or
lock
jbe
push
into
dec
mov
out
loopne
sub
test
mov
cmpsb
lret
jne
push
lret
jle
jnp
cmpsb
shlb
push
mov
dec
dec
outsb
ss
add
mov
add
or
push
pop
int
test
orl
fildll
sub
cmpsb
jns
mov
pop
add
outsl
jo
pop
jl
add
shll
stc
leave
cmp
lds
les
adcb
loopne
push
pop
fisttps
rcr
mov
sbb
mov
push
shlb
dec
or
pop
test
out
js
lock
mov
out
cmp
jg
xchg
push
sti
fiaddl
xchg
rcl
into
ds
mov
cmp
and
clc
jecxz
xchg
push
xchg
loop
push
mov
cmp
xor
sti
pop
xchg
ret
and
mov
adc
xor
call
and
js
xor
add
mov
jnp
sbb
jb
adc
mov
xchg
xchg
dec
jo
add
cmp
cmp
adc
nop
lcall
jp
push
cmp
mov
clc
and
mov
sbb
jl
dec
mov
xor
adc
ja
lret
mov
lock
insl
cli
loopne
ja
cmpsl
or
mov
mov
dec
inc
push
incb
aad
add
lret
adc
sbb
fs
xlat
ret
mov
mov
and
ljmp
add
mov
lods
pop
and
mov
aas
fcoml
lcall
jns
jg
jbe
scas
or
xorl
sub
sbb
stos
xchg
decb
mov
dec
mov
daa
xchg
ja
test
lret
push
mov
xor
jns
dec
test
push
xchg
aaa
fimuls
mov
addr16
scas
inc
and
repz
dec
out
out
leave
out
daa
cli
cld
pushf
cltd
and
insb
push
mov
mov
scas
les
lahf
cld
pushf
inc
pushf
int
stc
inc
lahf
aas
dec
ret
add
ficomps
mov
and
add
inc
mov
insb
dec
mov
popa
test
jg
mov
movl
push
scas
sbb
pushf
jp
jns
dec
and
mov
testb
movlps
sub
dec
lds
daa
fistpll
cmp
je
push
pop
out
ja
test
int
jae
sub
mul
aam
lahf
sbb
cmc
dec
and
adc
xor
movsl
push
pop
daa
adc
test
jg
and
jns
cli
repz
lea
mov
inc
out
mov
fidivrs
jns
pop
clc
in
mov
ret
fdivrl
pop
es
and
mov
xchg
ds
jg
je
add
clc
in
out
orl
stos
test
xchg
data16
mov
or
jp
adc
inc
xor
cli
jecxz
mov
insb
insl
adc
mov
bound
xchg
adc
or
pop
jae
jns
jg
outsl
push
jecxz
sub
pop
cmp
pop
inc
fincstp
cmp
mov
pop
repnz
ret
sub
adc
pop
movsb
test
in
and
insb
mov
aas
cmp
pop
fcom
mov
and
and
mov
cmpsb
push
sbb
add
sbb
das
ja
add
fidivrl
push
jmp
ljmp
mov
lahf
push
in
das
imulb
cltd
mov
mov
es
out
addr16
mov
insl
cs
movsb
mov
and
push
lock
testb
shlb
fcomps
inc
push
repnz
add
pop
adc
lock
imul
movsl
xor
stos
sub
and
inc
test
fnsave
nopl
das
ja
and
jno
xor
cmp
stos
mov
lds
sahf
inc
inc
push
lds
inc
dec
pop
adc
das
jle
repz
ror
jb
push
mov
call
inc
mov
jb
xchg
pushf
arpl
push
into
ret
and
sub
fnstcw
int
fs
cmp
or
jns
call
cmp
pop
stos
cmpsl
mov
jg
idiv
je
mov
jecxz
out
ss
jne
cmp
xor
cmp
inc
nop
lcall
dec
jmp
adc
dec
or
ret
outsb
xchg
decb
cmc
add
mov
outsl
inc
jo
push
xchg
and
mov
mov
pop
inc
push
lret
push
push
jle
add
inc
cmp
jp
mov
movsl
mov
add
or
out
lods
repnz
or
rol
mov
sub
jns
pop
add
neg
mov
cld
and
xchg
popa
lock
movsb
iret
mov
dec
and
popa
inc
add
movsl
and
xor
mov
inc
gs
pop
adc
pop
in
sub
stos
sti
xor
les
roll
inc
repz
mov
std
adc
cmp
dec
call
and
mov
mov
mov
ficoms
shl
daa
push
jl
inc
mov
cmp
arpl
bound
adc
add
lret
sbbb
bound
pop
jns
add
pop
in
dec
outsl
jae
add
cltd
lret
mov
adc
mov
daa
mov
sub
sbb
into
shll
incl
cmp
add
hlt
lret
shl
insb
popf
xor
xlat
dec
mov
arpl
daa
mov
out
xchg
outsb
aam
or
mov
ljmp
stc
aad
and
in
inc
loopne
push
mov
push
inc
mov
xchg
pop
cmp
jmp
push
mov
out
ds
out
cmp
sub
xor
pop
add
fidivl
mov
push
xor
dec
aaa
into
inc
loop
cmpsl
gs
push
mov
cs
int3
adc
lods
xchg
dec
cmp
lea
outsb
data16
ljmp
popa
sbb
mov
and
psubb
push
mov
mov
pop
fwait
pusha
xchg
sbb
pop
fdivrl
mov
xchg
out
mov
xchg
xchg
adc
push
out
in
cmpsl
insl
push
push
inc
and
cmp
outsl
fisubs
xchg
es
mov
icebp
lds
dec
outsb
filds
imul
mov
scas
out
push
mov
nop
adc
mov
dec
or
cltd
in
cmp
lcall
neg
jno
mov
push
fwait
mov
in
mov
loopne
shr
xor
pop
leave
fcmovnu
mov
sar
lret
notl
inc
aam
inc
add
or
adc
pop
test
inc
xchg
into
add
and
in
out
and
sub
fdivs
pop
mov
adcl
loope
sub
mov
add
loop
push
mov
andl
out
inc
aam
pushf
xchg
mov
decl
lcall
and
inc
pushaw
inc
push
stos
movsb
int
lods
inc
cmpsl
or
shrl
ficoms
xor
into
fiaddl
lcall
adc
and
mov
fcmovu
repnz
repz
or
in
pop
pop
repz
mov
or
adc
aad
cmpsl
addb
sub
push
movl
add
add
pop
sub
scas
dec
loope
add
add
loop
cmpsl
dec
or
insl
dec
and
enter
mov
fldenv
lds
out
inc
bound
pushf
sti
paddsb
lcall
inc
pop
xor
cs
inc
xchg
cwtl
push
mov
jp
mov
in
xchg
mov
clc
test
xchg
pop
test
xorl
mov
and
stos
fcoms
lahf
outsl
repnz
icebp
divb
pop
inc
out
mov
jmp
loop
pop
mov
mov
imul
ss
push
adc
in
decl
xor
mov
fiadds
sbb
lahf
mov
fdivrs
cmp
loope
sarb
je
les
rolb
loop
push
jns
cmove
pop
or
pop
push
jecxz
shlb
jne
push
dec
adc
fimull
shr
jl
jg
cltd
inc
imul
sbb
pop
sbb
push
xchg
pop
push
hlt
ret
cmp
add
push
xor
jae
mov
cmc
push
inc
cmpl
scas
scas
insb
ja
rep
mov
push
mov
cmpsb
adc
mov
repz
rol
test
sbb
xchg
jle
js
jl
and
sub
stos
hlt
ljmp
scas
pop
or
sbb
pop
or
xchg
rclb
mov
xor
cld
lock
push
xlat
mov
mov
rorb
jle
cltd
lret
roll
sahf
jl
lock
adc
rol
data16
cmp
or
addb
mov
loope
mov
push
js
and
or
mov
jnp
and
addl
pop
iret
aad
mov
test
push
repz
xchg
cwtl
sub
jecxz
mov
xchg
add
sarb
ret
sub
int3
pushf
and
mov
imul
jbe
shlb
or
leave
jg
pop
inc
cs
pushf
dec
movsb
push
lds
loope
push
fimull
cli
fdivr
adc
mov
adcb
ret
push
xor
adc
mov
movsb
sbb
xchg
scas
jle
aas
lock
jbe
and
inc
dec
push
mov
push
mov
cltd
test
subb
iret
nop
lds
pop
call
xchg
out
sti
mov
jle
hlt
nop
adc
sub
mov
xchg
jg
mov
jg
int
insl
out
sbb
mov
loop
sub
icebp
outsb
sbb
sub
push
jmp
sbb
pop
add
lds
sbb
ljmp
gs
dec
test
fistps
aaa
out
xor
repnz
add
popa
dec
daa
dec
into
jecxz
mov
push
fst
nop
mov
leave
cmpb
jge
push
push
xchg
dec
xchg
inc
js
lods
js
and
and
jmp
adc
call
addl
nop
cs
popf
push
mov
pop
outsb
mov
lea
insl
arpl
add
hlt
and
sbb
insl
push
mov
and
pop
enter
movsl
xchg
or
hlt
sub
pusha
dec
pop
fs
mov
in
inc
push
mov
mov
sub
add
mov
xchg
inc
aam
sbb
inc
idivl
mov
xor
jmp
movsl
icebp
imul
push
std
mov
ficompl
loope
pop
faddl
and
in
add
adc
jb
aaa
pop
sbb
popa
jne
mov
out
pop
cwtl
add
push
and
mov
mov
aaa
fs
daa
add
aaa
sub
frstor
repnz
mov
stos
cmp
xchg
and
xor
or
fldenv
shrb
aam
inc
aaa
cmp
aas
xchg
xchg
nop
fs
mov
daa
sub
mov
icebp
pushf
sbb
sahf
lea
xchg
mov
mov
fsts
mov
dec
imul
jp
pop
jae
shll
jne
dec
mov
sti
sahf
push
inc
xchg
mov
xchg
clc
xchg
lods
push
subb
loope
lods
jge
repz
ja
pop
and
loop
add
pushf
pop
mov
ss
push
std
sahf
dec
push
cmpsb
rcrl
pop
test
adc
int
fimuls
push
outsl
pop
and
jecxz
mov
and
enter
and
shrb
xchg
or
fistpll
leave
jns
addr16
popl
hlt
add
lock
pop
sub
xchg
xchg
lcall
loopne
fidivrs
movl
out
fnstenv
and
scas
in
fidivs
es
push
jne
and
mov
mov
dec
inc
test
shlb
xchg
or
inc
xchg
into
jnp
out
adc
lret
outsb
aam
fadds
mov
fsub
pop
lods
into
adc
jecxz
std
sub
mov
push
push
pop
int
hlt
dec
dec
in
push
dec
sbb
gs
out
xchg
mov
push
das
out
lahf
gs
nop
add
lds
insl
scas
nop
adc
mov
mov
mov
push
sar
cmp
in
inc
cli
inc
imul
rcr
jns
adc
lea
push
sub
jge
mov
insl
push
add
insb
test
cmp
dec
sbb
ret
adc
dec
cmpsb
inc
sahf
inc
icebp
and
idivb
jb
dec
sti
jg
daa
imul
mov
cltd
rcrl
lods
out
mov
and
addb
sbbl
mov
sbb
add
sbb
test
jns
mov
dec
and
sub
or
fadds
and
out
aam
andl
scas
sub
sub
fmulp
add
repz
negb
dec
data16
dec
xlat
test
je
scas
lds
cs
loopne
xchg
adc
rcr
bound
push
cltd
and
push
and
add
ret
cmp
sbb
sbb
or
mov
lahf
pop
out
rorl
xchg
xor
jmp
int
aaa
and
leave
push
test
add
aam
lea
xor
sbb
popf
fcomps
cmp
in
and
out
mov
adcl
test
or
adcb
call
jl
es
ds
lea
push
data16
fiaddl
add
lock
mov
adc
loopne
cltd
aaa
scas
xchg
mov
mul
nop
sub
push
out
ljmp
inc
mov
sub
xchg
testb
xlat
mov
scas
jb
dec
loopne
xor
jmp
out
or
ficoml
and
mov
cmpsl
pop
jge
test
sbbb
pushf
outsb
and
push
jge
mov
sbb
mov
inc
test
jg
or
outsl
xchg
cli
sbb
stos
inc
push
nop
xchg
xor
test
dec
insb
sub
mov
xor
fcmovne
jmp
push
pop
std
scas
inc
mov
je
in
mov
sub
inc
jecxz
cmp
inc
adc
mov
jbe
jmp
pop
sbb
lods
call
cltd
pop
push
xorb
mov
data16
pop
mov
add
add
das
push
push
cmp
adc
add
cmpxchg
ljmp
les
sub
xchg
sbb
jle
cmp
test
mov
jle
movb
ds
mov
xchg
nop
sub
jp
movsl
push
jmp
mov
lds
and
addl
mov
cmc
cwtl
cmp
xor
stos
jne
fnsave
mov
repz
xchg
imul
cmp
rcrb
xchg
mov
rol
nop
dec
xchg
mov
enter
or
mov
data16
adc
pop
pop
addr16
sbb
in
lds
mov
test
fistpl
pop
mov
xor
pop
add
mov
hlt
cmp
aam
add
movsb
xor
cmp
and
fwait
cmpsb
aaa
inc
jmp
mov
add
orl
pop
js,pt
leave
adc
mov
mov
shll
and
cltd
xchg
mov
xorl
imul
jo
sub
xor
shl
roll
push
fisttpl
or
sbb
sbb
ret
gs
cltd
add
sbb
cmp
xor
push
int3
loop
dec
out
xchg
int
xor
push
rep
scas
das
pop
stc
mov
mov
dec
pusha
inc
cmp
stos
lahf
idiv
dec
rcll
out
dec
dec
dec
cmp
call
test
push
fidivs
sbb
in
pavgw
xor
pop
data16
add
hlt
mul
xor
push
out
lods
sbb
popf
in
add
xorl
xchg
and
inc
pop
pop
dec
mov
sub
mov
nop
mov
dec
dec
cmp
out
daa
and
jge
xchg
aas
insl
adc
gs
inc
push
nop
pop
inc
dec
outsl
shlb
pop
jae
mov
inc
lods
aaa
cmpl
or
pop
repnz
mov
sarl
and
push
stos
fstpt
stos
mov
mov
inc
pop
test
aaa
aad
sti
stos
pop
call
in
jl
cmp
sbb
lahf
pop
xor
inc
sti
cmpsb
push
lock
or
mov
enter
loope
sbbb
pop
add
leave
jmp
add
add
xor
mov
adc
sub
roll
adc
movsb
in
sub
or
in
pusha
cmp
fs
icebp
popf
mov
pop
loope
ds
mov
test
cs
cmp
pushf
jo
jp
jmp
inc
idivl
insb
push
and
flds
jno
sbb
das
inc
or
push
and
and
inc
inc
jno
cmpsb
cmpsb
sub
ss
inc
mov
pop
sub
sub
jno
jo
pop
fildll
cmovs
insb
pop
push
bound
fsubrs
mov
pop
popf
or
mull
mov
fisttpll
ljmp
dec
push
lret
aad
or
jbe
add
pop
repnz
insl
mov
fisubrl
fs
hlt
push
insl
and
nop
sbb
ja
imul
pop
mov
mov
and
sarb
in
call
call
pop
stc
das
cmp
mov
sbb
sub
movb
lea
push
outsb
stc
or
lret
roll
mov
mov
stos
pop
loop
fnstcw
mov
dec
addl
shrd
jb
aad
dec
flds
adc
jmp
pushf
in
push
fwait
push
insl
push
idivw
pop
jno
pusha
mov
dec
inc
out
jmp
pop
in
repz
nop
ficompl
in
testl
and
cmpsl
cmp
jmp
fimuls
sbbl
adc
bound
push
push
ss
push
cwtl
ret
loop
inc
pop
and
lret
adc
dec
and
outsb
xchg
xchg
roll
or
cmp
mov
jle
in
and
repz
cmp
dec
sub
xchg
sti
mov
xor
sub
mov
test
mov
sub
xchg
int
fs
mov
int3
mov
fwait
negl
cmp
inc
fcomps
cli
inc
sbb
inc
ljmp
adc
pop
mov
insl
dec
imulb
jle
inc
dec
lods
xchg
clc
jne
push
jae
mov
jl
xlat
mov
or
fidivs
and
lds
add
cli
out
mov
pusha
and
dec
outsb
or
pop
pop
scas
lea
cmp
ss
lods
adc
lret
push
call
jo
cwtl
call
inc
scas
pop
adc
or
jns
xchg
cltd
lods
lret
jae
dec
jmp
decb
push
push
pop
mov
xor
cmp
jle
loopne
jbe
clc
pop
mov
jbe
lea
les
enter
add
mov
xor
out
mov
pop
push
cld
add
imul
out
stos
ja
loopne
inc
dec
add
fbld
pop
fsubs
cmp
imul
xchg
out
in
mov
mov
jg
sbb
sbbl
lahf
jp
pop
sub
lods
mov
je
pop
mov
cltd
jge
aaa
fisubrl
or
lret
inc
adc
clc
add
mov
scas
aam
mov
or
sbb
mov
xchg
xchg
mov
dec
out
mov
and
test
jp
and
push
sti
and
pop
insl
sub
sti
xchg
lods
adc
push
mov
push
repz
daa
lahf
pushf
jnp
inc
test
dec
mov
jmp
mov
jbe
add
jecxz
or
adc
jecxz
sarb
test
leave
mov
xor
mov
mov
pushf
xchg
jbe
mov
dec
adc
imul
addr16
mov
pushf
jg
loopne
xchg
scas
push
xor
js
repnz
add
ds
aas
sti
pop
add
cltd
rol
icebp
inc
movsl
lret
jg
leave
scas
addr16
xchg
scas
pop
cmovp
clc
bnd
cli
mov
sbb
pop
loope
mov
jle
cmpsl
xchg
sbb
dec
mov
push
xchg
sti
roll
sti
mov
sbb
sub
push
insb
daa
les
dec
out
xor
andl
outsl
cmpsl
sub
ficoml
ljmp
test
xchg
push
jl
movb
sbb
xchg
outsl
add
adc
and
imul
xchg
inc
sub
mov
push
mov
aaa
mov
mov
leave
stos
add
fdivs
fwait
push
fcmovb
add
fnstsw
mov
sbb
test
das
mov
sub
sar
loope
insl
xchg
push
cmp
or
dec
or
mov
adcl
inc
push
nop
xor
dec
or
add
inc
dec
test
movsb
and
and
xchg
mov
mov
mov
add
or
sbb
xchg
ror
stos
cli
push
ss
mov
push
pop
push
rcrl
xorl
fdivp
ret
push
mov
xorl
loopne
movsl
fcoml
pushf
jnp
addr16
insl
push
mov
push
pop
add
out
out
sbb
push
data16
xchg
cmp
jecxz
sbb
cmpsl
fldl
fisubrl
rcr
out
std
shl
jecxz
mov
fiadds
aaa
sbb
xor
mov
push
fildll
sbb
mov
jo
cld
mov
mov
aas
ljmp
test
jae
cmp
lret
xor
in
pop
or
xchg
nop
stc
lods
fwait
sub
jne
xchg
fisttpll
in
jo
jne
aaa
inc
add
sub
dec
jb
mov
push
loop
fwait
not
leave
sti
cs
shrb
jo
imul
push
icebp
rorl
mov
bound
int
sbb
clc
or
lcall
insl
xchg
jno
push
cmp
roll
test
lahf
nop
mov
ret
add
rorl
sbb
xchg
popf
in
call
push
aam
in
out
cli
push
bound
xchg
pmaddwd
cmpb
inc
out
repnz
stos
xor
enter
pop
repnz
aam
dec
fst
pushl
idivb
in
enter
aaa
ss
repz
or
push
mov
sub
jecxz
pop
fwait
push
jnp
jmp
pusha
sub
andl
add
jg
cmp
les
rclb
adc
xchg
sub
xor
inc
mov
push
pop
push
inc
pop
jo
ret
dec
cmp
insb
jl
test
cmpsl
popa
cmp
hlt
mov
sbb
sub
loop
and
inc
mov
adc
fnstsw
cld
stc
loope
cmp
cmpsl
add
add
sbb
inc
xchg
dec
xchg
xchg
mov
xor
xchg
lock
gs
mov
out
add
cld
into
arpl
fwait
adc
hlt
fbld
stc
adc
repnz
sarl
test
xchg
bound
xor
mov
inc
mov
xor
test
lds
scas
test
inc
or
push
xchg
and
aas
mov
scas
and
call
mov
inc
mov
lret
or
out
aam
cmpsl
push
int3
es
arpl
push
mov
push
or
jne
sbb
inc
lret
sbb
pop
cwtl
inc
mov
xchg
push
cmc
lahf
add
sti
faddl
rolb
adc
insl
hlt
mulb
jp
jle
add
fsubs
mov
xchg
call
in
jns
cmc
mov
xor
jmp
cld
imul
outsb
cmp
jg
mov
out
jb
push
int
xchg
adc
mov
addr16
dec
cmp
jp
dec
sbb
arpl
push
rcr
aam
and
sbb
daa
mov
cmp
xor
push
negl
jae
dec
push
stos
push
fdivrp
xor
sbbl
mov
jecxz
pop
cmc
and
pop
add
jle
rclb
xchg
sbb
pop
or
shlb
mov
insl
dec
cmp
jno
daa
jp
adc
js
shll
pop
test
dec
cmp
push
clc
movsl
cmpl
jb
lock
sbb
mov
les
sbb
jno
push
ficoml
or
daa
xchg
popf
xchg
hlt
adc
fldl
cmpsb
call
cmpsl
sbb
cmpsl
and
cmp
test
mov
push
ljmp
lock
lds
in
mov
jne
cmp
pop
mov
push
ljmp
lahf
lret
or
mov
cltd
xor
jo
pop
into
sbb
nop
aas
jbe
mov
pusha
xor
enter
or
ljmp
popa
mov
add
xor
mov
adc
movsb
adc
iret
jo
cltd
dec
mov
insb
dec
rcll
or
sbb
xor
js
jmp
push
or
test
aad
jo
icebp
rcll
rcl
fcomi
popf
repz
or
leave
imul
out
andb
xchg
repz
lea
into
xor
jl
mov
mov
aad
jge
mov
in
xchg
inc
popf
clc
sbb
push
ljmp
xorl
lcall
mov
lds
push
push
lea
call
mov
dec
lds
sti
lds
mov
inc
or
test
push
addb
orl
cmpsb
xchg
jbe
pop
out
mov
jns
ret
sub
push
imul
jge
pop
aad
jb
clc
repnz
sbb
test
mov
dec
xchg
test
idivl
pop
and
mov
dec
mov
mov
inc
pushf
inc
push
pusha
repz
shll
fildll
bound
sbb
mov
fsubl
addl
mov
jns
loopne
movsb
and
in
and
jno
cmp
jbe
pop
xor
pop
pop
or
push
out
mov
hlt
add
jne
nop
and
fidivs
push
jp
push
mov
pusha
aas
jl
mov
or
inc
dec
lahf
call
ret
inc
xchg
dec
sub
aas
rcrb
aaa
pushf
flds
jne
jg
pop
outsb
repnz
mov
jecxz
xchg
call
jns
push
pop
sub
enter
sbb
inc
call
mov
mov
cld
sbb
aad
xor
test
pop
mov
enter
xchg
repz
movsl
dec
jb
je
push
sub
addr16
into
cmovns
mov
jl
sub
xchg
arpl
std
jmp
stos
leave
jns
xchg
add
das
inc
dec
test
test
out
sub
mov
cld
stos
test
test
push
xchg
into
out
jne
cmpsl
push
and
jp
jns
cmpsb
pop
std
ret
leave
negb
mov
lods
or
jae
leave
xchg
mov
push
cwtl
movsb
jnp
adc
sbb
mov
jge
cli
adc
jge
data16
stos
les
jbe
popa
in
add
mov
fstpl
andl
mov
mov
pop
fnstcw
fxch
lods
idivl
andb
ljmp
push
pop
sbb
mov
push
xor
lcall
icebp
sub
and
jecxz
cmp
pop
mov
fldl
loop
gs
dec
lds
outsb
ja,pn
jmp
sub
imul
dec
imul
adc
test
dec
sbbb
adc
popa
andl
in
xor
mov
pop
mov
add
movsl
mov
adc
adc
add
cmp
in
mov
icebp
cli
xor
shll
stos
or
test
sbb
ret
pop
pop
mov
or
adc
and
jp
sub
lds
enter
jge
shlb
cs
idivb
scas
ljmp
jg
fidivrl
fsubl
les
and
out
dec
aaa
jg
filds
jae
fdivr
push
pop
xor
push
fisubs
lods
adcb
ret
and
addb
ss
xchg
in
in
xor
jmp
sub
lods
aam
je
mov
js
loop
sbb
cmpsb
es
push
mov
pusha
cmpsb
or
push
jge
lcall
dec
xor
push
and
mov
mov
nop
aad
push
push
cmp
inc
dec
in
test
mov
push
mov
shlb
adc
enter
je
addl
add
lret
imul
adc
mov
sub
and
pusha
test
inc
pop
and
in
fnstsw
subb
xor
leave
pusha
adc
push
or
pop
scas
in
sarl
sub
gs
ljmp
aas
cmp
or
call
cmp
and
inc
pop
jne
xor
inc
lds
rcl
std
lcall
and
iret
lods
push
xchg
pop
inc
pop
push
inc
lea
and
icebp
into
mov
jae
arpl
imul
xchg
push
jns
push
jbe
mov
add
xchg
pop
xor
jle
mov
cmp
sbb
cltd
leave
sbb
ljmp
sti
and
outsb
mov
jae
test
call
ret
scas
fld
addr16
dec
add
icebp
pop
xchg
test
sub
and
fwait
add
stos
rcl
xor
lret
add
cmp
cmp
sbb
cmp
loopne
cmpsb
sbb
pop
sub
or
into
addr16
add
xor
mov
ljmp
cmp
cltd
fcmovnb
mov
add
andb
daa
fld
and
sub
sti
cmp
scas
imul
push
repz
mov
dec
repnz
clc
lret
jmp
ret
jo
fistpl
ret
mov
mov
mov
jge
and
dec
xor
dec
xlat
fstp
xor
inc
ffree
call
pop
push
inc
int
jnp
andb
test
cmpsl
mov
pxor
mov
inc
sub
fcom
imul
aaa
dec
jne
mov
jmp
je
adc
mov
bound
loopne
sbb
repz
imul
sub
aam
jmp
and
mov
xlat
and
mov
iret
outsl
stos
xchg
inc
pop
mov
mov
cld
add
dec
xchg
mov
adc
push
aaa
sbbl
test
jae
mov
inc
sub
mov
jl
cmp
adc
or
repnz
and
mov
jg
test
imul
into
jle
mov
icebp
ficoml
inc
adc
xchg
enter
cmp
push
lahf
cmpsb
imul
mov
aam
aas
decb
mov
mov
push
xchg
lret
pop
xchg
lea
ror
loopne
out
xor
shlb
xchg
sub
inc
fs
jno
mov
je
clc
cwtl
cli
add
ja
jmp
gs
jp
aam
inc
xor
push
out
adc
lods
pop
inc
jb
flds
push
loop
out
mov
lret
jne
sub
js
decb
mov
mov
and
inc
sub
mov
out
popf
pop
xchg
jmp
sbb
adc
push
ljmp
pop
pop
fs
xchg
jbe
loop
xchg
movsb
jle
pop
mov
call
in
jl
and
arpl
inc
lock
pop
mov
ret
xchg
insl
push
mov
inc
push
push
lods
mov
sbb
lcall
hlt
and
vandps
in
pop
mov
int3
cld
mov
addr16
push
jo
cwtl
jmp
mov
push
push
in
cld
insb
fsubl
mov
and
add
leave
mov
cld
stos
inc
loop
enter
fmuls
or
cmc
adc
jo
js
scas
jg
xchg
rcll
and
aam
in
jae
fldt
enter
mov
jmp
sbb
rorl
pop
je
pop
xchg
jle
and
call
jg
xchg
bound
cmpsb
sbb
mov
out
and
dec
pushf
and
ljmp
fidivl
sahf
jae
rcrb
icebp
and
popa
lret
fwait
pop
je
inc
jbe
mov
or
xchg
cltd
lret
rol
inc
scas
gs
loopne
ss
movsl
test
fs
and
aaa
cmp
adc
dec
add
xchg
cmp
jp
xor
loopne
divb
mov
pop
ret
popf
mov
pop
insb
out
iret
orl
imul
dec
pop
imul
adcl
ss
cmp
in
andb
fnstenv
jo
dec
rorl
bound
loop
idivb
mov
lea
push
mov
fninit
sahf
inc
ret
cmc
pop
cmpsb
rorb
dec
fcoml
popf
cmp
flds
jnp
flds
imul
mov
aam
mov
push
push
jmp
jge
scas
xchg
stos
sbb
sbb
arpl
jg
lds
xlat
jmp
aaa
pop
mov
and
outsb
pop
mov
inc
mov
mov
ss
mov
jae
mov
lds
andl
push
push
xor
lea
loopne
mov
call
and
fdivrl
push
inc
jp
adc
ja
aam
into
frstor
add
jg
repz
cld
adcl
sahf
scas
rcll
rcrl
jb
xchg
aas
mov
xchg
xlat
mov
push
mov
dec
xor
cmp
add
mov
push
dec
dec
testl
les
aad
pushf
dec
fstpl
call
xchg
adcb
push
int3
pushf
push
mov
scas
pop
stc
rorb
arpl
ds
ds
cmp
dec
xchg
jns
int3
fdivrl
bound
jecxz
lahf
push
nop
dec
out
xchg
jp
pop
inc
cmpsb
adc
sub
add
enter
push
mov
and
aam
repnz
imul
lds
fdivrl
ret
push
pop
jp
xor
call
cmpsl
mov
cltd
xor
stos
jo
cmc
scas
lret
mov
mov
xor
jmp
in
xchg
xchg
divb
mov
push
sbb
in
mov
add
sbbb
imul
jg
fiaddl
mov
xchg
mov
mov
negb
movsb
imul
xor
xlat
out
adc
dec
adc
out
cli
mov
mov
inc
adc
push
aas
pop
sbb
movsb
insb
mov
pusha
jbe
jmp
adc
outsb
outsb
rcr
cmp
adc
jl
dec
daa
mov
mov
dec
cmpl
push
shlb
pop
ja
cmpsl
cmpsb
cmp
dec
dec
push
stos
fwait
jle
add
pop
fidivl
icebp
pushf
jns
rorl
cmpsb
xlat
add
or
xchg
outsb
fs
xchg
cmc
out
mov
and
popf
jns
lea
mov
out
ljmp
jge
push
pop
push
jae
mov
push
sub
and
enter
inc
filds
and
imul
in
ss
enter
sub
mov
or
fucomp
iret
cmp
test
xor
int
inc
pop
pop
fwait
lahf
loope
sub
jmp
mov
js
cmp
mov
outsb
and
pop
push
sub
xchg
cmp
pop
fdivr
dec
lret
jg
data16
xor
inc
inc
stc
push
mov
mov
add
cmp
mov
ret
jns
rorl
cmp
cmp
stc
xor
inc
je
jecxz
popf
cmp
cwtl
adc
frstor
arpl
addl
push
iret
in
int
imul
or
mov
push
or
push
and
xchg
fcmovne
stos
jle
in
mov
dec
std
and
xchg
out
adc
xor
out
int
andl
sub
and
jbe
or
subl
adc
std
fnstsw
shrl
push
cwtl
pop
lock
pop
pop
rclb
adc
push
leave
xchg
shl
fisttpll
lcall
movsl
out
inc
cmp
push
inc
and
lds
mov
jg
or
lock
popa
in
mov
ret
jb
pop
sbb
shll
dec
test
test
mov
sbb
mov
push
cmc
add
and
sbb
out
cmpsb
stos
out
cli
mov
sub
dec
xlat
mov
roll
sub
cmp
inc
insl
mov
adc
lahf
and
mov
inc
cmpsl
adc
mulb
inc
and
iret
inc
out
xor
add
inc
sbb
and
sti
push
cmp
shlb
test
mov
push
imul
nop
cmp
mov
sub
jp
add
inc
cld
ds
xor
cmpsl
cmp
lods
sub
cmp
add
faddl
lahf
mov
cmp
out
cmpsb
or
push
or
test
mov
cltd
pop
test
scas
test
mov
fcomps
sbb
popa
lods
cmp
cmp
mov
inc
sbb
test
xchg
fwait
push
inc
imul
aaa
pushf
popa
mov
ss
sbb
ljmp
adc
and
sub
icebp
repnz
stos
sbb
outsl
pop
stos
sub
xlat
adc
jbe
roll
xchg
rcll
push
gs
mov
adc
out
push
inc
ret
mov
inc
xor
cmp
cmp
dec
stos
popa
mov
jae
scas
jbe
fcoml
sarb
fidivrl
enter
mov
sbb
xor
xor
stos
xor
sub
pusha
iret
lcall
xor
adc
sub
aaa
jle
mov
aas
push
add
pop
shll
ja
pop
ficoml
movb
sbb
inc
push
aaa
scas
mov
je
push
mov
icebp
pop
ret
mov
adc
loopne
ja
pop
xor
sbb
jp
push
nop
movsb
jle
das
fs
jne
pop
out
xchg
add
aam
repz
jae
rclb
das
adc
call
mov
xor
lret
shl
jo
aam
imulb
hlt
mov
mov
mov
dec
testl
mov
ja
or
movsb
jg
je
jb
sbb
rcll
and
ja
xor
dec
cltd
lods
ds
in
pop
mov
rcll
xor
lock
jecxz
mov
mov
cmc
popf
and
cs
pop
popa
and
mov
cmpsl
outsb
add
test
push
divl
popa
insb
lock
or
das
push
loopne
mov
dec
or
jne
js
es
data16
loop
sbb
xchg
shl
pop
sbb
iret
shll
int
ss
or
scas
sbb
mov
inc
dec
insl
push
imul
mov
pop
push
cmpsl
repz
bound
inc
mov
scas
jns
enter
sub
mov
push
into
or
and
test
sub
ss
and
or
pushf
aad
stc
push
lahf
cmp
leave
xor
repnz
dec
in
icebp
pop
lcall
ja
pop
popa
popa
add
call
frstor
push
jno
push
ja
int3
mov
les
push
aas
mov
push
icebp
jno
push
rclb
sbb
ret
icebp
fdivrs
stos
mov
adc
inc
jne
mov
xchg
mov
add
hlt
cmp
jg
dec
dec
es
int3
cmp
adc
push
and
mov
pop
fadds
adc
cmpl
or
push
mov
negb
sub
lcall
inc
xchg
jbe
inc
sub
rolb
std
fsubrs
jl
cld
lea
add
mov
and
sub
inc
cmp
aas
int3
sahf
mov
sti
add
dec
mov
in
sub
xor
sub
test
stc
orl
lret
fistl
cld
dec
fadds
mov
pop
in
sahf
mov
mov
inc
jecxz
cwtl
fadd
sub
mov
mov
testl
xor
and
jge
mov
lea
inc
push
movsb
jge
ja
push
mov
or
rcrl
inc
lcall
cmp
sub
xor
mov
and
sbb
cmpsl
cmpsl
enter
dec
loop
cmp
xchg
sti
pop
pusha
daa
pop
inc
jmp
popl
pop
shll
out
cmp
dec
jg
dec
xchg
dec
mov
mov
iret
sub
xor
adc
push
dec
or
pop
jl
add
mov
or
aad
cmp
push
jle
xlat
dec
mov
lahf
cli
adc
lds
lea
repz
and
xchg
mov
ret
imul
push
xor
testb
adc
repnz
mov
out
test
mov
dec
aad
pushf
mov
jb
das
push
cmp
jecxz
dec
shll
jns
pop
lahf
mov
outsb
stos
not
adcb
jno
and
add
rol
mov
cmp
mov
imul
pop
xchg
mov
cs
arpl
mov
pop
out
push
shr
sbbl
mov
das
insl
out
add
mov
in
pop
popf
cmp
mov
in
inc
js
test
mov
push
mov
mov
loope
mov
add
adc
icebp
ror
scas
loopne
repnz
daa
push
rcrb
jecxz
fwait
push
push
in
cmp
or
jp
pop
push
xor
push
pop
pop
shl
scas
in
lcall
push
ret
js
imul
fmul
dec
daa
or
dec
aad
fistpl
add
in
mov
cmp
or
imul
and
sub
jb
das
les
or
sub
insb
ds
repz
pop
popa
cmp
shr
and
mov
xchg
xchg
or
pop
stos
int
jns
jmp
sbbb
jle
add
xchg
jb
out
inc
xchg
mov
and
mov
inc
in
adc
mov
adc
imul
addr16
jno
fdivs
cmp
or
jg
pop
ficomps
sub
sub
xor
jbe
movsb
lds
hlt
xchg
js
rcll
pop
push
shlb
or
pushf
stos
out
lret
mov
lret
xchg
aas
test
jbe
repz
adc
xchg
sahf
push
cmp
add
mov
repz
dec
add
int3
cs
dec
inc
or
sti
aas
pop
dec
test
dec
fnstenv
lods
out
xor
sbb
cmp
and
cmc
daa
lds
test
mov
xor
je
ds
sbb
pop
js
pop
pop
mov
aaa
outsl
out
aaa
mov
add
mov
mov
loope
nop
je
mov
add
in
sbbb
rcll
outsb
fcomps
push
cwtl
gs
dec
call
xor
mov
inc
mov
sar
js
cmp
xchg
mov
loope
cmpsb
ret
dec
jne
adc
dec
fiaddl
idivl
lock
mov
push
sbb
mov
sarb
adc
pop
jmp
xchg
sub
fisttpll
in
mov
push
inc
rorl
mov
imul
movsb
iret
testb
adc
lcall
jl
xor
fdivl
stc
xchg
lret
sub
xchg
in
push
add
mov
movsb
gs
addr16
pop
aaa
out
je
inc
jne
add
fnsave
lods
enter
dec
inc
dec
call
inc
shrl
push
lret
int3
bound
clc
adc
cltd
mov
data16
jo
xor
push
and
ret
shl
cmp
fiaddl
repz
push
mov
mov
jg
adc
jmp
xor
jl
nop
cmp
mov
or
mov
lcall
xorl
daa
and
and
jbe
cmp
xor
adc
in
imul
adc
int3
cmp
loopne
int
dec
jge
pop
test
outsb
cmc
pop
gs
or
cmc
mov
in
paddsw
or
mull
xchg
mov
dec
popf
stos
and
xor
cmc
jle
adc
lods
shrl
pop
inc
fsubl
mov
clc
mov
mov
cmp
cld
cmpsb
pop
iret
cwtl
mov
lock
loopne
push
aad
jns
xor
jnp
mov
out
test
js
inc
or
dec
cmp
cmp
call
in
ljmp
loopne
or
addr16
inc
push
and
dec
rcl
cmp
or
mov
sbb
pop
and
lods
add
push
gs
fs
or
push
out
add
sub
lods
xor
jmp
mov
mov
push
roll
call
clc
lea
push
push
les
push
roll
mov
xor
rcl
xor
enter
lea
cmpsb
jbe
fwait
test
mov
nop
xor
and
add
lock
addr16
cmpsb
shlb
push
jecxz
test
inc
les
jecxz
mov
lods
test
lret
leave
fwait
movsl
hlt
and
outsb
aaa
cld
mov
sbb
lods
jbe
fs
pop
lods
or
pop
add
aas
cltd
stos
sti
add
movsl
add
add
in
pop
adc
mov
insb
hlt
iret
mov
mov
inc
push
inc
xor
je
dec
mov
ret
jmp
pop
inc
cmp
arpl
adcb
arpl
and
mov
stc
jns
scas
mov
pop
pop
pop
loop
mov
adc
repnz
fildll
call
fistl
ljmp
jmp
jnp
mov
add
mov
push
sbb
repnz
ret
add
jnp
jbe
repnz
add
loope
pusha
repnz
xor
dec
inc
sbb
ret
das
loope
cmpsb
les
cltd
dec
adc
call
sbb
jge
jecxz
pop
pop
inc
add
lock
xchg
fcomps
xchg
loop
mov
fucomip
xlat
rclb
je
mov
dec
jno
mov
mov
es
pop
adc
inc
xchg
xchg
sbb
cld
aad
pushf
dec
and
leave
cmp
xor
mov
cmp
and
int3
push
in
add
subb
ficoml
rorb
loop
cmp
imul
cmp
fstp
je
jl
cwtl
arpl
fisttpll
mov
iret
lahf
jg
frstor
lods
inc
and
dec
mov
mov
inc
sbb
cmp
or
push
repz
cltd
rcll
jecxz
push
push
in
or
sbb
xlat
andb
sbb
popa
jp
out
in
jnp
add
ficoms
inc
push
jns
xchg
fisubl
cmpsl
mov
mov
arpl
mov
or
loopne
mov
in
fnstcw
dec
aam
dec
repnz
mov
stos
jmp
jae
pop
nop
orl
dec
repz
lds
sub
scas
inc
lcall
mov
adc
jbe
mov
jle
mov
into
nop
and
push
sub
mov
inc
in
mov
pop
dec
movsl
mov
fcmove
lret
mov
loopne
and
and
adc
and
sbb
shll
inc
fdivl
push
icebp
scas
lret
insb
or
push
fwait
xor
dec
je
cli
or
dec
into
dec
adcl
sub
xor
cmpsl
iret
jmp
test
pop
pop
sub
xchg
daa
jo
sbb
mov
fwait
inc
adc
in
pop
mov
repnz
shlb
icebp
inc
mov
pusha
fucomi
or
decb
pop
mov
or
cmp
popf
gs
push
stos
fistpl
and
adc
xor
bound
mov
test
mov
and
jnp
movsl
sub
add
mov
mov
pop
mov
jecxz
mov
mov
stc
mov
imul
push
push
mov
add
adc
mov
daa
into
cmp
lcall
pop
inc
scas
inc
cmp
mov
sahf
movb
cli
and
pushf
mov
xchg
lods
daa
sub
shrl
cmp
js
push
lahf
inc
nop
push
int
jo
mov
push
sub
jbe
pop
cltd
and
lods
imul
ljmp
jp
je
daa
xchg
ficoml
xchg
or
mov
lahf
stc
mov
data16
add
jnp
test
mov
mulb
mov
cmp
sub
jmp
jp
jp
xchg
stc
ja
cmc
jnp
sahf
out
inc
aam
icebp
and
and
je
sbb
adc
fwait
jbe
mov
loopne
js
cs
add
lds
inc
mov
sarl
push
cmpb
lcall
ret
mov
mov
fisubrs
lock
push
ret
add
xor
add
inc
cmp
cmpl
adc
and
in
sub
pop
xchg
jnp
fsub
sub
stos
stos
inc
test
sarl
lahf
inc
lods
shlb
test
inc
cmp
xchg
nop
cs
mov
cmp
dec
movsb
fisubl
repz
and
jnp
shll
adc
in
bound
fdivr
lods
mov
les
cli
xor
out
mov
add
mov
sub
inc
lds
add
lret
jecxz
add
in
aas
inc
xchg
add
add
xchg
cmp
add
nop
push
call
jp
lret
fisubrs
mov
push
aas
lcall
subl
inc
movsl
pop
pop
daa
xchg
jne
inc
shl
enter
cmpsl
movsl
iret
lcall
call
push
je
pop
sub
mov
jae
outsb
add
arpl
call
adc
sub
mov
enter
and
sbb
data16
dec
xor
fcomip
in
jecxz
cli
and
jo
and
scas
inc
or
idivl
mov
or
pop
sbb
xchg
or
jnp
lods
dec
xor
dec
stos
push
test
mov
popa
adc
and
test
and
iret
daa
enter
cmp
mov
ret
push
movsl
pop
leave
je
cmp
test
dec
jmp
lea
aaa
fwait
mov
out
scas
addr16
fidivrl
mov
push
or
jmp
pop
data16
mov
stos
dec
push
jno
rcr
ljmp
xor
cmp
movd
or
inc
or
jo
dec
ss
movb
jae
sub
pop
cli
and
jle
js
dec
adc
fwait
jnp
pop
iret
int
sahf
loope
xchg
pusha
push
fsubrl
pop
cs
repnz
jge
leave
ja
lcall
jno
imul
je
stos
adc
lret
push
sub
jno
pop
gs
or
xor
aas
push
mov
insl
push
jl
xchg
push
jl
or
sub
loop
outsb
mov
lds
lcall
es
pop
div
lret
cmp
fwait
lcall
mov
out
add
sar
pop
hlt
cs
pop
sub
adc
xchg
sti
xchg
mov
fisubs
or
sahf
mov
mov
jl
cli
or
mov
mov
insl
not
lret
cmp
sub
jmp
or
mov
lods
shl
dec
push
aas
mov
jecxz
inc
test
jl
pusha
ficoms
cmp
xchg
add
in
cmp
insb
mov
push
push
dec
jmp
mov
pop
mov
dec
push
mov
mov
mov
mov
xor
mov
outsl
imul
out
iret
hlt
xchg
loopne
cwtl
sub
cs
inc
lret
and
xchg
jno
mov
hlt
pushf
test
lock
dec
adc
lock
inc
sub
sbb
test
push
or
not
into
adc
add
out
sbb
mov
mov
cmp
sub
pop
fstpl
int3
dec
and
mov
push
jg
popa
lcall
stc
in
pop
shll
mov
dec
add
aam
or
ljmp
push
sbb
movsl
dec
add
movsl
pop
iret
into
push
mov
lea
rclb
out
roll
int3
dec
add
inc
mov
xchg
sahf
mov
xchg
cmpsw
mov
les
shll
repnz
push
lahf
shl
fsts
cmpsb
pop
or
mov
mov
iret
icebp
lret
dec
imul
lods
or
dec
add
aas
mov
jo
enter
dec
pop
push
stos
ret
or
add
pop
mov
push
jp
mov
std
repz
sarl
mov
repnz
pop
cmp
shll
fmull
pop
in
cmp
mov
fistl
mov
movsl
out
mov
mov
insb
not
cli
aas
jle
mov
jae
dec
mov
popf
icebp
in
adc
fcomps
lret
movsl
ds
divl
notb
sub
sahf
in
sub
or
mov
xchg
push
ja
and
pop
inc
decb
push
inc
int
add
mov
loope
pop
sub
or
movsb
push
jl
cmp
testb
mov
push
or
addl
lods
loop
aaa
pop
and
jp
dec
mov
cmp
popa
mov
dec
sub
push
movsb
clc
cs
mov
xchg
xchg
sub
sbb
cmpsl
cltd
lods
xchg
je
jge
xchg
es
ret
fistpl
lods
pop
enter
repz
stos
sarb
xor
push
mov
les
in
push
jle
jae
out
dec
add
dec
jg
loopne
in
mov
lds
sub
dec
mov
jmp
and
dec
adc
mov
inc
movsb
je
sbb
sub
or
jnp
insl
loopne
sarb
mov
xchg
out
adc
inc
imul
lea
jl
imul
rorb
lahf
adc
into
sub
xor
insb
hlt
aam
dec
adc
xlat
sbbb
or
shl
or
pop
fpatan
je
pop
lock
mov
loope
mov
imull
jle
push
sbb
pushf
and
fwait
rolb
fstl
sti
stos
fdivs
repz
in
dec
mov
mov
paddsb
mov
std
pop
mov
mov
xor
pop
outsb
mov
fldcw
aam
fbstp
js
lret
jg
mov
push
xchg
outsl
sbb
xchg
test
push
int3
adc
and
daa
pop
shlb
fiadds
enter
and
xor
cmpsb
test
pop
cmp
lret
ss
loop
int3
sbb
cltd
jb
pop
pop
loope
outsb
lods
into
pushf
mov
loope
ficoms
sub
mov
xchg
and
rcll
xor
sbb
push
or
add
insb
repz
orl
sarl
sahf
sahf
ljmp
cmp
in
jg
dec
add
mov
shrb
outsl
inc
inc
and
out
xorb
cmp
sahf
mov
lods
sbb
iret
sub
int3
mov
mov
pop
call
fsubl
add
gs
dec
lret
mov
jae
adc
les
jp
ficoms
adc
dec
mov
push
sysenter
cs
and
cld
sbb
test
push
cltd
push
out
movsb
fs
imul
mov
mov
es
out
loop
adc
jno
jno
stc
push
cwtl
sub
pop
test
lahf
adc
ljmp
jp
ret
lds
inc
gs
sub
ja
push
inc
jmp
mov
push
enter
aad
mov
call
mov
nop
mov
imul
gs
adc
neg
es
scas
lahf
pop
pop
push
inc
lret
jno
mov
or
mov
inc
xchg
lods
dec
int3
jo
xlat
pop
sub
dec
adc
out
push
sub
ret
mov
jb
mov
adc
mov
sbb
pop
test
push
jae
pop
cld
jb
cmp
out
pop
pop
pop
mov
