xchg
xchg
sub
mov
push
mov
pop
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
xchg
mov
push
sub
mov
pop
pop
xchg
sub
xchg
push
sub
mov
pop
pop
push
push
mov
pop
sub
mov
mov
pop
call
out
cvtps2pd
cmpsl
jno,pt
and
ret
decl
push
shll
ret
add
cmp
xor
and
fmuls
or
inc
lods
and
add
or
pop
xchg
adc
jo
push
out
std
or
mov
pop
xor
pop
pusha
out
out
hlt
inc
add
je,pn
dec
cmp
mov
or
rcll
jb
mov
adc
stos
sbb
outsb
sbb
sti
sub
pop
xlat
inc
scas
mov
outsl
int
in
adc
stos
stc
adc
aas
inc
sub
outsl
dec
xor
sbb
roll
mov
dec
adc
mov
push
insb
outsl
lock
and
hlt
aad
rclb
jno
jmp
notb
dec
mov
xor
xor
add
and
inc
inc
call
std
pop
mov
rcrb
or
push
mov
cmc
testb
adc
or
jo
or
cmp
inc
emms
das
fstps
pop
and
daa
push
pop
ret
push
clc
push
cld
push
and
mov
xor
or
cmp
xor
addr16
jnp
xchg
xchg
cmc
imul
ja
pop
xor
push
imul
stos
rcl
add
divl
push
fnstsw
cmp
ja
sub
call
clc
test
pusha
pop
cmp
jbe
clc
pop
push
jne
filds
jmp
adc
shll
jb
mov
pop
sub
insb
jns
cmc
pop
inc
and
adc
xor
mov
hlt
mov
std
loopne
addl
ja
rcrl
and
nop
aaa
leave
cmp
adc
jbe
mov
mov
mov
divb
sbb
fdivrl
pop
out
int
add
incl
cld
add
dec
and
and
stos
out
sub
push
jmp
incb
inc
pop
mov
pop
mov
adc
int3
adc
xor
inc
mov
js
loop
ret
inc
push
push
cmpsl
mov
sub
xlat
or
push
cmc
mov
arpl
pop
sub
mov
adc
sbb
pop
pop
xor
push
into
hlt
callw
xor
pop
popa
inc
add
sbb
shll
xor
popa
adc
cmp
pop
aaa
push
push
notb
mov
dec
das
adc
lods
push
xor
and
je
bound
pop
mov
je
adc
jnp,pn
pop
cmpsl
push
orl
and
jno
sub
xor
pop
clc
dec
outsb
sarb
or
dec
lods
orb
cmc
or
popa
test
popf
das
je
hlt
mov
pop
mov
mov
je
out
add
into
inc
mov
xchg
pop
add
nop
imul
add
jnp
inc
xor
jl
cwtl
rorl
sbb
stos
xor
into
mov
push
sbb
ds
push
cmc
mov
inc
dec
fildll
xchg
pop
addl
addb
jb
stos
sub
imul
scas
imul
in
imul
aaa
mov
outsl
xchg
inc
ret
mov
mov
xchg
fbstp
ss
fldcw
ljmp
cmp
les
dec
xchg
fildll
sub
jne
sub
call
mov
ds
push
pop
mov
testl
adc
loope
add
fimull
test
std
pushf
dec
jg
jle
mull
call
shll
out
pop
cltd
fsubr
sbb
lsl
sub
inc
inc
adc
add
jecxz
leave
jne
std
sub
dec
in
mov
sbb
dec
rorl
movsl
pusha
cmp
testl
push
mov
fsubs
cmp
ds
imul
pop
inc
and
push
fs
add
filds
lods
inc
xchg
jmp
gs
cli
outsl
jo
push
lea
pop
out
lret
or
xor
mov
mov
inc
add
ja
mov
stos
mov
sub
push
xor
cmp
repz
cmp
cwtl
mov
or
incl
subl
lret
xor
nop
into
mov
out
or
or
in
aas
shll
stos
jecxz
or
or
xchg
aas
xlat
push
mov
outsb
ficoml
stos
in
sbb
jg
and
pop
cmpb
repnz
cmp
inc
addr16
and
sbb
ljmp
cmp
xchg
mov
mov
cmp
repnz
imul
shlb
cmc
push
xor
mov
inc
and
pop
sub
int3
shll
inc
pop
cmp
repnz
push
icebp
mov
call
or
add
addr16
orb
arpl
sub
lret
xor
cmp
pop
ljmp
data16
leave
xor
push
pop
cli
pop
sbb
sbb
jo
or
cmp
cmp
and
push
mov
or
xchg
jno
mov
mov
jno
inc
mov
add
dec
enter
mov
jnp
fsub
mov
bound
jae
insb
xchg
pop
addr16
call
mov
mov
movsl
sbb
add
and
ds
mov
dec
into
and
inc
add
sar
adcl
mov
andl
imul
adc
add
inc
mov
push
sbb
lret
adc
jmp
dec
xchg
test
cmpl
mov
test
pop
mov
adc
cmp
pop
imul
repz
aam
xchg
movsb
popa
xchg
pop
mov
stos
push
nop
xchg
jne
xchg
repz
sbb
cmpb
nop
xlat
lcall
fs
add
and
xor
enter
xor
or
and
aas
dec
test
mov
xor
mov
push
mov
push
fwait
xor
xchg
and
xor
fsubl
xor
enter
xor
push
cld
push
mov
mov
leave
sub
xor
pop
xlat
jo
enter
dec
sub
mov
sbb
push
aad
add
cmp
fisubs
jp
call
movsb
xor
adc
faddl
movsb
xchg
insb
fwait
stos
sbb
mov
adc
sbb
and
scas
stos
popa
push
lea
scas
xor
dec
notb
test
daa
mov
fs
popa
ret
das
pop
sub
mov
lods
push
daa
push
repnz
repnz
xchg
lea
mov
ds
cmp
in
std
in
jnp
xchg
adc
or
neg
mov
addr16
jnp
mov
mov
int3
mov
sbb
or
loope
or
dec
mov
jo
xor
xchg
push
and
cltd
sbb
add
stc
es
ficompl
jae
sub
in
iret
lahf
xor
outsb
lods
push
adc
push
pop
fbld
xchg
pop
xchg
mov
add
pusha
test
xor
push
mov
rcl
xchg
faddp
pusha
mov
cltd
push
xor
xchg
cmpsl
lock
or
dec
inc
inc
lea
out
inc
dec
icebp
outsl
lock
cld
push
mov
rol
outsl
in
jge
fisttps
adc
lret
and
add
mov
push
push
pop
fiaddl
enter
mov
cmp
sbb
adc
test
sub
or
insl
loopne
mov
out
inc
cmp
inc
jbe
add
adc
ds
jnp
fwait
mov
cmp
cwtl
lret
out
repnz
test
pop
jmp
ljmp
pop
rcll
ss
mov
inc
outsb
loop
mov
push
jb
dec
in
mov
ss
sbb
mov
mov
hlt
ljmp
adc
sahf
in
fbstp
lods
adc
pop
cs
adc
mov
movsb
sbb
add
add
mov
sbb
add
shrl
into
and
lret
iret
sbb
dec
mov
jae
in
insb
jp
cli
add
sbb
rclb
jmp
push
call
incl
sti
jmp
into
sub
push
and
or
pop
pop
xor
xchg
cmp
mov
or
or
test
inc
mov
pop
xor
or
cli
and
fisttpl
int3
sub
jno
ja
dec
sbb
scas
push
or
mov
adc
nop
sub
and
push
les
dec
pusha
lret
ret
mov
pop
mov
adc
sti
mov
unpcklps
sbb
dec
xchg
repz
mov
xchg
loopne
add
sbb
lock
cwtl
xchg
dec
or
lods
clc
jno
or
add
pop
or
cmpsb
dec
call
jmp
test
inc
test
mov
cmp
mov
mov
cmp
scas
lar
lea
cmp
push
sub
jecxz
pop
mov
mov
imul
rcr
das
addr16
into
sub
xor
imul
xchg
lcall
int3
mov
cli
xor
dec
xor
xchg
test
outsb
scas
loope
addb
mov
rcr
dec
popa
adc
pop
je
xor
and
loopne
adc
mov
cmp
addl
pop
jae
cmp
lcall
cmc
mov
inc
in
das
and
push
icebp
sub
pop
xchg
int3
icebp
mov
lods
ror
or
sub
dec
sbb
xchg
mov
push
aas
push
add
mov
mov
mov
push
jae
call
repnz
dec
and
pop
adc
cmp
push
xchg
subb
dec
das
out
mov
push
mov
aaa
mov
xchg
jge
arpl
xlat
addb
xchg
adc
stos
and
cmpsl
push
and
dec
pop
movsl
mov
notb
or
and
or
add
mov
int3
into
mov
popa
cmp
cs
imul
outsb
rclb
inc
sub
test
pop
xchg
sub
pop
or
gs
icebp
push
test
jb
and
mov
jge
push
sahf
jne
inc
test
aas
xor
fs
pusha
lret
scas
inc
int3
out
pusha
or
into
mov
mov
adc
sarl
push
popa
jb
sub
xchg
cmp
inc
shl
mov
push
pop
dec
xor
push
and
icebp
lcall
outsl
insb
xor
ds
shll
rclb
repz
pop
pusha
push
inc
loop
call
pop
xchg
mov
fcomps
pop
dec
mov
and
xchg
cmp
lea
mov
add
add
cs
sub
bound
mov
call
adc
add
stos
inc
sbb
mov
cli
das
and
add
mov
mov
sbb
adc
push
cld
mov
movsl
inc
sahf
mulb
xor
mov
repz
and
cltd
imul
mov
test
dec
imul
push
daa
pop
xor
push
fadds
inc
scas
cmp
fwait
cmpsl
mov
xchg
mov
pop
test
mov
imul
clc
cmp
jnp
xor
sub
out
inc
mov
jno
cmpsl
xchg
sub
mov
lds
scas
mov
lret
pop
xchg
ds
popa
sbb
mov
rcr
add
add
dec
mov
dec
pop
out
test
cli
shrl
test
hlt
fcmovnbe
sahf
insb
rcrl
mov
adc
or
into
add
mov
inc
into
or
imul
icebp
xor
cmp
push
jmp
sbb
icebp
clc
inc
push
in
addr16
stos
inc
add
xchg
jae
push
or
pop
js
cmc
mov
or
cmpb
pop
or
stos
shld
jmp
aas
dec
cmp
repnz
in
cmpsb
cmpsb
mov
mov
lcall
adc
rcrl
cmpsl
or
mov
jno
sbbb
sbb
adc
mov
jbe,pn
mov
cltd
and
sbb
xor
in
pop
repz
ret
mov
aas
insl
dec
sti
mov
inc
add
inc
dec
add
gs
push
xor
pop
inc
ja
push
sbb
out
pop
or
and
cwtl
or
mov
cmpsb
inc
sub
roll
lds
adc
nop
mov
jecxz
lea
sbb
test
sub
and
cmpsl
mov
js
arpl
mov
push
clc
sbb
xor
mov
pop
adc
dec
jmp
sbb
cmpl
cs
testb
push
mov
dec
sbb
imul
xchg
jp
es
jae
pop
mov
or
dec
mov
mov
sbb
or
add
mov
das
jne
push
iret
leave
xlat
das
out
fidivrl
xor
push
cmpsl
mov
idivb
pop
popa
and
test
js
hlt
test
cmp
push
arpl
lods
fsubrl
cld
fnstenv
add
pop
cmpsb
adc
pop
call
imul
hlt
cmc
mov
xchg
ret
mov
fisttpl
xchg
adc
adc
stos
xlat
je
and
mov
and
jb
sti
jnp
push
add
adc
push
mov
cwtl
in
dec
mov
push
pop
push
adc
mov
mov
jle
cmp
lret
or
mov
movsb
les
cmp
push
push
mov
jae
cmp
and
hlt
push
adc
fiadds
imul
lcall
lods
inc
mov
jl
cwtl
mov
add
hlt
cmp
mov
mov
insl
sbb
fwait
or
ja
rcr
inc
std
xchg
pop
negb
xor
icebp
mov
notb
push
or
or
pushf
es
lcall
test
inc
dec
jl
cmp
insl
cld
jle
sbb
jl
gs
or
pusha
push
test
sub
cli
movsl
icebp
int3
add
sub
cmp
xlat
mov
cmp
stc
add
jl
or
push
adc
sub
jg
jmp
dec
cmp
or
jae
je
sbbb
push
sbb
mov
daa
pop
xchg
adc
cmp
int
pop
test
sarl
jmp
rcrb
sub
lock
push
xchg
nopl
cmp
mov
out
push
sub
mov
adc
xchg
inc
loopne
and
int3
xchg
in
loope
lods
cmp
mov
adc
sbb
pop
mov
icebp
add
dec
pop
stc
shlb
es
cmpsb
lea
mov
push
aas
xchg
cld
imul
or
stc
jmp
push
add
addr16
das
push
pop
push
movsl
xchg
sbb
std
das
aaa
jnp
test
lods
orb
jnp
and
lock
mov
in
jo
stos
sub
hlt
cmp
add
dec
xchg
pop
xrelease
xor
mov
sub
or
lahf
pop
add
inc
adc
mov
es
pushf
ret
rorl
mov
pusha
pop
hlt
aad
push
repnz
and
shrb
mov
ret
mov
inc
icebp
or
lods
pop
inc
arpl
je
push
aaa
jne
push
mov
xor
and
ss
icebp
test
in
add
je
data16
mov
sub
sbb
cmc
inc
shlb
outsb
out
sub
adc
arpl
add
cmc
or
lcall
mov
dec
out
int
out
xchg
lret
lods
sub
pop
bound
lcall
orl
dec
adc
jnp
push
push
mov
sub
mov
push
pusha
and
sub
inc
sub
cmp
mov
cmpb
pop
push
clc
cs
jg
enter
test
fisubrs
push
aas
mov
adc
popa
push
adc
adc
out
push
cmp
and
xor
xorb
mov
loopne
andb
test
pop
cwtl
lea
mov
mov
and
adc
pop
pop
add
pop
or
jmp
cmp
push
xlat
dec
lea
data16
fcomps
pop
push
push
sbb
cmp
testl
jnp
sahf
out
ss
xor
pop
jg
cmp
sub
adc
ror
adc
sbb
mov
fstps
cmpsb
inc
aam
aas
out
mov
call
and
xor
mov
fisttps
mov
xor
fwait
test
mov
sub
out
mov
ds
rolb
xor
mov
call
and
pop
lret
das
nop
daa
sbb
fwait
loope
jl
mov
push
push
ret
hlt
aad
mov
repnz
pop
jmp
jbe
sbb
dec
cmpsl
dec
movsb
ret
hlt
pop
sub
data16
cmp
or
or
mov
test
dec
inc
push
adc
xor
cmp
dec
lret
jg
push
pop
inc
daa
ljmp
addr16
icebp
inc
push
nop
lcall
insl
sub
mov
cwtl
sbb
sbb
mov
mov
das
jmp
push
xchg
repz
jne
repnz
aad
lock
lods
inc
mov
push
daa
decb
addr16
repz
aam
dec
pushf
mov
in
aaa
or
outsb
mov
mov
hlt
xchg
je
cmp
aam
sbb
xor
adc
cmp
sbb
sbb
cmp
stos
cmpsl
or
das
jae
pop
repnz
idivb
shll
adc
inc
call
lock
ljmp
mov
pop
orb
adc
jmp
push
mov
std
jmp
ss
xchg
insb
inc
iret
sbb
adc
cmp
push
mov
xor
xchg
push
lods
add
xchg
and
pusha
fucomip
cltd
in
and
and
mov
test
dec
cmp
mov
xor
stos
je
call
xchg
gs
dec
push
adc
mov
inc
and
and
xchg
push
pop
call
cs
and
inc
xor
imul
or
fildll
stos
or
movsb
adc
add
lret
nop
in
push
jns
hlt
je
test
mov
xor
iret
adc
cs
sub
outsl
and
inc
xchg
sub
fs
mov
push
adc
xchg
cwtl
sbb
cltd
cld
test
dec
hlt
push
loope
pop
mov
push
and
push
sbb
inc
dec
jno
inc
lahf
and
mov
mov
stc
test
rolb
dec
lret
addr16
mov
pop
mov
icebp
les
add
out
sub
das
xor
or
xchg
or
cmp
or
repz
lock
hlt
mov
cmpsb
pop
push
xchg
sbb
pop
cld
je
movsb
jp
fisubrs
loope
adcb
mov
cmp
or
sub
push
pop
add
stos
pop
pop
jnp
xor
pusha
test
or
mov
cld
adc
sbb
leave
hlt
xor
in
mov
xor
inc
mov
das
imul
jns
shl
pop
lcall
mov
sbb
outsl
cmp
movsb
aaa
xor
cmp
push
lret
imul
test
dec
or
sbb
push
lock
xor
push
cmpsl
mov
jbe
mov
test
xchg
inc
mov
mov
push
icebp
je
inc
sub
sbb
je
pop
clc
pop
sbbb
iret
xor
xchg
test
or
dec
mov
repz
sub
push
cltd
push
lock
sub
pop
cmpsb
push
inc
jb
adc
push
mov
test
cmpsl
sub
loope
mov
jge
loop
cmp
lahf
fcoms
aaa
flds
and
sbb
dec
jne
leave
cs
push
jmp
repz
and
mov
adc
inc
inc
adc
dec
push
xchg
sbb
mov
loopne
jmp
push
rorb
push
inc
or
js
adc
and
cmp
cmp
mov
rclb
xor
pop
fiadds
stos
lock
mov
add
xor
adc
daa
and
pop
out
cmpsb
rcrl
lahf
or
pop
cmp
pop
dec
cli
imul
sub
pop
jns
pop
and
mov
pop
sbb
xchg
aas
and
inc
xchg
xor
dec
ds
inc
mov
push
mov
jbe
iret
in
adc
lcall
add
push
inc
mov
or
or
aad
mov
rorl
adc
dec
xor
xor
pop
mov
out
cmpsl
push
xorb
pop
sbb
dec
mov
xchg
cmp
and
lock
push
stc
pusha
aad
mov
cs
lea
or
jbe
and
mov
mov
out
xchg
mov
and
cmc
repnz
push
jbe
sti
jl
pop
pop
xchg
dec
and
xorl
arpl
inc
or
test
call
pusha
ljmp
add
jae
xchg
jnp
call
add
insl
aaa
adc
nop
or
pop
adc
call
iret
adc
les
cmpsl
push
call
mov
push
pop
jns
leave
mov
in
push
cmp
mov
sub
bound
cli
cmp
inc
and
pop
fs
cmc
cwtl
lret
mov
cmp
daa
fimuls
lea
inc
jecxz
push
or
pop
jl
sbb
mov
pop
cs
in
rcrl
jae
pop
xchg
rorb
jb
jns
jg
cmp
or
or
adc
push
orl
mov
shlb
orb
inc
icebp
and
jge
les
movsl
lds
movsb
xor
rolb
jb
push
cwtl
xchg
mov
mov
stos
nop
mov
dec
sub
pushf
cli
je
adc
xchg
add
mov
push
stos
outsb
scas
push
xchg
lret
int3
dec
dec
mov
sbb
xchg
push
je
xchg
pop
dec
jg
xlat
mov
xor
dec
cltd
fisttpl
cmp
or
lock
call
jl
sbb
sub
sbb
ret
loopne
imul
add
adc
push
pusha
xor
xchg
adc
adc
xchg
add
sbb
xor
lcall
imul
jmp
xchg
or
fiaddl
mov
jmp
xchg
push
cmpl
adc
lds
daa
jmp
jmp
add
arpl
xchg
stos
in
and
and
or
mov
and
jmp
xchg
jle
ss
movsb
ja
or
mov
mov
inc
mov
and
jmp
xchg
jae
and
cltd
test
add
mov
outsl
and
test
cmp
cmp
stos
xchg
and
mov
push
dec
or
pop
je
aaa
and
aam
cmp
push
pop
jnp
notb
rol
or
push
add
inc
pop
arpl
push
fs
push
pop
imul
shll
scas
sub
add
jae
jb
inc
gs
push
adc
repz
jp
and
lret
xor
outsl
arpl
pop
addr16
push
mov
in
pop
sub
sub
jae
sub
arpl
sub
pop
jno
into
push
dec
adc
mov
loop
add
lret
xor
jle
loope
adc
int
or
or
ljmp
shl
lret
inc
adc
fs
popa
mov
inc
ficoms
lret
mov
cwtl
outsb
into
out
push
sti
lods
sub
scas
stos
pop
push
inc
adc
sbb
je
imul
call
sbb
fiaddl
fldl2t
cmpsl
outsb
xlat
sarl
push
or
fdivrs
jbe
inc
inc
sbb
inc
xchg
mov
fiaddl
mov
decl
divl
push
inc
icebp
jb
push
int3
adc
add
lret
dec
popf
cmp
pop
push
jp
jae
mov
dec
stc
sti
push
dec
mov
add
xlat
pop
jo
and
pushf
mov
jg
dec
and
push
push
mov
jne
outsb
mov
repz
push
adc
xchg
dec
xchg
mov
inc
and
jge
and
jmp
popa
sahf
cmp
insb
inc
cmp
mov
outsl
popa
ljmp
fidivs
pop
sbb
xchg
out
lds
aaa
inc
insb
mov
jns
insl
fisttpl
xor
jl
cli
ds
inc
out
imul
shrl
xchg
je
sub
push
inc
mov
and
push
and
push
dec
xor
mov
mov
mov
fdivr
in
fs
xchg
gs
push
fisubrl
test
push
xor
mov
jecxz
fwait
dec
mov
cmp
sbb
popf
test
sub
lods
imull
dec
mov
ljmp
int
add
cmp
push
and
push
cmpl
cmpl
jmp
outsb
jnp
xchg
cmp
stos
aam
sub
mov
mov
fcmovnu
push
movsb
rclb
sbb
cmpsl
cwtl
add
imul
mov
xor
in
dec
mov
jns
mov
xlat
and
push
mov
add
sbb
enter
and
jbe
cwtl
pop
ja
fstps
xadd
subl
in
ret
xchg
and
das
cmp
push
and
jo
push
addb
fistpll
push
add
arpl
adc
js
int
adc
loope
insb
insl
sahf
jae
xchg
mov
add
jb
hlt
lret
or
push
push
xchg
pop
movsb
mov
xor
jne
inc
test
ds
test
push
xor
xchg
or
xor
xchg
add
idiv
dec
in
je
push
jle
dec
cltd
jecxz
sub
dec
pop
stos
jae
mov
jo
enter
cmp
out
out
and
mov
or
and
cltd
add
fisttps
push
loope
adc
mov
les
xchg
les
lret
push
xor
nop
push
mov
pop
xchg
pop
sub
jmp
and
fbld
add
sbb
jp
rcrl
iret
jp
adc
cmp
or
ds
scas
loope
sub
xor
push
sbb
mov
mov
dec
xchg
iret
and
mov
shl
dec
es
pop
pop
push
push
fsubl
aas
fildl
inc
and
inc
roll
ds
roll
sbb
cmc
or
adc
mov
and
pop
sbb
add
stos
subb
movsl
es
sub
pop
lds
addl
lahf
pop
cmp
jns
jg
scas
loope
push
cltd
test
insl
inc
enter
arpl
popf
push
stos
scas
jecxz
dec
xor
fs
or
add
std
sahf
sbb
loop
es
int3
jno
ljmp
pop
inc
push
lods
jb
adc
fwait
das
in
fistps
pop
adc
sub
mov
lret
lea
mov
dec
out
out
aad
xchg
jo
mov
or
test
inc
pop
xchg
push
or
mov
lahf
mov
into
xchg
std
jge
cli
mov
jb
popa
fs
dec
push
jno
jo
sbb
push
mov
leave
mov
mov
dec
mov
cmp
rcr
pop
dec
nop
adc
inc
sbb
outsl
jmp
scas
xor
xchg
xchg
aam
push
lds
negl
das
cmc
cmc
mov
jbe
pop
pop
xchg
xorb
es
mov
jmp
pop
cmp
pcmpgtb
jbe
insb
cwtl
aas
in
les
scas
inc
fsts
ja
stc
inc
shl
xor
fs
or
bound
sbb
lahf
daa
or
add
call
cli
mov
jae
adc
popf
push
leave
pop
lahf
dec
enter
pop
xchg
insl
es
inc
inc
dec
xchg
dec
sub
addr16
lds
push
xchg
adc
jns
mov
cmpsl
push
cmp
sub
xchg
push
out
cld
xchg
xchg
add
dec
cmp
push
and
scas
movups
fs
icebp
fwait
sub
jne
ret
or
mov
or
mov
lods
push
test
pop
jae
repz
add
mov
jne
push
dec
and
outsl
xchg
es
decl
and
shl
mov
and
push
hlt
shlb
push
sub
push
sub
int
inc
lds
lds
pop
nop
stos
pop
or
pop
dec
hlt
das
rol
inc
jg
jae
popa
cwtl
cmp
jnp
es
pop
adc
jno
fs
aad
pushf
pop
mov
sbb
jle
sub
push
and
pusha
lret
push
cmp
ret
dec
loopne
js
cmp
bound
pop
ret
aam
mov
scas
cmp
sbb
and
jnp
loope
or
or
lods
mov
push
test
xlat
pusha
dec
in
xor
cmp
xor
add
jae
popa
data16
fcomps
push
pop
mov
add
imul
inc
jb
inc
data16
icebp
push
fs
xor
outsl
lds
push
push
or
dec
rclb
xor
aad
pusha
jne
mov
jno
sub
xchg
adc
gs
adcb
je
insb
push
pop
mov
mov
addr16
jbe
ljmp
aam
and
push
jge
shl
jo
lcall
lods
xchg
test
and
icebp
scas
arpl
iret
movaps
dec
dec
nop
out
add
inc
xchg
push
jne
xor
inc
jns
jo
push
lods
push
ret
inc
lret
push
and
or
push
push
out
jae
push
rclb
jp
sbb
stos
cmp
int3
cli
dec
cs
or
jmp
ret
aam
inc
fidivl
jno
negb
cmp
pop
faddl
dec
push
mov
mov
jnp
jns
mov
add
ret
sub
jb
test
outsb
xchg
adcb
popf
rcrb
or
push
push
sbb
cltd
jns
sbb
mov
xchg
lret
test
outsb
cltd
inc
mov
push
stos
inc
dec
xchg
adc
mov
xor
mov
bswap
or
out
test
icebp
pop
pop
dec
adc
outsb
push
and
jecxz
fdivr
jns
jns,pn
adc
mov
mov
out
sbb
inc
icebp
popa
sbb
mov
enter
daa
inc
inc
mov
pop
sbb
xchg
sub
xchg
and
fwait
jnp
popa
in
xchg
in
xchg
xchg
jge
dec
shlb
push
sbb
jbe
push
lods
cmp
mov
testl
loop
push
push
jp
mov
fcmovnb
xor
cwtl
push
and
push
int
mov
fists
pop
inc
mov
mulb
rcr
pop
ja
xchg
jb
mov
jg
jnp
imul
jmp
cmp
sbb
push
push
add
pop
mov
cmp
and
and
stos
xor
pop
pop
out
xor
cmpsb
fstpl
jl
jecxz
arpl
out
mov
mov
aaa
fucomp
mov
jl
dec
jbe
inc
add
shrl
pop
sub
pop
repnz
cmc
add
inc
mov
sbb
aam
adc
fsubr
mov
mov
andb
cld
mov
push
cmp
mov
sahf
rcll
aaa
addr16
minps
into
pop
adc
inc
test
mov
dec
jp
mov
mov
andb
test
sub
adc
movsl
xchg
add
cli
sarl
pop
xor
cli
push
and
out
add
sub
jmp
xchg
mov
clc
aad
jg
lahf
add
mov
mov
into
insb
out
add
test
lcall
loopne
aad
in
cmp
out
fmulp
lret
jle
push
cmpsb
repnz
sub
mull
cmp
pop
xlat
adc
mov
daa
or
test
cmp
adc
inc
pop
idivb
sub
add
xchg
and
sub
add
xor
test
cmp
cltd
or
cmp
sbb
inc
bnd
add
jb
inc
sti
jle
dec
mov
addr16
push
lock
pusha
aam
mov
xor
imul
inc
fdivr
xor
xchg
cwtl
cmp
sahf
lahf
add
adc
add
in
or
mov
adc
mov
push
mov
ret
addr16
incb
lret
mov
add
fcmovu
jg
inc
jno
add
ljmp
out
repnz
xchg
xchg
xorl
insl
stos
cmp
adc
mov
push
pop
sti
sbb
js
outsl
jp
arpl
cltd
aad
sbbb
cs
xchg
lcall
pushf
testl
adcl
into
dec
mov
xor
fistpl
subb
out
cmp
dec
and
xchg
andl
xor
adc
mov
jbe
fcomp
xchg
fisttpll
lock
aaa
cmc
imulb
mov
add
mov
and
sub
movsl
add
mov
dec
push
xor
dec
mov
inc
add
push
outsb
mov
sbb
out
xor
mov
sub
or
mov
es
add
lret
aas
cmp
jno
hlt
pusha
rep
lock
and
lds
pop
cmp
jl
inc
aad
inc
movsb
fistpl
jecxz
pop
jecxz
jecxz
leave
dec
add
inc
popl
and
cld
pop
dec
xchg
pop
cvtps2pi
xor
pop
add
dec
imull
adc
mov
jns
cwtl
cmp
jmp
nop
inc
fsts
mov
mov
jo
fwait
cmp
lea
stos
mov
mov
mov
daa
je
mov
xchg
sbb
addr16
lret
mov
ficomps
lahf
push
or
pop
mov
clc
cltd
aaa
push
jno
add
ltr
cmp
mov
add
cmp
jecxz
or
sbb
cmc
aas
mov
mov
into
xor
cmp
mov
mov
test
sbbb
inc
inc
sub
jno
aaa
pop
adc
adc
fcmovb
fmull
add
leave
test
pop
mov
and
pop
xor
push
dec
mov
or
shlb
fdivs
xor
and
ss
ljmp
mov
fcmovnbe
mov
dec
cmc
leave
es
daa
clc
pop
insb
cld
out
add
mov
mov
sbb
repz
lods
shll
jns
movsl
adc
sahf
pushf
add
inc
pop
scas
or
inc
ljmp
sar
add
rcrl
aaa
outsl
add
cmp
arpl
push
ret
lret
xor
inc
stc
sbb
aaa
jno
mov
push
jmp
jne
xor
imul
fsub
inc
aaa
push
inc
test
add
push
mov
mov
or
or
and
xor
dec
hlt
out
inc
dec
fmull
btl
sbb
sub
lcall
pushf
test
xchg
nop
xchg
inc
adc
aaa
lcall
insl
add
fiaddl
rolb
mov
fldcw
mov
xchg
js
xorb
add
adcl
mov
add
jmp
push
mov
xchg
cmp
insl
and
roll
adc
jl
adc
test
out
xchg
rolb
add
jns
mov
mov
cmp
mov
and
mov
mov
jl
xor
jmp
jl
cmpsl
sub
fldl
lret
inc
sbb
adc
add
lahf
sub
xchg
jno
add
jecxz
nop
movsb
cmp
jge
nop
and
xchg
add
icebp
adc
clc
out
fbstp
fcmovu
mov
ret
pop
aaa
push
cli
add
cmpsb
pop
mov
addl
mov
and
push
ja
mov
das
jae
call
xchg
push
popa
sbb
push
add
icebp
dec
mov
rolb
jecxz
add
push
fldenv
lds
aaa
fimuls
sub
bound
repz
cmpsl
stc
stos
xor
and
sub
inc
cmc
xor
js
sbb
or
ljmp
and
aaa
lcall
cmp
inc
sarb
jne
pusha
push
lcall
xor
cmp
add
pop
add
rorl
jg
enter
or
jge
dec
sub
mov
push
mov
inc
xchg
out
sbbb
fisubs
insl
add
adc
testl
cmc
fdiv
cmp
shrb
pop
mov
or
ret
arpl
pop
addr16
dec
icebp
add
xor
adc
test
mov
mov
sbb
xor
es
repnz
popf
cmp
inc
call
sbb
lock
insl
popa
jne
cwtl
xor
add
push
in
mov
mov
pop
aaa
rcl
movsl
call
add
dec
dec
mov
inc
mov
je
scas
and
outsb
push
add
jno
lret
incl
movsb
cltd
lret
lods
pop
ja
stos
mov
loop
lods
pop
js
negl
push
loopne
addr16
orb
pop
int3
add
pop
rcr
xchg
mulb
outsl
clc
outsb
into
sub
mov
or
mov
sub
testl
shlb
ss
test
cmp
fmul
jmp
adc
ror
mov
pop
test
iret
jne
lahf
ret
lea
xchg
loop
ds
add
mov
out
call
fwait
dec
pop
cmp
add
inc
mov
lock
loopne
dec
lret
mov
aaa
mov
xchg
jns
lret
sar
xorb
inc
testl
lock
sbbb
in
mov
aam
inc
arpl
aas
cmp
pop
inc
mov
nop
cmp
int
mov
inc
mov
pop
cmp
sbb
sub
add
fwait
xchg
pop
jbe
mov
push
adc
aad
mov
pop
add
xchg
ret
pop
and
in
jb
pop
mov
and
sbb
stos
xlat
out
cmp
add
xchg
or
mov
xchg
add
mov
sub
mov
sub
jne
imul
cld
ret
aam
add
xor
test
out
mov
pop
loopne
aaa
into
dec
mov
jp
cltd
cmc
mov
jge
test
add
lock
aas
mov
test
pop
pop
cmp
int
cmpsl
cld
sbb
pop
subb
and
popf
aaa
repnz
inc
cld
stos
add
into
aad
sub
jle
aaa
test
pop
mov
xchg
call
aaa
fldl
iret
sub
sub
pusha
push
loop
add
inc
fdivs
out
aaa
ret
aas
shrl
xchg
dec
inc
lods
into
jno
add
sub
iret
cltd
add
clc
mov
xor
pop
out
repz
sti
mov
xor
mov
mov
mov
sarb
ja
outsl
adc
test
xchg
dec
dec
jb
pop
jns
scas
loop
push
hlt
test
xor
shrl
stc
sti
add
cmp
and
add
jg
fsubs
jmp
xor
mov
cmp
adcb
or
inc
or
sub
dec
or
outsb
add
inc
daa
adc
fildll
mov
xchg
imul
je
mov
push
sub
adc
xchg
xlat
popa
xlat
mov
test
loopne
lea
push
jmp
sub
out
xorl
or
enter
xchg
xor
mov
sbb
adcl
add
in
mov
add
ret
adc
sbb
ljmp
adc
jae
mov
mov
cmp
mov
into
addr16
add
sbb
xchg
cmp
xor
jecxz
add
pop
pop
testb
popf
bound
mov
stos
pusha
add
lea
sub
push
ljmp
push
mov
add
push
cmpsl
arpl
mov
insl
fwait
lahf
fidivl
pop
insb
cmpsb
and
and
mov
lahf
xor
fisubrs
push
add
mov
or
out
or
add
mov
mov
mov
std
mov
inc
jg
sbb
ljmp
nop
cmpb
rorl
add
fimuls
lock
cmp
add
push
mov
clc
xor
mov
or
lea
loop
roll
nop
call
sub
mov
jb
enter
out
imul
sub
lret
lods
sub
xor
jle
mov
pop
xchg
push
jge
addl
mov
xchg
ror
mov
cmpsl
mov
push
adc
inc
jno
aam
mov
sbb
ja
sbb
lea
add
adc
mov
xor
jbe
pop
mov
add
cmpsb
repz
paddusw
and
or
movl
jb
push
sub
lahf
fwait
ret
imul
shrl
add
dec
lods
adc
inc
push
xchg
stos
aad
pop
jmp
add
in
roll
and
xor
pop
and
das
shrl
xchg
mov
xchg
and
call
fidivrl
add
mov
mov
lods
fs
arpl
mov
hlt
push
shll
shll
xor
cmpsl
pop
les
xor
xor
insl
fcomp
push
dec
or
mov
sti
and
push
shrl
cmpsb
mov
jle
aaa
aaa
mov
je
outsb
or
hlt
push
push
insl
ja
xchg
sbb
add
and
pop
sub
adc
jne
cld
push
lcall
inc
add
fldl
nop
xlat
mov
cld
xor
lds
decl
iret
jns
xor
std
rcl
mov
mov
and
or
loop
mov
ljmp
sbb
rclb
dec
aaa
cmp
fwait
enter
xorl
das
int3
es
mov
pop
mov
repz
mov
aaa
cmp
cltd
out
xor
jle
iret
imul
xchg
add
int
sbb
or
stos
cmp
mov
loope
add
addr16
icebp
pop
movsb
jno
pop
mov
dec
pop
imul
add
cmp
pop
std
push
sbb
push
stos
jge
mov
inc
std
jp
les
cs
sti
ret
lcall
xorb
fnstsw
jg
scas
jbe
lea
daa
jp
lret
xchg
ljmp
add
pusha
iret
enter
and
popf
cmpsb
add
jge
cld
lahf
add
xchg
add
jno
xor
adc
xor
aaa
push
jnp
inc
es
xchg
add
insb
addr16
pushf
sbb
inc
xchg
in
add
out
pop
popa
add
fstps
jno
dec
in
xchg
adc
sub
cs
dec
fnstcw
inc
movsb
and
in
dec
sahf
xor
add
movsl
fmull
add
mov
aaa
pop
test
inc
aaa
push
mov
pop
cmp
mov
loop
iret
into
rorl
dec
pusha
mov
arpl
lcall
roll
pushf
in
rorb
lahf
nop
mov
pop
sub
add
mov
out
add
rol
aam
xlat
inc
xchg
test
js
arpl
xor
test
fisubrs
loop
fwait
inc
adc
add
hlt
clc
add
mov
dec
mov
nop
loope
das
and
cmp
lods
push
jnp
ret
dec
add
xchg
inc
mov
jmp
incl
clc
daa
add
ja
lods
ret
pop
sub
add
inc
es
shlb
jmp
cmpsl
je
mov
pop
jp
inc
js
pop
out
add
push
inc
jb
dec
ss
inc
push
inc
stc
and
add
adc
add
aaa
or
mov
mov
cld
enter
sub
push
mov
shlb
imul
and
cwtl
scas
dec
xor
cmpsb
inc
push
pop
jbe
jae
mov
hlt
arpl
cmp
push
sub
push
lahf
dec
jge
sar
sub
das
incb
scas
mov
mov
ja
add
scas
ret
xchg
test
nop
cmp
jo
xorb
sub
aaa
push
fwait
test
mov
or
mov
xchg
sub
inc
sub
mov
jle
xchg
mov
enter
sbb
rolb
outsb
xchg
or
jmp
pop
mov
sub
push
and
loopne
iret
adc
shll
rolb
shll
aad
lods
mov
xchg
jbe
push
xor
mov
aaa
xchg
aad
ja
xchg
mov
adc
sarb
ret
aaa
and
outsl
cld
or
lcall
mov
imul
shll
outsl
pop
loopne
dec
bound
std
adc
mov
or
add
loop
imul
sub
std
jne
outsl
inc
cmp
add
mov
and
sbb
mov
rolb
cli
mov
mov
das
aam
rolb
dec
xor
enter
rolb
add
pop
sbb
add
jcxz
fwait
arpl
push
jl
xorb
xchg
daa
data16
sbb
add
loopne
ljmp
mov
mov
cmp
gs
cmp
and
inc
dec
cs
shlb
push
orb
adc
inc
adc
test
cmp
sbb
aaa
sti
push
mov
sub
inc
aaa
fs
cld
sbb
sbbb
mov
rolb
push
pop
mov
movsl
aaa
jb
sar
sbb
lds
aas
out
sub
or
aaa
cmpsl
mov
jae
mov
leave
les
mov
add
sub
add
lock
sub
mov
xor
add
mov
dec
xor
pop
insl
mov
pop
addr16
shll
mov
fisttpll
call
sub
push
test
idivl
mov
shlb
out
jae
cmp
push
pushf
lcall
jo
xor
push
ret
aaa
test
mov
mov
pop
adcb
jne
add
scas
rclb
cmp
and
inc
and
icebp
or
bound
sub
aaa
push
cmp
fcompp
fidivrl
adc
ret
imul
lds
shll
mov
ds
push
cmp
jle
adc
les
pop
mov
in
insb
add
push
add
dec
fldl
mov
add
inc
filds
add
call
push
call
push
jge
add
aaa
push
cld
xchg
jnp
mov
repnz
add
repz
mov
test
aaa
jmp
add
or
push
add
jmp
push
jns
pop
call
mov
mov
dec
addl
and
xchg
mov
inc
jno
sbb
out
mov
xor
mov
sbbl
mov
test
sbb
mov
jge
dec
xchg
mov
add
xor
scas
dec
mov
inc
pop
call
arpl
mov
adc
ret
add
aaa
ror
dec
fisubrs
add
aaa
and
jge
aad
jo
mov
ss
test
push
aaa
and
adc
mov
mov
mov
call
jecxz
out
or
mov
popf
sbb
xchg
aam
sbb
das
and
movsb
ss
inc
stos
add
add
xor
aaa
ja
and
sub
or
or
jnp
pushf
add
aam
xchg
ret
aaa
cmp
xor
jg
push
jno
dec
cmpb
inc
adc
imul
or
fidivl
add
sbb
sarb
shrl
xchg
mov
ljmp
mov
movsb
insb
sar
pop
cmp
push
mov
sub
dec
aam
xor
sahf
push
add
push
add
xchg
out
pop
in
andl
pop
icebp
arpl
fidivrs
test
movsl
cmp
cmp
lods
cmp
jg
jmp
or
sarl
into
aas
add
aaa
int3
push
addr16
xchg
adc
sub
mov
cmp
adc
add
mov
cmpsl
add
adc
ja
je
sbb
jp
xor
xchg
push
ror
ja
mov
cmp
add
cmp
push
add
mov
cltd
pushf
mov
push
add
mov
pop
jecxz
lea
jp
mov
dec
jl
push
mov
ror
add
jbe
aaa
or
scas
pop
mov
jo
mov
les
add
adc
add
das
mov
mov
incb
dec
add
fisttpl
shlb
jb,pt
inc
dec
jbe
add
ret
cmp
dec
mov
ss
jge
roll
adc
pop
adc
push
jecxz
xchg
shl
gs
xor
adc
xor
bnd
mov
sub
add
pop
sub
mov
adc
mov
inc
out
movb
loopne
add
cmpsb
and
and
jp
add
aaa
or
or
mov
je
jo
xor
cmpsl
aad
sbb
and
stos
cmp
add
imul
pop
jbe
push
je
pop
mov
inc
test
outsl
leave
dec
pusha
add
lret
cmpsb
lea
cld
push
adc
xchg
lds
jecxz
insb
out
sbb
shrb
pop
cmpsl
in
pop
push
add
mov
movb
and
push
movsl
cs
test
add
inc
xor
push
pop
add
pop
jecxz
add
jo
inc
sub
iret
or
shll
inc
jl
add
imul
adc
push
mov
push
sbb
jecxz
xchg
or
jg
arpl
in
cmp
movl
jg
lret
imul
jge
mov
jle
mov
xlat
add
lods
and
mov
pop
sub
insb
xor
test
icebp
and
cwtl
inc
cmp
int
pusha
aaa
sbb
fnstcw
push
or
dec
xchg
push
int3
ficomps
mov
imul
addr16
insb
mov
ror
aaa
add
outsb
rorl
aaa
add
push
bound
jo
pop
xor
add
push
ja
pop
fists
add
fwait
outsl
jl
cmpsl
mov
iret
dec
jle
dec
cmpsb
movhps
rolb
aam
mov
pop
shrl
test
xor
jmp
arpl
sub
cmpsl
push
aaa
mov
sti
or
mov
test
dec
nop
mov
fdivl
add
sbb
push
filds
movsl
ds
testl
add
imul
pop
bnd
add
sub
leave
add
add
or
jns
mov
and
or
add
nop
add
ja
adc
mov
cmc
push
les
dec
pop
inc
xorb
sbb
je
xchg
pushf
shlb
xlat
sbb
cmpsl
scas
lahf
outsl
add
mov
aas
sti
push
out
add
notl
sbb
push
imul
mov
xorl
add
jbe
pop
mov
shlb
push
xor
sub
into
xlat
ja
ja
mov
lahf
fsub
jle
test
mov
hlt
xor
push
jl
nop
nop
ret
or
mov
mov
sbb
inc
inc
sub
das
dec
cmp
mov
in
add
imul
roll
inc
add
sbb
fisubl
pop
fdivrl
xor
in
lock
add
loope
inc
or
add
es
push
xor
shll
dec
mov
push
mov
mov
jbe
iret
cli
and
xor
sbb
aaa
dec
clc
xchg
add
xlat
lea
cmp
or
jle
mov
call
clc
int
aaa
add
xorb
movq
je
inc
inc
icebp
mov
dec
fildll
jno
cltd
loop
mov
xchg
movsl
nop
aam
roll
jno
lahf
popf
aas
ljmp
inc
imul
sbb
add
into
int3
mov
adc
ja
stos
jp
sbb
stos
mov
mov
mov
lcall
imul
sub
or
cmpsb
xorb
lret
ds
fidivrs
cwtl
es
add
and
sub
fcomps
add
xchg
mov
xor
pop
loopw
adc
lock
inc
pop
ljmp
aaa
pop
jbe
sahf
add
add
push
shll
add
mov
movsb
jb
repnz
aas
cmp
sub
add
adc
or
out
sub
mov
sub
jl
push
xor
incl
mov
cmp
loopne
ret
ret
sbb
inc
inc
arpl
pop
adc
aaa
add
movsb
add
push
jb
inc
in
nop
mov
enter
add
mov
push
js
or
stos
mov
xor
pop
push
sub
add
out
add
imul
sbb
pop
mov
mov
jle
add
aad
mov
or
cmp
pop
or
ds
mov
inc
adc
inc
xlat
mov
sub
cmp
aaa
rcrl
mov
push
fsubp
aaa
imul
lcall
dec
mov
jne
add
cmp
and
sub
ss
pmaxsw
sbb
mov
movb
inc
push
or
mov
scas
cltd
dec
mov
push
jbe
mov
add
imul
add
cmp
mov
aas
addl
into
ret
subb
ret
lcall
lock
add
int
cld
push
mov
lods
lods
loop
add
add
lock
xchg
inc
or
mov
inc
jne
scas
xor
push
jb
push
cmp
mov
xchg
fiaddl
movsl
push
fnstcw
cmp
xchg
xchg
jns
aas
mov
xor
inc
mov
sbb
add
mov
push
pop
cmp
out
mov
fucomi
jmp
adc
mov
aas
cmpl
inc
imul
xor
gs
push
xchg
xchg
adc
fwait
bound
in
sbb
adc
mov
add
sahf
or
lret
and
sbb
cmp
aaa
shll
cmpsl
sub
mov
sub
cli
addb
mov
shll
mov
push
hlt
out
mov
sti
addr16
in
movl
jmp
mov
mov
sarl
mov
and
sbb
push
addl
fdivr
shlb
popl
in
popf
adc
fwait
add
push
add
movsb
xchg
and
and
jb
pop
mov
xchg
loopne
adc
daa
sbb
cs
pop
add
enter
loopne
xchg
jecxz
sbb
pop
push
ret
inc
sub
stos
int3
add
mov
ss
sub
add
std
repnz
aaa
lds
gs
add
pop
or
add
mov
lock
xchg
adc
loopne
mov
dec
hlt
mov
testl
gs
cli
lods
insb
inc
adc
aaa
mov
idivl
ss
adc
divl
test
add
mov
aam
adc
insl
add
cld
inc
adc
aaa
push
fbstp
stos
test
sti
xor
cmpsl
aad
movsl
shrb
ljmp
cli
add
inc
cmpsb
adc
pusha
add
mov
mov
call
jp
add
aaa
jmp
cltd
ret
outsb
insl
iret
gs
xchg
cmp
cmp
ret
and
sti
bound
add
mov
mov
out
arpl
xor
push
je
add
jge
vhaddps
popf
fs
jbe
adc
lods
imul
and
in
dec
push
add
adcl
fcompl
mov
mov
xor
mov
mov
xor
icebp
scas
scas
push
mov
add
mov
lahf
push
lods
or
xchg
push
stos
push
add
jbe
sub
add
mov
xor
pop
in
cmp
mov
iret
mov
add
push
cli
add
call
mov
push
inc
jl
add
repz
jle
rcrl
ret
aad
push
add
pop
lds
pop
fmull
and
mov
mov
popf
add
add
ret
push
popa
push
add
xchg
add
aaa
lods
scas
lea
xchg
adc
cmc
xchg
mov
add
out
add
push
aaa
xchg
add
add
sbb
inc
ret
xlat
add
and
or
insl
jecxz
add
and
dec
fwait
cld
cmova
jecxz,pt
shl
jb
xor
push
clc
pop
add
ss
pop
ret
sub
mov
or
movsb
call
sbb
mov
adc
loope
cmpl
aad
and
pop
cmpsl
mov
lret
cmp
orl
pusha
mov
push
dec
cmp
add
xor
sarl
pop
cmp
pop
sbb
fldt
push
popf
inc
ss
push
add
enter
divl
add
mov
fmuls
adc
or
jbe
call
enter
mov
frstor
aaa
xchg
add
sub
adc
fldt
xchg
insl
jns
add
xchg
add
jbe
sbbb
dec
inc
out
push
popf
enter
inc
jl
sub
jg
roll
hlt
jns
and
or
lret
push
cmpsl
jo
xor
in
pop
aaa
push
sub
xchg
mov
iret
fldcw
push
sub
sbb
mov
mov
jmp
sub
sbb
cmp
jg
and
pushf
jns
cltd
data16
add
or
adc
jl
cmp
cltd
test
mov
bound
add
jno
shl
jne
ret
jg
popa
and
call
scas
repz
test
jge
mov
mov
das
popf
cmpsb
aad
cmp
add
dec
cmp
mov
sahf
add
aaa
outsl
lods
pop
daa
mov
or
movsl
adc
dec
ja
test
jp
arpl
jl
jmp
add
xor
or
add
push
shlb
lcall
sub
bound
add
pop
popf
xchg
pusha
push
jecxz
test
aaa
rol
addr16
mov
fisttpll
or
adc
add
fs
add
aam
add
mov
rorl
decl
addb
sub
mov
into
cli
mov
ss
enter
and
stos
loop
mov
or
xchg
not
xchg
mov
pop
add
stos
xchg
test
jbe
mov
xor
add
into
adc
and
add
loopne
sarw
and
lea
pop
daa
je
add
jge
push
adc
leave
add
aaa
inc
push
xor
out
inc
aaa
dec
or
inc
shl
aaa
cmp
cmpsl
cmp
icebp
mov
xor
insb
xor
jnp
test
cs
add
ljmp
mul
mov
mov
xor
pop
dec
push
cmp
jmp
inc
xlat
or
add
stos
jo
mov
cmp
rorb
roll
push
aaa
add
ret
add
shl
lds
and
fisubl
fstl
popf
lods
aaa
add
mov
pop
dec
clc
and
dec
jp
or
pop
cmp
add
xchg
cltd
movb
lahf
inc
fwait
xchg
roll
mov
fiadds
add
pushf
xchg
jbe
aaa
sbb
clc
xor
cmp
xchg
insl
stos
add
xchg
aas
outsl
add
mov
imul
pop
mov
push
dec
dec
xchg
pop
push
shll
test
inc
inc
aaa
rcrb
pop
jle
aaa
jge
clc
fistl
mov
aaa
out
or
ret
lea
mov
cmp
pop
or
or
push
pusha
cmpsl
test
lods
xor
shl
mov
test
pop
push
cltd
das
mov
jb
add
sbb
push
mov
movsl
xchg
add
inc
xor
aaa
push
pushf
fisubs
cwtl
xchg
cmpsl
js
ret
jmp
scas
or
or
cmp
and
xor
jecxz
cmp
cmp
aaa
bound
cmp
gs
mov
push
lret
sbb
jbe
mov
mov
inc
xor
lods
jp
fsubr
fwait
xor
add
fsubrl
mov
negb
pop
aad
add
insl
or
xor
dec
mov
jg
inc
pop
inc
add
pop
xchg
mov
adc
add
bound
outsb
jbe
cmp
scas
js
cmp
sub
add
cmp
pop
fcmovb
xchg
pop
mov
pop
clc
sub
cs
sub
add
stos
push
scas
add
xchg
pushf
xor
fistps
mov
sahf
stos
cs
and
je
mov
inc
xor
xor
jb
movsb
in
adc
inc
cmp
in
stc
jne
ret
aaa
stos
dec
test
xchg
inc
daa
andb
rolb
xor
fs
cmc
aaa
add
inc
push
sbb
dec
pusha
rcrb
iret
incl
stos
xor
add
mov
cmc
push
cmpsl
xchg
popf
bound
xchg
and
xchg
pop
mov
popf
lret
push
lods
inc
sub
fisttpll
mov
ss
cwtl
orl
sarl
push
arpl
in
ret
xchg
add
arpl
sbb
push
cltd
mov
mov
mov
add
jle
add
push
outsl
pop
lea
pusha
lods
dec
push
sbb
push
rclb
aaa
shr
and
test
fisubrs
sbbl
or
jne
and
add
push
push
imul
adc
dec
in
push
clc
test
adc
lahf
sub
and
aas
xor
mov
test
mov
and
js
sarl
adcb
dec
adc
cli
arpl
adc
data16
lods
mov
dec
pop
shll
add
or
ret
mov
cmp
add
mov
xchg
aam
adc
insl
testl
xor
test
test
sub
nop
lds
mov
pop
mov
push
xor
mov
ja
add
dec
aas
loopne
and
lods
ss
cli
scas
lret
xor
stos
hlt
filds
inc
cmp
fcomps
aaa
add
pop
pushw
xchg
push
inc
cmp
mov
mov
jecxz
dec
cwtl
mov
mov
cmpb
test
lret
jbe
push
lret
inc
add
sub
scas
sarb
and
ret
push
aaa
sbb
xchg
jge
pop
std
mov
cmpsb
cmpsl
add
push
es
daa
cld
or
add
or
mov
mov
loopne
sti
xchg
in
adc
jnp
adc
lret
fildl
mov
bound
fisubs
push
dec
insl
lret
aaa
pop
lods
lods
pop
adc
lahf
repz
adc
add
inc
push
negb
xor
jnp
aas
inc
cwtl
orb
stos
cmp
push
add
faddp
jbe
aaa
cmp
mov
add
lods
xchg
cmpsl
aaa
jns
fnstcw
dec
cli
add
adc
test
cltd
mov
lods
je
data16
stc
fwait
sbb
ja
xchg
enter
mov
and
int
sbb
mov
lahf
sbb
flds
xchg
fwait
jmp
add
sbb
push
lahf
push
ljmp
mov
and
stos
mov
jmp
sahf
test
dec
out
fwait
cld
ds
aaa
dec
fidivrl
adc
cli
test
cmp
cmpsb
sbb
xchg
dec
lea
pop
xor
xor
shll
xor
aaa
mov
shrb
cmp
add
and
adc
xor
ds
xor
js
xorl
mov
lret
or
ja
jae
add
pop
jno
push
cmp
and
add
push
or
xchg
dec
out
adc
and
jmp
mov
add
outsb
and
faddl
test
mov
sbb
xor
ret
arpl
clc
jp
mov
mov
aaa
mov
mov
sahf
adc
out
push
jmp
sarl
push
fisubl
mov
mov
mov
pop
fists
push
lea
adc
mov
mov
clc
orl
cmp
pop
subb
pop
ret
jecxz
fwait
adc
cli
or
mov
fiaddl
mov
lea
fs
push
sbb
mov
imul
inc
or
adcl
imul
int3
push
dec
adc
arpl
mov
movsl
fcomps
aaa
hlt
mov
push
and
mov
jmp
out
push
push
shlb
and
je
sub
stc
cli
push
or
mov
mov
add
cmpl
xchg
xor
aas
cmp
push
jae
mov
push
adc
aaa
or
and
arpl
add
xor
das
inc
xchg
sbb
hlt
andl
adc
aam
setl
andb
add
jmp
ffree
pop
pop
aaa
add
mov
or
or
or
mov
add
sub
pop
add
movsl
xchg
mov
sbb
add
lahf
sub
mov
dec
fistpll
mov
lcall
inc
ss
adc
dec
push
xchg
or
mov
add
mov
subl
movb
lcall
mov
imul
mov
daa
into
lahf
push
add
aaa
xlat
aaa
push
inc
call
lds
popa
lock
mov
or
lea
sbb
je
andl
xor
mov
cmp
stos
popa
pop
push
cmp
xchg
mov
adc
push
add
or
adc
cmc
stc
mov
inc
dec
cmp
jo
xstore-rng
cmpsl
add
mov
xchg
cwtl
push
aad
add
mov
push
dec
cmp
push
add
iret
test
jo
sbb
das
sub
mov
mov
inc
push
cwtl
rcll
xor
adc
lods
jo
pop
cwtl
fisttpl
fisttps
xchg
adc
cwtl
lds
mov
out
add
test
mov
add
xor
pop
jle
add
mov
insb
jae
jne
aaa
and
dec
mov
out
sbb
adc
arpl
jle
dec
push
push
cmp
sbb
leave
dec
fiadds
arpl
incb
aaa
inc
pop
loope
aas
pop
aas
mov
or
xchg
xchg
std
cld
pop
cmp
add
or
add
mov
test
fstp
hlt
or
cmpsl
out
xchg
add
adc
adc
pop
cmp
xlat
imul
ljmp
cs
cltd
add
hlt
xor
mov
sub
addl
jne
push
mov
dec
fstpl
mov
push
inc
and
jmp
jle
jns
inc
fisttpll
or
mov
or
jae
mov
mov
xor
adc
fisubl
jnp
pop
pop
lea
add
imull
mov
aaa
add
add
mov
add
inc
loopne
mov
fisubl
dec
mov
mov
loope
cmc
in
lea
out
ret
aaa
lret
add
jne
sbb
cmp
pop
mov
das
dec
push
repz
mov
cmpsb
mov
mov
test
out
mov
jns
pushf
jge
fdivl
int3
shlb
cmp
pop
dec
mov
jp
lcall
cmp
pushf
mov
fldenv
or
or
test
addb
mov
add
jno
out
cli
ret
push
or
pop
fcoml
sub
sahf
call
jecxz
in
add
mulb
add
pop
or
movsb
push
inc
testl
ja
aaa
or
sub
add
add
andb
cmpsl
xchg
add
add
mov
ss
sub
mov
mov
jb
cmp
call
mov
aas
lcall
lds
mov
xor
add
jle
mov
add
into
push
rcrb
sbb
stc
ljmp
add
mov
orb
hlt
sub
fsubl
cmp
xor
mov
out
add
xchg
cwtl
jge
out
mov
or
mov
aaa
pop
das
mov
gs
cltd
test
inc
aaa
xor
dec
and
mov
stos
jae
rcrl
jno
jecxz
cmpsl
add
ja
add
or
nop
pop
shrb
add
lcall
leave
or
add
sub
mov
js
int3
mov
jmp
add
enter
daa
mov
adc
inc
addb
xor
jnp
jno,pt
mov
add
mov
xchg
mov
push
rcrl
push
xorb
cmc
xor
add
sahf
sarl
andb
stos
psllq
ret
jg
lock
jae
les
stc
fwait
jnp
out
jbe
or
cld
lret
cmpsl
pop
fs
and
sbb
shll
test
mov
outsl
inc
jno
sbb
or
add
imulb
movsb
ror
subl
mov
jo
adc
mov
or
cmc
lcall
add
imul
push
add
push
mov
push
push
add
mov
push
sahf
jno
add
jle
lds
jb
pop
enter
mov
aaa
or
inc
sbb
or
loop
test
cmp
dec
clc
add
imul
lcall
shlb
cmp
mov
pop
add
lahf
pop
loopne
adcl
cmp
xchg
adc
adc
xor
testl
mov
or
mov
add
repz
in
and
push
pushf
xor
xchg
fsts
sbb
aad
pop
sar
add
and
ja
out
add
loopne
mov
iret
mov
lods
cmp
sbb
or
fiaddl
push
lret
test
mov
pop
pop
testl
sti
mov
adc
sahf
xor
sahf
xchg
inc
lret
jnp
mov
mov
cltd
outsl
hlt
mov
aaa
adc
jb
sub
sbb
sub
mov
jo
add
inc
and
add
mov
cmp
pop
sub
push
and
adcl
add
lds
clc
adc
daa
pop
pop
imul
xchg
jp
dec
pop
or
mov
sbb
outsl
add
sub
jns
ja
icebp
sub
je
test
pusha
mov
mov
xor
out
xorl
pop
scas
and
loop
scas
xlat
addr16
cli
jae
pop
inc
cmp
stc
ljmp
pop
test
rolb
movsb
add
dec
push
mov
mov
gs
mov
jl
cmpsb
aaa
lea
or
jo
inc
add
and
pop
add
add
xchg
jmp
mov
repz
pushf
call
xchg
in
arpl
mov
sub
test
aad
sub
aaa
fwait
adc
push
add
and
add
gs
inc
mov
test
lahf
arpl
out
sub
add
arpl
push
lret
add
popa
jl
loope
dec
icebp
mov
gs
cmpl
lea
ret
popa
mov
addl
test
push
cmp
lcall
push
popa
inc
scas
add
xor
push
es
add
mov
or
add
xchg
or
out
mov
loop
dec
cmpl
fbld
aaa
icebp
xchg
jae
pop
test
push
and
jge
gs
adc
add
rcrl
pop
adc
push
in
movsb
ja
loope
inc
add
lret
mov
add
outsb
dec
sbb
ds
leave
xor
push
jne
test
add
aaa
push
out
pop
jp
jns
ficoml
sbb
sbb
movsl
sahf
add
xchg
and
and
icebp
out
jbe
iret
add
cmp
mov
mov
xor
add
ja
stos
stc
fimuls
int
pop
in
xor
pop
add
aaa
push
or
popa
sti
scas
aad
cmp
sbb
adc
add
jb
mov
pop
push
jmp
cmpsb
dec
push
aaa
sbb
sbb
repz
add
pop
lahf
in
cmp
xor
push
ret
mov
cld
dec
inc
std
mov
push
jns
sbb
sub
adc
js
pusha
sbb
mov
mov
in
mov
inc
or
add
fidivrs
test
cmpsl
dec
dec
pop
aaa
sahf
dec
movl
cwtl
mov
push
sbb
add
sbb
test
mov
scas
jmp
rcrb
out
stc
pop
lds
addl
das
push
mov
aaa
lds
cmp
add
sub
inc
arpl
dec
adc
cltd
pop
jae
push
add
in
adc
pop
jnp
addr16
ja
pop
xor
jno
rorb
cmc
aaa
add
ret
popf
xor
or
or
and
adc
lahf
add
in
mov
cltd
dec
in
stos
cmpsb
or
inc
aaa
lea
xor
jb
mov
mov
sbb
jg
mov
dec
test
sub
mov
adc
inc
aaa
inc
and
stc
xchg
push
scas
aam
popf
inc
pop
pop
inc
mov
add
jmp
loope
stos
push
mov
arpl
cmc
dec
adcb
jo
cmp
jb
inc
cmp
call
xor
sbb
mov
mov
mov
mov
dec
shl
add
cwtl
aad
mov
bswap
sbb
add
addr16
push
add
mov
mov
arpl
dec
andb
mov
arpl
out
arpl
add
dec
add
fisubrs
push
add
repz
aaa
insb
loope
ret
add
dec
mov
add
cmp
pop
adc
cmp
mov
and
add
andl
clc
mov
add
aaa
xor
cmp
data16
or
mov
mov
push
inc
popf
sarl
adcb
in
mov
in
add
push
idivl
cmp
hlt
inc
dec
lods
in
aaa
js
xchg
sbb
adcb
dec
mov
add
and
inc
push
fldcw
fwait
aaa
aas
fs
xchg
pop
test
movl
cltd
test
pop
push
push
dec
scas
repnz
adc
ret
add
cmp
adc
xor
xchg
paddb
fsub
je
es
mov
sub
xor
mov
inc
mov
shlb
and
pusha
adc
icebp
cmp
xchg
aas
aad
adc
sbb
add
cmp
pop
inc
movl
sbb
shlb
aaa
insb
ss
dec
insl
push
mov
add
ja
das
in
sbb
fmuls
lahf
cmpsb
cmp
aaa
jnp
cltd
je
xorl
mov
and
inc
or
pushf
sti
jno
add
pop
xor
pop
aaa
aas
xchg
mov
out
mov
out
ret
scas
in
push
out
push
mov
push
ret
add
bound
lock
faddl
mov
int3
cmp
lock
lds
jno
fldlg2
pop
and
fnstcw
add
sbb
mov
sti
mov
push
mov
cmp
scas
data16
jl
xchg
ljmp
add
fst
sub
repnz
push
insb
out
inc
xchg
cwtl
mov
lret
pop
mov
es
stos
gs
mov
jmp
dec
outsb
mov
in
addb
mov
arpl
fstps
aad
mov
aaa
ss
enter
push
xchg
andb
and
push
jg
add
scas
add
xchg
add
sbb
cmp
mov
mov
bound
cmp
push
scas
xchg
dec
add
push
jecxz
cmp
add
repz
data16
je
aaa
add
sub
negb
add
mov
add
mov
clc
add
aas
stc
jne
sbb
arpl
jne
lds
rorb
mov
imul
std
frstor
bnd
aaa
xlat
lods
pop
sti
push
push
nop
popa
cmp
daa
and
mov
dec
add
xor
cmp
sbbl
xor
or
cmpsl
push
pop
loopne
aam
xchg
mov
or
add
and
imul
lahf
add
bound
lds
mov
xchg
add
hlt
fs
aad
enter
cmpsl
mov
imul
arpl
pop
jecxz
fnsave
push
add
jnp
add
ret
es
jge
sbb
movsl
xor
cwtl
mov
mov
lds
xchg
xor
pop
call
mov
inc
movsl
inc
and
sub
mov
push
add
or
mov
incl
ja
leave
dec
jmp
and
add
cmp
xchg
sub
xchg
fsubs
pop
lock
mov
add
ret
test
lods
mov
sub
mov
push
pusha
add
cld
add
push
gs
lahf
xlat
nop
sub
sbb
aaa
add
push
sbb
mov
pop
sub
add
pop
popf
bound
iret
outsb
arpl
add
jecxz
xor
bound
add
mov
jbe
nop
stos
inc
add
jb
jne
aaa
mov
pop
data16
pop
add
adc
lcall
sub
add
rcrl
or
movsb
aaa
fdivs
movsb
pushf
lea
jae
xchg
ss
pop
sti
aaa
add
call
mov
fwait
or
push
in
jns
xor
cld
add
cmp
les
xor
outsb
jno
mov
ljmp
clc
hlt
xchg
jo
fisubrl
fisubrl
out
pop
aaa
jno
loopne
inc
push
xchg
inc
pop
aaa
add
adc
in
cmpsl
fcmovu
push
cmp
inc
xchg
pop
movsl
into
pop
cmp
outsb
add
ja
adc
js
aaa
xchg
nop
ja
push
mov
scas
jmp
popf
sub
mov
in
je
or
mov
add
and
mov
loope
add
mov
cmp
aaa
insl
or
out
push
push
xlat
cmpsl
fcomps
mov
lds
mov
adc
mov
aam
aas
mov
int3
cmpsl
xchg
mov
movsb
jns
pop
sldt
pop
cmp
daa
fists
and
fnsave
adc
add
cmp
lret
bound
jnp
cmp
ret
add
sub
xlat
add
je
in
repnz
push
adc
add
mov
movl
gs
add
insl
push
and
add
or
cmp
sub
mull
push
jmp
add
in
sti
sbb
add
call
push
xchg
scas
sub
seto
stos
lret
adc
cwtl
sbb
in
sub
adc
jmp
jns
mov
sti
cmpsb
mov
mov
push
jecxz
add
imul
or
xor
mov
mov
sbb
xchg
shlb
addr16
inc
and
cmpsb
mov
mov
ret
push
mov
sbb
movsb
aad
add
out
jg
mov
aaa
fwait
mov
lods
sbb
popf
dec
push
fsubl
sbb
fwait
or
cmpsb
jo
mov
push
scas
cmc
mov
dec
sbb
inc
outsl
add
out
push
mov
push
and
sub
mov
inc
add
mov
das
imul
push
mov
jbe
pusha
cmp
mov
scas
or
arpl
mov
hlt
adc
inc
jo
outsb
add
stos
loop
xchg
jo
add
xor
ds
mov
aas
out
movsb
fs
cmpsb
mov
out
push
add
scas
and
add
lods
xchg
jae
cmpsl
inc
lds
or
add
jl
xchg
add
rcr
push
push
imul
cmp
or
push
insl
outsb
xchg
imul
mov
mov
das
and
cmpsb
dec
sub
or
test
sbb
jnp
pop
mov
scas
mov
pushf
add
aaa
add
les
daa
inc
sbb
loope
sbb
mov
cltd
aam
add
jmpw
dec
aaa
adc
xor
sahf
sub
sub
inc
sub
sar
loope
cmp
arpl
shrl
mov
lock
and
ret
js
push
mov
sub
and
add
fdivs
aaa
dec
mov
fwait
mov
mov
cmp
shrb
push
ljmp
ror
lret
imul
rcrb
aad
mov
add
jg
add
outsl
sbb
jno
lods
mov
cmp
aaa
add
jnp
add
lahf
scas
cltd
in
ffreep
add
pop
insl
add
mov
xor
add
sbb
dec
sbbl
sbb
pop
mov
outsl
dec
add
loop
mov
mov
dec
or
or
mov
imul
or
push
daa
adc
lods
loopne
or
ss
testl
movsb
jg
cmp
xor
mov
leave
pop
les
adc
add
inc
fisttpll
inc
push
in
push
fsubrs
jp
xchg
ret
add
jge
cld
and
xlat
or
cmp
or
cmp
cltd
mov
add
sbb
mov
pushf
pop
arpl
push
fistpll
movsl
pop
repz
pop
jbe
jmp
and
adc
sub
xor
insb
add
loope
test
push
aaa
sub
mov
daa
mov
mov
test
inc
in
je
stc
sahf
add
pusha
xor
fbld
jo
aaa
or
aaa
dec
andb
ud2
cli
mov
mov
aaa
add
icebp
in
cltd
xchg
xor
sbb
aam
adcl
cmpsb
mov
add
add
ja
mov
popf
pop
aaa
push
and
mov
movsb
jecxz
sbb
mov
fadds
loope
aaa
xchg
fcoml
in
ljmp
subl
and
loopne
sahf
aas
jp
xor
decl
lret
rcrb
push
stos
jge,pt
mov
mov
aaa
jnp
xor
outsb
ljmp
sub
call
aaa
testl
daa
mov
lret
and
xor
das
add
mov
aaa
inc
or
dec
scas
push
aaa
add
cmp
xor
push
mov
rclb
aaa
out
adc
fwait
add
pop
and
sub
add
lds
adc
rorb
mov
xor
add
or
jns
fstpl
add
fwait
pushf
mov
es
aaa
pop
test
fwait
loopne
add
arpl
adc
jmp
mov
cli
divb
add
pop
pop
fists
lcall
add
testb
sub
paddsb
imul
sbb
add
icebp
sbb
neg
movl
push
ljmp
aam
out
les
pop
inc
jae
pop
xchg
add
inc
cmp
roll
es
mov
push
lds
fists
mov
jae
mov
xor
and
or
stos
jno
xor
and
inc
pop
testl
sarl
jnp
inc
out
rcll
push
or
xchg
jecxz
jno
mov
add
pushf
pop
jl
inc
arpl
pop
adc
cltd
push
add
pop
imul
cmp
idivb
aaa
push
xor
inc
add
es
mov
add
or
aam
mov
pop
imul
ljmp
movsb
mov
push
mov
xor
pushf
sbbb
xchg
bound
push
xor
add
fldt
add
sbb
jp,pn
decl
in
add
lahf
shr
imul
jecxz
fildl
int
adc
mov
sbb
test
fildl
test
dec
or
adc
xor
pop
mov
inc
in
mov
mov
push
sbb
or
ss
mov
pop
xor
mov
repnz
sbb
das
mov
cmpsb
mov
mov
pusha
jle
dec
mov
xchg
aad
or
shrb
push
mov
or
add
aam
cmp
andl
jecxz
jnp
mov
int3
cli
movsb
fbstp
adc
xor
adc
sub
xor
sti
mov
jmp
jae
xor
sbb
pop
out
enter
loope
pop
popa
adc
xor
cmp
sti
mov
cmpsl
iret
stos
sub
in
popf
pusha
add
stc
and
push
cld
pop
inc
mov
outsb
xor
xchg
dec
loopne
mov
and
rorb
or
and
je
icebp
inc
add
sub
rclb
ds
add
hlt
cmp
pop
dec
icebp
jb
ds
sbb
push
incb
cmpsb
or
aas
je
mulb
movsb
inc
sub
mov
xchg
sub
orl
adc
mov
jg
insb
ret
cs
add
adc
imul
divl
jle
jge
pop
or
inc
cmp
int3
test
adc
pop
xchg
dec
add
jg
cmp
push
arpl
cld
aas
adc
insl
inc
xor
ficoml
cmpsl
daa
jo
or
movsl
cwtl
dec
mov
xchg
mov
notl
dec
and
mov
xor
hlt
sub
adc
inc
fcoms
aaa
cmp
lods
xor
jge
mov
aaa
fists
or
xchg
lret
xorb
cwtl
inc
cli
sub
negl
mov
add
daa
outsl
sub
cmp
mov
add
lds
mov
dec
pusha
mov
xchg
in
adc
sub
pop
xor
imulb
push
dec
aaa
pushf
ret
pop
mulb
mov
jp
add
jl
test
mov
mov
jne
mov
sti
insb
pop
insb
test
add
mov
daa
das
inc
push
add
mov
pop
fs
iret
stos
mulb
mov
stos
loopne
add
dec
dec
add
and
adcb
test
fsts
mov
aam
aad
sbbb
jg
aaa
icebp
sub
xchg
sub
pop
aaa
add
in
fdivrl
xchg
out
addb
sbb
loopne
lds
mov
mov
add
jecxz
sbb
add
jp
call
iret
pop
ficomps
push
stos
add
xlat
add
push
sarl
mov
ret
sbbb
mov
xor
movsl
mov
adc
xor
ss
xchg
xor
repz
aaa
inc
xor
inc
add
int3
loopne
add
xor
xchg
mov
dec
rol
mov
inc
jmp
push
add
jg
insl
add
insb
jp
mov
add
stos
mov
add
stos
ret
cmpsl
xor
or
jmp
lcall
shll
dec
jne
and
push
bound
jns
imul
out
inc
mov
aam
clc
add
xchg
rcrl
jl
add
add
fiadds
aaa
rclb
sbb
mov
lahf
mov
xchg
add
jg
add
test
jg
xorl
add
push
xlat
js
orl
addb
push
insb
pop
in
addl
and
dec
adc
neg
roll
ret
mov
xor
cmpl
mov
xor
outsb
xor
mov
mov
add
aad
mov
dec
pop
add
xor
or
add
mov
andb
dec
outsl
scas
jbe
dec
les
int3
test
pop
fsubs
jmp
fs
aas
add
xor
xlat
sbb
cltd
lcall
add
das
aaa
push
cmp
pop
adc
add
xor
roll
loopne
add
push
sub
xchg
adc
sub
adc
popf
cltd
add
sub
es
mov
cmp
aad
xchg
enter
sarl
or
sti
add
add
sti
stc
rcl
inc
outsb
xor
andb
out
pushf
mov
out
jmp
pop
imul
xlat
jmp
in
xchg
add
jmp
mov
fstpl
call
dec
mov
aaa
dec
push
xchg
jnp
js
xchg
pop
inc
and
jbe
or
xchg
aam
sbb
xlat
or
fwait
mov
sbb
add
adc
mov
les
adc
sub
adc
jl
inc
add
cs
jno
cmp
sub
inc
in
pop
loope
ds
add
fstpl
jo
aaa
add
push
jb
add
jo
test
mov
rclb
add
xchg
call
pop
xchg
clc
xchg
mov
xchg
add
loope
adc
mov
daa
movsl
pop
add
inc
xchg
sub
sbb
mov
daa
sbbl
pop
push
in
es
xor
push
mov
add
ficoml
sar
mov
insl
pop
addb
sahf
ljmp
push
add
rolb
pop
push
dec
fsubrl
mov
cmp
stos
repz
mov
inc
shll
call
mov
adc
add
aaa
adc
jmp
xchg
sbb
mov
or
add
daa
adc
bound
iret
lahf
sbb
out
loop
aaa
add
repz
mull
add
int
ret
lods
push
xchg
in
mov
scas
xchg
xchg
test
jo
inc
mov
push
add
es
or
imul
and
shl
adc
push
aaa
push
pusha
sub
or
or
jno
mov
push
add
movsb
ss
jbe
sub
add
add
scas
mov
cmpl
fs
popf
add
rcl
gs
push
iret
or
aaa
add
xor
dec
into
imul
mov
iret
arpl
xchg
pusha
mov
fsts
insb
fisubrs
rolb
shlb
stos
rolb
ret
adc
push
mov
mov
aad
aaa
pop
andl
in
out
in
or
or
or
mov
jge
lock
in
ficoml
push
mov
dec
fwait
aaa
jae
mov
mov
or
clc
mov
push
or
leave
push
or
popa
add
push
popf
add
xchg
cmpsl
loope
push
hlt
iret
jbe
mov
test
add
add
enter
mov
dec
jns
scas
jle
push
in
test
ds
mov
mov
mov
jg
add
xchg
movsl
and
nop
sub
aaa
aaa
or
xor
test
filds
add
cmc
or
push
add
imul
cmpsl
fimuls
aaa
dec
or
jo
nop
cmp
pop
xchg
pop
jmp
arpl
pop
out
inc
pop
imul
cmp
add
dec
dec
mov
clc
adc
sbb
xor
add
jg
xlat
xchg
push
cmpsb
adc
scas
aaa
ss
add
stc
adc
in
xor
sbb
mov
sub
inc
popa
and
xor
and
sarl
aaa
test
xchg
insb
push
mov
stos
add
add
mov
mov
jbe
add
divl
addr16
and
aaa
mov
popa
mov
pop
lods
inc
loopne
sbb
add
test
sbb
fcoms
popf
test
xor
inc
or
sbb
out
divb
xchg
xchg
arpl
xchg
out
sahf
inc
xor
pop
mov
jmp
addr16
mov
jae
fistl
mov
clc
sbb
push
aaa
mov
mov
out
hlt
insl
and
mov
add
ljmp
push
xor
jae
xor
add
rcr
add
lcall
push
inc
ss
push
xchg
aaa
inc
cmp
es
movsb
mov
and
lahf
es
mov
sahf
xor
ret
cmp
and
lods
out
shll
jae
jg
and
inc
sbb
mov
xchg
push
cwtl
mov
test
ljmp
shl
xchg
add
fistpl
outsl
or
xchg
call
aaa
lahf
pop
lcall
mov
and
daa
mov
mov
nop
inc
hlt
mov
aaa
int3
mov
xor
sub
test
sbb
das
inc
push
out
or
ret
fs
and
cmp
aaa
daa
sub
std
sbb
add
jns
adc
push
cmp
jo
mov
ja
shlb
jmp
add
lret
dec
dec
push
add
dec
xor
mov
iret
add
cmpb
cmp
or
sti
popf
mov
jecxz
add
jne
xchg
adc
add
in
sbb
fidivs
ja
pop
stos
kandw
add
mov
mov
and
mov
xor
mov
ret
negb
add
mov
enter
ss
sub
nop
loopne
out
jb
icebp
add
out
mov
leave
dec
jl
ja
sahf
out
or
bound
cmp
and
aaa
or
divl
inc
adc
aaa
cmpsb
pushf
xchg
mov
sub
lahf
add
dec
scas
add
mov
cwtl
and
and
push
jp
icebp
mov
pop
xchg
push
sbb
aaa
push
xor
add
push
mov
outsl
add
or
add
jae
sarl
andb
or
cmpsb
fst
mov
xlat
add
mov
out
dec
fsubrl
aam
adc
adcl
add
lock
adc
mov
jbe
cmp
and
mov
mov
ret
adc
in
xor
mov
test
fwait
mov
in
jge
aaa
push
xor
cmp
arpl
jb
mov
testl
and
iret
fistps
aaa
add
and
add
mov
dec
adc
push
cmp
stos
das
addl
mov
fwait
aaa
pop
mov
mov
out
rorb
aaa
or
out
fisttps
aaa
lcall
js
add
out
push
cmp
xor
sub
pop
scas
ljmp
es
ss
or
jae
stc
in
pop
xor
in
push
movsb
sbb
subb
mov
mov
out
mov
stc
testb
sbb
dec
cmp
add
add
pop
push
rol
lea
sub
dec
cmp
sub
and
xchg
mov
bound
pop
xchg
add
lods
addl
int3
ss
cmp
jl
pop
add
outsl
add
jb
stos
pop
add
pop
cwtl
mov
dec
mov
or
pop
movsb
aaa
enter
jae
mov
into
and
xchg
lcall
cmp
add
add
pop
adc
sti
mov
push
mov
in
jne
testb
add
pusha
mov
daa
pop
int
aaa
sbb
test
sbb
sub
jmp
and
cmpb
jae
adc
xchg
xchg
xor
jo
mov
sub
pop
add
and
sub
sti
push
cmp
push
pop
jns
das
jl
mov
add
clc
add
pushf
sub
jb
mov
mov
jns
dec
cmp
addb
xchg
movsl
movsb
call
wrmsr
add
aaa
jne
out
push
movsb
mov
mov
pop
incl
int
add
and
js
jbe
adc
push
xchg
imul
add
push
add
arpl
mov
cmpsl
stos
stc
mov
andb
mov
inc
and
fnstsw
inc
pop
cmp
xchg
add
and
lret
mov
add
aaa
add
push
ficoml
js
int3
out
cwtl
aaa
adc
mov
movsb
adc
outsl
adc
cmpsl
cmc
dec
add
jnp
in
jecxz
sbb
add
movsl
dec
pop
adc
daa
push
adc
pop
adc
daa
mov
mov
sbb
dec
sub
mov
xchg
jno
mov
push
sub
cmpsl
aas
xor
mov
xor
jb
fldcw
add
adc
pop
fisubl
mov
add
mov
je
mov
mov
mov
lret
pop
xor
cmc
cmpsl
cmp
add
dec
xor
cmpsl
jge
add
stos
add
cmp
cli
xchg
cmpsl
mov
add
mov
dec
andb
add
cmp
mov
xor
mov
cmc
insb
add
hlt
xor
pop
dec
add
jl
and
mov
add
dec
add
aam
fidivl
add
popa
add
or
mov
and
xor
fimull
mov
ret
inc
push
inc
ja
mov
or
ss
ja
js
es
inc
mov
inc
sbb
ja
mov
inc
in
jmp
jecxz
sbb
pop
dec
stc
dec
aaa
les
inc
lds
mov
sti
aaa
mov
incl
sti
je
movsl
xchg
or
test
xor
lret
mov
xchg
cmp
xor
popf
add
movsl
scas
mov
movsb
mov
xchg
mov
out
adc
sub
cwtl
and
mov
fs
push
bt
popa
int3
push
outsb
and
aaa
lock
pop
jp
leave
xor
pop
rclb
rep
neg
outsl
ljmp
push
cld
push
ja
sbb
cmp
cmp
pop
and
adc
and
and
cmp
sub
ss
cmp
outsl
or
movsb
or
xor
push
sbb
push
inc
fdivrs
mov
add
mov
aaa
adc
iret
aad
mov
stc
outsl
dec
dec
jecxz
popa
pop
mov
call
les
iret
jge
xor
cmpsl
dec
in
shll
jnp
lret
fdivrl
jecxz
add
push
flds
jns
shlb
je
mov
cld
ds
scas
popf
hlt
addb
cmpsb
cmovge
mov
mov
daa
mov
mov
lods
lods
mov
mov
add
stos
xchg
lahf
sub
add
loope
inc
jno
cmp
insl
stc
pop
xchg
rorl
add
inc
sbb
xor
jp
addl
sbb
dec
ds
outsl
jnp
in
popa
aaa
fimull
jp
inc
jno
test
adc
jae
push
sub
stc
inc
ud2
pop
test
shlb
and
cmp
or
add
scas
cmp
addr16
repz
daa
pop
jbe
es
pop
ret
clts
sbb
hlt
testb
xchg
and
into
add
pop
fst
incb
aad
fwait
jnp
add
loopew
repz
loope
push
jecxz
dec
fcmovbe
inc
mov
aaa
mov
pop
leave
rcl
jge
cmp
js
mov
xchg
and
mov
pop
mov
mov
add
mov
and
orb
fcmovbe
out
add
cmpsb
xchg
lods
nop
and
jae
roll
movsb
xor
cli
push
imul
push
add
outsl
dec
mov
or
mov
push
lock
out
pop
mov
mov
inc
pop
push
pop
cmpsl
push
js
inc
dec
add
jne
cmp
test
rorb
lods
xor
and
aaa
add
mov
and
xchg
add
mov
aas
ss
mov
adc
sti
jb
add
and
add
int3
xor
in
mov
outsl
rolb
inc
dec
mul
out
push
out
lock
add
push
scas
cltd
lahf
cmp
fsubr
jp
rol
fs
rcl
jo
loopne
push
pushf
add
outsl
jmp
sarl
fcmovbe
cmc
mov
sbb
lock
dec
adc
add
or
sti
add
mov
mov
mov
mov
subl
xor
mov
sbb
leave
sahf
call
sbbb
pop
pop
sbb
xchg
ret
fidivrs
jae
lret
add
inc
icebp
cmc
push
movsb
fstpt
imul
cmpsl
dec
and
jmp
inc
dec
loopne
dec
insb
pop
aaa
dec
xor
gs
std
cmp
jns
inc
int3
add
or
inc
pop
cld
pop
mov
sbb
xor
mov
add
xchg
sbb
jo
or
push
add
and
or
dec
jne
mov
sbb
stos
inc
push
jg
aaa
repnz
shl
mov
pop
fistl
lret
je
ret
inc
test
mov
out
repnz
scas
or
xchg
xchg
testb
out
lds
in
imul
int3
push
xlat
fbstp
mov
adc
pop
lds
lret
rol
in
icebp
and
xlat
add
mov
loop
xchg
mov
orl
pop
out
push
mov
and
adc
aaa
mov
xorb
pop
push
xchg
idivl
cmp
add
xchg
xor
les
repnz
push
arpl
inc
adc
mov
jo
mov
push
push
negb
sbb
adc
lret
mov
jle
add
imul
cltd
pop
cmp
mov
ja
jne
fs
add
xchg
or
cmp
sbb
cmp
rorl
scas
cmp
addb
jno
fsubrl
add
inc
xor
mov
aas
push
adc
cmp
dec
xor
shrb
mov
out
dec
leave
cmc
xchg
push
and
jmp
fadds
aad
repz
lds
aaa
aas
iret
imul
rcl
arpl
hlt
adc
jmp
lods
pop
cmc
ret
xor
push
ja
mov
mov
mov
inc
in
push
mov
stos
push
ja
adc
xor
pop
in
ret
mov
sbbl
sbb
or
inc
jbe
sub
push
inc
ja
daa
adc
xor
add
push
out
in
aaa
inc
inc
repz
and
inc
out
push
inc
add
push
jnp
cltd
pop
push
inc
sti
xchg
pop
adc
adc
pop
shll
mov
sbbb
notb
pop
lahf
sbb
push
incb
mov
pop
push
pop
xor
and
add
xchg
xor
mov
inc
sbb
jne
movsb
andb
iret
shlb
lds
repz
fwait
push
std
arpl
arpl
idiv
mov
repz
jmp
rcl
dec
cmc
movb
popf
stos
mov
fcmove
popa
ja
sbb
mov
in
ret
pop
sbb
mov
fsubrs
fdivr
jle
mov
addl
mov
fisubs
xor
test
cmp
in
mov
adc
xchg
mov
or
enter
imul
insb
lret
arpl
imul
shrl
mov
xor
rcrb
andb
and
add
clc
pop
xor
inc
pop
add
jns
pop
cli
js
add
or
sub
scas
cmp
dec
adc
sub
xor
cmp
clc
fcomps
inc
or
test
push
pop
imul
adc
xlat
xlat
aaa
cmp
dec
insb
jle
shll
movsb
iret
push
fiaddl
add
jecxz
jl
out
mov
lods
fwait
sarb
cli
dec
ja
decl
arpl
rorl
setp
xlat
jae
out
jo
clc
insl
pushl
adc
push
mov
add
aad
sbb
xor
daa
aam
int
stos
cmp
jle
test
xchg
ds
xor
and
cmp
sti
push
enter
pop
gs
lds
dec
roll
pop
test
push
add
sbb
lret
push
xor
push
std
dec
aam
in
or
push
xchg
add
xor
cld
inc
lock
jmp
aaa
aaa
mov
inc
pop
cmpsl
jle
cmp
pop
add
xchg
wrmsr
and
and
aaa
lods
sbb
push
lods
jns
and
inc
add
mov
or
adc
test
cmp
or
icebp
ror
sbb
movsb
push
dec
fwait
cmp
fdivl
std
pop
mov
frstor
ficoml
call
imull
add
add
nop
inc
or
insb
xchg
lods
aaa
fwait
in
sub
cwtl
lock
add
dec
push
sub
push
cmp
xchg
sti
dec
mov
mov
mul
aaa
xchg
scas
xchg
fidivrl
sbb
add
push
sbb
sub
repz
in
shll
inc
shl
sbb
dec
rclb
ds
and
movsb
insb
aaa
push
js
or
mov
add
into
xorl
insb
aaa
mov
dec
push
int
or
sub
mov
inc
repnz
or
jo
mov
daa
fndisi(8087
jge
lcall
iret
inc
dec
mov
push
iret
fwait
ds
test
cmp
jle
add
lods
jb
pop
mov
inc
mov
loopne
mov
and
xorl
mov
and
and
cwtl
push
mov
in
outsl
mov
ljmp
arpl
cmp
add
add
pop
push
and
mov
push
sub
loopne
xor
jle
add
lret
fnstcw
or
orl
cmpsl
divl
pop
inc
jbe
ljmp
add
in
je
movsb
repz
mov
cmovo
test
outsl
fbstp
addl
xor
mov
pop
and
mov
xor
mov
sub
fists
adc
lock
ret
push
fnsave
out
sbb
push
daa
sub
xchg
inc
insl
or
dec
insl
add
enter
into
lahf
out
add
jae
xor
aas
data16
push
popf
int
cmp
lods
cmpsb
and
sahf
rcll
cltd
aas
mov
outsl
add
cmp
mov
dec
int3
mov
mov
xchg
aaa
pop
mov
jmp
pop
cltd
sbb
xchg
lds
xor
xor
arpl
or
popa
cmp
test
insl
mov
jo
mov
filds
push
cltd
unpckhps
sub
leave
jno
or
js
mov
push
sbb
and
and
jne
adc
mov
pop
mov
in
aaa
jge
sub
stos
xchg
lar
add
pop
sbb
cld
shlb
sbb
stos
push
mov
or
aad
add
pop
ret
sub
push
jb
sub
das
adc
in
gs
aaa
xor
icebp
in
lea
xchg
mov
sbb
push
fwait
lock
sub
stos
or
mov
roll
rolb
pop
or
ds
and
testb
imul
xor
push
sbb
cmp
adc
push
xchg
xor
adc
jae
leave
mov
int3
lea
fst
jns
cmp
adcb
jge
jmp
sbb
sbb
ds
int
xchg
lds
divl
es
push
sub
push
int3
fwait
aaa
loope
xlat
push
xchg
mov
gs
test
lret
pop
mov
idiv
into
mov
sbb
adc
pop
inc
xchg
leave
movsl
shrb
sbb
int
daa
adc
aaa
lret
js
push
mov
bound
mov
mov
push
hlt
lahf
jp
mov
out
pop
sbb
fmul
mov
shll
dec
cltd
add
xor
lods
loop
jle
cld
dec
arpl
mov
pop
insl
and
jbe
jb
dec
mov
mov
scas
aaa
outsl
mov
movsl
pop
mov
jne
idivl
or
aas
mov
loop
rol
dec
es
push
push
add
adc
aam
aaa
in
mov
sub
or
xchg
add
pop
andb
aad
loopne
and
pop
mov
sub
push
mov
test
or
mov
xchg
push
sahf
and
mov
sbb
pushf
lods
add
dec
pop
bound
or
pusha
mov
mov
xchg
mov
ds
push
cmpsl
orb
xor
add
mov
call
add
sbb
sub
movsl
and
mov
icebp
repz
movsb
cmp
mov
lret
nop
pop
jp
adc
add
aaa
mov
pop
push
mov
loop
mov
nop
xor
ss
sarl
cmp
fildll
push
inc
push
mov
scas
icebp
jbe
popa
mov
testl
xor
test
dec
mov
push
cs
das
adc
ja
aaa
loop
inc
and
dec
lods
add
aas
rcl
pop
loop
add
loop
push
adc
in
pop
iret
lock
mov
sub
shll
cmpsl
adc
lods
cmp
fistpll
ja
jecxz
data16
movsb
pop
mov
adc
cmp
testl
and
and
movsb
sahf
test
mov
pop
aam
sti
clc
jg
add
ds
xor
jge
lods
dec
push
add
jge
fnstenv
incl
out
push
mov
enter
ficompl
subb
jae
ficoml
ss
rolb
cltd
and
and
dec
pushf
xchg
pop
cmp
aaa
out
call
aaa
pop
push
inc
data16
add
aad
inc
mov
and
fcomip
mov
sub
jecxz
xchg
push
mov
mov
jnp
dec
cmp
sti
mov
lahf
mov
outsb
roll
pop
sub
dec
jns
inc
mov
jne
mov
mov
adc
sub
xchg
dec
lahf
and
add
arpl
add
jnp
pop
mov
sbb
lahf
ret
sub
inc
ja
lods
out
cli
les
sbb
push
or
add
fucomip
fiaddl
cli
jno
rolb
cmp
mov
jne
push
mov
call
jmp
dec
repnz
xchg
add
push
jbe
add
or
test
or
push
xor
pushf
mov
xchg
jmp
mov
lea
test
xchg
scas
call
cmp
outsb
test
xchg
push
arpl
movsb
std
add
testl
jp
fisubs
sbb
loop
mov
jp
xchg
lret
mov
in
out
dec
sbb
aaa
iret
fldenv
in
pop
add
or
jns
mov
ljmp
mov
js
add
icebp
popa
mov
insl
add
sbb
out
push
loope
pop
hlt
or
or
sahf
push
cmp
add
dec
and
add
js
pusha
in
ret
mov
dec
sti
xchg
aaa
shrb
or
push
mov
addl
inc
jge
push
add
mov
sbbl
jg
or
push
into
xor
or
adc
fs
pop
cwtl
hlt
pop
ss
cli
lret
xor
sbb
loope
dec
and
andl
ljmp
faddl
adc
add
imul
sub
iret
mov
loop
lahf
sub
xchg
stc
push
cld
jne
jmp
test
sbb
rcrb
inc
sti
add
cltd
ret
mov
push
dec
add
les
pop
cmpsl
fdivr
popf
sub
fldl
add
movsl
dec
xlat
xor
sub
in
cmp
loop
popf
mov
fmul
jg
dec
sti
pop
stc
jns
cmp
andl
cltd
xor
jb
push
ret
nop
pop
push
sbb
xor
test
test
or
aaa
dec
xchg
add
je
into
add
xchg
adc
lahf
movsb
loop
pop
lret
subb
and
mov
aas
and
das
mov
push
jg
das
and
cmp
push
mov
xor
ds
cmp
fcoms
shll
mov
dec
pop
xchg
xorb
adc
jp
dec
add
add
aad
and
aaa
clc
jmp
jbe
mov
sbb
subb
cmc
xchg
lcall
and
lcall
mov
cmp
addb
aaa
clc
lods
mov
xchg
dec
rcl
movsb
add
stos
mov
nop
mov
mov
aaa
push
or
inc
cld
sbb
add
daa
mov
pop
dec
mov
movsl
cmp
mov
jae
pop
xor
mov
jae
ljmp
mov
stos
loope
cwtl
adc
add
addb
push
cmpsl
mov
negl
cmp
xchg
jge
jle
pusha
mov
jns
adc
add
stos
sub
popa
add
and
sub
lock
mov
rcpps
scas
mov
sbbl
loop
add
inc
sbb
lds
mov
mov
xchg
les
dec
inc
ss
fidivl
inc
inc
lahf
jge
pop
outsl
or
inc
iret
mov
adc
out
ror
inc
test
lcall
push
push
out
lods
add
push
popf
int3
cmp
sbb
mov
rcrb
inc
mov
movsb
mov
mov
xor
cmp
sbb
pop
push
xor
add
mov
mov
xchg
and
inc
faddl
ljmp
insb
dec
push
mov
stos
aaa
sbb
jp
fiadds
pop
inc
sti
sahf
adc
add
add
stos
sahf
or
subb
jl
dec
ret
add
mov
mov
je
insb
pop
insb
rsm
rolb
stc
test
add
cmpsb
mov
cltd
dec
rolb
dec
cmp
and
and
ds
fwait
divb
add
cli
mov
faddl
jl
outsl
test
das
sbb
mov
cs
lret
dec
jne
add
shrb
cmp
rol
push
das
push
jge
jno
pop
ds
or
mov
loop
loopne
lds
add
insb
xor
xlat
mov
add
pop
adc
mov
sti
push
lret
test
jns
pop
rcll
loope
mov
ret
cltd
scas
frstor
push
mov
jb
scas
jbe
mov
clc
movb
and
dec
loope
filds
push
sbb
mov
and
data16
sub
ljmp
mov
leave
jmp
je
push
mov
aaa
pop
scas
push
mov
sbb
es
cmp
pop
or
xchg
mov
inc
sbb
push
sbb
outsb
push
jns
add
aam
aam
cmp
orl
daa
insb
cmpsb
notb
sub
hlt
add
rcrb
adc
aaa
inc
shrb
jl
mov
jg
loopne
stos
aaa
scas
aas
sbb
sbb
mov
cmc
inc
pop
rcrb
outsl
pop
into
mov
adc
imul
add
imul
sbb
cmpsl
add
ficompl
pop
add
jbe
cmp
xor
add
daa
cmpsl
jnp
movsl
xor
imul
les
arpl
repnz
ss
and
push
pop
scas
and
mov
ljmp
test
mov
add
clc
or
push
mov
fwait
mov
fbld
in
mov
jo
and
inc
mov
jle
inc
adc
jmp
add
insb
mov
xor
jl
mov
jl
dec
pop
cmp
jne
lock
addl
popa
fisttpl
mov
or
add
mov
jl
mov
and
or
sub
adc
or
lret
push
push
insb
ss
mov
mov
cli
fldcw
mov
add
or
and
lods
sti
mov
jns
add
xlat
push
les
inc
cwtl
fwait
cmpb
cwtl
pop
subb
les
cmp
xor
jmp
push
xchg
add
cmp
outsb
movsb
cli
ljmp
fldl
xchg
dec
jle
fisubl
jne
mov
mov
jl
dec
mov
in
mov
je
pop
es
mov
out
and
addr16
in
inc
fldenv
sub
xor
sbb
addl
into
pop
jle
mov
adc
movsb
push
push
lds
rcr
add
addr16
shll
xchg
mov
test
cmc
inc
es
xchg
pop
mov
inc
mov
dec
jbe
gs
push
bound
jno
pushl
inc
cmc
push
aas
add
inc
out
enter
test
inc
clc
mov
test
aad
cmp
movb
test
cmp
sub
clc
stos
aaa
xlat
nop
aam
push
insl
cmpl
adc
daa
or
dec
lcall
xchg
push
mov
pop
and
outsb
adc
sub
adc
shl
jmp
ja
in
pusha
stc
add
aad
rolb
data16
pop
std
mov
mov
mov
cli
xorl
popa
and
fldt
jo
movsb
insb
jnp
mov
out
cmp
mov
push
shl
pop
dec
mov
lcall
outsb
mov
cmp
sub
xor
mov
xchg
push
pop
add
div
ja
lahf
jl
and
scas
pop
push
jmp
mov
push
fwait
in
aaa
cmc
incl
shl
push
or
mov
mov
jns
test
daa
pop
mov
loopne
andb
push
xor
inc
push
loope
js
push
mov
and
inc
and
enter
pop
adc
sbb
aas
push
pop
xor
mov
repnz
mov
mov
mov
inc
movsl
flds
dec
scas
stc
or
xor
inc
inc
outsl
inc
mov
xchg
pop
push
out
add
cltd
mov
mov
jns
test
fisttpl
add
and
cmpsl
mov
push
stos
fists
movsb
leave
mov
xchg
mov
arpl
stc
js
xor
pushf
icebp
push
clc
mov
push
mov
pop
shlb
sbb
lds
gs
rclb
sub
shr
in
rorl
pop
mov
push
loop
and
pop
shll
pop
adc
or
call
pushf
xlat
addb
push
aaa
ret
push
outsl
add
push
mov
jb
adc
push
inc
fistpl
arpl
xlat
fmuls
add
cmpsl
andl
mov
rcl
mov
push
test
lods
pop
inc
xor
pop
inc
mov
popf
mov
jns
xorb
push
xor
mov
adc
cmpsb
dec
adc
mov
gs
xor
dec
jge
xchg
cli
adc
js
fwait
out
inc
loopne
mov
cmp
adc
sti
xchg
mov
sbb
dec
sbb
jns
jmp
cmp
dec
mov
popa
pminub
frstor
lods
lahf
or
add
mov
mov
pop
popa
push
lahf
arpl
add
pop
lods
mov
push
aaa
or
add
mov
fmulp
add
jg
push
add
mov
jns
dec
dec
mov
mov
lock
lock
mov
fisttpll
dec
repnz
mov
mov
lods
ss
outsl
out
mov
shl
call
mov
and
imul
daa
xor
add
cmp
shlb
rorl
add
mov
fdiv
push
insl
inc
std
push
mov
push
in
add
scas
xchg
aas
rolb
xchg
mov
in
das
xchg
lahf
xor
fists
pop
into
mov
mov
add
or
inc
mov
dec
sahf
jbe
mov
movsl
pop
push
arpl
sbb
pop
push
movsl
shll
mov
imul
test
mov
scas
cmp
cmpsb
xor
fisttps
je
pop
and
stos
insl
daa
sub
sahf
pop
mov
cs
and
test
sti
jp
movl
sbb
push
or
pop
loopne
jecxz
add
out
fs
outsl
push
imul
lahf
stos
cmp
or
fdivrl
out
and
mov
mov
aaa
movsl
in
int3
pop
pop
add
repnz
cmp
mov
cli
fcomps
cmp
dec
inc
jae
adc
sbb
test
xor
stos
jg
gs
loop
dec
mov
imul
test
rcrb
jmp
push
add
roll
push
sbb
rorl
push
add
cmp
nop
xor
ds
push
and
jbe
add
sarb
sub
mov
xor
mov
sbb
add
pop
shll
mov
lret
rcrl
shlb
add
rcrl
adc
sahf
outsl
sbb
cmpsb
hlt
xchg
xchg
lods
and
ds
aaa
adc
xor
cmp
and
push
add
fisubrl
add
out
enter
push
dec
fcomi
outsl
pop
lods
cmpsb
dec
push
sahf
push
cmp
jae
lea
jle
inc
mov
rcr
xor
fmull
and
les
mov
and
adc
push
shll
jecxz
lcall
add
cmp
jnp
sti
add
cmpsl
dec
mov
movsl
ds
jne
movsb
sub
or
js
das
stc
xlat
fistps
mov
movsb
cli
mov
stos
and
cmc
cmpsl
jmp
imul
inc
aaa
or
mov
into
mov
push
mov
jmp
xchg
mov
push
fsubs
iret
ds
jle
in
cmc
lds
add
push
enter
leave
les
outsb
out
js
ss
out
fdiv
pop
mov
lods
mov
rorb
and
xor
test
es
pop
add
add
movsl
fldenv
sbb
fisttpll
filds
out
pop
aas
push
mov
movsl
bound
fisttpll
lods
sub
mov
add
sub
cmp
rolb
and
jne
dec
sub
sbb
test
xchg
cmpsb
jmp
outsb
sub
cmp
xchg
mov
lods
push
sub
andb
jne
dec
cld
and
nop
add
and
movsb
arpl
loope
loopne
movsb
inc
xor
dec
adc
imul
sub
into
bound
adc
lea
xor
pop
sub
and
mov
scas
add
xor
dec
mov
in
sbb
adc
add
bound
and
repnz
orl
imul
push
pop
lahf
addb
mov
insb
sub
push
ja
add
mov
fadds
xchg
dec
pop
xchg
mov
and
cmp
cmp
mov
repz
arpl
pop
push
inc
mov
add
add
mov
sub
add
fxch
sub
cmp
adc
dec
mov
shll
stos
enter
pusha
and
inc
ficoml
popl
bound
rolb
leave
mov
sbb
cs
add
aas
cmp
cltd
xorl
int
push
xor
add
xor
pop
or
movsl
inc
mov
dec
push
push
xor
flds
daa
shlb
add
sahf
out
jbe
xor
or
aaa
clc
in
jmp
add
leave
xchg
loope
cmc
sbb
stos
pop
ret
push
jnp,pt
add
aad
pop
icebp
enter
pop
push
ljmp
sbb
rolb
push
mov
ficoms
out
mov
jnp
cmp
inc
aaa
pop
mov
mov
push
aaa
add
pop
sbb
mov
lret
sub
cmp
fildl
lahf
sbb
cwtl
notb
cmp
in
mov
shrb
sbb
mov
mov
enter
fisubs
pop
aaa
loop
xchg
js
cmc
movsl
aaa
lcall
jmp
fadds
adc
mov
jae
outsl
inc
test
and
mov
jp
aaa
push
dec
xchg
shrl
jns
dec
mov
adc
or
jo
jne
aaa
imull
mov
aam
std
fadd
inc
cmp
push
clc
and
cltd
rcrb
cwtl
xor
hlt
ret
leave
fnstenv
insb
cmc
or
mov
ret
mov
mov
test
add
pusha
loopne
ja
dec
out
gs
stc
bound
loopne
filds
inc
daa
mov
mov
push
and
rcrl
push
add
inc
cmp
repz
pop
cwtl
sbb
fsts
xor
outsl
push
aad
sbb
lock
notl
add
test
stos
and
scas
ds
jne
jge
mov
faddl
jnp
insl
cmp
sbb
cmpsl
or
add
andl
mov
ret
out
inc
loopne
je
or
xor
add
mov
cld
jge
push
push
push
push
jecxz
out
dec
jbe
mov
push
out
bound
lahf
cwtl
inc
pushf
mov
push
push
xor
jl
mov
cmpb
adc
das
or
sbb
jge
cli
add
lret
std
loopne,pt
mov
test
rorl
repz
mov
mov
mov
xchg
inc
xchg
xor
or
pop
shrb
sub
jmp
test
and
rorb
cmp
fldt
mov
sub
mov
inc
jmp
iret
cltd
add
ficomps
push
aaa
lret
add
and
mov
fbstp
and
inc
ret
jo
mov
rcll
mov
fs
lea
outsb
mov
repz
push
cmc
mov
jle
arpl
in
jecxz
adc
sbb
mov
jne
dec
add
int3
pusha
ljmp
and
roll
cmp
stos
add
jbe
es
shlb
jge
icebp
xchg
pusha
aam
add
data16
aad
clc
push
add
inc
outsb
stos
outsl
add
and
pop
sbbb
jno
sub
cmp
push
aaa
fprem
adc
add
fwait
arpl
mov
push
mov
mov
sub
mov
xor
scas
inc
cmp
cmp
mov
cmp
mov
js
ljmp
xchg
inc
lods
or
test
sti
dec
xchg
pop
stc
adc
mov
test
fisttps
or
adc
clc
xor
out
push
mov
lods
int
aaa
scas
jecxz
mov
cmp
add
dec
push
pop
xchg
loope
sub
cmp
orb
mov
cld
xor
mov
push
mov
add
out
xchg
mov
add
sarl
fs
mov
pop
mov
adc
scas
add
ffree
in
mov
adc
pop
daa
sbb
dec
jge
add
not
xor
xor
xchg
rolb
imul
push
iret
mov
fsubrl
add
nop
dec
test
add
roll
xchg
mov
jb
mov
cli
mov
test
adc
mov
add
mov
cmp
loope
aaa
std
mov
mov
dec
stos
clc
sbb
outsb
mov
hlt
loope
jo
or
push
cld
jbe
inc
xor
fistl
pop
cmpsl
lods
stc
jmp
mov
aas
scas
cmc
cmp
sub
jno
inc
inc
xor
sbb
aad
pop
bound
insb
mov
mov
jns
add
xor
mov
shlb
rclb
div
rcll
into
xchg
mov
mov
out
dec
push
scas
loope
ror
dec
sbb
std
inc
insb
jo
mov
scas
movsb
add
adc
cld
adc
push
add
xchg
push
cmp
jno
sbb
ret
adc
or
je
jbe
pop
aaa
clc
loop
lret
sub
mov
push
out
sub
jns
sbb
std
mov
mov
pusha
sub
jno
xchg
clc
in
cwtl
mov
pop
aaa
mov
xchg
insl
mov
mov
mov
fbstp
jle
push
cmp
repz
push
rcrl
inc
aaa
adc
xor
add
ror
add
lret
jecxz
jbe
cmp
cltd
and
mov
fs
aaa
mov
leave
sub
push
dec
mov
stc
lods
add
icebp
pusha
push
inc
movsb
add
sub
add
mov
data16
lods
jmp
mov
sbb
adc
std
ss
pop
xor
test
adc
popa
je
pop
mov
cmp
arpl
in
ss
dec
lock
xor
out
test
out
das
push
mov
xorl
daa
mov
dec
decl
and
jo
orl
pop
pusha
pop
jne
addb
bound
call
add
dec
cmp
in
fistpl
xlat
mov
or
jge
and
adc
push
cmpsl
mov
pop
pop
mov
cmpb
push
imul
or
jge
and
clc
inc
push
les
frstor
rcl
adc
cs
sub
add
popa
xor
jmp
inc
data16
outsl
aaa
fwait
jp
adc
fstl
jb
add
mov
fldl
wrmsr
add
sub
in
push
add
xlat
jbe
mov
scas
dec
popa
xor
das
adcl
sbb
add
adc
sahf
push
jmp
push
aad
sarl
jmp
or
mov
push
roll
sub
ss
hlt
lds
dec
jl
inc
jno
xchg
cli
imulb
aaa
scas
je
dec
xchg
stc
adc
hlt
jecxz
stos
push
daa
pushl
push
mov
cmp
clc
sbb
stc
add
mov
test
jge
adc
aaa
mov
cmpsl
fisubrl
mov
mov
push
fldcw
jmp
cmp
inc
inc
lcall
out
pop
adc
cmpsb
mov
cmp
stos
repnz
or
imul
push
ficoml
add
cmpsb
cld
sub
adc
cwtl
scas
pop
add
mov
jae
inc
pop
pop
das
mov
cltd
popl
mov
pop
icebp
pop
repnz
dec
into
xor
in
add
mov
test
es
xchg
mov
stos
cs
stos
faddl
dec
pushf
or
popf
rorl
jbe
movsl
add
loop
cld
add
pop
es
sahf
int
orb
cmp
ja
jl
jp
and
sbb
add
xchg
andb
push
and
jl
div
push
outsb
inc
iret
aaa
or
into
iret
adc
imulb
cmp
sarb
dec
daa
aaa
cmp
push
fbstp
dec
fs
mov
cmp
sbb
fmull
outsl
mov
ss
jecxz
adc
nop
mov
sbb
mulb
ja
lahf
xchg
cs
andb
ds
sbb
shlb
fistps
rcl
enter
fisubs
mov
sbb
xchg
loope
aad
xchg
divl
loopne
mov
push
xchg
cwtl
addr16
rorb
adc
cli
lret
sbb
inc
fs
mov
pusha
mov
mov
andl
mov
mov
cmpsl
inc
lods
add
popf
outsb
ss
sti
jno
jb
out
and
pop
mov
rep
mov
into
aaa
sub
inc
or
js
fisttpll
shl
int3
add
mull
add
std
sbbb
test
pop
mov
xchg
nop
pop
sub
int
stc
dec
stos
insl
mov
inc
sub
leave
xlat
addr16
inc
dec
dec
aaa
mov
clc
adc
sbb
rclb
int
jo
aaa
push
jg
sbb
or
fiadds
cwtl
jecxz,pn
push
xchg
in
mov
dec
xchg
ljmp
add
pop
and
pusha
cmpsl
ret
pop
int3
test
mov
xchg
or
scas
into
notb
xchg
mov
hlt
adc
ud2
jge
mov
mov
in
push
shll
push
xchg
or
fnstcw
sbb
pusha
sub
shll
add
sub
lods
out
pop
sub
xchg
aaa
mov
jnp
push
icebp
ret
fucom
incl
mov
aaa
clc
push
dec
fadds
push
push
or
mov
mov
push
mov
je
xor
lahf
adc
aaa
lret
movsl
mov
fidivl
movb
testb
add
adc
dec
mov
push
pop
mov
adc
cltd
outsl
mov
aas
gs
mov
jg
mov
xchg
mov
into
movsb
aaa
dec
add
push
sti
popa
cwtl
add
sbb
sbb
fistpll
mov
lods
pushf
imul
xchg
jmp
mov
outsb
aaa
push
addr16
sub
or
mov
inc
out
lock
and
dec
push
aaa
push
mov
lds
xlat
adc
adc
rorl
add
cmp
cmp
push
sub
mov
aam
add
imul
pop
outsl
lods
cmp
in
sti
pop
jp
aaa
or
nop
sbb
adc
cmpsl
or
iret
dec
xor
add
out
jecxz
fsubrl
movsl
iret
and
lock
daa
rcl
add
mov
call
imul
call
add
dec
mov
push
in
ljmp
loop
test
aaa
mov
iret
push
or
mov
push
addr16
scas
insb
dec
pop
add
and
mov
lcall
addr16
aaa
push
xchg
or
pop
icebp
daa
inc
pop
add
dec
jecxz
lods
stos
mov
or
push
sub
femms
ljmp
dec
aaa
sahf
mov
dec
cwtl
add
sub
mov
or
movsb
pop
jns
add
cmpsb
fs
je
sti
js
lods
xorb
sbb
addl
dec
test
mov
inc
xchg
add
inc
or
lret
fnop
sub
or
and
popa
inc
lcall
mov
in
std
add
cmp
fisubs
mov
scas
fxam
sbb
xor
sbbl
lods
push
jnp
fsubl
ret
add
mov
fs
adc
mov
mov
adc
lcall
outsb
cmpsl
neg
js
jmp
shll
and
dec
and
verr
mov
jno
mulb
mov
mov
sbb
add
sub
sub
loope
cmpsb
lcall
aas
push
or
cmpl
mov
rep
pop
shl
loopne
outsl
mov
xchg
xor
xor
shrl
mov
jp
xchg
or
mov
stos
aad
cs
add
roll
hlt
sbb
add
mov
push
add
lods
aaa
lods
push
inc
push
add
inc
xor
add
pusha
push
xchg
dec
mov
pop
in
rorl
popa
imul
sbb
jmp
pop
cld
add
jae
das
loop
aaa
aaa
mov
xchg
mov
add
scas
lcall
jbe
xor
add
cmp
fiadds
jmp
aaa
mov
xchg
aas
fwait
dec
xor
pop
inc
psllw
add
out
pushf
push
lods
xchg
push
std
jno
ss
cmp
leave
filds
pop
movsb
push
insb
mov
fildll
ljmp
cmp
pop
dec
popf
pop
arpl
das
sahf
insl
jmp
sub
fildll
mov
in
jne
mov
jecxz
mov
add
add
add
std
xchg
inc
div
aaa
pushf
xchg
xor
pop
into
lea
adc
jne
jge
push
int3
loope
mov
pop
xor
dec
or
fldl
iret
xchg
addb
add
push
jle
loope
outsb
rol
aaa
das
cmp
sbb
lret
xor
mov
add
or
jl
jg
into
inc
repnz
aaa
lahf
mov
in
xor
inc
mov
jge,pn
shlb
push
jbe
movsl
xor
push
adc
or
add
iret
jb
aaa
inc
inc
aaa
ss
jl
lods
lds
mov
xor
add
pop
mov
filds
xor
xchg
jge
aaa
push
arpl
lahf
and
xchg
loope
mov
add
aam
add
test
mov
mov
mov
fdivs
jns
pop
mov
shrb
dec
mov
jecxz
mov
aaa
insb
test
test
or
aas
inc
mov
lock
add
mov
daa
mov
mov
mov
add
movsb
cmp
inc
aad
outsb
pop
push
shll
ret
xor
push
lock
pushf
sarb
add
fcomi
mov
sub
repnz
or
jl
push
add
inc
xchg
cmc
dec
enter
hlt
sub
jbe
movsl
xchg
aad
rolb
add
push
into
adc
imulb
daa
repnz
arpl
push
pop
movsb
inc
out
mov
xchg
cmpsl
dec
shll
add
dec
stos
out
xchg
jno
inc
ret
ja
adc
ds
mov
sbb
ja
and
mov
cmovno
lods
in
rol
pop
dec
ja
push
mov
stc
out
ss
aas
mov
arpl
pop
mov
test
add
inc
mul
mov
gs
cmp
mov
xchg
ds
jge
cmp
je
test
xor
push
je
jae
mov
sub
iret
subl
mov
add
mov
mov
cmp
add
cmc
mov
int3
ja
mov
dec
ret
cld
aad
adc
push
cmp
adc
sub
jmp
mov
adc
mov
add
addb
test
jo
jae
lcall
pushf
add
push
jl
adc
aaa
xor
jo
mov
mov
dec
flds
outsb
fs
out
aas
lods
cmpsb
lahf
inc
add
mov
mov
adc
mov
ja
sbb
inc
inc
add
addr16
sub
sar
cmp
dec
pop
cmpsl
das
aaa
cltd
and
jns
xor
mov
push
cld
lret
push
std
xchg
pop
or
imul
rcrb
add
incb
inc
mov
cmp
xchg
idivl
mov
dec
ret
dec
mov
push
aaa
fsubr
mov
stc
mov
inc
sub
mov
neg
stos
fidivs
lods
add
push
out
nop
movsb
mov
pop
dec
cmp
jp
dec
ss
in
mov
or
push
or
mov
outsl
cs
bound
sti
mov
jp
push
dec
ljmp
aas
popa
mov
mov
push
dec
jo
lea
ja
cld
stos
or
sbb
clc
inc
adc
mov
jmp
nop
add
fiaddl
and
enter
push
pop
xchg
ret
mov
out
js
aaa
cmp
es
outsb
cmovae
repz
movq
inc
stc
in
mov
je
add
movsl
jmp
sub
mulb
jmp
inc
xchg
shl
push
test
add
jmp
cmp
add
mov
pushf
dec
out
add
xor
pusha
int3
lods
push
in
sub
movsb
sbb
imul
add
mov
jp
aaa
stos
test
sbb
subb
mov
mov
mov
sbb
xor
fistl
and
inc
mov
adc
inc
and
cmc
std
dec
pop
lods
jbe
pop
movsl
xchg
jle
inc
lods
add
inc
fbstp
mov
add
xchg
push
and
sti
push
test
in
add
mov
push
or
cwtl
orb
adc
rolb
roll
and
add
mov
cs
sub
jno
add
dec
aaa
fistps
popa
add
add
mov
movsl
cmp
mov
or
sysret
add
int3
ja
sbb
or
pop
pop
arpl
fidivs
lahf
add
movsb
mov
add
jge
sub
adc
add
push
repz
pusha
mov
sbb
arpl
xchg
or
inc
sbb
fsts
xor
and
clc
push
nop
mov
mov
xchg
icebp
mov
mov
cmp
xor
sbb
fcoms
insb
push
int3
and
pusha
mov
push
scas
popf
sub
push
inc
mov
stos
dec
pop
or
push
rol
rcll
lret
add
je
icebp
sub
cmpsw
clc
add
aad
inc
pop
add
inc
jnp
jle
cmp
add
aaa
mov
add
push
inc
inc
mov
out
cmpb
jl
je
xchg
adc
cmp
push
imul
pushf
mov
loop
fdivrl
adc
mov
test
call
pop
rcrl
loopne
xor
std
lret
and
jns
andl
lock
cmpsl
pop
pop
cmc
xchg
insl
pushf
push
pusha
add
dec
stos
orl
xchg
lds
les
fs
xor
mov
mov
mov
lret
ljmp
lods
fwait
stc
xor
sbb
mov
cmp
aad
inc
jb
xchg
int3
sbb
push
or
adc
aaa
loope
ss
and
sub
mov
scas
add
sbb
mov
popa
rclb
mov
scas
test
pusha
lds
test
mov
push
xor
mov
lret
xor
sub
jl
mov
mov
adc
sub
jg
add
adc
aaa
out
cld
scas
pop
fs
push
or
push
xlat
repz
add
pop
sahf
cmp
inc
lcall
add
inc
outsb
sbb
mov
inc
iret
inc
add
movsl
cwtl
jmp
cmpsb
add
outsl
test
out
dec
sbb
jge
aaa
stc
shrb
add
fstl
or
xchg
xchg
mov
popf
and
int
adc
push
adc
dec
cmpl
push
sbb
sub
xor
popf
mov
bnd
xor
imul
or
ret
cmp
jp
add
xor
jne
jo
je
adc
roll
add
ret
scas
pop
mov
jmp
cmp
mov
fcmove
dec
pop
xor
add
pop
sub
push
pop
loop
mov
and
sahf
aaa
push
or
push
jmp
xor
mov
jo
aaa
mov
loop
add
fadd
cmp
and
xchg
insl
jge
add
push
inc
lds
stos
inc
lea
nop
xorps
and
bound
add
mov
lcall
sbb
lea
call
push
pop
popa
outsl
jle
xor
or
rcr
adc
add
adc
addb
add
sahf
bound
jp
jg
fucomi
mov
inc
sbb
mov
mov
mov
cmp
sub
or
push
mov
pop
adc
cmp
sbb
xchg
test
add
sbb
inc
add
lcall
mov
rclb
aaa
ret
pop
or
push
jmp
es
int3
daa
into
mov
inc
mov
sub
call
in
popl
add
cmp
fisubrl
aam
movb
push
xchg
xor
sub
es
mov
data16
andb
add
xchg
into
and
mov
clc
cmp
lahf
aad
mov
sbb
add
sbb
push
fnstsw
out
push
mov
jle
rol
pop
add
cmp
inc
fisubs
es
mov
mov
dec
pop
stc
xorb
mul
sbb
add
sti
lea
mov
je
sti
dec
xchg
lret
lods
xor
jnp
shlb
sbb
sub
mov
push
jbe
aaa
stc
int3
int3
lret
dec
fimull
aad
xchg
out
sarl
push
movsl
outsl
movsb
add
and
xchg
mov
lock
xor
lock
jae
pushf
daa
enter
and
xor
add
jp
jmp
testl
push
jne
sub
pop
sub
inc
sets
push
loop
sub
sbb
add
stos
addl
lock
cmp
push
sub
inc
add
inc
cmp
jno
lret
push
push
jo
subb
mov
pop
popa
push
int3
scas
mov
stos
dec
inc
mov
inc
jbe
sub
sbb
jg
add
or
or
mov
jbe
jle
fsubs
push
sub
pusha
lcall
cwtl
pushf
push
insb
sbb
and
sbb
movsl
shrb
in
mov
ja
dec
mov
inc
jb
lea
js
das
int
mov
dec
fwait
mov
xor
fistpl
dec
fisubl
or
push
mov
mov
and
lods
test
mov
inc
adcl
in
pusha
sahf
sbb
pop
cmp
sahf
addr16
inc
add
sbb
cmp
out
testb
mov
insl
mov
pushl
fwait
in
pop
sarl
test
in
aaa
sub
mov
sbb
dec
pop
add
inc
pop
pop
xchg
add
mov
pop
das
mov
stos
or
mov
mov
loop
popa
andl
clc
shrl
enter
add
out
hlt
int3
pop
jns
mov
andb
lds
jge
rcrl
arpl
or
divl
pop
inc
cmpsl
mov
cmp
insl
lock
in
xchg
test
bound
add
add
jg
popf
int
mov
lcall
push
adc
mov
add
sub
jo
divb
pushf
xor
cltd
rcl
testb
sbb
inc
pusha
xor
sbb
aam
js
out
sarl
cmp
mov
inc
push
add
sahf
inc
stc
inc
jmp
sets
add
jle
and
in
icebp
xchg
mov
pop
add
cli
push
or
xor
and
xor
shrd
out
jne
xchg
jns
dec
xchg
push
repnz
shr
mov
cli
and
inc
outsb
sti
xchg
rcrl
mov
adc
dec
add
fcoml
das
imul
pop
jle
sbb
getsec
sub
and
into
pop
into
test
mov
dec
push
add
lcall
std
xor
inc
inc
ret
push
xchg
outsl
add
aad
fwait
sub
jno
mov
stos
pop
aad
aaa
push
test
cld
sub
xor
dec
cmp
mov
xor
mov
adc
add
mov
lea
aaa
cmp
add
xor
loope
dec
mov
cmp
push
inc
mov
adc
jae
dec
jge
mov
shlb
cmp
mov
lock
dec
push
add
test
sub
pop
mov
push
pop
jecxz
xchg
outsl
add
push
sar
xor
cmpsl
aaa
and
jle
push
sarb
add
test
pop
push
jnp
sbb
mov
rcll
mov
inc
or
cmp
xor
jl
imul
xor
cwtl
roll
adc
add
aaa
xorl
mov
add
sbb
cmpsb
mov
ret
fnsave
mov
and
stos
fdivrs
inc
pop
ljmp
clc
lds
pop
or
in
sahf
jmp
cmp
inc
push
pop
and
cltd
inc
int
mov
jle
xor
aaa
mov
ret
clc
fwait
pop
add
push
mov
loope
enter
mov
cmp
addr16
rolb
sub
cli
mov
cmp
push
into
es
scas
lds
mov
adc
dec
mov
pop
mov
repz
xor
mov
fnstenv
mov
sub
loopne
aaa
jp
orb
dec
pop
inc
cmp
popf
jo
pop
push
and
aaa
sahf
faddl
sub
or
xor
stc
mov
xchg
ret
xchg
popf
movsl
sahf
mov
add
pop
fstpl
push
call
shrb
and
sub
cmp
cmp
lret
ss
mov
jnp
mov
in
aaa
xor
cmp
pop
outsb
lret
and
popa
inc
repz
ds
fldl
icebp
add
mov
movl
mov
xchg
jmp
les
mov
adc
popf
pop
lcall
adc
inc
jle
movsb
mov
sti
iret
out
push
jmp
test
xor
pop
pop
ret
mov
out
add
jns
ret
mov
add
inc
xchg
mov
cmpsl
pop
lret
mov
push
mov
mov
pop
xchg
gs
and
pop
fldenv
in
outsb
jb
or
adc
aaa
dec
xchg
adc
sbb
lods
add
jp
add
loopne
imul
lcall
aas
pop
pop
push
cwtl
adc
call
push
in
pop
adc
and
stos
lods
sahf
xchg
and
movsl
mov
mov
sub
sahf
and
pop
pop
push
into
sbb
call
sub
and
mov
lock
cmc
xchg
add
and
int3
pushfw
mov
mov
pop
pop
ja
inc
pop
filds
add
popf
fcompl
push
xchg
inc
pop
cmp
sub
aas
mov
add
cmp
icebp
lods
ret
sub
mov
addps
repz
cmpb
inc
and
fidivrl
xor
push
push
jge
add
cmp
mov
aas
lds
add
mov
mov
or
add
jbe
aaa
mov
push
pop
pop
jge
js
inc
divl
imul
push
xor
into
sbb
scas
mov
mov
xlat
arpl
test
inc
insl
mov
dec
pop
jmp
cmp
iret
mov
dec
add
mov
test
sub
fnstenv
push
mov
push
jecxz
mov
pusha
pop
addl
stos
jp
cltd
jecxz
pop
cltd
xchg
bound
mov
pop
inc
sbb
inc
mov
test
je
sbb
inc
lea
aaa
sbb
lea
jbe
xchg
sbb
mov
and
pushf
rcrb
insl
dec
nop
xchg
ljmp
lods
mov
mov
ss
imul
inc
icebp
repz
or
mov
mov
jp
test
cmp
sbb
jle
jb
mov
das
pop
imull
cltd
sub
mov
orb
push
aaa
mov
sub
ret
fbld
push
adc
inc
popf
mov
insl
cmp
sbb
inc
jbe
jl
test
in
add
outsb
xor
jb
packssdw
jo
and
sahf
cli
adc
cmp
stos
pusha
jno
ss
dec
push
jge
loope
mov
lret
mov
adc
loopne
nop
inc
sub
arpl
mov
xchg
insl
cmp
dec
aas
pop
and
add
into
dec
xchg
gs
jbe
pusha
mov
sbb
xchg
addl
lea
mov
adc
xchg
int3
sub
mov
lock
pusha
inc
lods
or
and
adc
ja
jg
sub
push
mov
add
sbb
mov
shl
daa
pop
fstl
fcomps
lock
ss
xor
mov
lods
mov
push
xor
push
int
inc
les
mov
fistl
ret
sahf
mov
xlat
sub
inc
aaa
andl
bound
inc
xor
cli
inc
jno
xor
xor
push
sub
xchg
cmp
add
push
aam
pop
lret
cmp
cmp
jne
mov
insb
fdivs
jne
mov
mov
aaa
add
ds
push
adc
xchg
std
mov
jno
pop
rolb
push
loop
adc
cld
sbb
dec
lret
jns
insl
aaa
adc
int3
adc
push
jecxz
jg
pusha
popa
rolb
jns
xor
inc
mov
lahf
mov
sub
inc
aaa
icebp
movsl
aaa
sbb
iret
sbb
lcall
sbbl
das
add
es
iret
xchg
mov
jae
test
push
jno
sub
out
lahf
push
mov
in
leave
and
repz
dec
aaa
decl
in
push
lret
loop
inc
leave
xlat
subl
sti
mov
pop
adc
push
and
out
lods
xabort
xchg
or
mov
and
test
mov
mov
pop
xor
ret
mov
lret
push
sub
xor
adc
dec
inc
xchg
adc
add
and
incl
push
outsb
pop
je
iret
loopne
add
xchg
shll
and
shl
push
add
and
outsl
in
aaa
dec
ficomps
xchg
repnz
push
orl
enter
lea
divl
jp,pt
pop
ret
adc
bound
sarl
aaa
gs
mov
out
mov
mov
mov
or
xor
dec
sub
xor
out
pop
out
aad
xor
movl
in
mov
notl
xchg
aaa
jo
add
pop
test
add
sahf
clc
rcrl
cld
mov
and
das
iret
jno
inc
jo
adc
push
cmp
xor
mov
cmc
andl
or
mov
add
ja
sahf
push
nop
fbstp
mov
add
dec
add
dec
add
mov
clc
xchg
sbb
aaa
pop
pop
or
cmp
repnz
jae
jno
lea
push
pusha
xor
inc
xor
push
leave
int
adc
shl
sbb
jns
mov
cmp
add
popf
cmp
pop
test
xchg
js
test
inc
and
lahf
inc
push
inc
pop
pop
incl
movsb
cmp
fimuls
dec
fiaddl
lds
loopne
aas
pop
jl
mov
and
adc
push
es
adc
movsb
mov
divl
add
cmp
inc
mov
xor
mov
mov
inc
pop
mov
mov
out
testb
pinsrw
das
add
pusha
fs
hlt
push
jg
call
jmp
pop
fisubs
pop
push
pop
lcall
mov
pop
pop
cmp
or
xor
aaa
out
cmp
mov
jnp
jno
xor
jg
orl
fisttpl
adc
popl
std
pop
push
test
add
push
popf
add
mov
add
and
mov
sarl
jge
movsb
adc
xchg
jg
movsl
or
in
sbb
shrb
repnz
enter
push
xor
fmuls
movsb
mov
fwait
inc
and
popa
xchg
push
nop
roll
add
shll
mov
inc
jl
mov
jle
pushf
clc
sub
push
mov
push
cmc
aaa
imul
dec
mov
mov
mov
insl
aaa
add
jne
mov
js
add
js
jge
es
inc
xor
dec
sub
sub
push
xchg
sbb
and
rcll
or
add
xchg
mov
add
loop
sbb
shll
decl
adc
xchg
mov
lret
mov
cltd
aam
divb
mov
pop
add
mov
dec
iret
mov
or
sbb
mov
fs
sub
adc
sub
aad
cli
add
mov
lods
enter
fbstp
into
jnp
mov
mov
ja
aaa
xchg
leave
test
cmp
enter
sbb
mov
add
mov
add
xor
or
aas
pop
fadds
xor
insb
push
mov
lods
add
inc
scas
mov
add
int3
rorl
adc
push
fildl
pop
pop
js
xor
ficoml
iret
push
mov
incb
add
call
add
mov
aaa
dec
sbb
fs
loope
in
dec
dec
pop
out
cmp
sahf
aam
xchg
cmp
loopne
jp
inc
cltd
mov
add
push
dec
mov
sti
dec
stos
add
adc
scas
lds
sbb
out
gs
andl
add
and
and
or
fs
mov
jecxz
adc
inc
push
fwait
add
jl
or
fwait
add
xor
shl
mov
add
out
mov
jmp
mov
adc
aaa
mov
rorl
add
dec
xchg
mov
dec
pop
cmp
dec
je
notl
add
add
aaa
aaa
dec
fucomp
pop
inc
jg
add
aam
adc
inc
xchg
sbb
jb
out
sbb
into
out
fstl
aaa
push
jp
bnd
xor
out
dec
mov
mov
push
out
das
dec
push
fwait
call
or
mov
fbld
add
and
push
fnstenv
cmp
mov
push
loop
sahf
push
stos
adc
stos
call
shlb
add
mov
sbb
xchg
and
dec
pop
cs
lahf
jo
push
fldcw
push
bound
hlt
xlat
sub
cmpl
pop
cmc
movsb
sbb
mov
mov
mov
sbb
punpckhwd
jg
mov
gs
mov
sbb
xchg
aam
outsb
add
pushf
andb
jmp
fstpt
fstpt
jnp
ss
push
fwait
jge
cltd
fnstenv
fdivr
daa
insb
loopne
gs
call
iret
xor
add
adc
jne
xor
lods
pop
xchg
icebp
imulb
lahf
out
dec
pop
adc
leave
push
lods
out
jg
and
adc
pop
sahf
add
jns
insl
shrb
xor
pop
xor
xchg
shl
mov
enter
scas
dec
dec
mov
sbbw
add
std
fildl
in
inc
sub
clc
xchg
negl
dec
mov
fwait
xor
aaa
clc
sbb
pop
or
sub
pushf
leave
aaa
mov
inc
add
je
movsb
jecxz
mov
mov
dec
js
dec
aam
mov
stos
dec
addr16
pop
insb
jmp
mov
stc
out
cmp
fincstp
adc
cmpsl
out
push
aaa
std
xchg
adc
loope
pop
mov
push
cmp
fdivr
push
popa
cltd
jge
outsl
lret
lahf
call
in
cmp
add
xchg
xorb
xorb
in
mov
outsl
lret
fcoml
addr16
pop
das
dec
stos
jns
or
add
or
push
push
xchg
rol
adc
mov
js
jne
mov
sahf
jp
ret
pop
inc
add
adc
add
pop
jl
mov
out
and
les
ds
xchg
xor
leave
or
lret
lahf
sub
xor
aaa
xor
lahf
and
mov
lds
in
jnp
popa
nop
add
or
bsf
mov
sbb
mov
aad
popa
or
pop
imul
or
mov
mov
push
xchg
or
jge
in
jge
sbb
call
flds
dec
out
dec
mov
aam
dec
adc
push
aas
sub
cltd
or
flds
aaa
fnstcw
insb
lahf
add
roll
andl
push
jl
pushf
pop
mov
iret
das
test
xor
scas
mov
and
ffree
add
jns
xchg
cmp
int3
nop
add
test
push
mov
pop
arpl
sbb
cld
shrl
mov
mov
mov
and
mov
or
pusha
adc
mov
insl
xchg
jbe
and
loop
cmp
mov
jmp
lods
int3
and
flds
popa
cmp
mov
lods
add
mov
movsl
sub
div
mov
mov
sub
mov
push
or
or
leave
lret
or
xchg
ret
mov
push
mov
mov
or
xor
mov
xchg
clc
gs
and
mov
pop
out
loop
jbe
mov
fnsave
add
movsb
loopne
shl
popl
ljmp
and
rol
pushf
int
aas
mov
cmp
add
jns
fcomps
add
lret
ljmp
sbb
lret
fwait
pop
lea
push
sub
pop
loope
push
mov
movsl
dec
jne
mov
lret
rcrl
movl
push
cmp
xor
push
pop
test
xchg
aaa
jnp
icebp
out
lahf
sub
repz
push
and
cmpsl
add
mov
jbe
xchg
push
mov
and
or
enter
mov
insb
loop
jne
adc
xchg
int
jns
aam
add
aas
mov
arpl
out
sahf
adc
dec
bound
je
dec
xchg
scas
push
popa
xor
jp
lock
enter
in
popa
pop
loop
push
pop
xor
inc
or
push
ss
in
mov
push
fistl
sbb
in
aas
jbe
fwait
push
push
jnp
rcrl
xchg
mov
mov
mov
je
aaa
ror
inc
push
jmp
lret
dec
out
daa
cmpsb
xor
add
fldl
cmp
cmp
jle
adcl
pop
rorb
lods
jmp
pop
push
adc
xchg
es
mov
movsl
jno
icebp
cmp
shll
call
dec
xchg
hlt
decb
inc
out
xchg
or
mov
movsb
lcall
push
sbb
and
cmc
xor
add
cmpsl
adc
test
leave
movsb
mov
loopne
mov
mov
add
and
or
repz
ret
daa
push
ss
mov
les
sbb
xor
popl
pop
outsb
lret
adc
fs
xchg
addr16
add
mov
mov
xor
hlt
and
jbe
add
pop
stos
xchg
es
sbb
movsb
int
jmp
sub
bound
mov
incb
lods
cmpsl
xor
aaa
lret
push
inc
add
sbb
push
notl
rcrl
hlt
mov
add
stos
add
push
lcall
lods
jge
xor
push
add
cmc
icebp
and
cli
xchg
mov
insl
pushf
mov
leave
dec
and
dec
adc
mov
xchg
mov
mov
mov
jg
push
iret
push
fistpl
push
and
jle
jp
sub
fcomip
add
hlt
jmp
jnp
pcmpgtd
jae
nop
insb
arpl
add
leave
sbb
add
or
dec
mov
stos
push
aaa
std
ret
adc
incl
dec
push
ja
pop
jo
push
sbb
cld
pop
sbbb
test
or
dec
and
lahf
andl
je
outsl
inc
push
dec
add
in
aam
xchg
jp
sub
out
subl
adc
pop
lods
xchg
dec
mov
mov
mov
sub
mov
mov
pop
inc
pop
lret
pop
xsave
aaa
ss
es
neg
mov
or
out
call
mov
movsb
cs
xor
iret
lock
sub
mov
inc
test
mov
mov
add
popa
xor
push
push
cmp
xchg
cmpsb
aaa
bound
pushl
mov
test
xor
xchg
sbb
sub
daa
and
xor
push
cli
add
cs
aam
push
add
outsb
outsb
leave
lods
lcall
dec
cmp
pop
stos
mov
push
add
mov
stc
push
add
mov
xor
mov
addr16
adc
add
dec
mov
movsl
mov
mov
fwait
cld
pop
mov
and
jp
loope
or
leave
push
add
into
mov
mov
mov
add
mov
mov
mov
clc
fwait
dec
push
cld
mov
in
cmc
mov
negb
call
int
insl
dec
jo
aas
cmp
ljmp
add
push
sbb
daa
lds
jo
add
mov
mov
shlb
xor
imul
sub
es
cwtl
inc
inc
hlt
push
pop
or
adc
stc
xor
test
inc
out
push
or
add
sub
xor
fsubs
ret
ficomps
add
mov
fucomp
mov
popf
mov
and
inc
or
aaa
daa
lods
or
push
add
dec
fstpl
pop
lret
imul
mov
les
fsubrl
pop
pop
mov
negb
test
mov
clc
sarb
push
xchg
or
inc
icebp
loop
testb
and
xchg
lahf
cmp
and
enter
aas
hlt
bound
mov
cmp
fnstenv
jecxz
ss
mov
repz
pop
xor
sbb
call
and
cmp
pop
btr
pop
add
test
xchg
and
xchg
add
stos
out
or
or
ret
aaa
mov
dec
mov
shl
fdiv
popa
pop
adc
adc
ss
mov
cmp
fbld
divb
repz
cmpsb
sub
mov
scas
jecxz
inc
pop
movsl
push
mov
add
and
mov
mov
scas
jne
pop
cmp
pop
mov
add
aad
scas
xchg
dec
test
xchg
daa
pop
or
push
gs
pushf
push
add
pop
in
insb
lock
add
or
dec
movsb
and
mov
outsb
aam
in
and
add
mov
xchg
lahf
aaa
insl
pop
add
adc
fcomps
mov
in
cmc
je
fldenv
mov
mov
fisttps
or
sbb
mov
xor
cltd
pop
aaa
push
xchg
popf
es
dec
cli
add
mov
cmp
fldenv
cli
jb
mov
rcll
movsb
ss
stc
cs
lods
add
add
bound
mov
lret
cs
add
insb
xchg
and
pop
adc
sti
out
nop
mov
xlat
dec
out
dec
loop
and
add
add
popa
mov
jecxz
sti
mov
inc
xor
pop
addb
xor
mov
aam
ljmp
in
add
push
jmp
insl
pop
cmpl
add
lahf
add
cli
mov
ret
or
add
arpl
call
sbb
xlat
mov
add
push
repz
mov
push
mov
adc
repz
and
outsl
jo
mov
aas
add
push
add
add
into
cmp
gs
add
mov
out
mov
stos
imul
add
clc
repnz
hlt
jecxz
mov
addr16
cmp
je
inc
xchg
pop
mov
inc
pop
push
mov
add
ret
je
lret
stc
jl
push
neg
enter
and
jge
push
aaa
test
jne
and
data16
jge
add
imul
push
bound
push
add
sbb
aad
push
aaa
fistpl
jl
adc
lret
incb
das
or
and
xchg
dec
mov
adcl
into
shll
lcall
sub
popf
aaa
aam
clc
iret
xchg
add
or
push
inc
loop
jb
mov
outsb
sbb
stos
fwait
popf
cmpsb
rcrl
xor
les
xor
fstpt
or
fldl
insl
out
loope
popa
movsb
jge
mov
jae
add
cmp
ret
add
cs
mov
sub
adc
and
ds
pop
inc
dec
arpl
add
rol
shll
lock
adc
insb
sub
shrl
lcall
out
pop
mov
fs
pushf
dec
movsb
out
add
jg
adc
add
shll
pop
pusha
cmp
mov
ljmp
leave
sbb
aaa
icebp
sarb
add
dec
daa
mull
push
jne
aaa
lods
jns
inc
adc
cmp
mov
lcall
and
cmpsb
pop
dec
mov
fnstsw
or
add
add
es
std
mov
shll
ss
jge
xlat
push
popa
add
jae
sbb
pop
push
push
mov
xor
negb
mov
sbb
orb
mov
lahf
in
mov
das
pop
mov
mov
jo
test
movsl
cmp
add
lcall
push
inc
fdivrl
or
add
cwtl
fisubrs
pop
xlat
cltd
andb
mov
xadd
aas
mov
mov
cmp
bound
or
add
mov
bound
cld
xchg
mov
mov
mov
xchg
push
sbb
xchg
add
int3
je
lret
add
jle
cmpsb
repz
mov
or
scas
dec
shll
add
mov
add
sbb
mov
ja
bound
mov
repnz
sub
mov
test
jl
test
adc
sbb
loopne
mov
repnz
push
or
mov
mov
add
sbb
cmpsb
mov
loope
mov
nop
pop
jne
ds
out
sbb
push
sbb
lods
subl
ficoms
or
pop
test
out
push
enter
sub
daa
xchg
mov
aaa
out
cmp
mov
jl
pop
into
imul
add
leave
xor
mov
jne
push
in
cmp
push
xchg
mov
dec
mov
mov
cmpsb
xor
mov
add
jnp
and
notl
jecxz
lods
rclb
pop
sahf
cmp
fisubrs
inc
push
push
pusha
pushl
cmp
cwtl
add
repnz
push
mov
push
cmpl
mov
pop
sbb
and
fstl
mov
inc
data16
std
jbe
bound
add
mov
insl
cmpsl
mov
jb
rorb
sub
test
sbb
add
cwtl
pop
insl
dec
or
dec
push
xlat
cmp
add
cmp
cmp
neg
imul
sub
mov
mov
les
or
push
jp
adc
shl
ljmp
mov
call
jne
ja
bnd
rcr
push
jmp
out
in
out
addl
loope
in
sahf
mov
or
cmp
fs
js
dec
inc
cmpsl
out
repz
add
addr16
push
fistpll
bound
addl
aam
scas
mov
mov
fidivs
dec
pop
push
sahf
pop
out
cmp
pop
mov
mov
xor
jne
jecxz
lods
movsb
sub
sti
mov
mov
push
pop
lcall
dec
mov
ret
fs
inc
ffree
and
iret
sbb
int3
jbe
stc
add
sbb
out
popf
ds
es
int3
mov
add
in
sarb
jbe
loopne
mov
fists
ds
jl
sub
xor
dec
call
inc
cli
clc
push
push
jb
adcb
hlt
add
jp
sub
arpl
rolb
mov
add
outsb
mov
insl
pop
divb
cmpb
mov
int3
jbe
aad
add
sahf
mov
add
les
fsubs
sbb
jne
aaa
es
add
sub
popa
pop
leave
fwait
jle
shl
pusha
call
sub
rcrb
lahf
fldenv
and
popa
call
xchg
mov
and
pop
insl
and
imul
sub
push
push
test
pop
mov
adc
push
add
fwait
popl
inc
xchg
sbb
int3
aaa
in
in
pushf
add
or
dec
test
push
pop
scas
test
sbb
ss
stc
mov
std
aad
in
push
inc
adc
loopne
push
cmp
mov
push
inc
add
mov
jne
xor
mov
movsb
add
das
imul
fists
cmp
jecxz
out
mov
inc
test
imul
push
in
add
and
mov
push
adcl
xchg
rep
mov
bound
clc
or
sbb
ja
or
lret
jg
xchg
pop
addl
in
out
icebp
mov
mov
neg
xchg
and
adcl
cmp
invd
test
fmull
adc
mov
aaa
aaa
pop
dec
jp
iret
and
imul
inc
cmpsb
inc
shll
aaa
rorl
jb
sub
or
and
push
adc
push
leave
push
adc
repnz
pop
mov
les
mov
sub
ljmp
jmp
stos
fimuls
insl
aaa
stos
xlat
scas
fsub
xchg
and
xorb
fnstenv
xchg
xchg
add
cmp
iret
jge
lods
mov
xorb
ljmp
decb
add
jle
jbe
pop
cmpsl
outsl
dec
mov
imul
test
out
ja
cmp
lock
int3
and
mov
rep
mov
inc
and
cli
pop
pop
repz
add
pop
sahf
mov
outsl
lret
mov
mov
int
aaa
mov
add
mov
lock
dec
das
rorl
cltd
das
cmpsb
icebp
and
neg
js
mov
mov
ret
lahf
add
iret
dec
xchg
and
nop
lcall
xchg
cmpsb
aam
sbb
popf
and
adc
mov
aaa
out
movsl
jle
aaa
idiv
out
add
aad
cwtl
enter
sbb
push
repz
mov
int
mov
je
mov
int
dec
sub
mov
add
sahf
mov
outsb
add
xor
adc
in
cmp
or
rcrb
add
inc
jecxz
add
and
cmpsl
aad
mov
into
push
cli
aaa
mov
add
sbb
mov
xorl
mov
cmp
hlt
mov
dec
ret
in
mov
pop
enter
add
insb
fstpl
js
mov
out
sbb
add
cmpsb
stc
cmpsb
cmp
cmp
cmovae
jge
cmpb
sub
adc
xchg
pop
sarb
leave
push
pushf
lret
test
inc
mov
in
lret
push
xor
fistl
ficoml
jl
mov
add
pop
adc
shrl
dec
jbe
mov
into
mov
cmp
and
shlb
mov
sub
pop
add
add
stc
out
ror
add
xchg
or
pushf
jae
loopne
lcall
dec
fcmovb
cwtl
push
and
and
push
mov
fisubs
aaa
or
imul
inc
frstor
push
cld
sbb
aam
and
sahf
es
mov
push
xor
pushf
pop
cmpsb
in
mov
xchg
pop
xchg
sahf
pushf
mov
icebp
shl
movsb
jne
or
mov
ficomps
into
leave
cld
jmp
loopne
and
in
and
rolb
lret
ds
mov
mov
xchg
inc
movsb
adc
cli
mov
loope
mov
dec
lea
pop
mov
inc
lret
inc
or
adc
mov
stc
movb
scas
test
fildl
sbb
push
popa
adc
mov
insl
dec
sub
in
data16
dec
push
jne
lock
sub
add
ljmp
xor
add
and
and
int3
pop
shll
mov
scas
fcoms
fdivs
mov
jmp
cmp
mov
mov
test
or
xor
add
daa
and
add
xor
enter
inc
lods
aam
mov
mov
add
xchg
mov
mov
cmpsb
fcmovu
enter
fcoms
dec
add
adc
loopne
jae
push
int3
dec
arpl
ret
rolb
sbb
imul
mov
sbb
jae
jmp
cwtl
sbb
xchg
xchg
xchg
add
jae
fcoms
jl
push
jno
dec
addr16
push
push
mov
fwait
ret
mov
jns
ss
xor
inc
shr
push
mov
ds
call
mov
or
loop
xor
mov
cmp
sub
jns
adc
xlat
mov
fwait
cltd
movl
or
add
imul
sahf
sbb
and
sub
pusha
ror
aaa
pop
dec
push
les
cltd
loop
iret
sahf
mov
outsl
out
in
push
aad
repz
add
ss
cmp
or
mov
ret
addl
andb
mov
and
or
add
gs
roll
fldenv
std
cmp
pop
fsubrl
xchg
mov
add
out
lcall
fisttpl
xor
and
add
pop
cmc
cmp
inc
call
faddl
sbb
int3
jmp
xor
iret
cmpsb
jo
dec
xlat
mov
rcrl
jbe
xchg
popa
std
lcall
mov
and
cwtl
inc
mov
jno,pt
fs
jmp
sub
sub
sub
or
nop
or
sub
add
popa
xchg
xchg
pop
inc
push
mov
shl
pop
aaa
sti
loopne
add
jl
aaa
or
or
icebp
push
insb
cmp
in
lret
dec
cmc
pop
inc
aam
aaa
push
outsl
mov
mov
in
xchg
pmaddwd
cmp
add
jo
dec
mov
shlb
xorl
pop
js
int3
iret
mov
sti
xlat
repnz
jns
xchg
mov
adc
mov
add
fmull
lcall
lea
aaa
ret
xchg
in
test
mov
add
xchg
lcall
psadbw
into
lods
jmp
mov
xor
loope
notl
mov
popa
mov
or
mulb
push
add
adcb
shrb
jb
add
sbb
mov
ret
or
push
aaa
cmp
mov
inc
mov
xlat
fisubrs
das
dec
push
pop
mov
pop
or
fadds
add
notb
mov
adc
jg
imul
sub
push
mov
lcall
pop
mov
fldt
shll
push
scas
sarb
fisttps
in
add
sahf
imul
scas
add
cli
mov
mov
int3
insb
sub
aaa
xor
and
mov
hlt
loop
mov
loope
ret
iret
jmp
repz
pop
jb
adc
sub
mov
pop
mov
or
mov
in
lret
push
add
shll
inc
mov
jo
lret
imul
cmpsl
dec
xorl
out
repnz
push
jl
je
sbb
call
xchg
sub
aaa
pop
cmp
mov
movsl
rorb
sbb
jge
jg
push
test
pop
jo
jmp
ret
inc
dec
and
xchg
cli
scas
mov
add
sub
rcll
sbb
pop
stos
cmp
imul
lcall
add
inc
testl
add
push
cli
sub
jo
mov
daa
sub
dec
fnstenv
jmp
mov
call
adc
mov
inc
fdivrs
repnz
or
mov
pusha
and
mov
scas
mov
jp
out
adc
lds
adc
mov
movsb
and
ja
inc
das
xor
out
jge
test
cmpsb
mov
dec
cmp
push
push
sub
mov
add
cmp
rcll
movsb
ret
add
pop
lods
stos
fisubs
js
mov
cwtl
test
pop
push
shlb
jbe
mov
loope
inc
loopne
sbb
sub
fs
mov
decl
popa
int
shlb
mov
mov
sbb
lock
pop
dec
push
sbb
js
add
int
lds
and
test
cltd
push
pop
fisttpll
sub
addr16
add
pop
mov
repnz
pusha
sbb
push
pop
out
sub
add
cwtl
mov
loopne
shlb
test
packssdw
push
or
sbb
jecxz
cmp
mov
mov
leave
in
mov
jl
fcompl
add
jb
aaa
iret
nop
add
jge
test
in
dec
pushw
xor
test
pop
jl
aaa
outsb
xor
sub
insb
or
test
mov
pop
jb
cmp
mov
loopne
xchg
inc
mov
sti
in
sbb
sbb
push
add
rol
inc
mov
cmp
lods
shr
cld
mov
aas
mov
dec
jmp
lret
enter
iret
and
xor
xchg
inc
loop
in
pop
dec
je
xchg
outsb
push
cmp
pop
jmp
mov
mov
xchg
push
and
jle
icebp
out
sbb
mov
adc
fabs
add
mov
push
fcoml
popl
pop
loope
inc
and
mov
lret
mov
sub
sub
pop
aad
mov
jge
mov
xor
adc
int3
cmp
mov
jae
lods
and
out
insl
outsl
stos
sbb
mov
inc
adc
add
inc
mov
outsl
jecxz
mov
dec
imul
ljmp
dec
push
aaa
hlt
outsb
call
mov
inc
cmp
xchg
xor
and
insl
sub
mov
pop
popf
stos
dec
aaa
movsl
in
faddl
sub
dec
ret
add
mov
test
in
loopne
in
sub
dec
aad
cmp
add
mov
out
xor
mov
mov
pop
lret
jae
fstp
nop
loop
shl
ret
aam
push
add
xchg
pop
aaa
pop
jnp
pop
cmpsl
xlat
cmp
add
mov
mov
add
in
int
cmc
testb
inc
mov
lahf
pushf
pop
stos
xchg
mov
jge
aam
movb
sub
icebp
dec
mov
or
add
out
pusha
lods
or
int3
pop
ja
ja
inc
call
mov
repz
jg
rorb
divl
bound
aam
hlt
sub
add
sahf
jg
fildll
add
cmpsl
clc
test
mov
mov
push
sar
pop
xor
stc
mov
jne
push
cmp
into
movb
sti
ss
cwtl
mov
imul
inc
insb
cmp
nop
setg
dec
movsl
inc
add
clc
dec
hlt
jle
adc
add
lods
popf
add
idivl
sbb
fdivl
sbb
and
mov
xchg
mov
mov
out
sub
or
rclb
addr16
xorb
ljmp
mov
sbb
push
push
movsl
sar
mov
loopne
and
jge
mov
mov
push
mov
push
aaa
pushl
push
dec
hlt
mov
pop
push
xchg
xorb
dec
add
ljmp
add
adc
mov
into
fwait
data16
mov
shlb
sbb
jecxz
aam
dec
loope
jnp
pop
aaa
cmp
xor
cld
fwait
push
rolb
lcall
imul
dec
ja
ss
fildl
ret
data16
adc
xchg
add
mov
nop
xor
dec
jnp
stos
dec
mov
lods
and
sub
inc
mov
popf
pusha
xlat
nop
mov
aaa
insb
adcb
dec
mov
add
push
mov
mov
fildl
mov
in
ror
movl
xlat
xlat
leave
div
roll
mov
lock
pop
outsl
stos
xor
dec
stos
pop
insl
dec
daa
rorl
getsec
sbb
repnz
jne
aas
pop
aaa
push
lods
inc
pop
adc
push
imul
and
addb
push
cmp
mov
mov
add
loopne
hlt
dec
mov
push
xchg
aaa
shll
test
out
hlt
leave
add
mov
repz
in
pushf
xchg
or
aam
inc
pop
fsub
and
add
cmpsl
shlb
fnstcw
xchg
mov
nop
sarl
shll
mov
ret
mov
scas
fsub
add
imul
bound
je
sahf
jo
add
sbb
sbb
push
sbb
dec
lcall
out
add
or
xor
mov
inc
lahf
shlb
push
dec
mov
ret
jno
rcl
xchg
cmpsb
bound
dec
sub
or
data16
or
pop
push
push
push
cmpl
sbb
inc
pop
cmp
cs
push
mov
sbb
data16
adcb
divb
and
fistps
nop
add
pusha
cmp
arpl
add
pop
loopne
lea
movsb
arpl
out
ljmp
int
out
fnsave
push
enter
lods
xchg
or
push
data16
dec
sbb
push
sub
add
pop
add
mov
idivl
sub
or
sbb
inc
push
and
pop
add
mov
add
aaa
aad
lods
adc
into
lcall
shr
in
add
adc
push
arpl
mov
ljmp
pop
add
lret
stos
das
leave
dec
jno
mov
pop
bound
cmpsl
add
pusha
sbbb
leave
fstl
mov
jg
std
pop
dec
lds
push
dec
xchg
mov
add
pop
push
and
hlt
mov
cli
push
sahf
jle
or
in
lret
out
mov
add
sbb
add
sub
cmp
adc
pop
movb
dec
push
add
jmp
dec
mov
sbbb
mov
outsb
into
fiadds
test
idivl
jnp
or
mov
jl
popf
insb
aaa
sbb
inc
adc
xchg
pop
sub
mov
out
fisubrs
stos
ret
outsb
dec
loop
mov
or
jp
aam
fsubrs
add
jl
je
mov
les
sub
and
scas
sbb
dec
dec
cmp
xchg
add
xchg
adc
mov
test
xor
sbb
lock
ja
mov
movsb
jne
mov
mov
test
or
loopne
jecxz
mov
mov
adc
mov
xchg
add
in
cmpl
incl
nop
iret
mov
or
imul
jo
xor
jo
xor
fidivs
adc
mov
repnz
mov
cmc
mov
stc
insl
aaa
push
mov
dec
add
xchg
mov
orb
and
sti
fnstsw
mov
aam
xorb
movsb
cmpb
mov
std
add
cltd
sub
cwtl
add
mov
adc
js
pop
sbb
adc
and
aad
mov
cmp
pop
and
or
cmp
arpl
mov
xchg
cmp
add
push
inc
and
shlb
xor
out
or
pushf
sbb
mov
and
test
fstl
dec
push
push
shl
pop
pop
icebp
inc
cld
clc
dec
pop
loopne
out
sub
lcall
vpcmpgtq
cmpsl
popf
testb
add
and
sbb
verr
adc
mov
stos
push
cmpsb
mov
push
xchg
xchg
push
ret
xchg
sti
mov
sbb
std
add
adc
repnz
mov
mov
pop
lock
jl
xor
shl
pop
cs
sbb
inc
pop
add
xchg
fwait
push
or
jne
xor
sbb
arpl
xor
sbb
ds
mov
jbe
lods
movsl
mov
mov
mov
add
xlat
sti
mov
push
xor
mov
cmp
adc
mov
pop
inc
aam
aam
jecxz
out
mov
cmpsl
push
into
xlat
pop
decl
xor
xchg
inc
sbb
xchg
js
mov
pushf
inc
or
cmc
sub
movsl
mov
and
faddl
xchg
mov
mov
adc
mov
insb
add
mov
add
or
sbb
dec
roll
pushf
add
aam
lods
mov
jecxz
out
adc
mov
adc
cmpsb
dec
aaa
aad
ror
das
sahf
cmp
dec
xchg
dec
lret
or
mov
mov
ljmp
or
iret
xchg
add
push
fdiv
hlt
xchg
movsb
inc
jae
xor
iret
cmpsb
add
mov
fs
rolb
push
fs
sbb
jecxz
out
ret
and
out
bound
mov
mov
mov
or
cld
mov
mov
clc
cmp
aaa
pop
inc
test
cmp
out
gs
add
adc
jmp
pushf
dec
pop
ja
pusha
mov
pop
addb
dec
es
mov
pushf
pmulhw
xchg
add
xor
shrl
ja
mov
or
aad
hlt
jg
add
add
je
int3
adc
pop
negl
xor
mov
cld
cmpsb
pop
dec
add
sub
aas
sub
inc
mov
sahf
xorb
test
or
inc
scas
sbbl
testl
scas
mov
inc
sub
es
cmpsb
sbb
jecxz
mov
iret
add
jb
mov
mov
pop
inc
in
mov
std
ret
push
pop
adc
mov
aam
push
add
sub
dec
clc
or
inc
add
inc
and
add
or
jno
xor
and
aaa
push
sub
rol
jge
add
in
leave
lret
mov
adc
js
jl
push
add
push
sub
jns
jb
add
mov
xor
movd
into
insb
mov
ret
int
sbb
jle
int
dec
mov
inc
dec
xchg
jle
mov
addr16
pusha
lret
mov
adc
jae
jns
add
daa
inc
xor
sub
lret
jne
stos
xor
add
nop
push
inc
in
add
jg
out
flds
sbb
lahf
sub
mov
cmp
mov
xchg
jl
pop
addr16
mov
fs
mov
mov
fcmovnu
mov
adc
loop
sub
scas
fs
push
mov
sbb
rcr
iret
add
push
jmp
inc
jp
or
out
mov
out
filds
xor
scas
and
data16
jb
imull
pop
ss
in
outsb
cmp
mov
mov
dec
dec
inc
enter
in
jne
ret
gs
in
arpl
mov
cmpsl
dec
adc
lods
dec
sub
mov
dec
stc
or
jne
dec
cmp
pop
sbb
dec
ud0
and
into
clc
outsl
fsubrl
add
xchg
add
lods
inc
push
pop
add
fsubrl
out
or
aaa
loopne
daa
fisubrs
mov
and
pop
scas
add
xchg
lods
adc
ret
data16
sbb
out
inc
pop
lock
test
add
das
mov
xchg
pop
add
andb
push
ret
mov
sub
sub
add
push
std
mov
mov
inc
push
jae
pusha
mov
aaa
cmpsl
js
lcall
jg
add
test
popf
xor
rolb
popa
fs
imul
std
mov
lods
in
xchg
aaa
negb
and
in
add
push
xchg
add
mov
out
add
inc
mov
fldenv
dec
add
fwait
clc
mov
adc
mov
shlb
add
les
iret
add
arpl
inc
pop
and
aaa
mov
jge
pop
cwtl
enter
sub
dec
pop
aaa
mov
inc
mov
xchg
push
icebp
jbe
sub
cmp
popf
jno
adcb
daa
mov
shr
stos
mov
mov
dec
cmp
mov
add
lret
mov
aaa
shll
sub
or
inc
add
enter
into
sahf
xchg
add
inc
push
hlt
mov
adc
jg,pt
aam
ret
or
repz
aam
and
lea
add
loopne
mov
xor
adc
fstps
cltd
fidivrl
scas
lods
loop
xlat
inc
add
or
add
lret
or
mov
add
sbb
filds
inc
xor
mov
mov
mov
sbb
sar
pop
add
incl
inc
fldl
mov
xlat
add
jl
int
xchg
lods
cmp
gs
dec
add
and
ds
dec
mov
and
repz
jg
ret
test
jne
mov
mov
movsl
adcb
js
pusha
inc
push
stos
jl
dec
sbb
rcrb
and
xor
push
push
mov
shlb
jbe
pop
es
inc
sub
mov
mov
push
mov
add
cld
adc
pop
xchg
int
and
inc
lods
cmp
mov
inc
push
es
adc
add
idivb
lahf
aad
mov
add
or
cltd
add
jae
push
testl
rolb
add
or
mov
or
cmpsb
xchg
bound
mov
sbb
and
mov
flds
cmp
int
inc
jnp
mov
jmp
movsb
add
std
xor
sbb
fmull
add
mov
push
mov
fbld
pushl
mov
and
cmp
ret
ret
xor
cmp
fdivr
add
lock
push
int
add
push
fistl
and
test
jae
push
mov
add
ret
pop
int3
inc
fbld
adc
movsl
testb
es
sbb
push
aaa
fbld
inc
movl
fstpl
and
add
loope
push
cwtl
xchg
mov
shll
mov
mov
shlb
add
movsl
cld
xor
out
jne
adc
inc
call
jg
and
sbb
aaa
ret
popf
jl
arpl
add
mov
aad
mov
pop
test
mov
add
or
rcrb
dec
fsubr
xorb
jmp
daa
sbb
add
insb
jp
mov
push
mov
ret
pusha
jl
xor
test
arpl
sbb
jp
loopne
sti
mov
std
pop
sub
jne
mov
insl
add
imul
jmp
mull
imul
gs
ret
add
notb
fisttpll
repz
jp
mov
sub
jnp
xchg
shrl
mov
push
int
das
dec
xor
xchg
or
movsb
daa
mov
cmp
hlt
aaa
inc
fsubrp
incl
mov
add
cmpsl
push
in
loopne
xchg
cmp
mov
add
add
or
loope
les
mov
aad
xchg
lahf
sbb
xor
cmc
push
add
test
imul
mov
dec
xchg
sub
or
inc
and
push
jle
sbb
cltd
inc
into
aaa
mov
mov
mov
and
loopne
aaa
mov
inc
xchg
clc
jbe
mov
pop
adc
scas
shrb
add
in
inc
movsb
popf
test
test
loope
mov
mov
jae
lods
push
in
add
fadds
lcall
rcrl
mov
sub
fcomip
jnp
shl
jae
stc
cld
add
inc
arpl
jns
ret
or
adc
and
pop
getsec
xor
and
scas
mov
adc
loope
and
mov
xor
mov
out
add
out
inc
mov
and
push
pop
adc
aaa
and
mov
pop
icebp
adc
clc
mov
xchg
jb
push
int
or
mov
and
gs
xchg
ja
mov
pop
mov
mov
xchg
mov
sti
sub
mov
faddl
inc
jg
sub
lods
imull
imul
mov
sbb
call
cs
arpl
add
aas
lahf
dec
sahf
dec
aaa
or
dec
insl
push
sub
cmp
loop
mov
jge
ret
dec
xor
mov
rcrb
inc
movsb
test
mov
aaa
jg
cmp
aad
cmp
xchg
lods
adc
lods
addb
mov
push
mov
lcall
sub
mov
adc
cli
out
pop
cltd
bnd
pop
dec
fsts
and
dec
xor
int
sbb
addr16
out
mov
mov
shll
sub
add
and
cmp
dec
add
cmc
mov
inc
lds
fwait
cmp
add
push
xor
or
ficomps
adc
jno
aaa
xchg
in
xor
fildll
arpl
adc
cmpsl
inc
mov
ss
jb
or
push
bound
jno
add
repnz
fstp
add
in
fwait
jbe
lret
or
add
jecxz
mov
push
sbb
cmp
xchg
shrb
mov
out
dec
cmc
add
test
mov
jg
hlt
mov
and
or
mov
into
mov
mov
sbb
push
mov
fadds
jle
xlat
pop
test
push
inc
add
jecxz
push
movsb
out
mov
jo
inc
sub
into
sub
cmp
xchg
orb
or
cli
xchg
inc
mov
pop
add
out
out
mov
adc
add
and
xchg
xor
push
push
sub
enter
add
push
sahf
in
je
inc
add
jp
sbb
loope
in
aam
push
mov
sub
mov
inc
sbb
mov
mov
xchg
test
je
jecxz
jb
pop
ljmp
adc
add
mov
add
pop
adc
loop
dec
mov
mov
call
mov
in
and
sub
ret
or
ds
cmp
aad
add
mov
lret
sbb
dec
xor
aaa
adc
rcrl
push
xchg
lds
sbb
outsb
inc
mov
xchg
arpl
add
add
jnp
pop
imul
add
stos
rol
jl
or
add
fiadds
mov
lds
sub
jecxz
xchg
pusha
xchg
mov
iret
loopne
inc
xor
mov
das
push
sbb
add
push
jbe
sbb
lds
push
insl
mov
or
add
call
or
outsb
mov
xchg
adc
jbe
add
addb
push
enter
or
cmp
test
mov
xchg
and
lock
cld
test
dec
lcall
sahf
bound
mov
dec
out
inc
sbb
push
pop
mov
andb
sbb
mov
clc
jo
inc
jne
mov
mov
punpckldq
aaa
fcompl
icebp
shlb
fisttps
or
je
xor
dec
and
jnp
aaa
test
mov
roll
movsbl
pop
or
xchg
popf
lods
cmp
mov
je
ljmp
sbb
dec
pop
add
jg
pop
in
pop
adc
mov
std
xor
bnd
xchg
adc
jnp
pushf
mov
pop
mov
inc
fldln2
aaa
cmp
and
shll
add
or
xchg
aaa
cwtl
pop
push
sub
xor
inc
test
xor
inc
hlt
mov
xlat
fldenv
fcompl
sbb
push
jno
sti
dec
mov
mov
inc
jbe
add
xor
lcall
jae
insb
ja
sbb
aad
push
fimull
cmp
loope
mov
mov
dec
mov
add
roll
lock
sub
dec
xchg
pop
xor
and
popf
lods
xchg
mov
mov
push
shlb
add
lods
jg
push
add
movsb
and
lahf
jmp
jp
sub
in
mov
xlat
movsb
lahf
dec
push
aaa
scas
leave
ds
pop
call
jae
jo
or
shlb
flds
in
lret
sub
cmpsl
jo
add
xchg
es
popf
aaa
mov
mov
mov
xor
lcall
push
xor
and
add
test
sub
nopl
ret
sahf
sub
mov
les
jbe
xchg
add
jnp
fs
sub
in
fldlg2
lahf
add
add
pop
dec
mov
mov
sbb
cmp
push
mov
les
mov
dec
lods
jp
cmp
mov
or
repz
pop
mov
pop
jne
repz
insb
out
add
repnz
in
lods
into
add
pop
out
add
mov
outsl
nop
mov
fs
rolb
test
push
cmpsl
xchg
rcrl
push
inc
add
cmp
movsl
sub
xchg
add
dec
inc
add
or
test
inc
fucomip
clc
or
push
adcl
adc
inc
out
jo
dec
cli
hlt
mov
xor
and
mov
aaa
test
test
fadds
or
cwtl
cmp
mov
jle
jbe
and
fwait
sub
pop
and
push
pushl
push
push
jb
mull
push
dec
add
fidivs
jecxz
loopne
fdivrl
sbb
sbb
out
inc
aaa
shll
jne
xor
add
enter
mov
mov
in
fidivl
ljmp
incb
adc
pusha
adc
xor
mov
dec
insl
jecxz
or
fwait
and
dec
test
sbb
daa
movsb
mov
xor
aam
add
add
inc
inc
dec
aaa
popf
jbe
cld
push
fcmovne
add
jno
and
je
add
das
cli
mov
scas
rcr
xor
mov
inc
pushl
out
and
lea
xor
inc
pop
lret
add
imul
lcall
jmp
jp
mov
stos
sbb
xor
sbb
sub
inc
mov
addb
arpl
mov
test
int3
xchg
aaa
rcr
and
scas
andb
xor
icebp
push
sbb
aaa
cmp
in
mov
nop
andl
xor
in
loope
addr16
jne,pn
pop
add
pop
xchg
and
in
fnsave
ret
pop
std
stos
inc
push
mov
mov
jmp
mov
cli
rorl
stos
jns
pop
aaa
imul
dec
sbb
adc
rcr
mov
pop
add
mov
add
xchg
xor
and
jns
dec
imul
mov
aaa
or
xor
stos
out
jns
add
lds
push
fwait
pop
aaa
inc
jecxz
ftst
xor
ss
bound
sbb
cmc
pop
sub
fwait
inc
rorb
sub
push
add
ss
fdivrl
pop
aaa
cld
jmp
rcrb
xor
lcall
jecxz
mov
mov
imul
or
test
cs
arpl
sarb
and
adc
test
aas
add
mov
add
push
cmp
loope
sbb
sub
cmp
aaa
out
loop
dec
jne
sarb
sub
push
xor
rorb
cmpsl
and
push
sbb
inc
cmp
adc
sbb
jne
sub
adc
xchg
in
scas
roll
mov
dec
fs
sti
pop
int3
int
mov
add
leave
pop
jecxz
inc
rorb
push
dec
mov
daa
loopne
adc
inc
add
cmpsb
add
lret
gs
mov
cmp
cmpb
mov
call
stos
enter
nop
mov
inc
push
mov
movntq
or
jae
leave
add
jmp
clc
push
call
dec
cmpsl
add
call
divb
fimull
cmpsb
and
in
aaa
mov
push
flds
push
jnp
inc
adc
and
repz
jg
in
cmp
sbbb
mov
sbb
mov
dec
mov
test
xor
xor
cli
inc
fs
mov
popl
fnsave
movsl
aaa
xchg
add
fcmove
jle
sbb
fwait
stc
enter
add
jns
xchg
sahf
xchg
aad
jae
mov
mov
xor
icebp
push
add
cld
out
add
fisttps
add
stos
sysretw
inc
sub
sbb
testw
arpl
pop
xchg
lock
mov
pop
mov
push
clc
fists
in
lods
in
xchg
loopne
loopne
jns
out
es
inc
add
lds
xchg
push
clc
fdivs
mov
nop
jg
push
jne
ss
gs
mov
jae
ret
jecxz
mov
lds
cmp
jno
pop
dec
aaa
push
test
mov
shlb
ds
push
mov
xor
add
add
add
add
ja
xor
inc
mov
pop
mov
mov
movsl
push
gs
xchg
push
xor
aaa
pop
adc
das
add
mov
dec
add
pop
mov
add
adcl
outsb
inc
fildl
pop
jb
sub
cmpsb
add
in
pop
xor
mov
add
sti
push
push
jnp
push
movl
adc
int
xor
push
dec
outsb
into
or
shll
leave
jno
add
outsl
xchg
xchg
scas
and
outsb
sbb
push
sbb
xor
sbb
add
jge
imul
sbb
in
aaa
insl
insb
jmp
ljmp
movsb
pop
sbb
int
add
dec
rol
push
cltd
cmp
mov
and
xor
mov
xor
incl
or
in
and
and
add
mov
mov
cmpsb
aaa
inc
or
xchg
testb
sbb
in
popa
roll
mov
js
lcall
ss
jbe
push
sbb
call
aaa
sub
and
movsb
ljmp
in
jne
add
std
jmp
mov
mov
movsl
aaa
mov
in
mov
aaa
dec
test
lret
aaa
jo
mov
filds
xor
lods
mov
add
add
hlt
les
or
adc
lods
mov
dec
inc
pop
push
pmaxsw
mov
or
add
mov
cmp
adcl
dec
out
sbb
mov
icebp
dec
cmpb
fidivl
dec
push
mov
out
push
hlt
iret
push
imul
out
ss
pusha
xchg
pop
cmp
mov
xor
bound
dec
aaa
ror
or
test
aaa
cld
loopne
add
hlt
cmc
jbe
pop
mov
mov
imul
repnz
dec
mov
lcall
push
inc
adc
movsb
mov
rcrb
adc
jae
add
in
mov
icebp
ret
push
dec
add
inc
addr16
mov
cmp
adc
mov
lods
ret
das
iret
mov
xor
xor
mov
ffreep
xor
mov
adc
roll
cwtl
mov
hlt
and
sbb
sbb
negb
scas
lret
test
pop
mov
xorl
fs
cmc
inc
pop
loopne
xchg
or
or
xchg
jl
mov
mov
pop
mov
loopne
aas
dec
aaa
cmp
insb
lods
loop
sti
dec
add
push
mov
xchg
enter
out
mov
test
je
add
jbe
lcall
cld
cmp
pushf
pop
add
clc
mov
mov
jecxz
adc
sub
push
inc
add
lret
ds
test
in
movsb
add
leave
cmp
mov
fsubrl
push
jbe
rclb
pop
pop
fwait
pop
or
adc
aaa
pushf
sub
xchg
dec
xchg
movsb
jmp
test
xor
xor
xor
jns
out
xchg
jo
pop
mov
subb
push
mov
push
mov
mov
sahf
sbb
out
push
mov
jge
add
jmp
movsb
ja
mov
loopne
testb
aad
lds
loopne
movsb
xor
int3
lods
adc
addr16
add
add
push
pop
pop
xchg
or
in
push
es
idivb
sti
sub
and
fmuls
mov
add
or
movsb
mov
mov
add
mov
xlat
add
adc
xchg
pushf
sbb
scas
mov
lds
fdivl
mov
mov
into
xchg
pop
add
mov
and
lock
cli
xor
pop
adc
rolb
push
dec
fcompl
and
adc
std
fadds
xchg
adc
aaa
ljmp
addb
mov
pop
adc
adcl
mov
aaa
out
mov
pop
add
adc
dec
test
out
jle
aaa
inc
addr16
mov
jmp
movsl
cmp
into
sub
int
xor
pop
mov
lods
jg
sub
icebp
ja
or
push
stc
cmp
lcall
movsb
jns
jle
mov
mov
shrl
ret
push
jns
mov
in
popf
insb
int3
cmp
mov
mov
inc
test
and
hlt
push
ret
int3
push
jmp
lea
adc
loope
sti
fisttpll
call
imul
shl
roll
jne
add
out
in
sub
add
stos
push
std
out
repz
mov
adc
fwait
scas
mov
mov
ret
in
mov
shlb
je
mov
add
bound
mov
adc
adc
sub
notl
aad
inc
lods
dec
testl
and
loop
add
add
ljmp
or
mov
pop
mov
add
sbb
and
sub
scas
call
movsl
xor
sub
mov
lcall
scas
jnp
push
pop
cwtl
sbb
mov
rclb
aaa
pop
xchg
fldln2
cmc
pop
mov
add
filds
jns
decl
ret
call
mov
aaa
jo
cltd
gs
sarb
cmpsb
sub
xor
imul
aam
call
in
shr
push
add
out
mov
rol
push
aaa
and
scas
xor
lods
insl
mov
mov
lock
fildl
ret
add
jbe
sbbl
out
adc
add
xchg
ja
xchg
adc
mov
sbb
and
xorl
xor
xchg
in
push
push
cmp
cwtl
aaa
dec
das
xlat
mov
lods
test
push
aam
inc
pusha
pop
jg
ljmp
insb
add
xor
and
stc
push
mov
in
sub
push
inc
jle
jbe
mov
stc
and
data16
lcall
mov
push
xchg
pop
add
fld
daa
add
mov
and
mull
add
hlt
sar
add
js
dec
add
pop
jp
rolb
fdivl
push
push
clc
mov
andb
xchg
inc
add
xor
inc
outsb
rcl
daa
mov
pop
add
sub
das
pop
orl
leave
lds
out
adc
cmp
daa
shrl
call
in
insl
in
mov
hlt
ss
push
loop
push
inc
mov
pop
mov
data16
cmpsb
popa
outsb
cmp
out
mov
pop
cmc
adc
jmp
movsl
adc
xlat
xor
pop
cwtl
aaa
xor
mov
add
lcall
sub
add
mov
aam
fwait
aaa
adc
je
aaa
and
aad
mov
xchg
shll
sbb
add
arpl
push
add
hlt
mov
add
pushl
xchg
lods
push
orb
xor
fisttps
inc
cld
lods
xchg
sahf
outsl
ret
cmpb
js
inc
inc
mov
xlat
push
mov
cwtl
mov
movsl
clc
movsl
adc
mov
pop
or
jo
mov
and
jp
outsl
movsl
push
mov
outsb
mov
jb
xchg
cmpsl
ja
nop/reserved
aaa
or
push
xchg
fucomp
dec
pusha
test
jnp
cmpsl
shll
sbb
and
jp
int3
add
inc
rorl
test
popf
pop
rcrb
add
lock
sbb
loope
adc
dec
out
sub
aam
movsb
stos
scas
aaa
lods
dec
add
fwait
ds
cld
push
out
fwait
mov
and
imul
insl
sbb
add
xchg
cltd
cli
fisubl
in
mov
lahf
sub
xor
add
call
push
push
jno
int
jnp
aaa
mov
enter
lods
pop
aaa
jae
cld
mov
push
adc
sub
aaa
loop
pop
sbb
cmp
sarl
inc
pusha
lods
test
xchg
mov
dec
aam
sbb
aaa
mov
sti
popl
and
sbb
push
std
cmp
pushl
dec
repz
push
fwait
add
insl
ret
cmp
push
jecxz
out
imul
push
aaa
shll
popl
mov
pushf
ret
add
ljmp
jbe
xchg
lds
inc
push
subl
ret
enter
pop
dec
aaa
mov
jecxz
pop
xchg
adc
add
jo
pop
pop
jnp
rep
scas
insb
aas
inc
pop
daa
mov
icebp
pop
jecxz
push
push
inc
inc
loope
cmpsl
in
sub
insb
hlt
mov
jmp
mov
add
in
test
add
sbb
stc
lcall
sub
out
inc
add
cwtl
jae
sbb
enter
mov
and
mov
sarb
sbb
mov
lds
mov
sub
test
cmp
jecxz
shl
mov
push
jb
or
aas
or
out
test
arpl
je
xor
mov
in
cwtl
nop
test
mov
pop
cmpsb
cwtl
cmp
mov
ljmp
adc
loopne
cmp
sti
pusha
out
ja
or
aaa
scas
popa
mov
icebp
pop
mov
mov
out
inc
sbb
push
ss
fisubrl
sbb
xor
cli
std
shrb
mov
add
and
lds
lods
pushf
push
into
and
stos
sti
mov
je
gs
xlat
inc
bound
add
sbb
shl
pop
out
sub
js
aaa
sub
scas
mov
dec
dec
add
cmpsl
loop
push
cmp
xchg
and
movsl
xor
test
mov
mov
xchg
cmpb
xchg
add
pop
push
mov
inc
pop
shll
in
cmc
orl
dec
cltd
pop
add
or
ss
inc
jl
mov
xor
xchg
xorl
and
sub
push
outsl
add
mov
lods
dec
pop
add
aam
jecxz
out
mov
xchg
movb
or
mov
push
dec
adc
loope
fxch
loopne
or
push
xchg
into
inc
test
lahf
cltd
shl
das
or
mov
xor
fidivl
aas
clc
bndstx
ret
xor
popa
inc
push
add
rorb
add
xchg
add
mov
pop
cmp
stos
xor
pop
mov
add
inc
mov
push
inc
lock
dec
mov
mov
xor
dec
add
ret
lret
push
inc
xchg
add
xor
mov
and
insb
pushl
dec
mov
out
enter
cmp
int3
mov
mov
mov
add
push
push
mov
cmpsl
adcl
jb
mov
mov
mov
cs
aaa
sbb
push
xchg
xor
mov
fwait
adc
mov
das
aas
sbbb
jmp
fsubs
lcall
cmp
sti
adcb
bound
fldz
rclb
aaa
cld
dec
pusha
mov
jl
mov
xchg
jae
adc
jbe
lock
and
add
ficoml
jg
sub
jno
bound
test
lret
inc
pop
push
aam
out
and
mov
in
shll
xor
roll
dec
cmpsb
add
cmp
mov
adc
popa
imull
cltd
push
mov
int
cmp
pop
inc
ret
add
add
add
out
add
cmp
movsl
scas
push
mov
push
cmpsb
inc
ds
inc
add
test
pcmpeqw
push
mov
aaa
jae
nop
mov
jecxz
test
add
xor
call
jg
sbb
cs
push
repz
in
outsl
ret
leave
and
mov
aas
pop
ds
shr
mov
inc
xchg
enter
or
lea
mov
imul
lods
adc
leave
lahf
sbb
add
lea
aaa
sub
aas
xchg
dec
adc
out
sbb
sbb
or
mov
mov
cltd
mov
dec
mov
add
notb
fsub
mov
xor
lea
inc
sbb
or
mov
rorb
loopne
iret
sbb
inc
cltd
data16
pusha
push
inc
push
out
lea
add
mov
jl
mov
out
lret
aaa
int3
dec
adc
mov
ljmp
popa
dec
lcall
imul
and
xor
movl
xchg
aaa
push
pusha
cmc
clc
mov
adc
push
sbb
fcoms
dec
dec
rorb
out
punpckhwd
and
loopne
daa
jne
jecxz
cwtl
mov
add
popl
adcl
loope
add
hlt
pop
pop
pop
or
cmp
movsb
mov
cltd
mov
jmp
adc
xlat
mov
fld
clc
push
add
sub
in
ss
inc
pusha
push
rcrb
outsl
add
push
icebp
mov
outsb
xor
cmp
pop
btc
mov
pop
push
ljmpw
out
nop
ljmp
inc
jmp
push
mov
push
push
aad
ds
fsubrl
mov
addr16
test
add
mov
repz
push
fbld
jno
xor
push
out
mov
cmpsb
sti
daa
fcmovne
add
loope
repz
add
xchg
sub
pusha
sbb
pop
inc
fiaddl
rcll
sub
stos
pop
jle
mov
gs
pop
add
sbb
mov
pop
icebp
movsb
dec
push
loope
mov
ret
adc
lods
push
add
push
mov
pop
add
jle
nop
into
andb
xor
aaa
in
sbb
test
out
dec
ret
movsb
ret
add
lods
push
mov
mov
add
cmp
int3
shrl
and
push
lahf
out
add
inc
mov
pop
inc
sub
inc
daa
cs
push
cmp
ss
xor
aaa
adc
xchg
test
lret
add
jnp
outsb
sti
pop
repz
es
xchg
push
dec
clc
dec
pop
mov
dec
push
xor
test
push
mov
dec
sub
adc
aaa
jno
cmp
pop
xchg
loopne
pop
incl
dec
mov
lods
pop
adc
fsubl
add
shl
cmp
stos
add
rcrb
xchg
lods
jae
mov
dec
pop
add
stos
and
adc
shlb
repz
sti
dec
add
mov
add
lret
xchg
mov
in
incl
xchg
imul
lcall
sub
fdivp
add
pop
add
aaa
push
and
mov
lcall
jl
jne
cmp
jl
lret
lcall
xchg
xor
je
imulb
aaa
jae
out
cld
adc
out
lret
cmpsl
jbe
das
aaa
lea
or
movb
mov
pop
arpl
add
pop
repnz
and
jg
mov
aas
dec
leave
in
aaa
sbb
mov
jo
pop
adc
dec
add
lds
mov
sti
add
daa
fidivl
jmp
xchg
add
jb
je
pop
sti
pop
mov
push
jae
test
ja
aaa
add
xor
enter
int3
pop
xor
pop
pop
sbb
xchg
jno
mov
mov
pop
fildll
push
dec
pushf
and
lods
xchg
jae
in
out
rcrb
mov
push
and
jge
daa
mov
icebp
xor
push
sbb
jmp
add
dec
cmpsb
test
mov
hlt
fcomip
sahf
imul
mov
adc
add
sbb
mov
adc
fsubrs
jl
aas
sti
bound
rolb
fwait
cli
add
lods
mov
iret
daa
mov
sti
xlat
sub
add
orb
jmp
jle
outsb
shll
lods
xchg
pop
cmpsl
xchg
adc
lods
inc
or
add
sbbb
jmp
jne
out
push
mov
pop
xlat
or
lods
cltd
and
add
xor
and
int3
arpl
movsl
jae
cs
xchg
aam
sarb
out
incb
mov
shll
push
mov
mov
inc
jg
sub
nop
pushf
and
ret
adc
lahf
jns
ficoms
jp
jg
add
in
sti
lods
test
xchg
mov
mov
aam
test
jg
push
sbb
std
xlat
add
add
call
mov
xchg
cmp
pop
mov
push
push
or
cmp
out
jl
push
and
sub
js
rolb
cmp
add
add
addr16
add
jl
loope
icebp
fsubr
in
gs
push
cmp
out
ficoml
pusha
add
stc
adc
aaa
ud0
mov
push
pushf
push
inc
rcrb
mov
xchg
loopne
cltd
leave
aaa
hlt
lods
gs
cmp
mov
lods
mov
scas
aaa
xor
fildl
mov
aam
loopne
es
add
push
mov
and
sub
mov
mov
movsb
pop
mov
cmp
add
pusha
or
out
push
mov
jno
fnstenv
push
jmp
inc
and
xchg
rorb
fiadds
jnp
stc
xorl
repz
mov
cmp
sbb
ror
in
mov
add
sar
cmpsb
add
jbe
or
iret
pushf
mov
adc
push
fucom
lret
das
xor
pop
adcb
inc
pop
jmp
loopne
std
dec
jb
in
shlb
xor
lods
or
insb
in
sbb
inc
sbb
pop
mov
inc
xchg
xor
sbb
add
test
push
add
ds
xchg
cmc
adc
cmp
lea
gs
pop
mov
dec
mov
mov
mov
push
lock
mov
mov
xchg
leave
aaa
add
rol
test
shrl
push
adc
movsl
cltd
pop
jae
sub
pop
or
data16
sub
ja
mov
mov
aas
sub
addr16
sarb
fildl
popf
cmp
jb
aaa
inc
sti
decl
fs
pusha
add
filds
stc
xorps
push
add
into
mov
or
out
jns
sbb
mov
or
inc
roll
testb
sti
sar
cmp
fnstcw
lret
int3
test
add
adc
popa
add
aam
mull
add
lods
mov
push
adc
cwtl
add
out
xchg
addr16
insl
add
and
jb
xchg
xchg
lahf
mov
adc
push
jb
movsb
loopne
jmp
mov
dec
adc
mov
mov
cmp
lcall
aad
xchg
negl
mov
and
jg
xor
sti
movb
add
jmp
mov
inc
xchg
xchg
enter
mov
lcall
out
inc
sbb
mfence
test
lahf
pop
stc
test
add
inc
push
pop
addr16
push
mov
jp
dec
jae
cmp
cltd
aaa
jge
mov
adc
ljmp
in
jg
add
data16
insb
xor
in
and
test
pop
andb
out
mov
sti
push
aam
push
aad
adc
fwait
adc
out
nop
cmp
adc
test
sarl
lea
pop
icebp
or
out
cmp
jns
sbb
add
stc
in
aam
push
add
mov
push
ret
xchg
inc
add
aad
jnp
cmp
add
jge
cmp
dec
sbb
aaa
sarl
pop
and
xchg
mov
and
dec
shrb
stc
mov
daa
xor
adcb
mov
xorb
test
aam
cld
sahf
add
lods
xchg
mov
adc
add
mov
repnz
mul
mov
test
pop
add
shlb
fucomi
add
jne
xchg
pop
and
and
iret
shl
shlb
orb
popa
addb
ret
lcall
and
call
scas
sub
movsl
jg,pt
push
mov
outsl
cmp
fdivr
and
xor
mov
int
and
inc
test
xor
jno
insb
push
inc
push
add
pop
cmp
sub
aaa
arpl
mov
pop
add
fmul
scas
add
int3
xchg
mov
add
les
xor
loope
add
arpl
mull
aaa
outsl
cmc
test
cli
or
ljmp
mov
in
xor
jle
int3
add
bound
mov
fisubrl
push
mov
or
dec
lods
xchg
xrstor
test
hlt
inc
inc
xchg
cmp
mov
cmpsl
dec
xor
rorb
es
xor
cmp
mov
pop
add
in
jge
rolb
arpl
addb
push
mov
add
or
jnp
in
mov
cli
cltd
ror
sti
sbb
sahf
addb
sbbb
cmpsl
push
xor
and
ret
xor
add
jnp
ficoms
adc
out
cmp
xchg
jg
and
adc
pop
or
xor
and
pop
shlb
dec
clc
mov
add
xlat
testb
pop
cmc
xor
xchg
mov
sub
cld
test
add
lret
stos
sti
sbb
mov
xor
lods
xor
mov
jp
mov
pop
scas
test
daa
adcl
mov
mov
testl
dec
jns
inc
cmp
aaa
jne
mov
jg
fs
ds
xor
and
cmp
ljmp
cltd
push
pop
mov
jmp
clts
xor
subb
stc
push
sub
icebp
xor
jae
fldl
lret
rcrl
push
and
xor
pop
cmp
pushf
add
xor
or
inc
out
xor
call
add
xor
scas
imul
xchg
mov
sbb
aas
jg
rcl
addr16
insb
sbb
fsub
cmpsb
decl
loopne
add
add
in
sbb
and
or
xchg
pusha
xlat
sahf
dec
add
outsl
xchg
push
or
addb
mov
xchg
call
mov
pushl
inc
mov
push
scas
mov
cltd
jl
jne
into
insl
xor
aaa
call
test
and
enter
xor
jb
inc
in
stos
sub
mov
rclb
ret
ljmp
mov
fs
xchg
addb
jg
test
adc
addl
mov
mov
test
xchg
add
mov
movsb
pop
or
js
imul
jmp
pushf
sub
lahf
cmpsb
add
dec
push
bound
xor
inc
inc
rcrb
addr16
in
add
test
rclb
pop
fbstp
adc
vpcomw
jne
and
in
add
fdivrs
xor
cs
movb
dec
and
mov
sbb
mov
adc
rcl
dec
lahf
jne
aaa
adc
push
xlat
add
jge
mov
sub
pushf
push
push
jne
fadd
loopne
call
inc
jp
or
inc
push
inc
aas
lods
lret
mov
xorb
nop
aaa
jne
insl
jmp
inc
push
lods
cmp
shll
aad
dec
xchg
cwtl
mov
jbe
sbb
adc
jecxz
rorb
xchg
rcr
and
sub
mov
add
cmc
and
jns
mov
adc
in
xchg
jnp
push
cmc
and
add
xor
cmp
add
inc
xor
pop
add
je
mov
dec
push
mov
repnz
jecxz
and
inc
add
inc
and
cltd
add
pushf
sbb
imul
imul
mov
movsl
adc
push
data16
cmp
add
sar
cmp
dec
pushf
mov
pop
es
xlat
xor
add
inc
in
imul
fldenv
push
les
out
mov
mov
std
pop
cld
cli
lds
fnstsw
add
pop
push
gs
inc
cli
mov
add
inc
arpl
mov
cmp
sbb
sti
lods
std
lock
xlat
sbb
outsb
add
inc
ja
mov
ljmp
jo
push
xchg
ja
jo
negl
fsub
push
movsb
push
and
ret
out
jb
mov
jno
mulb
dec
enter
mov
jp
imul
mov
mov
sar
inc
inc
mov
xchg
lret
pop
mov
ret
shrl
insl
jg
fnsave
sub
cmpsl
mov
out
xor
test
and
pop
xchg
icebp
aaa
orl
pop
outsl
push
movl
clc
jnp
xor
fwait
aad
arpl
daa
lahf
lcall
push
lret
cmpl
test
ds
lahf
cld
ret
dec
xchg
add
bound
cmp
push
sbb
js
jne
fwait
das
mov
div
dec
mov
daa
int3
loop
aaa
inc
dec
mov
outsb
and
sub
dec
ficompl
lds
mov
push
sub
sbb
mov
and
fcomip
add
int3
sbb
sub
fsubl
add
sbb
dec
mov
insb
push
in
mov
aad
jnp
aaa
out
fistpl
add
popf
mov
aam
aaa
or
jnp
cmp
icebp
push
lret
popa
incb
xchg
stos
mov
mov
daa
pop
mov
nopl
popf
aaa
gs
jecxz
add
or
mov
xorb
jecxz
mov
dec
dec
enter
lods
pusha
rolb
jecxz
mov
stc
cmp
into
leave
add
call
lcall
inc
inc
mov
cmp
sub
add
loope
cli
sub
pop
xchg
add
sbb
add
jmp
or
mov
repz
adc
add
jo
jmpw
jg
dec
or
aam
mov
jmp
test
and
fnsave
pop
lea
add
hlt
fld1
xchg
xchg
add
mov
adc
into
dec
aad
jne
roll
ret
mov
sti
mov
mov
push
push
add
sub
push
push
imul
adc
ret
sub
xchg
inc
mov
mov
pusha
fbstp
repnz
lahf
xor
sbb
aas
adc
lds
dec
in
pop
dec
fldl
push
loope
pop
pop
mov
jo
clc
addr16
leave
cmpsl
addr16
out
int
loop
mov
and
in
xor
mov
inc
mov
andb
outsl
mov
xor
loope
arpl
push
or
jle
mov
push
add
and
cld
add
and
call
mov
cwtl
inc
add
imul
fcoms
pop
loopne
dec
aam
xor
sbb
fadds
pop
test
fwait
and
add
sbb
jge
int3
sbb
aas
add
inc
mov
stos
or
cmpsl
dec
xchg
test
pop
orb
jns
xchg
jmp
dec
cmp
stos
inc
cld
ja
jns
cld
icebp
xor
and
ret
dec
mov
cwtl
shrl
xor
jge
les
cmp
icebp
int3
scas
pop
popa
jmp
lahf
ret
repnz
dec
jle
jecxz
es
aaa
inc
mov
add
or
xor
add
push
jecxz
jge
outsb
inc
pop
sbbl
aaa
add
add
cmp
aas
add
mov
aam
cmp
and
les
xchg
sub
mov
xor
aaa
pop
or
call
aas
sub
in
loop
cmp
inc
test
dec
lret
sbb
add
add
aaa
fwait
sbb
shl
add
ret
jae
inc
jl
aas
hlt
sahf
fisttpl
xchg
cmpsb
push
mov
aaa
iret
ffreep
inc
mov
aaa
lods
add
adc
mov
clc
fsubs
ss
and
ret
inc
dec
pushf
scas
sbb
cli
mov
popa
test
ss
or
enter
cmp
mov
cmp
push
xor
mov
mov
jo
std
dec
popa
mov
adc
push
jns
mov
dec
aaa
jecxz
rcrb
jae
mov
mov
lahf
xor
sarb
push
xor
repz
or
push
jg
mov
cld
out
xor
mov
add
push
pop
int3
mov
or
add
sbb
fsubr
add
sub
js
out
push
aaa
xchg
lods
pop
mov
cmp
add
mov
add
scas
cmpsl
jge
sbb
mov
fnstcw
aas
aaa
stc
xchg
sub
into
aad
jecxz
sub
arpl
jp
adc
scas
jns
or
lock
gs
dec
popa
add
inc
fildl
lods
push
lock
cld
cwtl
push
xlat
push
adc
aaa
xlat
push
popa
mov
add
sbb
add
test
push
stos
mov
fsubr
xchg
xchg
aaa
bound
pop
cmpsb
add
add
sub
xchg
mov
ljmp
icebp
add
in
adc
insb
fwait
addb
shlb
mov
fwait
aam
push
iret
push
call
adc
sub
add
and
cmpsl
cmpsl
xchg
xchg
push
add
fstp
add
dec
mulb
outsl
lcall
movsb
pop
stos
lods
xlat
cmovno
mov
inc
ret
pusha
int
shll
ficoms
sub
mov
shrl
cmpsl
out
and
aaa
pop
sub
mov
roll
psubq
push
fld
mov
mov
ljmp
es
jae
sbb
sub
push
andb
and
cli
xlat
add
adc
inc
jmp
mov
lods
inc
add
imul
cmp
xor
push
imull
aaa
scas
lea
inc
loop
mov
into
push
mov
sbb
jo
sbb
dec
fwait
out
cmp
inc
or
mov
add
scas
fimull
les
mov
leave
push
in
call
sub
out
jnp
adc
andl
add
xor
jp
clc
mov
xor
push
dec
and
xchg
and
add
inc
gs
pop
bound
mov
imul
leave
and
push
or
jb
aaa
movlps
push
out
add
pusha
xchg
mov
push
dec
out
fisubrl
xchg
dec
add
sbb
dec
or
cmp
cmp
lock
cmp
jecxz
imul
add
sub
gs
mov
roll
shlb
iret
pusha
inc
loop
xchg
push
sbb
xchg
adc
out
inc
in
cmpsl
sub
pop
cmpxchg
pop
or
faddl
mov
ret
add
jnp
enter
jns
rclb
arpl
mov
sub
rorb
sub
xlat
nop
push
xor
cmpl
addr16
test
jp
mov
negb
mov
stc
pop
push
add
sbb
pop
cmp
loope
and
push
xor
push
sbb
pop
addr16
add
mov
xchg
aad
add
imul
xor
and
push
sbb
mov
hlt
xor
add
insb
inc
adcl
test
lock
jbe
pop
pop
add
dec
push
daa
sub
mov
xor
adc
enter
nop
sub
fmul
push
fs
jns
ret
icebp
daa
sahf
jne
add
fwait
ret
or
mov
mov
rclb
enter
sub
out
adc
push
lds
iret
push
xchg
aaa
inc
lock
jae
or
cmp
mov
gs
and
xchg
mov
sub
inc
mov
jp
sti
jne
mov
dec
xlat
enter
add
mov
bsr
fnstenv
and
cmp
cmp
shll
jl
test
flds
inc
repz
and
sub
xor
sti
gs
cmp
cmpsb
mov
andb
push
add
sbb
xor
repnz
push
and
sub
push
cmp
add
faddp
dec
mov
mov
xchg
shlb
xor
pop
jnp
out
arpl
iret
xchg
xor
sbb
icebp
push
dec
add
xchg
dec
mov
add
jp
or
and
push
mov
inc
inc
jns
mov
std
outsb
pop
sub
hlt
xor
sbb
xchg
shll
movsl
push
rolb
add
mov
vmovsd
push
mov
orl
mov
pop
in
xchg
mov
pop
adc
jecxz
pop
paddb
loopne
outsb
cmp
xor
add
jecxz
insb
cmp
mov
call
lcall
mov
rol
push
jg
add
jmp
inc
mov
leave
add
cld
dec
xor
xchg
xor
cmp
or
fidivs
add
fsubs
nop
jle
ret
cmp
cmc
pop
mov
xchg
sbb
pop
sbb
stos
shl
sbb
dec
fwait
mov
iret
repnz
jmp
push
ret
sbb
cmpsl
push
stos
jae
shrb
clc
mov
fwait
cmp
push
mov
test
pmaxub
and
push
incl
in
popa
aam
inc
mov
mov
cmp
pop
cs
int
jecxz
mov
mov
adc
ret
mov
cmp
mov
call
jge
jg
gs
cmc
sahf
stos
add
lahf
mov
mov
pop
out
mov
test
add
add
sub
cltd
add
pop
jnp
andl
movsb
cmp
sub
in
add
push
ficoms
ljmp
and
mov
aaa
ret
incb
mov
loopne
mov
addb
scas
xchg
sbb
inc
mov
mov
push
mov
and
mov
adc
cld
jne
mov
data16
shlb
mov
mov
dec
aaa
or
cmp
jne,pn
nop
jns
movsb
movsb
outsb
out
mov
or
push
pop
cmp
rcl
roll
rep
imulb
dec
sahf
inc
std
mov
push
add
test
pcmpeqw
sub
mov
cmpsb
jnp
mov
fidivs
lret
sub
add
xor
loopne
push
mov
sub
lret
mov
pop
pop
and
testb
xchg
das
pop
mov
push
or
ja
or
iret
insb
les
xor
sub
movsb
sbb
gs
push
aas
addr16
mov
mov
outsb
pop
fists
loopne
mov
cmpsl
dec
test
fidivs
add
bound
mov
sbb
inc
mov
out
movsl
outsb
lock
xchg
stos
int
adc
add
dec
and
faddl
inc
add
aad
dec
imul
pop
sti
in
fists
out
fbstp
lret
push
sti
movsb
sbb
lock
movsl
cmp
inc
jmp
inc
mov
lahf
and
add
sbb
in
testb
shl
in
in
add
adc
push
add
iret
adc
xlat
xorb
into
lret
xor
bnd
mov
adc
adc
aaa
in
xchg
sbbb
jno
shl
loopne
push
xor
jns
enter
test
arpl
mov
into
pusha
daa
aas
pop
cli
mov
movsl
mov
push
mov
inc
or
lds
add
popa
ret
inc
lds
aaa
xchg
scas
into
mov
jns
imul
aad
les
adc
add
movsb
xchg
popa
add
pop
inc
sbb
cmpsb
test
bt
stos
jo
dec
xchg
clc
mov
push
cmp
mov
add
mov
pop
or
das
in
xchg
out
push
js
lar
lods
ret
inc
pop
mov
jo
insb
lods
or
add
sbb
orl
sbb
andb
inc
sbb
pop
popf
or
or
cli
enter
cmp
lahf
inc
test
pop
cmp
aaa
xchg
pop
sbb
inc
xchg
adc
fs
int
es
test
ret
decl
mov
aaa
push
sub
add
or
ret
subl
xor
std
dec
sarb
add
mov
rcll
aaa
inc
ret
cmp
repnz
test
es
push
push
popf
mov
xor
pop
ja
jb
popa
pushf
repz
mov
in
fisubs
xchg
jg
jle
dec
jae
pop
sar
in
mov
shrb
cs
and
xor
mov
idivl
sarl
andl
loop
lahf
pop
mov
popa
sub
stc
jp
shl
mov
pop
fcoml
sbb
jg
jmp
cmp
xor
jle
and
loopne
dec
pop
aas
add
lods
sub
pop
add
iret
imul
push
xor
cmp
cwtl
leave
inc
fs
aaa
dec
fdivs
gs
das
aam
mov
push
mov
lret
jo
mov
mov
jne
and
sahf
sub
mov
cs
sub
cmp
pusha
sbb
ret
push
mov
xor
out
mov
jns
inc
push
popa
pushf
add
ret
add
cmp
aad
jmp
repz
ret
les
fdivl
ss
sbb
movl
es
cli
xchg
jg
addl
rcrl
sbb
push
jp
mov
leave
add
aad
notl
mov
jb
mov
test
sub
scas
ja
mov
jns
adc
aas
call
xchg
xchg
repz
outsb
dec
add
cltd
push
inc
into
pop
or
and
inc
lods
mov
cmc
xchg
push
xchg
aaa
mov
push
fs
add
mov
mov
cli
push
scas
cs
test
cmc
inc
mov
add
les
cmp
xor
mov
add
sub
jno
out
leave
arpl
popf
sub
add
jl
leave
fidivrs
adc
and
shll
xor
jl
mov
mov
out
pop
loop
xor
inc
jge
jl
mov
aad
dec
lock
into
add
repnz
scas
xchg
scas
inc
mov
push
neg
cmp
scas
daa
sbb
mov
ljmp
dec
sub
lods
data16
xchg
sbb
out
in
mov
add
fcompl
dec
mov
adc
cmp
enter
testl
movsb
imul
and
sar
or
loop
mov
loopne
jle
ja
add
mov
adc
mov
push
cmp
jns
shll
dec
fucomip
xchg
jne
add
jno
test
int
rcll
mov
or
aaa
or
sub
negb
xchg
cmpsl
inc
leave
loop
mov
mov
lret
test
rcll
pushf
jns
add
stc
cltd
adc
jp
daa
jge
dec
pop
xchg
pop
and
adc
sub
outsl
inc
int3
jge
add
into
mov
shl
jg
cmc
jae
nopl
mov
js
inc
jmp
add
or
jnp
pop
insl
rol
jmp
pop
sub
sub
xor
mov
add
mov
mov
fisubrs
stc
sbb
jle
aaa
pop
add
lds
jbe
mov
xchg
xchg
dec
popf
sub
sahf
ja
sub
mov
inc
out
fdivl
fnstsw
pop
fidivrl
xor
js
lahf
dec
aaa
lods
or
leave
icebp
popf
push
movl
jg
lret
mov
test
jae
xor
cmp
pop
xchg
and
leave
push
orl
inc
jmp
xor
add
sub
out
cmpb
aaa
jb
sub
mov
xor
fidivs
jbe
xor
inc
and
mov
out
ret
je
je
aam
adc
mov
stc
ljmp
popa
cs
or
pop
jb
pop
daa
outsb
mov
xor
add
mov
jecxz
push
cwtl
shlb
aaa
xchg
push
fcmovnu
popf
add
outsb
in
jae
xchg
fwait
lret
add
and
mov
mov
pop
dec
push
jnp
xchg
pop
push
sub
inc
inc
xor
sbbb
inc
mov
jne
mov
push
int3
popa
jne
les
outsb
xor
sbb
pusha
cltd
sahf
add
adc
stos
aaa
out
push
add
mov
cmp
inc
scas
int3
ret
in
add
dec
stos
lock
sub
jb
aaa
arpl
pop
mov
jp
mov
jg
lea
mov
aam
inc
movsl
inc
jb
out
loop
mov
adc
maskmovq
testl
jge
movsl
push
mov
out
mov
in
es
xchg
push
or
sar
or
mov
jmp
cmp
mov
cmp
stc
add
mov
jge
outsb
pusha
dec
pushf
push
adc
inc
mov
jle
sti
dec
inc
mov
inc
xchg
mov
adc
xchg
mov
popf
inc
movd
xchg
int
popf
push
movsb
pop
jge
jo
mov
jle
aaa
ds
stos
xchg
dec
popf
loope
add
sbb
out
mov
in
aaa
xlat
repz
rorb
push
lret
mov
ja
aaa
xchg
inc
lds
lahf
test
das
adc
aaa
mov
popf
push
mov
sbb
xlat
lahf
jbe
insl
cwtl
add
inc
int
lods
sti
es
out
add
lcall
mov
jg
mov
rorb
add
lcall
verw
cmp
aaa
or
mov
pop
out
lods
xchg
cld
add
stos
fidivrl
jl
fcomps
add
mov
lods
out
lcall
dec
or
mov
sti
fcoml
repz
mov
or
mov
adc
stos
in
add
fistl
outsl
add
push
push
sub
incl
rcll
mov
xchg
sbb
or
jae
xor
sub
push
mov
cltd
adc
cmp
mov
sub
scas
adc
jnp
lods
add
les
lret
clc
xor
cmpl
cltd
test
gs
xor
daa
movsb
fadds
aaa
dec
cmc
fwait
push
sahf
aaa
leave
push
add
pop
pop
cltd
or
inc
lea
or
cwtl
mov
stos
xor
not
aaa
mov
div
in
mov
mov
jno
mov
mov
inc
jae
jecxz
or
jmp
jnp
inc
xlat
pop
jo
xchg
add
mov
add
push
ret
push
out
xlat
sub
jecxz
wrmsr
pusha
imul
push
loop
adc
and
jae
cmp
imul
ret
push
ljmp
pop
pusha
out
inc
cmp
jnp
dec
jecxz
mov
adc
add
add
cltd
add
and
or
in
shll
lods
lods
cwtl
mov
push
test
and
mov
sub
mov
lods
lret
and
es
in
pop
enter
xlat
push
icebp
mov
fnstsw
out
push
aaa
call
jbe
rorl
mov
fstp
ds
hlt
daa
rcrb
cld
imul
div
pop
cmp
stos
add
sbb
inc
and
pusha
scas
scas
sub
and
push
sbb
mov
pop
sub
and
jp
lret
cmp
aad
inc
or
inc
stc
and
icebp
adc
aaa
dec
fsubrl
xlat
pop
xor
push
mov
pop
jecxz
or
add
cld
add
and
cltd
and
add
pop
jno
repnz
xor
dec
addr16
mov
adc
sbb
mov
inc
push
add
leave
push
daa
and
rolb
push
xlat
adc
inc
xor
mov
or
mov
add
testb
push
shr
pop
pop
inc
sahf
pop
mov
inc
cwtl
clc
aas
cmc
repz
faddl
adc
loop
aaa
or
and
adc
inc
dec
mov
mov
cmp
jmp
lea
mov
pop
cwtl
outsb
xor
mov
pop
in
or
aaa
sub
lock
icebp
loop
aas
and
hlt
fiaddl
adc
stc
xor
adc
push
sbb
femms
mov
adc
lods
and
sub
adc
mov
mov
stos
cmp
imul
mov
and
cmc
or
in
stos
jg
stc
adc
test
push
jg
rclw
fucomp
int
imul
fcomps
insb
adc
subb
mov
sbb
cmp
enter
sub
out
dec
mov
adc
gs
xor
or
jae
clc
mov
or
out
frstor
sub
in
add
push
repnz
add
push
jnp
aaa
in
loopne
cltd
push
rcrb
cmp
lret
int3
fistpl
xor
std
mov
out
jmp
jmp
aam
aaa
xchg
cmpsl
push
loop
call
imul
pop
jae
lret
fbld
aam
popa
dec
jmp
mov
lds
aaa
loope
xchg
js
add
fcmovnu
cmp
xchg
inc
mov
xchg
int
xor
inc
adc
push
test
cmp
repnz
add
adc
dec
sbb
imul
mov
or
pop
pushf
mov
xchg
push
push
int
jae
adc
fwait
addr16
hlt
fadd
in
xcrypt-cfb
cmpsl
jecxz
outsb
add
or
and
lret
rorl
lea
inc
mov
or
aas
mov
mov
mov
or
add
and
mov
mov
dec
fnstsw
mov
bound
and
jno
inc
ljmp
sub
lds
outsb
jns
mov
mov
pop
data16
pusha
jmp
sbb
and
out
into
ljmp
sub
add
dec
push
add
sub
add
sbb
test
mov
sbb
ss
cltd
outsl
or
mov
xchg
pop
nop
call
mov
jo
push
jecxz
dec
pop
les
lahf
fiadds
scas
lods
orps
in
add
aad
inc
mov
xor
push
mov
outsl
pusha
push
mov
jb
fwait
jae
add
jbe
adc
xchg
lods
xor
add
jmp
push
mov
mov
nop
mov
and
add
bound
sti
push
xchg
mov
lock
cli
cmp
inc
subb
push
je
fstp
leave
jo
adc
dec
xchg
xor
push
outsl
rcr
out
add
rcrb
add
or
add
and
sub
scas
sub
add
sub
add
pushl
aaa
or
dec
aam
testb
mov
les
sbb
dec
mov
cmp
outsb
jecxz
push
subl
pop
or
push
enter
lds
addr16
cmp
push
jnp
arpl
ja
adc
add
jge
or
in
aaa
iret
mov
dec
les
ds
xchg
xchg
add
cmp
sti
imul
lods
out
stc
enter
xor
test
imul
pop
xor
mov
inc
or
les
mov
in
insb
fsubl
mov
cmp
test
push
jno
testl
mov
adc
rclb
xchg
nop
jge
sub
adc
or
push
rcrb
hlt
xrelease
ret
popf
arpl
mov
lahf
psllq
inc
jmp
shlb
lret
or
cmp
sbb
add
sub
fisubrl
shll
lea
mov
mov
add
dec
leave
and
pop
fmul
testl
cwtl
mov
xor
xor
pop
push
fistpl
adc
jb
add
mov
push
pop
loop
and
nop
dec
arpl
add
andl
jge
push
cli
ja
sub
ret
test
cmp
packssdw
xorb
adc
orps
jbe
mov
out
sbb
and
arpl
lcall
fistpl
xchg
std
lock
cmp
addr16
adc
sbb
mov
sbb
sub
add
sub
xor
aad
sti
pop
andb
stos
pop
and
add
adc
fdivs
mov
cli
push
add
or
or
es
mov
mov
push
lret
bound
imul
add
bound
or
pusha
pop
rcl
mov
dec
fsts
inc
inc
mov
push
clc
cmpsb
push
adc
out
adc
scas
mov
adc
mov
aaa
pusha
dec
pop
mov
adcb
pop
inc
nop
repz
mov
popf
stos
xchg
mov
shlb
mov
sbb
fsubrp
aad
loopne
mov
inc
in
stos
ret
stos
addl
xlat
jno
cmpsl
mov
loopne
inc
xor
push
pop
movsb
aam
call
jg
add
shl
inc
int3
cmp
add
fcoml
lret
and
push
shrl
or
ret
cmp
and
xchg
jge
xor
imul
loop
minps
aaa
mov
cmp
pop
daa
add
mov
sub
inc
jnp
adc
add
data16
ljmp
xchg
cmp
popf
aas
pop
jae
pushf
add
imul
xlat
dec
ja
sahf
add
pop
add
test
outsl
std
xorl
dec
repnz
xchg
repnz
or
mov
mov
movsl
adcl
es
sbb
adcl
mov
jp
test
sbb
ss
jo
aaa
ss
stos
rcl
cmp
dec
push
incl
out
or
push
pop
dec
mov
ljmp
and
push
sub
add
loope
hlt
cmp
cmpb
ret
hlt
adc
mov
or
xlat
add
mov
scas
pop
jmp
or
ss
out
xor
in
or
xchg
jno
add
fcompl
ja
xor
daa
cli
jecxz
add
aas
add
dec
pop
and
aad
aaa
add
pop
push
dec
jns
es
stos
std
addr16
push
jb
inc
sub
cmp
in
add
sbb
pop
sahf
xchg
cld
addl
fwait
xor
inc
aaa
add
int3
mov
ds
add
mov
add
sbb
mov
mov
jbe
mov
insl
pop
clc
mov
pusha
imul
mov
xorl
adc
inc
in
jno
push
fcmovu
dec
jo
mov
test
push
sub
dec
sub
mov
aaa
add
mov
add
in
add
mov
fcoms
shl
aaa
push
movl
or
sub
ja
cwtl
dec
jb
lock
xchg
and
pop
aaa
push
cmp
and
das
orl
lcall
add
push
dec
gs
addr16
push
int
jg
xor
mov
mov
mov
mov
pop
adc
pusha
mov
dec
imul
push
add
sbb
data16
inc
inc
int3
adc
push
mov
mov
adc
js
inc
jecxz
fld1
cmpsb
push
adc
ficomps
xchg
notb
mov
add
pop
subb
ret
sbb
lret
aaa
sbb
xchg
daa
jbe
adc
ja
dec
test
inc
fldenv
adc
aaa
incb
outsb
inc
loopne
outsl
popa
or
cmpsl
cmp
rolb
push
dec
and
xchg
add
sbb
or
jbe
sbb
adc
mov
xor
lret
arpl
test
mov
pextrw
mov
aaa
dec
sbb
pop
add
cli
pop
add
or
sbb
mov
mov
and
add
incl
jl
cmp
aad
mov
rcll
add
ljmp
jns
adc
xorb
inc
add
aaa
fnsave
filds
inc
daa
sub
or
sub
lret
pop
movsl
cmp
mov
aaa
mov
lahf
in
pop
xor
mov
and
add
adc
mov
cwtl
lcall
or
pusha
mov
out
jge
je
cwtl
adc
out
or
add
or
jb
add
lret
or
add
add
xor
push
mov
sub
leave
add
sahf
cmc
push
scas
sub
jae
insb
xchg
sti
or
cmpsl
jecxz
adc
roll
cmp
pop
add
int
add
cld
pop
push
inc
add
fs
mov
mov
aad
in
add
imul
pushf
adc
lahf
or
rolb
nop
add
mov
xorl
outsl
es
dec
xchg
cmp
data16
adc
popf
cli
cmp
xchg
test
daa
pop
mov
idiv
mov
test
shll
jns
rorl
loope
or
mov
xor
mov
ljmp
loope
mov
mov
aaa
in
sub
mov
icebp
leave
mov
xchg
mov
out
dec
or
jge
push
fcomip
pop
cwtl
je
shlb
jb
sbb
fdivs
cmpsb
sub
dec
mov
push
cmp
aaa
add
in
xchg
sbb
pop
inc
test
shlb
mov
or
test
addr16
jae
jecxz
adc
push
jb
mov
sub
add
hlt
loopne
movb
js
les
fcmove
pusha
jae
cmpsb
dec
xlat
push
cmc
mov
out
in
and
add
sbb
add
fistpl
je
repz
adc
sbbl
aaa
push
out
aaa
stos
mov
fildl
mov
xor
sub
je
mov
lds
loop
add
subl
inc
mov
aam
fisubrl
or
mov
inc
test
dec
xlat
fidivl
roll
add
lods
lock
or
cmp
cmc
cld
aaa
push
xchg
ss
das
shrl
ja
or
mov
addb
aaa
and
fnstcw
or
push
stc
jae
imul
pop
inc
mov
xor
mov
cli
cmp
mov
loope
push
and
aam
adcl
jmp
push
rclb
mov
loop
fdivs
ret
inc
mov
dec
aam
cwtl
stos
push
pop
sub
out
cmp
pop
addb
insl
or
fisttpl
jnp
mov
mov
roll
sbb
int
add
cmpsl
popf
lcall
adc
icebp
xchg
add
rcl
mov
inc
push
movsl
and
lods
jb
in
dec
add
adc
pop
mov
cmp
leave
push
sub
dec
lcall
icebp
loop
inc
rclb
adc
mov
pop
sub
into
lcall
notb
sub
fdivrs
and
fwait
dec
or
add
notl
aam
movsl
arpl
lods
dec
popf
fiaddl
mov
lds
mov
call
cmc
pop
movsl
rep
pop
add
outsb
pushf
leave
movsl
inc
jge
add
xchg
mov
pop
pop
dec
dec
mov
fdivr
pop
sbb
jecxz
out
loop
mov
mov
pop
jge
mov
dec
stos
test
cmpsb
cmp
mov
mov
addb
mov
int
scas
mov
sti
push
cltd
out
int3
je,pn
xchg
mov
sbb
mov
lea
mov
jl
orl
leave
fisubl
cmp
aam
inc
mov
push
testb
cmc
add
push
inc
ror
shll
loope
in
pop
mov
es
push
sti
dec
leave
das
add
std
cmp
mov
pop
ss
mov
aaa
add
mov
mov
stos
xchg
xchg
cli
or
push
adc
inc
xchg
repnz
mov
icebp
lods
adc
lock
mov
scas
enter
int3
xorb
push
testb
jle
pop
mov
cmp
adc
pop
inc
mov
rcrl
je
xor
mov
mov
call
cwtl
mov
sahf
pushf
out
sub
sbb
add
and
cltd
sub
notb
subl
xchg
shll
xor
gs
into
inc
cmp
sbb
xor
dec
push
dec
insl
inc
nop
sub
and
hlt
out
push
aaa
imul
fwait
sbb
xchg
pop
add
mov
xchg
mov
lahf
leave
add
adc
icebp
cmpsb
sub
xor
lea
add
mov
pop
cmp
inc
cwtl
in
movsl
aaa
cmp
mov
adcl
psrad
loop
and
push
js
das
call
dec
mov
pushf
mov
pop
cmpsb
daa
push
loop
add
jecxz
pop
arpl
dec
movsl
fsts
xchg
or
fcomp
sub
or
and
mov
lods
mov
test
mov
and
idivl
add
fldt
xor
or
mov
mov
cmp
rclb
aaa
mov
xchg
mov
pop
mov
gs
sub
test
fdivp
jmp
sub
js
sbb
imul
add
movsl
out
push
imul
and
shll
dec
es
stos
jmp
xchg
pushf
es
std
scas
fidivrs
sahf
outsb
sub
in
mov
aaa
cmp
daa
inc
xor
mov
dec
inc
dec
outsb
push
call
or
loope
shrb
pusha
add
out
pop
jle
mov
add
fstpl
cmp
lcall
add
fistpl
stos
aaa
icebp
test
and
movsl
shll
pop
and
movsb
jns
pop
dec
aaa
adc
xor
inc
mov
loope
push
jbe
sbb
mov
enter
push
or
int3
stos
mov
mov
ret
or
xor
jnp
mov
push
sbb
cmp
add
add
bound
xchg
mov
add
arpl
sbb
and
js
andl
leave
push
xor
iret
jmp
push
popa
mov
adc
pusha
add
and
ficoml
inc
push
add
mov
sti
inc
sarl
add
inc
mov
add
mov
fmulp
mov
bound
add
sbb
and
mov
sbb
add
movsb
mov
pop
jns
or
ds
add
outsb
sbb
addr16
cmp
test
incb
inc
mov
mov
hlt
sbbl
add
shrb
lret
sbb
sub
sbb
mov
or
imul
or
scas
pop
xor
mov
notl
xchg
daa
stos
mov
call
xchg
mov
clc
or
jge
subl
pop
int
inc
in
int3
and
inc
roll
cmp
sahf
imul
ret
aaa
cmp
into
lret
stos
push
xor
xor
adc
adc
dec
pop
or
pushl
sbb
jae
andl
aaa
xchg
shlb
enter
add
fwait
cmp
jp
xor
cli
rcr
aaa
in
xor
mov
testl
pushl
inc
jbe
mov
pop
jg
inc
xchg
jge
movl
enter
push
incl
clc
fidivrl
xchg
sub
pop
mov
mov
arpl
cmpsl
mov
xlat
push
nop
pop
and
cmp
add
loope
push
push
and
mov
cmpl
aaa
add
xchg
pop
or
inc
andb
cmp
roll
js
js
xchg
xchg
pop
leave
into
js
add
jg
not
fcomip
dec
ss
mov
int
arpl
add
les
shrb
mov
sub
je
cmpsl
jg
leave
test
mov
aaa
add
data16
shl
loop
add
out
add
and
and
mov
pandn
dec
add
clc
push
cmp
lods
xor
lcall
mov
mov
orb
push
add
aaa
adc
push
arpl
pop
lock
cmpsb
nop
and
xchg
and
and
loopne
fbld
enter
xchg
mov
add
adc
or
lea
add
mov
stos
sbb
repz
rcll
fimuls
out
bound
add
sbb
or
xchg
mov
jge
lahf
gs
adcb
cld
add
fsts
aaa
add
lods
add
std
es
imul
bound
andl
test
mov
jl,pn
and
sub
or
sub
or
push
stc
cmp
mov
sub
xor
fnsave
xor
xor
icebp
push
jno
test
cmpsl
in
sub
adc
loop
lret
mov
das
jmp
add
jp
pop
fdivs
add
mov
cltd
repz
aas
xchg
add
jl
cmp
inc
add
dec
lods
add
sti
mov
jnp
sbb
inc
fwait
mov
mov
repz
int
inc
jle
repnz
test
aaa
xchg
jge
bound
xor
aaa
imul
mov
mov
add
push
nop
add
sahf
movsl
adc
bound
mov
mov
add
cmpb
jb
and
inc
aaa
sbb
insb
or
lock
cmp
ret
in
ret
call
lahf
pusha
and
push
aaa
xor
lods
fsubp
push
jecxz
cmp
sahf
ret
or
mov
dec
outsb
mov
jp
shlb
fwait
push
mov
xchg
mov
cmpsb
clc
push
or
aaa
cli
mov
mov
add
in
mov
fstl
add
movsb
dec
aaa
lods
shll
dec
add
add
mov
mov
pop
enter
dec
gs
ja
fs
in
pop
movl
push
xorl
jno
fisubrs
inc
or
outsb
add
lods
mov
mov
dec
icebp
and
ja
or
push
ja
mov
jg
nop
and
sbb
aaa
adc
mov
xchg
push
pop
stc
xor
mov
mov
add
mov
pop
xchg
cmp
out
add
enter
xlat
stc
xor
iret
or
movsb
lods
cmp
jecxz
sub
mov
push
jbe
mov
imul
push
aaa
ljmp
outsb
rcll
clc
jmp
clc
repnz
mulb
imul
adc
leave
inc
lcall
mov
mov
sub
nop
push
das
add
lock
cmp
add
and
cmp
adc
mov
mov
xchg
outsb
leave
mov
mov
outsb
mov
push
pop
add
imul
pop
sbb
push
nop
mov
loop
jne
push
in
fstps
push
lret
test
mov
aam
rolb
sub
mov
adc
mov
mov
add
lea
sub
add
mov
add
es
mov
push
mov
ret
xor
inc
mov
inc
add
mov
insb
ss
outsl
das
push
add
mov
ficoml
in
pop
ljmp
push
loop
sub
add
je
js
adc
cmp
stos
dec
add
clc
repz
mov
xor
mov
mov
add
xlat
add
lock
in
popa
or
fs
add
lds
or
lock
or
inc
fnsave
dec
repz
pop
inc
cmc
fiadds
stos
pop
into
mov
pop
mov
cmpsb
dec
shlb
xor
dec
call
pusha
mov
xor
jle
jbe
add
or
mov
jne
mov
mov
push
mov
push
dec
outsl
mov
xchg
mov
mov
pop
es
out
and
add
mov
cmp
add
pop
ja
mov
ficompl
add
pop
hlt
push
add
scas
rorl
outsb
pop
xor
sub
or
push
ja
mov
mov
add
stc
lcall
shr
roll
jmp
sub
adc
push
add
inc
mov
lock
hlt
mov
jnp
add
aaa
xchg
mov
loope
add
pop
sbb
cmpsb
sub
call
sbb
pop
mov
lret
mov
les
jae
cmpsb
aaa
jb
jecxz
xchg
or
stos
push
mov
xchg
sub
fisubrs
outsb
fs
cltd
imul
mov
subl
es
jmp
lds
lods
xchg
xchg
sbb
stos
xchg
inc
mov
add
cmp
sub
cmp
clc
sbb
inc
lods
cli
fs
sub
mov
add
shll
and
test
addb
and
pop
sbb
add
cmp
fs
pop
jae
push
stos
ss
lcall
mov
scas
gs
push
sarb
stos
repnz
loop
add
dec
or
sti
pop
mov
push
pop
mov
pusha
jb
loope
add
sti
pop
push
jp
aaa
mov
in
xchg
add
fstps
and
lret
scas
xchg
mov
pop
mov
out
lods
add
out
pop
shll
mov
xchg
jb
lods
enter
xor
fisubl
add
test
add
stc
jo
push
or
lret
mov
ret
leave
xchg
mov
jb
or
or
mov
add
scas
add
iret
iret
adc
add
daa
inc
push
loopne
push
dec
mov
mov
mov
sub
aas
inc
ret
iret
pusha
add
inc
js
add
and
cwtl
das
pusha
mov
aaa
orl
cwtl
enter
in
mov
pop
pop
push
aaa
loope
dec
adc
xchg
arpl
sbb
add
and
add
xchg
loopne
cli
mov
fiaddl
pushf
das
xchg
xor
sub
loope,pn
fwait
icebp
push
test
aaa
sahf
sbb
adc
lock
aaa
cmp
int3
add
adc
inc
push
cld
pop
ss
mov
add
loop
jbe
in
xor
and
xchg
orb
out
mov
push
pop
xchg
adc
pop
xchg
aaa
sub
aad
popa
add
icebp
mov
shll
jb
dec
xor
nop
sub
mov
add
jne
add
lahf
mov
icebp
lret
cmp
and
mov
cmp
mov
jns
stos
inc
mov
xor
cmp
clc
mov
dec
add
data16
add
lea
aaa
cld
sbb
and
mov
sbb
or
pop
test
jne
add
xchg
adc
es
mov
mov
cmp
pusha
mov
mov
add
inc
pop
cld
icebp
push
aaa
adc
adc
dec
adc
and
adc
test
jl
xchg
cmp
aaa
inc
pop
stos
pop
sbb
adcb
test
pop
fs
push
imul
bound
cmp
mov
xchg
xor
cmpsl
dec
or
inc
cmp
push
inc
movl
inc
sbb
movsb
add
call
bnd
scas
dec
xor
test
push
dec
out
xorb
add
add
lret
add
cmp
outsl
mov
add
ja
std
bts
mov
mov
add
enter
cmp
adc
sub
arpl
and
sar
add
mov
sbb
pop
nop
mov
or
mov
xor
clc
mov
in
add
cmp
jg
fdivrl
mov
ret
or
lret
addr16
jbe
ret
jg
repnz
popf
aaa
arpl
outsb
decb
mov
sub
aaa
xchg
xor
add
das
xchg
xchg
ja
sbb
add
mov
jb
lods
test
inc
sub
cld
int3
test
add
fdivrl
test
jb
in
sub
mov
dec
mov
test
cmpsb
or
mov
add
jg
test
scas
data16
sbb
dec
mov
xor
test
test
out
push
xor
cmpsb
test
aad
dec
outsb
sti
loopne
mov
sub
push
aaa
out
pop
dec
testb
lods
xchg
insl
pop
divl
fdivs
jl
cmp
pop
cmp
pusha
or
imul
mov
das
popa
inc
mov
cmp
cmp
cmp
or
pop
jecxz
ds
andb
cmc
in
xchg
add
mov
mov
xor
popa
ss
ljmp
in
add
add
add
mov
mov
out
add
sbb
jl
lds
cmp
mov
fistpll
rorl
pusha
cmp
ja
add
incl
mov
pop
fnsave
clc
jno
push
popf
filds
jge
aaa
jo
jne
or
data16
out
rol
imul
mov
mov
mov
jp
mov
xor
js
add
in
push
loop
mov
scas
jmp
push
mov
add
into
push
mov
jo
sbb
add
adc
cmovg
or
xor
push
ja
mov
mov
cwtl
inc
cmp
pand
and
incb
movsb
lods
test
mov
dec
loopne
mov
fistpl
icebp
fdiv
inc
mov
out
stos
dec
adc
in
sub
dec
pushf
sbb
or
enter
ja
clc
xor
pop
jo
jo
pop
mov
cli
mov
aaa
pop
pop
or
bound
xor
xor
daa
add
jbe
outsb
lods
add
int
xlat
adc
stos
adc
js
mov
push
push
out
add
push
lret
sbb
push
sbb
dec
mov
aas
hlt
loop
call
pop
cmp
xor
mov
cmp
pop
push
imul
cwtl
adc
aaa
mov
dec
fistps
dec
test
insl
mov
fnsave
shll
xchg
movsl
inc
cmp
sbb
lock
or
and
pop
aaa
xorl
mov
pop
loop
test
ja
sbb
aaa
mov
fcoml
add
mov
push
add
mov
sub
xchg
or
aaa
push
push
add
dec
movsl
fsubrl
lret
enter
inc
aaa
push
sbb
ret
lods
jnp
ljmp
sub
xor
dec
xchg
mov
cld
xor
nopl
imul
aaa
fistps
xor
jae
mov
lret
mov
call
packsswb
xor
gs
adc
dec
loopne
lahf
xchg
out
pop
fcmove
push
inc
xlat
scas
enter
sub
loopne
sub
push
out
enter
pop
pop
mov
clc
repz
sbb
std
mov
subl
add
adc
pop
repz
xchg
inc
ljmp
sub
int3
sub
push
sahf
insb
cwtl
outsb
push
jnp
test
xchg
push
mov
pop
cmp
mov
mov
xchg
das
sbb
sub
ds
mov
sbb
inc
test
pop
je
push
int
xor
and
aaa
jno
aas
add
push
js
ss
inc
mov
push
shlb
ljmp
push
push
in
mov
push
sbb
xchg
aam
mov
push
add
outsl
fimuls
out
push
outsl
movsb
mov
loope
add
mov
add
mov
addr16
outsb
xor
ljmp
adcb
aaa
outsb
ds
sbb
cmpsb
inc
outsl
imul
push
jge
or
xchg
int3
icebp
notl
sub
mov
inc
mov
adc
cli
icebp
jecxz
pushw
loop
in
add
sahf
movsb
inc
xor
mov
rcrl
insb
fisubrl
repz
push
test
ss
lcall
xchg
loope
cmp
mov
push
inc
inc
push
aaa
in
aas
adc
jno
cmp
sarb
cmp
pop
or
fidivl
add
lret
cltd
loope
cs
data16
push
inc
or
fbstp
mov
push
jecxz
ret
xchg
popa
xchg
or
pop
stos
jno
pop
cmp
out
xor
jl
mov
cwtl
xchg
mov
add
repz
shrb
hlt
add
nop
pop
sub
mov
neg
jns
sahf
pop
xor
mov
lea
out
imul
int3
insb
shlb
cmpsb
lea
dec
aas
arpl
jmp
stos
mov
fildll
push
mov
add
inc
bound
mov
test
adc
xchg
add
jne
cmpsl
into
out
mov
dec
pop
xor
push
mov
pop
dec
and
mov
xor
sbb
sub
xor
or
add
sbb
dec
mov
inc
add
jp
jbe
pop
and
out
xchg
dec
mov
sbb
lods
mov
les
sti
jbe
clc
xchg
mulb
lods
pop
push
test
or
adc
and
and
lcall
dec
sti
loop
mov
cwtl
pop
cs
lds
pop
or
jne
xor
and
adc
popf
cmp
dec
jns
cmp
test
push
jmp
mov
sbb
dec
mov
add
push
dec
xlat
call
mov
sbb
scas
push
scas
pop
ljmp
dec
mov
inc
das
mov
out
sbb
jmp
and
inc
adc
xorl
cmc
mov
jg
in
lock
shl
divb
dec
lock
mov
cltd
pusha
pop
lret
jl
mov
xor
pop
push
ss
dec
outsb
mov
lret
rcr
loop
mov
mov
dec
test
jnp
fbstp
out
mov
jl
leave
data16
fisttpl
leave
sar
xchg
lcall
arpl
imul
lods
pushf
stos
mov
sub
fldenv
mov
bound
mov
add
out
lds
cmpsb
insb
loope
aas
cltd
jmp
outsl
cmp
sub
fs
add
ja
pop
sub
jge
mov
enter
jg
add
fwait
inc
or
sbb
mov
push
imul
cmp
int
or
ret
add
jnp
xor
add
rol
fisttpll
sbb
insb
mov
mov
outsl
call
or
nop
div
pop
pop
sbb
rorb
xor
xchg
out
repnz
stc
shl
mov
bound
cli
addb
jmp
icebp
dec
addr16
sbb
cmp
inc
sub
sbb
aaa
sub
push
add
adc
test
repnz
pop
pop
into
push
add
out
pop
mov
out
js
ss
les
xchg
out
or
cs
and
xchg
int
fistpll
mov
sub
add
adc
mov
mov
cmpsb
dec
aaa
xor
add
icebp
push
push
jmp
lds
inc
mov
je
mull
rorl
mov
out
sbb
les
js
loop
sahf
adcl
shll
sbb
das
jl
sahf
loope
negb
cltd
out
mov
jbe
inc
pop
add
popa
sub
sbb
iret
les
jno
sahf
inc
inc
aam
xor
leave
add
in
jge
push
xchg
cltd
sub
neg
mov
push
lea
int3
fwait
divl
mov
inc
mov
mov
repnz
mov
mov
jecxz
add
mov
add
stos
sti
adc
sbb
std
hlt
mov
in
in
ret
imul
mov
mov
outsb
aaa
ret
xchg
and
pop
adc
push
jge
add
bound
push
dec
cmpsb
push
negl
mov
enter
cwtl
stos
jne
jmp
and
ss
popf
ret
xchg
push
pop
gs
fadd
rcr
push
mov
hlt
enter
aas
pushf
rcll
jge
add
fisttps
pop
fwait
andl
into
push
xor
mov
iret
inc
xor
xor
shl
adc
jnp
je
mov
mov
fxch
inc
fiadds
mov
ja
jp
rol
and
imul
stc
lea
dec
fdivr
aaa
test
xor
out
inc
mov
fucomip
xchg
push
int3
inc
jecxz
fstl
cmp
dec
loopne
mov
fwait
sbbb
cmp
inc
sub
add
rolb
int3
jno
cmp
pop
jae
mov
inc
adc
mov
cltd
loop
gs
out
imul
pop
fucomi
push
xchg
test
xchg
adcb
add
sub
mov
pop
pop
xor
frstor
add
daa
add
jg
and
loope
mov
in
mov
jmp
not
mov
sbb
lcall
sbb
div
nop
les
jb
bound
pop
or
aaa
popa
js
ja
mov
push
mov
aaa
fdivr
out
cmpsb
mov
pop
mov
leave
xor
sbb
inc
das
bound
stos
sbb
push
in
dec
adc
add
sub
or
stos
popa
jnp
mov
decb
add
sub
pop
mov
sub
gs
dec
loopne
arpl
push
cmpl
mov
popf
xlat
das
add
inc
outsl
repz
inc
push
aam
adc
push
lcall
inc
cwtl
inc
push
int3
adc
jmp
je
lcall
iret
mov
push
mov
jnp
popa
ds
ljmp
scas
add
jae
pop
inc
loop
mov
pop
test
add
pop
push
jle
dec
icebp
outsl
adc
arpl
aas
outsb
fisubrs
insb
inc
push
xchg
jne
mulb
xchg
jnp
add
and
jns
lret
lods
sbb
adc
cld
lods
add
pop
sub
mov
imul
imul
daa
outsb
pop
adc
pop
mov
scas
jmp
xor
ja
ret
addb
jns
dec
cmp
adc
add
cwtl
lea
lret
cltd
or
movl
cmp
or
mov
mov
cmp
add
decb
add
outsl
dec
sbb
cmc
lret
mov
orb
lea
adcl
test
cmp
lea
adc
test
mov
roll
dec
test
or
call
aad
jo
and
sub
shlb
pop
dec
mov
faddl
xor
cltd
adc
add
dec
je
add
clc
jmp
lea
popf
push
cltd
inc
aaa
add
out
pop
add
bound
jg
add
sub
push
xchg
jp
push
mov
xor
push
aaa
je
inc
cmpsb
lea
xchg
stc
in
outsl
js
dec
adc
out
mov
sub
mov
ja
ja
aaa
enter
insl
sub
sbb
sbb
or
mov
cmp
mov
mov
push
push
jg
xchg
sbb
outsb
pop
jnp
aaa
fstpt
jmp
rolb
leave
sub
push
scas
ss
jo
add
ljmp
and
pushf
sub
push
dec
add
mov
and
cmp
xchg
leave
xor
mov
xor
dec
dec
mov
and
xchg
xchg
pop
adc
sub
mov
int
jg
neg
ss
dec
add
into
add
dec
mov
jo
sbb
mov
jnp
loope
cmpsl
jns
cmp
mov
mov
dec
test
scas
les
add
xchg
dec
or
mov
or
popf
shlb
push
xchg
popa
sub
sbb
jl
cmp
or
mov
std
mov
shlb
ror
mov
xorl
add
xchg
int3
jmp
jb
push
ret
or
mov
push
jae
das
jle
roll
push
pushf
loopne
mov
and
push
mov
pop
add
push
enter
cmpsl
push
mov
mov
scas
cmp
das
mov
mov
cwtl
testl
jge
fisubs
cld
xor
and
movsb
jl
mov
fs
jb
cmp
jno
xchg
inc
ss
jo
or
rolb
xchg
repnz
mov
cmp
popf
pop
add
lock
aaa
lahf
mov
adc
test
call
aaa
dec
xchg
xor
add
pusha
push
pop
shrl
mov
lods
mov
fisubl
ret
mov
cmp
and
repz
mov
lcall
mov
sub
mov
shll
sbb
pop
add
adc
and
out
adc
fstpt
mov
aaa
sbb
mov
pop
cmpsl
lahf
add
repnz
cmp
push
pusha
cmp
mov
push
pop
cmpsl
jbe
jo
cmp
add
add
xor
push
add
dec
mov
or
or
or
jb
jae
adc
leave
call
fstl
xchg
xchg
and
sti
insl
mov
inc
mov
jle
lods
fdivl
mov
xchg
lret
add
fbstp
jl
push
rorb
jle
cli
adc
sub
es
addl
mov
sbbb
cmp
dec
and
push
mov
insl
xchg
insl
add
sbb
dec
sbb
add
inc
fwait
xlat
fisubl
xchg
push
mov
push
xor
pop
cmp
pop
xchg
outsb
addr16
movb
mov
xchg
and
aaa
filds
js
pop
lods
adc
inc
push
ja
jno
std
xchg
daa
shll
fwait
out
test
jle
adc
rcrl
mov
or
mov
push
add
movsl
mov
sub
inc
dec
cmc
clc
cld
adc
aaa
push
mov
dec
jp
mov
push
push
push
aaa
js
lods
jnp
lcall
xor
sbb
cmp
out
inc
jg
mov
aad
loopne
iret
stos
cs
loop
minps
sbbb
mov
mov
sbb
lahf
aaa
add
lock
in
int3
mov
out
dec
lret
out
rorl
bound
jecxz
pop
or
add
int3
xchg
dec
hlt
out
rolb
xchg
add
cwtl
out
jle
pop
les
pop
rep
push
fiadds
lock
scas
xor
xor
add
dec
out
or
or
jl
mov
int3
adc
xchg
push
inc
sbb
stc
xchg
pushf
add
fidivl
mov
sub
push
lock
outsl
push
xchg
ret
jge
adc
sahf
aaa
mov
add
inc
and
movsb
cmp
add
or
popl
mov
movl
sahf
inc
xchg
jecxz
mov
insl
jmp
add
pusha
outsl
xchg
popa
punpckhdq
out
mov
pusha
or
pop
sarl
jbe
mov
adc
fs
push
jno
pushf
sahf
xchg
inc
es
mov
cmpsl
ret
cld
outsb
aaa
cmpsl
in
rcrl
cmp
insb
ja
pushf
pop
cmp
add
in
jg
ds
cmp
prefetchnta
push
aaa
or
pop
fstl
int
add
movsl
mov
xchg
jb
jno
filds
or
cmp
mov
sbb
ds
cmp
xchg
aad
push
push
sarb
mov
outsb
cltd
ljmp
adc
jp
divl
jecxz
sbb
aad
add
rcrl
xor
push
or
and
aaa
sub
cmp
je
mov
mov
inc
push
aaa
jl
mov
jns
outsl
add
loopne
push
mov
clc
test
je
dec
lsl
loopne
lret
sbb
aaa
xchg
leave
inc
stos
push
xchg
jg
add
scas
int
xchg
xchg
loopne
pop
cmp
add
mov
aam
cwtl
std
xor
add
bound
leave
loopne
mov
sbb
lea
lret
sbb
ss
cmp
leave
and
pushf
add
mov
or
mov
push
xchg
aaa
xor
fwait
inc
pop
add
mov
jnp
lods
add
stc
pop
sub
pop
add
ja
inc
dec
push
cs
add
mov
sbb
add
hlt
add
push
mov
iret
adcb
cmc
shll
stc
mov
loopne
or
xor
fldcw
fldenv
test
aaa
cmpsl
out
push
pop
popa
add
sarl
popa
stc
add
lods
decb
ss
jg
inc
repnz
pop
in
and
sub
lods
mov
stos
stos
sbb
aaa
jmp
push
add
cmp
mov
push
ja
sti
aas
mov
fcom
or
scas
xorb
pop
push
dec
and
adc
out
fisubs
jb
fs
fstpt
mulb
push
and
fs
fcos
cmp
in
mov
push
mov
or
xor
adc
add
mov
cmp
pop
mov
fs
inc
hlt
push
cmp
aas
movsl
xlat
add
sar
jnp
scas
test
ds
stos
pushf
or
rorb
into
nop
addl
mov
cltd
in
bound
add
mov
push
test
aaa
dec
lock
fcmovnb
mov
add
pop
jg
repnz
inc
add
adc
mov
stos
nop
push
sub
cmp
xor
push
clc
push
and
or
hlt
mov
in
sbb
inc
pop
cmpsb
push
mov
jns
rolb
mov
subb
adc
mov
xor
push
push
dec
inc
subb
scas
push
xor
fadd
pop
sbb
icebp
scas
pop
das
mov
ss
mov
mov
jo
aam
ss
in
sbb
icebp
out
mov
test
jmp
push
mov
or
dec
rolb
mov
sbb
insb
or
sahf
add
mov
add
mov
pop
mov
pop
mov
lds
mov
aaa
ljmp
xor
adc
jne
or
aaa
lods
adc
pusha
and
jmp
dec
mov
add
dec
jne
adc
mov
mov
cmp
mov
loope
loope
mov
mov
add
aam
adc
adc
dec
jle
mov
and
push
mov
call
out
dec
add
jmp
clc
mov
push
jmp
ljmp
add
push
cmp
pop
pop
out
movb
dec
out
mov
mov
gs
clc
xor
add
fistpll
cmp
mov
repz
aaa
mov
pop
inc
jnp
daa
push
adc
sbb
or
mov
in
in
sub
jg
xor
push
fcmovne
or
nop
push
and
mov
xor
add
xor
test
mov
in
jecxz
int3
pop
in
lret
mov
xor
add
call
jnp
mov
cmpsl
push
dec
xchg
mov
aad
fimuls
and
rclb
sub
ljmp
int
mov
and
cmp
movntq
clc
jnp
dec
lcall
stos
mov
dec
dec
add
cld
insl
shll
and
inc
cmp
mov
pop
xorb
or
aaa
scas
or
cmp
gs
push
dec
incl
xor
gs
xchg
shlb
cmp
pop
jno
aaa
push
jne
or
add
stc
mov
jecxz
test
xor
hlt
pop
clc
and
sarl
push
mov
xchg
aaa
sahf
sub
mov
fbld
outsb
mov
pop
jmp
and
js
fsts
inc
faddl
aad
mov
lea
adc
add
or
pop
ja
pop
jmp
repnz
cmc
add
in
shll
mov
or
add
fsubr
add
enter
mov
pop
mov
stos
mov
rorl
cmp
xor
jnp
pushf
sub
cmpsl
jp
mov
mov
mov
xor
push
xchg
xchg
cltd
sbb
pushf
sub
mov
adc
nop
sahf
dec
sbb
in
push
jmp
into
repz
ret
pop
jge
incl
add
mov
push
call
call
push
in
stos
rcrb
scas
aaa
insb
mov
xchg
scas
add
jb
fs
mov
add
incl
xchg
inc
sti
loopne
mov
ljmp
mov
mov
push
inc
sub
jle
xchg
add
aaa
jmp
push
xchg
pop
add
pop
dec
sbb
lods
mov
or
mov
ret
jg
mov
lods
sbb
scas
imulb
xchg
pop
lahf
inc
movsb
or
xchg
movsl
lcall
fstpl
ja
xor
dec
pusha
gs
dec
popa
mov
popa
addr16
mov
int
leave
add
mov
and
xlat
insl
cmpsb
sub
aaa
leave
stos
js
lock
jge
scas
cmp
jbe
dec
lds
out
shrb
mov
iret
pop
test
loop
adc
out
negb
push
dec
mov
sub
sti
jmp
xchg
push
mov
fimull
movsl
aaa
sbb
out
lea
lret
call
bound
in
movsb
sbb
sbb
shll
and
mov
and
inc
mov
mov
pop
mov
lds
ja
or
rol
dec
push
push
or
and
adc
rorb
mov
xor
xchg
push
add
push
sbb
jo
aaa
mov
xchg
ljmp
test
sub
mov
lods
sahf
fdivl
mov
jle
js,pt
jge
dec
push
stos
xor
push
or
mov
mov
cwtl
xchg
jp
fcom
add
repz
je
pop
dec
or
xchg
mov
add
cmp
mov
xchg
testb
adcb
leave
leave
int
dec
into
test
aad
lock
sbb
insb
mov
push
pop
jae
xor
aas
push
fildl
test
sub
jge
hlt
xchg
and
xchg
divl
mov
leave
rcrb
in
xor
sub
movsb
or
add
lahf
js
loopne
mov
inc
xor
cwtl
and
stos
mov
aas
jp
movsl
sahf
aaa
lcall
dec
add
dec
pop
jns
lea
sbb
push
icebp
xchg
xchg
mov
aad
push
dec
mov
pop
into
rclb
mov
mov
jnp
push
add
add
xlat
out
mov
incb
adc
test
lret
mov
repnz
push
dec
jne
aaa
out
scas
mov
int
jl
add
dec
jbe
xcrypt-cfb
cmpsl
gs
dec
lea
mov
cmp
lock
adc
add
andl
enter
add
repnz
or
fiadds
cs
add
dec
movsb
sub
xchg
lods
std
jno
aaa
loopne
jne
pop
mov
ret
addr16
fisttpl
adc
cltd
xor
fsts
lret
cmc
leave
and
adc
jge
xor
shlb
imull
loopne
add
popa
add
adc
std
int
add
lcall
repz
cltd
fildll
sbb
pop
xor
xchg
jb
jg
js
jge
jp
pop
pop
jns
add
cli
aam
mov
xor
pop
dec
aaa
cmp
repnz
add
xchg
cld
and
mov
aaa
bound
push
ljmp
sub
lret
stos
int
jmp
pop
pop
add
decl
push
repnz
or
cmc
ds
add
jae
add
stos
mov
pop
adc
cmp
xchg
enter
scas
fisubl
sub
test
cli
adc
dec
mov
lret
loop
int
dec
test
mov
cmp
adc
aaa
sahf
jne
adc
test
sub
nop
inc
push
lahf
mov
lods
in
add
aaa
outsb
into
aas
shlb
sbb
arpl
pop
add
cmpsl
shlb
jl
mov
mov
sub
es
mov
mov
call
inc
rorl
adc
inc
jo
nop
sub
cld
fbld
adc
flds
adc
ja
enter
mov
and
sub
or
jg
ja
cmp
fdivrl
lahf
add
imul
pop
and
adc
mov
pop
lods
cmp
divb
push
mov
aaa
fs
test
jle
in
pushf
jp
add
mov
cmp
inc
mov
adc
jno
xor
shl
stos
jnp
icebp
cmp
stc
into
clc
aad
adc
dec
adc
lret
daa
mov
jae
repnz
jl
ljmp
mov
mov
cmc
loopne
xor
fdivl
movsl
std
sub
leave
mov
leave
mull
pop
out
inc
aaa
adc
jae
int
mov
mov
add
jge
mov
mov
ret
and
testb
int
ffreep
cmp
push
popa
push
aaa
outsl
add
insb
jl
mov
xchg
sarb
aaa
mov
xor
insb
mov
add
hlt
push
jbe
and
insl
jne
movsb
jmp
mov
neg
adc
sub
ljmp
pop
fldenv
xor
jae
jne
cld
aad
outsl
add
popa
mov
sbb
pop
jb
inc
icebp
rolb
jne
aaa
sahf
int
popa
xchg
je
testb
pop
shl
fiadds
jge
add
mov
add
gs
or
pop
movsb
cmp
sbbl
sarb
adc
iret
jcxz
sub
insl
add
mov
mov
lock
int
add
jl
aad
sahf
cmp
dec
std
shrl
aaa
ret
je
lods
inc
mov
mov
test
dec
xorl
sbb
stos
mov
pop
hlt
xlat
mov
lds
xchg
mov
sbb
roll
aad
mov
aaa
and
dec
je
push
repz
sub
jbe
dec
xchg
in
jmp
and
in
push
mov
inc
pop
mov
add
imul
add
add
lods
jae
das
xchg
dec
add
loope
add
xchg
add
mov
cmpsl
into
cmp
sub
add
mov
pop
fwait
lods
add
loopne
fcompl
push
shl
xchg
mov
pop
dec
std
xchg
add
and
xor
inc
out
sub
sbb
add
cmc
xchg
jle
push
pusha
add
push
xor
aaa
or
sar
mov
inc
or
dec
xchg
les
fsubrl
mov
inc
cmp
xor
xchg
popa
cmpsl
mov
sub
cmp
sahf
test
jg
loope
dec
aaa
jbe
mov
jb
ja
mov
push
out
ficompl
jl
cmp
in
and
cmp
in
pop
mov
es
mov
stc
pop
sbb
mov
mov
and
cmp
sahf
mov
das
mov
int
mov
testb
mov
add
movsb
push
pop
or
mov
pop
or
xchg
pop
hlt
lods
and
fnstsw
pop
ljmp
lcall
and
push
or
inc
out
add
mov
les
ja
dec
das
andb
in
lret
shlb
pop
jns
and
int3
xor
add
cmc
and
mov
ret
insl
sbb
imul
roll
jge
push
hlt
insl
cmpl
xchg
mov
sub
add
fpatan
mov
sbb
sbb
mov
lcall
scas
ss
es
add
loop
fsubl
add
xchg
mov
or
jno
sbb
jl
cmpsb
int
fisubs
dec
or
cmpsb
fwait
mov
cmc
mov
xchg
nop
inc
mov
sub
iret
sub
scas
in
add
jle
xor
sbb
mov
and
mov
and
mov
push
jb
inc
xor
nop
addb
aaa
pop
adc
xor
and
jnp
stc
rcr
fstl
push
outsb
xchg
xor
or
repnz
int3
dec
arpl
add
movsb
loopne
dec
call
push
stc
and
nop
loope
xor
out
lret
fmulp
shr
jmp
mov
inc
inc
test
aaa
sub
mov
jne
push
xchg
add
xor
add
xchg
mov
fisttps
add
aad
popf
fucom
lods
mov
aaa
out
cwtl
add
cmp
jnp
mov
cmp
icebp
mov
push
xchg
mov
cmp
or
addl
dec
mov
fiaddl
add
adc
push
ss
add
fidivs
mov
add
sub
mov
jbe
inc
adc
dec
xor
clc
andb
sbb
test
mov
add
les
out
iret
sti
aaa
mov
mov
test
js
mov
lret
push
add
into
xor
or
in
aaa
mov
mov
sbb
and
adc
aaa
jge
les
or
and
dec
je
test
push
inc
inc
sbb
push
inc
push
rorb
sbb
movsl
insb
sub
inc
push
gs
pop
mov
pop
sbbl
hlt
sub
add
leave
xor
scas
lea
dec
icebp
push
push
and
sbb
sub
lcall
xchg
inc
jecxz
add
out
adc
into
into
imul
mov
stos
mov
stos
mov
mov
push
flds
lahf
inc
jnp
mov
xchg
jns
popa
aaa
lret
shrb
sbb
shlb
adc
adc
cmp
inc
lds
loope
aaa
sub
push
cmp
cmp
cmp
xor
sbb
sbb
dec
fidivrs
repnz
testl
jmp
in
inc
push
sbb
inc
leave
mov
push
sahf
cli
lods
jb
cs
push
sub
mov
cld
ss
test
std
sub
and
lods
pop
jmp
cltd
pop
divl
adcb
mov
fmul
ljmp
out
push
mov
jg
pop
movsb
add
xchg
pop
lods
imul
pop
enter
test
or
xchg
flds
add
jl
insb
jb
sub
jp
jo
jo
pop
jge
mov
add
lods
std
testb
pop
xchg
pop
aaa
decl
icebp
add
js
cmp
jne
push
pop
sahf
imul
add
cmc
xchg
daa
into
call
jns
or
fnstsw
mov
xchg
sbb
aaa
adc
fwait
nop
jns
movl
popf
add
cs
pop
add
pop
cmp
jnp
and
push
pop
jae
sysexit
mov
insl
push
inc
mov
clc
pushf
cmpl
push
jg
mov
xor
incl
add
pop
mov
lea
and
add
mov
nop
lret
aaa
mov
pop
cmpsb
lahf
add
subb
movsl
xor
clc
sbb
sbb
xchg
add
jge
cmp
add
push
dec
and
xchg
inc
rcr
add
jnp
xchg
xchg
leave
fistpll
add
xlat
repnz
shll
add
xor
in
mov
mov
add
sub
and
xchg
inc
scas
mov
mov
sbb
inc
xor
sbbb
pop
aam
enter
or
add
test
mov
aad
cld
add
push
out
or
lret
aaa
mov
mov
pop
sti
iret
add
mov
jb
jne
test
fists
and
pop
push
adc
cmp
sbb
lock
add
push
add
std
jl
jo
mov
popf
mov
pop
je
ret
aaa
jb
test
loopne
lods
inc
aaa
lea
cmpsb
jecxz
fsubr
ds
outsb
add
pop
and
push
inc
flds
mov
or
outsl
or
fsubr
cmc
fmul
add
add
sbb
arpl
popf
adc
push
inc
adc
ffree
push
mov
mov
repz
repz
add
jae
aaa
pusha
es
in
movsb
shlb
les
repz
pop
cmpsb
arpl
jg
jnp
rcll
aaa
mov
daa
adcl
inc
mov
push
ds
pop
inc
push
add
cmpsl
test
lret
cmp
js
dec
add
scas
psubusb
popa
sub
lods
mov
pop
mov
or
pusha
or
fmul
ljmp
ljmp
lahf
aaa
insb
jae
mov
jmp
fsts
lods
aaa
cmpsb
aaa
ss
xor
sub
out
aaa
sahf
or
mov
loop
pop
call
bound
and
push
aaa
test
mov
adc
sahf
out
stos
push
mov
xorb
fdivrl
sbb
sbb
add
js
movb
mov
mov
lcall
jae
push
and
aaa
popl
push
daa
push
inc
jg
xchg
daa
in
lock
es
sub
les
lcall
out
sub
out
sub
hlt
inc
loope
sbb
add
cltd
xlat
or
xbegin
mov
mov
and
mov
stos
or
aam
mov
rcrb
and
jle
mov
flds
repnz
mov
data16
lret
xchg
sti
scas
das
add
repnz
test
jae
adcl
xchg
imul
movsl
lods
movsb
mov
mov
sbbl
add
push
ret
int3
ss
daa
xor
icebp
cmp
imul
mov
xor
adc
jmp
std
push
cmpsb
jmp
mov
mov
push
pusha
sbb
lea
mov
shlb
daa
jnp
dec
pop
or
in
cmp
jo
aad
add
sbb
cli
mov
dec
stc
out
and
test
xchg
aaa
sbb
mov
stc
aas
and
lods
xchg
pusha
aaa
sbb
inc
push
cli
add
popa
mov
fdivrl
mov
hlt
jge
lods
mov
repz
jg
popf
lcall
in
ret
imul
xchg
mov
dec
or
push
jbe
mov
mov
xor
gs
jle
mov
jo
jne
dec
mov
push
lcall
jmp
test
js
inc
ret
adc
cmp
or
add
fwait
cmp
lods
mov
cmpsl
iret
jle
xor
add
jmp
shrb
aaa
and
xor
add
push
bound
dec
cmp
repz
inc
mov
scas
cmc
fcomps
sahf
jae
es
cltd
push
and
repz
sbb
add
dec
add
mov
lods
and
sbb
testl
cmp
mov
mov
fcomp
sbbb
add
aad
or
push
mov
sbb
aaa
int
das
xor
dec
ljmp
or
or
push
sbb
loopne
jge
mov
out
daa
shlb
mov
mov
jg
mov
mov
dec
push
aad
inc
add
imul
scas
ret
mulw
push
push
add
cmpsb
dec
in
int
sub
inc
outsb
xor
dec
das
add
jge
clc
test
mov
cli
cmpsl
test
mov
or
xchg
les
leave
aaa
loopne
pushf
cli
cmp
pop
xor
aad
mov
into
adc
in
add
outsl
xor
popa
cwtl
pushf
inc
movsb
and
bound
adc
pop
cmp
popa
mov
cs
adc
arpl
sarl
and
outsl
ss
jmp
aaa
out
dec
pop
ja
add
es
fldl
movsb
push
in
es
inc
es
mov
xor
je
sbb
mov
jo
iret
add
or
sbb
push
mov
sbb
jae
push
xor
je
mov
dec
xchg
lods
mov
pop
and
out
cld
xchg
push
test
mov
xorl
rcll
inc
push
adc
dec
das
jno
mov
pop
add
test
dec
mov
inc
pop
daa
sbb
mov
loop
sbb
pop
popl
aad
fsubs
ret
pop
and
les
cmp
pop
arpl
mov
xlat
sahf
lock
adc
sub
cmp
sbb
add
adc
mov
ja
cmp
fdivp
mov
aam
mov
ds
pop
jp
push
mov
or
cld
pop
adc
xor
in
mov
pop
enter
fs
arpl
xorb
adc
outsb
xchg
clc
push
push
sbb
lods
js
sub
leave
sahf
xchg
fldcw
add
push
cmp
out
add
add
push
sbb
xchg
xor
adc
pop
je
mov
popf
add
add
mov
push
sbb
jae
sub
sbb
mov
jg
cli
or
jecxz
rolb
sbb
push
and
push
movsl
add
push
sbb
ss
jb
aaa
xchg
jne
arpl
inc
movsb
fistpl
sub
pop
mov
mov
fisubrl
lahf
dec
or
xchg
jp
js
aaa
lods
iret
jge
outsb
sub
into
adcb
sahf
mov
rolb
sbb
ret
sub
mov
and
add
imul
orl
sbbb
movsl
push
lcall
xor
inc
mov
push
fnstenv
lret
aaa
and
in
dec
outsb
add
mov
pop
aam
aaa
clc
adc
scas
sbb
fsubrl
add
inc
mov
push
scas
and
or
popl
xchg
xchg
rcl
jp
xchg
pusha
jo
loopne
mov
test
jns
sti
and
call
mov
inc
pushf
and
mov
sub
and
ret
mov
sbb
inc
or
add
xor
inc
mov
jbe
lahf
xchg
sub
xchg
test
ja
aam
xchg
scas
push
stc
add
testb
pop
ljmp
test
ja
lds
sbb
sub
aas
and
arpl
add
adc
int3
mov
adc
xchg
mov
addr16
jno
jns
or
adc
aaa
and
subb
into
loop
xor
aaa
push
push
nop
pushf
cmp
cmc
scas
pop
or
lds
pop
adc
mov
test
add
ds
in
ljmp
add
adc
sbb
int
adc
das
arpl
xchg
push
imul
add
loope
stc
mov
iret
fwait
cmp
adc
cli
sbb
pop
dec
leave
mov
fcmovb
stos
incl
pop
dec
add
dec
xchg
enter
fildll
icebp
aaa
push
inc
cmp
adc
mov
mov
xchg
inc
or
add
insb
xor
and
or
shlb
pop
lcall
add
or
mov
jbe
adc
xchg
inc
sbb
dec
lock
stos
pop
xor
mov
jecxz
xor
add
fadds
inc
pop
lock
pop
sbb
dec
add
and
lods
addr16
push
and
inc
adc
mov
mov
mov
mov
or
cmp
mov
sub
pop
add
stos
jno
xor
jno
add
sub
pop
iret
mov
lods
cli
sub
mov
add
sub
xor
xchg
gs
mov
xor
or
add
frstor
xchg
int
sahf
hlt
jnp
push
mov
stc
aam
push
add
aaa
mov
pop
mov
movsb
mov
cs
mov
js
daa
push
es
test
in
adc
mov
xor
cwtl
jg
lods
pop
das
xchg
xor
add
xchg
in
mov
pop
push
test
daa
add
stos
xor
jns
mov
ss
mov
fsubrp
pop
sub
add
jp
add
xchg
test
xchg
test
mov
js
inc
mov
in
ficomps
or
fidivrl
bound
stos
xor
pop
vpcomuq
pop
mov
sbb
adc
ret
scas
rol
rcpps
lret
ret
xchg
int
push
add
std
add
call
sub
mov
add
mov
jle
jno
inc
fcmovnb
lret
xchg
add
add
cwtl
scas
shlb
and
mov
adc
sub
popf
adc
mov
adc
mov
lods
lret
mov
ret
push
in
inc
add
fidivl
aaa
mov
fdivs
pop
int
addb
addr16
sbb
rclb
xor
cmpsl
enter
add
mov
cmp
jno
add
inc
lock
js
adc
test
jne
push
cs
adc
push
add
lret
xchg
add
dec
aaa
andl
mov
sbb
inc
jp
jecxz
jnp
xor
and
ret
and
pusha
ljmp
add
test
inc
mov
pop
pusha
fmul
or
cmp
ja
inc
push
mov
push
push
inc
nop
shll
pop
and
mov
mov
push
lcall
cmp
stos
jmp
push
pushf
push
inc
shr
xchg
popa
fistpl
mov
pop
aaa
ret
xor
jne
add
addb
xor
mov
repz
adc
and
xor
jge
add
shlb
cmp
sbb
ja
push
mov
xchg
push
fstpl
andl
push
push
add
pop
pusha
pop
xor
sbb
mov
mov
push
mov
inc
call
mov
jo
out
sub
jo
imul
jae
fcoms
push
mov
loop
test
dec
jns
int3
inc
sbb
mov
ficomps
in
pop
les
cmp
scas
jp
dec
pushl
push
cwtl
bound
enter
dec
mov
xchg
add
dec
mov
sti
divl
add
push
mov
ss
daa
push
les
add
push
xchg
jb
mov
and
sub
es
sub
add
pop
loopne
jge
jns
xor
pop
pop
aas
or
sbb
inc
cmp
or
xor
pushf
cmp
repz
mov
rcll
int
sarl
pushl
pusha
aaa
orb
cmp
mov
xlat
xchg
loop
add
lahf
sub
inc
shrl
pusha
test
sysexit
sub
shlb
adc
sahf
testb
sbb
and
or
or
mov
ljmp
fnsave
in
mov
cmpsb
hlt
stc
out
mov
outsb
add
dec
pop
nop
adc
test
sahf
test
popf
repz
rol
cmp
in
icebp
mov
add
sub
cwtl
jne
add
nop
push
jb
xor
aaa
jno
xlat
lods
sbb
mov
mov
aaa
lds
outsb
add
xchg
mov
xchg
int3
pop
jnp
jle
push
fsubl
lcall
pusha
mov
dec
add
aaa
adc
xchg
or
and
movsl
pusha
mov
and
add
lahf
lret
mov
rolb
mov
jno
dec
and
insb
out
aad
lret
mov
or
shl
add
dec
sti
add
out
fisttps
mov
mov
ss
hlt
and
mov
out
std
sti
jno
test
rolb
hlt
mov
or
aaa
xchg
xlat
inc
cmpsb
jp
mulb
out
nop
inc
in
leave
sahf
add
iret
inc
push
add
mov
jbe
shlb
adc
lods
xchg
push
mov
add
aas
adcb
enter
inc
lea
out
add
rcl
and
test
and
ss
pop
add
and
test
icebp
leave
sub
add
out
jns
cwtl
int
xlat
and
les
add
test
bound
pop
add
lcall
add
cld
mull
or
in
or
test
loop
xor
icebp
pop
add
xchg
insb
xor
jg
lods
cmp
pop
shlb
je
mov
pop
jle
push
jo
sbbl
cld
mov
push
mov
out
adc
les
push
mov
in
test
jb
lcall
xchg
pop
addr16
out
add
sbb
jmp
push
lods
loop
jge
call
std
add
aaa
push
dec
aad
jecxz
dec
int3
add
mov
jmp
fisttpll
pop
cmp
mov
dec
dec
add
add
inc
or
movsb
xor
mov
xchg
aaa
out
mov
cmpsl
aas
mov
push
add
jmp
scas
cmove
addr16
loopne
imul
out
mov
cltd
ljmp
mov
fsubrs
imul
out
mov
aaa
xor
adc
jmp
je
stc
xor
cld
jnp
and
in
leave
pop
loopne
ljmp
add
push
cmp
lods
sub
in
out
lods
lahf
jo
pop
aaa
movsb
scas
mov
xorl
mov
push
mov
mov
cmpsl
jae
inc
cmpsb
clc
push
nop
mov
fcompl
or
outsl
push
add
cld
sbb
gs
stos
imul
add
sub
icebp
push
fisttpl
dec
mov
sbb
dec
loop
out
dec
push
dec
xchg
out
pusha
jno
jns
leave
aaa
inc
fisubs
and
dec
and
adc
lcall
xchg
sub
dec
cmpsl
les
andw
xchg
inc
mov
add
or
sub
and
and
test
rorb
sbbl
test
aad
int3
inc
mov
ljmp
orb
mov
jb
cmpl
icebp
std
and
adc
and
and
jp
jbe
andl
and
jbe
inc
or
out
add
aas
and
rorl
adcb
mov
std
cld
sti
push
or
hlt
lahf
int
int
test
hlt
fidivl
cld
in
fistpll
ficompl
push
hlt
sarl
aaa
mov
mov
mov
pushf
aaa
mov
test
dec
out
push
adc
cld
mov
lea
sub
xchg
jno
dec
aas
dec
xchg
add
add
mov
mov
add
mov
inc
outsb
mov
push
inc
data16
jle
enter
adc
pusha
je
iret
inc
out
mov
jae
repz
dec
enter
push
mov
push
pop
jecxz
pusha
jl
arpl
or
pop
and
sub
adc
repnz
dec
mov
xchg
xchg
mov
adc
pop
sbb
aaa
dec
inc
mov
sbb
mov
inc
sbb
sub
mov
aaa
in
cmp
fcom
add
push
lret
pop
in
aam
push
cmpsl
mov
dec
fsubrp
fwait
or
repnz
je
rcl
inc
cmp
leave
loop
rol
aam
test
xchg
push
leave
cld
arpl
iret
cmc
jo
ficompl
adc
lret
jge
pop
test
mov
mov
inc
sbb
js
fistps
sub
lea
jecxz
xor
les
cmp
mov
xlat
inc
jae
pop
jae
jnp
testb
out
iret
and
add
jns
push
outsl
cli
push
movsb
je
stos
push
add
aaa
dec
in
cmp
jne
inc
push
jl
dec
jnp
or
add
add
pop
cmp
das
es
mov
sub
xchg
mov
or
add
sub
xor
and
aaa
or
mov
push
or
or
sbb
push
jae
and
lea
sub
lods
sub
roll
dec
inc
iret
out
inc
push
mov
loopne
in
cmp
jno
cli
bnd
lock
ds
mov
xchg
movsb
out
imul
adc
shlb
rcl
mov
mov
lahf
xchg
popa
mov
lahf
and
cli
add
sub
sbb
jae
dec
mov
jb
fldt
fwait
cltd
xor
mov
and
or
dec
inc
add
mov
jp
jne
inc
add
dec
fs
pop
call
out
inc
push
addb
inc
add
shl
fs
push
inc
dec
add
gs
dec
int
push
push
shll
push
xor
cmp
add
adc
and
or
sbb
push
push
cmp
nop
sub
add
cmp
or
fs
inc
xlat
pop
add
insb
fsubr
pop
movsl
repz
mov
cld
dec
pop
xor
insb
pop
dec
in
add
je
dec
pop
push
dec
inc
aaa
dec
and
add
push
adc
mov
mov
out
aaa
movsb
faddl
les
lods
dec
cltd
loop
stos
popf
add
aaa
cmp
enter
sahf
out
scas
inc
lcall
andl
fisubrs
add
out
mov
sub
repz
add
or
stc
mov
aad
loopne
fprem1
add
ljmp
jecxz
rcl
out
fimuls
xor
or
add
xor
iret
test
aas
bnd
xor
mov
pushf
fbstp
out
add
xor
mov
imulb
and
push
es
das
mov
push
imul
add
jmp
cmp
test
and
mov
xor
add
dec
xor
add
shlb
fsubrs
mov
pop
scas
arpl
xor
fs
ret
pop
pop
and
pop
notl
aaa
push
sahf
dec
xchg
jmp
add
jnp
inc
shll
add
imul
mov
addb
adc
lods
and
sbb
negl
mov
ds
mov
xchg
inc
flds
xchg
pop
cmpsl
notl
sub
adc
fnstenv
and
pop
pop
cli
xor
cmc
fdivrl
fsub
in
xchg
sub
rorb
inc
pop
fbstp
ljmp
mov
aad
jo
dec
ljmp
int3
rcl
std
cs
les
cmc
sahf
rcl
xchg
stc
add
jns
or
bound
lock
push
add
nop
sbb
sub
mov
adc
adcl
sbb
sub
pop
pop
inc
add
mov
cmp
js
cmp
jo,pt
inc
rorl
xlat
aam
clc
inc
lds
fildll
bound
push
adc
and
mov
data16
sbb
add
mov
mov
loope
add
jno
inc
dec
jge
add
std
dec
mov
push
mov
mov
test
int3
and
mov
cld
mov
lcall
or
mov
mov
nop
movsl
jecxz
imul
clc
and
sbb
cmpb
add
sub
lock
pop
fdivrp
lret
sub
xchg
clc
rolb
inc
inc
loope
dec
sub
or
stos
loopne
aad
in
add
fisubrs
sahf
out
cwtl
andb
pop
aam
data16
int3
inc
imul
ljmp
xor
adc
pusha
sub
sbb
sub
xor
mov
mov
sub
pop
pusha
xlat
adc
cmp
or
fwait
cmp
sbb
loop
fcmovnb
jp
and
ja
incl
imul
insl
and
in
popa
enter
gs
cmpsb
pop
xor
pop
mov
outsl
push
test
or
adc
jnp
cld
push
ja
loopne
clc
inc
dec
sbb
add
mov
mov
movsl
mov
adc
lds
mov
or
sbb
xor
fwait
xlat
mov
push
xchg
add
test
inc
mov
add
fwait
cld
inc
pop
imul
mov
rcll
xchg
aaa
repnz
ret
dec
rcrb
aaa
xchg
in
aam
loope
aaa
fildll
fisttpl
pusha
pop
xlat
and
imul
and
test
jg
pop
cmpl
popa
jmp
pusha
adc
ss
sub
in
or
mov
cmp
jns
mov
xor
mov
mov
insl
iret
xchg
sub
adc
xor
pop
jb
pop
pop
outsb
movsl
push
popf
into
mov
or
mov
push
scas
xor
xor
cmp
icebp
push
enter
out
or
inc
add
mov
add
scas
dec
imul
add
or
outsl
xchg
push
lahf
jae
repz
loopne
imul
sbb
jle
add
je
xchg
icebp
lods
int3
daa
jns
insl
js
add
mov
cs
add
or
jns
jp
push
mov
push
sub
sub
push
dec
xor
lods
sub
pop
mov
push
inc
fidivl
jne
jp
rorb
xlat
adc
push
push
pusha
add
inc
popa
mov
add
or
mov
add
mov
rcrb
or
hlt
jns
mov
clc
jnp
js,pt
pop
hlt
rdtsc
mov
pop
mov
and
lcall
ljmp
rorl
hlt
fldt
and
mov
xor
and
nop
mov
cmp
sahf
out
repz
into
push
pop
xchg
inc
dec
mov
fiadds
xchg
pop
xchg
outsb
add
shl
inc
lret
xchg
adc
ds
insl
in
outsb
push
dec
hlt
pop
xchg
cld
cmpsb
pop
fwait
cld
mov
cld
mov
pop
out
pop
jmp
loop
out
pop
ret
cld
cli
pop
idivl
push
inc
cmp
adc
lock
push
adc
sub
cld
ss
or
inc
pop
jg
dec
pop
arpl
pop
pop
push
cld
pop
pop
cld
jb
dec
cld
popf
pop
mov
or
or
cmp
or
insb
jns
andl
xchg
mov
hlt
mov
lock
xor
cmp
movsb
or
jmp
mov
cmpsl
xor
and
cmpl
push
xor
cltd
rorb
xchg
jb
sahf
sub
out
jecxz
fdiv
pushf
cmc
stos
xchg
pop
test
pop
pop
mov
xor
push
jp
and
push
xor
je
adc
cmp
dec
into
lock
or
cmp
cmp
aaa
stos
jns
mov
jns
mov
cltd
xchg
lcall
loop
jns
jbe
mov
loope
mov
sbb
xchg
inc
icebp
in
cltd
or
xchg
mov
cmp
xchg
sahf
pushf
daa
mov
popf
jbe
push
in
insl
and
cmpsl
xchg
mov
inc
hlt
out
inc
or
rcrl
dec
cld
icebp
fcompl
cli
test
fistpll
or
into
rcrb
jg
and
cltd
push
sar
out
outsl
loope
fisubs
dec
iret
push
xor
daa
je
mov
mov
push
fnstcw
pop
clc
and
xor
test
lcall
int
out
out
inc
lret
loope
xchg
es
and
fldenv
push
loope
lock
enter
xchg
leave
push
xchg
je
fld
cmp
addb
pop
testl
pop
push
sub
mov
pop
pop
popl
push
sub
mov
pop
pop
push
sub
mov
pop
pop
add
sub
mov
mov
pop
push
mov
pop
mov
sub
mov
sub
mov
pop
pop
push
push
pop
pop
xchg
xchg
mov
push
sub
mov
pop
pop
xchg
push
push
pop
pop
xchg
movl
push
mov
pop
xchg
inc
incl
xchg
push
push
pop
pop
mov
xchg
sub
mov
sub
mov
pop
pop
call
cmp
jne
xchg
push
mov
pop
mov
sub
mov
push
pop
pop
xchg
inc
push
sub
mov
pop
pop
sub
mov
sub
mov
pop
pop
mov
sub
mov
mov
pop
xchg
call
cmp
jne
xchg
xchg
mov
xchg
xchg
push
push
pop
pop
sub
mov
sub
mov
pop
pop
mov
xchg
push
mov
pop
add
add
jmp
jmp
push
mov
pop
push
push
pop
pop
mov
sub
mov
sub
mov
pop
pop
push
mov
pop
xchg
sub
mov
sub
mov
pop
pop
lea
sub
mov
mov
pop
push
push
pop
pop
push
sub
mov
pop
pop
xchg
mov
push
mov
pop
push
mov
pop
sub
mov
mov
pop
push
push
pop
pop
xorl
sub
mov
sub
mov
pop
pop
xchg
add
cmp
jb
jmp
xchg
push
sub
mov
pop
pop
mov
xchg
sub
mov
mov
pop
subl
xchg
sub
mov
push
pop
pop
mov
sub
mov
mov
pop
sub
mov
mov
pop
ret
sub
mov
mov
pop
sub
mov
mov
pop
pop
sub
mov
push
pop
pop
xchg
sub
push
sub
mov
pop
pop
xchg
mov
sub
mov
mov
pop
xchg
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
push
push
mov
pop
push
mov
pop
addl
sub
mov
mov
pop
xchg
pushl
sub
mov
mov
pop
push
mov
pop
xchg
push
mov
pop
mov
sub
mov
push
pop
pop
xchg
push
mov
pop
xchg
mov
xchg
sub
mov
mov
pop
add
incb
push
sub
mov
pop
pop
push
mov
pop
popl
xchg
push
push
pop
pop
ret
inc
xor
add
add
add
add
xor
add
add
add
jmp
add
add
add
inc
xor
add
add
add
add
imul
popa
jae
inc
jb
outsl
jb
cltd
add
je
jb
arpl
fs
jae
add
jb
gs
xor
cs
insb
add
add
insl
xor
mov
inc
out
push
clc
imul
add
fwait
je
out
jmp
dec
xlat
add
mov
inc
add
add
out
movsb
call
insl
xor
lea
inc
out
pop
cmp
out
inc
add
add
call
push
insl
add
out
push
xchg
add
out
inc
add
cmp
mov
add
addr16
push
jmp
push
clc
imul
add
jmp
js
out
push
lea
inc
out
jo
push
cwtl
add
out
push
clc
imul
add
fwait
mov
xlat
add
sahf
js
mov
push
inc
add
add
out
movsb
pop
mov
add
sbb
out
add
out
add
out
add
out
xor
rclb
aaa
ficomps
xor
push
xor
rclb
cmp
push
xor
rclb
aaa
ficomps
xor
push
xor
rclb
cmp
sbb
xor
sub
subb
bound
js
shlb
gs
xor
outsl
test
jae
out
push
xor
xor
xchg
adc
cmpsl
or
fs
shlb
imul
js
push
je
xchg
push
jb
adc
xchg
mov
out
addb
add
and
dec
mov
add
or
push
inc
add
jge
movsb
fs
call
inc
out
addr16
mov
imul
xor
xor
mov
out
mov
imul
xor
xor
mov
add
mov
imul
xor
xor
mov
add
mov
imul
xor
xor
mov
add
mov
and
xor
mov
jne
and
dec
mov
add
nop
pop
cmpl
xchg
adc
add
fs
adc
mov
int
or
mov
add
out
pop
and
cmp
xor
out
cmp
fwait
insb
mov
xor
add
cmpsl
add
frstor
sbb
pop
inc
sbb
push
and
xchg
insb
push
mov
xlat
mov
jecxz
lock
add
xor
add
out
mov
adc
clc
mov
addr16
or
aas
pop
pop
mov
out
push
clc
add
add
mov
out
inc
or
incb
add
adc
cmpsb
inc
adc
out
jmp
sbb
or
inc
cld
mov
inc
push
imul
add
fidivl
inc
out
mov
add
mov
jmp
add
mov
and
mov
mov
jmp
sbb
or
mov
insl
xor
sbbl
add
out
addb
and
add
sbb
push
clc
outsl
out
xor
inc
add
imul
in
adc
lods
int
add
in
sbb
fwait
incl
out
push
call
inc
out
xchg
mov
add
mov
add
sbb
push
push
sbb
dec
xor
inc
add
mov
cmp
roll
adc
xchg
fwait
jmp
sbb
xchg
pop
mov
out
or
add
sub
push
out
add
add
add
adc
incb
add
rol
add
rolb
nop
pusha
jmp
and
push
adc
add
out
add
in
inc
fwait
add
push
add
out
add
mov
out
add
je
xor
out
push
clc
outsl
out
xor
mov
xlat
add
out
call
andl
mov
jmp
add
out
add
in
rep
mov
out
add
in
pushl
sbb
scas
xor
pusha
mov
inc
sub
push
in
fildl
add
mov
xchg
xchg
xor
push
add
add
pop
sbb
mov
out
jae
push
inc
mov
mov
out
adc
xchg
xchg
jne
dec
aam
stos
add
iret
mov
add
out
sub
lods
jmp
ja
shl
enter
add
xchg
outsb
cmp
pop
push
sbbl
ja
cmpsl
and
add
xchg
sub
adc
shlb
out
push
inc
divb
call
adc
mov
lcall
fwait
jb
and
in
jl
cli
add
