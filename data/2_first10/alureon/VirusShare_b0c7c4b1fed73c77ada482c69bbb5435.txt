push
push
push
push
push
xor
mov
push
mov
call
mov
push
mov
call
push
push
mov
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
mov
call
push
mov
call
push
push
push
mov
call
push
mov
call
push
push
mov
call
push
mov
call
push
push
mov
call
push
push
call
push
call
push
push
push
call
push
mov
call
pushl
push
pushl
pushl
call
pop
pop
pop
pop
ret
push
mov
push
push
andl
push
call
mov
jmp
mov
movzwl
imul
add
mov
add
cmpb
jne
testl
je
push
push
mov
mov
xor
xor
mov
and
mov
pop
pop
mov
leave
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
mov
add
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
add
push
movb
call
push
call
lea
push
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
mov
mov
mov
mov
ret
push
mov
add
sub
push
push
mov
mov
push
xor
push
add
mov
call
push
call
lea
push
push
push
push
call
mov
cmp
mov
je
lea
cmp
mov
je
mov
mov
add
push
call
push
call
push
call
test
mov
je
mov
add
andl
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
incl
mov
mov
imul
lea
lea
cmpl
jne
xor
mov
mov
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
call
push
call
lea
push
push
push
push
call
test
je
add
mov
add
add
add
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
xor
add
cmp
jbe
add
lea
test
cmp
jb
xor
add
leave
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
push
push
push
pushl
mov
push
call
mov
push
pushl
call
cmp
je
cmp
jne
push
push
pushl
mov
call
mov
jmp
push
mov
push
push
push
mov
mov
call
push
push
pushl
call
xor
pop
pop
pop
ret
push
mov
add
sub
push
push
xor
mov
push
call
push
call
push
push
pushl
push
call
test
mov
je
push
add
pop
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
push
add
pop
jne
push
call
push
call
mov
push
push
pushl
push
call
test
jne
jmp
xor
jmp
mov
mov
mov
mov
rep
mov
pop
pop
pop
leave
ret
push
mov
push
push
lea
push
xor
mov
movb
movb
movb
mov
call
push
mov
call
cmp
pop
pop
je
push
pop
jmp
cmp
jne
cmpl
jae
movzwl
test
jne
pushl
pushl
push
call
jmp
push
push
push
call
push
mov
call
xor
pop
leave
ret
mov
push
cld
mov
mov
lods
mov
pop
ret
push
mov
sub
add
push
push
xor
cmp
push
je
mov
jmp
push
mov
call
cmp
mov
je
cmpl
jne
lea
call
mov
xor
cmp
push
setne
push
push
push
mov
mov
call
mov
cmp
mov
jne
xor
jmp
mov
mov
mov
rep
pushl
pushl
pushl
push
call
mov
sub
mov
add
cmpl
je
push
pushl
push
call
mov
jmp
mov
mov
test
je
mov
add
mov
push
mov
call
push
call
push
call
mov
mov
push
mov
call
push
call
push
call
mov
movzwl
lea
mov
movzwl
lea
push
mov
call
push
call
lea
push
push
push
push
call
pushl
pushl
call
mov
mov
sub
xor
cmp
mov
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
sub
add
mov
mov
mov
add
addl
addb
subl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
pushl
pushl
call
test
je
cmpl
je
mov
call
mov
mov
mov
add
mov
movzwl
xor
test
mov
jbe
mov
mov
mov
addl
subl
push
pop
rep
mov
add
sub
test
add
mov
movzwl
lea
test
cmp
jb
push
push
pushl
mov
call
mov
push
call
push
call
push
call
pushl
mov
pushl
add
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
sub
push
lea
push
mov
mov
mov
mov
rep
push
mov
push
pushl
mov
push
call
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
movb
mov
mov
mov
rep
mov
mov
mov
mov
lods
mov
sub
add
xor
cmp
stos
add
mov
sub
sub
rol
lea
test
jne
mov
mov
mov
movzbl
imul
xor
push
add
pop
lea
test
jne
cmp
jne
mov
mov
mov
rep
push
push
xor
push
push
mov
call
push
push
pushl
mov
call
xor
push
add
pop
pop
pop
pop
leave
ret
push
mov
sub
add
mov
andl
mov
mov
add
mov
add
sub
mov
push
lea
push
mov
mov
mov
mov
rep
mov
sub
add
mov
imul
add
mov
mov
neg
imul
add
add
add
mov
push
lea
push
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
mov
mov
mov
mov
rep
mov
add
add
decl
mov
mov
jne
subl
addl
pop
pop
leave
ret
push
mov
push
push
xor
mov
mov
scas
je
push
add
pop
jmp
mov
mov
pop
leave
ret
push
mov
add
sub
push
push
push
xor
push
mov
call
push
call
pushl
call
mov
cmp
movzwl
lea
mov
jbe
sub
add
mov
mov
xor
test
je
mov
and
neg
sbb
and
add
cmpb
sub
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
push
mov
call
push
call
lea
push
push
pushl
push
call
test
je
mov
movzwl
incl
sub
testl
add
cmp
mov
jb
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
test
addl
add
cmp
jb
pop
pop
pop
leave
ret
clc
jo
add
add
movsl
dec
add
mov
sbb
sub
cwtl
add
lock
xor
decb
and
push
jge
clc
add
mov
mov
mov
inc
enter
xchg
sub
mov
mov
jbe
aas
aad
daa
int3
scas
aaa
push
loop
jmp
cmp
cmp
shrb
rol
mov
add
loope
xlat
in
inc
fdivrl
push
lods
aam
daa
and
sar
cmp
lods
fadd
loope
xor
iret
jp
adc
add
fstl
jno
push
and
jo
imul
sahf
pop
cli
jb
ljmp
mov
pop
in
scas
ds
xchg
dec
shl
int
inc
dec
jmp
push
fdivl
push
out
pop
fs
shl
and
into
xchg
jmp
dec
mov
inc
stc
cmpsb
sti
xchg
lock
jo
mov
lcall
mov
cmp
and
push
enter
inc
jge
lret
mov
jecxz
mov
cld
add
insb
sar
and
push
add
sub
jb
xor
fldt
xchg
mov
aad
lcall
insb
pusha
mov
cmp
loopne
ja
jne
jbe
or
add
repz
cmp
mov
mov
negb
loop
enter
mov
iret
dec
mov
cltd
outsb
es
icebp
pop
test
add
jp
and
fs
aam
out
sbb
jle
mov
jb
mov
sbb
cld
mov
std
xor
pop
jecxz
or
fimull
icebp
push
gs
cmp
adc
stos
not
sub
push
push
cmp
jo
mov
sub
lods
fidivrs
pop
jecxz
push
mov
xlat
mov
jno
mov
test
inc
mov
inc
add
add
aam
and
rorb
push
cwtl
xor
pop
inc
mov
gs
jb
stc
sub
adc
daa
fdivrl
pop
push
cmp
jp
loopne
insl
vsubsd
dec
loop
add
mov
loope
imul
bound
sbbl
cmpb
aad
mov
or
jp
mov
push
xchg
cwtl
cmp
idivl
cmp
add
adc
and
pop
lods
mov
imul
test
jo
test
push
test
or
add
jnp
mov
jge
fstl
int3
lds
jb
mov
rcrb
rol
dec
jecxz
mov
push
fsubrs
fisttpl
jle
aaa
fwait
je
out
xchg
rcll
les
or
rcr
mov
clc
leave
shlb
and
push
enter
jbe
sbb
adc
xor
and
cmpsb
xchg
dec
pop
push
or
add
push
inc
mov
nop
lock
push
mov
aam
jmp
lock
pop
in
cmp
dec
mov
call
fs
xchg
inc
in
movsb
inc
add
mov
xchg
lcall
lock
and
cltd
scas
nop
ja
mov
lods
aam
inc
cwtl
faddl
jb
mov
sahf
xor
gs
push
test
mov
jnp
movsb
cli
sbb
push
xor
cs
cmp
lea
dec
mov
mov
sbb
sahf
shll
in
popa
adc
dec
insl
icebp
xchg
repz
hlt
bound
or
fldt
filds
repz
xorl
mov
cltd
mov
cmpsl
mov
inc
lret
inc
jnp
mov
rolb
icebp
in
repz
inc
mov
inc
inc
push
mov
iret
xor
inc
rolb
mov
mov
je
xchg
rcrb
xlat
fwait
mov
dec
ficompl
lock
repz
add
or
cltd
mov
xlat
pushf
mov
xchg
lds
and
add
in
cmp
mov
jmp
lea
cld
inc
test
dec
mov
mov
add
dec
lret
lret
mov
mov
xchg
cs
addr16
popf
imull
loop
xchg
xor
cmp
test
adc
aas
mov
jno
bound
dec
and
xchg
inc
int
jge
orl
lods
out
adc
mov
fldt
arpl
mov
sbb
mov
adc
stos
inc
lcall
add
sub
das
inc
stos
jnp
testb
mov
mov
and
insl
insb
xchg
mov
xchg
loopne
adc
shll
mov
test
mov
cltd
adc
sbb
push
push
popa
pop
adc
or
xchg
pop
push
iret
sub
mov
dec
sbb
cmp
cmp
leave
out
push
je,pn
jge
lcall
insb
mov
lret
rcrb
jbe
outsl
inc
jmp
repz
rcrb
int
lret
and
enter
xchg
iret
ffreep
cs
pop
push
shr
ljmp
dec
push
inc
stos
add
xchg
xor
xchg
shlb
sbb
push
mov
shl
test
dec
stos
insb
jge
enter
lea
aaa
stos
out
or
adcl
sub
aas
repz
sbb
pop
mov
test
mov
mov
clc
add
xchg
dec
ss
movsl
or
jnp
ds
ja
sbb
mov
ljmp
fld
push
adc
add
xchg
mov
jmp
jl
das
out
frstor
xor
pop
aad
push
repnz
sbb
mov
sub
mov
incl
jae
ljmp
cmp
mov
mov
push
pop
test
int
out
aad
xchg
dec
push
popf
pop
xchg
xor
daa
daa
sbb
mov
xchg
daa
lret
mov
lahf
test
and
jne
outsb
pop
add
js
jle
sub
test
dec
push
xchg
stc
cmp
mov
jns
cld
sbb
out
out
iret
cltd
inc
aad
addr16
xchg
push
testb
pop
xchg
pop
sbb
pop
outsb
cmp
push
xchg
and
das
popf
popa
inc
in
testb
shlb
fdivp
scas
mov
insb
js
rcll
out
sbb
stos
fsts
adcb
inc
aas
in
push
xlat
sbb
jl
outsl
sub
je
jmp
cmp
push
lea
adcl
xlat
lds
sub
push
add
fcompl
ja
fisubl
ljmp
repz
pop
and
mov
mov
std
imul
addl
es
mov
pop
js
mov
inc
popf
in
std
mov
add
adc
mov
ret
loopne
jge
std
mov
sbb
in
fisttpll
jae
ss
jnp
mov
mov
push
push
xchg
sub
fildll
mov
out
push
push
mov
mov
stos
adc
xchg
xorb
push
call
push
outsl
sbb
cmp
mov
int3
iret
sbb
push
leave
push
add
enter
cmpb
outsb
xchg
cmp
iret
popa
repnz
or
aad
and
movsl
xor
into
xor
fnstsw
and
cmp
cmp
mov
push
loop
mov
mov
sti
stos
popa
mov
adc
adc
mov
jl
xor
mov
xor
mov
mov
mov
stc
adc
xchg
xor
pop
xchg
cmp
dec
sarb
cmp
fmull
ret
xor
rorb
adc
sub
ds
in
and
imull
pop
jp
les
fstpl
jp
inc
pop
and
in
ss
shrb
das
fmuls
lea
pop
xlat
cmp
jmp
pop
jbe
js
fnsave
insb
stos
hlt
and
stc
jne
loopne
test
rolb
add
add
loope
mov
sbb
loope
add
sbb
ret
stos
aas
xor
dec
in
imul
mov
fs
je
dec
push
push
push
fsubrs
mov
testl
bound
je
fcomip
mov
pushf
outsl
and
rcrb
fwait
mov
test
mov
pop
in
hlt
ret
xorb
and
jl
dec
in
dec
cmpsl
lcall
sbb
or
movsl
leave
mov
int3
ret
push
dec
lock
fcoml
adc
jns
insb
mov
sbb
sbb
stos
mov
loopw
lahf
pusha
pop
pop
cmpsl
daa
fildll
mov
sbb
lds
loope
pop
push
fs
lods
test
out
stc
mov
xor
cmpsl
push
dec
out
subl
adc
and
jbe
add
mov
jae
je
add
dec
push
mov
add
sub
dec
mov
or
push
outsb
jg
pop
pop
and
aaa
je
dec
inc
dec
sbb
sbb
movsl
dec
pop
aad
mov
inc
mov
jne
sub
inc
push
pop
sbb
subb
lret
and
mov
fs
or
test
mov
test
mov
iret
daa
xchg
es
pop
pop
push
dec
push
inc
mov
shl
xchg
mov
clc
dec
icebp
mov
fimull
xchg
push
push
jge
pusha
or
std
fsts
jne
addl
popa
stos
push
sub
bound
mov
sbb
mov
push
add
fld
mov
icebp
and
sub
movsl
and
push
testb
notb
xor
fwait
aaa
movswl
push
lods
xchg
push
das
scas
roll
dec
mov
lret
mov
or
adc
jnp
movsl
adc
sub
inc
or
and
jo
popf
lock
cmpsl
adc
imul
loope
lods
cmp
andb
sub
cmpsl
cmp
das
loop
mov
adc
add
cmpsl
outsb
imul
or
push
ja
mov
mov
mov
push
arpl
inc
jno
stc
pop
test
or
outsb
fldenv
movsb
ds
cmp
es
mov
sub
test
cltd
insb
mov
fcmovnu
notb
pop
addr16
int3
cmp
mov
rcr
bound
push
xchg
mov
in
push
dec
jp
xlat
push
imul
sbb
xor
jge
mov
imul
mov
inc
and
or
div
xchg
and
andb
inc
add
xchg
push
push
mov
push
int
cmp
repz
cwtl
fucomi
and
add
add
loopne
repz
cwtl
cld
sbb
ljmp
fbstp
sbb
cld
xchg
or
scas
sbb
test
lea
movsb
sbb
jbe
inc
jmp
rolb
outsb
push
int3
addr16
jp
divl
xor
xor
mov
adc
rcrb
pop
cmp
push
jge
pop
fnsave
dec
aad
inc
push
adc
sbb
cld
leave
push
mov
bound
inc
mov
pop
and
outsl
mov
ret
in
mov
into
sbb
ret
negl
mov
inc
sbb
inc
imul
lahf
loopne
leave
std
pushf
mull
adc
xor
pop
mov
fistps
push
in
imul
jnp
and
push
adc
lods
dec
jne
ret
inc
adc
sub
xor
rorl
lcall
cmc
out
or
jge
in
dec
movsb
inc
dec
pop
jg
mov
test
fwait
jnp
inc
xchg
into
and
cwtl
lret
mov
pop
data16
mov
jo
movsb
test
imul
out
xchg
sbb
sti
xchg
sbb
cltd
divb
inc
mov
daa
cmp
dec
mov
out
out
imul
shlb
fwait
loop
jbe
mov
ss
pop
addr16
push
movsb
xchg
and
fisttpll
mov
lcall
pop
pop
negl
mov
pop
push
or
pop
fwait
push
fiadds
adc
subb
push
mov
xor
shlb
xchg
mov
nop
rcl
rorl
lods
cmpsb
into
out
loopne
stos
pusha
mov
xor
test
jg
adc
add
add
das
sarl
movsl
inc
lahf
mov
push
push
sbb
pushf
xor
sbb
mov
or
repz
xlat
add
pop
or
jno
stos
sbb
loopne
cmp
sbb
lds
pop
pop
mov
and
mov
add
adc
sub
dec
cmp
pop
push
or
jmp
adc
or
jne
hlt
aam
movl
and
ficompl
cld
xlat
mov
lea
push
add
xchg
adc
andb
sbb
fsubrs
test
xor
sbb
cltd
inc
dec
pop
jecxz
test
adc
sbb
sub
aas
mov
mov
cmp
xor
xchg
cs
jnp
dec
mov
xchg
xchg
or
loop
repnz
or
out
shl
loop
cmp
aam
cs
loope
sbb
xchg
jmp
mov
je
in
cmp
test
xchg
ret
jl
jno
js
mov
jae
or
arpl
pop
jmp
jb
test
xor
cltd
clc
jp
notl
cmc
inc
sbb
mov
adc
mov
lods
mov
or
lock
push
xchg
shrl
push
mov
mov
cmp
bts
xor
movsb
xchg
in
das
test
aad
popf
cmp
sub
outsl
cltd
fs
sbb
jo,pn
cmc
mov
rolb
cli
outsl
inc
jo
xchg
pushf
or
mov
or
mov
out
ret
push
mov
fidivs
frndint
mov
cmp
stc
xchg
mov
ds
xchg
or
or
xor
loopne
and
cltd
push
js
and
lods
mov
mov
jg
xchg
xor
gs
push
pusha
jb
jae
mov
jle
mov
jae
cwtl
daa
inc
ljmp
mov
cli
pop
lcall
push
pop
pop
pop
lods
dec
pop
outsl
and
test
adc
xchg
dec
shr
daa
out
adc
xchg
loop
sbb
adcb
fisubrl
sbb
push
push
sub
inc
xor
adc
xor
jo
jbe
pop
mov
jmp
xchg
imul
push
mov
lahf
cwtl
push
lds
loop
ja
xor
mov
cli
xor
aad
pop
ficoml
add
sub
mov
or
jne
cmpsl
dec
mov
jb
bound
out
mov
add
xchg
jl
dec
lods
jmp
enter
add
xor
and
lea
mov
mov
jo
rcrb
in
jae
repnz
push
enter
or
insb
fadds
scas
add
mov
xor
sbb
insb
in
je
in
lret
mov
push
pushl
nop
sbb
subl
mov
out
adc
push
daa
sarb
aam
mov
outsl
push
adc
repz
jge
sbb
jae
mov
xchg
mov
xchg
or
jo
dec
xchg
cld
out
scas
xor
mov
mov
push
inc
jb
sub
repnz
jbe
mov
scas
repz
cli
mov
movsl
shlb
xor
and
mov
rcrb
xchg
ficompl
cmc
pop
data16
stc
repz
inc
fwait
add
fstpt
loopne
sbb
jg
scas
sarl
and
jge
cmp
jnp
out
sbb
xchg
in
xlat
nop
or
lods
cmp
cltd
roll
ja
jl
and
movsb
pop
test
mov
out
cmp
dec
pop
je
les
inc
and
mull
jb
leave
or
hlt
jne
mov
inc
or
shlb
sarl
test
das
mov
call
pop
pushl
js
inc
leave
das
shll
mov
ret
loopne
aam
xchg
cmpsb
mov
imul
pushl
fstl
lret
jns
mov
cmp
add
fstp
add
mov
jo
cmpb
dec
dec
push
lods
jge
cli
ss
es
sub
pop
popf
and
in
rcl
jmp
cmpl
pop
aaa
mov
and
pop
outsl
int
cmp
sbb
addr16
mov
movsl
jg
xchg
sbb
icebp
lcall
mov
and
loope
and
lret
aaa
mov
insl
sub
jge
test
jbe
jp
xchg
jmp
pop
push
dec
cli
sbb
outsb
mov
daa
jne
mov
push
push
jbe
jne
and
mov
adc
add
add
dec
es
dec
ss
arpl
outsb
test
insb
lahf
add
or
push
jno
daa
fucomp
sbb
out
addl
mov
leave
add
pop
sbb
test
add
add
adc
mov
repz
pop
scas
loopne
push
popf
sbb
popf
scas
lahf
xchg
inc
jle
test
clc
push
sub
pop
jbe
repz
mov
sub
test
add
push
pop
ss
andb
cmpsb
push
fldl
dec
xorl
stc
sti
push
arpl
and
ds
inc
or
mov
xor
or
push
pushf
sbb
and
es
cmp
insb
mov
sbb
adc
sti
jnp
or
sti
push
push
stc
mov
fiadds
lahf
in
aaa
mov
xor
mov
or
shrb
and
mov
lds
loopne
ss
fnstenv
mov
bound
xchg
out
jge
and
cli
adc
xor
in
jge
cmc
xor
lock
dec
dec
jb
jecxz
cld
test
lcall
stc
xlat
inc
dec
jo
and
les
and
cmp
std
and
push
mov
js
inc
mov
or
movsb
jae
clc
popa
ret
in
mov
std
jb
sub
dec
jg
jp
sahf
int3
lcall
jl
stc
imull
cmc
mov
push
inc
scas
rorb
movsb
xor
push
sub
add
xor
pop
cld
arpl
nop
inc
gs
sbb
fs
dec
std
mov
xor
ja
or
js
fmulp
ret
call
and
js
decb
jg
push
gs
es
cmp
push
pop
bound
cmc
rcrl
add
add
jecxz
mov
jb
in
xchg
lahf
fcomps
jb
pop
cmpl
inc
mov
scas
jmp
lret
add
test
push
aam
xor
dec
out
scas
jbe
inc
shl
gs
and
mov
in
loopne
cld
or
repnz
cli
icebp
ret
cmpl
outsl
xchg
movl
test
inc
xchg
data16
data16
cmp
mov
xchg
stos
xorb
stos
mov
sub
ds
divps
mov
outsb
xlat
sti
call
xchg
or
loope
loopne
jg
mov
mov
ret
add
mov
or
xchg
ljmp
push
pop
test
lds
push
test
int
mov
sbb
jg
add
shlb
insb
inc
in
icebp
aaa
adc
lock
inc
xchg
dec
mov
cmp
sbb
cmc
scas
js
loope
and
cli
cmp
cmp
mov
movsb
push
mov
lock
es
cli
adc
inc
repnz
lret
xchg
pop
cmp
iret
jno
dec
movsb
sbb
cltd
xor
xor
not
inc
test
push
popf
pop
push
dec
dec
push
inc
fs
cmpsb
aam
jp
mov
inc
mov
jle
test
mov
movsb
pop
shr
add
push
cmp
test
lret
push
sbb
push
into
lds
cltd
test
pop
iret
mov
aad
dec
fs
stos
and
test
aas
mov
xor
sub
fnstcw
sbbb
mov
aas
fstpl
jl
sbb
mov
push
aam
adc
int
popf
pop
add
pushf
cld
mov
in
call
mov
xor
jecxz
jo
and
cltd
rorl
movsb
jmp
cmp
leave
push
add
lock
roll
and
pop
repnz
stos
in
pushl
loope
out
sbbl
in
movb
iret
mov
mov
add
cmpl
clc
sbb
sti
sub
pop
add
aaa
pushf
fs
xchg
cmp
xchg
mov
mov
movsl
ret
mov
jae
lods
or
dec
movsl
shrb
pop
imul
push
xor
add
mov
call
mov
repz
xor
inc
loopne
ret
xchg
es
cmp
pop
in
push
outsl
inc
std
mov
mov
shlb
movsl
arpl
out
xchg
rcrl
add
out
in
out
or
adc
sub
into
lcall
fbld
xor
int
ss
test
and
pslld
into
inc
pop
inc
push
cld
out
jne
inc
push
mov
or
cmp
nop
stos
out
lcall
push
xor
lock
iret
push
ja
cs
call
mov
and
push
shl
in
arpl
inc
pusha
out
push
mov
mov
jecxz
push
cmp
fsubrl
test
fs
or
push
jecxz
repnz
dec
or
in
jns
test
push
fcoms
sbb
pop
bound
scas
mov
sarl
arpl
pop
push
loop
pop
adc
jo
mov
add
or
sub
jno
dec
adc
das
in
sub
adc
mov
sbbb
ja
and
shlb
imul
sbbb
sbb
or
sub
inc
adc
loope
cmp
pushf
iret
pop
sub
sarb
or
iret
xor
je
imul
or
or
gs
mov
fcoms
push
daa
push
cmpsl
fcomi
imull
adcb
notb
sub
ffree
lea
stos
hlt
adc
xor
inc
sbb
jge
or
push
mov
inc
pop
push
sbb
cmpsb
out
ljmp
mov
fs
mov
adc
into
dec
push
sub
inc
nop
cmpsl
aaa
sub
inc
or
xor
mov
mov
outsl
add
jns
ret
push
push
rcrl
push
pushf
out
jle
push
sub
ds
sub
pusha
pop
add
icebp
mov
out
mov
and
rcl
popf
or
add
mov
pop
cld
loope
shrl
fnstenv
push
jmp
andb
flds
xchg
mov
inc
xor
mov
dec
bound
or
xchg
shll
mov
icebp
cmp
xchg
mov
jns
vprotw
xchg
adc
jbe
inc
mov
xor
scas
rsqrtps
lea
add
std
mov
ficomps
sahf
or
cmc
jmp
mov
pop
inc
icebp
cmp
xor
imul
mov
and
aas
divl
je
xchg
xlat
push
pop
cmpsb
lock
lahf
jbe
inc
push
cmp
mov
or
fucomp
fstps
bound
cmp
daa
lret
cmp
ljmp
sbb
xchg
inc
pxor
push
lea
lds
scas
cwtl
mov
dec
in
int3
dec
xor
mov
mov
xor
lods
push
test
lods
mov
or
repz
inc
lds
jmp
mov
push
mov
xchg
test
cmp
imul
push
sti
adc
jnp
lds
outsl
lret
push
pop
ljmp
arpl
test
in
pop
icebp
insl
add
add
sub
fstpl
add
in
insl
into
das
sbbl
pop
jae
inc
fidivl
aaa
mov
sub
cmc
add
jle
ds
cmc
imul
xchg
or
xchg
mov
imul
shll
out
leave
sub
je
clc
push
loopne
sti
pop
jne
jns
loopne
repnz
negl
push
rcrl
mov
std
pop
or
andb
dec
rcl
arpl
cs
xor
mov
lea
jno
xor
pop
cmp
shlb
push
sbb
int3
xlat
pop
aas
adcl
mov
sub
and
cmc
mov
mov
aad
test
dec
and
pop
orl
ljmp
ljmp
sub
sub
dec
cmp
into
aaa
jmp
insl
or
push
repz
sbb
cmpsb
pushf
int3
insl
shlb
aas
out
je
cmp
cmp
mov
and
cmc
imul
test
ret
lds
mov
out
inc
sbb
clc
cmp
adc
lea
outsb
call
repz
in
lahf
faddp
mov
inc
int3
xchg
jne
jge
push
push
test
les
push
mov
mov
dec
shll
jo
adc
mov
call
stos
dec
and
testb
and
addr16
ja
sbb
sbb
sbb
xchg
sarb
mov
adc
adc
mov
xor
loope
cmpsl
cmp
xor
add
mov
shr
ja
push
xorl
adc
arpl
jmp
adc
xor
imull
adc
sub
cli
sbb
insb
pop
mov
jmp
stos
lea
pop
ljmp
push
mov
and
dec
xchg
mov
mov
cltd
xchg
mov
repnz
adc
sub
push
push
xchg
pushf
add
iret
sbb
cld
cmpl
xor
jbe
test
int
mov
mov
notb
js
iret
and
ja
ss
pop
add
data16
rorl
test
or
cmp
mov
dec
mov
jno
mov
cmc
loop
xchg
fbstp
cmc
wrmsr
add
jno
int3
jp
xor
lea
rolb
and
xor
or
dec
aas
out
fiadds
add
or
fwait
das
repz
cmp
push
inc
test
lock
jl
pop
or
push
sbb
or
popf
test
and
ret
ja
stos
jns
out
mov
mov
mov
in
mov
jbe
rcl
stos
jecxz
gs
jo
movsb
adc
inc
xchg
mov
xchg
movsb
add
mov
es
faddl
sti
sbb
int3
jno
fs
cmpsl
cli
xor
loopne
push
sbb
sbb
dec
cli
call
and
dec
js
jbe
adc
pop
pop
dec
mov
mov
sbb
xlat
sbb
aad
out
mov
cmp
push
adc
ss
scas
push
adc
in
mov
or
jns
mov
repz
push
cmc
into
fistps
xchg
mov
outsb
xchg
daa
cmpsl
adc
out
scas
dec
mov
inc
xchg
push
mov
aad
cld
jns
fnclex
jg
fimull
mov
push
push
jle
mov
inc
shrl
dec
into
inc
xor
push
or
sbb
rcrl
pop
mov
sbb
sub
rolb
xchg
mov
imul
shrl
fisubl
jns
scas
xchg
ffreep
jle
out
jno
and
push
jns
or
stos
loopne
cs
and
data16
imul
push
adc
mov
addb
outsl
rcrl
hlt
in
mov
sbb
cmp
pop
push
add
and
insb
dec
pop
inc
jmp
or
lds
inc
sub
aad
inc
mov
pop
xchg
and
mov
cld
mov
xchg
stos
out
cmpsb
lods
mov
scas
jp
push
fisttpl
jne
rep
mov
pop
movsl
daa
xchg
mov
sub
xor
rep
xorb
nop
sub
push
dec
mov
mov
rcrb
pop
aaa
lcall
pusha
mov
mov
sahf
mov
fisubrl
cwtl
push
mov
cwtl
faddl
adc
add
sarb
jle
push
std
ficompl
gs
popf
xor
pushf
gs
add
mov
xorb
xchg
push
xchg
or
sahf
cmp
xlat
fdivs
pop
add
inc
fwait
adc
push
cmp
mov
adc
cmpsb
xorl
shl
fnsave
es
aad
repnz
sub
dec
dec
adc
rorb
icebp
jne
dec
data16
arpl
pop
mov
inc
cltd
jg
xor
mov
out
xchg
popa
outsb
daa
std
into
mov
pop
cmc
imul
push
mov
or
loop
cwtl
hlt
mov
cmpsl
xor
pushf
cmp
ficoms
push
lods
dec
add
lods
inc
std
xchg
pop
icebp
outsb
ret
das
es
sahf
mov
jg
mov
bound
ss
scas
mov
push
pop
xor
subb
sbb
lret
into
inc
adc
add
stc
mov
mov
push
mov
xor
mov
sti
push
adc
inc
push
dec
loopne
dec
dec
fs
int
rcrb
pushf
pop
outsb
xchg
pop
add
ret
clc
push
int3
add
leave
jns
addr16
jp
into
pop
fwait
out
adc
in
mov
dec
in
cmp
push
jle
xor
stc
dec
mov
xor
xchg
int
dec
sub
scas
mov
and
in
mov
jo
inc
roll
push
adcl
pop
and
dec
es
mov
lret
shll
leave
sub
and
ret
add
in
sub
or
mov
fwait
cmp
push
dec
shll
xchg
fcoml
fadd
ss
ret
or
imul
int3
aaa
mov
in
enter
adc
nop
leave
insl
lods
fisubrl
jg
jnp
pop
jmp
ljmp
ffree
push
mov
iret
aas
mov
pop
push
sub
pushf
mov
mov
pop
push
insb
jns
mov
sar
ja
hlt
push
cmp
rorl
push
jl
jge
jo
outsb
adc
adc
stos
cmp
insl
push
js
inc
cmp
dec
mov
mov
aad
jg
pop
popf
xor
out
pop
xchg
cmp
push
push
mov
js
mov
icebp
sub
add
pushf
ds
cld
adc
push
arpl
mov
movsb
sub
push
into
inc
fdivr
out
pusha
shll
adc
jl
imul
add
fldcw
rcr
cmp
loope
inc
lahf
jmp
sub
out
rorl
cmp
sub
ret
leave
push
sbb
out
xchg
mov
jge
shlb
push
adc
insl
or
outsl
pop
or
sub
xchg
and
jb
add
jb
ret
movsb
andl
push
ret
sbb
test
push
pause
stos
mov
fcoml
cmp
fsts
sub
sahf
into
push
rcrl
ret
xchg
mov
sub
out
fisubrs
cmp
shr
sub
imul
mov
add
cwtl
pop
andb
imul
jo
and
add
pop
pop
jecxz
jl
cwtl
hlt
cmp
push
pop
fsubrl
mov
mov
imul
dec
ret
jnp
push
xchg
jge
pop
and
inc
aad
lods
or
outsb
loopne
jae
pop
leave
inc
dec
xchg
aad
inc
jl
nopl
in
push
xchg
dec
sbbl
pop
test
and
sbb
frstor
sbb
inc
sbb
mov
or
outsb
xchg
ret
mov
imull
push
xchg
lds
hlt
insb
dec
ds
push
push
jne
dec
jg
outsl
and
inc
cmp
jne
jmp
mov
sub
mov
and
pushf
sub
and
dec
in
insl
lock
push
adc
lcall
out
push
xchg
xchg
sysret
sbbb
mov
mov
icebp
jb
and
arpl
ljmp
popf
cli
or
lret
mov
test
or
sub
pop
cmp
pop
aaa
stos
mov
in
xor
mov
loop
repz
jp
imul
jne
insl
pop
cltd
in
mov
dec
mov
sbb
cmp
mov
xor
dec
xrelease
pushl
jb
xchg
jnp
addr16
or
out
inc
xor
inc
iret
cmp
testb
popa
mov
in
push
inc
insb
jae
push
and
cmp
loopne
lret
jne
push
sub
cmp
aam
daa
sahf
ljmp
in
push
in
enter
in
cmp
lret
mov
xchg
out
adc
xchg
in
imul
cs
sub
dec
jmp
mov
adc
mov
loopne
or
pop
andw
mov
xchg
add
jle
out
add
aad
ljmp
int3
je
sbb
aas
ljmp
cmpsb
shlb
xor
jp
mov
inc
xchg
cmpsb
and
jl
adc
add
cmpsb
cmp
adc
out
lcall
cs
incl
push
sub
jnp
icebp
jno
addr16
out
test
imul
aad
jns
test
inc
pop
imul
aaa
sub
test
es
rorl
in
sbb
mov
jecxz
stc
inc
pop
subb
cs
adc
or
imul
outsb
cltd
mov
je
les
adc
adcl
fadd
jge
cli
sub
push
pop
pop
aam
mov
xchg
pop
mov
in
push
faddl
mov
scas
fnstsw
roll
cmp
push
inc
mov
cmpsb
dec
inc
mov
lcall
pop
ret
into
stos
push
sub
mov
lock
pop
lods
sub
sbb
xor
xchg
and
jg
aam
adc
push
shll
inc
rol
test
es
or
cwtl
dec
push
xor
sbb
jnp
cmp
xchg
and
add
xchg
lcall
jb
xchg
stos
push
mov
shrl
dec
jecxz
rol
sbb
pop
jne
pop
les
int3
xor
lea
popa
dec
push
jbe
ret
loopne
mov
aas
test
adc
sbb
dec
push
mov
and
cmp
add
cmp
lcall
loopne
out
add
test
out
push
adc
cs
dec
testb
add
stc
lods
xchg
jmp
shrl
mov
call
push
test
out
sub
mov
popf
dec
inc
addr16
call
push
mov
mov
mov
xchg
rorl
add
inc
ds
fdivrl
fdivs
sbb
jg
ror
pop
ficoms
xor
xchg
iret
mov
push
cld
arpl
in
jmp
push
cmp
mov
xor
fildll
jge
orl
lcall
inc
movsb
add
lahf
mov
movsb
pop
sahf
dec
je
dec
push
incl
aam
in
sbb
test
ja
add
adc
jle
movl
cmp
inc
orb
xlat
fcmovu
jnp
or
in
cmpb
and
sbb
sbb
int3
pop
mov
scas
pop
jle
dec
mov
jp
dec
cmp
push
adc
add
ljmp
xchg
imul
push
cli
sbb
ja
pushf
mov
loopne
xchg
lret
dec
mov
dec
jle
push
mov
orl
hlt
pop
sbbl
push
das
fadds
xchg
stos
sbb
rcl
les
pusha
mov
stc
mov
mov
mov
sub
dec
in
lock
xchg
push
lods
in
add
cmp
loopne
add
mov
in
fisttpl
pop
pusha
ret
and
jg
mov
jnp
mov
inc
cwtl
jne
and
ds
fiaddl
jg
mov
cmpsb
dec
push
test
and
push
repz
movsl
dec
in
pop
lock
imul
lcall
mov
out
mov
fmul
jae
adc
dec
xchg
jl
dec
adc
pop
test
or
lods
lea
les
fcomps
fdivrl
scas
adc
push
push
sti
je
icebp
out
outsb
dec
jmp
or
add
adcl
sbb
mov
xor
adc
pop
xchg
fldl
adc
mov
lret
insl
fnsave
aam
loopne
fcoml
push
aam
jnp
cmp
fmull
add
hlt
sbb
jno
ss
inc
cmp
mov
call
lds
xchg
cmp
push
cmpl
jg
lahf
adc
icebp
inc
mov
ret
add
dec
fiadds
xor
mov
adc
xorl
incl
movsl
push
js
push
fnsave
lahf
jmp
movb
adc
mov
je
stc
and
clc
loop
xchg
call
mov
sbb
jl
shlb
aaa
into
les
push
sbb
sub
add
rcrl
mov
movsl
test
pop
fsubrl
and
inc
or
or
shll
cs
out
jl
xchg
mov
mov
loope
arpl
inc
sahf
pushw
loope
imul
mov
inc
clc
outsb
push
adc
add
movsl
andl
adc
cmp
sahf
mov
icebp
inc
adc
mov
xchg
and
dec
pop
stos
ljmp
jb
ja
adc
push
mov
call
pushf
mov
jg
cmp
cmp
fstps
int
adc
xor
xchg
cld
mov
aaa
lcall
dec
jo
adc
ret
sbb
cld
add
sbb
data16
test
xlat
pop
mov
lcall
mov
sub
loop
pusha
cmp
push
nop
fucompp
sub
gs
or
xchg
test
jecxz
jae,pn
sbb
push
movsl
ss
inc
sahf
mov
sbb
pop
clc
mov
imul
adc
pop
cli
xchg
aad
dec
sub
sahf
std
pop
testl
dec
jp
shrb
add
inc
popa
jno
mov
jge
aaa
or
sti
mov
lock
orb
aas
adc
das
ficomps
mov
test
push
push
mov
jns
cmpsb
or
fdivl
stos
das
in
jno
test
pop
mov
xchg
adc
sbb
lock
mov
push
pop
movsb
push
cltd
cmpb
push
push
pusha
in
adc
fisttpll
stc
inc
pop
sarb
rorb
lds
dec
lods
loopne
stos
sbb
out
cwtl
dec
loop
decl
sti
fistps
xchg
jg,pn
cmc
mov
adcb
cmc
sub
lret
mov
adc
cmp
insl
ljmp
fnstsw
test
cmpsb
mov
add
test
pop
movzwl
aas
scas
sti
push
hlt
xor
jo
cmp
scas
mov
out
sub
mov
ss
jnp
data16
shrb
jne
xor
pop
cmp
int3
insl
ss
lahf
cwtl
sub
pop
imul
add
pusha
mov
mov
xchg
dec
push
int3
sub
cmp
rcl
call
sub
addr16
in
aad
xor
dec
or
scas
or
adc
test
mov
or
cmp
ret
nop
dec
push
addr16
lds
xchg
push
sub
ljmp
lret
std
cmp
push
or
adc
enter
mov
jns
push
inc
mov
daa
and
xchg
xor
pop
push
mov
cmp
mov
cmpsb
and
xchg
out
clc
scas
mov
in
loopne,pt
stos
mov
push
xchg
mov
push
dec
and
movl
daa
sub
rcl
cmpsl
adcl
aam
cmp
ret
bound
push
sti
mov
or
aaa
xchg
push
insl
mov
push
orl
loop
stos
data16
or
mov
pop
ret
loopne
or
je
cmpsl
lds
xchg
xor
ret
push
pop
push
lret
dec
arpl
dec
lret
test
lahf
out
or
mov
or
inc
shlb
loope
pop
cltd
lret
lods
mov
loope
mov
shrb
flds
inc
push
test
repnz
dec
sub
sti
test
dec
cltd
repnz
pushf
out
jmp
roll
and
loopne
inc
andl
popa
lods
scas
mov
cmp
inc
enter
adc
faddl
add
push
lcall
dec
cmp
or
xor
shl
cmp
ds
aaa
outsl
sub
jp
pop
push
cmc
adc
sbb
cli
insb
or
jnp
scas
stos
cwtl
out
pushf
lods
ds
dec
leave
ja
mov
hlt
adc
test
mov
xchg
sahf
in
aam
sub
push
push
lret
hlt
push
test
cmp
bound
pop
cmp
out
cltd
inc
leave
icebp
enter
scas
mov
repnz
sub
lods
or
inc
mov
jge
xchg
stos
xor
mov
pop
and
sbb
pop
pop
les
popa
mov
push
int
jmp
dec
pop
pop
adc
inc
test
cmp
lret
sub
stos
cwtl
mov
dec
xchg
sbbl
imul
mov
outsl
jo
mov
cmp
or
dec
mov
into
jecxz
xor
aas
mov
cmpsb
mov
andl
mov
jns
test
mov
pop
push
jb
int
cmp
push
or
cmpsl
jae
stc
jnp
dec
jno
mov
mov
leave
sahf
xchg
cs
mov
sahf
clc
cmp
out
insl
rorl
subl
sahf
or
aad
or
add
shll
outsl
popa
mov
adc
test
enter
mov
dec
shr
inc
sub
sbb
sub
jns
pop
inc
mov
mov
int
add
adc
dec
sub
les
cmc
and
cltd
imul
push
pop
mov
pop
jl
mov
lods
and
jno
add
or
cmpsb
cld
mov
dec
fstpl
cmp
and
mov
enter
lret
and
inc
xor
sbb
adc
daa
xchg
out
push
sbb
lret
pusha
repz
hlt
outsb
inc
hlt
mov
push
out
jg
pusha
in
mov
loopne
lret
movsl
fdivs
xchg
adc
ja
mov
outsb
dec
sbb
cmp
cmp
mov
sub
cmp
hlt
int
lods
outsb
pop
hlt
in
xchg
cwtl
pop
sarl
adc
jg
movlps
imul
data16
cmp
jmp
cltd
pop
into
les
mov
pop
and
jl
add
scas
jg
es
arpl
movsb
inc
fstl
nop
movsb
imul
out
jo
test
fs
or
daa
cmp
test
xchg
dec
aaa
pushf
sub
enter
and
out
push
mov
and
xor
icebp
scas
stc
fistps
jle
scas
inc
out
mov
push
pop
ds
inc
int
popa
mov
inc
repnz
test
cmpl
push
ret
pushf
das
and
mov
aas
mov
inc
leave
push
jo
sub
and
add
cmp
lock
pop
out
repz
xor
mov
mov
popf
adc
mov
push
mov
or
pusha
shrl
add
je
push
test
cmp
dec
mov
push
movsb
ss
sbb
pushf
mov
or
and
jecxz
mov
imul
fs
adc
popf
repnz
jl
pop
or
dec
imul
sub
bound
dec
repz
mov
insl
shr
scas
jno
sbb
or
repnz
pop
incb
lcall
ljmp
aam
jle
push
scas
cmp
jl
inc
repnz
add
icebp
dec
popa
leave
inc
inc
mov
jg
xor
adcl
stos
test
xchg
jno
rolb
xor
shrb
xorl
loop
and
shr
mov
pop
ja
mov
fsubrs
adc
sarb
cmp
or
mov
cmp
aad
ljmp
loope
pop
dec
push
inc
outsb
cwtl
imul
pop
pusha
pop
out
fwait
pop
int
lret
data16
mov
pop
rol
stc
rorb
mov
int3
sbb
pop
sub
mov
fcompl
test
movsl
inc
insl
fistl
adc
add
mov
add
push
jnp
sbbl
push
add
cld
scas
dec
in
repnz
pop
mov
fsub
jmp
dec
inc
xchg
repnz
push
imul
cmpsb
ret
sbb
loop
out
mov
js
mov
mov
xor
ficompl
pop
and
mov
adc
push
adc
loop
and
mov
push
mov
xorb
jbe
mov
sub
add
jmp
test
mov
push
adc
jbe
ficoms
xor
jg
cwtl
ud0
cmp
cmc
mov
dec
pop
mov
cmp
push
daa
cmpsb
sub
mov
lret
cmp
out
cmp
adcl
outsl
dec
rcrb
sub
out
or
add
pop
xchg
mov
repnz
inc
mov
inc
cmpsb
dec
sbb
fwait
ret
cs
cmp
inc
and
cltd
addr16
shll
lods
adcl
add
es
fwait
fwait
jmp
add
xchg
sub
mov
push
mov
out
jge
cmp
push
or
add
inc
pop
or
inc
imul
pop
loope
in
arpl
pop
test
adc
fs
sarb
jecxz
push
mov
sub
inc
dec
xchg
dec
pop
inc
mov
int3
mov
lret
xchg
adc
push
and
dec
xor
aaa
add
ret
push
ds
cmpb
xchg
mov
push
cld
jle
cmc
and
enter
loop
dec
or
pop
xorb
xlat
pop
sbb
xchg
dec
jg
stos
adcl
jae
push
mov
jo
jb
test
xchg
sub
shrl
inc
dec
popa
mov
rclb
xorl
jo
jmp
cmp
hlt
lods
xchg
mov
jb
call
cld
lahf
int
jns
mov
pusha
test
roll
mov
or
jmp
xor
or
clc
bound
ja
fs
mov
mov
pushf
std
sbb
jle
shr
xchg
sbb
outsl
jg
adc
clc
mov
fimuls
repnz
pop
notb
push
cmpsb
xchg
decl
fmull
rol
sub
pop
test
js
adc
out
int
arpl
jle
xor
cli
add
aad
pop
aad
mov
xor
push
add
je
rcr
and
mov
shrl
adc
shlb
out
ds
aas
mov
mov
aad
mov
jp
pop
cmp
cmp
xchg
pop
std
mov
in
mov
jns
xchg
in
dec
sbbb
sub
out
mov
dec
ret
aaa
jno
call
shll
cmp
inc
fstl
aas
cmp
add
out
jge
push
int3
lret
adc
cmc
inc
and
cmpxchg
out
ror
outsb
lcall
fwait
xor
inc
movsb
cmpsb
xchg
jmp
and
jmp
inc
xchg
xor
loopne
loope
sahf
jno
loopne
out
sub
jg
lods
imul
rcrb
push
jle
clc
sahf
lret
loop
addr16
fxch
insl
js
rcrb
pop
lret
bound
lret
ljmp
inc
jmp
jg
cmp
sti
adc
pop
dec
rcl
out
aam
add
fnstsw
test
repz
test
adc
push
ljmp
push
int3
repnz
out
rorb
rorl
lret
mov
xor
rcrb
push
int
sbb
add
fldt
sbb
and
jns
inc
jo
dec
repz
loopne
aad
or
dec
push
dec
daa
loopne
add
loop
push
dec
mov
sahf
jle
cld
mov
pushf
fisubrl
loop
test
xor
scas
ss
mov
and
inc
and
adc
mov
xchg
sub
dec
adc
sub
fidivs
add
pushf
sbb
adc
into
push
dec
cs
xchg
call
in
mov
sbb
jo
out
jmp
pop
mov
sbbl
ss
fs
pop
jae
xchg
clc
inc
leave
and
es
ret
outsl
ds
outsb
jl
inc
add
shll
lahf
negl
pmullw
sti
iret
insl
cli
sub
aas
negb
push
xlat
loopne
sub
jp
rcll
cmp
clc
jmp
mov
pop
lock
push
aam
scas
fsts
repz
cmp
ja
outsl
mov
xchg
xlat
mov
rcr
lds
or
repz
call
jne
push
cmp
xchg
xchg
add
ljmp
bound
cmpsl
bound
dec
jmp
adc
in
sbb
shll
dec
xchg
and
addr16
bound
dec
jne
or
lea
shlb
loop,pt
icebp
sub
cs
mov
cmpsb
cmpsb
in
jg
mov
xor
dec
adcb
pop
add
inc
das
pop
mov
mov
and
gs
loope
adc
pop
add
sarl
mov
movsb
pop
xchg
pushf
lcall
sbbl
outsb
int3
stos
xor
scas
iret
add
xchg
pop
push
hlt
pop
les
jno
or
lret
std
push
add
cmp
inc
xchg
xchg
loop
add
rolb
lahf
je
sbb
popa
pushf
lods
adc
daa
xchg
inc
xlat
sub
shlb
ret
nop
rcrb
push
push
add
js
gs
fsts
push
std
xchg
cld
sub
jg
dec
cmp
xlat
sub
xchg
or
push
and
enter
sub
push
jo
loop
test
sbbb
hlt
jae
jno
sbb
xchg
sbb
mov
xchg
push
pop
sub
sbb
pop
pop
rcrb
and
nop
ja
adc
dec
aaa
push
mov
addr16
xchg
scas
jle
mov
inc
outsl
jae
inc
insl
push
popf
mov
ror
pushl
push
cmp
mov
jbe
mov
out
js
in
adc
xlat
dec
das
xchg
sbb
fmull
inc
shlb
cwtl
addr16
imul
cmpsl
iret
jo
stc
movl
fiadds
mov
addb
inc
subb
inc
push
insb
cmpsb
cwtl
push
mov
icebp
jbe
lret
or
into
jno
adc
loope
adc
cmc
std
mov
sarb
scas
mov
roll
mov
dec
fwait
and
pop
jne
test
adc
pushf
iret
inc
out
sahf
cli
jbe
fiaddl
mov
add
cmpsl
jnp
aam
lods
cmp
mov
and
sub
dec
and
push
loope
sub
push
pop
and
xchg
and
in
repz
or
push
sbb
in
lods
xchg
xchg
and
data16
roll
pushf
mov
xchg
adc
aam
mov
sbb
std
cmp
and
fidivrs
dec
adcb
enter
jmp
sbb
adcb
and
mov
hlt
imul
mov
arpl
cmp
lea
add
rorl
sub
cld
roll
inc
sbb
xlat
jb
mov
pop
shll
push
pop
jae
sbb
movsb
roll
fcompl
bound
and
rcll
pushf
loope
sbb
cwtl
test
mov
lret
xchg
mov
jnp
xchg
ss
sub
mov
mov
pop
jae
pop
dec
in
test
mov
cmc
shll
lods
adc
mov
xchg
icebp
xchg
dec
into
mov
cmp
mov
mov
add
movsl
fwait
lock
jp
push
fadd
call
rcll
pop
clc
pop
cmpsb
shll
push
dec
push
mov
adc
in
adc
xchg
icebp
ja
sahf
sub
pop
pop
cmp
stos
jle
sub
ret
push
sbb
lahf
mov
cmp
xor
hlt
fld
movsl
test
mov
cmp
mov
dec
sbb
adc
and
adc
cwtl
inc
mov
scas
pop
sub
pop
cli
pop
add
dec
scas
cmpsl
push
mov
adcl
sahf
and
mov
mov
dec
pushf
pop
jae
jno
cmp
movsb
add
mov
xchg
jge
fs
sub
jecxz
lcall
inc
pop
jl
jns
or
or
sub
mov
jecxz
mov
push
icebp
cmpsb
repnz
imul
mov
and
mov
sbb
sbb
jnp
inc
and
and
xor
sti
sbb
lret
scas
sub
mov
shlb
leave
cwtl
push
pop
inc
push
or
lret
imul
xchg
daa
or
dec
push
sti
lahf
ret
sbb
outsb
sub
in
rcrb
in
out
and
lret
pop
sub
inc
sub
or
ret
dec
ss
sub
xchg
adc
cltd
inc
sub
lods
out
mov
cmp
or
jge
dec
loope
dec
pop
and
lret
inc
mov
mov
jmp
xchg
out
cmp
pop
add
mov
test
jns
pop
add
fcom
sbb
mov
jl
mov
int3
insb
or
mov
mov
es
and
and
pop
sbb
test
lahf
js
jp
and
mov
pop
mov
xchg
mov
leave
popa
cli
es
jmp
push
pop
shll
movsb
pushf
dec
shlb
mov
jb
cld
jno
inc
movsl
mov
dec
cmp
xchg
dec
sbb
lcall
fiadds
sbb
sahf
xor
jle
push
or
xchg
mov
push
jo
test
xchg
mov
cli
or
lahf
repz
mov
jno
mov
icebp
vunpcklps
jecxz
orl
push
shll
je
outsl
popa
movsl
push
leave
pop
flds
push
xchg
je
pop
add
xchg
sbb
jbe
lods
roll
mov
dec
sti
rcrb
or
add
push
xchg
fwait
xorb
je
cmp
add
xchg
outsb
icebp
sbb
ja
bound
cmp
cmp
sbb
xor
jecxz
jno
xchg
push
nop
cmp
rol
call
mov
jl
push
cs
idiv
sub
sarb
pop
out
jmp
inc
mov
fstpt
xchg
xchg
loope
sub
mov
imul
push
pop
addr16
ljmp
inc
popa
adc
xor
mov
in
mov
mov
mov
fbstp
jmp
lcall
int
jb
lods
add
sub
or
sbb
andb
inc
mov
dec
mov
iret
ret
mov
icebp
stos
cltd
xchg
cmc
and
in
cli
push
lcall
pushf
andb
stc
push
clc
cs
in
aad
cmpl
cmp
jle
lret
push
sbb
lret
push
jb
and
rol
popa
sahf
jp
imul
cltd
pop
push
and
mov
adc
push
repz
sbb
out
pop
in
pop
pop
cs
lret
cmc
cmc
lds
inc
sub
lods
xor
aaa
leave
or
pushf
in
cs
push
mov
pop
cmp
jle
dec
insl
adc
popf
push
fisttpl
sub
xchg
cmp
inc
fwait
daa
ds
dec
stos
push
sub
push
adc
ficomps
jns
lret
rcll
xchg
adc
jae
xchg
mov
pop
scas
and
das
mov
sub
js
mov
lods
or
dec
aad
pusha
fwait
aam
push
mov
inc
adc
lock
jne
cmpb
fnstsw
push
ficompl
clc
outsb
jae
xor
adc
pop
movsb
out
sub
jle
xchg
cltd
xor
cmc
leave
fs
clc
mov
das
cs
shrb
xchg
dec
lret
repnz
sub
sub
push
pop
and
ja
xchg
push
inc
daa
sbb
mov
jno
cwtl
bound
outsb
pushf
jb
in
sahf
xor
data16
jle
inc
sbb
pusha
aaa
rclb
or
nop
shrb
mov
jo
bound
ds
das
sub
aad
or
mov
jns
jns
xor
and
dec
popf
cmp
mov
das
cs
loopne
mov
mov
js
lock
bnd
in
mov
pop
lret
rolb
jp
das
ss
mov
repnz
push
inc
cmp
push
in
pop
repz
imul
cmp
shll
int3
mov
xor
xor
rcr
int3
or
nop
pop
push
inc
mov
nop
xor
insl
add
hlt
mov
lcall
sbb
cmpsl
lods
inc
gs
dec
movsb
xchg
cltd
jmp
lods
stos
mov
rorb
ljmp
jae
and
into
sub
dec
test
cmp
adc
stc
jns
lahf
xchg
arpl
test
lcall
xchg
mov
lea
lea
mov
loope
mov
aad
int3
cmp
ja
insl
rolb
or
cmpsb
jl
repz
testb
movzwl
adc
std
push
adc
push
int3
outsl
repz
in
dec
into
scas
imul
test
and
push
sbb
sbb
scas
jne
fs
sub
add
mov
insl
ficompl
sub
cwtl
pop
arpl
call
stos
inc
push
xchg
leave
pusha
rcll
aam
cmp
dec
inc
sbb
sub
add
loop
jmp
and
dec
and
mov
mov
jmp
out
fisubrl
jmp
cwtl
test
clc
je
inc
cs
shll
test
xchg
loop
stos
cmp
mov
cld
sub
mov
daa
sub
loope
les
aam
xlat
jle
dec
push
ds
clc
push
movsb
rcll
and
aad
and
xchg
pusha
movsl
hlt
xor
addb
fisttpll
cld
mull
arpl
or
fwait
cmp
stos
stos
mov
int3
mov
loop
adc
mov
fdivs
movsb
incl
enter
push
mov
mov
stos
or
jl
xchg
mov
push
mov
bound
insb
cld
adc
fisubrl
lock
xor
pop
or
mov
flds
cld
loope
pop
ficoms
insl
pop
insb
pop
out
cmp
or
rcl
jno
add
xchg
cwtl
sub
les
and
jnp
daa
ljmp
cmc
cmpsl
scas
imulb
cmp
dec
inc
cmp
inc
data16
cmpsl
lret
rolb
cmc
cmp
push
sub
lea
xor
mov
inc
adc
out
imul
lret
std
adc
in
mov
icebp
mov
jbe
xor
xchg
lret
call
repnz
jge
hlt
push
jg
ret
test
loop
test
mov
sbb
insl
mov
sub
iret
imul
mov
cwtl
xchg
mov
test
stos
movsb
inc
sbb
or
in
test
es
enter
cli
sti
pop
push
adc
fildl
xor
add
mov
test
add
dec
sub
clc
mov
sub
cmc
adc
push
sub
ljmp
lds
pop
cmp
or
bound
or
in
jae
sub
sbb
sbb
xor
cld
pop
xchg
sub
adc
or
pop
gs
jae
adc
add
leave
idivb
add
loope
xchg
inc
mov
push
add
pop
fcompl
or
ss
mov
cmp
jbe
mov
cltd
mov
mov
cmpsb
dec
stos
out
icebp
fsubrs
test
js
mov
inc
xor
js
pusha
stos
inc
gs
xor
cmp
push
xor
inc
push
dec
pop
push
enter
mov
pop
adcl
xor
mov
iret
push
sub
fcompl
fsubrl
outsl
lret
stc
cld
cs
jbe
popf
popa
jb
mov
jp
test
clc
add
push
addl
push
loop
inc
mov
add
xchg
das
pop
mov
push
mov
jmp
out
sub
test
test
jo
inc
std
ret
add
cwtl
push
aas
inc
nop
leave
fldt
outsb
jl
pop
cmp
movsb
xchg
out
fbstp
inc
int
rolb
fisttps
push
or
cmpsb
and
daa
fcompl
out
jb,pn
mov
push
jmp
or
xchg
dec
cltd
test
aad
aam
fists
push
fldl
ret
js
dec
sti
mov
pop
sbb
fcmovbe
inc
inc
mov
jo
lcall
sub
sub
inc
mov
pop
or
lret
scas
jbe
pop
clc
push
sarl
dec
and
mul
dec
roll
scas
iret
fsubl
mov
dec
dec
mov
pop
shl
out
and
mov
pop
aaa
sarb
scas
push
ret
push
cmpsl
mov
lock
pop
repnz
jge
daa
cmpsb
rcrl
movsb
fildll
ss
xchg
adc
xlat
cld
cmp
xor
sbb
push
mov
test
jbe
or
push
jnp
int
js
adc
aad
out
mov
add
jbe
adc
fwait
scas
popf
xor
fnstenv
test
adc
sbbl
ficoms
insl
sahf
scas
insb
imul
addr16
aad
cmpl
rorl
pop
xorb
mov
sub
sub
mov
or
aas
je
jae
mov
jecxz
sub
push
pushf
mov
loope
add
push
push
push
outsb
mov
and
aas
ja
xor
mov
leave
add
mov
test
xchg
lock
sub
mov
pusha
lods
in
in
jge
addr16
mov
pop
jg
add
jae
mov
test
ror
adc
xchg
push
sbb
jecxz
stos
jl
fimuls
stc
popf
xor
xor
push
and
sub
movsb
les
stos
xchg
int
pop
and
shll
push
lret
mov
cmpsb
fnstenv
lahf
jo
test
pop
sbb
mov
xchg
repnz
push
fstl
mov
and
int3
xchg
inc
pop
or
cs
negl
jne
inc
fdivs
or
xor
sbb
jae
and
ret
fbstp
inc
inc
cld
movl
in
loop
sub
lods
add
pop
sbb
mov
push
int
xlat
ficoml
push
fsub
aad
mov
lret
dec
in
movsl
cmp
push
ret
in
and
xor
call
dec
std
mov
push
add
xor
dec
xchg
mov
push
scas
push
xchg
pop
add
fisubl
jnp
jb
jne
aas
sbb
lret
mov
in
mov
das
lret
adc
fidivl
sbb
xchg
roll
cwtl
lahf
push
inc
mov
inc
push
jo
ljmp
notl
add
adc
pop
rol
dec
fadd
pop
ror
jecxz
jle
jge
cmpsl
dec
and
mov
push
movsl
les
hlt
cmp
fcompl
push
shld
into
iret
jae
xor
sbb
loop
xor
xchg
mov
leave
int3
pushf
adc
mov
shrl
pop
popa
add
xchg
inc
pop
inc
in
icebp
push
add
xor
std
enter
jmp
dec
push
inc
inc
mov
and
mov
pop
mov
xchg
or
stos
xlat
sub
cmp
ret
push
das
xorl
sbb
rorl
in
dec
movsl
dec
in
sbb
fwait
jmp
test
js
cmp
aaa
xchg
mov
inc
fwait
mov
ret
mov
add
int
rorb
mov
xchg
call
pop
cmp
pop
sub
dec
insl
movsl
or
pop
add
fists
les
jae
in
mov
mov
in
xchg
push
push
shrb
js
imul
xor
push
or
inc
sbb
ret
in
dec
gs
sub
adc
xor
and
push
dec
jmp
dec
cmp
insl
xchg
fs
add
mov
and
sbb
into
je
clc
in
sahf
test
inc
adc
xor
inc
xor
aad
lea
push
sbb
into
in
adc
sub
jmp
packsswb
jg
dec
xlat
jp
add
mov
xchg
shrb
loope
test
loop
cmp
jne
jne
jg
adc
faddl
push
aam
xchg
mov
mov
jl
out
je
mov
inc
push
cltd
jmp
pop
pushl
cltd
sbb
loop
and
aaa
and
jecxz
mov
cmp
mov
add
ljmp
addr16
dec
imul
inc
pop
inc
in
aad
push
shrl
xchg
cmp
aaa
add
add
scas
aaa
pop
push
inc
sahf
cmp
jp
mov
ss
addr16
pop
cld
dec
or
repnz
push
ret
addl
xor
push
insl
mov
pop
repz
adc
aas
or
push
pop
push
push
xchg
adc
sub
mov
decb
adc
cmp
jb
test
push
insb
sbbl
mov
popa
out
jl
jecxz
pop
push
sahf
pop
and
fwait
sub
push
xchg
bound
rolb
fimuls
add
rcr
adc
je
pop
mov
testb
aam
aaa
xor
xor
pusha
loopne
loop
xor
jb
pop
mov
sti
mov
mov
jno
dec
mov
dec
xor
call
jle
sarl
add
sub
ret
adc
xor
gs
mov
shlb
and
xchg
stos
cmp
nop
xor
pop
out
and
jecxz
ja
lds
dec
xchg
push
stos
xchg
fnstenv
mov
push
add
or
push
std
iret
popw
cmp
lock
cmpsb
cmp
mov
mov
xor
xchg
and
movsb
xchg
xchg
ss
mov
mov
imul
xchg
gs
jg
mov
leave
shl
arpl
lret
add
push
data16
sbb
pushf
imulb
ds
scas
gs
mov
nop
jne
fidivrs
decl
outsb
pop
mov
push
or
fmul
or
stos
push
jmp
outsl
ja
sub
push
mov
push
push
std
test
inc
insl
insl
cmp
outsb
out
xor
push
addr16
outsl
shlb
int3
jae
stos
aaa
imul
xchg
cmp
divl
pop
or
pop
push
sub
lock
sahf
jb
popl
aam
ljmp
out
sub
adc
sub
mov
xchg
cmp
insb
iret
pop
and
inc
out
xlat
add
push
jle
lcall
mov
and
repnz
lret
add
lret
pop
aad
jmp
and
push
mov
aam
pop
cmp
in
ret
out
ds
sarb
pop
push
inc
xor
mul
lahf
push
inc
lds
mov
rcl
mov
out
mov
mov
loopne
cli
mov
mov
iret
inc
mov
sbbb
mov
lret
repz
shll
sub
jl
jbe
cmpsb
rorl
add
jp
out
jne
dec
fisttpll
fsubs
fstps
popa
movsb
loope
pop
fs
xchg
cmp
mov
out
sbbb
dec
jmp
loope
xchg
fidivs
xor
subb
fisttpl
hlt
sbb
test
push
adc
jns
out
sub
push
cli
mov
ds
push
cs
lcall
in
mov
jbe
rolb
add
adc
fnstsw
call
jns
insl
and
add
mov
xchg
inc
inc
cwtl
or
int3
push
mov
lcall
fnstsw
add
loopne
xor
cmp
mov
add
push
add
popf
pusha
fwait
iret
jbe
jo
orl
aas
pop
add
jne
xor
or
jge
stc
mov
test
mov
stos
or
mov
ret
mov
mov
pop
decb
andl
sbb
dec
pop
xor
sti
mov
sti
xor
or
mull
je
outsl
outsb
cs
je
add
add
inc
add
add
add
add
insl
add
outsl
data16
push
add
add
popa
je
outsb
add
ja
jb
cmp
add
add
add
add
add
add
outsb
