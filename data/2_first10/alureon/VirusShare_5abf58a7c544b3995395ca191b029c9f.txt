in
mov
mov
jns
inc
stos
lea
orb
add
in
cli
cltd
xchg
mov
mov
in
aad
mov
or
cmp
and
int3
inc
and
sub
lods
data16
lods
jecxz
push
mov
lret
cmpsb
fildll
sub
popf
mov
lret
mov
jmp
je
xchg
sub
push
dec
mov
dec
jne
jl
jnp
add
in
call
dec
pop
jbe
mov
push
dec
add
sub
jp
cwtl
xor
out
push
test
sbb
mov
jns
enter
sub
test
rorl
dec
xlat
mov
jnp
dec
movsb
vzeroall
cli
pop
enter
jae
mov
mov
out
push
mov
pop
pop
in
mov
fnstcw
out
pop
cltd
xrelease
push
and
out
aaa
adc
sahf
xor
stc
push
sub
inc
mov
dec
lea
test
insl
sub
jae
lret
insl
aad
adc
js
int3
ljmp
xchg
repnz
adc
int3
xchg
notl
cmp
data16
mov
or
pop
loope
fadd
outsl
add
and
insl
jmp
xchg
daa
push
das
inc
idivl
sbb
or
xchg
jle
jo
mov
lea
inc
pop
and
aaa
dec
insb
and
ret
pop
ret
mov
negb
repz
mov
aas
cmpl
sbb
cmpsl
loopne
and
stc
pusha
insl
addr16
mov
jle
sub
loopne,pt
xchg
repz
femms
or
lahf
mov
je
and
mov
pop
pop
scas
xchg
jae
cld
and
cld
stos
mov
iret
mov
mov
repz
inc
fisttps
out
and
in
icebp
sub
call
out
mov
push
inc
xchg
enter
jp
jno
pop
mov
pop
outsl
jp
test
add
sub
es
jo
stos
in
outsl
adc
jmp
in
xlat
jl
add
add
stos
shll
inc
pop
pop
repz
sub
dec
xlat
daa
pop
push
shr
mov
jae
mov
xchg
out
stc
ljmp
xchg
in
or
scas
and
lock
or
ffree
rcll
add
mov
mov
inc
add
sbb
fst
mov
mov
xor
sbbl
rclb
out
cmp
test
repz
pop
mov
iret
jmp
dec
mov
mov
xor
jp
mov
mov
nop
xor
in
push
into
fwait
out
std
pop
or
jl
sbbb
iret
mov
jge
push
cmp
mov
or
in
cmc
xor
shlb
out
div
and
sbb
loop
inc
ficoml
inc
jg
mov
inc
out
ret
mov
sti
dec
fcoml
stos
sahf
into
mov
mov
iret
dec
mov
adc
cmpsb
jno
into
dec
aaa
adc
mov
or
pop
dec
mov
cltd
aas
fmul
mov
dec
fs
leave
mov
loopne
mov
js
mov
push
xor
addr16
push
repnz
push
lcall
mov
xchg
pop
jg
xchg
cltd
adc
mov
xor
js
jge
dec
push
adc
cmpsl
out
adc
popa
inc
jbe
cmpsl
mov
mov
leave
and
cmp
dec
mov
jns
mov
xchg
push
push
inc
xchg
push
dec
addr16
adc
sti
jecxz
xor
push
orb
or
pop
out
std
data16
lahf
rolb
cli
mov
das
ds
sub
sbb
iret
push
and
call
xchg
cmp
call
push
and
mov
ret
jbe
mov
pop
pop
fdivrl
adc
jns
add
sub
sbb
int3
pop
test
ss
push
cld
pop
or
dec
adc
mov
mov
nop
inc
or
inc
cmp
pusha
addb
scas
nop
aam
jp
into
xlat
inc
add
orl
xchg
jnp
std
daa
fcoms
jne
insl
ss
pop
sbb
stc
leave
cmc
decl
xor
adc
xchg
scas
mov
out
mov
pusha
sbb
sti
inc
add
ds
cmp
nop
mov
frstor
push
lods
rcrl
or
mov
sub
sbb
jp
push
inc
mov
xchg
lahf
mov
inc
adc
mov
inc
dec
lahf
adc
add
int3
pop
mov
jecxz
pop
sub
in
bound
xchg
pop
bound
jl
jno
and
pop
sub
mov
js
es
adc
aaa
dec
pop
xor
pop
jge
fsubrl
jecxz
or
pop
stos
xor
sti
pop
fcoms
or
std
jae
int
cmp
add
stc
and
jmp
loopne
shrl
cmpsl
data16
inc
lahf
inc
test
mov
clc
xchg
jmp
enter
cmc
inc
rcr
pop
sub
jp
out
push
or
fbld
sahf
sti
sub
fists
sub
adcl
je
pop
mov
divb
mov
cmp
pop
cmpl
jbe
dec
push
cmp
inc
scas
out
imul
filds
mov
hlt
pop
adc
leave
and
mov
sar
arpl
cwtl
icebp
push
cli
or
rolb
repnz
stos
in
sbb
ljmp
jp
pop
pusha
bound
pop
sbbb
repnz
dec
or
jp
push
jecxz
sbb
cmp
jecxz
mov
orb
push
adc
sbb
xorl
push
fldl
repz
mov
into
into
add
in
cmpsb
mov
or
fdiv
and
inc
jge
cmp
xor
lret
cmpsl
jno
add
add
mov
iret
dec
enter
outsb
or
ret
and
cmc
inc
xor
pushf
loope
in
mov
fistps
jbe
pop
mov
das
or
mov
imul
addr16
mov
bound
pop
pusha
into
mov
decl
loope
push
add
mov
xchg
jg
push
sbb
in
stos
xorb
xchg
adc
nop
outsb
mov
rcl
mov
mov
inc
insl
mov
dec
popf
out
cmp
sahf
mov
mov
push
cmp
call
clc
inc
mov
lock
inc
lea
aam
cwtl
pop
lods
mov
int
sub
outsb
cmpsb
and
cltd
dec
insb
pusha
std
jg
shlb
cltd
ret
xchg
mov
jecxz
jp
sub
or
push
je
jmp
inc
xor
mov
mov
in
mov
add
test
fiadds
inc
mov
add
pop
fldt
dec
shlb
adc
popf
leave
xchg
int
icebp
shll
sbb
test
lret
mov
push
pop
xchg
or
fcmovnb
cmpsl
or
xor
hlt
sub
jmp
mov
pusha
mov
cmp
icebp
xor
lods
mov
or
jne
mov
nop
lods
insl
jno
fistpll
jno
push
mov
fstps
mov
sbb
movsl
ret
mov
and
xchg
icebp
imull
outsl
mov
pushf
pop
mov
jo
lret
push
mov
inc
dec
aaa
sub
outsl
mov
out
add
test
lcall
enter
sti
mov
pusha
or
repz
cmpsb
inc
jnp
or
stos
sbb
cmp
bound
sub
mov
push
int
sbb
mov
iret
fnstenv
fmull
aas
imul
push
out
mov
push
ljmp
mov
repnz
shll
arpl
mov
xor
xchg
push
fucomi
imul
jmp
roll
push
lods
sbb
pusha
mov
sbb
pop
das
loop
fucomip
add
sbb
xor
bsr
ds
adc
and
sahf
jecxz
mov
movsl
xor
xor
jae
sub
pop
jno
or
add
jnp
mov
fdivrp
mov
add
int3
imul
push
xchg
push
imul
xor
mov
mov
push
scas
cmp
bound
out
sub
ljmp
std
roll
push
mov
jl
pop
push
das
imul
cmc
std
sbb
or
adc
in
ret
mov
mov
xor
adc
ret
shll
insb
mov
roll
jns
xchg
pop
push
enter
cmp
mov
xor
cmp
mov
arpl
loope
add
jne
mov
adc
cli
push
and
mov
movzbl
inc
call
lea
lea
call
dec
push
inc
call
lea
mov
lea
lea
inc
mov
call
mov
add
sub
dec
dec
inc
add
inc
mov
and
add
inc
imul
call
or
add
add
imul
inc
call
mov
inc
call
dec
dec
xor
dec
mov
xor
mov
lea
mov
pop
or
inc
inc
add
or
pop
lea
mov
pop
dec
dec
lea
dec
pop
dec
add
or
add
inc
lea
mov
dec
pop
dec
dec
pop
lea
inc
mov
lea
dec
call
dec
lea
dec
or
ret
lea
add
push
sub
and
push
inc
lea
push
inc
dec
push
inc
mov
push
mov
inc
mov
mov
dec
push
add
ret
push
lea
add
movzbl
dec
sub
lea
push
add
sub
dec
call
pop
ret
jmp
movswl
mov
sub
xor
mov
add
movswl
movzbl
dec
xor
add
imul
imul
and
mov
imul
movzbl
lea
sub
xchg
mov
mov
mov
mov
xor
mov
sub
dec
and
inc
xor
inc
dec
jne
dec
mov
movsbl
sub
pop
movswl
inc
pop
dec
inc
pop
inc
mov
dec
inc
inc
add
mov
movsbl
add
inc
imul
add
ret
push
inc
mov
mov
mov
lea
lea
mov
movzwl
push
push
push
push
mov
inc
dec
push
mov
lea
inc
add
or
inc
inc
mov
add
mov
dec
push
movzbl
mov
xor
xor
imul
push
sub
mov
push
lea
add
pushl
add
call
dec
add
dec
lea
or
movzbl
inc
lea
inc
pop
ret
mov
add
sub
dec
inc
inc
inc
mov
imul
movswl
lea
inc
inc
cmp
jb
imul
xor
dec
or
mov
movzbl
dec
mov
inc
movzwl
inc
imul
mov
dec
sub
inc
dec
mov
inc
sub
cmp
jb
mov
sub
dec
xor
mov
xor
inc
lea
pop
imul
mov
test
jbe
dec
lea
and
inc
add
inc
dec
inc
xor
sub
mov
lea
sub
movswl
dec
inc
inc
add
add
dec
inc
add
mov
and
add
add
mov
imul
sub
movzbl
dec
inc
add
lea
mov
and
lea
add
mov
mov
mov
mov
mov
mov
add
add
mov
inc
or
xor
add
dec
add
dec
jne
inc
mov
dec
or
inc
dec
inc
add
inc
mov
add
mov
sub
inc
mov
or
dec
dec
mov
add
mov
mov
mov
test
jbe
add
inc
mov
or
imul
and
sub
sub
xor
dec
and
sub
mov
mov
imul
inc
inc
mov
mov
mov
inc
mov
and
add
add
mov
dec
add
movzbl
inc
lea
add
add
add
and
inc
movzwl
mov
dec
lea
movzbl
mov
jmp
push
and
dec
mov
mov
lea
mov
add
mov
movzwl
mov
dec
mov
mov
lea
dec
dec
mov
movzwl
dec
inc
dec
imul
xor
movswl
lea
inc
mov
imul
mov
lea
inc
mov
add
imul
add
movswl
mov
xor
xor
mov
mov
imul
dec
movzwl
sub
inc
imul
movzbl
mov
sub
sub
movzwl
mov
mov
add
mov
and
lea
mov
add
inc
sub
dec
inc
mov
sub
dec
imul
movzwl
mov
xor
inc
inc
movswl
dec
lea
mov
cmp
je
call
call
add
ret
or
mov
pop
add
ret
push
dec
inc
add
xor
inc
push
sub
inc
push
dec
push
inc
push
add
inc
push
dec
add
movswl
inc
mov
call
mov
push
add
push
lea
pop
add
mov
mov
lea
movzbl
mov
mov
mov
inc
inc
lea
dec
je
inc
mov
or
dec
add
inc
mov
dec
movzwl
mov
sub
lea
mov
mov
jmp
movsbl
inc
inc
repnz
xor
sub
add
mov
jmp
add
lea
mov
add
mov
mov
lea
mov
movswl
sub
dec
and
add
add
mov
mov
pop
pop
ret
push
sub
dec
lea
movzwl
lea
sub
dec
inc
mov
mov
movzwl
lea
lea
dec
add
add
mov
mov
imul
mov
sub
and
inc
lea
add
sub
pop
ret
sub
mov
mov
inc
mov
mov
inc
xor
mov
mov
add
mov
and
add
xor
inc
dec
mov
mov
lea
inc
dec
dec
sub
add
dec
mov
cmp
jb
dec
push
sub
mov
push
mov
mov
push
movswl
inc
mov
mov
dec
xor
add
dec
xor
mov
dec
xor
sub
dec
push
xor
add
xor
movzwl
add
mov
sub
inc
mov
or
inc
movzbl
lea
inc
inc
sub
add
dec
imul
add
dec
movzbl
and
sub
lea
jmp
shl
lahf
mov
pop
cmp
mov
jmp
push
xchg
dec
add
out
adc
stos
fcoml
mov
add
jg
rcr
push
insl
aas
popw
dec
aad
not
cwtl
stc
das
jecxz
in
pop
mov
shlb
les
pop
mov
in
in
mov
aaa
fucomip
cmp
cmp
xor
xchg
lds
test
mov
aaa
iret
push
mov
mov
jmp
les
mov
add
jno
divb
jo
pusha
mov
push
sub
pop
daa
or
mov
xchg
bound
inc
and
xor
mov
mov
adc
into
jge
mov
mov
cli
ds
lahf
sbb
scas
or
popa
cmpsl
repnz
jecxz
lods
jno
outsl
icebp
into
rol
jle
mov
mov
enter
adc
js
insb
adc
js
mov
in
ds
cwtl
sub
inc
sbb
pop
cmp
push
ffree
in
push
lds
mov
test
ret
inc
lods
jl
fcmovnbe
xchg
inc
dec
pushf
repz
dec
pop
shl
movsb
or
imul
or
and
aaa
cmp
sti
lret
mov
push
iret
and
ret
dec
stos
jae
aam
mov
imul
xlat
jmp
aam
push
add
lcall
lret
push
jnp
pusha
bound
push
push
jmp
and
inc
loopne
cmpsb
add
lret
lahf
test
lds
mov
dec
int3
sarl
jne
outsl
xchg
jnp
into
sbb
cltd
jae
dec
push
int
out
or
inc
xchg
nop
out
lds
xor
insl
int3
add
popa
mov
sbb
shrl
movsl
sbb
push
lret
test
or
jp
dec
add
je
add
lock
sbb
enter
roll
mov
xchg
insl
pop
gs
arpl
popa
push
jmp
mov
xchg
jnp
ja
fcmovb
bound
lahf
andl
inc
jmp
mov
mov
movl
pop
loopne
clc
dec
aas
fwait
mov
sub
data16
mov
repnz
lds
and
dec
mov
orl
dec
push
icebp
pop
push
lret
dec
mov
outsl
mov
addr16
sbb
inc
mov
and
xlat
bound
repnz
les
sbb
jns
subl
sbb
test
fildll
in
fimull
rol
rolb
mov
outsl
mov
lock
push
cltd
xchg
dec
and
shlb
pop
or
push
cmp
call
rcl
jnp
jmp
xor
push
jne
push
and
add
dec
cli
insb
lds
sub
mull
inc
out
or
sti
push
sub
test
shll
cs
scas
sub
mov
pop
es
jmp
mov
sbb
stc
and
mov
push
sub
or
imul
repnz
inc
xorb
mov
or
mov
sub
and
inc
fs
lods
and
mov
je
jmp
xchg
mov
cs
push
lds
pop
mov
cld
popf
jp
push
fcomp
roll
push
clc
xor
xor
xor
je
jb
int
adc
jg
loopne
cs
pop
sbb
sti
push
pusha
jns
ljmp
mov
test
mov
adc
popa
pop
imul
push
in
inc
mov
jnp
cmp
push
adc
hlt
jp
insl
sbb
sub
push
push
lds
xlat
sbb
cmpsl
sbb
mov
jp
cld
in
fldt
adc
xor
in
jno
lods
loop
imul
out
xor
out
xchg
and
jl
cmp
lahf
dec
movsb
pop
xchg
loope
push
scas
xor
xor
pop
aaa
scas
cmp
sbb
data16
xor
xchg
lods
cwtl
icebp
add
mov
mov
lret
and
aam
leave
into
xor
out
in
mov
fidivrs
xchg
sub
mov
popa
fwait
inc
inc
cmp
lret
mov
push
push
push
pop
mov
lods
ljmp
das
outsl
adc
stos
xor
fistpl
scas
fdivl
push
int3
out
loop
test
lea
mov
push
fcmovb
mov
and
daa
js
call
outsb
and
cmpsb
jle
mov
add
jmp
pop
push
aam
and
stc
mov
sub
ljmp
cmp
iret
sbb
stos
mov
out
mov
xchg
mov
mov
jp
sub
and
inc
std
stos
rolb
movsb
and
cltd
stc
mov
aad
out
int
fs
jp
loop
rclb
sti
cmp
and
in
jno
ja
mov
loopne
lods
push
testb
mov
fildl
iret
dec
mov
aas
andb
stos
inc
mov
xchg
mov
xlat
js
mov
pop
push
pop
jl
push
dec
andl
inc
jnp
lret
cltd
pop
cwtl
push
cli
notl
add
add
nop
sbb
sub
push
jge
inc
lock
jo
mov
shl
cs
mov
mov
pusha
lcall
pusha
mov
sub
mov
and
push
andl
xor
xchg
jle
shll
stc
mov
test
lcall
and
xchg
jecxz
cvtdq2ps
add
xchg
and
adc
pop
push
push
pop
mov
push
sbb
push
movsl
scas
nop
adc
mov
out
aad
movsl
lret
out
pop
pop
cmp
adc
loop
mov
movsbl
popf
je
xor
and
xorl
das
stos
fisttps
in
in
sbb
add
fistpll
dec
xchg
inc
insl
mov
test
push
fs
pushf
in
addr16
repnz
mov
in
das
fmulp
sub
mov
pop
das
jle
or
fadd
cmp
mov
inc
shlb
jge
dec
and
mov
mov
sahf
mov
mov
mov
std
inc
fisubrs
outsl
mov
lret
cld
movsb
repz
jns
out
jns
and
sbb
enter
popf
icebp
pop
xchg
in
in
rcll
xchg
adc
inc
test
mov
gs
dec
xor
cld
shrl
xchg
negl
daa
inc
int
sub
or
out
sub
mov
jecxz
cmova
cltd
add
lahf
jmp
jno
cmpsl
push
sti
popf
repnz
mov
push
add
pop
mov
sbb
cmc
pop
or
rolb
punpckldq
shlb
ja
pop
mov
add
insl
faddl
ljmp
icebp
movsb
mov
popa
les
pop
divl
cmp
dec
push
add
mov
pop
pusha
sub
jb
lahf
dec
sub
mov
ret
ret
sbb
cmp
add
adc
inc
dec
push
fstpl
ror
roll
pop
mull
les
push
daa
or
out
enter
dec
es
arpl
add
fistps
iret
push
or
mov
lea
hlt
les
push
stos
jb
mov
enter
rolb
add
dec
xchg
rcr
out
xor
fisubrs
cmp
push
mov
xor
pop
lret
stc
add
bound
hlt
lods
xchg
mov
fs
add
ss
cmp
mov
dec
cmp
dec
mov
aaa
mov
fnstenv
and
cmpb
sbbl
adc
lahf
pushl
xchg
push
sub
inc
int3
cmpb
mov
pop
inc
arpl
sub
mov
mov
mov
sbb
cwtl
popa
adc
mov
mov
fbstp
std
gs
test
cmp
xor
xor
dec
pushl
nop
imul
add
mov
adc
pop
enter
sub
pop
out
xchg
inc
roll
or
cmp
test
sub
mov
cld
sti
shr
dec
pop
xchg
xchg
dec
cmc
out
repz
in
adc
mov
scas
out
and
or
lahf
test
jmp
push
out
std
mov
test
ljmp
dec
loope
or
clc
mov
cmp
out
jecxz
sarl
not
jle
jp
mov
add
lods
pop
daa
xor
sbb
xlat
rcll
addr16
testl
add
pop
add
mov
jl
popa
cltd
mov
dec
out
pop
xor
fildll
lret
das
ljmp
and
mov
outsl
ja
pop
sbb
out
mov
sub
icebp
bnd
sarb
mov
insb
in
mov
sarb
push
push
jl
or
mov
jbe
pop
stc
jl
jp
mov
mov
arpl
jmp
sti
push
add
add
jae
bts
mov
test
jbe
jo
mov
xchg
fldcw
add
fdivl
and
jbe
in
lock
fisttpll
xchg
adc
in
lret
int
pushf
and
cmp
aas
nop
jb
cs
icebp
in
insb
cmp
cwtl
icebp
mov
sub
mov
clc
sbb
mov
push
inc
js
pop
add
ljmp
lea
mov
data16
hlt
cmp
push
ds
ljmp
dec
adc
xor
sbb
cmp
inc
jl
inc
push
or
bnd
mov
or
loop
pop
sahf
sub
stos
pop
enter
repnz
push
pop
jns
pusha
push
out
daa
enter
loopne
jnp
dec
nop
int3
std
loop
aaa
jg
cmp
iret
rorb
and
cmp
pop
inc
add
lea
mov
sub
sbb
jp
repz
dec
xor
test
and
iret
pop
icebp
mov
pop
dec
decl
outsb
fistpll
in
sti
sub
scas
mov
fdivs
sub
and
aas
xchg
or
test
into
test
rol
push
hlt
push
mov
cmpsb
inc
repnz
mov
mov
cmp
inc
cmp
jno
jp
push
xlat
lods
push
and
inc
pushf
roll
pop
push
addr16
cli
xchg
jae
insb
mov
push
sbb
mov
fistps
and
aam
movsl
enter
in
cmp
pop
movsb
add
jmp
add
jne
or
inc
scas
std
or
mov
sub
jp
adc
movsb
popf
push
sti
sub
dec
jle
inc
in
in
jb
movsl
outsb
mov
mov
inc
mov
js
jle
push
xchg
sbb
or
jmp
rcr
pop
inc
int3
shll
or
jp
arpl
cs
pop
add
enter
stc
pop
iret
add
lahf
xchg
mov
push
dec
and
push
sahf
push
and
inc
in
out
pop
out
lret
jmp
xchg
push
push
imul
sbb
les
int3
push
in
cmp
pop
and
sub
cltd
and
add
xor
in
adc
xor
cmpsl
addr16
adc
mov
dec
inc
inc
test
push
push
fwait
loope
jo
push
cmp
mov
mov
mov
outsl
or
mov
sarb
sbb
fwait
ja
movsl
inc
mov
pop
xor
cmpsb
not
fidivrs
clc
mov
loop
push
outsb
js
sbb
xor
xchg
pop
add
mov
dec
xchg
lds
sub
or
enter
and
sub
jns
add
pop
into
fiaddl
add
adc
stos
jg
cld
ret
popf
mov
xor
pop
cwtl
mov
add
fiaddl
xchg
mov
iret
ss
in
mov
dec
aaa
movsb
fildl
lahf
lods
xchg
cld
jo
pop
push
mov
dec
cld
lods
rorl
clc
in
jmp
sbb
test
xchg
add
cmpsw
jnp
inc
push
mov
dec
repnz
test
mov
mov
neg
cmpsl
outsl
add
xor
ljmp
fcoml
fpatan
jns
sbb
xchg
data16
into
das
inc
movl
addl
push
sbb
xchg
bound
jnp
xor
sahf
sti
subl
pop
pushf
pop
in
inc
lret
insl
cmp
fs
pop
scas
push
dec
xchg
add
lods
jmp
sbb
or
fidivl
sub
inc
es
mov
mulb
in
sub
jp
add
cmc
pop
lds
push
dec
cld
or
mov
js
or
fiadds
subb
cltd
push
std
iret
mov
scas
cmpsb
ja
popf
gs
adc
hlt
into
mov
loop
pushf
sub
cmp
mov
js
ficoms
adc
xor
jb
or
out
js
fnstsw
pop
arpl
lret
fsubrs
lods
add
insb
lret
icebp
push
push
sbb
outsl
nop
sbb
inc
fdivrp
cmp
lret
add
xchg
inc
cmp
outsl
loope
dec
mov
sub
inc
inc
in
outsl
mov
cmp
pop
lock
xchg
mull
mov
lret
adc
pop
and
daa
xchg
popa
insb
push
icebp
inc
push
cwtl
and
lods
sub
inc
scas
dec
in
lret
lret
cltd
or
ds
jne
rcll
push
jg
outsl
sub
jecxz
mov
pop
scas
inc
mov
movsl
jecxz
gs
lds
fstps
cmp
test
stos
cmp
pop
mov
aas
xchg
adc
in
les
jbe
xor
jge
ljmp
mov
add
imul
mov
cltd
gs
call
push
mov
push
cmp
adc
mov
pop
popf
mov
adc
popa
pop
int
push
mov
push
data16
sahf
cmp
push
pushf
lods
mov
test
cmp
clc
cltd
jno
outsb
mov
jmp
or
sbb
pop
imul
and
sbb
jl
xchg
dec
xor
dec
xor
add
fwait
les
jo
aas
push
xchg
in
pop
ds
lds
xor
add
and
mov
daa
sub
out
cmp
add
pop
cmp
mov
mov
cwtl
xor
mov
inc
fdivrp
imul
outsl
jge
push
leave
popf
jp
imul
xor
stc
in
popf
cs
or
fbstp
cmpsb
lret
add
sub
push
push
mov
dec
inc
fsts
es
loope
mov
repz
pop
data16
push
js
lock
iret
std
repz
in
xchg
mov
lods
sub
or
mov
arpl
insb
pop
jge
ljmp
and
adc
pop
xchg
xchg
call
out
mov
push
sbb
lcall
sub
jle
sti
jle
add
jp
lcall
les
dec
pusha
push
cmp
adc
or
arpl
mov
lret
rcrl
addb
pop
add
ss
mov
jmp
leave
ja
inc
ljmp
imul
enter
mov
cmp
cli
iret
clc
cmp
xlat
inc
loope
sub
pop
inc
bound
mov
icebp
mov
xor
popf
loope
mov
stos
sub
lahf
push
add
xlat
add
lods
inc
shlb
pop
xor
popf
and
cmpsl
dec
jb
je,pn
add
push
mov
pop
or
lds
sub
jl
mov
dec
test
enter
sub
pop
jmp
pop
cli
push
add
lcall
loope
push
jne
sub
push
fs
lods
or
fs
outsb
clc
mov
adcl
mov
or
push
lods
pop
mov
lret
adc
cli
iret
mov
jo
stc
push
out
testl
pop
cmp
pop
jge
movsl
add
push
into
sbb
ja
mov
dec
jg
out
adc
inc
push
inc
stos
add
xor
aad
adc
mov
mov
es
push
and
inc
mov
xor
insl
dec
and
pop
jg
xor
cli
popa
lret
lahf
push
pop
cs
dec
push
mov
shlb
add
jbe
int3
int
dec
mov
or
dec
dec
pushf
xlat
int
popa
fldenv
mov
push
loope
xor
inc
repz
fsts
hlt
repz
jno
outsb
repz
addr16
fldcw
fistpll
cs
daa
std
and
adc
xor
mov
scas
and
aaa
or
fcomps
iret
fistl
fisubl
fwait
aaa
mov
sub
pop
and
pop
arpl
daa
jmp
sbb
mov
sbb
sub
lock
mov
rcrl
popf
push
add
jl
loopne
jle
enter
faddp
fbld
mov
sub
ret
inc
repz
dec
sub
lahf
imul
mov
xchg
sub
pop
rolb
shlb
outsb
pushf
cmp
mov
xchg
mov
xor
xlat
push
rorb
sub
pop
jmp
mov
sub
push
or
fwait
dec
inc
popf
orb
or
mov
cmp
add
pop
cmp
addr16
mov
dec
movsb
je
push
std
daa
test
lods
lahf
add
jg
inc
adc
out
lods
repz
cmp
ja
cmp
ret
dec
inc
adc
decl
xor
jp
int3
adc
jbe,pt
pop
mov
lahf
pop
cmp
loopne
rcrb
iret
stos
inc
sub
aad
xor
popf
leave
push
lret
imull
insb
lods
leave
mov
data16
cmc
int3
shl
xchg
xor
dec
cmpb
adc
ret
cvtdq2ps
push
push
daa
pushf
stos
pop
das
dec
add
popa
xchg
aas
fcompl
xlat
scas
cmp
push
sarb
insl
lods
nop
movl
ds
enter
xchg
mov
nop
scas
faddl
int
out
rcrb
aam
mov
lahf
pushf
jnp
jle
in
adc
push
mov
das
or
push
or
dec
popf
sub
inc
ss
mov
flds
pop
or
jg
push
jg
out
ss
mov
sub
mov
mov
sbb
paddq
popf
cmp
mov
pop
test
jo
scas
sbbl
jecxz
jo
ret
hlt
ret
xchg
mov
sti
stc
andl
test
movsl
pop
xchg
jg
in
push
stos
mov
nop
shrb
in
stos
jae
sub
cmp
lret
jne
lahf
or
mov
mov
mov
cmovne
negl
insl
rclb
cmp
or
movsb
inc
loope
xchg
pop
imul
mov
fisttpll
sbb
jb
push
xor
xchg
sbb
andb
into
scas
or
out
lds
add
sbb
sarb
lock
js
sar
test
insb
or
sbb
xchg
lret
fstpt
ljmp
pop
inc
rorl
arpl
or
aas
and
in
negb
pop
mov
and
xlat
jbe
dec
popa
and
sbb
mov
jb
cwtl
mov
test
and
pop
in
dec
loopne
mov
inc
sbb
movsb
mov
jne
jg
in
call
cmc
dec
and
scas
gs
lods
aas
jbe
sub
loop
sub
stos
jle
add
jo
cmpl
rorl
xchg
mov
mov
add
sbb
hlt
shlb
push
and
lea
sub
cmp
dec
test
fidivrl
and
shll
test
jae
mov
pop
sbb
jle
push
mov
xchg
or
pushf
aam
mov
mov
mov
mov
sub
es
lods
inc
imul
pop
out
xlat
pushf
shlb
lahf
out
pop
sbb
mov
ja
out
fdivl
js
push
mov
xorl
sbb
sbb
sbb
shll
push
push
ret
test
pop
sbbl
xor
mov
or
faddl
dec
lods
imull
pop
fcomp
mov
push
movsb
cmp
xchg
sub
iret
mov
push
lds
aas
out
jns
jns
fbstp
mov
xchg
mov
movsl
cli
and
lock
dec
xchg
push
imul
cmp
sahf
jae
pop
outsb
test
cmp
inc
push
leave
jp
insl
pop
pushf
jbe
mov
pop
iret
mov
sbb
out
cmc
aad
jge
fnstcw
xchg
push
sbb
addr16
clc
leave
clc
xor
jecxz
das
negb
fimull
fs
popa
out
pop
or
gs
rorl
addr16
sahf
push
cmpb
std
dec
sbb
mov
cmpsl
clc
lods
mov
insb
adcb
in
clc
cmp
sub
and
aaa
dec
xchg
lahf
sub
inc
jmp
ret
mov
aaa
jbe
jne
je
or
out
add
pop
mov
cltd
add
int3
push
fwait
loopne
in
jno
xchg
mov
jns
aas
mov
out
mov
push
ret
popf
popf
jo
xor
xchg
xor
lcall
push
fidivl
scas
scas
and
mulb
sbb
adc
xlat
xchg
fiaddl
mov
adc
pop
inc
xchg
cmp
test
aad
sub
sbb
pop
icebp
loopne
test
push
cmp
inc
cmc
inc
popf
xor
outsl
hlt
jns
mov
dec
rorl
dec
pop
rcll
adc
lods
das
sti
mov
mov
pushl
sub
inc
adc
lock
mov
pop
lds
mov
aam
sahf
out
stos
sbbb
sbb
cli
mov
xor
ret
aad
mov
pop
xor
icebp
sbb
pop
daa
add
mov
enter
jge
fcomps
jmp
mov
push
xchg
sub
lret
xor
call
out
and
ficompl
add
sbb
mulb
pop
stc
adc
mov
cs
pop
cmpl
and
pop
cmp
arpl
movsb
lods
mov
loop
mov
mov
out
fadds
mov
shrl
lea
and
sub
insb
testb
inc
outsl
dec
js
inc
pop
aaa
jg
jns
mov
xchg
dec
loopne
into
push
stos
fs
rolb
or
jle
daa
sub
mov
mov
cmp
jl
inc
inc
lods
lock
icebp
aam
and
insb
imul
test
scas
movb
lock
call
inc
and
push
or
and
or
int
imul
sbb
pop
inc
test
cmp
lock
jecxz
decl
pushf
dec
mov
and
and
sbb
pop
sbb
add
or
pop
popa
in
addb
int
mov
cmp
in
sbb
cli
rcl
lods
jmp
orb
call
pop
jle
call
add
arpl
movb
fwait
imul
std
fwait
stos
cwtl
out
xchg
movsl
adc
es
mov
mov
stc
xor
adc
cmp
mov
mov
sub
sub
lods
pusha
jle
pop
dec
movsb
das
loope
cmp
ss
aas
andb
inc
shrd
mov
mov
adc
ljmp
je
jns
lahf
in
sub
fwait
call
cli
loope
and
dec
ljmp
cmp
ror
in
into
dec
and
xorb
movsl
in
pop
xlat
adc
jg
ljmp
outsb
mov
out
les
push
bound
bound
mov
fimuls
sbb
dec
cmp
pop
mov
xchg
movl
cmp
call
pusha
xchg
test
cmp
add
loop
jb
scas
stos
mov
pushf
xchg
aas
and
xchg
xlat
inc
js
mov
std
xor
repz
cli
xchg
inc
mov
push
and
mov
xchg
dec
es
and
xor
pop
mov
js
pop
pop
cmp
popf
sub
cmpsl
jp,pt
dec
lock
pop
cmpsl
hlt
dec
arpl
mov
and
jg
dec
fidivl
imulb
stos
push
ja
cli
or
stos
or
push
loopne
pop
lods
fwait
pop
lods
fsubrs
and
repz
hlt
add
xor
adc
sub
pushl
adc
sbb
lret
fisubs
push
pop
into
pop
push
xchg
sbb
stos
std
test
xor
xchg
shr
push
int
push
std
lock
dec
sbb
add
out
xchg
adc
pop
ss
fcmovb
inc
xchg
jnp
dec
test
test
cmp
scas
je
mov
aas
dec
addr16
mov
pop
push
scas
cmp
les
notl
dec
xchg
sub
js
and
push
add
or
push
cmp
and
and
adcl
pushf
ret
fdivrl
aaa
cli
cs
bound
scas
xor
sbb
movl
imul
xlat
xor
lods
ret
subb
clc
jmp
pop
sahf
lret
stos
pop
int
in
call
imul
scas
inc
and
data16
cmp
ret
mov
scas
mov
jge
sbb
xchg
xor
hlt
jne
dec
xchg
mov
push
xchg
outsb
xor
mov
jne
push
cli
jmp
xor
sbb
jle
out
cmp
das
psrlq
insl
sub
adc
loop
dec
movsl
sub
lea
in
fldl
xchg
nop
push
jne
jecxz
call
mov
or
pop
push
out
into
push
xchg
out
mov
dec
push
shlb
push
leave
ret
jnp
push
shl
and
fldcw
jg
movsl
std
push
rcrl
push
shll
in
loope
pop
ss
or
aam
test
int
sub
mov
fwait
dec
lea
repnz
and
and
stc
jle
daa
or
adc
push
xchg
sub
pop
pop
stos
push
or
add
mov
mov
xor
das
cmpsb
push
mov
push
jo
scas
imul
test
or
jle
out
xor
xchg
call
stos
call
mov
cmp
sbb
xchg
push
scas
xlat
jbe
dec
movsl
sti
jg
xor
and
cmpsb
mov
negl
movsl
mov
shlb
sti
jge
movsb
xchg
scas
jns
lcall
jnp
pop
push
into
lods
adc
dec
xchg
mov
adc
jns
int
arpl
jle
and
inc
inc
cmp
push
icebp
data16
test
add
pop
inc
add
fwait
call
xchg
mov
lods
cmp
pop
pop
pop
mov
push
xor
scas
movsb
jle
cmp
das
out
jbe
dec
mov
addr16
cmp
mov
insb
sub
cli
out
test
push
leave
add
fcmovb
and
mov
push
or
xor
addr16
mov
decb
add
jg
cmp
sub
dec
lods
sub
lock
js
subl
mov
stc
jl
arpl
sahf
mov
arpl
pop
popa
enter
movsl
pop
notb
repz
sbb
fcomps
jge
jo
add
dec
mov
lods
ret
dec
dec
adc
and
js
lahf
call
adc
or
aam
xchg
cwtl
aas
clc
mov
mov
movsb
sbb
mulb
data16
call
call
int
pop
mov
mov
testl
cmp
popf
aam
sarl
adc
es
xor
shlb
data16
les
and
jp
popf
test
xor
out
repnz
stos
sub
imul
pop
push
cmpb
xchg
pop
cmp
jg
lahf
push
dec
shlb
fldcw
fnstsw
push
in
add
out
mov
es
leave
push
orb
das
push
mov
add
pop
xchg
xchg
outsl
sbb
jle
sahf
sub
cld
icebp
idivb
inc
mov
ret
fildll
divb
xchg
inc
pop
jge
inc
ret
inc
movsb
and
xchg
jbe
cmpsb
pop
jle
jb
xchg
push
movsb
xchg
pop
pop
scas
add
stc
sbb
xlat
lret
lds
sub
scas
pop
enter
adc
add
int3
and
and
enter
pop
inc
stc
xchg
stos
or
rcr
push
or
or
pop
cs
cmp
js
ds
ss
xor
pop
int
jmp
test
add
popa
js
add
mov
test
fstpl
adcb
stc
fsubrl
push
ja
in
pop
inc
fmulp
loop
mov
mov
xorl
out
aas
xchg
and
testl
je
pop
pop
fcoms
add
or
fldcw
cmp
fistpll
and
clc
cld
and
xchg
lret
fstpt
push
jo
xchg
sub
pop
sahf
sbb
push
sub
imul
mov
fcoml
mov
cmp
adc
adc
or
xor
push
xor
pushf
push
pop
jae
push
loope
and
xchg
out
jne
or
pop
xcrypt-ofb
cmpsl
test
push
leave
jle
bound
sbb
mov
aad
shlb
push
ja
test
cmp
xchg
xor
push
lods
mov
jbe
je
pop
sti
je
lods
popa
rcrl
lret
jae
dec
push
out
adc
aad
cld
pushf
std
cmp
iret
je
mov
push
push
fcmove
neg
sub
add
clc
fstps
dec
or
cmp
add
ja
aaa
or
jb
mov
lret
stc
ret
mov
push
jle
push
rcr
add
push
leave
mov
and
mov
aas
stos
xor
jmp
hlt
mov
xchg
lods
dec
stos
sbb
out
fadds
daa
cmp
loop
cmp
scas
xor
sub
js
pop
ret
adc
loopne
and
call
mov
mov
or
push
push
push
push
cltd
sarl
addr16
bound
jmp
mov
or
sub
push
lret
aas
sub
or
pop
insb
out
rclb
cmp
or
cli
lahf
ret
cmpsb
mov
xchg
jne
jno
xor
ja
filds
push
dec
add
jns
loop
sub
lcall
mov
mov
push
rolb
xchg
sbb
jae
popl
rorb
xor
cmp
lods
xor
fildll
pop
jnp
adc
iret
das
push
fidivrs
out
in
sbb
adc
insb
test
push
aas
mov
fs
push
out
inc
insb
in
pop
pop
out
fildll
xor
fnstcw
sbb
inc
outsb
pop
dec
aaa
pop
rol
xchg
lock
ret
cmp
mov
cltd
fwait
lahf
jns
icebp
sbb
xchg
and
adc
fldenv
fildll
fcomip
xor
jg
mov
push
add
rolb
ja
push
push
inc
cltd
sbb
je
mov
push
mov
mov
cmp
sbbl
lret
cmp
push
inc
sbb
bound
stos
xor
jp
xchg
mov
mov
or
inc
fmuls
daa
mov
adc
xor
fsub
add
ret
pop
pop
jle
cmp
push
xchg
fsubs
sbb
sbb
es
mov
lods
in
cwtl
xchg
gs
cmp
add
rolb
lods
push
pop
sbb
and
add
mov
outsb
hlt
icebp
pop
aad
rclb
mov
jg
sub
loope
jns
aaa
das
and
test
xor
add
add
sahf
fimull
outsb
push
cmp
aas
in
mov
notl
js
mov
aam
into
pop
adc
nop
roll
into
pop
mov
push
jl
adc
cwtl
dec
aam
and
xchg
jmp
pop
or
cmp
adc
test
jae
jae
add
out
xor
mov
fs
add
sbb
jmp
in
out
repz
daa
scas
cmc
fnstsw
test
xor
sbb
fcoms
add
xchg
repnz
es
mov
xchg
out
test
jne
insl
arpl
cli
mov
inc
jbe
cld
repz
movsl
cmpsl
mov
pop
cmp
xchg
sarb
arpl
inc
sub
jo
scas
sub
and
sub
inc
push
movsl
add
lea
pop
fsubrs
inc
add
in
pop
add
stc
loope
lret
and
add
xlat
mov
sub
cmp
movsb
aaa
rorl
mov
outsl
pop
adc
icebp
mov
push
jmp
mov
fcoms
sbb
paddusb
ds
addr16
hlt
mov
int
mov
fsubl
jb
cltd
push
pushf
cltd
sahf
cmp
dec
test
fiaddl
jne
jns
xor
cli
cltd
adc
popa
popf
adc
xchg
sub
scas
in
add
std
cmp
jp
pop
sub
mov
lds
pushl
lea
scas
pop
scas
mov
mov
xor
sbbb
inc
outsl
test
lock
popf
fdivrs
lods
push
cmp
fldl
cmp
xchg
jnp
mov
xor
jmp
push
mov
lods
fistps
cmp
pusha
es
or
jp
or
or
decl
nop
lods
pop
loopne
int3
in
stos
mov
cmpsb
sbb
std
adc
jl
mov
jns
xor
add
sbb
dec
dec
es
cwtl
push
jge
cmp
mov
dec
addr16
std
xchg
rclb
adc
adc
add
or
in
or
dec
cmp
je
dec
into
xchg
xor
pop
or
jno
mov
or
into
sub
cmp
gs
faddl
movsl
and
ret
clc
pop
adc
adc
xlat
aad
fwait
sbbb
int3
cmp
add
into
les
fwait
test
popa
shll
push
jno
stos
iret
fstpl
mov
or
or
mov
xor
or
sbb
cli
cmp
outsl
movsl
push
popa
cmp
out
pop
data16
adc
cmp
pop
pop
inc
or
in
sub
fs
sahf
mov
imul
jmp
clc
adc
dec
mov
scas
popa
test
adc
mov
push
mov
adc
jmp
iret
jl
xchg
ret
insl
pop
mov
nop
xchg
xchg
dec
popf
scas
sti
aas
cltd
jns
xchg
icebp
addl
mov
or
dec
sub
mov
rcrb
sub
sub
loopne
dec
mov
out
cmp
push
adc
push
out
or
sahf
out
test
adc
out
mov
orb
ret
loope
lcall
jne
mov
shr
popa
in
push
sub
add
pusha
add
mov
rclb
lods
outsb
in
lret
and
icebp
insl
loope
and
outsl
ljmp
xor
and
or
pushf
int
rcll
nop
mov
sub
push
jne
jne
xchg
pop
mov
sub
pop
ja
daa
jp
stos
loope
sti
xchg
xlat
lahf
insb
shl
int3
mov
bound
cmp
and
jbe
add
cli
loope
cmpsl
aas
adc
push
sub
sbb
popf
les
iret
xchg
stc
cltd
xor
xchg
cld
xchg
dec
fists
adc
mov
sbb
out
std
sub
mov
lea
jmp
jg
mov
test
xchg
and
fisubrl
loop
sub
push
gs
xchg
mov
lock
pop
xchg
push
outsb
jns
xchg
mov
jle
inc
pop
cmp
fcompl
in
inc
mov
insb
rorb
int
cmpsb
inc
insb
adc
pop
jg
es
jecxz
ds
test
pop
ret
adc
jbe
fsin
cmc
in
lret
fistpll
lods
pusha
pop
mov
cmpsb
sbb
cmc
mov
inc
ret
ds
xchg
cltd
in
cmp
inc
insl
cli
dec
daa
dec
push
lcall
and
pop
cmp
mov
xchg
mov
mov
scas
pop
add
mov
in
add
dec
jp
sarb
sub
inc
push
mov
je
clc
pop
mov
int
lret
mov
fstps
mov
xor
iret
dec
mov
in
mul
cli
inc
subl
icebp
xchg
jnp
rorb
cmpsl
adc
sbb
pop
mov
add
mov
pop
sub
jno
sti
pop
pop
xchg
popf
shrb
lret
stos
inc
in
jne
push
add
mov
add
pop
cmp
jno
fadd
divl
icebp
int3
outsb
pop
mov
inc
loop
or
add
pop
and
and
call
cs
cli
jbe
sbb
inc
cmpl
movsl
das
adcb
and
or
mov
fs
orl
ret
jg
mov
xor
push
pop
mov
xchg
ja
into
insl
ds
repz
aam
sub
mov
push
inc
outsb
mov
fldl
xor
sbb
mov
pusha
shrl
nop
jle
and
cwtl
jp
adc
ficompl
inc
mov
stos
sahf
xchg
xor
jns
xor
fsts
pop
das
in
sbb
icebp
and
lret
jnp
dec
aas
loope
or
cmp
adc
rorb
mov
mov
lods
test
sbb
jne
jmp
bnd
sbb
clc
xchg
pop
iret
xchg
lods
ds
push
cmp
sbb
mov
xor
add
jb
shlb
aas
jb
jmp
lods
aad
in
gs
lods
pusha
lods
lea
imul
cmp
or
in
mov
jae
in
int3
outsl
pop
out
aad
lock
pop
call
dec
adcl
dec
or
mov
ror
dec
mov
sub
cmc
mov
push
shll
mov
jb
into
loopne
mov
jmp
movsb
in
outsl
call
mov
mov
or
xchg
jne
cltd
xchg
adc
aam
sub
negl
mov
xchg
and
push
xor
sbb
fstpt
xor
les
add
imul
addl
shll
push
clc
imul
jb
sti
add
pop
dec
hlt
sti
imul
xchg
push
cmp
xchg
mov
adc
cmp
ds
aas
scas
lods
add
and
mov
xor
gs
ljmp
xor
cld
sub
adc
bound
scas
sahf
sti
ret
shl
rorb
dec
cld
scas
push
popf
mov
mov
dec
mov
lcall
scas
mov
and
mov
insl
inc
setg
cwtl
cmp
xor
stos
sbb
movsl
mov
rorb
push
cmp
imul
hlt
pop
aaa
mov
rolb
adc
jge
gs
popa
mov
mov
arpl
fwait
mov
sub
je
mov
das
and
shll
mov
out
mov
incb
jecxz
cwtl
add
dec
nop
dec
dec
loope
in
or
mov
pop
sbb
inc
jg
adc
mov
push
jp
inc
adc
test
adcb
mov
pop
clc
xchg
je
insl
cs
cli
adc
dec
gs
sub
jnp
scas
mov
add
push
fadds
mov
xchg
icebp
call
fbld
int3
sbb
sarl
in
frstor
inc
mov
cltd
lea
test
push
sti
hlt
aas
xor
inc
mov
sar
rcrl
sahf
mov
mov
xor
rorl
sti
xor
cmp
inc
outsb
bnd
cmpsl
sub
pop
adc
cmpsl
xor
xor
ret
lods
push
pop
jae
mov
xchg
mov
push
mov
scas
scas
xchg
cltd
or
and
sahf
bound
jbe
mov
jo
jnp
pop
loopne
in
bound
cld
add
xor
pop
add
std
rcll
decb
xlat
sub
clc
movsl
inc
mov
jge
sub
add
push
movsl
push
fmuls
or
xor
sub
mov
mov
shll
inc
insl
push
into
shlb
stos
subl
mov
cwtl
stc
mov
insl
and
sub
mov
out
adc
pop
xchg
add
jmp
push
sub
int3
push
or
out
fisubl
jb
inc
repnz
out
insl
jge
mov
stos
jbe
js
xchg
lret
add
shr
and
shrl
outsl
push
scas
scas
xchg
cltd
lods
sbb
xchg
test
jge
mov
nop
mov
lcall
fwait
jnp
outsl
stc
and
inc
sub
xchg
xor
into
call
mov
jnp
xchg
data16
into
xchg
adc
jg
push
jle
mov
lcall
or
sub
outsl
mov
add
pop
jle
or
in
push
fsubl
pop
adc
xlat
xor
daa
pop
mov
jnp
clc
dec
outsb
rolb
notb
mov
pusha
mov
mov
out
pop
pop
cwtl
cmp
nop
sub
fwait
dec
sbb
and
cs
or
sub
push
jns
stc
fnsave
cli
xor
jmp
mov
xchg
mov
or
and
test
sahf
in
insb
sbb
adcl
dec
ret
add
push
popa
mov
sbb
mov
jnp
pop
hlt
js
adc
jmp
or
int
in
cld
mov
pop
jg
sahf
adc
scas
in
lds
dec
fistl
jns
aam
sbb
ds
sbb
inc
popf
inc
push
add
stc
jg
mov
in
loopne
xor
inc
mov
mov
outsl
rcrl
in
inc
lahf
or
sub
aaa
inc
xchg
in
mov
inc
mov
stos
fcomi
and
xor
push
ds
push
aas
mov
sub
inc
aad
cmp
adc
ficomps
repz
mov
mov
mov
iret
adc
sbb
in
xlat
sub
lock
inc
aam
jnp
or
mov
faddl
cli
dec
mov
ja
dec
insl
mov
mov
les
cld
fdivl
popa
out
xchg
jle
enter
fstpt
ljmp
scas
pushf
fwait
push
add
negl
cmp
addr16
fcompl
push
jnp
dec
lea
stos
lahf
movsb
jbe
ss
lahf
sbb
fisttpll
add
data16
cmpsl
in
mov
inc
fisubl
and
mov
inc
push
add
add
cmp
in
jle
push
std
out
inc
dec
sub
inc
jmp
jb
out
jne
bound
dec
mov
cwtl
mov
cmp
fldl
fldl
cmpsl
cmc
push
cmp
add
jb
lods
or
in
xchg
inc
add
add
dec
adc
jbe
push
fdivp
popf
mov
mov
out
ret
cli
dec
shrb
ss
ret
lds
push
or
arpl
pop
xchg
inc
xchg
repnz
and
pop
aad
pushf
or
sbb
add
jne
inc
sahf
mov
test
stos
mov
js
and
inc
popa
jl
mov
bnd
jno
jge
add
aam
test
or
stos
jle
ds
adc
dec
movsb
push
out
pop
negl
aam
cmpsb
outsb
xor
in
cmp
sub
cmc
cmp
shlb
mov
sbb
sbb
lret
push
nop
pusha
jge
mov
loope
mov
test
jmp
aad
push
lock
add
dec
popf
in
lds
add
into
sub
fs
aam
inc
add
or
jne
ret
insb
jnp
lea
rolb
xor
sbb
pop
push
inc
outsl
scas
xlat
movsb
dec
inc
cltd
fildll
clc
jns
scas
jb
mov
pop
rol
xchg
sbb
dec
push
cmp
cmp
lret
aam
cmpsl
and
fmull
cmpsl
push
lods
adc
mov
push
inc
orb
outsb
mull
std
dec
cli
repz
sahf
mov
xor
push
xor
repnz
xchg
jo
inc
aaa
loope
xor
lock
packuswb
ret
cld
pushf
mov
push
cltd
pop
leave
mov
in
mov
push
imul
mov
insb
and
or
das
mov
outsb
jg
jle
scas
mov
mov
push
jns
popa
imul
adc
push
fldenv
mov
hlt
sbb
or
sbb
cmc
dec
lds
pop
popf
nop
add
stc
pop
mov
orl
xor
shlb
mov
pushf
xor
cmpsb
sbbl
repz
jge
cmp
sub
cwtl
shll
scas
pop
cld
stc
out
xor
faddl
test
outsl
xlat
adc
ret
loop
xlat
shlb
xchg
sbb
cld
sub
xor
repz
es
movsl
icebp
or
cmc
mov
out
push
arpl
daa
sub
inc
or
les
inc
pusha
loopne
fwait
push
scas
inc
dec
inc
pusha
lea
inc
and
push
pop
inc
loopne
push
lock
in
in
ss
ljmp
in
sbb
pop
and
outsl
cmp
pop
mov
push
add
stc
lods
adc
jo
pop
shlb
sbb
mov
je
push
sti
pop
scas
cld
popa
call
adc
push
cltd
mov
cmc
lahf
sbb
cltd
and
ljmp
sbb
inc
addr16
jl
int3
sarl
xchg
loope
enter
ret
jg
xchg
mov
mov
jno
stos
outsl
sub
mov
fildl
ret
mov
je
push
daa
addr16
mov
push
pop
mov
add
nop
adc
insl
cmc
mov
cmp
add
xlat
adc
adc
lock
out
shrl
mov
xlat
inc
adc
push
or
shll
repz
pop
cmp
daa
in
mov
into
fidivs
les
ret
mov
and
js
das
xor
or
pop
sbb
sub
into
daa
add
dec
iret
scas
jle
fstpt
rcrl
jp
les
push
and
in
bound
jns
in
lods
fcoml
xchg
dec
sub
dec
xor
adc
jno
cmp
pushf
mov
xor
push
xchg
dec
movsl
xchg
rclb
mov
and
in
outsb
jno
inc
sub
push
cmc
leave
mov
mov
out
mov
add
pop
sbb
mov
loope
cmpsb
ja
jb
jb
xchg
dec
mov
sbb
movsl
dec
inc
mov
mov
cld
dec
push
mov
xchg
mov
xlat
iret
test
cs
mov
jno
out
push
xchg
mov
jb
jae
rclb
or
or
dec
push
mov
pop
stc
cs
push
mov
call
sbb
cmp
movhps
sub
icebp
or
sbb
rcl
sbb
sub
push
or
stc
in
xchg
lret
inc
aas
or
pusha
sub
mov
pop
subb
movsl
lods
call
std
mov
pop
dec
scas
mov
ss
add
fdiv
jmp
sahf
rcrb
mov
jp
outsb
and
nop
filds
xor
lahf
ds
out
add
cmp
or
jae
add
sbb
scas
loopne
cmpb
movsb
mov
popa
jg
cs
sbbb
push
inc
or
pop
and
in
aam
dec
ret
test
shll
mov
sbbb
sub
pop
inc
cmp
inc
mov
roll
js
movsb
lods
lock
push
ds
les
add
int
notb
arpl
prefetch
inc
pop
bound
clc
and
push
inc
fst
mov
sbb
scas
mov
in
rclb
jb
xor
or
leave
dec
imul
sub
bswap
inc
push
fnstenv
sysexit
gs
in
in
mov
adc
inc
lcall
fstp
mov
pop
into
mov
cs
xorb
jp
ret
dec
push
and
into
or
sub
les
lret
repnz
cli
push
mov
ret
ret
mov
sahf
fbld
orb
inc
out
sbb
mov
jle
and
adc
imul
jb
xor
fs
jmp
loopne
lret
pop
cmpsb
mov
adc
cmpsl
not
jp
imulb
mov
sti
testb
and
in
iret
push
inc
fs
add
loop
xlat
testl
adc
push
daa
nop
iret
pop
aaa
cmp
nop
movsb
decl
fistl
rorb
mov
jecxz
adcl
push
xchg
jecxz
data16
cmp
lock
iret
sbb
lods
in
fs
ret
sbb
test
jno
movsl
mov
loop
in
test
cmp
ret
sbb
pusha
xlat
pop
mulb
dec
lret
outsl
call
mov
sahf
mov
sub
mov
push
outsl
movsb
repnz
out
cltd
lods
xchg
sahf
pop
fiaddl
mov
pop
and
call
into
sub
mov
enter
jbe
xor
cltd
push
nop
cmpsb
jns
insl
push
mov
out
scas
icebp
lods
ss
jnp
xchg
dec
lods
dec
cmp
movsb
test
cld
pop
fstps
leave
pop
repz
loop
mov
cmp
and
mov
test
fists
add
aaa
xor
das
vcvttps2dq
dec
scas
pop
mov
mov
xor
aad
pushf
scas
test
pop
dec
sbb
test
or
stos
mov
int3
out
fstpt
xchg
cld
jnp
cli
ret
add
mov
sbb
xchg
aam
xor
mov
push
dec
enter
inc
addb
and
fwait
sbb
pop
les
adc
fucom
sub
outsl
outsl
lret
aam
inc
push
mov
sbb
div
sbb
mov
push
pusha
cwtl
mov
push
sti
adc
push
mov
xorb
push
insl
pop
lds
dec
and
sbb
flds
aad
outsl
pop
jecxz
xor
push
sbb
imul
inc
std
clc
push
nop
fisubrl
mov
shr
adc
pusha
ret
jno
jecxz
jg
push
jnp
jbe
into
mov
shll
mov
inc
ret
mov
pushf
sti
pop
test
leave
sub
push
add
rorl
iret
jno
mov
jl
dec
lcall
fldlg2
jb
lods
jns
cmc
lahf
inc
cmpsb
push
loope
mov
push
lods
mov
inc
repz
mov
push
dec
xchg
roll
aas
and
pop
xor
orb
mov
jnp
ljmp
xchg
ljmp
insl
xchg
cld
pop
sbb
cmp
or
leave
ja
lods
add
notl
push
jp
popa
cmp
dec
push
xor
inc
in
sbb
ljmp
cmp
or
jl
sarl
shl
in
std
out
pushf
enter
ss
add
cwtl
mov
movsb
out
test
repz
sub
mov
adc
xchg
pop
push
fs
dec
shl
scas
sbb
pop
test
cli
loope
push
cld
mov
in
es
data16
xor
or
xor
lock
sbb
mov
mov
or
xchg
or
dec
js
push
aad
jns
inc
test
mov
lahf
mov
xor
jp
scas
aas
fbld
sbb
sbb
loope
mov
fstps
pop
test
inc
push
stc
inc
fs
pop
mov
loope
dec
jle
out
aaa
addb
rcrl
adc
jnp
cmpb
inc
and
dec
xor
cmp
mov
sub
add
outsb
cmc
jnp
xor
add
popa
xor
fdivl
add
sarl
icebp
in
rcrb
add
pop
mov
sbb
pop
rcrl
pop
mov
int3
add
stc
shll
rorl
andnps
inc
inc
xchg
push
in
push
mov
xor
push
roll
sub
shrl
repz
cmpsl
mov
adc
cmp
dec
mov
cli
aas
adc
dec
test
dec
jnp
add
js
pop
popa
jle
dec
and
in
or
mov
dec
cs
sub
pop
or
xchg
addr16
xor
stc
adc
sbb
add
push
or
and
lods
xchg
or
mov
cwtl
or
sub
repz
xchg
inc
into
and
cmp
leave
xchg
push
push
mov
sbbl
test
mov
fsubp
jecxz
rcr
lahf
add
pop
xchg
xchg
inc
pusha
lock
dec
sbb
call
cmp
popa
in
mov
cs
stos
mov
inc
cwtl
imulb
insb
outsb
scas
loopne
mov
xor
mov
push
das
es
xchg
loope
mov
or
lret
fdivl
inc
fcompl
dec
aam
in
cs
mov
inc
mov
cmc
or
mov
cli
push
mov
jge
push
sub
sbb
jo
repz
rolb
inc
outsb
dec
outsl
cmp
sub
cld
cld
and
adc
or
sbb
sub
cmp
shll
int
scas
lret
inc
roll
jb
mov
mov
out
jle
iret
xor
sbb
fistl
test
cmpsb
sbb
sub
dec
adc
cmp
stos
lret
inc
pop
cmpsl
pop
push
popa
xor
fbstp
es
out
pop
xchg
lret
daa
add
test
jbe
mul
inc
popf
xorl
imul
sarb
xor
fldenv
jnp
jmp
dec
mov
xor
lcall
jle
out
pop
xor
mov
adc
pop
fcompl
inc
push
fsubl
data16
rorl
push
pushf
int
pop
pop
cmp
sbb
push
cmpsb
cmp
and
xchg
lds
daa
and
mov
push
add
push
mov
sbb
adc
mov
adc
cltd
pop
popa
pushf
mov
push
sbb
and
xor
or
sub
lcall
mov
push
dec
aas
enter
sahf
mov
shlb
aas
mov
das
out
pop
xor
mov
push
inc
or
or
fistl
push
jecxz
nop
add
push
lea
pop
xor
sahf
in
ss
add
outsl
cmp
jg
push
mov
and
xor
xchg
xor
jb
rcll
pop
sub
mov
sarl
lods
sub
pop
lret
out
mov
and
xor
cmp
dec
dec
ds
and
rcll
ret
popa
sbb
outsl
mov
stos
push
lahf
mov
xchg
aad
cli
insl
cmp
addl
inc
pop
gs
fcomi
loope
xchg
arpl
cltd
and
stos
dec
icebp
and
daa
and
sub
loopne
aas
jmp
cmpsl
push
push
rep
lcall
ds
sub
mov
mov
call
outsb
xor
mov
push
push
imul
popf
jb
jnp
xchg
mov
inc
iret
sbb
shrl
lret
push
lret
sub
inc
xor
lea
adc
insb
enter
ljmp
rclb
jbe
sbb
pop
fnstenv
xor
cmpsl
sbb
dec
push
lods
test
xchg
loopne
outsl
lds
call
pop
js
push
adc
repnz
add
in
inc
fldl
xlat
call
ljmp
loopne
pushf
enter
int3
jne
push
sub
lods
outsl
fistpll
push
movsl
call
xor
inc
cmp
pop
and
jmp
xlat
stc
test
jbe
jmp
xor
push
mov
sarb
jl
inc
das
xchg
xchg
cmpsb
ja
inc
arpl
sarb
cwtl
and
cmc
add
outsb
sbbl
xchg
je
mov
and
push
sub
jecxz
lods
cmp
cli
jns
adc
fstpl
mov
scas
mov
push
test
and
ljmp
ror
or
jno
jmp
rcr
or
lods
pop
lock
push
push
cld
int
pop
das
data16
jl
sub
or
jno
or
mov
cmp
shrb
pop
mov
or
out
cmp
jle
jmp
inc
push
cltd
pop
push
sbbb
push
subb
lret
mov
push
addb
cmc
into
fidivs
insl
jg
mov
fisttpll
adc
es
outsl
ljmp
and
repnz
jnp
sub
adc
repz
and
mov
out
jns
dec
push
gs
add
sbb
add
gs
mov
xchg
pop
repz
jbe
add
jle
sbb
repz
sbb
lds
nop
loop
pushf
xor
loop
cwtl
adc
cmpsl
lds
insl
hlt
or
pop
xchg
sub
pop
xor
or
push
add
and
inc
pop
imul
fnstsw
addb
dec
cmp
rcr
xchg
jmp
fistpl
ja
add
imul
sub
xchg
je
mov
sbb
mov
cmp
sbb
popf
out
jne
pop
std
lcall
jg
pop
rorb
fmull
shl
and
jno
cmp
mov
lock
push
pop
dec
rcl
rolb
enter
and
mov
dec
mov
mov
jmp
lret
add
pop
xchg
sub
lcall
xor
adc
aas
pop
pop
pop
insl
je
xor
pop
adc
fsubrp
push
pop
push
cmc
dec
mov
adc
out
jns
cmp
stos
dec
sub
mov
scas
pop
inc
push
sbb
movsl
insl
or
fadd
jne
adc
loope
mov
loop
icebp
test
repz
xlat
jae
add
dec
adcl
mov
mov
mov
mov
push
adc
fstp
add
and
cmc
out
adc
sub
jo
nop
pop
adc
jmp
push
dec
add
mov
dec
pop
adc
jmp
aam
mov
sub
inc
fnstsw
aaa
cli
sbb
arpl
dec
jp
and
ds
lods
stc
lock
aas
adc
test
aas
inc
push
and
aaa
aad
shr
movsb
push
jecxz
cwtl
dec
testl
test
jne
cmp
adc
or
outsb
sbb
jmp
and
fsubs
dec
xchg
sub
sub
inc
mov
cld
arpl
cmpb
or
xlat
in
sub
js
or
mov
sbb
pop
out
test
or
cmc
daa
sbb
fxch
xlat
jne
das
scas
and
in
pushf
mov
pusha
jg
sub
rcll
mov
push
loopne
hlt
test
mov
call
out
push
imul
std
jae
xor
mov
jle
and
enter
ret
inc
add
inc
xor
or
xchg
sub
stos
or
lret
cld
in
popa
xchg
inc
xor
sbb
pop
mul
sub
jo
fdivr
or
mov
insl
pop
lods
testb
mov
ja
cwtl
test
imul
out
inc
mov
cld
add
or
xchg
lea
push
notb
or
and
cltd
jno
popa
dec
jle
or
je
pop
call
jecxz
add
pop
mov
pop
sahf
jbe
jl
shl
ret
dec
cwtl
mul
mov
mov
std
cmp
jge
mov
fstps
mov
mov
add
mov
add
nop
hlt
fisubl
mov
inc
lods
aas
xchg
or
loopne
jp
sbbb
jns
aad
enter
fmull
inc
mov
adcb
lret
mov
out
jp
dec
jle
test
popf
mov
jnp
add
mov
xchg
fxch
add
iret
repnz
decl
inc
add
mov
mov
out
andb
dec
xchg
out
pop
lcall
das
xchg
aad
js
in
out
cmpsb
mov
rclb
lods
scas
fwait
loopne
std
cmc
adc
mov
js
push
pop
jle
mov
aam
das
pop
nop
repnz
packsswb
xchg
pop
push
xor
mov
lds
pusha
cs
insl
sub
test
pop
pop
or
movsb
mov
xor
xchg
push
dec
or
in
mov
cs
scas
jne
nop
cmp
or
xchg
in
xor
push
jne
das
push
stos
into
and
mov
lcall
cmp
fstps
int
xchg
xchg
lea
incl
jbe
jge
pop
scas
movsb
mov
push
lret
dec
mov
jbe
loope
sub
sahf
test
clc
pop
ljmp
out
jecxz
in
mov
movb
cwtl
popa
mov
imul
sbb
dec
jl
insb
cmc
push
push
mov
or
arpl
mov
fildll
and
and
push
aas
push
xchg
push
jbe
inc
mov
lret
dec
fcomp
jg
xor
imul
mov
pop
sbb
insl
mov
stc
xchg
outsl
jp
sub
mov
mov
inc
add
add
mov
xorb
sub
ret
scas
fiaddl
inc
jbe
mov
push
pop
jl
sbb
std
loopne
cmc
mov
mov
push
lcall
jb
add
adc
js
dec
xchg
pop
adcl
jle
xor
pop
sbb
mov
adc
mov
mov
push
cmp
loop
xchg
xchg
cmp
jl
stc
stos
nop
mov
push
mov
jecxz
and
mov
sub
test
xor
mov
ljmp
sub
loop
sub
jnp
xchg
std
mov
sub
push
pop
xlat
ljmp
dec
and
push
add
dec
repz
stos
movsb
loopne
xchg
pop
adc
jmp
jge
xlat
xchg
addb
loope
into
dec
cmpsl
mov
dec
dec
or
sti
xor
scas
add
inc
iret
test
jo
jns
outsl
lea
push
mov
jge
int
es
xchg
ret
dec
cltd
leave
minps
pop
rcrb
testb
lret
out
js
jb
xlat
push
push
in
jle
stos
add
push
lret
sub
push
aad
mov
movsl
lcall
sbb
in
arpl
andl
fadds
lods
xor
inc
cmp
or
sbb
pop
loopne
xchg
xchg
int3
xor
in
and
xrelease
mov
sbb
sti
add
nop
sbb
add
xchg
cmp
mov
xchg
sbb
push
cmpsb
div
ds
and
or
scas
inc
mov
mov
mov
sub
shrb
sti
jp
je
mov
dec
mov
dec
testb
push
pop
les
push
subb
cmpsl
sbb
cwtl
cltd
stos
mov
dec
in
inc
mov
fwait
in
cmp
inc
idivl
mov
or
jmp
leave
pop
dec
and
jnp
mov
pop
nop
ja
xchg
dec
xor
nop
jno
das
fs
mov
jp
pop
bound
sbb
mov
cmp
pop
inc
lcall
mov
movb
clc
cmp
mov
dec
sub
hlt
lods
outsb
ret
in
and
insb
cmc
push
add
stos
dec
or
insl
sahf
mov
out
xor
inc
es
loopne
push
add
in
aad
mov
lret
stos
push
pop
out
pmaxub
push
test
loopne
cwtl
adc
sub
pop
stc
sub
leave
mov
pop
jb
dec
lds
jbe
lea
cmp
aas
cmp
cmp
call
jno
insl
lahf
cmp
out
das
cmp
aaa
scas
sarb
jbe
xor
push
test
jno
mov
dec
js
vandnps
xchg
ret
fsubrs
mov
stc
sub
stos
adc
push
push
jmp
fldenv
and
imul
mov
testb
cmpsb
repnz
push
dec
or
cmpsb
nop
loope
out
mov
pop
rcr
cmpsl
xchg
push
add
outsl
jno
call
push
xchg
ljmp
cld
sub
aas
mov
bound
jl
pop
xor
lods
scas
jmp
ret
cmp
dec
pop
shrb
pop
test
ljmp
or
mov
cld
es
mov
cmp
push
sub
xor
pop
pop
xor
jno
push
bound
pop
inc
hlt
pop
fisubs
leave
dec
in
outsl
jb
jmp
dec
dec
notb
dec
fucomi
je
loop
jmp
mov
pop
lcall
mov
adc
mov
cmp
xor
lods
cmpsb
mov
pop
pop
pop
repnz
loopne
pusha
mov
test
repnz
dec
push
jecxz
inc
fdiv
scas
ror
call
push
lods
clc
cmpsb
out
imul
jb
pop
ljmp
pop
mov
popf
mov
int3
aas
gs
sti
popa
pop
sub
sub
imul
test
cmp
loope
cli
sub
stc
xchg
inc
push
sbb
shll
ffreep
inc
cmp
xchg
adc
pop
test
xorl
ss
rcrb
out
push
xchg
dec
ret
dec
in
push
stos
xchg
push
loopne
cs
cmp
sub
cli
movsb
sahf
out
rep
leave
mov
dec
add
in
mov
data16
pop
int
out
lret
dec
or
movsl
cld
pop
ss
iret
dec
lret
mov
adc
fists
inc
cwtl
push
jge
outsl
xor
dec
cltd
pop
mov
add
repz
enter
in
arpl
mov
cs
and
stos
xchg
bnd
fsubrs
cmpsl
rol
pop
popa
or
mov
addr16
addr16
sub
cmp
mov
pop
fadd
xor
sub
add
daa
movsb
and
pop
call
mov
pop
add
inc
push
loope
pop
jle
lods
out
mov
int3
fldl
ret
aas
mull
and
jne
imull
inc
stos
jle
dec
jecxz
repnz
push
ret
add
or
pusha
mov
sub
xchg
adc
pop
test
mov
mov
imul
push
popa
mov
xor
cli
lret
popl
dec
stc
or
int3
jmp
add
test
mov
push
mov
scas
mov
sar
mov
lcall
dec
imul
test
lods
mov
dec
xchg
inc
jae
inc
lds
xor
addr16
push
hlt
into
iret
jmp
pop
push
inc
lock
adc
fwait
sbb
ja
pop
or
sarl
out
out
sbb
or
pop
aas
sbb
ret
or
popf
pushf
sarl
out
push
xchg
mov
or
fwait
imul
pop
test
sub
pop
push
jnp
add
lods
loopne
push
add
ljmp
mov
xchg
jne
loopne
fcoml
jge
cmpsl
mov
imul
mov
cs
jge
xchg
jne
mov
in
outsb
xor
les
or
sbb
push
hlt
adc
adc
rcll
pop
in
pop
sub
lods
cmp
daa
mov
adc
adc
jae
sti
fidivs
lahf
xchg
and
inc
cmpsb
and
or
shll
adc
call
out
lds
push
cli
dec
xor
pop
je
push
inc
test
pop
cmp
pop
mov
mov
adc
pop
add
imul
repnz
lahf
lcall
loop
test
lret
int3
sbb
sub
lds
xchg
out
movsl
mov
fadds
xorl
stc
rclb
out
adc
add
stos
add
sbb
inc
imul
mov
shlb
dec
lahf
dec
outsl
cmp
cmp
cli
xchg
mov
cmp
cwtl
inc
and
call
stos
sub
dec
xor
and
inc
repz
fisttpl
cmp
xchg
outsl
stos
mov
dec
lret
rcr
mov
jp
push
out
adc
jmp
or
dec
jno
mov
cmp
mov
fimuls
cmp
movsl
mov
jns
add
dec
jo
sbb
ss
shl
adc
push
xor
in
insb
jecxz
dec
das
out
pop
xchg
add
push
setno
fimuls
add
imull
mov
shrl
aad
lds
pop
xchg
stos
loop
pop
sbb
add
mov
lahf
and
lods
test
aam
sbb
arpl
lea
insb
aam
clc
pusha
adc
jge
or
pushf
push
and
lahf
lahf
or
dec
insl
repnz
into
popa
add
lcall
pushf
cli
sub
cmp
lret
adc
bound
xor
or
fstpt
sbb
ret
stos
roll
mov
xor
pop
gs
xor
jle
cli
adc
pop
sbb
lret
cmp
pop
dec
push
loop
popa
fisubrs
adc
lret
fisubs
rcll
mov
cmp
cmpsl
xchg
xor
push
in
xchg
lods
adc
adc
jle
jp
dec
mov
cmpsl
pop
mov
push
add
aam
pop
pop
sbb
inc
inc
pop
sub
jmp
enter
cmc
or
mov
and
dec
pop
add
gs
sub
inc
mov
sbb
xor
lret
stos
xor
xchg
lods
push
aaa
ret
dec
mov
push
out
into
inc
dec
cmc
adc
or
fadds
aam
or
or
lret
ficoms
mov
xor
lea
ljmp
movsb
fsubrl
int
jnp
rcll
cmpl
iret
lds
mov
dec
xor
lock
add
in
in
lret
fidivrl
lock
repnz
pop
pop
mov
negl
into
mov
xchg
fildll
sub
push
mov
in
repz
in
rcrl
lret
sub
jne
pop
ret
shrl
push
xchg
aaa
hlt
dec
insb
int3
dec
xlat
mov
loop
push
jbe
mov
lret
int
out
mov
push
sti
push
fisubs
mov
cmc
loop
dec
repnz
lea
aaa
push
iret
add
or
adc
mov
call
sbb
adc
push
mov
sahf
fists
jb
or
mov
mov
mov
stos
inc
sarl
in
mov
push
es
mov
popa
mov
xorl
movsl
lods
aaa
test
pop
leave
jecxz
out
sub
cs
das
inc
and
sub
push
push
loopne
in
push
jecxz
leave
xor
gs
outsl
cltd
ja
test
fidivrl
aad
aad
shl
jnp
jge
outsb
lods
or
scas
jg
aas
icebp
std
daa
cmpb
inc
ficoml
movsb
sbb
inc
int
push
xchg
xor
insl
sbb
cld
ret
scas
int
sub
sub
mov
inc
lods
repnz
mov
adc
fisubrl
jp
mov
nop
pop
cmp
mov
pop
sub
lds
in
xchg
mov
sbb
aaa
testb
in
push
mov
and
dec
push
sbb
rolb
mov
xlat
sbb
scas
jl
add
fnop
dec
adc
imul
stos
int3
or
mov
mov
mov
fwait
inc
cmpsb
cwtl
sbb
imul
or
fs
dec
andl
pop
xchg
cmpsb
sub
loope
sub
iret
adcl
fidivrl
or
mov
aad
shll
xchg
sarb
pop
jge
mov
cli
aaa
xorl
jmp
or
pop
lods
xchg
repnz
sub
out
movsb
mov
xlat
xor
rorb
jmp
mov
lock
jns
adc
insb
jge
imul
adc
or
sub
and
inc
jg
mov
ror
sbb
aaa
outsb
mov
jno
push
sarl
enter
jmp
inc
sahf
in
fs
pop
clc
xchg
inc
jbe
adc
push
lret
mov
dec
push
ret
xchg
push
stc
dec
subl
jno
jb
push
das
add
std
shll
dec
cmp
outsb
popa
lock
xlat
aaa
pushf
inc
into
cmp
imul
cli
or
sahf
xor
push
or
xor
fimuls
in
cli
xchg
sbb
pushf
sarb
imul
push
pushl
jge
xchg
pop
push
gs
sti
dec
push
pop
mov
rolb
cwtl
sub
add
daa
sub
loopne
jnp
std
cmp
cmp
popf
loopne
inc
inc
pop
sub
sbb
nop
lret
aam
sbbl
push
repz
jp
popa
lods
pop
pop
push
in
cli
cmp
rcrb
stc
mov
imul
add
jne
rorb
jae
iret
inc
sbb
sahf
out
aaa
stos
out
lahf
repz
in
xor
xchg
mov
lcall
hlt
cmpsb
js,pt
cmpsb
push
filds
adc
test
xchg
cld
push
test
test
lret
mov
mov
insb
imul
sub
popf
sub
cmc
cld
sub
mov
pusha
decb
or
inc
outsl
mov
pop
sbb
and
in
testl
add
rorb
jne
xor
aas
outsb
mov
orb
add
cmp
jnp
out
or
movd
arpl
adc
sub
in
mov
sahf
push
pop
cmpsb
movsl
adc
dec
sarb
pop
sbb
mov
jae
cmp
adc
sahf
jno
test
ds
stos
aad
sbb
fmull
pop
not
gs
xchg
jo
stos
or
or
xchg
pushf
sub
cli
mov
in
adc
mov
rcl
xor
add
or
mul
mov
jno
inc
pop
lret
cs
xchg
fld
sub
xor
pop
repnz
lea
push
test
xchg
imulb
mov
mov
sub
inc
aam
xchg
xor
push
lahf
fcomps
js
add
pop
das
rcll
lret
push
jo
aam
pop
dec
test
in
push
icebp
pushf
outsb
fisubl
movsl
mov
sbb
mov
adc
xchg
outsb
lret
in
pop
mov
mov
fs
cmp
sub
inc
clc
fcomp
xor
inc
jo
gs
test
in
add
xchg
push
loopne
addl
lcall
cmc
and
dec
xor
mov
adc
push
idivb
js
dec
cld
test
scas
outsb
sub
push
pop
mov
xlat
xor
pop
jmp
xchg
push
xor
popa
inc
and
sub
pop
mov
or
cld
repnz
jmp
and
cmpsb
cltd
dec
lods
ljmp
or
mov
sbb
inc
cmp
xchg
rcl
mov
adc
add
mov
cmp
xchg
push
cs
fldl
add
or
xor
sub
popa
int
notb
movsl
jno
jb
push
add
mov
lahf
jbe
jmp
aas
ret
inc
int3
jae
cmpsb
inc
test
leave
fcompl
aad
aaa
int3
mov
or
clc
ds
iret
xchg
dec
nop
mov
loopne
sub
push
in
mov
vhsubps
mov
daa
inc
in
stos
jmp
xchg
int3
dec
and
mov
xchg
movsb
daa
repnz
lods
mov
pop
jbe
jbe
and
add
sysret
shrb
pushf
xor
push
enter
xor
in
xor
jecxz
test
mov
aas
push
add
adc
dec
insl
clc
int
in
inc
adc
mov
cmpsl
xor
aaa
dec
and
in
imul
cmpsl
and
dec
incb
bnd
jmp
movsl
xor
sahf
mov
xchg
jns
gs
add
inc
push
push
dec
rorb
in
fbld
pusha
imul
repnz
inc
mov
mov
insb
in
or
pop
mov
sti
jle
repnz
out
hlt
nop
push
jle
loope
pop
les
sbbb
dec
out
or
ret
mov
or
insl
xchg
push
nop
sub
fbld
and
loopne
cli
and
sbb
fxch
hlt
das
addb
dec
stos
add
fcoml
pop
jb
sbbb
inc
inc
adc
inc
mov
push
sti
int
test
cmc
jnp
cmp
xor
xorb
fs
cld
jnp
pop
push
or
idivb
mov
and
aaa
enter
scas
cs
and
dec
push
arpl
nop
test
sbb
mov
xchg
andl
jb
in
cmp
jp
je
dec
outsl
aam
dec
fs
pop
mov
inc
lret
jnp
stos
sbb
clc
gs
pop
scas
lock
inc
adc
mov
jo
les
pusha
mov
xchg
fstps
bound
sbb
adcl
adc
std
xor
adcb
cvtdq2ps
pop
inc
xor
xor
dec
in
je
pop
dec
movsl
out
sbb
adc
dec
lods
aaa
fwait
out
mov
mov
into
sub
ja
std
pop
mov
fnsave
ljmp
orb
xchg
mov
adc
mov
cwtl
jae
scas
mov
outsb
fidivrs
ret
mov
pushf
dec
mov
in
inc
stos
pop
xlat
stc
sbb
jne
xchg
lea
fstl
cmp
mov
dec
lahf
add
hlt
std
cmpsl
mov
lahf
int3
rorb
sti
inc
inc
cli
push
pop
add
jo
adc
out
daa
mov
cmp
bnd
push
mov
pop
xchg
dec
fsubr
test
shrb
lret
mov
addb
fldcw
add
sbb
sub
ds
insb
js
push
push
inc
xor
sti
sub
jl
nop
or
mov
and
jge
and
les
dec
mov
cmp
fistpl
ret
xlat
sbb
and
je
pop
add
pop
mov
and
addl
fdivrs
push
mov
push
es
dec
xchg
aam
mov
mov
cmpb
es
ljmp
outsl
push
hlt
pop
aas
stos
lss
movsl
in
or
mov
mov
xchg
push
dec
adc
cld
popa
out
ds
stos
sti
pop
shlb
and
jb
mov
sub
arpl
testb
orl
imul
clc
pop
out
mov
psadbw
aas
mov
scas
fistps
adc
pop
push
inc
adcl
shr
mov
andl
sbb
in
cmp
int3
cld
xor
dec
jbe
mov
int3
andb
push
int
xchg
xchg
int
out
dec
insb
int3
jbe
cmc
arpl
push
fidivrl
insb
fsubs
dec
imul
push
sbb
in
in
ret
pop
sub
sub
dec
fmul
cwtl
and
push
or
fists
push
dec
icebp
imull
cmpsb
cs
or
sub
jbe
mov
je
sbb
sub
rcr
xor
fcoms
cmp
cmp
pop
mov
popa
mov
imul
test
cmp
jl
add
mov
mov
pop
jle
mov
aas
push
cmp
add
pop
out
fisttpll
test
out
sbb
hlt
es
ja
sub
jecxz
inc
ret
iret
xchg
pop
inc
and
test
in
xorb
rcrb
push
es
scas
and
dec
pop
add
cmp
mov
add
fwait
dec
mov
scas
gs
adc
mov
imul
adc
test
outsl
shrl
jae,pn
lock
frstor
adc
dec
adcb
xchg
mov
mov
je
in
sbb
inc
sub
js
lcall
inc
in
dec
and
popf
int
test
shlb
test
mov
insl
pop
xor
dec
flds
loop
sbbb
es
mov
pop
pushf
sbb
arpl
fxch
repnz
inc
xchg
pop
or
outsl
pop
adc
repz
mov
jle
mov
or
int
scas
sub
jmp
cmpsl
dec
xchg
addb
mov
mov
jno
push
mov
in
lock
lcall
ror
and
push
adc
mov
pop
bound
cmp
sub
loopne
adc
lcall
dec
jle
lcall
popa
nop
vhsubpd
out
or
sub
push
sbbb
and
pop
jae
stc
daa
out
push
push
fwait
stos
fwait
jbe
cmp
dec
dec
mov
pop
dec
jmp
push
movsl
lcall
fcomi
xchg
jl
inc
inc
adc
dec
lret
jbe
inc
adc
es
dec
out
or
cmc
sbb
pop
jg
rcll
push
push
push
xchg
mov
or
pop
jno
add
lahf
dec
lcall
outsl
test
in
test
aam
int3
pop
fidivrs
out
xchg
call
cmpsb
jg
js
inc
scas
int
pop
stos
test
mov
jmp
sbb
iret
adc
lea
dec
mov
mov
push
pop
mov
lcall
pop
shl
loope
mov
add
in
xor
xchg
into
clc
mov
lret
push
mov
test
in
out
fsubrs
arpl
pop
xchg
jo
xchg
repz
jnp
push
ljmp
sub
cmp
xor
add
test
fisubrl
ret
mov
into
mov
jecxz
ss
fwait
mov
test
leave
jle
sbb
or
test
in
mov
push
imul
sub
xor
das
sbb
adc
xor
sarb
mov
push
jmp
ljmp
mov
sbbb
in
xchg
pop
inc
iret
rcll
mov
pop
aaa
movsb
xchg
bound
nop
ja
cltd
lar
jecxz
dec
loope
mov
or
mov
ds
sar
dec
xchg
mov
mov
jb
mov
jnp
into
and
aas
stc
inc
out
pcmpeqd
loop
ljmp
ljmp
mov
pop
out
add
scas
cltd
mov
pop
mov
mov
sbb
out
pop
scas
out
jb
jae
push
inc
hlt
repnz
mov
daa
lds
push
mov
sub
jne
iret
mov
aaa
mov
push
mov
adc
fwait
ja
mov
jl
lods
aad
cmpsb
stos
int
pop
xor
inc
js
fisubrs
xchg
lock
mov
inc
pop
add
je
neg
dec
mov
jb
dec
je
inc
fs
xchg
jle
sub
push
mov
cltd
lea
xchg
sbb
outsb
pop
icebp
push
data16
cmp
jne
mov
repz
push
stos
xchg
xor
sub
lock
js
jns
xor
orl
repnz
mov
mov
jmp
dec
rcl
test
mov
movsl
mov
push
popa
int3
cmc
push
push
mov
push
mov
fs
adc
fcoml
hlt
cmp
mov
push
stos
add
fisttpll
mov
cmpsl
lahf
insl
xor
jl
jnp
stos
hlt
stos
mov
xor
mov
cmp
dec
jle
or
mov
sub
dec
andl
aam
jne
repz
adc
adc
popf
idivb
jl
mov
sahf
or
cmc
in
adc
in
jae
dec
pop
rol
mov
dec
cmp
cmc
jl
scas
xor
xlat
inc
pop
inc
add
sub
sub
fdiv
adc
dec
jbe
xchg
pop
mov
cmp
mov
push
imulb
loope
add
sarb
outsl
add
mov
inc
xor
adc
xchg
xchg
dec
cmp
xor
push
jecxz
mov
jno
test
or
inc
dec
or
fdivrl
popf
fwait
and
lock
add
pop
inc
idivb
scas
xchg
test
mov
clc
lcall
add
aas
pop
cld
push
xor
cwtl
andb
mov
push
mov
sahf
pop
mov
pushl
dec
adc
out
lods
cmp
aam
call
in
jle
adc
mov
pop
test
inc
popa
rclb
adcb
xchg
inc
sub
jp
cmpsb
in
and
dec
dec
rcll
paddsw
nop
cmp
xlat
int3
dec
inc
pop
jmp
cmpsl
inc
je
mov
jle
push
xchg
js
sbb
and
cmpsl
cmc
mov
xor
cmp
subl
fistl
out
jns
mov
cmp
jmp
jae
xchg
fwait
pushf
sub
or
push
out
cmp
rcrb
jnp
lods
cltd
mov
sub
jb
mov
lea
sbb
xor
add
sub
xchg
enter
fwait
mov
cmp
xor
sbb
cmpsb
mov
cmp
and
test
add
sub
stos
loopne
mov
jb
aas
aaa
ret
sub
mov
stc
and
ljmp
lods
nop
cmp
xor
jo
nop
je
dec
xchg
pusha
loope
add
insb
jb
cmp
arpl
cmc
arpl
add
bound
dec
sub
out
shll
je
push
jmp
fdivrs
jmp
jl
arpl
inc
xlat
test
scas
lahf
imul
addr16
xor
dec
arpl
leave
dec
pop
fxch
movnti
xor
out
fistps
mov
mov
leave
or
cltd
xlat
data16
push
inc
push
fiaddl
outsb
and
dec
jnp
clc
bound
add
mov
into
cmc
jae
add
mov
jb
dec
jmp
push
mov
push
je
adc
icebp
aam
in
sbb
mov
jle
push
jns
mov
pushf
pop
filds
add
pop
hlt
frstor
pop
adc
scas
mov
shl
sbb
mov
sbb
shrl
jno
xorl
mov
std
sub
stc
mov
or
add
ficomps
mov
push
aaa
inc
add
cmpb
mov
sbb
xor
arpl
inc
inc
xor
sbb
xor
mov
cli
pusha
add
frstor
aad
inc
cltd
int3
fcmovnb
push
bound
cld
mov
push
aad
dec
int3
add
out
pop
lds
push
xchg
mov
lock
push
cltd
or
mov
xor
aas
sub
in
stos
aam
mov
test
sahf
addr16
xor
cmp
mov
and
in
sbb
or
clc
fs
std
mov
decb
dec
filds
repnz
xor
inc
cli
jns
cmp
push
push
adc
mov
outsl
fiaddl
aaa
mov
test
push
sub
std
cwtl
jge
push
sub
lds
cmp
or
jecxz
dec
add
fmull
mov
repnz
bound
adcb
add
jmp
jl
inc
sarb
push
dec
sub
lret
push
jg
nop
xor
addr16
xor
mov
stc
ficomps
push
call
call
scas
ret
fwait
push
lock
and
jp
daa
mov
push
out
jae
mov
clc
sbb
sbb
and
or
dec
fistpl
dec
stos
dec
lret
iret
hlt
popa
add
or
add
fildll
lods
cmc
mov
cmpsb
rclb
sub
cli
jns
insb
dec
pop
mov
rorl
test
or
imul
mov
leave
ljmp
lods
insl
pop
fabs
mov
loop
mov
xchg
int3
enter
adc
int
cld
mov
inc
hlt
js
cmp
sahf
jno
into
jb
or
mov
inc
mov
outsl
adc
cmp
popa
sub
inc
inc
sbb
paddd
cmc
and
inc
push
or
mov
push
ret
addr16
mov
dec
in
ret
jg
xor
adc
int3
push
pop
pusha
add
imul
push
test
or
cmpsb
sahf
and
icebp
in
ds
push
arpl
pcmpeqw
scas
shrb
mov
add
jl
cmp
repz
test
das
sub
xchg
scas
xor
daa
shl
add
fdivs
filds
and
mov
pusha
sub
rol
push
int
adc
cmp
mov
mov
fbld
je
push
dec
lahf
pop
cmpsb
dec
pop
mov
sub
ja
lock
in
das
cmc
int3
insb
ljmp
repnz
sbb
fnstsw
lea
pushf
nop
aad
cmp
lcall
out
decl
test
add
cmpb
jbe
iret
jne
or
sbb
mov
andb
mov
adc
lcall
out
inc
pop
xchg
xor
pop
mov
lock
jmp
pop
dec
cmp
inc
mov
enter
fidivrl
ret
push
xchg
pop
push
mov
cmpsl
in
dec
mov
mov
andl
and
pop
push
stc
adc
sub
in
push
orb
mov
push
lock
inc
subl
xorl
in
jl
fsubl
xchg
xchg
mov
test
dec
cs
ret
rcrl
mov
adc
xor
mov
pusha
sahf
das
sbbl
imul
jl
sahf
inc
sbb
fucomp
outsl
lea
fcmove
jo
add
lret
jno
dec
and
dec
mov
jge
pop
xor
adc
xlat
out
push
dec
jle
ja
push
sti
int3
andb
dec
sti
inc
adc
xchg
fsubl
dec
mov
in
xchg
sahf
xor
add
or
sub
mov
xchg
add
rorl
popa
mov
xchg
leave
movsb
cmpsb
subb
aam
pop
scas
fcmovnb
int
pop
pop
jp
mov
sbbl
mov
cli
lods
pop
jge
pop
cmp
push
push
movsl
dec
pop
movsl
adc
lahf
fdivp
scas
pop
into
mov
push
les
scas
pop
mov
pusha
ja
insb
mov
add
hlt
dec
rcr
rol
pop
jecxz
jbe
xor
xchg
add
add
in
lahf
or
mov
xor
mov
mov
stos
andl
xor
jecxz
mov
push
fmull
outsb
cltd
stos
lods
add
sbbl
cmp
cli
dec
sti
outsl
and
jecxz
sbb
mov
mov
mov
pushf
sbb
into
and
arpl
inc
cwtl
sub
roll
add
fildl
jl
fdivl
dec
fsubs
xchg
hlt
mov
lret
dec
cwtl
mov
or
mov
dec
push
gs
lods
leave
and
fists
outsb
cmp
bound
mov
sub
scas
orl
mov
mov
scas
inc
std
xor
or
push
sbb
and
add
push
adc
stos
xchg
sub
gs
pop
pop
mov
xchg
mov
ss
ds
and
adc
ljmp
and
in
cmpsb
adc
sbb
pop
push
add
popa
or
cmp
pop
jb
inc
cmp
sbb
movsb
inc
fnstcw
ljmp
dec
or
jbe
loopne
jl
or
or
ret
sub
sub
ss
add
outsl
xor
aad
pop
xor
jecxz
dec
push
cwtl
xor
xorb
sbb
push
outsb
jne
ret
push
lcall
inc
pmaxsw
in
js
lods
push
cmp
cs
inc
inc
aad
jne
push
movsb
cmp
je
bnd
cld
into
cmpsb
loope
insb
mov
jae
imul
push
jae
mov
pop
nop
mov
in
test
mov
lcall
pop
insl
movl
xchg
movsl
pusha
stos
jmp
xchg
mov
arpl
inc
fxch
in
pop
push
xor
imul
fbstp
fs
outsl
xchg
or
jb
into
stos
das
or
ret
mov
xchg
and
cmpsl
xchg
sbbb
mov
enter
pop
rclb
adc
and
pop
cmp
mov
inc
repnz
and
mov
mov
aad
pop
sbb
push
xor
jno
filds
sub
icebp
negl
fidivrl
dec
mov
cmp
cmp
lret
mov
mov
fsts
movsl
mov
or
mov
enter
pop
pop
movsl
es
and
in
jbe
pop
adc
xchg
pusha
xchg
xor
and
lahf
in
daa
popa
neg
lods
cmp
mov
lahf
pop
sub
enter
andl
jl
popf
in
sbb
xor
add
mov
adc
cmc
pop
mov
push
xor
mov
jmp
jne
nop
mov
fldt
ret
cld
mov
and
mov
sub
insb
cmp
stc
lock
push
push
dec
sbb
push
mov
outsb
cmpl
lret
stos
xor
jl
enter
js
sub
mov
push
sub
mov
stos
outsl
push
xchg
xchg
jne
cltd
push
cmp
addr16
andb
push
fstpt
inc
out
pop
icebp
push
fidivs
cwtl
shrl
or
addr16
mov
push
js
xchg
and
sub
orl
fnstsw
pop
loop
sub
iret
lcall
roll
imul
add
out
lods
pop
data16
in
mov
xchg
lds
add
mov
mov
pop
int3
enter
je
out
mov
aas
add
xchg
cmpsl
mov
test
pop
mov
aam
dec
inc
mov
repnz
rcrl
popa
add
cmpsl
jmp
imul
popa
jge
lock
pop
push
xlat
cmpsb
std
dec
popa
cmp
mov
cmc
inc
sbb
std
dec
mov
add
sbb
xor
mov
pusha
repz
push
pop
pop
lcall
add
std
and
scas
addr16
pusha
fmull
jecxz
and
xor
nop
shrl
leave
inc
lea
sarb
jae
and
stos
fnstenv
push
in
aaa
clc
ljmp
xor
cmp
insb
dec
lret
xchg
jp
mov
outsb
mov
sub
cs
push
add
push
xchg
mov
popf
inc
xchg
push
icebp
jg
cmp
add
cs
push
and
scas
jge
xchg
lret
inc
std
pop
mov
mov
dec
cmp
cld
and
sbb
xchg
fnstsw
je
imul
inc
ret
xchg
nop
lahf
lahf
mov
rcr
bound
mov
loopne
mov
out
mov
push
sahf
mov
cmpsl
adc
ja
rcrl
cmp
pop
xlat
inc
sbb
jp
mov
rolb
out
fucomp
loopne
imul
sbb
push
outsb
mov
mov
xor
mov
insl
sbb
jns
pop
jae
add
push
icebp
push
lcall
mov
dec
out
in
xlat
jge
mov
push
xchg
data16
dec
mov
imul
xchg
lcall
pop
jle
movhlps
xchg
adc
or
icebp
mov
int
push
and
dec
mov
gs
fadd
ficomps
fldenv
shl
jg
add
ret
xchg
cmpsl
lods
flds
adcb
mov
icebp
mov
inc
popf
inc
es
sahf
into
sub
mov
test
cmp
sahf
jmp
rcll
ror
mov
sbb
leave
jbe
pop
push
rcrl
in
fwait
or
adc
xchg
jmp
push
loopne
shlb
jmp
and
and
add
dec
fmull
adc
dec
xchg
mov
mov
mov
mov
xor
gs
cld
mov
cmp
ret
not
out
test
jp
fwait
call
ljmp
xchg
add
pop
shlb
jge
stc
adc
xchg
xor
daa
xchg
fidivl
out
mov
pop
dec
xchg
fmull
ss
jnp
sti
popa
inc
jmp
pusha
mov
je
les
insl
ds
inc
addr16
xchg
lret
js
jmp
icebp
ror
sahf
insl
xor
mov
int
xor
int3
mov
adc
sbb
lea
pop
jp
mov
in
ds
jge
jae
push
shrb
test
lret
sbb
int
and
sub
dec
xchg
mov
scas
pushf
mov
ret
adc
scas
in
push
in
sub
cwtl
mul
movsb
fwait
dec
nop
andb
scas
jb
cmp
push
mov
pop
nop
fldcw
jl
fnsave
or
rcrb
cmp
imul
lahf
enter
adc
push
movsl
push
aam
mov
add
inc
ret
mov
std
xchg
sbb
cli
push
xchg
lea
jne
mov
mov
movsl
pop
out
jmp
adc
inc
pop
int
out
pop
js
into
inc
mov
push
push
into
fcoms
jbe
inc
sti
cmp
js
mov
mov
mov
stos
or
pop
in
stc
int3
cltd
or
jmp
shrl
aas
jae
addl
mov
cli
ljmp
cmp
int
cmp
movsl
jmp
cmp
or
sti
lods
mov
jb
and
xchg
leave
test
rcr
mov
popa
sub
icebp
jo
xor
inc
cmpsl
xchg
lds
popl
add
out
mov
pop
cmpsl
test
pop
mov
dec
pop
cmp
shlb
imul
out
addr16
jle
arpl
sahf
push
cli
mov
outsl
mov
roll
cmp
pop
mov
leave
push
sar
gs
loope
xchg
add
adc
xor
fadd
ja
hlt
shll
icebp
mov
cs
xchg
inc
adc
adc
pop
mov
push
iret
lret
xchg
js
pop
mov
jle
pop
pop
mov
pop
sub
add
mov
sbb
push
inc
xor
gs
or
fistps
pusha
in
pop
and
int
lret
stc
cmp
pop
ss
or
mov
sbb
mov
mov
divb
add
and
addb
rcr
fnstenv
in
push
push
and
ja
lret
addr16
sub
push
cmpsb
stos
mov
cmc
sar
and
mov
sub
push
xchg
jnp
repz
sahf
xor
loope
mov
sbb
fsubr
dec
cmp
pop
ret
jnp
cs
jnp
and
sbb
push
add
fwait
cltd
je
shll
cli
das
call
push
pop
lods
pushf
mov
xchg
lods
mov
push
fldt
adc
popa
xchg
xor
ret
aad
pop
push
addb
fisttpl
movsl
out
dec
xor
mov
cltd
jle
enter
adc
push
insb
out
ret
imul
fdivp
xor
inc
imul
add
sub
adc
das
pusha
lds
daa
mov
pop
mov
add
loopne
ret
outsl
mov
jae
mov
loope
sub
adcb
inc
not
dec
je
test
arpl
cmp
lret
pop
adc
test
and
aaa
pop
inc
jg
inc
jg
sbb
inc
test
add
fidivrl
jae
ds
pop
sub
add
mov
sub
and
subb
cmp
push
dec
xor
and
or
push
sub
ud1
push
sbb
std
in
call
sbb
jne
das
ret
lock
lods
sti
jle
and
inc
ljmp
jmp
add
sub
pop
and
arpl
sub
push
fcompl
ss
js
lods
push
jno
mov
mov
fists
jbe
add
add
inc
paddb
adc
add
scas
cwtl
out
add
jb
adc
mov
insl
fldenv
mov
jae
dec
inc
dec
mov
scas
data16
sbb
cmp
std
xor
movsb
add
in
aad
mov
inc
outsl
push
test
adc
cs
mov
add
fisubrl
dec
xlat
idivb
in
adc
inc
test
mov
mov
sarb
clc
dec
icebp
xor
stos
icebp
loope
push
fisubrs
xor
and
clc
pop
out
pop
and
jl
leave
sarb
xor
mov
in
mov
dec
js
pop
fsubrs
call
sahf
mov
std
scas
push
sub
fiaddl
dec
or
test
ja
mov
mov
je
xlat
loopne
xlat
int3
xchg
fbstp
add
cli
adc
int3
movsl
sub
adc
fdivs
mov
mov
arpl
negb
push
xorb
mov
shr
xchg
in
mov
dec
jp
addb
lods
xor
fwait
aaa
lret
xchg
jp
lods
in
aad
jle
gs
les
je
adc
data16
push
xchg
inc
pop
jo
clc
sahf
lock
shlb
jle
imul
jge
ds
push
jle
cmpsl
ljmp
jns
jl
pop
int3
add
movsb
and
cmpsl
stos
ljmp
inc
push
scas
stos
push
dec
lcall
adc
insb
xchg
int3
jns
lock
cld
dec
xor
or
movsb
shr
or
in
dec
mov
subb
cmpsl
popf
push
xchg
lret
imul
inc
sti
inc
pop
push
inc
xchg
xchg
pop
xor
mov
outsl
popf
push
pop
lock
test
ja
lock
outsb
sahf
pop
cld
jl
outsl
fsub
lahf
sahf
js
jne
cmovge
int3
out
in
xchg
out
jns
shll
xor
and
dec
mov
insb
cmp
inc
hlt
ret
jp
in
mov
addr16
pusha
test
mov
mov
pop
add
shrb
xor
jbe
sarl
mov
mov
jmp
fisttpll
fwait
and
das
jnp
jae
xor
add
mov
inc
repnz
add
shrb
xor
sbbb
in
pushf
jecxz
or
ss
call
mov
call
mov
call
cld
xchg
mov
lods
jne
xor
jl
stos
jae
xor
fwait
mov
xchg
sahf
mov
push
hlt
mov
adc
ficompl
add
xor
push
pop
mov
inc
or
cmpsb
int
enter
or
pop
push
fcompl
cmp
and
in
push
outsb
cmp
lock
rolb
pop
ret
jecxz
add
sub
ja
lret
rcll
dec
outsl
xor
xlat
push
loope
hlt
ret
mov
lods
lock
push
lock
imul
data16
push
xor
fs
dec
insb
pop
cli
in
push
xchg
ret
ds
inc
mov
lds
ja
dec
lds
mulb
std
xlat
inc
sbb
inc
test
xor
push
and
popa
notl
xchg
in
pop
loop
fldl
pusha
out
mov
mov
push
pop
and
jl
jecxz
subl
hlt
adc
in
sbb
scas
dec
int3
loopne
and
xchg
adc
sub
int3
ficompl
hlt
cmp
pop
adcl
mov
inc
iret
ds
lods
push
sub
dec
pop
mov
mov
mov
js
push
jmp
cld
mov
mov
outsl
ja
ret
lahf
or
popa
pop
int3
int
movsl
pop
mov
repz
mov
insl
aas
jae
jl
or
sub
cmp
cmpb
cli
sbb
ja
dec
mov
gs
inc
mov
inc
shll
push
push
pushf
sbb
xor
inc
inc
jbe
push
sbb
and
xor
repz
pop
xchg
incl
push
or
xor
mov
test
ds
inc
xchg
sub
jp
lahf
mov
or
ljmp
mov
dec
cmpsb
into
imul
pop
jbe
sbb
ret
and
mov
mov
out
enter
xlat
jns
dec
repz
test
test
into
mov
dec
cwtl
mov
cwtl
xchg
mov
int
xchg
sub
pop
rcll
pop
cmp
pop
lahf
push
dec
add
adc
fwait
dec
pop
lods
xor
out
push
outsl
fwait
sbb
flds
sarl
cmpsb
pop
pushf
mov
ret
or
push
jecxz
jb
adc
or
xor
out
push
mov
xchg
mov
adcl
das
imul
pop
loope
in
arpl
mov
and
mov
icebp
nop
and
ficompl
inc
das
ljmp
xchg
jb
add
int
xchg
xlat
pop
rolb
cmp
iret
cltd
mov
and
cli
int
mov
push
ret
mov
in
mov
jg
adc
ret
sbb
pop
movsb
movsb
in
xor
sbb
push
adc
lods
stos
mov
mov
jns
call
fcmovnb
inc
cmp
leave
xor
popf
nop
iret
mov
or
scas
dec
notl
sbbl
xchg
mov
push
mov
ds
dec
insl
shlb
and
dec
mov
mov
lods
dec
arpl
out
mov
add
mov
mov
xchg
jne
or
inc
imul
lahf
pop
into
bound
push
or
lds
add
or
mov
movb
in
fcompl
pusha
sbb
mov
push
inc
std
lret
movsb
out
clc
pop
scas
ss
mov
call
xchg
nop
xchg
push
and
jo
ljmp
mov
nop
fucomi
rcr
cli
jns
cltd
in
jecxz
jne
sbb
or
jno
scas
or
int3
shl
lea
or
jns
pop
mov
sbb
mov
pop
test
cmp
ss
stos
sub
sub
loopne
out
mov
icebp
lock
or
add
xor
sbb
inc
jge
xor
sarb
dec
and
push
adc
rorl
mov
insb
dec
imul
ret
mov
mov
clc
iret
aad
dec
stos
jbe
or
into
lea
push
loop
xchg
and
mov
sub
pop
loopne
clc
repz
rorl
pop
addr16
sbb
dec
repz
jg
inc
push
out
push
fcomps
mov
jecxz
fsubrs
pushf
in
lcall
cmp
movsl
push
push
data16
int
xchg
insl
out
js
aas
lret
popa
sub
enter
inc
into
loop
push
sub
mov
mov
push
mov
xchg
aas
jae
sahf
lock
das
pop
addr16
and
jnp
out
out
out
out
add
cli
icebp
mov
das
add
test
cmp
loop
pop
fldpi
gs
add
js
sub
clc
ret
push
jno
iret
in
loope
inc
test
iret
sub
aas
lock
hlt
int
movsl
cmp
jcxz
popf
sti
xchg
roll
pop
mov
mov
push
inc
pushf
push
sub
add
jne
fistl
add
test
enter
pop
inc
xor
cwtl
xchg
sub
clc
mov
ds
add
imul
sbb
mov
inc
ljmp
in
shll
xchg
push
adc
inc
or
pop
pop
dec
cmp
arpl
sbb
movsl
lds
ret
lods
mov
lods
inc
xchg
fnstcw
mov
rorb
iret
mov
jp
xchg
mov
add
scas
lds
ret
pop
cwtl
push
xorb
mov
mov
add
xor
push
adc
mov
or
xchg
jbe
stos
or
inc
push
jl
ret
inc
repnz
jl
sbb
pop
mov
jno
pop
cmpsl
jbe
push
mov
call
test
icebp
sub
dec
arpl
dec
lret
push
insb
mov
hlt
sub
sub
cmp
jbe
jecxz
adc
test
popf
aam
and
cmp
inc
sub
or
aaa
xor
push
in
hlt
cmpb
xchg
ja
test
xor
push
iret
push
imul
lret
xlat
lods
pushf
int3
cmp
roll
xchg
pop
divl
sbb
pusha
mov
pop
xor
lea
push
mov
lcall
in
lds
testl
mov
setns
sbb
daa
mov
pop
insl
sub
mov
jmp
mov
ret
xor
inc
sbb
jp
mov
jmp
movsb
fnsave
jne
fistpll
int
xchg
pop
mov
push
sub
cmp
lahf
push
jae
fldenv
enter
push
sub
fwait
test
fadd
push
fwait
sysret
and
stos
sti
push
cmc
popa
xlat
mov
lods
cmp
sbb
insb
mov
repnz
cmp
jle
arpl
or
imul
mov
jne
inc
push
sarl
adc
add
xor
adc
rcrb
jns
cs
xor
sub
mov
jae
ja
sbb
jp
outsb
or
popa
cmp
sahf
xor
lds
xchg
cld
sub
xchg
cmp
mov
pop
jbe
mov
mov
ds
les
xchg
hlt
inc
adc
fwait
xlat
pop
das
in
xlat
lahf
jp
push
sarl
lds
hlt
lea
repnz
out
jecxz
sbbb
fwait
ljmp
rcr
outsl
stc
pop
sbb
imul
xor
jecxz
cmp
mov
test
in
pop
jle
jl
mov
add
icebp
fwait
jbe
loopne
hlt
sar
test
out
jge
xor
out
pop
add
jnp
add
cmp
lock
pop
test
subl
cmp
cmpsb
adc
dec
mov
mov
sahf
lret
xchg
jmp
or
and
xchg
dec
xor
cmpsb
xchg
stos
mov
mov
notb
mov
mov
jo
out
sbb
fcompl
cmp
frstor
push
dec
inc
adc
dec
sub
xchg
cs
loopne
cld
pop
sarl
jae
jne
or
xchg
push
fcoms
les
mov
adc
fadd
inc
and
cmc
jno
pop
mov
jo
adc
and
loop
xchg
stc
fsubs
jg
cli
ljmp
mov
push
xor
pop
mov
adc
cmp
sbb
add
push
or
xlat
cmc
testb
in
push
fiaddl
adc
or
ror
push
sti
in
pushf
or
dec
jbe
nop
adc
lods
cmpsl
adc
fwait
call
aaa
in
jae
add
add
stos
or
fildl
inc
push
aaa
leave
ficompl
subb
mov
imul
push
and
mov
sbb
xor
mov
push
xchg
pushf
enter
push
push
mov
mov
fsubl
movsl
in
mov
adc
push
stos
mov
mov
mov
fs
pop
rorb
in
mov
ss
dec
repz
jge
call
imul
inc
push
dec
pop
pop
fwait
mov
jmp
inc
daa
mov
lcall
mov
pop
jnp
inc
arpl
lcall
shl
and
push
and
add
jb
sub
sarb
test
icebp
sbb
adc
or
mov
call
jg
inc
pop
cmp
cs
fidivrl
cmp
cli
enter
mov
xchg
lret
add
add
mov
mov
movsl
orl
insl
bsf
andb
inc
inc
lret
out
popf
sbb
fistl
cmp
jns
pop
aam
out
es
add
popa
jmp
pop
inc
cmp
decb
imul
jne
mov
add
bound
into
add
emms
cld
sti
pop
lods
in
cltd
xor
mov
decb
popa
push
cs
in
xor
inc
dec
mov
test
pop
adc
pop
sbb
aad
push
stc
cmp
fsts
mov
into
pop
loopne
sub
imul
push
push
mov
mov
push
xchg
scas
mov
jg
push
pushf
xchg
hlt
mov
lret
or
fs
cwtd
dec
sbb
mov
mov
lds
sti
pop
jb,pn
bound
cwtl
js
cmpl
icebp
inc
adc
cwtl
xor
and
mov
pop
xorl
mov
fcomps
in
movsl
test
ret
cld
jl
jl
lret
and
sbb
stos
pop
jge
outsb
push
cmpsb
jb
leave
icebp
xchg
or
dec
mov
and
jbe
cltd
inc
dec
bound
mov
sbb
popf
xor
mov
mov
ljmp
sub
or
mov
mov
mov
test
jle
rol
outsl
dec
fbstp
pop
add
je
daa
ret
loope
sbb
movsb
aas
add
jp
dec
adc
mov
js
xchg
mov
das
int
icebp
xor
add
out
cmp
ds
dec
inc
repnz
xor
in
lock
insb
int
xchg
mov
or
mov
push
popf
and
jecxz
imul
mov
mov
orb
xchg
bswap
cltd
je
dec
cltd
mov
mov
ljmp
pop
push
insl
enter
repz
loop
push
jae
mov
push
pop
les
sub
pop
cmc
or
jl
or
sbb
xor
pop
ret
xchg
fadds
in
cmp
gs
pop
dec
add
sbb
adc
jns
jg
mov
sahf
sub
lret
int3
out
je
pop
pusha
pop
inc
mov
mov
mov
adc
dec
xchg
mov
scas
jne
out
fisttpll
jbe
and
fbld
mov
sti
mov
xchg
dec
or
mov
mov
jmp
mov
cs
test
xorb
cmc
lahf
jo
shlb
sub
cmp
mov
cmp
repz
and
outsb
shl
pop
dec
int
mov
lahf
cmp
cli
push
mov
inc
push
pop
shll
inc
or
aam
loopne
cwtl
sbb
jbe
roll
jl
inc
fidivs
out
fstpl
aam
lock
enter
lret
call
mov
add
ss
adc
push
sahf
mov
jo
fldt
mov
lods
cmp
push
cmp
add
pusha
jns
iret
popf
jbe
mov
lret
xlat
xchg
jg
dec
mov
fs
fninit
stos
in
adc
cmpsl
cmc
push
mov
iret
lods
pusha
pop
add
pop
hlt
push
push
es
sub
mov
test
pop
into
je
mov
mov
popa
cwtl
pop
fs
xor
lock
int3
cltd
xchg
lea
int
add
dec
and
jmp
jecxz
jg
out
xor
fidivrl
imul
out
sub
lcall
das
fstpt
lea
gs
inc
xchg
mov
icebp
cmpsl
aaa
movsb
ret
push
mov
into
add
les
xor
mov
lea
or
xor
dec
aam
add
push
adc
mov
mov
int
or
lret
imul
lcall
cltd
dec
fsubr
inc
xchg
dec
popa
lods
xchg
dec
dec
xor
add
rol
push
jmp
jmp
scas
popf
jae
sub
or
ficompl
pushf
xchg
rcll
xchg
jmp
shlb
fildll
or
and
xor
pop
mov
pop
ljmp
outsl
push
je
add
js
inc
dec
rcrl
jae
mov
jb
outsl
xchg
aaa
hlt
pusha
mov
xchg
dec
je
stos
leave
push
push
cmpsb
fldenv
mov
fildl
push
notl
into
bound
ja
sbb
sub
inc
pop
sar
fsub
xor
sahf
movsb
mov
sbb
cmpb
cmp
pop
pop
pop
cmp
rcrb
aad
cli
mov
xor
push
shrl
int
or
fdivrs
mov
aas
icebp
addb
push
movsb
mov
sub
sbb
xchg
gs
and
push
sub
test
mov
xchg
cwtl
add
and
bound
dec
push
pop
push
lahf
movsb
xchg
outsl
shll
rorl
xchg
sbb
and
dec
iret
cmpsb
or
or
inc
mov
xlat
bound
dec
and
pop
inc
mov
inc
inc
pushf
jp
mov
js
adc
mov
xor
jp
lods
add
vpmacsdql
enter
push
mull
mov
push
pop
push
sbb
mov
adcb
mov
xor
call
or
lock
stc
add
and
jmp
dec
mov
test
inc
fisttpll
insl
js
xor
push
and
mov
insl
insb
cmp
dec
jecxz
mov
pop
fs
iret
jno
repnz
mov
ds
gs
shrb
loop
testl
cmp
xchg
lcall
cmc
or
fcoms
shll
mov
lret
neg
es
cmp
inc
xchg
enter
ret
xor
popa
pop
pusha
push
into
xor
loope
push
scas
mov
adc
repz
aaa
push
ja
inc
aas
mov
xchg
push
fbld
icebp
push
pop
and
dec
lock
mov
arpl
sub
push
mov
mov
mov
lcall
mov
inc
cld
lds
loopne
movsl
loopne
sti
inc
cmp
fdivs
js
jle
in
jp
out
and
std
mov
outsl
insb
movsb
jae
and
inc
xchg
scas
decb
xor
xorb
add
aas
aam
jp
cmp
add
inc
add
or
add
xor
add
add
sti
das
inc
add
mov
add
push
mov
add
add
add
enter
adc
xor
jno
jbe
sahf
lock
xchg
nop
sbb
in
lock
sbb
inc
push
sub
jle
jb
bnd
mov
call
stos
dec
shrb
cmp
shll
or
stos
adc
add
sar
and
sbb
jnp
push
cld
test
rol
sarl
adcb
mov
and
sbb
scas
cs
out
mull
movsl
xchg
or
jmp
xchg
mov
ficompl
mov
adc
xor
addr16
jae
sbb
or
xor
ljmp
movsl
mov
dec
sub
add
popf
scas
aaa
aas
push
les
arpl
shrb
jle
xchg
xchg
pop
pop
es
push
pop
das
std
movsl
repnz
cmc
shll
aad
xchg
xor
xor
testl
andb
bound
leave
xchg
cmp
cmp
mov
xorl
or
sbb
mov
les
mov
pusha
mov
icebp
sub
es
or
ror
push
into
mov
push
imul
insl
aaa
sub
jp
das
push
jecxz
adc
sbb
push
inc
mov
pop
lods
adc
or
pop
push
test
xor
pushf
addr16
xchg
add
adc
xor
lret
shll
outsl
loope
scas
movsl
adc
inc
dec
lock
dec
add
rcl
cltd
jmp
xchg
outsl
dec
scas
xchg
imul
sbb
jne
ret
test
les
into
pop
and
fistps
sbb
sub
jnp
mov
xorb
adc
or
mov
out
cmp
sbb
fwait
and
pop
jne
cmpsb
pusha
insl
xlat
mov
iret
mov
fcmovnu
stc
inc
loope
or
dec
xor
fstpl
jae
xor
mov
das
xlat
pop
out
xchg
mov
jno
cs
jbe
loopne
add
push
loopne
adc
mov
lock
xor
fldenv
xor
lret
int
add
js
pop
nop
mov
enter
add
lock
jbe
cmp
lock
dec
and
sbb
dec
cmp
cmp
stos
inc
jae
push
cmp
cmp
add
sub
push
dec
test
sarl
gs
int
or
push
fstp
in
dec
iret
call
push
mov
lret
std
mov
xor
ljmp
mov
movsl
and
xor
pusha
adc
lock
xor
jnp
test
shl
push
lcall
push
inc
fwait
mov
aam
add
add
xor
rol
xchg
repnz
xor
sbb
in
jge
ja
add
outsb
mov
xchg
lock
xor
in
scas
cs
fsubl
stc
out
dec
sub
aas
dec
hlt
call
jmp
push
add
push
push
test
aad
adc
ds
pushf
enter
mov
filds
test
pop
push
jno
mov
sbb
fstps
dec
mov
lods
sbb
adc
mov
push
rcr
test
sarb
xchg
or
sbb
xor
dec
jmp
loope
mov
mul
arpl
jg
mov
lock
ss
mov
add
xor
in
mov
cmp
pop
push
pop
mov
xchg
mov
pop
hlt
mov
lds
int3
sbb
das
mov
or
test
mov
movsb
mov
js
dec
cmc
sub
loopne
rolb
jbe
add
xor
daa
cmp
pxor
mov
sub
xchg
fldl
pop
mov
insb
gs
lds
mov
jbe
rcll
fs
adc
sahf
mov
push
inc
mull
add
in
xchg
fildll
jmp
insb
inc
mov
push
mov
push
jl
pop
pop
inc
adc
mov
or
inc
jns
jo
push
jae
or
fs
out
and
dec
jb
or
xchg
bound
pop
adc
test
mov
mov
cltd
add
sti
mov
xor
jmp
mov
movsl
pusha
es
or
pop
push
jnp
sbb
inc
cmc
xchg
add
pop
idivl
mov
stos
mov
mov
or
dec
pop
pop
cs
inc
iret
jecxz
test
inc
ljmp
dec
fdivrs
inc
stos
and
iret
push
mov
js
jae
pop
adc
sbb
mov
mov
pop
fnstcw
xor
pusha
iret
inc
push
movsb
fmul
dec
push
mov
popf
test
sti
popf
mov
cli
adc
xor
xor
or
xorl
mov
xor
fimuls
mov
push
xchg
add
xchg
mov
mov
sbb
stc
inc
popa
inc
dec
lret
movsl
sub
or
and
xor
pop
fsubs
es
add
cmp
xor
mov
and
sbb
add
aaa
dec
xor
fwait
dec
xor
pop
inc
dec
ret
hlt
out
clc
addl
js
sahf
inc
lock
cmpsl
enter
jns
mov
push
jecxz
imul
inc
jecxz
divl
xchg
jg
cmc
mov
lods
scas
xchg
push
cmp
leave
testl
and
mov
add
inc
add
pop
sti
jge
xlat
imul
xchg
sub
sbb
or
xor
rcr
pop
add
push
adc
dec
sti
mov
into
xchg
sbb
cmp
lods
out
inc
adc
ss
or
leave
ja
fs
lods
repz
movsl
cld
jb
dec
ret
add
je
sub
popf
out
out
xor
xor
adc
adc
cmp
add
fs
leave
in
fdiv
xchg
clc
test
inc
cmpsl
dec
mov
fs
and
jle
pusha
es
filds
xchg
es
inc
mov
loop
fldenv
xor
jmp
lds
mov
xchg
mov
das
int3
insl
mov
aas
push
divl
sbb
cmc
dec
jg
rcrb
fs
dec
in
fstps
xor
cmp
push
lret
es
sub
je
ds
fadds
jb
pushl
jl
addl
jecxz
xchg
leave
xlat
addb
movsb
jmp
sahf
or
in
addl
xor
out
and
pushf
push
pop
cs
loopne
in
push
enter
in
std
repz
dec
push
push
mov
jg
sub
mov
shlb
insb
push
mov
gs
push
pop
popa
sub
aad
lret
repz
mov
xor
add
xchg
aaa
jg
out
addb
mov
push
xchg
ljmp
outsl
dec
xlat
cmpl
push
cmp
lret
pop
test
add
or
std
cmp
lahf
mov
ljmp
xchg
jg
or
mov
jp
lret
dec
imul
xor
sbb
xor
sbb
adc
clc
daa
jg
mov
stos
sarl
dec
xor
mov
or
or
sub
jl
jno
sbb
mov
fisubrs
push
xor
cs
sti
jecxz
sbb
icebp
mov
call
mov
in
xchg
xor
repnz
outsb
cld
push
movsl
std
jp
ds
pop
clc
rcrb
dec
sub
sub
or
pop
dec
add
mov
pop
icebp
mov
dec
std
or
cld
mov
mov
call
addr16
or
jne
scas
pop
es
bound
into
jnp
dec
sub
hlt
sbbl
gs
leave
sbb
lcall
bound
jge
push
out
mov
fsubr
outsl
nop
add
sbb
sti
add
push
dec
xchg
xchg
cltd
clc
fiadds
pop
lods
xor
mov
or
xor
jge
inc
scas
leave
inc
and
arpl
lock
popa
or
movsl
iret
xchg
sar
repnz
jmp
mov
xor
pop
aas
xchg
push
mov
repz
jge
out
sti
ret
int
and
std
dec
pop
cmp
scas
enter
sbb
test
inc
add
cmp
scas
in
lock
loop
icebp
jg
lods
out
cltd
loope
xor
imul
ja
cmp
xor
xchg
mov
and
mov
xor
je
movsb
clc
push
add
xchg
pop
scas
fldl
ja
movsl
call
cmp
shll
cli
js
sahf
and
adc
jo
xchg
mov
testl
xor
jl
outsb
adc
lds
cltd
icebp
imul
stc
ljmp
dec
add
mov
clc
sbb
inc
jge
mov
fs
outsb
sahf
xchg
sbb
imul
and
jno
pop
jno
jecxz
cmpsl
mov
fdivp
xor
out
jno
lock
pusha
xchg
adc
add
inc
out
push
mov
jo
pushf
roll
movsb
pop
pop
popa
das
cli
popf
mov
ja
mov
add
xchg
lahf
pop
ror
mov
bound
scas
cmp
clc
push
rcrl
pop
sbb
loop
push
aam
pop
add
loopne
mov
leave
daa
aaa
push
sbb
stos
xor
add
adc
in
popf
jg
mov
mov
push
mov
jbe
insl
push
nop
pop
mov
insb
insl
hlt
mov
push
movsl
nop
mov
push
leave
mov
mov
dec
clc
lock
iret
imul
imul
loopne
ret
dec
test
sub
cmp
push
inc
addr16
jo
or
sbb
jmp
js
and
xor
inc
push
int
sbb
sub
stc
push
add
cmc
loope
out
adc
nop
pop
sub
lcall
dec
fidivl
cmp
add
cmpb
xor
aam
mov
aam
push
int3
push
inc
xor
add
lods
loope
pop
shll
movsl
dec
loop
pop
ds
rcr
rcll
cmp
xlat
lcall
mov
outsl
cltd
jo
push
and
add
jle
leave
rol
pop
nop
mov
fwait
sub
adc
movl
sub
xchg
repnz
icebp
fisttpl
xor
int
push
iret
push
lret
mov
ret
insl
push
data16
ficompl
rcll
cmc
push
mov
jge
xchg
and
roll
test
adc
jl
mov
out
cmp
mov
pop
mov
xchg
lret
fcom
and
shll
jl
mov
pushf
sarb
imul
repz
sub
fwait
pop
movsl
std
cmpsl
add
xchg
out
inc
test
sub
pop
js
dec
or
and
sub
push
lret
and
icebp
inc
or
xchg
cmp
xchg
popa
xor
movsb
mov
sbb
stos
test
jbe
cltd
test
mov
rcr
dec
inc
into
lock
cld
lret
xchg
add
jnp
flds
pop
enter
fdivs
mov
sub
dec
pop
mov
ret
xor
movsl
xchg
mov
push
out
gs
pop
outsb
add
bound
movsl
adc
xchg
imul
rcrl
sbb
mov
inc
sub
shlb
push
nop
mov
sarb
mov
sbb
int3
dec
fisttpll
sbb
jl
imul
push
pop
pop
and
les
out
mov
inc
es
or
sbb
das
sub
movsl
cltd
mov
inc
mov
or
dec
divb
jnp
xchg
lcall
fcmovne
xchg
ljmp
ror
add
sub
pushf
add
cli
xor
hlt
adc
mov
in
sbb
add
pop
cvtdq2ps
mov
mov
clc
xor
sbb
dec
outsb
daa
sbb
enter
ja
jg
incl
xchg
test
cmp
push
popf
mov
xchg
jnp
cs
jmp
in
sahf
adc
pop
jge
xor
fists
jne
nop
int
push
sub
fldenv
mov
enter
adc
dec
pop
imul
fwait
sub
movsb
push
leave
into
and
add
movsb
leave
jno
lods
mov
ss
inc
loopne
inc
cmp
outsb
pop
adc
lret
sub
lcall
ret
ret
ret
sbb
or
xchg
adc
fcomp
cli
sti
dec
fwait
outsl
mov
jne
cmpsb
outsl
adc
imul
dec
fwait
jbe
test
test
out
jmp
pop
push
out
sti
and
mov
sbb
fs
out
pop
jp
mov
mov
arpl
mov
mov
xchg
inc
jo
addr16
jg
or
xchg
or
pop
mov
add
adc
mov
mov
dec
ret
jg
mov
daa
mov
lds
xchg
es
loope
dec
mov
imul
push
pushf
xchg
cmc
cmc
push
ret
adc
xchg
and
mov
aas
push
and
pop
inc
jae
fs
inc
mov
enter
inc
add
fimuls
pop
xchg
mov
loop,pt
in
xor
imul
sahf
mov
enter
sarl
adc
pop
in
lret
test
cmp
mov
into
fstpt
insl
xchg
mov
mov
mov
lret
clc
in
shrb
in
sbb
sbb
mov
push
and
push
fs
add
mov
dec
test
jae
std
xchg
and
xchg
mov
rorb
adc
icebp
sub
adc
gs
dec
push
ret
xchg
xchg
stos
sti
fwait
mov
mov
push
enter
divb
push
loope
lea
mov
int
cmp
adc
arpl
xchg
call
adc
pop
into
hlt
jnp
mov
faddl
imul
push
pop
mov
push
mov
das
mov
lahf
int
into
jne
fisttpll
push
and
xor
and
push
fwait
lods
movsl
push
xor
sbb
jle
and
lea
aam
mov
push
mov
xor
inc
mov
xchg
mov
jmp
push
insb
popa
ret
icebp
and
ret
mov
fwait
push
clc
add
sbb
mov
lock
fstl
inc
lods
cmp
cwtl
xcrypt-ecb
cmpsl
int3
lods
jp
ds
jmp
iret
and
adc
xchg
mov
pop
out
das
fiaddl
inc
rclb
out
mov
pop
fisttps
pop
add
shlb
and
and
push
and
call
repnz
jae
cmpsb
jmp
push
add
push
jp
lock
xlat
sbb
loope
call
scas
out
mov
adc
inc
xor
ficompl
adc
gs
inc
fstps
push
xchg
insb
sub
shr
mov
cmp
adc
jmp
cmc
mov
pop
roll
or
jae
add
push
in
lcall
jmp
das
cltd
sub
stc
stc
cmc
mov
bound
pop
and
jmp
push
xlat
sbbl
out
lods
bswap
int3
push
jmp
popf
in
mov
jmp
imul
sub
test
pushf
cmp
scas
dec
rep
add
data16
dec
scas
sbb
ljmp
pop
mov
push
popa
or
mov
inc
xchg
fnstenv
pop
arpl
xor
ret
mov
pop
idivb
mov
mov
jecxz
andl
sbb
aas
fildll
mov
sub
les
push
out
xchg
xlat
call
dec
dec
aaa
es
cltd
dec
jne
gs
arpl
loopne
in
xchg
dec
lret
flds
push
cs
mov
pusha
and
int
and
xchg
lcall
out
jno
sti
add
stos
adc
mov
push
or
sbbl
test
adc
sti
iret
jge
cwtl
ret
mov
jge
xchg
adc
lock
add
lahf
and
clc
sbb
enter
mov
aam
pusha
mov
sbb
dec
xor
pop
stos
xchg
fsubrl
fistl
mov
sub
iret
mov
pusha
push
sbb
sbb
pop
out
mov
loopne
ja
test
scas
jmp
adc
push
lea
pusha
inc
loopne
dec
insb
cs
aas
ror
mov
pop
bswap
add
imul
xchg
or
and
mov
adc
mov
inc
add
mov
or
mov
push
mov
out
stos
cmp
jmp
mov
pusha
loop
and
push
sahf
jle
push
pop
inc
sti
mov
repnz
pop
cmp
mov
and
pop
aaa
sbb
int
or
inc
add
outsl
push
cmpsl
into
ret
sub
repnz
pop
and
xchg
mov
mov
mov
jo
pop
mov
cmp
mov
lahf
cmc
sub
dec
imulb
pop
add
aad
call
inc
lock
mov
lea
xor
mov
xor
xchg
mov
jae
negl
outsb
mov
push
add
fistpll
pop
sahf
and
popf
pop
xchg
mov
pop
aam
gs
js
inc
mov
inc
sbb
inc
pop
ret
sub
iret
out
stc
lcall
sbb
mov
mov
push
mov
xchg
mov
loop
jmp
movsb
mov
sbb
add
adcb
lods
push
andl
mov
shll
pusha
add
and
scas
cmp
xchg
fst
outsl
rcr
adc
cmp
add
out
adc
adc
push
into
xchg
push
jne
enter
pop
push
cmp
mov
xchg
scas
sub
jb
orb
dec
pop
clc
icebp
xor
cs
insl
test
pop
jbe
jne
sbb
push
lods
dec
icebp
aaa
daa
stos
cmp
popa
daa
shl
mov
leave
rolb
add
lods
les
mov
repz
outsl
mov
lcall
iret
test
dec
dec
jae
fmul
cld
es
xor
orl
mov
out
xchg
ds
jmp
imul
fst
hlt
fildl
add
std
andb
and
shll
adc
mov
int
adc
mov
add
shll
rorl
sarl
mov
xor
repnz
lods
aas
adc
ret
mov
mov
data16
cmp
and
in
dec
mov
hlt
and
pop
push
jg
out
ds
shl
out
push
adc
shlb
jno
hlt
adc
sub
ds
mov
dec
jecxz
jnp
ljmp
mov
out
inc
jge
shlb
mov
out
loope
addb
pop
in
cmp
call
jbe
in
push
or
fmuls
lret
idivb
popf
sub
fcoms
xor
mov
inc
mov
sub
xchg
xchg
out
xchg
fildl
ret
mov
jge
jle
and
mov
orl
mov
lea
xchg
sbb
jge
sbb
xchg
jmp
shll
sub
xor
test
es
jp
pop
scas
lods
pushf
inc
fistps
mov
dec
out
leave
popa
test
xchg
pop
and
les
je
mov
xor
mov
mov
xorl
cld
jmp
xchg
mov
jg
pop
adc
imul
push
push
adc
int3
mov
sti
mov
sbb
sbb
sub
push
cmp
cmp
cs
bound
pop
das
sub
cmpsl
jecxz
das
rcl
sbb
gs
mov
mov
sbb
fimull
orb
mov
pop
push
mov
mov
or
insb
add
rcr
aas
push
test
dec
inc
push
inc
pop
cmpsb
jl
scas
scas
arpl
cmp
mov
xchg
mov
jnp
and
out
lret
or
push
fsubl
in
ds
xchg
ror
ret
or
push
cmpsl
jb
rorl
mov
mov
jne
mov
addb
inc
dec
inc
mov
lods
test
mull
testb
cltd
xor
push
xor
xchg
out
jnp
test
ss
clc
xchg
dec
sarl
daa
xlat
mov
push
jb
sti
or
ret
mov
sbb
push
xor
ret
aaa
int
xor
lret
inc
adc
push
stos
mov
xchg
repnz
xchg
mov
lods
sub
fwait
jle
lcall
pop
fnstsw
movsl
lea
jecxz
inc
lahf
sbb
pop
mov
cs
mov
fwait
cmp
inc
mov
pushf
arpl
jge
scas
stos
popa
out
fnstenv
fwait
out
fsubs
cmp
aas
mov
lret
movsl
sahf
jle
xchg
mov
dec
mov
sub
mov
jb
out
sbbb
pop
add
or
or
sahf
mov
sub
into
out
fcoml
sub
push
xor
mov
loopne
pushf
xor
add
insl
pusha
adc
ja
or
and
lahf
fisubl
outsl
aaa
pop
xchg
adc
es
jmp
movsb
or
cmp
test
jae
sub
in
jnp
imul
stc
and
push
mov
fisubs
ja
cltd
sub
jg
jb
push
add
into
out
dec
xchg
fistl
jle
push
sub
dec
add
leave
push
mov
push
lcall
push
bound
lds
adc
add
fcmovbe
mov
or
ret
mov
and
data16
sarl
sbb
popf
imul
lods
cmp
out
loop
mov
aam
lock
sti
lods
push
mov
xchg
andb
cmpsl
mov
pushf
cli
ja
push
jbe
loopne
xchg
and
data16
jp
mov
or
push
dec
ja
or
movsl
ret
daa
aas
out
les
repnz
js
fidivrl
xchg
repnz
aas
xchg
adc
roll
daa
lea
out
push
popa
divl
xchg
push
dec
test
cmp
loope
lcall
jae
pusha
pushf
data16
jecxz
add
fnstenv
bnd
pop
and
sub
imul
add
cmp
das
movsl
aam
cltd
add
inc
xchg
pop
jo
scas
xchg
and
dec
fimuls
pop
xchg
popf
jg
fistpl
out
fsubl
xor
dec
mov
stos
js
jmp
movsb
add
imulb
aad
push
dec
lods
aad
inc
not
xchg
ror
adc
jb
iret
loop
das
hlt
mov
add
dec
pop
mov
xchg
pop
mov
fs
xor
sub
push
test
out
dec
rorb
cmp
cmpsl
sbb
imul
sub
lods
sarl
xchg
cmp
int
pop
mov
bound
mov
dec
andl
nop
mov
push
popa
mov
add
dec
in
fs
xchg
loopne
inc
mov
in
inc
push
sbb
xor
mov
inc
je
js
and
stos
push
pop
dec
dec
adc
cmp
mov
xchg
push
mov
fs
sbb
jge
mov
push
xchg
mov
das
cltd
adc
cmpsb
pop
imul
adc
adcl
iret
imul
sub
push
pop
nop
mov
mov
popa
pushf
mov
in
repnz
lret
mov
adc
jbe
inc
dec
call
popf
jns
mov
xor
nop
fdivrl
adc
jns
mov
xor
movsb
dec
shll
mov
add
insb
cmpsl
mov
aaa
sub
xor
cmc
mov
in
test
inc
fdivr
jge
addl
sub
xor
xor
sbb
or
outsl
jbe
or
jbe
or
pop
xchg
add
jbe
jge
aam
in
int
pop
adc
sbb
mov
mov
cli
xchg
push
sbb
lcall
xchg
imull
xchg
sub
enter
mov
rorb
nop
sub
mov
sbb
jg
dec
dec
mov
adc
hlt
and
andb
mov
dec
setp
lea
adc
aad
pop
pop
fisttpll
mov
jbe
sbb
dec
arpl
cmp
imul
cmp
cmc
std
inc
insb
aaa
rolb
push
xlat
push
push
sar
idivb
fbstp
imul
cwtl
roll
mov
ds
pop
sub
mov
xchg
lret
adc
test
push
mov
stc
mov
mov
push
xchg
mov
or
sahf
aas
test
stos
push
inc
push
aas
mov
rorb
movsb
ljmp
test
jp
xchg
or
shlb
mov
rcrb
pop
push
repnz
cmp
test
mov
jno
push
xor
iret
jecxz
push
stc
push
cwtl
mov
loopne
and
push
or
mov
mov
cli
jl
xor
aas
fadds
ss
fs
ds
xchg
js
aas
ret
lods
imul
jmp
outsb
cld
mov
add
aaa
leave
mov
xor
push
mov
and
fsts
jb
sbb
inc
cmp
add
repz
push
cmp
pop
cmpsl
xor
je
cmp
add
cmp
lahf
xor
outsb
jp
js
dec
sub
roll
push
rclb
decl
push
sbb
out
aaa
jb
shl
in
mov
jno
pop
xor
ss
adc
adc
pusha
test
jge
stc
clc
inc
adc
lret
mov
addr16
aam
add
hlt
xchg
inc
push
imul
in
lods
adc
sbbb
cmp
inc
push
orb
mov
mov
xchg
fdivrs
dec
sti
test
repz
add
mov
nop
fiadds
aaa
pop
decl
cmpsl
icebp
lret
or
es
mov
stc
arpl
pop
ja
ljmp
sbb
mov
js
sub
push
mov
mov
mov
xlat
mov
jns
sbbl
inc
push
shll
mov
sbb
lret
push
cmpsl
inc
jg
scas
cld
dec
das
cmp
xchg
jno
stc
sub
adc
out
dec
jbe
cmc
cmpsl
shrl
ret
insl
mov
pop
clc
js
es
xor
xchg
clc
cmpsl
scas
pop
push
outsl
lds
or
andb
jae
shll
xchg
pop
push
scas
pop
mov
into
daa
in
xchg
mov
mov
adc
jne
jle
dec
xchg
and
ja
lcall
imul
cmp
fnstsw
sahf
and
lock
stos
push
push
dec
mov
out
xchg
cmp
mov
cmp
out
out
push
mov
dec
mov
jae
mov
xchg
das
xchg
rorl
test
pop
mov
xchg
mov
lock
lods
clc
in
xchg
pop
shl
mov
mov
xchg
xor
xor
lods
inc
jecxz
adc
cmpsb
popa
add
testb
sub
aaa
dec
pop
mov
cmpsb
mov
inc
mov
or
jp
push
int
and
out
jne
cmp
fwait
xchg
ljmp
stc
sbb
mov
rcll
jmp
adc
or
push
int
daa
call
adc
scas
mov
cmc
cmp
jecxz
adc
and
push
add
jle
fstps
aaa
dec
rorl
and
movsb
bound
pusha
xchg
fmuls
push
insl
dec
fwait
ja
rcll
jne
jb
push
call
int3
push
fwait
push
in
sbbl
mov
ret
add
inc
jle
sub
xor
add
cmp
mov
ja
adc
inc
pushf
lahf
scas
mov
jp,pt
bound
jmp
mov
mov
stos
je
pushf
test
std
int3
and
stc
xchg
loopne
sub
loope
loopne
data16
bound
dec
in
scas
jns
add
dec
scas
jae
or
cs
sbb
jmp
mov
in
jno
loope
jl
test
test
jecxz
lods
pop
aas
scas
daa
dec
dec
xchg
not
sbb
shlb
lcall
mov
daa
dec
sbb
icebp
rcrl
push
mov
jno
jmp
pop
icebp
push
mov
js
ljmp
sbb
je
int
cmc
and
mov
jo
push
fs
cmp
icebp
js
pushl
push
and
pop
adc
test
jb
and
or
outsl
cld
mov
adc
jle
xor
mov
daa
popa
mov
js
movsb
cld
push
xor
mov
mov
fcmovu
xorb
outsl
popa
mov
into
nop
std
push
push
xchg
dec
mov
jmp
mov
inc
lea
gs
sub
mov
lret
cld
dec
cwtl
sub
cmp
jno
aas
xor
enter
pusha
pop
xlat
das
loopne
pop
inc
mov
cmpsl
sbb
adcl
jne
std
dec
pushf
rclb
gs
xchg
loop
jg
aaa
mov
inc
lret
or
pop
lret
bound
xor
mov
fstps
loopne
outsb
ja
inc
repnz
jmp
repz
pusha
dec
fs
pushf
inc
pop
sbb
jmp
arpl
clc
insb
repnz
in
push
mov
pop
pop
sti
clc
rol
sub
in
test
xchg
inc
fwait
rcrb
lahf
movsl
or
mov
xchg
dec
cmp
sbb
xchg
xor
icebp
sar
mov
out
and
inc
das
rcll
lds
adc
xchg
inc
mov
shlb
jecxz
pop
std
shl
sbb
xor
je
flds
pop
xor
pushf
js
push
push
icebp
pop
ds
xor
mov
scas
mov
mov
dec
jne
push
xor
sbb
xorl
pop
lcall
repnz
outsl
fiadds
cmp
pop
test
lds
test
jmp
push
out
add
aaa
loope
jns
adc
xor
or
jg
scas
pop
xchg
lock
pop
cli
out
xchg
mov
adc
jae
fists
lcall
xor
sbb
in
pop
mov
in
imul
push
mov
aam
cmp
popf
mov
lods
pusha
in
jae
and
test
pusha
insl
sub
addr16
lea
mov
push
stos
dec
push
std
psrld
dec
xchg
mov
test
inc
gs
repnz
clc
into
ljmp
mov
into
js
into
mov
jbe
xchg
mov
popa
scas
add
xorb
insl
xchg
and
mov
and
and
push
xor
pop
xor
mov
adc
and
and
xchg
dec
aad
lock
fdivrl
hlt
add
idiv
cmpsb
mov
popa
mov
sahf
push
and
push
sahf
int3
jne
aas
int
insb
and
mov
push
js
dec
gs
inc
jb
fs
adc
push
or
lahf
push
lret
sbb
and
das
push
stos
inc
xlat
sbb
dec
jb
test
arpl
inc
and
adc
dec
lods
mov
jg
mov
push
pop
mov
loope
cltd
jo
jp
add
mov
push
std
and
out
pop
mov
ret
dec
sub
sub
repz
clc
pop
pop
jp
das
adc
sub
jle
pop
push
lods
sbb
call
xadd
xchg
xor
fimuls
jne
mov
adc
jo
dec
add
mov
fcoml
ret
test
jns
xchg
mov
pop
test
pop
lret
dec
loopne
cmp
popa
cmp
mov
push
or
mov
into
nop
movsl
sub
dec
and
and
mov
and
cmpl
imul
mov
and
xchg
fnstcw
push
les
mov
adc
gs
mov
sbb
push
jbe
sbb
cmp
lahf
imul
and
xor
lea
xchg
pop
xor
sub
and
add
mov
inc
xchg
mov
pop
sarb
insb
or
arpl
mov
test
sbbb
out
push
xor
and
sbb
sbb
test
iret
scas
cwtl
shlb
sti
jp
add
out
mov
mov
cltd
fs
add
cmpsb
mov
clc
add
inc
nop
scas
mov
popl
and
mov
lret
lock
pusha
fcmove
into
lds
pop
cmc
push
dec
cld
cmpsb
cmp
shl
cmpsl
or
cmp
mov
cmp
jmp
xchg
dec
xor
cmpsb
sbb
push
push
pushf
xchg
out
xchg
push
or
out
pop
mov
cmp
lods
or
ret
cmpsb
cmpb
inc
pop
mov
sub
je
jno
sbb
jns
mov
jnp
loope
mov
icebp
ds
inc
push
sub
mov
xchg
fcoms
and
lcall
fwait
call
aas
lock
or
iret
or
scas
xchg
decb
movsb
adc
loope
inc
and
inc
inc
jae
inc
sub
sbb
hlt
xchg
addr16
sbb
cmp
ss
sbb
jecxz
addr16
test
sti
fcmovbe
mov
in
loopne
xchg
decl
push
xor
adc
inc
dec
or
insb
add
sarl
stos
fistpll
pop
mov
or
je
mov
adc
js
les
bound
and
push
sbb
fwait
outsb
and
or
aaa
jo
cmp
pop
aad
adc
and
movsb
lds
aam
cmp
add
and
xchg
pop
jne,pn
cltd
push
jno
sub
jne
push
int
push
jb
cmp
or
inc
stc
add
inc
leave
sub
shl
lods
shlb
mov
jmp
daa
loope
fdivrs
push
popf
into
sub
imul
or
jbe
jle
sti
mov
repnz
pop
xchg
fs
push
xchg
mov
sbb
mov
lods
popa
mov
sub
mov
mov
rcrb
in
adc
xchg
ljmp
sahf
push
out
jmp
inc
pushf
clc
dec
rcrb
cwtl
addb
inc
adc
cmp
mov
mov
mov
mov
leave
dec
out
cmp
in
imul
xor
outsl
test
insl
mov
gs
sub
clc
fmull
adc
leave
clc
dec
push
sahf
mov
mov
inc
and
xchg
aad
add
inc
or
pop
in
fsubr
fistpll
mov
sbbb
and
and
leave
pushf
ja,pn
inc
lods
and
jns
enter
jnp
push
ficomps
es
mov
iret
adc
cmp
lret
xchg
xchg
dec
cmp
lock
push
jg
pop
ss
inc
adc
fcomi
sub
cmp
xchg
jmp
sar
call
mov
nop
into
xchg
mov
push
xchg
xchg
adc
xor
cmpl
mov
les
push
inc
mov
pop
and
js
aas
sub
sti
jg
or
push
fcoms
and
jmp
repz
ds
xchg
dec
mov
cmpsb
jne
cmp
dec
aad
sub
xchg
ds
in
daa
jge
scas
ret
cwtl
push
mov
popa
ljmp
xchg
push
lock
mov
sti
mov
ret
adc
clc
sub
popa
sahf
mov
adc
lock
sbb
insb
mov
lods
xchg
push
lcall
sbb
pop
cmp
mov
adc
std
or
orb
out
mov
inc
push
mov
xchg
jo
pop
lahf
or
int3
and
cmp
pop
nop
inc
mov
fldt
cmpsl
and
and
shl
fmulp
mov
cld
aam
mov
int
dec
xor
jmp
mov
sbb
mov
bound
popa
out
outsb
add
mov
add
dec
dec
dec
mov
mov
jbe
sbb
xor
push
cld
shlb
jecxz
push
movsl
dec
adc
inc
adc
push
cmpsl
or
inc
jmp
movsl
outsl
repnz
mov
jbe
fidivrs
push
lahf
inc
mov
rcl
jg
or
cli
mov
mov
mov
jg
push
lret
fisttpll
mov
rcrl
movsb
mov
lcall
inc
and
add
jl
inc
cmpl
sahf
jo
arpl
pop
mov
add
mov
sub
dec
push
push
mov
mov
adc
push
js
and
out
movsb
ficompl
aaa
icebp
test
imul
sbb
xchg
stos
push
push
enter
mov
std
in
jmp
arpl
mov
fistl
mov
cld
sbb
arpl
imul
bound
fwait
lahf
xor
jp
frstor
mov
mov
mov
rcr
pusha
jge
cmp
es
scas
outsl
aaa
in
dec
jmp
std
pop
lret
add
lret
adc
pop
jns
scas
movsb
in
mov
rclb
out
out
popf
icebp
xchg
imul
lods
dec
mov
imul
xchg
mov
fsubrl
mov
nop
pop
sub
sbb
mov
int
mov
lods
sahf
or
addr16
xchg
jno
daa
enter
lea
pop
add
rorl
mov
je
repz
mov
and
mov
or
lcall
xchg
loopne
sub
xor
mov
int3
pop
aas
dec
movsl
in
sbb
rcl
sub
rcrl
ret
sbb
or
mov
xchg
pop
cs
inc
scas
add
and
add
xor
arpl
mov
jl
mov
imul
pop
js
push
mov
mov
jg
push
xchg
push
arpl
jl
movl
jle
mov
call
pop
dec
out
mov
mov
ret
cmpsl
cmpsb
sarb
jb
mov
out
daa
xor
out
push
xor
lahf
out
or
nop
gs
aad
cs
loope
and
out
dec
sub
add
repnz
jmp
pop
lcall
or
mov
mov
mov
inc
lret
mov
lock
mov
icebp
jae
ficompl
loope
adc
xlat
insl
mov
or
mov
call
dec
mov
sub
mov
xchg
and
test
sarb
scas
ret
xchg
inc
mov
or
outsl
arpl
aad
pop
jmp
and
test
ss
hlt
push
mov
repz
xor
add
in
hlt
into
ud0
out
jl
cltd
movsl
inc
sub
sahf
jl
bound
cli
loopne
cmc
lods
add
xchg
aam
pusha
bound
loope
xchg
sub
ret
jno
pop
and
das
push
adc
ret
popf
xor
push
inc
push
test
mov
cmpsb
push
or
test
mov
dec
outsb
jp
sub
fsts
mov
cltd
stos
fldt
jbe
or
xchg
mov
pop
cs
pop
mov
out
rcrb
dec
mov
cmpsb
cmc
leave
ret
pop
inc
inc
jle
shl
push
loop
jg
mov
pop
leave
test
pop
pop
cld
pop
pop
mov
sahf
cs
repz
ss
fdivl
ja
jne
es
jnp
push
sti
leave
mov
cwtl
mov
std
int3
decb
xchg
adc
nop
mov
mov
loope
adc
adc
mov
sub
cmp
and
push
bound
lcall
mov
shl
sbb
in
ds
call
mov
jg
pop
pushf
dec
std
rcll
add
and
fsubrp
std
sbb
mov
mov
and
cmp
jl
cmp
pop
mov
add
dec
iret
out
adcl
sbb
pop
out
push
or
ffreep
ss
inc
jl
les
call
push
adc
outsb
push
mov
out
add
daa
mov
pop
sarl
fdivl
dec
xor
les
mov
lock
xor
bound
fs
fincstp
fsubrs
push
or
sub
lret
add
pop
mov
and
lcall
adc
ficoms
out
pop
mov
sahf
xor
popa
sub
push
mov
cmpsl
shll
push
in
mov
pop
negl
addr16
fidivrl
fwait
andl
loop
loope
insb
out
repz
fsubp
jae
mov
in
push
pop
fisttpl
mulb
gs
adc
dec
cmc
jo
push
lret
dec
push
mov
sub
movsb
stos
rorl
stos
mov
in
xchg
lret
aaa
push
popa
jl
dec
das
xchg
in
jns
loope
inc
push
js
int3
and
push
aaa
andb
popf
push
jb
sub
jmp
pop
mov
pop
pop
out
sbb
test
scas
add
loope
lea
aaa
adc
inc
cmpsb
insb
mulb
out
mov
test
imul
inc
into
mov
dec
cmp
sbb
add
push
cli
pop
pop
adc
repz
idivl
inc
fisubrl
mov
xor
orl
fnstsw
and
mov
or
and
xor
xchg
lcall
mov
inc
fisttps
lock
jg,pt
int
test
ds
add
in
xor
hlt
sub
dec
cltd
mov
mov
add
dec
test
icebp
fdivr
xor
mov
add
xchg
push
inc
or
pop
jl
int
mov
sbb
mov
dec
xor
imul
out
mov
mov
mov
sub
fidivrl
adc
mov
leave
fisubrs
dec
xchg
adcb
jp
xchg
lahf
cmp
inc
and
jle
xor
lods
std
cs
fildl
es
mov
adc
test
fwait
loop
mov
stos
lcall
loopne
inc
mov
inc
into
repz
mov
pop
mov
mov
lds
push
rcrb
aad
popa
cmp
mov
jo
mov
sbb
xchg
xchg
adc
and
jmp
adc
popf
lret
dec
int3
xor
sahf
in
xor
mov
pop
inc
jecxz
repnz
lods
popf
push
add
and
adc
jle
push
pop
inc
dec
dec
mov
lock
jg
jno
mov
sbb
test
xor
mov
xlat
or
movl
lods
cltd
out
sub
xlat
xchg
mov
sbb
xchg
decb
and
mov
jg
or
inc
subl
fdiv
cmc
cmpsb
outsl
sub
lods
pop
or
mov
fnstsw
and
pop
pop
mov
ret
fistpl
fisttpl
test
sahf
pop
adc
js
push
addr16
xchg
mov
enter
xor
mov
mov
repnz
jnp
and
imul
outsl
ljmp
add
or
pop
andl
call
pop
or
imul
shrb
idivl
test
mov
inc
mov
roll
mov
test
or
lock
xorl
fnstenv
cmpl
in
mov
push
stos
ss
sub
jns
xchg
mov
sbb
pop
push
ret
sub
mov
daa
es
fnsave
shrl
adc
in
cmp
mov
inc
push
stos
add
loop
xchg
jnp
jecxz
minps
xchg
sbb
mov
add
lods
mov
cwtl
dec
aaa
rcrb
shl
or
pushf
mov
xchg
dec
aaa
cmp
xchg
xlat
fadd
js
daa
cltd
fnstsw
pop
iret
sbb
push
cmp
and
mov
lret
int3
bound
cmp
lock
sbb
sub
out
add
mov
jno
out
lds
dec
push
stc
shl
xor
mov
jbe
pop
jo
push
inc
pop
cltd
adc
test
aas
dec
call
xchg
lcall
push
mov
xchg
xchg
or
popa
inc
inc
ret
jo
xor
daa
out
test
stc
mov
in
inc
jecxz
dec
push
sbb
cmpsl
mov
int
xchg
fimull
jns
mov
daa
mov
fs
stos
gs
and
jbe
sbb
das
fld
inc
mov
adc
sbb
outsb
lahf
bnd
das
cs
outsb
int
js
aas
les
out
in
in
sbb
jno
stos
mov
inc
in
data16
adc
call
cli
sub
pop
ja
fwait
rolb
dec
fsubs
insl
dec
outsb
cld
mov
adc
xchg
jbe
or
cltd
mov
icebp
pop
mov
test
sarb
adcb
dec
sbb
mov
cmpsl
sub
lret
or
add
mov
jl
xor
jno
jle
icebp
ja
dec
jge
adc
jno
cmc
mov
dec
int
mov
popf
add
xlat
xchg
jae
bound
mov
or
xchg
leave
loopne
dec
or
push
add
push
repz
push
dec
adc
xchg
mov
sub
or
cmp
lahf
movsb
xchg
jb
mov
push
pop
int
negb
fidivl
popf
js
fcomi
push
cmpsl
out
imul
addb
xor
sti
loop
rcrb
pop
sub
repz
and
mov
mov
xchg
aam
cmp
inc
roll
jns
cmp
mov
jg
adc
inc
outsl
lea
mov
arpl
ret
shll
pushf
mov
dec
ja
add
iret
or
mov
push
imul
pushf
mov
div
out
mov
add
jne
mov
or
nop
push
enter
inc
or
test
push
xchg
out
add
test
aad
and
jb
sbb
jg
out
inc
pop
out
sbb
sbbl
jns
stos
fisttps
dec
jecxz
imul
cmp
lock
arpl
jne
lret
mov
and
out
fildl
incb
inc
dec
mov
cmp
cmovg
stos
sub
enter
jno
cmpsb
lcall
rcrb
mov
leave
addr16
testl
orb
push
insb
add
ss
sbb
xchg
fstpt
mov
push
lea
xchg
mov
call
xor
and
jg
mov
imul
scas
push
shl
adc
mov
add
in
lret
push
outsb
arpl
push
int3
pop
lea
icebp
fidivrs
dec
notl
cs
adc
dec
icebp
testl
mov
repz
cmp
movsb
dec
out
ja
ljmp
insb
dec
mov
mov
xchg
mov
inc
jo
stc
movsb
cmp
push
xor
jno
jno
push
or
dec
test
cmpl
aam
adc
movb
cmpsl
inc
pop
jecxz
add
sub
dec
xor
inc
mov
aas
ret
adc
test
jl
xor
mov
jno
addr16
loopne
cmp
lret
out
jmp
icebp
lods
mov
mov
les
xor
pop
jl
shll
lcall
sub
inc
xchg
jge
imul
cltd
addr16
and
loope
xchg
fdivl
adc
lods
jno
mov
push
insl
cs
les
xor
mov
fs
lret
int3
ja
mov
lea
jecxz
fisttps
dec
xchg
xchg
inc
xor
lods
movsb
inc
js
pop
cmp
mov
sub
movsb
vpmacssdd
and
push
mov
push
lock
hlt
imul
or
sti
mov
lcall
insb
outsb
jmp
or
cmc
sub
jns
pop
push
loope
push
orb
mov
pop
das
cmp
shlb
call
and
mov
jbe
out
mov
xorb
and
sbb
test
fstpt
mov
push
out
cwtl
iret
cmp
nop
pusha
add
mov
rorb
and
aam
fwait
pop
pop
cwtl
sbb
stos
jge
sarl
movsb
add
rcrl
pop
scas
popl
mov
gs
fs
cmp
imul
ja
stc
insl
cmp
xchg
rorl
loop
mov
mov
sti
jbe
mov
inc
ror
ret
shrb
ss
negb
pop
jne
ret
sub
test
mov
sbb
pop
mov
mov
fistpll
add
adc
jne
cmp
and
mov
push
sbb
mov
xor
repz
iret
in
daa
push
rolb
jl
sub
pop
subl
jnp
sti
pushf
insl
mov
test
pusha
sarb
ret
mov
fsubs
aad
mov
jno
jne
in
icebp
xor
jae
repnz
xor
jb
fildll
push
scas
jbe
shll
and
ret
aam
jbe
outsb
gs
push
xchg
and
das
sbb
dec
or
repz
xchg
mov
call
push
push
and
loope
sbb
dec
fldl
test
pop
fidivs
sub
faddp
stc
lret
or
addr16
lds
inc
lea
rolb
xchg
call
xchg
cld
sbb
mov
add
into
sub
notb
sub
loop
icebp
test
int3
imul
shlb
add
push
inc
movsb
add
mov
mov
pop
xor
push
negl
cmp
push
addr16
imul
cld
lret
pop
cmp
pop
and
cmpsb
and
in
testl
push
leave
jl
gs
jge
scas
jg
cmpb
gs
or
insb
mov
jecxz
pop
enter
in
icebp
sbb
push
out
mov
add
push
sub
mov
cmpsb
sbb
daa
movsl
push
cmp
push
mov
cmp
mov
cmp
sbb
or
xor
mov
sub
es
sub
bound
push
shlb
pop
pop
sub
inc
adc
sub
ss
and
aas
fdivs
clc
insl
lahf
cmp
cmp
add
inc
sbb
mov
mov
mov
mov
xchg
into
push
mov
aad
mov
or
fwait
mov
adc
repz
xor
fistpl
push
fcmovnbe
pop
mov
fcomps
jge
pop
add
xchg
cmp
in
and
rorb
out
or
int3
xor
mov
inc
sub
cmp
add
cs
inc
sbb
mov
outsl
int3
xchg
sti
mov
popa
pop
test
sub
iret
pop
mov
in
repz
popf
fistl
sbb
push
daa
dec
cltd
pop
cmpl
ret
sti
insb
mov
jb
dec
xchg
xchg
pop
cmp
sub
jl
mov
arpl
aad
mov
push
mov
jbe
or
sub
push
mov
fwait
cmp
test
pop
adc
push
push
adc
ret
out
aaa
inc
in
pop
push
iret
or
push
in
scas
fwait
add
cmp
dec
push
fidivrl
xchg
pusha
dec
inc
xor
int3
dec
mov
out
int
mov
inc
xor
insb
pop
mov
js
in
insl
ljmp
and
popa
fadds
das
dec
jge
fnstenv
mov
cmp
dec
imul
push
out
mov
jle
bound
push
mov
test
push
movsb
inc
lock
jne
loop
stc
push
fs
mov
inc
xor
mov
or
sahf
cmpsb
sahf
dec
inc
jmp
mov
into
out
cli
psubsb
jmp
rorb
clc
lods
push
icebp
mov
loopne
rolb
movsb
dec
sub
ret
rol
xchg
fmuls
aas
in
push
arpl
addr16
cmpsl
cmc
add
les
cli
mov
cwtl
pop
mov
std
lea
rcl
mov
dec
int3
cltd
push
push
inc
pop
pushf
mov
cwtl
outsl
jle
mov
imul
mov
adc
mov
fidivrs
outsl
or
adc
lret
xor
xchg
lcall
and
pop
jle
cmp
adc
jle
and
cltd
adc
push
inc
xchg
and
push
cmp
xor
bound
lret
adc
pop
into
mov
movsl
push
cmp
mov
pushf
xchg
clc
add
out
popf
enter
ljmp
outsb
mov
or
sub
aaa
adc
jno
xor
mov
addr16
mov
icebp
jle
mov
cmp
xchg
pop
push
mov
leave
add
adc
movsb
cmp
add
dec
xchg
and
jle
fildl
test
inc
pop
das
mov
inc
aam
ss
mov
mov
add
mov
scas
cmc
mov
arpl
xchg
cmp
jnp
leave
adc
aam
sbb
mov
mov
call
leave
fmuls
xchg
mov
push
in
add
movsl
inc
test
popf
add
test
dec
adc
ret
frstor
cmp
jns
out
and
bound
pop
mov
cmovo
fisubrs
adc
fnstenv
daa
cmpb
out
add
or
shlb
adc
dec
mov
pop
or
pop
add
sti
mov
pop
fisubrl
insb
and
cmp
pop
mov
out
xor
sbb
sub
add
and
loopne
mov
btr
mov
fistl
movsb
notb
hlt
rcl
scas
xor
out
dec
scas
data16
std
test
ficompl
xor
mov
add
or
imul
lods
push
mov
mov
mov
jmp
lahf
sbb
or
fldenv
fsubl
cmp
sub
mov
sub
mov
jns
xchg
scas
call
lret
scas
fdivrl
and
pop
push
stc
or
test
or
pop
repnz
lret
aam
add
xchg
cmpsl
cmpsl
mov
lcall
into
ret
mov
mov
sub
sbb
outsb
sbb
or
inc
jg
ficoms
test
xchg
fidivrl
loope
ficomps
dec
mov
in
xchg
jbe
and
xorl
jle
icebp
or
sbb
pop
xchg
jmp
sahf
mov
clc
shll
and
cld
lcall
mov
shrb
insl
push
aaa
pop
or
jmp
dec
pminub
in
sub
cltd
add
sbb
add
dec
adc
jmp
cmc
jmp
jnp
out
cmp
jp
or
xchg
fisubrs
or
xchg
sub
rol
lock
and
add
out
jp
insl
imul
sbb
test
adc
add
xor
sub
jge
mov
mov
enter
pop
gs
xor
fisubl
inc
xchg
mov
aaa
mov
cltd
mov
push
jo
and
xchg
xor
rcrb
loopne
or
insb
pop
mov
test
divl
or
pop
cmpsl
sub
mov
scas
and
push
push
jge
cmc
xorb
mov
push
vmovss
or
shll
xchg
lret
sbb
popf
movsl
sub
cmp
fists
call
int
ljmp
xor
mov
and
cs
scas
cli
sahf
sbb
fcmove
test
inc
adc
add
push
out
test
lods
mov
dec
call
sahf
addr16
adc
cmp
xor
pop
fwait
stos
pop
xor
push
cmp
shr
mov
xchg
aaa
xor
notb
xchg
or
in
add
adcb
shlb
jnp
xor
in
mov
mov
cmp
imul
inc
lcall
std
lods
rcrl
mov
lret
outsl
fdivl
mov
dec
jge
int
adc
push
out
xchg
int3
in
aam
add
neg
dec
xchg
push
out
mov
sarb
ja
es
mov
pop
sbb
dec
pop
dec
lcall
pop
or
lret
push
dec
shrl
push
lods
loope
incb
pop
jge
sbb
rclb
mov
lods
jp
adcl
imul
outsb
xchg
inc
jmp
dec
pusha
pusha
ds
mov
push
pusha
push
rcl
push
mov
pop
inc
dec
dec
ds
es
lds
mov
mov
popa
into
cmpsb
jne
test
inc
xor
in
stos
inc
cli
pop
mov
mov
push
cmc
scas
in
mov
sbb
dec
icebp
cmp
sbb
mov
test
clc
xor
push
inc
push
xor
es
inc
pop
out
je
jecxz
dec
outsl
stc
pushf
mov
xchg
and
xchg
lock
push
out
or
sahf
sbb
or
scas
cmp
jae
int3
iret
ffreep
data16
subl
js
lods
jl
jns
xor
movsb
xchg
das
xchg
adc
adc
mov
aaa
dec
push
adc
mov
xor
xchg
or
aad
aad
bound
xchg
gs
in
xlat
in
negl
ja
xor
rcrl
in
sbb
les
jmp
jmp
into
popl
mov
sti
mov
add
adc
in
add
int3
lock
lock
scas
pop
testl
xor
fiadds
dec
addr16
mov
dec
leave
xor
mov
daa
cmpsl
pop
mov
fnstcw
movb
cmp
pop
aam
addl
cmp
or
push
hlt
cli
or
je
popf
inc
mov
cmp
into
testl
call
xor
ljmp
pop
ret
inc
scas
push
add
ror
nop
shr
jb
mov
iret
sub
add
enter
pusha
mov
adc
push
jbe
outsl
sub
aad
fdivs
xchg
nop
ja
xor
mov
std
cwtl
mov
es
cwtl
out
cmp
lcall
pop
xchg
pop
mov
sti
lods
fisubs
mov
jp
sbb
lock
jns
inc
mov
daa
in
mov
pop
and
out
jmp
xchg
scas
and
movsb
lahf
mov
bound
sti
adc
push
sub
xchg
out
das
xlat
push
out
in
in
ljmp
xchg
xlat
call
xchg
inc
in
and
push
sub
dec
nop
push
push
dec
inc
aad
sbb
xor
ds
mov
shr
mov
test
pop
pop
ret
push
incl
or
lret
cmp
jecxz
push
xchg
sahf
ds
adc
push
mov
popa
lret
sub
loopne
xor
add
mov
cli
push
fsts
xlat
jb
idiv
cmc
lcall
inc
mov
pop
cli
ljmp
dec
sub
inc
repz
pop
add
aaa
adc
cmc
jae
mov
xor
scas
add
lods
imul
scas
movsl
dec
stos
fwait
loope
arpl
adc
loop
or
mov
pop
mov
cmp
or
repnz
iret
mov
cmp
cmp
jo
and
xchg
xchg
jo
sarl
lret
sub
je
mov
fwait
sbb
jl
sbb
pop
sbb
xor
popa
mov
mov
iret
mov
ret
or
sbb
into
jg
stos
mov
push
inc
std
scas
sbb
andl
fs
xor
mov
loope
jge
movsb
sbb
out
repz
xchg
jle
xchg
addr16
xor
inc
stos
dec
add
pushf
mull
pop
es
sub
mov
out
out
jne
outsl
sahf
xchg
icebp
push
inc
sahf
popf
push
test
mov
cltd
dec
and
test
push
outsb
ljmp
das
xor
xchg
and
les
shrl
cmp
push
call
pusha
stos
jl
inc
cld
adc
mov
icebp
or
push
ret
xchg
cwtl
mov
and
push
add
test
xorl
ret
rep
shrl
xchg
cld
mov
fbld
xor
jle
xlat
push
repz
je
add
cmp
loope
mov
dec
out
scas
pop
ret
in
gs
aad
js
cmp
aas
jno
ljmp
sbb
sub
mov
lcall
roll
jnp
fidivl
inc
jge
add
jg
in
fsts
push
cmp
ljmp
lock
mov
not
in
xorb
and
lock
testl
dec
pop
mov
sbb
jno
pop
push
xchg
paddw
cmp
arpl
push
fstpt
mov
jg
pop
jae
xchg
jbe
jbe
or
fsubp
mov
in
jns
mov
fs
pusha
pop
addr16
jmp
push
or
push
inc
test
ljmp
jl
jno
or
jmp
movsl
icebp
mov
and
xor
in
out
pop
sbb
ja
mov
iret
jp
jns
outsl
jge
cmc
jb
int3
loopne
push
stos
push
jns
dec
inc
into
and
or
mov
fildll
cld
cmp
mov
jmp
cltd
iret
dec
fldenv
ljmp
cli
nop
sbb
mov
scas
icebp
pop
das
push
push
ret
push
dec
xor
mov
das
mov
sub
or
popf
daa
adc
daa
shll
mov
imul
pop
lock
mov
pop
sub
roll
in
inc
enter
and
inc
scas
push
add
mov
call
xchg
sbb
mov
insb
pop
test
cld
mov
jno
pop
xchg
xchg
or
jmp
ja
or
sub
xor
mov
inc
lcall
mov
mov
jnp
mov
xor
sahf
loopne
pop
gs
mov
aam
pop
pop
and
sub
adc
test
jb
shll
push
xor
xchg
icebp
or
ja
popf
sbbl
xchg
inc
adc
movsb
dec
pop
jns
cmpsb
cmpsb
loop
push
sbb
mulb
mov
dec
sbb
sbb
push
push
xchg
xchg
out
pcmpeqw
jge
icebp
js
mov
fcmovnu
sbb
lret
xchg
outsb
mov
xor
outsb
movsb
ja
lds
andps
in
inc
rcl
hlt
inc
mov
sbb
mov
hlt
add
in
mov
loop
push
xor
or
ror
mov
adc
arpl
lret
xchg
fsub
push
dec
stos
or
adc
mov
xlat
cmp
sub
mov
scas
or
xor
mov
data16
iret
inc
sub
cmpsl
sub
popa
sbb
incb
cwtl
jne
insl
xorb
fldt
in
nop
ljmp
mov
inc
repz
sarl
lds
pop
dec
and
nop
add
mov
sbb
adc
dec
aam
pop
mov
in
inc
data16
xchg
jecxz
aam
inc
lods
lods
xchg
push
jp
jmp
cmpsb
mov
arpl
or
icebp
pop
sub
in
fimuls
mov
xchg
cltd
jnp
fisubl
das
pushf
fiadds
inc
pop
sub
lods
mov
mov
movsb
xlat
inc
xchg
negl
jg
test
sub
cli
xor
sbb
lock
clc
xor
out
inc
fistps
mov
sub
pop
jae
adc
repz
xor
xchg
dec
fsubs
inc
mov
xchg
dec
xchg
repz
insb
negb
es
sbb
aas
cmpsb
jnp
pop
idiv
dec
aam
inc
ds
adc
lods
adc
out
adc
mov
jne
xor
xor
dec
out
sete
jns
xchg
dec
jecxz
les
mov
dec
scas
fwait
xor
stc
push
push
xor
fcompl
sub
out
pop
xlat
push
jle
inc
pop
call
fwait
test
pop
pop
sar
imul
cmp
pop
call
mov
jge
jae
inc
bsf
mov
rol
sub
sub
out
push
nop
ret
fcomps
mov
xchg
jp
mov
xor
arpl
out
popa
cwtl
xlat
std
cmpsb
fcmovu
sbb
jae
movsb
pop
pop
test
aas
rolb
adc
nop
jp
movl
cmp
cmpsb
mov
sbb
inc
cltd
jnp
dec
push
imul
insb
arpl
jb
into
lret
cmpsl
jbe
bound
push
fisubs
dec
aaa
mov
xlat
nop
lea
fwait
scas
mov
cmp
inc
cmp
mov
xor
push
and
sbb
test
mov
jns
cmc
push
xlat
xor
xchg
in
repnz
xchg
bnd
xor
mov
inc
loope,pn
cmp
out
mov
cwtl
mov
fistps
iret
or
xor
clc
fistps
jmp
imul
mov
sti
sbb
jmp
icebp
pusha
lret
movsb
ljmp
cmp
mov
enter
vmovaps
sub
xchg
pop
lea
mov
imul
mov
shrb
frstor
xchg
fs
pop
mov
popa
and
sub
insl
clc
cmpsl
ljmp
daa
lods
sbb
dec
outsl
or
push
adc
push
dec
in
jge
out
repz
push
and
fs
mov
divl
xor
fcoml
aam
pop
mov
jecxz
es
and
mov
les
xchg
push
sub
inc
out
aas
hlt
popa
jp
push
cli
bound
jbe
sbb
popa
pop
cmp
fsubrl
bnd
les
mov
inc
lods
lds
addr16
dec
sbb
sub
std
cwtl
test
stos
loop
pushf
rorb
aad
ss
call
cltd
arpl
cli
lcall
ja
and
inc
and
adcl
mov
ljmp
sbbl
test
and
xor
push
push
repnz
imul
inc
mov
push
and
test
xor
mov
mov
fcoms
mov
mov
adc
movsb
orl
and
push
movsl
add
cmp
push
adc
in
push
mov
xor
loope
jp
loop
ret
cwtl
sahf
pop
rclb
out
inc
xchg
es
pop
adc
sahf
mov
jp
xor
psubsw
cmp
lahf
mov
pop
sbb
outsl
dec
fcomip
scas
mov
pop
dec
es
adcb
sub
push
mov
nop
in
roll
outsl
xchg
outsb
mov
xchg
mov
inc
fisubrs
jb
sbb
and
jno
mov
popa
mov
fisttpll
cmp
jne
fdivp
push
int
jnp
jae
cwtl
pop
mov
cltd
mov
js
cmp
xor
stos
sbb
movsl
adc
dec
fidivs
sti
jl
sub
push
aaa
inc
outsb
mov
push
cmp
lea
pop
push
sub
in
out
or
push
sub
xchg
mov
cmpsb
cmp
aaa
jecxz
mov
into
pop
jb
div
pushf
add
jl
scas
fnclex
and
jp
mov
pop
aaa
mov
push
test
xchg
aaa
test
enter
mov
adc
push
cltd
mov
test
jno
jo
divb
inc
stos
dec
mov
jns
lock
out
mov
adcb
insl
insl
inc
divl
out
and
mov
pop
dec
lret
add
xor
int
rorb
dec
xor
push
mov
push
xchg
mov
inc
addr16
adc
fcomp
push
dec
sbbl
sbb
hlt
mov
xchg
loope
ret
pop
shlb
pop
cmp
add
filds
or
ret
xchg
cmp
mov
std
cmp
jmp
mov
jmp
outsb
xor
jns
cld
or
aad
or
aad
lods
dec
data16
or
mov
in
pop
ret
dec
jle
int
ja
in
mov
or
dec
and
dec
push
aas
adc
into
pop
fildll
dec
cmp
test
sbb
scas
movsl
popa
pop
jge
pop
mov
or
std
adc
lods
mov
mov
sahf
clc
pop
loop
sbb
xchg
shlb
ret
testb
mov
mov
enter
pop
cwtl
xor
fistps
data16
jle
adc
mov
rcr
adc
mov
dec
loop
add
stos
lret
ds
hlt
push
push
dec
mov
push
mov
addl
sub
out
in
out
out
add
sub
in
adc
test
dec
pusha
sti
or
clc
add
sbb
add
ficoms
leave
pop
mov
adc
jl
sahf
pop
stos
inc
ds
cmp
adcb
outsb
sub
mov
hlt
js
and
push
dec
popa
lret
jo
push
jnp
cs
shrl
aas
lock
loop
popf
sbb
pop
outsb
aam
or
cli
dec
mov
mov
or
pop
std
shrl
xor
adc
mov
fildl
add
adc
bound
inc
out
or
repz
cmp
ds
sub
inc
lods
sub
xchg
sbb
scas
mov
jle
xchg
loope
das
test
dec
into
inc
push
fnstcw
push
or
pop
push
jbe
or
and
or
xchg
fwait
cmp
xor
adc
shrl
xchg
push
ss
inc
mov
pop
mul
xchg
push
jp
mov
cwtl
pop
mov
andb
gs
enter
push
subl
ffree
mov
inc
ljmp
pusha
sub
adc
mov
mov
cmc
push
and
cmp
lods
push
outsl
adc
or
cmp
inc
cli
pop
imul
ljmp
mov
cmpsb
cli
sbb
sub
loope
jbe
dec
pop
push
sub
push
cld
divb
les
push
repz
dec
mov
cs
mov
sbb
cmpl
fnsave
mov
test
int3
jl
pop
jnp
clc
push
fldenv
out
shl
pop
sbb
fistl
xor
mov
lds
inc
push
inc
cmc
stos
pop
divl
outsl
daa
mov
rclb
jmp
jne
daa
xchg
pop
popf
mov
xor
mov
cli
cwtl
sub
sar
shrl
fildll
pop
jg
xorb
adc
movsl
push
pop
sub
xchg
lret
scas
cmpsl
jnp
dec
mov
lock
jp
ret
mov
push
lret
adc
ss
push
or
nop
and
xor
inc
xchg
hlt
cli
xlat
fdivl
lahf
int3
fisttpll
stc
data16
call
jg
sahf
or
test
ret
xor
adc
dec
pop
call
fdivrp
xor
dec
aam
fcoml
push
adc
adc
aaa
push
pop
cmp
ds
xchg
and
cmp
mov
sub
pop
andl
push
sbb
xchg
pusha
xchg
or
in
add
push
imul
out
or
pop
inc
aam
xorl
rcrb
and
shlb
inc
adc
ja
or
gs
popf
sbb
data16
and
or
cmc
imul
ds
jmp
and
pop
pusha
std
jb
pop
jl
and
pop
repz
cmpsl
mov
mov
dec
add
push
icebp
sbb
mov
sbb
inc
xchg
lret
push
push
out
in
or
or
js
loopne
lret
ss
imul
xchg
rcll
sub
dec
mov
andb
mov
cwtl
xchg
daa
out
cmp
xor
cmpsl
add
inc
into
cmpl
mov
loopne
jno
fistpl
sbb
lcall
stos
sub
aaa
lods
cli
out
fldcw
dec
insb
bound
fwait
out
repnz
pop
in
dec
mov
xchg
nop
mov
outsb
sahf
fnstsw
test
jae
cmpsl
xchg
pop
mov
push
cmp
jle
pop
out
scas
std
fnstsw
arpl
repnz
and
xor
mov
pop
dec
shrb
jle
and
add
sub
mov
lds
mov
fidivrl
push
popa
pop
add
cmp
mov
addl
mov
pop
mov
nop
add
xor
xor
mov
inc
in
idivl
pusha
daa
xchg
mov
sub
rorl
ja
push
mov
scas
sahf
jbe
dec
xor
mov
enter
les
aad
loopne
mov
outsb
stos
pop
filds
push
out
mov
mov
sbb
enter
inc
sbbl
shrl
andl
movsb
div
cltd
jo
lcall
jae
add
shlb
and
pushf
mov
scas
in
fidivrs
push
pushf
cmp
pop
jle
inc
adc
sti
jp
sbb
das
imulb
rorb
iret
xchg
loop
ret
push
outsl
and
repz
jo
mov
cs
push
arpl
xlat
popf
addb
xor
mov
xor
data16
insb
mov
pop
jecxz
ret
fdivs
mov
arpl
sbb
leave
div
out
stos
test
stos
mov
and
xor
or
outsl
fsubrl
push
aaa
rcl
push
andl
xor
jge
xchg
icebp
or
imul
insl
xchg
lret
add
cmp
pushf
jg
add
lcall
fsub
or
jae
out
pusha
mov
xorl
test
movsb
lds
mov
xchg
mov
shl
test
imul
daa
push
lret
cvtps2pi
push
fs
mov
loopne
inc
jno
and
mov
mov
jecxz
sti
pop
mov
jp
fidivrl
and
sub
ficoml
gs
mov
adc
js
into
inc
ret
ljmp
xchg
fsubrs
adc
orb
ds
arpl
shll
mov
sti
lods
int
mov
mov
jg
roll
lock
repnz
subb
xchg
fldl
cmpsl
push
mov
test
pop
inc
test
push
cmp
sub
sahf
adc
ss
adc
cmpsb
test
sahf
insl
cmc
and
dec
cli
xor
out
cmp
inc
sti
jnp
outsl
cmp
sbb
jbe
xchg
ret
push
or
inc
ss
movsl
push
add
fcomps
lcall
lods
dec
inc
inc
cmp
into
inc
sbb
addb
inc
mov
rorl
scas
inc
rcll
dec
xor
pop
in
mov
popf
imul
ja
mov
aas
sub
jge
mov
insb
sarl
mov
mov
cli
push
sub
std
rcrl
xor
stc
xlat
sub
repnz
int
sub
lret
mov
cmp
outsl
flds
jp
fildl
pushf
cwtl
imull
xor
imul
adc
subl
push
shrl
cmp
push
add
mov
dec
xlat
sub
rcll
call
nop
inc
mov
nop
cs
pushf
dec
adc
dec
out
outsb
shlb
mov
add
sbb
into
ret
sub
push
cmpsl
sub
adc
ljmp
pop
cmp
and
mov
es
push
push
insb
push
clc
adc
rorb
jnp
jg
cmp
loope
test
test
push
add
imul
jmp
lock
cmpsb
pop
lahf
and
inc
shll
pop
aam
addl
xchg
ds
push
sub
dec
mov
loop
inc
push
fwait
mov
jno
lea
add
xchg
imull
imul
jmp
pop
push
out
ds
lret
test
mov
sub
xchg
movsl
mov
outsl
mov
mov
sahf
dec
xchg
scas
lods
inc
cmp
mov
mov
push
push
mov
jmp
mov
or
out
mov
push
cmp
cmc
inc
pop
mov
push
imul
adc
add
mov
aaa
fiaddl
cmp
aaa
mov
xor
jo
sbb
les
sub
xchg
pop
or
cmp
aad
mov
into
sub
mov
add
mov
aas
lods
aam
inc
mov
sahf
mov
push
lds
mov
cmp
aas
add
and
pop
test
out
mov
jp
jno
mov
inc
sti
cmp
test
andl
imul
mov
push
repz
sub
xchg
add
push
or
xchg
sbb
scas
movsl
rcl
cmpsl
shll
stc
inc
pop
loopnew
icebp
mov
push
pop
pop
pop
mov
dec
adc
icebp
mov
cmp
jecxz
sub
pop
mov
adc
jno
addb
and
clc
adc
adc
push
sbb
lods
cmp
sub
or
add
pop
dec
sub
adc
fcomps
in
rclb
or
cli
adc
sbb
gs
pop
imul
xchg
adc
lcall
call
mov
xorb
hlt
arpl
pop
subl
rorb
push
jb
int
pop
jbe
xor
rcl
sbb
cmp
repz
dec
add
add
push
jno
push
or
or
andl
ljmp
push
scas
fnsave
stos
jmp
pop
and
sub
mov
cmp
repnz
or
xorb
out
iret
jae
xchg
cltd
add
inc
clc
ljmp
mov
xchg
pop
sti
in
les
lcall
xlat
add
mov
or
out
rorb
cmpsb
cmp
push
xchg
jnp
mov
les
shl
popa
fs
push
aaa
jne
inc
and
mov
xchg
xchg
icebp
mov
mov
add
insl
mov
sbb
nop
pop
and
dec
out
bound
add
xlat
stc
ficomps
fnstcw
out
lock
adc
ss
test
clc
jae
and
pop
test
cmp
pop
pop
cli
pop
jb
in
lds
push
out
inc
je
adc
mov
mov
out
adc
adc
xor
xor
mov
add
xor
push
pop
or
cmpsb
xor
out
call
movsl
mov
pop
imul
fdivrs
insl
je
or
das
add
dec
test
pop
aas
sbb
rcll
inc
sbb
pop
mov
mov
inc
popf
adc
sahf
hlt
repz
sub
push
subl
clc
dec
lods
pushf
jmp
imul
push
je
push
pop
out
add
roll
insb
mov
icebp
scas
arpl
xchg
adc
lret
ss
push
icebp
cmp
mov
or
cmc
add
fwait
daa
fiaddl
xchg
or
mull
addl
adc
fildl
sbb
jb
cmpsl
jnp
add
mov
cmp
sub
pop
pop
in
inc
lcall
mov
daa
ja
add
mov
stc
push
inc
sub
xor
test
popf
pop
cmp
add
cmpsl
cli
dec
adc
aaa
xor
jo
sub
mov
xchg
pop
sbb
pop
mov
lret
mov
imul
mov
icebp
pop
inc
aas
sti
enter
mov
adc
es
sti
fwait
sub
movsl
pop
fsubrl
cmpl
pop
das
jg
movsl
pushf
lods
cmp
addps
lret
push
or
or
xor
dec
jle
iret
dec
and
dec
mov
aaa
cs
xchg
pop
cmpb
and
test
push
shrb
leave
and
pop
or
jmp
out
xchg
loope
ret
shl
cli
cmp
push
rol
cltd
xor
aas
hlt
inc
jmp
adc
loopne
push
mov
ret
repz
mov
push
cmp
stos
pop
xor
add
mov
adc
call
add
xchg
repnz
or
mov
xlat
jg
push
into
popf
rcrb
sti
popa
or
adc
sub
pcmpeqd
jo
and
mov
pop
and
xor
imull
sbb
xchg
mov
fstp
lods
push
push
jbe
cwtl
cmp
or
and
es
jns
faddl
ret
jp
cld
mov
mov
adc
mulb
sub
cli
sti
fiadds
adcl
mov
sbb
push
jns
lcall
jns
fmull
fstpl
or
sbb
xor
test
add
mov
push
add
or
lea
data16
dec
mov
outsb
fsubl
lret
rcll
or
movntps
inc
gs
sub
mov
ret
or
stos
hlt
das
pop
outsb
ret
push
or
fsubr
ljmp
mov
adc
sub
jo
ret
mull
stos
and
out
dec
sbbl
or
pop
ljmp
imul
inc
mov
xchg
addr16
stc
cmp
cmp
addr16
add
cld
lods
rclb
enter
ljmp
push
fsts
push
repz
cltd
out
repnz
add
xchg
outsb
popa
fists
ja
adc
jbe
sbb
pop
push
push
mov
in
xchg
imul
sbb
lods
pop
xlat
adc
mov
mov
dec
or
cli
cmpsl
xorb
inc
in
pushf
je
icebp
jnp
repz
jp
insb
lock
fwait
mov
not
dec
fadd
mov
push
add
dec
clc
mov
out
mov
fcmovnu
add
push
ret
mov
inc
push
xchg
adc
adc
add
mov
std
jl
data16
mov
push
imul
jbe
lahf
paddq
loope
fcoms
in
fstp
jnp
cmpsl
mov
scas
dec
pop
or
dec
inc
and
aaa
mov
int3
pop
outsb
int
enter
js
andb
sbb
aas
xchg
push
or
ror
jnp
or
push
das
push
hlt
gs
cmpsb
add
adc
or
cltd
fdivrl
outsb
cmp
push
int3
xchg
int
notl
hlt
dec
sub
loope
jp
mov
aas
sub
sbb
mov
aam
cmpb
faddl
inc
in
adc
and
mov
sbb
clc
jmp
xor
dec
inc
out
xor
sbb
add
hlt
stc
loope
std
push
mov
dec
add
mov
repz
cwtl
adc
and
push
popf
outsl
pop
mov
dec
mov
mov
xor
mov
inc
hlt
sahf
insb
ror
je
mov
sub
addl
loope
sub
leave
inc
fisttps
shl
mov
mov
mov
fucompp
push
loop
ret
nop
inc
icebp
fbstp
push
inc
int3
pop
sbb
mov
ds
aad
cld
in
std
mov
popa
js
inc
add
cld
out
xor
xor
test
in
clc
cs
or
xchg
dec
jecxz
mov
cmp
stos
insb
sub
lods
push
dec
and
sbb
cld
xchg
test
push
outsl
addr16
repnz
mov
push
jns
jmp
outsl
mov
pop
shrl
xchg
rcrl
sbb
inc
mov
add
inc
loope
push
cmpsl
push
and
sbb
adc
jmp
testb
std
and
push
and
mov
xchg
push
xchg
movsb
add
pop
fstps
rclb
jl
push
xor
loop
les
mov
dec
push
js
sbb
cwtl
jmp
jp
push
cli
and
dec
xchg
sbb
mov
xchg
xchg
and
lahf
mov
in
cmpsb
outsl
adc
rorl
fcompl
cmp
ds
sbb
ja
add
lock
and
sbb
cld
push
outsb
test
mov
jo
sahf
jge
addr16
mov
test
stos
scas
inc
aam
cmp
rorb
push
shr
or
or
ss
je
ja
subb
movsl
pop
ds
xor
int3
add
insl
jns
movsb
sahf
aas
lret
add
repz
jmp
pcmpgtw
sbb
pop
and
push
loope
dec
gs
mov
push
push
push
jbe
mov
loop
fbstp
sar
jb
and
pop
cwtd
sub
mov
jne
je
xchg
mov
pop
sti
lahf
or
mov
mov
fiaddl
xchg
push
enter
test
rclb
mov
xchg
mov
sbb
jb
xchg
mov
push
mov
adc
pop
fisubl
pop
jle
push
mov
push
adc
shrl
and
push
pop
fs
stos
stos
imul
div
mov
jge
ficoms
je
and
gs
test
cmp
ljmp
push
mov
push
mov
lret
push
cmpsl
cld
jecxz
addr16
sbb
adc
add
cmp
adc
xchg
in
add
mov
cmp
push
out
pop
and
xchg
out
jecxz
inc
pusha
shrb
popf
and
pop
roll
xor
push
aad
xor
push
inc
lret
mov
pop
cmp
sbb
cwtl
xorb
xorb
ds
outsl
and
add
cltd
xor
push
sbb
lods
xchg
into
hlt
xchg
fldcw
lahf
out
mov
mov
mov
add
mov
int
arpl
mov
jne
fstpt
insb
mov
sahf
addr16
push
xchg
enter
dec
mov
aas
mov
mov
addr16
mov
int
lods
jl
mov
push
into
rclb
cld
ret
mov
sub
call
lods
hlt
cmpsl
adc
movsb
jne
ficompl
cld
popf
mov
inc
push
push
xor
cli
movsb
push
ss
lods
lds
adc
cld
and
lcall
sub
xchg
jae
mov
ja
pusha
pop
or
jb
fs
jecxz
inc
and
repnz
clc
mov
mov
rcll
jbe
mov
or
mov
sbb
inc
imul
cmp
cmp
lcall
mov
hlt
fwait
int3
cmovo
loop
scas
cmp
add
fs
out
rorl
aad
lahf
lea
cwtl
pushf
lret
push
sbb
jb
mov
push
scas
or
or
out
into
outsb
cmp
add
add
popa
adc
pop
mov
push
add
ja
nop
jmp
jae
xchg
fsubrs
mov
mov
ljmp
rcll
push
add
inc
scas
cmp
dec
stos
dec
push
repz
push
outsb
jmp
mov
fcompl
adcb
adc
sbb
and
sub
fnstenv
mov
mov
std
xor
addl
add
ret
pusha
mov
sub
dec
cltd
push
loopne
iret
cmpsb
lds
cmp
sub
lret
gs
in
aam
sahf
movsl
imul
adc
push
mov
ret
xchg
sbb
jns
shr
push
cmp
fs
mov
pop
fs
bound
inc
xor
imul
and
rclb
pop
loop
ljmp
add
mov
andl
cmp
add
test
std
ja
mov
insl
lea
mov
int
jg
bswap
jle
out
xor
fnstcw
xor
and
mov
pop
aad
jno
maxps
lods
xor
ja
mov
add
cmpb
shrl
pop
dec
sahf
jnp
pop
gs
loopne
ja
pop
push
loopne
xlat
mov
js
pop
fbld
fcmovnu
popf
loop
push
mov
lds
or
jns
cmp
ljmp
in
adc
fisubrs
loop
cwtl
jg
mov
shr
inc
lret
xrelease
ljmp
inc
icebp
cmp
pushaw
jno
inc
pop
or
pop
mov
int
jne
jb
mov
and
out
fcmovnbe
adc
mov
jmp
push
push
mov
mov
mov
pusha
jo
mov
fisttpll
insb
addr16
lods
test
and
arpl
mov
dec
mov
mov
out
ja
sbbl
nop
je
fptan
rorb
add
adc
add
sub
aas
aas
ds
cli
mov
dec
sub
cmp
cmp
mov
sub
divl
xor
es
sub
jge
mov
popf
xor
dec
add
rcll
mov
or
mov
lock
mov
fcmovu
das
insl
pop
mov
movsl
dec
outsl
pop
mov
sub
inc
shr
pop
rcr
stos
shl
ret
sbbb
jb
adc
inc
cli
push
rcrl
sub
cmp
adc
iret
xor
sbb
xchg
pushf
sub
into
jl
or
inc
fs
loope
aad
push
jbe
add
add
je
faddl
add
push
arpl
cmp
adc
shlb
sub
sbb
nop
aam
out
fistpll
rclb
push
loop
mov
into
fsubs
push
fstps
cwtl
jno
rcrb
mov
lret
cmp
je
cli
ds
xchg
fisubrl
fimuls
cmp
or
sbb
call
cwtl
dec
sub
out
adc
stc
push
std
xor
sahf
mov
push
cmpsl
xlat
pop
scas
mov
push
jg
jp
flds
jmp
movsb
mov
inc
sub
xor
xor
adc
out
mov
push
lret
and
lahf
add
jle
and
test
sub
lea
scas
jmp
iret
sahf
inc
pusha
repnz
dec
cmpl
xchg
inc
mov
xchg
dec
inc
lods
fadd
cmpsl
iret
inc
inc
push
rcl
outsb
push
mov
add
neg
pop
mov
mov
mov
or
jecxz
imulb
mov
dec
fisttpll
popl
repnz
repnz
daa
in
mov
mov
mov
mov
ja
sbb
sub
push
sub
xor
and
gs
and
push
dec
adc
pop
sbb
daa
shll
xchg
jle
std
repnz
inc
icebp
jmp
test
mov
shlb
arpl
sbb
hlt
arpl
push
and
mov
sub
xlat
mov
sbb
sub
lret
jbe
lcall
loopne
mov
negb
sub
hlt
daa
mov
cmp
jg
adc
mov
fxch
cs
add
fsubrs
adc
loop
sub
cmp
and
pop
pop
in
imul
mov
add
cmp
fisubl
sbb
fidivs
dec
jne
ret
push
cli
push
std
in
sub
push
lret
jecxz
sub
aam
sbb
mov
pushf
sbb
lock
test
ficompl
xchg
or
test
xlat
fisttps
xor
push
es
jno
shl
inc
in
jmp
push
sub
mov
mov
fcomps
and
fcom
andb
loop
xchg
mov
mov
stos
imul
int
or
dec
mull
fwait
aad
jg
push
fs
xchg
pop
jecxz
gs
jae
dec
xchg
test
es
sub
in
shlb
lret
iret
pushf
xchg
cmp
xor
fists
jp
cli
mov
adc
pop
stc
xchg
enter
cwtl
mov
icebp
mov
inc
or
and
in
inc
mov
jp
adc
je
push
and
jg
leave
pusha
pop
sbb
or
shll
mov
cmp
hlt
cmpsb
mov
mov
mov
dec
cld
jge
mov
mov
pop
pop
lcall
jbe
adc
xor
call
nop
pop
mov
xor
lods
lds
adc
cmpsb
jno
test
pop
jae
dec
adc
fs
fimuls
loope
cltd
repnz
clc
lea
in
xor
fldcw
sub
shl
sub
out
push
aaa
jecxz
dec
push
mov
sbb
pop
push
pop
ret
ljmp
seta
cmp
and
popf
fiadds
jmp
daa
rcr
aas
pop
mov
cli
in
insb
and
jo
jl
stc
clc
mov
sahf
sub
test
out
jle
out
jl
fwait
ret
icebp
mov
lock
fiadds
sub
jp
or
loop
mov
movsb
outsb
and
mov
enter
cmp
or
cwtl
insl
in
xchg
or
mov
adc
xchg
out
andl
aam
adc
les
adc
and
lods
in
shlb
mov
xor
les
mov
and
int3
lods
dec
mov
mov
les
testl
imul
loop
push
mov
ja
bound
cmp
adc
imul
dec
fsubs
in
cmpb
sbb
and
jp
icebp
movl
sbb
sbb
out
decl
jmp
ret
movsl
push
sbbb
sub
stc
dec
jge
es
iret
xchg
mov
and
sbb
push
loopne
daa
pop
mov
lret
mov
pop
add
popa
sub
push
mov
sbb
mov
dec
insb
enter
mov
mov
push
push
stos
xchg
cmp
sbb
push
in
int
xlat
ljmp
loop
rorl
dec
cmp
aas
repz
call
jae
sub
test
ss
iret
cmpsl
cmc
pop
es
cmp
in
mov
mov
cmpsl
inc
cltd
mov
ja
xor
clc
adc
sub
pop
cwtl
cmp
cltd
les
outsl
xorb
es
push
out
push
pop
mov
out
and
lahf
inc
leave
xchg
inc
xchg
rorb
addr16
dec
push
jge
cmp
imul
mov
and
mov
add
xor
dec
sbb
mov
int3
xchg
dec
mov
xchg
jae
jmp
cmpsb
cwtl
ljmp
sbbb
sti
sbb
ljmp
mov
dec
xlat
insl
test
pop
enter
sbb
cmp
mov
cmp
bound
pop
mul
std
imul
cli
cld
or
cwtl
mov
enter
cmpsb
test
aaa
pop
movsb
aad
mov
aas
ror
cltd
sbb
imul
mov
leave
sub
in
pop
ficompl
pop
xor
cltd
and
xchg
push
mov
push
xlat
push
int3
xchg
aam
cld
sbb
and
scas
jo
lods
imul
xor
sub
xor
inc
popf
les
add
mov
lahf
jl
adc
cs
sbb
movsb
popf
stos
xor
cmpsl
pop
xchg
mov
mov
inc
jne
aas
push
insl
xchg
cmp
decl
js
ret
aad
xchg
cmp
loope
mov
cmp
sub
or
inc
mov
dec
dec
insl
dec
mov
in
cld
jnp
jmp
sbb
adc
add
sbb
sbbb
push
push
pop
add
adc
sti
jns
dec
sbb
cmp
mov
jle
jne
fsubrs
fucomip
out
mov
dec
je
or
test
repnz
shl
xor
ss
cmpsb
push
pusha
fmull
shrb
cli
mov
test
mov
push
mov
sbb
cmpl
insl
xchg
push
jp
mov
push
jae
lcall
jle
jo
arpl
arpl
into
xor
and
mov
mov
and
xor
repnz
cmpsb
jbe
outsl
cmc
cmp
stos
inc
je
mov
psubsb
jle
bound
fisubs
jl
jnp
fwait
div
add
push
adc
adc
sub
fucomip
adc
dec
lahf
and
push
sbb
mov
cmp
dec
xor
movsb
mov
arpl
mov
jb
or
ret
fdivr
es
fwait
xor
scas
pop
or
lock
mov
enter
xchg
aam
sahf
std
mov
adc
inc
repnz
loope
icebp
mull
push
sarb
jp
jns
add
push
xor
js
mov
cwtl
loop
mov
cld
orl
ret
jne
icebp
adc
mov
les
cltd
or
out
sub
mov
fdivl
sub
stc
fldt
popa
xchg
jle
mov
aas
icebp
adc
andnps
loope
xchg
cli
sbb
and
pop
inc
mov
data16
mov
jl
jmp
shlb
sarl
adc
sbb
mov
or
pminsw
cmc
inc
inc
inc
fwait
and
inc
or
in
aas
int3
inc
push
xchg
lods
out
push
push
cmpsb
inc
test
xor
cmp
ret
imulb
cs
pushf
push
iret
stc
dec
dec
sub
lea
imul
jle
dec
mov
mov
sbb
test
popf
xchg
cwtl
adc
lods
fcmovb
mov
sbb
mov
imul
pop
xrelease
mov
in
add
jecxz
cmp
lahf
dec
sub
ss
xor
xchg
int
push
xor
push
jle
xorl
repnz
add
add
push
xchg
sahf
fisubs
dec
bound
cmp
push
and
add
pop
mov
loopne
jg
rcl
xor
sbb
lock
push
or
call
mov
stos
xor
jp
pop
push
dec
mov
fimuls
enter
sub
add
aas
dec
mov
imul
mov
arpl
cmc
adc
lea
fisubl
or
sub
out
fwait
out
call
fcoml
sbb
pop
jno
movsl
lret
sbbl
fbld
loop
jbe
xchg
push
xorb
imul
mov
iret
pop
scas
xor
xchg
bound
in
iret
jmp
mov
jge
adc
arpl
jmp
jo
inc
das
pop
ja
add
mov
xchg
addr16
pop
sub
loop
add
sbb
pop
je
shl
jb
mov
pop
lret
ffreep
jmp
je
pop
mov
into
xor
movsl
push
push
jl
xor
stos
roll
mov
mov
mov
stos
mov
mov
pop
clc
push
ss
pushf
in
sbb
jno
ret
fisubrs
lret
lods
stos
lahf
es
repz
mov
jge
loope
sti
pop
jmp
aas
mov
dec
mov
jo
cs
xlat
aas
or
mov
dec
pusha
adc
and
arpl
cmp
addr16
sbb
vandnpd
pop
pop
iret
xchg
pop
lods
mov
pop
sub
inc
hlt
int
push
repz
lds
pop
in
lcall
sub
xchg
and
aaa
movsb
push
loope
xchg
pop
cmpsb
lods
xor
sub
lock
xchg
pop
data16
shll
and
in
inc
dec
jbe
push
lock
mov
test
mov
js
dec
in
mov
xor
cwtl
jne
inc
push
and
test
aad
scas
cmovno
scas
call
xchg
cmp
push
mov
cs
xor
pop
data16
cmpsb
cmp
adc
js
sbb
jg
mov
mov
jp
pop
ja
push
pop
and
xchg
lods
jecxz,pn
lods
jae
std
push
mov
dec
test
jo
mov
lahf
js
lods
push
and
add
jecxz
addr16
and
lahf
jecxz
and
hlt
push
into
sub
negl
sub
xchg
daa
cltd
jae
pushf
sbb
test
mov
test
jmp
mov
mov
pop
int
jno
pop
pop
sbbb
popf
lret
sub
xchg
push
xlat
or
push
jb
test
mov
mov
pop
add
outsb
loop
sti
dec
bound
fldenv
das
inc
dec
xchg
push
push
adc
xor
jb
sub
jmp
arpl
jmp
jl
jnp
fldt
mov
inc
push
cmp
sbb
loop
shll
sbb
push
jmp
and
arpl
loop
mov
push
sbb
int3
jmp
xchg
adc
jp
arpl
ret
movsl
ss
inc
cli
xchg
xor
mov
jl
or
lea
inc
sub
ljmp
dec
sub
dec
mov
fdivr
sbb
shr
mov
mov
movsl
insl
dec
xchg
lock
icebp
hlt
mov
mov
dec
sub
pop
repz
mov
xor
mov
adc
pop
stos
mov
bound
ljmp
pop
cs
jecxz
cwtl
jo
mov
xchg
dec
enter
and
jmp
inc
mov
jo
lods
sub
ss
xor
pop
and
test
inc
push
jle,pn
xchg
stos
mov
xchg
cld
sub
cmp
lea
mov
mov
cltd
lahf
lret
jae
and
int3
jno
nop
adc
mov
test
push
mov
lock
dec
push
adc
mov
dec
push
test
and
push
into
clc
ret
sbb
pop
in
jp
or
daa
mov
iret
popl
ds
mov
cmp
ds
mov
jo
divl
inc
iret
jecxz
mov
loop
jne
aam
and
xchg
ret
in
mov
andb
and
jo
jns
movsb
fldl2e
mov
movsb
or
idiv
mov
in
mov
cmp
enter
add
and
xchg
lock
jp
cli
xchg
adc
add
mov
mov
sub
sbb
lock
xchg
mov
add
sbb
sahf
fs
fs
out
fstps
dec
mov
inc
and
fisubs
pop
push
ss
clc
sbb
lock
adc
and
hlt
ret
rclb
mov
sub
xor
push
insb
cwtl
push
test
sahf
insl
movsl
pop
addl
inc
test
mov
out
xchg
sahf
xor
hlt
in
push
sbb
cmp
xor
push
jl
scas
mov
mov
adc
stc
mov
cmp
adc
pop
or
xchg
xchg
enter
pop
cmp
cmp
pop
sarl
outsb
lds
and
imul
mov
addr16
in
push
jmp
subl
outsl
es
jns
sti
dec
aaa
jo
cltd
inc
cmpsl
pop
add
movsl
ds
fwait
aaa
je
mov
popa
fwait
js
fiadds
scas
push
dec
mov
xchg
jp
movsl
lret
pop
fadd
outsb
push
push
imul
dec
or
adc
mov
test
pop
repz
notb
add
xchg
mov
dec
lods
stos
add
inc
xchg
inc
xchg
shll
xor
js
cwtl
mov
movsb
mov
add
shlb
mov
jmp
fistps
pop
xchg
jle
lea
fdivrp
sub
adc
inc
in
push
push
push
push
outsb
enter
or
inc
lods
mov
mov
mov
cli
cmp
mov
push
out
sub
movsl
mov
lea
aad
stc
cmp
dec
push
xchg
adc
into
data16
fucomip
xlat
mov
dec
sub
sub
test
push
xchg
sub
jns
sbb
ljmp
cld
mov
mov
and
js
dec
das
jnp
jae
mov
push
dec
imul
add
mov
jmp
and
dec
xor
push
test
pop
sub
mov
sub
mov
les
mov
je
mov
push
lcall
lcall
movsl
std
ss
pop
or
sti
sbb
add
subl
test
inc
in
call
xlat
pop
inc
push
jnp
std
and
push
lea
mov
xor
fdivs
sti
pop
jp
jo
xor
test
jne
cmp
subl
ficomps
stc
or
lret
lahf
into
int
icebp
and
push
pop
popf
or
xchg
push
dec
mov
in
cltd
repnz
or
jns
les
fcompp
outsb
pop
jb
jne
inc
imul
stos
cmp
ds
in
pop
lcall
or
sbb
shl
push
pop
lea
mov
sub
mov
inc
push
mov
mov
sbb
test
add
popf
mov
insb
ret
pop
xlat
out
orl
xchg
xchg
lret
sahf
mov
or
dec
pop
mov
adc
rcrl
sub
inc
adc
in
push
mov
cs
pop
aas
pop
lahf
pop
icebp
call
rol
enter
push
out
dec
xchg
inc
add
push
imul
es
clc
fsubs
push
cltd
popa
int
dec
and
or
cmp
pusha
xor
test
cmp
sub
cmp
call
mov
fs
in
pop
add
lahf
mov
jle
lcall
pop
inc
clc
dec
jg
repnz
xor
push
repnz
imul
imul
xchg
rorb
push
mov
mov
push
arpl
sub
jp
inc
jns
ljmp
jns
stos
pop
and
insb
push
mov
push
cmp
add
mov
dec
call
or
push
dec
nop
add
sahf
stc
scas
mov
popa
xor
lcall
pusha
rorl
dec
fisttpl
cmc
pop
jno
inc
and
xor
cmp
mov
or
movsl
repz
adc
das
jp
mov
faddl
cmp
or
je
push
cli
jae
pop
xchg
sub
sti
sbb
incl
jo
push
mov
test
push
add
jge
push
fsubs
mov
nop
sbbl
sbb
push
les
adc
dec
push
xchg
imul
pop
cmp
aaa
daa
mov
mov
leave
inc
loop
js
add
pop
test
test
test
cs
xlat
and
mov
shll
mov
imul
add
sub
add
ret
loope
popa
stc
mov
fiadds
dec
sti
jecxz
sbbb
dec
push
lock
stos
push
sbb
mov
int
mov
and
sbb
popf
scas
loop
xor
pop
cltd
dec
idivl
or
dec
into
or
xchg
leave
das
jb
movsl
add
jns
mov
jecxz
mov
ljmp
xchg
sub
sbb
cmpsl
aam
xchg
test
jns
mov
or
lds
mov
inc
or
pop
lcall
push
xor
fwait
cmpl
lds
push
aad
xchg
loop
rorb
sbb
aad
mov
in
xor
mov
rcll
pusha
jge
scas
dec
xor
cmp
mov
roll
test
push
in
push
jp
mov
das
inc
fwait
mov
mov
into
repz
aam
dec
sbb
jle
fistps
sub
pop
popa
int3
cmp
sbb
lods
iret
dec
and
push
cmpsb
lret
jb
in
fwait
cmp
mov
out
repnz
inc
fcoml
ds
sbbl
in
daa
stc
xchg
or
or
lods
add
mov
mov
add
outsl
aam
movsb
add
add
jg
out
xor
mov
inc
lods
and
xor
dec
jo
insl
cmpsl
leave
mov
cmp
imul
clc
xchg
xchg
aam
mov
sbb
cmpsb
jno
adc
lods
stos
pop
aam
outsb
fists
data16
es
insl
jnp
enter
push
mov
bound
dec
mov
xor
push
mov
pop
cmpsl
int
test
cmp
xor
or
inc
mov
push
cmp
push
lcall
mov
fimuls
mov
stos
add
mov
pushf
mov
push
insl
stos
stos
lcall
data16
push
sbb
jp
std
adc
jns
mov
sbb
fidivs
stc
sbb
imul
add
test
cmpsl
xchg
outsl
in
jne
xchg
jae
je
jg
sarl
ljmp
adc
jmp
xchg
mov
adc
xor
cmp
inc
mov
mov
mov
dec
loop
leave
insb
sub
repz
out
int
push
cmc
shll
dec
popa
out
cmpsb
mov
out
cltd
mov
pop
outsb
xor
dec
or
and
mov
adc
addr16
cmp
loopne
es
addl
js
repz
sub
ret
fwait
mov
je
ds
scas
push
pop
in
or
enter
push
pop
xor
pop
out
xchg
jg
sbb
mov
sarl
mov
jg
outsl
cmp
ja
in
adc
sbb
pop
cmpsl
xchg
push
les
push
and
or
mov
push
jmp
dec
daa
movsb
hlt
fcompl
adc
mov
shr
dec
sti
dec
mov
push
imul
out
mov
push
pop
add
rol
add
inc
push
mov
xchg
sub
data16
aam
stc
in
fcoms
into
iret
test
push
pop
fcmovnu
mov
cmp
or
out
jle
inc
jae
cmpsl
out
mov
lock
rcrl
add
dec
jae
fistpll
or
bnd
push
sub
pop
iret
and
mov
mov
roll
jge
divb
xchg
inc
data16
fs
jns
mov
push
fnstenv
nop
add
mov
addr16
ficoml
nop
jne,pn
std
mov
sbb
lods
xlat
mov
dec
out
mov
lret
in
and
inc
fsubrs
bnd
inc
or
rolb
imul
sbb
shl
xchg
dec
mov
jb
bound
xrelease
out
dec
push
cmp
jp
mov
push
decb
jge
xchg
push
sbb
inc
mov
push
mov
dec
sarb
fimuls
int
frstor
mov
add
pop
dec
push
ficompl
xchg
mov
sbb
add
fistps
mov
sub
add
jbe
out
or
out
repnz
push
mov
shll
mov
mov
out
dec
into
push
push
inc
ljmp
enter
je
cs
mov
ficomps
push
xor
lret
mov
jle
mov
cmpsb
cmp
push
cmpl
imulb
jmp
cmpsb
push
cltd
insl
jg
cwtl
and
sbb
add
test
sbbl
cmp
adc
sbb
or
and
push
xchg
cmp
outsl
bound
int
scas
lcall
rcl
cmp
movsl
mov
stos
and
pop
insl
ret
mov
push
pop
sahf
or
cmp
mov
les
jae
jbe
movsl
mov
fdivrp
inc
or
mov
mov
cmp
mov
pop
sub
or
push
push
mov
jbe
loop
sub
fwait
clc
inc
fst
adc
bound
enter
inc
dec
push
imul
out
mov
cmpsb
daa
std
cmpsl
fmul
mov
cmpl
popf
movsb
pusha
push
mov
popf
mov
test
pop
insb
mov
mov
push
pop
dec
push
fistpll
sub
jbe
addr16
mov
shlb
dec
call
and
mov
sub
pop
std
push
stos
cmp
mov
inc
xor
movsl
addr16
pop
ficoml
jge
cmp
mov
aam
pop
inc
mov
mov
pop
mov
nop
mov
dec
add
insl
pushf
xor
aad
lds
mov
outsl
push
test
out
es
les
loop
insl
sub
sbb
test
data16
jmp
icebp
cs
xor
les
js
pushf
cmp
mov
push
sub
fistps
push
iret
mov
inc
test
loope
dec
inc
cmp
movsl
inc
test
addr16
adc
or
inc
cld
mov
mov
mov
repz
popa
push
mov
sbb
mov
out
push
push
add
ret
cmp
push
test
mov
movsb
sub
ficoml
sub
mov
jne
daa
outsl
das
test
pushf
aad
movsl
idivb
pop
cltd
lods
lock
addb
ds
lret
push
push
sbb
stos
hlt
adc
out
aad
loope
xchg
ss
or
mov
pop
sub
lods
inc
sbb
insl
sti
lret
sbb
scas
jmp
push
js
push
adc
lcall
sub
mov
inc
in
lahf
int
add
sbb
aad
fcmovnu
fistl
je
xor
push
sbb
loopne
add
add
inc
or
dec
cmc
cld
add
cmp
add
push
xchg
or
movl
ljmp
dec
fmull
jo
dec
dec
adc
xor
stc
insb
mov
bound
out
and
outsl
and
imul
scas
stc
ss
pop
mov
inc
mov
jno
lods
mov
pop
loop
imul
and
fs
lods
pop
mov
ja
xor
mov
and
inc
jns
inc
pop
cmp
out
cmp
outsl
shll
inc
dec
xchg
push
jl
pop
arpl
xchg
scas
dec
or
movsb
lret
mov
in
iret
flds
mov
insb
scas
push
scas
or
pop
movsb
jp
cmp
mov
test
add
lret
gs
fiaddl
mov
lods
xchg
xchg
add
pop
es
data16
pop
and
daa
sbb
out
ror
fsubp
pushl
mov
stos
sub
arpl
jae
xlat
aad
xor
popa
scas
push
xor
stc
notl
jnp
movsl
sub
cmpsb
sub
cwtl
lods
inc
clc
daa
enter
xor
pop
mov
sarl
lea
dec
jle
mov
sub
mov
stos
xchg
scas
mov
mov
ja
adc
sub
pop
notb
int3
repz
je
orb
sbb
or
mov
mov
push
nop
xor
fstl
inc
add
popf
inc
mov
cmpsl
jbe
mov
push
jns
imul
mov
movsb
insb
mov
addr16
imul
and
inc
mov
fs
dec
lods
dec
inc
test
es
shr
sti
scas
test
aas
mov
jl
inc
vmaxps
jmp
pop
shrb
fwait
xlat
jo
out
imul
and
pop
adc
ljmp
jmp
mov
mov
std
push
lahf
in
dec
add
push
fsubrs
xor
sbb
jg
lahf
cmp
iret
mov
pop
incl
mov
cmp
cmp
imul
xor
in
shrl
cmp
les
scas
shlb
imul
cmpsl
repz
sub
loope
mov
and
xor
cld
mov
push
sbb
loopne
jnp
mov
push
clc
pushf
je
mov
and
jo
cmp
sbb
jl
stos
lret
shrb
jns
add
xchg
fnstenv
shlb
stos
adc
icebp
and
out
jno
jae
lret
jb
gs
xor
xlat
cmp
jno
push
cmc
in
test
jne
push
xchg
inc
jmp
jno
stos
add
dec
add
cmp
add
dec
iret
popa
add
sbb
adc
and
pushf
xlat
mov
add
cmpl
jno
jno
inc
ret
adc
xchg
mov
insl
or
mov
cmp
out
shr
test
fistl
lods
add
or
dec
test
es
clc
jge
inc
cmp
icebp
ret
or
xor
daa
cmc
jecxz
mov
cmp
inc
test
movsl
aas
xchg
clc
fwait
stc
aaa
add
mov
lcall
xchg
clc
leave
popf
imul
js
repz
jno
and
push
je
jge
xchg
pop
mov
xchg
sbb
pop
mov
mov
lea
movsb
push
cmpsl
test
testb
fs
jmp
inc
ljmp
pop
jae
xor
jnp
mov
inc
inc
dec
mov
pop
cmc
lock
inc
rcr
mov
nop
cmp
mov
mov
in
test
in
push
lods
jne
adc
sbb
cld
insb
sub
into
pusha
int
jb
jmp
lret
stc
mov
xchg
icebp
ret
mov
push
sub
dec
xchg
sbb
sti
scas
sbbl
lods
lahf
pop
int3
push
fs
push
dec
mov
pusha
insb
mov
ljmp
sbbl
loope
fstpt
pop
and
add
xor
cmpl
xor
push
icebp
loope
cli
cmp
push
std
push
pop
mov
ss
loope
push
fs
mov
test
cltd
push
dec
mov
or
test
nop
test
movsl
scas
jg
in
fisttpll
or
jle
rcrl
stos
adc
sbb
mov
clc
inc
movsb
mov
adc
pusha
lcall
cmpsb
mov
sbb
sub
sub
js
mov
sub
mov
mov
sub
pop
xchg
daa
in
leave
or
jo
cmp
je
stos
popl
jmp
mov
int
dec
outsl
mov
std
imul
cwtl
stos
call
iret
xchg
cmpsl
insb
pop
mov
jmp
mov
push
cmp
stc
xchg
mov
pop
in
push
sti
out
jmp
add
and
add
sub
jmp
mov
dec
arpl
xchg
xchg
mov
icebp
je
sarb
subl
andl
gs
xor
mov
loop
inc
cmp
cmp
mov
xchg
test
push
mov
mov
xorb
les
sbb
jmp
adc
fistps
cltd
cmp
xor
lahf
int3
rcr
pop
nop
inc
dec
repz
mov
push
sub
pop
xorb
sbb
fsubrl
fs
fwait
lret
decb
cmpsl
jmp
mov
push
fbld
mov
js
or
jmp
cwtl
xchg
lret
jg
dec
ds
scas
mov
shrl
in
fldl
dec
jl
cmp
roll
cmp
clc
pop
xchg
push
mov
movsl
test
mov
push
aaa
adc
insl
loope
adc
pop
adc
imul
adc
sbb
sbb
and
loope
jno
pop
push
std
mov
pop
sub
jecxz
stos
mov
movsb
inc
test
mov
sub
mov
daa
out
xchg
or
mov
mov
test
cli
outsb
adc
mov
pop
cmpsb
push
cld
xchg
inc
outsl
ret
inc
out
nop
inc
mov
or
sbb
gs
out
fsubl
dec
out
add
popa
mov
ds
xchg
lret
sbb
push
loopne
js,pt
imul
jbe
shll
push
mov
adc
push
ds
push
sbb
dec
xchg
nop
cmp
rcrb
mov
scas
les
lret
xor
rcll
nop
push
mov
arpl
add
stos
fdivrl
push
xchg
les
out
add
cmp
mov
cli
cmc
add
xchg
mov
or
xchg
and
xchg
push
shlb
add
or
dec
pop
movsl
lret
push
pushf
clc
enter
add
cmp
dec
inc
jmp
mov
xor
sbb
ficoms
fistpl
mov
out
adc
mov
arpl
sbb
cwtl
daa
dec
in
add
ret
shll
pop
cltd
ljmp
lcall
xlat
jbe
mov
sub
in
fldenv
push
jns
sbb
ja
loopne
mov
pusha
pop
aaa
cs
pop
jge
inc
jbe
cmc
mov
lret
lret
mov
add
shl
push
add
cmp
shll
push
sbbl
adc
pop
in
inc
ror
cmp
insl
sbb
push
je
in
mov
cmpsb
mov
xor
ljmp
in
or
insb
fdivp
mov
jae
xlat
mov
jno
dec
add
rclb
xor
pop
adc
pop
ret
add
mov
adcl
in
in
xor
add
stos
inc
sbb
insl
and
sub
int3
jge
inc
test
adc
dec
daa
out
mov
mov
out
push
mov
push
test
cltd
dec
adc
sbb
fistpll
push
test
adc
and
dec
jmp
notb
inc
xor
insb
jge
and
das
mov
fisttpl
arpl
leave
fdivrs
mov
or
xor
mov
test
imul
add
mov
aas
leave
xchg
mov
inc
jmp
insl
mov
sub
inc
sub
lods
insb
xchg
ret
cmc
sahf
dec
cli
pop
mov
adc
jl
call
movb
or
mov
adc
push
ljmp
lcall
xlat
fwait
mov
call
pop
ljmp
jns
dec
lea
lret
mov
sti
fisubrs
clc
sti
or
dec
adc
dec
ret
outsb
bound
inc
shrl
pop
shll
in
addb
cmp
mov
lret
jg
bswap
mov
sahf
icebp
rclb
xor
enter
hlt
dec
xchg
mov
pop
dec
outsl
call
add
xchg
dec
out
std
cltd
mov
test
andb
and
and
xchg
jl
jp
fs
js
fstpl
jg
inc
fldcw
popa
and
insl
xlat
mov
xor
xchg
sbb
lea
push
mov
cmp
and
inc
sub
add
mov
jnp
call
fisttpll
push
pop
and
cmp
adc
scas
and
pop
sti
mov
aam
sbb
sbb
sub
xchg
xchg
stos
mov
bound
shll
stos
loope
scas
sub
call
js
or
adcb
sti
jecxz
jg
dec
mov
outsb
insl
xchg
pop
or
cmpsb
mov
inc
sub
loop
lret
add
dec
cmp
pop
pushf
push
mov
sti
int
arpl
cmpsb
decb
dec
dec
fistps
and
mov
in
icebp
jp
movsl
notl
mov
adc
shrl
imul
mov
mov
xchg
mov
lret
shl
xor
loopne
push
dec
xor
mov
out
inc
leave
ds
adc
cmc
inc
pop
ret
js
dec
inc
es
pop
xchg
stos
push
cltd
dec
lret
aas
sub
or
shl
or
pusha
sti
fistpl
push
int
pop
dec
and
mov
dec
cli
push
sub
test
adc
fisttpl
sbb
mov
sbb
sub
pushl
sarb
xchg
aaa
inc
mov
dec
hlt
pop
aad
push
sahf
int3
outsb
xlat
ja
outsb
inc
dec
lret
insb
cltd
jbe
sbb
mov
and
add
xchg
ljmp
ret
sbb
lahf
push
push
rcr
pop
popa
dec
loop
adc
shlb
and
pop
xor
xor
mov
in
stc
mov
mov
add
jb
div
jp
mov
decl
js
jmp
jmp
pop
adc
dec
rcr
xchg
pop
pop
inc
adc
lods
bound
movsb
xor
mov
jle
hlt
xchg
in
xchg
xchg
add
les
shr
xchg
mov
inc
xor
lahf
cld
push
mov
inc
sbb
scas
sbb
mov
and
movsb
shl
push
xchg
shl
xchg
adc
sbb
jnp
jp
test
and
jbe
jae
mov
rorb
mov
lea
mov
std
cli
jp
cmc
shlb
pop
inc
inc
in
sub
mov
test
and
sub
add
repnz
dec
out
mov
push
jecxz
mov
or
test
aas
inc
lahf
rcl
jle
xchg
push
xchg
inc
ja
jmp
jp
js
mov
mov
or
arpl
insl
lods
lods
rolb
mov
pop
xchg
inc
ss
insb
sar
dec
add
xchg
repz
jmp
pop
xlat
sbb
jno
jle
cs
and
packssdw
cmove
rorb
call
movsl
jns
divb
cmc
jne
leave
cmc
in
hlt
mov
cwtl
jg
mov
sub
xchg
mov
dec
lret
cmp
outsl
jmp
and
jp
mov
pop
lahf
mov
rcr
in
inc
pop
test
jmp
push
sbb
mov
lret
inc
cmp
jp
xchg
mov
aad
test
insb
outsb
stos
jae
in
test
dec
cmp
enter
pop
push
int3
scas
fists
xchg
xorb
and
add
push
push
repz
out
mov
subb
addr16
xchg
mov
mov
adc
sarb
dec
mov
sti
fldl
mov
scas
shrl
push
pushf
push
ss
pop
inc
sbb
inc
cmp
loope
mov
inc
jb
test
js
out
dec
andl
mov
mull
sbb
pusha
bound
xchg
mov
je
cld
shlb
sarl
sub
pop
bswap
and
addr16
cmp
or
in
push
xchg
add
dec
xchg
ret
mov
sarb
stos
lret
inc
mov
push
sub
xchg
clc
push
in
ljmp
lds
pop
scas
ja
dec
jmp
xor
loope
mov
or
pop
xchg
movsl
sbb
in
adcb
lret
push
xlat
int3
mov
or
add
lods
mov
fisubs
jl
sar
imul
mov
mov
rolb
sbbb
stos
add
push
cld
sbb
jae
clc
lret
je
enter
addr16
stos
sbb
andb
out
mov
fistpl
pop
xchg
sub
dec
pop
fndisi(8087
jl
sub
cmp
or
push
adcb
xor
and
push
fiadds
inc
scas
jecxz
or
cld
out
add
pushf
jmp
and
xchg
mov
mov
jae
stc
push
jecxz
lea
scas
xchg
js
push
std
dec
xor
das
xor
mov
and
fcomip
xor
cs
ficompl
clc
dec
lods
inc
add
xor
enter
pop
mov
mov
movsb
leave
cmpsb
sahf
popf
jmp
lea
ljmp
ds
aam
int
push
dec
mov
fisubrl
and
lret
loop
mov
jb
adcl
xor
aad
mov
adc
pusha
adc
loopne
addl
in
movsb
sub
lcall
andl
pop
mov
dec
mov
int
cmc
int
cmp
aad
ret
jnp
pusha
dec
out
divb
fyl2x
pcmpgtb
sub
push
sub
and
outsl
pop
stos
jne
outsl
cpuid
cli
jl
cmc
dec
inc
adc
daa
outsb
lahf
jns
inc
adc
sti
cmp
icebp
inc
fmul
mov
dec
mov
mov
mov
pop
mov
mov
rcrl
inc
stos
rorb
jg
xchg
jnp
outsb
scas
daa
ds
pop
xchg
jp
pop
clc
std
mov
sbb
push
in
xlat
jbe
or
mov
pop
rcrl
or
sub
sub
aad
out
out
xor
neg
ret
loop
cmp
mov
out
in
cmpsb
stos
xchg
sub
cmc
stos
add
jne
adc
ficompl
fistpl
out
lcall
lahf
cmp
mov
sbb
push
cmp
jle
repz
das
mov
out
jle
in
or
mov
push
test
add
leave
xchg
loopne
sbb
mov
dec
jge
js
xlat
sub
data16
sub
jmp
aad
cld
mov
std
xor
add
sub
xchg
ds
test
jecxz
fisttps
mov
pop
xor
mov
lahf
out
add
jmp
fdivrp
push
repnz
and
mov
or
outsb
rcll
adc
pop
mov
out
lret
mov
push
fidivl
xchg
ja
inc
adc
loopne
jp
lods
jnp
push
lret
lret
push
outsl
pop
pop
dec
cmp
sbb
cld
enter
aas
cmpsl
adc
fistpl
enter
inc
add
xchg
or
lods
loope
push
jle
xor
or
imul
sbb
dec
xor
xchg
sub
movsb
mov
add
jl
lods
dec
mov
outsb
pop
nop
fwait
stos
sub
test
mov
daa
mov
add
xchg
lahf
fisubrl
mov
imul
jbe
inc
inc
xchg
mov
dec
daa
xchg
test
push
aad
shrb
js
sub
stos
push
xchg
push
xor
orb
psadbw
shrl
dec
das
cwtl
push
mov
sbb
icebp
push
pop
rcr
xor
dec
add
ljmp
mov
sub
pop
in
pop
test
out
sbb
mov
fisubrs
fdivl
mov
push
or
das
xor
and
gs
push
cmp
stos
std
gs
push
rorb
sbb
dec
test
test
cld
in
sub
repz
dec
pop
ret
insl
arpl
daa
jbe
mov
xorl
sub
fwait
jbe
test
jle
nop
subb
xlat
popa
mov
xor
mov
inc
divb
pop
call
adc
mov
loopne
rcl
data16
xor
rolb
call
push
pop
xchg
lret
cld
push
repnz
imul
clc
push
out
push
scas
push
or
inc
stos
pushl
mov
out
add
mov
fadds
xchg
mov
lret
lcall
mov
pusha
sbb
add
pop
pop
aad
stos
xchg
xor
popa
test
mov
or
xor
mov
sti
mov
inc
inc
icebp
adc
and
push
add
jg
cmp
leave
mov
pusha
les
bound
or
sbb
imull
xor
push
add
cmpsl
sbb
cmpsl
jnp
xlat
mov
fldt
cmp
pop
mov
lds
adc
xor
mov
adc
lret
fcomps
lahf
sti
and
ss
xchg
call
shlb
les
sahf
mov
mov
and
dec
into
sbb
lahf
push
stc
loopne
loope
fcoms
ret
xor
cmpl
cmpsb
js
loopne
pop
mov
sbb
and
dec
test
repnz
xor
ror
mov
das
cmp
pop
add
add
and
push
sbb
andl
test
lea
mov
dec
adc
adc
mov
ja
orl
sbb
push
sbb
pop
std
dec
je
icebp
in
das
inc
sub
jae
and
in
jb
enter
out
sub
mov
movsb
adc
data16
dec
jnp
int3
adc
lret
push
inc
and
aaa
into
sahf
push
pop
sti
rcrb
loope
sbbl
lods
jge
push
ljmp
dec
jl
sbb
push
add
inc
fisubrs
inc
pushf
jne
cld
push
xchg
mov
add
mov
mov
sub
jns
cmpsl
and
cltd
jg
ds
xchg
sbb
mov
inc
enter
test
sbb
pop
sub
cmpsl
push
adc
aaa
and
inc
pop
dec
aam
stc
xchg
in
mov
incb
out
arpl
or
sub
xchg
xchg
int3
push
or
push
cwtl
add
sahf
leave
jle
xorb
jmp
jmp
mov
push
lret
int
sti
ds
movsl
pop
ja
mov
js
dec
push
push
xor
rcr
push
lods
movsl
push
jb
jae
movsb
dec
mov
inc
loop
loop
decl
push
adc
sub
sbb
cmc
ds
test
sub
sti
insb
fstps
cmp
inc
mov
pop
mov
mov
mov
cld
pop
fbld
xchg
into
jnp
aad
in
cmp
jns
inc
jp
sbb
mov
xchg
rcrb
cwtl
sbb
mov
cmpsl
pop
cmpsb
adc
inc
lods
adc
jb
into
cmp
hlt
lods
adc
dec
shrl
lahf
cmp
nop
mov
inc
push
or
pop
iret
cld
pop
and
sbb
test
push
int3
and
push
pop
add
adc
test
lret
xchg
mov
xchg
inc
loope
cwtl
dec
push
ret
aad
fcmovbe
pop
inc
jmp
es
cs
cli
cmp
xor
dec
dec
lret
inc
fmuls
mov
out
bound
and
adc
jp
lds
mov
movsb
or
lods
inc
icebp
in
cmc
xchg
hlt
mov
mov
jle
leave
or
sbb
mov
push
xchg
in
repnz
sbb
adc
jb
pop
mov
gs
aaa
sbb
rorb
mov
sbb
pusha
aam
add
sbb
fdivrs
push
push
test
out
push
aaa
xor
repnz
or
pop
jl
mov
test
inc
xlat
leave
cld
outsb
jo
sbb
scas
inc
lret
mov
or
xchg
ja
cld
mov
push
aad
aad
repnz
add
add
pusha
leave
bound
call
ja
jns
push
mov
sbb
and
loope
loopne
inc
and
dec
xchg
cltd
add
test
sahf
test
sbb
cmp
shlb
sbb
repnz
mov
or
cmp
cmc
lock
xchg
jnp
in
pop
jg
sub
and
mov
mov
lcall
mov
adc
movsl
dec
dec
pop
data16
sub
mov
mov
adc
pop
and
or
in
sti
adc
xchg
dec
repnz
cmp
xor
roll
dec
and
jmp
sbb
mov
cld
pop
xchg
pop
jmp
mov
sbb
lret
add
or
addl
adc
cmp
ret
lea
shrb
leave
insl
nop
outsl
sbb
jecxz
pop
cmc
sbb
jae
or
adc
or
idivb
push
pop
sti
adc
and
cmpsl
sbb
popl
xchg
pusha
bnd
les
xchg
test
cmp
and
rcl
jno
sub
loop
std
int3
out
mov
out
subb
mov
movsl
bound
popa
shrl
lcall
and
mov
repz
insb
jo
cmpsb
pushf
rcr
call
int3
insb
das
scas
int
sbb
xor
mov
in
out
xor
xlat
jle
xchg
jecxz
jnp
stos
jae
jmp
push
lods
xchg
xor
and
add
xchg
lahf
and
sub
int
pop
inc
ja
fcmovne
cltd
outsb
adc
pop
out
stos
pop
mov
ret
mov
xor
dec
mov
jmp
mov
clc
pusha
dec
mov
push
and
push
out
pop
or
in
js
je
jecxz
inc
leave
inc
sbb
lret
xchg
jno
imulb
sbb
mov
inc
adc
jb
ss
stos
xor
xor
sub
xchg
int
push
mov
add
dec
fisubl
pop
outsl
inc
inc
aaa
xor
pop
scas
xchg
mov
test
cmp
push
and
ret
mov
pop
daa
test
push
inc
ljmp
mov
sub
insb
notb
dec
repz
jno
imul
push
int
sub
add
cmc
gs
pop
jge
pop
das
test
inc
xchg
add
insb
repnz
int3
push
enter
push
pop
inc
xorb
jb
sub
sbb
jb
mov
xchg
cmp
xor
rclb
loope
and
lock
dec
js
nop
arpl
das
dec
cmp
cs
daa
int3
pop
dec
push
mov
xchg
loope
mov
push
gs
div
aas
in
fs
inc
orl
inc
dec
mov
adc
popa
sbb
lret
add
in
sti
cs
adc
iret
in
out
aaa
mov
cmp
jp
inc
dec
fmuls
daa
mov
gs
int3
ja
mov
les
mov
ror
pop
sbbb
mov
push
cld
inc
xlat
out
lret
les
stos
pushf
or
cmp
loope
and
cli
sbbb
or
insl
pop
sbb
pop
add
lds
dec
and
orb
dec
and
xchg
scas
mov
dec
and
movsl
fdivrp
pop
push
in
fisubrl
xchg
and
cwtl
mov
mov
mov
out
aam
clc
int
push
sbb
roll
lahf
nop
xchg
ss
or
sub
scas
stc
jnp
mov
cmc
mov
add
adc
jle
inc
lret
mov
rorl
mov
insl
fsubl
adc
push
out
cli
outsb
popf
jo
jb
xchg
or
std
outsb
inc
jbe
adc
aam
fwait
dec
push
out
ds
mov
adc
fcompl
xchg
mov
xchg
hlt
push
test
dec
add
cmp
inc
int
les
push
mov
inc
cmp
mov
and
decb
shll
lret
fimuls
inc
cmp
xchg
hlt
gs
fst
push
or
sub
xchg
cmp
mov
pushf
push
movsb
adc
shr
cmpsb
rclb
cmpsl
fisubrs
and
jnp
dec
fsubs
xchg
aad
arpl
add
jb
sbb
cwtl
inc
jo
adcb
bound
je
mov
lcall
or
ficoml
mov
pop
arpl
in
sbb
dec
ret
push
pop
aaa
sbb
mov
sti
push
jnp
je
dec
loope
push
lock
push
or
jmp
mov
xchg
out
jge
rcr
sbb
int3
pop
cmp
out
or
aam
scas
popf
lods
fcmovnu
pushf
loope
dec
out
ds
adc
sub
mov
xchg
idivl
cmp
stos
mov
jno
mov
mov
jno
popa
shrb
jg
adc
mov
xor
fcomip
mov
dec
mov
jno
mov
inc
mov
dec
sahf
sub
test
insl
ret
lods
xor
jmp
into
adc
ss
mov
push
ss
sbb
mov
jns
arpl
pop
xchg
cmc
scas
jnp
sub
lea
and
and
clc
and
push
fldcw
cmpl
fisubs
or
in
push
cmp
or
jnp
mov
out
cmp
ds
mov
jo
mov
add
insb
iret
imul
cmp
pusha
mov
fs
sbb
out
mov
clc
mov
pop
jnp
into
arpl
or
mov
pop
add
mov
mov
loopne
jg
mov
add
fsts
push
fisubrl
in
or
mov
pop
xchg
mov
push
fisubrl
es
mov
xor
inc
jbe
push
sub
int
mov
lcall
jae
xchg
es
shlb
mov
cmp
cmp
fs
xchg
mov
sbb
jp
clc
ret
mov
pusha
shlb
add
imul
xchg
dec
push
inc
sbb
and
test
inc
call
add
or
xchg
sahf
cmp
scas
or
in
dec
pop
and
or
push
jmp
mov
jmp
mov
jns
jno
or
cmp
testl
pop
nop
mov
mov
mov
lret
push
lock
cmp
repnz
mov
ss
int
adc
sub
out
sbb
add
mov
push
test
test
add
out
neg
mov
jge
mov
in
orb
xor
mov
aaa
pop
or
imul
in
icebp
lods
fldl
mov
leave
inc
insb
inc
test
xchg
addr16
fistps
push
lret
push
out
das
aas
int
out
ret
jne
xor
fistps
addr16
push
mov
fdivr
lret
data16
or
mov
ja
pop
test
mov
cmp
loopne
sbb
inc
mov
push
xchg
sub
mov
push
dec
pop
jbe
adc
cmp
inc
loope
orb
scas
inc
add
dec
bound
inc
xchg
daa
leave
push
stc
imul
xchg
jmp
cmp
xorl
loopne
pushf
cmp
add
jmp
mov
pusha
jp
lret
push
fimull
outsb
out
lret
stos
iret
rolb
dec
movsb
mov
sahf
sbb
mov
bnd
roll
lds
pop
popf
mov
int3
arpl
and
inc
insb
inc
fcmovnu
stos
sbb
pop
inc
add
xchg
fldenv
gs
xchg
pushf
ds
insl
sbb
test
decl
push
hlt
cli
rep
sti
gs
jl
pop
lret
add
xor
or
mov
xchg
test
jmp
or
ljmp
cld
push
sbb
cmpsb
leave
sub
mov
test
sbb
jl
insb
and
push
repnz
stos
pop
mov
mov
lds
cwtl
dec
jbe
and
add
dec
jnp
jne
dec
cmc
clc
push
out
subl
adc
mov
jb
cmp
push
jnp
push
test
cmp
icebp
push
mov
mov
sbbb
movsl
inc
mov
dec
jp
stos
push
pop
and
scas
xchg
ror
insl
std
lods
xchg
mov
cmpl
pop
mov
into
mov
and
mov
lcall
jl
ret
jae
fisubrl
mov
fwait
int
add
arpl
jo
mov
push
pop
nop
cmp
inc
cli
fstl
outsb
xor
aam
adc
jle
mov
shlb
add
pushf
jbe
mov
fistps
jmp
and
sbb
cmc
rcrb
mov
jl
or
ja
je
mov
movsb
mov
sub
or
adc
mov
mov
gs
pop
mov
adcb
mov
push
push
mov
jecxz
xchg
xlat
mov
xchg
push
cmp
push
sbb
sahf
add
xchg
sub
in
inc
inc
leave
scas
std
rcrl
lea
mov
mov
xor
mov
fiaddl
outsl
imul
jno
xor
ljmp
dec
stc
sub
subb
add
cmp
adc
stos
lods
mov
push
bound
daa
lret
xor
xor
in
pop
dec
mov
ret
jp
jns
mov
or
xor
sub
sahf
mov
sbb
popf
jno
adc
andl
fninit
inc
push
push
sti
fs
sub
test
push
test
sbb
jae
push
aas
mov
mov
dec
mov
hlt
sbb
jmp
pop
mov
add
arpl
imul
inc
xor
sbb
mov
scas
hlt
pop
pop
push
dec
jg
mov
cmp
and
sar
jmp
cmp
and
iret
lret
mov
push
gs
out
imul
lock
mov
repz
outsb
jae
sti
pusha
xchg
dec
xlat
sub
mov
ja
adc
pop
and
roll
mov
sbb
fldl2t
ss
push
clc
add
push
popa
std
shlb
sub
sbb
shll
fldl
stos
je
sub
outsb
and
mov
sub
mov
lret
andb
arpl
adcl
pop
sbb
sbb
push
int3
xor
cld
or
enter
push
push
repz
cmp
ljmp
sti
sub
call
adc
dec
out
sahf
les
pop
xlat
pop
rcl
ror
push
cmpsl
ja
ret
mov
xchg
and
call
mov
pop
in
fsubrl
scas
add
mov
iret
adc
xchg
dec
xor
mov
pop
inc
lods
jbe
push
fldcw
lcall
mov
xor
repnz
test
cmp
xchg
enter
idivb
fcomps
test
push
push
adc
sahf
mov
aad
jl
mulb
fdivrp
aam
data16
das
xchg
rcll
lea
sub
int3
inc
inc
cmpsl
adc
out
popl
into
int
or
mov
scas
sahf
mov
les
ss
fucomip
clc
inc
push
pop
pop
or
mov
leave
xor
sahf
iret
pop
imul
xor
das
lahf
les
out
mov
ljmp
jp
test
push
sarb
xchg
sub
jns
cltd
out
bnd
les
aaa
lds
shr
dec
aaa
cmp
mov
pop
fs
mov
sub
xchg
loope
xor
mov
adc
dec
sub
mov
sub
inc
jp
pop
into
imul
iret
repz
lret
dec
stos
fmull
sbb
inc
dec
jmp
sub
pop
dec
test
sub
aas
outsl
mov
fwait
mov
mov
movsl
mov
in
mov
sti
sysenter
out
insb
int3
xchg
mov
es
scas
imul
add
lret
fistpll
add
loopne
leave
setp
push
jno
adc
cmp
mov
inc
loope
lea
push
sarb
cmpsl
inc
shlb
inc
sub
loopne
pop
ret
mov
dec
lahf
lea
sbb
fisttps
sub
or
xchg
shlb
stos
jmp
clc
out
xor
dec
jne
or
jge
rcl
cwtl
dec
or
jge
movsb
es
es
inc
sub
lods
and
outsl
pop
imul
cmpsl
clc
cmp
js
jae
mov
push
test
inc
jecxz
xor
cmp
or
cmpsl
in
rorl
lcall
mov
push
ficoms
push
pop
rol
jno
lret
inc
add
push
cld
lds
enter
inc
mov
push
je
adc
fldenv
dec
jg
mov
popa
push
insl
loop
dec
icebp
xchg
out
pop
pop
movsl
fmuls
cli
ds
cli
inc
lods
inc
cltd
stc
xchg
test
xchg
add
or
mov
mov
jmp
rorb
xor
dec
jmp
push
or
adc
scas
inc
mov
jle
das
popf
xor
push
cld
cmpsl
insb
sub
pop
adc
cmp
rorl
aad
mul
dec
lods
xor
xchg
movsb
popa
das
into
push
mov
jp
fisubs
lds
cli
shrb
inc
add
sub
sbb
inc
imul
pop
sub
jp
addr16
stc
mov
adc
mov
movsl
in
lret
inc
add
mov
call
roll
push
or
lods
push
and
popf
adc
out
test
icebp
inc
iret
inc
or
cli
mov
ret
inc
sbb
outsl
inc
sub
call
clc
mov
pop
inc
fldpi
aad
sbb
pop
aaa
pop
adc
jno
dec
pop
sarl
inc
lods
pop
mov
std
push
sahf
cltd
mov
lods
or
scas
mov
iret
pop
inc
insb
nop
aaa
fsincos
lcall
loop
leave
mov
out
mov
pop
mov
push
aam
test
sbb
mov
and
pop
bound
push
push
inc
nop
add
mov
push
push
addr16
in
push
cmc
and
and
inc
jmp
jb
xor
test
add
xchg
test
fisubl
cltd
push
sbb
ret
mov
inc
mov
jmp
aaa
xchg
out
push
mov
pop
movsl
jo
sahf
insb
push
pushf
call
out
int
sub
adc
sbb
dec
xchg
add
xorl
sub
fsubrl
cmp
mov
out
jecxz
jmp
dec
fidivs
push
xchg
mov
push
push
ds
insl
out
shrb
pop
mov
lret
push
push
pop
inc
lods
flds
shll
jne
pop
jnp
gs
jge
jae
out
push
cltd
cmp
sar
cwtl
jo
outsl
xor
loop
adc
pop
pushf
xchg
mov
fnstsw
loop
mov
pop
cli
aas
xchg
or
or
and
aas
mov
aad
bound
nop
loope
popf
cmp
and
stos
insl
iret
push
stos
sub
and
pop
ficoms
add
sub
loop
cmpsb
mov
push
fildll
out
stos
cmp
xor
xor
mov
jp
mov
and
arpl
mov
cmc
xchg
adc
fsubrl
aaa
push
dec
outsl
mov
push
push
cmc
icebp
call
cwtl
pop
out
shl
adc
enter
jns
ljmp
std
fcom
sub
movsl
je
sub
adc
jmp
ret
int3
add
mov
mov
sub
pop
rcrb
lret
mov
and
pusha
add
add
add
xchg
into
stos
mov
mov
mov
roll
pop
dec
into
pop
dec
add
add
lret
mov
int
aas
outsb
lods
pushf
add
sbb
lds
repz
xlat
xchg
sbb
orb
cmp
sahf
sub
lods
rorl
imul
dec
or
mov
inc
xor
ds
inc
out
cmp
mov
cmc
out
push
cmc
repz
movsb
ret
jae
or
push
sbb
adc
fsubrs
cmpsl
rcr
cltd
scas
ja
xor
add
inc
adc
into
adc
xchg
mov
pop
stc
add
dec
push
clc
stos
xchg
fldcw
cvtps2pd
inc
scas
in
je
jne
in
push
sub
dec
push
in
jbe
shlb
leave
xor
sub
mov
mov
mov
pop
pop
iret
daa
ret
fimull
dec
adc
or
scas
lods
ds
sar
mov
xor
pop
mov
or
ljmp
pop
dec
pop
in
push
js
mov
loope
out
jbe
dec
push
faddp
add
mov
sahf
sbb
mov
mov
mov
mov
xor
mov
xchg
dec
sbb
xor
hlt
inc
xchg
cltd
adcl
iret
outsb
pop
repz
inc
movsl
jl
shll
test
gs
rclb
mov
mov
ffree
cmc
andl
or
outsl
flds
cmpsb
dec
add
sub
cmc
jnp
inc
push
add
dec
ffree
cmpsb
in
pop
loop
dec
add
int
sti
iret
ds
xor
imul
and
xchg
ja
fs
cmpsl
subb
data16
xor
add
and
dec
sarb
stos
movsb
stc
push
int
stc
popa
mov
mov
xchg
cmp
xor
outsl
mov
add
movsb
sbb
mov
ror
subb
fsubp
pop
inc
jb
mov
inc
outsb
and
inc
int
fistl
pop
inc
hlt
xor
das
inc
sub
sub
inc
or
sub
cld
fmul
sub
fstl
adc
xor
in
and
and
ret
popa
loope
pop
daa
movsl
pushf
ret
mov
int
inc
pushf
mov
push
add
insl
adc
lods
nop
scas
adc
add
inc
add
or
movl
mov
outsb
sbb
shll
subl
sbb
shl
adcb
dec
mov
mov
sbbl
cmpsb
push
jecxz
pop
repnz
add
jbe
mov
popf
xchg
mov
fwait
cwtl
repz
in
icebp
jg
and
pop
push
fwait
sub
add
pop
fidivrs
xor
add
pop
popf
cltd
in
cmp
insl
or
ljmp
add
jb
cmp
xor
or
pop
js
loop
pop
ret
insb
or
push
lods
adc
movl
cmc
sub
lret
fldt
sub
lds
xchg
sti
add
xor
dec
lret
int
jns
cmpsl
jno
pop
mov
push
dec
imull
jbe
leave
pop
pusha
dec
adc
mov
pop
shll
insb
push
lahf
popf
push
xchg
xchg
jle
call
jmp
xchg
lcall
int3
push
rol
daa
lea
cld
rclb
cs
add
dec
jge
cli
out
inc
loopne
std
iret
sub
adc
dec
vmovsd
or
nop
dec
mov
insl
cmp
ljmp
inc
arpl
aam
rorb
jb
push
rcr
movsl
inc
xorb
sahf
pop
or
push
lea
cwtl
mov
test
fistpll
add
or
stc
push
adc
insl
ss
fadd
xchg
pop
into
dec
cmp
push
out
in
std
sarb
lret
jnp
sbbl
cmp
scas
pushf
movsl
pop
mov
fcoms
adc
shl
pop
jmp
call
xchg
mov
iret
dec
inc
jbe
fildl
xchg
adc
insl
mov
loope
mov
lods
les
sub
mov
mov
push
sar
dec
sbb
jb
subb
clc
add
leave
cmpsl
and
push
inc
cmp
xchg
cmp
dec
add
jne
lods
outsl
jl
stc
push
adc
xchg
enter
push
jle
xchg
inc
mov
shr
mov
je
test
inc
dec
loop
outsb
test
repz
sahf
test
inc
xchg
sub
jae
aam
jno
cmp
cld
inc
imul
pop
xor
loope
ficomps
add
or
adc
xchg
inc
stc
cwtl
adc
jl
lcall
sbb
or
mov
jae
add
enter
mov
lahf
xchg
mov
jmp
out
xor
inc
cmpsl
sbb
push
and
pushf
dec
pop
popf
mov
add
loopne
pop
jno
into
mov
clc
loope
mov
pop
stos
push
sbb
jle
repz
push
imul
out
fists
pop
adc
lock
fsubl
cs
movsb
call
sub
out
push
or
dec
sub
jnp
and
outsl
nop
push
push
out
pop
cwtl
pushf
mov
clc
add
fs
cld
aam
mov
mov
mov
and
cmpsb
insl
jp
pop
cmp
ljmp
fsubl
jle
rorl
subl
jp
push
sub
add
mov
jl
and
xlat
mov
xchg
inc
cmp
inc
mov
xor
in
or
cltd
mov
sar
pop
mov
xchg
aad
or
mov
push
push
outsl
mov
mov
adc
xchg
add
jle
xor
lret
das
or
push
out
push
add
mov
mov
hlt
enter
jae
test
sub
cmpsl
negl
pop
cmp
pop
mov
adc
inc
push
inc
pop
xor
int
sbbl
loop
dec
pop
cmp
hlt
push
std
push
insl
lea
iret
pop
add
and
inc
push
or
cmp
pop
add
in
stc
std
jns
adc
push
rcr
and
xor
or
mov
jecxz
arpl
xor
mov
mov
mov
nop
pop
cld
sub
mov
and
popf
dec
test
daa
sub
sbb
lock
sub
fcoml
movb
rcl
neg
test
stos
mov
push
pop
pop
or
dec
in
pop
or
mov
repz
loop
aaa
dec
in
int3
pop
je
inc
inc
or
orl
fadds
popf
gs
bound
adc
movsb
out
adc
into
and
xor
or
pop
in
mov
xchg
movsl
xchg
adc
or
test
cmp
lret
into
fsubrs
mov
into
bound
insb
sbb
sbb
push
cltd
xchg
data16
adc
mov
push
aam
shrl
roll
jns
outsb
popf
js
sbb
mov
xchg
sub
es
push
adc
rcll
cltd
jnp
cmovno
pop
push
pop
stos
and
pop
cs
lock
lods
mov
or
js
jo
mov
movsl
push
fbld
mov
xchg
shrb
dec
and
and
je
idivb
ret
cmp
int
js
out
push
mov
and
xchg
and
cmc
test
lret
movsl
xor
lods
inc
lret
lea
fdiv
dec
hlt
out
jmp
mov
mov
dec
sbb
mull
dec
lds
xchg
jnp
js
mov
les
iret
cld
gs
mov
lcall
fcmovnu
stc
imul
sbb
jle
scas
mov
test
fldcw
fisttpl
enter
mov
sub
stos
xor
popa
cld
or
xchg
fcomps
xchg
fs
gs
xchg
jns
mov
aas
cmc
and
xchg
cmp
add
mov
mov
sbb
push
inc
call
xchg
jno
sbb
sbb
sub
outsb
jno
push
cmp
bound
mov
arpl
loop
mov
aas
jne
setns
leave
push
push
adc
int
into
mov
and
imul
mov
data16
fbld
push
jg
jp
lcall
sbbl
lret
mov
sub
dec
add
loop
shll
lcall
mov
lahf
mov
mov
mov
xor
addr16
stc
clc
or
fsubp
rorl
in
xlat
jne
add
push
inc
pop
mov
pop
cmp
addr16
xchg
inc
js
insl
cmp
mov
sub
out
xor
loop
adc
je
test
in
mov
adc
ja
lcall
or
aam
sbb
fildll
imul
jle
cmc
hlt
pusha
daa
insl
idiv
cs
xor
bnd
icebp
xchg
out
sub
pop
jle
inc
mov
hlt
imul
int
inc
mov
xor
les
int
rol
repz
stos
sub
cmpsl
push
cwtl
cs
pushf
cmp
imul
jno
in
sub
push
inc
popf
fldl
pop
xchg
mov
mulb
clc
cmp
mov
in
add
inc
add
cs
pop
cld
lret
xor
xchg
in
into
in
and
push
sbb
insb
pusha
int3
movsl
mov
xchg
push
aas
lcall
push
inc
xchg
fldt
push
cmp
fsubl
lods
jo
and
xchg
lock
test
mov
adc
jp
push
cmp
inc
push
push
fs
and
je
pusha
xorb
ds
and
adc
add
aam
or
aad
mulb
test
fisttps
insb
xor
jno
push
jmp
jae
and
push
add
dec
mov
repnz
cmc
push
inc
push
add
lahf
cmc
sub
mov
test
test
mov
jle
xlat
sbb
sub
jl
jo
pushf
movsl
sbb
pop
or
or
inc
xchg
inc
test
mov
fbstp
cmp
pop
xchg
movsb
jnp
mov
fsqrt
lock
dec
xorl
fstpl
mov
movsl
sbb
push
nop
mov
mov
mov
adc
sti
ret
mov
test
andl
push
pop
addl
xchg
push
push
mov
cmc
pop
xchg
and
mov
inc
mov
inc
bound
dec
sub
fists
jbe
int
pop
push
dec
inc
in
jp
xchg
adc
mov
cmp
sbb
xor
inc
jl
sbb
je
inc
repz
push
pop
sbb
iret
je
fldenv
cmp
enter
pop
out
xlat
xchg
push
mov
jns
insl
or
mov
pop
ror
ds
mov
lds
fidivs
push
fstpt
enter
add
mov
dec
jnp
arpl
sbb
fadds
dec
xlat
xorl
test
cs
add
push
mov
aas
popf
inc
cmpsb
or
sahf
xor
icebp
adc
push
ret
sbb
xchg
mov
sahf
lret
push
sar
paddusb
mov
fdiv
inc
dec
test
sbb
xchg
sbb
hlt
dec
fcoml
mov
push
sbb
dec
push
in
adcb
test
adc
pop
xor
gs
mov
adc
cli
jge
and
cmpsl
xor
es
clc
mulb
shufps
sbb
out
insl
out
push
mov
pop
enter
pop
bound
cli
loopne
mov
jno
movsl
inc
xchg
xchg
shrb
lods
mov
loopne
cmpsl
xchg
sbb
in
fwait
test
xchg
inc
stc
sub
jp
lea
adc
scas
fstl
fisttpll
gs
cli
adc
pop
push
mulb
les
cli
imul
and
xchg
fmull
insl
in
inc
and
xlat
adcl
xlat
adc
or
loope
xor
jle
xorl
or
sub
ja
fs
ds
cmpsb
mov
ss
notl
cmpsl
ret
push
mov
shlb
and
js
or
add
mov
xor
dec
fwait
xor
xor
mov
or
jno
arpl
sub
repz
and
push
cmpsb
shrb
add
gs
fldt
sub
jge
or
sbb
popf
jge
iret
das
fwait
ljmp
scas
leave
shlb
vpsubd
mov
sbb
xor
adc
mov
in
lock
or
xchg
and
gs
jb
lock
or
shll
clc
gs
in
in
pop
fdivl
push
xor
xor
addr16
cmp
in
scas
push
std
imul
mov
jae
pop
ffree
repnz
mov
ret
mov
mov
cmc
jae
cmpsb
xor
mov
push
cmpl
repz
into
cmpsb
repnz
add
movsl
dec
test
pushf
jb
jne
repnz
and
or
ret
outsl
scas
lahf
and
je
hlt
in
pop
std
jb
cltd
mov
divl
ror
pop
stos
idiv
or
cld
xchg
dec
imul
add
aas
in
dec
adc
and
insb
and
jl
pop
roll
ds
in
xchg
mov
jo
clc
dec
xchg
fsubl
in
stos
flds
mov
cmp
jo
xor
push
jns
jb
push
cmc
popf
test
test
inc
mov
or
jg
mov
pop
sbb
jl
bound
xchg
pop
stos
sub
lret
mov
inc
movsl
or
out
in
testb
add
je
icebp
inc
addl
sub
sahf
add
es
stos
push
outsl
in
scas
icebp
ljmp
lds
adc
bound
dec
add
jns
cwtl
loope
movsl
in
leave
push
inc
inc
or
loopne
pop
pop
ja
sbb
jns
imul
cmpsl
fs
mov
std
inc
or
sub
inc
or
cs
mov
mov
arpl
fnsave
outsl
popf
shll
cmovne
sti
vucomiss
add
lahf
mov
test
xchg
or
push
or
ljmp
mov
pop
faddl
sub
jge
mov
or
cli
in
and
sbbb
sbb
out
cmp
cmp
cmp
adc
fisubrl
cmc
fiadds
aas
inc
dec
test
push
popl
pop
cli
push
jno
js
js
push
adc
test
jne
ret
xchg
sub
movsb
movsl
push
jno
pop
or
dec
cmp
aas
adc
pop
popa
add
int
popa
or
cmp
jnp
jge
xlat
cmp
in
push
sahf
cmp
xlat
xchg
adc
and
jne
xchg
lock
lods
arpl
fidivl
cltd
jecxz
jg
imul
ret
sbb
xchg
pop
xorb
ss
inc
sti
cltd
sub
out
push
in
mov
sub
pop
push
repnz
and
push
in
push
andl
mov
cli
sti
iret
scas
adc
lods
push
dec
lar
icebp
iret
cmp
dec
enter
xor
pop
test
and
and
xchg
adc
add
push
pop
and
gs
lock
adc
mov
pushf
dec
add
out
jle
out
pop
ficoml
add
xor
call
imul
sub
imul
xor
rcll
fwait
lock
push
inc
leave
fs
popf
push
fwait
nop
jb
dec
cli
jbe
cmp
into
jno
jnp
fdivrs
fadds
pop
int3
clc
jge
fimull
mov
cmp
or
mov
cwtl
popf
mov
jl
in
mov
mov
mov
imul
dec
sub
out
ja
cs
daa
mov
shr
fidivrs
mov
push
jle
xchg
mov
ja
cmp
inc
call
mov
cld
out
sub
or
cltd
lahf
int3
cmpsl
clc
cwtl
addr16
cmp
push
jle
loope
in
mov
ret
mov
xchg
cmc
ret
pop
or
lahf
out
adc
xor
dec
and
sbb
fisttpl
mov
add
push
test
push
out
mov
cmpsl
test
sub
movsl
lret
in
mov
mov
out
jns
add
push
rcr
mov
sbb
test
fimuls
fstps
scas
fwait
lock
xchg
pop
adc
mov
int3
lods
add
mov
and
adc
xor
jae
das
nop
daa
mov
lea
sub
test
repnz
and
cmc
push
pop
add
mov
mov
les
sub
outsl
stos
push
icebp
stos
adc
and
sbbb
std
ja
push
fmulp
loope
adc
dec
clc
or
mov
cmp
inc
iret
call
adc
jg
fildl
dec
out
imul
cmpb
xchg
mov
dec
arpl
adc
xchg
lcall
xchg
clc
negb
stos
push
fsubs
sbb
in
out
cmp
fldcw
or
pop
shrb
pusha
mov
cmpsb
cwtl
sub
insl
dec
jmp
fdivl
shl
pop
add
outsl
inc
rcrb
cs
leavew
inc
mov
xor
hlt
adc
repnz
xchg
cmc
into
dec
pop
lahf
repz
loop
push
mov
push
or
out
popf
mov
mov
or
insb
popa
jns
cmpb
mov
pop
push
push
subb
jmp
fsubs
add
in
dec
hlt
lods
mov
mov
adc
fcoml
jae
adc
fsts
and
test
adc
pop
out
add
jle
std
mov
imul
imul
mov
imul
xor
sbb
fsubr
rol
push
es
jnp,pn
or
adc
arpl
sub
scas
mov
jl
dec
pop
addr16
aas
movsb
cli
push
cmp
das
icebp
std
cld
adc
daa
divl
shlb
or
cmpsb
mov
sbb
xchg
fnstsw
and
ds
push
push
sub
arpl
mull
jecxz
std
mov
ret
sbb
fildl
loopne
push
fsts
push
xchg
mov
stc
and
jnp
int
xlat
lock
sub
dec
hlt
scas
cmp
out
sub
cli
je
add
orl
stos
sbb
jnp
jnp
xchg
outsb
pop
leave
cmp
mov
sbb
inc
nop
sti
add
in
test
or
aas
mov
xchg
jnp
pop
push
jge
imulb
stc
stos
xor
dec
sbb
bound
mov
fmuls
sub
mov
repz
test
adc
xor
repnz
sbb
or
adc
cmc
dec
fucomi
cmpsb
mov
push
cmpsl
aas
cmpsb
cli
pop
inc
mov
xchg
lret
mov
adc
inc
mov
sub
jae
repz
ljmp
enter
and
inc
mov
orl
test
mov
lea
mov
xor
inc
fwait
dec
mov
inc
inc
mov
mov
aam
pop
xchg
inc
inc
add
aas
pop
cmp
mov
adc
xor
inc
sbb
pop
jge
dec
outsl
push
jp
mov
scas
lods
mov
push
cltd
mov
jmp
aam
sbb
fistps
adc
adcb
sbb
mov
loope
mov
test
mov
mov
xchg
fxch
mulb
shrl
popa
push
ret
pop
stc
cli
loopne
shrb
xchg
sar
cmc
int3
pop
sbb
in
mov
out
pop
popaw
lret
mov
aad
dec
and
push
inc
cmp
mov
xor
sbb
das
mov
loop
roll
fcoml
faddp
push
mov
lds
add
xor
lahf
pop
adc
leave
loopne
pusha
rclb
fwait
mov
adc
mov
in
mov
inc
inc
mov
inc
in
sub
or
and
insb
incb
lret
lret
aas
push
in
jo
test
xchg
push
js
inc
mov
sub
xchg
sbb
jnp
test
rclb
cmc
pushf
negl
add
or
adc
pop
jb
adc
hlt
pop
mov
loope
lods
cmp
sbb
repz
jbe
mov
in
jb
pop
pop
xchg
inc
pop
lret
inc
pusha
xchg
inc
fisttps
mov
stos
dec
dec
mov
add
push
add
or
dec
mov
aaa
das
idivl
sahf
shl
int
adc
pop
push
inc
ja
jbe
je
pop
push
jg
aas
jb
testb
pop
mov
jg,pn
in
je
inc
lea
fdivr
dec
dec
int
pop
and
adc
mov
push
dec
bnd
repnz
lock
icebp
imul
frndint
mov
cli
jno
out
lods
and
jnp
push
mov
lock
mov
inc
adc
nop
clc
add
loop
dec
int3
xor
xchg
xchg
pop
inc
enter
scas
jae
or
lcall
xchg
ficoms
lret
push
xor
mulb
mov
out
mov
jecxz
imul
push
pop
les
cmpsb
jnp
ja
sbb
xchg
dec
and
decb
arpl
fwait
push
ljmp
push
int
in
scas
call
adc
mov
mov
aam
cld
popa
and
sbb
adc
push
sbb
in
movsb
dec
icebp
push
push
rorb
shlb
ss
loope
sti
dec
daa
jb
ja
cmp
call
jmp
iret
lds
jae
repnz
sbb
in
mov
outsl
xchg
shrb
jno
mov
int
push
mov
push
mov
ffree
push
cmp
call
mov
inc
loope
popf
imul
push
das
in
bound
dec
mov
inc
bound
or
inc
push
dec
xorb
adc
sub
aam
jmp
jmp
or
jns
fstpl
and
cmpsl
or
pop
arpl
mov
movl
outsb
cmp
inc
add
xchg
xchg
add
push
les
jp
jg
in
pop
sub
insb
dec
sbb
arpl
pushl
cmp
push
jecxz
pop
or
and
dec
xchg
sbb
pusha
mov
cmc
lds
jne
jb
pushf
ljmp
into
popa
jmp
mov
mov
jp
inc
and
push
mov
jne,pt
std
cltd
dec
fistps
jo
sbb
pop
fcmovnbe
xor
jmp
repz
push
cmc
inc
jb
das
cmpsb
adc
xchg
roll
dec
jnp
in
adc
mov
div
or
cwtl
fbstp
aas
xchg
mov
mov
icebp
in
adc
adc
add
lock
mov
ret
and
negl
movsl
std
push
dec
dec
fimull
dec
lods
subl
mov
dec
push
cmp
dec
js
ret
pop
mov
movb
ds
pop
mov
das
test
lret
xchg
xchg
xchg
dec
add
sbb
jb
test
stos
pop
loopne
in
out
in
loope
call
mov
push
jecxz
dec
mov
addr16
in
jge
rclb
pusha
jb
mov
mov
xchg
add
cmc
enter
jo
out
jmp
test
insb
pop
enter
mov
xor
lds
shld
movsb
mov
cmp
sbb
iret
ss
insb
push
out
xchg
pop
cmp
push
xchg
push
cmp
test
loope
test
rorl
jb
mov
sub
sti
repnz
or
mov
out
nop
jno
cmpsb
rcrb
out
sbb
cmpxchg
insl
shlb
out
xchg
enter
pop
les
repnz
mov
push
lahf
inc
mov
jecxz
push
das
fcoml
clc
stc
les
hlt
add
pop
je
fadds
imulb
in
imul
mov
cltd
stos
inc
pop
cmp
bound
pop
sub
lahf
in
and
mov
loop
gs
sbb
mov
stos
cmp
les
lds
cmp
sub
inc
pop
mov
lret
and
insl
pop
pop
xor
popa
push
xor
aas
mov
pop
fcomps
mov
dec
sub
mov
mov
xchg
push
nop
jo
stos
ss
mov
cmpsl
cwtl
mov
push
cmp
rol
xchg
sub
push
sub
cwtl
sub
adc
or
addl
repz
ds
inc
mov
fidivrs
into
mov
jmp
out
pushf
cmpsl
inc
inc
out
cli
sti
lods
mov
ljmp
pushf
ds
out
sbb
pop
push
out
or
test
ret
js
into
repnz
jmp
popa
sbb
scas
mov
mov
pop
imul
stos
pop
daa
inc
cs
jnp
xchg
mov
lret
jae
cmpl
fiadds
subb
add
lock
mov
lods
jle
int3
add
dec
jbe
jne
dec
dec
shll
out
pop
das
and
xchg
loop
dec
push
lds
jg
add
sbb
xchg
and
daa
test
pusha
dec
popl
lret
mov
adc
sub
imul
xorb
movsl
push
adc
add
ja
arpl
es
jg
lret
fucomi
fs
xlat
dec
cmpsb
pusha
or
xor
mov
add
arpl
mov
or
pop
or
cmpb
loope
cmp
cwtl
nop
js
lock
cmpsl
loop
push
nop
imul
pop
push
jl
bound
xchg
shll
or
movsl
ds
aam
sbb
scas
inc
or
pop
dec
xlat
add
add
icebp
add
add
mov
int
ret
fisttpll
pushf
loop
and
sub
imul
push
or
push
popf
cmp
aas
adc
clc
jle
mov
cld
jp
enter
in
cmpsb
loop
dec
shll
je
xchg
iret
enter
mov
enter
and
add
cmpsb
jbe
cmp
adc
shlb
dec
out
inc
iret
popa
popa
jnp
ficomps
pop
rcl
mov
call
dec
xor
mov
lcall
lock
cwtl
add
jno
fwait
imul
lods
dec
sub
mov
pop
mov
xor
xor
and
cmp
and
xchg
into
xchg
mov
imul
ret
mov
int3
jg
dec
push
jmp
jg
ja
and
stos
loop
and
adcb
mov
rcrl
les
mov
pop
aaa
mov
dec
in
aad
in
pop
cmp
sub
add
inc
push
test
pop
mov
push
xchg
adc
add
xor
filds
adc
or
xchg
daa
push
add
mov
xchg
out
scas
ds
decl
cld
ret
and
js
push
pop
int3
xor
xlat
mov
movsb
inc
rolb
js
lea
lods
push
les
pop
jmp
js
and
pop
xchg
push
cmp
inc
cli
jnp
mov
int
mov
mov
test
cwtl
cmp
xor
enter
mov
call
test
mov
clc
cmp
out
sbb
js
sub
pop
push
mov
pushl
xchg
pop
mov
ljmp
add
jge
scas
xchg
mov
xchg
push
test
movsb
jne
scas
push
dec
std
mov
fsubr
push
daa
dec
add
pop
inc
loope
push
rcr
lret
flds
lahf
es
push
faddl
jnp
cmpsb
cmc
orw
mov
orb
aaa
loopne
mov
aad
inc
push
push
cltd
and
cmc
stos
aad
imul
inc
shlb
cmp
dec
mov
jecxz
adc
sub
leave
ja
ss
mov
mov
and
pop
arpl
push
push
jle
inc
lock
je
xchg
ret
dec
mov
sbb
frstor
pop
or
sbb
in
leave
jnp
lea
jge
mov
cltd
fstl
ss
inc
xchg
test
xor
xchg
pop
fists
xchg
iret
push
adc
in
jae
and
mov
repz
pushf
out
jl
insb
loop
pop
xchg
js
dec
arpl
sti
or
and
pop
ret
inc
jo
mov
mov
enter
push
mov
push
push
dec
scas
pop
pop
jb
pop
and
loop
out
mov
and
or
je
clc
jb
add
xchg
cmp
add
ljmp
mov
sbb
aad
dec
das
cs
mov
les
stos
mov
insb
sub
es
call
dec
xor
xchg
imul
xchg
sub
jmp
xor
sub
fistpl
nop
and
and
popf
sub
pop
iret
rcll
shrb
push
in
xchg
pop
add
test
fs
dec
fists
cmp
push
sub
loop
push
mov
sti
mov
fmull
dec
insl
das
ljmp
in
cmpsb
mov
sbb
mov
aad
dec
in
icebp
test
jns
push
hlt
imul
jb
mov
in
xor
pusha
cmp
jge
jnp,pn
je
jns
stos
outsl
xlat
xchg
jnp
int3
jnp
dec
and
ds
cmc
xchg
mov
pop
call
and
pop
push
jecxz
dec
out
incb
xor
cmpsb
push
xlat
cwtl
out
lea
inc
js
jp
into
hlt
mov
ljmp
and
imul
stos
mov
pop
add
jp
test
stc
sarl
and
and
dec
xor
cmp
jns
std
push
in
jmp
jne
mov
or
sbb
lahf
jle
xchg
test
sub
sbb
push
sub
out
in
out
jbe
mov
pop
pop
dec
imulb
in
cltd
in
dec
call
xchg
es
dec
sub
push
pop
loopne
pop
sub
cmp
les
into
push
lcall
fwait
jae
jbe
xor
test
aad
test
sub
mov
aas
mov
mulb
int3
lret
cmp
test
jnp
std
xchg
lahf
pop
js
lcall
clc
xchg
xor
out
pushf
mov
lea
and
push
lcall
ret
push
inc
mov
loope
icebp
inc
ja
scas
xchg
mov
inc
mov
inc
and
jp
xchg
sub
sbb
sbb
mov
jge
mov
mov
push
or
or
jnp
jnp
fldl
std
lret
ljmp
cmpsl
aad
std
incb
pusha
cwtl
shrb
sub
adc
pop
ljmp
push
imul
mov
or
sub
out
mov
ds
xor
and
jecxz
lcall
out
repnz
call
push
dec
out
lods
repz
sub
mov
push
jo
repnz
stos
lahf
call
push
mov
out
es
sbb
ljmp
mov
inc
popa
mov
jge
jle
push
push
cmp
xor
loope
jns
xchg
sub
es
pop
mov
or
push
aas
mov
cmc
pop
or
push
fsubl
jns
aas
cmovs
shrl
fimull
ds
cmc
or
mov
std
es
push
mov
push
subl
rorb
pop
inc
mov
push
int3
or
fimull
mov
inc
fwait
cmp
in
mov
lea
loopne
mov
mov
out
out
mov
mov
jo
mov
sbb
mov
loope
pop
vpunpckhwd
push
jnp
jnp
push
pushaw
imul
cmp
imul
jmp
push
sar
xor
add
stos
cmpsb
and
les
mov
fnsave
shr
sub
xchg
xlat
dec
pop
push
out
gs
ret
or
std
add
insl
faddp
call
jg
js
into
lock
xor
lcall
mov
mov
xchg
jb
lret
xchg
lods
out
xor
or
outsb
pop
jb
lea
pop
inc
fidivrl
mov
dec
jmp
inc
pop
mov
fcompl
cmp
pop
lods
loop
jo
aaa
sbb
pop
pop
test
sbbl
mov
es
or
jp
shr
mov
or
and
push
in
outsl
xchg
ret
mov
sub
aaa
fists
xor
rcrb
mov
lahf
insl
push
sbb
push
push
sbb
jb
mov
in
mov
aam
out
aaa
push
notl
icebp
mov
insl
aad
mov
pop
outsl
jmp
xchg
mov
mov
inc
dec
dec
xchg
iret
lcall
jbe
ja
or
shlb
push
push
ss
shl
pop
lahf
mov
aam
xchg
out
add
iret
ss
add
pop
hlt
mov
repnz
ds
push
iret
les
mov
loopne
dec
imul
pop
add
xchg
movsl
outsl
in
out
cltd
adc
inc
jp
xchg
push
pushf
or
fldt
mov
add
xor
inc
jle
jp
mov
adc
repnz
clc
push
daa
lret
int
adc
pop
xchg
cli
sub
dec
sar
xchg
jg
mov
mov
jb
mov
insl
shl
and
push
push
sub
ds
and
rolb
inc
cwtl
sbb
jns
cmp
dec
jbe
imul
in
scas
ret
arpl
cwtl
std
jecxz
imul
dec
div
pcmpgtd
jns
dec
xlat
scas
xchg
inc
xor
movsb
push
repnz
sbb
lret
add
xchg
jecxz
sbb
mov
sahf
into
mov
jns
fbstp
adc
imul
cmp
test
dec
je
mov
dec
jl
add
pop
pop
popw
fwait
xorl
inc
aas
xchg
outsb
fwait
or
popf
lahf
mov
and
mov
add
cwtl
pop
mov
pop
imul
sbb
mov
dec
lcall
es
lcall
bound
mov
cmpsb
mov
subb
push
imul
fldt
push
in
cmpl
dec
dec
fbld
lcall
cmpsb
cmp
mov
lret
js
scas
sub
cmpsl
loop
in
pop
dec
fimuls
mov
dec
test
xchg
les
insb
push
leave
pop
mov
jo
xchg
inc
in
jbe
add
mov
jp
fnstsw
jo
out
mov
jnp
adc
pop
mov
mov
popf
lock
test
add
icebp
mov
loopne
and
sub
jae
jle
add
fldenv
aaa
stos
jp
pop
cmc
out
shll
mov
int3
nopl
mov
ror
push
sub
dec
imul
lock
sbb
adc
pushf
outsl
push
sub
ficoms
scas
mov
add
cld
xor
cmpsb
sti
insl
scas
andl
add
adc
push
push
or
lds
not
leave
and
pop
das
mov
mov
lods
mov
hlt
mov
inc
loope
xchg
jnp
enter
aas
sbb
sahf
cmp
adc
fildl
jle
out
imul
repnz
test
outsb
mov
mov
test
stc
push
dec
sub
and
cmp
xchg
repnz
or
mov
mov
jp
addr16
cs
xlat
movsb
lods
imul
dec
inc
outsl
jmp
push
fdivp
arpl
pop
ret
inc
cld
inc
mov
popa
xchg
cmpsb
lret
xor
mov
lds
test
xchg
pop
cli
mov
cmp
dec
push
mov
dec
push
cmp
frstor
jo
cmp
dec
iret
add
jo
in
sbb
dec
xchg
jmp
jp
pop
mov
fcomps
dec
adc
ret
js
call
lock
test
or
repz
test
pop
mov
xchg
cmc
repz
outsl
jnp
jno
gs
inc
mov
stos
repz
pop
inc
lcall
xor
cmp
out
icebp
cmp
push
stos
mov
dec
sub
mov
push
jle
mov
pop
cmpl
orb
mov
pop
push
mov
js
xchg
sub
xor
aad
into
jmp
cmpsb
jne
clc
dec
loopne
inc
push
push
mov
and
cmpsb
add
xchg
icebp
push
cs
test
xor
inc
jp
sub
push
jp
dec
sbb
sarb
adc
js
sub
sahf
jns
leave
xor
jno
xchg
inc
xchg
mov
out
fldenv
push
add
pop
das
pusha
dec
dec
cs
push
scas
push
xor
and
pop
mov
mov
test
mov
rorl
jmp
pop
into
pop
inc
add
cmp
adc
fldl
clc
pop
jb
pop
mov
fisttpll
push
jnp
mov
fcompl
xor
pusha
mov
pop
xor
lret
push
jnp
mov
sbb
add
inc
repnz
out
sub
sub
sub
and
dec
lcall
or
js
notb
ds
or
jne
adc
push
inc
mov
lock
xor
ds
cli
insl
imul
and
jecxz
push
jl
adc
mov
mov
add
sahf
mov
jmp
xor
sub
pop
sbb
pop
sahf
xor
mov
inc
sbb
in
jnp
cmp
or
xchg
test
data16
inc
popa
repz
cmpsl
push
cmc
rclb
push
xchg
movsl
shr
out
repz
mov
cltd
inc
mov
pop
push
mov
das
and
push
dec
lock
inc
or
loope
add
adc
cmp
xchg
and
inc
scas
jne
jae
pop
inc
inc
lahf
orb
inc
repnz
mov
or
or
mov
xor
pop
jo
in
adc
notb
dec
lahf
mov
mov
xor
iret
add
cmp
mov
call
std
adc
jae
scas
stc
ljmp
aas
ret
dec
test
cli
xor
ja
test
dec
mul
pop
pop
cwtl
pop
in
or
push
add
into
rcrb
mov
shlb
fcomps
xor
mov
cli
dec
shll
and
sbb
pop
leave
stos
sbb
loop
jne
in
sub
sbb
out
mov
pushf
inc
iret
sti
lods
push
sahf
out
dec
or
punpckhdq
push
outsl
mov
xchg
fistps
scas
in
or
repz
cwtl
or
cmp
hlt
or
ja
outsl
ficoms
cli
sub
scas
dec
push
insl
adc
loope
loope
adc
cmpsl
mov
lea
xlat
inc
and
ja
sub
adc
push
lds
clc
pop
pause
jae
out
xchg
sarb
xchg
inc
dec
jne
sbb
test
xchg
sub
ret
and
clc
mov
mov
push
pop
inc
cld
jmp
add
sub
mov
pop
addr16
sbb
lcall
inc
sub
push
dec
scas
jae
xor
ret
daa
push
mov
sub
xchg
sti
lods
xchg
jbe
xchg
and
jbe
clc
dec
ljmp
popa
je
xor
mov
xchg
hlt
cmp
adc
mov
push
outsl
stos
adc
xchg
mov
jle
pop
test
cli
fsub
push
pushf
push
subl
sub
shrb
enter
mov
nop
push
or
sbb
fxam
dec
or
repnz
inc
frstor
pop
dec
or
imul
cmpl
pusha
lea
adc
cmc
in
push
scas
adc
ficompl
aam
mov
cltd
and
ror
fdivp
sbb
cmpsl
mov
push
aaa
mov
jmp
notb
btr
xorl
and
add
inc
lret
fwait
popl
iret
cmpsb
fdivrs
ja
cli
cmc
out
push
push
mov
pop
adc
mov
dec
dec
repz
jb
out
pop
ljmp
pop
sbb
stc
push
mov
ret
jns
cs
or
xor
sahf
ret
jo
clc
movsb
mov
fsts
xchg
sub
mov
jae
sti
inc
inc
jge
or
lods
pop
fwait
pop
adc
sbb
pop
mov
or
testl
xlat
sub
push
dec
adc
cmpsl
insb
sti
push
sahf
mov
je
loope
add
or
adc
psrad
imul
fisttpl
lea
jle
orb
in
or
inc
adc
rorb
je
mov
iret
mov
int
pop
jbe
movsl
pop
xchg
jg
sub
jl
sbb
pop
xchg
ret
dec
xlat
pop
jp
pop
mov
add
popf
mov
aad
or
fidivl
es
mov
sahf
mov
adc
ret
xorb
fisttps
lods
mov
loopne
pop
xor
repnz
lock
js
test
sahf
lea
and
scas
lahf
scas
mov
jae
in
sub
insl
int3
dec
in
cld
xchg
mov
xor
dec
mov
imul
out
xor
cmp
bound
addr16
pop
sbb
xor
push
adcl
in
and
mov
insl
nop
cmp
push
lock
or
cmpb
outsl
sarl
jnp
mov
inc
mov
mov
or
fildl
lds
shlb
jo
aaa
add
call
xor
repz
sbbb
xorb
push
jo
in
jne
shl
popf
add
fmull
lahf
jno
cmp
push
std
sahf
mov
sbb
or
popf
inc
daa
xor
inc
jo
adc
cld
shlb
inc
xchg
loope
repnz
fists
addb
addb
mov
sarl
arpl
sub
add
pop
or
std
in
les
cmc
roll
fs
out
push
xor
mov
push
jne
xchg
test
cwtl
movsb
pop
cmpsl
fs
les
dec
add
add
push
sbb
loope
jo
push
xor
sbbb
arpl
inc
or
inc
dec
out
dec
cmp
cmc
aaa
push
hlt
mov
xor
xor
push
leave
or
frstor
dec
cmp
inc
xor
leave
shlb
adc
inc
jb
inc
or
loop
in
inc
lahf
inc
aam
std
in
add
and
loop
xor
cmc
rcll
or
data16
mov
mov
in
rorb
fdiv
jns
lea
push
cmp
mov
pop
in
loopne
sti
popf
xor
xchg
dec
cmp
aad
testl
mov
stos
mov
lock
imul
jb
jb
push
jo
sub
cmp
fs
push
or
icebp
stc
jb
xchg
scas
fistl
test
mov
stos
add
mov
add
dec
dec
push
fisubrl
xor
sahf
pop
xor
inc
xchg
in
mov
inc
dec
inc
mov
jae
cmp
push
ss
sub
and
mov
dec
call
leave
loop
dec
imul
mov
bound
aas
out
add
push
imul
aad
jae
sbb
push
add
push
fisubrs
cmp
adc
cmp
mov
sti
mov
push
jns
test
sbb
lea
push
addl
pop
push
imull
in
cmc
sbb
push
dec
sbb
or
insb
pop
jle
jecxz
pop
mov
sub
jae
pusha
iret
jge
stos
adc
dec
xchg
jo
mov
imul
pop
movsl
orb
ss
jmp
mov
jp
in
inc
movl
ret
push
xchg
cmp
xor
mov
cmp
jp
sub
dec
popf
in
loop
in
jmp
pushf
add
inc
mov
test
fcoms
and
call
ret
mov
mov
xchg
adc
lea
push
orb
pop
repnz
jp
add
enter
adc
adc
push
js
push
sbb
aad
mov
jle
sahf
cmp
jp
inc
mov
and
dec
or
fcmove
and
fisttpl
jne
xor
mov
mov
sti
ficompl
pop
stc
or
mov
sarl
push
cmp
imul
mov
xchg
mov
mov
outsl
loope
in
mov
cli
loop
push
dec
xchg
mov
divl
mov
cmp
or
inc
arpl
add
scas
and
mov
sbb
jge
int
push
add
mov
push
ja
or
pop
push
and
pusha
int
loop
xchg
add
mov
cmp
lcall
sbb
inc
fst
inc
mov
push
cmp
pop
push
out
lods
mov
sub
lods
fwait
insb
and
fimuls
mov
sub
mov
and
mov
sub
add
dec
pop
sarb
mov
aaa
dec
push
loope
mov
xchg
fmul
rorb
push
addb
mov
dec
fbld
out
dec
stos
inc
push
ret
int3
negb
cld
inc
loopne
pop
aam
mov
bswap
sbb
jae
in
xorl
je
imul
rclb
mov
dec
push
lret
sbb
and
jae
lahf
mov
cmpsl
sub
or
in
xlat
pop
leave
imul
adc
cmp
test
jmp
add
mov
test
lods
cltd
insl
into
jns
mov
jns
adc
lahf
lods
shlb
add
aaa
pop
negb
adc
outsl
test
stos
sub
loope
enter
in
adc
orb
or
xchg
scas
jne
dec
clc
ror
adc
or
mov
add
push
xchg
mov
jne
loope
mov
xchg
mov
mov
neg
cli
or
test
or
push
gs
and
adc
sub
mov
loop
xor
rcrl
imul
jae
out
mov
negl
aam
adc
or
pop
sub
jge
push
and
xor
in
mov
dec
mov
in
ljmp
js
adc
lret
and
push
add
mov
repnz
mov
fld
cltd
daa
mov
inc
in
ja
jmp
cld
dec
insb
add
mov
sbb
sub
sbb
and
push
mov
xor
dec
mov
cmp
and
cltd
ret
es
add
dec
adc
xor
leave
lret
aam
jmp
mov
adc
es
in
dec
decl
mov
sub
sbb
pusha
cmpsb
add
dec
mov
insl
out
orb
sbb
mov
in
jp
jb
out
mov
pusha
push
xchg
fs
loopne
xor
aam
ret
adc
or
jmp
or
cltd
adc
mov
stc
mov
xor
shrb
mov
fwait
cltd
aas
iret
test
cltd
hlt
decl
negl
mov
jg
clc
xchg
pop
les
jge
adc
push
inc
jge
jns
xchg
xchg
sub
nop
sbb
dec
imul
mov
leave
int3
das
inc
lock
xor
xchg
ret
ja
xchg
aad
sub
sti
pop
inc
jecxz
xor
jle
jno
xchg
fimull
pop
rcll
ret
psubusb
jl
pop
stc
inc
test
mov
mov
sub
mov
xchg
inc
mov
int
mulb
adc
sbbb
sti
in
mov
insb
jle
gs
sub
xchg
xchg
adc
loop
push
iret
pop
jns
in
pusha
cmp
or
test
jns
mov
cmp
icebp
mov
in
add
add
sbb
fcomps
mov
ds
add
lods
push
dec
popa
xor
sti
in
adc
or
jne
mov
sub
sub
push
aam
adc
sbb
jg
pop
std
mov
lods
je
fcompp
mov
cmc
dec
or
lret
mov
inc
fcmovb
negb
outsl
adc
pop
fdivrs
mov
les
lcall
pop
repz
cli
daa
sbb
movzwl
cld
lahf
mov
cmp
sub
adc
cs
push
sbb
pop
mov
out
jge
sub
aad
int3
arpl
out
add
adc
and
jmp
incb
mov
xchg
sar
iret
mov
add
sub
psrad
notl
cmp
xlat
mov
mov
aad
mov
mov
xor
push
add
pop
loopne
fimuls
jns
adc
andl
shll
jmp
push
pop
push
jge
mov
out
jp
nop
es
imulb
sbb
scas
pop
dec
popf
xchg
inc
clc
xor
sub
loop
cli
addr16
das
lods
cmp
adc
or
add
aad
mov
out
hlt
jmp
call
ficomps
stos
jg
xchg
popf
enter
out
mov
icebp
icebp
imul
jmp
mov
sub
sub
sub
jb,pt
or
mov
cmovle
mov
call
sub
in
push
adc
adc
test
pop
mov
loope
lods
lret
mov
repnz
imul
bound
addr16
int
xchg
icebp
pop
push
lods
les
lock
mov
push
add
loop
shrb
mov
lret
int3
sub
push
xor
lcall
and
xor
mov
mov
push
dec
cld
out
mov
push
lcall
lret
lods
imulb
pusha
sub
mov
mov
es
pusha
xchg
int
lahf
hlt
ficoms
imull
inc
jo
aaa
insb
adc
adc
les
imul
mov
xchg
into
mov
jae
and
stc
or
mov
in
scas
stos
addr16
mov
xchg
sti
jge
add
orl
add
data16
sub
in
daa
repnz
movsb
push
insb
sar
cmp
pop
cltd
inc
popf
pop
mov
push
push
inc
cmc
sbb
ds
jp
push
jnp
out
xchg
pop
xchg
fistpl
arpl
push
or
lea
add
fimuls
ljmp
push
mov
or
ficomps
insl
xorb
push
sbbl
test
popf
mov
inc
fidivl
adc
ret
jo
cli
movsb
lcall
adc
divl
push
jb
adc
stc
insb
cltd
cmpsl
inc
iret
es
jae
repnz
cmp
xor
jp
bound
hlt
inc
push
fwait
sbb
cmp
pop
mov
sub
ret
pushf
xchg
push
mov
clc
je
aas
jo
ljmp
subl
rcrl
push
push
mov
cmpsl
and
cmp
leave
push
dec
or
stc
lret
and
push
cmc
test
pop
and
mov
repz
lcall
dec
mov
cmp
in
dec
clc
push
shl
sub
call
push
pop
rcrb
xchg
cltd
and
icebp
test
fcmovnb
cmpsl
jl
popa
pop
or
pop
xor
ret
sbb
lret
sub
pop
fidivs
dec
push
dec
shlb
sti
push
push
ficoms
mov
bound
pushf
mov
or
std
xchg
out
push
mov
mov
pop
out
add
sub
pushf
mov
call
mov
aas
lea
out
inc
imul
pop
mov
out
dec
jnp
ficompl
xlat
pusha
sub
or
dec
mov
mov
test
push
popa
sbb
push
mov
ret
stos
test
or
movsb
inc
out
mov
inc
jnp
push
pop
popf
push
dec
fcomps
push
int3
jnp
imul
xlat
rorl
outsl
fsubrs
sub
sbbb
mov
mov
dec
pop
movl
dec
popa
mov
dec
xchg
ljmp
mov
cs
and
mov
xor
dec
les
cmp
xchg
es
ficompl
or
lods
imul
loopne
and
scas
xor
cltd
enter
xchg
mov
push
movsb
js
and
xor
jo
arpl
jbe
insl
enter
cmpsb
add
sahf
push
mov
outsl
lods
jae
fdivl
dec
out
pop
pushf
xor
adc
shl
icebp
mov
or
xchg
push
insb
jno
ljmp
js
push
sub
loopne
shlb
xor
stc
xor
xlat
ljmp
imul
imul
sbb
les
std
push
js
or
loop
sahf
mov
aad
or
or
jp
fidivs
movsl
jg
or
dec
por
out
pop
cmp
push
jns
push
call
inc
rcrl
mov
dec
mov
lahf
push
hlt
pushf
cmp
and
lret
divl
pop
and
ljmp
mov
fisttps
pop
push
enter
cld
xor
inc
into
xchg
and
sub
les
sbb
gs
jge
and
push
rorl
dec
movl
mov
and
xchg
adc
mov
jmp
mov
or
cmp
dec
mov
aaa
mov
pop
or
pop
pop
dec
push
pop
cmpsl
adc
orb
xor
rcr
dec
mov
loope,pt
ret
pop
lcall
subl
test
jl
pop
imul
xor
fadds
xor
push
jae
int3
dec
mov
xor
lods
pushf
push
insb
xchg
jae
fiaddl
fsubrs
sbb
sub
jo
jnp
call
or
or
and
mov
loop
add
and
jbe
sti
aas
dec
jecxz
dec
push
inc
push
out
in
movsl
fimull
inc
lods
mov
rolb
imul
jo
mov
fdivp
sahf
xchg
outsl
outsb
jb
sbb
cmpsl
sub
and
shrb
enter
inc
mov
fdiv
xchg
jg
lret
jmp
rcrl
lea
es
aas
test
sbb
cmp
fsubrs
push
add
add
mov
xchg
lds
push
scas
xor
filds
lods
sbb
nop
or
xor
dec
popa
je
pop
adc
sub
pop
jge
and
cmp
out
ret
ljmp
es
lret
cmp
push
ret
add
pop
subb
dec
xor
shlb
imul
mov
or
lret
cwtl
test
int
sub
cmp
int3
movsl
fnstcw
add
aaa
in
in
jno
cwtl
dec
inc
mov
aaa
jl
pushl
cli
add
mov
mov
lods
jecxz
cmc
push
sbb
xchg
jo
dec
mov
loopne
aaa
mov
jnp
imul
jmp
mov
cmp
lahf
mov
or
pop
mov
sub
pusha
sbb
pop
cld
sti
push
ret
cmpsb
inc
shrl
xorl
xor
mov
adc
scas
and
mov
mov
xlat
in
mov
adc
arpl
inc
inc
sub
ss
jnp
adcl
push
pop
mov
pop
inc
pop
aas
cld
lcall
cmp
cmpsb
stc
cmp
call
ror
repz
popf
cmp
jne
xchg
xor
sub
mov
jnp
mov
scas
data16
clc
fmull
adc
daa
mov
jne
sti
movsb
pop
mov
sub
repnz
das
pop
dec
mov
xor
mov
aas
loop
arpl
mov
shll
test
sub
or
xor
clc
dec
push
push
lcall
and
lds
sbb
addl
leave
je
cs
imul
xchg
in
sbbb
mov
xor
aas
lods
xlat
fildl
mov
jne
pop
fldt
mul
xor
mov
and
xor
jle
ss
and
test
mov
insb
loopne
jns
cmp
jge
jb,pn
adc
sub
dec
mov
mov
jno
repz
je
sbb
daa
insl
dec
sbb
ret
pop
jbe
ds
ljmp
sbb
scas
sbb
pop
movsb
pop
sarb
lea
pop
mov
adc
xchg
fsubrp
sub
add
mov
sub
sbb
test
jne
movsb
or
pop
mov
mov
jae
and
stos
and
inc
es
movsb
fimuls
idivl
sbb
movsl
test
das
clc
dec
jo
mov
mov
scas
sahf
xchg
sbb
mov
mov
pusha
jno
sub
jne
icebp
xor
leave
in
repnz
add
mov
setnp
mov
les
jno
lret
adc
cmp
and
hlt
adc
mov
leave
dec
shl
aam
call
pop
pushf
hlt
sub
pop
pop
inc
or
sub
add
dec
sbb
xor
jne
call
das
mov
sbb
jae
lods
push
xor
add
pop
xchg
dec
outsb
cmp
xchg
std
pop
lds
and
lahf
cwtl
xchg
in
xor
add
fdivs
movsb
jmp
sbb
jp
scas
cwtl
loopne
ror
ror
jnp
and
cmp
out
add
add
pop
sub
or
addb
xchg
jo
mov
mov
mov
jle
or
xor
xor
sbbb
and
stc
push
test
popa
cmp
popa
xor
sar
adc
out
pop
subl
inc
mov
stos
pop
cmpsb
pop
fiadds
xchg
cwtl
retw
gs
mov
xchg
repnz
cwtl
pushf
popa
inc
imul
push
mov
sbb
push
jne
pop
fidivl
stos
insl
subl
or
mov
movb
push
jge
jae
dec
xchg
lret
sarl
mov
lods
cs
mov
adc
daa
sbbl
xchg
xchg
repz
mov
jo
cwtl
sub
ja
mov
fdivrl
sub
jo
ds
imul
adc
jp
pop
leave
xor
push
dec
jl
sub
lea
pop
loopne
sbb
sub
cltd
roll
in
xchg
movaps
movsl
test
outsb
inc
adc
dec
movsl
mov
adc
ljmp
fsub
inc
jg
dec
shr
std
xor
pushf
jl
pop
or
mov
jns
filds
movsb
or
rol
cmc
sbb
andb
lcall
xchg
repnz
lods
jo
xchg
pop
roll
xor
pusha
aaa
xor
xchg
das
pop
push
aas
out
iret
lahf
cmc
push
jne
ds
in
aaa
dec
pop
ds
into
or
xchg
adc
sbb
shll
cltd
sub
xor
movsl
iret
outsb
adc
sub
pop
mov
mov
jge
aas
xor
mov
inc
fsubr
push
xchg
inc
fmull
imul
fcmovb
pop
cmpsl
repnz
fdivs
fwait
xchg
lods
push
xchg
pop
mov
jae
mov
adc
lcall
xchg
bound
pop
lret
add
test
cwtl
xor
in
test
data16
push
ret
orl
xchg
adc
cmp
push
js
stos
test
call
lods
pop
dec
mov
xor
xor
adc
cli
mov
push
adcl
std
fildl
lret
mov
add
imul
inc
cmpsb
pop
cld
shrb
int
ljmp
jecxz
sub
out
cmp
mov
pushf
lahf
adc
int3
in
out
jge
cmpsb
cmp
mov
adc
and
xchg
fdivp
shll
jecxz
push
scas
pushf
jecxz
insl
mov
fistl
lds
cmp
cmp
pop
jp
mov
clc
or
fisubrl
cwtl
fisttpll
in
movsb
stc
jo
int
ja
fimull
add
mov
cmp
push
fs
xor
rcrb
xchg
in
iret
inc
mov
movsl
adc
rclb
add
jmp
pop
dec
inc
mov
in
jp
push
enter
cmpsl
sub
aas
bound
sub
push
insb
std
data16
inc
int
repz
and
xchg
aaa
xchg
cmp
scas
ret
pavgb
mov
cld
jnp
testl
jnp
mov
push
add
xor
mov
lods
rcr
js
pusha
fwait
pusha
mov
pop
dec
dec
outsl
xchg
scas
adc
and
sbb
popa
jg
in
rcl
push
mov
movsb
jno
outsl
push
inc
lret
orb
adc
jle
sti
cmp
call
mov
fs
mov
cli
inc
insb
push
pop
insb
in
les
fadds
fstpl
leave
test
incl
setns
push
scas
mov
faddl
jg
imul
dec
pop
inc
xchg
xchg
push
leave
mov
xchg
shl
in
aam
dec
jbe
jno
icebp
adc
mov
shr
adc
sbb
into
sub
xchg
push
and
lods
stc
int
sbb
push
imul
xorb
mov
mov
pushf
inc
mov
or
lds
adc
dec
fs
jb
and
outsb
adc
jns
ret
mov
push
pop
adc
mov
gs
dec
and
es
out
cmc
push
das
push
mov
and
lods
add
das
cmp
ds
rcrl
test
cmpsl
sbb
pusha
scas
xchg
mov
pop
mov
pop
mov
loope
push
movsl
xor
sarb
push
dec
mov
es
jae
orl
cmp
movsb
jle
jno
int
enter
scas
ja
stos
push
xor
fs
inc
push
daa
daa
daa
dec
pop
or
dec
gs
mov
ret
lock
mov
push
dec
add
dec
cmp
or
in
mov
fwait
pushl
mov
push
xchg
mov
out
push
dec
pop
jns
lods
in
xchg
daa
sbbl
int
test
add
xor
pop
pop
shrb
orl
push
xor
dec
jl
inc
je
divl
flds
cmpsb
shrl
add
insb
xlat
aas
sub
pop
xchg
pop
test
ret
arpl
fwait
push
xchg
stos
adc
stc
mov
add
xor
aam
movsl
mov
cmp
mov
dec
dec
jno
das
dec
lods
cmp
mov
notb
aad
pop
in
out
push
pop
or
and
pop
dec
pop
fsubl
popa
scas
loopne
sub
lea
mov
aad
pushf
ret
test
add
add
jnp
lods
cmp
sbb
sub
fadds
lahf
pop
sbb
sub
cmpsb
xor
or
jno
mov
in
adc
pushf
xor
cmp
push
jno
cli
loope
cld
cwtl
adc
daa
pop
push
lods
sbb
in
stos
mov
loopne
cmp
ljmp
orb
jns
imul
lods
mov
pop
call
scas
ljmp
fs
movb
sahf
or
inc
stos
ss
cmp
inc
bound
inc
cld
cmp
data16
insb
mov
test
mov
push
cmpsl
pushf
push
jae
jnp
ret
xor
ja
xchg
lcall
inc
das
and
daa
sti
push
adc
sti
inc
das
movsl
subb
inc
pop
adc
in
cmp
pop
fisttpll
dec
or
cld
mov
sti
push
das
loop
scas
neg
push
mov
shll
into
fistl
and
adc
jns
fs
xorb
xor
outsl
cld
fisttpl
and
dec
add
sbbl
or
lret
push
dec
out
jno
clc
fnstcw
insb
mov
pop
sbb
sti
jl
sbb
cmp
push
out
cli
inc
out
test
xor
fimuls
into
mull
xchg
sbb
xorb
das
popf
mov
xchg
inc
jns
bound
fmuls
into
push
sbb
and
dec
adcb
cwtl
dec
aas
daa
ja
xchg
dec
lret
mov
std
ljmp
jae
enter
cltd
jmp
push
dec
mov
push
or
gs
mov
adc
push
roll
cmp
sbb
mov
fwait
or
add
nop
mulb
test
inc
mov
hlt
aaa
repnz
adc
enter
sub
xlat
aam
pop
jne
orl
rcrl
leave
std
push
int3
xlat
cmc
imul
mov
jbe
xchg
arpl
movsb
int3
and
and
dec
stos
jle
mov
movsl
xor
insl
outsl
xor
adc
insl
jge
xchg
jbe
dec
mov
cmp
js
sqrtps
cli
xor
bound
mov
adc
cmpsb
sbb
loopne
inc
pop
or
cmp
xchg
xcrypt-cbc
cmpsl
adc
mov
pop
pushf
mov
or
fwait
xchg
cmp
cmp
out
jne
push
mov
mov
scas
push
dec
pop
adc
cmc
movsb
pop
and
test
and
imul
je
and
dec
out
ret
pop
xor
sub
fdivl
jno
adc
push
cltd
mov
mov
fisubs
dec
ljmp
xchg
int3
js
testb
sub
mov
sti
movsl
mov
dec
push
mov
pop
test
pop
enter
xlat
repz
cmpsl
cmp
sub
lret
mov
mov
cmp
push
pop
lahf
xor
xchg
das
jge
sahf
or
mov
bound
or
daa
nop
negb
mov
imul
xor
pop
adc
add
insl
and
cld
xor
xor
lea
sub
das
or
leave
mov
xor
inc
cmp
lret
jecxz
lahf
rorb
mov
push
in
pop
sbb
mov
mov
in
addr16
arpl
lods
aas
in
cli
mov
push
fnstsw
mov
lea
push
mov
mov
cmpsl
mov
xchg
push
and
insb
cmp
push
inc
sub
sbb
loopne
out
leave
inc
lret
add
push
es
imul
push
stos
mov
jb
shll
inc
in
sbb
stos
scas
or
lret
cmpsb
sub
insb
popa
mov
cmp
xor
and
xorl
daa
movl
pop
sbb
cwtl
pop
pop
stos
and
jno
xor
rorb
xchg
negl
mov
ret
inc
mov
test
test
in
jo
mov
in
mov
in
add
dec
hlt
inc
cmpsl
dec
xchg
test
test
icebp
push
sbbl
loop
out
mov
adc
and
sub
push
mov
dec
movsb
xor
adc
push
mov
push
adc
cmc
dec
repz
lret
pushf
icebp
xor
out
mov
aaa
inc
or
lahf
nop
adc
push
add
std
pop
dec
cmpsb
ret
cmp
jae
rolb
add
push
mov
pop
and
jnp
mov
inc
in
out
mov
pop
lret
jmp
cmp
or
mov
sbb
dec
call
jb
cmp
gs
daa
lret
pop
stos
cli
inc
out
xchg
pop
loope
sbb
movsl
xchg
mov
pop
fsts
add
xchg
mov
jne
cltd
subl
jg
mov
lea
hlt
sub
or
rcl
dec
int
jo
or
cmp
enter
and
stos
inc
loopne
loope
repz
clc
aam
mov
pop
int3
push
fs
rcl
sahf
cmp
sbb
mov
repnz
sbb
shlb
test
sbbb
addr16
cmp
sub
push
push
push
xor
adc
push
scas
xor
xchg
arpl
insl
fcomi
lds
je
enter
cwtl
sub
ficoml
mov
add
in
xchg
test
mov
shl
xchg
call
out
pop
loopne
or
inc
lcall
icebp
mov
xchg
pop
mov
outsl
add
and
mov
cs
insb
mov
cli
in
aaa
out
xor
imul
cwtl
rorb
imul
mov
test
bound
leave
push
stos
mov
and
pop
repnz
xor
dec
mov
fwait
add
push
lds
inc
push
std
cltd
mov
in
xor
arpl
pop
pushw
fildll
sbbb
jnp
lcall
sub
int
mov
pop
aaa
arpl
hlt
stos
fsubrl
subl
xor
adcb
mov
inc
ss
xchg
mov
pusha
fs
mov
xchg
cmp
mov
push
insl
xor
loopne
dec
jmp
movsl
insl
push
and
dec
cmp
dec
outsb
add
adc
loope
cmp
jl
pop
ffreep
out
rcrb
lods
imul
mov
js
sbb
ret
dec
mov
sbb
mov
mov
mov
fsubrs
aam
cmp
negl
xchg
push
sti
dec
adc
lea
xchg
mov
jmp
lods
mov
hlt
jae
test
ss
outsl
rcrl
aad
mov
inc
mov
mov
jg
lea
jne
jg
mov
dec
inc
inc
sbb
cltd
je
nop
test
fistpll
insb
dec
and
lock
cwtl
fcomps
ret
xorb
jo
mov
gs
out
inc
fiadds
aaa
inc
push
es
inc
repnz
pop
jb
add
popa
and
mov
xchg
adc
sbb
push
and
dec
cmp
loope
dec
ret
scas
fldenv
ret
jo
movsl
dec
lock
jo
fmuls
cmp
add
inc
mov
addr16
cmp
jmp
repz
dec
ja
pop
mov
pushf
test
call
push
je
xchg
jbe
mov
mov
stos
xorl
div
sub
imul
and
push
fwait
inc
cmp
out
loop
nop
sub
lods
rolb
shr
xchg
cmp
push
fmull
arpl
push
push
cmp
inc
push
and
hlt
insl
cmp
div
scas
loope
je
pop
loop
push
sub
ljmp
aam
das
nop
dec
dec
mov
insl
pop
and
and
mov
addr16
push
aam
rep
mov
hlt
testb
aam
mov
aas
or
imul
mov
cmpb
mov
add
xchg
push
cmovp
pop
add
ret
fidivrs
xchg
jo
fbstp
lret
adc
iret
mov
std
lock
and
fnstcw
clc
daa
jecxz
lcall
xchg
add
stc
stc
addr16
outsl
cmp
movsl
inc
ljmp
pop
std
and
xor
je
cld
push
pusha
xchg
es
and
outsl
add
cmp
pushf
stos
ss
lods
test
mov
out
push
mov
fcoms
out
outsb
adc
xor
pusha
dec
sub
mov
pop
mov
push
into
pop
or
cmpsb
xchg
push
imul
cmp
mov
jo
imul
ficoms
dec
sub
sbb
int
inc
jmp
mov
fwait
dec
inc
add
sub
add
into
push
add
jmp
mov
ljmp
mov
mov
loope
xorb
adc
imulb
xchg
mov
cltd
push
pop
out
jb
mov
pop
lods
pop
imul
hlt
add
lea
dec
xchg
push
lahf
in
pop
push
out
les
out
imul
sbb
pop
add
or
push
mov
aas
push
xchg
mov
movl
mov
js
mul
hlt
dec
std
jb
ds
sti
sub
pop
neg
out
jmp
rcrb
mov
stos
inc
or
stos
xchg
ljmp
shll
mov
nop
push
repz
dec
testb
leave
pusha
xchg
test
out
xchg
adc
movl
pop
and
enter
jne
stos
int
inc
adc
sbb
xchg
or
push
cwtl
push
add
mov
or
js
outsb
mov
in
sub
dec
pop
imul
out
call
pop
dec
sub
jecxz,pn
add
and
ss
mov
cmp
in
pop
mov
pop
sbb
sti
cmp
and
pop
mov
aam
xchg
arpl
addl
daa
pop
fisubrl
jnp
test
mov
ds
xchg
and
mov
and
out
ds
xchg
cmp
xor
sbb
or
ljmp
cld
sbb
mov
mov
jnp
push
xor
imul
insl
call
insb
mov
sbb
lds
test
jns
pop
test
push
fcomps
cld
push
mov
scas
cld
inc
mov
push
inc
cwtl
and
xchg
and
sysenter
mov
icebp
xchg
lock
das
ficomps
xchg
push
add
add
jmp
fadd
nop
imul
cmp
in
jo
mov
inc
push
sahf
ds
rclb
sbb
in
loopne
popf
mov
or
cmp
adc
jecxz
das
and
jbe
outsl
lret
xchg
out
into
fwait
mov
test
shrb
and
mov
mov
out
mov
daa
ret
jae
and
cltd
out
push
out
jle
dec
out
inc
mov
add
popa
xchg
dec
js
push
dec
add
jno
out
sahf
pop
xchg
push
adc
ss
lock
cmp
sub
xchg
lods
loopne
stos
adc
sti
push
bound
push
lcall
clc
inc
int
jb
ds
clc
dec
mov
sub
push
js
nop
arpl
dec
mov
jne,pn
loop
aad
out
mov
or
rclb
sbb
pusha
das
int3
lods
inc
lods
jle
lcall
pushf
and
mov
filds
adc
xchg
xchg
cmp
ret
mov
ret
in
xor
repz
or
jle
cmp
jno
int
pop
aam
mov
sbb
mov
imul
dec
pop
aas
inc
sbb
mov
js
jl
cmp
mov
mov
push
cltd
add
jl
inc
pop
scas
or
fs
rorl
mov
mov
lcall
test
inc
or
inc
lods
loop
push
int3
inc
sbb
loopne
jne
or
pop
repnz
nop
sub
in
popa
inc
mov
mov
aas
mov
orb
fnstenv
add
jo,pt
adc
dec
test
sub
jge
and
mov
mov
adc
and
mov
jecxz
lods
push
inc
xor
icebp
rcr
inc
xorl
mov
fwait
jb
mov
or
pop
sahf
jl
mov
subb
cmp
pop
cld
rcr
xor
and
ss
xchg
mov
pusha
push
mov
mov
mov
jnp
jg
loopne
add
andl
jmp
jge
fwait
sbb
mov
add
mov
add
jp
jl
xchg
or
rcl
mov
or
dec
dec
cmp
repnz
adcb
and
leave
pop
sbb
sti
add
mov
test
rcl
lea
and
pop
jmp
int
test
xchg
adc
push
jp
mov
popf
iret
jge
dec
aam
lods
int
lods
addr16
jge
pop
or
rcll
mov
daa
gs
inc
lods
aad
scas
fwait
icebp
orb
rcl
dec
jecxz
in
mov
enter
xchg
je
sarl
inc
jle
inc
sti
in
cs
lahf
test
pop
adc
mov
xchg
or
or
adcl
repnz
mov
xchg
js
push
sub
and
dec
push
clc
jp
imul
fisttpll
mov
aaa
fs
xchg
pop
xor
and
pop
lret
xchg
lret
jle
xchg
sbb
mov
test
inc
out
mov
jge
mov
push
movsb
jge
mov
jno
sub
sbb
int
xchg
jmp
imul
arpl
push
mov
fs
and
sub
sub
mov
jo
aad
xchg
mov
cmc
ljmp
stc
js
jmp
inc
inc
enter
inc
push
push
xor
push
jecxz
sub
bound
cvttps2pi
aad
imul
inc
jp
ret
pop
jne
jge
test
mov
sub
pop
repz
adc
push
jno
or
adc
push
xchg
pop
jb
and
adc
pop
mov
out
push
xchg
test
stc
aad
and
push
in
xor
adc
fildll
hlt
fadd
dec
sub
inc
mov
mov
test
repz
push
imulb
xor
push
nop
or
inc
xor
test
mov
scas
and
mov
mov
and
sub
adc
pop
xor
push
dec
mov
roll
dec
jg
in
int3
rol
pusha
mov
pop
lods
fcomps
adc
xchg
inc
cmc
insl
cmp
mov
dec
loop
hlt
and
mov
mov
fnsave
xchg
and
dec
jnp
mov
ss
stc
test
push
out
cwtl
mov
call
cmp
cmp
pop
ret
lock
lret
in
mov
fiadds
fnstenv
arpl
adc
addr16
ret
cmp
mov
sbb
nop
mov
xor
lret
sbb
mov
das
sahf
dec
sub
or
mov
lcall
inc
inc
add
js
ficomps
fsts
repnz
imul
cmp
push
and
inc
mov
pop
ret
dec
jbe
dec
aad
sbb
mov
push
push
jbe
shlb
insb
ret
xor
in
lea
dec
xchg
push
int3
stc
cmc
iret
out
sub
daa
add
bound
lret
sub
repz
jp
mov
repnz
mov
mov
data16
xchg
mov
mov
sub
fmulp
push
or
in
lret
mov
cli
fwait
lds
out
shrl
xchg
or
imul
sarb
flds
and
addr16
leave
dec
xchg
loop
mov
sahf
fbstp
mov
inc
adc
roll
in
lds
jp
xlat
or
pop
mov
sbb
or
ja
nop
not
mov
into
scas
dec
filds
add
icebp
xchg
stos
pop
sbb
addr16
jnp
nop
cmp
cmpl
xchg
insb
outsl
sahf
cli
cwtl
dec
pop
add
and
lcall
xchg
add
sub
cmpsl
cmp
inc
inc
ljmp
pop
movsl
arpl
jbe
mov
icebp
dec
leave
fld1
mov
fwait
sbb
jne
test
mov
inc
stos
or
adc
jle
dec
nop
dec
adc
movsb
out
add
call
fisttps
xlat
mov
lcall
or
pop
punpcklwd
pushl
sarb
decl
inc
scas
cmp
lea
and
in
aaa
fisubrl
stos
outsl
leave
sbb
mov
jae
jns
fildl
lea
mov
or
mov
testb
or
mov
lods
dec
pusha
jae
and
push
dec
lcall
mov
int
sub
dec
mov
int3
jne
and
aad
loope
mov
out
pop
jmp
jl
inc
mov
inc
dec
cmp
pop
int3
push
dec
cld
mov
aam
cmp
leave
sbb
rcll
cmpsl
adc
adc
jle
push
icebp
xor
fidivrs
jnp
ljmp
mov
or
setl
push
and
loopne
rolb
adc
mov
jl
icebp
ret
cmp
shlb
jno
fsubrp
aas
mov
popl
cmp
pop
inc
sbb
fs
js
movb
into
inc
loop
cmp
outsb
add
cs
push
mov
adc
lret
inc
and
mov
jp
lods
imul
push
test
pop
pop
popf
rcll
inc
xor
xchg
jns
leave
sub
cmp
pop
xchg
lahf
jge
sub
jmp
jmp
adc
testb
pop
lock
rcr
add
or
cmp
lea
aaa
push
xchg
jl
ror
cld
jp
out
mov
jbe
out
fiaddl
daa
mov
sbb
mov
jae
sar
lods
and
cmp
andps
int3
call
aam
or
lds
pop
sub
sarb
andl
or
arpl
sbb
jecxz
sbb
es
jb
stc
repnz
js
int
into
mov
out
pop
in
movsl
out
xor
xlat
repnz
push
push
sbb
mov
ror
loop
les
push
jae
stos
jge
or
rorb
icebp
sbb
ljmp
add
leave
outsb
push
inc
repnz
mov
mov
ffreep
les
xchg
popa
mov
icebp
shrb
aam
sub
push
push
call
pop
mov
push
add
inc
mov
push
cs
xchg
push
adc
pop
dec
jge
cmp
sbb
pusha
es
push
and
xchg
mov
cli
adc
xchg
rclb
dec
push
cmp
mov
in
movsb
lcall
pushf
les
fldenv
mov
inc
inc
fadd
fidivl
adc
sub
call
stos
sub
push
jno
dec
mov
ljmp
repnz
movsb
movsb
adc
lods
out
adc
out
aad
sub
xor
adc
sbb
icebp
mov
xor
decl
sub
push
insb
pushf
or
add
les
sub
dec
mov
out
dec
mov
sbb
sub
sbb
push
fistpl
sahf
shl
inc
aad
xlat
mov
jmp
test
adc
push
push
sub
les
xchg
loop
adc
xor
add
add
mov
sahf
and
mov
shrl
and
in
mov
push
in
sarb
ja
xlat
cmp
out
lds
xchg
add
into
add
aad
loope
xchg
daa
sub
add
push
and
out
mov
xchg
and
mov
jbe
popa
pop
in
aas
xor
lea
lods
cmpl
fs
ret
mov
or
arpl
push
in
push
sbb
pop
sahf
mov
adc
pop
inc
or
dec
leave
xchg
xlat
or
out
jb
mov
lea
leave
fcompl
mov
dec
mov
pop
pop
pop
pushf
jae
out
lods
fsubl
xchg
mov
jbe
xchg
and
mov
cmp
aaa
sbb
sbb
mov
aas
dec
mov
dec
aam
cmp
mov
js
xor
lea
inc
lock
shll
in
insb
rorl
mov
mov
sti
in
cmp
wrmsr
gs
xor
loopne
add
xor
movsl
ljmp
icebp
dec
inc
pusha
fcoml
pop
jae
les
xor
add
roll
cmp
mov
or
dec
nop
mov
cmpsb
loope
mov
lock
iret
popf
ja
dec
pop
sahf
fucomip
mov
popa
fstpl
lea
int
movsb
push
push
aam
test
dec
dec
repz
divb
xchg
test
std
mov
sub
sub
adc
pop
adc
adc
pop
inc
test
or
mov
imul
fisttpl
lds
lret
das
mov
stos
pop
push
stc
adc
icebp
into
push
mov
jae
add
fwait
xchg
lret
jecxz
mov
enter
mov
std
sbb
shll
mov
cmpsl
and
push
fstpl
add
fcos
jg
repz
ss
push
pushf
into
or
stc
andb
jb
fld
jle
lar
adc
std
inc
arpl
aad
or
lret
sti
jg
inc
sti
jne
leave
fs
pop
rol
add
push
add
ret
cmp
lods
std
cmp
mov
mov
pop
mov
jns
xor
in
and
pushf
push
pop
mov
adc
add
mov
mov
ret
pushf
adc
rcrb
gs
push
sub
jb
pop
jge
adc
or
mov
ss
mov
cmp
jle
lret
fs
imul
lods
sarb
xchg
dec
fisttpll
lret
iret
adc
jmp
cmp
sbb
inc
adc
xor
jb
sarb
iret
mov
nop
jp
ljmp
cmp
sub
lret
sub
sbb
mov
pop
or
shlb
dec
jle
sub
jno
add
sbb
repz
inc
dec
or
push
jmp
dec
cmp
sub
shll
inc
sub
mov
outsb
mov
or
or
xchg
jle
sub
test
dec
xchg
aad
scas
lret
hlt
dec
lcall
imul
insb
mov
fwait
dec
pop
dec
lea
aaa
pusha
in
cmp
sbb
out
jns
xchg
lahf
adc
test
dec
cmp
push
xor
sbb
mov
mov
or
in
test
sbb
rolb
xor
add
fnstenv
jmp
scas
xchg
lret
adc
push
and
mov
in
jb
lahf
ret
pusha
sub
xchg
dec
pop
mov
push
mov
push
rorb
mov
jae
lahf
cmp
add
and
test
push
jno
bound
nop
orl
stc
xchg
dec
dec
imul
jmp
aad
dec
or
xchg
dec
xorl
aaa
add
mov
mov
addr16
mov
lock
or
mov
add
push
xor
test
cmp
icebp
mov
fildll
or
mov
inc
lods
loope
notl
jb
mov
push
push
loop
mov
pop
lret
adc
ffreep
mov
ret
inc
ljmp
fmuls
movsb
imul
and
inc
xor
jae
and
xor
hlt
jae
mov
neg
add
aaa
aaa
jns
js
mov
and
xor
testb
pusha
enter
ret
push
js
xchg
inc
jno
add
es
and
fwait
adc
lahf
insb
xchg
mov
jmp
fmull
test
pop
stc
fnsave
leave
stc
mov
loopne
insl
addr16
movsl
aaa
jl
pop
js
cli
lahf
dec
sub
cwtl
std
xor
in
and
xchg
or
arpl
test
mov
xchg
jp
and
rcll
das
dec
pop
dec
mov
test
dec
or
loopne
cmp
out
jmp
fldl
lret
gs
fucomi
push
imul
sbb
adcl
adc
mov
mov
xchg
inc
mov
jae
and
negl
push
cmp
popl
test
cli
lcall
jmp
push
adc
int
inc
add
lock
and
test
cli
and
jae
or
sbb
popf
and
enter
fwait
cld
cmpxchg
add
mov
gs
inc
mov
cmpsb
icebp
xorb
push
aaa
rorl
cmp
shrl
xor
shll
mov
and
jmp
ret
ljmp
jmp
sub
cld
cmc
mov
lcall
inc
jge
lcall
push
add
mov
int3
mov
in
mov
imul
jno
incl
jbe
rclb
lock
push
fmull
pop
leave
push
pusha
xchg
std
pushw
ds
xchg
aaa
mov
or
gs
or
xchg
pushf
inc
jae,pt
sarb
xchg
roll
fcompl
pop
xchg
les
out
cmp
xor
pop
mov
or
popa
and
stc
invd
mov
dec
or
jb
arpl
pop
xchg
mov
xor
test
push
xchg
insb
lea
dec
pop
jmp
leave
jg
ret
adc
cli
mov
xchg
xchg
bound
stos
mov
scas
mov
mov
adcl
push
sbb
std
sti
adcl
xchg
ds
adc
dec
ljmp
out
adc
in
mov
jmp
push
mov
data16
punpckhbw
push
rolb
sub
or
int3
jbe
je
sbb
jbe
imul
mov
add
lret
adc
repz
std
cmp
sahf
xchg
int3
mov
xorb
cli
inc
fcompl
call
inc
nop
cwtl
jle
addr16
push
pop
repnz
aas
jp
cmp
jg
loop
cmp
cmp
icebp
ljmp
fwait
sti
lea
pop
fsubrs
jge
out
data16
lea
lahf
mov
mov
into
inc
push
hlt
sub
nop
mov
and
or
sbb
xchg
adc
and
adc
pop
loop
mov
dec
loop
xlat
out
mull
add
into
pop
xor
jns
arpl
imulb
pushf
and
test
jg
mov
outsb
jb
inc
cmp
int
in
jno
pop
jns,pn
testb
fmul
ffree
mov
stc
mov
out
sti
imull
movsb
add
loop
pop
xchg
and
aad
cmp
jns
xor
shl
push
sbb
sbbb
int
mov
mov
in
punpcklwd
xlat
sub
mov
gs
iret
cmpl
pop
pop
add
movsl
aad
adc
cmc
xchg
test
xor
addb
fldcw
gs
lret
cmc
and
and
scas
xor
mov
mov
mov
mov
push
in
sahf
mov
dec
dec
in
inc
push
jp
lock
jne
mov
int
cmpb
mov
cmpsb
out
dec
out
das
xchg
gs
aaa
mov
cmp
orb
push
inc
inc
or
movsl
imul
inc
inc
xchg
jp
scas
mov
sahf
outsb
test
dec
cmp
aam
inc
mov
dec
inc
sub
or
xor
dec
sbb
stos
jg
test
mov
xchg
cwtl
outsl
popa
push
xchg
arpl
fcoml
test
jp
sbb
jle
jle
repnz
add
adc
sub
sub
xchg
mov
inc
ror
add
js
nop
jmp
jecxz
call
repnz
mov
mov
or
cmp
outsl
xchg
dec
mov
rorb
xchg
into
repz
xchg
mov
orb
add
adc
inc
test
jne
push
jg
mov
push
or
stos
fcoml
lds
fistpl
pop
pop
cmp
outsb
jg
mov
dec
daa
dec
int
mov
ds
lods
clc
mov
mov
lea
cmpsb
sbb
jne
push
add
shlb
sbb
pop
add
scas
pop
xor
testb
jae
out
push
hlt
sbb
into
and
sahf
mov
or
test
lea
sub
xor
mov
sbb
lret
pop
fcompl
push
jge
jmp
cmp
xor
xchg
push
dec
insb
aam
push
dec
in
gs
jae
xor
xchg
add
ljmp
xchg
les
popf
cltd
mov
fcomps
fdivl
inc
testb
iret
shlb
xor
in
sti
xchg
cld
dec
push
cmp
mov
push
mov
mov
mov
sbb
or
aaa
sub
cmpsb
out
sbbb
js
js
mov
jno
sti
sub
popa
fsubl
ret
sbb
lds
stos
cmp
jp
mov
inc
pop
or
sub
jbe
and
fwait
mov
ret
mov
mov
icebp
fstpt
jne
inc
fistpl
inc
sub
mov
sub
mov
or
loope
scas
xor
push
stos
pop
pop
js
int3
cmpsl
ret
data16
mov
cmp
xchg
loopne
js
mov
cmp
add
push
inc
fisubrs
pop
fisubrl
pop
sbb
fldl
fisttps
jmp
fwait
jg
fmull
or
addr16
sahf
xor
mov
jge
jg
pop
fdivl
insb
dec
scas
pushf
cmp
fwait
push
sbb
clc
xchg
pusha
mov
imul
mov
xchg
test
mov
mov
or
imul
dec
popf
jecxz
mov
jns
adc
pop
xor
lods
gs
mov
xchg
mov
push
pop
insb
into
jb
or
mov
cmpl
sbb
jge
sbb
sub
arpl
in
incl
push
mov
pop
add
fnsave
std
jmp
pop
mov
ret
mov
test
mov
mov
push
jno
lock
push
xlat
adc
lahf
xor
mov
iret
dec
inc
fwait
andl
adc
xor
imul
cmpsb
int
pop
mov
clc
test
jg
pop
mov
push
xchg
cmp
dec
ret
sbb
jge
push
mov
cltd
cmpsl
cmp
in
mov
add
inc
and
fcmovnu
les
arpl
xchg
shlb
mov
fdivrs
pop
mov
cmp
testl
jg
ret
add
inc
sub
mov
sbb
das
cwtl
sbb
inc
ret
inc
and
dec
ds
jo
dec
push
mov
outsb
or
out
repz
xchg
mov
test
dec
lret
bound
out
icebp
dec
mov
es
jns
daa
mov
adc
dec
xchg
hlt
ror
cli
dec
sti
inc
xor
cmp
iret
clc
ffree
imul
xor
sti
or
pop
inc
mov
pop
call
push
jl,pn
cmp
mov
add
jns
dec
or
inc
pushf
jnp
mov
adc
add
mov
xlat
loope
sub
xor
cli
mov
push
leave
xor
cmpsl
jae
int
cmc
mov
xchg
sahf
adc
mov
icebp
jg
push
cmc
shlb
lret
mov
push
hlt
stos
mov
xor
xchg
jae
mov
andl
push
aas
mov
shl
das
push
leave
jbe
sahf
push
push
stc
sbb
dec
xor
xor
adc
int
rorb
into
hlt
mov
mov
xchg
clc
mov
and
adcb
xor
dec
inc
fldl
ja
lea
pop
xchg
add
stos
jbe
sbb
addl
push
mov
mov
cld
inc
sbb
lcall
sbb
add
xor
clc
jecxz
outsl
iret
push
insb
lods
jae
fwait
pop
and
xchg
pop
inc
dec
sub
mov
add
inc
stos
imul
stos
mov
nop
jecxz
lcall
int
sbb
push
fwait
jns
mov
out
pusha
fmuls
lret
pop
xchg
xor
das
add
jmp
add
push
fisttpll
lret
adc
adc
xor
inc
les
add
mov
mov
dec
icebp
sbb
push
jle
pop
subl
adc
push
icebp
mov
adc
js
xchg
dec
pop
cmp
jp
arpl
or
sub
xor
insb
lock
sub
gs
fwait
adc
push
repnz
mov
mov
mov
add
in
adc
pop
cwtl
xchg
jo
push
stos
xchg
xchg
aam
or
in
call
and
mov
jge
mov
xor
repz
ficoml
jb
pop
mov
mov
xchg
lock
push
mov
sbbl
sub
xchg
adc
mov
pushf
mov
mov
dec
inc
jae
scas
jl
cmpl
xchg
insl
pusha
sbb
or
daa
imul
mov
mov
pusha
mov
iret
int3
jns
xchg
aas
test
pop
mov
sbb
push
mov
jle
inc
and
js
ljmp
mov
inc
negb
inc
adc
pop
sbb
test
dec
mov
push
sub
adc
jge
cwtl
or
add
cmp
imul
xchg
xchg
fcomps
mov
icebp
nop
loopne
cmp
pusha
push
push
add
adc
sub
fnsave
pop
adc
inc
push
cmp
popf
daa
add
pop
mov
sub
scas
loop
movsl
in
aas
inc
push
popa
mov
