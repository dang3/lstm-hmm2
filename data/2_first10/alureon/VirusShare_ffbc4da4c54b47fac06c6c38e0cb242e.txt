push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
andl
push
push
push
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
jmp
push
call
mov
mov
mov
add
xor
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
push
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
mov
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
jmp
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
add
add
mov
lcall
pop
mov
jae
adc
int
sbb
inc
xchg
push
stc
psrld
sbb
addr16
or
xchg
bound
mov
sub
es
imul
arpl
jg
mov
mov
das
mov
mov
cmp
lods
sbb
cmc
and
out
rol
push
outsl
xchg
lret
adc
sbb
mov
orb
ret
lahf
fmull
js
subl
dec
cmp
mov
cwtl
push
cli
in
add
or
popa
cmp
cmp
xchg
in
mov
add
add
dec
inc
cmpsl
pop
rcll
jg
jg
nop
push
es
inc
or
and
xchg
mov
dec
pop
fidivrl
daa
dec
or
cmp
xor
pop
inc
fwait
pop
xchg
test
or
push
or
lahf
push
jns
add
sbb
xchg
jmp
xor
xlat
stc
shr
xchg
gs
inc
xlat
mov
cmp
rorb
push
repnz
or
call
jbe
dec
sbb
jne
add
and
mov
bound
hlt
sbb
jmp
test
jle
scas
mov
mov
xchg
adc
xor
lods
notl
js
outsb
xor
lcall
xor
cmp
popw
jae
sbb
adc
pop
inc
dec
jl
vmovaps
add
outsb
push
sbb
pop
sahf
sbb
add
bnd
add
out
iret
mov
nop
inc
adc
sbb
aam
inc
cmp
cmp
add
cltd
mov
mov
rclb
xorl
inc
in
xor
insl
lahf
cs
xchg
add
imul
sub
jl
pop
insl
bound
lds
xchg
xchg
mov
cmpsb
in
in
mov
into
mov
aaa
cmp
in
xor
add
inc
jo
cmpsl
add
mov
lods
stc
sarb
fcompl
mov
repz
test
xorl
xchg
mov
lock
sbb
and
js
xor
xor
das
ficoms
fucom
or
xor
adc
push
adc
mov
inc
hlt
outsl
int3
mov
push
adc
jg
sbb
mov
sub
xorl
add
add
add
in
fsubs
in
xor
lock
xchg
add
loop
or
dec
and
addr16
add
pushf
out
sbb
dec
mov
xor
ja
adc
pop
lea
movaps
outsb
mov
call
scas
loop
fmuls
xchg
inc
cltd
sahf
xchg
and
test
add
mov
in
leave
add
test
add
fs
imul
push
or
add
add
sbb
jl
loop
push
jg
adc
add
loopne
repz
pop
mov
sbb
iret
or
add
cmpb
gs
pop
lret
dec
sbb
adcl
adc
mov
into
sbb
insl
and
jge
pop
cmp
xor
rorl
and
cltd
arpl
adc
jmp
push
scas
cmpsl
inc
insl
inc
jno,pn
aas
sti
jb
pop
inc
or
in
loop
sub
mov
and
mov
mov
jne
xor
imull
out
xchg
bound
outsl
cmp
testb
jo
test
adc
popa
add
pop
cltd
pop
xchg
inc
mov
int3
push
bound
mov
cmp
jmp
out
dec
jle
xor
ret
sbbl
imul
repnz
jecxz
pop
fisubs
stos
mov
mov
cs
data16
push
xchg
pop
mov
inc
mov
add
add
sbb
test
dec
ja
popl
and
cmpsb
ja
xlat
daa
aam
mov
les
cli
shl
lret
sub
ret
sub
mov
mov
fisubrs
or
arpl
jns
cmp
aas
mov
ss
dec
mov
mov
in
adc
push
pop
push
add
mov
dec
mov
sti
cmp
lock
or
loopne
out
fwait
xor
add
nop
lcall
or
jg
push
mov
inc
cmpl
xor
scas
xor
dec
adcb
scas
dec
jecxz
fcoml
scas
sbb
jne
jb
add
repnz
push
inc
xor
mov
mov
cmp
pop
mov
adc
sub
ret
mov
or
stos
inc
out
lock
hlt
lret
cmp
out
sub
jp
mov
jp
out
and
add
mov
mov
jg
pop
sbb
loopne
jmp
cmp
adc
ss
mov
mov
fwait
enter
mov
sti
mov
ja
call
sub
fsubr
out
ficoml
cmpsl
sub
push
add
mov
pop
inc
adc
rolb
push
mov
popa
add
gs
movsl
jg
cld
fwait
popf
pop
and
jl
add
das
daa
int
add
loopne
loopne
scas
pop
fldcw
inc
mov
lock
movl
lods
test
add
cmpsl
int
jle
mov
insb
dec
cmp
idivb
mov
jbe
aad
sub
call
jmp
lcall
lods
jl
or
and
mov
jl
xchg
cmp
leave
push
mov
js
rcrb
call
add
add
fisubrs
testl
pop
push
dec
pop
outsb
dec
sbb
lods
aad
jecxz
in
add
enter
icebp
hlt
add
or
mov
in
clc
in
push
popf
sub
pop
out
mov
mov
mov
add
push
imul
push
rol
xchg
sbb
test
out
test
loop
loope
fucomip
insl
iret
adc
pushf
in
clc
popf
mov
or
add
add
mov
cmp
dec
dec
push
and
jg
add
adc
fdivrp
mov
shrb
xlat
popa
adc
sub
pop
movsl
mov
rclb
mov
push
lock
push
in
and
ret
push
xlat
pop
fmul
fstps
pushf
pop
pusha
adc
lcall
jg
adc
xor
sbbb
imul
add
push
xor
inc
mov
shl
push
push
push
jecxz
and
lahf
push
jnp
arpl
cmp
push
mov
sbb
aad
mov
movsl
ret
std
ljmp
mov
push
mov
mov
xchg
int
stos
iret
cmp
cmc
xor
das
in
push
add
and
adc
add
lods
mov
clc
sub
lock
mov
adc
sbb
lods
xlat
mov
sahf
test
sbb
mov
cmp
push
popf
movsb
arpl
or
insl
and
mov
push
lods
adcb
push
mov
js
jle
test
mov
add
or
aaa
adc
xchg
hlt
out
imul
xchg
mov
sbb
rcrl
add
add
hlt
jmp
jle
loope
clc
xchg
cli
sub
das
dec
sub
jae
dec
pop
jl
mov
inc
mov
loop
adc
cs
mov
inc
stos
add
mov
mov
imul
rolb
xchg
jnp
cmpb
and
daa
mov
sub
loope
out
leave
aas
fidivrl
and
mov
in
int
aad
xchg
aad
pop
popl
stos
rcll
inc
inc
ficoms
bound
add
add
mov
ljmp
or
ljmp
out
dec
rcrb
xor
mov
adc
ret
repz
mov
rdpmc
sbb
ds
fmul
imulb
cs
pop
mov
lock
pop
mov
cmpsb
pop
xchg
jnp
scas
in
fstpt
enter
inc
lea
pop
cmp
fidivrs
push
xor
fisttps
aaa
fistpl
adc
mov
lods
cs
xchg
js
add
add
mov
repnz
mov
bnd
nop
jo
jl
rolb
clc
aad
bound
jl
cmc
out
daa
test
cltd
cmp
cli
insb
inc
pop
pop
sarb
add
bnd
mov
std
jge
lods
adc
outsb
sub
je
sub
and
aad
mov
stc
or
sarl
add
sbb
loope
push
pop
mov
mov
push
lods
push
std
and
in
xlat
add
ljmp
popa
add
push
push
cmc
xchg
stos
fsts
movsb
sbb
aas
iret
aam
pop
lcall
movsb
fs
and
push
into
loop
sub
mov
daa
dec
stos
xor
and
mov
sbb
and
iret
cmp
pop
ja
sti
scas
inc
jae
push
mov
add
or
sahf
pop
xor
sbb
xchg
call
dec
jne
lods
fcompl
jle
pushf
andl
jp
pushf
mov
xor
add
loop
icebp
push
jmp
jb
push
push
sub
imul
jns
sbb
pop
call
xchg
insb
daa
jge
cmp
repnz
adc
jbe
mov
dec
mov
das
pop
or
outsl
jmp
fcoms
add
add
call
mov
jle
cs
fcom
shll
jns
cmpsb
movsb
push
cwtl
mov
add
pop
mov
mov
lahf
add
stos
sbb
shrl
push
cs
loope
fiaddl
jmp
mov
jbe
mov
cmp
sbb
enter
lahf
adc
xchg
add
call
inc
jo
repz
ror
inc
insb
xor
mov
dec
js
popf
cltd
push
loop
adc
shrl
ret
xor
pop
sbb
or
push
jmp
xchg
xchg
dec
jmp
mov
out
push
xor
sbb
lahf
ljmp
repnz
mov
sub
les
out
xchg
sub
push
fsubs
in
fisttpll
add
clc
dec
int
jae
lcall
cmp
dec
pop
or
pushf
ret
inc
xchg
shrl
add
dec
iret
xchg
movsb
and
cmp
inc
lods
int3
and
or
cmp
fildll
and
gs
icebp
dec
sbb
xchg
xchg
into
cmp
push
mov
jae
cwtl
movsl
mov
push
sbb
mov
jo
stos
adc
cmp
cmp
sbb
stos
jnp
in
mov
sbb
test
nop
stos
dec
sar
xchg
hlt
or
pop
std
lahf
popa
mov
jno
ret
xchg
cli
ljmp
scas
xchg
jne
fstl
pop
sbb
cwtl
sub
add
outsl
rcr
xchg
or
push
icebp
jnp
push
cmp
add
xchg
imul
add
out
fdivl
cli
sti
lahf
jne
mov
inc
enter
loop
jg
mov
js
mov
sub
sub
xor
fidivs
fnstenv
fimuls
test
scas
int
xorb
adcl
mov
les
arpl
jg
sarl
sbb
or
das
mov
inc
add
mov
adc
xchg
out
je
leave
add
push
scas
cmpsb
and
mov
cld
adcl
es
jecxz
mov
jmp
out
sbb
add
jbe
pop
jg
roll
jecxz
or
jns
dec
stos
mov
orb
add
sub
data16
outsl
xor
cwtl
xor
pop
int
jmp
sub
sub
mov
or
adc
jbe
or
out
data16
xchg
or
jae
or
and
jo
hlt
addb
cmc
aaa
xchg
push
jmp
mull
js
inc
popa
jbe
ss
xchg
push
pop
popa
pusha
cmc
pop
pop
jno
testl
push
jmp
cmp
ret
mov
adc
mov
sub
add
and
push
rcr
mov
or
test
in
lcall
push
jno
iret
out
xchg
aaa
lret
mov
ret
stos
out
test
sub
inc
cmpl
sbbb
int
xchg
pop
xor
or
xchg
sbb
inc
insb
insb
cmc
enter
loop
aad
xor
inc
out
push
adc
ret
dec
lods
and
adc
dec
pushl
fiadds
pusha
xor
nop
aaa
fstl
mov
push
and
pop
cmp
mov
fcomps
dec
lcall
scas
in
out
cld
adc
or
hlt
mov
lods
cltd
lret
scas
cld
pop
jle
push
dec
cmpsl
mov
dec
shll
dec
mov
push
dec
cmp
cmp
mov
xor
pusha
lds
dec
dec
ljmp
inc
sub
shlb
sbb
lret
cs
cmpb
in
dec
pop
sbb
lret
iret
loop
popf
nop
loope
rcll
cmpsb
andl
add
xorb
mov
daa
imul
adc
push
dec
aam
aaa
jbe
add
dec
dec
sub
aaa
pop
jne
aam
out
imul
jo,pn
jo
sbb
outsb
dec
loope
xchg
sbb
movsl
sbbl
subl
scas
out
outsb
adc
test
jecxz
je
aad
lret
xchg
jmp
fcmovne
lret
fcomip
repz
add
sub
pop
push
shll
mov
add
adc
mov
mov
or
or
xchg
sub
pcmpgtw
mov
fs
jl
jg
scas
push
test
jbe
gs
and
xor
mov
into
add
xor
out
movsl
cld
out
mov
pop
insl
xchg
fldt
mov
jmp
jmp
sar
pop
std
sub
arpl
das
cmpsl
fucomip
ficoml
or
lds
scas
mov
push
push
xchg
mov
push
lods
mov
insb
in
lock
jae
inc
out
mov
int
inc
sub
lret
push
iret
outsl
pop
adcb
dec
in
pop
int
or
xchg
neg
pop
add
sub
and
inc
mov
in
nop
aad
xchg
mov
test
js
dec
xchg
cld
mov
add
scas
popa
push
scas
leave
xor
and
shll
sub
inc
and
add
lea
sti
sub
bound
push
xor
lds
and
nop
repz
cs
outsb
jmp
lods
cmpsb
cmpb
cli
testl
sbb
fstl
cltd
add
jb
loope
int
xchg
mov
pop
xchg
js
outsl
push
test
jnp
mov
in
xlat
xchg
sub
lds
rclb
add
xchg
xchg
in
or
sub
sahf
add
fdivrl
and
jp
pop
ret
mov
fists
xchg
jmp
push
lock
shl
lods
push
movsb
nop
imul
xchg
mov
or
sub
lret
jle
in
mov
push
push
test
aaa
cmpl
pushf
mov
jg
inc
add
jae
test
sbb
fisubrl
jl
add
imulb
dec
or
jl
or
add
flds
fdivs
stc
cmp
xchg
insl
add
movsl
mov
push
add
cmp
xchg
pop
mov
cmp
dec
insb
scas
insl
loope
pop
ret
jl
cli
add
sub
imul
mov
adc
sahf
xlat
and
xchg
mov
pop
xor
daa
fildl
add
add
call
adc
imul
fwait
push
inc
push
loopne
dec
mov
or
cmp
enter
mov
jmp
add
pop
popf
fucom
xchg
mov
add
jmp
cmpsl
xchg
daa
mov
jo
int
dec
int
and
in
fstpt
dec
mov
push
jp
fs
cmp
mov
fcoml
mov
add
xchg
xchg
sub
loop
inc
add
sbb
cmp
stc
push
arpl
sub
mov
test
insl
out
push
and
xor
inc
mov
lar
jo
cld
les
push
lret
jbe
fsubrs
or
scas
repz
std
inc
mov
lcall
mov
push
enter
out
and
push
xor
js
ss
push
xor
or
mov
jno
xchg
clc
add
or
push
xor
push
pop
outsl
mov
sti
cmp
mov
mov
addr16
xchg
clc
add
inc
fprem
mov
insb
xlat
imul
jnp
in
pop
sbb
repz
mov
sti
in
adc
adc
cmpsb
jmp
stc
xchg
rcl
jg
mov
loope
add
jno
lea
stos
or
loopne
mov
das
cltd
in
test
push
and
add
add
arpl
xor
rorb
aam
fsts
xor
xor
jge
dec
xor
jmp
add
cmpsl
fsubrl
mov
call
dec
or
icebp
addr16
jno
sbb
adc
push
ficomps
loopne
mov
in
aaa
xchg
in
jbe
push
or
or
pop
fildll
in
sub
or
mov
repnz
add
or
jnp
dec
sub
xchg
jmp
xor
scas
sbbb
or
add
add
add
insl
dec
into
imul
aas
dec
jmp
push
inc
and
pop
cmp
push
out
xor
or
jg
jno
sub
dec
mov
add
and
pushf
rclb
xor
sbb
in
imulb
sub
sbb
or
cld
pop
jle
repnz
enter
fdivs
mov
insl
cmp
out
ja
push
dec
loope
jbe
roll
inc
jns
incb
inc
into
cwtl
dec
sbb
jecxz
cmp
mov
shl
cmp
scas
add
les
and
adc
jno
pop
popf
mov
nop
add
repz
inc
mov
pop
push
into
and
mov
sti
fnstsw
or
out
sahf
mov
std
cld
fldenv
and
inc
push
cltd
test
dec
sub
adc
shll
jo
sub
mov
pop
jne
add
xorb
adc
popf
pop
pop
mov
push
mov
sbb
adc
inc
push
mov
rcll
leave
mov
addr16
sub
movsl
scas
movsb
call
shr
icebp
into
popl
pop
stos
aas
mov
xor
lods
test
cmpsb
mov
aaa
lods
inc
sub
hlt
in
sub
add
push
lret
push
add
adc
sbb
mov
call
leave
shlb
lds
jbe
dec
fisubrs
jnp
jne
add
ljmp
push
loope
xor
test
fstl
xor
je
push
adc
mov
loop
ficoms
xchg
cld
mov
fcom
cmpb
or
fnstenv
addr16
add
cmp
add
mov
je
imul
add
add
outsl
mov
movsl
mov
mov
mov
mov
sub
mov
fistpll
fnstsw
scas
inc
stos
dec
loope
out
or
pop
cs
push
sti
jp
add
inc
jnp
cwtl
jge
aas
adc
push
cmc
ds
and
mov
mov
jbe
addr16
iret
repz
gs
rorb
push
mov
mov
sarl
cmpsb
pushf
not
addl
push
je
sub
sub
shll
inc
sub
pusha
cmp
loop
jnp
lret
lods
imul
leave
cmp
mov
lret
lock
jnp
decl
mov
mov
inc
push
sahf
push
lahf
xchg
jns
cmp
nop
insl
mov
movsb
insl
fildl
cmp
ret
add
cmp
sbb
add
testl
loop
insb
in
xchg
mov
mov
jno
xor
out
in
inc
push
data16
data16
jno
pop
aas
push
mov
stos
aam
xor
adc
or
and
mov
fsubrs
lods
pusha
es
and
in
lds
xchg
pop
cld
movsb
in
test
adc
sahf
jo
addr16
sti
push
add
mov
mov
fidivrs
cmpsb
mov
dec
sahf
adc
clc
aas
testl
mov
pusha
mov
dec
add
push
mov
sub
daa
repnz
add
and
pop
outsl
inc
adc
test
inc
sub
push
jno
rcrb
outsl
shlb
fbstp
std
xchg
outsl
inc
out
or
sub
test
add
jl
call
lock
add
mov
xor
lds
dec
adc
movb
jge
jg
leave
ljmp
mov
dec
in
es
aad
sbb
add
push
cmpsb
repnz
and
les
push
sbb
shl
mov
add
leave
les
mov
pop
insb
sbb
test
idiv
push
or
xchg
mov
arpl
jmp
fistps
scas
jp
mov
inc
sbb
lods
stos
cwtl
shlb
jno
jnp
dec
pushf
push
mov
and
cmc
adc
stos
pushf
insl
stos
loopne
sub
push
fists
mov
mov
fistpll
and
pop
add
aad
fcomp
pop
mov
cwtl
push
sub
mov
add
add
add
fisubs
in
xor
lcall
push
xor
cvtps2pi
repz
mov
push
adc
inc
stc
bound
or
fdivrl
jbe
subl
scas
mov
mov
and
pop
addr16
mov
inc
rcll
push
mov
sbb
addr16
cs
or
rol
and
xor
pop
idivl
mov
es
imul
lret
mov
sub
sbb
fdiv
push
inc
mov
add
in
xor
xor
pop
xchg
rclb
or
addr16
pop
loope
push
xor
pop
bound
popaw
push
mov
pop
aaa
movl
sti
ds
in
sti
cmp
adcl
xchg
in
sysexit
cs
add
out
mov
adc
dec
cmpsl
mov
fwait
xor
mov
add
leave
xchg
sti
aaa
jbe
sub
mov
shll
pop
add
rcrb
lods
jo
loope
jb
popf
inc
sbb
arpl
loop
mov
test
inc
ss
stos
lods
shl
fwait
push
les
xchg
popa
scas
in
jecxz
pusha
loope
jo
imul
je
ss
jl
movsl
mov
ja
rcrl
cmp
push
sub
sub
inc
or
les
add
mov
jbe
ljmp
inc
xchg
sbb
mov
dec
hlt
sub
mov
jae
imul
inc
leave
shrb
out
fsubs
or
cli
xchg
int3
fmulp
pop
lret
pop
ficoms
push
jecxz
pop
out
pop
sub
adcl
icebp
push
pop
dec
jl
lea
cli
out
sbb
orl
xor
add
xchg
aas
gs
mov
xchg
cwtl
cld
adc
inc
sub
aad
repnz
imul
call
repz
sub
adc
add
push
sbb
enter
repz
lea
jp,pt
shrb
xlat
push
dec
outsb
jmp
cmpsl
inc
enter
add
mov
push
mov
push
push
add
cwtl
dec
mov
enter
out
cwtl
mov
je
imul
add
mov
scas
out
mov
or
push
lret
mov
dec
dec
popa
loope
pop
in
add
inc
sub
mov
push
jo
jno
fmul
mov
in
sbb
or
push
out
idivl
outsb
xchg
icebp
xchg
imulb
dec
nop
frstor
leave
mov
sbb
mov
xor
inc
les
jns
jle
cmp
mov
add
add
inc
xlat
cmpsb
mov
cmc
dec
nop
out
cltd
mov
sahf
daa
mov
jae
mov
lret
out
cmp
fdivrl
inc
sti
pop
stos
pop
pop
je
dec
pop
shll
cmp
mov
ja
inc
inc
xchg
xchg
imul
and
jbe
in
pop
jl
int3
clc
push
push
pop
pop
scas
adc
lds
cwtl
xchg
aad
leave
lods
aas
and
mov
fcmovb
push
pop
mov
add
add
ss
loopne
mov
cmc
test
add
mov
addr16
pop
jbe
sbb
mov
dec
in
pop
push
cwtl
xchg
sbb
or
scas
or
pop
sub
pop
mov
xchg
mov
xchg
and
mov
hlt
cmp
outsl
dec
std
xlat
dec
xchg
movsl
xor
movnti
and
fnsave
dec
dec
out
adc
xchg
repz
add
pop
xor
leave
push
daa
jecxz
pushf
mov
ds
mov
add
mov
mov
bound
xchg
rclb
hlt
pop
out
sub
push
xchg
mov
mov
icebp
jno
and
call
shll
and
popf
cmpsb
mov
in
repz
sub
icebp
enter
loope
sbb
and
xchg
jp
or
cmpsb
roll
jge
jp
jmp
push
pop
lods
jp
push
or
shlb
add
cmp
lcall
cs
xchg
pop
jp
das
stos
jnp
mov
push
shrl
aas
pop
mov
push
cmp
mov
gs
test
add
adc
call
outsb
jge
xlat
jo
sub
mov
sub
sub
cmpl
mov
mov
mov
jne
adc
mov
push
mov
cli
cwtl
std
bnd
push
inc
jmp
jo
adc
mov
mov
add
add
dec
inc
and
dec
and
mov
and
fadds
mov
xchg
mov
imul
inc
movsl
add
out
adc
fstps
mov
sub
or
jp
xchg
jecxz
test
pop
fdivrl
or
mov
xor
push
xor
insb
popf
cmp
ret
js
ss
inc
hlt
scas
nop
pop
mov
push
dec
stc
test
leave
lret
xchg
add
add
cli
ds
mov
repnz
mov
int3
xchg
imul
or
jb
mov
and
ret
outsl
xchg
sub
das
push
sbb
dec
mov
loope
sahf
mov
sbb
shlb
push
xor
aaa
test
repnz
test
push
xor
repz
dec
xor
and
cmc
mov
mov
cmp
jmp
add
push
stc
stos
mov
inc
xor
jl
add
and
sbb
pop
dec
mov
xor
pop
sbb
sarb
cmpb
or
cmpsl
xchg
push
inc
dec
pop
jne
adc
das
adc
jbe
divl
bound
jl
cwtl
fisttpl
or
shlb
lahf
inc
sub
add
out
popa
cmp
push
sahf
les
xchg
scas
xchg
push
divb
inc
in
add
out
inc
mov
js
xor
pop
in
lods
and
xor
stos
aaa
xor
mov
mov
jo
inc
lcall
jno
dec
out
lods
adc
jg
inc
adc
sbb
pop
stos
dec
js
scas
dec
push
mov
fidivl
je
repnz
jno
hlt
fcoms
out
repnz
test
rclb
cmp
jnp
nop
xchg
cltd
dec
mov
daa
icebp
fidivrs
fprem1
lods
and
jne
ss
aad
add
sub
aad
cmp
jbe
jge
fistpll
mov
mov
sub
cs
add
xchg
jl
jnp
enter
xchg
xchg
mov
arpl
mov
mov
jmp
cltd
rcrl
pop
loopne
dec
cltd
cld
mov
mov
xor
hlt
rcrb
add
loopne
scas
sarb
pop
cmpsb
ds
mov
fs
mov
mov
leave
test
push
ss
xchg
movsl
movb
andl
push
cmp
aam
jb
mov
xlat
das
ja
jne
aaa
sbb
sahf
xor
or
mov
or
sti
js
xlat
test
sbb
and
fsubl
mov
subl
dec
push
xchg
sub
lock
add
in
mov
mov
faddl
add
cld
lcall
xchg
and
jge
popf
fadds
or
xchg
faddl
jmp
pop
test
jecxz
enter
je
sbb
cmpsb
ljmp
jl
pushf
lock
cmp
fildll
push
xor
mov
pop
xchg
sbb
xor
mov
fdivs
mov
sub
jecxz
pop
mov
xlat
push
inc
add
pop
jnp,pt
sti
or
out
lods
outsb
lahf
pop
xor
xchg
dec
lret
mov
jae
call
gs
repnz
sub
