dec
lods
in
sub
add
ljmp
fildll
imul
in
and
in
daa
inc
gs
daa
inc
gs
cmpsl
in
daa
inc
gs
cmpsl
in
and
mov
inc
gs
mov
inc
mull
inc
adc
inc
cmp
inc
gs
mov
inc
gs
in
and
xchg
mov
inc
gs
and
inc
gs
in
and
pop
in
and
push
mov
inc
gs
in
and
out
in
and
mov
and
lds
inc
gs
in
and
aaa
mov
inc
gs
mov
inc
gs
inc
lea
inc
gs
mov
inc
gs
in
and
jecxz
in
and
or
and
push
mov
inc
gs
mov
inc
gs
cmpsl
in
daa
inc
mov
daa
inc
mov
inc
gs
cmpsb
in
es
gs
in
es
gs
cmpsb
in
es
gs
es
gs
in
es
gs
mov
inc
test
inc
in
movsl
lds
and
vpsrlq
inc
gs
in
cs
test
inc
gs
in
and
test
inc
xchg
inc
gs
scas
in
cs
gs
in
cs
gs
in
sub
in
sub
in
sub
in
sub
in
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
cs
test
inc
test
inc
adc
push
jae
andb
add
xor
je
andb
imul
dec
imul
inc
gs
add
test
test
pop
add
test
inc
test
test
sbb
test
inc
test
test
sbb
test
inc
test
test
sbb
test
inc
test
inc
test
inc
test
inc
test
inc
gs
rolb
test
test
push
add
test
inc
test
inc
test
inc
test
inc
test
inc
gs
add
test
test
sbb
inc
test
inc
test
test
push
add
test
inc
test
inc
test
inc
test
inc
test
shl
lock
inc
ja
repnz
push
pop
add
xor
jo
stos
shl
push
jb
mov
cmpsb
test
stos
into
jmp
push
or
test
dec
nop
mov
test
mov
icebp
adc
add
mov
in
mov
lret
jmp
imul
rol
repz
sub
push
mov
ret
es
xchg
orb
dec
mov
repnz
pop
and
mov
jle
mov
in
mov
mul
push
push
inc
jno
xlat
ret
andb
and
adc
xchg
dec
xchg
loop
push
aas
and
xor
inc
add
roll
test
test
add
test
inc
test
test
or
inc
test
inc
test
test
add
test
inc
test
test
add
test
inc
test
inc
test
inc
test
inc
test
inc
gs
add
test
test
add
test
inc
test
test
add
test
inc
test
test
push
add
test
inc
test
test
push
add
test
inc
test
test
syscall
in
and
and
vpsrlw
gs
syscall
in
and
and
and
and
and
mov
jno
mov
in
mov
jno
mov
in
mov
jo
arpl
in
mov
jo
arpl
in
mov
adc
xor
lock
adc
xor
lock
vpunpckhbw
adc
sub
subb
mov
sub
imul
jge
and
sub
imul
inc
jl
inc
testl
stos
shl
or
inc
and
push
inc
xchg
mov
dec
add
xor
xlat
ret
vpunpckhqdq
andb
outsb
mov
aad
xor
inc
nop
mov
gs
movsl
and
and
mov
shl
push
in
push
test
out
and
mov
dec
imul
xchg
mov
inc
pusha
andl
lret
adc
push
ja
mov
repz
pop
jg
jbe
mov
repnz
movsl
and
add
gs
int
in
dec
test
movsl
dec
test
int
in
dec
test
int
in
dec
test
int
in
and
add
gs
add
test
inc
gs
int
in
dec
test
int
in
dec
test
movsl
and
and
and
and
and
and
and
and
add
test
inc
test
inc
test
inc
test
inc
movsl
int
in
dec
test
int
in
and
and
add
test
inc
test
inc
test
inc
test
inc
gs
add
test
inc
test
inc
test
inc
test
inc
gs
int3
add
test
inc
test
inc
test
inc
test
inc
gs
add
gs
int3
add
test
inc
gs
int
in
and
and
and
and
and
add
gs
int3
add
gs
add
gs
add
test
inc
gs
add
gs
and
and
and
and
add
gs
int3
add
test
inc
gs
int
in
and
and
and
and
and
and
and
and
and
and
add
gs
and
and
and
and
add
test
inc
test
inc
gs
int
in
and
and
and
and
and
and
and
and
and
and
add
gs
int3
add
test
inc
test
inc
test
inc
gs
add
test
inc
test
inc
gs
int
in
and
and
and
and
and
and
and
and
and
and
add
gs
add
gs
add
gs
add
gs
add
gs
add
test
inc
test
inc
gs
add
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
gs
ret
add
gs
ret
add
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
gs
push
inc
imul
inc
gs
sub
add
or
jbe
adc
fisubl
mov
in
andb
xchg
mov
adc
jb
mov
icebp
jmp
pop
dec
popf
mov
bound
push
jno
subb
xchg
mov
out
and
mov
lret
stos
add
and
push
dec
sub
vpcmpgtd
push
dec
pusha
subb
dec
mov
in
mov
shl
and
mov
rclb
in
mov
mov
mov
vpcmpgtd
sub
data16
lret
and
inc
gs
push
inc
xchg
mov
icebp
out
vandpd
jo
mov
lock
rol
adc
push
jno
dec
mov
in
mov
lock
push
jo
xchg
cmc
sbb
andb
outsb
mov
mov
mov
inc
xchg
dec
mov
in
mov
in
mov
lret
stos
movsl
adc
out
or
sub
adc
adc
mov
shl
adc
push
mov
shl
adc
push
subb
push
and
and
mov
cmc
aam
adc
jmp
mov
adc
es
lea
adc
jmp
xchg
mov
notl
xor
sub
es
xchg
mov
gs
and
inc
gs
sub
adc
test
inc
gs
and
subb
pusha
lea
adc
es
lea
out
push
je
and
push
dec
imul
cmpsb
mul
or
movsb
hlt
push
cli
vpcmpgtd
jp
gs
and
add
xchg
mov
movsb
test
mov
and
and
pop
or
int3
jmp
adc
test
shlb
push
and
inc
gs
xor
inc
gs
or
inc
add
andnps
inc
gs
mov
jo
mov
notl
movsl
vandpd
inc
imul
xchg
mov
lret
pop
cmp
stos
lock
arpl
push
dec
xchg
and
push
inc
arpl
in
sbb
jmp
sbb
test
ror
loope
loop
add
xor
add
ret
push
jb
mov
movsl
subb
xchg
mov
in
ja
mov
movsl
xchg
mov
aam
jmp
and
adc
ljmp
sub
mov
cmc
loop
in
bound
sub
das
dec
outsl
test
mov
in
xor
pop
je
adcb
push
add
lcall
adc
mov
mov
in
mov
imul
push
and
inc
shlb
xor
pop
je
adcb
push
in
mov
cmc
fcomip
adc
nop
je
gs
adc
push
add
adc
push
add
scas
inc
sar
test
test
cmc
add
gs
add
gs
add
gs
add
gs
jne
gs
add
gs
cmc
add
test
test
cmc
add
gs
add
gs
jne
gs
add
gs
add
gs
jne
mov
jne
test
test
hlt
add
gs
add
gs
hlt
add
gs
je
gs
je
gs
add
gs
je
gs
add
gs
lret
add
gs
lret
add
gs
add
gs
dec
test
lret
add
gs
add
gs
test
lret
gs
add
gs
add
gs
dec
test
lret
pop
dec
test
lret
cmp
gs
add
gs
leave
add
gs
add
gs
dec
test
leave
add
gs
add
gs
add
movsl
leave
add
gs
add
gs
enter
dec
test
enter
dec
test
enter
dec
test
enter
dec
test
movsl
mov
icebp
ljmp
mov
xor
in
mov
icebp
out
daa
or
stos
gs
mov
mov
or
je
and
daa
jno
mov
and
inc
gs
daa
dec
data16
ret
es
xchg
adc
andb
imul
xchg
and
and
mov
adc
inc
adc
and
mov
hlt
out
and
pusha
mov
gs
sub
pusha
mov
adc
es
mov
repnz
adc
mov
je
and
push
inc
imul
stos
adc
sub
subb
or
in
andb
bound
jmp
push
add
xchg
ret
push
dec
add
add
jb
mov
in
push
push
inc
bound
sub
xchg
mov
mov
xor
in
mov
ret
es
adc
loopne
sub
xchg
mov
sbb
jmp
xchg
mov
adc
adc
adc
jmp
xchg
and
push
dec
nop
mov
imul
push
sub
mov
in
mov
lret
pop
add
xchg
mov
ret
push
dec
add
add
xchg
mov
hlt
out
and
pusha
mov
gs
mov
adc
push
inc
sub
vpackssdw
and
pusha
mov
gs
push
inc
popa
mov
in
xchg
icebp
pop
push
and
stos
mov
xor
in
xchg
icebp
loop
ljmp
movsl
vpunpckhwd
jmp
xchg
mov
jmp
dec
cmpsb
rcll
push
jno
mov
icebp
adc
and
inc
gs
mov
icebp
adc
push
jne
mov
mov
xor
in
mov
cld
jmp
and
cs
arpl
je
and
daa
jo
adc
loopne
sub
outsl
xchg
dec
imul
sar
out
and
mov
adc
vpunpcklqdq
je
mov
ret
jmp
insb
sbb
loopne
sub
insb
adc
loop
cs
sub
vpunpcklqdq
sub
mov
mul
or
aam
test
fdivp
pop
push
and
subb
movsl
vpunpcklqdq
sub
adc
adc
jmp
xchg
mov
in
push
sub
mov
icebp
pop
push
and
adc
pop
xor
inc
bound
hlt
ljmp
imul
add
dec
data16
into
adc
or
imul
movsl
vpacksswb
inc
pusha
mov
into
adc
and
adc
stos
add
and
push
jb
dec
rol
out
and
mov
xchg
mov
gs
push
jb
dec
xlat
repnz
pop
push
inc
xchg
subl
arpl
ja
mov
sub
arpl
inc
nop
mov
notl
or
pusha
mov
gs
push
jb
dec
lods
hlt
adc
push
inc
lahf
mov
mov
xor
in
mov
repnz
into
jmp
and
adc
test
aam
out
add
inc
xchg
mov
loop
push
ja
mov
jo
mov
mov
xor
in
xchg
lret
jecxz
push
jb
dec
mov
in
mov
ret
push
ja
mov
loop
vpunpcklwd
inc
imul
mov
dec
sub
vpunpcklbw
jmp
xchg
and
es
mov
inc
bound
hlt
ljmp
icebp
jmp
mov
rclb
in
mov
mul
xor
jge
mov
mov
xor
in
mov
xchg
mov
and
inc
gs
sub
subb
xchg
mov
out
push
or
mov
dec
push
scas
lret
stos
add
and
sub
imul
in
mov
shl
es
bound
vpcmpgtd
daa
je
mov
mov
xor
in
adc
jno
mov
mov
xor
in
adc
inc
push
shl
loop
cs
arpl
in
adc
inc
push
mov
dec
add
icebp
sbb
push
jb
gs
icebp
push
in
jno
gs
lock
push
jo
gs
vxorpd
shlb
inc
gs
vsubpd
xlat
icebp
push
in
jne
gs
sbb
gs
adc
push
jl
gs
push
in
jl
gs
adc
pop
jle
gs
pop
in
ja
gs
sbb
push
jl
gs
adc
pop
jle
fsubl
stos
icebp
pop
xor
add
jmp
adc
out
je,pn
xchg
jb
mov
incb
mov
icebp
pop
xor
add
jmp
adc
out
je,pn
xchg
in
xchg
into
adc
vpshufd
jns
scas
rclb
push
je
mov
scas
jmp
and
adc
ret
dec
xchg
mov
idiv
adc
bound
and
add
gs
testl
in
ja
gs
in
ja
gs
add
gs
add
gs
add
gs
testb
jne
add
gs
mov
xor
pop
daa
lds
addr16
in
and
and
scas
jle
decl
xchg
or
lds
fnstcw
out
mov
test
dec
add
idiv
lahf
out
and
xchg
pop
lock
add
lret
and
movsl
je
xor
lds
lret
add
adc
sub
popa
lea
inc
arpl
jg
subl
xchg
mov
add
xor
inc
add
add
inc
add
add
in
bound
and
lea
and
pop
and
mov
rcrb
sub
pusha
gs
loop
and
mov
jno
pusha
adc
mov
gs
jno
xchg
ret
cs
xchg
mov
hlt
jecxz
cmp
mov
sub
xor
aaa
and
xchg
mov
dec
jns
scas
lret
jmp
and
and
xchg
ret
cs
xchg
mov
hlt
jecxz
cmp
mov
and
xor
inc
xchg
mov
hlt
jmp
vpunpcklbw
and
and
sub
mov
lret
stos
add
add
cmp
mov
inc
add
out
in
test
gs
push
adc
es
mov
mov
dec
xchg
adc
push
dec
xchg
mov
test
mov
icebp
loop
push
or
stos
int3
adc
inc
testl
xlat
mov
jb
mov
inc
imul
in
mov
icebp
ffreep
subb
data16
lock
stos
icebp
loop
push
or
aad
ffreep
es
mov
je
je
mov
pop
or
xlat
lret
push
dec
bound
and
setb
ret
push
dec
bound
push
ljmp
sub
imul
gs
adc
push
and
adc
push
push
jbe
mov
scas
or
test
mov
hlt
jmp
and
dec
mov
jmp
push
dec
pop
inc
mov
dec
outsl
test
stos
icebp
loop
push
or
aad
ffreep
es
mov
je
je
mov
pop
or
xlat
lret
push
dec
bound
and
setb
ret
push
dec
bound
push
in
mov
inc
xchg
inc
mov
adc
push
dec
bound
sub
xlat
mov
and
add
mov
bnd
push
jle
mov
repnz
mov
icebp
loop
push
or
aad
ffreep
loop
or
inc
gs
jno
mov
in
repnz
test
test
jae
in
and
and
vhsubpd
gs
and
and
vpcmpeqw
gs
in
and
and
and
and
and
and
add
test
test
jl
in
and
and
vsqrtpd
gs
add
test
inc
test
inc
test
inc
test
inc
test
xchg
loop
and
jl
xchg
loop
push
in
mov
shl
jmp
imul
shll
add
inc
add
add
jae
and
push
inc
push
or
in
xchg
mov
aam
jmp
and
adc
ljmp
sub
xchg
fdivp
loop
in
bound
sub
das
dec
outsl
mov
inc
dec
outsl
flds
push
inc
sahf
jnp
outsl
fnstenv
and
mov
test
push
sub
lods
ret
cmovbe
push
push
jno
jnp
outsl
loope
and
subb
data16
hlt
jmp
sub
xchg
xor
pop
je
adcb
push
add
lcall
adc
mov
mov
out
pop
je
rclb
push
jno
sub
aam
push
inc
sahf
jnp
outsl
fxtract
sub
gs
xor
jbe
mov
lock
bnd
lret
mov
adc
push
dec
pop
inc
lock
mov
dec
pop
inc
mov
ljmp
iret
in
mov
repnz
pop
push
mov
ret
pop
in
mov
lret
adc
and
mov
shl
or
dec
sbb
lret
xor
jb
mov
scas
jmp
push
ja
xchg
into
adc
add
addb
xor
jb
mov
aam
mov
xchg
and
xor
bound
es
add
xor
jb
mov
scas
jmp
push
ja
xchg
into
adc
xor
andb
dec
mov
repnz
pop
imul
dec
xchg
mov
jo
and
ss
mov
rcrb
xor
push
stos
ret
adc
sub
mov
lret
test
shrl
bound
leave
loop
es
bound
cmpsb
test
ror
cmc
aaa
push
inc
bound
push
dec
bound
es
dec
mov
in
mov
shl
push
xor
mov
in
mov
shl
push
xor
scas
notl
xor
in
mov
lock
adc
pop
xor
es
adc
in
mov
ror
daa
ja
mov
cmpsb
test
mov
in
mov
stos
add
add
cmp
mov
add
mov
in
and
sub
hlt
ljmp
mov
xor
in
mov
enter
inc
add
or
mov
in
and
and
in
and
lea
inc
test
dec
cld
test
xchg
dec
push
mov
xor
into
mov
sub
cmp
mov
push
aaa
sbb
jmp
push
sti
mov
popf
int3
mov
add
loope
pushf
sbb
inc
adc
lock
sbb
sbb
cmp
divb
icebp
int3
mov
sub
rcrl
daa
cli
jmp
sbb
adc
mov
loopne
hlt
call
sub
dec
lds
cmp
scas
test
xchg
mov
pop
jbe
sarb
adc
lcall
add
fstl
cmpsl
jae
cwtl
fadds
sbb
pusha
or
mov
jle
or
cmc
mov
add
xchg
push
and
adc
ds
lahf
aam
ret
cmp
or
push
sahf
leave
mov
or
push
xor
imul
xor
mov
pop
lds
je
and
arpl
addl
push
ds
xchg
or
xchg
cmp
stos
das
sub
insl
cmp
and
xchg
push
sub
xchg
bound
cmpsl
ja
push
ret
dec
cwtl
ret
inc
mov
addr16
je
inc
sahf
xchg
inc
jne
sbb
outsl
jge
push
fidivrl
xchg
nop
cmp
js
push
xchg
sub
xchg
adc
out
sbb
inc
movsb
das
cld
sarb
sbbl
mov
and
push
stos
mov
sub
movsl
pop
adc
shll
pop
inc
mov
jmp
dec
pop
fnstenv
ret
inc
mov
inc
dec
mov
mov
and
mov
mov
int
sub
cli
nop
pop
xchg
adc
stos
mov
and
shl
add
mov
push
icebp
fsubrp
mov
aam
aaa
sbb
push
cmp
mov
and
cmpl
ljmp
lret
sarl
fisttpl
push
hlt
cmc
test
sbb
out
into
cli
sbb
cld
enter
push
repz
in
and
sti
in
xor
aas
mov
int3
adc
sahf
push
xor
jmp
jnp
sbb
stos
adc
rcrl
addr16
aam
or
insb
pushf
sbb
jp
xchg
and
jae
lods
jg
lret
pop
dec
xor
out
shlb
mov
and
or
sahf
sti
scas
mov
aas
mov
push
add
lods
xlat
xor
test
pop
rol
pop
push
inc
inc
rcrb
lahf
mov
aaa
pop
xchg
or
adc
sub
mov
xor
pop
mov
fcoms
and
cmp
jb
shrb
cltd
inc
jae
dec
add
ja
pushf
inc
bound
out
test
sub
xchg
js
pop
adc
sub
inc
pop
mov
jns
add
push
inc
pop
xor
jo
dec
imul
data16
push
jae
cmp
je
insb
sbb
arpl
int
xchg
je
dec
clc
ret
inc
jns
inc
xchg
test
xchg
outsb
lret
cmpsl
jge
movsb
sub
adc
xchg
sbb
pop
dec
pop
icebp
and
sub
lock
mov
sbb
movsl
push
lret
cs
mov
mov
stc
lahf
xor
test
and
lock
cltd
mov
fistpl
pop
add
xchg
sub
and
mov
mov
mov
aad
nop
push
mov
repz
mov
cmp
scas
sbb
push
les
mov
outsl
cmpsb
and
dec
aam
fdivrl
mov
stos
dec
and
xor
mov
inc
gs
and
and
and
and
and
and
and
and
and
and
ret
in
and
iret
in
and
mul
xor
in
and
sbb
inc
and
push
in
and
mov
test
inc
test
inc
test
inc
xchg
inc
xchg
inc
andb
andl
ret
and
and
shl
and
lret
and
push
in
and
xchg
push
es
data16
inc
arpl
push
inc
popf
xchg
xor
test
inc
xchg
inc
andb
andb
mov
dec
mov
dec
mov
dec
mov
inc
andb
les
inc
data16
inc
test
inc
mov
inc
test
repnz
cs
outsb
subb
xchg
mov
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
xchg
inc
data16
inc
data16
inc
data16
inc
data16
inc
data16
inc
data16
inc
data16
inc
andw
andl
shl
and
andl
shl
and
andl
shl
and
andl
and
and
and
and
and
and
and
and
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
lods
scas
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
fsubrl
test
pop
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
les
test
scas
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
gs
mov
gs
scas
vpacksswb
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
in
mov
in
mov
gs
movsl
mov
gs
scas
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
test
inc
test
mov
in
mov
in
mov
in
mov
in
mov
subb
gs
in
mov
in
mov
gs
xlat
mov
in
mov
in
mov
gs
mov
in
mov
mov
test
scas
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
movsb
scas
mov
movsl
pop
mov
in
mov
in
mov
in
mov
in
mov
mov
mov
mov
mov
lods
scas
mov
lods
scas
mov
gs
scas
mov
gs
scas
mov
gs
mov
gs
mov
gs
scas
mov
gs
scas
mov
gs
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
fsubrl
test
scas
mov
fisubrs
test
scas
mov
fsubrs
test
scas
mov
fisubrl
test
scas
mov
les
test
pop
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
imulb
test
scas
mov
gs
mov
gs
scas
mov
gs
mov
gs
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
ljmp
test
scas
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
gs
mov
gs
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
gs
mov
in
mov
in
mov
gs
sbb
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
scas
mov
gs
scas
mov
sbb
test
scas
mov
sbb
test
pop
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
gs
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
scas
mov
gs
sbb
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
gs
scas
mov
gs
pop
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
gs
mov
gs
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
gs
mov
in
mov
gs
mov
in
mov
in
mov
gs
scas
mov
bound
mov
in
mov
gs
scas
mov
gs
pop
mov
in
mov
in
mov
gs
mov
in
mov
in
mov
in
mov
gs
pop
mov
in
mov
gs
pop
mov
in
mov
in
mov
in
mov
gs
pop
mov
in
mov
gs
scas
mov
gs
pop
mov
in
mov
in
mov
in
mov
gs
pop
mov
in
mov
in
mov
in
mov
test
inc
gs
in
and
and
leave
rcl
ljmp
je
daa
lret
addb
inc
movsl
and
jmp
xchg
push
and
movsl
je
inc
sahf
inc
in
dec
push
mov
xchg
add
test
test
inc
gs
movsl
and
and
and
jmp
xchg
push
and
movsl
je
inc
sahf
jge
scas
jle
decl
xchg
or
lds
data16
scas
jle
decl
xchg
or
lds
repnz
test
inc
lock
inc
jo
fimuls
jp
sti
add
push
or
xor
in
pop
cmp
movsl
vdivpd
jle
xchg
add
ret
movsb
les
es
gs
movsb
push
jmp
lds
add
movsl
les
pop
lods
xchg
lds
dec
push
sub
jecxz
bound
or
and
es
fisubl
addb
inc
and
int3
in
and
out
ret
jp
and
leave
int
es
fldenv
shrb
xor
or
and
mov
sbb
push
pop
xchg
movsl
test
insl
test
push
jmp
pop
out
vmovd
xor
and
add
lds
sub
push
loope
bound
arpl
pusha
pop
and
xchg
gs
adc
adc
inc
fimuls
loop
enter
sti
sbb
loopne
test
xchg
movsl
test
iret
xchg
inc
fimuls
loop
lds
int
inc
jns
test
xchg
and
cmpsl
or
movsl
add
mov
loopne
and
ljmp
push
dec
mov
push
in
insl
and
in
sub
lret
and
add
dec
mov
push
in
xchg
sbb
push
push
cmp
icebp
and
orb
rorl
xor
pop
outsl
and
lds
mov
call
sbb
inc
xchg
stc
add
call
add
mov
add
add
ret
rorb
sbb
loop
in
cmp
mov
or
inc
add
scas
shrb
push
mov
les
ret
call
add
movsb
mov
sub
movsl
test
popa
popf
or
test
adc
mov
jb
pop
loope
and
aad
movsb
push
or
add
sub
dec
sarb
fidivl
push
inc
and
xchg
mov
lea
xchg
lds
lea
and
xchg
in
xchg
scas
insl
test
jbe
test
sarl
xor
sbb
mov
mulb
mov
dec
xor
clc
pusha
inc
jns
and
adc
dec
jno
sub
jae
movl
inc
movsb
adc
dec
cmp
ficoms
stos
inc
mov
mov
mov
repz
mov
in
test
iret
test
les
sub
std
in
popl
cld
adc
xor
int
in
jns
lds
add
stc
inc
and
in
stc
inc
and
lds
and
and
in
inc
es
and
mov
in
aad
faddp
in
insl
jns
movsl
cmp
push
inc
xchg
movsl
test
test
jne
inc
test
sbb
faddl
rorl
test
aad
add
in
pop
and
int
xlat
add
test
mov
add
call
add
xor
dec
cltd
push
test
pushf
xor
add
jb
xchg
enter
add
push
cmc
psraw
xchg
leave
subb
rcr
loope
test
inc
or
mov
adc
in
inc
sub
sub
lds
add
pusha
lds
mov
mov
mulb
mov
cmp
and
fildl
cwtl
push
adc
scas
test
gs
dec
fsub
add
add
jne
pop
rclb
push
or
hlt
popa
lods
and
leave
clc
push
rcrl
movsl
lds
nop
sub
lds
lea
shl
lea
add
and
loop
xor
dec
inc
and
mov
in
push
outsl
push
sub
push
push
cld
test
mov
loop
xor
push
lds
aad
shrl
out
ret
aad
jne
test
xchg
add
push
push
jecxz
in
jne
movsl
test
jbe
test
xor
add
outsb
add
mulb
or
or
inc
add
pop
jp
mov
adc
int
adc
adc
cld
movsb
repnz
inc
xor
push
mov
jae
sti
lea
jb
mov
lds
mov
dec
mov
mov
in
mov
mov
ret
or
inc
add
mov
add
out
test
orl
and
call
lcall
popa
mov
inc
add
leave
in
mov
dec
pop
xor
adc
inc
loopne
test
mov
fsubl
shll
popl
and
insl
pop
cs
test
loopne
test
enter
test
test
dec
xchg
syscall
in
jne
movsl
test
scas
test
add
mov
inc
mov
sti
mov
test
movsb
push
jmp
lds
scas
test
sub
mov
test
arpl
enter
clc
sbb
call
xchg
jb
cli
mov
dec
fs
mulb
cmpsl
sub
loope
bound
mov
adc
xchg
sub
add
insb
or
leave
bound
mov
call
lds
test
fcoml
push
inc
jp
and
icebp
pusha
add
xlat
test
adc
push
push
test
in
shll
inc
movsb
cmc
lea
call
jo
mov
test
mov
adc
jnp
test
pop
iret
test
int
movsl
inc
mov
clc
mov
xor
test
jmpw
test
adc
pop
lcall
add
aad
popa
mulb
leave
int
and
ds
in
test
push
adc
movsl
sbb
xchg
sub
repnz
mov
fidivrl
pop
inc
pop
or
ret
out
pop
mov
lds
xor
test
sbb
inc
and
icebp
adc
movsl
inc
test
sbb
test
cmc
push
add
sar
movsl
push
or
add
rcrb
add
add
ljmp
mov
adc
fsubl
and
mov
in
dec
add
xor
in
sub
les
insl
jns
movsl
inc
mov
cmc
movsb
repnz
xor
shrl
in
adc
and
xchg
test
push
and
sub
test
inc
gs
cmove
lds
in
enter
sub
sbb
int
cmpsl
vpcmpeqw
mulb
loope
add
ljmp
sub
pop
jne
insl
jns
movsl
les
or
inc
mov
xor
scas
rclb
out
and
adc
jle
add
in
lods
cli
jns
movsb
lock
call
sti
add
lods
popa
xchg
jb
mov
lds
push
mov
push
cmp
test
xor
gs
adc
inc
rolb
inc
loopne
roll
fs
shrb
scas
mov
xorb
pusha
inc
leave
or
add
orl
adc
pop
jl
roll
and
movsb
mov
inc
inc
jne
inc
xor
xor
push
in
test
mov
lds
xor
test
sbb
inc
and
loope
jne
scas
xchg
movsb
mov
pop
and
fldenv
lods
lea
add
and
dec
jae
mov
adc
inc
dec
lods
cmc
loope
call
add
or
scas
test
loope
jl
xor
test
inc
icebp
mov
scas
addl
xchg
xor
push
outsl
and
mov
adc
scas
test
addl
inc
adc
push
in
mov
imul
and
test
pop
jnp
movsb
ds
mov
inc
repnz
and
xchg
pushf
xchg
loopne
xor
push
and
aad
xor
in
fwait
mov
push
add
add
mov
sub
mov
add
movsb
push
in
in
into
pop
test
adcl
add
in
push
add
mov
lds
jge
jge
test
xchg
push
pop
push
mov
pop
push
aad
xchg
loopne
or
mov
jnp
mov
push
es
lock
repz
cmp
jl
mov
outsb
inc
xor
movsl
vdivpd
js
xchg
add
in
stos
cmpb
push
and
mov
test
dec
mov
bound
lds
loop
insl
cli
pop
in
test
jns
popa
in
cmp
mov
call
fsub
mov
add
enter
dec
in
add
dec
loopne
mov
sub
movsl
das
and
test
adc
iret
test
and
aad
xor
movsl
test
add
mov
ljmp
movsl
mov
movsl
xor
jge
adc
loopne
movsl
push
sbb
jnp
icebp
mov
push
jmp
test
push
sbb
push
loop
in
push
inc
repnz
push
jmp
repnz
pop
js
pop
xchg
test
dec
leave
xchg
jne
test
test
mov
push
jnp
movsb
dec
lcall
rorb
shlb
mov
or
and
or
dec
outsl
push
test
inc
icebp
sbb
int
cmpsb
vpcmpeqw
repnz
ss
aad
shlb
push
inc
and
int
jae
mov
mov
test
in
xchg
pop
mov
adc
les
and
imul
hlt
bound
fistl
mov
xchg
add
testb
cmp
fnsetpm(287
add
mov
in
jae
loop
mov
ret
movsb
les
push
test
movsb
repnz
mov
pop
test
inc
loopne
roll
pop
enter
les
test
dec
cli
jmp
in
loope
mov
add
pop
fs
cmc
and
subb
sbb
inc
mov
rorb
add
test
mov
inc
and
lds
and
test
or
xor
add
mov
add
inc
test
mov
popf
lcall
add
movsl
lds
cmp
shl
pushf
mov
lea
aad
rcrb
push
inc
and
push
inc
mov
aad
sbb
out
mov
adc
nop
pop
fdivs
dec
call
cmpb
rep
clc
xorb
sahf
popf
adc
mov
jo
mov
lods
mov
inc
mov
xor
in
mov
push
loope
bound
adc
adc
test
movsb
repnz
ss
in
movsb
lds
and
cltd
test
std
in
push
inc
repnz
push
jmp
repnz
cmc
mov
movsb
fldt
les
and
popf
test
icebp
in
push
mov
adc
pop
popf
test
dec
leave
orb
in
movsb
lds
pop
inc
nop
lds
mov
and
sbb
inc
add
int
xor
and
test
push
xchg
add
sbb
or
pop
imul
xor
testb
in
or
inc
mov
mov
test
lods
and
push
jmp
pop
jge
lds
hlt
test
sbb
outsl
sub
add
mov
sbb
sub
std
jne
mov
jmp
jo
aad
clc
js
repnz
or
mov
out
dec
cwtl
and
shlb
cmp
adc
push
cmpsb
dec
pop
movsl
test
in
or
inc
mov
andl
fs
mulb
cmc
add
adc
shrb
adc
push
adcl
jb
and
sti
sbb
call
push
and
dec
jb
and
mov
jns
and
adc
dec
pop
sbb
lea
mov
adc
les
and
xchg
test
leave
in
sub
dec
and
ret
movsl
lds
jo
fimuls
jp
sti
add
int
popf
mov
mov
std
sbb
aad
xor
int
test
cs
jle
mov
add
sub
add
std
in
mov
jle
add
xor
adc
rolb
test
or
pop
call
vpsadbw
lret
adc
inc
notl
les
test
adcl
inc
incl
gs
sti
jb
in
xorb
imul
sub
outsb
xchg
inc
enter
sarl
cwtl
sub
ljmp
lods
xor
in
dec
mov
adc
lods
inc
xchg
and
inc
mov
or
in
push
mov
sub
mov
loopne
mov
popa
dec
shll
arpl
adc
subl
in
stc
inc
and
lahf
repz
shlb
and
xchg
add
mov
dec
inc
inc
pushw
loop
push
jne
js
cmp
adc
repz
test
or
pop
loopne
loope
mov
dec
push
insl
adc
out
cltd
in
push
add
sub
pusha
rcll
mov
test
shlb
add
je
adc
enter
or
sbb
shl
js
out
adc
hlt
popa
popa
and
or
sbb
enter
andb
fcomi
inc
in
stc
inc
and
adc
add
lds
fbld
jns
pop
je
jbe
in
jnp
repnz
and
dec
dec
lret
xor
lods
adc
test
test
add
loop
push
cmpb
ljmp
cmp
int
inc
cmpsb
gs
mov
adc
lods
adc
stc
les
push
sub
push
cmpsb
dec
pop
movsl
test
les
test
addl
aam
inc
gs
jmp
stos
mov
cmp
mov
lcall
in
insb
cltd
mov
pop
and
mov
jne
mov
cmc
inc
in
stc
inc
and
pslld
shlb
and
and
push
add
bound
add
in
test
call
add
into
insl
or
outsb
dec
and
mov
and
testb
vaddpd
into
repnz
aam
xor
and
sbb
test
adc
add
cmc
lods
into
adc
loopne
roll
xor
add
cmp
lcall
orl
jl
jle
push
jno
push
adc
jno
and
mov
movsb
push
add
push
xlat
test
add
and
retw
and
std
outsb
dec
dec
lret
or
fldenv
xchg
jbe
inc
repnz
and
push
in
testb
xchg
movsb
adc
add
lds
inc
gs
and
dec
and
scas
mov
sbb
dec
jp
push
rol
movsl
lds
jns
and
inc
repnz
adc
add
fcom
in
mov
hlt
xchg
lds
icebp
mov
hlt
push
mov
out
add
adc
outsb
dec
and
sbb
nop
cs
add
test
or
push
cs
test
pop
xor
push
or
inc
mov
xor
mov
mov
inc
stc
add
enter
loope
or
fsubl
mov
jb
rorl
add
popa
dec
imul
loopne
test
orb
pop
into
stos
test
push
bnd
or
cmc
movsb
push
add
out
test
add
add
dec
push
insl
adc
out
cltd
in
push
add
sub
pusha
roll
adc
push
sbb
sub
stc
mov
pusha
xchg
add
mov
mov
xchg
outsb
enter
xorb
shrb
lea
push
lods
mov
xchg
dec
xorl
jb
pop
loopne
xchg
or
dec
and
js
icebp
mov
into
lods
cmp
dec
out
mov
insl
inc
call
push
in
outsb
xchg
add
mov
out
and
jmp
pop
lock
cli
pop
jnp
movsb
les
lods
cli
jns
movsb
lock
rolb
and
inc
icebp
adc
inc
repnz
mov
adc
xor
jno
jle
icebp
cmc
lea
add
shll
in
push
test
test
js
loop
mov
shrl
xor
in
sahf
ret
xor
xchg
adc
jne
lea
push
add
sub
pusha
rcrl
adc
movsl
test
mov
push
daa
lods
movsl
xor
cmpsb
sub
movsl
lds
test
mov
xor
sahf
nop
and
add
inc
fs
dec
lcall
les
sub
adc
outsl
in
pop
out
mov
pop
inc
repnz
push
adc
adc
cwtl
js
adc
sbb
movsb
les
mov
iret
xchg
shll
and
les
or
ds
lds
fldenv
adc
gs
shl
movsb
adc
aad
inc
add
cmp
mov
aad
rcrb
sub
sbb
scas
dec
inc
rorb
mov
cmp
adc
inc
jo
gs
mov
or
and
popa
xchg
call
adc
into
repnz
cs
cmc
in
cmp
test
test
and
test
ror
aaa
inc
add
adc
xor
test
shl
adc
test
shrb
pushf
dec
std
pop
cmp
movsl
dec
pop
movsl
test
lds
xchg
sub
pop
pop
loopne
out
ret
popa
stos
and
test
iret
lea
les
mov
cmc
and
cwtl
aam
pusha
add
mov
adc
push
test
sbb
outsb
jp
fincstp
fdivrs
ret
movsb
les
or
inc
mov
push
xor
in
inc
mov
lock
inc
fs
movsb
push
std
add
dec
fs
std
pop
cmp
mov
cmp
out
dec
popf
sbb
in
inc
mov
add
mov
lods
mov
inc
mov
js
in
mov
push
loopne
bound
ret
and
sub
adc
in
cmpsb
inc
xchg
test
rolb
xchg
pop
inc
repnz
mov
adc
mov
or
mov
push
mov
dec
mov
xor
xor
cmc
in
sub
movsb
mov
adc
movsb
inc
movsl
xor
pop
test
push
test
test
mov
inc
repz
daa
test
inc
fsubr
mov
out
test
fidivs
mov
ret
dec
or
movsb
push
in
add
jge
lds
shl
test
fucom
xor
movsl
test
mov
ret
add
and
iret
lds
adc
test
jo
add
mov
xor
fs
shlb
add
roll
adc
inc
fs
inc
in
stc
inc
and
lods
xchg
adc
inc
loopne
roll
xchg
and
loopne
pop
or
icebp
in
movsl
enter
rclb
sub
aad
xorb
xchg
add
in
cmpsb
inc
xchg
test
inc
repnz
push
adc
adc
pop
call
mov
mov
push
mov
dec
mov
vpshufd
pop
push
in
cmp
ficoml
test
jo
add
mov
xchg
lds
fidivl
add
add
in
popl
imul
in
nop
mov
or
fstl
stos
ret
movsb
les
mov
adc
into
ficompl
test
jns
loop
arpl
in
xchg
sub
pusha
shrl
mov
jo
mov
cmc
sub
sbb
aad
xor
in
sub
fnstsw
sbb
jae
jge
jne
movsb
les
nop
lret
mov
out
cltd
in
dec
pop
and
dec
jmp
loope
loop
xor
in
sub
mov
add
inc
gs
inc
inc
repnz
movsb
push
sbb
jge
adc
les
and
imul
and
js
pop
test
or
test
push
ds
movsl
vmovmskpd
lret
mov
adc
movsb
lock
jp
mov
lds
in
test
adc
aam
add
add
in
popl
jns
in
in
xchg
add
in
xchg
mov
or
fsts
stos
ret
movsb
les
mov
adc
into
repnz
clc
mov
jge
loop
outsb
pushf
lret
mov
sub
pusha
shrl
mov
jae
mov
cmc
sub
sbb
aad
xor
in
sub
mov
loopne
mov
sahf
xor
in
inc
mov
add
sarb
inc
in
stc
inc
and
lods
imul
and
loopne
roll
xchg
and
movsb
add
call
movsl
lds
pop
inc
repnz
mov
fs
les
and
xchg
test
leave
in
sub
mov
fmuls
in
jb
sub
repz
jp
movb
mov
xchg
lds
dec
fs
fucom
mov
icebp
lea
add
shll
add
test
test
jbe
cs
jmp
lea
jne
sub
les
push
ret
test
inc
push
or
ret
mov
inc
call
js
pop
insl
test
dec
leave
jbe
leave
xchg
lds
mov
dec
push
cwtl
into
mov
add
shll
and
insl
test
dec
faddl
push
loopne
movsb
sbb
xchg
jns
lods
test
andl
push
lods
mov
inc
mov
subb
add
call
cltd
sub
loop
xor
pusha
int
sub
arpl
js
pop
insl
test
dec
leave
jbe
enter
add
dec
push
mov
in
in
outsl
test
leave
in
sub
dec
jb
pushf
mov
adc
pop
loop
xor
dec
add
movsl
xor
gs
movsl
les
test
adcl
or
into
out
repnz
jmp
xchg
cmp
popa
lds
les
and
dec
ficoms
cmp
lcall
push
sbb
loopne
pushf
dec
scas
repz
and
fldenv
test
lods
push
call
roll
xchg
adc
cmp
or
mov
pop
pop
lcall
ss
iret
lds
pop
lock
lds
mov
push
cmp
and
insl
insl
inc
in
nop
into
mov
in
roll
test
sub
pusha
shrl
and
call
adc
inc
add
xor
test
in
test
add
fxam
jo
mov
lods
sub
lds
lods
mov
or
in
scas
mov
popf
call
icebp
into
and
lds
xor
add
movsl
xor
add
movsl
pop
mov
aam
pop
mov
in
add
test
mov
out
mov
in
cmpsl
loop
add
inc
clc
add
pop
in
push
in
sbb
sub
out
and
int
add
inc
gs
in
and
and
insl
insl
pop
in
mov
push
pop
add
dec
dec
push
cmpsb
in
icebp
cmc
lock
mov
icebp
dec
add
cmpsb
in
push
adc
sub
add
cmc
pop
lods
cmp
test
mov
sti
les
pushf
sub
pusha
shrl
and
sbb
inc
test
test
test
add
jle
movsb
outsb
subb
dec
loopne
mov
add
rol
push
jne
scas
loop
cmovb
inc
movsl
scas
outsb
jne
ret
cmp
ss
push
inc
jo
sub
pxor
addl
sahf
movsb
push
ljmp
dec
and
mov
fmulp
xchg
sub
stc
mov
test
data16
int
sub
das
adc
icebp
add
mov
jns
jne
xchg
sub
add
mov
pop
jmp
ret
lods
les
push
push
test
cmp
in
and
addl
pop
inc
icebp
mov
push
test
xchg
sub
cmp
add
pusha
xor
xchg
enter
shll
mov
adc
and
cs
dec
and
and
in
add
movsb
repnz
inc
xor
push
sub
les
and
popa
test
and
fiaddl
add
add
mov
dec
sub
xchg
fsubrp
shll
lea
test
dec
iret
xchg
or
and
add
mov
dec
and
imul
int
push
jle
imul
loopne
and
xchg
inc
jne
mov
vmovd
les
sub
lds
xchg
syscall
push
insl
popa
pop
movsl
test
shlb
adc
sar
fldenv
test
inc
call
ret
mov
cmp
mov
imul
js
out
mov
fldenv
cmp
and
test
adc
gs
cmc
cmp
lds
add
mov
and
fldenv
test
add
test
pusha
inc
jns
and
lea
add
movsl
test
or
or
bswap
in
popa
jne
test
test
xor
mulb
and
and
popa
inc
lods
lds
or
mov
mov
lds
mov
vpsubsb
mov
add
stos
call
lea
cmp
test
in
cmp
mov
in
inc
and
aad
mov
scas
into
add
push
roll
or
inc
repnz
push
lds
xor
push
sub
mov
xchg
loopne
pushf
mov
adc
inc
call
or
lret
in
pop
push
inc
mov
sbb
mov
adc
inc
call
add
lods
shll
pop
shrl
std
fldenv
jg
cmc
repz
daa
jne
lea
stc
inc
and
roll
mov
push
mov
pop
add
shl
xor
fs
or
mov
lods
or
inc
aad
push
les
test
push
or
icebp
push
mov
dec
xor
pushf
enter
das
out
test
test
xor
or
mov
push
fnstsw
rolb
cmp
outsb
pop
or
fnstsw
dec
sub
mov
fisubrl
mov
adcb
outsl
shrl
out
push
call
jecxz
lret
enter
sti
sbb
cmpsl
xor
test
mov
adc
cmc
pop
mov
les
push
sub
adc
imul
cmpsb
or
or
in
mov
jbe
mov
in
xchg
add
movsb
les
sub
test
sub
cmpsl
or
in
inc
dec
fs
leave
in
inc
dec
dec
pushf
mov
inc
rorb
mov
xor
in
cmp
ret
pop
add
insb
add
mov
loop
enter
mov
add
loop
cwtl
imul
ret
int
cmp
addr16
in
test
loopne
aad
and
xor
push
int3
bound
jecxz
sub
cltd
pop
sub
push
xor
les
in
xorb
add
aad
push
add
pop
imul
das
push
out
push
roll
and
xchg
adc
cltd
test
mov
out
cltd
in
pusha
or
out
push
test
lds
xchg
lret
movsb
push
jmp
mull
clc
lret
lds
inc
fs
addr16
in
test
notb
dec
pop
or
clc
or
test
mov
pop
xchg
andb
xor
mov
shl
loopne
stos
mov
cmp
loope
bound
mov
scas
cmpb
ftst
xchg
sub
andb
xor
movsl
test
test
and
insl
add
fabs
mov
mov
call
lods
in
and
sub
fsubl
xchg
pop
mov
movsb
outsb
adcb
dec
andl
and
push
xchg
add
in
test
mov
jne
inc
gs
in
and
xor
add
enter
mov
xchg
mov
jne
je
add
jns
mov
dec
xor
pop
mov
dec
mov
push
dec
outsl
dec
mov
icebp
add
mov
pop
insl
and
test
inc
stc
sbb
iret
test
inc
call
sub
mov
add
mov
mov
mulb
fwait
movsb
les
push
rcll
sbbb
test
sbb
int
cmp
adc
loopne
aad
cmc
jo
jb
mov
lds
or
inc
add
pop
into
loopne
call
push
and
xor
add
lret
bound
inc
or
sbb
push
cmpsb
fwait
aad
movsl
lds
js
test
add
mov
xor
lods
mov
ficoms
inc
inc
test
cmp
js
sbb
adc
push
inc
test
sbb
popf
aaa
inc
push
fdivrs
mov
in
xor
hlt
popa
jmp
mov
ret
movsb
les
xchg
sub
push
test
xor
test
movsl
test
inc
icebp
sbb
aad
rclb
inc
and
hlt
popa
test
adc
cmc
sbb
cmp
and
loopne
aad
cmc
jl
jb
mov
lds
push
leave
test
subb
les
inc
stc
fildll
mov
test
cmpb
fisttpll
enter
test
shrb
mov
or
cltd
and
stos
mov
add
add
jns
fwait
inc
jp
and
fs
sbb
arpl
pop
sbb
push
jne
mov
and
imul
sub
stc
add
das
fdivrs
shrl
and
inc
push
push
call
push
in
outsb
adcb
sar
movsl
xor
mov
call
xchg
dec
sahf
fimull
sub
shlb
pop
cld
mov
pushf
sub
pusha
shrl
and
in
test
dec
xchg
test
mov
stc
inc
and
adc
or
nop
icebp
mov
xchg
jne
test
test
jle
add
mov
dec
mov
addl
in
add
gs
and
mov
pusha
pop
icebp
pop
movsl
test
add
in
add
dec
shll
scas
subb
int
push
test
jmp
xchg
sub
repnz
xor
xor
movsl
test
into
pusha
pop
and
popa
or
jmp
xchg
popf
clc
movsl
sbb
pusha
and
sbb
fs
cmc
and
es
scas
cmpb
fnstenv
out
add
out
sbb
adc
test
xor
in
xorb
leave
test
adc
jne
lods
les
pop
push
test
pusha
das
in
test
and
mov
add
cmpsl
dec
and
fdivr
adc
jne
and
jno
popl
test
xor
and
mov
mov
inc
mov
and
add
xchg
arpl
mov
repnz
fs
cmc
and
test
insl
stc
inc
and
les
or
inc
movsl
jle
cmpb
adc
cltd
movsb
push
adc
adc
test
loop
push
repnz
jns
adc
inc
push
test
bswap
pop
outsl
pushf
inc
push
or
leave
lds
push
and
ret
jp
and
int
add
inc
add
jno
xchg
sub
push
adc
and
dec
inc
lds
add
sub
movsb
lods
inc
sbb
loop
push
push
loope
in
stos
fdivrs
dec
loop
xor
mov
push
bound
adc
inc
repnz
pushf
inc
xchg
push
mov
leave
jns
movsl
adc
inc
xor
outsb
or
or
sub
pusha
shrl
outsb
adcb
dec
xor
inc
mov
add
mov
and
dec
bound
inc
fs
cs
sbb
sub
or
in
roll
test
loop
aam
jb
and
pop
in
and
ljmp
shll
pusha
xchg
sbb
mov
xchg
jns
and
out
mov
jb
cltd
in
adc
in
sub
jno
and
sahf
mov
dec
out
rolb
and
fiaddl
and
mov
fsubp
xchg
sub
jg
adc
subl
test
gs
mov
push
and
push
push
in
movsl
test
ret
outsb
pop
in
movsl
test
mov
mov
hlt
xchg
js
out
mov
and
test
inc
fs
shl
and
lds
test
mov
cld
xor
pop
test
sub
pop
pop
in
mov
in
mov
sub
shrl
fsubp
add
pop
fdiv
lret
and
rorl
popf
lods
fcompl
and
iret
orb
shrb
ftst
add
add
insl
mov
pusha
popa
sbb
dec
std
mov
mov
in
pushf
mov
jge
incl
scas
in
cmp
and
test
insl
loop
xor
scas
sub
loopne
fldenv
xchg
inc
icebp
mov
push
adc
mov
mov
mulb
lds
jne
test
les
jp
jns
movsl
adc
or
loope
adcb
pusha
shlb
outsl
pop
jns
icebp
mov
into
jno
jns
icebp
cmp
sub
jae
daa
jae
pop
mov
mov
loop
ds
out
inc
jo
loopne
cmc
pop
pop
cmpb
in
sub
mov
push
mov
iret
daa
call
sbb
sbb
add
or
inc
mov
sbb
inc
test
pop
std
xchg
and
push
adcb
xchg
icebp
add
mov
adc
fldenv
js
mov
lcall
pop
aad
loop
push
add
pop
dec
cmp
loope
mov
mov
jmp
loope
lods
inc
mov
cmp
movsl
test
shrb
ficomps
add
cli
or
call
cs
les
xor
cmpsb
sub
movsl
lds
lcall
add
inc
shlb
mov
push
jb
stc
add
cwtl
pop
nop
dec
hlt
popa
lret
and
hlt
popa
ret
and
leave
adc
cli
inc
test
xchg
icebp
add
mov
sbb
in
popf
lret
mov
and
movsl
rorb
gs
dec
push
sub
add
insl
push
sub
sbb
imul
insl
les
mov
inc
incb
ret
movsb
les
dec
pop
test
inc
xor
and
out
lret
mov
shl
mulb
test
iret
popa
movsb
and
gs
movsb
les
and
addl
pop
adc
in
in
sub
cld
in
and
or
repz
stc
dec
sub
in
call
sbb
scas
rol
jns
movsl
dec
sub
sub
add
mov
in
test
inc
mov
mov
adc
adc
popa
mov
and
jno
push
shlb
nop
lods
push
test
test
and
lds
gs
insb
add
cmp
imul
inc
loopne
cltd
lds
mov
mov
push
and
mov
sub
int3
in
and
in
xorb
bound
test
les
movsl
mov
sbb
push
test
dec
pop
xor
cltd
fldenv
insl
mov
jno
cmpsl
in
and
mov
inc
lea
test
gs
xor
pop
movsl
test
addl
pusha
sbb
dec
enter
test
imul
cmp
push
test
lea
sub
jo
dec
xor
lds
mov
push
mov
dec
lea
mov
pop
push
in
cmp
ficompl
test
dec
cmp
vpaddsw
cmp
mov
dec
pop
rol
in
insb
jo
test
enter
out
and
lds
test
js
in
mov
fcoms
and
add
test
inc
std
sbb
shl
movsb
repnz
xor
mov
ret
movsb
les
dec
test
movsb
repnz
mov
dec
mov
jo
jb
mov
lds
push
mov
lds
test
and
sti
add
mov
cmp
vmovd
pop
jns
movsl
lods
mov
sbb
in
mov
xor
lea
test
inc
xchg
loope
add
jnp
movsb
xor
gs
cmp
popa
mov
xchg
into
mov
lds
mov
insl
popf
jo
test
shlb
adc
in
xchg
lods
popf
mov
pop
inc
add
push
jo
xor
in
xor
fistl
movsb
inc
mov
jle
vpunpckhqdq
push
stc
add
ret
fidivl
push
add
mov
adc
pushf
aaa
test
sub
dec
test
loope
sti
sbb
out
movsl
in
movsl
loop
test
movsb
lock
es
test
or
invd
cli
xor
inc
and
dec
sbb
test
movsb
mov
vmovaps
movsl
push
inc
mov
pop
xchg
lds
cmp
in
cmc
and
test
stc
inc
and
inc
scas
xchg
add
and
push
push
test
movsl
in
stos
ret
movsb
les
popl
mov
mulb
loope
add
fs
rorb
movsl
cmp
inc
movsb
fmuls
xor
cmpsb
sub
movsl
lds
jo
ljmp
nop
jae
and
sti
add
lret
adc
inc
fs
push
jnp
movsb
in
and
lock
scas
sarb
rcl
push
inc
and
dec
xor
test
or
scas
insl
test
jbe
test
fisttpll
dec
test
movsb
repnz
pop
adc
test
adc
test
sbb
jb
and
loop
sub
test
jbe
test
call
into
loopne
call
pop
and
adc
adc
nop
pop
cmc
adc
adc
inc
fs
pop
test
sbb
test
int
test
jb
mov
lds
sarb
pop
mov
pop
jnp
movsb
dec
lcall
push
jge
movsb
les
es
gs
inc
inc
xor
mov
test
push
xchg
lds
pop
jnp
movsb
sub
aad
xor
add
popf
clc
movsl
sbb
pusha
and
sbb
scas
rclb
inc
addb
movsl
mov
and
test
lds
test
aaa
gs
call
xchg
fwait
lods
cmp
bound
adc
gs
int
movsl
lds
orb
cmc
pop
inc
and
add
outsl
and
in
and
les
or
gs
lods
dec
xor
lods
mull
adc
les
adc
movsb
repnz
gs
dec
out
mov
fs
fisttpl
das
out
jae
jb
mov
lds
and
inc
jecxz
and
add
lahf
mov
sbb
dec
push
mov
std
xchg
mov
mov
mulb
or
test
movsb
les
pushf
sub
lds
mov
add
mov
leave
xchg
inc
test
inc
test
cmp
inc
sahf
nop
and
add
push
or
dec
outsl
push
and
les
or
ds
lds
add
gs
cmpsl
les
insl
push
test
mov
repz
popf
mov
mov
cmc
and
fst
add
aad
repnz
inc
int3
movsl
lds
popl
test
xchg
lds
test
cmp
in
stos
ret
movsb
les
jmp
test
sub
pusha
shrl
gs
cmp
dec
pusha
xor
test
insl
lock
jge
enter
sbb
gs
iret
subl
insl
roll
data16
inc
sub
aaa
in
mov
int
or
xor
clc
jo
dec
xchg
addl
and
cmp
loope
mov
fs
ror
inc
inc
add
sarb
shlb
loopne
inc
adc
and
test
mov
xor
add
jb
pop
pusha
leavew
sbb
call
add
jno
sub
add
cli
call
and
dec
cltd
in
dec
add
in
enter
add
gs
loope
cmp
and
xor
xchg
cmp
int
das
inc
gs
popf
ds
sahf
popa
jg
pusha
dec
and
and
and
add
rol
jno
xchg
sub
pop
shlb
leave
jbe
enter
in
mov
hlt
popa
iret
and
icebp
bound
fisubrl
and
call
xor
inc
add
jno
push
leave
add
cmp
in
dec
sub
pusha
shrl
and
add
in
pop
and
aad
add
in
test
call
and
xor
sub
inc
add
outsb
dec
push
sub
add
pop
movsl
test
lds
mov
dec
push
scas
vpshufd
in
loope
loop
xor
in
sub
vmovd
dec
push
and
outsb
push
loop
xchg
popa
lock
pop
inc
test
sub
lock
sbb
lds
enter
and
into
loopne
call
or
pop
test
xchg
add
adc
jl
test
test
gs
bound
mov
sar
movsl
push
jb
mov
xor
fwait
hlt
movsl
lds
in
repnz
cmp
jne
inc
gs
xor
inc
and
lds
scas
subb
xor
movsl
test
repnz
push
loope
jae
std
scas
in
push
add
loope
lds
inc
repnz
shlb
sub
clc
mov
shr
movsl
fdivl
jb
mov
lds
mov
in
lcall
push
nop
mov
rcrb
sub
push
sbb
or
dec
and
jnp
push
and
mov
push
call
xor
push
test
out
test
roll
mov
add
jne
xor
ret
in
stos
subb
movsb
mov
or
mov
testl
idivb
jp
shl
fsubs
dec
add
dec
dec
jmp
subb
repnz
call
add
dec
push
stc
test
jns
sub
leave
mov
aaa
push
or
or
movsl
xor
sub
mov
jp
rcll
add
mov
lds
jbe
test
add
jne
dec
imulb
dec
iret
fwait
mov
int
movsb
outsb
adcb
rorb
test
mov
adc
inc
push
test
sbb
outsb
jp
into
ficompl
lcall
or
lods
inc
add
test
jne
jne
xor
add
enter
adc
gs
ljmp
mov
lea
xchg
lds
lret
outsl
test
inc
cld
mov
jns
inc
and
repnz
aad
and
adc
lret
adc
lret
adc
inc
fs
dec
and
test
lods
loope
and
sbb
int3
sub
cmc
jne
orb
add
jne
cmpb
add
jne
cmpb
test
cld
icebp
sub
fs
icebp
pop
add
clc
subb
ficoml
add
in
in
add
out
sbb
jno
and
jne
jno
in
sahf
inc
repnz
movsb
push
stc
add
push
adc
inc
add
jp,pt
rcrl
ds
dec
insl
pop
push
in
pushf
lods
xchg
push
in
outsb
dec
popf
sub
pusha
shrl
fisubl
sbb
gs
icebp
mov
aad
pushf
push
pop
or
lods
xor
repz
inc
pop
ficomps
fnstenv
and
jns
movsb
mov
add
into
ficompl
sub
adc
shll
cmp
cli
mov
dec
adc
inc
pop
push
sbb
in
sbb
aad
in
fwait
mov
pop
mov
ret
add
and
imul
lds
xor
lds
or
in
and
xor
test
movsb
mov
xchg
inc
jno
jge
mov
inc
and
out
lods
les
jno
test
movsb
repnz
gs
fmull
mov
jno
pop
lods
or
add
loope
lds
add
sti
sbb
cli
mov
dec
dec
add
mov
in
in
orb
and
and
or
movsl
iret
in
sahf
mov
leave
orb
loopne
lods
les
jo
cs
add
jmp
gs
jp
in
cmpb
enter
sub
stc
jne
orb
push
in
add
jns
lds
jb
mov
lds
xchg
inc
xchg
in
in
aad
lods
les
jno
test
movsb
repnz
gs
call
cs
faddl
shlb
sub
or
loope
xorb
mov
pop
xchg
inc
xchg
in
cmp
rorb
test
lea
add
and
int
into
add
test
or
pop
shlb
inc
adc
and
inc
cmp
rolb
jge
aaa
std
dec
add
xor
pop
imul
std
pop
add
aaa
lds
ss
jo
rol
movsl
cmp
xchg
sub
lea
das
add
mov
fldenv
dec
xor
test
xchg
dec
cmp
test
adc
mov
mov
mulb
ret
push
insl
adc
push
stc
in
xor
adcl
in
push
mov
push
dec
and
xchg
inc
push
add
cmc
in
push
sarb
enter
sub
pop
call
shrb
aad
or
xor
movsl
test
addl
and
pmulhw
xchg
inc
dec
dec
xor
vmovd
cmp
test
mov
sbb
loope
loop
xor
push
inc
adc
lods
xchg
mov
lds
jbe
test
mov
xchg
fst
add
fdivr
pusha
xor
inc
dec
loop
xor
gs
and
loope
or
fnsetpm(287
add
add
int
and
fs
lea
fdivrp
pusha
adc
adc
int
adc
push
adc
lcall
mov
shrl
in
sahf
mov
mov
icebp
add
xchg
test
mov
mov
mulb
rol
dec
cmc
dec
test
movsb
push
add
add
fs
mulb
ret
bound
enter
cmp
add
shlb
call
jb
sub
imul
dec
jb
push
rorl
lds
xchg
cwtl
push
mov
mov
lods
clc
mov
pop
inc
test
add
loope
movsl
vpcmpeqd
xor
push
mov
push
cwtl
and
loop
adc
iret
inc
gs
push
stc
xor
out
test
test
sbb
jb
dec
fs
les
pop
push
test
mov
mov
in
mov
dec
mov
pop
mov
lds
test
ljmp
test
add
add
dec
fs
xchg
mov
in
loope
loop
xor
push
outsl
and
mov
xchg
cmp
cs
adc
test
movsl
lods
mov
inc
flds
add
xor
pop
outsl
and
mov
xchg
xor
in
test
aaa
lds
test
test
inc
gs
cmove
lds
in
enter
sub
stc
int3
bound
xchg
pop
jp
movsb
xor
testb
jns
add
jno
ret
adc
mov
xor
gs
outsb
xorb
out
add
or
dec
mov
clc
shlb
jle
imul
mov
mov
jl
fstpt
xor
test
dec
dec
ret
in
scas
inc
mov
add
jne
shl
vmovd
icebp
jno
and
xchg
insl
roll
add
sub
sbb
test
test
in
xor
fwait
mov
stc
inc
and
cmp
add
xchg
xchg
lds
enter
push
push
outsl
gs
xchg
aad
add
dec
sub
xor
sbb
sub
xorl
xor
les
push
push
test
int
jo
gs
jecxz
outsb
xchg
jne
repz
sub
test
test
mov
lds
test
in
add
pusha
leavew
sbb
roll
gs
xchg
lds
scas
test
loope
add
sub
pusha
shrl
and
sub
adc
fs
cmc
push
test
mov
in
jno
movsl
test
stc
inc
and
les
lds
or
mov
lea
les
mov
push
sub
or
test
inc
movsl
push
xchg
inc
xchg
aad
add
call
add
movsb
mov
lds
inc
in
cs
cld
mov
push
imul
test
sti
add
xor
test
rorl
xor
in
xorb
into
add
loope
add
mov
add
xor
adc
cmc
int
pop
inc
or
imul
adc
lds
inc
repz
movsl
jle
dec
call
xchg
push
mov
in
sub
movsl
inc
movsl
push
xchg
inc
xchg
inc
aad
in
jecxz
fildl
test
nop
mov
or
loope
xorb
loope
movsl
cltd
popa
xchg
or
loope
sbbb
popa
add
pop
movsl
test
movsl
push
xchg
inc
xchg
aad
add
xchg
lds
ret
stos
xor
xchg
push
inc
pop
add
xor
cwtl
push
out
jb
shrl
pushf
inc
movsl
xchg
inc
ret
fldl
xchg
push
mov
adc
shrb
movsb
push
adc
adc
repnz
inc
test
and
lds
or
enter
sbb
insl
repz
bound
mov
loopne
shl
xchg
pusha
out
cltd
in
pop
and
aad
rclb
icebp
mov
or
dec
std
jle
inc
ficoms
scas
dec
jae
mov
mov
jns
movsl
inc
movsl
push
xchg
inc
xchg
inc
aad
in
in
movsb
dec
xchg
test
loopne
call
lcall
popa
stos
and
leave
cmp
mov
mov
pop
bound
mov
add
test
inc
rorl
cld
inc
movsl
push
xchg
inc
xchg
aad
add
sahf
out
in
adc
test
nop
out
jne
or
pushf
dec
lods
sub
sbb
mov
repnz
gs
xchg
aad
add
dec
inc
cmc
arpl
adc
mov
cmc
outsb
cmp
les
scas
adcl
scas
adcl
arpl
or
in
add
xchg
xchg
lds
inc
loopne
cmc
xor
movsl
test
sbbl
nop
and
jae
roll
pop
mov
push
xor
and
mov
in
push
cmp
add
mov
call
xchg
or
dec
cltd
in
pusha
lds
fs
cmc
and
inc
lock
xchg
enter
inc
repz
and
leave
sbb
loopne
cmc
xor
movsl
test
pop
in
add
flds
xchg
sub
loope
mov
out
cltd
in
pusha
lds
fs
cmc
and
inc
adc
jbe
mov
stc
jne
subb
repnz
ss
adc
inc
aad
xchg
out
and
test
popa
push
inc
and
add
jne
jb
mov
lds
pop
push
and
sub
rorl
loop
pop
jne
orb
add
xor
repnz
mov
testb
add
and
test
jo
dec
stos
or
scas
insl
test
xor
inc
and
mulb
adc
enter
bound
test
adcl
clc
outsb
adcb
rorb
add
jne
jb
mov
lds
xor
shl
insl
xchg
movsl
test
int
movsl
lds
mov
test
sbbl
push
sbb
movsl
call
xor
test
fs
push
add
or
ds
lds
shll
jecxz
mov
cmpb
mov
test
mov
adc
leave
pusha
pop
and
les
insl
imul
and
ret
and
and
sti
lds
ja
fildl
pop
rclb
pop
sbbb
mov
clc
lds
jo
mov
add
faddl
mov
lea
add
push
push
adc
movsl
or
ret
mov
inc
lods
add
mov
enter
addl
movsl
les
push
sub
pop
and
push
add
movsb
dec
cmc
jle
pop
fs
dec
loope
out
popa
adcb
add
aad
in
add
inc
fiadds
gs
jo
fildl
add
jnp
sar
mov
roll
add
xor
dec
sub
lds
in
repnz
mov
test
inc
fiadds
gs
in
fs
shl
gs
test
inc
icebp
mov
and
inc
movsl
xchg
sub
movsl
test
add
add
repnz
push
in
call
mov
add
mov
test
dec
and
lods
sub
movsl
movb
out
in
and
adc
leave
int
and
fs
and
and
and
cmp
repz
jno
sub
push
test
pop
push
and
inc
subl
inc
aad
xor
adc
pop
pop
test
inc
movsl
jle
arpl
add
cld
and
mov
and
fiadds
gs
pushf
inc
icebp
mov
and
fiadds
gs
jo
dec
subb
out
fwait
add
or
loope
xorb
mov
movsb
repnz
inc
xor
push
in
xor
test
aad
xorb
cltd
cld
movsb
push
or
jne
adc
dec
add
loope
call
push
in
and
sub
test
inc
gs
and
jo
ljmp
cmpb
vmovupd
mov
stc
jne
ret
movsb
les
cmc
xchg
movsl
test
lods
test
inc
add
popa
lds
out
and
pop
cltd
out
and
aad
inc
stc
sbb
aad
sarb
and
add
push
rclb
fisttpl
xchg
out
cmp
test
in
mov
mov
out
in
xor
stos
sbb
movsb
les
movsl
rorb
ret
push
cmp
test
inc
int
cmc
add
gs
and
test
mov
inc
sbb
push
add
inc
xchg
std
add
xchg
add
push
adc
push
and
test
in
mov
fs
jno
or
sbb
xchg
and
mov
imul
mov
mov
cld
adc
in
mov
mulb
add
mov
sub
movsb
test
add
mov
mov
test
mov
fdiv
cs
mov
bound
ficompl
add
mov
mov
adc
shll
add
add
and
outsl
and
lods
nop
inc
and
inc
mov
ret
push
add
push
dec
dec
arpl
in
mov
into
in
xor
add
gs
mov
add
adc
inc
iret
test
lods
test
jne
test
test
testl
sbb
ds
movsl
cli
and
movsb
inc
and
inc
test
scas
movsb
shlb
push
add
test
mov
loopne
and
mov
out
sbb
pop
test
lds
ss
test
sub
or
mov
ljmp
scas
gs
sub
sbb
aad
xor
in
or
add
clc
add
lods
fldcw
mov
test
inc
movsl
jle
inc
and
movsb
in
xor
cli
test
fidivl
pop
les
and
cltd
mov
lds
mov
shr
movsl
les
jno
test
movsb
repnz
ss
out
ret
pop
js
add
cld
movsb
push
add
and
movsl
mov
lds
stos
andl
int
xor
les
pop
push
test
mov
std
xchg
push
enter
dec
aam
sbb
popa
testl
cmpsb
lret
xor
push
repnz
sar
sub
push
xor
lods
fsin
push
jmp
or
sbb
call
sbb
movsb
repnz
inc
movsl
cmc
in
xchg
mov
sti
into
loope
call
shlb
push
outsl
and
test
cs
xchg
jbe
repnz
sub
cltd
xor
adc
out
and
call
cmp
in
cmp
popf
sbb
xchg
sub
movsb
repnz
inc
mov
push
cltd
sub
mov
inc
repnz
sbb
int
jp
gs
adc
iret
xchg
lods
mov
and
dec
mov
inc
sub
add
nop
mov
jecxz
sbb
loop
movsl
insl
cltd
out
cmpsb
xor
mov
xor
xchg
cs
shrl
ljmp
or
mov
test
rclb
push
push
inc
shl
movsb
mov
sbb
sbb
jno
pop
sub
pop
and
icebp
mov
or
ds
lds
cmp
sub
inc
gs
and
gs
pushf
inc
xchg
xor
add
or
pop
jp
add
repz
or
les
push
sbb
adcl
jno
pop
sub
push
mov
mov
test
fstl
sbb
add
or
fucom
inc
inc
jns
insl
add
in
mov
in
sub
sbb
enter
xor
jo
mov
jns
mov
ljmp
leave
add
inc
mov
shl
push
loop
sub
imul
sbb
jbe
test
test
loope
lds
out
mov
lds
ret
rolb
add
les
or
inc
mov
or
mov
push
sub
in
mov
push
int
and
das
out
test
movsl
call
jmp
popa
xchg
test
xor
jns
fmull
loope
sbb
test
inc
add
je
xchg
movsl
test
enter
mov
incl
and
paddsw
xor
fs
xchg
in
and
and
loop
xor
inc
pusha
xchg
jnp
aad
add
pop
movsl
xor
inc
xchg
inc
mov
aad
sbb
inc
repz
mull
movsl
and
and
push
add
cmpsb
adc
adcb
shrb
sub
and
sub
inc
and
mov
jb
test
andl
add
add
jl
adc
mov
inc
cmpsl
xchg
xor
shl
rorl
in
movsl
xchg
xor
out
and
push
sahf
stc
mov
and
or
loope
add
cmpb
push
movl
clc
push
mov
repnz
sar
and
imul
lcall
push
test
xchg
xorb
popa
subb
outsb
push
sub
bound
mov
fisubl
subl
dec
ss
jl
movsl
mov
xchg
pop
mov
or
inc
cmpsl
inc
scas
xchg
sub
mov
add
dec
fs
test
mov
inc
lods
add
cltd
mov
or
inc
add
pop
jp
mov
stc
ror
jl
cmpb
and
std
sbb
in
and
popf
add
lds
test
imul
sbb
adc
test
gs
adc
and
xchg
lds
add
push
in
inc
inc
test
sub
inc
jne
enter
sti
sbb
lock
lcall
sub
and
pop
in
ret
into
scas
mov
in
mov
es
gs
fldcw
jo
pusha
dec
xor
xchg
and
sbb
mov
in
cmpsl
inc
xlat
xchg
inc
lret
adc
push
jne
jb
mov
lds
dec
inc
mov
pop
bound
dec
shufps
mov
enter
iret
test
inc
jno
sti
lret
mov
xor
lret
add
push
mov
das
in
push
mov
lds
jbe
test
mov
or
xor
cmc
and
xor
roll
add
sub
add
scas
inc
call
jb
sub
or
fldenv
cmp
test
leave
in
sub
les
sub
and
sbb
test
add
popl
or
test
xor
in
lea
test
mov
imul
nop
push
fsubrs
adc
ret
test
xor
xor
stc
test
fldcw
aad
and
movsl
vdivpd
test
lds
loop
cmpsb
in
push
inc
jbe
and
mov
call
adc
and
loopne
js
out
ret
push
sbb
xchg
movsl
popf
gs
les
xchg
sub
pop
and
repnz
sub
in
sub
mov
mov
mov
mov
call
jb
mov
sbb
lods
shlb
sub
in
call
outsb
adcb
inc
mov
movsb
push
add
and
xorl
popa
leave
bound
mov
fmull
cmp
sbb
lea
out
mov
jbe
test
inc
fs
sub
fs
mulb
cmc
add
pusha
xor
nop
mov
adc
cmp
in
icebp
adc
test
and
mov
iret
xchg
cmp
and
repz
add
enter
sub
adc
das
out
pushf
lods
popf
shl
lds
lahf
inc
test
or
and
mov
inc
popl
test
std
dec
add
repz
in
and
mov
pop
jge
out
mov
xchg
movsl
test
lods
add
inc
call
in
test
cs
int
and
fs
in
rcrl
in
sbbb
add
or
inc
shl
sub
and
test
int
repz
cmpb
fsts
mov
dec
rcrb
fdivrp
movsb
mov
push
xchg
jbe
test
into
mov
add
cltd
xchg
lds
cltd
mov
movsl
xor
xor
jbe
test
sub
cld
pextrw
xchg
inc
xchg
cmc
add
outsb
adcb
rorb
adc
pop
lcall
mov
dec
pop
sbb
sbb
push
jo
mov
mov
mulb
ret
in
add
lea
add
dec
call
add
adc
and
out
lods
dec
and
rcrb
push
inc
and
ss
add
dec
out
ret
adc
push
test
xor
int
sub
outsb
inc
or
scas
mov
cli
mov
pop
rolb
jbe
test
cmp
mov
shl
xadd
mov
adc
and
xor
scas
addb
les
dec
push
test
ljmp
test
or
jo
inc
test
xor
and
mov
gs
and
push
add
mov
xchg
sub
outsb
inc
sub
sbbb
sub
in
sub
mov
int
lock
test
sub
adc
xor
test
int
add
dec
adc
test
sbb
outsb
inc
cmp
int
add
mov
mov
mulb
adc
inc
push
cmc
movsb
repnz
ss
mov
add
lea
adc
repz
mov
ret
dec
xor
test
mov
add
in
lcallw
movsl
push
call
xchg
add
add
pop
rolb
jbe
test
adc
lea
add
add
mov
mov
mulb
push
loop
push
add
push
aad
xor
movsl
test
subb
shl
test
in
in
inc
inc
repnz
movsb
push
sbb
jge
adc
les
or
inc
mov
test
lods
int
sub
ficomps
fstps
sub
adc
shll
jb
mov
lds
jp
enter
add
repnz
in
and
inc
test
mov
push
adc
sub
lds
scas
shlb
insl
iret
add
subb
cmc
lds
scas
in
nop
mov
cmc
or
sub
push
test
outsb
inc
push
inc
repnz
jge
lock
roll
jne
sbb
pop
fmull
cli
xor
inc
and
xor
movsl
test
adc
cmpb
cmc
in
push
inc
repnz
inc
repnz
gs
fs
lods
imul
lds
or
adc
shrb
sub
sub
xchg
sub
jno
mov
sti
in
dec
inc
repnz
mov
rolb
sub
pusha
rcrl
cltd
movsb
push
std
in
mov
adc
gs
mov
cmp
jle
dec
adc
inc
push
ficomps
cmc
jno
and
xchg
lock
mov
fimull
sub
rcrl
jge
mov
aad
xchg
dec
and
test
push
cli
lods
xor
in
movsl
test
add
outsl
and
and
and
test
popa
cmc
push
int3
bound
xor
cmpb
xor
mov
add
mov
inc
rorb
lds
sbb
scas
rclb
out
and
fnsetpm(287
add
mov
pop
mov
xlat
jnp
movsb
rorb
adc
popl
mov
mull
inc
add
scas
shlb
mov
pop
add
add
test
out
xchg
test
jns
stc
cmp
imul
das
pop
out
or
test
jmp
and
add
enter
shl
and
xorl
mov
push
add
insl
xchg
lds
into
data16
push
mov
rorb
xor
nop
and
mov
push
jne
dec
lods
and
inc
call
add
movsl
das
in
add
enter
add
ljmp
inc
push
loop
in
sub
mulb
cmc
movsb
repnz
gs
iret
orl
dec
pop
and
popf
mov
lds
and
mov
lds
bound
movsl
dec
sub
jne
cmc
add
mov
mull
adc
test
in
xchg
cmp
lds
test
orb
push
adc
test
adcl
or
mov
in
push
jno
lds
lret
pmaddwd
mov
fs
mull
adc
das
in
mov
fs
mulb
popf
movsb
push
icebp
add
xchg
xchg
lds
mov
test
inc
pop
cmc
movsb
mov
adc
and
stc
add
movsl
das
in
xchg
inc
repnz
movsb
repnz
popf
movsb
push
sbb
sbb
jp
cmpb
call
aad
loop
loopne
xchg
sub
xor
decb
enter
add
sahf
or
fsts
inc
inc
gs
icebp
jmp
mov
add
mov
jo
pop
std
add
mov
mov
jo
push
cmc
add
push
fs
mull
sti
sbb
loopne
int
xor
jle
insl
or
xor
cmp
mov
dec
pop
loope
mov
outsb
jp
shrb
scas
jge
and
sbb
shl
lds
nop
mov
lock
test
pusha
dec
and
in
mulb
test
jb
mov
xchg
scas
insl
push
loop
in
xchg
jbe
test
test
loop
push
xor
in
sub
add
dec
std
cmpsl
vaddpd
mov
popa
mov
inc
lock
loopne
nop
scas
aad
xor
inc
xchg
push
add
loope
cmpsb
push
shr
movsl
in
nop
mov
test
jmp
xor
shrb
out
and
in
nop
mov
test
icebp
in
xor
add
mov
add
inc
iret
subl
xchg
sub
stos
cmpb
rcll
push
inc
movsl
movsb
push
cmc
add
sahf
ficompl
cmp
hlt
bound
and
rcll
stos
cmpb
ret
inc
inc
repnz
cs
mov
add
mov
xchg
lds
sub
and
nop
mov
adc
sub
in
test
dec
lds
mov
lds
jbe
test
subb
je
movsl
bound
pop
loope
xorb
fnstsw
jp
rcll
jo
inc
repnz
cs
add
into
mov
xchg
test
mov
add
cwtl
mov
inc
or
test
shll
push
adcl
leave
sub
mov
aad
loop
in
xor
push
sbb
fs
mulb
push
loop
cmp
xor
cmp
mov
mov
call
xor
inc
and
dec
sbb
in
lcall
push
and
pop
insl
add
in
jle
pop
or
xor
icebp
mov
shll
adc
jp,pt
shrl
xor
xchg
lds
mov
outsb
jp
sahf
ficoml
gs
icebp
andb
mov
ret
push
inc
push
or
leave
inc
pop
loopne
icebp
mov
or
pop
call
dec
and
js
icebp
subb
fmuls
xor
mov
int
divl
push
or
gs
jp
xor
ljmp
inc
test
mov
mov
mulb
adc
add
dec
movsb
mov
repz
test
lock
inc
xchg
in
dec
mov
lds
enter
dec
sbb
test
movsb
mov
adc
mov
inc
push
cmc
movsb
mov
inc
push
lret
adc
jno
jb
rorb
in
dec
or
xchg
xor
gs
movsl
dec
and
roll
add
or
pop
and
icebp
mov
cmp
fucom
xchg
push
inc
repz
xchg
lds
mov
andb
fildl
xor
inc
dec
mov
clc
shlb
test
mov
sub
push
ss
fmull
cli
xor
and
scas
xor
fs
sub
mov
mov
jb
xor
test
mov
bound
jne
inc
push
cmc
movsb
mov
rolb
mov
push
lock
fcoms
sahf
fimull
lcall
sbb
lods
pop
movsl
out
dec
inc
test
lods
out
loopne
inc
call
xchg
add
bound
adc
lock
test
mov
xor
test
loop
jno
and
inc
lock
mov
add
mov
lds
dec
fs
mulb
test
jb
mov
xchg
scas
insl
push
loop
in
xchg
inc
xchg
add
ljmp
pop
adc
test
xor
int
cmp
mov
cmpsb
shl
xadd
mov
sbb
les
and
xor
scas
orb
xor
es
mov
pushf
dec
mov
test
xchg
push
inc
and
shll
lea
test
das
in
mov
aad
shrb
and
outsl
and
adc
test
gs
loope
bound
lea
add
sahf
ficompl
mov
rolb
jbe
test
cmp
mov
xchg
lds
push
fs
cmp
xchg
and
movsb
mov
jp
shll
xor
in
scas
andb
scas
rclb
out
and
xchg
in
and
loope
add
rol
movsl
inc
inc
sbb
in
add
or
movsl
mov
inc
gs
movsb
push
jmp
lds
aam
test
dec
fs
lods
cmp
and
and
lea
add
jl
insl
xchg
test
inc
repnz
cmp
jl
jge
test
xor
push
jmp
mov
mov
scas
xchg
daa
enter
shll
or
mov
add
rorb
cmp
and
test
and
and
gs
in
in
mov
inc
movsl
add
inc
lds
int
mov
pop
test
test
ret
and
dec
push
cmp
shll
sub
sbb
loopne
mov
into
insl
or
mov
add
shlb
scas
dec
call
add
add
and
subl
pop
xacquire
xchg
sbb
into
sub
cmp
orb
xlat
push
push
in
sub
add
jp
movsb
rolb
cmp
jb
stos
cmpb
xor
xchg
xor
mov
lds
mulb
ret
in
pop
inc
repnz
push
icebp
add
dec
fs
test
pushf
inc
repnz
movsl
xchg
push
lret
mov
shrb
shlb
inc
and
mov
sbb
sub
std
fs
mov
leave
xchg
popa
arpl
jo
ds
in
cmp
in
fidivrl
jle
movsb
rorb
cli
mov
fisubrl
loop
cmp
scas
fidivrl
loop
adc
or
test
inc
test
aam
les
and
ss
in
add
test
sbb
mov
out
and
lds
sbb
test
xor
gs
add
and
incl
out
mov
lds
popf
pop
test
adc
stc
mov
jne
test
inc
push
pop
and
push
add
mov
sub
inc
out
add
add
in
lds
inc
fs
cmc
and
lahf
movsb
les
push
and
add
enter
inc
jno
and
ljmp
popf
mov
movsl
xor
movsl
test
cmp
test
shlb
jg
fiaddl
out
aad
push
movsl
sahf
and
cmpsl
vmovdqa
push
or
add
or
mov
aad
adc
push
jo
mov
test
push
push
inc
and
dec
and
scas
cmpb
lods
enter
repnz
orl
das
mul
add
and
shr
movsb
hlt
add
and
cmp
scas
cmpb
jle
add
xor
push
outsl
and
and
adc
test
loop
push
adc
dec
jb
js
icebp
jmp
push
mov
xor
and
jge
rclb
fs
cmc
and
mov
lds
pop
ret
add
sub
push
and
aad
sbb
pop
sbb
loopne
rcrl
pop
xor
rclb
fidivl
xchg
inc
xchg
adc
and
mov
jp
shrb
repnz
adc
test
xor
in
movsl
jne
test
pop
call
sbb
scas
rclb
adc
nop
xor
sbb
gs
xorb
sti
sbb
insb
nop
mov
lock
push
add
shr
popf
clc
fdivs
test
mov
xor
std
xor
test
inc
test
mov
sar
adc
loopne
test
inc
test
in
and
xor
frstpm(287
test
inc
call
add
adc
aad
fwait
mov
add
test
addl
xor
push
mov
cmc
outsl
pop
lods
inc
cmpsb
jmp
cld
jnp
or
inc
adc
orb
call
jl
push
xchg
add
in
test
mov
xor
cs
xor
out
test
je
cmp
pusha
test
mov
or
push
out
ret
movsl
mov
inc
xchg
add
test
subb
cltd
loop
and
fsts
lahf
inc
test
inc
loope
mov
call
add
dec
sub
in
mov
rolb
cs
test
mov
jl
movsl
mov
xchg
pop
stos
test
mov
xchg
jbe
enter
jne
add
inc
jmp
inc
mov
inc
call
int3
test
jge
sbb
push
mov
mov
ret
js
jne
daa
push
in
and
rorb
fldl
test
add
xor
push
test
inc
add
and
movsl
lds
lods
inc
test
pop
xchg
add
in
test
popa
or
dec
add
imul
flds
sub
gs
movsl
lds
andl
movsb
hlt
in
and
test
jne
mov
or
push
jne
xchg
pusha
das
jecxz
fsubp
and
ljmp
mov
loopne
arpl
ret
sub
lret
inc
and
mov
jb
push
sbb
mov
xor
and
es
scas
mov
lds
and
dec
in
inc
arpl
xor
test
enter
sbb
adc
movsb
les
popf
movsb
outsb
xorb
or
push
inc
inc
and
dec
xor
test
or
scas
insl
test
test
movsb
mov
andl
pop
mulb
in
arpl
ljmp
sub
pop
mov
leave
push
outsl
and
repnz
ss
ljmp
sbb
test
loop
push
push
jmp
jae
les
jne
test
movsl
in
dec
fs
fmull
aad
in
and
shll
cmp
shl
adc
mov
lds
lea
mov
movsl
xor
cld
and
andl
adc
int
cmp
add
clc
mov
shr
movsl
shll
jb
mov
lds
mov
shr
movsl
shll
jb
mov
lds
mov
xchg
push
and
cmp
xchg
inc
dec
dec
outsl
popf
in
cmp
movl
sub
fs
stc
int
sbb
or
xor
adcl
ficoml
mulb
jl
cli
push
ss
aad
nop
inc
repz
sub
mov
and
sbb
inc
rol
jns
movsl
dec
and
adc
leave
int
inc
inc
gs
and
test
je
inc
movsl
or
test
xor
popl
adc
in
clc
and
lea
mov
mov
in
push
add
popf
faddl
add
jno
pop
sub
pop
and
icebp
movsb
movsb
push
adc
insl
add
in
sahf
ret
xor
dec
pop
and
cmpl
movsb
repnz
xor
sar
jmp
xor
inc
or
shll
add
enter
shll
xchg
inc
icebp
mov
and
jb,pt
popl
adc
std
int
push
cmp
xor
jne
test
pop
sbbl
test
test
loope
in
sbb
pop
xchg
and
leave
sbb
fs
int
lds
dec
leave
lahf
in
xor
push
sbb
popa
imul
lods
addb
lds
xchg
sub
pusha
shrl
mov
rclb
jb
and
imul
into
mov
xchg
pop
out
cltd
in
dec
add
xor
inc
or
push
repnz
lret
sbb
in
jne
movsl
test
add
and
fwait
cmc
movsb
push
jmp
test
inc
movsl
jle
je
adc
pop
pop
test
mov
add
adcl
stos
fistpl
stc
and
fiadds
gs
jge
mov
rol
jb
and
xchg
test
leave
in
sub
in
loope
rolb
movsb
mov
sbb
scas
rclb
add
and
in
xchg
inc
gs
lahf
vpmulhw
shr
mov
cli
xor
lcall
shlb
and
jno
popl
lock
push
test
movsl
test
dec
test
in
xchg
inc
icebp
mov
popa
sub
pusha
roll
adc
les
inc
mov
or
add
push
add
popa
test
fnsetpm(287
add
add
loope
adc
repnz
in
xchg
inc
pop
repz
in
xchg
inc
pop
add
loope
add
shl
add
pushf
inc
jns
pop
inc
icebp
mov
fs
fmull
sbb
pop
jle
mov
imul
ret
mov
mov
mov
mov
cmc
and
test
jb
mov
lds
scas
cmpb
dec
and
in
cmpb
vpcmpeqw
xchg
test
mov
cltd
mov
sahf
arpl
scas
push
and
mov
mov
test
repnz
xor
test
pop
into
loopne
call
add
dec
dec
sub
xor
lods
mov
and
lods
daa
adc
loop
push
push
mov
inc
xor
push
test
add
mov
aad
loop
push
in
out
fs
sub
jmp
mov
dec
jecxz
vpcmpeqw
ds
sti
outsb
adcb
mov
es
and
js
add
out
ret
and
xchg
sub
push
aam
pop
push
and
adc
pop
inc
test
test
test
sub
mov
add
movsl
les
and
imul
lcall
sub
adc
and
xchg
out
movsl
les
or
inc
mov
test
adc
cmc
lea
enter
push
jmp
adc
gs
adc
test
popa
cmc
in
sub
lds
aas
test
sbb
gs
int
aad
in
sub
mov
xchg
lds
cmpb
popa
push
inc
and
push
std
add
dec
fs
int
movsl
test
and
mov
adc
mov
mov
mulb
in
xor
and
test
dec
mov
add
jne
test
movsl
test
add
fs
test
sbb
push
test
popl
adc
inc
xor
out
add
or
lcall
test
insl
repz
cmp
jno
gs
cmp
adc
pop
inc
test
mov
test
pop
adc
test
inc
cmc
orl
inc
cmp
push
shll
subb
shlb
jp
jne
sub
ljmp
inc
add
in
xor
lds
or
test
test
inc
movsl
jle
lods
shrl
add
add
movsl
dec
and
cmpsl
vpackssdw
gs
add
mov
iret
mov
les
or
inc
inc
or
sub
in
fstpt
xor
pushf
andl
add
outsl
push
mov
test
fldcw
stos
subb
xor
movsl
lods
ds
and
shrl
jb
adc
les
nop
inc
rcrb
push
inc
repnz
fsubl
cs
test
out
cltd
in
push
mov
mov
movsl
xor
inc
inc
fcoml
lods
les
and
xchg
push
mov
inc
jp
and
push
jmp
inc
mov
shlb
and
jno
and
xchg
rep
repnz
rep
push
in
add
mov
test
aad
shlb
sub
test
inc
repnz
sbb
dec
es
and
add
add
addb
jno
adc
les
or
or
sbb
xrstors
shrb
nop
inc
std
btc
rep
push
in
in
pop
pop
test
sub
rep
repnz
movsb
push
adc
repnz
daa
mov
xor
mov
fldenv
or
leave
xor
movsl
dec
jp
mov
fs
les
and
popf
test
icebp
in
push
inc
repnz
enter
mov
xchg
test
sub
and
adc
dec
loopne
in
lds
mov
mov
adc
inc
call
xorb
lods
add
shl
push
in
cli
popf
adc
xchg
cmp
add
call
adc
stc
in
pop
mov
jb
and
jns
mov
dec
fs
mulb
cmc
add
xchg
test
in
xchg
pop
inc
repnz
mov
rolb
mov
in
test
es
and
shl
lds
movsl
fldl
sbb
les
and
popf
test
icebp
in
push
inc
repnz
enter
pop
adc
cmp
in
mov
mov
test
loop
xor
bound
lods
aad
movsl
ss
pop
inc
add
push
mov
pop
and
in
xchg
pop
mov
test
cmc
push
jo
mov
add
add
movsb
adc
xchg
and
in
loope
loope
xor
in
and
add
and
and
xor
pop
add
jne
lock
xor
call
movsb
push
sbb
jge
test
cmc
push
add
dec
fs
cmp
out
gs
jns
gs
fs
mulb
and
shlb
xor
and
lcall
call
add
in
in
test
loop
xor
dec
push
jl
lock
mov
cmp
lock
cmc
cli
inc
and
fisubl
adc
inc
faddl
inc
fsubl
rcr
add
repz
jp
movsl
shrl
xchg
movsl
test
sbb
gs
fs
insl
xor
mov
in
adc
pop
mov
movsb
mov
cltd
jae
gs
inc
adc
push
in
or
and
lcall
jp
movsl
and
rclb
push
mov
fdiv
paddsw
xor
movsl
test
test
gs
ja
bound
fcmovbe
cmc
and
out
movsl
das
loopne
mov
fs
push
std
mov
xchg
lds
mov
mov
mulb
ret
in
cmp
push
stc
add
nop
shrb
cmp
insb
and
leave
cmp
mov
fdivr
sbb
pop
add
pop
fs
cmc
and
mov
xchg
lds
xchg
and
xchg
sub
in
xchg
jbe
test
inc
jnp
push
and
lock
xchg
inc
dec
dec
push
cmp
xor
add
jno
arpl
inc
or
mov
mov
popl
mov
cmc
and
pushf
xor
dec
add
inc
xchg
jne
add
fs
cmc
and
sti
pusha
xor
cmpsb
sub
test
inc
test
add
inc
adc
push
mov
lds
inc
xchg
lret
pusha
fidivl
push
loop
es
scas
rclb
out
and
mov
push
in
cmp
rcrb
test
or
push
adc
test
fs
dec
adc
inc
out
repnz
mov
mov
fisubl
lret
push
lea
test
mov
adc
rorl
add
lods
popa
xchg
lods
jp
movsb
les
and
xchg
lcall
ljmp
sub
pop
into
loopne
and
jmp
lock
lds
lods
mov
add
mov
mov
repnz
sbb
lea
jl
rolb
into
loopne
call
push
and
lds
or
dec
std
andb
stc
sub
sbb
sub
popf
fnsetpm(287
add
inc
test
inc
add
aas
mov
fnsetpm(287
add
jo
add
mov
in
in
fwait
push
jge
movsl
test
inc
stc
sbb
aad
xor
in
imul
call
std
cmc
and
sti
outsb
and
inc
inc
iret
test
inc
xchg
pop
aad
in
in
inc
adc
inc
fiadds
dec
leave
xchg
imul
and
popf
in
in
lea
test
adc
gs
call
inc
and
xor
movsb
mov
add
mov
inc
call
xchg
mov
in
mov
in
out
and
inc
movsl
xchg
cltd
lret
mov
fsubrs
movsl
ds
add
dec
dec
push
test
mov
push
add
ret
into
dec
cmp
sbb
push
sbb
inc
std
sbb
aad
in
leave
in
sahf
mov
adc
inc
fdivp
mov
xchg
lds
inc
fs
jge
movsl
test
test
push
and
mov
push
jb
mov
add
scas
flds
pop
inc
pop
movsl
test
or
xchg
jbe
test
cli
push
ss
out
movsl
pushf
scas
insl
test
jbe
test
lods
push
inc
jns
cld
adc
loop
mov
test
loope
inc
and
test
mov
das
in
adc
ljmp
in
and
sbb
push
rcll
movsl
lds
xchg
sub
pop
mov
popf
add
jno
and
andl
xor
sbb
test
xor
movsl
test
test
test
mov
add
popa
xchg
out
movsl
shll
xor
sbb
cmc
in
lcall
xchg
ds
ljmp
add
jns
test
xor
test
xor
movsl
test
test
test
mov
jb
inc
fs
rolb
xor
push
mov
test
and
add
in
or
jmp
and
mov
inc
inc
jne
sti
sbb
pusha
rcll
repz
popa
popa
add
in
in
cld
pop
test
or
cmp
pusha
lods
cmp
and
loope
xor
in
inc
inc
dec
pop
mov
inc
icebp
mov
sub
les
loopne
shl
adc
repz
mov
xchg
cld
xor
movsl
test
or
movsl
test
ljmp
movsl
xchg
scas
insl
test
jbe
test
inc
jne
repz
loop
push
popa
jp
movsl
sbb
add
and
jno
pushf
scas
test
or
xor
or
add
test
rorl
call
and
stos
fstl
xor
dec
push
imul
shrl
data16
pextrw
xchg
inc
push
or
loope
fs
mov
push
test
icebp
mov
lds
lea
sub
aad
in
loopne
gs
int
xchg
sub
jge
inc
and
test
repnz
insl
js
movsb
sub
fs
inc
movsl
add
dec
icebp
mov
xchg
lds
icebp
xchg
lds
sub
imul
mov
pop
push
in
cli
bound
and
inc
test
add
and
add
lds
jns
in
xor
ret
sub
and
pop
lcall
sub
movsl
pop
bound
add
subb
mov
add
movsb
hlt
popa
es
fisubs
je
push
cmpsb
jb
xchg
lds
inc
aad
lods
dec
and
stc
mulb
or
cmc
test
inc
repnz
adc
out
mov
fs
fisubl
add
in
test
popa
add
popa
jnp
inc
gs
rolb
inc
xchg
add
in
push
sbb
add
aad
testb
in
xchg
mov
into
aad
in
loope
shr
movsl
rorl
movsl
xor
push
jne
dec
out
ret
shll
cmp
push
loop
in
cmp
add
mov
add
cmpsb
vmovdqa
lret
pextrw
push
in
es
test
stc
cmp
movsl
xor
gs
add
add
iret
xchg
sub
pusha
roll
jns
in
xchg
lret
adc
test
gs
or
test
movsl
test
inc
fs
sub
sbb
aad
fwait
mul
add
gs
jmp
bound
psrad
aas
inc
and
loope
sbb
inc
push
test
and
fs
inc
loop
cmp
sub
sbb
aad
rorb
push
inc
and
in
and
out
add
imul
addb
sti
add
mov
ret
dec
xchg
jl
test
leave
in
shll
and
add
shl
xchg
das
inc
repnz
pextrw
xchg
inc
push
or
aad
std
pop
add
jmp
test
xchg
lds
mov
leave
orb
mov
adc
loop
cmp
and
scas
cmpb
mov
add
add
aad
lods
dec
and
and
call
add
mov
out
test
inc
repnz
sbb
adc
lds
push
cli
scas
and
jno
pushf
scas
test
jbe
test
pop
cmc
add
dec
and
and
and
and
aad
jno
and
mov
pop
sti
ret
out
mov
fs
cmc
and
fsubp
fbstp
movsl
fidivrs
xor
adc
es
xchg
mov
dec
ficoms
dec
sub
pusha
shlb
clc
cmp
mov
stc
dec
mov
cmpsb
loopne
je
sar
outsb
inc
xor
adc
xor
test
xor
mov
lds
push
shlb
add
movsl
test
cmp
inc
xor
mov
add
adc
and
cmc
bswap
outsb
inc
cmp
cli
sbb
inc
and
mov
sbb
cmp
xor
and
sbbl
into
inc
fcoms
movsb
mov
add
mov
lds
inc
gs
xor
push
cmc
bswap
outsb
inc
cmp
mov
ret
xchg
add
pop
cmp
bound
sbb
jb
mov
lds
dec
aas
rclb
xchg
push
je
mov
or
add
push
loopne
lods
shrl
cmpb
cmc
push
popf
cmp
shr
movsl
shll
jb
mov
lds
xor
shlb
pop
js
add
or
nop
and
add
dec
aad
movsb
repnz
xor
adc
xchg
stc
pusha
test
mov
js
adc
test
fs
in
mov
sbb
fwait
movsb
les
int
test
add
paddd
test
ret
test
inc
jo
std
cmp
insl
and
test
push
jp
movsb
xor
jno
in
enter
fnsave
shll
sub
sbb
aad
and
add
lods
add
in
push
add
shlb
sub
sbb
aad
and
add
mov
mov
cmc
and
or
jne
add
mov
add
in
xchg
lret
mov
pushf
movsl
test
jne
inc
sub
outsl
popa
mov
mov
call
push
leave
mov
lock
xor
mov
xor
and
cmc
mov
lds
mov
ljmp
inc
repnz
loop
xor
enter
repnz
movsb
repnz
gs
ljmp
sub
pop
fs
mov
leave
xchg
inc
test
inc
test
and
pop
mov
call
mov
gs
ljmp
inc
aad
insb
in
stos
ret
movsb
les
xchg
inc
repnz
shlb
lea
add
shll
cmp
test
mov
xchg
mov
sub
pop
and
inc
stc
sbb
aad
popf
shl
xchg
lret
mov
mov
test
ret
movsb
les
mov
fs
mulb
dec
pusha
lods
add
and
loope
xor
mov
test
add
aad
xor
in
outsl
es
icebp
mov
jbe
gs
cmpsl
or
inc
mov
inc
mov
sub
imul
in
pushf
scas
movsl
lock
cmp
test
push
jmp
add
shrb
repnz
loop
mov
insl
mov
movsl
sub
aad
shlb
inc
and
push
in
add
test
mov
les
popl
cmc
or
sub
pusha
rcrl
mov
fwait
push
and
sub
test
xor
nop
pop
lock
es
test
inc
jo
add
mov
in
andb
out
and
sub
fs
mulb
test
imul
cmp
ja
inc
add
outsb
inc
sub
mov
aad
in
and
imul
adc
and
or
loop
dec
popa
and
std
mov
lds
mov
fsubrl
sbb
fcoms
aad
jb
and
cltd
in
int
and
push
mov
imul
clc
push
cmp
shl
and
cmc
and
lcall
sar
movsb
repnz
movsb
repnz
and
cmc
dec
lahf
cmpsb
dec
cwtl
lods
vmovd
es
sub
gs
push
xor
dec
pusha
lods
vmovd
lds
icebp
pushf
movsl
test
inc
fs
add
inc
and
xor
jns
in
pusha
roll
cltd
mov
cmp
popf
movsb
push
sub
inc
xchg
sbb
mov
iret
pop
mov
mov
push
xor
dec
or
iret
pop
mov
test
push
cmp
test
adc
shlb
sub
sbb
aad
dec
dec
bound
cmp
movsb
push
in
add
mov
or
pusha
xor
cmpsb
sub
movsl
lds
cmp
test
add
sti
add
push
or
and
iret
lds
push
ljmp
ficoml
test
movsb
ljmp
inc
test
jb
mov
and
fnsave
sub
fnsetpm(287
add
sub
pop
jne
ret
movsb
les
push
mov
or
add
scas
mov
lea
loop
push
push
jmp
and
adc
inc
loopne
test
inc
fs
sub
sbb
aad
rolb
inc
and
in
or
ds
rclb
push
jae
shrb
cwtl
xor
and
int
in
push
push
mov
sub
cld
lock
cmp
push
inc
or
enter
add
mov
aad
rol
adc
or
movsl
dec
push
xchg
inc
xchg
lods
aad
in
mov
ljmp
xorb
xor
test
jb
mov
lds
shrb
movsl
call
add
adc
cmp
mov
or
ds
lds
xor
pop
cs
gs
and
and
pusha
add
test
jae
sub
lds
cmpsb
push
in
test
enter
rcrl
ss
xchg
addr16
jno
popl
test
or
mov
repz
shrl
lods
dec
lods
jnp
inc
fcomp
or
sbb
out
mov
inc
icebp
mov
push
test
mov
dec
mov
mov
pusha
hlt
and
fs
in
jae
mov
and
xchg
sub
cmp
mov
popl
test
xor
xor
dec
and
push
inc
push
add
icebp
sbbb
mov
xchg
in
cmp
loopne
call
jae
nop
jae
gs
jp
scas
rorb
dec
push
jb
enter
and
add
aam
push
and
les
or
xor
mov
call
add
shlb
cs
jae
scas
pusha
repz
and
sbb
ss
fs
xor
xchg
scas
pusha
in
movsl
and
imul
mov
fnsave
mov
dec
and
adc
inc
repnz
loop
xor
push
cmp
xor
faddl
inc
repnz
adc
jae
shll
and
lea
imul
test
aad
xor
aad
in
sub
test
cmp
imul
mov
cmp
ficompl
test
rorb
loop
push
jne
shrb
sbb
insl
jp
sub
push
fdivrs
pop
icebp
sbb
sub
ljmp
mov
xor
mov
xor
movsl
test
scas
pusha
or
add
inc
repnz
adc
inc
call
pop
xor
lea
insl
insl
test
inc
xchg
add
mov
xor
xchg
leave
add
data16
adc
adc
test
movsb
repnz
ss
fisttpl
loop
inc
js
add
or
nop
push
shlb
jp
scas
mov
out
aad
mov
cmp
inc
int
test
sub
repnz
xor
xlat
notl
aaa
push
ja
adcb
mov
ret
dec
loop
out
xchg
inc
xchg
adc
in
icebp
mov
dec
xor
test
xor
mov
jae
push
leave
add
mov
mov
rcrb
mov
lock
mov
lock
push
jmp
mov
cmc
and
lret
sbb
cld
sub
sbb
lock
push
adc
mov
cmc
and
nop
xor
dec
popa
and
std
mov
sub
cli
mov
dec
fs
cmc
and
adc
sahf
test
mov
xchg
and
jb
sub
cld
lock
sub
xor
mov
in
sub
movsb
repnz
inc
xor
mov
xchg
lds
rcrb
add
jne
adc
roll
cmp
cmc
and
shlb
test
cmc
in
sub
pop
test
leave
in
pop
jne
test
adc
mov
test
xchg
enter
cmp
sar
lidtl
in
xchg
or
imul
shufps
xor
lock
xor
ss
jae
mov
repz
jbe
test
test
xchg
inc
test
adc
fst
add
jnp
movsb
data16
gs
out
add
fstl
mov
inc
fs
and
fwait
movsb
les
push
and
add
out
mov
lds
jne
movsl
test
inc
cltd
sbb
shl
sub
sbb
shl
jp,pn
sbb
adc
inc
test
xchg
push
aad
in
mov
repnz
inc
sbbl
cmpsb
vpcmpeqw
add
repnz
inc
sbbl
rorb
push
inc
and
lds
mov
sbb
cmp
dec
ljmp
ret
movsb
loopne
es
aad
xor
in
leave
jne
test
inc
dec
pop
and
and
mov
or
movsb
inc
ret
in
adc
cltd
movsb
les
cmp
loop
mov
inc
out
add
orb
add
jne
shrb
inc
and
push
stc
add
mov
cmc
add
cmc
xchg
lds
push
fs
cmc
and
sahf
movsb
les
mov
fs
cmc
and
test
xchg
adc
xchg
movsb
mov
xchg
xor
cmp
sti
sbb
orl
movsl
dec
mov
test
out
and
cmc
out
and
vhaddpd
xchg
xchg
dec
int
mov
jge
test
inc
adc
fwait
add
rol
add
test
inc
cmpl
loopne
addl
push
jge
ret
add
xor
jmp
mov
fstpt
mov
lods
scas
add
inc
mov
pop
pusha
dec
mov
push
or
loope
push
in
imul
xor
and
inc
sbb
jns
sub
adc
test
add
aad
lods
les
jno
test
movsb
repnz
gs
call
xor
movsl
test
sbbl
enter
xor
clc
xchg
cwtl
and
mov
mov
and
test
mov
popa
movsl
and
add
add
add
fs
les
pop
push
test
sub
push
jb
scas
test
loope
jo
inc
xchg
mov
cltd
popa
popf
adc
mov
push
or
add
lds
sahf
fldenv
mov
popf
out
lods
fdivl
jb
mov
lds
inc
jge
notb
popa
fs
test
test
aad
in
cmp
mov
shl
movsb
mov
icebp
mov
and
mov
mov
loope
jo
cmp
test
sub
cmp
nop
enter
inc
fdivs
dec
rolb
enter
push
loope
in
cmpsb
in
mov
lea
aad
rcrb
push
inc
and
das
in
popl
test
call
shrb
into
mov
and
sub
es
add
adc
enter
dec
jp
jo
mov
jp
sarl
shlb
mov
repz
mov
call
lea
ret
mov
mov
pop
push
shll
push
cwtl
jne
lea
or
enter
xor
test
leave
orb
call
xchg
sub
mov
and
insb
or
inc
sar
bswap
xor
sahf
lret
mov
dec
or
iret
xchg
push
cmpsb
hlt
mov
test
xorb
testl
int
inc
mov
push
in
xorb
arpl
repnz
inc
and
hlt
mov
test
fsubs
or
mov
loope
xor
and
add
ret
popa
lds
dec
lods
outsl
es
push
call
iret
mov
xchg
and
or
sbb
pop
add
dec
shrb
in
mov
in
mov
and
lds
lds
daa
into
mov
loop
or
fwait
pop
pop
mov
out
add
or
dec
loopne
lods
lds
dec
in
movsl
push
cmpb
cmp
sub
loope
xor
adc
and
pop
cwtl
call
in
scas
lds
movsl
sahf
gs
add
inc
sub
add
in
cmp
test
dec
pushf
adc
jbe
subb
cmp
lcall
adc
stos
inc
test
shll
dec
in
in
sti
paddusb
mov
adc
sub
inc
and
inc
iret
fidivl
lds
and
rolb
adc
dec
jb
dec
pop
loope
xor
adc
xchg
dec
xchg
pop
pusha
call
mov
push
cwtd
cmpsb
or
push
fldcw
pop
inc
loope
bound
nop
sbb
insl
add
movsl
add
test
icebp
lea
dec
push
sub
stc
call
sbb
scas
shrb
gs
and
inc
mov
sahf
aas
inc
loop
push
gs
out
aas
add
loope
loope
sub
pop
sub
sub
outsl
or
mov
sbb
cmp
addb
and
and
push
shrd
out
leave
ror
pop
out
outsb
pop
repnz
das
cmc
psadbw
aas
cwtl
ja
mov
loopne
call
add
test
inc
repnz
int
xor
les
pop
push
test
xor
push
repz
leave
in
and
sbbl
nop
and
and
enter
dec
cmpsl
dec
pushf
enter
push
pop
jae
xlat
data16
loope
daa
int
out
jb
fwait
enter
dec
and
sub
sub
cs
lea
loope
in
jo
cmp
push
mov
or
inc
mov
lock
pavgb
rorb
mov
or
shlb
and
xchg
lock
jl
call
or
pushl
cmpsb
pop
stos
inc
jg
dec
xchg
push
addr16
movsl
and
addr16
clc
inc
mov
in
pop
pop
in
xor
or
inc
lds
mov
jb
subl
sbb
sti
enter
loopne
call
add
sbb
stos
mov
add
xchg
sub
xchg
push
in
inc
inc
stos
mov
rclb
and
xchg
and
orl
lea
and
xchg
enter
and
add
lods
aaa
dec
adc
movsb
mulb
mov
fs
dec
and
stos
mov
or
mov
test
leave
scas
rclb
stc
add
hlt
in
and
dec
sub
loop
scas
rclb
push
inc
and
loope
add
enter
enter
enter
inc
mov
inc
sub
add
in
inc
fstpl
and
jp
movsl
mov
test
sub
and
sub
in
mov
loop
xor
push
andl
orl
rclb
shrl
scas
in
mov
stc
lds
test
mov
cmp
imul
jne
mov
add
jnp
movsb
inc
mov
rorl
dec
add
lea
mov
test
jne
inc
testb
test
icebp
mov
gs
inc
xor
mov
push
test
shl
movsb
test
test
insl
or
cmc
push
mov
out
lea
in
and
and
add
movsb
push
add
test
cltd
test
loope
mov
xchg
add
sub
add
xchg
inc
icebp
mov
test
cltd
cmc
sub
in
sub
imul
sub
fs
xchg
add
mov
push
cltd
movsl
inc
inc
sbb
movsl
dec
in
mov
ss
inc
xor
push
testl
add
and
popa
shlb
mov
xchg
pop
xor
test
in
xor
pop
jle
add
or
lret
sbb
mov
test
int
adc
aad
pop
sbb
aad
andb
bound
lcall
and
sbb
sub
stc
mov
xor
test
test
test
jns
pusha
push
xor
cli
lods
dec
in
ja
inc
push
xor
in
nop
ficomps
int
or
lods
jl
and
fimuls
popf
ds
lea
aad
lods
les
test
and
sbb
or
int
push
and
movsl
movsl
clc
mov
stos
mov
push
cmp
push
hlt
in
push
add
enter
mov
jo
dec
adc
xor
dec
fdiv
sbb
jp
and
imul
and
xchg
add
sub
lea
lahf
mov
mov
add
dec
call
add
adc
test
sub
in
mov
aaa
push
mov
add
jno
nop
mov
adc
test
cwtl
dec
and
xchg
enter
int
rcrb
push
ret
push
sbb
xor
outsl
es
xchg
bswap
push
mov
les
jle
jns
fisttpll
sbb
add
xor
cmc
lea
add
mov
mov
or
test
addb
push
or
in
push
add
sar
movsl
push
loope
in
and
movsb
push
in
in
scas
inc
test
aad
inc
sub
les
test
pusha
xor
xchg
shrb
mov
shrl
in
test
fiadds
cwtl
push
call
test
loopne
movsb
scas
in
and
xchg
sub
push
xor
inc
pop
inc
mov
add
pop
fiadds
movsb
push
cmp
pushf
movsl
test
fiadds
gs
lea
int
ds
fs
and
mov
jp
inc
test
std
push
test
out
lods
leavew
sbb
fsubr
movsl
les
or
inc
mov
lods
movsb
push
sbb
test
dec
sub
jecxz
pusha
popf
sub
lods
xor
inc
fimuls
jmp
push
mov
popf
jno
ret
fisttpll
and
fldcw
add
add
or
and
add
mov
xchg
pop
sub
pusha
shrl
mov
push
xchg
jbe
test
das
in
adc
lcall
xor
test
int
outsl
and
mov
inc
cmp
mov
sar
mov
rclb
pop
test
inc
movsl
jle
jb
adc
dec
and
and
xchg
or
shrb
movsb
ss
test
dec
leave
add
jge
ret
jb
test
cltd
test
cmc
push
cmc
movsb
add
jno
or
loope
add
popa
imul
inc
dec
call
sub
loope
loope
mov
insl
or
stc
push
mov
int
mov
popa
test
loope
mov
fs
leave
push
mov
dec
scas
gs
sbb
int
test
fstpl
gs
sub
sbb
and
test
sbb
inc
jno
lds
inc
mov
add
in
cmpsb
repnz
sub
or
and
test
sbb
mov
lds
dec
mov
std
lcall
sub
cmp
and
test
sbb
in
in
mov
imul
dec
and
std
push
and
test
aad
repnz
inc
and
les
push
int
test
shll
pop
popf
fiaddl
inc
add
out
in
mov
test
test
cmc
inc
fmuls
xor
xchg
rol
movsl
dec
and
nop
mov
adc
inc
fimuls
popf
ds
cmp
aad
in
loopne
cs
adc
xchg
inc
test
inc
test
xor
nop
and
sbb
jo
sub
in
insl
and
test
push
jnp
movsb
xor
xchg
lds
inc
loope
xor
movsb
xor
gs
sub
inc
movsb
les
sub
pop
mov
lods
xor
and
loopne
aad
adc
add
bound
gs
ljmp
cmp
in
test
in
dec
in
fs
dec
cmp
test
cs
mov
or
fsincos
add
mov
add
in
xchg
inc
pop
or
fsincos
add
and
movsl
vpcmpeqw
cmp
push
mov
sar
lock
shlb
mov
or
and
or
dec
outsl
push
add
shl
and
sub
fs
mulb
in
int
cmp
gs
ljmp
pop
and
aad
insl
test
ljmp
inc
repnz
enter
sub
test
add
mov
lea
lret
add
sub
popa
lds
push
and
test
fs
push
and
pushf
movsb
les
sub
and
sbb
loope
xor
insl
mov
mov
push
add
lods
out
and
fisubrs
mov
icebp
lea
dec
andl
add
inc
xchg
leave
add
test
test
nop
mov
add
add
mov
lret
in
loope
dec
mov
inc
cmp
and
aad
cwtl
in
sahf
lret
mov
ret
movsb
les
push
mov
movsl
xchg
sub
dec
dec
mov
in
nop
inc
xchg
stc
aad
in
es
cmpsl
add
test
shl
sbb
and
inc
sub
in
cmp
shrb
dec
and
add
in
jle
add
add
gs
inc
out
and
ret
scas
dec
add
in
test
lret
gs
fs
movsl
mov
cltd
mov
popa
popa
xchg
jb
mov
lds
push
mov
bound
cmp
lea
add
mov
in
dec
call
ss
aad
rcrb
push
inc
and
add
in
push
test
sub
test
call
add
gs
out
add
dec
dec
sbb
inc
mov
testb
inc
xor
in
sub
lds
repz
sbb
inc
rolb
test
movsb
mov
xchg
sub
les
cmp
test
sbb
gs
lea
test
lret
mov
insl
movsl
test
inc
fdivp
movsb
mov
lds
lods
sbb
and
and
js
pop
popa
test
dec
leave
xchg
dec
popa
test
cmp
test
lret
mov
push
js
movsb
rorb
test
sbb
inc
and
les
xor
and
test
gs
pop
movsb
in
mov
push
add
inc
mov
testb
test
inc
fdivrp
adc
mov
test
test
inc
fs
lea
add
ret
xor
mov
push
push
test
inc
fs
inc
in
and
in
repnz
js
movsb
les
test
sbbb
pop
icebp
cli
movsb
adc
push
gs
aad
adc
and
lcall
in
and
jns
imul
and
mov
inc
test
sbb
test
push
adc
xor
das
test
jns
movsb
repnz
ss
aad
shlb
and
mov
cmp
dec
fs
mulb
add
adc
inc
fs
or
sub
pop
insl
fbld
movsl
test
shlb
testl
pusha
jmp
cwtl
cmp
jp
sub
in
pop
xchg
movsl
test
mov
adc
and
add
fs
mulb
adc
dec
and
movsb
xchg
test
jb
in
js
fimuls
loop
jno
test
mov
in
dec
inc
and
aad
popa
ret
or
dec
cmc
and
mov
shll
test
int
in
inc
push
test
add
insl
sbb
movsl
and
lahf
in
mov
dec
and
mov
dec
pop
nop
lret
movsl
vpshufd
std
add
mov
mov
cmc
and
cmc
adc
in
sub
fxch
mov
popa
stc
outsb
inc
sub
add
repnz
rolb
cmp
sub
clc
outsb
adcb
mov
or
int
add
test
inc
fs
int
add
cltd
mov
movsl
lods
jnp
and
ljmp
xchg
movsl
test
mov
shll
in
pslld
sub
dec
clc
xchg
in
incl
movsl
lods
push
out
inc
call
add
repnz
adc
inc
push
cmc
lea
add
mov
in
xchg
lods
std
mov
mov
popa
leave
in
and
mov
in
adc
test
das
out
and
lds
inc
and
les
sub
dec
add
in
push
in
xchg
pop
test
enter
loope
pextrw
jb
test
orl
jo
in
or
lods
sub
and
iret
test
inc
loopne
movsl
test
mov
in
mov
movsl
test
test
imul
fsubr
adc
jle
add
in
lods
cli
roll
push
or
dec
outsl
xor
stos
fidivrl
dec
adc
cli
cltd
das
out
enter
dec
outsl
push
sbb
and
ret
out
and
lea
sbb
mov
add
call
int3
bound
test
inc
test
inc
push
add
inc
aad
sbb
pop
add
sarb
add
xchg
push
scas
roll
loop
movsb
in
push
mov
push
push
test
xchg
les
inc
jbe
gs
rcll
es
mov
mulb
ret
loope
adc
mov
add
movsl
xchg
lds
xchg
adc
test
xor
in
jge
movsl
test
adc
adc
loopne
jb
mov
movsl
les
sub
cmpsl
or
inc
mov
dec
pusha
xor
mov
cmp
clc
jo
ljmp
mov
movsl
mov
push
mov
add
inc
xchg
lds
and
adc
repnz
mov
mov
shr
cmpsb
xor
test
jb
mov
lds
js
repnz
dec
mov
das
in
and
lds
and
insb
rep
repnz
sti
sbb
sub
mov
or
loope
mov
xchg
mov
sub
sub
outsb
or
loope
sbb
pop
xchg
test
fadd
mov
faddl
push
inc
pop
or
loope
sbb
inc
push
clc
addr16
in
jmp
mov
es
fwait
in
push
test
push
test
sti
inc
and
add
movsl
test
test
cmpsb
scas
inc
loopne
test
cmc
adc
jae
push
repnz
in
ror
lds
roll
inc
and
xor
jo
out
mov
and
lods
in
mov
xchg
fucom
lds
mov
sbb
pop
gs
fistpl
cmc
adc
add
adc
inc
aad
pop
in
insl
jnp
movsl
inc
mov
mov
gs
call
add
movsl
ss
jne
pop
dec
test
inc
lcall
andb
in
test
movsl
jno
movsl
test
xchg
mov
cmc
adc
add
stc
xor
pushf
nop
jae
loope
push
in
push
sub
jns
lods
and
or
loope
add
dec
rorb
sub
popa
dec
stos
and
sub
rorl
and
leave
subl
shll
andb
mov
idivl
pop
js
add
andb
xor
push
and
loope
mov
mov
cs
inc
mov
push
mov
xor
shl
out
std
jne
test
inc
gs
pop
jb
insl
rorb
xorl
sub
jae
scas
addl
push
hlt
mov
pop
in
rclb
sub
and
pop
mov
sub
adc
and
jge
in
and
ret
loopne
das
push
jno
xchg
add
and
xor
insl
rcll
xor
mov
mov
lds
test
cmpl
insb
sarl
mov
call
add
push
scas
icebp
jmp
inc
scas
dec
cmpsl
fcoms
popa
mov
cmp
adc
or
adc
and
in
cld
std
js
out
push
shll
and
mov
and
test
test
push
add
hlt
xchg
into
test
mov
test
mov
mov
scas
dec
decb
inc
out
leave
rcll
sbbl
cltd
fcoms
or
loope
inc
scas
mov
int
xor
cmp
mov
enter
call
mov
mov
enter
call
test
mov
in
addl
dec
movsb
dec
jno
jne
sub
mov
call
add
and
or
pusha
cwtl
pop
pop
mov
call
xor
dec
test
jb
mov
lds
push
rcrl
sbb
test
xor
push
stos
lea
sarb
adc
mov
loope
mov
into
loope
dec
ret
in
inc
test
jge
inc
sub
icebp
and
lds
test
subl
push
inc
xchg
add
shl
test
sbb
dec
or
iret
mov
test
sbb
add
xchg
shrl
jne
jmp
test
sbb
and
call
jno
jns
leave
shl
int
mov
mov
sub
push
and
int3
mov
push
stc
popa
add
hlt
mov
out
movsl
in
push
mull
add
pusha
and
test
dec
cmp
outsb
jno
jns
stos
sub
lods
and
test
mov
push
jbe
icebp
shl
mov
loope
test
mov
push
inc
mov
enter
test
add
sub
push
outsl
clc
mov
sub
stc
cli
add
test
gs
jl
out
push
out
mov
xlat
dec
or
loope
mov
loope
fbld
inc
test
dec
mov
xchg
scas
lock
and
movsl
in
nop
pop
or
loope
lock
jmp
add
movsl
cltd
popa
hlt
rcr
push
mov
call
ret
sub
les
inc
test
rorb
loopne
pop
rolb
loope
mov
mov
ja
xor
cmp
inc
xchg
and
call
cltd
inc
xchg
cmpsb
add
dec
inc
jne
leave
rcrl
mov
loope
mov
mov
pop
je,pt
in
in
popa
popa
mov
mov
mov
js
repnz
test
mov
in
loopne
mov
xchg
push
enter
xchg
sub
pusha
shll
jge
in
and
ret
loopne
adc
mov
cmc
adc
and
cltd
repz
cmp
push
test
xor
shll
movsb
mov
repnz
add
mov
xor
aad
adc
in
test
jmp
popa
orl
in
ret
or
inc
rorb
lret
inc
and
adc
repnz
and
lcall
test
loope
xor
lds
cwtl
xchg
dec
mov
enter
add
popa
mov
dec
adc
cmp
in
add
test
repnz
gs
loopne
mov
inc
call
ret
sub
loope
pop
xor
loope
mov
lea
jo
out
subb
pusha
add
shl
add
gs
mov
push
iret
test
enter
js
lock
repnz
mov
lret
gs
mov
das
rcll
scas
jb
lcall
dec
jmp
push
xor
mov
test
shlb
test
cmp
pop
call
arpl
add
cltd
inc
lock
test
loopne
aad
imul
stos
or
mov
dec
adc
cmp
adc
mov
jne
push
loope
adc
test
dec
or
popa
xchg
test
pop
test
les
mov
sbb
nop
jnp
xchg
dec
mov
enter
add
popa
mov
dec
adc
cmp
in
in
test
repnz
gs
loopne
mov
inc
call
ret
sub
push
cmpsl
push
in
jecxz,pn
sarl
test
sub
loope
loop
jl
dec
aam
mov
loope
lock
adc
cmp
ljmp
dec
loope
addr16
xchg
jne
add
gs
sbb
in
test
push
lcall
test
and
int
cmp
daa
or
loope
mov
mov
jo
out
rol
outsl
or
aad
jns
and
xchg
add
in
jo
loopne
aad
sub
push
fdivl
js
sub
test
cmp
scas
inc
xchg
cs
gs
dec
mov
vpaddsw
fs
mov
inc
and
in
and
inc
mov
pushf
aaa
xchg
inc
jno
lds
dec
cli
stc
cli
add
popa
dec
lock
inc
jno
lea
fisubs
push
fsub
shrb
sub
push
fdivl
js
sub
test
cmp
scas
inc
xchg
cs
gs
dec
mov
cmp
fs
mov
inc
and
in
and
inc
mov
pushf
aaa
xchg
inc
jno
stc
shl
testl
push
ret
or
roll
dec
aas
mov
mov
ljmp
data16
inc
xchg
test
mov
call
xor
jmp
shll
mov
push
sbb
or
mov
lods
ja
sub
push
inc
test
into
test
call
mov
jno
shrb
dec
push
loope
adc
test
testl
add
addl
mov
mov
mov
add
enter
dec
xor
cmp
rcrl
gs
test
and
clc
and
ficompl
cwtl
shlb
pusha
jne
mov
cmc
adc
icebp
cmp
fstpl
gs
push
gs
xor
stos
jl
es
push
loope
jmp
add
jb
lcall
cmp
scas
inc
xchg
cs
gs
dec
mov
xor
shlb
and
and
inc
mov
fwait
aad
cmpsb
mov
rorb
lods
in
and
inc
sti
xor
imul
call
add
pop
outsb
xor
cmc
dec
add
movsb
dec
adc
cmp
add
mov
and
push
xchg
out
and
inc
mov
jnp
inc
test
sub
hlt
xchg
ret
and
add
sub
aad
gs
loopne
lods
push
and
push
or
movsl
push
adc
movsl
adc
push
shlb
xchg
out
movsl
lods
pop
adc
call
add
movsb
test
push
and
jnp
aaa
xchg
or
add
or
and
push
pop
mov
lea
add
or
mov
and
stos
in
je
call
push
sbb
pusha
lds
gs
out
mov
fwait
nop
and
mov
cmc
adc
mov
cmc
adc
add
push
std
dec
test
lret
fst
mov
mov
test
in
and
in
in
addl
mov
sub
test
cltd
add
dec
sahf
in
add
rcrl
and
dec
and
sub
test
insl
rcrl
inc
and
lds
es
testl
test
les
test
in
and
lds
inc
jge
rol
lock
addl
movsl
cli
add
movsl
test
lds
inc
imul
adc
call
cmpb
sti
mov
xchg
sub
pusha
shll
and
sbb
mov
inc
gs
sub
add
test
orl
test
repz
movsb
inc
mov
mov
fildl
popa
jne
add
ror
in
insb
pop
test
add
xor
les
sub
inc
mov
inc
push
jne
mov
cmc
adc
mov
cmc
adc
add
mov
jp
lcall
pop
lcall
lock
clc
repnz
mov
lret
gs
mov
das
rcll
scas
jb
lcall
dec
stc
mov
in
push
xor
mov
test
shlb
test
pusha
sbb
xlat
or
lret
add
in
out
bound
mov
insl
lock
clc
repnz
mov
lret
gs
mov
das
rcll
scas
jb
lcall
dec
xorl
inc
mov
test
shlb
test
pusha
sbb
xlat
or
and
cmp
jmp
js
sub
test
cmp
scas
inc
xchg
cs
gs
dec
mov
vpmullw
inc
fs
mov
inc
and
in
and
inc
mov
fwait
mov
popa
lea
mov
sub
insb
shll
movsl
lds
addl
xor
mov
in
popa
popa
cltd
test
sbb
cltd
inc
gs
sbb
stc
pusha
sbb
shlb
and
cltd
cli
inc
and
mulb
mov
jp
movsl
test
outsl
and
les
adc
and
test
mov
in
add
popf
inc
sti
add
dec
mov
imul
mov
add
add
and
rclb
mov
jb
pop
gs
call
pop
sbbl
test
test
ljmp
inc
iret
test
lock
inc
mov
mov
mov
and
test
inc
call
orb
test
mov
mov
mov
lods
push
sbb
inc
loopne
mov
mov
loop
and
adc
call
int
add
loope
cltd
lcall
inc
gs
rol
outsb
cltd
inc
jns
sbb
cmc
adc
inc
inc
test
ljmp
sar
inc
js
sub
test
cmp
scas
inc
mov
cs
pextrw
ss
fs
mov
inc
and
in
and
inc
mov
rol
cmp
rcll
inc
inc
jno
jo
mov
adc
loope
outsl
inc
ret
or
rcl
dec
push
loopne
aad
pop
mov
mov
cmp
jae
add
movsl
cmp
clc
ljmp
sub
mov
inc
das
rorl
scas
push
lcall
dec
cmp
xor
mov
test
shlb
test
pusha
sbb
xlat
es
loope
mov
rolb
stos
out
in
es
js
xchg
or
in
test
lods
add
popa
and
inc
or
loope
mov
push
dec
mov
push
inc
add
xor
cmpsb
cmp
fneni(8087
nop
fs
mov
add
push
mov
iret
popa
scas
loop
or
cmp
in
sub
test
ljmp
mov
inc
call
ret
sub
shlb
mov
in
rorb
test
or
mov
sbb
xor
sbb
movsl
dec
lods
dec
mov
or
and
dec
or
movsl
push
adc
movsl
adc
push
lret
inc
and
lods
sahf
adc
inc
call
add
movsb
test
push
and
jnp
aaa
xchg
inc
gs
orb
loopne
test
enter
insb
fcoms
inc
or
into
mov
call
cltd
rcrl
scas
push
in
or
loope
adc
mov
popa
popa
cltd
test
popa
test
enter
xor
or
enter
dec
push
and
mov
insl
rcrl
sub
movsl
sub
ljmp
jp
lcall
movsl
test
enter
in
adc
push
ljmp
psllw
shlb
sub
out
ffree
in
loopne
loope
in
push
inc
imul
ja
addl
lds
inc
iret
test
or
sbb
and
mov
dec
push
and
dec
xchg
mov
in
loope
call
in
or
test
and
cli
sbb
cmp
sub
add
test
cmpl
fnsave
push
jbe
sub
movsb
inc
mov
mov
xchg
sub
push
insl
inc
shl
add
add
gs
jp
and
test
in
cwtl
and
aad
adc
sbb
fmull
cli
mov
inc
and
add
adc
repnz
mov
lret
gs
mov
das
rcll
scas
jb
lcall
dec
inc
mov
in
push
xor
mov
test
shlb
test
pusha
sbb
xlat
es
loope
mov
inc
xchg
sarb
add
adc
repnz
mov
lret
gs
mov
das
rcll
scas
jb
lcall
dec
jmp
push
xor
mov
test
shlb
test
pusha
sbb
xlat
or
sbb
push
add
pop
adc
test
adc
sbb
les
mov
cs
inc
dec
push
mov
in
cmp
pop
std
add
sbb
mov
notb
cmp
inc
inc
dec
mov
adc
test
cli
mov
mov
push
xor
mov
in
or
test
and
es
fisubl
xchg
aad
cltd
inc
dec
repnz
scas
lcall
in
test
and
in
mov
lds
jnp
mov
fisubl
insl
mov
repnz
cs
gs
out
mov
jae
test
and
stos
mov
inc
and
sbb
lcall
cmp
scas
inc
outsl
cs
gs
dec
mov
vpcmpeqw
inc
or
shlb
clc
ret
adc
aaa
inc
test
and
cmp
lds
or
movsl
push
adc
movsl
adc
or
test
xlat
das
in
push
sub
lret
gs
loopne
mov
or
movsl
push
adc
lock
out
mov
ja
test
enter
add
call
xor
test
ret
movsl
lds
fsubrs
shrb
cs
gs
dec
mov
or
stos
mov
inc
and
push
fsts
loopne
xchg
add
add
in
jo
sbb
movsl
adc
push
dec
cmpsb
or
test
xlat
das
in
mov
test
lret
gs
loopne
mov
or
movsl
push
adc
movsl
adc
push
stos
mov
inc
and
lods
es
xchg
fisubl
xorb
stos
add
cmp
lds
sbb
movsl
adc
push
stos
mov
inc
and
lods
out
call
xchg
fisubl
add
add
adc
dec
icebp
sar
lret
gs
lock
repnz
inc
das
shr
scas
dec
push
lcall
dec
dec
pop
in
sub
mov
andb
in
call
adc
or
pop
movsl
test
icebp
push
test
test
das
xchg
mov
jne
test
enter
add
loop
xor
pusha
sbb
pusha
jno
sti
inc
test
test
scas
push
outsb
or
cmc
dec
add
movsb
dec
ljmp
shrl
sbb
pop
sub
fadds
jne
mov
cmc
adc
pop
dec
jbe
test
scas
movsl
test
shlb
pop
movsl
test
int3
dec
mov
test
inc
iret
lds
jp
movsl
push
in
insl
test
mov
push
and
fcompl
loopne
lcall
mov
insl
es
test
js
add
add
jmp
lock
and
lds
push
repnz
and
add
jnp
movsl
dec
xor
repnz
sti
inc
and
add
jnp
movsl
popf
out
and
fwait
in
outsb
push
xor
adc
rorb
xchg
sub
push
leave
pop
movsl
test
adc
sbb
out
shlb
and
fwait
in
outsb
push
cmp
adc
shl
fwait
in
outsb
push
jns
movsl
test
adc
sarb
and
lcall
movsl
test
adc
sbb
out
rolb
mov
in
loope
movsl
test
pop
gs
insl
test
popf
movsl
test
add
mov
cmc
adc
add
add
mov
add
into
mov
cmpsb
add
test
mov
xchg
inc
push
push
cli
mov
jns
in
cmp
mov
aad
xchg
dec
cmp
cmp
and
mov
sub
pop
rcl
adc
mov
cmc
adc
and
mov
adc
cli
inc
test
cmp
xor
xchg
in
and
les
and
rorb
cmp
push
cmp
in
mov
push
add
and
and
test
inc
dec
das
popf
in
loope
loop
xor
add
pop
jne
sub
xchg
popa
int
sbb
mov
in
mov
adc
inc
and
das
loopne
popl
push
in
cmp
les
test
mov
in
push
test
aaa
pop
in
scas
cmp
test
sti
inc
and
ror
cmp
insb
and
js
movsb
fcmovnbe
cmp
xor
aad
adc
inc
and
add
xchg
lds
test
ret
inc
and
add
xchg
lds
test
ret
inc
and
add
xchg
lds
or
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
test
inc
outsl
mov
inc
xor
inc
test
inc
gs
cmp
test
inc
gs
in
push
inc
adc
inc
test
inc
gs
and
and
in
push
inc
add
inc
test
inc
gs
vpaddsw
and
in
push
inc
shll
test
inc
gs
xlat
and
and
and
in
sub
add
ljmp
fildll
imul
in
and
in
daa
inc
gs
daa
inc
gs
cmpsl
in
daa
inc
gs
cmpsl
in
and
mov
inc
gs
mov
inc
mull
inc
adc
inc
cmp
inc
gs
mov
inc
gs
in
and
xchg
mov
inc
gs
and
inc
gs
in
and
pop
in
and
push
mov
inc
gs
in
and
out
in
and
mov
and
lds
inc
gs
in
and
aaa
mov
inc
gs
mov
inc
gs
inc
lea
inc
gs
mov
inc
gs
in
and
jecxz
in
and
or
and
push
mov
inc
gs
mov
inc
gs
cmpsl
in
daa
inc
mov
daa
inc
mov
inc
gs
cmpsb
in
es
gs
in
es
gs
cmpsb
in
es
gs
es
gs
in
es
gs
mov
inc
test
inc
in
movsl
lds
and
vpsrlq
inc
gs
in
cs
test
inc
gs
in
and
test
inc
xchg
inc
gs
scas
in
cs
gs
in
cs
gs
in
sub
in
sub
in
sub
in
sub
in
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
lds
and
cs
test
mov
out
or
mov
negl
out
in
es
adc
mov
jo
and
push
sub
es
popa
mov
out
adc
adc
push
dec
bound
leave
loop
es
bound
gs
cmpsl
xor
mov
jmp
andb
jae
xlat
icebp
adc
sub
adc
test
shl
loopne
push
dec
inc
and
push
push
xchg
mov
ret
or
gs
or
mul
add
in
and
jne
inc
gs
imul
gs
cmpsb
or
ret
sub
dec
pusha
jmp
subb
dec
andb
pusha
and
push
ja
mov
lret
movsl
outsl
out
mov
dec
lahf
addb
mov
je
and
push
and
xor
lock
cmpsb
repz
push
dec
xchg
mov
inc
xchg
mov
lret
test
rol
pop
loopne
dec
xchg
mov
inc
xchg
mov
lret
test
shll
imul
inc
dec
addl
xchg
mov
lods
out
and
and
push
and
xor
lock
and
test
or
xor
notl
add
xchg
mov
in
daa
mov
adc
es
xlat
notl
daa
test
dec
xchg
inc
gs
movsl
add
orb
sahf
and
pop
inc
popa
xchg
mov
ja
and
push
push
bound
add
and
push
push
sahf
mov
ret
ja,pn
adc
pop
ds
in
and
xor
lock
scas
icebp
ret
xor
push
outsb
mov
bound
and
jo
shll
add
xor
mov
in
es
adc
push
dec
xchg
subb
xchg
subb
lret
daa
mov
je
nop
scas
lret
in
or
push
addr16
mov
in
mov
push
inc
addw
xor
adc
cld
movsl
add
adc
ret
push
sub
and
sub
xchg
scas
ret
and
outsb
mov
jo
mov
adc
es
adc
cmpsl
repnz
adc
outsb
mov
dec
adc
out
add
and
scas
out
mov
icebp
loop
push
je
adc
lret
je
mov
xor
mov
jmp
and
push
jno
xchg
inc
add
push
push
push
outsb
sbb
jecxz
cs
bound
shlb
rol
ret
push
sub
xchg
cmc
out
or
add
add
insl
mov
loope
push
dec
xchg
sbb
test
xlat
icebp
adc
sub
mov
ret
add
and
push
push
insl
mov
loope
push
dec
xchg
sbb
test
shl
ljmp
roll
aad
out
add
jno
insl
cmpsb
lret
loope
and
inc
and
push
inc
ja
stos
hlt
adc
xor
andb
je
mov
inc
bound
add
xchg
ret
push
inc
bound
jp
inc
mov
jno
mov
in
mov
jo
arpl
in
es
adc
pop
dec
xchg
pusha
aam
loop
sub
cmp
scas
lret
out
and
mov
ret
es
adc
and
jo
stos
loop
push
in
es
adc
and
jo
mov
add
aaa
and
xorb
imul
aam
test
xlat
icebp
adc
sub
imul
mov
pop
xor
imul
in
daa
mov
loop
pop
and
and
and
push
sub
add
mov
rclb
aaa
cs
insb
mov
gs
movsl
add
xchg
ret
push
inc
addw
or
xchg
pushf
scas
lret
loope
pop
jo
mov
ret
push
ja
inc
lods
movsl
add
or
add
in
es
adc
cs
bound
icebp
pop
push
daa
jb
adc
test
mov
jae
mov
cmpsb
test
mov
dec
imul
scas
ret
and
outsb
mov
inc
xchg
arpl
dec
bound
push
and
mov
in
daa
mov
ljmp
ret
push
ja
inc
gs
cmp
popa
addb
dec
mov
icebp
out
out
jno
and
sub
addr16
loop
push
pop
outsb
andl
ret
push
and
movsl
lods
out
mov
lret
ret
push
sub
and
push
inc
mov
in
es
adc
es
inc
mov
ret
or
ja
subb
mov
sub
scas
lret
adc
push
in
daa
fdiv
adc
mov
out
adc
out
and
xchg
mov
add
ja
shr
es
in
loopne
je
orb
ja
lods
aam
add
sub
cmp
movsl
das
out
subb
mov
ret
mov
dec
adc
adc
and
mov
jno
mov
gs
cmpsb
xor
bound
and
xchg
aam
loop
es
in
push
push
inc
xchg
mov
and
popf
inc
gs
mov
icebp
icebp
xor
inc
imul
inc
insb
adc
and
mov
jno
popa
mov
jne
mov
mov
in
mov
out
xor
inc
imul
sar
roll
inc
xchg
mov
icebp
adc
vpcmpgtb
mov
in
loopne
inc
data16
test
add
and
sub
bound
and
popf
inc
gs
loope
es
nop
mov
add
dec
add
jmp
mov
sub
mov
shl
jmp
imul
xchg
loope
and
adc
int
es
bound
push
in
mov
ret
and
mov
negl
adc
jno
mov
cmpsb
test
stos
rol
push
jo
xchg
xlat
leave
rolb
dec
bound
sub
sbb
repnz
sub
data16
sahf
inc
gs
add
addl
loopne
and
imul
in
mov
ret
and
mov
lock
es
popa
mov
dec
xchg
adc
loop
aaa
inc
addw
and
ss
mov
scas
jmp
push
es
xor
jo
stos
shl
push
jb
mov
cmpsb
test
shl
hlt
xor
repnz
push
es
or
xchg
mov
dec
bound
aaa
in
mov
ret
and
xchg
inc
imul
aam
into
or
xchg
mov
dec
inc
and
push
inc
xchg
mov
push
xchg
mov
hlt
jmp
and
push
dec
bound
pop
and
cmpsb
cmpsb
adc
cs
xchg
in
mov
ret
and
mov
shr
push
dec
inc
and
or
jno
mov
sub
into
lret
and
and
and
mov
lret
in
jecxz
inc
bound
gs
cmpsb
xor
xorl
gs
cmpsb
xor
addl
aad
pop
xor
sub
cmp
push
test
dec
add
pop
push
inc
outsb
mov
dec
bound
cs
insb
and
push
dec
sub
and
and
cs
lods
test
inc
xchg
inc
andl
in
das
inc
gs
mov
inc
arpl
inc
gs
in
das
inc
gs
scas
in
das
inc
test
inc
gs
mov
not
lret
adc
ret
push
dec
lahf
mov
movsl
lds
push
push
inc
popf
mov
rcll
scas
jmp
push
inc
imul
xlat
enter
inc
inc
jno
in
push
and
test
cmc
mov
mull
shll
mov
divl
mov
lock
sub
lock
mov
icebp
inc
xor
icebp
xchg
xor
jno
mov
icebp
lds
or
mov
repnz
xor
test
imul
xor
cld
sarl
jne
mov
std
cmp
jl
mov
push
jl
mov
dec
jl
mov
fnstcw
jne
fnstsw
jl
mov
dec
jge
mov
mov
mov
mov
std
xchg
cmp
jge
mov
mov
dec
jle
mov
cmc
jle
mov
sbb
jmp
mov
xchg
jg
mov
lea
mov
adc
inc
add
test
and
adc
fnstcw
add
dec
aas
xor
jmp
aas
and
mov
push
jg
mov
inc
jg
mov
jno
mov
aas
insl
jg
mov
popf
jg
mov
lea
mov
mov
jmp
lods
jg
mov
fnstsw
mov
int
or
std
jg
mov
in
jg
mov
sbb
clc
sarl
js
mov
cmp
clc
loope
sub
clc
adc
pop
js
mov
dec
js
mov
jge
mov
cmp
test
xor
test
gs
imul
sub
mov
negb
mov
testb
std
testb
add
jno
mov
icebp
movsl
xor
jno
mov
repnz
mov
sti
cltd
cmp
jnp
mov
loope
sub
add
mov
stc
and
imul
in
and
fs
and
fs
movsb
xor
jns
mov
in
and
or
sub
and
cltd
loopne
and
icebp
xor
test
jne
mov
cmc
xor
jmp
jne
mov
cmc
jno
mov
cmc
xchg
xor
dec
cmc
mov
stc
jne
mov
cmc
shll
mov
icebp
cmp
mov
notb
ss
jbe
mov
divb
ss
mov
ss
jbe
mov
divb
mov
notb
mov
divb
mov
not
sbb
mov
div
aaa
cmp
mov
notl
aaa
pop
ja
mov
divl
aaa
jns
mov
aaa
cltd
ja
mov
divl
mov
notl
mov
divl
mov
not
aaa
sbb
mov
lock
xor
jo
mov
lock
pop
jo
mov
lock
jns
mov
xor
lock
mov
lock
xor
jo
mov
lock
stc
jo
mov
lock
sbb
mov
icebp
icebp
xor
jno
mov
icebp
adc
pop
jno
mov
icebp
xor
jns
mov
xor
icebp
jno
mov
icebp
xchg
xor
jno
mov
icebp
mov
stc
jno
mov
icebp
shll
sbb
mov
repnz
xor
jb
mov
repnz
pop
jb
mov
repnz
jns
mov
xor
bnd
mov
repnz
xor
jb
mov
repnz
stc
jb
mov
repnz
sbb
mov
repz
xor
jae
mov
repz
pop
jae
mov
repz
jns
mov
xor
repz
mov
repz
xor
jae
mov
repz
mov
repz
add
mov
stc
cmp
jl
mov
inc
jl
mov
popa
jl
mov
cmpl
mov
cld
cltd
cmp
jl
mov
loope
sub
jge
mov
and
mov
inc
jge
mov
popa
jge
mov
cmpl
cmp
push
std
cltd
cmp
jno
mov
mov
add
mov
and
mov
inc
jle
mov
popa
jle
mov
cmpl
mov
cltd
sarl
jno
mov
mov
add
mov
and
mov
inc
jg
mov
popa
jg
mov
cmpl
aas
mov
lcall
mov
loope
sub
add
mov
and
mov
inc
js
mov
popa
js
mov
cmpl
cmp
clc
cltd
cmp
js
mov
loope
sub
add
mov
and
mov
inc
jns
mov
popa
jns
mov
cmpl
cmp
stc
cltd
cmp
jns
mov
loope
sub
add
mov
and
mov
inc
jp
mov
popa
jp
mov
cmpl
cmp
cli
cltd
cmp
jp
mov
loope
sub
add
mov
and
mov
inc
jnp
mov
popa
jnp
mov
cmpl
cmp
in
and
fs
jg
lds
and
repnz
aad
push
xchg
mov
testb
insl
not
ss
ja
mov
testl
push
negl
mov
mull
mov
lock
xor
xorl
cmp
fdivl
cmp
mov
icebp
xor
repnz
jns
mov
xor
jb
mov
repz
xor
repz
loop
push
mov
cld
lock
jl
mov
int3
jl
mov
inc
jge
mov
mov
std
add
mov
jmp
dec
mov
inc
jg
mov
pop
jg
mov
cmpb
inc
clc
mov
adc
dec
mov
imul
cmp
jp
mov
cmpb
sub
jnp
movsb
cld
in
and
and
jns
add
cmc
mov
mov
testb
lahf
mov
lock
xor
icebp
sbb
ja
iret
mov
icebp
xor
jb
mov
repnz
mov
les
ja
jecxz
sub
mov
in
jge
leave
call
jg
mov
sbb
mov
xchg
jp
mov
xor
sti
out
cmp
jnp
mov
jbe
mov
cmp
sti
lods
cmp
mov
out
jo
int
xor
and
sbb
data16
fnsave
repz
mov
idivl
xor
hlt
mov
icebp
inc
xor
icebp
movsb
xor
jno
mov
repnz
inc
jb
mov
repnz
xor
xacquire
jmp
repz
xor
jae
mov
repz
fs
inc
jl
mov
xchg
jl
mov
mov
cld
scas
cmp
jl
mov
dec
jge
mov
bound
mov
push
jle
mov
inc
jle
mov
std
jle
mov
popf
jg
mov
mov
decl
mov
inc
js
mov
xchg
js
mov
sti
js
mov
ss
mov
pop
jns
mov
push
fnstsw
mov
stc
mov
mov
inc
jp
mov
cltd
jp
mov
pop
jp
mov
cmp
mov
dec
jnp
mov
clc
jnp
movsb
shl
pop
and
fs
movsb
adc
pop
and
fs
movsb
inc
in
gs
movsl
pushl
pop
xor
pop
cmc
inc
xor
idivb
ss
jbe
mov
div
aaa
arpl
mov
idivl
mov
lock
xor
lock
add
mov
icebp
sub
fwait
jno
mov
icebp
cwtl
xor
jno
mov
repnz
lds
mov
repz
xor
imul
jae
mov
repz
pushl
mov
cld
std
cmp
jl
mov
cmpsb
jl
mov
dec
jge
mov
stc
jge
mov
xchg
jle
mov
stos
jle
mov
out
jg
mov
inc
js
mov
stos
js
mov
in
cs
push
jns
mov
lea
mov
aaa
jp
mov
imul
push
cli
test
leave
jp
mov
pop
jnp
mov
mov
mov
idivb
mov
xor
xchg
movsb
fucom
aas
and
fs
movsb
cmp
pusha
and
and
mov
add
cmc
push
xor
lcall
mov
mulb
clc
jbe
mov
mull
aaa
outsb
ja
mov
divl
mov
lock
fbstp
in
jo
mov
icebp
jne
movsb
jno
mov
icebp
mov
mov
repnz
cwtl
jb
mov
repnz
xor
cld
adc
jge
mov
imul
mov
jg
mov
js
mov
or
popa
mov
nop
jns
mov
sarb
mov
ss
mov
bound
mov
aad
and
cmp
jnp
mov
mov
sti
fnstsw
ja
mov
and
adc
and
lock
xchg
cmc
pushl
pop
jbe
mov
testb
jbe
mov
divb
mov
testl
mov
imul
xor
xchg
popa
jo
mov
lock
in
pop
mov
icebp
and
push
add
inc
icebp
scas
xor
jb
mov
repnz
into
jb
mov
repnz
xor
shll
jl,pt
mov
dec
jl
mov
movsb
jl
mov
add
mov
cmpsb
jle
mov
pushf
jg
mov
mov
incl
mov
sahf
js
mov
fdivrl
mov
adc
stc
leave
cmp
jns
mov
in
inc
movsb
mov
fs
out
inc
and
sbb
fs
xor
add
cmc
dec
xor
cwtl
cmc
in
je
shlb
xor
divl
mov
lock
and
mov
icebp
xor
addr16
mov
icebp
jle
shlb
mov
icebp
xor
adc
push
mov
repz
dec
jae
mov
repz
xor
jae
mov
cld
push
cmp
jl
mov
nop
jge
mov
mov
mov
sarl
mov
lock
mov
ljmp
ds
dec
mov
es
mov
dec
jle
mov
jle
mov
and
jmp
jg
mov
mov
clc
lods
cmp
js
mov
dec
jns
mov
fidivrl
mov
inc
jp
mov
push
jnp
mov
pop
jnp
movsb
mov
fs
movsb
jbe
lds
test
leave
mov
cmc
mov
mov
jbe
mov
mulb
fidivl
mov
divl
aaa
outsb
ja
mov
imull
in
ja
mov
lock
xor
jo
mov
lock
xor
jo
mov
icebp
xor
mov
mov
repnz
sub
mov
repnz
xor
repnz
xor
repz
xor
repz
out
push
mov
cld
sbb
jl
mov
aas
jge
mov
movsb
jge
mov
push
call
mov
sarb
mov
in
sub
mov
into
js
mov
inc
jns
mov
bnd
mov
sbb
mov
and
mov
jp
mov
push
jnp
mov
mov
out
xchg
leave
and
fs
std
in
and
fs
movsb
sub
test
movsl
mov
mov
cmc
out
push
jne
mov
cmc
sub
or
mov
icebp
ja
fdivl
mov
icebp
in
push
jb
mov
repz
in
jae
mov
jns
xor
lret
cmp
mov
mov
cld
jle
mov
call
fidivrs
add
inc
mov
xor
mov
sub
push
aas
pop
jg
mov
lds
mov
and
popf
mov
popa
js
mov
or
mov
nop
jns
mov
std
jns
mov
jnp
fdivrs
cmpsb
jp
mov
adc
mov
xchg
jnp
mov
inc
fs
and
fs
pop
in
and
fs
inc
test
jb
into
cmc
sub
mov
cmc
mov
outsl
cmc
les
fdiv
cmp
xchg
jbe
mov
mulb
test
ja
mov
imull
aaa
xchg
ja
mov
testl
xor
js
push
lock
xor
lock
mov
lock
xor
jo
mov
icebp
repz
jno
mov
icebp
add
inc
jno
mov
icebp
jl
mov
std
loope
pop
jle
mov
arpl
mov
mov
and
add
mov
mov
std
mov
icebp
jg
mov
cmp
lods
mov
js
mov
call
stc
das
cmp
stc
mov
mov
xor
mov
ja
mov
mov
cli
fstpt
jle
sar
or
push
sarb
pop
jnp
movsb
mov
movsb
nop
in
and
and
pop
out
and
or
jmp
fs
inc
cmc
hlt
ss
jbe
mov
testb
mov
mov
mul
aaa
push
ja
mov
divl
aaa
shlb
mov
divl
mov
lock
shll
mov
lock
mov
icebp
inc
xor
icebp
mov
nop
jb
mov
repnz
xor
repnz
mov
bnd
xor
jae
mov
repz
xor
rep
xor
jae
mov
repz
xor
jae
mov
repz
cmp
jl
mov
inc
jl
mov
xchg
jl
mov
fdivrs
fs
mov
mov
daa
jge
mov
jg
scas
mov
mov
std
cmpb
std
ret
jle
mov
jno
mov
cmpl
and
outsl
ds
adc
ret
jle
mov
sti
jle
mov
sbb
mov
xor
mov
sub
mov
inc
jg
mov
js
cmpsb
mov
nop
jg
mov
lods
jg
mov
leave
jg
mov
cmp
mov
inc
js
mov
mov
clc
mov
mov
adc
mov
or
test
inc
test
inc
test
arpl
add
scas
xor
add
arpl
sub
out
xor
push
and
and
mov
arpl
test
cli
xchg
add
add
orl
mov
incl
ret
mov
add
inc
xor
add
add
inc
incl
add
inc
mov
incl
cmovo
test
inc
lods
js
fbstp
pop
js
fdivrs
test
lret
push
lret
add
xchg
cli
mov
push
lret
add
dec
push
lret
xchg
dec
mov
push
add
sbb
lret
repz
mov
lret
xrelease
inc
add
push
hlt
mov
inc
cmp
xor
sub
mov
push
js
test
inc
adc
jb
call
add
add
mov
pop
add
add
add
call
jmp
incl
add
cmp
inc
add
outsl
jge
jo
adc
inc
jbe
jo
lret
and
push
add
push
add
push
add
add
sarb
das
mov
dec
and
add
outsl
mov
mov
add
add
inc
sar
incl
add
inc
xchg
incl
push
add
repz
inc
add
fs
or
inc
pushf
jl
out
call
test
lret
incl
add
inc
push
jge
pop
mov
push
sub
push
jbe
pop
das
ja
fldt
lret
in
xchg
filds
jns
push
or
fs
cmc
push
incl
add
xchg
fs
das
cld
mov
jbe
adc
xchg
js
orb
roll
add
imul
je
lret
cmpb
lret
orl
mov
mov
jl
lret
push
lret
add
lret
popa
div
mov
shlb
jne
dec
jne
or
xchg
stc
mov
divl
ror
mov
inc
fldl
ja
dec
mov
push
shlb
mov
jne
push
mov
add
add
dec
jns
mov
ja
fmull
cmc
cmp
pushl
mov
js
xor
mov
ja
dec
jbe
xchg
mov
jbe
cmpsl
add
add
pop
mov
les
add
mov
sbb
mov
mov
inc
add
push
push
lret
test
lret
das
or
test
push
lret
lock
cmp
jbe
xchg
mov
cmp
mov
jbe
push
mov
push
das
and
jae
jl
lret
add
in
test
lret
xor
adc
push
lret
hlt
js
jl
test
push
lret
add
xchg
cli
mov
push
lret
add
dec
push
lret
lods
jae
test
lret
sbb
call
add
ja
mov
push
lret
mov
jbe
mov
inc
inc
ret
incl
add
test
lret
push
lret
add
jne
xlat
lret
mov
push
ja
inc
push
lret
inc
add
xlat
lret
mov
jl
mov
push
cli
dec
idivl
testl
mov
pop
add
add
dec
mov
cli
jbe
push
push
lret
dec
popa
jne
mov
jbe
push
mov
push
incb
mov
aam
jnp
inc
or
out
jl
lret
push
lret
fnsave
jbe
jnp
jl
lret
add
jo
iret
jge
je
adc
orb
std
xchg
in
mov
jle
add
mov
lret
aas
std
ja
out
mov
push
jbe
fmull
fstpt
lock
cmp
jbe
fmull
fs
je
cmp
add
ja
inc
add
stc
xorl
js
lods
xor
xor
push
hlt
dec
and
pushl
mov
mov
push
lret
lret
lret
orb
add
lret
mov
mov
lret
call
mov
test
lret
cmp
mov
jbe
cmp
push
lret
les
or
push
out
jbe
ja
inc
fs
lock
stc
mov
jbe
lock
push
lret
mov
mov
addb
sti
jnp
add
add
andl
lret
incl
ja
sub
andb
add
jbe
sub
mov
dec
popa
jne
mov
jae
push
lret
push
xor
js
daa
mov
push
shll
sub
faddl
clc
ja
stos
lret
mov
push
lret
add
das
push
lret
jl
mov
push
das
jne
mov
mov
xor
sub
push
lret
mov
mov
call
mov
push
lret
mov
mov
mov
jne
mov
mov
add
jns
sub
arpl
mov
add
fcmovne
mov
push
jbe
js
mov
xchg
lahf
push
lret
enter
inc
jbe
enter
cmp
cmpsl
pop
or
imul
fnsave
rcrl
andl
xchg
fmull
mov
scas
cmp
shrb
sarb
and
js
mov
mov
mov
add
add
and
add
add
pop
and
add
add
jno
add
andl
add
popf
and
add
add
add
and
add
add
adc
add
lods
and
add
add
add
and
add
add
pop
and
add
add
jno
add
andl
add
popf
and
add
add
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
ret
add
jb
jne
insb
push
jb
je
arpl
xchg
add
gs
add
gs
js
add
inc
gs
imul
je
add
add
jb
insl
jo
inc
add
xor
inc
jb
popa
je
inc
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
add
test
add
add
pop
test
lea
jmp
ror
sbb
neg
cmc
push
pop
xor
je
mov
mov
push
pop
cmp
mov
mov
mov
bsf
dec
call
pop
jns
jmp
sub
rcr
shl
mov
adc
rol
xor
call
pop
test
xchg
push
pop
shr
sub
xchg
mov
rcl
test
jmp
rcr
jmp
jno
xchg
push
pop
push
pop
cmp
stc
jb
test
lea
xor
nop
test
cmc
call
cmp
nop
cmc
repnz
pop
dec
mov
xor
neg
xchg
sub
movsbl
dec
add
dec
not
cmc
inc
mov
nop
shr
dec
add
xor
add
add
dec
mov
xor
test
inc
cmc
nop
sub
dec
add
clc
mov
cmp
jae
jne
jmp
jmp
dec
sub
xor
mov
mov
xchg
cmc
repz
mov
inc
add
dec
repnz
inc
dec
push
jo
dec
call
dec
mov
inc
pop
not
dec
dec
pop
bnd
