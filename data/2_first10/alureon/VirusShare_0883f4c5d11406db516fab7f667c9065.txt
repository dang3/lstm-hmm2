neg
lea
and
adc
lea
rcl
shr
mov
mov
mov
ror
neg
push
call
jmp
and
not
shrl
mov
xor
mov
rcl
mov
neg
rol
xor
jmp
mov
lea
xor
mov
xor
lea
mov
adc
rol
pop
pop
pop
jmp
mov
xchg
shr
neg
xchg
mov
jmp
mov
mov
mov
lea
mov
popl
mov
lea
xchg
xor
rcl
add
jmp
add
mov
movl
rcr
xor
shl
movl
lea
ror
jmp
and
rol
adc
xor
not
and
xor
mov
mov
not
add
jmp
not
shr
not
rcl
mov
xor
mov
ret
not
add
xor
jmp
rcl
xor
lea
push
push
pushl
pushl
call
jmp
leave
call
call
mov
lea
jmp
not
xor
xor
and
and
xor
xchg
jmp
shr
mov
mov
not
mov
mov
lea
decl
jne
lea
xor
neg
mov
not
lea
jmp
push
mov
sub
push
push
push
and
xor
and
xor
mov
lea
push
jmp
mov
lea
xor
xor
xor
mov
xor
push
rol
mov
lea
mov
neg
jmp
not
not
mov
mov
lea
pop
and
shl
jmp
xor
not
mov
mov
and
shr
shr
lea
neg
neg
mov
rcl
jmp
neg
mov
ror
xor
mov
xor
and
rol
xchg
xor
mov
mov
shr
shr
rcr
jmp
add
lea
not
mov
lea
mov
mov
and
push
call
push
jmp
cmp
je
lea
adc
neg
adc
mov
shl
lea
cmp
je
xor
neg
mov
xor
jmp
insl
xchg
cli
push
xchg
mov
dec
and
inc
pushf
out
push
out
sub
adc
cmp
out
rcrl
cmpsl
push
stos
mov
scas
pop
push
in
push
stos
and
nop
arpl
leave
pushf
xchg
cmpsl
add
fbld
popa
ret
add
test
mov
inc
es
lcall
jo
inc
andl
sub
or
loopne
push
cltd
xchg
and
repnz
mov
jbe
cwtl
loop
xchg
and
jne
xchg
jae
sbb
mov
nop
and
outsb
jmp
cld
push
sub
mov
pop
add
daa
mov
inc
pop
sarb
fs
xchg
popa
rcrl
rcrb
push
pop
push
repz
aad
xchg
xchg
and
cmp
stos
lcall
arpl
push
dec
out
les
adc
sbb
jbe
je
fwait
and
and
push
sbb
mov
call
fs
push
out
lods
ficoms
imul
mov
gs
nop
push
je
js
stos
lcall
mov
in
jl
and
xchg
loope
fcompl
inc
out
xchg
xchg
push
repz
push
leave
mov
xchg
and
or
xchg
xchg
and
push
loope
lcall
and
xchg
mov
arpl
xchg
xchg
lret
inc
leave
flds
imul
mov
xchg
pop
out
xchg
loope
outsl
push
push
cwtl
xchg
shll
pop
push
xchg
out
ret
les
mov
sbb
cmp
rolb
pusha
pop
jp
ficoms
xchg
or
ficomps
mov
test
mov
inc
es
lcall
pusha
repnz
stos
pushf
mov
pop
imul
lods
fistpll
xchg
fcmove
push
sbb
xchg
and
adc
shlb
mov
and
fisttpll
push
scas
cld
xchg
adc
xchg
ret
dec
out
cld
fsubrs
popf
jp
adc
test
push
shlb
fs
xchg
inc
dec
popa
test
repz
daa
inc
cmp
xchg
insl
xchg
fisttpll
inc
fcoml
imul
loopne
fisubl
out
xchg
insl
xchg
aad
shlb
test
cli
adc
push
fisubs
data16
fwait
push
or
xchg
xchg
stos
pop
ret
dec
push
pop
test
scas
xchg
popf
movsb
stc
xchg
xchg
and
imul
stos
mov
fwait
pop
and
xchg
xchg
stos
mov
mov
scas
mov
stos
lods
mov
xchg
jae
xchg
fistpl
mov
data16
rcr
sahf
les
out
mov
sbb
imul
jmp
sbb
in
fisubrl
test
and
popf
xchg
pushf
sbbb
icebp
mov
jo
jmp
sbb
pop
rcrl
cmpsl
xchg
pop
aas
mov
loopne
xchg
mov
outsl
lcall
in
sub
lcall
js
pop
push
or
cld
test
jp
adc
stos
adc
stos
je
xchg
and
xchg
iret
sub
sub
loopne
and
icebp
adc
pop
cmp
adc
cli
lods
push
push
lods
leave
jo
insl
fisubs
pop
lcall
mov
stos
sbb
lcall
bound
popf
xchg
xchg
fs
shlb
cli
fdivp
call
insl
fidivs
push
xchg
dec
pop
sub
and
ret
cs
aaa
out
out
mov
out
xchg
out
fs
and
and
pop
lods
and
pop
jnp
jge,pt
push
inc
cmp
mov
pushf
mov
loopne
xchg
and
lods
jo
rcrl
and
xchg
adc
pop
out
stos
fs
xchg
and
ja
stos
pop
push
xchg
and
xchg
out
ficoml
and
fsubp
cs
pop
jbe
ficoms
pop
fsubl
inc
sbb
xchg
and
pop
les
sub
sbb
fs
push
and
xchg
xchg
push
out
in
in
out
inc
lahf
push
push
call
xchg
dec
out
imul
adc
add
xor
out
xchg
xchg
stos
scas
cwtl
sbb
pop
fidivrl
rcrl
fs
stos
imul
mov
lret
leave
xchg
inc
cmpsl
push
jecxz
xchg
clc
and
jl
fstl
imul
mov
stos
and
imul
sub
adcl
insb
xchg
xchg
out
mov
out
fcoms
mov
lcall
adcb
orw
and
int
xchg
xchg
dec
xor
psrad
push
and
loopne
jmp
jmp
mov
test
test
lods
pop
mov
insl
sti
inc
xchg
lods
mov
fcoms
fsubs
dec
xchg
sub
pushf
sahf
xor
mov
mov
mov
out
xlat
cmpsb
addr16
rolb
lea
add
mov
arpl
xchg
mov
mov
setnp
ljmp
xor
in
xlat
repnz
inc
fwait
mov
je
out
xchg
arpl
xchg
cmovnp
cltd
adc
sarb
loope
xchg
inc
stc
fcompl
sbb
pop
int
xchg
sbb
in
push
adc
mov
scas
mov
je
mov
xchg
pushf
xchg
loopne
cmp
push
out
jp
fidivl
mov
data16
rcll
stos
cmp
out
xchg
out
clc
insb
pop
dec
inc
xchg
cwtl
xchg
push
int
fildll
out
and
push
sub
pop
push
adc
mov
mov
push
push
arpl
lods
cmc
ret
mov
sti
mov
mov
das
loop
arpl
adc
scas
bound
dec
stos
lods
push
nop
xchg
daa
mov
outsb
dec
jmp
int
in
sbb
rcll
sti
loopne
sbb
cmp
bts
mov
leave
sub
push
aam
lret
jno
daa
cmpsl
fs
jecxz
xchg
daa
in
sar
das
mov
out
xchg
aam
xchg
aam
sbb
xlat
cmp
popf
xchg
sbbb
or
xchg
sbb
pop
gs
hlt
sbb
sub
ds
out
aad
rclb
cmp
pushf
fxam
lret
ror
xchg
insl
out
lods
xchg
xchg
leave
pop
push
shl
shrb
aam
sahf
jno
loopne
das
insb
push
xchg
and
add
shlb
mov
or
adc
mov
dec
loopne
es
int
jmp
jecxz
int3
movsb
out
imul
outsl
test
push
adc
loopne
in
sbb
fsincos
lret
sbb
mov
popa
jns
test
and
ret
mov
lds
jno
lret
xor
and
mov
outsb
jno
jno
xchg
ds
sbb
pop
out
mov
loope
mov
test
lcall
rcrb
jp
xchg
cmp
daa
test
dec
push
inc
out
ja
cmp
push
insb
mov
stos
scas
add
pusha
test
pop
outsl
jmp
ret
xchg
xchg
stos
call
push
repz
leave
sbb
inc
jecxz
testl
lods
jl
fisubl
cmp
mov
push
mov
aad
dec
popf
aaa
cmc
fs
xor
nop
les
aad
jns
rclb
add
sub
cmp
sub
push
inc
fldenv
cmpsl
xor
mov
fidivrs
inc
dec
mov
xor
insb
inc
ljmp
xor
out
push
and
ljmp
cmp
sbb
stos
popa
adc
test
pop
sub
aaa
xor
fidivrl
mov
jno
clc
ret
add
imul
adc
adc
mov
mov
adc
adc
cld
mov
aas
and
adc
stc
int
imul
sbb
mov
adc
pop
insb
lock
loope
popa
cmp
or
fs
pop
lds
add
enter
add
fxch
dec
data16
mov
cld
push
mov
push
repnz
push
arpl
or
pop
sub
add
lds
jge
lock
mov
jmpw
or
pop
push
cmp
add
adc
pop
adc
pop
pop
lods
cmp
adc
mov
lock
ror
push
add
xor
mov
mov
stos
fidivrs
sti
js
mov
push
mov
sti
jne
loop
jo
and
imul
rol
sbb
xorl
inc
ljmp
mov
sub
xchg
xchg
lods
test
sahf
imul
imul
fnstenv
aam
jp
shr
push
out
xchg
mov
decl
outsb
jbe
adc
lcall
shr
fstpt
mov
cld
mov
xchg
adc
xor
mov
xchg
loopne
dec
clc
lcall
loope
gs
and
inc
lahf
mov
clc
xchg
les
fwait
outsb
xchg
fists
ficoms
sti
mov
daa
mov
ret
in
les
cs
lahf
mov
out
push
stos
call
gs
lds
push
inc
daa
ret
fs
xchg
sti
push
or
jmp
outsl
shrb
out
lret
jecxz
mov
out
lods
mov
mov
shr
xchg
aas
jle
dec
mov
xchg
js
inc
fsin
ss
lock
cltd
fs
out
mov
xor
mov
and
movsb
fnstenvs
cwtl
mov
das
mov
cmp
outsb
xor
test
jmp
pop
jl
aam
je
push
nop
ficoms
aad
cmp
loope
pusha
leavew
hlt
jg
jno
or
adc
mov
mov
lods
jge
and
movsb
into
push
mov
hlt
nop
dec
cmp
mov
bound
int
test
loopne
cwtl
push
dec
int
fisubl
out
lahf
sbb
out
movsl
push
xor
lahf
pop
pop
xor
fwait
jg
dec
jnp
and
xchg
cmpsl
xchg
sub
cmpsb
mov
or
clc
xor
jg
mov
lods
adc
mov
aaa
xchg
cmp
or
das
push
lret
jo
pop
pop
aas
sbb
inc
adc
mov
lods
fbld
cmpsl
scas
push
movsb
imulb
sub
push
jl
pusha
ret
sbbb
aas
xchg
inc
sub
xor
shlb
jp
mov
xor
arpl
mov
movsl
test
scas
sub
sbb
dec
and
mov
inc
or
iret
jp
pop
push
cmp
fldcw
int
out
sbb
add
loope
mov
in
daa
or
mov
and
jbe
and
xchg
stc
xchg
inc
in
mov
lcall
jge
cmpb
xor
outsl
and
icebp
insb
insb
pop
dec
lret
or
frstor
mov
jp
adc
movsb
sub
jnp
imul
mov
sbb
sbb
mov
sahf
rcrb
and
out
push
adc
dec
pop
inc
sub
ficoms
sbb
and
mov
cmp
xchg
pop
xor
cltd
xor
push
adc
andb
xor
add
into
sahf
push
sub
mov
arpl
jl
cmp
enter
movsl
xchg
les
mov
sbb
imul
inc
add
mov
mov
xor
mov
push
mov
pop
filds
ds
jno
shll
adc
mov
sbb
mov
sbb
movsl
ror
xchg
and
mov
fwait
es
dec
and
ret
ror
popf
dec
mov
arpl
sbb
shrl
jbe
inc
push
ss
xlat
mov
cli
and
out
imul
fisttpll
push
popa
mov
inc
push
cmpb
xchg
rcr
fisubrl
cmp
adc
jmp
clc
loop
nop
mov
ljmp
cld
mov
push
sub
andb
cmpsb
sbb
sbb
pop
jecxz
lcall
fwait
xchg
or
aaa
mov
aas
mov
sub
sbb
cmp
out
mov
xor
mov
mov
add
sarb
push
into
mov
mov
mov
cmp
mov
jp
test
in
sahf
outsb
and
cmp
test
movl
xchg
xor
xlat
mov
xchg
lcall
fcomps
push
lret
add
mov
ret
mov
xor
jecxz
mov
or
mov
cmpsl
xchg
jmp
imul
cltd
jae
push
js
rcl
cmpsl
test
movsl
mov
jge
sbb
ds
mov
fldcw
int3
fiadds
jecxz
fs
imul
outsb
pop
test
ror
dec
jmp
mov
add
and
daa
subb
sti
icebp
mov
repnz
mov
testl
out
sub
aad
jp
out
in
addr16
pop
and
or
cmp
gs
mov
sub
cmpsl
pop
mov
push
js
sti
mov
in
xchg
fwait
jo
in
push
inc
aaa
adc
movsb
jae
or
insb
outsb
nop
push
int
jno,pn
mov
xor
shlb
push
ss
mov
test
xchg
mov
mov
stos
loopne
sahf
sbb
xchg
out
adc
or
shrb
add
loope
mov
and
jge
repnz
xchg
ret
jg
xor
lret
sbb
ret
addr16
clc
sbbb
ljmp
sub
inc
aaa
lods
and
fcompl
adc
add
mov
cmp
fdivrl
push
mov
in
jae
pop
cmp
test
mov
mov
lret
mov
sub
divb
xchg
or
cltd
mov
sbb
inc
or
xchg
scas
sub
js
mov
nop
lahf
jecxz
xchg
in
jo
mov
mov
or
xchg
or
testb
and
sbb
xchg
xchg
enter
sub
mov
data16
fxch
xchg
mov
sti
fdivl
gs
push
mov
cmpsl
add
pop
sbb
rolb
mov
sbb
loopne
movsl
cmpsl
add
or
sbb
mov
xchg
into
cmpl
in
pop
pusha
mov
mov
jmp
data16
lds
sbb
fmull
test
icebp
xchg
rorl
in
mov
idivl
std
icebp
cli
or
call
pop
sbb
mov
shr
push
fdivr
std
pop
cs
insb
divb
ficoms
mov
and
dec
cltd
out
xlat
in
pusha
jb
push
insl
into
jl
push
dec
lahf
loopne
add
sahf
sti
mov
dec
ja
ljmp
mov
shl
les
inc
inc
pushf
loope
adc
mov
in
mov
lcall
inc
xchg
or
loopne
dec
xchg
lods
jg
sti
add
in
xlat
fldenv
icebp
outsb
bound
xlat
xor
or
push
jno
mov
sbbl
movsl
addr16
mov
xlat
xchg
mov
sti
loop
xchg
loop
jecxz
je
lret
mov
mov
test
push
and
loopne
adc
mov
mov
sub
mov
stc
mov
push
mov
loope
xlat
loop
inc
and
cmovns
f2xm1
sti
lock
vmwrite
pushf
in
pop
arpl
push
adc
or
mov
enter
jge
sahf
pop
ja
sbb
mov
movsb
lods
jmp
cli
xor
out
icebp
sub
mov
leave
iret
fidivl
ljmp
mov
pop
mov
sbb
sarb
data16
inc
enter
mov
imul
jecxz
push
jo
pop
in
push
nop
int
orl
inc
cmc
lcall
mov
mov
stos
jno
inc
int3
loopne
inc
fistps
pop
mov
mov
lcall
mov
fildl
cli
icebp
adc
lods
loop
jge
jmp
lea
leave
mov
fprem
mov
ret
cli
sub
mov
push
sar
repz
push
stc
filds
push
jne
mov
adc
jb
std
std
insl
clc
add
xchg
imul
xor
inc
in
imul
sar
pusha
lret
nop
xchg
push
mov
mov
jmp
add
movsb
cli
and
loop
fdivrp
test
sbbl
add
rclb
xchg
and
enter
xchg
fsubl
xlat
aad
adc
jne
cmp
ljmp
rcr
fsubr
mov
mov
insb
divl
push
push
xchg
test
pop
rcrb
adc
jecxz
ljmp
lock
push
dec
test
dec
lret
mov
outsl
jl
add
arpl
out
inc
and
sbb
pop
fnop
enter
mov
cmp
out
int
mov
in
rcll
mov
sti
jbe
ja
sub
push
cmpsl
jp
pop
lods
in
inc
adc
mov
rorl
push
xchg
iret
in
xor
push
pushf
inc
popf
or
mov
fistl
popl
test
incb
add
adc
jge
fsubrs
sbb
ret
mov
stos
lahf
imul
mov
push
shrb
shll
mov
dec
inc
xchg
and
xchg
inc
xor
lods
rclb
js
mov
add
leave
orb
in
xchg
addl
jae
jb
jae
add
sub
or
ret
jle
lods
fstl
inc
test
in
mov
loope
into
push
mov
test
lret
mov
test
or
pop
pop
xlat
in
mov
cld
repnz
pusha
in
xchg
xchg
mov
out
mov
adcl
add
lahf
movl
fstl
fcoms
rcrb
je
mov
xchg
ret
test
mov
popf
lods
insb
push
dec
xor
jg
hlt
mov
dec
lret
cmp
and
stos
std
sti
aas
subb
and
add
rol
mov
xor
je
out
bound
or
lock
xor
push
xchg
or
mov
and
test
cmp
ljmp
and
sbb
mov
das
add
adc
push
sbb
not
ss
mov
push
out
push
test
pusha
sarl
jp
xchg
sub
push
mov
jge
out
outsl
sub
stos
aam
cmp
xchg
pop
sub
adc
sbb
dec
jae
out
pop
push
in
adc
mov
addr16
fstl
lock
pop
repz
fwait
jno
jbe
in
popf
pusha
iret
out
dec
push
push
inc
mov
aas
and
sub
jmp
add
mov
mov
insl
mov
sbbb
mov
sbb
mov
into
xchg
jno
loop
push
and
mov
push
je
lea
ficoms
sbb
inc
push
test
xor
aam
xchg
jbe
jae
jno
xchg
mov
mov
fwait
sub
mov
ret
into
insb
cmpl
cmp
fcomps
call
imul
call
mov
jne
inc
aaa
dec
fsubrl
addr16
loope
scas
xchg
out
push
lea
test
sbb
pop
sti
xchg
mov
js
ret
mov
sub
mov
pop
mov
aas
aad
je
popa
mov
xchg
xchg
add
rol
cmp
mov
sub
cmpsb
xchg
jmp
lds
popf
pop
stc
outsl
addb
jns
or
xor
shlb
aad
lea
out
and
int
sub
sub
ret
leave
js
hlt
lret
lret
or
std
mov
cmc
dec
in
std
clc
dec
ret
stc
cld
rol
cmpsb
jnp
xchg
in
xchg
in
call
pop
nop
adc
mov
imul
push
lods
out
sbb
mov
ja
adc
mov
repnz
and
inc
cmpsl
cmp
int
fs
es
pop
inc
xor
or
ja
in
out
inc
or
mov
mov
or
loopne
pop
pop
out
loopne
inc
repz
jle
push
sbb
and
cs
out
cli
adc
push
call
xchg
pop
xchg
hlt
scas
jo
mov
jns
push
jge
xor
sbb
and
push
sarb
in
out
jae
mov
scas
push
clc
into
cmpsb
xchg
or
mov
je
mov
sti
adc
xchg
loope
and
in
stos
fucomi
push
out
xor
or
ficoms
push
fwait
lods
xchg
sbb
insb
and
cwtl
aam
and
sarl
push
mov
mov
xchg
popf
mov
int
push
insl
in
hlt
jecxz
mov
out
push
insb
xor
imul
aam
mov
add
and
push
or
pop
xor
push
jno
mov
cmp
pop
les
jmp
xchg
pop
xchg
pop
add
fwait
push
sub
loopne
push
push
and
push
push
jmp
jl
adc
jp
inc
shll
dec
dec
and
dec
dec
decb
jne
ret
ja
or
add
jle
add
rcrb
bound
push
outsb
imul
out
xchg
nop
and
xchg
xchg
daa
call
cwtl
lahf
and
fwait
xorb
xchg
cmp
mov
ds
mov
add
mov
pop
enter
les
pop
mov
stos
and
scas
test
popa
test
fcompp
insl
mov
vmovlps
or
bnd
lock
sub
popl
test
xchg
and
add
rorl
movsl
test
sub
hlt
outsb
dec
pushf
pushf
int
push
adc
out
test
ret
rol
xor
xchg
add
mov
mov
test
add
cmp
mov
dec
sbb
xchg
push
xchg
in
adc
lret
mov
insl
xor
arpl
adc
xor
push
ljmp
das
cld
xorb
clc
or
sub
out
mov
rol
cmc
mov
xchg
pop
sbbl
out
mov
mov
inc
jmp
pop
push
xchg
and
inc
call
jg
jae
sub
and
das
dec
fcmovu
stc
push
and
int
imul
add
mov
pushf
movaps
xchg
add
add
daa
mov
push
mov
xlat
mov
pop
loop
xchg
push
sti
adc
aas
xlat
dec
adc
cltd
mov
adc
adc
ret
lahf
int
pop
push
fdivrl
fsts
dec
push
cmp
mov
mov
dec
cmc
popa
fisubl
xchg
ljmp
stos
fbstp
jecxz
adc
movsl
sar
in
out
shr
add
sbb
out
insl
daa
mov
inc
aaa
mov
xchg
xchg
xchg
mov
iret
xor
roll
adc
xlat
mov
jnp
sbb
shll
cwtl
out
dec
nop
lods
cs
aad
sar
jmp
lock
movsb
or
das
mov
mov
rdmsr
or
ret
sti
ret
jbe
mov
inc
hlt
mov
inc
mov
cmp
in
outsl
nop
push
js
mov
push
mov
xor
scas
ljmp
movsb
jg
mov
shl
repnz
mov
cli
mov
icebp
mov
and
add
xchg
sub
arpl
outsb
push
xor
push
sbb
fsts
mov
jge
and
notl
jns
xchg
mov
pushf
xor
xchg
adc
subl
je
bound
push
lcall
rclb
cmp
jmp
xchg
or
loope
popl
out
cmp
dec
mov
fsqrt
and
out
jo
mov
sub
test
xor
mov
adc
add
push
aaa
add
cmc
and
and
int3
movsb
orb
push
out
loope
push
frstor
cwtl
aam
decl
repnz
inc
sbb
cmp
icebp
insb
push
xchg
mov
ret
cmp
push
sti
mov
jae
and
and
enter
jns
js
dec
mov
xchg
mov
idivl
icebp
pusha
sti
pop
bound
add
xchg
inc
test
fldcw
lock
pusha
jecxz
subl
out
and
cmc
movb
jle
inc
cmp
loop
xor
push
lret
out
repnz
lcall
outsl
in
imull
xchg
scas
or
inc
fldt
dec
and
push
jl
jne
jmp
out
aad
jmp
dec
xchg
jb
test
mov
cmp
mov
sub
lds
jecxz
and
xchg
out
out
and
jno
arpl
jmp
dec
mov
xor
jae
lret
lods
jbe
or
sbb
fmuls
in
xchg
push
xchg
test
inc
pop
xor
addr16
test
xchg
sbb
out
enter
adc
mov
fisttpll
dec
inc
in
jae
sbbb
ret
repz
popf
xchg
lcall
and
xchg
into
xor
push
xchg
xlat
scas
xchg
aad
push
push
sub
pop
ret
and
shlb
xchg
fcoms
pop
jns
xchg
je
push
popa
xchg
or
scas
movsb
xor
icebp
leave
adc
out
pop
cld
push
mov
xchg
movsl
rclb
test
std
jns
push
push
bound
xchg
popf
lahf
push
adc
movsb
push
adc
mov
cmpsb
dec
sbb
add
xchg
jecxz
cld
in
ror
pop
xchg
cmovnp
and
jmp
mov
dec
push
call
push
lock
xchg
mov
push
xchg
sub
pop
rcll
int
inc
lcall
xchg
aaa
inc
mov
xlat
dec
inc
jmp
rclb
xchg
in
push
and
jge
lret
loope
orb
int3
dec
lret
out
outsb
push
leave
cmp
xchg
out
std
add
xor
jp
jmp
xchg
mov
je
mov
xchg
ds
adc
xor
jp
jno
stc
je
sbb
mov
jo
push
call
test
bound
inc
dec
loop
iret
inc
mov
inc
jecxz
push
popa
out
lds
inc
jns,pt
dec
xchg
cmc
inc
sbb
push
and
push
xor
rclb
and
or
jnp
and
xchg
jg
cmp
jns
imul
fstl
pusha
xchg
sti
mov
pop
xor
movsb
pop
adc
mov
add
xchg
pop
daa
mov
leave
outsb
cmp
lds
dec
mov
sub
popa
popa
sbb
cld
push
sti
xchg
jnp
mov
ja
push
push
bound
das
push
repz
stos
cmc
mov
adc
movsb
notl
movsl
popa
xchg
cltd
iret
mov
lcall
divb
fstl
push
out
cmp
aad
xchg
add
xor
xchg
cmp
notl
scas
sub
imul
jo
push
stos
xchg
fisttps
mov
cs
mov
mov
sub
sahf
es
add
int
adc
lods
sub
lahf
inc
pop
sbb
lock
ss
mov
out
and
dec
dec
lods
xchg
gs
insb
xchg
or
pop
push
fs
and
popf
jae
xchg
pop
adc
fstl
xchg
out
ret
inc
fs
add
icebp
cmp
inc
hlt
xchg
jmp
loopne
in
ja
mov
xchg
cmp
jae
xchg
xchg
cld
mov
push
inc
push
ja
loope
sub
pushf
xchg
xor
inc
cltd
and
jae
in
scas
inc
add
mov
mov
adcb
aam
lret
inc
mov
fucomip
xchg
jns
ljmp
shll
lret
sub
mov
sub
push
jae
out
dec
push
outsb
dec
bound
fnsave
sub
jle
dec
push
fstl
cwtl
cli
sahf
cli
repz
inc
pop
push
xchg
xlat
xor
jb
shlb
push
push
scas
xorl
roll
outsb
xchg
daa
pop
mov
inc
dec
mov
out
mov
sbb
adc
fldz
iret
pmaxsw
pop
dec
cmc
repnz
lods
repnz
fisttpll
inc
inc
and
push
mov
jae
mov
sbb
cmp
xorl
pop
or
cmp
fbstp
ja
out
test
dec
adc
bound
xchg
gs
mov
pop
arpl
jae
cmp
stos
test
push
xchg
mov
jmp
push
xchg
inc
mov
dec
sbb
lcall
push
push
out
adc
aam
mov
and
add
es
repnz
loopnew
inc
lds
jno
and
jnp
xchg
pop
mov
jmp
and
jne
jb
push
pop
shrl
aas
jp
std
push
inc
jge
int3
rcrl
loopne
iret
nop
test
jl
sub
push
out
pusha
xor
xchg
mov
stos
or
pushf
sahf
notl
push
mov
and
fmul
add
cwtl
inc
pop
lods
pop
dec
xchg
in
jmp
xchg
pop
das
dec
mov
popf
and
xchg
fwait
mov
outsl
rcrl
cmp
pop
adc
sbb
xchg
je
popa
adc
and
insl
push
daa
cmp
icebp
fcoml
pushf
mov
jae
test
insl
popf
int
loop
out
stc
out
push
mov
emms
shlb
out
jg
mov
iret
adc
push
add
movsb
lret
dec
icebp
sbb
adc
dec
fisubs
out
scas
jge
popf
out
xor
addb
mov
pop
add
xchg
inc
dec
sbb
sbbb
and
or
and
inc
mov
dec
mov
mov
adc
outsl
xchg
pop
sbb
popf
arpl
inc
sub
sub
mov
fucomp
mov
in
lret
jecxz
cld
cmpsl
inc
dec
ss
xchg
mov
cmp
pop
lock
rcrb
in
dec
mov
pushl
jmp
and
imul
sub
jecxz
pop
fisttps
push
lret
aam
rcl
hlt
out
jb
iret
in
insb
repz
insl
xchg
jns
dec
pop
inc
insl
jbe
xchg
test
push
and
mov
xchg
lds
jne
inc
add
xchg
dec
cmpl
xor
xor
lods
insb
and
daa
xchg
out
xchg
inc
test
lcall
ficomps
add
aas
and
sub
push
xchg
jnp
mov
ret
mov
int3
mov
xchg
je
sub
lcall
movd
outsb
sbb
xchg
inc
popa
push
sbb
enter
fwait
push
repz
scas
sub
and
inc
lock
out
or
shlb
xchg
sbb
pushf
mov
addr16
leave
jb
xchg
xor
enter
cmpsl
ljmp
test
mov
fnstenv
xchg
lret
popf
jb
pop
dec
fdivrs
push
xor
pop
inc
shlb
pop
lods
push
add
icebp
sub
push
movsb
sbb
push
lock
pop
xchg
mov
int3
clc
and
xchg
dec
mov
pop
out
stc
and
mov
xchg
jle
mov
lcall
xchg
das
inc
xchg
and
adc
mov
cmp
mov
fldenv
dec
push
bound
out
test
sub
daa
cld
xchg
lods
sbb
cmp
pusha
lds
mov
inc
xchg
xchg
push
mov
xchg
xchg
out
fldcw
ja
cld
adc
dec
mov
ret
xchg
xchg
shl
sub
inc
or
jbe
icebp
cli
fistl
lods
mov
mov
cwtl
rorl
mov
lock
addr16
jnp
daa
out
mov
xchg
push
std
lret
jp
pushf
dec
xchg
sub
mov
aas
cmp
or
in
out
mov
push
jbe
sbb
stos
and
rorb
sub
es
cmp
lds
out
aam
iret
mov
mov
and
stc
mov
dec
add
jne
add
out
mov
xor
mov
mov
sarl
mov
push
cmp
repnz
dec
popf
xchg
sbb
iret
pop
popa
xchg
mov
shl
xor
out
jno
stos
call
repnz
repz
or
repz
xchg
push
leave
rclb
lods
xchg
cmp
mov
mov
or
int
mov
cld
xchg
push
test
push
out
std
in
subl
push
movsb
stos
inc
add
push
and
mov
jnp
popa
test
out
add
mov
xlat
push
pop
jb
ljmp
mov
outsl
jle
shlb
test
and
sub
in
xchg
movb
mov
mov
adc
adc
clc
lock
pop
std
test
mov
and
and
in
mov
inc
xchg
or
ror
jecxz
and
sub
pop
js
add
and
push
sub
fdivrl
add
push
loop
shlb
in
or
mov
add
cltd
ljmp
dec
mov
cli
cmp
das
aam
stos
mov
pop
icebp
mov
and
mov
andnps
add
xor
push
test
push
cltd
jne
ja
adc
imul
stos
mov
adc
movsb
aas
stos
scas
sbbl
jae
xchg
jne
cmp
and
std
call
mov
or
inc
out
jle
outsl
and
adc
xchg
daa
int3
jecxz
out
lds
and
test
mov
push
dec
xchg
fidivrs
idiv
lret
js
sbb
lret
insb
shrb
das
pop
adcl
mov
pop
movsl
icebp
mov
and
inc
inc
fcmovnu
jno
mov
sbb
pop
out
xchg
insl
cmc
cmpsl
stos
mov
xchg
mov
xor
xchg
push
aam
adc
jb
ljmp
dec
push
jo
in
adc
sub
mov
xchg
mov
ficoms
lea
mov
sub
jbe
sub
push
inc
mov
sub
cmp
dec
xor
sahf
rcll
jnp
cmp
push
cmp
mov
in
inc
out
mov
mov
js
xchg
pop
mov
push
inc
xchg
cli
xchg
insb
xchg
and
xor
add
mov
jmp
fsubrl
sahf
jecxz
xchg
mov
mov
popf
jl
insb
mov
lahf
dec
xorl
xchg
mov
loop
pop
lahf
leave
hlt
pop
xchg
add
pop
in
cmp
enter
icebp
mov
jno
jo
push
mov
test
fwait
int
sub
mov
xchg
mov
jae,pn
hlt
repz
and
push
je
out
push
xor
in
sub
mov
pushf
nop
xchg
test
xorl
add
imul
cmp
movsb
xchg
xor
and
idivl
out
roll
scas
xchg
out
xlat
xchg
adc
faddl
xchg
cli
push
inc
sub
popa
push
xor
jmp
lcall
fcompl
fs
xchg
movsl
andb
lret
push
cld
stos
repnz
add
sbb
mov
mov
pop
ljmp
mov
imul
mov
pop
imul
jle
mov
out
adc
bound
and
jle
popa
rclb
arpl
jmp
and
ja
and
bound
pop
lahf
out
adc
icebp
pop
out
jno
xchg
lock
jmp
mov
out
adc
sbb
xor
rcl
pop
cmpsb
inc
aam
lea
rolb
daa
and
dec
add
bound
or
sbb
mov
test
xor
movsl
dec
jmp
and
xorl
mov
nop
nop
lret
sbb
das
pop
adc
out
outsl
add
cmpsb
xchg
icebp
es
jne
push
mov
popf
int
pop
mov
add
lods
outsb
xchg
jb
repz
and
iret
fcomp
cs
mov
movl
test
xchg
out
mov
xchg
pop
repnz
push
add
mulb
aam
xchg
jne
fcoml
xlat
push
leave
rcrl
and
mov
enter
or
xchg
xchg
jmp
add
test
fdivl
out
inc
inc
rolb
xchg
jo
mulb
xor
and
xchg
push
inc
stos
push
repz
inc
xchg
xlat
movsb
loopne
pop
jmp
icebp
and
sbb
das
dec
inc
fucomip
mov
and
xchg
jle
pop
insl
jns
pop
aad
sub
mov
mov
jle
call
out
pop
jmp
and
adc
or
dec
cmp
repz
jle
push
lods
adc
cmpsl
pop
in
sti
aas
into
out
cli
movsl
loope
repz
rcll
mov
xchg
or
sub
stos
inc
mov
idiv
xchg
or
enter
jns
mov
lret
enter
sbb
push
popf
push
mov
sub
sbb
lea
mov
mov
sbb
and
hlt
xchg
in
mov
out
jne
shrl
test
sahf
scas
sti
sbb
pop
lret
sub
je
push
and
popl
movsl
dec
mov
mov
out
repz
das
cmp
xchg
push
jmp
sub
jge
xchg
xchg
xor
fiadds
xchg
push
cmpsl
outsb
lret
cmp
or
and
pop
sbb
add
mov
lret
xor
xor
imul
loope
cwtl
inc
shrl
test
xchg
cmp
jns
xchg
outsl
psubsb
cltd
popa
sbb
loop
repnz
inc
andb
push
inc
out
pop
dec
test
aas
xchg
fs
cld
mov
xchg
mov
repnz
and
popf
clc
cmp
jb
xchg
mov
mov
push
push
mov
adc
pop
cmp
pop
jbe
daa
gs
das
loop
and
incl
sahf
mov
pop
mov
add
sbb
aas
pop
mov
out
fsubl
sub
add
add
xchg
mov
insb
out
jae
lock
and
out
enter
xchg
lret
mov
adc
inc
inc
sbb
outsl
mov
mov
add
in
fcomps
or
push
jnp
or
and
sbb
adc
inc
in
enter
pop
or
xchg
add
mov
loop
test
shll
and
xchg
mov
addr16
outsb
and
and
out
push
cs
int3
fstpl
pmaxub
mov
xor
sub
out
mov
cmpsb
pop
fisttps
pushf
dec
cltd
and
pop
mov
out
pusha
outsb
lret
jecxz
ljmp
mov
jg
sbb
lods
mov
push
mov
gs
dec
push
push
xor
aas
fsts
int
and
lahf
imul
aaa
sub
adc
stc
adc
xchg
xchg
xchg
xchg
inc
pop
xchg
adc
mov
pop
mov
dec
and
xchg
cmp
aas
inc
mov
call
adc
repnz
lds
out
roll
and
fstpl
mov
insb
xchg
jp
inc
imul
loope
adc
adc
das
orl
js
xchg
cli
inc
inc
hlt
dec
jns
cli
fnstcw
arpl
movsb
bswap
lods
xchg
popa
in
outsb
pop
mov
xor
stc
push
call
int3
xchg
add
cwtl
test
enter
ret
movsl
xchg
in
out
rorb
fsubrl
js
cmp
mov
bound
and
out
inc
int
jge
ljmp
jge
shrb
icebp
stos
adc
out
dec
dec
xchg
adc
pusha
imul
in
xor
sbb
mov
insb
shl
cmp
push
xchg
mov
and
test
cmp
test
mov
dec
out
xor
jmp
mov
inc
add
mov
loop
roll
fwait
adc
in
add
imul
cli
cmp
xchg
jmp
and
xor
sbb
in
lret
mov
cltd
dec
in
mov
rcrb
adc
dec
jb
sti
out
outsb
das
out
out
clc
and
andb
pop
adc
adc
cli
das
xchg
loope
orb
int
stc
xchg
aam
cmp
xlat
enter
dec
loope
fdivl
pop
aad
mov
jp
mov
mov
dec
data16
jp
and
inc
outsl
icebp
push
mov
rcll
in
out
test
and
sub
xchg
lock
sub
pop
in
sbb
xor
fwait
add
mov
lds
int
ret
pop
adc
sbb
lret
xchg
cmp
scas
xchg
jmp
pop
aas
cmp
mov
sbb
pop
mov
adc
mov
push
pop
and
push
mov
es
inc
pushf
jl
loopne
mov
xchg
lcall
pusha
sub
cmpsb
adc
sub
push
xchg
adc
ficomps
xchg
xchg
shlb
mov
jp
push
and
lds
arpl
incl
add
hlt
inc
mov
xor
adc
dec
dec
lea
or
fldenv
and
inc
inc
mov
jecxz
das
fldl
scas
test
jb
frstor
arpl
fwait
ds
jl
je
bound
enter
sbb
or
iret
inc
and
outsb
imul
mov
xchg
shr
jns
push
xchg
dec
sub
inc
mov
or
add
or
xchg
or
loope
ja
divl
repnz
stos
and
movl
lcall
les
jne
pusha
repnz
sub
je
adc
insb
pop
xor
push
xor
clc
mov
mov
sbb
xchg
stos
mov
lahf
jle
sbb
pop
mov
jae
push
mov
inc
xor
lds
iret
es
mov
cmc
xchg
adc
addl
xchg
dec
inc
or
xchg
jecxz
pop
mov
xchg
pop
cmp
jno
aad
lahf
sarb
and
stos
jl
popf
mov
dec
ret
and
mov
mov
pop
cmp
mov
dec
sbb
and
ret
ds
pop
lods
sub
xchg
icebp
roll
push
inc
addps
dec
mov
les
les
xchg
inc
adc
cmpsl
push
nop
and
mov
insb
fistl
adc
aas
pop
insb
or
adc
outsb
or
int3
loopne
rol
pop
es
cli
push
lahf
xor
cmpsb
xchg
fdivrs
dec
sub
lods
inc
stos
inc
lock
decl
dec
sbb
inc
xchg
int3
dec
mov
sub
mov
xchg
sub
mov
int3
in
out
stos
cwtl
fstpt
adc
cwtl
mov
lahf
xor
out
or
mov
mov
sub
test
cmpsb
pusha
xchg
dec
cmpsl
push
xchg
sub
shlb
cmp
testl
scas
iret
fildll
mov
mov
aaa
inc
sub
movsb
pushf
call
lock
cmpsb
xchg
bound
mov
cs
flds
inc
pushf
and
or
dec
or
idivl
and
adc
test
sub
xchg
xchg
sub
xchg
js
shlb
cmpl
movsb
xchg
bound
pop
and
add
xchg
xchg
imul
movsb
cs
adc
xchg
cmp
pop
jno
mov
rcll
xor
jge
xchg
push
dec
lret
dec
ljmp
lods
xchg
cmp
clc
mov
mov
sub
in
jns
cltd
into
xchg
mov
into
and
dec
xor
ja
int
and
mov
mov
in
push
pushf
xor
lcall
movsb
out
inc
repnz
pop
popa
push
loop
adc
popa
or
loope
dec
xchg
push
and
divb
ret
addr16
push
in
movsb
test
pushf
mov
jmp
mov
push
push
xchg
daa
in
stos
pop
add
xor
jbe
lods
and
cmp
out
repz
daa
push
xor
pop
push
mov
lcall
cmc
fadd
mov
xorb
sbb
ljmp
out
int
inc
jb
inc
push
pop
mov
dec
mov
jmp
repz
add
outsl
jmp
and
shlb
xchg
mov
mov
out
inc
and
push
push
dec
sbb
xchg
adc
adc
data16
iret
pop
jecxz
das
push
popf
or
out
and
jle
xchg
pop
inc
inc
adc
xchg
aaa
xchg
jecxz
out
loop
push
icebp
repnz
lahf
jnp
cs
push
xor
lea
xchg
push
inc
sub
aam
das
sbb
pop
out
into
dec
loopne,pn
pop
bound
sbb
jb
jns
cmp
pop
xchg
xor
cmc
push
adc
jl
or
mov
data16
jl
and
jae
int3
sub
stos
leave
mov
fimull
and
lds
out
int
data16
and
xlat
add
test
sbb
fcmovne
ljmp
rcr
jno
sub
inc
fisubs
mov
sbb
mov
daa
out
rolb
and
mov
xchg
dec
sub
cmp
repz
inc
outsl
popf
sub
leave
push
cmpl
sahf
cmp
les
sub
enter
jle
nop
out
pop
aaa
add
mov
rorl
out
in
fdivl
andl
ljmp
sub
adcl
cmpsb
fcom
jge
cmp
out
jle
mov
dec
mov
mov
adc
ds
out
jne
mov
clc
loopne
fidivrs
and
push
lret
std
daa
jg
test
sbb
and
dec
and
add
and
out
adc
xchg
pop
or
mov
lds
aam
insb
dec
adc
sub
std
inc
cmpsl
rcl
int
push
jecxz
xchg
loope
movsl
push
cld
insl
push
fidivs
or
sub
or
sub
and
push
sub
jo
loopne
outsl
pop
or
pop
or
and
add
icebp
push
sub
cmpsb
and
adc
pop
out
cmpsb
add
mov
and
mov
xchg
lret
xlat
inc
jmp
add
cmp
mov
es
lods
hlt
in
jecxz
push
in
std
and
loope
mov
dec
fldl
jecxz
lock
cltd
fcoms
insl
idiv
popf
addb
mov
in
rclb
jne
and
dec
push
cmp
fildll
in
arpl
sbb
add
pusha
std
out
loop
into
jns
fldcw
or
dec
fidivl
pop
push
fisubs
xchg
rcrb
or
cs
pop
push
mov
xor
xchg
lret
cmp
pop
mov
wbinvd
sub
pop
es
sbb
mov
and
inc
repnz
rclb
aam
lret
mov
push
sbbl
xor
mov
push
sahf
fistpl
out
aas
sar
int3
cmc
dec
xchg
xchg
sbb
into
cmp
lock
cmp
xchg
jb
add
pop
es
and
xor
sub
jmp
xchg
xchg
sub
push
and
test
xlat
movsb
mov
mov
mov
and
into
adc
pop
or
pop
cwtl
or
int
pusha
xchg
push
cmpsb
data16
xchg
sub
fs
enter
out
repnz
sahf
shrl
add
scas
adc
cs
outsl
add
sahf
mov
pop
out
inc
negl
cmp
jns
push
push
fmuls
sbb
cmp
shl
push
or
out
imul
daa
mov
stos
jecxz
push
xor
imul
pop
mov
out
jge
mov
movsb
push
xchg
sub
out
cltd
sub
sub
test
leave
sbb
test
pop
lods
outsb
xchg
sbb
mov
insb
adc
mov
sarl
loop
out
cmpsb
orl
mov
fcmove
sub
data16
xchg
and
mov
or
test
out
clc
cmpsl
in
xchg
fsub
repnz
sahf
xor
fisttpll
stc
inc
and
scas
mov
pusha
out
fimuls
mov
sti
in
cmc
arpl
xchg
hlt
es
push
jnp
mov
decl
and
loopne
mov
sub
xchg
mov
jmp
jmp
mov
mov
mov
dec
rorl
dec
fs
aas
pusha
and
add
outsb
data16
popa
or
xor
cli
adc
jge
lahf
jne
and
test
adc
xchg
adc
aas
mov
sarb
push
sbb
xor
enter
jns
add
out
xchg
inc
xchg
ja
pop
mov
fidivrl
xchg
lea
and
xchg
mov
test
jl
lcall
mov
xchg
mov
out
hlt
push
adc
inc
xchg
mov
mov
xchg
in
ret
xchg
inc
inc
mov
lods
adcb
daa
lcall
push
sbb
inc
out
adc
xor
shll
xchg
sahf
jle
adc
inc
adc
das
mov
addr16
dec
andb
out
xchg
mov
sub
pop
or
call
xlat
call
in
cmp
mov
pop
loope
add
shl
inc
mov
rcl
hlt
mov
push
push
push
repnz
test
adc
mov
mov
int
xorl
stos
sub
dec
pop
lock
mov
adc
cmp
xchg
cli
jne
fsubl
mov
sub
cmp
xchg
cmp
cmc
mov
xor
scas
das
cli
sti
dec
jae
mov
sahf
jne
aas
and
fs
mov
jl
mov
add
mov
ror
jbe
shl
dec
call
out
mov
pop
mov
mov
and
out
xchg
hlt
or
rorl
pop
pushf
mov
sub
pushf
call
sub
lcall
je
add
mov
movsl
iret
test
add
sbb
aad
mov
lret
push
add
add
test
cld
xchg
mov
ja
sbb
iret
and
add
js
xchg
mov
mov
andl
out
lcall
sub
ljmp
stos
frstpm(287
insb
cmpsl
rcl
into
ds
mov
test
ret
xchg
cmpsb
add
jnp
mov
add
xchg
sahf
add
mov
push
cmpl
mov
aaa
jmp
lahf
sub
movsb
mov
out
xchg
add
test
add
push
mov
push
jl
jge
das
and
dec
imul
or
insb
in
dec
xchg
or
in
xchg
and
jne
loope
push
pop
and
dec
inc
inc
cmp
sub
xor
mov
xchg
imul
and
mov
jae
xor
pop
and
push
std
mov
and
cmp
inc
mov
scas
adc
or
or
iret
leave
adc
addr16
mov
movsb
icebp
stc
inc
sarl
jecxz
out
vcvttps2dq
and
popa
xchg
imul
vpcmpeqb
stos
enter
adc
shr
jae
fnsave
cltd
into
mov
ficoms
mov
shrl
fnstenv
insl
dec
fwait
xchg
insl
fnstcw
test
and
mov
xchg
fistps
