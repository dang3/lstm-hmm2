push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
mov
mov
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
jmp
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
add
add
inc
adc
pop
arpl
and
jp
fisubs
mov
out
mov
scas
add
ret
jmp
loop
out
daa
jg
add
andl
leave
add
fnstenv
das
pop
mov
stos
sarb
in
iret
test
les
xor
dec
sbb
push
subl
adcl
imul
adc
xchg
lea
fdivr
cmpsb
sti
sbb
add
popa
xor
jbe
adcb
es
xor
daa
jp
inc
aam
and
and
inc
filds
jns
dec
mov
cmp
loopne
push
fisubl
iret
test
aam
cwtl
dec
test
lods
push
popf
push
adc
repnz
sub
mov
add
mov
xchg
cmp
and
insb
inc
roll
pop
lds
inc
stc
addr16
in
xor
out
test
js
cmpsl
rcl
inc
mov
add
nop
or
loopw
aam
cwtl
fidivs
inc
adc
push
mov
lret
repz
jg
and
lods
and
lahf
adc
ffreep
sub
loopne
aas
shll
mov
and
jae
xchg
xchg
mov
mov
cltd
mov
mov
pop
idivl
sbb
sbb
cmp
testl
add
xchg
addr16
test
popf
cmp
bound
cltd
dec
jnp
push
imul
inc
mov
jae
inc
cmc
sub
fbstp
rcll
stos
push
loop
pushf
sub
aad
and
mov
xchg
sub
roll
mov
mov
xor
push
dec
and
cmp
cmp
out
in
hlt
nop
nop
roll
add
add
loopne
idivl
mov
jge
inc
xchg
mov
in
cmp
inc
in
pop
fildll
xchg
iret
mov
xchg
cwtl
sub
leave
aaa
ret
arpl
mov
xchg
aam
inc
leave
sbb
nop
lds
or
cmp
dec
mov
pop
cwtl
mov
subb
adc
mov
fstp
orb
pop
jle
xchg
add
mov
js
cs
push
pop
in
inc
fwait
imul
ret
or
push
push
adc
sbb
cli
sbb
jo
dec
das
push
pop
and
adc
mov
lock
out
lret
push
lret
cmp
push
inc
inc
jmp
call
lahf
sbb
mov
jbe
in
adc
stos
je
mov
mov
pop
jl
test
rolb
and
clc
mov
add
fdivs
orb
stos
repnz
pop
mov
xchg
fmul
jge
mov
testl
pop
call
cmp
push
jne
pop
cltd
inc
pop
mov
cmp
sub
inc
xor
xchg
push
inc
xor
pop
inc
sub
pop
pop
dec
inc
mov
jp
adc
mov
sbb
inc
mov
fildll
out
jp
jbe
sub
cli
add
add
push
pop
test
xchg
xor
mov
sbb
push
jmp
jp
idiv
mov
into
out
mov
inc
sub
cmpb
pusha
pop
or
lahf
jl
ljmp
loopne
jmp
sti
push
imull
stos
or
lret
stos
jg
mov
in
sbb
ficoml
addr16
inc
data16
icebp
pop
or
cmp
dec
in
repnz
sub
cmp
daa
sbb
fidivrl
sbb
pop
addr16
jge
and
pcmpgtw
les
mov
xchg
out
cmpsl
adc
ss
dec
ja
push
mov
push
mov
fisubl
test
add
or
push
and
rcrb
and
lods
lock
pop
movsb
insl
fsubl
lea
jns
or
xchg
lcall
push
repnz
sub
incb
out
cld
repnz
notl
sub
imul
jns
mov
iret
int3
xor
sbb
jns
xchg
push
lock
xor
sub
scas
into
stos
fsubrs
je
sbb
fs
sub
fs
ret
je
fstl
push
xor
mov
and
xor
jae
jnp
stc
xor
addr16
or
sub
dec
pop
xor
jns
hlt
xchg
push
push
jecxz
aaa
dec
repnz
iret
xor
add
push
inc
shrb
add
cmp
jne
jg
xor
dec
int3
addr16
cmc
aas
adcb
test
popw
sub
sub
jbe
jmp
mov
mov
sahf
sbb
pop
sub
mov
jo
icebp
mov
cmp
xchg
or
jmp
xchg
in
ret
js
test
jecxz
test
or
hlt
js
ja
outsb
fs
aas
pop
add
scas
inc
or
sub
out
push
insl
dec
ljmp
add
add
or
cmpsb
mov
divb
push
paddb
xor
jo
movl
mov
mov
in
lds
ljmp
adc
push
jno
lret
mov
test
lods
mov
cmp
andl
leave
stos
imul
loope
or
fs
mov
cmp
jbe
jmp
xor
js
pop
fnstenv
add
add
and
jle
call
xchg
add
mov
inc
rclb
sahf
imul
movsl
loop
pushl
mov
xor
fwait
nop
pop
in
in
mov
fwait
pushf
cwtl
sbb
stos
imul
adc
pop
jae
mov
jmp
add
lock
push
or
mov
inc
subw
lock
loopne
fstpl
sarl
xor
mov
and
rorb
sarb
das
hlt
je
mov
ret
pop
pop
or
lahf
push
sbb
add
pop
inc
sub
add
insl
shrl
rcrl
ret
sbbb
pop
sub
mov
dec
aas
mov
xchg
call
mov
xor
xchg
or
dec
outsb
orb
mov
aad
scas
js
push
push
inc
mov
in
test
lock
add
mov
pop
sti
imul
jb
sbb
call
orl
jno
mov
cmp
xchg
inc
ljmp
jbe
mov
repz
ss
inc
pop
int
popaw
jbe
sub
daa
rcrl
pop
movsb
xor
in
popa
cmp
inc
mov
cltd
loop
popa
add
pop
add
pop
adc
cld
das
adc
arpl
jo
je
jnp
leave
add
add
sub
mov
pop
lea
cmp
fucomip
xor
push
push
repz
bound
mov
add
lcall
sbb
mov
mov
daa
mov
inc
stc
and
pop
lods
push
hlt
add
sbb
sbb
out
push
mov
loopne
int
adc
and
pop
add
fs
call
xlat
insl
cmp
mov
xchg
aaa
bound
xchg
rol
xlat
cltd
aad
add
les
inc
dec
int
inc
mov
xchg
mov
cwtl
lret
repz
cmp
dec
call
sub
cmpsl
adc
inc
inc
sarb
dec
mov
std
mov
iret
ret
outsl
sar
fs
in
rorl
insb
js
mov
shrl
popaw
sub
das
sarl
rol
push
imul
sub
fmuls
ss
outsl
mov
push
inc
ds
adc
sub
in
jmp
repz
dec
stos
push
lret
add
das
test
lret
adc
or
cmp
mov
mov
shl
sbb
cmpsb
rcll
frstor
cltd
adc
outsl
add
xchg
rcll
stc
and
cmp
sahf
jle,pt
fldenv
add
add
fistps
mov
subl
enter
iret
and
gs
cmp
add
xchg
or
push
jg
inc
xor
in
movsl
stos
mov
add
icebp
push
add
add
inc
or
mov
dec
scas
push
sbb
pop
xchg
xor
fcoml
cwtl
cltd
sub
popf
pop
test
insl
add
dec
xchg
or
addr16
push
lahf
push
xor
jae
push
es
jne
clc
cmp
xchg
test
mov
lock
dec
cwtl
lret
or
ret
outsl
shll
jl
insb
icebp
das
pop
aaa
push
push
mov
inc
roll
rcll
xor
out
cmc
and
sub
lret
ret
je
xor
mov
insl
mov
add
aad
cli
movsb
out
jbe
inc
and
lret
adc
addr16
jmpw
adc
and
into
arpl
inc
scas
pop
mov
add
mov
dec
inc
push
fnsave
sbbb
mov
mov
int
xchg
sarb
xchg
mov
push
ret
clc
pop
sarb
cli
mov
das
cmc
mov
jecxz
add
adc
rorb
lcall
push
and
lahf
cmp
add
adc
mov
pop
mov
in
mov
ja
aaa
push
aaa
ret
jbe
push
dec
enter
cwtl
sub
movsb
scas
sbb
mov
jp
xchg
xor
fstps
lods
jae
xchg
mov
mov
ret
mov
lods
in
inc
leave
xchg
fmull
pushf
popf
frstor
sbb
cmp
and
push
fwait
movsb
test
pop
jecxz
and
mov
mov
insl
ret
btr
cmp
mov
pushf
pop
in
jno
push
loope
subl
mov
cmc
adc
lret
popf
and
cli
lock
insb
jae
dec
sub
hlt
in
stc
outsl
mov
in
mov
mov
mov
aas
ljmp
xchg
dec
test
sahf
sub
lret
clc
mov
mov
outsb
mov
imul
add
add
mov
out
jbe
push
jge
cwtl
xchg
jg
and
fs
inc
add
jp
fucom
xor
adc
push
mov
sbb
lcall
loop
inc
pop
add
lea
mov
add
jecxz
scas
mov
mov
xchg
dec
mov
dec
mov
cmp
sbb
xor
mov
sub
lret
sti
mov
sub
mov
aas
and
aam
lds
shlb
aam
xchg
add
add
scas
fucomip
inc
je
mov
push
mov
shrl
sahf
pop
test
imul
repz
imull
sub
push
movsb
pop
jb
in
rclb
jp
inc
popf
adc
in
cwtl
mov
mov
jge
sbb
mov
mov
subl
iret
sub
inc
aas
lods
subb
ffreep
fmul
add
fimuls
incb
fisubrl
pop
mov
cwtl
inc
leave
subb
imul
hlt
pop
out
negb
jnp
cmp
mov
in
jbe
fwait
mov
and
add
pop
movsl
dec
lcall
jg
int3
out
cmp
pop
mov
daa
addr16
aaa
cwtl
jae
in
pop
push
push
dec
xchg
add
lods
mov
or
dec
test
or
mov
jno
das
xchg
test
psubsw
inc
xor
sbb
cld
mov
or
dec
push
pop
out
mov
dec
popf
lea
loop
out
popf
sub
daa
push
addb
cld
call
xchg
push
inc
mov
sub
call
mov
leave
and
cmpsb
inc
cmp
mov
dec
dec
sbb
push
testb
enter
mov
push
imulb
xchg
ja
mov
cmpsl
popa
add
fildll
cmp
gs
rorb
or
push
cwtl
ljmp
sbb
jne
insl
jp
cwtl
int3
outsb
fwait
aad
out
xchg
bt
and
push
cmp
push
xor
movsb
mov
into
sahf
pop
xor
lea
cmp
inc
adc
test
pop
xchg
xchg
sub
inc
xor
and
inc
adc
xchg
ja,pn
movsb
xor
inc
push
add
enter
inc
mov
jo
dec
lea
mov
push
dec
mov
dec
sub
adc
xchg
mov
mov
test
xor
mov
pop
int3
stos
adc
in
jae
insl
cwtl
fiaddl
pop
call
lds
in
mov
pop
shlb
cmp
lcall
out
inc
mov
leave
push
inc
fdivl
sbb
push
lahf
imul
add
add
or
je
dec
push
xchg
repz
fdivs
mov
cmp
js
mov
pusha
mov
icebp
insb
mov
fidivs
mov
call
bound
xor
cmp
xchg
add
dec
push
inc
push
movsl
xor
in
sbb
into
jno
addr16
inc
std
pop
push
mov
mov
pop
dec
std
xchg
and
repnz
or
test
cmp
xchg
mov
and
and
sbb
add
push
sbb
jb
imul
fisttpll
enter
and
hlt
inc
pop
cld
or
dec
mov
hlt
in
jo
dec
or
and
inc
pop
out
sti
add
and
mov
adc
xchg
sahf
sub
cli
jb
mov
stc
pop
rcrl
test
loope
sub
sti
loope
lock
mov
sub
adc
cld
shl
xchg
sbb
sub
add
outsb
xchg
loope
fstps
je
dec
lods
inc
int3
and
test
jo
dec
xchg
test
out
sbb
jno
mov
and
gs
subb
lds
sub
movb
push
cmpsl
ror
add
inc
jns
xchg
inc
stos
mov
loopne
mov
test
test
gs
sti
lcall
add
testl
mov
jo
rcrl
dec
inc
jl
pusha
loope
out
jle
aad
repz
dec
jp
xor
jae
dec
and
push
fstp
push
add
cmpsb
mov
cmp
adcb
ret
jnp
add
jo
in
pusha
rorb
cmp
xor
stc
jmp
outsl
and
inc
stos
data16
leave
js
stos
js
test
or
pop
fnsave
in
orl
imul
dec
sbb
cld
xchg
stc
jns
aad
clc
mov
dec
push
shl
add
pop
sub
fdivrs
bound
jbe
scas
jns
inc
lret
inc
inc
dec
mov
mov
xor
mov
loop
out
mov
sub
sbb
adc
or
jge
rcll
clc
int
xlat
add
mov
fwait
pop
jp
add
popa
fistpll
addr16
das
jb
mov
dec
lods
add
and
fcoms
cmp
loopne
jno
and
pop
pop
adc
lret
out
mov
aaa
ficomps
scas
loope
and
push
cvtps2pd
adc
rorb
sub
push
push
pop
call
sub
test
sarb
test
cmovae
fistpll
dec
mov
add
mov
in
enter
xor
or
xchg
adc
dec
loop
mov
repnz
je
and
xchg
jb
lods
push
push
test
sub
mov
les
dec
lea
push
xchg
roll
enter
inc
xchg
les
movsl
mov
cmp
or
sbb
mov
xor
push
sbb
adc
rclb
jno,pn
sbb
arpl
push
mov
gs
int3
jnp
pop
lret
add
mov
cmp
add
xchg
insl
inc
mov
mov
push
mov
or
loopne
fistps
pop
addr16
add
in
call
cli
pop
xor
mov
xchg
dec
call
lods
fs
jae
mov
out
and
add
outsl
dec
fsubrs
cli
dec
shlb
enterw
inc
mov
shl
or
and
cmp
mov
pusha
sbb
add
mov
mov
xlat
das
popf
in
inc
cli
shlb
sbb
shl
cmp
ljmp
outsl
and
cwtl
adc
fistpl
rclb
push
lcall
ret
outsb
cmp
repnz
iret
lret
mov
mov
cmp
xchg
aaa
or
icebp
adc
mov
aam
outsl
mov
jne
add
add
xor
xchg
push
adc
pop
jmp
lret
dec
stc
int3
mov
testl
test
inc
mov
inc
sub
in
daa
pop
cmc
push
pop
add
arpl
add
cmc
cwtl
xchg
ljmp
mov
sahf
mov
xchg
ss
jbe
and
cwtl
loop
sbb
vmovapd
icebp
sbb
xlat
xor
sub
shll
add
in
xchg
fmul
sbb
pop
cli
xor
or
test
js
xor
pop
mov
nop
add
ja
cwtl
mov
je
hlt
sahf
and
icebp
sub
add
lods
and
ret
and
cwtl
pushf
mov
add
inc
or
and
or
dec
dec
xor
lahf
fcmovnbe
xor
mov
rolb
inc
mov
fcoms
sbb
stos
repz
xchg
push
add
punpckhdq
pop
mov
enter
push
mov
mov
int3
or
stos
mov
ss
pop
loop
mov
stos
fidivrs
fcomps
nop
pop
aaa
lds
iret
fdivs
adc
lcall
rolb
rorl
mov
cmc
dec
add
mov
loop
mov
push
stc
or
jl
or
lcall
mov
fisttpll
pop
mov
xor
add
pop
xor
dec
jmp
lcall
int3
inc
push
or
movsb
lcall
inc
je
xor
jl
shll
xor
adc
movsb
jge
aad
js
push
xor
fnstsw
jl
cmp
sbb
pop
pop
mov
ja
jns
xlat
push
pop
cmp
mov
sub
mov
in
add
fstl
imul
add
add
mov
push
in
rorb
orb
es
call
or
int3
out
cmp
xchg
jge
xlat
pop
adc
mov
aam
and
dec
movsl
pop
scas
fldcw
adc
xchg
xchg
cmpsb
cmpsb
out
pop
sahf
int
xor
cmp
and
roll
dec
xchg
add
iret
push
scas
lcall
insl
fnstsw
cmp
in
pop
cmp
lea
es
pusha
test
les
xor
inc
mov
add
dec
jo
sahf
add
shl
insb
pop
pop
fcmove
mov
pop
dec
out
int
arpl
push
dec
xor
dec
cs
lcall
scas
loope
shlb
daa
cld
lret
add
clc
pop
les
ljmp
push
jp
movsb
jnp
ds
cmp
fnstsw
inc
mov
pop
outsb
dec
aad
mov
or
cli
push
push
add
add
outsb
test
pushf
or
xor
int3
jno
mov
push
jmp
adc
loop
cmpsb
mov
out
adc
cmpsb
jp
stos
lds
in
xchg
jl
jo
push
addr16
dec
inc
xor
cmp
scas
leave
inc
cld
add
cmp
add
es
or
div
stos
bound
add
add
scas
mov
mov
enter
int
inc
orl
mov
adc
lcall
jns
gs
test
sbb
sbb
jecxz
mov
xor
add
imul
adc
jne
or
and
lods
adc
push
push
pushf
addr16
dec
or
jb
mov
sbb
fimuls
add
ds
push
or
add
add
bound
xchg
mov
into
pop
jno
cmp
ja
push
pop
pop
xchg
movsl
pop
dec
sbb
and
bnd
in
pop
ficomps
jl,pt
gs
repz
cmp
mov
mov
xchg
jecxz
sahf
std
in
jl
xchg
sub
xchg
and
or
testl
in
mov
std
inc
push
ljmp
pop
sub
ds
jne
insb
push
nop
fidivl
push
test
lock
mov
push
leave
or
and
add
or
add
pop
push
add
sub
popf
inc
hlt
ljmp
outsl
jle
es
inc
xorb
int3
mov
pop
xchg
fcoml
and
inc
mov
ss
sbb
add
pop
cmp
aad
mov
into
rcl
inc
imul
push
test
call
add
inc
jb
jb
in
add
pop
adc
out
testb
and
shl
subl
aaa
fdivl
popf
cmp
in
pop
mov
movsb
mov
xor
pop
dec
filds
dec
pop
jl
bnd
sbb
outsl
pushf
xor
sbb
xchg
jecxz
adc
incb
sbb
out
in
loop
and
scas
fnstenv
mov
sahf
mov
sub
bound
add
sub
jbe
add
lds
jno
mull
pop
cmp
mov
jge
push
jae
or
sub
jne
xchg
test
mov
cmc
mov
xor
jb
je
add
mov
imul
mov
arpl
and
test
cmp
test
out
jb
or
jge
jge
lods
lods
sub
sahf
sti
add
in
repz
or
add
jl
mov
pop
dec
push
scas
lods
mov
jp
cmp
mov
aam
sub
inc
dec
icebp
je
mov
imul
pop
jmp
mov
sub
push
adc
pusha
and
xchg
mov
mov
rorb
and
insl
andl
fcompl
xchg
sub
inc
and
std
fldl
add
lahf
in
aam
pop
das
jg
push
iret
or
sahf
jnp
xor
popa
scas
sub
addb
scas
dec
adc
jb
inc
pop
cmc
add
pop
inc
aad
call
rcrl
push
xor
std
mov
popa
cmp
sbb
aam
aad
mov
and
push
shll
push
adc
mov
adc
imul
dec
jae
sbb
mov
out
cmp
aaa
add
es
loope
fisubl
jle
push
mov
loope
in
or
mov
in
addr16
lock
adc
out
and
cwtl
in
push
orb
xchg
test
test
cltd
cmp
dec
stos
jl,pn
pop
lahf
fwait
getsec
in
out
outsb
jg
in
cmp
sbb
inc
out
add
pop
xorb
sub
xchg
fsubrl
add
sbb
cmp
mov
hlt
pop
pusha
fadds
pop
mov
sbb
out
pop
mov
inc
movsb
or
mov
jmp
and
sbb
test
mov
jnp
xchg
jmp
sub
insl
test
cmpsb
adc
xchg
and
push
imul
push
loop
pop
xor
jne
mov
cmc
repnz
pop
cld
outsl
adc
cmp
add
arpl
push
mov
mov
test
js
out
aas
sbb
pop
cmpsl
sub
lods
pop
xor
nop
inc
add
arpl
lods
js
int
notl
cmp
imul
sbb
push
pop
ret
mov
mov
ss
pop
xlat
mov
sub
and
fnsave
or
std
cmp
std
pop
adc
or
cltd
lock
cli
or
inc
and
int3
cwtl
test
xorl
mov
daa
xor
sbb
sub
aad
sub
push
xchg
push
mov
lods
ficomps
test
cmp
push
bnd
ss
cld
fidivl
int3
ror
adc
pop
fwait
sub
fstpt
fcmovu
mov
and
cmpsb
push
mov
orl
adc
js
xchg
shll
add
add
or
add
fisubs
add
inc
adc
test
rol
lea
and
and
mov
sbb
jg
aas
mov
iret
into
fbstp
pop
pop
inc
add
dec
inc
cwtl
push
jge
enter
cvtps2pd
dec
aaa
or
imul
xchg
inc
aam
xchg
data16
adc
pusha
mov
add
push
cs
dec
pop
inc
outsb
xlat
in
jecxz
push
xchg
negb
mov
cmp
add
iret
repz
mov
push
xchg
and
in
insb
xchg
cmpsl
pop
mov
lods
adc
fbld
pop
jmp
loopne
out
mov
or
pop
je
call
mov
jo
sub
or
dec
stc
scas
es
add
xor
xchg
je
lods
mov
push
sub
sbb
popa
mov
std
pop
fisttps
fwait
adc
movsl
xor
sbb
iret
and
lret
adc
clc
mov
xchg
sahf
out
in
test
negb
mov
lret
test
push
test
in
ds
ficomps
cltd
rclb
and
sbb
push
mov
ds
dec
mov
aaa
xchg
add
xorl
push
adc
adc
cmp
pop
lds
sub
out
outsl
pop
cmp
cmp
mov
int
idivb
sub
lret
adc
pop
adc
push
mov
cvtpi2ps
or
cmp
in
xchg
ljmp
pop
call
mov
push
sub
mov
jmp
dec
sbb
jbe
jecxz
clc
add
mov
insl
sbb
repz
jl
dec
addr16
cli
xchg
pop
stos
jp
lcall
notb
adc
or
addl
enter
scas
and
jbe
sub
fistl
dec
out
aas
es
xor
push
out
cs
inc
sbb
lods
shlb
mov
scas
fsubs
adc
cmp
push
pop
mov
leave
jecxz
mov
sbb
add
add
pop
mov
mov
dec
pop
leave
cmpsl
in
sub
arpl
mov
pop
stos
jg
inc
jno
roll
and
xor
ljmp
pop
int3
and
mov
xchg
insb
sub
cmp
mov
sub
testb
mov
and
mov
rclb
int3
repnz
fiaddl
mov
sbb
sub
push
popf
push
scas
lea
in
add
adc
mov
adc
fists
test
or
xor
popa
ljmp
loope
outsb
stos
push
jle
sub
adc
enter
jge
xchg
arpl
js
xchg
mov
jg
cltd
loope
fnstcw
test
mov
push
sbb
insl
repnz
aad
sahf
xchg
jbe
imul
lods
fdivrs
sub
inc
sub
scas
fnstenv
loopne
cwtl
fcmovu
mov
push
mov
add
enter
pop
jbe
out
sbb
je
fdivrl
inc
jg
push
dec
pop
pop
inc
call
jp
jp
sub
mov
adc
scas
xor
repnz
adc
adc
push
mov
adc
loopne
inc
adc
insl
jmp
dec
nop
inc
cmpsb
rorl
inc
aad
imulb
das
imul
rcll
jecxz
aam
push
jae
js
repnz
xlat
push
cltd
je
push
lods
test
sbb
jl
cmp
movsb
sbb
or
fs
mov
add
push
repz
pop
pop
add
into
fcoms
andl
push
pop
mov
lcall
xor
fnstsw
sahf
sub
stos
in
xchg
lods
outsl
push
mulb
jae
in
mov
fldl
inc
inc
scas
jae
xorl
addr16
pop
push
dec
lahf
mov
push
insb
jge
les
pop
mov
cltd
in
int
add
ss
iret
inc
sbbl
mov
fmull
lcall
lea
adc
test
xchg
in
inc
pop
mov
mov
sbb
shlb
iret
lods
jl
insb
push
aaa
and
xlat
divl
sarb
popa
dec
cmp
repnz
sub
jns
ja
fwait
jns
xor
rolb
or
add
stc
es
adc
jg
inc
pop
sub
orb
pop
test
iret
push
ffree
fisubrl
call
ret
pop
xor
cmpsb
sub
add
mov
add
push
xchg
fnstsw
dec
mov
xchg
fists
jmp
sbb
bound
mov
shlb
adc
repz
popa
mov
add
fcmovb
sub
lock
dec
les
ljmp
sbb
xor
add
add
push
daa
and
mov
xor
mov
ret
mov
mov
fs
xchg
js
and
xchg
mov
lcall
test
xorl
pushf
hlt
loope
xchg
mov
out
pop
adc
repnz
arpl
enter
dec
mov
rcll
add
add
adc
xchg
in
mov
xchg
sub
push
adc
fs
push
loope
mov
stos
and
scas
xchg
shl
mov
fs
and
mov
push
push
or
stos
mov
and
ds
push
divb
pushf
mov
int
pushf
and
mov
sbb
movsl
shll
popa
sub
bound
test
sub
pusha
xchg
mov
and
push
pop
add
add
xor
mov
add
mov
mov
lea
inc
inc
in
xor
rcrb
and
imul
cmpsl
jno
jne
cwtl
add
inc
imull
add
mov
sub
jmp
mov
dec
and
mov
and
dec
cmp
arpl
sub
cmp
popf
movsl
icebp
pushf
call
clc
sbb
cmp
lea
push
pusha
push
