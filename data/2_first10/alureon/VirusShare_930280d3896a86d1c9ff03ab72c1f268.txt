ja
in
add
imul
add
imul
add
insb
add
in
add
insb
adcl
insb
adcl
add
inc
arpl
mov
leave
in
add
dec
insb
xorl
add
dec
insb
sbbl
insb
xorl
insb
adc
in
add
insb
cmp
in
add
lret
daa
lret
fisttpll
addl
add
dec
insb
cmpl
add
dec
insb
sbbl
insb
andl
insb
add
in
add
insb
and
in
add
lret
in
add
lret
in
add
dec
insb
cmpl
add
leave
in
add
lret
in
add
insb
add
in
add
insb
sub
in
add
hlt
in
add
hlt
in
add
je
andl
add
je
orl
insb
adc
in
add
insb
or
in
add
insb
sub
in
add
cmc
in
add
cmc
in
add
jne
xorl
add
jne
xor
in
add
insb
subl
insb
xorl
insb
adcl
insb
cmpl
add
dec
insb
addl
add
dec
insb
cmpl
in
add
enter
dec
insb
sbbl
insb
andl
arpl
lods
ret
jecxz
sub
add
jo
cmpl
add
jo
andl
insb
cmpl
insb
andl
insb
orl
insb
adc
in
add
insb
cmp
in
add
lock
add
ja
orl
add
ja
cmpl
in
add
imul
add
insb
sbb
in
add
inc
arpl
pop
inc
arpl
xlat
ret
jecxz
sub
arpl
rol
jecxz
cs
arpl
lods
ret
jecxz
pop
inc
arpl
stos
ret
jecxz
push
inc
arpl
fcmovb
jecxz
sub
add
ret
jecxz
mov
ret
jecxz
jg
arpl
rol
jecxz
pop
inc
arpl
scas
ret
jecxz
pop
inc
arpl
aad
jecxz
push
inc
arpl
mov
jo
andl
arpl
and
cmpl
jge
mov
enter
jnp
and
cmpl
enter
dec
add
adc
mov
arpl
and
andl
and
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
add
orl
arpl
and
andl
arpl
and
andl
arpl
and
sbbl
arpl
jecxz
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
imul
adc
sub
popf
test
sbb
pop
jg
and
sub
jg
sahf
test
out
sbb
fdivrp
int3
mov
aam
adc
sub
xlat
testl
in
push
jno
sahf
pop
cmp
insb
mov
int
push
push
jecxz
mov
push
xor
xlat
arpl
mov
call
mov
jecxz
xchg
call
mov
ret
jecxz
xchg
sbb
pop
fs
mov
enter
jge
imul
jecxz
xchg
fildll
push
or
jecxz
popf
test
call
inc
push
jle
mov
push
jg
inc
push
or
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
sbb
and
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
imul
jnp
imul
jecxz
imul
jnp
imul
jecxz
imul
jge
mov
cmp
add
icebp
out
jmp
mov
pop
or
add
enter
push
popf
mov
enter
jecxz
outsb
in
aas
sub
mov
enter
jecxz
mov
std
adc
push
ds
jno
notl
mov
test
enter
jbe
les
mov
lock
sub
sbb
fdiv
stc
or
js
lcall
dec
mov
lock
or
js
insb
inc
arpl
mov
mov
xchg
and
adcl
dec
xchg
lahf
stos
std
call
mov
andb
int
or
lahf
mov
enter
dec
push
fs
jecxz
and
adcl
dec
xchg
xchg
out
or
add
jns
sub
cs
push
xor
shl
sbb
pop
jg
mov
dec
insl
mov
je
mov
lock
push
jl
mov
pop
test
mov
pop
jnp
mov
mov
inc
arpl
and
cmp
and
inc
nop
mov
add
mov
add
nop
mov
add
xchg
mov
add
inc
arpl
pop
xchg
mov
add
xchg
mov
add
inc
arpl
out
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
addl
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
rcll
and
mov
ret
jecxz
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
stos
xchg
mov
add
inc
arpl
and
subl
add
inc
arpl
and
andl
arpl
and
andl
arpl
jae
mov
add
mov
add
mov
add
xchg
mov
add
inc
arpl
aaa
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
mov
add
xchg
mov
add
inc
arpl
out
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
aaa
xchg
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
xorl
add
xchg
mov
add
inc
arpl
and
subl
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
adcl
add
pop
and
scas
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
mov
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
adcl
add
mov
add
push
and
sub
and
ret
xchg
mov
add
xchg
mov
add
xchg
mov
add
inc
arpl
pop
xchg
mov
add
inc
arpl
and
addl
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
ret
xchg
mov
add
adc
mov
add
inc
arpl
and
andl
arpl
and
andl
mov
add
mov
add
inc
arpl
out
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
dec
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
sub
jecxz
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
xor
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
mov
add
xchg
mov
add
inc
arpl
pop
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
out
xchg
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
orl
add
xchg
mov
add
inc
arpl
and
subl
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
addl
add
xchg
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
fists
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
mov
adc
add
xchg
mov
add
adc
add
ret
jecxz
and
andl
arpl
and
andl
arpl
addr16
mov
add
inc
arpl
and
cmp
and
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
mov
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
inc
xchg
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
push
xchg
mov
add
xchg
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
mov
add
inc
arpl
and
subl
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
cmpl
mov
add
xchg
mov
add
imul
and
andl
arpl
and
andl
arpl
adc
addl
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
out
imul
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
orl
add
imul
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
cmp
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
mov
ret
jecxz
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
repz
mov
fmul
sbb
jb
icebp
out
or
insb
mov
pop
jae
jno
clc
orl
arpl
and
cmpl
dec
popf
mov
jo
mov
ret
jecxz
movsb
lods
lret
adc
adc
add
jp
lea
ja
mov
dec
xchg
mov
arpl
mov
imul
icebp
ret
jecxz
mov
in
ds
dec
lahf
jno
arpl
mov
int3
cmpl
dec
insb
mov
int3
sarl
ror
adc
stos
bnd
jecxz
mov
lret
pop
js
mov
in
or
inc
arpl
sar
cmpl
and
fdivrp
shlb
in
or
fsubs
icebp
push
dec
xchg
jno
clc
cmpl
mov
cmp
jecxz
mov
pop
jg
mov
sub
outsl
mov
mov
or
jb
mov
add
add
enter
dec
lahf
mov
jecxz
mov
repnz
and
xorl
je
and
xorl
je
jno
clc
cmpl
xor
stos
clc
adc
pop
js
mov
pop
icebp
pop
js
mov
sub
mov
add
add
pop
jp
jb
std
out
or
jecxz
mov
sub
mov
push
js
mov
sub
outsl
mov
arpl
pusha
inc
arpl
fmulp
in
cmp
inc
arpl
mov
mov
cmp
jecxz
mov
cld
xor
dec
sahf
mov
push
dec
xchg
bound
cmpl
dec
popf
mov
dec
popf
mov
xor
shlb
cmp
aam
adc
pop
jecxz
jno
repnz
mov
shl
push
or
orl
outsb
shll
xor
push
icebp
jb,pn
and
orl
push
and
orl
dec
pushf
mov
ret
jecxz
mov
add
add
sub
insb
mov
mov
xor
add
iret
sbb
mov
push
jo
jno
repz
mov
xor
icebp
pop
jge
lea
xchg
mov
into
adc
ret
jecxz
jno
imul
xor
push
mov
incl
jl
mov
cli
adc
pop
and
orl
dec
popf
mov
lcall
or
dec
push
mov
incl
mov
leave
sbb
push
jb
jno
repnz
adc
jb,pn
and
orl
pop
jno
std
adc
sub
mov
dec
xchg
mov
arpl
mov
enter
xor
shlb
or
jbe
and
xor
dec
insl
bound
orl
push
mov
lock
je
mov
jecxz
mov
iret
adc
adc
mov
arpl
mov
adc
add
enter
dec
sahf
mov
ret
jecxz
mov
in
cmp
mov
jecxz
jb
enter
jg
jno
adc
add
add
sub
xchg
mov
enter
jecxz
mov
into
sbb
mov
ret
jecxz
jno
hlt
sbb
adc
add
adc
ret
jecxz
mov
push
dec
sahf
jno
adc
ret
jecxz
mov
sub
add
hlt
out
or
add
repnz
or
xor
jb
icebp
out
or
jg
jb
arpl
mov
repnz
ret
jecxz
mov
pop
jle
mov
repz
dec
popf
mov
xor
mov
enter
jge
jno
arpl
mov
arpl
mov
push
jo
mov
jecxz
mov
arpl
mov
sub
stos
mov
sub
stos
mov
or
jb
jno
arpl
mov
arpl
mov
sub
add
jecxz
mov
ret
ret
jecxz
mov
push
dec
inc
and
xor
js
mov
ret
jecxz
jb
enter
dec
inc
and
cmpl
jp
mov
repnz
push
mov
aad
xor
dec
xchg
and
xor
jno
and
xor
je
and
xor
jae
and
xorl
dec
xchg
mov
enter
dec
sahf
mov
ret
jecxz
jb
into
ljmp
arpl
gs
mov
call
cmp
shl
sbb
pop
jb
std
in
xor
xor
or
mov
sti
rorl
pop
dec
add
jge
jno
sti
call
mov
adc
daa
or
enter
mov
call
mov
add
notl
xor
pop
xchg
mov
ret
jecxz
jl
mov
add
fcomip
repnz
pop
inc
popf
mov
ret
xor
push
mov
adc
sub
jo
in
or
call
or
xchg
push
jne
mov
ret
jecxz
push
filds
gs
mov
ds
mov
xchg
mov
or
mov
add
mov
sub
sahf
pusha
push
jg
gs
mov
ds
call
in
xor
mov
xor
and
sub
pop
jae
inc
arpl
cmpsb
push
jecxz
daa
sahf
mov
add
sahf
mov
add
sahf
mov
add
sahf
mov
add
push
and
xchg
sahf
mov
add
mov
add
mov
add
popf
mov
add
popf
mov
add
popf
mov
add
sbb
mov
add
mov
add
pushf
mov
add
pushf
mov
add
pushf
mov
add
sbb
add
sbb
add
sbb
add
mov
add
mov
add
xchg
mov
add
xchg
mov
add
xchg
mov
add
adc
add
adc
add
mov
add
mov
add
xchg
mov
add
xchg
mov
add
xchg
mov
add
xchg
mov
add
adc
add
ret
jecxz
movsb
shl
pop
xor
lahf
mov
rorl
push
jo
movsb
shl
pop
or
shl
cmpl
dec
xchg
mov
push
dec
xchg
and
cmpl
dec
lahf
mov
icebp
shll
dec
xchg
and
cmpl
dec
nop
mov
call
mov
add
pop
jg
mov
in
aaa
push
xor
cmp
mov
into
in
sub
outsb
mov
arpl
mov
int
or
dec
push
mov
lock
jno
mov
lock
dec
fwait
mov
std
sbb
adc
mov
arpl
mov
enter
dec
xchg
mov
arpl
mov
hlt
in
xor
dec
push
mov
lock
jo
mov
push
jecxz
mov
push
jno
mov
rorl
push
xor
sub
mov
nop
and
cmpl
dec
cwtl
mov
sub
outsl
mov
mov
aaa
push
dec
sahf
mov
call
push
push
jo
mov
push
dec
sahf
mov
push
jo
mov
push
xor
shlb
xor
nop
mov
repnz
mov
push
jge
mov
push
jno
mov
ret
jecxz
mov
std
adc
call
and
xorl
jge
mov
pop
dec
push
mov
lock
jae
mov
in
xor
adc
test
adc
push
dec
push
mov
lock
jg
shl
adc
pop
jle
mov
pop
cmp
fdiv
rorl
push
jo
mov
pop
or
fwait
jno
repnz
fdivr
sbb
shlb
aaa
push
dec
xchg
mov
int3
out
cmp
jge
mov
adc
mov
arpl
mov
pop
jae
mov
call
push
push
jo
mov
int3
sbb
adc
movsl
inc
arpl
mov
std
sbb
adc
mov
arpl
mov
call
push
push
jo
mov
lret
call
mov
arpl
mov
clc
add
push
dec
xchg
mov
mov
xor
add
push
fs
mov
sub
add
push
jo
mov
je
jno
repnz
lods
in
or
enter
dec
lahf
jno
repnz
lods
in
cmp
scas
mov
aaa
ret
jecxz
mov
push
cmp
outsb
mov
arpl
mov
in
cmp
scas
call
mov
jecxz
mov
imul
push
mov
mov
ss
jecxz
mov
std
sbb
adc
mov
std
adc
inc
dec
insb
icebp
jb,pn
and
orl
jge
mov
call
mov
lret
sub
mov
push
jge
mov
std
sbb
sub
mov
xor
add
adc
mov
not
push
push
jo
mov
std
sbb
adc
mov
push
fs
mov
lock
jge
mov
lret
adc
pop
jb
movsl
sar
sarl
sar
sbb
adc
xlat
call
pop
dec
popf
jno
repnz
shl
ljmp
arpl
mov
enter
ja
mov
call
push
push
jo
mov
cwtl
mov
into
adc
ret
jecxz
shl
call
mov
pop
jecxz
shl
in
xor
jg
mov
mov
cmp
jecxz
ror
adc
push
jb
jno
repnz
pop
xor
xchg
mov
sub
aam
out
or
outsb
mov
jecxz
mov
xchg
mov
mov
xor
add
pop
xor
push
push
jo
aam
in
xor
mov
adc
mov
arpl
or
xor
or
test
adc
push
jae
mov
hlt
adc
jb,pn
and
orl
push
mov
lock
mov
imul
or
dec
push
add
dec
xchg
mov
iret
rorl
push
jo
mov
jle
mov
rorl
push
jo
mov
dec
insl
mov
pop
or
xchg
mov
mov
xor
add
dec
insb
mov
enter
jb
and
sbbl
dec
lahf
mov
xor
sar
adc
pop
inc
je
sbb
push
pop
dec
popf
xchg
pop
jge
fisubs
and
xor
and
pop
cwtl
mov
add
sbb
add
sbb
add
mov
add
mov
add
sbb
add
mov
add
inc
arpl
clc
sti
push
mov
and
push
mov
in
add
inc
arpl
and
leave
push
add
jecxz
and
or
mov
adc
and
push
movsl
or
jnp
jecxz
xchg
xor
mov
pop
adc
dec
mov
ret
xchg
fstpl
mov
mov
jecxz
push
repnz
test
ss
in
ds
dec
imul
stos
scas
mov
mov
sub
mov
das
and
orl
jno
and
xorl
je
and
xorl
jecxz
sahf
mov
leave
ljmp
leave
jmp
sub
inc
arpl
imul
ja
mov
dec
sahf
push
sub
cmpl
jecxz
popf
fdiv
sbbl
dec
lahf
mov
xor
sar
adc
pop
inc
jp
ror
adc
pop
add
cmpsl
scas
sbb
mov
jb
xchg
dec
xchg
mov
arpl
mov
xor
sar
adc
pop
inc
jp
ror
adc
pop
inc
dec
mov
pop
pop
push
xor
jecxz
mov
std
push
adc
mov
cmpl
jno
mov
repnz
sub
and
orl
jae
mov
enter
jnp
and
sbbl
add
arpl
mov
cs
lahf
mov
icebp
jecxz
xchg
lods
stc
in
ds
mov
movsl
mov
outsb
shl
pop
or
push
xchg
test
ljmp
arpl
mov
ret
jecxz
cwtl
fmulp
sbb
mov
movsl
mov
imul
pop
in
jecxz
mov
das
dec
lahf
mov
jecxz
outsb
shl
pop
or
push
lahf
repz
mov
hlt
out
or
je
mov
sti
sarb
pop
jp
mov
std
adc
pop
jge
mov
into
adc
sub
push
mov
sub
mov
inc
ret
call
repnz
sub
jo
enter
dec
inc
inc
push
pop
jg
push
pop
jae
pushf
mov
shl
sub
enter
dec
fisubrs
xchg
mov
sub
arpl
xor
mov
shl
pop
or
push
lahf
repz
mov
hlt
out
or
je
mov
sti
sarb
pop
jp
mov
std
adc
pop
jge
mov
into
adc
sub
push
mov
sub
mov
inc
ret
call
into
sbb
mov
sub
mov
or
push
ja
mov
pop
cs
mov
push
mov
fcomip
into
cmp
mov
dec
popf
mov
ja
fdivrp
enter
popf
and
or
add
mov
sbb
add
mov
sti
adc
jle
mov
add
icebp
pop
or
push
lahf
repz
push
jne
sbbl
jle
mov
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
and
orl
add
inc
arpl
fwait
mov
add
inc
arpl
and
andl
mov
add
inc
arpl
and
andl
arpl
and
andl
arpl
lcall
add
jns,pn
mov
sbb
arpl
mov
jno
and
cmpl
arpl
mov
mov
add
fcomip
repnz
pop
inc
popf
mov
ret
xor
push
mov
adc
sub
jo
in
or
call
or
xchg
push
jne
mov
cmc
or
out
jg
mov
nop
mov
sub
nop
mov
pop
dec
popf
mov
jmp
mov
in
push
insb
mov
push
jae
dec
adcl
pop
icebp
push
jb
mov
hlt
adc
adc
mov
jg
gs
mov
ds
mov
xchg
mov
or
mov
xor
cmp
jo
repnz
nop
mov
adc
mov
mov
jae
pushf
mov
ret
push
xor
mov
sbb
das
adc
aas
push
jb
arpl
xchg
mov
enter
jb
gs
pop
xor
xor
xchg
mov
lock
adcl
pop
cwtl
mov
in
or
js
xchg
test
adcl
sub
or
dec
jns
xlat
clc
call
xchg
sbb
pop
fs
test
jg
mov
test
add
pop
fs
aad
out
aas
ret
jecxz
xchg
adc
push
pop
imul
jecxz
xchg
sbb
pop
fs
test
jg
mov
fucomip
cmp
inc
arpl
mov
in
xor
jb
mov
call
push
push
popf
mov
enter
jecxz
xchg
sbb
pop
fs
fdivrp
call
mov
lock
aas
push
jb
and
sub
jg
mov
clc
pop
or
je
mov
jnp
and
sub
js
xchg
out
or
jo
scas
clc
pop
or
add
adc
mov
arpl
dec
scas
arpl
mov
das
jge
mov
push
dec
outsl
xchg
aam
sbb
and
or
inc
sub
pop
inc
push
jno
sti
call
mov
enter
inc
sub
call
arpl
movsb
lods
lret
adc
adc
mov
arpl
mov
lock
jge
xchg
out
mov
sar
pop
or
ja
mov
testb
inc
arpl
and
subb
arpl
fsts
adc
in
xchg
and
jo
rcrb
adc
push
iret
and
dec
xor
sbb
rcl
jecxz
and
cmp
aaa
mov
add
pusha
and
psllq
adc
add
and
sbb
fistps
ljmp
jecxz,pt
imul
and
xor
xor
add
imul
cmp
xor
jno
xorl
clc
mov
scas
out
inc
push
outsl
mulb
sbb
pop
mov
cmp
out
inc
daa
push
mov
pop
mov
lock
test
les
gs
inc
cld
and
lret
pop
lods
push
inc
js
mov
stc
inc
js
repnz
call
in
sub
lret
push
leave
dec
push
xchg
pop
sub
push
pop
mov
sti
jbe
dec
int3
pusha
nop
leave
pop
push
or
cltd
sub
inc
mov
fnstsw
push
dec
mov
mov
mov
imul
fwait
jg
arpl
pop
sti
xchg
insb
data16
jo
lock
dec
mov
mov
lods
mull
xchg
inc
int
mov
jmp
cmpsb
insb
fucomip
lea
movsb
mov
xchg
push
cmp
cmpsl
lret
and
and
insl
xchg
nop
inc
mov
mov
mov
lds
ret
cmpsl
scas
or
push
pop
shlb
fsubrl
xor
and
fucomip
dec
dec
rclb
sbb
gs
dec
or
fiadds
aaa
adc
pusha
out
call
stos
shl
push
shrl
dec
jp
enter
mov
int3
jno
vpand
aam
jnp
sar
jmp
dec
fiaddl
mov
shl
daa
mov
inc
ret
dec
mov
and
lds
fcoms
fsubr
clflush
push
dec
out
scas
xchg
aas
loope
jo
lret
movsl
cmc
add
rolb
lret
xor
out
jle
adc
fucomp
and
or
dec
sbb
stos
enter
ja
or
adc
out
add
xchg
pop
xor
inc
lds
pop
mov
ljmp
and
out
cmpl
stc
mov
fistpl
pop
inc
repnz
mov
mov
lret
test
adc
xchg
xchg
push
mov
lds
outsb
rolb
cwtl
and
sub
add
leave
push
sahf
dec
testb
inc
inc
mov
lret
std
pop
pop
pop
imull
mov
sub
popa
push
movsl
enter
pop
pop
and
ds
ret
jl
push
pop
push
popa
les
adc
jae
dec
cmpsb
dec
pop
into
xchg
inc
outsb
jne
push
lock
cmpsl
bound
ljmp
xor
cmp
push
mov
mov
jno
mov
jp
movl
insl
sub
shrb
inc
mov
xchg
cltd
mov
xchg
mov
and
xchg
adcb
insb
mov
mov
int
sahf
ret
push
lods
adc
jp
dec
out
jno
push
outsb
les
dec
stos
cmp
jae
or
rcll
pop
fs
ret
xchg
push
xchg
cmpsl
aam
loope
popa
and
cmp
frstor
jne
jle
jle
out
aas
scas
test
rol
fimuls
jo
cmp
jg
stos
inc
scas
icebp
inc
dec
fdivrp
mov
dec
lods
out
pusha
fists
push
icebp
xchg
dec
mov
insl
rol
ret
jecxz
inc
arpl
pop
inc
arpl
and
subl
arpl
sub
adc
jecxz
sub
adc
jecxz
das
inc
arpl
cs
arpl
sub
ret
jecxz
sub
arpl
cs
outsl
subl
imul
inc
nop
adc
sbb
pop
inc
lcall
inc
mov
inc
add
fiadds
scas
inc
push
subl
add
ret
jecxz
and
andl
arpl
sub
insb
subl
subl
outsb
subl
outsl
subl
push
add
inc
into
orl
jecxz
sub
insl
subl
push
aam
adc
pop
inc
test
insb
inc
int3
subl
add
in
mov
insb
mov
insb
mov
sub
insb
jecxz
ret
jecxz
and
subl
subl
outsl
subl
imul
aam
adc
push
inc
xchg
adc
push
add
xchg
adc
adc
and
subl
addb
inc
bound
jb
mov
and
adc
jecxz
sub
andl
sbb
sub
test
pop
ret
push
dec
nop
mov
in
mov
dec
arpl
pop
dec
arpl
pop
dec
arpl
pop
dec
arpl
pop
dec
arpl
pop
dec
arpl
pop
dec
arpl
pop
dec
arpl
sub
int3
in
or
dec
insb
mov
insb
mov
insb
mov
insb
mov
insb
mov
insb
mov
insb
mov
dec
outsl
scas
iret
out
movaps
scas
iret
out
movaps
scas
iret
out
movaps
scas
iret
out
movaps
scas
iret
out
movaps
scas
iret
out
movaps
scas
iret
out
movaps
mov
inc
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
mov
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
frstor
add
fisubs
add
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
push
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
frstor
add
hlt
jecxz
frstor
add
frstor
add
fsubl
add
fsubl
add
fisubs
add
fbld
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
jecxz
and
andl
mov
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
std
jecxz
push
fsubl
add
fsubl
add
std
jecxz
push
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
es
push
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
hlt
jecxz
cltd
fisubs
add
cmp
mov
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
cmp
mov
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
cmp
mov
add
cmp
mov
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
cmp
mov
add
cmp
mov
add
fsubl
add
fsubl
add
cmp
mov
add
hlt
jecxz
cltd
fisubs
add
fsubl
add
fsubl
add
fsubl
add
cmp
mov
add
fsubl
add
fsubl
add
ret
jecxz
and
orl
arpl
and
leave
or
pop
repnz
push
add
ret
xchg
xor
adc
inc
arpl
and
leave
enter
push
imul
xchg
and
movsb
insb
add
fists
and
jecxz
and
in
add
inc
arpl
and
leave
mov
inc
arpl
and
leave
lret
pop
push
imul
xchg
and
movsb
fwait
mov
test
dec
jecxz
and
cmc
test
jecxz
and
testl
inc
bound
arpl
clc
add
inc
jle
and
loop
jle
leave
push
jne
pusha
or
xchg
bsf
jecxz
fcoms
add
test
add
lock
imul
arpl
and
mov
push
iret
andl
lret
mov
aam
imul
sub
or
mov
inc
and
test
dec
dec
in
dec
and
jg
arpl
sbb
inc
push
xor
lret
arpl
mov
dec
arpl
mov
pop
outsb
adcb
sbb
pop
dec
mov
into
sti
mov
pop
and
js
mov
add
test
mov
shrl
xor
add
push
add
mul
cltd
das
mov
pextrw
mov
dec
out
add
mov
mov
mov
adc
mov
inc
arpl
rolb
xor
fists
and
in
or
push
sub
es
cwtl
divb
mov
pop
add
mov
imul
lods
xor
sbb
arpl
push
or
mov
movsb
pushl
insl
xchg
not
xor
mov
or
xor
push
push
adc
xor
jo
xor
inc
sub
xlat
je
or
push
loop
mov
sub
add
clc
cmpsl
je
pop
xchg
into
loopne
mov
and
mov
mov
mov
outsl
outsl
jmp
push
cmp
stc
push
pop
jmp
mov
mov
jecxz
mov
call
pop
ss
cmpsl
jne
xchg
mov
and
mov
loopne
sbb
and
xor
pop
inc
pushf
into
sub
and
call
dec
cmp
push
add
ret
sub
insl
frstor
inc
hlt
out
imulb
jns
inc
fcmovu
mov
loop
call
aas
sbb
and
imul
xchg
and
mov
arpl
jecxz
jne
and
roll
aam
jbe
inc
and
mov
mov
dec
fs
clc
fwait
push
loopne
cmp
inc
adc
and
jae
js
mov
and
mov
dec
jnp
mov
arpl
push
add
pushf
ret
mov
xlat
and
and
sbb
and
scas
scas
fbld
xchg
push
or
loopne
mov
dec
dec
arpl
aas
adc
call
inc
and
xorb
ret
mov
inc
jecxz
test
and
cmp
outsb
leave
das
imulb
push
loope
js
jge
rorl
inc
into
sbb
popl
and
repz
jp
and
jae
mov
inc
lods
orl
insl
loop
cmp
pop
sub
orl
addr16
outsb
iret
inc
enter
and
repz
inc
dec
mov
ret
jecxz
imul
aaa
test
clc
imul
fsubr
pop
and
scas
add
mov
in
add
in
imul
mov
setae
outsl
lea
mov
cs
mov
mov
or
inc
or
mov
add
add
and
xchg
sub
mov
mov
lret
das
mov
ss
sbb
and
pop
jbe
jge
andl
bound
cmpsb
mov
and
mov
bound
push
por
xlat
arpl
sub
xorl
push
jmp
arpl
insb
inc
flds
insb
dec
or
mov
dec
dec
adc
ret
jecxz
sub
subl
sbb
fcomps
sbb
and
scas
shrl
jg
mov
cmc
andl
mov
add
into
das
mov
xchg
in
data16
mov
pop
mov
dec
call
adcl
mov
jb
daa
mov
mov
jecxz
jecxz
sbb
stos
ret
and
xchg
sbb
out
dec
fisttpl
cwtl
cmpsl
idivb
xchg
arpl
rcr
add
jae
jg
ret
ss
jecxz
xor
das
mov
sbb
sub
mov
mov
push
js
jecxz
sbb
andl
dec
daa
mov
arpl
repz
xchg
push
idiv
mov
pop
mov
jae
ret
push
or
add
pushf
ret
mov
sbbl
aad
subl
pop
mov
mov
sbb
and
test
sub
jmp
jmp
and
orb
ss
out
jmp
cmp
rdpmc
test
inc
sbb
sbb
andl
pop
aas
mov
dec
cmpsb
iret
iret
js
and
pop
lahf
push
inc
cwtl
sti
faddl
jecxz
jecxz
lahf
xchg
stos
fadds
arpl
or
fsts
mov
push
insl
fisubs
inc
into
or
not
scas
stos
add
movswl
ret
rorl
cwtl
aas
push
fdivs
mov
pop
mov
dec
call
fadds
subl
pop
add
push
andl
bound
xlat
xor
and
push
outsl
imull
mov
dec
stc
cwtl
inc
aad
sbb
sbb
and
jne
and
jae
outsl
notl
xlat
dec
mov
xchg
mov
xchg
pushf
ret
mov
inc
hlt
andl
imul
imull
push
aad
xor
iret
loop
jae
mov
aaa
and
mov
or
scas
aaa
aam
bound
xlat
xor
cmp
mov
sub
and
ss
push
add
ret
jg
and
xchg
sbb
sbb
and
and
int
sub
data16
add
cld
and
test
decl
cmp
dec
ss
rorb
testl
push
inc
push
inc
pop
mov
dec
std
negb
cmp
xorl
outsl
ret
sub
ret
sahf
sub
mov
mov
loop
sub
addl
mov
sub
adc
ret
outsb
iret
push
imulb
loope
in
pop
jecxz
rorb
testl
mov
outsl
in
inc
arpl
add
adc
mov
inc
arpl
test
arpl
andb
mov
ret
xor
adc
mov
pop
jmp
mov
sub
repz
inc
call
xor
jbe
pop
pop
andl
pop
adc
cmp
add
ret
jg
and
lahf
xor
loope
and
mov
and
and
scas
setae
sub
loope
and
loop
int3
dec
arpl
mov
inc
cwtl
rcl
add
xchg
and
mov
pop
pop
add
ret
xor
imul
into
and
push
andl
pushl
and
roll
and
sub
andl
insl
andl
bound
jecxz
adc
shl
ds
leave
push
jne
push
jmp
int
add
sub
and
and
and
imul
ret
loope
and
jecxz
xchg
in
imul
sub
ret
push
enter
addl
mov
out
or
inc
fdivrp
xor
sahf
and
pusha
shl
and
add
imulb
out
and
lods
ret
jecxz
sahf
inc
cwtl
jmp
add
jae
js
mov
test
popa
andb
arpl
and
je
inc
bound
outsl
ljmp
andb
add
iret
and
lods
mov
shrl
frstor
outsb
pop
push
mov
and
cltd
lock
scas
xlat
cmp
cltd
adc
jne
lcall
das
inc
hlt
ljmp
outsl
outsl
xchg
imul
andl
fistpll
inc
pop
repz
inc
push
xchg
push
xchg
mov
fadds
dec
mov
dec
and
mov
and
imul
fs
or
add
fcomp
cmpb
dec
jg
andl
adc
add
stos
sbb
and
scas
scas
shrl
jecxz
and
andb
pop
jmp
ret
jecxz
mov
bound
iret
sti
pop
add
hlt
scas
scas
jae
andl
pop
jmp
mov
bound
ret
cmpsl
outsl
xchg
cmpl
loop
dec
jae
andl
scas
scas
inc
popa
or
mov
cmp
call
jle
cmpl
and
push
fists
cwtl
sub
jnp
mov
or
fcmovnu
les
adc
clc
mov
push
pop
pop
cmpsb
arpl
repz
mov
add
mov
pop
mov
mov
and
cltd
sahf
jns
cmp
pop
lahf
jo
bound
xlat
stos
gs
and
fwait
sbb
js
or
andb
call
xchg
and
faddl
jecxz
and
mov
and
fwait
lcall
jp
into
or
sbb
data16
mov
mov
fisubs
cmpsb
rorb
pop
mov
into
ja
dec
pop
push
inc
and
inc
or
and
mov
pop
xchg
punpckldq
jecxz
mov
jecxz
and
jecxz
and
test
popa
imul
and
divl
inc
out
xchg
shrl
test
add
jecxz
xchg
pop
enter
mov
test
cs
or
ss
jo
sbb
inc
ffree
mov
jl
enter
or
mov
jecxz
sub
jne
jmp
clc
xor
inc
rcll
and
dec
xlat
jbe
add
xchg
ret
mov
mov
or
ret
push
add
fwait
sbb
push
mov
inc
pushf
push
loop
jg
scas
andl
or
in
mov
hlt
test
add
ret
and
imul
xor
mov
cmp
lea
aad
fiadds
add
mov
inc
bound
mov
xor
sarb
subb
repz
inc
jle
or
popf
ret
mov
inc
jmp
int3
jecxz
xchg
mov
sbb
andl
clc
dec
cmp
inc
push
sbb
push
jmp
cltd
sub
mov
inc
clc
scas
mov
flds
loop
push
inc
clc
mov
pop
jmp
sbb
adc
in
jg
andl
data16
sbb
or
mov
pop
shll
sub
loope
and
jecxz
and
loop
xchg
lock
imul
sbb
call
push
pusha
andb
arpl
outsl
out
outsl
ret
mov
loop,pt
int3
dec
arpl
mov
shrl
jns
jecxz
scas
setae
add
jg
and
addr16
adc
sahf
and
andb
js
push
out
xchg
xlat
jbe
aaa
mov
lock
cmp
jecxz
inc
dec
sahf
ret
mov
iret
and
push
into
dec
subl
sbb
andl
sbbb
jb
and
pop
arpl
popa
sti
out
add
mov
sbb
andl
clc
daa
cmp
inc
push
fwait
sub
jg
rorb
jne
and
xchg
cmpb
loop
push
mov
pop
mov
adc
out
lret
insl
sbb
push
scas
lahf
dec
test
fcoml
mov
sub
mov
mov
add
into
das
mov
jmp
loop,pt
lahf
jl
adcl
sbb
andl
ret
pop
inc
clc
cmpsl
mov
jg
sbb
ret
and
imul
or
loope
std
loop
inc
inc
clc
mov
mov
lret
loop
xchg
pop
scas
push
xchg
add
ret
pusha
outsl
mov
mov
xlat
sbb
xor
fists
xor
arpl
push
iret
inc
andl
push
mov
mov
cmp
and
gs
dec
scas
add
inc
pop
imul
lods
sbbl
fwait
mov
enter
push
mov
subl
js
pusha
jnp
in
ret
push
andl
and
mov
bound
xchg
inc
cwtl
faddl
jecxz
cmp
bound
or
sub
xchg
mov
js
and
imul
xchg
pushl
or
mov
mov
in
mov
out
dec
inc
pop
filds
jae
dec
arpl
mov
sub
iret
pop
enter
mov
add
fiadds
and
and
mov
mul
cwtl
push
inc
clc
mov
imulb
xchg
test
inc
pop
loop
es
sub
ss
testl
sbb
xchg
cwtl
inc
inc
clc
rorl
inc
and
xchg
pusha
daa
inc
clc
stos
mov
arpl
cmpb
loop
pop
inc
clc
mov
pop
pop
add
mov
scas
ret
jecxz
arpl
in
and
and
push
leave
push
jne
push
repz
lods
arpl
test
shrb
cs
arpl
rorb
or
das
sbb
add
into
je
rorb
mov
cmpsb
sahf
push
pop
add
scas
outsl
andl
xchg
iret
jecxz
sbb
adc
xlat
xor
sbb
mov
mov
add
xor
add
cwtl
push
or
ret
xor
outsl
andl
push
mov
jo
pop
cs
cmpsb
jbe
xor
mov
lcall
mov
out
lret
xor
pop
outsb
iret
push
dec
test
push
or
mov
dec
fs
shlb
xor
jmp
cli
mov
insb
iret
pop
jae
fmuls
add
mov
cmp
fsubr
xchg
lock
add
xor
movsl
sbb
inc
out
dec
ret
dec
mov
mov
mov
shlb
nop
outsl
outsb
mov
mov
xchg
cmpsb
xchg
xor
jbe
or
xchg
pcmpeqd
jecxz
and
imul
dec
push
mov
mov
xchg
dec
adc
jg
inc
sarb
inc
out
fistps
das
ss
into
jecxz
sub
push
repnz
je
pcmpgtb
and
jle
cmp
adc
push
xor
inc
push
jb
in
ret
jecxz
xor
fabs
adc
insb
inc
fdivr
push
ret
pop
pop
bound
jecxz
sbb
mov
fs
xchg
setl
loop
adcl
rorb
mov
adc
mov
xor
cwtl
dec
sub
mov
into
das
mov
or
mov
arpl
mov
mov
xor
sbb
jmp
outsb
int3
cmpl
mov
pop
loop
sub
repz
or
int3
dec
arpl
mov
cli
js
mov
add
aaa
in
adc
push
xor
mov
inc
adc
iret
into
in
mov
inc
adc
repz
out
mov
int
add
mov
mov
lret
fsubr
xchg
lock
loope
insb
jmp
insb
inc
fiadds
and
dec
fisttps
xor
add
and
mov
add
imulb
ficoml
pop
cs
out
mov
dec
adc
divl
inc
inc
fcomps
out
jecxz
pop
adc
ret
repnz
pop
sub
pop
notb
mov
mov
mov
jecxz
and
adc
inc
bound
outsl
ljmp
push
clc
and
outsb
pop
addr16
inc
jb
sub
popa
hlt
clc
scas
push
idivl
mov
lcall
ja
lahf
ficoml
lahf
je
clc
xlat
adc
js
or
std
andl
xchg
mov
out
xchg
dec
dec
imulb
movsb
add
mov
xchg
adc
mov
dec
lods
setl
xchg
popf
and
leave
out
js
sbb
shll
jmp
inc
lods
sbbl
xor
mov
subb
add
shl
subl
ss
xchg
dec
daa
hlt
shrb
daa
lock
shl
xchg
addb
out
lods
ret
jecxz
push
cmpsb
dec
rorb
or
inc
bound
stos
mov
scas
repz
lret
jecxz
and
incl
and
das
mov
jecxz
cs
fdivs
mov
outsl
cmpsb
jbe
dec
or
and
mov
out
mov
dec
movsb
mov
sub
arpl
mov
iret
popf
mov
xchg
das
lret
and
xor
add
sub
sbbl
sahf
mov
enter
andl
rorb
pop
and
rcll
push
lcall
push
hlt
rcl
push
cmp
pop
aaa
jae
fmuls
add
mov
dec
dec
imulb
add
jnp
lock
pop
aam
mov
lcall
cld
adc
js
or
cld
andl
imul
dec
arpl
jecxz
and
loop
out
arpl
inc
cmp
and
jbe
pop
aam
mov
mov
cmpsb
je
and
push
scas
lahf
insl
inc
clc
mov
shrl
ret
sub
sahf
inc
mov
scas
fsubp
add
repnz
ret
gs
mov
dec
xchg
ror
jmp
xchg
dec
adc
scas
add
cwtl
hlt
push
imul
push
paddq
testb
mov
push
and
out
or
inc
fdivrp
push
pop
aaa
jp
cmpl
rolb
pusha
andl
ret
testb
or
bound
insb
pop
cmp
bound
fcmovnb
js
and
xchg
cmpb
loop
sub
ss
test
pop
and
inc
cmp
jne
or
jle
mov
xchg
or
inc
stc
mov
movsb
call
lods
sub
sbbl
loop
sub
pop
jle
cltd
dec
loopne
ret
jecxz
out
cmpsb
dec
aas
lret
pop
fwait
xchg
ret
mov
cmpsb
push
dec
lret
ret
pop
mov
int3
ja
lods
ret
jecxz
cltd
idiv
xlat
sbb
pop
push
movsb
mov
or
inc
bound
and
cmpb
cmpb
mov
mov
add
add
ret
and
xchg
cmpb
loop
pop
cmpsb
xchg
aas
and
mov
ret
jecxz
stos
adc
and
inc
add
es
inc
bound
sub
fs
ret
inc
mov
movsb
ljmp
and
dec
sub
push
ret
repz
subl
pop
inc
out
fildll
mov
inc
push
dec
add
inc
hlt
in
imul
xlat
insb
pop
pop
dec
arpl
arpl
nop
shlb
subb
lret
add
inc
and
imulb
cmpsl
aas
arpl
sbb
inc
jge
mov
dec
insb
andl
bound
test
arpl
rorb
push
mov
sub
mov
inc
clc
mov
inc
xchg
or
arpl
mov
mov
insb
mov
loop
pushw
les
fists
lock
arpl
mov
stos
loop,pt
and
imul
idivb
cmpsb
repnz
cmpb
loop
inc
jae
and
pop
mov
pop
out
out
js
cltd
lock
jle
sub
mov
lock
push
pop
out
mov
xor
adcb
js
and
imul
inc
clc
shrb
inc
out
mov
shl
mov
stos
loope
and
sub
mov
mov
das
mov
and
xchg
dec
cmp
xchg
dec
aas
mulb
add
int3
bound
inc
inc
clc
scas
mov
bound
fcmovnb
js
and
xchg
cmpb
loop
sub
xchg
push
fistl
je
jecxz
js
push
in
xchg
xlat
int3
jecxz
cltd
in
pop
mov
pop
hlt
test
mov
ja
sbb
sub
pushf
mov
enter
ret
jne
or
mov
andl
dec
andl
arpl
xor
sub
adc
mov
and
xor
fistl
sub
arpl
and
mov
ret
xchg
sbb
pop
sti
add
xchg
ret
mov
ja
jmp
and
adc
rolb
js
mov
inc
arpl
ror
jg
mov
fsubrs
sbb
xchg
sbb
dec
incl
and
lods
adc
nop
mov
inc
bound
insb
inc
cmc
mov
inc
bound
outsl
ljmp
mov
push
es
push
rorl
sbbb
and
push
sbb
push
out
jns
inc
jo
mov
pop
les
and
bound
mov
ret
and
xchg
cmpb
loop
daa
idivb
push
testb
repz
push
in
xchg
ror
jecxz
sahf
mov
fs
adc
shl
stos
loopne
andl
sub
mov
cmp
loopne
mov
repz
iret
and
and
insl
imul
les
and
sti
jle
lock
jae
fcoms
cli
pop
adc
cmpsl
push
out
mov
test
out
pop
orb
loop
sahf
mov
or
ret
jecxz
out
ja
enter
sbb
jo
adc
inc
mov
dec
clc
mov
fdivs
cltd
je
add
dec
mov
loop
sahf
mov
mov
inc
mov
aaa
shl
add
pop
out
add
enter
mov
arpl
mov
ret
and
fwait
cmpb
loop
push
inc
clc
mov
pop
jmp
cwtl
pop
push
fwait
push
mov
xchg
pop
lods
push
lahf
lea
sahf
jns
sub
jecxz
jle
adc
shl
mov
cmp
div
subb
add
imul
ret
xchg
pusha
aas
hlt
loopne
mov
repnz
iret
and
and
insl
imul
les
and
out
xchg
lock
jae
fcoms
cmp
mov
imulb
xorb
add
ret
jecxz
out
ja
enter
pop
cltd
mov
push
repz
dec
clc
mov
fdivrs
cltd
ja
movsb
pop
mov
loop
mov
xlat
loopne
and
xchg
insb
jmp
insb
inc
cmc
lea
inc
bound
outsl
ljmp
mov
ret
ss
xchg
ret
jecxz
mov
ret
and
xchg
pop
inc
clc
mov
pop
pop
add
jbe
push
shl
lea
add
cmp
mov
cwtl
mov
and
imul
mov
adc
inc
out
inc
cmp
jne
or
jo
mov
pushf
mov
jl
mov
mov
xchg
dec
jo
ret
out
jg
inc
aas
negl
mov
mov
call
lret
and
ss
mov
xchg
pop
pushf
in
pop
mov
cwtl
mov
sub
adc
cmpsl
stos
lret
inc
out
inc
aas
cmc
loop
push
inc
clc
mov
rclb
sbb
jae
imul
adc
push
jecxz
or
andl
shrl
ret
sub
mov
mov
das
mov
lcall
mov
fcoms
xchg
mov
inc
jbe
push
mov
xchg
pop
pushf
mov
and
aam
imul
loop
scas
add
mov
pop
pop
add
sbb
cwtl
push
mov
loop
daa
idivb
mov
lock
lods
sub
xorl
jbe
mov
add
jns
mov
adc
imul
idivb
mov
inc
dec
movsl
mov
loop
jecxz
xchg
cmpb
loop
sub
xchg
in
pop
mov
ja
cmpb
loop
daa
negb
xchg
mov
xchg
cmc
sbbl
sub
and
repz
lret
jecxz
and
lret
and
inc
bound
outsl
ljmp
mov
es
hlt
in
dec
arpl
push
xlat
pop
pop
push
test
mov
cmp
mov
cmp
andl
ret
mov
dec
sti
pop
ret
jecxz
cmp
das
mov
jg
sahf
inc
clc
mov
mov
js
or
insb
andl
dec
lods
mov
ja
inc
aas
iret
xchg
lret
fiadds
pushf
mov
pop
pop
jecxz
shl
jmp
cwtl
divb
cs
add
lret
xchg
lret
cmc
adcl
jecxz
xor
shlb
and
shlb
mov
inc
in
mov
pop
and
and
loop
sub
loope
enter
and
jmp
ret
fnstcw
repnz
fists
or
inc
popa
or
fsubrs
and
or
daa
outsb
push
sub
push
or
je
mov
ja
mov
and
cli
push
or
jmp
inc
arpl
push
inc
clc
mov
into
das
mov
and
xchg
imul
add
push
aam
ljmp
xchg
and
jecxz
or
aas
jl
ja
xchg
pop
xor
adc
arpl
outsl
imull
mov
loop
cwtl
push
mov
jecxz
out
ja
inc
aas
lret
daa
dec
arpl
or
mov
sub
andl
ret
mov
mov
outsl
xchg
push
movsb
enter
add
ss
out
out
mov
outsl
imul
dec
hlt
or
ret
hlt
mov
dec
call
sbbl
xlat
imul
push
insl
sahf
jbe
aad
or
jle
xor
imulb
lahf
dec
cmc
imul
ret
mov
lret
sub
inc
in
mov
lret
jecxz
sub
stos
mov
jmp
in
dec
arpl
sbb
jne
mov
bound
xchg
inc
cwtl
faddl
jecxz
xchg
ss
das
das
pop
into
leave
mov
jo
aaa
aam
outsl
xor
lret
loop
jae
mov
add
dec
ljmp
mov
lcall
and
mov
ret
push
adc
inc
mov
and
or
loope
mov
aaa
mov
stc
lahf
fs
loope
mov
dec
call
dec
sub
and
enter
and
sbb
andl
pop
push
mov
dec
roll
sub
mov
inc
shl
jbe
das
das
sahf
push
insb
pop
push
inc
imul
in
out
lahf
pop
test
ficoml
je
aaa
fwait
push
mov
das
das
sahf
push
insb
pop
push
inc
imul
in
jmp
push
test
or
push
mov
add
ret
jecxz
test
lahf
dec
dec
dec
or
inc
mov
outsl
arpl
mov
inc
out
dec
xlat
je
and
mov
clc
out
dec
and
test
mov
inc
arpl
out
out
jmp
jmp
ret
sub
mov
mov
jmp
dec
and
jecxz
and
xchg
dec
test
jecxz
and
int3
mov
inc
lods
adcl
ljmp
add
inc
cs
enter
and
dec
test
jecxz
and
mov
inc
lods
andl
arpl
stos
mov
das
das
outsl
arpl
mov
enter
push
adc
pop
xchg
ret
mov
jb
mov
jg
sub
outsl
dec
orl
xchg
inc
rorl
push
push
enter
jp
inc
xor
mov
into
mov
add
dec
out
rcl
sub
and
jae
test
icebp
ss
sub
stos
jbe
xor
sub
inc
stc
shrb
add
dec
push
repz
adc
add
sbb
jae
mov
sub
int
mov
pop
call
mov
lds
lock
lods
adc
and
fiadds
popl
ss
outsb
iret
push
imulb
ret
adc
mov
mov
and
test
ss
jecxz
and
insb
ss
stc
dec
sub
sti
jecxz
and
xchg
lcall
xchg
pop
stos
insb
pop
add
mov
mov
jecxz
fisttps
das
push
mov
pop
jmp
inc
bound
rorb
shl
insb
andl
cmp
jl
mov
pop
mov
neg
mov
or
jle
mov
nop
pop
cs
jne
imul
push
ljmp
add
jno
mov
pop
inc
lods
adc
adc
ret
sub
push
add
add
mul
mov
iret
and
push
dec
test
scas
mov
lahf
push
mov
mov
jno
mov
je
push
sub
es
int
inc
push
iret
iret
mull
int
inc
fnstenv
aas
out
adc
mov
cmp
lahf
dec
jg
jmp
ret
stc
mov
xor
int3
sub
jecxz
push
jp
inc
fmull
and
jne
mov
ja
pop
iret
mul
lahf
dec
ja
mov
ret
push
inc
dec
outsl
mov
outsl
xchg
cmpb
pop
add
shl
in
ja
clc
push
xlat
outsb
pop
push
imulb
pop
mov
and
sbb
mov
pop
push
fsubl
push
pop
mov
enter
add
inc
clc
mov
or
out
andl
rcll
push
inc
bound
cwtl
divb
mov
xchg
dec
push
pop
mov
jae
mov
or
jecxz
mov
cmpsb
jl
and
test
mov
push
lret
jp
mov
or
add
mov
mov
add
xor
mov
cmp
lock
or
js
mov
dec
fwait
cmpsl
mov
mull
cmp
iret
daa
sub
or
mov
inc
jbe
push
or
mov
jg
int3
mov
mov
js
ljmp
lret
inc
sbb
ret
push
jmp
inc
bound
cwtl
divb
sbb
xchg
pusha
sub
push
gs
into
scas
mov
test
mov
fistl
iret
shl
push
cs
push
icebp
fisttpl
mov
pop
inc
push
inc
jle
cmpsb
dec
aam
jl
test
push
or
add
mov
pop
mov
lahf
pop
inc
test
cs
mov
call
dec
leave
or
lret
loop
mov
push
xor
mov
jp
sub
imul
js
push
in
xchg
scas
int3
jecxz
sahf
mov
dec
mov
lds
and
rol
scas
mov
inc
xchg
mov
rorb
add
inc
push
int3
cmp
aaa
or
adc
push
fnstenv
lods
icebp
arpl
xchg
jg
or
ret
jecxz
roll
pop
gs
jp
mov
jae
xchg
outsb
dec
out
jle
mov
fldcw
and
add
pop
les
mov
dec
insb
andl
bound
mov
ss
scas
aaa
jbe
shll
sub
loope
and
sbb
and
call
jae
js
mov
test
jmp
out
inc
bound
and
push
outsl
repz
adc
add
mov
push
insl
fisubs
inc
data16
fdivs
mov
divl
sub
arpl
adc
pop
jns
test
adc
push
pop
daa
push
cmp
mov
xor
jbe
fwait
rclb
cs
lret
roll
in
lods
outsb
insb
andl
cmpsb
xchg
xor
jbe
lds
shrb
pop
bound
out
jle
mov
fisubrl
and
add
push
les
mov
inc
arpl
and
call
xchg
and
jecxz
jmp
mov
test
popa
andb
pushf
ret
mov
inc
mov
inc
push
fwait
sub
adc
jmp
inc
bound
and
push
outsl
repz
adc
add
mov
push
pop
andl
test
mov
pop
insb
pop
in
lret
outsl
andl
test
push
xor
push
push
notb
jo
enter
add
aaa
cmpsl
dec
adc
xlat
dec
sub
das
inc
rolb
push
inc
bound
cli
mov
mov
xchg
fisubs
movb
or
and
jbe
pop
jns,pn
jne
lds
inc
stc
mov
dec
test
arpl
mov
ss
add
loope
mov
js
push
out
add
ret
pop
jns
fistpll
out
xchg
movsb
loopne
pop
or
neg
out
cwtl
push
xchg
fstpt
loop
push
mov
jecxz
out
ja
inc
aas
into
sub
or
sub
andl
arpl
cmp
ds
orl
sub
mov
mov
add
xchg
ret
mov
test
mov
into
mov
leave
orl
xor
and
cli
repz
or
dec
sbb
mov
arpl
mov
sahf
and
and
xchg
out
dec
adc
add
hlt
test
push
pop
jmp
push
idivb
pop
mov
ret
push
andl
pop
fldl
arpl
mov
dec
clc
push
mov
aaa
aad
mov
mov
xor
js
push
faddl
and
sub
dec
adc
add
hlt
test
push
or
pop
in
xor
stc
xor
jae
adcl
or
clc
xor
inc
cmpsb
xchg
cmp
loop
addr16
addl
jne
or
mov
shrb
sub
and
outsb
dec
mov
xchg
inc
outsl
enter
push
xor
stos
dec
stc
lahf
jb
outsl
stc
mov
inc
call
or
enter
push
push
or
and
arpl
lods
mov
lods
cmp
inc
into
jle
rorl
idivl
fiaddl
and
mov
clc
imul
inc
call
cwtl
push
sub
andl
iret
ds
adc
push
enter
xor
fcoms
cmp
or
mov
pop
push
dec
sbb
jl
into
enter
xchg
pop
outsl
jae
sbbl
jmp
mov
bound
or
mov
fists
inc
subl
outsb
sbbb
fbld
inc
bound
dec
mov
add
movsb
call
sbb
jecxz
aas
leave
jne
and
jbe
xor
inc
bound
arpl
movd
jbe
out
xchg
dec
push
fists
xor
mov
cli
sti
cmp
jne
xchg
js
xchg
mov
sub
jo
sub
ds
mov
mov
mov
loop
inc
inc
dec
mov
ja
loope
mov
js
push
in
xchg
pop
ret
jecxz
lcall
dec
and
push
arpl
mov
inc
fsts
mov
bound
and
add
jmp
mov
andl
repnz
cwtl
sub
arpl
and
xor
ret
clc
incl
and
xchg
inc
bound
lahf
jecxz
and
cwtl
jmp
or
xor
add
dec
and
xchg
push
movsb
iret
js
scas
inc
xchg
xor
dec
jecxz
and
imul
xchg
pop
rorl
jbe
test
je
andl
arpl
test
mov
push
adc
lds
js
arpl
mov
jecxz
int3
mov
bound
in
xchg
xor
jcxz
and
mov
inc
bound
and
testl
push
shll
sbb
and
xchg
push
dec
shll
or
cs
sub
push
iret
sbb
pop
andl
jb
add
idivb
sbb
push
mov
bound
arpl
decb
into
das
stos
sub
cltd
ret
mov
mov
sbb
loop
pop
mov
fnstenv
fwait
stos
addl
inc
sbb
mov
imul
mov
arpl
cmpl
sub
scas
add
loopne
jecxz
and
iret
lods
iret
mov
fsubrl
jae
arpl
sbb
sbb
and
or
pop
mov
ret
mov
cmpb
in
ret
ds
andl
clc
mov
subl
xlat
pop
adc
sub
adc
rcrb
rclb
jg
scas
inc
mov
scas
repnz
push
movsb
adc
scas
inc
movsb
add
jo
adc
lods
jae
cltd
adc
xor
cmp
clc
push
xlat
pop
jl
sahf
les
lret
stos
dec
daa
dec
arpl
mov
inc
pop
mov
ja
ss
mov
bound
xchg
inc
cwtl
faddl
jecxz
xor
test
dec
mov
dec
and
outsb
fiadds
inc
adc
arpl
sub
rorb
out
and
imul
add
popa
xor
jo
mov
sub
outsl
les
mov
dec
add
mov
dec
sub
ss
push
enter
mov
mov
pop
mov
int3
ja
scas
ret
jecxz
mov
stc
les
inc
arpl
das
inc
bound
and
popa
mov
inc
arpl
jmp
pop
pop
xor
ret
mov
bound
xchg
inc
cwtl
faddl
jecxz
and
test
fs
in
add
mov
loop
aam
das
sub
jle
adc
arpl
sub
aam
xchg
sub
stc
and
push
add
push
ja
add
inc
bound
and
subb
loop
aam
jg
mov
hlt
call
mov
imul
je
pop
daa
inc
bound
mull
aam
xchg
ss
add
and
push
pop
dec
ret
adc
call
mov
inc
out
sub
xchg
push
addl
add
stos
sbb
and
dec
sarl
sub
sbb
sub
ss
mov
hlt
out
in
das
sub
xchg
ja
dec
insb
mov
ret
sub
push
and
inc
jecxz
lods
subl
loope
push
aas
rdpmc
cltd
push
push
add
jo
sub
xchg
lahf
dec
jae
dec
mov
lret
outsl
fsubl
inc
lods
subl
arpl
cwtl
divb
mov
mov
and
jns
fsubrs
imul
iret
push
and
dec
call
inc
sub
mov
jecxz
and
test
ret
add
mov
mov
pop
loop
mov
inc
arpl
pop
packsswb
mov
notb
dec
and
mov
add
lahf
mov
dec
int
and
xor
insb
scas
add
arpl
inc
lods
subl
jmp
pop
packsswb
mov
inc
lods
andl
es
xchg
test
xchg
push
stos
decb
int3
outsb
sub
inc
lods
andl
arpl
mov
ja
jno
aad
push
je
and
clc
daa
shrl
push
in
xchg
stos
int3
jecxz
sahf
mov
fs
adc
shl
stos
loopne
andl
xor
add
mov
repz
fdivs
or
mov
arpl
xchg
or
inc
and
pop
imul
add
into
das
mov
and
cs
add
dec
insb
andl
stc
adc
sbb
andl
mov
call
imul
sbb
add
add
pop
sbb
inc
cwtl
faddl
jecxz
and
mov
add
adcl
add
inc
shrl
jecxz,pt
test
inc
sub
lret
shlb
inc
arpl
and
add
enter
ret
js
pushf
ret
mov
mov
mov
ror
jnp
mov
mov
adcl
cmp
inc
sub
and
fimull
push
ret
mov
std
and
dec
xlat
ds
add
mov
mov
sarl
pop
jle
inc
pop
repz
loope
mov
push
mov
gs
jecxz
mov
js
and
call
jle
cmp
jmp
sbb
add
mov
dec
pop
lods
andl
or
add
es
cwtl
divb
mov
in
add
ret
or
sahf
mov
mov
andb
ss
push
add
arpl
mov
jl
adcl
fimuls
in
ret
jg
jo
mov
adc
addb
and
scas
add
ud2
dec
pop
andb
in
icebp
push
inc
repz
cmp
mov
add
lock
jns
aad
sbb
sbb
and
and
cltd
aad
sbbb
push
sub
inc
mov
arpl
out
mov
aaa
int3
ja
lods
ret
jecxz
lcall
mov
dec
mov
add
inc
adc
mov
inc
bound
ljmp
add
inc
sub
mov
hlt
clc
xchg
inc
cmpsb
dec
and
xchg
pop
lahf
jl
sbbl
jecxz
and
mov
xchg
call
sbb
rol
inc
and
cmp
mov
cwtl
sub
or
mov
push
add
pushf
ret
mov
andl
es
popa
adc
fdivs
mov
divl
sub
cmp
ret
rol
addr16
mov
push
ds
mov
inc
bound
clc
pop
pusha
andb
bound
pop
jmp
mov
inc
cwtl
lahf
faddl
jecxz
out
rcr
loop
mov
andl
fidivs
fwait
mov
dec
arpl
arpl
stc
mov
js
mov
ror
jnp
mov
andl
xchg
and
das
mov
mov
mov
and
out
mov
or
test
sbbl
ds
rol
jne
jbe
dec
or
addl
mov
sbb
pop
andl
dec
loope
mov
ret
jecxz
ljmp
aas
pop
andl
ret
jecxz
mov
test
mov
inc
adc
mov
sub
mov
rcll
and
xor
loop
push
jge
adcl
xchg
push
mov
sbb
sbb
cmpb
loop
xor
sbb
sbb
pop
andl
jecxz
add
mov
cltd
inc
cwtl
sbb
jecxz
cmp
arpl
dec
dec
sti
and
stos
dec
cmp
andl
adc
mov
mov
sbb
sbb
and
addr16
fnclex
cmp
jl
subl
loop
push
mov
loop
jecxz
loope
sbb
les
lods
push
arpl
inc
bound
bound
add
inc
jle
or
bound
sub
lahf
mulb
movsb
call
mov
inc
cmc
xorl
mov
sbb
das
adc
mov
and
rorb
inc
pop
arpl
aaa
jmp
jecxz
test
arpl
and
mov
ret
loop
outsl
lahf
mov
add
lock
jae
fcmovnbe
andl
dec
inc
in
jecxz
out
ja
andl
ret
mov
aaa
imulb
mov
ja
ret
scas
jbe
jae
andl
jbe
das
scas
or
ret
mov
push
out
mov
dec
fpatan
mov
pop
add
into
das
mov
and
lahf
push
into
sub
push
sahf
and
andl
lahf
cmpb
out
jmp
outsb
arpl
mov
pop
out
pop
jecxz
xor
dec
push
leave
fisttps
cwtl
sub
sub
jmp
bound
sub
popa
sti
add
arpl
jecxz
loop
and
lahf
imul
jecxz
test
and
aas
iret
jne
ss
leave
ret
dec
mov
ja
or
xchg
and
stos
mov
push
add
into
das
mov
cmpl
inc
jbe
mov
inc
lods
andl
arpl
jecxz
popl
dec
dec
call
pop
and
xchg
push
cmp
jecxz
sub
jecxz
out
into
sub
pushf
mov
stos
add
adc
push
inc
pop
mov
hlt
loopne
rorb
add
inc
fidivs
add
pop
jmp
jae
subl
inc
lahf
xchg
jb
mov
inc
lods
xorl
dec
inc
aad
jecxz
out
ja
inc
rorb
add
inc
or
mov
add
add
idivb
jmp
lret
push
or
sbb
arpl
push
jbe
sub
arpl
mov
rorl
add
repnz
scas
setae
mov
dec
fisubrs
icebp
jecxz
test
and
aas
pop
xchg
jb
lock
mov
or
push
shlb
jp
pusha
arpl
test
out
push
je
cmp
js
mov
ret
outsb
push
cmpsl
es
popa
adc
fdivs
mov
xchg
cwtl
sub
jns
das
jcxz
and
test
aas
mov
lcall
jae
subl
adc
push
leave
push
add
shrl
push
push
add
ret
jecxz
test
les
add
pop
jmp
ja
adcl
cmp
inc
lret
adc
jecxz
sub
test
mov
xchg
cmp
rol
jns
and
jecxz
and
mov
sub
or
and
dec
iret
jbe
mov
fists
cli
xchg
inc
cwtl
repz
jecxz
or
xchg
scas
dec
stos
add
xlat
outsb
pop
jg
fsqrt
cmpsb
ds
rol
jno
push
and
imul
xchg
dec
jle
adc
adcl
shrl
mov
mov
imulb
es
push
iret
cmp
mov
iret
xor
mov
jb
and
pushf
ret
mov
inc
pop
xor
cmpsl
push
add
lock
adc
fnstenv
sbb
inc
push
mov
ret
addb
out
js
and
xchg
imul
test
adc
sbb
mov
aad
sti
mov
nop
js
imulb
pop
dec
fnsave
sbb
pop
mov
push
adc
pop
push
cwtl
out
mov
push
ret
xorb
mov
js
mov
pop
mov
ret
mov
imulb
sbb
xchg
dec
sub
adc
jmp
ret
mov
js
push
out
xchg
iret
insb
xlat
add
fiadds
jl
adcl
sbbb
cmpsl
je
adc
mov
xchg
inc
push
mov
xor
push
ret
loop
and
xchg
ss
je
or
cmp
lock
jbe
jg
andl
int3
jecxz
and
adc
and
mov
sub
adc
push
sub
push
arpl
sbb
andl
pause
dec
xor
nop
dec
or
nop
dec
aas
mov
enter
mull
mov
cmp
xchg
inc
push
inc
clc
mov
inc
arpl
outsl
out
es
aam
inc
add
jo
adc
jo
jmp
lock
adc
pop
xchg
lock
adc
insb
inc
bound
pop
jbe
aaa
and
imul
inc
out
dec
iret
push
scas
mov
daa
loopne
or
add
inc
cwtl
sbb
add
add
and
lahf
push
inc
clc
xchg
mov
bound
mov
js
and
jg
cmp
pop
jmp
dec
arpl
adcb
in
out
inc
inc
clc
xchg
mov
push
add
mov
jecxz
push
dec
sbb
ret
jecxz
out
ja
loopne
jbe
jae
andl
ret
sahf
inc
pop
repz
fists
sbb
out
push
inc
clc
xchg
ret
and
adc
cmpsl
add
sbb
loop,pt
xchg
inc
pop
xor
aas
fists
add
mov
jp
and
add
repz
andb
jp
mov
stos
lret
inc
push
jnp
dec
lahf
pop
mov
jecxz
push
dec
add
ret
jecxz
test
push
daa
out
pop
add
add
sbbl
flds
mov
ret
outsl
dec
xchg
repz
jl
adcl
sbb
andl
shl
lahf
dec
jnp
mov
and
mov
push
imulb
loop
es
js
push
out
add
ret
jg
and
xchg
imul
jecxz
test
les
rol
js
or
mov
inc
add
clc
mov
ret
adc
loopne
cmp
push
and
loop
das
sahf
and
outsb
push
incb
test
rol
jecxz
notb
ss
xchg
lock
adc
js
and
mov
xor
faddl
jecxz
xor
and
scas
add
cmp
ret
pop
andl
cmp
jno
arpl
mov
inc
out
dec
xlat
jbe
bound
pop
ud2
test
inc
and
jecxz
jnp
bound
scas
pop
push
imul
mov
jo
inc
out
dec
xlat
dec
mov
jmp
adc
add
ret
outsb
iret
push
enter
xchg
in
popa
out
popf
and
outsb
cmp
cltd
aas
adc
inc
and
stc
mov
inc
out
fwait
test
sbb
jecxz
pop
jmp
mov
subl
pop
sbb
gs
mov
mov
pop
jl
mov
pop
add
stos
call
xor
push
cmpb
xchg
pop
arpl
mov
jl
and
jne
and
roll
and
pop
xor
fistl
mov
js
or
aam
mov
fcoms
jae
add
andl
bound
inc
adc
mov
pop
push
add
ret
ss
bound
cmpsl
stos
mov
and
data16
repz
push
mov
push
add
pushf
ret
mov
cmpsb
push
dec
sbb
add
ss
test
and
cmp
inc
into
xchg
sub
lret
xchg
adc
ss
scas
seta
arpl
mov
mov
and
pop
adc
lods
xor
and
mov
pop
xchg
cltd
mov
and
push
ret
mov
mov
pop
or
cs
getsec
push
fldl
add
iret
and
aas
repz
jmp
inc
bound
and
in
mov
ret
orl
jmp
cmp
test
loope
jg
cltd
sub
ret
test
xchg
stc
mov
loop
and
into
sahf
mov
and
lcall
or
cmp
sbb
sbb
and
jnp
out
out
pop
imul
adcl
jg
pop
mov
and
cs
sbb
sbb
and
jecxz
and
xchg
and
repz
inc
ret
and
cwtl
divb
mov
xchg
dec
sub
xchg
cwtl
daa
jb
imul
cmpsb
jns
dec
rolb
inc
push
lret
stos
push
shll
scas
cmp
and
or
add
push
mov
pop
dec
sbb
out
jae
dec
push
or
xor
add
pop
push
iret
or
mov
jl
sbbl
loop
daa
aad
sbbb
mov
dec
cmp
and
and
jg
jp
jecxz
pusha
sarl
ret
mov
add
pushf
ret
mov
shrl
xor
nop
dec
daa
mov
imul
jecxz
scas
setae
arpl
jae
inc
bound
ret
mov
stos
or
inc
adc
mov
xchg
mov
outsl
push
arpl
outsl
out
inc
and
or
inc
bound
ret
mov
mov
xor
mov
testl
inc
bound
jecxz
adc
shl
ds
leave
push
jne
sub
ljmp
jae
enter
ret
and
lds
sbb
fldt
loopne
and
lahf
call
enter
ret
jbe
arpl
jecxz
cs
push
xlat
pop
jns
fsubrs
xchg
lahf
addl
les
jg
lcall
push
push
andl
idivl
and
xchg
imul
imul
and
xchg
imul
test
lahf
push
inc
clc
mov
and
cmp
clc
mov
dec
add
in
pop
jecxz
loopne
insb
xlat
add
push
arpl
pop
jae
js
mov
ret
xchg
xchg
push
fisubrl
fnstcw
mov
bound
xchg
aad
imul
jecxz
push
out
dec
xlat
je
push
dec
imulb
push
jbe
xor
jl
adcl
inc
jmp
lahf
arpl
mov
push
sbb
dec
scas
aaa
int3
aaa
arpl
mov
inc
cwtl
inc
roll
jecxz
jmp
inc
ud2
and
outsb
fisubs
mov
and
jae
js
mov
ret
xchg
lahf
dec
dec
cmc
andl
dec
mov
out
ja
inc
aas
lret
dec
sahf
jns
ret
cmp
jge
inc
bound
xor
fs
mov
jae
xor
sbb
pop
lahf
pushf
ret
mov
inc
out
inc
repz
cmp
jae
adcl
into
lcall
lahf
xchg
into
out
xlat
ret
jg
int3
aaa
arpl
mov
mov
mov
and
xchg
ss
cmp
and
scas
ffreep
and
push
sbb
ret
pop
push
jne
xchg
ret
sub
scas
add
xor
push
dec
add
scas
pop
jecxz
cs
push
pop
ud2
test
call
inc
getsec
and
int
xchg
ret
sub
lcall
push
push
andl
out
adc
mov
fildl
fbstp
xor
js
mov
mov
ret
or
andl
push
cmp
push
imul
push
sub
outsb
ret
jae
bound
or
loope
push
mov
stc
push
pop
rdpmc
test
xchg
cvttps2pi
jecxz
cmpsl
mov
test
clc
pushf
int3
aaa
arpl
mov
mov
mov
sbb
jecxz
push
nop
cmp
pop
add
cmpl
push
call
sub
stc
mov
outsb
call
out
jg
cmpb
loop
test
clc
mov
ret
and
call
cltd
jg
jns
fs
xlat
add
inc
repz
cmp
jae
adcl
push
sub
es
jle
cmpsl
mov
jbe
mov
push
daa
out
adc
mov
or
jp
add
xor
bound
iret
jmp
cltd
inc
sub
mov
enter
hlt
xchg
cltd
jg
jns
scas
into
mov
in
push
sub
outsb
ret
jae
bound
or
xchg
lods
push
mov
ss
pop
mov
dec
mov
icebp
inc
arpl
sbb
sahf
call
mov
cmp
pop
andl
arpl
push
sbb
jae
bound
test
clc
movsb
xor
jl
adcl
cmp
mov
arpl
push
hlt
mov
daa
test
decl
mov
bound
xchg
aad
imul
jecxz
aam
xchg
sti
xchg
cltd
inc
into
das
mov
pop
adc
ret
loop
pop
hlt
test
add
hlt
test
fs
xchg
in
or
jae
js
mov
and
add
xchg
ret
mov
dec
mov
into
cltd
idiv
scas
stos
dec
stc
lahf
addr16
out
xlat
ret
jg
int3
aaa
arpl
mov
inc
cwtl
rcl
add
mov
enter
add
das
push
fildll
cmp
push
ja
or
mov
xchg
roll
and
sub
outsb
push
mov
pop
iret
lret
push
inc
add
arpl
arpl
push
add
xchg
ret
mov
fcoms
mov
getsec
aam
or
mov
xchg
roll
and
sub
outsb
cmp
xchg
lock
adc
sbb
cmp
lret
pop
outsl
inc
arpl
or
xor
inc
clc
mov
arpl
dec
shll
pop
xchg
inc
cwtl
aaa
faddl
jecxz
push
jbe
mov
jg
stc
push
or
jp
lock
adc
arpl
arpl
fcoms
pop
and
mov
and
out
dec
fisttps
cwtl
das
sahf
and
and
mov
inc
roll
and
pop
xor
xlat
pop
mov
jae
xchg
mov
mov
push
ret
mov
js
push
out
xchg
shll
adc
add
mov
push
cmc
mov
push
out
add
mov
jae
andl
ret
jecxz
or
andl
fdivrp
push
inc
rdpmc
jle
cmpsb
xchg
iret
cmp
mov
ljmp
das
pop
sub
jecxz
clc
mov
mov
dec
or
shll
add
xchg
fnstenv
aas
out
pop
mov
jmp
and
mov
pop
sub
inc
add
adc
cs
cwtl
or
in
popa
out
mov
pop
jp
es
frstor
push
jecxz
jo
loopne
sbb
fisttps
add
or
push
stos
cmp
inc
les
arpl
cmp
sub
cmp
shl
jbe
push
cmp
out
scas
ret
pop
lahf
arpl
loop
dec
jae
fisubs
add
sbb
ret
sub
push
andb
popa
cmpb
je
iret
inc
arpl
and
lret
or
inc
in
addl
and
outsb
jo
or
push
out
pop
iret
iret
jecxz
inc
inc
ljmp
and
inc
add
adc
in
ret
jecxz
test
les
scas
sbb
lcall
inc
in
addl
cmpb
out
add
pushf
ret
mov
ja
pop
iret
test
push
outsl
imull
mov
pop
and
scas
xchg
in
into
jge
cs
out
jmp
or
je
ret
jecxz
scas
add
mov
aam
lcall
out
arpl
arpl
xchg
mov
ja
daa
mov
add
sbb
dec
test
shll
cs
lods
and
scas
xlat
stos
mov
and
fwait
add
loop
mov
or
cli
and
xchg
inc
ljmp
and
packsswb
sub
leave
mov
jecxz
push
add
shl
test
and
aas
repz
add
ret
test
and
cmp
ds
ss
adc
lods
and
cltd
idiv
scas
stos
dec
stc
lahf
jg
bound
test
call
sbb
push
xchg
add
stc
lahf
inc
mov
jns
or
bound
or
aaa
or
loope
push
mov
xchg
sub
pop
mov
jecxz
mov
inc
xchg
andl
clc
fwait
mov
inc
roll
and
fwait
inc
xchg
sti
lcall
mov
pop
out
dec
xlat
je
mov
pop
sar
sbb
sbb
pop
andl
ds
dec
aas
hlt
clc
fwait
mov
add
imulb
cmp
inc
out
dec
xlat
je
mov
pop
sar
mov
enter
sub
arpl
push
scas
stos
outsl
ret
les
arpl
and
pop
sti
jmp
mov
push
or
mov
ja
mov
sti
jae
inc
clc
lahf
mov
test
add
fdivrs
fsubs
loopne
mov
inc
arpl
call
inc
xchg
xorl
arpl
lods
ret
jecxz
and
mov
ret
push
andl
bound
and
and
ret
enter
mov
push
xor
rolb
dec
andl
ret
mov
push
hlt
clc
xchg
push
inc
repz
enter
ret
xchg
sub
iret
push
lock
adc
out
es
push
or
jae
mov
mov
inc
bound
and
dec
sbb
adc
enter
jo
out
es
jmp
adc
add
ret
jecxz
decl
and
jecxz
mov
pop
fwait
add
repz
test
pushl
pop
mov
loop
xchg
jl
adcl
bound
cmp
lahf
dec
ja
mov
push
adc
lods
xor
and
mov
pop
xchg
cmp
cwtl
ss
out
pop
mov
xchg
pop
xor
dec
jae
mov
xor
or
loope
cmp
sbb
xchg
subb
jns
ljmp
fistl
jo
pop
pop
hlt
rcrb
pop
clc
cmpsl
xor
jl
subl
xor
inc
sar
mov
xor
mov
mov
arpl
cltd
aad
stc
xor
jae
and
xchg
dec
daa
fistpll
jae
sbbl
pop
xchg
sub
mov
fyl2xp1
sbb
jne
and
sbbb
add
nop
cmpb
loop
jnp
mov
push
mov
ss
hlt
insb
cmpb
pop
jle
xchg
mov
jmp
dec
arpl
decl
subl
pop
mov
mov
xchg
dec
dec
dec
fdivrp
sbb
insb
pop
nop
movsl
fidivl
and
stos
sub
in
jae
inc
arpl
dec
js
mov
loope
int3
js
mov
xchg
push
xorl
arpl
adc
fdivs
fcoml
imul
xchg
sbbl
loop
pop
call
add
ret
jecxz
test
and
aas
loopne
cltd
jg
dec
push
mov
add
pop
rcll
jp
xchg
outsb
andl
popf
jmp
inc
jecxz
mov
fiaddl
and
stos
bound
cmp
leave
out
test
pop
sbb
pop
add
add
add
mov
out
iret
imul
fbstp
add
jbe
sbb
cmpsl
adc
out
dec
xlat
dec
stos
sub
int3
pop
popa
xchg
fdivs
mov
xchg
js
mov
daa
mov
movlps
cmpsl
rclb
aaa
dec
aam
xor
jmp
mov
push
cmp
mov
loope
mov
push
xlat
into
pusha
or
pop
pop
jp
js
mov
mov
or
mov
fsubrs
aas
cld
and
lcall
mov
ds
add
ret
jecxz
out
ja
dec
fbstp
push
jmp
lahf
xchg
js
imulb
jge
jno
andl
ret
mov
pop
jecxz
jp
sbb
push
das
push
into
out
rol
pop
js
mov
or
out
mov
arpl
mov
shl
add
negb
or
enter
repnz
and
jae
push
mov
nop
jne
cmp
or
inc
arpl
push
sbb
add
inc
arpl
imul
arpl
dec
addr16
or
ret
adc
mov
int3
popa
xor
adc
inc
arpl
aas
hlt
dec
mov
jb
cmp
lods
inc
arpl
dec
arpl
shrl
in
push
mov
mov
mov
inc
sbbl
sub
mov
sub
jmp
mov
jecxz
push
mov
mov
mov
inc
mov
push
push
sbb
lea
mov
int3
or
cwtl
push
push
mov
pop
mov
and
jecxz
xor
xor
or
add
xchg
les
out
adc
xlat
mov
andb
fisttpll
or
add
dec
ret
es
fs
popf
and
mov
ret
mov
dec
aam
mov
rorb
xchg
push
sbb
into
mov
dec
sub
scas
sbb
into
adc
rorl
lahf
push
test
push
clc
imul
call
cmp
mov
add
ret
decl
ss
jbe
mov
mov
xchg
add
ret
jg
pushf
inc
clc
mov
mov
out
dec
scas
je
mov
dec
push
mov
mov
repz
jbe
std
addl
mov
ud2
cltd
mov
cmpsl
cmp
jo
cmp
shlb
jecxz
push
dec
and
mov
into
out
fs
mov
add
pushf
ret
mov
in
out
mov
ret
push
pop
faddl
jecxz
and
call
jae
sub
iret
push
into
sub
ss
mov
into
cwtl
divb
sbb
pop
jp
shrb
lret
jecxz
push
outsb
dec
rcrb
adc
cmpsl
inc
and
mov
jno
jge
mov
push
fildll
jecxz
stc
dec
pop
dec
decl
sbb
fistpl
pushf
mov
mov
scas
or
dec
sub
jne
fwait
mov
ds
ss
fdivrp
xor
fisttps
add
divb
scas
push
jecxz
or
mov
mov
cmp
cltd
aas
repz
xchg
and
faddl
jecxz
and
mov
mov
loop
test
jae
mov
inc
call
ret
ss
pop
iret
repz
jmp
inc
arpl
dec
jg
mov
inc
data16
mov
sub
scas
test
adcl
js
and
imul
loop
scas
seta
arpl
mov
inc
call
ret
adc
fldpi
mov
or
adcl
cld
add
xchg
ret
mov
js
mov
xorl
jl
mov
ficomps
iret
or
push
jb
daa
mov
xchg
pop
stos
pop
adc
push
jne
add
test
out
rorb
add
inc
push
adc
jbe
aaa
in
sub
ret
mov
divl
dec
push
push
fidivs
jmp
outsl
fidivl
and
out
in
inc
cmpsb
dec
push
or
mov
inc
loope
push
lret
mov
pop
sbb
imul
jecxz
test
and
cmp
xchg
jo
into
sub
daa
imulb
xchg
imulb
bound
out
clc
xchg
jns
lock
or
in
push
xchg
mov
into
xchg
jo
push
dec
fisubs
aam
sahf
mov
loop
dec
jg
pop
iret
dec
or
inc
bound
mov
scas
aaa
test
fistpl
jbe
das
pop
enter
cmc
lret
or
inc
in
lret
and
mov
or
andb
cmc
andl
roll
and
loop,pn
es
js
push
fdivrp
push
pop
jmp
jle
mov
pop
arpl
imul
add
mov
push
outsl
mull
lret
incl
mov
ret
mov
inc
bound
adc
outsb
iret
push
xchg
xor
pop
inc
xchg
sub
sbb
add
ret
pop
into
das
mov
mov
push
ret
mov
lret
inc
and
ss
test
lcallw
ret
pop
jmp
inc
bound
mov
ret
mov
jle
andb
fwait
xor
and
dec
sbb
jl
test
sbbl
xchg
pop
arpl
sbb
js
and
adc
cmpsl
jo
pop
xchg
inc
clc
mov
movsb
push
fwait
add
loop
cwtl
fistpll
aad
xor
loop
xchg
inc
cwtl
faddl
jecxz
sbb
jecxz
and
mov
push
enter
cmp
and
roll
and
aam
cwtl
divb
mov
pop
pop
push
test
mov
cmp
push
and
mov
pop
adc
xchg
jle
mov
cmpsl
cmp
inc
cmpsb
dec
push
or
cwtl
sub
lret
faddl
jecxz
outsl
inc
clc
mov
and
inc
bound
sbb
arpl
arpl
push
jmp
push
ret
pop
andl
rcrl
xchg
inc
clc
mov
add
pushf
ret
mov
ljmp
mov
mov
stos
push
mov
and
out
push
inc
clc
xchg
ret
and
mov
daa
imulb
push
sahf
mov
adc
mov
cld
and
pushw
adc
pop
adc
pop
mov
and
mov
mov
das
jle
mov
xor
inc
roll
and
jg
and
xchg
imul
add
mov
call
fsubrs
loop
and
imul
loop
xchg
inc
clc
mov
pop
cmp
sub
mov
hlt
test
mov
mov
jb
ret
lcall
add
pushf
ret
mov
mov
rol
js
sahf
inc
pop
repz
inc
movsb
loopne
pop
adc
mov
xor
cmp
and
cwtl
push
inc
cwtl
lret
faddl
jecxz
mov
ret
jecxz
push
or
jae
jle
add
js
aam
jnp
call
inc
bound
lods
sarb
ret
jecxz
push
int3
loopne
pop
int3
jecxz
mov
and
lahf
push
inc
clc
xchg
ret
and
mov
push
inc
arpl
xor
inc
pop
repz
inc
adc
xchg
pushf
inc
clc
xchg
adc
js
and
mov
aam
jnp
sub
fmuls
cwtl
inc
inc
clc
mov
mov
ret
out
addr16
mov
adc
andl
nop
cmpb
pop
add
mov
mov
mov
sbb
and
push
stc
mov
js
and
bound
add
mov
pop
ret
mov
js
push
fdivr
mov
inc
arpl
leave
jecxz
test
les
fstpt
adc
bound
xlat
stos
xor
enter
xor
stos
cmc
push
and
stc
sbb
dec
andl
aad
add
cwtl
mov
fs
xchg
cmpb
loop
mov
add
inc
clc
mov
inc
jnp
and
outsb
fwait
sbb
jg
andl
ret
and
mov
push
hlt
test
mov
mov
enter
xor
rcll
lret
jns
arpl
iret
jl
andl
arpl
push
add
sbb
mov
and
shrb
add
jecxz
mov
ret
and
mov
inc
inc
clc
cmpsl
push
ret
and
imul
loop
scas
ja
cwtl
cmp
sti
mov
jl
cmp
and
push
movsb
pushl
cmp
sbbb
bound
sarl
loop
xchg
inc
pop
les
lret
jg
and
imul
mov
sarb
mov
fnstenv
push
mov
js
push
fdivr
push
and
jns
cwtl
and
aad
repz
inc
push
stc
rorb
jne
sahf
or
add
cmp
enter
jae
dec
fimuls
and
push
or
xchg
das
mov
mov
mov
pop
add
outsl
andl
fdivs
mov
divl
cs
arpl
xor
lock
imulb
loope
and
add
movb
mov
cmp
xchg
mov
jl
int3
outsl
ret
mov
iret
daa
inc
mov
leave
xchg
dec
sub
jbe
sbb
sbb
andl
pop
out
mov
inc
cs
jne
and
lret
enter
push
outsl
div
xor
jecxz
xchg
outsl
imul
mov
push
mov
pop
jns
sahf
jns
arpl
loope
hlt
clc
addr16
pop
out
notb
adc
mov
mov
imul
cmp
inc
lret
adc
jecxz
sub
rolb
inc
and
pop
imul
sbbl
sbb
fsubrs
mov
inc
outsb
enter
cmp
leave
jne
mov
bound
scas
pop
bound
fistpll
jle
je
lods
ret
jecxz
nop
daa
cmc
mov
xor
push
clc
jmp
arpl
fwait
mov
push
andw
jnp
sub
dec
xchg
scas
ret
jecxz
nop
xor
mov
loop
push
sub
mov
enter
ja
add
aad
jmp
and
mov
aam
push
xor
mov
xor
clc
cmp
mov
inc
clc
fwait
mov
inc
roll
aas
inc
cwtl
add
mov
inc
push
or
jecxz
and
imul
push
call
push
push
int3
jecxz
and
loop
jae
mov
lahf
inc
enter
add
pop
mov
jbe
push
push
jbe
pop
cs
xchg
cltd
ret
or
mov
inc
bound
shlb
inc
and
jns
les
pop
cltd
ret
loopne
and
xor
rcrl
and
repz
inc
pushl
and
repz
inc
clc
lahf
mov
inc
push
dec
add
inc
hlt
out
mov
or
movsb
loopne
dec
inc
add
mov
xchg
pusha
aaa
hlt
rcrb
das
adc
xorl
mov
mov
adcl
inc
out
fsubrs
out
sbb
add
ds
add
pushf
ret
mov
jae
mov
clc
sub
inc
je
lods
ret
jecxz
mov
cld
and
sbb
rcll
and
mov
pop
xchg
rorb
js
and
imul
inc
clc
mov
in
add
xchg
in
or
xor
ds
xchg
cs
jae
and
xchg
sbb
sbb
and
in
add
not
jnp
sub
or
fdivrp
push
ret
sahf
mov
mov
pushw
adc
mov
outsl
jb
inc
arpl
mov
add
movsb
fdivrp
push
ret
and
jae
fcoms
cs
fistl
xchg
inc
bound
aas
mov
and
sahf
mov
enter
pop
xchg
stos
sahf
andl
pop
les
fstpt
lods
sarb
ret
jecxz
test
arpl
sahf
mov
enter
or
inc
addl
hlt
loopne
mov
idivb
inc
out
hlt
test
cmp
pop
mov
sub
repz
test
imul
mov
enter
xchg
sub
faddl
jecxz
and
mov
aam
ja
das
insb
jecxz
and
test
push
and
mov
das
adc
mov
mov
nop
dec
aas
mov
xchg
pusha
aas
inc
pop
xor
cmp
ret
ss
dec
sub
call
mov
adc
js
mov
bound
xchg
inc
cwtl
iret
faddl
jecxz
out
hlt
test
aas
aaa
xchg
orb
test
adc
pop
and
jg
push
inc
jecxz
inc
clc
xchg
mov
inc
outsb
add
rorb
scas
js
pushw
mov
push
push
call
sub
bound
test
outsl
aas
iret
test
sbb
inc
movsb
loopne
jbe
jae
andl
lock
pop
mov
and
xchg
inc
pop
fildl
ret
mov
js
sahf
inc
cwtl
faddl
jecxz
and
adc
mov
inc
jecxz
mov
xchg
pop
pop
jl
cmpl
loop
xor
les
repz
and
xchg
sbbb
loope,pn
xchg
jo
xchg
xlat
je
mov
push
cmpsb
dec
aas
into
imul
imulb
js
push
out
xchg
out
pop
or
add
cmc
mov
push
mov
push
push
or
andl
arpl
mov
inc
call
mov
xor
mov
hlt
out
imulb
ret
push
iret
pop
andl
out
mov
mov
sbb
and
mov
faddl
jecxz
addr16
ss
xchg
push
ficoml
and
sbbb
xchg
xor
hlt
loope
mov
hlt
test
jp
dec
adc
repz
and
fsts
imul
cwtl
dec
faddl
jecxz
or
out
loopne
dec
push
into
jnp
aas
enter
fcoms
cltd
ja
cwtl
psrlq
jecxz
jmp
enter
movsb
mov
jns
fisttps
sbb
ds
and
jbe
jae
andl
pop
adc
repz
imulb
xor
adc
fidivl
push
test
push
mov
sbbb
mov
jae
cmp
out
and
xchg
ds
pop
push
sahf
les
lret
imul
rclb
pop
adc
mov
pop
jecxz
mov
das
bound
aam
dec
sbb
inc
fdivrp
push
ds
add
pushf
ret
mov
mov
sub
mov
loop,pt
xchg
inc
cwtl
repz
jecxz
adcb
mov
inc
je
mov
dec
bound
sbb
rcll
and
roll
and
test
push
or
jle
inc
clc
fwait
mov
sbb
or
sti
fs
in
push
jne,pt
sahf
mov
adc
mov
cld
and
pushw
adc
mov
sub
inc
insb
sub
pop
jle
fidivl
rcrl
outsb
je
pop
mov
ret
add
adc
sbb
pop
andl
pop
sbb
aad
mov
pop
pushf
ret
mov
or
mov
add
inc
lahf
push
inc
clc
fwait
push
ret
and
mov
aas
idivb
lahf
sub
lahf
mov
fildll
cmp
loop
mov
js
and
adc
data16
fdivs
mov
mul
sub
cmp
arpl
das
and
push
or
jecxz
mov
sahf
jbe
push
dec
sub
loopne
and
mov
inc
cwtl
push
roll
jecxz
jecxz
out
adc
clc
mov
jp
xorl
arpl
aas
mov
jecxz
arpl
pop
cmpb
xchg
pusha
xor
jecxz
mov
lfs
mov
imul
adc
lods
push
rorl
adc
jbe
pop
jmp
jbe
repz
push
mov
xchg
jnp
into
and
aam
push
xor
loop
scas
add
mov
notb
ja
ret
jecxz
sub
lock
das
or
jecxz
jmp
rolb
pusha
andb
and
push
lret
xchg
mov
inc
bound
and
mov
jmp
inc
bound
arpl
test
mov
iret
add
inc
out
inc
scas
mov
arpl
imul
iret
xchg
int3
jbe
outsb
dec
cmp
xchg
int3
loopne
andb
pop
xor
push
jp
into
jbe
sbb
fsubrs
shlb
and
sbb
ret
push
enter
add
pop
mov
xor
and
jae
cmp
loop
test
clc
mov
inc
jbe
push
or
jae
fcomps
cwtl
aas
inc
clc
mov
sub
loop
sub
ret
roll
jecxz
jecxz
pop
xor
jecxz
add
mov
sbb
ret
push
andl
pop
mov
andl
shl
mov
aaa
into
ja
sbb
jne
jle
fisubs
pusha
call
fcoms
add
and
mov
popf
ret
mov
inc
adc
mov
js
mov
pop
xlat
pushf
ret
mov
sahf
and
ljmp
mov
daa
adc
mov
mov
cld
sbb
pop
xchg
sub
fsubr
cld
and
shlb
out
add
sub
fwait
lret
jecxz
and
mov
lret
outsl
subl
andl
arpl
push
pop
repz
imulb
into
cwtl
divb
mov
pop
jp
pop
mov
imul
repz
out
push
ret
mov
pop
fistps
mov
mov
movd
jbe
push
xor
jl
mov
cld
sbb
cmp
andl
fistpl
aad
stc
mov
imulb
into
cwtl
divb
sbb
stc
mov
inc
dec
sti
fadd
jecxz
jecxz
mov
call
mov
jecxz
pop
jns
andl
shrl
shl
add
js
or
andb
dec
sbb
ret
jecxz
cmp
mov
pop
jmp
std
inc
bound
daa
mov
sbb
cmp
andl
ret
and
mov
ret
es
mov
stos
or
and
loope
mov
aaa
int3
ja
test
mov
in
add
sahf
and
pusha
mov
add
ret
div
clc
mov
imul
jbe
xor
adc
cmpsl
je
pop
push
iret
dec
mov
inc
arpl
push
dec
arpl
xchg
sub
xchg
mov
movsb
adc
stos
repnz
sub
arpl
outsl
enter
enter
ret
or
andl
out
dec
xlat
je
dec
and
cld
and
aam
fildl
push
andl
daa
in
and
pop
mov
ret
xchg
mov
inc
adc
hlt
call
lods
imul
push
dec
dec
add
faddl
jecxz
test
andb
adc
aaa
int3
call
xchg
and
lret
xchg
mov
dec
xchg
add
inc
lret
cmp
add
jae
js
mov
fbstp
mov
ret
jecxz
mov
push
das
pop
jecxz
adc
dec
push
adc
xchg
in
add
aad
sahf
jbe
xchg
dec
pop
test
sub
xchg
lock
adc
pop
jge
mov
sbb
arpl
mov
das
adc
cmpsl
jbe
jmp
andb
testl
and
dec
add
outsl
and
repz
sub
xor
bound
pushw
adc
cmpsl
repnz
mov
inc
arpl
add
js
and
imul
test
test
push
inc
out
es
ss
es
mov
jo
fwait
and
cmp
cwtl
cmp
rcr
add
jae
js
mov
ret
loop
imul
pop
mov
push
jecxz
ss
pushf
mov
or
mov
loop
scas
setg
add
js
cltd
inc
cwtl
pop
roll
jecxz
cmpb
xor
rcll
cmp
mov
cwtl
sub
and
and
jnp
fcomps
adc
inc
clc
mov
inc
cmc
mov
in
pop
jecxz
shl
mov
cltd
idiv
scas
rcrl
jp
pop
incl
dec
xchg
and
dec
aas
push
and
fildl
cmpl
pop
jle
mov
pop
lahf
pop
cmpsb
xchg
cmp
jmp
repz
xlat
mov
xor
inc
sar
mov
inc
push
jnp
cmpsb
jg
cwtl
mov
jecxz
scas
seta
and
add
mov
andl
leave
cmp
cs
flds
xchg
push
dec
notl
dec
adc
add
mov
mov
imul
rcrl
mov
push
fdivs
mov
divl
mov
sbb
push
mov
into
out
aas
pause
sub
loopne
repnz
lods
sub
arpl
es
jecxz
scas
cli
insb
andl
xchg
cmovp
jecxz
fmulp
push
arpl
out
sbb
mov
arpl
inc
xchg
or
jecxz
mov
dec
sub
inc
test
jecxz
jecxz
test
rorb
or
inc
out
add
lcall
mov
stos
dec
das
lcall
adc
cmpsb
xchg
scas
jbe
pop
cmp
andl
xchg
xchg
stos
jbe
aaa
cs
push
mov
dec
bound
arpl
jecxz
test
xchg
pmovmskb
jecxz
scas
or
scas
dec
scas
jno
je
mov
lahf
push
xor
mov
jg
dec
testb
sbb
ret
cwtl
dec
push
dec
testb
and
enter
hlt
and
ss
add
enter
rcll
sti
inc
arpl
and
sub
or
das
lock
mov
stos
jmp
or
and
and
test
or
lds
push
arpl
adc
ret
out
or
mov
xor
mov
xor
icebp
dec
cs
jecxz
or
int3
jmp
jno
scas
xchg
sub
xchg
clc
mov
jmp
sub
aad
lods
inc
arpl
cmp
adc
sub
stc
lods
dec
test
mov
jbe
or
negl
xor
leave
xor
or
add
inc
out
mov
xchg
cs
call
inc
bound
andl
fmull
pxor
add
aas
sbb
and
jecxz
sub
ss
sbb
and
nop
dec
dec
arpl
cmpb
add
js
mov
pop
sbbl
inc
fidivs
out
sbb
stos
das
bound
push
movsb
pushl
sbb
and
rorb
lret
xchg
adc
in
test
les
xlat
cmp
and
roll
and
jne
and
roll
outsl
outsl
xchg
mov
aad
sbbb
add
jecxz
xchg
inc
iret
jl
adcl
das
jno
arpl
mov
arpl
pop
cli
add
js
cmp
decb
into
das
mov
sahf
aad
sbbb
mov
aaa
cwtl
aad
sbbb
mov
data16
add
dec
cs
mov
loopne
andb
clc
lea
mov
cltd
aad
jmp
sbb
add
fisttps
add
divb
sbb
out
dec
fbstp
jp
sbb
jecxz
jne
and
push
mov
xchg
inc
pop
or
inc
bound
ret
call
mov
jecxz
loop
and
mov
jmp
call
lret
arpl
out
out
pop
xor
insb
xlat
add
clc
sbb
jne
and
mov
dec
sub
push
jae
mov
iret
push
enter
jo
pop
lcall
ret
mov
out
pop
jmp
insb
arpl
mov
ret
inc
sub
mov
movsb
clc
mov
int
lahf
dec
jnp
dec
push
ret
jecxz
out
mov
and
and
mov
and
stos
mov
jae
sub
inc
lahf
jl
loope
sbb
fdivs
aas
loopne
add
in
jecxz
test
and
cmp
jne
and
mov
and
insb
cli
mov
inc
ret
dec
mov
inc
outsb
xchg
in
into
cltd
inc
ljmp
and
inc
add
out
pop
jecxz
cs
ret
sub
and
mov
orl
or
andb
les
rol
das
push
sub
mov
mov
jmp
jge
subl
pop
mov
jg
mov
mov
aaa
mov
loop
push
sub
mov
inc
call
lods
pop
inc
lods
xorl
rep
mov
jae
outsl
imull
mov
pop
pop
mov
mov
inc
push
leave
stos
dec
mov
sbb
stos
mov
and
or
jg
and
imul
inc
in
and
imul
dec
dec
fidivs
addl
loop
test
and
cmp
cmp
fcomps
cwtl
push
inc
clc
mov
pop
jmp
or
scas
aas
sahf
inc
cwtl
inc
roll
jecxz
jle
loope
mov
mov
jecxz
and
mov
or
lret
js
xlat
stos
mov
add
mulb
mov
mov
repz
ja
cltd
aas
inc
jne
mov
lret
adc
inc
bound
arpl
pop
iret
adc
andb
mov
jmp
inc
bound
jecxz
lea
or
popa
andb
popf
clc
sbb
jg
inc
sub
andl
dec
lock
sub
push
add
mov
push
add
into
out
ret
ret
jg
and
mov
xchg
inc
pop
push
daa
out
pop
add
out
add
roll
push
mov
scas
js
push
fdivr
push
pop
jmp
cmp
outsl
frstor
inc
jp
sarl
and
mov
ret
dec
xchg
pop
inc
arpl
mov
mov
dec
daa
fdivs
dec
daa
dec
arpl
pop
inc
cwtl
ja
add
mov
push
mov
jmp
mov
scas
inc
dec
and
and
aad
xchg
loop
mov
js
push
fdivr
sbb
js
or
repz
xchg
imul
jnp
cltd
fsub
add
jbe
aaa
test
fstl
jne
inc
adc
cmpsl
jo
pop
xchg
lock
adc
out
dec
xlat
ret
or
andl
stos
andl
arpl
mov
ds
andb
jl
in
push
sub
pop
jns
es
ret
lret
ret
aam
addr16
push
jmp
and
adcb
mov
movsb
xchg
bswap
int3
jecxz
scas
shrl
dec
sbb
inc
bound
cmpsl
stos
lock
inc
out
inc
add
pop
mov
inc
jecxz
test
arpl
push
sub
inc
jmp
arpl
fisttps
aas
movsb
loop
push
aad
cmpb
lret
fadds
arpl
outsl
imull
sub
rcll
out
mov
dec
mov
ret
nop
inc
adc
xlat
jbe
pop
and
imul
add
add
fcoms
inc
and
das
mov
or
adc
inc
arpl
and
rcrb
and
mov
andl
bound
ret
pop
andl
repz
dec
daa
testb
mov
bound
mov
shrl
repz
inc
arpl
sbb
ret
out
addr16
add
fdivrs
mov
js
mov
push
stos
pop
fninit
ret
loop
push
inc
pop
fiadds
mov
js
sahf
inc
pop
repz
inc
push
enter
inc
inc
hlt
rorl
xchg
arpl
leave
ret
jne
and
imul
jecxz
decb
add
aam
cwtl
divb
mov
outsb
inc
pop
inc
lods
andl
fidivl
loopne
cmp
hlt
loopne
rorb
add
inc
call
add
inc
out
add
ret
adc
push
or
add
ret
jecxz
sub
arpl
out
adc
or
pop
and
jne
notb
bound
xlat
xchg
dec
rorb
add
and
das
mov
pop
repz
mov
adc
insb
inc
bound
lret
stos
sbb
and
or
jg
cltd
sub
mov
inc
arpl
rorl
push
mov
add
test
sub
mov
roll
inc
inc
arpl
or
jecxz
out
ja
enter
imul
stos
mov
and
enter
jae
inc
fadds
sub
jmp
and
imul
add
mov
cmp
fcoms
add
pop
adc
mov
and
adc
xchg
sbbl
imull
jbe
pop
jp
arpl
and
add
jmp
cwtl
push
push
xlat
ss
outsb
add
mul
lahf
gs
js
or
andb
call
cwtl
pop
mov
and
xchg
mov
fidivrs
inc
bound
xchg
inc
cwtl
repz
jecxz
ljmp
add
ret
andl
push
sub
pop
mov
das
mov
fwait
dec
inc
ficompl
ret
and
xchg
cmpb
testb
xchg
ss
pop
xchg
and
jecxz
out
ja
lea
cmp
cwtl
sub
push
mov
mov
lds
and
dec
xlat
dec
mov
mov
ss
sbb
cmp
mov
and
in
jae
clc
push
xlat
outsb
pop
push
in
push
sub
pop
jns
mulb
cmpl
jg
and
addl
inc
clc
mov
mov
ret
jecxz
xorb
aas
pop
outsb
adcb
adc
out
mov
leave
ss
dec
mov
lea
es
jl
fsubrs
jns
loop
push
out
dec
xlat
dec
stc
lahf
imul
lahf
mov
pop
fsts
pop
sti
add
pushf
ret
mov
rcrb
aas
inc
clc
cmpsl
mov
dec
roll
daa
imulb
xor
js
mov
pop
mov
ret
mov
inc
clc
mov
mov
ret
sahf
inc
clc
mov
xor
cmpsl
mov
in
push
sub
xchg
cmp
cmp
dec
inc
fidivl
jg
and
addl
inc
clc
mov
mov
ret
jecxz
mov
dec
stc
lahf
mov
pop
jnp
xchg
dec
call
or
ret
xchg
aad
cld
mov
das
mov
and
mov
ja
enter
add
inc
clc
mov
lcall
js
enter
dec
and
mov
mov
scas
aaa
scas
add
mov
pop
out
add
pushf
ret
mov
push
mov
inc
inc
clc
mov
cltd
mov
push
add
ret
lcall
or
cmp
lods
daa
and
and
and
mov
int3
iret
insb
int3
mov
in
mov
stos
dec
lods
subl
js
cwtl
idivl
test
sti
test
jmp
and
and
cmpsl
lods
or
add
out
fwait
mov
ret
push
jmp
add
pop
jmp
add
outsl
mov
ret
loop
mov
mov
sub
arpl
arpl
cmpsl
ret
sub
and
lret
mov
add
jp
dec
insb
int3
mov
test
or
inc
bound
mov
push
mov
or
add
stos
push
scas
pop
dec
lods
andl
arpl
lret
jecxz
sub
into
cwtl
divb
sbb
pop
mov
inc
xor
jl
adcl
sbb
push
andl
pop
jge
push
repz
xchg
aad
adc
mov
pop
sti
mov
mov
jmp
push
mov
mov
push
adc
mov
mov
out
sbb
and
push
in
add
inc
lods
push
arpl
xor
cmp
mov
repz
test
pushl
pop
fwait
xchg
ret
mov
popf
and
push
mov
loop
xchg
jl
xorl
popa
xchg
stc
lahf
dec
dec
dec
dec
scas
ret
jecxz
cmp
pop
shll
lret
aaa
and
or
jg
imul
jns
inc
ljmp
mov
bound
push
cmpsb
lcall
cwtl
jae
add
jns
pop
bound
or
loope
cmp
andl
mov
xchg
and
sahf
jbe
push
push
xchg
ret
test
bound
and
call
add
mov
bound
scas
add
andb
bound
and
sbb
dec
in
mov
dec
in
mov
stos
jecxz
push
mov
mov
pop
and
adc
mov
rorl
leave
js
mov
rorl
inc
loop
and
cs
out
cwtl
pop
enter
dec
in
mov
pop
adc
adc
cmp
sub
add
xchg
pop
ret
jecxz
ror
testl
pop
ret
jecxz
xchg
inc
cwtl
call
add
mov
bound
scas
add
andb
insb
sti
xchg
mov
ret
adc
fdivs
mov
idivl
sub
add
loope
and
adc
rolb
andl
ret
cs
arpl
jecxz
and
push
out
dec
and
outsb
inc
pop
dec
lods
andl
fdivl
push
stos
in
and
pop
add
cmpl
enter
ret
sub
arpl
mov
inc
bound
stos
ret
sub
arpl
arpl
jns
fcoms
add
enter
hlt
pop
add
pushf
ret
mov
jle
addl
mov
mov
aam
cwtl
divb
mov
pop
pop
adc
and
and
xchg
jo
push
ss
jbe
mov
sub
arpl
out
js
jle
push
dec
sbb
pop
jmp
jnp
cld
mov
pop
pop
cmpsb
arpl
shrl
push
jbe
mov
imul
pop
xchg
and
insl
imul
jecxz
pop
out
andb
popa
andb
bound
lcall
ret
mov
add
jecxz
inc
bound
fidivs
sti
and
repz
call
call
roll
jecxz
test
popa
andb
cwtl
neg
add
mov
ja
mov
ret
push
andl
and
out
inc
ljmp
and
andl
call
add
inc
loope
and
in
addl
imul
xchg
xchg
call
or
xor
andl
clc
incb
inc
les
movq
dec
call
adc
or
mov
filds
jl
inc
ljmp
and
test
into
das
mov
int3
push
adc
pop
andl
clc
push
cmp
inc
push
iret
iret
incl
orl
imull
sub
arpl
sbb
xchg
sub
ret
xchg
sbb
inc
jecxz
and
call
lret
popa
andb
fisubrl
add
add
dec
out
and
imul
add
mov
and
fcomps
cld
and
test
jg
ror
pop
andl
dec
mov
xchg
rcll
mov
ret
jecxz
xchg
push
push
cli
mov
inc
push
or
je
sbb
adc
sahf
and
add
scas
mov
ja
stc
aas
icebp
jne
or
andl
clc
mov
xor
and
push
loopne
cmp
inc
fdivs
lock
sbb
and
xchg
dec
addr16
dec
jecxz
and
arpl
mov
add
idivb
sub
inc
lahf
ja
ljmp
and
repz
repz
inc
call
dec
outsl
hlt
scas
scas
sarl
jne
and
roll
push
inc
clc
xor
sub
andl
in
push
loop
dec
addr16
pop
aad
jecxz
xchg
mov
jecxz
xchg
inc
cwtl
sti
faddl
jecxz
jecxz
push
jmp
jae
adc
and
out
pop
iret
repz
push
imulb
arpl
push
xor
loop
ret
cmpsl
outsl
lahf
cmpl
loop
dec
jg
andl
scas
scas
shll
inc
andw
inc
ljmp
sub
andl
and
jmp
inc
bound
scas
add
iret
lret
jg
or
pusha
andb
bound
push
dec
imul
out
inc
aas
clc
dec
add
arpl
and
xchg
sbb
adc
mov
jecxz
and
imul
andl
cmp
cmpl
ds
orb
sub
ret
arpl
jecxz
clc
mov
mul
cwtl
push
inc
cwtl
outsl
roll
jecxz
out
inc
cwtl
aas
roll
jecxz
out
mov
prefetch
inc
jecxz
pop
pop
jns
sahf
and
and
popa
andb
fisubs
mov
add
loopne
and
push
or
and
push
add
and
push
or
test
rorb
or
inc
movsb
enter
imull
arpl
and
loop
scas
or
call
mov
cltd
in
add
idivb
fistpl
arpl
push
add
cmp
inc
roll
push
jb
xor
roll
sub
clc
mov
inc
call
or
inc
push
imulb
mov
xchg
push
mov
pop
or
inc
xchg
pop
arpl
adc
cmp
repz
dec
ret
add
inc
fdiv
mov
add
into
das
mov
push
jecxz
sbb
xor
add
jae
jecxz,pt
ret
jne
fwait
mov
mov
add
mov
jp
je
pop
and
jnp
fcom
adc
iret
and
call
inc
arpl
and
xchg
xor
scas
jne
xchg
sub
mov
daa
pusha
andb
sahf
andl
test
xor
das
shrl
std
jecxz
scas
jg
add
mov
push
add
xchg
ret
mov
lock
jae
js
mov
test
pusha
andb
bound
and
dec
xlat
dec
mov
mov
jne
ss
das
inc
mov
sbbl
inc
mov
and
mov
inc
bound
pop
andl
mov
bound
dec
call
xlat
pop
es
inc
out
jo
jecxz
inc
push
or
jae
sbb
aaa
and
mov
pop
into
enter
pusha
pop
and
xchg
cmpb
jne
and
roll
cmp
xchg
mov
dec
push
push
xchg
xor
inc
cwtl
repz
jecxz
jecxz
shl
mov
subb
ret
jecxz
cwtl
mov
add
andl
out
adc
mov
ret
lret
loop
nop
cmpsl
mov
sbb
jae
mov
outsl
xchg
repz
loop
dec
imul
int3
sub
test
adc
iret
jmp
test
pushl
push
mov
mov
lods
mov
mov
push
jmp
push
mov
inc
push
mov
or
add
inc
fs
mov
pop
jle
pusha
cmpsl
mov
ret
pop
jp
dec
shll
loop
jle
sar
or
adc
and
inc
roll
jecxz
ljmp
leave
mov
loop
and
jae
out
js
mov
fistl
mov
inc
jmp
push
jb
repnz
push
stos
cwtl
push
jb
lret
sub
mov
je
pop
and
xchg
dec
daa
xchg
test
jne
and
mov
pop
mov
ret
mov
js
mov
ret
xchg
dec
aas
mov
pop
mov
mov
stc
xchg
push
hlt
clc
xchg
idivb
out
js
jle
jbe
push
lret
jmp
or
cwtl
roll
jecxz
cli
mov
imul
stc
mov
test
and
and
xchg
mov
into
push
jmp
pop
bound
mov
repz
cmp
push
xchg
mov
rsqrtps
scas
rcl
sub
lcall
inc
and
and
mov
add
aam
cwtl
divb
cs
add
shl
pop
les
mov
enter
ds
pusha
sub
sub
and
mov
ret
adc
xchg
inc
cmpsb
dec
cmp
adc
imul
add
ret
aam
out
dec
scas
dec
test
sbb
inc
bound
xchg
inc
cwtl
repz
jecxz
push
cmp
repz
bound
stos
xor
pop
push
xchg
ret
mov
push
in
xchg
inc
into
jecxz
sahf
mov
fs
adc
loop
aam
iret
xchg
push
les
pusha
xchg
loope
and
add
mov
pop
ss
jecxz
and
mov
out
pusha
andb
lret
lods
ret
jecxz
notb
loop
xchg
fildll
fcomp
adc
push
imul
faddl
jecxz
test
pusha
andb
bound
and
pop
mov
scas
andb
lret
inc
bound
push
andl
lret
nop
mov
inc
bound
and
repz
dec
mov
and
arpl
add
jae
cmp
dec
rcrl
mov
iret
add
pop
les
xchg
lock
adc
pop
jge
mov
loop
sahf
mov
sbb
sbb
and
and
fnstenv
outsl
daa
inc
mov
setae
mov
push
push
mov
xor
stos
and
repz
add
movsb
ret
mov
js
push
in
xchg
scas
int3
jecxz
mov
ret
mov
mov
add
inc
bound
mov
ret
mov
inc
bound
sub
arpl
sub
loope
and
insb
repz
dec
arpl
push
pop
bound
inc
lock
imul
mov
push
and
repz
jecxz
and
mov
inc
popa
andb
arpl
push
dec
out
and
imul
xchg
xor
loope
and
sbb
andl
lret
aam
or
js
mov
push
bound
iret
iret
loop
arpl
jecxz
loop
dec
dec
cmc
mov
cwtl
jecxz
dec
or
mov
jecxz
scas
setnp
sbb
fdivs
mov
testl
dec
loope
and
cli
xor
lock
mov
xchg
push
ss
loop
fwait
lahf
mov
add
inc
fcoms
pop
and
mov
movsl
ret
mov
jl
subl
adc
mov
cld
and
arpl
loop
and
imul
inc
arpl
mov
and
das
mov
sbbb
xchg
mov
aaa
int3
ja
lods
ret
jecxz
cltd
mov
inc
pop
jecxz
and
inc
bound
notb
out
inc
lock
imul
arpl
mov
adc
sbb
andl
ret
loop
and
jle
sub
mov
hlt
test
push
sbb
xor
fiadds
sub
js
scas
shrb
std
loop
sub
iret
sbb
adc
mov
imul
jnp
xchg
loop
es
and
xchg
cmp
aas
inc
and
mov
fs
fdivs
mov
testl
and
jecxz
inc
lock
imul
arpl
push
andl
fneni(8087
add
hlt
test
push
cmp
pop
lahf
xchg
ret
mov
notl
jns
and
mov
aad
adc
and
in
push
gs
mov
jb
mov
aad
adc
and
ss
outsl
sbb
and
jae
enter
ret
mov
mov
jle
inc
pop
ss
adc
into
das
mov
and
sbbb
cmc
mov
clc
jnp
arpl
sbb
push
gs
mov
sbb
xchg
aad
adc
and
in
push
gs
mov
loop
mov
lock
add
mov
aaa
sahf
mov
jns
popl
mov
inc
popa
andb
andl
mov
mov
add
aam
cwtl
divb
mov
in
add
ret
or
lcall
shlb
bound
cmp
andb
fisubs
mov
add
repz
imulb
push
jmp
int3
jecxz
xchg
fildll
fcomp
adc
push
imul
imul
out
aad
add
movsb
shll
sub
loopne
and
and
scas
rclb
cmp
xorb
arpl
mov
pop
pop
jae
xchg
xchg
andl
jnp
mov
inc
popa
andb
mov
add
inc
shrl
leave
jecxz
test
clc
push
xlat
outsb
pop
inc
mov
ds
aad
sbb
adc
idiv
mov
mov
mov
pop
pop
jecxz
loopne
push
and
negb
imul
insb
push
jbe
mov
notb
loop
and
sbbl
nop
dec
add
insb
repz
inc
bound
stos
jo
jecxz
mov
call
or
add
mov
sbb
and
js
jge
jbe
mov
inc
call
popa
xchg
stc
push
pop
ud2
mov
fldcw
cmc
jecxz
test
and
cmp
jne
cltd
sub
mov
movsb
clc
push
mov
arpl
rdpmc
sahf
mov
stc
pop
push
sahf
and
push
push
rdpmc
cmp
inc
mov
dec
cmc
lea
inc
xchg
das
cmpsb
push
jl
aad
int
fists
add
add
xchg
int
adc
pop
sub
aas
lret
jne
or
adc
dec
jnp
mov
cwtl
aad
repz
js
mov
scas
inc
bound
stos
push
mov
sbbb
jg
inc
mov
sbb
mov
clc
mov
fwait
xchg
ret
mov
outsl
xchg
cltd
inc
cwtl
mov
add
jns
mov
mov
pop
out
jp
cmp
iret
iret
repz
popa
andb
mov
jnp
cli
fnstcw
ret
rol
ja
cmp
imul
adc
in
pop
xor
push
in
jns
fsubrs
pop
shl
cltd
mov
sti
jmp
inc
bound
push
into
pop
xchg
cs
arpl
pusha
dec
pushf
ret
mov
aad
stc
xor
inc
mov
dec
sub
push
and
loop
cmp
mov
inc
rorb
repz
mov
mov
jae
ret
mov
lock
adc
adc
cmp
cmp
mov
mov
fwait
xchg
ret
mov
cmp
loope
mov
scas
push
bound
and
add
mov
inc
cwtl
aaa
roll
jecxz
xor
jecxz
orl
testl
sbb
pop
push
movsb
mov
add
inc
jmp
mov
push
leave
push
jne
nop
dec
cmp
xchg
pusha
cmp
rolb
idivb
outsl
repz
mov
pop
jp
mov
ret
mov
inc
adc
adc
mov
inc
mov
jmp
inc
bound
cmp
andb
pusha
andb
cmpsb
sahf
aas
jmp
cwtl
cmp
jecxz
scas
seta
mov
inc
adc
mov
inc
clc
mov
clc
push
cmp
inc
sub
mov
js
mov
pop
mov
ret
mov
mov
xchg
pop
scas
push
mov
jae
sbb
jne
notb
ss
adcl
out
ret
jecxz
ds
adc
mov
pop
add
cmp
fisttpll
mov
bound
stos
sub
std
mov
inc
call
jns
cwtl
mov
cwtl
xor
test
lods
ret
mov
jne
add
fdivs
mov
ds
lock
push
xor
bound
sbbl
pop
add
ret
push
andl
pop
push
mov
jnp
xor
negl
push
xor
mov
ret
push
andl
push
lahf
pop
aad
sbb
adc
inc
test
cs
pop
or
ret
push
andl
and
inc
decl
repz
jbe
std
addl
push
fdivs
mov
pop
pop
and
test
sbb
pop
imul
sbbl
pop
pop
push
inc
clc
mov
pop
jmp
pop
arpl
cwtl
push
push
fmul
repz
and
xchg
pop
mov
js
and
call
push
jge
xchg
push
andl
out
add
cmp
cwtl
push
inc
clc
mov
movsl
loop
push
inc
cwtl
cmpsl
roll
jecxz
jle
cmpsb
bound
adc
push
xlat
insb
pop
fwait
dec
arpl
outsl
cmpsb
mov
xor
adc
dec
fidivs
cltd
mov
lock
pushf
mov
pop
jae
inc
cwtl
adc
add
mov
jb
ljmp
mov
xor
adc
and
loop
int3
xchg
ret
mov
inc
bound
repz
aam
pop
andl
jae
add
in
lahf
mov
fildl
orb
and
mov
mov
out
andb
popa
andb
popa
andb
add
xchg
inc
pop
repz
inc
movsb
sbb
out
popa
andb
sar
mov
inc
jbe
mov
out
popa
andb
mov
add
lock
imul
adcl
orl
xlat
jo
stos
and
bound
imul
and
mov
inc
cwtl
push
roll
jecxz
test
andb
adc
loop
scas
sub
js
out
and
test
add
scas
je
arpl
xlat
push
xchg
arpl
loop
lret
jae
xorl
bound
mov
repz
lcall
inc
push
andl
imul
and
sbb
cmp
loop
pushl
andl
clc
xchg
mov
push
insl
fisubs
inc
data16
fnstenv
aas
out
jmp
mov
bound
int
add
add
mov
dec
arpl
push
dec
arpl
and
sbbb
add
enter
sub
push
and
cmp
int
add
sub
andl
ret
jbe
das
das
out
imul
ret
scas
lods
sub
loopne
cs
push
scas
sub
adc
and
arpl
dec
ja
ss
out
pop
inc
and
cltd
push
mov
xor
cli
movsb
imul
push
sub
mov
inc
push
notl
andl
mov
les
xorl
lea
mov
ret
jle
ret
cmp
cmp
mov
or
js
mov
pop
xchg
cltd
inc
cwtl
neg
add
mov
mov
pfpnacc
adc
or
xor
xor
sbb
inc
arpl
mov
push
push
iret
add
outsl
nop
arpl
push
add
arpl
adc
and
mov
xor
loop
dec
imul
mov
inc
mov
imul
mov
dec
arpl
sarb
and
cltd
mov
mov
sti
jne
and
roll
and
xlat
scas
fstpt
pop
jae
hlt
scas
scas
iret
ret
jecxz
mov
lock
and
pop
add
mov
js
pop
or
andb
push
xchg
aas
cmc
loop
dec
jg
sbbb
ret
int
ret
andb
or
loop,pt
arpl
push
shrl
mov
adc
inc
lea
push
jmp
pop
mov
loop
addr16
adcl
jp
inc
ficoms
pop
addr16
ret
mov
cmpsb
cs
out
out
pop
jecxz
push
sbb
lods
jmp
arpl
clc
push
xlat
pop
jp
shrb
push
out
arpl
dec
push
xchg
sbb
ret
or
bound
cmp
and
jbe
aaa
aad
jmp
loope
adc
sbb
into
outsb
mulb
mov
mov
mov
sub
and
xchg
iret
jbe
or
or
mov
jg
inc
aas
lret
into
arpl
ds
xchg
sub
push
not
push
push
stc
mov
ss
out
ror
or
outsb
push
psubsb
sub
setge
mov
dec
call
pop
inc
dec
lods
adcl
or
sbb
repnz
cs
scas
jne
or
iret
pop
pop
stos
dec
fstpl
push
pop
jmp
sub
and
sti
repnz
mov
mov
decb
psubsb
scas
xor
mov
ret
mov
xchg
loopne
aas
cli
xchg
pusha
push
mov
lret
loopne
inc
arpl
outsl
mull
inc
inc
adc
cmpsl
jbe
aas
or
xor
jecxz
dec
and
xchg
dec
sub
push
ret
dec
mov
outsb
cmp
sbb
mov
and
mov
ret
popa
pop
mov
pop
pop
mov
xchg
pop
xor
pop
jb
aad
mov
mov
inc
daa
xor
in
jg
imul
inc
push
addl
mov
cli
js
push
fdivl
call
mul
mov
or
mov
jb
xor
inc
xchg
comiss
jecxz
aad
out
inc
aas
inc
xchg
cmp
push
jb
or
mov
and
xchg
mov
es
mov
movb
ret
mov
fsubs
mov
jb
clc
repnz
rcll
adc
or
dec
push
lret
fdivs
mov
jecxz
pusha
push
ret
data16
daa
lret
arpl
test
outsb
add
outsl
ret
mov
pop
jmp
push
insb
mov
inc
jbe
incb
cs
out
out
mov
ret
mov
xor
aad
in
mov
dec
adc
sbb
adc
xor
mov
mov
into
and
cmp
imul
out
jmp
add
push
lcall
push
mov
or
push
sbb
cmpsb
dec
aas
hlt
cmp
mov
pop
cli
mov
xchg
pop
cltd
test
fstpl
sbb
jbe
mov
dec
pusha
aaa
and
mov
mov
inc
cwtl
faddl
jecxz
and
mov
push
divb
cmp
pop
jmp
inc
arpl
jmp
addl
mov
pi2fd
aad
push
les
mov
int3
xchg
jg
jae
lea
int3
sub
xchg
fdivrs
push
mov
mov
mov
mov
mov
jmp
xchg
dec
dec
dec
fidivs
sbb
cs
push
inc
getsec
in
and
adc
pop
ss
dec
int3
push
ds
pmaxsw
adc
sahf
push
adcb
pop
jns
cmp
pusha
aaa
fsubrs
fnstenv
inc
push
fbstp
xor
repnz
xchg
scas
repnz
sbb
mov
dec
lods
and
dec
xchg
pop
xchg
push
lods
cwtl
push
neg
mov
or
jo
enter
and
in
cmpsb
rorb
testl
out
inc
shlb
push
repz
int3
mov
jb
adc
adc
in
mov
pop
add
out
pop
jmp
inc
bound
cwtl
divb
push
or
mov
xchg
or
ret
push
add
sbb
ret
mov
sbb
xchg
or
xor
jl
xor
clc
push
xlat
pop
mov
push
jmp
inc
arpl
mov
xor
out
dec
daa
xor
stc
xor
jl
adcl
por
push
bound
push
inc
arpl
scas
setae
and
dec
mov
or
add
subl
ret
jecxz
mov
mov
dec
push
hlt
dec
aam
sub
insb
cld
mov
inc
fnstenv
aas
out
jmp
xchg
dec
clc
mov
jae
mov
std
xor
bound
outsl
notl
sbb
dec
push
mov
ret
orl
xchg
adc
arpl
imul
xchg
or
das
xchg
push
stos
mov
jmp
inc
bound
jecxz
mov
shrl
lret
pop
arpl
imul
xchg
or
pop
mov
dec
push
ret
dec
mov
ret
mov
fcoms
add
ss
mov
lret
scas
je
jmp
inc
bound
in
ja
ss
out
out
add
out
lahf
dec
ja
mov
ret
in
ja
ss
out
out
mov
outsl
xchg
cld
mov
mov
mov
inc
fnsave
outsl
outsl
outsl
cmpb
jmp
arpl
ss
ret
in
dec
arpl
push
xlat
outsb
pop
push
imulb
add
sub
add
dec
adc
cmpsl
cmp
push
enter
lahf
pop
imulb
sbb
pop
imul
adcl
sbb
push
iret
ds
adc
push
mov
jge
inc
sbb
mov
inc
clc
lahf
mov
sti
add
movsb
les
xchg
pop
pushf
mov
sti
jp
sbb
std
jecxz
loop
sub
jae
xchg
xor
mov
divl
enter
push
rcll
sub
into
das
stos
sub
jnp
outsb
pop
pop
mov
inc
adc
cmpsl
jbe
jge
inc
sbb
mov
mov
into
mov
je
or
dec
mov
inc
call
pusha
sub
xchg
adc
or
jnp
mov
imulb
add
xchg
or
mov
inc
data16
fdivs
mov
xchg
dec
sub
add
fistps
andb
imul
push
pop
inc
and
out
ljmp
jle
mov
pop
jp
shrb
notl
sbbb
ret
mov
cld
and
scas
pop
in
out
add
or
jbe
jg
andl
ret
and
mov
cwtl
dec
push
jnp
or
jp
imulb
mov
mov
sbb
add
xchg
sbb
fnstenv
js
mov
mov
push
lret
loop
sub
loope,pn
and
into
cwtl
divb
sbb
sub
sarb
jmp
cwtl
pop
cmc
mov
mov
sbb
mov
jg
mov
imul
mov
int3
push
jmp
pop
bound
or
je
cmp
ss
push
call
sarb
pop
inc
and
jmp
mov
mov
mov
ret
xor
test
add
jmp
and
into
cwtl
divb
cs
add
cmp
aad
inc
bound
fwait
and
out
jbe
imul
loop
scas
add
sbb
inc
insb
andl
jecxz
mov
and
jnp
sub
inc
cwtl
xchg
imulb
adc
mov
or
jp
int
andb
pushf
jmp
push
and
lcall
mov
movsb
jmp
jae
rolb
idivb
add
add
sub
int3
aaa
arpl
mov
rorl
add
pop
or
mov
ret
mov
xor
lret
xchg
dec
pop
into
sti
mov
cltd
jp
mov
not
mov
mov
jnp
sti
fbstp
cmp
fildl
popf
lret
or
js
mov
andl
lret
loop
inc
bound
adc
xchg
dec
dec
inc
stc
mov
and
das
mov
or
push
inc
idivb
jle
inc
bound
loopne
cmp
inc
roll
sub
push
add
imulb
hlt
out
mov
pop
setns
clc
mov
repnz
pop
mov
loop
test
les
fadd
js
mov
or
fcoms
add
jecxz
push
bound
or
fcomps
cwtl
push
imulb
cmp
push
add
xchg
dec
dec
dec
bound
iret
notl
scas
xlat
jbe
jae
mov
xchg
dec
dec
dec
bound
iret
lret
xchg
inc
inc
mov
mov
inc
push
iret
iret
iret
loop
dec
ja
ret
mov
imul
cmp
int
inc
cmc
xlat
xor
mov
sub
loop
scas
seta
sbb
dec
and
ret
mov
mov
fwait
add
lret
insb
int3
mov
or
lods
or
mov
andl
or
dec
and
inc
ret
mov
mov
addb
lret
insb
int3
mov
or
lods
or
mov
test
in
dec
and
inc
ret
mov
mov
addb
lret
insb
int3
mov
push
fdivs
mov
pop
mov
fninit
mov
inc
fdivp
mov
inc
dec
ja
ret
sbb
test
adc
cmp
andl
shl
add
es
scas
add
mov
and
and
stos
faddl
cmp
aam
repz
push
dec
sbb
jl
test
adcl
jle
inc
clc
mov
movsb
adc
pop
and
mov
ret
xchg
into
xchg
clc
push
xlat
insb
pop
das
dec
arpl
and
sbb
jne
jle
les
pusha
shl
and
ss
dec
cvttps2pi
jmp
daa
inc
bound
jl
orl
and
hlt
sbbb
arpl
jae
add
jp
mull
andb
movsl
ret
mov
dec
arpl
and
das
mov
xchg
cwtl
push
in
mov
out
arpl
and
and
mov
xchg
ret
sub
xor
stos
pushf
shlb
mov
push
add
arpl
xor
fwait
call
or
lock
jae
cmp
or
or
andl
ret
mov
js
push
in
xchg
outsl
enter
mov
jae
and
inc
push
andb
and
and
ds
leave
push
jne
push
jmp
int3
jecxz
xchg
mov
and
xchg
inc
cwtl
out
faddl
jecxz
js
mov
add
inc
out
inc
add
push
xor
mov
dec
jg
ret
xor
call
jae
fsubrs
outsb
shl
mov
outsl
testl
mov
arpl
shl
add
fldl
mov
inc
mov
jmp
sub
sbb
sub
add
jns
cmpsl
jp
mov
add
mov
and
and
stos
dec
sub
inc
bound
and
icebp
lret
add
movsb
dec
stos
add
imul
push
imul
cmpsl
ret
and
mov
add
packsswb
jle
lock
jle
sub
mov
push
nop
xor
pop
in
and
jecxz
ror
inc
test
das
data16
mov
or
ret
and
mov
ret
jne
fwait
mov
out
add
iret
in
add
mov
ds
sahf
and
pusha
shl
and
add
mov
xchg
es
cmc
jb
mov
shl
andl
arpl
and
adc
ret
jecxz
push
iret
insb
int3
mov
inc
arpl
dec
in
dec
and
imul
loop
ror
andl
andl
pushf
ret
mov
jl
adcl
add
inc
shrl
loop
test
das
mov
negb
fdivrs
sbb
and
and
lcall
sarb
inc
bound
outsl
test
cmp
aas
inc
and
mov
jle
cmp
inc
cmp
loop
sub
loopne
mov
cwtl
mov
add
enter
ret
or
adc
jecxz
les
and
sub
inc
fiadds
or
incl
and
dec
scas
out
ja
arpl
imul
bound
cmpl
enter
ret
jo
arpl
mov
roll
push
inc
clc
mov
movsb
mov
hlt
in
dec
arpl
push
xlat
insb
pop
push
dec
arpl
push
add
andl
jnp
mov
inc
bound
cmp
and
or
je
mov
inc
mov
jmp
push
bound
arpl
nop
add
mov
jg
inc
cmp
pop
jle
cwtl
stos
ret
lret
in
inc
mov
repz
bound
lret
adcl
push
and
imul
loop
test
les
stos
xchg
in
adc
inc
arpl
and
ucomiss
jecxz
ror
jg
mov
inc
bound
xor
bound
aam
addr16
add
cmp
andl
sar
add
movsb
call
mov
dec
adc
dec
ret
jecxz
xchg
inc
clc
xchg
movsb
call
mov
jmp
andl
sub
mov
movsb
clc
mov
loop,pt
lcall
iret
push
inc
clc
xchg
ret
pop
andl
clc
push
cmp
inc
out
dec
scas
jbe
inc
inc
fcoms
outsl
enter
aad
sbb
sbb
and
and
cltd
idivb
cmp
pop
jmp
pop
bound
arpl
inc
mov
loop
mov
dec
ret
mov
inc
out
dec
sbb
push
dec
sbb
mov
jae
stc
cmpsb
pop
mov
pop
dec
adc
loop
js
mov
loope
inc
repz
sub
xor
bound
aam
addr16
sbb
and
dec
cmp
mov
and
imul
add
lcall
faddl
jecxz
arpl
repz
xor
mov
seta
mov
dec
arpl
or
sub
mov
ret
mov
inc
arpl
and
das
mov
sub
outsl
frstor
pop
xchg
sub
ret
jecxz
sahf
mov
sbb
cmp
sbb
adc
lock
adc
pop
add
pop
out
cmp
bound
push
cld
and
mov
bound
stos
ret
push
andl
mov
inc
andb
ret
mov
js
push
fdivr
push
pop
jmp
test
xor
mov
or
jae
cwtl
iret
ret
lret
mov
inc
bound
call
mov
fs
loop
or
dec
xchg
or
loop
cltd
stos
in
jecxz
lret
gs
sub
and
das
xlat
mov
inc
bound
stos
leave
xchg
and
adc
sbb
jecxz
lret
shlb
cs
pop
add
cwtl
ret
mov
push
icebp
andb
bound
sub
cmp
dec
or
ret
out
ja
inc
add
jmp
add
jae
mov
lret
ja
inc
bound
arpl
cwtl
dec
imulb
mov
rcrb
cmpsb
ret
mov
inc
bound
or
bound
outsl
sti
divb
mov
loope
mov
inc
in
ret
pop
rcll
into
cwtl
divb
mov
jecxz
and
ds
sahf
and
pusha
cmp
add
lret
add
mov
pop
jle
or
loopne
jbe
ds
rol
inc
or
cmpsl
jne
notb
ss
or
roll
and
jne
xchg
inc
cwtl
stos
roll
jecxz
push
cld
and
aam
jnp
call
mov
mov
out
arpl
and
repz
and
jp
cmp
fwait
mov
jg
out
mov
inc
adc
pop
ret
mov
sar
mov
xchg
pop
imul
mov
mov
jle
dec
roll
and
js
and
jbe
push
push
loop
and
mov
ret
outsb
sbb
fistpll
cmp
mov
add
xchg
ret
mov
jae
sbbl
jne
and
loop
xchg
lahf
mov
add
ret
pop
mov
pop
mov
into
ja
push
cmp
push
sahf
and
and
xchg
pusha
aas
lret
shlb
ds
rol
dec
push
jbe
mov
notb
in
jae
js
mov
ret
pop
jle
mov
lods
xor
cmp
mov
pop
arpl
enter
sbb
mov
xor
pop
xchg
andl
cwtl
sbb
jecxz
xor
sbb
andl
jne,pt
cltd
inc
cwtl
jecxz
add
mov
inc
decl
pop
andl
es
pop
aaa
push
ja
mov
notl
aaa
push
ja
ud2
mov
mov
mov
mov
sub
in
cmp
iret
iret
lret
cli
outsl
dec
jg
jnp
ud2
cmp
jle
lea
add
aaa
push
ja
mov
notl
aaa
push
ja
repz
dec
and
nop
arpl
insb
int3
mov
push
jb
mov
inc
push
mov
int3
sub
into
pop
insb
int3
mov
adc
int3
jecxz
and
insb
push
outsl
imull
xor
setns
push
sbb
dec
stos
add
ret
cli
repz
idiv
scas
xlat
insb
stos
inc
arpl
cltd
aas
jecxz
mov
sahf
inc
xor
and
ficomps
jg
repz
jecxz
in
mov
sbb
andl
mov
mov
repz
dec
sub
and
and
adc
mov
sub
arpl
mov
add
in
imul
enter
jbe
ret
sub
arpl
fmuls
das
mov
ret
pop
jge
sub
mov
notb
lods
pop
dec
lods
subl
lods
andl
insl
int3
mov
repz
sub
outsl
or
inc
adc
iret
pop
pop
js
mov
pop
jae
push
jno
mov
dec
arpl
sub
push
outsl
notl
dec
scas
jbe
xchg
lock
movhps
push
mov
fdivs
pop
out
push
cwtl
inc
notb
scas
ja
jecxz
decl
bound
adc
push
sbb
das
push
ret
jecxz
pop
push
test
jecxz
sub
arpl
xchg
adc
iret
jmp
mov
iret
outsb
add
fnstcw
mov
push
das
push
fisubrs
pop
out
pop
mov
sbb
mov
mov
mov
xchg
scas
push
test
xor
out
aaa
cltd
sub
scas
scas
fbstp
lds
arpl
or
mov
jbe
sti
mov
sbb
cmpsb
dec
cmp
mov
jl
aas
cmovg
in
add
inc
or
dec
call
jne
lahf
movswl
inc
arpl
dec
push
pop
adc
mov
pop
mov
dec
scas
into
rorb
negl
cwtl
xor
daa
scas
pop
enter
cmp
out
inc
jmp
dec
xchg
add
inc
adc
das
jae
add
hlt
pop
aaa
jecxz
insb
hlt
imul
mov
xlat
push
inc
rdpmc
or
aas
sub
arpl
out
or
sbb
xchg
add
inc
adc
iret
out
dec
dec
jnp
andb
arpl
arpl
pop
lods
ret
jecxz
adc
repnz
rcpps
mov
rcll
xchg
add
enter
out
aas
xor
jbe
das
push
lock
stos
out
adc
push
aas
maxps
fildll
pop
dec
sub
scas
rclb
pop
ss
mov
push
out
repz
sti
dec
arpl
add
or
xchg
ret
dec
xchg
mov
scas
mov
inc
add
iret
outsb
leave
das
cmp
insb
pop
ljmp
shlb
ss
mov
imul
inc
cwtl
stos
faddl
jecxz
jecxz
out
cmpsb
lods
ret
jecxz
push
pop
insb
int3
mov
lock
mov
or
inc
push
aas
iret
xchg
call
push
aaa
cmovae
jne
bswap
xchg
call
andl
fwait
or
mov
pop
inc
arpl
jns
fildll
stos
cmpsl
mov
and
ss
out
pop
mov
not
scas
sti
dec
das
das
dec
xchg
sub
call
mov
mov
aam
push
xor
mov
mov
outsl
xchg
ss
out
pop
inc
ljmp
add
pop
out
or
pop
out
adc
lret
xlat
scas
int3
jbe
das
dec
arpl
sub
arpl
pushf
pop
ljmp
daa
xchg
xor
test
jecxz
adc
lea
ret
in
add
jb
dec
mov
mov
dec
jmp
iret
jecxz
mov
inc
leave
xor
out
lfs
jbe
das
lret
dec
arpl
aad
pushf
or
out
add
mov
jl
xor
out
movzbl
iret
xchg
ja
addr16
test
inc
arpl
imul
or
sub
push
fstps
jecxz
pop
add
inc
arpl
mov
orl
outsl
xor
iret
out
mulb
std
xchg
push
push
cmpsl
stos
push
aaa
cmova
dec
arpl
push
fildll
test
inc
lods
ret
jecxz
or
cmp
sub
aaa
pop
jae
add
lock
aas
push
ret
jecxz
aam
stos
adc
out
and
mov
daa
out
sbb
mov
dec
push
inc
loop
arpl
xchg
inc
out
xchg
scas
xor
push
inc
clc
bound
maxps
cmp
or
hlt
xlat
scas
push
push
ss
out
adc
cs
mov
outsl
xchg
ss
out
daa
dec
aam
rcll
rdpmc
aam
pop
push
aaa
xorps
xchg
xor
shl
iret
sub
xlat
jnp
jecxz
and
mov
or
dec
call
iret
iret
sti
push
aas
iret
mov
dec
mov
out
dec
ret
fwait
out
add
inc
or
dec
call
xor
xchg
mov
repz
push
push
add
cmpsl
sbb
xchg
inc
ja
mov
mov
dec
decl
cmp
sub
mov
inc
into
jle
xor
xchg
mov
repz
xlat
pop
lods
jecxz
lods
adcl
and
mov
lsl
fsubrp
push
iret
push
cmpsl
arpl
mov
iret
iret
ds
cltd
test
and
idivb
jp
mov
js
mov
ret
adc
int3
sub
mov
int3
sub
jle
adc
cmp
dec
lods
xorl
andb
arpl
outsl
iret
or
and
ss
mov
xchg
imul
push
push
std
inc
push
mov
stos
into
mov
xor
and
pop
cs
scas
outsb
andl
adc
xor
sbb
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
cmp
hlt
cwtl
push
lods
or
push
push
aad
imul
loop
js
mov
ret
outsb
iret
das
push
xchg
icebp
push
and
dec
stos
test
cmp
sub
ret
mov
outsl
add
and
dec
or
cmpsl
insb
push
mov
push
mov
xor
imulb
bound
jmp
lods
adcl
xor
mov
or
int
inc
and
adcl
push
enter
ret
sub
arpl
mov
ret
jecxz
xor
popa
andb
scas
lea
andl
mov
int3
sub
jle
adc
cmp
dec
lods
xorl
jnp
mov
mov
outsl
iret
or
and
ss
mov
xchg
imul
jge
jle
mov
add
mov
cmovle
mov
scas
mov
fists
cmp
push
cmpsb
lcall
lods
cmpl
xchg
xor
dec
lods
cmp
xchg
subps
sub
ss
orl
cwtl
push
lods
or
mov
dec
mov
adc
inc
push
imul
std
dec
push
mov
mov
xlat
into
mov
xor
out
pop
mov
mulb
repz
scas
inc
into
mov
jnp
add
sahf
push
push
mov
xchg
dec
sub
jl
mov
cli
sahf
insl
xchg
sahf
pop
notb
pop
jecxz
outsl
mov
sub
arpl
or
adcb
or
inc
out
dec
scas
call
push
jno
mov
dec
mov
outsl
lahf
ss
ds
mov
xchg
add
and
dec
xor
imul
mov
outsl
lahf
xor
and
paddd
jle
push
cli
sahf
insl
xchg
sahf
pop
notb
pop
jecxz
outsl
mov
sub
arpl
mov
clc
mov
insb
inc
out
dec
scas
call
push
jno
mov
dec
mov
outsl
lahf
ss
out
adc
test
and
sahf
push
jmp
sbb
sar
xor
adc
push
imul
test
inc
stc
lea
xchg
repz
mov
push
aaa
data16
test
insb
inc
fidivl
out
lret
popf
mov
loop
xchg
outsl
xchg
outsl
imul
repnz
iret
repz
int3
ss
mov
int3
sub
arpl
lahf
movsb
out
dec
pop
or
mov
xchg
push
rdpmc
pusha
inc
arpl
jecxz
lods
orl
scas
scas
rol
jecxz
and
scas
scas
fisttpl
xor
aam
pop
and
iret
iret
repz
pop
sti
dec
lods
addl
xor
sub
arpl
dec
sub
and
scas
aas
out
mov
jecxz
and
xchg
mov
repz
sbb
xchg
and
dec
lods
sbbl
cmp
sub
arpl
int3
sub
js
mov
ret
xchg
icebp
lcall
aaa
jbe
pop
xchg
rcll
bound
jecxz
pop
notb
pop
jecxz
outsl
mov
sub
arpl
inc
pop
bound
insb
inc
out
dec
scas
call
push
jno
mov
pop
push
mov
inc
out
xchg
rorl
and
dec
mov
outsb
add
mov
dec
and
lahf
shlb
dec
and
sub
int3
mov
sub
mov
dec
lods
subl
out
sub
inc
arpl
scas
or
fwait
dec
loope
mov
mov
add
inc
arpl
mov
sbb
ret
inc
fs
or
mov
rcll
mov
mov
je
dec
insb
add
inc
stos
xchg
test
mov
mov
js
mov
ret
jle
jo
mov
ret
ds
aad
pushf
int
clc
mov
insb
inc
jbe
xor
inc
bound
fcoms
das
add
notb
orl
push
cmp
subl
jbe
das
push
lret
xchg
push
inc
adc
iret
idivl
into
add
stos
mov
and
iret
iret
mul
add
inc
sub
stos
dec
icebp
or
out
pop
mov
sbb
and
xor
lahf
in
dec
and
scas
mov
repz
push
jae
mov
repz
sub
xchg
mov
fsqrt
fs
add
sbb
mov
jnp
dec
sti
in
arpl
and
inc
iret
cmp
add
or
add
pop
ss
fcmovnb
jecxz
sti
dec
arpl
pop
dec
arpl
and
xor
jnp
and
dec
mov
ja
test
das
mov
inc
arpl
mov
arpl
and
dec
dec
mov
andl
cmp
cmpsl
outsl
fwait
xor
out
pop
push
div
scas
scas
fbstp
das
push
mov
jmp
add
add
push
jecxz
lahf
outsl
mov
sarl
ss
scas
daa
scas
inc
insb
add
jbe
das
sub
loop
out
dec
push
dec
add
insb
iret
rorl
subl
das
pop
neg
scas
xlat
jbe
das
push
mov
pop
jae
sub
test
enter
and
loope
xchg
mov
cs
out
jmp
or
das
das
pop
mov
shlb
inc
add
insb
iret
rorl
subl
mov
repz
push
jae
mov
repz
sub
sbb
and
mov
sahf
testb
cltd
idivb
jp
inc
push
xlat
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
cmp
hlt
cwtl
push
lods
or
push
push
aad
imul
loop
js
mov
ret
outsb
iret
das
push
xchg
icebp
push
and
dec
stos
neg
mov
dec
std
dec
push
mov
sub
inc
mov
and
mov
shr
outsl
outsl
mov
loop
sbb
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
cmp
hlt
cwtl
push
lods
or
push
push
aad
imul
xor
push
xchg
icebp
push
and
dec
stos
neg
mov
dec
std
dec
push
outsb
adc
into
dec
mov
scas
inc
outsl
xor
out
xor
lods
or
sahf
pop
notb
pop
jecxz
outsl
mov
sub
arpl
repz
bound
insb
inc
out
dec
scas
call
push
jno
mov
pop
push
mov
stos
push
outsb
ljmp
out
int3
ss
mov
xor
dec
loopne
push
lret
mov
cmpsl
mov
fldenv
sti
loop
jecxz
cmpsl
outsl
xorl
pop
mov
dec
inc
out
mov
insb
inc
mov
insb
inc
mov
dec
aam
xor
inc
dec
sarb
adc
dec
scas
cmovs
andl
sub
adc
xchg
into
scas
and
mov
xchg
dec
xlat
fwait
push
iret
iret
jecxz
push
cs
sub
inc
fadds
push
mov
mov
cwtl
jnp
andl
dec
mov
ret
mov
inc
arpl
lahf
outsl
fwait
xor
out
pop
jge
aad
adc
xchg
outsl
xlat
adc
dec
lahf
push
mov
inc
bound
mov
daa
test
jmp
push
neg
scas
fistpll
bound
outsl
iret
inc
mov
mov
sbb
and
ss
out
xor
pop
out
sbb
jmp
and
mov
out
ret
mov
outsl
xorl
aas
mov
outsl
xchg
out
adc
test
jbe
shrl
arpl
aas
out
sbb
lods
or
sahf
pop
notb
pop
jecxz
outsl
aam
je
shrl
arpl
inc
pop
bound
insb
inc
out
dec
scas
call
push
jno
mov
pop
ss
out
sbb
frstor
ss
out
aas
mov
outsl
lahf
scas
sahf
push
aam
pop
xor
das
aad
insb
jmp
ss
jl
mov
daa
fucomi
je
das
inc
hlt
out
rcl
cltd
or
inc
xchg
or
jecxz
scas
inc
insl
push
loop
xor
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
push
push
or
push
push
aad
imul
add
nop
xor
push
xchg
icebp
push
and
dec
stos
neg
mov
dec
std
dec
push
aaa
mov
push
out
arpl
add
mov
nop
aas
sub
in
add
imulb
lret
sub
adcl
xor
pop
fistl
in
mov
outsl
xchg
xchg
fidivs
mov
das
das
push
idivb
mov
pop
pushf
sbb
dec
loope
mov
int3
sub
mov
int3
sub
jle
adc
push
repz
lods
xorl
jae
mov
mov
outsl
iret
or
and
ss
mov
xchg
jnp
shr
in
not
scas
ret
jbe
mov
dec
out
xchg
scas
dec
mov
xor
lret
push
lret
mov
enter
dec
jecxz
and
push
mov
nop
aaa
mov
ret
jle
jo
mov
ret
ds
aad
mov
push
adc
mov
ret
lret
movsb
xor
ss
in
dec
and
das
add
notb
orl
push
cmp
subl
dec
ret
subb
lods
push
sub
lahf
mov
mov
arpl
adc
xorb
out
adc
adc
xchg
cmc
jle
jle
push
rdpmc
cs
xchg
sbb
cmpsl
mov
mov
and
iret
iret
call
ret
pop
bound
arpl
pop
iret
pop
nop
jg
addr16
iret
sti
pop
jae
das
mov
das
dec
stos
cmpps
dec
or
inc
arpl
pop
out
push
jp
hlt
sbbb
jecxz
js
insb
int3
mov
inc
push
xchg
popl
mov
filds
xor
mov
push
pop
and
dec
scas
jbe
bound
sti
call
dec
jecxz
jecxz
xchg
outsl
mov
pop
out
popf
hlt
scas
scas
pushl
das
jnp
ret
ret
jecxz
dec
das
arpl
push
xchg
mov
imul
loop
push
out
dec
dec
stc
lahf
ja
popa
mov
lock
jg
outsl
fsubp
add
out
pop
jae
sub
mov
or
loope
es
iret
pop
dec
arpl
ja
fildll
dec
mov
pop
jae
sub
mov
enter
jbe
das
pop
mov
loop
outsl
outsl
mov
mov
add
into
das
mov
addl
cmpsb
in
dec
fcmovne
jecxz
out
mov
jecxz
and
jecxz
out
repz
sbb
fldt
arpl
push
add
subl
sbb
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
cmp
hlt
cwtl
push
lods
or
push
push
aad
imul
add
js
mov
ret
outsb
iret
das
push
xchg
icebp
push
and
dec
stos
idiv
mov
dec
std
dec
push
getsec
cmp
insl
lods
mov
out
subl
push
sbb
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
cmp
hlt
cwtl
push
lods
or
push
push
aad
imul
loop
js
mov
ret
outsb
iret
das
push
xchg
icebp
push
and
dec
stos
idiv
mov
dec
std
dec
push
mov
and
lea
mov
insb
int3
mov
mov
cs
popa
mov
ret
jecxz
push
add
aam
sbb
inc
cmp
shl
adc
sbb
pop
mov
outsl
imul
xor
push
add
sarb
add
adc
addr16
sub
or
popa
andb
clc
out
xchg
dec
and
repz
cmpsl
outsl
imul
jo
das
sub
mov
jl
add
mov
or
jnp
and
jo
mov
ret
outsb
add
fldl
dec
and
sub
mov
outsb
adc
mov
sbb
arpl
fwait
in
dec
and
cltd
nop
mov
mov
mov
insb
inc
fdivrp
popa
xor
inc
and
jecxz
pop
negb
pop
jecxz
outsl
mov
je
shrl
arpl
xchg
push
bound
insb
inc
out
dec
scas
push
jmp
andl
fcmovnb
jecxz
addr16
data16
mov
ret
jle
js
mov
ret
ds
aad
xchg
int3
push
rcll
mov
jne
or
andb
arpl
outsl
iret
xchg
adc
aaa
mov
ret
jle
int3
out
int3
mov
dec
lods
xor
xchg
in
dec
and
adc
and
mov
int3
sub
scas
movq
fwait
dec
loope
push
enter
ret
stc
into
jecxz
call
shrl
arpl
insb
inc
mov
je
shrl
arpl
lret
push
bound
insb
inc
out
dec
scas
xor
cmp
outsl
mov
add
xchg
sahf
pop
in
pop
mov
ret
ds
aad
imul
fstl
mov
jne
or
jbe
mov
mov
outsl
iret
xchg
adc
aaa
mov
ret
jle
js
mov
ret
ds
aad
xchg
int3
push
lock
insb
inc
jbe
xor
inc
bound
rclb
das
scas
shrl
sub
aaa
mov
ret
jle
js
mov
ret
ds
aad
xchg
int3
push
lock
insb
inc
jbe
xor
inc
bound
rclb
das
cs
lahf
sub
sub
sub
imul
push
adc
sub
arpl
fbstp
cmpsl
sub
arpl
arpl
xor
lods
or
push
push
aad
imul
xor
enter
dec
sti
add
pop
cmp
pop
insb
int3
mov
out
int3
mov
jne
xor
xchg
in
dec
and
adc
and
mov
int3
sub
scas
movq
arpl
mov
inc
clc
jbe
mov
lahf
je
insl
andl
lods
cmpl
sub
push
adc
adc
mov
dec
lods
subl
out
jno
daa
rcr
es
popa
scas
or
outsb
jae
mov
repz
push
cmp
pusha
imul
inc
cmc
ret
mov
jae
cmp
es
into
out
int3
mov
andl
sub
adc
jmp
ret
js
mov
mov
imul
xorl
push
lods
or
cwtl
sub
loop
mov
mov
xchg
cs
add
add
add
into
sub
insb
inc
push
ret
out
jecxz
outsl
xchg
or
inc
adc
mov
sub
aam
ja
in
ret
xchg
pop
xor
push
sbb
or
inc
adc
mov
cwtl
addr16
ret
mov
xor
iret
in
dec
and
mov
mov
xor
je
mov
mov
clc
mov
dec
and
mov
mov
imull
je
ljmp
arpl
jg
dec
and
mov
mov
cmp
je
xor
in
dec
and
mov
mov
insl
int3
mov
mov
clc
jnp
dec
and
mov
mov
pop
insb
int3
mov
mov
clc
sub
and
sub
into
out
insb
int3
mov
andl
ret
jecxz
sub
jecxz
and
xchg
mov
repz
dec
addr16
dec
and
and
lcall
jae
cmp
inc
int3
sub
int3
int3
mov
mov
jns
add
lods
or
inc
ljmp
inc
pop
dec
lods
orl
and
loop
aam
sub
repz
push
jae
mov
repz
push
cmp
fisubs
add
mov
into
cmpsb
adc
mov
and
mov
js
insb
int3
mov
stos
outsl
ret
pop
scas
push
dec
lods
orl
das
mov
cmpl
and
push
in
inc
mov
ret
mov
mov
jg
loop
scas
seta
arpl
jmp
inc
bound
xchg
mov
lock
loop
imul
mov
dec
clc
into
mov
in
and
and
in
pop
or
aas
sbb
push
xchg
aad
imul
loop
pop
out
dec
xlat
dec
loop
inc
notb
mov
int3
mov
pop
andb
out
dec
xlat
je
jmp
inc
bound
xchg
ret
addl
repz
push
jae
mov
repz
mov
inc
bound
and
mov
ret
loop
cmp
mov
inc
bound
and
mov
addr16
andl
bound
and
mov
pop
aaa
push
ja
ret
jecxz
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
arpl
and
andl
insb
andl
arpl
jae
arpl
and
andl
insb
addl
add
dec
insb
andl
arpl
and
sbbl
in
add
inc
arpl
push
ja
andl
jecxz
scas
dec
insb
andl
arpl
idivl
bswap
in
add
inc
arpl
jmp
cld
jecxz
jmp
insb
andl
arpl
xor
iret
enter
inc
arpl
cmp
adcl
jecxz
and
andl
arpl
and
xorl
add
imul
add
imul
add
insb
add
in
add
insb
adcl
insb
adcl
add
inc
arpl
mov
leave
in
add
dec
insb
xorl
add
dec
insb
sbbl
insb
xorl
insb
adc
in
add
insb
cmp
in
add
lret
daa
lret
fisttpll
addl
add
dec
insb
cmpl
add
dec
insb
sbbl
insb
andl
insb
add
in
add
insb
and
in
add
lret
in
add
lret
in
add
dec
insb
cmpl
add
leave
in
add
lret
in
add
insb
add
in
add
insb
sub
in
add
hlt
in
add
hlt
in
add
je
andl
add
je
orl
insb
adc
in
add
insb
or
in
add
insb
sub
in
add
cmc
in
add
cmc
in
add
jne
xorl
add
jne
xor
in
add
insb
subl
insb
xorl
insb
adcl
insb
cmpl
add
dec
insb
addl
add
dec
insb
cmpl
in
add
enter
dec
insb
sbbl
insb
andl
arpl
lods
ret
jecxz
sub
add
jo
cmpl
add
jo
andl
insb
cmpl
insb
andl
insb
orl
insb
adc
in
add
insb
cmp
in
add
lock
add
ja
orl
add
ja
cmpl
in
add
imul
add
insb
sbb
in
add
inc
arpl
pop
inc
arpl
xlat
ret
jecxz
sub
arpl
rol
jecxz
cs
arpl
lods
ret
jecxz
pop
inc
arpl
stos
ret
jecxz
push
inc
arpl
fcmovb
jecxz
sub
add
ret
jecxz
mov
ret
jecxz
jg
arpl
rol
jecxz
pop
inc
arpl
scas
ret
jecxz
pop
inc
arpl
aad
jecxz
push
inc
arpl
mov
jo
andl
xlat
adc
push
xchg
sbb
popa
dec
stos
call
mov
sahf
and
mov
sub
mov
clc
pop
or
dec
xchg
xlat
enter
push
push
xor
js
mov
dec
nop
mov
xchg
mov
xor
mov
ret
test
pop
cmp
jl
test
add
ret
loop
mov
lcall
insb
inc
mov
jae
ror
call
mov
arpl
mov
test
add
pop
dec
xchg
movsb
mov
push
aas
or
mov
arpl
mov
fucomp
in
push
ja
mov
mov
pop
jg
mov
icebp
int3
mov
test
adc
push
ja
mov
mov
pop
jg
mov
in
in
ret
mov
xchg
shl
pop
xor
ja
movsl
test
sbb
mov
fsubrp
push
pop
je
mov
jp
ljmp
call
mov
enter
lods
or
test
sbb
push
jge
mov
ds
outsb
mov
ret
dec
add
call
mov
ds
outsb
mov
ret
in
push
dec
cmp
push
cmp
scas
arpl
mov
enter
dec
xchg
mov
sub
jg
mov
pop
push
popf
mov
enter
dec
add
inc
test
je
fdivrp
sbb
mov
scas
in
push
sub
mov
aaa
dec
sahf
mov
pop
jecxz
daa
dec
negl
aas
pop
dec
nop
mov
arpl
mov
dec
popf
movsb
inc
cmp
mov
jg
and
mov
sub
mov
adc
push
sub
ljmp
call
mov
sub
mov
pop
push
popf
mov
enter
rorb
jmp
ror
pop
or
dec
xchg
mov
dec
or
cmp
jno
and
mov
push
dec
xchg
push
or
add
dec
aam
aas
sub
mov
imul
sysenter
jno
mov
pop
jecxz
adc
in
xor
sub
or
jb
aad
out
aas
ret
popa
add
hlt
pop
pop
sub
mov
pop
xchg
mov
das
push
jmp
inc
xor
mov
hlt
call
mov
enter
ja
mov
or
add
dec
rcrb
aas
push
js
outsl
test
sbb
jg,pt
mov
lret
ret
jo
push
pushl
jbe
mov
icebp
pop
mov
pop
or
jge
mov
jo
mov
int
xchg
mov
or
mov
lea
push
jge
mov
push
jb
and
mov
sub
jns
test
repnz
je
mov
cs
mov
push
xor
dec
dec
and
lea
sub
mov
enter
jb
mov
ret
scas
or
cmp
jae
sar
call
and
mov
sub
mov
enter
jb
mov
ret
sub
outsb
in
aas
sub
mov
call
mov
pop
push
pop
sub
mov
das
cwtl
mov
hlt
out
or
dec
dec
mov
iret
pop
or
repnz
ror
adc
pop
jb
mov
incb
mov
outsb
mov
dec
mov
aam
out
adc
jnp
imul
lahf
add
icebp
out
jmp
mov
pop
or
add
stos
call
mov
aas
dec
popf
mov
push
or
dec
jae
ror
call
and
xor
dec
sahf
mov
pop
jg
daa
dec
rcrl
mov
pop
jle
and
sub
dec
insb
mov
push
dec
push
push
push
dec
xchg
mov
ret
cmpsl
or
cmp
dec
mov
repnz
call
dec
fsts
mov
call
cs
fcompl
or
dec
mov
scas
call
insb
inc
orl
push
das
popf
mov
enter
je
mov
lods
adcl
call
mov
sub
mov
jp
outsl
aam
call
movsb
mov
lret
ret
cs
mov
test
add
stos
call
mov
cwtl
mov
ret
cmp
outsb
in
aas
sub
cltd
mov
dec
mov
in
aas
sub
xchg
mov
lods
sbbl
hlt
call
mov
enter
pop
push
or
je
mov
mov
sub
mov
enter
dec
add
fucomp
xor
push
push
pop
jb
movsb
mov
popf
int
xchg
or
pop
xchg
nop
fdiv
pop
xor
fs
mov
mov
pop
ja
mov
in
or
jb
mov
enter
jge
jbe
fucomp
sub
mov
ret
lret
or
ror
adc
push
ja
and
mov
push
jb
mov
lods
pop
aaa
push
dec
add
sub
enter
push
dec
popf
mov
idiv
sbb
arpl
mov
hlt
adc
sub
icebp
dec
cli
sbb
push
jge
mov
leave
int3
mov
test
push
or
dec
dec
mov
lods
sbbl
sub
popf
mov
aaa
push
jecxz
xchg
or
ja
mov
ret
jge
popf
test
repnz
jno
mov
test
in
ret
jne
popf
test
enter
jns
xlat
clc
call
push
pushl
push
dec
xchg
xchg
ror
adc
shl
sub
push
xchg
mov
rcrl
mov
push
jecxz
cmpsb
dec
fucomp
or
push
aaa
pop
dec
dec
mov
ret
sub
mov
pop
pop
push
jbe
mov
std
adc
push
ja
mov
pop
push
cmp
lahf
movsb
pop
je
mov
ja,pn
add
adc
je
mov
in
push
sub
mov
sub
mov
pop
jecxz
orb
push
jge
mov
enter
sub
sbb
in
aaa
pop
dec
dec
mov
mulps
mov
xchg
and
lret
call
xchg
iret
pop
aaa
ret
push
ja
mov
sbb
arpl
mov
cmp
pop
jmp
dec
outsl
mov
dec
mov
sar
call
pushf
fmul
sbb
mov
icebp
int3
mov
aam
out
out
push
jb
mov
dec
imul
jno
xchg
test
pop
sbb
dec
mov
jg
movsb
mov
rol
sub
pop
jg
mov
sub
mov
std
add
ret
pop
add
dec
lahf
outsb
xlat
repnz
or
dec
xchg
xlat
enter
push
xchg
mov
pop
pop
push
aaa
sub
add
stos
pop
aas
push
pop
cwtl
mov
in
xor
jb
and
sub
jg
sahf
test
out
sbb
fdivrp
int3
mov
adc
push
dec
xchg
popf
test
sbb
pop
jg
and
adcl
push
out
push
jno
mov
pop
add
dec
lahf
outsb
lods
icebp
adc
push
dec
insb
mov
in
sbb
dec
and
adcl
push
adc
xchg
insb
inc
loop
adc
jg
mov
sub
mov
hlt
adc
or
add
sub
mov
fcompl
or
dec
mov
int3
int3
cmp
xchg
mov
inc
add
dec
lahf
outsb
out
cmp
insb
inc
adc
dec
lahf
xchg
iret
pop
aaa
ret
pop
dec
xchg
mov
dec
xchg
mov
jl
mov
or
mov
cwtl
mov
fists
push
pop
jge
mov
lods
xorl
cwtl
mov
scas
sbb
and
repz
cmp
notl
mov
mov
ja
and
adcl
jg
mov
fcomps
or
push
sar
aas
pop
je
mov
sbb
jno
notl
mov
inc
arpl
and
andl
lret
jecxz
xorl
lods
ret
jecxz
das
inc
arpl
jnp
insb
sub
in
add
shl
push
shll
mov
arpl
stos
jno
sbbl
add
jno
andl
outsb
xorl
dec
popf
sbb
sbb
jno
sti
call
movsl
aam
ret
jecxz
sub
insb
mov
sub
arpl
jg
mov
stos
adc
push
jecxz
lcall
outsb
arpl
jae
jg
arpl
and
fldl
sbbl
cmp
xchg
sbb
dec
fstp
push
divps
fcmovnu
nopl
cmpsl
sahf
jecxz
cmp
outsl
pop
stos
lahf
pop
filds
mov
fists
cwtl
xchg
fmul
sbb
pop
addr16
mov
pop
mov
repz
sbb
negl
out
pop
push
lcall
inc
lcall
jae
mov
pop
imul
pop
adc
pop
pop
push
fwait
mov
pop
mov
sbb
mov
fistl
fwait
inc
fcmovnu
add
inc
inc
test
inc
scas
test
les
roll
pop
lret
add
mov
out
test
lds
test
xchg
dec
lds
test
scas
push
sbb
xchg
aaa
push
jae
mov
push
arpl
xchg
ja
cmpsl
inc
push
xchg
inc
xrelease
mov
repz
aas
xchg
pop
add
xchg
lahf
inc
lret
cmpb
add
inc
das
cmpl
rorl
inc
testl
jae
jecxz
das
inc
imul
inc
mov
add
inc
aaa
andb
ret
scas
add
inc
adc
adc
push
stos
xchg
pop
rcll
lahf
push
fistl
scas
push
jmp
inc
shl
sbb
pop
mov
pop
pop
pushf
xchg
fst
sbb
xlat
rcll
pop
inc
fwait
add
inc
mov
jg
mov
add
stos
adcl
inc
fildl
popl
xorl
inc
sti
andl
inc
jmp
push
rcll
inc
roll
ja
mov
incl
andl
sub
pop
inc
pop
addb
dec
xorb
jnp
cmpsl
ret
das
inc
imul
inc
fwait
add
mov
inc
scas
andl
stos
fists
pop
push
pop
lahf
lahf
fcmovnu
pop
pop
inc
pop
lahf
lret
fbstp
pop
jae
mov
pop
sbbl
inc
fiaddl
lcall
xchg
fwait
rcr
bndstx
and
ret
mov
inc
dec
fdivl
pushf
outsl
fst
sbb
sbb
scas
fstl
sbb
iret
fnsave
sbb
out
fstl
lahf
pop
popf
paddusw
mov
fstl
popf
dec
fnsave
popf
outsl
push
pop
pop
inc
sahf
fdivp
push
aas
pop
addr16
scas
ficoms
push
pop
pop
xchg
jg
cmpsl
sahf
out
ficoms
lahf
pop
sahf
pmaxub
mov
ficoms
sahf
dec
fidivs
sahf
outsl
pop
pop
pop
inc
lahf
fcomip
pop
aas
pop
addr16
scas
fists
pop
pop
pop
xchg
jg
cmpsl
lahf
out
fists
lahf
pop
lahf
pandn
mov
fists
lahf
dec
fbstp
lahf
outsl
fcom
sbb
pop
inc
cwtl
fdiv
sbb
pop
addr16
scas
fcoms
sbb
xchg
jg
cmpsl
cwtl
out
fcoms
lahf
pop
cwtl
psubusb
mov
fcoms
cwtl
dec
fdivs
cwtl
outsl
sbb
pop
inc
cltd
fincstp
sbb
pop
addr16
scas
fsts
sbb
xchg
jg
cmpsl
cltd
out
fsts
lahf
pop
cltd
psubusw
mov
fsts
cltd
dec
fnstenv
cltd
outsl
fcmovbe
sbb
pop
inc
lcall
addr16
xchg
jg
cmpsl
lcall
lcall
out
das
ficoml
lcall
daa
lcall
inc
fwait
fcomi
sbb
pop
addr16
scas
fistl
sbb
xchg
jg
cmpsl
fwait
out
fistl
lahf
pop
fwait
pand
mov
fistl
fwait
dec
fwait
outsl
xlat
add
inc
inc
test
inc
test
add
inc
xchg
inc
cmpsl
test
les
lahf
inc
movl
les
test
mov
test
inc
dec
test
inc
outsl
test
lds
add
test
scas
test
lds
xchg
test
lds
cmpsl
inc
out
test
lahf
add
ja
mov
xchg
inc
dec
xchg
inc
outsl
xchg
pop
push
inc
inc
popl
addr16
scas
xchg
pop
push
xchg
xchg
jg
cmpsl
inc
out
xchg
lahf
push
movl
push
out
das
xchg
inc
dec
xchg
inc
outsl
xchg
pop
pop
inc
inc
popl
addr16
scas
xchg
pop
pop
xchg
xchg
jg
cmpsl
inc
out
xchg
lahf
pop
movl
pop
out
das
adcb
dec
xorb
outsl
adc
pop
add
popl
addr16
scas
adcb
pop
add
sarb
inc
out
adcb
add
inc
jo
out
das
adcl
sar
daa
inc
outsl
adc
inc
popl
addr16
scas
adcl
inc
iret
xorl
inc
out
adcl
jno
out
das
adcb
dec
xorb
outsl
adc
pop
add
popl
addr16
scas
adcb
pop
add
ret
cmpsl
inc
out
adcb
add
inc
jb
out
and
repz
inc
outsl
rcl
adc
push
inc
xchg
shl
adc
push
addr16
scas
rcll
adc
xchg
jg
cmpsl
xchg
out
rcll
lahf
push
xchg
psrlq
mov
rcll
xchg
dec
shll
xchg
outsl
sbb
pop
inc
pushf
fdiv
sbb
pop
addr16
scas
fcoml
sbb
pop
xchg
pop
cmpsl
pushf
out
fcoml
lahf
pop
pushf
paddusb
mov
fcoml
pushf
dec
fmull
sahf
xchg
push
add
ficoms
lahf
sub
nop
pop
pop
sub
sbb
pop
js
aam
ja
cmpsl
pop
jmp
sbb
pop
cmp
push
pop
dec
cltd
mov
sti
sbb
cltd
repz
sbb
fldcw
pop
jp
fisubl
sbb
les
inc
pop
mov
sbb
fcomi
add
inc
adc
inc
push
test
inc
sahf
test
lds
inc
loope
push
roll
push
inc
xchg
xchg
pop
push
mov
push
xchg
pop
daa
inc
mov
pop
hlt
inc
inc
xorb
mov
add
inc
jbe
mov
inc
into
subl
inc
push
xorb
roll
loope
and
jecxz
ret
jg
and
shr
adc
mov
adc
push
or
push
pop
ficompl
movsl
pop
inc
lahf
pop
fbstp
arpl
and
cltd
dec
fxch
sbb
lcall
insb
jae
sbb
loope
push
add
inc
mov
sbb
movl
add
add
rol
jecxz
and
mov
xchg
cmpsl
rcrl
adc
xchg
cmp
pop
fs
rcr
add
dec
pop
mov
lock
sbb
pop
aam
sbb
inc
sbb
pop
loopne
push
fdivl
popf
in
fstpl
pop
push
popf
imul
push
add
sahf
inc
fidivrs
lahf
repnz
pop
cltd
pop
cmp
repnz
rcrb
pop
jecxz
push
ficompl
fwait
mov
clc
sbb
fwait
in
fistl
sbbl
push
fisttpl
test
inc
adc
inc
xchg
test
lds
add
in
lds
xchg
test
lds
dec
lds
xchg
inc
lods
xchg
pop
push
test
xchg
jno
cmp
xchg
sbb
xchg
mov
cli
inc
push
sbbb
icebp
cmpb
outsl
add
inc
sbb
out
push
sbb
inc
movsl
sub
inc
testl
add
xchg
sbb
pop
add
mov
outsl
inc
flds
aad
sbb
dec
ret
jecxz
and
mov
xchg
mov
out
jge
cmpsl
xchg
jmp
push
cmc
xchg
daa
rcrl
mov
pop
lahf
pushf
fmull
ja
test
push
fcompl
popf
xchg
push
sbb
pop
fnsave
pop
out
push
frstor
iret
fidivrs
jnp
lods
sahf
sbb
inc
push
mov
fiadds
pop
bound
lahf
xchg
fmul
sbb
pop
cwtl
cwtl
or
lahf
sbb
fyl2xp1
sbb
loopne
inc
fldenv
lcall
negb
pop
es
negb
pop
inc
xchg
inc
xor
inc
pop
test
inc
fwait
test
lds
xlat
inc
pop
test
add
adc
pop
push
jecxz
pop
xchg
inc
xchg
xchg
outsl
pop
roll
xchg
iret
add
inc
inc
xorl
rcll
inc
icebp
xorl
pop
addb
popf
xor
add
ret
jecxz
and
andl
fst
pop
adc
aad
xor
jnp
push
and
pop
mov
sbb
pop
loop
push
fmull
popf
pushf
sbb
rcr
cmp
popf
or
xchg
sbb
in
and
mov
fnstsw
pop
jns
mov
pop
leave
pop
inc
cwtl
std
fsubs
xchg
cwtl
push
fcom
sbb
pop
jno
cmp
arpl
lret
pop
cmp
add
lcall
pop
lcall
push
rol
movsl
add
jmp
inc
push
rol
or
xchg
rcrb
nop
ror
sub
xor
inc
ljmp
inc
inc
orb
xchg
add
sub
addl
push
ret
jecxz
and
mov
xchg
movsl
rcll
adc
mov
adc
push
push
pushf
test
ds
pop
into
pushf
xor
xchg
sbb
pop
jg
jmp
pop
data16
ret
push
mov
sahf
and
pop
cmp
pop
inc
pop
mov
in
pop
imul
pop
mov
sbb
fistpl
inc
pop
stos
cltd
adc
sbbl
pop
push
lcall
scas
lcall
jo
cli
fistpl
cmpsl
pop
out
fwait
movsl
call
test
les
add
inc
rolb
sub
xchg
inc
les
out
dec
xchg
inc
mov
daa
outsl
pop
fadds
xchg
lret
inc
jge
test
add
inc
push
addl
rcrl
loope
outsb
add
inc
jp
mov
inc
xchg
xor
and
outsl
inc
roll
jecxz
and
andl
leave
fnsave
sbb
pop
fldl
popf
xchg
faddp
push
sub
sahf
repz
mov
pop
dec
pop
stos
lahf
aaa
filds
cwtl
sbb
inc
sbb
fnstenv
sbb
lret
cltd
sbb
adc
in
pop
inc
fwait
mov
in
sbb
lods
fwait
dec
add
inc
jecxz
push
les
test
inc
sbb
xor
xchg
mov
xchg
inc
ja
movsb
in
pop
sub
xchg
movl
xchg
and
xchg
pop
pop
test
xchg
jno
mov
movl
add
inc
cwtl
xor
dec
add
rclb
inc
aas
xorl
ret
jecxz
and
andl
push
rorl
jecxz
gs
aam
and
pushf
fmull
pop
add
inc
pop
mov
push
in
nop
lahf
rcr
pop
mov
sbb
add
cwtl
mov
pop
rcrl
pop
inc
cltd
fcmovu
xor
test
cltd
pop
lcall
ret
ficoml
fwait
mov
loopne
js
negl
sbb
lret
les
add
inc
mov
add
inc
je
lods
lds
add
and
bound
jge
enter
int3
xchg
imul
inc
je
mov
lds
pop
inc
mov
aaa
inc
js
rol
sbb
mov
ljmp
inc
inc
cmp
and
mov
ret
jecxz
and
andl
sarl
adc
roll
xchg
popa
rcl
sbb
pop
gs
fstp
nopl
ficompl
pop
cs
xchg
fnstsw
sbb
ja
mov
sahf
lods
ficoms
push
dec
pop
mov
push
negl
lahf
xchg
ffreep
pop
mov
setg
fdivrs
fwait
out
dec
sbb
inc
aaa
test
inc
pop
xchg
inc
jp
stos
cmp
repnz
and
add
rcrb
dec
shlb
shlb
xchg
rcr
sbb
addl
roll
inc
xor
add
inc
dec
xorb
repnz
mov
incb
inc
arpl
ret
adc
inc
push
ficoml
pop
push
test
mov
fdivr
sbb
pop
test
pop
fstps
pop
ss
mov
pop
mov
or
ficomps
sahf
sbb
dec
push
stos
pop
cmp
pop
pop
test
pop
mov
filds
cwtl
lcall
cwtl
cmp
bound
stos
pop
and
sbb
jns
scas
fsts
sbb
sbbl
pop
cltd
sbb
inc
pop
mov
repz
sbb
rcrl
pop
or
jbe
mov
fwait
xchg
fcmovnb
sbb
pop
ja
mov
inc
fldl
push
inc
dec
cmpb
sbb
jle
out
adcb
add
inc
sub
jae
mov
add
rorl
rol
push
add
roll
inc
add
ret
scas
or
inc
insb
rcll
xchg
aas
shll
lods
push
setae
mov
stc
push
push
pushf
lcall
pushf
hlt
fdivrl
sbb
pop
push
pushf
pop
faddl
pushf
cwtl
sbb
fstpl
sahf
sbb
push
mov
fiadds
sahf
mov
pop
and
lahf
loop
sub
sahf
pop
int
jb
lods
sbb
fdivs
sbb
or
sbb
cltd
mov
pop
lret
fxch
sbb
pop
addr16
cmc
lcall
xchg
fwait
ret
sbb
fistpl
add
inc
mov
inc
roll
inc
sbb
inc
xchg
test
lds
add
ljmp
test
add
in
inc
pop
xchg
inc
outsb
xchg
sbb
dec
inc
mov
sbb
inc
loop
sub
lahf
push
into
inc
xor
sbb
dec
xchg
inc
mov
imul
pop
mov
mov
xorb
nop
add
or
jnp
mov
add
rorb
inc
std
cmpb
popa
add
inc
adc
int3
inc
or
in
and
sbb
pop
addl
shl
sub
imul
inc
mov
add
shll
inc
loope
js
mov
addb
test
xchg
inc
std
cmpb
popa
add
ret
movl
add
add
inc
arpl
and
andl
arpl
in
push
pop
pop
push
or
cmpsb
or
sub
adc
push
ret
push
xor
xchg
imul
xchg
push
mov
add
dec
mov
cmpsb
push
cs
repz
jno
ljmp
or
or
in
pop
adc
sete
cmp
jge
xchg
jno
and
mov
xchg
repnz
push
in
mov
fwait
mov
arpl
mov
jmp
add
push
xchg
pop
in
and
test
call
sub
or
leave
jmp
add
jecxz
movsl
xchg
xchg
add
lahf
pusha
pop
xchg
add
shl
push
in
repnz
pop
cltd
push
xchg
imul
shrl
cmp
lods
xor
sub
in
hlt
sub
mov
imul
xor
repz
adc
xor
cmp
cmp
inc
jecxz
cmpsb
jne
clc
aam
adc
xchg
and
imul
add
shl
push
in
repnz
push
cwtl
pop
mov
xchg
jle
in
dec
mov
jb
push
xchg
mov
dec
mov
dec
aas
pusha
xchg
in
pop
test
push
pop
xchg
pop
sub
xor
xchg
mov
pushl
into
add
shlb
inc
jg
scas
jne
xchg
pop
and
loope
xchg
outsb
push
sub
or
xchg
xchg
mov
sbb
pop
pusha
arpl
shl
int3
cs
push
in
repnz
inc
mov
test
movsl
adc
fsubr
pop
loop
xchg
inc
sub
add
push
loop
stos
xchg
hlt
jmp
loop
movsl
cs
hlt
jmp
loop
xchg
sub
hlt
jmp
loop
stos
and
lock
cmpsb
or
sub
mov
or
pop
push
xchg
movsl
cli
sub
inc
outsb
and
push
or
or
sub
in
negb
inc
imul
movsl
imulb
dec
aam
in
sbb
xchg
imulb
inc
or
or
sub
clc
or
or
popf
lret
repnz
cs
int3
cs
push
in
repnz
dec
xchg
imul
aad
sub
add
mov
pop
sub
or
jbe
mov
add
add
call
ret
push
xor
sub
add
xchg
dec
sti
mov
arpl
cmp
notb
push
sti
xchg
imul
movsl
cli
sub
mov
or
sub
xchg
imul
movsl
ljmp
in
push
or
rcrl
enter
or
imul
jmp
mulb
icebp
and
cmpsb
or
push
cli
xchg
xchg
imulb
hlt
daa
dec
stos
aaa
push
lret
icebp
xchg
lods
cli
sub
or
inc
notl
xchg
xchg
lods
repnz
mov
add
or
mov
je
xchg
pop
call
fs
sub
pop
call
xchg
imul
add
inc
sbb
test
jnp
xchg
xchg
out
enter
test
jnp
xchg
lods
out
leave
fs
sub
pop
call
xchg
imul
jbe
mov
or
sub
xchg
jno
jmp
mov
add
pop
push
xchg
movsl
repnz
xchg
imul
call
lcall
add
mov
and
repnz
in
repnz
dec
pop
pop
push
sub
or
cmpsb
xchg
movsl
push
push
jo
icebp
hlt
into
or
ljmp
push
push
jo
cmp
decl
push
xchg
xchg
push
push
jo
and
add
decl
ficoms
jnp
mov
decl
xchg
lods
push
push
jo
sbb
mov
decl
loop
out
dec
add
je
lock
cmpsb
or
decl
jne
push
cmp
cmpsb
test
xchg
movsl
repnz
movsl
icebp
cmpsb
jb
jbe
or
mov
push
cmpsb
or
xchg
pop
in
xchg
lcall
ljmp
jne
shrb
inc
pop
pop
call
jne
jb
je
jb
je
jo
push
cmpsb
enter
pop
add
xchg
movsl
ljmp
das
mov
or
repnz
mov
lret
repnz
cs
push
in
repnz
inc
pop
pop
push
in
scas
or
or
lock
cmpsb
or
xor
call
or
fldl
decl
or
jle
xchg
jmp
les
imul
mov
popl
push
testb
push
imul
sti
xchg
imul
stos
inc
sub
xchg
push
pop
xchg
imul
arpl
cmpsb
movsl
repnz
xor
pop
mov
pop
notb
lods
cli
push
call
xchg
pop
adc
xchg
jno
xchg
negb
les
pop
clc
jmp
notb
arpl
notb
push
xsha1
cmpsb
or
push
xchg
xchg
xchg
ljmp
mov
lret
mov
lret
repnz
cmpsb
or
cmpsb
not
not
push
pop
jmp
neg
jmp
mov
lea
call
pop
mov
jns
lea
jmp
mov
dec
call
pop
push
pop
neg
mov
mov
mov
lea
mov
ja
jmp
inc
repz
mov
add
not
xchg
mov
inc
neg
add
add
sub
inc
xor
inc
mov
cmc
sub
mov
add
mov
clc
cmp
jae
mov
dec
dec
dec
jmp
xchg
dec
sub
xor
push
pop
inc
mov
neg
clc
clc
add
xchg
push
pop
neg
add
inc
repz
push
inc
call
repnz
inc
pop
not
inc
jmp
xor
add
add
add
dec
daa
add
and
add
inc
daa
add
shlb
add
sub
add
data16
add
fsubs
add
xor
add
add
add
dec
daa
add
push
jnp
push
jo
jb
add
push
push
inc
push
xor
cs
insb
add
imul
bound
imul
add
inc
inc
dec
xor
cs
insb
