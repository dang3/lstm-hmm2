shl
xor
pop
andl
mov
jb
fnstsw
xor
sarl
daa
jg
jmp
movsl
les
adc
push
or
push
jns
cmp
call
inc
mov
inc
fiaddl
inc
ljmp
push
push
mov
scas
mov
dec
cwtl
mov
rcll
or
or
out
pop
rorl
js
and
test
jle
mov
adc
cld
movsl
and
sbb
int
push
dec
mov
and
xlat
xor
mov
aaa
inc
push
jne
hlt
enter
dec
scas
fwait
sti
sub
xchg
adc
pop
pusha
int
cmp
adc
or
add
ljmp
sti
pusha
and
fimull
sahf
or
movsb
xchg
sbb
push
jo
js
sub
mov
pop
icebp
mov
xor
and
aas
xchg
out
rcll
jl
fcmovnbe
add
dec
mov
pop
negb
xchg
test
jns
outsb
or
mov
rorb
pop
add
mov
and
push
rolb
test
xchg
pop
inc
jae
popf
cmpsl
lds
add
iret
jb
fimuls
call
test
repnz
mov
ret
fwait
jbe
jmp
fwait
lea
push
jecxz
out
sub
int
mov
hlt
jne
add
repnz
aaa
inc
fwait
call
dec
lods
les
stos
push
sub
int3
ds
test
cmp
push
fucomp
fiaddl
mov
loop
ret
or
or
pop
pop
push
daa
lahf
test
pushf
pop
lcall
pop
rcl
lea
xchg
push
sub
inc
xor
in
xor
xchg
call
pop
sbb
fcmove
imul
mov
push
adc
mov
sahf
inc
push
mov
sbb
lahf
dec
mov
mov
hlt
push
mov
insl
bound
subl
add
adc
mov
hlt
jmp
ficompl
arpl
popa
jb
lcall
stos
add
sub
jb
pusha
in
bound
sbb
xchg
xor
adc
xorl
mov
jnp
push
add
sbb
cmp
aaa
mov
in
jno
out
mov
mov
std
or
push
add
sub
add
mov
xchg
arpl
bound
inc
mov
lcall
adc
fwait
cmp
pop
xchg
ljmp
pop
popf
outsb
outsb
test
stos
cmp
movsl
jecxz
xor
add
dec
out
adc
clc
imul
mov
popf
push
fnstsw
adc
insb
call
mov
test
fsubl
mov
cmpsl
sbb
stos
pop
scas
and
add
rcr
test
rorb
sbb
js
mov
popf
mov
iret
jne
jb
inc
push
inc
pushf
test
dec
pop
sbb
push
pop
cmp
lds
or
loop
push
xchg
add
int3
out
sti
test
outsl
pusha
cmpsb
mov
jb
inc
aas
mov
xchg
mov
pop
mov
loopne
pop
movsb
cs
lret
out
sti
and
out
mov
dec
xchg
dec
outsb
data16
mov
movsl
cmpps
xor
pop
ds
test
stos
insl
or
pop
movsl
icebp
or
mov
adc
jnp
bound
adcl
std
cwtl
lret
add
xchg
xchg
daa
add
outsl
push
btc
inc
cwtl
jge
jl
mov
insb
mov
xchg
xor
inc
std
lods
dec
int
jle
outsl
mov
enter
xlat
push
and
add
enter
repnz
aad
and
mov
fwait
lds
icebp
jno
sub
movsb
pop
fldl
jo
mov
lods
push
shll
imul
movsl
or
sysexit
fmuls
mov
bound
cmp
cmp
outsb
mov
xchg
cmc
icebp
mov
movsb
aam
sub
mov
adc
cmp
shll
gs
inc
shl
inc
mov
hlt
daa
xchg
mov
out
adc
push
push
outsb
call
ja
dec
jg
popa
xchg
adc
pushf
insl
imull
and
stos
jl
stc
pop
int3
popf
call
push
out
ficoms
imul
fsts
cmp
int
nop
in
addr16
pusha
or
pop
scas
jne
popl
in
rcrb
addb
pop
inc
and
lret
ret
nop
in
jnp
outsb
and
loope
das
pushf
vpsraw
and
mov
pop
movsl
mov
push
mov
imul
sub
call
inc
add
call
call
dec
add
and
call
call
lea
add
mov
dec
dec
inc
sub
add
lea
mov
dec
call
dec
push
inc
sub
xor
call
lea
movzbl
call
add
add
inc
dec
add
lea
mov
dec
dec
pop
inc
dec
and
add
lea
pop
dec
pop
dec
dec
dec
sub
pop
lea
mov
inc
sub
dec
dec
xor
lea
pop
imul
inc
pop
add
dec
mov
sub
add
call
lea
movzbl
add
dec
ret
inc
inc
push
xor
lea
push
movswl
inc
push
inc
sub
push
sub
and
push
lea
mov
mov
dec
dec
push
inc
ret
push
add
push
or
lea
push
mov
sub
push
inc
call
pop
ret
jmp
sub
inc
lea
mov
add
sub
inc
dec
xor
lea
mov
dec
dec
jne
dec
mov
inc
inc
pop
add
lea
pop
movsbl
add
pop
inc
dec
add
xor
lea
mov
add
sub
dec
inc
sub
add
ret
push
lea
mov
sub
dec
dec
inc
add
lea
push
push
push
push
imul
dec
inc
push
add
dec
and
lea
imul
inc
inc
inc
dec
mov
sub
push
lea
imul
xor
inc
inc
push
dec
add
push
xor
lea
pushl
imul
call
dec
add
add
inc
inc
xor
lea
movzbl
add
pop
ret
lea
inc
imul
add
inc
inc
dec
xor
mov
lea
mov
cmp
jb
dec
mov
inc
inc
xor
add
sub
xor
lea
pop
inc
sub
test
jbe
sub
inc
sub
lea
movsbl
inc
inc
inc
inc
and
lea
movswl
dec
dec
add
inc
xor
inc
lea
imul
inc
add
inc
add
and
or
lea
mov
inc
movzbl
inc
inc
add
dec
xor
and
lea
movsbl
mov
dec
dec
mov
dec
inc
mov
or
lea
mov
mov
add
dec
dec
inc
and
dec
jne
lea
mov
mov
inc
add
add
dec
sub
lea
inc
dec
mov
dec
dec
add
lea
mov
dec
dec
inc
mov
add
xor
test
jbe
lea
mov
inc
inc
add
inc
add
lea
imul
dec
dec
add
add
and
lea
inc
imul
dec
dec
dec
inc
and
and
lea
imul
mov
sub
dec
movzbl
dec
dec
add
add
lea
and
mov
dec
mov
add
inc
movzbl
add
add
mov
lea
mov
mov
dec
dec
movzbl
dec
add
add
and
lea
and
mov
inc
movzbl
inc
inc
xor
dec
jmp
push
call
inc
xor
dec
sub
xor
lea
mov
inc
inc
inc
inc
inc
dec
xor
add
lea
shl
mov
dec
xor
inc
sub
dec
xor
lea
movsbl
push
dec
inc
add
call
inc
pop
and
lea
movswl
add
sub
inc
add
xor
cmp
je
lea
inc
movzwl
dec
add
dec
sub
inc
xorl
dec
sub
ret
lea
mov
dec
dec
inc
sub
pop
xor
ret
push
lea
mov
inc
dec
inc
push
inc
xor
push
lea
push
imul
push
sub
dec
push
dec
dec
and
lea
mov
call
inc
push
add
push
dec
pop
inc
or
mov
lea
mov
mov
inc
add
inc
dec
add
dec
je
sub
lea
mov
dec
inc
inc
dec
or
lea
mov
mov
inc
mov
add
sub
sub
or
repnz
lea
movzbl
add
inc
jmp
dec
inc
dec
add
lea
imul
add
dec
sub
sub
sub
lea
mov
add
dec
inc
pop
pop
ret
jmp
push
dec
sub
lea
mov
inc
inc
inc
dec
sub
lea
mov
inc
inc
add
inc
sub
lea
mov
sub
add
add
add
xor
lea
mov
add
dec
inc
pop
ret
sub
add
mov
sub
lea
mov
mov
sub
mov
inc
add
mov
inc
xor
xor
lea
imul
mov
dec
dec
inc
add
sub
xor
lea
mov
dec
cmp
jb
inc
push
inc
dec
push
xor
lea
push
imul
inc
mov
add
inc
xor
inc
or
xor
lea
mov
xor
inc
sub
push
dec
inc
xor
xor
lea
mov
imul
inc
mov
add
sub
movzbl
dec
or
lea
imul
add
inc
sub
add
dec
inc
movzbl
or
lea
mov
inc
dec
sub
inc
sub
inc
lea
mov
mov
inc
dec
add
inc
sub
lea
cmp
jb
xor
inc
dec
mov
dec
dec
mov
add
jmp
bound
cmpl
ret
inc
das
xor
mov
xlat
ljmp
scas
dec
mov
push
mov
imul
xchg
stc
push
pop
insl
xchg
mov
cltd
pop
dec
mov
adc
mov
lock
lahf
arpl
cmp
xor
test
add
cmpsb
pop
shlb
adc
cmpsl
loopne
ret
push
scas
in
push
test
sub
insl
inc
xchg
out
xor
cmp
imull
ficompl
fnstcw
dec
jns
mov
lahf
xor
daa
jne
add
ja
stos
push
movsb
mov
xchg
pop
ficoms
rcrb
lea
test
pop
in
cmp
sub
mov
jle
cmpb
pop
scas
sbbl
sbb
cltd
cmc
jge
jbe
adc
lock
jnp
mov
or
daa
dec
aam
test
stos
cmc
test
mov
addb
cmp
call
lea
or
jge
daa
mov
mov
rep
jb
pusha
add
or
loope
out
cs
pop
icebp
add
mov
mov
imul
test
xor
shlb
adc
stc
fcomi
mov
fisttpl
adc
leave
daa
bound
xchg
outsb
add
sub
sbb
repnz
iret
cmp
or
fwait
mov
mov
lret
popf
jmp
cmp
lds
add
add
stos
jnp
lds
outsl
cmp
ds
cli
mov
ficoms
ficomps
add
out
mov
dec
push
pop
sub
imul
push
or
and
dec
sbb
cmp
fmull
loop
mov
adc
add
or
push
je
pop
xchg
insl
repz
inc
and
inc
movb
repnz
bound
lahf
sub
or
fcmovnb
xchg
xor
xor
mov
inc
movsl
and
mov
cmp
cwtl
jle
lahf
enter
lds
movsb
cmp
jnp
xchg
xlat
fs
xchg
lret
sub
aad
sbb
inc
mov
mov
subl
add
dec
add
sub
movsl
add
int3
sahf
fnstenv
jp
push
adc
movsb
pop
pop
mov
popa
cli
xchg
scas
fcompl
repnz
stos
xchg
mov
out
sub
arpl
inc
sub
and
stc
push
pop
sti
pop
pop
test
mov
sbb
inc
fsts
jecxz
aad
aad
lcall
mov
xor
dec
push
cmp
sahf
and
fcmove
cltd
pop
imul
push
cmp
jbe
aam
mov
popf
mov
jae
aaa
sbb
movsb
push
mov
mov
sbb
inc
cmp
mov
nop
enter
xor
sbb
mov
or
stos
cwtl
xor
pop
ljmp
jle
sbb
in
jg
lds
lahf
mov
sub
and
popa
jnp
push
inc
cld
or
inc
mov
jp
cs
mov
cs
pop
aam
pop
dec
sub
mov
repz
iret
mov
ret
mov
dec
add
or
pop
push
adc
pop
in
daa
mov
pop
mov
pop
loope
pop
mov
add
dec
mov
cwtl
add
mov
push
cmp
icebp
xchg
repz
mov
dec
addl
add
and
orl
cmp
jge
pop
mov
pop
mov
xor
fwait
push
aad
mov
aad
scas
jb
adcb
push
sbb
ds
cltd
inc
pop
testl
cli
stc
pop
loop
push
enter
gs
pop
dec
pop
ja
test
sti
xlat
cltd
aad
dec
xor
icebp
icebp
push
sub
mov
add
cs
adc
mov
adc
mov
fldenv
or
lods
and
mov
addr16
stc
cmpsl
lea
xor
adc
stc
add
xor
insl
into
mov
jg
sub
lar
test
lret
imul
mov
pop
sub
sbb
push
jae
data16
pop
add
rclb
mov
decb
call
xor
cmp
xor
cmc
loopne
loope
pop
imul
iret
add
out
sbb
insb
icebp
inc
dec
push
outsb
fnsetpm(287
dec
in
xchg
rorb
mov
rorl
push
roll
xchg
jns
sub
cmpps
pop
in
xor
sarl
push
mov
mov
add
or
std
jae
repnz
cmp
mov
jl
sub
adc
adc
xlat
pop
sahf
push
mov
xor
mov
jne
pop
push
movsb
push
aam
mov
pushf
mov
decb
sbb
sub
cs
leave
sbb
clc
inc
mov
insb
int
jg
cs
cmpsl
addr16
mov
xchg
out
pop
outsb
or
jo
fbstp
pop
insb
add
dec
cwtl
fs
sti
mov
xor
adc
fiaddl
adc
enter
out
pop
insb
pusha
pop
hlt
mov
in
xor
scas
insb
aad
sbb
ret
jno
dec
mov
inc
push
stos
mov
ret
sti
fnstsw
ja
das
or
rorb
pop
xchg
popf
hlt
fdivrs
arpl
xchg
jno
out
jmp
add
scas
mov
push
lods
mov
push
fstl
fs
xchg
stos
mov
clc
ja
jae
xor
mov
mov
xchg
out
stc
push
dec
push
xchg
and
push
or
lods
outsl
and
in
out
pop
add
stos
or
lahf
or
in
stos
icebp
int3
lds
sti
lods
sbb
cmp
loopne
inc
ret
add
repz
jmp
data16
mov
adc
rep
push
insb
sub
test
mov
sub
pop
ljmp
inc
cwtl
sub
dec
push
cltd
insl
pusha
cmp
adc
jno
bound
mov
pushf
xchg
or
mov
je
test
mov
lods
jbe,pt
inc
les
and
sbb
mov
hlt
dec
lcall
movb
cltd
loope
push
scas
push
out
fstps
hlt
outsb
sahf
jb
shll
ljmp
enter
ja
jo
push
pop
imul
stos
cmp
iret
sub
sub
mov
imul
cli
sbb
or
mov
mov
push
scas
xchg
stc
das
lea
mov
hlt
cli
outsl
sbb
loop
cmp
jle
cwtl
lret
mov
xor
std
inc
rolb
push
out
stc
adc
push
lahf
push
jecxz
insl
cmp
cmpsb
divb
and
out
inc
xchg
das
out
dec
and
daa
in
out
and
adc
xchg
xor
rol
pop
lods
mov
xorb
in
cmp
in
stos
ljmp
sbb
movsb
cmp
xchg
test
xor
mov
or
inc
push
add
or
dec
mov
enter
add
out
mov
lods
cmpsb
push
pop
iret
inc
jle
sbb
stos
xor
insb
clc
cmp
movsb
pop
push
and
iret
sbb
notl
xor
inc
lret
out
push
test
popf
xchg
pushf
or
je
mov
les
je
or
aam
xlat
xor
xchg
sub
push
test
imul
inc
xchg
in
clc
xchg
push
inc
or
pop
or
out
aas
in
outsb
roll
out
mov
mov
push
es
ficomps
movsb
dec
inc
icebp
inc
pop
adc
cmpsb
ret
std
jle
int
cmp
stc
xchg
out
in
cltd
mov
clc
add
mov
clc
mov
add
cmp
push
ret
mov
shll
scas
ljmp
insb
inc
int
lahf
rcrl
xchg
inc
adc
in
jle
fidivrl
or
dec
mov
dec
inc
out
leave
mov
jns
adc
push
push
cwtl
repz
mov
pusha
or
cmp
jle
ljmp
leave
pop
push
es
lock
stos
fs
jbe
xor
cltd
sbb
or
das
out
xor
cmp
cmpsb
fnsave
mov
mov
jo
sub
xchg
add
fcomip
loop
enter
lock
sub
orb
lretw
aad
xchg
jecxz
aam
or
pcmpeqd
sub
dec
aas
lret
xrelease
ds
pop
adc
xchg
aam
ss
popf
lret
inc
mov
dec
xchg
mov
bound
sbb
xchg
jno
cli
out
xchg
mov
inc
lods
push
jo
dec
inc
jle
testb
adc
inc
jle
lods
sbb
int
les
xor
rol
lods
fwait
mov
mov
xchg
negb
stc
inc
jb
aas
repz
out
jo
popf
add
mov
cmp
jmp
adc
jge
xchg
xchg
cs
loopne
adc
insb
cli
je
inc
hlt
sti
jnp
das
inc
mov
lret
add
lcall
mov
daa
scas
fcompl
es
test
inc
inc
push
aad
adc
push
dec
and
mov
xchg
jbe
fistps
xlat
lret
shlb
hlt
shrl
dec
and
mov
xor
xchg
repnz
std
mov
mov
test
enter
jno
mov
shlb
mov
pop
cs
and
out
je
jp
xor
daa
dec
push
andl
jae
movsl
mov
push
cmp
and
mov
jecxz
lcall
pop
xchg
lods
push
lret
aam
push
mov
jne
or
decb
add
mov
out
or
pop
xor
inc
cmp
dec
js
aad
mov
ds
mov
test
push
testb
gs
inc
adc
push
push
xchg
push
aaa
shll
or
insb
add
xor
ret
cltd
imul
push
cld
stc
jg
xlat
imul
add
push
sbbb
repz
out
xchg
movl
sub
shlb
sti
mov
les
out
clc
ret
adc
call
leave
pop
and
jbe
fidivl
fdivs
xchg
xchg
sub
xor
push
icebp
xchg
sub
cmc
push
es
jns
pop
mov
adc
call
popa
jg
and
cmp
test
pop
or
add
movsb
sbb
jb
or
imul
stos
mov
inc
and
cmpsl
pop
fmull
test
dec
sub
clc
inc
sti
xchg
popf
addr16
jbe
call
cmp
out
sarl
and
popf
fcmovbe
xchg
mov
ds
aam
aad
cmp
clc
inc
or
je
pop
jle
mov
stos
aas
pop
data16
sub
test
fsubrs
out
cmp
mov
fbld
cmp
pusha
lds
xchg
cmp
insl
dec
push
jb
sub
and
and
xor
je
xor
push
cwtl
lds
aaa
mov
jo
testb
adc
jle
insl
add
adc
mov
pop
sbb
mov
pop
loopne
scas
inc
push
adc
jmp
push
cmpl
outsb
sbb
dec
xor
dec
repz
mov
xchg
and
mov
push
call
inc
outsl
into
lcall
mov
divl
mov
cltd
push
scas
sti
push
ss
mov
test
jbe
pop
xor
xor
and
adc
sbb
jle
xchg
in
pushw
lock
adc
sarl
xor
mov
lds
add
or
test
push
daa
aad
aaa
push
int3
loope
mov
sti
cmp
aaa
or
cmpsb
dec
jbe
xchg
inc
xchg
sahf
mov
aas
stos
jp
and
movsb
bound
mov
js
add
inc
mov
mov
data16
jne
add
mov
mov
ret
push
mov
adc
cmc
idivl
xchg
call
jl
lods
test
sarl
pop
rcl
fstpt
sbb
push
sahf
rorl
int
xchg
movsb
pop
pop
das
pop
mov
test
mov
pushf
mov
inc
gs
sub
dec
insb
push
dec
pushl
adc
iret
inc
mov
std
mov
jg
mov
mov
arpl
stc
call
pop
jns
mov
aas
jg
repz
sub
bound
ret
dec
cwtl
in
adc
mov
ret
mov
jg
fndisi(8087
and
cwtl
push
mov
test
mov
adc
in
mov
mov
fldl
or
xchg
stos
jp
fsin
pop
fists
mov
mov
dec
xlat
sbb
xlat
ficomps
cli
cmp
jb
stos
cmp
push
sub
inc
mov
cmp
pushf
mov
xchg
lods
out
lcall
xchg
in
adc
sbb
inc
out
mov
mov
push
jp
or
cli
jmp
mov
pop
mov
mov
inc
std
mov
mov
nop
aas
sbb
jo
adc
ljmp
sbb
add
aaa
test
adc
cmp
jnp
addl
pop
sub
jge
mov
mov
jmp
decb
mov
dec
gs
adc
incl
xor
sbb
lods
pushf
xor
lcall
lods
mov
cmp
movsl
mov
add
jae
stos
or
in
xlat
lret
je
loopne
pop
stos
dec
bound
mov
ret
filds
movups
dec
testl
movsl
decb
int
ficompl
xchg
add
fmull
push
fsts
push
pop
cmp
das
mov
sti
sti
push
pop
cmp
xchg
imulb
cwtl
sbb
lock
sub
fidivs
cmpsl
sbb
push
add
and
inc
lret
nop
mov
sti
add
jge
das
enter
scas
mov
bound
int3
fadds
xchg
int3
mov
dec
shll
sbb
cmp
rorl
push
popa
jnp
jp
ret
and
subb
cmpsl
xorl
cli
lahf
xor
add
and
inc
stos
rcr
fdivr
aaa
ficoml
cli
dec
inc
popf
push
xchg
sarb
outsl
push
cmp
dec
push
jl
hlt
repnz
cli
mov
sub
enter
out
sub
xlat
xchg
aad
lods
out
lahf
scas
outsl
sub
popl
inc
push
shll
xchg
adc
adc
pop
dec
aas
xor
repnz
into
filds
sbb
pop
mov
adc
jle
shl
pop
mov
lcall
leave
mov
insb
jnp
mov
mov
sub
popf
adc
inc
cltd
test
sti
bound
mov
in
pop
out
mov
cmp
je
in
cltd
ficoms
and
jge
iret
in
xlat
sbb
lock
inc
cmc
cmc
and
push
inc
int3
xor
push
mov
cmp
jnp
pop
arpl
and
mov
sub
fdivrs
sub
enter
add
mov
inc
lcall
aas
notb
dec
pop
and
fwait
cmp
out
xchg
xchg
sbb
push
sarl
aas
imul
xchg
pop
movw
outsl
aas
push
xchg
ret
stos
xor
sub
cmp
outsb
int
fldt
fldenv
outsb
mov
std
filds
cmp
test
clc
ljmp
mov
loope
mov
icebp
repz
subw
pop
out
jbe
pop
xor
xchg
mov
je
test
jno
inc
jb
clc
cmpsb
cmp
jmp
inc
mov
fisubrs
outsb
insb
xchg
pop
das
inc
and
mov
xchg
xor
inc
orb
jno
inc
push
pop
aaa
or
mov
daa
cmp
push
jecxz
sub
mov
dec
xlat
clc
ljmp
movsl
add
mov
mov
dec
add
je
fmul
dec
cmp
sub
ja
jns
sbb
in
mov
xchg
mov
and
test
and
pushf
cmpsb
call
pop
cld
push
pop
lcall
sbb
push
push
mov
shrb
and
add
mov
iret
cmpsl
lcall
fidivl
fnstcw
xchg
pop
imul
and
fisttpll
scas
cmp
dec
lock
loop
mov
jmp
andl
sbb
add
das
adc
pop
mov
pop
lods
pop
das
sub
xchg
xor
mov
lahf
cli
sbb
stos
mov
imul
movsl
stc
lret
mov
ret
mov
and
pop
xchg
mov
out
pop
sti
call
std
and
cmp
into
add
ret
push
hlt
lret
jp
pop
jbe
inc
adc
pop
and
std
or
add
inc
xchg
push
xchg
mov
pop
les
aad
fldenv
mov
and
inc
int3
stc
jg
lret
dec
xor
js
xor
jno
push
jno
enter
and
in
scas
inc
xchg
add
mov
sti
xlat
imul
push
ljmp
add
sub
mov
in
test
xorl
xor
and
cmp
rcll
sub
pop
out
nop
and
in
test
das
xchg
or
sub
ds
and
lea
xor
push
out
cmc
mov
cmp
test
pop
pop
mov
imul
out
sbbb
add
or
push
movsl
adc
and
fidivrs
jno
mov
and
and
notl
mov
pop
mov
xor
mov
sub
jno
in
bound
outsb
adc
fsubl
mov
pop
push
pop
sahf
add
ffree
ds
and
fs
add
inc
rolb
inc
idiv
push
sub
mov
cli
push
mov
gs
cmp
mov
imul
hlt
push
iret
dec
mov
inc
mov
pop
sub
xchg
cli
pusha
pop
push
mov
sub
jge
or
dec
pusha
jno
xor
push
cmp
das
psubusw
pushf
into
push
pop
pop
mov
mov
cld
jb
xlat
pop
adc
cmpl
jo
mov
bound
sub
mov
inc
xchg
or
mov
mov
xor
hlt
sub
xor
pusha
xchg
mov
jno
push
popf
push
pop
cmp
test
leave
mov
xor
das
jb
adc
pushf
andb
scas
jb
lock
push
loop
adcb
rolb
cmpsb
mov
ds
imul
inc
or
and
repz
mov
roll
aas
sbb
popa
pop
adc
out
mov
pop
icebp
mov
mov
ja
stc
in
jne
stos
daa
adc
push
xor
addl
push
dec
cmp
mov
testl
adc
push
and
iret
jecxz
nop
test
arpl
dec
xlat
je
push
pop
lods
push
es
or
dec
ss
xchg
movsl
in
lahf
fstpl
sbb
data16
dec
ja
ja
and
adc
pop
xchg
cmpsb
gs
lock
xor
loopne
xor
sbb
mov
xchg
sub
call
or
int
movsl
icebp
lods
rorl
mov
jnp
shrd
lret
mov
mov
pop
ds
cs
test
mov
daa
xchg
sbb
inc
outsb
ss
xor
sbbl
sbb
pop
pop
adc
jl
in
addr16
cmpsb
push
sub
test
jmp
mov
xchg
fisubs
add
jmp
sub
loope
inc
inc
mov
mov
jle
mov
lea
imulb
mov
es
mov
jae
sbb
mov
scas
mov
xlat
in
lods
dec
mov
sbb
outsb
xor
jno
ds
fbstp
inc
mull
xchg
dec
jnp
pop
push
pop
clc
push
imul
sbb
add
jo
mov
into
mov
jbe
mov
loope
or
push
mov
sub
icebp
jp
repnz
fstpl
clc
or
mov
cmp
sbb
int
stc
lea
jo
push
rcrl
pop
js
pushf
cmc
lcall
je
pop
mov
cltd
aaa
xor
cs
enter
pushf
jae
adc
mov
jmp
sbb
and
sub
ret
dec
xor
mov
cld
nop
fidivrs
dec
jmp
fcoms
or
icebp
shll
je
std
jb
add
or
pop
jg
test
dec
mov
pop
out
mov
xchg
loop
sub
cltd
insb
hlt
mov
lcall
push
sar
pop
test
cmp
xchg
aas
mov
dec
xchg
mov
dec
into
in
pop
lods
sub
ja
inc
sub
mov
test
stc
or
mov
mov
mov
add
cmp
lods
sbb
lret
sbb
inc
push
sbb
mov
out
test
inc
outsb
mov
xchg
pop
xchg
mov
ja
jnp
push
dec
jbe
ficoml
lret
sbb
lret
test
push
xchg
push
rcll
jmp
repz
dec
aas
push
pop
hlt
outsb
add
movsb
push
mov
les
mov
xor
jg
lcall
out
dec
cli
cli
xor
test
mov
ljmp
adc
icebp
cmp
das
or
mov
jbe
sarl
dec
pop
xchg
xor
mov
ljmp
movsb
dec
pop
cmp
push
push
mov
cmpb
mov
lcall
addb
leave
enter
addl
movsb
xchg
and
aaa
loopne
or
xchg
mov
pop
sub
push
sahf
dec
rol
sbb
pop
cmp
jo
pop
mov
cmp
xchg
mov
cmp
sub
push
inc
xchg
fildl
js
fwait
push
push
sub
inc
sbb
jo
imul
call
mov
xorl
add
add
shrb
imul
in
mov
dec
jo
adc
xor
into
lea
pop
add
push
pop
mov
fadds
mov
sub
or
scas
sbb
int3
mov
lcall
adc
jnp
loope
push
inc
sbb
in
add
fcompl
mov
bound
jge
mov
adc
mov
test
xchg
fisttps
in
push
das
fstpl
xchg
leave
mov
fisttpll
pop
shlb
leave
and
divb
xor
fwait
mov
fcmovnb
mov
push
pushf
jbe
cmp
or
inc
sub
mov
dec
dec
pop
vpunpckhwd
or
cmp
cs
dec
jl
cmc
mov
adc
adc
xchg
insb
mov
popl
test
dec
jle
lret
fiaddl
fistl
insl
mov
dec
cmp
ret
test
aas
das
dec
mov
mov
in
jp
cwtl
sbb
xor
roll
out
dec
sbb
mull
and
jl
in
test
loop
lods
cli
out
js
mov
stc
fnstsw
lods
outsb
inc
pop
scas
xlat
fistpll
sti
push
push
cmp
scas
cmp
cmpsb
sub
xor
std
je
xchg
pop
xchg
rol
mov
jb
inc
inc
ret
leave
push
lahf
lret
push
movsl
subl
sbb
mov
stc
cmp
jbe
mov
mov
sbb
mov
mov
outsl
mov
sbb
divl
fildll
das
int3
rcr
mov
cmpl
clc
sub
loopne
adc
stos
mov
jmp
xlat
inc
cmp
orb
dec
scas
pop
into
ss
mov
cli
mov
xorl
inc
xchg
les
icebp
xor
sbb
inc
bound
jl
mov
jmp
xchg
pop
push
out
ret
or
jp
adc
xchg
rcrl
lods
dec
xlat
leave
jnp
and
iret
dec
pushf
lods
pop
lret
adc
xchg
dec
movsl
jae
les
pushf
jmp
sbb
cltd
cmpl
mov
lods
iret
aaa
int
sbb
and
mov
mov
push
push
fmul
scas
fucomip
push
dec
cmp
and
pop
mov
jmp
pop
add
sub
data16
pop
add
lret
adc
xlat
sub
jecxz
stc
inc
scas
mov
jb
add
iret
stos
add
fdiv
mov
sbb
cmpsb
es
punpcklwd
pop
mov
fnstsw
das
push
stc
test
scas
xchg
data16
ss
mov
pop
mov
sar
add
loop
jle
in
sbb
mul
bnd
lcall
sub
ficomps
and
push
lret
fstl
decb
nop
jl
fisttpll
xor
or
int
gs
jmp
sahf
add
cwtl
in
sbbl
cmp
sub
mov
fldl
ret
xor
pop
and
sbb
sbb
nop
pop
cmpsl
int3
pop
add
cli
icebp
xor
les
sbb
test
pop
xor
aaa
or
les
repnz
pop
add
das
cmpl
adc
xorl
mov
mov
add
ret
dec
mov
and
hlt
mov
nop
sub
ss
out
gs
pop
inc
pop
out
jbe
mov
jl
xor
sti
sbb
call
or
loope
xlat
push
ret
lea
in
fimull
fdivs
in
outsb
subb
inc
cs
pop
or
pop
add
ret
arpl
test
inc
xchg
sub
cs
inc
push
jns
mov
sar
cmc
aas
out
mov
pop
pop
popf
lods
mov
dec
jmp
cs
rcrl
fnsave
dec
mov
dec
jg
sub
push
fidivrl
xor
shr
iret
jns
jno
int3
xchg
inc
push
subl
ret
sub
mov
pop
cmpsl
sti
aam
divb
shl
sub
mov
dec
push
jns
inc
xchg
mov
sahf
sti
subl
push
jecxz
testb
test
xchg
or
stos
mov
loop
cwtl
sub
daa
cmp
ljmp
ret
cmpsb
out
cmp
sub
lret
push
cmp
cvtps2pd
ljmp
push
fisubrs
arpl
push
rcl
shl
jae
movsl
push
subb
pop
in
imul
xchg
js
push
jns
rcll
jl
mov
movsb
popa
dec
in
into
fstps
mov
std
push
call
or
test
push
push
jl
leave
cmp
inc
les
je
imul
mov
xchg
xchg
inc
inc
orb
in
cmc
xchg
or
xchg
ljmp
jns
add
movsb
pop
lds
in
mov
stos
scas
dec
test
mov
sahf
lea
clc
push
add
mov
jb
pushf
adc
adc
repnz
inc
and
dec
pop
jae
ljmp
scas
xorb
cmp
in
dec
push
test
dec
cmp
pop
push
sbb
sub
cltd
pop
test
pop
sbb
scas
mov
mov
inc
sti
jns
dec
adc
mov
jmp
sbb
addl
xor
mov
jbe
push
mov
jae
push
repz
inc
psubb
add
sub
pop
and
jb
add
test
shll
cmpsl
dec
inc
or
inc
dec
or
push
lcall
sbb
scas
sahf
int
adc
sbb
inc
test
imul
aas
inc
sub
call
or
sti
xchg
inc
sbb
mov
gs
cmp
clc
call
cld
out
ss
pop
inc
pusha
test
aad
popf
ljmp
xor
xchg
loop
mov
inc
and
or
cwtl
and
jne
lock
scas
pusha
sub
fldenv
or
adc
fiaddl
ja
aas
fcomip
mulb
mov
rcll
imul
xchg
fwait
mov
jae
frstor
stos
stc
sub
xchg
imul
ss
pop
mov
dec
fwait
sub
mov
insb
adc
add
jnp
sub
mov
push
call
jne
and
jecxz
mov
push
ja
jmp
cmp
jl
jmp
jle
or
push
out
ret
clc
clc
jo
test
inc
aaa
test
jae
sbb
push
sbb
lods
push
mov
and
pusha
and
add
mov
xlat
int3
dec
mov
in
faddl
or
dec
clc
xchg
in
lds
xlat
jl
and
mov
mov
dec
push
dec
add
sbb
sub
mov
mov
jecxz
imul
sbb
dec
imul
push
xchg
cli
and
xchg
insl
repz
loop
cltd
test
clc
add
insl
inc
enter
mov
pop
push
xor
addl
stc
arpl
sub
cmp
stos
movsb
js
fists
or
sbb
add
mov
stc
mov
gs
adc
pushf
repz
pop
int3
push
xchg
fs
mov
in
dec
shl
popl
mov
pop
sbb
sbb
call
mov
inc
rorl
xor
aas
or
pusha
jecxz
dec
adc
fiadds
stos
dec
dec
data16
cmc
mov
dec
loopne
rcll
outsl
xlat
xchg
cmp
add
add
pop
das
stc
adcl
leave
mov
or
jmp
aad
cli
mov
scas
mov
inc
push
xchg
test
repz
xlat
pop
jmp
subl
ljmp
sahf
cltd
and
jae
add
mov
push
imul
in
mov
fs
cli
sub
mov
aam
xchg
or
scas
mov
push
sub
lret
enter
sbbb
aad
dec
mov
out
xor
fisubl
mov
inc
out
icebp
imul
inc
add
addr16
testl
lock
into
pop
xorb
scas
add
in
rcll
push
in
mov
sub
clc
jne
nop
pop
inc
mov
int
fsubr
inc
inc
hlt
negl
sbb
mov
sub
inc
xor
jno
enter
outsb
jg
in
add
xlat
dec
cmpsb
lods
and
inc
xlat
inc
sbb
xchg
xchg
mov
cmp
add
jg
aam
sbb
mov
jle
sbb
sti
jbe
out
fmull
jae
xchg
mov
movsl
stos
stc
adc
dec
jge
in
push
ret
xlat
xchg
shrl
push
leave
dec
mov
jns
out
sbb
ja
mov
pop
cwtl
in
cmpsb
mov
jecxz
movsl
jne
test
sbb
adc
mov
xchg
divl
sub
out
pop
in
incb
insb
lret
inc
lcall
mov
nop
mov
mov
mov
repnz
popa
pop
xor
das
xlat
mov
push
int
int3
ret
imul
xor
sbb
pop
mov
xchg
ficoml
lcall
fmuls
out
and
push
inc
xchg
dec
xchg
loope
push
add
add
and
loop
jno
int3
enter
shrb
lret
jl
jle
sub
aad
ljmp
or
mov
sub
cld
cwtl
xor
dec
jbe
mov
imul
adc
mov
pop
xchg
add
mov
lock
fisubs
pop
data16
cmp
dec
loope
cmp
out
pop
mov
inc
stos
addr16
sbb
mov
or
fdivs
mov
sbb
icebp
xchg
es
add
ror
sbb
lahf
mov
mov
sub
mov
mov
fs
dec
jge
mov
inc
dec
mov
or
pop
and
and
cmpsl
stc
dec
test
sub
das
and
add
clc
movsl
imul
stos
adc
adc
or
push
ret
xchg
shll
mov
cmp
adc
sub
pop
fistpll
fbstp
fsubl
ficoms
push
fisttpl
cmp
rcrb
das
icebp
add
dec
aas
lock
pop
std
repnz
out
js
pop
cwtl
cs
test
imul
sbb
int3
sbb
mov
sbb
pop
cmp
fwait
pop
lock
mov
dec
mov
xor
lret
pop
dec
xchg
adc
xchg
dec
jl
in
inc
out
negl
add
ja
or
push
push
xor
inc
arpl
inc
adc
push
fsubr
arpl
loopne
mov
es
adc
imul
and
cmp
popf
push
adc
mov
xor
lahf
push
aas
sbb
jnp
sbb
adc
lds
pop
stos
adc
jb
aas
out
push
fdivrl
mov
inc
sbbb
dec
scas
dec
mov
cmc
sub
shlb
pop
cmp
xchg
imul
in
stos
pop
pop
fldl
inc
fwait
pop
fcomps
in
push
in
cmp
adc
cmp
push
cmpsl
inc
iret
ljmp
adc
fdiv
cltd
andl
nop
rcr
cld
ret
repz
test
sub
imul
andl
in
outsb
sbb
addr16
movsb
mov
jbe
movsb
ret
jp
inc
insb
mov
pop
lret
mov
jae
lea
and
jb
mov
and
adc
lret
mov
lret
mov
cmp
sbb
fisttpll
lea
lret
js
imul
xchg
cmc
xor
ss
sti
ret
loope
bound
les
dec
xchg
pop
or
mov
adc
push
bound
rol
fcomip
mov
scas
mov
nop
pop
movsl
or
push
cmp
jno
or
outsb
mov
lods
lds
fisttps
push
dec
mov
dec
pusha
pop
das
xor
fcoms
inc
inc
pusha
insl
adc
out
dec
or
inc
sbbb
popf
jge
or
leave
in
mov
jmp
mov
push
les
sti
mov
jge
shrl
mov
inc
push
lcall
mov
cmp
inc
aaa
mov
dec
les
lret
shlb
idivb
pop
call
test
pop
push
or
shll
lock
bnd
fstpl
imul
push
xchg
shrl
push
xchg
cltd
inc
les
cld
ljmp
rol
and
jg
cmp
lret
lods
jg
xor
imul
xor
inc
inc
jecxz
outsb
mov
mov
xchg
jne
xor
pop
jo
add
mov
movsb
dec
sbb
dec
lcall
popa
and
sbb
std
or
inc
sub
fdiv
aam
dec
ss
mov
xor
and
pusha
jmp
test
clc
fsts
mov
sub
xor
insl
arpl
ja
or
inc
aam
and
ds
xchg
or
xor
push
lahf
in
pop
cmp
or
sub
pop
sub
pop
out
pop
dec
lea
popa
sub
jge
mov
pop
dec
dec
pop
and
jecxz
cwtl
inc
push
int
out
in
notb
xchg
mov
xchg
ss
dec
int3
or
aas
xor
aas
mov
jmp
push
jmp
ja
stos
stos
out
lret
xchg
daa
mov
mov
jp
pop
dec
dec
test
out
lcall
ret
xchg
lahf
pop
fimull
sarl
jns
lret
ret
or
gs
sub
movsb
out
out
mov
inc
mov
sub
fwait
mov
es
push
popf
dec
mov
sub
scas
dec
and
loope
mov
fbstp
dec
pop
repz
fbld
jmp
inc
inc
lea
popa
hlt
lods
test
andb
addl
adc
and
push
mov
test
les
fdivrp
mov
ss
daa
or
xor
xlat
fildl
out
aas
pop
fidivl
ljmp
cmp
lret
fsubr
fbld
inc
xchg
jecxz
xchg
dec
cmp
inc
out
rcrl
adcl
sbb
out
lock
jp
and
xchg
lret
mov
adc
cld
stc
fistpl
add
xchg
or
mov
iret
sarl
movsb
cld
mov
enter
outsl
cmp
lcall
sub
push
pushf
jg
aaa
scas
push
mov
inc
jecxz
fnstsw
clc
call
fadd
sub
jmp
in
lcall
mov
out
or
mov
inc
iret
ja
jecxz
arpl
mov
sub
jl
in
or
cli
pop
aad
ja
mov
dec
or
fiaddl
add
in
cmc
or
jo
jg
dec
fs
lods
lahf
cltd
mov
inc
cmp
inc
mov
xchg
cld
push
xchg
sbb
pop
and
in
inc
and
dec
add
xchg
adc
jmp
decl
outsb
xlat
orb
test
cli
aad
mov
jbe
mov
int
out
jbe
ret
iret
imul
push
sub
pop
mov
sti
int3
ficoml
lods
push
std
pop
dec
mov
aas
cmpsl
pop
jb
daa
and
rorl
mov
pop
inc
push
jmp
inc
lret
lea
inc
pop
into
scas
jb
xchg
icebp
movsb
jns
jp
xchg
inc
cmpsb
dec
push
sub
orl
ror
je
out
push
cmp
xchg
inc
jle
ret
xchg
cmpsl
gs
cmp
lock
or
sub
ja
mov
icebp
sub
cmp
pop
mov
movsl
insl
mov
ss
xor
pop
push
inc
push
jbe
dec
mov
inc
shrl
les
or
ss
fldt
sbb
dec
or
lods
les
fucomip
in
lea
bswap
add
fwait
jnp
arpl
cmp
jb
dec
cmc
add
dec
cld
cmp
rcl
movsl
xor
adc
aad
outsl
mov
xor
bound
test
or
fcmovne
xorl
xlat
push
lcall
mov
cltd
clc
leave
loope
fmull
inc
sub
ficoml
insl
sbb
push
pop
fmuls
out
js
das
fcoms
cmp
dec
js
mov
cmp
enter
push
shl
pop
mov
les
sbb
fldl
adc
cmp
sub
scas
xchg
mov
loope
mov
call
adc
add
adc
outsb
mov
jo
push
sub
ret
aas
mov
into
and
subl
daa
cli
mov
dec
mov
scas
jbe
stc
outsl
adc
and
ja
sub
cmp
int
stos
cmpsb
cmp
cli
jnp
jae
stos
jno
pop
faddl
mov
cltd
leave
xchg
inc
and
mov
sub
outsb
cmpsl
inc
in
mov
adc
jno
dec
mov
or
mov
sub
pop
jl
or
cltd
mov
xor
out
xchg
test
adc
jnp
mov
aaa
pop
xchg
cmp
mull
mov
add
jge
ret
dec
int
jo
hlt
cmc
out
xchg
mov
xlat
sbb
subb
or
xorb
loopne
push
loopne
nop
pop
sbb
movsl
pop
out
imul
idivl
imul
or
test
adcb
mov
mov
add
mov
xchg
push
test
mov
iret
cmp
and
outsl
hlt
hlt
outsb
mov
and
pop
mov
call
or
fistpll
loopew
lcall
xlat
enter
jns
push
pop
inc
lahf
lahf
loopne
fistpl
int3
lret
mov
fs
clc
shlb
mov
into
push
xor
cmp
inc
mov
add
ljmp
jmp
mov
daa
mov
ja
sbb
shlb
push
sub
insl
push
pop
in
sbb
jg
ret
dec
push
movsb
xor
rcrl
ss
sub
and
pop
jne
movsb
test
jg
fwait
jmp
aas
adc
js
test
out
dec
mov
in
and
and
inc
call
push
pushf
mov
jne
adc
mov
pop
xor
jmp
arpl
jl
mov
or
vphaddudq
add
sti
jecxz
pop
mov
sbb
pop
es
mov
add
scas
mov
mov
outsb
push
cmc
push
jmp
cmp
into
lret
lods
dec
pop
add
aam
lods
cmp
mov
mov
push
jmp
ljmp
mov
ja
push
cmc
lods
pop
xchg
or
neg
flds
fxch
std
jnp
addr16
push
inc
adc
test
loop
sbb
mov
scas
sbb
daa
mov
pop
and
mov
arpl
and
jl
mov
and
sub
fs
dec
imul
sbb
jb
adc
jne
jmp
pop
xchg
dec
dec
or
mov
dec
or
sub
bound
sahf
in
xor
xlat
ficompl
ja
imul
lret
dec
dec
divl
cltd
push
mov
push
mov
rcr
push
cmp
add
in
sub
sbb
xlat
cltd
hlt
jg
push
arpl
divl
ret
adc
imul
push
ss
fdivrp
xchg
add
leave
add
loope
pop
xor
sti
sbb
xor
sub
mov
xor
dec
or
mov
jbe
sbb
cs
push
jne
dec
sub
pop
xchg
inc
push
out
jle
pop
movsl
push
lds
xchg
or
out
inc
xor
out
inc
sti
xor
loope
inc
pop
dec
mov
xor
sarl
inc
popa
and
roll
flds
sbb
stc
dec
or
rorl
xor
sahf
faddl
push
dec
shlb
push
mov
xor
mov
pop
call
cmp
or
mov
mov
sub
mov
jne
pop
fwait
shr
scas
popf
pushf
outsl
mov
popf
movsb
setb
mov
shll
mov
xor
ret
repnz
shrb
jb
jge
mov
lods
repz
or
xor
push
scas
es
mov
call
add
fsub
xchg
sbb
das
mov
ret
rcr
sbb
out
push
aaa
inc
call
inc
dec
cmc
mov
cmp
int
jbe
push
mov
test
enter
sbb
fs
daa
mov
in
sbb
adc
pop
cwtl
filds
sahf
xor
aaa
adc
je
fistpl
loop
sti
das
cs
and
adc
cmp
add
and
adcb
test
push
inc
mov
pop
jge
pushf
sbb
mov
jmp
cmp
cld
popa
sbb
jo
loop
scas
mov
cltd
adc
and
andb
icebp
scas
inc
icebp
cmp
mov
sbb
fmulp
add
jl
shrb
out
lea
arpl
mov
jle
and
jecxz
pop
add
gs
cmp
into
mov
mov
adc
sarb
dec
jecxz
out
push
cmpsl
nop
push
and
cmp
sbb
andb
test
fstpl
or
sti
shll
loope
push
xchg
and
jns
gs
jg
outsb
or
pop
js
scas
jno,pn
dec
insb
cmp
enter
xor
sub
inc
mov
and
jle
loop
hlt
roll
out
orb
daa
and
addr16
lods
and
lods
das
lock
push
pop
push
or
in
ds
mov
and
shl
sbb
inc
mov
lret
movsl
cmp
mov
adc
mov
call
dec
pop
cs
test
arpl
jo
aad
test
xlat
push
insl
mov
ficoml
jg
mov
pop
mov
rcr
or
xchg
je
push
out
jns
int
cmp
shrl
subb
mov
lret
add
fmuls
cmp
jge
das
sbb
fidivrs
push
in
dec
lock
mov
xchg
xor
ja
les
inc
dec
inc
adc
daa
and
adc
shlb
jno
mov
fs
mov
insl
ret
cmp
mov
dec
cld
sbb
daa
stos
aaa
lret
push
lods
in
inc
insb
cmpsl
cmp
ds
aam
mov
jp
adc
lea
add
and
loop
sub
cmp
or
bound
add
inc
in
cld
out
inc
xor
jl
sub
adc
or
imull
das
ss
or
or
leave
jecxz
xor
bound
fs
and
idivb
jmp
movsl
cli
test
bound
in
jo
rcr
inc
pop
aas
in
popa
std
ljmp
and
fistps
aas
sarb
sub
pushf
push
loope
mov
sbb
push
push
das
stos
push
leave
dec
cmpsl
mov
sub
das
cmp
lret
out
jae
shlb
loopne
je
pop
cmp
in
or
fsts
lea
in
test
push
fcoml
xchg
mov
or
movsb
jge
push
mul
mov
xchg
sahf
and
jnp
inc
push
dec
sbb
xor
add
lcall
xor
aas
push
sub
jmp
ret
cli
mov
pop
shl
repz
ja
iret
sub
and
dec
mov
lret
add
gs
push
int3
sbb
push
fisubs
jb
aam
or
xor
mov
mov
xchg
cmpsl
dec
adc
fwait
adc
xor
adc
ss
xchg
cwtl
outsb
sub
cmpsb
and
dec
test
hlt
jmp
out
add
movl
stos
nop
lret
mov
add
cmp
addr16
inc
fidivrl
lahf
in
into
rcrb
push
test
push
dec
popa
jns
jo
add
sbb
ret
ret
cwtl
bound
mov
adc
shlb
daa
xchg
xor
fsts
test
andb
sub
nop
fld
mov
pushf
repnz
jne
popa
mov
and
mov
daa
in
mov
ret
lods
dec
jle
or
repz
jl
jg
arpl
jg
or
dec
fadds
imul
mov
adc
jnp
mov
jnp
sti
xchg
into
push
ds
pop
dec
inc
pop
or
test
gs
mov
pop
mov
adc
sahf
decl
pop
movsl
cltd
add
push
xor
bound
and
lea
cld
pop
fstpl
lods
pop
add
movw
call
push
lret
jp
ret
jl
ret
in
jae
adcb
nop
dec
dec
jmp
lret
testb
or
out
pop
cwtl
nop
into
and
or
lds
popf
int3
std
jecxz
mov
xchg
ret
pop
pushf
cmp
xlat
movsl
mov
xor
fisubl
ret
loop
push
lods
cmp
test
xchg
iret
jno
jmp
daa
push
cmp
outsl
mov
push
mov
or
jno
mov
in
jbe
test
xor
hlt
xchg
push
pop
stc
bound
xchg
out
or
cmc
xchg
adc
mov
mov
imul
dec
lret
lock
int
arpl
nop
lods
js
mov
sbb
fstp
daa
sub
enter
dec
into
sub
xor
movsl
data16
inc
adc
sti
sar
enter
not
pop
fwait
adc
loop
fs
lea
out
push
cmp
fsts
popa
fbstp
xor
negl
mov
xchg
mov
inc
inc
data16
popf
sbb
pop
and
sahf
jno
mov
aaa
stc
out
call
dec
sub
sbb
dec
cmp
sbb
test
lret
adcb
stos
fsubrl
mov
dec
sub
je
inc
bound
outsb
sarl
xchg
inc
xchg
in
pop
xchg
stc
imul
std
outsb
xchg
shl
stos
lods
cs
xlat
sub
push
mov
loope
cmp
xchg
mov
cwtl
push
xchg
in
fstpl
insb
xchg
imul
pop
dec
cld
hlt
clc
clc
inc
scas
sbb
jns
ret
stos
sub
cmp
or
mov
int3
fsubs
or
mov
mov
dec
jmp
and
aad
add
nop
dec
xor
mov
cwtl
pop
fwait
imul
xchg
jp
das
sahf
ret
jmp
pop
sub
mov
xor
jg
mov
mov
inc
mov
cmp
sub
aas
jle
mov
sti
fwait
insb
mov
out
mov
cmp
in
insl
fnstcw
dec
mov
jg
mov
daa
adc
dec
mov
xchg
mov
mov
add
cli
xchg
test
xchg
stos
cmpsl
imul
jbe
int3
daa
mov
jbe
cmpsl
push
add
add
add
pop
and
loop
cmp
pop
inc
jno
pop
sub
aas
ja
in
fbstp
fdivrl
enter
push
cld
pop
mov
xor
shr
dec
mov
adc
cmp
ss
js
inc
push
mov
add
dec
scas
shlb
xchg
add
int
cmc
dec
cwtl
test
daa
xchg
outsb
push
jo
lds
test
mov
mov
fidivrl
or
push
int
pop
or
decb
xor
rcr
jno
xchg
rolb
jns
sbb
push
or
call
aad
adc
adc
mov
xchg
adc
cmp
push
inc
cmp
std
push
daa
in
inc
je
cli
arpl
jg
lea
push
mov
test
push
sbb
test
or
stc
shl
cwtl
push
mov
mov
js
jb
into
or
lret
aad
and
ss
adc
shll
sub
push
popa
dec
scas
adc
xchg
cmp
data16
adcl
push
adc
inc
adc
call
add
cmc
loope
negl
fisubrl
mov
jo
lods
cmc
add
cmpsl
or
rcr
mov
jno
fwait
pop
ds
jns
pop
and
cmp
add
and
fcompl
out
loope
loopne
xor
mov
imul
dec
int
sbb
enter
lods
xor
enter
mov
mov
xor
adc
xchg
push
cmc
add
jno
jo
or
insb
leave
rorb
inc
mov
mov
pushf
fcmovne
push
or
aad
cmpl
jmp
pushl
mov
hlt
arpl
popa
jnp
adc
sub
mov
daa
cwtl
mov
dec
sahf
or
jecxz
xchg
inc
and
lea
ss
cmpl
adcb
movsl
jnp
fldt
sub
jle
mov
xor
imul
xchg
mov
cmp
cmp
pushf
jge
shlb
test
leave
stos
jp
pop
loope
pop
repz
ds
je
dec
ljmp
cmp
ret
inc
xor
in
daa
aas
stos
sub
mov
mov
jnp
insb
ja
cmpsl
ds
push
add
repnz
in
int
pop
fs
inc
hlt
inc
cwtl
or
and
mov
ret
int
movsl
adc
cmp
in
dec
adc
popf
mov
cmp
cmp
xor
mov
cmc
cmp
popf
sub
outsb
xchg
mov
dec
xor
bound
jle
scas
jnp
stos
rcr
cld
push
popf
ja
xchg
jnp
or
in
mov
lods
or
mov
sub
mov
sbb
add
ret
xchg
out
mov
jno
addr16
dec
cmp
adc
sub
sbb
mov
fs
jl
add
les
scas
call
aaa
repnz
cltd
jbe
shr
or
sbb
es
fld
mov
enter
out
inc
popa
xchg
movb
ljmp
mov
pop
adc
sbb
cltd
lcall
shlb
mov
iret
pop
rol
mov
mov
add
out
cld
adc
clc
lods
sbb
mov
test
mov
push
lods
lock
mov
lret
jns
iret
pop
mov
push
mov
stos
das
inc
imul
pop
jge
fistl
xchg
lcall
pusha
mov
hlt
popa
in
sub
shlb
xor
mov
pop
icebp
mov
insb
test
mov
mov
fs
sahf
cmpsb
rorl
repz
jmp
pop
inc
cwtl
out
add
mov
adc
push
pop
inc
addr16
shl
push
push
rcll
jmp
and
scas
not
sub
stos
dec
or
xor
into
mov
inc
pop
and
push
popa
lcall
and
cltd
mov
insb
sbb
repz
xor
sbb
lcall
dec
aad
cltd
and
mov
sub
inc
sbb
js
cmp
push
inc
sbb
mov
jg
cmp
push
mov
cwtl
dec
in
orl
stc
dec
jb
adc
cltd
xor
mov
sbb
pop
mov
and
and
and
xchg
adc
xor
enter
stos
sub
roll
dec
out
lcall
mov
pop
add
cli
lds
loop
add
imul
sbb
inc
dec
or
std
imul
inc
dec
xchg
ss
push
sub
out
into
cwtl
jge
push
sbb
ljmp
jp
iret
fnsave
test
jo
mov
adc
mov
int3
adc
sarb
fdiv
xor
sbb
add
sahf
xor
ljmp
mov
mov
and
jns
out
sbb
sub
aas
test
and
repnz
mov
fsts
sub
mov
add
lods
mov
mov
adc
pop
fiaddl
icebp
xchg
movsb
pop
adcl
push
sbb
push
xchg
sub
cmpb
xor
push
cmp
xor
dec
cmp
pop
dec
rorb
adc
ss
loopne
push
sub
out
pop
dec
mov
and
out
dec
cmpsb
jmp
aad
sub
out
sub
add
jecxz
xchg
in
push
test
mov
push
mov
push
nop
jmp
inc
int
pop
rclb
sahf
or
add
in
mov
pop
fsubs
iret
mov
inc
inc
cli
ljmp
enter
rcrb
adc
inc
add
inc
mov
ret
pop
ficoml
or
lock
out
cltd
sbbl
adc
andb
jns
pop
loope
in
inc
lods
push
loop
bound
mov
mov
xchg
add
xchg
sbb
lds
rcr
daa
lahf
fucomip
cmp
push
aam
add
jmp
fstp
inc
out
shlb
dec
mov
sub
xor
sti
mov
dec
pop
mov
out
cli
push
div
insb
pop
cmpl
jne
dec
iret
and
mov
pop
outsl
kshiftld
push
pop
mov
lahf
jle
in
pop
je
fadd
jg
mov
nop
push
cwtl
fcmovnb
jnp
dec
call
pop
sbb
ret
aam
xorb
push
and
addr16
stc
lods
push
call
jg
loope
incb
test
jae
jle
and
mov
sti
mov
aam
xchg
ljmp
pop
push
out
mov
mov
test
ja
imul
jecxz
scas
sbb
push
lret
nop
xor
dec
lcall
ds
jle
callw
out
push
cmp
cmp
fisubrl
dec
push
xlat
inc
push
adc
in
cwtl
mov
add
fstps
dec
mov
insb
cmp
push
push
ljmp
cmpsl
adc
popa
adc
push
fs
cs
repz
cmc
fdivp
jmp
lcall
popf
shufps
lock
mov
sbb
js
pop
mov
test
lret
dec
mov
mov
iret
pop
jmp
sbb
sub
or
xchg
lret
insl
push
cmp
inc
ljmp
push
adc
mov
in
dec
aam
fistps
cmpl
pop
aad
mulb
dec
movsb
test
mov
inc
push
les
mov
mov
inc
sbb
insl
mov
sub
lods
ja
cwtl
sub
mov
xchg
jae
cs
xchg
loopne
das
test
loop
pop
adc
scas
stc
push
adc
xchg
addr16
cmp
xchg
xchg
imul
icebp
mov
popa
cmp
lret
add
scas
inc
repnz
mov
jmp
sarl
lods
pop
jnp
mov
ffree
hlt
sbb
fists
popa
xor
js
aaa
imul
mov
js
xor
inc
pushf
sbb
jae
lea
and
pop
loop
sahf
out
push
dec
and
add
add
in
ss
roll
push
clc
out
mov
mov
push
adc
test
pop
add
dec
ss
or
cmp
rcll
mov
mov
pusha
pop
stos
pop
incl
inc
push
push
loope
fwait
mov
testb
movsb
jb
jns
fstpt
mov
inc
rolb
inc
mov
push
imulb
xchg
sub
aad
dec
ret
jnp
test
add
stos
xchg
mov
loop
fstps
js
daa
or
roll
rcll
jmp
adc
rcrb
and
push
clc
in
mov
cmp
adc
fsubrs
jg
adc
mov
mov
pushf
xlat
or
dec
xor
lret
xor
hlt
lcall
test
or
push
sub
out
dec
testb
inc
jns
cmp
jg
sbb
lea
adc
das
js
or
pop
jns
sub
testl
add
mov
cwtl
inc
fstpl
insl
cmp
add
adc
cli
xor
nop
mov
shlb
std
push
lods
fdivrl
shll
in
mov
push
shlb
mov
push
out
pop
mov
cmp
sbb
mov
inc
in
or
sahf
pop
scas
pop
repz
mov
sbb
mov
dec
ss
repz
stos
jl
xchg
add
mov
test
xor
cmpl
adc
pop
mov
test
stc
sahf
cld
ret
mov
fidivrs
push
sub
imul
data16
jae
jmp
mov
pop
fwait
test
je
mov
addb
lret
outsl
scas
fstl
outsl
pusha
movsl
adc
xchg
jge
ret
sub
inc
cs
icebp
push
stc
cmpsb
out
jp
mov
push
cmp
xchg
out
and
inc
or
mov
push
arpl
pusha
ret
out
xor
lea
call
xchg
hlt
jecxz
movsl
orb
psubw
roll
xor
test
dec
mov
lret
ret
sbb
inc
out
popa
lahf
cmp
aas
stos
es
dec
jb
cli
push
lock
pop
mov
and
xchg
mov
loope
rorb
in
xchg
pop
xchg
mov
xchg
xchg
cmp
sbb
ret
sahf
scas
packuswb
cmc
loope
or
xchg
mov
shl
xor
or
lret
push
push
mov
lahf
test
pop
xlat
xchg
cwtl
add
jg
rcrb
add
stc
aad
mov
xchg
push
mov
lahf
dec
adc
cmp
fbld
lss
xchg
scas
mulb
test
insl
imul
test
test
xor
jle
lcall
mov
push
rcr
lds
add
jae
test
es
adc
cwtl
mov
xchg
out
sub
hlt
aas
loopne
xchg
xchg
test
scas
jecxz
xlat
sbb
sub
lock
addb
dec
jne
xor
sub
js
xchg
lods
inc
testl
xchg
movsb
dec
aad
inc
pop
mov
adc
xchg
stc
add
sbb
int3
test
cmp
addl
pop
scas
pop
push
jl
out
jg
add
fisttpl
xchg
inc
xchg
inc
cli
or
sub
out
mov
sahf
idivb
cmpsb
cmp
bound
dec
or
push
out
jb
lds
lods
sub
call
sti
iret
lret
aaa
pop
mov
outsl
shl
and
ss
mov
ljmp
imulb
in
mov
jge
lcall
mov
subb
inc
sahf
fstpl
sub
sbb
fs
lods
popa
sub
cmpxchg
loopne
xchg
cmc
out
in
dec
cmpps
ljmp
adc
or
xchg
xor
dec
mov
sbb
mov
pop
fidivl
dec
pushf
jg
rolb
mov
jp
xchg
sahf
mov
mov
sub
out
sub
fwait
mov
sub
imul
cmc
in
xlat
and
pop
xchg
jmp
in
xchg
add
ret
push
xchg
or
rclb
or
icebp
cld
xchg
fadd
cld
ucomiss
loope
int3
adc
fwait
dec
data16
mov
cmpsb
push
inc
ficoml
sub
imul
and
pop
in
xor
in
test
stos
dec
inc
inc
lret
add
xchg
pop
imulb
aad
loopne
xlat
mov
mov
xchg
xchg
cltd
lods
xchg
rcl
pop
ret
es
inc
cmp
dec
dec
dec
xchg
popa
stc
fdivl
das
loope
mov
aaa
js
jno
xor
dec
dec
xor
lahf
les
sbb
dec
stc
in
sahf
push
mov
adc
ss
and
mov
cmpsl
mov
fmull
and
pushf
adc
inc
dec
jge
mov
add
mov
dec
loope
popf
hlt
jecxz
repz
xchg
pop
outsl
add
adc
xchg
in
out
cmp
out
sbb
inc
icebp
dec
cwtl
les
jno
xchg
xor
pop
sub
jle
mov
nop
adc
adc
sarl
mov
lret
xor
js
push
dec
adc
scas
xlat
cmc
das
mov
insb
push
mov
inc
stos
xor
sbb
jnp
rcrl
dec
xchg
lods
sub
loope
mov
jae
sbb
push
mov
pusha
pop
les
nop
cs
or
dec
mov
mov
pop
out
jmp
add
fdivrs
mov
or
inc
test
jo
jns
daa
addr16
mov
mov
and
xor
lret
pop
insb
add
jg
mov
loope
xchg
mov
std
mov
out
lahf
sbb
icebp
pop
or
jne
test
xchg
sbb
jmp
xchg
or
and
mov
mov
push
add
stos
out
sbb
sbb
sub
call
nop
and
inc
mov
xchg
ret
add
mov
cmp
push
inc
je
test
int3
shl
dec
pop
jno
and
mov
ss
mov
std
cs
and
movsl
dec
lea
ljmp
jmp
sub
ret
xchg
pop
insb
fisubs
jne
xchg
imul
repz
sbb
sbb
add
repnz
rclb
cmp
lods
mov
cwtl
lahf
mov
jp
push
push
andw
and
jno
sbb
shr
push
add
ss
mov
xchg
dec
aas
xchg
fidivs
test
xchg
push
les
jg
int3
lea
xchg
inc
cli
aas
xchg
pop
cmpl
sbb
xchg
lret
cmp
test
pushf
mov
cmp
ja
loop
repnz
push
iret
bnd
test
push
and
xchg
xchg
sti
jne
sti
ffreep
sbb
xor
sarl
aaa
cmp
pop
mov
adc
outsb
daa
mov
fnsave
xor
cmpsl
ja
ljmp
and
xor
xor
inc
xor
push
into
outsb
cmpsb
adc
test
aad
xor
sub
int3
adc
pop
cltd
outsl
aad
std
fcomps
es
je
ret
std
insb
dec
movsb
jge
aad
gs
ja
adc
stc
jae
ret
fwait
dec
jbe
stos
sahf
cmc
mov
rcrb
ja
lock
mov
pop
push
in
aaa
jmp
lds
cmp
mov
fwait
gs
mov
fs
sbb
push
push
iret
mov
push
enter
jl
cmpsb
hlt
fs
mov
test
add
arpl
fnsave
inc
lret
call
lahf
and
shlb
mov
mov
jo
push
mov
inc
icebp
cmp
xor
scas
jnp
pop
pop
test
pop
lods
sbb
nop
gs
movsl
push
add
icebp
insb
jge
cmp
mov
jbe
and
lret
cmp
mov
lcall
xchg
out
mov
cltd
and
and
push
orb
cmp
int
push
pop
lahf
sbb
xor
xchg
fcmovu
ss
test
cld
rcll
movsl
mov
cmovg
cmp
push
and
mov
xchg
loop
or
cmc
aaa
in
fs
sub
jg
sub
cmp
lahf
push
mov
pop
repz
sbb
sub
fwait
adc
addl
arpl
cmp
in
mov
push
jg
loopne
stc
ja
or
enter
stos
js
pop
cmpsb
cmpsb
cmc
movb
ret
sub
push
out
pop
inc
sub
adc
fsts
push
enter
sbb
mov
lods
mov
pop
sbb
xchg
fwait
jge
mov
rolb
jp
xchg
scas
adc
sub
and
xor
xor
repnz
in
sub
cmp
ficoml
sub
lahf
sbb
lea
fsts
push
ret
cmc
stc
mov
cmc
aam
mov
sbb
aas
jbe
in
pop
jns
lcall
test
fs
adc
mov
sar
adc
ljmp
test
mov
mov
push
mov
and
sub
mov
test
cli
or
ljmp
mov
mov
sahf
mov
std
fidivs
pop
add
fstps
push
jne
sub
fcomps
inc
ss
mov
rcll
dec
jmp
cmpsl
sub
lret
aad
sti
lods
add
rclb
xchg
rclb
arpl
stos
mov
mov
fmull
dec
dec
imul
lods
cli
jnp
pop
mov
dec
jle
cwtl
or
xchg
shlb
adc
ret
mov
shrl
xchg
loop
pushf
mov
test
lods
pop
loope
cmpsb
mov
push
or
or
dec
sbb
cli
lcall
dec
aam
add
decl
xor
jmp
stos
int
pop
pop
fwait
pop
jae
xor
push
pop
cmpb
mov
loop
sahf
ret
fsubl
imul
neg
out
pusha
js
push
xor
mov
enter
popf
scas
dec
cmc
adc
call
or
sub
jle
dec
out
aam
mov
push
cmp
pop
pandn
rcll
out
mov
cmpsb
decl
and
sub
int3
loop
jns
and
sbb
push
pop
fbld
shlb
or
test
aas
pop
xchg
push
test
dec
add
or
xor
fcoml
mov
push
iret
test
xchg
insb
push
ret
jb
icebp
out
jecxz
mov
in
adc
sbb
pop
inc
movsb
cmp
dec
xchg
inc
inc
cmp
cmpsb
sbb
dec
stos
mov
add
movsl
outsl
repz
rcrl
sbb
nop
dec
dec
mov
popa
divb
aas
out
push
test
iret
or
and
dec
movsb
shrl
insl
xor
jp
popa
push
jbe
cmp
push
inc
pop
cmpl
push
clc
jecxz
sbb
inc
popa
test
mov
data16
adc
das
mov
out
dec
in
mov
adc
lock
pop
push
imul
and
int3
dec
xlat
mov
dec
ljmp
xchg
insl
pop
je
into
pop
leave
xchg
inc
inc
mul
push
cmp
sbb
shll
mov
sbb
lret
lods
xchg
dec
dec
cmpsb
fwait
push
sub
stos
mov
loop
lock
emms
arpl
push
lods
mov
cmp
outsl
sub
dec
out
add
lea
fwait
add
jmp
add
mov
pop
push
clc
rcl
in
inc
jg
inc
into
cwtl
icebp
fs
pushf
dec
test
dec
popf
cmc
inc
mov
syscall
dec
xor
fwait
lods
leave
lret
sub
mov
mov
popa
push
test
adc
add
mov
negb
aas
adc
sub
inc
pop
lcall
popf
icebp
mov
xchg
mov
je
xchg
add
sahf
jmp
in
pop
or
stos
fdiv
pop
std
pop
jo
into
mov
shlb
push
call
xchg
xlat
add
aaa
stos
inc
mov
mov
rcl
add
mov
test
stc
fsub
jnp
sahf
addr16
lret
pop
mov
int
aam
push
js
jg
mov
inc
jl
xor
inc
addl
mov
pop
sarb
xchg
jecxz
call
in
dec
or
out
jb
mov
mov
lods
in
scas
fstpl
out
push
pop
add
pop
call
pop
call
ljmp
scas
cmp
add
pop
mov
data16
mov
popa
pop
pop
inc
icebp
bound
push
pusha
loope
xchg
xor
loop
dec
push
push
cmp
push
or
and
mov
xor
in
in
inc
int3
js
into
sub
mov
sbb
ljmp
xor
push
lahf
sbb
and
mov
lds
stos
or
sbb
clc
cmp
sbb
jecxz
xlat
mov
fbstp
pop
xor
fistpll
mov
push
fdiv
pusha
into
add
loope
movb
test
sbb
outsl
int
inc
cmp
push
add
es
cmp
adc
cmp
jg
push
stos
xor
sbb
add
fisubrs
cli
push
pop
and
or
cmp
inc
imul
adc
std
jbe
push
xchg
add
int3
fstpt
outsb
pop
aas
sub
mov
sbb
mov
fbstp
jecxz
jle
ljmp
xchg
sub
mov
ss
shll
pusha
jle
mov
cwtl
in
xchg
dec
xor
mov
sub
imul
sub
pushf
aaa
mov
cs
mov
pop
icebp
pop
inc
insb
adc
sub
frstor
sub
mov
pop
insl
inc
mov
shll
pop
popf
push
popf
int3
out
aad
xor
cmp
push
call
sahf
sbb
dec
dec
adc
test
push
cmp
dec
out
mov
xchg
sub
in
push
jle
cmc
push
jle
mov
inc
fsubrs
outsb
test
mov
xor
rep
jns
lea
decb
fcomi
and
outsl
rcrl
mov
stos
icebp
imul
cmp
in
sarl
inc
mov
jno
xchg
mov
lods
push
xor
mov
jmp
pushf
sbb
jle
xchg
add
or
mov
cmp
push
mov
insl
adc
xlat
sbb
xchg
aam
in
and
repz
mov
in
dec
sarb
stos
xchg
pusha
mov
int
push
dec
mov
lahf
adc
sub
ljmp
push
int
call
rcrl
call
cmp
insl
int
sub
sub
jne
movsl
les
std
push
adc
jge
push
mov
dec
sub
sbb
test
fmul
cmpl
and
aad
cs
inc
jg
ljmp
adc
popa
int
adc
push
rcll
xor
jmp
insb
push
das
dec
mov
fsubs
jae
xor
mov
ficomps
push
dec
repnz
sub
adc
xchg
dec
pop
cwtl
mov
jnp
aam
mov
aaa
push
das
or
enter
jge
xor
mov
jne
mov
push
jo
jg
movsl
loopne
xchg
xchg
ret
mov
rol
cmp
lcall
or
push
sbb
dec
bound
js
out
les
xor
sarl
cli
mul
mov
fmul
mov
enter
insb
in
or
inc
loope
les
pop
mov
xor
and
jl
cmp
push
xor
mov
sti
hlt
inc
fmuls
xor
add
mov
std
inc
imul
or
inc
adc
push
pop
popa
testl
incb
nop
hlt
data16
xor
cwtl
cmp
out
dec
dec
gs
rcr
movsl
cmpsb
in
mov
mov
or
pop
xchg
push
and
sarb
and
into
pop
sbb
xchg
fildll
ret
or
shrl
lret
mov
jge
loope
mov
dec
xor
or
das
scas
jl
in
jo
add
in
push
xchg
ficoms
loopne
jns
movsb
pop
adc
push
fucomip
ror
mov
out
sub
and
pusha
pop
sub
inc
fnstcw
mov
arpl
fucomi
imul
cmpsl
inc
cmp
and
and
sbb
in
push
adc
mov
mov
pushf
lcall
aas
test
inc
sub
xor
or
stc
daa
test
mov
gs
imul
pop
out
addr16
mov
push
jo
scas
add
mov
cs
das
outsb
rorb
xchg
mov
jne
xchg
dec
cmp
lahf
js
lcall
dec
xor
in
or
cltd
stos
adc
out
test
xchg
std
sbb
sub
jl
add
xchg
jp
mov
pop
xlat
cmp
xor
and
xor
or
inc
mov
xor
mov
aaa
cwtl
out
call
xchg
sbb
lds
daa
pop
mov
mov
cmc
xor
scas
test
aaa
jge
fwait
add
push
imul
popf
jp
daa
pop
mov
into
push
cmp
dec
sarl
nop
jo
inc
repz
cmp
out
lods
pop
mov
inc
lods
int3
repz
push
stc
xlat
cwtl
mov
into
in
fcmovnbe
in
iret
int
mov
jge
xor
cmpsl
in
fstp
outsl
mov
sub
mov
jb
cmpsb
xor
mov
push
iret
rcrb
lcall
loope
les
push
sbb
mov
push
loopne,pn
jb
jl
jecxz
sahf
stc
or
mov
ret
push
jp
insl
inc
xchg
andl
aad
and
push
mov
pop
push
dec
andb
inc
add
mov
leave
aad
ljmp
mov
mov
fdivrl
stos
scas
adc
imul
jno
mov
test
push
cmp
lret
aaa
jecxz
xor
xor
fimull
jg
mov
test
mov
push
xchg
lods
inc
scas
xor
mov
call
or
add
divl
add
cmp
in
or
ret
movsb
dec
jge
xor
jae
xor
ror
pop
data16
push
enter
test
sub
mov
aaa
push
in
jle
ljmp
stc
shll
mov
hlt
pop
ljmp
int
jge
out
mov
mov
icebp
mov
mov
adc
test
push
mov
xchg
mov
push
fsubr
push
sbb
hlt
popa
jne
cmpb
lods
push
xor
popa
xor
inc
bound
xor
loopne
and
lock
andl
ss
pop
cmp
shll
jae
mov
push
sbb
push
jnp
mov
loope
out
cmp
add
xchg
or
xor
imul
fimull
pop
aad
out
add
xchg
jp
test
sbb
dec
test
push
mov
ds
je,pt
lods
xor
mov
add
out
jo
lea
pop
inc
loopne
out
stos
pop
repnz
sbb
sub
cmpsl
out
push
or
fs
les
shl
cmp
or
or
mov
int3
jns
jp
adc
adc
cmpsb
shr
pop
enter
ja
push
loop
repnz
addl
dec
fimull
push
pop
dec
push
daa
jae
push
sub
pop
cld
or
cmp
push
ja
cli
sbb
fcompl
cmp
sub
push
sub
xor
mov
add
xchg
std
shr
or
inc
bound
jmp
leave
ret
leave
lock
dec
mov
adc
inc
repz
lods
inc
mov
pop
and
in
test
push
ja
mov
stc
pop
dec
adc
pusha
and
sub
das
xor
pushf
out
dec
outsl
outsl
xchg
push
adc
xchg
jns
arpl
fimull
and
aaa
ja
jp
adc
paddusw
sbb
std
lret
inc
mov
xchg
imul
mov
gs
repnz
or
imul
out
pop
outsl
pop
sti
push
scas
loopne
fidivrs
cmp
js
in
out
mov
dec
orb
mov
jle
lret
pop
in
adc
call
ret
mov
sbb
cwtl
xlat
bound
sub
cmpsl
add
jno
sbb
xorb
sbb
cmpl
cmp
aas
sarl
cmp
flds
or
and
cmp
mov
sbb
jl
ljmp
cmpsb
pop
test
push
and
test
xor
jg
stos
jnp
imul
lea
push
fisubrl
lods
fwait
cmpb
adc
inc
cwtl
sub
neg
mov
jne
dec
lahf
mov
pop
mov
cmp
shrb
mov
repnz
or
aas
pop
popa
pop
add
push
push
pop
fs
stc
pop
lcall
es
add
test
loope
pop
and
xor
push
icebp
inc
push
and
lock
daa
into
push
fmuls
and
xchg
sti
dec
and
shr
lahf
lods
aas
mov
pop
or
jb
jnp
popa
cli
jmp
xchg
in
aaa
sub
xchg
int3
mov
mov
dec
cmp
out
pusha
mov
loope
mov
ss
test
or
push
sbbb
pop
jae
lcall
push
in
int3
push
call
int
push
lods
incb
andl
xchg
nop
vpmovsxwd
mov
inc
mov
cmp
or
sbb
aam
andb
jne
dec
stc
pop
mov
mov
add
xor
add
sub
jmp
loopne
jae
fnstcw
jmp
mov
adc
push
stc
ss
insl
mov
inc
mov
cmp
daa
cmp
push
sti
push
xchg
xor
das
and
lock
adc
mov
lahf
mov
aam
cs
ja
jmp
call
mov
dec
pop
fnstsw
adc
sarl
push
pop
into
mov
adc
icebp
ds
sub
xor
lods
std
mov
pop
mov
xchg
xor
addl
fistps
mov
inc
addr16
ljmp
jns
out
adc
mov
push
hlt
pusha
pop
add
jmp
fs
lds
pop
pushf
jg
mov
stos
mov
jno
movsl
and
adc
cmp
inc
xchg
and
mov
movsl
mov
add
lock
lahf
in
in
into
inc
mov
addb
call
test
xor
adc
mov
fnstcw
or
and
gs
rcrb
leave
negb
mov
enter
sti
mov
enter
out
fsubrp
ret
aam
inc
jb
cmp
push
cmp
sub
dec
outsb
bound
push
inc
mov
mov
pop
sbb
aam
push
das
les
push
rolb
loope
mov
mov
xchg
std
sub
mov
imul
flds
jl
movsb
aaa
add
mov
lea
sbb
xor
int3
push
jg
and
xchg
jecxz
push
insl
lret
fwait
jl
add
push
cwtl
push
sbb
xor
or
jecxz
cmc
push
repz
sbb
jno
pushf
pop
xchg
ficoms
sbb
fstpl
mov
jb
cmpsl
cs
add
cmp
cs
add
fwait
hlt
push
and
ficoms
or
mov
test
and
sbb
and
mov
cmpsb
adc
dec
testl
xor
xchg
or
hlt
pop
adc
mov
test
lds
imul
mov
mov
fldenv
xor
dec
sbb
adc
jo
les
lcall
je
xor
sbb
insb
scas
mov
xchg
push
loope
or
std
pop
fidivrl
movsb
xchg
insl
lcall
dec
imul
scas
loopne
in
loopne
movsl
test
call
adc
pop
mov
cmp
and
int3
inc
andl
lods
decb
pushf
vcvtdq2ps
jns
or
int
mov
and
lahf
cmp
lea
jo
fdivs
out
leave
pusha
andl
pand
leave
mov
mov
cmp
jp
jl
mov
fs
jp
mov
dec
rclb
adc
arpl
or
pop
adc
xchg
push
sbb
orl
mov
sub
outsl
sub
mov
pop
orl
dec
cmpsl
ret
mov
sub
imul
push
fs
mov
lds
mov
or
mov
fiaddl
dec
xchg
lds
add
das
aas
jo
sub
xchg
into
sub
addb
call
cmp
aas
dec
fnstsw
adc
mov
testl
add
dec
fsub
push
dec
lret
idivb
jnp
xchg
xchg
es
ficoml
cli
imul
mov
enter
inc
ret
gs
inc
cmpl
out
xor
out
inc
mov
stos
sub
loopne
scas
jmp
test
addr16
or
lret
addr16
rol
and
scas
testb
adc
movsl
pop
stos
cmp
mov
out
pop
movsb
mov
inc
adc
adc
int
fdivs
sub
pop
clc
mov
mov
ja
cltd
arpl
sti
popf
mov
push
xchg
xor
stos
mov
sub
xor
ss
xor
push
mov
xchg
xchg
sbb
xchg
or
sub
outsl
xchg
pop
dec
jl
inc
in
mov
mov
push
pop
xchg
push
rolb
sub
cltd
mov
sbb
js
stos
or
pop
pusha
xorb
inc
test
push
ss
push
arpl
push
cli
and
sub
push
pushf
arpl
xor
dec
jne
jae
pop
in
mov
dec
loopew
mov
sbb
lds
aas
lret
ret
pop
jl
mov
filds
std
ret
cltd
mov
stos
or
fwait
dec
mov
and
mov
jmp
sbb
sbb
inc
xchg
adc
inc
cmp
pop
add
adc
push
adc
cltd
adcb
fptan
mov
ficomps
jle
dec
daa
add
mov
push
push
mov
mov
jle
push
imul
cmc
addl
cmp
lods
pushf
shll
cs
test
movsl
rcrl
stos
lea
mov
test
push
lds
push
rorb
jbe
jb
jo
mov
std
pop
shr
mov
fidivrs
mov
jno
lret
mov
mov
xor
stos
jns
inc
cld
jne
push
loopne
scas
fmull
test
push
jecxz
es
js
dec
ds
mov
push
pop
loopne
mov
mov
dec
push
std
cmpl
out
push
mov
push
in
pop
cmp
das
xor
pop
nop
and
jnp
jo
stc
insb
sbb
inc
pop
aaa
mov
adc
xor
rclb
cmp
sarl
call
jne
pop
fstpl
insl
mov
movsl
nop/reserved
adc
dec
mov
lock
inc
into
bnd
and
lea
into
std
data16
in
push
push
mov
fdivr
stc
or
clc
aas
inc
jae
xchg
add
jo
stos
fstpl
inc
loopne
mov
adc
mov
inc
or
adc
dec
jns
test
mov
pop
gs
mov
jle
ret
mov
mov
cmp
dec
fwait
adc
scas
dec
inc
movl
inc
std
jo
jl
movsb
fisubrl
into
adc
addb
cli
jns
inc
repnz
mov
adc
xor
push
aam
lret
sub
imul
mov
lcall
push
addr16
mov
push
mov
jle
push
xchg
jmp
idivb
test
mov
fiaddl
inc
cmp
jle
aam
jmp
xchg
loope
dec
adc
loope
and
jno
adc
dec
jae
adc
loop
mov
and
pop
in
xor
lahf
cli
hlt
xchg
mov
fnsave
add
test
pop
orb
punpcklbw
pop
add
es
divb
jmp
jae
lods
test
rsqrtps
or
enter
cmp
or
out
mov
mov
jmp
and
lods
mov
mov
mov
jge
ss
mov
outsb
sub
mov
das
push
jb
sarl
xchg
mov
pop
push
sbb
mov
adc
push
clc
cmp
add
mov
mov
cmpsl
push
lods
jle
dec
adc
xor
stos
pop
push
adc
jg
sbb
pusha
dec
pushf
jbe
shrl
cmpsl
fcoml
daa
mov
mov
xor
lcall
sbb
addb
out
ss
in
lock
dec
sbb
cs
xchg
xchg
loopne
shlb
push
popa
pop
pushf
add
test
and
es
nop
loope
bound
adc
cli
roll
cmp
inc
stc
into
movsb
call
fbstp
pop
loope
inc
push
jnp
sub
outsb
stc
rcrl
lcall
shlb
dec
add
scas
dec
stos
add
pop
pushf
rol
add
adc
xor
inc
sub
subl
repz
xchg
sti
xchg
test
in
sbb
push
push
hlt
and
jbe
lds
es
mov
and
inc
enter
lret
inc
jns
add
arpl
add
jg
fwait
add
imul
test
mov
pop
pop
mov
inc
xlat
insb
mov
xchg
sub
adc
inc
in
test
push
pop
nop
loop
adc
sti
jle
es
shll
or
loop
popa
cmp
test
dec
dec
movsb
shlb
mov
xor
pop
dec
pop
adc
sub
test
hlt
sarb
cmpsl
xor
out
mov
jl
scas
stos
divb
rcr
int3
scas
pushf
popa
xchg
bound
jp
aad
or
lahf
and
jnp
sub
inc
cli
sbb
mov
xchg
add
jl
adc
or
loope
es
mov
lods
lahf
cmpsb
jl
sub
lds
inc
adc
test
fadds
leave
xchg
orl
mov
aam
xor
cmp
scas
sbb
call
or
xchg
bound
xor
std
sub
inc
pusha
mov
push
outsl
pop
into
jge
ljmp
pop
popf
sbb
sbb
movsb
cmp
outsb
ret
or
sub
aaa
dec
je
push
cmpsl
and
out
nop
mov
hlt
mov
lods
insb
in
jae
lahf
sub
out
cmc
jnp
int
xor
mov
xchg
dec
jge
ljmp
leave
jecxz
stos
cld
add
fprem
cmp
and
imul
push
addr16
cli
inc
push
adc
fcoml
jbe
push
test
pop
dec
inc
xor
mov
sbb
ljmp
cmp
ja
mov
xor
loope
js
mov
mov
jl
shl
je
cmp
sub
icebp
and
pop
pop
cmp
popa
dec
pushw
loopne
lods
pop
insb
frstor
cmpsl
push
out
jbe
movsl
inc
sarb
scas
repnz
push
mov
dec
iret
inc
cli
lods
dec
stc
adc
mov
mov
test
jne
or
mov
popa
xor
cmpsl
divb
ret
adc
test
pop
test
int
add
rcll
mov
sub
sbb
lcall
js
std
or
mov
in
dec
in
mov
or
in
data16
lahf
lcall
lods
inc
fwait
insb
adcb
mov
pop
cltd
dec
test
inc
enter
mov
push
sub
push
dec
je
dec
sti
jnp
xchg
push
mov
pop
mov
xchg
movsb
cmpsl
lcall
cmc
cmpsl
scas
jo
sbb
inc
popf
xor
mov
pop
add
mov
lret
outsl
cmp
jle
frstpm(287
mov
aad
mov
cltd
insl
out
cmpb
jno
mov
mov
mov
sub
cmpsb
dec
jno
mov
adc
shrl
cmc
pushl
leave
nop
dec
pusha
mov
adc
sub
cmp
cmpsl
inc
cs
and
insl
xchg
sar
push
orl
xchg
cs
cld
lahf
jne
icebp
lock
imul
dec
adc
jge
imul
lcall
mov
lods
xchg
add
jbe
mov
cmp
roll
mul
cmp
scas
ss
sub
ds
je
pusha
jle
shrl
fcoml
inc
pop
or
mov
stos
ret
adc
nop
and
stos
loope
bound
xlat
or
cmpsb
enter
adc
roll
aam
test
pop
mov
hlt
sub
xchg
ds
cmp
jmp
pushf
ret
mov
sub
lods
mov
fimull
mov
out
dec
push
or
xor
repz
mov
jl
adc
mov
push
inc
xchg
push
jo
lods
mov
stos
mov
jne
pop
les
sahf
jmp
push
aad
jae
out
jo
stos
push
or
imull
dec
rol
mov
sete
dec
test
in
dec
mov
sbbb
mov
int
outsl
in
push
mov
sbb
add
ljmp
and
lock
idivb
mov
sbb
data16
adc
je
push
inc
adc
push
dec
insl
ds
sbb
xchg
sub
out
push
pop
in
fidivrs
mov
lar
sub
cmp
sahf
sub
dec
js
cmc
pop
mov
out
mov
int3
mov
push
jnp
iret
mov
mov
test
mov
nop
cmpsb
lret
xor
outsb
add
add
incb
and
arpl
jmp
rolb
scas
and
mov
cld
xchg
or
adc
or
jg
sbb
and
stos
xor
jecxz
pop
outsl
mov
mov
movsb
lret
adc
jbe
mov
imul
xchg
pop
cld
mov
cmpsb
xor
or
popf
mov
mov
mov
mov
jb
cmp
dec
enter
add
enter
insb
out
outsl
mov
cmp
pop
jmp
push
outsb
or
mov
jmp
jns
cmpsb
pop
jne
jle
mov
jo
lret
jle
shrb
adc
scas
pop
pop
ljmp
int
pop
outsb
cmp
xchg
jge
frstor
pushf
inc
jno
mov
xchg
mov
je
cwtl
push
mov
xor
cmp
addr16
cwtl
push
stc
xchg
sbb
imul
aad
addr16
adc
jmp
scas
out
ret
std
xchg
inc
sbb
inc
test
adc
dec
sbbl
and
out
popl
fcom
push
out
sbb
sbbb
and
inc
dec
cmp
mov
mov
inc
rcrl
xor
rolb
push
cmc
repnz
or
mov
xor
loopne
out
jo
sbb
add
sub
xchg
nop
mov
rolb
inc
dec
sub
pop
aas
ja
outsb
lods
pop
sbb
mov
stc
mov
or
aad
mov
lret
inc
xor
dec
hlt
jl
out
jne
cmpsb
xor
cmp
and
imul
adc
test
sub
ret
adc
aam
call
or
cs
sub
hlt
mov
fwait
pop
fwait
in
jae
fstpl
pop
cmp
and
xor
ret
sub
cli
push
lret
xchg
push
stos
sahf
adc
stc
inc
loopne
ss
xchg
and
clc
das
fcoml
mov
adc
sbb
jmp
push
cwtl
stos
mov
gs
jne
sbb
in
sbb
sti
mov
fistpll
in
mov
xchg
les
sub
sbb
sub
lret
icebp
das
ja
jae
xor
add
pusha
add
inc
cmp
xchg
add
or
movsb
call
and
jg
decl
add
sbb
ljmp
inc
inc
das
fcomip
inc
test
sub
jle
sbb
jp
icebp
les
inc
outsb
hlt
loopne
inc
ja
nop
lds
outsl
aas
mov
push
mov
aas
cmp
xor
or
das
dec
outsb
and
jmp
stos
daa
jae
pop
xor
mov
imul
js
mov
dec
push
sahf
mov
pop
negb
imul
and
pop
pop
cmpsb
and
and
jle
jnp
popa
test
lds
ljmp
cmc
cmp
mov
jb
fmuls
andl
cmp
push
pop
leave
notb
loop
clc
sub
and
movsb
adcl
outsl
add
mov
outsb
xchg
outsb
xchg
add
mov
aaa
mov
mov
mov
addr16
adc
adc
shlb
outsl
mov
pop
inc
pop
subl
cmp
sbb
xor
sbb
insl
mov
dec
in
imul
dec
jae
dec
sti
pushf
scas
imul
add
add
sbb
xchg
pop
arpl
rorb
cmp
push
xchg
mov
movsb
cmp
bound
add
dec
in
test
mov
xchg
mov
fnsave
adc
inc
aam
je
adc
js
fistpll
cmp
jae
push
aas
lock
push
sbb
mov
roll
xor
and
inc
ss
mov
mov
call
cli
movb
cmp
jo
pop
jle
mov
stos
add
in
push
test
mov
xchg
icebp
mov
in
jo
push
jns
insb
xor
in
pop
test
mov
add
pop
stos
push
jbe
outsb
dec
aam
stc
cmp
out
testl
pop
test
aam
outsb
ds
jo
mov
xchg
cmp
data16
repz
ljmp
in
or
push
xchg
pop
mov
fnstsw
stc
lret
nop
into
dec
mov
inc
push
aaa
jmp
cltd
lods
test
mov
jge
pop
ja
fsts
adcb
loop
xchg
lea
sbb
xor
mov
stos
xlat
inc
mov
mov
xor
adc
xlat
fs
test
inc
cmp
stos
icebp
inc
rolb
lcall
test
pop
int3
inc
pushf
add
data16
scas
scas
clc
add
cmp
add
lea
aad
je
push
stos
aas
sub
pop
fs
inc
jmp
xchg
fwait
add
push
jo
insl
push
inc
inc
pop
or
in
push
ds
imul
cmp
gs
aaa
mov
adc
dec
test
jns
enter
fwait
sti
lcall
mov
mov
lahf
pop
cmp
fimuls
add
xchg
mov
push
mov
imul
lds
addr16
xor
dec
cmp
data16
in
xchg
sub
movsl
mov
dec
dec
sbb
xchg
stc
mov
les
mov
mov
arpl
xor
xacquire
movsl
test
cmp
add
push
cmp
adc
lods
push
sti
mov
xor
and
out
pop
repnz
push
jmp
push
mov
cmpsb
loopne
and
xchg
rcrl
pop
loopne
imul
inc
out
cmpsl
loope
push
cmpsl
sub
flds
aas
jge
or
jns
pusha
jno
notb
jecxz
add
lea
hlt
push
cmp
or
jecxz
xor
rorl
lea
cmp
sub
push
mov
dec
in
jns
dec
cmp
sub
lcall
aad
out
bound
loop
xor
mov
fisttpl
data16
dec
add
mov
or
push
lods
in
xlat
and
sahf
call
sbb
xchg
pop
arpl
mov
in
in
pushf
cmp
dec
xchg
iret
cmp
leave
jne
pusha
cmpsl
and
out
mov
mov
mov
and
or
loopne
bound
jne
adc
jae
test
mov
mov
xor
or
and
mulb
or
xlat
lods
add
repz
add
mov
sbb
je
xchg
xor
loopne
sub
inc
adc
lcall
mov
sbb
stos
pop
jmp
sub
movsb
push
mov
xchg
push
into
nop
lods
add
js
and
xchg
stc
and
jns
sbb
cmpsl
jne
pop
ds
xor
mov
scas
data16
jo
test
cmc
in
sub
sbb
fwait
jo
hlt
pop
outsl
sbb
es
stos
in
divb
sbb
pushf
out
adc
adc
ret
jno
cmp
and
jae
rorl
flds
adc
xchg
dec
in
dec
out
pop
add
pop
cltd
pusha
xchg
repnz
mov
or
push
xlat
call
imul
adc
ljmp
or
cmp
or
or
rcll
lds
fcomps
popa
sub
ror
and
mov
decb
in
mov
leave
push
xchg
inc
fidivrl
cmp
jmp
test
outsl
cmpl
mov
mov
or
fwait
push
outsb
jmp
movsl
aam
jmp
sub
add
icebp
xchg
mov
test
pop
daa
jecxz
jmp
mov
inc
cmc
mov
js
addr16
push
pop
add
xor
ja
fs
jg
lahf
mov
and
pop
and
mov
xlat
lds
cmpsb
int3
ja
movsl
mov
arpl
push
sub
and
add
mov
adc
jp
push
jge
sub
fisubl
bound
mov
mov
int3
sbb
adc
mov
adc
ret
mov
ds
sub
mov
js
adc
pop
gs
sbb
icebp
push
or
adcl
mov
pop
xchg
in
jg
lds
pushf
sbb
mov
mov
add
mov
dec
mov
add
xlat
leave
jae
shlb
sub
enter
dec
mov
out
mov
adc
push
pop
lods
mov
fwait
dec
mov
push
pop
xchg
ja
push
mov
mov
push
ss
sbb
or
mov
mov
cmpsl
xor
cmp
inc
lea
mov
mov
jns
fwait
and
pop
xchg
sbb
stos
mov
mov
pusha
insb
test
jo
cmpsl
int3
arpl
stc
mov
adc
xchg
idiv
lcall
pushf
cmp
pop
pop
cmpsl
sub
cmpsl
push
stc
aam
test
addr16
outsl
rorl
adc
imul
jnp
clc
jle
jg
es
das
xchg
push
cmpsl
xor
out
bnd
xchg
mov
push
std
dec
js
jae
in
mov
rcrb
out
aaa
loope
pop
inc
stos
mov
sbb
or
and
ret
cmp
push
sbbl
sbb
xchg
dec
dec
push
jae
jno
in
add
jno
clc
mov
sbb
int3
cmp
and
xchg
mov
push
adc
dec
xchg
nop
cmp
rcll
mov
mov
add
call
and
xor
dec
bound
je
cmp
daa
int
fdiv
mov
dec
fidivl
clc
stc
push
lahf
mov
icebp
mov
bnd
ret
hlt
lds
shrb
add
lcall
add
inc
dec
adc
jb
dec
xor
sub
mov
icebp
lea
push
fcoml
xchg
sbb
jge
push
call
mov
stc
xchg
ret
jge
imul
into
or
out
adc
ds
adcl
cltd
cmp
xor
push
repnz
call
inc
adc
mov
repnz
adc
sub
sub
fmull
das
pop
sahf
aam
es
clc
pminsw
repz
inc
je
es
inc
fisubrs
push
xchg
push
mov
out
cmp
aam
ret
adc
je
addl
roll
jae
pusha
or
push
or
fldcw
add
cmp
les
xchg
pop
pop
pusha
scas
scas
stos
dec
add
jne
or
push
sbbl
icebp
fimull
cmpsb
popf
lcall
sbb
scas
dec
and
lock
pop
mov
into
fstp
mov
in
rorl
pushf
fisubrl
loop
test
dec
loop
mov
and
pop
add
mov
aam
pop
sbb
add
notl
in
roll
push
dec
cmp
imul
test
loop
pop
jae
out
outsl
lds
std
subl
fcmovnu
sub
cli
movsl
out
comiss
or
es
notb
pop
mov
test
and
insb
and
fcmove
adc
nop
push
cmp
cmpsb
repnz
mov
xlat
dec
sbb
shrb
cltd
sbb
and
cmp
adc
rolb
cmpsl
in
pop
loopne
out
inc
fs
add
adc
push
nop
daa
out
js
adc
rclb
gs
je
cmp
lock
out
or
push
fldpi
jne
push
add
out
lahf
jg
insb
pop
test
imul
jae
fadds
rcrl
sbb
shlb
dec
jecxz
loope
adc
jbe
push
js
sub
xor
out
imul
jo,pn
jb
mov
insb
stos
cmpsb
out
lods
test
push
lret
outsb
sub
inc
sub
pop
mov
adc
stos
or
jg
inc
and
bound
pop
orl
mov
das
ds
into
xlat
push
pop
js
mov
test
rorb
push
sub
movq
imul
ds
repz
out
xchg
cmp
jg
push
add
mul
repnz
inc
fwait
repnz
bound
push
in
gs
inc
loope
xchg
cli
je
pusha
cmp
sbb
loopne
push
mov
dec
and
aad
sub
nop
pop
jl
inc
xor
pop
jae
push
lods
stos
fistps
dec
xchg
addl
or
ret
std
outsl
xchg
test
jne
ret
fwait
sub
out
mov
adc
andl
mov
sbb
call
hlt
or
xchg
mov
pop
cli
fwait
mov
pop
les
aaa
in
cmp
adc
rorl
add
sub
xchg
mov
movsb
xchg
lret
mov
mov
js
addr16
and
push
aas
dec
lds
outsl
ds
cli
int3
int
repz
adc
testb
gs
xor
stos
cmpsl
aaa
sahf
jnp
jo
mov
cmpsl
adcl
sub
mov
ljmp
sub
pusha
jg
lea
movsl
test
mov
imul
fbld
lock
hlt
sbb
and
xor
cmp
jge
pop
push
inc
sub
mov
mov
std
divl
push
lret
sbb
pop
pusha
or
xchg
lods
dec
mov
imul
lret
dec
xchg
aad
pop
inc
push
loopne
movsl
pushfw
mov
lret
adc
mov
sub
sub
lods
inc
stos
lods
jns
fwait
push
mov
add
stos
fucomip
mov
icebp
dec
push
insl
ret
cmp
negl
in
push
ljmp
dec
mov
mov
mov
lds
fimuls
repz
mov
push
pusha
out
push
xchg
cmp
dec
pop
mov
fcoml
insb
movsl
push
xor
pop
inc
inc
clc
int3
outsl
lcall
in
and
shlb
stos
push
add
dec
loope
repnz
pop
das
jg
fxch
fwait
jo
loopne
dec
les
cmp
mov
cs
scas
bound
mov
daa
repz
jne
in
sti
push
popa
xor
je
jl
incl
push
mov
adc
popf
aas
scas
dec
push
imul
imul
out
dec
add
cmp
bound
inc
lock
inc
aad
fstl
pop
push
nop
xlat
adcl
sbb
sub
xlat
icebp
or
xor
scas
sub
jb
rclb
je
pop
mov
cmp
dec
jl
pop
aad
mov
loopne
pop
daa
add
arpl
psubsb
mov
ficoms
in
or
push
scas
jp
xor
sbb
in
mov
sbb
mov
loop
inc
andb
mov
pop
xchg
in
cmpsl
inc
lods
mov
in
adc
add
ljmp
jl
pop
ja
cmpsb
sub
sbb
int3
xor
and
std
mov
inc
mov
sbb
mov
adc
cmpsb
fnstsw
inc
push
lods
sbb
xchg
xor
add
or
push
sti
sbb
xor
dec
in
and
iret
lods
and
jle
inc
pop
mov
and
in
pushf
lods
push
mov
lods
fwait
mov
cltd
sbb
loopne
inc
negl
dec
dec
mov
jns
insl
es
ret
int3
ret
movsb
subb
test
xchg
and
mov
hlt
vandps
mov
cltd
popf
adcb
sbb
mov
inc
push
sbb
mov
cmp
lods
mov
mov
mov
mov
test
test
mov
clc
ljmp
iret
dec
jle
and
js
cmp
lds
out
sbb
pop
and
ret
fbld
shl
and
das
inc
aam
fwait
popa
jns
jl
jmp
cmp
or
mov
clc
outsl
data16
add
jno
pop
mov
mov
incb
pop
imul
mov
or
xlat
es
ja
pop
jbe
cli
pop
inc
pop
or
push
xor
or
icebp
ss
daa
lods
aas
fcmovnb
mov
xchg
mov
jecxz
inc
pop
xor
sbb
xchg
mov
scas
jmp
xor
mov
mov
jle
sub
lcall
sahf
lahf
leave
pop
fists
sahf
dec
sbb
xor
loopne
mov
push
mov
mov
cmpsb
xchg
sub
sbb
push
cltd
cmp
sbb
test
cltd
loop
dec
dec
pusha
stc
sub
jle
stos
dec
or
xchg
dec
ffree
mov
scas
or
push
jo
jmp
in
ret
ja
dec
test
je
xchg
shll
lret
sub
out
lods
inc
push
xchg
call
mov
xchg
mov
mov
dec
lahf
int
stos
dec
pop
inc
mov
or
push
lock
xchg
adc
das
in
dec
inc
icebp
data16
adc
mov
xor
lcall
xchg
cld
xor
ja
xchg
clc
imul
enter
push
mov
push
lar
inc
mov
daa
pop
push
insb
repz
pop
cwtl
or
loope
lds
out
lret
xchg
xchg
cmp
adc
fstpl
fnstcw
or
fbld
mov
sub
outsl
pop
aaa
mov
out
shl
stos
or
mov
dec
divb
jmp
push
jle
divl
jge
divb
stc
outsb
cli
inc
notb
loopne
sbb
jns
fsubs
push
push
subl
xchg
pushf
xor
pop
add
jns
je
in
daa
in
cmp
cmp
jmp
aad
xchg
adc
and
xlat
stc
jp
mov
dec
cmovle
loopne
sub
mov
addl
push
inc
mov
ljmp
mov
out
pop
mov
mov
pop
or
pop
imul
add
and
jecxz
cld
and
mov
outsl
outsb
jne
dec
dec
fadds
fldcw
cwtl
sbb
sti
sahf
ss
mov
pop
clc
cmp
not
xlat
lea
loopne
cwtl
mov
das
jns
mov
sahf
lret
insb
push
subb
sbb
pop
mov
dec
out
sahf
ss
clc
dec
xor
std
lret
fld
cltd
sub
out
lods
outsl
or
ss
fimull
pop
repz
xor
pop
je
xor
mov
fdivrl
mov
jle
outsb
mov
jbe
xor
jmp
inc
cli
mov
inc
outsb
pop
sub
inc
pop
push
push
mov
mov
nop
ss
movsb
xchg
mov
push
inc
pop
xchg
sbb
xchg
xchg
mov
mov
cmp
xchg
adc
and
mov
out
ljmp
mov
outsb
js
mov
inc
or
pop
cs
xchg
sbbl
inc
xchg
fistl
sbb
ss
fists
stos
inc
daa
hlt
jne
cltd
adcl
popf
adc
insb
aaa
test
addr16
mov
jmp
lock
repnz
adc
addb
add
adc
cwtl
or
cmp
repz
iret
pop
pop
jns
pop
repz
mov
xor
fwait
push
xor
cmp
sbbb
vmread
xor
jne
push
jae
in
addr16
xorb
sbb
push
lods
xchg
test
lock
sub
mov
roll
pushl
sbb
or
mov
or
leave
push
adc
int
sub
int3
adc
test
inc
testl
jp
js
inc
jg
clc
addr16
lea
dec
aaa
push
fimuls
aas
push
inc
push
push
cmp
sti
mov
decl
fs
fisttpll
cmpsl
jno
popa
es
cli
out
mov
fsubrs
out
out
cmp
adcb
mov
popl
adc
mov
dec
into
out
aad
pop
mov
fs
xor
lahf
sub
repnz
cmpb
xor
dec
add
fstps
mov
dec
hlt
test
and
js
jno
sbb
mov
fisubl
stc
sbb
and
mov
aas
inc
dec
push
sbb
leave
ficoms
aaa
add
cli
and
or
mov
cmpsb
xchg
mov
cld
data16
adc
test
adc
and
sbbb
mov
lods
push
pop
push
inc
ljmp
xchg
test
shl
inc
lret
xor
test
pop
jbe
shrl
jo
jg
pop
int3
jnp
cmp
rcll
insl
jno
iret
or
jnp
cli
or
sbb
popl
jmp
or
ljmp
cmp
test
xor
pop
mov
sub
jbe
jmp
mov
scas
repnz
or
test
xchg
loop
and
jecxz
add
scas
sub
add
add
movsl
sub
cmpsl
addl
add
jl
add
scas
inc
add
add
xor
cmp
fwait
jno
inc
fldenv
push
imul
loope
adc
arpl
mov
popa
mov
dec
mov
aam
outsb
mov
xchg
test
stc
jecxz
sbb
jg
adc
pop
push
jns
lcall
in
mov
sbb
and
sbb
jl
sub
mov
mov
jmp
repnz
mov
aam
pushf
mov
xchg
pop
inc
fs
movsb
clc
sub
and
inc
lds
xchg
and
jno
ss
aad
fidivl
daa
and
mov
and
inc
push
pop
jae
repnz
clc
push
arpl
mov
inc
mov
lds
add
lahf
mov
cs
in
je
xchg
adc
dec
cmp
pop
out
lahf
or
fcmovne
xchg
or
stc
pop
or
add
xchg
sbb
int
repnz
or
divl
mov
gs
sbb
fdivrs
sbb
pop
iret
js
add
pop
mov
lods
aam
fimull
or
imul
xor
in
xchg
dec
xchg
adc
mov
lods
adc
pop
xor
outsl
sarl
dec
dec
fcomi
sub
mov
ret
add
sub
xchg
jno
fnstsw
orl
cmpsl
inc
lcall
sub
cmp
aaa
pop
sub
ret
and
test
inc
call
push
or
sub
jle
xor
sti
xor
sub
inc
lret
pop
cmpsb
adc
jne
or
push
xlat
xor
dec
out
mov
ljmp
in
enter
and
add
pop
stc
or
sarl
rorl
lods
decl
bound
jnp
sbb
sbb
jbe
or
in
mov
mov
testl
sbb
test
dec
int
adc
jle
cwtl
lea
xor
stos
mov
dec
aas
jp
imul
cmpsb
jno
aad
and
cmp
or
xchg
xor
inc
pop
pop
subl
mov
movsb
jmp
jo
icebp
out
add
cwtl
cltd
and
fnstcw
repz
jb
xchg
aad
mov
xor
aad
pop
stos
iret
nop
pop
cmpsb
dec
arpl
sahf
jge
sbb
cmp
or
in
mov
mov
enter
rol
jns
fildl
das
lea
addr16
or
add
xlat
sub
cmc
inc
pusha
and
inc
pop
stos
mov
and
es
mov
and
mov
cmpsb
cld
fs
mov
movl
movsl
repz
test
icebp
mov
std
cmpsl
in
pop
push
les
imul
mov
push
xchg
inc
lds
ja
mov
gs
test
int3
pop
pop
push
shll
icebp
mov
adc
loope
pop
ja
sbb
xchg
aam
loop
jo
popf
push
stos
mov
push
dec
inc
lods
mov
mov
lds
lea
dec
lea
ljmp
es
pop
fsubp
xchg
push
fbstp
ret
xchg
cltd
shlb
std
lea
cmpsl
mov
in
adc
cmp
mov
cmp
pop
xor
pop
in
push
out
jbe
mov
xor
dec
repz
sub
xchg
cmpsb
gs
rcrl
sub
inc
jl
call
sub
or
cmp
adc
fildl
lcall
adc
mov
pusha
and
mov
mov
aas
pop
jo
pop
imul
imul
xchg
pop
cmpsl
dec
pop
mov
dec
lock
movsb
sub
sub
fsubs
pop
es
jno
add
jne
xchg
or
cmpsl
push
mov
jo
mov
mov
xor
jbe
add
out
inc
push
pusha
pushf
fldenv
dec
andb
jnp
cli
outsb
jae
xor
jl
insb
inc
mov
cmp
mov
outsb
jmp
popf
pop
jbe
notl
out
jo
out
sbb
jno
add
inc
enter
dec
xchg
ss
aas
fistl
jbe
sbb
inc
int
sti
daa
mov
aaa
inc
xchg
fucomip
dec
mov
xchg
adc
lods
sbb
inc
or
test
stos
outsl
decb
sbb
push
popa
js
jecxz
pusha
sar
push
push
jb
add
and
jle
in
lods
aam
sub
repz
jno
fmuls
pushf
xor
mov
jg
mov
push
pop
sbb
add
mov
in
popf
xchg
imul
insb
xchg
int3
lahf
insl
or
push
ss
cmpsb
cltd
mov
sub
xor
out
mov
and
sbb
sub
ss
pop
dec
jle
cmp
pop
mov
lret
out
mov
jmp
cmp
inc
rorl
cmp
scas
or
test
mov
adc
jmp
je
and
pop
popf
xchg
jbe
insb
mov
mov
call
pop
cmp
add
and
or
js
arpl
sub
lret
outsb
mov
nop
sahf
sahf
mov
movsb
xchg
inc
sub
bnd
push
jle
mov
fcompl
scas
xor
dec
jg
jns
mov
cmp
leave
adc
push
adc
or
cmc
popf
fildl
adc
dec
lcall
cmc
ss
xchg
or
lcall
push
add
mov
hlt
cwtl
insl
sahf
mov
inc
fnstsw
shrl
fwait
inc
and
sbb
fsubs
jno
imul
stc
mov
std
xchg
jecxz
pop
push
ret
adc
and
xchg
test
outsl
data16
push
fisubs
popa
iret
mov
cwtl
cmpl
jnp
in
int3
enter
adc
pop
out
inc
xchg
sti
fcom
cmp
call
aad
lock
jle
dec
mov
cmp
sub
xor
xor
pop
dec
std
push
movsl
push
dec
lcall
repnz
jecxz
xchg
mov
pop
or
fsubrl
std
bound
repnz
lods
pop
cmp
repz
xchg
les
les
insl
fisttpl
out
aaa
neg
lret
sub
cmpl
test
pushf
mov
icebp
leave
loope
mov
cmp
fisttps
pop
push
push
mov
scas
adc
iret
xchg
xchg
or
xor
test
and
sub
lods
cmp
cmpsb
and
rolb
or
popa
ljmp
and
xchg
dec
std
push
and
rclb
lahf
movsl
add
cmp
mov
jge
or
push
sbb
or
sub
push
xchg
call
sti
lahf
movsb
enter
ret
sahf
cmp
test
add
jecxz
pop
aaa
inc
aas
sub
jle
pop
push
cmpsl
or
jge
in
or
enter
sbb
dec
insb
inc
in
jno
push
cli
fcmovb
inc
add
loopne
sbb
cmp
mov
cmc
dec
scas
and
pop
push
call
adc
jge
mov
les
dec
xchg
ljmp
mov
xor
popa
pop
mov
data16
xor
cli
adcb
adc
out
call
xchg
arpl
out
mov
push
cmp
xor
andl
pop
or
pop
inc
scas
aad
fs
mov
cmpb
mov
int
cmpsb
sbb
xchg
and
enter
jl
aas
lods
sub
nop
sbbb
lahf
stos
outsb
andb
jns
lcall
ficoml
push
push
test
mov
scas
mov
jle
and
fidivs
xor
inc
fists
inc
dec
push
mov
push
cmp
push
lods
dec
mov
cmp
sahf
lcall
dec
mov
test
loopne
shl
test
and
mov
es
pop
fsubs
mov
sbb
stc
addb
sbb
jge
jle
stos
shrl
cltd
and
insl
fisubs
mov
or
mov
jnp
mov
xlat
in
mov
les
sub
mov
dec
sbb
cmp
push
leave
fs
add
test
in
out
stos
test
dec
cmp
sahf
fnstenv
nop
xchg
pop
ret
in
sub
mov
sbb
push
jg
subb
sub
jge
es
cmp
pop
mov
loopne
jbe
loope
in
inc
xor
pusha
addr16
dec
cmpb
sbb
enter
daa
jl
dec
mov
inc
jge
hlt
pop
pop
cmp
into
mov
xchg
stos
das
pushf
and
xchg
imull
sbb
xchg
sub
repz
ja
scas
lahf
sbb
pop
xor
xchg
fcmovb
sub
stos
cltd
pop
fs
subl
es
or
test
or
outsb
adc
pop
jmp
cmp
int3
call
and
mov
jo
jmp
ficompl
sbbb
cmp
fstp
adc
push
push
mov
cmp
sub
adc
push
aam
arpl
mov
mov
jmp
jo
mov
sub
push
lods
adc
xor
in
nop
xor
sbb
cltd
popa
cmp
unpckhps
ds
sub
mov
loope
insb
scas
mov
aad
mov
xchg
or
mov
mov
xor
inc
xor
fidivl
je
mov
mov
inc
cltd
mov
in
data16
sti
js
into
mov
ret
mov
mov
push
addb
sbb
jmp
rclb
movsb
push
scas
cld
jae
popa
movsb
push
jne
add
cwtl
push
nop
test
daa
pop
push
pop
cld
aad
mov
movsl
test
lds
sub
dec
dec
in
jnp
aas
xchg
clc
mov
jo
push
icebp
ss
cmp
lea
sub
push
ja
mov
int3
loope
xor
push
sahf
das
push
and
into
mov
rcrb
jnp
subl
std
xchg
lahf
fistl
pop
es
fcoms
fcomps
jg
cmp
out
scas
repnz
push
add
sarb
cwtl
dec
out
mov
jp
cli
ja
inc
lcall
aad
and
push
fsub
push
mov
dec
push
bnd
int3
adc
adc
jns
xor
push
lcall
jb
mov
jp
aas
push
pop
jmp
cmp
mov
fsubrl
int3
les
mov
pusha
not
cmp
inc
pop
aaa
jp
or
cmp
mov
or
xchg
loopne
ljmp
and
and
lea
rcr
adc
sub
mov
mov
push
in
cwtl
ds
mov
mov
and
mov
jns
xchg
aad
movsl
mov
pushf
pop
mov
sub
mov
cli
hlt
out
fucomip
add
mov
pop
inc
jo
pusha
push
add
and
mov
icebp
faddl
shrl
mov
jge
xchg
add
sahf
mov
dec
cwtl
adc
orb
push
outsl
pop
xchg
in
mov
inc
jge
out
insb
inc
icebp
inc
ja
lret
cmp
pop
aad
or
lret
mov
loop
cli
jnp
sbb
fdivs
xchg
lahf
aas
orl
jb
and
jne
add
es
add
outsl
popf
xchg
or
push
call
int
push
pop
sub
imul
decb
insl
lods
mov
jo
rclb
inc
jmp
and
cmp
shl
inc
vprotq
test
xchg
mov
jge
out
jg
or
vcvtps2pd
lcall
shlb
int3
cmpsl
test
rcll
sbb
or
je
push
push
push
out
lcall
fldenv
imul
clc
mov
inc
arpl
loop
bnd
iret
pop
or
in
arpl
lret
pop
movsb
or
xchg
or
or
push
test
out
rcrl
pop
push
inc
pop
scas
sub
pop
pop
out
pop
inc
mov
jae
int3
inc
xor
jbe
iret
fs
or
add
jg
dec
out
pop
adc
cmpsb
call
cmp
add
adc
sub
dec
add
sldt
xchg
adc
inc
adc
mov
in
pushf
add
hlt
fadd
mov
adc
out
sub
cmp
xchg
jnp
clc
out
inc
push
jbe
loop
inc
xor
push
inc
sbb
xor
mov
imul
jo
cmpsb
jp
cmpsl
fs
xor
mov
adc
in
push
ss
test
pop
mov
les
push
jno
jae
insb
add
lret
xchg
sbb
mov
shr
cmp
and
lret
mov
add
lret
jb
lahf
ds
lods
mov
fmul
shll
mov
sbbl
jecxz
dec
dec
add
dec
lea
rcl
mov
out
mov
cld
xlat
pop
mov
dec
inc
pop
cmc
xchg
fcmovnb
add
jmp
in
aam
mov
adc
aaa
aaa
mov
dec
imulb
cmp
ret
or
outsb
outsl
dec
jecxz
adc
rorl
xchg
jle
arpl
dec
xchg
jmp
xor
lcall
push
mov
lret
das
mov
jecxz
cmp
or
enter
push
and
in
xlat
cmpsl
in
imul
mov
in
mov
sbb
or
mov
sbb
mov
ss
lret
ret
outsl
addr16
test
xchg
pusha
fidivs
and
xlat
pop
push
inc
xor
xchg
pop
dec
push
int
out
fdivr
and
sbb
xchg
sbb
leave
cli
mov
jbe
shlb
adc
loop
pop
mov
push
mov
inc
hlt
xlat
cmp
repnz
add
es
and
xor
mov
push
mov
jmp
xchg
pop
or
into
sbb
sbb
insb
divb
ljmp
jecxz
js
bound
adc
insb
push
mov
pushw
call
add
lret
test
int3
xchg
cmp
jns
xor
mov
jns
add
dec
and
pop
add
push
sbb
xor
push
in
xor
call
cltd
jb
jecxz
xor
add
jb
outsl
cmp
xchg
jbe
jecxz
ds
insb
mov
scas
jns
stc
push
pop
lcall
outsb
das
ret
mov
sub
cltd
je
pop
sub
aam
outsb
adc
push
fs
jno
into
test
mov
add
pop
cld
jle
mov
add
adc
adc
inc
adc
gs
out
sbb
or
fistl
jecxz
xlat
stos
fnstenv
dec
mov
inc
pop
adc
cmc
js
setns
mov
icebp
push
sub
idivb
adcb
in
repz
out
jns
out
test
mov
dec
lcall
arpl
dec
out
cmp
xlat
neg
into
cmp
daa
sub
mov
or
subb
lahf
ja
lock
pop
cmc
mov
repz
ljmp
rdpmc
pop
shll
push
fbstp
subl
sub
out
adc
or
add
add
adc
pop
inc
mov
inc
aam
push
cmp
mov
ficomps
stos
dec
jecxz
in
gs
mov
icebp
fnsave
lods
ret
addb
or
mov
cmp
aas
mov
or
xlat
test
stc
cld
add
fs
cmp
mov
mov
push
dec
pop
repnz
out
adc
imul
bound
cmpsb
sarb
adc
pop
dec
push
sbb
xlat
scas
icebp
push
ret
push
mov
fs
mov
sub
sarb
leave
dec
pop
ds
push
mov
pop
or
push
aaa
adc
outsl
jae
mull
sbb
jge
mov
cmp
mov
aas
jle
repnz
stos
sbb
sti
inc
inc
lods
jmp
ret
jbe
outsl
inc
or
inc
lahf
xchg
daa
lock
jg
int3
ds
ljmp
jno
ss
mov
loopne
dec
insl
and
or
mov
mov
mov
sub
popa
outsb
sub
lea
fdivs
xor
cmpsl
xor
jns
shl
ljmp
pushf
or
mov
out
test
push
xorb
xor
stc
fcmovne
cmpsl
cmp
loope
adc
pushw
jle
push
in
push
aad
repnz
add
cmp
adc
mov
fimull
fisttps
or
test
mov
movsl
or
clc
and
dec
jns
js
mov
movsb
shlb
pop
jmp
lea
lcall
jecxz
add
and
dec
mov
mov
pop
repz
mov
aaa
in
ror
dec
les
les
in
hlt
negb
or
or
mov
xor
js
sbb
pop
scas
xor
test
and
or
movsb
addl
pop
ret
loop
sbb
push
js
loopne
into
push
xor
inc
add
int
rcll
fucomip
mov
jge
or
out
hlt
mov
mov
out
test
xchg
sub
out
jmp
mov
repz
push
xlat
adc
stos
adc
icebp
xor
sub
inc
call
incb
pop
or
cmpsl
gs
or
mov
mov
dec
sbbb
mov
mov
push
mov
dec
lahf
ljmp
xor
add
sti
es
inc
push
push
sbbl
mov
jmp
cs
mov
lret
inc
or
add
les
data16
jge
popa
add
iret
ljmp
jg
add
push
lods
mov
sub
lds
inc
negl
cmp
ljmp
mov
pop
or
fists
mov
add
ret
call
icebp
pop
adc
sti
lea
dec
fucomip
dec
addr16
add
mov
scas
jb
xor
push
or
pop
and
adc
iret
push
stos
and
repnz
outsl
inc
or
addb
fimull
lock
and
and
jae,pn
rorb
gs
pop
inc
data16
mov
pop
movsb
popa
mov
adc
jmp
xlat
add
push
fmul
jnp
movsb
aas
jae
mov
lret
push
fwait
addr16
mov
xorl
mov
sbb
adc
fcomip
mov
cs
mov
lret
addr16
es
push
or
dec
imul
lods
pop
mov
movsb
sbb
aam
fs
out
movsb
xchg
idiv
cmpl
loopne
fisubrs
and
sysret
add
hlt
xor
in
mov
mov
xchg
cltd
pusha
loope
enter
imul
and
loopne
ret
insl
xchg
stos
es
mov
jecxz
or
sbbl
fistl
jmp
adc
mov
lahf
sub
aaa
push
addr16
movsb
mov
insb
add
les
pop
mov
clc
add
xchg
xlat
and
scas
or
fildl
fsubrp
std
push
neg
push
jno
cwtl
sbb
scas
test
rcrb
xchg
and
call
out
inc
or
scas
mov
cs
cmp
notl
out
dec
gs
cmc
xlat
in
out
fisttpll
jne
jb
inc
fs
sub
lcall
inc
cmc
mov
addr16
add
adc
inc
lods
dec
pop
xlat
push
and
add
icebp
sbbb
jb
sub
in
xchg
insb
pop
or
scas
addr16
xor
jmp
lcall
mov
xor
sbb
pop
dec
cs
lahf
cmp
dec
dec
and
inc
sbb
and
mov
push
aam
nop
mov
les
test
jle
imul
pop
push
cmp
call
mov
sub
sub
mov
jp
inc
stos
int
mov
nop
pop
enter
popa
dec
pop
mov
jl
mov
xor
inc
cmp
inc
adc
lcall
into
dec
daa
push
movsb
adc
fwait
add
lret
pop
cs
dec
push
dec
inc
and
xchg
xor
daa
pop
imul
dec
mov
or
adc
ss
insb
mov
pop
xchg
adc
mov
cmp
sub
push
lods
lcall
aas
inc
sti
ja
clc
mov
mov
mov
push
pop
inc
outsl
push
xlat
fdivr
lret
icebp
fbstp
add
popf
mov
pop
xchg
ret
xchg
cmp
and
test
in
shll
adc
push
pop
gs
sub
ret
mov
sbb
fs
sub
xchg
sbb
icebp
add
clc
ret
outsb
call
mov
lahf
ja
or
and
push
jnp
rclb
push
in
je
out
movsl
pop
mov
xchg
stos
cmpsl
jg
inc
add
lock
inc
adc
sbb
mov
jb
iret
sub
xor
mov
and
mov
push
mov
int
filds
testl
or
xlat
shll
mov
adc
fsubrs
sub
jge
sahf
cmp
pop
negl
fcom
out
sahf
cltd
mov
fs
push
movsb
cmp
je
pop
scas
add
xor
call
test
push
les
cmp
scas
testl
jmp
jnp
ficoms
fiaddl
push
mov
das
cmp
mov
bound
push
orb
nop
jo
mov
into
shlb
mov
bnd
mov
icebp
lock
mov
jae
sarb
push
inc
push
icebp
mov
push
dec
sbb
mov
push
js
pop
cmpl
lods
cmp
cmp
fbstp
loope
popa
out
lods
adc
scas
dec
inc
loop
mov
cmc
xchg
jle
stos
ds
cltd
orl
pop
xor
push
in
jecxz
fistpll
add
push
sub
jo
pop
sbb
cmpsb
mov
filds
cld
sarl
shrb
testl
add
pop
mov
push
cmpsl
cmp
ds
fsubs
out
setg
adc
cmp
dec
daa
clc
int
ret
sub
inc
push
popf
pop
movsl
aam
mov
jno
sbb
movsb
call
xor
int3
sahf
int
call
ret
fadd
ss
mov
cmp
in
stc
shlb
ds
fsts
in
enter
hlt
les
jnp
pushf
inc
or
movsl
pop
repz
sub
shl
daa
aad
mov
mov
cmpsb
ror
into
pop
or
mov
mov
neg
pop
aam
xlat
out
test
in
loop
sub
adc
fcomip
shld
mov
sbb
idivl
leave
std
addr16
push
push
push
sahf
lcall
insl
mov
int3
adc
js
hlt
sbb
mov
in
add
xchg
pop
shlb
shll
fsubr
or
inc
aaa
outsl
aaa
iret
pop
mov
mov
loop
addr16
sub
lea
out
mov
mov
cwtl
cltd
dec
js
inc
push
pop
scas
sub
rorl
xchg
in
cli
shl
sub
xchg
push
xchg
loop
pop
hlt
popf
mov
pushf
push
lea
js
scas
lock
push
negb
pop
pop
xor
add
mov
jne
loopne
sub
repz
repz
adc
mov
sub
repz
push
pop
adc
out
cltd
fisttps
fucomip
pop
in
test
add
out
xor
leave
and
sub
mov
fsubrl
ud0
mov
pop
lret
dec
inc
out
mov
aaa
push
xchg
sbb
daa
sti
push
js
xor
cmp
je,pt
movb
repz
rorl
es
mov
mov
push
lock
xchg
mov
repnz
hlt
lcall
push
push
cmp
cmc
cli
cmpsl
addr16
iret
add
scas
mov
jp
xor
aaa
les
push
loope
les
sub
pop
xchg
sbb
pop
push
out
rcrb
push
or
dec
jg
arpl
idivl
les
jecxz
sbb
push
pusha
push
mov
test
adc
dec
xchg
bound
pop
test
xchg
addl
imull
sbb
mov
inc
ror
mov
shl
sbb
mov
enter
out
sub
add
data16
out
mov
xchg
and
xchg
int
adc
dec
in
jp
inc
repz
test
and
sub
popl
movsb
mov
or
and
adc
cmpsl
inc
and
add
loope
mov
sbbb
push
mov
fimuls
or
aad
icebp
or
or
add
clc
sbb
das
and
imul
mov
push
dec
cmc
jp
sti
sti
insl
mov
sub
or
mov
push
push
dec
push
or
stos
lds
enter
xchg
sarl
push
scas
sbb
icebp
push
jl
add
inc
icebp
add
and
adcb
ret
jmp
movd
push
xchg
rclb
xchg
fidivrl
xchg
lock
mov
nop
hlt
xchg
pop
call
xchg
mull
aad
push
rcll
push
iret
mov
ja
add
call
cmp
jle
out
push
cld
das
mov
pop
mov
mov
xchg
dec
subb
sub
stos
and
jp
xor
rorb
sub
movl
sbb
pop
repz
daa
mov
sub
clc
dec
sub
scas
cld
inc
insb
xor
sub
sub
sbb
bound
andb
cmc
das
add
dec
cltd
out
dec
lods
mov
add
and
ret
aad
adc
pop
cmp
ret
andl
and
pushf
lods
push
jne
insb
imul
mov
sub
sbb
ljmp
xor
push
test
mov
mov
jnp
popa
sub
iret
jns
int
stos
xchg
or
negl
lcall
outsb
xor
das
test
xor
loope
jmp
push
fsubl
sub
mov
and
jge
cmpsb
fst
nop
fists
cld
add
insb
insl
jp
pop
repz
aad
cmpsb
aad
mov
xchg
fcomi
jl
sub
sub
push
aaa
adc
inc
jo
jae
inc
dec
daa
jbe
push
and
adc
adc
movl
into
insl
in
cmp
sub
mov
pop
inc
mov
stc
inc
jg
jl
gs
std
cmc
aad
sbb
push
adc
adcb
je
stos
aam
jbe
inc
adc
mov
sbb
test
and
push
mov
xorb
faddl
push
mov
mov
push
loop
dec
clc
xchg
cwtl
xchg
jle
call
add
dec
sbb
xchg
push
fwait
or
and
test
mov
in
push
mov
push
or
xchg
out
inc
je
dec
add
int
cmpl
rol
aas
pop
popa
addr16
ds
xchg
popf
and
and
inc
xchg
bound
pop
pusha
pop
rcll
cmp
push
and
cmpsb
insl
lods
jbe
insl
add
scas
fstps
scas
cld
mov
xchg
mov
sub
dec
movsb
in
inc
pop
cmp
enter
adcb
push
inc
jmp
and
ja
xchg
xlat
imul
and
int
fimuls
pop
sub
outsl
adc
vcvtsd2ss
cmp
cmpsl
xor
and
in
xchg
call
ret
and
xlat
cmpsb
inc
jae
lret
or
inc
loopne
push
fcompl
xlat
and
lock
pop
xor
xchg
jno
test
out
push
inc
cmp
shll
aad
mov
icebp
aaa
lods
sbb
lret
xchg
sub
adc
fisttps
jne
inc
xchg
inc
inc
add
sub
ffreep
movsb
fidivrl
out
push
and
jp
inc
iret
movsl
inc
fimull
adc
mov
stos
je
imul
sbb
or
adc
cld
push
adc
out
es
inc
pop
sti
hlt
lods
jmp
mov
adc
int
jne
adc
add
in
ds
das
xor
jae
push
fcoms
pop
xor
mov
inc
xchg
push
push
aaa
xor
dec
adc
sub
inc
loope
daa
repnz
das
pop
cmp
adc
mov
pop
xchg
sbb
nop
sbb
inc
adc
adc
ret
test
sbb
pushf
mov
ss
dec
in
push
pop
scas
xor
jae
loopne
push
adc
mov
cmc
testl
pushf
lock
aaa
jl
jb
lret
push
dec
std
scas
outsl
ljmp
mov
inc
sbb
adc
add
sbb
dec
adc
es
lods
test
cmpb
imul
jo
dec
sub
lds
dec
pop
add
push
aas
xchg
adc
filds
or
cmpsl
loope
movsl
out
push
sbb
jae
shll
enter
mov
stos
dec
out
mov
divl
add
push
iret
scas
xchg
imul
push
sub
xchg
sub
jecxz
stos
cmp
add
xchg
dec
jno
arpl
pushf
ja
stc
adc
dec
aam
test
negl
adc
inc
inc
dec
and
mov
flds
daa
rorl
sbb
xor
lods
fnstsw
pop
inc
je
std
arpl
mov
inc
lahf
adc
xchg
jo
cmp
adc
mov
sub
addr16
sbb
and
jge
cmp
adcb
sbb
add
mov
fcomp
out
shlb
sub
daa
jle
cmp
and
cmp
xchg
fistps
int3
cmp
test
mov
jne
push
test
push
mov
dec
lcall
mov
repz
and
push
insb
out
js
jmp
adc
stc
and
xor
pop
leave
push
pop
cmp
movsb
ret
pop
push
push
mov
mov
stc
xlat
pop
cmp
popa
lock
sbb
daa
and
sbb
ret
cmc
sbb
test
mov
negb
push
xor
rcll
popa
mov
xor
imul
adc
fisubrl
stos
cmpsl
std
jmp
cli
push
xchg
ds
mov
inc
xor
add
or
lahf
jg
sbb
mov
mov
ljmp
jne
mov
pop
cmp
add
pop
push
shl
or
ret
movsl
test
mov
xchg
jp
pop
dec
jmp
mov
mov
test
cltd
jge
pusha
outsl
popa
pop
test
adc
shrl
or
jb
ss
popf
arpl
aad
stc
mov
sahf
stos
and
shlb
mov
mov
lret
push
sarb
lahf
pop
mov
mov
xchg
and
dec
or
cmp
xor
push
std
mov
rcr
sbb
mov
mov
and
sti
mov
shlb
mov
jae
cli
push
aad
fisttpll
insb
mov
adc
add
sti
and
outsl
stos
fstl
push
out
add
mov
mov
test
xor
mov
fsub
arpl
je
stos
imul
imul
push
mov
ret
movsb
adc
out
pop
jp
lds
enter
dec
scas
adc
stc
scas
and
push
insl
jmp
lahf
in
lahf
int3
push
clc
mov
imul
pavgb
test
andb
inc
les
push
stos
fsubrs
fs
push
or
inc
pop
sbb
dec
push
ret
or
mov
cmpsl
movsl
test
mov
adc
lret
fwait
mov
push
push
jg
inc
dec
das
lods
je
pop
mov
aad
xor
inc
test
dec
ret
icebp
jb
pop
faddl
imul
dec
push
xchg
fmull
iret
scas
pop
xor
adc
lcall
mov
hlt
cmp
loope
pop
sub
inc
sbb
je
or
divb
iret
mov
daa
into
dec
lcall
cld
sub
lcall
fisttpl
sub
dec
test
add
xchg
dec
inc
jg
inc
mov
mov
arpl
and
out
lret
add
pop
jbe
mov
mov
addr16
and
fbld
pop
xchg
and
cmp
aad
aad
mov
dec
dec
mov
inc
sub
iret
mov
call
push
inc
xchg
mov
inc
repnz
mov
mov
addl
mov
xchg
mov
mov
aaa
or
inc
inc
lods
push
inc
and
das
fsubl
push
test
mov
leave
push
jb
adc
aas
push
enter
xor
inc
mov
or
and
call
xchg
fidivl
jb
or
xor
add
cmpb
data16
jg
mov
out
loop
js
cltd
pop
sub
mov
fisubl
arpl
sub
push
mov
mov
pushf
add
leave
add
mov
xchg
or
clc
push
jns
cmp
mov
movsb
fldenv
imul
inc
dec
pop
data16
adc
das
popa
mov
xchg
lea
aam
insb
cmp
in
mov
xorl
insb
shlb
out
or
lock
xchg
js
movsl
popf
or
dec
sbb
iret
cwtl
cmp
sub
cmp
daa
or
lret
sbb
adcl
cwtl
mov
test
cli
or
and
push
xlat
popa
sub
shrl
es
adc
pop
add
cli
pop
add
rcrl
das
into
jbe
xchg
outsb
iret
pop
dec
pop
jns
mov
repnz
dec
insb
mull
lret
xchg
and
aaa
or
pop
cld
mov
push
inc
imul
push
fwait
insb
add
test
es
mov
add
sbb
sbb
call
insb
sbb
sti
push
jno
xor
pop
xchg
cmc
xor
sbbl
out
push
or
sti
mov
movq
push
xor
lock
nop
mov
xchg
xor
leave
bound
push
imul
xor
data16
adc
inc
aad
inc
mov
add
sub
dec
test
inc
mov
ss
in
pushf
add
add
xor
pop
out
sbb
mov
and
arpl
mov
push
popa
enter
adc
xor
repnz
ficomps
push
lahf
jae
pop
iret
ret
push
dec
jo
cltd
lds
or
push
pop
loop
jecxz
bound
push
xchg
cmp
and
fsubl
es
jbe
xor
inc
ficompl
xchg
insl
test
arpl
pushf
out
inc
pushf
inc
test
test
shr
mov
xor
std
fsubl
je
fcomp
fst
cmp
ds
inc
and
sbb
jge
inc
loope
jns
dec
insb
fdivrs
sti
pop
fs
fisttpll
dec
add
into
ficoms
push
or
xchg
rcll
imul
aam
lret
jge
vcvtss2sd
jbe
sahf
iret
xlat
ror
jge
or
sahf
js
lcall
stos
mov
je
mov
inc
subl
or
sbb
jo
es
push
rcrl
into
sub
lret
and
cwtl
push
cmp
por
mov
mov
lods
testl
lock
cmpsb
jne
pop
pop
jle
les
faddp
jae
or
adc
xchg
sbbl
mov
data16
rorl
mov
xor
ret
and
or
cltd
xchg
dec
mov
cltd
cli
in
add
test
inc
mov
sti
inc
iret
pop
out
dec
or
add
bsr
cmp
call
inc
pop
mov
inc
mov
push
addb
sub
adc
sarl
neg
pop
sahf
popf
out
sbb
lret
sbb
jb
loope
addl
jnp
pop
jg
stc
sbb
sub
nop
and
mov
and
lret
addl
nop
out
push
rcll
jecxz
shl
cmp
push
xchg
iret
xor
inc
into
and
lret
repz
jne
xlat
xchg
cwtl
xchg
or
movsb
gs
out
sub
cltd
inc
jmp
pop
add
fs
test
rclb
lahf
aam
dec
jmp
pushf
fiaddl
pop
jl
mov
adc
dec
dec
int3
push
push
cmp
call
pusha
lock
pushf
les
out
jno
sub
xor
stos
mov
call
push
mov
adc
sub
aam
je
lahf
xor
sub
into
mov
push
jo
ret
std
dec
es
js
loop
or
int3
sbb
aas
add
xor
cmp
adc
popa
xchg
lods
push
adc
dec
sbb
inc
or
jae
xorl
sti
je
imul
movsb
push
mov
out
out
std
push
cmp
jae
inc
sbb
imul
and
mov
lods
sbb
in
outsb
fdivl
push
mov
das
sbb
cmp
add
in
push
stos
xor
sbb
sbb
mov
mov
xchg
xlat
aaa
xchg
shrl
stos
mov
insl
leave
dec
pop
mov
ret
mull
fidivl
sarb
jle
stc
or
jns
mov
xchg
stc
push
and
testl
and
mov
or
mov
sbb
jge
pop
xchg
outsb
fstl
sbb
imul
ljmp
mov
ds
cmp
movsb
popa
enter
leave
jbe
fsubl
lret
stc
jo
fs
rclb
fwait
popf
mov
xor
aas
jno
popf
test
loopne
cmpsl
jmp
lahf
idivb
lcall
ret
mov
dec
push
aad
and
mov
jecxz
xor
cld
cwtl
xchg
pop
movsl
adc
lcall
sub
mov
dec
punpckhwd
mov
jno
pop
mov
cmp
adc
cld
bound
jl
ds
pop
jl
xlat
or
inc
jp
fs
sti
jecxz
inc
mov
dec
or
mov
xchg
sub
lret
mov
xor
fstpt
jns
push
mov
mov
inc
clc
xlat
xchg
cltd
test
xchg
sbb
mov
je
ficoms
ret
fs
in
sub
and
or
ret
sub
pop
mov
jns,pn
lods
es
repz
movsl
ret
pop
sub
mov
mov
adc
icebp
dec
aad
sub
mov
xchg
stc
sub
xchg
push
js
or
mov
popf
mov
fidivrs
inc
lock
or
les
jmp
xor
xor
ds
frstor
sbb
mov
sub
shlb
and
sti
push
or
dec
mov
mov
jo
pop
jnp
insb
xor
add
out
dec
pop
pusha
ss
and
pop
sahf
pop
jp
and
lahf
jge
or
or
ficoml
mov
and
sti
test
pop
arpl
mov
aaa
lea
mov
lret
dec
push
jle
shll
rcrl
clc
xchg
fdivrl
and
sbb
or
adc
jmp
scas
mov
push
push
jmp
dec
inc
jb
and
stos
mov
jnp
dec
or
test
mov
push
testl
movsl
lods
imul
rorb
dec
movsb
xchg
movsl
xor
sub
arpl
jge
ret
push
cmp
jbe
movl
dec
inc
dec
lahf
out
enter
sub
pop
dec
out
cmp
ud1
testb
test
ja
or
cmp
inc
cld
adc
rclb
adc
sbb
push
push
pop
lods
pop
cmpsl
imul
icebp
das
cmp
push
xchg
outsl
xor
movsl
adc
pop
pop
xchg
mov
jb
addl
icebp
adc
cmp
dec
popa
stc
inc
ss
xor
adc
push
icebp
jns
gs
mov
cld
lods
pop
movsb
frstor
mov
iret
lret
push
icebp
or
sbb
pop
xor
int
inc
sbb
mov
cmc
pop
test
insl
or
or
xchg
rsqrtps
inc
jne
mov
sub
inc
repz
adc
pop
fldl
ljmp
or
adc
mov
cld
xchg
ljmp
mov
mov
stos
lret
push
test
pop
int3
pop
pushf
push
mov
cmc
sbb
rcr
pop
ret
lret
sahf
es
sub
out
mov
jne
leave
pop
xchg
data16
imul
or
mov
jns
movsl
or
mov
repnz
xchg
mov
or
dec
pop
fstpt
xchg
insl
cmc
inc
adc
pop
test
add
decl
jmp
imul
mov
mov
pusha
xor
or
jg
inc
repnz
fstp
sub
adc
cmp
push
or
push
mov
pop
sbb
dec
js
mov
bound
into
jmp
mov
xchg
xchg
mov
gs
sub
insb
or
push
xchg
xchg
push
testl
adc
insl
pop
push
inc
pop
adc
insl
add
ret
jns
mov
rcrl
out
stos
in
mov
in
lcall
jno
icebp
insb
pop
fucomip
pop
jp
push
or
pusha
pop
int
es
mov
negb
loopne
or
xchg
les
pop
stos
mov
mov
cli
ffreep
scas
lea
pushf
std
xchg
sub
testl
insb
mov
mov
mov
inc
jmp
mov
mov
cmpsb
mov
jno
jne
mov
push
movsb
cmpl
shlb
lahf
daa
and
out
mov
leave
movb
imul
mov
mov
push
dec
cmpsb
xchg
clc
add
dec
push
repz
adc
lods
popa
sub
push
frstor
cmp
push
gs
mov
loopne
pop
adc
and
orl
add
daa
inc
add
lods
and
xlat
push
pusha
dec
imul
inc
adc
jl
mov
inc
jmp
pop
mov
sbb
shr
lcall
jecxz
add
aam
inc
shlb
sti
std
dec
or
mov
jl
imul
lahf
testb
call
das
ret
int
jge
movsl
xor
push
stc
xchg
xchg
push
and
fidivrl
fisttpl
inc
xor
out
xor
and
shll
lods
bnd
mov
ret
adc
aaa
test
mov
outsl
lea
cltd
sbb
mov
pop
jne
iret
in
dec
mov
int
and
pop
inc
ja
xchg
int3
add
pop
insl
cmp
pop
je
mov
xchg
jl
mov
insb
sub
iret
inc
or
sub
pop
fnsave
int3
dec
pop
sbb
jge
xor
cld
leave
lods
scas
div
xor
mov
in
nop
fbstp
pushf
rclb
jl
into
mov
mov
adc
adc
les
cmpsb
hlt
pop
pushf
dec
cld
inc
stos
shrb
add
fidivrs
jns
pop
cmp
and
adc
leave
xor
mov
int3
xchg
fisttpl
and
loope
sbb
xor
ret
push
jle
mov
push
int
loopne
fisubl
nop
xchg
pop
jo
jb
fsts
jg
ss
loop
dec
cmp
lods
fisubrl
and
cmpsl
popf
cld
outsb
dec
adc
xchg
push
sarb
pop
cltd
push
mov
xchg
mov
fs
ljmp
push
xchg
mov
insl
cmp
cs
push
add
addl
hlt
and
push
bound
mov
jp
leave
xor
fdivrs
fdiv
lods
std
push
fbld
lret
push
scas
jns
hlt
xor
push
ss
sbb
stc
pop
dec
mov
rcrl
pusha
add
out
push
lcall
daa
or
mov
mov
mov
ss
jnp
ret
lcall
popf
mov
iret
mov
daa
add
pushl
sbb
cmp
in
aad
xlat
add
xchg
or
stos
add
dec
mov
sbb
mov
notb
or
add
cld
or
je
dec
movsl
jns
shlb
pop
sub
mov
pavgb
int
jecxz
test
mov
sbb
and
cs
mov
cld
push
fdivl
dec
jb
sti
test
sub
sbb
and
movsb
leave
cmp
scas
vpackssdw
sub
pop
and
xor
pop
mov
pop
into
imul
stos
call
mov
int
test
adcb
push
lret
iret
pop
in
clc
inc
inc
imul
pop
enter
jbe
stos
jb
mov
sub
xchg
jae
in
and
add
ficomps
mov
add
daa
push
xchg
mov
addr16
cltd
shrl
jg
mulb
push
xchg
insb
mov
fstps
cmp
bound
repnz
adc
ror
imul
inc
ds
push
push
mov
pop
dec
dec
fcomps
mov
mov
std
loope
cmp
jo
or
into
iret
in
aas
int3
cs
pop
lcall
repz
setge
sub
push
pop
push
gs
idiv
jle
std
mov
stos
inc
in
pop
jge
mov
je
adc
jle
fstps
push
cli
adc
fsubrp
mov
inc
add
mov
dec
std
mov
jmp
push
in
cmc
stos
pop
hlt
inc
test
xor
pop
or
pop
faddl
in
dec
sarl
mov
add
ss
ret
cli
jecxz
rclb
sub
sub
sub
mov
ss
es
mov
ret
xchg
mov
les
jecxz
cld
insl
mov
int
cwtl
mov
iret
adc
dec
pop
movsl
xor
popa
or
scas
jns
jmp
push
and
test
gs
in
stos
shrl
mov
cli
mov
or
clc
out
or
mov
sti
aam
mov
lods
testl
cmpsb
xor
movb
cmp
addb
jno
sub
sbb
fbstp
loop
cld
or
and
xchg
sbb
ds
loopne
push
adc
fsts
ljmp
jb
push
popa
popa
cmpl
mov
arpl
add
sbb
sarl
xor
lret
pop
mov
mov
cltd
sbb
test
mov
jne
dec
aam
rcll
jnp
mov
cmp
push
pop
push
cmp
pushf
push
adc
cs
shlb
hlt
sbb
xchg
jmp
jl
insl
cwtl
fs
repnz
mov
xchg
insb
xchg
xabort
xchg
jae
cltd
push
mov
xchg
lret
xchg
sbb
inc
stos
ret
js
mov
ret
insb
adc
cmp
leave
mov
mov
fiadds
jl
push
lods
pop
test
cld
lret
orb
xor
iret
jo
dec
lret
test
lods
nop
dec
jge
movsb
arpl
ret
and
push
scas
sahf
xchg
or
jb
hlt
xchg
pop
insl
in
pusha
mov
andb
jp
in
add
lods
add
mov
out
incl
sbb
aas
lock
pushf
hlt
fcmovnu
xchg
ffree
mov
cs
jbe
cmp
outsb
pop
aam
popa
jb
enter
and
popa
cmc
call
xor
ret
xchg
fdivs
dec
lods
pop
xor
mov
insl
les
mov
mov
loopne
in
loopne
movsb
out
mov
call
ja
fs
push
jl
js
or
push
popa
xlat
sti
xor
push
dec
or
xor
in
outsl
ds
inc
pusha
pop
push
rcrb
pop
arpl
pop
call
imul
inc
enter
adc
sub
test
jmp
mov
fcompl
adc
jl,pt
das
out
jne
insb
sbb
lods
mov
fs
jle
add
roll
in
adc
lcall
or
rcr
popf
test
mov
adcb
lret
xchg
pop
repz
and
jmp
stos
call
int
movsb
xchg
lods
pop
mov
mov
fildll
insb
out
cs
mov
xchg
rcrb
mov
loope
cmp
adc
int3
pop
into
mov
ror
cmp
in
out
lret
icebp
mov
scas
or
add
adc
or
lret
orl
mov
lahf
sbb
jne
and
stc
test
pop
mov
out
inc
jo
cld
rorb
into
out
into
ja
into
add
pop
sub
cmpl
jns
cmp
out
imul
mov
inc
cmpsl
inc
movl
aas
in
adc
mov
imul
in
sub
mov
test
xor
pop
sti
sub
mov
shrb
insl
mov
mov
popf
xchg
out
fiadds
subb
int
add
insb
and
mov
pop
inc
fucomp
and
pushf
shlb
push
adc
mov
xchg
jl
or
cld
aaa
std
in
cmp
xchg
mov
sub
dec
fwait
movsb
mov
inc
fistps
mov
fcmove
iret
orl
mov
sub
xchg
mov
cmpsl
mov
aaa
mov
cmp
pop
xor
lods
mov
jmp
and
sub
mov
lahf
loope
mov
cltd
adc
jge
shrl
or
mov
inc
ffreep
syscall
jbe
aaa
dec
arpl
xor
sub
mov
test
cwtl
jo
insl
int3
lret
andl
in
out
sub
iret
xchg
repnz
push
mov
jmp
nop
shl
mov
loop
lea
lods
sbb
mov
icebp
decb
dec
aaa
pop
xchg
leave
loope
xlat
pusha
addr16
adc
data16
pop
jg
add
cmpsl
daa
in
lcall
arpl
cld
gs
fisubl
sbb
bound
inc
loopne
test
sub
jbe
adc
push
pop
jbe
cmpsl
out
ficomps
or
push
push
inc
sahf
ficomps
das
push
inc
pop
out
push
xor
and
lret
outsl
add
into
mov
and
mov
lea
xor
jmp
mov
mov
movb
xchg
lcall
stos
call
and
and
pop
xchg
jb
xor
dec
repz
and
or
lcall
jecxz
ljmp
hlt
dec
mov
daa
cmp
rcr
shr
std
jl
or
jle
cwtl
pop
cmp
add
adc
sti
stc
push
loop
cmp
aas
filds
enter
xchg
daa
lcall
xchg
popa
imul
fisubs
mov
mov
push
jle
lods
sub
fistpll
ret
mov
xor
inc
adc
cmp
pop
loopne
pop
sbb
add
push
pop
mov
in
and
dec
jno
mov
lahf
jbe
adc
sarb
mov
or
lahf
lea
test
sub
and
mov
dec
lods
lret
ds
shll
fimuls
nop
ds
rclb
or
rcll
loope
les
lods
movsb
cld
test
std
lret
sbb
outsb
mov
push
sub
std
pop
out
adc
arpl
into
ret
fidivs
xchg
lcall
aas
pop
inc
xchg
cli
mov
cli
fildl
shr
sar
xchg
cmpsb
push
cs
mov
inc
aad
loopne
sbb
movsl
cmp
inc
sbb
xor
fwait
lahf
or
icebp
xor
mov
int
jns
ss
lret
cmp
or
aas
das
xor
and
call
jmp
std
lds
mov
movsl
adc
loopne
loope
call
and
stos
jb
inc
sub
jns
loopne
jne
pop
in
adc
insb
lahf
out
xor
mov
sar
fsubrl
xor
adc
sub
popf
mov
std
add
inc
jns
push
sbb
fisubl
stos
add
pop
mov
sub
pop
les
sbb
xchg
xor
pop
bound
xchg
jnp
lea
dec
sbb
sub
repnz
in
inc
sbb
xor
jg
jl
pop
xorl
or
addr16
mov
test
popa
inc
dec
decb
xor
inc
and
lret
xor
in
out
jg
sbb
inc
aaa
aad
xor
push
mov
ds
imul
and
cli
pop
adc
stos
cwtl
loop
adc
gs
or
cli
nop
sub
push
mov
mov
test
aas
mov
stos
adc
xchg
push
xlat
movl
sbb
loop
sub
xor
inc
push
arpl
dec
je
ret
xor
test
pop
xor
jae
dec
fnstsw
add
in
inc
push
fldt
jecxz
inc
mov
adc
inc
popf
test
dec
mov
aaa
pop
jno
scas
mov
imul
repnz
or
mov
iret
mov
push
adc
ret
nop
ja
test
mov
rcr
sbb
xor
fwait
ds
in
adc
insb
je
popf
and
rcrb
in
xchg
enter
bnd
add
mov
les
xchg
mov
adc
sub
dec
popl
rcll
cmpl
pop
cld
stos
push
or
pop
or
xlat
adc
add
add
das
jb
stc
arpl
rorl
aas
mov
fs
xchg
inc
mov
xchg
mov
cmp
pop
lea
dec
inc
sub
loope
int
lods
test
fs
or
js
fucomip
aad
inc
mov
shlb
sbb
es
fisubl
xchg
jns
and
arpl
iret
jae
scas
lcall
movsb
enter
pop
lahf
aam
jp
daa
xlat
cli
push
sahf
sbb
icebp
sub
mov
cmpsb
push
loopne
cmc
adc
loopne
hlt
popl
add
jns
jge
pop
jl
out
sbb
inc
icebp
mov
ret
pop
dec
ret
lock
sub
jne
pop
jge
aad
inc
mov
pop
pop
decl
loope
jmpw
test
imul
pop
cld
cwtl
ret
ror
xchg
mov
mov
add
push
test
in
or
out
xor
in
cmp
inc
mov
shlb
cmp
enter
aas
adc
lret
add
xor
sub
xchg
cmp
inc
push
imul
push
inc
fmul
lcall
out
push
push
aas
mov
cs
add
sub
iret
fldcw
push
lods
dec
xchg
jb
out
sbb
loopne
dec
andb
shrb
enter
iret
pop
jb
jno
jp
mov
xor
aad
addr16
xor
ficompl
xchg
leave
es
addr16
and
or
clc
dec
cmc
jae
repz
mov
inc
xchg
push
mov
mov
adc
pop
adc
xor
in
aas
xor
pop
push
or
imul
out
test
mov
xchg
sti
add
cld
call
sbb
mov
and
mov
clc
mov
mov
cmpsl
push
pop
xchg
inc
pop
orb
push
xor
call
xchg
mov
or
cmp
movsl
or
test
lcallw
xadd
cwtl
outsb
push
xchg
aad
out
jno
mov
jp
xchg
sbb
rcll
cmp
sbb
leave
repz
decl
or
add
hlt
add
pusha
pop
push
mov
add
iret
cli
add
int3
jno
out
cmp
dec
prefetch
add
xchg
fs
leave
push
lods
sbb
iret
or
sub
loop
enter
xchg
mov
dec
sub
push
jle
push
ret
cmp
stc
sub
das
scas
lods
loopne
stos
iret
sub
adc
ss
enter
fidivl
xor
sub
sbb
sbb
pop
dec
mov
mov
nop
pop
xor
out
mov
xchg
mov
xchg
pop
or
jg
xor
or
xor
fisttpll
cli
decl
fsts
push
mov
js
into
mov
inc
repz
dec
xchg
pop
lret
int
lret
aam
aas
fists
mov
cwtl
and
outsl
pushl
andb
aam
push
mov
push
mov
jg
xchg
or
aad
hlt
push
out
pushf
data16
inc
mov
inc
data16
pop
mov
imul
mov
int3
add
mov
btr
xor
xchg
dec
and
or
adc
das
mov
inc
cmc
cmp
out
or
sub
pop
adc
test
push
imul
jns
sti
hlt
lock
mov
xchg
pop
shlb
xchg
pushf
lock
insb
pop
in
imul
push
inc
fs
pop
mov
in
push
lds
cli
dec
xchg
cmp
bound
loopne
mov
ja
add
fcmovne
mov
movb
std
mov
adc
adc
fisubs
out
push
xor
mov
add
pusha
mov
xorl
mov
cmp
sbb
inc
pop
or
push
stos
pushf
cmpsl
icebp
loope
cltd
dec
repnz
ret
jnp
or
fcoms
sub
dec
stos
daa
insb
xchg
adc
pop
pop
data16
cmp
mov
stc
out
pushf
ret
mov
adc
sti
pop
push
aad
mov
mov
sbb
lods
mov
add
lds
dec
filds
xchg
xlat
popa
xchg
int
and
mov
pop
cltd
jle
movsl
mov
sbb
rorb
int
je
or
lret
fcoml
mov
enter
popa
mov
push
sub
cwtl
pop
mov
test
inc
pop
bound
pusha
push
xor
scas
loope
aad
cld
test
mov
adc
fidivl
inc
mov
ljmp
xchg
mov
and
into
xchg
mov
push
jno
int
jp
push
imul
jp
adc
push
mov
push
mov
arpl
nop
push
and
mov
jmp
mov
clc
in
add
test
sbbb
pop
and
aaa
cwtl
pusha
mov
mov
in
lahf
es
lea
jle
push
xchg
push
push
into
fdiv
dec
js
cwtl
adc
jno
cmp
ja
iret
and
nop
mov
push
lea
test
daa
xor
dec
mov
loope
in
xor
in
outsl
repz
mov
movsl
or
pop
or
cs
out
push
out
movhps
addr16
pop
out
lea
dec
enter
aaa
mov
sub
cwtl
jl
in
xchg
lock
dec
pop
add
push
filds
mov
jecxz
inc
lahf
inc
in
fimuls
jp
sub
fcomps
inc
test
daa
pop
inc
mov
jo
and
xor
sub
jbe
inc
dec
imul
push
lcall
pop
scas
loope
movsb
cmc
mov
imul
push
or
xor
push
jbe
pop
repnz
aad
and
fdivrp
into
movsb
xor
insl
fldcw
test
mov
std
xchg
dec
lret
xorb
mov
loope
pushf
imul
xlat
push
add
cmpl
jmp
fildll
mov
movsb
ss
mov
mov
inc
pusha
in
rorb
fnstenv
aaa
call
fistl
inc
mov
test
nop
sbb
arpl
int
adcl
pop
mov
dec
mov
jp
call
inc
xor
hlt
lret
jl
xor
sub
ret
stos
xchg
mov
push
ds
lret
int
jmp
adc
scas
add
arpl
cmp
fs
push
mov
mov
pop
sub
and
pop
mov
jne
fcoms
daa
jg
ret
adcl
xor
sub
mov
sub
mov
inc
sub
pop
inc
lahf
adc
pop
xlat
push
push
repz
lret
mov
sub
aaa
mov
lock
add
mov
rcrb
lahf
add
jmp
mov
mov
pop
lahf
xchg
jp
push
mov
bound
out
test
pop
cmp
mov
dec
shlb
sbb
sbb
and
mov
add
dec
popl
pop
pop
rcrl
pop
loop
out
lea
or
pop
rcll
jl
pop
xorb
int3
ss
jmp
xor
pop
or
jb
pop
sub
xchg
inc
sub
pop
pop
leave
and
push
and
jns
pop
mov
xor
inc
loopne
push
call
lds
ficoms
test
sbb
pop
scas
mov
stos
lahf
loop
pop
je
rol
adc
sub
cli
flds
cld
ret
mov
mov
decl
out
adc
xor
push
dec
dec
pop
and
stc
jns
test
ja
sbbb
adc
movsb
cmpsl
aaa
adc
adc
mov
jmp
loope
adc
pop
push
outsl
cmp
lret
mov
idiv
cld
test
jecxz
cmp
and
mov
call
pop
add
cmp
cli
xchg
mov
shrl
jno
shr
in
push
clts
cli
ret
and
lea
jecxz
outsb
call
mov
inc
mov
imul
push
icebp
push
mov
out
enter
mov
das
or
andb
mov
lds
adc
inc
loopne
pushl
jl
xchg
shl
ja
clc
xchg
dec
int3
dec
movsb
or
cs
adc
nop
mov
pop
dec
mov
or
inc
rorb
fistpl
add
push
adc
jp
insl
cmpl
lea
scas
jnp
mov
repnz
mov
addl
shrb
outsb
das
sub
mov
repnz
xchg
test
xchg
insb
test
xor
cltd
adc
iret
push
mov
in
mov
enter
or
xlat
movsb
fdivs
adc
mov
adc
sbb
pushf
jmp
cld
xchg
fsubrl
pop
mov
dec
pop
mov
iret
jae
imulb
or
imul
sub
inc
xchg
xchg
lods
pop
pop
mov
aas
rcrl
inc
in
push
cmp
mov
sbbb
arpl
js
jne
inc
xchg
sbb
push
push
movsl
add
mov
mov
stc
mov
ja
sub
mov
inc
cmp
out
je
mov
repz
xlat
fmuls
lock
mov
lret
sahf
aam
push
scas
pusha
push
push
and
mov
negl
xchg
and
dec
ret
fdiv
cmp
jne
and
xor
das
lock
or
stc
mov
mov
shll
xor
and
dec
sahf
gs
hlt
jne
sbb
mov
ffreep
push
aam
out
into
dec
jle
jmp
fwait
dec
repz
inc
adc
xchg
mov
mov
sub
mov
add
jbe
jle
jae
dec
in
cmp
pop
movsb
adc
roll
cmp
xchg
in
imul
add
out
mov
movsb
ljmp
sbb
mov
les
push
les
stos
adc
lods
out
imul
inc
lret
out
mov
nop
je
push
bound
or
insl
ljmp
js
mov
add
mov
push
push
mov
rorl
lret
pop
mov
pusha
imul
je
push
clc
je
jnp
aaa
in
insl
scas
push
push
adc
test
mov
cmpb
test
mov
mov
lods
repz
jb
jne
fcmovbe
and
repz
jb,pn
sbb
gs
and
in
jge
adc
loope
mov
mov
neg
sbb
cli
inc
sbb
fnstenv
cltd
cs
inc
ret
cmpsl
test
inc
push
fwait
sbb
xchg
jns
jb
scas
in
cs
xor
cmpsb
lock
mov
inc
fcomp
mov
inc
stos
and
insl
mov
push
mov
pop
pop
sahf
xchg
sarb
cmpsl
movsb
dec
rep
mov
stos
les
and
cmp
call
or
pushf
push
imul
push
jb
xor
dec
movsb
xor
imul
cmp
movsb
les
add
gs
pop
sarl
dec
jp
push
cld
dec
sub
jne
in
pop
mov
xchg
cmp
into
push
and
stos
mov
fcompl
clc
sahf
lahf
jle
movsb
inc
ja
mov
jo
mov
std
or
pop
es
jle
mov
sub
nop
addr16
lods
cmpsl
adc
add
rclb
push
cs
icebp
xlat
imull
arpl
dec
ret
xor
fwait
pusha
cli
dec
int
sub
fndisi(8087
mov
jbe
fwait
cwtl
andl
movsl
jmp
out
loopne
cmp
arpl
and
jae
cltd
push
or
cmpsl
shrl
std
lcall
sti
pushf
and
fistps
add
inc
jae
inc
sub
sub
cmp
stos
mov
clc
or
fisubl
inc
divps
andl
rcl
std
pushf
push
push
leave
movsb
stc
sti
clc
lahf
ret
xchg
jno
scas
in
xor
in
lds
push
inc
addr16
push
int3
mov
out
mov
jl
xchg
jo
fsubrl
push
jmp
repz
jne
lods
sbb
mov
test
test
sub
inc
cmpsl
dec
jne
mov
add
mov
mov
pop
jbe
mov
imul
leave
sbb
dec
inc
jmp
dec
pop
pop
push
ret
xchg
roll
xchg
out
mov
push
in
fwait
movsl
xchg
lret
cld
and
int3
sub
or
jb
hlt
push
mov
jg
or
icebp
adc
filds
or
dec
sub
pusha
sub
push
and
call
cltd
flds
cmp
shlb
mov
xor
into
shrb
loope
stos
clc
lock
mov
mov
movsb
pop
dec
sub
ja
stos
cmp
mov
and
divb
fcompl
div
mov
fs
mov
xchg
jmp
sbb
scas
loope
loopne
cmp
mov
add
sti
fistpll
pop
das
adc
dec
push
pop
lret
xlat
add
pop
jae
mov
repz
mov
mov
jecxz
int
mov
cmpl
add
dec
jmp
scas
mov
sbb
xchg
xor
cmc
push
jno
push
inc
sbb
pop
aaa
fbld
not
push
jo
and
inc
test
dec
call
addr16
out
inc
in
dec
ficompl
mov
cld
mov
cli
ficoms
std
divl
leave
cmp
ss
loope
lahf
jae,pn
add
insb
ss
or
aad
cmp
mov
xchg
sub
rcll
mov
scas
adc
insl
jl
or
orl
push
dec
scas
test
idivl
and
lea
sub
lock
out
and
iret
fisubrl
jecxz
jbe
cmp
add
sarb
push
dec
push
xor
xchg
repz
xchg
mov
aaa
in
dec
push
stos
mov
and
arpl
sbb
mov
and
iret
test
pusha
insb
mov
pop
cld
or
adc
cmp
jne
xlat
inc
sahf
insb
std
lock
adcb
xchg
mov
sbb
outsl
xchg
sbb
mov
mov
xchg
cli
mov
inc
xchg
arpl
xchg
scas
xor
sbb
adc
fsubs
push
xchg
and
push
mov
mov
add
mov
sub
push
jnp
mov
pushf
sub
cld
lods
inc
jns
js
fcomps
iret
sub
sbb
pop
xchg
jo
add
je
or
sub
insb
out
mov
test
movsb
push
test
ja
out
clc
nop
sub
insl
repnz
jnp
cmpl
add
into
testb
and
inc
pushf
cmpsl
insb
xor
push
mov
dec
jle
hlt
cmpb
mov
jecxz
sub
jmp
sbb
jmp
jl
jb
mov
mov
sarl
inc
mov
lock
push
jnp
mul
aad
scas
mov
mov
xchg
ja
scas
cmp
int
mov
cmpsl
sub
add
js
stos
cmp
out
xlat
insl
fldlg2
lea
xor
jo
xor
xchg
push
jb
out
test
sbb
or
mov
fnstcw
xor
test
cmp
cld
fs
inc
xor
xchg
mov
bound
orb
add
push
pop
push
push
clc
imul
lahf
out
push
add
adc
sub
cs
inc
into
dec
ja
xor
cld
test
imul
mov
ljmp
rolb
gs
lret
add
repz
xchg
outsb
jl
and
lahf
inc
xor
cmp
pop
sbb
adc
sarb
int3
push
or
cmp
xchg
jae
cltd
scas
pop
test
inc
arpl
dec
jge
shrl
into
notl
xor
jle
pop
mov
adc
push
fwait
cmp
les
add
cwtl
fsts
mov
dec
mov
in
movsb
scas
xchg
xor
aaa
ss
imul
xchg
or
das
sti
jecxz
mov
cmp
outsb
daa
push
orl
fistl
and
cmp
std
and
sub
jmp
dec
xor
add
dec
and
inc
lahf
ret
faddl
or
sbb
dec
pop
arpl
lret
inc
test
rcll
jb
ror
xor
push
sub
pushf
fsubrl
aaa
jnp
hlt
in
jmp
cmpsb
adc
inc
psrlq
push
push
cmc
mov
inc
dec
jo
movsl
sbb
andl
mov
dec
inc
leave
pop
or
xor
lds
mov
sbb
mov
mov
aad
dec
mov
test
dec
pop
and
adc
or
pop
push
insb
ja
cli
aaa
jae
aad
scas
sti
inc
and
mov
and
mul
je
out
dec
sbb
or
sarb
idivl
push
mov
jle
std
xchg
lock
test
test
add
stc
ret
mov
loope
xchg
jnp
jae
iret
and
mov
ret
shll
push
ret
mov
push
iret
mov
add
daa
and
shlb
jbe
and
dec
cmp
dec
jb
inc
push
jle
adc
jne
ror
push
cwtl
add
ljmp
out
dec
lea
add
lock
jo
push
mov
rcll
out
lods
pop
or
enter
lahf
mov
and
push
cmpsb
fld
sub
sub
push
das
inc
inc
jbe
pusha
inc
pop
adc
pusha
mov
mov
orl
xchg
ret
loop
mov
scas
sahf
data16
adc
stos
add
mov
sti
mov
jnp
mov
cmc
cmpsb
int3
fwait
aad
icebp
mov
mov
fsubrs
std
pop
pusha
aas
or
cmc
jo
dec
jp
das
sbb
lret
dec
repz
out
mov
fs
lods
scas
std
or
push
outsb
cmp
mov
scas
test
inc
rcr
lret
mov
stos
loope
call
inc
bound
jo
int
inc
or
or
cmc
push
mov
mov
lcall
push
dec
test
add
ljmp
mov
sub
mov
mov
ds
roll
xor
pop
shlb
cs
lret
cmp
inc
cld
add
pop
mov
es
cmp
mov
in
push
pop
mov
lret
jnp
pop
in
icebp
and
cmp
jnp
rorb
pop
fldt
int3
ss
mov
xorl
dec
add
sub
dec
xchg
in
popf
or
push
mov
or
xor
negb
xchg
jno
dec
sub
jp
mov
je
shrb
dec
aas
sbb
mov
ret
inc
push
hlt
sub
jg
out
xchg
mov
cmp
inc
idiv
push
push
je
adc
sub
lret
mov
lahf
mov
ret
pop
and
mov
inc
rcr
sarb
or
push
pop
push
addl
scas
aaa
shlb
jl
imul
andb
sub
mov
push
test
xor
mov
sub
fwait
scas
movb
stos
rorl
outsb
popf
cli
mov
lret
mov
sub
lahf
push
pop
inc
pop
sub
dec
mov
fnclex
mov
sti
sub
xchg
mov
mov
es
ficompl
push
lods
es
sub
cmpsb
cmp
jmp
pop
ret
sbb
aas
or
jmp
fwait
scas
xchg
jp
pop
sub
mov
xchg
sub
sbb
push
fimuls
pop
jmp
ret
mov
fucom
andl
int
sub
xchg
movsb
test
bound
adc
pop
cmpl
dec
mov
inc
fcoml
push
sarl
sub
mov
bound
xor
add
enter
inc
rcrb
pushl
sbb
pop
push
push
mov
mov
enter
daa
mov
popf
popa
sub
xlat
jecxz
and
xor
add
and
xlat
in
push
or
sahf
sub
push
add
cli
fisttpl
or
stos
add
call
pop
xor
imulb
in
sub
and
mov
or
xor
cld
push
adc
jae
scas
and
xchg
xor
jnp
mov
sbb
mov
or
gs
pop
test
into
pusha
sub
xor
jl
mov
ret
cmpsb
sahf
and
push
lea
xchg
xor
push
or
arpl
stos
or
repz
out
dec
push
mov
jb
xor
mov
stos
aam
xchg
int
jb
mov
xchg
mov
and
cmpl
push
push
icebp
push
jb
add
cmp
call
cmp
out
fxtract
sbb
jle
cli
stos
fadd
ljmp
cmpsl
xchg
mov
jns
mov
aas
cmp
add
ljmp
in
lea
in
mov
or
inc
insl
lcall
iret
orl
mov
xchg
or
ljmp
dec
pop
loop
repz
loop
sbb
xchg
pop
xchg
mov
sbb
dec
cmpsl
xchg
enter
push
cwtl
jae
and
inc
push
popa
scas
adc
push
test
aas
insb
jne
fcoms
jbe
or
daa
cli
xchg
enter
mov
in
inc
cmp
push
cld
mov
dec
cwtl
adc
ljmp
adc
leave
outsb
out
shll
cmp
idivb
dec
and
pop
enter
or
out
sbb
loopne
push
rorb
cmpsl
lret
and
dec
arpl
lret
sbb
pop
in
test
in
xchg
aaa
push
imul
dec
pop
shll
int3
and
mov
or
push
cs
mov
je
je
aas
cld
mov
inc
in
adc
sub
js
and
sahf
test
ret
stos
lret
xor
fs
adc
mov
loopne
or
push
mov
aad
or
aas
jg
xchg
mov
js
nop
in
scas
mov
or
jecxz
repz
out
icebp
lret
loopne
out
mov
in
ja
dec
xchg
pop
ret
jbe
push
hlt
mov
jg
mov
fs
xchg
inc
pop
adc
pop
adc
push
sbb
pop
push
cmpl
idivl
cmpsl
or
mov
mov
xor
mov
outsb
imul
cmc
push
mov
and
inc
leave
fstpt
outsl
pop
xor
pop
adc
pusha
adc
push
inc
cmpsl
xchg
and
lret
leave
adc
pop
sbb
mov
ret
adc
repnz
jg
js
ror
add
imul
jmp
daa
mov
dec
hlt
leave
pop
mov
popf
loop
xchg
ss
dec
adc
mov
out
shlb
je
xchg
cmp
add
xchg
pop
call
icebp
push
rcll
out
sub
cmpsl
sub
fcoml
repz
scas
add
into
popf
sbb
movsb
jmp
add
xor
mov
shlb
fstpt
sub
jl
int3
test
cmc
fmuls
pushf
push
and
stos
xor
add
mov
jmp
cwtl
pop
fdivrp
xchg
xor
inc
gs
jge
fs
xor
add
dec
xor
xchg
mov
lcall
in
cmp
sub
pop
lods
xchg
pop
xor
hlt
imul
mov
inc
stos
es
notl
push
mov
scas
sub
mov
or
cmp
add
pop
fcmovnu
js
jne
aaa
cltd
cwtl
dec
out
push
add
push
int3
dec
ss
mov
mov
inc
push
stos
aaa
imul
jmp
fstpl
inc
xor
movsl
adc
inc
xor
or
popa
test
sti
xchg
sbb
mov
ds
mov
or
ret
in
orl
shll
xchg
andb
mov
pop
dec
mov
mov
fiadds
and
sub
push
dec
bound
mov
into
mov
scas
dec
popa
xchg
xchg
mov
mov
push
jecxz
les
mov
aad
rcr
fstpt
js
sahf
pop
stc
jnp
mov
mov
add
adc
jb
fsubl
sbb
add
adcl
push
test
dec
adc
cmpsl
ja
jecxz
enter
movsb
orl
adc
xorl
aam
cmpsb
lea
roll
out
rclb
bound
mov
out
jae
pop
pop
inc
aad
mov
mov
leave
cmp
pop
xchg
sub
fistl
pop
add
popl
je
push
sub
mov
out
fistps
lcall
and
in
jecxz
and
lods
jl
imulb
jno
inc
xchg
std
xchg
xchg
mov
push
maskmovq
testl
ret
ficoml
mov
outsw
mov
xlat
jnp
jno
dec
addr16
xchg
out
or
dec
mov
jle
int3
adc
inc
int3
cmp
cmp
ss
mov
xor
mov
push
andl
arpl
repz
mov
imul
cmp
pop
lcall
adc
xchg
pop
sbb
pop
adc
imul
or
dec
or
mov
arpl
xor
cmpb
call
out
repnz
push
and
faddp
stos
hlt
aam
dec
sbb
sub
mov
inc
enter
push
outsl
sti
fcmovb
pop
mov
in
pop
ss
cld
sbb
pop
push
sahf
rorb
aaa
add
inc
mov
mov
mov
fwait
lods
mov
xor
pop
aas
arpl
push
mov
lret
or
inc
push
data16
mov
xchg
mov
pop
inc
jae
jle
dec
sub
rcll
ja
test
sub
repnz
and
pop
pop
sbbb
nop
mov
std
lret
aas
ret
jp
ret
fidivrs
scas
imul
movsb
and
cmc
cwtl
stos
and
lahf
movsl
pop
loop
inc
xchg
jg
fcoms
stos
jo
jmp
sub
scas
ret
sti
cmp
push
scas
das
test
pop
in
imulb
mov
notb
clc
jb
outsl
out
sbb
xorb
fs
int3
jne
mov
mov
dec
mov
xor
sbb
mov
arpl
arpl
leave
outsl
or
js
ja
push
mov
shll
enter
push
pop
xor
loop
mov
add
mull
jp
xchg
scas
aam
sub
or
mov
sub
push
or
in
arpl
xor
out
pop
and
sbb
call
pop
pop
scas
sub
lret
andl
arpl
ret
xchg
cmp
roll
xchg
sysenter
jecxz
mov
ret
jl
jae
ss
sbb
in
jae
mov
mov
mov
jne
mov
mov
testl
lds
xor
mov
or
sahf
push
sub
inc
int3
add
cltd
dec
mov
in
movsb
daa
into
jge
and
jg
ret
movsl
cmp
mov
mov
pop
sub
icebp
imul
test
and
andl
cld
push
cmpsl
add
dec
call
popf
or
int3
in
adcl
fiaddl
mov
adc
xlat
fisubs
subb
mov
or
test
mov
xorl
or
push
jmp
ss
mov
or
leave
scas
ret
adc
jb
mov
jo
dec
jne
dec
scas
fldt
or
cmp
ss
in
movsb
aas
nop
ljmp
jmp
add
sbb
jg
in
aaa
pop
mov
xchg
pop
das
and
jmp
fidivs
xlat
ret
das
or
daa
jae
loop
or
sbb
pop
add
out
mov
or
mov
mov
adc
hlt
mov
mov
negl
sahf
dec
mov
mov
in
lock
clc
int
mov
xor
pop
out
xchg
adc
stc
daa
jle
and
sbb
push
inc
adc
mov
inc
lret
lock
arpl
cmp
pop
jbe
and
arpl
sti
fdivl
xor
outsl
mov
xchg
das
insb
mov
jge
xchg
out
dec
push
testb
xor
bound
ja
addb
mov
mov
sub
jecxz
out
push
shl
test
adc
aam
nop
add
mov
stos
bound
mov
scas
fdivrp
bswap
shrl
in
xchg
mov
sub
add
outsb
adc
das
cmp
mov
ret
mov
push
xor
jbe
adc
sbb
imul
daa
mov
mov
fsin
lods
pop
shlb
jo
data16
pop
jl
add
test
dec
xchg
mov
mov
repnz
dec
xor
sub
sub
lret
sbb
cmp
into
neg
fistps
push
inc
add
mov
pop
in
cmp
cmp
addr16
scas
js
xchg
cmp
cmp
stos
adc
gs
jne
xor
inc
pop
enter
cmp
xor
cmp
sbb
pop
xor
insl
insl
inc
pop
sub
out
mov
jno
jge
outsl
pop
sub
or
lds
int
mov
mov
aam
jb
cli
add
push
pop
out
xchg
dec
outsb
leave
icebp
mov
xchg
roll
dec
fsubrl
xchg
popa
lock
xor
std
or
pop
in
and
dec
push
or
mov
add
das
jnp
data16
stc
jecxz
in
mov
in
mov
in
pop
pop
insb
jecxz
adc
xlat
test
mov
outsl
aas
or
push
pop
lock
fiadds
imul
int3
imull
and
xorl
stos
adc
stos
and
pop
mov
pusha
pop
adc
loope
test
subl
mov
je,pn
pop
xor
inc
push
and
push
mov
push
mov
dec
or
xlat
mov
inc
inc
fcomps
cmp
stos
mov
fdivrl
aad
push
lea
mov
add
push
dec
mov
mov
xchg
cmp
cmp
lcall
push
fisubrs
or
mov
fsubr
mov
mov
outsl
pop
adc
inc
xor
jno
mov
mov
fsub
mov
in
adc
and
mov
aas
fcoml
mov
push
clc
mov
in
testl
add
mov
sbb
push
popf
outsl
mov
dec
cmp
divb
out
or
lea
mov
push
sbbb
and
cmc
jle
in
mov
push
jmp
lea
cmp
movsl
xchg
jno
xor
and
adc
sahf
outsb
fidivrs
outsb
les
xchg
push
xchg
cmp
add
imul
mov
out
into
ja
pushl
pop
inc
dec
and
outsl
add
lock
or
shr
add
cmc
popa
cmp
ret
xlat
cmpsb
ds
push
hlt
in
incl
test
shlb
test
xor
or
scas
fwait
mov
xchg
rcll
jmp
push
inc
call
lock
xchg
push
sahf
or
mov
cmp
push
inc
mov
subl
test
push
lock
add
fsubrp
adc
hlt
sbb
inc
inc
shr
mov
pop
jecxz
jnp
orl
dec
xor
ret
mov
cmp
jns
in
sbb
pop
nop
lret
outsb
jo
and
iret
and
fsubp
andl
imul
mov
ret
pop
cltd
adc
push
mov
jae
imull
dec
xchg
pop
pop
loopne
xlat
sarb
scas
subl
cmpsl
cmc
daa
insb
daa
mov
jbe
jmp
out
movsl
js
xor
out
jge,pt
and
add
cmp
sbb
cmp
pop
xchg
xchg
mov
sbb
enter
dec
mov
outsb
pop
in
jecxz
sbb
jno
mov
clc
sub
mov
jecxz
jmp
mov
dec
cli
das
neg
lods
inc
fsubrp
decb
pop
push
cmp
mov
sub
and
mov
jmp
push
iret
xor
nop
jecxz
mov
xchg
lret
or
xchg
dec
cmc
xor
mov
loop
lcall
xor
mov
ss
dec
popf
jns
cld
ret
sub
hlt
ds
jne
loop
and
popa
gs
stc
test
dec
or
dec
push
push
adc
inc
lcall
mov
push
dec
inc
stos
mov
cwtl
loop
insl
or
mov
xchg
xchg
jle
or
icebp
jmp
mov
lahf
or
xor
rcl
pop
jg
dec
aam
loopne
mov
mov
inc
dec
jmp
int3
repz
scas
adc
jl
jno
ror
clc
push
pop
int3
cmpsl
or
xchg
in
lds
rcrl
cltd
enter
xchg
and
add
mov
fsubrp
cmp
lods
push
pop
mov
xor
in
push
or
mull
mov
jl
scas
xchg
adc
push
lcall
push
cmpsl
sahf
dec
push
cmc
repnz
sbb
cmpsl
push
jp
pop
mov
jo
sahf
sets
xchg
pop
rorl
jg
jbe
pop
popl
in
icebp
das
stos
and
inc
repz
cmpsl
dec
cmp
into
and
pop
aam
pusha
xchg
stos
push
mov
cmp
sbb
imul
push
xchg
mov
mov
push
cmp
lahf
adc
push
rorb
push
inc
mov
iret
lret
addr16
lock
pop
and
movsb
sbb
xchg
adc
push
movsb
insl
fincstp
sub
jp
shll
mov
data16
ror
xlat
lret
xchg
inc
pop
xchg
mov
divl
jne
pop
dec
cmc
dec
and
daa
insl
pop
push
mov
cmpsb
aaa
sahf
stos
pop
loop
mov
pop
lods
xchg
jnp
aas
loop
jb
xor
xchg
clc
clc
push
ds
loop
jmp
dec
adc
push
or
ss
sub
sbb
push
lods
orl
jge
pushf
in
mov
jae
decl
pop
dec
loopne
mov
push
iret
or
mov
lods
lahf
rcl
aas
xorb
js
in
mov
xchg
test
push
sub
ret
jbe
or
cmp
loope
pop
fisttpl
inc
or
jp
ss
cmp
mov
mov
addb
movsl
out
cmc
movl
sti
pop
andl
jg
imul
mov
ds
cmp
sti
mov
inc
enter
cmp
pop
movsl
jp
sbb
mov
ret
jo
add
shl
cwtl
andb
mov
cmp
mov
hlt
in
sub
arpl
inc
gs
lret
and
mov
aam
in
stos
fcomps
add
push
sti
int3
inc
sahf
pop
mov
scas
ret
cwtl
ja
mov
inc
pop
push
inc
fisubs
inc
leave
add
rcr
mov
repnz
pop
inc
mov
push
xchg
push
adc
pop
addl
jmp
xor
sub
js
pusha
popf
out
xchg
sbb
push
add
sti
roll
push
cmp
das
lods
mov
xchg
les
or
and
and
addr16
cmp
fldcw
mov
push
or
add
sbb
int3
sub
dec
fdivrs
stos
insb
push
pop
rcrb
mov
sbb
xchg
pusha
sub
xor
andb
pusha
pop
add
sbb
mov
cmpsb
pop
cmp
mov
loope
hlt
cmc
or
or
inc
enter
out
sub
iret
adc
test
lds
sub
addr16
dec
jb
stos
dec
xor
jle
aam
es
cmc
mov
xlat
cmc
in
shl
push
loop
js
fsubr
sub
push
sbb
mov
adc
out
lods
fbstp
add
mov
fs
cs
cwtl
scas
gs
push
test
sbb
mov
in
shll
inc
or
lods
mov
sub
jae
cltd
and
bound
cmp
mov
int
ss
xor
xlat
idivb
loope
cwtl
inc
add
xor
mov
ret
mov
cmp
or
lods
ja
mov
lods
dec
adc
test
mov
jp
insl
jns
jp
dec
push
xor
or
incb
xor
jb
loop
out
inc
sub
out
ljmp
or
mov
scas
mov
and
push
fsubp
cmp
jge
aas
or
pop
mov
in
dec
sub
fsubrl
in
sub
roll
fst
mov
sbbb
divl
popa
inc
adc
pushf
imul
xchg
iret
adc
xor
add
and
enter
mov
mov
xor
or
dec
add
inc
pop
dec
enter
mov
cmc
fs
lea
push
sub
mov
inc
shlb
xor
dec
sub
sbb
loope
or
pusha
cmpsb
das
jae
jle
xchg
pop
icebp
or
xchg
pop
into
and
int3
lret
and
test
mov
mov
das
imul
in
fdivl
or
jp
xchg
jmp
sahf
or
fwait
and
bound
inc
sub
das
cltd
cld
dec
insl
subl
pop
fldcw
gs
scas
imul
dec
inc
xor
jge
imul
ret
aas
pop
mov
pop
nop
mov
dec
loop
and
cwtl
clc
push
lods
movsb
aas
dec
xchg
mov
xlat
lods
add
or
push
fistps
add
pop
xor
sub
ljmp
lahf
mov
xor
cmp
sahf
dec
and
int3
xchg
push
hlt
inc
arpl
xor
call
outsb
inc
fsubs
inc
aad
sbb
mov
adcl
in
in
outsb
mov
xchg
lcall
cld
add
negl
sti
popa
xchg
mov
xlat
mov
dec
ja
jnp
cltd
mov
xor
sbb
data16
pop
add
fbstp
dec
mov
mov
fwait
test
xor
fistps
int3
in
dec
jo
inc
sbbb
sub
ja
push
and
push
mov
cmp
cmpsb
daa
mul
aas
pop
adc
jmp
scas
sbbl
mov
mov
ljmp
or
das
clc
jp
inc
inc
lret
xor
cmpsb
rcll
lcall
adc
jae
dec
jl
and
and
jbe
fdivs
xchg
std
push
mov
push
cmp
pop
insl
leave
mov
add
lds
outsl
add
adc
lods
sti
in
ja
xchg
stos
inc
xchg
mov
xchg
into
sbb
pop
jae
adc
jecxz
dec
lea
or
rcr
jo
cmp
xor
xorb
sub
mov
cmp
pop
xor
int
cmpsb
addr16
lcall
push
sar
pop
mov
push
adc
pop
lret
add
xchg
pop
push
daa
out
cmc
data16
test
add
notb
mov
and
sbb
and
xor
ss
or
pop
xchg
xor
sub
fwait
dec
out
jae
mov
push
mov
xor
inc
pop
nop
je
mov
sahf
push
lods
iret
push
scas
jne
jbe
and
add
dec
sub
mul
rorb
cmp
xor
push
std
dec
push
xchg
cli
out
scas
and
ja
les
addr16
fcoml
xor
in
xor
dec
leave
jns
inc
mov
repz
adc
stos
mov
fbld
pop
stc
add
push
mov
daa
jb
push
adc
outsb
imul
or
inc
lock
test
stos
addr16
mov
in
xor
arpl
lock
hlt
aaa
loop
mov
dec
mov
jecxz
cmpsb
add
cmpsb
cmp
push
xchg
outsb
pop
mov
pop
jo
xchg
sub
inc
cmpsb
lods
inc
stc
dec
ficomps
dec
dec
and
push
negb
fcomi
cmp
stc
xchg
jmp
outsl
jo
sbb
rorl
mov
xchg
mov
movsl
rcrb
or
mov
dec
test
mov
push
push
push
stos
mov
adc
or
outsl
arpl
inc
cmp
lret
dec
push
mov
xor
adc
popf
sbb
and
mov
fisttpl
dec
cmp
xchg
gs
jns
xor
mov
test
adc
push
fiaddl
jge
pushf
xchg
mov
or
dec
sbb
cmp
adc
mov
leave
jecxz
ret
jl
mov
inc
popf
jecxz
ljmp
scas
push
lock
mov
jnp
sub
push
cmp
test
outsl
pop
out
cltd
divl
dec
cs
ja
cmp
scas
cmp
sub
hlt
pop
int3
push
jecxz
inc
pushf
and
inc
popf
in
fwait
cwtl
pop
cmp
xchg
ja
push
cmp
mov
jl
fmulp
outsl
cli
stos
test
imul
push
mov
inc
mov
dec
stc
xor
and
pop
jecxz
xchg
repnz
sar
xor
jg
sti
or
jb
int3
lret
icebp
arpl
daa
out
int
push
jmp
jns
or
add
push
loop
mov
xor
sub
out
mov
repz
cmp
es
cmpsb
rcrl
daa
and
add
je
clc
push
or
xor
call
and
xchg
movsb
and
loop
in
sbb
fcoms
bnd
mov
pop
mov
pop
xor
and
jmp
mov
test
jo
push
xlat
andb
xchg
and
inc
sbb
add
shll
inc
mov
lcall
pop
aaa
sbb
or
or
and
xorb
xchg
clc
outsb
cmp
in
pusha
pop
addr16
mov
mov
push
scas
sahf
mov
push
out
lret
and
jg
in
push
icebp
xlat
bound
mov
dec
out
sub
or
dec
movsl
adc
sbb
orb
inc
jo
jae
cmp
loop
mov
sbb
aad
jecxz
add
lock
aad
pop
fidivrs
ficompl
jmp
and
jl
jae
subl
imul
xor
das
jmp
sbb
push
xor
mov
in
scas
lcall
leave
in
jle
inc
push
in
loopne
add
pop
nop
mov
in
xchg
loope
insl
aas
pop
xor
mov
stos
cld
ficoml
mov
scas
cmc
cmp
jne
hlt
pop
dec
xor
out
je
cld
aas
lea
fcoms
test
cmp
lods
addr16
jns
std
out
push
pop
mov
loopne
out
and
cltd
movsb
dec
shlb
and
ljmp
mov
out
push
data16
nop
test
das
mov
mov
sub
std
add
sbb
mov
into
mov
pop
inc
aam
dec
mov
sti
xchg
loopne
xchg
add
add
stos
nop
jnp
ljmp
jmp
cmp
popf
sbb
bound
outsb
iret
in
push
push
pop
xchg
inc
pop
push
sbb
sarb
ret
pop
sub
push
mov
sbb
sbb
std
hlt
push
mov
daa
out
mov
jnp
sbb
test
and
inc
xchg
data16
or
jecxz
negb
stc
arpl
mov
lcall
lcall
cmp
cmc
in
dec
mov
and
cs
pusha
jge
call
iret
xlat
cmpsl
pop
loopne
movsl
pop
mov
stos
ja
mov
adc
jb
push
adc
jae
call
out
adc
pop
and
mov
xor
and
scas
dec
dec
in
mov
loopne
dec
repnz
adc
aam
iret
rol
fdivr
shll
cs
cmp
test
pop
scas
and
loope
loop
dec
mov
lods
jecxz
xor
arpl
push
xchg
int
xchg
shl
jo
pop
mov
idiv
ja
add
lods
sub
lret
popa
adc
popf
shlb
jecxz
push
push
ret
cmpsl
add
call
adc
fldl
and
pop
mov
sbb
mov
leave
pop
popf
xchg
sbb
test
mov
push
lea
jmp
and
movsl
pop
nop
mov
dec
scas
out
bound
in
inc
fildll
sahf
scas
scas
movaps
sub
pop
adc
addr16
dec
dec
cli
fimull
cmp
xchg
dec
decb
bound
lods
movb
ds
lods
scas
stos
frstor
lods
pop
sub
sub
xchg
stos
cwtl
or
nop
dec
mov
sub
aas
and
xchg
aam
jge
pop
cwtl
jbe
enter
popa
lods
dec
mov
fistpll
icebp
fstl
xchg
xlat
xchg
mov
cmpb
sbb
inc
xor
sub
mov
push
fldl
clc
pusha
push
sub
push
mov
dec
ret
ljmp
mov
jmp
ficompl
xor
aas
js
jo
mov
mov
mov
aam
adc
pop
pop
jae
test
xchg
jg
mov
xor
lcall
adc
xchg
adc
lods
sbb
popa
inc
in
stos
fucomp
mov
enter
movsb
xchg
scas
adc
clc
enter
es
dec
cmp
adc
push
jl
jo
mov
sub
cmp
and
mov
mov
jecxz
mov
inc
das
xchg
cmp
enter
das
dec
mov
cld
gs
sbb
mov
and
in
in
mov
test
mov
jp
cmp
loopne
add
inc
add
xchg
ret
adc
ret
ror
xchg
lea
jae
repz
mov
hlt
aad
dec
movsl
sub
xchg
hlt
fwait
push
cmp
adc
or
das
lcall
stc
lcall
adc
xlat
les
jns
je
push
or
mov
jmp
cmp
mov
ficomps
cmp
subl
jb
int
xchg
out
sub
xchg
pop
jge
xor
ss
mov
jmp
fstpl
pop
stc
bound
lea
js
pop
xor
xorb
jecxz
enter
test
push
js
cmpsb
aas
scas
jp
pop
sub
flds
and
loopne
popa
out
sti
sub
aad
hlt
mov
push
pop
hlt
jle
and
fsts
aam
or
sbb
jp
pop
out
bound
mov
dec
dec
mov
add
lahf
and
out
test
cmp
fcompl
cmp
pop
loop
out
mov
push
adc
lahf
rolb
in
inc
movsb
mov
push
cmpsl
pushl
mov
fistl
rcr
out
inc
icebp
stc
cmp
cs
mov
jle
mov
repnz
icebp
leave
call
add
add
xchg
shl
repnz
inc
int
popa
sub
lahf
dec
imul
aad
dec
sub
pop
pusha
jns
sbb
fcoms
add
pop
fs
idivb
cmp
ds
lret
subl
fsubr
and
inc
das
fwait
test
fdivrs
aas
ss
push
mov
mov
sub
push
xor
sbb
das
fsubrs
cltd
ffreep
scas
jne
cld
or
lods
inc
pop
lea
rcrl
add
fsubp
xchg
adcl
fldenv
or
mov
cli
xchg
inc
inc
adc
inc
add
movsl
sbb
add
add
sub
fistps
aam
mov
je
ljmp
shlb
jge
jnp
ret
movsb
xchg
pop
mov
lahf
ds
fcomps
fnstsw
in
and
push
adc
mov
iret
dec
addr16
pop
jg
lods
sub
sbb
xor
mov
push
mov
pop
xchg
mov
and
test
in
outsl
pop
addr16
and
ss
sahf
cld
and
push
pushf
enter
cld
ljmp
add
xchg
push
jg
dec
fldt
arpl
or
vunpcklps
and
or
fadds
inc
sbb
pusha
shlb
jbe
subl
inc
jno
sbb
popf
jecxz
cmpsb
cmp
cmpsb
and
add
xlat
push
mov
leave
xchg
not
cmp
idivb
sub
test
test
jnp
adc
test
xor
andb
cmp
xchg
add
xor
orl
mov
xchg
mov
ljmp
in
sbb
ss
sbbl
int
test
rcll
inc
das
push
xchg
je
mov
xor
xchg
sti
inc
pop
rcrb
pop
mov
jbe
sbb
test
outsb
out
or
dec
and
push
nop
and
xorps
std
call
push
sub
les
xor
fcmovnbe
mov
sarb
push
stos
ret
into
loop
or
cmp
roll
rclb
jmp
int
pusha
mov
nop
sub
pop
jns
dec
cld
add
mov
cwtl
lea
arpl
mov
sar
imul
int
inc
add
pop
loop
stos
lods
xchg
pop
lahf
xor
push
inc
and
xchg
xchg
ljmp
scas
push
add
stc
ja
ret
aaa
fcomi
lahf
subl
pop
jne
mov
mov
icebp
movsl
fimuls
and
int3
sbb
clc
or
and
mov
aaa
push
cmp
andb
push
xchg
les
add
nop
stc
xchg
sub
push
mov
aad
popf
in
aad
sub
pop
aam
sub
mov
cmc
lea
mov
push
loop
addr16
or
xor
xchg
sbb
add
test
mov
cmp
roll
ds
daa
push
adc
sbbl
sahf
adc
shl
cmp
mov
enter
das
arpl
add
xchg
imulb
xchg
jg
outsl
dec
jnp
adc
out
mov
or
mov
xchg
in
jl
mov
sbb
ret
pop
mov
adc
adc
lds
arpl
cli
jo
insl
pop
xchg
xor
dec
into
scas
popf
inc
xor
push
dec
dec
insl
fisttpll
into
pop
or
mov
cmp
push
outsb
cmp
or
into
movsl
out
jge
mov
pop
bound
jg
cmc
out
hlt
loop
xor
jp
jo
sub
inc
xchg
xor
xchg
mov
nop
jle
inc
fs
add
cmp
cwtl
das
mov
xchg
lods
pop
addr16
aaa
es
xor
add
fld
mov
scas
adc
sbb
push
and
ljmp
mov
je
das
in
test
cmpsb
push
cli
cmp
int
outsl
xchg
fs
push
repnz
jnp
and
int
ret
and
push
popf
pop
test
xchg
or
inc
ljmp
inc
cld
cmp
scas
mov
pop
cld
ret
add
cmp
pop
nop
mov
outsl
daa
stos
mov
and
daa
loopne
cmp
nop
or
pop
bnd
mov
inc
push
bnd
or
mov
pop
fisttpll
out
arpl
dec
inc
xchg
jmp
shll
jmp
rorl
inc
adc
hlt
fwait
mov
aas
fbstp
mov
push
mov
js
mov
push
int
cmpsb
gs
pop
xor
out
cs
mov
push
adc
mov
in
push
sbb
cmp
mov
xor
add
popf
loopne
jne
push
jno
pop
iret
daa
jo
push
xchg
ret
daa
rolb
adcl
push
ja
or
xor
mov
inc
mov
pop
lock
pop
add
inc
mov
xchg
xchg
dec
inc
ds
mov
and
mov
inc
inc
mov
pop
movsl
insl
adc
fnstcw
cmp
sub
xchg
popf
sub
inc
push
gs
roll
sarb
inc
leave
jno
push
mov
subb
push
stos
xchg
ret
dec
insb
sub
lock
test
jno
add
mov
es
mov
inc
lods
sbb
clc
add
sub
fdiv
adc
jecxz
outsb
xchg
out
jae
arpl
push
pop
cmp
ret
jb
and
cmp
int3
mov
inc
cmc
cmp
pop
out
aam
int3
jo
push
push
stos
sbb
jmp
mov
dec
in
mov
jno
push
mov
std
cmp
adcb
sahf
repz
pop
push
aas
inc
jmp
push
adc
push
lea
push
and
shlb
cmp
xor
jno
fs
add
sbb
popf
pop
jge
loope
inc
loop
mov
xchg
aad
lds
stc
leave
cmpsb
mov
or
lock
in
cmp
jns
push
mov
sar
insl
ret
cmp
xchg
pop
xchg
arpl
xchg
int3
out
adc
adc
int
pusha
sahf
cmp
filds
gs
push
cmp
ror
and
jle
xchg
sbb
jnp
dec
push
bound
xchg
or
mov
jg
and
sarb
js
loopne
enter
enter
add
int
cli
out
addr16
iret
mov
inc
lahf
xor
stos
out
sub
cmp
inc
push
jg
call
jno
aaa
add
or
sbb
imulb
fadds
mov
xor
mov
subl
mov
jmp
mov
not
xchg
mov
dec
in
in
xor
mov
adc
lea
jmp
mov
or
aaa
pop
jp
push
mov
out
dec
outsb
pop
cmp
in
lods
repz
movsl
lods
je
push
js
mov
shll
aam
pop
push
gs
adc
daa
imul
sbb
lcall
xor
lret
std
push
pop
test
mov
fmuls
outsl
int
sbb
cwtl
adc
cmp
sahf
push
add
movsl
in
andb
arpl
pop
fdivrl
popf
sbb
adc
loop
push
push
lea
push
sub
enter
imul
bound
in
imul
dec
xor
add
push
sub
test
ret
mov
xor
lret
mov
mov
out
cmp
repz
fs
cld
in
xor
inc
fwait
gs
subl
push
rcll
add
mov
lods
pusha
icebp
test
test
xlat
inc
popa
enter
and
cmp
cmp
ja
xor
or
push
aam
push
inc
inc
jge
push
inc
jp
push
lret
test
lcall
push
test
fcmovu
pusha
gs
stos
cwtl
cli
add
mov
sbb
cwtl
stc
mov
test
xor
lds
insb
lcall
mov
mov
enter
lods
and
es
into
dec
push
btc
or
ret
add
stos
shrl
push
jno
test
repnz
lock
les
inc
ja
push
stos
sbb
bound
and
loop
pop
imul
add
outsl
or
out
loop
lret
cld
xor
push
xchg
and
jecxz
inc
fiaddl
pop
daa
push
inc
jg
clc
pop
xchg
lods
push
clc
add
and
mov
pop
add
add
pop
test
shlb
add
dec
cwtl
fstl
adc
call
outsb
in
sub
mov
ljmpw
dec
dec
movsb
ret
inc
bnd
cs
scas
jno
push
andl
stos
pop
cltd
xchg
into
lea
lret
pop
push
sbb
jle
jo
fisttps
xchg
jnp
into
out
ror
dec
shll
or
inc
mov
ret
cmp
inc
adc
or
jo
jmp
add
push
add
cmpsb
xchg
call
mov
push
inc
je
push
fimull
mov
xlat
outsl
rcrl
or
lds
mov
test
dec
stos
cli
loope
bswap
xlat
test
jno
dec
sub
shll
cld
jecxz
push
loopne
push
imul
ds
test
or
push
icebp
jmp
mov
mov
push
sahf
fisttps
out
jo
in
mov
cltd
fcomps
mov
outsb
stc
mov
std
in
mov
cmpsb
dec
aam
arpl
pop
cmpsb
add
ja
int
repz
shlb
add
inc
xchg
aad
inc
std
and
xchg
inc
jp
inc
int
pop
nop
loope,pn
mov
es
lret
in
sbb
jmp
fildl
pop
push
inc
adc
enter
adc
mov
add
sti
jno
mov
sbb
js
or
out
mov
or
sahf
mov
mov
fbld
insb
leave
jnp
jp
fisubrs
out
xchg
insb
mov
pop
or
xor
push
jg
jbe
cmpl
mov
jns
lea
int3
mov
cltd
std
cwtl
cmp
or
mov
or
ror
repz
pop
imul
mov
mov
pop
loop
rcr
outsl
repz
or
pop
js
mov
and
push
mov
sbb
xchg
call
mov
outsb
sbb
push
jg
xchg
gs
inc
jp
pop
xor
and
ja
adc
inc
push
imul
in
xor
mov
mov
insl
pop
lret
dec
in
mov
xchg
mov
mov
dec
fsubl
push
daa
jle
in
add
dec
sbb
insl
divl
and
cmp
loope
lods
movups
push
push
imul
fists
mov
sbb
into
lcall
push
lret
in
rcrb
outsl
dec
inc
ret
push
test
push
sbb
sbb
mov
xor
mov
mov
sahf
loope
xor
les
in
adc
fdivrl
insb
cld
pusha
aas
inc
inc
test
popf
lret
sbbl
pop
pop
jle
or
stos
xchg
cmp
xchg
shlb
ja
jle
jge
fistps
jnp
movsb
cmpsb
fwait
mov
xlat
mov
fildll
dec
test
dec
dec
and
fidivrl
xchg
fmull
insl
and
mov
mov
in
cmpsl
ljmp
inc
jecxz,pt
adc
std
fnstsw
out
shrl
xor
jmp
stos
imul
pop
or
test
xchg
jb
int3
add
insb
daa
mov
jo
jns,pt
lods
fiaddl
xor
adc
xchg
pop
incl
fs
pop
shr
push
sbb
fsubrs
adc
mov
movsb
out
adcb
cmp
push
push
pop
cwtl
pop
add
fcompl
jnp
into
pop
aam
std
mov
faddl
sbb
jo
inc
and
sub
jb
popf
inc
leave
push
ret
scas
xchg
jle
pop
ljmp
pop
test
jns
loopne
sub
inc
lods
mov
xlat
jo
js
mov
push
fs
and
ljmp
adc
sbb
add
jp
pop
mov
jno
jnp
roll
aam
test
mov
in
lcall
stos
lcall
ds
and
mov
shrl
stos
inc
movsb
jns
insb
repnz
ss
xor
shlb
mov
push
mov
test
jecxz
int3
pushf
inc
sbb
sti
pop
in
into
adc
add
sub
ret
or
sbbb
xor
cmc
in
sbb
testb
fwait
sub
mov
sbb
popf
mov
outsl
xchg
cwtl
or
lret
movsl
add
push
movsb
mov
adc
inc
cmpsb
frndint
fidivrl
sbb
jns
inc
mov
repnz
int3
cmpb
rcrb
cmp
cmp
xor
cmp
adc
jle
fdivs
pop
addl
mov
pop
add
dec
and
in
fwait
cmc
dec
and
pushf
popf
jecxz
push
pop
xchg
sbb
ficomps
xchg
mov
addb
lods
cmpsl
cmp
jno
mov
pop
mov
jbe
loop
imul
out
or
mov
and
flds
lock
or
mov
insl
les
loop
cmp
cltd
xlat
pop
sbbb
lds
mov
mov
into
jge
push
mov
jo
pop
adc
dec
lods
add
xlat
vandnps
or
scas
cmpb
pop
mov
cli
jo
add
or
adc
stc
fdivp
sub
fs
jbe
out
sti
mov
sub
adc
fcompl
sbb
mov
add
xchg
js
imul
sbb
iret
fmuls
lret
push
sub
jge
out
push
daa
and
pop
sbbl
jg
pop
push
ds
cli
push
sahf
ja
out
xor
push
fadd
int
in
je
pop
sbb
imul
cmp
add
adc
psrlq
in
dec
in
adc
in
and
lods
and
push
pop
test
adc
jg
dec
sahf
addl
daa
inc
jge
lahf
mov
mov
lea
jecxz
out
out
je
cmpsb
inc
les
mov
in
fcompl
je
pop
and
or
mov
adc
imul
cwtl
jbe
sbb
negb
cmc
mov
xchg
mov
in
fstps
and
sub
mull
inc
mov
ret
cmpb
mov
push
jns
pushw
enter
mov
jne
mov
stc
movsb
js
sub
and
lods
ja
cmp
pop
pop
and
adc
and
add
pop
scas
dec
pop
mov
cmp
popf
std
test
stos
inc
xchg
pop
or
aaa
call
cld
add
test
mulb
xchg
fmulp
cli
shl
outsl
mov
mov
jp
dec
pushf
rolb
xchg
cwtl
xor
outsb
add
push
sub
cmc
mov
inc
bound
jns
test
push
jno
ret
add
mov
lods
dec
test
pop
lret
pop
scas
sbb
lea
add
push
into
cwtl
jg
fcmovb
or
test
stc
lds
mov
jne
nop
adc
jno
mov
std
push
pop
test
fdivrl
pop
movsl
cmp
cmp
outsl
es
sub
sbb
sbb
mov
lret
ja
adc
inc
xor
cli
sti
in
cmp
ds
mov
inc
push
dec
xor
xchg
mov
adc
repz
fnstsw
test
sbb
inc
ljmp
xchg
fsubrs
pop
mov
lds
adc
cmp
xor
testl
lahf
lret
add
test
pop
jle,pn
data16
sahf
daa
mov
pushf
push
sub
push
leave
fxch
and
push
and
iret
or
push
cmp
push
lds
mov
jmp
fldcw
jmp
sub
repz
jp
xchg
scas
imul
lcall
and
xor
cmpsb
push
mov
shll
xor
or
incb
lret
xchg
dec
cmp
mov
pop
cli
inc
insl
add
in
push
pop
in
xchg
mov
dec
and
test
lcall
push
mov
xchg
jae
insb
outsb
jg
int3
in
ror
jo
outsb
inc
lret
xchg
ret
xchg
rcrb
iret
fildl
fnstcw
sbb
xor
stos
pop
add
cs
sub
movb
cmp
ljmp
xor
push
xor
push
xor
and
sbb
int3
arpl
and
js
push
sbb
inc
repz
js
rclb
mov
sub
jb
adc
ss
sub
pop
jae
mov
add
fsts
sbb
cwtl
in
enter
ficompl
push
xchg
ds
dec
xchg
movsb
sub
scas
add
mov
and
scas
sti
adc
adc
cmpsb
xlat
sub
dec
int
popa
push
leave
test
ljmp
test
adc
outsl
cmp
sbb
cmpsb
rcll
or
push
xor
or
loopne
shr
dec
sub
fsts
jmp
adc
adc
mov
jp
jb
aas
in
adc
cwtl
movsb
push
push
push
xor
fwait
inc
rcl
pusha
or
lds
test
shl
movsb
pop
sbb
cmp
cs
jns
jno
or
pop
add
enter
dec
sbb
dec
jp
jle
or
push
mov
or
test
aaa
or
sub
mov
and
aad
popa
and
sbbb
inc
not
mov
out
das
insl
cmpsb
jae
fidivs
jge
xchg
lret
jle
mov
and
pop
loopne
sahf
push
mov
sub
and
push
mov
sahf
jbe
call
sub
movsb
imul
or
aam
inc
jnp
cmp
xor
dec
dec
ret
rolb
mov
jno
mov
jae
adc
insb
lcall
sbb
mov
idivb
add
int
cmovb
sub
push
sbb
stos
cmpsl
mov
sbb
and
sti
or
movsb
out
negb
sub
adc
faddl
fstpl
icebp
sbb
test
jle
cmp
dec
adc
inc
pop
or
repnz
sub
and
out
sub
cmp
fimull
pop
mov
mov
jne
imull
push
sub
stc
lret
ljmp
sub
push
mov
mov
cld
inc
mov
ljmp
cmc
cld
xor
mov
inc
push
add
pop
sbb
jo
cli
sub
xchg
in
cmc
scas
jl
dec
xchg
jg
sub
pop
psrld
pop
sbb
daa
dec
inc
daa
cmpsl
cwtl
add
out
cmp
or
lcall
add
pop
adc
cmp
inc
sub
shlb
lret
movsl
xor
mov
and
jmp
stos
jl
int3
dec
setge
mov
lea
icebp
arpl
mov
xchg
cmp
mov
pushf
mov
clc
or
and
and
sahf
add
jo
dec
and
outsl
pop
cmpl
iret
out
push
sbb
popa
clc
aad
adc
dec
test
adc
in
lret
je
out
mov
andb
sbb
je
mov
mov
sub
adc
fadds
std
cmp
push
sbb
xlat
inc
and
notb
mov
cmp
out
fsts
inc
insl
std
xor
popa
push
add
add
inc
sbb
sbb
gs
or
movsb
pop
shll
inc
pop
mov
ret
sub
ss
add
inc
cwtl
add
pop
dec
jg
xor
mov
or
jl
dec
inc
call
xchg
adc
pop
mov
out
sbb
mov
out
xchg
cltd
mov
xlat
xchg
das
shlb
jb
dec
andb
test
mov
cltd
ficomps
or
divb
dec
lods
push
sbb
frstpm(287
cmp
lods
out
xchg
pusha
imul
data16
fisttpll
in
fwait
xchg
in
adc
jae
fidivrl
icebp
sahf
and
jg
in
xchg
inc
ror
sahf
ljmp
scas
or
dec
add
movsl
fstps
push
repnz
xchg
cli
movsb
outsl
mov
mov
xor
sub
jne
adc
aas
xchg
call
mov
cmp
loope
cwtl
push
rorb
clc
and
cmp
jg
fnstcw
pop
xor
bound
les
pop
mov
cmp
jecxz
add
popf
test
loopne
jp
test
mov
sbb
mov
push
gs
sub
pop
and
adc
xchg
imul
lahf
aas
cmpsl
mov
in
push
jle
jmp
inc
imul
out
outsl
xor
adc
ds
out
adc
and
push
dec
xor
push
jo
add
aaa
repz
mov
scas
daa
xor
lret
push
dec
xor
adc
in
ja
subb
sarl
daa
push
inc
sbb
rcll
dec
and
sub
lcallw
cmp
fwait
mov
mov
out
mov
movsb
aas
adc
gs
add
push
jbe
scas
test
mov
lds
pop
cltd
adc
push
std
lea
repnz
sbb
fimuls
add
lahf
loope
sti
hlt
xchg
xor
dec
aam
mov
scas
add
std
or
test
cmp
fmuls
adcl
das
mov
cmp
jge
mov
and
outsl
mov
xchg
addr16
and
sbb
jecxz
pop
xor
dec
dec
mov
push
xor
insl
popa
insl
popa
pop
sub
int
mov
fcomip
dec
cmp
xorb
lea
cld
cmpsb
sub
mov
jno
sbb
mov
pop
pop
popa
jecxz
mov
mov
into
fisubrs
lcall
test
pop
or
aas
push
rorb
dec
lods
or
cmpsl
mov
or
mov
ss
outsb
das
lds
and
call
fstpt
inc
js
insl
and
inc
xor
xchg
mov
in
shll
xchg
enter
jmp
xchg
test
adc
sub
adc
or
clc
cmc
or
imul
push
out
dec
cwtl
xor
mov
sub
jns
loopne
cmp
outsb
fcomps
lret
jl
and
mov
pop
aad
lret
aam
dec
fcmove
inc
jg
push
incb
daa
mov
add
pop
ja
cmp
xlat
adc
rcr
outsb
mov
popf
inc
lock
pop
jg
pop
fnstenv
sti
xor
xchg
les
popf
and
lea
sbb
icebp
jg
shlb
lcall
push
mov
push
inc
fiaddl
ds
das
mov
je
or
and
mov
cwtl
mov
cli
dec
dec
pop
lods
mov
jmp
mov
cmp
pop
dec
scas
addr16
int
scas
test
xchg
xlat
xchg
push
pop
and
or
mov
adc
mov
xor
cltd
mov
call
aaa
insl
test
or
mov
out
out
mov
pusha
xchg
ds
jnp
sbbb
shl
lret
mov
in
sub
xchg
das
lock
mov
sbb
fsubs
stc
inc
js
nop
repz
adcb
cmp
sahf
in
mov
dec
push
mov
mov
cmp
les
aad
cmp
movsl
jo
pop
test
popa
fldcw
push
mov
in
ljmp
jae
and
ss
movsl
jmp
pusha
into
inc
and
add
cmp
fdivs
dec
in
imul
movsb
push
xor
mov
sbb
sbb
sarb
jg
std
ja
push
pop
pop
popf
cwtl
xor
push
fs
pushf
fmuls
int3
dec
mov
adc
iret
push
push
jl
repz
and
lods
inc
ljmp
pop
fsubrs
jb
in
daa
repnz
jns
lret
and
cmp
xchg
cwtl
movsl
or
test
and
stos
inc
push
adc
jl
ja
insb
push
lock
cs
es
mov
nop
movsb
jo
xor
xor
pop
push
or
test
sub
out
scas
test
jnp
mov
loop
dec
insl
int3
daa
xchg
inc
lret
sub
mov
push
push
cmp
adc
pop
mov
mov
outsb
xor
add
mov
adc
pop
mov
jecxz
inc
decb
ret
push
inc
lea
ret
xor
fnsave
xorb
es
adc
mov
mov
sub
test
lds
mov
add
pop
sbb
bound
push
pop
ljmp
fsubrs
in
mov
in
push
mov
mov
mov
xor
xchg
imul
mov
out
cmpsl
push
adc
mov
aaa
jp
sub
pusha
mov
ret
ss
repnz
xor
xor
or
sub
jmp
enter
das
insl
cmp
fbld
repnz
xchg
dec
in
mov
test
sbb
fidivs
fistl
inc
xor
mov
mov
rcr
sub
mov
dec
sub
or
push
in
js
popf
adc
es
inc
divb
in
mov
clc
out
mov
scas
out
test
push
fxch
fwait
mov
xor
xor
shlb
in
mov
maxps
lcall
call
mov
jns
mov
and
adc
cltd
or
jns
pushf
insb
mov
xor
mov
push
jge
imul
jmp
adc
mov
data16
add
scas
cwtl
into
les
cmp
imul
stc
ret
in
mov
lret
mov
cmp
xchg
pop
mov
inc
jge
cwtl
or
popf
adcl
arpl
sbb
jmp
cs
gs
mov
add
push
push
ror
out
dec
out
incb
mov
sub
enter
rclb
std
loop
scas
stc
sbb
sbb
sub
mov
mov
pop
pop
cs
xor
adc
mov
or
pop
dec
popa
ja
sub
or
adc
lcall
out
sub
les
xor
or
dec
fildl
int
out
dec
outsl
fs
jno
pop
mov
jp
mov
psubw
je
insb
sti
je
fisubl
je
cltd
rcrb
loopne
bound
fcompl
out
xor
lret
mov
pop
std
orl
mov
and
das
lds
loopne
pop
or
or
jle
stos
pop
ret
test
dec
lcall
xchg
aad
lret
pop
push
cmp
pop
mov
mov
icebp
pop
shrb
jp
hlt
mov
lods
stos
fwait
mov
lret
fcomps
subl
bound
leave
adc
ljmp
push
adc
mull
inc
xlat
xchg
inc
icebp
sbb
xchg
and
loopne
and
shll
filds
std
ret
inc
push
bound
push
mov
movl
sahf
lea
add
pop
push
insb
cmpsb
xchg
mov
dec
mov
ds
into
pop
jmp
mov
xor
mov
jge
shl
adc
ss
loopne
push
scas
push
dec
repz
divb
jge
aaa
jne
enter
and
int
imul
fisubs
mov
shrl
sti
dec
xchg
xchg
xchg
push
ret
ss
leave
ljmp
fisubs
push
pop
add
hlt
jbe
fwait
and
pop
xchg
int3
outsl
lds
pop
ds
bound
mov
data16
sbbb
addr16
enter
mov
ja
fsubl
aaa
sub
push
cmpb
sbb
pop
in
add
and
shll
sub
jo
pop
mov
stc
fyl2xp1
pop
dec
ds
jl
je
nop
inc
jno
aaa
insb
pop
dec
testb
lret
testb
in
bound
sub
pushf
xchg
sub
mov
sub
ret
mov
popf
xor
idivl
leave
outsb
adc
push
xor
into
in
ss
loop
mov
xor
mov
jp
sbb
jg
or
vpaddw
outsl
das
adc
rcrb
hlt
or
adc
insb
cwtl
sbbb
xchg
lret
mov
sbb
subl
loop
mov
sub
mov
sbb
or
in
xor
add
jno
pop
dec
mov
fisttpll
packsswb
inc
dec
xchg
jno
mov
push
data16
add
adc
jg
dec
push
push
loopne
dec
jg
jne
sub
jmp
inc
or
aam
les
mov
fmul
pop
pushw
adc
insb
mov
insl
push
inc
ret
pop
jp
jle
outsl
out
dec
movsl
sbb
pop
pop
lock
out
push
jbe
xchg
ss
add
imul
jo
imul
or
testl
mov
cmpsl
loopne
push
xchg
cld
jnp
inc
dec
movsb
ss
jmp
fimull
cmp
push
lahf
ret
mull
arpl
in
mov
ret
jmp
jmp
or
mov
push
in
xchg
xchg
icebp
mov
movsb
jp
aaa
xchg
or
lods
adc
jle
cmp
dec
mov
sti
mov
cmp
lea
mov
mov
push
pop
jecxz
and
or
sbbb
insl
inc
call
pop
insb
add
add
leave
movsb
and
pop
daa
jmp
in
xor
js
sbb
imul
xchg
lock
aad
adc
lods
ficoms
mov
or
adc
sbb
adc
dec
push
mov
test
adc
loopne
sti
icebp
in
in
aas
dec
lcall
leave
outsb
int3
lods
in
mov
cmp
daa
pop
xchg
in
lods
add
addr16
cwtl
sub
fs
ret
pop
dec
rorb
loope
testl
imul
shrl
pop
lret
shll
inc
dec
iret
pop
roll
mov
vpmovswb
xlat
add
and
outsb
push
out
mov
lock
mov
or
jle
xchg
sahf
mov
repz
inc
xlat
and
dec
int
outsb
test
lods
js
sbb
mov
pop
push
stos
xor
mov
cli
inc
cmc
push
bound
aas
int3
sub
jecxz
jl
jp
mov
mov
cmpsb
cmp
sbbl
hlt
mov
in
scas
xlat
mov
jo
stos
fdivrl
push
sbb
adc
or
imul
add
adc
push
int3
daa
jge
int3
jo,pt
mov
repz
ss
or
pop
enter
sub
ret
nop
int3
dec
pop
clc
mov
cmp
xchg
outsl
lret
inc
mov
es
enter
arpl
arpl
add
push
test
jle
outsl
fsts
jl
pushf
cs
push
gs
ljmp
lcall
push
outsl
call
lcall
adc
icebp
xor
adc
ja
jl
dec
fwait
xor
cmp
std
andb
scas
out
push
and
pop
sub
mov
in
out
outsb
xchg
mov
sub
inc
push
sbb
fisttpll
push
sti
or
adc
mov
inc
loope
sbb
rorb
mov
sub
mov
jb
xchg
in
dec
adc
lret
loop
add
daa
insl
aas
bnd
imul
movsl
sub
into
in
decb
pop
cli
clc
add
push
or
stc
jge
jle
xchg
add
loope
jno
enter
lods
aad
imulb
mov
inc
xchg
jne
bound
out
fistpll
jbe
adc
aaa
xchg
sub
imul
mov
mov
sbb
or
daa
cld
stos
leave
lods
sbb
jmp
sahf
les
aam
lea
xor
sbb
adc
xchg
inc
testl
sbb
adc
inc
adc
inc
mov
jmp
pop
add
cltd
cli
cs
loope
push
adc
fcmovb
push
std
dec
pop
int3
pushf
fwait
mov
pushf
lods
test
shlb
mov
xchg
fidivrs
and
mov
imul
mov
enter
in
imul
mov
jmp
mull
xlat
fmul
xchg
pop
sarl
add
mov
stc
fwait
lods
aaa
dec
insb
je
push
sahf
pop
shl
sub
popf
pop
dec
fwait
orb
lret
jl
lock
pushf
fs
in
mov
jge
lret
roll
shlb
ror
clc
les
stc
popa
dec
test
xor
inc
sub
push
pop
inc
dec
sbb
add
jno
cmp
pop
pop
and
iret
mov
fnstenv
loop
adc
lret
mov
and
call
or
xchg
inc
xchg
sub
into
shlb
inc
fcomps
cmp
mov
adc
jle
std
andb
cmp
sbb
arpl
inc
fdiv
mov
dec
cmp
lds
jnp
sub
adc
int3
ret
lds
add
push
xchg
fldl
adc
add
push
xchg
inc
mov
pop
adc
push
pop
popa
imul
fwait
cmpsb
cmp
test
lret
fmul
in
in
adc
lods
icebp
jb
and
lret
sarl
mov
cmp
cmpsl
inc
dec
fwait
xchg
stc
mov
pop
stos
xor
xor
jbe
sahf
jp
sbb
jge
rol
or
push
iret
cmp
cmpsl
mov
jnp
mov
xor
jbe
sbb
mov
stos
and
sbb
inc
sar
fsts
movsl
sub
jbe
fld
or
out
iret
mov
lahf
xchg
and
shlb
push
ds
jg
setns
shlb
cmp
rorb
stos
or
mov
rcll
ds
outsl
int3
adcb
mov
xchg
xor
fs
mov
push
xor
sbb
push
movsl
scas
jno
mov
pop
mov
jmp
xor
xchg
jg
mov
add
mov
push
jecxz
test
pop
add
dec
in
jnp
mov
js
insb
bound
push
jbe
pop
cs
cwtl
cmc
int3
jp
ljmp
mov
std
pop
add
cs
out
cmp
xor
out
inc
sbb
jb
pop
mov
pop
js
std
mov
addr16
dec
xor
lods
outsb
lods
rcl
or
popa
sahf
daa
out
int3
adc
iret
mov
data16
or
dec
fstp
out
movsb
inc
notl
xor
lea
hlt
inc
int3
mov
clc
xchg
cltd
mov
ffree
in
inc
stos
mov
outsb
jae
xchg
pop
xchg
push
adc
pop
push
outsb
mov
and
mov
mov
xchg
and
xor
and
pop
mov
and
shlb
test
mov
sbb
jge
sbb
pop
icebp
iret
xchg
and
cli
dec
enter
fcomps
or
loop
mov
dec
pop
sbb
pop
in
add
rorl
stos
xchg
or
idivl
pxor
outsb
int
xchg
fdivp
pop
push
pushf
add
push
push
leave
xchg
sub
cli
mov
xor
mov
sahf
mov
dec
ror
call
jno
testb
es
push
xor
cmp
dec
bound
dec
popa
and
stos
mov
inc
icebp
and
xor
and
mov
shrb
fldenv
fnstcw
stos
mov
dec
mov
inc
je
adc
jo
xchg
test
xadd
aam
sbb
sarb
in
pop
repnz
repz
push
or
jnp
dec
jecxz
popf
movl
inc
enter
sub
decl
frstor
jno
fistps
cmpsl
lahf
lret
mov
repnz
inc
shrb
jge
lret
or
fsubp
jmp
data16
cmp
dec
out
add
ret
dec
cmp
mov
mov
jns
sub
xchg
rcl
repz
popa
cmp
mov
cmc
aas
imul
and
loop
sbb
sub
mov
and
test
dec
cld
ret
dec
clc
add
adc
add
popf
in
and
pop
testb
push
cltd
mov
adc
js
jg
fxch
sbb
mov
or
xchg
and
mov
jecxz
xchg
lcall
imul
mov
push
add
lea
sbb
adc
sub
inc
push
push
pop
jp
test
pop
clc
bound
jg
inc
jl
test
xor
mov
xor
mov
divb
xchg
jl
lds
pop
or
cltd
sub
or
lret
je
xor
push
or
ficoml
outsb
decl
jb
lods
movzwl
inc
and
push
out
test
xor
stc
idivl
fildll
repz
lret
sti
pop
bound
and
xchg
inc
xchg
jnp
lds
movsb
popa
nop
gs
jle
dec
fstpt
and
aad
fidivl
jb
incl
loopne
add
inc
dec
ret
aam
jle
sahf
cmp
pop
arpl
pop
xchg
data16
mov
dec
fcmovb
cmp
adc
and
mov
gs
dec
dec
jp
test
inc
clc
stc
xor
xor
xchg
xchg
mov
fstpt
ror
cld
jno
arpl
mov
ja
sbb
cli
cmp
or
mov
pushw
int3
popf
mov
mov
mov
push
mov
sbb
int
pop
mov
lcall
inc
mov
popa
loop
xor
xlat
jnp
loope
inc
das
je
inc
stos
das
in
jmp
xorb
add
xor
mov
mov
fnstcw
jae
xor
mov
orb
cltd
dec
sar
femms
fwait
and
scas
les
or
jge
push
pop
jmp
jae
dec
push
addr16
sub
scas
dec
cld
ljmp
or
jp
pop
push
movsl
lret
push
inc
js
mov
sbb
mov
pop
push
cs
addl
pop
outsb
push
lret
jge
sub
fs
aam
sub
jecxz
cvtps2pd
mov
cltd
cli
test
cmp
mov
loop
loope
and
cmp
cmp
mov
dec
enter
xor
mov
xor
in
cmp
movsl
repz
popf
fs
sbb
jmp
and
inc
in
stos
insl
sahf
inc
mov
movzwl
or
cmp
aad
insl
iret
pop
movsl
int
fildl
and
dec
adc
clc
xchg
aaa
mov
mov
jb
dec
aad
push
je
pop
push
mov
cmp
xchg
adc
inc
fld
adc
mov
mov
out
mov
cli
out
push
out
mov
pop
insb
xchg
xchg
inc
shll
sbbl
repz
or
repnz
nop
icebp
dec
push
inc
jle,pn
or
ret
push
jo
cmpl
mov
or
mov
ja
mov
push
jmp
or
jnp
push
std
jnp
jne
mov
jl
mov
rorl
push
or
imul
mov
filds
out
xchg
cmp
stc
incb
and
adc
xor
pop
sbb
pop
mov
jne
push
mov
loopne
daa
sbb
rcll
test
xchg
fnsave
mov
imul
hlt
rcl
in
sub
cmp
cwtl
lahf
xchg
pop
test
das
add
adc
adc
leave
cmp
pop
insl
xor
inc
jbe
or
aas
popl
jmp
xchg
push
cmp
adc
xchg
ror
pop
push
dec
jae
jecxz
push
ja
rclb
addr16
and
nopl
mov
cs
in
fdivl
bound
mov
std
sbb
cmpsb
cmpb
in
add
and
je
push
mov
dec
sti
mov
rorl
cmpsb
cli
loop
xchg
xchg
sti
jge
mov
or
pop
call
testl
lret
loope
adc
mov
cmpsb
pop
inc
inc
loopne
pop
cmp
fucomi
les
scas
int
ret
or
jae
sbb
fdiv
sarl
cmc
icebp
mov
inc
scas
lds
sbb
movl
mov
mov
pop
push
cmpsl
je
push
adc
mulb
inc
jns
outsl
sbb
xor
or
dec
test
mov
sti
sti
sub
imul
adc
sbb
les
dec
lahf
pop
push
xchg
xchg
jnp
dec
movsl
inc
sbb
ret
pop
nop
sub
lock
call
fildl
sti
mov
fisubrs
xor
mov
cmc
mov
xchg
dec
xchg
mov
jbe
and
and
dec
mov
scas
jnp
sbb
enter
xor
jo
inc
ret
inc
stos
cmp
mov
nop
les
xchg
in
ret
in
std
lret
xor
pop
fs
aaa
cld
push
mov
lahf
push
add
cmp
mov
xor
adc
pop
dec
fsubrl
xor
outsl
cmp
out
stos
add
hlt
mov
xchg
out
sub
fistpll
in
mov
lods
test
icebp
stc
pminsw
mov
push
sti
inc
lods
movsl
cmp
fs
int
or
lcall
sqrtps
cli
xchg
vpshldvw
xchg
ds
or
inc
dec
gs
mov
mov
test
ja
mov
jo
or
outsb
arpl
addr16
push
jl
mov
and
popf
sub
js
loope
jge
mov
and
and
pop
frstor
mov
call
sub
inc
lcall
and
fs
ljmp
lea
dec
movl
dec
adc
or
add
les
repz
xchg
xlat
push
push
push
lahf
stos
pop
xor
filds
inc
sahf
pop
sbbb
push
push
xor
push
ret
pop
repnz
add
and
icebp
repnz
dec
test
inc
cmp
push
das
dec
jne
push
or
popa
mov
cmpsl
aam
dec
push
xchg
push
and
inc
jl
and
mov
push
cs
stc
push
je
sbb
stc
bound
xor
inc
mov
lahf
ret
add
hlt
mov
je
xor
cwtl
jl
or
mov
test
xchg
sub
adc
fcmovnbe
cmp
mov
inc
mov
and
push
pop
and
fcomps
insl
mov
or
sbbl
je
push
xchg
adc
pusha
xchg
and
roll
cli
hlt
insl
rcll
adc
mov
je
cmp
icebp
filds
movsb
push
xor
dec
dec
jl
orl
aam
lret
outsl
xchg
pop
push
add
add
dec
lods
arpl
pop
mov
jmp
inc
mov
shrl
mov
mov
subl
fwait
mov
pop
js
dec
jne
or
mov
testl
pusha
rolb
sbb
cmp
adc
adc
push
xchg
sub
mov
dec
jno
pop
nop
cld
xchg
sar
mov
xchg
xchg
or
fwait
into
insb
fsub
in
xchg
shr
or
popf
or
xchg
mov
ja
mov
inc
outsb
pop
cmp
das
int
in
inc
push
nop
mov
ret
adcb
es
scas
jle
gs
mov
and
xchg
mov
out
pop
add
or
sbb
xchg
sbb
stos
das
ss
xchg
or
sbb
addr16
cli
aam
insl
shrb
out
mov
cmp
push
in
test
loope
and
sbb
test
sub
dec
shrl
jno
xchg
ret
jmp
fstpl
outsl
loope
clc
int
add
hlt
and
cmp
jmp
icebp
push
and
test
xor
stc
pop
mov
ljmp
or
jne
cmpb
pop
mov
dec
aam
mov
or
xchg
inc
ja
rcll
iret
pop
pop
gs
push
cmp
add
ss
scas
xchg
sahf
aam
mov
xor
pop
insb
dec
xor
adc
jbe
shll
cmp
sub
dec
mov
not
xchg
fistpl
adc
aad
popa
cmp
ljmp
pop
lds
push
mov
mov
sub
mov
sbb
ds
mov
inc
in
xor
lods
in
pushf
cmp
adc
jae
mov
loop
inc
jecxz
cwtl
pop
test
rcrb
aam
push
lret
roll
pop
xor
ror
pushf
xorb
xchg
adc
mov
aad
call
icebp
mov
and
mov
mov
ss
jl
dec
jns
sub
push
pop
icebp
bound
das
pushw
ror
dec
rcr
cmpl
shlb
pusha
mov
lea
pop
cmp
inc
inc
dec
js
shrb
pop
insl
and
jl
or
mov
adc
das
pop
leave
loope
jb
into
adc
push
rdpmc
sbb
sub
mov
dec
xchg
mov
push
andb
stos
xchg
mov
and
outsl
aas
fidivrs
pop
lea
cs
repz
sub
inc
int3
pop
inc
dec
lahf
lcall
or
xor
mov
lods
dec
stos
faddl
sub
daa
push
dec
sahf
xchg
mov
outsb
mov
push
xchg
mov
orb
mov
pop
leave
shlb
movsl
xlat
jnp
xchg
mov
sbb
cld
movsb
or
pop
fisttpl
outsl
sbb
or
test
and
out
sar
jno
jns
push
test
dec
ss
pushf
insb
mov
and
push
test
cmpsl
adc
adc
data16
aam
test
inc
or
dec
add
push
mov
mov
aad
mov
jmp
repz
sub
ds
imul
dec
inc
neg
pop
cmp
adc
fsts
outsb
sbb
inc
cmpsb
add
push
inc
scas
xor
rcll
lods
mov
cli
xlat
mov
push
mov
es
adc
out
fldt
filds
jp
xchg
jp
subb
pop
jb
insl
mov
pop
xor
and
pusha
push
roll
sbb
jae
fldl
ds
hlt
scas
sub
xor
cltd
inc
jbe
mov
cli
test
cltd
aaa
repz
mov
xlat
cld
inc
ss
sub
data16
fcomip
repz
mov
out
xor
pop
or
xchg
int
cmp
test
sub
xchg
adc
jp
push
out
loop
xchg
xor
adc
xchg
jge
sub
push
cmp
arpl
pop
call
divb
or
push
jae
jns
inc
push
jae
ss
cmp
enter
adc
in
xor
mov
aas
add
xor
sub
xor
and
mov
add
pop
lods
sbb
int3
shrl
shll
and
sub
dec
inc
jecxz
jg
mov
ret
pop
fisttpll
dec
add
pop
cmc
xor
fsubrs
iret
mov
pop
jo
imul
stc
nop
and
daa
sbb
lock
insb
adc
jns
push
sbb
push
pop
sbb
push
inc
cmp
xor
mov
dec
sbb
jg
arpl
andb
repz
mov
cmp
out
in
pop
in
xor
pop
repz
jge
fcoms
inc
adc
imul
fsubl
test
mov
shr
add
jo
or
xchg
dec
adc
mov
loopne
fwait
inc
loope
aaa
cmp
addr16
push
mov
bound
movl
enter
lds
add
add
or
gs
xchg
ret
mov
out
fisubl
fsubr
test
jne
pop
loop
in
insb
subb
std
pop
adc
arpl
pop
xchg
xchg
mov
add
rclb
mov
sbb
sarb
mov
std
addr16
loopne
dec
adc
orl
pushf
sub
test
jae
adcb
push
jg
int3
ja
pop
xor
bound
sti
and
bound
adc
sub
and
repnz
jmp
and
in
or
daa
mov
push
imul
pushf
mov
faddl
movsb
popa
adc
inc
out
mov
pop
jp
mov
xchg
and
mov
jnp
adc
push
sbb
sar
cmp
xchg
shll
dec
or
iret
xor
shl
cmpsb
add
lcall
cwtl
xor
dec
sub
or
repnz
mov
mov
mov
mov
jecxz
popf
inc
inc
dec
stos
mov
mov
sub
pushl
dec
and
mov
jo
mov
push
and
fldcw
cmpb
jmp
xor
jno
lock
test
lret
mov
aas
shlb
push
repnz
hlt
cmp
popf
inc
push
push
xor
adc
sbb
jne
fistpll
xlat
ss
lock
je
dec
loop
out
loop
mov
inc
sub
sub
ret
adcb
dec
push
stos
push
nop
inc
outsb
pusha
ret
add
push
fidivrl
jmp
add
mov
or
adc
fstl
mov
sbb
sarb
imul
orl
jb
mov
loop
mov
sti
repnz
pop
loopne
cld
push
and
add
add
pop
and
fcmovnb
jne
dec
icebp
cwtl
or
popf
lods
scas
push
inc
and
mov
push
test
jns
xlat
xchg
sub
xchg
aas
fstl
cltd
and
inc
pop
ds
in
fcoms
sub
push
xchg
mov
sbb
das
je
or
pop
jmp
neg
pop
jecxz
faddl
jbe
movb
in
insb
and
jge
cmp
mov
arpl
loope
jp
sub
mov
cwtl
xchg
pop
or
lods
in
shrl
mov
mov
and
and
cmpsb
ja
fistl
aam
movsb
mov
cmp
loop
test
sbb
dec
popa
push
jnp
sub
lock
mov
inc
cld
mov
call
jae
sub
jmp
cli
and
repnz
inc
es
aas
cmp
dec
ss
imul
xor
outsl
sub
adc
pop
sbb
jecxz
aam
jne
cwtl
mov
add
cld
sbbl
ret
outsl
inc
and
sti
jecxz
lds
mov
fnsave
and
xchg
decl
jne
adc
mov
daa
ds
sbb
int3
into
sti
adc
mov
adc
jne
lahf
sub
mov
or
pop
push
loopne
insb
imul
or
rorl
mov
icebp
outsl
pop
rolb
ret
dec
jmp
je
mov
scas
ljmpw
mov
es
mov
aas
hlt
lods
mov
loop
add
inc
push
pop
xor
into
iret
mov
ja
pop
data16
insb
jp
and
sub
inc
mov
inc
fnstenv
dec
cli
mov
fisubrl
into
fwait
jnp
rclb
sahf
insb
imul
jnp
sbb
and
sbb
cmc
inc
les
leave
loop
lahf
sarb
mov
cmc
mov
rclb
loopne
into
and
addl
adc
mov
lcall
fs
sub
subb
lds
and
lock
push
inc
jmp
imul
test
sahf
xlat
lds
mov
inc
dec
sti
leave
mov
pop
jne
rorb
mov
adc
repz
add
jbe
rorl
out
dec
mov
pop
xor
arpl
adc
clc
daa
push
push
mov
int
call
repnz
jecxz
std
mov
mov
rorb
cmp
sbb
in
xchg
mov
jo
adc
and
in
ljmp
pop
mov
pop
mov
neg
mov
hlt
jns
jo
mov
repz
das
test
addr16
dec
and
jno
jae
rcll
add
ss
aas
xchg
mov
sbb
cmp
dec
mov
jbe
fdivs
ret
mov
mov
test
fwait
dec
fldt
ret
ret
std
mov
pop
mov
mov
lcall
movl
int3
jge
ja
push
mov
jbe
xchg
xchg
cwtl
jnp
mov
clc
mov
pop
lcall
cmp
in
lret
out
repnz
fnstcw
inc
adc
dec
cmc
cltd
notl
fmuls
fsubl
adc
into
and
ret
mov
sub
mov
jnp
add
in
stc
icebp
inc
jb
fldenv
sbbb
ds
or
test
mov
sub
pop
std
jg
xchg
xchg
inc
xchg
mov
ret
inc
out
test
dec
popf
aad
repnz
sub
imul
in
pop
xchg
test
in
iret
in
loope
pop
into
adc
lods
or
xchg
xchg
pop
clc
dec
in
xor
std
scas
ja
add
fiadds
test
daa
inc
mov
cltd
sti
ds
or
mov
cmpsb
jne
push
mov
call
cmc
repnz
mov
pop
mov
inc
push
leave
add
imull
jp
scas
clc
or
or
jmp
out
dec
mov
sub
xlat
imul
adc
fildll
fdivr
push
rorl
inc
inc
inc
fsts
mov
mov
xchg
shrl
nop
add
das
dec
scas
pop
and
movsl
cmp
aam
push
pop
inc
shrb
xor
jae
test
sub
dec
jb
and
scas
or
fnstenv
repz
lcall
js
mov
or
loop
dec
in
ds
imul
or
xor
pop
xchg
jns
test
sbb
mov
in
sbb
in
xchg
inc
rcrb
loope
leave
pop
or
daa
in
arpl
jae
bound
pop
test
jae
jo
mov
cmpsl
mov
or
mov
mov
sbb
lea
jecxz
mov
xchg
mov
and
repnz
cmp
xchg
mov
shll
lret
jno
pop
cld
leave
test
daa
adc
aas
sub
in
dec
lock
movsl
out
out
cmp
pusha
ret
or
jne
dec
out
xchg
jp
ret
xchg
ljmp
addr16
das
jmp
cmc
outsl
and
aad
xor
es
inc
mov
lret
ss
mov
ja
in
dec
lock
or
or
sub
ja
test
incb
negl
aad
jle
push
pop
mov
out
jae
or
dec
sti
iret
inc
and
jg
push
out
pop
into
shlb
dec
outsb
bound
mov
push
pop
dec
sub
inc
cs
or
pop
call
fdivrl
out
fxch
aas
sbb
nop
push
inc
fsubs
leave
jnp
mov
cltd
pop
xchg
mov
add
sbb
push
jmp
cmpsl
mov
scas
inc
stc
invd
cmc
fstpl
test
sti
rolb
sbb
sarb
mov
andb
rcl
mov
cli
js
pop
xchg
filds
daa
pop
fidivrs
push
mov
stc
pop
pop
push
ret
xchg
dec
outsb
push
mov
pop
push
jecxz
popa
iret
jg
push
mov
or
lock
or
int
jnp
jecxz
inc
add
aam
data16
ficomps
sbb
popa
outsb
adc
loop
ret
xchg
pop
mov
mul
les
cmp
cmp
jae
add
pop
inc
xchg
movsb
leave
outsl
out
mov
jge
and
cmp
adc
and
fcoml
mov
test
into
add
sbb
inc
movsl
orl
mov
pusha
inc
imul
push
ret
pop
xchg
push
cmp
xchg
loopne
inc
inc
loope
jno
into
adc
aas
icebp
mov
jmp
rcr
daa
or
xor
outsl
lea
iret
pop
xor
add
cmc
cmp
movsb
push
negl
popa
xor
and
jns
dec
mov
imul
and
aas
jmp
xchg
in
movl
ss
adc
imul
sub
sub
pop
dec
cmp
sbb
push
add
jecxz
or
add
cs
inc
outsb
push
faddp
sub
mov
test
jae
push
sbb
mov
test
sub
and
out
sub
jmp
adc
push
bound
daa
addr16
cld
stc
sbb
sbb
stos
ja
xor
dec
add
xor
cmp
in
pop
insl
cltd
xor
addb
pushf
cmc
xor
sub
mov
mov
jo
aad
sahf
xorb
flds
into
cs
pop
fisubl
cmc
fimull
add
push
subl
jno
fisubrs
dec
imul
sub
xchg
popf
scas
aas
inc
pop
dec
xchg
orb
int3
xchg
hlt
inc
dec
and
test
mov
jg
lcall
mov
add
jb
ss
scas
dec
adc
mov
ret
fucomi
insl
pop
xor
sarb
lea
jae
lods
xchg
cmp
pushf
lock
sub
mov
inc
push
or
sbb
xchg
push
mov
cmp
shl
pop
dec
ficompl
stos
adc
loop
xchg
jne
imul
xchg
inc
lods
fildll
xchg
cmp
cmp
adc
fwait
jmp
xchg
jecxz
int
sbb
jmp
ljmp
repz
fdiv
jnp
and
cmp
jns
or
push
jnp
or
outsl
jge
lods
leave
dec
aaa
push
fsubrp
xor
test
mov
mov
or
mov
stos
jge
call
sbb
in
or
inc
adc
aam
sub
jl
pop
rcrl
push
xchg
cmpsl
ret
scas
shrl
mov
and
enter
add
fwait
sub
xchg
and
fildll
pop
pop
rclb
jmp
das
test
jmp
adc
test
pop
leave
mov
mov
lret
mov
push
add
push
movsl
cmc
push
mov
cmpsl
sbb
cld
aad
inc
cmp
loope
jno
adc
add
cmp
pop
xchg
cmp
jp
sub
adc
pop
sub
popa
cmp
cmp
jae
sti
mov
inc
push
adc
out
add
xor
cmp
ficomps
pop
mov
aaa
xchg
mov
sub
xchg
push
pop
mov
mov
and
dec
sbb
push
mov
mov
into
inc
mov
mov
mov
bound
scas
xor
aad
jle
push
fldt
mov
es
aam
dec
jns
cmp
shlb
cmp
lret
lods
int3
rorl
cmp
sahf
sub
sbb
sti
xlat
pop
aaa
call
mov
mov
call
cld
popl
mov
in
mov
lods
jge
call
js
not
lods
push
xchg
lock
sbb
loop
rol
cmp
inc
cmp
xchg
lret
mov
mov
scas
inc
mov
arpl
xchg
popa
mov
sub
push
pop
cld
es
xchg
test
hlt
mov
mov
push
sub
and
and
mov
mov
testb
mov
in
mov
gs
add
sbb
xor
ja
in
pop
rolb
sti
loopne
mov
inc
jne
pop
scas
adc
mov
cltd
sub
bound
imul
push
pop
push
ret
inc
push
push
loopne
cmpsl
or
negb
or
aas
gs
icebp
adc
cmp
cwtl
xchg
pop
je
xor
add
push
mov
push
fdivl
add
ds
mov
add
dec
xchg
inc
lcall
out
xchg
or
aam
cmp
pop
jns
jno
aas
mov
aaa
pushf
xchg
push
or
insb
jae
and
lret
out
je
jmp
and
jae
inc
jmp
subb
sbb
mov
leave
mov
shlb
inc
sbb
push
leave
test
sbb
ja
scas
jae
push
xchg
ret
jno
dec
push
popa
loopne
daa
fsubp
dec
int
imul
xchg
cmp
fsubrs
stc
push
clc
sti
ljmp
inc
fcomps
inc
lcall
cmp
add
xchg
mov
sbb
adc
mov
ljmp
pop
jb
testb
adc
dec
cmp
ljmp
or
xchg
gs
mov
xchg
call
push
xchg
shlb
mov
add
adcb
call
sub
mov
in
sbb
lret
clc
pop
test
sbb
or
aaa
fadd
in
iret
xchg
add
mov
out
adc
xor
pop
dec
outsb
and
sbb
inc
dec
and
cmp
imul
ljmp
mov
cltd
mov
mov
call
insb
notb
adc
push
aas
sbb
adc
mov
adc
shl
inc
lret
lret
pushf
les
mov
repz
pop
sti
call
sub
mov
scas
lods
push
dec
mov
push
lahf
call
shrb
mov
push
adc
pop
cmp
imul
fimuls
sbb
jmpw
sbb
xor
inc
adc
fwait
or
xor
imul
adc
cmp
jmp
mov
das
cmp
dec
fst
push
icebp
sahf
or
lods
xor
int3
add
cltd
and
out
stc
popa
out
daa
sti
dec
test
push
hlt
outsl
push
rolb
pop
add
jg
std
mov
aad
lret
cmp
nop
lods
sub
add
mov
fwait
xchg
mov
inc
jle
loopne
xchg
ss
hlt
push
dec
push
jne
dec
push
adc
pop
daa
inc
lds
jge
adc
or
adc
into
dec
pop
jp
repz
or
ss
pop
in
pop
daa
aas
xor
sub
fmuls
popl
jnp
and
jae
or
sbb
or
mov
dec
sub
clc
mov
cmp
and
xor
pop
push
inc
ljmp
call
xor
lret
jg
jns
cmp
dec
add
add
out
add
int
outsb
mov
ret
jb
int
jecxz
es
rcrb
jle
outsb
sahf
xor
pop
outsl
stos
fiaddl
movsb
fdivl
stos
icebp
push
jae
mov
mov
in
inc
in
pop
js
movsb
out
out
pop
mov
add
jmp
fnstcw
xor
das
imul
jno
mov
or
push
sub
movsl
movsb
jecxz
add
sub
xchg
std
pop
push
xlat
sbb
adc
pop
cmc
xchg
jmp
scas
xchg
mov
mov
and
push
sub
sbb
mov
adc
test
mov
cwtl
fildl
scas
cmpsl
jo
in
mov
adc
jae
mov
arpl
push
or
imulb
xchg
and
aad
push
aaa
mov
addr16
getsec
or
icebp
shlb
roll
add
cmc
xchg
sbb
xchg
lahf
mov
icebp
xorl
push
int
test
test
mov
icebp
sbb
pop
inc
fdiv
mov
punpckhdq
sti
jecxz
mov
das
mov
insb
clc
push
lods
in
lods
cwtl
es
xor
les
std
or
icebp
xchg
jbe
lock
pop
mov
and
xor
popa
push
loopne
ja
xorl
mov
add
addr16
xor
enter
dec
into
data16
iret
in
or
pop
push
loopne
sti
and
push
scas
fs
out
push
movsl
outsl
js
sub
mov
imul
cmpsl
xchg
lret
dec
pop
xchg
mov
push
mov
outsb
mov
push
sub
add
dec
xchg
xor
sbbb
cmp
imul
xor
mov
inc
jmp
mov
jns
sub
sbb
push
insl
jae
push
cmp
icebp
fwait
pop
add
imul
fsts
mul
pop
cmp
emms
hlt
lds
xor
ljmp
xchg
add
mov
sbb
mov
pusha
cs
jbe
out
test
jns
dec
xchg
lds
aam
fwait
cmpsl
in
xor
inc
xlat
test
fsubp
lea
test
xor
push
adc
stos
xchg
sbb
xchg
scas
shrl
mov
fildl
sub
lret
jle
outsl
mov
pop
inc
cmp
inc
sub
mul
popa
push
dec
insb
xor
push
rorl
addr16
cmpl
push
jnp
sub
or
or
insb
insb
mov
jnp
adc
or
push
and
dec
jns
fsubrl
imul
aad
ss
scas
hlt
jg,pt
sub
ja
inc
mov
pop
outsb
mov
loopne
shll
cmp
or
mov
jmp
and
je
mov
pop
scas
pop
jl
int3
fs
roll
lds
mov
push
popf
mov
aaa
fs
inc
add
mov
iret
lret
xchg
cmpsl
addr16
and
xor
pop
jne
add
xor
inc
add
and
xorps
rcl
leave
pop
jle
pusha
pop
xchg
ss
and
mov
shlb
std
pop
addr16
stc
ljmp
xor
mov
ljmp
movsl
xchg
cmpsb
pop
js
addl
sub
pop
aas
loopne
mov
sbb
push
and
mov
push
push
cmp
fcom
cmp
jle
loope
mov
or
lea
add
add
sarl
push
mov
scas
popf
lcall
loop
mov
jbe
mov
in
xor
das
fldt
sarl
imul
rorb
sbb
into
dec
lds
fadds
movsb
mulb
int
aas
and
fcompl
cld
fnstcw
mov
mov
sbb
daa
mov
or
inc
int3
daa
pop
imul
lahf
jle
mov
into
movsl
arpl
aad
xor
mov
mov
mov
lds
and
cmpsb
and
cmp
jo
push
jbe
or
and
dec
test
cmc
repz
roll
mov
dec
pop
push
ja
fcmove
int3
enter
pop
sbb
jno
or
or
mov
xchg
inc
notrack
icebp
or
sub
sub
adc
out
iret
clc
aaa
add
and
and
xchg
push
pop
sbb
insl
xchg
mov
lods
std
push
cmp
xchg
sub
les
pop
dec
mov
sbb
daa
jecxz
or
push
roll
bound
rolb
js
mov
cmc
add
inc
cmp
pop
push
inc
or
xchg
pushf
in
movsb
icebp
das
mov
hlt
test
cmpsl
mov
xor
daa
scas
add
inc
xlat
pop
mov
push
inc
test
mov
or
divb
sbb
add
xchg
push
push
lahf
mull
inc
rorl
fistl
and
adc
into
test
xchg
lock
js
xchg
mov
std
lock
add
push
outsb
push
jo
in
sub
mov
les
jns
or
jecxz
test
movsl
mov
sbb
jb
lea
jecxz
sahf
mov
xor
std
push
insl
sub
addr16
lock
dec
or
add
jmp
mov
js
push
pop
sub
rcl
xchg
adc
push
cmp
mov
jp
fcoms
cs
sbb
pop
rolb
push
push
dec
iret
mov
std
pop
pop
scas
dec
xor
sub
lock
fwait
int3
jne
je
popf
or
xchg
dec
jne
nop
mov
push
dec
push
in
jecxz
sub
insb
incb
mov
lds
inc
scas
aas
dec
inc
rcrb
aas
inc
ret
aas
fistps
hlt
add
ljmp
add
or
repnz
and
dec
mov
cli
mov
dec
pusha
push
dec
cltd
repnz
jne
cli
push
test
jg
pop
jecxz
pop
and
inc
mov
in
cmp
dec
adc
leave
popa
test
add
dec
mov
jne
cld
mov
or
sub
add
lahf
add
xchg
dec
test
movsb
cmpsl
loop
jp
push
pop
dec
loopne
pop
xchg
xchg
sbb
hlt
pusha
enter
mov
stos
lahf
cld
movsb
mov
outsl
pop
xchg
arpl
dec
stos
mov
dec
or
fldl
mov
xor
arpl
cmp
mov
bound
push
hlt
xor
mov
outsb
cli
jns
dec
lret
push
push
and
bound
cltd
jnp
jp
and
rolb
cmp
adc
add
adc
add
and
pop
inc
ds
sbb
cltd
ja
test
repz
in
lret
ds
cmp
sti
js
lods
mov
cli
popf
int3
lods
cmpsb
xor
fildl
xor
cmpsl
lods
jl
loop
fsubs
in
lret
sti
dec
imul
loope
test
outsb
sahf
xorb
sbb
ret
adc
mov
stos
push
dec
and
sub
xor
jne
into
and
stos
xchg
fldcw
arpl
push
nop
enter
mov
and
mov
adc
pop
jno
mov
adc
push
push
test
test
subl
jb
aas
xchg
enter
fnstenv
lret
in
push
jae
jb
and
lods
mov
inc
jb
pop
divl
mov
mov
fisttpll
idivl
les
lret
and
mov
push
and
shrl
mov
sub
fists
adc
test
test
mov
stc
mov
xor
mov
sbb
adc
pop
xorl
repnz
lds
sub
lods
fnstenv
pop
and
repz
jg
ja
sbb
or
pop
pop
gs
fwait
lods
orb
pop
call
dec
dec
movsl
mov
push
add
cmp
xor
pop
test
int
bnd
aas
cld
xor
outsl
xor
and
ja
outsl
addl
stc
xlat
sarb
add
rcrb
mov
or
outsb
push
int
xchg
fnstsw
movsb
out
pop
and
addr16
add
inc
cmp
push
push
sub
rcll
sub
int
loopne
aam
sub
out
shlb
nop
mov
and
inc
sub
xor
fldt
fstpl
dec
cmpsb
jg
mov
addr16
mov
inc
mov
xchg
call
repnz
cmpsb
sbb
test
movsl
popf
testb
outsb
or
int3
mov
or
lahf
cmp
add
sbb
lcall
in
dec
lcall
lods
idivb
adc
out
fdivrs
addr16
imul
add
mov
in
inc
fsubrl
push
adc
mov
push
enter
fidivl
lcall
inc
icebp
sub
sub
xor
sbb
bound
xor
roll
das
imul
or
push
dec
xchg
popaw
push
dec
push
scas
xchg
adc
mov
adc
lret
mov
xchg
cmp
pusha
xchg
mov
aaa
and
adc
movsl
and
fcompl
adc
out
cwtl
mov
sub
cld
mov
outsl
dec
fldl
dec
adc
pop
xchg
jo
sub
out
mov
iret
ja
inc
mov
es
iret
fmuls
mov
mov
int3
mov
pop
pop
sub
pop
cmp
mov
dec
stos
das
xchg
pop
stc
dec
add
xor
repnz
or
add
in
push
and
cltd
cmc
addl
or
adc
mov
stos
test
push
lods
pop
mov
imul
mov
ljmp
int3
cli
pop
mov
enter
popf
and
inc
xchg
mov
xchg
ds
mov
sahf
scas
jae
cmpsb
arpl
inc
pop
lods
in
lock
xor
cmp
aam
or
loopne
in
adc
lcall
push
lcall
into
fcompl
push
dec
jecxz
jmp
add
push
jo
cltd
repnz
popf
pop
xchg
hlt
in
addr16
sbbl
or
add
xchg
pop
mov
cmpb
jo
divl
aas
lods
dec
dec
jno
les
jne
enter
add
cmp
fdivrl
lock
push
mov
xchg
cmp
cli
mul
ret
sbb
test
or
inc
mov
mov
mov
push
inc
std
push
push
cmp
adc
push
inc
pop
test
leave
sbb
cmp
push
mov
inc
cwtl
xchg
adc
ret
cwtl
cltd
mov
test
ss
repnz
xor
ja
les
std
data16
mov
hlt
out
and
enter
adc
mov
mov
and
inc
test
fwait
lds
sbb
stc
cmp
ret
dec
xorb
dec
mov
pop
mov
lea
mov
aas
dec
mov
ret
or
adc
push
int3
cmpsb
add
fidivrs
xchg
jno
in
mov
ds
in
shll
mov
pop
jb
jl
test
xor
pop
out
jge
sbb
testl
mov
inc
mov
add
and
mov
and
cmc
or
shlb
mov
push
mov
adcb
push
call
rcll
stos
or
and
mov
push
lds
mov
push
ficoml
fwait
or
cmp
cli
in
in
hlt
jne
inc
jge
push
std
push
sbb
fstl
mov
push
cmp
mov
pop
jle
add
lahf
insb
push
jl
out
gs
sbb
incl
mov
repnz
jbe
mov
fstl
loopne
jmp
xchg
mov
jmp
lret
or
inc
daa
mov
bound
movsb
fisubl
jb
inc
and
movsl
jo
dec
jo
fcmovb
push
es
sti
mov
in
sub
xchg
cli
test
ds
jae
insl
mov
pushf
push
cwtl
adc
adc
aad
fcompl
mov
mov
xchg
dec
mov
jne
popf
xchg
mov
dec
inc
sub
pop
imul
push
adc
stos
in
adc
leave
jmp
aas
sub
int
pop
stc
lods
sbbl
xor
push
in
movsl
test
and
movsl
inc
lret
jbe
int
shll
rep
std
xchg
loopne
scas
cmp
xchg
jmp
add
sbb
push
movsl
ret
in
mov
test
adc
add
rolb
sub
jno
inc
stos
lock
xchg
xor
int
out
fdivl
jne
xor
mov
cmp
cwtl
lods
push
mov
cli
je
add
or
mov
mov
or
xchg
jb
sub
outsl
mov
call
sbb
push
adc
xchg
mov
mov
xchg
mov
and
orl
jb
adc
mov
insb
or
pop
jmp
testl
cld
mov
lret
jae
icebp
mov
pop
jl
stc
sarl
adc
scas
repz
mov
dec
out
lods
inc
inc
outsl
pop
push
mov
mov
lahf
cmp
add
jne
rcl
rcrl
inc
mov
mov
dec
lods
xor
cltd
xchg
jp
sub
xchg
xor
push
daa
push
das
xchg
inc
stos
ret
inc
and
inc
adc
xchg
mov
pop
fsub
pop
addr16
sub
aam
rcrl
dec
out
test
sub
in
dec
push
xchg
push
and
and
rolb
cmpsb
cli
in
movsb
push
cmp
adc
cmp
in
inc
scas
add
loop
add
or
jmp
jne
mov
ss
je
or
push
stc
ret
jne
sub
jmp
and
sbb
ja
jl
dec
xchg
popa
push
cmp
or
push
jbe
iret
data16
mov
fmuls
pop
addr16
shlb
mov
adc
jns
push
xchg
enter
ljmp
or
imul
test
mov
test
scas
dec
daa
in
int
mov
dec
pop
sub
mov
stos
cmp
out
and
ds
loop
aas
test
loope
dec
js
aaa
jnp
lods
movsl
pop
xchg
dec
fidivrs
dec
pop
sahf
insl
in
jbe
sub
into
je
mov
call
test
outsb
sub
jbe
lds
je
xor
pop
mov
xor
or
stos
mov
das
ret
xchg
adc
ljmp
aad
pop
or
mov
lds
mov
push
fidivl
cs
mov
push
sub
xchg
cmp
andl
fmull
adc
pusha
stos
mov
push
loop
push
xchg
subl
ds
test
and
sub
outsl
xchg
mov
sbb
rclb
xchg
jae
or
or
ret
jo
mov
ljmp
mov
stos
jnp
mov
inc
mov
add
rcr
pop
dec
fwait
out
xor
push
dec
cmc
or
mov
sbb
mov
outsb
push
out
mov
jle
pop
mov
jo
cs
cli
lods
fisubs
mov
xchg
sbb
cmc
dec
ss
pop
dec
addr16
mov
shrb
test
repnz
mov
cwtl
out
lds
aad
outsb
push
andb
aaa
push
pushf
jno
repnz
and
inc
mov
push
or
fimull
into
lds
or
aam
dec
xor
mov
rorl
or
sub
stos
in
int
call
xchg
inc
or
pop
and
xchg
fmul
cmp
fwait
inc
push
cmp
push
push
sbb
xchg
test
sti
pop
cmp
pusha
push
fcomp
dec
clc
adcl
xor
out
int3
push
dec
cmp
stos
or
jbe
mov
outsl
sahf
or
sbb
sbbl
xor
mov
dec
dec
vpshufhw
lods
push
enter
or
inc
jns
inc
and
int
pushf
sbb
mov
movsl
in
and
add
mov
and
leave
hlt
jp
popa
mov
mov
push
outsb
enter
inc
imul
into
fdivr
cld
inc
pushf
cld
and
in
or
dec
rcr
push
dec
mov
xor
or
test
lock
mov
negl
xor
pop
fidivrs
out
fs
mov
cld
pusha
decl
cmp
pop
xor
ljmp
lahf
inc
inc
inc
jle
xchg
in
mov
sbb
outsb
cmp
dec
add
xchg
sbb
ret
imul
jg
iret
push
cmp
cltd
jbe
stos
push
movsl
xlat
inc
test
push
mov
das
lahf
xchg
xchg
mov
pusha
loopne
sub
enter
mov
inc
sti
pop
aas
mov
or
clc
push
sbb
jge
cmpsb
les
adc
ret
pop
sti
fmuls
pusha
jmp
shrb
sbb
xchg
loop
aad
sbb
pop
aam
pop
xor
fs
push
ja
loopne
imul
call
lock
sbb
pop
push
pop
in
dec
repnz
adc
setge
jne
mov
lahf
push
xchg
mov
push
call
inc
xor
inc
pop
sbb
sub
pushf
lock
aas
jne
add
sub
ljmp
in
int3
adc
pop
shrl
ds
dec
stos
mov
testl
jl
lcall
mov
repnz
dec
test
adc
adc
jp
aad
call
and
sub
push
adc
adc
dec
push
mov
sub
daa
or
add
mov
call
dec
mov
pop
mov
stc
sub
push
jle
sub
and
ds
ret
in
or
jno
sub
bound
sbb
mov
mov
dec
pusha
mov
sub
jbe
xlat
shl
jnp
ret
shrl
divb
xor
adc
push
sbb
and
ljmp
dec
fcoml
mov
push
push
push
pop
in
jge
idivl
push
cli
test
mov
add
sub
fs
add
or
das
pop
mov
inc
cwtl
add
pop
mov
jmp
aas
lret
mov
movsb
ljmp
mov
fbstp
xor
mov
cli
mov
outsb
push
cmp
sti
cmpsb
push
adc
pop
push
pop
push
shl
pop
add
jmp
or
cmp
enter
sbb
pop
fwait
jnp
push
jb
sbb
mov
push
jge
nop
test
cwtl
sbb
daa
call
cltd
fldenv
idiv
mov
jae
xor
int3
inc
scas
sbb
pushf
lcall
mov
mov
mov
dec
in
sub
or
repz
xor
mov
aas
popa
and
insb
push
and
test
clc
mov
lea
adc
push
dec
in
push
jge
add
bound
mov
mov
sub
popf
test
add
dec
cmp
and
mov
inc
or
push
outsb
fld
js
jle
push
scas
or
or
xchg
movsb
sbb
seto
aad
mov
leave
push
out
xchg
or
or
sbb
and
stc
add
pop
or
jge
pop
push
and
push
lods
sub
fdivrp
pop
push
aad
mov
mov
cmp
int3
stos
rdmsr
pop
jbe
mov
push
mov
push
cmp
add
mov
push
pop
test
out
adc
jno
xor
fwait
add
mov
outsl
pop
sbb
mov
cmp
mov
call
xchg
movsb
or
sbb
stos
outsb
cmp
xor
pop
add
icebp
sub
or
fcoml
push
inc
cltd
ret
push
adc
adc
pop
inc
pop
cltd
lds
xor
mov
fldl
or
movsb
scas
bswap
sbb
jbe
cmp
pop
add
popf
adc
or
into
movsb
popa
mov
lock
in
adc
or
jnp
dec
xchg
xchg
loope
dec
xchg
lea
std
movsb
mov
pop
shrl
lea
outsb
sub
cmp
inc
lods
andb
imul
push
aad
cmp
add
or
sub
in
stos
loope
or
scas
fwait
jmp
adc
xchg
clc
or
cmp
and
add
jnp
jb
scas
jne
stc
aaa
adc
push
ss
pusha
dec
jl
xchg
out
repnz
test
xchg
insb
popa
lods
lods
inc
sbb
mov
in
mov
out
inc
inc
add
inc
mov
test
nop
sbb
sub
adc
xchg
pop
jp
jl
sbb
outsl
xor
and
cmpb
push
loope
cmp
out
mov
dec
mov
lea
sub
mov
mov
push
das
enter
popl
xor
xor
popf
fwait
push
xchg
pusha
inc
or
cmova
in
sbb
xchg
ss
mov
sbb
addb
in
loope
pop
movsl
imul
addr16
jo
popf
xor
cmp
je
mov
int
lods
pop
in
dec
shrb
pushf
enter
push
setle
push
test
adc
xchg
mov
xchg
fmulp
inc
pop
lahf
outsl
xor
jno
push
pop
popl
dec
aam
in
movsb
mov
loop,pn
stc
cli
xor
jmp
int
mov
and
push
xchg
mul
sub
pop
lahf
or
xorb
lods
fwait
ds
pop
pop
ficoms
add
mov
jb
mov
sub
mov
mov
in
loopne
fwait
mov
mov
jbe
jo
mov
mov
fildl
push
fldl
dec
dec
outsb
scas
sub
das
dec
and
push
pop
jnp
xchg
out
mov
js
mov
rorb
fildll
xor
dec
addb
push
lock
jg
jecxz
out
aad
xchg
push
ss
lcall
popf
shrl
lret
rclb
fcmove
ljmp
mov
cmp
dec
adcl
test
pop
push
movb
mov
outsb
ja
sbb
outsb
mov
push
mov
mov
mov
push
xor
cs
shrb
lods
jl
data16
shrl
std
push
test
nop
xchg
sbb
pushf
adc
push
sub
pop
inc
lahf
mov
shrb
lods
dec
ss
imul
inc
jnp
pop
lahf
adc
int
nop
repz
movsl
lahf
cmp
lcall
dec
sbb
test
xor
aam
adc
push
pop
xor
in
or
jns
jmp
jb
sub
jle
cmp
push
outsb
ret
aam
sbb
fwait
inc
fchs
and
and
sub
scas
cmovge
nop
cmp
sbb
stos
aaa
cmp
stos
xchg
add
cwtl
mov
push
add
jbe
stos
insl
jge
xchg
test
rcrb
gs
xrelease
leave
xor
push
jns
adc
xchg
scas
pop
jbe
repz
sbb
js
cmp
sti
jle
call
push
pop
jns
push
mov
jns
or
xor
cli
stos
or
cmp
cs
dec
test
push
push
aam
push
hlt
sarl
adc
and
cmp
inc
push
insb
add
cmpsb
ja
in
notl
inc
into
rclb
sbb
sbb
inc
sub
insl
les
xor
sub
loopne
scas
arpl
xchg
xor
addr16
and
int3
std
cmp
cmpsb
add
pop
gs
add
cmp
sub
xchg
outsb
xchg
or
mov
cmp
pop
cmp
in
cs
and
adc
sub
sub
aad
adc
dec
mov
outsl
rorl
ret
scas
mov
mov
lock
mov
inc
movsb
mov
or
mov
enter
movsb
into
or
jge
sub
sarl
or
sbbb
movsb
and
movsb
cwtl
das
inc
stc
push
sbb
inc
dec
xlat
sub
lock
movsb
test
mov
shlb
xchg
in
xchg
mov
movsb
inc
jne
mov
push
test
xchg
inc
pop
stos
mov
clc
cltd
adc
flds
pop
xlat
arpl
xchg
sub
jns
or
fdivl
into
and
dec
add
dec
test
ja
mov
and
lahf
mov
outsl
push
gs
or
inc
rolb
or
mov
pop
mov
in
inc
lods
dec
sarl
out
andb
lret
xor
sbb
and
pop
mov
push
xchg
xchg
mov
out
add
adc
lahf
in
xlat
lcall
frstor
and
xchg
int
mov
arpl
insb
adc
dec
aaa
xchg
jbe
mov
mov
mov
mov
test
lahf
popa
test
leave
add
xor
sbb
mov
mov
push
lock
sub
pop
jle
sub
mov
xchg
jne
add
repnz
mov
roll
idivb
movsb
bound
shlb
add
jg
sub
hlt
insl
repnz
fnstsw
bnd
test
and
dec
ret
add
pop
pushf
mov
test
fildll
push
pop
or
outsl
pusha
inc
cmpl
push
mov
pop
add
stos
pop
inc
fcompl
scas
out
ret
jge
xchg
decb
test
or
sub
ds
push
mov
insb
hlt
movl
push
jmp
xor
jns
sbb
repz
vmread
pop
lock
xlat
or
in
mov
loope
sbb
mov
fstpl
xor
gs
vpmovsxdq
lret
xchg
xchg
test
mov
or
dec
call
lahf
jg
sbb
dec
adc
mov
add
dec
mov
add
popl
sub
add
pop
or
sbb
mov
xor
pop
sub
push
outsb
lret
cmp
ljmp
push
outsb
jg
push
sbb
ret
nop
push
xor
dec
lcall
popf
pop
dec
mov
pop
add
mov
jo
daa
sbb
xchg
std
add
cmp
sbb
jmp
xor
xchg
leave
xchg
cmp
adc
sahf
jecxz
sahf
mov
jne
push
outsb
pop
fnstenv
imul
add
mov
mov
sbb
xor
push
inc
fcoml
loope
ret
sbb
dec
mov
add
popf
and
xchg
setl
push
leave
test
sub
dec
fidivrl
orl
movsl
pop
ljmp
cmp
je
mov
mov
sub
add
sarb
inc
ja
pushf
jo
js
iret
inc
ja
shrl
inc
cwtl
jnp
inc
jl
push
push
pop
insb
stc
outsl
movsb
mov
aam
cmc
xchg
jno
inc
and
xchg
cwtl
mov
jmp
sub
fisubl
inc
in
jne
sub
dec
or
test
and
and
adcb
sub
push
loopne
jg
ljmp
filds
dec
fldt
out
sahf
adc
push
insl
lock
or
push
in
xor
ficompl
adc
ljmp
add
jnp
mov
out
les
inc
lods
mov
pop
lock
adc
fists
cwtl
push
loop
pop
mov
test
mov
cmc
mov
adc
ljmp
jne
inc
add
lods
mov
mov
movsl
add
push
xor
loope
jge
push
shlb
adc
sub
pop
cltd
adc
fldpi
lock
add
cmp
pop
loopne
add
int
into
push
xchg
ljmp
mov
test
sbb
inc
mov
test
mov
cmp
mov
cwtl
fmulp
dec
mov
sub
xor
inc
aad
or
testl
adc
xchg
loope
sbb
aam
in
aam
je
sub
fpatan
hlt
add
cwtl
pop
mov
mov
fstl
cmp
mov
cmpsl
addr16
lret
nop
add
xor
lods
ja
pop
dec
cmp
mov
cmpsl
pop
imulb
daa
gs
add
daa
xchg
fisubl
push
sub
stos
shr
or
lret
sub
outsl
jb
xchg
and
inc
popf
fstpl
and
fbstp
ffree
pop
dec
cmpsl
das
in
push
sbb
ret
mov
test
cmpsl
shlb
push
mov
add
push
ja
dec
scas
add
or
add
pop
or
jo
push
mov
push
mov
aad
jl
sub
leave
loopne
pusha
clc
divb
sub
fldenv
add
scas
int
sub
push
cs
cs
scas
jnp
imul
negl
mov
inc
clc
dec
mov
mov
xor
inc
and
xchg
adc
mov
fsubrp
pop
cltd
add
xchg
cmp
je
push
subb
pop
sahf
ficoml
lahf
dec
ljmp
out
mov
ss
pop
or
sub
cmp
arpl
and
mov
les
in
pushf
inc
and
ret
fmul
or
movsl
test
rorb
xlat
mov
ret
push
in
dec
sbb
cmpsl
jbe
mov
std
xor
scas
cmp
out
add
jmp
mov
sub
fistps
pop
push
movsl
cmp
notl
stc
fwait
push
push
xor
in
add
addr16
in
insl
jns
aas
push
fs
ficoml
and
add
ret
std
mov
adc
in
xor
inc
push
int
xor
enter
cmp
movl
es
int3
inc
pop
stos
dec
xor
sbb
xor
subb
dec
fimuls
pop
adcb
sti
loopne
or
sbb
dec
xlat
push
movsb
mov
mov
imul
mov
xlat
jnp
loopne
dec
inc
jb
insl
or
mov
cmp
scas
das
mov
mov
bound
add
mov
mov
cmp
loopne
call
push
jg
jb
cli
ljmp
jp
cmpsb
push
xchg
int3
fidivrl
cmp
adc
addb
dec
sub
mov
cli
and
into
lock
icebp
xchg
and
mov
or
ret
int3
fistl
mov
ss
in
inc
int3
pop
push
repz
add
inc
jg
imul
insl
jg
mov
inc
mov
stos
pushf
cwtl
pop
fnsave
hlt
push
es
sub
mov
sbb
mov
dec
cwtl
jmp
push
pop
aam
pop
scas
mov
cmp
xchg
jle
jl
imul
sbb
aas
sub
jge
rcl
and
fstpl
and
mov
xchg
pop
push
mov
inc
xchg
or
xchg
xor
orl
inc
xor
pop
arpl
inc
dec
xor
iret
repnz
or
inc
cmp
ret
out
dec
jge
and
dec
push
cld
pop
dec
push
xor
out
adcl
mov
sarb
cmp
xchg
sahf
xchg
push
pop
clc
adc
jmp
outsb
stos
gs
mov
mov
lret
pop
out
inc
cmp
xchg
mov
pop
cltd
push
add
jp
out
out
push
psrad
std
jbe
mov
inc
sbb
cmp
mov
or
push
cmp
out
jecxz
add
loop
in
orb
sub
cmp
sbb
jmp
shrl
pop
out
jp
sbb
adc
mov
stos
cmp
bound
lret
sti
mov
pop
popa
or
sbb
fxch
leave
mov
xchg
out
inc
xchg
xor
cltd
inc
imul
dec
mov
ljmp
dec
sub
lcall
call
in
xor
in
adc
cmp
or
outsb
dec
pop
ja
sub
shlb
xchg
add
dec
jno
push
nop
aas
inc
or
js
cmp
arpl
push
push
xlat
int3
mov
fdiv
es
lret
int3
jmp
sahf
repnz
jbe
cmp
or
fxch
or
stos
cmp
shrl
dec
jnp
push
and
out
call
es
jbe
mov
ljmp
jbe
mov
and
mov
insb
pusha
and
sbb
int3
xchg
mov
shr
popf
push
pop
add
xchg
shrb
lret
iret
mov
std
sub
insl
subb
imul
jl
sub
test
push
add
xor
sbb
repnz
sbb
cmc
mov
jnp
mov
inc
lcall
add
push
jns
ret
and
lret
jmp
mov
sbb
jb
pop
sub
sar
cmp
xchg
std
add
mov
sub
mov
nop
loope
shrl
loopne
and
jns
dec
dec
mov
pop
movsb
cmp
pop
pop
dec
nop
sub
push
fldenv
cwtl
sub
xor
sbb
and
out
jl
inc
push
out
rcrb
mov
jge
negb
and
add
mov
insb
add
aaa
rcrl
loop
dec
imul
sarl
fmulp
pop
mov
push
aad
or
and
jns
fstl
push
lahf
jo
adc
int3
add
loope
xchg
inc
xor
ret
fsubrs
leave
xchg
push
popa
aam
lahf
int
stos
pop
xchg
push
sbb
xor
mov
sbb
or
mov
and
xchg
pop
loopne
sbb
sbb
mov
xor
enter
jno
adc
xchg
xchg
sbb
jne
jecxz
cld
push
pushf
stos
arpl
sub
fnsave
sahf
ret
xchg
fs
xchg
loopne
ror
aaa
mov
jb
rol
movsb
repnz
push
jbe
push
dec
xchg
mov
push
jne
test
outsb
hlt
insb
mov
cmp
into
cmpxchg
std
mov
mov
or
icebp
inc
ret
cmpsl
imul
fsubr
xor
pusha
cmp
jg
sbb
std
int
mov
push
into
adc
shlb
movsb
lods
es
mov
lret
xor
add
bound
stos
mov
jg
cmpsl
dec
andl
test
out
xchg
imul
ds
cs
fdivr
cmp
stos
icebp
adc
mov
test
test
mov
mov
leave
xchg
cmp
cmp
mov
sbb
lods
stos
dec
sti
push
rcll
or
sbb
pop
add
jge
pop
adc
repnz
sbb
iret
call
shlb
mov
inc
insb
pop
ja
lods
das
or
lahf
cli
adc
xor
dec
pop
aam
sbb
xchg
and
dec
leave
popa
mull
push
add
fcomps
fadds
lret
lahf
gs
mov
dec
jnp
outsl
xor
mov
ja
leave
dec
dec
enter
mov
lea
std
cmp
cmp
cmc
repz
sub
cld
xor
sub
pop
cmc
sbb
gs
jne
mov
stos
push
jge
dec
gs
mov
and
test
mov
notl
sar
cmp
movsl
mov
push
sti
pop
mov
mov
adc
dec
sub
and
test
fdivl
loope
mov
sbb
mov
cltd
xchg
lea
mov
addb
cmc
insl
jecxz
call
mov
scas
test
test
nop
cwtl
in
int3
xchg
xor
mov
add
dec
pushf
test
shrl
out
pop
nop
pop
lods
and
jg
mov
shr
mov
loop
bnd
mov
in
es
iret
js
jecxz
loop
insb
and
lcall
adc
inc
cvtpi2ps
shll
sub
dec
loope
test
add
je
out
fmuls
dec
push
jmp
sub
fisttpl
cmc
and
dec
add
pop
aad
adc
push
fdivs
sub
mov
xor
and
inc
bound
mov
jne
jl
pop
shll
lods
test
pop
imul
xchg
insb
lret
or
lock
push
test
and
xchg
jbe
fnsave
mov
call
fldt
das
jg
fldcw
and
push
stos
sub
incb
insl
push
jp
mov
xchg
mov
ret
dec
imul
in
icebp
iret
mov
pop
dec
das
imul
lods
mov
lock
jge
xor
std
xchg
pop
loope
inc
mov
jge
movsl
xor
cmpl
push
xor
adc
int3
mov
xchg
loope
sub
mov
insb
adc
outsl
decb
out
adc
cmp
cmpsl
sbb
pop
add
pop
das
adc
fsubrs
movsl
pop
movl
pop
inc
sbb
adc
fidivl
loopne
lds
repz
rclb
dec
outsl
rolb
pop
cltd
add
mov
and
ret
sbbb
out
inc
scas
mov
es
push
add
ljmp
jne
lcall
hlt
mov
leave
into
fadd
insl
mov
jmp
popf
cli
add
inc
popf
fwait
rcrl
mov
add
xchg
sahf
pop
fbstp
and
cli
mov
push
cmp
aad
in
mov
or
cmp
loopne
xor
div
jp
and
dec
push
sahf
stc
pop
lcall
jns
repnz
ds
rcrl
jb
dec
dec
inc
adc
repnz
push
sub
inc
mov
in
pop
push
add
popf
push
scas
mov
cltd
jbe
inc
hlt
mov
sarl
or
mov
repnz
loop
je
jns
imul
push
es
gs
test
call
xor
mov
shlb
jne
mov
aaa
cmp
stc
inc
xor
xor
sbb
xchg
fildl
xchg
std
into
out
sub
mov
mov
aas
or
pop
and
jg
adc
and
xchg
mov
mov
loope
scas
icebp
xchg
movsl
stos
sub
pop
scas
popa
adc
add
xchg
cmpsl
scas
pop
popa
push
in
sbb
in
clc
jmp
push
lds
cmpl
out
nop
fbld
dec
push
clc
ja
jns
xchg
mov
push
xor
scas
dec
or
mov
enter
mov
or
ljmp
xorb
lcall
std
in
mov
xor
lds
mov
xor
test
xchg
pushf
push
push
int3
ja
scas
jbe
daa
mov
or
std
or
imul
ffreep
imul
sub
roll
xor
pop
push
xor
dec
hlt
fidivl
imul
out
in
lahf
int
sub
jo
dec
add
mov
sahf
cli
add
mov
js
xor
push
pop
cmp
imul
or
cwtl
push
pop
outsb
xor
jbe
out
dec
lock
xchg
cmc
pusha
in
xchg
repnz
imul
dec
dec
dec
sub
out
sub
sbb
sub
sub
sbb
sbb
adc
imul
jbe
repz
icebp
xchg
xor
adc
lock
fildl
insb
and
mov
rorb
cmpsb
cli
lret
push
dec
addr16
rcll
dec
jmp
fldcw
add
mov
xor
pusha
add
gs
push
or
loope
test
mov
or
cwtl
add
cmpsl
std
push
loope
adc
mov
or
test
push
push
lods
popf
scas
pop
adc
jb
jp
sahf
jnp
sahf
jmp
mov
push
dec
or
pop
add
adc
lock
add
ljmp
decb
insb
aad
sub
hlt
sbb
push
jbe
dec
mov
cld
lret
mov
pop
add
push
divb
int3
fsubr
addr16
das
xchg
das
nop
ss
shl
je
xor
or
rclb
dec
insb
les
mov
mov
mov
mov
and
add
pop
or
test
mov
and
lcall
xor
sahf
fbstp
int
lret
bound
cld
dec
sbb
sub
push
mov
push
add
rorl
push
pop
int
mov
aam
fisubrs
nop
sub
testl
cmp
shr
dec
les
add
jp
mov
jne
inc
sub
aas
xor
scas
insb
insb
testl
cmp
cmpsb
pop
xorl
pop
and
filds
std
xchg
fcoml
and
scas
mov
mov
xchg
xchg
sahf
or
stc
sbb
jle
int3
xchg
cmp
xor
inc
push
fnstsw
out
dec
pop
inc
xor
mov
loopne
test
imul
xor
or
rcrl
mov
cmp
jp
push
push
cmpsb
pop
pop
imul
push
and
in
daa
jo
push
jo
add
sbb
iret
shlb
push
and
cmp
idivb
xor
pop
sbb
mov
cmpsb
in
fs
push
andl
sarb
dec
jb
xor
adc
ljmp
cwtl
add
mov
dec
and
xor
in
arpl
cmp
bnd
stos
adc
or
pop
sbb
dec
and
out
xor
mov
scas
pop
loop
adc
mov
outsb
cmp
jne
bswap
outsb
cmp
cli
scas
mov
mov
pop
adc
jge
sbb
pop
dec
in
and
cld
mov
int
lret
xchg
push
push
sbb
dec
outsb
int
push
ret
pop
out
ret
cmpsb
push
jmp
push
arpl
xchg
rcrb
pop
cli
mov
and
xlat
or
xchg
mov
sbb
xor
inc
int3
push
sub
inc
test
adc
and
add
add
in
inc
movsl
cltd
mov
test
fsubs
arpl
jp
and
sahf
sub
out
push
cmpsl
in
sahf
sub
pop
out
sbb
aas
ss
fsubrl
mov
inc
loopne
jl
cltd
test
cwtl
daa
pop
pop
push
inc
jno
mov
fcompl
data16
lods
or
lods
jmp
out
mov
inc
adc
aad
mov
xchg
and
mov
adc
test
out
jmp
xchg
xchg
jae
outsl
sub
hlt
mov
mov
out
fcmovu
push
or
dec
xchg
jb
and
dec
jbe
add
dec
push
inc
enter
loope
inc
sub
mov
test
adc
adc
sub
add
popf
fcoms
mov
je
push
cmpsb
stos
pop
rorl
daa
pusha
shrb
repz
repz
dec
jge
cmp
in
inc
or
pop
lahf
into
inc
shll
or
cli
lret
imul
lret
in
out
lret
sbb
lahf
mov
pop
roll
pop
cld
lahf
pop
adc
cmc
std
push
push
incb
call
xchg
xchg
movsl
cld
mov
fldcw
and
dec
test
xchg
and
mov
pop
dec
inc
das
into
xchg
std
adc
or
mov
push
xor
jb
pop
int
cmp
call
loope
rcl
es
leave
das
xor
inc
jecxz
mov
sbb
push
cmp
pop
mov
jp
scas
pop
or
mov
sbb
lahf
and
mov
sbb
das
push
outsb
sbb
out
push
or
shrl
jns
hlt
jbe
and
push
and
push
push
out
push
popa
mov
mov
pop
in
adc
cmc
add
inc
inc
add
pop
dec
jp
mov
and
pop
push
hlt
mov
pop
lea
pop
pop
test
inc
enter
cmp
dec
insl
cmp
mov
mov
arpl
aad
stc
inc
or
push
and
movsl
popa
aam
int
and
sub
repnz
stos
xchg
push
jae
or
fwait
mov
cvtdq2ps
mov
mov
cli
ret
cld
mov
aam
push
pop
inc
sbb
jle
cltd
iret
xchg
iret
mov
sbb
rclb
insb
dec
shlb
fldenv
sbb
scas
neg
pop
mov
mov
inc
adc
pop
arpl
loop
sub
enter
push
or
test
into
cmc
xchg
sbb
xchg
data16
sub
xor
mov
mov
push
inc
xchg
add
cmpsb
fstpt
mov
out
call
fcompp
idivb
insl
ret
add
xchg
dec
lds
call
mov
dec
or
sbb
sbb
lcall
or
dec
fdivrs
xchg
rcll
lods
scas
sahf
inc
into
inc
mov
adc
inc
std
mov
push
and
adc
sub
inc
aas
pop
inc
repnz
push
fnsave
stos
lahf
imul
and
cmp
jno
pushf
or
int
xchg
mov
popa
xorl
add
sub
mov
and
jp
inc
into
nop
mov
scas
ret
int
lods
inc
fisttpl
xor
cmpsl
mov
out
jge
sbb
mov
lds
cmp
add
pop
roll
xor
adc
cmp
pop
mov
cmp
in
sbb
imul
lock
getsec
outsl
scas
mov
add
mov
add
dec
xchg
inc
and
dec
lea
xchg
fdivp
sbb
adc
int
push
inc
call
xor
dec
or
imulb
fs
xchg
ficoml
mov
cli
sti
push
jnp
inc
dec
cmp
pop
cmc
hlt
xor
jbe
inc
fcmovnbe
lock
fsubp
add
fs
and
dec
clc
imul
aam
sub
pusha
data16
sub
outsl
insb
data16
imul
rclb
mov
pop
cmp
sbbb
xchg
mov
cwtl
lret
push
mov
lds
imull
jle
lea
add
je
mov
jbe
lret
sbb
jno
add
orb
xchg
mov
dec
stos
mov
iret
repz
xor
fcomps
lock
mov
stc
xchg
and
out
jbe
dec
sbb
jno
movsb
adc
out
idiv
arpl
ret
push
jns
adc
dec
iret
scas
repz
dec
cmc
setbe
jmp
inc
mov
int
daa
inc
movsl
pop
mov
mov
stos
xor
xor
fistps
adc
fidivl
fdivp
pop
decl
sbb
xchg
add
fdiv
ja
popa
ljmp
cmpl
daa
jnp
lcall
mov
xchg
mov
mov
pop
lret
and
add
sbbl
les
or
or
ds
mov
push
mov
fwait
jae
bound
adc
mov
adc
leave
push
icebp
out
int3
mov
xchg
popf
pop
mov
les
mov
ss
jne
inc
dec
subb
mov
sahf
push
pushf
xchg
sub
gs
cmp
pop
sub
push
out
imul
xchg
dec
rcl
mov
sarb
sub
mov
movsl
mov
mov
addr16
movsl
add
pop
ret
insl
mov
and
loopne
adc
pop
ret
and
inc
xchg
pop
dec
in
ja
xor
xor
lret
popa
lahf
or
test
push
jmp
pop
pop
dec
notb
dec
add
cwtl
lods
ja
pushl
xchg
pop
andb
mov
fimuls
mov
out
fbld
push
cmp
in
jmp
sub
popa
xor
mov
out
mov
mov
sub
push
pop
mov
out
std
test
jmp
xchg
mov
inc
lcall
jb
and
add
pop
xor
sub
leave
fdiv
jne
and
or
std
cwtl
push
dec
shlb
jbe
jmp
cltd
stc
pop
in
scas
jle
lret
outsl
es
out
sub
rolb
mov
insb
les
sub
iret
movsb
and
xchg
repnz
sti
outsl
push
xor
movsb
testl
scas
lret
sbb
dec
jecxz
or
stos
in
adc
pop
jecxz
jbe
mov
rcll
repnz
push
out
adcl
out
cmp
arpl
jmp
bound
sarb
xchg
fists
daa
repz
mov
sub
je
hlt
sahf
adc
adc
ljmp
push
pop
mov
aas
pop
test
call
ja
repnz
psubb
into
sti
inc
jg
inc
jnp
mov
and
cmp
sarl
jecxz
cmpsb
shr
lahf
cltd
xor
add
mov
cmp
adc
pop
cld
adc
es
les
call
andl
shll
ss
je
cmp
decl
daa
hlt
sub
into
sub
cmc
mov
jle
dec
mov
rclb
sti
mov
repnz
or
ficoml
jmp
pushf
pop
insl
adc
dec
ret
fidivl
out
lahf
sbb
hlt
jge
mov
jbe
xor
fdiv
and
arpl
ret
outsl
mov
cmp
arpl
fsubl
and
fimull
ja
inc
xor
jae
xchg
mov
loope
out
adc
outsb
outsl
cmp
inc
dec
or
nop
fdivs
cmp
inc
nop
mov
dec
mov
jnp
int3
jne
nop
call
rcll
and
int
and
js
bound
imul
cmc
outsb
mov
add
xorb
or
or
addr16
loop
insb
push
cmp
cltd
ja
cwtl
sahf
test
push
ljmp
dec
sbb
pop
mov
pop
loop
iret
aad
push
or
adc
cmp
addl
and
clc
mov
push
push
inc
int3
lcall
ret
es
in
xchg
or
fldl
and
fistl
inc
subb
cmp
and
outsl
stos
xorl
fimull
jb
aas
adc
and
push
mov
loopne
and
cmpsb
dec
mov
or
nop
adc
adc
rep
dec
js
xor
xor
push
push
pop
movsl
idivl
adc
insb
add
filds
cmc
pop
ret
lods
sbb
cli
dec
push
push
fnstenv
out
out
loop
sub
in
pop
loop
xor
inc
mov
cmp
movsl
mov
inc
aaa
sbbb
sbb
pop
or
xchg
and
scas
mov
cmp
xchg
add
or
jg
adc
pop
mov
rcrb
mov
insl
xchg
fstp
fidivl
xchg
sbb
aaa
dec
xor
loopne
cmpsl
push
adc
std
cltd
and
fidivl
cld
std
ss
mov
cmpsb
jge
iret
xchg
mov
lcall
sbb
lods
xor
xchg
outsb
sub
xor
inc
pusha
mov
popf
test
mov
jle
sub
lea
rol
push
mov
jnp
sub
sbb
outsl
push
imul
xchg
test
test
outsb
lret
dec
mov
and
sbb
popa
outsb
add
xor
popa
xor
sbb
sbb
or
jns
outsl
outsl
mov
mov
dec
lods
xor
ret
mov
jg
xor
enter
mov
popf
inc
add
int3
addr16
fs
mov
mov
imul
mov
scas
xor
xor
pop
xchg
sbb
inc
push
adcl
imul
imul
je
pop
stc
sbb
and
das
and
fucomi
in
shll
xchg
ret
repnz
daa
int3
clc
sti
jle
mov
stos
sub
addr16
cltd
popf
ss
dec
pop
faddl
pusha
das
cld
sbb
faddl
jl
dec
mov
ja
mov
mov
fucompp
rcrb
les
movsb
int3
dec
push
fadds
shr
fnstcw
jmp
jns
imul
repz
bound
dec
mov
sub
dec
out
cmp
pop
inc
jp
jae
dec
inc
into
sbb
pop
push
jne
push
cmc
lahf
cltd
sub
int
mov
shll
cld
test
cmpsb
out
pusha
pop
test
sbb
push
mov
pop
xchg
mov
lea
push
xorb
test
addr16
and
or
fs
fwait
cmp
sbb
cmpsl
push
in
jb
mov
and
add
mov
xchg
test
push
cmp
xorl
je
inc
lods
pop
bound
jb
fnstsw
lret
dec
popf
add
notl
jge
xchg
mov
sbb
loop
and
sub
aam
in
out
push
rcrl
add
dec
lds
jmp
sti
cli
mov
xchg
jo
add
test
int3
mov
fwait
xchg
mov
mov
pop
jns
int
into
mov
ljmp
xor
out
cmp
jp
xor
add
push
mov
push
and
mov
outsb
or
xchg
add
data16
xchg
mov
inc
cld
push
daa
pop
gs
and
imul
mov
inc
repnz
and
insl
ds
mov
add
jmp
fwait
and
ljmp
push
or
out
cld
int3
pop
lret
cmp
enter
push
data16
xor
fildl
ret
adc
lds
sub
popa
sub
dec
pop
sub
dec
add
dec
xchg
pop
insb
xchg
inc
shll
inc
aam
cmp
mov
addr16
in
fbstp
scas
imulb
test
repnz
mov
les
repz
xlat
imul
pop
fs
clc
fcmovbe
das
or
aas
xchg
test
xor
test
imul
hlt
mov
sub
push
jmp
ss
hlt
aam
mov
cltd
fstpl
notb
test
xor
pushf
push
loope
or
ficoms
sbb
repnz
xchg
mov
pop
test
leave
xacquire
dec
fistl
cmp
adc
aaa
xchg
in
push
pop
cmpsb
divl
push
lcall
sbb
mov
ficoml
insb
in
xchg
inc
lods
repnz
aad
sbb
inc
movsb
std
jb
add
ss
jae
add
es
or
pop
in
call
nop
stos
les
sbb
dec
enter
push
into
sbb
mov
xor
divl
push
push
out
sub
lcall
adc
push
push
mov
dec
dec
lods
cs
fucomi
out
sub
add
je
notb
push
test
popf
sub
and
rorb
push
iret
pop
mov
adc
fiadds
subl
dec
dec
fnstcw
loopne
pop
fld
push
imul
pusha
push
mov
fsubp
popa
leave
inc
stos
int
je
push
in
mov
pusha
jg
xchg
xor
fsubl
mov
jns
xor
testl
out
outsb
and
push
bound
dec
jnp
clc
rcll
fdivrs
call
inc
jb
push
pop
fwait
inc
nop
push
mov
jns
iret
mov
addr16
dec
shrb
push
mov
mov
inc
pop
dec
dec
scas
pop
popf
jae
and
int3
xchg
int
cmp
xchg
dec
fdivl
sbb
cs
xchg
mov
adc
jno
adcb
fistps
cmp
in
dec
mov
mov
jbe
das
inc
mov
mov
std
push
sbb
jmp
sub
add
and
mov
xor
jo
sbb
dec
divl
inc
outsb
into
cmp
movsl
jp
dec
sbb
add
jb
push
jno
loope
mov
aad
inc
rorl
mov
popf
lods
push
xchg
punpckhbw
icebp
adc
mov
xchg
inc
call
call
push
jnp
icebp
dec
fs
movsb
xor
dec
cmp
push
fimull
cmpsb
cmp
cmp
cmp
outsl
adc
loop
fsubrs
push
outsb
dec
fldl
jb
xor
lods
push
enter
sbb
xor
pop
sbb
pop
and
jbe
insl
sbb
or
push
fdiv
push
mov
jp
call
lods
out
jae
out
js
sarl
sbb
jbe
cmp
lret
test
test
ljmp
shrb
sbb
stc
cs
push
push
rcrl
push
sub
inc
xor
mov
rol
pop
mov
js
incb
mov
adc
jge
xlat
scas
sahf
or
xchg
addl
push
sub
inc
push
mov
je
fwait
lahf
insb
popf
xor
push
add
lret
pop
adc
dec
adc
aam
ljmp
jns
data16
adcb
movb
data16
aam
pop
or
and
mov
lock
sbb
lods
or
scas
jge
push
mov
in
mov
push
inc
cmp
test
mov
cmp
and
aas
rcrl
jb
sarl
cmpl
cmp
insl
addb
or
push
add
cmp
ljmp
inc
scas
cmpsb
sub
sub
mov
jne
fsubrp
jne
or
pop
sbb
push
fwait
mov
dec
or
fisttpll
jne
cmc
dec
lods
push
inc
cwtl
pop
adc
jmp
ljmp
popf
sub
cmp
dec
sbb
cld
arpl
setg
ljmp
std
fwait
jle
and
sbb
xchg
or
xchg
rcll
push
enter
ret
adc
sbb
sbb
pop
adc
xchg
cs
js
shlb
mov
and
in
fcomip
cmpsb
inc
sub
and
and
push
ja
adc
pop
push
xor
scas
adc
push
cmp
or
out
jbe
icebp
push
mov
mov
add
test
imul
ja
sar
jae
popf
cmp
push
xor
push
jmp
cltd
push
mov
mov
dec
fstl
test
dec
adc
into
ret
and
jmp
jno
ja
arpl
and
push
mov
scas
xchg
jbe
shrl
or
es
dec
jae
mov
mov
xchg
les
xchg
shll
fisttpl
mov
hlt
popa
jmp
mull
jp
add
jmp
push
lahf
daa
insb
lea
pop
pop
mov
pop
ja
fnstcw
sub
je
fdivr
mov
stc
cmp
inc
jbe
int3
or
dec
outsb
sub
push
imul
pop
pop
daa
cmp
pop
xchg
pushf
adc
xor
jmp
fdivrs
sbb
addr16
out
sti
or
jne
sbb
and
mov
outsb
and
adc
lods
ret
adc
in
inc
popf
push
ret
jge
adc
imul
sbb
sarb
into
mov
inc
inc
fs
iret
add
fs
cmpsb
movsb
js
dec
inc
sub
jl
std
mov
sbb
xor
and
sbb
push
jmp
push
insb
dec
hlt
mov
shr
pop
cmp
mov
inc
fisubrs
ljmp
cmp
int3
pop
xchg
push
inc
inc
xchg
xor
stos
dec
or
xlat
dec
xor
flds
xor
pushf
jo
bound
js
xor
nop
sbb
dec
jecxz
scas
xchg
rorb
aad
aam
pop
cmp
xor
arpl
xchg
cmpsl
push
jb
xchg
add
xor
cmc
rclb
mov
xor
mov
mov
jae
addr16
lea
lret
in
pop
jmp
sub
sub
inc
fldt
pop
ficomps
int3
jbe
cli
dec
cli
sbb
stos
push
pop
inc
mov
ficompl
sub
pop
out
add
mov
jp
pop
lock
inc
xchg
fwait
mov
ljmp
sarl
jge
jb
pop
fcmovnu
sbbl
into
mov
fcmovnb
cltd
push
in
sub
inc
push
pop
cltd
cmp
pop
filds
fsubrl
mov
enter
inc
sub
pushf
xchg
jae
lock
dec
xor
push
sbb
clc
xorl
lods
sub
dec
aas
mov
shrb
es
inc
jmp
jp
push
jecxz
xlat
das
and
mov
mov
outsb
adc
mov
fwait
xchg
les
push
or
or
int
into
ljmp
fidivrs
sahf
jg
in
stos
lea
xchg
xchg
xchg
pop
adc
pop
jnp
mov
shl
les
stc
cmp
jo
jmp
jmp
mov
fbld
cmp
dec
es
hlt
imul
pop
push
mov
movsl
out
pop
idivl
arpl
sub
mov
cli
xchg
inc
scas
or
inc
pop
cmp
shlb
xchg
cmp
adc
lods
and
loope
cltd
shrb
ret
inc
sbb
sbb
and
push
mov
call
inc
mov
cs
les
push
xchg
fxam
inc
jle
jp,pt
xchg
and
push
popf
push
mov
adc
push
aas
in
int
test
mov
into
lods
dec
pushf
pop
mov
int
loop
push
std
lcall
loope
cltd
jae
push
ret
loop
pop
ret
clc
adc
jmp
mov
lret
jb
je
jg
data16
adc
in
xchg
dec
cli
or
in
sub
mov
fmuls
pop
ds
dec
mov
dec
push
pop
cmc
je
jbe
and
cltd
xor
jne
jo
and
arpl
sub
jb
fcmovnu
and
jecxz
fisubs
adc
mov
gs
movsl
jne
imul
lret
outsl
pcmpeqb
or
inc
fstl
test
adc
sarl
int
xor
in
pusha
push
push
and
mov
push
mov
xchg
icebp
sbb
adc
xorb
hlt
jge
xor
idiv
testl
pop
cmp
js
out
pushf
add
or
push
or
jmp
cld
push
xor
push
inc
ljmp
dec
leave
into
js
int
jns
shrb
ret
mov
adc
dec
inc
mov
stc
cmpsb
jg
dec
pop
inc
das
push
push
mov
mov
mov
fwait
xor
mov
jno
or
iret
mov
mov
ss
rolb
clc
lods
addr16
lret
mov
loope
cmp
fiadds
xor
cmp
inc
xor
std
repnz
fcoms
test
jecxz
adc
mov
adc
movsl
add
mov
and
cmc
stc
loope
mov
repz
cmc
add
mov
xchg
daa
or
js
and
xor
push
xchg
pop
icebp
scas
popf
ja
cmp
mov
lock
jmp
out
fs
pop
out
dec
mov
aaa
jmp
movsb
sahf
pop
je
cs
dec
jp
sub
ficoml
add
jecxz
das
sub
adc
mov
mov
inc
outsl
jnp
iret
arpl
add
inc
xlat
aas
jns
sbb
movsb
mov
adc
add
int
shll
mov
icebp
push
mov
adc
jb
jg
xlat
mov
leave
jne
add
mov
imul
sub
test
addr16
mov
sahf
dec
inc
out
out
mov
outsb
dec
xor
imul
pop
sbb
nop
cmc
int
into
push
flds
or
jae
enter
mov
xor
mov
sub
mov
xchg
inc
dec
mov
bound
mov
cli
or
js
jae
das
andl
mov
dec
inc
push
jno
sub
in
jp
jno
inc
or
or
nop
xchg
inc
leave
ucomiss
push
not
dec
sbb
inc
sarb
mov
fildll
adc
pop
and
push
sub
loop
add
js
inc
jge
outsl
push
jae
inc
js
xchg
cwtl
mov
test
mov
push
mov
mov
shrb
pop
wrmsr
outsl
pushf
fmul
cmp
fistpl
xlat
aaa
adc
or
sti
adc
jno
cld
in
cmp
dec
sbb
push
orb
xchg
push
lods
and
aad
xlat
jno
test
add
cs
pop
add
call
push
push
jecxz
aad
jne
jecxz,pn
stc
in
loop
jb
aas
lret
jnp
mov
aad
test
clc
lds
mov
out
mov
pop
sbb
inc
imul
push
lahf
pop
enter
sbb
mov
bound
dec
jmp
jo
pop
cld
fimull
call
xor
dec
mov
cmp
test
inc
adcl
std
jne
xor
mov
sbb
mov
in
xor
dec
dec
sub
mov
adc
ds
in
pop
or
ficompl
test
sbb
jns
push
roll
inc
lods
mov
and
fbstp
outsb
repz
adc
sbb
dec
cmp
gs
pop
scas
cmp
and
sbb
nop
nop
and
pop
cmc
pop
jne
inc
bound
mov
loopne
fcomps
sbb
pop
mov
jo
icebp
mov
push
inc
je
in
aad
xchg
sbb
xor
rclb
mov
into
sbb
aas
int3
fnstenv
cmpsb
lock
cmpsl
dec
xor
js
xchg
mov
orl
lds
dec
out
mov
int
and
scas
jmp
repz
mov
cmp
pop
daa
xor
fldcw
mov
mov
das
mov
out
mov
test
dec
lcall
ret
movsb
push
pop
pop
mov
xor
addb
lock
aad
push
push
jo
push
icebp
jne
out
xlat
lahf
mov
testl
int3
mov
enter
push
ja
js
fcomps
dec
pop
and
fisubs
inc
dec
in
xor
pop
mov
inc
inc
cmp
mov
jmp
pop
ret
ror
cmp
jmp
ror
sbb
xchg
loope
repnz
push
pushf
sbbl
mov
cmovno
push
fidivrs
jmp
pop
out
test
ljmp
into
mov
adc
mov
out
ret
movsb
mov
je
mov
add
std
cmpsb
mov
dec
push
gs
lea
mov
shlb
jmp
popf
push
mov
clc
sbb
push
fsts
aam
and
add
lods
dec
sahf
jle
add
dec
mov
inc
push
fistpll
outsl
push
mov
in
rorb
in
inc
ja
leave
mov
mov
into
xchg
pop
lods
js
call
das
fs
shrl
ret
aas
mov
adc
lret
cltd
push
or
mov
sub
push
enter
pop
adc
xchg
ret
mov
mov
cld
stos
sub
ds
cs
leave
lcall
mov
mov
cmp
cmp
push
outsl
arpl
mov
sti
sub
in
push
push
lods
movsl
fs
outsl
push
push
xchg
inc
shl
or
lcall
pop
pushf
cmp
cmp
idiv
ds
push
ss
mov
xor
cmpsl
movsl
push
add
fldcw
pop
loopne
jbe
scas
out
pop
add
out
add
and
scas
mov
addr16
mull
add
push
dec
push
or
or
jno
shll
xor
inc
dec
repnz
sub
xchg
imul
mov
add
xor
aas
push
pop
movb
int3
and
xor
movsl
aad
xor
jl
inc
scas
pop
fwait
int
cwtl
int
mov
popf
dec
std
test
inc
icebp
in
pop
pop
add
pusha
dec
aad
inc
mov
ret
nop
add
push
test
mov
push
pop
mov
hlt
inc
push
out
adc
mov
jno
jecxz
scas
mov
push
filds
fldenv
dec
sarb
sub
add
xchg
cmpsl
mov
std
mov
inc
and
sbbl
pop
ud2
adc
inc
sbb
test
mov
unpcklps
ret
sbb
mov
hlt
lcall
popl
fsubrp
popf
jnp,pt
aaa
push
aaa
jg
fsubrs
das
ret
test
jno
mov
ret
jge
cmp
mov
test
lcall
jp
pop
imul
in
jns
add
and
pop
jle
cwtl
push
jle
jle
push
push
xor
ficomps
pushf
arpl
and
andl
dec
adc
dec
mov
test
mov
aam
xor
lds
cmp
aad
in
cmp
mov
jmp
lea
sub
scas
jl
ret
fldt
inc
cmpsl
repnz
nop
and
or
in
fs
in
xchg
cmpsl
add
in
nop
and
mov
outsl
add
mov
divb
iret
jb
xchg
addb
adc
mov
xchg
push
pop
mov
fidivrl
ds
lds
mov
pop
sub
outsl
cmpsl
dec
jp
jge
mov
pop
jg
call
mov
cmc
jp
sbb
movsb
sub
adc
sbb
outsb
and
mov
mov
pop
adc
add
js
jns
in
lds
test
inc
cltd
ret
and
in
pop
cmp
xor
or
cwtl
icebp
int3
popa
enter
cmc
adc
repz
pop
adc
push
test
pusha
loopne
aad
and
mov
cmp
sbb
pop
adc
daa
test
int
int
mov
cmp
fdivs
dec
lods
adc
push
sbb
pusha
aad
lods
andb
pusha
adc
pop
and
fsubs
imul
out
fnsave
mov
fildll
stos
pop
aas
mov
xor
ficoms
mov
insl
rcrb
cmp
pop
mov
xor
popf
std
out
orb
jge
xor
inc
pop
mov
sub
mov
pop
push
jle
daa
xor
lcall
jl
mov
sti
scas
mov
cmp
mov
int
fwait
pop
out
cmp
push
out
test
mov
adc
jmp
mov
add
add
mov
jecxz
lahf
lret
inc
inc
rcrl
mov
or
sbb
xor
aas
mov
mov
fs
xchg
or
and
rolb
mov
dec
mov
out
scas
jnp
xchg
fdivrl
mov
inc
neg
sub
call
push
pusha
sbb
adc
and
jbe
inc
cld
popf
mov
push
clc
cwtl
es
xchg
test
fwait
sbb
jo
push
loope
mov
lods
add
jns
adc
insb
ret
shlb
jnp
test
push
dec
scas
scas
out
inc
fmull
lcall
out
aam
clc
nop
sbb
dec
pusha
iret
sub
jg
adc
pusha
dec
aas
xchg
jae
jl
adc
adc
inc
shld
int
jae
mov
ficompl
nop
mov
mov
mov
cmp
sbbb
push
xchg
fstps
cli
and
arpl
pop
cwtl
lods
add
and
sbb
rolb
dec
and
fisubrl
pop
std
push
cmpsl
jbe
loopne
xor
or
rolb
mov
push
xchg
sub
mov
in
inc
or
or
mov
daa
enter
nop
jl
jmp
or
ret
dec
cwtl
nop
adc
pop
scas
stc
hlt
cmpsb
leave
or
loope
dec
or
ja
or
inc
sbb
sbb
hlt
dec
and
loop
ds
pusha
mov
loope
mov
mov
adc
lods
xchg
fstpl
or
andl
xchg
cli
movsl
jmp
ret
mov
jmp
test
das
jg
aam
dec
imul
cmp
out
js
test
addr16
rolb
jnp
xchg
mov
rcl
inc
mov
xchg
push
call
adc
and
xor
je
push
outsb
ljmp
jle
in
jg
cmc
leave
push
add
insl
jmp
lahf
out
das
sahf
cmp
stos
imul
sarb
lahf
sub
rorb
daa
pop
ljmp
test
xor
jo
hlt
inc
enter
lret
lods
push
pop
adc
mov
inc
pop
mov
push
mov
ss
pop
mov
mov
push
mov
add
insb
fnstcw
mov
fisttpl
jmp
or
xor
scas
dec
rcll
xor
fdiv
pop
sbb
push
ss
test
lea
adc
es
cltd
and
inc
dec
lea
js
das
mov
andb
push
fcmovnbe
ljmp
jns
jmp
mov
pusha
rcrl
std
pop
mov
js
sbb
pop
jp,pn
add
or
inc
mov
push
icebp
push
jo
add
mov
mov
data16
sub
cmpsw
adc
fwait
lahf
shll
inc
into
push
cli
push
push
xchg
fadds
or
sbb
jns
call
pop
shlb
and
push
repnz
and
int
dec
fildl
or
leave
and
push
xor
insb
add
push
mov
ja
mov
outsl
repnz
fdivrs
pop
stos
adc
rolb
fsubrl
jo
cli
sbb
lret
sub
fwait
testb
outsl
dec
subl
iret
adc
ja
rorb
fstpt
dec
shl
cltd
push
and
sub
stos
clc
xorl
and
mov
in
sbb
and
jg
push
add
xlat
jnp
ss
enter
dec
adc
roll
fmuls
pop
xchg
sahf
sbb
jne
adc
aam
sbbl
out
jae
jnp
test
add
pop
out
xor
and
cmp
mov
sbb
pusha
inc
pusha
push
mov
or
mov
int
fs
pop
sbb
jmp
mov
xchg
add
mov
out
hlt
jg
xlat
cmp
movsb
int3
test
shl
sbb
inc
negl
nop/reserved
sbb
sahf
scas
fldl
dec
outsb
add
ror
cmp
push
and
repnz
adc
std
rcrl
mov
iret
lea
xchg
adc
and
loopne
lcall
orl
stos
aas
les
push
sub
cmpsb
pop
pop
xor
cmp
xchg
sbb
or
outsb
sarl
adc
xchg
cmp
mov
daa
psubd
fcoms
jnp
and
sahf
ja
sub
pop
das
cmp
call
fwait
lock
mov
scas
sbb
dec
mov
sbb
push
insl
in
mov
mov
dec
push
sar
jecxz
adc
xchg
int3
ror
inc
loope
pop
rorl
rcll
fwait
jbe
dec
rclb
jbe
outsl
sbb
cwtl
aam
jno
loope
addl
dec
jnp
fwait
iret
cld
mov
push
pop
adc
mov
repnz
fwait
cmc
xchg
xor
es
popa
or
sti
into
nop
ja
movsl
inc
pop
jno
lea
mov
jl
and
push
fidivs
mov
mov
mov
loopne
inc
pop
push
jge
inc
jb
mov
sub
js
stos
and
xorb
pop
xchg
jns
mov
sub
out
fs
lret
jnp
push
push
xchg
push
loope
inc
adc
sbb
sub
push
or
pop
jbe
ret
cwtl
mov
ret
loope
push
inc
stos
mov
and
jno
lret
mov
lods
xor
push
dec
mov
jnp
xchg
jp
cmp
iret
push
loopne
jns
xchg
adc
adc
arpl
push
shlb
xchg
outsb
shll
xchg
dec
js
sbb
mov
leave
mov
inc
scas
xchg
push
pop
out
or
sub
jns
sar
lcall
and
mov
js
pop
mov
push
aas
jmp
adc
rorb
push
jl
or
adc
in
pop
jmp
mov
insl
outsl
push
mov
jne
add
and
xchg
cmpsb
clc
mov
out
inc
adc
ret
jno
jo
iret
adc
pop
icebp
dec
mov
cmp
mov
sub
sbb
adc
pop
loopne
sub
mov
cmp
data16
es
imul
enter
nop
jp
movsl
sub
enter
cmp
pop
repz
orb
dec
sub
push
loop
mull
hlt
sub
pop
dec
loop
mov
push
gs
and
aas
and
gs
inc
gs
jns
das
jns
dec
xor
inc
in
dec
adc
mov
push
sahf
xor
out
mov
xor
push
xchg
xchg
mov
mov
push
mov
push
movsb
shlb
fnstenv
mov
aam
pusha
cmp
or
aam
or
out
sti
aaa
je
jbe
push
in
pop
jne
lods
mov
add
shr
pop
cmp
dec
and
sub
sub
sbbb
cld
in
ljmp
mov
fwait
aaa
jbe
jle
jb
fbld
mov
sbb
shlb
movsl
out
sub
test
lret
in
lock
sti
jge
adc
rorb
jno
push
inc
adc
icebp
ficoms
push
iret
les
xor
xchg
hlt
sub
xor
movsb
xor
int
scas
pop
add
bnd
jnp
and
or
lcall
xchg
ficomps
xchg
out
mov
mov
lret
stc
jns
pop
lret
xchg
sahf
aas
outsl
xor
aas
ljmp
xchg
jae
mov
jae
ret
inc
in
jb
call
in
fdivs
lcall
fnstenv
xchg
pop
decl
xor
mov
insb
mov
fisttps
fmull
loopne
jns
das
int3
lds
fdivrl
insb
jmp
fists
idiv
and
sub
test
cltd
jnp
icebp
adc
cld
cmp
aam
gs
xchg
fcompl
sahf
popf
inc
dec
and
pop
rorl
cmp
lods
add
push
mov
mov
and
inc
les
inc
push
mov
lret
jne
out
int
shlb
adc
xchg
cmp
lods
rolb
test
aaa
sbbl
leave
test
rol
mov
mov
hlt
pop
xchg
cmp
pop
mov
fs
test
sub
loop
sub
mov
sbb
mov
sbb
test
clc
shl
push
jge
push
cwtl
and
and
sub
xchg
lret
sqrtps
mov
jg
xor
mov
pop
pop
sbb
mov
pop
and
mov
iret
ret
lods
jge
xchg
jno
lret
jae
imul
jbe
call
ret
adcl
pop
ror
pop
sbb
xchg
arpl
notl
adc
jns
in
jnp
stos
fdivr
or
rorb
jne
rcrb
or
aas
imull
arpl
loope
lret
out
jae
mov
jne
stc
jmp
adcl
sbb
pop
jg
mov
adc
xchg
mov
jae
cmp
jmp
sti
enter
sti
fldenv
xor
xorl
pop
enter
aaa
pushf
ljmp
sbb
xchg
inc
mov
pop
jmp
pop
jecxz
push
jmp
aad
dec
mov
pusha
add
popa
adc
dec
cld
cmp
dec
scas
int
js
psadbw
stc
push
jno
xchg
pop
pop
jns
sahf
test
cmp
mov
sbb
in
mov
adc
fildl
daa
hlt
mov
jbe
int
sbb
sti
mov
fcoml
cmp
and
loopne
or
add
rcrb
adc
xor
pop
call
sbb
pop
int
cld
pop
clc
loopne
fcomps
daa
pop
clc
xchg
push
adc
shl
data16
jnp
dec
add
mov
and
lret
jns
out
rorl
inc
in
js
add
dec
lock
scas
in
fisttpl
popf
cmp
inc
out
sub
jl
mov
out
mov
xchg
mov
js
scas
test
out
cltd
sub
pop
xor
leave
pop
pushf
mov
push
sahf
dec
fwait
sbb
inc
cmp
jbe
cld
loope
sub
push
fildl
and
sub
les
into
call
dec
mov
dec
mov
xchg
xchg
push
pop
mov
sub
xchg
lret
cmp
or
xor
mov
scas
stc
aaa
pop
jge
jle
push
xlat
insb
mov
movsl
xor
dec
jbe
pop
push
pop
aaa
fadds
rorl
push
mov
popf
mov
imul
out
movsl
mov
rcrl
lods
mov
inc
xchg
fimull
pop
and
rorb
sub
rcl
iret
gs
dec
sub
jae
outsl
adc
inc
or
jp
add
add
out
les
jae
testl
cmc
mov
lods
jp
adc
inc
xor
sbb
sbb
xor
shl
mov
dec
xchg
std
mov
push
push
out
scas
add
adc
gs
jne
mov
movsl
mov
push
push
lahf
es
aaa
sub
mov
int3
stc
mov
aaa
sar
notb
cli
fsubrl
loope
lds
bound
ficoms
xor
and
or
or
xlat
mov
and
leave
fcomps
pop
mov
mov
fbld
jl
mov
lds
adc
lea
dec
cmpsb
leave
popa
jmp
xchg
fbld
test
shlb
mov
push
xorl
push
ljmp
adc
cld
cmp
arpl
cmp
mov
bswap
insb
jnp
aam
mov
push
test
ret
mov
add
cwtl
jns
and
shl
and
cmc
mov
inc
lret
lcall
out
xor
lret
pushf
sbb
pushf
rclb
enter
mov
sub
or
jmp
mov
dec
xchg
add
fnstcw
loopne
jge
bound
or
xchg
test
mov
mov
into
inc
enter
movb
pushf
fstps
mov
out
jecxz
jg
rcll
mov
mov
mov
xchg
ja
xlat
cli
xor
rcll
jb
push
clc
mov
push
ss
xchg
int3
add
shrl
mov
leave
xor
xchg
into
jb,pt
pop
mov
je
cltd
sub
mov
or
stos
dec
lds
cltd
and
cmp
stos
fs
pop
pop
jmp
fiaddl
in
nop
sti
push
mov
outsl
je
repnz
cltd
jmp
push
daa
xchg
pop
dec
sbb
unpcklps
or
movsb
arpl
jnp
and
push
or
cltd
fstl
cmp
sbb
je
mov
adc
inc
inc
and
pop
xchg
bound
xchg
cmc
xor
xor
pcmpeqd
bound
and
mov
xor
js
sahf
les
sarl
and
fiadds
sub
test
adc
shll
sbb
inc
int
insl
mov
adc
mov
pop
movl
xchg
fiaddl
cwtl
pop
mul
lea
or
das
pop
mov
xor
cmp
mov
out
jmp
test
sti
mov
insl
lods
or
adc
in
test
scas
mov
push
cmp
jle
stos
jno
xchg
xor
sbbl
scas
je
mov
cmp
outsb
fstp
cmp
outsl
orl
adc
test
rclb
test
pop
and
nop
popa
jecxz
iret
cwtl
cmp
cmpsl
dec
std
jo
fnstenv
jmp
fadd
pusha
loope
xchg
rcpps
pop
mov
shr
jecxz
add
push
mov
adc
test
jg
inc
push
cmp
mov
frstor
cmp
fwait
or
pop
adc
xchg
insb
or
jno
sub
in
dec
push
dec
std
jg
mov
mov
xchg
sub
xchg
jo
das
jno
in
add
addr16
cmp
lds
add
mov
sbb
cmpsl
wrmsr
pop
stos
scas
push
sub
nop
mov
lret
mov
test
jne
shrb
jle
out
sar
orl
repnz
andb
fwait
xor
dec
sub
add
loopne
lods
lds
cltd
inc
call
sti
add
sub
fcompl
push
dec
push
clc
cld
cmpsb
fdivl
std
fldcw
cmp
jecxz
movsl
cli
pop
push
lea
add
sub
inc
mov
dec
jnp
sbb
and
push
push
std
mov
ds
inc
jb
in
fcmovnu
or
mov
filds
sbb
lds
mov
jg
push
adc
ljmp
mov
cmp
inc
movsb
loope
mov
iret
test
movsb
xor
loopne
aas
mov
sub
addr16
sbb
jns
orl
push
and
mulb
lods
repz
and
rcll
push
dec
fwait
in
sbb
aaa
fnsave
dec
jl
mov
test
xchg
inc
jo
xor
js
push
push
cmp
mov
sub
rcrb
or
xchg
jnp
fst
push
pop
bound
dec
adc
adc
or
push
imul
ljmp
inc
pop
test
arpl
pop
test
bound
rcl
mov
xchg
sbb
mov
pop
imul
sbb
push
imul
jmp
mov
adc
xor
bound
and
jnp
cltd
mov
xchg
inc
xor
lods
arpl
lret
xchg
loope
int3
pop
fnstcw
sbb
mov
das
push
fidivs
cli
push
push
sti
mov
imul
lret
cmp
or
data16
mov
movsl
xchg
cmpsb
int3
pop
sub
mov
push
and
fisubrs
insb
or
pop
pop
fwait
das
xor
rorb
mov
xchg
xlat
xchg
cmpsb
dec
in
push
xchg
jg
insl
mov
xchg
adc
mov
test
fisttpl
lahf
cld
ficoms
jecxz
mov
adc
lcall
scas
mov
pop
insb
jnp
push
xchg
scas
xor
lods
mov
outsl
pusha
ds
xor
pop
scas
mov
nop
mov
dec
lahf
mov
and
dec
mov
cmp
mov
mov
jg
test
mov
cmc
dec
test
sbb
pop
cld
test
push
xchg
xor
neg
adc
dec
xchg
sbb
sub
pushf
iret
xchg
dec
push
insb
lock
shl
lret
jne
shr
mov
xor
pop
fstps
dec
add
pop
sub
shl
inc
inc
ficompl
or
xor
inc
fdivrs
adc
in
call
lea
out
jecxz
cs
out
jno
mov
cltd
test
inc
dec
pop
cmp
inc
test
dec
xor
cwtl
sub
pcmpeqw
jne
jmp
pop
sahf
outsb
je
dec
popf
rcrl
cmp
int
cltd
sub
lock
addb
outsl
xchg
xor
add
in
fwait
mov
add
popa
ret
push
dec
and
xor
shrb
mov
fmul
ja
add
in
and
jge
popf
adc
or
xchg
cmp
out
and
or
mov
lret
mov
leave
jne
adc
sbb
jnp
sbb
sbb
enter
or
imul
inc
jbe
and
sub
jmp
out
ud1
xor
out
mov
jnp
and
push
mov
ljmp
pop
pmaddubsw
push
scas
push
es
cmp
sbb
insl
out
jns
push
mov
xor
cs
mov
adc
jg
pop
call
mov
pop
flds
dec
dec
aaa
inc
mov
cmpsl
mov
push
sub
mov
adc
pop
testl
mov
push
fistl
mov
inc
xor
xor
and
sub
jge
inc
mov
sbb
pop
lcall
xor
fistl
gs
scas
sub
loopne
loope
aam
xchg
pop
dec
add
mull
inc
insb
ds
inc
xchg
inc
into
in
or
ret
int
leave
pusha
aaa
xchg
loope
add
or
pop
jge
dec
and
xor
outsb
mov
inc
push
push
push
and
xor
out
orb
cltd
insb
test
mov
mov
je
dec
push
in
test
addr16
insl
js
pop
repz
pop
int
les
mov
mov
out
loope
repnz
int3
and
daa
jg
mov
cmpsb
dec
insb
adc
push
inc
xchg
add
mov
push
mov
jo
pusha
mov
lcall
jecxz
ficoml
xor
and
cltd
repz
leave
pop
jb
cmpsb
cmp
mov
sbb
hlt
shr
jno
cmc
inc
xor
or
movsl
jl
in
fmul
std
dec
test
loopne
minps
cmpsl
jae
push
jo
xchg
mov
dec
enter
idiv
daa
sub
and
icebp
mov
sbb
inc
inc
repz
pop
imul
xchg
jbe
mov
jge
xor
fdivl
insl
popf
or
mov
add
pop
pop
pop
pop
xor
sbb
mov
int3
ljmp
roll
int3
push
aas
imul
scas
inc
xchg
lahf
out
rcll
je
lret
scas
gs
mov
push
mov
cwtl
mov
arpl
nop
in
das
push
add
cli
fneni(8087
daa
adc
les
loop
int
icebp
ds
push
xchg
inc
mov
push
xchg
mov
push
cli
fs
in
cmp
xchg
insl
ret
sub
add
jae
fs
jae
xlat
loope
lea
pop
ljmp
bound
aaa
sub
cmp
aaa
fisttpl
inc
cmc
xchg
jmp
lret
outsl
in
sbb
mov
repz
inc
jo
dec
lret
jp
cld
sub
cli
mov
sbb
sbb
sub
adc
pop
xor
mov
mov
xchg
jp
dec
jge
or
xor
cs
jle
icebp
scas
jp
pop
fiaddl
mov
in
cmp
pop
sub
jle
adc
cli
rclb
fnsave
sbb
xor
insb
imul
jecxz
nop
push
jmp
xlat
fisubrl
adc
mov
mov
xchg
test
stos
inc
xchg
out
fwait
adc
mov
icebp
jmp
push
sahf
shr
and
lods
cmpsb
push
jns
test
add
mov
jl
sbb
pop
xchg
popa
daa
jne
lret
xchg
adc
mov
push
insl
mov
dec
in
cwtl
inc
lock
pop
pushf
sarb
jp
jne
push
dec
dec
pop
lods
xchg
fs
jmp
sahf
mov
push
mov
pop
lods
mov
jmp
dec
out
inc
mov
orb
loop
add
dec
inc
sbbb
inc
add
adc
push
sbb
ret
push
movsl
mov
jge
lret
adc
dec
sub
cwtl
jecxz,pn
repz
or
cli
mov
iret
mul
or
les
adc
mov
dec
adc
mov
cli
fildl
fcomps
mov
daa
cmp
dec
sub
movl
clc
and
mov
scas
icebp
inc
fnstenv
push
adc
ret
aam
imul
sbb
in
