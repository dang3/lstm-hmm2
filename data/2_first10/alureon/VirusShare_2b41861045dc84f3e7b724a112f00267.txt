jge
add
pushf
mov
add
ret
add
mov
add
cli
mov
add
sub
add
dec
mov
add
insl
mov
add
popf
mov
add
mov
mov
add
add
add
sub
add
dec
mov
add
mov
add
mov
add
lds
add
jmp
mov
add
mov
add
insb
mov
add
lahf
mov
add
add
add
mov
xlat
sub
js
mov
imul
icebp
dec
aaa
dec
lret
repz
out
xor
mov
scas
xor
dec
dec
dec
jp
xchg
test
mov
xchg
insl
mov
add
sbb
xor
mov
dec
mov
inc
push
mov
ret
mov
jge
or
and
sti
insl
sti
xchg
cli
loopne
xchg
out
sub
push
mov
push
mov
add
lea
call
lea
xor
call
mov
push
imul
call
call
call
inc
add
mov
mov
inc
sub
dec
movswl
imul
imul
inc
movzbl
lea
lea
dec
movsbl
mov
add
movzwl
movsbl
mov
lea
mov
sub
imul
call
inc
sub
call
mov
or
inc
add
or
inc
imul
dec
add
pop
lea
lea
sub
add
inc
pop
inc
mov
pop
mov
lea
sub
lea
pop
add
dec
mov
mov
sub
sub
lea
inc
pop
add
sub
pop
add
inc
mov
xor
lea
call
mov
dec
add
sub
ret
dec
xor
push
imul
sub
push
inc
lea
push
lea
push
add
dec
push
dec
lea
mov
lea
add
push
mov
ret
push
add
add
lea
mov
add
and
inc
push
mov
add
push
or
call
pop
ret
jmp
inc
and
lea
inc
movzbl
mov
lea
xchg
imul
or
imul
lea
xor
mov
inc
lea
dec
inc
mov
or
dec
jne
dec
mov
lea
add
pop
inc
dec
pop
sub
imul
pop
mov
lea
mov
dec
add
inc
sub
lea
mov
mov
mov
add
ret
push
xor
sub
mov
inc
inc
dec
movzbl
dec
push
push
push
push
lea
lea
mov
push
or
inc
sub
inc
and
inc
inc
imul
sub
mov
lea
push
mov
add
xor
mov
dec
push
dec
movzwl
push
lea
and
pushl
sub
call
imul
add
dec
dec
inc
mov
or
lea
inc
pop
ret
jb
sub
xor
add
xor
mov
add
inc
mov
inc
mov
inc
sub
dec
movsbl
add
movsbl
lea
mov
inc
inc
cmp
jb
add
mov
or
xor
lea
xor
mov
dec
pop
mov
mov
test
jbe
add
inc
lea
mov
add
movzwl
and
mov
movsbl
lea
dec
inc
dec
inc
sub
or
inc
mov
mov
sub
mov
dec
inc
and
add
sub
mov
add
inc
movzbl
lea
sub
add
and
dec
and
mov
mov
mov
imul
sub
mov
dec
add
mov
inc
sub
mov
mov
and
inc
dec
imul
lea
dec
jne
dec
mov
lea
inc
inc
dec
lea
add
add
sub
lea
mov
mov
inc
dec
mov
mov
add
inc
sub
mov
mov
lea
mov
test
jbe
mov
movswl
or
lea
mov
dec
inc
inc
lea
imul
inc
add
lea
dec
mov
inc
inc
inc
mov
lea
inc
lea
and
imul
dec
mov
lea
mov
movzbl
mov
mov
add
sub
add
and
mov
mov
mov
mov
dec
movzbl
mov
inc
mov
mov
mov
mov
lea
add
movzbl
mov
add
add
add
jmp
push
call
and
xor
mov
mov
xor
dec
dec
inc
mov
movzbl
inc
add
add
xor
or
dec
inc
lea
shl
movswl
sub
xor
inc
mov
push
xor
dec
inc
call
add
pop
dec
mov
lea
xor
add
add
lea
dec
cmp
je
call
call
inc
iret
movswl
inc
inc
lea
mov
or
lea
dec
mov
mov
add
add
mov
lea
pop
and
ret
push
mov
mov
mov
sub
and
push
inc
movzbl
push
imul
push
add
push
or
mov
push
movzwl
dec
sub
movsbl
mov
call
inc
push
inc
push
dec
pop
mov
sub
mov
movzbl
dec
mov
mov
xor
inc
mov
add
dec
je
dec
inc
movsbl
add
inc
inc
inc
add
mov
mov
mov
add
mov
xor
mov
dec
dec
repnz
lea
mov
add
mov
jmp
imul
inc
add
lea
dec
imul
add
mov
or
dec
inc
movzwl
jmp
inc
movzbl
lea
add
pop
pop
ret
push
inc
inc
movsbl
mov
dec
and
add
lea
dec
mov
mov
mov
xor
dec
imul
mov
mov
mov
lea
sub
dec
mov
mov
sub
add
movsbl
pop
ret
sub
imul
mov
add
lea
mov
lea
sub
mov
inc
movzbl
mov
or
add
xor
add
sub
mov
mov
dec
inc
mov
lea
sub
dec
sub
imul
cmp
jb
mov
push
mov
dec
push
dec
inc
push
dec
add
mov
mov
mov
xor
mov
dec
xor
or
sub
xor
sub
mov
push
lea
sub
xor
sub
sub
mov
mov
or
movzbl
add
inc
mov
add
dec
inc
add
lea
movzbl
xor
and
add
inc
sub
and
dec
inc
inc
mov
sub
movsbl
add
dec
dec
cmp
jmp
xor
add
sbb
or
cmp
fdivrl
clc
in
test
test
xor
ret
lods
sbb
push
mov
outsb
inc
cmpsl
das
mov
scas
hlt
lret
xchg
and
stc
subb
sub
push
sarl
sbb
scas
outsb
sbb
dec
clc
mov
cli
cmp
repz
imul
jecxz
test
std
call
adc
pop
sub
or
push
dec
add
xchg
fcompl
cwtl
int3
orl
inc
je
and
jmp
and
mov
xor
xchg
mov
cmpsb
mov
decb
sti
fadd
out
sub
movsl
movsl
xchg
and
mov
repnz
mov
push
add
adc
mov
cmp
xchg
jg
mov
xor
xchg
adc
scas
mov
adcl
enter
inc
mov
mov
insl
mul
inc
orl
xlat
jb
sarl
lea
aaa
sub
test
xor
test
push
jnp
and
xchg
jle
pop
test
dec
stos
mov
xlat
push
ret
jmp
cmp
jmp
mov
ror
dec
jmp
push
jp
dec
sub
cmp
sarl
into
mov
popf
out
lret
xchg
lret
movsl
jp
adc
cltd
and
and
mov
mov
jne
mov
daa
push
mov
icebp
outsb
pop
xor
adc
and
int3
jnp
cmp
push
push
movsb
inc
cld
inc
loope
mov
jbe
fdivrs
xchg
stos
cltd
add
fstl
cmp
mov
iret
movsb
jne
add
xchg
pop
dec
les
cmc
into
jo
sbb
in
jge
jns
sbb
dec
dec
cmpl
es
lret
ss
rcrb
mov
cs
insl
add
sbbl
sub
pop
test
dec
inc
arpl
mov
les
mov
add
xchg
jb
cmpsl
loopne
mov
cmp
push
les
xchg
sbbl
cld
jb
mov
sahf
incb
mov
test
pushf
cmp
mov
rclb
mov
dec
and
pop
xor
ret
add
mov
out
mov
xchg
mov
mov
fbld
lea
xchg
imul
pop
cwtl
inc
pusha
or
mov
fnstcw
mov
in
das
stos
repz
cmp
xchg
js
test
dec
addr16
shr
call
enter
lods
enter
aas
mov
push
sub
mov
mov
mov
lcall
testl
test
push
hlt
ja
mov
inc
push
jp
flds
adc
lret
mov
pop
cmp
scas
inc
pop
stos
cld
clc
xor
shl
ljmp
js
neg
mov
fld
lock
inc
popa
inc
adc
popf
dec
dec
sub
jns
ficoml
jbe
lock
fisubrl
lea
push
leave
dec
push
ret
adc
hlt
and
arpl
add
push
out
std
lods
jmp
xlat
ficoms
or
mov
out
or
js
inc
arpl
movsb
imul
mov
jne
mov
fadds
inc
hlt
mov
push
push
mov
cmp
add
and
push
dec
mov
cmp
or
jae
stc
fdivr
cmpsb
xchg
cwtl
cltd
xchg
cs
scas
repz
sbb
std
loope
add
jecxz
test
jnp
ret
loop
lock
pushf
inc
dec
xorl
xor
or
jbe
mov
inc
dec
clc
in
or
fdivrl
test
iret
je
lret
sbb
pop
fwait
mov
imul
aad
arpl
in
xor
jp
xchg
sbb
imul
xor
mov
and
les
jle
mov
mov
pop
mov
rolb
push
xchg
mov
mov
lahf
cmc
and
and
out
push
arpl
push
jns
imull
in
cltd
aam
das
aam
mov
insl
rcl
ret
sbb
inc
mov
cmp
lcall
xor
rcrb
pop
cmp
test
les
loopne
jg
int
imul
jb
inc
cmp
cmpsl
ret
mov
cmpsb
arpl
in
fwait
inc
push
sub
inc
dec
mov
pop
dec
cmp
stos
jmp
rclb
sbb
jg
or
dec
dec
sti
das
jnp
popf
ja
dec
sbb
imul
out
sarl
mov
mov
ret
adc
inc
outsl
gs
add
insb
cmpsl
in
inc
mov
int3
and
push
inc
sub
push
sbb
sbb
ljmp
outsl
adc
insb
mov
dec
xchg
mov
shrl
xchg
adc
xor
lds
sti
std
daa
sub
jl
pop
test
cwtl
ljmp
lcall
lcall
aad
arpl
iret
int3
mov
add
out
daa
ss
xor
sbb
imul
std
mov
cli
ss
cmp
cwtl
xorb
or
jno
dec
out
xlat
jg
in
xchg
mov
push
jg
or
js
push
push
sub
push
and
int
inc
xor
fistl
lods
jmp
call
sub
ds
in
pop
stos
cmpsb
cmp
jo
lcall
movsl
xchg
pop
lods
std
pop
pop
jo
and
push
das
data16
mov
mov
pusha
sahf
jo
stos
cli
ret
sub
stos
cwtl
cltd
fstpt
jbe
repz
push
and
out
pop
and
imul
popa
jbe
mov
add
clc
out
xchg
fs
fisubrl
or
dec
je
call
shll
add
xor
icebp
sbb
fidivs
rorb
push
and
sti
rorl
mov
pop
loop
and
lret
adc
xor
xor
push
adc
adc
or
mov
adc
dec
mov
in
push
inc
imul
pop
dec
lock
xchg
lahf
ret
cmpsb
in
push
pop
push
fdivs
call
mov
or
imul
sbb
repnz
sbb
or
stos
and
mov
mov
xchg
enter
sbb
xchg
mov
ljmp
out
or
inc
cmp
add
lahf
adc
decb
mov
jbe
popa
sub
mov
shl
int
mov
into
imul
dec
int
dec
mov
stos
sbb
mov
aas
or
dec
cmp
adc
push
repz
jl
sbb
mov
in
sbb
mov
push
int3
pop
popf
fldl
fidivrl
mov
int
andb
icebp
rorl
mov
mov
in
pusha
sub
pop
pop
jbe
bnd
cmpl
mov
addr16
imul
ret
out
mov
cltd
sahf
fucomp
roll
cmpl
loopne
mov
data16
xchg
out
ja
ret
repz
add
insb
lcall
xor
mov
andb
mov
xchg
pop
or
mov
sub
in
fs
add
lcall
xor
mov
jecxz
test
sbb
clc
sbbl
sbb
dec
sbb
test
and
push
xchg
ss
addr16
fisubrs
cwtl
adc
adcb
sbb
jno
mov
cltd
pushf
or
adc
mov
outsl
pushl
int3
aas
out
fsubrs
push
mov
mov
inc
cmp
cmpsb
sti
repnz
pop
jbe
andb
out
sahf
mov
xchg
pop
push
sub
movsl
or
jae
jne
pop
mov
outsl
dec
sub
sbb
movsb
xor
jp
stos
cmp
scas
clc
popl
lods
bnd
rolb
jae
ja
out
out
ss
and
pop
popf
and
ror
ret
rclb
pop
mov
clc
mov
lods
lcall
push
nop
scas
jb
mov
rolb
adc
scas
sbb
ror
add
mov
push
sub
adc
aas
cmp
inc
inc
and
jge
mov
mov
xchg
testl
mov
les
out
shrl
xor
add
add
in
xchg
cmp
aas
and
sbb
data16
insb
and
mov
pop
inc
xor
mov
jge
mov
ss
aad
stos
mov
out
push
xor
jbe
dec
rolb
sbb
ret
jne
arpl
push
xor
cmp
sti
pop
push
push
mov
scas
arpl
int
cmp
inc
lahf
mov
mov
popf
pop
cmpsl
imul
mov
ljmp
add
dec
jmp
insb
mov
cmp
mov
enter
jne
sar
imul
fmul
add
add
jp
add
sarl
add
add
add
sub
add
push
or
add
xor
adc
or
add
dec
add
das
or
add
jmp
push
and
dec
popa
sbb
std
dec
iret
lock
outsl
mov
aaa
push
fsubl
divb
dec
xorb
dec
movsb
into
outsb
mov
sub
out
adc
imul
dec
clc
push
dec
and
inc
cmp
nop
sub
in
mov
mov
jl
fistpl
push
lret
andl
jae
push
sub
arpl
mov
rcrl
or
retw
sar
pop
aad
in
call
adc
lea
clc
push
jecxz
icebp
add
push
xchg
iret
hlt
add
icebp
and
adc
sbb
pop
test
pop
xchg
xor
adc
cmp
das
dec
lds
sub
push
imul
stos
ret
out
int3
pop
in
jle
mov
jl
rorl
sub
mov
andb
xchg
add
iret
inc
loop
cwtl
mov
leave
dec
insl
fcomps
sub
movb
mov
ss
xlat
test
movsl
jo
test
int3
jnp
push
insb
ss
hlt
imul
in
fwait
xchg
leave
xchg
add
dec
lds
mov
xchg
inc
mov
mov
mov
rcrl
push
std
inc
and
out
mov
mov
xchg
mov
xchg
and
or
iret
icebp
and
scas
jge
pop
std
inc
push
in
mov
push
shr
cmp
das
sbb
insb
mov
ja
pop
add
pop
out
imulb
mov
sbb
test
in
imul
xchg
pusha
je
popf
dec
fwait
or
fucomp
xchg
and
cli
stc
adc
inc
loopne
xchg
scas
sti
xchg
and
push
mov
sub
sbb
dec
aad
dec
push
pop
adc
and
pop
jecxz
int
xor
scas
pop
outsb
scas
sub
lods
das
loop
xor
xchg
mov
mov
iret
lods
mov
lahf
xor
lret
sub
cmpsb
jbe
push
leave
jno
leave
or
ficomps
popa
popf
push
je
mov
jmp
inc
scas
sbb
push
sbb
adc
pop
rcl
xor
and
add
or
cmp
dec
push
out
aam
dec
adc
out
gs
daa
xor
scas
test
outsl
mov
jg
mov
test
xchg
jbe
jns
push
jno
xchg
pop
and
int
jns
in
mulb
inc
push
jmp
enter
or
mov
dec
dec
mov
outsb
inc
stos
pop
mov
mov
pop
in
pop
inc
cmp
rcr
sbb
mov
push
and
pushf
rclb
mov
ss
sti
cmc
out
jle
das
popf
nop
jb
clc
jnp
pushf
sub
sbb
pop
rcr
dec
push
lret
pop
mov
mov
sub
mov
add
mov
sbb
enter
add
cmc
pop
add
stos
xchg
adc
sub
and
sub
xchg
xchg
decl
and
ljmp
cmp
std
lahf
pop
mov
frstor
inc
lods
push
sbb
pop
shlb
out
and
sbb
pop
aas
lds
xorb
fidivrl
dec
inc
adc
sahf
shlb
nop
cld
or
and
mov
jns
xor
arpl
in
enter
popf
push
xor
lods
add
cmp
gs
and
pop
repnz
out
mov
nop
std
push
jns
les
or
jno
push
mov
cmp
xor
adc
mov
ja
lcall
jp
out
test
fcomi
fiadds
aad
push
aam
xor
sub
sahf
pop
imull
cmp
add
adc
pushf
sbb
sub
lods
pop
cmpsl
sbb
mov
lods
js
xchg
ja
xchg
and
pop
mov
je
mov
mov
clc
inc
xchg
pop
add
ror
and
xor
cmp
add
imul
add
hlt
fidivl
xchg
data16
popf
mov
push
sbb
fmull
sbb
mov
add
in
sbb
jo
adcl
xor
mov
movsb
shr
xchg
mov
bound
pushl
cmc
js
test
and
mov
inc
subb
pop
faddl
fcomps
ret
orl
xchg
repz
add
xchg
mov
lret
mov
lods
in
add
jg
sub
xor
ja
sub
cmpsb
rcrb
sub
push
jo
push
out
inc
xchg
push
stc
cmp
out
fisubl
das
inc
mov
pcmpeqb
add
sbb
data16
adc
nop
lods
xor
test
sahf
mov
jbe
sarl
and
movsl
loope
fsubrl
cmp
xor
dec
lret
mov
or
jle
flds
cmp
cltd
inc
addl
inc
cs
sub
mov
mov
ret
fdivr
jns
lods
std
cwtl
in
gs
test
xorb
jmp
imul
pop
aaa
cltd
lds
mov
sbb
mov
into
pcmpgtb
leave
mov
adc
pop
adcb
repnz
imul
lcall
je
rep
leave
add
dec
pop
inc
dec
sub
mov
ss
adc
fisttpll
inc
sbb
dec
testb
ffree
xchg
adc
mov
xor
xchg
xor
jne
mov
mov
or
xor
pop
das
shrl
rcll
lea
stos
pop
dec
mov
xchg
cmpsl
shld
push
arpl
mov
mov
adc
mov
ja
loope
les
pop
jmp
mov
lock
mov
xlat
pop
cwtl
aaa
ja
stos
in
mov
mov
jge
xchg
adc
jb
das
adc
mov
xor
int3
pop
jl
dec
test
xor
cwtl
repnz
pop
sub
and
mov
data16
jns
ret
jmp
adc
sbb
sub
pushf
pushf
shrl
xor
xchg
shl
cmpsb
testb
dec
outsl
sarb
pop
cld
push
pop
or
movsb
and
jae
aad
push
mov
lock
insb
xorb
inc
add
je
enter
dec
or
mov
or
cltd
cmp
jo
sbb
ret
inc
popa
dec
push
sbb
fwait
cli
shll
stos
jp
jns
push
mov
mov
imul
sbb
inc
call
inc
outsb
mov
mov
dec
mov
or
add
pop
orb
mov
je
xchg
out
add
sbb
out
aas
adc
pop
fwait
jmp
inc
jge
jnp
inc
xor
stc
mov
jno
negb
add
mov
mov
push
inc
pop
xchg
imul
push
sbb
jge
dec
mov
repnz
xchg
xor
adc
push
fcomip
inc
fidivrl
movsb
sbb
pop
stos
stos
repz
out
pop
mov
bound
mov
movl
lds
dec
popf
pop
data16
jmp
cmp
faddl
adc
shr
dec
inc
rcrl
mov
ror
adc
inc
sbb
ja
xor
ljmp
jb
dec
mul
rclb
sub
jmp
fcomip
pop
cmpl
outsb
mov
mull
mov
sahf
rolb
fidivl
xchg
out
sbb
jb
repz
xchg
push
data16
lock
mov
sbb
outsb
dec
out
mov
roll
cmp
outsb
lock
dec
jg
xchg
sti
testl
out
shll
cmpsb
clc
inc
call
pop
xor
or
dec
sub
mov
out
mov
addl
xchg
fbstp
xchg
repz
sbb
sub
shlb
mov
lret
leave
pop
inc
pop
add
insb
dec
mov
sub
into
fadds
mov
sub
int3
or
sub
cwtl
xchg
dec
dec
nop
sbb
inc
mov
mov
aam
imul
lods
xchg
loope
jecxz
jecxz
mov
sbb
test
add
fprem
adc
imul
and
addr16
or
mov
cmp
test
push
cmc
jne
outsl
push
outsl
lods
mov
insl
out
pushf
mov
sub
mov
xchg
mov
pop
lock
daa
dec
xchg
add
push
shl
les
stos
sahf
sub
mov
fistpll
push
ds
cmp
jmp
mov
fs
push
loop
aaa
sbb
jle
jg
test
push
or
cs
cmp
push
mov
stos
nop
daa
dec
movsl
push
mov
mov
inc
push
jne
lret
inc
rorl
dec
out
inc
xchg
push
adc
stos
outsb
mov
or
mov
sub
in
or
adcb
lds
aad
mov
out
lcall
ret
scas
xor
jp
jo
push
lret
dec
push
sbbb
orb
mov
in
mov
pusha
jl
and
fildl
clc
aam
xlat
push
cmp
and
rol
add
or
mov
cmpsl
mov
sub
repz
arpl
mov
test
sti
sbb
dec
aas
dec
inc
loope
rorl
lret
xor
out
cld
cmc
sbb
ja
pop
mov
stc
lea
fldl
in
in
cmp
lods
and
jmp
push
rclb
cld
xorl
out
inc
sbb
dec
insb
ljmp
sbb
jns
adcb
mov
jnp
es
xor
jne
dec
mov
xor
mov
aaa
pusha
shl
inc
dec
aad
dec
pusha
sti
cmp
xchg
in
sbb
sbb
sbb
fbstp
or
xchg
jb
scas
mov
dec
pop
cmp
pop
mov
aaa
shll
xchg
jmp
addb
sarl
stos
cld
xchg
test
push
pop
or
inc
das
xor
hlt
xchg
dec
ja
loopne
fbld
imul
int3
mov
pushf
sbb
lods
xchg
cld
das
jno
inc
iret
imul
sbb
js
adc
inc
adc
aas
subl
add
icebp
arpl
cs
mov
lcall
ret
xor
jg
adc
dec
or
int3
stc
outsb
pop
cs
fimull
out
cltd
push
sbbb
xchg
insb
mov
outsl
mov
mov
mov
movsb
pop
inc
cmp
out
cmp
jne
sbb
dec
movsb
adc
insl
adc
ret
push
in
sbb
mov
jp
rolb
hlt
sub
nop
mov
mov
cmp
nop
stos
mov
lcallw
pop
outsl
xchg
outsl
sahf
inc
jg
test
mov
icebp
xchg
scas
pop
outsl
hlt
inc
xor
pop
fists
dec
icebp
mov
ret
out
cmp
pop
lcall
mov
jbe
or
xchg
or
repnz
mov
mov
repnz
shll
push
insl
push
xchg
pop
test
mov
lret
filds
pop
mov
dec
sar
dec
and
xchg
or
xor
sarl
mov
xlat
jmp
dec
and
orb
sub
jne
lcall
repz
jo
je
clc
xchg
pop
shll
and
popa
or
sbb
xlat
hlt
or
in
aad
pop
ja
inc
pop
test
sbb
mov
xor
in
out
out
push
jp
mov
fcmovnu
scas
xchg
iret
fcomp
inc
and
mov
sarb
sub
sbb
pusha
mov
push
sub
lods
sub
fadds
push
xchg
and
mov
push
incb
int3
jge
ret
mov
fcoms
adc
sub
lods
cmp
cmc
mov
je
and
aas
sub
in
cmp
mov
lret
int
inc
xor
xchg
mov
in
aas
sbb
dec
cmpsb
mov
jbe
push
mov
sub
testl
negb
sub
push
in
jnp
inc
mov
stc
aad
incl
popf
mov
out
gs
popa
xor
mov
jnp
xchg
test
jl
stos
sub
in
xor
sub
pop
js
mov
les
adc
ficomps
gs
pop
and
ja
pop
mov
pop
xorl
loop
cmc
aam
fdivl
sbb
aaa
push
sarl
sbb
and
imul
sub
or
pop
mov
push
lret
sbb
sti
push
push
xor
mov
push
push
scas
ret
sbb
cmp
xchg
xchg
pop
lahf
mov
inc
push
sub
filds
xchg
lcall
int3
ret
es
add
mov
cs
leave
and
insb
mov
mov
cwtl
adc
sub
jg
popf
test
jg
xchg
adc
sub
daa
pop
adc
es
movsb
adc
mov
cli
popf
mov
loope
scas
es
aas
je
xchg
into
rorb
cmp
mov
sbb
mov
cmpl
push
add
push
add
or
movsl
push
cmp
jge
mov
jp
fmulp
into
sbb
lcall
add
test
mov
out
test
aaa
cmp
jecxz
mov
orb
inc
pusha
ud1
xor
fcoms
dec
in
inc
jp
repnz
jp
imul
movsl
pushf
inc
jmp
cs
and
mov
mov
fidivrs
sbb
sub
into
stos
int3
popa
in
cmp
sti
adc
mov
ja
ljmp
ret
inc
lret
jecxz
xchg
push
lret
lret
hlt
adc
mov
loop
nop
stos
jp
xchg
dec
xor
les
loope
jno
leave
lcall
ja
iret
inc
and
push
test
aad
xor
imul
dec
sbb
bound
fcmovne
mov
mov
cmp
pushf
add
adc
shrl
add
repnz
fidivs
les
cmp
in
mov
cmp
test
loope
sub
ljmp
jnp
mov
js
sbb
jge
jb
insb
jp
mov
push
inc
andb
leave
test
int3
sub
mov
mov
inc
mov
cmc
sbb
adc
fst
cmp
pushf
lret
or
mov
divl
add
or
mov
pop
push
cmp
std
pusha
dec
jge
mov
push
sub
rcr
and
push
sarb
cmp
gs
scas
and
repnz
mov
mov
std
inc
dec
shl
dec
and
psrlw
je
hlt
shlb
jbe
or
jmp
fisubrs
jns
cmp
fdivl
addr16
mov
dec
or
or
movsb
jl
in
pop
push
ljmp
bound
mov
stc
push
mov
ret
in
mov
jp
push
sbb
ret
loop
orl
pop
lahf
lret
push
aas
loopne
xchg
dec
mov
cmc
xor
out
sar
pushf
mov
stos
xchg
push
lret
cmpsb
push
in
imul
sub
daa
or
adc
scas
and
movsb
pop
sub
push
push
mov
push
jo
xchg
xor
mov
jb
xor
adc
fnstcw
add
es
dec
cmpsl
fs
cmp
notb
test
pop
in
cmp
test
pop
ret
mov
and
sbb
xor
ja
fcomps
mov
test
cmp
cwtl
mov
cld
mov
dec
daa
cmpsb
xor
adc
shlb
scas
bound
xchg
cmp
xor
enter
loopne
mov
dec
xchg
fistl
es
sub
es
sub
mov
mov
out
mov
fcmovbe
sbb
nop
mov
adc
orl
push
inc
push
dec
fsubrs
mov
mov
ret
sarl
std
cmc
enter
shrl
test
mov
add
xorl
cwtl
push
int
inc
pushf
cmp
jecxz
sub
mov
outsb
mov
lahf
and
popa
cmc
lret
bound
jmp
lret
insl
sub
int
repz
mov
push
adc
dec
stos
ljmp
mov
test
dec
lcall
xchg
aam
in
sti
mov
sub
sbb
and
lds
pop
aam
adc
push
mov
scas
pop
push
iret
popf
mov
xchg
jae
sub
arpl
les
daa
jmp
les
lahf
ret
jb
and
jge
add
loopne
cmp
aad
cmpsl
sbbl
pop
mov
lds
xchg
push
rcrl
xchg
es
mov
outsb
xchg
pop
shlb
cs
xchg
stos
ret
jge
push
and
lcall
push
fists
add
stos
dec
into
xor
or
push
push
cmpb
cmpl
xchg
or
jg
testl
mov
or
inc
imulb
ficoml
mov
adc
ret
bound
aad
fisttps
sbb
sub
pusha
test
pop
fwait
call
rorb
xorb
out
int3
fs
jecxz
jp
flds
dec
movsb
push
push
jp
in
and
call
mov
sbb
mov
lahf
mov
mov
into
jle
xchg
sbb
out
js
dec
xchg
mov
pop
pushl
ret
push
nop
outsb
xlat
xor
and
fs
sbb
pop
lret
loope
mov
pop
out
and
es
imul
cltd
dec
sub
cli
fdivrs
ljmp
push
add
add
fidivs
add
insb
inc
and
sub
shrl
jg
sub
mov
fisttpl
xchg
dec
cld
jg
ret
dec
ret
loope
and
jb
dec
test
and
and
scas
int
cmp
xchg
in
sahf
movsl
shll
int3
fistps
lods
in
data16
pop
jg
insl
xor
cwtl
sbb
out
bound
jp
push
fisubrl
insl
scas
push
mov
imul
and
leave
mov
mov
add
aad
xchg
sbb
jle
sbb
sbb
mov
adc
insb
xchg
dec
jg
fiaddl
lds
rcrb
cmpl
and
xchg
push
or
and
xor
aam
cmpsb
mov
adc
dec
cltd
outsl
mov
mov
repz
iret
mov
inc
push
fs
mov
test
pop
js,pt
mov
jmp
clc
mov
enter
dec
sub
mov
xchg
fldt
add
push
ds
mov
dec
int
mov
lock
push
aam
and
xor
or
push
ljmp
leave
test
pop
popw
in
fucom
push
stos
xchg
pusha
icebp
test
ffree
into
mov
lods
mov
out
adc
sbb
pop
loopne
pop
push
mov
jno
adc
xor
int
pop
add
push
rcrb
cld
std
out
ret
push
mov
cwtl
test
inc
loop
aaa
nop
hlt
loope
fs
es
lods
sti
mov
jp
cmp
adc
test
cmp
fstps
sarb
enter
jge
clc
xor
mov
adc
popf
push
sbb
pop
push
ds
jp
and
pop
xchg
ja
scas
mov
sub
ffreep
xchg
daa
loopne
out
add
pop
movsb
xor
push
test
dec
addl
push
inc
mov
or
dec
std
imul
or
mov
xchg
lahf
sbb
cmpsb
fucom
mov
sub
jne
dec
mov
push
pop
cs
jb
sbb
outsl
in
mov
mov
ret
aaa
cwtl
stos
test
flds
call
xchg
push
pusha
sahf
mov
dec
cwtl
clc
and
iret
pop
cmp
aad
loop
sbb
loope
jb
push
loopne
les
jg
andl
sub
mov
scas
jg
push
push
mov
loopne
jge
and
stos
cmc
pop
in
jp
stos
pop
insb
push
out
mov
outsb
add
add
xor
ja
aas
jae
fcomi
mov
inc
adc
sbb
mov
roll
pusha
enter
and
sub
pop
push
dec
jnp
and
fcomip
aaa
push
into
jb
jae
cmpsl
pop
cmc
test
lcall
inc
and
hlt
stos
sbb
pop
mov
xor
add
enter
sub
punpckhbw
xchg
jl
adc
jge
fmull
cld
sti
mov
shlb
jb
adc
sbb
or
imul
dec
push
rcl
pop
dec
lods
mov
mov
add
shlb
iret
push
fisttpl
sbb
mov
movsb
scas
arpl
enter
push
mov
scas
and
lods
dec
scas
fsts
jae
outsl
and
fmull
ja
mov
inc
sbb
xor
ljmp
and
scas
jno
mov
sbb
popa
sub
adcl
shlb
hlt
cmpsb
loope
cwtl
negb
or
sti
jno
add
sbb
fwait
xor
ljmp
in
xchg
mov
jnp
test
adc
xchg
out
mov
or
or
sub
jl
subl
pop
nop
pushf
xorl
roll
or
xor
pusha
test
je
outsl
bound
fistps
pop
outsb
pushf
iret
xchg
iret
jb
inc
insl
aam
mov
or
cmpl
adcl
xchg
lds
pop
stos
mov
cld
or
cmp
clc
inc
cli
ret
jmp
adc
push
dec
inc
dec
fsts
adc
fnstsw
or
inc
cmp
lods
into
stos
push
pop
lret
out
mov
or
xchg
push
mov
je
jmp
inc
sbb
sahf
dec
aad
add
iret
mov
cmpsl
push
sub
fdivs
insb
pop
rorl
test
cmp
clc
pop
testb
fucomp
aas
cmp
in
in
negb
pop
jp
xor
out
cmp
xchg
adc
cmp
mov
and
xchg
test
sahf
testl
xchg
jp
push
gs
mov
fcompp
stos
lret
daa
adc
or
jo
xor
mov
imul
out
push
xchg
stc
out
cs
outsl
inc
out
jmp
scas
pop
jae
fisubl
stos
pop
inc
mov
push
sbbb
sbb
sub
mov
mov
bound
add
stos
pop
mov
ljmp
pop
mov
mov
popa
cmp
ljmp
je
sub
and
or
out
shlb
lods
lods
data16
loop
fldcw
imul
mov
mov
mov
loopne
repnz
push
xor
dec
repz
leave
jp
push
fwait
push
xchg
popa
aas
lret
mov
cwtl
pop
addr16
ret
push
sbb
inc
and
ss
xor
ret
xor
decb
inc
ja
iret
repz
test
dec
inc
jae
jnp
mov
ss
push
movsb
pop
imul
jb
and
lds
jle
sbb
push
inc
inc
movsb
cmpl
pop
clc
or
fstl
loop
pop
fnstsw
lods
lret
imul
sbb
movsb
jmp
pop
jl
lret
je
vsqrtps
mov
cmpsl
iret
mov
pop
or
jecxz
add
jmp
lret
call
cwtl
mov
jmp
std
push
loop
aas
mov
jae
sub
mov
push
cmpb
xchg
movsb
scas
out
ret
add
cmp
cmp
mov
jne
pop
xchg
jae
inc
mov
test
mov
cmp
in
nop
sarb
lock
jne
sub
sti
pop
test
pop
push
outsl
popf
add
jmp
pop
sbb
out
mov
imul
inc
jg
mov
fcoml
xor
jbe
std
popa
mov
push
and
adc
aam
test
test
mov
add
xor
loopne
fnstsw
xchg
pop
inc
decb
jae
imul
aas
cmp
cmc
repnz
lods
pop
inc
test
xchg
lret
movsl
cmp
xor
loop
lea
loope
pop
rcr
inc
sahf
insl
dec
iret
mov
or
loop
aas
sub
cmp
adc
jno
jno
pop
mov
out
xor
scas
fdivl
inc
inc
rcr
sbbb
xor
imul
sub
es
fwait
adc
std
lods
mov
lods
adc
es
mov
mov
rolb
dec
cmp
add
cmpsl
cmp
pushf
jg
inc
out
int
jno
mov
mov
scas
or
rcrb
sti
test
fcmovnu
loope
cmp
or
push
jecxz
lock
adc
in
in
scas
inc
aas
not
mov
add
ret
xor
mov
jle
and
testl
iret
dec
adc
jae
das
out
aam
cli
cld
mov
imul
mov
roll
cmc
sbb
imul
and
pop
dec
adc
sub
add
fsubrs
fcomp
add
pop
sub
jne
or
pop
adc
sbb
mov
das
xchg
jp
xor
popf
shll
and
lcall
jp
sti
adc
adc
dec
jae
sub
pop
movsl
sbbb
sub
les
cmpsl
test
int
xor
push
je
inc
cmp
mov
imul
jmp
movsb
pop
stos
mov
lret
or
sti
repnz
xchg
xchg
mov
shlb
inc
in
mov
test
cmp
inc
stos
jp
stc
movsb
mov
mov
sbb
aam
lds
insb
fdivrl
xor
mov
inc
jmp
cld
adc
sub
and
dec
aaa
adc
cmc
jnp
and
fdiv
mov
jl
mov
aam
xchg
mov
insb
js
in
jno
xlat
fstps
sub
dec
pop
adc
mov
out
cmp
ss
mov
mov
cmc
and
push
dec
sahf
nop
or
push
std
or
xchg
std
pop
adc
ficoms
jmp
jecxz
cwtl
push
and
mov
cmc
jns
add
adc
mov
mov
daa
lahf
jnp
gs
cld
mov
cmpsl
jmp
int3
push
jo
xchg
cltd
ds
mov
rolb
ds
jmp
mov
jg
jbe
ret
dec
in
fnstcw
xor
jmp
loope
arpl
lds
in
incb
push
dec
or
xchg
iret
stos
mov
sahf
cltd
mov
sbb
push
rorl
sarb
mov
dec
mov
cwtl
sbb
std
mov
out
fldcw
or
sub
dec
scas
lahf
mov
and
mov
and
testl
push
lret
outsb
insb
outsl
push
mov
or
mov
cmp
mov
xchg
mov
inc
or
cld
inc
jle
add
test
jle
ljmp
pop
mov
mov
inc
nop
test
andb
cld
jae
jl
xor
jo
xor
outsl
data16
imul
lods
cld
and
and
xor
jg
or
int3
xor
jge
xor
lret
mov
outsb
fbstp
pop
jbe
stos
popa
cmpb
jns
and
addr16
sbb
mov
ret
jno
xorl
pop
cmpsb
imul
jmp
cmp
in
fcoms
adc
xor
pop
mov
out
add
mov
dec
adc
mov
ss
mov
pusha
das
fisttpl
dec
cld
and
jl
movsb
loop
xor
cmp
dec
adc
jbe
test
pop
jbe
push
cmp
adc
dec
stos
mov
imull
out
ja
sub
sbb
test
pushf
repz
test
shll
pop
jno
mov
rcrb
jnp
xchg
sub
imul
and
ss
add
jns
or
jl
mov
push
popa
dec
dec
pop
jns,pn
sub
add
adc
mov
bound
lock
dec
push
mov
shl
cmp
repnz
mov
xchg
push
cmc
push
jecxz
push
shr
in
dec
ss
shrl
xchg
in
sbb
dec
sbb
fbld
and
sbb
arpl
xchg
jb
test
jnp
in
out
gs
dec
dec
mov
mov
cmc
mulb
scas
jne
mov
repz
cmp
and
push
iret
mov
add
jle
mov
dec
xorl
mov
mov
js
call
in
mov
mov
out
dec
mov
cmc
aas
inc
scas
and
sbb
loope
arpl
cwtl
insb
sti
sub
loope
fidivs
lcall
movsl
jns
inc
push
popf
inc
fsubrs
imul
cmp
les
ja
movsl
ljmp
xchg
sti
jle
mov
ja
leave
cmp
je
push
push
addr16
xchg
lods
sub
sbb
repz
ljmp
movsb
mov
push
dec
jecxz
bound
mov
bound
daa
or
xor
jnp
xlat
icebp
stc
cmp
xchg
out
adc
das
push
and
sbb
std
sar
mov
ss
dec
add
or
not
inc
sub
xor
sbb
pop
pop
jecxz
jmp
mov
sbb
jle
jg
lret
test
insb
repnz
scas
cli
clc
loopne
or
and
nop
popl
repz
or
leave
mov
jnp
and
cmpsl
int
shll
xchg
bnd
rorb
xor
mov
popf
mov
lea
push
push
jg
idivb
lods
fldt
lds
cmp
jae
add
add
mov
test
clc
push
decl
in
and
les
insl
add
ljmp
sti
adc
movsl
cmp
pushf
inc
dec
lahf
cld
negl
mulb
dec
int3
enter
dec
dec
xchg
mov
icebp
cmpsl
xor
mov
mov
mov
jbe
scas
rclb
jmp
lret
call
lods
xor
iret
pop
or
ret
sub
iret
push
or
cmp
mov
and
mov
push
ficoms
xchg
imull
xchg
out
enter
xchg
pusha
push
pop
adc
scas
rcrb
push
sbb
mov
cs
push
mov
cmp
ret
pop
cmp
mov
je
std
aam
pop
sbb
add
movsl
lea
push
mov
fimuls
xchg
jae
jnp
repnz
cltd
in
pop
jmp
dec
mov
aaa
cld
cmp
cwtl
popf
push
test
mov
sbb
mov
sbb
and
outsb
push
imul
dec
aaa
cmp
idivb
sub
mov
clc
es
dec
xor
mov
or
sbb
cld
int3
mov
sbb
mov
in
mov
push
enter
adc
sarb
mov
xchg
das
ljmp
and
mov
inc
jae
fbld
adc
test
clc
dec
mov
das
xchg
fwait
mov
call
pop
aas
in
bound
arpl
or
dec
lret
fstl
lods
adc
fsubr
mov
addr16
push
addr16
ficoms
cmp
inc
mov
ss
push
push
push
ret
idivb
lahf
gs
add
fldcw
xor
in
out
out
fidivl
add
add
add
xor
add
xor
add
add
jp
xorb
xor
