push
mov
sub
add
mov
andl
mov
mov
push
push
and
add
push
lea
lea
pop
mov
mov
call
mov
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
sub
sub
sub
add
rol
lea
test
jne
mov
sub
add
mov
imul
add
mov
neg
mov
add
imul
add
mov
add
push
push
add
sub
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
call
mov
add
mov
add
decl
mov
jne
subl
addl
pop
pop
leave
ret
push
mov
push
push
xor
mov
mov
scas
je
push
add
pop
jmp
mov
mov
pop
leave
ret
push
mov
sub
sub
push
push
xor
mov
push
push
pushl
mov
push
call
test
mov
je
inc
cmp
jb
push
push
call
test
mov
je
cmp
je
push
push
pushl
mov
call
sub
jne
mov
push
push
pushl
push
call
test
pop
je
mov
mov
mov
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
mov
mov
sub
add
push
xor
cmp
push
push
je
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
movb
movb
movb
mov
call
cmp
pop
je
xor
jmp
push
push
mov
call
test
je
push
push
mov
call
test
je
mov
call
test
je
push
push
push
mov
call
test
je
push
push
mov
call
push
mov
call
mov
mov
call
mov
mov
call
add
add
cmp
je
xor
push
call
lea
call
push
push
pushl
mov
push
call
mov
test
je
mov
mov
mov
call
pushl
pushl
pushl
push
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
push
call
mov
test
mov
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
mov
sub
xor
cmp
mov
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
add
mov
push
push
push
mov
call
or
sub
mov
mov
mov
sub
cmp
mov
jbe
add
add
add
mov
mov
mov
add
addl
cmp
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
mov
call
test
je
mov
push
call
test
je
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
add
mov
push
lea
push
call
movzwl
xor
test
mov
jbe
mov
mov
addl
addl
push
mov
pop
rep
mov
add
add
add
mov
movzwl
push
add
pop
cmp
jb
push
push
pushl
mov
call
pushl
mov
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
mov
mov
sub
add
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
test
mov
jns
and
sub
cmp
jae
mov
jmp
xor
cmp
mov
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
sub
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
sub
sub
sub
mov
lods
xor
stos
sub
testb
sub
add
sub
add
rol
lea
test
jne
pop
pop
pop
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
sub
cmp
jb
pop
pop
xor
lea
test
ret
push
mov
sub
add
mov
add
mov
push
xor
cmp
mov
je
add
add
sub
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
sub
add
cmpl
jne
pop
pop
leave
ret
push
mov
sub
sub
push
lea
push
mov
mov
mov
mov
rep
mov
push
push
push
push
mov
call
mov
test
mov
je
push
call
mov
movzbl
lea
cmpb
jne
mov
mov
movb
call
mov
mov
mov
mov
mov
sub
add
lods
mov
sub
cmp
add
xor
mov
imul
sub
sub
stos
sub
rol
sub
jne
mov
mov
mov
mov
movzbl
imul
xor
inc
lea
test
jne
cmp
jne
push
push
push
push
mov
call
test
pop
je
pushl
push
push
call
mov
mov
call
push
push
push
mov
call
xor
push
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
push
push
push
push
mov
xor
add
mov
cmp
movzwl
push
lea
mov
jbe
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
sub
add
cmp
jb
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
add
sub
sub
push
mov
mov
add
mov
test
jne
lea
test
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
test
mov
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
xor
push
mov
call
mov
jmp
mov
movzwl
imul
add
mov
lea
test
cmp
jne
testl
je
push
push
mov
mov
mov
sub
add
xor
xor
mov
add
subw
sub
and
mov
add
sub
pop
pop
mov
pop
leave
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
cmp
mov
mov
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
sub
lea
test
jne
pop
mov
ret
xor
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
dec
inc
add
pushf
and
add
and
add
xchg
ret
xor
sub
js
lds
pop
lods
sub
ds
shll
js
rorl
cld
lock
mov
add
xlat
jecxz
mov
loop
pop
into
hlt
cld
pop
loop
popl
sti
inc
loope
arpl
push
into
sub
imul
dec
mov
push
aaa
mov
adc
movsl
or
or
sbb
mov
cmp
sahf
inc
test
clc
pop
add
sub
add
gs
push
mov
cltd
xchg
add
in
add
mov
sub
add
and
das
sub
popa
lcall
add
jno
pop
cmp
push
stc
mov
or
sub
shrb
jne
jl
xchg
loope
roll
and
mov
xchg
inc
cmp
stos
cmp
lret
aaa
mov
je
pop
fucomi
pop
cltd
std
and
addr16
mov
pop
or
xchg
bnd
fistpl
test
cmp
push
and
js
mov
jne
lahf
bound
mov
in
mov
jp
and
xchg
sub
orb
jno
mov
lcall
push
sti
movsb
outsl
or
dec
js
mov
fsubrp
test
fs
add
shl
pop
mov
xor
xchg
stc
in
dec
pop
mov
hlt
add
outsb
fwait
and
repz
jle
data16
mov
lahf
sbb
sbb
gs
xchg
lahf
fs
mov
cmpsb
scas
sahf
lcall
cmp
cmp
mov
std
sbb
loopne
cmp
push
testb
jmp
mov
ret
or
inc
gs
bound
inc
mov
shll
lods
mov
sarl
out
cs
cmp
add
inc
out
cs
or
sub
adc
mov
fwait
inc
mov
pop
push
ds
or
out
push
dec
out
pop
sub
in
xchg
nop
pop
mov
and
jle
int3
test
push
fs
test
xchg
enter
mov
inc
fcoml
inc
fstps
dec
mov
mov
dec
xor
orl
dec
fdivs
sbb
adc
sub
test
mov
out
insb
jmp
dec
jb
mov
shrl
loope
das
cmp
dec
jnp
push
repnz
cmpsb
pop
insb
mov
cld
paddusw
push
leave
jg
mov
dec
push
push
xchg
add
notb
subb
sub
jno
insb
sub
cld
test
lahf
out
mov
jmp
int
lods
push
jne
mov
fstl
leave
inc
test
mov
lahf
pop
jae
sub
bound
mov
sarb
pcmpgtw
mov
cmpl
add
mov
scas
push
arpl
rorb
je
sbb
sbb
sub
shrb
insb
sbb
jne
add
fwait
sbb
fs
and
push
xor
jg
test
jnp
clc
xchg
test
add
loopne
and
pop
jge
dec
call
xor
call
scas
dec
cmp
mov
hlt
fadds
cmp
repz
mov
dec
nop
mov
pop
add
mov
mov
or
mov
es
or
mov
out
push
add
cmc
jae
dec
xor
jl
xchg
xchg
test
add
dec
aas
sub
mov
inc
lea
inc
into
mov
lret
jb
pop
xchg
mov
in
push
in
shll
dec
repz
out
clc
insb
cmp
push
in
aas
mov
aas
mov
sbb
enter
fsubr
pop
pop
and
cmp
int
sbb
incl
mov
adc
out
ljmp
and
mov
sub
add
xchg
xchg
inc
sbb
popa
inc
aas
xchg
loope
stos
int
xchg
pop
test
mov
in
xor
mov
pop
dec
clc
and
adc
mov
xlat
sarl
aam
and
dec
push
test
dec
movsl
push
inc
data16
ljmp
mov
inc
movsl
push
mov
xor
call
mov
sbb
sti
psubb
test
mov
jl
jmp
movsb
fistl
loopne
cmp
aad
mov
mov
sbb
mov
mov
xchg
fs
mov
and
xor
nop
loop
dec
test
pop
adc
add
pop
movsb
mov
mov
popa
and
mov
sub
xchg
cmpb
cmp
push
in
jge
pop
mov
arpl
mov
jno
cmpsl
jmp
gs
cmpb
adc
fwait
insl
add
je
pop
test
jo
movsl
dec
xchg
icebp
xor
jbe
notl
push
sub
inc
dec
lret
mov
mov
xchg
xchg
xchg
pop
sbb
sbb
and
sbb
adc
pop
jle
fmulp
insl
cli
fbstp
dec
nop
loopne
cmp
imul
hlt
js
cmp
add
xor
sbb
xchg
loopne
xchg
mov
and
out
or
daa
and
sahf
and
xchg
or
iret
aas
inc
sbb
sahf
loope
movsl
mov
dec
lods
js
mov
pop
mov
sbb
lock
xchg
sti
lret
hlt
fucomp
popa
call
test
xorl
and
lea
popa
push
nop
xor
cmpsl
loop
test
lcall
fidivs
mov
je
fsubr
inc
sub
bound
jb
movsb
push
mov
add
out
cltd
idivl
mov
aas
add
cld
inc
mov
fnstenv
div
mov
shl
jo
inc
pop
mul
add
ffreep
lea
pop
xchg
mov
pop
les
adc
pop
push
popf
add
test
mov
fnstenv
xchg
or
ret
sbb
inc
hlt
jae
sbb
mov
sub
mov
mov
fmuls
fisubs
icebp
fdivs
ret
rcl
jg
jmp
pop
xor
or
xchg
mov
cmpsl
call
int3
ds
test
add
mov
insb
test
aad
jae
jmp
xchg
sbb
xor
or
mov
test
inc
mov
lods
std
or
jne
lahf
push
xchg
push
pop
or
in
push
mov
scas
sub
jns
xor
pop
jp
imul
adc
pop
enter
fsubs
xchg
insb
sti
stos
outsl
insb
adc
repz
int
cwtl
andb
push
pop
add
int
stos
fidivrl
gs
addr16
mov
scas
ljmp
dec
mov
push
add
jp
or
gs
sub
insb
pop
sub
xchg
andl
push
fdivs
adc
shll
jecxz
lcall
jmp
xchg
sub
int
movsb
xchg
mov
jb
lds
sbb
lods
inc
mov
or
adc
icebp
lahf
gs
out
add
clc
xchg
xlat
in
and
or
loope
mov
pop
shlb
adc
das
push
xchg
and
dec
pushf
sahf
lret
mov
xor
mov
daa
push
sub
push
in
ret
sti
js
jno
adc
outsb
cmp
arpl
ds
mov
cld
mov
and
out
sub
add
mov
dec
push
adc
shll
bound
lret
inc
inc
out
adc
sbb
fdivrs
jmp
xchg
xor
sahf
aaa
dec
adc
xchg
daa
and
dec
push
or
and
stc
mov
jecxz
ret
xchg
xchg
xchg
mov
rorb
xor
jmp
lss
movsb
mov
mov
adc
xorl
int3
xchg
shl
xchg
fdivr
pop
jo
jmp
jns
push
add
fldl
inc
and
ds
push
jno
lock
adc
push
cmc
cmp
mov
lock
push
dec
jmp
sbb
cmp
fdivrs
ret
dec
xchg
imul
xchg
push
popf
mov
repz
ficoms
call
inc
pop
adc
pushf
mov
jl
push
mov
test
jns
cs
in
xor
sub
pop
inc
test
addr16
mov
popa
mov
dec
push
and
pop
and
xor
mov
or
std
push
pop
xchg
aaa
inc
mov
sar
and
iret
cmp
incl
scas
jns
push
dec
mov
mov
mov
cs
mov
pop
dec
loopne
jae
mov
js
push
lods
loopne
dec
imul
or
shrb
enter
dec
pop
dec
dec
pop
aad
sub
inc
lret
arpl
stc
and
adc
data16
fptan
push
adc
pop
push
cmp
ficomps
mov
stos
test
or
fisttpl
mov
sbb
rcll
bound
fiadds
add
dec
fiaddl
mov
flds
icebp
push
std
cmp
push
mov
outsb
hlt
mov
gs
push
sbb
mov
pop
notl
cld
pop
mov
add
cmpsl
jbe
sbb
pop
dec
adc
xor
pop
sub
mov
insl
pop
push
inc
out
lea
xor
insl
pop
fisubl
subl
dec
cmp
pop
push
xchg
es
fldcw
fisttpll
xor
leave
ljmp
insl
pop
xchg
inc
repz
test
mov
fstpl
mov
sahf
aas
lock
nop
cmp
mov
fs
daa
push
xor
dec
leave
cmp
stos
mov
sub
dec
mov
lods
std
movsb
cs
enter
scas
pop
jge
xor
fwait
in
popa
mov
lods
jmp
sahf
loop
in
or
pop
ljmp
test
iret
pop
mov
iret
xor
mov
das
lock
out
cwtl
mov
jl
clc
in
jmp
pop
mov
xor
stc
lret
and
sub
adc
lds
loope
push
xchg
inc
out
subb
mov
in
sub
push
insl
scas
int3
push
ret
aaa
sbb
stc
jns
adc
orl
cmc
ja
cmpb
jle
mov
cmp
fneni(8087
mov
movsl
lods
lahf
push
push
fldenv
lret
test
push
xor
lods
sub
xor
push
mov
clc
in
fists
xchg
sub
dec
jl
call
ret
fwait
aam
lret
adc
sub
fdivrs
repnz
pop
nop
orl
mov
loop
mov
jno
inc
sub
push
out
and
jl
mov
ret
mov
sub
pop
sbb
lods
lea
or
sbb
lea
into
dec
aaa
cmp
sahf
mov
cmp
into
adc
rclb
sub
in
hlt
jl
mov
data16
pushf
sub
add
jle
inc
loop
mov
push
les
pop
push
rcrw
cwtl
daa
pop
clc
xlat
roll
data16
lret
arpl
mov
pop
adc
xchg
jmp
xor
outsl
xor
jo
pop
in
dec
cmpsb
int
mov
push
and
and
popf
dec
dec
dec
aam
mov
test
mov
and
rcr
idiv
add
out
inc
into
jmp
jl
lods
xor
imul
cld
divb
or
ucomiss
or
xorb
push
aad
fsubrs
mov
mov
mov
fmulp
in
sub
push
pop
gs
fsub
push
sbb
outsl
stos
sbb
mov
xor
inc
lds
fwait
xchg
cmpsl
push
sti
cmpsb
mov
xchg
xchg
loopne
insl
mov
adc
cmp
mov
ret
pop
std
sbb
imul
int
jb
shll
xor
pushf
in
sarl
insl
notb
aam
and
or
ret
gs
and
fistpll
push
icebp
mov
pop
fsubp
adc
inc
pop
inc
lcall
xchg
jmpw
insl
call
or
cmpsl
notb
mov
lea
mov
icebp
pop
and
test
push
imul
imul
insl
push
daa
jne
lea
stos
je
test
cmp
add
mov
fnstsw
js
mov
cmp
inc
add
mov
loop
imul
aas
adc
inc
fldt
in
in
call
fstl
push
cmp
fmull
inc
push
cmp
imul
mov
add
xchg
xchg
xor
mov
xchg
ljmp
pcmpgtd
rcl
lods
out
dec
sbb
adc
out
pop
aam
dec
incl
mov
repnz
mov
cwtl
pop
jae
add
mov
out
jnp
inc
pushf
lahf
loope
add
push
adc
enter
push
inc
es
sub
in
movsl
jb
cmp
mov
testl
or
sti
aaa
xor
aaa
add
icebp
dec
dec
add
push
push
mov
je
jnp
lea
jns
dec
in
and
push
sti
push
xor
dec
or
dec
sub
pop
loop
xor
in
sbb
push
push
adc
jecxz
mov
lret
ret
adc
in
and
cmc
addb
pusha
out
jno
or
in
sub
fwait
or
loope
out
adc
mov
adc
sub
sbb
or
and
cmp
push
xor
faddp
push
jb
into
xchg
or
stc
aam
shrl
sbb
jno
pop
adc
inc
dec
faddl
inc
call
clc
pushf
push
push
shll
xchg
xchg
xchg
and
mov
movsl
in
xchg
cmp
mov
leave
jmp
pop
int3
push
mov
aaa
adc
push
jnp
mov
sbb
shll
pop
mov
inc
scas
mov
or
cltd
mov
imul
cmp
lret
leave
sarl
jmp
cmp
mov
push
test
sbb
outsb
sbb
jae
pop
sar
leave
jno
mov
cmpsb
test
pop
mov
inc
loopne
stc
fdivs
pop
bt
xchg
clc
mov
imul
stos
push
add
inc
xor
cmp
ds
mov
mov
mov
testl
sbb
jge
aad
or
mov
out
jmp
insb
lsl
xor
jg
sub
mov
outsl
pusha
popa
test
mov
call
mov
mov
loop
xchg
lock
lret
xchg
cmp
les
xchg
cli
insb
sbb
lret
ljmp
pusha
jns
dec
sbb
outsl
push
mov
push
xchg
dec
fmul
cmpsb
mov
xchg
pop
dec
test
lods
movsb
mov
push
push
jno
data16
movsl
pop
cmp
call
inc
adc
pop
es
mov
xchg
or
lds
pop
fldcw
sbb
inc
loop
stos
push
daa
adc
fwait
lret
cmp
shlb
push
jl
jp
mov
jg
push
pop
repz
mov
xor
cli
add
push
ljmp
jle
test
add
sub
enter
je
mov
push
mov
es
cmp
insb
jnp
arpl
push
adc
pushf
mov
cltd
fistl
adc
fisubs
int3
repz
push
dec
mov
sbb
in
out
loop
imul
pop
repz
sbb
adcb
pop
xchg
loope
push
fimuls
fstps
pop
daa
movsl
jmp
stc
das
mov
inc
sti
mov
sub
mov
and
xchg
scas
xchg
pop
sahf
loope
popf
lea
jl
scas
sbb
shl
sbb
fwait
fwait
push
dec
xchg
sbb
xor
adc
loop
dec
pop
in
fs
sbb
push
stos
mov
insb
push
notl
xchg
cmp
in
sbb
cmpsb
pop
pop
bswap
inc
mov
rcrb
push
mov
loop
mov
loop
mov
push
out
cmpsb
mov
leave
leave
ret
sbb
adc
mov
arpl
hlt
mov
cmp
push
jecxz
rcrl
in
cs
fnstenv
repnz
cmp
sub
orb
in
out
mov
push
mov
jmp
xchg
push
fcoms
mov
fldcw
shrl
sbbl
or
bound
jle
das
push
addr16
push
jbe
data16
movlps
sbb
gs
loope
mov
sub
ja
stos
shrl
popf
and
jle
int
scas
jle
fsubs
jle
or
enter
stos
mov
shll
push
lock
jl
jge
imul
cmpsb
push
inc
aad
pop
icebp
gs
repnz
push
icebp
or
mov
or
cmp
cwtl
out
xchg
packssdw
pop
or
ret
xchg
iret
jnp
ret
lcall
scas
in
shlb
sarl
adc
sub
jg
movsb
xchg
mov
ja
daa
shrl
lods
out
es
sbb
inc
push
dec
or
nop
and
mov
popf
loopne
pop
sbb
jle
call
shll
popa
mov
in
lcall
and
test
push
or
stos
fs
icebp
sub
mov
ja
push
bound
cmp
lahf
mov
int3
movsl
adc
lods
insl
jb
test
mov
xchg
pop
pop
loopne
dec
rclb
lret
fmuls
cmpsb
sbb
push
xor
and
cltd
xor
and
cmp
loop
ret
and
faddl
xor
scas
popa
leave
cwtl
adc
rorl
lods
mov
mov
sbb
mov
repnz
and
mov
icebp
mov
sbb
mov
mov
inc
adc
cmp
loope
sub
iret
into
shll
inc
mov
imul
outsb
addl
out
adc
mov
jp
add
cmp
xchg
in
xchg
loopne
pop
test
jns
mov
mov
mov
inc
jl
jno
sbb
jno
repz
js
popf
sarl
popa
cmc
inc
fwait
pop
fwait
inc
sbb
daa
repnz
and
mov
pusha
push
sarl
pop
push
inc
enter
inc
popa
jno
lods
out
fnstsw
xchg
iret
mov
lods
repz
push
add
and
fdivrl
add
into
sbb
push
enter
mov
add
addr16
mov
popa
fisttpl
stos
rcll
pop
pop
pop
sbb
dec
push
dec
loope
jne
sahf
and
jne
push
daa
pop
xor
fisttps
bound
bound
fwait
scas
dec
mov
loope
aad
stos
jge
mov
imul
sbb
inc
jb
mov
lcall
loope
lods
pushf
cld
dec
mov
ret
fistpll
mov
jno
xchg
in
scas
shl
fdivrl
mov
mov
nop
jae
cld
xchg
sarb
adc
lods
clc
in
out
aas
and
xor
je
adc
inc
out
add
and
xor
jecxz
mov
mov
cmpsl
xchg
cmpsl
mov
shl
ja
cmpsl
sbb
fs
jnp
mov
mov
mov
mov
push
popl
div
adc
adc
stos
or
in
cmp
push
mov
pop
sub
dec
into
out
add
sahf
insb
ret
mov
roll
mov
pop
outsb
jg
sahf
sbb
cmp
insb
lock
mov
shll
int
mov
aad
addl
test
outsb
stos
adc
sti
insb
shrb
daa
and
inc
jl
mov
sbb
adc
mov
jns
into
add
nop
sbb
dec
mov
pop
mov
movb
std
daa
out
add
push
ss
lea
adc
loop
cmp
xchg
bound
dec
sbb
add
adc
and
lods
sbb
pop
lods
mov
add
sbb
push
xchg
lods
mov
fisttpll
xor
push
imul
leave
dec
fsincos
xchg
push
dec
add
jne
cmp
sub
mov
inc
xchg
stos
stos
push
cmpsb
aaa
sahf
xor
dec
inc
scas
mov
pop
mov
mov
xor
adc
and
test
push
xchg
add
sub
jne
adcl
cli
jbe
lea
popa
fnsave
jns
daa
push
andl
mov
popa
inc
icebp
rorb
push
inc
mov
mov
inc
adc
aad
cmp
ljmp
pop
js
add
jle
loopne
lahf
cltd
pop
fwait
inc
sbb
add
repnz
out
fimuls
mov
lods
inc
cmpsl
xchg
movsb
shrl
mov
xlat
pop
cmp
popa
jl
sbb
pop
mov
out
cli
popa
fwait
dec
or
cmp
cwtl
sub
mov
xchg
push
scas
jmp
in
cmp
jge
adc
test
mov
cltd
pushf
fstpt
inc
outsl
cmc
call
pop
rcrb
push
sbb
jae
iret
inc
pusha
outsl
icebp
out
lcall
lret
push
and
fcoml
jno
test
les
mov
cmp
mov
mov
mov
jae
rorl
mov
mov
mov
fsubrp
xchg
cmpsb
leave
lods
rolb
mov
rorb
and
push
arpl
mov
outsb
stos
cmp
mov
out
pop
mov
pop
jmp
out
adc
add
test
ret
jge
inc
fadds
sub
or
lcall
andl
xchg
adc
aaa
xor
das
sub
mov
rorb
cmpl
mov
test
mov
mov
enter
faddl
je
xor
lods
mov
and
leave
cmc
sub
adc
sbb
xlat
cmp
push
pop
test
mov
pop
bound
fmull
je
loopne
imul
sbb
pop
insb
push
cmpsb
daa
mov
ja
addl
sub
sarb
pop
sbb
test
push
lock
test
out
or
aaa
xor
jne
les
cmp
mov
or
loopne
xchg
aas
or
cmp
lods
xor
out
mov
stos
pop
les
mov
jmp
mov
aaa
sbb
sub
jle
enter
inc
xor
inc
aam
mov
jge
jl
push
scas
adc
pusha
push
sub
mov
fstpt
movsl
lret
int3
and
jmp
mov
sahf
cmpsb
cmp
mov
mov
sti
mov
das
adc
pushf
sti
das
cmp
ds
cmp
sub
mov
repnz
mov
adc
push
mov
call
xor
push
sbb
xchg
shlb
xchg
fimuls
ds
and
divl
inc
xchg
sahf
stos
and
subb
pop
ret
pushf
punpcklwd
out
lds
imul
xor
pusha
mov
inc
call
cmpsb
lds
test
cltd
arpl
scas
sub
push
add
xchg
dec
mov
sbb
stos
mov
xor
push
xlat
test
xor
test
fdivs
movsl
jnp
jbe
jle
bound
mov
loop
aaa
mov
xchg
in
mov
add
in
test
fstps
shll
into
pusha
lahf
sbb
xor
insl
inc
repz
jl
dec
push
mov
jae
dec
jle
xchg
repz
xor
xchg
lret
jno
xchg
fst
cmc
mov
cmpsl
popf
mov
mov
push
mov
inc
std
xorb
sub
jbe
push
jge
cld
in
inc
pop
ror
cmpsl
pop
int3
xchg
pop
ljmp
dec
and
dec
add
adc
xor
jecxz
ljmp
jle
sub
mov
xor
xor
adc
jp
in
pop
outsl
mov
popf
mov
cmc
push
push
int
xchg
xchg
into
push
push
dec
xchg
stc
je
xchg
jbe
push
mov
sbb
cli
adc
ss
dec
adc
adc
test
addr16
ds
pusha
mov
mov
xchg
jge
sub
xchg
pushf
jns
mov
inc
js
mov
pop
and
imul
or
in
nop
push
jmp
jmp
in
icebp
lea
inc
insl
and
sbbb
rolb
add
sbbl
fcoml
out
iret
mov
imul
adc
xor
mov
cmp
idiv
cmp
dec
dec
mov
mov
mov
jl
add
test
repz
cmp
adc
mov
or
xchg
fiadds
xchg
inc
sub
jne
cli
mov
mov
xchg
and
mov
inc
cmp
sub
push
sahf
outsb
popf
dec
adc
cmp
sbb
xor
pop
and
mov
lret
cmp
xchg
xchg
push
xchg
mov
out
and
inc
clc
stc
jmp
pop
sbb
insb
and
scas
cmp
mov
pop
insb
jb
adc
fistps
shll
mov
jnp
xchg
cmp
jnp
sbb
push
add
gs
xchg
jne
xchg
jmp
xor
cli
lret
mov
arpl
mov
stos
xlat
dec
add
dec
mov
push
add
filds
cs
jp
test
lcall
rolb
mov
sub
clc
cmp
lods
scas
cld
enter
lret
movsb
add
ljmp
sub
pop
cmp
fsubrl
pop
sub
iret
and
sbb
les
push
add
mov
js
fs
push
das
cmp
push
es
or
jg
popa
xchg
pushf
adc
mov
xor
cmp
push
inc
negb
fwait
sub
sbbl
and
xchg
mov
faddl
mov
adc
outsl
imul
cmc
add
in
mov
mov
inc
inc
pop
and
xchg
and
daa
mov
addr16
pop
jle
push
xchg
fiadds
je
ret
xchg
pushf
fsubl
mov
cmp
loopne
adc
imul
mov
ficoms
mov
fimuls
mov
ret
mov
fdivp
mov
in
idivl
loopne
hlt
and
jae
sub
fnstcw
iret
stos
or
jnp
lods
pop
rcr
push
xor
bound
mov
pop
scas
dec
adc
dec
dec
cltd
xchg
mov
out
pop
mov
cltd
push
push
jle
mov
mov
test
xchg
jmp
add
push
icebp
addr16
js
sub
rolb
add
mov
out
mov
adc
daa
xorl
inc
mov
ljmp
fwait
push
jg
gs
mov
scas
jg
cmp
rorb
in
mov
pop
xchg
and
cmp
mov
out
sbb
stos
aam
ljmp
xor
cmc
lahf
adc
inc
mov
xchg
or
or
lahf
dec
ficompl
popa
repz
sub
not
inc
adc
or
xchg
ret
mov
insb
stos
ficoml
mov
xor
or
cwtl
jp
cld
and
popf
lock
out
not
sub
aas
or
pusha
adc
in
xchg
inc
popa
dec
stos
js
xor
push
cmp
into
sub
adc
mov
stc
push
enter
push
inc
repnz
jo
test
out
cmp
ret
loop
imul
aaa
repnz
or
jnp
jnp
mov
jecxz
test
push
pop
mov
ja
test
push
or
xchg
in
or
orl
pop
pop
fistpl
cmp
jle
mov
cmp
je
mov
std
mov
lahf
sub
je
outsl
add
add
popa
add
add
arpl
add
add
jne
fs
popa
imul
add
add
jne
add
popa
add
je
outsl
add
popa
add
add
add
outsl
data16
add
je
add
jb
imul
add
add
imul
add
arpl
add
add
popa
add
add
popa
outsb
add
add
outsl
add
jae
jae
inc
outsl
outsb
addr16
jae
push
push
jb
add
popa
arpl
outsb
je
popa
jae
jne
gs
insb
add
insb
outsl
outsb
imul
add
add
