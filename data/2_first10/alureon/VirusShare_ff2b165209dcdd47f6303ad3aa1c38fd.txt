lea
rcr
rcl
xchg
popl
jmp
lea
rol
neg
neg
shl
xor
xor
lea
mov
jmp
mov
shrl
adc
mov
mov
mov
shr
not
mov
jmp
shl
mov
xchg
xchg
lea
push
push
pushl
pushl
call
jmp
mov
rcr
add
neg
xor
rcl
xor
xor
mov
lea
rol
not
jmp
lea
xor
neg
mov
mov
adc
xor
mov
xor
neg
rcr
lea
push
call
rcr
mov
xchg
xor
add
jmp
mov
xor
xor
pop
pop
pop
jmp
xor
xor
lea
not
mov
ror
lea
mov
mov
lea
xor
jmp
xor
lea
xor
push
xor
rcr
shl
xor
mov
mov
jmp
shl
mov
add
xor
rcl
jmp
mov
decl
jne
xor
and
adc
xor
jmp
push
mov
sub
push
push
push
adc
mov
rol
lea
mov
lea
push
jmp
xor
pop
mov
rcr
xor
xor
cmp
je
jmp
neg
rcr
and
shl
mov
lea
adc
add
lea
ret
mov
and
mov
mov
jmp
xor
xor
neg
not
mov
movl
lea
mov
not
shr
and
jmp
mov
add
mov
ror
xor
lea
lea
rol
and
jmp
leave
call
call
mov
xor
mov
xor
adc
rcl
not
xor
mov
jmp
xor
neg
xor
mov
mov
neg
cmp
je
jmp
movl
lea
neg
xor
shl
not
mov
mov
mov
shr
lea
jmp
mov
shr
and
xor
not
not
mov
not
jmp
mov
lea
neg
not
lea
lea
and
push
call
push
lea
and
mov
jmp
in
fst
fnsave
lret
mov
push
mov
mov
repnz
add
out
xor
mov
lcall
fadd
xor
mov
xchg
jo
pop
mov
inc
mov
add
add
dec
dec
and
and
js
test
or
int
scas
mov
ret
xor
movsl
inc
test
aam
xor
cltd
jbe
mov
add
pop
dec
adc
mov
pop
and
pop
push
xchg
mov
mov
lods
out
adc
dec
pop
ret
aam
or
movl
add
aam
xchg
faddp
mov
dec
mov
mov
bound
ror
jns
aaa
pop
jbe
mov
push
pop
inc
and
inc
inc
jmp
mov
push
xchg
inc
inc
nop
mov
mov
stos
push
pop
mov
test
jmp
mov
inc
fadd
push
test
inc
jae
lret
sahf
cmp
cld
inc
push
fisubl
mov
inc
or
cld
popa
push
sbb
push
xlat
test
cld
jae
int
mov
jp
xchg
mov
or
cmpb
pop
mov
push
imull
mov
mov
imul
test
loope
pop
mov
daa
xchg
mov
aam
mov
mov
mov
xor
into
in
xor
dec
dec
or
sbb
cld
test
or
jae
daa
push
inc
push
xor
inc
push
mov
sahf
xchg
and
js
test
or
and
inc
inc
iret
dec
xor
mov
xor
mov
iret
cmp
test
iret
mov
cli
test
sarb
ret
iret
shl
movsb
add
inc
and
mov
inc
and
fs
or
mov
imul
push
imul
cli
test
iret
mov
cli
test
mov
inc
inc
push
inc
decl
lgs
or
mov
inc
push
cmp
sub
mov
push
daa
xor
xchg
dec
test
stos
int
mov
inc
clc
sahf
and
xchg
fsubl
mov
repz
test
xor
mov
xchg
cli
push
mov
rclb
xchg
xor
icebp
inc
mov
mov
hlt
xchg
xchg
dec
or
xchg
xchg
push
mov
mov
mov
mov
xor
xor
xchg
xchg
jb
es
xor
fbstp
les
mov
dec
push
lock
cmp
jbe
fdivrl
shlb
mov
fsts
xor
and
test
push
cmp
mov
cmp
in
stos
mov
fistpll
daa
adc
push
xor
shlb
jnp
inc
push
inc
inc
push
inc
push
rcr
xor
and
mov
mov
les
mov
add
mov
cli
cli
sti
lahf
call
jae
mov
adc
dec
jns
inc
insb
xor
mov
xchg
xchg
iret
rolb
mov
je
mov
xchg
inc
iret
mov
jl
mov
stos
mov
xor
lret
cmp
push
push
pop
mov
faddl
adc
push
sarb
inc
inc
pushl
test
iret
mov
jo
inc
jle
test
jl
mov
mov
sarl
lods
sahf
sar
sar
push
daa
pop
inc
push
xor
hlt
lods
in
xor
xor
test
or
xor
iret
mov
int3
movsl
les
bound
jmp
into
inc
iret
mov
and
sbb
mov
jmp
inc
out
mov
lahf
mov
and
iret
dec
and
loop
inc
out
enter
imul
shrb
ljmp
xchg
xchg
sub
mov
or
scas
jl
cmpsb
mov
jne
mov
adc
idivb
fwait
rcl
mov
cmp
cmc
fcomp
push
add
in
cmpsb
mov
mov
xchg
xor
test
into
lds
mov
mov
or
rol
fisttpll
ror
cmpsl
xor
in
out
mov
push
xchg
mov
mov
imull
sti
fists
rep
iret
stc
mov
lret
ret
and
xchg
repnz
filds
xchg
inc
jmp
ja
xchg
movsl
cmp
in
cld
mov
pop
pop
shrl
fisubrl
mov
inc
pop
mov
inc
cli
mov
add
nop
mov
xchg
es
jae
nop
sbbl
inc
lret
mov
cmp
mov
cmpsl
jns
inc
cmpsl
cmp
xor
mov
ffree
imul
lcall
iret
inc
inc
ds
dec
xor
xorb
mov
fs
mov
mov
cmpsb
mov
mov
pop
cmp
dec
jnp
mov
loop
mov
pusha
mov
jmp
mov
xor
jmp
lock
int3
movsb
jmp
iret
mov
bound
scas
lahf
push
xor
shrl
lds
ret
std
jnp
fcmovne
mov
fistpl
and
and
xor
cli
xchg
inc
cmp
pop
daa
pop
mov
sarb
cmp
cmpsb
inc
fadd
jns
stc
out
cli
mov
hlt
aaa
into
pushl
xorl
sbbb
xchg
or
cmpsl
in
xor
mov
sub
mov
mov
cli
sbb
dec
jb
mov
mov
into
mov
sbb
adc
mov
fwait
into
mov
dec
jnp
lods
loope
cli
mov
add
fcompl
and
movsl
daa
pop
xlat
sub
jle
dec
insl
into
mov
jecxz
xchg
popa
inc
cmp
in
into
inc
int3
cmpsb
dec
xchg
mov
int3
xor
push
frstpm(287
xor
stos
sti
dec
icebp
jl
cli
stos
pushf
mov
ljmp
sahf
add
inc
adc
or
nop
test
es
dec
push
push
mov
push
fwait
cmp
stc
cmp
jo
popf
movsb
outsb
int
inc
pushf
mov
test
test
push
xchg
mov
scas
mov
popa
frstor
jb
ret
adc
clc
dec
sahf
mov
das
xchg
rcll
add
dec
jbe
lret
jp
and
mov
jnp,pt
inc
xchg
scas
or
jmp
cmp
outsl
imul
and
xor
or
mov
jg
nop
mov
pushf
adc
fwait
sbb
and
in
out
sbb
fwait
ljmp
cmc
cmp
repnz
sub
fdivs
adc
dec
add
fbld
icebp
out
inc
mov
xchg
xchg
loope
lock
push
data16
stc
cmp
adc
inc
enter
adc
sbb
lods
out
ret
addl
add
test
roll
jae
gs
mov
push
lahf
jge
inc
cmpsb
call
es
cltd
ljmp
stc
test
and
add
lcall
mov
cmp
lock
fcoml
pop
lods
icebp
cmp
adc
sub
jno
xchg
inc
scas
fsincos
lcall
xor
mov
fsubr
test
jmp
dec
loope
loope
dec
jae
in
mov
in
jge
cmpsl
adc
inc
cmpsl
out
sub
sub
push
out
addr16
and
mov
clc
shr
xchg
stos
sbb
stos
decl
pop
daa
mov
or
or
inc
cmc
out
fidivrs
mov
movl
daa
jle
scas
and
cmp
aas
cmp
cmp
sarb
push
mov
jbe
jmp
in
mov
adc
cwtl
in
push
mov
jb
push
lock
imul
ljmp
js
aam
pop
mov
lods
xor
or
mov
or
fwait
lret
jge
dec
lret
call
dec
repnz
movsb
push
mov
mov
mov
rcl
loope
push
lods
stc
pushf
jl
popf
test
pop
xor
cmpl
cmpsl
ret
fbld
inc
sti
ds
out
mov
mov
repnz
inc
inc
xor
pushf
sbb
adcl
sub
xor
sbb
adcl
cmp
xchg
mov
mov
mov
dec
popf
test
std
roll
jno
mov
mov
in
sbb
mov
mov
mov
negb
scas
lahf
mov
int3
mov
ljmp
mov
mov
lods
and
jp
out
hlt
dec
ds
dec
xor
leave
pop
in
mov
inc
mov
jae
and
adc
addr16
cmp
outsb
insl
in
ljmp
push
and
cmp
dec
leave
dec
mov
cmp
mov
mov
xlat
mov
movsl
push
mov
push
cwtl
cwtl
mov
call
negl
mov
hlt
adc
dec
push
fisttpl
jecxz
jge
sarb
hlt
ds
cmp
ret
xor
and
sti
clc
mov
iret
dec
call
mov
cmp
add
xchg
bound
mov
mov
xchg
fidivrl
cmp
sbb
in
fwait
in
paddsw
lods
ror
stos
push
in
lret
out
mov
ror
sub
mov
add
mov
mov
out
xchg
mov
gs
iret
add
sarb
adcl
movl
mov
mov
rolb
loop
int3
pop
aaa
aam
adc
ret
pop
jmp
in
daa
xor
xchg
fsubl
stos
dec
ljmp
mov
inc
add
shr
stc
push
mov
lds
orb
mov
ret
scas
movsl
xor
push
xor
cwtl
leave
sub
out
nop
jno
mov
mov
and
mov
xchg
dec
pop
fisttpl
sahf
scas
sub
movsb
call
stos
movsl
mov
int
mov
cmpsb
add
mov
and
inc
test
xor
hlt
pop
sbb
dec
or
jns
inc
aaa
push
xchg
inc
cli
push
lea
mov
pop
out
movsb
inc
cltd
or
fnstenv
das
add
mov
xchg
add
iret
pop
jbe
stos
sarl
add
or
xor
lods
mull
cmp
adc
mov
or
cmp
cmpl
mov
out
dec
ss
xor
movsl
fwait
sahf
xchg
jmp
fstl
out
add
cmpsb
mov
dec
in
xchg
sbb
out
ss
push
incb
fcmovbe
push
xchg
adc
pushf
shrl
ss
es
sbb
and
dec
xchg
sahf
out
mov
jae
leave
sahf
adc
stc
daa
decl
lcall
adc
push
xor
repnz
stos
inc
xchg
adc
xor
outsb
ljmp
mov
scas
dec
fcompl
mov
jle
push
lock
mov
mov
dec
lcall
std
and
jmp
sub
loop
scas
push
or
push
test
hlt
inc
scas
sbb
mov
mov
mov
cwtl
cmpsl
lret
scas
push
je
mov
push
or
adc
rol
jbe
mov
pop
mov
call
push
mov
cmpsb
inc
dec
popa
cmpsl
mov
dec
repnz
push
rcrb
shll
xchg
jge
add
dec
mov
out
push
jns
jnp
xor
xchg
fimuls
mov
xchg
cmp
mov
mov
and
inc
or
lods
jmp
mov
mov
xor
stc
cwtl
mov
mov
sahf
push
hlt
divb
in
lea
mov
insb
mov
jbe
mov
ret
mov
test
mov
das
cmpsb
faddp
lcall
dec
mov
push
incb
mov
hlt
out
stc
icebp
xchg
cmc
sti
ss
cmp
ficoml
push
mov
testb
push
add
mov
repnz
jecxz
cwtl
inc
shlb
in
imull
out
popa
fistl
sbb
or
std
sub
fwait
pop
lods
push
sbb
sahf
mov
scas
jg
nop
mov
cmp
lcall
iret
mov
out
test
sub
movsb
enter
iret
or
cwtl
je
popf
sub
adc
in
fistl
add
xchg
shld
pop
shll
dec
add
adc
int3
orl
mov
push
aas
and
dec
inc
mov
stc
cli
movsb
out
mov
cld
lahf
fxtract
dec
xchg
fistl
aad
mov
xor
test
mov
xchg
mov
clc
aas
mov
testb
xor
add
cmpsb
cltd
cmp
push
out
test
adc
ljmp
jecxz
cld
and
scas
xor
rcrl
jmp
push
and
xor
mov
int
clc
lcall
fidivrs
cmpsl
adc
push
pop
test
fcoml
xlat
jb
test
lods
push
ret
fsub
mov
inc
xchg
add
jecxz
outsb
sti
add
or
fidivrs
adc
insl
xchg
or
outsl
test
test
mov
add
mov
xchg
mov
out
lods
add
and
sub
pop
xor
fstpt
jns
cli
lahf
jge
pop
test
in
mov
sahf
cmp
cwtl
clc
in
fidivl
cmp
adc
daa
xor
outsb
inc
cli
iret
ficoms
xor
sahf
sub
in
push
xchg
pop
jmp
cs
or
mov
jmp
stos
mov
and
test
leave
cmc
inc
cltd
in
dec
decb
xor
mov
outsb
cmp
jmp
test
enter
rcr
jb
leave
shlb
and
fprem
aad
push
out
shrb
inc
fdivrp
popf
mov
fisubl
out
mov
test
jge
filds
pop
lret
jns
mov
out
mov
or
rcll
cmpsl
lcall
dec
and
insl
iret
mov
nop
repz
out
stc
clc
push
lds
pushf
fisttpl
jecxz
and
orb
mov
rorl
in
int
div
or
roll
out
and
sbb
sub
js
pop
lcall
sti
xchg
mov
inc
sbb
ljmp
lret
int3
pop
imul
cs
xchg
mov
leave
filds
into
enter
mov
sti
push
fildl
in
lcall
add
fisubrs
jmp
or
lret
imul
fmul
das
push
sti
dec
mov
mov
lcall
aad
outsl
shl
cmc
dec
mov
in
xor
add
mov
sub
aam
mov
xchg
fldenv
jmp
mov
inc
out
call
sub
push
cltd
dec
aaa
popf
mov
sbb
ds
out
sbb
out
xchg
iret
mov
pushl
ds
or
mov
mov
clc
dec
jno
jmp
mov
jle
iret
aad
mov
les
pop
sub
in
into
dec
pushl
ja
cmp
cmpsl
aam
mov
mov
dec
dec
mov
push
cmpsb
or
fstps
mov
add
push
jmp
fildl
xor
shlb
ljmp
lcall
jo
frstor
cltd
xlat
test
jmp
jl
sub
lret
aam
aad
dec
sub
mov
fsubp
add
pop
enter
xor
pusha
lret
lahf
std
sbb
insb
xor
call
pushf
inc
push
xchg
mov
sti
shr
testb
inc
mov
stos
outsl
cmp
rcr
inc
test
mov
ljmp
sub
shr
cmp
aad
or
lods
mov
jmp
pop
cmc
lea
stos
push
inc
adc
shlb
adc
std
notb
xchg
fisttpl
fstps
fsubs
mov
je
jnp
dec
popf
dec
jp,pt
ret
hlt
ret
out
jnp
fidivs
fisubrl
pop
insl
in
bts
inc
hlt
jge
xchg
jmp
stc
iret
ja
or
sub
xor
lahf
fcomip
clc
inc
icebp
in
sarb
lock
movsl
adc
mov
int
jmp
sub
inc
or
pop
sti
dec
jmp
mov
xchg
ret
push
mov
dec
jge
inc
int3
push
fdivrl
fcoml
pop
lret
repz
cmp
test
xlat
jmp
mov
ficoms
cmp
inc
jmp
sti
ljmp
inc
out
fwait
xlat
shlb
in
fdivrp
ljmp
push
stos
cwtl
enter
mov
xlat
scas
shl
and
jnp
lock
enter
stos
gs
testb
pop
sti
sti
data16
stc
add
iret
and
sub
stc
mov
mov
into
mov
loop
ret
pushf
call
pushf
xlat
nop
subl
mov
aas
mov
movsl
mov
cmp
aad
orl
mov
pushf
out
stos
ljmp
scas
xchg
subl
add
test
in
decl
mov
push
shlb
test
mov
lock
cltd
mov
lock
inc
je
pop
pop
fldenv
out
jmp
insl
call
inc
fisubrl
lock
mov
mov
test
sub
and
enter
in
cmp
pop
mov
mov
jmp
push
mov
lret
jmp
add
mov
imulb
clc
repz
lods
or
or
mov
fcomps
jne
test
mov
dec
mov
lock
xchg
mov
cli
push
repz
cs
mov
jmp
mov
movsl
inc
imull
test
pop
test
iret
inc
add
sbb
lods
xchg
jmp
mov
call
les
mov
clc
dec
push
icebp
repz
cmpsb
shl
adc
jg
rcll
push
mov
dec
inc
iret
pusha
jnp
movsl
movsb
pop
mov
mull
and
movsl
xchg
hlt
push
mov
in
inc
lahf
dec
mov
adc
aaa
jnp
imul
sbb
int3
ds
inc
pop
pop
dec
ret
test
vhsubps
iret
mov
add
fimull
fistpll
stc
pop
mov
dec
add
mov
loop
cwtl
out
dec
clc
mov
in
xchg
sbb
sbb
divb
enter
jg
ret
pop
fistpll
sub
mov
mov
mov
inc
lret
js
mov
daa
and
mov
repz
aad
xor
test
pop
jne
movups
add
add
jo
aas
pop
sti
xchg
xchg
mov
inc
loopne
lock
adc
icebp
mov
dec
add
jbe
or
cs
mov
aas
in
mov
mov
jmp
mov
adc
sbb
clc
test
dec
dec
lahf
xchg
into
or
inc
ret
xor
loopne
mov
shr
lock
hlt
xchg
in
test
stos
ror
rol
jecxz
aam
jecxz
mov
mov
ret
rcl
mov
sub
test
inc
xor
and
xor
fstps
sub
and
cmp
jb
and
pop
add
insb
das
sbb
inc
push
dec
jp
inc
jbe
jbe
movsb
pop
cmp
push
int
iret
push
sub
sub
push
shrb
sbb
push
popf
cs
popf
add
adc
aam
sbb
cmp
jl
fsubl
push
leave
mov
xlat
pop
cmp
sbb
push
xor
call
xor
pop
fdivs
cmp
jge
inc
xchg
pop
fildl
aad
inc
mov
ret
test
mov
fmul
sbb
test
xchg
xchg
cltd
mov
mov
hlt
sahf
scas
jmp
mov
adc
xchg
push
in
icebp
cmc
stc
dec
call
sahf
icebp
iret
and
lret
mov
repnz
std
into
sub
pop
lcall
cs
das
into
sub
es
or
sbb
sbb
dec
pop
adc
jg
jo
jnp
or
pop
add
test
jo
jnp
iret
jns
insb
or
pusha
add
pop
outsb
cmp
insl
inc
jo
pusha
popa
jne
fs
cs
pop
dec
daa
push
mov
inc
and
test
cmp
push
int3
inc
inc
push
xor
into
mov
mov
mov
shrb
mov
aad
mov
mov
cwtl
cltd
test
out
nop
or
jecxz
cwtl
cmc
mov
cmc
addl
loopne
icebp
testb
call
sahf
mov
mov
jmp
scas
div
test
iret
add
cmpsb
aam
cwtl
inc
sub
xor
mov
pop
stos
and
push
and
pop
mov
pop
ja
cli
jl
cmp
mov
xchg
es
repnz
xchg
sub
in
jb
pop
sub
test
xor
fimull
jge
pop
bound
daa
mov
mov
adc
xchg
dec
into
mull
cmp
imul
icebp
repnz
adc
mov
cmpsl
vpxor
lcall
popf
daa
dec
mov
and
mov
loope
neg
jp
adc
fucomp
iret
add
pop
jecxz
mov
bound
xchg
lods
cmpsb
xlat
dec
lea
bound
mov
ss
cld
scas
outsb
mov
mov
fwait
mov
sbb
shld
stos
movsb
lcall
cmpsb
pop
mov
cmp
insb
loopne
pop
out
mov
xor
out
mov
aam
dec
les
mov
mov
cmp
sbb
add
xchg
insb
iret
pop
mov
dec
inc
sahf
adc
mov
ljmp
jns
mov
arpl
mov
sbb
dec
ljmp
fiadds
add
mov
adc
sub
mov
negb
fdivrs
rcrl
mov
jg
bound
sbbl
jmp
outsl
fsubrs
fcmovne
test
ret
sbbb
mov
xlat
or
mov
iret
cltd
and
sbb
stos
clc
out
outsb
mov
ret
test
inc
push
mov
mov
pop
sbb
iret
rcr
sub
mov
nop
test
xchg
mov
mov
loope
test
push
mov
movsl
in
enter
mov
xor
xor
iret
jbe
lahf
ds
addr16
mov
and
loopne
inc
pop
and
mov
andl
pop
or
outsl
pop
fwait
push
iret
push
pop
mov
sarb
int3
gs
mov
pop
out
inc
adc
jb
add
imul
popa
iret
cmpl
into
push
ljmp
push
int
mov
pop
sbb
dec
int3
mov
or
clc
jo
jb
sbb
int
pop
iret
insl
dec
fistl
mov
repnz
mov
ror
push
decb
adcl
mov
mov
mov
pop
pop
push
pop
fcomps
pop
xor
mov
mov
mov
filds
push
xchg
jle
mov
xor
repnz
jl
mov
insb
mov
jle
mov
int
add
addr16
mov
test
test
popf
push
int
pushf
in
push
repnz
hlt
dec
xchg
scas
lods
fsts
iret
mov
push
lret
iret
cmp
jno
jb
jne
stos
mov
mov
pushf
dec
inc
pop
roll
pop
loop
mov
nop
in
mov
cld
or
push
test
or
add
mov
out
push
xor
jb
fs
add
xlat
jne
sbb
pop
leave
push
lds
sbb
in
pop
sarl
xchg
jbe
jno
idiv
sub
xor
mov
mov
andl
cmpsb
cs
mov
or
mov
enter
inc
icebp
imul
sub
dec
shlb
mov
dec
xor
test
std
xor
shl
xchg
test
lret
sti
inc
test
cmp
fwait
mov
aaa
push
popa
movsb
cmpsb
pop
js
or
sbb
sub
sub
fwait
sub
lahf
insl
out
es
jmp
mov
mov
add
mov
cld
aaa
sub
cmpsl
shll
cmp
xor
lods
lret
sub
push
inc
clc
lock
test
js
mov
jno
and
mov
test
cmp
mov
aad
pop
jg
pop
int3
imulb
clc
mov
pop
sbb
sbb
mov
dec
jbe
xor
rcr
js
pusha
push
hlt
lds
test
pushf
fs
sarl
adc
movhps
push
movsb
or
pop
mov
pushf
adc
stc
xor
or
loopne
inc
mov
dec
call
mov
jo
lahf
xchg
test
cmpl
mov
or
or
in
insb
stos
cmp
andb
adc
orb
mov
enter
sbb
ret
mov
mov
and
inc
cmc
pop
xlat
jne
into
pop
hlt
je
sub
xorl
rorb
sbb
loopne
add
and
pop
adc
mov
mov
pop
repz
push
push
pop
dec
cmc
iret
aaa
push
mov
iret
cmp
in
adc
xchg
jmp
adc
les
ror
sahf
aas
sarl
adc
iret
mov
loopne
arpl
in
pop
mov
jno
inc
and
pop
lret
scas
cmp
cmp
int
in
iret
test
out
mov
jbe
cmpsl
dec
xchg
movsl
cwtl
push
lds
mov
jge
ret
push
mov
fs
lods
out
mov
mov
mov
xlat
sbbb
outsl
aaa
lret
mov
iret
xchg
push
inc
jg
fdiv
mov
inc
int
or
jae
xor
std
mov
xchg
jg
scas
mull
incl
cmpsb
and
inc
rep
mov
das
mov
sbbl
test
mov
pop
daa
imul
pop
and
xor
mov
mov
mov
mov
adc
jae
mov
push
mov
shrb
ret
mov
xchg
cld
into
std
cs
jbe
ss
mov
mov
mov
in
or
out
adc
fcoms
xchg
sbb
mov
jle
stos
cmp
cmc
mov
nop
ret
out
xor
test
inc
enter
or
movsb
int3
sub
mov
add
xchg
cmc
cli
sub
inc
push
in
or
inc
repnz
sub
nop
iret
and
mov
and
cli
pop
mov
dec
fwait
xchg
dec
mov
sbb
mov
loop
or
jl
cmpsb
and
dec
jp
or
sub
mov
pusha
xor
mov
mov
dec
in
dec
scas
mov
push
sub
push
mov
push
push
and
mov
cmp
test
push
shll
mov
mov
in
inc
cli
aam
btr
xchg
fadds
iret
lea
bound
sti
jno
and
mov
out
lods
jo
mov
js
scas
mov
sti
pop
push
test
inc
lahf
mov
ss
rorb
xor
mov
outsb
aas
mov
adc
mov
fcoms
fisttps
pop
and
outsb
scas
fs
push
movsb
xor
cli
jnp
mov
mov
jmp
adc
adc
daa
test
sub
pop
xor
mov
hlt
pop
dec
fwait
loope
mov
movsb
xor
jae
xor
sbbl
jp
arpl
inc
mov
iret
xor
push
pop
mov
loopne
cmpsl
inc
outsb
or
outsl
scas
aaa
add
mov
jb
jecxz
movsb
cltd
xlat
mov
dec
inc
inc
pop
test
inc
gs
loope
stos
test
mov
xchg
mov
push
sbbb
mov
lcall
lcall
stos
adc
push
mov
or
shll
test
das
pop
cld
enter
jmp
dec
pushf
push
sub
test
inc
push
sbb
cmpsb
je
sbb
inc
sub
jae
mov
dec
stc
movl
inc
fdivl
or
outsl
inc
cltd
rep
test
mov
pop
movl
dec
sub
imul
iret
cli
cmp
lods
push
outsl
mov
push
pop
packssdw
into
mov
xchg
jge
xor
mov
mov
cmp
outsb
iret
jge
scas
outsb
adc
mov
cmc
adc
ret
stc
repz
sub
cwtl
data16
cmc
mov
rorl
loop
jae
push
cmc
push
or
jg
rolb
xchg
pop
mov
xchg
lret
or
cmp
int3
sub
sub
jnp
rcr
arpl
inc
out
jle
in
mov
or
sti
cmp
outsl
hlt
scas
pop
inc
mov
xchg
jbe
mov
lret
add
sarb
mov
jecxz
mov
mov
out
mov
scas
push
sbb
rclb
test
and
pop
mov
jl
decb
mov
lods
mov
test
out
mov
jns
iret
xlat
test
adc
mov
hlt
sbb
add
xchg
dec
dec
inc
cmpsl
rolb
pop
add
lcall
mov
iret
idivl
or
dec
sub
cli
les
or
xchg
sub
sbb
ss
aaa
jmp
mov
mov
hlt
and
xor
scas
cmp
pop
jmp
int3
jo
out
inc
mov
dec
jmp
inc
imul
leave
nop
icebp
jae,pn
fnstcw
ficoms
sbb
sar
gs
scas
pop
sahf
idivb
cltd
nop
cmpsb
add
sbb
outsl
mov
iret
add
cmpsb
sub
iret
jle
inc
add
mov
iret
cli
and
xor
mov
fs
hlt
sub
sarb
pop
test
xchg
jae
in
gs
inc
dec
sub
cmpsb
ljmp
imul
mov
push
sbb
test
mov
call
div
inc
mov
xor
insb
fcoml
imul
iret
je
movsb
sbb
clc
jp
cmpsl
fisubrl
dec
cmpsb
sbb
cld
inc
imul
lock
adc
sub
punpckhbw
mov
sub
add
or
mov
cmp
jle
sahf
xchg
mov
std
stc
dec
ljmp
jns
cmp
mov
mov
aam
out
mov
stos
je
jo
out
ficoml
outsb
push
adc
pop
add
daa
mov
arpl
cmpsl
and
jae
int3
or
adc
aas
fcompl
pop
jne
mov
and
subl
ja
xlat
iret
notb
enter
lock
int3
and
loop
aaa
xchg
dec
and
loopne
rcrl
ret
lock
pop
loop
lcall
leave
icebp
cli
dec
jnp
jno
rorb
mov
jl
test
xchg
cs
hlt
test
stc
sbb
hlt
or
push
cmp
push
test
jae
test
cmc
aaa
dec
sub
push
leave
push
idivl
mov
iret
lahf
cmc
sbb
jp
xor
movsb
clc
mov
lods
out
pop
cwtl
inc
test
push
push
sub
sbb
pop
fidivs
lock
mov
adc
push
cmp
pop
nop
test
mov
dec
pop
ficoms
dec
add
mov
cmc
jge
xor
push
movb
shlb
fidivrs
insb
fnsave
ja
movsl
dec
lcall
xor
imul
mov
sbb
jne
xchg
mov
cmpl
cmpsb
sbb
arpl
jnp
insb
xor
mov
push
sub
dec
lahf
iret
icebp
aas
mov
mov
mov
push
and
or
xchg
mov
inc
add
jp
cmpsb
iret
nop
pop
push
and
rclb
sarb
xchg
xchg
lahf
xchg
xchg
andb
mov
mov
xor
cmpsl
in
mov
pop
mov
pop
repnz
loopne
fistpl
mov
stos
mov
xlat
loop
xchg
movsl
andb
dec
jmp
pop
imul
enter
cmpb
orl
test
sub
int
lcall
jmp
stos
icebp
or
lret
mov
imul
test
repnz
test
iret
cmpl
outsb
mov
and
insl
mov
xor
pop
outsl
mov
test
test
mov
mov
pop
jo
xchg
loop
jecxz
pop
jns
jb
in
adc
xlat
into
sub
dec
jge
fs
adc
mov
insl
push
repz
and
fwait
mov
mov
testl
adc
cld
jle
iret
lods
ljmp
mov
dec
sub
jp
adc
push
push
jno
xchg
test
xchg
imul
pop
or
xchg
pop
arpl
std
cmpsl
xor
cltd
xor
push
aaa
mov
jb
xchg
xor
loope
js
decb
sbb
lea
into
and
insb
sarb
pop
mov
xor
cmp
mov
add
mov
iret
clc
bound
push
xor
test
pop
dec
mov
idivl
sub
mov
test
fwait
lret
pop
mov
jmp
dec
xor
stos
ss
mov
inc
mov
sahf
outsl
pusha
es
std
sub
dec
adc
fmuls
data16
movsb
mov
adc
das
in
pop
inc
inc
dec
test
xor
and
pop
shll
fists
push
adc
and
jp
aaa
iret
scas
push
pop
and
xor
out
inc
popl
je
mov
in
xorb
cmp
push
inc
in
shrb
idivb
lret
sbb
jp
outsl
test
and
data16
iret
push
jp
ret
ljmp
jne
loope
mov
push
call
inc
dec
loopne
cmp
jg
mov
fsts
or
mov
test
lea
stos
negl
lea
add
jp
rcr
mov
xchg
xchg
dec
mov
iret
push
jp
mov
mov
neg
out
xchg
cmpsl
nop
int
ja
es
mul
jmp
inc
in
pop
test
xor
mov
mov
mov
movsl
cmp
jb
jb
repz
mov
xor
test
sbb
fmulp
enter
push
aad
adc
fwait
xchg
pop
mov
stos
jmp
mov
aas
lods
mov
cmpb
rcr
jg
push
daa
jl
mov
sub
xchg
ret
hlt
sub
jp
adc
pop
mov
enter
jns
mov
mov
stc
scas
insb
mov
pop
test
mov
ret
shrb
xchg
or
iret
ds
and
xor
outsb
fcmovnu
cmp
iret
leave
mov
cmp
mov
xchg
loope
movl
mov
shrb
cmp
mov
aad
insl
and
scas
sbb
into
ret
cltd
lret
push
mov
cs
xchg
cmpsl
push
dec
in
sub
sbb
pushf
cmp
xchg
add
xchg
aam
es
iret
ja
xor
lret
mov
notb
addr16
adc
mov
mov
cltd
out
in
lret
das
mov
inc
test
dec
cld
xor
out
push
mov
dec
ljmp
sub
je
sub
mov
dec
insb
adc
popa
pop
arpl
jae
pop
das
mov
pop
mov
ja
imul
dec
sbb
jmp
jmp
iret
inc
mov
or
sub
jl
jbe
mov
mov
inc
xor
lret
scas
cs
jp
lcall
add
mov
test
xor
dec
mov
adcl
mov
xor
rcrb
shrb
and
mov
inc
jg
ror
pop
int
stc
sub
xor
mov
test
xor
xchg
iret
jl
outsb
loopne
ret
mov
push
dec
outsl
lret
pop
mov
arpl
xor
lds
dec
mov
dec
sbb
out
pop
xchg
cli
dec
mov
lock
gs
repz
mov
add
je
daa
or
loopne
out
cwtl
mov
js
push
add
rclb
jp
imull
push
icebp
inc
sub
mov
pop
and
subb
mov
dec
cmp
jno
test
mov
xor
cs
mov
jge
into
pop
in
iret
dec
and
out
test
pop
mov
iret
inc
cld
push
xor
adc
insb
ret
repnz
jnp
jbe
add
xor
cltd
pusha
mov
mov
imul
adc
test
orb
adc
cmpsb
fwait
xor
sbb
das
cmc
movsl
cvtps2pi
xchg
xchg
popa
cmpsl
and
ret
mov
push
ret
sbb
adc
push
sub
das
or
mov
sti
iret
mov
xor
mov
sbb
pop
or
cmpsb
and
lods
repz
sbb
jo
add
adc
sbb
inc
ds
pop
scas
movsl
adc
or
enter
loopne,pn
mov
mov
mov
mov
or
cmp
cmpsb
mov
mov
ret
popa
scas
push
addl
popa
dec
lret
cmp
xor
pushl
test
adc
pushf
ror
jae
pushf
adc
mov
mov
add
lds
fisttps
icebp
dec
int
lods
push
xor
sti
fsubrs
ret
pop
shl
std
mov
jnp
sarb
js
mov
mov
out
pop
cld
sub
daa
icebp
ror
bound
push
sti
pop
adc
add
iret
nop
bound
pop
mov
or
xchg
mov
pop
and
leave
aaa
cld
mov
or
lods
mov
out
mov
mov
and
fiadds
adc
nop
dec
jmp
dec
pusha
outsb
repnz
fdivl
cmp
in
ss
xchg
push
jnp
into
xchg
iret
cmp
jbe
cmp
lahf
movsb
pop
pop
into
int
inc
icebp
incl
test
sbb
in
shr
aas
iret
daa
push
movl
rdmsr
das
iret
push
sub
dec
and
shll
cwtl
out
test
inc
jmp
insb
sub
mov
aam
jnp
jno
add
inc
mov
dec
fstl
test
push
in
mov
dec
adc
mov
and
imul
cmc
mov
rolb
cmp
jb
adc
js
mov
shll
sub
movb
test
lea
mov
sbb
fmuls
cmp
mov
pop
fcomps
push
js
ffreep
test
sbb
mov
faddl
mov
add
stos
fwait
lret
repz
pop
dec
or
or
fucomp
mov
xchg
adc
iret
xchg
jb
pop
jbe
add
sub
push
mov
mov
test
les
test
xor
mov
mov
cltd
or
cmp
or
or
pop
mov
scas
sarl
aaa
sbb
fnstcw
sub
inc
pushl
fsubp
dec
xlat
jnp
mov
add
aad
adc
and
out
iret
push
mov
push
mov
sti
adc
or
jae
fildll
jmp
mov
sub
push
sub
pop
fsubrs
ret
iret
sbb
shrb
jge
aaa
das
in
xchg
iret
sub
mov
cmp
iret
imull
push
mov
xor
mov
jmp
cmp
cmp
inc
sub
loopne
xor
inc
jle
shll
mov
nop
movsb
jne
adc
mov
mov
dec
movsb
mov
or
ja
stc
sub
mov
in
sub
mov
mov
fisttpll
cmp
shrb
stos
adc
pop
movsb
adc
adc
imul
lock
adc
es
xor
jmp
lds
dec
sub
add
out
mov
cmp
dec
mov
mov
cmpsb
jbe
sub
dec
out
dec
sub
loopne
je
dec
or
mov
lahf
lods
sbb
mov
mov
int
imul
xor
ficoml
cwtl
or
popa
lods
outsb
imul
cld
aad
mov
iret
mov
std
xorb
sub
push
mov
cmp
pop
xor
setns
fstpt
push
mov
inc
adc
nop
mov
stos
scas
and
jns
or
outsl
repz
data16
dec
jle
cmp
lods
jp
adc
mov
jbe
fwait
insb
mov
repz
test
dec
lcall
mov
dec
mov
mov
daa
or
jnp
lret
push
rolb
test
xchg
dec
mov
xchg
iret
jmp
rcrl
mov
jo
push
jnp
lods
fwait
aaa
insb
lahf
mov
adc
idivl
clc
int3
xchg
iret
adc
daa
int3
test
mov
add
iret
das
neg
push
dec
sbb
mov
jmp
mov
sbb
mov
mov
cmp
shrb
sub
push
jecxz
jmp
xor
mov
lahf
out
adc
data16
ret
iret
jnp
or
xchg
pop
xchg
aam
add
iret
jl
test
mov
fbstp
jne
mov
lcall
push
aaa
pop
dec
jb
mov
mov
sar
mov
shll
mov
mov
inc
push
xchg
mov
mov
dec
cltd
fcmovne
adc
cld
lahf
icebp
jp
adc
andl
adc
and
xor
in
cmp
push
aad
cmpsl
imul
add
jp
adc
xor
mov
repnz
iret
pop
mov
push
cmp
icebp
out
sub
mov
dec
push
mov
jmp
xchg
sarl
jge
ret
repz
xchg
scas
into
incl
pop
es
mov
sbbb
dec
out
push
mov
int3
mov
in
push
cltd
fildll
out
adc
insl
iret
lea
rcl
dec
in
test
aam
mov
aaa
fldt
xchg
push
xchg
sti
dec
add
loope
xor
xchg
iret
mull
inc
xchg
roll
arpl
ljmp
daa
sub
les
sti
mov
inc
pop
cmpsb
adcb
adcl
pushf
sub
lret
fisubrs
mov
pop
imul
mov
scas
xorl
jmp
push
mov
int
jb
test
xchg
pop
das
mov
xchg
bound
por
xor
in
iret
ret
inc
sbb
mov
mov
out
mov
mov
inc
mov
jle
or
fxch
lds
or
jbe
stc
cmp
into
sahf
jg
sbbb
cmp
je
pop
xchg
arpl
loope
xor
test
xchg
sub
aaa
jne
sarl
dec
mov
push
imul
pop
out
lret
iret
pandn
rcrb
outsb
mov
sbb
in
dec
and
mov
push
xor
cmpsl
lahf
stos
mov
adc
shl
jns
jp
imul
fbstp
fwait
cmp
mov
scas
lock
cwtl
sbb
popf
and
sub
pop
scas
repz
sub
enter
xchg
xchg
sub
jae
pop
inc
push
jge
sarb
add
mov
mov
cs
mov
xor
div
cmp
dec
fsubl
pop
jbe
dec
rcrl
push
clc
push
iret
imul
xor
mov
fmuls
imul
cwtl
mov
mov
xchg
dec
xchg
adc
clc
adc
cmp
fnclex
in
or
push
test
mov
leave
xchg
push
xchg
aam
sbb
test
loop
outsl
imul
rorb
add
movsb
das
addr16
test
lret
lods
iret
fcmovnb
nop
push
outsb
fst
mov
leave
data16
mov
add
inc
fnstcw
pop
push
mov
mov
xchg
out
das
js
int
cmp
in
pop
testb
inc
test
insl
pop
jmp
js
iret
sub
inc
mov
push
cld
inc
or
int
xor
out
insl
pop
mov
jno
cmpsl
bsr
scas
repnz
push
mov
mov
push
xchg
cmpsl
sub
scas
jnp
cs
nop
int3
nop
xor
jle
sub
test
mov
inc
push
test
push
cmp
into
loopne
test
ret
or
iret
mov
inc
inc
add
test
int
aad
iret
push
aas
in
test
add
xor
insl
jmp
lahf
adc
push
or
and
arpl
mov
lds
mov
ret
add
aad
dec
stos
dec
push
dec
mov
scas
and
iret
push
pop
jl
sub
push
jne
int
add
push
clc
iret
das
push
fnstsw
xchg
xchg
dec
mov
mov
xchg
adc
fsubl
dec
sub
inc
stc
mov
imul
dec
clc
test
ss
push
dec
push
mov
push
cli
test
fmull
aas
loop
pushf
mov
mov
popa
cmp
js
lcall
xchg
in
pop
xchg
cmpsb
arpl
cmp
lret
push
inc
iret
movsb
dec
dec
push
test
test
or
aad
iret
mov
mov
test
pop
mov
mov
outsl
ss
js
jmp
dec
dec
xor
mov
dec
sbb
sbb
sub
aas
mov
sbb
add
enter
movsl
jp
dec
movsb
mov
and
sbb
mov
mov
sarb
pop
lods
into
testl
xor
mov
cs
fstl
rolb
mov
mov
dec
shl
sub
daa
push
inc
inc
aaa
mov
inc
mov
out
push
or
mov
push
loopne
sub
insb
inc
dec
loop
aam
mov
pop
int
or
mov
sahf
jle
ljmp
shr
xchg
push
jp
inc
sbb
fbld
mov
pop
cmpb
cmp
cmpsb
pop
xchg
pop
push
fwait
push
test
les
mov
mov
in
repnz
fwait
xchg
sbb
movl
ficoml
jne
shrb
rcl
jp
sub
in
push
mov
adcb
mov
push
mov
cwtl
pop
rcrb
bound
fisttpl
outsb
aas
mov
fsts
in
xor
lretw
pop
into
and
stos
pop
sub
cmp
pusha
xor
cmp
cmpsl
jns
loope
jne
pop
lahf
mov
cmp
out
inc
dec
rolb
mov
es
pusha
add
repz
mov
xchg
push
imul
test
dec
sub
in
cmp
mov
dec
les
xor
lret
sbb
mov
mov
xor
add
adc
lods
ret
movsb
mov
push
jmp
mov
jb
mov
jno
lock
mov
pop
int3
mov
iret
pop
cld
jmp
repnz
dec
ret
outsl
orb
sub
mov
xor
test
sbb
mov
out
xchg
mov
adcl
int3
jo
lods
xchg
mov
cltd
repz
movsl
sbb
cmpsb
test
mov
pop
shlb
mov
inc
pop
cmp
test
pop
mov
sti
mov
push
cli
shll
addb
fs
sbb
imulb
in
mov
sub
xchg
jle
sahf
sti
mov
xor
xchg
flds
mov
dec
and
in
lcall
nop
push
xor
xchg
frstor
test
loope
sub
in
in
testb
les
jecxz
lcall
and
jmp
in
lcall
orb
mov
lcall
sub
mov
lcall
cs
xor
repz
and
lds
and
mov
push
movl
sub
imul
outsb
ret
add
xor
push
sbb
dec
sub
movl
xlat
into
mov
or
outsb
mov
cmp
mov
ret
xlat
out
or
cli
call
in
adc
xlat
jmp
xchg
push
xor
clc
dec
ret
loopne
fisttps
cwtl
lods
call
andl
mov
lahf
movsb
movsb
xchg
in
cmp
in
mov
test
sarb
xor
push
stc
mov
je
push
push
sub
daa
mov
dec
dec
inc
js
imul
dec
jl
adc
push
add
test
iret
pop
jg
adc
das
pop
ds
adc
sub
push
mov
push
adc
sbb
sbb
cmp
popa
inc
jb
adc
jle
and
push
mov
xor
xor
add
cwtl
fcmove
lods
pushf
rol
xchg
cmpsl
fs
scas
frstor
test
fwait
jecxz
hlt
cmpb
into
test
in
cld
hlt
fsubp
clc
dec
mov
cwtl
in
or
mov
lds
inc
out
mov
mov
adcl
xchg
xchg
adc
idivb
int
cmc
test
xor
in
mov
pop
filds
mov
cmp
.byte
jbe
