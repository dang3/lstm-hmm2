push
mov
push
push
andl
andl
push
push
mov
add
movzwl
xor
push
lea
cmp
jae
lea
mov
xor
test
je
mov
and
neg
sbb
and
add
add
jmp
test
jns
push
jmp
test
je
push
pop
test
je
or
test
je
mov
mov
add
lea
push
push
push
push
mov
call
test
je
movzwl
incl
add
add
cmp
jb
xor
lea
test
pop
pop
pop
leave
ret
xor
jmp
push
push
xor
call
jmp
movzwl
imul
add
push
add
pop
cmpb
jne
test
jns
sub
add
and
or
mov
pop
ret
push
push
pushf
rdtsc
imul
pop
add
mov
and
rol
xor
pop
pop
ret
push
mov
sub
sub
push
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
pushl
movb
call
mov
mov
mov
movzbl
imul
xor
inc
dec
jne
push
push
pushl
mov
call
mov
mov
cmp
jne
movzbl
push
push
pushl
call
pushl
push
pushl
call
xor
pop
add
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
push
add
pop
cmp
jb
mov
add
xor
cmp
jbe
add
lea
test
cmp
jb
pop
pop
xor
add
ret
push
mov
sub
cmp
sub
push
push
xor
mov
push
push
pushl
mov
push
call
mov
test
je
push
add
pop
cmp
jb
push
push
call
mov
test
je
cmp
je
push
push
pushl
mov
call
push
add
pop
jne
mov
push
push
pushl
push
call
pop
test
je
mov
mov
mov
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
sub
add
push
push
xor
mov
push
mov
call
push
mov
call
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
testl
jne
cmpl
jae
movzwl
test
jne
push
pushl
pushl
pushl
call
jmp
push
push
mov
call
mov
push
mov
call
pop
lea
call
push
push
pushl
mov
push
call
mov
mov
test
jne
xor
jmp
mov
mov
mov
call
pushl
mov
pushl
push
call
mov
sub
movb
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
pushl
call
mov
mov
test
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
xor
mov
sub
mov
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
mov
cmp
jbe
sub
add
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
mov
add
push
lea
push
call
movzwl
xor
xor
xor
mov
cmp
jae
mov
mov
mov
subl
addl
push
pop
rep
mov
add
add
add
mov
movzwl
push
add
pop
cmp
jb
xor
push
push
pushl
mov
call
push
push
push
push
mov
call
push
mov
call
pop
xor
pop
pop
leave
ret
push
push
mov
call
test
je
push
call
push
mov
call
pop
jmp
push
mov
add
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
xor
mov
mov
scas
je
push
add
pop
jmp
mov
mov
pop
leave
ret
push
mov
sub
add
sub
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
pushl
mov
mov
call
pop
cmp
je
cmpl
jne
lea
call
push
push
pushl
mov
push
call
mov
mov
test
jne
xor
jmp
mov
mov
mov
call
pushl
mov
pushl
push
call
mov
sub
movb
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
pushl
pushl
call
mov
mov
test
je
mov
mov
add
mov
mov
mov
add
movzwl
lea
mov
add
movzwl
lea
mov
lea
push
push
push
push
mov
call
pushl
push
call
mov
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
mov
cmp
jbe
add
add
mov
mov
mov
add
addl
addl
add
incl
mov
mov
cmp
jb
pushl
call
test
je
mov
push
call
test
je
cmpl
je
mov
mov
call
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
mov
add
mov
add
push
lea
push
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
sub
mov
movzwl
push
add
pop
cmp
jb
push
push
pushl
mov
call
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
sub
sub
mov
add
mov
push
xor
mov
cmp
je
add
sub
cmp
add
cmp
je
push
mov
cmpl
jne
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
add
jmp
cmp
je
lea
test
mov
test
jne
jmp
lea
push
push
lea
push
push
mov
mov
call
mov
mov
mov
sub
add
cmpl
jne
pop
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
mov
push
add
mov
push
mov
mov
mov
add
add
add
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
push
add
pop
cmpb
jne
push
lea
push
push
mov
call
add
sub
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
add
dec
jne
pop
mov
ret
xor
ret
cmpl
jne
xor
jmp
call
xor
divl
mov
ret
push
mov
cmpl
jb
push
push
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
add
add
sub
add
rol
push
add
pop
jne
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
subl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
add
mov
andl
mov
mov
push
xor
push
and
add
push
lea
lea
pop
mov
mov
call
mov
mov
mov
mov
sub
sub
mov
lods
xor
stos
sub
test
sub
sub
sub
add
rol
lea
test
jne
mov
sub
add
mov
imul
add
mov
neg
mov
add
imul
add
mov
add
push
push
add
sub
push
push
mov
call
mov
mov
movl
mov
mov
mov
lea
call
mov
add
mov
xor
add
decl
mov
jne
addl
subl
pop
pop
leave
ret
push
push
push
push
push
pushl
mov
push
call
mov
push
pushl
mov
call
mov
mov
cmp
jne
cmp
jne
push
push
push
mov
call
xor
push
push
pushl
call
mov
pop
pop
pop
ret
pop
push
lea
andl
add
and
pop
scas
sbb
xlat
xor
cmp
fmuls
aam
pop
fwait
jg
xchg
aas
cmpsl
mov
fcoml
pusha
lret
mov
rclb
daa
add
decb
fnsave
mov
push
imul
cmp
push
add
jle
adc
sub
cs
stos
push
inc
sbb
cmpsl
mov
push
addl
xlat
jecxz
gs
dec
push
sahf
pop
fisttpl
into
out
sbb
scas
fs
cwtl
lods
push
sub
add
sub
lahf
cmp
jle
lods
pop
push
sbb
mov
imul
jno
je
push
jge
xchg
ret
xor
mov
je
pop
xchg
inc
pop
sarl
inc
pop
lahf
fimull
jecxz
mov
add
pushf
mull
jge
sbb
jo
hlt
push
jns
sub
mov
sbb
xchg
xor
imul
sub
and
pushf
xchg
push
add
fwait
push
adc
inc
xchg
ret
cli
mov
loope
cmpsl
dec
mov
imulb
aam
xor
es
ret
adc
call
out
out
add
mov
jo
scas
cmp
pop
arpl
mov
inc
xor
lret
jb
xchg
adc
jle
mov
in
cmp
inc
mov
leave
sbb
inc
in
pop
daa
ljmp
addr16
test
push
or
cmp
mov
xorl
iret
mov
cmp
xchg
jne
sbb
stc
loop
jecxz
sbb
pop
repz
xchg
lret
lret
mov
push
stos
popf
shlb
dec
ret
jp
fdivrl
inc
push
in
sbb
push
mov
stc
iret
jmp
ret
scas
or
xchg
imul
xor
subl
lret
hlt
xchg
in
fdivrl
add
or
stos
add
lcall
repnz
sub
iret
pusha
sbb
cmpsb
stos
jmp
rcrb
enter
jg
push
inc
or
xor
outsb
jmp
les
xchg
sub
out
lret
inc
and
xchg
scas
ja
cmc
rolb
adc
add
negl
je
push
pop
mov
xchg
fs
inc
fs
mov
mov
push
push
pop
xorb
inc
sub
or
add
jnp,pn
mov
movsl
push
cmp
sbb
repnz
dec
js
and
push
inc
jl
push
addr16
lods
fnstsw
mov
sub
rcrb
subl
jmp
pop
push
or
sub
and
push
out
js
push
hlt
popa
cmp
roll
dec
insb
scas
out
das
fs
sub
icebp
mov
and
sub
pop
sub
icebp
dec
out
js
test
xchg
mov
stos
pop
adc
aam
shl
or
sbb
ljmp
adc
bnd
aas
imul
and
lds
push
rcll
or
mov
test
sbb
xor
mov
mov
mov
adcb
das
es
int3
mov
scas
std
jbe
loop
repnz
out
dec
cmp
lods
test
jg
mov
lock
clc
xchg
cld
push
mov
xchg
add
xor
push
pop
cmp
icebp
mov
sub
jg
xchg
rcrb
and
pop
xchg
jne
fsubr
cwtl
mov
mov
fwait
or
insl
cmp
jle
xchg
sar
rcll
cltd
frstor
orl
cltd
sbb
dec
push
inc
cmp
pop
in
ljmp
or
arpl
jae
push
mov
mov
mov
test
in
jmp
imul
in
and
je
lock
mov
xchg
divl
in
cltd
ljmp
nop
xlat
sub
adc
daa
test
cld
into
add
test
into
dec
pop
cli
add
push
adc
into
jne
repz
mov
ficomps
cs
push
cmp
pop
sbb
add
stc
add
mov
mov
mov
mov
mul
xor
int3
mov
dec
fiaddl
mov
push
inc
mov
mov
adc
leave
lock
xchg
icebp
push
lods
xlat
in
repz
xchg
mov
leave
push
cmp
rol
jae
push
ss
cmpsl
dec
imul
mov
and
mov
mov
dec
jle
and
test
sbb
sub
add
add
fs
int3
popf
jae
mov
int
loopne
scas
dec
int
std
or
bound
and
sub
and
insb
enter
xlat
and
popf
mov
or
and
add
xor
xchg
scas
ja
pop
in
mov
sbb
mov
cwtl
lock
in
mov
push
and
hlt
nop
push
xchg
xor
dec
pop
jb
pop
inc
push
enter
sub
rcr
xor
pop
stos
lods
add
popf
jge
mov
sbb
dec
xchg
idivb
stos
cltd
cs
orb
inc
cmpsl
lcall
dec
dec
and
xchg
pop
pusha
and
xor
out
mov
xor
sarl
aas
pop
mov
xchg
push
clc
stos
push
sub
fistpll
sahf
pop
pop
mov
or
xchg
fcmovnbe
sbb
mov
ss
not
aaa
test
and
cltd
call
subb
sub
xor
and
ret
movsb
lds
imul
xchg
jb
leave
adc
adc
add
pushf
inc
ret
mov
lret
call
push
imul
outsb
lret
filds
pop
fistl
in
ds
cmp
pushf
and
xchg
enter
insb
fs
xchg
int3
xchg
add
scas
out
xchg
add
jp
loopne
pop
and
push
das
add
out
sbb
addr16
adc
push
push
es
sbb
cmp
dec
or
test
jmp
insb
add
cld
sub
xlat
cs
pop
leave
mov
xor
lahf
ds
xchg
aam
pop
push
clc
mov
shlb
shrl
inc
cmpsl
cmp
shr
gs
cmp
push
mov
or
add
lods
cwtl
dec
dec
jl
inc
clc
rorb
add
mov
lcall
xor
out
or
out
in
push
leave
adc
pusha
mov
scas
pop
je
call
push
and
scas
mov
mov
jg
cmp
xchg
xlat
pop
sub
jg
cmpsb
mov
in
inc
sbb
pop
jb
and
pop
xchg
fcoms
sbb
iret
or
loopne
sbb
jo
insb
cs
xor
cwtl
lret
mov
inc
jbe
aaa
test
xchg
jnp
cs
fadds
aam
jnp
ja
daa
imul
scas
repnz
jmp
aad
inc
or
ss
and
jo
or
add
mov
cmc
cmpsb
add
push
stc
push
sub
push
cmp
push
out
sub
stos
ret
xorb
xor
sbb
js
mov
pop
push
pop
mov
lret
xlat
aad
pop
mov
out
xchg
push
cmp
and
outsl
stos
jns
enter
in
out
shll
daa
mov
fildll
int
movsl
fcomp
aaa
daa
fbstp
jle
or
mov
lock
mov
aam
mov
mov
notb
pop
xorb
aas
dec
pop
loop
and
in
xor
adc
fwait
out
lock
xchg
push
adcl
mov
add
test
mov
xchg
test
dec
sbb
mov
inc
pop
lds
sub
shr
cmc
push
xor
and
imul
pop
popf
sub
stos
push
sub
mov
mov
jmp
shlb
aaa
and
xor
adc
xchg
xor
dec
fwait
lods
sub
fnstsw
mov
xor
cmpsl
fistpl
rorl
dec
pop
fmulp
inc
mov
imul
ja
jle
xchg
dec
lret
rcll
mov
and
in
daa
outsl
pop
push
aam
es
pop
repz
pop
jp
out
cmpsl
sahf
stos
cwtl
nop
inc
rorl
stos
sbb
cmp
insb
iret
ret
jmp
inc
out
ljmp
xor
mov
mov
xor
lret
jb
mov
inc
imul
push
push
or
push
jno
adc
test
cmp
pop
adc
sbb
insb
push
cmp
xchg
es
sbb
popa
xchg
test
mov
mov
pmaxub
cmp
cli
sahf
adc
sahf
and
stc
mov
psllw
pop
nop
mov
push
mov
addb
sbb
and
or
into
cltd
dec
adc
mov
test
scas
test
or
xchg
cmpsl
lods
jb
std
popa
pop
ljmp
leave
and
xchg
mov
sbb
mov
out
dec
rclb
inc
sub
pop
frstor
push
das
sbb
sbb
rcl
in
mov
xchg
cmc
pop
into
xchg
popf
sub
push
inc
add
ljmp
insl
and
dec
movsl
daa
cmp
repz
xor
in
adc
and
dec
jmp
fdivrs
jg
rorb
jecxz
adc
ret
and
idivl
inc
jmp
fsubrs
fs
addl
add
xor
xchg
shrb
lods
sbb
std
pop
lea
jmp
fildl
out
testb
ficoms
cmpsb
jmp
imul
iret
rorl
scas
imul
shrb
sub
add
add
aas
mov
push
cltd
je
call
cmc
adc
mov
call
stos
dec
ds
xor
test
out
in
jbe
inc
into
into
nop
and
int3
lahf
mov
divl
out
push
movsl
or
pop
xchg
lahf
leave
jmp
out
adc
xchg
aad
cld
gs
pop
sbb
pushf
inc
and
adc
fldl
mov
xor
mov
sbb
movsb
ret
and
sbb
cmpsb
aad
std
jb
cmpsl
mov
outsl
mov
cwtl
nop
pop
xor
or
inc
jp
inc
cmpl
out
lods
scas
xchg
xchg
dec
cmc
xchg
mov
xchg
jle
jmp
mov
fsubrl
out
and
jle
inc
pop
or
shll
mov
jmp
out
in
lret
adc
sub
ret
pop
dec
rcr
mov
cmp
sub
mov
in
xorl
mov
fstl
lret
mov
push
push
mov
pushf
jmp
mov
and
mov
enter
cmpsl
sub
jnp
or
adc
test
outsb
push
cltd
mov
jbe
int3
fisttpl
stc
ret
or
into
inc
sarl
add
lods
popf
mov
out
xor
ficomps
je
imul
pop
xchg
push
faddp
insl
inc
pushl
adc
jecxz
and
scas
movsb
sti
push
inc
test
es
das
in
inc
repz
and
outsb
mov
pusha
mov
adcl
cmpsb
push
frstor
in
insb
inc
lock
dec
ljmp
and
jo
sub
lods
mov
loope
pushf
xchg
inc
icebp
mov
pushf
mov
add
and
dec
fcmovnu
leave
lock
insl
cmp
lock
sbb
es
or
and
xor
add
in
aas
mov
enter
pushf
cmp
lock
jbe
js
into
pop
jmp
cmp
cmp
mov
stos
sub
mov
add
lock
mov
fs
mov
clc
push
lock
cmpsl
ror
cwtl
insb
lock
in
sub
inc
push
push
arpl
and
sub
jne
add
xchg
lret
stos
scas
lods
pop
in
popf
dec
imul
int3
adc
xchg
sub
or
cmp
in
mov
xchg
push
mov
or
cmc
sub
mov
insb
lods
pop
jns
cld
push
xor
shl
and
jbe
sub
mov
mov
adc
leave
jg
and
in
adc
jp
mov
int
ret
cmpsb
add
roll
push
rcl
mov
jns
imul
pop
cmp
out
rep
or
bound
insl
pop
rolb
adc
sub
or
smsw
ficoml
test
mov
sbb
ja
push
push
and
les
push
out
rol
call
cmpsb
shl
push
mov
jae
sbb
dec
aaa
sbb
imul
js
push
fisubrs
inc
ret
xchg
fsubl
outsl
cwtl
inc
adc
mov
shrb
pop
cmpsl
clc
scas
testl
cmpsb
jns
bound
xchg
int
mov
in
and
xchg
lcall
cmp
aas
pop
xchg
adc
call
sarl
daa
dec
jbe
movsl
inc
negl
lds
adc
sti
incl
addr16
mov
shrl
dec
out
and
clc
mov
inc
icebp
pop
mov
loope
imul
std
or
xchg
loop
ja
sahf
test
inc
xchg
xor
mov
loop
bound
gs
xchg
or
je
mov
or
test
in
xlat
add
mov
mov
fsubrs
sub
inc
aaa
loopne
mov
and
or
adc
add
jbe
shll
xchg
outsl
xchg
enter
adc
xorl
xchg
mov
sti
mov
inc
popf
cmp
mov
cwtl
xchg
xchg
push
mov
ss
adc
sub
push
mov
or
mov
mov
ds
into
lahf
dec
adc
jbe
cmp
and
bound
subl
cmp
push
push
in
sub
dec
xchg
push
xchg
or
lods
xchg
pop
repnz
inc
push
imul
in
faddl
dec
add
fldt
jecxz
pop
sub
leave
insb
repnz
inc
mov
xchg
push
sub
into
mov
sub
ljmp
repz
cld
mov
test
dec
test
sub
or
loopne
mov
lret
xor
pushf
sbb
movsl
mov
jnp
pop
sub
lahf
int3
imul
mull
loopne
xor
in
and
lcall
cltd
lods
xor
incl
jg
dec
and
mov
fsubrs
frndint
sub
cmp
mov
sbb
push
xor
adc
ficoml
xor
pop
enter
notb
jg
aas
cld
jae
dec
jno
jge
adc
fwait
xor
pop
adc
mov
cs
cmc
add
sub
ljmp
jmp
test
enter
push
add
mov
mov
xchg
push
lds
xor
lcall
int3
sub
push
popa
push
xchg
divl
lds
mov
in
out
lea
jo
push
fcom
lods
scas
daa
fists
cwtl
adcb
rcll
cld
loop
jmp
sbb
lahf
add
xor
mov
mov
mov
mov
lret
and
cmp
sbb
jecxz
test
adc
mov
jns
jns
mov
mov
push
jle
dec
call
push
adc
cmp
dec
enter
in
pop
fdivs
pop
and
sub
xor
sub
out
ss
add
aas
inc
fndisi(8087
lcall
and
ds
add
lds
mov
push
gs
mov
mov
mov
into
cs
xchg
fsub
jo
bound
xchg
lods
scas
ror
rorl
xlat
cs
ret
lahf
add
jg
lahf
push
cld
push
fisubl
shrl
fisubs
and
push
pop
add
inc
out
mov
jmp
jae
lret
mull
xchg
or
mov
repnz
adc
in
out
mov
push
xchg
test
hlt
stos
jmp
ljmp
fsts
xor
sahf
nop
xor
sub
mov
mov
mov
das
adc
nop
xchg
fwait
and
rcll
test
int3
xchg
jae
test
sub
jb
sbb
cli
mov
addr16
add
mov
mov
test
int3
mov
mov
cmp
mov
pushf
inc
cmp
sub
dec
xor
out
sub
xchg
js
fldcw
stc
mov
fmuls
jl
mov
adc
in
in
cli
outsb
sub
sbb
rolb
xor
je
idivb
inc
pushf
sti
outsl
stos
xlat
push
sbb
jmp
idivb
je
js
imul
pop
loope
je
mov
imul
mov
push
jbe
mov
sub
pop
jle
out
xor
cmp
negb
aaa
pop
mov
inc
cmp
push
push
mov
out
mov
adcl
add
cmp
cmp
inc
rorb
fidivrs
into
mov
inc
in
mov
les
cmpsl
popf
adc
push
mov
jg
icebp
aam
insl
mov
push
jmp
pop
jnp
aaa
sarl
mov
lds
add
mov
lods
and
sahf
mulb
inc
adc
inc
pop
shlb
dec
nop
call
push
push
ret
loop
pop
jmp
push
xor
sub
pop
inc
mov
push
out
insb
push
xchg
push
loopne
mov
mov
nop
inc
mov
mov
push
sti
or
enter
pop
fs
jno
adc
mov
push
out
adc
fcompl
cmp
int
mulb
out
adc
imul
lahf
jge
push
fdivl
adc
mov
ljmp
imul
sub
xor
bound
cmp
and
fldcw
mov
pop
sahf
ljmp
jb
pop
inc
add
mov
and
adcb
pop
or
out
lret
sub
mov
jo
cmp
xor
inc
push
push
inc
mov
lcall
test
jbe
or
xor
mov
mov
nop
xlat
lock
or
addl
ds
sub
add
mov
in
mov
adc
testl
lcall
jmp
mov
adc
xchg
mov
pop
fwait
mov
test
popf
add
mov
cwtl
stc
into
add
fistl
push
push
jecxz
push
xor
iret
pop
mov
mov
mov
aas
aas
ja
xchg
or
out
sbb
out
lcall
jg
mov
fwait
jbe
mov
mov
pop
add
or
mov
testb
int
mov
jl
fsubl
xor
cmc
imul
pop
jo
into
pop
jmp
cs
scas
mov
inc
cmp
sub
inc
xor
int
in
adc
jo
cs
add
out
jp
mov
lods
mov
clc
sub
cmp
std
int
pop
out
stos
and
cmp
loop
xor
imul
xlat
popa
mov
add
bound
cmp
or
xchg
imul
stos
mov
mov
movsb
cmp
pop
cmc
add
mov
fimull
mov
sahf
dec
js
adc
leave
jne
adc
pop
movsl
lret
pushf
fstps
mov
adc
mov
dec
mov
adc
pop
aam
mov
xchg
or
scas
lahf
or
pop
add
lods
ret
cmp
push
cmp
mov
push
ljmp
add
ja
aam
sub
loop
or
std
xchg
adc
bound
mov
sahf
xor
je
outsl
sbb
xchg
mov
cmp
cmpsl
lcall
xor
push
lods
addl
aam
inc
lds
inc
popf
insl
decl
out
shl
sub
mov
push
in
xchg
and
in
xchg
ds
repnz
and
pop
xchg
fidivs
into
imul
xchg
test
enter
jne
mov
jae
mov
jmp
xor
int3
mov
in
xchg
cmp
pop
and
push
call
cs
enter
dec
adc
mov
xchg
mov
lahf
insb
sbb
add
mov
push
inc
rorl
pop
push
in
je
test
movsb
lods
andb
mov
pop
mov
push
xchg
cmc
int3
mov
outsb
cltd
adc
mov
jne
stos
pusha
jmp
add
lods
xchg
or
mov
cmp
les
or
fxch
cmp
mov
mov
fiadds
mov
lds
mov
outsb
xchg
add
mov
cmp
das
xorl
xchg
es
inc
aam
inc
mov
xchg
cmpsl
xchg
push
sarb
xchg
imul
push
pop
ret
shrl
aas
push
es
repz
aad
dec
pop
lret
inc
dec
cmpsb
lea
sub
pop
mov
xor
xchg
push
jae
rorb
imul
mov
daa
clc
inc
iret
xchg
adcl
outsb
repnz
mov
adc
stc
arpl
and
inc
mov
sub
xchg
add
mov
pop
inc
dec
and
aad
outsb
push
push
nop
xchg
divb
pop
loope
adc
scas
pop
notb
sub
outsl
test
inc
insb
enter
jns
or
stc
movsb
jns
cmp
pop
les
cli
arpl
and
dec
mov
push
dec
aaa
adc
in
repz
jge
cmp
cmp
out
dec
cld
mov
popf
pop
shrl
inc
push
xchg
or
movsl
call
sub
inc
pop
popa
mov
or
scas
push
leave
xchg
loopne
mov
pop
mov
push
mov
scas
push
fdiv
ds
cld
xchg
mov
and
mov
and
test
cmpl
and
jmp
dec
mov
cltd
xor
subb
mov
roll
xchg
sub
add
js
xor
pop
cs
lock
mov
fcomps
cmp
push
lock
push
inc
xor
xor
xchg
int
xor
ds
mov
shl
out
pop
into
push
and
mov
aad
popf
push
inc
jae
jecxz
mov
pusha
mov
stos
jns
adc
cwtl
push
shl
lds
push
adc
out
movsl
lock
int3
scas
imul
outsl
daa
sub
bound
mov
inc
ljmp
int
jl
xchg
and
shrl
xchg
cmp
sahf
pop
adc
cld
fidivrs
jbe
mov
xchg
rol
xor
fimuls
mov
cltd
insl
inc
mov
xchg
ja
aas
add
out
push
out
adc
stos
fnstsw
xor
jecxz
cli
je
test
shll
lock
clc
or
and
jg
mov
push
test
push
adc
out
mov
push
loop
mov
js
test
mov
fsqrt
loop
push
test
jbe
mov
cmp
mov
cmp
cmc
push
pusha
xchg
lcall
popa
dec
stos
fisttpl
xor
nop
popa
cli
adc
std
inc
jmp
movsl
jne
test
sub
movsbl
mov
mov
dec
js
sbb
adc
and
cmpsl
sbb
lcall
mov
xor
mov
rcrl
sbb
aam
movsl
jne
mov
adc
ja
cld
movsb
les
jbe
cmpsb
ror
jno
push
mov
lods
pop
add
idiv
pop
adc
and
inc
arpl
pop
cwtl
insb
fsubs
push
js
fdivrp
enter
hlt
out
pop
xor
or
out
lahf
repz
std
pop
cld
jns
or
sbb
pushf
dec
faddl
outsl
pop
sbbl
or
add
in
mov
add
fsubrs
dec
jl
or
icebp
test
lea
xchg
jp
add
rol
rorl
into
jmp
mov
mov
inc
pop
push
sub
or
negb
adc
and
push
mov
cmp
lcall
push
js
jl
popf
mov
xorl
or
cmp
cmpb
fildll
mov
mov
das
in
ljmp
int3
xchg
loopne
mov
loopne
imul
sub
pop
test
push
sbb
jmp
mov
cltd
jbe
push
imul
decl
pop
lret
daa
cmp
insl
jmp
xchg
xor
lds
les
mov
jb
xor
add
dec
and
das
adc
popa
push
rol
and
lret
pop
mov
xor
sub
cmp
out
repz
adc
push
fsubp
adc
mov
les
adc
in
int
inc
mov
clc
xor
flds
lret
in
leave
test
mov
int
dec
add
ljmp
fistpl
xchg
add
roll
lea
adc
sbb
addb
sbb
scas
cs
mov
dec
addl
fisubrl
xor
leave
xor
xchg
mov
push
and
cmc
subb
push
or
cltd
jecxz
jmp
je
pop
push
lret
push
jg
and
or
nop
inc
push
loop
adc
push
jle
dec
mov
or
cwtl
mulb
push
stos
insl
xchg
je
pop
pop
adc
fdivl
loop
jae
sti
mov
fwait
lock
in
sahf
out
in
cmpsl
adc
xchg
xchg
hlt
mov
addl
inc
fidivrs
in
or
jno
xchg
sbb
and
sbb
xor
cltd
ds
cmp
stos
cmp
stos
mov
pop
dec
inc
dec
loopne
push
mov
push
push
mov
out
scas
scas
pop
das
lods
add
test
inc
ret
push
sti
xchg
shlb
mov
sbb
lds
cli
mov
xchg
jl
cmp
ja
sub
sub
xchg
xlat
pop
cmc
cwtl
mov
xchg
jo
scas
outsb
cs
aam
push
inc
adc
out
sbb
cmp
cmp
shlb
das
mov
aas
push
lret
dec
mov
popf
sarb
mov
jns
mov
out
mov
cmp
fwait
cli
add
mov
dec
test
inc
cmp
into
les
mov
cs
xor
dec
lret
and
xchg
in
jae
icebp
push
ret
filds
fnstcw
jl
into
xchg
out
ss
pop
inc
push
pop
movsb
loope
arpl
outsl
fst
cmp
cmc
push
mov
pushf
mov
jo
in
pop
push
push
cld
faddl
xchg
stc
push
add
pop
inc
or
xor
arpl
mov
inc
pushf
loopne
xor
jb
fstpt
xchg
jg
jle
mov
inc
das
les
mov
sbb
mov
lcall
xlat
clc
repz
pop
cmp
imul
incb
loopne
mov
mov
jp
push
inc
jbe
das
aam
ja
into
xor
xlat
shll
cmp
push
popf
pop
adc
das
pop
cs
xorl
sub
sub
sub
pop
aam
mov
mov
mov
push
pop
clc
xchg
cmp
or
mov
mov
push
sub
sbb
popf
xor
popa
ret
arpl
fidivl
adc
mov
sub
ds
mov
push
or
aad
roll
xlat
in
and
arpl
jne
outsl
enter
testl
bound
cwtl
add
in
sti
push
shr
test
das
sub
xchg
insb
adc
ljmp
je
dec
or
lds
push
mulb
sub
mov
ljmp
pop
mov
adc
popf
cmpsl
mov
pop
jle
dec
insl
gs
jnp
jp
pop
insl
outsb
xor
std
pop
fidivs
aam
xor
icebp
xchg
lods
stos
push
leave
and
shlb
add
lret
fwait
cld
xchg
arpl
enter
pop
out
inc
push
jmp
popa
jns
jge
dec
pop
rol
pop
push
nop
enter
incl
xor
test
or
cmp
insl
fdivrs
lods
jecxz
jmp
int3
push
test
in
mov
push
test
add
add
dec
jl
lock
fwait
outsb
sub
scas
inc
cmp
insl
xchg
xchg
ret
mov
movsl
mov
in
and
fisubrs
jmp
lcall
cmp
dec
in
xchg
and
or
lahf
mov
fcmovbe
lods
xchg
fisubl
cmp
ficomps
sub
test
cmc
sub
lods
movsl
add
mov
dec
push
cmpsb
xor
rcrb
or
and
enter
outsl
popa
lds
pop
shrl
and
jb
push
fdivs
fimull
and
test
mov
xchg
int
lock
mov
jae
and
cmpsb
inc
loope
pop
xor
dec
popa
cmpsb
push
add
rorb
ja
jo
leave
xor
mov
outsl
mov
jno
repz
jmp
mov
fsubr
push
and
mov
lods
cmpsb
push
test
xor
imul
mov
imul
sti
rolb
xlat
cmc
jo
mov
xchg
dec
das
lods
lods
push
sbb
add
fnstcw
dec
sub
and
push
jae
loop
or
fldcw
aaa
jns
outsl
xor
dec
repnz
fadds
mov
cmpsl
stc
fisubrs
popa
pop
es
out
bound
insb
arpl
outsl
insb
mov
lret
mov
in
mov
xchg
enter
pop
loope
jmp
mov
xor
dec
push
adc
ret
and
rolb
insl
shlb
movsl
cmp
cmp
adc
mov
mov
jl
nop
pop
inc
and
fimull
clc
arpl
aam
inc
ret
in
pop
dec
or
xchg
jg
pop
pop
push
fidivrs
sub
add
mov
aad
mov
lea
push
fcoml
sbb
sbb
jb
negb
call
imul
pop
mov
shl
pop
jle
clc
inc
je
in
xor
into
dec
jle
cmp
insl
sub
icebp
mov
rcll
test
sub
or
xchg
xchg
nop
in
push
loopne
push
pop
ret
mov
xchg
push
ljmp
movsb
mov
ljmp
jmp
add
cs
cmpsl
dec
adc
hlt
subl
stc
ror
xor
add
test
mov
andb
adc
mov
shrl
fdivs
add
add
add
outsl
arpl
outsb
gs
je
push
add
add
add
jb
outsl
add
arpl
add
add
add
add
add
add
popa
outsb
popa
insb
jns
imul
add
outsb
add
je
je
add
jne
jb
add
add
add
add
insb
imul
outsl
outsb
add
add
add
jne
jb
imul
add
jo
jb
imul
imul
add
add
data16
