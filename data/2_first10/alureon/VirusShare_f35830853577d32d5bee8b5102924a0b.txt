jge
add
nop
adc
add
adc
add
adc
add
adc
add
adc
add
add
and
add
xor
add
inc
adc
add
add
adc
add
add
mov
add
cwtl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
jb
add
adcb
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
das
push
fcomps
fisubl
icebp
ljmp
xchg
lret
ficoml
sbb
loopne
mov
and
pop
es
test
out
push
sbb
sub
fdivrs
test
insl
mov
lret
ja
or
push
in
fwait
xor
dec
fs
dec
push
cmc
push
loop
or
sub
jno
xlat
xor
rorb
les
ret
inc
ljmp
in
aam
pop
shr
inc
aaa
cmp
in
jae
or
outsl
movl
pop
adc
jns
fucom
jne
or
rcl
scas
sti
xchg
mov
mov
push
in
dec
pop
pop
mov
mov
out
sub
push
bnd
lds
cld
aas
or
sti
cmp
negb
xchg
fwait
add
sbb
aam
mov
xchg
add
jno
push
sub
shr
mov
mov
daa
push
xor
jecxz
test
pop
pop
mov
clc
pusha
jb
adc
push
pushf
call
jmp
dec
jae
dec
jge
insl
sbbb
inc
jle
push
out
in
lcall
add
mov
sbb
push
pop
sub
fisubrl
pop
push
push
lods
sbb
pop
mov
es
fbld
push
in
adc
fcomps
mov
jae,pn
out
insl
mov
shrb
lods
loopne
shl
cld
jl
call
test
das
push
jge
pop
fs
cmp
pop
push
ret
movzbl
xchg
mov
cs
idivl
into
pop
adc
xor
or
loope
inc
dec
lds
incb
and
or
push
test
stc
das
fs
shl
ljmp
xchg
mov
push
pop
and
jl
les
test
mov
leave
and
push
mov
bnd
xchg
jle
sti
push
inc
mov
das
jp
pop
int
ljmp
gs
push
mov
js
jb
adc
daa
cld
popf
push
ja
jno
push
sub
test
js
aaa
mov
and
es
or
es
sbb
adc
mov
add
pusha
imul
fstpt
mov
cmp
nop
fstpl
dec
pop
movsl
cld
xchg
sbb
ret
cmp
mov
jbe
mov
jne
mov
and
cs
mov
push
push
mov
loop
xor
ret
cld
popf
shlb
iret
push
rorb
dec
lret
data16
add
inc
std
pop
xchg
jmp
lea
lahf
stos
test
jl
xor
jge
sub
add
leave
lahf
lea
rcl
push
cmpsb
sub
leave
sub
rorl
fmull
xor
lods
popf
cmp
dec
jp
pop
or
pop
cltd
cltd
sub
fistl
sub
lds
out
adc
aaa
fnsave
in
rorb
rcrb
ret
int
jbe
jmp
stc
aas
xor
fwait
xor
call
add
mov
cmpb
jbe
out
push
sbb
pop
adc
out
adc
fsts
pop
xchg
pop
subl
je
mov
xchg
test
mov
add
out
les
outsl
or
or
les
push
pusha
jg
pop
jb
jle
add
push
andnps
notb
test
out
xchg
inc
iret
adc
das
gs
adc
mov
out
cmp
mov
fdiv
mov
cmp
out
sub
pop
mov
mov
cmpsb
push
mov
pop
pop
lret
jg
mov
mov
push
popf
mov
xor
lcall
lcall
dec
cmp
inc
jb
cmp
in
adc
xchg
dec
and
jo
pop
sbb
in
lcall
jl
dec
jp
loope
dec
jge
pop
jno
mov
jns
or
add
sarb
ffreep
stos
adc
std
pop
das
adc
das
loopne
das
std
mov
lret
push
popf
cmc
xchg
in
loope
push
xlat
push
sub
push
jbe
dec
dec
fwait
inc
icebp
xchg
push
add
or
pushf
into
pusha
jno
or
lods
rorb
inc
je
jne
arpl
test
rcl
inc
arpl
mov
sbb
xchg
idivl
test
cltd
loopne
mov
movsl
sbb
and
dec
pushf
cmp
push
sbb
imulb
cmp
stos
pop
xchg
mov
insl
push
cmp
rcrl
jmp
addr16
lods
out
stos
idivb
shl
or
adc
cltd
mov
jp
cmp
or
xchg
pop
xor
jg
cmp
pusha
mov
cmp
push
mov
lods
mov
xchg
jne
imul
jne
adc
mov
imul
lods
xchg
movsb
sti
popf
fnstenv
xchg
shld
setns
jl
testl
mov
mov
sbbb
das
roll
ret
adc
jle
mov
jne,pt
lahf
push
mov
xchg
fisubrs
pop
roll
test
sub
loop
jne
test
xchg
enter
inc
or
mov
inc
jle
call
mov
xchg
push
jbe
test
jecxz
mov
leave
mov
push
sar
jecxz
adc
cmpsb
jbe
icebp
addr16
loope
pop
and
mov
xor
or
adc
ficomps
sub
push
push
hlt
pop
or
cs
push
push
sub
imul
int3
dec
inc
stos
and
out
pop
mov
out
mov
js
xor
xor
enter
out
pop
pop
movsl
test
fiaddl
in
inc
add
adc
adc
dec
fidivs
pop
lcall
sub
addr16
xchg
cmp
xchg
add
call
xchg
cmpb
and
sbb
bound
stos
mov
xor
sbb
pop
sbb
push
scas
dec
movsl
add
std
inc
gs
push
push
mov
mov
shl
mov
pop
in
dec
mov
adc
push
gs
pop
pop
jno
mov
push
les
cltd
popf
out
xchg
add
xor
or
test
outsl
ja
sub
xchg
mov
sub
cmpl
adc
xor
sub
inc
mov
push
call
dec
fiaddl
or
movsl
outsl
das
add
arpl
push
test
lock
aas
cmp
adc
rcrl
inc
sub
adc
aam
mov
aad
push
lock
xor
xchg
popa
push
popf
push
sub
mov
pop
and
ja
pop
mov
aam
sti
jns
dec
pop
roll
fistpll
mov
cltd
xchg
and
xchg
xchg
pusha
dec
push
inc
xchg
pushf
mov
cmpsb
in
mov
jg
fldenv
add
popf
adc
divl
push
inc
mov
mov
cs
inc
mov
pop
insl
cltd
pop
lret
aam
push
push
push
dec
aaa
mov
ds
into
xchg
test
repnz
inc
es
inc
pop
xchg
push
jg
xor
leave
cli
mov
inc
pop
stc
dec
hlt
xor
stc
aaa
cmc
out
mov
cmc
das
ret
dec
out
pop
sub
mov
test
xchg
repnz
adcb
mov
pusha
iret
cmc
mov
xchg
sub
jno
jns
or
sarl
sarl
xchg
nop
jp
insw
adc
push
lcall
mov
nop
ja
stos
cli
in
scas
in
cmp
adc
push
add
fidivrs
or
pop
cmc
jp
in
mov
test
fcomps
arpl
cmpsb
and
cmpsl
loop
push
jecxz
dec
icebp
aam
dec
shlb
jns
mov
inc
sti
lahf
inc
sub
push
cmp
inc
fsub
jle
pop
add
shll
int3
xlat
jne
mov
cmc
loop
in
rorb
mov
fstpl
aas
sbb
sub
int3
xchg
and
cmp
mov
inc
fmul
fsubrl
push
push
enter
mov
test
repnz
pop
pop
out
xor
or
push
xchg
clc
mov
jne
imul
ret
xchg
dec
js
push
iret
or
movsl
mov
test
lret
sbb
ja
sti
pop
or
repnz
lods
ss
xor
lods
mov
adc
cmc
mov
into
pop
gs
rolb
out
mov
outsl
xor
pop
ret
xor
lea
dec
jb
mov
push
stos
loopne
pushf
sbb
sbb
xor
push
ret
add
repz
dec
out
stc
adc
imul
and
comiss
mov
mov
sbb
sub
enter
decl
mov
mov
loop
mov
sbb
push
xchg
insl
xchg
sub
test
leave
outsl
repz
in
pop
jp
addl
and
rclb
sahf
out
fdivp
test
xchg
and
inc
insl
mov
xlat
mov
dec
or
jecxz
fdivp
or
xchg
out
fdivs
xchg
adc
daa
pop
mov
je
add
mov
mul
push
inc
outsb
jecxz
stc
pop
add
imulb
pushf
dec
out
test
stc
pop
fldcw
jne
cmp
fidivs
leave
dec
sub
sbb
ds
pop
jne
aam
and
dec
dec
sub
jecxz
ja
loope
lret
movsb
daa
loope
ret
mov
mov
movsl
mov
jne
out
xchg
push
hlt
fildl
shll
ja
jge
jo
lods
dec
jecxz
bnd
add
pop
jge
jb
ja
out
push
test
cmp
push
add
les
push
sarb
push
stos
cld
scas
pop
test
bound
fwait
call
cmp
pop
jae
in
fstpt
jno
mov
adc
push
jbe
in
shlb
fstpl
mov
fmull
in
cmp
out
mov
gs
pop
pop
xor
notl
cmpsb
jne
and
int3
push
shl
es
mov
nop
mov
movsb
test
mov
mov
mov
push
jns
xchg
fstpl
cltd
and
cs
je
js
arpl
dec
das
mov
cli
dec
mov
sbb
cli
push
and
mov
jbe
mov
lcall
pop
pushf
loopne
jno
xor
cltd
add
pop
mov
daa
dec
rolb
icebp
sub
test
cmpsb
mov
popf
data16
js
out
cmpsl
leave
dec
mov
out
into
mov
adc
sub
cmpsb
lea
sub
mov
push
mov
movsbl
inc
call
movzbl
and
call
or
push
dec
call
dec
inc
mov
mov
mov
mov
call
lea
inc
inc
add
inc
dec
mov
sub
mov
add
lea
inc
add
dec
call
dec
add
inc
mov
call
lea
mov
call
inc
mov
imul
lea
add
xor
dec
lea
pop
lea
mov
lea
add
sub
pop
inc
movswl
pop
dec
dec
add
add
pop
inc
lea
dec
dec
dec
inc
mov
lea
pop
lea
dec
pop
mov
dec
mov
add
mov
call
lea
inc
dec
mov
ret
and
movzbl
push
dec
movzbl
push
add
inc
push
inc
lea
push
add
inc
push
mov
movzwl
mov
dec
add
push
or
ret
push
dec
inc
mov
xor
sub
xor
imul
push
imul
lea
push
dec
call
pop
ret
jmp
mov
xchg
imul
mov
lea
inc
xor
inc
dec
sub
mov
inc
sub
imul
dec
jne
mov
mov
add
add
pop
dec
lea
pop
xor
dec
pop
sub
dec
mov
mov
or
mov
lea
dec
lea
mov
mov
add
ret
push
add
mov
movzwl
dec
movzbl
sub
inc
mov
push
push
push
push
dec
dec
dec
push
add
or
sub
mov
mov
and
inc
mov
or
mov
mov
push
add
inc
xor
movzbl
movzbl
push
lea
add
push
movswl
movswl
pushl
sub
call
dec
add
movzwl
add
or
inc
mov
sub
add
pop
ret
xor
mov
or
dec
inc
add
and
inc
inc
mov
mov
dec
add
cmp
jb
lea
mov
dec
sub
xor
imul
dec
xor
sub
sub
pop
sub
mov
test
jbe
lea
mov
dec
mov
add
and
mov
inc
imul
dec
and
lea
inc
movswl
dec
lea
dec
inc
dec
add
movzbl
dec
mov
inc
and
inc
inc
mov
xor
dec
movzbl
lea
imul
add
mov
imul
and
and
xor
mov
dec
mov
mov
movswl
mov
mov
add
mov
lea
mov
add
sub
dec
mov
dec
jne
movzwl
mov
lea
mov
add
lea
dec
dec
lea
add
inc
mov
inc
movzwl
movsbl
sub
sub
xor
add
mov
mov
lea
dec
test
jbe
mov
lea
inc
or
lea
mov
inc
imul
sub
inc
dec
movswl
movzwl
add
mov
inc
mov
mov
lea
add
sub
imul
and
dec
mov
mov
mov
and
movzbl
mov
inc
add
mov
add
and
mov
sub
mov
dec
dec
movzbl
inc
imul
mov
add
add
mov
imul
and
movzbl
mov
mov
add
inc
mov
and
imul
lea
movzbl
lea
jmp
push
call
dec
xor
add
mov
xor
xor
dec
inc
inc
movswl
inc
lea
mov
xor
imul
dec
lea
imul
shl
dec
sub
xor
lea
dec
push
lea
imul
movsbl
call
dec
pop
mov
inc
dec
dec
mov
dec
sub
add
cmp
je
call
call
add
iret
lea
inc
pop
dec
ret
push
dec
mov
dec
add
add
push
dec
sub
push
add
push
xor
push
dec
and
push
inc
dec
sub
add
add
call
xor
push
sub
push
sub
pop
mov
imul
mov
add
add
mov
mov
sub
inc
movzbl
mov
dec
je
add
dec
dec
add
and
dec
dec
imul
xor
mov
mov
sub
mov
add
movzwl
add
sub
repnz
mov
lea
add
add
jmp
dec
sub
dec
sub
and
inc
inc
mov
inc
or
mov
inc
mov
dec
mov
add
pop
pop
jmp
ret
push
or
and
add
add
sub
movzbl
and
add
imul
and
add
movzwl
mov
mov
movzwl
or
add
mov
and
inc
add
inc
add
pop
ret
sub
mov
mov
dec
mov
mov
mov
mov
mov
lea
mov
mov
add
add
xor
lea
sub
mov
xor
mov
inc
lea
imul
inc
dec
or
mov
cmp
jb
mov
push
imul
sub
push
and
lea
push
inc
dec
mov
inc
inc
xor
movzbl
dec
xor
inc
mov
xor
sub
movzwl
push
mov
inc
xor
dec
add
mov
add
mov
inc
movzbl
xor
add
and
inc
add
inc
inc
add
add
movzbl
inc
mov
sub
inc
movsbl
dec
dec
dec
inc
dec
imul
mov
lea
and
inc
imul
lea
inc
cmp
jb
add
xor
dec
add
mov
add
jmp
inc
mov
pop
test
fistl
lods
ss
push
fimull
pop
test
jb
pop
inc
mov
dec
out
shrb
sbb
lcall
jmp
bound
ficoml
mov
adcb
adc
out
cld
or
push
mov
and
pushf
fxch
daa
push
icebp
out
xchg
xor
pusha
push
sahf
jle
mov
xchg
add
mov
imul
pop
std
jge
add
sti
pop
loop
adc
adc
out
iret
adc
mov
loope
xor
dec
add
outsl
mov
adcb
cmp
das
inc
pop
add
testb
je
shll
inc
ret
sbb
mov
mov
jb
pop
in
add
mov
sub
aad
fs
js
ja
xchg
stos
and
dec
sahf
or
enter
adc
notb
enter
outsb
adc
xor
pop
icebp
cwtl
dec
xor
ret
push
adc
imul
decb
fadds
or
sub
mov
outsb
aaa
push
sub
sub
lods
scas
push
jns
cmovno
push
xchg
lcall
scas
mov
adc
aas
pop
out
sahf
fwait
movsb
popf
in
jnp
mov
loop
jno
mov
mov
shrb
mov
jnp
dec
nop
jmp
lods
scas
and
xchg
mov
loopne
jg
and
lcall
mov
add
and
stc
push
adc
fwait
mov
or
adc
dec
in
call
sub
cmp
xchg
in
or
pop
xor
test
rol
test
sub
sbb
scas
xchg
in
xor
out
outsl
sbb
or
mov
pop
into
repz
sub
cmp
loope
mov
addr16
mov
pusha
test
test
cmp
mov
mov
jl
mov
push
ret
mov
xor
cmp
xchg
jle
mov
adc
unpcklps
ret
shlb
dec
in
shl
je
inc
dec
or
mov
mov
dec
dec
jl
int
shll
mov
insb
pop
add
push
sbb
pop
xor
mov
std
lret
push
push
jmp
inc
lea
mov
ss
movsl
jno
inc
sbb
xor
xchg
cs
scas
nop
mov
pop
test
inc
cld
push
aas
insl
cli
shll
cli
jle
or
adcb
inc
sub
push
test
nop
idivl
shrl
mov
jnp
clc
mov
add
faddl
stos
mov
btc
imul
mov
or
out
mov
lahf
mov
push
or
push
pop
sub
cs
out
aad
lahf
cmpsl
dec
xchg
xor
push
hlt
sbb
add
jmp
inc
adc
adc
rcrb
add
arpl
jnp
repnz
sahf
push
hlt
jno
and
inc
cmp
hlt
insb
das
iret
shl
push
cmpsl
cmp
jnp
xchg
loopne
or
insl
pop
xlat
fidivs
sbb
push
and
stos
fwait
repz
mov
xchg
xor
in
jns
jmp
lret
xchg
xchg
inc
dec
jl
bound
xor
sbb
mov
fwait
push
std
fmull
test
lcall
xorb
movsl
fucomi
fcoml
adc
test
mov
push
in
dec
mov
enter
add
push
shlb
adc
divb
mov
lods
out
jno
inc
xchg
dec
stc
mov
mov
xchg
repnz
xchg
sbb
loopne
mov
push
cmp
and
sbb
outsl
add
fcoml
ss
imul
push
and
jmp
xor
dec
mov
test
fwait
leave
and
test
fadds
loopne
repnz
popl
sub
sbbl
mov
pop
sub
daa
dec
sub
add
push
call
in
popa
outsb
pop
inc
inc
insb
mov
idivl
shlb
sbb
adc
hlt
cmp
dec
mov
lea
push
jb
lods
cld
cmp
add
mov
int3
dec
ljmp
xchg
mov
dec
in
enter
gs
cmp
push
subb
and
loope
push
and
sar
sbb
mov
rcrb
push
and
fidivl
dec
mov
or
jo
loopne
cltd
sbb
jg
mov
cmp
jle
loope
lret
xor
clc
and
mov
mov
int
and
add
addr16
subb
hlt
lea
loopne
inc
mov
in
pop
aas
dec
ds
mov
test
out
pop
rclb
inc
sbb
fwait
add
adc
mulb
dec
loopne
inc
mov
add
fxch
cmp
dec
mov
les
jmp
imul
fildll
lock
movl
jbe
mov
hlt
pop
out
adc
xchg
add
scas
repnz
fs
scas
pop
ret
pop
and
xchg
in
mov
in
clc
mov
mov
dec
add
test
pop
cmp
es
insl
dec
mov
cmc
fisttpll
or
stos
hlt
sbb
mov
mov
loope
js
sbb
push
push
mov
icebp
push
imul
ja
jmp
je
mov
pop
ljmp
push
outsb
lods
mov
sbb
pop
les
clc
add
ficoml
das
adc
xchg
mov
lock
arpl
jbe
test
jbe
lods
pop
sbb
push
adc
orb
data16
or
jecxz
adc
and
or
cmp
aam
popf
adc
mov
hlt
pushfw
repnz
cmp
lret
pop
xor
and
stc
jns
lea
dec
leave
bound
mov
fimuls
idivb
bound
jb
out
pop
bound
mov
test
sti
gs
xchg
daa
fs
xchg
sub
ja
pop
jns
xor
out
pusha
mov
gs
in
fmuls
dec
enter
xor
fildll
jp
jg
sub
mov
xchg
sar
dec
lret
int3
cs
inc
lods
call
mov
jae,pn
add
leave
fwait
push
imul
cld
sahf
jno
cmp
cmp
sub
cltd
xchg
out
jb
mov
scas
xor
je
pop
fidivrs
cmp
inc
inc
cmp
rol
jno
pop
mov
xchg
push
jecxz
dec
xacquire
sti
jg
mov
mov
daa
js
fnsave
pusha
cs
pop
mov
repnz
cmpl
jp
mov
mov
push
cmpsl
cmp
ss
inc
scas
lahf
jbe
icebp
push
daa
cld
pushf
lea
dec
jl
dec
cmpsl
mov
rcrb
pop
sbb
jno
cmpsb
outsb
das
aas
adc
dec
imul
or
or
mov
mov
and
cmp
cmc
push
int
aaa
mov
dec
mov
stos
jg
cmp
mov
imul
out
out
jb
add
aam
pop
jp
sub
sbb
inc
ret
push
sub
push
movsl
fldcw
jne
adc
testl
xchg
pmuludq
mov
insb
loopne
mov
cmc
cmpsb
mov
int
imul
cmp
lret
rolb
rcrb
sti
jo
cmp
dec
sbb
and
push
jae
fsubp
out
dec
and
pop
adc
fs
stos
lods
fwait
test
std
adc
notl
cwtl
out
outsl
cltd
fs
xchg
pop
xor
rcrl
mov
mov
pop
outsb
ss
sbb
sbb
js
push
jecxz
mov
cmc
jmp
cmp
adc
addr16
xchg
test
jb
ljmp
pop
xchg
lds
inc
mov
and
sbb
lahf
jg
out
xchg
xorb
enter
inc
adc
add
mov
sub
mov
lock
sbbl
outsl
fcoml
pop
cmpsb
push
adc
adc
inc
mov
adc
push
or
inc
jg
ja
adc
jae
xlat
jg
jle
mov
insl
and
jbe
xchg
pop
adc
cmc
in
and
popl
and
call
out
adc
push
fistps
fwait
xor
jnp
mov
lret
jp
in
pop
xchg
dec
mov
and
add
xchg
data16
repz
pop
das
add
jp
push
loop
xchg
xorb
sub
movl
cmp
cmp
push
adc
out
into
and
cmpl
mov
sbb
cmpsl
jne
fdivl
jg
push
pop
mov
pusha
movl
add
lret
mov
xor
shll
cltd
bound
and
inc
mov
xchg
shrl
andb
out
std
test
xchg
xchg
imul
mov
int
mov
dec
xlat
sbb
mov
enter
leave
cmpsl
mov
bound
add
add
lret
mov
test
inc
aam
rcrb
adc
xchg
push
sti
movsl
test
test
lret
jns
sbb
filds
pusha
lahf
and
leave
and
jnp
lods
adc
in
push
stc
ffreep
sbb
negl
xchg
gs
adc
jae
loopne
int3
add
pop
mov
mov
int3
xlat
and
inc
rcr
xlat
cltd
push
je
aad
dec
jecxz
stos
cld
mulb
leave
xchg
in
ds
fs
sahf
jle
jb
inc
mov
pop
sbb
sub
or
jecxz
in
jecxz
aaa
rorl
adc
dec
pop
mov
jnp
push
ja
mov
inc
mov
xor
sti
fwait
mov
int3
outsl
leave
ret
mov
mov
mov
push
xchg
addr16
push
stc
sahf
scas
jns
insb
daa
cmpb
lods
ret
sbb
cli
aas
push
outsl
das
mov
mov
inc
addr16
loop
nop
imul
inc
ljmp
jo
mov
xchg
sahf
dec
push
negb
sahf
leave
fistpll
dec
dec
ds
lahf
ja
fsubl
sub
jne
in
das
sti
mov
xchg
xchg
aad
xor
lock
sub
dec
leave
mov
inc
ret
adc
xchg
int3
incb
jmp
mov
xchg
ja
js
cmp
add
and
ret
adc
not
pop
or
fistpl
fwait
outsl
push
loope
movsl
or
fs
lods
stos
cmp
xchg
or
sbb
imul
insb
cmp
mov
push
das
adc
xor
xchg
fwait
fwait
push
adc
popa
sbb
dec
inc
inc
out
and
mov
adc
xchg
xor
lahf
and
push
push
fnstsw
push
lock
fcompl
xor
dec
lret
mov
xchg
cmp
adc
xchg
test
add
sarl
cmpsb
dec
pop
scas
xor
mov
lods
fidivl
mov
pop
out
lea
test
xchg
fisttpl
xor
push
lods
pop
call
xor
push
add
mov
stos
pop
add
add
cmpb
fstpt
inc
inc
fucomi
adc
inc
mov
scas
jecxz
mov
decl
jp
dec
ja
xchg
outsb
push
mov
cld
add
aaa
sbb
repz
dec
or
xor
adc
shrl
in
lock
inc
inc
xchg
jb
fcoml
or
mov
cltd
bound
fsincos
nop
clc
xor
xchg
cmp
mov
js
int3
sarb
jp
or
cmp
mov
inc
sub
or
shll
aad
adc
sbb
arpl
add
nop
ja
mov
rcl
sarb
dec
xor
jns
inc
sbb
dec
adc
into
aaa
cld
push
lahf
out
mov
lock
ret
rorb
popf
push
adc
mov
rol
ret
dec
adc
pop
mov
push
mov
hlt
push
or
and
ret
jl
rcrl
jae
or
sub
sub
das
outsl
iret
xor
adc
shl
ljmp
pop
enter
enter
mov
leave
mov
adc
scas
xchg
repz
ret
mov
xchg
cli
out
lods
add
jo
jae
call
out
ret
pop
xchg
pop
lods
add
ljmp
pop
fdivrs
xchg
dec
pop
or
xor
or
cmp
add
fsubs
test
xchg
jge
lret
mov
pushf
sarb
adc
jbe
and
add
shlb
push
mov
mov
jge
pushf
jae
mov
negb
std
sub
or
mov
fldt
je
dec
mov
je
push
andl
shlb
int3
push
rol
lods
mov
pushf
mov
jbe
aam
jnp
pop
lahf
fldt
ret
add
loopne
push
xchg
test
adc
test
cmp
adc
aam
sar
fxch
movsb
or
test
in
dec
mov
jecxz
jae
fstpl
jle
fcomp
cs
xchg
sub
data16
arpl
scas
xchg
lret
push
out
inc
mov
sbb
mull
shl
rcrb
addr16
sbb
sbb
fcoms
mov
dec
cmp
in
push
and
jge
xlat
call
push
and
cmp
shlb
push
adc
dec
sbb
cmp
jmp
out
or
mov
mov
pop
call
mull
iret
aad
leave
test
es
lock
out
sbb
sbb
and
addr16
ljmp
adc
mov
insl
in
test
pusha
xor
lods
int3
dec
sahf
adc
lcall
shlb
jecxz
repz
loope
mov
sbb
mov
jge
mov
adc
dec
or
sub
sarl
repnz
and
adc
mov
cmp
scas
sahf
cmpsl
lock
and
cmp
push
or
push
ds
aas
mov
cmpsb
out
push
imul
les
adc
lods
cvtps2pi
sub
push
jecxz
xor
daa
fadd
dec
mov
decb
mov
ljmpw
mov
jmp
cwtl
js
mov
push
int3
std
ret
push
jbe
test
pop
or
add
inc
jecxz
push
pop
pop
enter
push
or
out
or
xor
mov
repz
outsb
scas
js
inc
ret
pop
xor
outsb
add
push
mov
sbb
adc
cmp
pop
push
dec
insb
iret
push
sub
and
mov
imul
pop
add
cmp
mov
ja
mov
aam
xor
xchg
mov
inc
sti
popa
lret
mov
lcall
repz
in
inc
xchg
cmp
imul
pop
and
push
xchg
jg
dec
inc
mov
and
push
cmp
xor
insb
fucom
gs
xor
lcall
mov
push
fidivs
rorb
and
cmp
push
outsb
stos
dec
aaa
xchg
jne
std
rorb
or
mov
mov
pop
stos
popl
xor
ret
lahf
int3
cmp
ret
fisubs
pop
pop
mov
add
std
jg
dec
rorl
das
jecxz
in
ljmp
adc
bound
call
lea
sahf
imul
lds
adc
cli
sbb
mov
cmpsl
test
shrl
into
ds
pop
and
jg
mov
div
out
inc
je
neg
mov
arpl
cmp
xor
popf
xor
sub
ret
mov
imul
sti
jecxz
push
ljmp
imul
fdivl
dec
or
call
pusha
push
gs
add
xor
stc
test
hlt
xchg
repz
mov
sbb
push
push
fmull
in
test
add
daa
inc
and
push
push
xor
inc
cmp
push
adc
lahf
mov
xor
gs
sbb
sub
sub
loop
mov
and
loopne
or
mov
sub
jecxz
insb
fildl
and
negb
push
mov
adc
inc
cmp
cmp
mov
and
mov
jecxz
sbb
inc
sub
xlat
call
mov
mov
pusha
lcall
push
les
outsb
or
jbe
incl
cs
cltd
inc
mov
push
xor
fld
les
pop
xchg
out
adc
push
fdiv
xchg
add
int
jnp
icebp
pusha
mov
movsb
cmp
arpl
push
xor
xchg
dec
mov
outsb
outsl
cmp
imull
cmp
divb
cli
push
insb
xor
clc
pop
clc
aam
mov
pop
sbb
pusha
in
dec
outsb
sbb
hlt
push
lods
iret
xchg
adcl
inc
mov
test
andl
pop
xchg
sbb
mov
push
xchg
adc
stos
jb
mulb
cld
outsb
jl
xor
and
push
lods
adc
jno
push
push
xchg
nop
push
loopne
ljmp
mov
inc
mov
dec
repnz
sbb
sub
cli
pop
fildl
push
push
aaa
push
pop
sahf
repz
mov
movsb
push
stos
mov
ja
aam
push
movl
bound
int
jb
es
inc
mov
call
rcrl
xor
subl
mov
notl
jne
pop
push
adc
dec
test
xor
imul
cmp
lcall
cmp
inc
out
pop
cmpsl
add
jmp
push
adc
fadds
imul
mov
inc
mov
imul
insb
mov
jnp
jge
je
mov
xchg
arpl
mov
cld
les
inc
inc
adc
and
push
add
and
fisttpll
clc
or
insb
adc
repnz
addl
jl
hlt
dec
nop
pop
mov
pop
or
and
and
mov
imul
add
inc
add
les
ljmp
cli
daa
and
fcomip
add
sti
cmp
out
mov
cmp
out
dec
stos
dec
out
or
pop
cwtl
dec
inc
add
xchg
lea
adc
sbb
sbb
or
ret
cmp
lret
sahf
sub
fs
insl
aaa
imul
int3
lea
rcrl
int3
outsl
xorl
aaa
pop
and
out
sbb
and
xor
mov
sbb
sub
aad
pop
pusha
es
jg
lcall
scas
aas
cmp
clc
movsb
mov
jg
xchg
inc
pop
inc
mov
jmp
aaa
ret
cmp
push
mov
dec
adc
xchg
cmpsl
pushf
sbb
xchg
aam
ffree
das
xor
je
xor
inc
dec
scas
divl
and
jecxz
push
mov
negb
jnp
mov
sbb
repz
or
mov
pushf
lock
ds
sbb
adc
pop
and
jecxz
nop
sbb
test
hlt
out
jmp
or
mov
inc
pop
popf
mov
jo
fwait
notb
inc
cld
loopne
hlt
cmp
js
push
xchg
pop
subb
mov
repnz
insb
xchg
aad
incl
ja
jae
or
mov
mov
cli
add
inc
jb
push
jp
repz
and
mov
inc
jmp
rcll
cltd
in
push
push
sub
lods
ret
enter
or
test
adc
pop
lods
inc
jbe
dec
rol
idiv
cmp
mov
jecxz
inc
adc
orl
pop
loope
notb
jle
and
test
inc
jge
rcll
ds
nop
in
mov
sub
mov
mov
xor
ss
or
in
push
xor
popf
mov
into
ret
adc
js
mov
and
inc
mov
add
gs
bound
dec
mov
loop
in
mov
fcmovu
andl
test
cmp
int3
je
sub
stos
mov
jge,pt
repz
lods
push
push
push
lcall
out
in
pop
stc
mov
int
dec
pop
dec
lods
adc
cs
xchg
dec
add
mov
cmpb
scas
adc
cwtl
neg
lcall
imul
mov
cmpsl
imul
inc
or
pop
add
mov
push
jge
mov
jne
cld
fs
hlt
dec
pop
mov
jne
add
loope
or
push
lret
mov
aad
push
mov
sub
adc
negb
fnstenv
movsl
jl
or
sub
test
xor
sbb
mov
push
fdivs
lret
pop
cmpsb
mov
lcall
js
push
push
dec
mov
repz
adc
arpl
cmp
icebp
nop
or
lea
enter
daa
jns
pop
repnz
cmp
shrl
dec
lahf
in
fcoms
cs
mov
in
shl
cltd
dec
loopne
dec
jne
pop
xor
cwtl
pop
mov
and
sub
push
sbb
and
jle
jmp
out
popa
ficomps
pop
std
lahf
repnz
iret
outsb
xchg
in
mov
mov
outsl
mov
ds
dec
scas
inc
sbb
or
int
ds
mov
push
add
jle
push
mov
movsl
in
jne
add
sbb
sbb
mov
fisttps
pop
push
clc
lods
pop
flds
cmp
in
jne
push
jle
mov
xor
jb
mov
jecxz
sub
scas
ret
jle
imul
out
sbb
ljmp
push
xchg
mov
int3
adc
xor
gs
imul
jg
xchg
std
sbb
add
sbbl
mov
js
lds
sub
repz
jg
aad
shrb
sti
add
hlt
pop
inc
push
cmp
inc
test
xchg
push
int
in
scas
imul
dec
lret
pop
ja
repnz
or
sarb
aas
loope
add
in
decb
shrl
or
or
adcl
push
stos
aam
fiaddl
out
xor
stos
repz
ret
xchg
add
cli
repnz
int3
mulb
stos
dec
les
mov
lods
mov
sbb
push
xor
pop
adc
ret
lcall
out
jno
call
lea
jae
ljmp
or
or
dec
mov
xor
jp
repnz
hlt
cmpsb
pop
xchg
out
arpl
xchg
adc
nop
rcrb
test
lea
push
nop
inc
mull
xchg
push
push
stos
cltd
ret
iret
ret
add
dec
mov
in
mov
lret
mov
cmp
cmp
pop
dec
clc
inc
mov
fisubl
jecxz
push
test
jecxz
inc
call
aaa
in
hlt
sahf
loope
pop
mov
cli
or
or
push
push
out
add
cmp
testb
mov
pop
push
ds
cwtl
mov
dec
gs
incl
add
jp
push
cmpsb
xchg
mul
dec
xor
and
jbe
push
lret
pop
dec
stos
test
out
lcall
pop
flds
insb
adc
andl
xchg
lcall
mov
dec
dec
std
fs
scas
dec
les
or
and
cmp
leave
cmp
dec
sub
addr16
lock
adc
stos
pop
cli
xor
sahf
maskmovq
mull
mov
jns
cltd
lods
lods
mov
stos
in
cmp
inc
pop
pop
loop
xchg
fnstenv
add
out
mov
in
adc
fxam
sbb
adc
xor
imul
gs
call
mov
movsb
outsl
popf
scas
dec
cli
inc
jb
imul
add
data16
sub
push
cmc
nop
mov
popa
and
rcrb
pop
hlt
gs
xor
xor
popf
cmp
jne
fwait
inc
xorb
adc
sarb
cmp
je
scas
popf
addr16
cmp
xor
pop
mov
adc
in
or
out
std
mov
in
cs
pop
sbb
xchg
cmp
test
js
ret
sub
cmc
fucom
imul
mov
lock
leave
sbb
mov
sbb
ret
cmp
push
movsl
lahf
cmp
test
cmp
mov
lahf
shll
xchg
fcoms
mov
orb
pop
mov
out
aas
scas
pop
jne
pop
dec
std
insb
mov
shl
in
stc
add
or
iret
mov
mov
lret
ret
pushf
mov
je
ret
push
in
aas
add
xchg
push
ffreep
jne
jo
mov
push
aas
xor
mov
xchg
cmpsl
mov
add
repz
mov
sub
cli
js
push
cmp
jg
out
cli
adc
sub
sub
repnz
cwtl
inc
jb
sbb
xlat
sbb
jle
dec
push
outsl
and
leave
outsl
mov
cmp
pop
rol
mov
jle
mov
dec
xor
mov
and
jecxz
inc
add
and
sbb
dec
shr
add
mov
xlat
cs
dec
push
cltd
jo,pn
or
repz
out
adc
add
cmp
cwtl
mov
scas
and
jo
add
clc
aam
and
lret
repnz
outsb
adc
jg
inc
adc
jecxz
cmp
pop
jmp
call
sbb
cmpb
sbb
mov
lock
xchg
push
test
push
sti
jmp
add
sarl
pop
sbb
pop
in
ret
dec
pop
cltd
and
jo
sbb
adc
fs
add
dec
sbb
sahf
inc
je
push
push
outsb
out
cltd
adcb
gs
scas
outsl
mov
sub
outsb
mov
and
shlb
xchg
mov
inc
sahf
mov
or
jmp
adc
scas
imull
or
lret
dec
adc
mov
cmc
pop
dec
js
jbe
mov
cmpsl
mov
call
push
jno
or
jecxz
jno
xor
and
arpl
test
mov
inc
push
shrb
xor
mov
dec
push
mov
clc
cmp
daa
mov
enter
cwtl
fidivrl
repz
pop
mov
pop
push
sbb
push
sub
call
sbb
loop
test
cwtl
rcrl
push
dec
sub
roll
mov
sbb
push
btsl
hlt
icebp
push
enter
jns
jns
popf
mov
pop
outsl
inc
insl
ja
jne
incl
roll
dec
je
mov
out
xchg
inc
in
jmp
cmpsb
inc
div
push
jle
cmpsl
push
fdivr
clc
in
rcrb
dec
jge
pop
sub
xchg
mov
je
sub
scas
mulb
out
dec
pop
into
dec
int
add
movsl
dec
dec
leave
add
mov
in
leave
add
sbb
sbb
rorb
push
pop
sub
jne
mov
xor
xchg
aam
xchg
testl
xchg
jae
xor
lret
mov
jb
pop
sub
ds
shrb
mov
dec
xchg
cmc
sahf
cmp
pop
jle
dec
mov
mov
loopne
xor
leave
sbb
js
jbe
pop
mov
test
xchg
testl
and
test
gs
test
jbe
ret
adc
loopw
fstp
jae
pushf
in
adc
or
sbb
test
mov
adc
xchg
movsb
icebp
xchg
inc
pop
push
pop
add
testb
fs
pop
std
jl
shl
dec
jb
fistpll
out
cwtl
mov
test
repz
jle
repnz
xlat
cli
insb
mov
out
pop
sbb
jns
pop
cmp
or
jmp
xchg
cmpsb
das
int3
xchg
ss
out
xchg
iret
lock
mov
sar
mov
testl
or
incl
mov
pop
mov
push
sbb
sbb
lret
sahf
sub
push
stc
xlat
dec
jp
leave
dec
into
xor
ror
rclb
jb
scas
in
into
or
aad
aaa
push
pop
mov
jno
cmp
push
pop
pop
ret
hlt
xchg
in
ret
xchg
push
xor
adc
sub
sbb
push
sbb
mov
bound
cmpsl
insl
in
pop
mov
push
shl
lcall
out
mov
data16
mov
clc
bound
jg
xor
enter
lods
cmp
add
and
popl
movsl
mov
pusha
mov
pop
imul
enter
es
decb
popa
fstpt
add
dec
mov
inc
fidivrs
inc
mov
pop
repnz
in
xchg
hlt
inc
add
fwait
bound
xlat
mov
inc
jbe
push
test
push
jno
sbb
pusha
pop
mov
jl
and
sub
jge
rclb
ljmp
xchg
push
sbb
jg
sti
mov
push
sbb
pop
mov
add
pop
cmpsb
outsb
daa
xor
cs
ds
sar
outsl
loope
aas
mov
inc
icebp
in
mov
jo
sbb
jle
pop
mov
cwtl
cltd
sub
sbb
scas
pop
or
dec
mov
pop
out
lret
dec
mov
mov
dec
pop
sub
std
xor
push
divb
add
mov
aaa
adc
pop
imul
inc
sub
test
add
int
mov
sub
push
rcrb
xor
loope
jo
lds
sbb
in
jle
sub
xchg
sti
add
daa
jmp
jae
inc
pop
add
and
stos
dec
dec
out
cltd
jnp
adc
aad
test
push
enter
inc
out
ror
jno
bound
mov
mov
adcb
adc
in
imul
cmpb
sub
lock
call
into
lret
xor
add
xchg
jge
jge
push
int3
adcl
push
mov
push
into
mov
inc
pop
mov
andl
addr16
pop
ljmp
int
movsb
pop
out
jo
ret
jne
push
pop
xchg
or
fcom
lods
mov
dec
cmp
cmp
and
inc
sbb
xor
xorb
inc
add
inc
mov
fst
test
xchg
push
movsb
out
in
shrb
adcl
stc
cmp
inc
fs
out
sti
mov
inc
pushf
xchg
push
sub
mov
movlps
sub
adc
lcall
addl
mov
pushf
cli
popa
js
cmpsb
daa
mov
imul
push
mov
test
aad
test
jb
sarb
inc
push
hlt
dec
pop
adc
divb
xchg
inc
lods
cmp
imul
mov
adc
xor
clc
rcrb
cmp
fisubrl
or
add
jmp
addr16
and
xor
in
in
or
and
aad
push
mov
add
cld
or
pop
push
movsb
sub
sbb
mov
and
add
into
ja
movsl
pop
or
cmpsl
dec
mov
std
jge
idivb
sarl
mov
scas
daa
sbb
and
sub
in
out
addl
in
imul
aam
inc
mov
mov
faddl
cmp
jp
xor
xor
sbb
loop,pt
cs
ficomps
push
inc
test
xchg
add
push
js
jno
imul
sub
mov
data16
shlb
sub
in
fsubrp
add
gs
adc
jmp
push
cltd
xchg
push
mov
sub
lret
div
and
leave
cmp
pop
dec
jae
ds
mov
jge
int
test
mov
sahf
mov
aaa
sbb
or
rolb
sub
push
and
pushf
push
dec
xchg
push
mov
insb
repz
pop
pop
xor
test
fldt
roll
dec
dec
xor
cmc
mov
rcrb
fistl
add
pop
dec
jno
or
cmp
xlat
fidivrl
cltd
push
adc
jmp
es
inc
push
leave
stos
pop
inc
xchg
pop
push
and
int3
add
ret
pop
dec
mov
push
test
push
mov
aad
fcoml
gs
jg
cmpsb
jle
mov
xchg
xor
push
pop
pop
mov
sbb
shll
loop
mov
push
xor
mov
push
mov
dec
bound
inc
add
fcomp
lcall
cmp
data16
mov
adc
js
inc
xchg
lds
nop
cmpsl
les
jp
pop
jl
push
mov
jo
push
mov
popf
js
shlb
jae
dec
in
mov
repz
cmp
xchg
movsb
add
xchg
cmp
addb
loop
pop
inc
int
mov
cmpsb
mov
push
stos
pop
mov
jle
pop
notl
jecxz
adc
cli
out
stos
mov
stos
in
xor
sbb
push
mov
add
pop
std
jg
jl
int3
cmpsl
push
sub
or
idivl
ficoms
mov
sub
pop
sbb
add
jbe
cmp
push
mov
int
cmp
js
xchg
jns
inc
or
mov
clc
xlat
pop
test
or
pop
jl
mov
push
sub
andl
mov
cli
sub
inc
imul
and
xchg
push
mov
adc
mov
pop
push
shrb
cmp
pop
push
xchg
pushl
push
jg
mov
cmp
jne
clc
or
sarb
jmp
ds
cpuid
xchg
clc
lea
cltd
add
push
inc
outsb
or
jecxz
xchg
jno
lcall
popa
mov
lcall
or
and
rol
nop
xchg
data16
stc
xchg
xchg
xchg
xor
fucomip
add
lcall
jmp
pop
cmp
cmpsl
mov
inc
stos
leave
fnsave
popa
xor
push
scas
std
sub
lret
jle
ficoml
jbe
xchg
mov
bound
jo
test
jecxz
imul
sub
pop
lods
cmp
push
fs
ret
les
shrd
sti
les
arpl
jl
divl
enter
cmp
inc
or
test
mov
mov
popa
nop
cmp
adc
sbb
das
hlt
scas
xchg
jne
outsl
test
leave
and
pop
add
jmp
mov
pop
enter
es
pop
xor
dec
mov
imul
dec
jge
sbb
push
adc
dec
repz
fs
enter
sbb
dec
sbb
dec
xlat
imul
push
add
test
and
mul
cmp
push
lcall
mov
inc
cld
dec
aam
mov
push
push
mov
hlt
sbb
xchg
sub
test
fs
cmc
hlt
cwtl
das
test
mov
mov
sbb
out
dec
imul
je
bound
push
xor
popa
insl
cmp
and
cmp
stos
mov
cmp
ss
dec
call
pop
movsl
divb
fdivr
push
jg
and
pop
mov
mov
dec
popf
clc
cltd
sub
in
ja
icebp
jnp
sbb
lods
into
xlat
out
mov
data16
sub
and
sbb
je
sar
sbb
mov
iret
lahf
pop
jge
sti
mov
jmp
pop
and
bound
jnp
sbb
data16
fstl
fisubrs
mov
sub
jo
aam
jo
rcl
xor
and
divl
sbbb
data16
aas
iret
neg
jmp
repnz
adc
mov
in
movsl
add
out
adc
mov
add
outsl
roll
mov
sahf
aaa
mov
dec
xchg
push
das
das
xor
cmp
rcl
dec
outsb
xchg
stos
imul
imul
cmp
or
pop
movq
mov
inc
mov
add
sbb
sbb
repnz
addr16
jl
out
scas
je
in
out
add
loop
lahf
xchg
inc
cwtl
mov
ljmp
dec
sub
adc
xchg
enter
mov
test
stos
rorl
and
mov
mov
add
aas
mov
or
xchg
popf
lods
test
sbb
jge
and
mov
jno
inc
dec
lret
shlb
lods
and
std
adc
lret
sub
dec
jp
enter
sbb
pushf
into
lods
sbb
mov
pop
sbb
mov
xor
cli
push
cmp
subb
sbb
xor
lahf
pusha
fnstenv
pop
xchg
jmp
xchg
loopne
outsl
lahf
mov
add
mov
sbb
and
jg
repz
lret
push
movsb
pop
subb
xchg
push
les
cmp
push
sub
mov
mov
mov
and
xorb
pop
inc
sti
mov
shll
pop
mov
aam
roll
cmpsl
jae
mov
outsl
mov
stc
pop
mov
aam
ss
mov
or
mov
adc
mov
cmp
inc
into
std
imul
sbb
outsl
repnz
inc
mov
sub
mov
xor
pop
pop
cmp
scas
imul
dec
jge
addr16
inc
fbstp
gs
adc
jmp
fsubl
aas
lods
pop
mov
pop
dec
mov
cmpl
xlat
jns
mov
roll
cmp
lret
out
subb
sub
sbb
lods
aam
push
sbb
add
loope
jns
and
xor
and
and
mov
jmp
sub
je
xchg
inc
fld
mov
adc
in
push
lea
test
push
call
aaa
test
int
lea
sbb
dec
and
cltd
push
fldt
cs
dec
push
movsb
out
cli
mov
lahf
xor
fadds
fucompp
mov
push
stos
sbb
jne
fs
xor
push
push
andl
pop
into
ss
or
sti
sbb
pop
sub
cmc
xor
push
insb
int3
inc
inc
int
mov
xor
inc
push
testb
jg
mov
or
lds
sti
ljmp
shlb
sub
insb
ret
bound
std
sbb
push
lds
jmp
sub
int3
push
sub
sub
cld
int3
scas
test
jmp
push
jmp
mov
fwait
and
cmp
jg
pop
les
jp
inc
stos
lcall
inc
in
adc
sti
or
inc
js
sub
jnp
iret
sub
stos
inc
cwtl
xchg
leave
mov
scas
pop
sub
cltd
mov
fcmove
sub
fsubs
jmp
test
outsb
or
push
fwait
mov
cs
jge
cmpsb
inc
enter
imul
movsl
aas
xor
or
cltd
pop
aam
mov
jmp
cmpsb
rclb
mov
xchg
sub
and
cli
cmp
pop
mov
leave
sahf
daa
and
push
xor
adc
jecxz
rcrb
push
xchg
shufps
inc
test
pop
or
sti
mov
or
in
shl
mov
pop
neg
add
sub
sub
add
pop
popf
mul
shrl
inc
les
ss
pop
bound
push
jo
inc
ja
mov
push
push
leave
and
scas
inc
push
aam
cmp
and
inc
cmp
mov
cltd
push
add
mov
pop
fsubr
mov
sti
pop
mov
and
add
icebp
pop
mov
dec
pop
jo
in
cld
add
inc
dec
inc
sub
hlt
ss
mov
cmp
adc
out
mov
repz
lea
push
cmp
aam
fstpt
mov
shll
loop
ljmp
dec
inc
popf
fwait
push
pop
mov
xlat
push
push
iret
in
ds
lret
pop
mov
insl
push
movsb
lods
fmuls
dec
sub
mov
jo
call
addr16
push
aas
out
test
daa
fdiv
lret
ds
cmpsb
ljmp
push
lahf
insb
sub
mov
mov
mov
loop
adc
push
sahf
arpl
int
dec
adc
stc
fnstsw
hlt
loop
adc
out
and
jge
push
in
sahf
push
jl
jecxz
hlt
jnp
mov
sub
rolb
addr16
lahf
arpl
icebp
add
jg
aas
xor
push
std
aam
test
movsb
add
test
cwtl
jmp
sub
test
push
sub
add
cltd
cmpsw
scas
aad
and
or
imul
scas
cmp
sbb
fnsave
push
push
test
xchg
or
dec
push
add
push
jbe
loope
ret
je
es
pop
sub
cwtl
lcall
lds
inc
repnz
das
fsts
imul
push
fs
icebp
fdivs
jb
mov
pop
xlat
cmpl
data16
mov
je
jmp
xor
lods
mov
pop
imulb
cs
jp
or
adc
mov
cmc
push
push
and
mov
lods
mov
push
call
xchg
int
in
lret
xchg
lea
xor
cmc
jmp
inc
jmp
or
sahf
or
and
jl
imul
xchg
and
hlt
dec
push
jbe
push
pop
and
add
or
or
data16
movb
test
mov
xor
cltd
mov
mov
mov
stos
and
mov
inc
dec
pushl
cmpsb
scas
jmp
mov
mov
lret
mov
loop
sbbb
mov
andb
inc
addl
popa
add
dec
xorl
push
jg
lahf
pop
push
pop
pop
test
ss
outsb
faddl
dec
inc
mov
sub
and
jge
mov
push
sub
inc
lcall
inc
mov
pop
cmp
shl
std
nop
repz
out
dec
add
adc
cmp
inc
xor
nop
dec
orl
sub
adc
fldl
dec
push
jne
jb
pop
stos
mov
jbe
push
adc
add
xor
shrl
mov
push
ljmp
push
lret
adc
int3
cmp
and
push
mov
sub
pop
pop
imul
push
repz
inc
pop
aaa
ljmp
and
pop
dec
repnz
out
xchg
aam
mov
xchg
in
sbb
pop
ret
jl
data16
imul
jp
jg
mov
or
pop
sbbl
pushf
ljmp
ret
in
inc
out
fadd
sbb
lea
aad
repz
mov
dec
bound
xor
mov
and
sub
in
popf
lds
in
xlat
std
inc
subb
in
jmp
fldt
adc
rcrb
push
enter
shll
jns
adc
lahf
std
dec
sbb
sub
out
mov
and
jmp
adc
int3
inc
mov
cwtl
orl
sbb
inc
stos
inc
cwtl
jp
pop
or
imul
out
insl
in
aas
cmpsl
aad
icebp
popa
xor
in
inc
sarl
mov
pop
aaa
jne
or
mov
xchg
repz
aas
xlat
dec
dec
mov
push
and
inc
or
iret
inc
jecxz
pop
mov
and
xchg
pop
out
xchg
jb
push
cmp
fdivrs
out
movsb
add
or
loope
pop
push
cltd
dec
iret
clc
daa
cmp
push
fistps
test
cmp
sbb
or
push
xchg
ja
dec
sbb
ja
xchg
call
mov
sti
push
push
push
and
mov
jae
outsb
nop
jle
push
cld
in
test
jb
sub
mov
mov
inc
idivb
mov
dec
in
mov
icebp
mul
repnz
dec
push
or
aam
int
sub
push
inc
adc
dec
loop
pop
inc
jnp
cmc
push
xchg
test
adc
stos
mov
jle
scas
hlt
pop
jecxz
negl
loopne
js
shlb
sahf
mov
fcoml
int3
out
shll
push
in
adc
loop
enter
lret
fisttpl
notl
cld
jne
push
sbbb
mov
add
mov
pop
mov
mov
jb
mov
adc
ljmp
movsb
bound
dec
and
les
mov
or
push
in
cmpsl
js
mov
sbb
stos
clc
fs
cmc
push
scas
jb
scas
mov
sbb
cld
mov
movsb
in
inc
sbb
jns
and
jnp
mov
outsl
fisubrl
ds
cwtl
mov
iret
mov
adc
fimull
negl
lahf
sub
push
int
add
pushf
push
pop
iret
call
lea
pusha
mov
cmp
in
ljmp
imul
mov
loope
xor
pusha
jns
jo
ljmp
dec
repnz
adc
jae
add
out
xchg
stos
fucomp
shll
mov
cld
rcrl
stc
dec
clc
es
xchg
fists
je
and
mov
gs
cmpsl
jne
lods
and
mov
cmp
and
fcompl
pop
dec
adc
shr
loope
xor
or
sub
jecxz
pop
dec
mov
add
jne
inc
popa
sbb
pop
cmp
lock
mov
xor
jne
pop
scas
xchg
mov
and
mov
lods
jnp
lea
inc
xchg
jmp
movsl
dec
push
lods
cs
pop
xchg
lock
rcll
sub
nop
mov
or
out
loope
lret
hlt
lds
data16
scas
das
repnz
daa
ret
in
movsb
imul
jae
xor
clc
out
push
test
add
fstps
repz
aaa
sub
or
daa
les
mov
mov
jno
adc
bound
imul
push
ljmp
push
into
adcl
imul
addr16
push
pop
cli
and
loopne
stos
or
push
idivb
hlt
push
jg
aas
loop
pop
sahf
sbb
je
sub
je
push
addr16
testb
leave
jb
sarl
pop
sbb
test
imul
inc
xchg
xchg
dec
js
call
sbb
repnz
mov
stos
and
lods
jge
adc
mov
cmpsl
adc
lcall
mov
mov
sbb
in
dec
dec
movsl
clc
insb
test
and
test
out
mov
mov
pop
cltd
rcrl
jle
or
push
cmp
les
test
mov
or
sbb
icebp
adc
sub
arpl
xchg
frstor
and
sbb
pop
dec
add
call
nop
mov
sti
inc
insl
xor
sbb
arpl
cwtl
arpl
jle
or
mov
inc
jg
add
outsl
adc
je
pop
add
mov
cltd
mov
mov
and
icebp
outsl
cltd
pop
add
push
mov
or
mov
negl
jb
pop
lods
inc
aaa
cmc
add
cmp
xor
shl
in
jp
lret
push
pop
push
and
cmp
jge
icebp
pop
mov
lret
adc
popa
enter
xchg
inc
dec
divb
and
hlt
shrb
mov
imul
sbb
jmp
sub
pop
xchg
sbb
sar
andb
and
sub
outsl
in
ljmp
or
shll
fcompl
mov
ret
nop
mov
inc
sub
push
lods
stos
bound
add
xchg
xchg
cmp
out
lock
mov
sub
inc
and
outsl
aad
lret
test
imul
mov
push
mov
cmp
sub
popf
sbb
fldl
shrl
repz
adc
bound
cli
mov
out
aaa
mov
fistps
push
movsb
ret
jb
pop
scas
mov
mov
rcr
rcll
and
mov
mov
daa
movsb
notrack
dec
sub
and
in
xchg
push
push
sti
pop
scas
repnz
push
in
dec
les
jge
mov
push
mov
cltd
push
cmp
cli
xor
cmc
add
sub
ljmp
rolb
popf
fyl2x
lds
inc
mov
je
cmpsb
push
cmc
mov
xor
jo
push
mov
inc
imul
xor
dec
int3
inc
pushf
jae
cs
and
test
and
or
ret
push
cld
push
fdivr
shll
hlt
test
sti
repnz
rcrb
movsb
ror
ss
pop
jl
cmp
sahf
data16
shl
pop
cli
inc
jmp
pop
and
nop
mov
or
popf
cmp
addr16
adc
pop
imul
sub
les
fists
mov
sbb
and
ss
cmp
sbb
fsubrs
add
call
inc
enter
cmp
insb
pop
shrb
jno
repz
je
jb
xlat
push
lock
jecxz
jbe
inc
push
xchg
js
frstor
test
shl
xchg
mov
mov
dec
xor
pop
sub
xchg
test
mov
in
dec
sub
push
push
js
cld
add
pop
pop
or
pop
cmp
push
push
fsubrs
pop
cmc
add
fxch
or
push
aam
sti
ds
mov
les
sar
sbb
or
xchg
mov
jmp
push
nop
fwait
push
fwait
sbb
add
sbb
dec
std
fnop
repnz
lret
mov
push
mov
xchg
loope
fadd
iret
mov
mov
bt
add
cmpsl
jmp
pop
popf
out
push
push
aas
jae
rcrb
pop
mov
cli
mov
pop
push
rclb
inc
outsl
xor
pusha
push
aaa
aaa
loopne
xor
mov
xor
cmp
das
rcll
mov
xor
xor
jnp
loope
mov
and
xor
icebp
push
jp
and
lcall
hlt
pusha
outsl
cld
cmp
out
test
shll
add
jo
inc
and
sbb
jns
repz
dec
xchg
gs
mov
push
lds
or
dec
mov
dec
in
mov
imul
xor
cmp
cmp
popf
call
jb
push
xchg
xchg
lret
xor
lcall
cli
inc
mov
cmpb
xchg
mov
sarb
roll
inc
int3
or
ljmp
cmc
adc
jo
pop
jae
mov
in
and
pop
adc
aam
xor
pop
add
mov
adc
xchg
aas
push
inc
cltd
dec
shrb
xchg
in
rcrb
imul
call
mov
sbb
xchg
call
dec
push
push
sub
adc
push
adc
gs
addb
sbb
adc
jmp
inc
cmpsl
adc
jb
imul
repnz
stos
stos
arpl
jno
jbe
mov
ss
cld
subb
add
pop
adc
ss
icebp
mov
imull
add
adc
dec
movsb
leave
movsb
imul
sub
jge
xor
push
outsl
dec
hlt
pusha
test
out
insb
pop
scas
mov
cltd
sbb
xor
adc
sbb
ja
lahf
cld
cld
push
std
cmp
sahf
mov
cmc
lods
jbe
fnsave
test
inc
push
mov
sub
push
dec
dec
sbb
daa
je
fildll
dec
push
and
int
repnz
subl
add
insl
test
loopne
ret
push
imul
rcr
ret
pop
add
or
or
add
dec
and
pusha
mov
mov
and
fistl
inc
xor
cmp
testb
mov
mov
test
mov
sarb
repnz
cmc
jmp
clc
xchg
mov
sub
xor
loopne
jae
subl
push
add
or
xchg
xor
xchg
jle
jns
and
pop
adc
cwtl
or
mov
in
insl
imul
out
jle
arpl
xchg
or
notl
jmp
lea
and
stos
outsl
scas
cmp
pop
cmp
data16
insl
xchg
adc
ljmp
stos
in
cmpsl
sbb
call
adcb
popf
inc
fld
stos
mov
jne
mov
mov
inc
hlt
push
fwait
cmp
cmpsl
pop
hlt
jmp
pop
xor
mov
test
call
cli
pop
aam
cmp
movzbl
jbe,pn
mov
pop
pminsw
lods
push
xchg
mov
mov
in
dec
cmp
div
mov
cmp
jbe
mov
aad
popa
stos
cli
xor
lahf
rcrl
xchg
leave
cltd
xor
std
mov
es
xchg
push
mov
adc
shrb
stos
js
in
imul
repz
cmp
cltd
push
and
cmp
mov
push
rorl
sbb
pop
jae
popa
sub
pop
push
daa
fisubs
jb
xchg
cmp
sbb
dec
mov
leave
inc
sti
mov
push
mov
adc
fstps
rolb
jnp
mov
push
test
bound
or
push
mov
cmp
mov
aas
jp
insb
push
mov
xchg
sbb
mov
int
push
das
cmpsb
aam
aad
ds
lahf
ljmp
xlat
and
push
sub
test
lock
and
fisttps
ret
sbb
sbb
cmpb
cmp
jmp
push
fsubl
dec
inc
xchg
dec
aam
cmpb
ret
inc
ret
and
dec
pop
jae
mov
pop
mov
bound
das
pop
xchg
push
xor
addr16
psrlw
sub
push
loop
loop
ja
mov
bound
mov
sbb
pop
mov
cld
jae
out
xor
inc
inc
das
mov
and
lds
es
xchg
icebp
mov
test
xor
call
xlat
std
pop
in
push
cltd
mov
jo
mov
pop
sti
iret
or
pop
adc
icebp
mov
adc
push
dec
mov
xor
xchg
push
fldl
xor
dec
xor
or
sub
sbb
mov
arpl
or
inc
xchg
loop
push
lea
push
aas
cli
sti
mov
cmp
jecxz
in
adcb
icebp
dec
cmp
inc
std
arpl
push
and
mov
cmp
adc
mov
outsb
push
or
jge
cld
xchg
roll
das
xchg
mov
int
jno
insb
inc
jnp
push
adc
out
stos
insl
inc
push
inc
dec
push
add
or
adc
or
mov
bound
xchg
outsb
sbb
sbb
gs
dec
mov
fcmovnbe
xchg
mov
lret
jae
mov
jmp
jecxz
mov
stc
cli
fcmovb
dec
fsts
movsl
inc
aad
stc
shr
or
in
push
mov
daa
xchg
or
je
add
das
xor
push
xchg
in
pop
stos
or
pop
pop
push
mov
jge
or
or
fnstenv
leave
xor
cmp
xlat
fistpll
mov
shl
xorl
jmp
test
xor
mov
or
adc
subl
lret
adc
popw
popa
ja
out
hlt
movsl
sbb
add
and
or
sbb
inc
fists
test
jae
ret
ds
enter
mov
popf
fwait
stos
je
sti
rorl
jae
in
fsubs
mov
xor
iret
jmp
xchg
std
lahf
or
les
ret
lret
ret
adc
pop
flds
stos
rolb
fwait
cwtl
mov
adc
add
dec
push
inc
and
push
inc
pop
dec
xchg
fistps
xchg
or
pop
sbb
jne
imul
sbb
xchg
loopne
pop
xor
sbb
cwtl
sbb
pop
addr16
outsl
stos
xlat
adc
xchg
cmp
xchg
xor
mov
push
mov
fists
adc
mov
pop
xchg
out
inc
nop
cmpsb
dec
shrb
cs
aam
outsl
bound
mov
lods
shrl
lret
mov
lret
jg
int
inc
xchg
and
push
or
iret
jge
rclb
mov
mov
cli
push
or
xor
lcall
mov
jl
out
out
mov
inc
add
mov
jno
mov
call
push
pop
ljmp
int
hlt
dec
int
jge
repz
pop
pop
loope
add
outsb
dec
out
rclb
lret
xor
mov
arpl
push
lahf
adc
or
imul
insl
dec
pop
xchg
mov
shlb
ds
xor
and
lahf
lret
cmpsl
sub
rorb
dec
inc
mov
add
adc
rol
repnz
xchg
in
sti
pop
or
movsl
call
repnz
pop
movsl
popf
clc
sub
and
fisubl
sahf
pushf
jae
pop
dec
gs
mov
pop
out
lock
ret
pusha
cs
xor
popf
lcall
and
xchg
add
std
and
inc
clc
mov
mov
addr16
dec
inc
xchg
fcomps
dec
mov
data16
cmp
sahf
pushl
pop
pslld
sbb
je
xor
push
mov
rcr
and
je
mov
push
div
rol
es
shlb
sub
out
rcr
push
std
push
fistpl
dec
jle
xor
mov
int
repz
icebp
or
mov
cmc
inc
mov
adc
in
adc
test
mov
mov
add
test
enter
push
mov
xor
add
and
sbb
mov
imul
or
and
pop
fimull
or
es
cmp
gs
dec
jb
cmp
xchg
cmp
test
inc
int3
incb
mov
bound
js
cmp
scas
push
add
outsb
fbstp
xchg
fdivp
sub
cmpsb
inc
adcl
sub
and
sub
sbb
loop
cwtl
mov
leave
lahf
xchg
xor
cmpsb
sbb
or
and
test
mov
xor
adc
sbb
lahf
mov
sbb
inc
jnp
outsb
jae
imul
pop
add
rcr
sbb
jecxz
xlat
enter
adc
cmp
cltd
or
dec
or
pusha
sub
jmp
sbb
adc
jle
adc
shrl
dec
ljmp
addb
sub
push
lock
add
adc
les
pop
shl
sahf
pop
cli
sbb
insb
xor
ja
ljmp
inc
lcall
imul
push
mov
push
dec
ds
gs
mov
sub
mov
test
iret
xor
pop
mov
lock
sub
leave
fidivs
dec
sbb
jne
movsl
mov
xlat
xor
cs
sub
es
ljmp
sub
lret
lret
addr16
cmpsb
inc
gs
and
jl
dec
pop
test
xlat
dec
out
icebp
mov
jmp
pop
and
xor
fwait
jns
mov
out
jo
in
xorb
sbb
push
push
mov
sub
mov
mov
jo
test
xlat
and
jae
dec
inc
in
in
jns
dec
outsl
enter
jl
repz
lahf
or
loope
movsl
cli
or
outsb
loopne
or
roll
mov
push
orb
imul
xor
sarb
fsts
dec
and
add
cmpsb
into
enter
mov
or
into
test
mov
ret
lods
mov
push
pop
fisttps
sub
dec
adcl
push
sbb
test
xchg
lret
scas
xchg
sub
and
xchg
inc
mov
cmp
in
xor
imul
popf
mov
cmc
mov
mov
imul
fstps
aaa
rcrb
xchg
and
adc
add
add
push
idivl
xlat
or
sbb
mov
xchg
xlat
popf
ret
sub
insl
xchg
push
xchg
dec
inc
les
in
and
xor
jmp
xor
sub
mov
lret
jl
xchg
aaa
clc
mov
insb
xor
cmp
adc
or
jmp
call
mov
sbb
lcall
ffreep
mov
jns
jp
jge
add
inc
sub
nop
jno
or
cmp
jae
inc
cmp
mov
cmp
mov
mov
and
dec
fcmovnb
jge
ret
movsl
aam
inc
jge
loopne
js
mov
xchg
and
lods
stos
outsl
push
ret
stos
jecxz
out
mov
es
cld
mov
test
negb
inc
loop
shll
fimuls
pop
mov
lret
pop
mov
cwtl
jl
aad
dec
mov
adc
dec
xchg
aas
or
and
jmp
jne
sub
pusha
xchg
xchg
push
push
lock
lahf
xor
ret
cltd
decl
or
enter
adc
inc
and
fwait
mulb
idivb
cmp
mov
adc
xor
mov
sahf
in
das
push
xor
out
adc
pop
xchg
pop
mov
pop
addl
push
lods
mov
jp
aaa
lret
divb
jo
test
hlt
mov
int3
mov
imul
aam
xchg
cmpsl
pop
jb
add
fsub
or
fs
iret
pop
mov
out
jae
cmc
and
outsl
mov
add
lcall
stos
sub
cwtl
std
out
inc
js
sub
mov
cli
enter
nop
xchg
gs
clc
pusha
in
in
inc
ds
out
addr16
or
mov
lea
shl
sbb
es
pause
int3
dec
xor
in
in
sub
loope
movsl
mov
out
inc
cmpsb
or
in
xchg
pop
mov
out
sub
and
xor
jne
shrl
sub
sbb
sbb
mov
push
fucomip
and
clc
loop
xchg
fxch
mov
xchg
or
and
mov
mov
and
mov
mov
or
push
pop
pop
mov
xchg
jae
dec
in
ds
xchg
loopne
cli
xor
adc
pop
loop
pushf
jmp
arpl
push
mov
inc
pop
mov
pop
adc
dec
mov
push
push
mov
cmp
out
loopne
scas
aam
int
cmp
jmp
inc
mov
dec
fs
mov
mov
pop
ss
or
inc
mov
jo
push
sub
cmp
lret
push
clc
repz
push
jg
jg
cltd
cmp
ljmp
jecxz
cmp
inc
and
setp
mov
add
cmpsl
rclb
dec
pop
pop
repnz
adc
pop
jmp
js
das
mov
repz
call
mov
dec
sbb
loope
dec
cmp
sub
or
cmp
xchg
xor
imul
int
inc
cmc
sti
dec
sar
pop
icebp
mov
nop
or
jl
sbb
dec
push
nop
call
loopne
lret
add
xor
xchg
mov
sbb
jbe
outsl
inc
sti
mov
adc
sbb
inc
cltd
lods
pop
ret
push
jecxz
cmp
div
mov
mov
mov
rcrl
ds
int
es
jle
cld
fsubl
sahf
in
sahf
std
xchg
stos
push
adc
cltd
mov
push
inc
out
inc
lret
shlb
mov
cmp
cld
popf
sti
ljmp
mov
std
and
push
mov
inc
mov
mov
push
ss
popa
mov
pop
sti
mov
jb
cmp
xlat
mov
mov
imul
jbe
out
xor
mov
les
jmp
mov
jmp
jne
testl
aas
repnz
mov
mov
xchg
out
les
inc
fimuls
add
jecxz
ja
adc
bound
xor
xlat
ds
and
mov
cs
add
arpl
or
ret
and
popa
adc
adc
mov
leave
int3
push
gs
jg
cmp
xchg
mov
repnz
sbb
out
dec
mov
sub
icebp
shl
cmp
and
loop
jmp
jecxz
fadd
daa
nop
sbb
xor
push
sbb
icebp
add
and
push
mov
inc
mov
and
jmp
dec
std
cmc
icebp
add
jmp
imul
sbb
fisubl
in
push
lcall
mov
cwtl
ds
push
xlat
adc
xor
xchg
and
in
daa
aam
xor
jge
jecxz
inc
sbb
sbb
sbb
ljmp
or
add
cmp
insl
adc
test
dec
hlt
movsb
test
repnz
lret
aas
push
cmp
jns
mov
rcl
in
jb
enter
outsl
sti
fiaddl
add
jge
jmp
pop
gs
inc
xchg
push
push
inc
out
rcrl
push
out
nop
cmp
pushl
jmp
inc
xchg
jns
cs
out
scas
test
lret
mov
je
add
push
jp
sub
jnp
daa
loopne
mov
add
outsb
and
lea
push
sub
aaa
loopne
cmp
or
sub
loop
mov
xchg
jae
sbb
js
adc
jbe
pop
jbe
lea
ja
or
je
ret
dec
ja
pop
pop
dec
push
pop
cld
mov
xchg
mov
mov
aaa
jecxz
das
or
mov
jecxz
cmp
sbb
cmpsb
sbb
hlt
cmp
outsl
cmpsb
cmpsb
loop
xchg
mov
roll
mov
or
xchg
or
pop
das
sbb
mov
inc
inc
xchg
enter
iret
cmp
rolb
and
jle
cwtl
shlb
adc
or
sub
jmp
push
and
enter
lret
scas
inc
out
push
cwtl
xor
xor
fwait
in
sbb
loope
imul
and
cwtl
cmp
or
push
pop
loope
pusha
int3
sarb
mov
pop
es
cld
int
xor
lods
popf
push
adc
xor
push
in
loopne
in
pop
ljmp
sbb
mov
jo
ret
shl
sub
push
stc
adc
std
clc
bnd
shl
cmp
addl
inc
ds
imul
mov
pop
cmp
lret
cmpsb
xor
sbb
jle
mov
push
loopne
xorl
int3
jl
xchg
push
xor
shr
cmp
dec
dec
inc
lock
cwtl
sbb
cmp
orl
leave
pop
push
sub
jecxz
mov
loopne
out
scas
mov
xorl
mov
and
lahf
push
dec
in
ja
clc
mov
add
xchg
pop
pop
ljmp
movsl
aas
sub
adc
pop
cmp
in
das
pop
movsl
xor
add
cmc
ffreep
xchg
sbb
sub
in
add
sbb
in
punpckhwd
push
inc
add
ds
and
int3
and
sub
dec
push
adc
fbld
mov
hlt
jmp
xchg
pop
pop
imull
push
and
fistpl
inc
xrelease
xchg
xor
das
or
pop
or
cld
and
jae
or
lcall
ret
add
sarb
pop
sub
pop
cltd
push
ds
adc
cli
leave
jae
sbb
adc
sub
lea
pop
cld
leave
mov
jne
xor
sub
mov
cwtl
jbe
or
std
jg
das
nop
rol
lahf
xchg
rcrb
repz
jbe
stos
movsl
mov
pop
loop
movsb
sarb
dec
or
pop
mov
mov
add
movd
jl
xchg
rcll
test
lea
adc
add
jmp
es
mov
out
dec
mov
out
or
adcb
mov
ja
mov
xchg
out
push
xchg
mov
jecxz
repz
andl
sbbl
push
icebp
cli
xchg
mov
mov
shlb
mov
cmp
lret
mov
mov
push
add
pop
stos
ret
icebp
out
mov
inc
imull
pusha
and
xchg
cs
mov
test
scas
out
or
repnz
fs
dec
sub
sub
sub
mov
and
push
int3
add
xchg
rcll
ja
xchg
ss
aam
ja
loopne
or
gs
sub
xor
in
scas
pop
xchg
xor
fstpl
mov
mov
movsb
pusha
pusha
push
pop
lahf
or
xchg
pop
call
push
mov
cmc
cmp
jp
xchg
adc
addr16
test
lea
dec
loop
lock
les
ret
pushf
inc
insb
add
adc
ljmp
push
movsl
aas
notb
or
cmp
and
mul
loope
push
loop
xchg
push
sub
outsb
sbb
jmp
push
pop
mov
pop
push
mov
in
mov
cmp
movsl
mov
loopne
and
icebp
repnz
orb
roll
lret
mov
inc
mov
out
inc
mov
inc
mov
mov
push
aaa
mov
ret
pop
inc
or
xor
and
mov
mov
mov
out
in
hlt
xor
xchg
ds
jmp
jecxz
mov
dec
lds
ficompl
cmpsl
stc
push
lahf
xchg
sbb
mov
xchg
imul
ss
jbe
push
xchg
sti
add
push
or
out
and
xchg
icebp
pop
rorl
adcb
cmp
dec
xchg
invd
pop
push
pop
sbbl
sbbb
inc
scas
ljmp
inc
pushf
cmp
sub
xchg
xchg
js
jne
roll
dec
push
repnz
sbb
pop
sbb
pop
inc
mov
mov
lock
repnz
jo
in
jno
shrl
sahf
inc
in
mov
mov
scas
shrb
fadd
es
adc
scas
int3
cmp
cmp
mov
aas
dec
sub
xchg
mov
out
lds
cmc
sarl
ss
sub
por
shll
cmpb
and
mov
repnz
sbb
das
in
pop
add
xchg
cmpsl
movl
xor
mov
cli
pop
ss
dec
adc
push
sub
sbb
idivb
or
test
mov
sbb
js
rclb
fcmovbe
popa
fists
adc
mov
popa
cmp
std
mov
js
cld
xchg
pop
lcall
jle
or
ret
fcompl
fcompl
mov
movsl
les
lods
stos
nop
mov
xor
sub
repz
mov
loopne
in
das
movsb
mov
mov
mov
fildl
and
jp
or
repz
iret
insl
pusha
xchg
adc
and
hlt
dec
xlat
xchg
sti
cmp
jbe
fists
repz
jno
add
in
cmp
or
inc
jb
jns
aad
in
inc
pop
das
jp
pop
mov
daa
jbe
test
lahf
mov
mov
and
jb
outsb
cmp
stc
fld1
and
aad
bound
cmp
pop
sbb
and
jb
and
pop
in
repz
repz
aas
xchg
pop
push
pop
jae
ret
mov
insl
insb
stc
adc
je
and
sbb
push
sbb
lods
ja
test
adc
jp
sbb
push
mov
into
jge
mov
cmp
sbb
sbb
xor
adc
pop
aaa
and
mov
aas
adc
leave
adc
icebp
cmc
ja
pop
mov
cmc
test
push
outsl
jnp
lods
mov
xchg
adc
cmp
push
push
dec
xor
clc
inc
and
mov
push
mov
ret
xchg
hlt
cmp
adc
dec
sub
and
mov
xchg
mov
cmp
adc
pop
xor
xor
data16
ljmp
and
cld
std
and
push
xor
shll
repnz
adc
aas
lds
loopne
ljmp
push
mov
pop
std
xchg
daa
jecxz
sub
cmpsl
imul
adc
andw
clc
call
push
add
mov
sub
and
lock
cld
cmpsb
cmpsb
xchg
adc
ds
pop
mov
adc
ss
cli
loop
gs
sbb
xor
imul
pop
les
outsl
in
outsb
fs
stc
rolb
add
fidivl
or
daa
out
je
ret
es
cmp
mov
add
mov
dec
in
addr16
lods
addr16
or
push
push
xor
jnp
data16
lcall
mov
lcall
adcb
dec
jo
in
pop
lret
cmp
jp
hlt
js
mov
xchg
push
cmp
dec
dec
push
and
pop
call
rcrl
movsb
push
inc
push
fnstcw
cmp
xor
mov
mov
sub
xchg
movsl
and
and
mov
std
in
push
adc
xchg
fbld
pop
jl
stos
out
test
cmp
adc
and
test
test
push
mov
mov
outsb
out
inc
and
icebp
outsl
insb
scas
pop
adc
add
dec
cld
mov
mov
pop
cli
and
fistpl
inc
pop
daa
pushf
inc
daa
dec
mov
dec
xor
or
es
cld
in
hlt
dec
pushf
mov
ret
nop
andl
or
mov
aad
push
shll
mov
fwait
xchg
xchg
add
mov
add
pop
rolb
aam
add
icebp
imul
jns
xchg
sub
cmpsl
add
iret
leave
fsubl
mov
sbb
jp
push
std
or
sbb
sbb
out
inc
xchg
stos
fwait
and
and
ljmp
lahf
inc
sub
scas
jno
dec
jle
je
pusha
push
cld
out
cmovge
lds
adc
dec
sub
mov
out
adc
pop
push
test
mov
roll
rcrb
addr16
insb
xor
or
adc
sub
bnd
out
rcl
xor
xchg
fsubrl
sbb
inc
popf
or
sbb
inc
das
aam
add
pop
add
mov
fbstp
sub
xchg
out
aam
or
ret
addl
rorb
lahf
stc
mov
and
ret
and
push
lret
test
je
jne
cmp
test
es
push
push
add
inc
mov
xor
fcmovb
jge
out
in
xchg
cld
mov
in
dec
push
xchg
shrl
in
lods
popa
pop
inc
sbb
inc
iret
jecxz
fidivl
mov
jbe
inc
fdivl
and
fsubrs
popf
xor
outsl
dec
mov
cmp
aam
cltd
and
add
into
mov
ret
sbb
clc
push
in
mov
test
sub
sbb
cmp
pop
pop
xchg
pop
enter
inc
arpl
fists
adc
fcmovnb
and
aas
or
test
pop
sub
addl
andb
inc
add
cld
shlb
shlb
jg
pop
pop
out
loopne
pop
inc
xchg
mov
or
sub
add
mov
lea
sbb
gs
lea
jmp
int
hlt
mov
add
jp
mov
outsl
add
adc
push
dec
mov
fstpl
outsl
xor
pop
int
xor
adc
jo
arpl
sub
inc
sarl
xchg
hlt
icebp
sahf
mov
mov
into
cmp
ret
mov
fwait
sbb
mov
pop
outsb
mov
or
sub
push
das
cwtl
bound
sub
or
xchg
mov
test
sub
inc
vzeroall
jl
or
aad
popa
mov
jecxz
ds
cmpb
push
push
inc
ffree
push
mov
and
addr16
mov
test
gs
and
std
sub
data16
sub
sar
jb
or
push
push
lea
loop
dec
mov
jmp
loope
push
outsl
orl
je
add
adc
mov
ss
lea
jle
push
pushf
loop
pop
xchg
or
shl
stos
adc
jecxz
inc
sbbl
imul
adc
test
lods
or
lret
mov
add
mov
mov
lods
sub
popa
mov
lds
lcall
mov
lcall
jp
jno
rcrb
xchg
clc
fsubs
adc
mov
or
jb
sbb
or
mov
pop
adc
mov
and
loopne
pop
xor
or
push
cmp
shrb
nop
test
sub
sub
outsb
cmp
fsubr
rcll
loop
decb
mov
sbb
in
jecxz
mov
dec
test
rorl
jecxz
sub
nop
adc
sbb
std
fcmovbe
adc
xor
jo
inc
jle
pop
mov
out
dec
movsb
stos
mov
dec
xchg
insb
pushl
sub
adc
push
pop
popf
add
lods
test
or
inc
mov
cltd
xor
sahf
adc
xor
movsb
adc
iret
movsb
mov
imul
inc
int3
insl
lds
out
sarl
gs
inc
cmp
ljmp
fnsave
das
jnp
and
xchg
fcmovne
and
lret
cmpl
inc
int
and
push
mov
cmp
mov
mov
jne
es
int3
gs
arpl
scas
loop
adc
adc
jl
adc
or
movsb
xor
idivb
jbe
js
xor
push
je
pusha
sbb
pop
sbb
or
push
ja
push
xor
ret
mov
cltd
inc
popa
mov
mov
add
lahf
out
fistpl
stc
js
mov
call
aam
mov
shll
add
mov
outsb
add
xchg
data16
out
mov
ret
xchg
xor
fidivrl
sti
ss
cmpsb
add
jae
arpl
inc
add
cs
add
stos
and
es
stos
jne
scas
insb
aad
inc
repnz
xchg
push
int3
pop
mov
cwtl
or
cmp
xor
gs
test
lret
push
jno
sarb
inc
adc
fs
out
dec
into
mov
ja
lret
lret
push
dec
icebp
jb
int3
mov
mov
xchg
cmp
and
stc
clc
inc
mov
xorl
mov
outsb
xchg
cmp
jne
dec
data16
dec
mov
mov
or
xchg
push
jge
scas
aas
enter
insb
pop
push
mov
in
dec
in
lcall
or
fldcw
rcr
adc
dec
push
int3
daa
in
fldenv
mov
pop
adc
pop
pop
sub
pop
sbb
add
dec
sbb
mov
repnz
jecxz
mov
out
push
sub
xor
movsb
call
ret
jg
cmpb
push
cld
jno
test
adc
shll
std
andl
or
inc
lret
push
sbb
cs
adc
push
pushf
subl
repnz
sbb
inc
sub
add
inc
xchg
mov
div
fwait
inc
cmpsl
mov
mov
lods
pop
cltd
xchg
or
adc
add
insb
rolb
int3
cmp
inc
mov
fsubl
inc
cmc
cmp
aaa
push
jmp
sbb
sarl
xchg
iret
inc
fxch
fwait
xchg
adc
push
inc
cltd
dec
gs
loopne
repnz
add
cmp
adc
and
out
dec
add
inc
aas
xor
mov
dec
cmpsb
movsb
test
mov
shll
dec
mov
jno
int
subb
push
fcmovb
inc
stos
mov
in
sti
xchg
pushf
inc
add
mov
movsb
aad
xchg
push
add
xor
pop
or
or
push
lods
nop
jmp
pop
push
jbe
adc
push
pop
hlt
es
sub
lahf
mov
lea
loop
adc
adc
dec
mov
jecxz
leave
ficompl
je
push
sahf
aaa
and
imul
xor
mov
and
jmpw
jmp
sub
xchg
orb
dec
in
andl
nop
xchg
ret
add
rorb
xchg
out
js
ss
pop
ret
repnz
pop
sub
pop
sub
pop
and
out
rolb
lock
or
jo
pop
mov
je
cwtl
mov
mov
cwtl
mov
mov
and
fisubrl
lds
push
nop
das
push
mov
or
cmp
fimull
dec
and
popa
hlt
sub
iret
mov
shll
sarl
sbb
mov
fdivrl
pop
jp
std
outsl
repnz
lods
adc
fistpll
call
mov
outsb
rcr
or
std
je
cltd
xor
mov
lods
data16
dec
mov
int
inc
hlt
mov
and
and
mov
sarb
lahf
les
pop
sarl
or
jecxz
cmc
jg
loope
loope
or
xchg
out
or
pop
mov
pop
jp
or
cmp
xchg
aam
xchg
dec
mov
add
jnp
mov
scas
sahf
cmp
sub
xchg
mov
adc
les
dec
add
or
mov
pop
popl
inc
imul
aad
jo
popf
fisubrl
add
imulb
pop
scas
mov
sub
xchg
adc
iret
sub
cld
mov
jns
adc
ret
push
jns
lds
sub
adc
mov
sar
xchg
outsb
hlt
push
daa
mov
or
cmp
test
cwtl
cmp
lock
lcall
pop
popa
inc
sbb
jmp
ja
inc
adc
lds
cwtl
out
xor
mov
in
mov
or
rcrl
jge
popf
and
mov
or
aad
pop
mov
add
gs
popf
js
test
adc
ds
out
bnd
mov
ret
popf
sbb
outsl
cmp
imul
sti
outsl
notl
xchg
or
lret
adc
int
push
notl
jb
inc
mov
cwtl
adc
cmpb
jmp
fidivrs
mov
imul
sbb
mov
xchg
data16
pop
adcl
lret
or
and
jp
push
bound
imul
push
pop
cmp
xchg
aas
mov
mov
sub
xchg
cltd
inc
scas
push
popf
fbld
pushf
pop
ds
jecxz
cmpsb
or
ror
sbb
jg
or
lretw
ljmp
dec
sub
adc
popf
mov
push
ja
pop
jo
xchg
xchg
fisttpl
adc
lret
mov
lret
cmp
sub
or
cmp
ds
out
std
lock
xor
jne
loopne
xchg
inc
xchg
lods
inc
sub
inc
push
imul
movsb
xor
jge
mov
jge
jl,pn
push
push
lods
pop
jno
movsb
sub
adc
movsb
inc
hlt
iret
fsts
lahf
sbb
stc
test
cltd
xchg
shll
lock
jle
movsb
and
xor
gs
stos
bts
nop
mov
inc
sub
sbb
loopne
push
push
push
jg
mov
in
mov
negb
xor
or
popa
jne
adc
das
mov
add
or
or
imul
sbb
insb
leave
mov
push
xchg
ret
mull
dec
jae
add
cmp
mov
mov
pop
test
xor
inc
stos
into
mov
push
add
pusha
sbb
jle
jl
adc
cmp
das
loopne
sbb
cmp
test
rcrb
lods
frstor
fldcw
repz
jg
mov
inc
ljmp
aas
ret
in
mov
sub
adc
loope
push
lretw
dec
xchg
xor
pop
fidivl
or
repz
jns
cs
stc
aam
jo
clc
pop
repnz
xor
popa
call
cltd
pusha
loopne
icebp
lcall
cld
scas
push
add
cmp
and
cmp
jbe
add
adc
lock
pop
xor
push
dec
inc
xchg
push
cmc
add
rol
and
out
loopne
roll
lea
lea
js
mov
repz
stos
jne
push
cmp
out
rcll
fcmovu
stos
dec
popf
sbb
xchg
cmp
ror
stc
cs
xchg
mull
add
daa
cmp
add
repz
push
add
sub
jne
addr16
imul
mov
sahf
and
inc
fcmovnu
and
inc
xchg
cmpl
pushf
pusha
mov
cwtl
inc
fcomi
push
aas
mov
ret
mov
call
out
scas
out
sbb
xor
hlt
inc
sbb
fbstp
out
out
cli
or
push
and
sub
in
mulps
mov
ficoml
lcall
std
push
jo
shrl
mov
rorl
insl
push
adc
sbbb
sar
test
rcr
mov
bound
xor
ja
cmpsb
pop
pushl
rclb
mov
inc
aaa
lea
cs
data16
lcall
sbb
jp
add
cmc
mov
jb
jns
mov
xchg
xchg
fucomip
ds
pop
jns
push
rclb
ds
fsubl
in
pop
pop
add
mov
lahf
stc
xchg
cvtps2pd
faddl
xchg
jae
call
push
dec
ljmp
leave
andb
lea
jl
mov
or
lret
add
daa
int3
mov
xchg
dec
inc
loop
xchg
scas
push
xchg
dec
sub
mov
rorb
lea
and
add
mov
mov
mov
addl
stos
pop
ljmp
sub
sub
push
mov
jnp
imul
adc
ds
and
xchg
mov
push
pop
loope
sahf
das
pcmpeqw
mov
nop
in
and
repnz
sub
ja
mov
push
fst
mov
mov
cld
ss
fwait
dec
aas
fdivrl
add
dec
mov
pop
enter
sahf
push
dec
popa
jae
je
movsl
lock
outsb
pop
cmpsb
push
ret
cli
pop
add
xchg
jmp
add
dec
or
jb
jo
jbe
icebp
dec
jo
in
cli
push
adc
mov
xchg
repz
jne
popf
jns
cmp
inc
imul
adc
mov
push
lret
lods
cltd
jecxz
repnz
mov
mov
fisubl
cld
imul
cmp
into
push
filds
mov
push
jbe
sub
adc
lret
popf
hlt
xabort
lods
sbb
push
pop
cwtl
mov
scas
cli
test
and
and
in
movsb
testl
mov
push
aad
repnz
call
and
rcr
xchg
jle
mov
and
es
adc
sub
sbb
out
test
test
pop
popa
pop
sub
lret
dec
addl
xchg
cltd
xor
test
loopew
ret
jge
shlb
sbb
es
push
orl
dec
addb
pop
mov
cmp
outsb
pusha
push
xchg
dec
mov
jle
mov
stos
mov
dec
pushf
orb
push
inc
aam
cmpsl
movsb
mov
fidivrs
mov
cs
mov
inc
loop
fisubl
lock
sub
rcll
jns
mov
jno
fs
stc
adc
sub
inc
and
adc
xchg
lds
adc
add
jl
popa
pop
push
pushfw
test
inc
outsl
mov
loopne
pop
mov
cld
pop
int3
dec
mov
xchg
inc
decl
add
fisubs
lods
push
outsb
sbbl
cmp
shr
sub
sbbl
movsb
orl
xchg
out
movsb
cmp
xor
adc
stc
mov
das
push
mov
repz
sbb
mov
adc
ss
mov
notl
jo
push
faddl
dec
sbb
out
mov
adc
xchg
ds
or
dec
pop
push
enter
add
cmp
pop
lcall
lds
outsb
jbe
ja
lret
in
inc
mov
in
adc
dec
cmp
aaa
sub
xchg
clc
lds
insb
fldcw
mov
xchg
insb
or
rcrb
inc
push
cmp
mov
jg
mov
mov
popf
ds
jmp
cmp
ljmp
sbb
add
inc
dec
sti
sbb
push
mov
cmp
int3
mov
fsubrs
dec
shl
test
lods
mov
mov
in
xor
adc
das
ss
fdivrl
mov
loopne
out
push
ss
and
cltd
and
call
sub
push
push
dec
dec
jl
dec
push
mov
adc
dec
fisubrl
sbb
jge
andnps
sahf
gs
xor
cltd
ss
or
xor
cmc
mov
or
loopne
mov
xor
mov
inc
fldenv
pop
inc
hlt
and
pop
jbe
shll
sub
xor
pop
aaa
arpl
push
and
xlat
out
ret
paddsw
loopne
mov
dec
test
int
loope
pop
push
out
mov
jmp
add
fidivl
mov
xchg
adc
idivb
lret
pop
aam
xor
jno
fs
sbb
incb
push
jns
cld
sbb
nop
adc
cmp
inc
in
insb
ds
scas
es
movsl
mov
cmp
lahf
mov
filds
or
xchg
addr16
clc
fdivs
into
push
fsubl
arpl
out
popa
or
loope
inc
je
enter
xchg
aad
lods
and
xchg
cmp
cmp
jp
adc
mov
and
ds
repnz
leave
in
pop
push
sti
inc
mov
dec
stc
or
in
movsl
jae
test
jge
jns
and
fnstcw
addr16
push
xchg
stc
stc
pop
loopne
shrb
xchg
xchg
adc
ja
and
push
or
es
shlb
jnp
push
shlb
sbb
jp
shl
sbb
mov
cmp
ds
lea
scas
outsb
sbb
scas
out
fcmovnu
ss
test
outsl
xor
subl
imul
dec
jl
xchg
sbb
icebp
call
dec
adc
movsl
mov
add
jmp
dec
icebp
dec
int
inc
ss
mov
roll
out
and
jne
jle
fsubrs
xor
jns
adc
cli
push
repz
adc
cmp
jl
in
jge
add
lds
pop
es
push
and
pop
and
or
jg
loope
arpl
cmp
jg
cmpsl
out
dec
aam
fistpl
int
xor
jae
cmpl
sub
lods
pop
lock
in
outsb
rclb
shl
scas
test
insb
cmpsb
adc
jmp
mov
and
dec
mov
test
push
xchg
shl
dec
push
je
test
xchg
push
push
clc
jmp
or
daa
outsl
mov
out
inc
ljmp
xchg
das
xchg
subl
and
mov
stos
cli
repz
pop
pop
jb
mov
and
jp
cltd
les
orb
mov
mov
ja
xor
xchg
mov
leave
movsl
pop
hlt
xor
hlt
popf
push
and
push
ja
mov
push
imul
test
nop
xchg
nopl
mov
add
mov
pop
add
mov
call
pushf
insl
dec
jnp
pop
sbb
repnz
cwtl
enter
jmp
mov
cmp
and
arpl
push
jecxz
aad
sbb
ret
jo
adc
fs
adc
jbe
mov
lds
sub
pop
sub
sbb
call
outsl
and
pop
sar
pop
popa
pop
mov
push
mov
pop
out
jnp
xor
jno
rcrb
pop
push
icebp
fnstcw
xorl
xchg
stos
jae
das
jmp
insb
andl
jg
jbe
push
idivb
daa
sbb
xchg
negb
push
mov
jbe
dec
daa
mov
or
xchg
push
mov
out
out
mov
test
movsl
movsb
test
in
out
xor
test
ja
and
xor
dec
clc
jns
adc
fisubl
aas
lods
or
mov
cmp
nop
test
bound
jg
sbb
sti
mov
scas
xchg
fldl
lretw
and
stos
push
daa
cmp
lret
clc
sub
fistpll
inc
fildll
test
subb
pop
push
lds
xchg
repnz
xor
xchg
cmp
lret
pop
loope
mov
push
push
leave
inc
in
fsubrs
inc
rolb
jg
or
iret
adc
mov
and
inc
push
push
data16
xchg
xchg
jb
mov
loopne
js
push
jmp
dec
insb
jl
repnz
mov
flds
push
mov
sub
sbb
outsb
push
leave
lret
mov
mov
jge
cltd
pop
pop
pop
in
test
mov
jae
xchg
hlt
lcall
gs
hlt
xchg
inc
and
dec
pop
lock
cmpsl
movsl
das
push
std
and
lahf
sbb
imul
xchg
push
jle
sub
mov
jno
cmp
and
or
mov
mov
enter
mov
inc
cmp
scas
push
lcall
sarl
std
push
and
jns
xchg
sbbl
mov
inc
cmp
in
sbb
fsubr
add
push
xchg
movsl
pusha
dec
or
mov
dec
aas
enter
out
pop
inc
lods
or
inc
mov
pop
sub
push
jo
xchg
mov
mov
sub
xchg
and
stc
data16
aam
out
sbb
andl
adc
add
cmp
xchg
inc
pop
aaa
jmp
ljmp
xchg
xchg
dec
shll
fs
dec
iret
cmp
jno
mov
imull
sub
dec
pop
pop
or
mov
mov
push
stos
and
pusha
xchg
cld
in
aas
sub
aad
cmp
movsl
sub
scas
cmc
xor
shlb
push
add
loope
cmp
mov
xchg
inc
out
xadd
mov
push
push
push
pusha
ds
dec
loopne
mov
jo
popf
cmc
add
push
pop
cwtl
addl
add
emms
adc
ja
gs
xchg
add
out
popf
pop
pop
repnz
pop
call
fisubl
mov
mov
fld
test
pop
xchg
xchg
push
test
xchg
mov
mov
push
lds
mov
and
in
shll
jecxz
push
pop
inc
xchg
jge
negl
mov
mov
icebp
ret
jmp
xchg
jle
xlat
push
data16
daa
negl
subb
aam
adc
int
add
and
push
sti
mov
mov
sub
lock
mov
fdivr
xchg
jno
adc
gs
sub
add
pusha
xchg
mov
adc
mov
loopne
sbb
ror
jmp
ficompl
out
and
fmul
add
test
pop
inc
cmpsl
mov
rorl
clc
lea
pop
test
xchg
mov
push
cmp
lret
add
mov
rorl
daa
push
cmpb
mov
or
mov
and
push
push
mov
fmull
and
xchg
inc
jne
xor
int3
xor
sbb
lock
iret
mov
icebp
ror
add
push
jl
push
mov
mov
icebp
repz
jbe
lahf
push
sub
jns
clc
mov
insl
repz
cmpsl
jbe
xchg
xor
ja
mov
hlt
push
mov
dec
bnd
jnp
nop
pop
xchg
lret
adc
in
sar
or
sbb
sub
jecxz
testl
xorl
jne
sbb
pop
dec
adc
and
dec
decb
add
mov
push
loopne
push
shlb
insb
hlt
jb
sbb
mov
sbb
dec
mov
push
mov
xor
xchg
aad
rolb
insb
loope
iret
sub
into
aaa
jns
jecxz
xchg
jb
das
jmp
push
mov
aas
adc
je
mov
jo
push
cmpsl
movsl
cmpsb
bnd
frstor
ljmp
jno
mov
dec
sbb
dec
aad
stos
or
nop
pop
aam
popa
test
sub
and
shrb
cmpsl
neg
cmp
and
push
lcall
in
lock
stos
in
jo
sarb
inc
scas
add
push
mov
stc
jb
addr16
add
das
or
je
mov
push
dec
cmp
out
aam
pop
jb
orl
jmp
jge
sub
ds
aam
js
sbb
dec
inc
out
imul
xor
push
or
jbe
sub
xchg
dec
inc
xor
notl
loopne
adc
add
and
aaa
pop
out
repnz
pop
dec
rsqrtps
mov
sub
jl
push
lods
pusha
push
outsl
in
mov
rorl
cmp
fs
out
dec
or
mov
jge
fstpt
sar
mov
push
stc
adc
adc
rorb
add
mov
inc
cmp
add
inc
xor
test
push
adc
iret
in
test
out
adc
insb
jge
fmull
cmp
add
mov
daa
cmc
daa
lret
divb
sbb
int3
push
mov
lock
sub
in
mov
mov
mov
fdivs
push
push
lret
mov
fsub
sub
out
inc
push
mov
aaa
mov
or
adc
mov
cmp
sub
and
loope
fcmovnbe
loope
xor
mov
ss
fsts
mov
stos
add
sar
lea
repz
xor
aam
subl
xchg
cmp
dec
movsb
scas
jno
or
int
rcrl
subl
movb
loope
xchg
xchg
cmp
mov
aad
lcall
xor
xchg
negb
cwtl
push
insl
lds
sbb
inc
jl
icebp
es
mov
outsl
jmp
mov
mov
mov
xorb
lcall
sbb
out
xchg
add
adc
out
lods
sahf
popf
out
and
outsl
adc
dec
and
mov
mov
jae
lock
in
xchg
xchg
cmpsb
and
xchg
dec
sub
das
mov
and
and
push
fcompl
sub
mov
adc
sub
xchg
xor
xorl
jb
inc
das
mov
cmp
cmp
call
push
out
divl
cmp
addr16
or
and
jmp
xor
aam
add
icebp
lcall
shr
push
or
or
push
out
add
jl
xor
add
cmpsl
shrl
or
mov
xchg
out
outsl
lret
add
push
xor
sbb
les
jmp
popf
mov
and
out
mov
mov
cmc
xchg
sub
cltd
shll
adc
cli
xchg
insl
jnp
dec
cmpsb
sbb
lret
sbbb
call
inc
aas
inc
mov
mov
dec
fisttpl
popa
sub
in
adc
addr16
fdivrs
jg
push
je
or
lret
imul
ret
xchg
leave
dec
insb
push
std
shr
mov
jne
mov
adc
xor
adc
lods
mov
lods
mov
ljmp
mov
push
jae
mov
movsb
inc
fdivr
pop
movsb
aaa
out
xchg
pop
mov
ljmp
mov
pusha
inc
pop
xchg
fs
xchg
push
or
jo
icebp
dec
add
dec
mov
test
in
xlat
mov
fsubrs
gs
xchg
push
and
pop
push
inc
mov
mov
ljmp
lret
pusha
outsl
gs
push
lret
popa
xchg
loop
movsl
ret
icebp
jnp
adc
inc
adc
mov
pop
test
xor
mov
jno
inc
pop
cmp
in
sbb
negb
arpl
out
jo
lock
fstl
or
or
aaa
rcll
xchg
inc
ss
pop
sbb
stc
popa
and
mov
mov
in
mov
pop
rorb
inc
jmp
cmpsl
pop
insb
and
and
testl
shlb
push
js
loop
cs
mov
bound
mov
cwtl
clc
fcompl
testl
lea
sub
jle
imul
mov
insb
enter
addl
int
loop
adc
pushf
or
lahf
add
mov
adc
mov
push
xchg
lock
xlat
cltd
call
and
mov
movsb
add
in
xlat
or
pop
mov
mov
in
sbbl
xchg
cmp
inc
lods
jnp
ret
sbb
and
loope
js
and
cld
clc
push
in
sbb
cld
sbb
adc
and
add
or
arpl
mov
enter
in
dec
adc
xchg
mov
xchg
push
fistps
pop
dec
adc
cli
add
sti
or
mulb
out
call
jle
push
cmpsl
cmpl
into
sub
iret
mov
cli
cltd
push
jns
int
dec
push
adc
js
xchg
stos
add
and
push
lods
mov
aas
mov
xchg
or
pop
push
push
std
jge
sbb
mov
cmpsb
imul
jo
test
mov
inc
movsl
popf
cmp
lods
xor
adc
xlat
outsb
xchg
pop
cmp
aad
imull
in
xchg
push
sbb
data16
bound
movsb
jmp
loopne
inc
or
mov
adc
in
mov
xchg
sbb
xchg
movsl
ss
xor
pop
xlat
mulps
test
xchg
cs
iret
lret
bnd
sahf
cmp
vpcmpgtw
and
and
pop
mov
test
sti
mov
jle
sti
or
out
mov
das
jo
loopne
in
fcmove
ljmp
loopne
jb
jbe
mov
dec
mov
inc
xlat
sbb
jecxz
sub
pop
add
mov
cmc
jae
imul
cmc
dec
scas
stc
test
insl
xor
outsl
les
ds
dec
cmp
mov
aam
test
aam
pop
mov
fcoms
cli
repnz
jbe
inc
repnz
dec
and
pop
jp
nop
sbbb
and
bound
mov
into
xchg
sarb
jmp
lahf
rcrb
stos
and
out
dec
inc
or
outsl
jno
loop
cli
dec
xchg
mov
mov
nop
add
cmp
jne
mov
rorl
mov
lock
jmp
je
js
cmp
int3
push
out
sub
popf
pushf
cmp
cmp
jb
add
fcmovu
or
mov
pop
sbb
cli
jecxz
jno
pusha
adcl
adc
cld
call
into
pusha
sub
out
push
cmp
ja
sarb
cmp
sti
mov
nop
jnp
in
push
dec
dec
xor
mov
and
push
mov
and
jae
ret
test
imul
mov
jbe
cwtl
inc
lock
mov
lds
sbb
add
repz
jno
dec
icebp
jne
push
mov
leave
cmp
dec
xor
fimull
dec
add
into
xlat
aaa
mov
mov
adc
push
jnp
add
cs
mov
cmp
std
aaa
sti
xorb
cmp
or
loopne
lret
pop
push
xchg
sub
adc
test
int3
inc
pop
fcompl
jmp
xchg
mov
popa
pop
in
sar
dec
jnp
push
std
dec
mov
ret
cmpsl
fists
pop
fwait
or
aaa
jne
out
mov
addb
and
jmp
mov
pop
mov
push
insb
or
out
arpl
mov
arpl
cmp
test
inc
fsubl
pop
popa
pop
sahf
std
out
push
xchg
jmp
sbb
or
push
jno
ret
cmp
mov
cs
mov
sbb
mov
cmp
inc
mov
adc
xchg
xor
adc
je
mov
out
xchg
data16
push
lock
test
std
mov
ja
pop
stos
adc
jmp
ja
lret
xchg
xchg
cs
fwait
movsb
out
orl
and
cmc
cmp
xchg
mov
addr16
aas
clc
out
and
mov
xchg
xor
imul
adc
cmp
call
mov
movsl
dec
adc
jecxz
xchg
stos
mov
mov
and
cmp
xor
orb
push
mov
lret
jae
push
sti
jo
shlb
sti
push
pop
cmp
cmp
mov
std
push
mov
add
in
jnp
mov
hlt
xor
stos
or
xor
sbb
mov
mov
in
fsubrs
movl
xlat
add
push
in
sub
jg
repnz
xor
out
pop
loop
into
mov
mov
popa
xchg
vpunpcklqdq
sub
pop
iret
pop
rclb
ds
mov
dec
aas
cltd
mov
hlt
leave
push
push
fwait
and
inc
mov
int3
jae
and
shlb
adc
xor
dec
push
push
pop
test
out
jg
pop
push
jge
pop
sarl
dec
lahf
inc
pop
shlb
pop
mov
and
inc
loope
call
cs
jne
lret
xchg
dec
push
cmp
xchg
cmpsb
jmp
cs
aam
shlb
sub
in
push
cltd
pop
mov
dec
fldenv
push
mov
sbb
cltd
sahf
stos
dec
mov
sbb
dec
push
pop
mov
dec
test
lret
stos
in
inc
sub
jecxz
fsubrl
xor
dec
sbb
sub
popf
xlat
sti
imul
loope
sbb
ret
lock
or
mov
addr16
aaa
orl
sti
jnp
jns
mov
mov
mov
loop
ja
test
add
inc
cs
outsl
ret
and
mov
or
mov
dec
adc
arpl
ss
inc
mov
aas
or
test
push
add
sub
dec
into
mov
adc
sarb
pop
test
adc
repz
adc
pop
aaa
sbb
cmc
int3
cs
dec
mov
xor
out
mov
orl
icebp
lret
test
popf
jle
pop
push
out
out
mov
sub
pop
outsl
adc
mov
daa
in
dec
and
or
jecxz
cli
jnp
movsb
sbb
jg
or
mov
or
sbb
test
or
mov
bndldx
std
mov
sahf
sahf
test
adc
mov
fimuls
arpl
xor
out
adcl
jmp
in
push
sbb
into
mov
scas
xchg
cmp
xor
pop
xor
push
repz
sbb
aas
loop
lock
add
sbb
cmp
jno
and
mov
fs
test
mov
mov
pop
jmp
ret
sbb
lahf
mov
out
std
arpl
push
push
mov
mov
fsubrl
xchg
jne
xchg
dec
sub
or
pop
fistpl
insb
mov
stc
and
mov
outsb
jmp
mov
popf
lods
xchg
imul
pop
cmp
add
repnz
jne
jo
imull
cs
push
dec
cmp
push
mov
mov
test
fidivrs
or
sahf
ret
dec
xchg
mov
xlat
pop
dec
fsubs
mov
cltd
repnz
mov
mov
cld
inc
jge
xchg
lcall
push
add
push
cmpsl
sahf
aas
jbe
call
addr16
fimull
jmp
mov
cmp
xlat
push
jge
aam
pop
pop
mov
dec
or
add
test
jne
lret
aad
jp
cmc
loopne
xchg
push
inc
pop
push
cmpsl
push
in
push
jecxz
xor
mov
hlt
cmp
dec
loopne
add
or
cmp
addr16
xchg
push
je
and
imul
gs
sbb
cmpsl
ret
jp
fidivrs
mov
pushl
sbb
into
jecxz
daa
jl
sbb
testb
sbb
cmp
and
addr16
xlat
xchg
mov
jle
mov
loopne
push
dec
or
mov
xchg
add
aaa
or
lods
cmp
mov
sbb
jl
mov
adc
xlat
out
mov
rol
das
mov
and
mov
test
xchg
mov
fdivl
into
push
outsl
bound
push
popa
jbe
adc
pusha
in
scas
gs
mov
xchg
jmp
ja
xchg
jg
jns
subb
ret
movhps
mov
cwtl
hlt
mov
mov
sub
and
loop
mov
adc
lret
pop
subb
jp
iret
stos
sbb
popa
iret
add
jb
vcmpsd
jno
popf
std
dec
call
cwtl
stos
mov
mov
jg
lret
sub
push
cmp
loope
lods
jle
mov
clc
mov
mov
or
shlb
out
cmpsl
dec
push
loop
fldcw
xchg
stc
test
mov
and
js
xchg
icebp
mov
frstor
cmpsb
loop
dec
imul
jp
cmp
push
pop
push
dec
lret
inc
rol
xchg
and
data16
ret
xchg
xor
and
sbb
dec
mov
es
xor
adc
outsl
inc
mov
or
mov
into
pushf
sub
sub
xchg
scas
jno
sti
bound
call
addb
sarl
arpl
dec
xor
aas
xchg
shlb
scas
shrl
pop
popf
pop
sbb
fs
mov
repnz
lret
sub
out
and
inc
sbb
mov
in
jnp
std
mov
or
pop
in
sahf
pop
aas
xchg
iret
mov
mov
test
fs
movsl
push
xchg
bound
ficomps
push
jae
test
sub
pop
inc
cmp
push
cli
sahf
test
jmp
push
xor
mov
shlb
push
fcoml
nop
das
popf
jge
pop
dec
fimull
adc
fcoms
pop
mov
das
test
into
cmp
rol
cmc
loopne
sbb
test
test
test
jne
sbb
mov
fldenv
push
and
subps
lahf
pop
int
icebp
pop
ljmp
or
clc
sub
push
pusha
jg
fadds
xchg
jecxz
add
push
adc
or
pop
movsb
adc
sbb
les
pop
hlt
sub
and
pop
scas
pushf
or
pop
cmp
movsb
call
enter
pop
stos
outsl
dec
mov
adc
dec
and
jp
jmp
imul
je
mov
or
jmp
fnstsw
add
pop
xor
or
jle
stos
jne
sub
pop
outsl
fsub
aas
add
xchg
scas
shl
and
jnp
jb
shl
aas
int
jbe
xor
sbb
add
enter
out
cltd
xchg
cmp
xor
pop
mov
in
out
mov
mov
mov
rol
out
jnp
lds
nop
mov
xchg
bound
pop
mov
insb
push
nop
and
push
ja
dec
incb
clc
aaa
or
pop
push
out
pop
adc
push
push
lods
lea
movsb
std
js
outsb
test
test
lahf
xor
jle
dec
push
lods
lcall
dec
nop
push
clc
vxorps
sbb
mov
push
or
mov
mov
fdiv
xchg
icebp
sbbb
int3
jp
push
in
cmp
fistps
dec
stc
mov
sbb
xchg
inc
rcl
in
dec
ss
push
mov
adc
lea
mov
ret
add
push
sahf
xor
and
addl
icebp
aas
ss
cwtl
and
movsb
sbb
jae
cmp
subl
or
rclb
ret
leave
in
dec
jecxz
in
pslld
mov
addb
lock
std
cmpl
inc
dec
cmp
int3
sbb
mov
inc
push
lcall
test
lock
and
inc
out
imul
mov
fs
lcall
movsl
jg
clc
inc
cmp
xchg
fmuls
adc
clc
popa
sbbb
call
in
mov
stc
cmp
movsl
leave
xor
mov
xchg
out
adc
add
in
inc
hlt
in
jp
test
inc
pop
adc
jae
mov
sbb
push
push
adc
inc
bnd
xchg
xchg
ds
aaa
mov
dec
mov
pop
adc
shll
in
xor
sbb
push
iret
inc
gs
fadds
push
icebp
xchg
or
nop
push
test
push
pop
loopne
pushf
xlat
out
jo
xchg
dec
mov
pop
cmpsb
mov
jns
inc
rclb
jge
cmp
jo
jno
fnstsw
mov
fcom
mov
and
mov
fldcw
loope
cmp
mov
lds
mov
stos
add
into
repz
or
jo
adc
insl
leave
or
ret
hlt
mov
pop
enter
xchg
push
arpl
lea
clc
mov
dec
jae
mov
push
ja
std
xchg
mov
gs
mov
pop
inc
mov
sbb
pop
cmp
mov
dec
testl
adc
shlb
fiadds
test
push
fdivs
dec
loope
lods
adc
lods
fcompl
in
fs
orb
lahf
jne
test
mov
lods
lds
push
mov
mov
int3
cmp
add
mov
scas
pop
arpl
es
decb
inc
ret
fsubrl
sub
or
add
outsb
ja
out
push
subb
lock
arpl
fiaddl
jns
add
push
mov
xchg
lock
push
push
mov
and
adc
mov
das
push
jns
ret
push
je
rclb
add
xchg
inc
sub
cmc
cmp
cmpsl
jl
enter
inc
cs
enter
faddp
insb
out
and
sahf
inc
and
sbb
jbe
in
popf
cmp
pop
inc
sbb
lret
fidivs
jecxz
bound
add
mov
sub
outsl
loopw
xchg
xchg
rcrl
pop
aas
push
mov
jmp
stc
push
jo
cmp
loope
ljmp
cmp
stos
out
cli
mov
pop
in
fsubrs
ret
shlw
sarl
popf
aad
out
mov
add
dec
ret
testb
xchg
es
adc
mov
xchg
inc
mov
inc
in
jmp
das
push
ret
in
mov
data16
sbb
sub
sbb
lock
movsb
jge
dec
int3
pop
pop
insl
fcompl
ja
or
sub
addb
inc
ds
adcb
dec
mov
jl
cli
decb
int3
pushf
inc
xchg
and
adc
jge
dec
or
adc
adc
dec
dec
mov
sbb
xchg
xchg
add
dec
cld
push
fxch
test
jb
jle
adc
mov
push
loop
add
mov
push
and
pop
and
imul
repnz
mov
lods
mov
cmpsl
pop
push
leave
xchg
stos
bound
repz
push
shlb
ret
cmp
xchg
das
insl
btc
test
ror
arpl
ret
cli
push
jecxz
mov
fstpl
pop
imul
jg
sbb
nop
sbb
mov
jle
in
xchg
inc
sbb
outsl
cmpsb
in
push
mov
mov
rcll
and
rcrb
mov
sbb
popa
mov
iret
add
cmp
imul
incl
daa
pop
jnp
ljmp
xlat
outsb
arpl
mov
test
fiaddl
into
mov
out
adc
push
imul
jg
cmp
inc
sub
adc
and
stc
sahf
add
int3
cmpsl
mov
unpcklps
cld
sbb
mov
mov
push
adc
les
sbb
dec
pop
sbb
pop
cmp
push
ljmp
inc
ljmp
aam
mov
push
lods
cltd
push
mov
les
jmp
push
jge
adc
ret
mov
int
movsb
inc
xor
shrl
addr16
jnp
lcall
xchg
stc
lcall
cld
dec
xor
jecxz
rcll
inc
ret
insl
push
add
xchg
xchg
ret
aad
sub
nop
jnp
aad
insl
xchg
ret
and
push
pop
mov
fdivl
dec
adc
mov
imul
cmc
sbb
cmp
fisttpll
aaa
pop
pushf
mov
xor
pop
sahf
cmp
sub
addr16
xchg
in
sub
out
jge
pop
mov
in
add
dec
sbb
lods
push
cltd
cwtl
call
cmc
imul
jb
stc
cmp
scas
mov
orb
in
sbb
inc
subb
sti
adc
inc
shrl
sbb
imul
add
pop
sub
dec
pop
sub
mov
call
mov
cmp
lahf
adc
mov
xor
dec
test
fwait
inc
xchg
pop
xchg
add
ficomps
mov
sti
inc
push
jle
mov
push
movsb
jl
rolb
loope
scas
ja
inc
push
inc
sbb
and
cmp
jl
sbb
call
pop
adc
idiv
cmp
sarl
aad
in
jge
pop
add
fcmovu
inc
push
push
imul
jae
adc
xor
mov
mov
outsb
cs
fisttps
jmp
leave
mov
stos
imul
mov
push
cmp
inc
in
or
mov
ljmp
push
mov
nop
shr
fmuls
cld
scas
inc
pop
mov
mov
subl
mov
cmp
add
push
lcall
pop
mov
xchg
inc
xchg
int3
jge
dec
xlat
ljmp
or
push
lret
dec
pushf
xor
push
leave
jecxz
nop
jbe
lods
and
inc
xor
es
lds
data16
repz
addr16
adc
push
in
lahf
mov
clc
sbb
jg
push
out
dec
addr16
sbb
jb
lods
sbb
lods
mov
cmp
cmpsb
adc
iret
sbb
cmpsl
mov
mov
movsl
iret
int3
jge
lods
xlat
xorl
sbb
fstpt
xchg
jle
out
sub
pop
inc
jmp
jp
jo
cld
jns
lea
push
lods
fadd
mov
pushf
or
scas
jg
or
pop
out
mov
lret
test
fisttps
mov
xchg
sbb
mov
jmp
movq
or
test
addr16
jb
divl
fstl
add
push
push
popf
sti
sbb
js
sbb
push
movsb
xor
jmp
jl
mov
dec
and
dec
inc
xchg
pop
xor
inc
xorl
mov
xchg
sub
js
dec
fldl
dec
add
arpl
xchg
jae
scas
test
test
add
sbb
xchg
shll
jo
js
xor
or
fdivrl
cmpl
jo
mov
loope
mov
iret
fbld
mov
ret
push
xor
fwait
std
and
mov
xchg
cmp
daa
push
nop
int
insb
xchg
aad
add
mov
inc
fsts
pop
cld
js
fisubrl
insb
add
popf
cmpsl
addr16
outsl
jl
out
iret
test
loopne
adc
repnz
fwait
xor
cli
loop
loope
add
in
pushl
leave
movl
xchg
aad
jne
mov
int3
adc
mov
or
xchg
push
mov
fistpl
pop
cmc
in
subl
sarb
test
xchg
xchg
les
ficomps
icebp
outsl
lea
enter
inc
ret
jno
or
dec
adc
pop
in
addr16
arpl
test
gs
ljmp
nop
sbbl
es
adc
xchg
or
ljmp
push
rclb
gs
jns
cmovp
aas
mov
out
sub
pushf
movsb
jmp
adc
pop
cmp
or
fwait
adcb
adc
femms
xor
mov
inc
scas
adc
and
loope
popa
stc
mov
and
sarl
and
sbb
lcall
int3
push
orl
dec
outsb
jmp
movsb
out
sti
and
pushf
pop
cmpsb
mov
out
xchg
and
push
ficoms
xchg
loopne
sbb
out
inc
cmp
mov
mov
sbb
xchg
mov
xor
cltd
fucomi
nop
xchg
clc
cs
jge
xor
xor
ds
dec
mov
out
js
mov
dec
pop
iret
pop
push
sub
aam
jg
dec
decl
test
cli
jmp
jle
jo
aaa
daa
fsts
xchg
mov
push
int
push
pop
rorb
lds
dec
push
icebp
pop
mov
inc
fsts
push
mov
callw
insb
dec
adc
repz
pop
loopne
xor
loope
and
cmp
lea
cmp
jle
repz
test
lea
push
popf
push
mov
lahf
push
add
mov
stc
loope
stc
push
stos
dec
sub
jle
rol
js
dec
or
loop
dec
mov
dec
test
leave
lcall
sbb
test
mov
sbb
sysenter
test
add
pushf
add
mov
lods
adc
shll
fcompl
andb
lret
cs
and
xchg
xor
mov
cmp
mov
lret
add
jp
imul
std
mov
pop
jo
jbe
xor
add
mov
lods
xchg
or
add
jbe
and
lock
pop
ss
rcrb
add
sbb
adc
pop
xchg
frstor
in
jb
ret
cld
aaa
inc
insb
pop
push
mov
insl
cs
js
xchg
stos
push
sbb
stc
add
jecxz
gs
call
push
pop
add
lahf
inc
push
jbe
inc
adc
inc
mov
xor
jns
mov
or
lods
jle
xchg
jp
sarl
mov
test
xchg
mov
mov
test
rorb
cli
sbb
mov
lahf
cmpsl
scas
or
cmpsb
out
jmp
ja
sub
adc
or
inc
inc
mov
ret
orb
test
arpl
aad
clc
adc
ficoml
xlat
mov
lret
cmp
lods
out
sti
mov
jae
pop
and
pop
cmpsl
pop
dec
push
or
icebp
aaa
or
push
jne
ja
mov
test
fcompl
pop
mov
cmp
xchg
add
xor
hlt
xchg
cmpsb
or
mov
xor
jmp
ret
fnstsw
cmpsb
out
adc
inc
test
in
jne
jb
cs
sub
test
or
rclb
outsb
cmp
pop
imul
lods
mov
outsb
xor
clc
dec
shlb
cmp
sbb
mov
enter
out
pop
movsb
fcmovnbe
cmp
sbb
mov
fldcw
fstps
jno
mov
sub
lods
rol
repz
lahf
les
stos
lods
je
mov
push
mov
mov
pop
lea
ret
dec
jge
in
mov
les
mov
and
cmpsl
add
stos
out
cmp
mov
mov
lods
mov
or
or
pop
mov
cmc
test
test
rclb
dec
mov
mov
cwtl
es
xor
imul
lds
jmp
fcmovnb
xchg
subl
fdivrs
int
aaa
mov
sti
inc
fimuls
pushf
and
rcl
mov
add
or
testl
dec
xchg
outsb
dec
fcompl
roll
cmp
enter
jmp
cmp
jge
imul
in
adc
jno
imul
std
mov
cmp
lock
sbb
addr16
cmp
fsubrs
ja
pop
inc
sbb
dec
and
iret
or
cmp
xor
and
out
out
cs
xor
lods
push
pop
dec
data16
hlt
xor
pop
scas
clc
xchg
pop
scas
xor
mov
mov
int3
lods
or
hlt
and
jno
xchg
add
sti
lds
push
fcoms
shll
or
mov
in
mov
test
sub
pop
andb
imul
out
dec
mov
inc
pop
jnp
in
inc
dec
jb
sbb
stc
push
stos
xchg
rorb
jl
inc
xor
aaa
lods
and
pusha
popa
pop
insl
xor
push
sbb
sbb
jae
inc
mov
xchg
fsubr
pop
outsb
mov
mov
pusha
int3
jno
mov
mov
mov
sub
test
mov
pop
mov
lds
hlt
mov
and
enter
pop
pop
mov
std
xlat
cmp
mov
push
scas
push
mov
es
mov
mov
iret
xchg
dec
jno
push
sub
xchg
lret
inc
xchg
ret
pop
xor
mov
dec
fs
cmp
sbb
stos
test
jns
pop
sub
dec
in
inc
push
lock
jmp
pop
or
call
mov
insb
xlat
pusha
imul
stos
mov
das
scas
mov
push
xor
dec
pop
jo
push
repnz
adc
adc
sbb
lret
jbe
insl
cmp
jae
testl
mov
leave
mov
mov
lods
push
or
sub
pushf
mov
inc
cmp
mov
pop
adc
or
test
sahf
pop
and
mov
sbb
inc
inc
shlb
cmp
adc
popa
inc
bound
int
ljmp
ljmp
adc
xchg
xor
fisubl
adc
jp
repz
push
push
shll
pop
das
mov
into
cli
mov
cmp
scas
add
dec
push
popf
aam
sar
inc
pusha
aad
mov
pop
dec
loop
out
push
data16
and
ds
add
ret
push
popf
push
cmp
sub
bound
dec
lahf
js
adc
cmp
testb
inc
sbb
adc
mov
jae
push
push
mov
sub
notl
sub
das
roll
adc
flds
xchg
and
push
mov
mov
push
mov
ljmp
push
stc
es
adc
push
add
add
pop
out
sysret
call
push
push
mov
ss
jnp
xchg
out
mov
fdiv
sbb
cld
imul
mov
inc
xor
in
loopne
lret
je
out
adc
mov
push
out
imul
jecxz
push
xor
cmpsl
and
jae
and
cmpsl
adc
mov
push
mov
jo
add
mov
cmp
sub
not
lret
lds
sbb
pop
ljmp
mov
shl
push
push
adc
leave
sub
cmp
popf
xorl
pop
mov
sub
rorl
sub
add
orb
push
scas
sbb
lret
inc
nop
aam
pusha
xchg
js
mov
addb
bswap
test
lds
jae
outsb
stc
stos
icebp
imul
adc
data16
inc
xchg
push
shll
or
in
lahf
push
mov
mov
jbe
das
call
dec
sub
cs
pop
and
xchg
outsb
push
inc
sub
push
cmp
xor
sub
and
adc
push
rcrb
xchg
popa
or
shl
sbb
push
mov
or
out
int3
test
aam
inc
or
sub
mov
push
jmp
cwtl
inc
shlb
push
jp
mov
sti
in
lea
outsb
imulb
fisttpll
ljmp
cmp
push
jmp
test
push
std
push
pop
jl
int3
push
mov
dec
fs
inc
inc
int3
loope
imul
subb
sbb
int
dec
icebp
sbb
mov
adc
sahf
lock
sbb
adc
inc
inc
adc
loop
aaa
mov
das
sbb
mov
adc
cmp
data16
ret
adc
fsubs
fwait
cmp
inc
fidivrs
and
mov
pop
and
cs
and
or
cmp
cmp
push
push
xlat
repz
lds
push
inc
mov
in
insb
lret
jns
xchg
mov
repz
andl
cmp
in
or
mov
sbb
testb
push
push
mov
lret
bound
add
aas
fsqrt
adc
divl
aas
cmp
icebp
test
adc
mov
in
je
int
and
inc
lcall
pop
and
fnstcw
fwait
cmp
testb
mov
mov
outsb
add
inc
mov
ficoms
sbbb
loope
push
cmp
push
outsb
xchg
inc
in
inc
inc
mov
and
scas
orl
mov
les
fidivrl
je
arpl
xchg
btc
data16
inc
cli
out
cs
js
test
stos
sub
jmp
xchg
outsl
xlat
divl
mov
xchg
xor
lret
gs
pop
push
mov
lea
pop
push
jb
push
enter
or
or
sub
out
inc
cmp
xchg
mov
addl
in
popl
jns
mov
repnz
jne
pop
inc
push
mov
dec
sbb
and
fdivrl
add
in
cli
and
jae
je
ss
cmp
mov
xor
shl
push
jnp
jecxz
and
xor
cmpsl
cmpsl
mov
inc
dec
dec
xchg
aad
cmc
fcompl
bound
insl
mov
dec
adc
cmp
xchg
add
mov
sbb
mov
scas
stos
cmp
clc
cwtl
lock
adc
xchg
and
cld
popf
cmp
jb
jnp
shlb
fiaddl
jne
xchg
push
xchg
scas
fwait
cmp
loopne
xor
adc
inc
hlt
or
jbe
jl
add
add
aaa
push
inc
xchg
lea
pop
add
mov
cmp
arpl
test
aas
dec
bnd
je
inc
mov
shrb
in
xor
jge
pop
jae
pop
xchg
mov
push
test
insl
mov
stos
and
sbb
fadd
outsb
inc
jo
sti
pop
lds
jo
mov
pop
imul
dec
stc
cwtl
xchg
mov
jmp
or
cmp
out
aam
jbe
push
scas
push
in
clc
out
sbb
xchg
leave
out
pop
out
cwtl
add
sets
ss
insl
inc
lcall
jnp
outsb
mov
aas
pop
aaa
mov
fsubrp
mov
jmp
mov
sub
notl
xlat
push
loope
pop
push
sbb
xor
mov
mov
cmpsb
mov
xchg
popa
and
cwtl
or
out
in
fwait
inc
sti
dec
sti
stc
mov
xor
jb
stc
sub
ret
int3
dec
jle
add
cmpsl
dec
mov
call
rcrl
adc
ss
shrl
mov
jns
jp
jecxz
jmp
xchg
inc
jecxz
sub
add
enter
fsubrs
seto
push
mov
jl
push
cmp
sub
lret
pop
in
inc
jns
adc
xorb
ljmp
rorb
call
add
hlt
push
loope
mov
mov
rcl
movsl
pop
fs
test
mov
es
fists
jecxz
lock
ja
decb
iret
mov
sbb
mov
cld
cmp
pop
rol
dec
mov
lahf
cwtl
pusha
inc
fs
dec
and
adc
xor
movsl
out
out
and
jl
dec
ret
adc
sub
loope
cwtl
mov
xor
sbb
add
xorl
into
scas
ljmp
in
lods
pop
push
mov
loope
push
add
mov
ljmp
sub
stc
push
popf
xchg
cwtl
or
pop
pop
add
repnz
xchg
push
fldt
int3
adc
insl
pop
xor
push
aas
cmp
jns
mov
mov
ficoml
fstpt
or
pusha
push
in
sarb
mov
jmp
pop
les
mov
or
fisttps
lret
loopne
mov
leave
pop
popf
mov
mov
enter
data16
addr16
push
pop
xor
out
pop
inc
inc
mov
ss
mov
fwait
sarb
lar
add
mov
and
imul
push
jno
fstps
xchg
outsb
repz
pushf
inc
xchg
inc
pop
test
inc
mov
mov
and
add
int
jbe
or
lret
mov
in
mov
add
mov
adc
mov
dec
cmp
mov
xor
inc
aas
add
add
cmp
cltd
test
outsb
movsb
dec
std
sbb
rcl
pop
fs
js
pop
lock
mov
push
leave
add
xchg
adc
jnp
sub
repnz
adc
and
xor
and
inc
cs
shll
gs
int
ret
push
dec
fisubrl
leave
shlb
faddl
mov
inc
cld
lcall
or
push
popf
cmp
mov
cmpsb
outsl
dec
push
push
cmp
mov
mov
cltd
push
dec
lret
pushf
sub
cmp
cmp
dec
ds
aas
dec
out
iret
pop
xor
jne
stos
dec
pop
push
push
push
and
je
lret
or
mov
idivl
enter
fldenv
push
push
popf
dec
icebp
xchg
addr16
dec
addr16
sbb
insl
pushf
movb
sub
jbe
in
jge
into
decl
cmp
clc
jecxz
dec
push
xchg
or
cmp
add
push
push
adc
ljmp
lret
cmpsl
sbb
xor
jecxz
or
sbb
xor
mov
aaa
ljmp
or
dec
jge
in
out
cmp
push
xor
cmc
popa
out
xchg
dec
mov
outsl
loop
dec
je
push
call
adc
lcall
adc
cmp
mov
fsubr
mov
dec
mov
jecxz
dec
aad
mov
mov
mov
ds
faddl
shr
adcl
cs
aas
sub
scas
cli
fs
and
mov
or
repnz
sti
lret
and
fmull
push
stos
jecxz
inc
sbb
push
imul
mov
mov
xchg
ja
not
stc
out
rcl
cmpb
xchg
push
dec
pop
aad
in
fdivl
cltd
sahf
cwtl
addr16
outsb
stos
aam
adcb
push
outsl
lret
push
aad
or
push
or
adc
jmp
fwait
hlt
jno
ret
mov
adc
repz
mov
pop
jge
push
jg
xor
mov
sahf
mov
lret
mov
daa
jae
pop
inc
hlt
xor
pop
mov
sub
sub
mov
adc
xor
mov
ror
lods
pusha
clc
sti
in
data16
pop
push
daa
push
lea
push
outsl
fisttpll
add
sti
aaa
inc
mov
and
aam
jae
and
popa
push
neg
mov
jne
xorl
movsb
repnz
mov
mov
fwait
das
sbb
stos
cld
pop
push
fcoms
scas
lock
dec
mov
cmp
xor
jecxz
xchg
popf
int
dec
sbb
leave
pop
inc
push
push
push
lret
pop
je
scas
inc
adc
and
adc
nop
in
addr16
mov
sahf
xor
ret
mov
adc
and
aam
je
fcompl
fcomps
ja
sbbl
sahf
je
cmp
dec
sub
and
das
inc
cmp
fwait
fwait
cmc
xor
int3
stc
cmpsl
sub
ret
stc
jp
cmp
punpckhwd
es
loop
or
mov
int3
test
leave
das
std
stc
pop
dec
mov
mov
add
cmp
lock
cmp
rorb
dec
lret
shld
and
cmpsl
sbb
xchg
cld
lret
ds
aaa
pushf
sub
sub
ret
test
ljmp
jbe
cmpb
and
and
pushf
cmp
xorl
repz
mov
xor
mov
xchg
fstpt
cli
movsl
sbb
imul
mov
cmp
aas
inc
mov
nop
push
mov
fimuls
sub
pop
out
movsl
aad
xor
push
push
pop
cmp
lret
sbbb
mov
ja
push
dec
mov
push
int
hlt
cmc
cmp
cld
data16
gs
jecxz
addr16
add
cmpsl
jnp
inc
jl
dec
in
leave
mov
stc
stos
mov
adc
cli
scas
dec
hlt
push
pop
aam
push
js
jne
mov
rcll
xchg
cs
sti
mov
shrl
push
das
fdivl
pop
xor
mov
fdivs
cltd
and
lret
jae
inc
cmp
jmp
dec
add
bound
cmc
ss
jbe
lahf
shrb
jnp
cmp
js
lahf
jle
and
mov
sbb
dec
jge
push
cli
mov
jl
sysexit
mov
subl
or
xchg
in
test
xchg
movsl
fstpt
dec
cmp
pushf
jae
lods
ret
loope
out
mov
inc
pop
in
data16
fiadds
cmpsl
inc
add
cs
jno
pop
movsb
lahf
scas
scas
adc
cmp
ss
add
dec
adc
sti
or
enter
cmpsb
insb
cmp
xchg
mov
int3
xchg
jle
xchg
jmp
mov
in
sbb
mov
cld
out
xor
cmp
jle
cld
jne
mulb
mov
in
cmp
test
fcoml
jmp
test
jo
insb
and
xchg
data16
pop
insl
mov
jnp
call
push
cmp
xchg
xor
jbe
shll
xchg
adc
rolb
insl
lods
roll
or
outsb
out
mov
adc
jo
arpl
gs
jl
rcrl
lcall
cmp
mov
aad
fisubrl
jne
mov
or
pop
or
cli
cltd
or
clc
mov
sub
cltd
pushf
sbb
insl
hlt
adc
incl
int
sub
int
das
int
push
jecxz
ret
mov
out
inc
inc
mov
dec
jmp
or
loopne
or
xor
sub
aad
cli
push
daa
adc
sbb
in
rolb
cli
scas
dec
mov
mov
js
mov
sub
loop
les
shll
cmp
jno
or
mov
and
xchg
in
mov
lods
mov
pusha
cmp
test
orb
pop
fucomi
out
push
push
push
mov
adc
mov
jle
popf
ret
movsb
cmc
adc
add
inc
ljmp
xor
sbb
roll
mov
shl
push
aad
imul
xor
push
out
fdivp
pop
xor
loop
cld
jb
pusha
jo
xor
push
dec
xchg
adc
mov
repz
push
int
pop
inc
add
jp
sub
movsl
mov
xor
lds
sbb
jb
arpl
lcall
out
sub
insl
add
push
pop
call
sub
test
xlat
xchg
sbb
repnz
shll
lods
out
mov
dec
cmp
fwait
xor
sbb
imul
add
jl
and
or
inc
mov
sub
push
ret
out
icebp
xchg
pop
movsb
gs
lds
leave
pusha
adc
cwtl
popa
ret
mov
cmc
outsb
notl
inc
call
lahf
fsts
pop
xor
jb
adc
mov
test
insl
cmp
lds
pop
mov
push
das
imul
jecxz
pop
inc
sarl
loop
popa
dec
std
test
adc
stc
out
and
int3
jge
mov
xchg
dec
push
test
push
xlat
loopne
jg
inc
jmp
arpl
and
pop
mov
add
arpl
jnp
mov
loope
cld
divb
inc
lea
push
stc
xchg
out
jecxz
loope
mov
add
jge
bound
int
jle
dec
jnp
mov
addl
xor
jb
shr
add
sbb
sbb
sahf
mov
and
jmp
insb
dec
fsubrp
mov
sub
push
dec
enter
lahf
aaa
mov
sti
mov
dec
int3
jp
mov
jge
repz
iret
add
sbb
or
xchg
fnsave
jle
xchg
adcb
stos
mov
cmpsb
sbb
xchg
xor
and
icebp
push
imul
dec
pop
dec
ss
sub
xor
enter
cmc
lods
imul
ja
ljmp
push
stos
sbb
jmp
inc
loop
out
ja
sahf
pushf
push
shrb
ret
fisttps
push
data16
xchg
jge
addr16
xchg
dec
shll
das
mov
es
jno
mov
lahf
sbb
sbb
push
pop
cmp
outsl
or
aaa
cli
outsl
aad
inc
inc
jp
gs
sub
push
sub
push
and
push
flds
ret
repnz
pop
jbe
pop
xor
and
xchg
in
sbb
or
daa
inc
sbb
dec
or
mov
cmp
sub
aaa
and
xor
xchg
inc
push
fsts
mov
out
popf
sub
pop
add
ss
int3
and
xchg
adc
sub
sbb
add
ficoml
xor
bound
arpl
sub
std
into
fwait
pop
scas
xor
leave
mov
mov
in
aaa
sbb
shrl
xchg
andl
inc
hlt
jle
data16
inc
je
bound
xchg
loope
add
repz
sahf
shrb
push
adc
xor
pop
pop
loop
sbb
mov
lds
pcmpeqw
jnp
dec
mov
push
push
pop
cmp
out
push
mov
lods
pop
sub
push
mov
push
mov
and
sbb
iret
int3
xchg
jmp
push
or
and
jmp
add
or
jge
in
mov
xor
push
daa
or
nop
push
mov
sbb
je
mov
and
fs
fmuls
xchg
and
fnstenv
popa
es
and
call
adc
xchg
aam
std
pop
call
fs
insb
mov
jae
icebp
sub
jns
pop
mov
fistps
push
fmuls
lahf
sub
push
cs
dec
test
sbb
dec
xchg
inc
mov
pop
inc
mov
fsubl
inc
and
insb
jns
xor
int3
into
inc
dec
int3
cmpsb
push
ja
outsb
lea
aaa
sarb
jmp
movsb
cli
xor
jb
iret
mov
mov
xor
jo
xchg
cmpsl
loopne
push
xchg
leave
cld
sbb
push
leave
in
outsl
dec
add
outsb
nop
xchg
jno
or
daa
mov
pushf
dec
fcoml
sbb
cmp
push
jns
mulb
lcall
adc
sbb
cmp
jmp
shll
cmp
mov
dec
push
jmp
sbb
ss
loopne
ja
pop
shrb
shrb
sarb
push
rcrb
mov
adc
mov
mov
push
xor
cmp
repz
mov
mov
mov
mov
add
sub
inc
pop
adc
pop
mov
roll
rclb
sbb
inc
mov
inc
pop
jg
xchg
jp
popa
jmp
sbb
sub
or
fldl
pop
or
or
push
add
subl
dec
adc
pop
sub
or
and
inc
cltd
pop
test
add
lods
andb
out
jmp
movsl
xor
pop
jne
iret
mov
mov
cwtl
push
jg
pextrw
outsb
mov
inc
push
test
cwtl
and
jg
insb
jne
cmp
jmp
xchg
cltd
pop
cmp
je
dec
mov
inc
inc
inc
divl
and
xchg
out
cmpsl
loopne
push
jae
mov
scas
testl
mov
adc
pop
nop
ret
jmp
ljmp
dec
aaa
adc
xlat
dec
arpl
lods
xor
loop
xchg
cmpsl
jmp
enter
ljmp
jg
xchg
sbb
flds
xchg
mov
push
add
insl
aam
xchg
insl
pusha
jbe
jle
pop
enter
mov
int3
xor
mov
dec
dec
sub
scas
arpl
jg
jne
inc
out
out
insl
repz
movsl
bswap
test
ljmp
xor
cmc
out
mov
cli
sbb
sub
idivl
xor
or
cmp
jmp
rcrl
popa
jg
sub
xor
mov
cli
xchg
sbb
movsb
mov
push
imulb
cmp
jecxz
xchg
xor
xchg
fs
leave
rol
push
jmp
sub
loopne
call
mov
jnp
push
out
push
iret
idivl
pop
and
xchg
stos
lock
xlat
lcall
mov
inc
mov
fidivrs
repz
js
inc
mov
sub
mov
add
push
sti
mov
jne
test
psubsw
rol
push
mull
mov
aam
xchg
push
outsl
sar
test
fistl
jb
fdivs
mov
and
iret
adc
daa
push
lods
xor
popa
mov
and
rorl
inc
xor
jns
pop
adc
and
mov
and
dec
jae
add
dec
loopne
aaa
push
xchg
inc
dec
pushf
mov
inc
les
adc
gs
shrl
or
cmp
ret
push
mov
repnz
pusha
iret
jle
mov
pop
push
out
insb
and
inc
rclb
sub
movntps
add
negb
jg
cmp
jle
insl
pop
inc
push
dec
sarb
cmp
add
fwait
sub
call
jae
xchg
les
xchg
mov
pop
or
int
jbe
mov
pusha
imul
push
orb
jnp
rep
or
xchg
movsb
gs
jne
dec
sahf
in
and
ret
stos
jb
test
xor
outsb
cmc
dec
lahf
imul
ds
hlt
xor
sub
bsr
loopne
stc
sub
adc
xor
ja
idivb
xchg
cmc
test
test
inc
les
cwtl
mul
pop
test
movsl
gs
in
lods
pusha
lret
push
out
sub
loop
dec
fisubrs
nop
xor
sbbb
mov
in
cmp
pop
pop
push
daa
mov
jno
push
arpl
bound
aas
cmp
mov
inc
pop
sub
sub
sbbb
stos
loope
aam
icebp
xor
xchg
popf
ss
pop
sbb
testb
sub
ljmp
add
lret
jg
sub
adc
fldl
les
scas
xchg
int3
in
jecxz
sbb
add
call
adc
or
test
lods
cmp
add
lea
popa
sub
add
add
sahf
jg
mov
stos
int
or
xor
mov
int
jns
pop
xchg
imul
add
add
in
pop
push
dec
push
mov
push
cwtl
daa
or
daa
mov
and
xor
stc
fcomps
push
repz
gs
pop
push
popf
xor
jae
out
jl
jb
out
push
push
and
mov
popf
cwtl
adc
ss
and
int
repz
nop
pop
mov
cmp
pusha
push
notl
jno
and
insl
movsb
imul
mov
xchg
pusha
ret
shrl
or
imulb
bswap
cmpb
push
rcrb
lea
inc
mov
jp
sub
xlat
fisttpl
xchg
ljmp
jl
jmp
mov
mov
cltd
push
push
enter
aam
hlt
out
loop
mov
or
mov
adc
push
add
xchg
int
fstps
outsb
xchg
notb
pop
arpl
test
test
inc
pop
test
sbb
mov
cmpsb
and
cltd
or
push
mov
sub
add
add
fsubl
test
xlat
mov
and
xchg
lea
mov
xlat
lahf
scas
xlat
rorl
cmp
out
xchg
hlt
jl
xor
pop
stos
mov
das
add
sub
or
and
scas
sub
popf
add
lcall
das
cmpsb
sbb
pop
je
aam
gs
cmp
dec
push
jp
into
push
test
sti
sbbb
push
test
pushf
push
inc
in
mov
push
sbb
cmp
dec
out
jno
aaa
in
or
mov
dec
dec
push
pop
loopne
ljmp
sub
sub
jne
orl
dec
mov
fwait
sub
dec
aas
out
nop
pushf
es
pop
aas
mov
and
rorl
imul
sub
push
pop
popf
dec
and
push
xor
ret
cmc
popf
les
add
pop
push
mov
in
ja
and
add
xchg
test
lds
repz
jg
push
out
data16
imul
stos
mov
addr16
dec
das
inc
js
add
xchg
sti
scas
adc
inc
jne
ret
sbb
jg
les
es
fprem
dec
push
out
jb
mov
push
das
aaa
inc
mov
mov
roll
stos
jno
xor
xchg
pop
cmp
pop
push
jns
dec
jmp
xchg
nop
push
pop
fwait
bnd
dec
out
fwait
inc
pushl
ja
lss
jp
mov
pop
mov
push
fistpl
or
pop
adcb
jbe
cs
jo
mov
inc
dec
pushl
inc
mov
ficomps
loopne
push
jne
idivb
cmp
out
xchg
push
mov
xchg
scas
in
xchg
adc
pop
pop
insl
daa
scas
push
imul
mov
lods
in
pop
sbb
outsb
push
testl
xchg
jle
push
pop
adc
sbb
bnd
push
addl
xchg
xlat
or
pop
sbb
jns
xor
sbb
adc
test
pop
pusha
sub
lods
scas
add
inc
popf
or
xchg
enter
std
sub
rcll
cwtl
lock
or
insb
sbb
and
mov
add
aam
outsl
rcr
dec
int3
dec
pop
cmp
mov
mov
inc
fucom
pop
add
aaa
sbb
xchg
stos
sbb
push
push
pusha
and
cld
sub
scas
xchg
inc
adc
movsb
push
fildll
adc
ljmp
lods
lret
cmp
jb
movsb
xchg
aas
xchg
pop
fmulp
jecxz
lods
sub
jg
pop
jo
pop
pop
mov
pop
xor
fmuls
fmuls
lahf
cmp
ret
icebp
push
xor
sahf
xor
sahf
mov
jbe
bound
jns
mov
mov
fnstenv
fimull
dec
shrb
sbb
mov
mov
out
addr16
push
jl
cmc
imul
mov
outsl
and
gs
inc
imul
in
or
or
call
cltd
test
ds
xor
ret
xor
xchg
and
jne
decb
loopne
pop
adc
or
jmp
jnp
and
jb
and
push
push
in
js
ljmp
mov
mov
xchg
lcall
rorb
push
and
adc
push
push
outsb
mov
mov
pop
dec
xor
int
and
fistl
cld
out
add
outsl
ljmp
add
fs
inc
and
lds
jmp
pop
scas
mov
shlb
sbb
iret
or
sub
adc
or
aaa
ret
sahf
insl
jne
mov
cwtl
repnz
in
test
add
jo
cs
in
movsb
ret
cmpsl
jle
jbe
adc
or
inc
and
lock
popa
fndisi(8087
lock
out
outsl
addr16
arpl
pop
cmpsb
out
pop
fisttpl
shrl
xchg
notb
push
and
icebp
push
push
lret
filds
mov
or
fs
lret
repnz
loopne
mov
inc
mov
pusha
mov
xchg
xchg
adc
pop
cmpsl
cli
push
push
adcb
in
es
xor
fcomps
and
mov
outsb
mov
push
nop
dec
adc
gs
mov
cmc
leave
mov
add
add
les
mov
std
push
adc
fs
xor
xchg
mov
adc
add
adc
out
lods
ljmp
cld
loopne
cmp
xchg
dec
jge
add
jecxz
jp
jb
out
xor
dec
int3
and
out
and
lds
xor
aaa
xchg
add
cli
outsl
orl
xchg
xchg
cmp
leave
mov
adc
or
inc
pxor
dec
clc
adc
imull
inc
sbb
inc
adc
pop
test
add
cwtl
or
out
add
negl
sar
es
ret
push
pop
dec
sarb
or
scas
popa
mov
andb
fs
cmpsb
test
xchg
mov
shl
notb
cmp
cmpb
ljmp
cwtl
sub
mov
adc
ds
movsb
mov
sbb
pusha
insb
rclb
stos
push
mov
stc
mov
rcl
jns
or
imul
adc
std
imul
lcall
movl
inc
mov
push
hlt
jb
or
fcoml
iret
movsl
cmp
bndstx
daa
lret
addl
xchg
xchg
incl
xchg
jno
xchg
mov
push
dec
jns
popa
xor
into
adc
pop
cmp
mov
push
repz
push
inc
inc
inc
outsl
lahf
jne
lret
xlat
test
cltd
movsb
mov
ja
sub
mov
aad
jmp
leave
out
add
lock
xor
pop
ret
cmp
dec
js
sbb
and
sbb
xor
xchg
and
repnz
push
lret
aam
movsb
and
imul
jge
leave
in
sub
adc
je
sub
adc
or
add
sahf
add
add
add
mov
add
nop
mov
add
mov
add
adc
add
jae
jbe
push
xlat
dec
adc
aas
loopne
inc
sbb
aad
fidivl
icebp
push
insl
mov
mov
lcall
jmp
cltd
ja
sar
mov
or
sbb
mov
push
fs
nop
cs
pop
xor
jp
jg
jp
xor
mov
mov
and
sub
adcl
stos
lods
add
loope
lods
add
mov
push
mov
mov
sti
xor
jg
pop
cltd
mov
loop
sbb
dec
dec
out
cmc
xchg
push
jmp
push
aas
in
ljmp
push
notb
lods
jo
outsb
jg
pop
pop
fdivs
add
in
out
out
aam
mov
pushf
ds
dec
mov
into
lahf
xchg
mov
and
xchg
cld
lcall
pop
xor
mov
les
or
out
out
mov
fstpt
je
or
adc
mov
or
adcb
jmp
push
adc
jae
mov
repnz
mov
or
sahf
shr
cmp
mov
sarb
pop
pop
mov
aas
jbe
je
cmpl
sahf
test
outsl
stos
push
std
xor
int3
inc
sub
xchg
xchg
jg
aad
and
ja
adc
mov
test
fnstenv
das
mov
pop
out
scas
lods
clc
call
jmp
lock
popa
in
xor
stos
adc
loope
in
jbe
test
les
lds
mov
cmp
push
packuswb
push
and
fdivs
jge
push
xor
jns
fbld
xchg
jnp
add
cmpsb
or
aaa
cmc
xor
mov
adc
cmpsb
sbb
or
bound
test
dec
lret
dec
pop
cmpsl
les
in
lret
into
insb
jl
mov
jnp
xlat
adc
in
sub
rcll
or
ss
je
lods
outsl
test
jne
roll
movsl
repz
xor
cmp
adc
cmp
cmp
enter
jo
add
cmp
push
pusha
push
xchg
adc
pop
aaa
adc
mov
ds
fcoml
mov
add
rcl
stos
xchg
cs
mov
cld
loopne
mov
push
xchg
popf
cmpsb
xchg
lods
inc
add
jb
sahf
and
and
fbstp
loopne
test
dec
xor
insl
pushf
sbbl
push
push
mov
adc
ss
int3
mov
sti
icebp
or
into
out
cmpsb
mov
pop
test
mov
mov
inc
xor
fs
push
sahf
mov
pop
aaa
mov
fidivrl
fcomps
std
dec
jnp
sbbb
cmpl
fxch
repz
faddp
xor
adc
cmp
daa
ljmp
jg
cmp
les
mov
pop
flds
imul
mov
popf
push
push
call
mull
inc
scas
out
inc
cli
push
pop
shlb
push
imul
jne
test
lods
pusha
xchg
out
mov
pop
push
clc
aad
jne
ret
mov
mov
aaa
aad
lds
int
fsubrs
fldl2t
mov
aaa
aaa
hlt
or
push
mov
lds
inc
shll
sub
inc
xchg
sbb
out
fs
push
cltd
aaa
les
pop
subb
push
inc
sub
call
in
imul
cmc
popf
ja
jmp
xchg
flds
or
mov
and
and
sarb
ficomps
adc
gs
imul
cli
push
cmpsb
fstl
shll
jnp
inc
scas
mov
out
out
and
leave
jne
jb
sbb
or
in
test
mov
xchg
dec
xchg
pop
pop
popa
mov
dec
dec
adcb
mov
mov
jb
sub
xor
stc
loope
inc
sub
rorl
cmc
outsl
gs
cmp
push
aam
sub
or
mov
add
roll
inc
mov
jnp
inc
pop
stc
mov
jg
insl
mov
lahf
sbb
test
adc
xchg
xor
push
xor
xchg
dec
xchg
add
sbb
xchg
movsl
inc
xchg
mov
xor
lret
cld
xor
dec
adc
ret
fidivrs
fsubrl
lret
inc
popw
out
push
loopne
add
push
test
lock
mov
pop
adc
mov
mov
out
pushf
int
daa
movsb
mov
and
mov
jbe
push
mov
sub
test
cmpsl
outsl
or
adc
lret
jle
ljmp
insb
jecxz
push
aad
cmc
push
clc
sub
ret
outsl
fwait
push
mov
sub
cltd
inc
pop
mov
ret
jae
jecxz,pt
rorl
and
cmpsb
repz
inc
jbe
push
or
das
sub
fiaddl
dec
sbb
addr16
adc
outsl
dec
adc
int3
mov
andl
and
aam
pop
add
pop
xor
push
mov
jbe
test
jno
mov
pop
inc
add
dec
mov
jbe
dec
sahf
mov
cmp
test
rcrl
popf
jbe
call
lret
in
jnp
and
jl
or
addb
addr16
adc
pop
std
cld
neg
jge
mov
dec
sub
cs
sar
sub
aaa
pop
cmp
cmp
stos
jnp
adc
sbb
push
test
and
icebp
cmpsl
pusha
mov
jmp
aaa
rol
sbb
pop
dec
push
dec
mov
cld
popa
mov
int3
out
ds
xchg
dec
pop
xchg
icebp
jae
inc
hlt
fwait
xor
mov
rorl
xchg
lret
pop
adc
enter
jno
dec
jg
adc
or
xchg
das
out
jae
and
mov
and
inc
jae
mov
jo
into
loope
mov
and
pushf
je
xor
lret
sbb
mov
jb
lcall
ds
dec
mov
inc
sub
mov
in
test
mov
addl
insb
push
sub
psubd
test
call
jbe
outsl
test
jecxz
mov
xor
adc
bound
aaa
shll
movsb
inc
pop
sbb
or
mov
in
popf
shrl
ljmp
mov
jp
xchg
add
movsb
dec
dec
lret
jg
out
lods
iret
xchg
shll
push
aad
adc
bound
movsl
mov
cmp
add
sbb
pushf
sbb
cmp
and
mov
stos
js
pop
nop
add
push
loope
fcmovnu
test
ficoml
nop
popf
jmp
std
clc
dec
out
lods
pushf
sub
cmp
mov
subb
xchg
cld
dec
push
lods
add
out
fstps
gs
into
aam
xchg
fadds
stc
push
push
and
aas
cmp
mov
orl
lret
daa
icebp
fsubrp
popa
xor
lods
adc
pusha
and
mov
lds
sbb
scas
rolb
adcb
xor
dec
inc
nop
inc
jo
mov
mov
mov
mov
xchg
xchg
jmp
inc
push
adc
add
push
push
push
cmp
mov
fincstp
aaa
sub
out
push
lcall
or
pop
andl
popf
adc
in
call
or
or
sub
fisubl
dec
adc
cmp
in
xor
ret
mov
or
mov
sahf
mov
pop
in
ljmp
pop
sub
sbb
dec
lods
jb
lds
xchg
inc
cltd
sub
aam
inc
mov
push
cli
and
bound
outsl
test
lret
lods
stc
shlb
and
adcl
jbe
ljmp
or
aad
push
imul
nop
or
dec
pop
das
loop
aaa
andb
xchg
ljmp
imul
dec
test
std
ret
or
fnstenv
enter
inc
repz
stc
mov
pop
and
jb
fbld
cli
inc
ret
call
jb
lret
mov
push
jl
fistpl
rorb
push
xchg
xor
int
add
in
jle
adcb
cmpsl
jp
mov
andb
xor
xor
fldcw
fwait
stos
xchg
lds
xchg
dec
xchg
cmp
add
jo
jns
loopne
imul
sub
inc
pop
inc
imul
out
inc
push
ss
adc
sub
adc
movb
sbb
and
sbb
insl
cmpsl
icebp
sarb
and
out
push
sbb
in
push
out
or
movsb
jl
icebp
mulb
aad
or
pop
test
mov
lock
sub
mov
lea
inc
or
repnz
shlb
mov
mov
outsl
adc
and
xor
mov
mov
orb
stos
sbb
push
lcall
pushf
xor
insl
mov
pop
sbb
js
mov
xchg
aas
lret
popa
test
in
xchg
enter
sbb
xchg
ficoms
les
inc
mov
xor
loopw
repz
add
loopw
imul
lds
aad
push
mov
cmpsl
or
ljmp
and
ret
shr
cmc
cmp
sbbl
jae
inc
and
mov
cmp
pop
and
icebp
movsb
stos
jge
push
addr16
pop
push
test
sub
mov
das
popf
adc
jg
mov
mov
sbbl
xchg
xor
add
das
mov
mov
xlat
jle
std
jb
jae
add
out
rcrb
mov
xchg
sub
fs
dec
pop
jne
xchg
into
out
insb
cmp
push
nop
jne
inc
xlat
inc
inc
dec
xor
outsl
das
add
and
cltd
int3
mov
or
cmp
and
xor
mov
adc
loop
xchg
push
iret
add
mov
imul
js
mov
sub
jo
xor
and
pop
sbb
scas
test
push
repnz
nop
iret
jp
jp
test
xor
imul
icebp
xchg
sbb
dec
mov
pop
pop
jle
es
jmp
mov
adc
push
push
add
mov
mulb
mov
add
lods
xor
daa
rolb
fbld
xchg
in
mov
movsl
push
ja
add
sahf
out
lock
repz
fs
in
rcl
push
das
lds
add
xchg
leave
mov
fwait
and
mull
adc
fldcw
mov
rorb
dec
lds
imull
loope
jg
bnd
insl
fs
ja
inc
movsl
insb
push
loop
or
sub
int3
sarb
aas
fwait
shll
pop
lcall
pushf
adc
sbb
and
pop
mov
mov
push
add
sahf
jle
jp
pop
stc
aas
and
lahf
scas
loope
mov
add
pop
sbb
repnz
lret
cmp
in
aam
lock
adc
lret
sbb
pop
push
cmpsl
imul
mov
lahf
fisttpl
adc
dec
xor
push
add
fwait
xor
movsb
mov
lcall
fcompl
movsl
dec
mov
daa
and
pop
adc
xchg
push
popa
shlb
xchg
or
mov
push
fs
jne
mov
pop
pop
mov
push
xchg
push
jb
mov
mov
cli
iret
shll
sub
test
cmp
cli
jl
fisttps
push
xchg
push
inc
ficomps
xor
clc
pop
out
and
mov
xchg
daa
call
mov
cmp
jbe
daa
in
adc
mov
mov
fcompl
jne
or
es
out
and
adc
adc
jge
push
push
mov
mov
pop
mov
adc
cmp
mov
std
rcrl
pusha
dec
jle
cwtl
dec
insl
xchg
dec
push
sbb
inc
dec
lods
scas
stos
cmp
outsl
lds
leave
xchg
dec
push
pop
negb
clc
add
test
addr16
add
cmp
inc
cmp
shll
sub
test
dec
inc
pushf
pop
xchg
jge
inc
adc
pop
sahf
ret
sub
rorl
popa
pop
imul
insb
in
pop
aas
pop
inc
dec
ret
ja
sbb
sahf
mov
pop
or
and
pop
mov
mov
lods
mov
rcl
push
inc
cmp
shlb
xchg
outsb
mov
xlat
into
fisttps
ds
filds
stos
and
int
call
xor
mov
and
mov
je
inc
jns
movl
andb
mov
sbb
cmp
inc
xor
add
push
icebp
fnstenv
ficomps
out
cmp
push
aaa
ficoms
test
push
lods
iret
arpl
aam
stos
inc
and
jbe
int3
add
iret
setne
ret
rclb
push
mov
push
xor
push
mov
xlat
neg
adc
dec
ljmp
rcrl
xor
sbb
xor
enter
pushf
jl
pop
pusha
and
push
popa
fs
pusha
xor
negl
and
sub
int3
repz
jnp
push
push
sti
test
movsl
scas
int3
test
js
ja
dec
or
mov
imul
sbb
daa
mov
in
add
test
mov
test
aaa
and
or
jmp
inc
stos
mov
cmp
and
std
xchg
inc
test
inc
jle
insl
stos
lods
sub
adc
mov
outsb
idivb
scas
xlat
mov
pushf
xchg
in
push
into
pop
mov
lods
mov
mov
adc
xchg
sub
js
fisttps
int3
loope
push
notb
fs
mov
fldenv
mov
ljmp
xor
mov
mov
jne
scas
scas
xchg
cmpsl
lahf
icebp
push
insb
sbb
shlb
lea
iret
adc
out
out
nop
push
push
mov
test
lds
aad
sbb
push
xchg
mov
push
xor
fucomp
cmp
aaa
dec
or
shll
jne
mov
add
loop
outsb
and
inc
test
dec
pop
xchg
rorl
das
in
int
pop
adc
jbe
loope
pusha
enter
ja
or
or
inc
jb
and
mov
das
insl
in
cmp
aas
mov
cld
shll
call
dec
pop
repz
mov
mov
xor
pushf
in
mov
mov
out
pusha
jp
roll
dec
mov
mov
js
xchg
sub
test
repz
ljmp
loop
scas
xchg
sbb
stos
add
xlat
stc
iret
jp
sahf
shrd
lods
scas
inc
push
pushf
xlat
and
insb
ds
imul
mov
hlt
mov
push
pop
call
imul
into
repnz
loopne
mov
mov
les
js
fildl
negl
int
loope
loope
sahf
inc
cmp
movsl
adc
pop
push
dec
or
push
out
ljmp
dec
aad
sub
mov
cmc
dec
test
xor
clc
mov
add
addr16
and
ss
cmpsb
xor
lret
sbb
dec
ret
xchg
xchg
add
xor
fsts
clc
into
andl
outsb
push
sub
nop
cmpsl
or
xor
out
fs
pop
stos
ds
adcl
pop
or
push
lods
xchg
add
cmp
jg
shll
shrl
add
adc
insl
pop
decl
or
ja
jg
add
outsb
dec
jnp
mov
or
or
xchg
xor
out
stos
push
pop
adcb
or
pusha
les
mov
adc
bound
mov
and
mov
sub
icebp
sub
sub
enter
cmp
popa
dec
mov
pop
sub
cmc
fidivrl
mov
ja
ja
or
jg
pop
jg
lret
pop
repz
in
and
push
mov
inc
loopne
fwait
test
mov
mov
lcall
sub
rcll
mov
test
mov
gs
sub
shll
fbstp
mov
jecxz
fsubl
fistpll
xor
dec
push
movsb
loopne
stos
sarl
cmc
inc
push
and
loope
rcl
xchg
imul
imul
inc
xlat
orl
pusha
fsubl
sbb
fists
xchg
mov
insl
mov
lods
adc
aad
test
cmpsl
orb
rcr
jmp
mov
jnp
out
mov
cmp
mov
cmc
pop
imul
push
test
lcall
xor
out
cmp
cmp
xchg
mov
stc
mov
movaps
popa
in
loopne
dec
and
int3
test
lcall
ss
push
fnstsw
add
add
loope
xchg
in
mov
test
fsubs
addr16
xchg
popf
xchg
popa
loop
repz
dec
push
push
insb
ljmp
xor
aam
and
pop
xchg
stos
lea
mov
bound
leave
cmp
cmp
sbb
xchg
aaa
inc
push
mov
add
aas
adc
mov
roll
dec
cli
aas
add
add
popa
dec
jp
mov
out
add
nop
xchg
sub
shrl
or
xlat
mov
mov
and
add
mov
loopne
ss
or
jne
inc
sbbb
mov
shrb
lcall
xor
mov
popa
fnstcw
repnz
std
xchg
adc
fnstsw
cltd
call
idivb
push
gs
fdivp
mov
das
insl
ror
adc
dec
lret
insb
sub
stc
jg
xchg
sbbl
idivl
call
imul
add
sahf
add
mov
mov
sub
push
xchg
je
add
pop
ror
sbb
lret
icebp
test
xchg
cli
lret
push
or
xchg
sub
jno
js
int3
push
jne
data16
push
push
and
movsl
subl
fcmovnbe
cltd
cs
fisubrs
adcb
or
into
push
jne
mov
add
adc
xor
movsb
or
cmp
pop
insb
lret
cmp
adc
scas
add
dec
pushf
insl
jp
das
push
mov
inc
shll
jnp
stos
das
mov
test
and
inc
push
cmp
jo
adc
int
sbb
and
jno
popa
sub
push
add
dec
negl
mov
jle
int
jo
pop
xchg
es
jmp
fistpl
clc
pop
push
repnz
lock
inc
loope
pop
push
sbb
jge
xchg
cltd
out
adc
or
ret
iret
push
mov
mov
mov
or
lods
inc
fdivrl
xchg
mov
pop
lret
sub
and
loope
mov
push
notl
hlt
cmp
inc
loope
dec
xor
sub
addb
sub
hlt
sub
xor
stos
xorb
sti
sbb
jge
sbb
mov
jmp
fcom
mov
int3
mov
lcall
ja
stos
mov
and
pop
adc
into
or
pop
sub
inc
mov
test
enter
mov
push
dec
ficomps
push
sahf
mov
outsl
cmpsb
jo
imul
push
xor
inc
out
das
sub
jg
jne
xchg
add
andb
test
test
dec
les
jecxz
inc
test
jle
adc
cmp
xchg
jnp
dec
dec
filds
lods
aam
lea
add
add
cmp
imull
xsha1
cmpsb
dec
dec
sbb
dec
loop
addb
or
jecxz
xchg
ds
insl
dec
lods
push
dec
test
imul
mov
lods
cwtl
inc
sbb
ss
lods
in
incb
adc
stos
inc
dec
push
add
xadd
cmpsb
popf
shlb
pop
dec
xchg
cmpsl
mov
adc
sahf
or
imul
lods
cmp
out
mov
dec
shll
jp
mov
pop
rorl
ja
jle
and
add
add
out
pusha
mov
test
pop
in
pop
sbb
dec
and
iret
and
fcom
mov
fsubs
fcmovu
mov
mov
inc
int3
fs
lock
xor
lods
sbb
xchg
add
mov
es
lahf
out
adc
mov
mov
rolb
and
xlat
sbb
jns,pn
cmc
pop
sbb
and
xor
xchg
roll
movsl
push
pop
jnp
jno
popa
fmul
gs
adc
cmp
push
ret
cmp
ret
xor
negb
nop
std
add
sbb
fnstcw
lods
mov
ja
xchg
pop
les
mov
inc
jno
js
popa
test
repnz
mov
mov
fs
repnz
dec
repz
add
jg
add
cmp
dec
pandn
aad
dec
vmwrite
mov
inc
lcall
pop
loope
cltd
in
adc
pushl
mov
inc
pop
out
js
dec
insb
test
push
add
mov
xor
xchg
scas
idivl
cmp
mov
outsb
push
repnz
adc
add
or
fmuls
push
rcll
jns
xor
iret
push
sbb
mov
aad
jns
inc
pop
jae
test
mov
mov
jmp
std
mov
xor
mov
mov
push
xchg
xor
adc
loop
pop
jae
jl
push
inc
or
ss
push
cmpsl
push
inc
mov
js
xchg
in
cli
inc
mov
divb
in
jae
insl
popf
jbe
shll
arpl
shlb
out
push
dec
aad
sub
imul
insl
out
pop
imul
add
lahf
push
in
xchg
out
lock
mov
push
sbb
out
jg
and
addr16
call
bound
adc
jecxz
adc
out
or
xchg
mov
sub
push
pop
mov
cld
ja
inc
stc
mov
xchg
xor
ss
dec
outsb
jl
test
add
in
and
push
js
pop
adc
test
lea
push
sbb
xor
sub
fimull
mov
mov
push
jg
fwait
int3
sub
xor
insb
xor
sub
jae
push
pop
fs
xorb
push
pop
int
pop
shlb
fwait
pop
or
pop
xorl
pop
dec
mov
pop
sbb
xchg
mov
test
jmp
mov
out
shrb
and
popa
mov
add
mulb
xchg
aaa
pop
xchg
mov
test
shrb
into
xor
jb
fwait
or
jnp
push
jp
fldl
mov
xchg
inc
in
lods
out
aad
sar
addb
fs
push
xor
dec
jg
mov
cmp
clc
xor
or
pop
into
ret
cwtl
mov
mov
adc
add
fs
movsb
and
leave
les
sahf
xor
stos
inc
adc
cmp
jo
pop
or
sbb
xchg
xor
cltd
das
mov
cmpsl
dec
push
sub
inc
mov
jne
in
cmpsl
xchg
sbb
or
int3
in
jno
or
ret
xlat
mov
inc
pop
mov
pusha
or
sbbb
rcll
adc
pop
fsubp
out
add
fisubrs
psubsw
push
in
add
mov
add
pop
ja
loop
lahf
xchg
xlat
pop
push
sbb
repnz
cli
lock
lods
mov
pop
xchg
inc
scas
or
adc
inc
pushf
js
sub
std
scas
lcall
xchg
pop
push
cmp
dec
nop
fisttpll
outsb
and
scas
xlat
mov
insb
ret
add
push
pop
loopne
cmp
push
sub
push
js
ret
xor
inc
ficompl
mov
jl
or
out
aam
repnz
push
aas
lahf
out
sub
cmp
mov
aam
cld
jne
mov
negb
pop
sub
pop
movsb
insl
cmpsb
push
jb
or
jb
add
jo
add
push
jg
lret
sti
xchg
loope
or
repz
insb
notl
xor
mov
mov
mov
mov
add
and
pop
mov
add
insb
xchg
sbb
lock
push
xor
fiaddl
ret
popa
dec
mov
inc
ret
mov
sub
dec
add
in
ret
pop
lcall
loop
mov
sub
or
add
push
orb
inc
cmc
mov
or
xor
bound
mov
xor
pop
pop
mov
lods
and
xchg
xchg
ffreep
icebp
ss
arpl
pop
pop
les
cld
jl
lods
jmp
ret
or
mov
pop
bound
mul
sub
pushf
data16
jmp
pop
aam
stc
jae
adc
mov
sub
outsl
aad
add
dec
test
adc
fucom
pop
jge
mov
sahf
loopne
das
adcl
lahf
add
and
mov
or
outsb
mov
mov
xor
in
mov
call
shlb
mov
lcall
push
pop
loop
adc
ljmp
pop
xlat
fwait
jle
cli
sbb
cmpsb
mov
outsl
rorb
scas
xlat
daa
adc
test
cld
movsb
and
jp
jno
adc
mov
xchg
stos
in
jne
out
cli
iret
sahf
push
je
insb
and
jge
ljmp
mov
jae
mov
addr16
xchg
adc
cmc
pop
and
add
in
in
loope
test
mov
loop
add
jge
ret
sbb
fwait
sub
or
xor
dec
cmpsl
push
test
sbb
repz
fdivs
ror
mov
ss
std
lahf
jnp
dec
aas
cmp
cmp
imul
pop
test
pop
inc
pop
aas
mov
jb
mov
jbe
iret
xor
jo
fidivl
add
adc
test
test
insb
scas
aad
xchg
in
add
xchg
js
jb
push
mov
clc
dec
data16
gs
cmp
and
icebp
mov
and
dec
push
test
insl
movb
xlat
mov
pushl
aas
add
stc
nop
testl
add
sub
js
dec
and
out
cwtl
jmp
mov
nop
shlb
in
sub
xchg
adc
mov
fcompl
mov
call
push
es
jb
sbb
rorb
shl
lock
fimull
adc
call
pop
lea
repz
rorb
rorb
lret
and
cmp
call
adc
add
jl
fiaddl
sub
sbb
aas
sub
mov
jb
mov
loopne
adc
in
dec
outsb
sub
dec
pop
and
pop
jg
repz
cmp
scas
movsb
cmp
bound
test
icebp
and
lea
xchg
lcall
ret
popa
pusha
in
mov
pop
in
enter
dec
jb
cmp
cmp
gs
fisubs
popf
xor
aad
push
mov
mov
jg
add
pushl
sti
lds
cld
sbb
pop
and
les
xchg
push
xchg
jnp
or
lahf
cmp
push
stc
repz
in
xor
cmpsb
cmp
mov
lret
mov
aam
xlat
inc
push
xor
push
pop
rorb
and
popf
and
push
xchg
shl
pushf
jge
shll
push
sbb
jae
test
fwait
inc
out
inc
cs
mov
sub
stos
sti
inc
loope
sbb
test
push
out
xor
or
jnp
pop
and
mov
pop
cltd
inc
stc
data16
inc
sbb
lea
mov
mov
cmp
add
jp
loopnew
mov
leave
sbb
mov
push
add
pop
jb
ss
jmp
mul
xor
xchg
cmc
popf
adc
dec
data16
xchg
fcompl
addl
iret
outsl
push
test
cmp
cmc
jmp
pop
mov
fldenv
addr16
mov
aas
cld
dec
push
push
pusha
call
add
sahf
sti
adc
adc
leave
fldl
xchg
mov
das
loop
cld
mov
jp
cmp
mov
insl
push
mov
lods
imul
mov
int
jo
push
xor
outsl
daa
into
int
mov
cmp
movsl
call
and
sub
imul
hlt
loopne
ds
mov
mov
jecxz
lret
test
mov
ja
fnsave
sbb
cmp
and
lcall
std
xchg
ret
xchg
adcl
mov
aas
outsl
mov
jg
mov
add
add
mov
push
jns
sahf
xor
xchg
dec
xor
dec
mov
sarb
outsb
lods
push
fsubrs
insl
repz
sbbb
int
and
push
fcmovu
mov
leave
pop
or
xchg
adc
and
pop
and
test
push
mov
out
scas
or
popf
cwtl
or
mov
popa
cld
pusha
or
push
sbb
mov
fs
mov
das
in
cmc
dec
push
loope
xchg
hlt
orl
hlt
test
jp
push
repz
push
cmp
call
jl
test
jmp
push
mov
push
jge
dec
insb
cs
dec
or
dec
test
sbb
das
mov
push
jb
cmp
cmp
dec
xor
and
jae
adc
xor
inc
bound
repnz
jne
pushw
clc
inc
movsl
out
mov
and
cmp
cmova
cmp
mov
es
and
inc
inc
pop
adc
mov
or
push
repnz
mov
addb
jnp
inc
inc
dec
mov
fwait
cmpsb
jmp
pop
mov
dec
int
int
cmpsb
fsubl
sbb
and
mov
stos
push
call
mov
mov
lea
mov
stos
xor
out
adc
shlb
adc
loopne
pop
dec
inc
ja
hlt
pop
cmc
addr16
xor
int3
imul
enter
or
aam
sbb
sarb
lret
mov
movsb
mov
jp
ss
push
es
bound
push
mov
cwtl
jnp
dec
out
and
stc
loope
pop
cmp
mov
mov
mov
mov
std
dec
test
daa
jb
daa
xlat
fdivrl
outsb
sub
mov
shlb
mov
pop
addr16
xchg
xor
ljmp
bound
xor
fsub
out
test
imulb
cwtl
aam
imul
sub
int3
ret
xor
in
and
mov
mov
adc
lea
addr16
inc
jp
lock
cltd
mov
lcall
sub
push
push
les
out
ds
js
inc
pop
pushf
mov
xchg
cmpsl
imul
sbb
jbe
and
xor
pop
pop
jge
loop
mov
js
fwait
cltd
aad
scas
xlat
inc
sbb
xchg
insl
mov
repnz
add
xchg
sub
cmp
scas
xor
sbb
shlb
aaa
mov
pop
xor
les
cwtl
pop
cs
stos
mov
jmp
or
aaa
not
or
lret
jne
rorl
sbb
cmp
or
push
jge
sbb
sub
fidivl
test
sub
mov
leave
aaa
daa
inc
loopne
xor
cmp
popf
add
or
movsl
add
div
cmp
ja
cmp
sti
bound
jmp
jb
mov
lods
scas
dec
rolb
sub
pop
xor
aam
mov
or
insl
jg
mov
or
adc
mov
addb
mov
and
pop
mov
int
jae
call
imul
mov
leave
sbb
dec
xchg
xchg
es
gs
push
mov
fisubl
jne
ss
leave
fcmovnb
dec
pop
vfnmsub213pd
frstor
pop
jmp
loop
das
pop
inc
sarl
mov
mov
mov
mov
fwait
lret
dec
add
outsl
sub
dec
scas
ds
cmpsl
sbb
and
in
das
mov
dec
xor
enter
in
pop
cwtl
jp
lret
mov
divl
mov
fwait
pop
jecxz
jl
jo
stos
mov
clc
dec
movsb
lcall
pop
pop
out
pop
push
jno
inc
lods
sbb
sub
mov
push
lahf
in
cli
add
pop
push
loop
sub
scas
das
push
js
add
je
lods
xchg
push
push
jg
roll
dec
and
cmp
pushfw
mov
and
xchg
pop
adc
mov
dec
jo
xchg
inc
arpl
loop
inc
pop
imul
ds
imul
stos
mov
xor
inc
mov
add
and
popa
and
push
sarl
xchg
outsb
lea
adc
jge
test
dec
jnp
jb
loopne
in
xchg
sbb
jle
cmp
or
in
mov
adc
fldcw
push
lea
ss
js
movsl
pop
mov
add
pop
cmp
fdivrl
shlb
cmc
out
sbb
adc
add
test
cltd
lret
clc
out
and
cmp
push
sbb
jno
sub
jne
imul
outsb
lds
push
or
push
ja
cmp
mov
pop
add
lret
aam
add
xchg
mov
sub
lret
loope
and
imul
sbb
cmpsl
scas
cltd
inc
orb
adcl
lods
fcomps
sbb
xor
fidivrs
jmp
inc
push
call
shrb
cmp
xchg
leave
lcall
in
mov
push
pop
orl
add
push
xchg
jle
or
inc
push
sub
jbe
cmp
sahf
pop
orl
fdivrl
xor
xor
jle
jle
fnstsw
xor
dec
and
xchg
clc
sahf
cmpsl
mov
mov
pop
xor
pusha
rorb
mov
adc
call
xchg
rcrl
stos
xchg
and
mov
stos
pop
xchg
or
sbb
fwait
arpl
jg
aad
ljmp
sar
jns,pt
mov
das
nop
testl
xlat
dec
les
cmp
inc
rorl
sbb
andl
inc
mov
stc
mov
mov
in
add
and
vpmulhw
jmp
in
aam
lods
shll
lds
xchg
repnz
pop
push
mov
jg
xorl
xchg
xlat
push
lock
imul
xor
dec
add
mov
sahf
cmp
dec
adc
add
inc
push
or
cmpsb
mov
mov
rcrl
in
push
or
jp
dec
mov
test
rolb
shl
adc
popa
dec
int3
add
int
xchg
repnz
loopne
cmp
dec
test
jg
cmc
mov
aam
fsubl
enter
or
std
cli
and
loopne
jne
xlat
hlt
in
add
dec
gs
clc
fwait
pop
loopne
pop
pop
sub
adc
loope
ljmp
rclb
jns
insl
sti
mov
out
insb
mov
or
testl
or
lahf
popa
popa
mov
hlt
mov
movsl
mov
or
les
xor
test
cmpsl
rcr
fidivrl
jp
jmp
xor
cmp
das
out
les
inc
or
adc
jg
fldcw
mov
enter
loope
pop
cltd
fistl
and
xchg
leave
push
mov
aam
mov
cmpsb
xlat
xchg
rorl
adc
inc
mov
in
psadbw
out
inc
mov
dec
push
mov
ror
or
jnp
and
jb
dec
aam
clc
test
shll
and
icebp
mov
into
pop
ljmp
sbb
shll
xor
ss
pop
pop
pop
jl
dec
sar
divb
dec
stc
or
cli
aad
dec
subl
mov
test
sub
and
loop
mov
pop
xchg
lret
sysenter
shll
subl
and
rcrb
mov
roll
call
clc
jns
imul
adc
push
pop
mov
pop
sbb
cmpl
adc
pop
sti
cmc
call
int3
or
jge
mov
sbb
cmp
push
stc
mov
leave
fistpll
or
push
sub
cltd
xor
ljmp
push
lret
aas
push
inc
sub
bound
scas
adc
movsl
fldt
add
pushf
pop
test
sahf
push
jo
push
mov
mov
mov
in
addr16
adc
mov
cmc
and
stos
xchg
stos
test
adc
pop
jl
pop
stos
andl
adc
adc
imul
cmc
jae
sti
orb
cmp
and
sarb
das
fs
lods
pop
test
sub
sahf
cmp
aas
sbb
movsb
js
or
lods
cmpsl
xchg
dec
lret
gs
or
movsl
sub
jbe
inc
ljmp
mov
dec
mov
lock
lahf
or
cmp
movsb
ror
das
lcall
jo
pop
rorb
movsl
outsl
dec
cmp
pop
sbb
add
out
in
pop
aas
mov
das
or
mov
clc
out
imull
cs
mov
dec
repz
in
les
sarb
fsub
js
orb
mov
jne
lods
in
push
xlat
stos
clc
cmp
dec
xor
inc
xor
pop
dec
cltd
je
xchg
cmp
cmp
pop
in
pop
daa
in
aas
push
loopne
cmp
in
push
xlat
push
pop
js
popf
xchg
and
pop
jae
repnz
mov
lahf
addr16
and
pop
jnp
sbb
push
sbb
orl
cmp
aaa
jl
rorl
fcoml
xchg
pop
jecxz
pop
push
insl
test
test
stos
cld
int
push
cmpsl
add
movsl
mov
mov
rcrl
sub
insl
stos
push
imul
dec
xchg
je
xor
stc
mov
or
and
cli
pushf
insb
shl
cld
out
push
adc
jmp
jge
pop
bound
add
xchg
pop
mov
add
inc
fstl
sbb
xor
sub
movsb
sbb
iret
ror
jmp
clc
aam
ss
cmp
insb
popa
jbe
inc
push
pop
testl
xchg
jne
cltd
pop
xchg
cmp
sub
or
fnsave
sbb
insb
bound
mov
adc
pop
and
dec
mov
popa
and
sbbb
int3
orl
cmpsb
imul
sarl
and
loop
std
bound
add
cmc
movsb
push
add
or
xchg
cmc
hlt
mov
pop
ret
dec
push
test
orl
lods
xor
scas
sub
mov
dec
es
std
std
xor
cli
sub
fcomps
push
jl
pop
mov
adc
cmp
fstpl
adcb
lods
hlt
aad
or
lahf
jno
sub
sbb
test
and
cmp
divb
in
xlat
mov
into
dec
push
mov
push
mov
data16
jns
je
push
jg
mov
push
and
sarb
aaa
jl
pusha
loopne
dec
andl
rolb
cs
fstpl
sar
js
out
popa
sbb
sub
cmp
loopne
push
adc
aam
dec
mov
mov
stc
pop
or
fs
mov
jecxz
jp
adc
sahf
xor
stos
fwait
push
scas
jno
pop
xchg
iret
mov
popf
mov
pop
jl
incl
in
aas
inc
inc
aam
mov
stc
inc
out
loopne
add
xor
test
xchg
je
jno
in
in
adc
enter
jmp
xor
mov
cmc
dec
aad
shll
lcall
inc
cli
repz
xchg
lods
jg
cmp
push
call
out
es
mov
fs
loop
pushf
ds
out
adc
ret
adc
fisubs
pop
popf
fdivr
popf
push
out
jmp
xor
jne
int
imul
adc
xor
movsl
xor
arpl
pop
push
imul
call
test
push
inc
pop
pop
test
xor
lret
int3
xchg
adc
pop
cmp
xchg
or
mov
jne
cmp
arpl
push
ljmp
cs
pop
pop
mov
test
fs
pop
pop
mov
xor
add
dec
fwait
xchg
stc
mov
pushf
mov
popa
scas
repz
push
or
aas
adc
pop
gs
mov
xchg
jp
mov
in
push
sub
inc
es
movsb
ja
cmp
inc
into
test
adc
decb
adc
push
fnsave
das
mov
sbb
xor
mov
in
add
dec
push
jge
jle
cmp
pop
jns
inc
push
ss
loopne
push
mov
ret
and
imul
inc
lea
in
add
sub
pop
out
cmp
cwtl
lock
jo
mov
movsl
mov
jl
jmp
dec
popa
push
gs
cltd
push
cmp
dec
cltd
add
add
xchg
jmp
mov
stc
gs
pop
adc
jbe
and
inc
cmc
mov
in
sub
test
xchg
push
ss
ret
inc
adc
in
jns
xor
repz
cwtl
xchg
dec
or
lcall
repz
mov
test
movsl
pop
jbe
imul
ljmp
ja
je
pop
repz
jmp
mov
dec
cs
stos
xor
jecxz
mov
clc
mov
out
or
xchg
fdivrl
push
mov
and
push
lods
mov
pop
je
jne
pop
sub
or
or
jmp
jg
popf
sarl
xor
test
or
int3
lret
mov
test
cmp
stos
cltd
xchg
cmpsl
mov
pop
sahf
rorb
mov
rol
cmp
push
fdivr
adc
daa
scas
xor
gs
inc
int
sahf
out
cmp
or
int
pop
jne
sub
sbb
lret
scas
cmp
int3
into
into
cwtl
js
inc
negb
cmp
add
loop
xchg
rcrl
es
mov
sbb
in
lock
adc
int
mov
jne
mov
xor
iret
push
dec
jge
fisubrs
rorb
xchg
movl
cmp
jo
cmpsl
jecxz
icebp
xchg
xchg
addr16
pop
lret
pop
mov
stc
mov
ror
out
les
cli
adc
cwtl
adc
sub
in
std
stos
dec
push
jecxz
xorb
jne
fildl
in
cmpsb
subl
ds
xor
mov
cmc
das
ss
call
inc
xchg
mov
inc
gs
cmp
mov
mov
bnd
popl
ficoms
xchg
in
lcall
cmp
push
sbb
inc
popa
mov
pop
push
sbb
filds
fisubs
int3
popa
mov
sbb
lods
jge
mov
pop
les
dec
outsb
xchg
mov
pop
js
in
iret
jne
xchg
mov
xor
jp
out
cs
pop
loope
insb
sub
mov
daa
and
loopne
fs
sub
roll
pop
loopne
lea
or
js
inc
xlat
hlt
and
mov
loopne
int
sbb
add
push
mov
and
out
inc
cmp
inc
add
scas
adc
mov
stos
inc
into
add
sub
or
or
or
xor
mov
mov
test
cmp
pusha
ljmp
subl
mov
push
mov
insl
js
divb
addr16
sbb
push
movsl
out
out
repz
test
cmpsb
cltd
add
mov
lea
jge
dec
imul
jmp
xchg
inc
out
cmc
jae
sahf
in
iret
pop
push
stos
mov
mov
add
nop
jne
mov
lcall
data16
in
aas
hlt
test
fmulp
insb
and
pop
les
aas
pop
cli
push
or
xchg
in
dec
and
sbb
fwait
lret
pop
pushf
jg
scas
mov
dec
push
add
repz
add
repnz
enter
mov
jg
xchg
xor
scas
scas
pop
inc
imul
rclb
pop
and
in
xlat
test
out
mov
js
inc
insl
jmp
jbe
cmp
sbb
and
sub
movsb
xchg
out
mov
test
addb
idiv
push
rcl
mov
add
notl
xchg
inc
add
cmc
and
sbb
test
outsb
cmp
and
out
or
into
test
xchg
clc
sub
push
add
rcrb
push
jmp
insl
cld
rcrb
decb
and
mov
test
lcall
ljmp
xor
mov
adc
sub
adc
lods
test
fsubrl
push
add
xor
mov
sub
xchg
add
pusha
lret
loop
cmp
xor
adcl
xor
daa
mov
mov
mov
sub
sbb
call
inc
push
shrl
std
push
mov
test
cmpsb
adc
lds
or
jbe
movsb
or
jge
in
inc
or
push
fimuls
cmp
push
in
xchg
jmp
bound
adc
pop
movsl
jns
shll
repz
cld
mov
push
fcomip
xor
sbb
push
mov
dec
mov
addb
add
jnp
inc
js
cmc
scas
daa
jl
mov
pop
pop
push
add
dec
pop
enter
mov
mov
cld
dec
lods
and
std
enter
aam
testb
adc
ret
push
fwait
popf
dec
mov
sub
dec
daa
andb
dec
push
movsb
add
cs
mov
sub
lcall
push
sub
or
sbb
push
add
mov
pushf
and
xchg
mov
sub
gs
mov
cli
fsubrl
pop
jbe
adc
ss
in
rorb
mov
xor
cs
push
pop
movsb
rolb
test
and
in
in
add
jbe
mov
lea
xchg
and
fcomp
jle
lret
fdivr
mov
xor
jns
xchg
pop
and
jmp
sti
or
inc
or
inc
shll
jbe
sbb
dec
push
or
jge
repz
mov
inc
pop
clc
cld
or
xorl
mov
movsl
jg
jge
cmp
xor
cli
imul
mov
pop
jb
pop
xchg
mov
aam
push
out
shlb
xchg
add
imul
pop
das
push
push
popa
negb
adc
pop
rorb
mov
fcomi
je
sbb
std
mov
or
adc
mov
and
adc
xorl
adc
mov
jmp
test
push
push
pop
retw
xchg
sub
repz
aaa
sub
jae
loope
insb
cmp
jecxz
sub
fadd
pop
mov
dec
or
ret
fs
mov
sbb
imul
push
outsl
aaa
mov
xchg
inc
mov
jbe
lods
inc
cmp
add
adc
cmpsb
adc
push
sti
or
mov
dec
aas
cs
inc
ret
ficompl
adc
inc
test
gs
test
jmp
cli
push
lahf
outsl
scas
scas
mov
pop
adc
out
cld
fs
mov
std
int3
mov
jg
orl
test
dec
pop
stc
jae
fildl
cmp
lds
or
jae
mov
jo
notl
nop
xchg
dec
mov
and
xchg
ljmp
xchg
dec
mov
dec
sub
and
push
mov
pop
jo
mov
lods
dec
sub
in
cwtl
out
movsl
das
jecxz
mov
and
push
subl
jns
dec
adc
inc
shlb
jg
int3
pop
jle
rolb
or
cmp
mov
pop
pushf
sbb
imul
mov
jge
mov
mov
cmc
pop
mov
cltd
pop
subl
cs
jnp
sub
andb
inc
addr16
jmp
dec
cmpsb
out
mov
in
cmp
mov
test
or
or
mov
loopne
xor
push
jl
xchg
ja
push
lcall
aam
test
icebp
sbb
orb
xchg
mov
icebp
fidivl
jbe
xchg
push
movsl
mov
les
mov
push
das
cmpsb
sub
inc
and
adc
push
push
das
clc
pushf
cli
or
mov
adc
into
stos
push
pop
pop
mov
mov
stc
add
ja
fiadds
cmc
xchg
sub
and
sbb
xor
cli
repz
daa
sbb
xchg
hlt
cmp
inc
sbb
cmp
push
jl
lods
sub
mov
add
jmp
pop
insl
out
jg
jle
dec
in
insb
jge
sub
push
notb
add
mov
cld
leave
pusha
popf
inc
pop
gs
cli
test
cmp
pushf
aaa
mov
cld
mov
mov
movsb
pop
shrl
sub
jl
sbb
pop
je
jge
fdivs
push
sbbb
push
push
fisttps
mov
int
mov
in
outsb
jl
imul
fdivrs
cmp
mov
or
into
push
rorl
jo
divl
into
inc
xchg
jg
insb
js
cs
inc
lds
mov
xchg
mov
and
lock
ror
pop
mov
inc
iret
ss
mov
pushf
push
mov
sub
xchg
xor
mov
mov
sarb
fdiv
cmp
je
das
sbb
xchg
outsl
xor
cwtl
push
jae
insl
push
dec
mov
jl
into
jge
clc
add
add
fcoms
imul
pop
out
or
or
mov
in
jnp
adc
jmp
cwtl
test
inc
xor
sub
add
or
mov
lea
pop
push
xor
or
repz
cmp
je
stos
pop
inc
gs
subl
mov
push
xchg
pop
ret
loop
add
mov
xchg
call
lds
aad
ror
filds
mov
dec
mov
pop
divps
xchg
mov
push
dec
cmc
scas
lret
inc
pop
sub
pop
cmpsb
jo
cmp
lret
mov
xchg
cmpl
mov
scas
jp
mov
imul
subl
shll
mov
jle
mov
out
sarb
rcr
sub
push
mov
push
rcl
loopne
fwait
and
sub
cmp
xor
lahf
lcall
pop
insl
mov
pop
dec
jle
in
aaa
arpl
cmp
add
xchg
mov
jns
lcall
push
hlt
stc
les
js
jmp
test
andb
popa
lods
mov
push
pop
or
outsb
scas
faddl
xchg
add
fdivrl
xor
jbe
cmp
repnz
mov
pop
loopne
cwtl
rcl
xchg
outsb
mov
fisubrl
mov
les
cld
dec
lds
imul
xlat
decb
push
sbb
fimull
push
xchg
or
jecxz
fs
sbb
xor
add
aad
cltd
xchg
push
jg
add
cmpsb
gs
mov
pop
cmp
loop
push
aad
pop
and
shrl
outsb
clc
dec
mov
cmpb
or
insl
cli
cld
push
iret
pop
imul
repz
adc
cmpsl
les
cs
sbb
pop
pop
inc
in
dec
stos
sbb
mov
cmp
cld
dec
mov
outsl
scas
pushf
pop
mov
icebp
xchg
call
lea
test
jg
popa
pop
xor
loope
out
bswap
dec
sub
pop
sti
mov
jno
inc
sbb
mov
lods
and
in
adc
lret
scas
in
dec
mov
mov
jl
cmp
fucomip
add
mov
jl
lods
or
cmp
cwtl
sti
inc
mov
outsb
rorl
mov
jbe
xchg
lds
push
inc
incb
outsb
lret
repnz
pop
daa
sub
dec
movsb
pop
xchg
roll
loope,pt
pop
int3
mov
in
shll
insl
aaa
out
mov
add
fcoms
push
xorl
pop
out
stc
outsb
mov
xor
das
adc
mov
pop
or
lcall
or
pop
push
mov
adc
das
mov
pop
cmp
icebp
aas
clc
push
outsl
cmpl
and
in
adc
dec
mov
mov
mov
mov
hlt
aas
out
dec
pop
xor
mov
mov
mov
xor
inc
test
outsl
cmp
clc
sbb
inc
jno
flds
or
lcall
negl
push
out
xchg
jnp
jmp
outsl
fidivl
shl
call
adc
stc
loope
sbb
inc
push
push
data16
test
jp
xchg
sub
lcall
xor
pop
lret
inc
adc
loop
or
fucomp
xlat
cmp
mov
xchg
add
movsb
xor
mov
add
adc
mov
cltd
mov
mov
jnp
add
push
pop
lods
push
loope
pop
jb
test
xchg
insb
xchg
mov
scas
aas
xchg
cltd
xchg
dec
scas
xor
pushf
in
sub
sub
inc
sbb
lret
das
inc
dec
mov
jp
movsb
jl
sub
ja
pop
mov
pop
mov
or
cmpsb
mov
fbld
testl
adc
add
xor
ret
or
icebp
sub
ret
clc
jnp
pusha
insb
das
js
int
insl
movb
aam
jns
jno
call
outsb
xor
jnp
push
sub
push
cmp
cmpsl
sbb
sti
mov
lock
xor
aam
adc
sar
jo
es
jno
sti
sub
sub
ljmp
icebp
fists
jge
adc
pop
test
call
icebp
pop
fcmove
ds
ss
imul
dec
add
sahf
es
dec
idivb
add
or
ss
sti
sbb
cs
add
push
xor
push
or
leave
sbb
fbld
mov
mov
sti
and
imul
or
xchg
jmp
fstl
dec
int
mov
push
bound
lret
int3
push
ror
mov
push
mov
add
jae
mov
xor
xchg
pop
aam
sub
mov
jg
ficoml
repnz
adc
push
pop
cli
les
and
mov
out
dec
mov
jns
and
adc
popa
popf
bound
cwtl
sbb
pushf
sti
mov
pop
xor
insl
sub
mov
inc
sub
in
mov
inc
dec
jne
dec
jae
mov
cmc
out
jecxz
fmuls
lret
dec
pusha
sti
cld
jae
push
nop
xlat
add
clc
jg
mov
adc
ds
jmp
xor
fldcw
push
int
adc
push
in
pop
add
xor
inc
jb
and
push
xor
inc
mov
inc
mov
jp
sbb
mov
test
mov
cmp
sub
xchg
iret
int3
movhps
enter
or
leave
js
in
or
cmpsl
jno
and
ja
mov
rorb
sub
add
into
push
pop
ljmp
nop
cmp
mov
xorb
and
ficomps
iret
add
cmp
repz
push
inc
push
loope
sub
or
jmp
sbb
and
push
sub
pop
movsb
add
push
aas
pop
dec
mov
mov
das
inc
ja
fmuls
xor
jl
mov
xorl
cwtl
dec
inc
loop
sbb
mov
dec
adc
jns
dec
adc
movsb
addr16
mov
xchg
in
pop
pop
jbe
pusha
test
sbb
inc
imul
jmp
cwtl
mov
mov
push
inc
or
inc
popf
dec
or
jb
mov
mov
test
lcall
movsl
jle
xor
mov
mov
mov
fisttpll
mov
adc
adcb
arpl
mov
cld
and
jnp
inc
cmp
aad
das
adc
pop
xor
nop
push
or
dec
rcrl
dec
imul
and
sbb
lret
jns
rcrl
ret
mov
loop
nop
push
xlat
dec
inc
mov
cli
sbb
mov
rorb
stos
pop
fcmovb
mov
sub
cmp
lret
push
into
out
lock
inc
and
int3
rorb
scas
pop
add
arpl
call
xor
mov
sarb
rolb
xor
mov
push
pop
inc
mov
and
push
add
and
in
pop
rcl
fiaddl
cwtl
inc
pop
das
push
adc
loopne
addr16
loope
test
push
mov
cld
dec
push
stc
divb
stc
xor
shll
mov
mov
stc
dec
mov
add
sub
mov
or
inc
xor
cmpsb
dec
xchg
repnz
inc
sti
xchg
sbb
dec
dec
and
shlb
xlat
pusha
std
mov
arpl
inc
iret
push
jge
push
inc
cmpsb
lcall
ss
aad
sub
xorb
aaa
adc
adc
push
and
lahf
mov
sbb
push
xor
mov
inc
sbb
mov
gs
outsb
jg
das
or
sub
arpl
pop
or
out
ret
dec
pop
stos
push
fwait
push
xchg
ret
push
fld
dec
in
popf
cwtl
arpl
divb
add
fwait
sbb
ret
mov
inc
cmpsb
call
bnd
fs
jno
mov
loope
stc
sarb
mov
cmp
mov
addr16
xchg
aas
jecxz
ljmp
fdivr
fdivs
or
sub
int3
fisubrs
push
inc
pop
int3
sarl
inc
repz
xor
outsl
cs
fsub
fildll
int3
push
mov
repz
and
rclb
out
ja
sub
mov
enter
push
lods
daa
push
es
jmp
jge
pop
dec
xchg
push
sbb
lods
add
push
jb
and
sahf
pop
mov
nop
push
add
std
lods
nop
and
mov
mov
mov
push
add
cmp
aam
lahf
cmp
xchg
cld
pop
das
pop
sbb
loope
subb
pusha
cmp
shll
xchg
stos
sub
call
push
pop
rcll
gs
arpl
xorb
xorb
cltd
lahf
les
addr16
fdivs
mov
sub
jl
cs
and
sbb
xor
fcmovnbe
test
cmpsb
divl
mov
mov
or
ljmp
mov
test
inc
js
jp
mov
push
pop
inc
testb
jmp
ret
cs
filds
int
pushf
xor
inc
dec
sub
fnstenv
sbb
leave
shlb
mov
xchg
test
jo
pop
cwtl
mov
test
pop
jg
fildll
bound
or
sbb
int
pop
imul
sti
pop
ret
out
aam
sahf
or
lock
cmpsb
je
push
fsubl
out
jge
dec
loope
mov
std
pop
repnz
xor
addr16
jnp
cmp
pop
movb
and
and
mov
lahf
cli
cs
pop
xor
jbe
sbb
and
xchg
pop
adc
xchg
dec
dec
or
cmp
nop
jnp
xchg
jle
and
ret
sub
xor
cmp
sub
lds
leave
push
lds
mov
hlt
push
sub
ret
imul
mov
roll
sub
jbe
push
popf
mov
std
fisttpl
test
das
ret
jmp
mov
cmpsl
aaa
cld
xchg
mov
push
sbb
pop
inc
data16
ja
iret
jmp
sbb
jne
adc
rorb
mov
aaa
pop
mov
cmpsl
cld
arpl
pop
aaa
cmp
inc
nop
inc
mov
xchg
fldt
xlat
or
in
xchg
add
in
call
add
movsl
lea
test
stos
sub
xor
push
cmp
out
into
lret
and
xchg
int
std
adc
push
jg
inc
pop
cs
ds
xchg
lahf
pop
xor
fstl
insl
dec
cmp
repz
push
fsubr
sbb
pop
std
lds
or
inc
pop
jp
fs
in
sbb
sbb
fadd
ret
push
fsubl
in
pop
shlb
push
inc
cmp
dec
pushf
mov
mov
xchg
sar
xor
es
iret
xchg
jno
push
pop
sub
sub
xchg
push
aas
je
mov
jbe
jg
pop
arpl
ret
int3
ror
daa
and
in
aas
stc
in
leave
pop
gs
sub
cmpsl
dec
in
sub
xchg
iret
xchg
out
dec
int3
sbb
and
repnz
pop
inc
jnp
mov
add
int3
ret
xchg
sbb
minps
call
pusha
mov
das
xchg
out
jo
inc
adc
aam
mov
stc
in
outsb
dec
popa
cmp
mov
xchg
push
and
test
enter
pop
out
mov
shrb
popf
les
xor
lcall
mov
in
pop
and
stos
pop
arpl
and
mov
ss
out
fwait
xor
lds
jbe
jae
and
das
fwait
mov
mov
cmp
pop
pop
push
jae
sub
push
psubsw
orb
out
lahf
push
loop
push
inc
lcall
pop
add
insl
jmp
scas
or
out
and
rcll
in
adc
fsqrt
mov
bound
xchg
xchg
add
inc
add
ret
scas
cwtl
je
jle
dec
pop
addr16
mov
inc
xor
push
lret
mov
pushf
sub
jp
in
imul
or
mov
xchg
insl
subl
out
sbb
loopne
and
sbb
cli
outsl
int3
out
dec
inc
sub
movsl
rol
jmp
push
mov
xor
rol
enter
sarl
js
and
push
pop
xchg
bound
cmpl
outsl
cmp
pop
push
xchg
out
mov
push
mov
sbb
jl
cmc
popa
fwait
mov
loop
push
push
aas
in
add
testb
mov
out
rol
popa
std
mov
incl
jecxz
jae
cmp
sahf
repz
cmp
jns
lret
xor
and
stc
mov
imull
ret
jp
rcrb
fisubrs
aam
sub
jo
inc
gs
repnz
test
pop
mov
pop
push
jecxz
mov
mov
pop
sbb
inc
mov
lret
jecxz
cmp
mov
gs
iret
dec
mov
pop
daa
clc
addr16
dec
xchg
fs
fiadds
fwait
gs
fists
jnp
test
push
nop
cwtl
push
outsl
fdivrp
ret
cmp
mov
aas
imul
icebp
inc
scas
lret
icebp
jo
jns
add
cli
lds
stos
js
dec
leave
cmp
inc
fcomps
jae
xor
and
and
sarb
divl
mov
inc
add
xorb
mov
push
push
pop
stc
pop
jo
lods
cli
mov
clc
fucomip
push
and
xchg
out
cmp
cmp
enter
add
xchg
std
int3
and
fldln2
xchg
add
sahf
stc
lahf
es
mov
sarl
jg
dec
dec
lock
fistps
aam
cmp
sarb
pop
push
outsl
mov
pop
and
lahf
stos
jecxz
setle
xchg
or
jmp
mov
popa
dec
sub
int3
add
pop
pop
push
andb
push
xor
scas
rol
fmull
pusha
mov
int3
js
cld
xor
cltd
loopne
lea
push
loopne
xor
xchg
lods
ss
mov
gs
dec
xor
pop
outsb
or
arpl
xor
push
mov
pop
je
cltd
and
mov
push
sub
inc
or
lret
mov
mov
xchg
notb
jl
pop
mov
daa
adc
in
xchg
cld
pop
dec
jle
pop
jmp
je
incl
mov
sahf
dec
lret
push
ss
dec
orb
push
insl
orb
add
outsb
pop
pop
insl
repz
xchg
inc
push
insb
negb
mov
mov
inc
loope
pop
orb
adc
push
mov
int3
mov
mov
pop
mov
leave
pop
les
dec
nop
rol
pop
sbb
sub
mov
in
add
mov
xor
shll
sbb
and
mov
mov
xor
lahf
scas
dec
push
ret
sub
sub
das
jg
subl
jae
add
addr16
bound
cmp
adc
inc
in
ljmp
loopne
int3
cmp
aas
fstpl
orb
mov
jae,pn
movsl
push
sub
pop
pushf
xor
clc
mov
adc
mov
outsb
mov
nop
data16
incl
adc
sti
xchg
pushf
inc
mov
xlat
push
push
add
loope
pop
fcoml
mov
ret
adc
js
in
lods
jecxz
xchg
je
cmp
fcoml
testb
or
inc
ss
les
pop
fdivl
push
ljmp
xchg
cltd
xor
sub
ljmp
add
enter
xchg
std
xchg
xor
add
push
jg
stos
mov
mov
mov
pop
hlt
loop
aas
fwait
sub
inc
mov
jns
nop
lahf
mov
and
mov
push
loopne
mov
sub
incl
cmp
jb
push
lea
stc
xchg
mov
pop
dec
pop
push
aam
xchg
roll
sbb
inc
dec
hlt
adc
outsl
loop
ret
test
ja
mov
shr
and
mov
sbb
in
rolb
jecxz
pushf
mov
jmp
push
fcomps
sbb
imul
loop
jo
lock
xor
call
out
dec
push
enter
hlt
fwait
cmp
mov
dec
dec
mov
je
push
cmpsl
inc
subb
fdivr
and
enter
in
inc
mov
jb
das
and
jae
jle
xchg
cmp
jmp
and
mov
add
andb
jns
ficoml
iret
in
add
cltd
leave
insb
scas
rcl
mov
es
cmp
lock
test
std
dec
xor
rol
aaa
out
sub
aaa
sbb
sbb
in
dec
mov
insb
adc
jge
cmp
in
scas
mov
mov
mov
pop
cmp
dec
out
and
stc
xchg
jno
fldcw
das
or
bound
andb
lret
sbb
call
cmp
adcb
in
cmp
jne
fcoms
sub
jmp
jo
imul
sti
xchg
push
in
repnz
xor
pop
dec
cmp
jecxz
insb
adc
sbb
xchg
push
sbb
inc
fisttpll
cwtl
jae
lahf
add
das
xchg
pop
xchg
scas
and
inc
mov
std
into
lret
dec
sbb
pop
mov
pop
nop
int3
ret
cmp
add
loop
pop
cmc
mov
sub
int3
shlb
cmpb
dec
add
sbb
jbe
push
xlat
int
jbe
aas
lret
or
in
and
int
push
sbbb
ret
ficoml
daa
fldt
ja
dec
lahf
or
mov
outsl
and
jae
sbb
add
inc
aaa
jle
push
loopne
enter
shr
test
xor
jle
cli
adc
mov
adc
bound
stos
adc
push
es
jl
mov
lret
cmp
cwtl
and
dec
cmc
dec
jl
sbb
fistps
clc
shlb
jp
notb
dec
filds
add
clc
add
fst
jnp
rep
xor
pop
mov
call
inc
gs
xchg
and
fs
mov
push
or
push
dec
in
popa
push
fnstsw
ss
clc
leave
cmp
mov
outsb
and
or
and
xor
push
std
ficoml
sbb
stc
jle
inc
jb
lret
shll
mov
hlt
lea
sbbl
and
subl
add
push
jl
jp
xor
add
sarb
loopne
mov
mov
lret
insb
out
std
sub
adcl
pop
in
jne
inc
sti
fwait
test
jmp
push
outsb
jnp
jbe
pop
lods
in
mov
mov
adc
add
xchg
jecxz
jo
imul
stc
fnstenv
mov
test
icebp
cltd
pop
mov
loop
fsubrl
jge
mov
mov
out
lock
mov
xchg
xor
cwtl
aad
pop
xor
inc
push
repnz
mov
loopne
push
adcb
hlt
inc
adc
or
mov
mov
subl
or
sbb
cld
test
mov
int3
adc
mov
mov
mov
push
adc
mov
xor
mov
cmc
jmp
adcl
into
fldcw
cld
test
cmp
push
push
and
push
and
cmp
fwait
jecxz
shll
fstps
xchg
cs
lods
mov
out
popf
stos
dec
xor
dec
jb
adc
fadds
das
fwait
cmp
sbb
fimull
adc
pop
ror
out
loopne
mov
sbb
push
xchg
cmp
pop
pop
test
or
stos
mov
sub
and
cwtl
sbb
push
adc
std
adc
fdivrp
cmp
and
jo
fiaddl
xor
dec
pop
test
cmp
push
mov
pop
dec
inc
sub
push
movhps
cmp
ror
dec
hlt
mov
testl
ret
sub
in
je
sbb
idivb
push
out
or
aam
mov
testb
mov
xchg
popf
sub
repnz
push
mov
movsl
rorl
inc
cmp
subl
rcrl
and
in
xchg
inc
mov
push
scas
into
lahf
mov
out
adc
jp
adc
cwtl
pop
xor
in
data16
shlb
ja
jge
fsts
leave
stos
dec
push
xchg
inc
addr16
pop
sbb
repnz
inc
push
ja
aad
ret
jmp
push
es
dec
jns
in
cmpsl
mov
cmpsl
inc
inc
jmp
push
sbb
xchg
scas
mov
xor
in
jno
mov
sahf
jmp
adc
and
pop
adc
repnz
sti
sbb
sahf
popf
dec
pushl
cmp
in
push
das
xchg
xor
push
and
adc
mov
fcompl
mov
jnp
dec
in
ja
xchg
lahf
mov
jl
shlb
cwtl
in
adcb
mov
fisubl
pop
and
scas
mov
addl
fisttps
mov
push
pusha
push
jp
aas
push
fnstcw
sbb
push
imul
or
jns
repnz
jecxz
add
pop
xchg
sbb
scas
mov
addl
pop
sbb
sub
ret
movsb
lock
and
or
fdivs
movl
add
cmovs
imul
das
cmp
insl
push
push
mov
mov
std
outsb
mov
sub
jmp
icebp
int
fsubr
in
les
inc
jnp
add
jnp
cmc
mov
push
cmp
push
mov
dec
iret
push
xor
mov
fstl
insb
mov
jg
testl
dec
dec
adc
jl
xchg
ds
stc
inc
hlt
bnd
mov
inc
mov
add
pop
arpl
add
fnstsw
jae
jge
sarb
jmp
bound
fists
cmp
dec
int
push
ret
push
jmp
loop
lea
push
jno
inc
repnz
xchg
and
xchg
cmp
sbbb
mov
imul
rorb
mov
jnp
push
mov
fistl
imul
filds
inc
inc
jb
jb
leave
fs
push
popa
adc
aas
mov
jle
ret
mov
sarb
test
or
in
mov
mov
mov
mov
mov
xor
incb
in
das
mov
jmp
fwait
sbb
fildll
ja
mov
outsb
rcll
add
jecxz
jns
fnstenv
push
test
das
push
push
xor
xor
shrl
inc
lods
popl
lods
push
sbb
mov
mov
into
imulb
fwait
mov
jmp
and
xchg
ljmp
orb
add
inc
inc
es
xchg
dec
dec
xor
sub
push
adc
test
stc
mov
imul
pushf
cmp
and
mov
jmp
mov
call
add
pop
roll
and
sarb
out
jne
jae
dec
mov
xor
mov
adc
xchg
mov
lcall
mov
iret
push
cmp
aam
push
test
sbb
sbb
sti
sti
movsl
cmp
cli
inc
add
xor
jno
dec
inc
stos
pop
gs
sbb
add
iret
int
imul
jmp
fisubs
loopne
push
adcl
jno
or
lock
ds
push
cli
cmp
test
inc
adc
adc
in
notb
cmp
cmp
cmp
imul
es
pusha
mov
enter
pop
push
imul
mov
fdivl
xor
or
mov
es
jne
imul
ret
push
push
cltd
jecxz
fisttpl
mov
aad
arpl
add
dec
inc
mov
jae
and
imul
mull
xchg
repnz
lock
xchg
sbb
mov
insl
shlb
mov
aam
xorl
mov
xor
pop
pop
push
jp
aad
cmpsl
in
loope
push
and
arpl
sbb
mov
rolb
push
or
call
pop
xchg
lods
mov
mov
cmp
mov
pop
outsl
daa
imul
mov
inc
push
sub
mov
outsl
mov
adc
fildl
add
rcl
inc
jnp
push
icebp
js
sbb
jbe
pop
lret
xor
dec
out
pop
dec
ja
call
sbb
dec
cmp
cmpl
mov
xchg
push
inc
pop
cs
inc
sets
std
arpl
lods
xchg
inc
push
xchg
repz
sbb
xor
ret
jl
xchg
sar
push
push
ds
push
hlt
popf
pushf
or
lds
jmp
add
stc
xchg
xor
jg
dec
xchg
xchg
add
dec
fwait
lods
es
lahf
push
xlat
push
mov
insl
push
push
jmp
adc
cmpsl
mov
das
inc
sbb
cmp
out
mov
addl
aad
lods
cmc
dec
daa
sub
pop
xor
aaa
in
int3
std
lock
mov
and
sahf
sbb
ficompl
mov
rorl
jg
out
or
leave
push
xor
in
cmp
xchg
shl
jmp
and
cld
and
or
sub
jge
push
ret
sub
mov
add
addb
cwtl
push
mov
add
test
pop
insl
addl
dec
testl
leave
pop
gs
fwait
test
cmp
and
or
mov
sar
mov
adc
roll
and
nop
jne
fistps
adc
or
fdivs
push
inc
lods
inc
pop
jmp
fldcw
dec
ficoms
popa
push
cmc
inc
mov
sarb
into
pop
mov
xchg
movsb
aam
call
sbb
fs
ud0
adc
idivb
clc
ss
lahf
dec
jmp
cmp
jns
push
cmpsb
lods
imul
push
xchg
or
and
xchg
inc
push
xchg
loopne
orb
dec
mov
add
cld
jge
pop
pusha
adc
rclb
movsb
mov
xchg
push
dec
push
and
xchg
xchg
sbb
push
pop
push
xchg
jp
stos
out
flds
cld
sub
pop
notl
dec
jg
push
test
push
repz
mov
ss
xchg
aam
cmp
jbe
sbb
jns
xor
push
xor
aaa
adc
hlt
jecxz
dec
out
inc
ret
arpl
je
add
and
pop
imul
fdivs
mov
cld
add
cmp
pop
mov
adc
mov
fwait
cmp
inc
call
push
sub
mov
cmp
dec
pop
and
lods
jmp
icebp
test
fstpt
jne
dec
push
insb
jmp
repz
jne
loopne
add
mov
inc
jnp
movsl
cwtl
pop
push
mov
pop
cmpsl
rcrl
mov
imul
add
idivl
jp
mov
jbe
dec
sub
push
sub
inc
daa
imul
lods
stos
loop
cmpsb
ja
inc
dec
mov
iret
push
adc
mov
loop
sub
mov
mov
push
mov
addr16
adcl
mov
bound
repnz
gs
or
mov
mov
jo
xchg
cmp
and
lods
call
jge
stos
sub
rolb
lcall
pinsrw
pop
repnz
test
insb
push
sbb
add
cltd
mov
mov
xchg
vorps
test
fildl
xchg
cmc
adc
cmp
inc
xchg
mov
adc
xor
mov
and
fcmove
adc
js
push
push
mov
lcall
notb
dec
cmp
scas
in
outsb
or
out
xchg
testb
invd
lret
sbb
in
cs
add
inc
aas
mov
push
jmp
enter
or
jae
pushf
sbb
lds
scas
test
push
mulb
mov
subl
inc
out
jecxz
out
arpl
mulb
repz
int3
push
cli
test
sub
ret
mov
xchg
adc
pop
jecxz
loop
jbe
pop
dec
push
in
jge
nop
inc
pushf
pop
dec
mov
mov
mov
cld
or
adc
insb
cltd
test
enter
xchg
sub
xchg
jp
js
lret
cmp
sbb
mov
mov
lahf
fst
stc
sub
xor
adc
add
fdivrl
pop
sub
xchg
xor
mov
ret
sbb
mov
adc
mov
test
out
cmp
inc
sar
adc
shrl
nop
sub
jo
pop
arpl
jbe
inc
pop
fstps
sub
mov
js
daa
ret
mov
in
cmp
inc
push
or
inc
sub
push
xchg
pushl
jo
fdivrl
inc
inc
inc
lods
xchg
sahf
scas
mov
cli
popa
or
jb
lcall
push
mov
sub
loop
jl
pop
jnp
jge
insb
cmp
mov
dec
xchg
add
sarl
push
lods
je
clc
adc
add
xchg
push
out
out
or
mov
mov
imul
fbld
sub
add
push
sub
pop
mov
xchg
cmp
cmc
xchg
rcr
mov
sub
cmpsb
push
mov
pop
lcall
jnp
add
or
mov
fdivl
sbb
decb
lcall
fcoml
jnp
iret
data16
rcl
andl
dec
and
dec
fbld
loop
cmp
mov
sbb
out
mov
pop
test
stos
cmp
mov
cltd
pop
leave
xorl
xchg
psubb
popa
outsl
cltd
push
push
ja
push
inc
jb
pop
cltd
or
mov
cmc
inc
add
xor
and
xor
pop
sub
pop
or
shr
jnp
mov
push
fildl
cmpsb
das
lret
test
cmp
inc
add
pushf
pusha
loop
push
push
enter
mov
inc
dec
es
xchg
mov
sub
je
sahf
scas
mov
movsb
movsb
scas
insl
sub
popa
add
mov
or
mov
shr
fldl
inc
ljmp
sub
adc
sbb
fwait
xchg
loope
mov
xor
sub
lods
mov
push
xchg
jmp
mov
mov
fadd
cltd
and
pop
insl
cmpsb
int
mov
pop
jnp
lods
pop
pop
mov
inc
dec
cmp
stos
out
int
and
sti
and
xchg
mov
sbb
aam
movsl
lret
mov
js
pop
sbb
pop
jge
or
mov
fmul
xor
jno
nop
adc
cmpsl
in
jge
dec
cmc
jne
dec
outsb
adc
jmp
mov
xchg
push
aaa
shrb
insb
sbb
or
jae
fsubl
pop
sbb
add
push
cmc
idiv
mov
cs
push
xlat
or
inc
addr16
inc
daa
sbb
xor
push
pop
clc
cli
xor
jo
int
icebp
push
push
pusha
fisttps
int
ds
iret
test
pop
mov
cmp
jecxz
mov
hlt
adcb
lds
dec
div
cmp
mov
fists
mov
sbb
pop
leave
mov
movsl
lds
or
leave
mov
aad
cmp
lcall
test
push
fsubrs
jmp
lock
movsb
cmp
pop
dec
cmp
add
or
or
mov
xorl
ret
inc
popf
lods
jmp
test
add
daa
sbb
mov
or
add
jl
mov
pop
xchg
xchg
mov
mov
inc
push
pop
xchg
push
test
scas
sub
xor
test
test
ja
and
push
je
cmp
mov
insl
adc
filds
jle
adc
shrl
inc
scas
xchg
dec
pushf
adc
fcmovnb
out
jge
fnstcw
popa
or
jns
mov
fcmovb
arpl
xor
lret
push
fs
pop
scas
ret
pop
push
lds
mov
pop
push
icebp
jo
mov
add
add
mov
jmp
sub
dec
in
test
or
loopne
rcrb
test
dec
jge
mov
lahf
add
mov
mov
jg
lods
cmp
pushw
hlt
pop
fstp
out
push
adc
mov
lea
xchg
loope
js
shrl
and
mov
popf
adc
and
shlb
or
and
xchg
cmp
mov
mov
fistpl
neg
sti
xor
dec
scas
rcl
mov
repz
adc
push
mov
mov
cmp
xor
jno
jge
jo
jle
and
add
or
je
test
stc
push
inc
js
pop
flds
add
pop
dec
sahf
xor
mov
or
mov
addl
mov
test
mov
dec
jne
int
push
push
and
inc
lods
sbb
mov
add
mov
shrl
stos
insb
sbb
adc
sar
cmp
movsb
dec
sti
and
popf
subb
sbb
icebp
enter
mov
test
cli
and
add
mov
xorl
dec
sub
add
jge
jmp
push
cmpsb
enter
add
mov
xchg
mov
jbe
and
sahf
inc
mov
cmpsl
aaa
shrb
inc
jne
inc
fcomps
mov
addr16
addr16
sbb
sar
dec
inc
shlb
leave
adc
int
adc
pop
ja
testl
push
sub
xor
pop
std
pushf
pop
add
outsb
xor
in
icebp
inc
cs
xlat
xlat
icebp
data16
jmp
mov
enter
iret
push
movsl
cmp
cmp
pop
aas
divl
cmp
pop
nop
jo
icebp
scas
adc
sbb
aaa
loope
and
pop
mov
shll
mov
stos
mov
mov
xchg
adc
sbb
sbb
outsl
iret
adc
jecxz
push
hlt
fsubl
shll
ja
adc
push
pusha
call
pop
loopne
cmpsl
and
je
jmp
pop
std
push
cmp
loopne
lahf
jle
das
sbb
sub
sub
mov
mov
ret
dec
mov
aad
pop
and
aam
push
js
pop
inc
loopne
lahf
cmpsl
lods
dec
mov
push
push
dec
add
pop
mov
stc
out
pop
xor
out
mov
outsb
ret
leave
cmp
stc
aad
mov
push
movsb
xchg
dec
fsts
fsubrl
rolb
jns
subb
inc
call
pop
scas
push
jmp
iret
pop
cmpsb
jge
inc
push
push
fdivrs
aam
aaa
push
mov
mov
add
or
addr16
jl
adc
xor
ret
push
inc
xor
mov
push
add
mov
ds
sbb
fstp
pop
adc
orb
test
cltd
sahf
sahf
mov
addr16
xor
cmc
sbb
test
push
pop
jmp
jns
xor
cwtl
xchg
lret
js
aaa
xor
jg
loopne
inc
and
add
adc
pop
pop
sub
mov
xor
insl
pop
mov
pushf
mov
je
test
popa
adc
add
xchg
dec
xchg
push
sub
shll
les
dec
test
daa
and
hlt
xchg
sbb
mov
test
or
outsl
adc
in
pop
mov
lahf
dec
cwtl
cltd
mov
mov
add
test
dec
add
dec
sub
test
jg
xchg
sub
pop
shrb
test
aam
add
rolb
sub
pop
xchg
ds
in
in
push
push
cmc
cltd
xlat
pop
dec
pop
aad
or
insb
clc
lcall
jne
sbb
xor
loop
inc
xor
int
jge
inc
jl
mov
mov
enter
cmpsb
int
cld
stos
mov
repnz
les
sti
and
add
jle
pop
stos
sub
std
mov
scas
xchg
jmp
aad
pop
mull
dec
cs
aas
or
xchg
movsb
in
dec
push
insl
movl
rcrb
lea
mov
and
mov
sbb
std
push
adc
push
cmp
jp
jge
add
pop
jecxz
jno
adc
lahf
cs
mov
clc
dec
addr16
sar
pop
int
sub
jmp
jae
push
dec
stc
test
and
mov
xchg
ficoml
or
xor
jne
dec
or
test
outsb
push
jnp
in
xchg
inc
cmpsl
xor
jb
aam
loopne
dec
and
dec
rcrl
adc
xchg
or
mov
scas
mov
mov
out
add
out
lret
inc
insb
push
adc
xchg
ret
fsubrl
add
jnp
lcall
mov
loope
sbb
out
add
cltd
push
int
sub
sub
or
push
fidivrl
dec
mov
lea
lea
into
jecxz
jae
xlat
add
popa
shrb
dec
mov
and
movsl
lea
inc
mov
mov
aas
adc
and
leave
jmp
mov
dec
inc
dec
cvttps2pi
mov
cmp
push
push
pushl
push
or
int3
pop
std
and
cmp
popf
es
jge
addr16
push
inc
mov
data16
xor
jmp
rorl
iret
mov
nop
mov
cld
lock
in
and
call
je
daa
in
fcmovnb
shlb
adc
popf
inc
cltd
shlb
cli
stos
fs
push
call
mov
rolb
movsb
adc
lahf
jns
fs
icebp
xor
add
movsl
out
pop
ja
cmp
xchg
jb
test
test
lret
push
mov
jnp
aas
cltd
and
sbb
inc
repnz
ds
fisubrs
mov
or
cltd
push
dec
es
cmpsb
mov
outsl
xor
add
nop
stos
cmp
inc
dec
mov
cltd
fwait
test
fstps
push
and
cld
pop
mov
jo
test
mov
loopne
leave
inc
push
add
shll
leave
mov
push
jno
xor
add
cmpsb
mov
fsts
cld
dec
jge
aam
ret
cmp
lahf
shll
push
cmp
mov
sub
outsb
aad
into
mov
loop
sbb
rcll
push
mov
stc
mov
aad
lock
fs
das
mov
dec
jmp
mov
jbe
xchg
sbb
sub
sbb
enter
jb
andl
les
lock
add
mov
ljmp
call
pop
mov
xchg
xor
ret
outsb
and
adc
imul
add
in
and
int
xchg
xor
xchg
popa
movsl
cmpsl
dec
andb
jg
jae
mov
clc
pop
leave
push
ror
fwait
outsl
mov
and
lds
jnp
sbb
and
xchg
mov
xlat
negl
pop
pop
jbe
imul
sti
xor
shl
test
mov
fwait
cmp
arpl
test
adc
gs
xor
pop
cmp
cmp
test
and
sbb
sub
push
cltd
jge
mov
aad
movntps
inc
inc
mov
scas
and
dec
cld
shll
pop
jle
and
adc
fcoml
lods
test
xchg
or
repnz
mov
cmp
mov
loopne
lcall
lods
mov
out
mov
mov
dec
clc
mov
sbb
jnp
cmp
into
xlat
testb
loope
add
cli
pop
xor
mov
adcl
mov
mov
push
movl
and
out
or
popf
dec
inc
xchg
adc
mov
adc
loope
packsswb
xor
add
push
pop
pushf
shlb
add
mov
aas
dec
xor
lea
stos
aaa
push
push
mov
push
xor
sub
fmull
ja
call
add
fidivl
xor
sbb
repz
xor
mov
pushf
dec
imull
add
leave
push
adc
mov
ja
mov
and
std
pop
jne
mov
pop
adc
rcl
sbb
xor
cmp
mov
jge
add
test
sti
xlat
adc
cld
jle
pop
loope
or
int
outsl
repz
mov
xor
sbb
pop
ss
inc
xor
clc
mov
push
cmp
std
sub
popf
xor
lock
mov
adc
test
add
cli
mov
xchg
movsb
jge
mov
mov
int
es
out
sahf
clc
pop
adc
cmpsl
push
mov
sub
and
rcl
outsb
ds
pop
xor
nop
clc
out
out
cmp
lret
jbe
or
sti
xchg
fisubs
jg
es
ret
pushf
int3
dec
or
mov
push
xchg
sub
lock
scas
pop
std
pop
xchg
add
adc
xor
rcr
into
rorb
enter
mov
sub
inc
or
ds
les
inc
mov
and
sarb
push
daa
or
push
xor
ds
dec
mov
push
fstpl
or
jge
pusha
pop
adc
shrb
stc
and
mov
xchg
push
inc
lock
sub
jp
stos
pushf
cli
repz
sbb
in
scas
sbb
sub
push
jae
add
sbb
xor
js
push
push
imul
and
mov
shrl
jp
pop
pusha
lock
sti
cmp
mov
in
mov
adc
jle
adcl
outsb
repnz
out
negl
pop
test
or
xor
scas
cmp
mov
push
outsb
pop
fidivrs
push
aas
nop
push
add
push
push
push
dec
jmp
out
out
js
ds
cmp
ret
addl
sub
lret
sahf
sti
jle
mov
scas
jl
test
jp
hlt
xorb
setl
jno
add
in
mov
cmp
push
or
mov
cld
orb
out
stos
scas
pop
movsl
push
ficomps
ss
ljmp
pop
push
mov
sub
cmpsl
stc
xchg
mov
fldenv
pop
or
mov
cmp
mov
insb
pushf
lea
pop
pop
psubw
add
fcompl
or
jb
cmp
jge
xchg
and
movsb
dec
pop
test
out
xor
push
mov
std
xchg
das
push
lods
jp
cmp
adc
dec
add
mov
cwtl
xor
out
arpl
into
jmp
xchg
dec
movsb
xor
hlt
cwtl
nop
cmpsb
sahf
in
repz
cmp
mov
dec
cmpsw
dec
push
pusha
mov
push
dec
sub
outsb
mov
dec
cwtl
mov
inc
pop
lds
inc
pusha
push
jae
sub
lcall
mov
mov
mov
jb
pop
mov
out
adc
adc
sub
dec
inc
adc
andl
out
mov
dec
push
mov
pop
aam
sbb
mov
ljmp
adc
add
and
lock
xor
dec
aad
je
cld
jg
inc
or
fdivrl
mov
mov
cmp
sbb
out
fiadds
pop
inc
jb
fists
mov
xchg
jbe
ds
pop
into
ljmp
ljmp
std
in
roll
and
repz
fdivl
xor
nop
jecxz
mov
push
fs
push
push
mov
push
mov
mov
cs
bswap
and
enter
fldenv
add
add
fildl
fdivrp
push
adc
sahf
lret
idivw
scas
ja
push
fisttpl
popf
mov
sbb
imul
xor
in
pop
addr16
nop
mov
mov
out
std
fldenv
xor
iret
add
xor
xor
aad
imul
arpl
jbe
push
test
jge
xor
bound
sbb
adc
pop
and
andb
cmp
dec
xchg
mov
in
into
dec
xchg
int
aas
mov
pop
inc
add
cmp
mov
insl
push
sbb
sbb
cmp
nop
test
pop
push
inc
fistl
std
das
out
sbb
testl
mov
test
loope
sub
fcom
sbb
cmp
and
mov
mov
jns
test
out
mov
xchg
imul
cmpsl
jmp
xor
test
inc
lret
loopne
sub
xor
mov
mov
add
mov
adc
into
test
test
in
add
jmp
flds
dec
or
cmpsl
repz
in
inc
cmpsl
mov
mov
ret
xchg
pop
lret
cmp
lock
fadds
lods
jno
aad
outsb
insb
add
out
cmpb
ljmp
fwait
out
adc
movsl
call
fs
popa
sbb
jl
add
or
or
aam
sbb
mov
mov
pop
lods
loope
add
add
pop
addl
pop
lods
dec
mov
std
mov
mov
enter
jp
fstpl
sbb
inc
jl
add
nop
std
mov
add
and
pop
xorb
cwtl
nop
jns
adc
xchg
inc
mov
adc
pop
into
adcb
out
aam
bound
into
and
jge
popa
mov
dec
and
cmp
xor
jo
sub
mov
cltd
mov
sbb
data16
pop
ds
bound
pushf
mov
ret
ja
out
jmp
xchg
sbbl
mov
nop
add
sbb
xchg
out
out
xor
dec
test
test
das
fdivs
sbb
ss
cli
addr16
sbb
fstp
scas
mov
mov
sub
mov
iret
push
sbb
sbb
pop
push
and
and
call
aam
inc
jecxz
shr
outsl
bound
push
dec
sub
cmpsl
inc
pop
sahf
ljmp
addl
lds
jo
pop
jae
pop
out
xchg
add
in
xchg
pop
pop
xor
lods
popf
daa
xor
xor
pusha
mov
mov
clc
mov
popa
loope
aad
notl
movsl
js
inc
rclb
or
xchg
add
fisubl
jns
push
ret
dec
cmp
jno
push
adc
mov
pushf
dec
rorl
push
dec
mov
mov
push
orl
jge
jge
dec
cmp
mov
rcr
cmp
shlb
or
ficompl
xchg
xlat
outsl
popf
into
arpl
mov
xlat
xchg
or
fxch
cmp
into
ret
xor
push
cmp
out
scas
jnp
mov
jns
test
fidivl
repnz
andb
aas
hlt
mov
addb
and
adc
cmpl
push
cmp
dec
in
sbb
int
inc
push
and
mov
loopne
cmp
lahf
jo
inc
push
montmul
cmpsb
pop
jmp
cli
jge
loopne
insb
cltd
jp
add
sub
gs
fstl
mov
dec
sbb
jl
sbb
adc
xor
loop
flds
xchg
arpl
pop
sbb
push
mov
jo
sbb
stos
sbb
sbb
dec
in
dec
mov
pop
orb
sub
ret
les
sbb
test
ja
sbb
jno
jge
scas
imul
testl
rol
outsb
popa
or
add
adc
iret
mov
jnp
sti
pop
and
and
xor
cs
into
int3
mov
mov
test
pop
inc
enter
add
out
test
scas
mov
add
enter
divb
adc
leave
call
push
test
sarl
cmpsl
sub
sbb
push
in
mov
jmp
cmp
mov
xor
jnp
xchg
dec
iret
mov
and
adc
cld
test
push
sub
cmp
cmp
cmp
fstpl
xor
out
int3
repz
shl
loopne
jge
xor
sbb
repz
pop
imul
shlb
and
jb
jecxz
cld
push
rcrl
mov
dec
jecxz
sahf
repnz
mull
repnz
or
shl
cld
das
sbbl
ret
data16
js
leave
repnz
mov
jnp
lret
push
mov
clc
daa
cmp
js
lret
dec
out
xor
call
mov
inc
adc
add
sahf
leave
inc
jmp
xchg
loop
lea
mov
in
xor
test
mov
ja
and
out
jp
popf
pop
jle,pt
mov
dec
es
test
les
push
scas
or
lock
arpl
lret
jnp
dec
loop
in
mov
hlt
and
lcall
daa
adc
and
pop
jge
jg
das
out
aam
hlt
in
enter
hlt
sbb
fidivrs
mov
sti
mov
movsb
cld
jbe
pop
add
sbb
dec
inc
jo
pop
lea
out
repnz
test
hlt
push
and
into
fcmovne
call
inc
or
jecxz
xchg
int3
pop
mov
fs
lods
in
pop
outsl
jb
ret
cmp
mov
test
mov
sbb
pop
mov
inc
inc
repnz
or
aad
cli
out
das
scas
jno
pushf
addr16
jae
ret
test
andl
fnstcw
cmp
xor
mov
popl
mov
jmp
or
std
lds
popa
lahf
cmp
lea
ret
test
sbb
xor
xor
add
popa
mov
sub
mov
test
hlt
movsl
or
stos
cmp
dec
loop
stos
es
fadds
rcll
pop
jns
jle
jl
lcall
xchg
push
sub
ror
mov
mov
sub
jno
jb
movsl
or
sti
iret
dec
into
xchg
push
lea
sbb
sti
mov
inc
mov
push
pop
push
int3
mov
xchg
hlt
subl
repnz
add
and
mov
inc
ret
add
popl
sbb
lahf
fldenv
pusha
push
repz
call
imul
movsl
mov
inc
adc
inc
mov
data16
scas
cltd
dec
jo
lret
xlat
pop
xor
clc
pop
popf
sbb
imul
aad
pop
mov
das
push
cmpsl
stos
push
cmp
dec
xor
sub
adc
iret
es
mov
jl
push
jne
stos
add
mov
mov
icebp
dec
push
push
sbb
jmp
insb
push
adc
sbb
xchg
xor
pop
rorb
xchg
sbb
cmp
inc
pop
or
push
out
gs
xchg
stos
test
add
push
sub
xor
packssdw
in
inc
mov
sbb
ret
xor
push
mov
jnp
imul
popf
gs
mov
inc
xor
jecxz
enter
cmp
and
stos
loopne
mov
push
stos
mov
or
add
pop
das
bound
jle
shrl
and
mov
add
adc
xor
addr16
xchg
imul
dec
xor
push
add
mov
das
cltd
xlat
mov
inc
out
test
mov
cmpsb
iret
aas
jbe
push
mov
pop
lret
inc
inc
mov
aas
sbb
sbbl
fisubrl
adc
mov
cld
mov
movsb
dec
sub
sub
lret
mov
and
insl
fistps
mov
lret
cld
dec
xchg
outsl
mov
lods
aaa
jae
mov
jecxz
aad
out
mov
fincstp
push
adc
jmp
push
lods
sbb
cwtl
jno
mov
jo
push
dec
sub
pop
mov
add
xlat
sub
inc
xchg
jmp
imul
jg
jns
sub
std
cmp
pushf
loop
hlt
sub
popa
rol
push
mov
pop
ficoms
imulb
pop
push
movsb
fwait
mov
xor
cld
inc
mov
int
sub
jge
push
std
in
fwait
jmp
and
imul
sub
add
inc
pushf
gs
or
addr16
lahf
ljmp
in
loopw
mov
pop
xchg
and
cwtl
jg
cmc
jg
stos
rcrl
or
les
sahf
aad
sub
inc
ret
lcall
out
les
mov
outsb
outsb
xchg
and
push
dec
sti
loop
out
repz
sbb
mov
cmp
mov
sub
inc
pop
or
add
xchg
daa
mov
jle
jmp
andb
jbe
lcall
les
in
jbe
pop
sbb
mov
sbb
xchg
xchg
pop
dec
mov
cmc
mov
scas
mov
cmpsb
mov
xchg
call
fldl
mov
or
push
lcall
mov
jbe
pop
jecxz
cltd
mul
cld
popf
jl
cmp
ret
iret
cld
and
sub
xchg
stos
dec
bound
and
lcall
adc
test
cli
loop
imul
in
or
mov
cli
sbb
ret
adc
out
in
std
sub
mov
ror
pusha
pop
sahf
lock
hlt
or
mov
mov
or
adc
sbb
scas
push
xor
sub
leave
sub
mov
lds
sub
or
pop
mov
fimuls
xor
and
call
repz
pop
push
xlat
sub
xchg
xlat
sarl
std
lcall
fcmovnbe
jbe
mov
cmpsb
push
pop
jecxz
dec
lahf
dec
ja
dec
push
mov
test
fcomi
out
aas
mov
push
xchg
movsl
mov
adc
xchg
leave
cli
add
pavgb
jno
jo
and
mov
add
push
rorl
push
fisttps
mov
movsl
cwtl
nop
loop
cs
lcall
mov
mov
mov
push
pop
or
mov
jne
or
xchg
clc
jl
jl
aas
or
xlat
cmp
popa
sti
dec
dec
add
sbb
sub
fisubrs
insl
shll
sub
dec
push
jno
cmc
cmp
out
fs
popf
pop
ss
inc
mov
cmp
adc
pop
push
enter
shll
fisubrl
aaa
aad
hlt
dec
scas
mov
faddp
sub
les
sub
popa
push
adc
push
neg
fcmovnu
and
inc
ret
fildll
pop
mov
pop
sub
pop
enter
mov
arpl
sub
and
mov
sti
cs
lret
pop
sbb
add
push
xchg
inc
out
sbb
js
pop
pop
std
lods
mov
xlat
push
fldt
test
aas
fisttps
sbb
mov
push
mov
repnz
mov
fsub
imul
idivl
pop
das
ja
push
fidivl
hlt
ss
pop
xchg
push
cld
sub
jnp
mov
cmp
push
xchg
scas
pop
xor
jmp
xchg
xchg
dec
stos
mov
mov
sbb
nop
dec
jp
xchg
pop
ror
mov
mov
mov
sbb
daa
xchg
xchg
enter
pop
pop
push
andb
xchg
or
mov
mov
xchg
xchg
jae
rorb
dec
or
stos
insl
xor
sarb
cmp
xor
daa
inc
xchg
loope
add
mov
sbb
pop
xchg
scas
mov
aaa
push
insb
mov
popf
sub
jp
test
popa
daa
cmp
imull
add
aam
xchg
mov
mov
sbb
into
dec
popa
push
aaa
imul
cmpsb
mov
xchg
sbb
jecxz
popf
pop
sti
pushf
jge
push
jmp
icebp
enter
adc
sahf
test
in
testb
jno
inc
nop
inc
xor
and
mov
lahf
les
loop
mov
in
ja
and
lret
mov
xchg
out
mov
cmp
sbb
fwait
pop
pop
int
imul
jmp
icebp
jns
nop
and
dec
popa
cmp
fisttps
lcall
push
test
xor
dec
sbb
xor
divb
scas
leave
and
test
mov
fcomi
je
adc
jle
push
adc
pop
lret
add
mov
add
in
fsubs
ja
fs
loopne
pop
pop
jecxz
xor
shlb
pop
lods
shlb
in
cmp
gs
dec
pop
mov
cmp
mov
cwtl
cmpsl
mov
lds
cmp
outsb
fistps
enter
xchg
jns
sub
mov
inc
ljmp
inc
adc
jge
and
xchg
jge
xchg
scas
inc
xchg
gs
dec
push
xor
jle
inc
std
jne
and
lds
stos
cli
sbb
sbb
jo
mov
loopne
mov
push
sbb
ret
cmpsb
cltd
test
cmp
test
sahf
lcall
or
push
push
add
xor
mov
aas
scas
das
sbb
push
xor
and
fbld
mov
pop
push
mov
fwait
cmp
jbe
into
dec
push
adcl
inc
inc
in
sub
iret
mov
mov
inc
inc
sbb
fwait
das
mov
mov
sbb
gs
push
orl
notl
clc
mov
xlat
adc
hlt
push
xchg
popl
jbe
push
imull
mov
add
mov
sbb
shrb
jno
and
xor
arpl
push
jnp
mov
push
add
push
ret
push
mov
dec
loope
sub
repnz
sbb
mov
pop
xchg
push
dec
ret
jnp
ljmp
mov
lods
mov
pop
xlat
insl
cmp
inc
xchg
push
xlat
adc
mov
adc
fisttps
fwait
call
xchg
cltd
stc
xchg
inc
pusha
daa
push
jb
push
notl
daa
or
jmp
daa
push
cmp
mov
lret
rcll
dec
add
enter
or
xor
jae
cmp
mov
sbb
cmp
mov
cmp
mov
mov
and
adc
mov
adc
pop
pop
xorl
and
dec
arpl
ljmp
iret
jg
push
and
stos
cmpsl
cwtl
das
ja
enter
jno
es
je
cmc
mov
iret
fldenv
cmp
jo
inc
call
xchg
sbb
lcall
jmp
fwait
mov
lods
sub
jle
cmpsb
mov
mov
xor
fwait
push
mov
xor
add
divl
addr16
dec
dec
repz
xchg
mov
xor
lret
orl
andb
adc
lcall
in
or
das
mov
mov
adc
xchg
mov
invd
add
push
jb
in
mov
jmp
add
orl
ret
stos
dec
mov
pop
dec
adc
mov
fsubrl
movsb
lods
push
fcoml
mov
mov
xchg
jbe
icebp
inc
lret
sbb
dec
ret
adc
dec
and
hlt
jb
jne
inc
aam
adc
dec
subb
add
mov
fidivrl
sbb
insl
sub
aam
fisttpl
mov
jg
inc
mov
shrb
pop
cmpl
insb
push
pusha
mov
inc
xchg
dec
in
popl
das
mov
xchg
push
add
mov
loop
xchg
inc
arpl
das
ja
imull
mov
mov
es
adc
or
cld
inc
lahf
mov
pop
adc
shl
and
jnp
dec
fistpll
and
out
mov
pop
stos
rcll
call
sbb
add
mov
sbb
subl
inc
pushf
pop
fcoms
mov
je
mov
dec
cld
popa
inc
ret
adc
dec
cmp
repnz
jns
sbb
testl
mov
es
push
mov
mov
mov
sbb
dec
in
sbb
sbb
mov
dec
mov
add
or
push
mov
xor
inc
mov
pop
or
pop
dec
sarl
enterw
mov
jp
aaa
mov
aad
iret
out
jmp
jnp
cmpsl
inc
cmp
in
arpl
pop
arpl
insl
outsl
lea
mov
mov
insb
xchg
mov
sub
cmpsl
es
in
clc
and
mov
mov
xor
ja,pt
xlat
pusha
inc
out
cmc
push
pop
cmp
mov
in
je
int3
in
xorl
fiaddl
das
imul
xchg
dec
in
inc
pop
mov
jne
push
pop
dec
add
addl
pop
and
jae
outsb
xchg
pop
test
popf
jmp
adc
push
cmp
in
xor
jbe
jno
xorb
into
gs
pop
js
aas
sarb
xor
mov
ss
jl
enter
mov
es
dec
add
xchg
xchg
jp
fidivs
push
inc
sub
cs
or
sub
pop
cmovl
lret
inc
mov
dec
test
into
sbb
int3
dec
out
cmp
push
mov
inc
adc
pop
sbb
push
adc
xor
inc
jne
mov
idivb
mov
in
pop
xchg
mov
inc
cs
ret
pushf
inc
lock
xor
adc
cmp
mov
icebp
xchg
aas
inc
ficoms
sarl
mov
cltd
jp
cld
cmp
jge
lcall
lods
inc
inc
xor
cmp
xchg
sbb
cmc
adc
pop
out
popf
ret
rorl
add
insb
xlat
push
xor
rclb
inc
in
mov
aaa
sub
in
adc
push
jno
add
ds
gs
repnz
or
mov
sti
faddl
mov
push
dec
daa
adcl
mov
pusha
xchg
lret
push
pop
cltd
xor
xchg
test
inc
es
push
fnstenv
mov
fcomps
push
sbb
mov
push
repnz
xchg
pushw
sbb
push
pop
or
and
dec
dec
daa
pop
sti
xchg
in
out
pop
push
inc
xchg
xacquire
pusha
pop
mov
fidivl
lock
cld
mov
jmp
in
inc
sti
cmp
mov
frstor
adc
mov
fwait
xor
xor
add
popf
dec
cli
inc
inc
cmp
out
xchg
in
xchg
data16
insb
push
and
dec
sub
adc
pop
dec
out
orb
push
aam
cmp
cmp
pop
repz
push
inc
add
xchg
jns
ret
and
jo
jl
mov
fstpt
test
iret
scas
outsl
adc
sbb
dec
inc
outsb
lea
out
or
test
insl
jg
into
inc
lock
std
push
decl
pop
lahf
and
lret
ficompl
int
sbb
lret
push
or
xchg
gs
lret
mov
jno
insb
into
jae
push
inc
adc
and
aam
lea
dec
sub
ljmp
insl
cmp
push
adc
out
icebp
enter
xor
cmp
push
or
and
push
sub
jo
in
std
in
push
xchg
xchg
dec
lock
sub
imul
int
mov
adc
sub
and
and
dec
or
mov
notl
jg
mov
sbb
mov
lods
pusha
cmpb
xchg
lret
inc
stos
sub
pop
pop
dec
popa
stc
rolb
cmp
fisubrs
cmpsl
fldcw
lea
push
mov
pop
mov
jp
pop
lret
adc
adcb
pop
add
push
mov
imul
je
mov
dec
dec
add
dec
add
mov
mov
pop
xchg
cmp
pop
sti
sbb
pop
pop
mov
rolb
or
jb
cwtl
sbb
xchg
push
insb
fdivrl
sub
jne
xor
sub
int3
mov
push
cwtl
or
in
cmpsb
xchg
adc
mov
push
adc
pop
push
adc
jns
adc
and
sub
dec
xchg
leave
movsl
xor
jae
out
orb
or
xchg
dec
dec
repz
int3
in
xor
jne
out
adc
test
jmp
mov
mov
jge
xchg
stos
mov
sub
pop
jae
gs
sbb
xchg
pop
bound
aam
lods
push
cs
push
push
inc
pop
cmp
xor
pop
adc
out
inc
sub
xor
jl
mov
xor
xchg
mov
adc
jmp
int3
rolb
jbe
imul
inc
xor
dec
mov
into
mov
hlt
dec
push
mov
mov
sbb
cmpsb
inc
test
pop
outsl
or
sub
mov
cli
test
ret
add
ficoml
dec
nop
hlt
std
xor
ljmp
mov
ds
pop
pop
mov
add
stc
xor
in
ret
mov
aad
mov
aas
jno
cmpsb
mov
mov
mov
mov
scas
in
filds
pop
popa
repz
sbb
push
adc
icebp
xchg
dec
shlb
enter
push
hlt
jno
xlat
arpl
or
jb
add
mov
mov
sbb
or
xchg
mov
int
jb
mov
sub
lock
xchg
int
fmulp
cmpsb
jo
ficoms
popa
aam
dec
jb
push
scas
stos
fistl
xchg
jge
push
dec
mov
mov
stos
in
mov
test
xlat
aaa
outsb
loopne
int
push
mov
pop
adc
fcomi
inc
cmp
sub
push
test
pusha
cmpsb
inc
leave
lcall
movsl
xchg
mov
ret
xchg
movsb
mov
and
mov
sbb
cmpl
mov
pop
sub
push
fidivrs
popa
scas
jmp
xlat
cmpsb
xor
cld
fimull
out
pop
rcl
lock
dec
loopne
push
aam
cmp
cmp
add
insl
and
jne
lea
in
jecxz
lea
mov
adc
stos
mov
enter
sbb
aad
xchg
repz
inc
add
in
pop
and
les
mov
bound
fs
push
cmc
xlat
sbb
cld
push
sub
add
into
movsb
or
push
pop
mov
cmp
decb
mov
add
cmp
dec
xor
pushf
popf
std
push
pushf
dec
sti
int
adcb
nop
cmp
shr
jnp
enter
notb
lea
clc
sbb
clc
stos
cwtl
sti
push
mov
aad
jg
adcl
std
lahf
test
dec
popf
sub
inc
mov
xor
cmp
repnz
or
rol
scas
inc
jmp
dec
xchg
sub
pop
iret
jecxz
icebp
adc
shrl
sub
mov
int
sub
fistl
in
mov
int
or
pop
leave
loopw
fisubs
ljmp
adc
adc
or
add
pop
shrb
adc
lods
inc
cmp
add
adc
pop
sbb
out
int3
and
sub
pop
xchg
push
outsl
inc
lock
mov
jbe
sbbl
int
adcb
add
sbb
imul
scas
adc
cmp
lods
push
hlt
xchg
rcl
insl
popf
outsl
xchg
mov
add
jns
xor
lods
outsb
outsb
add
push
dec
xor
pop
movsl
cltd
outsb
pop
xor
adc
sub
jle
addb
add
lock
xchg
arpl
aas
out
add
loop
sarl
mov
cmp
xor
sbb
xchg
mov
lret
mov
push
test
out
add
outsl
rcl
or
scas
lret
lcall
stos
popa
adc
lret
push
mull
out
mov
add
xorb
adc
cmp
mov
shlb
mov
jae
xorl
imull
dec
xchg
mov
lcall
lret
pop
insb
test
fildll
pop
lods
xlat
pop
jmp
xor
scas
mov
out
inc
mov
dec
adc
xor
insb
test
lret
bnd
sti
or
lock
xchg
ljmp
fcoml
dec
add
fidivl
sahf
jge
fs
dec
mov
xchg
scas
dec
pop
daa
jo
inc
xchg
addr16
icebp
pusha
dec
in
jmp
sbb
pushf
inc
imulb
adc
mov
mov
or
stc
add
jno
repz
pop
xchg
jo
mov
dec
imul
test
xchg
adc
rcrb
sub
xchg
ljmp
push
out
mov
pop
push
cmp
xchg
mov
xchg
xor
add
jmp
movsl
andb
mov
fidivrs
xchg
jl
jl
inc
push
roll
xor
sbb
enter
dec
inc
mov
ret
fidivrl
lret
in
inc
call
enter
cmp
jne
xor
add
adc
sti
pop
pop
fistps
sub
push
xor
movsl
jo
mov
pop
cmp
pop
mov
iret
aaa
pop
testb
fs
lods
mov
mov
and
mov
imul
xchg
xor
les
mov
jmp
adc
std
jne
dec
push
xchg
fidivl
test
and
test
sub
pop
xchg
cmpsl
push
pop
push
sub
dec
mov
lds
inc
out
pop
mov
imul
sbb
mov
push
xor
xchg
stc
pop
dec
mov
or
xchg
rcrl
cmp
rorb
push
mov
and
inc
iret
lds
mov
mov
lods
test
faddl
test
out
jg
dec
jne
inc
jp
dec
mov
push
push
imul
mov
xchg
xor
jb
jge
xchg
cmp
bound
leave
pop
push
and
mov
sub
sbb
add
xchg
sub
sub
pop
fisttpl
pop
or
rolb
mov
bound
and
jmp
fldcw
fcompl
sti
ficoml
xchg
shrl
test
aas
ja
ds
outsb
icebp
or
stos
mull
sub
pusha
mov
inc
int3
xchg
aad
stos
pop
pop
scas
add
xor
out
fldcw
push
add
jmp
dec
xchg
aam
sbb
pop
sbb
mov
stos
push
push
dec
dec
negl
ret
adc
mov
lahf
adc
loopne
sub
in
aaa
push
cmp
test
sbb
lcall
mov
in
cmpl
mov
jle
lret
jae
rol
ret
jg
add
lcall
aam
inc
fbstp
pop
jo
push
cmp
fwait
push
mov
call
insl
rorb
test
jb
loop
int
in
adc
fwait
js
jbe
push
mov
jnp
mov
adc
or
cmp
inc
aas
dec
dec
fcoml
push
jge
lahf
jb
sbb
aas
cmp
jl
cmpsl
mov
mov
jle
insb
xchg
adc
fistps
dec
xchg
sbb
xor
add
xor
mov
lods
sub
jo
loopne
push
cmp
in
pop
leave
insl
dec
xlat
add
in
aad
push
cmp
sbb
mov
leave
jo
push
test
int3
fsts
sarb
inc
vprotq
dec
movsl
mov
das
imul
movsb
or
std
fs
decb
in
vminpd
xchg
sub
mov
xor
out
or
ret
sub
test
xor
adc
aaa
frstor
jno
dec
jecxz
inc
lods
pusha
pop
xchg
iret
mov
xlat
andb
lods
pop
ja
andnps
xor
add
sbb
test
icebp
inc
outsl
popf
out
incb
in
lret
push
outsl
cmp
ret
bound
pop
mov
and
jnp
xchg
pop
cmpsb
jle
fnstsw
out
push
sub
out
lods
lret
ficoml
inc
into
add
push
cld
inc
out
sub
dec
dec
insl
and
sahf
addr16
add
pop
into
lods
outsl
dec
aam
push
fmul
mov
pop
jle
pop
inc
cmc
call
or
pop
jecxz
pop
cld
cld
insl
xchg
das
out
ja
and
rclb
shl
pop
or
lea
arpl
dec
jecxz
shl
or
pop
adc
or
ret
xchg
ds
mov
inc
xchg
inc
fsubrs
sub
sub
aaa
in
xor
daa
inc
xor
or
jbe
icebp
insb
mov
mov
add
lcall
pusha
jne
cs
xchg
jbe
cmp
ret
add
pop
repz
repz
add
outsb
aam
cmp
movl
or
push
inc
push
movsb
add
addr16
and
cmpsb
test
sub
cwtl
les
stos
push
out
int
adc
dec
inc
pop
jge
faddl
js
jo
lret
ljmp
test
mov
push
and
xchg
inc
outsb
orb
ret
into
data16
mov
push
test
or
jp
leave
inc
and
fdivs
std
insb
int3
cwtl
shlb
push
xor
push
mov
into
decl
mov
xor
xor
dec
cltd
lea
xor
test
imul
in
pop
lcall
jne
pop
cwtl
push
mov
aaa
cld
sub
out
out
aad
jmp
into
es
iret
dec
addr16
mov
daa
gs
cmp
inc
jns
jg
or
scas
in
inc
cmpb
jge
jp
cmp
lret
jmp
cs
nop
loope
lret
test
dec
aaa
pop
add
mov
mov
mov
jge
out
cmc
push
xchg
xor
test
stos
pop
cmp
call
xchg
mov
jbe
lock
scas
jb
mov
sti
shr
je
inc
shll
mov
mov
pop
ds
pop
cmc
sbb
dec
fcmovne
outsl
jge
imul
es
enter
mov
push
mov
add
data16
ljmp
or
dec
mov
aaa
loop
xchg
mov
jmp
mov
or
insl
cmp
inc
inc
push
jle
push
mov
inc
jae
jae
mov
movsl
xor
push
xchg
inc
repnz
cltd
jae
aam
inc
inc
inc
cmpsl
jne
and
fldcw
pop
cmp
cmpsl
outsl
pop
xchg
inc
fdivr
add
popa
add
lret
jo
pop
mov
pop
add
mov
dec
mov
xor
insb
lds
inc
cmp
xchg
mov
sbb
ret
vcmpss
iret
loope
movsb
aaa
mov
stc
mov
lcall
dec
xor
pop
push
jnp
ficomps
inc
in
movsb
pop
sub
shlb
sub
iret
out
fst
add
push
nop
mov
icebp
add
jmp
icebp
rcr
and
xchg
mov
cmp
pop
scas
sub
push
inc
pop
dec
fmuls
cs
mov
cld
outsl
imul
pop
loopne
jge
test
lret
arpl
cmp
lahf
xor
and
sub
jge
outsb
rcrb
shlb
jno
cmp
lret
fldcw
les
in
dec
in
mov
mov
in
loopne
roll
scas
loope
push
jg
es
ljmp
out
inc
dec
jno
cmp
mov
test
push
ds
test
jae
aas
or
sub
mov
hlt
es
xchg
xor
push
test
inc
xchg
jbe
dec
mov
pop
mov
lret
xchg
mov
xchg
out
mov
out
xchg
dec
test
jne
out
pop
inc
jle
fidivrl
adc
in
mov
insb
sbb
fistl
pop
dec
mov
bound
inc
jbe
fstp
adc
fwait
jne
xor
repz
test
adc
sbb
iret
add
jp
xchg
pop
inc
sarb
inc
add
imul
sbb
dec
jno
jecxz
mov
jle
lock
dec
nop
pop
cmpsl
dec
and
fldl
jne
inc
pop
bound
mov
adc
adcl
push
fldt
imul
xchg
mov
fimuls
lahf
jb
sub
mov
cli
decb
push
cwtl
xor
movsl
pop
out
sub
mov
push
xchg
divl
mov
xor
fucomp
iret
movsb
jmp
aas
sbb
aam
out
jb
inc
stos
iret
add
dec
jns
mov
scas
push
pushf
sti
leave
xor
jg
pop
rorb
stos
mov
sbb
jns
jmp
sbb
loope
sub
adc
shl
sub
int3
scas
lcall
mov
inc
inc
cld
daa
add
inc
add
sbb
add
dec
pushl
add
xchg
sbbb
and
lret
jge
sub
mov
push
fnstenv
outsb
add
mov
lds
cmp
aaa
cld
or
mov
xor
test
sub
pop
imul
add
mov
lock
stos
arpl
loopne
es
pop
mov
mov
mov
push
cwtl
repz
inc
and
fisubrl
adc
fimull
cwtl
push
adc
aad
cmp
into
ror
cli
mov
mov
movsb
xchg
sub
mull
dec
rcll
lods
mov
insb
or
pusha
aam
push
add
mov
and
xlat
cwtl
pushf
pop
and
bound
mov
cmp
movsb
jb
loope
lock
ret
out
sbb
out
aam
orl
sub
mov
adc
adc
aas
into
inc
cmpsb
push
xor
sahf
mov
adc
xor
out
mov
pop
lods
lds
xchg
cmp
sub
enter
cmp
sarl
bound
stos
je
pop
imul
les
xchg
xor
int
cltd
andb
xchg
and
mov
aas
sti
cmp
mov
push
or
push
aas
inc
and
cmp
inc
js
hlt
fistl
iret
cmp
push
in
mov
mov
outsl
out
outsl
pop
jns
in
cmp
aam
inc
jl
mov
das
sbbl
cmc
cmp
xchg
rcr
add
insl
dec
push
add
outsl
in
mov
sahf
jg
add
addl
in
fistpl
je
hlt
sbb
jl
xchg
lods
xchg
sti
cwtl
call
mov
nop
out
sbb
dec
mov
and
mov
int
popf
cmp
pop
fistpl
push
xor
sbb
or
icebp
sbb
mov
imul
shrb
das
ljmp
in
cmp
dec
sub
mov
subl
mov
cltd
jl
sub
fadd
gs
cmp
pushf
xchg
stos
xor
mov
push
mov
adcl
loopne
lret
ficoml
mov
push
push
imul
pop
xor
push
bound
repnz
daa
inc
dec
test
push
jb
mov
inc
add
push
dec
subl
cmpsl
movsl
xchg
push
push
xchg
das
lods
cs
push
mov
add
js
test
lahf
ret
jl
fistps
dec
and
sub
lret
jnp
sub
mov
popl
dec
sbb
sar
xchg
insb
mov
mov
dec
adcb
adc
jle
mov
pop
movsb
jne
and
xchg
cs
inc
repz
inc
test
mov
mov
lret
inc
ds
pusha
cmp
dec
xchg
imul
stos
jecxz
call
data16
fnsave
in
test
out
mov
push
pop
enter
sbb
cs
pop
lds
fisttpl
mov
or
add
aas
pop
dec
cltd
into
insl
pop
xchg
fstp
movsl
aam
inc
cs
les
jae
push
inc
cmpl
insb
gs
inc
jo
jg
repnz
sahf
sbb
adc
xlat
jge
not
stos
push
sbb
xor
add
lea
lods
jp
push
js
inc
adc
aas
xor
cmp
jmp
pop
or
pop
jnp
adc
scas
lock
out
outsb
lcall
xor
addr16
aas
cmp
dec
mov
jb
lcall
shlb
sbb
imul
inc
and
xor
mov
cmp
xchg
fldl
pop
jp
jmp
movswl
in
jp
push
cmpsl
mov
ljmp
fnsetpm(287
adc
and
mov
mov
fiaddl
out
pusha
cltd
sub
icebp
inc
jge
mov
pop
fstl
adc
mov
test
or
jmp
and
dec
addr16
pop
mov
lret
cmpl
outsl
xor
and
in
xchg
pop
shlb
or
dec
andb
lcall
mov
shl
icebp
lea
adc
pop
sub
ja
push
push
sbb
adc
xor
stos
add
aam
mov
sti
pop
mov
dec
lds
mov
jp
dec
dec
xlat
sti
daa
icebp
jmp
int3
insb
movsl
ret
xorb
mov
push
aad
sarl
push
mov
fadds
or
xorb
mov
xor
sub
cmp
mov
bound
cmc
mov
test
cmp
mov
in
mov
sti
imul
jo
dec
xor
test
imul
cmp
rol
pop
sub
rorl
addb
xchg
cmp
mov
rcr
es
out
pop
enter
push
stc
mov
shlb
jnp
add
test
add
adc
xchg
rcrb
push
fdivrs
mov
scas
inc
xchg
sbb
pop
add
fcmovu
lahf
xchg
out
out
lret
mov
jnp
dec
adc
sub
cs
mov
fs
sub
test
aaa
xchg
ss
imul
push
icebp
jg
fldl
jne
out
inc
mov
cmc
testl
or
call
test
push
fninit
scas
push
int3
xchg
jo,pn
dec
inc
in
xchg
push
cwtl
xchg
mov
xchg
lcall
test
add
int3
cmp
outsb
sub
add
sbb
in
mov
lods
shr
das
pop
ja
xchg
push
aad
or
fdivs
notb
rep
mov
daa
fcomp
inc
shlb
flds
out
pop
shr
inc
test
das
scas
xor
in
jbe
mov
mov
push
pop
xchg
mov
push
ljmp
shlb
jo
inc
ret
fs
lods
pop
push
or
mov
addl
push
aad
mov
das
stc
mov
ret
pop
mov
sbb
inc
sub
push
outsb
adc
ja
insb
and
imul
pop
add
push
sub
sbb
sbb
ljmp
push
fdivrs
xchg
adc
and
sub
loope
mov
mov
jbe
stc
cmp
push
insb
push
adc
add
xchg
mov
leave
pushf
sbb
in
clc
inc
ret
test
dec
loopne
lret
or
scas
xor
push
fs
xor
xchg
adc
sbb
mov
jb
in
pusha
xor
push
dec
cld
mov
imul
les
orl
sbb
das
aas
sub
aaa
out
mov
jp
sbb
in
jnp
and
sub
inc
cmc
pop
xchg
or
pop
addr16
daa
cmpsb
out
call
les
xor
mov
out
das
dec
push
out
mov
or
push
jno
pop
jmp
fcmovnb
xor
iret
add
mov
xchg
movsb
lds
mov
ljmp
adc
lcall
testb
mov
mov
insl
sub
ffree
jge
or
fs
fwait
in
lods
sub
in
sub
nop
pop
dec
xchg
sub
mov
pop
shlb
mov
cmp
sbbb
fsubrs
stos
sub
fld
pop
cld
test
xchg
xchg
sbb
test
mov
lcall
mov
outsb
cs
loope
mov
sub
mov
pop
orb
cwtl
jle
inc
sub
test
pop
in
adc
fsubrl
jp
test
das
or
push
jb
xchg
add
pop
adc
xchg
dec
cli
std
std
fs
ds
inc
dec
push
mov
add
pop
stos
add
pop
add
fcomi
shrb
and
imulb
push
dec
pop
testb
xor
iret
test
lea
pop
dec
ffreep
and
loopne
es
mov
cmpsl
cmp
xchg
sub
mov
push
sahf
or
dec
cltd
stos
pushf
push
dec
aas
mov
loop
push
add
int
mov
data16
jecxz
pop
call
imul
popf
mov
fsubl
push
lods
dec
mov
ret
out
shll
pusha
in
jns
xor
and
mov
pop
mov
mov
adc
mov
inc
fstp
rclb
xchg
jmp
jecxz
mov
movsl
add
in
and
mov
pusha
dec
cmp
xor
cmpsl
dec
mull
test
sub
ljmp
xor
inc
test
inc
loop
jns
jo
fs
int3
add
jo
add
gs
fwait
into
int
jecxz
mov
and
sbb
loop
loopne
or
out
filds
adc
insl
loop
shl
cmpb
pop
pop
cli
aad
aad
es
mov
adc
flds
dec
stos
dec
fdivrl
shrl
pop
pop
lds
outsl
rorl
out
mov
jecxz
gs
mov
movsl
xchg
frstor
pusha
es
push
andl
pushl
jmp
push
cmp
jnp
add
out
and
insl
repnz
cld
add
addr16
mov
fs
inc
sarb
xlat
dec
mov
pop
push
push
dec
jae
sub
in
mov
sbb
dec
cld
into
popa
push
sub
sti
fcomi
mov
mov
sbb
or
adc
lret
lret
mov
std
lds
fs
in
adc
mov
pop
dec
adc
dec
inc
divl
gs
sub
pop
or
repnz
mov
cmpsb
jno
sub
jmp
lods
sub
cmpsb
roll
mov
enter
dec
sbb
mov
or
cmpsl
ficoml
sbb
lds
orl
sub
pop
rclb
in
popa
fistps
xchg
adc
mov
xchg
mov
mov
out
outsb
fcmove
aad
fs
iret
in
stos
dec
xor
jp
jno
cmp
xchg
lret
and
push
mov
cmp
jae
jge
jge
pop
aad
mov
adc
inc
add
sbb
jnp
andl
rcrb
pop
int
jae
sarb
out
or
xor
mov
aaa
pop
xor
rcr
xchg
dec
in
lds
mov
push
rcll
imul
or
inc
mov
icebp
cs
sbb
mov
movsb
je
test
sbb
cld
in
repz
mov
sub
or
shrb
in
pop
xor
jecxz
cmp
fdiv
dec
fdivr
clc
sbb
ja
sbb
dec
pop
sub
ja
out
pop
pop
jp
in
sub
push
xor
add
loope
enter
push
or
sbb
addb
mov
shlb
int
xor
mov
shlb
in
pop
cli
rcrb
cmc
sub
ljmp
push
add
jp
adc
mov
test
jle
jae
add
aam
xchg
cmp
shr
jecxz
iret
jo
add
push
xor
xor
dec
dec
ja
sar
push
add
test
mov
arpl
pop
add
mov
icebp
pop
mov
cmp
inc
cmpsl
inc
cltd
add
ds
mov
xchg
add
iret
negl
jecxz
jmp
mov
aaa
mov
cmc
dec
fisubrl
cmp
jae
ds
mov
sub
or
adc
cmp
push
in
addr16
subl
and
addr16
stc
pop
pushf
lods
xchg
adc
adc
xchg
jnp
push
roll
and
addl
mov
mov
stos
jbe
lods
lds
dec
xor
xchg
xchg
std
imul
inc
inc
xchg
inc
pop
cmp
xchg
push
pop
dec
ret
lods
xor
xor
fwait
adc
fldcw
xchg
data16
aaa
pop
jg
mov
xchg
fisubl
loopne
sbb
mov
fildl
cmp
sti
jp
dec
out
or
rorl
pop
add
stos
jle
jb
mov
add
cmp
sub
mov
in
in
cwtl
ret
fcoms
mov
inc
popa
ljmp
mov
and
pop
sbb
inc
mov
jb
jp
iret
sahf
into
movsb
insl
push
dec
jb
jo
test
fsts
rcr
inc
dec
inc
jno
shrl
adc
xchg
jbe
sub
out
ss
leave
js
cmp
xchg
pop
jl
ds
dec
jno
rcll
fld
mov
sub
cmp
outsl
and
adc
in
jns
or
jne
and
inc
xlat
fdivl
push
mov
in
test
insb
popa
cli
pop
pop
jle
jl
rcrb
orb
mov
movsl
fwait
inc
cwtl
scas
shl
aam
in
mov
pop
xchg
in
ret
icebp
pushf
inc
loopne
bnd
dec
in
or
and
int3
aas
sbb
sub
in
lahf
sbb
in
sub
xchg
data16
ret
dec
xlat
mov
test
mov
fisubrs
jmp
pushf
dec
push
div
ja
dec
inc
out
push
bound
jns
xchg
dec
lods
lret
xchg
mulb
int
cmp
cld
ret
mov
and
enter
xchg
jle
xchg
psrad
xor
test
nop
rorb
adc
dec
sbb
dec
in
sti
mov
cwtl
mov
das
orl
pop
dec
sarl
fmuls
lahf
in
push
xchg
cmp
cmp
and
push
mov
cmp
xlat
xchg
push
xor
ret
jnp
xor
movsl
hlt
cltd
jns
sbbb
xchg
mov
push
fcmovnb
in
cwtl
and
cs
pop
push
insb
adc
jb
adc
ret
js
push
or
xor
push
pop
icebp
sbb
sub
mov
push
push
adc
pop
or
hlt
pop
pop
jmp
push
and
gs
or
jecxz
sbb
decb
jge
pop
pop
add
mov
fistpll
mov
pop
jge
cmp
cltd
push
cmpsb
fidivrs
jmp
xor
or
sbb
mov
mov
negb
addr16
pushl
pop
dec
sbbl
and
push
rcrl
ss
add
push
fs
mov
jle
adc
es
xchg
mov
fyl2xp1
insl
xor
stos
lds
add
lret
je
push
cmpsl
push
nop
adc
cmp
jle
sti
bound
int
push
fiadds
cmp
inc
add
jne
lock
cmpsb
mov
rolb
cs
js
ds
jecxz
inc
push
clc
int
add
xchg
insb
pop
shrb
and
lds
or
mov
cli
in
dec
fisubs
das
cmp
push
lea
cld
mov
sbb
ret
imul
dec
imul
fistpl
fisubrl
xchg
in
mov
cwtl
dec
cmp
inc
andl
cmp
pop
mov
mov
and
xchg
and
rclb
ret
and
testl
inc
popf
and
insb
pop
jae
lcall
xor
cmp
rorb
scas
out
jmp
iret
lds
xchg
add
adc
mov
scas
sub
add
dec
push
les
cmpsl
and
cmpsb
add
sbb
pop
dec
test
mov
cmp
xor
xorl
rclb
sub
add
xchg
aam
jno
arpl
pop
mov
pushf
lret
mov
enter
inc
push
sub
test
leave
cld
orl
andb
in
sub
leave
les
inc
xor
sbb
insl
ss
clc
adcb
sbb
out
test
rcrl
cmp
sub
lock
cmc
leave
arpl
push
inc
mov
mov
pop
imul
pop
sti
cwtl
insl
xor
jns
jmp
jno
xor
sbb
or
fnstenv
push
negl
ljmp
fsubl
lods
cmpsl
sbb
xchg
push
jg
push
lea
sbb
je
xor
sbb
push
mov
pop
jns
repz
pop
sbb
mov
outsl
fucomp
xchg
in
in
in
push
mov
mov
leave
pop
and
fdiv
sbb
pop
test
imul
iret
xchg
xchg
add
push
cmc
shl
or
shlb
fwait
movsb
out
ljmp
je,pn
and
sbb
cmp
push
mov
mov
gs
pop
and
imul
or
adcl
iret
sti
fists
popl
push
in
xchg
mov
mov
popa
push
jmp
popf
inc
push
sub
pushf
cs
into
pop
fwait
iret
or
xchg
stos
mov
cld
sub
cmp
xor
dec
mov
mov
sub
or
jmp
lcall
js
movsb
dec
fbld
stos
aad
out
lods
ds
arpl
jno
mov
mov
add
jg
movb
negb
push
or
push
data16
push
mov
out
lock
aad
lods
push
movsb
mov
scas
out
mov
xchg
ret
inc
cltd
fistl
mov
ret
popa
cltd
addl
jne
pushf
and
js
xchg
mov
pop
push
dec
sbb
mov
mov
mov
and
movsb
cmp
adc
xor
jge
hlt
mov
and
jl
push
sar
out
out
hlt
outsb
push
lea
fistpl
xor
and
nop
push
jmp
jns
mov
and
addr16
outsb
push
and
movsl
scas
push
mov
mov
bound
outsb
ja
jp
and
mov
xor
das
push
or
cs
dec
dec
shrb
jp
pop
data16
cmp
cmp
test
jb
pop
mov
clc
je
add
adc
jo
stos
mov
inc
jg
call
dec
fwait
das
ss
xchg
sub
js
loope
fisttps
pop
test
cld
mov
and
movsb
or
add
aas
shlb
push
pop
dec
imul
push
stc
fwait
pop
insl
cltd
enter
or
jo
xchg
cmp
adcl
lds
mov
pop
fidivl
push
test
or
push
xor
push
push
xchg
fstl
mov
loop
ficoms
sbb
insb
frstor
dec
inc
sbb
js
add
daa
push
fsubrp
pop
sbb
addr16
fsubr
lods
fsub
add
js
fcmovbe
gs
sbb
and
mov
call
adc
scas
add
in
or
test
mov
and
or
cmpsl
pushf
imulb
pop
fidivs
mov
stc
stos
cmpsl
into
stc
out
xor
call
pop
outsb
cld
and
subl
sbb
cmp
jge
mov
pop
sbb
dec
sub
stos
jb
idivb
out
movsl
jg
in
mov
xchg
jb
push
and
dec
push
shrb
fcoms
dec
dec
xchg
jae
and
adc
test
sub
in
push
inc
lods
mov
dec
mov
cs
inc
mov
lcall
mov
and
jl
test
popf
ret
and
rcrl
cmp
popa
aas
jecxz
jp
dec
jle
cmp
mov
mov
sti
loopne
repnz
xchg
push
out
add
icebp
scas
cmp
mov
hlt
push
cli
notb
push
ss
jle
shlb
ss
and
cmp
out
pop
push
fdivrs
scas
sub
fdivl
js
ret
enter
cmp
sahf
out
cmp
jg
in
out
repnz
fcoms
push
scas
out
pusha
test
sub
cli
bound
adc
popa
fdivl
scas
outsl
pop
rcrb
frstor
sbb
call
repz
sbb
sbb
jge
pop
xchg
addr16
cmpsb
sub
into
sbb
and
insl
mov
rorl
mov
xor
xchg
mov
add
lret
push
leave
stos
pop
xor
mov
inc
sarl
mov
jae
lret
aas
stos
jle
outsl
and
pop
fucomp
xor
notl
fmull
nop
push
jecxz
out
cwtl
insb
test
mov
pusha
and
nop
roll
fimull
mov
xor
xor
outsl
push
movsl
sti
lea
arpl
sub
jle
mov
mov
jl
fucom
insb
stos
aam
pop
and
mov
das
dec
outsb
sbb
imul
inc
flds
xchg
lahf
fs
and
xchg
or
repz
pop
in
pop
dec
movsb
sbb
fdivs
xchg
fildll
inc
test
and
frstor
shl
cmp
mov
daa
sbb
fisubs
add
inc
or
push
ljmp
repnz
sbb
rcl
and
mov
into
pop
mov
or
movsl
cltd
inc
stos
cltd
je
pop
test
pop
mov
psrlq
sub
imul
or
lahf
inc
popa
idivb
ljmp
ret
lods
jbe
push
dec
mov
sarb
push
mov
push
mov
xchg
rolb
popa
fwait
andb
mov
cli
dec
jbe
mov
stc
in
loop
inc
push
adc
xchg
mov
addr16
push
and
or
nop
push
jecxz
pop
inc
mov
mov
mov
dec
add
lret
cld
mov
jno
sahf
std
adc
mov
shl
shll
stos
lret
lea
fistl
mov
std
and
inc
aaa
fdiv
xchg
insb
push
jge
sbb
cs
cmp
xchg
out
push
push
inc
jl
add
jmp
mov
dec
sbb
jmp
fldenv
int3
outsl
pop
or
lock
cmp
lods
lods
in
rcll
cmp
aam
xor
lret
aaa
inc
enter
cmp
mov
lods
sub
jecxz
mov
lods
mov
insb
xchg
sub
dec
adc
icebp
and
shll
addr16
sbbb
sbb
xor
bnd
or
std
or
or
jmp
xchg
rolb
cmp
cmp
repz
mov
aaa
cltd
out
mov
jmp
pusha
aaa
fiadds
dec
adc
ficomps
push
ficoms
mov
mov
inc
popa
imull
aad
pusha
xchg
sarb
in
xchg
adc
jmp
or
addr16
ds
pusha
xor
or
subl
jbe
adc
adc
ret
movb
test
and
mov
jg
cmp
mov
cmpsb
repz
popa
test
or
cmp
fwait
mov
cltd
xchg
dec
adc
jae
jne
int3
jbe
addr16
pop
bound
push
nop
push
adc
sub
lcall
ret
negl
icebp
pop
fsubrs
push
or
jb
and
scas
lds
pusha
or
test
gs
fnstsw
sub
pop
jnp
or
int
adc
mov
test
jg
add
pop
mov
testb
fcmovb
dec
adc
cmp
cmpsl
mov
cmp
outsl
imul
scas
popf
bound
rorb
decb
jo
scas
ss
or
mov
sub
adc
cs
dec
cli
cmp
dec
in
cmp
xchg
dec
and
xchg
loopne
das
or
stos
mov
xor
jl
aaa
int3
rclb
aaa
loop
xor
add
add
add
mov
aas
jle
sub
mov
shrl
pop
or
ja
push
cmp
jns
inc
scas
ss
stc
scas
das
dec
push
mov
clc
and
mov
pushf
aam
enter
mov
into
jbe
xchg
rorl
inc
sbb
mov
adc
jge
push
and
and
dec
hlt
mov
aad
movsl
xor
push
test
insb
lds
mov
mov
mov
pushf
ds
pop
pop
testl
pop
in
out
or
outsl
clc
iret
jg
pop
outsb
mov
mov
mov
data16
pop
dec
sbb
sbb
or
jge
out
sbb
inc
std
fstps
or
or
loop
repz
push
jl
les
mov
pop
iret
or
scas
clc
pop
insl
jo
dec
inc
mulb
mov
push
pop
cmp
push
mov
jmp
aas
ficoml
jb
or
pop
xchg
push
in
xchg
push
les
push
bsr
aas
arpl
fdivrl
xchg
fcomi
iret
push
repnz
out
dec
mov
or
inc
mov
ss
hlt
mov
fcompl
or
sbbb
add
or
fs
outsb
imul
mov
repz
fnsave
xchg
stos
xor
pop
clc
mov
lcall
ja
and
notb
aaa
ret
test
mov
cli
mov
test
fs
jo
or
ret
lea
pop
scas
fs
mov
xor
in
jne
mov
stos
xchg
paddw
jge
in
or
pop
pop
jae
lahf
int3
xlat
dec
fnstcw
mov
pop
enter
gs
push
icebp
sbb
ret
mov
hlt
sahf
jno
nop
mov
hlt
loope
aam
inc
cmp
mov
dec
or
in
dec
and
das
insl
mov
cmp
push
test
xchg
out
inc
pop
xor
je
enter
sti
sub
sbb
xchg
into
fdivp
imul
or
xchg
xchg
enter
shlb
xor
inc
fucomip
popa
xchg
xchg
and
cwtl
sbb
ret
lret
push
addr16
test
cmp
jp
out
sub
cmp
xorb
push
jge
pop
gs
int
jne
push
xchg
xchg
cld
lahf
bound
cwtl
and
mov
push
cmp
jmp
add
or
jo
dec
cmpsl
insl
and
sub
outsb
pop
dec
pop
pop
mov
pop
xchg
mov
rclb
adc
sbb
or
ds
ljmp
sti
loopne
lods
cltd
outsl
add
test
fmuls
stos
pop
sub
inc
or
stos
out
add
andb
sbb
inc
cld
cmp
inc
inc
push
mull
in
mov
mov
mov
out
pmuludq
sbb
jge
mov
dec
push
jns
xchg
jmp
movsb
test
sub
sahf
leave
pop
arpl
and
mov
mov
pop
push
lods
xchg
mov
stos
repnz
mov
incb
pop
sub
inc
ds
fsubs
insl
repz
roll
testb
or
cld
subb
mov
sti
test
cmpl
out
mov
mov
sbb
inc
sub
mov
nop
scas
insl
sbb
sti
popf
cli
jbe
dec
lock
je
int
nop
adcb
pop
or
rclb
arpl
das
stos
jge
mov
popf
inc
add
sub
sbb
and
lcall
sbb
outsb
rcr
arpl
in
xor
dec
or
inc
sbb
int3
nop
jge
or
orb
mov
aad
aaa
push
pushf
mov
xchg
decl
mov
fiaddl
orb
mov
popf
in
mov
out
sbb
cmp
jnp
fsts
ret
shll
and
int
test
sbb
mov
xchg
iret
aaa
insb
shl
sub
sbb
dec
popf
mov
push
aam
fsts
repnz
std
jne
movsl
ret
and
lock
loop
mov
insb
dec
add
pop
sbb
cmp
jecxz
lahf
inc
shr
cld
std
jb
shlb
test
push
xor
fdiv
sub
mov
and
fs
mov
dec
shl
xor
popf
xor
xchg
out
sub
pusha
sub
cltd
jne
je
aad
cwtl
dec
imul
pop
rep
fadds
out
lods
add
stos
enter
mov
mov
icebp
pushl
arpl
in
cli
test
jne
dec
dec
ret
cld
jp
mov
imul
mov
xor
int3
inc
cmc
push
pop
les
cmp
repz
int3
and
fmuls
add
or
clc
jnp
cmc
iret
sbb
stos
and
cmpsb
push
outsl
fadd
add
insl
push
rorl
inc
xchg
cmp
iret
mov
jno
lock
dec
jp
jnp
or
cmp
testb
adc
cwtl
xchg
push
repz
hlt
sbb
jmp
jmp
push
loop
or
out
xchg
nop
stc
pushf
jnp
sbb
xchg
push
mul
inc
add
jg
insb
int3
loop
inc
sub
ds
std
dec
ljmp
push
jl
push
xchg
lret
daa
loopne
leave
jb
dec
ret
ss
sub
sub
lea
in
ja
inc
xchg
sbb
mov
jmp
int3
xor
push
leave
or
incb
mov
sarb
cmpsl
mov
sbb
stos
add
pop
push
rorl
xor
pop
arpl
dec
pop
pop
scas
push
pusha
jmp
dec
xchg
fsubs
ss
dec
pop
aas
mov
pop
shrl
inc
repnz
andl
and
push
mov
push
jns
jge
das
cmc
xchg
in
into
xor
inc
inc
cmp
pop
testl
pushf
mov
fimull
decb
movsl
pushf
inc
push
dec
add
mov
push
mov
xchg
dec
rol
ss
cmp
ja
mov
sub
in
or
ss
xor
icebp
roll
ja
jg
ret
mov
shrl
jbe
mov
xor
and
cli
or
mov
test
adc
outsb
sti
push
je
in
push
outsl
adc
sbb
in
xor
or
imul
cld
adc
jecxz
out
pop
and
push
test
mov
bound
mov
push
and
mov
aaa
pop
push
test
add
fmull
jecxz
daa
lods
inc
mov
jbe
adc
mov
popa
xlat
cmp
dec
out
insb
fsubrl
pop
les
ja
rclb
call
aam
dec
mov
jnp
mov
cmp
mov
push
cmp
int
push
xor
mov
into
out
ljmp
call
cli
idivl
or
cmp
aas
pop
iret
dec
xor
push
sub
ljmp
mov
mov
xchg
push
pop
data16
cmp
aas
mov
xchg
mov
pop
mov
ljmp
js
out
add
add
stos
add
leave
cmp
psrlw
push
stos
lcall
je
test
nop
pop
lods
mov
std
jno
lret
cmp
das
leave
pop
pop
cwtl
push
lock
cwtl
inc
pop
scas
hlt
insl
inc
sub
addb
orl
xchg
mov
xorl
inc
and
fisubrl
mov
imul
arpl
cmp
push
push
jno
inc
popa
out
in
mov
cs
xor
std
fcompl
pop
das
mov
outsb
scas
xchg
out
shrb
pop
andb
dec
rclb
aad
cmpsl
mov
inc
xchg
fwait
and
jp
scas
es
and
xor
in
mov
mulb
lret
mov
aas
call
fstl
cli
dec
mov
cmp
sbb
and
adc
adc
paddusw
shll
clc
daa
arpl
mov
movsl
addr16
and
int
ljmp
pop
push
dec
aaa
cmp
mov
xchg
jl
mov
popa
psubb
pop
mov
and
icebp
mov
out
out
and
mov
mov
stc
cmc
or
aas
cmp
rorl
hlt
xor
mov
mov
xor
js
ds
and
repz
cld
add
jmp
movsb
and
call
jb
push
xchg
jl
rcl
xor
dec
test
dec
and
in
bound
cmp
in
pop
mov
jge
xchg
enter
or
ret
pop
out
adc
add
mov
lea
stc
adc
hlt
dec
loop
mov
cmp
mov
xor
jnp
jg
xchg
add
cmp
push
xor
dec
lea
jns
xor
insb
test
mov
out
cltd
dec
jae
pop
xor
fildll
mov
mov
fdivrs
pop
sbb
lret
data16
adc
je
sbb
mov
les
pop
and
xchg
mov
dec
xchg
pop
jno
loopne
shr
icebp
lods
pop
pop
sarb
add
cmpsl
hlt
pop
movsl
roll
push
in
mov
mov
sbb
decl
rep
sbb
mov
xchg
jo
xchg
mov
stos
jno
xlat
scas
sub
pop
lods
cmp
hlt
rcl
icebp
pop
push
adc
sbb
stos
loop
andb
dec
or
dec
xchg
cmpsb
cmc
pop
popf
dec
cmpsb
mov
sub
repz
add
mov
fdivrl
mov
loop
sbb
decl
aaa
push
push
das
push
mov
rcrl
iret
movsl
repnz
adc
push
adcb
cmp
mov
push
test
add
loope
inc
lea
lds
add
push
in
jbe
push
out
popf
int3
mov
add
pop
lahf
cmp
and
in
and
sub
adc
mov
xor
loope
call
xchg
out
pop
push
xor
fwait
negb
jg
and
xor
dec
clc
and
fldenv
icebp
lock
push
jmp
hlt
test
ljmp
jl
jp
push
mov
mov
stc
adc
das
mov
cmp
test
stc
mov
jo
arpl
adc
jp
popa
stos
test
jbe
xchg
jg
xchg
and
mov
filds
dec
sbb
fistpl
and
loope
sbb
jnp
sbb
pop
int3
jno
cmpsl
jmp
enter
ja
adc
pop
cmpsl
int
imul
and
mov
cmpsb
rol
ss
lock
mov
mov
xor
sub
shrb
and
test
or
xor
xchg
jns
push
jns
or
push
in
fnstsw
push
fldl
xchg
lock
adc
mov
pushf
cmp
test
test
pop
cmp
ljmp
in
mov
cmp
enter
adc
push
out
ret
add
pop
mov
sub
lret
cld
lret
call
jbe
mov
fistps
stc
js
cmp
push
sti
jge
pusha
inc
lahf
pop
xchg
adc
push
into
enter
sti
aaa
xchg
aaa
adc
imul
movsl
xchg
jnp
cmc
pop
sbb
jbe
mov
iret
outsb
out
or
mov
jb
mov
add
push
mov
inc
and
mov
aaa
outsb
jg
ret
fists
das
call
xorl
aad
sub
cmpsl
addr16
mov
int3
mov
test
mov
push
cmp
in
xchg
fldt
mov
or
rolb
inc
push
cwtl
push
pop
loope
hlt
dec
jecxz
push
xor
shl
ret
push
popa
shld
test
js
into
movsl
adcl
fmuls
imul
push
xchg
ja
cmp
inc
push
dec
mov
xor
cmp
and
xchg
mov
mov
xor
push
jecxz
mov
lret
into
sbb
int3
mov
sbb
dec
cmc
outsb
in
jecxz
mov
pop
mov
dec
std
fistpll
cmp
outsb
lcall
jle
pop
cmp
sbb
xor
jle
or
mov
jns
xor
nop
xchg
dec
ds
mov
div
xlat
pop
xor
dec
fistl
sti
push
mov
mov
imul
mov
enter
jo
test
cld
loope
aad
cltd
inc
pop
xor
push
dec
mov
fs
fisttpl
adc
xor
push
movsb
js
add
xor
inc
add
je
cmp
mov
xchg
pop
lahf
int3
jge
cmp
pop
negb
pop
cwtl
stos
je
aad
imull
or
fwait
dec
sub
movsl
es
mov
cmpsl
hlt
inc
mov
scas
out
add
mov
imul
mov
mov
fistps
mov
or
rorl
fcomip
jecxz
js
push
notb
push
xor
iret
xor
mov
fcmove
mov
cmp
inc
popa
loopne
xchg
mov
dec
push
cmpsb
cwtl
inc
orb
imul
fbld
shlb
mov
mov
insl
arpl
movsb
xchg
xchg
loopne
jb
jo
pop
into
dec
mov
pop
cmpb
in
ret
add
mov
ficompl
lds
and
adc
mov
sti
pop
lds
cmp
or
adc
in
mov
ds
fiadds
inc
push
push
mov
dec
push
sub
push
popf
clc
sbb
add
inc
sbb
or
push
mov
jecxz
dec
push
loope
mov
outsb
xchg
add
std
push
cmp
xchg
push
pop
daa
scas
ret
adc
xchg
jle
stos
shr
dec
imul
out
std
fnstsw
int3
xchg
xlat
cmp
dec
and
inc
sbb
cmp
cltd
sub
adc
pop
and
xor
adc
sbb
cmp
ja
lret
lret
subl
or
cmp
pop
shr
das
add
lea
arpl
imul
xchg
push
call
jnp
add
mov
les
or
imul
sub
sub
push
enter
pop
lcall
xchg
in
sub
pop
jo
fcmovnu
mov
xchg
jbe
push
out
and
jno
sub
cmc
sub
insl
scas
mov
loopne
dec
or
inc
mov
stos
ret
adc
or
enter
mov
jp
out
ja
mov
dec
fbld
sbb
push
loope
jne
popa
and
xorl
pop
xchg
add
xchg
push
popf
loopne
mov
in
div
test
data16
mov
pop
inc
mov
aam
add
sub
out
inc
inc
ss
or
xchg
xorl
xchg
cmp
insb
clc
outsl
stc
ret
aaa
cmpsb
jg
cmp
sti
ja
ja
or
fwait
or
and
inc
and
loope
dec
pop
mov
loop
dec
add
rolb
movsl
das
scas
sahf
and
clc
pop
dec
xor
nop
test
popf
sbb
pusha
xchg
pop
adc
fs
and
sahf
std
dec
cmp
adc
ficoms
lds
sub
sub
dec
jp
ss
fmull
sbb
dec
sub
jl
lea
lods
sbb
stos
adc
xchg
out
mov
cmp
shrd
inc
fisttpl
cmp
js
sti
push
mov
loope
inc
bound
mov
lcall
lret
stos
int3
out
dec
xchg
jg
pop
and
lret
mov
add
jb
rcll
clc
test
pop
std
sub
pop
test
roll
mov
bound
jne
fstl
adc
jo
mov
cmc
jp
test
mov
cmpsb
lea
ret
and
outsb
mov
orl
pop
sub
jbe
dec
cmp
lea
lods
xchg
pop
mov
xorb
push
push
mov
pop
mov
pop
outsl
mov
aas
xor
inc
aas
mov
or
push
push
mov
cmp
mov
xchg
idivb
xchg
add
inc
loope
fmul
adc
mov
push
xorb
sub
test
imull
std
fistl
pop
icebp
and
in
dec
add
and
cmp
pop
push
subb
mov
stc
hlt
lods
mov
sub
add
std
cmc
mov
insb
int
fnstcw
out
sub
xchg
jecxz
repnz
mov
sbb
jmp
or
aas
or
cli
push
add
call
and
inc
aaa
push
push
fcomi
sarl
out
cmpsb
popa
push
pop
jnp
mov
int3
fildl
cmp
and
gs
or
mov
fbld
pop
dec
xlat
std
xchg
xchg
cs
pop
ret
push
jmp
in
xlat
pop
push
adc
fsubr
mov
out
and
pusha
lock
rcrb
repz
leave
push
es
xor
ja
loope
inc
ret
mov
mov
xchg
mov
jo
stc
out
cmp
fs
add
jno
mov
lcall
clc
jae
mov
xchg
inc
scas
jle
ja
lcall
cmp
outsb
push
sbb
adc
enter
inc
js
jge
repnz
push
jl
pushf
xor
sub
fisubrs
rcll
sbb
jns
push
or
pop
loopne
push
dec
push
test
mov
test
pop
mov
scas
add
cli
dec
jne
scas
xchg
stos
cwtl
jo
add
sbb
and
cld
jecxz
add
adc
lret
inc
ret
mov
xchg
loope
mov
and
xchg
pop
insb
sub
pop
bound
adc
cs
movsl
mov
adc
mulb
jbe
mov
lahf
dec
lcall
mov
sbb
xchg
adc
insl
adc
add
xchg
aad
pop
mov
jns
sub
mov
repnz
jg
push
dec
loopne
int
nop
mov
stc
jl
rclb
int3
stc
cmc
in
ds
xor
sbb
sub
movsl
call
jle
int
mov
cli
sbb
aaa
nop
sbbl
add
jecxz
jecxz
inc
imul
mov
mov
jne
ficomps
into
out
int
inc
add
dec
mov
inc
popf
test
mov
cltd
dec
sbb
in
in
jl
out
add
and
mov
mov
add
xchg
out
cltd
and
sbb
xor
or
fadds
lahf
jl
ja
sub
lcall
out
hlt
cs
sub
xor
or
xor
insb
iret
jae
pop
adc
xchg
xchg
mov
add
fcmovbe
imul
sbb
cmp
cmp
inc
mov
out
mov
push
mov
mov
ret
sbb
cmp
nop
scas
in
nop
shll
xchg
pusha
lea
imul
push
les
adc
mov
adc
test
push
push
mov
jg
sbb
pop
mov
lock
pop
outsb
mov
mov
pop
jp
and
xor
jp
and
sub
mov
xor
fs
mov
lahf
pop
dec
adc
jns
add
push
das
sbb
mov
adc
sub
jno
orl
push
xchg
xorb
popa
fnstsw
pop
dec
mov
mov
jle
mov
sbb
pop
jne
icebp
sub
mov
jle
out
sbb
mov
repnz
movsb
fisttpl
lods
nop
shlb
es
push
jnp
fdivrs
es
inc
sub
mov
aaa
mov
dec
add
mov
dec
pop
mov
fbld
sub
subl
aam
pop
and
push
push
jns
fwait
xor
xor
std
adc
loop
testb
ja
mov
imul
xor
icebp
loope
cmc
pusha
mov
jae
ret
sub
dec
sub
add
mov
push
insb
mov
inc
add
xchg
ds
cmp
mov
push
repz
jo
or
dec
outsb
cld
sahf
mov
aam
cli
sbb
sub
cmp
xor
mov
scas
pop
scas
faddl
dec
inc
ret
adc
dec
and
pop
xor
cmp
insl
inc
push
push
les
lods
aaa
mov
ret
xor
dec
mov
movsl
jp
test
jl
lock
cmpsb
adc
xlat
insb
push
add
roll
movsb
mov
xchg
int3
mov
daa
xchg
adc
cmpsl
jecxz
out
sbb
bound
xor
test
repnz
fcomp
cs
sbb
jne
and
xorl
dec
pop
les
sahf
cmpsl
add
xor
mov
loope
pop
stos
xor
add
arpl
dec
push
ret
jge
pop
jb
int3
sub
push
cmp
data16
mov
leave
sbb
mov
lock
add
jp
inc
sub
jmp
ds
pop
in
pop
test
pop
addr16
pop
cmp
cmp
leave
mov
and
mov
mov
cmc
std
aaa
addl
cmp
sbb
pop
lret
mov
popa
mov
imul
sbb
jmp
mov
xchg
cmp
adc
mov
cli
cli
pop
pop
or
es
push
gs
fcmove
jg
gs
or
mov
into
movsl
push
xorl
lods
adcl
add
push
dec
outsl
jp
andb
cmc
loopne
movb
mov
sahf
xchg
xor
jno
movsb
shlb
xchg
mov
adc
xchg
jmp
into
add
add
push
mov
mov
jecxz
int3
xor
cs
jo
jbe
fs
mov
mov
jmp
call
sbb
push
in
imul
xchg
jns
jbe
or
jp
roll
aaa
lcall
push
mov
push
imul
lahf
sub
enter
mov
jae
inc
sub
xchg
xchg
inc
outsb
sbb
test
test
pop
iret
add
insb
and
rclb
pop
sbb
outsb
aas
dec
push
inc
and
mov
jb
leave
jp
or
mov
or
addr16
js
xchg
rcrl
data16
aad
fiaddl
mov
xor
xor
int3
inc
lret
push
ja
push
cmp
cmp
mov
dec
cld
es
cmpl
in
idivb
mov
out
jle
rorl
stos
scas
lock
lcall
jnp
and
cwtl
test
std
xor
or
push
iret
sbb
mov
lods
or
mov
adc
lock
test
or
addr16
dec
fcomp
cwtl
pop
pop
lods
scas
stos
dec
cld
adc
fimuls
or
push
dec
ret
in
test
pop
or
movb
sti
xor
jno
inc
movsb
push
push
push
lods
cmp
adc
or
scas
push
mov
movsb
pop
fwait
mov
mov
hlt
insb
enter
sbb
imul
or
lret
sahf
pop
ljmp
cmc
xchg
mov
and
in
and
enter
dec
add
cmp
outsb
out
adc
repz
int3
inc
clc
mov
lock
shll
pop
loopne
jns
and
inc
mov
jecxz
add
lods
cmc
push
inc
pop
jle
push
adc
scas
outsb
jno
sub
jne
pop
pop
adc
adc
repnz
push
xchg
fisubs
hlt
mov
lret
adcb
outsl
or
mov
and
iret
mov
mov
in
movsb
xor
fcoms
fcmovnu
jmp
in
mov
jno
push
inc
cltd
and
inc
mov
addl
aad
lahf
cld
mov
pop
xchg
add
out
test
jns
fisubrs
xchg
xchg
pop
adc
mov
data16
popf
dec
rcr
jns
sbb
je
fistl
sub
xlat
jp
jp
inc
sbb
xchg
xchg
bound
pop
xor
add
xchg
cmpsb
test
dec
adc
aam
sub
push
pop
roll
and
dec
mov
push
pusha
stos
bsf
push
cmp
xor
mov
or
je
repnz
mov
xchg
repz
sbb
insl
xchg
mov
sub
aam
iret
dec
clc
xchg
push
mov
inc
idivl
loopne
add
xchg
lds
and
movsl
mov
mov
out
pop
cmp
test
out
push
movl
mov
gs
out
mov
std
pop
push
and
xchg
sbb
adc
and
lds
leave
leave
jl
pop
in
cmp
andnps
xor
inc
inc
cmp
cmovae
xor
and
and
repz
test
or
movsl
out
dec
test
aam
out
and
add
aam
xchg
xor
jecxz
adc
push
les
and
pushl
leave
push
fnstenv
or
cld
add
mov
sub
jp
inc
add
inc
cmp
add
outsl
enter
xor
inc
push
xor
clc
sub
sub
in
and
add
cltd
and
lea
fisubs
imul
stos
dec
push
sbb
add
push
popf
repz
fidivrl
pop
lods
shlb
push
add
clc
or
xchg
sbb
mov
pop
sub
dec
outsb
aas
mov
xchg
inc
enter
or
and
mov
mov
sub
xor
jns
xor
stos
popl
inc
pusha
insb
add
jl
imul
mov
imul
push
jae
clc
call
cmp
loopne
mov
rclb
sub
jae
inc
cmp
xor
lods
loope
ret
nopl
mov
test
outsl
pop
stc
inc
jl
aaa
push
cltd
outsb
push
movsl
and
lret
mov
inc
aaa
sub
mov
push
xlat
sbb
mov
and
rorb
and
test
dec
lods
sbb
outsb
xchg
mov
fnop
imul
dec
pop
lcall
push
push
lds
cmpsb
movsl
call
in
fcoml
add
in
adc
cmp
adc
dec
mov
sub
inc
imul
mov
mov
xchg
mov
lret
cld
xor
out
xchg
pop
cmp
ret
mov
sbb
dec
mov
cmp
push
into
jp
sub
mov
ja
out
lods
add
pop
xor
push
out
inc
test
mov
enter
lock
xor
mov
xchg
lods
movsw
and
add
test
lahf
lret
scas
pop
sbb
add
mov
mov
sub
test
xchg
lahf
cli
pop
lahf
mov
xchg
icebp
testl
adc
ds
test
out
xchg
shl
ret
bound
maxps
dec
into
jne
int
iret
test
inc
dec
dec
movsb
repnz
movsl
sarl
cmp
push
addr16
xchg
fistpl
test
push
les
rcll
xlat
sub
mov
je
scas
sarl
adc
mov
or
sub
lret
xor
add
mov
icebp
sbb
int
loope
lret
xchg
pusha
sbbl
cwtl
xchg
scas
pop
fwait
jbe
scas
xchg
fucomi
int3
mov
popf
jle
mov
lods
mov
sbb
and
lcall
xor
mov
cltd
dec
sbb
add
adc
mov
push
jmp
loope
xor
mov
fstpl
outsl
lret
jb
sarb
stos
dec
andl
push
add
mov
lea
and
xor
lret
cmpsb
js
jne
movsl
adc
scas
lcall
imul
mov
xor
nop
sub
push
jg
pop
stos
dec
ds
and
mov
icebp
cs
lea
aam
pop
and
jp
cld
daa
adc
push
inc
arpl
jecxz
mov
sahf
enter
pushl
notl
dec
mov
repnz
pshufw
cwtl
push
loop
xor
inc
int
push
xorb
leave
fwait
xor
xor
push
sub
outsl
xchg
in
fs
cmpsb
sbb
xor
cmp
xor
fdiv
or
mov
arpl
mov
or
les
enter
cmp
leave
rcl
cltd
add
loope
cmp
sbb
add
repz
sbb
scas
ja
filds
pop
mov
mov
enter
movsb
xchg
mov
bound
sti
mov
and
lahf
aas
xchg
shrl
xor
addr16
add
orb
lods
fidivl
or
dec
out
adc
cmp
test
dec
aas
ret
xor
fiadds
negb
or
test
and
mov
lcall
call
push
inc
xor
dec
fidivrs
out
push
xchg
loope
push
pop
test
mov
or
lods
adc
aad
int3
push
movsl
mov
cmc
arpl
add
lret
push
xor
inc
xchg
lods
push
push
stc
push
bound
fcom
in
jge
xchg
imul
sub
jp
mov
les
xchg
and
in
push
lret
aam
gs
adc
inc
aad
xor
mov
xlat
sub
inc
add
mov
lret
loopne
xor
xchg
test
add
xchg
push
mov
add
push
lods
dec
loopne
fildl
cmp
mov
aaa
int3
xchg
xchg
lds
jnp
inc
jo
inc
xlat
or
sbb
jne
mov
dec
push
adc
mov
in
ds
ja
shrb
push
stos
das
xor
fidivl
xchg
cmp
lret
mov
dec
cs
cmpsb
testl
mov
imull
push
xchg
pop
outsb
xchg
push
mov
cli
adc
and
faddl
cmpsl
loopne
mov
shl
pop
rcll
mov
xor
test
inc
out
jecxz
nop
ljmp
dec
jg
xchg
nop
js
lret
and
adc
stc
cmp
int3
sub
movsb
xchg
xchg
and
or
xchg
lea
pushf
out
int3
ret
arpl
imul
and
cmp
ds
add
lea
rorb
test
mov
sbb
ja
cmc
mov
mov
arpl
xor
or
push
and
fcoml
hlt
jecxz
xchg
imul
rcrb
jmp
adc
mov
xor
xor
inc
mov
nop
cmp
mov
mov
cmp
in
mov
out
xor
inc
add
xor
mov
cmp
mov
fdivrs
mov
sbb
xchg
mov
cmpsb
push
pop
sbb
inc
adc
rcrb
push
cltd
cmpsl
xchg
mov
aad
sahf
mov
or
les
jmp
push
or
cmc
xchg
nop
and
pop
inc
loop
shl
pop
rclb
iret
xor
lods
stc
scas
mov
mov
adc
enter
xchg
leave
push
jo
pop
ds
in
mov
mov
stos
jo
stos
in
dec
mov
outsb
out
insb
inc
mov
mov
pop
sbb
jl
out
xlat
xchg
push
call
mov
jmp
adc
in
xor
outsl
mov
jl
cmp
pop
sub
sub
mov
push
mov
pop
xor
fsubs
dec
sti
xlat
shrb
mov
jo
pop
push
inc
push
mov
loope
mov
and
dec
aaa
push
rcl
leave
xchg
and
sarl
push
mov
insb
jmp
cmp
int3
sbbb
pop
mov
ds
pop
jp
fnstsw
mov
cmp
les
dec
sbb
xor
dec
sti
jb
cltd
outsb
push
mov
cmc
push
rcrl
jecxz
mov
ror
outsb
mov
rcr
ljmp
pop
cs
mov
outsb
and
call
nop
repz
lcall
fwait
outsb
movsb
test
into
gs
decb
mov
mov
add
mov
adc
cli
or
sub
cmp
mov
xchg
dec
iret
cmpsl
add
sbb
popf
insl
lret
fists
int3
sbb
loop
cmp
adc
dec
mov
pop
scas
aam
push
inc
add
pop
fnstsw
xchg
divb
adc
mov
push
sbb
sub
cmpsb
into
mov
int3
sub
enter
dec
movsb
iret
inc
scas
inc
mov
in
jmp
push
insb
pop
lcall
add
add
or
jnp
mov
add
imul
movsl
decb
xor
mov
js
test
jp
stos
cltd
sti
in
mov
adc
adc
jbe
jae
in
add
popa
adc
fiadds
mov
jbe
insl
int
mov
arpl
jns
dec
cmp
mov
iret
push
pop
jnp
lds
lret
hlt
mov
int
xchg
movsb
ret
pop
cmp
test
arpl
mov
mov
adc
xorl
je
mov
pop
mov
das
pop
push
cmp
lods
jmp
adc
psrlq
add
popf
pushf
cmpsb
mov
pop
aaa
add
movsl
testl
cmc
sbb
sbb
ret
xchg
scas
repz
je
inc
addb
jo
addr16
mov
adc
loopne
lcall
push
sahf
jmp
das
sbb
test
icebp
fistpll
dec
cmp
enter
or
mov
ljmp
fs
jb
mov
cmc
inc
movsl
sbb
int3
outsb
ljmp
sbb
scas
xchg
cli
out
aad
push
rcl
pop
testl
add
adc
xor
jnp
scas
add
mov
mov
shlb
adc
call
scas
insl
push
subl
fs
mov
xlat
popf
xchg
roll
jnp
add
mov
lock
lret
ret
in
loop
add
repz
mov
ja
xchg
inc
out
out
mov
sbb
js
or
xor
and
cmp
out
push
push
enter
push
pextrw
dec
inc
cmc
pop
jo
arpl
outsb
sub
rclb
lea
inc
test
mov
xchg
les
scas
stos
lea
adc
daa
test
popf
mov
hlt
shl
int
dec
in
cmpsl
jne
push
ret
sbb
test
and
lcall
jbe
mov
jge
cmp
cmp
fwait
inc
loop
cli
inc
add
aad
enter
jmp
jmp
stc
mov
test
pop
jge
push
aad
loop
xchg
fcom
jmp
js
mov
mov
sbb
je
call
push
jne
fimuls
pusha
stc
es
cmp
aas
pop
sbb
cmp
mov
jmp
sub
push
mov
sub
cmpb
sbb
jge
frstor
jnp
inc
sar
and
cmpsb
sub
push
push
mov
popf
rcll
push
add
and
and
call
hlt
in
xor
loop
scas
xchg
cmpl
jle
rclb
xchg
mov
xchg
or
jge
fbstp
sub
negb
stos
int3
jae
aam
fstl
movsb
xor
insl
adc
mov
cmc
dec
dec
out
jnp
jl
mov
mov
push
mov
cli
in
or
sub
in
mov
lcall
inc
mov
jae
jmp
xchg
ret
icebp
ds
stos
imul
std
fidivl
xchg
xor
sbb
mov
andb
inc
and
sub
jge
jecxz
mov
in
jnp
xchg
fildll
dec
cli
push
lea
stos
jl
daa
ret
mov
cmp
inc
jno
adc
or
sbb
ss
or
cmp
dec
daa
ljmp
mov
lret
jne
outsb
sub
mulb
push
decl
mov
jge
xlat
inc
mov
mov
sbb
in
push
xor
xchg
and
sub
mov
dec
lods
adc
out
jl
and
jl
sbb
arpl
enter
stos
daa
sarl
mov
mov
scas
shlb
mov
xor
push
inc
add
mov
test
je
add
adc
pop
pop
xchg
xchg
repz
dec
and
test
dec
shll
cmpsl
les
in
mov
lods
mov
ret
sub
int3
les
out
in
mov
and
push
insb
iret
ret
ret
test
sbbl
outsl
enter
neg
mov
aas
icebp
cmp
pushl
aad
jl
and
shrb
faddl
xchg
dec
popa
adc
inc
push
xor
add
das
es
pop
call
cmp
jnp
cmp
dec
add
mov
sahf
dec
cmc
inc
arpl
lcall
loopne
mov
mov
adc
pop
das
jns
pop
cmp
mov
xchg
sub
mov
cmp
adc
push
outsl
shlb
subb
inc
push
shrl
cmp
test
fmuls
and
cmpsb
add
gs
and
in
cli
ja
aaa
xorb
test
call
jmp
cwtl
pop
and
dec
lods
mov
inc
and
xchg
aam
mov
mov
xor
mov
scas
cmp
xchg
jnp
out
scas
push
add
cmpsl
ljmp
and
inc
cmp
or
mov
push
cmp
movsb
adc
mov
fnstenv
rolb
fstps
stc
jmp
sub
je
add
test
lock
add
push
mov
and
das
fidivl
dec
pop
xchg
pushf
push
gs
jbe
xchg
in
ds
popa
cmpsb
pop
cli
inc
jns
lahf
lret
fwait
mov
and
rcll
scas
add
icebp
dec
out
xor
rcrl
add
or
push
mov
mov
mov
mov
pushf
xchg
sub
lock
jo
cmp
popf
dec
fdivrl
jb
and
fidivrs
es
not
aad
mov
lcall
test
add
gs
aaa
mov
jns
sbb
and
cmp
roll
dec
mov
lock
stos
cmp
arpl
mov
jne
es
aas
ljmp
and
shl
nop
mov
movsb
mov
dec
push
mov
insb
insb
push
pop
test
int3
inc
scas
jbe
loope
add
dec
mov
push
jne
pop
jge
pop
out
cmp
pop
adc
dec
push
into
xchg
test
sbb
sti
cs
insb
and
daa
mov
push
mov
add
fstpl
xor
inc
pop
jg
insl
pop
add
xor
mov
mov
mov
push
scas
sbb
pusha
lahf
pop
adc
adcb
mov
orb
cwtl
inc
push
inc
out
mov
test
add
push
daa
or
jnp
lock
loopne
lods
jmp
pop
pop
inc
or
pop
ja
mov
and
fisttps
inc
loope
outsl
and
cwtl
jp
jecxz
shl
ret
js
cmc
push
hlt
xchg
adc
lahf
mov
jp
int3
lds
in
add
cmp
pop
cmp
sahf
shrl
mov
scas
test
mov
jnp
mov
or
lcall
xchg
lods
push
inc
repz
cmp
inc
cmp
dec
icebp
imul
and
adc
xchg
mov
push
xor
lods
sti
sub
pop
dec
sub
repnz
sub
test
and
loopne
xchg
rcll
inc
sub
bound
jo
sbb
pop
xchg
lret
jl
jle
pusha
add
cmp
jp
hlt
push
dec
pop
mov
xor
testb
adc
add
ja
aam
mov
cs
mov
cmp
addr16
add
js
ss
jns
into
mov
cmp
push
fwait
jg
ja
lods
and
inc
jp
jae
loope
out
lret
or
fsubr
cld
jle
push
adc
data16
jae
jg
aad
mov
adc
xchg
aas
subb
les
loope
push
adc
xchg
fs
jnp
ja
adc
cmp
mov
dec
rorl
adc
cmp
in
ror
repz
or
mov
mov
pop
pop
mov
and
ljmp
or
ljmp
stos
mov
cmpb
fisubs
shll
fnsave
jmp
enter
adc
xor
mov
sbb
xchg
aas
mov
inc
lea
cmp
pop
cmp
lcallw
cmp
outsb
push
xchg
lods
or
sub
sub
adc
xorl
lret
inc
mov
aam
rcr
test
pop
adc
gs
ss
fs
push
cmp
jmp
pop
mov
js
ror
pop
xor
xchg
adc
sub
je
scas
inc
insb
xor
fstp
sub
jne
inc
add
andl
cltd
add
fstpl
cmp
gs
pop
jp
xor
and
out
fnstsw
jns
mov
sub
add
sbb
fsubrl
add
sub
outsb
in
popf
or
fwait
das
cmc
cvttps2pi
pop
repz
mov
imul
inc
dec
sub
int3
adc
ret
lahf
jg
rcrl
mov
cmp
adc
leave
or
adc
xor
adc
mov
jecxz
push
addr16
call
jle
dec
ficoms
lds
mov
inc
lods
dec
rorl
aad
mov
lds
stos
mov
test
jle
xchg
sbb
ja
inc
dec
jg
push
mov
jns
push
pusha
cmc
sti
filds
jne
mov
fistpl
sbb
popl
clc
pop
shlb
hlt
jo
fs
data16
movsb
mov
pop
fcompp
sbb
jnp
negl
lcall
test
out
xchg
fidivs
mov
sub
xor
imull
movsb
leave
imull
push
std
mov
leave
aas
or
pop
mov
xor
stos
sub
insb
insb
lret
jae
push
data16
adc
sahf
mov
outsl
int3
fildl
lcall
mov
pminsw
adc
pushf
xchg
imul
daa
aam
fsub
adc
andb
ss
jno
mov
in
push
or
adc
addb
xchg
into
inc
xchg
adc
inc
xchg
stc
addl
stos
fwait
popf
pop
lret
mov
inc
fcomp
imul
mov
in
mov
loope
pop
cmp
mov
ss
ja
sbb
sub
mov
out
out
pop
fucomp
mov
push
pop
pop
test
ret
lds
pop
rcl
xor
jg
lods
inc
and
ds
cmp
adc
jp
cltd
jae
test
dec
jne
xchg
xor
mov
orb
ss
sti
insb
pop
and
cmp
xor
pop
jg
or
mov
insb
cmp
jae
xchg
pop
out
fstpl
rolb
mov
int3
ret
jo
fldenv
push
dec
mov
push
inc
comiss
out
test
mov
xor
cmp
cmc
dec
jg
mov
sti
cmp
iret
lock
test
lcall
jbe
inc
xlat
sub
fs
jne
in
adc
xor
sub
das
push
mov
sti
sub
lods
push
lock
scas
lahf
cli
sti
push
aad
out
jnp
aad
imul
arpl
cmp
ret
dec
add
push
insb
xlat
sub
lea
cmc
jmp
push
fdivrl
push
dec
mov
lock
std
sbb
std
xlat
push
adc
outsl
xchg
dec
shrl
clc
outsb
push
push
movsb
jo
or
adc
pushf
sbb
mov
clc
test
popf
cmp
fisttpll
out
stc
sbb
push
mov
fdivrl
inc
dec
lea
inc
inc
ficoml
jbe
pop
cmp
lahf
neg
gs
push
dec
jmp
add
cmpl
sbb
ret
int3
pop
aad
or
leave
ret
sub
or
orl
mov
ret
lock
clc
and
mov
das
add
sub
hlt
xor
pop
imul
cs
jecxz
outsl
lret
mov
shrb
pushf
cmp
lods
mov
mov
test
jbe
dec
add
pop
cmp
jo
dec
cltd
sub
std
repnz
cmp
adc
and
mov
scas
mulb
test
ds
sbb
sbb
fs
jg
jl
mov
rolb
or
xchg
fcomp
jnp
mov
sub
mov
loope
inc
xor
stc
xor
das
popf
fadds
sub
jo
sub
ja
push
and
inc
in
add
cmp
pop
ja
rolb
push
in
mov
lret
mov
mov
js
insl
aaa
add
movl
adc
cltd
adc
mov
ret
nop
fistpll
push
push
imulb
faddl
cmp
jl
xchg
push
mov
scas
and
inc
push
mov
and
imul
neg
cmp
jne
decl
out
test
imul
andps
jnp
or
int
insl
push
cmp
sbb
je
clc
mov
add
stos
insb
dec
mov
jbe
or
aas
loope
or
cwtl
addr16
test
aam
cs
sub
dec
mov
fcmovb
push
jl
insb
sbb
jge
dec
fisubrl
add
cmp
aas
mov
or
add
mov
adc
xor
push
lcall
jmp
stc
fmuls
adc
adc
ds
sti
pop
idiv
insb
push
jge
shrb
push
loope
mov
adc
mov
nop
jae
lods
daa
outsb
add
les
push
dec
hlt
pusha
sbb
cwtl
pusha
adc
pushf
shlb
push
nop
push
pxor
push
mov
fnstcw
je
incl
arpl
dec
push
cmp
sbb
lds
xchg
gs
testl
inc
and
mov
add
enter
lds
xchg
fisubrl
cmp
in
lret
out
aaa
dec
loopne
or
xor
loope
aam
adc
cmp
cmp
jmp
loopne
push
jne
andl
out
cmp
sbb
enter
bnd
inc
xor
xchg
inc
loopne
stc
or
xor
call
mov
sti
fadds
outsl
cmp
lret
cmp
movsl
fsubs
int3
mov
inc
loopne
aaa
jo
jnp
pop
xchg
xor
mov
decl
sti
or
push
and
into
cli
dec
mov
jae
xlat
mov
or
ljmp
rclb
dec
aas
push
xchg
and
xor
popf
nop
dec
xchg
rcl
lcall
adc
sub
mov
pop
push
fbld
xorb
arpl
idivb
int
cmpl
fmull
mov
lsl
cmp
repz
mov
ss
repnz
pop
and
popa
push
mov
das
jb
cmp
in
aam
xor
enter
xchg
std
or
jg
cwtl
push
inc
lret
xor
and
stos
inc
xchg
testl
icebp
xchg
xor
gs
sarb
lret
push
inc
imulb
and
inc
int
test
movsl
in
std
je
inc
ja
push
jae
call
lcall
mov
jmp
out
insl
mov
stc
std
dec
scas
out
ds
imul
or
adc
mov
jo
mov
ret
fs
push
iret
dec
in
out
mov
push
int
mov
or
cltd
jne
sbbb
sub
int3
jnp
icebp
push
sub
sbb
enter
movsl
dec
ljmp
into
cmpsl
jge
and
push
aaa
xor
les
push
lcall
jge
lret
cmpsb
xchg
fcompl
insl
inc
cmp
add
mov
pop
lea
adc
xchg
sub
dec
test
fistl
rolb
xchg
pop
cld
xor
mov
shrl
sbb
push
sbb
sbb
out
sub
mov
int
je
mov
clc
cmovp
dec
jno
adc
stos
jle
in
cmpsb
sub
push
data16
jmp
repnz
jbe
jmp
push
sbb
outsb
xor
fucomi
movsb
mov
rolb
pop
mov
mov
test
shlb
jp
mov
iret
mov
ret
xchg
and
inc
lcall
decb
inc
inc
lahf
push
flds
les
adc
jae
jecxz
ljmp
cltd
nop
and
mov
insb
pop
pop
or
shlb
cs
push
jno
loopne
test
xor
mov
pop
mul
dec
cltd
pop
rorb
jp
xchg
scas
icebp
mov
je
add
cmp
xor
stc
xor
jmp
jmp
or
cmp
pop
js
out
sar
push
mov
ror
cli
xor
cmpsl
sti
pop
dec
in
xchg
adc
xchg
hlt
xchg
xlat
push
out
dec
mov
lahf
pop
rorl
or
cmp
fsubrl
dec
icebp
jl
mov
popa
and
or
jmp
add
imul
jg
push
fistps
popa
xchg
sbbl
rolb
ljmp
repz
lret
mov
add
and
test
rcr
lcall
xor
arpl
cld
addr16
push
jg
rcr
xchg
hlt
dec
mov
cld
mov
push
dec
jecxz
xor
ret
xchg
fdivl
out
out
data16
hlt
fs
inc
adc
mov
add
mov
and
or
adc
lds
jl
cmp
aam
mov
cmc
out
xchg
pop
jnp
xor
or
mov
jmp
repnz
mov
sahf
inc
stos
lea
scas
cmp
cmp
xchg
iret
in
test
pusha
mov
or
xor
in
aad
sub
jne
movsb
insb
lods
ret
jae
mov
movsl
imulb
push
push
sbb
cmc
inc
rcr
jl
rcll
test
mov
lods
xchg
in
adc
add
in
sbb
stos
aaa
jb
fidivl
xor
xchg
aaa
push
fs
mov
adcb
lds
cmc
clc
cmp
mov
mov
call
shll
out
lock
dec
mov
pop
dec
outsb
jecxz
mov
jg
imul
lret
popf
or
xchg
push
push
cmc
decl
push
nop
push
loope
adc
cltd
sarl
shlb
lcall
stos
test
jno
sbb
stos
das
leave
sbb
inc
adc
sub
push
jmp
addr16
insl
out
lods
daa
clc
push
fldenv
pop
mov
out
enter
and
lds
mov
sub
adc
push
pop
cmp
push
xchg
aad
cli
xor
pop
daa
xor
lds
xchg
lds
mov
push
js
xchg
cmp
incb
repnz
arpl
xor
add
mov
pop
mov
jle
movsl
insl
adc
mov
int3
lock
push
ja
mov
jle
dec
imul
jmp
xchg
nop
in
inc
gs
sub
or
pushf
dec
lock
outsb
outsb
ffreep
enter
test
cmpsl
fwait
mov
mov
inc
stos
push
mov
wrmsr
xlat
mov
aam
dec
mov
repnz
cmp
jge
dec
push
fwait
scas
mov
clc
les
mov
notb
aaa
pop
mov
adc
mov
mov
cmp
rorb
inc
fmuls
cltd
loopne
mov
jbe
movsl
mov
and
std
movsl
jmp
jno
cmp
cltd
loopne
pop
in
mov
adc
js
xchg
lcall
add
jecxz
call
add
stos
stos
sbb
mov
mov
or
lods
cmpsl
pop
sbb
imul
adc
xchg
popa
pop
jp
or
inc
repz
in
shl
mov
adc
daa
nop
insb
pop
test
out
mov
jns
popa
sbb
and
push
jb
mov
sbb
fdivr
jb
jmp
scas
aad
lret
inc
and
cmpsl
ljmp
xlat
out
test
sub
mov
and
mov
xchg
movsb
lods
outsb
lcall
add
or
imul
frstor
fidivl
jns
scas
aas
xor
push
mov
cmpsb
popf
sbb
and
jmp
adc
and
insb
push
pop
cmpsb
mov
jbe
jae
shll
mov
push
mov
sbb
mov
mov
arpl
popf
sbb
rcrl
sbb
cltd
cmp
add
push
sub
dec
or
dec
int3
sub
add
lcall
pop
mov
sarl
adc
outsb
movsl
sub
mov
insl
mov
xorb
or
sbb
cmpl
jb
pushf
push
pop
sahf
xor
in
adc
data16
and
pusha
adc
cmp
lret
pop
aad
cmp
adc
repz
les
jne
add
lea
xchg
bound
sub
movsl
ljmp
fcmovbe
out
dec
into
enter
and
mov
cli
sub
stc
inc
dec
out
mov
xlat
iret
leave
mov
or
cs
mov
xorb
jl
sarl
cmp
enter
jb
add
or
sub
mov
add
movsb
out
sbb
cld
mov
pop
mov
dec
cmp
adc
enter
cltd
xor
inc
lock
insb
in
xor
and
jo
not
sub
roll
mov
mov
xchg
pop
in
dec
aaa
rorb
movsl
ss
mov
rcr
fucomi
adc
xchg
cwtl
jnp
sub
mov
int
lods
pop
push
push
xchg
cs
leave
sarb
jmp
sbb
add
mov
adc
rcrb
out
insl
loopne
pusha
in
push
or
pop
lret
cmpsb
icebp
pusha
xchg
sahf
pop
dec
fcomi
scas
pop
scas
rcrb
add
pop
ljmp
push
fistl
loopne
test
and
pop
jmp
shll
add
mov
xlat
arpl
es
mov
adc
sahf
cmc
or
je
hlt
int
stos
loope
inc
movsl
pop
sbb
inc
jno
inc
cmp
test
leave
push
push
add
jns
aaa
dec
popa
insb
xor
mov
mov
fs
jmp
in
lock
nop
aaa
xchg
jg
insl
and
push
and
ja
sbb
and
push
xor
out
out
rolb
popa
fbstp
inc
call
jns
add
test
fsubrl
inc
jmp
jo
pusha
mov
xchg
pop
es
lods
sbb
insb
cwtl
scas
adc
scas
fwait
hlt
inc
std
mov
jmp
enter
test
xor
pusha
inc
pop
cli
add
loopne
movsl
fwait
cmpsb
pop
push
aas
fcompl
add
ret
fcmovu
mov
iret
xchg
out
loope
mov
mov
cmp
out
ficomps
pop
dec
sbb
imul
sbb
dec
xchg
jne
and
xor
pop
jg
mov
stos
mov
popa
mov
mov
sub
push
push
sbbb
cmp
rorl
cwtl
scas
int3
cmp
out
aaa
out
push
xor
dec
sbb
and
bound
leave
pop
adc
cmp
add
iret
fildll
loopne
jnp
bound
lret
pop
leave
leave
daa
pop
fidivrl
pop
mov
sahf
ss
ljmp
fidivrs
adc
test
push
out
pop
mov
fstpl
icebp
xor
sahf
add
enter
or
inc
pop
dec
cltd
ret
or
fnstsw
and
sbb
and
mov
cmp
cmp
lock
mov
mov
ljmp
jg
cmp
mov
sub
xor
and
and
push
mov
bound
mov
mov
mov
pusha
mov
add
sbb
add
lcall
or
fsubrl
imul
sahf
xor
stc
sub
jo
dec
repz
ja
mov
mov
pop
mov
cmpsb
inc
xchg
push
lahf
sub
xchg
jl
fwait
aaa
in
adc
hlt
jns
jno
pop
fimuls
lock
jmp
or
pxor
mov
dec
clc
xor
dec
push
dec
sub
pop
lock
and
hlt
das
ss
lea
data16
cli
lea
add
cmp
arpl
pop
ljmp
aaa
push
push
push
add
mov
inc
ds
loope
push
lods
sbb
insb
addr16
dec
stc
sub
mulb
sbb
pop
lock
sub
outsl
pop
dec
push
mov
jmp
mov
xchg
pop
sbb
icebp
fcmovne
out
stos
aad
push
jg
or
repnz
mov
pop
rcrb
mul
iret
push
mov
push
and
rclb
sub
sbb
mov
push
sbb
rcll
mov
push
mov
subl
cmp
push
cmp
addr16
inc
popf
cmp
push
cwtl
popa
mov
mov
sbb
cmp
test
jle
sub
pop
pop
movsl
les
jmp
xchg
es
push
lret
in
xor
idivb
int
scas
arpl
adc
cli
jae
ret
incl
cmp
jecxz
lods
inc
clc
jecxz
mov
mov
arpl
test
ficoms
dec
fadds
lret
mov
xchg
mov
nop
jle
out
mov
adc
dec
pop
jns
ljmp
sbb
mov
inc
dec
aad
lahf
or
sbb
adc
dec
data16
orb
push
rcrb
jle
cwtl
jle
jb
subl
nop
xchg
aam
out
xor
mov
loope
pushf
cmp
cmp
and
jecxz
in
fwait
loope
xor
inc
xor
lahf
jle
insl
jp
sbb
mov
repnz
add
xchg
into
mov
and
cmp
mov
add
add
ja
mov
mov
inc
inc
mov
sub
push
inc
mov
repnz
pop
jl
sub
pop
xchg
and
and
dec
mov
fsubp
gs
adcb
pop
test
aaa
clc
mov
dec
add
push
and
push
and
mov
add
and
pop
pop
add
cmp
or
hlt
fcomps
inc
aam
clc
push
cmp
out
adc
ds
ret
icebp
mov
add
push
rcl
in
arpl
in
sub
pop
stos
imul
pop
pop
in
fstl
xchg
orl
push
mov
mov
outsl
repnz
dec
mov
pop
sbb
sbb
dec
push
mov
divl
pushf
addl
enter
adc
outsl
repnz
xor
push
push
dec
in
fs
xchg
arpl
pop
mov
sti
cmp
lock
pusha
sub
cmp
ret
mov
mov
mov
fistl
sub
mov
gs
test
sti
mov
jle
jg
adc
cwtl
aas
fdivrl
adc
in
inc
pop
jne
imulb
inc
push
in
fisttps
insl
xor
mov
movsl
lahf
decl
dec
mov
jecxz
push
cmc
and
fs
pop
stc
pop
dec
leave
mov
mov
sbbl
sbb
testb
sti
scas
adc
push
adc
in
ds
or
jp
dec
cmp
cwtl
push
fst
xchg
push
cwtl
jmp
cld
call
fcomps
adc
mov
mov
push
mov
lahf
adc
stos
into
add
xchg
or
pop
out
shll
push
sbb
lods
jb
movb
pop
push
xchg
mov
xor
push
inc
scas
in
sbb
out
xchg
adc
dec
dec
dec
push
xor
es
fadd
sbb
sbb
mov
rcrl
jecxz
push
jp
in
cmp
test
cmc
adc
push
insb
imul
sbb
sahf
lods
adc
fisubl
mov
dec
sbb
fnsave
xchg
leave
movsb
fidivrs
scas
fsubrl
test
stos
inc
mov
cmp
movsl
pop
jno
or
xorl
lret
xchg
insl
cmpsl
xchg
push
jb
sub
aad
pop
out
scas
mov
and
fwait
clc
sbb
sub
pop
xchg
out
clc
dec
shlb
mov
push
inc
add
xchg
mov
sbb
mov
addb
in
mov
clc
mov
test
mov
cs
pop
add
cmp
adc
scas
call
in
xchg
das
pop
mov
jno
out
add
daa
mov
dec
lds
test
das
and
aaa
lods
add
shll
test
insb
mov
mov
xor
push
nop
ja
mov
arpl
cmc
jae
cmp
dec
movsl
int
add
push
and
aaa
scas
mov
cmp
inc
cli
outsb
jae
pop
jmp
aas
jmp
shl
test
jg
add
dec
inc
adc
lds
ret
and
and
xchg
pop
pop
loop
ss
jl
outsb
xchg
cld
lods
push
add
xchg
adc
mov
inc
daa
jbe
clc
and
xor
clc
adc
mov
or
xor
push
test
daa
sbb
lret
lcall
mov
pop
ljmp
sti
insb
mov
mov
mov
data16
cmp
in
push
movsb
in
notl
adc
outsb
or
mov
into
in
mov
shrb
push
repnz
fnsave
or
setbe
push
pusha
inc
add
loope
mov
sub
aam
andl
enter
stos
fstps
sub
sbb
xchg
leave
pop
add
pop
test
xor
hlt
cmp
mov
jne
inc
xchg
add
ds
cmp
dec
lcall
adc
std
or
mov
ds
negb
aaa
or
mov
dec
sti
jg
jne
subb
pop
pop
cmpl
cld
lret
adc
pop
dec
dec
jns
cmp
jb
xchg
and
inc
fsubl
add
cmp
lods
sahf
cmp
sbb
inc
popf
mov
sub
sahf
jbe
ret
or
rcr
jno
movsb
sub
push
cmp
dec
jle
fdivrl
cmp
daa
out
inc
hlt
aam
das
dec
lods
sbb
andl
mov
mov
jl
lods
hlt
pop
fnstcw
jmp
popa
cli
addr16
hlt
ret
sbb
leave
sub
push
jg
sub
mov
insl
pop
sub
sub
fists
push
std
lea
adc
adc
xor
in
and
rcrb
mov
cwtl
pop
addr16
lock
cwtl
adc
push
fistpl
push
in
and
push
lea
int3
int3
pmaddwd
push
clc
mov
notb
inc
leave
and
jnp
push
jns
push
loope
stos
push
or
pusha
or
stc
pop
ja
push
mov
push
insb
lods
stos
inc
fcoms
cmp
inc
sbb
in
int3
rcl
outsl
cmpb
push
inc
mov
adcl
fildll
and
test
mov
adc
scas
push
and
aaa
dec
adc
ljmp
dec
inc
mov
or
loopne
add
cwtl
sbb
or
addr16
pop
push
lea
xchg
push
push
into
jb
push
std
mov
sbb
push
pop
mov
jp
xor
cli
and
sti
in
sbb
pop
mov
lock
int
push
mov
and
rorl
inc
and
cmp
jb
imul
mov
jle
or
mov
mov
pop
lret
das
mov
sub
repz
cmpsl
push
cli
cltd
dec
pop
decb
inc
and
push
cmp
pop
les
sbb
aaa
mov
inc
mov
test
inc
cli
mov
rorl
aaa
xchg
push
pop
bound
sub
movsb
in
insb
loop
xchg
scas
adc
dec
xor
fsubrp
xor
test
dec
add
bound
cmpl
xchg
adc
xchg
jp
adc
iret
sbb
adc
rcrb
pop
arpl
sub
arpl
push
imul
adc
dec
jne
pop
sbb
xor
push
fimuls
xor
add
jge
lret
lods
decl
xchg
mov
and
pop
adc
mov
jg
xor
inc
pop
imul
rcr
inc
jb
xor
xchg
push
jns
dec
fnstsw
cmpsb
mov
out
or
call
pop
dec
push
mov
fcmovu
jbe
fdivr
inc
iret
mov
sbb
push
stos
call
jns
test
inc
sbb
push
insl
inc
push
push
mov
pop
testb
xor
aaa
xor
loope
shll
inc
enter
adc
cwtl
pop
sar
jo
cmp
pop
xor
inc
dec
inc
in
jmp
je
das
mov
lea
add
cltd
xor
ds
or
push
scas
test
add
dec
push
fldl
cmp
lods
ss
in
sub
push
push
leave
pop
repz
call
int3
add
and
sub
lock
push
and
mov
mov
inc
sbb
pop
out
sahf
mov
fldcw
popa
add
mov
mov
pop
cmp
pop
dec
stc
lahf
add
mov
cmc
xchg
push
mov
mov
add
adc
ljmp
push
subb
inc
les
addr16
push
gs
lret
mov
or
scas
add
es
incb
xor
pop
push
lods
cmp
lock
mov
mov
or
lahf
inc
dec
lds
in
mov
sbb
and
or
or
cs
xchg
sbb
mov
mov
push
push
fsub
jp
pop
mov
jge
addr16
push
sbb
aam
add
fmull
and
pushf
push
or
or
cmp
lahf
lahf
dec
jae
stos
ret
jge
cmpsb
xchg
xchg
xor
icebp
cmp
inc
cld
mov
out
xchg
xchg
sbb
out
mov
sti
aaa
push
lds
mov
nop
call
ret
xchg
sbb
sbb
sbb
shrb
xchg
in
adc
cmpsl
pop
icebp
gs
mov
outsb
cmp
fmuls
and
jl
mov
dec
pusha
in
repnz
mov
dec
dec
add
inc
cmp
gs
rolb
in
sbb
es
push
inc
inc
gs
push
push
scas
int
cmp
outsb
push
out
push
fistpl
repnz
sub
cmpsl
mov
into
cmp
rcll
addr16
mov
xor
sbb
add
aad
adc
inc
sti
or
pop
xor
jno
or
dec
cmp
fiaddl
jns
jne
add
jns
xor
out
dec
in
dec
inc
cltd
mov
aam
ret
sahf
mov
cltd
cmpsl
xchg
push
adc
call
cmp
lahf
scas
es
or
mov
out
rcll
fimuls
ficoml
mov
rorl
fdivl
push
add
push
and
aad
xchg
mov
mov
inc
pop
pusha
stos
stos
pop
cmp
insl
push
push
call
dec
sahf
decb
outsb
add
xor
in
xor
out
mov
jno
adc
sub
mov
or
int3
jle
in
imul
bound
xchg
rorb
xchg
or
das
sub
fisttps
in
or
pop
lock
addr16
das
lods
packsswb
xor
sub
cmpsl
sub
push
push
les
sahf
jl
out
mov
scas
pop
sbb
jno,pn
pusha
sbbb
inc
in
adc
mov
loope
pushf
ds
and
fildll
and
sub
adcl
aam
add
sbb
jne
insb
and
mov
mov
outsl
rcll
pop
lock
div
enter
xchg
inc
scas
addr16
stos
fucomi
gs
cwtl
call
xor
and
mov
inc
xchg
aad
jecxz
outsl
sbb
pushf
daa
mov
nop
aaa
or
imul
inc
ret
cmpsl
cmpsl
andl
ror
sub
mov
lret
pop
stc
mov
push
nopl
lret
gs
cmpsl
cmc
test
mov
sahf
movsl
lcall
or
fbld
xor
sbb
jge
mov
adc
mov
xchg
xor
testb
test
fsubrs
jb
stos
fcoms
int3
imul
out
lock
insl
int3
and
das
mov
ret
mov
xor
mov
rcr
xor
or
es
cmpl
add
add
dec
js
add
cmp
cmp
adc
or
or
lret
popa
or
fidivrl
in
das
es
inc
inc
addr16
sbb
lahf
xchg
inc
xchg
cld
and
test
imul
mov
jb
xchg
incb
xor
dec
mov
cmp
das
lods
dec
mov
inc
jno
add
pop
iret
fadd
add
call
ret
inc
mov
cmp
in
sbb
sti
cltd
aas
inc
mov
lock
add
and
dec
and
mov
jbe
sbb
xchg
mov
mov
orl
mov
add
outsl
in
nop
push
dec
fidivl
rcl
test
fisttpll
pop
lahf
stos
jmp
out
jns
or
jo
cwtl
add
addr16
repnz
popf
verw
popa
xor
and
jne
call
pop
or
aas
movsl
dec
lods
rcrb
adc
pop
ret
mov
stos
test
add
sub
sahf
pop
jae
call
or
push
add
mov
nop
movsb
test
das
outsl
addr16
jbe
popa
outsl
push
sbb
les
sub
cmc
cmp
push
in
pushf
xchg
mov
in
stc
push
lret
or
stc
dec
cmp
xor
call
sbb
enter
sti
add
or
pop
inc
stc
jle
dec
xchg
adcb
mulb
fimuls
nop
gs
and
daa
dec
int3
stos
pop
jp
jne
test
cmp
mov
cmpsb
and
cmpsl
sub
ljmp
lahf
mov
cld
pop
xchg
xor
arpl
jmp
dec
xor
sbb
ret
dec
rcrl
loop
outsb
dec
rcll
out
jg
mov
inc
mov
mov
imul
sti
push
int3
xchg
je
and
popa
xchg
popf
mov
cli
fildll
mov
pop
cmpsl
movsb
mov
test
xor
jb
clc
clc
mov
mov
pusha
aam
out
popl
pop
fs
push
sub
or
xlat
cmpsb
ljmp
stos
pop
inc
fprem
cs
leave
cmp
es
daa
xor
lea
bnd
inc
dec
icebp
sahf
mov
dec
lods
pop
iret
sbb
filds
and
insl
int
mov
scas
xchg
dec
popf
jmp
gs
xor
cmpsl
pop
sbb
mov
add
cltd
roll
daa
or
ficoml
xchg
cmp
push
aaa
popf
lock
push
addr16
and
stc
sahf
pop
pop
push
pop
imul
in
pop
sub
and
ja
scas
xchg
pop
mov
fsubp
int
into
sbb
popf
inc
dec
pop
lods
adc
out
pop
mov
sbb
movsb
fstps
mov
pop
ja
repz
dec
mov
push
xor
aam
sti
xor
sbb
jb
xorb
rcrl
scas
push
xchg
xchg
call
mov
pop
pop
mov
jne
insl
mov
js
jnp
insb
jne
pop
arpl
dec
fmull
jb
sub
adc
aaa
filds
adc
dec
inc
push
popa
xor
rclb
jg
and
hlt
sbb
inc
and
sahf
xchg
sub
ljmp
mov
into
xchg
sub
pushf
cli
inc
or
jg
nop
xor
jae
sbb
push
jecxz
push
mov
sbb
xchg
clc
test
mov
sub
sbb
dec
lods
fcompl
mov
js
and
push
js
fsubs
dec
test
sahf
add
fnstcw
inc
sub
xor
arpl
fldt
pop
inc
bound
into
add
xchg
push
rcrb
pusha
inc
daa
call
push
xchg
mov
adc
sub
aam
jg
jp
push
inc
lret
lock
js
pop
std
outsl
sub
popa
adc
xchg
jbe
mov
xchg
pushf
leave
cmp
jge
cmpl
ljmp
dec
xor
mov
in
repnz
push
vmwrite
xor
stos
inc
pop
and
insb
mov
jne,pn
out
mov
jne
fs
or
pop
repnz
fwait
std
or
scas
ljmp
adc
imul
adc
pop
add
lahf
movsl
stos
add
cwtl
inc
test
mov
add
loop
sub
out
mov
jmp
ljmp
mov
add
stos
dec
jae
cmpsl
jno
sbbb
add
insl
aaa
mov
fst
mov
lea
add
in
mov
pop
pop
sbb
cmp
lret
in
lret
shrd
std
sbb
push
or
pop
je
lods
stc
mov
movsl
xchg
cmp
cmpsl
les
adc
daa
xor
dec
test
outsl
or
adc
and
and
mov
pop
mov
or
arpl
xor
push
push
mov
outsb
in
test
rol
pop
adc
test
sahf
je
xor
inc
xor
xor
mov
test
cld
ds
and
gs
pushf
jle
pop
sub
ret
inc
test
lret
sti
pop
inc
xorb
xor
mov
pop
pop
mov
mov
pop
adcb
leave
movsb
ljmp
imul
jno
mov
mov
dec
fcmovb
jns
call
jne
sbb
mov
cli
inc
mov
and
sbb
sub
hlt
dec
jo
dec
and
pop
fimuls
repz
push
xchg
add
or
push
rorb
and
push
cmpsb
sbb
or
ret
xchg
leave
cmpsb
movsb
inc
mov
pop
popa
add
mov
and
std
mov
addr16
add
test
fstp
push
mov
pushf
push
aaa
fcoms
lock
movsb
sub
cmp
insb
mov
mov
shrl
mov
jl
xchg
dec
sub
repz
repz
jmp
pushf
sub
jb
push
test
mov
sub
sub
test
jb
fisubl
fwait
scas
or
popf
cli
and
push
xor
clc
arpl
jp
cmpsb
addr16
and
popa
cs
mov
jge
les
je
jnp
mov
shrl
pusha
stc
pop
lea
push
adc
inc
push
std
das
ss
sar
xchg
pop
call
mov
cmc
clc
jl
in
xchg
roll
cmpl
sbb
push
out
fxch
xchg
repz
cmpsl
adc
loop
push
gs
mov
ds
flds
jne
xchg
cltd
mov
popf
pop
jbe
popf
shl
aas
push
sbb
or
cmpl
imul
jb
mov
mov
xor
push
sbb
mov
push
call
push
inc
mov
pop
sbb
movsl
js
imul
daa
inc
je
mov
repnz
movsb
adc
outsl
pushf
xor
push
insl
insb
hlt
imul
add
sub
add
fiadds
sbb
pop
mov
leave
shll
repnz
xchg
push
sub
das
aas
xchg
ds
aaa
fucom
rol
sub
xlat
dec
lds
sub
les
jb
fs
test
gs
insb
and
push
shlb
rolb
test
enter
nop
arpl
mov
imul
mov
pop
fists
mov
pop
adc
mov
xchg
sub
nop
jne
dec
pop
mov
add
fistps
cmc
push
daa
xor
outsb
outsl
stos
dec
addr16
scas
iret
inc
hlt
insl
out
cmc
fbstp
call
in
mov
push
mov
fisubs
push
and
xor
cmpsl
inc
movsb
movsl
push
test
xor
lcall
in
scas
gs
mov
or
movsl
sar
inc
negl
adc
popf
fsubr
push
push
ja
movsl
je
insb
loope
jle
movsb
add
add
dec
push
cmp
sub
sbb
popa
or
adc
inc
cmp
inc
cltd
shll
aad
pop
out
sbb
jnp
aad
sub
je
dec
stos
xchg
inc
leave
adc
or
dec
and
cmp
fnstsw
test
fnsave
int
jg
inc
psubb
jle
rcrb
ja
cld
sbb
cmp
or
aas
jle
jg
mov
inc
mov
in
jne
bnd
shll
fstpl
push
rorl
pusha
and
je
gs
mov
cmpb
mov
call
sahf
shrb
cmp
xor
adc
inc
pop
sti
fnsave
popf
xchg
mov
mov
mov
push
scas
jo
inc
mov
dec
dec
mov
inc
jg
lret
mov
loopne
add
jmp
aam
or
sbb
and
jno
mov
push
mov
pop
stos
mov
out
fistpl
lahf
mov
mov
repnz
inc
inc
dec
sbb
repnz
jo
push
daa
mov
and
out
mov
push
cmc
mov
dec
add
lods
mov
jp
pushf
xchg
or
fistpll
xor
out
test
dec
ja
aad
or
and
mov
xor
and
dec
jnp
cs
int
mov
inc
or
into
nop
addps
loope
mov
xchg
xchg
std
scas
xchg
stc
js
fs
idivb
imul
inc
test
mov
and
xor
or
inc
fsub
data16
pop
aam
mov
jb
mov
in
call
push
loopne
inc
dec
imul
dec
dec
mov
adc
imul
imul
rcrb
out
imul
jg
mov
pop
push
arpl
cmp
loop
lcall
or
bound
mov
dec
inc
aas
adc
xchg
dec
clc
lods
xchg
push
lahf
fistps
push
rorb
add
stos
aad
stc
push
ret
aam
push
xor
aad
aas
push
inc
inc
mov
mov
mov
sahf
scas
jnp
adc
insl
and
iret
cmc
sub
xlat
xchg
int
inc
sbb
xchg
and
fs
adc
inc
je
jns
subb
cmc
mov
add
push
jb
xor
cmp
movsl
fstpl
mov
xchg
aam
xlat
popf
in
ret
fisttpll
pop
int
jmp
andl
rcl
adc
push
inc
repnz
fdivr
loop
push
dec
cwtl
daa
jbe
dec
scas
cld
insb
scas
jne
push
cmc
lods
sbb
cmpsl
aad
mov
jle
insb
movsl
addb
dec
les
les
out
aam
mov
pop
jo
add
jb
cmpsl
jmp
lock
cmp
mov
add
pop
inc
jle
sub
mov
pop
and
fcmovnu
push
ds
add
pop
fiadds
gs
and
test
aas
ds
adc
sub
lret
lods
scas
ljmp
xchg
into
loop
dec
push
imul
push
stos
add
adc
sbbl
cltd
cmc
test
xor
out
and
stos
incb
xor
lret
andl
push
in
and
add
in
test
pop
mov
jmp
push
cmp
xlat
shll
fldenv
adc
pop
mov
cltd
mov
test
xor
pop
sbb
push
and
ficoml
lods
adc
scas
mov
pop
js
out
pop
movsb
xchg
mov
xchg
mov
pusha
test
pop
insl
test
int3
jl
test
or
inc
cmp
daa
pop
or
decb
fchs
ficoml
lods
sub
xor
xor
pop
enter
bound
jg
jmp
cli
fdivr
ret
test
xor
clc
jle
inc
add
cmp
add
xchg
xorl
mov
jle
cmpsb
xor
or
lock
andb
jno
mov
dec
mov
scas
adc
add
jbe
sbb
mov
add
push
push
iret
cmp
andl
imul
adc
in
fsub
ffree
mov
out
aas
and
push
out
outsb
and
push
idivl
loopne
movsl
data16
pushf
dec
rcl
lods
sub
cs
daa
addr16
dec
cmpl
adc
cmp
cmp
mov
pushf
shlb
xchg
dec
out
push
hlt
ret
cmpsl
pop
mov
jae
jl
fsubrs
aas
clc
inc
int3
add
shrl
in
or
pop
pusha
test
dec
fldenv
pop
fsubs
jge
cmp
inc
pushf
xchg
lds
ret
cmp
and
and
lea
mov
test
daa
pop
push
loopne
add
ljmp
imul
out
fcoms
call
test
insl
dec
pop
xor
jne
inc
out
adc
jle
mov
in
inc
xor
loop
je
ljmp
mov
ret
ret
jb
sbb
imul
inc
sub
jl
shlb
inc
mov
xor
mov
pushf
daa
addr16
jecxz
setb
mov
add
sahf
push
sti
inc
pop
mov
aam
mov
xor
sbb
mov
pop
mov
lcall
adcb
xor
aaa
add
push
sbb
les
and
std
arpl
mov
movsb
fcmovbe
mov
jl
cmc
and
and
jae
add
sbb
adc
push
or
add
cmp
fwait
pop
mov
outsb
cmp
pop
and
scas
inc
into
pop
add
dec
insl
es
jo
mov
sbb
insl
aas
sbb
lds
add
out
es
daa
test
adc
das
push
add
cli
testl
jne
test
stc
dec
cmpsb
pop
daa
jle
cmp
lahf
sub
jmp
pop
push
andl
rcl
mov
and
adc
das
and
or
mov
push
cwtd
and
inc
push
daa
sub
pop
jle
jbe
fiadds
xor
fwait
sbb
and
leave
ljmp
xchg
sbb
notb
int
testl
test
jne
and
xor
sbb
mov
lock
sbb
adc
rolb
cmc
in
jle
jo
inc
pop
dec
test
cltd
lret
mov
les
lret
push
mov
xor
data16
ja
insl
xchg
test
jne
loop
in
mov
aaa
pop
or
mov
aad
repz
mov
leave
shr
adc
inc
dec
xor
mov
jg
mov
mov
adc
xor
mov
loope
pusha
jns
inc
mulb
adc
dec
movl
xchg
push
or
mov
out
and
xchg
imul
stc
shl
and
stc
cmp
mov
pop
mov
dec
dec
adc
pop
test
xchg
stos
cmpsb
and
lahf
push
ror
icebp
shrl
xor
inc
inc
sub
cmp
fnsave
lahf
jb
scas
sbbl
xchg
jbe
jmp
fisubrl
idivl
push
imul
cli
push
aad
jmp
cmc
mov
inc
ret
fildl
mov
mul
jmp
cs
je
mov
into
or
stc
cwtl
shrl
or
pushf
fs
xchg
scas
inc
sbb
dec
inc
sub
mov
xchg
push
adc
and
dec
loopne
lret
mov
fisubrl
xchg
mov
test
xor
lods
pop
mov
ret
aaa
mov
xchg
ror
inc
int3
in
adc
mov
add
aas
lret
nop
cwtl
stc
daa
ret
ds
outsb
and
push
shr
dec
mov
stc
cli
int
mov
sarl
cmp
dec
sbb
xchg
dec
cmp
call
imul
or
or
fldenv
sbb
ficoml
pop
pop
push
jmp
or
scas
sbb
mov
jnp
xor
addr16
sub
sbb
inc
inc
in
pop
sbb
nop
mov
add
sub
mov
rolb
and
jb
mov
icebp
mov
insl
cmp
mov
push
dec
push
mov
movsl
pop
and
mov
mov
std
jnp
adc
mov
mul
dec
sub
lods
idiv
outsb
xchg
mov
push
mov
xor
fsubp
add
ret
pop
js
sub
xor
lods
movsl
dec
lds
mov
out
inc
xlat
push
xor
lds
add
xor
mov
cmpl
loope
cmp
sbb
ljmp
mov
pusha
inc
aas
insl
push
stos
and
xchg
sub
pop
pop
into
push
rcr
xor
rorb
inc
out
push
outsb
inc
cmpl
pop
push
lods
hlt
divl
push
test
mov
sub
hlt
in
fmulp
imul
popf
jmp
outsl
gs
and
in
stos
push
sub
or
std
sbb
out
mov
xor
cld
sub
mov
es
add
and
sub
mov
jle
cmpsl
lea
idiv
push
data16
repz
push
insb
cmp
mov
idivb
insl
shrl
mov
dec
jge
icebp
and
in
inc
push
mov
mov
xor
or
xchg
mov
mov
cltd
or
xchg
stos
add
inc
leave
ja
dec
lahf
jge
pop
inc
jae
mov
in
add
mov
aad
jae
rcrb
and
fnstcw
sub
dec
pusha
xchg
ret
mov
dec
cs
inc
fld
mov
lods
xchg
add
mov
cmp
push
jp
jb
and
repnz
and
subl
add
add
ret
inc
cs
in
pushf
or
dec
cmp
dec
adc
sub
and
mov
push
ss
adc
clc
sarl
push
mov
mov
mov
mov
data16
xchg
cmp
sub
xchg
repz
addb
add
jo
jns
repz
shl
mov
sbb
outsl
into
out
mov
orl
dec
xchg
mov
and
movb
cmpsb
loopne
pop
scas
cmp
sub
add
cmpsl
jmp
call
push
xchg
stos
dec
push
nop
sub
lods
aam
sub
sbb
or
shll
scas
insl
push
popf
add
lock
mov
popa
std
ss
imul
insl
add
or
loop
sbb
sub
test
sub
sbb
jg
daa
or
imul
or
sbb
adcl
in
in
sbb
push
or
das
dec
rcl
outsb
call
adc
pop
push
in
cmp
mul
out
push
push
cmc
outsl
test
pop
or
lret
stos
mov
push
xchg
cmpsb
mov
xlat
addr16
out
xlat
cld
mov
and
push
addr16
shl
inc
mov
jl
inc
xlat
push
mov
sti
cs
arpl
mov
popa
pop
shlb
mov
out
cmp
into
mov
add
xor
jp
push
mov
in
movsb
push
xorl
inc
sub
jmp
ljmp
in
jmp
xlat
out
sbb
bound
loop
sub
mov
cmpsl
outsl
push
xor
sub
rcl
rolb
hlt
mov
shl
fdivs
loopne
fisttpl
imul
cli
mov
and
insb
sbb
fisttpl
dec
mov
je
or
xchg
sbb
mov
daa
dec
adc
push
pop
cwtl
cld
jbe
nop
add
and
inc
xchg
dec
bound
xor
sbb
js
mov
mov
mov
std
fnsave
add
adc
mov
cmp
or
jcxz
cld
mov
out
shrb
mov
popa
lea
jnp
push
jp
and
push
sbb
adc
jmp
mov
lret
mov
or
and
cld
mov
add
lock
add
ror
mov
xor
ja
cmp
outsl
test
cwtl
push
or
popa
or
pop
adc
scas
fwait
pop
test
sbb
pop
aad
cmpsb
jg
push
andb
and
gs
lret
inc
imul
jle
pusha
adc
sarl
and
inc
jne
jno
arpl
sub
jb
mov
and
in
in
loope
push
arpl
cmp
pop
jle
in
sarb
dec
mov
sarb
mov
pushf
adc
mov
sbb
aas
cmp
jp
mov
in
xchg
jle
enter
insl
jb
cwtl
out
ja
sub
testb
add
inc
es
shrb
sbb
sti
inc
lea
mov
stos
mov
mov
dec
jbe
ret
pop
dec
inc
arpl
lret
cwtl
repnz
pop
pushf
icebp
sarb
hlt
loopne
movsb
lahf
testl
jge
xor
test
call
sbb
push
dec
sbb
loop
divl
lods
xchg
arpl
pop
and
into
js
insb
out
aaa
push
in
mov
ds
push
xchg
lcall
or
icebp
repz
xchg
mov
scas
or
pop
clc
jge
and
jmp
inc
add
inc
jns
inc
mov
mov
mov
outsb
int3
arpl
decb
ret
in
dec
call
aam
lret
push
in
cmc
push
repnz
shlb
inc
call
push
add
popf
lahf
inc
xor
bsf
xchg
das
aas
loop
mov
and
loope
or
mov
and
les
xchg
sbb
cli
xor
out
pop
pop
push
adc
ljmp
iret
mov
adc
nop
clc
imul
sbb
push
cmp
sti
xor
in
in
rcll
hlt
pop
fstps
or
test
flds
xlat
mov
add
hlt
rcrb
mov
or
sub
inc
cli
cmpsb
shlb
cli
ja
inc
and
fisttpl
inc
xlat
and
in
cli
test
enter
sahf
mov
hlt
inc
and
jmp
add
stos
sub
js
loopne
xchg
clc
mov
rdmsr
dec
enter
int
aaa
hlt
bound
or
fnsave
in
sbb
lds
data16
add
pop
inc
inc
pop
add
mov
dec
cs
jl
out
jbe
fcom
add
inc
inc
test
lock
cmp
mov
in
and
pop
mov
psllw
xor
sub
leave
repnz
insl
iret
and
call
fbstp
xchg
push
lods
lods
bound
cmp
sar
cmc
sarb
adc
pop
push
sbb
pop
movsb
cmp
sbb
out
push
xlat
push
cwtl
jle
aam
jne
jno
iret
jg
dec
dec
inc
fdivrs
aas
or
lsl
in
xchg
push
out
ljmp
adc
lods
fstps
inc
inc
xor
sarl
sbb
testl
and
cmc
mov
lods
sbb
or
lea
mov
mov
cmp
popa
into
adc
adc
pop
sub
xor
out
inc
fsubrs
cmp
mov
and
mov
ret
sbb
xchg
inc
xor
cmpsb
add
scas
or
mov
lods
and
imul
int3
add
pushf
and
ret
jnp
aam
xchg
sub
ja
mov
mov
add
fisubs
inc
fucomp
jno
insb
push
roll
dec
cmp
in
movsb
and
push
pop
push
loope
mov
jnp,pt
js
mov
adc
pop
pop
dec
mov
mov
and
flds
jmp
call
ja
sub
cmp
or
pop
ret
pop
mov
aad
fs
mov
std
mov
popa
insb
lret
inc
sbb
insb
das
sarb
addr16
pop
xor
lea
imull
adc
sbb
pop
pop
push
mov
pusha
insl
je
icebp
into
je
mov
popf
inc
push
ss
push
jne
shlb
inc
mov
insb
imul
cli
xor
or
adc
mov
xchg
pop
add
out
lahf
jb
push
mov
xor
faddl
addr16
dec
imul
stos
xchg
mov
or
mov
jg
fs
lds
pop
shll
and
out
sbb
shrb
xchg
xchg
sti
fwait
inc
xor
push
mov
sahf
inc
cwtl
push
mov
inc
int3
push
addr16
cmp
push
test
push
fcoms
sub
cmp
test
sbb
adc
sti
dec
stc
aam
mov
and
lcall
adc
out
andl
fcompl
mov
inc
leave
jb
js
hlt
mov
sub
dec
adc
or
test
test
xor
mov
std
jno
sub
sarl
mov
cmp
xlat
push
jnp
xor
test
pop
sbb
notl
loop
xor
sarl
jecxz
add
adc
clc
sub
and
lds
push
push
jbe
decb
mov
add
into
jb
pop
sbb
shrb
push
xorb
mov
in
lahf
inc
pop
xor
test
int
dec
int
adc
in
push
imull
nop
jbe
adc
cmp
in
test
int3
mov
inc
iret
mov
mov
mov
lret
incb
pop
les
loope
push
lcall
cmp
stos
dec
and
sub
setnp
jecxz
inc
enter
jo
fwait
out
jg
pop
cltd
sbb
push
ja
and
push
aad
adc
cmp
pop
inc
stc
mov
cmpsb
ljmp
and
or
fidivl
inc
mov
jbe
mov
sub
test
clc
and
jnp
jns
insb
or
xchg
xorb
jo
in
xlat
cmp
add
or
push
jg
and
jle
inc
xchg
push
and
xchg
xchg
cmp
das
adcb
insl
mov
mov
sub
cmp
xchg
jbe
xchg
pop
dec
lcall
inc
sub
and
add
cld
pop
mov
out
and
cltd
inc
cli
sbb
insb
jns
out
stos
sti
pop
add
sub
pop
xchg
pop
mov
cmp
je
ja
ret
lcall
lahf
dec
push
rcll
xor
out
xor
pop
cmp
lods
mov
insb
mov
push
inc
pop
in
push
das
loopne
insb
sub
das
jbe
leave
jmp
scas
add
iret
pop
push
or
cmp
xlat
inc
int
jnp
cli
mov
cwtl
mov
mov
or
les
jp
cmp
jge
or
mov
inc
jns
or
mov
mov
divb
imul
popa
sbb
cmpsb
push
xor
xchg
mov
sub
or
fs
shl
jo
ljmp
xor
mov
jns
lahf
lea
in
movsb
sahf
leave
popa
mov
xchg
cmp
mov
in
xor
sub
rorl
inc
mov
dec
xchg
pop
loop
out
es
std
xchg
xchg
dec
fs
outsb
in
ret
fstpl
jecxz
ret
push
out
cmp
push
adc
icebp
adc
imul
jp
or
es
lock
jp
jl
pop
inc
xor
sbb
add
xchg
cmp
cmp
inc
push
std
cmp
stos
push
cmp
jne
cmc
ja
adc
jns
aad
das
ljmp
cmc
jle
dec
call
fists
fnstsw
leave
mov
mov
enter
or
cmp
mov
mov
sub
jo
cmp
pop
mov
adc
mov
test
clc
lcall
pop
daa
cwtl
add
sbb
or
addr16
xlat
xchg
xadd
xor
mov
xor
jg,pn
je
inc
aaa
outsl
jecxz
dec
or
test
pop
mov
pop
mov
scas
jg
inc
std
cmc
cwtl
pop
pushf
xchg
xor
inc
fcmovu
jb
push
mov
mov
adc
stos
js
out
test
xor
stc
call
xchg
dec
stos
adc
pop
or
cmp
lods
or
lahf
push
imul
add
ljmp
mov
add
fildl
lds
bound
jns
jle
sub
gs
xchg
jecxz
lods
call
and
push
hlt
stc
in
ds
mov
push
cmpsb
pop
xlat
sub
sub
jmp
and
movsl
push
inc
das
outsb
push
mov
out
into
cld
int
out
fsubp
arpl
push
and
clc
pop
lret
mov
mov
pushl
std
frstor
jb
inc
xor
pop
filds
sub
jb
stc
std
or
sub
sahf
push
imul
xchg
mov
mov
enter
shrb
mov
inc
jecxz
add
xchg
pop
mov
icebp
sbb
mov
stc
jmp
sub
cli
sub
xchg
addr16
out
sbb
pop
in
insl
sub
dec
into
dec
out
pop
repnz
jnp
int
scas
mov
jno
cwtl
mov
stos
ss
movsl
imul
shr
mov
cmc
xchg
cld
sarl
inc
lret
lds
add
xor
cmpsb
jae
ss
xor
xlat
je
dec
pusha
test
inc
mov
dec
ljmp
fbld
cli
mov
call
fidivl
xor
push
jo
test
test
mov
das
lret
jbe
es
imul
dec
push
jle
add
pop
jae
jmp
aad
ja
repz
pop
pop
jo
leave
frstor
insb
xor
or
loope
jnp
sti
ret
mov
je
jecxz
bound
int
cmp
arpl
mov
aam
in
lods
icebp
and
into
mov
pop
sub
cld
add
mov
js
fidivrl
jae
jns
jno
jg
mov
mov
cmp
sti
imul
add
jae
aaa
dec
inc
jge
dec
xor
in
xchg
movsl
pop
add
fdivrs
popf
adc
mov
push
aad
push
inc
add
and
pusha
sbb
add
and
fwait
xchg
lods
push
call
mov
rolb
cmc
wbinvd
push
add
das
push
lcall
add
lcall
inc
scas
addl
daa
adc
orl
pusha
daa
fyl2x
mov
movsl
push
xor
rcll
xor
fdivrs
add
pop
int
movsb
and
or
bound
pop
pop
adc
hlt
and
sbb
lods
xorb
cmc
inc
arpl
dec
jge
and
mov
icebp
jecxz
aad
cltd
jae
adc
fcom
sbb
adc
mov
sub
mov
push
push
js
sti
jle
pop
inc
sub
cld
xor
popf
sub
shlb
and
jp
mov
pop
fnstenv
fisttpl
push
cs
pop
lret
push
in
inc
movsl
xchg
repz
adc
or
add
std
inc
in
push
add
xchg
xchg
jecxz
fbld
pop
or
aaa
push
outsl
mov
pop
frstor
test
lcall
xchg
sbb
push
cs
iret
js
arpl
mov
jo
cwtl
xchg
div
mov
imul
xchg
arpl
add
jb
cmc
and
gs
xchg
repz
push
mov
sahf
iret
xchg
or
movsl
das
scas
mov
and
fwait
mov
cwtl
jg
ficomps
test
scas
insb
sahf
nop
and
push
mov
cmpsl
call
iret
mov
mov
fnstenv
xchg
ficoms
je
icebp
sub
adc
inc
popa
dec
aam
jb
cmc
mov
lock
pop
lods
pusha
cwtl
pushf
loopne
add
test
outsb
pusha
in
inc
xlat
cmp
outsb
inc
mov
test
lret
sbb
mov
xchg
jne
sub
stos
into
inc
movsb
or
in
stc
sub
mov
pop
dec
jge
xor
pop
sub
cs
std
sahf
add
adc
ret
ret
dec
scas
fwait
in
subl
in
bound
mov
pop
mov
in
movups
xor
scas
push
mov
lea
mov
sbb
push
add
in
repz
adc
sbb
pop
add
test
xchg
inc
pop
mov
lea
push
add
mov
in
clc
nop
bound
ror
es
jbe
fstp
xchg
cmp
dec
pop
mov
add
jmp
xchg
lods
pop
xorb
popa
push
insl
popf
and
adc
mov
dec
xor
mov
cwtl
arpl
cmp
xlat
fcom
fidivrl
adcb
mov
orb
xchg
lds
mov
mov
test
dec
andb
out
mov
jle
fucomi
cmc
in
inc
ret
or
pop
aas
or
mov
pop
push
sub
inc
push
gs
loope
push
pop
ret
and
xlat
out
cmpsb
in
mov
cmp
mov
scas
bound
sbb
xchg
clc
rorl
popf
xor
in
ficomps
cmp
inc
rcrb
nop
fimull
lock
je
mov
insb
outsb
mov
in
mov
or
in
test
inc
btr
and
loopne,pt
jns
mov
test
cltd
pop
nop
push
sbb
sbb
rcll
mov
sarb
hlt
daa
pop
inc
inc
mov
repnz
addr16
xlat
xchg
out
sbb
mov
movsb
mov
and
push
fwait
mov
test
mov
stc
jnp
dec
inc
cmp
ss
idiv
pop
lock
cld
add
insb
mov
imul
outsb
mov
sub
or
adc
push
or
idivb
jns
rclb
push
and
pusha
pusha
cmp
inc
inc
arpl
mov
mov
dec
subb
mov
jmp
xlat
sti
sti
daa
inc
cmpsb
push
add
add
repz
aad
xchg
sub
call
cli
imull
add
scas
jnp
int3
clc
test
cmp
jns
pop
and
add
xchg
sbb
insl
cmp
stos
dec
mov
mov
add
xor
push
xchg
addr16
dec
and
nop
cmpsl
sbb
imul
ds
add
inc
sub
cmp
pop
stos
add
rcrl
lea
stos
cli
scas
popaw
mov
outsb
mov
lods
subb
and
movsl
rcrb
push
add
inc
roll
scas
inc
add
dec
xor
cli
sbb
mov
lods
dec
push
iret
mov
jns
lods
repz
movsb
jnp
add
cmp
sub
xchg
std
jmp
lds
mov
or
mov
and
xor
rcll
lock
stc
pop
mov
or
xchg
push
sbb
stc
push
sub
aaa
cld
pop
pusha
js
dec
mov
sub
sub
mov
shlb
cmp
add
out
push
add
and
cmp
aad
fmull
ljmp
dec
fwait
shlb
mov
xchg
xor
add
in
iret
mov
jge
adc
mov
cs
pushf
jae
js
out
xchg
fwait
pop
fdivr
shlb
in
dec
jle
add
jecxz
push
mov
movsb
test
xchg
das
rcll
adc
stos
adc
cmp
pop
fstpl
in
out
sbb
shll
outsb
adc
xlat
or
imulb
inc
and
xor
mov
rorl
mov
add
sbb
insl
aas
xor
out
lahf
mul
mov
pop
mov
pop
dec
test
lcall
and
xlat
jge
mov
jae
mov
mov
push
xor
inc
push
xorb
dec
jmp
xchg
fcmovnu
jle
sbb
mov
movsb
iret
clc
add
mov
stos
arpl
insl
push
jge
jg
xor
int
out
ss
push
push
imul
inc
fsqrt
xchg
fwait
mov
out
mov
aad
ret
rolb
jmp
inc
lods
mov
add
aaa
int
xchg
jl
xchg
enter
shll
or
call
push
loopnew
cld
test
mov
push
push
test
pop
push
iret
pop
test
fnsave
roll
lahf
add
test
mov
add
aam
aas
int3
dec
rorl
dec
mov
outsl
divl
inc
sar
mov
xchg
xor
mov
icebp
adc
pop
jb
fcomps
js
outsb
sbb
jbe
je
imul
add
mov
movsl
xor
mov
cmp
mov
sbbl
lea
lret
dec
pop
dec
jecxz
mov
fimull
adc
mov
enter
pop
push
cmp
movsl
cld
aad
int
or
out
stos
xor
orl
sub
test
call
mov
fs
in
add
movl
test
sbb
pop
xlat
xchg
stos
stos
clc
push
rcrl
insb
mov
test
mov
or
icebp
mul
rcr
aad
insl
sti
cmpb
mov
dec
xor
jmp
dec
pushf
icebp
cwtl
jecxz
mov
cmp
pop
in
pop
push
adc
fwait
pop
pop
stos
jo
or
mov
mov
das
das
cmp
or
inc
daa
cmpsl
sub
orl
pop
adc
arpl
insl
cltd
add
dec
std
mov
cs
pop
movsb
lcall
xchg
lahf
cltd
dec
pop
fstpt
dec
mov
ljmp
cmpsb
aaa
pop
aam
cli
cmp
inc
test
das
mov
sub
dec
adc
mov
jns
cmpsl
aam
pop
push
test
std
sbb
lcall
pop
into
pop
mov
pop
in
leave
ss
imul
mov
ljmp
pop
pop
sub
mov
rolb
xchg
sbb
cmp
sbb
push
negb
paddsw
fwait
push
bound
insl
lods
scas
mov
jbe
sub
aaa
pop
ss
shrb
lds
fcomps
aad
and
push
sahf
add
xor
std
int3
insb
push
push
mov
push
jb
cmp
push
dec
fidivl
and
fdivr
mov
ss
pusha
xchg
and
les
daa
jmp
cmp
jg
jle
test
ret
movsb
or
inc
outsb
scas
ljmp
scas
mov
movb
xchg
ja
call
add
sbb
jmp
cmc
dec
popf
cmp
and
xchg
sub
pop
jns
cld
xchg
or
pop
andb
add
inc
or
in
xchg
das
mull
daa
add
jae
out
sbb
adc
adc
push
insl
push
inc
adc
push
cmp
cmpsl
cmp
pop
mov
lahf
jge
jl
xchg
push
test
push
cmp
mov
pop
push
out
sub
mov
sbb
roll
jb
imul
orb
aaa
mov
jmp
push
pop
ss
jb
std
cmp
out
mov
lret
cs
or
ret
fst
mov
push
sub
aaa
aas
sub
fdivs
xchg
xlat
add
inc
xchg
std
dec
lock
mov
clc
jl
adc
jbe
mov
push
out
dec
mov
xchg
pop
insb
mov
dec
in
pop
jge
jp
mov
sbb
jbe
test
ljmp
movsb
popa
outsl
repnz
mov
pop
call
jbe
ja
adc
or
scas
sbb
pusha
mov
mov
mov
fildl
adc
outsl
mov
xor
mov
fisttps
pop
and
or
stos
pusha
ljmp
dec
push
pop
incl
fidivl
inc
rcl
lods
xor
dec
das
push
push
xchg
out
andl
jmp
jb
push
outsl
dec
fdivl
test
cmp
jp
insl
loop
into
sbb
dec
imul
stc
add
jg
insb
ljmp
xor
in
push
pushf
les
xor
cmpsl
sbb
jecxz
ljmp
mov
jge
aas
mov
dec
sahf
adc
pop
call
fdivrl
and
nop
orl
mov
lods
rcll
fcmovbe
mov
jg
int3
push
add
rcr
jg
int
cwtl
lea
or
dec
lods
xor
inc
sub
xor
int3
dec
mov
into
xchg
fimuls
cltd
pop
mov
loopne
or
inc
push
pusha
fmul
loop
imul
mov
inc
hlt
leave
or
daa
push
flds
mov
incl
into
push
xchg
push
push
sbb
scas
sub
or
add
lret
xor
xchg
xchg
sub
cmp
or
xor
push
test
fwait
mov
dec
subb
xchg
xor
faddl
xorl
sbb
test
jo
xchg
xor
push
insl
add
cmp
out
or
xchg
pushf
fsubrs
or
adc
sub
mov
push
pop
pop
xchg
sub
cmpb
fucomp
push
cltd
ds
push
cld
ljmp
movsl
aam
cmp
stos
fcmove
ja
sub
push
flds
jmp
imul
pop
cmp
aas
adc
push
pop
add
lret
xor
dec
adc
dec
mov
inc
popf
lret
jp
inc
mov
jge
fildll
mov
mov
sub
sbb
cmpsl
cmp
lods
xchg
mov
pushf
roll
mov
inc
push
sahf
jno
repz
repnz
mov
insl
out
dec
mov
xor
int3
test
int3
cmpsb
imul
or
and
push
addr16
movsb
lock
ds
std
adc
lret
adc
push
push
dec
sbb
pop
mov
testl
stos
pushf
jne
xor
and
xor
repz
inc
aas
push
lcall
push
lods
cmpl
lods
xor
fsubs
mov
jne
cltd
ret
inc
mov
insb
jns
or
push
adc
xchg
push
mov
cmc
and
arpl
mov
push
or
mov
push
stc
popa
push
and
xchg
lods
addr16
mov
sbb
push
cmp
inc
or
push
jle
push
rorb
sbb
and
pop
int
adc
xor
int3
in
xor
sbb
adc
fcom
mov
sub
out
icebp
inc
pop
popf
inc
aam
es
mov
dec
pop
push
mov
stc
fs
mov
loopne
imul
mov
mov
dec
cmpsb
mov
lahf
test
adc
outsl
shrl
cli
ret
jle
repnz
xchg
fisubs
std
sub
arpl
xchg
add
jl
nop
leave
inc
push
outsl
iret
push
cltd
jb
gs
push
xchg
jmp
les
xchg
aas
dec
pop
scas
mov
mov
incb
cmpb
push
sbb
pop
jne
out
inc
out
sahf
ljmpw
pop
xchg
ret
adcl
cwtl
pop
and
in
push
xchg
loopne
dec
and
icebp
cmpsb
jo
xchg
fsts
dec
mov
xor
xchg
add
sahf
mov
xchg
mov
cmpsb
push
dec
fnstsw
cmc
mov
sbbb
mov
xchg
mov
or
pop
fildll
in
sbb
push
or
xchg
gs
dec
mov
sub
sbb
push
nop
dec
pop
xor
testl
orl
push
test
test
fsubrs
or
mov
data16
sbb
nop
adc
addr16
xlat
sbb
jo
jbe
xchg
test
inc
cmpsl
xchg
movsl
in
stos
xor
sub
mov
scas
fistpll
jecxz
pop
dec
int3
jnp
sbb
loope
mov
mov
adc
sbb
mov
inc
js
adc
inc
popl
xchg
ret
cmp
sbb
mov
xlat
or
jnp
adc
pop
aaa
call
out
mov
jns
dec
pop
aas
sbb
adcl
jmp
xchg
xchg
out
xor
and
xor
or
pop
inc
adc
out
xor
imul
and
mov
jo
jo
in
int
add
outsb
jae
cmp
out
cmc
repz
decb
test
xor
push
add
mov
repnz
in
call
ja
out
daa
push
aad
les
fimuls
xor
jl
lcall
lock
mov
nop
es
xor
sahf
jbe
repnz
fcomps
daa
mov
and
xor
ljmp
jp
adc
loope
ds
push
ljmp
push
jg
cwtl
adc
mov
je
inc
outsb
lcall
jecxz
sbb
jae
ljmp
in
mov
cmc
jae
dec
inc
loope
std
jae
dec
jb
ds
lret
dec
adc
stos
inc
adc
jecxz
jge
sbb
dec
test
mov
lea
pop
loopne
or
dec
loope
shrb
cmp
mov
ds
test
and
cmpsb
in
stc
or
sub
mov
rorl
popf
push
mov
aas
cwtl
cltd
aaa
outsb
jb
in
negl
repz
xchg
arpl
xchg
pop
and
rcl
scas
cmp
insl
call
roll
mov
xor
sysexit
iret
mov
cmp
lock
pusha
shlb
jns
sub
insl
inc
negl
ficoml
in
inc
cmp
mov
sti
mov
push
xchg
call
pushf
mov
cmp
adc
and
ret
lods
mov
daa
cmp
mov
inc
jbe
and
cltd
loopne
jp
lea
adc
fdivrs
call
testb
sub
push
lahf
sbb
dec
xor
or
arpl
push
lods
sub
cmpsl
bound
mov
das
or
adc
pop
orl
push
adc
insl
jl
sub
xchg
call
or
cmp
in
loope
imul
test
hlt
xor
and
neg
jmp
sub
jbe
add
jnp
push
jnp
sbb
pop
iret
arpl
mov
inc
jmp
nop
shl
repnz
adc
xchg
adc
movsl
adc
add
sub
ret
scas
cwtl
jo
fucom
addl
mov
pushf
stc
es
sahf
jmp
fwait
adc
pusha
jg
imul
ret
push
sub
push
push
int
outsb
xchg
loope
mov
push
mov
xor
inc
pop
repz
stc
sub
cwtl
sbb
andl
outsl
dec
movsl
shrb
das
ficoml
rcl
inc
scas
outsl
int
ret
test
repz
mov
push
push
push
add
enter
repnz
xchg
xlat
mov
inc
mov
test
sub
mov
mov
pmulhw
dec
jg
xchg
sub
jb
out
lods
shr
pop
and
xchg
jns
cmpsb
dec
lock
push
xor
fdivrp
sub
stc
pop
test
mov
gs
sub
mov
outsl
out
gs
xor
xchg
push
js
out
insb
cmp
addr16
xor
sub
vdivpd
lcall
pop
dec
mov
fimuls
mov
inc
rcrb
inc
cmp
test
cmp
xor
cmp
jne
enter
insb
pop
jae
iret
addr16
jbe
nop
fstps
push
jle
or
test
movlps
call
cmp
sub
scas
loopne
ret
jg
inc
sbb
pop
or
aas
inc
mov
mov
mov
iret
clc
cmpsb
sbb
mov
lahf
ret
add
jge
sub
imul
repz
lods
imul
sub
in
sbb
out
pop
adc
xlat
aam
mov
ss
pop
cs
lcall
xchg
xchg
sbbl
icebp
les
sub
cltd
xor
mov
insl
push
in
dec
adc
mov
mov
addr16
pushf
fsubl
mov
pop
in
int
mov
jo
add
jae
in
or
and
imul
or
push
fstpl
shll
adc
xchg
mov
cld
daa
arpl
xor
cmpsl
and
dec
sbb
cmpsb
addr16
push
jmp
scas
sahf
or
add
cmpsb
arpl
inc
mov
sub
fbld
cltd
xchg
mov
push
xlat
enter
add
sub
push
imul
jmp
std
xor
les
gs
lea
sub
xchg
or
jl
pop
xor
cs
or
cli
stos
mov
les
nop
mov
enter
sbb
cmp
rol
mov
pop
mov
jb
mov
inc
scas
xchg
adc
xor
jns
push
insb
push
sub
and
or
je
push
sarb
test
mov
mov
xor
icebp
cmp
xor
dec
adc
test
pushf
add
jb
mov
push
mov
aad
cmp
aam
adc
iret
aaa
mov
mov
add
jnp
and
loopne
shl
push
decb
scas
imul
xlat
pop
lcall
and
xor
fld
in
add
pop
xor
and
sbb
loopne
jl
add
negb
cmc
push
scas
push
mov
jg
cmc
cwtl
push
nop
mov
mov
or
pusha
fistpll
xchg
xor
aaa
out
enter
jg
les
cmp
push
xchg
fs
mov
mov
push
mov
lods
setno
testl
jge
cmc
sbb
sub
pop
push
cmp
popa
cwtl
sub
sti
fs
sub
mov
adcb
pop
in
push
xor
xor
aam
push
imul
clc
cmp
outsl
mov
mov
mov
mov
push
jns
fdivr
mov
mov
push
fimuls
int
fiadds
jo
dec
jbe
mov
push
es
dec
mov
rcl
mov
test
xchg
inc
mov
and
sub
mov
icebp
clc
sbb
dec
and
aaa
out
out
mov
popa
add
adc
pushf
popf
dec
jb
cmpb
inc
jae
xor
push
push
push
and
dec
pop
jae
subl
cli
jae
dec
xchg
test
dec
aas
mov
push
scas
adc
fwait
mov
jp
adc
cmc
pusha
dec
inc
out
lea
lret
call
xlat
test
gs
arpl
int3
push
mov
inc
jmp
cmp
jl
mov
aas
xchg
cmp
push
push
mov
movsb
push
leave
dec
out
and
push
mov
jle
in
lahf
inc
mov
xchg
jae
popf
xorb
out
sbb
or
call
adc
dec
pop
shld
out
lahf
jae
mov
and
pop
adc
mov
push
fs
fdivp
cltd
outsl
push
lods
cld
mov
in
cli
dec
dec
shl
fstps
sti
lret
dec
decb
mov
and
bnd
scas
mov
mov
ljmp
roll
push
pop
jl
add
sbb
adc
lods
push
repz
lret
xchg
mov
cmpb
outsb
stos
ljmp
pusha
inc
push
mov
inc
lret
xor
call
xor
call
jge
push
pop
notl
cmp
push
hlt
jmp
push
sbb
add
out
lock
imul
loop
sbb
push
shrl
popa
add
arpl
test
cmp
sub
pop
rcl
cs
xchg
sbb
sbb
scas
mov
insb
push
rcrb
jp
cmpsl
shlb
sbb
push
mov
popa
jae
stos
fs
dec
mov
jne
insl
pop
imul
insl
dec
popf
cmp
or
jno
sarb
sub
xor
bound
bound
jg
xor
daa
sub
sub
mov
or
add
cmp
add
ret
pop
and
jge
xchg
addr16
adc
mov
jb
iret
or
mov
cmpsl
and
int
js
int3
dec
pop
sbb
sbb
xor
xorb
push
mov
mov
cmp
je
stos
shll
jp
into
into
and
push
fcmovnb
pop
aam
lcall
jns
movsb
lods
and
or
adc
aaa
data16
inc
js
loop
outsl
std
push
iret
or
sbb
push
out
or
lock
push
mov
pop
push
cld
psubb
sub
lods
sbb
addr16
inc
sbb
cltd
inc
add
in
cld
stos
adc
out
jb
mov
mov
push
icebp
popf
fistl
sub
sti
ret
in
dec
inc
int
fwait
inc
loop
adc
ds
push
dec
inc
mov
jecxz
arpl
mov
imul
add
jno
adcl
dec
data16
sub
pop
or
or
sbb
les
mov
out
push
mov
mov
mulb
insb
push
hlt
jo
cmpl
push
rcrl
push
inc
lcall
jl
push
lods
mov
cli
xchg
pop
stc
mov
mov
imul
lret
and
sbb
loop
push
jecxz
xlat
mov
cmpsb
jecxz
push
jg
icebp
inc
jecxz
loopne
mov
ret
mov
pop
jne
xchg
mov
stos
in
call
jecxz
or
sub
sbb
mov
xchg
cwtl
sbb
push
mov
inc
jg
sub
ljmp
lds
xchg
mov
addb
adc
out
xor
in
jae
mov
es
outsl
cmpsb
lds
cmp
arpl
fs
jl
pushf
in
addr16
out
dec
jle
popf
fwait
in
ss
addr16
sbb
hlt
pop
cmp
lcall
lret
pop
and
repz
push
lahf
movsb
cltd
hlt
jns
mov
aaa
pop
cs
xlat
or
adc
enter
fiadds
rdpmc
call
and
mov
in
js
cmp
and
sub
adc
inc
or
mov
inc
sbb
dec
daa
xor
inc
lods
cmp
das
adc
loopne
or
sub
in
repnz
xchg
fcmovu
in
xchg
cmp
dec
and
add
popa
cmpb
pop
adc
and
in
test
aam
shrl
fsubrs
mov
movsl
pop
inc
pop
and
add
js
test
inc
or
lods
sbb
jge
jge
bound
jne
xlat
mov
je
and
les
push
push
aaa
std
add
jmp
pop
xchg
nop
roll
sbb
jmp
rorb
mov
loopne
fisubl
jl
pop
mov
out
enter
arpl
test
test
call
dec
imul
jbe
scas
sbb
add
pop
decb
or
cld
popl
fstl
mov
fldcw
and
jne
add
shll
std
fucomp
pop
dec
inc
adc
push
es
push
sahf
xchg
mov
pop
mov
cmove
jns
cmpsl
in
out
push
icebp
cmp
stos
shl
frstor
popf
push
pop
orb
cld
std
dec
cs
sbb
inc
dec
sub
fdivp
lcall
int
inc
mov
add
sahf
push
clc
shlb
push
adc
addb
sub
push
and
orl
inc
test
insb
stos
in
arpl
subl
stos
push
out
rorb
xor
cmpsb
jbe
mov
pop
mov
dec
mov
mov
jnp
cmp
imulb
xor
sbb
xor
outsb
into
dec
aad
xchg
movsl
push
mov
je
mov
sbbb
pop
pop
in
mov
mov
mov
sbb
out
pop
pop
inc
divb
popa
xor
or
fwait
push
mov
xchg
fisubrl
pop
and
mov
cmpsb
dec
jno
stos
mul
andps
lods
mov
or
mov
loopne
or
adc
icebp
dec
mov
pop
shlb
cmp
test
dec
and
mov
test
mov
inc
or
jnp
sarl
movsb
aaa
shrb
sbb
lret
pop
sub
cs
cs
xchg
jnp
in
enter
das
jno
or
sti
jmp
pop
ss
push
inc
dec
daa
xchg
dec
xchg
mov
pop
jbe
imul
repnz
add
mov
adc
xchg
mov
cmp
cmp
cltd
add
popf
testb
mov
cwtl
sbb
lahf
pop
mov
inc
pop
dec
xlat
sub
sub
mov
ja
mov
gs
jo
cmpsb
aaa
push
out
aad
bound
or
cmc
scas
push
pop
add
not
cmp
cmpb
nop
mov
fldenv
sub
clc
sbb
push
lods
and
xorb
push
xor
add
int3
jp
mov
or
mov
inc
pop
addr16
lock
outsl
pop
or
movb
ja
push
out
sub
bound
add
cltd
adc
incl
jg
dec
fmuls
test
cld
scas
xlat
cwtd
add
test
inc
divl
mov
call
ds
xchg
mov
je
lds
rorb
dec
out
enter
lret
movsl
icebp
or
push
inc
sbb
movsb
sub
stos
dec
pop
aaa
add
adc
mov
iret
ret
sbb
dec
pop
mov
sar
orb
stos
mov
mov
sbb
je
stos
xor
fwait
push
movsb
dec
mov
sti
sbb
fcmovb
xorl
xchg
cwtl
cmp
lods
mov
adc
sti
stc
mov
cmp
dec
rcrl
push
enter
sbb
mov
and
jl
ja
in
sub
cmp
add
fimull
and
jecxz
or
push
or
xchg
mov
loope
sbb
sub
mov
inc
scas
and
addr16
rcrb
jno
pop
iret
repz
pop
dec
or
adc
inc
sbb
repz
cli
cli
leave
cltd
and
loop
rcrl
lcall
inc
adcl
es
jmp
out
push
sbb
mov
rcr
mov
ficoml
mov
loop
roll
push
das
dec
and
cs
loop
sahf
sub
ds
lods
mov
or
aaa
add
in
dec
push
cs
sub
adc
lcall
pop
in
insb
mov
push
out
mov
inc
pop
jnp
add
sub
movsb
lret
data16
dec
mov
sub
sub
add
movl
sub
jl
xor
xchg
adc
cld
jne
mov
jmp
mov
sahf
call
scas
and
out
mov
mov
movsl
orl
push
add
ja
lods
in
gs
faddl
pop
jbe
pusha
and
mov
jp
lret
int3
dec
xlat
lds
imul
mov
mov
fisttps
addr16
jmp
or
pushf
pusha
insl
cmp
push
cmp
sbb
lods
in
scas
jo
aam
sbb
lea
ljmp
test
in
cmp
xchg
imul
or
repnz
mov
addps
jp
das
xchg
xchg
fcmovne
bnd
mov
int
cld
push
sub
add
in
mov
or
in
cmc
movsb
dec
outsl
stos
adc
mov
setae
and
xor
jl
shlb
stc
movb
xchg
in
sub
dec
rclb
sub
mov
mov
dec
and
aam
add
or
in
les
fsts
xor
jb
call
push
cs
das
xor
xor
adc
push
jl
insb
xchg
out
or
jecxz
push
add
popf
add
lcall
cwtl
xchg
dec
dec
out
int
roll
sbb
mov
or
xor
arpl
lcall
les
in
sbb
and
divl
fdivl
cmp
xchg
jns
jge
add
mov
iret
xchg
fcoml
sbbb
fld
in
stos
lcall
xor
cmc
cmp
dec
jae
popf
in
sub
daa
pop
push
scas
scas
add
iret
lea
xor
cmp
lret
repnz
mov
pop
jae
and
ja
loope
sub
or
shlb
insb
sub
mov
jl
imul
mov
push
push
pop
jns
jns
fcmovnb
fwait
cs
jo
push
lret
ret
and
iret
data16
cmp
dec
pop
outsl
xchg
sbb
mov
xchg
sarl
or
bound
repnz
cmp
jne
cmpsb
loope
mov
sub
int
ficoml
sbb
add
xor
stos
add
or
cli
push
and
test
xchg
lcall
loopne
push
fadds
xor
xchg
in
out
daa
mov
daa
and
lods
nop
inc
jecxz
mov
jle
shr
mov
dec
adc
mov
add
jl
pop
jl
sahf
push
or
iret
inc
mov
leave
mov
mov
cwtl
cs
inc
cmp
adc
sbb
lahf
mov
out
out
pop
or
fstl
jb
adc
mov
ret
mov
adc
dec
in
and
xlat
rol
andb
hlt
lods
xor
mov
ret
inc
test
sub
movsb
sbb
std
sbb
mov
lods
loop
hlt
dec
sbb
arpl
push
dec
inc
mov
popa
jg
das
lock
or
negb
mov
cmp
iret
cmc
and
test
insb
mov
int
sub
sub
pand
loope
jo
and
push
jb
mov
mov
adc
out
mov
dec
idivb
in
imul
sbb
xchg
xor
fiadds
cmpsl
test
outsb
add
adc
adc
adc
fstps
in
pop
or
incl
cmp
push
ret
adc
push
aad
mov
sub
pusha
jl
jp
push
cmp
fcmovb
cwtl
adc
sbbb
push
lock
pop
ss
imul
sbb
sbb
and
int3
mov
out
loop
mov
add
test
mov
pop
mov
and
pop
xchg
fildl
dec
cltd
add
mov
testb
fs
xor
lret
idivl
fwait
shll
cmp
pop
or
pop
iret
pop
sub
cmpl
pop
add
jge
mov
lcall
icebp
xchg
lock
rcll
aaa
jo
jp
mov
shlb
mov
ja
ror
in
cli
push
fstl
jg
sub
roll
inc
stc
cltd
popf
mov
add
dec
idivb
xchg
aad
insl
stos
aas
push
dec
ljmp
dec
inc
sahf
les
cld
mov
inc
aaa
rol
push
xlat
iret
push
sub
add
mov
rcrl
jno
xchg
fs
lea
stos
cmpsl
hlt
js
outsb
and
inc
dec
lods
repnz
jmp
dec
push
pop
sbb
dec
mov
aas
push
push
les
int
xor
in
inc
lahf
jmp
test
pop
ret
dec
and
aaa
mov
dec
mov
sbb
fldl2t
cmc
gs
jp
push
fnstsw
sbb
sub
xchg
pop
aad
sarb
dec
push
mov
jle
or
js
xchg
inc
pop
das
sub
push
adc
add
lahf
out
imul
fwait
cmpsl
jge
push
scas
loope
mov
out
jmp
dec
jmp
push
xor
push
mov
xlat
js
pop
and
push
loopne
test
pop
xchg
jae
sbb
ret
sbb
in
mov
xchg
sub
rclb
lods
mov
enter
pop
loope
cmp
mov
sub
das
in
or
pop
in
test
dec
dec
push
test
xchg
jo
cmpsl
mov
inc
xor
js
sub
repnz
loopne
cmp
sub
jge
sbb
cmpl
inc
push
push
call
nopl
xchg
dec
shrb
xchg
mov
js
mov
es
lods
test
dec
dec
inc
dec
mov
sbb
mov
inc
das
sbb
pop
int3
pop
fs
mov
sbb
dec
dec
push
mov
shll
les
pop
mov
mov
ret
shl
cmpsl
dec
loopne
mov
repnz
push
xchg
jo
fiadds
decb
aaa
jbe
stos
insb
or
dec
adc
mov
push
inc
repnz
imul
sarl
hlt
or
jp
fistpll
fisttpll
iret
adc
adc
cwtl
xor
or
cmp
repz
push
xor
push
cmpsl
jg
and
std
jne,pt
ds
cmp
cmpsl
or
push
pop
ja
movsb
mov
mov
test
cmc
add
pushw
popa
dec
and
loopne
sbb
mov
mov
sahf
leave
jno
xor
sti
mov
movsb
clc
popa
and
xchg
mov
movsb
shrl
loop
notl
mov
mov
mov
sbb
jne
dec
jo
fwait
push
mov
xchg
jge
hlt
xchg
jbe
jecxz
sub
lea
adc
stos
es
jp
outsb
pop
leave
sub
or
add
addr16
mov
shrl
mov
xchg
cli
leave
cmp
xor
jge
adc
dec
clc
jne
xchg
fwait
rcl
outsl
cmp
push
mov
daa
sar
fs
fwait
repz
jg
and
lret
sub
sbb
ds
aad
add
push
adcl
jle
shrd
mov
cs
cmp
jb
cmpsb
mov
rol
dec
mov
bound
jno
in
outsl
and
cmp
push
mov
mov
dec
clc
bound
hlt
sahf
addl
sahf
cs
inc
test
pop
xor
daa
mov
mov
push
pop
sbb
xor
fs
or
lock
jge
cwtl
stos
shrb
rolb
or
fisubrl
scas
mov
lcall
ja
or
mov
lods
test
les
mov
pushf
sub
sub
mov
dec
jecxz
push
outsl
mov
jle
push
lock
pop
adc
inc
add
push
push
cwtl
mov
sbb
aam
mov
in
test
movsl
lods
push
test
push
jmp
arpl
inc
popa
lods
sar
lock
push
les
fstpt
pop
xchg
out
sarb
lahf
sbb
sub
mov
fwait
sbb
add
imul
mov
lea
cmpsl
ds
leave
push
negl
daa
dec
or
jg
mov
dec
or
les
jg
push
fwait
jnp
sub
aaa
cld
outsl
mov
sbb
pusha
sahf
or
addr16
sub
sub
jae
fdivs
pop
dec
pop
pop
pop
into
aam
inc
cmp
loop
loopne
cli
mov
mul
dec
push
mov
cmp
adc
mov
movsl
or
jae
into
out
push
lcall
xor
mov
adc
add
xchg
in
cmp
rcrl
push
cmp
sbb
test
je
jmp
jo
fsubrl
dec
dec
jmp
rcl
pop
or
inc
insb
addl
mov
das
mov
pop
mov
mov
ret
arpl
fnstenv
call
dec
scas
stc
mov
out
bound
dec
pop
pop
ja
mov
mov
imull
adc
and
shlb
movsb
repnz
mov
mov
into
lock
xor
inc
push
xor
adc
subb
std
divb
scas
je
jg
sbb
mov
cld
test
push
xchg
add
push
cmc
lock
stos
or
js
pop
cltd
out
setge
cmp
pushf
push
push
mov
bound
xchg
mov
sti
int3
js
and
outsb
cwtl
jae
lods
jbe
add
add
es
sti
or
mov
and
xchg
sub
fdivl
xor
inc
rcrb
push
add
and
xchg
outsb
and
es
inc
ja
sub
push
data16
jmp
jbe
jg
push
push
mov
push
mov
xor
lds
sub
pusha
xor
dec
sub
push
sub
sub
xchg
cmc
lret
dec
mov
sbb
push
iret
es
in
mov
jmp
gs
or
pop
sbb
lds
mov
test
xlat
jg
out
inc
pop
sahf
testb
inc
enter
es
dec
jb
aas
cwtl
leave
sub
cmp
cmp
not
push
cs
xchg
fs
les
mov
call
push
jno
jno
dec
insl
dec
add
int3
fs
movsb
xlat
pop
sbb
inc
pop
ja
mov
mov
sub
stos
mov
inc
movl
decb
pop
dec
nop
push
dec
fldt
inc
xor
adc
rorb
outsb
dec
lcall
mov
mov
out
and
shrb
dec
jno
sbb
or
or
lret
ja
stos
stos
xor
test
out
mov
ret
sbb
jecxz
ss
push
lock
add
mov
dec
mov
mov
rorl
sbb
je
mov
in
test
subl
daa
xor
stos
xchg
jns
movsl
sub
dec
xor
mov
das
gs
mov
or
aas
jp
outsl
jb
arpl
ljmp
mov
sarb
int
dec
dec
mov
adc
mov
lock
dec
push
xlat
ja
sub
aas
ficoms
cld
and
in
or
or
push
mov
push
mov
and
insl
cli
test
mov
addl
inc
or
nop
cmp
sbb
mov
ljmp
push
je
jmp
fsts
addl
outsl
int3
pop
aaa
jno
dec
pushf
sub
push
inc
into
mov
mov
push
leave
repnz
scas
dec
ds
adc
pop
add
push
shrb
add
adc
sbb
iret
jbe
scas
sbb
mov
lret
add
mov
rolb
test
pop
imul
and
mov
pop
cmc
jbe
sti
xorb
push
out
dec
mov
icebp
mov
addb
call
rclb
lds
cltd
push
push
xchg
dec
push
insb
movsl
sbb
and
repz
daa
idiv
inc
adc
xchg
or
adc
cmpsl
xor
pop
push
or
sub
jecxz
or
fmull
mov
idivb
mov
push
int
inc
in
pop
sbb
aas
or
ss
jbe
add
cmp
stos
add
jo
mov
and
int
push
stc
jecxz
pop
les
inc
or
xchg
test
fiaddl
inc
xchg
pop
popa
push
cs
xchg
int
inc
loope
ficompl
pop
dec
pop
dec
cmp
cmpsl
mov
enter
and
lahf
negl
pop
or
outsl
insl
test
jge
test
jecxz
pop
mov
clc
mov
push
faddp
loop
andb
push
sahf
pop
loopne
mov
pop
jecxz
imul
sbb
mov
in
adc
and
pop
gs
test
negl
cmpsl
jno
pop
jecxz
jnp
or
pop
sbb
dec
iret
aad
icebp
mov
enter
lock
adc
popf
out
push
jnp
sahf
mov
loopne
xchg
xchg
mov
push
mov
aaa
test
bound
shrl
adc
frstor
mov
mov
repz
ljmp
mov
jo
int3
sub
insl
xor
fdivp
jecxz
mov
and
outsb
jg
clc
xor
outsb
jle
ja
adc
outsb
xlat
add
rol
cmp
shr
fadds
rcll
call
xchg
incl
add
dec
lock
and
xor
adc
ret
jl
les
insl
push
cmp
mov
adc
sub
cli
fistl
jg
cld
xchg
mov
or
scas
cwtl
jmp
mov
push
cmc
cmp
mov
stos
jo
sub
jecxz
int
and
xor
movsb
pop
or
xchg
push
loop
jbe
js
iret
mov
xchg
xchg
cmp
subl
mov
adc
dec
mov
outsl
movsl
jl
xlat
popf
push
cwtl
insb
xor
int
add
dec
nop
add
dec
mov
ficompl
ja
sbb
pop
and
int
sub
mov
push
inc
cld
inc
mov
loope
push
or
lods
into
std
mov
push
cs
lcall
shlb
movsb
cmp
pushf
outsl
lea
push
cmp
cwtl
stos
dec
repz
pop
mov
jle
stc
cld
jmp
mov
adc
hlt
cmp
push
lock
nop
outsb
cmc
pop
in
sbb
cmp
leave
push
popf
pop
enter
lock
movsl
out
push
addr16
cwtl
test
ret
nop
push
pop
cs
mov
daa
leave
push
ror
mov
fwait
addr16
or
neg
fldcw
pop
push
add
outsb
inc
xor
cmp
cmpsl
stos
loope
call
cmpsl
dec
push
es
movsl
add
xchg
popf
cli
mov
mov
repz
sahf
adcb
sbb
scas
pusha
cmpsl
or
fldt
dec
dec
fs
or
fistps
stos
fdivrl
outsb
xor
rclb
in
dec
mov
push
call
pop
rcrb
das
notb
fs
in
into
aaa
lock
je
lods
mov
nop
hlt
fsub
les
xor
xchg
outsb
dec
outsb
imul
enter
repnz
xchg
flds
pop
xchg
adc
outsb
or
leave
add
xrelease
mov
jl
mov
call
lret
fstp
test
or
lret
lret
mov
clc
mov
pop
xor
dec
pushf
rcl
in
pop
data16
and
mov
leave
out
push
dec
pop
fildll
lock
arpl
mov
push
pop
push
repz
xlat
lods
aam
shl
fstpt
les
xchg
mov
jecxz
loop
int
cwtl
sbb
outsl
mov
xchg
popa
and
mov
cmp
adc
sbb
div
pop
cltd
sbb
sbb
jge
std
mov
push
xchg
cwtl
xchg
or
xchg
jmp
into
stos
jno
call
push
bound
repz
and
repnz
sti
mov
test
mov
pop
aad
movsl
mov
push
clc
jp
insl
or
cmp
or
icebp
jp
nop
sub
fwait
and
fisubs
add
mov
stc
mov
leave
lahf
imul
jl
loope
sub
mov
fists
or
ret
addr16
ret
pop
jbe
mov
xchg
push
jp
sbb
ficoms
jo
int3
repz
xchg
add
jle
add
xlat
jl
xchg
xor
add
pop
stc
fistpll
ret
lock
ficoms
pushf
mov
mov
push
aad
mov
jge
pusha
inc
dec
xor
xchg
fistl
mov
jb
and
je
push
ss
stos
dec
and
stos
gs
daa
xchg
xor
inc
das
inc
and
and
outsl
jmp
test
movsl
dec
dec
lods
out
adc
inc
lret
xchg
imul
test
dec
mov
clc
pop
jge
inc
xor
stc
fcoms
bound
pop
pusha
test
aas
cmp
pop
pop
sub
adc
cmp
add
cli
pop
loop
jle
xorb
or
xchg
pop
lock
iret
xor
push
xchg
pop
add
js
and
int3
pop
ds
adc
cmp
sbb
pop
jecxz
mov
inc
dec
aas
or
lods
aas
mov
sub
js
or
xchg
inc
mov
mov
es
adc
jle
arpl
push
insl
xchg
insb
into
xchg
popa
inc
fidivs
ret
mov
adc
jmp
out
pop
jg
dec
cs
pushf
lahf
insl
push
in
je
mov
push
pop
dec
idivb
xor
inc
aam
inc
sub
push
sub
sub
mov
js
cmp
in
cmpsl
stos
rolb
lret
testl
xor
orl
push
xchg
sub
add
mov
dec
and
xchg
or
enter
rolb
mul
fsubl
mov
adc
push
loopne
std
dec
aaa
add
pusha
aas
lods
xor
jmp
popf
sub
pop
aas
out
lods
mov
mov
insl
stos
sti
add
adc
icebp
mov
xor
fcompl
adc
push
mov
pop
pop
nop
inc
mov
add
xchg
cld
add
dec
cld
mov
sti
push
lret
sbb
xchg
nop
imul
cmp
mov
fidivrs
mov
stos
cmc
into
loope
mov
fcoms
mov
ret
sub
ja
jb
or
in
add
int
push
test
lret
push
push
sub
xchg
loope
push
stos
jb
addr16
mov
push
js
outsl
xor
xchg
out
shl
aad
jp
and
mov
xor
xor
xchg
pop
lea
ljmp
sbb
lea
mov
test
inc
int3
jp
add
cmp
push
mov
loope
or
arpl
dec
movl
add
pop
or
loope
bnd
adc
insb
stos
das
adc
jmp
lock
and
add
insb
sub
lea
mov
mov
jbe
pop
sub
jns
cmp
add
js
jb
and
clc
out
push
pop
adc
sarl
or
aaa
ljmp
dec
dec
dec
cmp
push
jg
lods
sbb
mov
push
xor
test
in
sbbl
mov
sub
je
or
sub
outsl
mov
jecxz
lock
ss
pop
data16
mov
xlat
outsb
mov
cmc
test
out
cld
call
pushf
ds
cmp
jle,pt
inc
add
popa
cmpsl
sbb
outsb
movsb
inc
sub
or
insb
push
jl
dec
cmc
push
xor
mov
dec
pop
pushf
push
popf
jg
mov
ds
cmp
mov
addb
int3
and
inc
xor
add
aas
adc
outsb
mov
jg
push
paddw
sbb
push
jns
es
xor
sahf
loope
push
out
sub
lock
shrl
loop
ss
push
mov
mov
lea
add
or
out
add
and
aam
das
push
repz
jmp
hlt
mov
call
enter
leave
sub
inc
adc
push
nop
pushf
pop
cli
hlt
mov
popa
imul
or
push
movsb
hlt
daa
stos
mov
mov
pushf
in
dec
push
popf
sub
in
jp
mov
pop
out
push
test
aad
in
lea
mov
lret
test
sub
xor
cld
dec
or
into
sti
and
fcomps
das
mov
adc
push
aam
inc
ficoml
ficoml
lret
mov
push
loop
and
jo
mov
or
into
jo
adc
fcompl
inc
sahf
gs
inc
sbb
mov
pop
push
jbe
xor
push
or
pop
test
fwait
jns
negb
hlt
inc
sub
out
xchg
inc
and
mov
jns
pop
out
push
pop
loopne
insl
daa
dec
cwtl
add
ficompl
pop
test
xlat
rolb
test
fistps
or
cmc
cs
mov
jge
das
push
dec
pusha
insb
in
cmp
fistpl
or
push
stos
mov
call
sub
mov
ja
push
add
sar
mov
cmc
push
stc
push
cmp
icebp
pushf
cmp
pop
jno
jne
xchg
pushl
mov
outsl
insl
xchg
std
insb
pop
je
outsb
js
fidivrl
out
mov
mov
cld
setno
aad
xchg
mov
hlt
xor
cmp
xor
sbb
cld
and
sar
insb
int
push
popf
lret
mov
aas
lock
pop
fists
pushf
fistpl
jne
add
mov
cmp
mov
sbbb
add
cwtl
cmp
xchg
push
stc
cli
and
pop
xor
mov
add
loope
das
lret
jnp
int
mov
add
adc
lahf
and
mov
mov
cmc
sbbl
mov
sub
adc
inc
push
push
imul
fcompp
fcomi
pop
inc
pop
cwtl
cmc
xor
dec
jmp
mov
xor
adc
jne
sbb
setne
scas
pop
adc
ret
stos
xchg
das
fstpl
push
mov
aaa
loopne
fldt
dec
jmp
sbb
imul
mov
mov
mov
push
cmp
or
testl
sub
scas
pop
test
fs
les
push
dec
push
int3
lret
rolb
xchg
jl
call
jp
fxch
pop
stos
and
mov
mov
popf
jae
es
fdivr
sbb
sub
mov
lock
aas
popa
gs
std
add
repnz
mov
sbb
and
cld
scas
bound
out
or
test
sbb
push
jg
xor
push
testb
add
clc
jbe
inc
aas
push
mov
lods
dec
push
jne
mov
sarl
lret
mov
mov
cmpsl
shlb
and
mov
xor
mov
enter
ljmp
out
insl
and
in
cmp
fs
mov
mov
jge
test
fwait
pop
stos
in
jge
xor
cmp
jge
inc
movsb
stos
out
sbb
cmc
jb
mov
insb
xor
add
pop
notl
into
fldt
mov
mov
cmp
add
ss
mov
pop
cltd
mov
outsb
sub
imul
outsb
imul
mulb
pushf
mov
sub
cmpsb
xor
mov
and
jb
add
add
mov
std
mov
mov
and
sub
iret
xchg
lcall
test
inc
ljmp
ret
xchg
push
idiv
add
push
mov
ss
xchg
cs
and
aam
sahf
lods
test
int3
adc
push
xor
dec
cmc
popf
add
adc
clc
dec
mov
es
cmp
loopne
lret
push
xchg
dec
mov
outsb
cli
in
in
sbb
and
repnz
mov
adc
adc
push
je
xchg
sub
imul
repz
jns
dec
aam
cmp
ja
sub
clc
enter
xchg
idiv
rol
push
jp
pop
lcall
sbb
aaa
les
adc
cld
movsb
ljmp
push
mov
rol
adc
pop
pushf
icebp
sub
aas
add
bnd
jmp
stos
pop
or
adc
adc
cmp
aaa
xlat
call
fstpt
lret
mov
mov
dec
out
in
pop
add
adc
sub
into
or
in
into
mov
into
pop
std
in
cmp
adc
pop
dec
sarb
scas
push
mov
push
sub
das
sub
sub
adc
cmpsl
sbb
lahf
test
imulb
jns
xor
std
pusha
cld
and
enter
fdivrl
bound
outsl
mov
push
jecxz
movsb
lea
ja
mov
sub
xor
sti
dec
adc
test
gs
jbe
lods
je
ficoml
cmc
clc
push
negl
dec
loopne
sbb
fiadds
in
mov
icebp
jmp
iret
out
rorb
dec
mov
push
shrb
jb
loope
push
fsqrt
inc
jns
into
ds
loopne
sbb
dec
push
data16
lret
out
push
mov
subl
pop
mov
das
leave
aas
ret
pop
js
test
pop
sub
rclb
popa
and
cwtl
lahf
movsl
les
and
mov
dec
jnp
xchg
repnz
cmp
insb
jnp
push
sub
ret
cmpsb
jae
cltd
andb
sbb
pop
lret
xchg
adc
xchg
cld
insl
cmp
ljmp
cmp
jle
jno
push
and
repz
mov
nop
fcoms
cli
out
or
xchg
cmpsl
call
mov
jmp
out
call
cmpsl
mov
cmp
and
xchg
repnz
dec
addl
cs
xchg
repz
in
fisttpl
sbb
idiv
adc
jb
bound
xchg
rclb
loope
aas
dec
jae
or
jmp
out
lret
lahf
mov
stc
cmpsb
xor
mov
mov
or
mov
push
movsl
inc
cli
mov
outsl
mov
movsb
imull
pop
and
aas
jnp
cmp
sbb
daa
adc
xor
pop
mov
lea
cmp
xlat
jle
adc
adc
sarl
stos
rcr
mov
aas
xchg
jae
in
jl
pop
in
jl
sub
movsb
adc
mov
dec
shrb
mov
inc
pushf
out
negl
push
test
cmp
xor
cmp
call
add
sahf
dec
aaa
pusha
shll
or
pop
les
sahf
pop
cmc
loopne
dec
and
arpl
jmp
loop
jecxz
push
xor
adc
aad
clc
and
daa
jae
add
inc
stos
pop
sub
aad
and
add
add
sarb
add
adc
add
les
lret
xor
xor
add
loopne
add
add
inc
xor
pop
xor
