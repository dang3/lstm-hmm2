push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
mov
push
call
pop
cmp
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
mov
mov
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
push
push
mov
mov
mov
mov
cmp
jb
andl
add
je
push
push
pop
sub
mov
imul
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
call
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
xor
push
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
mov
lea
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
add
adc
jp
repz
orl
ss
mov
fistps
gs
std
cld
or
pop
mov
loope
fimull
mov
sub
pop
clc
fisttps
pop
daa
and
leave
push
fimull
mov
cmp
add
or
insl
xor
cmc
je
lods
push
icebp
icebp
icebp
es
xchg
dec
push
in
add
push
push
lret
iret
orb
and
imul
xchg
imul
jno
mov
imul
add
mov
sub
arpl
sbb
decl
jle
fcoms
test
ds
leave
stc
or
cwtl
dec
stos
fdiv
push
cmp
icebp
pop
or
ror
addr16
push
rorl
call
fsubrs
dec
mov
xchg
std
pop
adc
push
ljmp
fadds
loope
sahf
rcr
das
fsubl
inc
jo
in
leave
stc
mov
loopne
adc
sahf
xchg
lock
sub
pop
jne
mov
inc
filds
sbb
mov
jnp
adc
or
xchg
dec
push
test
cmpsl
xchg
push
pop
mov
inc
xorl
daa
add
lret
rorb
add
mov
std
mov
loopne
lret
adc
mov
sub
test
jno
ficoml
pusha
adc
dec
rolb
sbb
add
add
xchg
mov
and
or
jge
jecxz
sbb
sbb
adc
jl
jmp
push
sbb
lahf
cs
jg
push
xchg
pop
pop
jbe
add
enter
js
mov
insb
cmpl
sahf
adc
dec
xchg
cmp
push
add
inc
sub
and
pop
lods
lods
pop
xchg
scas
enter
and
add
jmp
enter
fs
jp
sbb
loopne
pop
pop
push
xchg
lret
lods
clc
out
and
lods
dec
inc
mov
jno
fmul
or
jb,pn
cld
movsb
in
mov
xchg
jp
jb
mov
mov
push
fwait
roll
xchg
mov
mov
dec
test
icebp
fsubl
ja
mov
lret
dec
test
mov
sub
hlt
popa
xor
iret
movsl
neg
in
je
out
inc
pop
sbb
inc
std
fidivrl
das
pop
inc
sbb
adc
mov
add
add
mov
inc
sub
popa
cld
sbb
imul
ret
push
and
pop
rclb
lea
mov
xchg
das
adc
iret
sahf
dec
mov
mov
mov
sub
mov
lret
fwait
jno
pop
stos
adc
enter
jp
cmp
push
jmp
punpckhwd
push
orl
aas
sbb
mov
add
call
adc
rcr
sub
xor
aas
in
mov
fistps
adc
xor
pusha
cli
jno
xchg
dec
cmp
xor
cli
dec
or
adc
xlat
out
call
jecxz
in
out
je
nop
arpl
test
pop
in
cmpsb
daa
push
mov
xor
rcrb
jae
jle
lcall
adc
xchg
fdiv
in
add
add
mov
jmp
sub
repnz
sbb
iret
psubb
out
sub
cli
stc
data16
lds
nop
sub
vpavgb
push
repnz
clc
ret
jb
add
jp
jge
js
push
xlat
dec
xchg
xchg
push
xchg
lea
push
and
shrd
adc
mov
or
lds
adc
imul
sub
je
fprem
dec
iret
sub
add
xor
popa
fwait
stc
dec
aam
and
fsubs
mov
jno
sub
sub
mov
outsl
popf
push
mov
cmp
fcmovnb
sbb
sbb
fcoml
ret
jb
shrb
pop
js
mov
mov
xor
push
es
jp
xor
pop
jmp
test
insb
jne
mov
pop
cmpsb
add
add
push
ss
iret
inc
jb
jmp
lret
dec
mov
jns
pop
lret
pop
testl
mov
nop
add
and
mull
cwtl
shll
mov
mov
xchg
mov
dec
sub
xchg
nop
ja
sub
nop
inc
mov
aad
add
mov
add
andb
push
outsb
pop
out
mov
jnp
out
push
mulb
xchg
lret
add
dec
xor
sub
test
into
insb
pushf
mov
and
sbb
sub
arpl
rcrl
jno
jns
jmp
xchg
jl
pop
cmpsb
out
dec
lea
adc
iret
int3
sbb
add
jp
xor
push
push
addl
push
xor
sbb
inc
outsb
fildll
dec
loopne
or
push
sbb
xor
mov
lret
xchg
push
es
inc
int3
bound
sub
filds
or
cmp
pushf
jle
insb
lahf
xchg
mov
fld
pop
cwtl
mov
jge
jp
inc
sbb
pop
mov
adc
xchg
ja
addl
test
call
mov
mov
sub
gs
push
adc
lret
hlt
xlat
arpl
sbb
std
push
mov
push
xchg
pop
adc
cmpsl
xor
or
sub
mov
add
leave
xor
stos
dec
out
add
out
add
ds
xchg
jno
pop
cmpsl
push
ds
xchg
cmp
push
sbb
jno
xchg
out
xor
ret
ret
mov
jae
inc
lcall
mov
cld
imul
stos
aad
or
and
pusha
pusha
jmp
aas
push
and
jae
push
adc
xlat
shlb
inc
xchg
xor
mov
add
add
lods
movsb
inc
in
jg
cwtl
xor
cs
loope
xchg
push
fsubrl
ds
xchg
imulb
add
lahf
loop
push
sub
rcr
pop
scas
push
dec
mov
inc
arpl
js
test
inc
test
les
adc
pop
mov
jmp
fdivp
in
int
sbb
mov
or
sbbl
add
push
lret
bound
cmp
mov
push
jb
jbe
sti
fwait
xchg
xor
inc
add
mov
fbld
mov
xlat
push
arpl
insl
out
test
pop
dec
xor
rorb
scas
xor
mov
sub
std
enter
jae
sub
add
aam
xchg
jo
fisubrl
pop
insl
push
fwait
dec
cmpsb
clc
loope
aad
or
mov
pop
pop
pop
stos
subb
add
add
sbb
pop
lret
inc
inc
inc
daa
jl
aad
dec
mull
andb
and
aam
movsl
push
lock
imul
inc
in
jmp
mov
mov
mov
scas
cs
jne
and
outsb
or
and
test
mov
loop
in
xchg
jl
cmp
xchg
or
rorl
out
imul
cmc
and
xchg
mov
mov
mov
outsl
sub
ja
sahf
fisttpll
and
data16
sbb
aad
sub
js
inc
xchg
push
jo
in
xor
test
gs
and
cmp
cli
es
mov
daa
int
fs
stos
fsubl
mov
and
or
ds
sbb
jo
dec
or
push
lret
popl
stos
jmp
add
fcompl
testl
pop
arpl
shrl
out
lock
aad
cmc
pop
xor
jle
les
inc
add
mov
inc
add
notl
xor
fsubs
mov
jns
pop
mov
cmp
mov
fldl
mov
into
fs
iret
daa
imul
cmp
clc
or
xor
jb
je
fnstsw
mov
mov
fldl
and
and
repz
jle
sbb
in
es
loope
sbb
data16
and
xchg
ficoml
stc
out
jmp
mov
pop
jp
mov
insb
add
jnp
fistl
jle
call
outsb
stos
stos
xchg
mov
loopne
xor
std
imul
sbb
pop
adc
sbb
or
iret
stos
lahf
test
ficoms
or
push
dec
fwait
div
test
popf
and
mov
shl
fiadds
add
add
ror
stos
lock
jne
leave
mov
mov
ja
lock
add
in
sahf
push
xor
and
gs
shll
xchg
mov
scas
xor
cmp
cltd
xor
mov
pop
das
insb
notl
push
jg
mov
mov
lcall
pop
or
rclb
shll
and
jmp
addl
sbb
xchg
inc
mov
test
rcll
mov
stc
push
xor
lods
clc
stos
and
dec
cmp
push
pop
add
sbb
and
add
dec
iret
repz
popa
and
or
mov
or
cmp
pop
ja
nop
cltd
dec
out
movsl
mov
addr16
popa
mov
xor
pop
ja
jg
ss
mov
pop
pop
orl
add
mov
sub
pop
adc
xor
ss
nop
mov
int3
and
sti
jo
pop
mov
cmp
xlat
cltd
aad
xchg
xchg
mov
test
rcrl
in
int3
ja
sbb
aaa
jp
js
icebp
fisttpl
and
jno
in
outsb
test
mov
rcr
mov
pop
int
push
sub
sbb
push
jbe
add
jno
lret
or
gs
das
xchg
push
jbe
push
stos
fwait
mov
rcrb
sbb
addr16
push
push
cmp
mov
test
sbb
lock
bound
and
sbb
cmp
or
push
mov
cwtl
ret
sahf
push
fdivrs
sahf
shr
and
lock
dec
pop
adc
cmc
xor
test
jecxz
ret
jns
repnz
incl
add
notl
call
jae
stc
add
xchg
int
push
mov
call
push
scas
inc
mov
xor
xor
test
push
xor
inc
faddl
shll
lock
aam
adc
xor
mov
test
mov
mov
shrl
mov
sbbb
daa
int
sbb
jg
hlt
pop
dec
add
inc
cld
push
call
and
in
pop
shlb
pop
fiadds
jp
sub
andl
stos
xchg
xorb
cmp
aad
add
xor
xor
jmp
loop
mov
xchg
add
subl
daa
mov
jcxz
and
rcrl
cmpsl
sub
mov
inc
xor
add
add
sbb
mov
sahf
dec
xor
mov
push
out
sbbl
cmp
xlat
pusha
push
es
add
xlat
sbb
rcr
repnz
adc
daa
ljmp
lcall
sub
mov
lcall
test
adc
xchg
mov
stc
jb
pop
je
adc
or
cmc
sub
int3
enter
lret
inc
sub
add
lea
add
sub
iret
out
xchg
xchg
lret
sub
rolb
in
pop
inc
fildl
sbb
std
lock
sbb
daa
lock
sub
jae
mov
jb
xor
mov
arpl
push
push
jne
mov
fwait
popf
pop
loope
rolb
dec
outsb
or
inc
dec
mov
loope
add
sti
xor
and
mov
ret
xor
mov
and
jo
pusha
sbb
pop
and
ret
inc
mov
jmp
dec
mov
cmp
cmp
cmp
adc
lahf
repz
adc
lret
int
test
cwtl
cwtl
and
sbb
sbbb
mov
push
sti
mov
xchg
push
movb
movsl
hlt
and
push
cmpb
add
push
jo
add
cmpsl
das
in
ljmp
cmp
pop
lret
fdiv
sbb
jge
dec
jle
push
xor
rcll
dec
adc
dec
ljmp
cld
out
jg
mov
jae
dec
pushf
adc
push
mov
fmulp
xlat
push
jae
add
jno
or
cmp
cs
aam
mov
dec
fwait
push
out
mov
out
adc
lods
pushf
pushf
shrb
add
or
jge
mov
add
sbb
jb
push
jp
scas
xor
lods
adcb
jo
cmp
pushl
jo
loope
lahf
mov
fwait
push
nop
sbb
dec
shlb
and
jb
add
cmp
test
in
stc
bound
in
out
and
shr
sbb
push
decb
adc
insl
insl
cwtl
fs
jmp
outsb
mov
pop
jo
push
adc
sbb
push
mov
data16
pop
xor
pop
je
push
jbe
adc
fwait
les
add
adc
mov
dec
nop
cltd
jne
fs
xchg
outsl
mov
jbe
fisttpll
test
push
lahf
or
aad
sbb
frstor
add
push
or
mov
pop
add
pop
or
rcrl
cmpsb
fs
loop
ljmp
xor
sub
sbb
mov
fiadds
dec
adc
andl
ficoms
mov
mov
pop
pop
mov
mov
enter
lock
xchg
bnd
jns
adc
add
adc
clc
sub
lds
fdivs
clc
imul
jp
cmp
adc
cld
cmpsl
and
and
es
xchg
sbb
jg
sahf
add
stos
mov
sub
or
aam
xchg
fdivrl
cmpsl
inc
jecxz
or
cmp
in
xor
pusha
test
lods
loopne
add
push
push
roll
jge
pop
sbb
movsb
push
pop
clc
stos
jae
dec
test
inc
rcl
add
xchg
xchg
arpl
mov
xchg
lea
adc
xor
cmp
jae
enter
cli
in
stc
adc
je
mov
jge
add
daa
popf
mov
iret
adcl
into
out
jecxz
sub
out
in
dec
daa
inc
mov
movsb
scas
sbb
dec
enter
sbb
ljmp
je
pop
mov
inc
ljmp
sbb
mov
xor
sub
mov
loopne
or
jns
cmp
push
cmp
xor
add
sub
popa
xchg
xrelease
xor
in
jle
test
xor
inc
aad
repz
ret
push
inc
xlat
add
xchg
loopne
lods
push
dec
xor
pusha
repnz
or
jmp
gs
out
mov
popf
push
push
fdivr
jbe
xor
ret
mov
test
mov
jno
cmp
xchg
adc
fxch
lods
testb
in
add
add
push
jo
loopne
jae
lret
daa
bound
xchg
or
lret
bound
pop
fsubl
data16
test
mov
rcrb
pushf
pop
ja
shlb
or
mov
bnd
mov
pushf
push
jecxz
lcall
add
ss
add
movsb
inc
mov
cmpl
arpl
lcall
cmc
js
ficomps
inc
in
adc
xchg
push
pop
mov
add
fbstp
out
and
pop
repz
sbb
sub
lea
adc
cmc
mov
out
xchg
sub
mov
mov
negb
aad
mov
xor
mov
push
lock
pop
dec
daa
dec
mov
and
ljmp
paddsw
xchg
inc
jb
xchg
mov
loopne
xchg
popa
sub
cltd
stc
pop
xor
outsl
loopne
ljmp
sarb
mov
fcmovu
ret
xor
add
ja
push
jge
lock
cmp
xor
cs
and
je
cmp
xchg
out
dec
aaa
push
push
je
clc
pushf
in
dec
fst
push
in
shrd
push
xchg
out
fsts
lret
inc
jae
xchg
test
xlat
sub
loopne
lods
cld
xchg
sti
out
hlt
push
dec
repnz
fs
push
inc
or
mov
sub
add
push
add
add
mov
js
push
nop
in
xchg
insb
out
divb
mov
in
fnstenv
std
and
cmp
test
lret
into
and
mov
or
sbb
rolb
in
stos
adc
mov
icebp
dec
jne
rcrl
and
inc
outsl
push
inc
arpl
lods
mov
xlat
jne
lea
dec
add
movsl
mov
jle
rorl
and
shrl
jle,pn
insl
inc
sbb
lret
ds
sub
in
jle
and
sbb
push
jecxz
push
sub
fs
outsb
inc
outsb
outsl
lods
inc
loopne
dec
push
out
cs
cmp
xchg
cltd
and
xchg
incb
stos
cmp
sbb
rol
mov
shr
cltd
xchg
nop
cmp
xor
or
das
sub
ljmp
jp
shrl
xchg
stos
pop
aam
pop
ret
cltd
hlt
lcall
add
add
mov
loopne
push
push
ret
dec
out
bound
cmp
pop
popf
push
jg
sub
xor
add
and
xor
leave
cmp
lods
and
fmuls
add
inc
mov
jno
cwtl
jae
cmp
pusha
pop
int3
xor
test
sbb
popf
rorl
out
fldenv
xchg
adc
pop
in
sbb
cmpsl
das
mov
xor
rorb
in
cmp
adc
pop
ret
sbb
add
pop
das
mov
cli
bound
sbb
ljmp
push
or
lods
lret
mov
mov
or
sub
lret
mov
mov
jge
sbb
std
test
pop
dec
inc
sahf
sub
pop
icebp
rcr
dec
ljmp
and
loopne
movsl
ljmp
mov
in
xchg
sub
add
lds
cmpsb
popa
iret
out
xor
add
xchg
sub
lcall
mov
sbb
add
or
push
lahf
stos
push
add
rcll
xchg
xchg
and
test
and
mov
and
mov
sub
sub
cmp
mov
pop
xchg
jmp
dec
stos
bound
or
push
jae
or
and
push
out
or
adc
or
xchg
jle
shlb
popf
xchg
in
jg
xchg
test
sbb
jecxz
mov
mov
sbbl
add
in
jmp
jnp
clc
cmp
sub
shrl
dec
or
xchg
mov
or
daa
sbb
test
mov
pop
dec
sub
and
pop
xchg
sbb
inc
addl
sbbb
cmp
ret
add
mov
dec
js
lcall
jmp
mov
imul
je
or
add
cmp
fists
dec
jb
movsb
iret
dec
inc
add
je
add
movsl
cmp
cmp
push
push
cwtl
repnz
add
jb
xchg
or
fsubs
and
cld
mov
inc
ljmp
sub
out
sub
mov
dec
push
js
stos
cmp
cld
test
push
sub
pop
mov
add
lock
pop
cs
pop
js
out
in
xlat
mov
sub
ret
pop
dec
push
or
scas
fisttpl
or
fidivrl
dec
xor
lods
in
sbb
sub
sbb
sbb
push
scas
xchg
push
inc
mov
mov
imul
stos
ficompl
mov
lahf
sbb
das
sbb
cmpsl
mov
lods
mov
adc
and
jp
xchg
addl
cmpsb
insl
sbb
inc
int3
movsb
repnz
cmp
push
stos
mov
outsl
fcos
and
mov
out
sbb
loop
mov
fcoms
mov
data16
cmpsb
inc
negb
scas
popa
mov
and
jmp
sbb
nop
jo
sbbb
into
js
cmp
es
mov
pop
int
pusha
insb
clc
ret
mov
push
mov
rolb
add
add
or
enter
je
jmp
pop
or
mov
jp
out
ds
push
das
fmuls
out
mov
xor
in
pop
xchg
inc
ljmp
pop
insl
push
mov
js
jg
hlt
cs
mov
fbstp
out
dec
inc
call
adc
dec
add
mov
scas
call
inc
push
sub
push
xor
aas
adc
ja
sub
jmp
and
add
outsl
jo
or
lcall
fwait
int
scas
jmp
and
jns
clc
add
xchg
inc
lds
scas
dec
or
and
inc
cltd
cmc
test
cmpsl
dec
iret
stc
in
sbb
mov
lods
adc
dec
sbb
sub
sub
xchg
adc
adc
dec
leave
pusha
lahf
loop
lcall
das
insl
jl
incb
xor
in
ficoms
sahf
lea
cmpsl
or
jnp
push
lcall
subb
aam
cltd
inc
orl
repnz
inc
icebp
pop
notl
cld
push
outsb
lahf
inc
cwtl
xor
fsubl
int3
sti
aam
jp
mov
push
daa
neg
cmpl
loop
fisttpll
adc
js
cmpsb
or
lods
jg
scas
dec
imul
push
mov
sbb
push
pop
jg
jg
or
enter
dec
cmp
aad
insl
push
js
fisubs
cmpsb
bnd
add
pusha
popa
add
dec
fimull
scas
repz
popa
xchg
pop
cmp
jmp
jecxz
iret
xchg
mov
mov
or
rcrb
pop
cltd
rorb
dec
popl
test
or
fs
inc
ret
push
pop
jo
aas
cli
in
popf
pop
add
das
mov
movsl
mov
push
adc
loopne
sub
es
rcr
lret
xchg
cli
fdivrl
inc
scas
add
add
xchg
sub
out
mov
pusha
xchg
shl
out
add
movsl
add
hlt
mov
dec
xchg
pop
cmp
out
xlat
jo
lds
inc
pop
movsb
sub
push
test
out
adc
sahf
sub
cltd
or
sub
fisubl
mov
pop
mov
iret
rcll
rorb
ret
push
cltd
movsl
adc
add
adcb
dec
push
pushl
mov
sbb
cbtw
jg
fsubr
es
out
adc
sbb
nop
pop
cmp
and
test
movb
lods
mov
inc
mov
ret
and
jmp
out
ja
or
dec
inc
je
aad
adc
push
jmp
sbb
xchg
popl
mov
ja
sti
add
add
cmp
ret
xor
add
in
inc
cwtl
and
jo
push
leave
fcoms
test
into
test
sbb
jecxz
stos
in
rorl
inc
jmp
cmp
jns
sbb
push
cmp
sub
xchg
add
aaa
out
int3
test
cmp
add
mov
jno
xor
jo
fwait
xor
xchg
pop
pushf
data16
push
or
push
insb
int3
adc
push
mov
ret
mov
je
icebp
sbb
rcl
addr16
xor
push
jno
movsl
mov
add
xor
xor
lcall
jge
imulb
xor
and
jo
mov
sbb
mov
popf
ja
jg
leave
jno
scas
xor
xchg
mov
js
pop
pushf
adc
fimull
mov
inc
mov
xbegin
add
call
scas
shlb
movsl
in
dec
add
repz
dec
inc
roll
add
pop
je
test
stc
or
xor
sub
daa
push
jp
stos
mov
scas
dec
xor
fbld
fldenv
sub
lea
sti
lahf
icebp
xchg
testb
mov
inc
test
daa
lea
mov
test
mov
addr16
sub
enter
sbb
sahf
sbbb
repz
pop
out
xchg
and
add
mov
in
aaa
repnz
shr
fsubp
mov
xchg
add
add
daa
jmp
lds
gs
sbb
jl
mov
js
ret
xlat
push
test
add
int
pop
mov
aas
adc
and
add
adc
pop
add
dec
xchg
lods
test
int3
xchg
lret
xchg
jne
popa
push
clc
xlat
cwtl
das
lods
mov
mov
testl
push
cld
xor
cmp
add
adc
mov
adc
mov
dec
loopne
lret
jp
xor
cmp
and
pop
push
inc
js
fcomps
mov
cld
push
sub
sbb
pop
xor
insb
fbstp
sub
adc
cmp
mov
mov
ret
lret
xchg
pop
cmpb
xchg
inc
dec
cmc
loopne
inc
sbb
xor
sbb
mov
in
xlat
xlat
sub
sbb
xor
cmp
pop
xchg
add
outsb
les
cmp
sub
pop
scas
jmp
jp
ds
xor
push
out
xor
js
lret
pop
xchg
sbb
loope
loope
bound
hlt
jle
xor
jmp
jle
enter
pop
dec
jae
pusha
int
insl
pop
ficoml
rcll
add
push
in
pop
xor
xor
call
or
cltd
mov
insb
test
push
or
loop
fidivrl
mov
push
out
adc
jne
xor
adc
ss
repz
cltd
icebp
mov
mov
in
test
xchg
into
pop
movsb
popf
movsb
divl
xchg
mov
mov
ja
movsl
ror
pop
cwtl
add
add
fstps
xchg
rolb
stos
sub
pop
mov
icebp
into
inc
inc
jmp
fsubr
idivb
and
and
imul
add
dec
fisttpl
xchg
jns
dec
sub
mov
adc
in
out
cmp
std
out
into
mov
lea
fcomps
lds
add
jnp
jge
aaa
add
insl
sbb
mov
mov
sub
add
add
jne
fwait
call
push
fs
sub
sub
in
sub
pop
pusha
cmp
mov
cmp
ficoml
sbb
or
cli
push
push
xchg
xchg
jmp
and
adc
mov
fcmovnu
push
adc
out
or
mov
mov
fidivrs
or
das
test
cmovs
outsl
iret
pop
cmc
jae
pop
lea
dec
cmp
popf
rolb
add
jl
jns
je
popf
adc
ja
popl
mov
mov
das
push
sub
cmp
push
pusha
scas
cwtl
dec
add
pop
in
push
add
insb
into
testb
and
movsl
int3
movsb
jg
sbb
pop
mov
mov
arpl
pop
pushf
rorb
outsb
mov
bound
mov
stc
add
push
add
pop
mov
xchg
call
ret
pop
out
lock
int
ljmp
js
mov
inc
in
mov
dec
jmp
push
jg
das
inc
mull
push
dec
jg
xchg
mov
xor
mov
and
mov
imul
pop
jg
inc
movsb
push
pop
jno
xchg
or
sarl
cmpsl
jae
mov
fisttps
sbb
ret
cli
sbb
fcoms
push
push
mov
stos
shrb
push
cli
ds
stos
or
arpl
stos
ret
lret
xor
pop
xchg
pushf
clc
dec
sahf
and
mov
dec
mov
fwait
std
sub
or
sub
hlt
xchg
xor
inc
mov
pop
xchg
mov
mov
testb
scas
fsqrt
xchg
cld
sbb
or
aad
sbb
jl
add
data16
je
xlat
inc
cmpsb
jmp
mov
sbb
xor
add
add
sub
or
mov
inc
fcomps
fnstenv
pop
push
sub
mov
js
hlt
andb
mov
fnstsw
ja
mov
pop
test
test
xor
ror
mov
enter
insb
inc
into
adc
lds
mov
mov
jno
mov
xor
aaa
and
and
decl
lock
dec
cs
mov
add
ret
xchg
push
and
push
inc
xchg
add
aaa
jl
adc
fdivrl
or
xchg
stc
pop
sbb
cmpsl
sub
lds
ljmp
push
enter
call
jle
and
leave
mov
cltd
sbb
movsl
std
dec
scas
ja
into
dec
push
out
insl
test
or
test
out
mov
inc
mov
dec
mov
lahf
movsb
mov
pusha
jb
fisttps
adc
scas
xor
test
adcb
pop
jmp
add
pop
mov
mov
cmpsb
push
stos
dec
roll
xchg
int
test
dec
cmpsl
fwait
cld
pop
xchg
inc
sub
sbb
jns
stc
stos
sub
mov
ljmp
xchg
repnz
