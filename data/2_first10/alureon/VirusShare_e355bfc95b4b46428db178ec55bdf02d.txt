cwtl
inc
loope
in
mov
ror
mov
scas
sbb
adc
es
mov
gs
and
lea
imul
push
adc
jne
cs
pushf
or
jp
outsl
mov
sub
inc
mov
daa
sub
mov
mov
mov
pop
or
push
test
jmp
mov
cmp
lea
mov
imul
mov
xor
inc
pop
jecxz
adc
sbb
rorl
out
inc
jecxz
jbe
cmpsb
test
mov
ja
pop
je
mov
in
and
clc
insb
jbe
xchg
inc
rcrl
sub
dec
mov
sub
pop
icebp
jmp
and
sbb
fs
xchg
fucom
sbb
mov
xchg
scas
pop
pop
out
mov
cmpsb
pop
push
fwait
or
outsb
in
stc
xchg
cmp
outsl
mov
dec
scas
or
ret
scas
icebp
mov
testl
bound
test
sahf
pop
call
jl
and
dec
jns
pushf
pop
mov
repnz
and
sarl
inc
xchg
push
int3
inc
jle
insl
pop
ficomps
add
fldl
mov
cmc
stc
hlt
in
icebp
pusha
test
adc
scas
xchg
lds
lock
sub
loopne
add
sub
xchg
dec
sub
popa
and
ret
push
addr16
dec
lods
pop
push
xor
push
xor
fmul
adc
scas
popa
mov
cltd
push
xchg
icebp
aam
jbe
mov
leave
fstp
ficompl
sub
fisubrl
mov
in
icebp
aam
mov
adc
dec
nop
incl
imul
mov
xorb
imul
je
mov
push
fdivs
pop
adc
test
js
mov
cmp
push
test
push
or
xchg
dec
aad
xchg
cs
adc
sbb
jl
jmp
adc
lods
out
scas
gs
pop
xlat
cmpsl
movsl
and
sbb
es
inc
add
imul
mulb
xor
mov
mov
mov
stos
int3
pop
push
into
push
dec
push
rcll
out
mov
dec
aaa
dec
push
loope
or
pusha
mov
call
sbb
adc
jae
xor
scas
inc
dec
dec
ret
xchg
and
mov
jns
adc
xchg
andb
sbbl
and
icebp
jg
mov
sbb
outsb
stc
lcall
jg
mov
inc
insl
lcall
lea
test
pop
repz
stc
iret
mov
and
pop
jle
arpl
arpl
mov
mov
inc
ss
mov
jle
scas
dec
push
dec
xlat
or
push
je
std
loopne
adc
sub
xchg
jg
xchg
push
dec
std
lret
pop
stc
out
ret
dec
jno
pop
jo
daa
sub
pop
xor
repz
in
sub
jp
loop
dec
xor
push
inc
incb
jbe
lcall
mov
js
xchg
popf
adc
pop
loope
scas
fnstenv
pop
pop
and
xchg
mov
test
fsub
jb
cld
aaa
xchg
movsb
xchg
sahf
gs
push
dec
into
test
cld
loopne
add
out
and
push
push
or
add
xchg
mov
push
mov
mov
mov
cs
lcall
scas
push
xchg
mov
push
daa
ret
dec
cmpsl
cltd
jno
rcl
pushf
imul
arpl
jns
bound
jae
jnp
out
rcll
inc
cli
out
je
fsubrp
or
dec
push
lods
pop
sub
xchg
jbe
add
test
lea
ljmp
loope
pusha
jecxz
jecxz
or
daa
leave
mov
jne
jbe
daa
mov
mov
mul
mull
clc
mov
mov
xor
popf
adc
inc
mov
pushf
xchg
mov
dec
sub
fsts
push
jecxz
or
xchg
movsb
lahf
repnz
mov
mov
sub
mov
dec
ret
mov
mov
xchg
rcrb
cmp
test
aad
push
sub
cltd
ret
pop
inc
dec
xor
jo
movsb
sub
inc
cmpsl
std
dec
lahf
and
sbb
push
add
fists
push
sbb
std
pop
outsb
stc
subb
cmp
negl
sub
pop
pop
xchg
push
stos
in
mov
pop
push
dec
mov
dec
mov
add
mov
pusha
jle
test
adcl
sub
xchg
jne
repz
lcall
popl
jge
pcmpgtd
imul
outsl
cmp
add
cmp
lcall
popf
mov
popf
mov
xor
xlat
mov
jp
enter
pop
cli
bound
cmc
mov
stc
cwtl
lcall
or
xor
in
mov
test
repz
sarb
xor
jo
and
ljmp
add
inc
xchg
push
dec
xchg
test
cmp
sub
es
test
sub
xor
dec
add
and
jnp
movsl
dec
mov
fwait
jb
xor
fsts
jle
cmp
ret
inc
out
xchg
or
push
lods
adc
jle
jge
pop
sub
or
xchg
dec
xchg
jno
mov
fsubrp
and
in
sub
roll
mov
push
dec
xchg
pop
roll
popa
out
lds
test
dec
sub
das
adc
cmp
cli
roll
imul
lret
mov
sbb
mov
popf
mov
mov
adc
std
and
and
add
das
stos
pushf
jp
push
dec
in
sbb
push
rolb
in
jmp
pop
cmp
lret
stc
imul
cmc
xchg
mov
out
mov
or
cmp
es
xchg
inc
shrb
or
or
xchg
mov
mov
test
mov
dec
cld
lret
or
mov
out
shrl
js
sarb
cs
sub
mov
into
lods
shrl
cmp
imul
pop
xor
js
movsb
mov
sbb
push
dec
stos
insl
sbb
pop
pusha
jmp
out
repnz
add
xor
and
sbb
nop
cmp
push
xchg
pop
dec
popf
mov
sub
ret
xchg
xchg
jg
sbb
mulb
xor
adc
mov
mov
sti
pop
subl
cmc
push
inc
pop
and
dec
addr16
mov
inc
cmpb
test
les
in
or
cli
and
push
mov
loopne
das
loopne
push
push
shrl
rorl
mov
sar
xor
pop
sub
pop
fisttps
fstpl
cmp
or
lret
or
stos
or
clc
mov
shl
xchg
test
out
push
xchg
ror
sarb
aaa
sub
xor
jo
pop
inc
xor
sub
pusha
mov
and
mov
cmp
push
xor
adc
jbe
ljmp
femms
push
pop
adc
push
cmp
mov
push
push
pusha
addr16
loope
sub
sub
cmove
xchg
in
dec
sbb
jo
imul
pop
daa
vprotw
pop
sub
out
cld
push
add
stos
inc
sti
push
push
mov
adc
add
push
and
or
xchg
jp
fucomp
cld
adc
pop
jle
push
pop
xchg
mov
fimull
pusha
cs
pop
in
gs
es
mov
fsubs
hlt
cmp
gs
dec
xor
fcmovne
out
xchg
push
xchg
mov
aaa
xor
cwtl
loopne
out
xor
das
mov
and
dec
addb
push
ficomps
daa
rcrl
outsb
pop
cld
inc
xor
icebp
or
jae
inc
test
or
fstpl
mov
push
add
cmp
mov
push
data16
sbb
andb
dec
rclb
and
fmull
stos
mov
ror
hlt
idivb
jmp
pop
cmp
sub
lock
cmp
sbbb
aas
sub
jno
add
fsubl
testb
dec
xchg
int
push
aaa
mov
mov
aaa
cmp
xor
adc
andb
scas
pop
add
pop
fsubr
push
aas
xchg
loope
cmp
inc
sbb
inc
cmpsb
xor
imul
mulb
dec
pop
ds
fnsave
les
out
jae
inc
cmpsl
or
iret
mov
bound
mov
xor
divb
push
adcl
loop
xor
pop
ja
xor
loop
push
ficoml
in
jmp
mov
scas
jb
xor
lods
je
sub
shl
mov
jb
cmp
in
psubsb
push
andb
inc
ret
test
lret
dec
adc
fs
add
pop
xchg
nop
les
inc
sub
or
outsl
push
mov
add
popf
add
shll
int
jmp
sub
enter
aad
outsb
lret
or
xchg
inc
mov
out
jg
mov
cmovne
sub
and
pop
dec
popf
xor
mov
xchg
lods
aaa
test
or
gs
testl
int
das
call
ds
fdivrp
lcall
xchg
mov
out
imul
push
sti
jl
mov
in
dec
xchg
cmp
movsl
sub
cmpsb
stc
push
sub
add
aad
xchg
push
test
dec
jno
lea
or
cmc
daa
nop
adc
js
jge
sarb
mov
pusha
jns
sub
mov
push
xchg
test
int
mov
adc
cli
in
sbb
xchg
fwait
cli
dec
xchg
xchg
xchg
cmp
push
and
xchg
pop
xchg
add
icebp
mov
mov
fbld
xor
fs
xor
or
xchg
jmp
pop
push
mov
test
cmpsb
movsl
ljmp
dec
jge
fidivl
sub
popa
adc
jae
into
lds
xor
pop
mull
xor
sbb
cmp
arpl
xor
jg
fdivs
jl
psllq
data16
mov
mov
pop
ss
pop
or
adc
sub
push
mov
les
pop
sub
mov
lds
push
not
cwtl
ss
sbb
orl
test
cs
arpl
sub
aas
movsb
pop
pop
adc
das
jno
enter
lods
out
push
sub
sbb
lret
push
iret
mov
sbb
add
mov
call
das
ja
push
jo
add
pop
rcll
xchg
mov
add
add
dec
pop
inc
mov
addb
and
les
loop
jmp
pop
ljmp
pop
xchg
test
and
aam
sarl
movsb
pop
or
inc
aaa
inc
mov
lea
push
adc
xchg
jmp
cli
inc
ficoms
fiaddl
fldt
mov
dec
orl
in
mov
addl
scas
es
sub
loopne
sub
loop
scas
cli
push
out
fsts
pop
jg
shll
lock
aaa
movb
jne
jl
xor
mov
jne
or
insl
fisubs
pop
pop
xor
jl
xchg
mov
push
scas
ret
dec
insl
adc
lret
stc
push
jne
scas
mov
cltd
fcmovbe
sarl
adc
addr16
inc
fstp
jb
push
xchg
sub
pop
shl
mov
adc
jmp
daa
push
sbb
in
int3
arpl
test
add
pushf
jb
mov
or
lret
sub
push
and
loopne
inc
lcall
leave
jl
outsl
dec
jl
sub
nop
jbe
bound
adc
cmpl
enter
mov
add
pop
lods
bound
xchg
fcmovne
mov
and
lea
hlt
aad
sbb
push
mov
and
cwtl
repz
push
push
fs
mov
enter
hlt
mov
mov
cmp
sahf
lcall
and
pop
mov
push
jmp
mov
inc
stc
jae
fists
dec
mov
mov
cmpsl
enter
sarl
xor
testl
jecxz
add
out
hlt
out
xchg
mov
mov
add
push
mov
test
addr16
jmp
push
mov
dec
hlt
xor
mov
push
cmpsl
inc
mov
lods
stos
adc
pop
jne
ja
cmp
jns
push
cmc
imul
ret
mov
xor
sbb
bound
xorb
pusha
jnp
sub
push
cld
push
and
or
fwait
push
ljmp
or
test
fmuls
pop
stc
fcoms
fists
iret
test
into
dec
daa
dec
push
cmpsb
push
or
xchg
shl
jmp
adc
scas
cmpb
out
movsb
lds
shlb
inc
push
fxch
into
dec
out
repnz
stc
movsl
outsl
cmpl
addl
scas
push
pop
ljmp
in
rcrl
out
and
jecxz
inc
int3
mov
jg
or
fisubrs
jl
sub
fucom
shrl
fcompl
mov
lods
sarb
gs
cmp
xor
push
ret
jnp
jmp
sub
and
xor
cs
pop
pop
popf
push
dec
popf
loope
or
mov
das
popf
xor
inc
push
pop
cmp
scas
in
mov
push
mov
dec
add
call
sub
sub
call
inc
push
movswl
call
inc
inc
dec
dec
dec
lea
call
or
xor
sub
mov
dec
dec
mov
mov
add
and
lea
dec
imul
mov
call
lea
add
inc
movswl
mov
call
mov
inc
call
mov
sub
mov
movzwl
lea
inc
add
lea
inc
pop
lea
inc
dec
add
lea
pop
sub
mov
pop
mov
or
movzbl
inc
pop
mov
inc
inc
add
inc
add
dec
dec
pop
imul
add
pop
imul
imul
mov
mov
inc
call
inc
dec
add
inc
ret
sub
imul
push
mov
inc
push
mov
push
inc
imul
push
mov
lea
push
imul
lea
mov
sub
mov
push
mov
ret
push
imul
mov
inc
mov
dec
push
lea
mov
lea
call
pop
ret
jmp
sub
movzbl
mov
sub
add
imul
mov
and
lea
dec
movzbl
xor
mov
xchg
inc
add
mov
movswl
xor
and
dec
sub
mov
inc
add
xor
dec
jne
dec
mov
dec
dec
pop
mov
movzbl
pop
movzwl
dec
pop
sub
mov
add
add
mov
lea
dec
add
movswl
lea
mov
add
ret
push
push
inc
lea
push
sub
or
movsbl
dec
inc
add
push
add
dec
lea
inc
push
xor
add
sub
and
xor
mov
dec
push
mov
mov
lea
push
dec
dec
xor
dec
mov
push
mov
mov
push
movzbl
mov
pushl
mov
call
imul
add
mov
or
lea
add
dec
mov
mov
pop
ret
add
dec
dec
inc
xor
inc
mov
add
lea
dec
imul
dec
cmp
jb
add
xor
sub
add
mov
mov
dec
mov
add
mov
inc
xor
add
mov
imul
mov
dec
cmp
jb
inc
pop
inc
mov
lea
inc
sub
imul
dec
or
lea
dec
inc
sub
xor
inc
dec
xor
inc
imul
mov
inc
sub
test
jbe
imul
mov
inc
imul
inc
mov
add
imul
dec
lea
mov
and
add
mov
mov
lea
or
movzbl
dec
inc
add
lea
inc
and
sub
mov
mov
dec
mov
dec
mov
sub
imul
mov
movsbl
add
and
inc
mov
dec
jne
add
mov
sub
lea
movswl
dec
or
and
add
movsbl
dec
lea
mov
lea
inc
imul
sub
mov
mov
mov
mov
mov
inc
or
test
jbe
add
dec
mov
sub
and
and
lea
or
imul
imul
mov
lea
lea
movzbl
mov
inc
add
mov
add
lea
mov
and
and
mov
add
mov
lea
imul
movzbl
mov
add
add
inc
inc
and
inc
inc
mov
mov
dec
movzbl
mov
imul
mov
add
mov
mov
inc
jmp
push
sub
dec
dec
mov
imul
mov
dec
mov
inc
imul
movzbl
mov
imul
lea
lea
sub
mov
or
add
inc
lea
mov
lea
mov
mov
xor
add
imul
mov
inc
and
inc
imul
or
sub
inc
add
dec
mov
cmp
je
mov
mov
dec
push
inc
add
inc
and
or
add
inc
imul
add
mov
inc
lea
imul
lea
inc
mov
mov
mov
mov
mov
imul
inc
add
lea
dec
dec
mov
dec
inc
mov
imul
movsbl
mov
lea
mov
call
call
mov
sub
mov
mov
inc
dec
and
ret
mov
mov
pop
movsbl
ret
push
inc
imul
mov
inc
mov
push
mov
add
push
inc
push
imul
push
mov
mov
dec
lea
inc
call
lea
push
movzwl
xor
xor
inc
sub
dec
neg
mov
inc
mov
sub
lea
add
mov
imul
xor
mov
add
inc
inc
lea
imul
dec
je
mov
inc
mov
mov
inc
dec
mov
dec
jmp
add
inc
imul
repnz
mov
and
add
sub
jmp
movzbl
sub
mov
inc
lea
mov
sub
xor
and
lea
sub
inc
imul
sub
mov
dec
pop
pop
ret
push
add
imul
or
movswl
add
mov
sub
lea
inc
lea
or
dec
add
mov
or
dec
add
lea
mov
mov
inc
inc
movswl
inc
lea
imul
pop
ret
sub
inc
mov
add
dec
mov
add
dec
mov
add
inc
mov
add
inc
xor
movzbl
sub
mov
or
mov
inc
lea
lea
lea
dec
inc
add
cmp
jb
imul
push
dec
mov
push
mov
add
push
xor
inc
xor
mov
lea
xor
mov
add
xor
mov
dec
push
inc
mov
mov
mov
mov
xor
imul
mov
dec
mov
or
inc
movzbl
imul
imul
dec
add
mov
dec
add
dec
dec
movzbl
inc
dec
dec
add
dec
jmp
push
gs
dec
out
inc
stos
repz
push
pusha
dec
icebp
shrb
mov
arpl
cmp
pop
push
pop
ret
or
mov
shlb
in
loopne
jge
add
addb
adc
lahf
and
add
pop
repz
imul
jge
sub
mov
mov
dec
push
lea
sbb
lcall
jae
mov
push
push
in
mov
push
xorb
je
lock
nop
pop
push
leave
mov
mov
and
inc
xchg
xlat
pushf
cmpsb
insb
xor
popa
fwait
addl
or
das
cli
and
lock
hlt
in
outsl
popa
jg
adc
in
out
mov
cmpsb
out
dec
push
mov
xor
sub
shlb
mov
dec
or
pop
and
jb
xor
sub
fldenv
jae
inc
xchg
mov
hlt
xor
xchg
adc
or
sub
cwtl
push
dec
sbb
or
push
and
es
jecxz
clc
popa
adc
push
mov
enter
inc
addr16
scas
pop
mov
and
pop
push
sub
hlt
out
int3
xor
ss
sbb
ljmp
push
adc
fidivl
add
test
hlt
dec
lods
out
jnp
mov
in
aaa
in
adc
mov
test
enter
lret
daa
in
jl
dec
test
and
dec
and
add
imul
orb
sub
adc
sti
mov
stos
inc
cld
xor
cmp
mov
adc
insl
clc
repnz
adc
scas
cmp
pop
aad
fnstenv
mov
add
mov
mov
sub
out
pop
pop
xchg
daa
fcomps
rcr
cmpb
sti
pop
xor
aam
insl
push
sarl
add
and
pop
mov
test
enter
mov
cmpl
in
add
imull
mov
gs
push
pop
bound
add
xchg
icebp
sub
stc
add
inc
fdivl
data16
mov
mov
arpl
adc
movsl
push
add
fs
cmp
cmp
sub
clc
out
outsl
cmp
outsb
cmp
int
jmp
jp
dec
js
shll
push
in
dec
aad
inc
pop
inc
jno
xchg
mov
cmp
aad
mov
mov
je
sahf
cmp
cmpsl
out
pop
xlat
cmp
cmp
out
jbe
push
jmp
dec
jno
jl
xor
fstps
lahf
push
out
fs
in
test
hlt
xchg
cmp
dec
cmpsl
inc
mov
bound
sub
aad
push
mov
imul
div
pop
int3
movsb
mov
icebp
test
xor
gs
sahf
scas
inc
jb
add
imul
out
mov
and
xchg
fcoms
in
addb
inc
mov
lea
lods
add
rcll
pusha
cmpsl
popa
mov
ss
sub
sbb
xchg
in
dec
cmpsl
add
aad
out
lret
cmp
add
xor
adc
cmpsl
sbbl
push
imul
pop
and
mov
shlb
ljmp
push
int
js
push
ss
push
and
dec
inc
nop
push
sbb
shrl
cwtl
and
outsl
in
add
in
ja
insb
pop
bound
mov
mov
leave
xor
lods
sbb
lods
adc
insl
in
xor
mov
dec
push
pop
add
push
jae
add
sbb
jno
bound
loopne
sbb
or
xchg
or
cmp
fldt
shrb
int3
fs
fnstenv
push
repnz
ficompl
and
cmpsb
jp
subl
shrl
or
pop
push
push
call
mov
or
cmp
insb
add
stos
ljmp
out
sub
sti
pop
push
lret
sahf
push
cmp
pop
aaa
mov
fisttpll
testl
xchg
lea
xchg
or
leave
insb
mov
out
add
scas
dec
jge
push
mov
leave
jge
test
fistpl
and
das
stos
into
cmpsl
mov
xchg
dec
shlb
sbb
jge
and
stos
mov
lahf
mov
push
xor
inc
xor
xor
or
xlat
sub
data16
mov
ror
iret
shlb
sub
scas
mov
add
outsl
out
xchg
sbb
sbb
movsb
scas
inc
sub
mov
adc
push
sahf
jp
xchg
lods
mov
push
cmpsb
popa
mov
lds
std
xchg
sub
inc
jb
mov
mov
pop
pop
cmpsl
sarl
sarl
cltd
and
cmp
add
lea
mov
hlt
loop
add
fs
dec
inc
jns
or
aad
xchg
dec
add
xor
stos
jns
cmp
xchg
mov
mov
stc
adc
imul
fucomp
or
jg
dec
mov
mov
into
mov
xor
aaa
rcrb
lret
aas
sbb
mov
sub
cmpsb
fs
xchg
sub
jmp
xorl
cmp
popf
divl
cmp
jns
jnp
subl
repnz
test
movsl
or
jge
mov
andb
lods
dec
xchg
sub
sahf
push
push
leave
loopne
adc
add
xor
adc
std
or
lea
and
loope
aas
mov
movsl
xchg
mov
les
shrb
imul
lds
inc
or
xchg
and
rol
in
in
in
push
popf
mov
icebp
sbb
enter
pop
rcr
sbb
mov
rolb
subl
xor
fdivrs
jnp
repnz
popa
mov
je
add
lods
inc
dec
xor
jae
xchg
aaa
xorl
inc
pop
stos
xchg
lret
rorl
dec
pop
out
int
dec
mov
mov
scas
push
pop
das
xchg
cmp
and
test
enter
push
icebp
nop
adc
addb
pop
push
ficoms
mov
sub
xchg
in
mov
sarl
sbb
sbb
outsl
fldl
jl
int
das
inc
sub
xor
imul
sub
cmp
daa
mov
int3
movsl
jp
leave
mov
clc
sub
cmp
pop
aas
cmp
outsb
outsl
push
inc
lds
jno
push
mov
lcall
mov
and
test
scas
adc
mov
inc
pop
sbb
repnz
lret
inc
mov
pop
ds
fs
test
and
mov
adc
std
pop
nop
mov
flds
lods
js
mov
fs
mov
std
mov
push
jbe
fisttpl
in
pop
xor
movsl
into
orb
test
mov
add
orb
lds
addb
ficompl
sub
sahf
xor
add
rcrl
repnz
mov
push
mov
mov
pop
lock
cs
sti
sub
loopne
mov
stos
mov
repnz
sbb
stc
add
lock
in
ds
testb
mov
mov
mov
mov
cmp
xor
xor
mov
cmp
stos
sbb
sbbb
mov
xlat
mov
mov
loopne
mov
cmp
and
or
xlat
xor
aaa
repnz
cltd
mov
pop
jmp
pop
test
in
cmc
mov
fadd
pop
xchg
lret
into
test
mov
mov
pusha
sahf
ss
les
push
sub
das
fwait
lret
stc
fidivl
or
cmp
sbb
in
in
xor
dec
inc
out
call
push
rcl
sahf
adc
pop
test
mov
fistl
jo
xlat
xor
xor
jo
int
mov
jns
pop
imul
pop
adc
mov
xchg
lock
inc
add
mov
jge
lods
lahf
insb
jbe
cmp
and
iret
icebp
jecxz
xor
dec
popf
xorl
shlb
mov
sbb
push
or
sti
testb
mov
fsts
nop
test
sub
cmp
out
cli
pushf
inc
or
mov
jae
je
scas
xor
out
ret
mov
pop
icebp
push
inc
cmp
sbb
mov
or
test
or
xor
xchg
mov
jno
adc
shr
xchg
or
xchg
stc
leave
jae
pop
mov
pop
fisttpl
push
push
jge
add
cmpsl
mov
xchg
pop
mov
add
and
pop
xor
sbb
adc
push
pop
test
xor
sbb
cld
or
dec
data16
push
pop
mov
lahf
and
jg
mov
jno
push
clc
sbb
or
sbb
pop
test
sbb
ret
dec
enter
shll
cwtl
push
fucomi
data16
shrl
lock
stos
popf
fwait
adc
mov
bound
cmp
sbb
ficoml
dec
jns
mov
into
push
test
push
cmp
push
je
lock
xchg
mov
mov
in
mov
insl
ret
or
jg
repz
mov
scas
xor
push
push
fs
popf
stos
pop
jns
pop
push
shl
xor
fisubs
xchg
mov
pop
in
pop
jne
cltd
pop
stc
or
adc
xchg
and
push
and
bound
imul
into
call
jo
sarb
cmp
nop
mov
js
sub
movsl
leave
insb
push
insl
int3
into
cmp
test
push
cmp
rcr
sti
jnp
dec
fs
popf
adc
xor
inc
or
xor
mov
cmpsb
daa
cmpsl
or
sub
jmp
xchg
loop
movsl
mov
and
xchg
mov
andb
mov
data16
dec
dec
movsb
add
sbbl
ret
out
fldenv
push
jo
sbb
mov
fmul
sti
push
aas
js
mov
push
outsl
lea
inc
dec
mov
xchg
fwait
cltd
ret
or
lock
mov
stos
cmp
pop
pop
mov
stos
cmpsl
cmp
sub
push
pop
xor
xor
cmp
sub
frstor
sbb
leave
into
jl
je
lret
lcall
cltd
add
cs
push
imul
cmpsb
jbe
dec
fs
lock
and
stos
mov
mov
sahf
sub
std
xor
push
fs
xor
cmpsl
scas
ret
cmp
daa
mov
fwait
cmp
jno
rcrb
add
push
or
lcall
and
sar
push
in
imull
arpl
mov
sub
loop
mov
or
xor
roll
mov
jle
mov
outsb
lods
in
mov
jne
ja
imul
not
bound
push
pop
and
jmp
adc
ficompl
xor
sub
cmp
movsb
pop
popa
out
inc
mov
out
adc
push
sbb
aaa
ljmp
dec
das
sahf
sahf
lahf
mov
xlat
add
or
and
in
dec
repnz
test
cmp
push
sbb
sahf
or
sub
aas
add
stos
addb
mov
mov
dec
xchg
dec
dec
out
mov
dec
xchg
mov
sbb
jmp
xchg
out
jecxz
dec
out
daa
mov
push
in
sbb
xchg
xor
leave
mov
add
shld
or
inc
add
push
outsb
fsubrs
enter
cs
pusha
leave
add
mov
movsl
inc
cld
inc
push
push
mov
imul
ficoms
mov
xchg
fwait
or
ffreep
and
subl
sahf
fwait
movsb
pop
cwtl
insl
mov
sbb
push
and
pop
rcrb
std
nop
mov
adc
pop
push
call
rol
sub
xor
sarl
mov
pop
inc
fbld
pop
xlat
jo
push
push
pop
mov
push
and
push
mov
or
or
xor
mov
adc
xor
je
dec
mov
movsl
sub
or
push
fdivs
sahf
ss
lods
sbb
mov
pushl
and
mov
mov
inc
outsl
push
add
inc
ss
das
sbb
mov
pop
pusha
ljmp
lock
push
mov
xchg
jmp
leave
ret
ds
or
scas
mov
push
jne
push
jne
jecxz
shlb
sub
inc
pop
hlt
jne
sar
push
push
out
js
imul
fcomps
inc
sbb
pop
xchg
push
out
cmp
adc
out
les
outsb
test
add
stos
jne
sub
shlb
mov
loop
mov
dec
js
lret
jbe
loop
mov
bnd
pushf
icebp
inc
dec
data16
fwait
loop
mov
xor
cld
jecxz
fsubs
add
aad
sbb
mov
sbb
sbb
sub
ss
mov
xchg
cmp
or
das
xor
pop
cmp
iret
sti
mov
bound
push
push
lea
push
sbb
lea
pop
xchg
call
mov
mov
mov
adc
push
loope
aad
xchg
pop
jl
cmp
lcall
mov
pop
pop
aam
ss
icebp
int
sbb
lret
dec
dec
xor
jl
icebp
add
jnp
decb
sbb
aam
or
les
enter
sti
or
pop
testb
jmp
fcoml
movsb
aam
cmp
addr16
rcll
jge
loop
fsubrs
je
mov
cmp
inc
push
mov
mov
jnp
outsl
xchg
and
jl
nop
and
jge
pusha
les
ja
or
int
inc
jno
jg
jecxz
mov
pop
push
dec
dec
xor
xchg
fisubrl
movsl
add
nop
or
insb
lcall
sbb
ja
shll
adc
mov
inc
icebp
dec
push
pop
inc
out
and
push
push
stos
stos
and
xchg
cltd
add
test
into
nop
ja
sbb
mov
gs
mov
sub
adc
mov
jo
addb
enter
cmc
and
mov
jmp
and
bound
sbb
aaa
sub
in
or
int
mov
data16
arpl
lcall
mov
nop
sub
les
jno
call
lock
xchg
jl
and
and
out
fisttps
dec
mov
mov
push
sub
lods
pop
aad
mov
xchg
pop
mov
mov
mov
mov
call
out
bound
out
xor
adc
xchg
cmp
adcl
push
adc
ja
das
out
int3
pop
push
mov
repnz
lods
cmc
test
mov
mov
and
clc
sbb
or
xor
fbld
and
mov
or
das
int3
cli
mov
hlt
add
in
and
and
cmpb
ss
jb
or
xchg
lahf
xorl
pop
lea
jnp
lret
les
and
lds
test
pop
fsubs
subl
dec
and
cmp
jmp
pop
nop
push
imul
xor
aas
in
xchg
aaa
es
test
loopne
mov
aas
sbb
xor
inc
xor
pop
dec
insb
aaa
push
push
out
jo
jns
xor
cmp
sbbb
xchg
addl
inc
cwtl
cmp
cmpsb
lret
test
xchg
test
inc
mov
xchg
xor
xchg
lock
or
jae
cs
jnp
scas
jg
mov
pop
jo
cmp
xchg
dec
sub
push
int3
xlat
xchg
lret
push
sbb
call
pop
dec
cs
dec
sbbl
lahf
xor
pop
cmp
test
push
or
jg
imul
iret
lret
xchg
mov
rorl
aas
rorb
pop
cmp
nop
les
and
adc
or
outsb
int3
inc
mov
push
pop
mov
jno
mov
int3
and
aaa
addb
enter
sub
stos
imul
adc
mov
scas
enter
xor
fcomip
inc
add
stc
mov
cmp
inc
jae
shlb
push
sub
js
sbb
lret
inc
push
add
xlat
add
jle
imul
ja
fcompl
push
fildl
add
hlt
cltd
pop
inc
sbb
sub
es
es
and
jo
loop
pop
jnp
ret
add
enter
jnp
test
out
jo
mov
movsb
in
xor
sbb
rcrl
mov
outsb
or
stos
pop
sbb
mov
xchg
pushf
icebp
movsb
out
lods
mov
daa
pusha
sbb
imul
lahf
inc
dec
xor
push
call
and
and
pop
inc
test
inc
xchg
mov
adc
inc
rorl
sti
arpl
or
in
or
push
lahf
ret
jmp
adc
fmul
jo
bound
mov
inc
mov
push
or
push
mov
out
fnstcw
pop
insb
pop
fldenv
push
push
push
pop
push
lds
mov
pusha
icebp
mov
inc
cmc
sbb
gs
or
or
add
cli
sub
fbstp
xchg
push
cmp
lret
sub
adc
xchg
xor
inc
or
sbb
jne
gs
lahf
xchg
adc
popa
sub
add
cltd
adc
mov
mov
pop
rorl
orl
push
cmpsb
out
in
scas
sbb
cltd
adcl
pusha
pop
in
jecxz
mov
stos
add
ret
mov
push
les
xchg
xchg
cmp
and
popf
sbb
fs
or
popf
aas
pop
lcall
lock
dec
xor
aas
cli
fisubs
mov
bound
xor
inc
popf
movsl
inc
pop
das
sub
arpl
jp
hlt
mov
jnp
inc
xor
outsb
mov
lret
adc
movsb
jl
add
lea
fsubs
cmp
cmp
sahf
icebp
cwtl
fnstenv
dec
xchg
inc
inc
inc
sub
cli
push
ljmp
fildll
dec
imulb
jp
or
dec
out
dec
dec
sahf
inc
add
dec
xchg
sub
inc
movsl
fiadds
push
push
inc
es
loopne
and
lcall
gs
into
push
cmpsb
mov
imul
je
inc
inc
cld
stos
dec
lret
sarb
jbe
popw
lods
rsm
and
adc
enter
bound
push
pop
pop
ret
and
mov
stc
xchg
push
cli
push
outsl
pop
sbb
in
pop
popa
xchg
data16
sar
jp
dec
out
movsl
shrl
mov
lods
cmc
cmp
roll
jl
test
jnp
adc
scas
xchg
sub
xchg
mov
xor
mov
sub
not
stos
popf
add
push
adc
pusha
or
mov
mov
in
jle
adc
pusha
push
dec
lret
out
popa
dec
inc
ds
or
or
sbb
push
inc
test
lcall
pop
iret
ret
cmpsl
mov
sbb
rorl
int3
fisttpll
mov
jg
imul
mov
test
scas
mov
divb
stc
xchg
mov
cmpsl
jge
inc
fwait
jbe
loope
mov
fs
cmpl
cwtl
bound
jno
out
addr16
dec
sub
mov
shrl
cmp
push
push
icebp
out
fildl
mov
fdivr
push
insb
imul
jno
shll
mov
xorb
ffreep
pop
dec
imull
xchg
lret
cmp
xchg
inc
pop
cmp
insl
push
cmp
decb
xorb
out
mov
ret
test
int
je
ret
xor
mov
jo
aas
and
stc
call
insl
inc
dec
loope
popf
out
fstpl
sub
decb
adc
jno
jmp
xor
add
repnz
aam
out
jle
fidivs
cli
jne
mov
jecxz
stc
bound
inc
fildll
xlat
and
jno
inc
xchg
icebp
pop
mov
push
mov
lret
jnp
and
mov
xor
cmc
aam
aam
outsl
and
jl
pusha
adcb
dec
outsb
test
mov
sub
dec
mov
out
jmp
popf
sarb
jo
aad
neg
ss
les
pop
sbb
xor
fidivs
mov
inc
dec
pop
decb
pusha
dec
fsts
lock
out
movsb
lods
mov
push
mov
popf
xchg
aad
add
lcall
cmp
in
sbb
out
lcall
push
movsl
adc
dec
popa
or
add
ljmp
cli
cli
sbb
sqrtps
push
out
call
or
or
or
sub
push
repnz
pop
inc
mov
adc
push
lret
lds
jbe
fldt
xchg
push
xor
ret
jl
aam
fwait
aad
arpl
sub
jno,pt
jo
into
lcall
add
int3
push
hlt
sub
mov
xchg
lods
push
dec
hlt
add
lods
xor
scas
jle
and
stos
add
push
mov
mov
and
inc
fcoml
test
or
mov
and
jp
scas
shrb
bound
js
jno
cltd
push
and
cld
rorb
stos
lods
movsl
mov
fs
mov
repnz
mov
and
sti
in
inc
jp
inc
lret
xor
ljmp
push
jge
adc
sub
aam
out
popf
mov
pop
cwtl
js
sub
int
test
lret
mov
aaa
pop
ljmp
add
mov
add
pop
call
or
arpl
test
test
aas
push
lcall
shrl
outsl
xchg
in
fidivrl
cmp
popa
and
sbb
adc
pop
fisubrs
mov
mov
add
mov
xor
insb
filds
xchg
call
dec
pop
add
cltd
xchg
push
mov
mov
mov
nop
rcll
mov
es
or
loop
add
in
mov
jmp
mov
inc
imul
xchg
push
out
sarl
in
pop
adc
ret
adc
sub
fwait
and
pop
sub
iret
cmp
mov
sub
clc
pop
sbb
ficomps
xchg
test
adc
pop
rclb
jne
mov
pop
js
dec
lods
cmpsb
xchg
sbb
fiaddl
rorb
jne
xor
adc
aas
pop
jl
icebp
adc
pusha
pop
rorl
mov
and
icebp
loop
inc
and
div
adc
scas
rolb
mov
dec
stc
cmp
fsubrl
je
mov
popf
vprotq
and
scas
fyl2xp1
fst
push
scas
aad
mov
jmp
mov
mov
xor
xchg
adc
insb
imul
bound
repz
jae,pn
dec
mov
test
fwait
sub
jbe
rorl
or
push
mov
imul
in
jne
xor
mov
addb
pop
xor
jno
lret
xor
push
sbb
addb
or
push
xlat
jecxz
loopne
xor
pop
aaa
sbb
cmp
sarl
pop
icebp
jmp
out
fistps
push
lods
mov
and
arpl
insb
pop
scas
jle
mov
ja
mov
xor
push
push
xorb
mov
sbb
mov
cmp
fidivrl
cmp
divl
aas
pop
jg
mov
out
subl
sub
pop
in
dec
pop
push
mov
xor
aaa
mov
or
pop
mov
ret
adc
xchg
add
pop
iret
fcompl
xchg
pop
sahf
scas
pop
push
sbbl
aas
dec
sarl
mov
cs
loope
add
lds
sbb
std
arpl
push
dec
movsb
in
sbb
int
int
and
cmp
jae
into
mov
out
or
cmp
push
xor
mov
in
test
inc
stos
in
jb
aas
cmpsl
xchg
iret
repnz
pop
jno
icebp
repz
inc
and
xor
push
or
or
insl
std
push
inc
out
jg
pop
cld
hlt
add
mov
mov
fwait
cmp
push
repnz
popa
dec
dec
mov
xor
push
rcrl
rolb
lar
mov
xchg
icebp
call
push
inc
dec
add
push
and
test
add
cmpsb
xlat
les
std
mov
fisubs
sahf
aaa
fidivs
sub
std
rcl
out
int
xor
outsl
sbb
dec
test
es
cld
inc
mov
repz
mov
addr16
xor
icebp
test
mov
dec
xor
cmp
popf
jo
sbb
lret
test
test
ds
jl
fsubs
push
inc
mov
adc
pusha
in
mov
and
pop
in
and
mov
mov
xor
mov
jbe
jmp
cwtl
mov
pop
dec
xchg
add
insl
cmp
fistps
mov
mov
adc
pusha
rcll
loopne
pop
inc
mov
pop
dec
push
lret
xlat
cmp
pop
mov
loope
xchg
sbb
sbb
cli
int3
cmc
ljmp
inc
mov
nop
cmc
cmp
pop
std
test
aaa
xor
std
sub
test
in
lret
loop
xchg
dec
sbb
fidivs
and
mov
inc
pop
sbb
pop
outsb
jne
cmp
push
fistpll
inc
xor
xchg
xor
sbb
lods
mov
mov
and
xchg
xchg
pushf
sub
jmp
in
imull
jle
inc
dec
das
xor
daa
iret
cwtl
aam
jl
ds
mov
xor
mov
movsb
push
xchg
pop
dec
push
in
cmpsl
jl
xor
imul
repz
aas
sbb
movsl
cltd
push
adc
xchg
ljmp
sub
andl
cmp
add
pushf
adc
loop
pop
or
imul
push
mov
cmp
adc
aaa
es
movsb
andl
pop
inc
mov
int
lods
jmp
stos
sbb
jmp
cli
ffreep
cmp
jbe
in
and
jle
mov
cmp
loopne
movsb
xor
xchg
lcall
mov
xchg
jbe
xchg
and
cli
cltd
sub
lcallw
out
xor
out
call
sub
pop
sbb
pop
out
or
cmp
or
inc
pushf
sbb
adc
mov
cmpsb
dec
push
jno
call
adc
hlt
push
int3
nop
fadds
das
test
xor
or
mov
mov
mov
cmp
adc
mov
in
sbb
mov
add
sbb
push
insl
jecxz
lret
imul
pop
lods
rcrl
lcall
cli
and
movsb
lahf
insl
jge
shlb
push
test
loopne
or
inc
jo
cmpsl
push
nop
xchg
mov
push
mov
rcll
cmpsl
clc
dec
mov
or
aas
les
int3
lahf
roll
int3
ljmp
mov
shl
cmp
add
xchg
mov
or
adc
stos
nop
mov
shl
lcall
or
test
mov
stos
add
push
inc
lea
and
loop
pop
mov
pop
lahf
jp
push
insb
sub
aas
mov
push
shll
and
mov
adc
mov
repnz
pusha
push
rorb
adc
adc
mull
push
or
and
mov
mov
cmp
pop
inc
ds
imul
mov
dec
xchg
inc
loope
je
test
nop
push
add
xchg
testl
cmp
sub
mov
push
push
and
repnz
scas
inc
mov
shl
fs
lds
cmp
popa
add
jb
fldt
jge
sub
iret
or
push
or
mov
sbb
push
jmp
mov
push
pushf
aam
add
scas
mov
xchg
mov
pop
ror
lret
inc
andb
insb
es
ds
shrl
ret
fdivrl
mov
mov
fistpll
or
xchg
nop
xor
ss
gs
adc
cli
push
jp
jnp
and
loop
xchg
cmp
or
push
lods
mov
aad
paddsw
pop
and
add
xlat
push
mov
dec
leave
popa
xchg
loope
xor
or
fwait
inc
mov
stc
add
leave
cwtl
dec
aaa
cs
sbb
cmpsb
das
sub
in
adc
outsl
or
add
inc
xchg
xchg
mov
addb
jae
pop
jne
push
sub
sbb
ret
icebp
push
and
sti
lcall
push
dec
sarl
into
xchg
notb
xchg
dec
and
sbb
test
je
mov
sti
mov
add
push
fs
and
sub
cmp
aad
inc
jge
push
adc
gs
inc
test
or
ja
jle
cmp
popf
mov
push
mov
add
or
imul
mov
xchg
stos
dec
and
imul
jno
gs
inc
stos
and
dec
popf
int
je
cmp
mov
faddl
cmp
fistpl
mov
mov
in
mov
popl
mov
sub
mov
xchg
pop
and
sbb
pop
test
lcall
jle
push
bswap
mov
cltd
movsb
or
movsl
xor
int
pop
xor
sbb
mov
xchg
lcall
cld
aam
adcl
fwait
mov
push
dec
xor
loop
and
ss
mov
and
push
jns
lahf
add
jecxz
repnz
mov
and
sarb
or
add
pop
xor
inc
jae
test
cli
popa
stc
push
data16
push
sub
push
daa
arpl
jg
push
addr16
mov
js
std
loope
int3
xchg
xchg
fwait
das
push
add
mov
jp
cmp
addr16
fsubrs
negb
das
add
popf
push
int3
aad
mov
repnz
pusha
jp
pop
dec
mov
insb
xor
inc
xor
ficoml
push
pop
mov
cli
sbb
mov
inc
lds
outsb
fisttpll
cmp
lods
dec
push
pop
clc
out
pop
adcl
sbb
nop
dec
out
pusha
icebp
sti
pop
push
mov
dec
ret
cmpsb
addr16
aad
fldenv
in
cmpsl
shlb
xchg
mov
insl
cmp
adc
xchg
xlat
cmp
mov
aad
xchg
cmp
cmp
lods
test
addr16
pop
popa
adc
sub
add
jnp
cld
test
ljmp
gs
jmp
int3
push
jmp
movsb
adc
pop
adc
lea
dec
aaa
lock
es
xchg
sbb
seta
ss
stos
and
fsubrp
mov
rolb
add
addb
push
ds
mov
scas
lods
fidivrl
daa
jmp
into
bound
insb
cmc
sbb
imul
imul
shrl
and
or
and
push
push
aam
loopne
sbb
pop
xor
ret
and
adc
sub
insl
fisubrs
jo
ljmp
lods
xchg
hlt
scas
push
test
pusha
imull
mov
cmp
mov
xchg
mov
sbb
stc
imull
mov
jle
cmp
cwtl
aas
popf
popa
lods
mov
and
cltd
or
sti
pop
mov
scas
mov
jno
repz
into
nop
jne
out
iret
adc
cmp
in
sub
jno
adc
cmp
je,pt
outsl
cltd
orl
sub
xchg
dec
and
mov
or
pop
xor
stos
les
bound
adc
pop
je
push
cmp
dec
pop
mov
mov
sub
in
loopne
je
adcl
and
shrb
loop
xchg
loopne
push
inc
and
lahf
xchg
icebp
adc
cltd
aas
icebp
daa
out
ljmp
mov
adc
sub
dec
adc
add
ret
xchg
jle
dec
popf
into
ss
push
jns
and
mov
jle
gs
sub
loope
daa
mov
das
mov
cli
clc
lds
lds
sub
mov
cltd
and
jle
xor
ljmp
clc
push
imul
test
aaa
arpl
ret
cmp
test
es
fcmovbe
mov
mov
lods
or
js
jnp
rsm
scas
mov
and
lock
in
or
mov
or
sub
cmp
fcmovu
ret
rcrb
pop
inc
in
xchg
xor
lret
cltd
xchg
inc
add
ss
sahf
or
cmp
in
mov
pusha
mov
andb
outsb
sbb
mov
or
push
repz
xchg
fwait
pop
and
lahf
pop
jbe
nop
outsl
pop
cld
pop
mov
push
fcmovu
test
popa
repz
loopne
lds
lret
adc
out
sub
or
or
imul
js
ja
cmc
push
sbb
fildl
subl
dec
or
push
xor
or
sub
adc
inc
cmp
sbb
mov
sbb
and
rcrb
test
xchg
pop
sbb
xor
inc
push
mulb
insl
pop
ret
cli
addb
xchg
jg
enter
fdivrl
aas
rcrl
imul
sub
pop
pusha
cmp
in
roll
pop
push
iret
aad
pop
imul
cmp
add
imul
mov
fwait
dec
jno
cmc
or
sbb
addb
lcall
addr16
in
das
jns
jns
xor
outsl
es
repnz
dec
jg
les
cmp
mov
shll
repz
and
loop
fs
push
jl
std
lahf
mov
lret
or
push
jle
mov
add
sub
js
fs
sbb
or
cltd
pusha
dec
add
dec
pusha
sahf
jb
mov
mov
push
inc
push
jne
jge
inc
cmp
xchg
jl
pop
xchg
fcoms
or
pop
pop
add
add
popf
xor
movsb
and
cmp
std
xchg
aas
sti
repz
fldl
aaa
inc
pusha
pop
out
sbb
xor
incb
pop
arpl
out
adc
add
and
aas
sub
push
jb
nop
dec
push
test
cmpsb
dec
xchg
data16
add
push
push
pushf
mov
lret
mov
add
enter
sahf
adc
mov
adc
lds
lcall
je
xchg
out
loop
and
lcall
icebp
and
in
aam
repz
aam
pop
jge
imul
mov
inc
mov
aas
daa
test
push
sub
sub
dec
jmp
in
das
mov
push
add
mov
lds
aad
lret
sub
dec
mov
das
movsl
je
add
pop
scas
clc
xchg
cmpsb
in
push
add
jb
push
clc
lods
sbb
jo
or
pop
push
xchg
imulb
aas
push
mov
repz
sarb
mov
rorb
frstor
lahf
mov
arpl
push
nop
xchg
mov
je
popf
ljmp
add
mov
rorl
lret
add
push
bound
inc
cmpsl
push
je
jne
cmp
pop
jb
das
fwait
lea
xchg
outsl
nop
xlat
pop
jb
faddp
jbe
arpl
icebp
cmp
push
sub
sub
xchg
mov
sub
push
push
cmp
or
sbb
ss
repnz
cli
ja
loopne
mov
or
cmp
sbb
out
and
mov
aas
pop
cmp
cmp
and
das
dec
pop
cmp
jecxz
xor
aaa
rclb
cmpsb
xlat
popf
daa
xchg
rcrb
xchg
mov
rclb
pop
xor
pop
inc
push
push
xchg
xor
test
cmpsl
mov
subl
xchg
repz
ds
sbb
movsb
pop
idivb
fsubrl
mov
mov
stos
push
dec
popa
clc
ljmp
cmp
scas
jge
lret
movsb
sub
cmp
pop
adc
xorl
pop
fs
adc
dec
jbe
mov
mov
adc
nop
mov
mov
and
daa
cmpsl
dec
cmp
movsl
ja
dec
cmp
xor
xor
sub
mov
xor
push
jecxz
jge
xor
fisttps
movb
pop
out
movsb
movsl
or
lret
xor
mov
pop
js
repnz
lock
icebp
push
call
sqrtps
and
push
jbe
adc
xor
xchg
mov
popf
loop
icebp
in
call
adc
jns
shlb
lcall
pop
int
mov
inc
and
sarl
pop
mov
roll
and
fwait
dec
repz
into
add
imul
dec
or
push
dec
jle
mov
mov
lods
shlb
sbb
mov
sub
xchg
mov
pop
and
push
sub
gs
jmp
fidivrs
das
mov
out
fldl
test
pop
pop
jle
push
imul
cltd
es
add
or
sbb
inc
rcrb
push
clc
in
in
mov
je
clc
ret
sub
int
or
push
cli
dec
popa
sbb
aam
int
mov
shlb
push
dec
sub
aad
xchg
and
aaa
push
jne
popf
push
in
repnz
icebp
xchg
cmp
sbb
pusha
cmpsb
xchg
popfw
mov
jb
push
rclb
inc
sub
int3
xchg
xchg
arpl
cmp
outsl
rol
cmp
in
in
rolb
or
push
clc
adc
push
xor
jae
ds
mov
push
cmpsl
nop
or
insl
mov
cmp
dec
mov
inc
cmp
repz
test
enter
pop
xchg
jmp
mov
lea
cmc
iret
dec
sub
stc
jno
mov
mov
sub
push
xor
int3
adc
aaa
fstl
jno
ljmp
mov
jns
xchg
inc
sub
mov
outsl
lods
pop
push
lods
pop
shll
dec
data16
mov
jns
sub
icebp
call
inc
and
mov
and
gs
adc
pusha
adc
das
mov
sbb
test
inc
out
adc
mov
mov
pushf
and
dec
or
cltd
inc
and
in
insb
jg
add
aam
outsl
sbb
mov
adc
pop
sub
inc
call
cltd
xchg
mov
push
add
rcl
mov
add
lods
shrl
and
xor
push
sti
dec
and
cmpsb
sbb
pop
sbb
insl
pop
jge
xchg
and
sbb
mov
mov
sbb
mov
mov
xor
inc
test
add
addr16
dec
jg
push
popa
mov
movsb
neg
or
in
or
xorl
ss
lret
mov
pop
xor
out
push
pushl
fdivl
icebp
cld
jb
addr16
in
arpl
add
or
outsl
lods
outsl
loopne
push
or
sbb
lods
mov
jno
popa
xor
outsb
xor
rcrl
aam
mull
push
data16
sti
popa
jmp
mov
push
push
fwait
xor
insb
and
inc
ficoms
xor
out
sbb
into
outsl
push
push
ljmp
pop
dec
inc
lea
jae
and
sub
xchg
mov
cmp
mov
fst
sub
sbb
idivb
in
jnp
dec
mov
sub
loope
xor
fs
orb
insl
sub
test
jmp
jecxz
sbb
lret
imul
or
xchg
hlt
push
mov
ret
mov
xor
sbb
lahf
icebp
js
lea
popf
fidivl
xorb
or
dec
cmc
das
int
pop
rcrl
sbb
out
mov
pop
into
mov
sahf
mov
lock
movsb
mov
rclb
inc
inc
inc
leave
sbb
stc
gs
jg
lahf
jle
jno
xchg
or
cmp
sub
adc
sub
cmp
jne
inc
lods
nop
or
and
fildll
xchg
mov
popf
mov
push
in
mov
jne
lods
or
call
and
leave
add
in
stos
js
test
jmp
pushw
push
mov
xorb
hlt
stc
cmp
out
inc
mov
lahf
movsb
call
cmp
and
xchg
mov
in
mov
int3
mov
or
aam
and
dec
add
out
divb
pop
cmp
stc
push
jae
stos
push
adc
shrl
leave
mov
in
add
aas
jnp
sub
leave
mov
jl
das
insl
sbb
push
xor
enter
and
xorb
mov
push
outsl
dec
inc
sub
jge
repz
jg
lds
jg
loopne
and
inc
lret
xor
ljmp
xor
lahf
es
aas
cmp
jo
aad
loop
cmp
pusha
jb
movsl
xchg
push
xchg
add
mov
add
rorb
loopne
daa
xchg
inc
or
xor
inc
je
adc
add
cmp
xor
mov
movsb
outsl
mov
stos
sti
sbb
push
inc
push
cmpsb
rolb
out
sub
add
mov
mov
or
mov
aas
mov
and
fwait
pop
imul
jne
mov
in
rcrl
test
and
and
pop
xchg
jb
sub
and
mov
pusha
pop
and
adc
sahf
pop
fcomps
or
jb
aam
mov
push
notb
jmp
fbld
outsl
int
out
mov
ret
xor
icebp
cmp
sub
cld
pop
xlat
pop
mov
jne
jae
pop
mov
addr16
gs
jecxz
push
jmp
cmp
pop
jno
jno
scas
dec
ds
add
jp
pop
dec
call
jne
dec
lds
out
pop
jae
dec
cmpsb
cmpsb
dec
xor
in
scas
jmp
xchg
pop
scas
inc
fisubrs
xor
scas
mov
int
lock
int
pop
movsl
cwtl
mov
cmpsl
ljmp
push
cmp
mov
fwait
mov
repnz
out
xchg
ret
xor
sbb
and
scas
daa
mov
popa
and
dec
cli
das
jle
enter
loopne
dec
lds
pop
and
mov
mov
subl
movsl
push
ss
add
testl
fidivs
shrb
dec
notb
adc
in
pop
fisttpll
sub
mov
mov
and
sub
jbe
sub
std
ljmp
jnp
xchg
addl
leave
stos
hlt
clc
das
xchg
daa
sub
lret
xor
sti
scas
dec
ret
pop
inc
fiaddl
ljmp
jne
in
sub
xor
adc
jecxz
scas
popf
cmpsb
jmp
sahf
lods
nop
inc
mov
fildll
in
cltd
sub
int3
ds
sbb
mov
mov
xchg
add
gs
xchg
testb
test
mov
jae
mov
cmp
sub
and
adc
loope
mov
cld
push
in
lret
shlb
cmpl
add
outsb
daa
ljmp
in
xor
and
jmp
sub
xchg
mov
add
sahf
mov
lock
dec
mov
lds
adc
mov
mov
lcall
and
mov
push
mov
outsl
outsl
repz
sbb
mov
cmp
dec
mov
sti
inc
dec
mov
test
cmp
cltd
dec
mov
xchg
pop
cld
out
mov
stos
inc
fildll
dec
ret
jecxz
out
iret
mov
mov
andb
out
sbb
adc
aaa
jge
push
and
mov
gs
jmp
repz
imul
loope
inc
int3
cmpsb
mov
adc
dec
movsl
ja
and
fcomps
mov
xor
ja
fsubr
dec
test
in
xlat
mov
adc
mov
in
xchg
mov
cs
push
mov
jb
xchg
mov
rcl
mov
stos
lea
fldt
pop
mov
xchg
push
ret
enter
out
es
fdivrl
cmp
and
out
dec
mov
or
mov
or
or
xlat
shlb
jae
push
stos
mov
sub
push
pop
xchg
cmpsl
mov
int
sbb
mov
cmpsl
nop
mov
mov
mov
stos
jmp
mov
mov
fs
pusha
pop
in
test
stos
arpl
out
idivl
icebp
pop
xchg
sarl
ljmp
pop
xchg
pop
xchg
push
or
scas
mov
dec
inc
fistpl
lahf
aas
mov
add
cmp
mov
test
dec
pop
sbb
mov
cmp
loope
movsb
sub
xor
push
cmp
pop
xchg
movsb
in
rorb
and
jae
test
cmc
lret
push
cld
mov
in
pusha
adc
into
testb
imul
mov
fs
pushf
aad
aaa
mov
daa
and
lds
xchg
or
xor
mov
xchg
xchg
imul
lcall
jb
lahf
mov
sbb
sahf
sub
out
popf
sahf
jecxz
xchg
sub
sbb
out
mov
add
in
rcr
ljmp
loop
sbb
int
pop
jae
cmp
jmp
icebp
sbb
and
xchg
or
add
cwtl
int
jg
mov
sarb
ljmp
sbb
xor
lahf
cmp
mov
stos
mov
or
rolb
fistpl
mov
inc
je
inc
loope
and
shrb
nop
dec
es
pop
repnz
or
sti
loopne
movsl
fstp
loope
mov
push
fcom
fbstp
in
cmpsl
mulb
xlat
sub
cmp
inc
pop
outsb
pop
das
jge
nop
mov
dec
and
cmp
mov
test
aas
mov
and
std
ja
cmp
loopne
in
sbb
leave
stos
daa
sahf
hlt
loope
inc
mov
into
in
test
xchg
imul
jno
mov
mov
add
adc
mov
lret
and
dec
dec
sbb
dec
push
mov
mov
repz
inc
mov
adc
jge
inc
mov
ljmp
mov
xor
push
iret
adc
mov
call
lahf
add
insb
inc
mov
popf
cmp
cli
imul
lods
or
cmp
fdivrl
rol
insb
dec
sbb
pop
mov
insb
and
xor
mov
pusha
pop
imul
sub
and
stos
cmp
in
andb
xchg
pop
dec
jo
adc
add
lahf
test
jl
xchg
frstor
ljmp
adc
push
repz
fisubrl
dec
subb
push
dec
push
cmc
imul
mov
mov
notb
inc
icebp
mov
mov
adcl
jns
out
sbb
sub
push
lahf
pushf
outsb
in
rclb
lret
sbb
insb
inc
inc
pop
fdivl
and
and
pop
jp
push
jo
dec
add
test
test
or
popf
mov
or
mov
pop
into
pop
push
lods
aaa
mov
inc
leave
orl
inc
mov
pop
and
inc
mov
cld
dec
int
loopne
lcall
cmp
lods
aas
and
xchg
aaa
pop
mov
push
and
pop
cmpsb
xchg
add
adc
add
jb
sbb
iret
or
hlt
add
add
cmp
cmp
add
push
add
push
mov
lret
xchg
movsb
sub
push
scas
pop
mov
jns
jns
sbb
mov
push
xorl
aaa
fdivrs
pop
in
sahf
jo
data16
pop
les
bound
aam
push
sub
jnp
repz
das
add
push
push
stos
mov
imul
xchg
jo
loop
fcmove
fnstcw
and
pusha
cmpb
jg
pop
cmp
into
rcl
in
push
dec
data16
jo
jb
jmp
cmpsl
sub
mov
call
loope
pop
mov
testl
fwait
lahf
test
ds
sbb
xchg
lds
push
and
sbb
mov
or
aam
add
sub
fisubrl
xorl
adc
aaa
lods
shl
flds
daa
xchg
out
pop
sbb
lahf
popf
cmp
int3
push
les
gs
bound
ss
popf
int
fdiv
lret
mov
mov
mov
add
jg
cwtl
sti
cmp
push
cli
mov
popa
inc
jo
mov
mov
dec
xor
inc
xor
and
lret
out
lret
and
mov
push
fwait
push
xor
inc
xchg
adc
data16
xor
addr16
mov
shl
pop
xor
fists
pop
mov
lds
movsl
jl
cwtl
sbb
cmp
aad
mov
subb
pop
dec
ljmp
dec
mov
test
jns
jle
outsl
out
pop
imul
into
xor
pop
cmp
cltd
or
and
add
dec
dec
outsb
and
clc
int
dec
adc
xor
jp,pn
pop
mov
or
and
daa
sbb
test
add
mov
jl
push
pop
dec
mov
cmp
je
js
or
mov
or
fisttpl
inc
lods
xchg
mov
mov
sbb
insb
adc
sbb
mov
cltd
insb
push
pop
in
mov
sbb
sbb
pushl
push
dec
rorl
sub
sbb
push
xor
xor
lock
push
mov
cmpsb
call
adc
jno
pop
fwait
dec
dec
mov
push
lahf
xchg
clc
xchg
int
shrb
adc
lds
or
push
loop
sbb
xor
and
inc
cltd
roll
inc
cs
xchg
ds
fstpt
sub
lcall
and
or
xchg
leave
or
icebp
cmc
mov
or
inc
adc
outsl
and
mov
imul
adc
mov
jp
pop
xlat
incl
push
mov
inc
fs
mov
xchg
xlat
pop
out
pop
test
mov
dec
fnstsw
aam
pusha
xchg
fwait
out
fwait
sbb
lock
inc
aas
push
push
mov
pop
sahf
fwait
ss
push
push
out
in
and
test
dec
mov
fwait
push
jne
hlt
outsb
and
and
sahf
les
mov
jg
scas
inc
scas
mov
js
lock
sbb
insb
mov
imul
mov
shrb
dec
aaa
out
push
arpl
ret
push
and
rcl
pop
push
jge
push
repnz
je
inc
movsl
mov
push
cld
cs
mov
leave
jecxz
mov
push
add
fcoms
and
jno
lock
and
lret
in
movsl
js
xor
jb
into
in
add
mov
clc
in
mov
in
aaa
int
rcll
push
cmc
imul
ret
bound
push
xor
push
negb
ljmp
data16
and
mov
cmpsl
xchg
aas
in
jge
adc
lret
pop
sbb
push
sbb
xchg
hlt
jno
jmp
sbbb
cmpsb
fisubl
sarl
mov
jg
jo
cmpsl
lahf
in
je
insb
dec
xor
imul
xor
fsqrt
cmp
enter
ret
mov
imul
add
cmp
dec
sbb
imul
test
cmp
into
xor
xchg
mov
mov
xchg
xchg
dec
ret
mov
xlat
mov
push
repz
mov
xchg
mov
lret
xor
faddl
or
fnsave
dec
xchg
jb
sub
mov
sub
and
add
cmpl
sbb
push
loope
or
mov
notb
cmp
sub
mov
mov
ljmp
lds
lahf
es
in
inc
add
out
dec
adc
and
xchg
int3
pop
sbb
fmuls
out
xor
inc
xlat
xlat
out
jb
lods
mov
jmp
repnz
mov
and
pop
cmp
test
dec
flds
xor
push
test
divb
lods
clc
jbe
mov
inc
imul
jecxz
dec
dec
outsb
or
out
nop
sarb
call
mov
out
es
pop
pop
shrb
push
ret
ret
mov
xchg
mov
pop
xor
mov
push
xchg
jb
adc
cltd
ds
adc
arpl
push
push
fwait
jnp
insb
imul
jl
js
push
add
mov
loope
or
pop
jnp
test
jge
iret
adc
pop
sbb
jns
std
lods
out
push
xor
add
sub
cmp
sub
mov
mov
push
rorb
jl
mov
stos
xchg
call
cwtl
pop
jbe
clc
jae
cmp
dec
dec
dec
push
cmp
inc
pop
outsb
ret
lock
vaddsubps
dec
jb
mov
lret
mov
cmpsb
mov
mov
dec
push
mov
lcall
mov
add
test
movl
icebp
cmc
pushf
inc
inc
cli
ljmp
hlt
sub
jg
dec
or
andl
mov
pop
sub
mov
nopl
inc
orl
xchg
movsb
daa
add
sub
jmp
dec
dec
cmp
pop
and
and
fdivrl
push
adcb
pop
and
inc
or
cli
mov
std
jbe
mov
mov
and
dec
and
shlb
nop
sub
dec
inc
mov
or
sahf
inc
pop
bound
xchg
mov
xor
mov
nop
in
inc
in
lahf
pop
mov
gs
and
cmpsl
hlt
push
ror
lret
sbb
cmp
push
or
out
mov
or
mov
mov
dec
gs
es
arpl
daa
xchg
mov
inc
push
inc
push
push
fsubl
test
mov
imul
fdiv
jae
fmul
call
aam
sbb
es
aas
adc
mov
es
add
shrl
mov
cmpsl
pushf
sub
push
dec
lods
inc
test
pop
lods
sub
icebp
and
in
cltd
pop
enter
cmpsl
dec
ja
cld
push
sub
popa
test
mov
push
dec
dec
movsb
and
insb
pop
insb
and
jns
bnd
jbe
rorl
add
sub
mov
fcmovne
into
cmp
shr
and
inc
jmp
jns
out
push
mov
shlb
shl
inc
jbe
ljmp
dec
cwtl
shrl
mov
or
or
mov
leave
jbe
ret
movsl
movsl
js
lret
dec
aam
jmp
or
sahf
jecxz
xchg
inc
xor
idivb
iret
clc
add
nop
push
pop
xor
push
insl
bound
cmpsl
cmovae
cmp
jns
mov
lret
jecxz
ss
sbb
outsl
icebp
jp
push
push
gs
jb
push
nop
sub
mov
lahf
jecxz
ss
mov
cmp
cmp
out
fwait
xchg
mov
dec
fistpll
stos
out
fistpl
test
ljmp
out
mov
inc
mov
adc
add
fldenv
and
lods
inc
xlat
test
outsb
rolb
jl
les
sti
inc
aam
cmpsl
dec
in
add
pop
add
adc
and
pop
cmp
and
pop
sub
popa
cmp
nop
scas
add
inc
xchg
xchg
inc
sbb
divb
int
jno
xchg
cmp
sub
push
fstpl
fadds
pop
cmp
pusha
insb
xor
cmp
lret
rcl
rcrb
shl
dec
lcall
mov
stc
sub
pop
mov
and
xchg
filds
push
repnz
xchg
movsb
fstpt
xchg
test
ret
lock
int3
adc
cmp
jno
xchg
ljmp
fistl
and
jg
jge
adc
bound
sub
stc
punpcklbw
jmp
xchg
scas
cmp
sbb
adc
pusha
ljmp
jg
sbb
cmpsl
adc
aad
xchg
lock
fsubrs
dec
cmpb
jmp
lods
stos
sub
lret
xchg
lcall
inc
loop
repnz
mov
mov
popf
and
bound
adc
sbb
pop
dec
and
scas
call
aaa
and
divb
sahf
lret
sub
pusha
mov
rorl
adc
std
cmpsl
jae
cli
push
sbbl
popa
mov
cmp
dec
imul
lods
roll
je
hlt
cmp
fsubl
jae
lea
outsl
inc
sti
out
sarb
add
vmovntps
test
mov
ja
out
cmpsl
stos
je
loope
mov
hlt
mov
sub
into
rcll
js
add
in
cmpsl
int3
es
int
jae
push
in
push
push
sub
dec
inc
loop
sbb
ds
inc
scas
xor
xor
adc
mov
pop
jge
out
mov
jg
push
mov
and
xchg
lret
js
repnz
stc
dec
cmp
adc
pop
xchg
dec
mov
push
cwtl
lods
dec
dec
orps
mov
pcmpeqw
idivl
pop
iret
ljmp
test
xorl
ret
jo
lock
xorl
add
mov
ret
sub
dec
jne
inc
cld
sub
xor
push
jae
gs
js
enter
jg
sbb
lahf
divb
add
cmpsb
orl
pop
jo
das
mov
leave
xchg
sahf
shrl
jg
nop
outsb
or
int
xchg
push
leave
lret
cmc
ds
jae
idivb
shr
cmpsb
mov
imul
popa
pop
in
push
sub
test
jle
negb
ret
and
ss
les
test
mov
push
pusha
stos
mov
dec
jb
testl
int
out
sub
inc
mov
pop
add
pop
add
push
outsl
jge
into
outsl
push
push
or
xor
sub
adc
and
lock
adc
push
sub
fidivl
xor
or
dec
fdivs
xlat
les
push
enter
lret
jg
mov
imul
les
jo
pushf
data16
sub
fs
faddl
rorl
mov
inc
popa
pop
xor
push
in
decl
clc
stos
test
push
lret
sub
addr16
sbbl
xor
jno
pusha
pop
sahf
or
lret
loop
and
fisubs
jbe
jae
push
inc
in
and
mov
lods
mov
loopne
bound
std
insl
dec
or
iret
rcr
xchg
pop
rcrl
push
movsl
pop
lahf
push
sbb
lahf
push
cs
cmp
sbb
mov
daa
push
mov
stos
adcb
out
pop
aas
dec
jae
std
push
jae
cmc
or
dec
mov
mov
pop
jmp
jae
mov
pop
sub
cmp
jb
mov
rcrb
outsb
cmp
inc
test
sub
sbbl
testl
out
or
leave
outsb
or
adcl
leave
pushf
or
add
insb
out
adc
ss
sahf
inc
adcl
idivl
data16
fbld
stc
push
sbb
push
rcll
jp
cmc
clc
fdivp
xchg
add
ret
mov
ja
stos
push
push
fdivl
fsubrs
out
lds
in
arpl
gs
outsb
xchg
xchg
xor
imul
int3
jne
in
out
inc
decl
fimuls
movsl
sub
cmp
int
ret
negb
insl
cmpb
clc
mov
xchg
jge
push
addr16
add
push
adc
sbb
je
inc
in
and
arpl
neg
dec
push
inc
aas
mov
leave
sar
repz
or
into
inc
mov
adc
xor
outsl
dec
out
insl
jnp
mov
mov
sarb
fiadds
sti
sahf
xor
rorb
ljmp
push
xchg
mov
sbb
mulb
jmp
lods
jle
popf
out
es
repnz
fidivrs
arpl
jecxz
mov
pop
push
pop
mov
fwait
push
and
cld
sbb
pushf
sbb
jne
out
sti
lret
dec
aas
test
mov
jmp
sub
insb
std
mov
xor
xor
addr16
pop
imul
repz
cmp
jno
pop
jmp
xchg
scas
popa
cmp
or
fbld
pop
ret
movsl
jae
or
lahf
push
mov
test
dec
mov
pop
int3
push
jbe
mov
imul
sbb
lcall
sbb
or
popa
int
out
aas
jb
fsubr
int3
pop
clc
pop
inc
jbe
xor
das
sbb
sbb
mov
jb
ljmp
sbb
aad
in
pop
push
push
and
mov
and
dec
jb
or
pushl
add
cmpsl
jle
repnz
xlat
xlat
mov
in
jbe
mov
inc
neg
ljmp
sarb
out
popf
xchg
call
xor
add
scas
enter
xor
push
xchg
cld
fcomps
lock
scas
adc
cld
ss
fsubrs
mov
mov
cmp
mov
push
mov
sahf
adc
dec
mov
inc
mov
cltd
mov
push
mov
ljmp
mov
jo
sub
outsl
pop
leave
testb
jl
fidivrl
mov
pop
adc
rorl
adc
sbb
sbb
lret
insb
stos
stos
mov
mov
popa
outsb
push
fs
aad
orl
add
pop
push
orl
jae
mov
xor
pop
leave
lcall
sub
pop
repz
push
xchg
loopne
clc
pop
or
mov
cmc
sbb
rcrl
insl
or
imul
movsb
fwait
mov
out
mov
cmp
or
xchg
repnz
outsb
clc
add
xchg
lret
divb
pusha
pop
lret
pop
sti
or
ljmp
fwait
shlb
push
inc
sbbb
rcrl
jnp
xchg
jecxz
daa
shrl
xchg
mov
in
jp
inc
aam
sub
adc
enter
xchg
dec
inc
sti
pop
nop
ret
lgs
ljmp
loopne
cltd
mov
in
cs
fstl
popa
or
imul
pop
push
imull
lea
xor
roll
in
inc
or
xor
fsubrl
mov
iret
sub
xor
push
mov
jl
dec
clc
outsl
inc
mov
clc
sub
adc
jb
mov
inc
sub
cwtl
repnz
xchg
rolb
cltd
push
add
or
mov
shl
jle
ret
lret
mov
dec
lcall
or
outsb
mov
jmp
das
stos
fbld
mov
test
add
pop
xchg
or
pop
lods
mov
cmpsl
push
mov
sbb
inc
fbstp
loope
roll
sub
and
sahf
lcall
lret
mov
shll
stc
lret
adc
sbb
mov
jno
bound
jmp
mov
fdiv
pop
mov
adc
xchg
jge,pn
adc
inc
jle
in
xchg
out
sub
lea
lret
and
test
fmull
decl
jge
mov
xor
jecxz
fcoms
aaa
sbb
js
bound
jbe
xor
pop
inc
adcl
and
lret
lods
jge
sub
xor
sbbb
jns
inc
adc
imul
push
jle
addr16
mov
les
repnz
mov
push
adc
push
sbb
xchg
lods
test
add
or
in
ss
gs
jbe
ljmp
lcall
fstps
push
push
dec
or
loop
pop
adcb
clc
pop
push
lods
arpl
int
mov
inc
aad
add
inc
mov
aad
lahf
mov
out
in
push
jp
loopne
iret
lcall
stc
lret
mov
inc
mov
mov
push
and
fs
inc
clc
iret
mov
cmpsb
adc
xor
push
xchg
or
enter
movsl
push
shl
lahf
push
xchg
xchg
mov
add
xchg
mov
mov
jmp
mov
gs
pop
cmc
or
or
mov
and
or
lds
test
dec
sub
testb
outsl
dec
pushf
negb
sar
push
rolb
test
pusha
and
fsubl
jnp
pop
mov
ds
sti
mov
aad
ficoml
fcomps
dec
aaa
pop
sub
in
xlat
mov
jbe
fistpll
ljmp
lcall
arpl
loop
ret
imul
outsb
or
int
jns
enter
popa
jne
aad
in
mov
inc
mov
pop
cmp
lds
sti
stos
dec
and
sub
push
lret
das
pop
daa
dec
pusha
repnz
xchg
pop
cli
nopl
push
mov
push
js
mov
jecxz
movsl
adcl
mov
out
cli
dec
xchg
test
inc
jb
ss
arpl
sub
std
cmp
inc
icebp
push
sub
test
mov
mov
les
lds
jae
or
dec
sub
lods
fsubrp
sbb
imul
inc
outsb
in
xchg
xor
fwait
arpl
int3
and
push
test
ja
sahf
sbb
stc
addr16
mov
xor
loopne
shrl
mov
mov
jne
dec
xor
mov
fisubs
inc
mov
movsb
mov
or
fcomip
sbb
jnp
add
mov
cld
cld
adc
inc
popf
push
dec
cs
cmc
xchg
mov
cld
mov
mov
push
lods
pop
movsl
jle
adc
xchg
clc
inc
lods
movsb
fsubl
dec
loope
cmc
push
sub
sub
in
sbb
sar
pop
push
and
xchg
mov
aad
pop
mov
pop
es
fdivrs
icebp
jmp
xchg
xchg
push
repnz
push
or
jge
xor
push
clc
mov
push
gs
test
shlb
stc
mov
add
adc
repz
mov
daa
les
inc
int
sbb
lret
and
jmp
sbb
iret
movsb
outsl
and
nop
dec
or
xor
mov
mov
in
in
xorl
inc
mov
enter
jno
inc
idivb
popa
inc
inc
lret
clc
sub
imul
mov
into
cmp
fwait
lods
mov
aaa
pop
pop
xchg
dec
es
mov
sahf
sbb
inc
mov
in
cmp
fcoms
ljmp
imul
pop
xor
sarl
xchg
pop
out
lret
ss
sbb
sbbl
cld
jg
dec
fs
jp
xchg
mov
stc
stos
jae
adc
jl
add
cmp
movsb
add
lret
ljmp
mov
inc
push
jl
push
aad
push
inc
ret
ret
notl
shrb
fdivr
fimuls
rcl
xchg
jo
jmp
lods
lret
pop
mov
aas
dec
jno
clc
pop
jp
sar
jne
in
push
push
or
das
xchg
xrelease
imul
ljmp
sub
out
movsl
aad
and
adc
movsl
lret
lea
fstpl
inc
push
and
out
mov
mov
mov
jo
sub
addb
sbb
das
inc
mov
xor
mov
push
mov
and
movsl
xchg
mov
cmp
loope
shlb
push
xor
mov
mov
test
dec
jno
xchg
jge
arpl
pop
pop
cltd
pop
inc
ret
push
in
clc
adc
scas
ja
nop
insl
mov
aam
ret
xor
clc
pop
inc
enter
hlt
xlat
push
pop
fs
in
and
fpatan
pop
imul
arpl
stos
repz
xlat
stc
in
or
mov
mov
mov
mov
jo
mov
subb
xor
mov
incb
sub
dec
mov
push
mov
in
or
mov
jnp
imul
pop
call
add
xchg
jecxz
cmpsl
push
push
lcall
pop
or
sbb
movsb
inc
test
mov
pop
xlat
mov
mov
sub
adc
push
test
cs
cwtl
bound
xor
pop
hlt
test
and
movsl
hlt
xor
sub
clc
xchg
pushf
xchg
and
lds
or
xchg
push
sbb
xchg
adc
xor
pop
cmp
sbb
ret
sbb
sub
insb
add
jge
or
push
ja
xor
bound
and
nop
jl
mov
insb
mov
mov
das
pushf
cmpsb
jl
adc
mov
aas
and
xor
and
ret
cli
inc
add
dec
xchg
es
pop
mov
fs
clc
or
dec
jb
adc
int3
jne
sub
inc
xchg
mov
inc
hlt
xchg
lret
and
or
cli
pop
jns
cs
in
pop
sbb
lods
adc
lcall
and
mov
data16
inc
cmp
adc
inc
cwtl
loop
fimull
ret
push
adc
xchg
xchg
lods
cmpsl
xor
jmp
mov
lods
mov
jae
pop
sub
ja
iret
jae
repz
outsb
cltd
dec
adc
cmc
dec
repz
fidivrs
inc
pusha
xor
shr
mov
adc
fisubs
add
outsb
push
push
stc
test
push
sbb
pop
mov
push
rolb
fcoms
int
pop
repz
popa
outsl
dec
bound
or
fdivrs
mov
push
inc
in
sahf
test
mov
lods
xchg
in
sub
loopne
imul
cmpsl
push
cmp
test
xchg
mov
mov
and
mov
and
xchg
scas
shll
ret
mov
mov
das
mov
loopne
cli
sub
std
or
jne
fcomi
aam
outsb
addb
pop
cmp
fstpt
xlat
inc
push
ror
and
psubsw
daa
dec
fwait
orb
cmp
es
adc
loop
fcoms
inc
pop
in
jo
pop
js
mov
xchg
repnz
mov
adc
mov
inc
inc
es
or
dec
or
mov
cmp
mov
push
js
mov
or
lret
add
push
je
out
sub
in
and
add
sbb
push
subb
rclb
imul
lret
jnp
getsec
leave
or
popf
push
shl
rcl
jbe
insl
cld
call
dec
arpl
neg
mov
rcr
les
hlt
inc
out
xchg
jb
xchg
insl
mov
or
sbb
leave
fidivl
xor
add
jmp
stos
push
aam
pop
in
push
int3
jle
fs
loopne
sbb
mov
out
mov
lea
call
iret
pop
lods
cmp
sbb
add
outsl
into
ret
outsb
incb
or
bound
decb
dec
mov
out
xchg
cli
loop
sub
inc
in
add
push
imul
in
xor
scas
xor
mov
dec
movsl
adc
xor
sbb
pop
enter
subb
ss
adc
imul
mov
pop
push
shll
in
mov
ja
stos
add
sti
inc
mov
clc
in
cmc
rcl
mov
pop
cmpl
jmp
hlt
mov
aam
imul
jno
xchg
ret
lret
sbb
sub
mov
or
repz
add
mov
sahf
arpl
ficoms
jbe
inc
popa
and
inc
stos
addr16
repz
imul
pusha
call
xchg
clc
roll
mov
mov
sbb
lea
jno
xchg
fwait
push
addl
fcoml
xchg
out
or
jg
xchg
mov
inc
cmp
xchg
repz
mov
daa
sarl
xor
popf
add
mov
sub
shl
iret
enter
loopne
je
repnz
repz
rclb
popa
pop
push
lcall
or
movsb
inc
data16
push
add
jl
xor
push
add
jg
mov
mov
call
out
pop
mov
lret
sahf
jno
imul
adc
push
or
cmp
inc
push
xchg
jno
xchg
jle
mov
adc
and
mov
mov
fimull
pop
sub
mov
shlb
add
jns
xchg
cli
dec
test
jg
fwait
inc
lods
mov
jle,pn
pop
adc
mov
jle
sbb
scas
into
cmp
lock
mov
psrld
fcmovnu
std
les
or
aaa
ficompl
jecxz
xchg
pop
dec
popf
xor
aam
pop
ret
mov
xchg
das
cmc
jmp
movsl
cmp
scas
push
xchg
leave
subl
cmp
cmp
data16
lret
push
dec
or
ficompl
fwait
cmc
ret
rorl
outsb
xor
lret
mov
jno
sti
movsl
inc
cs
cld
mov
andb
mov
cmc
lds
subb
shrl
adc
test
rcrb
xchg
aas
mov
or
cmp
clc
ficomps
or
sbb
xchg
fldenv
in
dec
lods
dec
mov
mov
shll
jae
mov
aaa
and
add
test
pop
dec
push
out
xchg
and
inc
jmp
push
mov
in
repnz
aaa
fdivr
push
inc
or
data16
push
or
outsb
xor
std
enter
cmpsl
xchg
push
pop
inc
push
lcall
testb
test
mov
add
in
xchg
mov
cltd
int3
icebp
mov
aaa
in
fs
push
cs
or
xchg
jne
xlat
mov
sbbl
sub
testb
mov
dec
cmp
adc
jo
call
mov
adc
jne
movsl
mov
xchg
inc
cmpl
jle
ret
jmp
add
pop
push
push
and
add
lock
inc
xor
push
cmp
xor
mov
and
mov
cwtl
lcall
add
ja
sub
leave
mov
repnz
in
xchg
pop
or
popa
jl
sub
cmpsl
mov
or
mov
adc
xchg
adc
sarl
adc
and
fs
push
out
ficoms
cmp
cmpsb
inc
xlat
cmp
fsub
loope
inc
insb
xor
inc
xchg
sbb
xor
loope
sbb
jp
mov
jnp
adc
mov
pop
pusha
sbb
or
stos
lcall
data16
cmp
and
rcr
jb
imul
test
adc
popf
scas
pusha
test
in
sahf
xchg
hlt
ja
idivl
cwtl
repz
ljmp
jb
in
and
mov
and
sub
mov
adc
mov
jns
adc
ljmp
int3
pop
sub
mov
xchg
fwait
inc
dec
xchg
fdivrl
bound
inc
mov
mov
loopne
jb
icebp
adc
mov
xchg
repz
inc
xchg
std
imul
cmp
jno
pop
pop
jbe
mov
cltd
mov
subl
push
mov
es
jnp
cmp
mov
stos
rcrb
mov
xor
jg
iret
loop
shll
add
fstl
xchg
lea
dec
shrb
out
push
or
adc
push
adc
mov
scas
repz
aaa
jo
neg
in
loope
loop
dec
lock
enter
addr16
mov
pop
xor
jle
popa
in
aaa
lods
sbb
testl
or
jg
aaa
out
rcll
pop
xor
push
or
pop
jbe
and
out
mov
jae
test
lcall
cmp
test
into
sub
xchg
subb
mov
loope
outsb
and
imul
leave
and
or
fnsave
xchg
mov
sbb
mov
das
outsl
xor
lea
xor
call
xlat
sub
imul
jmp
push
out
fcmove
and
sub
in
stos
test
mov
and
or
jo
das
xchg
stos
mov
iret
insl
cmp
test
imul
sub
aaa
inc
insb
or
je
xlat
aaa
jbe
cli
add
dec
movsb
mov
stos
popa
stos
cmpsb
mov
mov
call
lea
ja
rcr
stc
outsl
mov
loope
nop
or
pop
fcomps
cltd
aaa
dec
in
pop
or
loope
scas
mov
cmpsb
mov
addr16
ss
fbld
mov
lods
sti
lret
cmpsb
cmpsb
sarl
mov
dec
dec
mov
outsl
pop
nop
shrb
fldl
int3
xor
and
pop
aaa
jae
leave
or
sbb
jp
aad
adc
test
jp
cli
call
into
push
addr16
jl
loop
adc
lods
test
into
enter
loopne
repnz
pop
bound
fidivrs
mulb
sti
or
daa
push
pop
fcmovne
mov
es
stos
jo
push
jo
fcmovb
pop
mov
inc
pop
insl
rcr
mov
mov
popa
ficomps
and
cwtl
pop
ds
fs
or
pop
adc
sbbb
in
jmp
outsb
insl
and
mov
aam
or
idivl
add
lret
fcompl
xchg
insb
dec
stos
xor
push
jno
faddl
bound
and
and
es
loop
xchg
movsl
int3
aam
mov
sub
xchg
pushf
or
mov
sub
sbb
cmp
dec
repz
dec
xchg
adc
das
cmc
shl
mov
rclb
and
outsb
in
out
dec
add
push
mov
subb
cld
lret
xor
out
sbb
sahf
cwtl
and
repz
push
push
out
divl
xor
xorb
and
add
push
inc
and
jo
lock
outsl
xchg
cmpsb
pop
test
clc
iret
in
and
cmp
xorl
and
sbbl
add
xchg
dec
push
pushl
adc
daa
add
ret
iret
inc
lea
repnz
scas
xor
pop
rcll
xor
push
bound
outsb
sbb
lret
bound
pop
in
aam
adcl
cmp
cmpsl
push
mov
push
pop
outsl
mov
jbe
lods
mov
sahf
push
insb
or
fisubrl
scas
cli
jne
and
xlat
stc
xchg
pushf
inc
scas
adc
dec
pop
mov
inc
mov
xor
mov
mov
sub
inc
nop
lret
or
sub
mov
dec
and
lds
outsl
lea
ret
ret
movsl
outsb
leave
sbb
lahf
add
mov
jno
jle
or
lahf
or
stc
dec
or
inc
push
int3
jno
jae
movlhps
or
clc
popf
bound
and
jb
add
xchg
dec
cmc
xchg
insl
fldl
pop
fsts
stc
pop
loope
and
xor
call
mov
pop
clts
scas
imul
testl
mov
rolb
ret
xchg
xchg
jo
push
rorb
mov
mov
ret
jmp
sbb
scas
sbb
jg
cwtl
and
jp
jns
pop
jecxz
sub
push
out
insb
jp
xlat
nop
push
cmp
insl
pop
and
push
lcall
dec
insb
push
scas
mov
out
cwtl
cmp
add
mov
in
jge
and
xchg
and
sub
mov
lahf
jmp
negb
js
pop
pop
leave
pop
sbb
lock
adc
push
loopne
out
ljmp
loop
and
jno
cs
movsb
mov
jecxz
xchg
scas
pop
push
inc
sub
popf
sbb
jne
pop
add
add
xchg
into
xchg
hlt
inc
test
insl
arpl
je
les
lret
xchg
negb
jmp
xor
insb
dec
cmpsl
xor
inc
mov
lret
in
cmp
push
clc
push
movsl
or
stos
and
sahf
test
imul
or
xchg
outsl
cmp
mov
pop
call
cmc
mov
and
rclb
cwtl
and
cli
mov
daa
and
or
addr16
imul
cwtl
inc
inc
in
push
enter
mov
and
push
mov
xchg
xchg
bound
insb
inc
jbe
and
mov
negl
cmc
dec
adc
jns
jmp
pop
inc
aaa
aas
jo
add
sub
and
dec
out
lock
xor
rcrb
mov
ljmp
sbb
out
or
cmp
pop
fmuls
adc
and
adc
aas
test
dec
push
repz
adc
and
mov
adc
lock
in
dec
or
dec
ljmp
adc
fucomp
lods
shrl
lretw
jge
iret
movsb
push
in
hlt
mov
lea
loope
sub
rol
cwtl
hlt
sub
ret
fildll
int
shrl
fisttpll
jl
icebp
pop
pop
movsl
and
adc
mov
movsb
add
repz
and
and
lcall
stos
mov
jbe
sub
push
fwait
sbbb
lea
jl
test
or
insl
nop
sbb
sub
adc
and
xchg
or
xchg
leave
mov
sbb
pop
mov
sti
mov
shlb
ja
mov
add
call
adc
inc
ret
sub
arpl
adc
mov
mov
mov
xchg
xor
in
test
test
mov
stos
lcall
call
nop
mov
sarl
pop
test
test
scas
jbe
add
out
pop
cmp
or
pop
sbb
mov
mov
and
pop
or
fisttpll
scas
sbb
dec
mov
imull
mov
lret
jae
sub
mov
jbe
scas
out
or
mov
fisttpll
out
data16
and
inc
add
pop
lahf
cmc
pushf
mov
mov
dec
or
mov
std
sbb
addr16
fimull
mov
mov
sbb
and
jns
mov
push
test
and
mov
popf
add
mov
jmp
aam
jno
or
ljmp
jecxz
testb
dec
and
int3
pop
ja
pop
jno
fisubl
leave
mov
pop
pop
xchg
es
mov
addl
mov
int3
add
flds
cli
cmp
data16
or
sub
inc
mov
xchg
les
adc
fs
cmc
xchg
mov
inc
inc
or
movsl
or
imul
aas
data16
pop
movsb
sahf
jmp
push
jb
xchg
or
pop
cmc
and
push
xor
xchg
inc
daa
daa
or
ret
scas
pushf
sub
loopne
push
test
pop
dec
and
sbb
orb
push
clc
mov
mov
imul
repnz
insb
mov
inc
leave
out
cmp
stos
jge
movsb
fsts
or
mov
xor
mov
lcall
ret
inc
add
mov
inc
aaa
das
dec
popf
xchg
je
adc
test
imul
into
mov
mov
mov
jnp
or
and
lock
adc
jl
and
ficompl
stc
loope
int3
cmpb
fs
sysret
in
repnz
xor
mov
lret
add
xchg
outsl
sti
aaa
pop
subb
adc
ss
into
sub
xchg
push
push
arpl
loop
popa
fcoml
jg
push
fsubs
stc
jmp
xor
leave
xchg
sahf
mov
jge
popa
cld
into
shll
dec
pushf
outsl
push
jnp
ds
fistpll
add
scas
ds
inc
lods
mov
lret
leave
add
ret
jecxz
lcall
cs
in
sub
addr16
ficompl
or
call
push
jns
xchg
leave
jg
sahf
ljmp
addr16
lock
mov
movsl
add
mov
sbbl
loope
or
add
or
shlb
sub
jp
push
adc
lock
mov
insl
or
dec
xchg
inc
mov
data16
mov
loop
push
mov
jl
mov
xchg
fisubrl
pusha
xchg
push
inc
pop
fcompl
or
sbb
mull
mov
jge
enter
add
movsl
int
cmp
lret
addr16
mov
or
mov
and
lcall
lahf
movsb
pop
fcomps
pop
ret
add
fsubrl
xchg
repz
fwait
je
push
std
dec
lods
std
and
arpl
inc
insb
icebp
ja
fstp
sub
in
dec
mov
cld
aam
and
std
inc
loopne
es
movb
scas
out
dec
and
cmp
nop
aad
push
dec
jmp
xchg
in
rorb
stos
xor
dec
dec
loopne
lock
mov
or
cs
sub
fsts
push
mov
call
sbb
xchg
fcmovu
aam
adc
add
and
repz
or
fwait
push
lods
push
scas
cmp
adc
sbb
sbb
stos
dec
jne
rcl
nop
aaa
add
dec
add
call
push
fisubs
pop
cmp
pop
push
mov
mov
cmpsl
in
cs
arpl
or
mov
and
idivb
scas
sub
test
loopw
movsl
mov
fisttpll
xor
pop
sbb
adc
jbe
jb
loopne
test
std
loope
iret
fwait
mull
pop
incb
and
mov
mov
mov
jae
add
lods
test
fistpl
ret
sub
xor
lea
cmpsl
in
mov
leave
inc
aaa
insl
stos
nop
fsubl
inc
mov
sbb
sbb
ja
arpl
xlat
xor
jge
sub
jl
pop
stos
or
clc
cmp
inc
pop
jmp
sar
adc
arpl
pushf
ljmp
cmp
js
cltd
mov
sbb
test
popa
xchg
mov
dec
jge
out
ds
das
jne
pusha
and
fdivrs
repnz
stc
in
repnz
bound
add
movsb
stos
xchg
movsb
mov
and
imul
nop
ja
xor
mov
and
xchg
sbb
add
mov
mov
bound
sahf
or
mov
dec
mov
sub
add
outsb
fdivs
jg
cmp
mov
and
dec
fnstsw
ds
jae
xchg
cmp
jnp
xchg
ja
push
push
pop
mov
dec
xchg
mov
add
hlt
sub
std
cmp
jno
sahf
scas
xor
sub
aam
es
lods
mov
lahf
fistpll
cmp
push
xchg
in
iret
mov
or
lds
pop
neg
cli
je
and
cmpsb
mov
mov
int
xor
clc
lock
test
test
sar
mov
mulb
mov
push
iret
ss
add
push
mov
repnz
call
in
aam
dec
pusha
outsl
aam
je
movsl
enter
push
cmpsb
inc
arpl
pushf
pop
ret
stos
cmp
inc
int3
daa
inc
imul
insl
daa
mov
mov
sub
inc
sbb
leave
dec
enter
push
adc
iret
push
loope
gs
into
add
cmp
int
push
mov
repz
adc
mov
xchg
lock
add
mov
sbb
lcall
shr
out
nop
mov
jmp
dec
or
int3
dec
fnstcw
or
jnp
f2xm1
mov
rcr
push
ficompl
gs
stos
xchg
xchg
push
cli
orl
cmp
pop
sbb
imul
cld
js
ficoml
mov
sub
in
mov
lods
xchg
imul
and
dec
add
jne
into
xor
ljmp
pop
test
xchg
push
jge
xchg
int3
mov
loopne
jns
push
sub
jg
int
and
sbb
xchg
adc
or
lds
fcoms
mov
sub
into
cli
lret
cwtl
and
je
test
mov
or
cmp
jb
sahf
dec
loopne
out
lret
sbb
lods
xor
xchg
mov
clc
in
rcrl
insb
out
cmp
add
hlt
adc
dec
inc
xlat
lods
mov
pop
xor
hlt
jns
dec
jecxz
dec
in
pop
xor
repnz
jnp
or
out
outsl
push
pop
int3
pop
insb
out
jl
mov
fildl
shlb
les
fchs
rorl
cmp
dec
sub
test
or
roll
ds
ss
cmp
sahf
dec
aad
aam
out
and
mov
mov
fmulp
jge
xor
jo
or
stos
lock
ds
inc
push
push
or
lock
jp
jne
pop
cmpsb
push
int
mov
cmp
in
std
out
stos
pop
in
jo
adc
xchg
sti
stc
fchs
movsl
dec
jge
pop
gs
repz
jb
out
ss
sbb
jg
jmp
jo
dec
pop
fstpl
les
sarb
cs
rorb
icebp
mov
cmp
mov
xor
mov
in
scas
fwait
and
push
mov
xchg
repz
into
push
pop
sbb
sub
adc
jns
adc
adc
pop
fdivrs
mov
jae
rcrl
movsl
and
sbb
mov
push
jo
sbb
lock
and
andl
out
cmc
mov
inc
loopne
mov
jno
push
aam
lahf
sahf
popa
fcoml
xchg
div
fwait
popf
sub
jle
out
jne
cmp
push
movsb
pop
jp
call
sbb
in
or
jg
mov
jne
mov
jp
hlt
xlat
jbe
mov
mov
lock
mov
hlt
add
xchg
iret
std
jb
aaa
xchg
push
sbb
pop
pusha
cmp
fldt
mov
dec
aas
repnz
add
dec
cmp
inc
xchg
fcomip
mov
negl
movsb
xchg
push
scas
adc
adcb
sub
cmpsb
push
idiv
lcall
nopl
mov
int
les
lock
sbb
pop
mov
fstp
test
jecxz
mov
mov
pop
mov
xchg
insl
pop
mov
push
cmp
pop
inc
imul
push
adc
in
xchg
adc
fdivrl
jns
test
cmpsb
aam
mov
push
sub
xlat
in
enter
mov
fwait
or
push
lock
jmp
push
cmp
sbb
cmc
inc
dec
jnp
add
xor
loop
bound
and
dec
or
daa
imul
fs
sbb
sub
jb
adc
mov
lea
xor
adc
fmull
stc
jne
into
aas
sbb
dec
mov
or
adc
test
subb
xlat
cmp
inc
inc
xchg
xor
movsl
sti
dec
call
popa
leave
dec
push
adc
sub
sub
adc
mov
int
imul
jmp
cmp
in
mov
nop
mov
test
jno
scas
lea
xchg
or
sub
mov
mov
push
push
movsb
mov
pop
iret
addb
jle
sub
pop
add
push
xchg
movsl
add
cwtl
shll
ficomps
pop
mov
sbb
push
cld
dec
ret
mov
jno
mov
mov
mov
cs
xchg
adc
cmpsb
adc
jb
es
mov
mov
imul
push
setb
arpl
jmp
scas
xchg
fs
adc
int3
add
pushf
sbb
inc
xchg
sysenter
cmp
outsl
fidivs
jae
das
push
dec
sbb
mov
push
mov
loope
in
js
mov
cmp
jb
mov
arpl
movsl
mov
sbb
adc
imull
push
xchg
cmp
mov
jae
xchg
mov
mov
push
pop
inc
fiadds
jb
dec
pop
popf
inc
ret
movsb
mov
nop
cmp
mov
adc
icebp
push
push
cwtl
das
ja
xchg
dec
dec
ret
jge
jmp
mov
cmpsb
mov
aaa
cmc
xor
hlt
mov
mov
cmp
into
movsl
sbb
push
test
jbe
adc
jg
xchg
imul
stc
sbb
adc
jecxz
or
or
lds
cli
mov
cmp
sbb
pop
pushf
pop
stc
mov
outsb
inc
scas
dec
in
xor
imul
into
mov
cmp
mov
push
push
xchg
leave
loopne
jmp
pop
lods
inc
divl
push
mov
ret
cmp
daa
int
xor
lods
sub
jmp
lret
or
inc
push
scas
rcll
cmp
cmp
push
stc
pushf
pop
testb
in
push
xchg
cmp
push
push
jbe,pn
xchg
add
jnp
loopne
lock
icebp
cmp
outsb
in
mov
sub
daa
stos
in
adc
and
outsb
popf
cmp
add
pop
fildl
push
pop
adc
jo
scas
cmp
ljmp
repz
daa
test
and
test
jns
jo
mov
repz
and
xchg
call
mov
sub
and
adc
mov
repz
mov
in
sbb
sbb
mov
and
rcrb
xlat
pusha
inc
pop
add
and
xchg
push
cwtl
inc
mov
fisubl
mov
mov
das
pushf
and
jl
mov
cmp
push
pusha
jmp
aaa
int
or
shrl
inc
pop
ss
call
sub
lea
pusha
and
nop
testl
fwait
shrb
dec
xchg
jl
lcall
scas
pop
push
push
xor
and
lods
mov
pop
push
aas
pop
mov
addr16
push
icebp
int3
loopne
mov
push
and
pop
into
scas
jmp
outsl
mov
int3
sub
pop
xchg
fs
in
insl
daa
leave
stos
cmp
loopne
mov
sahf
mov
imul
dec
push
scas
and
push
ret
popa
cmp
pop
adc
mov
push
out
out
ds
out
outsb
bound
mov
mov
fdivl
sub
dec
fdivrs
lret
cs
push
out
outsl
mov
xor
loopne
fldcw
repz
pop
inc
jle
pop
out
mov
xchg
dec
icebp
lret
dec
in
cmpsl
arpl
xchg
inc
sbb
bound
mov
movsb
jp
addb
bound
inc
xorb
or
andb
ja
scas
inc
bound
mov
pop
shll
pop
rclb
inc
shll
xor
test
cltd
in
mov
out
rclb
movsb
mov
data16
fwait
shl
push
push
fiaddl
jmp
push
adc
sahf
xor
cmpsb
lds
lea
mov
inc
pushf
adc
mov
cmpsl
sbbb
divl
sbb
cmc
mov
dec
into
cmc
addb
xchg
cmp
sbb
imull
jne
test
pop
mov
out
movsb
in
mov
mov
aad
dec
shrb
mov
sbb
xor
clc
push
ljmp
aad
ljmp
ret
sub
jo
xorl
mov
mov
jecxz
add
push
mov
daa
push
insl
lea
rcrl
cltd
mov
add
in
mov
add
iret
sub
sub
adc
inc
ret
inc
fistl
pop
mov
mov
xchg
push
shl
addr16
mov
jmp
loopne
cmpsb
jns
cmc
in
fsts
cmp
int3
lahf
cltd
lods
inc
adc
int3
ret
int
push
ds
ljmp
push
ret
mov
xor
pop
imulb
add
std
or
xchg
mov
fwait
lea
add
clc
jg
fdivrl
aaa
mov
mov
iret
jo
pop
sub
cmp
lcall
dec
xchg
sub
sarl
push
daa
pop
sbb
cltd
or
jge
imul
gs
mov
push
xor
mov
std
push
jecxz
loopne
sti
jnp
cmc
idivl
cmp
sub
sbb
fwait
stc
mov
in
adc
adc
outsl
sub
int3
inc
or
xchg
lahf
call
lods
vpsrlw
ljmp
jge
and
lret
dec
jb
ljmp
and
aam
dec
xchg
test
sub
and
or
mov
mov
xchg
test
ja
xor
lock
push
cmp
mov
cld
repnz
jl
out
in
xor
rol
iret
arpl
inc
adc
es
push
pop
xor
addb
fistpll
rclb
scas
lret
push
leave
mov
std
fwait
in
stc
sub
xchg
dec
sbb
dec
and
scas
fcompl
mov
clc
int3
jg
stos
mov
xor
cwtl
or
pop
enter
jo
into
ss
dec
mov
xchg
pop
xchg
popl
jne
test
repnz
push
lcall
pop
mov
add
iret
mov
dec
das
add
shll
repnz
test
pusha
outsb
stc
xchg
sbb
das
popf
pop
xor
pop
leave
push
cmpsl
xor
sub
cltd
addr16
hlt
icebp
lret
lahf
jl
fcoms
cmp
inc
out
iret
pop
ret
mov
add
inc
jmp
nop
xchg
sbb
dec
lea
dec
ljmp
or
mov
sub
cmp
inc
mov
pop
adc
loopne
movsl
pop
sbb
dec
fmul
adcl
push
in
push
pop
cmp
jp
loopne
mov
mov
std
cmc
jns
movsl
aad
movsb
into
jnp
iret
jg
xor
test
fadds
inc
jnp
std
dec
addr16
loope
push
jo
aad
fwait
xchg
adcb
orl
bound
out
or
pop
data16
les
mov
addl
xchg
xchg
mov
int3
fldl2e
sahf
aam
dec
outsl
loope
push
idivb
mov
loopne
xchg
mov
js
push
daa
jge
cmp
mov
add
mov
popa
or
inc
icebp
mov
and
rcrl
cmp
sarl
xchg
daa
jns
cld
in
mov
ljmp
jne
jae
in
aas
pusha
add
out
ficomps
js
mov
in
dec
aad
mov
and
adcl
or
dec
insb
or
sbb
inc
mov
out
std
ret
aad
sbb
insb
je
pusha
dec
push
and
jns
dec
push
dec
jne
sbb
enter
cmp
stc
xchg
sbb
mov
inc
ss
mov
aaa
pop
jle
loope
add
sbb
loop
movsl
and
push
mov
mov
inc
jb
xchg
call
cmp
mov
sub
push
lret
loop
push
mov
adc
mov
out
mov
fs
icebp
add
push
aad
lods
out
push
or
xor
dec
shr
or
jecxz
lods
pop
sbbb
movsl
push
ret
lret
pusha
cmp
and
cwtl
jo
add
pushf
xor
sub
add
arpl
jbe
aaa
fwait
shl
lahf
lahf
jl
jp
dec
insb
loopne
addr16
dec
xchg
mov
and
mov
mov
mov
or
inc
repz
pop
sbb
and
xchg
ss
jecxz
repz
and
icebp
dec
mov
outsl
pop
sti
adc
sub
mov
dec
pusha
cmc
iret
hlt
mov
repnz
dec
mov
jp
test
outsl
dec
mov
sbb
faddl
mov
jmp
stos
das
add
sti
push
out
cmc
mov
or
cmp
adc
mov
sti
int3
icebp
sub
aam
xchg
in
pop
icebp
mov
movsb
lret
aam
pop
sub
jo
nop
cmc
mov
aam
mov
test
out
data16
insb
cmp
mov
rorb
xchg
pop
in
imul
dec
bound
sub
cmp
and
hlt
in
popf
jbe
pop
push
enter
icebp
pop
out
adc
movsb
jg
stc
scas
jmp
out
shrb
je
cmp
inc
adc
jb
mov
or
mulb
sbb
cmp
add
lret
cmpsl
sbb
jp
or
movsb
sbbb
orl
lods
bound
dec
rcr
and
sbb
test
jmp
jmp
int3
mov
cmp
mov
xor
lods
mov
mov
pop
xor
mov
jns
adc
cli
mull
fsubr
or
int3
mov
iret
adc
mov
mov
lcall
mov
lret
sub
cmp
jb
add
je
aad
ret
sub
mov
pop
adc
fisttps
mov
dec
es
cltd
cmp
jl
fwait
inc
insl
mov
lahf
sub
repz
sub
lret
sbb
cmpsb
outsb
lods
and
int
aam
loopne
lret
and
test
xor
neg
push
repz
cs
int3
inc
loopne
sbb
shlb
movsl
mov
push
leave
out
les
cmp
mulb
imul
mov
sti
inc
adc
pop
push
cmpl
xchg
mov
sub
loopne
push
and
shlb
cmp
pop
jg
fwait
push
lret
in
mov
ret
xor
push
fwait
out
les
mov
jg
out
fs
sbb
xchg
jge
inc
or
fldt
ss
adc
inc
lods
jge
dec
mov
mov
jne
or
iret
mov
sti
and
cmpl
or
sub
movsb
mull
jne
xchg
adc
call
and
into
ljmp
rcrl
negb
stc
sub
xchg
das
add
in
loop
jp
inc
test
repnz
sub
pop
movsl
out
or
lret
jbe
pop
mov
insb
dec
gs
pop
cmp
stc
ja
movsb
cmp
pop
stos
dec
jg
jnp
arpl
inc
push
inc
inc
xchg
out
movsb
xor
in
push
fwait
js
jecxz
add
adc
sub
aaa
push
cmp
in
mov
pop
lahf
movsl
cld
sbb
pop
rorl
pop
push
pop
scas
std
popa
popa
lock
es
out
test
dec
movntq
xor
fnstsw
add
jo
enter
loopne
mov
bound
or
push
gs
das
add
sbb
inc
add
mov
add
sbb
cwtl
jge
and
fsubrl
ds
xchg
hlt
sbb
cmp
les
mov
or
xchg
sub
xor
testl
int3
lods
fwait
pop
sub
les
cmp
sbbl
xchg
jp
xchg
inc
mov
repz
daa
jo
into
daa
aad
inc
mov
stc
scas
pushf
xchg
mov
jecxz
jae
sub
idivl
ja
jno
inc
insl
sub
outsb
sti
xchg
dec
into
out
mov
popl
fucomi
enter
inc
xchg
fsubl
mov
das
xor
sub
pusha
addr16
mov
stos
rclb
xchg
fistps
mov
jno
es
mov
mov
add
dec
pop
xchg
lcall
fnstsw
mov
repnz
repnz
jo
pop
jge
shrl
add
and
jnp
in
dec
push
gs
leave
shlb
xor
mov
cwtl
and
rcr
lock
jl
ja
std
int
stc
xchg
jae
push
inc
fnstsw
mov
aad
je
pcmpeqd
imul
repz
add
inc
arpl
cmpb
and
js
push
lods
lods
xor
je
mov
mov
test
jmp
mov
dec
cmp
fcomp
sahf
mov
add
inc
jno
sbb
push
cmp
pop
ret
iret
mov
aam
ret
cmpsl
or
ljmp
dec
shll
push
and
xchg
xchg
shlb
inc
enter
pop
dec
xor
inc
push
xchg
xchg
jmp
mov
pop
out
xchg
adc
arpl
outsb
and
popa
mov
lds
std
pusha
dec
dec
and
rolb
les
cmpsl
jecxz
jmp
clc
lds
inc
sarb
test
aam
out
or
cmp
sahf
cmp
out
xor
xor
xchg
stc
pop
mov
push
jnp
add
into
fs
add
mov
dec
inc
fiaddl
enter
mov
jns
add
je
pop
int
mov
inc
pop
into
inc
bound
lahf
or
push
outsl
dec
cli
dec
divb
xor
sub
dec
cltd
mov
xlat
adc
mov
sub
das
dec
jge
enter
loope
lea
test
xlat
or
jae
sub
adc
pop
fdiv
fsubrl
jl
mov
fsubl
sahf
ss
dec
mov
aad
jmp
test
mov
push
fldcw
sub
xchg
cmovle
push
xchg
xchg
in
pushf
fisttps
test
xchg
mov
lds
push
lret
sbbl
fidivl
or
inc
aam
insb
pop
fyl2x
mov
aam
ret
cmp
pop
sub
cmpsl
pop
adc
push
clc
outsl
fisubl
and
ja
lds
lods
and
test
nop
cmp
test
inc
push
mov
iret
sbb
adc
mov
ret
xchg
enter
adc
jns
add
pop
out
stc
pop
mov
daa
xchg
test
jno
xor
sti
fcmovne
push
push
dec
xchg
pop
xchg
imul
dec
es
mov
sbb
push
or
and
insl
and
add
push
adc
test
push
inc
add
fsubl
mov
test
fmull
and
add
std
test
outsl
inc
jecxz
out
adc
fidivrs
sub
cmp
cmp
scas
mov
xor
lods
adc
and
out
insl
sbb
inc
loopne
pop
dec
wrmsr
fcoml
pusha
pop
and
call
push
push
out
lock
outsb
in
mov
fidivs
or
out
outsb
inc
xchg
adc
popf
add
mov
xchg
movsb
scas
ds
lods
test
xorl
cwtl
mov
add
scas
imulb
fsubrs
inc
lret
cwtl
pop
lods
js
sbb
in
ret
pop
push
pop
xchg
inc
or
js
repnz
pop
es
es
pop
into
mov
xor
shll
push
cli
andl
inc
aaa
sub
pop
xchg
outsb
sbb
push
enter
xchg
mov
mov
cmc
iret
mov
cmp
xchg
sub
cmp
das
sub
and
daa
xchg
and
repnz
and
outsb
leave
fcoms
pop
push
outsl
mov
cmp
push
xchg
push
adc
pushf
cld
and
mov
cmp
inc
out
call
fldl
jne
pop
jns
xchg
sbb
pop
push
ljmp
mov
cs
cs
sti
bound
in
push
mov
lret
fsubl
sahf
sub
mov
inc
mov
imul
shl
imul
cld
jns
lods
fists
add
out
xchg
fbstp
pop
adc
in
pop
sbb
push
sub
cmp
sbb
push
mov
mov
sbb
push
sbb
sti
push
pusha
in
or
or
or
adc
push
ror
scas
sarl
xchg
js
or
mov
push
sbb
fwait
sbb
pop
pop
fld
nop
cwtl
xchg
addr16
pop
dec
stc
jbe
sub
jmp
push
push
fidivl
mov
scas
mov
mov
js
cmc
xor
xchg
cs
test
or
loop
xlat
adc
and
xchg
jle
mov
inc
repnz
mov
xchg
stos
sub
iret
and
fwait
push
repz
sbb
dec
or
test
dec
cltd
adc
and
adc
adc
clc
mov
jo
lahf
out
idivb
cld
ret
fdivrl
mov
leave
adc
or
adc
outsl
or
cmp
lret
stos
adc
sahf
xor
sbb
xor
iret
dec
jmp
aam
inc
push
out
and
imul
push
rcrl
shrb
mov
mov
add
cwtl
out
lret
std
mov
in
or
int3
pop
pop
cmpsl
rorl
mov
rcll
subl
cmp
pop
push
sbb
mov
out
push
je
mov
ja
push
pop
lock
dec
aam
sbb
mov
leave
mov
mov
int
push
push
test
jge
int
out
ljmp
cmp
ljmp
adc
testl
cmc
push
jb
pop
inc
lock
sub
icebp
fisubrl
insl
add
sbb
std
pop
inc
scas
in
scas
in
jg
adc
sub
xor
movl
lods
inc
and
gs
jmp
xchg
cmpl
fisubl
adc
mov
out
adc
xchg
sub
subb
test
or
inc
mov
mov
mov
mov
flds
mov
dec
cld
push
stc
xor
push
popf
sbb
test
sub
jle
jecxz
mov
adc
inc
jb
dec
mov
pop
push
clc
adc
lods
jb
cmp
xlat
test
ret
sub
insl
fsubs
jecxz
xchg
mov
jecxz
push
jae,pt
jns
js
jmp
sub
pop
ds
cmp
cmp
push
xchg
inc
jno
dec
rcrl
pop
mov
mov
pushf
jb
mov
sub
pop
je
pop
adc
cmp
xchg
fwait
push
jl
fwait
or
call
dec
decl
push
shll
mov
and
cmp
and
js
sbb
in
mov
test
and
xor
jg
push
jo
icebp
mov
pop
andb
loope
jne
movsb
cmp
xor
mov
mov
mov
cltd
lock
aad
shlb
iret
mov
add
xor
dec
inc
enter
adc
lods
fsub
pop
fs
add
ficoml
sbb
sbb
mov
ret
outsl
mov
mov
sahf
pop
int3
mov
pop
xchg
jge
push
xchg
sbb
inc
xchg
mov
scas
jns
mov
mov
lahf
into
xchg
repnz
dec
jmp
filds
cmp
pop
fcoms
inc
xlat
enter
xor
pop
das
std
inc
and
lods
inc
cmovg
adc
hlt
das
popf
lea
or
lock
ja
cmp
jp
in
sbb
xchg
and
cmc
cmpsl
rorb
dec
adc
jnp
or
pop
xchg
pop
mov
das
js
pusha
mov
pop
cmpsb
es
cltd
gs
sbb
sub
pop
add
int
loope
dec
lea
addr16
inc
das
mov
jae
sbb
outsl
pop
iret
dec
cmp
mov
xchg
sub
mov
add
mov
jmp
cmc
adc
scas
bound
pop
aam
and
imul
add
or
jne
les
fsts
mov
xlat
in
xor
add
testb
insl
lea
clc
xchg
push
pop
inc
pop
movb
call
fcomps
aad
xchg
and
into
pop
dec
icebp
pop
aam
aad
dec
inc
mov
cmpsl
insb
mov
mov
scas
cmpsb
mov
or
inc
insl
xchg
jge
or
dec
imul
rep
or
jecxz
aas
ljmp
shll
xor
push
into
jp
mov
mov
sbb
cmp
inc
sub
or
sbb
or
dec
push
ss
int3
stc
jns
xor
mov
aad
xchg
enter
jb
cmp
hlt
push
adc
rolb
pop
ja
mov
or
jle
mov
outsb
mov
test
push
jbe
call
dec
sahf
push
push
movsb
repnz
sub
adc
inc
lahf
das
sbb
and
xchg
test
cmp
jle
shll
xor
adc
mov
cmpsl
mov
mov
add
jmp
xchg
das
pop
or
mov
clc
add
jge
sub
and
fildl
imul
and
rcll
test
mov
repnz
jecxz
addr16
jbe
es
or
and
adc
lret
sub
cmp
cmpsl
dec
dec
das
dec
stc
jo
pop
xor
xor
cmc
add
into
fs
push
mov
das
aam
lods
mov
cld
cmp
jbe
mov
cmp
es
jno
int3
les
movsb
js
jno
imul
js
adcb
cmp
pop
inc
pushl
jnp
loop
cmpsl
stos
cli
jecxz
decb
dec
dec
cmp
sub
ljmp
mov
adc
lret
xchg
sub
and
xor
xor
sbb
in
aaa
adc
xchg
sti
fsubr
push
mov
sub
lahf
aad
sub
dec
lcallw
push
or
fisubrs
fidivrl
jno
in
lret
sub
aaa
lods
cmp
cmpsl
pop
jae
or
out
xchg
add
xchg
rorl
js
push
dec
jle
ds
jne
xchg
fldl
test
aad
xchg
mov
dec
push
push
in
xlat
inc
xor
out
aas
cmp
shlb
test
and
cmp
rcr
testl
aas
adc
pop
mov
andl
loope
ja
jmp
xchg
inc
lea
imul
jmp
bound
nop
lahf
jmp
and
aad
inc
jo
xchg
inc
and
lea
loop
push
lret
xor
orl
dec
test
xchg
sbb
jno
mov
push
mov
mov
and
dec
mov
pop
pop
in
in
packssdw
ror
cmp
xchg
mov
pop
mov
arpl
mul
clc
mov
pop
mov
mov
clc
ljmp
leave
dec
repz
js
xor
xlat
cld
in
ret
pop
inc
dec
leave
push
add
jo
das
cmp
or
test
and
xchg
fimull
idiv
add
add
mov
adc
fisubrs
stos
fsubrs
clc
dec
xlat
leave
mov
lret
loope
pusha
fdivrs
cmp
and
arpl
jne
xchg
pop
clc
or
mov
addb
fs
push
pop
xchg
imul
mov
into
aad
dec
push
inc
lds
cmp
lcall
pusha
daa
idivb
jo
xchg
js
sbb
cmpsb
in
out
add
sbb
sub
mov
popf
push
push
loope
imul
mov
mov
inc
inc
cmpsb
mov
fsub
pop
in
pop
mov
lcall
or
das
mov
rcll
rolb
push
mov
fidivrs
inc
movsl
enter
dec
movsb
xor
xor
mov
mov
insl
dec
ret
movsb
shrb
cmp
scas
push
xchg
jp
movsb
sbb
and
xchg
sbb
clc
push
push
addl
add
mov
and
ss
int3
inc
or
push
dec
ljmp
mov
aad
mov
frstor
xchg
mov
push
add
les
aaa
xor
fidivl
mov
cld
mov
dec
lcall
push
sarl
or
out
inc
and
sub
mov
xchg
repz
cmpsl
mov
jmp
std
xchg
aaa
clts
ret
and
sub
or
int
adc
add
pop
cmpsb
in
stos
or
dec
push
sbb
popf
lds
xchg
dec
negb
cmpsl
sub
lret
lahf
mov
push
inc
jne
mov
shrb
mov
hlt
cli
jbe
stos
clc
and
mov
ds
stc
mov
push
inc
inc
out
adc
aas
sbb
and
test
pop
cli
mov
jmp
outsb
fwait
mov
dec
ja
mov
into
xor
cmp
xchg
flds
stc
das
lds
xchg
or
adc
xchg
mov
sbb
add
push
hlt
and
sbb
sbb
ret
inc
aad
arpl
pop
dec
jecxz
addb
cmc
mov
ss
pop
mov
mov
sbb
mov
fistpl
pop
cwtl
dec
pop
mov
xor
clc
test
mov
pop
mov
pop
xchg
xlat
mov
inc
mov
je
mov
jbe
into
mov
fnstenv
sti
push
jle
gs
or
insb
js
xor
js
add
and
cli
lret
in
mov
shrl
mov
xor
xchg
dec
adc
xor
arpl
imul
frstor
repnz
push
adc
add
xchg
dec
xrelease
jmp
xchg
lret
cli
dec
or
mov
test
cmp
jge
std
or
aas
cmp
inc
mov
sahf
fdivrl
imul
movsl
and
js
pusha
push
and
cmpsl
mov
sub
insl
outsl
fisubs
mov
movsl
int3
ret
pop
dec
imull
mov
add
push
cs
sti
movsl
ret
icebp
push
dec
or
jecxz
into
ror
dec
daa
aad
lods
imul
inc
testb
sub
mov
mov
fistps
cltd
imull
pop
jg
mov
pop
jno
fs
pop
mov
aaa
ret
lods
lcall
and
inc
push
xchg
popa
iret
cmp
add
and
add
fistpll
lahf
sbb
sub
inc
test
movsl
xchg
stc
cwtl
scas
mov
lods
add
iret
inc
pop
xor
lcall
sbb
pusha
jmp
dec
rorb
in
les
in
shlb
jle
int
pop
fs
testl
lret
dec
pop
arpl
int3
stc
dec
mov
notb
sahf
lods
test
and
jg
hlt
and
not
je
cmp
imul
jno
dec
ret
add
add
es
orb
jl
lret
pop
bound
shr
xchg
jecxz
lock
xor
add
ja
and
jns
pop
mov
and
incl
loope
add
push
insb
cltd
and
or
das
mov
dec
filds
jg
pop
cmpsb
jns
add
imul
mov
in
jge
iret
and
xor
mov
mov
outsb
das
xchg
xor
cmpsb
lods
cli
jnp
out
cmpsl
pop
mov
outsl
inc
test
mov
cwtl
hlt
pushf
into
inc
cmpl
lock
or
ds
jo
cmc
inc
jmp
rorb
out
push
xor
ja
pop
pop
aam
aad
out
jecxz
push
pop
das
cld
nop
sbb
and
int3
cltd
lds
test
xchg
mov
fwait
das
adc
mov
or
sub
ret
lods
xor
jecxz
mov
mov
push
jmp
stos
push
pop
mov
iret
push
mov
pop
in
push
test
lods
mov
inc
mov
push
idivl
lret
or
or
push
jb
cwtl
or
mov
xchg
jge
cwtl
mov
push
pushf
fdivrs
lods
aaa
dec
js
stos
xchg
test
fs
pop
or
mov
push
and
cs
xchg
mov
xchg
and
clc
inc
mov
nop
ja
cmp
cmc
cli
jno
dec
aas
push
andb
cs
movsb
lock
xchg
out
stos
push
or
and
cmp
fs
arpl
out
lds
lock
pop
adc
ficomps
out
insl
jns
les
add
std
add
aam
cli
push
mov
add
push
sti
and
iret
mov
mov
stos
cld
push
pop
inc
icebp
cs
adc
push
pop
bnd
shrb
xchg
xchg
xchg
mov
jmp
icebp
jo
aaa
sub
mov
jno
push
dec
and
inc
popa
into
out
or
clc
sbbl
call
icebp
stos
lahf
inc
ret
lock
mov
jg
pop
mov
dec
std
sub
lds
andl
jmp
push
out
test
in
sbb
mov
fdivrs
dec
iret
mov
ret
inc
nop
sbb
ljmp
int
mov
mov
adc
sub
xlat
aas
lcall
fwait
cmp
addr16
jae
int3
jp
lods
test
xchg
adc
dec
add
sahf
push
ss
neg
xchg
mov
dec
in
push
scas
push
or
js
mov
jl
jmp
mov
dec
pop
mov
andb
pusha
cmpsl
nop
shlb
push
outsb
push
out
add
and
ret
cltd
subl
sbb
dec
stos
mov
adc
fnstsw
mov
or
jge
jo
push
inc
sbb
daa
mov
jae
push
daa
pop
inc
ret
mov
mov
mov
mov
add
cmp
xchg
fndisi(8087
lods
rcrl
jp
out
adc
pop
xchg
rclb
das
ljmp
popa
loop
and
mov
and
popf
jno
and
fwait
or
imul
or
int
loopne
lock
js
pop
jo
mov
cmp
mov
mov
test
cmpsl
insl
in
cmp
jge
imul
js
leave
pop
mov
push
mov
xor
dec
mov
scas
push
inc
push
cli
sub
imulb
daa
fcompl
lds
dec
push
add
cmp
mov
xchg
clc
inc
addl
mov
lock
lods
dec
fisubrs
add
jno
inc
and
push
mov
pop
or
add
jnp
adc
mov
mov
movsb
cld
loope
pusha
mov
xor
lret
pop
imul
lcall
fmull
fisubrl
es
jo
xchg
mov
or
cmp
or
arpl
int
jo
push
or
nop
je
inc
sahf
pop
leave
icebp
out
xor
inc
jl
mov
dec
mov
inc
mov
xor
cmp
fwait
mov
or
xchg
ret
movsb
xor
pop
pop
xchg
jecxz
pop
movsb
dec
jecxz
push
stos
rclb
bswap
mov
loopne
push
in
or
repnz
movsl
cmp
andl
xchg
jmp
push
out
aam
repnz
int
lock
xchg
cmp
pop
imull
jne
divb
sbb
or
adc
fisubs
push
dec
pop
cmp
rolb
sbb
mov
pop
mov
or
adc
jbe
pop
sbb
inc
inc
lahf
mov
cmp
aas
fnsave
pop
pusha
mov
lea
aam
rcr
add
pop
adc
adc
adc
dec
xchg
dec
test
stc
jo
popf
fstps
xor
sub
test
xchg
js
cmpsl
push
cmp
sbb
loopne
outsb
dec
add
imulb
imul
adc
xchg
fstpl
mov
push
pop
mov
xor
lea
test
nop
push
and
divb
xchg
lods
jmp
sbbl
pop
pop
mov
gs
aam
xor
cli
jl
in
sub
imul
cmp
dec
sub
push
or
xor
in
add
rcl
jl
add
ret
and
dec
aas
ljmp
lods
repnz
adc
add
loop
fstps
jge
cmpsb
lods
cmc
push
fs
ret
mov
jl
test
scas
pop
and
loop
cmpsl
call
in
pop
std
inc
dec
sbb
adc
loope
loop
adcl
mov
jbe
mov
pusha
out
adc
jns
or
and
cmpsl
aad
lea
pop
shl
or
and
ret
in
ret
and
lahf
mov
lret
cmp
sub
pushf
lahf
call
adc
lods
xor
test
dec
emms
orb
dec
dec
fsts
add
int
add
pop
fiaddl
adc
mov
fcmovb
dec
mov
add
pusha
adc
addr16
push
outsb
andl
xchg
sbb
in
jmp
outsl
dec
imul
es
jb
mov
xchg
add
arpl
orl
lods
pop
inc
aaa
aaa
ja
jmp
jl
xchg
sub
out
shlb
aad
shl
inc
repz
outsl
push
jge
inc
push
sub
rcrl
jbe
pop
xchg
push
insb
mov
cmc
inc
outsb
aad
sbb
mov
jo
or
sbbb
hlt
lret
imul
and
pushf
mov
mov
int3
repnz
push
pop
js
jbe
mov
movsb
stos
out
pop
cmp
pop
dec
aaa
push
cmp
test
into
or
sub
mov
fbld
gs
push
cwtl
loopne
push
cltd
pop
inc
push
aaa
pop
aas
adc
pop
push
jbe
ficompl
bound
loope
fldenv
mov
gs
movsl
sub
js
aas
lret
xchg
mov
cmc
and
addr16
cwtl
mov
addr16
inc
mov
cmp
sbb
out
addr16
adc
filds
sbb
sbb
add
iret
mov
push
call
ss
inc
ss
pop
cwtl
adc
ror
push
cmpsl
sahf
jmp
std
dec
test
or
out
repnz
int3
mov
add
scas
cmc
clc
and
outsb
je
mov
sub
inc
dec
pop
xchg
mov
lahf
mov
lock
gs
loopne
cmc
data16
mov
aad
mov
sbb
aaa
fucomi
push
aaa
stc
xchg
loop
xor
pop
adc
dec
movsl
pop
repz
mov
pop
andl
mov
js
mov
ret
jo
inc
subb
in
out
xchg
pop
ret
in
add
call
call
hlt
div
xor
repz
or
out
sbb
inc
scas
add
mov
mov
icebp
test
mov
test
aaa
mov
imul
and
pop
lahf
xor
push
mov
pop
movsb
xor
test
mov
mov
pop
cmp
ds
data16
push
push
es
pop
mov
lret
fbstp
scas
ds
pop
loope
cltd
inc
inc
je
out
ds
push
repnz
inc
sti
out
jle
insl
jns
inc
fstps
aad
popa
pop
xchg
cmp
into
xchg
pop
dec
outsl
das
cmc
xlat
sti
insb
lods
mov
fimuls
fadds
cmpsl
mov
loop
lahf
test
jo
fcomps
jns
pop
sbb
inc
fcmove
int3
int3
mov
adc
and
xchg
dec
cmp
loop
in
add
in
lock
lock
stos
push
sub
push
lods
aad
test
jp
xchg
aad
lods
iret
pop
test
outsl
push
pushf
stos
xorl
sbb
lret
cmpsl
cmp
cmp
jae
sbb
dec
sbb
lock
adc
sbb
dec
insl
lahf
daa
mov
inc
call
adc
insb
inc
cmp
pop
stos
push
xlat
in
and
cmp
shl
fisubs
cmp
loopne
pop
popf
push
mov
fwait
pusha
ja
cmp
xor
xor
add
sbb
imul
push
jle
dec
or
std
shrl
adc
push
mov
mov
pop
outsb
loope
pop
imul
test
enter
cmpsb
mov
and
lea
in
and
push
test
push
pop
insb
cltd
adc
aam
push
bound
lret
loopne
dec
add
mov
call
jp
xor
adc
xchg
into
jmp
xorl
gs
cwtl
fsubrp
ja
cmp
fists
fstpt
cmpl
adc
out
push
movsb
sbb
pop
jae
sbb
cmp
fs
je
mov
xchg
pop
mov
xchg
mov
idivl
loope
mov
mov
and
sub
jae
mov
jno
test
fwait
mov
es
cmpsl
push
sub
jecxz
xchg
dec
xor
loope
ret
jecxz
pop
jmp
shl
icebp
repz
dec
sbb
pop
pop
inc
das
pop
mov
jns
fsts
pop
push
xchg
pop
movsb
scas
mov
push
sahf
rcll
pop
cmpl
sbb
dec
and
shlb
push
push
sbb
loopne
rcll
inc
nop
lods
push
push
lods
pop
loopne
sub
inc
cmp
sbbl
mov
mov
dec
mov
push
push
icebp
xchg
call
add
in
cs
add
and
sub
into
pop
fsubrl
xchg
pop
xor
xchg
sub
mov
cmp
in
ja
cmpsb
cmc
stos
xor
mov
popa
sub
jl
mov
dec
or
cld
push
dec
popf
repnz
das
mov
mov
mov
insl
jg
jge
int
and
fcompl
mov
ret
and
sbb
fs
jmp
rcll
push
push
addl
sahf
xor
inc
ret
jb
pusha
mov
push
push
cmp
rcrl
sub
mov
cwtl
je
jo
mov
sbb
mov
and
mov
sti
and
bound
adc
and
out
addr16
mov
fists
call
ljmp
sarl
xlat
cs
inc
outsl
cmp
sbb
lret
push
js
stos
imul
test
lret
arpl
enter
arpl
inc
cmp
addr16
xor
stc
sub
cmp
shl
out
cld
cmp
loope
test
mov
pop
jg
adc
xchg
arpl
movsb
push
mov
inc
enter
inc
sub
leave
divl
out
and
cs
pusha
inc
sbbl
das
push
jns
inc
insb
pushf
mov
inc
mov
jne
rcrb
jae
xor
jo
adc
pop
jbe
mov
sti
ficomps
rclb
pop
sub
aad
dec
ror
loope
pop
sti
aad
daa
cld
add
or
push
lock
jo
adc
enter
xor
daa
xor
dec
pop
push
out
mov
mov
mov
es
jge
fisubl
mov
cli
sbb
xor
ja
call
lret
outsl
or
mov
test
xchg
js
or
std
loope
loop
std
jg
push
imulb
sub
sub
jbe
mov
imul
mov
call
xlat
sub
in
ljmp
add
dec
stos
stos
shll
mov
dec
scas
test
sbb
subb
movsl
mov
movsb
jg
xchg
jg
pusha
lret
adc
leave
repz
into
push
inc
push
cmp
and
mov
xchg
xor
lock
dec
add
add
sub
or
sbb
ja
or
cmpsl
sahf
and
dec
adc
inc
xor
setne
dec
test
js
push
shlb
ds
inc
inc
das
and
jg
daa
push
add
jae
push
out
mov
mov
dec
mov
sbb
push
xchg
lock
je
jnp
dec
imull
mov
bound
lds
in
pop
pusha
loop
fcoml
testb
cmp
fistpl
add
dec
mov
bound
mov
pop
add
leave
mov
dec
lahf
movsb
mull
xor
push
mov
aad
lcall
sub
push
fcoml
push
mov
movsl
cmpsl
rorb
add
ret
rcr
pop
jo
mov
int
mov
mov
out
pop
cs
idiv
jmp
sub
and
xchg
dec
add
push
cmpsl
fucom
clc
out
je
dec
loop
scas
lods
pop
out
cmp
mov
xchg
movsb
cs
push
sub
mov
mov
insb
ror
add
lret
and
cmpsl
xor
ret
outsb
das
jno
adc
sbb
push
insl
and
jg
fbstp
lret
xor
orb
aad
push
mov
enter
mov
or
xor
pop
inc
jle
into
push
int3
xchg
dec
mov
mov
std
jle
push
dec
fnstcw
fbstp
xchg
inc
cmp
iret
add
movsl
mov
add
test
pop
hlt
lods
dec
add
insl
xchg
stos
push
fadd
jo
sub
sub
sti
or
and
cmp
idiv
sarl
inc
jo
mov
das
inc
pop
xor
xor
jg
push
xchg
jg
mov
push
xchg
or
jl
inc
or
and
jne
push
push
fwait
mov
or
adc
out
movmskps
int
imul
cltd
add
dec
pop
push
fs
hlt
into
sub
icebp
popa
loopne
idivl
gs
stos
push
sbb
push
repz
sbb
ljmp
sub
mov
gs
push
pop
xchg
sub
mov
push
mov
fisubrs
hlt
into
cmp
lret
jge
inc
xchg
mov
pushf
mov
lea
cltd
mov
push
les
in
mov
scas
mov
call
rorb
jle
mov
jmp
pop
sub
mov
nop
dec
aas
out
xchg
mov
rclb
xchg
in
jne
movsl
sahf
xor
dec
adc
sub
repnz
fstl
adc
ret
or
sub
scas
jmp
adc
pop
jg
adc
rorl
or
xor
cli
xor
mov
ret
sub
jae
jecxz
sarb
xchg
pop
pop
adc
gs
pop
mov
mov
fldl
mov
pop
dec
adc
cld
int3
in
xor
adc
pop
push
mov
sbb
hlt
or
imul
mov
aam
jb
outsb
mov
into
sub
add
nop
ret
ja
bnd
mov
push
loopne
sbb
and
or
rol
sbb
and
pop
push
xchg
popf
pslld
mov
push
mov
lahf
ficompl
xor
ret
bound
mov
loop
mov
ja
lret
cli
repz
call
incl
push
aam
jmp
sub
iret
push
adc
sbb
push
insb
mov
std
jge
out
pushl
push
outsb
sbb
mov
dec
mov
inc
shl
dec
pop
cltd
ja
mov
mov
mov
lock
enter
stc
data16
les
test
std
ret
jnp
inc
sahf
stos
fisubs
icebp
push
and
je
jge
loope
mov
jno
bound
xor
ljmp
aam
aam
sub
nop
dec
pop
inc
ret
leave
ja
xor
mov
loope
cmpsl
sbb
test
cmp
mov
movsb
std
mov
mov
mov
fldenv
inc
jnp
xchg
xor
mov
repnz
xchg
std
loop
shl
sarb
cmc
icebp
lret
lds
mov
and
stos
sub
mov
mov
mov
out
cmp
jno
orl
mov
sbb
addb
repnz
jg
jnp
xchg
jo
cwtl
xchg
shrb
stos
test
sbb
fwait
push
cs
int
xchg
data16
test
mov
pop
inc
repz
or
scas
add
add
add
aas
jmp
and
mov
out
jmp
mov
add
adc
or
test
movswl
scas
sub
sarb
insb
mov
inc
xchg
int
imul
xchg
fwait
jmp
leave
imul
dec
inc
xchg
adc
bound
inc
test
mov
sbb
aad
xchg
xchg
mov
into
sub
push
mov
inc
sbb
cld
das
std
cmp
aaa
mov
call
sub
insb
rclb
movsl
dec
cwtl
scas
roll
cmpsb
or
aam
sbb
sub
sbb
movsb
fsubs
jg
dec
lahf
orl
mov
cmp
cmc
fdivrl
addr16
adc
stc
cmp
test
pop
loop
inc
leave
push
jbe
iret
xchg
loopne
add
fld
jne
lcall
imul
pushw
aam
mov
xlat
loop
mov
pop
lahf
xchg
out
sub
into
clc
pusha
repz
add
adc
test
roll
xorl
adc
jae
iret
fstpt
cmp
dec
fdivs
pop
addr16
push
in
mov
mov
and
in
sbb
mov
test
imul
andb
push
scas
dec
insl
out
jge
pop
ret
bound
add
divl
dec
icebp
lahf
sbb
or
mov
xchg
fucomi
push
loope
stos
pop
mov
std
stc
inc
jge
mov
pop
sar
inc
and
xchg
in
cmp
mov
mov
mov
push
sbb
add
adc
xchg
lcall
int3
pop
jg
and
lods
jns
inc
pusha
inc
mull
pop
dec
sub
cmpsb
das
cmp
jp
es
jle
std
push
or
bound
mov
xchg
jo
mov
ljmp
jl
int
mov
repnz
and
or
lock
mov
pop
sub
xchg
jbe
sbb
and
pusha
or
cmp
ja
pop
int3
inc
nop
dec
imull
imul
test
and
push
xor
cmp
lret
ret
and
fmulp
test
and
or
les
sub
xor
ds
sbb
jae
je
inc
lods
pop
vmwrite
xor
out
inc
out
mov
mov
jbe
push
xchg
fnstsw
cmp
cltd
loopne
in
stos
inc
cmpsb
pop
sub
test
sub
jecxz
rcrl
and
mov
lods
fcompl
leave
push
push
in
cmp
incl
jnp
loopne
xchg
ficomps
jmp
fistps
and
std
rcrb
sti
stc
pop
sub
mov
xchg
fwait
sbb
or
sete
adc
cmp
aas
mov
sub
ficompl
out
and
jns
jecxz
test
clc
jno
xchg
push
ret
repz
adc
test
or
shlb
fstpt
push
mov
adcl
lret
pop
push
lea
je
ret
sub
rcrl
xchg
xor
sub
mov
imul
pop
inc
cs
pop
cmpsb
push
outsb
or
or
lods
cmp
ficomps
icebp
popf
xor
cmp
repnz
mov
mov
stos
mov
ret
test
scas
push
push
jne
inc
pop
sbb
scas
pop
aaa
mov
mov
fmull
mov
sub
sub
es
jle
mov
sbb
lock
and
movsl
lods
push
pop
call
jae
sbbb
outsb
mov
push
inc
fcomps
push
mov
daa
jae
lock
or
adc
jo
push
popf
iret
stos
xor
insb
lods
sub
sub
pop
daa
fwait
push
pop
jmp
jg
sti
dec
inc
jl
mov
lcall
lock
ss
iret
data16
cmp
dec
adc
mov
rclb
in
sbb
pop
sbb
inc
cmc
addl
pop
mov
int3
pop
xchg
sahf
loop
loope
mov
fstpl
xchg
mov
inc
test
adc
lret
push
xchg
inc
rorl
ja
mov
or
jae
pop
sub
imulb
mov
addr16
insb
mov
push
inc
add
or
add
adc
mov
arpl
repz
sbb
out
adc
sub
dec
jecxz
push
negl
lea
pop
fsubrp
inc
loop
lock
mov
mov
call
xor
xor
push
adc
ret
sbb
cmpsb
fwait
icebp
sbb
popa
pushf
das
and
in
xor
icebp
xchg
sbb
push
bound
xchg
mov
fisubs
adc
lods
inc
clc
cmpsl
sub
js
dec
orb
jge
mov
and
xchg
loop
mov
mov
das
pop
sub
andb
dec
out
dec
push
mov
ss
jg
jmp
out
fwait
lahf
test
fs
sub
leave
imul
sti
in
ljmp
pop
or
pushf
in
jae
dec
jo
push
push
das
movsl
lcall
mov
sbb
mul
aas
popl
flds
pushf
pop
jg
enter
je
inc
jg
scas
cmc
pop
fbld
fiaddl
sti
jmp
add
call
mov
lds
lods
dec
push
xchg
jl
std
fcmove
call
push
test
stos
into
int3
or
in
add
mov
push
add
or
fmull
inc
mov
cmp
in
fistpll
mov
and
pop
pop
mov
pop
test
dec
pushf
pop
mov
cmc
orl
repnz
arpl
cmp
sub
loopne
lret
lahf
lock
leave
outsb
std
xor
mov
cmp
pushf
out
in
es
push
xchg
fptan
dec
and
xor
je
sub
and
jecxz
or
repnz
lret
fndisi(8087
pop
jnp
sbb
add
gs
push
push
arpl
lcall
cmpsl
mov
jns
daa
int
jecxz
mov
and
movsl
adc
mov
mov
mov
ret
add
nop
add
cltd
out
sub
nop
sub
je
sbb
jnp
add
push
imul
or
and
xchg
jp
pop
aam
bswap
stos
dec
jge
mov
shrb
push
cs
cwtl
jo
pop
das
mov
fstps
mov
jecxz
sub
inc
fcomps
mov
in
mov
and
cli
ret
and
lret
xlat
mov
ret
sahf
sbb
or
xorl
loop
stc
outsl
and
push
push
das
test
in
mov
push
test
push
cmp
jge
das
out
ljmp
das
adc
insl
pusha
xchg
fdivs
dec
jb
and
jno
pop
and
loope
inc
inc
fcmovnb
add
ja
xor
add
test
dec
mov
inc
fldcw
rcrl
cmpsl
mov
test
sbb
or
dec
cmp
xor
pop
xorb
outsb
js
rcrb
gs
fldl
out
and
push
xchg
insb
sahf
sahf
inc
shlb
jbe
stos
pop
push
push
lcall
xlat
push
shrb
js
mov
lret
or
shl
cli
jns
imul
fisubs
dec
dec
dec
fisubrs
jmp
jecxz
push
jmp
repnz
push
mov
aaa
sbb
xor
jno
fstl
ret
pop
ds
sbb
push
lahf
stc
dec
add
lods
jne
sbb
data16
hlt
mov
or
popa
orb
sbb
mov
push
outsb
sbb
iret
jns
mov
repz
xchg
clc
push
sbb
andb
frstor
fldt
xor
stc
adc
popa
cs
rcrl
adc
inc
dec
lret
fucom
or
sub
or
cmp
dec
scas
cli
xor
mov
pop
mov
stos
inc
std
or
or
or
popa
cmp
pop
subl
sub
sbb
xor
add
dec
ret
unpckhps
and
and
popf
pop
and
int3
push
pop
nop
push
inc
out
sbb
mov
xchg
rorl
lds
jno
rcrb
cmpsb
js
insb
fsubrl
adc
lahf
xchg
scas
push
movsb
push
mov
imul
sub
cmp
lea
add
shlb
sti
sub
lahf
test
mov
or
sar
sti
xchg
sbb
xchg
pop
inc
aaa
push
daa
xadd
xchg
mov
jp
xor
int3
ret
push
nop
cmp
adc
cmp
fildll
fmull
mov
incb
xchg
and
scas
or
sbb
xor
mov
pop
in
xor
push
aam
ds
in
mov
mov
or
jb
popf
mov
lret
add
add
std
iret
daa
jg
mov
dec
mov
pop
fldcw
jecxz
mull
leave
test
xchg
addr16
iret
sti
xchg
fnstenv
and
xor
mov
xor
dec
leave
pop
pop
mov
mov
lock
test
ror
adc
pop
cltd
nop
or
add
push
loop
inc
dec
fwait
jle
jl
adc
and
into
mov
add
je
adc
push
or
idiv
xor
push
pop
sbb
add
xor
or
xchg
imull
popa
in
lret
cmpsb
iret
xchg
enter
sbb
mov
cltd
and
pushf
lds
jmp
xchg
jae
adc
mov
add
jno
push
movsb
sbb
xchg
scas
outsb
xor
and
jl
inc
jno
inc
dec
sub
pop
sub
add
loope
adc
adc
mov
jmp
push
or
mov
adc
and
mov
jbe
dec
sbb
sub
loope
pop
subb
jp
lods
mov
mov
test
jno
imul
ljmp
cmpsb
shl
adc
int
into
movsb
mov
shrl
dec
sbbl
repz
js
or
cmp
es
push
arpl
mov
int3
sub
rorl
shlb
cmp
cmpsl
jo
mov
leave
mov
mov
fwait
outsl
fld
inc
or
shrl
or
out
mov
jnp
aad
jge
sub
xor
inc
push
mov
test
loopne
jecxz
jp
setp
pop
das
dec
adc
or
popa
loop
xor
jnp
fsubs
fadd
imul
mov
sub
xor
minps
es
ret
out
out
ret
pop
divb
orb
mov
sbb
int3
movsl
add
jle
inc
dec
adc
mov
jl
jge
xchg
cmpsb
dec
ffree
test
adcl
cmp
or
jmp
fsubs
lahf
test
or
mov
in
je
in
int3
sub
dec
jb
xor
mov
pop
mov
repz
pop
dec
test
ja
subb
mov
out
adcl
stos
xorb
mov
mull
arpl
nop
push
or
je
ja
fistps
je
jp
inc
sub
xor
ja
jo
xor
decl
nop
xchg
cmp
or
or
inc
aaa
divb
push
xchg
jo
pop
mov
adc
or
jb
nop
cmc
lea
std
mov
movb
xor
enter
pop
xor
das
xor
xor
out
pop
nop
leave
xchg
shlb
aad
shrl
inc
adc
js
adc
nop
out
repnz
inc
outsb
mov
jmp
jge
cmp
push
rcrl
leave
jp
push
cmc
call
jo
andl
add
xchg
test
cli
adc
jle
in
add
lahf
lcall
adc
scas
insb
hlt
cmc
adc
pusha
aaa
faddp
adc
add
std
jb
je
jnp
clc
loopne
adc
add
mov
scas
add
mov
aam
sbb
out
mov
lret
dec
in
mov
sbb
mov
and
jge
adc
insb
cmpsb
incl
movsb
sbb
out
mov
xor
or
pop
xchg
adc
adc
mov
xchg
bound
or
lods
jle
cs
sbb
push
lock
cwtl
lahf
jb
dec
xchg
sub
in
jno
inc
sbb
dec
sbb
mov
ret
pushf
leave
xor
loope
xor
xor
mov
iret
out
fldt
sarl
pushf
es
xor
and
sahf
inc
lods
cwtl
add
fbstp
loope
mov
test
mov
xchg
or
mov
mov
subb
lds
cmp
shlb
adc
mov
ja
aad
pop
jecxz
out
bound
decl
sbb
jbe
adc
sbb
jb
inc
decb
sub
jmp
pop
outsl
shrl
les
mov
jae
mov
loope
cltd
mov
aas
out
jmp
enter
pop
xchg
icebp
jmp
pop
cmc
call
pop
test
lods
fbstp
movsb
gs
das
call
push
mov
cmp
mov
stc
sub
sub
inc
mov
and
adc
stos
sahf
or
cmc
stc
xor
sti
sub
adc
rcll
addr16
mov
mov
xchg
es
mov
mov
imul
dec
test
xchg
mov
sbb
cmc
rcrl
vorps
xlat
xchg
mov
hlt
addr16
stos
jg
xchg
cmp
dec
sahf
mov
stos
rclb
or
fadds
js
mov
dec
dec
mov
call
pop
lcall
and
cmp
std
mov
adc
inc
inc
out
lcall
xchg
aaa
repz
mov
inc
in
push
rol
sbbb
mov
lods
icebp
jbe
out
in
js
loopne
stc
in
ficompl
inc
pusha
aaa
fwait
mov
push
shlb
js
mov
fdivl
adc
xchg
call
pusha
mov
call
je
cli
scas
mov
daa
cmp
mov
adc
lret
cmp
mov
pop
jno
div
pushfw
call
cmp
cmc
gs
fisttpl
ds
push
push
sbb
iret
out
mov
or
std
xor
lds
cmp
jb
push
iret
sarb
cmp
std
or
repnz
lret
arpl
adc
fcoml
mov
add
sub
fstp
xorl
pop
inc
cld
movsl
pusha
bound
lcall
push
mov
mov
ret
cwtl
mov
lods
mov
adc
int3
push
out
pop
gs
mov
pop
add
pop
xor
mov
pop
aad
cs
pop
mov
cld
gs
xor
mov
inc
adc
jbe
adc
in
in
mov
mov
adc
popf
add
repnz
jo
dec
dec
mov
ss
in
cli
xor
push
sbb
push
xor
mov
gs
jne
bound
insb
push
loope
jns
mov
add
sbb
jp
sbb
stos
xchg
pushf
nop
mov
xor
repz
lahf
shrl
mov
mov
sub
xor
gs
dec
jns
add
and
lea
iret
enter
xchg
aad
ret
lret
jnp
cmpsb
nop
daa
test
fs
push
mov
xor
inc
outsl
sub
cld
or
shll
movsl
push
mov
das
in
scas
shlb
fmuls
or
lea
loopne
jp
dec
push
dec
je
sbb
mov
lods
xor
fsubs
sbb
adc
jb
dec
xchg
cmc
das
jns
mov
rorb
jle
jbe
or
cs
ret
stc
imul
or
mov
or
jo
mov
push
sbb
jnp
and
lret
adc
test
fstp
lahf
jbe
popf
ds
in
xchg
int3
dec
test
test
addl
sti
addr16
inc
push
push
popa
loop
pushf
iret
xor
idivb
es
pop
adc
jmp
inc
mov
pushf
out
lahf
mov
fdivs
lret
rcrl
mov
stos
pop
fsubr
lret
out
notb
add
popf
cvtdq2ps
enter
sbb
pop
and
mov
cltd
sbb
jns
sub
test
cld
jecxz
dec
pop
test
mov
fimuls
icebp
ljmp
leave
fsubr
push
enter
xor
cld
mov
jmp
cld
or
mov
ret
jg
ret
popa
adc
xchg
add
repnz
push
call
shlb
or
incb
testl
jnp
dec
fwait
idivb
jns
ret
repz
pushf
loop
cmpsb
push
clc
lods
je
enter
scas
icebp
int3
aas
ljmp
std
popa
xlat
mov
bound
clc
inc
mov
push
das
jno
stos
loop
push
cmp
iret
shrb
data16
outsl
mov
cmp
mov
adc
or
xor
cmc
pop
testl
loopne
xchg
mov
inc
or
jge
scas
push
push
aaa
inc
gs
iret
xor
xchg
dec
dec
adc
mov
stos
mov
sub
push
popf
sbb
lds
cmp
sub
xorl
push
inc
mov
repnz
mov
imul
mov
add
pusha
lods
mov
xor
adc
scas
mov
dec
cld
jbe
insb
or
sbbb
sbb
jne
jb
dec
loope
and
es
in
adc
imul
fwait
jle
in
xchg
push
mov
xchg
dec
jo
add
lock
xchg
sbb
sub
xchg
jae
jno
pop
stos
sub
xchg
cmpsb
and
mov
rclb
cmp
pop
shl
aas
and
sbb
add
loop
mov
arpl
rcl
out
test
cld
push
cmpb
js
cwtl
jnp
mov
pop
es
clc
inc
jo
sub
push
lcall
loopew
lds
lcall
mov
sbb
ja
push
mov
sbb
mov
mov
cld
sti
dec
aam
ficoms
add
lea
ficomps
mov
jno
fwait
adc
cmc
sahf
mov
cmp
scas
push
test
aaa
hlt
les
mov
pop
cmpsb
lods
push
adc
mov
je
and
cmp
sbb
push
rol
fcmovu
cmp
lods
imul
cmc
iret
subl
pop
xchg
adc
and
and
sub
popa
jecxz
ja
jg
les
lock
mov
movsl
lahf
sub
jne
fisubrl
mov
mov
inc
lock
push
adc
int
xchg
jecxz
pop
mov
je
sar
inc
mov
mov
add
out
test
orb
jle
adc
loopne
cs
add
jg
jbe
shlb
cmp
sub
pop
pop
mov
mov
stc
lcall
xchg
fdivrs
pop
lret
fistl
push
add
push
loope
dec
xor
andb
or
or
jecxz
dec
adcb
sbb
imul
push
enter
negb
mov
enter
add
mov
mov
add
daa
ficomps
pop
das
and
add
cmp
push
mov
lcall
movsl
mov
and
jo
jg
daa
pop
lock
inc
insb
mov
aam
pop
mov
adc
mov
pop
shrl
dec
fistpll
ss
push
jae
nop
gs
data16
nop
cld
repz
pusha
stos
jl
ljmp
movsb
jle
xchg
fs
push
sbb
sbb
shll
fldl
xor
les
jae
xor
sbb
in
ret
add
jmp
rorb
xchg
ret
pop
out
inc
jae
xchg
scas
iret
mov
cltd
call
in
or
shrl
aaa
cmp
inc
daa
cmp
sbb
imul
sbb
gs
add
mov
mov
outsb
and
inc
fstpt
xor
out
out
push
jmp
mov
movsl
je
jp
cmc
repz
mov
mov
jnp
xchg
loopne
loope
push
fcoml
mov
test
push
out
cmp
sbb
shrb
mov
push
out
mov
mov
outsl
or
lret
lods
cmc
cld
fildll
mov
sbb
into
repz
and
lea
sbb
test
push
test
fs
cmp
cmp
mov
sahf
push
add
das
int
xor
push
sub
push
idiv
push
loope
push
fldcw
inc
aam
fistpl
mov
sbb
sbb
dec
test
xor
cld
adc
mov
jo
xor
data16
movsb
gs
jb
or
xor
add
insb
pushf
mov
pusha
cli
fldl
mov
inc
fwait
fwait
jno
jne
jno
imul
addb
lret
and
jo
xchg
jl
sub
decb
rcrl
out
push
iret
lahf
mov
es
pop
out
xor
jno
xor
cltd
repz
test
sub
push
mov
imul
scas
das
movsb
mov
call
push
js
add
scas
push
shlb
fisubrs
mov
cltd
sub
add
xchg
addb
js
inc
adc
in
jecxz
insl
cld
cmp
test
jp
push
unpcklps
sbb
jne
movsl
int
jnp
ljmp
jne
rorl
lret
and
mov
ljmp
mov
mov
hlt
dec
pusha
inc
nop
in
add
subl
mov
xchg
std
les
or
jbe
les
fcoms
xchg
xor
scas
push
mov
decb
dec
push
enter
lahf
xor
push
popl
push
pop
fwait
es
aam
xchg
mov
lock
lret
mov
aam
stos
xchg
shl
fs
inc
lods
cmp
shrb
push
dec
test
jmp
adc
cmp
rolb
rorl
dec
nop
fisubrl
jmp
hlt
or
adc
lods
inc
sbb
xchg
xor
cmp
jne
inc
mov
sbb
and
mov
xor
and
movsb
jecxz
aas
icebp
lret
fisttpl
xchg
cwtl
popf
xor
imul
jmp
add
xchg
ja
mov
pop
inc
and
nop
dec
pop
add
dec
push
adc
add
jmp
lods
mov
mov
ss
jle
imul
xchg
in
mov
and
rcll
push
lods
ret
stc
sub
push
mov
dec
aas
jp
out
and
mov
in
js
cmp
dec
in
mov
cmp
inc
les
xor
add
cmpsl
fs
enter
fisubrl
adc
fs
sbb
les
jle
psrlw
out
out
and
insb
in
pop
push
sti
xor
push
push
dec
push
inc
push
or
addr16
adc
outsl
xor
or
testl
and
xlat
in
cwtl
cld
sbb
mov
loope
xchg
cmp
xor
jp
and
test
mov
jo
lahf
fdiv
int
add
popa
mov
mov
and
push
adc
ljmp
imul
fcompl
ficoms
ja
iret
daa
icebp
and
add
pop
mov
ret
cltd
out
mov
lahf
mov
jecxz
or
ja
sbb
mov
lea
movsb
fnstsw
or
lods
cmp
test
sbb
inc
scas
adc
pop
dec
arpl
clc
pop
mov
cmp
inc
and
inc
lds
mov
mov
mov
pop
out
ret
jo
jl
inc
lcall
shrb
add
adc
mov
push
lahf
imul
xor
add
mov
negb
mov
and
jmp
dec
pop
lock
xchg
push
push
mov
sarl
xor
jne
shl
pop
into
pop
mov
scas
scas
sbb
fistpl
or
jl
add
mov
sar
in
ret
movsb
jg
popa
out
mov
subb
and
cmp
pop
cmp
aas
cmc
leave
cmpsl
adc
fwait
js
xchg
fiaddl
pushf
mov
fsubl
in
ret
mov
stos
pop
inc
mov
lock
lret
test
gs
xchg
or
cmp
inc
fisubs
mov
aad
pop
mov
sub
sbb
stos
lods
adc
mov
sub
idivl
xor
mov
cwtl
xchg
imul
lret
outsb
and
test
adc
aad
xchg
jecxz
sbb
mov
cmp
mov
fildl
sbb
inc
loope
mov
mov
inc
dec
inc
cmp
jl
xor
or
scas
ds
mov
lods
jmp
bound
pop
xlat
dec
hlt
mov
jno
mov
mov
mov
mov
scas
jnp
dec
dec
fdivs
xchg
add
cmp
push
cwtl
mov
mov
mov
movsb
push
dec
adcl
xlat
fcoml
das
jns
popf
sti
adc
mov
push
sub
leave
fmull
or
cmp
mov
lret
inc
es
jmp
pop
xchg
or
out
cmp
jbe
arpl
xchg
xor
cld
ljmp
inc
cmpsl
sub
mov
cli
or
sub
rolb
xchg
sub
repz
outsb
xlat
jae
and
push
shll
ljmp
push
pop
outsl
pop
imul
push
ret
ss
add
dec
push
daa
addl
ljmp
pop
fisttpl
nop
pop
mov
push
int
pop
mov
jmp
jbe
out
mov
movsl
inc
fisttpll
or
dec
jns
xchg
sub
inc
rcr
push
test
mov
inc
ss
mov
jmp
mov
jmp
pop
pop
jnp
aad
add
adc
sbb
and
fs
jecxz
test
lods
mov
pushf
xchg
pop
xlat
cmpsl
loope
push
push
adc
xlat
xchg
mov
push
push
sub
mov
push
lods
sar
jns
add
test
jns
mov
dec
xchg
lods
xchg
xchg
adc
mov
loope
mov
push
adc
cmc
xchg
inc
cmp
sbb
rcrb
add
push
stos
in
pop
clc
data16
pop
insl
push
inc
out
in
sub
repnz
test
jge
sub
mov
lock
adc
in
mov
jne
outsb
shll
cld
mov
dec
push
mov
jns
push
cmp
movb
or
sbb
ror
cmpsb
xchg
jp
sub
lret
fildl
jmp
mov
adc
popf
test
fstps
adc
out
jge
add
in
mov
mov
sub
add
pop
ljmp
inc
mov
dec
push
fsubrs
xlat
pushf
sbb
add
inc
mov
push
out
push
mov
mov
mov
xlat
push
aaa
mov
bound
rolb
jno
mov
sub
dec
or
mov
gs
mov
or
mov
loop
cmp
adc
into
lds
add
xchg
pop
push
cmpsb
popf
jb
mov
jbe
cmc
inc
pop
cmp
call
fucomp
push
out
sbb
sarl
mov
and
scas
inc
jne
and
add
and
cmpsb
shlb
mov
je
push
jmp
sub
inc
mov
ret
mov
sub
mov
jns
pushf
cmp
or
cmpsl
xor
inc
mov
adc
divl
mov
in
aam
ror
arpl
and
adc
out
ficoms
ds
lret
inc
fdivp
fwait
leave
xchg
in
mov
ret
cmp
mov
lret
in
mov
cmp
divb
addl
fidivl
pusha
mov
outsl
inc
loop
add
clc
xchg
dec
xor
addr16
inc
push
in
fcomi
dec
cmp
movb
inc
pop
ds
push
xor
subb
pushf
xlat
roll
xor
lds
out
and
mov
mov
test
lds
dec
sub
mov
mov
mov
mov
xchg
scas
test
pushf
sub
cmc
mov
addr16
jo,pt
test
jno
sbb
sub
mov
js
jge
inc
inc
test
lea
jl
and
data16
lahf
nop
das
ficoml
jle
jnp
mov
or
rcll
inc
iret
clc
xchg
sub
ljmp
cmp
xor
shll
cmp
mov
lods
adc
mov
lret
sub
jl
jbe
fsts
loopne
cmp
lret
sbb
cwtl
call
adc
cmp
mov
or
xor
stos
mov
jg
jp
mov
xchg
std
outsl
js
les
lods
loop
stos
in
mov
imul
lret
and
addr16
or
lock
aaa
rorl
dec
into
faddl
pop
je
inc
cmovle
test
mov
imul
negb
fnstcw
inc
lods
or
fisubrs
sbb
or
pop
jle
mov
int
xchg
mov
out
or
xchg
fnstsw
popl
jl
fldln2
and
push
je
jno
mov
jb
rcrb
test
in
xlat
outsb
cmp
or
xor
mov
xchg
pop
inc
cmp
pop
dec
cwtl
aaa
rclb
jns
push
jle
cmp
stos
jbe
adcl
movl
stc
sahf
in
sub
adc
lea
daa
std
add
mov
mov
daa
lock
jecxz
pop
negb
loop
std
push
push
out
cmpsb
or
mov
movsb
outsb
sarb
paddd
dec
cmp
adc
in
pop
gs
and
sbb
test
mov
pop
xchg
ja
mov
inc
mov
push
mov
mov
mov
mov
jo
mov
in
adc
jae
adcl
or
loope
lret
fs
lahf
push
lret
push
adc
test
adc
jp
aaa
xchg
loop
and
hlt
orb
imul
mov
fistps
sbb
mov
xor
mov
loope
ss
jmp
add
push
or
and
ficomps
fstl
test
adc
mov
aas
sub
repz
iret
pushf
cld
popa
aas
stos
push
mov
cwtl
xlat
lret
cmp
push
push
fwait
daa
xchg
jno
divl
adc
ds
xchg
push
in
imul
dec
jle
fsubl
sub
out
push
sbb
jmp
lret
mov
sub
fcmove
or
push
pop
mov
pop
shl
test
or
mov
cli
cld
hlt
push
or
imul
add
xchg
das
enter
aas
cmp
test
push
aad
push
pop
pop
out
push
mov
sahf
add
cmpsb
push
ds
aas
sbb
aas
mov
mov
jmp
lcall
lods
lret
stos
dec
mov
sub
stos
and
push
out
xchg
sahf
or
cs
xor
fcoml
fs
sub
frstor
sbb
sbb
push
sbb
or
and
lret
int3
fdivr
test
dec
jno
sbb
mov
xor
sbb
adc
add
loop
ret
jo
cmc
sahf
or
ds
aas
cmpsb
pop
inc
mov
xchg
ror
sub
sub
adc
sub
xchg
sbb
leave
lret
test
mov
movsl
lea
pop
jno
out
add
xorb
and
js
sub
test
adc
ljmp
jl
jmp
dec
cmp
and
fists
ret
pop
jnp
sub
fwait
cmc
in
mull
rclb
clc
jno
xchg
stos
mov
push
jbe
xor
sbb
dec
fisttps
add
xchg
push
mov
repnz
adc
sbb
stos
jne
cmp
mov
xor
cmpsl
pop
enter
insb
cmpsl
popf
mov
js
adc
lds
test
dec
jmp
jo
cwtl
mov
mov
push
dec
jmp
jle
add
scas
bound
mov
int
bound
cwtl
fcoml
xor
dec
jb
mov
and
pop
cmp
ficoml
adcb
dec
ret
cmp
ret
pusha
xor
scas
imul
dec
leave
scas
ljmp
xorl
pop
push
pop
repz
mov
loopne
adc
out
js
inc
mov
adc
dec
cwtl
mov
imul
mov
cmp
scas
int3
in
ja
and
scas
mov
std
add
js
in
test
and
sahf
pop
aam
jp
jnp
xchg
or
jle
hlt
mov
addr16
shl
sbb
ds
add
jns
daa
ds
or
iret
lret
psubd
push
shrl
mov
pop
sub
lret
jl
ss
imul
sahf
jnp
add
leave
stos
or
pop
fcomip
xlat
pop
push
out
sbb
mov
mov
loopne
or
jge
mov
and
faddl
pop
imul
inc
aas
fadd
add
mov
es
int
xor
je
mov
loopne
test
or
or
fucomp
bound
push
and
and
scas
mov
inc
cmpb
lret
push
rcll
stos
lret
jb
into
fs
push
mov
jecxz
call
mov
push
jp
fs
jmp
lea
dec
xchg
mov
divl
mov
inc
dec
fxtract
sbb
push
sub
and
test
push
lret
adc
push
test
or
jp
stos
push
test
pop
fwait
or
or
sbb
in
jmp
ret
sub
mov
add
xor
pop
pop
test
test
mov
arpl
mov
mov
jb
fs
mov
mov
sbb
insl
iret
pop
dec
sub
mov
test
mov
call
das
arpl
inc
scas
adc
inc
mov
outsl
add
inc
sub
and
fwait
adc
pop
sarb
inc
shlb
fisttps
push
sub
jp
push
push
fs
andb
stc
mov
xor
pop
push
mov
jl
js
xchg
shll
sbb
stc
jge
pop
addr16
mov
enter
stc
test
xchg
pop
xor
out
jno
adc
mov
mov
inc
or
mov
stos
ja
cmp
inc
pop
out
scas
sbb
mov
out
imul
push
outsb
push
sub
dec
loopne
or
push
sub
xchg
rclb
cld
leave
lret
sub
cltd
xchg
test
jne
mov
or
movsb
sub
out
pushf
xor
fwait
adc
sub
dec
jl
lcall
arpl
pop
adc
xchg
rorl
lea
fnstsw
fsubl
and
cmc
inc
sub
mov
ss
das
pop
xchg
push
lret
aaa
mov
mov
fs
fwait
mov
ret
xor
outsl
incb
dec
aad
insl
int
and
mov
xor
xchg
adc
pop
push
xchg
xor
cmc
push
cld
add
lds
aam
inc
push
cmp
fadds
push
lcall
inc
addl
mov
imul
cli
dec
add
mov
sub
pop
and
mov
dec
clc
pop
repnz
cmpsb
inc
inc
fldt
jae
mov
enter
cld
ss
xor
jl
sti
sbb
xor
hlt
pop
lock
sarb
jo
pushf
inc
in
mov
inc
roll
std
jne
shl
iret
lret
and
mov
shll
fisttpll
sbb
mov
sahf
insl
xchg
adc
or
das
cmp
cltd
xor
mov
jecxz
je
or
push
xchg
sub
aaa
xchg
push
mov
outsb
jb
jmp
jae
scas
pop
xlat
push
aaa
decl
xchg
hlt
lcall
and
push
mov
mov
and
leave
stos
jo
push
aam
pop
lods
xchg
int
sub
sti
add
xor
push
jne
dec
stc
dec
mov
fs
fcomi
fwait
sub
sub
out
stos
pop
pop
cmp
sub
roll
clc
loope
sub
loopne
subb
es
test
scas
add
sahf
push
mov
jp
pop
push
cmp
shrb
xchg
bnd
sahf
inc
fstl
inc
pushf
mov
fdivr
ficoms
xchg
push
hlt
cmp
mov
push
inc
sbb
addr16
adc
ds
dec
pop
mov
stos
fists
hlt
dec
aad
in
jno
jbe
mov
jl
pop
cmp
add
stc
mov
clc
and
add
or
mov
daa
sub
xor
and
fucom
pusha
lret
sub
orb
mov
in
ds
ret
mov
push
add
sar
test
inc
inc
and
adc
mov
daa
in
xchg
sbb
pop
mov
cmc
mov
mov
aaa
mov
stc
sub
pop
repnz
out
xchg
or
xor
or
sub
xchg
push
call
lea
je
sub
lds
sub
sbb
mov
fldcw
or
psubq
jmp
mov
fmuls
and
out
pop
enter
rcl
add
or
sub
jp
movsb
fisubs
mov
das
aaa
dec
repz
pop
ljmp
jecxz
cmpsl
mov
imul
pop
fsubrl
dec
hlt
sub
mov
or
mov
leave
lcall
sbb
stos
sub
mov
xor
add
pushf
xchg
andb
inc
fisttpl
cmp
call
idivl
lock
mov
xchg
push
orl
dec
push
xchg
aas
movups
push
les
and
out
out
inc
inc
mov
xchg
mov
pop
ja
push
insl
dec
mov
in
dec
and
sub
cmc
xchg
push
and
ret
jl
fwait
sub
test
das
movsl
dec
push
mov
sti
pop
inc
dec
push
or
sub
out
fucomip
inc
aam
loope
adc
mov
mov
cld
mov
add
leave
add
add
sub
sub
lods
ret
xchg
sub
ret
adc
xchg
xor
mov
loope
inc
leave
mov
sub
mov
xlat
jno
mov
xchg
mov
sbb
sbb
mov
push
ds
shlb
xchg
imulb
jb
jne
jp
and
out
and
out
mov
les
xor
cmp
mov
dec
xchg
sub
adc
nop
adc
scas
or
sub
push
cld
mov
fs
addr16
push
lods
fs
rolb
mov
out
ljmp
mov
fwait
out
out
sbb
jb
dec
mov
out
pop
ficomps
inc
fiaddl
sub
xchg
cmp
mov
in
aam
fidivrs
ret
adc
lea
mov
mov
gs
dec
pop
mov
movsl
xchg
out
cmp
fcoml
fdivrl
mov
fisttps
jmp
jl
jo
ljmp
push
inc
jb
dec
push
cmp
pushf
dec
adc
pop
dec
push
cli
aam
test
push
mov
jne
add
fs
dec
test
icebp
add
jmp
xor
into
xor
mov
mov
int3
jp
jmp
test
imul
mov
neg
gs
inc
sub
adc
mov
adc
bound
inc
mov
das
push
xorb
loopne
sub
fmulp
mov
mov
push
pushf
scas
test
cmp
mov
movsb
mov
or
or
fwait
dec
out
rcrb
addl
int
or
dec
sbb
push
in
imul
lret
fs
pop
xchg
and
or
pop
mov
pop
outsb
stc
jp
pop
aas
xchg
mov
xchg
stc
insb
lea
inc
popa
push
out
mov
push
add
loopne
inc
shll
mov
xchg
rcll
ret
pop
movsl
inc
stos
stc
rorl
out
jb
jmp
dec
adc
and
sbbb
int
inc
insb
push
push
fimull
push
inc
mov
pop
pop
flds
lahf
mov
int3
lea
inc
out
mov
mov
jb
cmp
cmc
inc
xor
or
mov
xor
cmp
dec
roll
cmp
out
sbb
scas
pop
rolb
mov
cmpl
mov
loopne
mov
add
xor
outsl
inc
jecxz
stos
arpl
cmpl
xor
ja
mov
and
dec
mov
adc
mov
fildll
sub
add
add
scas
sbb
cmp
xor
imulb
data16
xchg
dec
cwtl
adc
cmp
addr16
test
sub
push
loop
cmpsb
inc
pop
test
sub
pop
rcl
mov
sbb
fstl
loop
mov
shlb
push
and
sbb
inc
mov
sub
xor
push
das
lret
pop
pop
sbb
loopne
test
xchg
jns
fcmovb
pop
adc
dec
inc
test
mov
pop
push
mulb
push
pop
aam
push
mov
movsl
imulb
jae
push
push
fwait
or
jge
lods
sbb
cmp
ret
or
movsl
and
sub
push
out
outsl
repz
lds
push
and
or
lods
rcl
test
addl
xor
in
dec
lahf
ja
mov
aam
shrb
clc
ret
mov
pop
xchg
jle
daa
shl
xor
daa
add
int
mov
aad
stos
sahf
test
or
jb
cmp
gs
adc
jle
push
sbb
loopne
jns
cmp
in
push
mov
testb
jb
inc
daa
std
jg
aaa
mov
mov
out
shlb
cmp
movsb
lcall
rcrl
cmpl
lock
sarb
mov
mov
ficomps
addr16
lcall
int3
xorb
mov
mov
scas
xchg
or
das
mov
lahf
fcmovu
xlat
add
dec
int3
push
pop
push
sub
flds
sub
out
pop
push
jmp
stos
mov
test
test
das
push
add
int3
mov
mov
mov
mov
outsb
cld
ljmp
jnp
out
or
cmpsl
sub
lock
push
inc
push
insb
sub
push
hlt
push
push
loopne
faddl
dec
push
push
xchg
lret
lret
data16
mov
lret
aam
call
shrl
jno
ret
pop
sub
push
jl
adc
fidivl
dec
mov
pushf
xchg
xchg
ret
jmp
pop
push
aad
sbb
sub
roll
sub
cltd
add
jne
outsl
mov
and
jbe
push
fildl
bound
sub
xchg
clc
es
in
sub
sub
aaa
push
add
lods
hlt
lock
fisubrs
enter
pusha
sbb
hlt
ja
adc
fidivrs
scas
ret
outsl
outsl
or
adc
dec
pop
sbb
int3
mov
pop
popf
fs
pop
gs
ja
xor
mov
xlat
icebp
mov
pop
mov
mov
loopne
es
xorb
dec
sbb
ret
xchg
rcrl
hlt
insl
xchg
repz
sbb
negl
cmc
push
das
jnp
and
into
jg
je
mov
out
fs
push
rorl
mov
jbe
int3
fstps
mov
add
sbb
add
in
lret
xchg
lea
pop
sub
mov
inc
pushf
jle
mov
mov
int3
lahf
push
add
sbb
loope
add
testb
out
cli
imul
adc
iret
xchg
cmp
lret
mov
test
or
xchg
add
mov
cmpsl
and
jne
mov
sahf
and
mov
in
pop
ja
cwtl
push
sub
adc
fdivr
xchg
mov
inc
popf
sarl
dec
lcall
pusha
adc
inc
inc
cltd
mov
out
nop
add
jae
adc
add
mov
in
pop
int
jae
ja
jmp
inc
bound
push
sti
mov
cltd
aas
notb
test
rolb
jp
in
push
mov
cmp
stos
nop
daa
arpl
outsl
addl
dec
lods
lret
mov
arpl
test
stos
pusha
mov
fsubrl
int3
ss
fwait
pop
lods
push
xor
jp
or
in
dec
inc
lcall
push
rclb
mov
mov
movsl
adc
adc
insl
scas
mov
call
ljmp
jns
and
cmc
lret
sub
arpl
pop
test
adc
inc
jnp
ds
fsubrl
out
sbb
fs
dec
cmp
loopne
adc
imul
outsb
jl
and
out
nop
jne
push
les
dec
push
inc
pop
icebp
mov
or
add
in
xchg
addr16
ljmp
cmc
xchg
pop
or
add
pusha
lcall
dec
popa
stos
xchg
fbld
test
add
lahf
scas
pop
fcmove
sub
stos
xlat
sbb
or
xchg
mov
jge
xor
icebp
adc
dec
gs
mov
lcall
test
in
mov
mov
mov
jg
into
push
test
push
cltd
mov
addl
xor
push
jl
cmpsb
popf
stc
and
scas
jnp
pop
cwtl
mov
mov
outsl
or
mov
fsubl
js
das
imul
shll
test
mov
jo
xor
mov
xchg
cmp
cwtl
or
aas
ja
sbb
iret
adc
jne
mov
test
repnz
pop
stc
or
cmp
fsubr
or
jbe
sub
push
jns
xor
adc
mov
pop
inc
mov
sub
xchg
adc
popa
js
mov
cmp
icebp
jne
mov
test
into
xor
add
push
inc
outsb
psrad
ret
cmp
adc
jl
lcall
xchg
imul
or
sbb
lret
cld
or
dec
push
mov
push
mov
cmovbe
xchg
mov
pusha
sti
insl
in
jmp
mov
je
mov
push
and
adcl
test
jne
aaa
mov
inc
add
sbb
add
mov
aaa
or
add
mov
dec
inc
pop
mov
mov
cmc
lds
mov
stos
push
aas
out
adc
jp
xor
stos
out
std
pop
jecxz
push
ret
arpl
je
jno
sbb
sbb
lods
bound
sub
lret
daa
std
and
out
stc
out
sbb
xor
int3
adc
inc
out
jge
mov
in
movsl
sub
stos
out
mov
aam
out
les
or
push
fisttpl
lea
in
jecxz
sahf
pop
fstpt
sbb
xchg
or
sub
dec
insl
xor
fnsave
les
fdivl
in
lock
into
imul
add
sbb
inc
and
cs
and
inc
movsb
adc
pushf
jecxz
ret
ficoms
int3
in
mov
cmp
pop
ljmp
inc
out
adc
fnstenv
dec
mov
mov
mov
pop
test
pop
dec
daa
cld
pop
outsl
mov
mov
jecxz
xchg
pop
push
scas
inc
xchg
push
jmp
mov
add
inc
mov
and
xchg
adc
xor
push
pusha
movsl
les
addr16
addr16
add
cmp
mov
fstl
mov
leave
push
and
in
addl
aad
imul
and
cltd
gs
mov
faddl
jo
loope
out
rorb
xchg
leave
pop
hlt
jl
rcrb
add
sub
add
fwait
mov
icebp
push
jle
adc
xchg
into
cmpb
fidivrs
iret
out
mov
push
enter
jnp
adc
mov
and
cmp
aas
xlat
pop
or
xor
inc
out
inc
sbb
out
inc
mov
sub
lods
ja
mov
shrb
das
into
pushf
xlat
pop
cmp
cs
ret
and
mov
dec
jmp
mov
jp
push
xor
mov
sub
aad
cmc
cs
adc
and
pop
dec
mov
dec
inc
sbb
stc
lcall
addr16
and
push
mov
xchg
loope
pop
pop
push
mov
sbb
or
in
pop
xchg
repz
les
int3
xor
in
cmpsl
jl
inc
push
jmp
pop
or
cmc
lcall
mov
xchg
add
mov
mov
cmpsl
cmp
pop
cld
rcr
jmp
pop
out
fidivl
push
jns
push
dec
loopne
push
fidivrl
xor
xchg
xchg
loop
leave
rcrb
ds
pop
jns
inc
sub
inc
addb
adc
fistpl
xor
fwait
pusha
rcll
sbb
xor
int3
add
test
mov
xor
movsl
and
fstps
cmp
cmp
int
sti
repnz
adc
inc
shll
cmp
and
xchg
adc
inc
pop
movd
sub
jbe
pop
or
inc
mov
rcll
push
je
xchg
dec
imul
mov
lea
lret
dec
and
xchg
mov
xchg
xor
mov
lret
and
subl
adc
mov
push
test
mov
push
jg
xor
aas
dec
enter
lret
je
inc
mov
cwtl
cmp
mov
lret
adc
mov
inc
das
roll
aaa
clc
test
and
int
or
bnd
adc
xor
mov
xchg
dec
ss
fsts
fdivp
xor
sbb
adc
fs
fidivs
jle
mov
daa
mov
sbb
scas
call
sbb
enter
test
arpl
arpl
subl
adc
fs
push
shlb
dec
push
leave
les
xor
mov
cli
and
dec
in
cltd
es
jp
lret
xor
call
and
out
rclb
adcb
add
inc
lods
das
and
out
cwtl
adc
push
daa
scas
sbb
cs
ss
adc
inc
mov
xchg
xchg
push
mov
xchg
mov
sahf
pop
mov
ja
mov
adc
mov
push
jo
dec
mov
xor
mov
in
loope
cmp
mov
imul
in
and
push
arpl
inc
pop
inc
xor
loope
pop
sbb
movsl
pusha
pop
sub
inc
arpl
outsl
hlt
xor
roll
jmp
xchg
arpl
cmp
sub
sbb
fs
stc
shr
imul
inc
filds
adc
iret
push
adc
inc
call
and
xchg
xchg
leave
int
imul
icebp
push
pop
out
or
cmpsb
push
imul
jne
xchg
mov
push
les
in
cltd
outsb
les
cmc
ss
push
mov
clc
push
or
xchg
fmull
dec
adc
push
sti
or
nop
dec
icebp
push
dec
bound
pop
mov
adc
xor
aas
cwtl
test
and
push
sbbl
outsl
cmp
adc
out
mov
jo,pn
cld
lods
push
mov
sbb
aas
out
test
into
dec
push
mov
mov
pop
das
inc
mov
fstl
lret
js
dec
cmpsl
fldt
adc
cmp
test
jnp
mov
push
lret
imul
shll
inc
xchg
mov
test
xor
xlat
lret
inc
pop
jns
out
les
mov
cmp
sub
jmp
in
cmovp
mov
sbb
xor
jmp
sbb
in
fdivs
adc
fsub
loope
add
mov
insb
push
xor
enter
decl
sbb
jp
cmpsb
and
out
in
mov
pop
jp
dec
stos
and
inc
inc
js
dec
or
popa
and
cld
icebp
sbb
ss
mov
dec
push
or
popa
dec
arpl
sub
inc
or
loope
mov
imul
push
repnz
ret
cltd
out
sbb
push
lods
fidivs
in
cwtl
mov
cmp
out
push
jne
leave
sar
mov
call
fistpll
mov
push
xchg
mov
cmc
cmc
or
and
mov
or
or
dec
aam
cmp
les
xrelease
ljmp
mov
loop
divl
fiaddl
lret
mov
test
aam
cmc
dec
adc
inc
sub
push
scas
pop
add
sbb
popf
or
xor
push
sarb
add
sub
nop
stos
mulb
loop
pop
insl
jae
mov
fldl
aam
mov
pop
xor
outsl
pusha
pop
push
mov
testl
mov
out
mov
push
imul
mov
icebp
iret
and
mov
shrb
mov
icebp
fildll
xchg
in
rcll
sub
loope
clc
push
es
rorl
inc
ret
cwtl
dec
and
daa
pop
jnp
and
inc
and
mov
out
out
push
sub
jge
mov
adcl
mov
xor
xor
pop
insl
push
mov
imul
rcr
cli
xor
jecxz
lods
ljmp
lods
in
cmp
aaa
cmpl
pop
add
dec
mov
test
dec
xorl
xor
or
inc
aam
jmp
or
xchg
dec
and
and
lods
inc
lods
out
pop
shr
lods
cs
sbb
mov
dec
fisubs
xchg
or
call
adc
sub
push
lea
cmp
cmpsl
shlb
pushf
xchg
mov
pop
iret
leave
lods
sub
push
jne
adcb
insb
ja
dec
fcomp
push
push
cmpb
mov
test
mov
stc
push
inc
pop
call
pop
ds
in
call
scas
jbe
push
xor
jns
mov
outsl
xchg
jb
push
repnz
orb
not
test
push
dec
dec
gs
ja
push
into
lods
cwtl
sub
rcrl
sbb
sbb
jg
push
sub
icebp
mov
mov
sub
sbb
scas
call
outsl
test
xchg
cmp
inc
mov
movsb
repnz
jnp
adc
inc
mov
mov
jo
jecxz
xor
sub
and
icebp
mov
idivb
call
bnd
loope
push
xlat
ror
clc
lahf
mov
mov
jb
jno
shlb
cmp
pop
dec
xchg
jcxz
mov
mov
sbb
add
lock
jecxz
mov
rolb
adc
popf
cli
loope
sar
les
mov
insl
hlt
cmpsl
out
jo
push
adc
inc
and
lds
popl
das
inc
enter
les
dec
adc
or
or
pop
imul
lret
and
mov
jg
mov
test
lods
mov
xor
sbb
mov
push
pop
and
push
pop
test
mov
mov
repz
ficomps
daa
pushf
js
xchg
lret
push
fwait
out
jne
in
lahf
inc
leave
scas
repz
sbb
sbb
mov
popf
pop
sub
sbb
mov
mov
push
and
cld
imul
or
or
pop
repz
and
js
push
shll
aam
dec
push
fnstcw
aad
push
test
insl
and
pop
clc
inc
inc
lea
adc
mov
mov
push
xchg
movsb
mov
jns
shll
out
lods
cmp
je
mov
pop
popa
les
imul
outsl
push
lcall
in
push
xchg
stc
jmp
jae
lcall
or
pop
adc
xor
cmp
sbb
lcall
icebp
scas
sub
sub
jle
mov
mov
mov
xchg
xor
mov
popa
jno
xor
nop
ss
cmp
lods
mov
out
or
dec
rcrb
ret
mov
jno
mov
sub
xchg
lds
lds
push
sti
mov
xor
insl
push
test
lock
sub
or
out
cmpsl
cwtl
jmp
sarl
lret
sbb
mov
inc
sbb
sbb
inc
mov
or
loope
mov
loopne
test
aad
inc
ffree
xchg
mov
or
out
je
test
fiadds
mov
gs
fnstenv
pop
aad
in
dec
js
out
lods
aam
fstpl
xchg
cmp
inc
ret
out
dec
cltd
mov
popf
xlat
mov
out
dec
mulb
bound
je
notl
adc
mov
or
mov
xchg
sti
jge
mov
icebp
xor
inc
mov
inc
pop
out
movsb
dec
inc
sbb
push
ss
dec
jb
xchg
fidivs
sub
add
repnz
sbb
push
mov
mov
arpl
out
push
xchg
pop
movb
mov
inc
dec
mov
adc
and
mov
sub
subl
jmp
adc
cmp
ret
pop
pushf
dec
and
dec
xchg
and
sub
mov
jbe
sbbb
arpl
adc
pop
cltd
jecxz
fxch
roll
mov
push
imulb
push
ljmp
bound
das
pop
test
cmp
lds
fldenv
outsb
push
pop
mov
sbb
and
cmpsb
xor
mov
insl
xchg
cmpsb
or
mov
sbb
jp
xchg
xchg
xchg
mov
inc
pop
mov
or
push
into
jecxz
adc
mov
cmp
sahf
jecxz
push
mov
adc
adc
mov
inc
hlt
xchg
pop
test
push
sti
lea
aam
shl
mov
loop
mov
pop
bsr
enter
or
mov
fldt
xchg
push
xor
mov
daa
mov
pop
lcall
fsubrs
lcall
adc
in
mov
inc
stos
mov
cmpb
aad
xchg
sub
outsb
stc
fwait
xor
mov
cmp
out
sar
lock
sub
inc
out
dec
sbb
outsl
pop
test
mov
in
xor
in
mov
out
xor
or
sti
and
cli
jbe
cld
adc
mov
inc
cmp
pop
negb
and
fsubs
lahf
jb
gs
orb
and
adc
push
sahf
pop
js
xchg
fs
jle
mov
in
repz
dec
filds
adc
mov
push
and
cmpsl
add
jge
push
fdivrl
mov
adc
inc
sub
shl
mov
xlat
lods
idivb
xchg
and
push
mov
popf
and
jge
push
lahf
push
dec
pop
add
xor
int3
cmp
dec
adc
aaa
pop
sti
or
jb
imul
test
sbb
jb
jg
arpl
or
add
mov
push
mov
lods
mov
ret
inc
xorl
outsb
lods
sahf
fnstenv
push
addr16
pop
push
test
dec
rol
cmp
ljmp
push
loopne
add
push
andb
adc
fs
mov
test
dec
mov
jns
mov
pop
dec
pop
bound
scas
or
cmp
fnstenv
add
roll
rcrb
stc
shlb
and
ljmp
testb
push
push
lahf
sbb
out
pop
in
fcompl
pop
lcall
mov
lret
idivl
sub
xor
xlat
addr16
inc
sub
es
inc
jl
ja
push
shll
xor
jb
adcb
mov
cmpsl
push
addl
aaa
das
mov
fs
or
mov
in
arpl
pop
mov
dec
xorb
cld
fiaddl
push
outsl
addr16
aad
in
ljmp
inc
jge
aas
repz
loopne
fimuls
and
in
aaa
jecxz
mov
xor
in
fstl
push
xor
into
sbb
in
and
lahf
pop
or
xchg
adc
jecxz
into
movsb
sbb
mulb
jp
jne
mov
mov
imul
cmc
xor
int
cltd
or
clc
and
mov
imul
jae
mov
insb
out
pop
in
rorl
dec
out
int
mov
cmp
nop
adcl
js
gs
xchg
push
mov
shll
test
mov
or
sarb
fucomp
in
pushl
cmp
rcrb
in
jns
popf
xor
jmp
das
out
xchg
lret
lahf
ffree
sbb
pop
loop
jp
aaa
jne
push
or
add
or
mov
ljmp
sbb
xor
dec
and
push
push
dec
outsl
daa
jg
inc
jle
dec
xchg
sub
adc
test
cmpsb
mov
xchg
dec
fsubs
jge
ficoml
sahf
push
lods
inc
xchg
mov
or
ror
lods
xchg
lods
mov
fildl
icebp
adc
mov
test
outsb
sub
in
gs
xchg
sbb
mov
arpl
in
int3
insl
mov
aaa
rclb
dec
jecxz
lock
int3
sub
in
jl
out
out
xchg
shrl
add
test
inc
push
call
push
push
loope
adc
and
jmp
nop
mov
mov
and
or
jle
sub
call
cmp
inc
cmp
ja
aad
imul
add
push
fwait
cmp
scas
mov
ret
popa
xor
out
rclb
pop
movsl
call
or
lret
xchg
cmpsb
and
repnz
sti
pop
mov
and
lcall
test
data16
int
xor
arpl
jge
mov
add
inc
outsl
mov
fcoml
mov
jnp
data16
das
cli
movsl
jp
insb
jg
out
mov
sbb
popa
mov
cmp
testl
ss
fisubrl
das
and
jae
inc
stos
inc
stc
fcompl
mov
mov
lret
and
push
clc
sub
xor
mov
sub
mov
lods
and
jne
sbb
pop
pushf
mov
flds
iret
push
cld
out
xor
mov
sub
pop
mov
push
fnsave
or
cmpsb
push
rcll
xchg
rol
sbb
pop
push
xchg
pop
ds
dec
fldt
mov
enter
popa
loop
notb
jp
mov
ror
aad
push
js
jne
pop
jle
icebp
arpl
fidivs
add
outsl
gs
pop
mov
pop
gs
mov
sti
inc
sub
daa
mov
sbb
or
or
jmp
js
adc
test
je
into
xchg
add
clc
lahf
std
mov
pop
mov
or
mov
jecxz
mov
add
mov
push
in
mov
push
mov
lds
or
pushf
std
in
icebp
pop
sbb
add
out
lods
mov
cmp
dec
jecxz
inc
movsb
push
xor
sub
sbb
push
jmp
fstps
pop
fsubrl
xor
negb
out
test
cmpl
jp
insl
add
notb
iret
xor
push
or
sbb
jno
sub
mov
or
hlt
cmpsb
jno
popf
or
shl
mull
loop
push
jb
cli
stc
fsubs
add
jge
fs
cld
movsb
xchg
ret
jl
xor
cmpsb
call
out
xor
sahf
cmp
arpl
loop
cli
out
add
or
or
movsb
sub
add
mov
nop
mov
cs
fisubs
aad
or
das
adc
and
jo
addr16
push
mov
push
inc
lods
sub
stos
push
movsl
mov
mov
and
mov
push
adcb
adcl
lock
add
dec
sbb
cmp
xchg
js
adc
mov
movsl
gs
dec
sub
or
dec
lret
aad
shl
test
bound
xchg
sub
jmp
inc
fs
jnp
and
dec
dec
and
stc
inc
sysret
add
cltd
xchg
sub
sbb
jnp
das
jg
std
sbb
repz
mov
test
or
xor
idivl
jl
je
and
adc
push
mov
pushf
or
mov
pop
or
push
or
in
in
adcb
add
or
or
jo
push
or
and
push
in
mov
loopne
mov
mov
ljmp
outsl
dec
je
cmp
test
mov
out
or
adc
or
stc
lcall
lret
xor
aad
dec
fisubs
dec
mov
inc
adc
push
mov
adc
ljmp
out
xor
nop
xchg
scas
dec
adc
addl
xchg
mov
jbe
loopne
pop
jge
push
dec
into
cmpsb
dec
xlat
ss
mov
add
flds
and
mov
jno
test
mov
cmp
pop
mov
push
sub
sbb
loopne
ficomps
and
call
outsb
fstl
inc
int
sub
imul
lret
dec
xchg
inc
sarb
cmpsl
pop
call
lahf
inc
mov
jmp
int
push
inc
js
xor
dec
mov
je
stc
cmp
pop
push
push
iret
sbb
pop
mov
daa
push
sub
jl
fistl
pop
stos
stos
outsl
lods
xchg
cli
jmp
fs
aam
mov
frstor
in
fnsave
inc
inc
or
sbb
int3
mov
pop
jne
in
add
addr16
sbb
sub
push
or
jg
pop
cwtl
mov
mov
lea
add
mov
dec
xchg
in
and
push
mov
adc
add
dec
mov
enter
sbb
pop
jp
push
or
lock
lahf
movsl
push
dec
xchg
cmp
xchg
sub
jp
sbb
jp
in
leave
daa
add
sti
pop
orb
push
cmp
lret
xchg
gs
shll
mov
dec
stos
push
xor
fwait
daa
add
cs
aas
or
in
mov
adc
sbb
cli
addr16
cmp
data16
mov
dec
test
int3
insl
or
js
mov
adc
push
rcll
ss
rcll
bound
push
pop
fiadds
mov
and
stos
lret
outsb
xchg
subb
setp
outsl
jne
mov
jae
outsb
fldt
cs
iret
stos
sbb
push
aas
call
popf
adc
mov
rorl
test
cmpsb
xchg
aaa
insl
fsubrp
fldt
adc
mov
mov
jecxz
add
mov
es
rclb
fdivrl
inc
add
mov
jne
mov
sub
test
jl
and
scas
push
inc
xchg
stc
jno
sbb
jne
ljmp
push
mov
push
xchg
pop
aaa
lret
sub
mov
mov
andl
inc
stc
psubw
shrl
hlt
leave
pop
push
push
mov
mov
jb
mov
cmpsb
fcoml
and
test
push
test
loope
fildl
aad
jmp
jl
nop
lret
fs
aam
pushf
cmpsl
fisttpll
ror
lahf
clc
stc
inc
push
call
xchg
and
clc
inc
aad
shll
rcll
sbb
add
data16
jns
enter
adc
sbb
aam
push
cmp
aam
xchg
les
arpl
sbb
cmp
xor
inc
push
mov
cs
pop
nop
dec
xor
aam
jb
ficoms
jno
sbb
clc
jb
add
inc
cmp
or
cmpsl
fisubl
xchg
push
les
push
movsb
and
pop
mov
test
jne
dec
hlt
cmpsb
adc
inc
outsb
pop
fidivl
push
sub
jne
jae
lcall
test
les
jge
mov
mov
fildll
adcl
scas
cmp
jmp
pop
sahf
xlat
pop
fwait
lods
out
mov
enter
dec
dec
push
inc
xchg
xor
adc
jecxz
loope
inc
dec
sub
xor
inc
out
arpl
hlt
cli
or
bound
dec
mov
sbb
ljmp
mov
dec
shll
mov
in
pop
fwait
inc
jle
imul
fstps
pop
inc
lcall
dec
pop
mov
push
push
outsb
push
and
and
daa
sbb
or
mov
sbb
scas
addl
and
cld
sub
sub
push
adc
rorl
das
scas
jmp
push
mov
addr16
jnp
loopne
sub
ja
aad
shlb
jno
mov
xor
loope
lock
mov
int
mov
pop
fsubrl
clc
pusha
xchg
lds
scas
clc
sub
aad
rclb
push
xchg
pop
xchg
mov
add
push
pop
xor
and
enter
xchg
cmpsb
stc
lret
mov
pop
lods
lcall
adc
movl
mov
sbb
push
mov
aad
jne
sub
arpl
jmp
sbb
aam
daa
xor
hlt
jmp
jg
mov
mov
iret
cwtl
stos
sbb
jnp
stc
cmp
dec
fst
jg
mov
and
lock
push
sbb
sti
insb
mov
or
inc
ret
mov
sub
lea
les
xchg
lock
mov
jmp
pushf
andl
or
xchg
inc
pop
add
cmpsb
pop
shll
push
or
aad
mov
lcall
jb
ret
jnp
arpl
or
loope
je
sbb
sub
or
insl
in
push
dec
lea
xlat
inc
pop
out
lods
push
loop
lret
stos
test
push
lcall
cwtl
jbe
adc
icebp
mov
cmpsl
jg
jmp
es
cmpsb
fmul
sub
aam
pushf
dec
mov
ljmp
fsubl
push
pushf
xchg
mov
adc
fildl
in
call
iret
aas
pop
or
daa
xchg
dec
or
cmp
cmp
movsl
push
repz
popf
addps
in
mov
adc
clc
mov
ret
fisubrs
xor
daa
addr16
rcrl
xchg
jo
inc
jg
mov
pop
push
mov
sbb
add
add
ljmp
mov
push
js
dec
cmpl
fnstenv
test
xlat
xor
dec
repnz
int3
mov
push
or
notb
rcl
test
stos
lods
jns
dec
sbb
setl
movsb
adcl
pop
hlt
mov
sub
push
bound
outsl
xchg
sub
lea
out
mov
push
xchg
push
mov
imul
xchg
sar
fiaddl
cli
lock
lea
sub
mov
aam
jnp
idivb
nop
dec
push
xlat
fists
add
mov
and
sub
imul
sbb
jmp
in
ret
add
lds
jb
faddl
adc
out
jns
xchg
repnz
rol
nop
es
rolb
imull
testl
lret
add
dec
xor
mov
jns
es
sbb
lcall
sub
popf
jecxz
daa
pop
std
mov
sbb
fnstcw
fstl
mov
mov
test
inc
lods
daa
lods
mov
icebp
cmp
ret
inc
add
data16
mov
popa
movsb
ja
inc
and
dec
in
call
mov
xchg
cmp
xchg
cmpsl
repz
aaa
repz
test
adcl
sub
in
pop
jo
fmull
pop
loop
cmpsb
pusha
popa
xor
mov
iret
fisubs
pop
adc
sub
dec
push
scas
std
or
jl
lret
push
xor
aas
loope
cmp
and
pop
enter
pop
cmp
or
fists
fimull
out
sar
pop
adc
adc
stc
mov
and
xor
out
fildl
data16
fisubl
inc
inc
or
push
aas
mov
add
sub
sub
xchg
inc
sbb
arpl
outsb
out
subl
popf
xchg
outsb
or
dec
pop
xchg
pop
les
stos
int
push
jb
mov
ror
mov
lahf
dec
adc
jmp
shll
fistpl
int3
inc
fisttpll
pop
push
xor
cmp
adc
cltd
repnz
repz
lods
enter
fucomp
mov
add
test
cld
subl
repz
jnp
push
pushf
dec
pusha
ficomps
add
push
loopne
mov
ljmp
rorl
scas
addr16
xchg
lods
cli
or
pop
or
cs
je
clc
and
add
and
ds
repnz
sub
insl
jae
ja
ja
adc
call
mov
lret
ss
je
ss
outsl
out
pop
jmp
cltd
inc
addl
mov
or
push
mov
inc
mov
xchg
mov
mov
and
mov
mov
movsb
sbbb
ja
xchg
mov
xchg
cwtl
gs
pop
xor
mov
xor
cwtl
jnp
push
cmp
scas
das
pop
out
lcall
xchg
inc
jb
movsl
push
cmpsl
bound
es
jns
mov
lods
jns
nop
pushf
push
aas
pop
cmp
ss
int
pop
mov
sbb
clc
xchg
pop
sub
inc
fwait
xchg
call
mov
test
insb
test
jnp
mov
inc
loope
dec
jg
xor
mov
add
lods
jnp
sbb
sbb
mov
and
das
add
jb
xchg
push
xchg
lock
shll
pop
call
xchg
test
pop
jl
xchg
inc
incl
les
outsl
cmp
or
int3
or
stos
push
jbe
cmp
cwtl
mov
cli
adc
mov
out
loope
ss
into
es
jge
stos
movsb
out
loope
push
scas
lret
push
mov
test
lock
clc
jge
aam
pushf
pop
fwait
aas
fldl
cmpsb
inc
push
jnp
mov
adc
fildll
iret
xchg
pusha
adc
cmp
fsts
int3
add
dec
mov
dec
in
adc
add
sbb
xor
fs
inc
arpl
fdivl
cmpsl
sbb
xlat
sbb
cmc
push
leave
push
ds
mov
cmp
add
push
test
lods
fldenv
cli
add
adc
and
mov
out
mov
xor
xor
xor
inc
pop
out
fisttpl
pop
jp
test
stos
xlat
xchg
pop
jbe
cmp
fsubl
andb
sub
cld
aaa
in
cmpsb
xchg
push
add
dec
jp
jno
add
xor
imul
es
push
aaa
mov
xor
sbbl
pop
pop
mov
mov
mov
into
in
mov
mov
mov
push
push
dec
out
gs
insl
push
xchg
sbb
xchg
jle
icebp
jo
lea
sbb
leave
mov
aaa
outsl
pop
sbb
adc
pop
pop
inc
xchg
imul
es
jmp
je
scas
ret
gs
rorb
cmpsb
insl
aaa
inc
add
dec
mov
mov
std
cli
mov
icebp
insl
cmp
xor
add
pop
lret
xor
repnz
adc
addr16
loope
and
jnp
sbb
iret
arpl
mov
enter
mov
shll
push
pop
push
fs
pop
push
pushf
cmpsb
mov
fstpl
hlt
pop
imul
movsl
subl
pop
fsubrl
test
and
mov
jns
popf
mov
jl
int
movsl
mov
sub
in
cs
lea
insl
lock
inc
push
jns
add
loopne
jge
sbbl
mov
add
sub
lds
dec
mov
xchg
push
fwait
mov
test
push
jmp
jae
mov
mov
push
fs
sti
addr16
stos
test
fsubl
mov
jge
mov
pop
adcb
test
in
movsb
clc
xor
ljmp
cmp
stos
push
fstpt
pushf
inc
jo
and
fs
loope
lea
in
push
sub
cli
rcrl
sarl
jbe
daa
cli
loop
mov
out
cmp
imul
push
lea
mov
xchg
add
aas
jno
stc
sbb
mov
jmp
lods
shrl
pushf
jnp
xchg
out
cmp
jle
ds
xchg
test
jo
jp
cs
adc
daa
mov
sub
mov
hlt
clc
mov
inc
lret
mov
jmp
sbb
mov
pop
add
push
int
loope
scas
aam
mov
and
movsl
and
nop
sbb
ljmp
pusha
mov
fnstcw
mov
jecxz
mov
sbb
aas
or
subl
sarl
out
jmp
stos
xchg
cwtl
adc
test
mov
outsl
push
adc
test
xlat
sbb
test
lods
test
insl
mov
mov
adc
pop
push
cmp
mov
add
rcl
imul
mov
fsubs
adc
xor
sub
lret
clc
shlb
xor
ror
movsb
mov
mov
xchg
jp
ss
jnp
lea
shrb
sbb
daa
push
jmp
add
fstpl
adc
mov
fidivrl
adc
sahf
pop
xor
lahf
push
mov
mov
cmpl
add
add
and
lahf
test
out
jno
sub
xor
lahf
mov
dec
out
fistl
lds
mov
cmp
outsb
xor
call
mov
sbb
jg
sbb
hlt
dec
push
aas
push
jbe
mov
ss
jae
pop
stos
call
cmp
jmp
xchg
repnz
js
fstpt
mov
lods
jne
test
inc
adc
shll
adc
stos
dec
cli
jns
adc
pop
aad
sub
inc
inc
sbb
cli
lods
std
lret
stos
jns
add
fstps
pop
cmc
fst
rorb
mov
bound
ja
imul
push
cmc
leave
xor
xchg
in
nop
lcall
loopne
mov
push
int3
pop
xchg
xchg
ja
rorb
push
sbb
cwtl
xchg
aaa
roll
mov
cmp
cld
jae
cmp
dec
or
push
stos
ss
xchg
sar
jmp
inc
xchg
filds
and
subb
std
push
sbb
or
fadd
lret
sub
sub
add
hlt
lock
decl
xlat
push
xchg
sbb
jno
fsubrs
mov
sbb
jnp
or
jge
out
add
std
mov
scas
inc
sbb
out
push
sbb
into
jg
mov
or
cmp
inc
sbb
cmp
bound
iret
shrb
xor
fimull
lret
lods
out
sub
or
jmp
dec
dec
cmc
std
or
cmp
rclb
fdivs
push
jmp
test
mov
mov
lea
adc
loope
nop
pusha
push
into
mov
pusha
cmp
cmp
jge
dec
ss
int3
xor
repnz
lret
sti
xchg
data16
adc
rcll
push
mov
or
dec
push
jnp
xchg
pop
cmp
mov
pop
adc
cmpsb
lret
mull
add
or
pop
sahf
push
rclb
cwtl
js
mov
sarl
cs
inc
mov
mov
ret
sahf
loop
fnstenv
mov
mov
cli
js
clc
inc
pusha
mov
ret
ficoml
stos
cld
sti
pop
aas
mov
fbld
mov
mov
sbbl
xchg
or
jle
out
fadd
paddsw
cld
mov
lock
lock
mov
popa
into
icebp
xchg
add
sub
dec
jle
or
xor
jge
add
sbb
jp
add
and
insb
movl
outsb
mov
gs
pop
jne
jp
sub
cmp
orl
sbb
mov
sub
es
ljmp
mov
dec
xor
push
xlat
jge
fstpl
pop
push
push
push
pop
fs
adc
fsubr
sbb
adc
inc
lds
mov
mov
mov
dec
in
push
jge
sub
js
or
notb
cmp
push
lret
sbb
pop
lods
scas
ljmp
add
dec
xchg
dec
cmpsl
jecxz
jo
lret
xchg
test
les
jb
das
jne
andl
push
sub
push
mov
cmp
das
subb
lea
fs
mov
dec
stos
jno
addl
outsl
mull
mov
sarb
mov
push
lret
icebp
imul
int3
fistl
push
rcrb
out
inc
incl
jmp
fs
or
aaa
jge
cmp
dec
cmpb
mov
jl
je
repnz
rcll
jmp
in
lret
adc
adc
xor
test
push
or
pop
cmc
and
lret
lock
sbb
add
inc
pop
mov
mov
repz
in
xchg
movsb
lock
test
movsb
mov
mov
jnp
xor
xchg
add
movsl
lret
or
lret
jbe
cmp
rcl
pusha
push
inc
inc
sub
stc
sub
cli
pop
loopne
and
or
fsts
jp
mov
shll
mov
pushf
enter
inc
dec
pop
push
inc
and
mov
add
test
push
mov
fucomi
dec
mov
hlt
cmp
xor
rorl
mov
cmc
js
in
pop
push
push
pop
fisubrs
icebp
call
test
adc
cmp
sub
clc
or
sbb
popa
adc
cmp
ds
pop
cmc
fadd
ficoms
mov
dec
loopne
sub
das
cmp
cmp
add
imul
xchg
pop
jns
cmp
pushf
xlat
inc
stos
les
pop
xchg
pop
shl
fsubs
outsb
mov
add
aam
add
add
into
or
lock
dec
sub
rcrl
dec
xor
mov
adc
cli
jmp
inc
imulb
jo
cwtl
xchg
mov
mov
push
dec
in
loope,pt
arpl
xchg
das
lea
pop
mov
movb
shrl
out
pop
jne
mov
jne
mov
in
mov
pop
and
js
xchg
fdiv
fcoms
jle
daa
cli
fs
loopne
fadd
test
gs
lret
mov
rclb
sbb
inc
cmp
popf
pop
mov
andl
adc
shlb
bound
mov
cmp
xchg
mov
dec
adc
sub
sub
enterw
sub
movsl
pop
push
xchg
test
dec
inc
add
mov
xchg
push
cwtl
adc
inc
push
mov
daa
xchg
int
dec
jno
arpl
loop
adcb
jae
sub
xchg
xchg
shlb
fbstp
dec
jbe
mov
sti
hlt
xor
inc
imul
gs
pop
lret
and
gs
popf
adc
xchg
xchg
xchg
and
push
inc
mov
shlb
aam
lcall
jne
orl
hlt
shl
or
jbe
push
into
push
mov
dec
hlt
fs
sub
ror
imul
add
test
jb
test
flds
mov
push
xorl
addl
sahf
sub
mov
lods
add
mov
or
push
push
loop
jbe
inc
cmp
mov
out
in
lahf
fcmovbe
js
mov
jo
data16
and
cmp
lret
mov
popf
out
push
mov
les
int
xlat
fwait
or
inc
dec
sbb
loope
dec
push
loop
cmpsl
stc
pop
into
std
mov
mov
jle
scas
test
mov
sahf
es
ja
push
xchg
add
out
or
pop
aaa
insb
aas
and
push
test
or
jle
int
stos
shrl
loope
dec
int
sub
cmp
fisttps
lret
das
sbb
cmc
and
in
jp
or
cmp
pop
xchg
imul
sbbl
jns
cmpsl
jg
push
das
mov
fwait
sub
cmp
mov
mov
mov
sub
sarl
aaa
fs
or
push
into
iret
sbb
int3
push
push
cld
movsb
cmp
test
aaa
popa
mov
lods
sbb
cmpsl
inc
xchg
fimull
outsb
pop
jp
jge
add
inc
pop
xor
xor
push
stc
adc
mov
sbb
push
fsubrl
xchg
xchg
and
test
xor
les
jg
mov
pushf
or
dec
push
sub
sub
dec
and
rol
out
mov
add
xchg
mov
add
push
sbb
aam
testb
pusha
cmp
test
mov
popa
and
sbbb
scas
push
mov
addb
mov
je
cmpsl
push
in
scas
subl
cltd
lea
dec
mov
sarl
and
xor
cmc
jge
push
cmp
lret
inc
mov
decb
popf
mov
push
ret
or
mov
negb
outsb
cmp
mov
push
cmp
or
mov
lcall
stc
cwtl
sbbl
xor
mov
mov
jae
mov
sbb
out
mov
dec
shl
ljmp
sub
out
pop
ja
cwtl
jo
cmp
ja
fs
roll
pop
cmpsl
dec
push
cli
mov
punpckhwd
and
mov
add
pop
sbbb
sbb
stos
js
ljmp
movsb
pop
aas
add
cmp
push
out
pop
jae
pop
jl
jecxz
jg
lret
repz
push
xor
sahf
ja
fldlg2
pop
push
inc
lret
jae
fcomps
mov
not
inc
cmp
out
pop
call
jl
or
clc
cmpsb
xor
in
adc
iret
js
test
in
jbe
adcl
adcb
xchg
cmp
pop
fidivl
and
mov
fsubs
inc
xchg
sub
les
je
push
or
mov
arpl
stos
stos
push
popa
xchg
arpl
iret
outsb
mov
xchg
int3
outsl
pop
jnp
jecxz
mov
jle
loopne
dec
and
std
es
jns
lods
movsl
movsl
into
or
jmp
inc
lea
xchg
xchg
test
call
ja
xor
mov
xchg
jp
and
pop
cmpsl
push
or
adc
adc
xor
inc
andb
jge
mov
jl
dec
test
mov
dec
aas
mov
bound
sbb
daa
fdivr
cld
and
fisttps
insl
addb
cli
jle
adc
repz
cmp
sub
dec
or
fstps
stc
jne
pop
aam
jmp
pop
sbbb
xchg
scas
psadbw
cmp
sub
adc
ja
and
sbb
pop
insb
adc
pushf
lods
stos
jbe
adc
fs
stos
int3
pop
out
push
cmp
ja
js
inc
int
dec
inc
repz
je
imul
cmp
mov
add
mov
in
cmpsl
mov
sbb
xor
pop
ret
cmpsl
imul
nop
js
addr16
pop
mov
fdiv
xchg
je
push
inc
test
repz
sub
jo
jbe
mov
loop
imull
addr16
mov
pop
jbe
dec
or
scas
xchg
xlat
mov
pop
adc
or
pop
and
mov
adc
or
mov
cmc
mov
testl
lahf
mov
add
fistpl
pop
ja
jb
nop
adc
shr
push
aam
stos
jle
sbb
xchg
adc
mov
sbb
cwtl
sbb
movsb
in
add
andb
push
out
out
inc
xchg
adc
adc
lods
or
sub
sahf
mov
cld
mov
pop
jnp
lahf
mov
in
rorb
dec
sub
fcmovnb
orb
adc
movsb
lock
hlt
xor
inc
fbstp
xor
cmp
mov
shr
mov
or
push
je
cmpsl
mov
xor
in
and
sub
icebp
roll
cs
lods
cwtl
mov
iret
out
mov
jecxz
or
pop
mov
imulb
ds
loopne
lock
dec
add
aad
pop
add
cld
xchg
inc
jecxz
adc
iret
pop
dec
fnsave
jbe
push
mov
lods
jno
aas
sub
daa
pop
sahf
sti
das
rclb
add
mov
icebp
fdivrs
jge
mov
push
popa
pop
inc
pop
fisubrl
lea
pop
incb
pop
mov
push
repnz
loope
jne
sub
call
xor
add
daa
lods
mov
popa
jb,pn
sbb
je
fnstsw
jnp
inc
push
or
and
add
std
test
mov
and
mov
dec
cld
cltd
je
inc
sti
loopne
sbb
sahf
or
clc
cmc
cmp
mov
outsb
pushl
xor
stc
int
sti
push
cmc
das
sbb
add
shr
xchg
jns
xchg
cmp
icebp
cltd
push
adc
pusha
mov
xor
sub
push
and
pop
add
out
ret
mov
and
xchg
sub
mov
cmpsl
or
mov
inc
test
outsl
or
pop
mov
test
addl
adc
jns
add
dec
mov
mov
cs
test
pop
xor
int
sarb
xchg
popf
and
mov
inc
lahf
in
ret
out
inc
or
xor
mov
leave
in
and
scas
adc
stos
fstpl
cmp
or
mov
lock
inc
jae
leave
jb
lret
jo
or
out
xchg
fucomp
sub
jne
lcall
das
jns
xor
inc
sarl
mov
out
pop
je
in
xor
add
cmp
push
enter
mov
cvtps2pd
pop
jecxz
xchg
hlt
hlt
mov
xchg
addr16
js
les
mov
inc
xchg
xor
das
cmp
add
push
cmc
aas
dec
inc
and
jecxz
cwtl
insl
shlb
movsl
and
adc
pop
lret
mov
lret
sbb
int
orb
jp
movsl
testl
iret
mov
mov
fs
fcomip
stos
mov
cmpsb
mov
jp
push
or
xor
jge
pop
xchg
xor
movaps
pop
jns
enter
out
sub
mov
ror
imul
and
add
cld
jae
adc
insl
jne
xchg
imul
jb
repz
mov
std
ljmp
call
stos
jno
jmp
jge
sbb
test
jbe
xor
pop
push
test
mov
jg
sub
aad
push
adc
push
in
cld
adc
and
lcall
sbb
or
push
in
mov
mov
fwait
cmpsl
jb
sub
out
jp
mov
seto
test
iret
xor
sub
lahf
fsubrp
sahf
add
clc
xor
cltd
lahf
scas
es
pop
pushf
sub
or
sbbb
xchg
cmp
dec
test
or
inc
mov
inc
push
icebp
add
lds
adc
mov
mov
xchg
cmp
out
xchg
and
or
scas
and
dec
dec
fsts
pop
movsb
int
mov
cmc
or
iret
and
pop
xchg
inc
xchg
scas
call
pop
mov
imul
push
fisubrs
sbb
into
jecxz
and
imul
inc
notl
cmpsb
data16
add
insl
mov
adc
push
pushf
xchg
fisttps
and
je
inc
lods
pop
into
into
pop
jge
mov
and
adc
jg
or
stos
or
pop
jbe
mov
mov
or
movl
jmp
arpl
stos
cmp
xor
lods
jae
outsl
lahf
stos
loopne
mov
pusha
cmc
test
lea
adc
cmc
aas
xchg
add
push
inc
adc
enter
bound
lret
jl
or
xchg
jmp
dec
add
imulb
iret
aam
rolb
mov
jnp
cwtl
jp
xor
daa
clc
jle
or
clc
mov
jecxz
jecxz
mov
adcl
pop
call
mov
xor
cwtl
pop
jle
gs
mov
sahf
test
lret
outsb
and
mov
fdivrl
rorl
mov
movsl
popa
cmpsb
mov
and
xchg
mov
and
mov
mov
pushf
push
mov
jecxz
stc
divl
jno
sbb
dec
add
cld
cli
data16
cwtl
sbb
sub
adc
fistl
out
rcrl
popa
pop
ss
arpl
jb
mov
and
leave
add
add
pop
test
jne
rclb
in
cmpsl
mov
subl
loopne
ret
shlb
out
int
imul
xlat
mov
inc
outsb
add
lret
cld
cmp
push
mov
andb
xchg
imul
cmp
jmp
lret
leave
in
jbe
cld
movsb
mov
lret
cltd
pop
dec
rorb
xor
stos
sbb
adc
and
jp
xchg
fs
in
or
fdivp
jnp
inc
jnp
xchg
js
mov
sbb
aam
fstpt
and
lock
and
subl
pop
outsl
fsts
sbb
inc
cmp
movsb
jno
in
test
out
sub
test
out
pop
xchg
pop
in
mov
test
mov
inc
jo
push
lock
mov
mov
in
aad
int3
pop
insb
pop
das
mov
or
cmp
adc
popa
scas
xchg
adc
int
cmp
mov
ljmp
cltd
jb
mov
xchg
jbe
adc
dec
loopne
mov
jno
lods
fwait
mov
pushf
inc
lcall
rcll
dec
call
xchg
cld
push
mov
fiaddl
ss
pop
mov
push
push
dec
sub
ja
icebp
out
aas
test
xlat
in
cli
stc
push
lods
in
push
jns
test
imul
push
add
and
cmpl
cltd
xor
aam
or
inc
sub
sbb
gs
cmp
add
xchg
pop
jl
cmp
dec
jo
adc
lcall
push
mov
sbb
fidivrl
pop
shl
stos
dec
pop
out
mov
and
cwtl
scas
shlb
arpl
xlat
aam
aas
test
mov
xchg
pop
out
cmpsl
push
aaa
loope
inc
push
push
add
add
xchg
add
mov
insl
mov
ss
insb
jne
lds
test
aam
fistpll
sbb
sarl
outsl
roll
inc
mov
mov
imul
sti
pop
test
pusha
mov
adc
or
pop
cmpsl
cmpsl
xorb
cmp
into
pop
mov
sahf
test
push
out
lret
out
out
arpl
std
sbb
mov
loop
out
push
pop
divb
pop
mov
jno
lea
xor
js
push
cltd
popf
ja
shr
out
xchg
jbe
repnz
mov
push
mov
ret
cmp
les
jo
inc
sbb
in
sub
jg
dec
mov
imul
jecxz
pop
push
out
push
xchg
test
or
ret
xor
stos
es
cmp
outsb
add
sbb
mov
inc
mov
movsl
cli
enter
mov
jno
dec
or
mov
xchg
fsubrs
pop
icebp
aad
test
dec
sahf
dec
jne
aam
cmp
inc
aad
mov
ljmp
jbe
outsl
shlb
jns
dec
loop,pt
mov
jo
arpl
out
imul
negl
lods
aaa
sbb
cmp
xchg
jns
cwtl
dec
inc
cmp
push
xchg
mov
inc
jno
sahf
dec
cwtl
cld
inc
movsl
stos
and
and
inc
loop
dec
enter
add
insl
cs
imul
imul
aaa
jle
mov
aaa
dec
adc
xchg
std
lock
push
sub
xchg
jge
into
inc
inc
or
insl
je
xchg
in
dec
dec
out
mov
es
ljmp
mov
dec
rorb
sbb
jecxz
sbb
jp
loope
mov
sub
sbb
jno
pop
mov
xor
jo
in
into
xor
mov
and
cmp
in
mov
fstl
cmp
jge
xor
sub
and
pop
xchg
jae
lock
sarl
jbe
cs
jle
pop
loope
pop
xchg
push
jne
ljmp
std
filds
cmp
xor
push
add
jge
and
cs
int3
sahf
shrl
data16
call
movsb
in
das
dec
cmp
mov
arpl
mov
jbe
cmp
movsl
cmpsb
out
aam
call
movsl
sub
insl
stos
mov
imul
in
frstor
inc
repz
dec
cmp
mov
sahf
sub
icebp
cmc
loopne
loopne
add
hlt
cwtl
push
leave
add
fidivrl
jl
inc
stos
adcl
nop
inc
mov
mov
sbbb
jmp
int
in
int3
cmpsb
icebp
mov
fs
insl
pop
sub
mull
push
jne
bsf
push
cmpsl
sub
dec
cltd
mov
loop
mov
lret
inc
sub
test
scas
cmpl
jl
xchg
sbb
push
mov
ret
sti
push
aam
ret
insl
mov
mov
dec
mov
les
push
sbb
mov
lret
je
add
lods
sbb
fldl
jbe
jnp
adc
mov
fsubs
shrl
insw
nop
cmp
inc
mov
insl
mov
adc
dec
adc
inc
gs
jp
cmp
cwtl
movsl
xchg
dec
pop
sbb
or
nop
adc
js
xlat
into
je
outsb
popa
int
gs
rorb
xchg
outsb
subl
sbb
subl
inc
mov
and
pop
sahf
mov
outsb
in
add
mov
bound
movsb
mov
adc
mov
cmpsb
cmp
data16
push
adc
repz
cmp
icebp
mov
into
loopne
xchg
xchg
jge
addr16
inc
out
es
out
es
fidivs
jle
cmp
mov
xchg
or
mov
scas
dec
mov
sub
mov
fbld
je
xor
lods
and
mov
or
pop
ljmp
mov
jmp
shlb
es
sbb
rclb
iret
sbb
add
outsl
fnstsw
insb
jns
in
inc
xor
adc
popa
adc
bound
jne
sti
xchg
subb
dec
test
scas
pop
cmp
sub
pop
repnz
add
jg
ja
lock
enter
and
xlat
loope
xchg
andl
insl
jno
sbb
arpl
popa
fimuls
xchg
push
push
test
fildl
cmpsb
fimuls
stos
cli
sub
jb
lods
add
add
sbb
fistpl
das
inc
decb
mov
cmp
mov
loopne
addr16
and
mov
pop
imul
call
aam
and
nop
sahf
movsl
mov
out
push
jae
rorb
out
xchg
push
inc
adc
push
outsb
cmp
test
iret
aas
fimull
lea
add
lahf
ds
cmp
add
lea
lods
and
mov
sbb
cltd
stos
adc
arpl
fisttpl
test
inc
push
fimull
in
cltd
decb
inc
pop
enter
or
jbe
pop
sub
mov
aas
mov
fsubs
sbb
lcall
jecxz
daa
es
dec
mov
mov
idivb
xor
out
and
dec
mov
test
pop
ret
cli
mull
lret
mov
mov
jg
dec
mov
adc
push
leave
xor
mov
xor
adc
or
fwait
mov
mov
pusha
mov
xchg
popa
movb
ret
pop
pop
lea
xchg
xorb
pop
aas
mov
hlt
mov
adc
inc
sti
out
jb
les
or
push
jo
dec
fcmovnbe
xor
xor
mov
jbe
rorb
fdivp
addr16
lahf
addr16
scas
sub
dec
mov
test
add
xor
int3
mov
jp,pt
fdivs
popa
jnp
pop
movsl
orb
xchg
xchg
mov
icebp
mov
cld
sub
insb
mov
mov
and
cmpsb
out
push
test
fmull
cmp
inc
into
inc
addb
and
cs
or
je
subb
cmpsl
or
xor
xchg
shl
stc
movsb
push
iret
mov
dec
fmul
cmp
insb
aaa
push
icebp
stos
sarl
push
pop
xchg
xchg
sahf
stos
cmpsl
xchg
mov
loope
push
jg
mov
xchg
icebp
sub
xor
iret
insl
add
ret
add
cmpsl
dec
insb
or
cmpsb
stos
push
xchg
nop
add
lcall
daa
pop
jle
inc
push
imul
or
dec
dec
jae
out
imul
imul
mov
inc
jp
or
sbb
lret
push
xchg
inc
addr16
mov
cmpsb
out
rcll
std
push
or
jl
mov
ret
adc
insb
dec
bt
lock
out
negb
xor
and
jge
bound
lret
sbb
or
adc
scas
inc
inc
jo
inc
or
sub
jns
jp
and
xchg
aad
jae
pop
mov
or
dec
xchg
cmp
dec
pop
sub
aaa
ret
mov
xchg
mov
sbb
ja
or
xchg
test
mov
push
jne
sbb
add
mov
add
add
push
adc
sub
mov
xchg
sarb
rcrb
fcoml
jb
dec
push
push
dec
out
mov
ja
test
mov
jmp
sub
mov
repz
loop
jecxz
xlat
fcompl
mov
hlt
jl
mov
mov
hlt
in
in
insb
xlat
ljmp
lods
add
sahf
out
cs
pop
sub
xchg
icebp
cmp
mov
sahf
mov
xchg
ret
or
inc
fimuls
push
inc
mov
imull
sti
pop
pop
jbe
pop
je
xchg
stos
shl
push
cli
test
fisubrl
cld
lahf
shlb
sbb
pop
lods
pop
mov
cmp
xlat
loopne
outsl
scas
add
sbbl
xchg
xchg
mov
shll
mov
fcmovnu
ficomps
cmp
in
lea
fs
in
dec
pop
pop
ds
cmpsl
ret
into
stc
mov
mov
out
repz
jmp
pop
inc
jo
sbb
int3
rol
jl
in
adc
adc
mov
sub
in
int3
push
and
fisttps
mov
ror
dec
jmp
es
adc
jns
je
hlt
lds
push
xchg
das
mov
loope
push
mov
lret
ljmp
iret
fdivrs
inc
jmp
clc
popf
xor
pop
filds
loopne
andb
in
pop
cmp
testl
or
mov
shld
fnsave
mov
cld
out
pop
jbe
outsl
inc
ficompl
jae
inc
jl
xchg
cltd
add
pop
mov
jae
or
lahf
sbb
sbb
push
inc
andl
mov
jno
cmpsb
jno
and
nop
pusha
adc
jbe
push
cmp
cmc
subb
xchg
pop
sahf
pop
fisubl
loop
mov
adc
iret
fnsave
cmp
pop
cld
daa
ljmp
rol
call
mov
jne
or
inc
jns
aam
les
pop
popa
or
sbb
imull
cs
aas
dec
lds
xchg
out
dec
fprem
push
inc
lock
push
cmp
mov
mov
stos
sti
cmp
lock
pop
mov
xor
clc
popf
sub
xchg
add
icebp
sub
push
in
sub
imul
test
pop
mov
insb
repnz
add
sbb
pushf
dec
add
dec
xchg
sbb
xchg
xchg
mov
mov
cmp
inc
faddl
add
xor
insb
notb
int3
loopne
call
loope
iret
inc
sar
shrl
enter
sub
out
sbbl
mov
add
push
push
loopne
pop
jae
and
jle
dec
sar
shrb
mov
loop
or
or
push
outsb
cld
inc
divl
cli
inc
lahf
mov
mov
or
and
xchg
mov
xchg
pop
cmc
aam
xchg
out
mov
mov
adc
enter
xor
pop
xchg
bound
je
icebp
inc
mov
subl
adc
stos
inc
mov
stc
and
cmp
dec
and
push
push
push
dec
lret
add
cmpsl
mov
sbb
mov
imul
xchg
dec
sub
aad
mov
mov
fbld
mov
aas
mov
or
icebp
out
add
mov
cmp
inc
xchg
dec
lret
nop
ret
mov
les
ret
stos
adc
movsl
sub
gs
out
ss
pop
shlb
or
mov
sub
std
pop
mov
jmp
sub
jne
lret
inc
inc
roll
and
mov
add
xor
mov
jne
sbb
inc
fwait
mov
push
iret
mov
cmp
popa
push
xor
sar
pop
mov
mov
and
or
jbe
pop
push
or
or
jmp
loop
mov
fdivs
mov
cmpsl
sbb
sub
or
pusha
test
cs
out
jno
lcall
and
sti
mov
je
clc
pop
mov
bound
loope
dec
loop
fidivs
push
adc
and
lea
push
nop
rcl
lcall
jg
sbb
lcall
test
imul
loop
mov
daa
inc
aad
outsl
int
les
std
outsl
loop
in
mov
mov
dec
and
jp
loop
in
adc
into
cmp
lret
ljmpw
add
andb
and
and
loope
jle
jge
pop
loopne
jae
cwtl
or
inc
mov
and
push
popl
sbb
aas
dec
imul
and
xor
sarb
jmp
mov
fdivs
test
leave
movsb
or
fucom
icebp
loop
adc
out
mov
popa
outsl
popf
pop
das
mov
xor
mov
std
mov
push
cmp
shlb
and
sbb
fwait
mov
mov
out
popf
lahf
shlb
in
mov
je
push
ror
fdivs
jge
jo
ljmp
xchg
nop
jl
shll
mov
mov
imul
and
icebp
and
daa
sub
mov
arpl
dec
mov
jecxz
jne
xor
pop
adc
fstpt
test
aaa
out
xor
add
mov
movsb
movsl
lds
jbe
mov
ret
mov
ss
adc
and
push
aad
arpl
mov
test
popa
js
cld
and
ret
shlb
pop
fwait
push
jbe
subl
inc
xchg
leave
ss
pushf
mov
call
cmp
lods
adc
out
dec
out
iret
addb
pop
dec
cmp
mov
ret
outsl
arpl
sbb
icebp
dec
std
push
in
outsl
mov
lods
nop
and
in
or
int
lods
jnp
jecxz
and
cmp
or
iret
stos
push
sub
pop
jb
sbb
sbb
jecxz
jle
call
lds
mov
fidivrl
and
inc
push
inc
and
pop
xchg
jp
out
cwtl
push
mov
cmp
aas
sbb
cmpsl
pop
push
cs
es
mov
stos
xor
outsb
sahf
xchg
add
mov
push
cmp
test
push
xor
or
cmp
lock
jns
jmp
push
mov
pop
push
jne
addl
sub
movb
add
sti
clc
pop
icebp
rorb
sbb
adc
ds
xchg
cs
js
mov
cmpsb
mov
in
addr16
sbb
inc
inc
ja
fstp
add
nop
imul
cmpsl
jne
mov
sub
mov
add
cwtl
pop
in
dec
mov
dec
inc
mov
lock
mov
orb
mov
mov
add
cmp
ljmp
out
inc
adc
sbb
bound
jecxz
push
faddl
aas
insb
fildl
jl
xlat
clc
fcmovnb
fsubl
orl
sub
cmp
push
dec
std
adc
push
xchg
mov
adc
ja
js
aaa
leave
dec
enter
add
jg
fnstsw
and
fidivrl
xor
int3
mov
sbb
and
lahf
lea
or
ret
mov
xor
mov
out
pop
hlt
jecxz
lods
mov
sub
push
mov
push
jne
cmp
lret
mov
ret
lea
pop
mov
nop
outsb
sbb
xlat
xchg
stc
cmp
push
insl
mov
movsb
cmp
sbb
push
popa
movb
nop
cmp
jns
add
test
aaa
js
insb
and
orb
pushl
notb
xchg
push
lret
xor
pop
shrl
xor
sahf
call
cmp
xchg
mov
hlt
into
repnz
mov
sahf
lods
icebp
clc
fildll
lret
in
shrl
adc
sbb
loope
movsl
out
mov
out
jp
je
dec
cmc
outsl
cmpl
pop
enter
mov
sbb
mov
iret
call
mov
std
ret
push
fisubrl
mov
div
adcl
push
mov
push
dec
mov
push
inc
pusha
or
push
cmp
mov
sub
inc
clc
mov
cmpb
out
push
not
xchg
jne
inc
mov
mov
out
push
jns
pop
and
inc
xchg
out
lcall
add
test
jmp
mov
and
dec
jl
shrb
inc
xchg
lock
jmp
sahf
cmpsl
and
and
add
push
pop
cmc
inc
add
mov
inc
loopne
mov
jb
lock
and
rcr
and
xchg
xchg
inc
test
jo
jo
hlt
push
in
or
xchg
popf
push
jmp
in
dec
fidivrl
int
jno
les
xchg
adc
hlt
sub
repz
mov
xchg
aam
xorb
int
and
insb
scas
lods
xor
mov
repnz
pop
std
fwait
sahf
sbbb
mov
inc
push
int3
mov
cs
fst
icebp
mov
test
dec
or
lods
mov
cld
imul
sbb
cmp
mov
ja
lea
lods
sbb
std
mov
inc
movsl
dec
negb
addl
pushf
dec
mov
sub
ljmp
push
mov
ss
fstpl
arpl
mov
xchg
test
mov
insb
lods
lock
push
movsl
xchg
nop
fsubs
push
cmpsl
mov
mov
cmp
mov
or
and
test
sbb
or
pop
addr16
push
push
adc
add
lahf
cmp
jg
mov
aas
lods
inc
cltd
jp
jp
pop
mov
repz
cmp
mov
sbb
ffree
andl
sub
mov
mov
and
push
push
or
sbb
sahf
or
std
cli
aam
jle
inc
or
dec
sahf
int3
xor
dec
sbb
push
and
and
fldl
cmpsl
fimuls
scas
lcall
test
pushf
aaa
sbb
js
hlt
push
mov
lods
or
pop
ret
int
mov
xchg
repz
rcll
fs
dec
or
push
xchg
xor
fsts
cmp
xlat
incb
xchg
clc
dec
jb
in
sbb
movl
inc
ret
clc
mov
mov
jne
cmpb
inc
hlt
imul
test
ficoml
test
push
push
sbb
sbb
loope
add
add
pop
fstp
push
rclb
stos
or
cmp
cmp
sbb
dec
repnz
mov
fcomps
call
aad
in
int
sbb
ljmp
int
inc
jno
mov
xor
add
sbb
loope
cmp
mov
and
cmp
xchg
jbe
ret
mov
addb
xor
pop
adc
lcall
xchg
pushf
adc
cmp
out
push
sub
in
xor
loope
js
inc
or
cwtl
mov
xor
pusha
inc
movsb
mov
and
dec
out
fcoml
mov
add
roll
jb
jbe
jne
sbb
jl
cmp
fimull
imul
xor
mov
jno
idivl
cltd
mov
and
aaa
mov
sbb
and
and
cmp
push
sub
pop
decb
stos
pop
or
int3
adc
dec
dec
xor
cmp
add
daa
mov
cld
dec
es
add
pop
pop
ljmp
std
sub
hlt
xchg
sahf
out
inc
cli
mov
mov
popa
movsb
out
pop
xchg
fisubl
dec
adc
out
fsubs
dec
xor
and
orl
or
dec
mov
mov
cld
aas
mov
xlat
adc
out
sub
vcvtdq2ps
out
ret
fimull
inc
push
not
push
xchg
or
insb
ja
cmp
lret
and
das
sbb
ret
icebp
xchg
adc
out
pop
xor
lock
les
into
iret
xor
punpcklbw
dec
jl
es
imul
orb
sub
cmp
fidivrl
test
jecxz
jo
or
push
mov
mov
add
inc
rcrl
outsb
ljmp
and
push
mov
push
paddusw
push
popf
jge
jge
insl
adc
push
xorl
or
xchg
test
sub
jne
in
imul
minps
sarb
test
daa
std
in
or
mov
adc
inc
cmp
jmp
sub
daa
lahf
filds
and
ljmp
imull
inc
push
jns
shrl
sti
jo
scas
adc
pop
jp
cwtl
mull
popf
dec
mov
pop
push
clc
adc
in
or
dec
fldcw
call
test
xor
push
pop
mov
lods
imul
cmc
repnz
push
adc
scas
ja
inc
push
mov
push
hlt
mov
xchg
cli
shll
call
mov
mov
sarb
lock
add
daa
push
aaa
notb
mov
es
neg
mov
stos
popa
pop
push
add
dec
xorb
xor
mov
mov
inc
push
inc
inc
fcomi
push
pusha
add
pop
jp
jl
dec
popa
es
dec
mov
pop
cmp
arpl
jge
hlt
or
gs
inc
add
inc
push
jge
or
and
and
mov
mov
cmp
into
imul
push
adc
sbb
repnz
push
mov
imul
or
ret
iret
cltd
fidivs
lock
fidivrl
loope
mov
pop
pop
add
xchg
cmp
or
in
popf
cwtl
clc
mov
and
scas
push
add
push
cwtl
mov
xor
sbbb
movsl
gs
mov
mov
hlt
push
cltd
aas
push
cmc
adc
push
test
and
in
daa
cmp
ds
enter
dec
pop
inc
or
mov
movsb
mov
xchg
jge
add
mov
testl
jo
xor
xchg
dec
test
push
cmp
dec
into
std
test
call
cwtl
jmp
out
mov
inc
adc
lahf
lds
je
push
add
jb
imul
lahf
or
daa
in
sbb
and
inc
cli
insb
xchg
cmp
stos
nop
mov
icebp
int3
ror
enter
cmp
pop
xchg
lods
and
cwtl
dec
xor
mov
inc
push
xor
orb
repnz
out
loop
jns
mov
clc
movsl
popf
int
xor
addr16
cs
das
in
aad
inc
cmpsl
js
pop
cmc
mov
cmp
push
shl
sub
gs
xchg
add
fidivrs
fstpt
stc
add
arpl
neg
xchg
sub
mov
test
xor
mov
jbe
dec
ret
sbb
fs
inc
shll
inc
gs
stos
rcrl
adc
mov
stos
sbb
jb
or
ret
mov
mov
ret
loopne
pushf
push
fwait
jg
out
das
and
aam
xchg
and
and
cmp
out
ja
xchg
adc
mov
xor
popa
or
bound
pop
xchg
sub
push
nop
aaa
out
sbb
xchg
jo
xchg
imulb
jo
scas
push
jmp
inc
push
mov
call
iret
sub
es
aam
lods
addr16
cmp
xchg
inc
int
sub
repnz
add
xor
icebp
adc
jbe
stos
inc
adc
pop
test
fndisi(8087
xlat
mov
popf
aaa
cmc
or
loopne
andb
pop
lods
mov
test
pop
push
xor
repz
dec
cli
popa
adc
nop
adc
mov
mov
mov
pop
aad
ss
jb
inc
cli
stc
push
xchg
mov
dec
lds
xor
int3
xlat
add
sub
lcall
subl
repnz
xchg
cmc
xchg
js
add
xor
pop
and
icebp
out
cmpsb
adc
int
fs
lds
push
pop
add
addl
inc
or
xor
rcl
jecxz
push
pop
sub
dec
xchg
push
fistl
cld
add
adc
out
addr16
xchg
out
adc
inc
add
scas
dec
rcl
add
cmp
in
pop
inc
aas
mov
adc
xor
daa
inc
rclb
dec
movsb
movsb
rcrb
xchg
es
mov
push
rcll
fucomi
fldenv
loope
xchg
ds
sahf
stos
fisubl
les
sub
sub
int
pop
jno
push
shrb
xor
push
fucompp
adc
hlt
mov
adc
add
mov
add
mov
push
movsl
and
sbb
shrb
pop
arpl
cmp
cmovl
cmpsb
es
xchg
jb
jnp
fcmovb
jns
sbb
out
mov
loope
subl
mov
cmp
mov
ss
fcmovnbe
sub
and
test
jle
jo
dec
xorb
inc
xchg
cmp
cmp
pop
inc
push
test
xchg
jp
pushf
mov
add
out
and
gs
movsb
jmp
mov
jp
fcompl
fcompl
jle
mov
xor
sub
mov
jns
pop
dec
cwtl
or
mov
add
jnp
call
aad
or
mov
add
push
push
sub
aad
fildl
lock
inc
mov
jo
push
xchg
jle
xor
inc
pop
mov
scas
out
xchg
pop
sbb
mov
mov
call
mov
push
popa
mov
pop
dec
lds
in
cmp
out
cmp
lahf
aas
cmpb
jg
xchg
xchg
lahf
pop
mov
aaa
xchg
mov
movsl
fwait
and
lcall
scas
mov
xchg
mov
mov
idivb
ljmp
mov
dec
dec
test
adc
pop
test
clc
inc
xor
push
cmp
out
insl
sbb
je
mov
lret
das
sbb
xchg
or
pusha
push
movsl
ret
mov
mov
mov
clc
repz
int
jmp
xor
insl
pop
rorl
jg
es
outsl
in
inc
or
fmull
inc
bound
jns
jecxz
out
stos
or
in
sub
dec
push
repnz
jge
xor
daa
mov
mov
pushl
sbb
xor
and
sti
arpl
test
lret
mov
cmp
arpl
and
int3
popa
and
sbb
adc
xchg
fdivrp
pop
mov
fisttpl
jns
test
adc
push
mov
leave
jl
push
leave
inc
lock
test
inc
aaa
dec
addr16
sub
arpl
adc
ret
fnstsw
push
sub
mov
por
mov
in
dec
lea
cs
scas
int
xchg
adc
dec
aad
jp
xchg
ret
add
add
clc
lods
lods
lcall
jne
enter
xor
lahf
sbb
jmp
sbb
testl
fsubs
mov
rcrl
inc
xor
sub
add
ljmp
inc
push
out
imul
bound
inc
xchg
xchg
sub
mov
dec
clc
inc
into
nopl
mov
cwtl
xchg
les
lds
int
insl
mov
add
rorb
rclb
mov
xchg
jp
and
lds
mov
cld
jns
les
rclb
jne
pop
mov
sub
mov
add
lea
lret
mov
rcl
fbstp
xor
fcoml
loope
mov
sub
and
jne
mov
or
and
imul
sbb
dec
scas
cmp
dec
std
shrl
je
pop
mov
mov
or
jb
push
outsl
imul
addr16
dec
incb
cs
mov
or
push
adc
mov
add
or
aad
or
xchg
sbb
jne
imulb
adc
dec
les
adc
dec
in
aam
mov
rcl
jne
push
mov
jnp
cmpb
repz
mov
int3
xor
dec
icebp
pop
jne
mov
push
jbe
push
ljmp
or
sub
aam
inc
fnstenv
pop
xchg
mov
ja
sbb
jecxz
ret
inc
aam
leave
and
jl
jge
jmp
or
push
cmp
fdivr
test
and
ss
lret
pop
fs
stos
jle
arpl
pop
xchg
jge
push
rcr
shlb
or
push
xor
xor
pop
pop
shrb
sbb
inc
jno
inc
cwtl
lret
pop
mov
and
and
push
jo
sti
sbb
xchg
aad
outsl
push
insl
bound
mov
sbb
cltd
dec
pop
lock
and
fnsave
fstpl
test
pop
jae
inc
mov
lahf
popf
ret
xor
std
sub
pop
test
dec
push
js
nop
mov
xor
mov
inc
cmpsb
leave
lret
imul
adc
push
xchg
inc
pop
cmp
dec
not
pushf
lea
pop
sarb
dec
clc
out
fmuls
mov
xchg
movsl
xchg
in
adc
std
lods
sub
jns
mov
dec
data16
add
push
inc
in
inc
lret
adcl
addr16
gs
arpl
cli
cmp
xchg
sbb
mov
xchg
inc
gs
adc
loopne
nop
data16
test
into
mov
fdivl
dec
sysenter
bound
dec
mov
hlt
jo
lret
fbld
push
push
out
jecxz
in
mov
mov
lods
pop
daa
pop
add
aam
sarl
pusha
add
sbb
dec
add
lock
lock
pop
lods
divb
pusha
out
xchg
or
dec
jb
in
inc
mov
out
dec
fnstenv
movsl
xchg
aam
pusha
ret
arpl
sub
test
cmp
cwtl
add
jmp
imul
pop
arpl
mov
test
inc
inc
and
mov
push
aam
in
jmp
or
pop
dec
dec
mov
cli
cmpsl
arpl
aas
and
push
mov
xchg
out
sub
pop
jno
cwtl
insl
or
xchg
cmp
movb
inc
cmp
fisttpll
dec
in
xor
movsb
inc
test
imul
daa
stos
sub
cltd
and
push
xor
insl
pop
jae
dec
and
mov
popf
outsl
xchg
je
movsl
int
xlat
mov
aaa
xchg
into
or
dec
imul
dec
or
add
fwait
xor
mov
xchg
inc
pusha
imul
add
lock
cmp
cs
adcb
inc
arpl
mov
or
and
push
cmp
xor
fs
xorb
stos
xchg
fwait
es
nop
cmp
std
cltd
adc
out
jno
fincstp
jbe
push
loope
sub
ja
lcall
popf
sbb
ljmp
jg
insb
mov
xchg
outsl
mov
repz
subb
push
mov
pop
rorl
shlb
push
pop
xchg
pop
es
int3
jb
lods
pop
sbb
sbb
sub
out
sbb
push
cli
and
xchg
andb
repnz
call
xchg
inc
mov
in
push
loope
dec
test
push
cmpsb
in
mov
cmpsb
inc
loopne
cmpsb
scas
jp
cmp
cs
fiaddl
push
dec
cmpsl
pop
ret
dec
pop
xor
and
mov
and
add
inc
mov
nop
xor
add
out
addr16
inc
ds
mov
jecxz
sti
jne
adc
xchg
jmp
into
inc
mov
pop
rolb
mov
sbb
ret
pop
mov
cmp
cmp
adc
xchg
jecxz
cs
fnstcw
inc
scas
pop
push
js
jp
into
imul
ja
mov
mov
adc
fsubl
mov
and
pop
clc
xorl
mov
jno
dec
jae
sub
xor
add
xor
push
fcoms
out
xchg
stos
lds
popf
inc
jle
out
push
popf
pop
lahf
jp
adc
mov
or
sahf
mov
in
adc
sbb
cmp
mov
mov
daa
cmp
jmp
int
sub
out
jmp
imul
mov
push
out
adc
mov
pusha
add
fdivrl
mov
pop
fwait
movntq
out
mov
mov
sti
aaa
lock
pop
adcb
pop
jb
xor
icebp
lcall
mov
insb
mov
ds
mov
jno
cmc
dec
mov
adc
add
je
das
movsb
lods
mov
gs
out
cmc
mov
stos
insl
add
cmpsl
pop
push
mov
movsl
jns
xchg
cwtl
and
lahf
or
sbb
jbe
xchg
enter
sub
bound
jnp
ds
mov
or
orl
dec
loopne
imul
add
jg
mov
mov
jae
leave
je
insb
inc
loopne
insw
das
out
mov
sbb
sarl
xchg
scas
mov
cmp
and
mov
das
outsb
push
fwait
xor
mov
call
ja
cmpsl
test
cmp
subb
sbb
sbb
and
shlb
sub
enter
les
push
add
xchg
aad
into
fdivrs
cwtl
neg
je
sub
int3
fdivrs
test
fldl
sbbb
sub
jo
aam
adc
push
and
in
fsubrp
ss
ficoms
cmp
fidivs
fnstsw
lret
mov
out
cmpsl
sti
cltd
add
push
and
mov
push
cmpl
mov
out
fdivrs
inc
adc
jmp
shlb
pop
lret
stos
jo
adc
jns
hlt
call
sarb
clc
ret
sbb
mov
xlat
data16
fld
fs
jnp
mov
push
jl
mov
cmc
out
mov
pop
in
and
and
popf
leave
in
or
adc
and
and
pushf
out
or
int
cltd
dec
popf
sbb
cwtl
jg
nop
mov
je
mov
icebp
xchg
sbbb
leave
aad
mov
jp
sahf
and
push
xchg
xor
loope
rorb
aad
sbb
xlat
leave
iret
scas
dec
push
mov
aas
movb
and
cmp
cli
mov
loop
mov
jb
pop
xlat
jp
adc
pusha
repnz
push
aaa
or
imul
jp
pushf
cs
js
lock
xor
imul
rcrl
clc
sub
pop
xor
pop
and
mov
arpl
call
and
fsubl
jge
nop
rcl
xor
shlb
outsb
cwtl
push
add
push
sbb
addr16
xor
add
fisubrl
das
sbb
adc
xchg
xor
fcom
xchg
cld
cld
aaa
xor
dec
sbb
push
imul
outsb
sub
insb
or
enter
js
lahf
js
xchg
mov
subb
ja
movsb
cmpsl
or
pop
push
xor
nop
and
into
stos
test
sbb
insb
pop
lret
pop
mov
sarb
adc
dec
out
sbb
push
and
pop
or
and
stc
xor
shrl
inc
fistps
imul
mov
jg
xchg
jne
imul
shll
jnp
and
loop
or
movsb
sahf
cmp
mov
test
mov
adc
xor
ds
adc
mov
gs
push
mov
js
mov
and
test
cmp
inc
pop
mov
adc
mov
arpl
popf
std
add
enter
fdivr
ficompl
mov
push
in
mov
jg
scas
arpl
mov
dec
ud0
int3
xchg
adc
mov
cmc
xchg
movsl
scas
dec
mov
sbb
or
push
es
dec
pop
mov
sub
and
and
or
daa
pop
fldenv
xor
jge
sub
xor
aaa
mov
lock
scas
sahf
stos
iret
insb
xor
sub
jge
cmp
xchg
add
mov
stos
adc
jno
iret
ss
divb
lods
cmp
or
adc
adc
dec
test
jbe
sub
popf
out
pop
xor
outsb
scas
loope
and
cltd
push
lods
cld
xor
repnz
outsb
mov
xor
jmp
pop
psubq
xchg
mov
lret
ds
xchg
or
mov
sub
pop
cmp
add
in
lds
mov
inc
dec
mov
call
insl
rcl
test
push
push
dec
iret
dec
imull
sar
xchg
xchg
mov
outsb
stc
stos
into
je
mov
adc
jecxz
mov
loop
clc
pop
or
mov
pop
loop
and
xchg
mov
push
mov
icebp
aaa
add
js
lods
mov
xor
sub
mov
cmc
shl
xor
testl
repz
jmp
cmp
ret
lret
add
xchg
lahf
xor
pop
test
std
cmp
pop
ss
xlat
inc
push
mov
mov
xor
notl
loope
popa
push
jo
adc
cmp
cmpsb
into
mov
xlat
cli
pop
pop
pusha
mov
and
int
push
push
arpl
and
shrb
cmp
pop
fidivrs
jmp
lret
mov
insb
out
mov
pop
outsb
xchg
cmpsb
clc
repnz
cmc
mov
fisttpl
jbe
jg
adc
adc
shlb
or
or
xchg
sbb
test
mov
aam
jg
mov
adc
mov
ja
sar
loope
jp
fldl
adc
add
add
clc
push
das
out
cltd
sarl
mov
adc
pushl
add
add
xor
inc
imul
into
pop
push
cmp
mov
sub
mov
sbb
mov
fistl
fnstenv
rcl
cmp
movsl
cmpsb
xchg
add
mov
add
out
dec
xchg
inc
mov
and
add
fsubs
movsb
lds
ljmp
std
mov
mov
into
xchg
xor
sbb
mov
mov
ret
fstpl
xor
fidivrs
cwtl
gs
gs
dec
mov
jecxz
outsb
out
je
jne
aad
xor
push
leave
clc
shl
jae
cmp
mov
addr16
mov
mov
ss
and
in
lret
dec
sub
bound
int
loope
aad
cmp
mov
pushf
mov
mov
ret
inc
inc
xchg
xlat
ficomps
das
or
push
lret
fwait
jecxz
xchg
xor
xchg
mov
jecxz
popf
sbb
mov
pushf
sbbb
add
adc
push
je
sbb
popa
stos
sbb
push
push
and
repnz
iret
sub
mov
dec
sub
mov
xor
hlt
pop
sbb
jl
fnstcw
sub
les
les
enter
aam
mov
dec
mov
loope
push
aad
movsb
cmpb
es
loope
sub
xchg
xor
ja
scas
push
scas
lret
lret
daa
repz
js
sbb
loope
cwtl
jbe
mov
push
and
and
test
pop
push
jecxz
movsl
mov
and
and
repnz
sbb
outsb
add
adc
or
mov
dec
mov
cltd
rcl
mov
dec
mov
sbb
sbb
sbb
daa
push
shrb
movsl
add
jo
ljmp
lahf
or
and
sub
push
sub
and
adc
leave
xchg
call
insl
jns
sahf
das
pop
movsl
test
in
jg
fwait
push
lret
sbb
mov
leave
cltd
mov
in
inc
dec
pop
push
lcall
lock
pusha
fcmove
out
push
lds
test
jl
fcoml
or
mov
jecxz
mov
pop
out
pop
mov
fidivrs
lcall
lds
dec
and
ds
pop
ret
xchg
and
dec
pop
and
xor
movzbl
daa
dec
loopne
mov
into
inc
lret
stos
ja
cmp
frstor
stos
cmp
push
stos
cmp
mov
mov
xor
lret
out
fistpll
psubusw
pop
mov
cmp
testb
jae
sub
dec
jne
sbb
pop
fimull
xor
stos
lcall
scas
xchg
inc
in
mov
rcrl
jge
mov
pop
cmp
dec
loop
lods
sub
dec
cmpsb
rcrl
sub
ds
in
adc
sub
stc
sbb
inc
scas
pushf
push
cmp
sbb
mov
xchg
btc
lret
in
adc
mov
mov
push
fs
cmpsl
imul
rol
add
call
jns
mov
int3
in
jp
in
add
cmpsl
and
mov
dec
orb
or
mov
ret
mov
xchg
add
out
push
jae
inc
fisubrl
mov
insl
jb
push
dec
test
xor
pop
ret
push
fcoml
cmp
call
cli
mov
sbb
jl
adc
jecxz
dec
cs
sbb
call
dec
aam
pop
inc
lret
add
xor
jg
std
mov
in
inc
dec
repz
lea
movsb
stc
push
gs
test
ffree
movsl
push
dec
in
dec
lret
cmp
jg
shrl
cs
adc
xchg
mov
push
sti
insl
test
inc
pop
int3
xor
pop
shr
stos
xchg
dec
pop
pop
and
pop
push
inc
or
and
push
mov
jmp
gs
scas
stos
lea
xchg
push
in
fs
mov
adc
clc
jp
jge
es
lock
sbb
gs
add
push
loop
mov
shrb
lret
lds
movsl
ss
test
and
subps
cmp
or
lahf
hlt
pop
push
push
cli
push
jp
mov
cmp
adc
fmul
std
mov
movsb
in
jns
mov
sbb
bound
inc
pop
or
xor
popa
mov
mov
into
adc
add
add
mov
inc
dec
dec
xchg
and
pusha
insl
ss
mov
inc
cltd
idivb
rol
mov
dec
lret
lds
lock
cmpsb
mov
push
adc
xchg
fstp
or
aad
inc
loope
out
mov
cltd
cli
rorb
cmp
mov
and
inc
ljmp
lret
stos
jecxz
xor
out
cmp
dec
lcall
bound
mov
movsl
pop
lods
mov
fdivl
pop
push
push
pop
data16
add
gs
out
jo
cmpsb
insl
sbb
test
add
mov
sub
inc
stos
lea
roll
out
inc
xor
push
push
cmc
ljmp
int
popa
push
xchg
mov
mov
push
inc
mov
ss
push
lcall
dec
push
fstps
add
shlb
mov
out
dec
scas
gs
jns
inc
imul
into
sub
cs
insb
or
push
mov
adc
enter
insb
cmp
push
xor
or
adc
out
pop
test
std
mov
ja
outsl
dec
push
cmp
xor
cmp
jmp
imull
inc
xlat
movsb
dec
out
push
ret
lea
pushf
pop
je
push
jp
aam
fwait
divl
sbb
popa
jl
mov
imul
lcall
and
leave
dec
or
dec
cmp
push
popa
subb
stos
movsb
and
or
fdivr
repz
xchg
jg
sbb
push
lahf
outsb
stos
or
ret
out
mov
ds
inc
mov
xor
ret
pop
cmp
arpl
xchg
cmc
adcl
xor
add
rcl
enter
cmpsb
iret
ljmp
cwtl
js
xor
leave
mov
jno
data16
mov
sub
xchg
xor
jns
lea
out
outsl
lret
sub
sub
lds
mov
gs
mov
popa
add
mov
xchg
lret
pop
aad
pop
mov
arpl
sbb
xlat
orb
pop
adc
xchg
stc
repz
pop
pop
and
decb
shlb
sbb
mov
mov
sbb
dec
dec
push
ficompl
xor
jbe
int
dec
test
jle
stos
test
push
lds
sub
jne
mov
pop
mov
mov
lahf
pusha
pushf
inc
xlat
push
je
or
cmc
cli
mov
push
ja
adc
repnz
dec
aas
ljmp
call
cmp
hlt
xchg
fwait
pop
push
je
les
in
das
adc
nop
cltd
leave
in
call
sub
shll
cmp
xchg
arpl
sahf
add
test
or
push
scas
repz
mov
sbb
pop
push
sbb
adc
mov
add
ljmp
mov
mov
call
and
inc
lods
push
outsb
bound
mov
aaa
jge
xor
cs
adc
inc
sub
push
dec
cmp
inc
mov
xchg
mov
enter
inc
sti
dec
xchg
out
aam
cmp
movsb
add
mov
cmpb
xchg
jb
mov
leave
sbbl
js
xchg
and
push
outsl
jg
mov
sbb
sahf
cmp
lahf
pop
dec
pop
push
je
call
xchg
mov
mov
mov
jl
push
or
cmpsl
mov
add
push
and
test
jne
inc
into
shr
mov
add
pop
movsl
jnp
pop
xchg
fwait
cwtl
repnz
xlat
mov
ret
push
dec
rclb
in
mov
pop
add
imul
repz
out
imul
push
xchg
test
push
out
arpl
cs
cmp
shll
push
stos
mov
fisttpl
xchg
xor
add
je
inc
sbb
push
jmp
inc
inc
push
in
repnz
cmp
mov
jnp
int3
adc
js
lea
in
fcmovb
scas
js
lods
pusha
out
mov
and
rcl
popf
cs
popf
ret
xchg
push
inc
test
or
arpl
mov
cmpsb
mov
arpl
js
ljmp
daa
pop
add
dec
clc
or
dec
dec
and
pop
mov
xchg
push
mov
call
xor
outsl
pop
pop
xor
mov
adc
mov
aam
movsl
lods
xchg
or
cld
rorb
lea
push
into
xchg
mov
les
loopne
or
inc
jnp
lds
mov
lret
cmpsl
and
sbb
pop
cld
pop
and
or
and
rolb
jecxz
sbbl
imul
xchg
add
add
sub
xchg
adc
push
pop
mov
push
cmp
fidivrl
push
cmp
dec
lock
jno
cmp
inc
cld
pop
addr16
outsb
dec
cmp
in
mov
outsb
cmp
or
inc
xor
xchg
js
fwait
out
xchg
sahf
movsb
imul
movsl
les
inc
add
insl
xchg
leave
frstor
inc
test
cmp
jnp
and
push
jnp
cmpsl
imul
and
movsl
dec
push
inc
lret
push
les
negl
and
lods
test
sbb
stos
xor
mov
int3
xchg
fucomi
mov
pop
fs
popa
ss
jle
dec
cmp
jl
outsl
mov
push
push
sub
fldcw
xor
movsl
inc
je
jp
test
or
aam
mov
dec
sbb
idiv
mov
adc
pop
aam
ljmp
dec
cmp
inc
cmp
mov
sti
std
cli
mov
outsl
cld
add
hlt
dec
push
mov
imul
idivb
mov
popf
mov
pop
enter
rolb
dec
inc
ret
add
jne
scas
arpl
idivb
xchg
or
and
ljmp
pop
adc
sbb
bound
test
xchg
imul
sub
inc
push
xchg
mov
hlt
xchg
sub
sbb
popf
mov
pop
out
fistl
loope
fnstsw
loope
scas
lret
pop
ds
pop
idiv
es
push
out
lahf
xchg
add
inc
jo
cld
inc
lret
or
movsl
xchg
jae
push
push
sub
inc
punpckldq
mov
aad
xor
add
aad
sbb
in
cmpsl
pusha
mov
out
stos
lds
or
imul
fisttpll
xor
test
lods
push
inc
and
scas
aad
mov
lret
push
mov
sbb
les
stos
dec
fisubrs
fs
cmp
stc
lcall
popf
cmpsl
lods
and
and
aaa
sbb
pop
push
fsts
push
xchg
aam
xor
jb
aas
sbb
inc
int
xor
aas
pop
sbb
sub
and
jns
cmpb
dec
jne
jno
nop
dec
mov
jnp
clc
inc
mov
out
pop
mov
adc
mov
out
mov
mov
dec
fadds
jge
inc
mov
mov
sbb
andb
pop
jle
ret
fnstenv
mov
mov
scas
and
pushf
outsb
in
flds
bound
adc
fldenv
push
pop
mov
imul
inc
mov
rclb
icebp
roll
arpl
mov
sbbb
insb
sbb
inc
into
push
sbb
mov
addr16
pusha
sub
adcl
insb
js
nop
int
jo
in
sub
adc
outsl
lahf
lds
jp
cmpsl
ffree
or
test
or
int
out
pop
outsl
mov
incl
stos
fwait
shl
test
es
insl
in
into
pop
or
jmp
mov
fisubrl
xlat
loope
jecxz
xchg
sar
addb
insl
gs
lcall
mov
adc
dec
pop
and
or
jle
inc
dec
mov
dec
and
loope
inc
sub
jmp
or
mov
add
add
std
rcl
and
ss
nop
cmp
dec
sub
cmp
insl
orb
jae
xchg
test
fdivp
pop
push
xor
mov
push
lods
in
outsl
jne
sub
xchg
int
in
aam
outsl
inc
mov
aam
adc
or
cmp
adc
hlt
mov
cmpsl
pop
mov
cmp
loope
mov
mov
call
stc
in
cli
xor
pop
push
add
xlat
pushf
movsl
cmp
sub
dec
inc
pusha
jnp
push
test
in
jns
dec
test
je
sbb
sub
fisubrs
subl
jl
cmp
mov
push
adc
push
and
je
fwait
mov
into
push
pushf
sub
stos
jg
iret
call
sbb
dec
and
shl
cwtl
add
fnstenv
or
aam
aas
mov
mov
jno
insb
cltd
js,pt
fistpll
daa
movsl
repnz
sbb
mov
jb
stos
mov
dec
and
mov
data16
js
outsb
xor
lret
movd
add
inc
mov
js
mov
xchg
sub
jo
push
sbb
mov
fnstsw
and
dec
xlat
popa
arpl
je
push
hlt
mov
or
mov
out
shlb
test
cld
and
jg
xor
arpl
fs
cld
cmp
dec
pusha
inc
cs
xchg
cwtl
adc
mov
lcall
pop
ss
mov
pop
sbb
jp
arpl
iret
jle
imul
sub
cmp
ds
hlt
scas
xchg
inc
push
in
push
push
push
dec
adc
adc
scas
pop
aas
dec
cmpsb
out
xchg
mov
xchg
je
clc
or
clc
and
pushf
enter
enter
inc
pop
les
xchg
cli
inc
stc
push
pop
idivl
daa
lods
dec
lods
dec
ret
cmp
jecxz
lcall
adc
adc
pop
stc
pop
fidivrl
push
inc
push
adcl
mov
sub
cmc
mov
rcl
or
mov
idivb
in
data16
pop
add
jno
inc
iret
fisubs
dec
sbb
iret
sbb
rol
in
mov
inc
repz
inc
fwait
mov
sub
xlat
add
mov
nop
jecxz
sbb
les
cmpxchg
xchg
lds
push
inc
cwtl
test
and
xchg
popl
in
fcomps
push
mov
mulb
xchg
inc
loopne
aad
cmp
int3
jo
xchg
aam
push
lahf
cmp
sbb
jle
mov
sub
dec
xchg
mov
cmpb
stos
in
adc
xor
loope
dec
push
imul
dec
sub
cltd
icebp
outsl
imul
xor
push
push
xchg
pop
jle
lret
jmp
iret
adc
test
sbb
push
imul
testb
pusha
xorb
ja
push
mov
aam
cmp
sti
scas
inc
rcll
rcrl
dec
pop
leave
shl
fcmovbe
mov
orb
xor
adc
cmpsl
xchg
mov
mov
hlt
int
inc
sbb
mov
jge
jge
sahf
pop
mov
add
lret
arpl
or
jmp
cmp
lcall
ficompl
sub
aaa
push
xchg
dec
rorb
cmpsl
mov
mov
pop
bound
pop
xorl
push
adc
mov
popf
jecxz
into
into
pop
shll
or
adc
movsl
mov
stc
adc
push
int
cli
push
imul
mulps
lods
pop
ret
push
push
dec
lcall
out
xchg
jbe
mov
loop
sahf
and
lret
dec
push
pop
aam
pop
mov
mov
sahf
cmp
inc
and
jecxz
or
xor
jae
lcall
or
pop
push
je
clc
jmp
push
add
sarl
in
test
les
jae
mov
loopne
stc
xchg
inc
xor
xor
jecxz
jp
hlt
xlat
inc
lahf
push
xchg
arpl
push
lds
out
cli
into
dec
pop
lret
cwtl
mov
lds
push
cmp
mov
adc
std
repnz
push
mov
jns
lds
push
pop
ret
mov
orl
cmp
outsb
into
je
es
movsl
push
andb
sbb
fs
jmp
les
rcrb
jle
sar
or
in
push
mov
call
lahf
sub
cwtl
aaa
mov
lcall
rcrb
ja
test
fdivrp
aam
sbb
out
out
ficomps
adc
mov
fs
repnz
arpl
rorl
sarl
mov
mov
int3
adc
mov
test
movmskps
pop
enter
sbb
sub
popa
dec
pop
mov
in
pop
lds
or
daa
mov
pop
das
test
mov
xchg
sbb
inc
int
dec
mov
jnp
or
loope
ret
loopne
mov
movl
stos
iret
aaa
xchg
int3
adc
lret
xor
sbb
inc
xrelease
push
adc
push
lcall
jb
addb
imul
popf
dec
jno
jnp
sub
jno
push
mov
mov
stos
push
pushf
bound
fcoms
mov
out
je
nop
jnp
inc
insl
pusha
mov
mov
idiv
les
push
pop
or
adc
lahf
adc
sahf
dec
add
mov
pop
xchg
jle
les
jbe
addr16
call
movsl
push
jl
addr16
push
add
pause
stos
loope
bt
inc
stc
xlat
xor
call
or
xchg
jo
cmpsb
clc
mov
cmp
je
in
or
or
and
push
in
leave
lcall
mov
xchg
inc
decl
add
sbb
jnp
push
out
xchg
rcl
movl
sbb
mov
or
push
mov
lahf
insl
mov
inc
in
mov
dec
cmp
and
jmp
pusha
shl
lcall
mov
out
ret
enter
scas
adc
or
sar
testb
sahf
shlb
into
push
fnstenv
xor
xor
push
enter
repnz
sbb
jne
cmp
and
mov
lcall
test
clc
lods
jle
inc
and
adc
mov
jmp
xchg
sub
push
shll
sub
arpl
stc
mov
push
adc
fnstenv
inc
jp
mov
or
int3
mov
xchg
lret
int3
pop
fisubrs
in
scas
push
cmp
adc
aad
mov
popa
inc
into
push
cwtl
and
or
mov
or
mov
test
out
aaa
daa
rcll
push
xchg
es
mov
aaa
adc
jmp
ss
mov
sbb
out
jmp
lcall
int
jnp
mov
jno
std
pop
loopne
adc
dec
and
xchg
jbe
popa
and
aaa
mov
daa
in
inc
mov
inc
cmp
scas
push
sbb
test
sbb
xchg
or
xchg
divl
lret
dec
push
jg
aas
dec
add
leave
loop
adc
add
sub
xchg
sub
sbb
pop
mov
mov
sbb
push
add
xor
pop
jmp
popf
xor
ret
and
int
pusha
inc
cmpsb
push
sbb
lea
xchg
jae
xchg
pop
icebp
fildll
push
pop
push
xchg
aas
or
xor
rorl
roll
push
xchg
dec
xchg
addl
push
adc
xchg
daa
es
addl
mov
lret
mov
icebp
outsb
data16
inc
inc
pop
or
dec
mov
mov
jmp
push
xchg
cmc
jne
inc
mov
or
arpl
ret
cmc
xchg
cs
fisubrs
movsl
push
pop
pop
cmpsl
mov
sbb
ja
scas
jns
adc
xchg
out
pop
push
mov
mov
lret
ficoms
adc
sbb
push
repnz
pop
cld
stc
lods
add
mov
out
or
shrl
jecxz
mov
aas
cmpb
out
data16
or
sbb
inc
mov
xor
lods
js
lahf
aas
xor
jl
outsb
out
add
xor
and
push
mov
adc
loop
xlat
and
arpl
scas
dec
cmpsl
or
cmp
xchg
or
pop
lods
cmpsb
add
jl
test
dec
add
mov
push
dec
cmpsb
or
inc
cmp
loopne
cmp
push
ret
sti
clc
mov
sbb
sahf
xor
in
add
add
jbe
jnp
jne
js
inc
aas
add
sbb
and
js
adc
pop
or
push
sub
sbb
jo
lds
loopne
sub
xor
pop
pop
cmc
mov
lahf
push
cmp
aas
mov
jb
cmpsb
shrb
inc
movsb
add
mov
cmp
clc
jno
sub
xor
cltd
push
fstl
cmp
mov
push
mov
push
push
pop
sbb
sbb
xchg
enter
jge
push
jb
add
fldcw
ljmp
in
and
arpl
mov
negb
push
aad
adc
sbb
movsl
js
inc
cmpl
inc
out
fs
outsl
fdivl
dec
push
add
xchg
orl
lods
mov
push
dec
add
and
add
scas
std
aas
pop
incl
test
push
pop
aad
and
orb
add
adc
add
push
add
addb
add
dec
add
ja
mov
cmp
aas
add
dec
fists
repnz
mov
mov
jmp
daa
lods
sbbb
ds
clc
jp
fldt
out
xchg
sub
add
insl
jg
nop
sub
cmp
pop
push
cmp
and
push
mov
into
inc
add
loopne
and
push
inc
out
scas
fstl
cmp
ss
dec
xor
insl
push
icebp
mov
mov
jb
jno
outsb
imul
xchg
test
mov
test
or
add
testl
push
dec
push
mov
adc
loop
iret
popa
cmp
mov
push
mov
aas
mov
test
xchg
mov
mov
xor
cmpsl
xchg
cmp
iret
cmp
add
xchg
inc
stos
fptan
mov
mov
push
xor
dec
sub
mov
outsb
adc
jecxz
es
xchg
loopne
hlt
leave
inc
outsl
push
icebp
ficomps
jo
jae
sbb
mov
mov
push
dec
xchg
cmpsb
mov
or
out
lret
repz
inc
add
mov
jmp
shll
sbb
mov
enter
out
push
push
rcl
fcomps
mov
ret
daa
in
push
dec
mov
test
mov
push
bound
push
sub
cld
jmp
or
ja
xchg
popa
add
xlat
gs
inc
aaa
fsub
mov
rcrb
je
fdivr
lods
dec
sbb
jne
and
mov
aaa
test
xchg
lods
cld
or
aas
push
repnz
arpl
xor
fstpl
aad
jne
mov
out
outsb
pusha
dec
mov
xchg
arpl
das
in
sbb
cwtl
xor
movsb
lods
fsubs
inc
mov
sub
bound
pop
xchg
dec
mov
lea
imul
mov
push
ret
jmp
std
xchg
shrl
jecxz
inc
fildl
push
jecxz
ljmp
adc
jge
mov
cmc
pop
insl
in
adc
std
out
notb
sbb
pusha
jmp
sbb
dec
adc
lods
pop
xchg
xor
push
ja
cltd
repnz
mov
dec
add
sbb
fwait
xchg
addr16
or
cmc
fstl
sbb
dec
imul
call
adc
mov
mov
gs
cmp
mov
sbb
lret
mov
sbb
lock
and
and
sti
fcomps
mov
push
xchg
mov
xor
inc
add
mov
dec
popf
and
xchg
dec
stc
sahf
negl
cmp
das
sub
xor
jecxz
pop
jg
mov
or
rolb
pop
ret
xchg
push
loopne
loopne
or
and
scas
int3
pop
add
fmuls
jmp
sarl
imul
rcr
ss
mov
xchg
mov
icebp
mov
sti
ret
pop
xchg
arpl
inc
mov
xchg
ret
dec
std
popf
ljmp
xor
and
push
push
jmp
push
mov
out
sti
rcrb
je
stos
test
mov
fdivp
adc
cmp
test
push
cmp
nop
nop
es
xchg
and
aaa
lea
lahf
outsb
pushf
xorl
aam
mov
ja
adc
mov
imul
idivl
loopne
inc
iret
cmpsb
dec
inc
in
call
repnz
sub
mov
mov
push
call
mov
in
mov
test
sub
cmp
mull
sbb
icebp
gs
lds
neg
xchg
popf
add
ret
mov
fbld
rol
incl
cmpsl
rclb
cmp
fldenv
sub
in
icebp
jle
sti
das
stos
out
jnp
pop
jb
dec
test
cmpsl
pop
mov
jecxz
fnstenv
arpl
mov
lock
adc
pop
enter
movsl
dec
sbb
jbe
je
mov
jmp
sti
pusha
cmp
ret
inc
sbb
mov
cmp
addr16
in
in
arpl
outsb
jb
dec
repz
cmc
scas
jae
mov
cmpsl
xor
cmpsl
xchg
lods
sarl
pop
mov
and
das
daa
int
jno
mov
sbb
mov
mov
in
loope
aaa
js
popf
add
rcrl
addr16
jl
rcll
hlt
sti
push
ss
aam
out
sti
mov
fiaddl
pop
or
cmpb
repnz
ss
jbe
decl
ret
orb
sahf
or
adcb
cmpsl
in
gs
insb
push
ret
scas
and
jg
mov
xlat
insl
jecxz
and
sub
ret
jge
and
fwait
add
or
popa
mov
sub
es
loop
mov
shll
xlat
shlb
fwait
mov
cmpsl
out
nop
cltd
imull
jbe
popf
ret
stos
out
add
in
push
aaa
ds
mov
sub
in
out
add
or
mov
les
test
cmpsl
xchg
push
ret
jbe
adc
sub
cwtl
je
loop
iret
cmp
test
fwait
int3
cmpsb
or
inc
lahf
daa
std
xor
inc
bound
test
lahf
xchg
sub
fbld
stc
push
icebp
cmpsb
test
loope
jnp
fdivs
scas
imul
add
xlat
repz
xor
fmul
into
std
adc
jo
and
push
dec
sub
xchg
mov
push
insl
xchg
shlb
xor
fs
incl
adc
int
cmpsl
leave
cwtl
push
cltd
xchg
mov
mov
cmc
inc
lcall
adc
jbe
pop
idivb
idivl
mov
daa
outsb
stc
jbe
jbe
imul
jns
mov
dec
xchg
fistpl
jae
push
mov
or
cltd
or
movsl
dec
mov
loop
cmp
inc
sub
mov
lret
fldenv
cmp
aad
fcmovnb
add
adc
pusha
fcoml
es
repz
sarb
pop
jmp
sbb
mov
fcoml
scas
dec
pop
in
or
int
cs
shrb
out
mov
in
repz
mov
ja
sub
add
call
adc
push
imul
mov
push
cmp
mov
bound
push
mov
dec
leave
cmp
scas
cmp
xchg
int
jl
lods
pop
mov
add
in
adc
mov
leave
ljmp
or
pop
out
jne
xlat
push
repnz
cld
mov
clc
scas
jb
cmp
test
inc
in
ficoms
mov
ja
lcall
fcoms
testl
sbb
mov
dec
sbb
popa
shll
cmp
pop
pop
dec
sub
iret
jne
sar
mulb
mov
mov
lret
into
mov
pop
jne
sbb
xchg
push
cmpsl
test
inc
xor
mov
push
lahf
leave
cld
or
je
enter
mov
mov
in
ror
and
icebp
and
push
lds
rcrl
jbe
es
mov
cld
pop
sub
sbb
out
shlb
pop
xor
jmp
and
and
mov
mov
test
inc
vmread
les
cld
mov
xor
xor
inc
mov
or
pop
xchg
pause
fcmovnb
or
cmovo
out
add
pushf
dec
lds
inc
push
jge
dec
pusha
fsubrs
aas
daa
lcall
push
pusha
inc
push
dec
lahf
xor
mov
inc
adc
scas
f2xm1
jg
push
in
jb
mov
push
dec
dec
js
bound
pop
out
inc
pushf
shl
pop
cmp
imul
jne
push
and
pop
sbb
and
mov
push
mov
sub
mov
jp
mov
xlat
lods
out
test
inc
mov
je
stos
mov
sbb
lcall
outsl
mov
loop
and
mov
push
out
cmp
sub
mov
into
pop
xor
sbb
pop
adc
mov
xchg
mov
mov
inc
data16
les
and
mov
out
push
rorl
stc
cmc
shll
xor
xor
pusha
roll
loopne
roll
ja
push
xchg
pop
sbb
and
in
scas
mov
inc
dec
fidivrl
xor
xor
push
mov
int
mov
lea
inc
mov
jnp
aaa
mov
stos
cmp
fiaddl
sbb
mov
out
dec
stos
mov
mov
jmp
stos
add
stos
dec
push
scas
in
or
add
std
in
jns
mov
adc
sub
call
sbb
mov
scas
hlt
xor
int3
jecxz
mov
dec
jecxz
ja
dec
cmp
or
and
in
sahf
push
test
xchg
sbb
mov
pop
mov
pushl
int
in
insl
aad
xchg
xor
fbld
pop
jg
ljmp
cmp
xchg
inc
daa
fnstsw
out
incl
sbb
jnp
cmpb
jne
jmp
pusha
pop
jecxz
and
or
lcall
push
fldcw
and
int3
sbbl
dec
into
ret
sbb
rep
xor
push
jmp
popf
mov
loopne
adc
mov
jmp
call
sti
inc
xchg
in
mov
adc
test
xor
pop
test
add
sahf
orl
dec
mov
test
daa
movsl
data16
iret
lock
cmpsb
mov
pop
add
inc
mov
in
orb
sub
insb
mov
dec
or
jns
enter
mov
mov
sub
mov
push
sub
repz
xchg
pop
outsl
dec
or
sbb
adc
movsl
ja
add
push
andl
sub
rorb
ret
mov
notl
divl
and
adc
js
adc
add
hlt
sbb
and
xchg
les
imul
test
sti
xlat
sub
xchg
and
jp
lds
imul
jmp
mov
into
pop
test
dec
pop
test
pop
mov
test
scas
enter
outsb
aas
leave
push
lahf
mov
loopne
les
js
mov
pop
push
loope
or
movsl
test
bound
pop
pop
push
cmc
ljmp
mov
pop
or
or
out
xor
xor
cld
lret
call
mov
pushf
lret
sbb
je
jo
pop
mov
fsubs
and
ficomps
and
stos
ss
ljmp
dec
cmp
ljmp
jg
mov
sub
mov
fld
popa
pushf
lds
clc
aas
push
pop
scas
or
jnp
lcall
xor
enter
lods
xchg
mov
pop
mov
xchg
pop
clc
mov
loop
loope
pop
test
cmp
insb
in
scas
push
cmpsb
xchg
pop
int
iret
imul
ja
add
mov
ds
xchg
add
syscall
mov
adc
lret
cli
aaa
incb
inc
fdivs
dec
mov
in
mov
sar
push
ljmp
jmp
or
xchg
fcompl
pop
jle
jge
je
cld
pop
push
outsl
inc
jl
jge,pt
rcpps
mov
push
dec
test
pop
and
gs
inc
xchg
and
inc
out
movsl
pop
inc
mov
arpl
and
outsb
imul
dec
pop
xchg
push
lret
adc
xchg
ljmp
xchg
es
test
movsl
mov
xchg
arpl
ljmp
movq
mov
ds
in
out
pop
xchg
mov
jge
idiv
lret
mov
fisubl
push
pop
push
cmp
enter
rclb
push
cmp
dec
nop
cmpsl
arpl
or
imul
fcoml
sbb
ret
xlat
mov
push
iret
jb
sub
outsb
out
sbb
rcl
sub
movsl
lahf
jecxz
cs
cmpl
jecxz
mov
lea
fsubr
or
mov
xor
pop
xchg
jbe
pop
xchg
fwait
mov
vmread
ret
call
or
and
jo
ds
add
mov
repz
sbb
jge
push
xchg
jp
pushf
aam
lods
cmp
loope,pn
rolb
lcall
imul
lea
dec
push
or
lcall
and
xchg
or
jecxz
fwait
xlat
mov
imul
scas
push
xchg
sahf
pop
jb
or
test
insb
mov
repz
sbb
out
pop
xor
cmp
push
pop
daa
and
js
xchg
rcrb
mov
test
out
lods
jle
shlb
mull
sbb
stos
testb
jp
push
cli
fcompl
dec
xor
inc
dec
xchg
push
imul
mov
mov
pop
mov
inc
sbb
hlt
out
popa
aad
sub
shrb
cli
dec
pop
fs
mov
sbb
std
pusha
mov
mov
xor
and
xor
inc
out
mov
sbb
mov
call
mov
xchg
push
popf
repz
mov
mov
push
fwait
jmp
mov
repnz
mov
mov
jle
xchg
dec
mov
stc
mov
lcall
or
push
push
dec
pop
loope
jns
test
mov
sbbb
pop
int
jne
cltd
xor
adc
and
push
dec
sarl
or
ret
mov
cmc
add
ficoms
pop
sub
cmc
lods
sahf
xchg
insl
inc
xchg
sub
push
jnp
adc
sbb
das
loope
push
jno
push
cmp
mov
jo
xchg
xchg
cmpsb
test
adc
lods
rcrb
inc
fbstp
xchg
into
adc
leave
stos
adcb
add
out
out
aam
or
mov
lods
loope
movsl
push
adcb
loope
outsl
dec
mov
shlb
rcl
jp
jp
dec
inc
sub
jne
shlb
mov
mov
push
lcall
outsl
fdivrs
pop
inc
pop
dec
cs
mov
dec
adc
sbb
cld
jnp
ljmp
outsl
cmp
movsl
daa
inc
sbb
enter
mov
mov
or
add
imul
cltd
inc
dec
push
jb
pop
popf
inc
fdivrs
repz
push
inc
daa
fstpl
xchg
shll
les
pop
sahf
cmpl
xor
or
cmp
cld
into
hlt
imul
mov
mov
pop
adc
movl
pop
out
nop
movups
mov
enter
jg
inc
mov
repz
fiadds
xor
les
lods
jb
mov
ss
pop
lods
in
or
out
loopne
mov
cmp
popa
push
pop
nop
popa
fistpl
mov
loopne
mov
inc
push
mov
add
cmp
mov
sbb
test
sti
sub
push
mov
aaa
mov
pop
xlat
pop
xchg
xchg
sti
enter
cmpsb
sbb
data16
xor
pop
push
sbb
shll
jnp
flds
cmp
sbb
xor
cmp
xor
mov
aad
mov
mov
lods
lret
xor
xor
lds
out
jns
add
sbb
popl
andb
jns
cmp
cmpsl
jmpw
add
or
movb
cmpsb
fs
enter
sbb
daa
test
movsb
sub
orl
inc
push
add
inc
lods
mov
sbb
clc
call
dec
or
mov
jp
fildl
sub
popl
mov
pop
movsl
bound
mov
xchg
mov
pushf
sub
xor
xchg
jp
cli
add
clc
inc
dec
push
push
stc
test
xchg
addr16
gs
mov
fdivrl
mov
pop
push
inc
mov
pusha
les
xor
in
sti
xlat
ret
push
push
adc
stc
push
je
cld
push
and
or
imul
ds
enter
es
iret
inc
dec
int3
fcoml
and
movb
fcos
ljmp
inc
cmp
cltd
cltd
cmp
push
sub
add
sub
into
add
inc
add
les
add
sbb
sti
and
icebp
push
cli
inc
popf
mov
clc
or
int3
jno
scas
stos
mov
loop
inc
inc
neg
out
lods
dec
sahf
sbb
adc
adc
or
out
xchg
mov
jge
mov
subb
push
loopne
fnstcw
pop
xchg
inc
das
mov
into
pop
and
sub
mov
pop
js
dec
and
jecxz
sbb
pop
gs
movsl
arpl
xchg
dec
out
pop
cmp
roll
jno
xor
call
mov
pusha
sub
add
add
leave
mov
adc
dec
popa
dec
xor
mov
pop
xor
mov
add
sub
arpl
aad
sbb
ljmp
pushf
fisttps
daa
xchg
repnz
inc
dec
inc
xor
adc
mov
popa
enter
imul
or
or
add
and
aaa
mov
shll
cltd
rorb
xchg
pop
push
bound
xchg
sbb
push
addr16
leave
sbb
sbb
idivb
popa
call
mov
repz
ja
add
nop
jmp
inc
jbe
mov
call
fs
cmp
add
dec
xchg
mov
lock
mov
push
sahf
cmpsb
inc
mov
ss
in
aas
loop
out
imul
dec
jnp
leave
inc
sbb
jle
loop
sbb
or
jle
rclb
mov
aam
das
incb
pusha
lods
dec
mov
and
inc
orl
cmp
pop
shlb
or
aaa
inc
outsb
lods
cli
jg
add
mov
add
push
and
push
imul
popf
sbb
test
sbb
fsubrl
mov
pushf
sub
sbb
fmull
mov
in
sbb
nop
fcomi
inc
mov
pop
dec
mov
jge
fbstp
fcmovne
cli
mov
mov
add
xor
pop
pop
imul
push
xlat
dec
adc
fwait
mov
sub
les
jmp
bound
push
stc
mov
and
insl
faddl
std
repnz
mov
rcrl
dec
lret
sub
jno
cld
xchg
xor
jae
int3
mov
es
jb
je
shll
and
push
js
addr16
fstps
insb
inc
and
push
pop
outsl
and
or
adc
xchg
das
loope
cltd
jae
call
cli
jo
test
sub
scas
in
jecxz
in
mov
data16
sub
or
test
int3
lcall
aad
cmp
inc
xor
xlat
imull
sahf
add
push
scas
jnp
decb
jmp
lret
scas
sub
enter
sub
stos
jb
mov
icebp
mov
mov
xor
test
aas
xor
jmp
das
add
mov
push
sub
enter
mov
js
jecxz
rcl
in
out
call
dec
dec
and
divb
mov
mov
dec
inc
rcrl
and
insb
sbb
sti
sahf
stc
mov
scas
pop
idivl
xchg
and
push
cmp
cld
jg
insb
add
addr16
or
and
ds
add
jle
mov
or
fstpt
jp
lret
pushf
or
movsl
in
mov
cmp
ss
jae
push
mov
pop
mov
fisubrs
dec
cli
pop
sbb
xor
dec
sahf
clc
cmp
loope
leave
xchg
xor
xchg
call
adc
movsb
mov
jns
out
out
adc
insl
xlat
es
push
mov
call
pop
mov
jmp
xchg
jl
ret
or
test
pop
movsl
push
ficoml
xchg
imul
lret
pop
iret
mov
sub
dec
mov
sbb
cmc
dec
xchg
cmp
aaa
add
ror
and
add
mov
mov
adc
push
mov
cmp
sub
add
in
push
inc
or
pop
test
xchg
mov
sbb
dec
lock
lret
mov
mov
or
outsl
les
pop
mov
cmp
sub
dec
mov
xlat
je
xchg
aas
fildll
inc
sti
mov
dec
or
xor
sub
sub
mov
clc
or
xor
mov
outsb
loope
jns
stos
js
xchg
adc
sub
xchg
fisubl
dec
nop
ret
inc
push
movsb
fcomps
lods
out
sub
mov
call
mov
inc
popa
dec
arpl
mov
adc
or
cld
out
and
dec
or
inc
cmp
mov
add
pop
fidivrs
adc
inc
daa
sbb
lods
sub
jb
cmp
test
sub
cltd
test
mov
lcall
sub
jecxz
arpl
shlb
pop
add
das
xchg
push
stos
ror
sbb
repz
add
insb
imul
clc
stos
int
xor
leave
lock
pop
mov
daa
push
repz
and
xorb
push
stc
jmp
mov
mov
sbb
lock
das
push
mov
inc
cmp
gs
xor
mov
testb
add
pop
std
cmpsl
hlt
mov
dec
xor
call
xor
imul
aas
jg
mov
dec
add
data16
or
lock
mov
cmp
lds
push
lret
pop
jae
cmc
pop
sahf
sahf
pop
fxch
pop
sbb
push
clc
pop
or
push
mov
cmp
int
mov
int
movsb
idivl
mov
jle
imul
ds
inc
xchg
and
popa
cwtl
fs
sbb
lea
enter
inc
aad
and
lock
pop
sub
and
jb
mov
inc
hlt
push
cld
divb
mov
outsl
shr
and
call
call
mov
add
xchg
cld
in
scas
test
mov
mov
mov
stc
xor
in
jg
test
sbb
stc
mov
xchg
xchg
jbe
xchg
arpl
popf
fistpl
xlat
jnp
shlb
xchg
pop
lret
jl
fs
push
lcall
lcall
ficomps
xchg
inc
jmp
loop
and
addl
jp
imull
fwait
jno
xor
dec
pushf
hlt
xchg
sbb
xchg
pop
add
mov
cmp
lods
lods
addl
sub
in
jp
adc
dec
cld
jl
daa
je
call
test
cmp
loop
jne
popa
adc
xlat
addr16
loope
icebp
jl
inc
gs
or
call
das
xchg
mov
js
andl
and
gs
push
fyl2x
xor
adcl
mov
pushf
push
test
mov
mov
dec
flds
je
fisubs
add
inc
fwait
leave
leave
pop
jns
test
push
sbb
js
push
sub
jmp
push
rorl
out
mov
fcoms
sbb
daa
sub
insl
push
leave
xor
fbld
xchg
pop
xor
repnz
loope
and
pop
adc
gs
stos
adc
in
push
stos
out
adcb
xlat
das
xchg
test
repnz
push
addr16
fdivl
mov
pop
lock
test
adc
add
les
cmpsb
or
jl
push
lds
mov
iret
bound
sbb
add
int
or
sahf
xchg
ja
or
mov
pop
or
in
in
out
xchg
push
je
mov
pop
jg
xor
cmp
faddl
xlat
mov
jge
enter
sti
jne
mov
imul
sbb
popf
imul
sbbb
out
jmp
sahf
in
xchg
insb
es
sub
fidivs
push
push
adcl
adc
push
mov
aas
rol
int
and
lcall
push
jno
test
sbb
cmp
outsb
pop
inc
sbb
faddp
sub
clc
cmp
cmpsl
cmc
mov
jns
mov
mov
ss
xchg
inc
jg
out
roll
iret
je
sahf
dec
pop
pop
xchg
mov
gs
test
cmc
lret
pop
ljmp
and
dec
std
ficomps
xlat
cli
lret
mov
imul
hlt
cmpsb
imul
aam
iret
mov
fcomps
and
push
push
orl
pop
cmpl
mov
mov
xor
pop
pushf
cmp
lods
cmp
xchg
or
mov
add
ss
cwtl
push
sbb
mov
paddsw
in
inc
xor
inc
shl
xlat
pop
sub
adc
and
sti
inc
and
dec
cmc
jnp
push
xor
push
xchg
jae
mov
js
or
pop
sbbb
push
ja
xchg
add
mov
dec
and
push
out
popf
stos
push
mov
add
adc
add
stc
repz
and
adc
cld
add
testb
jo
jne
orb
xchg
pusha
add
push
xchg
jnp
imul
test
inc
in
aas
cli
addr16
mov
es
mov
fidivrl
inc
ljmp
mov
add
fisttpl
imul
mov
sbb
pop
mov
mov
jae
pop
push
das
mov
mov
fsubr
pop
rorb
jne
xor
push
jnp
jbe
sti
in
fsubrs
xchg
adc
or
daa
xchg
fadds
ret
xor
hlt
scas
fstp
xor
stos
out
jp
and
pop
xchg
mov
int3
stos
xor
push
lds
and
into
inc
xchg
cmp
xchg
jno
sub
cli
jecxz
roll
int
in
outsb
dec
xor
imul
push
lcall
sub
cmp
cld
dec
aam
lea
rcrl
jno
aad
into
dec
in
adc
fcom
pop
std
in
fadds
or
jge
lods
xor
push
sbb
test
mov
fstpl
das
mov
xor
jmp
inc
arpl
fsubrs
xchg
xchg
dec
and
or
icebp
pop
mov
adc
fbld
fidivrl
cltd
lds
aam
mov
inc
push
cmp
mov
mov
xor
cmp
rcrl
mov
xchg
sbbb
push
scas
rol
into
movsb
fs
xchg
test
int3
pop
hlt
sarl
daa
jns
mov
mov
jmp
xchg
ficoml
insb
addr16
jg
and
cmpsb
add
ret
jo
pop
pop
pop
std
cmp
xchg
out
add
add
and
cmpl
pusha
xchg
fstpt
or
nop
pop
divl
mov
mov
dec
pushl
jmp
pop
push
stos
ret
sub
sahf
shll
pushf
std
xor
sbb
dec
sub
pop
cmp
xchg
addr16
rcll
xchg
out
fwait
jns
test
sub
pop
sub
call
lret
add
fcmovb
mov
push
test
mov
cmpsl
add
sub
dec
mov
mov
jae
data16
outsl
loop
adc
inc
adc
out
pop
cltd
fstps
xchg
repz
adc
mov
adc
sub
aas
inc
jecxz
pop
cmp
test
lods
roll
pop
insb
mov
out
push
cmc
flds
push
push
mov
sbb
lea
sbb
rorb
pop
out
xchg
stos
idivl
and
rorb
jno
sbb
dec
adc
push
ficoml
fmuls
popf
mov
xor
xor
cmp
lods
sbb
cmp
mov
xor
loopne
lea
or
call
jl
inc
push
or
inc
repnz
int
pusha
jmp
out
dec
imul
imul
loope
lods
dec
mov
pushf
adc
xor
jne
sub
ds
mov
ret
ret
adcb
int
sub
inc
ret
sbb
xchg
add
pop
mov
rcll
lahf
popa
fdivp
mov
mov
xor
dec
loop
pop
jae
js
into
lods
pop
stos
jle
aam
mov
pop
pop
psrld
add
out
add
je
nop
dec
or
push
mov
mov
iret
lea
mov
push
pop
xor
xor
popf
jne
push
mov
jo
inc
arpl
or
lds
pop
push
outsb
pop
popa
shrl
jge
scas
sub
pop
cltd
sbb
cmpsl
outsl
or
fmuls
and
call
stos
les
push
lods
cwtl
adc
loope
xchg
mov
repz
fsubr
cmpsb
jne
push
pop
or
data16
fdivrp
mov
out
mov
inc
jle
cmpsb
fists
push
fwait
notl
outsb
sub
xor
sub
incb
mull
inc
in
and
inc
lods
ljmp
mov
jmp
fiadds
sub
movsl
mov
aaa
xchg
adc
add
sbb
pop
popa
dec
jb
fwait
add
mov
mov
imul
in
jb
std
mov
gs
and
ljmp
je
xchg
out
inc
pop
sub
xchg
jb
jbe
cmpb
sub
into
sub
mov
cmpsb
sbb
cmpl
xor
rcrb
dec
fs
fsubs
pop
jl
dec
add
bound
mov
mov
sub
cmpsl
bound
cmp
sub
mov
jbe
push
cld
shlb
dec
xchg
aad
mov
cmp
jns
cmp
loop
and
or
lret
inc
xchg
mov
leave
xchg
xlat
mov
stos
and
jne
and
xorb
inc
mov
mov
cld
aam
dec
pusha
shlb
pop
add
imul
cmpb
scas
push
sub
xchg
dec
aam
mov
mov
stos
out
shll
adc
stos
xor
sbb
lret
mov
mov
lods
mov
jle
sub
or
into
xchg
movsl
push
lcall
fnop
mov
test
adc
leave
arpl
sub
push
mov
inc
nop
pop
stc
fidivrs
xchg
and
sahf
jp
xor
mov
pop
cmp
in
das
xchg
ljmp
ss
mov
faddl
jge
movsb
pop
push
std
test
repnz
shlb
aas
std
and
filds
mov
xchg
mov
fisubrs
aam
pop
sbb
in
jno
popf
icebp
adc
jl
cltd
loopne
dec
xchg
mov
xor
stos
test
inc
scas
xor
lret
aas
sub
repnz
shlb
les
clc
xorb
addr16
lods
stos
or
das
arpl
nop
bound
xor
jg
pop
jp
lea
comiss
sbb
imul
sub
stos
mov
pop
iret
push
inc
sbb
mov
movsl
inc
jle
out
rcl
mov
cmp
xorb
xchg
mov
popa
pop
lods
dec
jns
dec
ja
imul
pusha
and
mov
xor
insb
add
call
dec
xor
lock
lea
arpl
stc
push
jmp
pop
and
push
lcall
jl
test
fsubp
pop
dec
and
dec
or
mov
add
cmpsb
jmp
or
fmull
in
mov
cmp
jmp
mov
push
insb
dec
movsb
xor
pop
les
es
dec
adc
sub
cmp
xchg
orb
or
clc
mov
cmp
or
sarb
sub
ss
insb
aam
mov
dec
mov
stos
lock
push
and
jne
mov
pop
addr16
imul
stc
xchg
outsb
cmpsl
decb
fcomi
cmc
gs
stc
rcr
test
sub
dec
shr
sbb
das
cmp
jne
pop
fwait
incb
push
out
sbb
mov
movsb
adc
sbbl
mov
sub
in
jge
fcmovnu
cvtps2pi
sub
and
iret
iret
loop
push
lods
adc
jo
sub
in
icebp
aad
mov
test
mov
mov
pop
fisttpl
pop
ja
adc
mov
lret
mov
ret
sub
js
insb
mov
mov
inc
mov
dec
test
mov
jno
jae
cmp
xchg
xchg
add
int3
jecxz
or
sbb
inc
push
dec
cmp
fcoml
enter
arpl
dec
inc
aaa
mov
push
sub
push
jae
pop
jmp
cmp
pusha
pusha
fmull
aam
push
and
loopne
adc
jg
leave
mov
pop
add
bound
out
mov
mov
sub
adc
pop
jne
mov
insl
lret
and
add
into
ds
jge
push
imul
jecxz
in
add
mov
insb
pop
ss
and
jp
or
xchg
enter
aam
jbe
mov
cmc
add
add
inc
imul
jnp
mov
jno
adc
cmc
aas
pusha
push
push
out
data16
dec
lahf
jnp
dec
and
mov
push
mov
bound
mov
stc
cli
mov
pusha
jns
insb
jno
pop
adc
xchg
insb
mov
mov
xor
push
push
jne
shlb
jns
gs
push
leave
mov
loopne
shl
aam
fdivs
je
test
scas
mov
std
movb
add
add
lds
push
mov
and
xchg
insl
cmp
shrb
mov
sbb
adc
aam
adc
jbe
push
add
sub
pop
ds
ljmp
loop
ds
repz
shl
sbb
movsl
sti
push
sbb
mov
mov
mov
xchg
mov
mov
jmp
adcl
cld
subl
ficoms
popf
and
insl
gs
mov
mov
mov
xchg
loop
push
mov
inc
cmp
sbb
mov
mov
divl
std
enter
jmp
pop
add
xor
mov
xchg
dec
adc
outsb
push
lret
aas
imul
or
sarl
movsl
adc
lahf
xchg
std
lds
rcrl
sub
adc
addl
mov
cmpsl
mov
push
xlat
scas
xchg
lock
pop
ret
sbb
cmp
stc
fistl
xchg
gs
pop
xchg
pop
adc
popf
xchg
cmpsl
and
repz
sbb
sahf
jle
daa
dec
ja
jno
rcrb
ret
push
cmpsb
ret
popa
loopne
das
sub
cmpsb
push
scas
movsb
scas
xchg
dec
dec
inc
xor
mov
pop
or
movzwl
mov
inc
push
dec
fimull
pop
add
add
xchg
jo
addr16
insb
cmp
lock
mov
xchg
push
xor
out
das
in
test
xchg
arpl
add
ljmp
shlb
daa
push
fucomp
xchg
jg
jno
push
add
fs
aad
mov
sti
dec
cmp
cmpsl
adc
add
pop
mov
divb
sarb
sbb
xchg
jg
sbb
or
addr16
mov
push
adc
in
cli
jns
dec
es
jo
dec
adc
inc
dec
inc
cmpsb
xorb
scas
jb
mov
cmp
and
icebp
xor
push
or
lock
xlat
mov
xchg
pop
cltd
inc
fcmovnb
sub
stc
pop
lret
xchg
sbb
jo
mov
jecxz
rclb
cwtl
repz
pop
sub
dec
arpl
into
sti
fdivr
scas
jmp
fadds
inc
lahf
inc
stos
enter
js
mov
or
pop
call
cmpsl
inc
inc
cmp
rorl
xchg
movsb
lret
mov
pop
icebp
loopne
adc
sbb
jmp
sbb
xor
push
cltd
dec
and
jecxz
sti
inc
movsl
sti
pop
cs
out
xorb
cmp
and
ret
add
add
xchg
sub
push
xchg
adc
dec
insb
dec
push
cmp
add
sbb
push
cmp
push
je
out
in
sbb
add
mov
xor
pop
aas
inc
push
xchg
add
test
stc
popf
cs
dec
push
cmp
inc
adc
inc
sbb
leave
inc
and
and
or
out
sbb
push
lds
jl
jbe
mov
mov
pop
lcall
imul
mov
or
sub
cmp
pop
xor
inc
mov
jge
jmp
sub
xchg
fwait
mov
add
jl
jo
outsb
outsb
ljmp
loopne
push
mov
lcall
xorb
cmpl
sahf
pop
add
cmp
loope
adc
fmuls
mov
andb
push
jmp
push
iret
aad
fwait
and
mov
sbb
aam
cs
mov
mov
sbb
out
cmp
xchg
dec
mov
nop
add
lock
cmc
cltd
cmp
lret
aaa
pop
mov
rcrb
stc
icebp
mov
add
filds
iret
mov
push
sti
mov
xchg
rorl
mov
pop
xor
rcrl
jbe
pushf
push
mov
push
inc
or
jmp
mov
inc
ficoml
mov
dec
jbe
xor
mov
mov
pop
daa
mov
ljmp
hlt
cmp
lcall
mov
push
cmp
mov
inc
aaa
xchg
mov
imul
cmp
loop
add
popa
clc
dec
mov
pop
push
mov
loop
jb
push
les
and
lods
ficompl
inc
dec
mov
addr16
adcl
push
or
pop
and
push
aad
out
aaa
xchg
sarb
add
jns
lds
sub
lock
fbld
stos
int
jns
sbb
mov
test
ss
inc
xchg
push
rclb
mov
ficoml
sbb
sub
adc
or
ficompl
and
mov
dec
fcmovnb
jo
push
rclb
psubq
mov
xchg
sub
pop
mov
cmp
or
es
lods
xor
test
jbe
mul
pop
and
lods
repnz
sbb
add
into
mov
notb
sbb
jbe
lret
lahf
cmp
repnz
std
mov
out
pop
insb
jmp
jle
pusha
pop
jo
sti
dec
pushl
pop
add
in
ror
repnz
divl
orb
jmp
pop
sub
std
out
test
movsb
jae
adc
push
add
outsb
fwait
call
enter
mov
shlb
jae
xchg
lods
and
fcmove
subl
push
andl
ljmp
inc
mov
pusha
sub
cwtl
jp
test
std
mov
shlb
sti
xor
fs
push
and
push
jne
rcl
pushl
mov
inc
subl
out
sub
xor
inc
es
out
adc
xor
xchg
into
mov
into
faddl
cmp
adc
hlt
xchg
mov
and
nop
movb
in
mov
mov
dec
add
movsb
clc
add
lahf
jp
daa
sub
inc
mov
mov
inc
add
aaa
cmpsb
ss
rcl
mov
mov
cli
pop
jle
xchg
jg
pop
stos
jne
xchg
mov
notl
bound
ss
shr
ja
test
adcb
mov
outsl
repnz
and
push
mov
push
jle
xchg
xor
jle
mov
cmpxchg
scas
inc
movsl
xchg
aas
pop
call
or
dec
sbb
fcompl
lock
push
dec
out
gs
stos
mov
cltd
lods
int3
sub
lcall
stos
insl
sti
gs
jmp
mov
mov
lea
aas
mov
and
js
js
xlat
aas
mov
or
adc
sbb
in
rcr
lgs
sub
or
shll
stos
sbb
jb
sbb
lock
push
mov
cs
sti
mov
xchg
sub
test
stos
mov
pop
ljmp
gs
push
into
xchg
clc
hlt
inc
add
jecxz
cmp
dec
jg
sub
test
sub
gs
dec
adc
push
jnp
push
in
inc
adc
shlb
mov
jge
mov
pop
fcmovnu
cwtl
scas
das
xchg
cld
icebp
bswap
jp
mov
or
lock
jmp
aam
push
mov
test
inc
in
dec
stos
mov
pop
enter
mov
xorl
cmp
and
shll
int3
inc
inc
sub
jmp
fadds
cltd
ret
in
push
imul
scas
test
jecxz
pop
loop
cwtl
shr
or
stc
inc
idivl
cmp
and
and
orb
and
inc
xor
mov
in
dec
xchg
pushf
adc
jp
je
icebp
jno
clc
call
sbb
fdiv
decl
inc
jne
in
mov
sub
sbb
sub
addr16
incb
das
fnstenv
fcompl
lock
test
arpl
xor
ja
or
insb
inc
xchg
dec
mov
sbb
in
jl
inc
dec
jno
ret
data16
sti
idiv
scas
push
icebp
sbb
add
into
cltd
out
mov
inc
or
jg
orl
lock
and
push
jbe
pop
add
dec
popa
dec
pop
sbb
cmp
cpuid
aam
jae
repz
or
lcall
sti
in
mov
jo
jg
xor
sbb
mov
cld
inc
inc
add
testl
sub
mov
lods
mov
daa
inc
or
aad
loope
dec
clc
out
movsb
fcmovnu
pop
mov
in
andb
mov
fimull
sub
cmp
jno
add
sbb
cmp
sbb
in
push
jne
outsb
cltd
inc
pop
mov
jg
pop
cmp
outsb
xchg
inc
std
aam
and
aam
js
incl
mov
sbb
add
ret
dec
out
cmp
and
js
mov
clc
xor
xor
sbb
dec
jno
push
jb
rcrl
mov
divb
mov
imul
test
pop
das
call
jb
lods
dec
inc
sub
jo
xchg
or
mov
enter
hlt
xchg
out
cmp
loope
or
xor
test
dec
mov
int3
cld
cltd
push
shlb
gs
adc
pop
ja
push
mov
pop
mov
sbb
xor
xchg
ljmp
pop
es
fwait
enter
stos
pop
aad
mov
adc
adc
fidivrl
outsb
sub
ss
sbb
push
mov
sti
push
sti
push
mov
iret
add
ljmp
adc
lods
mov
mov
adc
xor
movsb
xor
add
and
push
sti
dec
and
xchg
fidivl
cmp
push
mov
mov
popf
cmp
mov
jbe
adc
push
fidivl
std
jne
sub
push
mov
push
stos
push
aad
pop
addr16
cmp
sbb
push
fdivrs
sub
fucomip
mov
insl
sbb
rclb
sub
sub
lcall
cwtl
rorb
mov
in
enter
and
mov
mov
fsubl
pop
hlt
jae
and
and
sbb
fsubl
aas
stc
fxch
adc
shrb
fninit
nop
mov
test
push
into
mov
imul
pop
mov
mov
or
jp
loopne
mov
scas
or
repnz
pop
add
inc
pop
mov
xchg
sbb
movb
mov
mov
mov
or
push
push
push
mov
inc
add
jp
jo
pop
roll
in
cld
nop
sbb
arpl
sbb
mov
test
mov
lret
pop
adc
add
mov
test
scas
iret
mov
clc
dec
clc
add
push
jns
lcall
shlb
xchg
cs
ret
sbb
push
aam
iret
enter
cmc
cs
xor
arpl
sarb
out
leave
xor
pop
es
je
ss
lahf
test
cli
out
arpl
ret
mov
or
sub
push
xchg
cs
dec
ss
ret
in
sbb
xchg
pop
das
out
pop
sahf
pop
shlb
inc
lcall
push
in
pop
ss
in
ljmp
and
cmp
ljmp
sahf
outsb
aam
bound
fucom
xor
cmp
fs
ficoms
push
jmp
pop
mov
jo
outsb
push
jg
stc
or
rcl
sub
jmp
dec
in
aaa
jbe
mov
enter
pop
mov
or
in
test
insb
sahf
mov
push
pop
lock
xchg
jo
and
adc
push
push
push
jecxz
and
fcomps
xorl
pop
orb
add
xchg
mov
inc
std
dec
out
out
dec
aas
pop
fldcw
pop
fistpl
mov
mov
mov
pop
mov
cmp
and
inc
or
jno
dec
int
test
test
pop
sbb
stos
gs
sti
ja
gs
mov
ljmp
or
push
test
cmpb
push
mov
icebp
loop
call
push
inc
ljmp
test
rcrb
repnz
xchg
clc
inc
stos
xor
jge
mov
arpl
dec
test
insb
and
push
adc
sarl
std
cld
add
sbb
std
mov
inc
mov
fisttps
dec
repz
dec
mov
mov
pop
add
gs
shll
xor
scas
jno
jno
adcb
jle
lds
push
add
sti
mov
jl
and
insb
inc
mov
stc
adc
inc
push
mov
sbb
aas
sub
pop
ds
test
sub
jmp
dec
adc
lcall
rcl
loop
mov
jno
sub
fldcw
or
nop
ret
xchg
jae
leave
mov
test
enter
lods
inc
or
sbb
lods
lock
cmp
dec
fs
dec
shl
pxor
hlt
jmp
add
adc
lcall
xchg
mov
mov
scas
adc
not
cmp
in
xor
lea
cmc
sahf
inc
out
push
mov
lods
inc
mov
pop
add
outsl
adc
lahf
push
xchg
mov
sub
dec
orl
add
adc
and
es
rcrl
mov
xor
fnsaves
adc
in
popf
cmp
and
pop
push
and
sub
mov
sbb
jle
inc
add
jecxz
inc
je
cmpsl
les
fs
adc
add
dec
into
movsb
adc
push
in
and
lea
xor
jae
cmpsb
repnz
or
or
lret
icebp
dec
icebp
into
das
mov
stos
scas
jge
lds
ds
out
pushf
js
cld
sub
lret
xlat
lret
mov
es
test
or
sbb
insl
out
fiadds
scas
in
sub
sbb
push
fsubr
andb
or
std
mov
aas
mov
pop
leave
inc
mov
je
push
sub
pop
bound
dec
jmp
or
inc
jb
fwait
inc
dec
and
mov
add
jg
adc
lods
sahf
dec
std
inc
mov
lock
inc
inc
or
test
mov
mov
xlat
dec
repz
push
mov
std
jb
push
icebp
mov
dec
stos
dec
std
ljmp
inc
movsl
lock
pop
icebp
inc
and
test
mov
or
in
out
repz
sub
ja
mov
imul
pop
rol
sahf
push
mov
aaa
xchg
mov
dec
push
lds
mov
lock
or
push
adc
pop
mov
pop
in
cmpb
fprem1
jo
lahf
jae
stos
sbb
add
mov
cmp
jo
fs
es
shlb
push
cmpb
rcll
pop
stc
cmpb
jnp
jge
inc
leave
jno
mov
jae
cltd
pop
popa
call
out
sub
clc
and
das
sahf
test
decb
mov
cmp
js
das
loop
push
fwait
cmp
stc
adc
repnz
mov
sub
pop
stc
imul
jb
push
aaa
and
lcall
ficompl
mov
ja
call
cmp
in
push
xrelease
out
cld
notl
inc
cmp
xor
mov
fisttpl
lds
push
dec
insl
xchg
mov
jne
jg
jmp
out
pop
loope
pop
push
aaa
or
jp
mov
sbb
jmp
mov
jb
and
jns
std
addr16
out
cmp
jno
or
push
inc
ret
aaa
repz
insb
scas
cmp
mov
insb
xor
lods
inc
inc
mov
cmp
sub
jp
add
mov
xchg
lret
jo
pop
daa
popf
mov
dec
and
xchg
add
sbb
pop
jo
outsl
mov
mov
mull
sahf
repz
xchg
or
imul
or
push
add
mov
mov
bound
lret
adc
call
loopne
mov
sub
fwait
int
jnp
inc
sub
cmpsl
dec
aaa
xor
xlat
addr16
sub
mull
idiv
jno
test
pop
aaa
ja
imul
or
jmp
lret
jle
xchg
jno
jae
fbld
aaa
xor
pop
test
and
loopne
inc
sub
pushw
pop
add
sar
sbb
mov
and
fs
ds
mov
es
int
add
push
rcr
pop
jp
inc
add
loopne
cmc
js
dec
mov
js
push
sarb
popa
xchg
aad
mov
cmp
out
lret
std
sub
test
mov
push
dec
xchg
das
and
rolb
imul
ljmp
fmull
stos
ror
jecxz
push
and
xchg
xchg
ds
sbb
pop
es
aad
jae
pop
je
mov
xor
mov
mov
xor
or
xchg
jmp
fsubr
mov
push
std
cli
inc
shlb
insl
sub
mov
mov
shr
mov
lea
or
jmp
out
scas
mov
jecxz
push
and
fsubl
rorb
push
mov
jbe
jmp
mov
flds
or
std
das
aad
xor
or
lock
cmpl
add
jl
cld
mov
in
xor
cmc
sub
nop
ret
int
in
in
mov
daa
std
nop
pop
imul
ret
push
mov
adc
jmp
push
and
xor
sub
jne
neg
dec
lret
cmp
div
or
das
stos
aaa
popf
pusha
push
loop
hlt
inc
sub
pop
rcl
scas
sub
mov
fwait
mov
pop
outsl
ja
jmp
xchg
cld
ja
inc
mov
sbb
jl
lea
pop
sahf
loopne
out
xor
mov
xchg
xor
jo
xor
gs
lock
leave
mov
mov
mov
orb
dec
testb
fisttpl
daa
das
shll
pop
sbb
or
lock
push
rolb
xchg
call
int
lret
push
test
add
jno
sbb
sbb
xchg
mov
ljmp
mov
jo
imul
fidivrl
sub
mov
push
ret
int
inc
mov
mov
imul
and
out
movl
into
mov
xchg
fld1
lea
test
sub
xchg
cmp
ds
in
int
pop
dec
mov
or
pop
test
stos
popa
xor
fcmovnb
add
lock
je
fmuls
addr16
incl
gs
out
daa
mov
push
inc
adc
lea
jle,pn
mov
clc
cmp
ret
sub
ja
add
and
cmp
jns
pop
mov
cltd
xor
sbb
and
insl
es
out
sub
add
lods
push
jg
in
mov
imul
subl
dec
pushf
lods
cwtl
pop
mov
jmp
mov
scas
adc
sub
movsb
inc
cmp
xchg
cld
and
imul
mov
cltd
pop
leave
movsl
xchg
or
push
dec
ficoml
inc
lock
pusha
xchg
inc
dec
xchg
shrb
and
push
xchg
cmp
xchg
pop
pop
xchg
cmp
jecxz
mov
and
gs
fwait
gs
outsb
push
cmp
in
fucomip
popf
lret
sub
clc
xor
xchg
pop
sbb
push
and
or
cmp
mov
in
mov
mov
inc
in
xchg
mov
inc
lds
fs
adc
or
xor
and
imul
xchg
faddp
push
sub
imul
shll
scas
pusha
mov
jne
fbstp
push
int3
cld
mov
dec
mov
and
sub
adc
mov
in
cmp
stos
mov
lods
inc
je
repnz
push
mov
dec
mov
test
aam
rorb
sahf
add
sbb
ljmp
je
popfw
out
in
insb
aad
push
jl
mov
push
daa
inc
lcall
cltd
jp
sub
jecxz
cwtl
lret
sbb
xchg
shl
cmovae
mov
jbe
lods
mov
popf
and
or
fdivp
bound
add
aam
mov
fs
enter
adc
pop
fsubrl
and
ja
iret
pop
dec
push
or
pushf
mov
stos
xlat
dec
call
mov
fwait
scas
xor
push
outsb
adc
pop
fdiv
inc
repz
mov
jo
dec
mov
dec
lret
cmc
cwtl
inc
and
out
das
adc
push
and
mov
movsb
sub
shlb
xchg
cs
cmp
xchg
int3
in
int
dec
sbb
shl
or
arpl
xchg
mov
stos
jbe
sub
cltd
adc
sbb
sub
inc
test
mov
mov
pushf
jge
sub
mov
andb
push
out
fbld
loop
ja
xchg
jbe
cmpsb
sub
ret
icebp
or
aas
and
add
mov
and
das
outsb
cmp
dec
insl
cmp
daa
stc
popf
cs
or
mov
inc
push
xor
jbe
inc
enter
dec
xor
lret
jmp
mov
mov
fnstcw
roll
fidivrs
fcomi
imul
pop
dec
cmp
mov
stc
xor
xchg
adc
inc
fwait
imul
adc
jbe
stc
sub
cmp
add
and
mov
mov
dec
mov
xchg
push
dec
leave
sbb
xchg
stos
adc
jecxz
daa
in
pop
pop
xor
adc
pop
jmp
push
pop
jge
nop/reserved
icebp
out
clc
lahf
and
push
mov
and
mov
or
push
call
push
cmpl
rol
push
loope
cmc
jl
xor
mov
mov
push
inc
mov
or
mov
les
jns
outsb
and
mov
stos
dec
lods
cld
add
stos
cs
add
std
rclb
fdiv
and
rorl
mov
insb
mov
xchg
pusha
syscall
movlps
and
ss
dec
dec
pop
ret
pop
test
xchg
rorl
loope
push
test
jg
cmp
pusha
mov
inc
xlat
sub
bnd
hlt
mov
in
leave
xor
inc
adc
movl
mov
cld
arpl
sbb
xchg
test
or
sbbb
jns
inc
fcos
jg
mov
ret
xchg
in
cmp
mov
mov
shl
jle
shrd
outsb
mov
mov
mov
jle
cmpsl
idiv
xchg
xchg
jmp
sbb
lcall
stc
pop
in
insl
test
cli
cmp
lock
cmp
lret
lods
and
jae
je
and
mov
xchg
fisubl
js
and
lods
adc
xlat
xlat
fdivl
mov
aam
aad
outsb
mov
xor
pusha
popa
pop
or
sbb
pop
push
jmp
fistl
fldt
fs
pop
xchg
mov
push
test
int3
nop
push
mov
xchg
lcall
xlat
cmp
cmpl
in
arpl
jnp
movsb
sbb
push
xor
div
stc
popa
out
test
rcrl
and
subl
out
xor
dec
cmpsl
and
and
and
pop
mov
xor
icebp
pop
adc
int
imul
out
add
rol
fwait
in
movsl
les
adc
int3
push
and
gs
cmp
adc
mov
lret
idivb
call
ficoml
push
mulb
call
dec
into
in
fldcw
jne
cmp
repnz
gs
add
movsl
inc
ja
jae,pt
iret
out
mov
pop
int
and
ljmp
icebp
call
or
cwtl
mov
mov
lret
sbb
or
ja
add
call
xchg
mov
jnp
aad
sub
pop
push
xchg
testl
insb
mov
out
mov
imul
cmp
leave
rolb
xor
dec
std
dec
stos
jle
test
cmpsb
xor
std
arpl
mov
outsb
enter
pop
jae
leave
or
imul
mov
cmc
gs
pop
ljmp
mov
mov
xchg
adc
jge
cmp
testb
adc
adc
dec
cltd
cmp
idivl
mov
fdivrl
sbb
xchg
jg
out
jo,pt
out
ljmp
jle
shlb
xor
imul
mov
jp
jl
lds
sbb
cmc
dec
in
jb
dec
mov
cli
negb
pop
outsl
mov
insb
jmp
cmc
imul
loopne
pop
imull
xor
add
inc
inc
cmp
inc
xlat
clc
push
and
xor
jg
inc
movsb
push
inc
inc
fucomip
arpl
pop
mov
inc
adc
inc
mov
add
or
pushf
stos
sbb
cmp
shrl
leave
sub
xchg
dec
mov
outsl
aaa
inc
and
nop
fisubl
mov
mov
ja
pop
pop
mov
mov
fs
inc
xor
test
mov
clc
jp
adc
int
out
and
stc
xchg
scas
jne
mov
fs
add
cmp
ror
test
xchg
ret
test
dec
movzwl
mov
jge
aam
sarb
cltd
mov
mov
sub
fisttpl
xor
mov
pop
aaa
test
adc
lods
mov
es
mov
pop
or
push
sbb
outsb
dec
pushf
sbb
aas
jmp
xchg
dec
mov
and
inc
mov
movsl
inc
xchg
int
sub
adc
lcall
dec
inc
mov
pop
xchg
and
mov
and
xchg
fbstp
jge
mov
jb
repz
enter
cmpsl
sub
sub
push
sahf
ret
popa
jnp,pn
lods
and
and
jns
imul
mov
js
call
pop
hlt
mov
sbb
xchg
shlb
mov
dec
das
and
cwtl
pop
inc
cmp
ljmp
aas
not
popf
mull
cmpsl
jne
jno
sbb
or
pop
std
sbb
pop
push
imul
pushf
insb
mov
xchg
lods
dec
sbb
in
ret
sbb
popf
les
add
inc
idivb
stc
or
adc
sahf
sbbl
ss
pop
sub
mov
fmull
pop
push
xchg
int3
lret
inc
pusha
inc
sahf
mov
mov
ret
jbe
mov
push
adc
lret
mov
xchg
lds
pop
jmp
inc
push
mov
sub
sub
pop
in
jle
jb
or
sub
push
in
jge
enter
mov
insb
pop
loope
mov
sar
lds
or
xchg
push
xchg
or
push
xor
push
mov
pop
je
dec
ds
jne
or
sbb
jns
enter
leave
pop
test
cmp
cmc
push
mov
loope
dec
sbb
jecxz
adc
pop
jb
sti
loopne
data16
aas
adc
in
and
roll
or
mov
pusha
cmp
gs
aam
sahf
dec
out
adc
dec
fwait
icebp
push
repnz
insb
inc
mov
outsb
and
pop
stc
jno
lcall
jb
push
pop
dec
subb
inc
sti
dec
arpl
mov
fldl
or
out
add
or
xchg
dec
out
sbb
mov
xor
test
xor
cltd
icebp
jle
jae
mov
aaa
dec
xchg
push
jne
hlt
stc
inc
mov
cltd
scas
pop
popa
xchg
mov
fcmovne
fmull
or
out
push
movsb
dec
mov
daa
lahf
pop
and
mov
lock
push
mov
jp
jnp
repnz
xchg
or
lock
notb
rorl
add
sub
test
jns
or
test
out
mov
mulb
cli
push
out
roll
add
sub
ret
mov
mov
cmpsl
add
sbb
xor
in
int
out
shrl
mov
aas
lds
clc
adc
mov
jmp
ret
inc
pop
subl
dec
adc
imul
or
add
inc
icebp
pop
mov
iret
inc
shl
mov
or
aam
mov
add
pushf
sbb
mov
outsl
mov
push
adc
shr
push
loopne
jmp
inc
xchg
cwtl
pop
push
adc
dec
jmp
imul
lds
aaa
jnp
pusha
das
hlt
push
cmp
imul
popf
push
sahf
xchg
mov
and
mov
and
rcrb
mov
xchg
push
cwtl
mov
push
loopne
in
push
std
loop
pusha
jg
test
sti
movsl
rcrl
sub
sub
sbb
mov
xor
xor
icebp
mov
jne
add
push
stos
fcmovnbe
scas
fcmovu
inc
mov
nop
daa
es
pop
push
into
into
int3
pop
push
aas
ss
sub
sahf
shlb
mov
es
mov
fisubl
and
xchg
mov
cwtl
enter
pop
rcrb
and
stos
push
add
sub
hlt
inc
add
adc
mov
sahf
xchg
outsl
test
fsubs
les
xchg
push
cmp
popf
dec
rcl
and
sub
lret
ljmp
pop
out
iret
dec
jle
outsb
adc
sbb
inc
pop
inc
jge
lods
add
xchg
arpl
aaa
test
js
cmp
xor
enter
inc
mov
push
in
adc
jbe
xchg
roll
inc
sub
divb
sti
jno
add
or
insb
pop
ret
fdivr
mov
pop
aas
jmp
imul
add
lahf
dec
lock
loope
fs
ljmp
stos
pop
lds
repnz
lret
xchg
shrb
stos
in
adc
inc
mov
test
out
loopne
push
and
inc
jnp
int
enter
fisubs
push
jg
jmp
sti
pop
push
cmp
aaa
or
xchg
ja
lret
pop
cmp
ror
inc
cmp
jmp
lret
int3
xchg
sbb
aaa
adc
sub
cmp
in
xor
ja
xor
ret
fidivrl
lock
push
cmp
and
push
push
loop
or
pusha
sub
adc
jae
into
pop
push
sub
aaa
jg
push
and
in
pop
xchg
sbb
test
inc
popf
rcr
push
ds
jg
or
imul
jle
test
ja
adc
loopne
jae
xchg
data16
mov
js
imul
adc
mov
mov
cwtl
add
push
adc
movsb
pushf
int3
popf
into
test
lret
mov
das
jge
jmp
dec
mov
fsubs
and
or
mov
mov
pop
push
in
push
insb
or
adc
xchg
cmpb
adc
ficoms
ja
loope
cmc
push
pop
cwtl
push
imul
arpl
push
pop
dec
adc
sbb
cmp
jl
or
adc
lahf
test
mov
adc
inc
pop
out
xchg
push
pop
or
nop
gs
int
pop
add
mov
cli
shrl
push
pop
sub
mov
dec
and
test
mov
sbb
cmc
shlb
mov
js
xchg
jae
sbb
fs
shrb
mov
push
iret
test
jl
mov
xchg
mov
xchg
push
sub
jae
sub
mulb
and
and
idiv
jg
or
iret
in
add
stc
mov
jecxz
xchg
out
xchg
mov
ret
jbe
int
push
sbb
mov
movsl
hlt
movsl
shrb
and
inc
out
loop
xorl
jecxz
xchg
out
test
xchg
jae
pop
push
nop
mov
and
cmp
pop
mov
push
xchg
iret
arpl
or
mov
lds
out
push
pop
outsl
inc
jnp
cs
jo
cwtl
into
adc
sarl
pop
mov
and
movsl
sbb
lea
fidivs
mov
fsubrl
cwtl
or
push
in
mov
xchg
inc
ds
es
rcrl
pop
ds
loopne
pop
dec
fildll
insl
add
cld
push
add
sbb
pop
in
push
outsl
and
push
sub
out
inc
sti
lcall
dec
ror
mov
insb
mov
push
out
int3
or
scas
sarb
popf
add
faddl
xor
jle
mov
arpl
imul
pop
je
add
movsb
nop
out
test
pop
cmp
rol
jae
inc
mov
mov
bound
es
xor
add
sub
inc
test
xor
shrl
pop
mov
movsl
shl
jo
fcoms
jp
sbb
aad
inc
pop
dec
mov
aad
xchg
sub
fsts
inc
jno
mov
movsl
stos
mov
mov
and
leave
in
xor
aas
fwait
rolb
cld
mov
push
sahf
and
popa
inc
cltd
lock
movb
movsb
add
or
andl
push
xchg
push
mov
loop
adc
inc
and
lret
movsl
xchg
mov
jae
add
and
adc
adc
add
pop
adc
inc
push
mov
mov
cmpl
push
mov
cmc
pop
adc
imul
outsb
hlt
ficoml
fiaddl
fmull
or
mov
inc
lret
pop
xchg
lcall
ret
push
rorb
xlat
aam
mov
aad
fidivs
fadd
nop
into
xchg
pushf
ficompl
xchg
les
adc
rolb
lds
enter
lea
sub
lock
imul
arpl
mov
dec
push
out
idivl
dec
xchg
pop
es
test
sub
scas
add
inc
cwtl
cmpsb
jo
mov
cpuid
out
ljmp
cmp
push
sub
insl
cs
jno
mov
pop
shlb
out
cmp
data16
imul
add
sbb
clc
pusha
xor
pop
jl
aam
add
jnp
add
das
or
stc
dec
or
in
jbe
xchg
push
outsb
ja
test
and
mov
adc
jae
push
inc
repz
jno
cmp
fsts
movsb
xchg
push
ja
pop
fistpll
lcall
inc
mov
adc
pop
and
fwait
xchg
push
jmp
push
daa
push
add
fucomp
mov
loope
fists
or
dec
pushf
cld
mov
jmp
jecxz
or
rclb
insb
xchg
cld
js
sub
out
out
pop
push
mov
leave
sub
leave
lret
loop
mulb
jle
cld
xchg
rcrb
xchg
mov
scas
es
mov
xchg
fisttpll
mov
adc
out
aad
mov
into
iret
hlt
mov
icebp
cmp
lods
pop
orl
jmp
mov
sti
add
mov
je
sahf
in
dec
ja
insl
jg
push
cmpsl
jl
add
mov
std
push
xchg
leave
jecxz
dec
sti
insl
cmp
imul
xor
es
xchg
mov
ljmp
in
lcall
pop
jmp
ret
popf
cmp
or
jnp
test
push
push
dec
sbb
cmpl
jle
sub
inc
sbb
mov
xor
mov
int3
add
out
sbb
inc
mov
sbb
mov
inc
xchg
jae
and
aaa
int
sbb
pushl
repz
mov
cld
sahf
aaa
mov
cmp
pop
sub
orb
out
cltd
mov
xorb
or
jl
sti
push
cli
in
ljmp
shrl
xchg
imul
fcomp
jnp
outsl
imul
adc
push
aas
in
arpl
jmp
les
sub
data16
pop
cmc
outsb
fwait
mov
pop
ret
mov
in
xchg
adc
jp
jns
jmp
sbb
adc
pop
sub
call
and
arpl
cmp
cmp
lcall
mov
pand
and
inc
in
mov
shll
fmul
mov
push
and
push
rcll
add
inc
xchg
or
cltd
pushf
mov
mov
inc
add
and
enter
mov
jmp
mov
mov
inc
xor
dec
loope
jbe
jge
dec
push
add
pop
ja
dec
xchg
pop
notl
pop
mov
dec
mov
xor
mov
jno
notb
xlat
add
std
cmp
push
mov
jmp
jb
es
or
jle
push
add
add
sbb
stos
popa
jle
sbb
int3
cmp
lcall
adc
loop
mov
shrd
dec
in
pop
sub
cmp
imul
add
jmp
dec
pop
sbb
push
and
fisubrs
lcall
faddl
adc
in
mov
lods
outsb
pop
shl
insl
push
jno
pusha
mov
dec
inc
sub
pop
jge
psllq
fadds
adc
ret
aaa
jns
jb
adc
add
xchg
ljmp
stos
mov
test
aad
sahf
fdivrs
movsl
cld
or
movsb
lret
jecxz
inc
sbb
aas
out
pop
lods
lock
xlat
das
jns
inc
hlt
pop
loope
in
and
push
jge
std
dec
or
sar
jmp
dec
mov
jmp
testl
jnp
xor
mov
dec
dec
add
test
repnz
mov
daa
inc
push
lods
je
dec
sub
addr16
jne
sbb
sub
xorb
jle
dec
xor
aam
mov
stos
pop
aam
jbe
fsubl
sub
push
sub
fistl
mov
jmp
sub
addr16
movsl
pop
lcall
stos
or
cmp
sub
cmp
ss
bound
ja
inc
out
arpl
scas
test
cmc
push
dec
xchg
clc
ds
sahf
cmp
fmuls
push
mov
scas
push
and
fidivs
stos
cmp
push
icebp
cwtl
sbb
fidivrs
dec
sti
mov
cli
jbe
loop
mov
dec
frstor
add
jae
inc
imul
ds
sbb
jp
or
lret
dec
inc
dec
repz
sbb
in
clc
in
cmp
ds
mov
add
mov
sub
mov
dec
stc
je
es
mov
adc
mov
jne
jb
leave
xchg
or
aas
jno
pop
shll
mov
mov
and
inc
push
dec
adc
cmc
js,pn
cmp
jge
mov
xchg
push
leave
sbb
dec
inc
ret
dec
in
stos
rolb
mov
imul
out
ret
sub
dec
xor
es
push
stos
sahf
xor
loope
mov
xor
inc
xchg
fucomi
shll
mov
jmp
cld
js
iret
jbe
rcrl
das
xor
and
fiadds
insb
cltd
inc
xor
push
nop
pusha
cmc
mov
xchg
dec
hlt
mov
jae
xor
ljmp
mov
mov
mov
jecxz
in
fbld
or
mov
mov
call
xor
sub
jns
or
push
xlat
es
push
pop
adc
add
movsb
adc
lods
rcrl
scas
mov
out
sub
mov
jae
in
mov
lods
ret
pop
xchg
sub
mov
ljmp
or
aas
fiadds
adc
sbb
jae
idivl
xorl
out
mov
mov
insl
pop
dec
aad
aas
pop
xor
dec
adc
fldt
dec
sub
cmp
icebp
imul
inc
adc
aad
lock
fmul
dec
cwtl
popa
sbbb
lcall
outsb
fyl2xp1
cwtl
shlb
or
cmp
push
lcall
in
xchg
inc
sahf
jmp
push
lret
add
or
adc
sbb
adc
incb
scas
xor
and
add
jg
mov
jge
pop
cmpsl
add
inc
xchg
cmp
and
xchg
cmp
mov
mov
mov
lock
repz
and
pop
cmp
inc
dec
daa
push
sbb
mov
jge
lret
xchg
sbb
jns
and
sbb
jne
or
fsubr
in
mov
sbb
inc
ljmp
adc
pop
testb
lahf
ret
cmp
dec
inc
add
clc
outsb
jns
xor
sub
sbb
pop
int3
push
cmp
xor
sbb
xchg
sub
push
adc
ror
mov
mov
outsl
rol
ficomps
hlt
sti
dec
push
mov
xchg
cmpsb
mov
inc
clc
fs
cli
inc
iret
cmp
and
mov
and
test
dec
mov
xorl
les
int
xchg
aas
cli
fidivs
xorb
adc
divl
outsl
xchg
jecxz
loop
fstps
mov
out
imul
dec
call
jl
das
movsb
xchg
lock
loop
and
rcll
xor
rclb
push
cmp
and
out
js
mov
xor
cmp
outsl
bound
push
int3
xchg
cltd
push
dec
pop
xchg
loop
or
or
pop
jge
inc
addl
into
test
mov
in
clc
cltd
hlt
imul
inc
int
adc
pop
dec
dec
in
imul
insb
mov
dec
mov
cltd
sub
ret
dec
lock
shlb
sbb
cld
adc
je
mov
and
and
xor
push
cltd
pop
gs
sbb
pop
icebp
movsb
loope
mov
test
mulb
mov
test
pop
int3
push
dec
sbb
stos
push
lods
cld
enter
outsl
leave
stc
sub
das
mov
faddl
lahf
icebp
imul
mov
inc
je
pop
bound
shll
or
add
xor
push
add
sub
inc
or
data16
popa
adc
not
mov
fists
cltd
jle
jl
jnp
fwait
push
cmp
inc
cltd
dec
ret
mov
sub
lret
cltd
sbb
add
mov
test
sub
subb
and
jne
sti
push
mov
pop
stos
or
add
cmpb
fldl
shlb
lock
cwtl
cld
jg
into
jmp
mov
cmp
repz
mov
fidivrs
push
and
dec
in
jnp
repz
adc
call
imull
minps
jecxz
lods
into
loope
dec
or
jle
xor
sub
inc
sahf
cli
or
jmp
testl
icebp
out
sbb
and
inc
mov
scas
inc
int
das
jnp
into
push
jmp
lods
push
adc
sub
or
stos
lret
fmuls
xor
fsubl
loop
lods
mov
sahf
adc
jg
push
imul
or
pusha
cmp
pop
in
test
or
push
sbb
leave
adc
or
ret
loopne
lock
bound
mov
jge
mov
mov
ret
xchg
cmp
stos
test
or
xchg
in
sub
les
mov
aaa
hlt
jno
or
jno
in
mov
das
push
pop
std
jp
arpl
daa
push
push
rorl
pusha
cmp
pop
dec
or
ds
call
inc
addr16
stos
stos
dec
cli
scas
in
stos
and
cs
xchg
push
add
jg
adc
jg
test
pusha
xchg
pop
lock
stc
shrb
dec
sub
inc
popf
cmp
ljmp
or
and
daa
push
xor
mov
push
pop
lock
and
mov
popf
scas
loop
push
lock
cmp
adc
xor
sbb
mov
push
mov
mov
lea
cmc
jno
ret
push
js
lds
aad
cmpsl
jmp
cmp
shrl
push
sbb
lahf
das
pushf
mov
mov
jb
stc
push
jne
cltd
and
mov
outsl
mov
mov
xchg
mov
ljmp
jmp
mov
sbb
cmc
and
jb
lds
xchg
push
and
mov
jl
push
clc
dec
sub
pop
lds
ja
rcrb
loop
dec
lds
inc
cbtw
push
cltd
jae
xlat
mulb
in
cmp
ljmp
pop
xor
or
mov
lret
dec
ret
jge
popa
mov
fisubs
aam
xchg
insb
xorl
jb
push
pop
push
xchg
xor
in
or
push
sbb
add
and
mov
nop
and
push
push
pusha
outsl
and
xchg
gs
movsl
sub
jnp
cli
xchg
and
mov
arpl
popa
push
js
lea
repz
mov
xchg
mov
sarb
push
mov
int3
inc
and
lcall
push
mov
nop
je
xchg
movsb
test
push
mov
icebp
add
inc
jno
shl
mov
mov
imul
ja
jne
add
and
rcrl
pop
pop
outsb
mov
cmp
ljmp
pop
sub
in
xchg
pop
repz
jmp
and
dec
js
mov
out
mov
addr16
int3
xchg
mov
push
leave
mov
ret
loopne
cmp
and
xlat
loopne
out
daa
inc
jecxz
daa
xchg
lahf
lcall
push
ljmp
test
mov
jne
adc
adc
test
jb
inc
push
adc
mov
je
add
enter
sub
js
fistl
jg
mov
mov
mov
push
mov
xchg
es
repz
mov
jno
and
out
or
dec
sbb
push
in
push
stos
repz
fbstp
stos
jbe
xchg
xor
add
pop
mov
lret
or
movl
xor
cltd
adc
mov
cld
stc
pop
push
adc
cmp
mov
fucomi
jp
fucomp
xor
jle
movsb
dec
fsubs
int
fs
lret
nop
call
fwait
mov
push
sbb
aam
data16
jno
pushf
push
mov
add
add
and
dec
sti
out
in
in
and
dec
arpl
xlat
lds
fists
add
je
and
in
ljmp
adc
or
jp
cmp
adc
cmp
fs
mov
sbb
push
ret
negb
inc
ja
mov
mov
insb
sti
and
repz
daa
je
and
mov
es
imul
pop
insl
cld
adc
xchg
xor
xor
and
sub
dec
jl
lock
add
xor
inc
pusha
sarl
leave
ret
jg
push
shlb
aaa
mov
pusha
ja
leave
push
out
sti
test
push
das
xor
leave
incl
out
mov
fistpl
imul
test
jl
enter
lcall
push
clc
xchg
inc
push
pop
cmp
das
pop
nop
mov
fwait
inc
ljmp
fsub
cmpsl
dec
mov
pop
xor
pop
lahf
fwait
mov
xchg
shld
in
insl
lds
aaa
push
ficoms
gs
rol
xor
dec
test
jecxz
repz
pop
rolb
adc
movsb
lods
stos
sbb
and
testl
bound
cmpb
dec
call
stos
mov
add
mov
pop
aaa
and
mov
jo
out
fnstcw
js
rclb
clc
mov
shrl
addr16
and
cltd
ds
or
add
xchg
or
popa
sahf
or
push
xchg
mov
adc
out
ljmp
pop
push
jge
lcall
and
pop
push
mov
data16
lahf
in
push
mov
mov
fmull
sub
xchg
lods
jb
jecxz
push
xor
mov
addr16
mov
jo
push
popa
mov
jl
mov
popa
fists
xchg
repnz
hlt
cmc
out
mov
mulb
aam
sub
dec
and
mov
sub
and
rcll
mov
cld
push
mov
popf
fiaddl
test
pop
cmp
jmp
test
mov
xor
out
xor
in
pop
sarl
mov
xchg
jge
aam
loopne
imul
insb
shl
inc
popf
sub
push
sub
icebp
out
jg
notl
xor
push
outsl
dec
mov
sti
mov
test
push
rclb
mov
mov
sarb
arpl
xlat
pop
sahf
and
mov
loop
dec
enter
data16
jge
loope
imul
sbb
out
std
test
in
push
icebp
xlat
fsubrl
xchg
loope
and
test
pop
and
outsb
and
xor
shlb
add
pop
ficoms
dec
hlt
jne
sub
into
daa
or
int3
cmp
test
lock
mov
add
cmp
sbb
inc
lock
daa
movsl
mov
lds
inc
ficoml
cmpsb
imul
out
cmpb
mov
ffreep
fisttpll
cmp
orl
push
cmp
pop
aaa
daa
mov
out
xchg
cltd
loope
xchg
or
lods
pop
icebp
cmp
in
mov
cwtl
movb
sub
pop
dec
addl
repnz
cwtl
test
js
add
arpl
insl
and
jno
adc
pop
inc
jl
and
cmp
out
aaa
xchg
cmpsb
push
out
push
mov
les
cmp
ret
xor
in
lods
and
cld
rol
into
sbb
call
or
sub
je
push
cltd
or
or
push
stc
adc
dec
jne
pusha
addl
pushf
loop
inc
in
into
pop
arpl
aad
shrl
test
or
add
and
sahf
sub
pop
inc
aam
in
or
out
js
icebp
xchg
xor
data16
movsl
push
jg
push
fsubrs
mov
fsubs
aas
lock
int
jle
mov
xchg
jge
xchg
jns
push
pxor
sarb
push
movsb
mov
inc
or
push
push
lret
pop
mov
icebp
push
mov
lods
jmp
mov
mov
dec
fwait
adc
jbe
sub
dec
jp
xor
cmp
pop
sbb
adc
loop
push
sbb
pop
arpl
out
inc
xor
dec
cmp
inc
and
xchg
lds
ret
adc
xchg
add
and
mov
dec
inc
std
subl
dec
push
inc
dec
cwtl
inc
jo
outsl
sub
outsb
cmp
mov
test
cld
jmp
nop
xor
mov
int3
inc
stos
or
loop
mov
lcall
xor
scas
leave
les
shrb
mov
jno
popf
and
mov
push
inc
lods
jmp
mov
dec
in
jle
out
dec
jbe
and
dec
fmulp
scas
je
dec
mov
jo
xchg
pop
ret
dec
push
cmp
clc
pusha
orl
adcb
js
fildl
xlat
jne
mov
dec
or
mov
repz
dec
cmp
adc
pop
neg
or
out
sbb
xchg
jnp
andb
pop
ss
shrb
sti
negl
addr16
mov
push
pop
adc
imul
test
fisttpll
imul
aam
sbb
pushf
sbb
nop
mov
cmpsl
or
ret
in
jmp
mov
inc
filds
insl
in
sub
testl
je
mov
lcall
outsl
or
sub
cmp
nop
push
cmp
clc
inc
cmp
sub
out
adc
and
xor
cld
pop
bound
cmpsl
std
mov
adc
adc
adc
add
mov
call
adc
mov
test
js
loope
fcomp
fcmovbe
ret
mov
enter
pusha
shl
nop
stos
popf
dec
orps
jnp
and
in
imul
fcompl
inc
int3
lahf
in
pusha
and
xor
clc
loop
out
lods
inc
leave
cwtl
sbb
sti
xor
push
lret
lret
call
movsb
mov
decl
dec
cmp
cmp
jae
cmp
ja
sbb
cwtl
pop
mov
xor
icebp
mov
jp
fstpt
jmp
loope
lds
push
push
loopne
test
ljmp
cld
mov
add
push
pop
xchg
lret
sub
or
stc
pusha
pop
test
mov
cmp
add
test
sub
jne
subb
outsl
pusha
jnp
jl
xor
xchg
mov
sarb
insb
xlat
inc
stc
outsl
aad
mov
pusha
testl
imul
jmp
mov
into
mov
pop
mov
pop
sti
dec
jge
adc
mov
mov
add
fwait
inc
out
roll
sbb
and
push
cmp
test
mov
cld
add
cwtl
mov
dec
loop
xlat
leave
popa
es
fildll
ljmp
js
sub
mov
jle
jmp
sbb
cmp
icebp
flds
xchg
push
cmpsb
cmp
xor
mov
lods
jl
jl
sub
pop
xor
lds
add
jp
pop
mov
xchg
loopne
inc
enter
sbb
xor
mov
dec
fldl
inc
fcomip
into
sub
inc
cmp
cmpsl
xchg
icebp
stc
sub
inc
pop
cmc
mov
cld
movsl
xchg
outsl
push
jg
in
sub
push
xchg
xor
push
jae
stos
push
loop
idiv
xor
push
lret
nop
dec
xor
je
orb
fnsave
push
lahf
cmp
adc
iret
ss
pusha
push
ljmp
js
push
jmp
dec
add
xchg
rorb
fldenv
imul
sbb
sbb
xor
xor
dec
sarb
sub
cmp
inc
mov
in
call
ret
call
cmp
cs
xchg
out
jp
fsub
mov
push
repnz
inc
xchg
sub
xchg
push
mov
adc
and
loopne
xchg
push
not
push
call
xor
inc
pop
jmp
or
sti
mov
adc
and
jg
dec
aam
ja
or
pop
jmp
mov
sbb
mov
xlat
xor
mov
outsl
ss
jl
sbb
add
pop
bound
adc
dec
stos
in
lods
cmp
mov
ljmp
lcall
cwtl
shrl
sbb
loop
mov
cltd
xchg
mov
cli
and
pop
pop
push
mov
arpl
cmc
insb
adc
push
inc
stos
mov
add
mov
sti
fs
or
xor
fcompl
jbe
push
nop
pminub
test
cs
mov
sbb
into
fdivl
stc
loopne
xchg
xchg
out
insb
or
adc
sbb
xor
aaa
lret
inc
jmp
jmp
dec
int
xor
add
cmp
xchg
sbb
add
sub
add
rorb
mov
roll
push
fbld
popf
jae
into
cmp
pusha
dec
in
inc
aaa
popl
inc
adc
sbb
pusha
jmp
jmp
mov
dec
jae
xchg
jns
pusha
pusha
cmp
lock
aaa
dec
mov
or
pop
roll
jecxz
mov
lret
sbbl
inc
je
sti
cmp
out
stos
loope
jecxz
mov
lods
sbb
push
mov
pop
add
pop
mov
cmp
sbb
test
xor
cmp
test
xor
insl
jno
and
push
loop
in
mov
jecxz
inc
jbe
das
mov
push
adc
repz
pusha
gs
pop
push
cmp
xchg
pushf
ja
loopne
andl
sbb
and
fidivrl
pop
add
lcall
mov
in
lret
push
cmp
mov
enter
scas
fstl
and
lods
jmp
daa
pop
aam
outsb
repnz
push
lret
dec
cmp
inc
mov
dec
add
push
ficoms
mov
push
push
inc
shll
data16
sbb
fs
aad
push
sbb
or
jge
push
jae
scas
sbb
jne
mov
push
mov
aaa
mov
sbb
xor
xchg
xchg
aam
aam
xchg
mov
cmp
aam
jb
adc
out
std
lea
jnp
clc
xor
dec
call
xor
xorb
sub
pop
inc
adc
sbb
ret
jbe
jg
loop
leave
push
in
mov
enter
loopne
push
in
testl
daa
cmp
mov
repz
adc
lods
push
mov
inc
sub
das
adc
sbb
test
cld
cld
pusha
adc
in
decl
shlb
mov
insb
in
ss
mov
enter
out
add
jmp
shl
sub
out
fisttps
nop
or
xor
shlb
scas
scas
or
mov
xchg
scas
mov
cwtl
pop
inc
inc
pop
mov
stc
jmp
xchg
jb
jp
mov
add
cmp
sbb
pusha
mov
push
shrb
mov
sub
out
push
push
pushf
out
adc
jae
adc
outsb
leave
lret
loopne
cmpsl
mov
mov
push
inc
mov
sub
je
jnp
cwtl
dec
scas
outsb
cli
shr
test
pop
fdivr
pop
cmp
das
enter
popa
addr16
loope
or
mov
pop
mov
mov
imul
sub
jno
subb
cmp
aas
adc
stos
ja
sbb
push
mov
fucomip
out
jl
push
fwait
ljmp
hlt
jbe
cmp
mov
jecxz
xorl
xor
pop
aad
xorl
test
cmc
xchg
push
xor
xorb
xchg
mov
outsb
in
xorl
pop
les
aaa
and
insl
es
cli
fwait
sbb
mov
mov
out
lds
cmpsl
andl
pop
out
cltd
dec
es
sbb
add
sub
divl
xor
inc
test
adc
out
stc
xlat
fcmovne
jne
cwtl
loop
push
push
push
jne
mov
pop
xor
cmp
xchg
jnp
ja
fs
daa
repnz
adc
ficoms
testb
or
dec
push
cltd
shrb
addr16
popf
stos
mov
xchg
dec
addr16
push
scas
mov
addr16
and
rorb
notl
mov
ret
and
cmp
adc
lds
adc
sub
in
sbb
mov
inc
mov
and
mov
out
notb
in
jmp
or
cmp
jge
orl
or
cld
stc
cs
inc
xor
lret
xor
mov
fst
scas
jns
ret
insb
lret
cld
daa
adcl
inc
push
inc
add
cmp
lret
cmp
xchg
stc
flds
fiadds
adcb
imul
movsb
push
clc
loopne
popf
pop
inc
int
or
cmp
loopne
pop
xchg
jmp
mov
adc
lret
mov
and
xchg
dec
xor
or
ljmp
sub
dec
inc
mov
dec
push
rcll
mov
cmpsb
pop
add
mov
sbb
cmp
aam
lret
mov
sbb
call
icebp
mov
int
jl
and
and
ljmp
sarb
iret
pop
inc
es
je
xchg
xor
cs
les
mov
out
clc
lods
cwtl
cmp
cs
mov
adc
jne
jg
mov
jb
cmc
cmpsb
outsb
jo
fmull
lahf
sbb
jecxz
jl
pushf
jp
mov
or
rcll
inc
and
mov
cwtl
sahf
adc
iret
test
fsubrl
push
cld
mov
sbb
popa
push
addr16
mov
mov
int3
sarl
mov
dec
js
inc
xchg
mov
shr
push
adc
add
hlt
daa
lea
mov
sub
push
mov
jbe
test
push
and
in
test
repnz
jg
and
out
mov
ret
push
adc
xchg
popf
rolb
dec
imul
xchg
je
push
je
mov
aaa
in
inc
cmp
les
cmp
adc
pop
dec
add
movzwl
loop
inc
rol
adcb
inc
push
test
or
ds
adc
or
pop
jae
mov
inc
outsl
lods
gs
push
pop
fdivr
mov
lret
xchg
movl
arpl
outsb
mov
and
xchg
das
xchg
cmc
je
xchg
pop
sar
xchg
in
cmpsb
add
mov
test
sub
aaa
xor
rorb
jnp
aaa
ror
mov
xor
inc
add
jae
adc
std
cmp
movb
int
cmpsl
jle
xor
jo
lods
jae
addr16
sbb
roll
dec
dec
cmpsb
orl
mov
mov
mov
pop
xor
mov
mov
inc
sbb
idiv
or
cmp
movsb
xchg
loopne
roll
mov
sbb
lods
cmp
sar
xchg
adc
stos
cld
lcall
mov
loop
arpl
movsb
dec
mov
nop
pop
pushf
inc
xchg
mov
fwait
push
add
adc
scas
mov
push
inc
js
test
jl
call
jmp
fisttps
aam
cmc
sbbl
ljmp
fsubrs
pop
ret
xor
cwtl
sarb
test
inc
outsb
sub
dec
por
inc
sub
pusha
je
add
sbb
adc
iret
cwtl
subl
and
pop
arpl
loopne
sub
inc
push
adc
sub
and
mov
adc
xchg
pop
mov
mov
mov
mov
adc
cmp
ljmp
mov
lret
pusha
dec
pop
fwait
mov
shr
pop
icebp
insb
out
mov
iret
jp
sarl
or
add
mov
xor
in
ds
adc
xchg
add
into
push
movsl
fs
shlb
imul
push
shrl
scas
cli
fnstsw
xchg
cmp
jmp
cmpsl
xchg
mov
add
pop
mov
mov
pop
inc
mov
cmp
lret
pop
push
rcrl
movsb
fnsave
mov
inc
mov
loope
call
nop
mov
lret
pop
fisubl
dec
fistpl
pop
sbbb
push
ja
or
cli
mov
xchg
gs
mov
addb
outsl
scas
in
divl
sub
movsl
jle
mov
or
jecxz
lock
pop
sahf
lahf
movaps
or
push
inc
lods
std
jecxz
push
push
loop
ret
cli
lahf
or
cmp
out
and
or
jmp
push
scas
jmp
or
ficoms
cli
bound
push
aaa
int
jae
xor
mov
cmp
inc
xchg
es
push
mov
dec
pop
push
adc
aam
movsl
std
jp
inc
in
dec
dec
fwait
mov
sbb
xor
or
xor
mov
xor
fucomi
mov
in
jns
sar
push
push
cmp
sahf
xchg
repnz
and
inc
fidivl
andb
mov
fdivr
mov
imul
xchg
insb
mov
shl
jg
stos
sub
xor
jae
mov
adc
in
mov
stos
or
ja
xor
mov
xlat
in
dec
stos
scas
insl
fldenv
cmpsl
adc
jne
pusha
add
cmp
xchg
cmp
pop
push
xchg
lahf
stc
imull
pop
jnp
inc
js
add
cwtl
push
inc
out
inc
scas
mov
lea
pop
dec
lea
inc
mov
mov
rcrl
loopne
cmp
mov
and
repz
ljmp
std
clc
das
dec
adc
aaa
leave
cmpsl
adcl
jp
clc
or
movsl
enter
xchg
push
jle
stos
cmp
push
jo
or
cmp
sub
jo
add
cld
xchg
out
pop
repnz
jae
mov
test
fisttpl
mov
daa
mov
daa
aaa
dec
stos
ret
or
and
cmc
add
ss
bound
xchg
pop
or
sahf
addr16
pop
aam
pusha
das
out
xchg
call
cmpsb
xor
sti
mov
jno
push
push
cltd
popf
popa
sbb
aas
jnp
pop
adc
fidivl
mov
popa
inc
outsb
aas
sub
into
call
rcrl
pop
push
xor
insl
ret
fsts
push
xor
mov
dec
lcall
mov
xorl
lret
sub
shrb
adc
cwtl
cwtl
stc
lods
jmp
ret
jl
pusha
fs
push
dec
dec
cli
in
add
mov
fs
dec
in
dec
or
out
pusha
ss
jg
jae
inc
mov
lods
je
cmpsb
aaa
add
sbb
jmp
stc
mov
jbe
xchg
test
out
jae
inc
dec
loop
sub
mov
mov
jg
mov
sar
cmp
xor
das
adc
push
push
add
mov
arpl
mov
cmp
sbb
dec
add
call
cmpsb
xchg
add
fs
scas
imul
int3
inc
xor
scas
out
loopne
int3
scas
cmpsl
lret
std
jg
cwtl
repz
mov
jo
pushf
dec
cmp
bound
adc
xlat
dec
dec
scas
push
in
int3
out
repnz
or
jae
mov
test
daa
push
sbb
mov
and
hlt
imull
sub
mov
sbb
jbe
xchg
cmc
jno
ret
inc
mov
int
outsb
in
jecxz
cli
push
arpl
push
xor
add
sbb
shll
fmuls
sbb
pop
push
adc
mov
fstpt
jl
outsl
sbb
in
add
and
pop
pop
dec
ret
push
mov
test
mov
push
xor
imulb
lds
cwtl
mov
jecxz
fidivrl
jne
pusha
sbb
ffree
xchg
ficomps
sbb
add
stc
mov
inc
jp
inc
ja
cwtl
or
jbe
or
jo
std
sbb
adc
daa
repz
mov
xchg
or
and
jb
fidivs
leave
sbb
mov
pop
out
aam
movsb
pop
pusha
nop
out
movsb
call
mov
pushf
das
popa
dec
jns
stos
rcrl
stos
test
pusha
into
dec
push
addr16
dec
inc
sbb
mov
popl
out
mov
jno
clc
jae
lret
out
mov
add
daa
sub
out
insb
icebp
add
cmpl
cmpsl
jl
adc
adc
inc
sbb
pop
jmp
or
add
shll
lret
fs
insl
mov
mov
data16
pop
lods
mov
mov
arpl
repnz
ja
addr16
adc
jecxz
or
inc
add
or
lret
mov
jno
mov
sahf
fimull
outsb
cld
dec
pop
sub
mov
push
adc
gs
mov
sbb
popa
push
idivb
or
lods
in
lahf
mov
push
mul
out
sbb
pinsrw
sbb
mov
xchg
push
popa
push
out
stos
mov
cmp
cmp
scas
xorb
jne
fs
dec
mov
adc
ss
sarl
pop
or
sbb
dec
sbbb
shlb
pushf
incl
push
negb
rcrl
decb
jno
fmuls
aam
cld
sub
inc
push
mov
call
adc
sbb
cmp
fildll
in
fyl2x
mov
in
negl
popf
pop
cld
sub
xchg
mov
sub
into
cmpsb
cmpb
popa
jmp
sub
shll
rcr
jge
jnp
mov
sub
push
int3
sub
jns
mov
mov
xor
insb
sub
shlb
shll
xchg
aas
push
repz
popa
push
sbbb
push
lret
movsl
cmpb
sahf
inc
push
std
push
push
aaa
push
sbb
jecxz
inc
mov
add
mov
pop
imul
subb
jle
push
gs
push
pop
and
pop
test
or
in
subl
fs
shll
xchg
jo
add
push
incl
xchg
jnp
pop
mov
add
inc
mov
ret
add
in
push
psubq
jmp
dec
call
inc
pushf
cmc
sbb
icebp
adc
xchg
mov
push
mov
pop
fsubrl
test
icebp
add
mov
js
aas
mov
scas
in
pop
mov
xor
fisubrl
ret
test
scas
push
sbb
jno
ret
dec
xchg
les
dec
fs
data16
and
jne
filds
mov
or
push
inc
test
aad
cmp
pop
or
pop
in
mov
and
mov
loope
or
adc
mov
cwtl
or
stc
jl
bound
jge
call
mov
aaa
sbb
popa
jns
aaa
test
fwait
shll
inc
leave
jno
lea
lock
pop
sar
mov
mov
insl
int3
mov
fstl
rol
mov
dec
fbld
cwtl
adc
lret
xor
push
shll
adc
inc
call
push
sti
aam
push
push
inc
icebp
xchg
rcrl
cmpsl
cltd
or
push
mov
jne
xchg
test
dec
push
imul
stc
testl
xor
push
mov
call
lock
insl
jno
outsb
cld
mov
mov
imul
push
mov
jns
sub
adc
idiv
sahf
out
pop
jl
and
subb
data16
insb
je
aaa
leave
scas
inc
je
mov
mov
leave
mov
pop
cmpsb
xorb
ljmp
fwait
dec
pop
inc
test
cmp
je
stos
cld
clc
hlt
dec
dec
xchg
insl
lods
jo
fldl
sub
test
xchg
or
push
push
hlt
adc
pop
cmc
or
push
out
inc
pop
mov
sub
fimuls
dec
lret
cs
enter
mov
push
and
cs
cld
or
adc
pushf
pop
aas
and
cmpsb
jge
movsb
cmp
mov
dec
scas
lret
xchg
ret
inc
nop
inc
js
mov
mov
scas
rorb
stc
dec
mov
test
or
adc
mov
cmp
aas
outsl
sti
aas
and
jmp
jo
mov
clc
sub
in
int
stos
roll
cmp
cld
ss
pop
mov
push
jle
adc
and
mov
jns
lret
std
fidivs
imul
ljmp
dec
outsl
push
mov
movsb
inc
int3
sbb
call
clc
mov
mov
arpl
ret
stos
dec
sub
mov
sbb
into
and
dec
push
sbb
icebp
shrb
iret
loopne
aas
dec
mov
lods
or
dec
loope
push
push
sub
cmp
mov
mov
int3
dec
jne
jmp
xchg
ss
test
leave
pop
xor
cmp
add
lock
or
xchg
dec
sbb
in
cmp
fwait
xorb
sbb
and
ljmp
out
imul
jg
mov
testb
insb
in
jmp
or
add
mov
jp
pop
enter
sbb
mov
xchg
mov
shll
mov
jecxz
xchg
out
mov
xchg
insl
pop
cmp
dec
les
sbb
jl
or
aas
adc
jle
dec
lock
shrl
and
je
icebp
fs
pop
push
rcrb
lods
fmull
mov
push
push
nop
pop
fmulp
mov
add
fwait
or
push
loopne
pop
data16
nop
imul
cwtl
fdivl
aad
ds
arpl
push
mov
sbb
push
in
and
or
andb
aaa
fwait
adc
and
inc
sub
add
iretw
dec
sbb
pop
stc
cmp
addr16
loopne
jne
mov
movsb
sub
add
and
js
daa
dec
pop
clc
add
xchg
jne
cmp
xlat
dec
push
adc
aam
jno
pop
stos
into
mov
adc
aam
das
dec
pop
imul
int3
push
movsl
test
enter
fstps
xchg
jne
jns
gs
aas
iret
push
loop
cmpsb
mov
or
dec
mov
mov
fstpt
add
push
inc
jne
es
mov
movsl
fsubl
outsb
fwait
xor
mov
mov
jl
test
fsts
cmp
int
call
gs
shrb
lret
mov
lahf
cmp
stos
lods
mov
lea
rolb
jecxz
in
push
cld
int3
push
adc
shll
adc
jae
cmp
scas
lahf
and
sub
test
gs
add
jns
lret
ret
dec
repnz
pop
push
push
rcl
sub
push
ds
movsl
adc
push
push
fisttpl
popa
jnp
lods
jo
cmc
sbb
outsl
dec
in
jp
es
movsl
das
cmp
or
and
sahf
loop
leave
lret
lods
and
roll
fucom
xchg
test
mov
imul
mov
mov
and
mov
sbb
int3
or
test
leave
outsb
xchg
pop
pop
sahf
adc
repnz
mov
lcall
or
daa
and
and
mov
sbb
xor
sbb
mov
and
or
jmp
sti
jecxz
jne
lahf
lret
jns
int
std
push
mov
in
jae
cmpb
or
inc
in
xor
mov
sub
cwtl
je
aaa
or
int
ficoms
sub
cmp
test
push
adc
cs
push
lret
xchg
push
iret
xchg
xlat
cmc
adc
popa
outsb
mov
and
out
aad
enter
fxch
mov
stos
dec
xchg
cwtl
aaa
add
rorb
enter
frstor
std
xchg
dec
cmp
es
cmp
es
js
xor
dec
xor
add
xor
das
mov
test
sbb
out
test
movl
inc
in
sub
ljmp
push
sahf
fnstcw
fadds
pop
orl
lods
lret
in
hlt
mov
adc
mov
lret
mull
jae
and
mov
aam
push
mov
enter
cmp
adc
nop
stos
stos
cltd
push
mov
mov
xchg
in
or
pop
jbe
cmp
in
outsl
mov
fnsave
add
jmp
pop
add
ret
popf
and
adc
inc
enter
je
cmpsl
push
loopne
test
out
lret
adcb
ret
dec
dec
shll
push
icebp
mov
xchg
sub
sub
dec
jae
out
sub
rcrl
shlb
and
xor
cwtl
aad
inc
jo
dec
lret
jle
and
and
stc
mov
mov
xor
mov
xor
daa
fsubrs
idivl
cmp
rorb
cmpsb
outsb
sub
jno
ret
shrb
movsl
mov
je
push
adc
aas
insb
stos
or
lock
xchg
adc
scas
clc
test
add
in
mov
push
je
push
ljmp
lods
in
push
daa
sbb
pop
lds
pop
scas
cmp
sub
mov
jecxz
jmp
xchg
and
mov
lea
ret
cwtl
notl
dec
sub
push
repnz
mov
push
mov
inc
cmpsb
xor
adc
cltd
lret
xorl
rcrl
out
mov
sub
sbb
or
jne
add
adc
out
sbb
cmp
xor
popa
jno
adc
loopne
out
sub
add
stos
mov
add
icebp
jl
xchg
xchg
xchg
stos
or
fdivrs
adc
cmp
lcall
and
jmp
clc
out
cli
push
clc
shl
pusha
push
sbb
and
test
dec
mov
movsb
cltd
cmp
dec
arpl
sbb
mov
and
lods
xor
andb
push
sarl
stos
stos
icebp
test
add
popf
pop
nop
lods
push
ror
xor
adc
dec
inc
or
ja
sub
iret
lock
inc
in
lock
push
pop
ss
add
inc
je
push
test
mov
lahf
stc
cli
iret
push
out
fcomps
inc
sbb
and
repnz
mov
ss
sub
pusha
ret
jge
andb
lods
nop
jl
in
loope
pop
imull
xchg
mov
aad
clc
int
mov
aam
cltd
xchg
cmp
out
mov
or
lds
enter
faddl
icebp
movb
iret
xchg
sub
and
aad
sub
test
pop
imul
stc
test
hlt
xlat
neg
insb
xlat
pop
xor
scas
leave
sbb
fiaddl
imul
lods
imul
mov
pop
sbb
inc
mov
and
mov
jge
push
push
mov
xchg
and
xchg
das
push
mov
or
sub
faddl
mov
pop
scas
mov
jmp
adc
mov
adc
mov
insb
jb
inc
pop
les
cmp
dec
pop
or
add
lret
cmp
jmp
in
cwtl
push
xchg
adc
pop
ficompl
adc
testb
inc
std
sub
out
push
pop
or
and
push
jge
push
adc
xor
inc
mov
pop
mov
xor
add
les
das
mov
inc
mov
push
inc
lock
movsl
cld
jo
xchg
repz
hlt
outsb
jnp
dec
andl
js
jmp
mov
pop
adc
mov
inc
notl
leave
inc
sub
sbb
cmp
dec
pusha
xchg
cmp
push
orb
mov
mov
or
inc
mov
cmc
clc
dec
xor
xor
fldcw
push
xchg
push
dec
int
mov
and
fisubrl
push
in
xor
into
sahf
sub
jae
cltd
clc
push
inc
gs
dec
nop
repnz
sub
jge
mov
xor
arpl
aas
mov
xchg
mov
mov
mov
and
lods
dec
dec
push
push
lret
fbstp
enter
mov
mov
movsb
out
lea
adc
sbb
xchg
sub
arpl
mov
xchg
stos
sbb
sub
and
lret
pop
mov
popf
xor
lods
sbb
mov
scas
sub
or
psubusw
stc
adcl
int3
dec
push
ljmp
fidivrs
shlb
dec
lds
xor
icebp
or
loopne
push
ret
adc
and
in
inc
lea
xchg
xchg
orb
add
clc
fs
mov
lea
mov
fcoml
mov
fwait
sub
ja
push
das
push
stos
or
cmp
movsb
lret
daa
pop
mov
popf
testb
lea
cli
dec
mov
adc
sub
iret
cs
fiadds
mov
and
pop
sbb
jle
sub
xor
cwtl
inc
and
scas
das
jmp
outsb
shll
dec
aad
adc
add
dec
jb
cmp
ds
je
nop
cmp
loope
aam
xor
or
mov
leave
dec
les
ret
pusha
sbb
aad
pop
mov
jecxz
in
pop
jl
adc
jle
dec
mov
iret
out
icebp
inc
ficompl
stos
cmc
inc
and
xor
enter
jnp
xchg
pop
ljmp
sbb
lods
push
mov
fyl2x
arpl
divb
pop
pusha
sbb
or
push
dec
loope
dec
mov
fsubl
into
iret
addr16
dec
leave
fmuls
es
pop
sahf
add
mov
arpl
sbb
or
sbbb
mov
dec
ss
in
mov
pop
adcb
inc
sti
out
test
sbb
cmp
ljmp
pop
dec
fs
dec
xor
std
aad
pushf
call
in
inc
pop
loop
and
or
xor
push
sub
pop
sub
cltd
sbb
sarl
repz
push
ds
lret
pop
jmp
pop
add
fnstenv
orb
sti
xor
bound
lea
sub
daa
enter
mov
les
fistps
adc
mov
cld
fimull
aad
insl
sbbl
adc
push
push
mov
sbb
cld
aad
repnz
ss
xchg
repnz
cmp
je
enter
std
aas
in
fstpt
mov
mov
iret
movsl
fiadds
mov
pop
insl
and
mov
mov
sbb
jle
mov
test
jl
jno
cmc
xor
push
cmp
fmull
dec
cmp
test
test
lcall
and
out
aam
mov
jge
mov
pop
sarb
mov
xlat
andb
cmpsb
div
aad
sbb
lods
sub
popf
add
arpl
cmp
mov
mov
jns
jae
xchg
popa
inc
addr16
jb
bound
shlb
sub
jo
std
test
imul
in
push
mov
xor
out
dec
les
in
push
lods
dec
or
push
mov
sub
adc
fisubs
mov
out
xchg
add
subl
pop
in
add
sti
add
test
or
cmp
adc
dec
sbb
sub
mov
clc
out
loope
sub
lds
jl
add
lret
arpl
fildll
pop
sub
ret
stos
cmp
decl
int
cmp
daa
and
lahf
push
cmp
mov
sbb
jb
or
inc
cmc
in
call
xor
les
lcall
outsl
insb
insb
sub
shrl
cmc
mov
sahf
test
inc
fwait
sti
adc
mov
xchg
jbe
jmp
scas
sbb
add
int
cmp
xchg
push
pop
cltd
sub
mov
mov
push
push
mov
pop
jl
mov
jmp
rorl
or
scas
xchg
out
mov
ficomps
push
or
inc
lods
mov
sahf
push
cwtl
or
in
cwtl
xor
fwait
and
mov
xchg
jo
xchg
mov
out
ljmp
sar
xchg
jmp
test
xor
jae
scas
rcrb
inc
or
aaa
push
iret
insb
out
outsb
mov
orl
dec
jnp
pop
push
out
inc
mov
sti
pushf
and
mov
mov
test
pop
loop
test
pop
sbb
adc
cwtl
scas
enter
lea
cmpsl
mov
sbb
xchg
movsb
inc
push
xlat
sub
rcll
mov
lahf
js
cmp
les
and
test
xor
ret
aaa
inc
mov
mov
xchg
lods
outsw
test
dec
adc
mov
ds
cmp
pop
adc
adc
cmp
jmp
adc
push
mov
xchg
lock
dec
stos
adc
imul
in
pop
lods
jae
cltd
sbb
movsb
pop
cmpsl
loop
ljmp
cltd
and
cmp
movsb
jae
mov
inc
add
cmc
xor
clc
fcoml
rcr
push
push
pushf
cwtl
movsb
imul
inc
jns
mov
test
xchg
or
pushf
rcl
das
ds
pop
xchg
cmc
pop
jno
jns
inc
mov
pop
lds
xor
mov
movsb
inc
aam
mov
cmc
test
sbb
xchg
push
mov
cmpsb
push
in
rclb
sbb
jne
hlt
loope
push
push
xor
sbb
fistl
dec
pop
sahf
into
bound
aam
inc
jmp
cld
xor
mov
fimull
sub
push
sbb
leave
aad
mov
aaa
and
xchg
jmp
fsubs
sbb
icebp
inc
xor
jecxz
lret
adc
outsl
jp
mov
dec
and
pop
push
adcb
adc
push
outsl
jecxz
lret
divb
xor
fisubs
lds
dec
push
and
cmp
cmp
cs
jg
fxch
xchg
std
or
leave
movsb
movsl
inc
fistpll
and
ret
fiadds
int
mov
subl
cmp
fwait
aaa
dec
xchg
adc
popa
mov
add
jecxz
inc
out
movsb
fildl
outsl
pop
mov
push
sbb
mov
imul
adc
outsb
cmpsl
pop
outsb
sub
inc
iret
dec
cs
pop
jae
cmp
xchg
inc
and
rorl
addr16
nop
pop
imul
cmpsb
fs
enter
pop
lar
aas
xor
popa
and
dec
fcoml
rcrb
sbb
shlb
dec
mov
mov
jp
jbe
sub
pop
insb
addb
mov
outsb
xlat
loopne
nop
add
xchg
jbe
add
mov
sub
jnp
fidivrl
pushf
inc
jmp
push
data16
dec
jo
cmp
aam
dec
cld
lret
inc
ficoms
xchg
inc
mov
ljmp
insl
cmpsb
adc
cmp
inc
loop
xor
adc
cld
mov
loop
mov
stos
into
mov
mov
test
shlb
fwait
pushf
xor
cld
pop
test
cli
cmpsl
sahf
jo
decl
in
lods
dec
cmpl
sbb
cmp
popf
bound
es
rclb
adc
es
xor
cmpsb
dec
jl
je
aaa
xchg
adc
or
sbb
aam
pushl
cmp
xor
jnp
push
mov
popa
or
jp
subb
add
adc
mov
jns
ficomps
movsl
out
rolb
bound
in
fidivrs
jb
bound
cmp
jno
popf
pop
fistpl
sbb
xor
pusha
pop
ror
out
fnstcw
mov
jecxz
mov
icebp
pop
adc
pop
mov
xchg
mov
dec
mov
stos
push
das
and
jo
fisttpll
cmpsb
push
scas
dec
sub
xlat
in
arpl
insb
pop
lock
sahf
lea
shlb
push
xor
das
adc
cli
daa
sti
in
sti
je
fcoms
mov
or
mov
nop
cmp
bound
pop
dec
ljmp
push
repz
push
out
sbb
out
cmpsl
mov
push
push
insb
ror
jl
imul
je
lock
xchg
jg
aam
jle
lds
fnstsw
fwait
std
sbbb
movsl
sarb
repnz
dec
int
push
sbb
push
jne
aaa
or
cmc
mov
mov
add
and
xor
mov
daa
cmp
cwtl
inc
adc
sbb
dec
sbb
iret
sbb
sahf
lock
fcoml
dec
retw
dec
nop
jmp
inc
or
ljmp
mov
add
lret
fs
test
outsl
orb
xchg
or
int3
mov
dec
sub
and
dec
mov
cmp
fdivrl
mulb
fldcw
imul
in
jmp
mov
push
inc
sub
pop
xor
inc
shll
fs
push
shl
push
xchg
mov
pusha
mov
adc
sbb
addl
movsl
int
scas
pop
push
ficompl
outsb
xchg
in
pop
sbb
popf
roll
in
outsl
int3
and
jno
push
clc
mov
fisubrl
sbb
test
push
mov
hlt
jb
sbb
insb
cltd
inc
in
mov
ja
aas
popf
cltd
sahf
jb
gs
sbb
popf
mov
test
jbe
jp
out
mov
movd
cmpsl
fsubl
push
mov
xchg
mov
flds
xor
jb
sub
sub
pop
jmp
icebp
or
fdivl
fsubl
loop
rol
nop
cmpsl
or
aad
xor
or
loope
lahf
jb
push
jmp
mov
clc
xchg
int
or
pavgb
or
mov
stos
fiadds
sub
imul
sub
std
movsl
or
mov
into
mov
xchg
jns
and
test
mov
xchg
stc
fnstcw
es
jno
inc
push
cmpsl
pushf
mov
outsb
movsl
ds
and
popfw
imul
insb
jo
stc
jae
jo
inc
push
mov
xchg
loope
dec
sbb
mov
negl
enter
in
jae
jp
cmpsl
pop
jb
cmpsb
nop
xchg
mov
std
idiv
mov
dec
outsl
and
adc
sbb
ret
clc
cmp
push
rcll
mov
and
push
and
lret
sbb
mov
add
sub
pop
iret
push
jne
xor
adc
pop
mov
stos
in
les
sarb
test
test
pop
xchg
or
negl
and
int3
rcrl
push
out
sub
lods
enter
cld
jno
xor
fbstp
shll
adc
cmp
pop
or
mov
cli
inc
xchg
ret
or
cli
push
lahf
sbb
iret
outsb
imul
push
pushf
xchg
ret
pop
or
cmp
fstl
add
call
dec
aad
sub
ja
push
sub
rolb
ds
adc
movsb
cmp
mov
lcall
xor
test
sbb
mov
jp
jbe
cmp
xchg
pusha
and
in
adc
fistl
fildl
mov
ret
xlat
push
in
and
pop
cmc
inc
jle
adc
pusha
jge
into
sbb
mov
in
jno
dec
sub
jb
lock
xor
testl
divl
addr16
add
aam
mov
cmp
icebp
jl
dec
push
lahf
mov
call
jns
lds
adc
jne
cld
fnstsw
shr
cmpsl
ficoml
inc
mov
sti
or
or
notb
test
fs
repnz
adc
enter
mov
mov
testb
or
mov
jle
outsb
cmp
insb
pop
jb
arpl
loopne
pop
pop
adc
jno
sbb
mov
xchg
or
ds
loope
jne
sbb
sti
stos
lds
push
mov
or
test
dec
push
adc
lret
in
js
and
and
outsl
push
out
rcll
xchg
push
xor
test
jnp
cmc
in
fidivrs
out
rolb
sbb
dec
dec
out
mov
lret
inc
stos
push
pop
cmp
jl
push
fnstenv
and
cs
icebp
and
mov
pusha
lea
div
and
push
repnz
jmp
imul
cltd
shrl
sar
add
ret
out
jo
lahf
jg
lea
or
stos
fs
cmp
mov
es
jbe
jns
xor
push
add
leave
rcrb
jmp
rclb
lea
fs
cmp
sub
sub
inc
fildll
fldcw
loopne
add
jl
add
fiadds
test
add
mov
je
xor
mov
stc
dec
add
loop
ret
xor
mov
subl
mov
mov
pop
inc
popf
loopne
ss
stos
cli
jl
and
mov
fsubp
cmp
stos
call
subb
mov
jnp
pop
cwtl
sub
repnz
pop
mov
imul
or
out
mov
mov
aaa
in
add
inc
pop
mov
push
mov
inc
mov
pop
or
sub
mov
ret
clc
rorl
out
mov
icebp
xchg
hlt
bound
pushf
rcrb
jno
movsl
cs
testb
je
lahf
ret
add
mov
sti
cmp
es
test
sbb
push
into
out
jge
and
pop
cmp
or
in
fldl
mov
jge
inc
mov
inc
sub
xchg
jnp
mov
fs
jb
iret
push
mov
fistps
fisubl
in
mov
int
jmp
xchg
cwtl
mov
std
je
xlat
fwait
sub
push
ja
int
insb
arpl
das
cli
aas
das
xor
dec
lret
stos
icebp
mov
mov
cmc
sub
jo
sub
mov
cmp
pushf
mov
pop
add
lcall
and
push
fsts
fisttpl
jo
fnstcw
jb
jle
das
enter
mov
loopne
call
lcall
sbb
cmp
jge
aad
daa
jno
and
scas
sbb
lahf
cmp
fidivl
ret
insl
arpl
test
cwtl
dec
push
mov
jle
test
outsl
addl
xchg
and
das
rcrl
std
dec
mov
sub
nop
sti
sbb
cld
repnz
and
movsb
adc
jmp
orb
sbb
mov
dec
repz
mov
sbb
dec
outsl
cmp
cmpsl
or
cmpsl
and
lds
push
mov
ja
iret
lahf
hlt
lret
jmp
inc
repnz
sub
nop
scas
mov
movsb
test
mov
mov
xchg
inc
mov
and
gs
subb
sub
pop
mov
xlat
cmp
pop
xlat
pop
pop
push
xor
add
dec
leave
xchg
adc
jo
xor
aam
or
repz
testb
sbb
and
lret
jg
jno
push
cmpsl
les
push
std
inc
adc
int
std
fwait
fdivrl
cwtl
jns
rolb
rol
and
das
jno
repnz
mov
aad
push
jae
push
sub
cmp
in
adc
leave
mov
scas
xor
in
dec
jge
mov
lods
adc
movsl
nop
or
cmp
sub
ficomps
adc
fsubrs
pusha
adc
inc
xlat
push
adc
jecxz
and
ret
xor
nop
fdivs
mov
cmp
add
jae
movsb
dec
in
scas
insb
nop
ljmp
add
dec
fwait
adc
push
push
or
std
jmp
push
outsb
mov
mov
sbb
outsl
out
aam
pop
je
adc
jl
cli
inc
dec
xchg
mov
movsl
cli
sbb
fsubs
popa
scas
les
std
rorl
out
das
bound
xlat
inc
push
daa
push
lods
mov
rorb
add
xor
mov
push
mov
aas
or
cmpl
lahf
pop
mov
mov
and
lcall
add
mov
mov
cli
popf
jecxz
frstor
insl
lds
push
jp
clc
push
in
repz
leave
pop
cli
add
xor
mov
mov
incb
scas
fldl
inc
sub
mov
lods
test
ret
mov
push
test
std
sbb
out
and
xchg
push
cmpsb
jns
add
adc
stos
in
insb
aas
jge
fadd
xor
sub
cmp
xchg
xchg
lds
hlt
decl
cmpsl
push
popa
xor
test
inc
popw
repnz
xor
inc
jno
dec
jle
pop
xor
dec
shrl
cmp
pop
adc
xor
mov
shlb
mov
out
push
cmc
std
add
sbb
jp
pop
ja
cmpsb
pop
aas
pusha
push
add
popa
test
dec
pop
add
add
inc
push
mov
outsb
sub
out
mov
mov
jb
fmull
mov
clc
sub
loope
hlt
sbb
nop
add
adc
stc
and
jo
je
jae
mov
pop
mov
or
jb
les
sub
icebp
or
mov
xor
mov
fcoml
mov
jecxz
inc
test
and
add
inc
lret
jnp
iret
test
add
in
xlat
mov
push
les
or
repnz
and
lds
push
pop
xor
jae
cwtl
sub
mov
push
into
je
adc
clc
xchg
jns
leave
jnp
push
lea
call
push
fstps
mov
aam
cmc
loope
leave
daa
sub
jno
test
subl
rol
sub
cmc
push
sbb
pop
mov
sahf
adc
fsubl
push
mov
pop
leave
pop
imull
dec
or
mov
leave
lea
stc
cmc
mov
push
push
data16
mov
aaa
mov
out
fwait
mov
push
cwtl
in
xchg
sub
das
inc
push
sub
jecxz
push
mov
inc
rcrl
push
and
dec
mov
iret
mov
sub
push
repnz
loop
sarl
mov
mov
shl
mov
cld
pop
cltd
mov
inc
inc
push
dec
divl
jno
mov
mov
mov
pop
mov
xchg
pusha
sub
scas
pop
add
cltd
js
sub
cmc
dec
imul
sub
inc
pop
add
stos
clc
rcll
dec
mov
orb
hlt
mov
mov
push
inc
cltd
dec
movsb
inc
jecxz
int3
fisttps
mov
in
jecxz
adc
iret
popa
repz
jne
pop
or
ret
outsl
adc
mov
dec
xor
outsl
jge
adc
into
jnp
test
sub
xor
inc
push
mov
mov
push
and
sub
aam
mov
add
out
mov
mov
cmpsl
add
mov
dec
xorb
mov
stos
mov
aad
rclb
or
sbbb
mov
lret
and
js
movl
hlt
movsl
pop
sub
jno
imul
cmp
ss
test
mov
mov
xchg
insb
add
cmpsb
mov
cmpsb
stc
out
inc
or
push
lcall
push
push
in
add
outsl
or
subps
and
test
std
roll
js
test
push
shrd
cld
mov
in
clc
lret
xcrypt-cbc
cmpsl
push
out
jg
mov
mov
in
and
push
out
mov
xchg
testb
mov
dec
movsb
rorb
lret
add
jp
mov
add
stos
pop
insb
stos
stc
in
test
cmp
fistpll
sbb
xor
notl
push
xor
jne
adc
gs
xchg
xchg
inc
js
int3
jle
insb
clc
andb
push
xchg
xchg
das
lcall
cmp
mov
cmp
out
sub
sbb
jbe
add
push
sbb
mov
xor
add
adc
dec
mov
sbb
filds
movsb
xor
std
mulb
inc
pop
fwait
stc
xchg
push
mov
es
adc
xor
adc
mov
loop
fistl
aaa
jo
or
cmpsb
out
cmp
loope
add
aaa
shlb
je
inc
pop
cwtl
clc
out
subb
orb
add
scas
sbb
ja
add
pop
mov
mov
and
in
iret
shll
mov
xchg
jnp
push
adcb
sti
xor
lret
cwtl
xor
or
aas
sub
xor
cwtl
mov
mov
jbe
mov
cmp
test
mov
lret
adc
in
sbb
ret
fmull
mov
test
lea
hlt
inc
or
add
aas
imul
adc
sbb
dec
lods
mov
sbb
stos
stos
jmp
push
pop
imul
jne
icebp
cmp
fwait
mov
xchg
xor
mov
in
loop
dec
mov
adc
in
mov
xor
cld
push
inc
xor
sbb
lahf
int3
xor
pop
fdivl
jae
jecxz
aam
repz
scas
mov
fsubr
rcrb
mov
sub
mov
int3
outsb
xchg
push
pop
repnz
or
fcomip
mov
inc
xchg
mov
inc
sahf
mov
pop
mov
push
lea
cmp
out
mov
inc
int
mov
daa
mov
sahf
push
mov
xchg
test
ret
xchg
add
inc
ror
dec
mov
add
push
mov
mov
lret
inc
in
hlt
cmpsl
popa
jb
dec
fstl
inc
addr16
inc
sti
and
aad
sar
pop
mov
push
lods
lret
add
stos
pop
out
int3
push
jle
outsl
pop
and
roll
je
xor
bound
enter
mov
jp
push
sbb
mov
out
pcmpeqb
adc
jl
cmp
cli
cmp
cs
mov
lret
mov
adc
cwtl
enter
inc
lret
jbe
inc
ffreep
add
pop
es
ljmp
mov
inc
jb
inc
stos
xor
pop
xlat
cs
push
or
pop
pop
test
adc
lods
enter
cli
pop
shll
pop
sbb
sbb
dec
xchg
pop
inc
mov
cmovno
sbb
leave
in
xchg
inc
jl
mov
push
insb
mov
scas
pusha
mov
insb
sar
addr16
sub
xor
add
in
push
jnp
je
xchg
pop
sub
mov
push
add
es
loope
mov
test
std
push
pop
cmp
into
xchg
push
jp
and
mov
xchg
fdivrs
or
xchg
andl
lods
test
adc
push
lret
repnz
push
xor
sarb
pusha
add
cs
js
shrl
out
or
mov
ss
mov
fisttpl
cltd
cltd
xchg
xor
jb
fnstsw
lahf
cmp
pop
and
aad
adcl
cmpsb
pcmpgtw
imul
jbe
clc
fmull
lcall
add
pusha
sbb
jge
imul
push
lcall
xchg
xlat
cmp
scas
mov
mov
xor
shl
xor
push
ds
mov
daa
stc
fs
sti
dec
push
and
addb
jne
out
test
add
pop
push
inc
movsl
inc
and
xchg
movsb
mov
aas
mov
mov
mov
jecxz
fstpt
pushl
in
dec
icebp
cs
lock
jl
mov
arpl
push
and
test
incl
loop
popf
int3
or
jno
ret
pop
sahf
pusha
cwtl
std
imul
mov
cmp
lret
or
and
jmp
lds
popf
cmp
mov
cmp
mov
add
and
or
adc
pop
push
ja
xor
hlt
mov
sahf
std
push
fidivs
cmc
jne
lcall
inc
and
iret
stc
mov
inc
xor
into
stos
pop
xchg
inc
in
sbb
cmp
sti
jne
mov
test
les
jnp
adc
dec
iret
cmpsl
or
or
mov
and
lods
xlat
repnz
adc
imul
sbb
dec
cmp
inc
sbb
jo
add
pop
aam
loope
mov
sarl
mov
sarl
test
adc
push
inc
inc
rolb
stos
or
sar
dec
adc
insl
pop
sub
xchg
cmp
cmp
mov
rcl
xlat
mov
ljmp
shll
popa
inc
scas
pop
fisttps
pusha
out
inc
dec
adc
push
mov
lock
push
fidivl
mov
mov
fdivl
and
cmpsl
dec
roll
shrl
mov
in
xor
ret
ds
xor
sbb
test
sbb
ljmp
mov
sbb
jp
lahf
in
pop
mov
lcall
vpmullw
add
mov
push
out
jbe
int
ret
test
jns
decb
cltd
jo
mov
add
clc
pop
jmp
jmp
jg
pop
movsl
mov
push
mov
xor
ret
jno
cmova
add
in
test
pop
mov
or
adc
inc
insb
stc
imul
lods
fistl
daa
mov
out
cltd
scas
test
loope
popa
or
out
inc
xchg
shlb
fcompl
mov
dec
lahf
cld
cmp
test
push
push
xchg
jle
ret
mov
and
out
inc
jp
jmp
add
jge
add
jmp
cmp
push
jge
dec
ljmp
jl
sbb
push
inc
cmp
enter
xchg
stc
faddl
pop
or
dec
jbe
push
xchg
mov
xchg
add
test
sub
fmuls
jns
inc
subl
shll
push
sbb
imul
aad
subb
lock
add
and
orl
add
lahf
pause
jno
repnz
pop
and
daa
scas
frstor
int3
xchg
or
push
imul
adc
xorl
mov
jge
outsl
pop
frstor
movsb
test
pusha
xor
push
push
or
pop
ret
mov
jmp
adc
bnd
aaa
pop
lods
and
fsub
mov
cli
jl
gs
idivb
inc
pop
aas
cmc
lahf
pop
inc
pop
xchg
jecxz
lock
in
enter
out
add
ljmp
mov
sbb
test
push
das
sahf
and
lret
cwtl
cmp
aam
mov
sbb
and
xor
mov
jmp
enter
ret
fists
rcrb
les
mov
xor
out
or
cmp
lret
hlt
or
mov
and
gs
sub
mov
outsb
xchg
lock
mov
mov
or
xor
fistps
dec
adc
hlt
xchg
dec
adc
stc
out
and
sub
push
stos
mov
iret
data16
jmp
dec
inc
push
ljmp
sbb
adc
push
sbb
push
cmp
je
test
loop
rclb
cmp
iret
das
iret
and
mov
daa
inc
pop
fcmovnb
aaa
repnz
pop
movsl
sbb
popf
xchg
arpl
adc
lds
xchg
mov
cmp
jp
aaa
add
fsubl
pop
or
adc
notl
lret
lods
push
push
jmp
leave
mov
scas
cmp
lret
xchg
dec
xchg
decb
clc
xchg
jno
and
cld
jbe
sarl
mov
cmpsl
popf
xchg
cmpb
out
arpl
cmp
jns
aas
leave
pop
xor
insl
mov
or
scas
jmp
fcmove
jp
fcomp
sbb
inc
aas
push
cwtl
adc
imull
mulb
les
mov
dec
cmp
xor
inc
mov
jg
cmpsw
or
mov
into
and
mov
enter
dec
rolb
pop
scas
ret
mov
mov
hlt
je
pop
filds
mov
int
xchg
sbb
data16
or
dec
ret
ljmp
xorl
add
xchg
cmp
imul
and
mov
inc
jnp
push
js
sbb
dec
shll
insb
movaps
mov
sub
in
xchg
inc
dec
arpl
pop
mov
stos
dec
pop
rclb
lcall
sbb
ror
xor
or
mov
fisubrl
sub
or
loope
lock
add
in
mov
sbb
daa
or
sub
je
lret
fisubrl
pop
mov
push
fstl
xor
or
in
mov
aaa
mov
jp
xor
push
mov
movaps
push
add
pop
imull
mov
add
add
test
icebp
jmp
inc
aad
mov
stc
out
xchg
shrb
mov
mov
mov
xor
scas
in
jnp
and
pop
rcl
dec
fiaddl
sub
xor
in
pop
data16
mov
aam
lea
aad
mov
pop
test
xchg
adc
outsb
call
call
add
clc
sbb
xchg
jno
stc
add
nop
stc
movsl
xchg
mov
fidivl
scas
clc
gs
dec
mov
or
cwtl
push
fidivrl
mov
inc
xchg
ljmp
mov
jmp
dec
outsl
lcall
and
mov
xor
jg
mov
out
push
mov
sbb
stos
sub
outsl
mov
popf
rclb
fisubrl
pop
or
jnp
sbb
mov
jne
xchg
dec
mov
fmuls
in
aaa
into
xchg
push
jecxz
cmp
out
and
xor
sub
lods
lods
mov
inc
cmp
sbb
sub
mov
jnp
pop
jnp
jp
rcrb
fildll
ds
cmp
or
mov
add
fmuls
daa
jmp
test
add
pop
mov
pusha
xor
sub
mov
pop
mov
andl
jge
mov
xchg
les
sub
in
int3
mov
inc
adc
mov
loop
hlt
ja
push
ret
sbb
sarl
ret
mov
mov
popa
fld
or
dec
push
jnp
pop
int3
into
and
loope
cld
xchg
lods
add
andb
push
xor
mov
test
ja
and
loopne
fsts
sub
push
cltd
sub
fwait
mov
pop
and
adc
mov
xchg
lods
orl
or
stc
fnstenv
out
adc
cmp
jnp
rorb
or
inc
pop
sti
cmp
fwait
mov
mov
push
xor
fisubrl
pop
punpcklwd
mov
lcall
sbb
adc
push
pop
dec
sub
lahf
pop
adc
cmp
cli
jmp
test
aad
mov
mov
sbb
fmuls
pop
jbe
jl
mov
mov
in
js
jecxz
dec
insb
stos
pand
lds
mov
jbe
dec
out
sti
arpl
mov
push
lea
xchg
and
or
inc
push
das
lea
fwait
and
out
mov
movsb
fiadds
cld
dec
dec
pop
inc
and
mov
setp
pop
pavgb
mov
cmp
inc
shrb
jmp
dec
iret
dec
test
aam
nop
mov
jne
movsl
inc
dec
enter
addr16
xor
fcomip
adc
jl
xor
pop
jge
push
mov
sahf
dec
mov
jp
inc
test
arpl
cmpsl
xchg
cmp
pushf
push
scas
sahf
sti
sbb
mov
scas
xchg
mov
es
mov
xchg
xchg
and
nop
xchg
dec
xchg
xchg
push
repnz
std
dec
lods
or
xchg
sti
xor
ret
clc
cmp
or
xchg
push
lcall
cmc
push
mov
mov
out
je
pop
dec
mov
fwait
mov
pop
sbb
jg
or
and
popa
mov
pop
jae
cmp
or
and
sub
mov
movl
neg
mov
adc
xor
dec
push
stc
push
cld
mov
fdivrp
lahf
clc
jb
mov
adc
ss
in
jmp
enter
leave
lods
inc
sub
add
inc
mov
xchg
sti
out
clc
movsl
cmp
lcall
fcomi
jno
insb
dec
rorb
call
cltd
xor
arpl
pop
movsb
loope
je
fs
pop
add
js
stos
pusha
mov
pusha
jge
std
push
xchg
vpmacsww
loop
lahf
mov
or
jnp
shr
sbb
xchg
mov
mov
or
in
mov
add
pushf
add
and
mov
pop
arpl
negl
push
add
cltd
jmp
push
lods
xchg
push
push
cld
and
repz
or
lds
insb
sub
push
xchg
lret
mov
mov
or
xlat
iret
fidivl
adc
push
mov
out
push
cli
outsl
cmp
fxch
das
push
lret
je
sti
add
icebp
into
jmp
sbb
bound
je
addr16
pusha
push
xor
adc
call
push
sub
inc
pop
or
scas
fwait
cmc
sbb
xchg
xor
ret
mov
mov
mov
aad
push
outsl
adc
sbb
jg
adc
out
mulb
cmpsl
mov
cli
jb
cli
shlb
inc
sub
inc
xchg
sahf
xor
xrelease
xchg
ret
cmp
mov
xchg
xor
mov
push
mov
pop
ds
clc
mov
lods
push
insb
mov
fwait
dec
cltd
dec
pop
inc
push
lahf
test
mov
gs
lret
xchg
dec
imul
jle
xchg
jo
es
jo
jmp
xchg
ljmp
sbb
rep
mov
subl
push
dec
repz
outsl
push
ret
shll
mov
fwait
jbe
iret
movsl
out
es
pop
rcrl
xchg
jo
fwait
in
imul
jno
rcrl
inc
out
or
hlt
inc
or
mov
repnz
ja
adc
xchg
jp
jp
pop
push
and
lock
inc
out
rolb
fadds
enter
loope
sub
loopne
xor
clc
cli
icebp
daa
jnp
dec
xor
jnp
iret
xchg
ja
mov
int
sub
sub
lret
cwtl
cmp
inc
pushf
cwtl
loope
lret
and
mov
cmp
or
mov
imul
sub
push
lods
add
mov
push
cmovl
dec
mov
lods
pop
inc
in
inc
xchg
pusha
sbb
inc
push
sbb
loop
add
pop
mov
repz
lods
aaa
jbe
je
sbb
outsb
sar
outsl
out
dec
adc
lds
push
outsb
push
and
or
xor
sbb
mov
das
popf
mov
es
int
or
jl
aam
imull
in
add
jnp
es
lcall
outsl
icebp
pushf
or
jnp
loopne
and
sbb
mov
sarl
and
mov
fdivrs
and
jg
divb
push
or
rolb
jne
push
xor
inc
dec
sbb
push
gs
add
pop
fs
test
push
inc
int
bound
leave
push
lock
sub
adc
rclb
popa
mov
rcrl
lcall
pop
icebp
xchg
xchg
ja
xchg
inc
nop
std
insl
mov
push
cltd
daa
xor
inc
inc
and
movsl
out
ja
push
or
cmp
pop
push
adc
enter
insb
lahf
push
mov
xor
das
and
sbb
lods
xor
xorl
jne
and
in
stos
fldcw
jle
sub
adc
mov
nop
and
xchg
xlat
inc
outsb
or
leave
bound
sbb
outsl
jno
inc
add
adc
inc
jecxz
cmp
xor
lods
sub
aaa
test
dec
shll
divb
fmul
or
xor
cmp
idivl
pop
xchg
dec
pop
int3
cwtl
pop
lret
push
rcll
ret
stos
mov
pop
ret
sbb
jecxz
and
stos
add
mov
cld
mov
xor
mov
enter
push
inc
sarb
and
add
in
test
std
add
xchg
subl
mov
ret
mov
sti
test
fwait
in
sar
test
push
mov
movsb
xor
mov
cmova
lds
push
in
pop
loope
js
sbb
cli
sbb
je
addr16
gs
repz
repnz
jecxz
sub
stc
sbb
cmpsb
cmp
lea
pop
push
int
out
mov
add
test
push
lcall
and
xorb
and
gs
adc
aaa
inc
fnstcw
pop
mov
or
pop
push
push
inc
loope
cltd
cmp
arpl
lock
pop
jle
mov
cmpb
pushf
mov
or
mov
enter
int3
repnz
ja
cmovnp
xor
ja
mov
fstl
add
dec
adc
std
loop
cmpsl
scas
push
push
lock
sbb
jmp
jl
cltd
xchg
mov
adcb
mov
or
sti
movsl
mov
outsb
adc
addr16
not
mov
ret
adc
mov
xlat
ret
adc
mov
stos
push
mov
xor
mov
int3
push
mov
pop
in
mov
cmpsb
ficomps
cwtl
nop
push
cmc
cmpsb
rcr
loopne
sbb
out
call
adc
mov
mov
xchg
xor
movsb
push
pop
push
sarl
lea
and
and
aas
xor
je
add
sbb
daa
xchg
outsl
leave
ss
mov
inc
or
test
movl
xchg
push
sbb
enter
dec
jnp
mov
es
fisubl
mov
jmp
mov
xchg
xor
notrack
sbb
cltd
rcrb
orb
ds
gs
dec
bound
insl
popa
push
jge
pop
out
push
push
addb
aam
rorb
out
push
cmp
dec
xchg
add
add
aad
ljmp
add
imul
nop
cs
in
cmp
mov
popa
mov
push
into
lret
xchg
push
cld
ljmp
mov
xor
lock
mov
or
jb
cmp
out
mov
lea
fstpt
pop
loope
xor
push
xor
push
cld
movsl
mov
fisttpl
push
fists
lods
jg
ficoms
js
clc
and
loope
movsl
filds
adc
aas
out
pop
inc
xchg
aad
mov
int3
outsb
aad
xchg
lds
dec
inc
sub
push
push
pop
cmpb
gs
sbb
inc
cmp
xchg
adc
insb
inc
mov
adc
mov
jg
jno
mov
mov
pusha
add
testl
insl
jge
popa
dec
mov
mov
pop
mov
push
pusha
pop
cmc
test
jp
aaa
cmpsl
mov
adc
psraw
add
or
addr16
dec
repz
mov
add
test
or
sub
mov
push
xchg
orb
xlat
xchg
and
bound
dec
xchg
jbe
pop
or
sub
outsl
dec
xchg
pushf
cwtl
das
xchg
movsl
sbb
and
push
ret
adc
int
rorl
add
mov
push
xchg
push
data16
test
add
cmpb
int
fisubrs
jnp
test
das
xchg
push
rdmsr
pop
ds
arpl
in
xchg
mov
test
cmpsl
jle
arpl
repnz
jae
inc
aaa
aas
jp
xor
push
jbe
add
add
push
fs
insb
pop
data16
stos
mov
mov
jg
fnsave
cmc
jo
add
lahf
xchg
ret
cmp
jne
fucomp
popa
xor
notb
jno
jns
rolb
in
add
inc
pop
cwtl
xor
fsubr
inc
mov
nop
in
ss
mov
cmpsl
cmp
mov
addr16
aad
sbb
xchg
cmpsb
cs
test
sbb
notl
cmc
out
mov
stos
flds
fists
dec
fnsave
loope
dec
mov
xor
orb
push
cmpsb
mov
push
jbe
mov
fsub
pop
test
pop
in
xchg
mov
jno
in
add
orb
outsb
push
les
adc
loope
sbb
into
add
jmp
stos
pop
out
lods
movsl
scas
push
fsubrl
stos
roll
andb
inc
mov
movsl
cmp
and
loopne
orl
pop
cltd
call
push
pop
mov
mov
add
iret
pushf
dec
sub
jmp
mov
mul
lea
test
push
sbb
push
in
js
ret
out
or
sbb
push
mov
push
ja
jns
insb
and
lahf
push
push
jnp
bound
aas
dec
aam
scas
pop
cmp
mov
xchg
inc
jge
push
fwait
loopne
cmp
mov
add
cmp
pop
into
je
mov
jnp
mov
and
inc
cmp
cmp
gs
ds
and
aaa
jmp
dec
jns
jns
and
push
inc
lcall
mov
and
imull
fisubrl
mov
cmp
lret
cmp
push
shll
pop
test
add
add
xchg
call
lcall
dec
ds
sub
bound
daa
stos
jp
pusha
dec
cmp
outsl
fsubr
mov
mov
or
or
inc
outsb
sub
imul
int3
aaa
frstor
lcall
fsubs
int
out
push
adc
in
enter
push
inc
scas
daa
call
call
or
mov
fs
jb
rcr
inc
jae
rorb
fcomp
icebp
fwait
cltd
xchg
mov
negl
jbe
lea
mov
sub
imulb
cmp
es
addr16
loope
jl
push
sub
mov
dec
data16
orb
ja
sbb
push
shlb
ss
and
lods
pop
and
cltd
cwtl
pop
pusha
inc
or
fsubrs
mov
lcall
mov
inc
pop
xchg
pop
push
xlat
repnz
push
not
push
movsl
xor
arpl
add
cmp
pusha
daa
cwtl
divl
rcr
lahf
stos
push
out
dec
sbb
test
inc
testl
and
dec
adc
imul
push
inc
adc
adc
cmpsl
mov
int
int3
jge
sub
inc
dec
das
movsl
rcrb
push
mov
hlt
and
mov
pop
add
mov
xchg
inc
push
fldenv
jp
int
inc
push
fstpt
loope
xlat
movsb
cmc
shlb
inc
rcll
pop
je
fcompl
mov
jle
loopne
in
leave
mov
out
outsl
gs
push
add
jne
cmc
mov
mov
jle
stc
icebp
cmp
rclb
mov
dec
int3
push
adc
les
xor
inc
pusha
rolb
dec
xchg
out
int3
mov
mov
and
scas
aas
cltd
mov
adc
shrl
sbb
clc
les
jl
daa
mov
movsl
arpl
adc
jo
jnp
cmp
cmp
mov
add
pop
sbb
pushf
jne
cwtl
mov
sub
inc
std
mov
mov
fxam
sarl
cld
xchg
sbbl
cmp
arpl
pop
lock
lods
mov
mov
faddl
pop
sub
xchg
sub
adcl
sbb
scas
mov
sub
rorl
ljmp
mov
pop
fwait
lds
mov
mov
mov
adcb
dec
xchg
mov
pusha
fldl
xchg
adc
xchg
push
jnp
xchg
adc
push
xor
out
call
mov
cwtl
xchg
into
loop
bound
into
push
sbb
mov
sarl
not
inc
shufps
dec
inc
into
or
or
dec
mov
pop
cmp
cmp
in
cmpb
and
push
mov
pop
jle
in
jg
into
dec
and
in
test
lahf
jb
add
and
inc
sbb
xor
xor
mov
fucom
adc
lods
popf
add
pop
cmp
sbb
ss
push
inc
push
or
and
roll
xchg
jns
std
xor
pusha
rolb
xchg
out
adc
cld
push
stc
mov
mov
push
test
cs
jne
js
cmp
cmp
cmpsl
cmp
dec
fnstcw
stos
lods
int
sub
enter
int3
dec
into
sbb
mov
ja
xchg
int3
sub
sub
mov
into
movsb
rcl
subb
scas
in
and
cmp
pop
mov
xor
scas
iret
mov
iret
xchg
push
or
xor
cmp
sub
shrb
xchg
mov
sahf
insl
pminsw
dec
popa
fldl
int3
sbb
adc
add
and
jmp
mov
test
in
push
sub
add
lods
xchg
fidivrs
out
shr
in
cmc
movsl
pusha
jp
dec
dec
dec
mov
int3
out
fs
and
shlb
scas
je
sub
adc
jno
push
pop
in
dec
cld
inc
fsubrp
pop
or
jne
imul
pop
xor
xchg
mov
lods
jno
pusha
lock
ljmp
mov
xchg
or
cmp
inc
push
xor
push
je
mov
xchg
and
sarl
push
icebp
int3
jecxz
inc
push
inc
inc
subl
or
and
sti
inc
test
jmp
sub
cwtl
lods
jb
push
mov
movsb
sarl
xor
ss
push
xor
fistpl
sbb
imul
jg
xchg
std
sbb
lcall
out
jecxz
insl
daa
cmp
dec
je
pop
mov
xor
mov
arpl
loop
mov
push
xchg
mov
xorl
sub
repnz
les
leave
add
jnp
lahf
mov
cmp
out
sahf
in
gs
sbb
xor
insb
pop
push
fiadds
mov
jne
push
mul
ljmp
or
int3
jne
pusha
ret
lods
pop
cmpsl
push
repz
xchg
push
mov
adc
mov
inc
call
mov
mov
fistpll
jnp
mov
popf
dec
jo
sbb
into
ds
sarb
xor
mov
fiadds
and
pop
lods
fwait
outsl
pop
orl
dec
pop
test
rolb
imul
push
fwait
nop
mov
roll
nop
pop
orl
xor
mov
inc
push
and
dec
in
adc
mov
pop
add
roll
int3
or
js
repz
cmpb
and
cli
imul
mov
stc
sub
je
pop
mov
and
inc
sub
mov
cmp
or
mov
sbb
sbb
ffreep
or
jne
stc
inc
jmp
xor
shrl
cmp
sbb
xchg
mov
jb
jae
mov
sbb
jmp
out
or
sbb
adc
es
dec
out
pop
call
rolb
xchg
pop
shlb
popf
jle
mov
ds
iret
imul
pusha
or
fcoml
mov
popa
orl
nop
sahf
xlat
lcall
rdmsr
adc
stos
add
push
shl
fdivs
out
lret
push
mov
sti
sub
fs
xlat
inc
mov
dec
sbbb
jnp
ret
shll
lea
nop
mov
dec
or
cwtl
xor
mov
dec
dec
aad
imul
shll
or
dec
into
push
pop
in
push
mov
enter
jnp
and
xor
daa
outsb
cwtl
cmc
cld
dec
mov
mov
jo
xor
cs
lods
icebp
pop
int
push
add
xor
xor
pop
xchg
fisubl
add
sbb
mov
mov
xlat
mov
lods
cmp
add
mov
ss
pop
inc
lds
outsb
push
push
rcrb
jge
xchg
add
mov
mov
xor
stos
jecxz
std
push
test
int3
push
mov
imull
aaa
cltd
js
xor
fdiv
out
mov
int
sbb
loop
ret
xchg
dec
loopne
jmp
cld
iret
mov
andb
dec
add
insb
popa
push
add
xor
xor
shrl
push
sbb
repz
cli
cwtl
sub
int3
add
dec
mov
push
mov
enter
shl
xor
fdivrs
dec
xchg
adc
popf
scas
mov
adc
jle
xchg
xor
xor
mov
mov
loop
std
xchg
jp
and
xchg
out
insl
jns
sbb
shlb
push
lcall
in
xor
das
xor
xor
fsubl
push
in
push
clc
les
test
ror
sahf
jle
sti
xor
rcrl
ss
lret
fwait
stc
imul
fs
pushl
sub
retw
lret
or
shl
das
mov
inc
mov
add
sub
xchg
push
sub
cwtl
or
dec
mov
ja
add
insb
roll
in
jbe
sub
lcall
or
data16
fnstsw
cli
mov
pushf
nop
dec
inc
std
push
repnz
adc
in
call
fstl
sbb
leave
mov
jno
sbb
sbb
ss
xchg
sub
cmp
mov
out
loope
lret
sbb
push
add
mov
mov
mov
das
add
dec
xor
mov
in
clc
daa
cwtl
int
sub
push
lret
pusha
stos
adc
out
inc
mov
inc
lret
adc
in
add
test
pop
jl
ret
sbb
push
fs
ficomps
sbb
adc
push
rolb
out
add
pop
and
dec
cmp
or
lahf
cmc
cmp
imul
aas
leave
fcompl
ret
push
and
lcall
jl
push
imul
or
ret
inc
test
jb
cs
cmp
sbb
dec
xor
ret
jno
mov
popa
loopne
sub
fnsave
jne
lret
out
pop
add
sub
push
aas
and
or
pop
mov
call
jle
xor
fs
int
clc
xchg
mov
xor
jg
dec
mov
lcall
js
daa
push
mov
adc
push
out
ficompl
adc
mov
push
cmc
movsb
dec
xor
and
sbb
dec
stos
adc
clc
add
xchg
shlb
std
sbb
mov
xchg
shll
lods
push
push
cltd
xlat
inc
test
scas
adc
movsb
outsl
dec
cmp
pop
pop
push
jecxz
loopne
fcompl
mov
fwait
aam
addb
aas
arpl
xchg
and
inc
mov
mov
adc
jo
or
fsts
jno
cmp
test
js
std
and
or
pop
rorb
dec
das
addl
repnz
mov
xor
inc
cmpsl
out
adc
jg
ljmp
or
adc
xchg
adc
xchg
ror
movsl
out
nop
popaw
xor
pop
inc
mov
mov
cwtl
mov
data16
movsb
xor
sarb
outsl
or
repnz
aaa
fsubl
add
mov
mov
shll
fidivrl
push
scas
pop
cmp
mov
sbb
dec
sbb
sub
daa
mov
pushf
pop
xchg
add
pop
fistl
je
push
call
dec
or
mov
xor
outsl
xchg
popa
mov
mov
pop
add
cli
out
lea
int
loope
sbb
add
pusha
shrl
or
cmp
push
jg
ljmp
sub
and
lods
jecxz
xchg
dec
sub
cmpsl
pushf
movsb
ss
fsubl
dec
sti
dec
mov
sub
pusha
popa
xchg
xor
xor
stos
test
std
aam
mov
and
inc
xchg
stos
aaa
or
pop
test
add
in
fisubrl
mov
arpl
xchg
add
aas
xchg
daa
dec
inc
iret
int3
pop
icebp
jl
imul
cmpl
push
xchg
fildl
lods
fsubrs
shl
add
andl
inc
and
clc
mov
scas
cmp
jnp
xchg
and
mov
xchg
repnz
push
insl
ds
mov
xchg
std
scas
push
mov
adc
ret
sub
les
sub
add
fcoms
add
adc
xor
jbe
cmp
pop
out
pop
out
es
cmpsb
inc
shrb
imul
jo
aad
test
popa
dec
nop
scas
adc
mov
loopne
cmpl
adc
dec
push
push
adcb
out
lahf
clc
ja
imul
inc
adc
mov
cmp
push
fsubs
add
loope
dec
pop
shl
xchg
sub
fisubrs
pop
mov
data16
push
jmp
and
xor
stc
adc
mov
aaa
mov
nop
xor
pop
push
imul
cli
mov
and
lods
pop
into
add
ja
jne
inc
fimuls
movsb
stos
cmp
fbld
lds
js
and
loope
and
loopne
loopne
fadds
or
push
sub
mov
movsb
pop
scas
sbb
cmp
jne
pop
cld
call
in
cmp
mov
sbb
dec
rcl
add
mov
sti
and
std
fs
jl
pop
push
shlb
lds
nop
mov
push
ret
sub
mov
ds
fisttpl
mov
cs
push
jo
pop
sub
rcl
addl
stc
adc
push
push
fs
cmpsl
popa
cmp
or
div
xchg
cs
repnz
nop
dec
cmp
push
les
pop
sbb
iret
inc
add
insb
pop
pop
sbb
inc
iret
xor
and
dec
test
arpl
std
fstpl
data16
shr
jb
xor
cwtl
and
popa
outsb
jmp
sbb
pushf
les
outsl
jno
mulb
sti
and
push
pop
adc
cmpsb
inc
int
popa
shrl
mov
cmp
fsubr
fisttps
sbb
scas
mov
add
push
popf
fidivrl
bound
push
mov
and
dec
mov
and
add
xorl
add
inc
dec
test
jo
push
loopne,pn
cld
cmp
sti
xor
or
int3
call
nop
test
mov
cmp
aas
mov
cmc
adc
mov
add
inc
pop
and
aad
pop
stos
in
fs
aaa
cwtl
sarl
cmpsl
lock
sbb
dec
and
mov
mov
add
push
je
mov
ret
aad
pop
add
and
aaa
ds
and
imul
out
add
ds
lods
loope
xchg
std
mov
cs
ja
inc
or
imul
ss
dec
sub
push
inc
imul
lea
cmp
sbb
in
enter
lods
fcomps
dec
outsb
adc
cltd
xor
cmc
cltd
jmp
cmp
scas
dec
xor
add
clc
pusha
dec
cmp
aas
scas
cld
mov
movsl
mov
loop
mov
fiadds
push
adc
movsl
lock
add
xor
sahf
xor
loop
imul
int3
xor
mov
stos
push
test
mov
movsl
loopne
inc
xchg
add
cs
das
mov
flds
jmp
mov
push
cwtl
popa
out
adc
add
mov
mov
and
dec
dec
dec
lret
fisttpl
xchg
xor
cli
adc
xchg
flds
loop
enter
int
cmp
jbe
ss
fadd
fiadds
and
cmpsb
jo
loop
shll
inc
jp
lcall
lahf
xchg
xchg
xchg
test
lods
xchg
stos
stos
jg
cmpb
mov
xor
inc
loopne
daa
cli
imul
mov
aad
insl
push
or
cmpsl
scas
and
repnz
insl
push
push
push
xlat
cmpsb
ljmp
sub
jnp
pushf
inc
inc
fs
lock
jp
jg
xor
inc
or
popa
xlat
je
sub
xor
icebp
xor
lock
imul
cld
jo
sbb
pushw
pop
cwtl
and
popf
fbld
pop
out
or
ss
test
sub
iret
sti
mov
mov
pop
ss
jmp
sbb
jp
jl
fsubl
in
aaa
sti
mov
jge
ds
addr16
xchg
out
addr16
dec
cmpb
cmc
mov
aad
inc
mov
add
stc
lcall
scas
shrb
fst
mov
adc
arpl
cmp
adc
push
xchg
repz
cmp
mov
xchg
inc
roll
mov
enter
or
adc
imul
rclb
mov
ret
rorl
std
aaa
mov
test
jo
test
fistpll
sbb
and
mov
jge
ret
jle
cmp
into
mov
fucom
mov
sub
pop
mov
lea
inc
test
add
sbb
jle
fs
mov
sbbb
fwait
es
pop
push
cmp
outsl
orb
mov
cs
js
push
movsb
jmp
or
mov
mov
ret
scas
mov
lock
inc
inc
inc
int3
push
aam
sub
mov
mov
xor
add
inc
jbe
in
mov
push
in
aad
stos
ret
sub
call
fcomps
pusha
cmpsb
pop
ja
mov
and
negl
ret
xor
aaa
lret
fisubrs
xchg
push
mov
scas
inc
cli
int3
jae
in
or
out
dec
mov
mov
mov
fsub
sbb
test
push
sbb
jbe
mov
dec
add
rcrb
pop
js
pop
xchg
out
push
mov
orl
add
sti
testl
in
xchg
jecxz
xchg
lret
dec
push
dec
jb
scas
dec
mov
ja
ja
in
pop
test
dec
mov
rcl
mov
dec
repz
addr16
push
inc
imul
add
out
or
ret
lea
fcompl
sbb
and
xlat
repz
nop
adc
shl
int
xor
cltd
aaa
sub
cmp
subl
jns
pop
mov
sub
adc
mov
or
mov
outsl
xor
sub
cmpsb
iret
gs
imul
push
cmp
cmp
sbb
mov
out
pop
ljmp
jne
xor
stos
mov
dec
fcomps
inc
movsl
xor
mov
inc
add
inc
add
mov
mov
cmp
cmp
cmpb
add
je
lahf
jle
lock
xchg
mov
into
jg
push
xor
cwtl
pop
push
aad
sbb
push
fwait
sub
pop
insb
addr16
int
pop
loope
cmpl
xlat
push
dec
sbb
lahf
pop
jbe
sub
es
repz
jnp
cmp
inc
mov
out
divb
mov
sbb
push
add
add
dec
imul
pop
jo
fldt
xor
or
and
fdiv
pusha
test
add
inc
push
loope
mov
mov
nop
lods
xchg
mov
and
inc
cwtl
das
aaa
dec
or
cmp
jg
in
push
mov
fwait
add
pop
mov
adc
jecxz
xor
and
fs
mov
mov
inc
dec
sti
mov
in
out
sahf
push
xchg
jo
arpl
inc
addb
movsl
mov
cmp
fmuls
and
dec
push
shr
adc
adcl
scas
hlt
int
call
sub
setae
and
xchg
and
loopne
xchg
stos
jae
scas
push
jp
xchg
fmuls
dec
sub
mov
lahf
subb
fcmovnb
repz
adc
movsl
outsb
aas
leave
and
stos
leave
add
popa
cmp
stc
stos
cmp
mov
shrb
pushf
and
int3
cmc
sub
xor
xlat
test
insl
mov
mov
cmp
stc
stc
mov
push
xchg
cs
sub
dec
mov
lods
or
jno
fwait
sub
mov
dec
es
daa
inc
loope
xchg
push
push
cmp
divb
push
loope
push
mov
stc
jg
hlt
repnz
adc
pop
mov
mov
jp
aaa
aaa
es
pop
out
nop
jno
sbb
rcll
data16
clc
cmp
int
lds
cmp
add
inc
and
mov
push
dec
xchg
mov
jne
xor
imull
shrl
adc
inc
xor
jp
orb
jp
hlt
leave
lods
leave
fsts
mov
dec
or
and
in
sbb
dec
shlb
outsl
dec
stos
sbb
aam
adc
out
or
repz
and
mov
pop
out
adc
lea
jg
icebp
xchg
inc
shrb
adc
cmpsb
clc
in
stc
mov
lods
or
xchg
ja
mov
jmp
aaa
inc
test
roll
lcall
add
imul
mov
std
jb
outsb
jl
jmp
aaa
cmp
int
inc
xor
push
test
mov
jecxz
inc
ja
dec
xor
cmp
push
inc
ret
or
mov
in
jecxz
adc
push
mov
mov
data16
push
jl
pop
iret
iret
sub
out
mov
ss
add
mov
inc
imul
adc
in
mov
push
adc
sarl
mov
das
mov
cld
inc
hlt
dec
std
test
loopne
mov
jns
push
jecxz
enter
insb
dec
push
test
or
xor
xor
icebp
adc
xchg
sub
xchg
mov
aaa
out
jge
mov
daa
xorb
fisttps
aad
push
dec
enter
xlat
mov
jmp
cltd
dec
js
jae
pop
stc
insb
jl
or
push
mov
fcmovne
repz
lret
std
loope
pop
fcompl
hlt
clc
dec
and
sahf
das
pop
pop
aas
xadd
pop
aaa
js
lret
fs
or
sub
sbb
push
add
je
xchg
sbb
pop
enter
mov
fnsave
cmp
pusha
mov
or
aam
sbb
inc
xchg
int
adc
in
jo
or
outsb
jecxz
mov
sbb
popf
pop
add
push
mov
pop
or
or
mov
mov
outsl
mov
clc
testl
adc
hlt
ret
xchg
push
orps
mov
cmp
out
lahf
adc
mov
mov
adc
leave
xchg
leave
cmp
mov
inc
jne
ljmp
test
sub
mov
mov
mov
pop
in
or
fwait
loope
das
inc
lea
push
fcompl
ljmp
mov
test
in
cmpsb
dec
pop
ja
daa
xor
mov
mov
xchg
into
dec
roll
movsb
das
aas
mov
das
out
insl
jl
stos
aaa
mov
mov
imulb
lcall
dec
pop
in
pop
lods
sub
mov
dec
jb
and
push
push
and
sub
loopne
sbb
lods
roll
aas
xchg
adc
mov
xchg
or
fstpt
pop
lret
divl
mov
xor
mov
mov
sub
or
and
or
push
cmp
clc
outsb
enter
addr16
adc
pop
mov
xchg
jle
and
or
push
inc
xchg
aad
mov
jns
fldenv
mov
cltd
nop
inc
movb
sub
out
frstor
xchg
scas
xchg
clc
cs
push
mov
cs
cmpl
pop
jbe
outsb
xchg
ja
outsl
or
roll
cmp
lock
sub
jne
test
add
mov
lahf
xchg
mov
pop
push
fucomp
aam
add
out
push
and
in
fists
push
ror
ds
pop
ds
lock
adc
and
scas
adc
fnsave
scas
pop
sbb
jmp
imul
popa
jne
jmp
lods
bound
dec
loope
xor
ss
outsb
hlt
test
push
inc
stos
sub
mov
inc
push
pop
loope
and
push
in
lret
or
fbld
loopne
ss
jnp
frstor
dec
shll
popa
popf
cmp
cmp
dec
loopew
shrb
fmull
push
cmp
and
add
pop
clc
add
mov
jmp
and
pop
cwtl
psubusb
fs
and
xor
jo
xor
push
ret
enter
mov
sub
das
fwait
pop
sbb
loop
mov
fdivs
test
mov
nop
sbb
jecxz
cmp
or
dec
mov
dec
cs
pusha
js
cmc
mov
pop
sub
sub
jl
pop
aad
adc
pop
aaa
inc
stos
cmp
inc
jmp
mov
sbb
mov
xor
into
sub
push
cwtl
icebp
push
lret
xor
jb
pop
pop
jae
push
cltd
xchg
or
adc
test
adc
and
fs
out
or
dec
push
adc
jbe
outsb
inc
mov
loope
add
xor
or
jecxz
inc
rolb
sti
pop
sub
sub
or
sub
pusha
xor
jge
jne
arpl
push
cmpsl
push
aas
cmp
mov
mov
push
mov
rclb
insb
lret
orb
dec
int3
test
add
add
cmp
cmp
jne
xchg
cmp
ret
jno
ret
add
lcall
icebp
es
jns
scas
in
mov
imul
das
inc
xor
mov
jmp
inc
sbb
mov
jnp
fidivrs
fs
fmull
jno
lahf
pop
test
bnd
iret
sub
cmp
xchg
cmc
cmp
xor
jne
clc
in
flds
jge
int3
scas
imul
and
lahf
and
inc
fwait
clc
rcr
add
xchg
and
push
push
sarb
call
bound
pusha
rclb
mov
in
add
stos
push
jecxz
leave
push
xchg
xor
ficompl
stos
adc
std
rolb
add
in
mov
out
leave
es
mov
adc
je
sub
inc
mov
cmp
inc
mov
sub
push
test
jno
inc
jnp
mov
add
mov
subb
jmp
or
jmp
inc
push
dec
imul
rcr
inc
xor
dec
sbb
rcr
sbb
mov
aam
push
ret
aaa
xor
push
fnsave
int
cmpsl
pop
jg
mov
push
push
dec
and
out
sbb
add
jbe
sub
aam
ja
sub
leave
test
movsl
mov
cltd
add
leave
sbb
movsb
faddp
add
loopne
int
not
stos
insl
roll
icebp
pusha
sar
cmc
in
xchg
push
negb
scas
mov
je
daa
adc
jecxz
push
in
xor
jmp
fucom
sub
mov
push
vsqrtpd
push
jge
gs
icebp
jp
repz
cld
out
mov
mov
adc
ret
popa
dec
mov
ljmp
xor
jno
lds
push
sub
sbbl
aas
push
out
push
repz
sbb
add
dec
xlat
fwait
lock
fldl
jno
outsb
or
cbtw
fwait
or
jae
dec
lret
rcr
sbb
or
cmpsl
rcrb
dec
andl
clc
mov
and
xor
sahf
mov
mov
sub
lret
popf
fnstenv
xor
xchg
push
scas
imul
idiv
push
js
inc
ss
cmp
ret
pop
jmp
dec
xor
jb
xor
xchg
push
and
out
add
repnz
xor
cmp
cmp
les
mov
cltd
sahf
or
mov
adc
jmp
fnstcw
cmpsb
leave
add
xor
icebp
mov
dec
js
aaa
je
scas
mov
pop
mov
pop
call
lds
push
cmp
lea
push
sub
or
and
xchg
lods
push
dec
icebp
jae
lcall
dec
cmp
adc
xor
divl
mov
sub
in
jg
outsl
int3
and
mov
adc
pop
xor
lahf
adc
lahf
ljmp
stos
out
inc
dec
dec
stos
adc
cwtl
xor
dec
lret
daa
imul
dec
daa
jmp
fisubrs
inc
or
jns
test
or
cmp
mov
daa
call
mov
icebp
movl
adc
ds
and
addr16
push
decl
push
pop
lcall
and
dec
and
jp
push
xchg
mov
loope
sbb
add
out
mov
adc
stos
and
bound
and
dec
jl
std
int3
xor
inc
mov
flds
adc
lods
fldenv
jl
leave
dec
xchg
enter
mov
mov
add
shll
add
repz
out
std
dec
xor
cli
mov
xor
jnp
bound
xchg
cmp
ja
or
mov
outsb
push
sbb
imul
repz
out
dec
in
dec
stos
dec
inc
int
mov
in
mov
mov
xchg
mov
sahf
fcoms
dec
fdivl
pop
xor
jo
pop
pushf
dec
fcomi
inc
pop
jno
lods
pushf
mov
adc
in
cli
push
shrb
mov
std
mov
je
sub
dec
idivl
nop
les
fcomps
cmpps
insb
mov
mov
out
jne
xchg
scas
pop
jo
mov
lret
sbb
les
mov
inc
push
imul
outsb
fiaddl
dec
out
sub
and
jmp
in
adc
mov
dec
addl
int
mov
pop
fisttps
fistl
out
lds
cmp
xchg
std
out
xor
mov
into
fsubrl
pop
xchg
fisttpl
mov
scas
cmp
dec
mov
das
sub
mov
bound
insl
enter
outsb
adcb
ss
mov
iret
ret
dec
ret
xchg
xor
inc
shrl
inc
push
out
sbb
mov
fistpl
sub
pop
push
lcall
pop
divl
adc
fcoms
pop
arpl
insl
pusha
imul
dec
dec
icebp
imul
cwtl
stos
xchg
stos
and
inc
or
and
adc
mov
comiss
pushf
xchg
in
cmp
pushf
push
jnp
mov
cs
out
mov
pushf
xor
sub
sub
mov
cmpsl
mov
xor
inc
adc
lods
out
pop
mov
rcrb
outsl
mov
lcall
call
jmp
nop
sbb
addr16
sbb
iret
lret
mov
mov
add
cltd
add
mov
outsb
inc
xor
mov
lds
push
roll
mov
cmp
divb
jbe
push
jae
stos
dec
call
mov
mov
aad
cli
cld
lret
mov
mov
sub
fwait
subl
jb
inc
jp
push
mov
out
dec
pop
lods
movsl
in
ret
push
mov
fwait
adc
mov
jbe
std
mov
mov
dec
icebp
pop
jecxz
dec
mov
cmp
nop
pushf
xor
xor
fs
sbb
push
pop
popa
xor
out
mov
mov
fsub
orb
and
les
fisubrl
lret
pop
repz
ret
cmp
lods
fistpll
jmp
hlt
and
nop
movsb
inc
and
test
inc
ja
or
jge
jo
frstor
fnsave
ret
sub
jg
loop
pusha
negb
repnz
shlb
fdiv
sbb
xchg
out
jle
movsl
xchg
or
shll
lds
mov
das
stos
std
call
lahf
testb
sbb
orl
rclb
jbe
pop
stc
lcall
push
sahf
in
test
test
push
xchg
scas
out
ja
popa
pop
xchg
ja
gs
cld
imul
sbb
mov
inc
push
adc
ja
mov
dec
push
push
leave
adc
notl
lods
cmp
or
mov
repnz
inc
jae
or
cmpsb
andb
sbb
negb
jp
cmc
xchg
fwait
out
movsb
aas
jmp
cmp
loopne
add
jg
in
add
les
in
and
xchg
lret
das
mov
jno
jl
pop
dec
xor
lods
fmuls
out
adc
jl
cmpsb
into
sbb
ss
or
xorl
cld
xchg
pop
mov
xchg
nop
inc
jge
pop
or
cmpsl
rcr
xlat
add
hlt
cs
jb
shr
sub
pop
push
fsubrl
sub
jo
fstl
mov
jl
out
mov
leave
je
push
mov
xchg
out
mov
imul
imull
fbstp
js
xchg
xlat
jmp
and
cli
imul
and
mov
fstpl
rcr
mov
inc
fcom
cmpsl
inc
add
push
or
jp
daa
cmp
jno
jmp
cld
cmp
inc
cmp
inc
movsl
lods
pop
cli
inc
pop
test
mov
sbb
test
bound
mov
pop
aaa
in
xchg
mov
xchg
aam
loope,pn
cmovp
push
jge
mov
arpl
cmpsb
pop
jo
nop
xchg
mov
sbb
pop
xlat
sbb
popa
dec
cwtl
jg
les
lods
xchg
lret
cmpl
inc
outsl
jbe
stos
sub
aad
push
mov
sti
xor
rcrl
lods
inc
not
loopne
out
inc
mov
xor
or
sbb
mov
and
sub
setl
add
push
mov
and
mov
gs
cld
jbe
dec
negb
mov
repnz
das
dec
lahf
shll
inc
mov
xchg
sub
dec
clc
jp
mov
xor
into
inc
inc
pop
out
mov
dec
cmpb
dec
push
push
jmp
xchg
aaa
xchg
pop
repnz
cwtl
cmp
push
jbe
rcl
adc
out
scas
pop
push
add
shrb
fmull
mov
add
cmp
movsl
popf
pop
mov
mov
xsave
jnp
dec
adc
sub
xor
pop
stc
jne
inc
xor
jmp
push
pop
jle
movsl
inc
add
sti
lds
dec
jl
fwait
pop
cmp
scas
cli
mov
push
adc
int3
pop
jecxz
movsb
cld
arpl
cltd
jns
jo
xor
mov
rcrl
pop
pop
lea
js
outsl
ja
movsl
es
pushf
add
in
jle
sbb
cmp
xor
stos
dec
cld
dec
jmp
divl
mov
pushf
lcall
lock
jle,pt
inc
arpl
pop
out
push
pop
out
or
mov
insb
std
xor
int
lds
cmp
inc
insl
jmp
insl
push
mov
push
or
lods
lods
add
push
or
leave
jnp
popf
push
out
mov
mov
add
ds
xchg
xchg
xchg
push
xchg
xchg
fdivrs
push
iret
fcmovb
mov
test
push
lock
sub
adc
add
dec
xchg
daa
rcr
push
pop
loopne
sbb
lods
ja
jge
mov
leave
fcoms
and
ljmp
mov
aas
or
push
fistl
into
lahf
mov
cmp
jnp
test
dec
call
jb
test
pop
xchg
aad
pusha
xor
xchg
sub
cld
cmpsl
in
jle
cwtl
inc
cli
mov
into
pop
mov
xor
and
repz
inc
push
inc
sahf
movb
adc
xor
dec
jle
in
sub
dec
ja
cmp
bound
repz
shl
fwait
mov
in
stc
or
loop
outsl
jb
mov
test
mov
out
lea
sbb
mov
jne
cmpb
or
sbb
imul
ret
add
pop
jmp
or
mov
repz
cwtl
sbb
int3
jp
hlt
pop
mov
mov
jle
jmp
dec
push
jae
mov
inc
insl
dec
mov
mov
mov
daa
xor
sbb
mov
jle
and
movsb
push
adc
sahf
sarb
mov
xor
inc
mov
push
mov
inc
nop
push
xor
pop
xchg
inc
jne
les
xor
out
das
lahf
mov
sub
pop
cmp
sahf
pusha
fwait
dec
nop
and
mov
sti
or
cltd
lock
or
rorb
inc
adc
addl
ret
inc
arpl
iret
aam
push
adc
enter
mov
dec
xor
arpl
mov
incb
xor
ds
lret
inc
rorb
addl
push
sarb
cmp
dec
mov
xchg
jbe
jle
in
scas
and
out
idivb
fimull
jae
xchg
add
insl
incb
pop
xor
add
aaa
xor
sbb
hlt
xchg
pop
cmp
int
pop
loopew
movsb
inc
cmp
popa
stc
shrl
inc
push
dec
dec
mov
jp
add
pop
pop
nop
jae
push
jmp
push
aad
out
cmp
xchg
mov
sub
mov
mov
jg
xchg
xor
adc
in
in
mov
addl
mov
push
loope
jno
xchg
imul
mov
mov
sbb
cmp
popf
out
ret
cmp
jbe
subl
mov
ja
xchg
imul
out
dec
jl
cmp
xchg
fldcw
mov
insb
mov
and
xor
out
in
xor
xchg
call
jnp
stos
mov
cs
cmc
int
add
mov
inc
arpl
insl
and
insb
jl
sbb
fmul
xor
and
or
adcb
cmp
ljmp
jb
jmp
mov
ss
loopne
addr16
scas
leave
cs
inc
lea
out
xor
imul
cmp
cwtl
mov
jne
pusha
mov
pop
sbb
cld
ja
fistpl
xor
mov
add
subb
xchg
dec
adc
daa
xchg
das
mov
xor
add
and
sbb
cwtl
mov
out
cmp
cmp
add
mov
jle
dec
pop
jno
outsb
insl
lods
inc
dec
data16
jae
fwait
sub
sub
push
push
pop
scas
gs
mov
ror
in
adcl
stos
cmp
fisttpll
mov
sub
add
ljmp
inc
jle
aam
out
push
into
mov
pusha
ffree
adc
in
lahf
push
jbe
push
mov
xor
mov
jg
lds
sub
push
dec
add
faddl
ffree
push
jle
icebp
pop
rorl
lret
aam
sub
fcomp
push
repnz
fwait
mov
mov
xor
cli
aad
mov
lcall
inc
cld
imul
add
pop
inc
jno
mov
and
jae
push
arpl
jmp
iret
cli
dec
icebp
lret
push
sti
mov
sahf
into
mov
adc
push
dec
test
in
in
mov
push
test
pusha
push
inc
pushf
xchg
test
sub
arpl
jg
lret
add
mov
inc
scas
sub
sub
cmpsl
sub
std
and
icebp
fcoml
inc
adc
xor
repz
pop
xor
arpl
sub
push
dec
out
imul
aam
stc
dec
in
aad
dec
jge
sbb
inc
ljmp
cmp
arpl
std
outsb
inc
push
mov
xor
loop
data16
mov
pusha
mov
lret
mov
dec
stc
xlat
ss
cli
push
dec
shll
xor
arpl
pop
sub
adc
ret
aam
lret
push
dec
mov
in
push
push
lahf
fstpt
inc
lret
lcall
lret
incl
insl
in
cwtl
adc
jb
sub
cmp
mov
lret
notb
out
adc
les
and
sbb
dec
push
lods
dec
iret
fdivp
repz
or
xchg
push
mov
sbbl
xor
push
fs
add
shll
imul
push
ss
lret
in
push
and
xchg
sbb
shrl
fs
sbb
test
aaa
mov
movsl
xor
push
or
in
mov
sub
sahf
scas
dec
push
mov
dec
mov
loopne
fwait
adc
shll
add
stos
adc
cmpsl
les
jl
or
add
inc
xchg
inc
scas
loope
insb
adc
lahf
and
pop
out
dec
or
mov
mov
mov
jecxz
add
popf
cmp
jne,pt
cmpsb
fdivl
lods
nop
ja
jl
movsb
loop
seto
jecxz
dec
cmp
aad
fidivrl
xchg
pop
test
test
xlat
inc
fwait
mov
xchg
popf
in
mov
cmp
negl
and
fidivl
loopne
adc
les
les
lahf
add
fdivrl
test
push
scas
add
and
mov
test
mov
dec
int
xchg
popa
sub
pop
test
es
sbb
add
add
outsb
cld
cltd
out
dec
icebp
mov
scas
movsb
out
jmp
inc
push
adc
repz
dec
outsb
repz
adc
cli
sub
mov
mov
pop
cmp
testl
jmp
imul
mov
cld
test
bound
shl
cmp
data16
imul
fstpl
xchg
jb
loope
jbe
dec
push
or
mov
adc
jp
mov
test
lret
sub
push
js
push
jb
jmp
cmc
cs
xor
mov
lret
sti
test
xchg
mov
dec
mov
adc
mov
shll
out
xor
inc
ror
ds
sub
or
lea
ret
outsl
or
jge
push
xor
jnp
adc
repnz
fistpl
or
or
mov
fcmovnb
adcb
cmp
or
or
nop
push
add
and
xor
inc
sbb
std
adc
jg
test
ja
sbb
mov
mov
pop
fildl
jg
cmp
mov
inc
adc
sub
add
andl
scas
xor
ret
daa
mov
and
push
int
mov
rcr
movsl
icebp
sbb
adc
outsb
xchg
jne
call
xor
or
adc
xor
leave
hlt
lret
scas
fcomi
outsl
fdivs
or
cld
push
fildll
pop
shr
idiv
bound
out
sub
in
imull
xor
push
push
loop
cmp
jp
push
dec
cmpsl
enter
mov
xor
cltd
dec
dec
iret
gs
push
daa
sahf
enter
daa
push
mov
shll
mov
aad
jns
pop
clc
repz
mov
out
push
lcall
out
xchg
sbb
sbb
sbb
add
cmc
pop
inc
lretw
xor
push
daa
inc
pushf
dec
xlat
xor
jb
out
in
mov
jle
xor
in
pusha
cld
push
xchg
call
mov
or
mov
inc
jle
mov
push
push
rcrl
mov
mov
test
jb
mov
cmp
in
cmp
xchg
jl
pop
inc
inc
jne
sub
push
cltd
add
mov
cmpsl
or
or
cmp
sub
aaa
in
stos
cmpsl
mov
pop
or
xchg
or
cmp
sahf
cmpsb
mov
xor
mov
push
shl
ja
into
push
cmp
add
mov
adc
xor
and
arpl
rorl
dec
pop
cmp
pop
stos
sub
sub
mov
mov
rcrl
test
mov
jl
popa
stos
xor
mulb
cmpsb
fistpl
int
arpl
push
dec
lret
popf
xchg
and
out
fsubrp
hlt
push
stos
ds
sub
in
xchg
push
or
cmp
bound
mov
fmul
inc
aas
repz
push
xlat
push
rcrl
pop
jnp
das
dec
add
sbb
ss
mov
push
xor
jnp
and
cs
lock
or
jmp
push
dec
add
vmread
inc
add
popf
fistps
in
cmp
sub
leave
jge
incb
shl
cltd
fildll
add
sbb
movsl
mov
ds
iret
sub
sti
jge
adc
mov
sub
cmpsb
loop
mov
jg
cmp
mov
sub
mov
das
test
mov
int
leave
nop
mov
lcall
cmc
adc
rcr
inc
push
xlat
sub
and
and
xor
adc
fisubrs
sub
ret
int
inc
insl
push
sti
nop
mov
jne
mov
cmpl
sbb
scas
xchg
and
inc
jo
pop
aas
lahf
xchg
sbb
movb
movsl
cmp
mov
sbb
cmp
sub
mov
lds
arpl
xchg
mov
push
test
mov
or
push
sub
adc
mov
fwait
mov
pop
push
lcall
mov
sub
mov
add
addr16
inc
pop
dec
add
aas
loopne
inc
jbe
es
xor
movsb
aaa
out
fadd
je
mov
bound
std
pop
addr16
mov
and
xchg
push
mov
fsubs
popf
xchg
add
les
pop
bound
movsb
pushf
push
jge
mov
lock
and
mov
cwtl
pop
mov
mov
or
scas
movsb
ds
mov
mov
repz
jg
test
ss
push
cmp
lcall
ret
push
xor
lock
sahf
es
mov
lds
ret
push
or
add
aam
outsl
popa
mov
add
adc
sti
lods
jecxz
push
dec
mov
sbb
push
les
outsb
lahf
xlat
xor
mov
imul
shl
mov
inc
jbe
enter
in
mov
cmpb
mov
negl
lods
jge
xchg
mov
sub
js
int3
loope
sub
mov
pusha
shl
outsl
call
push
aam
testb
ljmp
inc
lock
mov
and
repnz
imul
aad
xchg
in
mov
push
lods
out
dec
int
xchg
inc
xor
jl
pop
xchg
add
lret
sti
pop
jge
and
jno
fcmovnb
or
add
sahf
dec
mov
add
inc
xor
mov
in
adc
jmp
imul
dec
pushf
test
das
lret
ss
arpl
mov
xor
push
xchg
mov
push
fs
pop
sub
mov
jge
and
jb
jnp
movsl
movsl
fdivrs
fs
cs
push
ja
xchg
addb
xchg
ds
shlb
inc
or
add
inc
in
rorb
or
fistl
imul
jnp
inc
fcmovnu
and
dec
fsub
push
inc
rcl
es
ljmp
mov
lods
xchg
sbb
scas
mov
and
aad
xchg
cmpsb
xchg
mov
fadds
loopne
scas
mov
or
mov
dec
lret
push
fisubs
push
pop
xchg
into
addr16
aad
jnp
push
ja
add
push
dec
ja
fiaddl
psrad
hlt
aam
popf
aam
lods
adc
cld
dec
out
or
push
out
aas
jmp
xor
test
cs
mov
adc
mov
inc
pushf
mov
mov
in
loope
js
adc
mov
fwait
sti
loop
sub
mov
mov
xchg
adc
sub
outsl
jmp
into
iret
jbe
xchg
jl
cmpsl
xor
mov
or
inc
push
and
clc
fstps
mov
adc
fisttps
lret
jge
add
xchg
jecxz
outsb
or
and
add
mov
inc
mov
dec
jmp
addr16
cli
push
and
sti
dec
or
add
push
sub
ret
sbb
xchg
mov
stos
push
inc
cmp
cld
das
bound
mov
andb
popf
fdivrs
sbb
arpl
mov
push
xor
mov
andb
xchg
repz
mov
adc
loop
xchg
or
and
call
movsl
pushf
bound
inc
add
jle
mov
rolb
sti
or
mov
jge
mov
pop
sti
out
cli
pop
jne
and
fdivs
enter
jnp
xchg
xchg
in
lret
insb
xchg
adc
jg
cmp
push
test
out
sbb
dec
fsub
pop
in
pop
mov
sub
sub
sub
pop
ja
mov
push
mov
cmp
data16
add
adc
rcrb
mov
in
jnp
sub
call
mov
jg
into
orl
pop
and
icebp
stc
fstp
test
sahf
mov
scas
inc
pop
mov
out
notl
shlb
mov
pop
mov
ret
pop
and
jnp
mov
dec
mov
xchg
adc
add
mov
mov
jle
mov
push
push
leave
jb
mov
jns
popl
lea
inc
xchg
jae
mov
fstps
jae
jbe
js
daa
mov
mov
dec
shrb
pop
or
in
and
js
adc
pop
push
sub
push
lahf
ret
cltd
lock
and
notb
dec
cmp
decb
pop
mov
mov
fadds
and
imul
inc
sub
ret
es
jnp
paddusw
adc
pop
inc
push
stos
dec
push
and
pop
sbb
inc
pop
fnsave
movsl
lret
cmpsl
lods
push
xor
out
stos
lods
shll
popa
std
aam
dec
icebp
xorl
inc
xlat
xlat
lret
imul
inc
int3
les
outsb
stc
fisubrs
fdivl
jle
and
add
outsl
imul
push
push
int3
mov
insb
xor
xchg
sti
pusha
mov
jnp
push
mov
xchg
std
sub
mov
pop
add
mov
dec
sbb
jmp
lea
mov
in
xchg
outsl
jnp
push
cltd
adc
push
fisttpll
sbbb
jb
ja
push
and
fmul
ja
int
inc
or
dec
lcall
inc
and
jmp
pop
xchg
enter
jecxz
fcmovne
les
outsb
les
jne
repz
cltd
jp
and
out
sub
push
int
cmp
jbe
push
ds
inc
push
popa
aas
mov
in
or
pop
andb
nop
mov
inc
popa
cltd
cmp
cmp
dec
mov
mov
out
mov
leave
adc
xchg
dec
movsl
iret
fiaddl
or
pop
adc
insl
add
jle
jmp
dec
mov
jae
jb
ja
pushf
fucomip
cwtl
and
test
mov
dec
in
xor
and
and
inc
inc
push
xor
jp
pop
scas
mov
pop
cmp
add
das
mov
fldt
or
cmp
movsb
repz
mov
movups
push
lret
cmp
insl
or
imul
adc
fstpt
inc
xchg
adc
insb
jne
into
cmc
aad
adc
faddp
mov
mov
mov
aaa
mov
data16
sbb
pop
popf
daa
pop
test
mov
mov
adc
leave
faddl
or
aas
scas
sbb
dec
and
mov
mov
in
out
out
inc
out
and
adcl
rcrb
mov
out
adc
jmp
or
jg
cmp
xor
dec
mov
adc
fs
fimull
test
mov
divl
pop
or
mov
mov
jbe
sbb
add
shr
inc
int3
mov
cmp
loopne
inc
mov
sbb
inc
arpl
mov
add
cli
int
ret
fwait
sub
jl
adc
xchg
lret
ret
adc
mov
xchg
pop
aaa
testl
mov
bound
test
dec
arpl
or
inc
pop
pop
or
mov
les
pop
bound
mov
or
xor
dec
sub
popa
repnz
inc
jmp
orb
mov
sub
fwait
adc
les
add
in
inc
mov
xchg
dec
jo
int
add
cmpsb
pop
jns
xor
push
xor
fstpt
cmc
cmp
adc
sub
dec
rcl
popf
xor
cmp
bound
sahf
test
lock
cmpsl
rorl
add
pop
or
cmpsb
push
fcompl
cmp
jne
mov
xchg
std
hlt
fnstenv
fnstsw
or
pop
xchg
xchg
xor
fdiv
cmp
stc
jo
lret
add
or
mov
outsb
js
dec
dec
sbb
jl
fidivl
sub
addr16
call
imul
sbb
push
xchg
xchg
push
push
and
scas
sbb
test
test
mov
nop
jl
fists
in
and
xchg
in
cmpl
cmpsb
cmc
mov
sub
insb
repz
sarl
dec
mov
add
mov
sarb
push
test
pop
call
pop
negl
in
iret
jno
sbb
cli
push
rcr
addl
dec
push
stos
fnsaves
pop
inc
cs
sti
and
mov
xor
mov
push
rcll
add
sbb
or
rcll
daa
mov
cmp
shl
add
pop
cmp
adc
and
pop
loopne
das
push
lods
inc
sbb
stos
into
mov
jecxz
stc
repnz
mov
cmp
outsl
inc
sbb
inc
inc
mov
mov
je
add
shrb
repnz
movsl
mov
mov
out
xor
jg
mov
lods
inc
std
arpl
mov
popl
sub
jne
xchg
cmp
xor
ja
inc
xor
scas
jl
xchg
push
mov
pusha
call
loopne
cmp
sbb
ret
cmp
js
mov
adcl
xor
xlat
push
sbb
mov
xor
xlat
pop
add
imul
sub
iret
jl
cmpsb
fnstcw
mov
mov
pop
js
out
mov
je
into
push
test
leave
addr16
sub
scas
neg
mov
xchg
adc
in
fwait
push
inc
pop
imul
push
mov
fdivs
rclb
jbe
bound
insl
and
std
pop
adc
xor
push
aad
pop
test
or
aam
hlt
pop
pop
xchg
insb
cmp
jg
lea
jecxz
fidivrs
mov
sub
lds
imul
and
mov
rol
das
jle
loop
pop
pop
pop
jne
or
imul
icebp
xchg
cltd
xchg
repnz
outsb
std
fs
jbe
in
mov
dec
push
cld
mov
mov
inc
and
mov
insl
rcrl
mov
pop
int
cmpsl
xor
jle
pop
and
mov
ret
aam
popf
xchg
and
ret
or
adc
outsl
movsw
outsl
dec
push
jno
add
push
mov
inc
out
nop
fptan
xor
jle
add
repz
fistpl
daa
cmp
dec
jbe
dec
popf
xchg
pop
mov
push
jnp
aas
arpl
sbb
in
es
insl
sbb
pop
bound
arpl
add
cmp
xchg
sbb
subb
testb
int3
mov
int3
adc
data16
mov
mov
or
add
jge
jge
pushf
inc
pop
mov
add
test
icebp
popf
stos
cmp
aas
lahf
in
mov
gs
sub
out
xchg
dec
dec
dec
sbb
test
push
mov
repz
aam
cwtl
jae
nop
lock
mov
subl
lods
adc
push
movsl
andb
repz
xchg
push
das
mov
ljmp
jae
ja
dec
fisttpl
jge
aaa
xor
sub
test
sbb
out
les
push
call
das
in
lods
mov
ljmp
adc
out
xchg
xchg
lret
scas
mov
xor
mov
or
pop
mov
roll
xor
mov
test
jo
push
out
xchg
mov
test
cmp
rcrb
pop
addr16
mov
sbb
push
and
push
dec
fs
inc
sub
lods
sub
lea
cmpsb
sbb
jp
inc
adc
pop
out
xor
jnp
cmpsl
loop
aad
test
cs
popf
not
add
add
loope
push
pop
cmp
shrl
jge
inc
xor
ret
rcrl
dec
add
shll
or
adc
mov
aaa
dec
lea
insl
inc
sub
or
jne
movsb
fidivrs
ja
xor
scas
cmp
and
outsl
lret
aaa
jg
nop
xchg
arpl
mov
mov
or
jmp
lods
xchg
orb
fsubrp
into
cmp
aam
jmp
or
xor
mov
aaa
mov
inc
jle
inc
push
lret
cmp
cmp
jb
into
xchg
sbb
inc
xor
pop
data16
push
ret
addr16
xor
push
lret
jae
test
pop
ja
loope
add
sbb
mov
mov
test
les
hlt
in
subb
repz
pop
jns
iret
inc
aas
cmpsl
dec
dec
inc
nop
call
xchg
pusha
mov
repnz
xor
outsl
and
ss
pop
clc
and
add
aaa
mov
sub
xchg
mov
mov
jge
sahf
nop
inc
add
xchg
and
loopne
sbb
sbb
ret
inc
xlat
leave
pop
push
mov
enter
add
mov
jge
sub
insb
add
in
and
xor
sbb
pop
out
push
jb
lods
std
ret
out
jnp
enter
push
pop
aad
or
lea
jb
je
fdivrs
and
addl
mov
pop
addb
or
test
push
ror
out
stos
aas
js
pop
mov
clc
cmp
mov
ret
xchg
cmp
jbe
jae
sbb
or
sbb
ret
and
jb
cltd
cld
sub
pop
push
mov
lods
adc
push
mov
xchg
int
xor
lods
loope
dec
movsl
cmpb
add
fsin
and
out
sub
lretw
pop
das
push
jmp
xlat
mov
xor
ljmp
mov
ret
outsl
push
push
insb
add
mov
dec
push
das
lods
sub
jg
sahf
add
jle
ja
mov
fidivs
xor
cld
in
andb
pusha
dec
sbb
adc
lret
pusha
inc
clc
inc
addr16
icebp
sbb
inc
lock
mov
dec
ljmp
cmpsb
mov
push
xchg
ret
pop
jge
jb
cmp
push
jbe
dec
dec
aad
pop
jge
in
xchg
lahf
push
gs
fwait
in
js
lods
jle
mov
dec
js
jae
dec
add
mov
lea
adc
shl
imul
dec
or
or
inc
dec
inc
test
clc
out
jns
mov
adc
subb
adc
inc
fs
xchg
xchg
cmpsb
cmpsl
inc
outsl
enter
jp
enter
addr16
test
fistps
pop
stos
xchg
push
les
xor
test
inc
test
xchg
scas
cmp
stos
sub
cmp
lods
cmp
push
int
pop
inc
pop
and
subb
outsb
lock
enter
jb,pt
stc
shll
jbe
sub
inc
xor
mov
push
das
add
or
push
loop
movsl
std
pop
addr16
or
shrb
mov
rcll
mov
fdivr
sbb
mov
cld
decl
push
sbb
xor
xor
mov
inc
adc
fisttpll
into
mov
enter
and
ret
mov
popa
adc
add
pop
test
incl
lods
ficoms
stc
and
push
or
test
jp
outsb
push
sahf
cmp
je
sbb
sub
mov
xchg
jmp
inc
jne
push
fildl
mov
lcall
in
out
inc
call
adcl
jo
push
jecxz
mov
movsl
adc
pop
test
enter
ss
stos
push
xchg
mov
xchg
or
dec
jp
lcall
sub
mov
jp
jnp
stos
bound
xor
lods
or
xchg
cmp
out
lahf
jne
mov
mov
jp
cmp
lahf
fsubr
ljmp
add
cmc
push
ss
std
jno
or
je
out
push
jle
sbb
or
adc
fcom
push
jbe
push
pop
cltd
dec
and
adc
mov
mov
fisubrs
stos
ja
xor
int3
add
popf
inc
mov
in
testl
mov
rorb
adc
fsubrl
or
jae
sbb
add
in
loopne
mov
mov
add
lea
lock
jecxz
int
mov
add
jne
mov
jns
inc
mov
in
lock
or
data16
add
xlat
pop
loope
movsl
ja
ja
sub
int3
popa
sti
mov
daa
push
sbb
cli
data16
push
mov
xchg
mov
xchg
dec
stos
adc
cltd
dec
shrb
sarl
jle
pop
dec
cli
push
lahf
scas
outsl
inc
or
mov
push
jnp
add
dec
gs
or
xor
mov
pop
sub
adc
movsb
lods
shlb
mov
cmp
sbb
add
into
mov
cli
fistpl
faddl
xor
ficoml
jb
repnz
add
insl
leave
addr16
enter
jno
xlat
in
outsl
fsubrs
or
or
les
int3
jmp
popa
fs
inc
pop
mov
mov
xlat
mov
arpl
dec
icebp
popa
pop
mov
cltd
scas
adc
stc
cmc
cmp
cmp
adcl
aad
xor
dec
push
test
inc
mov
movsb
icebp
mov
movsl
mov
pop
jmp
test
xchg
pxor
mov
mov
outsb
push
sti
loopne
inc
mov
lock
mov
les
std
and
and
out
jmp
popa
or
jne
mov
xlat
push
sahf
xchg
adc
push
and
mov
test
mov
and
out
mov
xor
xchg
mov
lods
shll
jle
add
push
popa
push
adc
xor
inc
enter
aaa
aaa
mov
push
and
adc
xchg
fcomp
or
sarb
or
mov
jno
lahf
dec
pop
mov
xorb
loope
fisubrl
pop
movsb
cltd
in
in
out
sub
aad
sbb
shlb
jo
and
dec
repnz
lods
mov
in
pop
mov
and
fsub
std
or
lahf
pop
into
push
outsb
xor
data16
loop
xchg
orl
add
es
pop
adc
rcll
mov
pop
mov
aas
int
cmpsb
js
pop
xor
mov
xchg
adc
shr
xchg
loope
pop
fcomps
push
fdivl
stc
jae
pop
mov
mov
mov
addb
cmp
in
jne
mov
nop
sub
in
dec
push
mov
or
xor
jp,pn
pop
xor
hlt
pop
sub
xchg
test
arpl
inc
xchg
das
jae
push
mov
mov
and
sub
push
or
dec
out
dec
pop
std
xlat
inc
sub
ss
push
sarb
mov
xorl
mov
xor
jecxz
and
daa
jl
repnz
inc
push
test
mov
scas
cmp
outsl
insl
sub
nop
mov
mov
je
push
movsb
rclb
outsl
inc
mov
inc
fdivrs
mov
std
test
mov
incb
jg
test
pop
int
in
in
mov
cmp
cmp
push
xchg
pop
xor
stos
jmp
jae
loope
nop
int3
cmp
mov
jno
inc
lea
inc
and
call
rclb
popa
push
icebp
mov
ret
cmpb
hlt
jne
sub
mov
cmpsl
aaa
xchg
icebp
sbb
cs
cmpsb
pop
and
int
loope
rclb
and
loopne
adc
push
push
inc
xor
lahf
sub
sbb
cli
sbb
jbe
inc
push
push
mov
out
inc
test
dec
mov
out
add
std
int3
outsl
leave
or
cmp
jle
sbb
inc
incl
adc
pop
addr16
insb
lods
xor
pop
out
or
sub
cmp
scas
xchg
jae
pushf
sbb
scas
push
jg
mov
or
aaa
xchg
jns
jae
ficompl
leave
cmp
cmp
push
cmpsl
inc
scas
xchg
lahf
inc
scas
aam
mov
cmpb
outsb
das
out
and
pushf
mov
sub
jne
std
mov
jg
mov
mov
fnstsw
jl
and
out
adc
adc
fcmovne
lods
and
jae
fwait
mov
jne
mulb
fnclex
sub
jge
pop
popa
pop
fs
lret
or
in
nop
pop
ja
mov
js
jecxz
xchg
ror
pop
dec
sti
inc
in
into
add
and
jl
mov
xor
outsb
jmp
xor
sbb
push
into
inc
mov
or
pop
sbb
mov
push
add
iret
add
jnp
cmpsl
pop
sar
repz
mov
jecxz,pn
and
mov
out
jnp
cmpsl
das
cltd
ds
dec
push
cltd
das
jp
mov
pop
push
xlat
test
add
xchg
or
dec
filds
mov
leave
mov
aas
sub
in
add
push
jle
ljmp
add
fisubs
int
cmp
jae
int3
dec
cmp
rcrb
pop
movsb
repz
ljmp
test
dec
push
fnstenv
pop
jmp
xor
out
xor
lods
pop
mov
ror
xchg
jp
mov
xchg
test
mov
out
sub
xchg
je
movsl
outsl
mov
popa
sbb
adc
ljmp
fdivp
test
pop
push
adc
mov
sbb
rol
pop
loopne
cmp
xor
int3
pop
mov
pop
adc
or
push
or
dec
mov
in
sub
cmp
push
xchg
arpl
pop
fdivs
xchg
movsl
push
cmc
repnz
dec
mov
ret
pop
mov
jl
leave
pop
cmpsb
mov
mov
repz
test
xchg
adc
push
out
pop
addl
addb
adc
and
push
mov
mov
sbb
pusha
imul
test
fwait
xchg
mov
cltd
push
test
pop
inc
cwtl
mov
mov
add
push
dec
test
jmp
jae
adc
fldt
inc
jl
les
fcoml
rcll
fsts
xor
imul
mov
cmc
pop
dec
lret
add
into
out
mov
mov
add
cmp
pop
sbb
adc
stos
je
in
push
jne
or
jbe
cmp
stos
int
cmp
jns
dec
cmp
lret
lret
fsts
stos
movsl
mov
les
insl
mov
inc
mov
lods
outsb
mov
imul
inc
dec
push
in
pop
lret
rorl
rorb
jp
testb
cli
fmull
cmc
and
mov
cmpb
jmp
lret
popa
or
clc
loopne
fistpl
push
adc
scas
fisubs
lock
mov
jo
jmp
scas
mov
pop
les
ljmp
xor
fisttps
mov
lret
testl
call
dec
lea
movsb
dec
mov
cmp
jbe
mov
add
repnz
movsb
jp
je
mov
adc
icebp
lret
fsubrp
pop
and
mov
adc
xchg
fstpt
ljmp
adc
arpl
adc
pop
jns
mov
js
imul
out
stos
call
sub
mov
in
cltd
dec
test
cmp
mov
stos
out
push
and
push
push
mov
push
add
jbe
mov
pop
ljmp
pushf
xchg
add
gs
mov
fisttps
loop
pushf
xchg
inc
push
stc
inc
or
xchg
subb
ds
xor
fnstsw
mov
in
shlb
mov
lahf
int
pop
xchg
pop
iret
loop
cmp
es
bound
push
jae
test
xchg
and
push
mov
xor
fisubs
shlb
lcall
sbb
stc
jl
stos
xchg
out
and
mov
add
cmp
cs
lret
adc
push
rcll
jno
mov
xor
iret
addr16
mov
mov
scas
ja
jne
fdivrl
jns
jl
jmp
data16
in
scas
or
addr16
enter
xor
mov
imul
fnstsw
mov
imul
adc
add
sti
mov
jge
sub
loopne
jbe
outsl
in
pusha
ret
ficoml
push
jb
jne
cli
aaa
sbb
stc
xchg
pop
mov
popf
inc
inc
outsb
or
gs
push
cmp
jl
dec
jl
addb
xchg
andl
or
jmp
add
jle
pop
and
lret
xor
xor
fnstcw
rcl
mov
cmp
dec
adc
hlt
movsw
clc
test
mov
mov
or
mov
xchg
inc
lds
inc
adc
bound
add
mov
popa
adc
mov
sbb
push
shlb
test
pushw
in
sbb
fstl
scas
add
and
imul
push
mov
shll
xor
mov
mov
nop
xchg
cli
mov
mov
add
int
mov
call
jmp
mov
mov
std
mov
daa
ss
sub
push
int
rcll
jge
lahf
lods
popf
xor
add
cmp
push
cs
push
push
jp
pop
lret
mov
data16
in
iret
sub
inc
enter
add
adc
sbb
enter
cmpsb
sbb
mov
mov
fldenv
pcmpgtd
push
dec
xchg
xchg
or
loop
das
enter
cmpsl
and
mov
xchg
daa
jge
in
cwtl
xchg
push
add
fadd
fxch
push
aaa
lret
test
mov
hlt
mov
dec
dec
mov
jcxz
frndint
je
sbb
es
mov
ret
je
sub
int3
jp
cmp
sub
lcall
dec
imul
scas
sub
nop/reserved
or
outsl
mov
ja
fnstcw
dec
mov
arpl
rolb
add
mov
stos
test
or
inc
xchg
roll
mov
stos
fisubrl
daa
cli
dec
int
movsl
dec
sub
mov
cld
imul
mov
nop
pop
xchg
xchg
lock
jp
inc
mov
fwait
mov
movsb
cmp
xchg
pop
daa
arpl
loopne
pop
jns
push
lahf
or
jo
popa
mov
jmp
test
shr
inc
test
dec
mov
mov
jecxz
lock
cmp
aam
xor
dec
dec
test
mov
in
cmp
mov
call
hlt
mov
mov
les
stc
dec
inc
xchg
pop
xchg
test
fs
push
aam
outsb
ds
xchg
xor
sub
iret
into
nop
pop
pop
or
int
lods
jns
fildll
sbb
mov
and
stc
hlt
stos
cmp
pop
push
jno
lcall
dec
icebp
pop
and
xor
mov
lcall
dec
idivl
mov
aad
xor
pop
push
cmp
mov
int
addb
les
adc
xchg
in
xor
jnp
repnz
jmp
inc
out
jecxz
fnsave
test
ret
push
in
cltd
cmp
push
mulb
loop
dec
push
pop
lret
mov
mov
bound
mov
insb
pop
fstpl
mov
mov
xor
add
fcmovnb
mov
fucomp
pop
jno
add
bound
push
xchg
cmp
dec
cmp
push
jbe
outsl
scas
test
pop
icebp
movsl
outsl
test
and
in
lret
into
dec
fists
stc
and
ret
add
push
mov
cltd
rcll
icebp
aaa
ret
adc
add
int
fsubrl
jp
testl
lea
inc
sub
in
pop
pop
and
mov
lret
xor
rolb
pop
mov
das
bound
int
dec
fidivrs
dec
rcll
mov
cmpsb
mov
lret
mov
loopne
mov
cmp
cmp
sbb
jmp
sub
fldcw
push
adc
add
adc
dec
xor
lods
outsl
ljmp
jno
iret
xor
ltr
pop
shll
icebp
jae
xchg
testb
dec
ja
frstor
shrb
lea
mov
stc
lds
push
pop
push
sbb
inc
bnd
jbe
add
inc
cmp
push
jp
aam
inc
and
xchg
add
call
call
pop
push
dec
out
push
nop
and
es
lods
stos
adc
pop
sbb
cmp
jae
or
xchg
mov
sarb
in
or
popa
int
push
mov
or
cltd
sbb
cltd
pminsw
leave
jae
cltd
push
enter
pop
dec
xchg
subb
int
pop
shrl
mov
bound
in
mov
pop
xor
push
ljmp
pop
sub
xorb
leave
divl
aad
repz
push
cmp
dec
xchg
pop
jge
subl
mov
movsl
sbbb
push
and
jp
pop
mov
into
xchg
dec
sbb
xor
push
mov
or
out
sbb
loopne
pop
hlt
cmpsb
mov
mov
ljmp
sbb
test
loop
fcmovbe
adc
movsl
lock
fnstsw
mov
push
mov
xor
and
lahf
jecxz
pop
mov
pop
movsl
sub
sbb
jg
aam
cmp
ljmp
cmp
and
fsubrs
imul
orl
ret
fmuls
pop
adc
and
sahf
push
lahf
xchg
mov
xchg
xchg
lock
clc
push
jecxz
pop
or
les
ds
lds
popa
push
imul
mov
mov
adc
test
jmp
adc
stos
aad
jo
fistpl
push
xor
sbbl
xlat
fs
jae
adc
jecxz
pop
or
sarb
pop
xchg
push
and
ds
add
sbb
add
jo
popf
pusha
and
scas
inc
sbb
subb
push
push
fcmovnb
notb
jns
das
movsl
xchg
or
mov
test
in
jns
adc
pop
add
inc
bndldx
inc
mov
enter
and
stos
out
int3
jmp
out
push
adc
mov
push
mov
pushf
sarl
scas
dec
cltd
cmc
es
mov
imul
stos
mov
mov
pusha
ja
test
and
cmc
push
data16
sti
cmp
aam
dec
aaa
xor
bnd
sbb
cmpsl
xor
jbe
jg
cmp
pop
stos
sbb
push
icebp
lea
adc
sbb
pop
xchg
xor
popa
pop
pop
insb
xchg
imul
daa
in
movsl
mov
test
mov
mov
push
in
xchg
push
jne
push
xor
mov
int3
lods
dec
sub
dec
mov
and
cld
scas
adc
cltd
movsl
pop
cltd
notb
cmp
mov
pusha
cmpsl
mov
cltd
int3
xorb
rcl
mov
sub
sbb
mov
xchg
mov
add
inc
jo
imul
sub
stos
mov
sbb
mov
inc
ret
dec
sahf
dec
jbe
scas
insl
or
lcall
mov
rcrb
repnz
sbb
vpsllq
xchg
push
insb
and
or
cwtl
jne
and
repnz
inc
add
mov
and
pop
sub
fwait
inc
aad
jnp
adc
je
add
push
push
out
leave
test
mov
sub
fxch
icebp
insl
pop
inc
dec
jmp
pop
sub
aas
or
scas
or
fucomp
movsl
fsubs
sub
mov
loopne
lret
inc
sbb
aad
fsts
push
pop
sbb
sbb
mov
mov
pushl
aam
push
aas
dec
clc
inc
add
ss
out
lahf
inc
popl
notl
int3
xchg
dec
pop
and
int
out
adc
pop
shrl
out
je
cmp
insb
pop
xor
and
cmp
inc
xor
sub
fwait
aaa
das
pop
movsb
sbb
cmp
and
push
sbb
mov
imul
sub
pop
xchg
jno
sbb
std
sbb
pop
aad
jmp
les
xchg
fcompl
sbb
and
sub
jle
cmp
push
sahf
arpl
pop
pop
lds
imul
mov
fisubs
fidivrs
sbb
inc
or
or
adcb
dec
xchg
ficompl
icebp
push
fstpl
mov
test
inc
lret
mov
roll
imull
movsb
aam
jns
push
popf
inc
cmpsb
les
push
rcl
call
ja
lods
lock
inc
loopne
xchg
push
cmp
cmp
adc
fisubl
popa
inc
push
mov
aad
push
subl
cmp
aaa
push
imul
enter
or
ljmp
xchg
xlat
fisubrs
int3
push
or
cmp
and
xorl
stc
inc
pop
nop
pop
mov
cltd
mov
scas
sbb
jg
dec
push
sub
mov
inc
add
popl
adc
pop
push
outsl
lret
ror
xlat
ds
cmovb
leave
push
into
sbb
mov
lcall
mov
push
iret
into
fs
push
mov
dec
ljmp
movl
int3
inc
xchg
pop
cli
sbb
pop
fldlg2
adc
cmp
int3
sub
jae
jg
xchg
sbb
push
cmpb
jp
and
push
cld
popf
inc
jne
ja
test
pop
and
adc
add
stc
ffreep
mov
ljmp
mov
cmp
imul
stos
das
add
sub
adc
and
pop
movsl
or
or
pop
push
clc
rclb
mov
bound
fadd
jnp
dec
inc
shr
xchg
mov
scas
xchg
movsb
xchg
data16
les
lret
rclb
outsb
push
sub
lret
add
pminsw
inc
imul
xchg
push
shrb
inc
lret
jo
add
sti
arpl
cmpsb
orb
cmp
icebp
mov
js
pop
aas
sbb
dec
inc
lods
inc
in
xor
inc
push
jno
jmp
int
mov
push
jmp
lea
xor
popa
flds
jno
in
pop
mov
sub
xchg
ss
dec
cmp
test
push
sbb
adcl
cli
arpl
std
repz
cwtl
sub
into
dec
or
add
sarb
inc
sbb
pop
or
dec
cmpsl
cmp
add
outsb
jp
cltd
pop
dec
cmp
pop
pop
inc
or
jle
cmc
add
sahf
jns
sub
push
pop
fs
jnp
lods
test
xchg
jmp
test
ss
lock
loope
imul
ret
in
lds
push
lret
push
push
lods
shrl
sbb
push
insb
lods
push
stos
ficomps
lods
mov
sub
pop
jge
push
cmp
adc
pop
sbb
inc
cmp
out
dec
mov
jnp
dec
stos
sarb
cmpsl
incl
sub
aad
mov
jge
mov
jb
in
inc
das
xchg
mov
adc
lahf
xchg
fcmovnb
rcll
insb
popa
scas
xchg
scas
xchg
mov
outsb
movsl
lcall
pop
insl
pop
mov
pop
push
mov
dec
outsl
cmp
roll
cmpsb
enter
dec
mov
jecxz
shrl
sbb
sub
and
or
scas
sarl
int
cwtl
or
pop
stc
mov
sbb
orb
cltd
pop
jg
je
sbbl
int3
int3
inc
jp
xchg
sub
adc
jp
test
mov
test
sahf
xchg
xor
loop
adc
in
fistpll
dec
or
ja
sar
adc
jmp
jg
pop
add
gs
add
arpl
dec
cmp
xor
fstp
pop
xor
test
fdiv
int
and
test
mov
lahf
decb
adc
stc
sub
sbb
sub
imul
pop
cmc
push
dec
inc
add
pop
shrb
in
hlt
inc
fcompl
pop
cmp
in
shl
add
pop
mov
bound
mov
and
cmc
je
idiv
inc
and
xor
inc
test
test
and
sub
aam
push
shr
jg
mov
jp
lret
pop
sub
nop
cmpsb
lods
icebp
mov
xor
fldenv
pop
add
fwait
mov
and
ret
ljmp
push
or
iret
loop
jns
fstpt
mov
lock
daa
cmp
data16
dec
scas
into
and
pop
dec
lret
pop
mov
push
mov
or
stc
lahf
dec
xchg
outsl
or
divps
int3
mov
dec
or
movsl
push
mov
test
inc
and
adc
mov
fdivr
push
popf
xor
fsubrl
mov
sbb
enter
pusha
mov
test
movsl
lea
hlt
ljmp
or
add
and
int3
stc
or
pusha
aas
mov
push
cwtl
xor
push
mov
loope
dec
dec
lock
repz
sub
inc
sub
lods
inc
mov
fwait
inc
adc
or
fmull
rcl
repnz
out
lods
jno
das
shlb
lods
fsubrp
mov
xor
fwait
orb
add
push
in
xchg
xor
jmp
mov
add
adc
or
lret
mov
lret
jp
repnz
loopne
mov
mov
xchg
jmp
stos
pushf
mov
sbb
dec
cmpsb
int3
mov
pusha
out
insb
rsqrtps
outsl
in
mov
pusha
fnclex
inc
push
xchg
sub
stos
cltd
insb
or
push
pop
pop
mov
out
pop
xor
mov
movsb
cmp
adc
xchg
in
mov
add
sub
pushf
mov
daa
out
mov
xchg
mov
pop
mov
push
sbb
lea
das
mov
pop
cld
daa
js
mov
fildl
rcrb
inc
iret
call
or
loopne
das
xor
mov
push
sub
mov
sahf
mov
mov
fstps
sarb
xor
fstpt
insb
js
enter
jg
stos
pop
adc
das
and
adc
int
aad
adc
ds
xor
out
rol
sub
xorl
pop
mov
into
es
mov
mov
cmpsb
adc
clc
negl
aaa
adc
mov
aaa
iret
in
sbb
bound
lds
xchg
in
mov
lret
or
pop
or
pop
das
or
lret
insb
adc
push
add
imul
sub
movsb
mov
es
jo
fimull
jae
mov
mov
sub
mov
push
filds
pop
loop
shrb
adc
sbb
mov
popf
pop
add
mov
fstp
movsl
cmp
cmp
mov
es
mov
movsb
sbb
mov
mov
adc
jg
push
int
vaddss
test
or
clc
pop
bnd
jnp
cmc
xchg
cmp
sahf
mov
pop
sahf
push
dec
xchg
cmc
dec
mov
out
xor
mov
mov
adc
sbb
aam
mov
and
cltd
int3
mov
jecxz
lret
test
xchg
sub
adc
xchg
repnz
cli
into
sub
dec
rorl
rcr
cmp
inc
push
jg
lods
jg
push
leave
ds
or
jo
popf
imul
jl
add
pop
xchg
add
mov
mov
cmp
inc
decl
dec
movsb
pop
les
mov
mov
sub
mov
sub
mov
ja
cmp
and
sbb
sbb
push
popf
cltd
sub
mov
lret
or
data16
insb
lock
sbb
and
cld
in
jne
fcmovnbe
xchg
loop
fs
das
shll
test
dec
pop
psadbw
cli
xchg
lods
clc
mov
cmc
mov
pop
and
or
mov
jb
cld
aad
dec
jns
cli
add
add
and
sbb
in
ret
aam
rcr
jo
cmpb
lret
enter
enter
xor
or
pop
mov
data16
or
xor
jmp
xorl
pop
add
mov
dec
ljmp
pcmpeqw
pop
sbb
repnz
gs
mov
or
push
outsl
hlt
xor
mov
sbb
cmp
mov
in
mov
out
adc
adc
loope
cltd
out
sbb
mov
or
faddl
in
aad
adc
stc
mov
into
push
inc
adcb
leave
add
pop
scas
xchg
bound
dec
mov
test
lods
inc
daa
xor
fcoms
shlb
mov
cmp
outsb
sub
cltd
xchg
sbb
mov
lds
loopne
ja
sub
cmpsb
fmull
fcmovnb
fs
jge
in
pop
mov
mov
out
and
mov
or
enter
ret
aaa
sub
rclb
mov
mov
and
jle
xchg
int
std
or
adc
pop
in
lods
jbe
scas
imul
push
ret
cmp
push
arpl
jmp
lock
shl
cmp
and
inc
jmp
adc
jecxz
adc
push
adc
and
mulb
pop
xor
sbb
je
cld
sub
push
pop
add
cmovnp
mov
mov
push
dec
cmp
push
out
cmpsb
push
popf
stos
ret
outsb
inc
dec
test
mov
mov
xorl
dec
faddp
push
dec
pop
add
mov
mov
inc
or
in
push
jns
cmp
xchg
lret
lcall
push
add
int3
cmp
out
lods
mov
jno
xor
xchg
jns
out
dec
not
shlb
jo
roll
jbe
insl
add
or
shl
push
test
and
mov
popa
mov
dec
jmp
mov
out
pushf
outsb
adc
imul
cltd
adc
xor
xor
outsl
scas
out
rolb
popf
pop
faddl
test
and
pop
add
subb
dec
andb
mov
jg
cmp
insb
push
icebp
pop
sub
and
jmp
mov
sarl
rcrl
pop
and
add
mov
add
xor
and
stos
loope
fcmovnu
xor
dec
ja
cmp
mov
sub
rorb
mov
mov
push
js
icebp
insl
xchg
xor
sub
jns
push
das
inc
test
fimuls
and
fnstenv
mov
stc
movsb
mov
sub
jae
cmc
pop
loop
cmp
sub
jne
xchg
pop
pop
lret
jp
xchg
scas
rcrl
movsb
cmp
cwtl
cli
je
inc
add
add
xchg
push
dec
xor
xor
mov
mov
xor
fmul
aam
inc
repz
lods
mov
mov
jae
mov
xchg
mov
sub
push
jns
test
adc
lock
add
out
adc
push
mov
and
mov
inc
dec
aam
add
outsl
std
add
mov
mov
cmovnp
push
mov
xchg
mov
push
mov
fstps
mov
sub
mov
out
push
shr
jbe
xlat
dec
lret
arpl
add
push
cmp
mov
pusha
pop
xor
cmpsb
clc
ss
repnz
xor
add
clc
fimuls
inc
pushf
xchg
sub
and
jmp
jmp
fidivl
into
lds
movsb
xchg
icebp
push
loope
cmp
test
mov
xor
nop
cld
sti
in
push
fnstsw
add
imul
inc
push
push
in
lahf
sub
in
arpl
imull
repz
cwtl
or
mov
adc
push
mov
cltd
jp
xchg
and
outsl
xor
and
dec
repz
dec
roll
sbb
stos
mov
sarb
add
inc
sub
loopne
mov
push
push
xchg
test
andb
jne
add
and
int
xchg
lcall
popa
les
pushf
outsl
cmp
test
aad
xchg
cmpsb
lret
xchg
loope
and
inc
icebp
sti
add
iret
and
ja
dec
std
sbb
jbe
sbb
fistpll
pop
xchg
loope
adc
in
sti
das
je
push
fwait
mov
and
adc
enter
sub
shrb
pop
inc
jne
daa
iret
sub
mov
mov
movsl
inc
lret
mov
cmp
and
mov
push
mov
rorb
push
mov
jl
sub
and
outsb
push
fs
sub
jmp
outsl
pop
int3
mov
pop
int
idiv
and
aad
lcall
cli
mov
mov
sub
mov
or
adc
sub
ljmp
iret
leave
mov
xchg
ljmp
je
inc
js
dec
sub
stos
mov
lds
push
add
sub
shrd
mov
fisttpll
in
rolb
mov
fidivrs
jne
dec
movsl
lods
xchg
in
sub
push
stos
leave
out
cmp
aaa
and
mov
scas
es
or
in
push
jl
enter
insb
loope
bound
xor
jle
xor
insb
std
outsl
and
movsb
cmp
setle
or
iret
cmp
test
movsl
repz
xchg
xchg
lea
or
jbe
mull
mov
test
test
push
call
ficoml
cs
sub
stos
push
or
inc
pop
pop
nop
dec
xor
lcall
std
mov
aas
sbb
add
mov
push
cmp
mov
pop
pop
jae
cmpsb
ret
sub
add
lcall
sbb
lret
mov
dec
lea
jmp
push
pop
dec
fidivrl
jae
rorl
push
sub
je
dec
dec
or
addr16
push
out
dec
fmull
cmp
mov
add
test
imulb
jecxz
cli
adc
mov
add
popa
ret
mov
and
or
push
cmpsl
clc
dec
mov
stos
call
xchg
loope
xchg
xchg
dec
dec
pop
mov
or
es
cmpsb
xor
call
mov
pushf
das
inc
lahf
cmpsl
scas
push
or
shll
mov
pop
daa
nop
push
and
sbb
inc
mov
jne
loope
outsl
sub
dec
and
imul
adc
sarb
imul
mov
jmp
loope
or
js,pn
in
xor
sub
lret
sbb
lea
out
les
xor
xchg
imul
sbb
jnp
ja
mov
movlps
rorl
xor
lods
fldl
cld
or
xchg
adc
mov
in
xlat
andb
push
popf
stos
dec
pop
push
out
sbb
enter
pop
jle
dec
out
out
in
repz
cmc
add
and
jg,pn
movsb
mov
adc
mov
inc
jb
cmpsb
shl
in
cmpsl
add
pop
pop
xchg
dec
xchg
dec
jns
fdivs
pop
push
enter
dec
fwait
dec
mov
test
cmpsl
popa
pusha
cmp
iret
mov
pop
sub
aam
stos
add
sbb
or
xchg
lods
sahf
scas
imul
or
stc
ss
rorl
dec
addr16
fwait
mov
incb
inc
sub
imulb
xchg
repnz
bound
pop
jb
push
fcomps
push
stos
mov
dec
or
jg
data16
xchg
mov
jb
push
ret
in
pop
pusha
add
xchg
pop
mov
cmp
mov
jno
pop
push
xchg
shlb
add
lods
sub
cmpsb
cmp
jle
arpl
inc
aas
addr16
enter
cs
into
nop
push
or
dec
push
push
iret
frstor
pop
icebp
sbb
in
sbb
pushf
sbb
add
dec
xchg
mov
fdivr
sbb
mov
push
sub
push
or
mov
les
lcall
notl
inc
lret
shll
jmp
push
inc
dec
push
adc
loope
dec
add
aas
lcall
xlat
out
es
jle
mov
scas
add
icebp
adc
lock
inc
mov
aad
and
insb
es
xchg
sub
xchg
adc
cmp
mov
lcall
pop
mov
pop
cld
jno
lahf
into
ljmp
push
jl
out
push
xchg
nop
adc
pop
push
es
cmp
adc
mov
mov
jmp
mov
fstpt
je
imul
fcmovbe
popf
xor
xchg
cltd
jo
dec
gs
inc
lods
pop
outsl
lret
pop
mov
cmovg
dec
jnp
pop
jb
aam
data16
imul
and
adc
movsl
subb
inc
ret
xchg
ds
scas
and
mov
xor
lcall
les
sub
icebp
mov
cld
mov
or
cli
test
xor
leave
fldt
push
into
pop
mov
fstl
fdivl
and
push
xchg
cmp
add
loopne
cltd
inc
test
ss
jnp
aas
sub
jo
int3
mov
enter
mov
sbb
ret
aas
xchg
aaa
xchg
cli
cmp
out
mov
mov
rorl
cmp
mov
jae
jnp
or
je
xchg
pop
test
cs
mov
pusha
les
les
or
fiaddl
iret
pusha
fstenv
push
xchg
pop
cmc
dec
rolb
and
xchg
cmp
mov
jbe
and
fwait
push
jb
mov
pop
mov
jge
lock
outsl
dec
lods
cmp
and
adc
dec
or
dec
mov
in
mov
ror
mov
sarl
ret
inc
fwait
and
sarb
or
paddd
cmp
inc
insl
mov
cmc
popa
inc
mov
cmp
sub
test
pop
inc
in
sbb
push
fildl
mov
sahf
je
out
mov
sub
fsubrp
xchg
std
lcall
out
mov
movsb
push
lds
or
fs
in
jno
call
push
adc
pop
mov
push
inc
loope
push
inc
push
sbb
push
mov
mov
xchg
mov
shrl
sti
pop
gs
cli
add
push
stos
xor
xchg
lods
imul
xor
ret
cld
xlat
das
es
es
sub
ljmp
cmp
nop
dec
dec
sahf
lock
jecxz
jae
sbb
fcompl
adc
pusha
adc
jns
addb
stos
xchg
clc
mov
fcoml
popa
and
push
repnz
int3
jg
dec
cltd
movsl
sti
jle
jge
mov
dec
test
push
test
xchg
scas
int3
fwait
test
pop
push
fistps
add
xchg
mov
sub
cwtl
lods
xor
jl
mov
fidivs
test
mov
lods
shl
dec
scas
cli
push
cmp
cltd
cmp
mov
and
stos
das
rolb
cmc
dec
jg
subl
out
mov
mov
popf
bound
cld
mov
mov
test
push
popl
xlat
mov
sub
push
dec
scas
adc
das
ret
cmc
data16
jmp
call
adc
shll
pushf
xor
sub
jle
xchg
sbb
into
or
clc
push
sbb
add
das
leave
pop
enter
jne
insl
dec
in
add
mov
adc
sub
and
fildl
dec
shrb
mov
dec
and
pop
das
mov
pop
cli
hlt
jmp
loopne
adc
add
jl
xor
shlb
dec
inc
and
mov
push
jl
ljmp
xor
scas
movsl
lods
sti
lods
int
or
pop
call
jb
test
and
push
sub
mov
js
jne
add
test
gs
lret
movsl
adc
testb
hlt
inc
dec
sub
popa
push
pop
sbb
loopne
jno
imul
xchg
add
mov
stc
iret
pop
insb
call
mov
loop
sar
mov
out
push
jae
lods
sbb
les
and
movsb
push
push
pop
in
js
call
lahf
roll
inc
pop
cmp
jb
add
lret
inc
mov
and
cld
jg
jl
movsl
paddd
andb
mov
sti
adc
std
xchg
fcomps
xor
mov
cmp
sub
test
inc
negl
addr16
mov
nop
fwait
inc
insl
rcl
or
and
inc
mov
xchg
bnd
pop
push
testb
mov
pop
xlat
xchg
dec
mov
mov
xor
shlb
mov
lret
mov
add
aas
in
cmp
xor
mov
test
dec
in
inc
sub
xor
pop
or
adc
cmp
xor
xchg
xchg
ljmp
insl
cld
fiaddl
jbe
mov
scas
dec
inc
or
mov
lods
mov
mov
pop
test
jno
jnp
and
jb
push
and
jbe
push
fdivrs
adc
addl
mov
pop
les
es
and
mov
fists
inc
int3
stos
clc
or
subl
cmpsb
lahf
fucompp
push
movsb
fisubrs
int3
inc
jge
xor
int3
lahf
out
ds
mov
ss
and
enter
movsl
mov
cmp
js
mov
faddl
mov
addr16
test
cmpsl
jns
test
ficompl
add
inc
fsts
xchg
jp
adc
inc
mov
jns
insl
scas
push
enter
ret
jb
adc
and
cmpsl
xchg
iret
outsl
cmp
jge
dec
sarl
push
leave
xor
adc
fisttpl
cmc
fildl
or
push
addb
stos
push
sbb
add
faddl
test
push
in
loopne
in
roll
cmp
ret
adc
sar
sbb
lea
sbb
out
pop
mov
fdivrs
jb
sub
test
icebp
scas
push
in
pusha
add
test
cmpsb
sbb
jp
ret
in
addr16
cs
in
cmp
adc
add
pusha
push
pop
es
pop
pop
nop
in
int3
stos
pop
push
out
xchg
inc
xchg
int
fldt
int3
pop
adc
xchg
cli
imul
fsts
clc
ret
and
mov
sub
stos
push
cmpsb
movsb
in
fldcw
and
xor
dec
ret
mov
insl
push
aas
andb
mov
fcomps
leave
and
sub
xor
jbe
pop
test
add
cld
fsubr
xor
pop
xor
icebp
jne
std
mov
lock
xchg
addr16
push
push
rolb
xchg
sub
jno
mov
imul
cmp
adc
dec
add
jne
mov
xchg
mov
sub
popa
mov
lcall
and
mov
mov
fstpt
inc
or
jg
pop
jno
mov
pop
sbb
enter
insb
or
or
inc
jae
jae
pop
lret
fldcw
or
mov
jo
popf
xor
pop
test
aas
cmp
mov
outsl
cmp
dec
cltd
inc
add
mov
push
loope
push
fnsave
dec
out
jae
lcall
movsb
fiaddl
sbb
jb
and
cmp
xor
push
cld
in
outsl
jno
or
mov
jecxz
and
orb
mov
and
mov
nop
repnz
orb
mov
cmp
cmp
jl
cli
in
gs
les
sbb
sarb
test
xchg
and
std
fwait
adcl
inc
popf
xchg
outsb
mov
lea
ret
pushf
inc
aad
mov
mov
jns
repz
icebp
jmp
hlt
aam
mov
loop
jae
lods
test
cmpsl
sti
pop
lods
adc
cmp
mov
rcll
out
lret
icebp
push
scas
add
cs
ret
ret
or
pop
cmp
lock
mov
mulb
popw
int
mov
inc
push
adc
cmp
aam
jbe
stos
mov
push
mov
popl
push
fwait
xchg
insb
fsubrl
push
inc
in
push
sbb
ljmp
add
mov
inc
out
nop
les
jge
cli
push
mov
cmp
sbb
sbb
int
cmp
inc
xor
and
xchg
imul
push
lods
jge
jecxz
pop
icebp
jne
mov
xor
or
icebp
int
or
inc
leave
jo
cmc
bound
aam
les
sub
cmp
add
ret
rcll
aad
push
xchg
clc
in
imul
movsb
clc
jecxz
xchg
mov
mov
in
out
sub
xchg
es
subl
loop
stos
aam
sbbl
sbb
ss
xchg
outsl
xlat
mov
cld
mov
push
cs
xorl
add
mov
mov
stos
pop
jb
pop
inc
jge
or
mov
in
and
cmp
stos
sub
lret
xor
pop
sarl
jo
sbb
gs
add
dec
xor
adc
test
jbe
push
popf
jb
or
dec
xchg
sbb
push
push
and
add
dec
mov
in
mov
push
mov
lcall
test
xchg
fistl
fnstcw
imul
adc
cmp
aaa
dec
test
pop
xor
nop
jnp
inc
mov
sbbl
mov
pop
and
popf
test
mov
xchg
fsubl
sar
lret
in
pop
xor
aas
jb
mov
add
push
mov
loopne
pusha
inc
mov
push
inc
enter
xchg
jo
je
das
mov
mov
loop
add
clc
push
ljmp
mov
xchg
lds
lea
mov
inc
xchg
aam
dec
inc
inc
mov
push
inc
clc
clc
push
dec
sub
mov
push
aad
cmc
loop
dec
rcrb
scas
nop
and
imul
sbb
stos
jo
jg
lahf
pop
xor
shlb
pop
scas
movsb
xchg
cmp
xor
inc
out
or
dec
sbb
xor
push
lcall
adc
mov
jle
push
sub
mov
and
loop
out
les
jae
jle
xchg
xchg
sub
in
xchg
fwait
addb
sub
out
jnp
jp
stos
push
test
pop
es
dec
pop
cld
or
jo
jl
fdivrp
jge
jne
mul
xchg
dec
out
pop
pusha
sbb
sub
jne
in
and
xchg
jnp
clc
js
xchg
in
mov
jae
data16
push
jno
sub
mov
cld
decb
dec
mov
jbe
out
mov
cmpsb
int3
jno
add
lret
lea
add
or
out
rol
loope
mov
loopne
sub
sub
lret
jae
xchg
test
push
xlat
xor
insl
xor
or
xor
movsl
mov
pop
das
in
fsubrl
cmp
in
inc
xlat
ds
pop
cmp
nop
repz
cmp
mov
cmp
add
xor
xchg
push
fwait
and
fstps
sbb
lock
push
jmp
cs
or
cmp
movb
or
jle
pop
and
pop
pusha
sub
test
mov
and
sti
mov
mov
fldl
test
jmp
mov
inc
add
pusha
inc
clc
sbb
sub
fdivrp
pop
jge
and
dec
sbb
add
jge
add
aaa
push
adc
xchg
mov
jbe
incb
pop
xchg
lea
stos
insl
negl
xor
pop
cs
or
and
pop
mov
inc
xor
sub
loopne
xor
push
push
jnp
mov
in
roll
popa
icebp
sbb
xchg
cmc
or
mov
dec
iret
and
out
adc
mov
insl
cli
sub
adc
mov
ja
test
dec
mov
outsb
mov
lret
jecxz
jno
movsb
pop
inc
sti
fsubp
rcrl
xchg
movsb
pop
cmp
fdivr
add
mov
rcrb
inc
inc
adc
lret
adc
cmpb
lahf
cmp
add
and
inc
outsl
cli
pop
pop
pop
pop
cmpsb
cmpsl
dec
cmpb
xchg
repnz
adc
lds
mov
jne
stos
sub
adc
push
cwtl
fldcw
imul
pop
dec
inc
ss
jne
jns
xor
fld
bound
clc
bound
shrb
pushf
mov
add
sahf
js
ret
mov
lods
lcall
out
cmp
dec
and
fiaddl
in
adc
pop
lret
add
cmp
xor
dec
mov
ljmp
mov
imul
daa
ja
dec
negb
push
xor
xchg
add
jmp
dec
add
push
push
icebp
in
add
lret
outsl
xchg
aaa
fstpt
mov
iret
mull
cmpsl
sub
cmp
in
pop
fimull
test
int3
test
test
hlt
push
lret
pop
cs
push
mov
push
ljmp
test
movsb
push
repnz
shrl
lcall
add
jecxz
cmp
in
jecxz
dec
ljmp
mov
inc
jmp
jns
cli
enter
mov
cmc
invd
lods
xor
pop
les
insb
nop
cmc
aam
and
or
sub
je
mov
std
inc
inc
inc
xor
rorb
dec
xor
push
sub
sbb
nop
push
cli
and
in
lods
dec
and
das
hlt
int
mov
cltd
pop
lret
pop
and
leave
lahf
adc
and
test
ljmp
fadd
jmp
lds
sbb
inc
int
orl
cltd
and
xchg
jae
mov
in
add
jbe
sub
adc
test
fwait
fwait
loop
dec
insb
das
mov
xor
dec
adc
mov
jp
cmp
fisubs
popa
arpl
ret
dec
or
pop
insl
push
cmp
adc
std
pop
or
xor
popf
and
mov
jg
mov
push
aad
xchg
pop
and
les
sub
inc
sub
cld
jle
jae
js
adc
dec
jns
xchg
dec
scas
add
repnz
into
adc
es
outsl
shlb
inc
fstpl
dec
pop
hlt
movsb
mov
jb
mov
inc
xor
aas
xchg
mov
add
imul
stc
iret
push
jl
dec
in
pop
lahf
mov
jmp
xchg
sub
sub
add
imull
add
andl
pop
out
mov
aam
jns
leave
xchg
pushl
mov
in
test
inc
lcall
rol
repnz
mov
or
ja
jecxz
les
testb
fcomps
cmp
jge
or
cmpsl
cmp
cmp
repz
mov
cli
push
aas
into
in
in
sti
fidivrs
orb
ret
mov
or
push
inc
mov
rorl
out
mov
jl
fdiv
jle
pop
stc
mov
mov
test
and
scas
rolb
xor
ja
or
and
xor
popf
mov
fmulp
jno
scas
xchg
jb
push
cmp
inc
xchg
or
leave
xchg
shll
cmpsl
dec
mov
sbb
prefetchwt1
or
mov
shl
pop
xorb
stc
fisttpl
mov
outsl
stos
pop
or
push
cmp
sti
int
sub
mov
int
and
and
stc
dec
cmpsb
cmc
rorb
adc
push
es
jo
pop
cmp
mov
xchg
mov
inc
call
push
cmp
fisttps
push
and
fwait
pop
in
sbb
push
cli
test
adc
xor
push
pop
int
xor
test
mov
lock
cmp
mov
aaa
repnz
out
or
rcr
inc
xchg
push
andb
std
cmp
or
shlb
fadds
imul
fucomi
stos
ficoms
jmp
pusha
xor
jl
addr16
stc
int
ret
lcall
out
hlt
das
aam
addr16
and
sub
sbb
jnp
lcall
mov
out
jae
fidivs
js
repz
lea
mov
mov
les
sbb
dec
outsb
test
xchg
add
into
ret
sbb
xchg
clc
dec
xor
les
jne
or
pusha
xor
push
jge
and
jnp
xor
mov
aam
int
xor
jp
stc
mov
jnp
mov
arpl
cltd
lret
fldt
sahf
test
rclb
sbb
std
mov
pop
mov
hlt
dec
pop
sbb
lahf
loopne
mov
push
mov
dec
and
lcall
fmull
mov
mov
and
sub
cli
adc
lahf
xchg
lret
inc
insb
adc
int
inc
xchg
test
push
push
jle
pop
xchg
push
bound
movsb
test
mov
cmp
stos
push
sub
pop
stos
cmpsl
push
in
mov
jle
mov
enter
clc
lret
sarl
rcl
cmpsl
jg
mov
mov
dec
xor
pusha
sub
push
mov
lahf
cmp
inc
inc
sub
push
jl
lret
cmc
and
mov
loope
mov
pushf
popa
xor
pop
nop
js
insl
stos
clc
sub
std
and
jb
mov
stc
add
cmp
into
sub
cmc
sbb
testb
mov
mov
call
push
ror
jmp
loopne
lea
iret
xchg
cwtl
fs
stc
dec
loop
aam
xor
or
sbb
mov
std
jns
push
xchg
aas
and
dec
cwtl
adc
int
push
xor
pop
pop
lods
jg
shlb
out
xchg
daa
jl
popa
es
inc
mulb
adc
xor
dec
inc
imul
mov
pop
xchg
call
adc
movsb
aas
clc
push
insb
jg
pushl
dec
ds
pop
out
and
jmp
rcll
mov
sarl
dec
lds
pop
mov
lock
jno
orb
jno
xchg
and
jns
push
fdivr
and
in
mov
adc
xor
idivb
sbb
push
ljmp
mov
adc
nop
inc
rcll
mov
mov
mov
sti
sarb
and
mov
test
mov
jbe
mov
xor
mov
ret
pusha
aaa
sub
mov
and
leave
out
adc
shll
pop
dec
jbe
jnp
xchg
inc
lds
pusha
pop
clc
rcrb
xchg
cmp
pusha
ret
hlt
lea
add
daa
inc
mov
cwtl
push
jecxz
aas
mov
inc
popa
or
hlt
in
cmpsl
negb
mov
cmpsb
and
in
jp
jae
les
push
fs
dec
in
shll
push
xor
imul
mov
call
push
aas
cmp
imul
dec
ja
bound
iret
jns
aas
jbe
push
addl
mov
add
adcb
leave
jns
adc
or
cmp
negb
push
test
pusha
push
andl
cmovs
clc
pop
pop
inc
xchg
cmp
xor
rcl
test
or
cmp
rorb
cmp
mov
sti
or
hlt
nop
adc
or
xor
ficompl
add
out
scas
lret
jne
insw
imul
into
in
cwtl
mov
add
fldenv
mov
aaa
jle
icebp
jl
inc
add
dec
fistps
pop
testb
jecxz
sbb
icebp
test
sub
sarb
pop
js
add
push
fs
mov
sarb
inc
iret
mov
dec
cmp
insb
or
pushw
call
pop
mov
mov
mov
xchg
push
sti
scas
adc
into
addr16
dec
idivw
pop
cmp
and
xchg
stos
pop
cmpsl
dec
aaa
adc
scas
mov
loope
mov
repnz
sbb
xchg
test
cltd
pop
popf
call
inc
insl
and
dec
dec
lret
sbb
xor
jns
in
add
sbb
jg
xor
xbegin
std
in
mov
sbb
ja
mov
jmp
and
test
sti
mov
jo
ljmp
xchg
inc
mov
dec
mov
ds
push
mov
popa
xor
inc
jmp
cmpsl
and
mov
dec
mov
std
das
mov
add
sahf
faddl
or
jb
rcrl
cmp
pop
cmp
cwtl
push
iret
jmp
sbb
aam
cmpsb
movsl
dec
adc
test
fs
jmp
sbb
jl
add
mov
orl
mov
stos
mov
sbbl
rcll
int
inc
scas
mov
shl
out
mov
and
adcb
insb
addr16
mov
addr16
movl
loop
mov
mov
xchg
loopne
out
insl
push
stos
sub
int3
into
xchg
jb
in
jbe
call
rclb
out
imul
mov
icebp
dec
push
lcall
cltd
call
mov
xchg
int3
divl
aas
das
fucomip
cld
mov
cmc
dec
negb
insb
push
das
cld
xlat
push
pop
inc
arpl
nopl
and
sbb
mov
aam
popf
inc
aas
fs
orl
out
fisttpl
cmp
insl
mov
insl
push
mov
add
mov
sub
outsb
mov
inc
adc
mov
movsl
rcll
push
aas
dec
out
imul
notb
addb
jp
imul
jae
sub
cmpsl
orb
leave
and
sbb
movsb
in
mov
fnstsw
por
jae
out
mov
outsb
mov
jp
loope
and
rcr
ret
mov
jbe
in
mov
inc
cwtl
cltd
push
mov
pop
lods
popf
mov
or
es
xor
test
outsb
test
cmp
js
mov
je
fwait
loopne
jne
insl
das
mov
jns
pop
mov
icebp
adc
outsl
and
cmp
push
scas
lret
dec
std
adc
mov
xchg
into
mov
arpl
aas
dec
pop
mov
ret
sub
test
dec
fcmovnb
mov
sub
clc
stos
inc
leave
push
cmovb
sbb
sahf
mov
pushf
jmp
and
adc
fs
adc
xchg
jmp
add
ljmp
pop
and
flds
mov
popl
iret
out
jl
es
fidivl
pusha
adc
sbb
and
xchg
mov
popf
pushl
mov
insl
subl
and
or
pop
iret
out
insl
dec
fcoms
rolb
and
sbb
adc
xor
leave
in
cmp
or
out
pop
outsb
pop
cmpsb
or
sarl
inc
int3
mov
adc
pop
insl
aas
sbb
cld
int3
add
int
xor
into
outsl
mov
dec
jno
xlat
fisubs
sub
jp
out
inc
cmpsl
lock
inc
lea
mov
sbb
jmp
mov
cltd
add
pop
xchg
jo
mov
decl
pop
add
pushf
sub
daa
loopne
insb
xlat
jp
mov
or
push
fidivs
test
ljmp
fs
es
sbb
push
fsubl
stos
lahf
cmc
cmc
mov
into
imul
js
cwtl
insb
inc
int
or
sarb
push
stc
or
pop
sbb
daa
je
testl
jg
push
xor
jecxz
popf
lcall
outsl
mov
loope
aaa
imul
loope
xor
in
mov
leave
mov
pop
icebp
or
pusha
dec
adc
cmp
jbe
sbb
movsl
les
lock
add
inc
sbb
and
mov
mov
aas
std
jo
jb
inc
sbb
mov
dec
xor
mov
sbb
and
hlt
push
pop
dec
adc
ss
shlb
mov
add
fs
xor
in
adc
xchg
shl
mov
and
mov
adc
cmp
cli
mov
dec
push
mov
aaa
pop
add
iret
in
ljmp
pop
dec
scas
cmp
popl
adc
or
dec
or
mov
cmp
sub
sbb
out
xor
pop
gs
xchg
insl
pop
sar
sub
xlat
xor
jg
leave
cmp
push
out
jae
cmp
fadds
popa
xor
imul
sbb
push
xchg
pop
and
xchg
sarl
cmp
pushf
sahf
xchg
mov
dec
xchg
fdivr
lds
and
fwait
enter
mov
lods
scas
sbbl
inc
xor
push
jbe
cmp
jl
cwtl
xchg
out
call
mov
cmpsl
pop
leave
mov
add
mov
out
pop
pop
sub
enter
mov
push
fwait
push
loop
dec
aam
outsb
test
dec
mov
xchg
cmp
dec
mov
push
lret
dec
cltd
stc
int3
movsb
ds
push
and
stc
orl
sub
xor
out
je
mov
xchg
sub
jno
xor
pop
mov
sbb
xlat
stos
push
inc
cwtl
mov
xorl
arpl
xlat
movsl
nop
dec
dec
sahf
add
push
outsl
test
mov
jge
sub
or
insb
or
add
icebp
pop
popf
popf
sahf
or
push
aaa
arpl
out
mov
out
sbb
pop
pusha
dec
gs
int3
xchg
jg
or
push
test
cmpsb
dec
add
bnd
push
and
cwtl
iret
mov
xchg
jbe
test
shll
and
sub
imul
cmp
sti
cmc
ljmp
or
pop
in
push
bound
adc
cs
jae
cmp
fsubrl
out
stos
and
out
mov
pop
xor
lret
scas
add
in
shl
inc
mov
sub
psllq
sub
sbb
aad
inc
fsubrl
sub
jne
xchg
xchg
jae
mov
xchg
push
je
pop
adc
mov
mov
xchg
sub
aaa
or
movsl
aaa
mov
xchg
daa
pop
mov
test
repz
in
add
sub
jns
daa
nop
cmp
lds
cli
lods
add
out
test
push
arpl
pop
pop
imul
lock
jmp
adc
or
jmp
sub
sahf
add
lods
cmp
cmp
ja
push
out
mov
pop
mov
inc
xchg
sti
loop
mov
ret
xchg
xor
lret
std
repnz
call
mov
dec
std
xchg
outsl
setl
pop
jmp
js
cmp
sbb
and
fwait
enter
stos
movsb
dec
lahf
insb
je
jp
in
cltd
cmp
xchg
imul
cwtl
mov
sbb
cmpsb
or
insb
je
cmp
mov
sbb
add
cwtl
dec
ret
fwait
ljmp
adc
nop
mov
and
popf
mov
stos
xchg
scas
cmpb
push
aas
mov
mov
jle
enter
mov
int
and
fdivrs
in
fwait
push
lret
dec
xchg
push
or
stos
test
cmp
sub
mov
pop
aas
int
arpl
xchg
loope
shrl
fildl
inc
inc
or
gs
add
xchg
addb
sar
fildl
push
xchg
cmpsl
out
lahf
cmp
mov
cs
sbb
repnz
sahf
pop
pop
mov
pop
sbb
sbb
mov
mov
es
xor
cmp
lret
or
loop
ljmp
scas
rclb
in
fisttpl
sbb
pusha
add
loop
adc
testl
lret
jg
push
dec
jbe
je
cltd
jns
mov
inc
clc
mov
idivb
sti
rorb
dec
bnd
push
push
or
jl
xchg
in
sub
adc
incb
imul
push
mov
mov
fdivrs
loope
xlat
mov
clc
mov
and
lods
adc
or
icebp
enter
push
add
int
fwait
ss
add
ljmp
pop
jecxz
or
fisubl
lret
lret
xchg
sbb
push
sbb
lea
jb
fdivl
ret
cmpsb
add
test
imul
jnp
cmp
pushf
inc
shlb
pop
jp
push
dec
xor
outsl
dec
insl
sub
mov
movsl
cli
push
gs
lods
ds
fildl
lds
push
test
cs
fadds
insl
es
inc
push
mov
addr16
fs
mov
lds
fdiv
cld
dec
pop
xchg
jmp
fidivl
pop
dec
jo
jae
or
stos
subb
test
xchg
fwait
xor
cmpsb
inc
xchg
int
loopne
movsl
fcmovnu
jp
out
sbb
or
xorb
pop
lret
adc
cld
sub
push
iret
lahf
sub
pop
je
fcoms
adc
loope
add
pop
enter
xchg
out
in
push
lods
in
inc
lcall
cltd
pop
mov
dec
adc
cmp
sahf
mov
mov
mov
stos
fisttps
sbb
cltd
arpl
aas
pushf
push
fcoml
mov
sub
out
mov
fcoms
hlt
jo
xor
aaa
gs
mov
mov
cli
lcall
fdivr
je
lea
or
clc
mov
sbb
and
mov
jno
out
sub
cmp
mov
xchg
es
cli
push
stc
decl
in
das
inc
ljmp
add
or
ja
mov
call
pop
scas
pop
mov
dec
and
or
jnp
insl
mov
push
stos
bound
fldenv
in
pop
sub
pop
mov
inc
pusha
inc
mov
rcrb
cmpsb
shlb
pop
mov
fs
fmulp
rclb
jle
jecxz
or
loope
and
ret
xchg
push
jp
push
mov
in
dec
mov
mov
in
and
sub
inc
stos
dec
pop
into
dec
and
sub
mov
or
mov
cmp
repz
add
sub
insb
mov
dec
pop
cmp
rorl
outsb
cli
jp
mov
jp
mov
leave
movsb
mov
jae
loopne
jecxz
or
cwtl
push
in
insb
jmp
jb
mov
sti
ficoms
pop
xchg
xchg
jp
lock
adc
mov
push
inc
inc
mov
push
andb
insl
xor
rcrl
mov
jns
push
jo,pt
gs
xchg
jge
xchg
or
shll
sbb
jge
popa
test
lea
jb
ficoms
sti
jnp
in
fwait
or
cmp
icebp
mov
enter
jg
test
outsb
clc
cmp
push
mov
mov
xor
jno
pusha
sub
xor
sub
test
test
mov
iret
cmpsl
xchg
xchg
push
sub
xor
setle
push
push
mov
jo
fsubrl
sub
pushf
sahf
mov
in
jg
mov
lods
mov
sbb
sbb
push
out
add
mov
fidivrl
fimuls
dec
add
leave
xlat
and
fisttps
lea
ret
into
icebp
out
jge
pop
xchg
cmp
cmp
dec
pop
fldcw
mull
mov
or
repz
imul
xor
sbb
es
lds
push
fidivrs
mov
bound
std
mov
arpl
lea
xor
shrb
in
lea
jle
mov
stos
and
test
xchg
sub
lret
dec
jo
mov
or
fistl
jmp
icebp
in
jge,pt
aam
mov
jmp
test
and
out
gs
xlat
repz
xchg
mov
or
jl
dec
fistpll
push
cmp
jo
or
sub
nop
sbb
xchg
cmp
adc
je
push
dec
incl
mov
rcr
mov
xchg
rorb
in
dec
inc
or
mov
pop
pusha
pop
enter
or
adc
pusha
add
or
push
lods
dec
out
pop
push
jbe
lods
popa
in
xchg
xchg
nop
icebp
xor
mov
cmc
daa
loopne
daa
jge
insb
sarb
sub
adc
push
sahf
test
imull
jno
addr16
xlat
lahf
decl
cli
lret
push
add
xchg
adc
mov
add
sbb
sti
mov
scas
aas
scas
push
mov
xchg
popf
ret
push
xor
jge
popa
mov
mov
out
push
pop
fdivp
mov
pusha
loop
mov
sbb
loope
icebp
cmp
fldenv
daa
ljmp
xchg
repnz
inc
sbb
pop
dec
push
in
ljmp
adc
insl
je
sbb
mov
cmp
fwait
adc
mov
fcom
ret
aaa
sbb
jmp
push
inc
and
or
dec
ret
imul
inc
fists
push
mov
shrl
mov
loope
fisttps
or
mov
and
call
jp
movsl
pop
pop
pop
outsb
add
movsl
pop
pushf
push
test
xlat
lahf
inc
mov
add
cld
pusha
and
cmp
xor
and
jns
jmp
into
ret
int
mov
push
divb
scas
into
mov
inc
in
fldenv
cmp
add
inc
jge
xor
push
js
and
xor
sbb
sbb
imul
movsl
pop
cmpl
jmp
ficoms
into
xchg
sbb
ja
out
aad
jno
mov
pop
loopne
pusha
jle
lcall
mov
adc
enter
push
std
mov
lods
push
xor
add
cmpl
inc
into
jb
shlb
dec
popa
cmp
jb
in
aaa
hlt
dec
roll
js
push
ljmp
testl
jg
xchg
adc
mov
sbb
cld
push
dec
mov
rol
or
out
test
xchg
sub
scas
push
leave
inc
cmp
movsl
popf
or
sub
dec
pop
jns
mov
shll
jbe
inc
lds
xchg
popf
cmp
mov
loop
jmp
arpl
inc
lahf
cwtl
dec
outsb
sbb
pop
mov
pop
pop
jg
adc
icebp
inc
mov
mov
jg
xor
divb
bound
hlt
jo
lods
cmp
pusha
xchg
adc
das
mov
cwtl
xchg
push
mov
addr16
cmp
or
cltd
add
dec
ret
xchg
lods
jecxz
cli
fisubs
subl
xchg
loopne
cli
ljmp
addr16
faddp
xlat
cmp
and
sub
xchg
cmp
sbb
inc
jle
orb
sub
fidivrl
inc
inc
xchg
inc
mov
shrb
ljmp
cmp
lods
fwait
pop
ret
pop
sbb
and
das
in
dec
xor
push
addl
ret
inc
pop
mov
add
in
fstps
jle
dec
lret
loop
add
mov
test
jno
jle
fwait
mov
xchg
loopne
cmp
xor
dec
cmp
pop
jecxz
flds
cmp
test
and
into
mov
pop
push
enter
sub
xor
fistl
mov
sbb
les
push
pop
stc
insb
push
dec
push
push
pop
stc
dec
mov
outsl
xchg
mov
pusha
ffreep
je
jge
and
sbb
stos
adcb
aam
mov
inc
xor
int
jnp
fcomps
dec
mull
mov
ss
ss
or
std
loope
nop
fidivs
jp
ret
iret
cmp
cmp
xor
fwait
test
imul
in
rcll
loopne
aam
sbb
sbb
test
jle
scas
push
nop
shl
push
sbb
les
sar
stc
jl
mov
xchg
hlt
leave
loope
mov
mov
filds
jg
jmp
mov
popf
inc
mov
mov
aam
add
pop
push
je
scas
add
std
dec
mull
sbb
js
fs
lret
sub
movsb
sub
leave
subb
sbb
scas
std
arpl
int3
adc
addb
sub
add
popa
pop
xor
pop
xor
pop
cmp
sub
std
sub
insl
push
sub
icebp
inc
mov
and
sbbb
jae
loope
stos
lock
ss
insb
daa
sti
add
pop
iret
jae
ret
cmc
cmp
test
push
sub
cmpsl
pusha
or
lahf
jge
jecxz
je
pop
movsb
adc
negb
movsl
jg
sbb
dec
inc
mov
repnz
mov
pop
sub
test
adc
add
add
add
dec
ffree
pop
out
das
jecxz
mov
gs
imul
or
enter
cwtl
call
pushf
push
inc
xchg
es
aam
fdivs
cmp
xchg
dec
stos
xchg
out
insb
sbb
jbe
aas
cmp
xor
inc
aaa
enter
pop
sbb
lock
push
std
mov
mov
popa
int3
negb
rcrl
test
mov
cli
jmp
dec
pusha
push
stos
sub
imul
push
cmpsb
cmp
sbb
shll
xchg
movsl
jmp
hlt
lods
inc
adc
push
lret
lret
and
mov
xor
out
add
sbb
dec
mov
and
fcoml
or
bound
shll
mov
leave
rol
pop
fimuls
incb
adc
sbb
sbb
dec
xor
fidivrl
fnclex
sub
jns
test
test
inc
jo
mov
pop
hlt
jp
cwtl
and
mov
repz
cltd
outsl
mov
push
gs
sarl
pop
cmp
fdivrs
test
outsl
andl
mov
sbb
or
bound
fidivs
adc
stos
push
jbe
popf
movsb
outsl
roll
cmp
sub
cmp
lock
insl
rcrb
mov
mov
pusha
pop
int3
sahf
xor
mov
int
divb
xor
jo
or
or
jle
xor
push
dec
int
int
jb
push
jno
psubq
xor
les
dec
loopne
in
cli
jbe
mov
xchg
adc
mov
jb
sbb
mov
cmp
dec
xchg
cwtl
stc
mov
cld
adc
into
mov
push
int3
jno
sub
stos
add
and
outsl
mov
sub
mov
insb
or
test
das
push
call
data16
test
and
sub
mov
shll
rclb
enter
mov
sbb
movsb
or
sub
stos
and
jg
test
xlat
cmc
cli
repz
aam
jl
and
mov
and
inc
adc
cmpsl
les
mov
aas
out
xchg
push
out
ljmp
xchg
stos
jmp
and
and
jl
mov
push
pop
and
mov
dec
mov
sbb
stos
cmovne
sub
sbb
jle
add
xchg
jnp
push
cmpsl
adc
sbb
rol
pop
icebp
or
fistpl
jb
daa
lea
sub
xor
mov
mov
mov
imul
mov
into
movl
cmp
in
jp
outsb
jg
and
jb
and
call
cmc
cld
mov
std
fisttpll
repz
sub
cld
repnz
xor
push
cltd
xchg
and
push
add
inc
jle
jmp
mov
outsl
repnz
jmp
dec
mov
mov
test
mov
out
shrl
push
jecxz
cltd
lahf
std
int
inc
push
into
xchg
and
popf
outsb
rclb
and
ret
sahf
mov
xor
roll
in
or
mov
imul
xchg
jl
addr16
popa
fstps
mov
popa
push
scas
mov
xchg
fistpll
aad
lods
mov
sub
mov
loop
jl
and
jno
fistl
cvttps2pi
loope
js
jmp
iret
loop
fimull
jnp
mov
inc
inc
pop
push
push
js
xchg
into
push
cmp
jns
cmp
push
divl
stos
and
jne
jmp
mov
aad
and
mov
adcl
jge
aad
pop
pop
xorb
mov
fiadds
pop
push
outsb
pop
ret
xchg
dec
pop
jns
cmp
jne
cmc
push
xchg
inc
ja
scas
cltd
movsl
in
loopne
lods
jecxz
push
int
cmp
and
adcl
rolb
cmovp
mov
jmp
repnz
and
out
adc
fs
fistpl
dec
sbb
into
lds
xchg
ljmp
shr
jmp
mov
cli
jp
fcom
inc
hlt
mov
loopne
out
je
lods
jno
repz
push
mov
into
add
out
and
ss
mov
mov
std
cmp
lahf
out
dec
fnstsw
pop
inc
insl
xchg
mov
adc
inc
stos
das
sahf
push
fsubl
mov
int3
fildl
bound
jns
aad
inc
adc
cmp
add
lds
lea
xchg
outsl
pop
lods
mov
sarb
jg
dec
push
mov
mov
ljmp
stos
fisttpl
cmpl
stos
mov
scas
mov
popl
mov
bnd
imul
lcall
or
dec
ja
sub
mov
pushf
adc
loop
adc
cmp
shrl
jns
sub
sbb
jb
jle
ljmp
fldt
dec
out
or
push
fs
jge
dec
fsubs
mov
cmp
repnz
test
adcb
cmp
mov
test
add
pusha
mov
js
pusha
shll
push
in
or
and
inc
cli
in
inc
imul
mov
orb
out
loope
mov
fstp
ret
or
xor
ljmp
xchg
mov
lods
dec
loop
sub
sbb
notl
gs
out
inc
pop
sub
outsl
lds
mov
mov
push
loopne
add
mov
mov
bound
inc
jnp
and
into
mov
stos
jl
push
enter
pop
out
jnp
daa
xchg
dec
add
xchg
and
mov
inc
scas
cmpl
cmp
movsl
push
mov
in
mov
sti
sub
add
ds
js
mov
adc
xlat
xor
sti
xor
jb
mov
lods
and
cmp
int3
movsb
addr16
pusha
mov
leave
cs
mov
test
xlat
or
jecxz
and
inc
lods
jns
inc
mov
bound
mov
mov
scas
xchg
lcall
and
cmp
insl
stos
push
and
mov
add
dec
xorl
adc
shrl
sub
loopne
inc
xor
push
in
popf
sub
xor
insl
in
aaa
add
fwait
cmp
lock
sbb
xchg
outsl
sbb
adc
jne
lret
insb
fwait
cmp
int3
pop
lods
mulb
pop
ficoms
and
jecxz
les
xlat
lcall
jle
push
hlt
outsl
mov
add
sbb
rolb
ret
jno
add
mov
aaa
inc
xlat
xlat
insb
insb
or
in
cs
mov
sahf
or
not
mov
into
dec
mov
mov
nop
and
aas
mov
loop
push
es
pop
gs
mov
sbb
loop
jnp
out
mov
js
mov
or
mov
inc
lret
cmp
stc
sti
sub
fldt
pop
imul
sub
out
les
pop
mov
cmpsl
stos
and
jge
mov
and
sbb
sbbb
mov
xrelease
sub
adc
aad
cli
jge
bound
xor
std
xchg
out
pusha
ljmp
mov
pop
aaa
sbb
sbb
dec
jge
mov
test
sub
push
je
shlb
xchg
dec
das
hlt
inc
adc
mov
push
jae
stos
push
ja
decl
into
pop
cmp
imul
or
out
in
xorb
mov
xor
mov
std
aad
imul
lds
fbstp
push
addr16
or
and
mov
loop
ret
jle
or
inc
or
fs
into
out
mov
push
fucom
sub
pusha
scas
push
add
popf
lock
push
sbb
mul
mov
popa
cmp
jmp
or
int3
loopne
daa
add
adc
out
int
dec
lea
stc
lea
fwait
push
or
sub
pusha
jnp
lea
lret
xchg
int
jbe
repz
or
push
mov
int
and
imul
xor
mov
sub
xor
and
fisubl
pusha
mov
ret
xor
xchg
xchg
addl
pop
xchg
loopne
test
cmpsl
adc
icebp
cltd
mov
push
fistps
subb
xor
mov
jmp
add
sub
push
aam
mov
jnp
mov
out
xor
xchg
xlat
mov
outsl
mov
aad
mov
or
and
jb
dec
dec
xor
or
sbbb
mov
cld
add
mov
and
pop
imul
xor
adc
lcall
dec
jno
mov
xor
or
mov
add
sub
mov
nop
dec
sahf
mov
pop
test
in
pop
dec
sbb
call
lcall
movsb
adcb
movsb
adc
cmc
pushf
push
gs
out
xchg
pusha
cmp
xchg
pop
insl
or
outsl
add
das
add
repnz
jle
das
das
jle
mov
mov
jb
and
iret
cs
clc
or
fstl
loop
xchg
or
push
sbb
and
cli
loop
push
lds
lahf
andl
nop
sbb
xchg
pop
movsl
inc
out
push
push
notl
jmp
mov
shl
mov
fmull
in
xlat
mov
add
in
jne
or
add
push
inc
orb
or
sahf
jae
test
stos
pusha
adc
cmpsl
scas
jo
jns
in
pop
sub
cmc
pop
rolb
adc
dec
lock
out
lods
popa
push
mov
push
popa
sub
scas
sub
fdivp
mov
mov
jns
xchg
cmpsl
push
scas
inc
fs
push
or
cmp
dec
or
pop
stc
push
fs
push
dec
sbb
lea
imul
scas
cmpsb
cmp
xchg
fisubrl
pop
stos
imul
jge
call
enter
dec
adc
gs
insl
test
loop
add
lock
sti
pop
arpl
lds
ret
dec
js
int3
pop
test
cmp
push
push
cmp
jl
jl
push
std
lea
movsb
clc
jge
xchg
xchg
and
mov
inc
adc
stos
xor
adc
and
loop
mov
xor
test
ljmp
cmc
js
inc
mov
inc
cmpb
rorb
je
test
push
xchg
out
mov
pusha
pop
addr16
push
jl
in
loop
cmp
cltd
add
mov
out
xor
push
out
add
insl
or
enter
adc
idivl
or
jo
popa
push
and
aaa
outsb
test
lahf
js
sbb
lds
mov
mov
add
xchg
push
jl
cmpsl
adc
lcall
jns
pop
test
mov
mov
leave
push
loope
dec
mov
jns
pop
add
push
cmp
call
pop
add
mov
test
scas
sbb
inc
xchg
adc
hlt
mov
jg
icebp
adc
fdivl
cs
int3
data16
sub
mov
xchg
aas
cmp
pop
and
cs
fildll
js
or
mov
ret
mov
es
data16
adc
fwait
add
jecxz
mov
add
xchg
lret
jecxz
ja
pop
sahf
sub
mov
pop
movsl
cmp
inc
mov
movsb
rcrl
enter
jmp
js
xor
xor
push
mov
lds
bnd
cmp
mov
pop
sbb
imul
aas
xor
push
aam
and
xor
movsb
or
repnz
mov
cmp
fwait
and
mov
nop
pop
aam
xchg
mov
stc
push
xchg
call
xchg
mov
rorl
mov
mov
hlt
int3
inc
and
in
xlat
ja
aaa
mov
inc
cltd
pushf
pop
sbb
mov
xor
scas
scas
ficoms
xchg
call
mov
pop
ds
jbe
xchg
clc
cmp
pop
jmp
mov
xchg
push
jg
pop
sbb
cmp
push
repz
stos
pusha
jge
jg
scas
push
test
cwtl
lret
add
out
or
dec
ficompl
and
or
outsb
aam
pop
add
xchg
repnz
mov
push
js
pop
rcl
es
scas
iret
jmp
popa
ljmp
pop
mov
pop
xor
adc
jecxz
xchg
outsl
out
adc
scas
sbb
and
pop
fs
test
sbb
shll
sbb
mov
loop
cmp
push
add
xor
enter
les
sub
pop
xor
xchg
add
cmc
xchg
cmp
jbe
xchg
ret
repnz
shrb
scas
outsb
lods
test
xchg
xor
sub
push
pop
enter
hlt
je
in
scas
mov
into
daa
les
pushf
daa
dec
inc
movl
in
test
xor
shlb
imul
out
fwait
add
sarb
xchg
out
aas
sub
in
sbbb
ljmp
mov
je
popf
out
loopne
jb
jne
loop
push
pop
stos
pop
push
dec
push
jno
mov
stos
loope
mov
xor
adc
mov
push
sub
mov
and
leave
clc
shrb
mov
mov
ret
mov
loopne
push
sbb
xchg
fists
mov
sub
dec
jecxz
pop
jl
and
pop
or
lock
or
out
push
lods
cld
push
aam
pop
dec
inc
cmp
lds
dec
scas
ds
dec
pop
daa
adcb
test
jge
cli
mov
sub
scas
addr16
mov
frstor
xchg
dec
fstl
push
lcall
stc
out
int3
pop
pop
pop
mov
lcall
jne
aaa
insb
imul
cld
mov
pop
adc
lcall
leave
mov
xchg
hlt
add
imul
cmp
fsubp
inc
inc
push
jge
pop
fwait
imul
sbb
or
pop
jo
fsubrs
repnz
mov
sbb
adc
jle
xchg
nop
sbb
sbb
jp
push
inc
mov
mov
test
adc
mov
dec
inc
jp
stos
repz
sti
scas
inc
mov
jge
or
add
fs
dec
jmp
daa
pushf
push
push
scas
mov
test
add
sub
lret
mov
stos
and
lea
stos
cmp
xchg
es
test
loope
fcoml
je
xchg
xchg
and
or
fists
pushf
jns
icebp
movsl
int3
dec
xchg
dec
iret
std
sbb
sbb
ret
call
mov
push
inc
xchg
call
psadbw
adc
inc
mov
adc
insl
xor
stos
enter
pop
adc
xor
lods
int3
shll
lea
stc
xor
jbe
cmp
push
inc
pop
mov
xchg
mov
in
adc
jge
jns
xchg
or
mov
popa
pop
pop
stos
push
xchg
or
bound
pop
cmp
cmovne
adc
inc
js
and
adc
divb
imul
jle
pop
or
push
or
mov
aas
sbb
mov
mov
and
cmp
mov
dec
mov
loope
add
scas
inc
and
mov
cmp
ret
aas
xor
leave
inc
and
xchg
pop
xchg
pop
in
mov
pop
cmp
cmp
xchg
call
add
out
or
aaa
gs
mov
into
mov
pop
pushf
call
mov
or
neg
add
add
jmp
jmp
aas
jns
cmpl
pop
mov
or
jb
iret
dec
lret
add
pop
inc
sbb
test
and
inc
xchg
add
setns
mov
scas
pop
es
push
or
jmp
lods
mov
pop
outsb
sbb
add
or
pop
ss
jmp
sbb
push
hlt
lock
movsb
sbb
dec
or
pop
add
sbb
push
sahf
stos
xchg
clc
xor
mov
mov
clc
imul
addr16
xor
fisubrs
pop
jns
pop
clc
xchg
addr16
fldl
cmpb
ret
dec
testl
out
mov
aas
pop
cmp
and
xlat
sbb
or
out
mov
cmp
add
fisttpll
scas
mov
cmp
fwait
add
jmp
xchg
xor
xor
into
cmp
cmp
call
dec
sbb
sub
outsl
shlb
jbe
into
sbb
inc
lret
mov
pop
out
jmp
inc
dec
loopne
xchg
xchg
ficompl
adc
mov
mov
ret
mov
xchg
mov
bound
xchg
sbb
push
and
int
or
loope
test
dec
fistpll
je
mov
add
mov
out
jbe
pop
rorl
mov
xchg
xchg
push
lds
add
or
xchg
jle
cmp
nop
mov
shll
xor
push
mov
sbb
scas
jle
gs
daa
adc
rsm
or
pusha
cltd
stos
inc
xlat
sub
mov
or
sbb
dec
mov
sub
push
xchg
in
call
dec
rcrb
iret
test
stos
loope
inc
xor
xchg
push
cmp
pop
lods
xchg
pop
inc
inc
push
test
pavgb
xchg
and
stc
push
icebp
stos
int
jbe
bound
ret
mov
dec
js
push
inc
jmp
mov
lret
or
pop
sub
into
shl
dec
and
jl
clc
frstor
jmp
mov
or
dec
xor
mov
mov
cmp
push
jb
sub
in
out
pop
xchg
cwtl
lcall
pop
or
inc
or
pop
xchg
out
dec
pop
fndisi(8087
sub
xlat
cmpsl
push
add
outsb
int3
or
push
es
or
pop
leave
nop
out
cmpsb
xor
inc
pop
pushf
into
jg
or
or
and
adcb
cmp
sub
aas
dec
dec
ja
xchg
icebp
fmull
mov
push
leave
mov
mov
ret
mov
xor
pop
ja
push
hlt
aad
js
outsb
mov
and
push
imul
ret
les
sbb
mov
inc
lret
jno
mov
shll
fsubr
lock
fists
movsl
mov
fidivrs
clc
adc
mov
dec
addr16
pop
lods
iret
ja
scas
pop
mov
out
mov
incl
in
dec
bswap
sbb
and
into
dec
or
dec
ljmp
mov
mov
jnp
sarb
xlat
sarb
popf
adc
imul
scas
sub
subb
daa
fbstp
inc
cmc
fldt
pop
cmpsl
inc
xlat
pop
cmc
cmp
sbb
fcompl
hlt
int3
mov
mov
movsl
mov
ret
js
add
or
jnp
or
adc
mov
sub
xor
sub
jbe
aam
sub
mov
xchg
sub
mov
lret
in
shr
mov
xchg
mov
rclb
cmpsb
nop
mov
add
mov
mov
dec
dec
adc
sbb
ret
mov
test
fildl
push
push
lock
sti
jb
andb
cmpsl
adc
and
jne
ss
push
sti
js
xchg
pushf
or
xchg
pop
in
outsb
cltd
mov
or
sahf
pop
push
jle
jbe
adc
fxch
outsl
ss
sbb
into
data16
push
outsb
xor
pop
aam
jp
inc
por
mov
and
push
lods
in
or
xchg
push
pop
dec
xchg
shl
and
shrl
pusha
push
shr
add
or
mov
cmp
movsl
in
bound
test
testb
ss
jmp
outsb
cli
mov
xchg
xchg
cmp
sti
push
sar
inc
pop
add
mov
dec
fistpll
js
rorl
test
movsl
repnz
sbb
out
jmp
sub
adc
inc
fcompl
pushf
cltd
or
mov
sbb
cmp
lods
fcompl
stos
loopne
or
jo
leave
and
cmp
pop
push
jecxz
aas
subl
loope
repz
lahf
in
sbb
inc
xchg
pop
mov
jb
insb
movsl
mov
movsb
enter
add
xchg
mov
ja
dec
sub
sbbb
popf
xchg
divl
in
xlat
shlb
pop
out
frstor
or
inc
inc
cmp
pop
dec
jo
pop
push
retw
and
rcrl
test
pop
xchg
adc
rcl
xchg
mov
in
std
sbb
adc
shll
jb
pop
xchg
int3
sub
dec
inc
jg
std
sahf
adc
add
hlt
push
pusha
pop
lret
inc
jb
xor
sub
cltd
or
movsl
clc
pop
loopne
ficoms
stos
in
aad
das
and
paddb
repz
insb
adc
inc
stos
shl
mov
push
bound
xor
mov
scas
mov
sbb
cmp
cld
scas
testb
int
and
mov
call
outsl
daa
leave
fs
jb
push
cmp
jae
popa
out
sti
lock
dec
jo
in
aaa
push
lahf
popf
shll
or
adc
int3
sbb
aam
cmp
dec
mov
dec
movsb
stc
cmp
test
addb
in
fwait
call
outsb
jl
out
jg
fiadds
dec
cmp
movsl
pop
imul
mov
out
push
push
adc
or
movsl
inc
imul
jb
fnstsw
cmp
pop
inc
push
cmc
pop
out
mov
loopne
fisubs
push
jo
cmp
sub
push
add
int3
scas
rclb
jge
lret
xchg
mov
addr16
lock
popa
jae
fsub
xchg
aas
daa
push
jns
jnp
sbb
decl
ret
push
lahf
enter
mov
adc
out
sbbl
cmp
cmpsb
loope
push
jnp
test
pop
lcall
push
es
xchg
xor
adc
shl
push
mov
mov
out
dec
pop
pop
pop
mov
das
lea
or
cmp
sti
push
push
das
aam
push
and
add
jns
movsb
xor
cmc
fnsave
or
lods
je
push
arpl
and
push
cmp
inc
push
movsl
or
fnstsw
cmp
pop
or
jns
mov
pop
inc
sub
pop
popf
ds
in
dec
push
dec
add
or
out
xlat
jge
lret
outsb
add
loope
jb
xor
xchg
adc
nop
addr16
push
cmp
pop
in
mov
and
jle
pop
je
xchg
xchg
inc
sbb
shll
vmwrite
or
orl
stos
in
iret
iret
sahf
in
cli
mov
xor
arpl
cs
int3
xor
adcb
shrl
clc
cltd
sub
or
jl
mov
bound
dec
mov
out
cmpsb
ret
inc
test
outsb
ja
jl
sub
pop
test
jg
push
sbb
fwait
push
jmp
movsb
in
xchg
test
push
pop
lret
movsb
jne
mov
mov
mov
push
rcl
inc
ds
sbb
pop
repz
pop
fnsave
dec
call
loop
pop
adcl
dec
test
inc
imulb
mov
fcmovne
xchg
or
mov
in
xor
mov
sbb
negb
in
aad
out
dec
pop
xchg
push
cltd
push
test
in
out
repz
sahf
mov
cmc
jmp
xchg
fildll
psubq
jno
xor
mov
out
lret
xchg
sub
mov
sbb
adc
in
inc
pusha
mov
mov
shlb
enter
jnp
pop
popf
add
icebp
lock
orl
iret
push
negb
mov
clc
push
jno
outsb
pop
and
mov
out
dec
pop
add
popa
into
jmp
fsubl
fdivl
cmp
pop
xchg
lds
fidivrs
pop
fsubrs
fsubl
add
xor
outsl
sub
and
mov
jl
test
add
jmp
or
shlb
sub
ja
add
dec
fisttps
pop
mov
mov
xor
sbb
sub
or
popa
xor
and
xchg
push
xchg
orl
sbb
push
js
in
push
aam
or
imul
aam
jmp
push
mov
insb
out
mov
int
pop
and
inc
sahf
jle
sub
stc
add
cmpsl
sbb
movsb
lea
adc
int
mov
das
mov
rol
dec
xchg
dec
inc
lea
mov
addl
inc
mov
test
inc
jmp
adcl
adc
dec
pop
push
mov
fsubs
out
loop
jp,pt
inc
test
cmpsb
mov
cmp
cli
inc
cmp
movsl
jns
sbb
jno
pop
int3
adc
rcl
jmp
sarl
out
dec
repnz
arpl
jnp
out
call
inc
popa
sti
in
mov
mov
push
lcall
mov
cmpsb
mov
loopne
sub
cwtl
int3
popf
mov
mov
sbb
leave
sbb
scas
jae
xor
jb
cs
jae
mov
or
outsb
mov
add
addr16
pop
js
mov
push
sbb
xlat
jns
lcall
ret
mov
imul
jg
adc
xchg
mov
pop
arpl
inc
in
mov
dec
push
ret
inc
test
or
add
sbb
lea
dec
pushf
push
leave
jg
mov
icebp
imul
xchg
mov
pop
push
add
subb
dec
dec
dec
fs
xor
adc
js
push
sub
loope
sub
and
in
rorb
and
push
adc
addl
xor
loopne
out
aad
adc
xchg
mov
daa
outsl
xor
push
push
out
xchg
lock
stos
sub
mov
or
inc
insb
add
pop
inc
icebp
test
pushf
sbb
push
clc
ja
jmp
lcall
out
pop
or
loopne
mov
and
in
ja
xor
dec
xchg
lods
mov
aam
xor
nop
ljmp
inc
pop
bound
or
lahf
adc
jns
mov
cmp
mov
daa
ljmp
jmp
std
xor
and
mov
pop
push
inc
mov
cltd
cmp
jmp
inc
or
cmp
mov
fidivs
push
sub
xchg
imul
or
jle
push
sub
stos
shll
aas
xor
sar
add
push
jg
movsb
ds
cmpsb
xchg
mov
roll
pop
bound
aaa
and
jne
out
enter
in
dec
stos
jp
mov
test
stc
frstor
aad
and
lods
mov
adc
push
push
sub
ds
popf
movsl
out
cmp
pop
lods
sbb
adc
mov
outsb
aam
imul
nop
mov
movsl
lods
add
jo
popf
or
xchg
nop
add
mov
mov
addr16
fwait
push
sub
js
addr16
rcrb
jp
jle
pop
sbb
ss
or
rcll
push
mov
in
and
mov
push
pop
rcr
repz
test
push
enter
data16
stos
leave
xlat
mov
mov
popf
mov
mov
or
js
movsl
xchg
cmp
daa
repnz
jb
icebp
add
jecxz
loopne
xor
imul
jl
scas
push
inc
sti
xor
fistpl
fists
sub
daa
dec
pop
fldt
mov
loope
int
mov
and
loop
pop
mov
inc
sbb
iret
imul
cmc
pextrw
mov
cmp
xchg
call
lret
jns
stc
and
xor
xchg
jbe
xchg
push
push
iret
scas
rep
jmp
xchg
ret
lods
fwait
and
bound
mov
jno
pop
imul
inc
and
cltd
repnz
mov
xchg
bound
mov
jecxz
xor
clc
call
xlat
hlt
mov
xor
pop
jl
daa
inc
dec
lock
dec
lods
cmp
das
add
dec
lods
je
sbb
sarl
jae
fwait
test
pop
ja
lock
adc
test
push
int
fs
int
pushf
mov
push
add
movsb
or
or
push
inc
cli
mov
sahf
nop
cmpl
and
aad
call
mov
and
sub
sub
xchg
pushf
cmp
popf
cltd
fidivrl
out
sarb
sub
mov
mov
pop
es
iret
addr16
fbld
aam
outsb
push
inc
lret
ficoml
icebp
xlat
in
jne
xor
lcall
cmp
mov
xchg
fldcw
mov
pop
mov
loope
add
push
stos
mov
stc
or
repnz
cmp
imulb
push
lods
scas
pop
test
fiadds
out
pop
fdivs
adc
push
sti
dec
push
adc
jno
or
jo
inc
inc
and
jbe
mov
andl
push
pushw
ret
mov
jecxz
movsl
sbb
dec
imul
enter
cmp
push
inc
push
jnp
pop
cmc
push
leave
fstpl
push
add
std
leave
mov
push
fmul
movsb
lret
xor
ds
add
cmp
xchg
sbb
cmp
outsl
mov
imul
out
popf
xor
and
lea
fcoms
sub
adc
jge
repz
and
jmp
stc
jbe
lea
cmpsl
loope
add
daa
in
pusha
int3
sub
imul
sub
lods
nop
adc
imulb
mov
nop
nop
mov
inc
js
adc
push
cmpsb
sti
inc
sbb
sub
cmpsb
mov
inc
mov
jnp
ds
test
or
cmpsl
or
js
iret
add
push
loop
pop
push
sbb
jb
stos
out
inc
push
inc
pop
daa
js
mov
shrb
jae
cmove
pop
jae
mov
adc
dec
xchg
inc
cmp
add
dec
jo
lods
xor
jecxz
xchg
test
cmp
cmp
std
enter
fs
rorl
cwtl
shll
dec
fcoml
lods
mov
das
or
xor
shrb
loop
mov
sbb
or
jae
mov
in
dec
test
xlat
nop
aam
in
sbb
addr16
out
add
rcrl
movsb
aad
add
jp
push
cmpsb
outsl
mov
addb
cli
leavew
test
rorb
fs
add
dec
mov
shr
aam
roll
sub
cli
mov
sbbb
pop
fbld
cmp
bound
mov
add
or
iret
adc
adc
cli
scas
clc
movsl
fsubrl
add
mov
lods
dec
scas
insl
imul
and
mov
std
fucomp
out
jle
push
test
xchg
test
mov
popa
jge
inc
movsb
mov
lods
or
ficompl
dec
add
sti
mov
rol
in
roll
test
data16
xor
outsl
ss
mov
ror
cmp
sti
pop
sarb
popf
aad
jne
call
outsl
test
stos
cmpsb
or
into
fs
movsl
stc
dec
lock
dec
push
cmp
xor
imul
lahf
ret
mov
sub
repz
scas
mov
cmp
mov
movsl
negl
stos
sahf
mov
imul
shrl
inc
cltd
stos
movsb
iret
gs
jbe
inc
sub
ljmp
push
pop
or
iret
jnp
fimull
lahf
inc
scas
aas
jecxz
adc
jecxz
cmc
mov
sub
dec
cmp
dec
xchg
mov
dec
cmp
xchg
mov
negb
xlat
mov
sub
ds
mov
sub
std
stos
push
in
ret
stos
rol
pusha
adc
cmc
push
int
cmpsb
popf
out
jle
shrl
xor
in
mov
cmp
lahf
cmp
mov
ret
sahf
jae
pop
ljmp
cs
lds
movsl
sbb
cmp
imull
sahf
sbb
lock
xor
cmp
jle
dec
push
and
push
shlb
sub
inc
dec
jge
gs
inc
pop
push
dec
push
sbb
sbb
xor
jno
jle
ret
ret
xchg
scas
push
xor
jge
andl
xor
ja
xor
push
mov
sbb
insb
int
fmull
rcrl
iret
or
scas
js
xor
jl
outsb
push
xchg
jbe
test
fisttps
jl
ret
scas
adc
dec
das
and
pop
lods
int
sbb
test
push
xchg
arpl
cli
in
imul
fs
insl
push
and
mov
fdivrs
lods
push
ret
sub
adc
inc
and
imul
mov
inc
fdivs
pop
dec
out
hlt
cmpsb
xor
cli
mov
pop
push
cld
xor
filds
pop
and
mov
sbb
ss
test
jmp
xchg
shl
push
and
imul
jg
xor
ficoml
ficoms
mov
and
sub
mov
fxam
sbb
mov
mov
fwait
test
int
and
ret
pop
int3
rorb
push
jecxz
mov
icebp
insl
inc
push
sub
and
aad
pop
pop
stos
dec
cmpsl
mov
inc
xchg
push
int
xor
push
xchg
sti
push
jo
mov
cmp
or
mov
lea
mov
in
push
xchg
cmp
add
loop
inc
jg
or
mov
shl
xchg
mov
repnz
mov
pop
insl
fdivs
movsl
out
testl
adc
test
ficompl
adc
inc
jmp
mov
mov
lea
es
lret
xchg
pop
mov
jbe
mov
mul
lods
test
jne
cmp
jl
dec
gs
or
xchg
sbb
fisttps
or
inc
adc
xchg
sti
test
sub
shl
pop
popa
inc
mov
aaa
jnp
insb
std
jmp
xchg
cmp
inc
sub
jnp
shl
jle
stc
stos
fbstp
stc
int3
cltd
pop
sbb
mov
out
adc
pop
lock
mov
jb
adc
fidivrl
mov
mov
adc
lock
dec
test
mov
mov
out
sbb
cwtl
rcrb
rcrl
mov
adc
add
add
out
inc
mov
dec
clc
faddp
adc
xchg
xchg
inc
ja
or
jns
inc
pop
repnz
jp
repnz
test
enter
adc
sbb
or
push
push
daa
outsl
outsl
loopne
or
mov
mov
bound
notb
push
push
pop
pop
push
jo
ror
in
sbb
stos
movb
jg
sbb
daa
jns
and
into
xlat
push
sbb
inc
cmp
enter
pop
xchg
mov
push
ds
lret
ret
cwtl
cld
stos
repz
ss
mov
insl
cli
and
jecxz
pop
sbb
xchg
jle
test
sbb
inc
adc
push
jge
in
pop
mov
mov
movsb
cmp
addr16
sbb
out
inc
jp
loop
jbe
push
jae
adc
dec
stos
pop
add
push
ljmp
in
std
cmp
xchg
jle
add
cltd
pop
ret
mov
cmp
ss
sub
test
loope
repz
movsb
push
or
cmp
aas
xchg
pop
push
into
ror
add
lahf
dec
cmpb
push
std
dec
inc
lods
scas
and
inc
push
into
loopne
mov
add
xchg
push
adc
iret
iret
cmpsl
iret
and
aad
adc
add
lret
lds
adc
out
jo
test
mov
rcrl
mov
sub
inc
dec
fsubs
mov
inc
into
cmp
jg
into
or
mov
movsl
jne
movsb
das
enter
inc
insl
or
or
or
cmp
xchg
ds
loop
mov
mov
neg
mov
push
add
adc
lcall
gs
and
aad
dec
dec
add
sub
and
and
std
decl
pop
rorb
fisubrs
push
arpl
cli
ljmp
cmp
aas
and
mov
mov
add
mov
ja
xor
popa
mov
sbb
leave
bnd
cmp
mov
push
imul
test
incl
mov
das
bnd
sub
loopne
mov
push
jo
add
sbb
cmpsb
xchg
loopne
cmpb
out
dec
or
cwtl
shll
cvttps2pi
inc
jge
push
mov
cs
sti
mov
pop
mov
shrb
loop
xor
mov
push
imul
loopne
outsl
lds
addr16
in
sub
xor
mov
ljmp
js
and
daa
cmpsl
stc
adc
stc
jmp
adc
mov
push
pop
std
dec
add
sar
nop
jmp
adc
jnp
sbb
mov
adcl
in
cmp
ss
cld
sub
push
ret
insl
les
stc
mov
call
inc
pop
in
xchg
sub
nop
pop
and
mov
subb
mov
mov
sbb
sbb
push
push
test
inc
and
pop
cld
push
add
cs
ret
push
mov
xchg
out
inc
call
jae
push
xchg
inc
or
aaa
sub
xor
addl
or
int
jno
test
hlt
or
dec
xlat
inc
mov
into
push
ficoms
and
dec
cmp
int3
leave
xchg
mov
fildll
test
mov
fdivl
inc
pop
add
mov
mov
lcall
inc
fs
push
pop
sub
inc
jp
in
mov
scas
add
outsl
cmpsl
xchg
cmpsl
loope
mov
mov
cs
mov
js
dec
mov
shr
lds
or
add
jns
pop
sbb
pop
stos
xlat
sbb
pusha
cmp
in
or
sbb
sbb
and
push
dec
nop
mov
lods
adc
add
das
movsl
test
sbb
mov
add
outsl
and
push
loop
mov
mov
push
out
lret
inc
sbb
into
cmp
shl
mov
push
loope
sti
lods
jmp
push
xor
push
repnz
je
mov
and
lcall
cmc
mov
ficompl
add
mov
mov
pop
xor
inc
callw
lcall
int
add
lret
and
push
pop
ja
testl
bound
xor
rcr
inc
or
movsl
clc
cmp
scas
test
test
add
push
push
sub
push
dec
lret
inc
jae
mov
add
dec
mov
gs
ret
lods
ljmp
ret
ret
mov
jnp
sub
lcall
mov
or
pop
imul
and
aas
popf
sub
push
test
divl
ljmp
pop
test
aad
pop
push
cmp
fs
imul
nop
adc
sbb
mov
inc
add
push
jns
fmul
dec
mov
adc
loopne
xchg
mov
push
xchg
mov
sti
sbb
daa
call
sub
cli
adc
lret
loope
add
or
dec
roll
pop
repnz
or
cmp
jmp
imul
js
cmc
or
adc
jge
mov
test
add
inc
lds
lock
adc
cld
ss
decl
or
mov
push
pusha
xor
sbb
mov
ret
or
in
or
sahf
cs
ja
clc
pop
xor
adc
outsl
xor
ret
fs
leave
test
loop
mov
inc
xor
pop
outsl
add
out
inc
pop
or
mov
movsl
xor
mov
xchg
rol
push
lret
scas
jnp
sub
xor
xchg
js
addr16
das
sar
ljmp
shrb
cmpsb
inc
mov
ds
shrb
shr
shl
fwait
inc
adc
repnz
inc
push
insb
xor
jne,pn
push
out
sarl
and
add
sub
add
repz
ret
cs
mov
and
push
cmp
loop
push
out
add
mov
mov
mov
pop
loope
outsl
push
cmp
adc
mov
fistpl
jp
and
dec
sbb
cmc
sub
xchg
testl
add
jge
mov
push
adc
ja
xchg
pop
pushl
je
push
popf
lock
jmp
out
inc
fisubs
fldcw
arpl
loope
test
cmpsb
cmc
xchg
decl
add
sub
cmp
cs
xor
jp
mov
stos
sub
pop
lahf
shl
es
dec
je
pop
nop
jg
sarl
loope
mov
mov
push
dec
mov
shl
dec
xchg
fisubl
or
mov
popa
push
inc
sar
arpl
rorb
or
push
lret
in
setl
mov
ljmp
mov
test
mov
js
imul
jo
imul
loope
scas
xor
xchg
clc
shl
call
or
in
push
addl
bnd
dec
mov
jmp
adc
cmp
and
inc
rorb
stos
mov
dec
mov
jnp
jp
test
call
pop
out
sti
pop
movsb
dec
lds
mov
and
sub
or
sbb
xchg
scas
aas
les
mov
xor
jbe
daa
and
sarl
add
add
lds
testb
push
adc
inc
push
cmpl
in
and
jp
sub
push
neg
add
xor
and
sub
jecxz
xchg
gs
fidivrs
movsl
mov
ljmp
cmc
sbb
stos
rcll
push
outsl
lahf
jbe
jns
mov
push
nop
scas
push
pop
cmp
pop
mov
jns
inc
push
jmp
pop
push
lds
out
jne
jo
in
imul
imul
dec
std
out
in
mov
jmp
sbb
lahf
loope
inc
mov
les
scas
jne
mov
outsb
jno
adc
xchg
jne
lock
jle
cmp
ret
adc
enter
xchg
inc
dec
xlat
push
jno
inc
or
mov
lret
mov
loope
clc
mov
mov
xchg
push
mov
rorl
or
das
sbb
subb
dec
adc
cmpsl
fisttps
jo
in
cmpsl
xchg
lret
ret
dec
popa
add
jbe
lea
pop
pop
push
xorl
push
push
mov
jle
push
test
int
xor
xchg
pop
push
mov
or
notb
sub
adc
das
dec
dec
mov
das
aam
add
arpl
xor
xor
inc
xchg
jmp
repnz
stc
mov
out
stos
fists
adc
add
jns
pop
mov
js
jne
adc
add
push
xor
mov
js
mov
hlt
pop
icebp
out
cmp
fnstcw
test
stos
jb
mov
mov
aas
gs
sbb
jno
mov
out
cmp
stos
stos
xlat
jnp
fs
push
inc
pop
xor
mov
mov
popf
and
push
lret
push
into
insl
xor
push
jmp
into
push
pushl
repnz
cld
mov
cs
outsl
aas
arpl
add
ret
push
aad
out
and
pop
notl
adc
or
loope
ficompl
xor
mov
stos
mov
sub
cmp
and
xchg
insl
add
stos
or
sbb
loopne
xchg
jge
and
shrb
bound
mov
xchg
decl
dec
ljmp
call
jmp
aam
xor
loop
push
pop
in
mov
dec
xchg
mov
fcos
fadd
add
popf
inc
xlat
jmp
mov
mov
outsl
mov
imul
lret
dec
jge
add
pop
pop
add
imul
and
cld
std
adc
mov
les
xchg
das
sbb
sti
rolb
mov
jmp
xor
andb
sbb
jle
ret
cmp
int3
jnp
mov
mul
dec
lcall
scas
jae
int
mov
sub
xchg
adc
divb
xor
testb
fistpl
shrl
pop
pop
mov
push
pop
xchg
mov
scas
xchg
loope
cmp
daa
dec
shrl
dec
popa
jnp
outsl
pop
gs
pop
sbb
fists
scas
sbb
xor
pop
jns
jmp
push
xor
test
mov
push
and
pop
cmp
test
lods
push
or
das
mov
lret
and
sbb
cli
leave
mov
mov
cmc
sub
xchg
pop
mov
xchg
pop
jne
push
cmp
sahf
xchg
addb
cmc
movsb
mov
mov
sbb
pop
cmp
mov
repnz
adc
mov
mov
and
mov
sbbb
scas
pop
andl
jnp
ds
inc
fidivrl
lods
sar
inc
mov
jmp
jl
xchg
jge
std
fisttpll
fldcw
insb
adc
idivb
inc
mov
push
jmp
sub
out
mov
cwtl
ja
mov
pop
pop
push
or
std
or
sub
ret
or
movsl
std
xchg
inc
in
inc
loope
mov
push
jmp
add
outsl
in
mov
ja
shlb
shrl
cltd
pushf
dec
xchg
lret
aaa
lea
jae
push
dec
mov
xchg
rcll
in
or
xor
mov
adc
jns
test
aas
fs
popa
out
scas
lods
notb
jp
xchg
pop
pop
add
cmpsl
jne
cmpb
dec
push
pop
enter
call
and
call
mov
scas
in
jp
pop
xor
and
cmp
jns
lcall
lds
inc
jg,pt
xor
ret
fbld
aas
int3
test
gs
cmp
add
pop
sbb
sahf
fiaddl
cli
bound
adc
xor
push
loopne
mov
stos
pushf
mov
adc
mov
ret
out
mov
adc
dec
iret
imul
mov
divb
or
mov
out
mov
xor
js
cmp
sub
testl
stos
ret
mov
ljmp
push
addr16
mov
outsl
or
sbb
imul
lods
pushf
mov
mov
jnp
les
xor
int
movsl
cmp
or
push
jg
jle
imul
sbbb
std
cmp
imul
cwtl
lret
add
sahf
jns
jb
rcrb
imul
adc
dec
cmp
mov
dec
dec
cld
jg
outsl
and
push
hlt
mov
jmp
mov
sbb
fstl
aad
dec
ret
xor
je
adc
pop
addb
jb
lret
movsb
loopne
int3
int
rcrl
dec
outsl
and
ret
push
push
push
mov
push
icebp
and
pop
outsb
lea
pop
push
pop
stos
mov
pop
xchg
les
xchg
es
or
test
mov
and
pop
dec
movsl
mov
in
addr16
xchg
sub
mov
mov
aaa
in
cs
or
test
rcll
cwtl
mov
jno
repz
lock
jns
call
stc
mov
push
dec
fldcw
inc
sub
nop
push
mov
test
movsl
or
sub
popa
ja
into
cmp
jg
push
mov
xchg
inc
pop
movsl
in
mov
into
and
scas
shrb
jle
out
filds
cmp
sub
adc
inc
add
pop
adc
aam
cmp
les
out
out
rcl
add
jecxz
or
test
sub
stos
sbb
pop
aas
jae
rcrl
pop
rorb
cmp
enter
aam
dec
stc
lds
mov
add
loopne
sub
int
mov
mov
cmc
xchg
inc
push
leave
adc
outsb
mov
clc
mov
aam
nop
fisubrs
aad
je
or
or
jns
add
stos
xchg
inc
fadd
jne
jnp
jne
pop
inc
xchg
cs
shrl
xchg
cmp
shll
repz
shl
fsts
lds
int
jae
sub
ss
pop
jge
ficomps
inc
jg
pop
pop
pop
fisttpl
roll
mov
ret
insl
xor
push
sub
mov
in
negb
fnstcw
cmp
addr16
shlb
adc
ret
pop
sahf
xor
jnp
sbb
leave
dec
add
xchg
pop
test
xchg
aas
pop
jle
cld
jge
into
jnp
lret
jae
mov
cmp
xchg
sbb
jne
and
jne
xchg
cli
and
add
and
fwait
into
push
fstps
xor
ja
stos
movsb
jl
pop
xchg
inc
imul
jp
xchg
movsb
push
push
push
mov
lret
lock
mov
in
stos
pusha
cmp
fldl
ss
shlb
aad
pop
push
jl
add
sbb
enter
mov
mov
xor
ret
jge
sbb
out
lea
insb
xor
and
xor
ficompl
push
shll
jg
std
jl
pop
popf
sub
test
sub
fbld
xchg
pop
rclb
sbb
enter
call
cmp
dec
in
xchg
popa
and
loopne
data16
adc
rol
adc
lods
in
mov
ror
mov
fcoms
dec
je
adc
nop
mov
xor
cmpsl
and
mov
rorb
dec
cmp
pop
and
pop
addr16
inc
xchg
mov
or
mov
repnz
cmpsl
rcrl
cs
or
mov
push
push
in
push
ror
pop
pop
addr16
fs
es
lret
dec
adc
mov
or
dec
js
jp
sub
add
insb
out
js
rcl
je
dec
cmp
push
and
pop
ret
lods
and
sbb
add
pop
or
add
mov
ljmp
pinsrw
stos
xor
adc
repnz
in
addr16
mov
inc
clc
jns
je
insb
cld
ss
pushf
inc
jmp
in
cmpsb
jnp
sub
jp
xlat
and
mov
je,pn
mov
call
xchg
xlat
aas
pushf
gs
add
pop
push
push
jle
xor
imul
gs
xchg
mov
mov
sub
das
sub
xchg
int
add
mov
popf
ljmp
add
pop
cmp
inc
test
in
imulb
mov
es
stos
aas
mov
mull
push
xchg
out
cs
push
flds
shr
daa
pop
into
sub
push
inc
hlt
sub
mov
aam
out
popa
cltd
cmp
cmp
int3
scas
imul
mov
ljmp
clc
fstpt
dec
aad
push
dec
js
adc
inc
std
dec
push
inc
cmpsl
ss
es
or
mov
lods
enter
push
or
outsl
das
mov
int3
test
inc
pop
test
scas
lret
sbb
xor
aas
mov
and
pop
lea
leave
xor
outsl
data16
push
inc
fwait
mov
test
xchg
or
sbb
aam
imul
ja
mov
cmp
imul
xlat
rorb
sub
mov
mov
mov
sbb
icebp
leave
dec
mov
adc
sar
stos
xor
fwait
cwtl
pushf
mov
and
leave
jecxz
mov
adc
into
lea
loope
imul
push
sahf
mov
imul
pop
pop
jg
into
lods
imull
jno
cmpsb
lret
jo
and
shr
inc
xchg
dec
jmp
xchg
out
jg
lret
inc
jge
xor
fisubrs
pop
cmp
adc
fnsave
fs
outsl
hlt
jmp
xchg
imul
stos
lret
fidivl
jb
xchg
adc
ja
or
mov
ds
adc
push
repz
fs
inc
ret
mov
in
mov
xchg
movsl
push
pop
lds
add
movsb
fnstsw
imul
sub
mul
xor
jno
ret
xlat
lahf
fstl
std
dec
or
sbb
jbe
mov
sub
loopne
std
push
xor
adc
jecxz
and
sahf
jl
es
ds
jmp
mov
sbb
rcrl
push
jbe
dec
add
fs
test
out
add
dec
faddl
gs
enter
pop
adc
mov
inc
mov
decl
xor
inc
clc
imul
jle
outsb
in
add
inc
mov
int3
aam
outsb
daa
cli
loop
and
dec
xchg
pop
mov
popa
xchg
fnsave
aas
addr16
mov
push
xchg
mov
mov
lcall
push
or
sahf
add
add
pop
mov
aam
sub
mov
mov
in
adc
push
pushf
mov
lret
loopne
mov
pop
lods
popa
popa
add
cltd
lcall
xor
inc
sub
mov
mov
cmp
ljmp
cmovge
mov
cs
sbb
xchg
lods
pop
adc
ds
push
sub
out
int3
icebp
dec
iret
and
mov
rcrl
lahf
push
pusha
xor
cmc
scas
or
jmp
jge
dec
or
iret
cmpsb
mov
test
sbb
adc
or
stos
or
push
scas
fimuls
sbb
mov
imul
aaa
cmpsl
xor
xchg
repnz
in
adc
cmpsb
loop
pop
test
adc
mov
push
loope
aam
lock
in
ja
push
inc
and
sub
fcomps
xor
sbb
adc
test
or
mov
xor
xlat
inc
or
insl
clc
pop
shrl
pop
mov
push
inc
cmp
std
push
mov
pop
adc
and
rorb
add
loopne
sbb
stc
fnstenv
outsl
inc
pop
mov
fs
push
mov
dec
push
inc
xchg
and
xor
or
jmp
mull
fistl
jo
aam
jmp
xor
bound
mov
pushf
mov
xor
jecxz
add
xchg
call
aaa
add
cmpsl
dec
dec
gs
stc
mov
xor
outsb
enter
pushf
lods
out
xor
push
adc
mov
inc
mov
cmp
sub
test
scas
std
adc
or
xor
push
pop
test
pop
inc
lods
in
jmp
mov
outsl
dec
pop
xor
jae
sahf
aas
push
cld
inc
popf
mov
xchg
dec
push
adc
or
shlb
shrb
xorb
mov
rorl
leave
jb
mov
lods
jle
cmp
scas
imul
push
sub
sub
shlb
imul
sbbl
and
sbb
enter
add
and
lock
pop
test
loopne
sbb
cltd
out
movsl
adc
xchg
push
int3
pop
mov
ja
sub
test
xchg
inc
pop
sbb
pop
ds
sarl
mov
fbstp
push
cs
push
std
jmp
or
scas
shll
shlb
inc
movsb
dec
cmp
push
push
pop
mov
out
inc
mov
cwtl
dec
mov
imul
stos
hlt
fiaddl
int3
mov
lret
sub
rcll
or
mov
jo,pt
jge
xor
movsb
imul
repnz
sub
mov
inc
add
inc
fisubs
or
cld
mov
outsb
call
lods
inc
lock
push
xor
shrl
outsl
test
dec
fwait
mov
les
xchg
fwait
xchg
faddp
lds
jmp
insl
mov
mov
inc
push
lret
lods
aam
adc
dec
nop
jle
pop
xchg
push
xchg
dec
or
pushf
dec
mov
mov
jp
fs
adc
mov
inc
movsb
adc
mov
inc
inc
lea
stc
push
sbb
add
cmc
pop
inc
adc
andb
enter
fidivl
fsub
sub
lret
ja
xchg
or
std
rcrb
mov
stos
cmp
push
or
repnz
inc
lods
movsb
mov
or
pop
or
lcall
pushf
mov
add
or
rcrl
add
add
xchg
inc
sub
roll
jae
mov
jbe
dec
rcl
pop
mov
leave
dec
mov
xchg
shrl
mov
mov
inc
inc
stos
out
pop
inc
push
sti
clc
xlat
cwtl
int3
cmp
sub
mov
outsl
and
inc
outsl
adc
daa
cld
enter
push
sbb
lret
or
mov
pop
or
pop
jns
push
mov
push
pop
leave
je
arpl
les
push
pop
mov
pop
je
mov
movsl
rolb
jns
inc
mov
lds
pop
and
mov
dec
add
xlat
pushf
pop
pop
decl
xchg
adc
xchg
xlat
inc
push
jg
int
adc
nop
xlat
ds
xlat
test
sbb
mov
add
out
idivb
add
push
jg
js
sbb
push
or
push
dec
mov
ja
adcb
imul
xchg
rcrb
sbb
xchg
stc
aaa
or
lea
into
ss
gs
out
cmp
push
cmpsb
pop
mov
dec
hlt
test
imul
inc
addr16
inc
orl
testl
sbbl
xchg
pop
cmpsb
push
add
push
pop
lahf
out
test
fiaddl
test
dec
nop
mov
mov
cltd
jmp
adc
push
xchg
push
insl
int
xchg
adc
dec
push
stc
dec
or
jbe
shrl
pop
in
sti
push
mov
push
movsb
int3
xor
movsb
xorl
xchg
cmp
stc
inc
test
fwait
mov
cld
aad
jbe
jns
xchg
shr
mov
int3
movsb
dec
in
repz
or
scas
jp
enter
mov
and
mov
jne
pop
pop
clc
fadd
sbb
sti
mov
fsts
xchg
cmp
pop
leave
lds
jp
mov
lahf
test
adc
stos
les
pop
inc
test
outsl
mov
dec
loope
push
testl
int3
fsubrp
cmp
stc
addb
or
push
dec
jl
test
inc
add
mov
fdivl
dec
pushf
ds
sahf
and
sbb
mov
mov
out
xchg
call
mov
xchg
and
and
mov
inc
cltd
jmp
sbb
test
sub
in
fmul
sub
push
jg
les
sub
sbb
mov
lds
imul
or
mov
pop
sub
stos
insb
push
lods
daa
sbb
daa
out
sub
cli
mov
test
imull
sbb
outsb
cmp
leave
mov
ret
and
adc
mov
dec
dec
aam
mov
jmp
aam
sub
ja
insl
cmp
fmulp
jmp
jecxz
push
ret
fucomip
xchg
or
sbb
movsb
popa
fdecstp
inc
pop
mov
cmpb
jmp
fdivr
inc
in
adc
out
std
and
lret
icebp
cli
xchg
fldt
or
nop
xlat
add
or
jns
dec
xchg
cmc
xor
in
mov
aas
cmp
ret
add
inc
addr16
mov
test
negl
not
pop
test
xchg
jnp
adc
dec
stc
mov
sbb
in
outsb
or
mov
adc
xor
push
rorb
outsb
or
add
aas
mov
xchg
lods
flds
ljmp
cmp
in
pop
mov
aas
mov
sti
jne
lret
mov
clc
push
leave
popl
pushf
cmp
cmp
push
daa
ficompl
popf
pop
sub
push
cwtl
push
inc
dec
xchg
into
xor
loop
or
scas
and
dec
sub
aam
shrl
cmp
aaa
jge
sub
push
fildl
cmp
or
inc
push
stos
mov
sub
fildl
sub
in
dec
sub
push
dec
jl
mov
std
jno
xchg
dec
and
dec
xchg
sbb
mov
testl
mov
loopne
push
inc
rcll
mov
jle
shlb
std
aad
xchg
test
jp
pop
lahf
xor
das
sbb
push
mov
nop
call
ficompl
jle
or
aam
xchg
movsl
sub
cmp
aaa
mov
or
xchg
mov
push
ljmp
fsubp
mov
adc
and
xchg
divl
ret
rclb
pop
sbb
jecxz
pop
jecxz
push
daa
iret
and
ret
mov
jno
jnp
fidivrl
mov
loop
jmp
popf
xor
push
dec
mov
push
push
in
pop
dec
aaa
push
mov
in
cmp
subb
loop
test
sbb
faddl
dec
sbb
and
enter
xor
fadd
and
pop
cmp
jg
sbb
inc
xchg
mov
arpl
pop
inc
ljmp
mov
mov
mov
xlat
jge
sub
sti
fstl
pop
mov
dec
popf
xor
jne
jnp
outsl
das
mov
lahf
push
xor
fists
mov
sahf
push
xor
repnz
nop
push
inc
lcall
xchg
cmpsb
ja
enter
out
push
ja
testl
popf
pushf
frstpm(287
dec
fcoms
push
sbb
ja
call
or
pusha
loope
clc
mov
cmp
add
sub
xor
xor
mov
stos
jge
cmpb
or
insl
xchg
xchg
mov
aad
pop
lock
add
pop
sar
rorl
mov
lret
add
adc
dec
fdivs
mov
and
inc
mov
jge
into
push
or
es
jle
jle
ret
test
mov
scas
adc
in
inc
pop
sti
dec
mov
and
sahf
lea
xchg
jno
cli
bnd
in
dec
fwait
nop
jecxz
xor
shrb
lods
adc
call
dec
dec
testl
stos
add
cs
rorl
lods
incl
add
dec
mov
out
adc
lret
in
mov
test
out
pushf
in
cli
aam
jecxz
sbb
ss
in
and
mov
je
inc
enter
loop
test
fcoml
loop
inc
sub
cmp
andb
in
xor
mov
daa
lock
adc
push
fistpl
pushf
fmuls
add
push
pop
scas
ret
data16
andl
lcall
jmp
mov
pushf
into
mov
leave
mov
sbb
pusha
es
dec
addl
repz
sbb
lea
or
mov
jg
jae
insl
pop
or
stc
imull
add
push
xchg
mov
scas
lods
mov
xlat
aad
mov
sbbb
xchg
jne
push
push
rorl
pushf
xor
divb
fmuls
mov
rcl
orl
addr16
pop
nop
sub
iret
jg
call
cmpb
sbb
cmp
xchg
out
xor
dec
imul
xor
das
pop
or
repz
jl
outsl
lret
add
test
sti
mov
rorl
inc
mov
xlat
or
bnd
fmulp
in
inc
sbb
or
add
push
dec
xor
dec
pop
mov
int3
push
stos
mov
lock
aas
leave
hlt
cmpsl
jnp
loope
iret
cli
in
inc
and
cs
inc
sub
jno
dec
push
xchg
adc
and
fwait
lock
jae
push
cwtl
xchg
in
gs
cmp
sahf
lea
jecxz
pop
ret
cmovge
js
pop
push
push
mov
push
in
mov
push
popa
adc
mov
pop
movsb
fbstp
and
mov
lret
mulb
cmp
in
mov
cltd
das
scas
arpl
mov
jno
mov
std
push
aaa
push
test
inc
das
outsb
xor
xchg
jg
test
out
add
jne
xchg
xchg
cmp
jecxz
insb
fs
inc
add
pop
push
lahf
cmp
add
test
or
hlt
mov
push
int3
pop
inc
in
jae
inc
fs
and
imul
sub
mov
popa
mov
pop
in
mov
xchg
int3
imul
fs
sbb
movb
pop
sti
call
mov
je
inc
aaa
int3
dec
lods
jne
sbb
or
movsb
pop
cltd
push
addl
push
xchg
jo
cmpsl
xor
jae
jmp
xor
out
jb
test
push
jl
int3
sub
and
icebp
jb
iret
jbe
add
add
fs
and
jnp
inc
and
cmp
jp
mov
jnp
fwait
mov
jae
outsl
sbb
in
mov
icebp
push
enter
sub
cmp
pop
vdivsd
dec
pop
or
and
ret
in
or
adc
in
and
outsl
inc
mov
or
daa
out
insb
pop
cwtl
cmp
out
xchg
mov
in
add
mov
test
mov
sbbl
cmp
shll
jg
pop
xorb
nop
fisttps
sbb
dec
sub
imul
cmpsb
or
pop
outsl
adc
mov
dec
adc
dec
push
mov
call
fs
xchg
out
sbb
rorl
dec
cmp
andb
scas
add
insl
leave
adc
and
repnz
enter
jno
push
mov
das
sub
into
push
lahf
cltd
xchg
cmpl
mov
shrb
loop
push
or
sub
das
xor
mov
push
pop
inc
std
ret
test
jge
sbb
adc
test
cmp
push
ljmp
dec
testb
sub
pop
xchg
mov
mov
jp
jne
in
cmpsl
adc
mov
mov
mov
pop
and
mov
and
cmp
insl
cmp
sti
push
imul
jge
sub
jne
repz
sub
mov
lock
loope
push
push
ljmp
dec
mov
ja
or
lret
mov
andb
push
pop
hlt
iret
mov
aaa
imul
and
jecxz
mov
leave
xchg
fsubr
mov
mov
inc
adc
sbb
inc
sahf
mov
out
inc
inc
sbb
andl
sub
in
mov
mov
inc
aad
add
in
fadds
ljmp
xchg
cli
xchg
mov
inc
das
cmp
mov
lods
jg
cltd
testb
cmc
arpl
push
and
pushl
imul
call
mov
data16
sbb
pop
sahf
std
sub
sub
add
pushf
ret
rcrl
ds
push
jge
dec
jns
xor
and
jne
and
outsb
mov
pushf
roll
mov
inc
mov
inc
in
cs
sarl
sub
push
jmp
adc
sub
and
fbstp
addr16
cli
loope
test
pop
adc
std
ret
subl
sbb
inc
xor
inc
std
mov
clc
call
loope
aas
xchg
imul
add
add
or
imul
push
or
add
cmpsl
push
mov
insl
repz
fisttpl
and
aaa
addr16
push
fstpt
mov
repz
or
push
dec
je
leave
into
mov
sbb
int3
in
dec
sub
clc
aaa
idivb
test
jo
inc
fnsave
adc
ds
sbb
nop
pop
repnz
lds
pop
dec
shlb
cmp
mov
das
cmpsb
pop
ret
ss
dec
cltd
sbb
sub
dec
mov
repz
out
jmp
out
std
dec
sbb
loopne
cld
jg
dec
pop
xchg
clc
loope
cmpsl
loop
std
mov
inc
lds
mov
ljmp
insb
nop
jae
incl
xchg
testb
dec
sti
cmp
jns
push
jo
loope
xor
pop
pop
mov
dec
and
jae
js
and
cwtl
mov
fucomip
cmp
jg
arpl
mov
xor
push
in
insl
mov
jmp
jmp
inc
je
sbb
mov
xchg
xor
push
ljmp
fnsave
loop
lods
jle
loope
call
in
test
and
addr16
les
and
call
mov
mov
cltd
aas
nop
mov
ljmp
lret
repnz
xor
cld
jae
sar
cmp
lods
xor
cmp
fsubrl
jns
hlt
lcall
sub
sub
or
fidivrl
mov
jge
push
mov
movsl
xor
in
lods
adc
ret
xchg
push
push
add
push
ret
pusha
aas
inc
mov
pop
or
adc
push
cmp
out
add
in
sbb
and
push
jl
cmp
push
js
dec
jecxz
mov
cmpsb
and
xorl
jno
sbb
mov
fiadds
call
icebp
mov
hlt
cmp
adc
lahf
addr16
mov
aaa
es
cld
insl
movsb
jae
mov
fmull
sbb
jns
arpl
filds
jp
jno
push
iret
leave
insb
adc
mov
sbb
dec
xchg
nop
les
lea
inc
and
mov
rolb
test
jmp
scas
dec
mov
pop
cmp
stos
push
out
stos
imul
scas
adc
mov
xchg
stos
bound
movsb
sub
push
sti
push
insl
dec
push
popa
adc
scas
test
sub
push
popa
jae
sub
outsl
mov
xlat
jle
pop
add
push
sbb
sub
inc
ficomps
out
or
icebp
sub
lcall
lea
adc
call
pop
xor
cwtl
fwait
in
mov
adc
mov
pop
cltd
fdivrl
push
dec
je
dec
xchg
sbb
jnp
adc
cmpsb
sbb
lock
add
jne
cmc
mov
inc
ret
dec
mov
pusha
insl
movsb
pushf
xchg
data16
test
mov
dec
sbb
mov
lahf
sbb
addl
inc
mov
push
xlat
fstl
inc
and
xchg
pushf
outsb
notb
mov
lds
test
imul
jmp
in
push
insb
or
xchg
xchg
inc
mov
lret
add
push
mov
popa
pop
call
mov
arpl
test
iret
inc
mov
jge
dec
add
cmp
cmp
fstpt
sbb
mov
mov
xchg
shrl
ja
movsb
cmp
sbb
push
mov
mov
andb
adcl
js,pt
in
imul
std
lcall
mov
mov
mov
or
leave
xchg
cmp
jo
icebp
orl
mov
dec
int
loope
divb
mov
sbb
test
adc
jle
cmp
mov
or
std
adcl
add
adc
jae
pop
addl
xor
push
push
jbe
and
aam
fildll
ret
rep
hlt
add
jmp
scas
mov
aad
push
loope
mov
out
sub
jno
shll
sbb
out
pop
sbb
out
pushw
add
je
clc
pop
push
jae
mov
lock
orb
divl
jmp
pusha
or
jmp
inc
in
scas
fbstp
or
sbb
xchg
addr16
cmpsl
lahf
ffreep
scas
inc
pop
jmp
gs
imul
fmull
inc
lock
cmp
or
and
mov
pop
mov
ret
faddl
adc
das
push
pop
inc
jae
out
test
add
sti
dec
cmpsl
outsb
arpl
xchg
and
push
mov
enter
adc
loope
faddl
daa
into
mov
cmp
adc
mov
test
add
xor
test
xchg
xchg
jmp
jbe
dec
cwtl
push
add
pusha
jle
push
adc
das
arpl
add
sar
stos
and
and
shlb
jl
popf
mov
test
icebp
gs
subb
sub
cmp
lods
inc
dec
sbb
jb
imul
test
mov
inc
sbb
dec
adc
js
adc
ljmp
push
movsb
jp
pop
mov
dec
add
jnp
mov
sub
scas
jmp
and
cld
test
sbb
add
mov
jmp
cmp
and
sub
loopne
add
adc
enter
lret
xor
repnz
test
add
sbb
inc
ss
test
xchg
xor
loopne
rep
cmp
xor
test
xchg
add
or
in
ss
adc
jecxz
xchg
and
mov
or
pop
pop
mov
sbb
in
andb
lcall
int
paddd
int
imul
daa
cmp
add
lcall
inc
lcall
push
imul
push
mov
sub
sti
xlat
pop
jbe
inc
dec
cmc
lret
adc
in
clc
divb
in
cmp
jl
daa
gs
shlb
pop
add
sbb
outsl
inc
shrl
jle
fstl
sbb
dec
rcl
jle
sbb
lret
imul
xor
push
mov
add
jne
sbbl
mov
mov
les
xlat
add
pop
data16
mov
xchg
or
divl
push
or
mov
add
adc
xorl
push
arpl
loopne
cmp
sbb
aas
mov
and
add
fwait
and
xchg
cmpsl
cwtl
mov
ret
or
stc
mov
cmp
push
push
xchg
jp
pop
push
cs
insb
test
gs
out
les
fiadds
mov
mov
pop
xchg
jle
imul
push
aas
dec
lcall
fbld
andl
adc
xchg
rcrl
ret
push
or
es
int
cld
xchg
js
push
mov
push
aam
shr
and
push
scas
mov
pop
incl
sbb
push
and
fcomps
shl
js
pop
or
aaa
ds
shlb
loope
fdivs
pop
out
mov
adc
cld
nop
mov
jbe
aad
dec
or
fdivp
dec
cs
shl
sub
mov
sub
or
loopne
dec
xchg
sbb
xor
cli
push
push
dec
mov
add
add
jp
push
dec
mov
repz
loopne
xchg
push
mov
mov
dec
pop
in
xorl
ljmp
add
leave
or
std
mov
jnp
cwtl
aam
cwtl
lahf
dec
fisubl
mov
pop
push
in
aam
push
add
or
push
and
mov
sub
fs
loopne
sbb
int
sub
xchg
mov
jns
cmp
push
movsb
dec
daa
cmc
div
ds
cli
and
mov
xchg
pop
and
ljmp
out
int3
push
adc
scas
pop
std
push
mov
pushf
cwtl
stos
fstpl
incb
subb
push
rcr
or
les
dec
mov
cwtl
cltd
jb
inc
dec
pop
mov
loopne
bound
xor
sbb
repz
dec
push
xchg
mov
gs
cs
addb
pusha
push
fdivrs
sbb
in
nop
movl
clc
and
inc
mov
rep
cmpsl
xor
cmc
mov
xchg
pause
sub
je
mov
push
dec
movsl
into
cmpl
push
scas
cmp
jecxz
sti
arpl
aas
cmc
loopne
cmc
mov
inc
and
xor
dec
mov
xchg
mov
sbb
popa
lahf
loope
test
lahf
mov
push
mov
adcb
mov
xor
mov
push
jmp
or
jo
insb
repnz
mov
and
es
sub
orb
fiaddl
add
mov
sub
or
cmp
bound
cmp
inc
jbe
fadd
jmp
and
dec
xchg
fs
cmc
test
imul
in
xor
push
inc
mov
add
int3
push
xor
inc
mov
push
xchg
push
mov
pop
adc
icebp
mov
adc
push
movsl
dec
mov
aam
mov
loop
stos
cmpsb
lret
test
xor
pop
push
movsb
mov
or
inc
je
push
fidivl
xchg
pusha
jnp,pt
jle
mov
in
mov
mov
cmc
add
shll
cmp
dec
fistl
aaa
cmp
in
jp
mov
mov
scas
test
lret
out
push
idivl
xlat
xlat
inc
push
pop
shrl
xchg
pop
xchg
jne
arpl
imul
aam
bound
or
push
jl
mov
movsb
les
push
jbe
pop
filds
add
ljmp
repz
cwtl
daa
daa
lods
xchg
insb
adcl
push
ret
cli
inc
outsb
shrl
or
bound
xor
sbb
mov
pop
xchg
aad
mov
scas
mov
in
ret
lret
movsb
pushf
enter
push
mov
pop
flds
and
sbb
cmp
clc
popf
arpl
ds
dec
add
addr16
cs
cmpsb
and
add
pop
and
dec
jmp
movsl
mov
push
scas
jae
xchg
stos
pop
fimull
fidivrl
mov
popa
mov
dec
mov
lahf
add
mov
popa
jbe
aad
pop
loopne
jne
jno
pusha
adc
aaa
sub
popf
vsqrtpd
pushf
insb
decl
sub
dec
or
xchg
and
pop
nop
test
cwtl
mov
xchg
mov
bound
cmpsb
mov
jg
sub
bound
adc
jge
ljmp
imul
pop
lods
inc
insl
lret
ret
popa
push
outsb
push
pop
add
cmp
dec
in
ret
in
xor
in
jbe
cmp
les
adc
outsl
test
cmp
mov
mov
add
xchg
push
pop
pop
movsb
mov
or
aam
inc
mov
pop
mov
in
mov
enter
jle
inc
imul
add
lcall
or
mov
add
aas
and
outsb
or
lods
repz
xchg
insb
add
inc
icebp
xlat
pop
iret
sub
dec
dec
and
sbb
lds
push
jo
add
and
cld
inc
ja
sbb
cwtl
shll
lahf
pop
nop
mov
shr
sbb
adc
sbb
inc
jne
pop
pop
enter
loop
and
enter
inc
sahf
pop
inc
adc
les
notl
pop
shlb
scas
in
and
and
icebp
lds
inc
sbb
not
pop
xchg
ret
arpl
icebp
xor
fisttpll
insb
icebp
xchg
mov
or
mov
or
out
push
lods
ljmp
or
push
mov
cli
pop
jb
and
lds
jb
movsl
test
cli
push
fistl
dec
or
repz
adc
cmpsl
fists
lea
add
mov
mov
jg
push
les
bound
and
cmp
sbb
je
push
cmp
fsubr
std
movb
adc
inc
jmp
mov
inc
or
cmc
lock
mov
loopne
pop
rorb
add
push
daa
mov
jne
icebp
mov
add
sub
and
inc
mov
cmpsl
in
mov
xchg
test
roll
icebp
fstps
adcb
repz
ljmp
outsl
xlat
fwait
les
pop
sarb
push
shl
add
add
ja
cmc
and
data16
and
out
push
imul
in
pop
ljmp
cltd
decb
popf
push
test
dec
xchg
adc
add
mov
xor
mov
cwtl
fiaddl
mov
mov
mov
out
stos
xchg
pushf
stos
push
test
add
mov
jg
subb
dec
fsubs
out
addr16
fmul
sub
cmp
fimull
pushf
pop
aad
mov
sbb
inc
dec
xchg
cmp
inc
notl
jbe
cmpsb
fstps
dec
mov
test
addr16
add
adc
aaa
add
ja
push
mov
es
dec
imulb
push
inc
inc
movsl
addr16
bound
scas
jnp
mov
xchg
out
arpl
icebp
addr16
aad
adc
cmpsb
int3
dec
daa
sbb
xor
or
jmp
scas
cs
pop
and
movsl
mov
enter
loopne
xor
addb
sub
stc
sbb
je
arpl
int
mov
jl
rcrb
add
push
jle
div
stc
cmp
adc
repz
push
test
adc
or
lahf
repnz
movsb
movsb
cmp
rorl
filds
iret
gs
sti
test
xchg
out
insl
dec
jns
pop
fs
lods
inc
fnsaves
sbb
push
fdivs
sbb
mov
cmc
pop
movaps
push
mulb
mov
mov
jns
cli
orw
push
push
rcrb
and
push
push
nop
jb
in
mov
and
xor
jns
sbb
sahf
xchg
mov
pop
enter
xor
repnz
popa
sahf
int
cmpsb
insb
jae
and
inc
jecxz
mov
cmp
es
cwtl
sarl
dec
or
push
xor
movsl
out
adc
sub
cmp
add
and
hlt
out
out
or
outsl
ret
pushf
mov
das
test
xchg
dec
mov
in
mov
jl
xchg
sbb
xor
push
push
in
and
mov
leave
andb
add
loop
adc
and
cs
test
cmp
dec
and
pop
or
fsubl
mov
js
out
add
les
adc
pop
gs
or
inc
aaa
in
jnp
cmp
sar
pushf
jmp
inc
popa
mov
and
inc
sub
jl
xor
add
jne
in
nop
in
fstpt
xor
rolb
ret
flds
or
lea
xchg
xchg
cmpsl
ret
mov
popl
adc
repnz
jl
xorb
mov
push
sbb
mov
shlb
test
inc
cli
aam
fwait
in
pop
add
lahf
xchg
fcompl
dec
lret
add
nop
daa
inc
add
sarl
lds
ss
fwait
les
add
bound
in
out
and
popf
js
aas
imulb
fwait
pop
repz
sbb
pop
cmp
dec
pop
mov
pop
xor
mov
push
jg
iret
cltd
jecxz
loopne
clc
ss
mov
push
jle
insl
dec
mov
les
stc
cmpsl
gs
popa
pop
leave
lods
rolb
mov
xchg
jg
fbld
and
xor
jl
rcll
cli
push
mov
pop
in
inc
sub
nop
sahf
ja
cmp
xor
inc
fstps
sub
pop
inc
push
out
mov
lods
add
push
flds
mov
push
mov
sub
sub
fcmove
mov
add
popf
lods
in
icebp
icebp
out
gs
xchg
and
fcoml
add
mov
jo
jle
cltd
fs
mov
sbb
lahf
or
xor
push
dec
andl
xor
call
fisubrs
setns
cmp
dec
imul
idivb
pusha
push
mov
test
push
lahf
and
outsb
notb
sbb
pop
mov
xchg
cmpb
sbb
das
sub
test
call
pop
xchg
push
or
popf
jp
push
pop
cmp
sbb
adc
mov
fcom
jnp
adc
mov
xchg
idivb
notb
icebp
inc
loope
dec
das
push
or
nop
pop
inc
push
add
bound
mov
cmpsl
test
shl
pop
ljmp
adc
sbb
add
mov
lcall
out
into
and
lret
int
sti
sub
scas
dec
sarb
out
and
testl
fmul
xorl
pop
cs
fwait
and
popf
jmp
or
jle
and
mov
stos
dec
xchg
xor
add
test
leave
dec
mulb
das
out
in
hlt
sti
cmpsl
cltd
in
data16
xor
jne
adc
jl
in
jo
sub
push
out
lods
cmpsl
insl
imull
pop
sbb
jl
rcll
cmp
fistpl
aam
mov
mov
push
lods
std
ja
mov
and
xor
cmp
cs
cmp
das
add
push
ret
lcall
out
imul
xchg
in
sbb
pop
dec
pop
fildll
daa
negb
fsts
adc
mov
mov
test
fwait
ret
lods
ja
xchg
jns
popa
int3
pop
pusha
adc
push
imul
cmpsl
fisttps
and
das
cli
lahf
in
aas
cmp
mov
xchg
ljmp
outsl
add
fisttpll
imul
push
jbe
sub
xor
add
cmp
pop
and
sub
je
lahf
les
das
inc
push
rcr
decl
es
push
std
insb
loopne
sub
xor
mov
sub
or
cmp
jecxz
pop
das
mov
mov
xchg
inc
jnp
jle
xor
loopne
sahf
fs
addl
xchg
mov
loopne
xor
mov
mov
mov
insb
stos
xchg
mov
loop
push
sbb
jecxz
out
mov
movsb
xor
sub
xor
jo
inc
lods
add
sbb
mov
xchg
push
ficomps
sbbl
lods
jne
pop
pusha
jg
lahf
push
or
mov
inc
xor
mov
xchg
subl
jg
xchg
iret
in
ds
xchg
jecxz
dec
insl
mov
mov
imulb
aas
scas
pop
cmpsb
and
lss
rolb
fisubl
adc
push
or
xor
jo
fsts
inc
xchg
pushl
mov
xchg
flds
mov
adc
add
andl
insb
dec
jae
movsb
mov
xor
shrb
repz
out
jl
andl
scas
mov
cwtl
das
lea
jns
bound
adc
sub
out
dec
fcomps
ljmp
test
cmp
adc
sub
jle
rcll
push
xchg
mov
mov
lahf
rcl
mov
fisttpll
jle
pop
pop
sbb
aam
bound
jge
cmp
adc
daa
ds
mov
xor
lret
outsl
mov
or
push
inc
xor
clc
lahf
mov
scas
clc
mov
outsl
call
xor
mov
push
mov
mov
dec
sub
xor
jle
sub
mov
jg
mov
push
ret
dec
sbb
notb
mov
dec
test
xchg
inc
pop
cmp
add
js
push
orl
sub
dec
push
jge
xor
stc
xchg
pop
mov
and
in
in
push
fbstp
cmp
cmp
lea
stc
mov
sti
cmp
mov
push
adc
aaa
pop
outsl
subb
lds
scas
call
adc
repnz
subb
mov
enter
lcall
imul
fnstenv
xor
and
dec
sub
mov
mov
jnp
or
xor
out
mov
adc
aas
xchg
sbb
jb
push
push
xor
cmp
mov
pop
mov
xor
and
jae
fnstcw
fildll
lea
addl
jns
xchg
pop
cs
dec
add
inc
testb
adc
loopne
insb
mov
cld
push
movsl
mov
mov
jle
in
add
les
fnstsw
mov
dec
pusha
les
out
loopne
idiv
or
xchg
popa
js
sub
repz
ljmp
mov
inc
dec
inc
jnp
jo
ds
jb
mov
and
adc
movsb
sbbb
jmp
pop
cli
and
iret
sti
int
adc
inc
xor
rclb
sbb
mov
pop
jnp
pop
inc
das
push
mov
and
jnp
faddl
aad
jno
xchg
enter
jle
popf
dec
mov
inc
jmp
push
leave
inc
icebp
repz
sbb
data16
fistpll
dec
cwtl
icebp
pop
out
pop
jae
icebp
inc
xchg
jnp
jecxz
or
out
adc
or
push
hlt
add
sub
mov
mov
jae
xor
int3
push
xlat
push
rsqrtps
arpl
nop
jmp
mov
mov
jno
push
mov
push
out
sub
pop
push
cli
push
faddl
insb
nop
jbe
ljmp
sub
xor
call
push
inc
inc
mov
jno
inc
push
ror
push
inc
es
dec
pop
sbb
dec
std
adc
ficoml
mov
adc
andl
ret
test
fwait
sbb
sbb
cmp
mov
out
fnstsw
cmp
sti
lods
lea
pop
mov
jo
xchg
sti
dec
mov
inc
cmc
in
adc
add
lahf
scas
outsl
and
xchg
jmp
adcb
lahf
cmp
push
mov
movsl
xchg
push
movsl
pop
mov
cmpsb
test
mov
and
mov
int
sbb
les
fnsave
ljmp
push
mov
sbb
shll
in
shlb
adc
jg
push
arpl
sub
lods
inc
dec
mov
cmpsl
fistps
das
pop
add
xorl
sbb
shrl
imul
test
loopne
rcll
aad
xchg
aad
lcall
cmpsl
movsl
lods
ljmp
xor
inc
mov
bound
gs
pop
pop
push
pop
lock
icebp
outsl
hlt
fsubp
movsl
dec
adc
call
out
push
pop
lret
jl
xchg
test
cmp
mov
dec
das
sub
aas
add
idivl
xor
hlt
in
dec
out
cmp
push
push
stc
nop
mov
negl
out
inc
out
inc
call
sub
xchg
enter
xlat
push
push
fdivrl
xchg
pusha
push
sub
jecxz
inc
sbb
sbb
pop
sub
xor
mov
push
mov
mov
push
jmp
jg
dec
fwait
mov
xor
in
push
andl
or
add
cwtl
dec
jecxz
cmp
pop
inc
mov
sub
xor
imul
shrl
push
fs
outsb
pop
jno
sbb
or
jno
jne
daa
outsl
mov
lcall
je
imul
dec
lret
leave
outsl
pop
hlt
mov
cmp
mov
int
inc
sbb
fisubrs
cmc
mull
mov
in
mov
dec
adc
int
xorl
pop
sub
ljmp
xchg
out
popf
xchg
jp
jg
jo
mov
mov
cltd
push
ss
mov
mov
scas
add
add
jge
or
outsb
dec
jns
jnp
and
jmp
mov
ret
mov
icebp
outsl
mov
or
add
scas
mov
dec
rcl
add
pusha
outsb
ret
sbb
popa
fidivs
cmc
aam
test
inc
or
loope
jo
icebp
stos
fwait
add
les
ljmp
push
mov
or
or
adc
repz
aas
sbb
xchg
xchg
or
ficoms
mov
aaa
mov
pop
jo
out
fiadds
push
mov
jmp
cs
and
test
les
add
xchg
loope
fs
hlt
pusha
movsl
lcall
test
mov
inc
cmpsl
or
mov
add
mov
sub
dec
je
lods
roll
enter
push
lahf
adcl
jae
mov
pop
shlb
jmp
lea
xchg
scas
lods
fwait
jg
dec
cli
and
mov
mov
adc
stos
add
cs
outsb
aas
jbe
sub
div
xor
es
xchg
mov
fcomip
mov
pop
nop
loop
dec
mov
hlt
add
mov
fsubrl
inc
fnstenv
loop
add
xchg
jno
xchg
xchg
jle
jl
cltd
ficompl
es
lods
push
push
int
pop
mov
js
unpckhps
jp
pop
mov
push
in
pop
rcrb
fs
xlat
mov
inc
dec
and
jge
jb
out
or
movsl
es
jmp
xchg
push
mov
insl
arpl
adc
imull
das
shll
push
jge
test
decb
out
stos
call
stc
sub
cmp
lret
pop
dec
fs
sub
xchg
push
rorl
dec
xor
nop
lcall
xor
ss
jmp
fsubrs
xchg
les
push
lds
adc
iret
int
sbb
repz
jl
loop
mov
je
andl
jne,pn
and
lea
shlb
lock
mov
mov
cltd
add
imul
loop
mov
cmc
push
ja
enter
out
xor
out
into
cmp
pop
pop
sbb
scas
jne
dec
xchg
mov
cmp
rdpmc
in
inc
and
add
jmp
mov
adc
dec
pop
cmp
pop
dec
xchg
cli
pop
add
and
aaa
ja
cltd
inc
lea
ret
mov
xchg
mov
sbb
cmp
inc
in
cs
or
inc
scas
xchg
lea
stos
mov
cmp
lds
mov
jmp
dec
jecxz
push
aas
mov
sub
inc
fmul
je
dec
lds
xchg
shlb
test
sbb
nop
andnps
fadd
and
idivl
mov
leave
add
pop
mov
jnp
mov
jmp
das
inc
jmp
mov
sbb
jns
into
inc
insl
iret
dec
ret
mov
clc
or
clc
or
stc
lcall
adc
jmp
cmpb
dec
ds
mov
in
mov
gs
cli
ja
lds
cmp
sarb
sbb
and
jmp
jbe
cmp
xor
jl
sub
cli
cltd
adc
jb
xchg
jb
mov
inc
sub
cmpb
and
add
rorb
movsb
adc
sbb
mov
jg
fsubrs
xchg
shll
rolb
dec
xor
lods
stc
test
rcll
jae
mov
lsl
loopne
clc
push
aam
sbbb
push
aam
call
inc
jne
fcmovu
enter
adc
jl
imul
cmc
movsl
frstor
out
arpl
std
leave
cmp
pop
int
inc
mov
mov
mov
out
jecxz
push
cld
stos
mov
or
dec
adcl
inc
cmp
cmp
cmpsb
inc
cmp
xchg
or
pusha
ljmp
dec
mov
mov
loopne
data16
repnz
pop
or
mov
shlb
and
push
out
adcb
sarb
cmp
mov
xchg
pop
in
andb
enter
mov
or
sub
sbb
es
mov
mov
mov
cs
mov
clc
je
sub
sub
cs
out
ret
das
xchg
jne
cwtl
sahf
scas
leave
std
and
daa
lods
push
xor
xchg
push
jne
sbb
call
cwtl
or
enter
xor
adcl
mov
push
mov
stc
xor
imul
fisubs
test
arpl
idivl
std
in
jmp
stos
fwait
pusha
adc
arpl
push
leave
cs
push
mov
lds
lahf
cmp
lea
sub
leave
in
je
mov
hlt
sub
mov
pop
and
ror
jae
dec
xor
gs
jns
ret
ljmp
mov
add
add
mov
ja
and
add
adc
xor
ljmp
sarl
orb
xchg
sbb
push
pop
push
cltd
addb
sbb
xchg
push
xor
xor
test
loop
mov
negb
mov
fsubs
int
and
or
or
aam
fcmovnu
hlt
mov
nop
sbb
lcall
inc
cmp
loop
cmp
ret
sbbl
pop
jg
cld
aad
push
gs
push
jl
outsb
sub
lahf
dec
pusha
sub
out
and
pop
mov
sub
add
andl
xor
idivl
pop
repz
inc
ss
out
and
mov
dec
fistl
je
shll
sub
xchg
das
lcall
inc
ret
push
and
lahf
or
mov
ret
stc
ja
and
mov
mov
sub
mov
jne
mov
in
pop
sahf
test
pop
mov
lret
inc
push
daa
movsl
lock
sbb
xor
sbb
mov
mov
es
or
shrl
lock
gs
push
out
ret
or
sub
mov
jp
add
xlat
push
bound
cwtl
jns
cmp
xchg
inc
rcrb
and
cs
icebp
jmp
out
cld
iret
jl
sahf
sub
dec
sbb
push
mov
sbb
int3
cmpsb
pop
rolb
jl
dec
int3
sbb
test
push
cmp
add
push
add
imul
xlat
cmp
mov
mov
and
icebp
xchg
cmpl
xchg
push
inc
into
aas
imul
jmp
in
sub
movsl
mov
rcrl
push
pop
dec
ss
iret
fidivs
clc
imul
aam
shl
and
mov
inc
dec
pop
push
cs
mov
clc
xchg
fistpll
mov
or
jmp
mov
and
lahf
mov
sbb
add
je
popf
xchg
aas
pop
aad
roll
jbe
pusha
test
aam
sbbl
sbb
sub
push
xlat
icebp
inc
xor
mov
inc
cs
fidivl
add
sub
xchg
inc
loop
call
lret
push
loop
sahf
aaa
xchg
pop
inc
fadds
add
mov
rcr
cltd
insb
lret
adc
loopne
jg
andl
pusha
mov
push
std
mov
adc
inc
add
in
inc
push
lcall
and
pushf
mov
aaa
push
test
fidivrs
cmc
pop
pushf
nop
mov
mov
ret
cmp
ja
push
mov
sub
call
fs
ret
bound
mov
sub
jbe
popf
inc
jle
and
xchg
push
int3
ja
sti
loopne
ss
xor
or
push
cmp
fldt
lahf
dec
js
mov
mov
int3
pop
pop
icebp
and
fstl
lahf
and
fstl
jnp
push
sub
xchg
sbb
lcall
lahf
adc
je
imul
cmpsl
shlb
inc
scas
ljmp
aas
call
rcrl
in
and
mov
sub
push
aaa
ret
pusha
ja
mov
stos
or
inc
imul
loopne
jns
call
mov
cwtl
cmpsb
adc
in
jp
xchg
mov
or
mov
push
sub
push
jmp
mov
jle
sbb
cmp
lcall
mov
mulb
cmpl
les
jle
pop
pop
add
cmpsb
aam
rcrl
idivl
lods
pushl
cmc
push
test
out
or
xlat
jns
out
or
loop
ret
shrb
cmp
inc
daa
add
sbb
xorl
notl
lcall
mov
jmp
add
out
cmp
mov
mov
add
adc
cmp
shr
dec
pop
mov
mov
pop
repnz
jb
mov
mov
inc
xchg
call
fsubs
and
mov
mov
adc
mov
imull
cs
mov
xor
jae
cmc
std
mov
aas
repnz
hlt
out
es
and
rorb
movsl
nop
or
dec
jb
push
jbe
loop
aad
imul
xchg
sub
lcall
scas
cld
xchg
or
pop
fdivrl
adc
stc
add
dec
lods
outsl
push
push
and
and
mov
icebp
es
fs
lea
sub
out
adc
divb
xchg
cmp
sbb
scas
sub
or
sbb
push
mov
dec
iret
das
add
call
cli
in
mov
jle
popf
cmpxchg
pop
nop
repnz
adcb
push
arpl
push
jl
add
mov
mov
lret
cmpb
mov
or
push
dec
adc
cmp
mov
in
jns
outsb
push
xchg
cld
adc
mov
mov
cmp
or
and
lods
mov
aaa
jp
lret
ljmp
or
movsb
imul
stos
mov
sub
or
and
or
imul
xor
xor
adc
pop
dec
or
scas
in
adc
jp
js
movsb
cmpsl
cmovg
int
or
mov
mov
out
test
in
pop
push
and
mov
cld
adcb
repz
jo
mov
xchg
lea
adc
lret
fbstp
or
pop
fnsave
cmp
fsts
jl
jnp
xor
rcll
cmpsb
xchg
stos
push
lahf
call
jmp
lods
sub
push
insl
mov
sub
pop
lock
aam
mov
fnstenv
push
sbb
sub
sub
jo
inc
adc
test
jno
mull
push
push
mov
sbb
leave
inc
call
ret
jle
lahf
jmp
and
mov
and
sbbl
push
xor
inc
ljmp
ljmp
pop
outsl
xor
mov
sbb
sbb
mov
or
push
and
test
push
fimuls
js
and
es
lcall
or
pop
out
mov
sub
sbb
inc
lret
adc
fnstsw
stc
ret
ss
lret
ret
es
push
loop
imul
rclb
xor
jne
jecxz
xchg
loopne
std
inc
jge
rclb
and
push
loope
and
sbb
lcall
add
rcrb
mov
scas
sbb
push
mov
mov
inc
shlb
sti
int
out
mov
test
popf
xchg
inc
in
push
or
gs
mov
or
or
or
rcr
aam
dec
das
jno
jns
lods
inc
dec
mov
out
sub
pop
mov
add
mov
pop
dec
xlat
jne
shrl
pop
enter
je
imul
sub
mov
std
call
fsubrs
mov
cmc
or
movsb
xchg
addr16
or
aaa
cmp
clc
notb
out
pop
adc
shl
add
ffreep
arpl
xor
xor
loop
lret
call
add
mov
gs
lods
ret
test
fdivl
mov
leave
fcoms
in
sar
cmp
mov
cs
ret
push
add
iret
sub
imul
je
dec
sbb
jne
subb
sbb
pop
cmpl
mov
loope
mov
mov
push
lods
adc
cmp
shll
push
sub
adc
sbb
xlat
out
lret
les
ljmp
mov
sbb
xchg
sbb
scas
xor
rol
lods
adc
mov
dec
add
and
sub
push
cs
pop
sub
cwtl
mov
sbb
xlat
dec
jne
and
mov
cwtl
push
mov
pop
aas
in
scas
or
inc
les
xor
cltd
lea
ja
sbb
sub
int
mov
xor
cltd
mov
add
adc
or
adc
cmp
cli
xchg
adc
rol
xor
arpl
lods
pop
test
call
std
xor
clc
cmp
xchg
cmpsl
rol
pop
ret
addr16
outsl
mov
xchg
into
jne
rcl
call
sbb
mov
scas
cmc
or
shll
or
fwait
xor
lcall
push
mov
roll
xchg
xchg
lret
jl
pop
push
es
int3
jmp
cmp
mov
inc
xchg
mov
sbb
pop
mov
push
xor
ljmp
mov
adcl
cmp
dec
mov
test
or
int
sbb
mov
mov
popa
xchg
pusha
adc
adc
mov
iret
inc
and
adc
inc
jmp
mov
and
or
imul
sbbb
sub
sub
ljmp
cmpsb
mov
mov
shll
in
adc
mov
sahf
xor
jg
nop
pop
or
inc
xor
cltd
stos
xchg
and
leave
pop
xchg
rclb
adc
and
mov
inc
inc
xchg
pop
and
in
mov
mov
das
lock
sti
repnz
push
loopnew
sbb
xchg
push
int
mov
push
lret
mov
lock
sbb
ret
inc
data16
lea
mov
sbb
push
dec
adc
popf
add
mov
dec
jle
sahf
push
cmp
enter
es
cli
xchg
mov
nop
sbb
call
add
inc
xchg
cwtl
sbb
lock
orb
bound
push
xchg
sahf
stc
ss
mov
int
data16
ret
sub
cmpsl
das
xchg
dec
mov
xchg
daa
add
cmp
iret
aad
nopl
in
jo
inc
mov
arpl
nop
xor
rol
push
shlb
xchg
pop
sbb
jmp
outsl
or
cmp
bound
dec
sbb
ds
add
das
inc
sbb
adc
cwtl
pushf
dec
int3
pusha
out
lock
add
fadds
push
push
lods
lock
sbb
mov
mov
ret
aam
adcl
sub
dec
fstpt
adc
iret
ljmp
adc
testl
lods
cltd
cmp
sub
hlt
or
push
iret
push
xchg
add
popf
sub
jns
jno
mov
cs
bound
sub
push
jo
imul
push
cmp
inc
loop
mov
jp
push
iret
lea
mov
inc
out
xchg
fldln2
lods
pop
xor
xchg
sub
enter
xacquire
mov
xor
sbb
cwtl
and
enter
int
mov
xor
xchg
gs
adc
jno
stos
cmpl
lret
cmc
lret
jg
sahf
mov
jp
loope
fmuls
and
xchg
iret
stos
int
es
add
sbb
and
xchg
add
cmp
mov
leave
leave
out
adc
pop
in
xor
les
push
push
inc
fs
inc
repnz
xchg
and
arpl
pushf
es
jg
lahf
sbb
aad
pop
jne
cmp
sti
bnd
sar
in
pusha
inc
int3
lahf
jne
pop
iret
push
or
testl
movsl
cwtl
push
adc
stos
fnstenv
dec
lcall
mov
lods
xor
dec
xor
test
in
mov
or
mov
and
call
xchg
dec
popf
jb
lahf
mov
ror
cmp
xor
sarb
pop
fdivrl
inc
mov
jbe
push
add
mov
pop
dec
rclb
push
adc
cmpsb
dec
mov
call
test
mov
push
bound
test
test
das
incl
mov
jmp
repz
out
pop
aam
jmp
pop
mov
in
mov
xchg
fiadds
enter
pusha
dec
push
into
fs
jae
xchg
std
insl
pop
mov
push
repnz
div
fbstp
inc
clc
mov
push
pop
out
mov
or
push
in
dec
pop
test
adc
aas
fwait
leave
mov
pop
rcll
gs
das
mov
imul
gs
mov
add
test
xchg
sbb
in
and
lods
int
or
mov
push
cmpsl
pop
jbe
jns
xchg
dec
mov
mov
pop
jg
mov
imul
and
sub
mov
add
xor
inc
lock
in
movsl
push
ret
xchg
call
sahf
scas
rorb
lea
xor
test
push
pop
iret
pop
push
sub
mov
cmp
out
cs
mov
pop
outsl
loope
or
lret
inc
push
add
outsl
outsb
popf
or
sbb
fcoms
xchg
sbb
push
jmp
mov
xchg
jl
cmp
dec
adc
sar
xor
add
pop
dec
mov
xchg
and
ja
dec
pop
sbb
cmc
sarl
loop
mov
and
imul
sub
adc
jae
leave
add
inc
iret
enter
xor
adc
cwtl
mov
mov
mov
jl
fsubs
data16
add
aam
or
cli
mov
mov
push
push
push
mov
pushf
fnstsw
sbb
outsb
cmp
xchg
mov
andb
dec
mov
mov
jb
push
xor
dec
dec
rcll
mov
stos
je
add
sahf
pushf
push
movsl
cmc
scas
stc
stos
icebp
dec
lret
mov
dec
or
or
nop
xor
xchg
shlb
pop
or
add
lcall
mov
push
iret
inc
dec
andl
ljmp
xchg
pop
jle
pop
js
bound
stc
cwtl
push
pop
ljmp
jno
cmp
aam
subl
ss
sub
mov
fbstp
ss
dec
add
in
jmp
dec
sbb
fdiv
sarb
sbb
pop
mov
leave
lock
lret
dec
push
cmpsl
xor
stos
xchg
outsl
jge
push
mov
push
cmp
xchg
in
pop
sbb
sub
jns
cwtl
cli
push
repz
pop
mov
jge
xchg
push
leave
mov
mov
jo
nop
mov
in
and
inc
mov
addl
sti
sti
sti
push
adc
repz
add
sbb
aaa
add
inc
mov
arpl
cmp
adc
pop
mov
rcrb
push
fistps
mov
xchg
dec
cltd
jmp
push
xchg
in
push
jge
push
xor
jns
xor
lret
sbb
dec
lret
lods
dec
fbld
adc
mov
popf
adcl
test
gs
jecxz
mov
mov
das
insl
pushf
jp
cmp
push
fwait
push
push
addr16
das
outsl
jb
je
adc
push
gs
cmp
js
push
sbb
movsb
pusha
or
outsb
aaa
lock
mov
mov
decb
cmovge
test
incb
faddl
adc
ds
adc
sub
mov
sub
mov
fmull
xchg
repnz
xlat
add
add
addb
add
push
mov
fstpt
loop
imul
mov
xchg
nop
mov
cmp
bound
mov
pusha
adcl
mov
push
repnz
les
add
sbb
cwtl
in
test
enter
fists
fadd
cmp
insb
pop
mov
int3
fisttpl
xchg
insl
popf
sub
mov
jns
xchg
vcmpss
fld
out
stc
stos
lcall
push
pushf
hlt
add
je
xchg
jnp
cli
jg
mov
fisubrl
or
fisttpll
div
cmp
push
push
sub
scas
gs
push
cld
push
xchg
mov
movsb
and
xor
lret
xchg
cmp
je
fs
push
pusha
jae
mov
jno,pn
dec
sub
repnz
push
ret
xchg
push
out
sub
dec
ss
xlat
popf
fiaddl
in
jp
rdtsc
loop
pop
xor
mov
enter
xor
jmp
sahf
cmp
cli
jns
mov
jp
movsb
sub
insl
cmp
mov
scas
loopne
sub
sbb
int3
xchg
scas
pop
pop
mov
idivb
popf
repnz
fs
jae
sbb
jb
sub
sub
dec
mov
mov
xchg
ss
int
or
loope
inc
cmp
xchg
pop
mov
ret
fucomp
cmpsb
subl
sti
lds
mov
xchg
cli
inc
dec
out
mov
repz
cs
fs
or
test
sub
sub
scas
sbb
inc
xor
xchg
xchg
scas
popa
cmp
je
xchg
cld
push
xchg
clc
fsts
sbbl
rcrb
dec
leave
rolb
test
je
cltd
movsb
fwait
or
les
mov
clc
xlat
testb
ss
insb
int
mov
cmp
sbb
faddl
lods
mov
cmp
cltd
sarl
lds
jb
mov
xchg
cli
nop
hlt
pop
cli
leave
adc
dec
sarl
inc
dec
jnp
in
pushf
jo
cltd
mov
inc
xor
pushf
xor
and
lods
or
adc
lcall
dec
mov
sbb
sbb
out
scas
xchg
pop
dec
mov
xor
jbe
aad
xlat
or
or
aas
mov
push
outsb
mov
sbb
pusha
iret
ret
mov
pusha
imulb
mov
es
mov
mov
push
jnp
mov
lret
mov
mov
lahf
sub
call
popf
insb
cli
adc
jg
addr16
add
hlt
cmpsb
adc
mov
xorl
xor
pop
out
repnz
jp
movsl
sbb
repnz
mov
cwtl
inc
fstp
inc
popa
pop
pop
add
es
mov
fxam
insb
popa
daa
insb
cwtl
shll
mov
push
lret
or
mov
idivb
fadd
xchg
cmpb
sub
rdtsc
std
and
xor
push
or
mov
icebp
push
orl
and
mov
cmc
cmp
adc
jb
clc
pop
test
and
dec
rcr
stc
cmp
xor
mov
adc
dec
push
pusha
xchg
sbb
je
push
or
xchg
inc
cmp
mov
lahf
inc
and
mov
inc
inc
mov
jbe
ds
push
popa
and
cli
movsl
push
ds
imul
jecxz
lret
lcall
scas
xchg
testb
jp
fistpll
shr
xchg
iret
fcmovbe
adc
ja
cmpl
mov
dec
mov
in
mov
call
mov
aas
arpl
xor
fs
fwait
idivb
mov
add
and
out
pop
popf
mov
mov
fcoml
cmc
aaa
adc
push
mov
loopne
or
push
adc
mov
pop
in
lods
mov
rcrb
or
in
jle
cltd
movsl
in
xchg
dec
aaa
ficoms
into
in
cmp
sub
out
mov
or
cwtl
dec
out
sub
sti
push
int3
insl
ss
dec
scas
mov
aad
outsl
arpl
cmpsw
int
mov
mov
insl
mov
xor
ljmp
fbld
stc
hlt
bound
push
and
sub
inc
or
pop
orb
push
sbb
cmpsl
mov
mov
jle
cmp
mov
push
or
sbb
inc
add
or
jbe
lret
cltd
ret
sti
sbb
sahf
mov
aam
int
fwait
adc
test
push
sub
insb
fwait
dec
clc
mov
pop
mov
mov
mov
adc
test
icebp
adc
mov
sbb
dec
stos
sbb
test
lcall
test
sarb
es
jecxz
or
jo
sub
jns
shll
notb
loope
popf
pop
pop
push
jns
xor
testb
mov
xlat
mov
nop
mov
ret
decl
jne
arpl
sub
into
sub
pushf
dec
pushf
cltd
lea
loopne
sahf
stos
mov
cmpsb
pusha
icebp
and
sbb
cmp
add
xor
pop
cmc
pop
mov
or
aas
jno
pusha
push
fmulp
mov
test
inc
and
test
loopne
cmp
fcompl
xorl
out
push
negb
cwtl
movl
inc
xor
mov
xor
mov
mov
lahf
mov
fldt
cwtl
push
stos
xchg
xor
xor
cwtl
or
outsl
jne
xchg
loopne
sarb
stos
test
add
mov
int3
fnstsw
mov
adc
aam
pop
and
pop
mov
pop
cmp
jbe
sbb
xlat
inc
mov
jl
insl
push
mov
repnz
adc
mov
jno
call
adc
pop
mov
jns
repz
xchg
stos
mov
ficoml
mov
jnp
cmp
mov
sub
inc
dec
cmp
mov
pop
call
das
add
or
push
cs
push
imul
jns
repnz
mov
shll
mov
outsl
lock
cltd
iret
repz
adcl
mov
test
push
or
clc
pop
cs
mov
stos
adc
popf
mov
sub
sarl
sbb
mov
jo
loop
dec
mov
popf
push
shrb
aam
jno
sbb
fbstp
xlat
les
andb
mov
out
test
jle
outsl
fistpl
repnz
xlat
arpl
adc
iret
cli
push
movsl
insl
cmc
inc
scas
xor
pop
shl
js
push
imul
or
mov
add
in
imul
push
sbb
cmp
adc
xchg
in
sub
pop
nop
inc
out
movsl
test
jp
clc
pusha
push
shlb
ret
cmpsb
repnz
out
add
dec
clc
xchg
sub
fcoms
inc
ds
push
dec
jl
fs
push
xchg
stos
test
push
stos
adc
dec
fisubrl
mov
clc
sub
dec
or
cltd
roll
pop
jp
mov
mov
pop
pop
add
inc
or
mov
mov
in
rorb
xor
pushf
or
dec
and
sub
pop
sub
ljmp
jge
add
xlat
mov
inc
ja
imul
push
pop
inc
dec
test
enter
sbb
xor
mov
mov
mov
mov
dec
lods
data16
into
mov
push
lret
stos
mov
fisubl
dec
fidivs
and
ret
test
xchg
rcl
bound
inc
test
rcr
adc
bnd
push
das
cmpsl
jno
xor
mov
mov
xor
inc
or
pop
inc
jno
push
sub
sub
aad
mov
jecxz
pop
lods
inc
loope
adc
outsl
icebp
mov
push
rcl
in
push
lea
adc
dec
xrelease
adc
lods
aas
cmp
addl
cmp
rorb
repz
out
roll
mov
in
data16
stos
xor
lods
sub
cli
pop
in
fcmovnbe
xchg
loope
push
ja
sub
mov
andl
lahf
lods
mov
jb
leave
mov
insb
fildll
mov
aam
gs
call
pop
lahf
mov
popf
jg
leave
push
insl
repz
pop
xchg
jp
pop
push
sub
arpl
xor
mov
pop
sbb
or
xchg
jle
cltd
out
cmp
jl
inc
jecxz
mov
lret
cmp
gs
test
or
jbe
loop
jno
loopne
or
lds
sahf
loope
sub
in
xor
pop
pop
clc
push
in
sub
rcrb
mov
cld
in
jne
bound
dec
lcall
inc
xchg
add
test
cs
sbb
and
ret
and
popf
dec
lods
ja
call
ss
movsb
addr16
pop
fcmovb
jb
cmp
out
mov
data16
enter
lcall
adc
xlat
loop
and
mov
int3
xor
sbb
jp
adc
aaa
and
mov
nop
add
stos
pop
rclb
js
xchg
loopne
mov
int3
js
test
add
mov
or
cmp
orl
test
jg
in
sbb
aas
mov
inc
in
xchg
test
jge
out
mov
sub
xchg
out
stos
enter
rcl
test
jns,pt
xor
lea
sub
movsb
mov
loop
clc
mov
push
ffree
pop
out
and
or
shl
cmpl
pop
sarl
cmp
adc
lret
cld
stc
in
test
mov
fistl
test
aaa
push
imul
out
push
jo
push
incb
xor
mov
mov
xchg
or
pushf
and
sub
ss
shr
pop
movd
repnz
cmp
in
adc
popf
aad
mov
pop
and
stos
pusha
sub
pop
mov
repnz
lahf
scas
jmp
aad
mov
and
jmp
js
mov
jg
in
std
les
mov
loopne
fdivp
aaa
jne
xor
rcll
jmp
mov
mov
stos
outsb
mov
push
pusha
adc
lahf
xchg
outsl
inc
jno
pop
in
dec
ror
out
adc
ret
rcrb
iret
and
loopne
push
sti
sub
addr16
cmp
inc
xchg
push
add
cmpl
push
dec
lods
sbb
ljmp
dec
xchg
cli
sub
testl
mov
push
popf
stos
jge
shl
cmp
jb
cs
mov
shlb
imul
jae
dec
leave
mov
inc
movsb
mov
push
push
nop
adc
pop
into
enter
inc
sbb
inc
pusha
movsl
lods
aam
mov
ret
loop
jl
pop
gs
xchg
ret
xchg
jns
rorl
inc
pop
cltd
daa
xor
sbb
movsl
in
in
fwait
das
inc
repz
mov
dec
icebp
movsl
jecxz
mov
cmp
add
xor
addr16
loop
adc
ss
mov
mov
dec
or
push
add
jge
sub
jo
test
inc
stos
push
add
ja
or
sbb
push
ret
mov
mov
loopne
mov
js
sbb
vshufps
incl
or
lock
adcl
add
pop
cltd
sub
scas
jno
in
sbb
lcall
repz
cmpsl
pop
test
pop
sbb
xchg
enter
push
mov
popf
sub
aam
mov
mov
sub
mov
dec
lea
out
fwait
xor
ret
jecxz
mov
shll
inc
cld
mov
insl
adc
fildll
fs
dec
inc
sub
mov
adc
push
push
loopne
and
and
mov
mov
mov
jno
cmpl
enter
cmp
out
xlat
push
in
add
es
sub
push
mov
mov
popf
sbb
push
je
jne
inc
std
sbb
popa
xchg
sub
icebp
stc
mov
adc
and
leave
cli
jge
mov
mov
clc
sub
aam
xor
add
or
and
fwait
shlb
in
cli
sahf
xchg
shrl
lock
xchg
push
jecxz
popa
insb
out
mov
mov
jns
pushf
lock
xlat
add
jl
cmp
jne
push
ljmp
insl
rorb
lock
dec
rcll
push
pop
and
and
jno
or
sahf
mov
outsb
inc
insl
jp
dec
push
bound
xchg
scas
mov
xchg
jne
pop
mov
push
xlat
or
push
mov
jnp
sti
les
mov
dec
call
adc
mul
or
push
pop
subb
mov
scas
lods
lahf
rcll
dec
pusha
loope
mov
sbb
aam
imul
lret
pop
jnp
and
in
and
cmp
push
loope
idivl
mov
mov
aaa
cli
sbb
add
push
aad
lds
loop
mov
xchg
shrl
push
outsb
pop
mov
mov
xor
dec
outsb
push
imull
sar
xchg
aas
push
pop
mov
fisubrl
jg
cs
push
xor
xchg
and
in
pop
mov
mov
cli
lods
bound
xor
icebp
insb
and
outsl
jp
cmp
lea
and
sub
or
aas
out
pop
pop
xchg
test
add
cwtl
loope
ret
adc
jmp
addb
xor
mov
inc
es
mov
adc
mov
fcmovb
sbb
push
and
jmp
fbstp
adc
jne
jg
andb
inc
movsl
fsubrs
mov
fucomi
outsb
lret
sbb
dec
cs
xchg
aaa
clc
call
pop
hlt
pop
and
push
mov
pop
mov
jns
push
mov
sbb
mov
movsb
sub
cmp
sbb
lcall
push
sbb
in
inc
add
xor
leave
test
fmull
push
or
sbb
mov
pop
hlt
dec
lds
out
rorb
je
lock
or
and
pushf
mov
sbb
sbb
cld
mov
insb
pop
jge
icebp
mov
ja
lods
jbe
push
and
sbb
sbb
xor
or
add
mov
sub
test
cmp
and
add
jge
mov
and
jo
dec
jle
sbb
out
jg
inc
mov
cltd
addr16
icebp
or
mov
xchg
loop
daa
and
into
dec
mov
pop
mov
xchg
add
insb
mov
scas
loope
dec
mov
push
jne
and
mov
clc
dec
xchg
mov
push
les
jne
shl
mov
ds
fmull
cmc
clc
mov
gs
push
test
out
mov
aaa
sbbb
lods
sub
arpl
mov
jne
xchg
dec
mov
clc
xchg
push
dec
mov
push
xchg
sub
jns
xor
sbb
dec
lods
cli
aas
sbb
pop
jg
and
insl
add
inc
xor
jo
xchg
fwait
pop
les
push
testb
fsubrs
xor
or
mov
cmpl
xchg
loopne
xchg
xchg
dec
add
add
adc
arpl
pop
jnp
fs
out
jns
or
mov
cmc
lods
mov
mov
add
nop
arpl
mov
fs
mov
lahf
xor
mov
out
es
in
cli
push
scas
push
aad
xchg
mov
sbb
inc
xchg
outsl
and
mov
jbe
pop
adc
decl
adc
jnp
adcb
mov
sbb
xrelease
jg
icebp
cmp
or
stos
pushf
out
fdivrl
leave
cli
push
dec
arpl
out
das
fiaddl
push
push
pop
ds
ss
jne
icebp
insl
inc
cmp
stc
sub
mov
xor
ja
fwait
cmc
in
lock
inc
jle
or
inc
int3
adc
int
mov
mov
dec
inc
push
pop
gs
outsl
dec
sbb
inc
faddp
ffree
das
jnp
mov
pop
mov
test
lods
push
imul
cli
mov
xchg
pop
std
push
cmpsb
std
push
mov
std
lahf
or
ret
xchg
into
test
popa
push
xorl
daa
or
lahf
mov
clc
and
push
fwait
dec
jmp
add
sub
cmp
cmp
addr16
mov
cmc
sbb
cmpsb
ret
lret
adcl
out
pop
jb
hlt
cmpsl
and
pop
pop
dec
imul
outsl
dec
ja
and
push
inc
out
push
out
pop
sti
sbb
jmp
jae
loope
lret
jl
fimuls
pop
jnp
loopne
or
mov
cmove
rolb
adc
loopne
or
or
rorb
lods
lods
xchg
shlb
add
jnp
xlat
ss
jg
add
dec
pop
stos
inc
movsl
fisubrs
xchg
jbe
and
xor
shrl
pushf
mov
icebp
xchg
and
clc
loope
out
in
dec
jne
pop
push
xor
rolb
lds
mov
sbb
cmp
popa
push
rep
and
inc
adc
outsb
and
cld
add
stos
inc
test
lcall
and
sbb
or
and
xor
scas
push
mov
loope
sbb
out
fsubrp
xlat
inc
add
ljmp
inc
xor
mov
aas
sbb
repnz
inc
mov
mov
imul
mov
testl
pop
insb
lret
arpl
xchg
aaa
lock
int
aaa
mov
jne
js
icebp
sbb
in
cmp
xor
cmp
and
cmp
loop
lcall
nop
jae
push
cmpl
call
adcb
inc
jne
fstps
stos
jns
or
dec
xor
leave
or
les
mov
dec
push
mov
push
mov
push
imul
inc
scas
scas
fistpll
dec
dec
sbb
mov
repz
outsb
xorl
xor
es
sahf
pop
inc
xchg
loop
sbb
add
cmp
lods
jmp
fistl
cs
mov
movsl
iret
xchg
das
fistl
inc
bound
dec
mov
nop
loop
je
push
or
pop
in
and
inc
daa
mov
or
inc
pop
rclb
fmull
fmull
jae
or
jno
lods
ss
mov
imul
loop
enter
sti
push
and
loopne
jo
std
data16
lahf
lods
fdivr
iret
inc
loop
or
mov
push
mov
shll
mov
negb
in
sbb
ss
xor
pop
pop
cmp
ret
popl
pop
push
inc
shlb
xchg
lds
push
xor
loopne
loope
jecxz
pop
stos
aaa
outsb
les
fldt
dec
loop
lret
repnz
mov
or
mov
cld
stos
dec
sub
fcoms
daa
inc
cmp
or
add
adcb
sbbl
push
in
loop
dec
subl
ljmp
mov
dec
das
xor
mov
ret
inc
sti
lock
xor
movsb
mov
and
fadd
aaa
add
inc
lock
int3
xor
lret
stos
jo
jne
subl
cmp
pop
cs
push
mov
loopne
cmpl
ss
mov
aad
aam
push
fisttpll
lock
jl
sbb
or
sbb
pop
inc
mov
lret
addr16
int
cmp
mov
push
fidivl
and
jo
push
jns
inc
leave
sbb
ficompl
cmp
add
lock
inc
rcrb
fwait
out
stc
inc
pushl
pop
xor
ljmp
test
mov
mov
jae
test
daa
ret
add
out
fmuls
outsb
or
shll
xor
int
mov
jbe
stc
add
cmc
push
fdivrs
fisubl
addr16
cld
out
dec
fdivl
shlb
adc
arpl
mov
jmp
jae
push
fimull
out
adc
negb
jo
ret
loopne
sub
sbb
popf
lahf
pusha
adc
pop
loop
insl
pop
mov
sbb
rolb
inc
jo
imul
xchg
into
or
rcr
xor
xchg
dec
out
pop
out
sar
bound
mov
push
and
adc
pop
sbb
mov
xor
cs
dec
loopne
rcr
push
mov
out
in
inc
in
xchg
out
in
outsl
js
adc
sub
mov
mov
pop
jne
push
add
jmp
push
cwtl
sar
std
push
sbb
popa
and
ds
imul
jbe,pn
fcmovne
sbb
cwtl
aad
or
push
ror
fdivrl
sbb
lret
push
and
out
push
lret
mov
gs
xchg
xchg
out
mov
pop
stc
dec
in
into
enter
mov
pop
push
push
movsl
jl
add
ds
out
jno
or
stc
xchg
sub
outsl
push
push
inc
hlt
sahf
lahf
adc
mov
repz
jnp
out
xor
xor
sbb
push
je
xchg
mov
xor
iret
xor
xorb
cli
stc
jg
pop
lods
add
jmp
fsubl
mov
lcall
inc
dec
inc
xchg
xchg
in
cmpl
subb
sub
ss
adc
enter
outsb
clc
test
dec
or
or
sub
dec
jo
jge
xchg
mov
and
pop
mov
js
sbb
leave
ret
addr16
fldz
xchg
in
and
adc
add
push
add
sbb
mov
xlat
test
push
xlat
mov
nop
sub
sub
lds
cli
aad
cmp
mov
mov
xchg
andb
sahf
mov
mov
leave
xchg
clc
sub
dec
sahf
sub
fwait
inc
jge
mov
and
ret
rorl
inc
mov
icebp
cltd
jns
jb
out
sarl
sub
idiv
jb
jo
aam
xchg
cmp
push
mov
lock
dec
ret
loope
fwait
or
xchg
cmp
jb
movsl
xchg
mov
in
xor
and
jecxz
pop
out
push
and
fnsave
lret
jbe
dec
ret
mov
js
inc
xchg
hlt
jp
push
in
enter
cmp
xchg
js
jo
push
mov
inc
in
ret
sbb
or
fdivrl
inc
enter
in
leave
sti
std
jnp
movsb
repnz
leave
inc
mov
xchg
jecxz
shr
repz
call
dec
mov
adc
pop
push
int
cmp
arpl
sbb
or
stc
or
call
or
jo
pop
outsb
dec
xor
dec
inc
dec
dec
mov
push
fisubrl
in
xchg
dec
lahf
push
adc
inc
sbb
rcrl
pop
xlat
and
outsb
fmull
mov
push
filds
loope
repnz
aas
pusha
mov
push
inc
lods
sub
mov
mov
push
dec
jle
xor
popa
sub
cli
out
sahf
cmc
inc
xor
lcall
sub
add
mov
icebp
ss
add
jp
xchg
gs
aas
add
out
movb
stc
mov
mov
cld
sub
pop
mov
xchg
lahf
mov
testb
cltd
popf
jg
pop
sbb
stos
ss
pushf
or
cmp
mov
mov
jno
cmpsl
movsb
cmpsb
out
xor
out
mov
push
inc
push
std
ss
out
jno
push
jbe
loop
push
sbb
sbb
sub
das
loope
test
and
mov
add
gs
out
ret
mov
outsb
xorb
cmp
and
inc
loop
push
insb
jge
jno
inc
add
xor
jl
or
jmp
add
bound
sub
or
scas
push
adc
push
push
fisttpl
and
pop
push
stos
ja
fidivs
leave
push
ret
sti
dec
les
pop
ljmp
lds
out
decb
mov
sub
inc
and
bound
mov
mov
xchg
jns
popa
sti
loopne
pop
frstor
add
cmp
adc
or
jbe
xor
icebp
adc
jg
sub
jge
sbb
xchg
les
sbbb
sbb
aas
imul
cwtl
cs
mov
mov
and
xor
out
mov
cmp
je
dec
dec
adc
aad
test
dec
testb
das
fwait
bound
movsb
mov
pop
push
adc
jl
mov
lods
cmpsb
pop
fs
or
js
inc
xchg
insl
push
pop
and
pop
add
adc
pop
or
sbb
cmp
sti
int3
pop
sub
or
test
or
call
dec
xor
mov
xor
stos
cs
xchg
aaa
jmp
sub
pop
sbb
mov
and
clc
cmpsl
leave
dec
inc
lret
lods
je
les
in
into
inc
add
and
inc
mov
insb
mov
xlat
popl
dec
int3
jecxz
movsb
dec
aas
jae
out
xchg
xchg
scas
xchg
test
repnz
jl
lret
stos
xchg
lret
or
and
push
dec
ljmp
push
iret
jge
mov
les
mov
pop
or
subl
xlat
aas
scas
xchg
cmpsl
mov
mov
popf
mov
xchg
jae
rolb
xor
sahf
jae
add
sti
push
mov
fs
xchg
lret
xor
add
arpl
add
test
adc
shlb
das
dec
sbb
popf
je
dec
enter
mov
sbb
lds
stc
data16
xchg
dec
fs
cmpsl
mov
mov
hlt
jl
ficoms
shl
push
pop
sbb
arpl
jnp
mov
insb
cmp
stos
cmpsb
inc
aaa
in
popa
cmp
enter
nop
pop
stos
fimuls
inc
repz
mov
in
or
clc
lods
sbb
push
loop
out
bound
out
and
filds
pusha
stos
mov
test
int3
clc
pop
jo
data16
cmc
and
adc
mov
mov
and
jns
mov
add
ljmp
enter
mov
flds
push
out
dec
xchg
imul
mov
sbb
adc
rcll
loopne
dec
or
dec
or
add
mov
cwtl
jne
mov
inc
adc
testl
mov
pop
imul
sti
sbb
xchg
jno
jno
mov
lsl
sti
cmc
mov
adc
cmc
sbb
push
jg
popf
add
sbb
mov
int
xchg
mov
jmp
iret
test
testl
mov
lahf
xlat
rcrl
jbe
or
mov
shr
add
mov
aam
or
and
out
cmp
pop
mov
or
sub
fwait
add
mov
xlat
jp
mov
repz
lcall
and
movsl
sti
arpl
lock
test
pop
cmp
xor
mov
mov
push
lahf
aam
in
cmp
mov
sub
adc
mov
mov
cmp
xchg
movsb
movsb
scas
dec
stos
lds
sbbl
xchg
pop
or
xor
test
rcl
fstp
es
sahf
insl
movsb
ds
jp
gs
clc
out
or
out
and
jns
inc
std
add
sbb
xor
pushf
sbb
mov
movsb
push
daa
add
push
stos
sbb
mov
nop
and
sub
aad
dec
cltd
test
hlt
shlb
fcmovb
jmp
inc
lea
sbb
adc
inc
jnp
mov
aaa
fimuls
mov
push
mov
add
inc
es
insb
dec
scas
imul
mov
dec
sti
fldl
stc
or
sub
lea
fisttpl
mov
and
fdivrs
push
das
mov
aas
lods
fistpll
jbe
mov
lret
mov
mov
jae
xchg
fwait
stos
add
inc
add
jo
push
cmc
dec
aad
out
sbb
or
je
sbb
loope
rorb
daa
cmp
jno
xor
xchg
mov
decb
push
jle
dec
dec
jno
pop
std
popa
data16
mov
inc
dec
adc
leave
inc
jns
sbb
in
mov
sti
add
hlt
cmp
xor
xlat
test
addb
push
cmp
pusha
jns
xor
mov
jmp
lods
mov
fsts
cwtl
outsl
insl
aad
sti
fwait
xchg
pushf
mov
stc
int3
insb
mov
push
jnp
daa
incb
mov
fwait
xor
imul
cwtl
xor
in
cmp
aam
dec
pop
lret
push
push
mov
test
bound
dec
cmp
fs
loope
sub
jae
jmp
test
aas
and
push
cld
dec
cmpsl
addl
sub
rcl
dec
loopne
add
lahf
adc
add
mov
mov
fdivr
or
repz
mov
inc
mov
xlat
int
jecxz
cmp
pop
dec
pop
inc
dec
sub
fstpl
inc
add
mov
adc
mov
shll
int
pusha
enter
add
dec
add
lea
fwait
add
lret
test
cmp
add
pop
out
inc
imul
movsl
and
jge
stc
outsb
pop
sarl
aas
es
push
test
pop
mov
mov
jbe
xchg
xchg
fadd
push
adc
sbb
xlat
adc
dec
push
cmpsl
jo
or
mov
aaa
inc
cmc
icebp
fidivl
lock
rorl
gs
xchg
aad
enter
xchg
add
push
pop
pop
sub
inc
repnz
jnp
ret
or
ss
ds
adc
std
cmp
cmp
ljmp
outsb
call
push
lahf
cmp
and
cmp
lret
xchg
js
jge
scas
adc
data16
pop
and
jae
cwtl
mov
ret
sbbl
and
mov
int
or
js
fadds
push
cmp
pop
cmp
cli
lret
or
cld
aaa
jg
push
repnz
loop
sbb
leave
fisubs
in
cmp
ret
aad
sbb
imul
outsl
lods
or
fcoms
lods
cmp
je
cld
push
add
add
sti
and
push
sub
dec
sbbl
inc
fdiv
icebp
jl
push
adc
lret
lret
test
arpl
bts
pop
mov
or
pop
scas
mov
sti
das
fsubrl
popa
mov
jno,pt
push
test
and
nop
scas
mov
testb
lcall
test
sbb
subb
fcomip
push
xor
cmp
xchg
pop
dec
jns
sbb
in
aad
xchg
movsl
pop
fwait
movsl
icebp
mov
cmp
outsl
imulb
mov
inc
push
cmc
mov
es
jg
insl
stos
dec
mov
xchg
fists
rorb
loopne
dec
dec
add
add
ljmp
mov
aas
mov
addr16
push
jg
int
sbb
sbbl
jne
add
out
sub
insl
jae
dec
outsl
mov
dec
gs
xorl
or
mov
clc
cmp
movsb
stos
add
test
dec
mov
movsb
and
sub
add
iret
or
in
adc
xchg
adc
or
mov
btr
mov
sbb
inc
into
fistpl
or
rorl
cli
aam
out
fldl
add
iret
gs
mov
roll
clc
xor
inc
jge
mov
mov
arpl
sub
jns
sub
stos
adc
adc
xchg
pop
and
xchg
jnp
inc
aam
sbb
gs
popa
repnz
out
sub
jge
push
mov
jge
xor
push
clc
call
aas
mov
movsl
mov
pop
icebp
push
jne
sub
add
mov
lds
or
ljmp
movsb
dec
pop
outsl
sahf
enter
popa
dec
orb
shlb
inc
ss
xchg
xchg
into
test
in
push
jne
out
imul
vpcmpeqw
cmp
leave
or
je
mov
jbe
and
lret
push
mov
push
adcb
mov
inc
ret
movsl
jae
pop
pop
scas
add
int
dec
xchg
gs
shr
xchg
dec
pusha
imul
in
xor
mov
ja
scas
dec
add
jmp
aas
add
fldl
imull
cmp
mov
and
divl
leave
xchg
outsl
sub
mov
jb
jg
inc
xor
push
sarb
jnp
lret
mov
ljmp
add
bound
pusha
aam
repnz
xor
mov
and
or
hlt
test
and
scas
mov
and
subl
cld
int
xchg
push
or
in
dec
or
scas
cmp
clc
int
icebp
jae
fnsave
add
adc
fdiv
pop
sub
out
xlat
inc
mov
arpl
adc
push
lock
mov
ja
push
sub
pop
mov
scas
stos
add
or
pop
rcll
jnp
aad
mov
rcll
fwait
cmp
mov
fwait
stos
add
jae
aam
das
xchg
inc
rolb
rolb
pop
mov
or
int3
or
or
jmp
sbb
enter
lods
fsubrs
push
inc
or
jae
fistl
push
pop
loope
mov
push
loope
jg
cltd
lcall
imul
sub
mov
mov
sti
jae
insb
mov
stc
je
or
cs
adc
and
scas
movsl
push
outsb
sub
inc
add
or
sbb
sub
inc
pop
imul
outsb
cmc
outsb
xchg
xchg
and
shlb
lret
aaa
scas
iret
outsb
jmp
push
fistpl
mov
sub
cmp
ret
les
cld
aad
sub
das
or
sbb
dec
push
js
xor
lret
in
jge
and
inc
cli
cmpsb
xlat
or
jb
int
aas
mov
test
dec
lea
bound
sub
lods
int
push
sub
ljmp
inc
mov
add
jbe
adc
or
popa
jle
mov
inc
cld
push
push
xchg
pop
pushf
sub
in
jp
mov
movsb
mov
add
ret
lods
add
sbb
out
xor
movsl
xor
or
jnp
fdivl
dec
int
lret
ret
addr16
clc
imul
xchg
test
cwtl
outsb
xor
xor
mov
and
mov
gs
lahf
lock
loope
flds
rorb
loop
and
mov
xchg
mov
in
jae
sbb
lock
call
mov
pop
popf
mov
ret
or
push
loop
scas
arpl
and
shll
cltd
in
dec
lock
mov
movsl
mov
lods
neg
push
jle
fcomps
xchg
add
lret
jp
inc
scas
pop
sub
fisubrl
lds
mov
outsl
sub
dec
mov
pop
or
push
jae
mov
mov
mov
cmp
jnp
hlt
sahf
jp
mov
pop
ror
xor
stc
mov
cltd
int3
out
sub
xchg
lods
adc
das
into
sbb
hlt
lcall
xchg
jo
test
loope
lret
mov
pop
in
ret
add
push
mov
stc
hlt
push
pop
add
jbe
cld
mov
lods
fldt
imul
aad
iret
sbb
out
ret
jmp
xor
clc
xor
pop
mov
dec
dec
outsl
fisubrl
jecxz
cmp
aad
cmpsb
pop
mov
jl
xchg
fcomip
mov
or
adc
xor
lock
popf
xchg
jle
rol
dec
xor
inc
out
cmp
ljmp
loopne
mov
xor
inc
xor
lds
xchg
int3
jns
mov
inc
sahf
jg
mov
jno
enter
subb
fsubs
jl
mov
jmp
inc
pause
mov
inc
inc
jno,pn
push
pop
sti
adc
lret
gs
jne
insl
xor
push
lds
lea
jne
outsb
or
popa
repnz
out
in
mov
sbb
ja
jge
jne
push
pop
adc
xlat
sbb
xor
jb
pop
popa
add
nop
test
adc
mov
insl
fisttps
sbb
cmpb
sub
es
fwait
or
pushf
ror
mov
loopne
adc
sbb
mov
mov
push
pop
cmpsl
or
lods
fisubl
and
aad
sbb
mov
out
lea
std
bound
pop
inc
nop
out
fmull
jno
add
jae
fdivl
adc
data16
and
clc
lret
xchg
cmc
inc
in
push
pop
or
aad
push
test
sbb
mov
leavew
jmp
xor
dec
addr16
rolb
sub
xor
xchg
xlat
inc
test
aam
in
cmpl
ret
pop
cmp
push
cmp
or
mov
js
or
pop
movsl
fsubrp
dec
jne
xchg
fisttpll
je
pop
in
ret
adc
pop
and
into
lret
and
insl
sub
test
das
push
jge
cli
bound
jmp
add
imul
test
sbb
cmc
pop
push
jle
or
pop
or
jbe
mov
icebp
repnz
mov
bound
mov
mov
cmp
arpl
stos
fs
pushf
cmc
iret
aaa
sub
popa
aad
or
mov
movsl
sub
cltd
inc
cwtl
mov
ljmp
andb
or
jecxz
lock
std
stc
in
xor
mov
sbb
lret
popa
xchg
mov
jno
aas
mov
sub
pop
jno
mov
mov
repnz
stc
xchg
xchg
jb
xor
popf
aaa
push
pushf
test
scas
dec
xchg
jnp
fisubrl
xchg
add
inc
cwtl
dec
xor
int
in
push
fsub
mov
enter
cmc
data16
inc
sarl
sub
das
push
jo
loop
loop
xor
repz
in
push
adc
pop
push
std
out
bound
ja
xchg
jmp
pop
fs
ficoml
cld
rcll
in
js
aas
ja
mov
aam
inc
mov
cmp
leave
jne
pop
pop
mov
jno
rorb
cs
aaa
lret
aas
jbe
and
mov
push
popf
lods
mov
add
movsl
mov
daa
inc
movsl
add
outsb
cltd
jbe
in
mov
pop
cmp
cld
imul
sbb
out
hlt
scas
imul
aaa
fsub
popa
mov
jecxz
sub
sub
jo
sbb
orb
or
rcrl
shrl
imul
shrb
loopne
test
xor
ds
popf
ror
loop
lret
mov
lret
test
jo
adc
call
es
ret
xor
sub
movsl
in
jno
fsubrl
pop
cld
and
cmp
push
ror
or
or
sbb
repnz
les
or
add
rolb
sbb
inc
push
rcr
mov
mov
dec
pushf
mov
push
fbld
or
pop
or
icebp
dec
xchg
hlt
adc
fisubs
sub
in
aaa
pusha
and
das
shll
sbb
xchg
sbb
pop
data16
js
cmp
data16
std
gs
pop
push
imul
out
mov
loope
pop
or
das
mov
or
mov
inc
adc
fisttpll
sarb
push
sub
and
sbb
cmpsl
cmpsl
fisubrs
iret
jns
dec
push
jb
add
mov
mov
inc
lret
in
jno
popa
cmp
lret
pop
or
sub
jb
and
sahf
mov
out
outsl
dec
jmp
adc
jle
call
or
in
sub
addr16
pusha
fisubl
mov
dec
ja
fimuls
jae
and
mov
cmp
cmpsl
inc
in
adc
adc
cli
jns
mov
cmpsb
sub
cmp
cmpsb
out
xchg
push
cmp
jbe
data16
enter
push
mov
push
scas
mov
push
push
sbb
xorb
xor
inc
pop
mov
push
adc
fistpll
xchg
adc
mov
std
pop
xor
jge
shl
stos
or
and
sub
or
call
xchg
roll
test
leave
sbb
pop
fcoms
cmp
jmp
fcom
fiadds
push
mov
inc
xor
mov
mov
and
ret
xchg
inc
or
mov
js
xchg
dec
std
wbinvd
pop
in
mov
repnz
add
lods
mov
pop
jne
xchg
sub
dec
mov
mov
cwtl
jg
lret
push
in
xor
aas
pop
aam
jnp
mov
idiv
fs
cmp
daa
cli
dec
and
xor
ja
sbb
stc
clc
mov
rorb
xlat
out
inc
mov
ucomiss
stos
rolb
cmc
mov
and
push
popf
mov
adcl
fidivrl
jl
loopne
sti
and
stc
loop
add
insl
mov
sub
dec
cltd
dec
sarl
cmpb
les
test
rcrl
add
enter
scas
popf
sbb
ror
repz
or
sub
mov
enter
addr16
sbb
and
stos
xor
mov
faddl
addr16
adc
or
scas
iret
mov
ss
popf
mov
lds
jnp
data16
jecxz
jecxz
insl
sahf
jge
dec
jns
mov
clc
pop
das
adc
jge
mov
js
mov
xchg
popf
cli
lret
mov
pop
pop
mov
jae
pushf
pop
xor
out
scas
in
dec
fcompl
out
adc
iret
out
mov
inc
cmp
imul
sub
sbb
imulb
ljmp
test
mov
xchg
cmp
outsl
jo
push
cmp
inc
add
mov
add
fwait
xchg
add
cmp
popl
mov
sub
cs
push
not
cmc
dec
xlat
lahf
shrb
test
lock
and
les
xchg
xchg
lcall
aaa
lds
lahf
or
push
mov
push
lods
adc
xchg
cmp
sbb
mov
scas
pushl
jno
mov
mov
push
jb
mov
lret
sarb
sahf
inc
xchg
gs
es
imul
cmpsl
pop
sbb
dec
popf
mov
xchg
sub
mov
xor
add
inc
push
jmp
mov
add
stc
int
inc
mov
rcll
call
mov
xchg
je
add
movsl
stos
inc
add
popf
mov
leave
pop
sbb
sbb
in
fs
mov
stos
stos
cltd
je
out
jmp
xor
ret
fmull
cmp
adc
mov
xchg
push
or
add
sub
xlat
nop
dec
cmpsb
mov
pop
gs
lods
in
xchg
inc
jmp
add
xor
push
add
ja
sahf
in
xor
test
jne
mov
dec
push
mov
pop
mov
in
in
int3
mov
insb
mov
test
loop
jl
mov
dec
test
int3
sbb
mov
mov
ljmp
sbb
mov
ds
jno
inc
cmp
jge
ret
pop
jp
sbb
out
es
pushf
xchg
jo
push
cmp
dec
dec
jo
dec
xlat
decl
js
mov
inc
jl
ret
insl
or
out
iret
pushf
mov
inc
dec
fs
rcll
add
sbb
sbb
add
inc
sbb
clc
gs
in
stc
mov
ss
scas
ljmp
pushf
dec
push
mov
shlb
push
xchg
sbb
in
sarb
rclb
rcll
jg
push
sarb
stos
mov
lcall
push
mov
outsb
cmp
cmc
cltd
inc
adc
pop
fldt
int3
mov
out
add
xchg
je
and
outsb
sub
decb
push
and
xor
sbb
mov
fistps
xor
jge
xchg
loope
cmc
mov
mov
xor
xor
xchg
jns
mov
jno
mov
mov
pop
xor
sub
addr16
sbb
push
ja
in
mov
test
mov
adc
fidivrs
sub
sbbl
pop
add
int3
insb
jle
pop
imul
pop
mov
push
les
jle
mov
add
cmc
jns
lods
daa
movsb
cmp
and
out
int3
jae
outsl
add
jg
call
add
or
mull
icebp
mov
sbb
xchg
aas
iret
ret
xchg
lock
cmpsl
ja
pop
ss
repz
adc
arpl
add
jbe
bound
push
pop
je
aam
pop
ds
repnz
lds
push
jle
scas
cmp
mov
andl
popf
repz
rcll
cmc
icebp
inc
sub
cli
shl
mov
mov
mov
cld
test
cltd
pop
add
dec
add
fwait
outsl
push
into
ret
inc
xor
call
shll
movsb
and
loope
in
inc
or
xchg
cmc
loopne
jne
lret
or
cld
mov
fstpl
push
insl
add
loope
or
mov
push
jg
mov
and
mov
push
aaa
jge
adc
mov
addl
je
cli
jne
aas
or
incb
icebp
jp
and
and
dec
movsb
add
cmp
mov
shlb
gs
rorl
push
repnz
sarl
or
or
out
or
xor
mov
pop
ficoml
mov
stos
push
fs
insb
test
pop
xor
mov
aam
push
rcrl
add
nop
out
jne
data16
mov
pop
pushf
aam
sbb
iret
aam
lahf
push
cs
and
xchg
mov
movsl
push
inc
sbb
aas
test
out
or
push
testb
cmp
shl
mov
or
movsb
dec
stc
cmp
std
js
dec
sarb
ret
fstps
mov
cli
mov
sbb
imul
cmp
call
pop
int
roll
inc
add
cli
icebp
mov
push
movb
cmp
popf
sbb
adc
add
xor
push
ds
rclb
into
inc
fldenv
xor
imul
sbb
push
mov
add
jb
fsts
js
mov
mov
sarl
aam
lock
adc
scas
arpl
xor
jg
stc
dec
mov
les
mov
cmpsb
inc
or
sbb
pop
jnp
stos
pusha
mov
dec
cmpl
data16
lds
jo
mov
push
push
adc
fldl
xor
jge
xchg
aad
out
cmp
call
daa
insb
outsb
push
inc
jbe
std
pop
hlt
adc
jle,pn
lret
outsl
adc
aas
mov
not
push
ret
add
stos
fistpl
inc
loopne
sub
stmxcsr
pop
mov
stos
mov
adc
pop
lods
loope
cmp
xchg
jnp
imul
sar
push
cmp
and
pop
mov
lret
mov
or
jle
sub
adc
mov
mov
push
jg
fisubrl
dec
inc
xorb
pop
xor
jnp
push
in
and
mov
icebp
lahf
cmc
in
repz
mov
pop
or
pop
pop
mov
pop
jge
gs
push
xchg
repz
cmpsb
adc
xor
lret
mov
in
imul
inc
sub
rcr
cmp
dec
jo
fs
int3
jl
pop
mov
jo
les
push
sub
popa
aaa
adc
jle
idiv
xchg
mov
lahf
imul
cld
cmp
leave
jle
mov
repnz
mov
dec
out
jns
lahf
pop
fs
cvtdq2ps
lods
mov
ss
adc
pop
push
arpl
xchg
push
pop
xchg
dec
push
lds
xchg
adc
adc
mov
in
or
scas
lcall
mov
push
adc
push
jmp
mov
repz
out
into
sti
pop
dec
add
in
sahf
scas
sbb
adc
inc
cmpsb
addr16
enter
jbe
xchg
sub
xor
popf
lods
jne
pop
inc
enter
shll
cmpsl
insl
imul
jecxz
stc
add
fs
cmp
inc
cld
mov
xchg
mov
cld
dec
lahf
dec
sahf
and
inc
and
mov
test
sbb
cmpsl
fdiv
fdivs
imul
push
push
int3
aad
addr16
fldt
js
out
sub
or
sub
in
cmpsl
adc
pop
data16
xchg
push
int3
stos
addr16
divb
inc
jbe
xor
addl
xchg
das
popa
or
add
mov
mov
or
inc
mov
jbe
cli
cmp
repz
xor
jns
shrb
mov
or
jnp
and
pop
adc
ret
mov
sub
ss
jmp
rclb
push
fwait
stos
xor
xchg
or
cmpsb
pop
jl
xchg
push
mov
stos
in
lret
fcomps
in
and
inc
loopne
add
out
dec
sbb
notl
mov
sti
aam
cmpsb
sub
inc
sub
inc
xchg
pop
cmp
sarl
and
pop
scas
lods
jmp
add
dec
adc
sahf
dec
sub
sub
and
ss
mov
std
mov
aad
cmp
mov
mov
jb
call
movsb
aas
xchg
lcall
sbb
jg
push
shr
imul
pop
insl
jb
add
lret
xor
popa
bound
ret
mov
pop
cmp
xor
jle
mov
or
jp
inc
scas
lcall
inc
arpl
outsb
popf
mov
divb
and
sbbb
and
adc
jecxz
fdivr
std
cli
iret
add
filds
xchg
mov
int3
aaa
aas
dec
mov
or
and
adc
decl
inc
pop
sbb
mov
and
push
dec
cmc
cmp
adc
fldt
xor
sarl
ljmp
sub
iret
jg
dec
outsb
arpl
gs
adc
inc
xchg
in
cmp
lret
xchg
dec
push
or
test
inc
lods
adc
out
not
ss
cmp
mov
mov
movsl
sub
or
jl
jge
add
pop
cmovle
rcll
loopne
int3
dec
sarb
test
in
push
xchg
push
loope
mov
dec
daa
aas
aas
cwtl
cmp
add
enter
fcmovnbe
or
pop
das
fs
scas
sub
testl
mov
xchg
jae
lcall
int
les
rol
push
xor
inc
mov
sub
lods
add
dec
and
inc
mov
or
cmpb
cmp
sbb
jmp
test
lods
cmp
dec
mov
push
testl
xchg
and
fistpl
repnz
leave
scas
sub
sysret
mov
lahf
es
inc
cmpsl
xor
xchg
repz
dec
or
adc
mov
sub
jbe
data16
dec
in
mov
imul
movsb
adc
push
or
and
adc
adc
jle
rorb
imul
add
pop
cmc
jmp
add
and
js
jle
xchg
mov
push
adc
shlb
scas
jl
mov
cmp
jns
cmp
das
iret
xchg
fidivs
andl
mov
lret
jmp
pop
sbb
sarl
and
cld
jae
fdivs
add
dec
xchg
xor
push
rol
xchg
stc
in
pop
and
adc
mov
and
dec
add
daa
mov
push
add
vmwrite
sub
movsb
adc
int3
arpl
lcall
jecxz
stos
out
xchg
jnp
lods
or
mov
aam
dec
cmp
in
inc
xor
pop
mov
out
in
fldcw
pusha
push
xor
test
sub
mov
mov
dec
loopne
lea
loope
add
cmp
dec
adc
test
fdivrs
mov
cmp
cld
ja
adc
jae
push
jle
fisttps
les
lret
out
mov
dec
sarb
sbb
pop
test
dec
pop
jp
jp
inc
jo
mov
inc
rcll
pop
hlt
jo
and
lock
aad
shlb
add
mov
icebp
xchg
push
fmull
gs
cltd
shrb
adc
pop
and
xorb
clc
mov
rorb
decl
fistl
push
xchg
mov
xchg
cltd
sti
push
outsl
popf
inc
lret
fwait
mov
xor
out
pop
mov
stos
ror
out
mov
sbb
mov
xchg
or
cmp
pop
jecxz
gs
ficoms
inc
sti
xchg
ret
rcrb
xchg
cs
repnz
lret
fisttps
cmp
pop
add
aas
mov
mov
pop
pop
loopne
mov
xor
out
mov
pop
push
imul
xchg
mov
jbe
xor
sub
lret
and
jo
test
int3
imul
jb
mov
xor
dec
int3
xchg
lock
sub
xchg
xor
lret
pop
lods
fstl
out
and
lods
jp
mov
rcl
aad
cwtl
xor
pop
out
mov
xchg
movsl
cmpsb
imul
mov
cli
cmpsb
lods
mov
fsubrl
jo
xchg
hlt
or
fs
outsl
js
mov
add
loop
mov
in
pushf
insb
jg
push
enter
or
pop
xchg
mov
fsubrl
sarl
insb
inc
push
mov
popa
addr16
popa
lahf
xchg
mov
pop
les
jl
rolb
mov
ret
dec
pushf
repnz
add
add
ret
lret
ljmp
out
push
jae
xchg
pop
loopne
cmp
jae
lods
push
inc
push
mov
aas
push
and
aaa
les
adc
push
push
mov
mov
mov
imul
mov
xchg
rsqrtps
into
pop
adc
ret
aaa
cmp
push
bound
cmp
mov
mov
xchg
mov
call
and
clc
cs
popa
adc
adc
mov
mov
loop
loopne
jmp
lcall
fcom
jecxz
test
cmp
lods
cli
mov
es
rcrb
jecxz
jno
mov
scas
cmp
sub
rclb
lret
mov
inc
lret
fldt
sbb
and
jmp
andb
mov
push
lea
rep
mov
cltd
xor
subb
or
faddl
cmpsb
cmp
cld
inc
pushl
pop
pop
push
fbstp
out
leave
fadd
sub
sbb
imul
mov
js
add
xchg
mov
repz
push
cld
dec
ret
mov
or
test
inc
sbb
sub
pushf
jb
shlb
dec
in
loop
lcall
push
aam
mov
adc
xlat
shr
pop
cmp
jae
adc
adc
pushf
adc
mov
mov
aad
sub
cmpsl
mov
les
int3
aad
lods
push
xchg
es
subl
cli
or
mov
pop
push
inc
stos
xchg
sbb
add
inc
loope
mov
jp
cmp
mov
ljmp
iret
mul
je
mov
dec
mov
popf
sbb
rcrb
fxch
test
mov
cmp
xor
inc
inc
mov
pavgw
imul
xchg
pop
cmp
leave
push
pusha
jno
aas
je
ja
pusha
mov
and
mov
lahf
dec
adc
dec
fmuls
jb
mov
hlt
add
add
push
imul
leave
mov
mov
out
xlat
or
adc
adc
xchg
gs
les
outsl
xor
jl
cmpsl
jb
push
das
push
testl
jle
addr16
adc
xor
xchg
cmpl
and
inc
and
push
inc
lahf
and
mov
push
out
xchg
cmc
add
inc
std
or
rcll
mov
adc
mov
jge
push
orl
clc
xchg
xor
mov
dec
movsl
insb
ja
add
sub
jp
adc
mov
push
adc
or
test
add
stos
bound
enter
xor
loopne
xor
aaa
lcall
and
cmpsb
bound
iret
jnp
lds
xor
jns
and
sti
jnp
lods
push
adc
jmp
sbb
sub
test
pop
sub
lods
and
sahf
mov
ss
push
mov
mov
shl
dec
cmp
sbb
or
lret
repnz
and
jle
ret
iret
out
hlt
lds
scas
jge
out
insb
cli
pop
mov
int
dec
bound
repnz
fnstsw
mov
addb
adcb
push
jne
in
push
out
test
cld
pop
pop
adc
cld
sub
adc
adc
sbb
or
jge
add
cmpsb
cmpsl
cli
std
mov
dec
loope
cld
xchg
add
xor
add
push
jne
push
jae
sbb
hlt
dec
adc
lds
adc
pop
adc
mov
adc
popf
mov
add
and
push
mov
stc
dec
sbb
hlt
inc
jae
jg
add
add
out
mov
xor
out
aaa
std
dec
outsb
cmp
xchg
push
adc
push
jmp
andb
test
dec
loopne
fimull
dec
adc
scas
add
xchg
faddl
adc
fs
xchg
mov
pop
xchg
push
push
insl
pop
mov
arpl
aam
ja
scas
mov
out
inc
inc
rclb
in
lods
or
cmp
pop
nop
adc
sub
cs
pop
in
lret
cli
mov
int3
inc
rorl
push
push
fyl2xp1
or
das
xor
jg
jo
jle
test
mov
jbe
mov
outsb
es
sub
popa
cmpb
cmpsl
or
push
jmp
jns
ret
loope
insl
xchg
int
in
int3
adc
push
mov
mov
hlt
shlb
inc
cmc
js
mov
or
mov
adc
ret
xchg
xchg
sahf
push
addb
fwait
sti
add
fwait
mov
mov
jbe
push
mov
ss
cli
jae
inc
aam
testb
dec
fs
xor
cmpsl
or
xchg
ficoml
inc
xor
pusha
fcmovne
js
popa
pop
lahf
or
or
shlb
out
andl
jle
pop
or
cltd
sar
sti
enter
mov
lds
sbb
enter
add
or
stos
sbb
pop
cmovne
stc
sub
in
loop
jae
add
inc
add
add
movsl
les
pop
sub
ret
in
mov
fs
enter
ss
pop
sahf
sarl
pushl
das
jmp
and
iret
mov
sub
mov
ja
sub
mov
push
mov
fimuls
cs
sti
push
mov
push
pop
sbb
dec
pop
aam
cmp
or
cmp
xchg
les
sbb
jne
stc
dec
or
jl
sahf
jmp
mov
mov
out
pop
dec
pop
movsl
xchg
mov
out
js
mov
test
aas
push
xchg
aaa
push
fiadds
enter
sub
mov
adc
scas
mov
outsb
dec
in
int3
les
into
mov
mov
mov
pop
jno
repz
adcl
repnz
adc
mov
add
pop
mov
xlat
jl
or
dec
mov
clc
xchg
data16
lcall
ficompl
pop
sahf
sbb
jnp
push
cld
dec
jle
xor
mov
fcmove
cmp
cmc
mov
cmp
adc
add
aas
cmp
pop
aam
dec
test
add
sub
inc
jmp
xchg
push
cmc
pop
cmp
bound
or
and
inc
cmp
mov
mov
cmp
jmp
lret
inc
cmpsl
mov
repnz
fistpll
inc
add
xchg
cltd
ss
in
cmp
stc
pop
jns
rcrl
push
stos
cmp
or
scas
lods
lret
jno
jae
push
mov
ljmp
rorl
enter
scas
cwtl
cmc
dec
cld
jmp
xchg
push
stos
into
pop
mov
in
fisttps
cmp
repnz
dec
cltd
lods
lret
pop
dec
ds
clc
or
arpl
aam
push
repnz
shl
mov
sahf
push
fstpt
xchg
lahf
lret
dec
cmp
mov
cltd
pop
xlat
clts
jmp
inc
xchg
pushf
mov
jo
shr
stos
inc
in
xor
andb
adc
jecxz
iret
xchg
mov
xor
aas
fldl
mov
aaa
addr16
clc
pop
dec
xchg
jne
pop
jnp
in
mov
popa
cmp
fs
loop
sub
movsl
pop
inc
pusha
dec
push
fsts
mov
stos
jae
or
push
dec
sub
in
jo
xor
fistpll
dec
mov
mov
stos
shll
imul
push
je
movsb
xor
loope
mov
inc
fs
divps
enter
mov
repnz
hlt
xor
popf
mov
in
and
xor
jne
jae
adc
mov
clc
or
nop
jns
inc
lahf
jmp
pop
movups
add
test
sbb
mov
jmp
pop
cli
int
or
mov
pop
cmp
cmp
mov
imul
xchg
or
sub
lock
hlt
testl
dec
hlt
stc
lcall
rcll
adc
cmpsl
jl
cmp
push
out
mov
cmpsl
add
push
enter
mov
xorb
imul
or
les
xorb
call
jno
clc
sbbb
push
xor
and
stos
inc
add
adc
push
insb
inc
pop
sbb
jns
sbb
popa
fimull
xchg
mov
sbb
dec
inc
loope
pop
or
adc
cld
dec
xchg
pop
daa
cltd
ljmp
xchg
int3
xor
push
out
pop
fisubl
je
xchg
movsl
loop
jmp
leave
mov
es
lcall
cmp
aaa
jle
clc
or
ds
mov
icebp
clc
cmp
dec
lcall
sbb
pop
sbb
arpl
pop
incl
sub
mov
mov
imul
inc
lea
shll
push
cmove
test
mov
ja
sub
icebp
pop
lcall
pop
out
mov
repnz
nop
outsl
push
inc
inc
loop
dec
add
adcb
sbb
fwait
xchg
data16
cltd
pop
bound
ss
xchg
les
fisubrl
cmp
xor
pushf
fbstp
inc
inc
ljmp
pop
dec
imulb
pop
inc
imul
fsubrp
repz
push
stos
mov
pushf
addr16
cmp
out
fldcw
mov
fisubrs
incl
and
cmpsb
out
fsubs
sub
dec
mov
test
out
push
cwtl
cwtl
addl
adc
and
inc
shrb
mov
xor
mov
or
push
loope
loopne
cwtl
movsl
jb
data16
stos
inc
fcompl
lock
js
dec
jmp
or
sbb
mov
push
test
and
cmc
pop
daa
mov
sub
and
cmp
pop
popf
ret
cmp
jecxz
cmpsb
imul
xor
add
sbb
into
xlat
loope
loope
ds
push
mov
dec
add
sub
push
fdivrs
sbb
test
sub
push
push
push
or
and
jae
ljmp
mov
jnp
lea
pop
ds
sar
loop
movsl
iret
popa
sti
mov
inc
push
xorl
repz
mov
out
gs
adc
sbbb
lcall
test
push
xlat
jae
movsb
int
mov
jp
movsl
flds
xor
dec
aaa
dec
push
int
int
iret
pop
cmpsl
adc
inc
into
ret
in
nop
in
outsb
lods
cli
les
les
testl
icebp
in
dec
pushf
fcmove
adc
jp
sub
mov
push
inc
sub
je
les
push
adc
dec
cmc
dec
fstpt
cltd
aaa
jmp
cmp
into
mov
mov
and
mov
inc
fisubrs
sbb
pop
fcompl
decb
or
mov
sub
iret
test
jle
pusha
xchg
add
dec
sub
ja
add
push
rcrw
fldcw
popl
repz
cwtl
push
mov
popf
inc
adc
mov
inc
test
xchg
sub
inc
push
mov
sub
adc
loop
cmp
sti
stc
test
add
inc
ja
cmp
enter
push
call
data16
call
repz
xchg
mov
rcrl
test
jg
mov
and
add
lret
dec
iret
and
or
movsb
subb
dec
jbe
adc
add
adc
dec
mov
jecxz
test
stos
mov
push
decb
jne
out
sbb
mov
jne
push
xor
push
sbb
push
xchg
rcr
in
cmp
arpl
sub
movsl
adcb
adc
xor
fisubrs
adc
daa
mov
out
xchg
mov
or
in
pop
jg
pop
inc
leave
es
icebp
xchg
and
or
fildl
and
insb
ret
inc
aaa
test
sti
shl
pop
xchg
mov
adc
out
jo
add
dec
add
gs
movsb
adc
inc
mov
and
dec
jns
add
mov
jl
push
lret
shll
mov
sbb
cmpsb
testl
lret
cltd
popa
dec
les
xchg
rclb
int3
pushf
ret
xchg
dec
mov
jmp
push
push
sbb
arpl
xor
out
jl
mov
sbb
fdivr
in
stos
mov
and
lods
insb
xor
pushf
adc
sbb
stc
mov
lock
add
mov
mov
imul
add
cmpsl
mov
cmp
rorl
fdivl
and
xor
lock
hlt
fisttpll
mov
es
push
add
mov
xlat
jno
fistps
in
shll
ficomps
leave
pusha
outsb
ja
ja
inc
push
int3
nop
cmp
aas
inc
mov
arpl
add
mov
nop
xor
push
in
inc
mov
out
cltd
jo
push
imull
inc
loop
repz
xchg
dec
test
insl
loopne
jne
adc
pushf
pop
or
inc
mov
gs
jno
adc
cmp
aaa
jmp
jnp
sub
dec
inc
mov
stos
iret
cmp
sarb
call
sti
fisubrs
add
dec
sbb
cmp
or
rcrl
jno
cltd
cli
daa
adc
out
es
xor
loop
imul
dec
mov
imul
push
xorb
out
push
fists
push
sbb
or
into
or
pop
sub
inc
dec
decl
cmp
adcb
mov
mov
ror
xor
mov
lock
fldpi
fdivs
adc
jmp
inc
repz
add
mov
mov
aad
in
jg
xchg
insb
cs
xor
and
push
lret
in
cmp
push
cmp
pushf
shr
arpl
std
rep
clc
in
cltd
repz
add
outsb
cmpsb
in
imul
jp
stc
ljmp
push
push
daa
int
inc
or
cs
movsl
xchg
pop
and
test
lahf
call
xor
xchg
pop
adc
js
sub
dec
dec
insb
or
jmp
dec
xchg
shlb
movsb
cmp
push
push
pop
lods
xchg
mov
je
and
mov
ss
popf
add
dec
fcoms
adc
xchg
rorl
add
push
inc
add
out
ficoml
fwait
pop
sar
cmp
xlat
imul
test
xchg
mov
mov
cli
jmp
das
imul
rorb
push
xor
in
jo
mov
add
mov
roll
ljmp
jmp
dec
mov
sbb
sub
and
mov
imul
repnz
jg
cmp
inc
gs
or
lods
mov
xchg
cmp
fisttpl
inc
sbb
ret
sub
xor
mov
test
bound
lods
in
jecxz
sub
sub
scas
jnp
cltd
sti
jg
test
push
adc
mov
mov
dec
add
mov
or
xchg
push
stc
cmp
repnz
xchg
mov
cmpl
mov
aas
pushf
lds
ficompl
sbb
je
das
cld
cmpl
inc
inc
sbb
inc
out
jb
mov
dec
or
movsl
mov
enter
cmpl
mov
fdiv
pop
cmp
les
mov
in
push
push
fsubrl
xchg
loop
xorb
leave
mov
std
mov
cmp
cld
adc
pop
in
test
test
shrb
les
or
aas
ret
or
arpl
movb
sub
pop
int
ss
xor
xlat
repnz
add
or
enter
xor
push
jns
sahf
sub
mov
call
daa
pop
push
sarb
push
pop
daa
sub
data16
dec
mov
adc
cmp
xor
loopne
mov
inc
jl
and
push
xchg
adc
das
sub
fisttpl
subb
jo
ficomps
pop
adc
fcompl
pop
ja
roll
fwait
push
aam
pusha
js
jmp
sbb
push
and
pop
mov
pushf
das
push
mov
stc
iret
push
stc
push
sub
mov
jmp
idivb
pushf
mov
pop
adcb
sub
mov
adc
xor
sbbl
rcrb
int3
lahf
mov
cmp
out
imul
mov
dec
scas
inc
lods
mov
leave
push
sub
cltd
cwtl
cli
mov
jl
push
xor
pusha
fmuls
sub
pop
rdmsr
std
cmpsb
lret
mov
stos
sbb
inc
fistpl
jp
mov
or
push
mov
mov
in
or
cmp
arpl
scas
mov
iret
sub
dec
push
aad
pushf
imul
or
sbb
adc
in
inc
hlt
out
ljmp
test
test
mov
xchg
loopne
fistl
cmp
into
pop
mov
fiaddl
js
je
xor
leave
pusha
xor
hlt
fdivrs
int
push
aas
sub
cs
int
sub
sti
aam
test
in
push
and
bound
lock
inc
sbb
cmp
lret
xor
sub
popf
aam
cmp
ret
adc
push
jno
mov
pushf
sub
pop
push
ss
fdivl
popa
push
sbb
bound
cmp
aaa
xor
lahf
jle
pop
jge
push
pop
and
push
lods
mov
scas
jne
sub
in
xor
jnp
xor
and
dec
loope
pushf
scas
inc
or
xchg
sub
sbb
imul
ljmp
nop
add
aam
in
icebp
lock
mov
xchg
sbb
popa
test
repnz
lds
mov
rorb
and
cwtl
iret
xor
je
loope
dec
or
andb
mov
or
pop
stos
sub
lea
mov
pop
jns
sub
dec
sarl
sahf
fldl
outsb
push
xorb
push
inc
lcall
pushf
jae
js
iret
mov
flds
int
jo
adc
xchg
rorl
in
daa
popf
loope
jmp
add
aaa
cmpsb
shl
mov
jecxz
and
lock
out
cmp
jae
hlt
inc
into
dec
ja
stos
movsl
mov
push
divl
out
xor
or
mov
mov
fistpl
jecxz
loope
jnp
loopne
pop
mov
insb
mov
mov
mov
add
cs
and
pop
xchg
pop
sbb
cwtl
stos
hlt
xchg
or
add
movsb
push
das
ja
aas
ret
adc
jo
loop
clc
add
jl
push
outsl
jbe
incb
or
adc
jl
mov
lcall
cmovnp
in
out
inc
jbe
movsb
lods
xchg
inc
lea
push
repnz
lds
pop
sbb
leave
xor
je
xchg
mov
fwait
pop
cmp
fstp
jbe
rclb
std
sbb
sbb
cltd
pop
call
lret
loope
jns
sub
add
jae
sbb
shrl
rep
adcb
dec
jmp
sbb
ds
jl
or
mov
movsb
jae
mov
inc
sbb
fsubrl
xchg
push
movsl
xchg
cmc
push
lret
mov
adc
cmpsl
jns
bnd
ss
or
sub
xchg
jp
aaa
push
add
clc
mov
jnp
xchg
hlt
cmc
sar
xor
sbb
gs
pop
fcmove
sub
add
aad
mov
test
inc
shrb
cmc
xor
sti
mov
jb
xlat
repnz
sbb
push
xchg
iret
scas
xchg
loopne
add
or
repz
dec
jp
lcall
mov
ret
and
rorb
fistpl
pop
dec
mov
call
scas
inc
scas
cli
stc
xchg
mov
inc
xlat
mov
idivb
xor
mov
push
cwtl
cli
pop
mov
mov
dec
hlt
mov
scas
xor
call
xchg
imul
xlat
xchg
sbb
gs
addl
mov
jp
fs
in
dec
xchg
ja
push
push
sbb
dec
mov
cmpsl
push
fistps
cmp
and
hlt
sub
jge
push
sub
and
cmp
in
mov
pop
pop
in
push
adc
jl,pn
cli
and
push
data16
loope
mov
mov
jb
test
mov
notl
jno
jne
gs
and
bswap
inc
cmpsl
inc
mov
andl
push
iret
ja
insl
dec
not
clc
rcrb
adc
incb
or
addr16
mov
incb
gs
loope
aas
movl
sbb
sbb
mov
xor
mov
test
mov
ja
or
subl
fldl
cltd
flds
add
mov
adc
pop
jecxz
ljmp
adc
lock
fmul
fld
push
scas
push
xor
pop
adc
call
loopne
mov
dec
ss
shrl
xor
mov
jnp
insb
mov
jnp
hlt
dec
xor
mov
jp
xor
lock
mov
imul
adc
scas
push
adc
pop
jnp
xchg
pushf
lods
push
repnz
add
enter
test
mov
push
fwait
mov
pop
cmp
pop
mov
fmulp
adc
add
or
cmpsb
clc
int3
push
outsb
leave
call
js
push
dec
ss
add
std
int3
sbb
loopne
fwait
repnz
pop
lcall
stos
push
and
sub
pusha
push
mov
lret
inc
cld
mov
test
cmpsb
sub
and
testb
sub
pushf
pop
adc
xchg
cmpsl
test
shlb
mov
ss
loopne
push
cwtl
xor
inc
or
pop
loope
pop
mov
jmp
sar
mov
mov
inc
cs
sbb
inc
sub
xchg
push
adc
pop
adc
adc
ljmp
mov
loope
cmp
mov
cmp
mov
je
sbb
jmp
je
jno
movl
lahf
mov
pop
gs
pop
pop
dec
in
sarl
xor
dec
adc
or
xor
les
lods
fisubrs
cltd
cs
xchg
andb
sbb
sbb
mov
cmpsb
insb
fidivrl
shll
jns
jecxz
sbb
mov
mov
and
dec
add
ret
dec
cltd
repnz
call
mov
clc
mov
xor
adc
in
lret
or
inc
mov
sub
or
nop
fimull
mov
lea
stos
enter
and
adc
jo
mov
in
push
fwait
pop
adc
cmpsb
rorl
xchg
int3
pop
and
mov
int3
ficoml
and
push
pushf
testl
xchg
pop
push
mov
sbb
mov
inc
outsb
fcmovne
insl
fldt
jbe
push
push
nop
pop
cmpsb
add
pop
sbb
imul
add
dec
in
fs
ret
xor
dec
loop
pop
and
cld
jg
or
imul
out
jae
sub
js
gs
xchg
dec
dec
aam
mov
sub
je
mov
enter
mov
cmp
ljmp
jmp
cmp
cmp
mov
cmp
xor
sub
jns
jnp
push
xor
sbb
cltd
lret
dec
mul
lods
mov
pop
sbb
imulb
sahf
fists
xchg
mov
xchg
sbb
dec
cwtl
mov
rcll
mov
and
in
clc
jbe,pn
pop
test
dec
xchg
pushf
cli
add
add
insl
cmp
adc
testl
lods
stos
add
adc
or
cmp
subl
divl
cmp
and
and
xor
aam
dec
stos
loop
ljmp
shll
xchg
int
sub
addr16
or
sbb
test
inc
test
and
dec
cmp
mov
add
idivl
into
jg
xchg
jns
and
add
inc
flds
dec
stos
pop
ror
xor
cmp
shll
add
sbb
int
imul
mov
fwait
and
outsb
out
pop
int
and
mov
jns
shl
aam
outsb
in
scas
or
ljmp
out
lahf
pop
ljmp
mov
and
add
mov
in
mov
daa
pop
cld
cld
sbb
fs
mov
mov
cmpsb
adc
xchg
mov
insl
or
movsl
aad
add
xchg
pop
lret
ljmp
rolb
xor
lea
xchg
dec
push
mov
js
inc
inc
pop
xorl
call
dec
stos
lahf
int3
add
dec
fldenv
push
aaa
push
sbb
pop
orl
pusha
inc
sbb
or
xchg
nop
lods
push
mov
stos
out
dec
jle
lea
pop
inc
pop
stos
sub
push
and
sub
dec
add
jg
jnp
pop
jb
scas
mov
pop
jecxz
mov
inc
ja
xor
adc
pushl
push
mov
mov
dec
jnp
test
cmp
std
pop
cwtl
test
mov
mov
cmp
stos
xchg
jmp
pop
mov
push
xor
nop
in
jl
xchg
mov
mov
shlb
mov
mov
sti
mov
xor
ret
adc
in
add
fidivrl
aaa
mov
movsl
sub
and
push
scas
cmp
and
xor
int3
jbe
mov
cmp
pop
stc
test
rcll
aam
jl
xchg
lea
les
aas
xchg
xchg
shrl
sub
inc
repz
imul
cld
cli
dec
sub
rolb
push
cli
mov
call
imul
pop
fmul
ds
fists
jb
dec
std
sub
jecxz
inc
push
outsl
testb
leave
out
in
cmpsb
js
push
daa
and
mov
std
pop
pop
add
mov
mov
bound
sub
mov
cmp
sbb
push
mov
pop
out
aad
pop
mov
jmp
push
ss
mov
cwtl
fs
jecxz
iret
cltd
adc
sub
movsl
add
mov
mov
jle
jns
sub
jbe
cmp
adc
add
inc
xor
adc
push
loopne
insb
stc
lcall
fistl
sbbb
xor
fs
add
mov
or
mov
or
xchg
ret
lock
jno
movsl
push
push
xchg
adc
loopne
sbb
mov
sbb
jne
sub
push
jns
xor
push
outsb
mov
cmp
pop
packsswb
call
add
xor
cltd
sti
dec
fiadds
pushf
js
sarl
pop
push
adc
cmp
jp
push
scas
inc
jmp
mov
push
sub
fcmovbe
pop
pop
or
pop
mov
fldcw
inc
xchg
or
mov
xchg
das
js
popf
inc
call
arpl
pop
jmp
xchg
pop
repz
push
mov
mov
js
mov
mov
and
mov
sbb
dec
inc
fstl
jecxz
push
pop
inc
pop
pop
xor
cmpsl
popf
or
inc
adc
mov
mov
mov
daa
jge
aad
mov
mov
in
cmp
xchg
mov
repz
jge
outsl
fcomps
sbb
js
fwait
mov
mov
jmp
aas
cmp
sbb
sahf
call
enter
lods
das
lret
jnp
mulb
sub
or
int3
sbb
dec
stos
or
into
shrd
aam
enter
divb
or
or
jmp
jnp
data16
insl
neg
pushl
lods
cmpsl
push
movsl
fisttps
popl
ja
dec
fists
inc
out
mov
and
mov
stc
ficompl
mov
std
insl
xor
sti
daa
aad
sbb
push
mov
push
stos
jbe
jnp
mov
dec
push
mov
je
inc
and
movsl
dec
jns
in
notb
mov
pop
lcall
ret
bound
inc
xor
cmp
cmc
loopne
dec
popf
mov
lret
lock
ljmp
cmovo
aas
push
repz
das
out
pop
movsb
mov
sti
lcall
lods
and
cs
mov
jl
in
jle
mov
inc
movb
push
sbb
sahf
mov
inc
shlb
adc
clc
adc
js
mov
cmp
inc
jmp
jle
jecxz
nop
mov
repnz
cli
int
dec
sarl
fnstenv
fucomip
xor
mov
or
inc
mull
repnz
stos
pop
jnp
out
sbb
push
je
adc
fdivl
test
sub
loope
lcall
add
test
jo
xchg
lcall
fisttpll
push
sbb
push
popa
mov
dec
cmpsb
negl
enter
sbb
fisttpll
jno
push
icebp
dec
test
ds
pop
push
cmp
jnp
push
adc
sbbl
inc
outsb
addr16
in
aas
std
sub
pop
mov
push
sbb
jne
xor
movsb
jb
mov
mov
sub
jae
xchg
insb
xchg
sub
filds
dec
mov
jns
shll
js
dec
ret
fisubrl
mov
loope
push
cmp
sbb
hlt
int3
xchg
xor
imul
arpl
or
or
dec
dec
insb
cmpsb
mov
add
iret
inc
sbb
test
mov
clc
int3
aad
dec
push
xchg
int
je
xor
cmp
sub
cwtl
cmp
out
mov
jnp
lock
ljmp
dec
data16
seta
pop
push
aam
jmp
push
pop
inc
mov
push
out
aad
jno
or
test
jle
push
xchg
inc
xor
pop
sbb
cltd
cld
ljmp
pop
lea
mov
add
ficomps
add
mov
incl
test
dec
sub
dec
outsl
ret
daa
scas
jle
xor
scas
nop
mov
xor
out
inc
faddl
out
fwait
push
pop
aas
or
cmp
fcmovnu
lahf
ja
xor
push
mov
dec
pop
in
adc
xor
daa
inc
clc
dec
stos
daa
inc
ljmp
addl
or
push
add
sub
jge
insl
movsb
xor
cmc
icebp
loopne
xchg
sbb
test
push
insb
aas
mov
lock
jle
mov
jae
mov
mov
mov
cmp
scas
aad
mov
sbb
sbb
mov
sub
push
stc
pop
mov
adc
aaa
cmp
mov
enter
cmp
add
pop
push
jb
insl
lea
pop
gs
icebp
pop
out
aam
sbb
mov
lods
fistpl
sub
ret
subl
inc
dec
mov
loopne
cwtl
adc
lcall
popl
and
and
xchg
ja
push
mov
sbbb
lcall
fdivrl
xchg
test
fwait
xchg
dec
cmpsb
ret
adc
jecxz
cmc
xchg
ljmp
cmc
jmp
dec
cmp
pop
inc
cmp
mov
scas
jno
cmpsl
dec
div
test
mov
xor
cmp
rorl
out
divl
xor
push
enter
cs
test
sbb
clc
cmp
mov
pop
dec
out
sub
popf
scas
out
inc
rorb
movsl
inc
andb
sub
std
push
lcall
xchg
aaa
jle
int
test
push
into
popl
adc
lret
test
xor
incb
and
sub
test
lds
jno
mov
inc
jb
inc
inc
mov
push
in
add
test
mov
cltd
push
xor
add
xchg
les
fs
cltd
mov
mov
adc
add
push
fmull
loop
or
cmp
sti
shrl
mov
aad
orb
ds
mov
sub
dec
push
inc
in
jmp
sbb
hlt
xchg
xchg
mov
popf
orl
mov
xor
mov
insl
lret
fwait
pop
mov
pop
ss
jp
jmp
mov
fbstp
sub
inc
xor
xchg
cmp
add
add
cld
movsb
or
xorl
mov
data16
ret
pop
loopnew
movsb
scas
add
iret
jns
test
dec
cmpsb
leave
outsl
repz
scas
scas
sbb
jnp
or
les
cmp
test
in
jo
mov
movsl
jns
data16
cmpsl
psubw
aas
jb
lock
lods
subb
std
ja
lods
sbb
addr16
cmp
test
pop
outsl
scas
ficomps
jne
es
lods
nop
adc
push
in
xchg
push
pop
jb
push
inc
dec
cs
sbb
fdivl
sub
addr16
outsl
rcr
ja
mov
pop
push
lret
ja
inc
sub
fwait
xchg
insb
sub
and
lret
lret
dec
in
push
js
and
scas
inc
jge
dec
es
sbb
pusha
lds
mov
lcall
sar
xor
fs
jp
adc
cmpsl
sub
xlat
fsubrs
jl
loope
xchg
cmpl
sub
jno
pop
int
repz
jbe
cmpsl
push
push
mov
jne
shr
or
fs
dec
insl
mov
xor
leave
aaa
ret
cmp
testb
fbld
add
pop
loop
jle
xor
and
hlt
or
mov
cli
sub
push
orb
lds
xchg
and
addr16
pusha
jnp
bound
mov
sahf
stc
in
xor
imul
ret
stos
iret
adc
cld
pcmpeqd
mov
or
gs
lcall
xor
cltd
jns
shlb
mov
int3
add
xchg
loope
idivb
or
inc
scas
push
cmp
mov
icebp
rclb
in
pop
mov
mov
dec
and
nop
arpl
pop
and
fmull
stos
add
dec
push
arpl
mov
dec
cmpl
cmp
xchg
add
inc
jae
test
or
push
outsl
stos
sub
jp
cmp
mov
out
mov
movsl
jns
adc
mov
push
mov
call
sahf
mov
lret
shll
cmp
out
ss
dec
jg
dec
push
data16
repnz
lock
mov
movsb
mov
fistps
fsubr
ljmp
xlat
xor
and
mov
cmc
out
sbbl
mov
loopne
fs
les
ja
daa
mov
lods
and
mov
lea
sbb
in
ret
loopne
jge
xchg
jb
insl
sbb
roll
xchg
loop
add
aas
jae
push
addr16
scas
jbe,pt
adc
out
inc
and
dec
inc
test
pop
lock
nop
or
ret
mov
out
nop
push
inc
pusha
lret
mov
or
push
and
movsl
cltd
push
aas
test
sbb
hlt
mov
out
test
movsl
aaa
xor
mov
jecxz
insl
loope
adc
push
push
addr16
ret
cmpsb
mov
into
dec
and
adc
and
aaa
popf
pushl
mov
mov
mov
fisttpl
ret
and
push
bound
rorb
jae
sbb
mov
push
mov
push
lods
call
mov
mov
mov
add
sub
dec
sbb
aad
in
fchs
or
cmp
xadd
es
pop
and
mov
pop
mov
int
xor
in
icebp
cli
ljmp
cld
lods
mov
das
mov
test
lahf
shll
mov
mov
jge
jp
shlb
mov
aas
int
mov
and
xchg
mov
jge
xchg
sbb
shrl
test
fs
and
pop
pushf
or
xchg
dec
jge
scas
xchg
add
in
mov
aad
xor
xor
jb
imulb
jl
xor
daa
mov
outsb
push
push
jle
loope
pop
punpckhdq
mov
lcall
out
movsl
scas
imul
jp
mov
stos
mov
dec
mov
bound
test
cld
insl
fwait
shll
stos
fiadds
into
sahf
mov
std
outsl
loop
out
or
int3
mov
pop
jecxz
std
push
add
ret
inc
adc
sarb
cmp
xchg
in
outsl
lds
hlt
cmp
push
xor
pop
pop
sub
mov
cmp
cmc
sub
or
push
dec
jae
or
cmpsl
dec
test
mov
cltd
mov
in
dec
pop
push
mov
push
in
xlat
popf
dec
inc
jb
push
mov
aaa
std
add
lods
dec
leave
jp
sbb
adc
lea
icebp
mov
enter
aaa
jne
gs
into
jg
dec
outsb
mov
jmp
js
jbe
mov
sti
fstps
cmp
push
cwtl
dec
arpl
loope
xor
pop
xor
fildll
rcl
ss
and
mov
ja
cmp
dec
pusha
stos
les
or
lret
sub
xor
lahf
xor
aas
or
or
xchg
cmc
sub
bound
push
fsts
call
les
cmp
xchg
in
mov
or
xchg
add
ljmp
popl
mov
cltd
je
rcrb
sti
xorl
mov
ljmp
insl
jns
cmp
dec
push
or
faddl
rcrl
lods
test
repnz
pop
add
mov
pop
mov
clc
push
sbb
inc
int
push
or
ss
jno
push
adc
or
pop
or
pop
dec
sbb
loope
xor
aam
mov
ds
sbb
lcall
xchg
xor
iret
mov
lock
insb
aas
iret
mov
pop
cmpsl
out
fnsetpm(287
pop
in
xchg
xor
int3
shll
loop
pop
and
xchg
mov
sub
aas
add
clc
push
sub
dec
stos
insb
pop
mov
mov
xchg
out
pop
sarb
inc
movsl
dec
jae,pt
and
mov
mov
leave
enter
xchg
or
jno
fs
jbe
xchg
in
jns
arpl
int3
pusha
mov
lahf
sbb
lock
mov
inc
cmp
or
test
add
push
mov
sti
scas
les
add
inc
dec
cltd
cmp
test
inc
xor
jp
mov
mov
addr16
insb
hlt
jb
pop
adc
xor
enter
mov
test
add
test
jns
fcmovne
or
aaa
sbb
jecxz
fisttps
inc
cwtl
add
divb
jb
je
lcall
cmovge
add
sbb
sarb
lock
cmp
xchg
xor
test
jns
add
sbb
ja
mov
mov
pop
xchg
inc
sub
xchg
xchg
out
sti
ja
inc
adcl
out
test
lds
push
mov
arpl
das
cmpxchg8b
int
stos
cmp
pop
xor
jp
daa
add
daa
int
sub
xchg
jg
into
insb
add
dec
test
push
lcall
cmc
cmp
js
test
fcmovb
lock
or
jne
mov
sub
inc
inc
xor
xchg
shlb
fmul
fld
jecxz
insb
daa
mov
das
fdivrl
dec
push
arpl
cld
inc
adc
stos
in
dec
in
jne
sub
leave
lcall
jbe
ja
leave
mov
cmp
insl
arpl
ror
mov
lea
jbe
sub
adc
push
addb
and
lods
mov
stos
inc
aam
jnp
lock
xchg
inc
andb
or
call
fwait
les
or
out
sbb
imul
push
adc
mov
pop
pop
clc
pushf
mov
pop
mul
xor
into
test
inc
leave
sbb
addps
jno
mov
aas
daa
or
sar
mov
and
aad
mov
xor
xchg
and
repz
fwait
push
imul
shl
and
or
stos
inc
push
fists
cwtl
and
aam
int
xor
in
inc
test
mov
ret
dec
add
sbb
fidivs
fstpl
cmp
sub
loopne
mov
sbb
push
push
sub
imul
leave
add
stos
ret
jl
lret
cmp
add
idiv
push
mov
adc
leave
push
ret
xor
test
xchg
js
roll
and
mov
jo
int
and
pushl
add
out
pop
jb
lea
filds
mov
test
xor
xchg
push
cmp
fbstp
fs
inc
mov
cmp
mov
pop
pop
mov
stos
pop
bound
aad
jp
gs
mov
fucomp
inc
int
movsl
or
push
aad
lcall
fldcw
push
cmp
fcmovu
push
push
stos
lds
bound
test
push
std
insl
sbb
mov
rol
fsubl
pop
inc
xchg
mov
sub
out
pop
flds
inc
sub
inc
jmp
enter
cli
test
negb
dec
std
repz
fmul
sbb
and
sahf
jae
or
loopne
in
test
cmpsl
mov
out
call
cmpsl
and
xchg
inc
or
jae
mov
test
scas
pop
push
xchg
pop
jo
xor
pop
pop
sbb
fldt
iret
fstpt
add
push
mov
inc
insl
rclb
cmp
fcompl
pusha
or
dec
das
dec
ds
aas
adc
jle
ljmp
xor
push
lock
xor
filds
push
repnz
ds
enter
adc
mov
std
cld
fwait
sbb
enter
cmp
hlt
lods
call
subb
aad
bound
xchg
inc
xchg
test
xchg
rcl
mov
int
xchg
sbb
or
mov
adc
pop
dec
dec
cmp
test
pop
orl
cmp
xlat
cmc
ss
or
cs
sbbb
cmpsl
das
dec
in
mov
movsl
and
ret
shll
mov
adc
test
es
divl
sbb
add
pop
mov
cmp
xor
jae
fcmovnbe
inc
call
popf
hlt
mov
inc
ds
adc
addl
mov
addr16
jge
mov
sbb
add
lea
mov
pop
repz
negb
outsb
faddl
jno
lret
cli
loopne
outsb
ss
adc
jnp
mov
xchg
sub
int
sub
add
mov
or
and
pop
adc
shrl
or
aam
nop
adc
gs
add
xchg
push
jmp
sub
lret
jae
push
repz
or
scas
clc
rcll
xchg
push
jge
mov
ja
enter
rcr
test
push
stos
mov
mov
aad
rcr
jle
in
cmp
jns
insl
icebp
cmpsb
and
sub
jge
pop
cld
push
and
repnz
iret
sbb
pop
inc
xchg
push
xchg
rorl
pop
out
mov
lahf
push
subl
sbb
enter
sar
jmp
and
sahf
push
inc
or
sbb
imul
js
or
sbb
arpl
ja
aas
rolb
andl
nop
cli
sbb
mov
sub
xor
sub
mov
push
leave
adc
les
stc
xor
mov
mov
pop
sbb
and
out
ss
js
daa
incl
loop
or
aad
push
orl
pop
bound
rcl
xchg
adc
sub
mov
push
fcomip
aad
xchg
out
fcomps
mov
subl
in
ds
mov
pop
adc
push
push
cmpsl
int
lods
adc
lods
pop
stc
testb
ljmp
scas
fucomip
adc
jns
repz
das
add
pop
pop
push
push
sub
aad
fisubs
jnp
cmpsb
mov
orl
xchg
in
push
mov
jp
enter
add
das
push
sbb
test
test
ja
aaa
stos
pop
sub
fwait
push
xchg
sbb
push
pop
push
fsubp
fucomi
pop
xchg
sub
test
jo
pop
daa
lret
mov
inc
data16
in
movsb
adc
ret
pusha
push
mov
pop
mov
inc
and
mov
cmp
mov
cmp
andl
mov
push
mov
mov
das
inc
lcall
outsl
pop
loop
call
icebp
or
xchg
or
insb
into
idivb
dec
sti
int
and
sub
inc
jae
sbb
bound
loopne
dec
and
sub
cmp
pusha
scas
add
mov
ds
popa
out
xor
imul
pop
inc
scas
jp
sub
dec
test
adc
inc
rcrl
push
jecxz
xor
pop
mov
jbe
mov
or
mov
xchg
mov
xlat
nop
mov
fwait
dec
fimuls
ja
stos
xor
mov
jne
pop
js
push
jae
aaa
das
das
insl
xor
mov
and
mov
outsl
dec
ljmp
xchg
insl
lret
nop
mov
or
or
lods
adc
clc
fldcw
icebp
cmovns
mov
call
jg
test
mov
mov
loopne
inc
clc
sub
enter
sbb
iret
fnstenv
mov
fs
out
rclb
push
adc
outsl
in
daa
mov
fsub
cld
mov
inc
out
jb
adc
or
inc
pop
push
dec
cmp
inc
clc
addr16
dec
inc
push
jnp
jl
mov
sbb
mov
cmp
xchg
inc
inc
jbe
jmp
cltd
ljmp
jl
push
stos
pop
iret
push
lods
outsl
pop
repz
dec
stc
insl
lret
sbb
mov
or
or
inc
xlat
shlb
cmp
fs
cmp
fs
ds
js
cld
mov
mov
int
mov
jle
mov
ljmp
jp
cmp
scas
mov
pop
btc
repz
pushf
es
and
dec
sbb
and
mov
mov
decb
xchg
lea
aam
mov
dec
xchg
icebp
cmp
int3
and
cmp
or
mov
movsb
dec
cmpsb
pop
jnp
repz
rorb
fcoms
iret
shll
test
js
cmpsl
or
sbb
push
jl
jne
lret
imul
mov
xor
stos
dec
dec
test
cmp
dec
jb
sbb
mov
arpl
mov
dec
inc
cmp
and
subb
or
data16
shlb
sub
add
cmpb
outsb
ljmp
ja
pop
loop
sub
xor
fidivrl
call
loopne
cmp
scas
leave
push
push
movsb
lds
sub
scas
adc
jge
lahf
adc
push
push
imul
in
js
ficoms
in
jp
sbb
iret
clc
fists
stos
sub
out
cld
mov
pop
mov
gs
mov
pop
inc
cmpsl
cmc
xchg
fisttpll
rolb
adc
not
icebp
fisttps
leave
int3
ret
push
outsb
repz
outsl
std
push
fidivs
add
inc
cmp
push
sub
outsb
mull
stc
sub
lock
fsubrl
jne
jae
cmp
shrl
out
repnz
aas
rcl
aam
outsl
mov
mov
inc
lcall
xchg
leave
fldt
test
mov
add
adc
xchg
mov
insl
cli
adc
mov
push
xchg
mov
sbb
mov
out
or
into
sbb
addb
sbb
stc
or
lea
scas
and
int
int3
xchg
mov
sti
roll
dec
add
jae
and
std
scas
sti
call
xchg
daa
popf
inc
ja
popa
sub
or
mov
mov
mov
dec
rorb
sbb
or
mov
pop
add
sbb
hlt
inc
pop
xchg
pop
scas
stos
sbb
xor
and
mov
ja
rol
movsl
push
mov
mov
aas
xchg
iret
and
jmp
sub
mov
inc
adc
aaa
adc
jmp
gs
dec
mov
sbb
inc
xchg
xchg
or
sbb
pop
xchg
std
pop
ljmp
scas
xorb
lahf
in
dec
loop
push
aad
jg
lahf
xlat
xchg
je
and
ret
loope
push
push
outsl
sub
je
popa
cs
jge
and
cwtl
mov
inc
dec
xor
sub
push
cmpb
mov
ficompl
sub
pusha
add
xchg
fs
xlat
xorb
aaa
dec
inc
sbb
or
sbb
out
jno
int
cld
jnp
push
scas
ss
mov
movsb
cmpsb
cmp
fcmovb
jl
xchg
lea
jb
scas
push
loope
cmp
je
xor
enter
and
fadds
int
pop
sbb
adc
nop
pop
inc
popa
add
je,pn
add
cmpsb
movsl
leave
xor
addr16
in
pop
and
sarb
push
pop
and
movsl
sub
lea
das
xor
into
aad
es
fisubrs
inc
jge
mov
lcall
clc
cmpsl
mov
xchg
add
out
cwtl
fisubl
repnz
adc
jecxz
leave
movsl
add
inc
cmp
sub
call
push
shrb
mov
jecxz
push
cmc
jbe
js
or
pop
mov
add
push
popf
xchg
push
imul
mov
cli
enter
clc
dec
jp
cltd
dec
out
mov
int
scas
cmpsl
and
push
loop
aaa
insb
adc
mov
cmp
mov
xchg
jl
cmp
addl
or
iret
xchg
ds
std
gs
sbb
arpl
scas
leave
push
jle
movsb
test
mov
insb
sub
xor
shlb
jns
shlb
lods
enter
or
sub
sti
inc
pop
incl
jae
adc
test
pop
outsb
data16
adc
sbb
mov
int3
je
dec
mov
and
dec
int
lock
add
pusha
xlat
daa
mov
aas
pxor
adc
jnp
ja
in
adc
js
ss
xor
int3
mov
sbb
rorb
mov
rcrb
addl
push
pop
std
scas
fwait
icebp
sub
sbb
adc
cmpl
fimuls
xchg
jmp
sti
lock
popa
ror
mov
jmp
lods
pop
sahf
stc
jl
pusha
cwtl
lahf
mov
cmp
repz
pushf
mov
inc
dec
mov
popf
and
push
sarb
outsb
fcmovnu
sbb
insb
cld
into
aaa
data16
rclb
sub
dec
rclb
ja
mov
or
orb
pop
adc
push
sub
adc
orl
lahf
ljmp
jne
inc
mov
enter
aaa
mov
je
cmp
pop
aad
sbb
push
pop
or
xchg
lods
jb
jecxz
lret
xlat
xor
xchg
xor
stos
mov
push
in
push
rcrb
xor
outsl
add
cmpsb
lods
cmp
push
mov
push
loopne
fmull
or
pop
out
or
and
push
outsb
int
adc
mov
mov
loope
xchg
or
js
hlt
xor
insl
fistps
mov
sub
fs
push
cmp
call
mov
sbb
inc
loopne
cmp
shl
push
dec
inc
stos
sahf
shll
loopne
ficoms
xlat
jne
aaa
or
mov
test
pop
inc
and
and
dec
fcmovnbe
sbb
sti
jne
push
in
push
xor
stos
lahf
ljmp
adcl
pusha
movb
inc
mov
mov
out
lea
pop
out
and
enter
outsb
in
fstpt
pop
dec
sbb
jns
fld
mov
loop
xchg
mov
pop
testb
dec
pushf
in
test
mulb
dec
in
push
imul
xorl
shl
adc
cld
xor
xchg
pushf
daa
mov
jbe
cltd
inc
sahf
and
jmp
add
xor
in
or
sub
or
xchg
dec
ja
out
xor
adc
adc
mov
mov
sub
scas
push
mov
stos
cmc
push
jl
sub
add
inc
std
jno
in
aad
jle
jle
pop
lea
sbb
jae
lds
pushf
lcall
out
pop
and
js
inc
test
jp
shrl
sub
test
sub
inc
lcall
imul
push
mov
in
mov
cmp
out
sub
push
loop
and
add
mov
sarb
in
pushl
lcall
bnd
nop
jne
movsb
test
lods
jp
inc
outsl
mov
outsb
mov
cmp
xchg
mov
insl
xlat
aam
cmp
xor
jge
sbb
cmp
add
cmp
jmp
cld
push
xchg
movsb
pop
dec
sbbb
dec
sub
sub
orb
sbb
ret
xchg
sbb
adc
mov
cmp
jl
inc
inc
jl
mov
mov
aaa
and
cmp
ljmp
sub
rclb
dec
mov
cmp
pop
pop
mov
mov
lods
lds
mov
test
jmp
test
enter
sub
int
jbe
pop
popf
push
jae
js
xlat
inc
jmp
add
jns
fisttpl
jbe
cmp
test
cwtl
pop
xor
mov
sbb
ds
outsl
out
cltd
jmp
fisttps
outsb
sbb
lahf
scas
pop
shlb
dec
stos
xchg
scas
fwait
orl
rclb
sahf
ss
shll
and
mov
mov
mov
mov
loopne
mov
push
movsb
cmp
sbb
aad
shlb
icebp
stc
dec
xchg
pop
and
dec
test
push
dec
fwait
add
test
cmp
icebp
and
dec
leave
pushf
lret
ficoml
loope
cmp
popa
sbbl
lcall
add
out
lahf
pop
fistps
in
in
xor
je
lock
jge
mov
and
sbb
add
push
pop
fldt
push
inc
xchg
and
push
pop
add
mov
pop
dec
jo
ret
xor
xor
out
shll
repz
loop
xorl
inc
push
inc
or
pop
cmpsb
neg
aam
and
push
imul
outsl
sbb
lret
pop
lcall
rcrb
cmc
repz
jnp
jge
pop
lret
push
nop
cmp
sbb
sbb
fnstsw
loopne
daa
cli
sbb
and
adc
rorl
mov
loope
in
inc
rclb
in
aas
cltd
cld
fdivl
les
mov
insb
adc
xchg
xchg
pop
fsts
mov
and
push
nop
mov
mov
dec
mov
aaa
cltd
aam
rolb
mov
sub
mov
lds
push
mov
out
cmp
xlat
arpl
mov
or
dec
sahf
push
push
in
xchg
frstor
dec
cs
pop
fistpl
jne
gs
dec
pushf
int3
push
sub
cmc
cmpsb
ret
lret
mov
pop
and
pop
jmp
repz
push
adc
sub
xchg
bound
stc
push
aam
scas
shl
jb
jo
rcrl
iret
push
push
hlt
add
inc
fs
push
pop
and
mov
sbb
push
test
nop
mov
or
adc
movsl
cltd
or
ss
ds
jp
imul
test
aas
pop
int3
mov
jle
fcomps
lea
mov
xchg
nop
mov
push
jno
mov
push
out
sahf
sub
mov
mov
pop
jne
stos
push
mov
mov
loopne
lret
mov
sub
popf
lods
xor
and
jle
test
xlat
mov
and
pop
mov
jmp
jecxz
pushf
das
stc
fisubrs
fs
jmp
outsb
sbbl
pop
mov
mov
push
add
push
xor
inc
sbb
ficomps
cmp
or
shll
jge
push
imul
and
jl
loope
daa
jp
dec
jl
in
insl
in
mov
or
jnp
lods
pop
pop
bound
push
xor
stos
pop
insb
scas
pop
cmc
arpl
sarl
arpl
mul
sub
push
fmull
xor
rorl
fmul
cmp
test
loope
push
movsl
jle
fsts
mov
or
and
inc
push
int
sbb
loope
sbb
scas
je
icebp
or
mov
push
add
xor
jae
pop
out
push
sbbb
push
add
xchg
out
sbb
emms
ja
movsb
lahf
mov
sbb
mov
jp
pop
jae
add
mov
sbb
push
lock
jb
mov
add
daa
cld
cmpsl
cwtl
adc
arpl
jnp
data16
repnz
pcmpgtw
cmpb
xchg
sbb
mov
pushf
dec
lods
jecxz
add
push
cmpsb
or
outsl
out
sub
into
aad
subb
movsl
stc
js
sbb
mov
scas
test
data16
jmp
iret
fwait
stc
cmp
mov
fsubrl
in
push
and
mov
push
stos
jne
push
xorb
test
mov
iret
and
mov
push
push
cmc
jl
pop
xchg
ds
pop
pop
jno
lcall
shll
cmp
ds
sar
cmp
ret
cmp
daa
jmp
outsb
sbb
adc
xchg
shr
cmc
in
jl
fists
lret
nop
faddl
mov
dec
adc
notb
rcll
jg
stos
and
add
loopne
daa
scas
xchg
jle
or
notl
out
repz
mov
pop
cwtl
and
pop
pushf
ds
or
xchg
outsl
movsl
sub
mov
nop
loope
xor
or
jp
cmp
dec
mov
popf
pop
mov
sbb
xchg
call
in
jno
lods
jne
test
xor
loop
les
xor
outsl
or
ficoml
mov
xor
jecxz
iret
std
icebp
out
jmp
mov
sub
cli
inc
sbb
aas
int
lcall
addl
popa
cld
mov
mov
adc
or
inc
pop
lcall
xchg
sbb
pop
jg
aam
leave
inc
in
stos
push
loope
sbb
adc
les
lcall
and
aam
ret
outsl
add
and
outsb
xor
sub
sbb
jns
pop
sub
add
pushf
adc
movsb
xchg
add
dec
xor
jecxz
lock
mov
insb
jmp
shlb
cmc
or
scas
out
fidivrl
inc
hlt
sub
mov
mov
dec
fcmovb
mov
outsl
fisttps
sub
add
int
testl
jbe
push
rclb
sub
movsb
jmp
mov
adc
cli
jae
outsb
shll
add
push
movl
adc
xchg
ljmp
pop
mov
scas
les
add
cmc
pop
push
dec
inc
flds
bound
sbb
aaa
sbb
or
and
sbb
loopne
inc
push
add
repnz
js
add
jnp
in
inc
hlt
aas
lock
daa
add
fs
bound
xchg
insb
push
push
mov
pop
xchg
ljmp
pusha
ret
push
sbb
das
or
les
cmp
xchg
adc
jbe
les
rorb
sbb
pop
in
in
add
pop
inc
cmp
dec
sub
sti
pop
pop
pop
pusha
mov
push
push
mov
fbld
push
mov
mov
sahf
cmp
mov
dec
xor
adc
loope
imull
and
loope
sbb
cmpl
dec
cs
or
push
mov
cmp
jo
imul
lods
in
adc
jb
xchg
sub
mov
mov
fwait
add
call
mov
pop
mov
stos
mov
cmp
inc
cli
and
sub
addr16
lock
mov
jnp
iret
and
in
lea
fidivrs
lea
jns
sub
push
stos
in
je
scas
hlt
and
push
int3
fidivrl
push
loop
call
mov
cmp
lahf
popl
insb
and
cmpsl
jno
xchg
enter
in
cmc
xchg
adc
fistpl
cmpsb
je
aam
shll
dec
in
mov
out
in
push
cmc
sbb
mov
mov
or
hlt
scas
jecxz
lods
mul
add
fcomip
add
adc
jnp
pop
movsl
dec
rcll
je
or
add
jbe
test
nop
dec
stos
adc
xlat
sbb
adc
pop
cmpsb
sbb
push
ss
les
or
jp
insl
sub
mov
inc
cmp
pop
xchg
mov
cwtl
cmpsb
mov
mov
push
stc
pop
out
mov
xchg
adc
add
frstor
popf
fmull
fxch
repz
in
xchg
jne
xchg
jo
pop
sti
dec
ljmp
inc
pop
sbb
insl
jno
nop
inc
lea
dec
insb
stos
and
insb
xchg
jbe
cltd
xor
testb
xchg
xchg
stc
scas
fcoms
push
bound
sarl
jmp
xor
enter
ficoms
roll
in
and
imul
cmpsb
fstpt
or
and
movsl
js
popa
call
lock
mov
andb
sub
pop
adc
movsl
xor
das
jmp
lea
pop
dec
and
mov
cmpl
jg
mov
adc
fs
mov
and
std
jl
icebp
inc
mov
sbb
cltd
mov
mov
ret
xchg
lods
repz
sbb
fdivs
repnz
mul
pop
adc
jp
xlat
aaa
xchg
pop
push
mov
shl
mov
outsb
mov
xchg
sbb
jae
in
push
ljmp
add
mov
jbe
sub
sti
xor
adc
sub
or
je
mov
adc
fxch
rorb
mov
xor
or
fisubl
mov
insb
data16
cmpsl
dec
int
or
xchg
imul
jbe
cli
sub
or
mov
adc
cmc
xor
add
ljmp
jns
mov
jnp
or
das
push
inc
mov
push
es
mov
cmp
sahf
jb
in
data16
inc
fcoms
push
cmpsb
dec
mov
sbb
mov
mov
push
lahf
mov
inc
add
jb
bound
xchg
scas
out
stc
mov
popa
adc
push
pop
mov
add
cmc
mov
sbb
test
jb
pushf
fsubrs
pop
add
xor
cltd
popf
jp
sbb
adc
scas
int
andl
dec
aam
pop
add
mov
test
push
outsl
pop
or
stos
or
adc
xor
fistps
mov
test
push
clc
sub
les
adc
ficompl
mov
cmp
sbb
mov
sbb
dec
dec
dec
xor
inc
aas
and
popf
inc
mov
pop
or
dec
popa
daa
sub
or
mov
pop
rol
aaa
out
jo
leave
sbb
sub
mov
fstl
rcll
enter
imul
push
out
addb
clc
clc
gs
aam
sbb
int3
pushf
stos
sub
test
out
lods
ss
scas
test
in
sub
ljmp
cmp
jp
mov
lods
cs
xor
inc
dec
ljmp
pop
jno
outsl
adc
mov
adc
jne
cmp
pushf
mov
sub
push
je
xor
stos
ds
sbb
aam
rolb
pop
scas
sub
mov
pop
addr16
pop
test
pushf
mov
je
mov
mov
push
in
repz
stc
mov
lcall
shlb
addr16
jbe
aam
dec
or
jl
jge
std
xchg
lods
out
xor
cmp
push
lcall
push
adc
test
jno
loope
and
mov
leave
inc
xchg
cmp
sbb
rcrb
out
mov
push
cmp
mov
fwait
out
or
xor
hlt
lods
mov
iret
fstpl
push
adc
gs
movsb
clc
sbb
jno
lea
fistps
loopne
jp
insb
mov
mov
cmp
adc
ret
push
bound
adc
dec
or
and
xchg
decl
adc
insl
out
fmul
xchg
rcl
xor
mov
jnp
mull
ret
dec
push
sbb
negl
mov
add
popa
mov
push
xor
push
fxch
roll
push
repz
ret
ss
pop
mov
sbb
insl
push
sub
adc
fwait
inc
ss
bound
sbbl
je
or
pop
movsl
pop
lds
mov
mov
and
cs
scas
int
or
add
lods
xor
iret
orl
jb
lods
sbb
inc
call
push
mov
rcrl
inc
test
xor
inc
dec
arpl
inc
outsb
sarl
mov
shrb
movsb
push
sbb
sbb
xor
loope
cmp
inc
rcrb
in
adc
xchg
cmp
xor
mov
popf
outsb
rcrb
jmp
xchg
cwtl
push
mov
stos
xor
inc
mov
out
mov
test
clc
sub
mov
jecxz
inc
jno
pop
cli
mov
int3
jae
shl
shrl
leave
jo
notb
push
adc
icebp
lret
sarb
ja
stc
cs
stos
jns
sbb
ret
pop
push
test
stos
push
cmp
xchg
xor
hlt
daa
cmpsb
sub
notl
push
adc
dec
cmpsb
jecxz
and
lock
cli
or
sbb
pop
dec
xchg
pop
lods
je
aam
fists
jmp
mov
stos
push
aad
clc
out
xor
pop
lcall
icebp
shrb
dec
xchg
loop
push
push
lods
sbbb
out
jp
mov
popa
test
arpl
cmpl
xlat
sti
int3
inc
push
int3
sbb
lds
dec
stos
lock
aam
or
dec
or
push
xorl
push
inc
cld
int3
repnz
pop
out
push
pop
xor
fs
push
lahf
mov
jns
adc
aam
mov
iret
add
and
and
enter
stos
imul
data16
pop
rclb
es
sbb
push
xchg
mov
cmp
das
push
fildll
into
stc
movsb
push
dec
cmp
pop
shll
repz
lahf
jo
aas
xchg
frstor
aad
or
adc
ja
fstpt
mov
das
sbb
sub
les
xlat
xchg
mov
pusha
jl
jne
fcoml
std
dec
out
push
mov
aas
xor
lock
push
fnstcw
push
adc
xchg
nop
pop
and
inc
cmp
jno
jb
dec
sbb
jns
adc
test
pop
or
mov
adc
adc
lcall
arpl
push
cmp
ja
dec
insb
lahf
or
mov
adcl
xchg
pop
cmpsb
mov
mov
insb
push
sbb
cmp
mov
sbb
mov
repz
fwait
cmp
clc
inc
movsl
xlat
ljmp
data16
push
cmpl
xchg
or
jle
data16
xlat
out
daa
shl
aaa
cmpxchg
push
dec
stos
jmp
test
inc
xchg
adc
push
lcall
xchg
adc
lcall
xchg
xchg
add
bnd
jne
cmp
adc
mov
popa
sahf
addr16
and
mov
dec
jne
adc
pushf
push
jl
xorl
sahf
hlt
rolb
inc
popa
or
jg
enter
cmp
or
mov
mov
js
mov
aas
mov
in
jbe
cmc
cmpb
xor
in
xor
into
mov
adc
fwait
mov
cmp
push
xor
mov
outsl
pop
out
sub
inc
or
xchg
lahf
lods
add
dec
mov
push
mov
aad
mov
cli
adc
imul
inc
adcb
into
push
jno
idivb
pop
mov
xchg
jbe
imul
xor
ljmp
lods
popf
aam
add
insl
jb
outsb
hlt
loop
aad
inc
mov
lods
pop
rcl
test
stos
mov
mov
xor
ja
cmpsl
loop
lods
inc
cs
cmpsl
xchg
bound
les
jle
mov
dec
call
ret
xor
outsl
sti
sar
cli
jmp
push
adc
data16
mulb
jmp
int3
or
pop
orb
sub
out
and
sbb
icebp
stos
adc
testb
mull
std
cmp
sbb
mov
xor
xchg
loop
inc
fdivrs
xchg
out
push
pop
lds
bound
adc
pop
xor
fucomi
dec
jle
mov
loop
icebp
and
cs
jo
loopne
test
xchg
stc
in
jo
sbb
movsb
mov
sub
xchg
sub
xor
popf
xchg
or
sub
sub
and
vpshuflw
into
and
xchg
inc
popa
pause
mov
sbb
ljmp
rclb
paddw
testb
mov
cmpsb
xchg
sub
fcomi
xor
arpl
xchg
cmpsb
pop
lcall
hlt
mov
sub
xchg
mov
or
mov
mov
lcall
jb
out
inc
cmp
orl
or
push
mov
imul
nop
push
lea
jne
aad
and
mov
jne
lds
sub
jo
fcomp
sahf
pop
pop
pop
cmp
stos
inc
cld
fstps
lret
test
jg
shrl
pop
mov
jge
add
jp
cmp
cmp
outsb
popa
xchg
aaa
fdiv
out
jmp
jl
dec
push
adc
cmp
dec
cmpsw
pop
dec
test
repnz
scas
int
mov
push
ret
pop
pusha
push
and
mov
push
or
sub
shr
push
stos
cmpsb
mov
nop
mov
cmp
iret
xor
lahf
sub
neg
cli
int3
fists
in
std
nop
enter
scas
dec
xor
in
pop
divl
fucom
or
adc
stos
inc
ja
popl
add
push
xchg
lods
push
mov
or
jne
push
fdivr
add
aas
scas
gs
pop
outsb
sub
mov
xor
push
cmpsb
jno
sub
cmp
jp
lret
mov
push
aas
mov
xchg
hlt
jg
cmc
insl
outsb
or
mov
mov
xor
cmp
lds
lahf
inc
adc
dec
int3
mov
aam
stc
ja
dec
faddp
jbe
je
pop
xchg
jp
fnstcw
or
inc
pusha
lret
cld
outsb
jmp
movsl
xor
out
lahf
fstl
or
dec
jne
and
sarl
in
sbb
in
lock
ds
es
mov
enter
mov
mov
sbb
add
cmp
call
je
inc
enter
jge
mov
stc
aad
repnz
mov
dec
sahf
loope
popa
adc
lods
cmp
dec
mov
rolb
test
sub
lock
jne
jbe
adc
lea
iret
jl
rcrl
dec
test
scas
jge
and
addr16
jle
popf
mov
mov
cmp
cmp
push
in
iret
mov
mov
jmp
pop
imull
lcall
pop
divl
sub
flds
jmp
aas
orb
aas
jbe
push
jbe
xchg
std
stc
or
sub
and
in
aaa
sbb
out
dec
cmp
je
inc
adc
mov
inc
or
stc
lret
sub
sbb
std
mov
add
or
add
or
inc
inc
addr16
cmp
jmp
sbb
scas
and
dec
or
fsts
sub
adc
push
pop
add
jo
cld
je
add
sbb
mov
aad
jge
inc
ficoms
aam
stc
xchg
fcoml
dec
xchg
lcall
repz
mov
fs
cmp
outsl
fwait
ror
pop
mov
imul
cmp
mov
out
ds
loopne
mov
pop
inc
pop
jmp
out
dec
xchg
or
shll
shlb
mov
pop
sbb
dec
sbb
adc
adc
jae
addr16
mov
int3
shrl
ds
sti
xorb
mov
mov
cmp
push
sub
outsl
inc
popf
inc
push
xor
and
jecxz
lock
push
xor
mov
or
sarb
or
dec
aad
jp
mov
out
add
push
sbb
fisttpll
xchg
call
dec
mov
mov
push
pushf
sbb
xorl
loop
xchg
sub
push
cmp
adc
stos
or
pop
and
pop
shll
dec
dec
mov
inc
cmpsb
inc
push
fidivl
inc
shrl
sub
outsb
mov
int
loope
cmp
fsts
lcall
jne
adc
inc
imul
push
mov
dec
or
lahf
adc
mov
push
loope
mov
int3
stc
mov
ss
rorl
lahf
pushf
mov
ret
jno
xlat
adc
pop
fistps
cmp
mov
ret
or
and
or
cmp
push
in
sub
in
pushf
push
cld
aaa
lods
xchg
xlat
pop
adc
nop
jl
cs
fwait
push
adcb
int3
jl
dec
loope
fbld
popa
xchg
insb
or
add
or
fldt
pop
mov
mov
shll
dec
into
pop
cwtl
popa
or
xor
push
lock
enter
jnp
dec
jb
push
decb
mov
clc
and
jbe
and
push
ror
fnsave
lahf
sbb
and
inc
lret
scas
mov
mov
adc
call
fcoms
stos
jno
imul
jmp
adc
mov
std
leave
xchg
nop
mov
adc
push
inc
jae
enter
xchg
mov
test
push
jne
repnz
jno
addr16
daa
in
xor
or
push
pop
out
movsl
shlb
ret
push
mov
faddl
inc
je
cmp
rcll
pop
cs
jbe
jne
decl
data16
shr
pop
adc
enter
pop
incb
popa
clc
adc
xchg
adcl
push
jae
xchg
sti
bound
jmp
cmp
mov
mov
xchg
inc
pop
loope
scas
shl
pop
iret
fisttps
adc
nop
dec
add
mov
lods
ja
pushf
lds
popa
mov
icebp
xchg
xor
lcall
loop
dec
int
xchg
sub
loope
lods
insl
pushf
cmp
outsb
test
sahf
scas
pop
pop
fwait
sarb
rcrl
mov
or
jl
iret
jmp
sub
lods
sbb
and
adc
push
lea
mov
into
aaa
inc
out
dec
std
pushf
mov
xchg
stc
inc
push
outsl
aam
xor
aas
xchg
inc
inc
lret
jg
call
pop
lods
ljmp
in
imul
xchg
loopne
lds
xor
push
and
lds
cmp
adc
dec
in
inc
add
loope
xor
mov
hlt
js
cmpsb
mov
loope
mov
push
movsl
shlb
inc
mov
cmpsl
std
or
inc
bound
push
mov
inc
mov
mov
test
add
push
mov
cmpsl
pushf
outsl
imul
jle
out
fs
mov
jbe
loope
xlat
shlb
pop
pop
out
push
pop
jns
test
pop
clc
ficoms
dec
pop
icebp
out
pop
jnp
sub
hlt
mov
cwtl
pusha
cmp
mov
mov
gs
stc
fs
adc
inc
inc
mov
add
push
and
daa
cmp
iret
testl
push
cltd
fadd
jmp
insb
xchg
int3
xor
pop
cmp
pop
nop
mov
add
mov
ficomps
imul
push
add
sbb
inc
or
xlat
or
lcall
jo
clc
loope
dec
sbb
lods
test
es
adc
mov
aad
aam
dec
cwtl
cmp
jo
call
jmp
lods
repnz
cmc
add
popf
xchg
cmp
subl
sbb
andl
shll
mov
ss
mov
ret
loop
addr16
outsb
cmc
inc
sbb
sahf
cli
mov
stc
out
test
in
sub
daa
or
popa
pop
int
sti
jmp
cmp
ret
pop
leave
fldt
pop
mov
and
xchg
add
cs
cld
pusha
jne
sti
mov
jnp
sub
jl
roll
inc
dec
jmp
test
int
mov
sub
xor
inc
out
fs
inc
daa
fdivs
test
arpl
gs
ror
push
fimull
adc
int3
jmp
mov
mov
push
mov
loop
imul
add
sub
mov
mov
push
pop
mov
or
push
xchg
push
imul
ss
call
sbb
adc
inc
dec
repnz
mov
dec
enter
filds
xchg
cwtl
add
cmpsl
sub
dec
or
jmp
pop
mov
movsl
lcall
imul
xor
rep
cmpsl
xchg
mov
jb
mov
ret
in
add
sub
nop
test
inc
in
rol
inc
das
imul
scas
in
scas
sbb
sbb
xchg
sbb
or
lahf
inc
les
xchg
mov
adc
test
clc
sbb
cmp
lock
jb
or
insl
mov
popa
push
xorl
fistpl
sub
mov
inc
push
nop
sbb
pop
cmp
inc
hlt
push
sahf
in
inc
loopne
lcall
and
in
xchg
js
inc
leave
test
xchg
push
pop
int
mov
out
adcl
shl
pusha
addr16
gs
push
shrl
jno
jns
inc
test
leave
mov
shlb
scas
pop
adc
jb
and
add
in
roll
mov
mov
into
loope
mov
pop
enter
bound
ljmp
cmp
lret
jmp
test
ja
xchg
xchg
dec
out
inc
shll
push
adc
inc
mov
xor
cltd
test
push
insb
rcll
stos
adc
push
xor
fwait
jns
cmpsl
pop
inc
sbb
inc
and
cmp
sub
lea
sbb
add
mov
jge
fisubrs
inc
or
mov
test
test
mov
xchg
pop
mov
fcoms
jmp
pop
in
fbstp
mov
inc
js
xor
dec
push
cmp
inc
addr16
push
dec
cmp
sub
sub
adc
sbb
mov
iret
imul
xchg
lahf
loope
add
cmp
loope
clc
xchg
jl
mov
cwtl
daa
repz
cwtl
lods
jo
sahf
add
mov
sbb
pop
pop
imul
add
dec
sbb
cmp
rorb
fsub
lods
push
insb
xlat
mov
sbb
sbb
sbbb
ja
loopne
in
ret
stos
shll
inc
dec
ret
adc
adc
pop
cmp
mov
cmp
jns
add
push
aad
stos
mov
sbb
insb
arpl
test
sbb
aas
andl
sbb
or
push
fbld
xor
popa
pusha
loope
adc
dec
and
fsubr
mov
mov
dec
loopne
sub
adc
push
mov
and
pop
jnp
ret
scas
mov
les
xor
sbb
or
and
push
sbb
add
xchg
push
xchg
or
lock
inc
call
imul
scas
cmc
out
dec
push
xchg
jp
aam
ret
loope
scas
and
sbb
loope
fwait
aas
jno
rorb
mov
inc
push
mov
dec
mov
cmc
cmpsb
shlb
jae
leave
cmp
dec
push
sbb
mov
aad
jp
lods
push
movsb
dec
movsb
mov
decl
adc
imul
orb
jne
mov
mov
cwtl
sbb
add
shl
imul
js
ja
lahf
mov
test
cmpsl
and
sbb
stc
mov
dec
push
out
mov
scas
loop
orl
mov
jp
xor
stos
push
stos
xor
push
int
pop
enterw
data16
pop
aas
xor
popf
lret
es
adc
mov
into
iret
aaa
sub
push
mov
or
sti
inc
mov
jbe
mov
lret
jbe
imul
mov
xchg
adc
orb
rolb
push
and
pop
mul
sub
xor
mov
fdivl
pop
mov
jno
cltd
pop
test
sub
insl
gs
inc
sbb
cmp
xchg
and
popa
mov
loop
pop
sbb
jne
cwtl
mov
daa
mov
daa
push
popa
mov
scas
test
jge
data16
jo
imul
roll
repnz
aaa
mov
mov
jbe
xchg
mov
scas
test
xor
clc
ret
adc
outsb
or
mov
cs
cmp
push
sbb
xlat
lret
shlb
inc
mov
xor
xor
lds
andl
outsl
jno
or
dec
dec
inc
shlb
dec
mov
sbb
fs
and
lret
push
call
or
addr16
mov
cmc
push
repnz
rcl
es
mov
xor
clc
insb
call
fldl
movsl
mov
scas
enter
aad
push
lock
call
in
scas
push
dec
mov
push
xchg
jns
push
pushf
jle
aam
mov
repz
push
repnz
push
test
std
insl
clc
adc
inc
jne
aad
imul
fldcw
mov
cmp
add
aad
lods
loopne
xor
cltd
scas
jmp
imul
les
or
xchg
jb
daa
cmp
inc
js
hlt
aas
mov
xchg
adc
in
test
mov
mov
sbb
pop
mov
push
adc
daa
out
or
je
out
jp
bound
out
gs
or
ja
cli
jp
outsl
popl
pop
inc
rcl
cld
movsl
cmp
push
cmpsl
cmp
scas
dec
jns
mov
mov
cli
fidivl
xor
or
sub
dec
xchg
aaa
pop
xchg
lret
test
nop
and
popf
mov
pop
inc
pop
push
cwtl
fldt
icebp
xor
add
ret
das
jno
mov
sbb
cli
loopne
movb
or
mov
push
movsb
mov
popf
inc
inc
pop
popa
push
addr16
mov
sub
push
insl
ljmpw
loope
les
mov
mov
cmpsl
pop
out
cmp
popf
das
cmp
jo
cmpsb
scas
sbb
xchg
fsub
aaa
push
xor
aam
cmp
stc
mov
addb
ror
ret
and
daa
adc
jg
pusha
xor
pop
shll
sbb
ds
sbb
dec
aaa
or
das
enter
mov
mov
pop
in
lea
les
out
push
imul
or
das
mov
jnp
push
xchg
lods
cmp
repz
mov
or
pop
pop
fdivrs
sti
sbb
out
into
cmp
xchg
push
cmp
jecxz
js
jae
mov
in
xchg
sarb
es
insl
test
mov
xorb
daa
or
xor
and
in
int3
jno
popa
pop
pop
fidivrl
or
and
icebp
dec
push
inc
in
imul
in
jbe
or
inc
es
inc
call
pop
xchg
xchg
into
subl
sbbb
incb
and
mov
idivl
into
xchg
mov
addr16
orl
aas
inc
stos
sub
test
cmp
gs
mov
aaa
mov
xlat
pop
sahf
mov
xchg
mov
xlat
jbe
fisubs
sbb
mov
cwtl
scas
jecxz
mov
ret
xchg
lret
add
add
and
pop
outsb
out
rolb
xor
mull
lods
xchg
nop
push
leave
jg
rcrl
jne
sub
arpl
jge
jns
cmp
add
push
scas
sub
popa
idivb
lahf
insb
dec
jle
fwait
add
pop
push
xchg
aaa
inc
imul
fsubl
jmp
pop
jnp
xchg
inc
cmpb
xor
mov
loop
outsb
inc
lahf
push
sbb
adc
xor
mov
sarl
cmpb
and
out
dec
jecxz
mov
xchg
popa
add
mov
mov
fs
xor
in
sbb
popa
jle
cmp
loopne
jno
fistl
in
das
mov
rol
inc
repnz
push
xlat
inc
ljmp
push
fidivs
dec
xchg
fsub
xchg
loope
add
adc
lds
sub
mov
cmp
fcomip
mov
and
push
adc
lods
fstpt
jl
pop
out
mov
jnp
dec
pop
cmp
jge
mov
inc
fxch
into
test
xchg
dec
push
cs
push
dec
outsb
or
cmp
sbb
cmp
jb
decb
jnp
sub
jmp
pop
push
inc
stc
adc
xchg
shlb
pushf
mov
push
imul
rol
dec
xchg
fidivrs
clc
cld
das
dec
out
sub
inc
in
xor
fsubs
mov
rcr
dec
ljmp
xor
in
adc
sbb
or
inc
test
pop
insb
xabort
add
xchg
adc
addr16
push
loopne
dec
insb
inc
out
jmp
loope
cmp
cmp
jno
inc
xchg
popl
sahf
pop
pop
stos
arpl
add
rol
mov
xorl
std
andl
adc
push
fildll
jg
in
cmp
push
inc
inc
push
xchg
pop
dec
mov
add
pop
cmp
and
pop
ljmp
lock
xor
mov
push
arpl
js
pushf
adc
ss
in
repz
add
xchg
mov
insb
shlb
add
xor
adc
inc
cmp
mov
or
pop
inc
sbb
jae
pop
ja
adc
cmp
fldt
jne
xchg
dec
and
cmp
lret
inc
ljmp
pop
jl
xchg
push
cwtl
jle
in
cmpsl
pusha
lods
out
mov
mov
sbb
sub
mov
sub
lods
aaa
ret
sub
in
test
fsubrs
cli
cmp
movsl
add
bnd
adc
add
add
cmp
pop
stos
xlat
push
in
xorb
sbb
cmp
jne
pop
push
fimuls
and
pop
or
cmp
psraw
lahf
jbe
xor
cwtl
lcall
add
jle
push
inc
adc
popf
xchg
xchg
push
imul
insb
clc
pusha
cmp
adcl
mov
sub
fsts
cmp
pushf
movsb
mov
or
dec
or
loop
lcall
mov
dec
mov
cwtl
loopne
subl
out
leave
jae
xor
lods
stos
xor
sub
push
mov
mov
pop
popf
and
mov
aaa
std
aam
es
daa
add
das
mov
pop
xor
mulb
push
stc
fwait
arpl
into
aaa
daa
adc
jbe
ljmp
fsub
mov
xor
cmp
aam
lahf
jbe
inc
mov
push
jae
mov
in
mov
mov
lcall
sbb
inc
or
adc
mov
nop
or
mov
lret
lods
sub
out
dec
sahf
xchg
cmc
sbb
lahf
jle
test
in
mov
xchg
sbb
mov
adc
sub
pop
lcall
and
sbb
xor
in
pop
inc
in
in
inc
push
test
sbb
dec
into
cmpsl
ljmp
mov
xor
jbe
cmp
push
cmp
inc
test
push
jns
sub
or
cmpb
pop
mov
mov
pop
cs
dec
and
data16
ljmp
pop
outsb
add
pop
jno
popl
std
insl
rorl
insb
addr16
int
dec
dec
in
dec
bndstx
popl
pop
dec
int3
inc
push
and
test
inc
pop
aaa
in
xchg
mov
movsl
jbe
adc
mov
mov
sahf
fidivl
arpl
mov
inc
xor
dec
loop
add
aas
jnp
pop
or
xchg
scas
mov
inc
inc
pop
rcll
stos
pop
dec
insl
mov
cltd
loope
dec
call
sub
inc
push
in
mov
push
mov
pusha
jmp
scas
sub
out
pop
mov
push
arpl
pop
pushf
inc
xchg
xlat
mov
lahf
xchg
int3
shrl
das
jns
add
pop
add
std
iret
les
push
pop
cli
inc
mov
cmp
jbe
push
cs
xor
mov
push
adc
fmull
test
jmp
sub
insl
movsb
add
push
mov
nop
jbe
in
hlt
sub
mov
adc
outsl
aas
push
push
mov
and
cs
mov
into
pop
or
sub
jns
bound
aas
fcom
adc
mov
xlat
fldt
mov
sbb
push
les
movsl
shl
sahf
outsb
push
sbb
icebp
xor
xchg
ja
sar
or
xlat
inc
jb
xchg
xor
and
adc
pop
jge
inc
cwtl
bound
shl
subb
stos
les
sbb
sbb
xchg
xchg
add
les
jbe
pop
and
mov
lock
jg
shlb
cmp
sbb
sub
les
rclb
push
lea
push
adc
xchg
call
mov
ljmp
adc
jge
test
push
mov
nop
sbb
cmc
scas
mov
cmp
or
fnclex
push
and
xchg
push
icebp
insl
sbb
andb
sbb
xor
popf
clc
mov
test
mov
adcl
or
roll
cmpl
test
add
mov
mov
push
les
imul
imul
jno
cmp
clc
cmp
sbb
test
pusha
in
mov
in
aas
mov
xor
adc
lcall
mov
mov
addb
roll
iret
bound
push
push
in
sub
sub
ret
stc
inc
mov
mov
movsb
pushf
add
or
pop
and
xchg
ss
int3
sarb
outsb
push
push
mov
cmpsb
mov
ss
sahf
imul
push
imul
hlt
in
xchg
add
dec
pop
out
mov
ja
pop
mov
jg
add
sub
and
repnz
push
leave
xor
daa
insl
jl
cmp
ficompl
arpl
cmpsb
cmpsb
push
cmp
mov
popa
mov
xchg
fbld
leave
push
ds
pop
adc
imul
jmp
pmaxsw
push
xchg
add
mov
lahf
ds
or
enter
cmp
cmpsl
sub
movd
int
add
hlt
mov
mov
jns
stos
lods
and
loope
cmp
mov
lcall
mov
movsl
rclb
jo
xlat
jmp
mov
xor
ja
sub
incl
cli
jne
push
popf
sbb
push
inc
js
dec
repnz
sub
xlat
cmpsb
mov
repz
xor
jle
sub
and
dec
imulb
pop
nop
mov
bound
inc
bound
inc
jg
and
cltd
dec
add
sub
pop
cmp
imul
pop
mov
ss
push
jg
xchg
sbb
lods
mov
cmp
add
es
imul
fildl
test
or
jg
aad
push
xor
lret
fadd
iret
dec
or
push
fidivrl
cmp
lods
lret
cli
mov
fs
mov
or
testb
mov
cltd
mov
jecxz
xlat
fcmovb
cmp
loope
sbb
into
stos
fisubl
cmpsb
scas
outsb
mov
cmc
sbb
psubusw
and
cmp
and
mov
lahf
imul
sbb
test
push
xlat
sub
jmp
cmpsb
mov
sub
adc
xchg
aam
jbe
mov
jo
adc
cmp
fstpt
mov
movsb
pop
inc
mov
clc
lret
sub
das
and
fsubr
aaa
xor
loopne
test
scas
mov
fisubs
xchg
ret
cwtl
and
not
mov
push
ljmp
out
xchg
xor
outsl
mov
fisttpl
cmp
and
mov
mov
in
jae
lcall
test
adc
sub
or
push
or
add
mov
cmpsl
mov
jg
in
cmp
xor
idivb
cmp
mov
adc
push
dec
sbb
fildll
jb
sub
jge
and
call
outsb
stos
pop
das
xchg
imul
scas
and
int3
and
mov
mov
pop
push
jae
and
mov
ja
adc
mov
xchg
sub
loop
pop
test
push
jae
dec
dec
add
dec
xor
test
iret
inc
cmp
rolb
scas
push
sub
sbb
mov
out
out
in
movsl
add
ss
les
adc
inc
push
mov
pop
gs
dec
add
xchg
jmp
and
ljmp
or
sbb
mov
cmp
aad
push
xor
jmp
cmpsl
inc
add
mov
sbb
iret
pop
mov
and
mov
nopl
loope
add
push
jl
adc
jne
pop
aas
cs
out
jmp
pop
push
into
les
cmp
sbb
push
cmp
push
sbb
cmp
fs
imul
shll
out
add
mov
pop
inc
pop
or
fcoms
cwtl
js
mov
push
pop
pop
sbb
push
and
inc
pop
enter
push
in
push
movsl
sahf
inc
xor
xor
adc
hlt
daa
mov
dec
arpl
xchg
xchg
mov
in
dec
int
jns
in
and
sub
insb
adc
rcrl
ficompl
xlat
mov
gs
sarl
repz
into
addr16
and
xchg
js
sub
rclb
jge
into
jmp
xor
sbb
repnz
pop
pop
push
sbb
mov
ss
push
push
mov
hlt
in
iret
cmp
lcall
or
mov
in
sub
mov
mov
xchg
jns
pop
cli
ret
adc
or
add
pop
add
ret
movsl
adc
hlt
and
ret
adc
out
and
mov
inc
add
pop
andl
in
jge
imul
mov
pop
aas
in
xor
mov
cs
jb
mov
pop
rclb
outsl
lods
jecxz
inc
ljmp
insb
mov
sub
mov
cmp
xchg
aaa
ljmp
and
and
into
pop
mov
xchg
adc
fsubr
xchg
out
push
adc
test
subb
mov
out
vpaddusw
imul
xor
fcoms
push
rcll
mov
repz
add
rcll
xor
xchg
sbb
dec
test
iret
aaa
fistpl
pop
mov
pop
loopne
aad
rcll
push
pop
addl
mov
mov
lahf
std
sbb
fbstp
cmp
inc
stos
das
mov
mov
js
jle
fwait
int
leave
jbe
out
ret
mov
mov
pop
aas
xchg
push
andl
sub
fmuls
lds
jns
adc
sti
mov
xchg
cli
jo
push
daa
xor
lea
jb
inc
sbb
pop
popa
add
inc
sub
cltd
cld
sbb
lahf
push
outsl
in
mov
mov
cs
popa
add
je
and
jae
popa
sub
pop
add
add
and
int
dec
negb
lock
movsl
insl
mov
imul
push
adc
pop
leave
adc
inc
stc
xorl
mov
int
rclb
lret
cmp
xchg
xchg
push
xor
ja
mov
adc
jecxz
idiv
mov
cmp
xor
mov
xlat
adc
cmpsl
inc
in
in
mov
repnz
and
nop
sbb
out
jmp
sar
mov
mov
loopne
dec
aaa
popa
mov
outsb
xor
fstpl
lock
mov
inc
outsb
addr16
movsl
sub
out
mov
lcall
shl
call
push
lods
call
pop
imul
push
mov
gs
xchg
jbe
inc
lods
iret
andb
lcall
pop
int
push
ja
dec
ja
add
adc
pop
inc
pushf
bound
add
jp
std
inc
push
in
inc
insl
mov
test
fsub
test
mov
pop
mov
dec
sub
dec
push
in
fs
loopne
in
adc
fwait
xorb
stos
jmp
out
lods
je
pop
and
outsb
dec
lret
cmc
into
pop
fsubl
add
push
arpl
xchg
icebp
arpl
mov
and
pop
cmpsl
fadd
xchg
lods
test
test
lods
mov
lods
fndisi(8087
xrelease
cld
cld
test
cmp
imul
mov
pop
inc
add
pusha
lea
sar
notb
mov
imul
or
shr
scas
std
add
dec
loop
icebp
sub
pop
fsubrl
loop
adc
dec
subb
mov
mov
cmpsb
ror
scas
push
cld
stos
cmp
push
cmp
enter
sar
in
int3
xchg
mov
in
push
dec
mov
or
test
mov
ret
pop
and
cwtl
in
insb
or
int
mov
aam
and
xor
mov
aad
jns
jle
xor
pop
jb
sbb
dec
lahf
mov
ja
into
sbb
adc
xor
adc
adc
enter
test
js
inc
cmpb
lods
aad
stos
inc
and
push
scas
lods
cld
jae
inc
out
adc
cmpsl
sbb
fiadds
idivl
dec
std
cmp
mov
inc
xchg
int
dec
in
cmp
test
mov
and
mov
stos
mov
xlat
addr16
jge
cmp
ret
pusha
adc
lret
sub
mov
jp
push
out
test
ret
sbb
mov
sub
mov
mov
adcl
lods
lret
lret
sbb
rcr
in
int
int
stos
mov
push
dec
std
mov
scas
push
gs
aad
outsb
hlt
nop
ljmp
das
mov
ds
imul
test
ret
jle
cltd
decl
in
xchg
jmp
pop
jns
dec
xor
mov
enter
mov
sbb
xor
sbb
fisubl
mov
jbe
fwait
es
pop
lahf
int3
jg
add
adc
pop
fiaddl
shrd
shrb
pop
out
mov
pop
dec
mov
test
sahf
mov
repnz
scas
push
xchg
xchg
push
add
inc
push
dec
ja
pop
adc
dec
xchg
outsb
rcl
aaa
lea
fstpl
test
dec
insb
ja
data16
mov
cmc
pop
outsl
es
cmpsl
in
fildll
lock
cs
mov
sub
lret
out
dec
into
cmp
out
mov
cmp
mov
jmp
loop
pop
jo
xchg
add
sub
jp
mov
mov
icebp
lahf
pop
ffreep
jb
pushf
dec
lods
ffree
and
sub
cwtl
push
faddl
pop
lock
mov
aas
jns
sub
stc
adc
mov
dec
insl
mov
ss
rolb
mov
xor
insb
jmp
rorb
sub
clc
roll
sub
pop
mov
mov
gs
xchg
js
test
daa
andl
mov
cltd
fs
fstps
xchg
mov
jae
ss
bound
xchg
lret
xor
and
push
mov
popa
mov
push
push
adc
jno
sahf
setnp
lock
mov
push
xorb
add
mov
dec
mov
ret
dec
mov
or
jp
lahf
mov
mov
xchg
out
cld
repnz
bound
mov
out
sbbb
fwait
ja
mov
scas
jg
bound
inc
insb
ficoml
cmp
or
jp
add
femms
jne
test
pop
into
cmc
dec
popf
mov
lea
push
xor
mulb
das
sub
addb
nop
sub
ja
insb
mov
inc
xor
lret
or
aad
fiaddl
je
xchg
cmp
and
test
mov
cwtl
loope
loopne
cmp
lods
push
sti
pop
cli
mov
out
sahf
sub
daa
mov
orb
sub
adcl
mov
popf
dec
sub
push
cmp
jge
lret
jle
adc
pop
outsl
pushf
inc
dec
lods
stos
or
add
gs
sahf
mov
cmp
jge,pt
cmp
test
mov
mov
sbb
add
fs
mov
fisttps
repz
loopne
stc
insb
mov
sbb
sbb
loop
popa
adc
pop
push
jne
pop
push
imul
dec
ss
and
out
mov
adc
rorl
pop
mov
loop
mov
stos
or
repnz
push
mov
xor
or
outsl
mov
mov
cmp
xchg
daa
fsubrl
mov
jle
dec
ret
shrb
mov
imul
mov
adc
mov
mov
push
stos
loopne
cmp
test
jmp
xor
out
push
xchg
lods
lret
rorb
mov
idivl
cmpsl
pop
inc
mov
repz
pop
shr
mov
cmp
mov
mov
fisubrs
hlt
rcrl
dec
xchg
add
push
mov
sub
aaa
cmp
movsb
inc
pop
xchg
and
pop
lret
mov
nop
dec
ret
or
ret
dec
test
fsub
std
test
jge
dec
popl
test
push
and
mov
loop
mov
mov
mov
cmp
mov
jno
test
in
ds
pushf
arpl
jl
inc
pop
jbe
in
xor
andl
bound
es
flds
incb
jns
dec
popa
jp
icebp
sub
ljmp
sub
cs
adc
les
insl
xor
icebp
add
cmp
stos
sti
add
sti
mov
jbe
je
dec
outsl
icebp
cmc
das
data16
lods
xor
jo
add
inc
loope
lods
cwtl
adc
adc
sub
jb
sbb
cs
mov
pop
mov
inc
adc
lahf
and
js
xchg
ljmp
imul
xchg
and
push
push
and
cs
sbb
js
fcoml
pop
xor
outsb
cmc
pop
dec
cmp
pop
rcr
mov
sbb
xchg
jo
push
fldt
aam
or
call
push
fwait
or
mov
icebp
push
cmp
pusha
dec
and
pushf
dec
or
imul
testl
enter
jmp
cltd
ret
cld
adc
insb
lcall
xor
push
repnz
lcall
jg
pop
repz
stos
ret
sar
sub
jmp
push
shl
push
cmpb
es
xor
push
daa
mov
dec
or
dec
out
cmp
cmp
mov
pop
js
jae
xor
xchg
popf
div
lock
lcall
dec
jbe
and
mov
xchg
xor
fldl
sbb
lock
cmp
dec
pop
inc
es
xchg
mov
int
out
outsb
add
mov
test
decb
int
pop
adc
adc
movsl
into
jns
push
mov
jae
ficompl
jne
idivl
insl
testb
and
pop
push
and
push
in
sbb
inc
stos
scas
inc
xor
fisttps
sbb
push
test
push
scas
adc
mov
jl
jae
mov
or
sub
sub
rolb
sub
js
iret
pop
push
sub
subb
mov
and
arpl
ror
ja
mov
fcompl
lods
push
fwait
sub
in
out
add
and
xor
js
mov
in
fisubl
out
loope
inc
mov
insb
jb
out
cmpb
imul
push
push
pop
sbb
lods
cmp
push
jp,pt
pushf
or
push
mov
lds
js
adc
inc
pop
in
fdivl
xchg
rcrb
xchg
movsl
mov
lea
jge
mov
xchg
or
or
adcl
pop
lods
lock
clc
jp
pop
dec
fidivrs
sub
out
push
xor
dec
jl
fcomip
movb
jl
sbb
push
leave
js
lcall
push
jge
fimull
clc
leave
stc
push
sbb
or
js
jae
out
outsb
loope
xor
adcl
lret
aam
sbb
adc
pop
inc
sar
sub
mov
push
fs
sbb
sbb
mov
adc
inc
add
hlt
xchg
icebp
mov
dec
xor
push
or
add
cli
jne
js
repz
ljmp
jg
and
pop
in
ss
adc
movsb
add
mov
out
enter
jne
push
push
cmpsb
mov
jns
jb
lods
add
push
cmp
inc
jg
mov
adc
adc
inc
mov
iret
jmp
lea
insl
cmc
les
cmc
xlat
cmp
adc
les
dec
mov
insb
test
or
sbb
dec
inc
les
inc
cmp
inc
inc
scas
cmpsl
mov
std
jbe
add
mov
scas
xchg
fcmove
mov
lock
and
pop
imull
mov
mov
xor
das
cmpsl
xchg
mov
mov
arpl
or
movsb
cmp
test
test
xchg
adc
data16
cmp
jnp
inc
xchg
into
xlat
lock
imul
fwait
les
in
adc
gs
and
jle
insb
mov
push
lock
insl
push
ret
gs
cs
inc
xchg
in
in
sbb
repz
pop
int
fs
les
xorl
push
fwait
fwait
orl
jnp
xchg
dec
popa
loopne
or
push
cmp
pop
mov
mov
jno
mov
push
pop
xor
imul
pop
sbb
xor
push
pop
sub
mov
push
jecxz
dec
mov
push
push
in
inc
loop
repz
mov
push
scas
mov
xor
pop
adc
mov
sbbb
mov
xchg
iret
inc
shrb
push
mov
cmp
hlt
ja
arpl
shlb
pop
jns
and
add
cmp
subb
shl
js
rcrl
jnp
fnstenv
jno
jmp
cltd
jno
adc
xchg
aaa
popa
mov
lods
mov
mov
leave
dec
fstps
sti
push
insl
mov
or
mov
xchg
xlat
insb
cmp
xchg
and
cli
cmc
or
jmp
inc
jns
adc
sbb
sbb
mov
push
mov
fs
pop
mov
adcb
add
lock
push
mov
icebp
dec
add
push
mov
rolb
iret
mov
mov
pop
fbld
jbe
xor
cmp
ret
pusha
mov
mov
test
sub
shl
pop
mov
xchg
cmp
cmpsb
xchg
push
out
dec
or
jle
fldenv
lret
or
mov
lret
fsubrs
dec
mov
or
dec
jp
add
test
jno
shll
push
aad
xor
jns
outsb
inc
cmp
mov
ds
ja
sub
les
insb
adc
cmp
aaa
in
jle
fnstenv
fucomi
in
or
sub
dec
icebp
popa
rol
sbb
sbb
or
scas
hlt
sbbl
rcr
inc
ret
stos
imul
add
inc
lea
sub
mov
xor
xchg
pop
inc
push
xchg
pop
adc
jnp
ljmp
sbb
push
loope
pusha
arpl
mov
or
rorl
js
sub
push
push
jno
and
and
hlt
test
push
pop
mov
mov
dec
loopne
pop
rolb
cmpsb
and
add
stos
shl
pop
insl
adc
add
add
outsb
xlat
xchg
add
lahf
sub
mov
mov
sbb
into
mov
jbe
push
dec
rorb
xchg
push
aas
or
sub
dec
mov
jl
mov
sbb
dec
xor
sub
push
mov
sub
sub
sub
mov
in
dec
jl
mov
frstor
loop
or
jg
xlat
pushf
es
jmp
enter
mov
jg
int
aad
movsb
xor
aad
xchg
fidivs
mov
dec
cmp
sub
cmp
mov
xchg
xor
enter
repnz
or
xor
mov
adc
add
ja
adc
hlt
jne
dec
in
mov
aad
jae
nop
sbb
aaa
push
sub
in
cmp
lret
add
sbb
daa
std
pop
fsts
loopne
xchg
mov
divb
ret
lcall
in
adc
cmpl
add
sub
mov
enter
push
insl
bound
adc
rcrl
enter
add
pusha
aam
pop
fnstcw
loopne
dec
mov
inc
lret
hlt
jp
push
dec
ljmp
lret
adc
push
add
lret
mov
and
movsb
push
loop
sub
aam
or
lret
mov
dec
mov
pop
xchg
jo
ja
out
sti
add
jae
dec
push
cmc
movsb
jnp
add
jle,pt
fs
or
inc
inc
mov
push
sub
push
sbb
xchg
cmp
das
xchg
jl
aas
shr
xor
xchg
dec
sbb
cli
or
pop
jge
inc
movsb
shlb
out
cld
jle
mov
jns
lret
sub
dec
pop
jl
aas
mov
aad
mov
inc
adc
xchg
adc
xor
lods
push
js
pop
adc
in
or
or
or
scas
cmp
jo
cmpsb
and
xchg
pop
inc
rcr
popa
and
aas
repnz
adc
idivl
mov
mov
stos
iret
jl
and
mov
and
jmp
adc
sbb
imul
int3
xchg
outsb
pop
jae
sbb
mov
inc
and
add
out
cwtl
push
cmp
sbb
push
mov
aam
xor
jg
rolb
dec
sbb
gs
cmp
fildll
cmpsl
out
sub
xchg
stos
jecxz
cmp
icebp
and
dec
push
in
pop
imul
xchg
jb
xchg
fsts
and
fbstp
mov
push
fildll
data16
loopne
xchg
xchg
adc
push
jmp
shl
sbb
dec
dec
add
add
pop
popa
cmp
sbb
int3
in
mull
dec
mov
and
push
ljmp
into
nop
int
jle
jmp
lahf
clc
or
clc
pop
ret
cmp
in
jae
addl
nop
and
mov
rorl
xchg
and
movsb
pop
pop
jo
and
outsb
in
lret
mov
lods
mov
clc
aaa
arpl
jb
add
fdiv
xor
jl
mov
leave
and
nop
jp
dec
mov
mov
or
inc
dec
cmp
sar
pusha
xchg
nop
or
lret
xchg
ficomps
loop
in
into
push
popf
adc
add
andl
jl
jno
mov
out
jle
test
aas
add
or
in
in
jge
xor
lret
mov
adc
xchg
xchg
pushf
mov
xchg
ret
test
jb
sbb
jle
stos
aaa
icebp
inc
fidivrl
xchg
cli
jp
arpl
std
sub
jmp
mov
or
cmp
ljmp
inc
daa
dec
stc
std
ret
sahf
add
dec
cmpsl
sbb
faddl
js
push
inc
aas
out
scas
inc
mov
adc
stc
jl
mov
insl
shrb
aaa
push
dec
in
in
js
inc
cli
xor
xchg
sub
mov
aad
cmc
inc
cmp
inc
aam
mov
negb
or
mov
ljmp
test
add
add
sbb
xchg
leave
fcmovnbe
popf
imul
std
fs
fisubrs
cwtl
jae
enter
or
icebp
mov
out
testb
dec
ret
sbb
ljmp
push
popa
xor
mov
or
cmc
mov
mov
adc
pop
cmp
pop
cmp
das
xor
dec
fcomip
jg
inc
adc
add
xchg
sti
add
push
inc
lods
add
movsb
sbb
stos
jbe
lods
popl
xlat
sub
les
xchg
loope
push
and
push
pusha
sarb
int
cltd
or
loop
int3
out
into
shlb
jbe
fisttpll
sbb
ljmp
push
add
jns
jno
popf
sbb
jmp
femms
xor
mov
jnp
loope
das
cld
dec
rcrl
scas
das
dec
stc
dec
pop
pop
sub
xor
cmp
and
jne
push
sub
xchg
push
stos
aaa
jl
hlt
jne
dec
mov
push
add
ds
xor
jmp
push
test
out
push
cmp
sahf
mov
and
xchg
pop
scas
add
lods
stos
pop
clc
push
or
add
dec
pop
clc
fld
inc
cmp
pop
dec
scas
in
xchg
dec
call
cmpb
fwait
jecxz
add
aad
inc
or
repnz
lret
jb
mov
mov
push
leave
xchg
mov
mov
push
pop
and
dec
mov
test
mov
lcall
inc
pop
sub
fwait
sub
sbb
lods
jnp
bound
fldl
