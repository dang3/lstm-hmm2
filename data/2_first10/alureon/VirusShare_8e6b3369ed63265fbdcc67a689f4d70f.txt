push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
out
das
adc
inc
icebp
test
dec
es
adc
xchg
xor
adc
pop
or
pop
fs
sub
lret
mov
lcall
or
orl
fiadds
add
sti
push
cmp
jns
pushl
aas
cltd
popf
push
aaa
jg
and
hlt
mov
ljmp
push
daa
mov
stos
stos
and
in
int3
lcall
add
xchg
sbbl
popa
repnz
pop
push
mov
xor
imul
mov
sbb
mov
loop
fdiv
add
test
data16
stos
dec
cmp
in
xchg
cmp
mov
jb
add
xchg
add
lock
fcomip
scas
lcall
aas
cli
fsubp
pop
jmp
push
imull
and
aas
pop
sub
add
cmpsb
pop
push
dec
sub
negl
mov
shrb
stos
lret
cmpsb
inc
jecxz
xchg
jae
inc
sub
pop
add
sahf
iret
mov
add
add
adc
iret
test
js
sbb
scas
insb
sub
jl
sub
pop
clc
jno
pop
mov
cmp
pop
sub
popa
jno
mov
pop
ss
and
roll
or
jmp
inc
cmp
or
test
lods
dec
outsl
sbb
ja
push
mov
add
jbe
mov
and
imul
xchg
mov
clc
cmp
leave
xlat
scas
rolb
add
mov
lock
jmp
mov
or
pop
pop
out
inc
cmp
sbb
cmp
xor
sub
or
fcoms
call
outsl
cmp
dec
fisubrs
mov
jbe,pn
hlt
rcr
imul
adc
jl
xlat
xor
sub
mov
test
mov
push
pop
or
add
cmpsb
mov
mov
sub
lret
xor
xchg
fistpll
sbb
outsl
popf
cmc
xor
addr16
es
jp
push
out
int
and
rcl
or
pop
aas
pop
adc
dec
fadd
popf
shl
jle
cmp
inc
adc
adc
add
stc
in
aaa
stc
or
lahf
leave
and
int
fsts
mov
stos
mov
fadds
add
pop
sbb
arpl
mov
cmp
aaa
cmp
aaa
out
xchg
dec
ljmp
mov
xlat
in
mov
sbb
inc
adc
adc
inc
mov
pop
mov
xchg
mov
fimuls
push
sahf
xlat
fisubs
jmp
pop
das
mov
jl
daa
outsb
or
cmp
cmp
lcall
xchg
std
cli
dec
mov
push
mov
nop
popa
aad
jp
sbb
add
pushl
lea
xorb
fdivs
inc
add
clc
xchg
std
push
loope
outsb
add
inc
sub
jp
outsl
xor
flds
rcrl
pusha
popa
test
jns
push
bound
and
dec
popf
sbb
scas
or
add
push
iret
push
data16
mov
mov
cmpsl
cmp
icebp
lret
add
mov
add
pushf
mov
pop
xor
sub
in
push
insl
push
js
mov
pop
jbe
fisttpll
mov
outsb
in
aaa
lcall
stos
xor
adc
es
sub
pop
xor
mov
xchg
fdivs
insb
in
add
inc
std
xchg
dec
add
and
add
add
push
sbb
xchg
jne
and
adc
mov
cmpsl
sbb
add
xchg
push
fwait
out
stc
push
ljmp
cmp
movsl
rclb
outsb
jo
xchg
fcompl
lea
sbb
cmpsb
gs
leave
mov
mov
sbb
inc
ljmp
iret
xor
add
jae
sub
lock
cmp
inc
mov
pop
rorb
mov
mov
sbb
jp
dec
push
cs
cltd
lret
or
pop
in
jl,pt
add
adcl
dec
sub
xor
imul
or
cmp
scas
ja
push
insb
jle
adc
xor
or
aad
xchg
cmp
push
imul
adc
in
shrl
pop
test
sbb
shl
sub
pop
js
mov
dec
push
or
jp
add
pop
insl
shrb
fiaddl
inc
roll
das
pop
xor
inc
add
fisubrs
pop
pop
sub
jp
into
sbb
out
sub
inc
loop
jmp
mov
popf
jmp
dec
push
stos
pop
daa
push
push
daa
outsb
sub
daa
cmpsb
in
in
inc
inc
xor
idiv
and
jnp
add
adc
cmp
add
das
jl
push
mov
std
roll
add
mov
add
and
leave
mov
hlt
cmp
sbbl
xlat
repz
loope
filds
arpl
jl
sub
call
test
fstpt
and
leave
js
jp
pop
sub
push
push
outsl
inc
mov
dec
jns
nop
cmp
sti
lock
cltd
or
hlt
test
jle
inc
jmp
in
ds
sub
pop
lret
jmp
mov
xor
mov
push
xlat
lock
inc
flds
cmp
mov
xchg
sub
add
mov
ss
adc
adc
loop
shl
mov
xchg
inc
push
rorl
loop
mov
mov
mov
jo
std
fndisi(8087
mov
pop
xchg
and
or
mov
push
aad
pop
sub
push
lea
lea
xchg
mov
iret
fistpll
dec
xor
add
add
pop
xor
jecxz
push
adc
jp
jne
dec
xorl
sub
cmp
inc
dec
xor
mov
fadds
pushf
aad
push
xchg
sbb
mov
lock
ljmp
nop
mov
sbb
adc
ficoms
cmp
pop
mov
add
sub
pop
jno
shll
inc
ret
sub
add
cwtl
sub
insb
push
imul
xchg
cmpsl
lret
out
outsl
add
out
cmp
int
add
inc
adc
add
xchg
jb
add
lret
movb
push
cmc
and
mov
in
and
dec
push
push
cmp
mov
xlat
mov
out
or
cwtl
xor
inc
adc
pop
sbb
call
js
test
add
imul
mov
jg,pt
into
add
push
cmp
add
in
xorl
data16
rorb
ucomiss
push
icebp
xlat
loopne
lcall
xchg
mov
inc
cmpb
adc
xchg
xchg
push
jmp
inc
lods
pushf
sbb
ss
inc
pop
dec
cld
out
loop
repz
mov
enter
jmp
and
lea
sbb
fcomip
clc
fcmovnu
mov
fisttpll
fwait
test
fildl
add
push
push
dec
jl
adc
lahf
jnp
loop
test
push
imul
add
adc
push
jns
out
jl
jl
dec
scas
les
leave
sbb
mov
xlat
push
loopne
stc
push
lcall
add
lock
fiadds
fs
sub
add
cmp
add
sbb
loopne
lds
sub
fsub
sbb
in
push
push
hlt
fwait
cmc
sub
push
mov
in
add
addr16
mov
roll
cmpsb
push
pop
mov
jecxz
aaa
xchg
push
mov
mov
add
outsb
add
fdivrl
sub
add
outsb
xchg
cmpsb
inc
test
add
push
sti
dec
cmp
sbbb
mov
fists
mov
ja
jp
lods
in
or
lret
inc
dec
pop
xlat
int3
cmp
inc
dec
ja
mov
inc
or
jb
mov
cs
push
and
xor
stos
arpl
sbbl
adc
pop
scas
fistpl
mov
and
inc
fucomip
jb
adc
adc
insb
adc
cld
daa
testl
lret
fildl
inc
add
inc
mov
dec
pop
popa
js
sub
inc
ljmp
cld
pushf
lock
jg
orb
cmp
push
xchg
add
in
fs
jmp
push
dec
or
insb
add
mov
xchg
xor
xchg
test
push
jae
sub
jb
orl
push
lods
icebp
mov
mov
ret
ss
lds
add
add
adc
es
pop
fstl
sbb
call
aas
xor
sbb
insb
adc
mov
mov
dec
fldt
sub
push
mov
les
bound
inc
outsb
nop
and
testl
push
push
pop
mov
xchg
int
nop
xorl
pop
dec
adc
inc
adc
sbb
pop
ss
repz
out
cmpsl
daa
pop
out
incb
mov
cmc
mov
frstor
add
mov
fistl
jb
xchg
ds
mov
jge
xor
mov
ss
and
mov
sbb
sub
add
inc
cs
or
and
xchg
outsl
js
cltd
cmp
loope
je
iret
mov
rorl
adc
or
pop
mov
and
add
test
xor
cs
xchg
test
mov
or
add
and
adcl
ss
mov
pop
imul
adc
mov
cmp
and
xchg
push
or
push
adc
stos
ficompl
pop
jne
shr
ret
jp
std
lock
aam
sub
jge
mov
bound
add
add
outsb
cli
sub
push
aas
xor
adc
xor
fildl
call
cmpsl
dec
pop
jle
mov
mov
scas
gs
adc
jle
jae
sbb
mov
xchg
and
divb
lcall
shll
addb
fldl
dec
jp
push
je
fdivrl
push
dec
inc
adcb
add
fcompl
mov
dec
cmp
int3
adc
inc
cmp
js
push
lods
dec
imul
addr16
mov
daa
xchg
vaddsd
es
cmp
add
xchg
mov
aaa
mov
int3
xor
sub
test
push
lods
jne
jbe
add
pop
jle
sbb
les
in
pushf
loop
dec
xchg
cltd
ret
sub
pushf
xchg
sub
aas
int
sbb
rcrl
cmp
or
fcoms
push
or
cmpsb
das
xchg
sbb
xchg
and
cs
adc
mov
xor
adc
neg
push
xchg
mov
ret
ljmp
sahf
xchg
jle
pop
mov
loope
in
xlat
sub
add
add
hlt
pop
mov
inc
add
cld
sub
into
lods
and
cmpsb
push
ficomps
imul
out
pop
fwait
repz
lret
pusha
icebp
cmpsl
roll
push
xor
or
cmp
inc
insl
cltd
test
adc
sub
out
and
cltd
test
popf
daa
push
sub
les
insl
addr16
inc
das
iret
mov
sub
aam
aam
mov
xchg
xchg
cmpb
sbb
inc
or
ss
add
add
mov
pop
xchg
sub
fisubrs
and
ss
cmc
inc
add
mov
out
repnz
repz
mov
loopne
shl
pop
xchg
divl
cld
sub
cmc
push
popf
test
nop
xorb
arpl
cwtl
jle
lahf
lret
jae
pop
add
mov
adc
leave
cltd
pop
call
das
pusha
rcrb
jmp
mov
xchg
jmp
add
mov
mov
cmp
inc
sbb
mov
fisubrs
das
fimuls
jne
xor
test
aas
out
or
insb
filds
inc
dec
pushf
sahf
cmc
cmp
mov
inc
xchg
jno
add
sbb
fcoms
push
jbe
or
dec
adc
xor
bound
mov
dec
enter
mov
add
or
out
mov
les
and
les
cmp
push
mov
fiaddl
mov
imul
daa
int
inc
movsl
push
inc
dec
outsl
mov
mov
mov
orb
push
xchg
inc
mov
sbb
loopne
outsl
pop
push
sbb
sbbb
clc
xlat
add
push
loope
jne
fldenv
pop
je
jae
dec
pusha
jnp
xchg
in
fnstsw
mov
lds
fsubrs
rclb
ss
xchg
pusha
aaa
add
out
xlat
rcrb
pushf
push
cmpsl
pop
loop
int
push
mov
push
xor
or
add
mov
mov
pop
test
sbb
and
fisubrs
push
dec
inc
pop
inc
mov
sub
add
pop
in
cld
sbb
lret
xchg
dec
pop
enter
adc
sar
push
push
jnp
jne
push
pop
mov
add
adc
mov
sub
inc
inc
jle
dec
jge
clc
push
decl
lret
hlt
sbb
lods
pop
stos
je
inc
loop
das
jnp
movb
xor
scas
aad
adc
jle
mov
jmp
test
bound
sti
jb
dec
outsb
loope
xor
insb
adc
push
pop
dec
and
jge
loopne
ljmp
popf
and
pop
sbb
popl
add
mov
lcall
adc
cmp
cld
addr16
mov
and
dec
aam
lcall
and
cli
pop
ret
pop
cmc
or
ds
int3
popa
int3
fcompl
sub
lahf
or
aaa
repz
loope
lcall
mov
xchg
pop
insb
mov
lahf
pop
outsl
pop
pop
and
xor
inc
rcrl
pop
xchg
add
adc
add
je
jl
adc
arpl
inc
je,pn
or
pop
add
sahf
test
cwtl
repz
mov
cmpsl
movsl
test
repz
scas
cwtl
cmp
lods
push
or
cmc
icebp
and
inc
nop
enter
popf
sub
les
ja
mov
and
or
rorl
leave
add
fdiv
adc
adc
cmp
adc
cmc
mov
jo
pop
scas
icebp
xor
fdivs
xchg
nop
mov
arpl
jno
dec
xchg
and
repnz
jne
rcll
and
stos
scas
pop
cltd
pop
les
cmpsb
push
call
rcr
repz
rorb
lods
jle
das
mov
push
and
add
add
cmpsl
dec
sub
push
lds
outsb
push
mov
insl
ficompl
fdivl
or
and
aas
xchg
in
xchg
testb
in
xor
push
inc
fwait
push
jae
in
mov
gs
lcall
pusha
xchg
loope
xchg
rcll
sti
jnp
aam
int
lods
push
xchg
add
dec
cmp
add
add
mov
pop
ret
sub
insl
mov
jmp
push
xchg
xlat
mov
jbe
lea
out
outsl
mov
data16
xchg
dec
repz
adc
dec
pop
mov
adcl
jmp
and
outsl
leave
sti
cs
cmp
push
ficomps
mov
cmc
xor
cmp
cmp
es
lods
push
add
int
addr16
mov
not
pop
aaa
xorl
add
add
dec
mov
dec
pop
cmp
lret
cmp
add
cmp
stos
inc
inc
inc
popf
out
fwait
fwait
inc
jns
stc
jno
mov
adc
jl
loopne
and
outsb
jge
pop
add
mov
push
outsb
mov
cmp
leave
stos
and
jno
adc
add
in
shr
and
das
lcall
outsl
std
sub
fcompl
filds
mov
or
add
mov
lock
mov
bound
jmp
add
sub
jb
pop
mov
xchg
sbb
and
mov
add
jae
fimuls
cmpsl
insl
push
hlt
popf
pop
out
lods
dec
mov
lret
fnstsw
mov
cwtl
add
pop
dec
push
or
les
xchg
int3
cld
popf
jno
ficoml
push
jge
push
mov
pop
mov
int
push
push
and
xlat
stos
cmpl
daa
push
and
ljmp
adc
pop
pop
cmp
cmpsb
sbb
les
pop
sub
mov
into
pop
call
xchg
movsl
in
mov
ljmp
mov
xchg
repz
mov
sbb
cltd
add
pop
pop
daa
dec
jno
dec
in
dec
fstps
aad
inc
stc
xchg
push
sbb
adcl
add
add
dec
mov
jp
subl
stos
and
insb
mov
addr16
pop
cs
aam
jns
fdivs
je
or
sbb
out
xlat
add
dec
mov
idivb
fisttps
mov
shlb
fnclex
xor
adc
add
jecxz
mov
xchg
stos
int
mov
and
pop
lcall
cmpsb
cmc
ja
xchg
ret
ror
pushf
daa
mov
js
jle
add
stc
cmp
iret
cmp
inc
mov
mov
and
jecxz
adc
loopne
xchg
in
aaa
push
jne
rorb
hlt
addr16
int
cmp
fwait
aas
xchg
push
xchg
incb
xchg
sahf
add
mov
ret
fcoml
aas
enter
scas
mov
cld
and
cld
addr16
dec
clc
inc
stos
and
test
loopne
fisttps
push
dec
xchg
mov
ds
xchg
mov
adc
jne
sbb
sub
add
cmpsb
cltd
sti
ret
fisubl
fldenv
bnd
pop
stc
ds
push
cmp
pop
enter
mov
push
leave
dec
or
clc
shl
mov
mov
push
pop
insl
loopne
xorb
jae
aas
idivb
out
jbe
mov
test
cmpsb
ret
movsl
inc
jb
test
pusha
test
pop
fs
cmc
dec
add
add
mov
and
lcall
out
stc
pop
fdivrl
lcall
clc
insl
pusha
movsb
int3
xchg
pop
mov
loope
dec
mov
nop
or
pusha
jo
xchg
push
out
ja
inc
sub
movsb
ficompl
dec
loope
sbb
shlb
nop
dec
shll
cltd
pop
rcrb
test
and
bnd
xchg
push
aaa
dec
imull
repnz
dec
lods
add
push
or
xchg
add
and
test
les
adc
jp
add
sti
jbe
js
iret
ds
pop
xchg
xchg
inc
lea
or
imull
bound
and
inc
ret
gs
fs
aad
jo
hlt
or
pop
cwtl
mov
xor
mov
nop
repnz
xchg
lret
add
push
repz
push
jne
into
jb
cmpsb
xor
jo
sbb
or
add
jbe
insb
es
bound
stc
jmp
rol
mov
imul
out
mov
roll
and
cmpl
inc
xchg
fiaddl
jo
lds
lea
add
pop
mov
repz
or
jns
mov
int3
in
fstpl
jbe
sarl
jb
addr16
orl
lret
lock
inc
fldl
lds
test
rolb
stos
add
add
pop
mov
cltd
inc
insl
push
push
icebp
mov
pop
or
push
cltd
shlb
test
lret
leave
aas
add
lods
fistps
xlat
sbb
push
pop
mov
push
stos
outsb
dec
adcb
lret
icebp
aas
xchg
in
xor
xlat
and
nop
add
repnz
shll
fwait
xchg
fidivl
out
test
ja
add
cmp
lds
jle
add
stc
cmpsb
jle
in
pop
mov
add
data16
fldcw
lahf
ja
mov
test
shrl
ja
cmp
imul
or
outsb
sbb
xlat
inc
pusha
aaa
and
fisttpl
jae
inc
dec
mov
sbb
add
lods
in
xchg
dec
cmp
xchg
sub
int3
fldl
jae
dec
sbb
pop
movl
outsl
jge
adc
leave
lea
xor
or
or
divb
test
mov
add
leave
popa
test
loop
dec
xchg
das
cmp
arpl
push
xchg
imul
push
push
cmp
mov
sbb
mov
das
xchg
and
add
cmp
sahf
aad
es
cmc
pop
pop
sub
add
stos
std
add
lret
lcall
fdivr
in
insb
in
outsl
mov
unpcklps
xchg
inc
mov
dec
inc
movsl
cmpsl
in
or
mov
adc
call
negl
aas
mov
dec
inc
add
cmpsl
stos
mov
addr16
mov
shr
push
mov
shll
jbe
sbb
pop
mov
outsb
sub
ret
outsb
int3
pusha
out
lock
add
into
jns
jmp
lods
mov
insl
nop
pop
fs
jno
cltd
in
sbb
notb
mov
and
lcall
or
cmp
arpl
stc
push
sub
inc
scas
shlb
mov
xor
out
hlt
rolb
xor
les
daa
or
rcrl
push
stos
bnd
mov
mov
out
mov
cmpl
loopne
lret
inc
jmp
inc
mov
repnz
add
pop
lret
out
add
cmp
rcrb
sbb
add
xor
push
ret
notl
inc
in
repz
xchg
fisttps
pushf
mov
lret
push
or
jnp
rorb
int3
fisubrs
xchg
sarb
sub
dec
popf
mov
xor
fstpt
pop
adc
jp
mov
add
jmp
mov
sbb
cli
dec
or
xor
push
into
cmp
mov
out
test
pop
cwtl
or
lds
outsl
leave
cmc
test
xorl
push
iret
mov
pop
lods
fiaddl
movsb
push
cmpsb
xchg
pop
add
mov
out
insl
das
in
dec
lock
adc
push
int3
lcall
cmp
loop
mov
repz
cltd
push
scas
es
inc
push
dec
lret
aad
scas
cmpsb
shrb
ja
xchg
mov
add
movsb
push
ds
jb
les
js
psrlq
sub
adc
popf
mov
test
inc
xchg
loope
arpl
xchg
imul
sub
cmp
push
jle
jbe
stos
ud2
or
adc
stos
adc
aad
test
cmp
loop
adcb
sti
pop
andb
loop
pusha
jne
or
repz
cwtl
add
add
add
add
dec
jmp
btc
out
xor
xchg
sbb
jl
fstpl
adc
adc
pop
jg
arpl
hlt
jnp
xchg
cmp
jns
sbb
fiadds
inc
sub
test
insl
and
xchg
or
xor
mov
adc
mov
pushf
cltd
and
mov
js,pt
je
js
mov
cld
test
fxch
dec
mov
sub
stos
mov
pusha
call
adc
xor
push
push
push
cmpsb
cmp
dec
testb
and
or
lcall
dec
jmp
add
xor
or
adc
lods
sbb
cli
popf
add
rcrb
stc
push
xor
addr16
fs
out
add
test
add
movsl
dec
or
andb
push
xor
lcall
adc
xchg
jne
out
call
cmp
pop
cltd
sti
mov
and
bnd
or
jmp
sbb
sbb
jmp
add
jb
cmp
cmp
cmc
test
adc
daa
rolb
jg
das
sub
inc
je
daa
roll
jbe
or
mov
shll
outsb
fstps
je
jns
pop
in
sbb
sub
pop
dec
push
fwait
pop
and
rolb
cs
inc
fildll
addr16
xchg
test
push
cmpsl
push
shlb
inc
push
dec
lret
xor
js
dec
and
rcrl
mov
lods
sahf
jbe
add
or
mov
push
fildl
lods
ret
jae
xor
inc
pop
in
add
mov
add
jl
xchg
bound
sbb
jge
icebp
frstor
cmp
gs
and
add
lret
adc
shl
add
or
es
das
jno
inc
adc
pushf
daa
jns
cmovo
mov
jecxz
sbb
dec
add
daa
lea
jae
jnp
std
xor
popa
adc
xchg
je
sbb
add
push
ljmp
popf
mov
jmp
cmpsb
sbb
xchg
inc
jge
mov
ja
js
jb
jo
sbb
std
loope
nop
xchg
lret
dec
add
dec
dec
popa
movsl
dec
jg
adc
andb
stos
mov
inc
pop
movsl
adcl
lret
test
aas
incl
cmp
stc
movsb
pop
xchg
jecxz
push
mov
lds
popf
mov
fcomps
sbb
push
sbb
testl
push
and
cmp
inc
js
fsub
in
cmc
aaa
gs
test
xchg
test
xchg
addr16
pop
add
arpl
xchg
loopne
mov
imul
mov
mov
out
pusha
adc
mov
fdivs
ss
test
inc
cmp
add
scas
adc
lods
mov
push
dec
call
push
pop
pop
push
in
cwtl
pop
rclb
cltd
sti
lods
push
repnz
loop
es
cld
in
sbb
jmp
icebp
add
cltd
mov
and
jmp
aad
cmp
mov
stos
adc
sbb
jnp
lea
mov
sbb
rcr
mov
adc
andl
mov
pop
lahf
sub
test
jp
cmp
push
stos
mov
cltd
mov
adc
jb
xchg
cmp
xor
pop
adc
xchg
out
clc
imul
int
or
add
subb
loope
inc
clc
push
add
add
andl
arpl
xor
adc
and
ret
cmp
fs
shrb
icebp
out
sub
clc
insl
and
fisubrs
xchg
xlat
stos
push
loop
nop
and
or
loope
imul
and
add
cmp
out
pusha
mov
sbb
sub
pop
in
cmc
arpl
or
hlt
loopne
cmp
cmpsl
testl
rclb
imulb
fadds
ret
pushl
jmp
pop
push
xor
sub
cmp
push
xor
push
outsb
jle
jb
and
adc
dec
pop
into
orl
test
ret
push
xchg
pusha
popa
into
fwait
and
lds
in
sti
pop
mov
sub
pop
bound
mov
adc
sahf
fwait
add
add
or
rcrb
jp
fistpll
das
aam
mov
stos
push
aad
ret
pop
jae
push
repnz
inc
xchg
ds
cmp
scas
xchg
stos
das
sub
or
punpcklbw
adc
and
fdivrl
jmp
jne
xorl
mov
mov
cmp
negl
ficompl
jecxz
loopne
inc
rolb
or
inc
mov
add
into
or
dec
hlt
adc
clc
ret
and
bound
lahf
aam
sub
lock
xor
pop
mov
mov
nop
jmp
pusha
mov
inc
aaa
dec
popa
adc
fbld
jno
and
cltd
sub
scas
sub
cwtl
lcall
dec
repnz
mov
js
mov
xor
lds
in
imul
mov
popf
pop
add
add
mov
insl
fidivs
sub
mov
pop
mov
daa
fmuls
sub
xchg
pop
testb
leave
lret
mov
lcall
mov
into
mov
adcb
fcoms
ffreep
jg
inc
out
jl
xor
insb
ret
jnp
mulb
lahf
and
cmp
inc
