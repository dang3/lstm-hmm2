push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
mov
add
andl
cmpl
mov
je
mov
mov
testl
je
push
call
mov
and
push
pushl
call
push
jmp
push
call
push
call
mov
add
add
push
pushl
call
push
mov
call
cmpl
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
add
mov
add
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
mov
mov
mov
mov
mov
mov
addl
add
push
pop
rep
mov
add
add
incl
mov
movzwl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
push
mov
push
andl
push
lea
push
push
call
add
cmpl
je
push
pushl
call
pop
pop
test
jne
push
mov
push
call
push
call
push
call
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
push
call
push
call
push
call
mov
pop
jmp
mov
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
call
pop
ret
add
add
fldl
cmp
lods
popf
xchg
fcompl
mov
testl
sub
sahf
js
loopne
and
and
cmpl
jmp
fsubs
mov
or
xor
mov
xorl
push
out
jbe
inc
xor
lods
out
dec
dec
iret
dec
add
mov
fcmovbe
pushf
adc
repz
enter
insl
mov
pop
xchg
lret
cmp
test
pop
movsb
aad
call
jp
int
adc
fsubrl
mov
sahf
xchg
add
add
dec
mov
iret
push
dec
int3
aad
arpl
ror
xlat
sub
not
mov
montmul
cmpsb
inc
adc
or
xor
and
std
dec
shrl
outsl
in
inc
into
lret
fistl
mov
aas
out
in
xchg
sub
in
lret
test
xor
mov
jle
xor
into
gs
in
fldt
arpl
cmp
cmp
rcrl
inc
cmp
add
fildl
mov
xchg
enter
sarl
sub
xchg
in
aaa
popf
repz
enter
sub
ss
mov
sub
aad
hlt
xor
in
rolb
xor
add
repz
pop
jg
je
mov
sbb
aad
sbb
pop
cmpsl
mov
js
ds
add
xlat
sub
shlb
sti
mov
add
add
fs
or
dec
popf
in
stos
movsb
xlat
iret
xchg
mov
cmp
sbb
rcll
cs
and
xchg
sarb
fdivr
jg
xchg
cwtl
loopne
jg
jo,pt
in
inc
and
sub
xor
mov
aad
cmc
lret
idivl
mov
adc
std
pop
push
hlt
sbb
cmpsb
or
sub
mov
mov
sub
call
xchg
push
mov
mov
inc
dec
lock
dec
pop
push
mov
inc
fistps
inc
fcompl
movl
mov
call
jle
fisttps
pop
xchg
cmpsb
mov
aad
rclb
mov
dec
mov
jle
lock
fwait
iret
les
jg
int
sbbl
fucomi
inc
sbb
mov
mov
in
mov
mov
add
add
xchg
sbb
dec
xlat
jne
mov
and
call
push
test
int3
pop
cwtl
mov
mov
cmpsb
and
in
xor
xchg
and
sbb
loop
or
adc
and
rorl
daa
add
pop
and
arpl
fcom
ljmp
dec
push
iret
dec
lret
stc
push
mov
insl
or
push
out
jne
adcb
add
sti
xor
jle
lahf
sbb
adc
push
and
cmpsl
adc
js
sbbl
mov
fmul
and
cmp
leave
xchg
cli
fbstp
push
sahf
into
scas
stos
pop
dec
inc
cwtl
sub
adc
mov
movsb
cmc
popa
and
lock
ret
sar
xor
sbb
das
mov
test
mov
mov
imul
rcrl
inc
dec
pop
std
movsl
push
rcrl
orb
add
mov
enter
push
cmc
cli
negb
dec
xchg
jle
sub
or
leave
pop
flds
dec
mov
pop
test
xor
xchg
jg
cmpsl
lds
or
sub
inc
iret
pop
popa
cli
out
lahf
xor
inc
jae
sub
inc
gs
mov
xlat
notb
stos
lock
push
aam
call
mov
and
daa
push
push
or
arpl
xchg
popf
lret
add
mov
mov
std
fs
lds
mov
xor
in
and
jne
sbbl
pop
aad
subb
mov
movsl
cmp
add
pop
mov
and
ljmp
add
fistps
jmp
inc
inc
popf
sahf
movsl
neg
fstpt
adc
inc
xchg
sbb
cmp
sahf
fs
add
pop
mov
dec
cld
fucomi
pop
imul
cmp
int3
mov
pop
mov
xor
test
or
dec
push
or
jmp
scas
mulb
inc
mov
xor
add
mov
mov
sub
sbb
sub
and
jne
pop
xor
test
popa
test
fnstsw
aaa
jbe
fnstenv
xchg
sub
add
inc
stos
inc
dec
pop
aam
addr16
and
and
lret
or
imul
pop
dec
push
push
jl
mov
mov
dec
or
or
imul
xor
inc
mov
lods
xchg
jb
ret
mov
push
int3
or
sub
jae
mov
js
jbe
jle
das
mov
cmc
add
dec
popa
jl
sahf
stos
mov
cmp
mov
mov
in
mov
and
pop
in
das
dec
iret
add
std
and
lods
jb
cmp
adc
loopne
insl
mov
movsb
insl
fisttpl
cmp
xchg
mov
pushf
sbb
and
cld
lea
jne
push
outsb
inc
inc
xchg
out
lock
or
imul
adc
aas
clc
push
inc
cwtl
loop
inc
sbb
sti
mov
scas
mov
sbb
sub
out
cmp
dec
xchg
movsb
xchg
dec
sbb
fisttps
dec
sub
add
je
add
dec
jp
arpl
fwait
mov
mov
loope
or
sarl
nop
push
out
dec
jbe
pop
pop
dec
mov
push
inc
popl
push
mov
aas
cltd
mov
icebp
or
pop
push
movsl
fdivr
in
clc
jle
sbb
ror
push
fidivrl
clc
mov
popa
xchg
jle
mov
push
insl
pop
or
fimull
inc
cmp
ljmp
add
mov
iret
das
pop
std
stos
push
into
cli
mov
cmp
xor
aam
mov
cmpsl
mov
jge
and
les
pop
mov
jmp
iret
ds
cmpl
stc
ljmp
lock
or
xchg
mov
cmp
jbe
adc
xor
or
xor
lock
mov
push
mov
and
mov
pushf
xchg
jl
fidivs
test
jle
add
sbb
jge
mov
test
add
mov
push
mov
lea
lods
int
cmp
cmc
movb
arpl
ret
fcmovnb
cmpsl
les
fsubl
subb
ja
pushf
push
lock
or
cmpsb
pushf
inc
sti
jl
cmp
add
fidivrl
ja
jecxz
xor
lahf
mov
aas
iret
jne
bound
add
add
dec
orb
fbstp
sub
cmpsb
out
gs
lahf
jb
addr16
mov
cli
mov
popa
xchg
push
jmp
cmp
andb
movsb
push
stos
xchg
jge,pn
cmp
mull
inc
sbb
cwtl
adc
out
jno
in
nop
add
and
adc
mov
dec
fists
shll
sub
rcrb
add
add
add
loopne
scas
ja
incb
cld
outsb
mov
jae
mov
mov
mov
xor
lock
jg
sbb
pop
mov
leave
daa
dec
sub
pop
aaa
pop
fcoms
xchg
repz
xor
pop
pop
stos
stos
add
ja
test
imul
into
dec
fwait
pushf
in
sbb
sbb
xchg
cmpsl
sbb
or
pop
repnz
int3
pop
scas
jns
in
push
xor
push
pop
inc
push
sub
sarl
sub
pop
ret
aad
lods
mov
jg
ret
push
push
test
rcrb
fwait
push
sbb
aam
imul
mov
outsb
sbb
dec
sbb
leave
jne
and
enter
xchg
pop
lcall
pop
xor
gs
add
mov
ret
fiadds
xchg
fadds
enter
orw
xchg
jg
bound
daa
xchg
or
cmpsl
push
ss
jmp
arpl
jns
dec
xor
mov
pop
xor
cmc
pop
arpl
mov
push
add
fnstcw
push
rclb
cmc
mov
mov
jns
push
outsl
divb
mov
stos
jle
orb
in
je
into
add
sub
fwait
xchg
int
adcb
and
pop
inc
mov
jp
xchg
and
test
inc
and
dec
jno
imul
lcall
pop
repnz
jo
sub
shl
sbb
dec
ret
sub
std
sbbl
loope
jmp
out
pop
sbb
pop
lahf
lods
js
xchg
mov
popf
add
xchg
mov
aaa
stc
test
xlat
lds
or
sub
inc
repz
mov
or
rorl
push
testb
lds
xor
jg
dec
rcr
cmc
imul
dec
es
cmp
sub
ja
ja
jge
data16
sbbb
push
jmp
out
push
cmp
xor
sbb
push
ficoms
push
cltd
adc
jns
and
sub
inc
mov
nop
loope
les
mov
push
jl
repz
aaa
jp
scas
mov
mov
lea
sbb
jle
add
pop
xor
ficomps
inc
cli
imul
sub
insl
ss
jge
mov
mov
jg
fwait
jl
addr16
push
clc
cmc
nop
call
outsl
push
imul
or
add
movmskps
jecxz
jecxz
xor
sbb
mov
add
adc
cmp
fisttpl
cmp
jae
pop
and
test
push
adc
sbb
inc
sub
int3
add
pop
dec
lahf
movsl
xor
mov
repnz
cmp
lea
outsb
jecxz
xor
cli
movsb
sbbb
outsl
mov
aas
xlat
dec
push
adc
push
add
push
movsl
int
add
xor
inc
imul
add
adc
push
sub
pop
or
lea
sbb
data16
cld
dec
loope
loope
and
pop
test
dec
pop
cld
mov
int3
add
mov
adc
pop
fwait
rorl
pushf
out
sbb
dec
ja
jnp
pop
lcall
or
inc
mov
mov
cmp
pusha
fisubl
mov
mov
or
call
push
add
cmp
push
scas
xor
xchg
dec
mov
gs
mov
pop
mov
sbbb
shll
pop
pop
mov
mov
rcrb
cli
idivb
ds
nop
pop
jbe
das
fidivrl
jl
das
dec
movsb
int
jbe
repnz
lret
jmp
jae
pop
mov
je
cmpsl
adc
in
dec
mov
jns
outsb
jle
mov
pop
cmp
in
fdivs
sbb
push
add
add
arpl
or
add
push
add
js
stc
adc
test
inc
mov
out
pop
xchg
pop
inc
sub
fwait
cli
lret
out
xor
leave
xchg
test
push
push
aam
fbstp
pop
repz
test
lcall
xor
jne
insb
sahf
out
mov
adc
mov
call
jne
dec
ds
loope
add
add
subb
cmp
call
fs
dec
mov
int
dec
xchg
fidivrs
jle
outsl
lea
sbb
pushf
icebp
pop
loope
push
push
popf
xor
cmpsl
add
push
push
das
int
pop
or
hlt
xchg
dec
dec
sbb
jp
test
in
pop
bound
push
push
jns
rclb
daa
fisttps
mov
jl
lods
mov
xchg
pop
das
in
es
js
out
divl
sbb
mov
mov
push
frstor
push
aam
add
adc
push
xor
fsubs
add
cmp
adc
push
inc
add
push
cli
iret
iret
pushf
sti
cli
or
into
iret
xchg
xor
daa
jge
mov
cld
or
inc
xchg
jge
das
dec
push
imul
dec
sahf
rcl
adc
faddl
dec
lods
call
dec
pushf
test
ja
outsl
loop
sbb
js
jp
ljmp
fldl
sub
dec
mov
stos
negl
cmp
mov
mov
push
and
out
push
lods
aaa
push
push
or
lock
and
cmp
out
cmp
mov
pop
popa
dec
push
fidivrl
fldt
fwait
push
mov
das
push
pushw
inc
pop
pop
sahf
popa
mov
mov
ja
push
and
push
mov
movsl
pop
cmpsl
push
cld
push
push
mov
fdivrs
push
and
push
push
cltd
pop
rcl
lds
pop
je
or
jmp
stos
mov
and
adc
push
or
je
xor
repz
cmp
test
xor
out
hlt
aam
fcompl
jge
mov
lahf
aad
fidivrl
push
shrb
sub
xchg
mov
ds
and
add
push
mov
out
xlat
std
sbb
dec
mov
fcmovbe
lods
xchg
cmp
push
xor
add
gs
jp
icebp
jecxz
mov
and
sbb
cmc
xor
les
in
dec
xchg
gs
enter
lods
lret
cs
ljmp
fstpt
fcoml
popf
xor
test
sahf
pop
cmp
rcl
dec
aas
xor
out
sbb
rcrb
ss
int3
mov
in
jg
lock
jb
mov
dec
add
popa
mov
jb
jbe
dec
clc
adc
xor
xchg
shrb
inc
in
add
add
cmp
add
and
scas
mov
dec
sub
nop
pop
cmp
sbb
cmpsl
jle
push
xchg
xchg
loope
mov
ret
sbbl
cwtl
sub
fidivrl
or
push
shll
add
pop
leave
jmp
xor
jns
push
cmpsl
sbb
outsl
push
mov
push
jbe
mov
and
shll
or
movsb
enter
scas
mov
mov
ss
shl
daa
pop
xor
add
pop
enter
lock
cmp
hlt
lods
jg
sti
dec
fiadds
repz
add
idivb
and
stos
clc
add
sbb
dec
pusha
jp
jecxz
repnz
push
xchg
jae
cltd
js
stos
sti
mov
aas
repz
rclb
add
in
adc
cld
xor
cmp
enter
sbb
add
push
movsl
cmpb
pop
cmp
shrb
xor
gs
mov
inc
fs
stos
pop
lcall
xchg
imul
scas
xor
fadd
fidivrs
icebp
mov
xor
ss
adc
push
xchg
fcmove
call
mov
push
repz
sub
test
or
add
add
push
fisttpll
push
fwait
mov
sbb
cmp
cmp
xchg
rorl
sbb
jb
clc
cmp
cwtl
stos
mov
adc
cs
dec
mov
jecxz
sbb
xchg
ffree
inc
jnp
ret
mov
push
mov
dec
pop
out
push
dec
dec
cmp
or
or
lods
in
cmpl
cmc
stc
xlat
push
daa
pop
leave
sahf
xor
loope
orl
mov
jb
test
in
mov
sub
and
mov
mov
fnsave
mov
jg
addr16
jmp
jae
arpl
cmpsb
push
in
sbb
cmp
je
add
rcrb
mov
orl
bnd
fs
cmc
out
cmp
jne
test
pusha
scas
inc
pop
mov
add
cmpsb
aad
ds
out
imul
fisubl
pop
inc
pop
jmp
fiadds
jmp
xchg
out
pop
mov
pop
or
fistpll
pop
shrl
cmp
or
mov
cwtl
jle
or
lds
sbb
xchg
sbb
call
sub
mov
cli
sar
add
inc
ret
test
mov
enter
testb
add
cmp
mov
in
mov
push
sub
out
rorb
cli
inc
adc
sub
push
ret
xchg
jno
or
fimull
aam
cltd
sub
mov
sbb
mov
aaa
jns
filds
push
les
jne
adc
mov
add
jge
jmp
jnp
std
das
daa
ljmp
mov
ja
sub
mov
jne
jmp
xchg
xchg
mov
xchg
xor
jne
adc
jge
pop
push
jne
cmp
mov
icebp
jle
test
add
xchg
call
pop
repz
shl
lret
outsb
add
jae
mov
or
cmp
cmp
dec
push
popf
jns
lret
lahf
loopne
int3
jae
inc
leave
mov
and
dec
add
jbe
or
push
add
dec
xor
rcrb
repz
sbb
mov
jae
and
out
add
dec
rolb
js
jns
mov
jae
inc
pop
mov
pop
decl
aam
push
pop
xchg
cmp
popf
sub
push
out
adc
jecxz
sub
jae
push
sbb
xchg
scas
pop
leave
insb
lods
imul
dec
mov
outsb
je
gs
mov
enter
and
and
push
mov
mov
lds
sbb
test
add
add
ja
mov
push
lret
xchg
cmp
push
dec
dec
cmp
stc
mov
or
add
dec
dec
sti
xor
jmp
enter
xchg
mov
push
sub
fdivp
mov
cmpsb
outsl
jnp
daa
jne
fsubl
or
jmp
ss
pop
or
adc
sub
pop
testb
mov
lods
sbb
shr
gs
inc
lcall
sub
add
repz
fldcw
out
stos
mov
pop
in
fs
sub
mov
and
cmp
cmp
jb
scas
ljmp
aad
mov
mov
orl
scas
add
sub
rcll
and
fs
cmp
fistpl
fdiv
or
push
dec
pop
loope
xchg
adc
and
inc
mov
sbb
stc
dec
imul
dec
sub
jl
mov
add
cmpb
xchg
add
cmp
lcall
mov
adc
mov
lret
xchg
xchg
pop
add
add
mov
fdivl
push
vmread
hlt
jmp
add
add
pop
or
sub
adc
cmpsb
jecxz
xor
sbb
and
pop
push
ret
xchg
jecxz
add
push
mov
ja,pt
mov
push
cltd
insb
hlt
or
pop
jne
jo
sbb
adc
sub
jmp
das
jle
lret
aaa
test
fwait
pop
pop
mov
mov
pop
push
loop
mov
push
xor
hlt
inc
les
sbb
or
das
sti
lret
dec
lds
cmovnp
sbb
add
push
dec
lahf
jbe
aas
xchg
xchg
mov
mov
in
fsts
icebp
js
xchg
cli
jo
insl
adc
or
mov
scas
in
mov
or
subb
xchg
dec
push
out
je
or
mov
shrl
push
rclb
jb
dec
inc
cmpsb
les
xor
inc
sub
add
and
das
or
aam
pop
jg
cmp
xchg
pushf
movsb
xor
pop
outsl
pop
sub
scas
loope
rcr
xchg
andb
jle
push
jo
cli
lds
stos
dec
and
in
std
shl
aas
in
inc
call
push
icebp
out
and
movsb
int
or
clc
leave
pop
sbb
adc
or
dec
movsb
adc
jmp
outsb
cmpsl
push
mov
mov
add
test
pop
jo
or
mov
or
xor
pop
xor
and
pop
cmpsb
add
cmp
adc
repz
ss
inc
mov
xor
pop
and
cmp
mov
ret
lds
lock
mov
push
cltd
adc
das
testb
push
pop
mov
sti
or
xchg
push
dec
fwait
jo
pop
test
out
pop
jmp
pop
hlt
sub
sub
clc
mov
stos
lcall
add
add
adcl
sub
cmc
cmp
dec
mov
ljmp
adc
add
adc
mov
lahf
lsl
cmp
dec
xchg
and
xchg
out
lods
int3
add
and
xchg
mov
push
inc
inc
popa
fwait
dec
inc
fdivl
xor
inc
and
jno
add
and
sub
aaa
push
iret
loopne
jecxz
outsb
dec
fstps
add
out
push
std
mov
cli
incl
dec
pop
jbe
sbb
lret
xor
ja
js
jle
sbb
add
sbb
mov
adcl
xor
stos
jmp
mov
sbbl
fwait
arpl
jnp
sbb
enter
aam
jbe
push
jge
ret
adc
xchg
push
dec
fadds
push
mov
xchg
lahf
lcall
inc
rcrl
cmp
push
dec
idivl
adc
jmp
dec
jns
int
or
mov
mov
xor
sub
imul
add
jno
jge
pop
in
aad
aam
test
or
into
adc
cltd
add
imul
sbb
ret
pop
mov
xchg
or
pop
cltd
fs
pushf
fistps
pop
incb
lods
push
cmp
pop
mov
cmp
leave
cs
jecxz
bound
shl
and
jbe
mov
aas
add
pop
loop
add
xorl
dec
outsl
lret
shll
scas
push
pop
and
lret
test
test
cmp
fnstsw
adc
cmp
xor
sub
sub
aad
jo
or
aad
sbb
cmp
jbe
inc
sbb
aas
mov
js
call
fists
popa
sti
or
cmp
push
shlb
int3
sub
cmp
jns
aad
mov
xchg
push
and
xchg
cmc
or
iret
xchg
jg
add
bound
ror
adc
dec
test
fcoms
pop
push
xchg
add
jmp
jo
sbb
ja
fmull
js
js
ss
movsl
fstps
mov
mov
mov
adc
sbb
jae
push
in
aad
mov
dec
nop
lcall
cmp
ds
je
pushf
xchg
aaa
push
push
push
xchg
push
dec
mov
testb
mov
add
xchg
cmp
add
les
push
stos
push
cld
mov
cld
scas
xchg
shlb
and
xchg
sub
cmp
push
jbe
nop
and
pop
nop
aaa
xchg
pop
xor
cltd
lods
fnstsw
jg
mov
jo
add
sahf
mov
pushf
mov
xchg
or
int3
mov
mov
pushf
inc
xlat
rcrl
gs
xchg
or
mov
mov
mov
sldt
add
add
mov
popf
xchg
fiadds
es
test
and
cli
push
jno
into
adc
lahf
scas
ficomps
mov
adc
pushf
in
jmp
xor
dec
out
add
adc
sbb
subl
iret
repz
dec
movsb
jne
adc
pop
mov
out
repnz
cld
enter
stc
mov
lock
js
lahf
cmp
mov
rcrb
jle
scas
add
add
inc
jle
ja
jno
insl
jb
fldenv
in
or
testb
je
popa
in
loop
movsb
lret
dec
ss
xor
in
loopne
test
xchg
popa
and
xor
in
xor
ja
sbb
pop
or
jl
and
ljmp
jae
fadds
and
push
or
jmp
xor
pop
cmp
push
or
pop
decb
mov
add
xor
dec
and
cld
enter
jb
and
sbb
and
add
xchg
cmpsb
jnp
inc
cmpsl
dec
mov
cmp
inc
add
in
pushf
inc
stos
hlt
push
ret
lcall
push
pop
inc
adc
hlt
test
xchg
xchg
sub
not
lods
xor
cmp
sub
test
or
sbb
in
adc
stc
push
xchg
or
add
push
ljmp
and
mov
add
movsl
repnz
lds
cwtl
and
ficoms
dec
outsb
fdivs
fiadds
inc
xor
jno
test
movsb
jmp
out
int
xchg
or
mov
jle
int
cmp
push
icebp
mov
repz
scas
pop
ret
scas
and
pop
or
mov
loop
popf
mov
xchg
and
add
sbb
push
subb
lods
xchg
cmc
or
sbb
loope
test
adc
ret
in
fdivl
push
inc
pop
sbb
in
jecxz
cltd
jno
out
aaa
sub
sahf
and
push
jecxz
mov
mov
mov
jae
sub
shll
xchg
popa
dec
xchg
icebp
mov
inc
push
mov
ja
pushf
fnstcw
xor
ja
out
sbb
sbb
jae
add
add
inc
out
mov
adc
pushaw
jg
jae
pop
std
and
xchg
out
test
pusha
mov
loop
cmp
neg
into
mov
xchg
scas
add
cld
sub
fs
lods
bound
adc
fadds
adc
mov
clc
aaa
xor
cmp
mov
ljmp
xchg
push
shl
pop
popf
rcll
or
stc
dec
mov
and
stos
fnstenv
mov
lods
pop
jmp
hlt
xchg
stc
mov
sub
aaa
lret
lcall
xchg
clc
arpl
repz
mov
add
je
push
jle
sub
and
pop
test
addb
scas
adc
adc
or
out
jg
push
addr16
adcb
lret
shll
mov
xor
xchg
ss
rorl
out
push
cmp
sbb
pop
mov
popf
fistpll
aas
loop
sub
add
or
mov
sbb
push
cmp
jo
xchg
pop
cli
in
mov
or
movsl
jno
dec
frstor
xchg
mov
push
jne
and
es
outsb
push
into
sbb
cld
mov
je
mov
int3
mov
jp
imul
push
jmp
cwtl
test
xlat
jg
hlt
push
push
xchg
mov
cmpsb
jbe
jg
add
test
rclb
cwtl
xchg
lds
mov
imul
aaa
ss
or
gs
testb
sahf
pop
or
push
jmp
hlt
push
dec
movsb
lds
jp
cli
adc
push
sahf
xchg
imul
mov
mov
jg
sti
pop
stos
bound
into
pop
jns
pop
bound
jae
enter
push
push
jne
shlb
mov
and
add
add
pop
push
add
fwait
nop
ret
scas
jle
jbe
cli
mov
sub
add
add
xor
lcall
jmp
cmp
xchg
cld
xlat
dec
push
cmc
and
xchg
or
add
push
fwait
test
xchg
push
mov
into
mov
mov
je
fildll
fwait
pushf
xor
add
xchg
mov
gs
push
lea
add
inc
dec
push
or
and
mov
push
gs
add
cmc
imul
mov
enter
xor
les
subb
ror
cmpsb
arpl
arpl
mov
cli
or
imul
add
mov
rcrl
mov
xlat
xor
aam
inc
adc
pop
scas
mov
daa
scas
loop
loopne
fadds
xor
or
lds
ds
mov
iret
aas
je
in
add
add
add
cs
call
push
xchg
inc
fadd
mov
pop
sbb
inc
adc
mov
fmull
lea
popa
sti
je
pop
pop
pop
stc
dec
push
pop
nop
xchg
addl
xorb
or
and
sarl
cmc
insl
push
adc
cmp
call
push
xor
mov
sbb
mov
mov
ljmp
xchg
shlb
ficoms
sahf
sbb
scas
adc
fwait
add
pop
cmpsl
dec
clc
cmpsb
sub
and
pop
xchg
pop
sbbl
inc
arpl
jl
negl
lret
push
dec
jp
xor
inc
pop
out
mull
sbb
pop
push
mov
test
pop
mov
xor
bound
or
xchg
daa
or
cld
pop
int
shr
movl
and
add
add
rcrl
imul
clc
push
lods
test
clc
stos
mov
adc
jns
dec
std
pop
movl
push
mov
mov
mov
mov
push
pop
pop
mov
mov
push
cmp
mov
inc
pop
fnsave
in
test
dec
neg
cld
dec
fidivrl
push
push
jns
dec
pusha
jg
mov
out
fsubl
add
add
les
in
xchg
daa
arpl
jle
mov
lock
cwtl
lea
test
push
in
scas
xchg
int3
mov
adc
pop
or
jae
dec
mov
sbb
repnz
and
jmp
mov
lcall
dec
pop
mov
mov
adc
sbb
adc
jbe
ds
in
push
pop
mov
mov
lock
clc
pop
jl
add
add
jnp
push
dec
inc
inc
inc
icebp
enter
fwait
enter
and
inc
sar
mov
je
push
into
push
pop
in
sbb
and
repnz
or
mov
jge
xchg
pop
test
jae
mov
stos
repz
mov
cld
lahf
pop
dec
sahf
dec
frstor
pop
int3
push
call
outsl
mov
scas
out
sub
