push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
mov
mov
mov
mov
rol
imul
add
mov
mov
mov
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
push
call
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
jmp
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
jmp
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
add
cmpsb
inc
mov
jle
aad
push
or
xchg
lods
adc
adc
xor
adc
inc
jne
iret
push
xor
aad
ret
aam
stos
sub
loopne
loope
imul
jnp
and
jb
outsb
adc
cs
mov
je
sbbb
inc
pushf
jae
or
and
mov
cmp
dec
pop
push
iret
stos
xor
imul
les
lods
cli
pop
push
push
and
insl
ds
sub
insb
test
xchg
enter
mov
xor
add
add
push
andb
jmp
xchg
movsb
roll
lock
cwtl
in
sub
push
xchg
or
fidivs
std
js
mov
sbb
lcall
xchg
push
ds
jl
outsb
cli
aaa
and
mov
pop
das
mov
push
and
lret
lea
mov
xor
mov
jo
xorb
jg
mov
xor
aaa
xchg
mov
push
jne
adc
dec
aaa
sbb
add
push
jnp
js
imul
mov
popa
out
mov
pop
dec
inc
out
pop
push
je
shlb
mov
jae
xor
dec
imul
and
scas
cmpb
incb
inc
mov
je
xchg
jnp
into
jecxz
mov
cmc
adc
and
sub
push
out
insl
icebp
mov
repz
add
inc
movsl
scas
filds
imul
scas
pop
jmp
fmull
mov
test
xchg
movsb
jb
mov
lahf
mov
jp
add
cmp
jno
mov
aam
add
sub
sahf
sbb
sub
mov
roll
je
call
gs
adcl
movsl
inc
sarl
lea
cmp
lds
cmpsb
push
cmpsl
rolb
sbb
or
leave
cmpsl
std
stos
xchg
cmp
sti
jmp
xchg
add
jp
ret
int3
ret
mov
in
dec
in
dec
mov
ljmp
insb
or
xchg
mov
bound
ljmp
out
clc
push
stos
push
orl
push
je
stos
mov
in
cmp
jae,pn
lcall
pop
rorb
aaa
push
enter
add
out
adc
aad
rolb
in
cmp
jp
jp
mov
xchg
dec
in
dec
loopne
jns
scas
outsb
and
jg
push
dec
gs
dec
fcomps
insb
cmp
insb
lahf
outsb
mov
jp
mov
push
mov
es
jg
xor
cmp
daa
js
es
fisubrl
in
or
in
cmpsb
pop
push
mov
lahf
insb
les
pop
add
xchg
xor
pushf
pop
ss
jle
mov
data16
mov
mov
mov
mov
jmp
pop
mov
inc
stc
mov
mov
std
pop
adc
mov
andb
jae
add
mov
leave
outsb
xor
cltd
iret
cmp
mov
lcall
sbb
xchg
add
add
out
push
jb
mov
lret
xchg
aam
inc
inc
scas
test
in
dec
mov
scas
popf
scas
adc
mov
sub
add
repnz
lods
cmpsl
stos
and
pop
add
xor
cmp
lock
inc
sbb
inc
lods
mov
mov
cld
stc
jns
popa
ds
stos
repnz
mov
mov
mov
call
add
dec
adc
loop
test
xor
push
sub
hlt
xchg
pop
pushf
adc
je
mov
or
or
inc
jno
add
shrb
fs
sbb
ljmp
pop
cmpsl
divb
push
mov
fsubl
push
cmpl
push
or
repz
push
push
add
ds
cmc
jmp
mov
int3
cwtl
ss
add
loopne
flds
xor
outsb
scas
xor
ret
jl
push
cli
dec
lcall
in
ss
ret
movsl
movsl
fdivs
leave
ja
add
ja
xchg
lods
jg
fwait
mov
stc
add
scas
jo
ja
or
stos
rolb
dec
jae
or
mov
add
push
pop
xchg
adc
add
cmpsb
push
xchg
repnz
add
cmp
xlat
ret
rolb
jns
imulb
in
rolb
add
add
cld
test
dec
mov
bound
push
cmp
popf
mov
mov
cmp
std
cmc
or
scas
dec
adc
hlt
mov
inc
sbb
leave
jb
or
or
lret
fmuls
sbb
inc
mov
or
xchg
sti
cmpsb
push
insb
push
sub
stos
mov
dec
xchg
scas
sbb
pop
insl
or
shlb
jnp
or
mov
jne
add
mov
and
jp
cld
sahf
mov
mov
sub
inc
jg
xchg
mov
fcomps
mov
jne
aad
rcrb
loop
add
out
rcrl
loop
sti
sar
push
notl
or
and
sbb
js
mov
cmp
inc
jle
fmulp
xor
sub
ja
sub
sbb
xchg
lds
sbb
jne
cmc
andl
cltd
xor
mov
add
jno
push
add
push
ljmp
sahf
enter
js
dec
ljmp
xchg
scas
cmpsl
cli
and
xchg
push
and
call
fnsave
push
jns
mov
jae
pop
addr16
sub
mov
movsb
push
sub
outsl
sub
outsl
clc
aaa
push
xchg
mov
in
pop
lea
scas
push
and
adc
add
add
and
and
jecxz
movsb
por
das
cmpsl
or
test
push
daa
clc
and
inc
scas
sub
lcall
hlt
pop
out
cmp
sbb
sub
xor
loopne
pop
push
pop
xor
sub
push
pop
lock
pop
stc
in
jg
jb
lahf
mov
je
push
aam
leave
jo
rcrl
xor
jg
mov
test
sub
sbb
add
dec
insl
mov
add
jns
dec
xchg
outsb
mov
call
clc
jl
jmp
aam
lods
xor
sbb
notl
imul
sub
mov
scas
jno
pop
stc
mov
jp
add
ret
push
arpl
push
add
int
jns
cmpsb
scas
nop
xchg
push
repz
add
cs
xchg
add
call
in
dec
pop
xor
cltd
repz
repz
add
add
push
mov
adc
jae
adc
jge
sbbl
mov
sub
xor
jl
cmp
dec
push
jge
rclb
imul
push
inc
rorb
and
ret
ljmp
popa
add
shrb
mov
jne
pop
rol
push
into
stos
shrl
cld
sbb
push
shlb
or
in
push
in
fwait
and
add
add
adc
movsb
arpl
in
mov
mov
scas
movsb
ds
mov
add
jns
adc
push
lock
dec
pusha
or
inc
in
ljmp
fdivl
mov
stos
stos
pop
cld
or
sub
nop
xor
lea
cmp
inc
roll
hlt
jae
push
push
pop
in
inc
cs
fildl
jecxz
scas
inc
sti
in
imul
in
pop
lock
scas
xor
xchg
dec
fiaddl
sbb
jo
pushf
xchg
fidivl
jb
lock
inc
pushf
push
mov
mull
scas
scas
jge
js
daa
push
aas
and
shlb
jge
sub
jge
jo
stos
jge
cmpsl
rcl
adc
loope
arpl
addr16
mov
pop
xchg
ret
pusha
insb
cld
insb
xor
gs
enter
add
add
or
mov
outsl
inc
push
rol
test
xor
xchg
add
push
adc
daa
adc
xlat
and
movsb
clc
daa
arpl
movsl
out
inc
aas
movsb
lret
je
xchg
dec
xchg
or
insb
nop
and
insb
xchg
out
mov
test
mov
or
mov
add
repnz
outsl
testb
gs
sub
push
mov
cmp
out
ljmp
repnz
add
loopne
mov
or
inc
ds
jecxz
test
es
sbb
jae
mov
pop
add
scas
inc
ds
jo
jae
pop
cmp
sahf
xchg
cs
mov
or
xor
mov
loopne
sbb
lret
lock
cmp
lods
in
sbb
adc
or
or
cmp
insl
push
ret
and
mov
lock
int
push
xor
mov
and
xor
mov
iret
mov
cmpsb
push
dec
adc
repz
mov
add
xchg
imul
andb
adc
jae
and
call
or
int3
xlat
ficompl
inc
stc
int3
push
mov
ds
addb
pop
out
rorl
test
pop
nop
aam
add
sbb
mov
or
push
out
sub
add
test
pop
xchg
cmpsb
xor
dec
loopne
cmpb
mov
adc
sbb
sahf
sbb
inc
shrb
inc
cltd
nop
pop
push
rcrb
jno
js
pop
out
sti
mov
daa
push
aas
out
inc
mov
out
sub
int
outsb
mov
daa
movsl
test
inc
rep
mov
mov
fisubrl
add
dec
dec
sahf
jmp
movsb
push
adc
sub
mov
fisubl
fbld
mov
fcoml
popf
repz
cmp
lcall
gs
dec
mov
roll
int
repnz
xchg
pop
js
cmp
arpl
xchg
cmp
fistps
gs
in
mov
push
dec
adc
jne
adc
mov
and
ss
inc
lret
jmp
mov
xor
push
add
cmp
sbb
mov
mov
sub
cmp
dec
sahf
sti
jl
ljmp
jecxz
ret
in
lcall
mov
repnz
inc
je
lcall
xchg
stos
call
hlt
xor
jecxz
out
lea
jmp
mov
inc
cwtl
loope
or
imul
sub
push
xor
shl
add
add
or
ds
loopne
push
adc
or
push
outsb
nop
xchg
outsb
lods
das
jle
sub
mov
sbbl
sub
mov
jge
sbb
mov
jno
dec
sbb
mov
mov
sbb
int
mov
cmp
adcl
sub
enter
bound
or
inc
loop
mov
ret
add
add
add
loopne
mov
mov
mov
xor
into
add
inc
mov
sarl
and
sub
outsl
cmp
popa
je
pop
stc
insb
jmp
push
lods
lcall
jg
adc
decb
loop
dec
mov
dec
cli
add
pop
sahf
xorb
lods
and
jbe
ljmp
mov
xchg
popa
cmp
pop
jno
add
fs
mov
cs
jbe
or
mov
and
jno
mov
jecxz
xor
pusha
push
gs
xchg
sub
xchg
das
and
les
push
sbb
cmc
add
xor
mov
inc
mov
xor
insb
mov
sbb
test
cltd
pusha
inc
and
cmp
scas
jnp
ret
lock
or
sbb
jge
push
mov
push
movsl
in
clc
outsl
mov
mov
int
xchg
lock
dec
in
push
mov
mov
outsb
inc
mov
fiaddl
sbb
mov
add
js
insl
jno
lcall
lret
cmp
xchg
xor
mov
bound
add
cmc
xor
sbb
mov
in
mov
leave
jne
add
dec
lahf
shrl
push
xchg
sahf
and
inc
das
push
repnz
cltd
aad
dec
js
stc
or
cmc
push
cmp
lods
adc
push
lret
lahf
mov
loopne
js
out
out
push
rclb
test
mov
xor
adc
jl
leave
ja
adc
stc
add
push
or
arpl
mov
mov
xchg
push
mov
xchg
cld
or
out
xchg
xchg
loop
push
mov
stc
ret
cmp
mov
push
and
xlat
mov
dec
xchg
or
bound
and
cmp
jle
jmp
test
dec
add
out
mov
and
lret
dec
dec
nop
decl
push
les
adc
mov
jae
aas
mov
and
iret
mov
pop
pop
aad
sbb
xor
hlt
movsb
add
add
add
nop
push
pop
jb
jbe
dec
and
shrl
inc
mov
repnz
aad
negb
push
hlt
mov
outsl
xchg
xchg
stc
nop
inc
shlb
adc
mov
sub
das
out
inc
and
bound
gs
jae
add
xchg
jl
jns
xor
and
std
push
and
aas
mov
xor
sarl
inc
cvttps2pi
mov
inc
push
add
dec
sarl
shlb
add
inc
stos
sahf
fwait
movsl
jae
dec
and
jo
daa
sub
sahf
lea
rol
inc
or
sub
adc
addl
adc
hlt
mov
out
nop
xor
add
mov
xchg
fidivrl
hlt
lret
repz
inc
int
xchg
lea
xlat
in
enter
sahf
cmp
mov
loope
push
sbb
pop
fisubs
ret
ret
push
pop
sub
add
fs
jne
and
mov
mov
int
fisubrl
push
jb
clc
stc
imul
ljmp
out
jne
mov
imul
popf
filds
fimuls
sbb
push
sub
sub
aad
test
es
and
stc
or
sbb
jne
clc
sahf
in
mov
pop
test
lret
in
adc
bound
out
stos
push
add
add
mov
clc
inc
adc
lcall
out
rcl
call
sbb
sbb
rcll
xchg
sarb
sub
shrb
insl
xchg
cmpb
mov
lods
cltd
jl
out
movsb
add
fmulp
add
nop
inc
test
ret
cmovl
scas
and
pop
xor
dec
push
pop
insb
inc
aam
clc
test
jmp
add
add
push
loop
mov
iret
ljmp
cld
pop
ficomps
cli
sub
cli
mov
ljmp
mov
in
pop
adc
into
or
les
loope
test
loopne
or
mov
inc
fwait
insb
adc
cwtl
aam
mov
ret
fsubrl
test
add
outsb
jge
sub
int3
and
repz
repz
add
pop
int
jecxz
jns
inc
outsl
sbb
pushf
jl
outsb
xlat
xor
popf
pushf
lock
xor
mov
repz
addr16
lret
mov
lret
fnstenv
mov
cltd
mov
andl
lea
and
lea
cmp
aas
pop
ret
divl
lahf
add
xorb
fldcw
mov
mov
pop
jns
and
adc
adc
cmpsb
xchg
aas
pusha
jns
std
jne
mov
sub
scas
int
shrb
data16
add
lret
fbld
jb
push
testb
in
sbbl
push
loop
movsb
imul
gs
ljmp
or
or
inc
add
enter
inc
mov
out
mov
or
push
imul
daa
and
xlat
xor
jmp
mov
and
subl
adc
mov
mov
or
jb
test
in
push
cltd
or
enter
mov
std
negl
imul
add
add
and
cld
lret
mov
push
stos
test
mov
data16
dec
mov
add
bound
js
mov
or
loop
mov
frstor
inc
sbb
movsb
add
push
mov
mov
mov
pop
scas
jle
call
repnz
int
mov
out
fstpl
test
sub
fildll
cmp
aam
loopne
pushf
mov
stos
loope
mov
addl
xor
ret
inc
mov
repz
sarl
insl
mov
repnz
dec
outsl
popf
mov
mov
cmpsb
test
and
sbb
hlt
xlat
scas
adc
jecxz
sub
mov
ja
add
add
cld
hlt
rorl
out
insl
dec
mov
mov
cmp
out
pop
or
mov
cwtl
add
sub
pop
mov
fisubrl
pushf
adc
outsb
sti
sbb
shrb
lds
push
xor
sbb
insl
test
int3
jmp
mov
or
inc
leave
pop
mov
mov
mov
mov
xor
les
adc
in
fisubs
inc
pop
nop
add
int3
jmp
das
mov
lahf
xor
movsl
js
leave
js
imul
mov
cmp
aas
fistps
cwtl
xor
push
mov
aam
movsb
ficoms
xchg
stos
fistps
lock
sub
hlt
inc
inc
shl
push
mov
js
push
rcrl
and
xchg
in
add
inc
adc
pop
pushl
outsl
test
adc
out
mov
xor
mov
clc
push
or
test
sub
shrl
adc
jmp
leave
je
or
push
xor
mov
into
jb
push
shr
sbb
lds
and
xlat
adc
test
jl
scas
or
xor
out
out
stos
sub
push
inc
cmp
jg
icebp
jle
dec
pop
mov
out
push
testb
sub
cld
mov
push
jge
pop
pop
lret
fdivrs
pop
mov
pop
mov
dec
loope
hlt
orb
rcr
jnp
inc
cltd
loop
subl
ds
cmp
inc
lret
cmp
or
jns
jnp
outsb
fcmovne
pop
mov
imul
xor
add
dec
inc
into
or
mov
dec
jmp
cmp
mov
mov
out
lods
push
push
js
dec
cmpsl
add
jle
mov
pop
adc
pop
call
addr16
cmp
sbb
int
jne
inc
or
dec
fbstp
mov
subl
dec
outsb
push
inc
xlat
sbb
testl
xchg
sub
repz
pop
jb
dec
push
pusha
push
in
pusha
mov
addr16
ret
stos
loope
inc
xor
fstps
loopne
mov
xchg
out
pop
adc
add
jb
add
inc
dec
inc
shrl
pop
jnp
cmp
push
add
push
mov
cmp
mov
scas
mov
int3
ret
popf
insl
popf
ja
fldcw
je
movsl
jbe
mov
cmp
inc
lahf
mov
pop
sbb
dec
aaa
test
adc
inc
fsts
test
adc
sbb
inc
mov
imul
outsb
pop
filds
add
popa
push
jp
ss
adc
ret
dec
int
sbb
in
notb
sahf
icebp
mov
ficompl
fs
shlb
rorl
or
movsl
sub
pop
lods
sbb
cmp
nop
fcmovu
dec
xor
ret
in
setae
lret
aaa
stos
call
xor
lahf
inc
cmp
lods
pusha
dec
lea
adcl
pop
icebp
xchg
pop
mull
jmp
cmp
jb
add
add
adc
aam
mov
xlat
out
in
orb
jb
movsb
sti
push
insb
inc
inc
push
mov
mov
or
jne
inc
mov
inc
adc
push
jb
mov
int
lret
or
add
rclb
popf
sub
mov
push
push
push
inc
sub
or
push
movl
call
inc
popf
insb
popa
mov
pop
addb
mov
sti
jle
addr16
adc
xchg
lods
cld
bound
ret
or
sbb
inc
inc
adc
mov
test
mov
iret
xchg
xor
fcoml
add
sbb
pop
call
or
push
js
mov
daa
or
add
push
mov
cmp
fs
ret
in
mov
gs
jns
push
pop
ljmp
cld
rcrb
jns
je
mov
shl
push
mov
stos
xchg
push
add
jo
out
cmp
outsb
lds
outsl
mov
outsb
adc
test
push
loopne
dec
cwtl
test
mov
lds
mov
inc
cmp
scas
and
gs
ds
xor
or
adc
mov
aad
xchg
iret
dec
inc
lret
mov
test
scas
jmp
aas
icebp
out
push
lock
sbb
add
inc
out
pop
aam
sbb
addr16
jge
adc
aaa
je
xor
enter
mov
testl
and
das
and
pop
dec
push
add
lahf
inc
mov
les
xchg
imul
sarb
ja
leave
ret
mov
inc
pop
sti
ljmp
shll
push
incl
pop
cmp
push
into
test
cmp
add
inc
mov
cs
fisttpll
rcrl
add
jle
pop
push
int3
sbb
mov
lcall
enter
pusha
jno
shl
inc
add
rolb
test
into
pop
jbe
cmp
adc
and
daa
jno
mov
enter
mov
mov
adc
mov
das
fwait
je
jmp
negb
jl
dec
out
cmp
loope
ds
sbb
sub
std
mov
dec
cmp
adc
jmp
jecxz
inc
in
jg
mov
cmp
aad
test
jmp
mov
and
ret
xchg
not
add
cmp
dec
mov
inc
push
pop
loopne
sbb
mulb
fdivrs
sub
fwait
mov
pop
popf
jp
leave
mov
test
push
das
imul
cmpsl
push
mov
xor
aaa
jecxz
test
faddp
mov
pusha
push
cmp
lds
daa
dec
lahf
or
pcmpeqw
add
add
pop
push
pop
sahf
cmp
add
pop
dec
add
dec
and
jecxz
lods
lret
jg
push
out
xchg
icebp
pop
pop
sbb
das
adc
pmaddwd
mov
mov
aaa
adc
jb
sbb
mov
mov
cmp
pop
pop
out
pop
cmp
notl
pop
rcll
add
repnz
jnp
sub
xchg
pop
inc
or
mov
pop
mov
mov
mov
add
push
pushf
cmc
mov
add
cmc
sub
out
xchg
fnstenv
popf
rolb
pop
popa
push
inc
cld
aad
mov
daa
inc
jg
add
fwait
loopne
lret
rcr
inc
jns
jge
and
add
enter
shlb
cmc
sbb
test
les
cld
imul
xlat
fsubrs
mov
adc
lods
adc
shl
out
hlt
repz
aad
mov
or
add
rcl
jl
inc
push
push
push
jg
adc
popf
pop
jne
xchg
push
fsubrl
rcrb
jo
cmp
mov
inc
cmp
mov
xor
hlt
hlt
mov
mov
pop
xor
push
fwait
sbb
xchg
add
fs
imul
pop
inc
jno
mul
ret
out
daa
mov
and
outsb
sub
xchg
out
push
mov
jmp
ds
mov
cli
mov
and
add
out
and
sbb
fldl
sub
sub
push
or
outsl
xor
ss
jp
jno
pop
cmpsb
add
adc
cmp
aam
jne
test
cltd
ds
cmpb
cmpsl
aad
in
subb
scas
test
loope
jno
cmp
int3
jae
mov
testb
out
xor
cmp
push
cmp
ljmp
mov
xor
jnp
out
push
jb
jle
mov
loopne
test
xchg
push
arpl
mov
add
add
pop
loop
icebp
jge
or
arpl
mov
test
lods
and
or
ret
cltd
mov
js
mov
add
push
pushf
icebp
loopne
push
loop
or
in
or
jnp
pusha
stc
pop
push
xchg
mov
in
imul
add
xor
mov
pop
in
packssdw
dec
lcall
sbb
pop
cmc
ja
adc
int
push
and
ss
mov
xlat
scas
out
jae
jne
dec
rcll
push
push
cmpps
lds
movsw
sbb
jecxz
dec
add
pop
adc
inc
sbb
jnp
cmp
mov
dec
sub
imul
movsl
lret
jge
xor
pop
pop
nop
dec
notl
add
add
insb
mov
mov
mov
iret
stos
ss
inc
int
mov
dec
sub
frstor
sbb
loop
adc
pop
mov
andb
cwtl
pop
mov
xchg
xchg
inc
aam
test
addl
adc
xor
dec
push
arpl
push
fsubrl
jbe
call
pop
sub
and
mov
mov
mov
add
popa
pop
jp
in
adc
adc
xor
scas
in
ret
fnsave
jb
xor
and
aad
test
stos
ds
dec
dec
addr16
push
hlt
and
pop
aaa
mov
imul
cmp
stc
pop
xchg
rcl
inc
loopne
cld
pop
sub
addb
inc
adc
adc
fwait
xor
push
je
mov
call
mov
shl
and
add
and
cmp
out
out
mov
xchg
jne
xor
add
aaa
scas
adc
sbb
testl
inc
mov
dec
push
scas
mov
jae
insl
jmp
lar
fcmovb
rcrb
dec
rcr
mov
push
sbbb
pop
in
cld
and
push
add
mov
fldcw
xchg
jecxz
mov
xor
pushf
ret
mov
outsb
jb
outsl
add
fisubrl
popl
dec
sbb
mov
sarb
and
mov
cld
or
jge
loope
add
in
lds
lea
dec
pop
pop
cmp
sub
add
aas
sbb
xchg
adc
dec
test
adc
mov
or
push
out
ret
xor
daa
pop
xor
fidivrl
icebp
mov
pop
add
lret
insb
fidivrs
test
loopne
sub
test
mov
jae
lock
loope
daa
sub
call
inc
mov
and
mov
outsl
loopne
and
cld
push
loope
ja
shrb
mov
int3
test
insb
test
cli
lds
xchg
cmp
dec
xchg
dec
xor
out
jno
push
scas
dec
pop
push
mov
scas
xchg
insl
dec
add
inc
iret
jle
pop
aaa
add
push
mov
popf
sbb
add
arpl
mov
cmc
fsubrl
aas
mov
inc
test
push
adc
loope
jecxz
and
shl
sbb
ja
gs
jno
gs
inc
or
pop
imul
push
popa
pop
push
jle
pushf
leave
mov
fwait
and
lahf
js
inc
mov
mov
or
cwtl
aas
enter
push
ljmp
xor
xor
cld
sti
xchg
mov
dec
sbb
je
std
movsl
ret
pop
shlb
add
aaa
fwait
stos
xor
push
mov
xchg
repnz
jb
mov
ss
rcll
stc
or
or
hlt
push
pop
jne
push
inc
and
fs
pop
clc
mov
sub
adcb
pop
xor
add
inc
adc
mov
lcall
sub
nop
and
jge
jle
dec
divb
adc
les
iret
sub
mov
sub
dec
and
mov
inc
push
add
stc
pop
negb
shl
xor
cmp
popa
adc
cmp
out
jne
popa
jecxz
icebp
andb
clc
xor
jo
jmp
sub
push
mov
ss
mov
and
scas
or
add
sub
fadd
lock
jmp
pop
int
fcompl
test
cmpsb
daa
adc
mov
stos
rorb
addr16
lods
fldl
and
in
push
mov
ffreep
sbb
aas
inc
nop
fidivrl
loop
ret
mov
and
cmp
add
push
pop
sbb
jb
jns
jne
jg
test
jnp
or
pop
xchg
stos
sbb
sbb
daa
pop
add
fsubrl
inc
loop
das
mov
xchg
and
sbb
gs
mov
add
mov
xchg
test
aam
out
cld
in
xchg
addr16
pop
jo
xor
sbb
loope
dec
shl
inc
mov
dec
fcoms
psadbw
cmp
lcall
inc
xor
fisubl
add
outsl
inc
mov
cld
push
in
dec
mov
pop
and
in
sbb
jns
cmp
dec
dec
push
mov
xchg
add
shll
fsubrs
bound
adc
pop
dec
out
sub
sbb
dec
mov
sbb
adc
mov
and
addr16
sbb
add
sub
fnsave
