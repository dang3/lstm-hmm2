push
mov
sub
push
mov
call
mov
add
mov
add
mov
call
pushl
pop
call
mov
movl
addl
sub
push
call
mov
add
inc
add
cmp
jne
add
add
push
pop
jmp
mov
add
sub
mov
ret
mov
add
lea
mov
add
mov
add
cmp
jae
add
nop
inc
add
jmp
jmp
nop
mov
mov
add
jmp
xchg
sbb
sbbl
dec
sub
inc
mov
inc
lahf
cli
or
in
adc
sub
fsubrs
mov
mov
sub
xchg
test
sub
cli
push
xorl
push
outsl
cli
push
sub
xor
fmul
sub
sub
hlt
scas
jmp
repz
mov
ljmp
test
jg
cld
out
sbb
or
imul
sub
and
out
or
mov
sub
jo
and
jecxz
imul
sbb
push
filds
sub
push
or
lcall
push
sub
dec
sub
sbb
push
ss
sub
fnstcw
scas
outsl
std
sahf
or
sub
adc
stos
in
cmpsb
sub
aam
push
fcomip
leave
sub
pop
sbb
test
sub
int
imul
pop
fucomp
fildl
sub
inc
jecxz
test
jg
sub
lds
mov
incl
test
enter
sub
mov
sub
mov
negl
sti
pusha
cs
lcall
ljmp
xor
negl
sti
pusha
cs
lcall
in
pop
sub
std
bound
mov
subl
adc
xchg
pop
and
popf
jo
mov
pop
pop
pop
popf
or
pop
sbb
push
subl
sbb
arpl
xor
dec
xlat
fadds
pop
or
mov
insb
pushl
jnp
or
nop
pop
adc
mov
xchg
push
lods
xchg
mov
sub
incb
inc
icebp
cmp
and
sub
cmpb
mull
dec
push
or
jp
inc
mov
xchg
testl
dec
bound
int3
jp
cmp
scas
jp
mov
mov
mov
dec
jne
mov
divb
mov
testl
dec
xchg
rol
divb
mov
dec
idivl
mov
rcr
push
or
or
mov
xor
ja
mov
fstp
push
cmp
jecxz
sbb
mov
inc
lret
aad
jbe
sub
in
lods
xor
loop
mov
js
shl
pop
mov
jne
xchg
adc
cmpb
test
imul
data16
loope
mov
outsl
pop
push
sahf
xlat
lret
lods
mov
jecxz
das
aaa
lcall
psrld
adc
cli
ror
jl
pop
sub
mov
sbb
and
inc
sub
subb
push
mov
dec
stos
cs
and
cmp
pop
mov
and
dec
push
sub
addr16
testl
imul
pusha
sub
mov
gs
pop
cmp
xchg
cmp
inc
adc
loop
mov
repz
xor
inc
imulb
int3
dec
sub
jle
jp
iret
sub
mov
xor
int3
daa
cmp
sub
inc
push
push
sub
mov
lahf
add
push
inc
pop
push
sub
and
std
xor
and
mov
jnp
shrb
push
mov
sub
sub
push
sub
movsl
sub
sub
pop
dec
or
mov
pop
push
lods
jmp
scas
sub
and
adc
add
sub
xor
mull
push
sub
push
or
pop
leave
mov
mov
pop
aam
sbb
stos
imul
sub
sbb
jnp
sbb
or
sub
lahf
int3
mov
or
pusha
sub
push
stos
loop
movsl
sub
adc
lods
mov
sarl
sub
push
sub
fs
icebp
sti
lea
jp
ficoml
push
push
sub
or
imul
sti
xchg
lods
lock
cmp
mov
cmp
gs
add
test
es
sub
dec
pop
and
cmp
inc
push
aaa
xlat
sub
adc
mov
jbe
imul
fimuls
fstpt
mov
inc
sbb
int
sub
movsb
lahf
jns
or
sub
dec
in
sti
push
jecxz
jmp
lret
test
pop
in
sub
dec
sub
insl
sbb
andl
sub
js
or
mov
cmc
sbb
or
adc
fcmovb
sub
into
mov
rclb
not
add
or
aad
fucom
in
sub
lds
notl
sub
mov
test
sub
push
sbb
mov
out
push
cmpsl
sbb
rcr
stc
mov
cwtl
test
mov
pop
lds
push
imul
fistps
jmp
cmp
push
sub
into
test
loop
scas
js
mov
adc
mov
jno
fildll
adc
mov
cmpsb
xor
mov
sub
popf
add
ret
mov
and
enter
push
lock
scas
sbb
pushf
or
xor
imul
cmp
xlat
repz
out
and
ljmp
add
