push
mov
push
call
push
sub
pushl
sub
dec
dec
ror
lea
mov
add
popl
rol
lea
sub
pop
add
ret
push
call
push
push
push
push
call
pop
push
push
call
pop
push
push
push
push
call
push
push
push
call
push
push
push
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
push
call
push
push
push
push
call
mov
mov
push
rol
pop
add
push
ror
ror
add
shr
sub
not
pop
add
push
xor
inc
not
add
ror
pop
mov
xor
push
push
add
shl
rol
inc
sub
sub
shr
shr
mov
sub
pop
push
shr
shl
xor
shr
shr
rol
pop
push
call
push
xor
sub
add
rol
dec
pop
mov
push
dec
pop
mov
push
push
call
add
push
dec
not
pop
mov
sub
jne
push
ror
lea
lea
not
sub
rol
pop
pop
push
push
push
call
pop
pop
push
push
push
call
pop
push
add
pop
pop
xor
push
sub
pop
ret
mov
push
push
call
cmp
jne
pop
push
push
push
call
pop
mov
push
shr
sub
rol
pop
pop
push
shr
inc
not
ror
rol
dec
pop
pop
push
push
push
call
add
push
lea
add
lea
ror
shr
lea
pop
push
push
push
call
mov
push
rol
pop
push
push
push
push
push
call
push
push
push
lea
ror
shl
sub
pop
mov
push
push
xor
inc
shr
sub
mov
xor
pop
push
push
call
push
push
shr
add
sub
add
ror
shr
sub
pop
call
push
push
call
push
push
add
shr
pop
call
push
rol
dec
ror
mov
xor
xchg
push
push
push
push
call
push
push
push
push
call
call
push
push
push
add
lea
mov
add
pop
push
push
shl
lea
add
rol
mov
xor
pop
push
sub
rol
add
pop
push
push
add
pop
call
push
sub
add
add
dec
add
lea
sub
pop
mov
movl
push
xor
sub
xor
sub
add
pop
movl
push
lea
ror
shr
pop
movl
push
push
call
push
push
push
inc
dec
sub
mov
add
pop
push
rol
ror
shl
xor
lea
dec
shl
dec
pop
push
push
ror
shl
shl
add
pop
call
mov
push
xor
lea
sub
shl
not
pop
call
mov
push
inc
xor
mov
xor
xchg
push
inc
rol
inc
dec
inc
lea
shl
pop
push
call
push
push
ror
mov
xor
pop
push
sub
lea
not
rol
pop
push
push
push
push
push
call
call
push
push
mov
add
pop
push
ror
sub
pop
push
push
push
push
call
call
push
push
push
push
call
push
call
push
add
dec
mov
add
xchg
push
shr
dec
rol
inc
sub
pop
push
push
inc
shl
ror
pop
call
push
add
rol
ror
pop
push
push
lea
shr
shl
not
rol
pop
push
push
push
push
call
call
push
push
ror
xor
lea
sub
add
xor
mov
sub
pop
push
add
lea
pop
push
call
push
add
pop
push
push
push
push
call
push
push
push
push
push
call
push
push
push
push
call
call
push
push
sub
sub
mov
add
pop
push
push
call
push
push
lea
not
rol
ror
lea
sub
add
pop
call
pop
push
push
push
call
pop
push
not
lea
sub
ror
not
sub
pop
pop
push
push
call
leave
push
push
add
dec
sub
not
pop
call
push
push
push
call
xor
push
not
ror
inc
pop
inc
push
push
push
call
ret
push
add
shl
sub
add
dec
dec
lea
mov
sub
xchg
push
push
call
push
push
not
inc
ror
add
pop
call
push
push
ror
pop
call
push
shr
add
shl
pop
cmp
jbe
add
push
pop
pop
push
rol
sub
pop
pop
push
push
push
call
pop
pop
push
lea
ror
shr
shl
add
add
shl
pop
pop
xor
push
inc
lea
shr
pop
ret
pop
push
add
inc
lea
pop
push
push
push
lea
not
not
mov
sub
pop
push
shr
inc
sub
dec
sub
ror
pop
push
push
dec
shr
sub
lea
sub
pop
call
push
push
call
mov
push
push
add
add
lea
shr
xor
xor
ror
mov
sub
pop
push
push
push
call
push
call
push
push
call
push
push
add
sub
shr
pop
call
cmp
jae
push
push
push
push
call
push
push
push
push
call
call
push
add
sub
dec
add
not
pop
add
push
sub
lea
pop
jmp
push
push
call
mov
push
push
add
mov
xor
pop
push
push
push
push
call
push
call
push
push
push
push
call
xor
push
push
call
sub
push
sub
shr
pop
push
push
push
push
call
push
push
push
push
push
call
jmp
push
rol
pop
or
je
push
push
push
call
xor
push
push
push
push
call
pop
push
add
shr
inc
pop
pushl
push
push
call
pop
mov
push
add
not
pop
mov
push
push
push
push
call
mov
push
shl
add
lea
sub
lea
mov
sub
xchg
push
xor
dec
add
not
rol
add
rol
pop
push
push
push
push
call
call
push
push
push
push
call
cmpw
jne
push
push
call
cmpb
jne
push
push
push
call
add
push
push
inc
rol
dec
ror
mov
add
pop
push
push
call
push
push
inc
ror
inc
inc
sub
dec
pop
call
push
push
push
push
call
cmpl
jne
push
push
call
add
push
push
ror
lea
sub
mov
xor
pop
push
push
push
call
push
call
push
not
pop
push
push
push
xor
sub
sub
mov
add
pop
push
push
push
push
call
push
push
push
push
call
push
push
push
push
call
call
push
sub
dec
add
sub
pop
mov
push
push
push
call
push
push
push
call
push
push
ror
shr
shr
sub
sub
sub
not
pop
mov
push
shr
not
inc
inc
pop
add
push
push
push
call
add
push
inc
add
pop
mov
xor
push
lea
add
ror
sub
pop
add
push
ror
pop
mov
xor
push
push
call
rep
pop
push
pop
mov
push
rol
add
shl
pop
add
push
sub
not
rol
pop
add
push
push
call
mov
push
push
push
push
call
xor
push
push
push
call
add
push
dec
add
inc
add
rol
inc
pop
mov
xor
push
push
call
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
add
push
push
push
call
add
mov
push
dec
mov
xor
xchg
push
xor
add
xor
ror
pop
push
call
push
push
call
push
push
push
xor
rol
shl
not
ror
dec
shr
shl
mov
xor
pop
push
xor
pop
push
push
add
pop
push
push
rol
inc
add
not
lea
pop
call
mov
push
push
push
call
push
push
push
push
call
mov
push
push
call
add
add
push
push
call
mov
push
push
push
push
push
call
xor
push
push
push
call
add
push
push
push
push
call
add
push
push
call
mov
push
push
push
push
push
call
xor
push
push
push
push
call
add
push
add
shl
add
inc
dec
dec
shr
pop
rep
mov
push
push
push
call
xor
push
push
push
call
add
push
shr
sub
pop
or
je
push
push
push
call
mov
xor
push
push
push
call
mov
push
push
push
push
call
xor
push
push
push
push
call
add
push
push
call
add
push
inc
dec
dec
pop
add
rep
push
xor
shl
not
dec
add
pop
mov
xor
push
sub
sub
rol
shl
shl
ror
pop
or
je
push
push
call
mov
add
push
push
call
rep
push
ror
not
add
pop
pop
push
push
ror
xor
shr
not
mov
sub
pop
push
lea
add
shl
pop
pop
mov
push
push
push
call
jmp
push
push
call
push
push
push
call
mov
add
push
ror
dec
pop
push
push
sub
pop
push
push
push
rol
sub
rol
shl
ror
ror
sub
pop
push
push
rol
rol
dec
pop
push
push
push
push
call
mov
push
xor
add
inc
dec
ror
pop
mov
push
pop
add
push
add
add
sub
lea
shr
pop
mov
push
rol
add
sub
rol
pop
add
push
shr
pop
mov
add
push
shr
pop
xor
mov
push
not
shr
xor
rol
dec
sub
pop
xor
push
push
push
push
call
rol
xor
push
push
call
inc
push
push
push
push
call
cmpb
jne
push
dec
pop
cmp
je
push
rol
inc
lea
sub
dec
pop
add
push
push
call
cmpl
jne
push
push
call
xor
push
push
call
pop
pop
push
add
ror
pop
pop
pop
push
push
push
push
call
pop
leave
push
pop
ret
push
ror
not
ror
pop
mov
push
rol
pop
add
push
sub
shl
dec
dec
pop
mov
push
push
push
push
call
push
push
push
call
call
push
xor
pop
xor
push
push
call
pop
pop
push
push
push
push
call
pop
pop
push
push
call
pop
push
push
push
call
leave
push
lea
shr
dec
dec
sub
pop
ret
push
push
push
push
push
call
mov
push
push
push
call
cmpl
jne
mov
push
push
push
push
call
jmp
push
push
call
mov
push
rol
ror
shr
add
add
pop
and
pushl
push
push
push
push
call
pop
push
sub
rol
sub
pop
sub
push
xor
pop
jmp
sub
push
push
call
pushl
push
push
push
call
pop
sub
push
push
call
cmp
jne
push
push
call
mov
push
not
lea
shl
rol
rol
pop
add
movzwl
push
push
call
sub
push
push
push
call
cmp
jne
push
xor
rol
ror
pop
leave
push
rol
pop
ret
push
push
push
push
call
push
push
dec
sub
pop
mov
push
push
push
call
add
push
rol
inc
xor
xor
lea
rol
sub
not
pop
push
push
push
push
call
push
push
sub
xor
add
pop
push
push
rol
shl
inc
add
xor
ror
sub
rol
pop
push
mov
push
push
call
push
pop
push
dec
dec
pop
mov
push
pop
add
push
shr
xor
lea
sub
dec
ror
shl
rol
pop
mov
push
not
add
dec
sub
pop
add
push
push
push
call
pushl
popl
push
push
push
call
mov
push
push
call
add
push
sub
pop
xor
push
push
push
push
call
lea
mov
push
push
push
call
add
push
add
add
sub
sub
shr
pop
xor
push
rol
sub
not
pop
rol
push
inc
ror
rol
shl
inc
sub
dec
pop
nop
push
add
ror
add
add
pop
nop
push
shl
add
inc
pop
xor
nop
push
not
add
shr
pop
nop
push
push
call
inc
push
xor
shl
inc
not
lea
shl
pop
nop
push
push
push
push
call
nop
push
xor
sub
add
pop
cmpb
jne
push
add
inc
add
inc
not
lea
pop
nop
push
rol
add
sub
shr
inc
pop
nop
push
push
push
push
call
cmp
je
push
push
push
call
nop
nop
push
shr
dec
shr
add
xor
add
pop
inc
push
push
push
push
call
nop
push
push
push
push
call
nop
push
push
push
call
cmp
jb
mov
push
push
call
add
movzwl
push
push
push
call
mov
add
push
push
push
call
mov
add
push
sub
ror
pop
pop
push
inc
add
add
pop
pop
push
push
call
pop
push
lea
ror
xor
rol
pop
pop
leave
push
push
push
call
ret
or
push
add
sbb
or
push
add
push
add
popf
push
add
lret
push
add
dec
push
add
popf
stc
dec
or
lcall
loope
clc
pop
shrl
ds
and
xchg
push
push
mov
sub
push
mov
fmul
aad
aaa
lcall
test
inc
out
insl
jecxz
jo
ret
es
fwait
dec
xor
sbb
lds
add
jmp
xchg
mov
jne
nop
fisubl
ljmp
ffreep
push
fs
es
into
je
insl
mov
jo
sub
add
orb
cmp
jbe
loopne
xchg
and
in
xchg
jmp
clc
cmp
sti
shlb
xor
cmp
mov
sbb
loope
cmp
les
stos
jno
pop
test
int3
xor
sub
adc
out
pop
fsubrs
mov
xor
popa
dec
inc
mov
imul
int
add
mov
ds
mov
push
fiaddl
inc
lret
ss
mov
cwtl
lock
xlat
insb
pop
cwtl
fimull
xchg
cmp
dec
fs
or
inc
push
jb
movsl
enter
mov
adc
mov
iret
push
lret
xchg
popa
pop
jo
or
insb
sahf
cmpl
scas
leave
and
sub
push
sbb
fnstcw
adc
leave
dec
aas
jns
pop
fisttpl
adc
cli
push
test
movsl
push
dec
in
clc
dec
fists
pop
jo
sbb
fldt
iret
outsb
ja
lret
mov
mov
inc
pusha
mov
scas
scas
dec
inc
ljmp
leave
imul
or
call
out
les
int3
push
jb
sub
leave
push
aad
and
imul
out
add
data16
mov
fisttpll
sub
insl
shr
adc
push
out
xor
xchg
loope
mov
mov
pop
lock
sbb
cmp
nop
xchg
sbb
jp
mov
xor
inc
fs
in
sbb
push
call
mov
mov
stos
data16
push
pusha
or
in
cmpb
mov
add
jns
jo
push
push
movsb
sub
ret
jno
xor
enter
fiaddl
cmpsb
dec
xor
inc
out
or
clc
inc
loope
cmp
stos
jl
xchg
mov
xor
and
add
xor
and
pop
xlat
and
mov
fisubl
jb
lcall
frstor
fbld
xlat
fs
cld
loope
mov
push
fnstcw
in
mov
ret
lret
stos
push
xchg
pusha
mov
xor
lcall
je
cli
iret
and
mov
outsb
inc
mov
addl
push
int
mov
sub
pop
mov
sub
xor
adc
push
arpl
push
mov
into
pushf
mov
add
leave
jns
in
xlat
pusha
lock
fcmovu
shll
xchg
jno
sub
addr16
outsb
and
pop
cld
cs
mov
jo
aam
cmp
lret
js
pop
fcmovu
push
jle
fndisi(8087
jae
mov
add
jg
sbb
push
in
xlat
or
cs
arpl
mov
push
mov
inc
sub
adc
cmp
adc
nop
and
mov
sbb
xchg
or
aam
shll
jle
rol
xor
sub
add
and
push
int
jbe
out
lret
inc
ss
lret
addl
imul
sarb
add
in
fsubr
xchg
mov
out
mov
mov
fwait
pop
ret
jo
into
orl
jmp
push
cmpsl
pop
call
shrb
outsb
sbb
test
mov
scas
push
mov
int3
sbb
jmp
inc
enter
cs
cmp
xchg
dec
aas
mov
cld
imul
dec
ljmp
mov
inc
call
xchg
xchg
pop
push
dec
shl
mov
mov
in
hlt
or
inc
shlb
iret
or
hlt
push
ja
sbb
pop
or
das
test
lahf
movsb
popa
push
push
nop
mov
dec
dec
inc
add
push
les
push
mov
insl
ret
mov
jmp
popf
xor
add
les
xor
dec
mov
cmpsb
or
movsb
out
inc
xchg
shrb
mov
lcall
sbb
mov
loopne
mov
aaa
repnz
out
scas
mov
xor
sub
pop
cmp
push
loopne
rolb
out
push
mov
push
cmp
jno
xor
in
int
xchg
push
xchg
cltd
fbld
leave
stc
popf
inc
pop
fidivrl
lcall
inc
js
addb
mov
daa
jns
xchg
in
enter
add
cmc
rorl
mov
and
push
ret
mov
daa
sub
std
add
mov
mov
or
insl
mov
hlt
push
cld
xor
dec
in
jbe
sbb
mov
pop
addr16
loope
push
xchg
fstps
inc
mov
int
icebp
dec
in
stos
dec
out
arpl
jmp
imul
sbbb
adc
in
hlt
cmpsb
icebp
add
add
add
repz
inc
xor
into
jno
decb
and
or
fcoms
mov
xor
in
test
sbb
jbe
xor
in
dec
arpl
mov
insl
scas
xchg
sbb
dec
mov
push
push
push
enter
cltd
add
icebp
rcll
mov
sbb
imul
fidivrl
das
cltd
dec
cmp
call
pop
inc
loop
pop
sbb
xor
xchg
bound
and
sarl
mov
jnp
cli
scas
cmpsb
pop
push
mov
mov
push
pop
out
aas
cwtl
rcrl
clc
jno
add
cltd
xor
push
rorl
div
shl
dec
les
or
inc
int
sbb
pop
or
popf
loop
cs
pop
add
inc
rep
push
mov
pushf
cmpsb
sbbb
cmp
xchg
jbe
pop
or
jp
pop
fmull
aad
insb
mov
das
dec
test
pop
subb
sbb
and
xlat
xlat
outsb
mov
push
loope
jnp
mov
mov
js
inc
sub
jmp
push
jno
cmp
jg
pop
clc
call
xor
dec
jl
pop
add
imul
addr16
test
sbb
dec
shr
cmpsb
mov
adcl
lock
scas
jbe
outsb
jae
sub
jle
imul
out
cmp
clc
mov
jae
push
ret
je
push
out
xor
push
or
inc
adc
and
inc
inc
mov
test
cmp
clc
cmp
dec
es
adc
into
sub
movsb
jnp
push
push
xlat
sbb
std
dec
add
pop
push
int
cmp
inc
dec
mov
sbb
lret
rcr
mov
jg
dec
lcall
hlt
fs
mov
repz
adcl
mov
dec
or
mov
xchg
faddl
and
xchg
xchg
mov
ret
hlt
sub
fldt
fnstsw
sbb
mov
lock
add
daa
jg
pop
pusha
cmp
sbb
mov
imul
xchg
add
fs
outsb
add
jmp
mov
mov
cmp
pop
xor
mov
xlat
mov
xor
leave
cs
flds
shlb
jge
xor
jle
inc
incb
pop
cmp
add
outsl
bswap
addb
pop
push
clc
pop
inc
xchg
sbb
into
sbb
shrb
ret
imul
insb
dec
jnp
repnz
or
cmp
orl
mov
orb
mov
clc
mov
cmpsb
call
les
shll
pop
ror
js
add
imul
in
lahf
stc
loopne
ss
mul
mov
mov
outsl
sub
lock
jmp
pusha
cmp
cmp
sti
pop
xchg
mov
stc
xorb
int
push
add
add
fidivl
mov
mov
xchg
scas
jb
cld
arpl
push
xlat
fcoml
js
test
push
push
xchg
push
pop
sbb
mov
test
cmp
rol
repnz
loopne
cwtl
fldenv
pop
pop
mov
test
inc
pop
insl
push
repnz
cmp
mov
xlat
inc
pop
mov
imul
icebp
cmpsl
pop
pop
mov
push
mov
jns
nop
mov
es
stos
insb
cmc
dec
les
cld
jmp
sarl
cltd
loop
sarb
test
and
mov
push
ja
fst
stos
and
hlt
in
sub
xor
int
inc
rorl
nop
xor
pop
and
cltd
jo
fstpl
insl
rcrl
ja
add
aas
pop
insl
js
sub
aad
clc
iret
call
filds
push
and
or
outsb
adcl
sti
and
push
sar
or
pop
push
fiaddl
push
sub
push
rcll
nop
shl
int
nop
mov
mov
push
dec
in
scas
dec
cli
add
dec
imul
push
sbb
jecxz
addl
cld
mov
push
add
fnstcw
inc
ret
jo
pop
cwtl
les
rcrb
repnz
loopne
add
hlt
xor
pop
aaa
and
insl
mov
into
sbb
inc
rcrl
xchg
add
dec
pushf
dec
test
subl
lcall
xchg
sbb
cs
mov
inc
lea
sahf
xor
jne
jo
js
lret
pusha
mull
arpl
dec
lock
leave
sbb
or
jg
mov
sbb
fcmovnu
sub
notb
inc
icebp
push
cld
jns
adcb
and
fwait
and
jno
jb
push
movhps
in
dec
and
add
cli
and
pushf
dec
xchg
mov
inc
imul
pop
mov
push
inc
xorl
shrb
sbb
sbb
cmpsl
ja
fwait
mov
mov
mov
push
or
mov
xchg
lock
movsl
xchg
aaa
enter
adc
mov
jmp
insb
cld
xor
scas
sbb
push
gs
dec
xor
roll
mov
mov
sti
mov
mov
call
fs
push
mov
aas
pop
arpl
adc
or
sbb
sbb
mov
xchg
addb
in
pop
jecxz
add
mov
xchg
mov
sahf
lds
mov
mov
push
mov
xor
sub
data16
cmp
push
mov
out
inc
in
adc
mov
ljmp
cmp
lret
adc
mov
out
mov
jle
and
into
dec
lods
scas
add
stos
cmp
mov
mov
outsb
addr16
sub
xor
lock
push
xor
loope
pusha
and
out
push
mov
imul
mov
mov
jb
xchg
jge
xchg
addr16
orl
cmp
xor
idivl
sbb
pusha
dec
jl
jg
dec
inc
add
outsl
mov
shlb
adc
sbb
repz
adc
fcmove
repnz
mov
lret
test
sub
sbb
icebp
daa
dec
cmpsb
aaa
pop
cs
and
ret
mov
movsl
mov
sbb
gs
sbb
push
and
lock
repz
jmp
inc
jne
pushf
fcomps
jle
pop
or
push
xchg
push
or
xor
push
sahf
out
sub
stc
int3
mov
lret
scas
cmpsb
and
ss
movsl
mov
movsl
int
icebp
test
out
mov
mov
sbb
sbb
adc
int
addl
inc
testb
adc
mov
scas
imul
cld
ss
inc
scas
add
and
std
mov
aad
lock
test
pushf
or
arpl
lret
inc
inc
or
test
data16
mov
pop
std
adc
cmp
add
xor
shll
mov
dec
cmp
or
dec
clc
icebp
in
and
sbb
rcl
shll
testb
sub
mov
in
js
sub
cmp
pop
insb
mov
cs
int
fidivs
lds
and
mov
sarl
inc
push
out
xchg
mov
fs
shll
sub
ret
dec
xor
iret
pop
js
pop
push
mov
fisubl
stos
movsl
jmp
xchg
or
xor
cwtl
adc
xor
inc
mov
dec
fdivrl
lret
add
shrb
mov
ss
arpl
test
sub
cwtl
inc
out
sbb
ret
aaa
xor
add
cld
inc
inc
jp
jbe
pop
filds
fnstenv
jae
vmovhps
cli
add
push
and
push
into
stos
aaa
pusha
nop
sti
mov
mov
adc
movsl
mov
jmp
jbe
adc
test
in
ljmp
lods
jg
dec
inc
test
aaa
cmp
in
jle
jns
fmuls
mull
cli
stos
mov
movl
or
pop
pop
pop
orl
jmp
push
outsl
addr16
sti
mov
jns
maxps
lret
sub
jle
ret
stc
leave
aas
outsb
mov
push
andl
jecxz
push
cld
xchg
nop
mov
add
int
cld
fmull
add
push
xchg
clc
inc
xor
outsb
into
sub
testl
ljmp
dec
rol
xchg
inc
jno
pop
inc
test
pop
cmp
les
push
adcb
jb
jno
xor
or
out
lret
xor
lock
mov
mov
sub
mov
push
icebp
dec
mov
pop
hlt
ret
in
and
pop
lret
cmp
bound
xor
pop
stc
mov
in
les
repnz
dec
out
fisubrs
sbb
lcall
icebp
cmpsb
mov
inc
icebp
mov
fcoms
insb
push
pop
inc
or
push
rorl
clc
xchg
or
dec
xchg
jnp
or
int
xor
xor
mov
mov
jb
lret
es
xor
mov
shll
sub
pop
pushf
pop
push
or
or
jne
push
stos
xchg
pop
movsl
fwait
jno
cmp
sti
les
push
pop
cmp
leave
mov
mov
hlt
xorl
dec
fldt
sub
xchg
sar
cli
mov
lods
ljmp
arpl
dec
pop
notl
pop
lcall
cld
xchg
pop
push
and
xlat
mov
add
inc
jp
data16
jp
mov
int
xchg
stc
inc
pop
sub
mov
adc
and
aad
sbb
pop
arpl
inc
out
and
scas
sbb
cli
std
fs
insb
lcall
xor
adc
enter
mov
or
aas
sbb
enter
adc
jp
cld
scas
inc
fstpt
fldpi
mov
js
sub
cld
aas
mov
adc
popa
push
mov
enter
scas
mov
jecxz
mov
je
lret
test
pop
inc
movsl
out
mov
mov
or
std
add
lock
lea
dec
dec
in
sbb
fwait
imul
inc
pop
iret
aaa
add
fwait
or
cmp
dec
and
jnp
mov
jb
outsb
shlb
les
sub
sub
xor
js
and
lahf
popf
arpl
jbe
loope
pop
lock
ret
loop
cld
mov
fsub
dec
stos
subb
movb
popa
sbb
iret
adc
rol
in
mov
sbbb
cwtl
mov
or
movsb
sbb
cmp
xor
loopne
fmuls
cwtl
jbe
xchg
cmpsl
icebp
leave
scas
push
xchg
inc
push
xlat
sarl
incb
ds
shl
mov
mov
sub
pop
adc
mov
push
or
inc
in
xor
cltd
sub
push
cmpsb
int
cmp
sub
mov
fimuls
inc
adc
insl
test
out
int
push
add
jns
xchg
sbbl
dec
cmp
stos
xor
notl
popf
fldlg2
sub
pusha
and
dec
fsub
and
mov
pop
xchg
pusha
hlt
dec
mov
xchg
xchg
sbbl
jns
push
out
jle
mov
in
push
fbld
mov
cltd
jbe
cmpsl
add
push
jae
icebp
or
cmc
push
xor
and
mov
fdiv
ja
leave
scas
mov
push
fldt
in
ud2
pop
insl
js
jge
insl
in
fwait
lock
mov
inc
repz
jg
jnp
pop
cwtl
iret
push
nop
mov
mov
loope
mov
pop
icebp
inc
mov
xchg
xchg
xchg
fistpll
inc
cmc
in
addr16
rcll
cmp
cmpsb
jnp
jae
adc
ss
or
push
mov
push
inc
enter
fildl
in
or
repz
add
push
shlb
mov
jno
or
pop
mov
dec
lahf
pop
mov
addr16
sarb
xor
sbb
fnstenv
xor
dec
xor
insl
sub
inc
inc
mov
add
and
xchg
xchg
mov
packuswb
adc
leave
and
movsl
push
std
mov
push
stc
sbb
jno
bound
add
mov
fs
pop
imul
incb
mov
push
mov
stc
pop
inc
cmpsl
fstps
stc
add
mov
fsubl
mov
mov
inc
jno
lahf
or
add
mov
pop
testb
mov
push
mov
enter
inc
dec
aaa
and
shlb
jne
mov
shll
fisubl
lret
cmpb
aam
test
inc
mov
sub
add
insb
mov
xchg
inc
mov
negl
inc
or
rcrb
cs
push
jmp
mov
in
xchg
cwtl
sbb
rcrl
lcall
jne
mov
jb
test
or
fs
add
cmp
lods
mov
arpl
and
or
je
pop
pop
nop
inc
xlat
scas
adc
jl
mov
les
push
aad
jge
inc
out
les
push
mov
fstps
mov
clc
movsb
cmp
bound
enter
add
stc
xchg
adc
inc
inc
pop
out
lods
outsl
or
jl
xchg
mov
jl
std
cmp
xchg
out
sbb
shlb
push
xlat
or
lock
and
jl
nop
mov
cmpsl
imul
sbb
or
mov
cmp
nop
sub
test
mov
das
mov
dec
fildll
cmp
scas
inc
clc
pushf
fidivrs
shll
lods
ljmp
adc
jp
sub
cmpsb
aaa
rcrb
lods
aaa
push
ret
adc
pop
shlb
or
sbb
push
js
mov
loope
dec
imul
push
pop
aas
ror
adc
inc
aad
lret
loop
insb
nop
outsb
add
pop
xchg
mov
add
add
cltd
jp
push
mov
jb
push
mov
mov
fstps
push
mov
pushf
cltd
mov
mov
adc
inc
repz
xchg
cltd
lcall
in
enter
mov
mov
mov
lcall
mov
cmp
mov
popf
push
mov
sti
mov
in
xchg
fisttps
das
adc
fs
xchg
mov
push
mov
insb
pop
sub
mov
push
out
mov
mov
ret
subb
pop
shll
xor
movzwl
sbb
jl
dec
std
je
pushf
ljmp
and
mov
xor
sub
das
femms
hlt
push
and
add
movsl
cmp
imul
into
mov
daa
jg
or
jo
ror
jecxz
jge
fidivs
bnd
jg
in
push
mov
outsl
dec
cmpsb
mov
pop
sbb
dec
xlat
movsb
push
stc
in
pop
or
xchg
popf
inc
adc
stos
mov
ret
lcall
loop
int
push
and
fnstsw
and
outsb
into
inc
movsb
sbb
es
add
inc
add
jp
jmp
pop
sti
popa
push
lret
jns
lods
pop
jmp
or
jno
pop
lahf
aam
sahf
nop
andb
add
add
xchg
sahf
ret
xchg
stc
sti
cmp
leave
loope
ret
mov
inc
jle
xchg
ret
adc
idivb
in
arpl
lcall
pop
xchg
dec
and
aam
pop
xlat
fdivl
sarb
shll
and
mov
into
sub
sbb
clc
mov
xor
or
sub
mov
pop
cmpb
mov
out
sub
and
mov
test
mov
adc
int3
jl
lcall
sub
popf
into
xorb
jl
mov
sub
call
sub
lahf
cmp
mov
aam
sub
fistps
push
and
test
dec
mov
cmp
popf
lods
mov
xor
add
or
lret
xor
bnd
sub
rorb
or
xor
ret
pop
xor
pop
insb
pop
pusha
jl
sub
test
rolb
int
xor
push
jb
push
mov
lods
sub
fcoml
icebp
push
xchg
jp
jle
mov
xor
notb
add
push
jle
pop
out
xchg
daa
sbb
xlat
xor
rolb
dec
or
rcl
leave
stos
rorl
jecxz
shrb
dec
addb
mov
mov
subb
rcrb
xchg
mov
mov
ljmp
adcb
xchg
sbb
push
ret
rol
es
out
fnsave
fsubrl
sbb
mov
mov
iret
mov
out
shll
xchg
lock
xlat
dec
inc
fxsave
dec
shrb
push
xchg
jno
mov
je
pop
shld
test
jne
sub
das
mov
clc
cmp
lock
mov
and
pop
sub
pop
xor
fnsave
sbb
mov
or
jl
ja
rcll
add
mov
or
xor
mov
jle
in
xor
cmp
jmp
push
ret
sarb
adc
fnstenv
movsl
out
jmp
mov
mov
sbb
call
xchg
jae
cli
into
pop
inc
bound
ja
mov
aas
scas
lock
cmpsl
or
out
test
push
lcall
rcrb
push
ds
stos
fiadds
rcl
jbe
adc
repnz
pushl
jno
cwtl
shrl
mov
sbb
int3
dec
mov
sub
adc
jl
sub
test
push
cmp
popf
sub
adc
xchg
inc
jne
mov
or
xor
xchg
fistl
jnp
sbb
pop
dec
aas
or
xorb
dec
pop
fstpt
loopne
adc
notl
mov
mov
or
test
dec
mov
or
jg
fistl
add
leave
movsl
fiadds
fstpt
sarb
fidivrs
sub
adc
cmp
mov
mov
or
jns
xchg
and
pop
xchg
adc
dec
lea
jle
push
leave
pop
sub
sub
xchg
dec
ljmp
into
fwait
ljmp
aam
xor
or
leave
push
jnp
dec
add
aas
lds
je
inc
aaa
push
xor
lods
sub
xchg
push
xor
and
es
incl
out
or
xchg
jne
repz
cli
orb
pop
std
daa
xor
cmp
dec
call
sbb
mov
push
out
popa
scas
jp
jp
icebp
add
inc
mov
sbb
rcrb
in
xchg
sbbb
inc
in
xchg
loop
cmp
ret
iret
into
rol
mov
jbe
mov
sbb
sub
and
cmp
cltd
and
cli
cmp
stos
mov
loope
psubq
mov
mov
xchg
std
push
mov
mov
and
adc
aam
sub
inc
adc
subl
cmp
aas
pop
xchg
xchg
or
add
inc
jae
idivb
adc
dec
mov
cld
xor
xor
dec
out
rolb
or
imul
fdivrs
popf
bound
jp
icebp
lods
mov
addl
xchg
push
mov
pop
mov
je
and
xor
cmp
sbb
add
mov
add
push
jno
pusha
dec
adc
xchg
adc
sbb
data16
repz
lcall
add
push
nop
xor
cs
xchg
adc
xor
icebp
inc
ss
aam
push
dec
add
lret
testb
bound
xchg
pop
xor
jne
nop
sub
jo
push
xor
movsl
mov
mov
pop
scas
or
mov
scas
fidivrs
leave
mov
dec
push
sarw
dec
xorl
ss
jp
lret
inc
popf
adc
inc
cmp
mov
fisttpll
cs
mov
or
inc
shrl
push
adc
sti
vcmpss
xor
sahf
adc
daa
movsl
jle
cltd
mull
shrl
push
push
cmp
push
xor
dec
cmp
repz
stc
repnz
mov
or
call
jmp
inc
icebp
pop
sbb
pop
adc
pop
es
arpl
push
les
call
pop
dec
mov
std
and
fistps
in
jle
gs
mov
push
jg
push
push
lods
jb
push
cmpsb
pop
cmp
xchg
incl
adc
xor
icebp
add
mov
or
dec
in
test
icebp
test
stc
lret
ljmp
idivl
arpl
adcb
loope
fdivl
and
pop
test
pop
adc
mov
test
inc
into
pop
add
out
and
mov
out
les
jmp
scas
es
add
sbb
cmp
jno
fidivl
jle
outsb
xchg
pusha
roll
jg
or
pop
xchg
and
call
adc
imul
leave
xlat
cmp
pop
push
jnp
aaa
inc
cmp
adc
repz
stos
insl
xchg
lret
sahf
sub
sub
xchg
xchg
movsb
stos
out
inc
out
or
daa
rolb
inc
fcoml
dec
sbb
jle
daa
ds
jmp
jnp
adc
inc
test
and
neg
adc
jb
cmpsb
clc
lahf
aad
push
in
mov
mov
out
pop
cmp
pop
leave
jge
decl
pop
push
mov
daa
xchg
and
adc
xchg
add
ds
sbb
jl
ret
orl
pushf
repz
adc
sub
mov
inc
scas
lds
scas
cmc
sub
push
arpl
push
mov
pop
jl
enter
and
cmc
test
pop
xor
loopne
push
out
pusha
aaa
addr16
push
das
icebp
inc
lods
push
lods
lcall
sub
lret
cwtl
xor
and
decl
clc
lahf
dec
in
xchg
aam
push
cmp
jns
xchg
fnsave
mov
lahf
pop
mov
inc
mov
popa
xchg
sub
mov
add
push
pop
icebp
push
push
xor
out
shl
fwait
pop
test
aaa
dec
addr16
test
adc
fbstp
aaa
repnz
lret
arpl
repz
mov
pop
jle
jbe
dec
loopne
movsb
fst
addr16
fdivl
push
sbb
in
stos
jle
cld
lea
icebp
lret
daa
shrb
mov
and
sbb
mov
je
test
pop
lods
imul
in
mov
je
push
inc
and
jl
push
movsl
mov
xchg
sahf
stc
mov
jne
pop
push
out
mov
mov
sub
xchg
pop
ret
mov
push
das
in
cwtl
add
xor
sbb
or
arpl
xor
cltd
cmp
ja
cltd
cli
pop
fs
and
dec
mov
add
es
aaa
or
add
aaa
cmp
add
adc
shlb
sub
and
scas
inc
pop
outsl
je
inc
sahf
pop
pop
out
jns
cmp
repz
jle
sbb
cmp
cmp
mov
test
pop
aas
std
mov
adc
mov
clc
rclb
stos
add
repnz
das
fcmovb
cmp
mov
adc
iret
rolb
push
cmpsl
sub
mov
sub
mov
xchg
data16
cmp
pop
loope
mov
sti
movsb
movsl
xchg
imul
out
out
mov
push
mov
adc
and
xacquire
insl
and
je
mov
pop
dec
add
jge
sets
push
xor
push
lret
or
xchg
mov
in
sti
lret
ret
or
cmpsb
cmp
jp
inc
fistps
sbb
sbb
mov
jb
dec
jb
adc
and
outsb
aam
into
pop
jnp
cli
adc
lcall
jnp
sarb
stc
andl
in
outsb
aas
adc
mov
les
dec
out
fidivs
into
loop
scas
jecxz
sahf
sbb
add
jno
xchg
mov
popf
fstpt
test
sub
push
add
or
nop
xor
aas
sub
mov
and
lods
aaa
pop
pop
in
add
xlat
cmp
jno
les
pop
test
jnp
out
sbb
mov
ja
xor
or
mov
and
cltd
ja,pt
sbb
push
notb
mov
add
mulb
testb
mov
ljmp
xchg
fcmovu
dec
cmp
cmp
shl
repz
sbb
cmp
ret
repz
repz
lahf
les
xor
push
xor
rcr
inc
lret
sub
cmp
rcrb
stos
mov
gs
int3
test
xorb
fs
lret
push
call
lods
and
push
scas
mov
rcr
jmp
jae
push
enter
and
jmp
pop
inc
push
push
cs
adc
in
push
xorl
cmp
int
movsb
mov
ficompl
push
aad
popa
dec
jbe
fwait
movsb
imul
or
cwtl
in
pushf
dec
jp
lods
imul
sbb
xchg
lahf
mov
gs
outsb
or
add
cmp
or
sbb
mov
mov
mov
xchg
adc
shlb
and
aad
adc
shl
adc
add
add
xor
out
pop
dec
jae
xchg
fildl
and
jne
cld
add
push
lcall
xchg
iret
xchg
xchg
xor
dec
xchg
pusha
jg
inc
lcall
sahf
sub
scas
ja
inc
mov
inc
dec
dec
jmp
xor
adc
pop
mov
sbb
and
fiadds
in
hlt
xor
jg
cmpsl
inc
int
adc
loopne
data16
mov
sub
aam
push
andb
push
or
adc
bound
adc
stos
jle
imul
mov
clc
int
out
and
add
xchg
shrl
and
into
xchg
jbe
pusha
leave
std
jle
adc
sub
sub
in
repz
stos
daa
cltd
mov
int
fidivl
cmp
incl
pop
mov
jno
out
jae
popa
pop
inc
dec
stc
ss
cmp
and
or
push
sub
sbb
loope
lret
ficoms
xchg
loopne
lcall
xor
in
and
cli
or
icebp
cmp
fs
into
je
xor
xor
in
push
loope,pn
mov
xor
fnstsw
mov
sti
cmp
xchg
cmc
insl
pop
cltd
dec
out
xor
sbb
xor
mov
pop
xchg
and
jb
ja
cmpsl
adc
add
add
cmp
inc
sub
add
mov
mov
ret
faddl
ret
or
fistpll
sbb
dec
sub
outsl
pop
cmp
repz
xchg
dec
fiaddl
mov
jnp
inc
add
cli
das
in
in
jne
in
sub
cmpsb
pop
xlat
and
inc
pop
mov
mov
or
add
outsl
fistps
sub
add
pop
cmp
and
mov
fs
outsl
jae
pop
add
jge
push
xor
sbb
mov
sti
sahf
push
pushf
das
mov
daa
faddl
jle
sbb
mov
mov
lret
or
lods
out
movsl
sub
movsb
push
test
xchg
jb
xor
testb
adcl
or
daa
jae
jbe
adc
inc
lahf
lea
and
dec
adc
mov
mov
test
pop
and
loop
sbb
mov
fadds
int
ret
aaa
loope
cs
add
add
faddp
push
iret
push
pop
mov
adcl
jp
ret
addr16
fcmove
enter
xor
popf
popa
andb
je
mov
mov
cmp
mov
rcll
je
sbb
lahf
mov
xchg
or
stos
jb
bound
inc
or
je
mov
clc
add
cmp
xchg
lods
mov
imul
ja
out
jle
sub
leave
call
dec
bnd
push
aam
dec
sbb
xchg
clc
xor
pop
insl
mov
add
aam
xor
ljmp
cmp
imull
flds
jmp
int3
je
fwait
inc
add
mov
pushf
mov
dec
dec
movsb
test
jns
outsl
sub
xor
sti
sarb
xor
out
test
cmpsb
gs
stos
push
jo
rcrl
repnz
pop
ss
jb
test
xchg
aad
stos
out
sub
jmp
clc
leave
and
lret
rcrl
rol
data16
daa
dec
xor
jno
icebp
lret
push
dec
out
xchg
scas
or
inc
into
shlb
xchg
adc
push
repnz
data16
rcrb
pop
and
pop
sbb
repnz
add
mov
repnz
rorb
sbb
loopne
mov
loopne
mov
xlat
jp
addr16
nop
xlat
nop
xor
loopne
xor
repz
cld
jbe
imul
adc
lock
dec
pop
sbb
xor
mov
mov
std
shr
dec
cmp
aaa
ja
popl
push
rcrb
out
sub
iret
add
add
mov
fsubs
cwtl
ret
pop
fildl
mov
cwtl
sub
mov
and
pop
add
inc
sub
enter
out
inc
dec
imul
sbb
test
add
jp
ret
lds
cwtl
xor
dec
pop
mov
mov
pop
addb
pop
pop
das
jecxz
fsubs
pop
ret
and
dec
cmc
in
aam
pushf
mov
xchg
fcomps
jmp
mov
out
sahf
mov
sti
fistpl
pop
out
inc
ljmp
mov
xor
sbb
aaa
sub
pop
pop
xor
call
push
adc
sub
adc
jno
imul
frstor
shr
sarb
inc
pop
inc
dec
inc
push
inc
pop
outsl
mov
sbb
push
shrb
fsubrp
xchg
out
adc
ljmp
jnp
test
or
mov
mov
inc
xor
clc
jp
and
adc
aam
pop
sahf
je
nop
ja
ljmp
jp
repnz
adc
mov
adc
ret
mov
jmp
push
mov
push
mov
inc
dec
pop
mov
pop
outsb
lret
mov
dec
fsubr
or
rcrl
push
cmp
lahf
insl
test
and
sbb
fdivl
shlb
cwtl
sbb
push
bound
push
inc
daa
mov
and
imul
dec
mov
dec
frstor
std
cwtl
xor
push
int3
push
jp
mov
cmpsl
cli
add
sub
jle
push
mull
out
mov
cmp
pop
pop
pop
cmp
push
and
mov
ds
out
jmp
out
mov
movsb
lods
lret
rolb
sub
insl
xlat
mov
inc
rcrl
nop
inc
cmc
repnz
imul
loop
mov
mov
inc
and
roll
cmc
mov
arpl
mov
mov
xor
cmp
adc
testb
pop
mov
cmp
xor
cmp
or
sub
inc
movsb
daa
arpl
roll
mov
sbb
stc
idivl
je
jle
pop
mov
cmp
xchg
xchg
jb
hlt
and
inc
mov
shll
xor
jge
cmp
aaa
mov
pop
std
jns
test
adc
adc
aad
ja
call
mov
jbe
out
int
sub
insl
and
mov
xchg
xchg
ljmp
mov
mov
test
jbe
ret
sti
stc
xchg
fisttps
repz
xchg
ret
cmpsl
fiadds
loopne
jmp
imul
sbb
dec
xor
mov
inc
out
mov
rcrb
insl
inc
hlt
add
xor
adc
sbb
pop
daa
push
push
cmp
cmpsl
pop
sub
sbb
out
movsl
inc
std
jg
or
pop
mov
cltd
pavgb
or
pop
leave
mov
stos
shll
test
loopne
insb
mov
das
shll
rclb
fcmovne
push
outsb
stc
push
adc
fwait
jmp
pop
pop
movsl
inc
push
jl
and
lcall
cmpsb
or
cmp
dec
imull
mov
into
sub
les
xchg
pop
jns
sar
cmp
and
fwait
mov
shll
pusha
mov
xchg
fwait
mov
orl
mov
mov
jmp
push
xor
lea
or
ret
stos
mov
popf
aam
mov
jg
sbb
mov
push
mov
out
pushf
les
repz
xchg
out
lcall
outsl
xchg
aaa
nop
fidivl
movsl
mov
sub
insl
outsl
adc
pop
ret
inc
xor
jl
mov
mov
jecxz
popf
into
mov
out
insb
in
push
push
xlat
jns
sbb
loope
shr
adc
repnz
inc
adc
push
mov
cmp
icebp
xchg
inc
mov
mov
adc
pop
adc
scas
xor
xor
dec
adc
xor
mov
xor
lock
push
adc
popa
inc
ss
inc
mov
cmpsb
mov
adc
mov
aad
jno
pop
insb
mov
sbb
mov
inc
ja
sub
in
dec
test
lcall
or
mov
and
sub
hlt
nop
cmpsb
jnp
xor
xchg
or
xor
dec
arpl
fwait
in
push
xchg
clc
mov
sarb
push
mov
flds
xchg
stc
ja
loope
mov
mov
aas
fisubrs
lds
ret
into
add
lods
mov
je
or
mov
iret
xchg
cmpsb
xor
pop
mov
lock
mov
xchg
rclb
out
sub
bound
jne
push
mov
outsb
out
rcll
mulb
sub
scas
fsubrs
lds
scas
leave
mov
bnd
mov
out
and
mov
inc
add
push
pushf
ja
lea
sub
adc
repnz
push
aaa
repnz
or
xor
in
push
sbb
pop
dec
fucomp
mov
cld
movsl
mov
add
ret
xchg
and
cmc
sbb
sti
jb
andb
or
test
dec
mov
test
imul
mov
dec
and
imul
pop
lcall
daa
sahf
movsl
es
xchg
cmp
adc
mov
dec
xor
aad
push
push
repnz
mov
jmp
ja
mov
popa
xor
aad
pushl
test
negl
jne
fnstcw
xchg
call
lret
add
push
les
sub
rcll
int
jg
jb
lods
enter
scas
popl
fwait
mov
jmp
pop
cmpsb
fistpl
leave
sbb
bound
xchg
push
pushf
pop
je
adc
jo
push
aam
jo
cmc
xor
sub
and
popf
push
or
mov
cmpsl
mov
xor
fisubl
fildll
js
fcmovb
mov
add
sub
fnstsw
mov
push
fdivs
mov
shll
cmp
dec
incb
movsb
mov
pop
jl
in
mov
mov
add
xor
push
aam
jp
and
or
inc
cwtl
cmp
xor
fmuls
je
daa
cmc
push
dec
data16
enter
das
lret
imul
jne
cmp
dec
or
cmp
mov
and
inc
jle
cmp
jnp
imull
fdivl
push
pop
adc
int
mov
dec
adc
les
cs
or
pop
jne
scas
jb
sarl
imul
jmp
inc
push
les
cmp
in
imul
adc
cmp
mov
cli
xchg
and
or
cwtl
xchg
mov
jmp
or
mov
popl
cmpsb
pop
jnp
sub
xchg
mov
push
xchg
push
add
jmp
adc
mov
out
pop
xchg
ret
and
sbb
adc
xor
fnstsw
inc
adc
outsb
scas
add
sbb
bound
std
adc
fnsave
xchg
iret
cmp
dec
xchg
mov
xor
rol
adc
jmp
stc
dec
add
and
fmull
call
pop
fdivr
popa
call
inc
xor
rcrl
and
clc
jae
pop
fcomi
fs
xchg
xchg
in
xor
movl
dec
cmp
out
test
js
int3
movsl
out
lahf
sti
fbld
addr16
push
mov
jno
jns
sub
shlb
lock
inc
rcll
es
cmc
dec
push
fwait
cmpb
and
dec
lret
mov
jecxz
or
sub
data16
jno
inc
cmp
add
sbb
mov
xchg
das
pop
jl
mov
cmp
jge
xchg
test
sub
std
lret
cwtl
imul
and
cwtl
in
add
and
or
push
inc
adc
or
dec
pop
xchg
int3
sbbl
sub
or
add
fs
int3
mov
push
cmp
scas
cmp
xor
push
push
and
adc
mov
sbb
xchg
popa
in
jb
fisttpl
xor
or
pop
popa
pop
mov
ret
adcb
ja
cwtl
jnp
dec
jnp
fidivrl
ds
sub
shlb
sahf
push
xchg
int3
pop
add
mov
jne
xchg
add
mov
mov
pop
xchg
add
jp
fs
mov
gs
pop
enter
dec
lods
out
and
jl
mov
call
cmp
sbb
adc
xchg
mov
out
daa
mov
xchg
and
mov
sbb
jmp
movsl
lds
inc
cmp
das
pop
push
stos
add
mov
jnp
xchg
sbb
movsb
idiv
jecxz
mov
jg
ja
dec
bound
lods
cltd
scas
aad
sub
popa
adc
cmpsb
data16
push
xchg
xchg
fmuls
das
cmp
js
in
inc
jmp
sub
cmp
xor
aas
and
test
int3
mov
adc
push
mov
leave
fcmovbe
jae
cmp
sub
jmp
push
addr16
cmp
push
es
mov
daa
and
jecxz
lahf
pop
int3
push
call
je
add
push
scas
outsl
inc
push
fcmovbe
pusha
outsb
inc
jge
pop
imul
aam
dec
into
mov
int3
cmp
xchg
mov
mov
xor
xchg
cmpsl
sbb
sbb
in
loope
stc
jge
pop
dec
pop
add
mov
inc
pop
mov
into
push
repnz
xchg
bound
aad
lret
lods
mov
pushf
jmp
cmp
mov
push
pop
mov
int
pusha
test
outsl
lret
push
mov
mov
mov
cli
into
test
mov
fs
xor
add
or
pop
xchg
xchg
xchg
push
push
pop
mov
sbb
jb
imul
pop
addb
iret
push
xor
mov
aas
dec
adc
mov
pop
pop
test
fs
fnsave
test
push
test
notl
in
pusha
pop
fwait
std
mov
or
jne
das
mov
les
sbb
adc
cmpsb
fs
cs
in
sbb
add
test
jno
mov
mov
lret
add
sbb
pop
pop
notb
sub
cltd
cld
sbb
pop
repz
pop
rcll
imul
dec
js
or
adc
or
xor
dec
sub
repnz
jns
clc
mov
addb
push
mov
sbb
sbb
addr16
xlat
or
mov
push
out
mov
xor
push
xchg
mov
adc
mov
loop
andl
out
add
rolb
sub
sahf
arpl
add
mov
mov
test
in
inc
sbb
rcrl
cld
int
jg
jp
jae
cmp
jnp
pop
cltd
push
movsb
push
push
push
xor
xchg
push
icebp
out
cmp
sub
aam
outsl
repnz
ret
lea
std
cmp
add
mov
jno
and
xchg
sarl
in
lahf
mov
outsb
mov
sbb
dec
fistpll
or
out
in
insl
push
arpl
mov
dec
les
pop
std
out
ficompl
mov
sub
sub
xor
nop
in
mov
mov
in
sub
xchg
sbb
cmpsl
fstps
decl
mov
ljmp
push
outsb
push
pop
cld
sub
sahf
imul
fsubrl
mov
adc
pop
dec
xchg
iret
sbb
mov
mov
adc
pushf
sub
js
mov
icebp
std
mov
mov
fisubs
lcall
add
mov
popa
dec
in
ljmp
cmp
out
in
push
ja
cmp
push
insb
sub
clc
or
aas
xchg
sub
fcmovne
sub
or
jl
mov
sub
mov
jg
mov
mov
inc
add
or
xchg
xchg
out
jne
inc
ja
mov
dec
pusha
xchg
fimull
jo
cld
subb
jno
xchg
out
call
adc
inc
data16
cmp
push
dec
pop
fistps
pop
and
mov
addr16
push
adc
cwtl
rcr
sbb
and
subl
sbb
sbb
loopne
mov
icebp
xchg
dec
adc
aaa
mov
sub
iret
lahf
shlb
xchg
xchg
leave
cmp
and
inc
lock
push
add
insb
sarl
jbe
jnp
cmpsb
stc
sbb
nop
in
push
test
push
cmovns
cmp
fimull
dec
dec
push
mov
or
test
out
sahf
jbe
xchg
daa
push
and
pop
sbb
cmp
pxor
enter
sbb
testb
in
test
lds
sbb
mov
sahf
loope
insl
mov
stos
sub
push
rorb
xor
int3
je
in
fwait
mov
inc
push
loop
ljmp
mov
dec
xchg
das
push
mov
jbe
push
pop
rcl
cmp
fdivr
insb
lcall
push
iret
or
inc
sub
sbb
pop
adc
mov
jl
dec
inc
mulb
xor
pop
out
incl
cmpsl
adc
cmpsl
sub
les
loop
popa
int
jnp
and
push
jmp
sbb
jp
or
cs
bnd
arpl
test
xor
xor
clflush
dec
push
xor
hlt
lret
inc
jle
int
mov
ss
subl
and
mov
jb
call
and
adc
mov
mov
fnstenv
cmpb
dec
mov
arpl
xchg
clc
jp
or
and
lock
lds
mov
lods
adc
cltd
cmp
ficomps
int
inc
lcall
jl
lock
adcb
lret
and
ret
inc
sub
or
jmp
mov
outsl
out
add
out
cmpb
lock
xlat
cmp
lock
shll
sbb
xchg
shll
xchg
sbb
cmp
pop
or
xchg
pop
pop
pop
mov
jb
push
gs
dec
jle
push
js
sub
fwait
push
stos
cmp
lds
lcall
dec
sub
push
xchg
jae
push
movsb
stos
jle
fsts
mov
pop
cld
ret
mov
negb
clc
rol
xlat
or
xchg
xchg
lock
pop
mov
leave
addr16
and
xor
sub
aam
repz
adc
or
int
xorl
leave
xchg
adc
shr
lods
idivb
call
and
mov
aam
daa
mov
jge
ds
nop
mov
cmpsl
cmp
adc
les
push
in
add
fwait
in
popf
xor
jmp
aas
mov
aam
ret
fnstsw
adc
lods
test
popf
jae
pop
xchg
mov
leave
psubq
mov
dec
adc
mov
lcall
push
leave
fwait
shr
jbe
hlt
aam
lods
push
shll
lcall
aad
mov
and
push
cmp
pop
and
xchg
inc
xor
aas
inc
mov
xchg
cmp
pusha
leave
addr16
je
jmp
lret
leave
inc
xlat
and
push
js
les
nop
scas
and
add
xchg
test
inc
clc
jp
data16
push
sub
pop
daa
es
imul
notl
dec
ss
loope
dec
lock
pop
popf
cmpsl
cltd
sbb
push
lret
stc
aad
je
rorb
cs
dec
aas
pop
std
xlat
xor
fidivs
fldcw
xchg
adc
lahf
mov
adc
add
jl
jg
enter
or
sbb
and
inc
adc
or
cmc
mov
in
pop
and
cmpsb
stos
sbb
push
push
lods
cld
mov
stc
inc
out
sub
aaa
and
pop
test
add
xchg
mov
jo
lcall
add
gs
dec
cltd
pop
icebp
out
jne
dec
xor
add
sub
es
test
inc
sarl
cmp
jmp
mov
gs
mov
fdivs
lahf
in
cmpsb
iret
mov
fwait
ret
shlb
pop
cltd
mov
jne
push
bound
cmpsl
pop
lret
cmc
fcomps
popl
sub
xstore-rng
cmpsl
inc
int
jo
icebp
mov
loope
or
and
in
rol
pop
inc
xor
pop
pop
adc
psubusb
or
fsubrl
popa
ds
ja
insl
mul
mov
nop
lcall
push
dec
sub
int3
jne
ret
mov
push
lret
push
mov
imul
add
sub
bound
lods
aas
adc
pop
fsts
movsb
in
lods
fcomps
sub
pop
shl
xchg
dec
inc
nop
and
xor
or
push
adc
mov
and
mov
xchg
dec
dec
stc
fisttps
adc
das
and
insb
inc
movsl
fsubr
jmp
int3
sti
mov
dec
cmpsl
and
mov
cmp
jno
inc
mov
dec
add
stos
jb
out
cmp
cltd
out
pop
iret
push
jne
out
loop
in
xor
pusha
adc
or
jg
mov
lret
or
gs
jns
sbb
popf
das
lret
mov
mov
or
adc
cmp
inc
mull
push
aad
nop
jne
push
jbe
insb
push
and
cmpsb
adc
lahf
fs
mov
add
pop
xor
adc
add
mov
xor
aad
mov
arpl
xchg
add
lods
ljmp
loop
push
xor
fstpl
ret
xchg
sbb
sub
push
xchg
div
cwtl
mov
xor
jg
in
inc
pop
mulb
or
sarl
cmp
xchg
mov
adc
aad
cld
lcall
or
adc
add
mov
pop
dec
inc
pop
addl
add
add
pusha
add
mov
fdivr
xchg
lahf
xchg
insb
popf
mov
outsl
aad
lds
es
mov
and
mov
aad
fwait
sub
xor
mov
sbb
push
cmp
adc
fistl
sub
lahf
pop
push
cmp
cmp
out
mov
arpl
icebp
pop
or
pop
mov
repnz
xchg
test
pusha
mov
or
xchg
xor
imul
jmp
ja
cld
cmp
out
sub
mov
in
filds
jbe
sbbl
fadds
frstor
movsl
inc
inc
and
xor
or
ja
pop
lahf
xchg
add
and
mov
jmp
mov
fmul
inc
leave
lahf
sahf
data16
loop
push
movsb
iret
cli
outsl
cs
insl
jmp
test
and
xchg
jnp
xchg
rcrb
dec
mov
cmpsb
sbbb
inc
mov
adc
adc
ss
add
pop
push
iret
pop
push
push
sbbl
ja
and
clc
jnp
cltd
pop
add
notb
sbb
das
adc
lret
int
or
pushf
pop
dec
jns
mov
sahf
inc
pushf
and
das
shl
ja
popa
or
je
sub
in
push
andl
out
out
inc
scas
js
and
in
push
and
fs
lea
cmp
mov
mov
hlt
int
mov
inc
fdivrs
fs
cmpsb
mov
aad
into
push
aad
add
cmpxchg
iret
and
scas
cmp
data16
jne
ret
sbb
fiadds
addr16
fildll
insl
aam
mov
add
por
mov
xchg
insb
loope
jle
xchg
xchg
pop
pop
push
out
popf
xchg
idiv
jg
cmp
fmull
xor
cli
cld
mov
bound
mov
fstpt
cltd
cmpsb
call
or
cltd
jno
push
das
aaa
por
hlt
xchg
enter
cmc
movsb
imul
inc
aas
sahf
out
mov
sub
pop
fldcw
mov
loop
sub
mov
bound
iret
aad
stos
xchg
jl
add
movsb
pusha
mov
les
inc
mov
leave
add
fs
jge
jle
pop
insl
call
pop
inc
scas
push
xor
inc
jae
adc
cmp
inc
or
inc
sti
std
stos
shl
imul
rcrl
popa
in
mov
inc
or
lcall
sub
in
es
ret
sar
cld
dec
jae
add
xchg
inc
jl
pop
orb
inc
push
xor
test
jle
je
sub
rol
out
insl
or
inc
sub
int3
rorb
lock
sbb
fsubrs
cmp
sbb
cmp
fdiv
mov
fwait
jecxz
xor
cmp
addb
stos
sub
push
repnz
dec
and
cwtl
clc
or
and
mov
lahf
jge
pop
cli
pop
inc
and
push
jae
rcll
leave
pop
andl
stos
icebp
cmp
xor
sbb
out
enter
mov
mov
sub
dec
cltd
pop
je
push
mov
adc
mov
xor
fisubrl
out
mov
lods
jle
jmp
and
or
out
cld
xchg
into
sub
cld
popf
push
xchg
std
dec
popa
mov
push
inc
in
ljmp
push
jno
xor
leave
je
fwait
mov
test
std
mov
push
xchg
pop
call
xor
loopne
or
int3
mov
mov
mov
push
aad
xchg
push
and
pop
push
sbb
mov
and
sbb
mov
sti
pusha
mov
dec
fadds
cmpsb
mov
repz
out
dec
fdivl
pop
mov
mov
ret
xor
lahf
or
aaa
push
mov
push
loop
mov
add
jg
pop
arpl
pusha
cmp
loope
in
and
mov
fistl
or
loop
out
pop
fdivs
sbb
dec
mov
pop
mov
gs
and
gs
and
sbb
pop
hlt
xor
inc
movsl
mov
mov
scas
push
sub
sbb
mov
push
clc
inc
fisubrl
mov
nop
dec
ljmp
mov
jo,pn
daa
test
jne
testl
jge
add
leave
loopne
inc
adc
add
fs
out
sbb
icebp
out
ret
pushf
push
aad
mov
dec
mov
push
sbb
repz
rcr
insl
push
lcall
testl
pop
sub
aas
movsb
dec
xchg
popa
xor
sub
sub
cmp
jmp
aad
or
xchg
popa
mov
push
test
jmp
adc
mov
jge
xlat
inc
mov
xorl
out
xchg
jno
xor
shll
lahf
sti
stc
cld
jbe
subl
aam
movsl
aaa
hlt
or
mulb
dec
int3
xchg
jecxz
pop
sbb
call
cmp
scas
aad
cmc
mov
out
mov
loopne
pop
xchg
popa
lock
inc
outsb
bound
pop
add
repnz
stc
push
fldcw
mov
pop
jnp
push
pop
push
inc
fstp
lcall
repz
sub
test
pusha
xchg
stos
into
popa
and
jne
jns
pop
enter
sub
jge
repz
in
pusha
in
lret
fsubrp
or
movsb
or
cmp
mov
bound
adc
inc
dec
flds
jp
push
sbb
fwait
outsb
xchg
pop
pop
mov
sub
sbb
mov
gs
repz
lret
add
jno
push
jo
add
mov
inc
je
lods
mov
les
sbb
sahf
mov
push
lods
dec
ja
and
or
fwait
mov
add
pushl
sbb
cs
neg
and
jg
bound
pop
add
mov
js
je
les
adc
iret
cmp
in
ljmp
test
or
nop
sub
in
aad
loop
popa
jecxz
and
mov
fld
sub
iret
scas
inc
dec
leave
mov
xchg
mov
pop
icebp
mov
mov
ret
mov
mov
jecxz
loopne
cld
mov
mov
je
jl
leave
ljmp
in
fwait
addr16
addr16
testl
mov
mov
mov
add
outsb
pushf
cmc
lret
or
movsl
mov
fimuls
loopne
mov
lods
xor
in
int
pop
adc
ret
iret
sbb
js
test
dec
movsb
subl
cmp
pop
das
inc
in
sub
push
sbb
mov
and
subps
es
decb
out
shrb
fwait
pusha
jecxz
push
mov
pop
add
jo
mov
aam
add
aad
inc
mov
mov
int3
hlt
std
pusha
push
xor
xor
mov
faddl
lds
clc
les
lret
adc
mov
lock
jl
jge
inc
cld
xchg
out
cmp
or
or
repz
or
insl
int
cmpsb
fst
add
jo
jl
xchg
addr16
mov
sbb
xchg
sti
cmp
inc
outsl
dec
xchg
fs
jo
movsl
fs
sti
sbbb
loopne
in
mov
icebp
popa
jo
int
rol
sbb
pop
cmp
cwtl
mov
pop
pop
or
dec
mov
or
sbb
andb
jg
cwtl
or
pop
pop
ret
xchg
les
and
mov
std
or
jae
add
jg
sub
jb
in
push
adcl
mov
jmp
pop
stos
mov
dec
mov
test
rol
and
mov
add
ss
andl
pop
xchg
add
cs
cmp
push
adc
lcall
aas
loope
leave
movsl
xchg
cmp
in
popa
in
cmp
lods
adc
fwait
imul
dec
mov
push
mov
or
cmp
push
xchg
test
xchg
and
adc
sub
gs
js
in
fucom
cmp
es
cmc
and
aam
sbb
and
out
mov
cmpsb
int
sub
in
xor
jl
add
shrb
sub
aad
mov
sub
fdivrs
fnstcw
mov
test
lods
ret
sbb
fldt
ds
mov
jmp
fmul
mov
push
lret
pop
fcompl
pop
jmp
mov
xchg
fbstp
dec
jmp
dec
mov
jno
test
in
xor
inc
add
loope
div
popa
scas
jl
xor
inc
sbb
popa
rcrb
sbb
rcrb
mov
loop
adc
pop
cmpsb
shrb
f2xm1
hlt
adc
out
gs
jl
sub
sbb
pop
or
sub
addr16
dec
lods
jp
lret
ss
sub
popf
out
ret
xchg
xor
imul
pop
ds
repz
aas
out
dec
aam
mov
int3
pop
imul
lret
sahf
repnz
insl
enter
jnp
push
out
imul
in
gs
xlat
xchg
addr16
pop
lret
pop
mov
dec
test
sub
movsb
adc
shrb
es
mov
pop
xchg
mov
jns
leave
sbb
xor
pop
pop
je
sub
popf
imul
mul
fidivrl
adc
cmp
in
aaa
add
shll
push
xadd
jo
adc
outsl
pop
mov
jmp
cmpsb
or
data16
test
insl
pushf
enter
rcll
push
mov
xor
jnp
jge
dec
bound
adc
repnz
ds
xchg
xor
xor
pop
and
ljmp
out
jmp
add
jp
mov
in
cld
into
loope
movl
aas
lahf
sbb
fucomi
cmp
popf
or
xor
mov
addr16
jae
jmp
xchg
fs
mov
cmp
pop
xchg
sbb
xacquire
incb
in
sbb
mov
jp
jle
std
int3
and
out
lcall
inc
push
jo
sti
out
and
lret
jp
nop
testb
ret
add
negb
lods
mov
xor
jle
fmul
lods
imul
int3
dec
cli
test
and
sar
pop
sbb
push
dec
jne
pop
aas
pop
mov
es
sub
loope
sbbl
mov
jb
ljmp
sbb
push
dec
xlat
mov
adc
ja
adc
pop
jmp
mov
pop
xchg
and
pushf
xchg
jge
aaa
test
lret
mov
orl
jae
inc
mov
pop
adc
and
div
push
mov
xor
sbb
inc
pop
mov
cmp
daa
out
pop
insb
xchg
xor
mov
sahf
in
jns
xchg
lds
and
mov
aam
push
xor
lock
inc
xchg
gs
xor
or
dec
fcomip
cmp
mov
or
xchg
push
dec
xchg
xchg
push
cld
xchg
arpl
gs
mov
in
repz
popa
out
mov
xor
pop
data16
in
jbe
test
icebp
xor
std
ficompl
sarl
pop
inc
sahf
ret
aad
jmp
js
insb
push
push
or
add
ret
int
xchg
cltd
imul
insb
fcmovnb
dec
cmp
dec
xchg
out
hlt
or
dec
mov
jg
ss
rorb
mov
lret
sbb
mov
sbb
orl
xchg
mov
loopne
js
mov
dec
pop
outsl
adc
pop
push
aad
pop
mov
cltd
cs
sub
mov
pop
jge
pop
dec
adc
sbb
int3
ud2
fisttpl
mov
loope
jmp
lods
outsl
movsb
sbb
pop
add
jo
scas
pop
pop
ja
sti
mov
push
pop
cs
insl
test
mov
xchg
jae
jle
adc
jp
sbb
xchg
dec
test
lret
push
outsl
out
sbb
cmp
mov
loopne
cld
sub
mov
lods
cmc
cmp
pop
sub
outsb
and
fwait
repnz
aaa
das
adc
shll
stos
inc
fucomp
push
mov
popa
xchg
dec
fmul
jg
xlat
dec
mov
popa
jae
addr16
cpuid
jne
mov
cmp
push
cld
pop
sbb
notl
popa
cmpsb
add
mov
mov
sbb
repz
xor
outsb
mov
mov
out
mov
sbb
mov
xor
sub
or
xchg
cmp
pop
mov
cmpsl
mov
cmc
imul
sub
xchg
shl
in
or
push
stos
or
xchg
jge
pop
scas
jnp
xor
les
mov
lret
insb
inc
mov
add
scas
shl
aaa
cltd
and
out
shrb
pop
popf
xor
inc
shll
icebp
loope
test
test
clc
add
sub
pushw
mov
call
arpl
cwtl
mov
push
sbb
inc
mov
pop
sahf
and
lret
mov
mov
xor
mov
rolb
push
aad
or
cld
pop
sbb
cmp
inc
aam
mov
mov
pop
push
xchg
dec
cmp
push
insl
adc
aam
and
mov
inc
xchg
movb
adc
sub
test
jmp
int
lock
cli
out
test
jbe
ret
ds
pextrw
pusha
or
or
jmp
xor
xchg
sub
ljmp
fiaddl
lds
inc
loopne
in
jns
jo
and
int3
xor
hlt
adc
out
cmp
add
xchg
into
fwait
mov
insb
jne
sahf
inc
sbbb
mov
dec
push
dec
inc
gs
dec
mov
mov
mov
sbb
mov
pop
sbb
in
mov
fdivl
xchg
mov
leave
outsl
push
adc
push
xchg
loopne
add
ja
ror
mov
xchg
stc
out
icebp
cmp
xchg
mov
xor
lcall
adc
lret
sahf
ficoms
mov
pop
jb
mov
and
inc
push
sbb
sbb
jg
and
in
inc
lret
sti
cmp
fldt
stos
sbb
xor
or
inc
pop
sub
dec
js
out
ficompl
dec
dec
push
pop
fwait
mov
mov
std
inc
and
push
xor
push
xchg
in
mov
out
aad
movsb
pusha
bound
inc
insl
in
lds
pop
jl
push
pop
insl
sub
dec
jp
xchg
movsl
imul
jbe
popa
nop
mov
jb
repnz
mov
ss
inc
xlat
rolb
inc
or
push
data16
mov
mov
rcr
jbe
xor
mov
inc
sub
ficoml
repnz
out
xchg
inc
sub
ja
dec
xchg
fnstcw
add
insl
int
call
sub
stos
sub
out
sbb
sub
lock
push
inc
sub
pop
nop
add
lcall
jge
std
rcll
outsl
movsb
call
xchg
pop
pop
mov
popa
out
lods
lock
xor
ret
mov
lret
xchg
in
lock
in
cmp
rcr
sub
jno
mov
jmp
outsb
dec
inc
cli
fsubrp
xchg
aam
sub
fcoml
xchg
loop
ds
aam
sti
inc
mov
mov
lahf
and
push
stc
popf
subl
es
ficoms
inc
int
cmp
xchg
je
mov
dec
pop
cmc
stos
sbb
cld
add
aaa
addl
sbb
repnz
jno
xor
sbb
adc
test
lret
sbb
add
cs
sub
hlt
push
adc
lcall
mov
fsubr
cmp
sub
jp
aas
dec
loop
in
or
adc
repz
rcr
or
xchg
out
call
fcomps
fdiv
pop
sub
bound
stos
leave
subl
pop
les
cli
or
out
rcr
add
dec
inc
mov
adc
and
lds
cmp
xchg
imul
xor
mov
mov
jo
push
inc
inc
jge
add
cltd
into
pushl
inc
repnz
pop
or
daa
addb
mov
fwait
into
pop
jmp
rcrl
fcomip
ss
push
and
xorl
vpsrlw
jl
adc
fdivrs
cmp
fsubr
iret
mov
sub
and
cmc
mov
pusha
ret
push
test
mov
sub
pop
outsb
cmp
mov
xor
add
lret
stos
xlat
addb
xchg
pushl
dec
adcl
imul
insl
paddsb
fcmovu
mov
jg
add
jl
pop
mov
inc
push
mov
jp
xchg
popf
pop
movsb
scas
cmp
lds
push
aaa
mov
stos
cmp
fidivrl
add
testl
inc
pop
mov
repz
push
or
out
lret
jo
pop
ds
xor
rol
dec
in
sbb
arpl
cmp
sahf
in
dec
in
pop
sub
adc
adc
dec
sbb
rcr
jl
in
aam
into
sub
cmp
cwtl
cmp
jmp
jae
or
js
and
cld
into
repnz
and
dec
cs
mov
adc
push
cmp
scas
ljmp
jmp
xchg
filds
int3
or
loopne
and
pop
inc
lods
daa
aas
mov
mov
or
sbb
lret
imulb
pusha
in
push
loopne
fisubs
xchg
pop
lods
das
add
repnz
pushf
sbb
sbb
fadds
aad
adc
int
mov
dec
xchg
data16
mov
std
enter
add
out
cmp
xchg
add
lret
stos
mov
add
ljmp
int3
test
dec
jns
sti
sub
xor
mov
adc
addl
cmp
ja
mov
push
mov
shr
lock
inc
mov
and
insb
gs
or
jnp
loop
push
jg
ret
pop
nop
sti
cmp
or
nop
orb
xchg
sub
idivb
scas
pop
sahf
stos
push
mov
and
push
adc
mov
call
ret
dec
nop
pop
insl
popa
jl
mov
imulb
dec
mov
sbb
xchg
jge
or
imul
dec
incb
dec
jnp
dec
out
scas
ret
cmp
daa
add
sar
sbb
xchg
mov
mov
js
fdivrs
xor
or
or
mov
testl
iret
inc
repz
cmp
mov
xchg
push
les
rcrl
lods
movsl
pop
daa
ds
insl
ficoms
mov
pop
xor
bound
inc
andl
outsb
xchg
mov
xorl
inc
add
daa
dec
into
popf
into
xchg
cltd
cli
mov
fisubl
loop
fs
jo
push
iret
mov
sbb
add
ret
add
fnstcw
jno
mov
push
dec
xor
adc
mov
mov
rcrl
lods
cmp
and
daa
cmp
mov
fld1
mov
cmpsb
cmp
sarb
rorb
add
test
outsl
adc
add
shll
aaa
aaa
jl
imul
push
mov
dec
mov
lret
fbld
rcll
inc
mov
pop
cmpsb
rcr
add
sbb
clc
xchg
inc
dec
test
mov
sub
orb
cmpsl
jmp
mov
xchg
jns
jge
mov
xchg
dec
inc
in
mov
and
push
sbb
gs
in
mov
and
test
xchg
out
adc
mov
adcl
dec
jbe
mov
cli
lods
mov
push
testl
mov
rclb
sub
loopne
dec
cmp
cmp
or
arpl
imul
pop
or
out
dec
icebp
cwtl
mov
mov
mov
push
int
push
cmp
pop
fcom
pop
cmp
cs
inc
inc
mov
lods
movsb
push
push
aad
ja
mov
push
fs
inc
push
call
sub
out
mov
out
add
pop
mov
jno
inc
adc
xor
ret
subl
mov
pop
pop
adcl
mov
fwait
repnz
int
and
push
pushf
fidivrl
inc
loop
pop
lcall
jo
stc
pop
flds
jle
jno
data16
lret
out
orl
xchg
push
lock
xchg
fisubrl
mov
adc
push
jns
sarb
ss
out
addb
nop
mov
mov
fidivs
inc
inc
into
ds
incl
xor
xor
frstor
clc
fs
push
in
lock
cmp
mov
cmp
mov
cmc
dec
movl
or
sub
pusha
inc
lock
xor
lcall
xor
mov
add
lock
and
sbb
mov
outsb
lret
jge
aam
jns
test
enter
ret
fists
mov
xchg
ss
sbb
jge
add
jae
mov
ja
sbb
adc
js
out
cmp
fidivrs
adc
gs
mov
xor
or
leave
imul
test
mov
lea
mov
popa
xor
push
fcomps
aaa
frstpm(287
mov
sbb
mov
dec
jl
add
adc
jae
xor
xchg
js
pushl
push
shlb
pop
pushf
stos
aas
cmp
jecxz
add
dec
mov
outsb
repz
testb
divb
adc
jae
shll
jne
push
mov
dec
mov
push
add
jns
test
sbb
inc
pushf
push
lods
push
jmp
push
sbb
push
mov
fadd
rol
or
je
pop
sub
inc
cmpsl
dec
jbe
into
push
call
cltd
dec
stos
mov
fwait
hlt
cli
inc
test
jbe
call
cmc
mov
jae
push
enter
icebp
dec
mov
movsl
cmpsb
push
xchg
lahf
mov
cmp
arpl
mov
mov
inc
out
idivb
and
std
xchg
dec
jno
jl
jno
adc
loop
sbb
lret
popf
ret
sarl
mov
aas
xor
xor
cli
std
pop
ja
rolb
test
mov
shll
mov
test
stos
mov
push
ds
ja
xor
jecxz
pushf
call
inc
or
dec
pop
cmp
and
jns
pop
xchg
mov
cld
cwtl
and
aam
or
mov
adc
mov
mov
stc
fs
test
xchg
inc
push
add
xchg
scas
imul
lods
leave
push
add
inc
dec
pusha
rorl
js
push
dec
and
mov
push
insl
push
pop
jnp
dec
mov
jl
pop
adc
cmp
adc
sahf
xchg
xchg
jns
lret
pop
mov
pop
xchg
pushf
xchg
in
mov
or
xchg
insl
xchg
dec
dec
dec
repz
cmp
jne
xchg
cmp
stc
cmc
adcb
mov
dec
sub
mov
cmc
aaa
shlb
shll
sbb
jge
cld
inc
jno
sbb
das
stc
lret
jecxz
dec
je
push
es
mov
mov
add
inc
inc
call
mov
das
jp
push
jecxz
pop
sub
push
mov
adc
fcmovnu
or
xor
cltd
cmp
pop
inc
mov
cmp
in
jp
jno
inc
pop
or
test
mov
add
aaa
sbb
in
fdiv
int
arpl
mov
pop
mov
inc
jne
call
inc
jle
aad
pop
xor
insl
push
jl
cmp
lock
xchg
xor
pop
repz
rcr
dec
push
mov
push
outsb
mov
lock
pop
jecxz
cli
sbbl
arpl
or
dec
stc
cs
lods
jne
xchg
cmpsl
icebp
arpl
jl
add
push
lret
pop
jecxz
and
add
dec
les
or
sti
pop
xchg
sub
fmull
sub
out
das
mov
lcall
dec
lret
add
jnp
out
andl
mov
repz
daa
jecxz
imul
sub
push
je
xchg
xchg
iret
mov
stos
jmp
aas
stc
test
bound
mov
out
xor
flds
fnstenv
mov
test
and
orl
dec
rolb
xor
shl
cmp
mov
gs
mov
pop
mov
out
js
int3
movsb
cwtl
sbb
adc
lcall
and
rorb
rcll
lock
jo
adc
sbb
addr16
cmpsl
mov
mov
sti
mov
xchg
ljmp
add
xchg
std
out
insl
add
xor
jge
cwtl
pop
les
push
push
fs
mov
cmp
pop
and
sbb
shll
push
push
test
adcb
mov
xor
movsl
push
es
arpl
cmp
jo
addr16
or
sub
into
cmp
push
push
inc
and
test
mov
cmp
movsw
test
push
movsl
jg
fs
cltd
mov
add
sub
insb
push
fildl
xchg
lods
in
push
les
mov
imul
cld
adc
and
mov
cmp
in
cmc
xorb
push
xor
aad
mov
adc
inc
adc
mov
mov
sub
cwtl
out
adc
sub
hlt
ret
mov
inc
sub
dec
push
sub
in
aam
fisubrs
or
fildl
ds
jb
mov
sbb
stc
sbb
shl
xchg
das
scas
inc
sbb
mov
cmc
push
mov
mov
aas
pop
jl
hlt
pusha
cmp
repnz
xchg
push
cmpsb
push
nop
mov
cmp
adc
in
xlat
clc
mov
cmp
xor
outsb
dec
jns
test
cltd
call
adc
stc
lock
test
pop
movsb
dec
jmp
loopne
jp
pop
lock
fs
dec
daa
add
mov
rorl
sti
sub
mov
lcall
imul
leave
mov
bswap
push
repz
add
sbb
stos
insl
mov
les
imul
sbb
push
dec
addr16
outsl
adc
fmul
cmp
push
inc
mov
mov
lret
or
js
push
mov
test
cmc
xchg
in
jo
mov
xor
push
xchg
sbb
es
jp
xorl
stos
loopne
jecxz
cmp
dec
jne
sub
inc
xorb
cmp
xchg
movsb
mov
negl
in
jae
inc
lea
jge
cmp
lret
sub
cltd
xchg
xchg
xor
mov
push
pop
adc
lock
mov
rcl
mov
pop
out
adc
enter
adc
pop
aad
dec
dec
je
sub
jb
ficompl
aad
jo
and
or
dec
sbb
daa
or
push
lret
inc
aam
sbb
cmpsl
mov
jb
adc
in
dec
ss
shrl
scas
jmp
dec
mov
lret
imul
ficomps
or
imul
xchg
adc
jne
mov
mov
jno
mov
push
loopne
insl
pop
jne
xor
daa
xor
out
lods
stos
in
iret
push
mov
loope
sbb
js
pop
pop
or
jne
shll
rol
ret
push
inc
add
pop
cmp
and
sub
push
dec
int3
notb
cwtl
daa
test
stos
sub
call
adc
dec
push
mov
imul
lcall
scas
mov
inc
test
cs
inc
cmp
inc
lds
aas
lret
in
pusha
mov
dec
insl
cs
push
mov
jae
shl
sbbb
mov
mov
fimuls
adc
sub
sti
push
aaa
test
sbb
sahf
or
js
xchg
fists
fcoms
adc
xor
xchg
stos
jge
inc
cmp
cmpsl
fs
mov
mov
clc
jb
mov
cmpsb
cmp
lods
das
mov
adc
js
mov
fs
fldt
jno
mov
cli
rcr
xchg
ss
xor
inc
out
xchg
in
stos
ss
stos
inc
jmp
dec
push
pop
in
icebp
out
sub
xlat
push
mov
push
xchg
or
add
mov
sbb
mov
jle
cmp
pop
hlt
clc
lods
mov
inc
push
or
dec
mov
aas
and
aas
outsl
and
mov
mov
andnps
fs
or
jbe
out
inc
jle
icebp
jnp
inc
dec
jns
mov
pop
cld
ret
pop
rolb
and
cs
sbb
mov
int
pop
xchg
push
and
pop
test
and
push
xchg
push
imul
add
pop
test
add
sbb
xchg
out
cli
jns
loope
mov
sti
inc
out
push
cltd
mov
mov
jbe
push
ret
aaa
mov
insl
xchg
inc
test
pop
shrl
lret
data16
cltd
xchg
pop
scas
in
testb
mov
test
mov
aam
pop
mov
push
out
xor
inc
andnps
es
int3
lret
sub
inc
dec
adc
pop
das
es
inc
mov
out
sub
adc
stos
testb
mov
dec
xor
fcoms
add
out
fbld
mov
push
xchg
insb
sbb
or
imul
jnp
mov
cmpsb
sbb
dec
push
rolb
les
aad
movsb
mov
mov
arpl
adc
jns
sub
and
jge
push
jl
add
sarl
mov
dec
pop
push
mov
adc
out
sbb
negb
out
cmpsb
decb
xor
lret
sbb
add
dec
pop
add
mov
aaa
daa
cmc
and
arpl
jbe
mov
icebp
xchg
xor
add
add
xor
repnz
cli
mov
insb
pop
pop
imul
shl
jne
daa
push
adc
out
loopne
iret
mov
jecxz
aaa
loopne
mov
sti
jmp
hlt
sbbb
mov
lea
aaa
sbb
imul
adc
xlat
stc
popf
xor
push
lret
adc
mov
push
adc
idivb
push
xlat
pop
pushl
lahf
movsb
cwtl
push
mov
mov
gs
arpl
movsl
push
cmc
mov
int3
and
test
fwait
mov
jge
sbb
mov
imul
jle
add
push
sbb
or
scas
push
and
mov
icebp
das
pop
test
cmp
sbb
pop
popa
pop
cli
dec
hlt
jne
mov
outsl
and
bound
ret
ror
mov
or
lcall
pusha
inc
inc
mov
shrb
push
ss
push
xchg
jge
mov
setno
add
push
popa
lcall
sbb
dec
jae
icebp
inc
loope
mov
or
ds
sbb
imul
adc
sahf
jbe
and
mov
xchg
loopnew
ret
lods
pop
add
rcrb
push
inc
jecxz
sub
clc
add
aaa
jle
adc
call
xchg
lock
sarb
lahf
cmpsl
js
mov
out
pushf
into
mov
in
inc
test
add
test
call
sbb
sti
mov
push
pop
ljmp
add
repz
test
cmp
scas
test
mov
add
jb
push
mov
or
nop
in
sub
xor
cwtl
or
rcll
jae
dec
pop
ret
dec
xchg
movsb
mov
push
stos
sub
push
push
cltd
dec
loopne
sub
ja
mov
push
lods
aaa
lods
and
mov
inc
call
mov
mov
fisubrl
sbb
mov
insb
sarl
jle
inc
int
add
xchg
or
mov
scas
test
jno
stos
lret
adc
out
enter
add
out
adc
push
and
xor
test
shlb
xor
cmp
pop
inc
outsb
pop
pop
mov
push
enter
dec
xor
rorl
dec
loope
push
mov
cwtl
xchg
dec
lds
insl
je
and
lods
lods
sub
xor
jnp
jmp
sbb
push
repnz
popa
dec
mov
mov
orb
pop
scas
addb
pusha
dec
int
mov
xor
xlat
jae
and
repnz
ret
and
es
xor
idiv
aas
or
add
imul
idivb
dec
out
dec
clc
pop
xor
cmpsb
je
pop
sbb
lods
mov
pop
inc
mov
ret
inc
mov
add
jns
testb
popa
cmpsl
push
test
ljmp
mov
pop
push
sbb
nop
loop
leave
jns
or
push
sub
xchg
jnp
xor
pop
test
xor
push
std
adc
lret
ljmp
cmpsl
dec
mov
push
push
js
push
lds
sub
or
jb
int3
push
decl
mov
adc
adc
arpl
icebp
mov
imul
xlat
sub
int3
mov
nop
pop
push
clc
jno
pop
stc
or
push
loope
movsl
cmp
xlat
das
push
clc
mov
punpcklwd
cmp
sub
cs
cmp
lret
mov
in
pop
sbb
stos
loope
lret
xchg
jmp
popa
xchg
sub
adc
ds
xlat
test
mov
sti
inc
loopne
stos
insb
std
mov
out
xor
push
jle
sbb
fucom
add
or
cmc
pop
in
bound
push
call
int
fildl
dec
lret
cmc
mov
mull
loop
mov
or
xchg
movsl
xor
cmpsl
sti
mov
out
dec
fld1
dec
sub
sar
cmp
es
out
imul
mov
mov
jno
leave
gs
jmp
or
jbe
and
lods
nop
insl
arpl
rcll
mov
cmp
mov
inc
int
push
dec
pop
mov
fcomps
andb
lods
pop
jbe
popa
add
and
xchg
clc
pop
movsb
xor
mov
or
test
jp
mov
aad
dec
cmp
pop
in
jo
pop
push
imul
addr16
cmpsl
adc
test
push
adc
ret
lock
add
test
cli
outsl
out
pop
in
dec
mov
pop
jmp
cmp
int3
xor
cmp
dec
hlt
lahf
mov
inc
aas
test
pop
jle
or
adc
scas
daa
out
jmp
jns
jecxz
cmp
pop
xchg
or
sub
push
incb
sub
int
jb
movsl
add
shl
pop
push
imul
jne
sbb
idivb
scas
or
loopne
iret
jns
push
cmp
and
xchg
pusha
add
add
repz
xlat
jns
enter
xor
in
mov
mov
sti
mov
sub
out
cmpsl
cltd
adc
movb
popa
sub
scas
dec
jns
jbe
xchg
shr
add
add
loop
popa
iret
jecxz
fidivs
lds
rcrl
xchg
lahf
fisttpll
lea
xchg
icebp
sarl
inc
fnstcw
rcll
jge
push
sub
ss
shr
shll
adc
inc
pusha
and
lods
mov
dec
in
addl
xchg
cltd
sbb
push
mov
je
add
out
mov
js
ds
in
mov
pop
push
stos
push
add
xor
fisubs
dec
jle
aaa
stos
in
ds
outsl
sub
cwtl
xor
inc
roll
sub
mov
mov
xchg
enter
mov
adc
icebp
bound
cld
pusha
cmpsl
sub
fcom
test
jne
jne
cs
cmpsl
stos
nop
repz
cmp
or
xor
dec
lret
cmc
xchg
xchg
jns
cmp
xchg
incl
mov
inc
cmp
sbb
cmp
cmp
dec
xor
shl
mov
jne
xchg
das
rclb
call
dec
clc
pop
mov
lock
push
enter
dec
aad
ja
rcl
gs
add
dec
jge
pop
jmp
pusha
sub
inc
imul
and
xchg
add
fdivrl
lock
movsl
add
and
mov
cmc
xchg
lret
xor
stc
pop
and
shlb
data16
mov
insl
mov
mov
mov
and
mov
fimull
dec
add
lret
mov
mov
ja
sbb
inc
lds
movsl
xlat
movsl
mov
lods
insb
jo
push
add
dec
cmp
dec
inc
inc
and
push
mov
xchg
insb
aad
lret
inc
andb
loop
nop
fisubrl
or
mov
dec
and
sub
xchg
cmpsl
cmp
mov
sub
mov
jbe
cmp
arpl
sub
push
xlat
xchg
ljmp
dec
repnz
push
xchg
jmp
or
mov
icebp
dec
adc
pop
cmp
pushf
and
loope
movsb
inc
jbe
test
outsb
repnz
or
lret
pop
xor
sahf
loope
cmpsl
ret
fistpll
xchg
add
xchg
pop
movq
pcmpeqw
fadds
jecxz
inc
loope
cmc
fildll
cmpsb
fsubl
dec
lods
aad
imul
lret
aas
xchg
lock
stos
in
dec
addr16
fwait
aad
pusha
je
int3
into
in
push
mov
stc
xchg
fs
xor
das
xchg
outsb
dec
subb
lds
sub
xor
xchg
shrb
xchg
ljmp
push
sbb
xor
mov
xor
push
push
fs
call
ficoml
mov
mov
iret
aam
xchg
aad
pop
out
push
mov
jne
mov
js
in
push
cld
loopne
dec
push
mov
dec
dec
adc
call
insb
mov
cmp
jns
pop
mov
xchg
push
jns
sub
adc
adc
adc
jns
mov
mov
int3
jg
outsl
and
popa
push
mov
lods
sub
leave
das
jge
stos
xchg
and
jo
fstps
lods
cwtl
in
fldcw
scas
lods
stos
or
push
pop
sbb
xchg
push
mov
push
cmp
xor
sub
cmp
ja
sub
lds
fnstenv
inc
fsubs
mov
test
loopne
nop
jne
dec
xor
inc
mov
arpl
stc
gs
clc
add
imul
scas
fisttps
cltd
inc
loope
negl
xchg
inc
xchg
sti
xchg
add
and
cmpsb
imul
pushf
in
inc
lds
dec
add
jae
lcall
cmp
inc
sub
insl
dec
fnstsw
lock
dec
cld
add
ret
dec
imul
scas
xor
fwait
test
push
scas
test
mull
mov
cmp
repnz
addb
mov
repnz
rclb
push
and
cmc
pop
add
mov
or
je
cltd
dec
xor
push
fistps
cs
sub
cltd
jmp
lret
sub
or
and
mov
idiv
mov
dec
rcrb
arpl
mov
push
mov
out
iret
push
xchg
fistps
stos
std
mov
lods
pop
xchg
into
cmp
push
js
pop
mov
xchg
sti
jge
enter
dec
jle
jecxz
sub
rorb
ds
dec
imul
add
insb
jne
fwait
sbb
pop
push
insl
call
jne
rorl
and
test
push
jecxz
push
std
mov
call
cld
daa
sub
ds
inc
pushf
out
hlt
cmpsl
in
and
xchg
xor
rcll
mull
jns
es
inc
cmpb
mov
jno
dec
cmpsb
pop
popf
pop
rcrl
adc
mov
cld
add
hlt
imul
adc
xchg
push
scas
stos
jge
insl
cli
lcall
subl
aas
mov
test
in
out
lock
rcll
sub
sbb
xlat
cli
adc
push
enter
hlt
lea
pop
cmp
in
shll
mov
pop
add
pop
xor
mov
add
lods
push
ja
adcl
fcoml
shlb
push
shlb
pushf
out
push
sub
jb
cld
dec
ficompl
push
push
fldcw
lods
add
mov
xor
nop
adc
daa
push
dec
mov
inc
out
icebp
dec
test
fists
ret
in
push
dec
outsl
fbld
or
sub
hlt
mov
ljmp
pop
push
repz
push
lea
add
int3
push
outsl
dec
fcmovb
sbb
in
cmp
rclb
sub
sbb
movsl
inc
cmpsl
ret
push
xchg
shrl
rorb
ljmp
repz
mov
xchg
pop
int3
mov
ja
test
sub
lcall
and
push
inc
popa
out
and
pop
scas
aad
leave
dec
rcrw
arpl
and
inc
repz
mov
das
les
stc
mov
ret
mov
push
mov
pop
adc
mov
fs
imul
cs
or
xor
xchg
jg
pop
adc
inc
ret
mov
mov
push
xchg
movsb
sub
sbb
push
in
pop
jg
fldenv
push
out
inc
ds
inc
jo
push
fisubrs
sbb
mov
aam
fdivl
inc
jp
mov
push
sub
in
sub
adcb
push
loopne
and
mov
arpl
push
pop
shlb
int
xchg
xor
popa
call
xorl
xor
cmp
sub
mov
rcll
xchg
subl
daa
mov
fisttps
lock
ret
out
nop
inc
jns
pop
pop
cld
cmp
push
mov
leave
sub
mov
aaa
test
jmp
call
xchg
jmp
inc
mov
in
lahf
cltd
ret
adc
push
mov
adc
inc
or
dec
mov
xlat
stos
mov
shr
lods
adc
repz
sbb
outsb
outsb
or
pop
dec
shl
ret
es
mov
xor
les
and
jbe
push
push
int3
lret
xor
mov
in
das
repz
repz
xchg
leave
pop
inc
xchg
mov
mov
sbb
push
pop
int
xor
pushf
xchg
scas
or
xor
pusha
fldt
testl
or
test
repnz
das
inc
iret
inc
or
in
loop
inc
scas
xchg
aad
int3
xor
mov
jbe
cmpsb
adc
mov
lret
push
cmpsb
or
fildll
inc
daa
and
sbb
loopne
add
inc
test
in
inc
sub
stc
add
add
sub
xor
and
push
add
fwait
or
mov
jbe
mov
lcall
orb
adc
push
aas
pop
inc
jns
mov
jl
lret
pop
das
push
arpl
fisubs
ret
jae
jmp
and
in
push
sarl
jb
cmp
fwait
roll
nop
mov
test
fisttpl
fcmovbe
mov
call
mov
jmp
les
pop
sub
sub
insb
pushf
jns
icebp
fcom
xor
sbb
repz
dec
stc
add
rorl
fadd
test
rcr
and
mov
std
xlat
xchg
leave
aas
adc
xor
sub
dec
push
xchg
mov
outsl
lds
mov
divb
std
subb
xchg
jg
jno
sub
test
mov
jo
jo
into
and
aam
fwait
dec
jmp
mov
jg
cmpsl
call
fistpll
or
adc
pop
cli
push
repz
cli
or
mov
out
stc
aam
into
imul
shrl
fwait
mov
lock
ficompl
shl
xlat
xlat
mov
pop
fstl
xchg
pop
xchg
aas
out
in
mov
outsl
lods
jg
lret
loope
mov
push
pop
nop
lcall
xchg
or
inc
inc
es
fisttps
into
xor
push
pop
ret
std
ds
cs
js
int3
ror
xchg
in
sahf
xchg
mov
and
cli
pop
fdivrs
xlat
sub
fsubrs
xchg
sub
fndisi(8087
iret
fldl
mov
sub
and
js
xchg
adc
ljmp
jae
pop
into
push
pop
out
mov
inc
mov
shrl
and
cli
push
pop
scas
pcmpgtd
push
jl
mov
push
std
std
insb
cmp
iret
into
push
jp
jle
add
daa
adc
lret
out
pop
mov
xchg
aas
push
push
test
xchg
loop
out
or
mov
movsb
mov
mov
movsb
je
jnp
mov
cmp
jbe
out
jmp
add
jne
fcos
int
cmp
push
dec
aad
pop
out
mov
jne
iret
inc
xor
imul
negb
fld1
movl
shlb
push
xor
jb
push
out
sbb
fwait
in
mov
ds
sahf
add
inc
mov
xchg
pop
mov
sub
mov
stos
xchg
imul
xchg
or
sub
rorb
pushf
jae
testl
idiv
or
xor
push
pop
adc
or
xor
mov
and
lods
dec
jle
stos
push
or
icebp
int
lods
mov
push
out
or
fdivp
and
fwait
outsl
mov
lea
aaa
sbb
insl
sbb
aaa
gs
lahf
das
push
jg
aaa
mov
xchg
xchg
aad
gs
jno
add
scas
jg
or
fisubrs
mov
push
add
ja
lods
jmp
or
or
leave
into
jl
pop
nop
gs
inc
lahf
out
aas
and
gs
mov
ja
das
mov
inc
or
and
jne
cmp
cmp
into
mov
xchg
popa
test
lock
out
fs
mov
in
in
jle
nop
sbb
je
xlat
mov
das
imul
jno
lods
mov
xchg
fcomps
ljmp
fsub
and
cmpsl
notb
xor
in
xor
aas
jecxz
pop
in
mov
js
push
push
or
push
pop
hlt
xor
lock
sti
push
dec
pusha
dec
jmp
and
mov
out
jb
sbb
sub
insl
mov
adc
aad
fdivr
cs
les
call
stos
cli
sbb
xor
jecxz
pop
lods
jl
mov
in
fistps
jno
mov
push
sub
mov
push
push
mov
lock
sbb
fsubrl
int
test
jp
pop
mov
bound
lods
clc
jecxz
mov
loopne
jo
xchg
or
mov
ss
jge
and
mov
das
mov
into
mov
mov
cmpsl
mov
dec
push
mov
dec
idiv
aad
lahf
cmc
mov
fimull
shr
pop
jo
nop
or
lret
ret
pop
out
loopne,pn
jmp
ret
mov
fildll
jmp
scas
inc
movsb
mov
sbb
je
pop
inc
cli
popl
jb
aad
dec
mov
fisttpl
push
mov
in
leave
adcb
sbb
aas
mov
enter
jne
lahf
cmp
icebp
xor
nop
and
in
jge
loop
arpl
xlat
scas
mov
mov
loop
mov
repz
mov
lds
cmp
push
ljmp
sub
add
add
mov
lock
aad
adc
pop
scas
xor
out
js
daa
daa
mov
hlt
jno
adc
adc
outsl
and
mov
fistpll
nop
jne
out
icebp
xchg
mov
or
scas
repz
xchg
jno
in
or
push
mov
fcmovnb
fmuls
lret
or
sub
fstl
aaa
mov
mov
ljmp
cwtl
mov
fwait
fwait
mov
xorb
stos
add
xchg
add
cs
jge
addb
adcl
ds
mov
mov
in
cld
shrl
inc
sbb
repnz
sub
jmp
rcrb
jb
mov
sub
fistpl
mov
jo
mov
add
add
popa
sub
mov
adc
pop
lretw
jbe,pn
or
cpuid
cltd
jp
jbe
push
sbb
cs
inc
mov
mov
xor
inc
pusha
adc
icebp
xchg
fmull
add
cmp
xor
sbb
pop
adc
mov
adc
mov
subb
push
sbb
mov
dec
push
jno
xchg
out
push
pushf
adc
mov
push
push
push
rclb
push
inc
mov
pop
and
ret
aaa
js
mov
mov
adcl
aas
iret
lcall
and
inc
lret
into
test
iret
sbb
fidivrl
add
push
jp
sub
mov
popf
xorb
adc
in
cld
aaa
mov
add
imul
inc
xchg
push
mov
or
imul
mov
push
imul
aam
xor
mov
in
inc
jns
ss
daa
jno
mov
iret
lret
xchg
add
hlt
or
in
push
data16
ljmp
inc
push
sti
jecxz
in
outsb
imulb
fbld
lahf
nop
jmp
jg
aaa
xchg
dec
dec
push
stc
cmpsb
lahf
and
sub
push
jmp
xchg
fisubrs
sahf
cmp
inc
cmp
pop
pop
test
inc
dec
add
pop
pop
sbbl
push
push
punpckldq
aaa
fdivr
dec
adc
xor
mov
shl
push
mov
sub
xchg
imul
push
mov
outsl
jp
cld
pop
repnz
pop
xchg
jnp
andb
push
jge
into
push
pusha
lods
pop
inc
fidivrs
or
xor
jns
fwait
and
call
push
ret
rcrl
fcmovne
fs
jns
jno
es
testb
and
and
adc
aas
dec
das
xor
int
dec
xchg
mov
adc
pop
icebp
mov
and
inc
ss
jg
adc
repnz
popf
pop
test
jo
xor
cwtl
clc
std
and
mov
push
in
adc
xlat
inc
pop
movsl
sbb
pop
imul
fs
mov
and
xchg
lods
cmpsl
mov
fldt
ror
or
testl
mov
cmp
iret
sbb
ss
into
es
in
loop
xchg
movsl
add
out
je
adc
fidivrl
cmp
movsb
sbb
sub
mov
jne
or
mov
mov
or
jo
or
add
and
add
es
sarb
jb
inc
jmp
add
lods
movsb
xchg
bound
lds
push
push
cmp
or
jne
push
sbb
xor
sub
jnp
outsl
frstor
xchg
mov
out
cs
xor
int
jle
jbe
outsl
push
dec
fimull
or
add
xchg
cmp
push
adc
loope
add
shlb
pop
arpl
or
and
popf
mov
lds
mov
push
mov
testb
test
fidivrl
leave
lock
popf
pop
mov
push
mov
js
dec
xchg
icebp
nop
adc
pop
push
aaa
fstpt
sarb
pop
mov
push
nop
or
ret
mov
in
vpaddusb
xchg
inc
mov
mov
push
cmp
std
cmpsb
loopne
je
sub
and
dec
cld
mov
repz
data16
sub
stc
sub
or
mov
scas
ljmp
test
jg
inc
push
or
into
jbe
jae
xchg
jmp
or
xor
addr16
dec
fidivl
jnp
js
mov
js
orb
popf
add
imul
push
scas
or
push
or
mov
pop
adc
mov
cmpsb
jae
mov
hlt
popf
mov
and
outsl
xchg
push
jnp
or
jge
pushf
sub
in
xchg
add
cmp
ss
fsub
cmp
push
mov
pop
pusha
lret
mov
insl
aas
loop
mov
push
mov
xor
test
iret
in
mov
cli
in
into
fwait
xor
sub
inc
jl
xchg
sub
rorl
test
xchg
add
pop
adc
adc
sbb
cmp
mov
adc
sub
inc
mov
or
pushf
cwtl
std
xchg
sysret
call
pop
aas
inc
xchg
cmp
out
pop
mov
rorl
inc
add
add
and
pop
add
sub
adc
mov
mov
sub
pusha
sbb
adc
aaa
fwait
cvtps2pd
orl
and
out
mov
in
inc
xor
inc
mov
hlt
mov
fldt
cmpsb
sub
xchg
clc
nop
cmp
sub
sbb
andl
dec
add
hlt
adc
xchg
fldt
and
pop
cmp
jne
dec
mov
add
pop
xchg
mov
add
in
lahf
cmc
test
mov
dec
pop
sarl
rcr
scas
imul
sti
mov
outsb
jge
je
mov
mov
jne
add
js
cltd
int
rorb
mov
ja
xchg
inc
insb
nop
mov
push
and
sbb
jo
in
push
xchg
mov
push
icebp
sbb
out
push
call
lcall
push
inc
cmp
cmp
ja
ljmp
push
into
push
dec
xlat
inc
pop
loopne
frstor
adc
inc
dec
sbb
add
arpl
fistl
mov
xchg
pusha
pop
jne
mov
inc
lods
lods
or
fwait
xchg
lea
inc
in
std
jnp
aam
push
dec
or
hlt
sbb
and
fcomps
and
jae
push
scas
loopne
fdivrl
adc
mov
or
pop
daa
and
or
mov
mov
fs
sbb
shrb
xor
xor
lods
pop
xor
push
pushf
xchg
cmpsl
push
jbe
sub
out
inc
enter
push
jne
mov
xchg
adc
in
pop
or
mov
jne
and
call
lcall
clc
xchg
out
stos
lods
mov
in
cmc
cmp
cmp
lock
imul
fistps
int
fadds
ds
enter
and
cmp
ret
and
cwtl
mov
inc
mov
mov
lods
ret
pop
xchg
add
sti
add
xor
adc
out
sub
xlat
jecxz
aad
add
mov
das
outsb
rclb
xchg
cmp
xchg
pop
lea
push
push
dec
fnstcw
es
jno
adc
jo
sub
mov
xchg
jge
loopne
addr16
rcrl
test
jp
sarb
in
popa
push
inc
imul
and
mov
and
out
in
sarl
xchg
or
scas
jae
call
hlt
fcomip
testl
pop
in
out
cmpl
outsl
cltd
jp
sub
xor
cmpsb
mov
test
mulb
adc
inc
stos
push
add
sbb
mov
push
lcall
jle
adc
lods
daa
xor
lahf
jb
mov
shrb
cmp
sbb
pop
jbe
cmpsl
dec
pop
push
popa
pop
clc
mov
dec
fnstsw
out
insl
add
add
inc
out
lds
sub
aam
aas
dec
popf
bswap
pop
push
mov
cltd
adc
add
loop
idivl
and
cmpsl
sti
cs
dec
enter
add
hlt
mov
mov
jbe
push
icebp
pop
pop
pop
pushf
lahf
out
scas
or
test
xor
inc
sub
and
mov
xor
icebp
adc
shlb
jae
dec
je
mov
or
ret
pop
mov
dec
mov
push
cmpsb
rorb
push
cli
push
out
test
aaa
lods
xchg
in
cmp
dec
push
ljmp
push
mov
outsl
sbb
sbb
pusha
scas
mov
mov
enter
mov
fistl
adc
movsb
ret
es
daa
popf
adc
mov
and
pop
or
out
jae
int
inc
dec
and
jbe
imul
lret
arpl
jnp
push
rorb
rclb
sti
pop
dec
lcall
stos
cmpsb
dec
cmpsb
add
cmpsb
dec
and
mov
pop
cmp
jp
sub
test
push
in
lcall
sbb
sbb
adc
nop
lock
pusha
stos
lret
insl
lods
addl
adcl
cltd
ret
cwtl
adc
jmp
mov
sub
sub
fsubs
mov
jne
addb
dec
cmp
xchg
mov
pmulhuw
push
cmpsb
and
icebp
movsl
pushf
push
pop
outsb
jbe
pop
pop
mov
popa
adc
mov
mov
mov
jae
cmp
mov
push
shll
pop
mov
fsqrt
sub
xchg
addr16
sub
sub
pop
dec
sahf
mov
loop
in
outsb
out
inc
lahf
cmpsl
sub
dec
inc
test
stos
js
mov
cld
inc
sarl
out
jecxz
pop
ret
aad
add
sub
cmp
mov
arpl
in
ret
call
inc
call
pop
aad
lahf
cli
sub
inc
aaa
push
inc
sbb
adc
mov
push
jne
out
loop
jmp
inc
adc
dec
jge
jo
mov
jp
hlt
cli
push
xor
mov
pop
dec
bound
or
xchg
lret
lret
andps
mov
jl
imul
imul
lahf
pop
mov
cmp
fldcw
add
push
aam
lea
ret
stc
popf
push
push
int
cltd
pop
inc
shll
xor
xchg
add
push
test
test
test
lret
and
mov
pop
pop
insb
push
xor
adc
jbe
imul
call
ret
jecxz
jo
sub
mov
and
sub
std
inc
lods
cld
xor
and
out
insl
cmp
push
sub
mov
and
jp
ja
mov
lcall
inc
hlt
push
fwait
jb
push
and
push
sbb
pop
cmp
adc
scas
sub
jmp
popa
push
ljmp
addr16
test
inc
mov
lahf
fistpll
push
les
mov
mov
les
mov
pusha
stos
sahf
add
mov
test
stos
in
pop
pop
dec
xchg
inc
jmp
lret
xor
stos
addb
addb
xor
push
pop
in
mov
not
ja
pop
loopne
mov
jbe
push
and
repnz
mov
sbb
psubsw
stos
shlb
xlat
ficompl
and
adc
xchg
mov
xor
loope
push
cmp
out
or
mov
mov
cmp
push
dec
xchg
adc
lret
sub
add
cmp
xchg
test
test
sub
sub
pop
outsl
cltd
popf
or
add
dec
cmpsb
pop
sti
cmp
or
inc
sbb
mov
rcll
sbbb
sub
cmp
mov
add
jp
in
push
repnz
jmp
nop
or
pop
xorb
mov
push
jecxz
ds
mov
movsl
xor
loop
jmp
repnz
out
popl
inc
mov
daa
or
cmc
orb
mov
xchg
mov
repnz
gs
jg
hlt
xor
xorb
sbb
inc
adcb
negl
add
es
xchg
out
jae
mov
imul
sbb
cwtl
push
fldcw
pushf
dec
fcmovnb
insb
xchg
test
pop
sbb
mov
loopne
leave
lods
sub
cmp
dec
and
sahf
lcall
push
mov
imul
dec
aad
idiv
dec
iret
rol
dec
lods
cwtl
je
test
or
outsl
int
dec
mov
push
ret
cmp
xchg
sahf
leave
hlt
into
fcoms
jne
vmovddup
test
jno
sbbb
pushf
mov
fsubrs
xor
jl
pop
pop
shr
pop
scas
lret
pop
mov
pop
aas
loop
sbb
popa
stc
call
jnp
xchg
mov
leave
stos
jecxz
cmp
and
xlat
in
ljmp
xor
dec
lret
mov
dec
pusha
xchg
jl
fwait
mov
dec
pop
shr
lahf
ret
and
pop
add
sti
sbb
sub
icebp
or
inc
test
sahf
bound
push
inc
hlt
jge
das
into
loop
jnp
sub
orb
jae
push
incl
and
es
lock
popa
mov
dec
push
clc
dec
jmp
xchg
push
repnz
or
cmp
and
stc
daa
inc
icebp
cmp
inc
sbb
fcom
jnp
jbe
inc
sub
and
push
mov
outsb
xor
ja
ljmp
daa
into
popa
mov
cltd
shlb
pop
add
inc
in
in
pop
in
imul
fwait
or
jns
in
call
imul
mov
call
nop
push
in
push
pop
and
jne
sarb
push
push
mov
test
push
imul
popa
push
sub
mov
les
imull
scas
dec
jp
fadds
push
jno
aaa
jge
pop
fldcw
mov
iret
or
xor
fisttpll
adc
sbb
fsubrs
pop
adc
push
sub
inc
inc
imul
cli
or
rcrl
or
pop
out
imul
pop
stos
or
pop
pop
cmpl
int3
aam
add
mov
inc
dec
mov
dec
pop
sbb
mov
jle
jno
mov
add
mov
inc
out
bound
mov
mov
jmp
loop
xchg
out
pop
outsl
in
stos
dec
mov
inc
ficomps
movb
outsl
mov
xchg
mov
and
dec
push
mov
sub
out
xor
out
sbb
sub
cwtl
xlat
or
inc
adc
sub
and
dec
rclb
xchg
sub
int
hlt
lock
jecxz
xor
and
iret
dec
enter
fstpl
sub
push
push
sub
andb
ret
xchg
cwtl
pop
out
loope
sub
aaa
cmp
lret
lahf
pushf
jne
loopne
cmp
cld
stos
add
and
push
mov
decl
in
sub
rol
stos
cs
in
notl
add
ljmp
inc
push
fnsave
push
mov
loope
leave
pop
es
out
data16
into
ds
jl
xchg
fwait
inc
fdivrs
cmpsb
jg
pop
mov
popa
dec
popa
jmp
jns
dec
mov
iret
cltd
mov
clc
mov
imul
fwait
into
lret
jo
mov
cld
leave
imul
push
gs
xchg
fnsave
push
mov
dec
aaa
loopne
and
mov
aad
xchg
incb
mov
or
cmpsw
or
leave
or
jb
or
adc
je
addb
pop
insb
test
dec
or
shll
iret
xchg
stc
mov
shlb
mov
ja
xchg
push
push
xor
jnp
jo
jae
jo
outsb
ja
int3
inc
mov
inc
popf
mov
jo
pop
sti
stc
or
dec
popa
sbb
mov
lea
or
inc
stos
dec
inc
jb
cmc
adc
cmp
cmp
les
aad
jb
in
insb
pusha
inc
push
mov
mov
cmpsb
xchg
dec
jl
ja
rcll
lret
lods
fstpl
jle
push
jmp
push
sbb
dec
inc
andb
jecxz
adc
add
dec
inc
inc
xor
pop
cmp
pop
fdivrl
cmp
push
or
xor
out
mov
dec
xchg
sub
xor
insl
mov
fistpll
std
lea
sub
lret
ror
popf
xchg
jns
cmc
sub
cld
cltd
aas
mov
or
unpckhps
insb
insl
or
not
outsl
cmp
loop
cmp
clc
push
inc
jle
test
sbb
lahf
xchg
pushf
out
push
jle
ror
imul
and
lds
ret
sub
dec
aas
sub
ret
adc
clc
mov
xchg
adc
inc
push
xor
mov
mov
imul
add
xor
ds
jp
insb
and
popl
xchg
push
xchg
mov
cmp
out
shll
in
repnz
cmpsl
push
add
xchg
xchg
mov
sahf
mov
out
mov
inc
push
mov
insl
lcall
sbb
mov
ja
lcall
cmpsl
mov
ljmp
add
jecxz
pop
shlb
xchg
idivl
sbb
cmp
jp
xchg
pushf
aas
inc
movsb
fxch
lret
out
loop
pusha
and
cmp
push
xchg
jg
aas
icebp
and
movsl
and
mov
sbb
mov
cmp
lcall
push
and
lahf
mov
jle
subb
inc
out
dec
fs
cmpb
inc
call
and
rep
lods
push
dec
cmp
out
call
fcmovbe
lahf
push
out
iret
adc
sbb
jecxz
bound
cmp
subb
lahf
ja
inc
cmpsl
pop
sub
mov
xor
jmp
mov
pop
jmp
sbb
lret
mov
inc
cmc
pop
shl
aaa
sarl
lcall
and
aad
add
add
insl
daa
push
pusha
fwait
nop
fiadds
aam
or
outsb
mov
jb,pn
les
lret
xor
data16
xor
xchg
test
jge
push
jo
xchg
or
jmp
ljmp
jle
and
orl
into
dec
icebp
push
test
mov
inc
test
or
nop
sbb
inc
push
xorl
sub
fisubrl
je
loope
insb
push
lods
popf
movb
push
cmc
adc
pop
add
sub
sub
nop
nop
sub
adc
daa
scas
aad
negl
into
xchg
inc
cmpl
push
repz
cwtl
xchg
repz
dec
leave
mov
iret
ret
rcl
loopne
dec
sbbb
pusha
mov
sahf
mov
out
push
xchg
push
xchg
pop
xlat
mov
and
hlt
lcall
xor
pop
add
movl
subb
in
or
ss
mov
pushf
adc
int
and
xor
cmp
ljmp
aaa
ds
ds
pushf
icebp
in
add
mov
push
movsb
in
int3
fs
jmp
add
xor
aam
mov
sbb
cmpsb
cmpsl
insl
pop
xor
les
addr16
dec
aaa
dec
enter
rol
jno
std
lods
rclb
sub
call
sbb
mov
lea
push
mov
and
lcall
scas
add
xchg
outsb
xor
ret
inc
jmp
or
adc
jb
into
push
in
ret
mov
call
xchg
dec
dec
mov
cmp
cmp
mov
jns
leave
dec
outsb
ss
add
fs
stos
imul
sbbl
dec
sbb
es
pop
fmull
sub
dec
jbe
pslld
and
sub
ljmp
and
lcall
cmpsb
int3
rol
mov
pop
ljmp
stc
mov
lahf
and
pop
sbb
mov
bound
mov
inc
aam
mov
aaa
jns
clc
mov
sub
push
cmc
mov
mov
mov
orl
push
adc
rcrl
push
out
push
hlt
test
add
mov
dec
pop
push
inc
imul
pusha
leave
dec
scas
mov
imul
not
xor
mov
sbb
clc
and
jbe
dec
jb
and
fimuls
cltd
adc
xor
sbb
aaa
in
xchg
aad
hlt
dec
repz
rolb
call
add
or
in
xor
mov
scas
adc
nop
fstps
rorb
ljmp
shl
es
sub
mov
int3
daa
nop
mov
pop
jecxz
jl
pop
push
mov
adc
mov
mov
adc
in
push
mov
cwtl
sub
dec
lock
lods
lcall
add
andl
jns
or
lret
or
xchg
or
xchg
mov
pop
push
cmc
dec
sbb
in
mov
push
sbb
push
faddl
cltd
mov
pop
cmc
fisttpl
jae
xchg
not
outsb
xor
test
bound
xchg
adc
call
mov
mov
cmp
jb
jo
dec
arpl
gs
or
adc
testb
or
fst
pop
outsb
pop
mov
dec
ret
imul
cs
pushf
sbb
jg
xor
xchg
xchg
insl
cltd
lea
loope
pop
das
dec
pop
mov
lcall
cltd
pop
mov
loope
pop
push
fistpll
and
popa
sub
out
sarb
loope
inc
mov
in
push
inc
sti
aam
mov
and
aam
jle
xor
cmc
push
leave
jns
inc
mov
pusha
xchg
mov
mov
jmp
jmp
in
lret
add
ret
xlat
sbb
mov
sarl
bound
dec
or
cmp
loope
negl
mov
movsl
loop
lock
jecxz
sahf
pop
inc
sub
sbb
jb
dec
add
nop
aam
les
push
push
mov
int3
popf
xor
ret
push
push
pop
sbbb
ljmp
repz
jmp
inc
nop
inc
xchg
mov
adc
mov
ljmp
adc
test
dec
outsl
jne
hlt
rcll
jge
adc
xchg
mov
lret
and
enter
popa
out
les
lods
sbb
call
inc
mov
rcrl
push
rcrl
mov
popa
test
insl
pop
roll
fsubrl
push
int
pop
imul
push
pop
dec
iret
bound
icebp
arpl
jecxz
pop
mov
out
in
ss
je
fiaddl
mov
dec
bound
xchg
shl
and
out
in
cmovl
cmp
mov
jae
xchg
jp
cld
jge
sub
cli
aaa
lahf
filds
dec
mov
loope
cmc
push
or
aaa
inc
ret
push
fsts
jne
jp
dec
dec
test
cli
outsb
sbb
lds
inc
and
and
loop
push
cmpsl
cmp
insb
sbb
insl
sarl
sti
idivl
jle
push
inc
lods
out
add
jns,pt
sbb
xlat
mov
sbb
test
and
sarl
cmp
add
bound
ds
and
xor
push
jno
sarb
sbb
aad
lret
push
in
insb
in
stos
out
push
push
out
test
decb
mov
js
sub
xchg
lret
sbb
stos
leave
stc
fldl
mov
sbb
imul
int
xor
dec
xchg
add
cltd
jo
or
imul
mov
in
cmp
sahf
fstpl
fldenv
sti
jp
cmc
sbb
xchg
push
pusha
adc
ds
xor
lret
xchg
mov
arpl
fsubrl
das
je
mov
fmul
test
xor
pop
add
mov
xchg
jne
idivb
daa
rcl
cmp
adc
loop
cmp
inc
sarl
movsb
insb
add
pushf
orb
jg
std
xchg
and
adc
sti
mov
sbb
jns
cmp
call
sbb
adc
int3
and
mov
jnp
xchg
and
xchg
call
push
sbb
pushf
ss
inc
jb
push
dec
orb
xor
and
add
gs
sarl
push
into
sahf
pushf
jle
pop
sbb
in
mov
cmp
cmp
jns
and
orl
xor
inc
roll
push
sbb
or
insl
fdivs
lret
pop
inc
testb
addr16
addb
mov
sub
insl
insb
cmp
jecxz
lea
jno
mov
in
sbb
and
outsl
or
mov
addr16
sarl
scas
hlt
gs
cwtl
inc
dec
add
std
mov
sbb
push
jl
lods
sub
sbb
xor
mov
or
mov
dec
stc
es
pop
dec
imul
mov
fstp
fsubp
push
push
in
mov
dec
test
or
call
sbb
jb
gs
not
xor
push
lock
sbb
imul
and
adc
xchg
popf
fnsave
jns
hlt
dec
stos
into
or
pusha
inc
popa
into
ljmp
ret
ret
js
xchg
mov
fwait
adc
or
mov
add
repnz
inc
outsl
jb
cmp
jo
sub
push
push
cmp
outsb
pop
jl
fwait
pcmpgtb
pop
std
pop
arpl
mov
push
jle
fcomp
push
ret
push
xchg
daa
lods
jae
jb
and
pop
out
fidivs
lock
nop
xor
pop
rorl
sbb
pushf
sbb
inc
mov
test
add
lock
pop
inc
into
mov
push
movsl
xchg
lahf
push
dec
pop
in
fimull
sub
fisubrs
rcr
xor
inc
sbb
push
xchg
pusha
sub
bound
stos
mov
jle
pop
inc
testl
les
xchg
inc
jmp
fwait
std
data16
aad
bound
scas
jle
aaa
sbb
mov
icebp
sbb
or
push
std
insb
dec
addr16
mov
call
movsl
lods
adc
add
inc
pop
out
daa
jnp
xchg
mov
adc
jne
mov
popa
inc
adc
pop
sub
addr16
pop
maxps
lods
lcall
mov
lock
shl
inc
mov
xchg
jecxz
push
jnp
mov
sub
dec
hlt
add
out
lock
inc
mov
cmp
call
jo
xchg
sti
lahf
jbe
adc
xor
or
xor
push
stc
ds
mov
sub
andl
inc
sbb
out
mov
mov
pop
inc
dec
jp
dec
sbb
xor
sbb
or
aaa
imul
push
jmp
test
repz
push
fwait
int3
adc
loop
add
cmp
and
jecxz
push
in
out
movsb
test
roll
and
fidivrl
arpl
cmp
or
enter
dec
popf
inc
push
fnsave
gs
hlt
xchg
aad
dec
xchg
outsb
xchg
mov
sub
mov
pop
xor
mov
mov
push
les
xorl
cld
out
mov
lret
arpl
stos
pop
dec
add
jo
mov
pop
and
in
xlat
adc
cmp
cmp
sub
mov
mov
lea
add
and
xor
cmpsb
jp
in
test
xchg
in
je
into
out
or
and
or
ret
xchg
lods
lret
pushf
jno
mov
inc
pop
inc
jp
es
pusha
jmp
ds
sub
sub
ss
mov
cmp
mov
insb
jo
adc
in
lods
and
shl
adc
xlat
push
loopne
push
mov
out
cs
in
inc
dec
sub
mov
push
mov
jl
mov
arpl
mov
pop
and
xchg
push
inc
int
xchg
ret
jg
or
cmp
imul
nop
xlat
sub
push
and
push
ret
push
and
mov
pop
fnstsw
test
fbstp
add
fs
std
cmpsl
pop
sub
or
push
xor
mov
push
out
add
leave
fidivs
xor
sub
stos
lahf
notb
cmp
push
push
movl
xor
adc
push
sbb
mov
inc
sbb
insb
das
sub
shll
xlat
pop
fwait
pop
and
jle
adc
ja
sbb
mov
sbb
mov
or
pop
pop
mov
or
std
orl
jb
insl
not
xchg
add
call
sbb
insl
lea
fs
adc
cli
adc
jo
sub
and
rorb
sbb
js
stc
pop
cmp
je
push
in
sbb
jecxz
cmp
out
mov
scas
mov
lods
ret
mov
push
and
push
sbb
mov
popf
xchg
rcrb
sar
adc
gs
fnstenv
inc
fbld
lods
add
jbe
ret
stc
loop
push
mov
mov
pop
xchg
sbb
popf
popa
sub
xor
icebp
or
cli
and
jb
mov
sbb
out
pop
popa
dec
sbb
pusha
movsb
pop
loop
mov
popf
xchg
xor
shrl
scas
mov
mov
sbb
cmp
cmp
lahf
or
mov
lret
xchg
roll
dec
xchg
test
lea
imul
ds
xchg
xchg
fimuls
test
scas
inc
push
ss
aaa
mov
xorb
mov
mov
insb
lods
dec
push
out
pop
mov
std
xor
sti
mov
dec
iret
scas
jae
add
negl
fbstp
mov
xor
dec
lds
mov
mulb
rcrb
or
pop
in
iret
call
dec
jnp
dec
cs
call
mov
inc
push
jp
sub
notl
adc
mov
mov
insl
xchg
shlb
fwait
mov
subl
jnp
and
xchg
shr
add
adc
sub
xchg
jp
jno
inc
xor
icebp
cmp
or
into
icebp
fwait
aaa
push
lret
cmpsb
imul
xor
enter
rcrl
adcb
mov
mov
sbb
push
pop
movsl
ljmp
mov
cs
mov
xchg
pop
mov
fmulp
mov
shlb
lods
xor
push
adc
sub
adc
gs
out
out
xor
daa
out
aas
add
sbb
faddl
push
mov
xlat
pop
cltd
jno
insb
lret
subl
and
mov
xor
inc
sbb
cld
test
cmp
jno
or
fisttpl
mov
xor
jb
xchg
jne
mov
push
xlat
cmpsl
jns
mov
add
mov
std
adcl
mov
add
sub
jae
mov
inc
cmp
push
mov
pop
inc
pop
das
dec
fcmovnu
mov
sahf
in
testb
or
push
add
dec
stc
imul
arpl
movsb
andb
int3
xchg
adc
dec
jne
jge
aam
pushl
pushf
dec
dec
jge
inc
bound
mov
cld
mov
andb
xchg
fmulp
push
pop
rol
std
adc
mov
scas
addb
ja
in
mov
cmp
or
movsl
cwtl
or
jl
out
inc
pop
stc
lahf
out
gs
loopne
mov
mov
mov
xchg
xchg
push
xor
test
mov
mov
mov
inc
ret
insl
pop
dec
jb
xchg
adc
es
mov
pop
cli
movsl
insb
mov
mov
inc
std
jo
jmp
sbb
or
in
xor
int3
out
mov
data16
push
sub
cmc
cld
sub
mov
and
push
lret
in
out
add
xchg
push
es
mov
mov
fisubrl
push
lret
xor
or
inc
shlb
hlt
sbb
cld
out
in
cmc
out
sbb
sti
in
daa
loopne
adc
mov
dec
test
jns
pop
jne
aad
mov
mov
pusha
jo
mov
sbb
mov
adc
mov
pushl
xor
cmp
add
test
and
ret
jle
imulb
mov
jle
sbb
add
push
or
pushl
jb
or
inc
in
pop
cltd
or
in
jg
repnz
orl
divl
jmp
ret
test
imul
aaa
push
inc
and
pop
enter
iret
mov
ja
inc
push
les
cmp
xchg
sub
cmp
lods
lds
ja
cmpsl
repnz
cmp
fnstsw
cmpsl
rcll
inc
jecxz
nop
or
jg
insb
xor
in
ljmp
decb
je
cli
xchg
out
adc
ja
and
iret
popf
into
adcb
and
mov
jo
lds
inc
insb
icebp
cltd
inc
fsubrs
fldt
xor
gs
arpl
scas
jecxz
sub
aam
mov
push
and
mov
fmulp
xchg
fdivrl
int3
xchg
dec
inc
dec
jg
adc
cwtl
cwtl
nop
repnz
sbb
int
es
jno
push
ds
push
adc
add
and
mov
add
stc
adc
and
sbb
les
or
in
xor
xchg
push
lcall
or
xchg
jne
repnz
addl
mov
jo
shll
int3
mov
mov
lock
cmp
add
sbb
imul
push
pop
inc
add
xlat
orb
mov
out
aad
int
push
loopne
test
cmp
flds
push
loop
inc
fdivs
push
cmp
mov
sbbl
ss
js
inc
fsubr
in
push
js
mov
push
in
sbb
nop
xchg
cmp
outsb
sbb
pop
inc
mov
sub
pop
enter
cs
adc
gs
daa
sti
addl
xchg
les
sarb
lcall
call
inc
lock
jno
inc
jns
add
cld
dec
dec
push
data16
adc
mov
addr16
roll
push
repz
sub
xchg
pusha
xor
cld
mov
out
push
or
nop
push
sub
jge
xchg
add
lret
jmp
ret
mov
mov
and
subb
roll
xchg
cwtl
daa
jge
pop
and
pop
sub
cli
sbb
and
rorb
outsl
ljmp
mov
adc
outsb
mov
repnz
sti
out
fldcw
lcall
lds
fldl
pop
xor
enter
idivl
add
scas
cmpl
jae
jae
mov
in
mulb
pushf
adc
cmpsl
xlat
xor
dec
shll
jecxz
pop
and
ja
fsubrs
jmp
gs
cmp
adc
movsl
cmp
jmp
repnz
cld
xor
bound
adc
jecxz
testl
or
cmp
daa
js
dec
incb
daa
inc
mov
sub
push
insl
sub
pop
jb
imul
adc
mul
subb
in
xchg
jae
out
movaps
test
push
mov
fidivrs
imul
pop
fidivl
adc
jl
mov
mov
jl
jle
mov
je
enter
jmp
mov
mov
or
pop
and
ss
addr16
shll
insl
jle
movsl
call
or
cmp
jno
sbb
pushf
inc
shrb
scas
pop
jnp
pop
push
stos
mov
and
les
push
pushf
mov
arpl
push
jo
fs
outsl
dec
xor
add
subb
cmp
jnp
dec
sub
dec
mov
insl
inc
xchg
sub
sub
jl
or
mov
mov
inc
mov
mov
cmp
dec
mov
inc
in
xchg
add
out
push
cmp
icebp
loop
xchg
mov
mov
pop
adc
push
and
xlat
jmp
lock
mov
aad
adc
pop
push
sahf
inc
mov
xor
int3
div
sbb
shll
pushf
leave
int3
add
ja
gs
test
xlat
loop
aad
fldenv
mov
stos
adc
xor
ljmp
add
pop
push
mov
or
lods
fs
mov
jbe
push
xchg
cli
lock
sub
in
lods
stc
xlat
sub
jb
insb
xlat
in
xorb
daa
mov
jmp
cmp
sahf
data16
and
es
imul
adc
arpl
sub
push
hlt
inc
jp
fbld
iret
push
inc
mov
insl
mov
cmp
pusha
xchg
inc
lods
dec
mov
dec
lods
lcall
adc
or
cmc
xchg
nop
iret
adc
push
cmp
push
dec
mov
jno
sub
inc
imul
stos
das
fwait
mov
mov
arpl
dec
dec
mov
sub
push
dec
ret
xchg
stos
cld
cld
pop
scas
loope
pusha
push
inc
aaa
lcall
test
imul
and
aam
xor
xchg
dec
jle
sahf
dec
out
popf
xchg
fwait
out
test
mov
pop
lods
pop
fs
or
mov
std
mov
mov
push
faddl
or
shr
testl
pushf
sbb
cltd
pushf
mov
rorl
popa
ret
jno
arpl
in
pop
xchg
mov
pop
mov
add
imul
push
ficompl
inc
ljmp
mov
adc
and
pop
jne
mov
cmp
inc
and
movsb
pop
fcmovb
nop
or
daa
sti
aaa
fwait
in
mov
es
mov
xchg
jecxz
ljmp
hlt
or
jno
xchg
sarb
lret
pop
cmp
xchg
leave
cmc
int3
pop
int3
out
pushf
popa
lea
jo
popf
orl
cmp
xlat
scas
in
inc
xor
ret
adc
aaa
clc
imul
inc
mov
mov
loope
xor
repz
add
repnz
loopne
dec
les
add
jo
cmp
outsb
jno
cmp
sub
sub
mov
xchg
jnp
bound
fwait
xor
mov
mov
lcall
cmp
mov
dec
pusha
sti
mov
pop
imul
jl
xchg
xchg
rcrb
mov
dec
or
xor
add
pop
orl
fisttpll
lcall
icebp
fimuls
push
aad
addr16
mov
jl
movups
int3
mov
test
push
lahf
push
cmp
mov
jbe
xlat
adc
in
call
mov
push
mov
test
inc
sub
jns
ljmp
adc
sbb
cmp
xor
and
repnz
clc
xchg
aaa
cs
cmpsb
or
push
jo
mov
mov
pop
cmp
and
out
pushf
pop
xlat
in
push
sub
or
lods
pop
dec
mov
divl
jne
add
sahf
loopne
les
fisubl
aad
jae
inc
out
and
pop
loopne
xlat
inc
xchg
int
andl
ja
shl
lods
mov
jne
cli
movsl
and
lods
pop
imul
xchg
faddl
enter
lcall
repz
xchg
and
or
push
pop
inc
inc
decl
mov
ret
out
insb
add
aaa
clc
mov
cwtl
ss
xor
pop
xchg
fists
sub
xchg
ret
stos
js
fld
sbb
xchg
xchg
cwtl
mov
enter
mov
shlb
iret
lret
push
arpl
icebp
adc
inc
shll
outsb
mov
fs
dec
mov
xor
adc
and
outsl
sbb
sbb
pusha
jg
es
jle
inc
out
out
adc
dec
cwtl
pop
sub
adc
shlb
das
repz
cmp
push
lds
mov
inc
jnp
call
xor
cmp
sub
adc
rcrl
insl
pop
sarl
inc
sbb
and
cwtl
ror
pop
inc
mov
push
adc
mov
sub
push
into
xor
loopne
mov
mov
jecxz
repz
ds
cmp
shl
add
adc
pop
leave
and
push
mov
sub
je
inc
js
or
in
mov
pop
sbb
fldl
popf
sbb
and
inc
pop
xchg
sub
add
daa
xchg
or
xlat
sub
jno
js
cmp
flds
test
sub
out
fmull
cld
pop
pop
mov
and
rcrb
xchg
mov
sub
stc
sub
lahf
xchg
and
dec
leave
and
popf
sub
cltd
dec
cmp
push
or
sbb
std
fsub
add
adc
lock
insl
idiv
push
sbb
xor
addr16
jl
mov
js
cmp
adc
fucom
adc
test
push
cmpsl
cmp
and
add
cmp
cmp
mov
shl
cmp
movsl
mov
mov
cmp
sub
ss
jae
scas
sti
ds
pushf
xor
fisttpll
cmp
jae
sbb
pusha
mov
pop
loope
adc
in
daa
addr16
adcb
lret
addr16
inc
xchg
loop
and
pop
comiss
pop
call
lahf
or
xchg
movsb
and
inc
pop
or
jmp
leave
mov
insb
bound
stc
adc
push
mov
outsb
or
mov
add
xchg
maskmovq
testl
gs
faddl
out
lahf
lock
loope
sbb
jb
jg
and
sbb
jno
mov
rcr
jmp
gs
lods
xchg
fwait
xchg
mov
pop
jnp
or
or
or
sbb
gs
sub
hlt
inc
fs
aaa
jmp
dec
lds
cmc
mov
xor
pop
cli
jb
lahf
addr16
cltd
jo
mov
out
jbe
and
daa
xor
pusha
add
das
jae
add
add
jmp
inc
sbb
arpl
fs
ret
cmp
push
sbbb
in
cmp
inc
cld
js
xor
js
ret
inc
xchg
scas
divl
aaa
dec
adc
jo
out
cld
cmp
int3
out
mov
mov
jno
test
fistpll
cmp
pop
sbb
dec
call
add
in
sbb
addl
xor
dec
imul
fstps
inc
mov
fs
sbb
jp
adc
inc
fildll
cmc
add
cmp
push
mul
stc
mov
push
pop
mov
adc
jl
xor
and
stc
mov
repz
je
movb
pop
rorl
inc
sbb
xor
fnsave
cmpsl
mov
jo
jno
imul
xchg
notl
fsubrl
negb
cmp
pop
add
inc
mov
iret
pop
rcrb
lret
push
pop
addr16
ljmp
xchg
leave
cmp
or
cs
jae
mov
das
cli
mov
mov
or
test
rcll
iret
movsl
fcoml
mov
mov
loope
jno
lahf
bound
cwtl
call
test
xchg
stc
sub
mov
jl
repz
jl
mov
mov
iret
dec
std
or
inc
loope
sub
push
addb
sbb
rcl
es
push
cmc
mov
insl
lret
mov
lahf
repz
cmp
and
pop
mov
jge
xchg
shl
jp
mov
mov
cwtl
cli
sub
mov
popa
in
pop
loop
push
cmp
pop
mov
in
pop
loope
lock
lret
lock
movsb
cld
inc
repnz
testb
repnz
mov
pop
or
inc
std
mov
mov
jnp
inc
cmp
pop
test
jmp
cwtl
mov
jmp
orb
mov
aas
stc
aas
add
mov
test
outsb
inc
push
repnz
mov
imul
loopne
int3
popa
sub
jbe
and
movsl
add
aad
or
lods
mov
or
mov
xchg
insl
std
inc
int
mov
pop
nop
aam
int
add
sbb
test
xchg
outsl
and
sbbb
xor
lea
cld
add
js
sbb
jb,pn
pop
mov
pop
movsb
aas
inc
out
in
test
dec
jae
or
mov
cmp
pop
stc
cmp
mov
push
aaa
and
outsl
adc
jp
fsubl
push
and
cmpsl
loop
xor
and
mov
popf
mov
bound
sub
loopne
mov
mov
mov
inc
jns
push
test
jmp
es
pop
xchg
adc
push
stos
jae
dec
jp
pop
stos
mov
inc
rcrb
leave
and
stc
out
in
loopne
add
or
mov
adc
mov
std
jl
push
test
add
xchg
jge
push
push
fisttpl
jecxz
popa
add
cld
shll
adc
scas
inc
out
push
fistl
fwait
pop
push
adc
mov
cli
rorl
stos
pop
sbb
sbb
cmp
ficoms
dec
and
jmp
imul
push
stc
stos
fstl
add
adc
pushf
jne
scas
pop
std
ljmp
push
test
lcall
pusha
inc
aam
flds
jnp
push
xchg
mov
xor
jmp
mov
dec
aam
inc
xchg
xchg
lret
sub
xchg
jns
lcall
jge
jp
packsswb
cmpsl
sub
xor
jne
push
add
push
dec
nop
xchg
lret
jno
js
sarl
sbb
lret
ljmp
dec
cmp
pop
add
mov
outsl
cmp
test
xor
inc
sbb
sbbb
jns
xor
loopne
mov
stos
mov
add
mov
stos
mov
pop
mov
mov
inc
repz
pop
popf
sbb
xchg
sbb
pop
outsl
push
lret
in
sbbl
fsub
mov
and
jge
sbb
push
xchg
sub
mov
xchg
repnz
or
out
jo
insl
mov
icebp
push
mov
xor
test
lods
push
jnp
or
fisttps
movb
pusha
or
out
push
lret
leave
mov
sub
mov
adcb
addl
sbb
in
mov
push
mov
sub
jl
mov
rorb
and
mov
mov
sbb
icebp
test
and
cmp
cmp
pop
sbb
in
xor
cmp
bound
aam
cmp
orl
jg
stos
leave
fcomp
flds
loopne
sbb
fbstp
shlb
mov
mov
mov
test
js
ja
pop
repnz
into
and
fistpll
mov
pusha
notl
mov
outsl
and
xlat
iret
pop
add
idivl
in
sub
dec
fldl
dec
repnz
test
movsl
adcb
inc
int3
or
cmp
lods
xchg
lret
push
in
jns
sub
mov
sbb
fisttpl
das
hlt
lcall
das
mov
gs
add
or
cmp
add
pop
xchg
sbb
dec
add
add
jno
xor
xchg
cltd
pop
pop
in
outsl
notb
jmp
ljmp
mov
mov
jge
mov
fists
mov
jbe
inc
testb
icebp
inc
add
je
sub
mov
pop
or
jno
mov
data16
xor
fs
cmp
mov
cld
bound
push
sbb
cs
sbb
mov
popf
pop
movups
incl
adc
fsubs
jmp
inc
or
scas
and
mov
add
cmp
xorl
push
mov
xor
cmovge
test
in
arpl
pop
ret
add
shrb
ficoms
orl
push
adc
insb
ret
push
mov
pop
notl
and
xchg
sub
ret
lods
sub
aaa
sbbb
xchg
mov
xchg
bound
in
xlat
or
mov
pop
cmp
mov
fs
addb
push
adc
in
sahf
cwtl
xchg
add
out
cmpsl
fdiv
push
push
sub
mov
stc
pop
xchg
les
sti
cltd
enter
test
xchg
ret
push
cs
out
sbb
and
or
sub
aas
mov
sbb
lcall
lcall
inc
pop
mov
lds
jg
inc
jns
push
imul
sub
repz
mov
arpl
adc
mov
pushf
adc
mov
ret
mov
push
inc
aam
je
push
push
mov
pop
je
pop
pop
nop
pop
xor
push
cwtl
dec
xlat
repz
jp
or
sub
dec
push
cld
adc
andw
movsl
xor
imul
pop
mov
je
jge
aam
ret
push
test
adc
das
popa
stos
xor
mov
loope
and
cmovo
or
xchg
pop
xchg
sub
sub
pop
scas
loop
stc
cmp
pushf
sub
mov
cmp
test
sub
xchg
add
xor
pusha
mov
cmpsl
push
dec
mov
movsb
adc
fs
sub
pop
insl
clc
dec
fs
das
lahf
iret
mov
les
mov
loope
arpl
insb
pusha
orl
nop
jmp
push
xor
jo
inc
icebp
rclb
pusha
xchg
adc
mov
outsb
xlat
ljmp
cld
xor
or
into
nop
inc
pop
or
in
jge
out
pop
in
mov
xchg
xor
adc
sub
data16
mov
or
je
es
les
and
iret
inc
fsubp
data16
aad
mov
arpl
lea
pop
push
push
fstpt
add
shl
xor
bswap
mov
aas
les
jae
adc
jle
xor
mov
stos
insb
mov
adc
scas
in
add
lret
jge
dec
xor
sub
dec
xchg
pop
int
and
outsl
push
out
repz
loopne
mov
adc
stc
rcrb
sahf
cltd
arpl
xor
pop
sbb
fnstcw
lods
mov
xor
push
adc
mov
jb
dec
mov
les
cwtl
addb
xchg
or
sub
stc
decb
in
mulb
sub
in
jne
loop
mov
sbb
jg
dec
push
adc
testb
cmpsl
xor
jns
xlat
enter
push
sub
dec
aas
loope
clc
dec
and
outsl
std
ja
pushf
mov
sbb
cs
ja
cmpsb
fwait
jg
dec
inc
call
fistps
loop
push
sub
js
rclb
ret
push
arpl
sbb
dec
mov
xchg
dec
mov
std
fsubr
das
leave
dec
lret
scas
out
jge
mov
out
mov
out
push
adc
inc
sbb
out
sub
push
ret
mov
xchg
dec
test
es
lcall
daa
lret
lods
mov
or
and
jl
or
sbb
gs
or
or
adc
cmp
dec
pop
loop
cmp
pusha
xor
leave
adcl
lret
fwait
js
pop
iret
jbe
jb
stc
push
inc
sbb
inc
inc
shr
cmpsl
and
into
int3
mov
loopne
fdivrp
out
xor
test
xchg
cmp
jnp
xchg
imul
fdivs
sub
call
test
test
arpl
xor
pushf
and
je
sbb
xor
adc
rcrb
nop
sbb
mov
mov
mov
or
dec
mov
pop
xor
int3
scas
xor
rcrb
imulb
pushf
add
cmpsb
xchg
fwait
lock
jge
cmpb
cmp
xor
jl
into
out
adc
push
and
and
and
xchg
mov
xor
mov
movsb
pop
xchg
scas
fstpl
adc
or
inc
or
dec
daa
sbb
ja
aam
jecxz
clc
push
nop
mov
scas
xor
pop
cmp
cmpsb
aas
stos
pop
sub
push
iret
gs
lods
jns
pop
pusha
pop
ret
subb
shll
sahf
ljmp
mov
mov
pop
stc
push
mov
dec
les
push
sub
push
adc
and
ds
or
imul
push
add
stc
outsb
sub
iret
ret
imul
and
ds
daa
or
dec
jnp
call
xor
dec
fldt
jge
popa
out
ret
lods
js
lahf
cmp
pop
fcmovu
push
adc
std
sbb
cmp
jne
movsl
faddl
cltd
pop
leave
adc
and
sbb
sbb
jge
fidivl
std
inc
push
mov
out
mov
cltd
mov
aam
sbb
cmp
sbb
shlb
xor
les
add
sub
ficomps
mov
shll
enter
nop
jmp
insb
jbe
pop
xchg
stos
out
xor
push
xchg
pop
push
and
leave
sbb
push
add
mov
incb
jg
cmpsl
xchg
ret
out
test
loope
mov
push
push
mov
bound
inc
repnz
sub
jl
shrb
ret
mov
ret
inc
in
repz
lods
jge
scas
je
ret
ds
mov
push
add
xor
xchg
xchg
mov
out
loopne
lds
fsubl
jle
xor
data16
test
inc
outsb
ret
aas
int3
xchg
sbb
fwait
scas
into
cwtl
mov
add
stc
or
dec
cld
in
sti
sub
flds
sahf
orl
lcall
jecxz
repnz
cltd
add
mov
fcoms
loope
or
cmp
mov
cmp
sub
add
lods
xor
inc
insb
push
shrb
lds
orl
jecxz
push
lret
sbb
and
test
repz
cmp
pop
sub
mov
test
add
push
ds
mov
inc
xchg
fsubs
adc
iret
sub
sub
ljmp
mov
push
push
adc
jae
mov
inc
addb
pop
push
inc
lret
jge
shlb
shll
xchg
sub
pop
in
lea
lods
aam
xor
fimull
mov
dec
sbb
sbb
scas
das
fcmovnbe
sbb
or
and
outsb
and
dec
pop
cld
mov
dec
pop
cmp
out
mov
cmp
popa
pushf
loope
cmc
pop
or
insl
mov
enter
in
dec
add
insb
pop
in
pop
lock
jecxz
xchg
dec
sarl
adc
repz
lret
pop
pop
inc
jae
cmp
xchg
out
add
jle
imull
add
sbb
scas
out
mov
xchg
scas
jnp
jmp
or
cmc
out
aam
mov
jns
pop
iret
add
mov
xchg
fmull
subl
jnp
mov
mov
lcall
orl
and
push
test
repnz
cmp
test
xlat
repnz
add
pop
aas
test
dec
rcrl
sbb
adc
inc
subl
pop
xchg
pop
stc
popa
cmp
fcomps
mov
sbb
cmp
add
mov
iret
out
ljmp
cmp
gs
leave
iret
testl
xchg
add
inc
push
jp
mov
inc
dec
xchg
mov
add
in
movsl
ror
inc
push
adc
sbb
fidivrs
popa
or
and
sbbb
clc
cmp
pop
mov
mov
ror
insb
std
lcall
mov
inc
or
ret
ss
enter
pop
mov
movsl
in
xor
cmc
in
jp
shrb
mov
rcrb
pushf
inc
inc
mov
or
pop
pusha
inc
xchg
ret
inc
mov
aas
add
push
outsl
cmp
xchg
jge
movsb
subb
icebp
rcrb
insl
sahf
pop
mov
push
int
mov
sbb
jb
fstpt
mov
push
fs
dec
mov
stc
ret
dec
jae
je
into
mov
mov
lcall
push
int
jae
fisttps
inc
sub
mov
add
sbb
imul
lock
xchg
out
popa
sub
pop
or
mov
scas
fadd
jae
jno
push
les
xchg
popa
or
sub
inc
rclb
push
insl
fildl
push
cmpsb
push
inc
pop
add
fnstenv
and
movsl
mov
out
adc
jbe
inc
sbb
sbb
xor
test
mov
shll
aaa
shll
stos
push
int
sar
push
ja
mov
cmp
fisubl
stc
out
xchg
cmp
adc
inc
xchg
push
xlat
push
pop
jno
push
mov
cld
push
call
xor
mov
cmp
sub
pusha
shlb
sbb
sbb
pop
js
jecxz
cld
cmp
push
dec
lret
scas
dec
jp
sbb
pop
inc
xor
jle
int3
cltd
sub
loop
mov
fisubrs
adc
es
xor
pop
cmp
addr16
pop
sub
mov
outsl
xor
je
jmp
lret
mov
pop
jg
mov
jnp
push
pop
stos
xor
inc
and
icebp
cmp
stos
add
dec
mov
mov
xchg
sbbb
add
or
mov
outsl
cmp
adc
and
bound
mov
in
cltd
sbb
sub
xor
and
add
ss
mov
mov
lds
popa
test
shrb
lcall
outsl
cmp
outsb
sub
push
pop
xor
mov
adc
push
xor
xchg
and
out
int3
cltd
pop
jle
test
sub
out
xchg
jno
mov
fildl
lahf
and
sahf
subl
out
pop
xchg
je
jns
adc
inc
inc
imul
bound
test
push
fnsave
inc
shlb
adc
movsb
push
fstps
sbb
xchg
cmp
xchg
push
fs
sbb
or
enter
inc
jecxz
pop
push
pmaxub
je
or
sbb
push
pop
mov
inc
stos
inc
inc
mov
lcall
jmp
mov
enter
push
enter
loopne
jg
repz
mov
nop
imul
or
sahf
adcb
xlat
popa
mov
pop
push
call
sub
fldenv
popa
imul
mov
lcall
push
ss
sbb
cmp
sti
ja
lock
sbb
stos
scas
mov
mov
add
push
and
pusha
les
mov
inc
mov
jno
jae
adc
add
adc
stc
adc
fmul
iret
add
test
cmpsb
sbb
or
jecxz
cmpsl
push
and
enter
mov
fimull
daa
mov
pop
insb
inc
inc
push
sub
out
adc
cmpsb
jbe
lods
cmpsb
mov
jae
test
les
push
stos
pop
aad
push
add
leave
push
frstor
cs
scas
hlt
adc
jg
pop
js
out
ja
aas
xchg
push
sbb
and
jmp
sbb
fwait
xchg
pop
mov
fucomip
addr16
or
add
shlb
sub
rcll
pop
in
fldt
xor
push
push
imull
sbb
lea
in
bound
inc
add
cwtl
insb
fidivs
fldt
test
out
clc
mov
sub
pop
push
dec
mov
rcrl
call
jecxz
jae
mov
loopne
pop
adc
outsl
in
cmc
pop
inc
or
movsb
jbe
pushw
lret
jl
rcrl
int
loopne
or
pusha
pusha
add
cmp
mov
movsb
cmpsb
sub
stos
dec
push
aas
aaa
lret
cmp
aam
cmp
xchg
cwtl
mov
daa
push
pop
pop
push
lret
or
sub
stc
add
fldcw
mov
outsl
sub
push
test
mov
in
in
sbb
add
push
and
add
call
ret
pop
cmp
push
negl
inc
mov
jmp
test
mov
mov
pop
ret
sbb
je
push
and
subb
stos
lea
les
hlt
mov
mov
test
add
test
sbbl
and
mov
mov
imul
dec
ds
xchg
mov
push
leave
fdivrl
sub
push
cmove
lahf
dec
add
std
movsl
ss
repnz
xor
push
lds
mov
in
ret
insl
mov
mov
leave
and
mov
je
mov
pusha
ja
mov
sub
jle
mov
inc
sbb
lea
daa
sti
lods
nop
pop
mov
xor
out
push
push
mov
cli
repz
mov
sub
arpl
mov
cmp
bnd
jmp
mov
ja
dec
push
adc
mov
or
xchg
or
mov
lock
xchg
mov
cltd
jae
fcoml
icebp
nop
gs
inc
cmpsb
xchg
push
mov
dec
ret
mov
ficomps
cmp
stos
mov
lahf
fadds
adc
mov
div
insb
push
mulb
fcomps
xor
mov
gs
push
std
aad
jae
fildl
dec
push
mov
fmul
jo
mov
sarb
xchg
and
pop
mov
rcrb
xchg
push
jp
jne
cs
xor
dec
sarb
mov
pop
cmp
hlt
fistpl
fistpll
mov
jg
int3
xchg
divb
sbb
dec
mov
fnstcw
iret
pop
stos
aas
rcrl
leave
dec
xor
in
push
xor
jecxz
mov
stos
sbb
cmp
insb
test
jp
aas
je
dec
sub
push
rcll
mov
xchg
add
insb
inc
and
pop
xchg
mov
test
loope
xor
mov
movsl
adc
lock
ss
xchg
pop
inc
xor
fisubs
xchg
mov
cmp
dec
xor
call
pop
cwtl
add
xlat
nop
scas
cli
shrl
insb
jbe
sub
xor
enter
mov
rcll
into
push
adc
sbb
pop
bswap
inc
add
shlb
fwait
push
stc
and
jmp
adc
jmp
xlat
add
aas
pop
lret
inc
push
or
cltd
loopne
js
aas
add
popa
pop
sub
scas
inc
ds
icebp
jl
js
xor
adc
std
and
inc
stos
out
add
movsb
outsl
fcom
cmp
or
and
mov
ja
lods
sti
xlat
insb
adc
adc
mov
test
or
lahf
sbb
int3
jo,pt
stos
sahf
pop
out
pop
mov
stos
and
pop
dec
stos
mov
out
pop
stos
mov
dec
js
mov
mov
add
xor
lea
das
xchg
inc
xor
rorl
xor
enter
sbb
dec
popf
push
sub
mov
setl
je
jg
adc
dec
push
mov
pop
test
fwait
test
imul
dec
sub
sbb
pop
pop
shll
xor
insl
pushf
call
sbb
add
iret
xorb
adc
and
and
lods
pusha
mov
rcll
cmp
cld
loop
jnp
clc
mov
mov
xrelease
xchg
xchg
lods
mov
popf
xor
dec
sub
inc
in
aam
dec
and
sbb
shl
adc
cmc
jmp
cmp
or
fidivs
rorl
loop
dec
js
inc
xor
movsl
scas
push
adc
and
adc
mov
adc
sub
aaa
adc
and
hlt
out
stos
sti
shrb
mov
mulb
pop
pop
repz
aam
and
jae
stc
add
shlb
xor
push
cmp
ljmp
loopne
flds
xchg
cld
arpl
addr16
or
add
cmp
push
xor
sub
xchg
jecxz
sub
adc
ret
bound
cmp
test
mov
cmp
dec
test
repz
sub
pop
pop
roll
push
mov
mov
xor
xor
js
adc
ljmp
dec
and
orl
insl
pop
test
jge
pop
loope
push
stos
dec
bnd
push
inc
out
push
mov
lods
imul
stc
push
daa
mov
std
out
jb
and
data16
scas
aam
sub
lcall
aad
sahf
lods
or
push
lods
jnp
fwait
mov
dec
xchg
inc
inc
xchg
adc
pop
and
ljmp
sbb
stos
movsl
dec
stos
sub
cmp
cmp
roll
adc
lahf
push
jo
xor
mov
jb
adc
jns
push
cmpsl
xchg
sub
xchg
fildl
add
jmp
sbb
adc
inc
out
push
sub
stc
rclb
pop
push
cmp
and
pop
cltd
jle
push
outsb
add
mov
fistpll
jmp
lods
test
cmp
mov
pop
adc
out
les
fs
or
mov
lahf
and
pop
jmp
int3
push
jbe
ret
mov
ja
jg
lds
sbb
or
js
out
outsb
jo
cmp
mov
iret
dec
hlt
testb
movsl
pop
sbb
lahf
xchg
fmull
and
dec
and
addr16
arpl
sti
jo
add
sub
xchg
xlat
mov
cwtl
pop
les
orl
pop
ror
add
mov
xor
push
dec
lcall
test
xor
sub
mov
mov
mov
push
ljmp
mov
clc
sub
cmp
scas
rcl
or
mov
cld
xchg
dec
sub
jle
push
stos
adc
cmp
push
scas
cmpsb
enterw
mov
popa
int
mov
xchg
xor
mov
out
mov
sbb
pop
sub
rcrl
neg
fcompl
ljmp
mov
push
add
push
jmp
cld
test
aas
repz
stos
mov
adc
lods
mov
js
push
fnstsw
dec
dec
pop
xchg
mov
mov
xor
pop
lock
popf
pop
in
call
add
inc
ljmp
arpl
ljmp
insl
pop
ret
xchg
shll
ret
aad
xchg
shl
jmp
fnsave
push
xor
lret
pop
out
mull
dec
mov
das
push
scas
andb
and
adc
ja
rclb
sbbl
outsl
inc
sub
jae
dec
cmc
dec
jle
inc
add
repz
dec
jb
sbb
idivb
ret
xor
cmp
popf
or
mov
nop
lcall
insb
xchg
sub
xchg
jns
or
pop
es
xor
adc
das
pop
mov
in
sbb
mov
pop
imul
sub
pop
notb
stc
pop
pop
ja
mov
outsl
aam
xor
sub
pop
js
xchg
fmull
add
mov
testl
arpl
jg
pop
push
pop
xchg
cmc
loop
or
xlat
gs
mov
push
add
fcmovbe
popf
and
adcl
adc
jno
rcrb
inc
imul
cmp
or
aaa
ror
fstps
push
shr
cmp
jnp
imul
dec
inc
sub
ss
pop
add
jge
xchg
inc
rcrl
pop
popa
sbb
lcall
je
shll
pusha
addr16
pop
sbb
subb
icebp
push
cmp
mov
idivl
outsl
push
sub
hlt
jp
xchg
xchg
fadds
and
hlt
jle
insb
shl
mov
adc
and
stos
mov
xchg
mov
test
jns
mov
lcall
mov
push
cmp
jg
ljmp
pop
mov
icebp
or
inc
push
and
das
xlat
push
dec
jnp
adc
inc
es
test
push
pop
dec
adc
fwait
push
push
sub
nop
pop
cld
mov
sahf
clc
in
inc
xchg
dec
add
and
xchg
and
mov
adc
insl
cmpsb
mov
mov
xchg
push
out
or
aas
movsb
dec
sub
push
jnp
sbb
shl
cmp
in
pop
cmp
insl
sahf
pop
push
dec
scas
add
add
mov
popl
out
int3
incb
push
xor
pop
ljmp
adcl
out
pop
loop
inc
xor
jecxz
jecxz
push
rcrl
jbe
movsb
aaa
ds
sar
outsl
sub
stos
enter
mov
mov
push
aad
sub
mov
and
sbbb
dec
out
inc
jl
sbb
xchg
dec
mov
popa
mov
and
cmpl
ja
adc
sub
sbb
mov
cmp
arpl
jg
mov
sub
call
pop
pop
insb
shll
dec
adc
imul
and
or
mov
lahf
fimull
push
testb
jge,pn
sbb
push
loop
jnp
setne
testl
xor
repz
lcall
sub
aam
cwtl
push
in
test
cmp
lock
lcall
ss
sub
sub
xchg
dec
call
add
pusha
arpl
ret
mov
insb
loope
mov
movsb
hlt
shrb
jl
popf
test
insb
mov
or
repz
fimuls
pop
stos
cwtl
jo
push
sbb
ficoms
sub
inc
cltd
jne
clc
out
xchg
cwtl
xchg
leave
shll
cmp
xchg
inc
repnz
clc
push
mov
std
out
jns
mov
xchg
shrl
inc
mov
push
rcrb
je
jecxz
ds
insb
sub
mov
mov
mov
dec
int3
push
sub
push
mov
je
seto
hlt
adc
and
aad
lcall
adcl
jp
cmc
subb
fisttpll
pusha
cltd
or
sbb
flds
lods
rolb
jge
sub
mov
in
pushf
pop
test
mov
jg
jp
stos
stc
rcll
xchg
cmp
mov
mov
adc
aad
int3
xor
xorb
das
adc
insb
lret
xor
loope
cmp
fiaddl
rclb
shlb
or
hlt
fadd
pop
jae
fldenv
pop
cmp
es
addb
mov
mov
mov
add
adc
jnp
mull
loop
enter
fcom
adc
loope
mov
out
decl
dec
in
data16
ficoms
cltd
arpl
push
adc
add
jno
filds
mov
lods
sub
into
imul
dec
push
or
lods
in
mov
mov
sub
pop
jecxz
imul
inc
sahf
jp
adc
roll
mov
mov
insl
and
shr
out
add
cmp
loope
xor
int3
push
mov
mov
xor
add
mov
orb
cmpsl
in
arpl
sbb
jmp
push
test
inc
adc
fidivrl
jnp
mov
jge
ds
mov
push
dec
repnz
popa
push
stos
sbb
or
inc
xchg
addr16
gs
aas
pop
pop
cmpsl
repnz
hlt
jmp
lcall
lods
std
add
cmp
jbe
pop
cmc
fimuls
xchg
mov
push
int3
push
inc
mov
fstpl
fcompl
shll
loopne
in
imul
adc
loopne
and
push
cmp
sar
lahf
add
ret
pop
cs
repnz
aas
fisubs
jne
loopne
mov
dec
push
xchg
xor
pop
xor
stos
bsf
ficomps
push
gs
xchg
loop
xchg
inc
rcr
test
jnp
xchg
pusha
pop
fcmovb
sbb
std
jg
push
rcll
xchg
dec
popa
jge
mov
jb
xchg
movsb
xor
sbb
add
lea
pushl
repz
cmp
mov
and
add
in
mov
arpl
xor
or
and
push
test
ret
aad
je
xchg
jle
cmp
push
xor
xchg
dec
notb
call
or
negl
std
mov
out
outsb
rcl
dec
and
cld
orl
jne
mov
fmul
test
sub
mov
jecxz
pop
imul
cmc
in
aaa
mov
or
ret
iret
push
inc
sbb
in
fisubrs
sub
test
mov
jns
fisubl
sub
iret
aas
pop
cld
cmpsb
push
outsl
cmp
dec
fs
xchg
sbb
stos
clc
cmpsb
fnstenv
push
cmp
xor
cmp
mov
aam
or
std
xor
rorl
fiaddl
push
jne
dec
punpckhbw
aad
sub
daa
movb
ficomps
xor
push
lret
cmp
jne
in
jo
adc
mov
aad
test
xor
cltd
stc
mov
in
sahf
leave
jne
push
out
jno
ljmp
out
mov
xchg
es
inc
jae
int
loopne
insl
enter
dec
movsl
push
nop
adc
mov
fs
negl
xchg
scas
loopne
jle
mov
stos
lcall
mov
jmp
push
sbb
pop
call
dec
push
cmp
dec
mov
dec
sub
push
sar
in
lret
out
mov
adc
cmpsl
or
jns
imul
sahf
mov
mov
push
and
mov
pop
fstpt
sbb
pop
or
xor
stc
sub
adc
std
pusha
int
call
adc
clc
lret
sub
nop
cltd
sbb
sub
cmp
decb
repz
repnz
sub
sub
mov
mov
jmp
lds
xchg
jae
jo
and
add
cwtl
sbb
jmp
subb
shrl
jb
call
cmp
and
jbe
lret
mov
cmc
mov
jo
in
inc
inc
sbb
mov
int
lret
movb
inc
icebp
lds
sub
divb
pop
sbb
mov
cli
sub
sti
cmc
or
adc
xchg
loope
lcall
aam
add
iret
mov
rol
popf
or
cmc
es
mov
or
jne
out
fdivr
testb
daa
scas
fisubrl
xor
js
sbb
pop
loop
pop
jno
xorb
adcb
stos
stos
es
jle
mov
nop
mov
jg
mov
adc
stos
scas
pop
mov
and
movsl
lret
jb
jae
xorb
jmp
repz
sbb
das
push
fisubrs
leave
mov
arpl
ss
pop
mov
scas
insb
outsb
dec
push
add
push
and
sub
inc
and
mov
sub
shll
sbb
addr16
mov
mov
bound
lock
data16
push
shlb
loop
popf
insl
ds
mov
xor
subl
les
ljmp
or
out
jl
das
sarl
mov
mov
das
ja
cld
mov
and
das
sahf
inc
mov
jns
cmpsb
pop
sbb
sub
jno
f2xm1
add
in
fwait
hlt
sbb
sub
add
or
pushf
and
xchg
lds
adc
outsl
popl
mov
adc
or
call
jmp
fsubrs
cmp
xchg
xorl
mov
loopne
dec
xor
add
inc
sub
sub
int
jp
pop
mov
lods
mov
cmp
add
gs
inc
out
jo
mov
and
pop
fdivr
andl
fbstp
sub
js
sub
and
ds
andl
xor
lds
adc
xor
sbb
push
mov
fsubs
lods
out
push
imul
mov
aaa
xchg
enter
addr16
inc
scas
sbb
jg
insb
insl
mov
lcall
and
jmp
or
or
sbb
and
mov
push
pop
lahf
lods
sbb
cltd
mov
test
mov
aam
mov
xchg
push
inc
sbb
add
jle
fcompl
push
xchg
push
jns
inc
mov
incb
mov
pushw
mov
push
jnp
int3
sub
jbe
push
stos
inc
and
sbb
cmp
popf
shlb
or
mov
mov
dec
nop
xchg
jae
inc
pop
sub
jge
xchg
sbb
testl
cmpsl
add
and
cltd
adc
mov
adc
sub
fisubl
pusha
mov
or
adc
rorl
mov
add
xor
roll
and
in
xor
cmp
push
insb
cmpsb
ljmp
jbe
lret
lret
mov
movsb
push
mov
iret
iret
and
test
in
arpl
or
adc
pop
jne
sbb
sub
in
xchg
jle
stos
call
sub
repz
jnp
dec
dec
outsl
call
fistpl
sahf
push
lock
pushl
cltd
stos
mov
push
mov
je
iret
jo
mov
pop
jle
sbb
inc
jg
inc
inc
in
lods
in
or
xchg
jae
sub
xchg
gs
xor
insl
int3
xor
and
insl
jge
aaa
xor
rcrl
mov
out
aas
sbb
shll
add
cld
ljmp
ficomps
dec
jle
xor
dec
sahf
int3
into
cli
mov
push
scas
inc
jo
pop
lds
sub
stos
ret
pop
int
lods
push
push
fwait
jmp
add
jbe
inc
test
dec
and
lret
mov
sub
mov
push
cli
mov
lea
dec
shlb
cmpb
and
xor
jb
in
mov
ficomps
inc
cmp
adc
mov
pop
into
outsl
push
imul
shlb
mov
sbb
lods
es
jno
sti
xor
rcl
jbe
fwait
dec
das
inc
test
sbb
push
inc
and
xor
xor
cmp
mov
and
mov
movsl
sbb
mov
shl
inc
mov
jmp
cli
imul
out
cmp
call
cmp
pop
inc
and
dec
mov
sub
rolb
ljmp
sub
stos
in
fdivrs
scas
adc
test
fwait
cwtl
sbb
mov
mov
out
adcl
or
aas
hlt
xchg
lds
lds
and
fwait
and
sub
idivb
incb
std
shll
xchg
and
pop
mov
int
mov
cmp
jno
js
xchg
jmp
test
jb
adc
mov
stos
mov
je
jmp
mov
push
push
cmc
aad
neg
mov
mov
test
dec
scas
xchg
insb
cld
sbb
insb
dec
push
cmp
enter
loopne
cmp
mov
pop
in
addb
aas
cld
xchg
flds
jne
int
int3
jge
dec
xchg
sub
adc
jp
iret
addb
sti
out
adc
mov
inc
fs
adc
dec
mov
not
xor
imul
push
mov
mov
icebp
and
ljmp
fs
into
fs
mov
scas
inc
add
stos
movsl
mov
int3
xchg
push
adc
stos
scas
sti
xor
imull
es
push
xor
or
mov
xchg
cmp
iret
or
xor
test
jno
aad
fadds
mov
lahf
popa
cmp
movsb
cmpsb
jl
cld
cmp
hlt
push
movsb
mov
sbb
jo
jbe
lods
sbb
popa
insl
clc
inc
pop
sub
adc
mov
jo
stos
out
stos
sub
mov
push
dec
add
dec
add
lcall
js
push
pop
pop
sbb
xor
pop
push
mov
fldcw
cld
int3
pop
scas
fwait
arpl
sbb
leave
lods
push
xchg
gs
pop
cld
adc
sub
push
aaa
mov
pushf
inc
sbb
add
lds
data16
lret
sbb
mov
out
mov
jo
push
push
mov
pop
sti
sbb
popf
div
push
lods
push
mov
test
roll
in
mov
push
sbb
out
test
sarb
sub
pop
mov
adc
icebp
popa
push
inc
test
lods
jl
mov
rorl
inc
push
jmp
adc
mov
out
loopne
xchg
jbe
jmp
data16
out
addr16
lds
jecxz
xchg
sbb
jo
