call
pushf
bound
sbb
jecxz
faddl
ds
ds
enter
sar
or
mov
sub
movsb
cmpsl
testb
ret
xlat
mov
adc
mov
aad
adc
rcl
push
outsb
inc
cmp
fcoml
int3
adc
jo
lahf
lds
mov
adc
push
pop
shrl
push
sbb
pop
popa
jle
cmp
inc
jmp
xchg
roll
xchg
movsb
push
mov
inc
mov
add
jmp
stos
jns
ficomps
sbb
pop
int3
stc
mov
xor
jg
aad
in
es
in
popf
pop
lods
xchg
jo
and
aas
cmc
mov
lret
insl
divl
fsubrs
lds
jno
mov
repnz
push
lods
leave
xor
and
inc
les
in
outsl
cmp
mov
in
xchg
push
push
scas
lret
gs
lock
sbb
gs
lcall
movsb
outsb
sbb
jne
rorl
or
leave
xor
sub
cmp
mov
sub
int3
xchg
jl
jmp
les
nop
sti
push
cwtl
adc
lea
js
xor
pop
ljmp
in
xor
sbb
stc
jne
push
and
push
lea
or
inc
jne
mov
imul
mov
rcll
add
push
or
aaa
and
arpl
ret
mull
and
pop
mov
mov
fs
shr
xor
adc
xchg
mov
cmc
es
and
adc
pop
out
xchg
adc
lock
cld
fiaddl
adc
xchg
lods
jno
add
inc
add
sub
dec
push
out
int
popf
pop
xor
cmp
mov
mov
add
jle
pop
cltd
jle
cmp
pop
inc
mov
mov
filds
arpl
fwait
addr16
and
cmpsb
inc
sbb
inc
jnp
sbb
stc
or
mov
sub
push
int
out
mov
addl
addr16
cmpsb
jno
inc
jne
pop
jge
or
outsb
lcall
cmpxchg
pop
and
jl
mov
mov
or
mov
or
mov
scas
int
xchg
jns
iret
dec
pushf
call
jge
js
dec
xchg
cmp
sub
ret
jmp
mov
cmp
fdiv
je
lods
mov
call
stos
xchg
pushf
ret
andb
scas
adc
push
inc
ret
fisttpll
mov
pop
scas
xchg
inc
dec
push
das
and
xchg
test
sub
int3
stc
out
cltd
and
cmpsl
jo
fs
andl
std
mov
cld
rol
cltd
push
loopne
in
cmpsb
out
dec
inc
roll
int3
dec
push
nop
jp
xchg
outsl
xor
fidivrs
pop
fadd
test
cs
in
cltd
outsb
xor
ret
fidivrl
into
stc
jnp
call
sbb
arpl
loopne
add
es
mov
rol
cmp
sub
test
adc
pop
mov
insl
jle
add
pop
iret
sbb
xor
js
sub
outsl
loopne
jns
test
sar
xchg
ss
push
es
jp
mov
shrl
sbb
inc
cmp
sbb
loope
mov
jbe
movsb
fildl
xchg
mov
mov
pop
inc
or
add
xchg
jno
fs
sbb
add
not
jb
jnp
mov
leave
inc
ret
cmp
das
inc
pop
aas
push
pop
jnp
pusha
lods
xor
iret
clc
sbbl
push
push
jne
add
adc
dec
push
int3
mov
into
dec
rol
dec
outsl
mov
add
sbb
jl
repz
xchg
sub
jecxz
js
fisttpl
jecxz
into
rorb
sbb
or
sub
jae
xchg
or
imul
mov
cltd
xor
xchg
and
mov
out
add
jge
xchg
mov
jmp
hlt
xchg
cmp
stos
xchg
mov
rcll
andl
loopne
mov
and
mov
data16
push
mov
mov
push
out
js
in
ja
xchg
adc
jmp
push
add
xor
ret
pop
mov
insb
out
mov
mov
repnz
les
pop
mov
jle
sub
lret
rorb
cs
mov
outsl
cmp
lods
scas
jnp
aaa
and
pop
lock
sub
cli
pushl
ss
adc
pop
add
xor
mov
dec
inc
xor
cmp
pop
mov
xchg
cmpsb
cmpb
jg
rolb
xor
stos
cmp
and
xchg
add
dec
sbb
cmpsb
inc
movhps
xor
cmp
in
and
in
jbe
lods
shll
adcl
push
add
mov
mov
mov
dec
data16
nop
add
add
inc
xor
cmpsl
call
xor
sbb
imul
or
aam
std
sbb
movsl
xor
mov
ficomps
sub
xchg
frndint
or
in
xchg
fcoml
stc
push
lret
arpl
lds
ja
lods
jl
outsl
in
jmp
mov
inc
in
inc
add
push
xchg
je
sbb
mov
rorl
cs
jl
pop
mov
cmp
push
fistpl
pop
push
lock
pop
adc
aam
dec
jge
iret
cmp
stos
xchg
ja
push
ficompl
mov
jecxz
jecxz
sub
jl
jnp
xorl
fcmovu
rcl
setle
outsl
push
shlb
ret
les
adc
popf
jo
xchg
push
outsl
sbb
cmp
jne
fbstp
loop
dec
and
ds
fs
and
mov
adc
mov
fisubl
dec
xor
mov
or
and
xor
aad
ds
mov
in
xchg
push
push
fildl
iret
xchg
jg
jmp
outsl
adc
adc
sbb
test
cli
push
ret
jne
aas
out
cmp
pop
jmp
fs
mov
xchg
sbb
or
push
lock
lahf
ljmp
jae
mov
insb
cs
sbbb
negl
int3
fdivrl
out
outsl
and
shrl
push
add
inc
and
sbbb
icebp
fldcw
int
xchg
jns
pop
daa
mov
adc
push
xchg
sub
jg
mov
roll
gs
mov
pop
mov
jae
mov
mov
adc
mov
sahf
fisubrs
repz
imul
arpl
cmp
test
daa
push
dec
cmpsb
add
imul
jae
rcrl
cmpsb
dec
inc
loop
dec
and
out
fisubs
rcrl
and
adc
pop
jnp
pop
dec
fisttpll
popf
dec
jo
pop
xchg
fnsave
lock
xchg
in
mov
jb
mov
pop
call
in
cmp
mov
lods
xchg
dec
stos
cltd
xchg
addr16
divps
push
and
je
xchg
adc
popf
and
loope
xchg
xchg
sub
adc
js
orb
scas
push
dec
push
dec
call
cmp
loop
mov
fidivrs
pop
outsb
jno
jnp
fstps
and
mov
je
popa
popf
xlat
sbbb
repz
movsb
rorl
ret
pop
cs
jno
fdivp
in
or
imul
cli
lea
dec
movsl
push
pop
adc
add
rcr
repnz
add
pop
xchg
jge
testl
pusha
sbb
xchg
push
or
add
or
in
gs
or
shrl
add
or
pop
lock
mov
jl
jns
mov
mov
lock
mov
pop
or
inc
xor
test
in
cwtl
lret
cmpsl
or
out
aas
jl
jl
mov
fwait
mov
lock
dec
add
cs
sub
jb
inc
add
or
mov
je
xlat
pop
pop
aaa
cmpsb
std
inc
mov
cld
std
lret
in
das
sahf
adc
popf
jecxz
sbb
sbb
push
mov
adc
cli
addr16
mov
into
cmpsb
pusha
push
push
in
mov
push
notl
inc
fwait
inc
ret
imul
mov
adcl
add
stos
cmc
push
pusha
mov
dec
mov
xor
dec
pcmpeqw
stos
iret
add
inc
dec
in
rcrl
dec
mov
and
jnp
scas
mov
and
push
and
mov
subl
jns
cmpsb
fs
idivb
out
leave
xchg
shlb
push
movd
ret
rorb
add
clc
jl
dec
jg
out
sbbl
mov
jl
bound
in
cmpsl
ja
movb
add
out
sub
mov
in
repnz
ja
or
xadd
xchg
dec
lahf
mov
dec
dec
pop
or
and
rorl
hlt
mulb
xchg
clc
jle
cmp
loop
imul
lret
xor
cmp
arpl
ret
shll
jle
pop
add
jle
cltd
mov
adc
xchg
lea
nop
stos
jp
out
es
mov
aas
call
mov
mov
jge
lods
cmp
jae
mov
xchg
lret
test
add
jae
jns
sti
rorl
loopne
cmpsb
push
sub
mov
sar
and
movsl
dec
jg
popf
dec
add
scas
imul
push
shlb
scas
imul
pusha
xor
lds
xor
mov
test
rorb
scas
mov
add
lods
inc
into
sub
mov
ret
cmp
outsb
loop
pop
mov
xchg
add
cltd
leave
andl
mov
push
mov
pop
fcmovb
inc
insb
add
xor
or
adc
dec
fiaddl
out
lret
stos
xor
cmp
cmpsl
test
sbbb
xor
fisubrs
sbb
out
insl
xchg
or
pop
in
rorb
push
sbb
push
lock
mov
or
sub
int3
xchg
mov
mov
mov
dec
sbb
cmpsb
xchg
inc
cs
cmp
out
clc
test
mov
into
mov
xchg
pushf
out
cmp
negb
test
add
mov
fdivs
pop
out
int3
xchg
arpl
push
arpl
push
aaa
das
shl
inc
lock
jecxz
clc
pop
aaa
movsl
or
sti
sti
mov
jl
fcomp
int
sbb
scas
dec
out
dec
mov
lds
xchg
stc
inc
cmpsl
pop
sub
scas
adc
insb
mov
frstor
les
jle
or
mov
loop
xchg
in
leave
mov
push
cmpsb
leave
adc
mull
aaa
test
add
jp
push
stc
lods
adc
daa
sub
or
mov
cmp
cmp
ret
hlt
cmp
std
jmp
or
je
data16
or
mov
out
mov
and
jns
movsb
inc
aad
fbld
mov
out
or
daa
push
push
dec
fdivrp
iret
div
mov
mov
test
push
movsb
ss
data16
xchg
test
lcall
daa
les
fstpt
les
pop
andb
ficomps
je
xchg
js
add
mov
add
cmp
movsb
or
push
imul
insl
in
mov
push
stc
push
mov
es
in
call
cmp
sti
cmpsb
sub
push
sub
xor
addr16
sbb
jb
jle
cmp
xor
cmp
xchg
stos
pop
push
xchg
cld
divl
daa
mov
pop
mov
mov
inc
sbb
jne
inc
mov
out
shlb
cmp
enter
xchg
lret
stos
stos
les
in
lods
push
push
dec
pop
clc
mov
jae
ret
mov
popa
out
sahf
sbb
xor
xlat
pushf
dec
mov
push
cmpsb
gs
adc
inc
add
cmp
imul
out
or
mov
imulb
lds
int
inc
lahf
sub
or
lcall
mov
or
cmc
cmp
pop
mov
repz
jl
push
rcrl
and
and
stos
mov
aaa
test
sbb
mov
popa
shrl
pop
scas
jne
pop
add
lods
test
jbe
dec
icebp
xor
and
mov
mov
movsb
js
push
leave
mov
pop
lods
push
sub
mov
jbe
mov
xor
dec
xchg
ja
je
ja
stc
jmp
cli
jl
insl
out
sahf
outsl
cltd
loop
jp
into
push
pop
adc
mov
lea
enter
std
pop
jae
dec
inc
cmpsl
xchg
in
cltd
fcomps
adc
mov
scas
sti
daa
and
jbe
bound
mov
adc
outsl
push
pop
push
bound
sub
jno
rolb
cmpsb
pushf
cmp
lock
adc
sarb
lock
lret
mov
das
pop
ret
lea
add
xor
into
mov
repz
insl
jo
lea
or
push
add
js
jmp
inc
xchg
lock
pop
xchg
aam
push
subb
inc
imul
xor
sub
dec
ljmp
xor
sub
mov
aad
mov
inc
enter
jne
xor
inc
inc
adc
imul
and
jp
enter
inc
jp
scas
mov
std
imul
cmp
notl
mov
mov
mov
xor
in
mov
int3
lods
dec
in
shrl
repz
fnsave
cltd
jae
icebp
dec
cmp
cmp
mov
cld
imul
insb
lret
in
jb
sub
cmp
repnz
and
gs
cltd
mov
aaa
pop
jg
adcb
nop
jl
cmp
jmp
int3
adc
js
mov
jae
lret
movsl
test
pop
dec
popf
scas
lock
xor
xorb
aas
scas
xchg
idivb
adc
add
pop
inc
mov
rcr
xchg
inc
dec
test
test
or
add
imul
call
jle
ret
mov
sti
js
add
or
sbb
and
ss
adc
adc
jae
pop
mov
inc
insl
outsl
cmp
adc
pop
rcrb
cmp
test
mov
and
inc
push
jae
lret
adc
jb
cs
je
pop
xor
out
cmp
in
insl
mov
movsl
ja
out
fdiv
xor
mov
rdtsc
js
and
jnp
sub
cmpsl
hlt
adc
lret
mov
lock
mov
lock
nop
outsb
xor
stos
loopne
adc
and
data16
mov
and
push
sbb
pop
or
jmp
adc
cltd
pop
shl
mov
cmc
mov
xchg
and
lock
fnstcw
dec
mov
int
push
fistpl
or
inc
xchg
push
in
int3
push
sub
pusha
je
adc
lret
xor
stc
push
dec
mov
pop
sbb
push
test
test
fadds
int3
inc
sbb
push
aaa
mov
ret
js
fnstcw
pop
leave
mov
inc
push
sub
stos
pushl
outsb
adc
ret
nop
cld
inc
cli
add
mov
push
and
sbb
roll
add
cmpsl
jbe
mov
xchg
adc
mov
xor
jg
mov
ds
push
repnz
out
add
or
repnz
add
add
push
add
mov
ficoml
pop
nop
inc
jge
mov
jmp
fstl
pop
cli
cmp
int3
and
in
pop
mov
add
mov
shlb
inc
outsb
pop
test
popa
mov
inc
fstps
ret
test
and
mov
aaa
aam
xchg
fsubrl
outsb
pop
dec
test
xchg
sbbb
in
fs
push
lea
in
out
in
jg
or
jmp
mov
jb
imul
aaa
bound
push
ja
push
mov
mov
mov
das
cli
push
aad
inc
sbb
fs
mov
cmp
push
pop
xor
sahf
inc
pop
sub
push
add
std
cld
mov
std
add
nop
dec
sub
mov
and
movsl
adc
mov
ja
dec
xor
xchg
or
inc
dec
cs
pop
scas
push
fisubs
inc
add
xchg
jp
jecxz
outsb
bound
xchg
in
xchg
daa
sub
cmp
out
ss
fldcw
mov
repnz
imul
or
xor
out
inc
enter
mov
int3
clc
fcmovnu
lret
or
xchg
jp
icebp
int
xor
sar
gs
repnz
jnp
jmp
cmpsb
js
aad
fidivrs
pop
jb
fwait
and
out
push
ja
inc
addr16
jecxz
mov
dec
pop
rorl
jnp
mov
adc
pop
dec
mul
fmul
jle
pop
jle
ret
stc
inc
fisubl
xchg
mov
mov
xchg
jg
movsb
inc
movsb
cmp
ljmp
int3
xor
pop
insb
dec
loopne
cltd
pop
gs
std
push
push
fstpl
sbb
pop
daa
mov
jl
imul
dec
stos
jmp
into
pop
inc
sti
add
notb
pop
jnp
jnp
dec
mov
push
icebp
jbe
loopne
push
xchg
fisubs
inc
bound
testb
int3
xchg
xchg
cmc
lods
int
rcr
sub
cltd
sbbl
xor
in
cmp
jge
xchg
aam
sub
add
sarb
push
fwait
andb
pop
or
int
stos
cld
push
mov
rcll
fsubs
adc
sti
fs
in
mov
dec
in
pop
xchg
push
daa
bound
loope
pop
adc
rcr
cmp
add
sub
aas
push
pop
pop
cmp
adcb
js
xchg
or
mov
push
or
xor
je
shrb
aad
adc
mov
mov
or
and
add
or
adc
inc
test
pop
pop
js
sbb
lcall
testb
cld
mov
and
ja
les
pop
das
cwtl
sub
cwtl
pop
and
icebp
psrlq
lods
add
xor
mov
inc
push
cmp
orl
es
movsl
pop
jmp
add
in
addl
xchg
mov
outsb
out
aas
js
pop
shlb
jns
sahf
mov
add
popa
cmp
add
inc
mov
xor
inc
pop
cld
add
jp
insl
sub
shlb
into
adc
icebp
inc
lahf
shrb
add
or
test
fwait
cs
ss
dec
sti
inc
push
aaa
rorl
loopne
mov
and
lahf
mov
xor
or
stos
loope
inc
js
lds
es
je
cld
cmp
and
sub
cmp
es
jno
cmp
subl
paddsw
flds
aaa
push
jl
fmull
nop
lock
or
mov
push
sub
push
xchg
pop
shrb
and
adc
sub
sahf
dec
jo
dec
fbstp
push
jnp
scas
cmpb
aad
insl
pop
in
out
adc
cwtl
mov
sbb
mov
mov
xor
mov
pop
pop
fisubl
inc
int
sbb
insb
dec
rcll
outsl
pop
add
out
ds
arpl
subl
push
cmp
adc
out
add
push
mov
mov
mov
call
jmp
dec
ret
push
aam
jl
xor
mov
jge
pushf
mov
int3
pop
cmp
dec
inc
ss
dec
jo
sub
pop
xor
mov
xchg
imul
ficompl
xchg
in
fcom
inc
std
add
adc
daa
or
out
jne
mov
stc
out
mov
ss
scas
push
inc
cs
adc
mov
movsb
or
lods
and
and
js
loop
lea
lock
inc
nop
mov
push
push
pop
hlt
mov
push
pop
xor
lods
stos
ljmp
add
jle
inc
test
mov
jbe
in
cmp
hlt
in
adc
ficoms
inc
divb
cmp
fiadds
out
sbb
sahf
mov
cmpsl
loop
xor
sbb
mov
in
je
in
cmp
lock
insl
test
mov
scas
outsl
roll
imul
popf
bound
loop
xchg
in
pop
jno
inc
jae
push
loop
add
adc
jns
and
add
mov
test
xor
mov
shl
jno
bound
gs
pop
scas
xor
jecxz
sub
cmp
ret
adc
rorl
out
mov
mov
and
add
pop
outsb
ret
popa
sarl
hlt
pushf
or
adc
in
cmp
inc
and
inc
mov
xor
jmp
repnz
cmpsl
cltd
dec
mov
pop
das
jb
idivb
pop
push
dec
sub
jmp
pop
xchg
mov
and
sub
push
aas
vxorps
sbb
icebp
add
shll
jg
inc
lahf
divb
out
popa
loop
sbb
mov
pop
aas
dec
sbbb
jo
ficoms
lods
stos
ftst
pop
jge
daa
push
mov
jecxz
jmp
mov
pop
jne
out
add
sub
ss
push
stc
cmc
test
fistps
jae
mov
add
pusha
fwait
shlb
push
sbb
push
das
sbb
sbb
xor
cmpsl
dec
inc
shll
aam
dec
arpl
sbb
cmp
push
fdivl
cmpsb
imul
insl
mov
int3
add
dec
mov
cmp
shrl
jns
out
mov
ret
mov
xchg
pop
mov
daa
in
add
cmpsl
aaa
imul
gs
jl
cmp
jp
sub
out
xor
cmp
mov
pop
in
bts
stc
out
mov
dec
lcall
pop
cmp
gs
pop
sbbb
mov
jmp
xchg
jle
jns
int3
mov
adc
mov
dec
jmp
cmp
inc
lahf
mov
mov
jle
adc
inc
xor
xor
jge
insb
call
cmc
push
xchg
inc
sub
mov
out
adc
orb
push
mov
fs
js
in
jae
sahf
popa
aam
xor
push
in
push
lds
fnstsw
clc
loop
stc
mov
mov
fstpl
pop
stos
mov
pop
mov
cmp
lods
lcall
lahf
inc
mov
or
adc
repz
jnp
imul
xor
leave
push
mov
or
movnti
jmp
sub
negl
cmp
xchg
cmc
mov
jo
lret
roll
dec
fwait
or
rcrl
orl
lock
rcl
xor
sbb
jl
mov
cmp
stos
pop
enter
mov
push
inc
and
cmp
pop
icebp
cmp
arpl
mov
pop
movsb
and
std
adc
shl
mov
enter
adc
lods
icebp
cmp
test
push
xor
and
lock
dec
dec
xor
push
lret
xchg
loop
or
adc
mov
and
adc
pop
or
movsb
sbb
push
or
fsubp
jecxz
out
add
int
cmp
mov
imul
ja
ret
scas
loope
loope
add
scas
push
repz
dec
pop
push
addr16
test
jae
out
push
mov
jb
daa
xchg
inc
mov
or
data16
aas
cmp
fisubs
mov
inc
aam
int
inc
loop
sahf
jbe
mov
daa
inc
cmp
iret
inc
xchg
pop
insl
jl
add
or
pop
inc
and
fimull
arpl
dec
sub
loop
pop
jmp
aam
xchg
inc
add
je
lods
in
loope
movl
or
ret
mov
fnsave
mov
jecxz
fs
adc
and
in
mov
pop
out
ja
rcl
jg
out
arpl
cmp
xorb
fwait
bound
out
cmpsl
sbb
sub
xchg
rolb
popf
in
and
mov
adc
adc
cmp
fdivs
insl
pop
jne
cmp
sub
xor
lds
lret
push
insl
pop
pop
pop
in
adc
or
lods
stos
imul
pop
sub
or
cmp
dec
xchg
arpl
sbbl
xchg
pop
and
mov
xlat
mov
cwtl
repz
addr16
dec
jae
sahf
mov
adc
sahf
popf
mov
daa
pushf
pop
dec
and
shrb
push
lret
scas
mov
jl
jmp
push
ljmp
in
adc
pop
les
jae
mov
pop
jbe
mov
cmp
mov
lea
mov
lret
mov
sub
sbb
and
fsubp
les
or
xchg
push
out
mov
mov
and
xor
inc
movsl
and
and
fs
mov
inc
jno
nop
inc
adc
cmpsb
adc
pop
mov
add
or
mov
push
arpl
ret
cmp
add
mov
inc
inc
fnstsw
mov
and
cwtl
or
or
cmpsb
cs
leave
cli
cmpsb
out
lret
insl
xor
iret
cmpl
mov
bound
lods
or
sub
jae
sahf
push
push
push
mov
stos
shl
mov
cld
repz
sub
hlt
mov
jl
xchg
pop
sti
xlat
stos
dec
fs
and
push
jbe
mov
in
xor
gs
jno
adc
test
popf
inc
and
out
jno
xchg
mov
sbb
leave
cmp
jl
mov
cmpsl
push
pop
lods
push
add
and
lcall
mov
push
cwtl
mov
call
out
movsb
mov
mov
call
push
mov
outsb
xlat
inc
lea
fs
xchg
cmp
xor
lret
sbb
cmpsb
push
sbbl
nop
sub
jb
shlb
push
mov
inc
xor
push
jp
shrl
or
test
mov
imul
outsb
pop
push
fadds
mov
adc
add
mov
xor
leave
test
sub
lret
enter
pop
mov
jb
push
dec
adc
dec
mov
movsl
sub
sbb
jge
jmp
inc
sbb
movsb
stos
xchg
in
xchg
sbb
loope
cmp
pop
mov
cld
addr16
outsb
cli
mov
mov
adc
mov
pop
testb
pop
lret
das
push
pushf
addb
fs
loopne
jo
idivl
xchg
jbe
popa
mov
sub
dec
cmp
mov
pop
adc
cmovns
push
dec
shlb
dec
lods
mov
xchg
inc
das
pushl
ss
in
jo
clc
cmp
push
ret
loope
outsb
js
and
lods
iret
movl
mov
adc
insb
jno
or
lcall
enter
add
push
sbb
jno
shlb
xchg
inc
aas
daa
aaa
cmp
arpl
stos
or
repnz
fisubl
jo
repnz
dec
and
mov
and
ficoms
std
pop
and
ja
cmp
loopne,pt
push
daa
xlat
rcrl
outsl
repnz
fcmovu
movsl
jnp
or
repnz
sub
ja
enter
dec
movsl
fwait
or
adc
pop
mov
shrl
dec
sub
jg
jg
scas
or
cli
add
push
pop
scas
inc
jmp
mov
adc
jo
stos
mov
fiadds
mov
and
es
cmpsl
shlb
js
pop
fists
dec
jne
xchg
pop
imul
lds
mov
aad
test
and
cmpl
xchg
aad
arpl
pop
mov
test
fsubrl
inc
push
ljmp
push
mov
pop
test
inc
or
mov
push
xor
sbb
inc
int3
lea
outsl
daa
adc
pushf
mov
dec
pop
pop
sar
lods
add
js
or
add
lcall
int
movsl
xor
xchg
fstpt
cltd
xlat
push
sub
cwtl
cmpb
je
fstpl
sbb
xchg
push
dec
test
cmpsl
es
jg
test
xchg
aas
xor
dec
mov
subl
and
mov
push
mov
mov
mov
mov
mov
leave
mov
and
js
push
in
push
pop
clc
and
in
xor
fwait
outsb
sub
scas
gs
test
int
outsb
xor
pop
rcrb
pop
sub
pop
xchg
cmp
and
pop
rorb
xchg
sahf
ljmp
mov
mov
leave
cmp
int
xor
sbb
mov
inc
adc
dec
mov
inc
cmpsb
inc
inc
mov
push
stos
pop
adc
dec
sub
mov
xor
adc
lods
jg
adc
test
xchg
jp
shll
sub
lods
out
aas
ret
mov
iret
sub
push
lcall
imul
lods
jns
dec
int
mov
pop
jbe
movsb
sub
cmp
sub
jb
fnstsw
roll
stos
xchg
aaa
mov
out
adc
mov
sbb
xor
fsts
stos
in
add
mov
sarl
sbb
and
and
cmp
ret
dec
aam
jae
xchg
push
sbb
rcr
popf
stos
dec
fwait
sub
outsb
mov
or
imul
sbbl
cmpsb
loopne
dec
aas
hlt
enter
push
xor
sbb
sbb
adc
add
mov
cld
mov
dec
sub
sub
push
aas
out
rclb
in
sub
stos
repz
aam
ja
xchg
inc
pop
aad
fmuls
leave
lods
aaa
fldcw
lods
and
add
lcall
dec
mov
xchg
mov
cwtl
add
test
mov
jno
sbb
pop
ja
mov
pusha
ds
xor
mov
cmpsl
das
es
mulps
adc
mov
xchg
fs
int3
fimull
stc
mov
mov
cmp
mov
and
mov
cld
rcrl
sub
add
movsb
inc
loopne
mov
inc
adc
xchg
jge
xchg
xchg
jnp
push
rcll
jl
pop
test
push
imul
sbb
jns
icebp
push
lahf
jae
push
aad
ljmp
mov
mov
adc
jno
fdivrl
ficomps
jns
adc
ds
xchg
mov
fcos
stos
pop
add
fdiv
outsl
movsb
jl
pop
loop
incl
mov
mov
insl
or
dec
mov
or
nop
stos
pusha
ret
jge
in
xor
mov
enter
add
lock
sbb
xchg
mov
dec
stc
xchg
cmp
mov
push
add
jge
mov
sahf
jp
adc
sbbb
pop
ljmp
xchg
test
xchg
mov
and
enter
bnd
outsb
fdivrl
and
cmp
xor
pop
mov
jae
int3
std
rcrb
pop
stos
push
test
sbb
jno
mov
mov
add
mov
ret
jae
jmp
subl
in
cld
mov
sarl
and
xor
pop
mov
repz
or
xor
push
call
jg
and
in
shll
mov
inc
jge
pop
mov
dec
push
daa
xchg
xchg
stos
or
fwait
mov
push
mov
push
dec
sbb
adc
mov
icebp
push
leave
xor
mov
loope
pop
mov
inc
mov
lret
push
out
fcom
sbbb
or
mov
mov
inc
lds
out
loopne
out
inc
add
insl
cmp
leave
sub
in
fwait
stos
ljmp
adc
dec
lods
pop
nop
les
push
insl
mov
or
mov
jns
pushl
enter
mov
push
jne
gs
adc
xlat
mov
lret
cmp
jecxz
dec
jnp
cs
sub
sahf
inc
sarl
test
xor
adc
in
cli
pop
aaa
xchg
xor
mov
xor
and
adc
shrl
mov
sarb
in
cs
add
movsl
shrb
lret
rcrl
pop
rcll
mov
and
jo
xor
shll
sbb
cmp
cs
into
fbstp
sub
push
inc
or
xor
xchg
push
jp
sub
in
mov
in
pop
outsl
and
aaa
out
jg
jb
cwtl
xor
jno
cmp
rorb
add
ljmp
inc
in
jns
sub
adcb
sahf
or
js
adc
lods
jbe
jl
adc
and
sarb
out
jno
popf
cmpsl
mov
jno
fnstenv
jmp
jecxz
shrb
js
pop
pop
fadds
lods
bound
icebp
dec
sahf
mov
sbb
sbb
sti
jbe
push
or
int3
outsl
sti
push
out
add
jne
mov
sar
dec
inc
mov
jecxz
out
add
test
mov
loopne
mov
sbb
leave
pop
jb
cmp
adc
inc
push
lds
cmp
fcoms
fistps
leave
fnstcw
test
xchg
sub
aaa
xchg
push
cmp
clc
or
loop
shrb
and
ja
mov
xchg
or
pop
int
xorl
insb
sub
jne
mulb
fisubrs
mov
mov
daa
ljmp
ds
push
lea
xchg
ret
nop
pop
les
xor
sub
ret
mov
lahf
push
add
clc
jns
or
push
xchg
mov
dec
fsubrs
jns
lods
insl
out
jle
loop
aas
fwait
xchg
dec
in
sahf
pop
mov
lahf
xchg
in
leave
and
daa
in
adc
push
mov
aad
sbb
push
arpl
pop
clc
ret
xor
sahf
rcr
in
jg
loop
orb
bound
and
test
and
movsb
inc
lret
scas
test
sub
add
data16
mul
mov
xchg
xchg
in
into
sti
das
push
out
lret
rcpps
je
ds
in
adcl
sbb
cld
outsl
mov
jb
sub
xchg
and
xchg
jnp
mov
sub
xor
lret
sub
repnz
loopne
dec
xchg
js
dec
out
push
movsb
add
or
xchg
out
arpl
push
cmp
mov
adc
mov
call
add
test
sar
jge
in
dec
cmpsl
lds
mov
fidivl
ret
sub
ja
pop
pop
imul
xchg
mov
pushf
xor
xchg
les
arpl
std
ljmp
jb
ficoms
cmp
xchg
and
mov
test
stos
cwtl
clc
mov
roll
andb
add
pxor
add
icebp
outsb
push
outsb
add
hlt
sbb
mov
jno
stc
stos
popf
or
jge,pt
xor
out
mov
cmc
push
fistpll
sbb
ret
pop
pop
jmp
inc
push
cs
popf
ljmp
cmpsl
ret
call
xchg
mov
into
add
pop
stos
pop
xchg
cmp
adc
fisttpl
jnp
jmp
jno
jecxz
fmuls
jns
stos
out
je
cli
dec
test
das
push
xor
or
sbb
mov
lret
ficompl
sub
stos
scas
subl
mov
cs
dec
mov
add
and
cmp
or
xchg
sbb
add
pop
shrl
sahf
sbb
pop
call
inc
outsl
test
lea
fldenv
inc
inc
ret
cli
inc
pop
mov
xchg
mov
out
ds
lds
aaa
adc
push
repnz
push
push
pop
ret
pusha
xorb
and
in
ret
inc
scas
inc
call
mov
pop
loopne
or
inc
cld
mov
or
outsb
xor
iret
xor
add
xor
adcb
cmp
xor
scas
push
mov
repnz
jmp
cmp
gs
in
ss
pop
lods
js
dec
sub
enter
xor
iret
sub
push
push
xchg
daa
pop
fbld
and
scas
outsl
pushf
push
xor
xor
aaa
js
push
jp
xsave
mov
lret
push
cmp
mov
xor
js
xor
vminpd
sbb
mov
mov
adc
sbb
outsb
jb
ret
pushf
out
mov
lea
jp
dec
mov
ror
inc
ret
fcompl
je
fdivrs
or
in
cli
mov
mov
mov
ss
daa
and
and
dec
or
dec
and
push
ss
mov
shl
int
push
mov
pop
lea
notb
popf
outsl
or
mov
loop
push
out
dec
scas
push
cmp
and
add
fwait
and
jbe
push
add
int
enter
push
pop
dec
cmpl
shll
iret
shll
xor
pop
xlat
push
xor
sbb
mov
cmp
push
dec
js
dec
pop
xor
in
xchg
fcoml
mov
xor
mov
aam
jl
in
rorl
xor
jle
test
stos
inc
aam
clc
pop
fcmovnu
aaa
push
icebp
mov
test
stos
mov
mulps
bound
inc
mov
pop
jecxz
xchg
rorl
enter
arpl
in
push
sbbl
mov
ljmp
cmp
and
lcall
sarl
mov
or
std
ja
in
and
outsb
adc
and
mov
subl
mov
jl
jbe
dec
movsl
adc
lods
inc
cmp
shl
xor
enter
pop
mov
mov
gs
jns
popa
in
add
lahf
andl
imulb
into
les
cmp
sub
cmc
jns
xor
jno
test
clc
inc
insl
paddusw
mov
loope
cmc
out
mov
ja
insl
cmpb
mov
mov
xor
test
or
xchg
mov
sub
dec
adc
push
inc
or
pop
inc
cmpsb
inc
dec
rcrl
adc
cs
or
inc
outsb
mov
and
sbb
popf
daa
movsl
cmpsb
cmp
mov
xchg
xor
cs
or
add
outsl
icebp
pop
testl
xlat
imul
mov
in
xchg
mov
addb
push
jb
xchg
hlt
aaa
mov
leave
add
pusha
cmp
movb
lods
cmp
jnp
daa
insb
jmp
jnp
dec
ret
sub
int
ror
pusha
ja
inc
adc
inc
rcrb
fnstcw
pop
test
dec
jl
xor
fs
imul
ja
je
movsb
rorl
xchg
and
jmp
dec
addr16
test
ret
aas
dec
mov
into
jns
icebp
mov
pop
test
ljmp
xchg
cmp
js
fsts
mov
sbb
fwait
dec
push
fcomp
jns
sar
out
xchg
fs
cs
data16
mov
pop
pop
frstor
rolb
xor
sbb
ret
ret
push
insl
dec
insb
scas
int
xor
ret
clc
fwait
loopne
inc
or
add
push
add
cmp
jae
pop
lock
push
lret
pop
mov
test
mov
xor
ret
adc
dec
jo
mov
cmpsl
decb
cltd
add
add
fldl
sbb
lahf
inc
loope
jae
insl
lcall
mov
clc
out
les
repz
sti
xchg
test
enter
jbe
pop
xor
push
cmp
mov
jg
push
add
testb
pop
dec
xchg
sub
xchg
int3
ja
ffreep
mov
pop
xchg
pop
pop
bound
inc
cs
movsl
or
std
lock
sub
xor
stc
jb
push
push
ds
bound
dec
and
fucomp
fsub
jns
xor
sahf
sbb
pop
xchg
pop
add
cmpsb
mov
add
lret
dec
mov
add
iret
shrb
or
or
cmc
cmpsb
xchg
pop
pop
in
jge
and
rep
sbb
dec
sub
imul
dec
cwtl
test
pusha
xchg
xlat
in
sarb
mov
aas
or
xor
jmp
aas
adc
pop
clc
inc
lds
sahf
pushf
test
lret
popf
pop
pop
mov
pop
in
sub
xor
incb
sub
xor
xchg
out
lret
rep
jmp
js
and
sbb
pop
mov
pusha
test
ret
mov
in
rclb
dec
pop
jo
mov
sub
mov
pop
jecxz
cwtl
test
lds
jge
ret
pop
leave
scas
jnp
sub
lret
lock
aas
mov
ss
cmp
sbb
pop
pop
pop
fmuls
and
fdivl
ret
outsb
loope
sub
lret
adc
hlt
out
mov
inc
fidivs
out
jmp
dec
jmp
add
dec
xor
mov
sbb
leave
sahf
pop
cld
mov
jecxz
out
xor
xchg
inc
pop
inc
test
push
fsubrp
and
es
xlat
sub
pushf
xchg
pop
aad
sub
dec
adc
negb
pop
mov
jbe
xor
pop
add
fisttpl
xchg
lcall
bound
push
cmc
out
imul
gs
adc
sub
mov
xchg
in
arpl
pop
mull
xchg
call
mov
or
sbb
add
daa
pop
push
jmp
add
enter
mov
lods
xor
sub
arpl
cmp
add
mov
ret
jno
pop
push
and
inc
xchg
sub
scas
jp
ljmp
inc
adc
pop
ret
aad
push
xor
and
ljmp
adc
mov
clc
inc
mov
dec
dec
outsl
push
mov
cmp
dec
scas
jae
cld
adc
shl
pop
and
imul
pop
roll
cmp
adc
mov
popa
sub
dec
out
cmp
mov
mov
in
or
fmul
add
test
mov
pop
mov
aad
in
nop
fdivrp
lds
das
aas
pop
push
fdivl
sub
bound
ret
loopne
push
sbb
dec
rcrl
mov
ret
test
or
fmuls
and
mov
pop
stos
lcall
out
loopne
push
or
vphsubbw
pop
int
mov
push
je
or
xchg
dec
sub
push
pushf
mov
pusha
inc
push
aam
lods
push
jecxz
xchg
jae
test
push
adc
inc
stc
iret
pop
and
out
insl
add
sub
inc
jns
sub
jmp
fsubp
xchg
cmpsl
pop
inc
rcr
sbb
inc
mov
xchg
sarl
inc
and
pusha
inc
js
int3
sbb
dec
dec
mov
stos
sbbl
insb
mov
xchg
rorl
mov
lahf
cltd
enter
mov
fnsave
loope
xor
jecxz
cmp
test
test
negl
lock
jb
xlat
loop
cmpsl
jnp
loop
cmp
loop
notl
sub
int
xchg
out
mov
xor
mov
inc
fiadds
dec
mov
push
mov
stos
push
imulb
xor
dec
js
fldt
jle
cmpsl
mov
jnp
push
push
mov
and
adc
push
cmc
leave
mov
out
push
jge
fs
mov
out
rcrl
sub
mov
push
stc
adc
pop
stos
push
into
mov
fiadds
in
jmp
insl
jmp
sbb
sub
js
aaa
sub
addr16
filds
scas
sub
lahf
sbb
xchg
jmp
rcll
mov
and
mov
lds
outsb
inc
xchg
mov
cmpl
call
add
push
mov
cmc
jp
and
pop
fists
fs
lcall
rcr
insb
jmp
mov
fsubp
rcll
popf
or
das
adc
les
stos
ret
inc
or
cmpsb
test
inc
pop
mov
sub
sub
pop
es
in
push
mov
leave
jecxz
inc
ucomiss
sbbb
mov
adc
pop
pop
mov
lods
jb
or
and
imul
in
icebp
dec
leave
cs
pusha
aaa
out
out
add
test
add
loopne
repz
shll
ret
gs
add
mov
add
andb
cmp
jg
test
cmp
mov
mov
incl
xchg
pusha
or
arpl
std
add
dec
pop
out
sub
mov
pop
aad
or
dec
adc
pop
mov
or
repz
sar
bound
push
shl
add
into
inc
fisubrl
rdpmc
xor
xor
jns
ficompl
sti
scas
incb
lea
bound
adc
mov
in
or
xor
pop
mov
pop
es
jbe
push
mov
mov
push
xchg
mov
mov
sahf
out
ss
punpckhwd
jb
test
dec
dec
and
jae
push
mov
jnp
lahf
out
xchg
int3
stos
rclb
into
je
mov
subb
or
ret
ljmp
out
mov
push
movsb
mov
fwait
dec
js
cli
mov
cli
jecxz
inc
pop
xor
out
leave
inc
dec
std
or
xlat
pop
cmpsb
cmc
xchg
pop
aas
outsl
aaa
mov
aad
icebp
dec
or
mov
mov
inc
push
arpl
inc
fists
sub
roll
test
call
mov
loopne
cmpxchg
inc
fldt
adc
push
mov
pushf
dec
sbb
call
dec
pop
insl
insl
stos
mov
sbb
les
or
dec
jno
cvttps2pi
push
mov
lods
ljmp
clc
cmp
les
xor
mov
cmc
xchg
xchg
jg
cmc
ja
mov
jle
dec
sub
icebp
xor
mov
push
or
lahf
pushf
in
cmpsl
cltd
mov
jnp
movl
and
jl
rcrb
pop
pop
imul
in
mov
data16
test
and
mov
xchg
test
je
cltd
jmp
push
popf
movb
jmp
jge
pop
fucom
jns
push
mov
std
dec
imul
cmp
test
fadd
jne
add
jle
push
dec
scas
mov
dec
jg
dec
adc
jp
lea
shrb
test
mov
ret
or
nop
movsl
orl
test
test
mov
or
cwtl
ss
lret
std
dec
test
jns
push
cmp
ds
add
cmp
mov
aaa
in
aas
sti
inc
loop
ret
xor
clc
lods
inc
xor
inc
cmpsl
rcll
lret
inc
cmp
ret
push
insl
rcrl
rcrl
shlb
push
add
les
out
mov
jns
sbb
icebp
xor
out
pop
pop
js
xor
test
inc
addr16
imul
add
pop
test
or
hlt
addb
jmp
jl
push
jmp
sbb
mov
mov
jno
lea
or
sbb
lea
stos
enter
mov
mov
xchg
cmp
call
mov
fadds
incl
adcl
std
mov
and
in
dec
or
sub
cmp
sahf
out
lea
in
leave
push
mov
aad
xchg
mov
and
lds
xchg
sbb
lret
test
jg
mov
pop
std
sub
sbb
out
or
neg
push
loop
xor
dec
pop
cmp
aas
xchg
ficoml
lds
enter
jbe
xchg
loope
in
mov
or
aad
pop
xor
mov
mov
cmp
inc
fnstenv
arpl
inc
sti
push
and
aaa
ljmp
outsl
jecxz
mov
sbb
in
push
dec
jmp
adc
jp
pop
pushf
lret
std
or
cmp
add
sbb
scas
lea
call
pop
sbb
xchg
in
mov
outsl
js
iret
cmc
and
cmpsl
jg
sbb
and
popa
pop
orl
fcomps
into
mov
push
lea
adc
push
jns
lock
ljmp
push
cmp
lds
mov
push
sbb
repz
xchg
xor
mov
mov
mov
test
or
add
mov
or
pmaxub
cs
shlb
jae
mov
addr16
mov
pop
inc
adc
into
sbb
stos
movl
test
sbb
lea
idiv
inc
mov
out
pushf
and
and
jae
addps
xchg
fs
out
pop
int3
sti
int3
fcoms
sbb
das
push
dec
mov
in
loope
jp
sti
mov
jne
loop
mov
cmp
push
out
or
push
sub
push
sub
xchg
mov
adc
or
mov
xchg
adc
leave
xchg
cmp
mov
push
xchg
push
lods
sbb
pop
jg
adc
dec
cmpsb
pop
cmpsb
notb
push
pushf
add
subl
xor
sbb
xor
stos
aad
xlat
lea
adc
das
jmp
out
sub
lret
addr16
fcompl
inc
orl
mov
jg
push
subl
sbb
test
dec
lds
cmp
adc
shll
mov
xchg
rclb
jecxz
sbb
cmp
andl
stos
leave
jmp
jg
push
lods
stos
dec
int3
pop
ret
inc
insb
adc
lret
mov
and
jle
push
cmpsl
add
aad
xor
shll
mov
loop
stos
add
dec
add
aaa
sub
push
call
jbe,pt
loop
insb
sbb
adc
jmp
xchg
movsl
adc
hlt
sub
lock
cld
and
loopne
movb
adc
nop
jns
outsb
mov
pop
stc
cld
fbstp
fildl
xchg
pop
and
aam
cmp
popf
cld
test
sub
movsb
inc
scas
add
or
js
pop
mov
aaa
adc
pop
xchg
les
xchg
fcmovnu
fstpl
pop
cld
push
push
lods
adc
push
pushf
xchg
test
jmp
aaa
mov
sbb
cmp
aaa
cmp
sahf
dec
leave
lcall
cwtl
stos
je
test
inc
daa
in
and
xlat
xchg
outsb
pop
dec
gs
cmpsl
or
outsl
inc
sahf
xchg
sub
inc
psubq
bound
pop
xchg
or
mov
dec
mov
jle
pop
fisttps
insb
add
sbb
lahf
loope
and
scas
mov
mov
stos
call
sub
test
popa
push
frstor
ffree
das
mov
jne
ja
hlt
sub
xchg
push
and
stos
out
xchg
mov
mov
loopne
insl
orl
adc
pop
stos
or
subl
xorb
adc
fsubr
pop
and
add
or
out
jl
mov
into
aas
or
in
rorb
outsl
ja
movsb
xor
aas
ss
cmp
inc
mov
mov
lahf
testb
lods
fwait
rcrl
cmp
adc
mov
insl
cmc
mov
pop
hlt
in
add
dec
mov
and
push
fs
lods
subl
sahf
hlt
mov
push
push
jns
cltd
int3
pop
push
int3
mov
adcb
pushl
xor
cli
outsl
aad
mov
push
incb
movsb
shll
in
pop
pop
fdivl
jne
cmp
mov
scas
ss
and
sbb
jg
movsb
sbb
icebp
repnz
mov
push
or
add
inc
adc
dec
and
fildll
jns
lcall
fwait
int
push
jae
leave
jl
push
inc
loope
pop
fwait
aam
aas
scas
mov
pop
dec
add
jg
data16
mov
or
in
in
mov
inc
subl
or
adc
xchg
cmpsl
xchg
jno
aam
dec
adc
dec
sbb
sub
aad
dec
and
inc
hlt
ja
add
mov
pop
sub
int3
dec
fildll
or
jmp
sbb
shll
into
mov
std
dec
cmpsb
add
fcompl
mov
insb
repz
sahf
and
adc
das
add
and
adc
cmpsb
lcall
cltd
rorl
addr16
mov
loop
mov
test
aaa
mov
jle,pn
out
repnz
mov
inc
mov
pusha
aas
and
add
xchg
adc
loopne
fprem1
jle
ljmp
aam
out
jo,pt
enter
sub
out
lea
jg
sbb
js
pushl
xchg
lods
pop
sub
cmpsl
push
dec
addr16
enter
mov
mov
aad
ljmp
ja
add
test
adc
fwait
jmp
dec
mov
sub
test
sbb
push
jbe
push
imul
out
add
adc
cltd
mov
jo
int3
xor
ljmp
jno
sub
push
mov
int3
sbb
xchg
mov
sub
pusha
fisubrs
sbb
shrb
sbb
stos
jne
pop
movsl
repnz
ljmp
jnp
xchg
lcall
sahf
call
pop
fwait
test
adc
add
cmp
fisubs
roll
add
jge
jmp
ret
pushf
jae
out
mov
sbb
std
ret
jle
cltd
pop
mov
insl
xchg
jb
dec
std
mov
add
add
xchg
ret
ja
push
sbb
push
movl
inc
pop
js
iret
ret
mov
mov
sahf
outsb
enter
push
mov
inc
movsl
lcall
push
jge
das
popa
out
shll
outsl
outsb
dec
bound
mov
push
out
cli
aaa
cmp
sar
xchg
movsl
jb
cmp
inc
push
push
mov
jecxz
mov
test
das
cmp
clc
lds
dec
scas
stos
xchg
out
ret
lcall
and
sti
xchg
cli
or
lret
divb
or
cmpsl
cmc
lds
jae
sub
shrb
jl
or
sahf
mov
inc
les
mov
mov
and
dec
xchg
sub
loopne
mov
push
add
loop
js
jne
jmp
lock
mov
cmpsb
xor
in
dec
cmp
dec
test
stos
fmuls
fs
sbb
sahf
push
inc
iret
test
xor
inc
xor
repz
rolb
mov
push
add
loope
jbe
out
jle
xchg
lcall
adc
stc
stos
mov
scas
xchg
adc
arpl
faddp
bound
push
dec
stos
in
sub
iret
mov
jmp
cmp
mov
ja
in
mov
lods
push
xchg
rcrb
dec
lea
aaa
movsl
aaa
jae
mov
cmp
adc
scas
inc
call
cmp
add
mov
icebp
gs
and
mov
daa
daa
dec
cmp
lahf
fiadds
ficoms
jmp
add
sbb
imul
outsb
xorb
and
push
mov
inc
xchg
pop
je
xchg
inc
cmp
rcrb
mov
into
repnz
jb
jg
ja
out
js
orl
rcrb
push
in
xchg
mov
js
push
push
pushf
xor
sub
mov
cli
sub
maskmovq
notl
imul
out
test
add
scas
inc
mov
movsb
fucomp
hlt
inc
pop
gs
js
jnp
cmc
arpl
repnz
inc
push
popl
mov
mov
add
dec
push
or
mov
mov
fwait
insl
mov
lret
test
cmpsl
in
or
pop
cs
mov
pop
popl
cmp
jmp
sub
sti
fisubrs
test
rorb
inc
lret
sub
mov
mov
cmp
icebp
call
imull
push
dec
jle
aaa
in
mov
aam
rorl
jmp
lock
jp
loopne
xchg
xor
jmp
jle
sub
mov
cmp
outsb
dec
lahf
std
mov
cmpsb
fwait
sub
jl
out
xchg
push
push
lods
into
push
dec
ss
sub
das
frstor
and
out
xor
mov
xchg
jmp
pslld
cmc
les
xor
sbb
loopne
cmpsb
adc
out
movsl
arpl
into
xor
jo
sub
loope
ljmp
imul
pop
sbb
and
inc
arpl
jle
xor
sub
sbb
add
fldenv
subb
mov
jns
pop
jmp
inc
dec
mov
adc
testl
cmp
xlat
lcall
das
les
xchg
arpl
push
xlat
sbb
test
pop
in
lret
jle
scas
enter
test
mov
xchg
jg
sub
pop
pop
ljmp
jmp
jmp
or
cmc
cmp
ljmp
jbe
push
imul
addl
push
push
add
or
ljmp
xchg
or
add
loope
jmp
fildll
fadds
mov
add
lds
scas
lods
je
dec
jns
sub
mov
ja
adc
rcr
js
add
xchg
loopne
fcoml
jecxz
in
xor
fscale
clc
jno
sub
cmp
mov
pop
cmc
jl
adc
sub
or
mov
mov
jbe,pt
xchg
mov
cld
push
lahf
sti
les
sarl
and
lea
add
movzbl
dec
mov
xor
inc
inc
inc
mov
sub
movzwl
imul
and
mov
dec
mov
dec
jne
movzbl
mov
mov
add
mov
dec
pop
mov
dec
pop
add
add
pop
inc
mov
inc
imul
mov
mov
dec
dec
mov
add
ret
push
dec
dec
movzbl
mov
inc
mov
imul
add
push
push
push
push
inc
lea
mov
push
mov
or
mov
imul
dec
lea
mov
sub
mov
mov
mov
push
imul
mov
xor
add
mov
push
dec
inc
push
lea
add
pushl
dec
call
inc
add
dec
add
sub
mov
mov
dec
mov
pop
ret
dec
inc
dec
dec
and
movzwl
mov
inc
mov
lea
inc
cmp
jb
dec
xor
add
lea
and
dec
lea
lea
mov
inc
inc
dec
inc
xor
dec
and
xor
dec
dec
pop
add
movswl
test
jbe
dec
or
imul
dec
lea
or
dec
sub
mov
imul
inc
inc
dec
imul
sub
lea
dec
inc
mov
inc
lea
xor
mov
add
and
add
sub
mov
dec
inc
movzbl
mov
inc
add
lea
inc
and
add
sub
mov
mov
inc
mov
dec
imul
mov
xor
movsbl
mov
inc
lea
add
lea
lea
dec
jne
sub
mov
mov
xor
add
add
imul
imul
mov
xor
mov
dec
mov
dec
inc
mov
or
mov
mov
and
imul
mov
inc
dec
test
jbe
inc
lea
mov
sub
lea
mov
inc
dec
dec
imul
inc
dec
mov
add
dec
inc
dec
add
inc
inc
imul
mov
and
dec
mov
mov
imul
add
movzbl
inc
imul
add
dec
mov
and
imul
lea
mov
movswl
lea
movzbl
dec
xor
mov
imul
and
mov
and
mov
movzbl
mov
dec
add
lea
jmp
inc
push
lea
imul
push
and
call
pop
ret
push
imul
mov
inc
or
mov
add
lea
xor
inc
dec
sub
sub
add
sub
imul
add
inc
and
inc
lea
inc
inc
xor
imul
inc
cmp
je
call
call
call
call
lea
inc
dec
add
dec
inc
imul
xor
and
imul
xor
dec
mov
lea
inc
mov
imul
movzwl
and
dec
xor
add
and
pop
sub
ret
push
add
push
mov
imul
push
and
push
sub
push
add
add
push
sub
call
inc
push
dec
dec
xor
dec
lea
mov
mov
lea
imul
mov
mov
inc
test
je
mov
movsbl
imul
dec
and
lea
add
dec
dec
mov
or
mov
dec
dec
xor
sub
inc
inc
repnz
mov
dec
add
inc
jmp
push
mov
mov
lea
inc
dec
inc
dec
or
dec
mov
mov
dec
sub
add
lea
call
add
sub
mov
inc
lea
or
lea
dec
mov
mov
add
dec
sub
lea
sub
dec
and
lea
call
dec
add
call
xor
dec
mov
imul
mov
inc
mov
or
call
sub
push
mov
or
sub
mov
xor
imul
add
inc
sub
dec
imul
lea
add
movzwl
call
mov
mov
lea
inc
add
add
add
mov
lea
pop
add
inc
add
add
mov
pop
mov
mov
pop
add
sub
add
add
pop
lea
dec
mov
inc
mov
inc
dec
or
pop
xor
dec
pop
imul
dec
mov
mov
inc
call
mov
inc
dec
mov
ret
add
sub
push
inc
lea
push
sub
imul
push
inc
inc
push
mov
dec
push
inc
movsbl
mov
and
xor
push
and
ret
push
add
dec
inc
dec
jmp
jmp
add
lea
sub
dec
dec
lea
mov
sub
mov
mov
imul
inc
pop
pop
ret
push
lea
xor
add
imul
push
add
inc
push
sub
dec
push
movswl
and
push
add
call
pop
ret
sub
mov
mov
sub
add
mov
xor
inc
mov
mov
imul
mov
mov
mov
xor
inc
mov
mov
inc
sub
inc
or
dec
movsbl
dec
inc
add
cmp
jb
mov
push
sub
sub
mov
dec
dec
push
mov
dec
push
lea
or
xor
mov
sub
xor
imul
mov
xor
inc
mov
push
or
dec
xor
lea
dec
mov
xor
dec
mov
inc
dec
movzbl
inc
xor
add
add
inc
dec
add
sub
inc
movzbl
inc
dec
mov
add
dec
lea
xor
sub
inc
dec
mov
or
sub
dec
lea
inc
cmp
jb
dec
xor
sub
xor
mov
sub
inc
mov
lea
jmp
push
adc
mul
adc
cltd
test
stc
push
repz
xchg
mov
jl
cltd
sub
add
jae
adc
sti
push
outsb
pop
xchg
add
xor
insb
xchg
mov
test
mov
add
fcmovb
jnp
inc
xchg
je
xor
dec
out
ret
pop
dec
jmp
decl
pop
ss
cmp
data16
shlb
mov
jo
cmp
pop
fstp
jge
xlat
arpl
cmpsb
jp
sub
xchg
push
dec
je
and
fldcw
ret
jmp
mov
xchg
in
pusha
jg
mov
gs
mov
fdiv
cld
fs
pop
xor
push
aam
sub
cmpsb
subl
outsl
cmpsb
add
stos
pop
enter
mov
pop
cmp
mov
jmp
loope
iret
cli
xchg
jp
cmc
popa
mov
pop
sti
mov
jge
mov
sub
adc
idiv
cmp
fstl
jmp
jp
aaa
xor
or
sbb
cmp
in
jbe
push
clc
mov
sub
aas
loope
add
jg
xor
movsl
xor
cmpsl
out
and
mov
xor
sbb
cmp
mov
adc
push
jns
sbb
mov
xorl
mov
es
jne
out
jns
cld
aas
leave
mov
mov
into
lods
cmpb
out
mov
mov
mov
dec
xlat
jne
pushl
push
nop
push
cmp
lods
adc
push
lods
add
insl
cld
fidivl
and
ja
in
cmp
push
mov
int3
and
sub
inc
addr16
test
mov
fnstenv
mov
pop
and
cld
inc
in
scas
sub
movsb
xlat
ds
aas
int3
mov
cmp
pop
jg
push
inc
cmp
dec
arpl
daa
sti
adc
sub
cltd
xor
popa
fsubs
mov
adcb
add
ficoms
movhps
into
jnp
cmp
or
and
aad
pop
adc
mov
mov
mov
leave
divl
rolb
mov
aad
mov
lcall
dec
push
ret
dec
cmp
adc
movq
sahf
and
mov
repz
mov
cmp
inc
jecxz
stc
sub
movsl
loopne
ljmp
lds
inc
int3
cs
jle
mov
jae
stos
movsb
insl
mov
inc
pop
mov
gs
sahf
jns
out
inc
adc
out
xchg
cltd
xchg
and
ljmp
or
xchg
mov
xchg
popa
mov
mov
stos
outsb
sub
cmpb
lods
sub
dec
pusha
rolb
cmp
and
shlb
fs
xor
pop
xchg
iret
arpl
inc
adc
cmp
lahf
shll
jg
xor
mov
mov
mov
sbb
fbld
out
scas
dec
mov
dec
jae
jl
arpl
pop
and
into
hlt
or
sub
push
cld
inc
out
and
das
fsubrp
xchg
cmp
mov
movsl
pusha
add
arpl
pop
in
nop
pop
outsl
xor
pop
pop
add
adc
sub
std
ja
sub
and
cmp
mov
insl
adc
nop
bound
xchg
testl
jnp
pop
lret
fisubrs
jb
jecxz
lods
shlb
rcr
pop
sbb
push
repz
push
jno
repz
inc
shr
stos
push
movsl
jae
push
mov
subb
dec
pop
dec
out
and
es
sarl
aaa
jp
aad
mov
pop
icebp
cmp
loopne
ret
inc
insl
jo
push
idivl
outsl
push
mov
inc
pop
xchg
scas
or
lds
xchg
ss
push
mov
mov
pop
adc
outsb
loopne
push
inc
mov
shr
or
setne
loop
mov
or
mov
das
fdivp
mov
xorl
jmp
inc
jnp
outsb
fnsave
sbb
hlt
imul
lods
adc
sub
dec
movsb
push
and
gs
aas
scas
xor
idiv
sbb
sbb
cmp
or
inc
or
jl
arpl
mov
lock
sub
mov
lds
icebp
mov
jns
sub
icebp
std
xor
lret
inc
push
add
cwtl
cmpsl
jae
ja
nop
and
push
bound
cmp
dec
mov
jl
test
add
mov
mov
push
adc
fcoms
sub
ret
clc
add
js
xor
or
out
fsubs
push
sub
inc
xlat
sub
scas
fisubs
and
push
add
pop
movsl
sarl
dec
mov
jmp
aam
sbb
mov
sub
mov
inc
adc
mov
pop
les
xor
lahf
cmpsl
cltd
xchg
dec
mov
je
gs
pop
lcall
lock
out
enter
dec
inc
cmp
and
lock
in
jle
aad
mov
rorl
pop
mov
or
imul
inc
sbb
push
test
das
fimuls
pop
loopne
stc
mov
xchg
inc
jbe
rcl
scas
sbb
ficoms
push
pop
dec
fs
dec
and
cmc
pop
adc
push
cmp
leave
je
push
adc
int3
aaa
xchg
add
cmp
cld
lods
adc
lret
aad
outsb
cwtl
movsb
add
cwtl
jns
shll
dec
add
jns
adc
jp
jle
rorb
add
xor
inc
jo
xor
dec
or
lea
adcl
jl
mov
cwtl
daa
pusha
cmpb
mov
stos
lods
fsubp
jo
cmp
mov
cmp
dec
xor
fisttps
jl
lds
call
ficompl
adc
pop
mov
les
jl
dec
arpl
orl
xlat
xor
sub
test
dec
sti
in
orb
jae
mov
aaa
mov
fldt
mov
cmp
add
das
outsl
and
xor
mov
bound
mov
mov
sbb
xor
mov
xchg
adc
or
jae
jo
cmc
sub
add
inc
leave
xor
dec
adc
pushf
xchg
jno
loopne
fidivs
pop
fsubrs
jns
subb
fimull
or
cmp
xchg
sarb
lret
and
lock
dec
aaa
pop
pop
test
movsl
jne
lock
cmpsb
les
add
mov
lods
sbb
adc
pop
xchg
dec
jo
movsl
jle
pop
push
mov
loopne
xorb
add
mov
xchg
adc
pop
sub
iret
movsb
gs
mov
dec
push
repnz
or
mov
xchg
js
mov
lret
sub
jb
mov
mov
dec
dec
fnstenv
mov
test
adc
pop
and
mov
xchg
inc
cmpsb
mov
mov
jl
inc
int
mov
sbb
outsl
pop
mov
lds
pop
push
unpcklps
mov
sub
mov
ror
loop
popf
out
and
mov
shr
mov
xchg
pop
arpl
arpl
inc
push
fsubrs
sbbb
data16
mov
test
mov
jo
jge
outsb
cld
adc
out
mov
sbb
xchg
out
sub
gs
into
mov
mov
int3
in
sub
sbb
les
and
push
sbb
out
xchg
dec
push
cmp
or
pop
repnz
pop
inc
mov
inc
mov
addr16
sarb
fwait
jb
mov
pusha
adcb
jl
push
test
mov
sub
mov
pop
mov
rcr
in
sbb
scas
xor
mov
das
lret
jecxz
sub
sub
add
push
inc
adc
aam
loope
sbb
in
rolb
sub
sbb
rorl
lods
xchg
dec
dec
jmp
mov
push
fwait
lcall
into
xchg
cmp
leave
xchg
and
jno
leave
inc
sbb
xor
popa
mov
cmc
sbb
mov
leave
dec
mov
cmpsl
mov
into
and
mov
push
stos
adc
bound
or
xor
jnp
mov
in
jl
into
jge
scas
dec
icebp
leave
add
pop
test
jmp
mov
add
lea
js
inc
repz
movsb
xchg
adc
repnz
inc
mov
lcall
popa
sub
mov
aad
lcall
mov
mov
test
fsubrs
push
jmp
cmpsb
adcl
inc
rcll
lds
pop
pop
sub
sub
cmp
cmp
shrl
sub
jl
mov
xor
jp
ds
test
mov
and
sbb
ret
dec
insl
jb
adc
sti
cli
divb
jnp
fcmovne
inc
push
aam
aaa
jns
mov
fs
cld
lods
arpl
clc
jle
xchg
mov
pop
lret
push
imul
add
cmpsl
jns
out
adc
fistpll
mov
and
bnd
adc
push
jnp
xor
into
fbld
sbbl
xchg
pop
into
ds
push
cltd
sub
imul
sbbb
fldt
mov
scas
mov
xlat
icebp
fcmovnu
dec
jne
ret
js
rcl
and
mov
sahf
xor
jne
jnp
mov
sub
xchg
movsb
ss
mov
fs
or
sub
add
stos
mov
sub
pop
repnz
jno
and
mov
or
mov
xchg
nop
rcr
mov
aaa
jp
sub
test
int
adc
pop
pop
fsubrl
fdivrl
fsubrl
dec
rcrb
dec
mov
sbb
mov
arpl
movsl
mov
xlat
xchg
gs
mov
mov
pusha
jae
aaa
mov
inc
sub
test
mov
out
lods
push
adc
sub
fsubs
mov
loop
adc
xchg
ficompl
dec
dec
jp
add
mov
or
adc
leave
mov
shlb
hlt
jmp
jge
pop
add
pop
gs
cmp
lock
pop
cmp
or
jp
pop
jno
adc
idivb
mov
pop
cmp
addr16
jle
iretw
in
sbb
ret
int
xor
bound
jg
xchg
stos
sbb
aaa
xchg
fistpll
adc
and
das
addl
inc
outsl
enter
mov
fmul
xor
test
jle
andb
out
vmovhps
pop
nop
movsl
sahf
mov
rcrb
sbb
sub
rcr
fisttpll
mov
bound
push
fidivrs
fisubs
shll
push
mov
shll
mov
dec
jge,pt
ds
add
lret
pop
sbb
push
dec
adc
xchg
call
hlt
lret
mov
xor
fs
arpl
outsl
mov
jle
movsb
insb
cltd
out
dec
xchg
push
mov
cmpl
cmpsb
pop
repz
dec
insl
add
and
and
pop
test
jle
mov
adc
jp
sbb
js
outsl
add
push
and
adc
push
sub
jno
mov
test
repnz
loopne
push
subl
dec
sub
push
sbb
addl
stos
pop
loope
or
inc
dec
add
and
out
rcl
call
sbb
mov
loope
push
pop
mov
sahf
cltd
jbe
cmp
mov
mull
in
cld
sbb
or
or
clc
popa
xchg
hlt
and
and
xchg
test
mov
mov
lcall
xorl
adc
pop
add
ss
cmpsb
ljmp
sub
dec
add
aam
roll
jle
jge
push
xchg
cld
fstpt
out
in
xor
and
or
clc
fwait
xor
pop
mov
and
mov
inc
xor
cmp
fwait
incb
out
xchg
xchg
je
fst
or
lods
rolb
iret
clc
push
lret
push
jns
xchg
xchg
rep
decl
hlt
test
test
jb
inc
or
pop
mov
aad
xchg
cmp
mov
leave
bound
scas
inc
les
dec
xchg
ja
mov
adc
dec
add
mov
fmuls
loope
sub
push
cmc
xor
out
jmp
test
fsubr
js
nop
jmp
push
fdivrl
shll
fs
push
mov
hlt
aam
pop
lcall
xor
push
xor
xchg
or
stos
insb
ds
cld
loop
or
adcb
call
xchg
dec
inc
mov
scas
stos
aaa
addr16
ja
rorl
fdivr
mov
and
repz
sub
cmp
inc
xchg
sarl
pop
leave
xor
lret
imul
mov
fwait
xor
mov
pop
in
fwait
aad
imul
sti
aam
jp
test
lock
cli
pushf
leave
jae
ror
into
mov
add
push
ljmp
xchg
pop
pop
out
adc
fstps
jecxz
lds
inc
jp
test
mov
mov
pop
call
shrl
stos
mov
lret
mov
pop
fwait
cmp
into
pop
nop
ret
pop
push
std
add
mov
mov
imul
add
pop
pop
aad
push
adc
xchg
and
inc
pop
rolb
orl
rol
enter
mov
push
sub
mov
sbb
je
mov
sbb
cs
pushf
call
pop
sub
outsl
and
test
mov
dec
loopne
mov
fisttpl
push
jne
push
mov
inc
push
mov
xor
aam
icebp
out
xchg
dec
jbe
into
jbe
shrb
dec
orb
push
add
mov
imul
cmc
nop
loope
adc
cmp
cld
sbb
add
xor
out
scas
das
hlt
inc
sbb
cmp
in
pop
enter
ds
negl
mov
mov
mov
lret
push
sub
lock
je
xor
bound
or
ret
sub
adc
jae
xchg
int
js
fisubl
nop
xor
cltd
daa
jns
rorb
lahf
sbb
push
push
or
rolb
inc
je
pop
std
insl
enter
aad
xor
xlat
push
xor
sub
iret
xchg
std
movsb
xor
add
xlat
sbb
xchg
sbb
mov
xor
sbb
sbb
loopne
add
mov
xchg
xor
inc
add
mov
mov
dec
mov
repz
sub
jae
shl
lcall
insl
xor
xor
fs
xchg
and
cs
gs
js
out
out
sarl
or
es
pop
xchg
mov
jno
or
cltd
xchg
test
pusha
adc
jne
dec
repz
sti
lock
pop
mov
sbb
adc
pop
cmpsl
sbb
adc
inc
fisttpll
cmp
ss
lods
jne
enter
jnp
cmp
and
dec
cwtl
iret
lock
jb
sub
lcall
adc
pop
fsubrp
push
movsb
cs
outsb
mov
or
xchg
push
push
leave
in
leave
and
inc
inc
in
push
testb
mov
push
jne
pop
subb
out
frstor
repnz
push
or
ljmp
pusha
push
ret
dec
push
dec
or
jbe
cli
sbb
jbe
xchg
push
sub
pop
in
jecxz
je
out
mov
push
xor
leave
xor
mov
stc
cs
or
into
cmc
enter
inc
scas
pop
or
fnsave
jbe
test
sub
sbb
jns
cld
xor
jne
and
cltd
outsb
jmp
push
fwait
mov
fsubs
fcoml
push
jp
xchg
push
mov
jg
push
dec
cld
mov
mov
imull
in
jno
push
leave
loope
cmpsl
push
push
aad
mov
cld
add
outsb
fmul
js
mov
cmp
or
dec
cmpsl
inc
cmp
inc
jns
jg
je
enter
jmp
lds
cmp
shrl
iret
dec
mov
xor
mov
mov
xchg
pop
inc
mov
in
sub
mov
xor
test
pop
repz
sub
mov
xchg
mov
ss
fisttpll
jae
fadds
imul
push
mov
stos
xchg
pop
dec
std
push
dec
out
and
in
inc
pushf
test
xchg
inc
add
stc
insb
subl
ja,pn
lahf
mov
cmc
mov
fistl
dec
out
pop
adc
popa
in
or
jecxz
xchg
or
loopne
dec
ja
mov
xchg
loopne
imul
adc
xor
popa
imul
test
leave
cmp
pop
sub
stos
fildll
push
or
sysret
outsl
pop
jne
fiaddl
ds
ret
mov
xor
mov
jne
xchg
shlb
cltd
mov
xchg
cmpsl
or
insb
ret
push
xlat
adc
orb
push
nop
sbb
int3
comiss
roll
sub
sahf
mov
lret
cwtl
add
pop
mov
sahf
mov
mov
sbb
hlt
int
or
xor
pop
adc
push
insb
fidivl
das
pop
bound
dec
fstpl
out
push
or
and
scas
lds
shll
cmp
mov
push
push
or
cltd
out
insl
data16
sbb
cwtl
mov
dec
pusha
dec
fs
pop
add
inc
movsb
icebp
test
in
sahf
push
pop
xor
and
cmpsb
pop
fmull
and
lock
popf
lods
lods
push
and
leave
and
dec
sub
xor
pop
and
and
xchg
or
jae
inc
sub
test
pushf
stos
fdivs
in
pop
popf
mov
arpl
jp
scas
cs
push
lret
cltd
mov
xor
mov
xorb
dec
repz
mov
push
cmp
ss
lret
xchg
sub
cmp
imul
cmpsl
rolb
or
aad
aaa
inc
jg
lock
test
pop
mov
dec
mov
ds
inc
movsb
sti
ljmp
das
mov
push
push
popa
xor
xor
mov
xchg
or
in
int
rcrb
xchg
inc
xchg
push
ror
lods
xchg
push
dec
das
xchg
fiadds
shl
pushf
in
dec
outsb
cmpsl
addr16
jmp
sub
shl
pop
sub
call
inc
push
dec
cmp
sub
out
xor
arpl
jns
mov
lea
outsl
sub
dec
movsb
mov
fdivs
inc
test
add
push
into
push
fadds
jle
xor
push
std
in
movsb
jg
loope
inc
add
push
lea
fcomp
ss
out
mov
cs
xchg
mov
lods
mov
push
jmp
das
xorb
xchg
inc
cmp
call
add
or
adc
push
and
mov
shl
mulb
rcl
ficoms
inc
cmpl
into
aam
xchg
faddl
sub
mov
dec
scas
mov
pop
mov
int3
dec
popf
xchg
jnp
lret
movsl
mov
imul
fnstsw
insl
int3
lods
call
shlb
jo
bound
loopne
mov
cmp
and
cmp
jno
jbe
dec
push
jb
or
pop
add
inc
adc
fmull
add
and
stos
insb
movsb
jg
and
cmp
or
dec
adc
sbb
mov
addr16
fdiv
test
inc
addl
mov
or
int3
pop
into
ret
jne
mov
cmp
das
add
jb
call
jg
push
aas
mov
xchg
lcall
fadd
inc
inc
repnz
lods
into
xor
xchg
es
cmc
int3
out
fstl
data16
int
aaa
push
push
movntps
imul
pop
jge
test
rcl
cmp
je
adc
xchg
mov
andb
mov
xchg
daa
jp
insb
add
je
out
inc
sbb
rcr
sbb
repnz
lcall
clc
jp
dec
sub
cltd
call
popf
ret
cltd
dec
es
pushf
dec
in
xchg
add
lods
mov
aaa
mov
daa
pop
pop
mov
inc
xchg
aaa
mov
cmc
rcll
xchg
and
adc
add
adc
loop
or
mov
mov
lcall
fs
clc
out
lea
shl
jae
mov
sbb
pusha
and
mov
mov
fdivs
stos
loopne
fwait
jno
fimuls
inc
lret
ror
push
movsb
pop
cmpb
lods
mov
or
add
push
mov
xchg
adc
push
in
pushf
outsb
xor
ret
sbb
fnsave
pop
nop
mov
into
cltd
xor
fcompl
and
out
sub
sub
pop
jno
mov
mov
ret
lods
addl
adcb
or
jge
dec
orl
jne
push
inc
mov
movsb
jl
inc
jle
movsl
loopne
push
or
aad
scas
push
dec
inc
stos
dec
jp
bound
push
outsb
dec
test
mov
mov
imul
shll
ss
repz
repz
mov
test
cmp
andl
aas
jmp
in
cmp
push
or
and
popf
fidivs
mov
mov
and
cmp
xlat
lea
lret
xchg
push
pop
mov
into
mov
jge
and
xchg
xchg
xor
inc
mov
dec
push
xchg
xchg
jp
mov
mov
jmp
adc
enter
push
pop
adc
dec
or
cs
xor
pushf
stos
outsb
sub
fs
call
mov
cmp
adc
repnz
ss
lret
aas
push
mov
repz
sub
popa
inc
out
std
sub
loop
lock
cwtl
jmp
inc
sub
loop
xor
jne
sbb
rcrl
shlb
out
and
inc
movsl
lret
xchg
sub
jo
mov
cld
das
push
xchg
adc
push
out
mov
rcrw
inc
push
daa
fwait
push
es
into
aas
lods
out
jp
enter
scas
sub
sbb
fdivl
fs
xchg
icebp
ljmp
je
jnp
mov
scas
in
sarl
sub
loope
sti
dec
mov
inc
mov
xchg
push
push
mov
outsb
js
sub
push
cmp
or
jns
xchg
inc
mov
iret
jnp
jg
inc
test
hlt
in
and
mov
mov
test
imul
add
lock
out
or
shl
ds
push
nop
add
aaa
xor
iret
lods
sbb
aas
dec
ja
lcall
and
adc
leave
es
ds
das
mov
cmp
es
pop
out
cmp
pop
fistpll
sbb
gs
aas
mov
cmp
enter
inc
rcr
nop
xchg
pop
xchg
push
es
jge
sbb
pop
call
repnz
sbb
repnz
jae
sbb
scas
and
scas
mov
sub
adc
jg
ljmp
enter
iret
or
sahf
push
enter
cmp
sub
gs
fisubs
mov
scas
lods
push
icebp
jl
fiadds
stc
out
stos
mov
fwait
sbb
mov
mov
pop
mov
add
and
sbb
repz
leave
inc
mov
addr16
lock
shl
inc
inc
jbe
mov
xchg
inc
xchg
imulb
test
mov
scas
push
adc
sbb
lcall
add
filds
mov
xchg
mov
cmc
adc
mov
xor
movsb
pop
jns
std
dec
mov
push
scas
jae
push
sbb
addr16
or
push
stc
and
cld
dec
and
mov
add
scas
mov
das
out
jl
repz
fidivs
xchg
mov
and
inc
jmp
imul
push
test
push
hlt
inc
imul
shll
mov
out
adc
cltd
repz
cmp
sbb
jnp
sbb
xor
push
dec
jle
jle
sbb
jo
push
mov
lea
xchg
cld
shr
mov
scas
sbb
xchg
lods
shll
in
out
push
jmp
ss
outsb
iret
push
add
adc
xchg
dec
dec
jmp
or
mov
repnz
leave
sub
sbb
pushf
push
es
xchg
jle
shlb
dec
mov
divl
mov
test
cmpsb
stc
imul
clc
cmp
push
adc
adc
in
lods
loopne
pop
xlat
dec
in
lret
addr16
dec
or
push
add
xchg
out
push
push
roll
cwtl
popa
xor
mov
mov
xchg
fwait
popf
pop
test
and
lods
lcall
sub
js
and
lret
rcll
sbb
mov
fwait
insl
clc
mov
push
sahf
mov
cltd
pop
jno
jnp
fs
push
push
pop
sub
loop
movsl
out
xchg
fs
daa
sub
inc
sbb
imul
shlb
adc
leave
insl
movsl
sbb
and
mov
cld
in
adc
mov
lea
push
jecxz
push
cmp
push
out
jle
pop
fsubr
or
jle
ret
xor
push
xlat
insl
shlb
scas
mov
lds
daa
jb
mov
mov
stos
rcl
test
shll
cli
ret
push
cmp
lcall
or
dec
mov
lock
dec
xrelease
movl
and
mov
aaa
push
sbb
stos
in
int3
aaa
icebp
mov
imul
cmp
js
scas
xorb
into
xchg
inc
push
rol
pop
lods
inc
sub
xor
scas
popf
jnp
clc
jnp
push
and
add
into
ret
jp
pop
mov
jg
fcoml
negb
xor
mov
and
fistpl
pop
cwtl
loope
dec
dec
mov
or
jo
loope
jecxz
js
xchg
imul
pop
sbb
mov
fwait
mov
mov
std
lods
pop
push
les
push
mov
sbb
adc
nop
sub
iret
jo
scas
inc
add
xchg
jmp
cld
sbb
mov
sub
in
jb
cmc
mov
out
mov
dec
cs
jle
ljmp
jp
aas
sbb
test
lret
and
mov
out
and
sbb
insl
cld
aad
scas
cli
push
sbb
ret
pop
add
fisttpl
cmp
mov
call
mov
sub
or
jle
mov
pop
jo
jno
ret
test
icebp
aad
sbb
mul
xor
lahf
push
dec
xchg
lret
mov
sti
js
cmp
lods
or
repnz
imul
jo
mov
cltd
addl
ss
imul
imul
icebp
loopne
adc
ja
push
sahf
or
xor
nop
mov
adc
stc
aad
ja
and
mov
cld
loop
mov
sbb
mov
popf
test
scas
ljmp
cmpsl
jg
ss
mov
mov
cmpsb
mov
aas
cmpsb
xchg
xchg
cltd
pop
insb
add
in
les
iret
cltd
enter
or
int3
and
jmp
rorb
fistl
testb
jl
das
fnstenv
mov
mulb
cmpsb
xchg
aad
les
adc
adc
gs
push
pop
cltd
cmp
pop
or
inc
lcall
jg
test
mov
loop
push
sub
adc
dec
cmpsl
jb
outsb
jne
mov
inc
xchg
mov
mov
inc
bound
enter
mov
jle
lret
movsb
pushf
les
loopne
aad
push
inc
hlt
adc
repnz
add
inc
sahf
pop
hlt
xchg
jg
sbbl
in
jmp
mov
hlt
pop
lea
out
cmp
addr16
mov
pop
push
outsb
roll
in
lods
gs
imul
ret
out
lcall
pop
pop
pop
xchg
addb
pop
movsb
pop
imulb
inc
inc
xlat
adc
push
popa
mov
mov
hlt
js
stc
cmpb
es
cmp
stc
inc
mov
dec
cmpsl
jb
push
fmuls
add
sarl
mov
xor
push
xchg
xlat
pop
lcall
cmpsl
pop
in
sub
jno
shrl
stos
ss
roll
lret
outsb
xchg
sub
test
jns
xchg
add
test
ret
mov
inc
add
loopnew
stos
adc
mov
into
push
loop
stos
mov
shll
out
jge
ret
xchg
mov
movsl
mov
insb
das
pop
hlt
incb
adc
xchg
fcmovnbe
add
xor
mov
dec
adc
push
sbbb
fdivr
scas
inc
cmpl
xor
mov
fistpll
adc
pushf
aas
inc
mov
sahf
mov
add
sbb
and
daa
lahf
cmp
xor
mov
push
popa
pop
push
xor
adc
and
dec
xchg
cmp
loop
xor
int
test
jp
add
pop
fisttpl
jmp
repnz
imul
aad
mov
and
and
dec
int
scas
inc
inc
dec
add
xchg
outsl
xor
mov
das
imul
add
xchg
scas
shr
imul
sub
aad
xor
jnp
sub
pop
test
adc
mov
push
mov
sbb
inc
loop
mov
mov
out
dec
test
mov
xchg
dec
js
dec
add
mov
mov
ret
and
ffreep
push
ds
lcall
xor
rcr
mov
mov
call
dec
mov
hlt
jb
pop
enter
in
adc
sti
int3
inc
scas
sub
addb
shrl
and
test
inc
test
insl
hlt
insl
outsl
mov
xchg
adc
icebp
mov
ljmp
inc
testb
popf
mov
inc
or
mov
or
jl
xchg
sti
mov
xor
imul
cmp
push
mov
xchg
mov
push
insl
and
or
in
pusha
loop
sub
push
dec
mov
cmp
shlb
push
xor
jb
mov
test
mov
lahf
xor
mov
mov
inc
nop
push
jl
rcrl
mov
dec
jbe
sbb
cmpsb
push
or
lahf
insb
mov
out
mov
inc
and
stc
sub
mov
cmp
andl
push
push
push
mov
add
mov
jno
push
add
add
add
add
jne
call
jmp
mov
xor
pop
imulb
mov
mov
lcall
aaa
mov
lock
ficompl
cli
addb
ret
in
sub
lods
xchg
or
or
pop
dec
scas
pop
mov
fsubp
jnp
sbb
fistl
pop
adc
add
in
xlat
movsl
hlt
shlb
inc
mov
jp
mov
dec
mov
ret
mov
lock
add
sarl
push
mov
mov
int
and
jne
rcll
ljmp
xchg
xchg
sub
cld
and
mov
pop
loope
adc
mov
or
insl
xor
stos
negl
rep
in
scas
ljmp
xor
add
js
pop
jns
sub
mov
pop
pushf
clc
shr
and
into
leave
lahf
ds
nop
stc
test
bnd
cmp
cld
xchg
push
ljmp
sti
or
sub
lock
int
push
es
mov
adcb
into
cmp
lds
fs
ds
or
and
fldt
cmp
cs
mov
pop
add
adc
mov
into
cmp
xor
push
inc
daa
push
pop
das
mov
dec
cli
sub
mov
sub
and
das
sti
cmp
cmp
inc
enter
mov
fimull
ljmp
xor
mov
es
scas
xor
testb
hlt
mov
dec
jbe
nop
inc
testl
mov
jge
lods
mov
call
sub
sbb
adcl
mov
and
les
inc
int3
pop
xor
push
movsl
mov
and
cmp
loopne
lret
sbb
rcr
pop
idivl
rcrl
ljmp
fdivs
adc
sbb
cwtl
mov
mov
sub
cmpsb
xor
cmp
fnstsw
pop
stos
hlt
fwait
mov
decl
int
mov
fwait
dec
inc
or
es
addb
lods
jmp
jae
addb
jl
js
push
sub
nop
cmp
lcall
jb
inc
dec
scas
sbb
fdivrl
dec
adc
dec
das
jb
xchg
or
test
mov
rcrl
mov
test
mov
push
out
adc
js
dec
addb
xlat
push
add
repnz
cmc
and
and
push
jge
popa
pop
mov
imul
xor
mov
xor
pop
sbb
push
lds
jb
pop
or
push
dec
addr16
cmp
inc
inc
repnz
das
scas
inc
and
les
push
addl
in
pop
dec
inc
ror
pop
popa
add
int
sub
cmpsb
sbb
lea
cmp
push
or
mov
scas
jns
rcrb
adc
mov
mov
push
insl
in
push
sbb
push
scas
push
test
in
dec
insb
jo
and
mov
gs
pushf
call
push
je
mov
push
add
pop
mov
sub
and
mov
insb
cmpsb
stos
outsb
adc
sub
jge
mov
int
call
inc
orb
ja
xchg
loope
mov
and
jne
pusha
jecxz
inc
pop
or
ret
test
adc
pushfw
mov
lret
sbb
sti
mov
and
aam
mov
rclb
sti
fwait
incb
inc
fidivrs
push
or
xchg
test
push
in
sub
test
lret
loopne
cld
fcmovb
mov
lock
fistpl
in
cmpsl
xchg
lods
loope
add
sbb
push
cs
or
adc
mov
sbb
ret
mov
sbb
or
cmpxchg
fmuls
daa
sbbl
and
sahf
xor
subl
mov
lods
xchg
je
inc
sbb
test
xchg
data16
xlat
leave
and
loope
mov
xchg
and
inc
cmp
cmp
jp
jbe
push
ja
sahf
sahf
cwtl
cmpsb
cmpsb
adc
add
jmp
insl
roll
or
cli
push
mov
test
push
out
repz
jno
push
push
dec
inc
push
repnz
mov
jp
dec
inc
rorb
arpl
loop
dec
mov
outsb
lea
mov
cmp
add
xor
mov
push
out
mov
sbb
xchg
movsb
dec
and
mov
lret
in
adc
inc
cs
xchg
cmp
testl
cmpsb
mov
out
mov
lds
dec
aam
data16
pop
xchg
js
xor
subl
ss
xor
adc
mov
add
xchg
mov
mov
das
outsl
or
xchg
push
mov
fincstp
cmp
lahf
mov
icebp
pop
and
sbb
out
push
mov
and
mov
mov
clc
mov
iret
mov
mov
lea
mov
lods
movsb
add
pop
repz
outsl
aas
icebp
lods
imul
popf
test
add
inc
popa
jo
jmp
add
mov
or
mov
sbb
dec
daa
cmc
addr16
sahf
and
pop
fcoms
iret
xchg
fadd
push
fildl
mov
mov
sub
fdivrl
cmp
push
sbb
cli
jp
loope
push
loopne
inc
ljmp
loope
inc
xor
enter
and
cmp
ret
mov
mov
push
mov
sbbb
das
push
add
imul
out
scas
pop
and
fs
leave
dec
mov
dec
mov
call
cwtl
pop
sbb
adcl
pop
cld
aam
leave
cld
es
test
adc
and
lods
lar
dec
mov
push
pushf
insb
pop
mov
clc
stc
xor
ret
xor
sub
dec
xor
lods
and
xor
push
das
jecxz
xchg
pop
stos
mov
test
les
lods
mov
inc
fisttpll
sbb
icebp
push
pop
push
push
add
int3
xchg
mov
ret
stc
sub
call
add
mov
leave
inc
ja
sbb
xchg
pushf
iret
stos
js
jge
lock
in
lods
cmpsb
push
lods
mov
testl
data16
popa
sub
scas
jno
pop
add
fadds
into
or
mov
jecxz
hlt
mov
and
das
stos
or
popf
cmp
stc
add
push
outsb
int
or
icebp
jge
pop
xchg
ljmp
xor
icebp
std
out
jne
inc
mov
inc
pop
imul
lret
test
sbb
and
ret
test
les
jp
loopne
xor
mov
imul
js
stos
insb
jns
mov
lea
stc
adc
xor
mov
into
xchg
mov
in
rolb
cmpsb
cmc
imul
out
mov
xchg
jns
xchg
das
sarl
push
add
ret
cld
jg
or
stc
cmp
fcompl
mov
repz
push
scas
popl
adc
insl
sbbl
negb
mov
shrb
add
sbb
sti
clc
in
xor
rorl
shrl
xchg
repnz
roll
sub
ret
rcr
addr16
or
jg
mov
jb
fimuls
sbb
push
ljmp
testl
push
test
stos
lret
dec
dec
dec
mov
movsl
int
sbb
cld
arpl
aad
xor
jmp
xor
xchg
jmp
mov
sarl
pop
or
xchg
mov
popa
stc
xor
cli
lods
mov
hlt
ljmp
std
mov
aas
jo
cld
ret
adc
xor
jg
mov
shrl
dec
push
repnz
leave
insb
xchg
out
jmp
adc
xor
mov
mov
gs
loope
out
xchg
mov
dec
mov
mov
into
jecxz
lods
pop
aad
push
dec
daa
xchg
jno
mov
mov
repnz
aaa
pop
sub
loope
add
mov
in
sub
sti
aas
jns
repnz
scas
fs
rcrl
pop
mov
xchg
iret
shrl
or
push
mov
xor
xor
sbb
inc
mov
cmp
jecxz
and
xlat
repz
pusha
fists
ljmp
ror
ljmp
jl
push
xchg
xor
lds
push
out
jno
jecxz
mov
cmp
andb
shl
pop
loop
mov
outsb
sub
sub
out
mov
xchg
insb
loop
mov
mov
aad
ds
cld
cmp
ja
mov
leave
scas
push
enter
and
xlat
clc
in
pop
aad
inc
test
pop
fdivrs
mov
mov
push
addr16
jg
cmp
push
je
xchg
push
lods
xor
mov
test
fs
lahf
pop
mov
sahf
adc
mov
sbb
sub
inc
xlat
jg
addr16
xor
scas
push
pop
jmp
or
inc
xchg
mov
sarl
lahf
add
loopne
dec
mov
out
mov
dec
fstpt
pop
and
sbb
push
ret
and
in
out
push
mov
fisubl
sbb
test
sbb
cmp
sub
push
lds
push
sbb
stc
add
xchg
push
mov
cmp
jne
xor
jns
test
mov
dec
mov
adc
dec
jle
test
push
sub
imul
mov
and
fst
cmp
hlt
xor
add
movsl
pop
adc
sti
mov
dec
jae
cmp
das
or
stos
jmp
loope
xor
xor
gs
add
shl
sarb
movsl
insl
xorb
mov
pop
mov
pop
in
aam
inc
jno
add
scas
filds
jns
aas
cmp
pop
add
ret
in
pop
andb
inc
mov
sub
pop
mov
xor
iret
clc
in
cli
outsl
xchg
jne
pop
jno
mov
outsb
iret
pop
xor
pop
xor
outsl
xchg
mov
mov
fiaddl
push
cmp
cwtl
jne
push
mov
lds
gs
stos
scas
sbb
adc
inc
cmpsl
cwtl
pop
mov
fldt
xchg
fcmovbe
cli
mov
dec
das
ret
cmp
xor
add
rorb
cmc
ja
stc
out
cwtl
push
mov
inc
push
push
dec
jbe
jp
imul
jbe
xor
xor
mov
minps
stos
push
pand
pop
mov
call
jecxz
daa
xchg
mov
mov
jns
sub
js
test
push
xor
movsb
bnd
repnz
push
sahf
mov
mov
jle
push
pop
sbb
mov
push
aaa
in
cld
fnstcw
xchg
inc
icebp
in
xchg
pop
jno
fistps
test
adc
inc
push
pop
inc
scas
jno
mov
xchg
pop
push
insb
fdivr
jb
dec
test
pop
cmp
adc
les
inc
in
int
in
xor
and
dec
push
cld
cmpsb
dec
cmp
lret
dec
ss
sub
scas
divl
sahf
stc
fcmovnbe
xor
push
mov
testl
mov
std
rcrb
mov
popa
js
add
jb
inc
scas
aam
pushf
lahf
mov
jnp
sbb
push
pop
arpl
in
jp
cltd
jle
add
repz
xor
cmp
cmp
xlat
mov
and
loop
add
dec
insl
add
outsb
and
push
dec
mov
popa
jp
mov
in
loope
sub
add
mov
sbb
jecxz
pop
mov
pop
jnp
test
pusha
xchg
mov
xor
loope
repz
dec
stos
adc
pop
or
lahf
movsl
mov
iret
cmp
push
pop
pop
insb
sar
dec
mov
mov
adc
leave
inc
mov
ljmp
mov
fcompp
push
lods
pushf
repz
lret
xchg
lods
stc
fsts
sub
cltd
pusha
imul
dec
cmpsb
mov
shlb
fldl
push
dec
aaa
push
pop
cltd
sti
xor
xlat
inc
fsubp
pop
xchg
repz
aas
pop
leave
in
mov
mov
mov
xchg
mov
lret
adcl
xchg
xchg
hlt
andb
and
fcmove
mov
clc
ficoml
xchg
jno
aad
cmp
movsb
aaa
test
int
cmp
cmpsl
movsl
or
or
aad
pop
lods
or
rorb
repnz
xchg
cmp
fstl
out
cmpsb
fidivrl
shrb
adc
cmc
cltd
in
cmp
ret
lahf
add
das
js
push
ret
xor
pop
arpl
mov
sbb
arpl
insb
cli
xchg
adc
sbb
or
sbbb
jnp
jmp
mov
and
fbld
cmpb
jo
mov
loop
xor
cs
push
sub
cwtl
addb
cli
in
mul
popa
fimull
inc
mov
xor
sbb
cwtl
test
xorl
push
inc
mov
jle
sbb
bound
push
test
cmpb
dec
notb
cmp
jle
pusha
addr16
cmpb
adc
test
lret
jnp
cli
xchg
adc
jbe
in
out
pop
sbb
dec
mov
pop
adc
cmp
inc
dec
dec
mov
push
aam
or
repz
loope
inc
push
das
or
loop
xlat
loop
fbld
add
push
imul
jbe
icebp
loopne
or
stc
mov
outsl
mov
pusha
push
xchg
test
scas
xchg
and
mov
pop
addr16
sub
pop
fisubrs
pop
or
mull
xor
inc
mov
mov
sub
xorb
sbb
sub
cmp
orl
scas
mov
in
pusha
xchg
jnp
scas
fs
mov
and
push
test
aad
cmpsl
xchg
and
clc
fwait
xchg
outsb
xchg
scas
mov
sub
lods
mov
test
dec
filds
pop
les
cld
xchg
test
ljmp
ljmp
lahf
cs
push
xor
fisubrs
mov
mov
and
adc
cmp
out
xchg
or
push
idivb
lahf
fnsave
repz
mov
das
fstpt
sbb
movb
jae
iret
mov
das
jo
push
adc
push
aaa
loope
mov
mov
in
adc
test
dec
lock
adc
insb
in
rcrb
jb
mov
mov
test
mov
dec
xlat
int3
mov
cmpsl
fwait
xor
clc
push
mov
sbb
lret
ret
movl
popf
cmpsb
jmp
test
jle
in
das
js
pop
adc
data16
mov
or
mov
push
mov
scas
das
mov
add
shl
into
push
ret
or
es
into
dec
add
push
sti
das
pop
add
mov
dec
mov
xchg
add
xchg
inc
sub
fiaddl
gs
pop
lds
mov
xchg
jbe
and
jp
sahf
dec
aad
mov
or
xchg
and
idivl
mov
add
inc
test
or
out
cli
icebp
or
repnz
mov
out
aad
out
xor
cmp
ror
mov
sbb
inc
das
push
shll
outsl
sub
fdiv
andl
in
loopne
sarl
call
and
shr
xchg
test
add
in
xchg
mov
int
ret
or
or
dec
mov
lea
or
mov
in
mov
adc
cwtl
mov
dec
cld
out
cmpsl
movsb
sti
mov
mov
push
je
lods
ss
int3
stos
orl
xorb
inc
jo
lret
outsl
fwait
jg
pop
into
cltd
pop
movsl
ret
mov
leave
stos
push
sbb
mov
cs
xor
jge
pop
adc
jecxz
adc
jp
xor
addr16
adc
ds
in
or
ljmp
xchg
arpl
cwtl
sub
sbb
adc
in
adc
call
jns
xchg
jo
push
cmp
fwait
das
int
cmpsl
and
adc
shlb
clc
cmp
mov
das
imul
adc
jne
add
aad
push
lds
lahf
and
add
push
mov
ret
xor
and
inc
idiv
leave
sbbb
in
fmul
sub
cmp
lret
jnp
test
adc
out
mov
jecxz
ja
ja
jmp
into
sbb
jb
xor
jae
cltd
adc
outsl
jg
xchg
mov
js
cld
sbb
sbb
pop
adc
xlat
aam
cld
ret
adc
lods
ret
ljmp
iret
pusha
jl
and
inc
jno
xor
int
gs
mov
or
jnp
mov
inc
fistps
xchg
leave
gs
mov
leave
bound
sub
pop
roll
cmp
mov
adc
add
idivb
addr16
out
fsubs
adc
and
mov
ret
jmp
add
xchg
jge
fidivrl
mov
mov
inc
dec
add
loop
mov
adc
mov
sti
ds
dec
ljmp
inc
rcll
or
push
xor
sbb
push
xchg
push
push
repnz
xchg
pop
fidivrl
jmp
sbb
out
ret
inc
mov
lods
ds
or
push
addr16
std
lret
push
cmp
mov
lcall
push
mov
add
idivb
and
and
sub
jle
and
or
mov
repz
xchg
xchg
addr16
and
lret
mov
int3
insb
pop
xor
jnp
hlt
sub
pop
aaa
add
push
push
js
adcb
mov
jg
push
daa
cmpsb
or
repz
push
xor
ds
arpl
insb
mov
es
lock
hlt
test
scas
sbb
inc
push
ja
out
arpl
xchg
cli
mov
cli
add
xor
shrb
in
cmp
pop
push
inc
outsl
mov
add
outsl
shl
insb
mov
lahf
gs
fs
mov
xchg
mov
pop
dec
jbe
js
and
push
xchg
test
arpl
push
ja
cmovae
xor
adc
sub
jns
sbb
in
sbb
cmp
or
mov
rcr
xchg
ret
cmp
nop
jo
add
lcall
nop
or
jp
inc
ret
int3
loopne
mov
loope
dec
sub
fidivrs
rclb
out
cmpsl
push
pusha
leave
mov
sbb
std
push
xchg
mov
stos
in
pop
adcl
xor
jle
imul
in
out
mov
idivb
lock
in
inc
xchg
js
pop
inc
xor
mov
pop
mov
add
mov
call
jno
xchg
mov
xor
movsl
or
xchg
dec
test
sti
or
dec
pop
loope
inc
xor
imul
pop
mov
and
sbb
ds
iret
addl
repz
cmp
push
dec
cmp
or
sub
cs
cs
movsb
xor
fwait
mov
js
xor
inc
push
and
dec
xchg
fwait
outsl
mov
sahf
mov
mov
cmp
adc
aaa
push
mov
sti
repz
mov
jg
outsl
mov
loop
or
sbb
xchg
cmp
ret
inc
hlt
std
adc
mov
jg
leave
add
jnp
int3
stc
jl
in
and
lods
lahf
je
pop
push
aas
inc
outsl
mov
in
fcmovne
mov
adc
sub
stos
jno
fsubrl
adc
shlb
push
and
popa
iret
sbb
icebp
jl
aam
xor
mov
pusha
sub
sbb
sbbl
mov
mulb
jbe
dec
sbb
jb
mov
xchg
outsl
pop
sbb
cli
repnz
mov
js
xchg
outsb
movsb
test
xlat
push
xchg
mov
add
add
or
mov
mov
or
push
dec
lahf
sbb
mov
sbb
jns
cmp
out
or
pop
pop
jp
dec
or
das
mov
xor
adc
and
jge
es
and
push
cmp
or
idiv
pop
mov
cmp
dec
mov
cmp
xchg
cwtl
call
fs
mov
add
sub
jbe
xchg
ret
cmp
in
loope
add
pop
cmp
push
gs
jmp
inc
adc
stc
fdivrp
mov
fadds
xchg
push
in
sub
mov
imul
or
cld
pushf
pushf
mov
add
add
pop
fistpl
lahf
fs
jo
imulb
cmpb
or
jle
shll
addr16
sarb
insl
dec
push
scas
stc
fidivs
push
jmp
dec
aas
repz
inc
ret
jns
jg
push
cmp
xor
xchg
pop
cmpsb
sub
jmp
subl
sbb
add
repz
sub
in
pop
xchg
pop
out
pop
mov
divb
aam
xlat
sub
xchg
push
insb
push
xchg
sarb
repnz
add
or
lret
sahf
dec
jnp
stos
cmp
jbe
push
aam
sbb
repnz
pop
rclb
sbb
push
add
mov
out
xlat
xlat
in
adc
add
cs
cmpl
sub
int3
js
xorl
cmp
jl
sbb
loopne
add
push
hlt
cmp
cmp
andl
push
mov
lea
mov
mov
mov
xor
mov
mov
push
popa
jns
insl
and
dec
mov
jnp
loope
lret
popa
test
std
or
dec
cmp
je
arpl
inc
mov
inc
dec
je
and
mov
add
xchg
xor
adc
scas
fnstenv
sarb
pop
stos
dec
cmpb
mov
sbb
outsl
or
sbb
lret
test
fimuls
test
mov
pop
mov
idivl
imul
mov
clc
xlat
dec
gs
mov
push
daa
or
insb
and
add
loop
lcall
xor
les
cmp
mov
mov
or
mov
scas
test
mov
pushf
aaa
mov
jg
insb
jnp
pop
mov
jo
jg
lods
inc
lods
adc
push
shll
and
mov
mov
push
repz
insb
iret
xor
dec
out
xchg
mov
dec
mov
dec
bswap
sti
les
sti
and
ss
dec
dec
mov
ret
leave
mov
lret
sub
inc
test
xchg
inc
inc
cli
shll
repnz
int
je
xor
jno
jne
lret
divb
or
mov
mov
push
jbe
ret
lds
shll
mov
movsb
int3
shl
cwtl
fsubs
sti
aas
dec
call
jl
cmp
lret
scas
cmp
cmp
imul
mov
push
in
or
bound
xchg
fsubl
push
pop
inc
push
js
push
pop
mov
cmp
jl
sti
mov
cld
cmp
cli
xor
xchg
add
and
push
push
mov
and
clc
or
insb
testl
cli
cmp
mov
in
popa
decb
xchg
call
insb
repz
cli
call
mov
pusha
ret
push
cmp
pushf
xor
mov
cltd
mov
aaa
lock
xor
imul
cmp
xchg
ss
mov
dec
xchg
mov
test
jnp
nop
or
sarl
inc
ljmp
addr16
push
aad
out
pop
and
adc
cltd
in
mov
cmpsl
adc
jbe
jp
dec
imul
fcoms
hlt
je
mov
cld
mov
xor
xchg
mov
or
xchg
mov
mov
or
shlb
aas
sbb
sahf
out
xchg
ljmp
push
enter
ret
jns
push
adc
rcl
sub
cmpsb
or
loope
icebp
sbb
jge
fucomip
xchg
mov
stos
iret
arpl
popf
fcompl
mov
hlt
xchg
push
mov
adc
jb
mov
xchg
mov
adc
call
in
outsl
int3
notl
mov
out
movb
add
inc
lret
fsub
clc
out
mov
int
aaa
ljmp
cmpsb
in
arpl
xor
push
cmp
test
in
and
or
in
sbb
fidivrs
mov
dec
mov
pop
cmp
sti
dec
leave
mov
pop
ljmp
add
rcrb
iret
dec
pop
shll
lds
fstl
push
cmp
jnp
andb
jnp
cwtl
xchg
daa
sub
and
push
fsts
aas
daa
push
in
inc
ss
mov
adc
test
xlat
sub
push
sub
push
ficomps
add
add
sbb
add
xor
adc
add
imul
add
add
mov
sub
add
insl
push
and
mov
sub
into
pop
cltd
dec
movsb
lds
mov
rolb
movsb
push
push
xor
mov
inc
jge
loopne
pop
nop
out
push
cmp
or
clc
cld
scas
adc
dec
cmc
ret
push
popa
pop
icebp
cltd
cli
or
sbb
dec
sbb
mov
xlat
pop
fcomps
and
mov
or
mov
movsl
mov
add
jge
movsl
push
lret
jbe
movsb
lock
insl
inc
mov
fmuls
xor
adc
test
mov
int3
push
push
or
push
push
js
fs
sahf
ds
push
in
mov
aad
sbb
js
dec
sbb
or
andl
inc
mov
into
mov
xchg
inc
ljmp
sbb
push
incb
roll
mov
push
jb
jle
mov
jp
rcll
shl
sub
icebp
cmp
push
lds
loopne
and
cmp
dec
pop
jno
hlt
adc
aaa
sub
or
roll
mov
inc
inc
aad
adc
aaa
cmp
add
in
or
fs
lcall
cmp
aad
push
pop
fidivs
stos
fisttpll
pop
cmp
inc
pop
xchg
ret
loop
ss
xchg
stos
mov
arpl
fbld
xchg
and
cmp
out
xchg
and
ljmp
insl
cmp
adc
xlat
int3
fs
fsubl
mov
call
lea
cmpsb
adc
dec
xlat
cmp
jno
xchg
out
sbbb
adc
or
mov
mov
icebp
roll
push
sbb
xchg
push
ds
push
dec
addr16
fadds
and
mov
gs
ds
insb
lods
jae
push
xchg
push
pop
insl
sub
sbb
sub
int3
dec
test
lods
push
jae
mov
in
push
jle
js
push
movsl
lret
push
adc
lret
inc
xchg
or
add
or
insl
lahf
add
pop
add
leave
cmp
lea
push
nop
mov
dec
inc
in
rcll
lret
fstpl
pusha
test
es
jbe
fisttpl
popa
les
dec
shlb
fstpt
ret
jae
iret
or
gs
xchg
inc
sbb
mov
mov
in
fwait
sbbl
cmp
xchg
ret
mov
add
pop
jb
out
sbb
cwtl
cmp
pop
jmp
mov
mov
push
out
mov
popa
icebp
xchg
adc
shl
sahf
jnp
jg
adc
stos
inc
ror
insl
scas
push
movsl
xchg
stos
call
call
in
inc
js
xchg
stos
leave
sar
jle
inc
test
in
jae
jne
and
out
adc
adc
mov
inc
jae
pop
jecxz
leave
add
xor
push
std
int
and
xor
sbb
or
push
mov
aas
imulb
push
add
sbb
in
pop
xchg
ret
stc
mov
jbe
inc
cmp
test
xor
sub
sbb
sub
mov
lock
in
addb
imul
or
pop
jnp
call
fdivp
dec
xorl
lret
add
mov
pop
pop
dec
popa
mov
cmp
or
inc
cmpsl
push
xchg
sbb
test
insl
aad
insb
fcoms
mov
int
call
ret
int
or
test
cmp
or
and
rclb
arpl
ret
pop
das
pop
and
dec
outsb
cmpsl
jge
push
or
rcll
dec
repz
ljmp
in
mov
shl
push
cmp
fcompl
sbb
push
popf
mov
aas
or
cld
xor
int3
sbb
mov
bound
xchg
add
hlt
popa
outsb
sar
imul
js
sbb
lock
test
pop
xlat
mov
lods
pusha
xchg
xchg
scas
into
inc
sub
lahf
add
jmp
pop
enter
fs
pop
sbb
dec
mov
dec
sbb
out
sbb
in
lods
xchg
sbb
test
or
dec
daa
cld
mov
arpl
stos
push
push
sub
adcb
push
cld
push
subb
jmp
push
scas
or
and
xlat
and
sub
stos
xor
mov
pop
sbb
add
hlt
sub
sahf
test
popa
mov
cld
mov
adc
adc
popf
repnz
pop
xor
pop
fwait
stos
or
faddp
push
daa
test
adc
adc
add
repz
adc
push
xchg
enter
mov
lods
fistpl
jle
pop
jns
lret
ret
adcb
cmc
mov
rol
in
cmp
sub
mov
mov
out
sub
pushf
test
mov
push
dec
or
pushf
pop
mov
xlat
hlt
and
repz
dec
push
fidivl
aam
sbb
nop
lret
repnz
scas
shll
cmp
add
les
mov
ljmp
inc
lock
lods
fisubrl
daa
arpl
inc
pusha
and
cwtl
stc
in
aaa
add
popf
push
mov
pop
inc
push
or
das
mov
xchg
insl
stc
sahf
mov
negb
aaa
aas
and
fnclex
ret
inc
in
pop
inc
cli
jne
or
icebp
push
shl
mov
aam
mov
push
cltd
bound
and
xchg
loop
cli
mov
movsl
jnp
mov
in
nop
sub
mov
bt
jo
push
sub
push
cmc
fdivrl
push
add
repz
pop
ret
je
pop
imul
fistpl
mov
aam
lret
jae
pop
lock
dec
and
xchg
push
loope
cmp
mov
pop
in
push
push
pop
jb
push
push
lret
fdivp
jg
mov
cltd
and
pop
inc
into
or
sub
and
inc
dec
push
sub
sub
outsb
lea
jp
outsb
into
xor
xor
jns
sub
dec
sub
push
shl
sbb
jne
imul
inc
jp
jb
sub
fists
lcall
fs
mov
mov
pop
lock
stos
shrl
dec
or
outsb
and
fidivl
fisttps
dec
sbb
stos
call
sub
pop
sbb
loope
and
or
inc
cmp
fmuls
lret
fs
subb
test
fwait
mov
ficomps
popf
movsb
daa
ret
repnz
mov
push
push
shll
roll
fstpl
outsb
repnz
ja
and
sbb
pop
aad
popa
cs
jae
jp
incl
mov
faddl
jmp
arpl
nop
jmp
iret
je
xor
stos
shl
adc
in
inc
aad
fimuls
push
sbb
divl
imul
adc
jecxz
lea
cmp
daa
dec
aam
mov
int
jnp
mov
jbe
push
jne
imull
add
sbb
shl
leave
inc
mov
into
cmpsb
das
pop
out
mov
sub
inc
fsubp
lcall
and
and
adc
or
jmp
xor
or
jne
repnz
pop
sarb
mov
dec
and
mov
or
xor
xor
sbb
rol
sub
gs
loop
test
cmp
sbb
mov
jg
push
dec
rcl
jno
outsb
insl
xchg
iret
adc
push
push
jle
repz
test
sub
push
les
mov
add
push
lods
jns
inc
adc
and
jnp
jno
inc
or
clts
pop
push
mov
cld
xchg
dec
push
xchg
adc
fiadds
scas
or
ss
scas
inc
pusha
mov
stos
pop
mov
add
test
aaa
or
dec
sub
mov
push
in
dec
jle
mov
ss
pop
cltd
adc
fsubl
aam
push
xchg
cmp
push
xchg
or
sub
push
pop
aad
xor
je
fistl
js
pop
lret
sub
lds
je
test
adc
mov
aad
sarb
add
int3
in
xor
xchg
stc
or
xor
xchg
and
movsb
popa
loopne
pop
insl
dec
sub
inc
cmp
sbb
ds
into
push
pop
pop
fwait
sbb
xchg
out
jns
mov
cmp
mov
insl
div
jae
ss
in
add
mov
dec
jo
xchg
fldcw
push
mov
dec
enter
dec
sub
jecxz
mov
lods
mov
xchg
jp
push
in
sub
sbb
xor
in
mov
cmp
cld
insb
fsubrl
aam
inc
xor
subb
mov
mov
mov
inc
mov
sbb
xor
adc
push
es
ljmp
imul
push
rcrl
pslld
mov
ja
in
and
mov
insl
insb
inc
idivl
cli
sub
cmp
lds
xlat
inc
repnz
daa
out
ficoms
or
cmpl
shlb
or
mov
push
mov
or
push
push
push
jle
out
fmulp
push
jnp
sbb
push
and
sub
lock
adc
addl
or
cmpsb
xchg
fstps
pop
fcmove
xchg
rcll
mov
aaa
xchg
jo
out
test
lahf
mov
adc
imul
jle
fisttpll
adc
test
into
fwait
cmc
stos
xlat
icebp
loop
enter
pop
ljmp
test
rcrl
popa
mov
xchg
orl
xor
outsb
and
push
pop
mov
fidivl
inc
sbb
jl
or
cmp
adc
xor
push
iret
xlat
xor
mov
mov
popf
pop
add
je
out
insl
faddp
jae
cmpsb
mov
mov
fdivl
xchg
inc
push
mov
mov
lret
sbbb
jbe
sbb
nop
mov
fiaddl
dec
or
xor
mov
and
xchg
je
fsubs
sahf
xchg
btc
popa
mov
dec
push
rcr
and
pop
popa
jmp
push
roll
inc
push
push
adc
adc
int
das
and
mov
mov
cwtl
fcomp
mov
sti
xchg
mov
dec
rcrl
mov
icebp
dec
adc
adc
fdivs
pop
inc
fnstcw
arpl
mov
adc
lods
push
mov
fwait
pop
add
inc
clc
and
js
imul
mov
mov
mov
push
jl
dec
jae
les
mov
inc
and
lds
mov
mov
je
dec
push
lahf
pop
push
testl
sahf
call
mov
stc
das
shlb
fisttpll
ret
push
ljmp
adc
fwait
inc
cmp
sarl
leave
scas
data16
lock
ret
stos
jns
mov
out
mov
fdivrl
arpl
imul
pop
push
outsb
scas
and
adc
inc
out
fildl
sub
xchg
mov
dec
ljmp
sbb
aad
cltd
lahf
aad
xlat
pop
repnz
shrb
push
inc
and
pop
loop
dec
or
pop
cmc
adc
sahf
repnz
notb
or
xor
xchg
fcoml
xlat
jo
add
shlb
jno
jno
movsl
cmpsl
in
aad
mov
pop
add
ss
cli
inc
lret
pop
cmpsl
repz
mov
or
test
add
dec
jle
pop
repnz
sbb
rorb
aad
test
mov
ret
in
sub
rclb
lret
imul
mov
xlat
cmp
xor
or
cmc
jmp
das
dec
push
mov
push
jl
hlt
mov
insl
ret
jno
adc
cmp
pop
and
pop
mov
aaa
adc
orl
and
xlat
inc
imul
push
pushf
cmc
cmc
pop
mov
inc
cs
xor
jp
inc
clc
mov
pop
adc
lods
addl
std
jge
loopne
mov
outsl
lret
sti
orl
xchg
xchg
mov
jecxz
in
push
mov
rorl
sub
clc
sbb
ret
in
mov
movups
loope
mov
adc
stc
cmpsb
jae
call
ret
out
adc
jle
xchg
or
add
xlat
pop
jp
push
inc
or
xor
mov
mov
cmp
sub
push
xor
loope
lea
mov
mov
into
rorb
fstpt
dec
push
inc
mov
cmp
adc
ficoms
daa
xor
push
aaa
lods
iret
jp
jle
pop
ret
rorb
jo
movsb
loopne
aad
mov
or
stos
jmp
pop
mov
mov
dec
pop
js
aad
push
stos
inc
popa
add
add
clc
pop
int
jae
movsb
ret
mov
mov
outsl
and
pop
mov
push
push
sbb
jge
push
scas
adc
cmp
loope
repnz
cmp
mov
xchg
lods
sbb
test
adc
sub
addr16
xor
or
js
pop
mov
jge
aam
or
jno
popf
in
xor
add
popa
push
nop
push
jl
mov
shrl
mov
fbstp
dec
lods
jge
sbb
pop
jno
and
jno
or
push
enter
adc
outsb
add
or
push
push
pusha
xchg
xchg
mov
sbb
mov
or
xor
lods
mov
lock
or
mov
popa
push
out
pushf
leave
cmc
mov
jecxz
push
aaa
mov
and
repz
repz
test
fstpt
add
mov
test
dec
out
fwait
je
cmp
jnp
pop
xchg
jg
test
dec
sbb
fstl
dec
mov
add
xchg
sub
sub
push
out
push
adc
dec
add
cmp
insl
jne
sub
add
add
push
leave
xor
movsl
inc
shll
jecxz
adc
cwtl
lods
mov
call
xor
sti
int3
mov
insl
and
dec
or
push
xor
pop
jne
xchg
fildl
shll
cwtl
push
ljmp
mov
and
pushf
mov
add
mov
in
ret
mov
out
lea
or
clc
mov
stc
or
sar
and
pushl
shl
and
or
enter
popa
fstp
scas
rorb
mov
jae
loopne
leave
pusha
push
push
xchg
lea
je
fadds
push
int
pusha
cli
in
scas
xchg
adc
pop
mov
push
lods
repnz
pop
idivl
push
mov
cmpsl
roll
xor
bound
lahf
es
mov
mov
cs
jae
dec
shlb
hlt
bound
mov
stos
lods
test
mov
push
or
fcomp
loopne
pop
dec
mov
dec
xor
mov
push
sbb
dec
ds
jecxz
aas
add
xor
jge
jb
xor
dec
ja
or
mov
push
enter
inc
and
push
cmpsb
add
daa
lahf
aam
push
mov
nop
push
imul
dec
divl
inc
mov
imul
cli
sub
xor
imul
fadds
mov
mov
enter
xor
pop
and
dec
add
and
ja
movsb
push
imul
inc
mov
mov
push
fs
xchg
fildl
inc
mov
adc
pushf
jo
iret
mov
push
lds
cmp
add
rcrl
mov
inc
fstpl
mov
popa
sub
ja
mov
cmpsb
cwtl
xchg
stos
subl
popa
les
push
mov
adc
enter
leave
adc
addl
xor
imul
lret
xchg
sbb
test
ret
pop
loop
fs
in
jne
je
in
jae
enter
add
stos
mov
cwtl
dec
cltd
dec
lret
dec
sarb
lahf
and
popf
and
inc
jl
rolb
scas
aaa
mov
addr16
or
adc
mov
xor
cmp
pop
push
imul
xor
je
ret
movsl
pop
nop
int
hlt
push
jnp
xor
hlt
aas
cmpl
pop
aam
std
push
mov
call
lret
add
mov
push
aas
popa
cmp
test
iret
pusha
in
aad
xchg
cmp
into
xchg
and
testl
mov
sbb
jg
rcrb
cmc
clc
jmp
add
sbb
rclb
push
xor
fimuls
fcomip
mov
aad
loopne
adc
add
sbb
test
idiv
fimull
pop
ds
lcall
cmpsb
lds
lods
adc
xchg
dec
gs
sarl
mov
std
call
data16
pop
mov
xchg
scas
test
pop
mov
or
pop
dec
in
xchg
movsl
mov
pusha
cwtl
imull
lods
xchg
jnp,pt
pop
testb
fistpll
xchg
das
xchg
and
xor
add
arpl
add
push
jmp
nop
adc
adc
sub
xor
das
das
movsb
cli
jg
cmc
mov
repz
sub
mov
dec
insb
push
inc
insl
or
rcrb
mov
nop
xor
out
ficoml
rcrb
mov
sbb
data16
mov
xchg
rcrl
jb
and
sub
ds
inc
pop
xchg
stos
xchg
and
popa
dec
cwtl
cmpsl
push
mov
dec
repz
cmp
data16
jp
xchg
mov
inc
inc
stc
pop
stos
pop
mov
lahf
inc
test
cwtl
movsl
mov
inc
and
push
pop
lret
inc
ret
shrb
divb
lret
mov
les
popa
imul
repnz
or
and
push
ret
sarb
je
xchg
pop
sahf
xor
popa
push
in
aam
sub
testb
ss
mov
or
out
push
imul
fs
out
cmpsl
mov
pop
cltd
les
das
pop
imul
push
insb
sbb
mov
leave
dec
xor
shrb
loopne
lods
pop
fwait
js
movsl
cmp
loopne
pop
insb
shr
aaa
je
adc
test
ss
stos
dec
mov
outsl
test
cmp
pop
lods
faddl
adc
xor
mov
push
mov
lret
xchg
dec
xchg
jne
or
addb
in
stos
negl
adc
idiv
jl
popf
mov
cld
mov
xor
out
iret
hlt
dec
cltd
lock
mov
adc
test
enter
mov
and
xchg
xlat
enter
ljmp
out
lods
and
lea
add
lret
stc
cmc
test
call
and
out
xor
mov
into
lods
dec
cmp
dec
pop
cs
rorl
push
or
fsubrl
xor
loop
add
add
mov
dec
out
add
add
push
loop
mov
cmpsb
icebp
mov
mov
fsubrl
mov
sti
sub
ret
scas
js
dec
stos
mov
push
inc
mov
mov
push
sub
or
jne
outsb
movsb
cmp
jns
sub
and
mov
lret
stc
repnz
sbb
aam
sub
adc
dec
in
test
insb
mov
lcall
imul
ss
repz
cmp
inc
fwait
xor
ds
popa
mov
mov
aas
aad
push
pop
mov
aam
adc
push
inc
mov
pop
and
cltd
cmpsb
mov
jecxz
xchg
fwait
icebp
ficompl
mov
pushl
dec
mov
shlb
adc
mov
xor
xchg
xchg
clc
add
or
mov
sbb
adc
adc
mov
inc
jo
sub
hlt
xlat
xor
sbb
shll
imul
cmc
jmp
jno
push
adc
sub
fcompl
fsubl
cmp
mov
sbb
mov
pop
dec
sub
addl
pop
xchg
dec
roll
enter
pop
mov
fimull
popf
cmovle
inc
out
psadbw
mov
out
cmc
pop
jnp
clc
int
fimull
fs
sbb
int
and
aam
cmp
dec
jecxz
dec
aad
cmp
out
mov
jb
in
mov
sub
push
cmp
shl
jecxz
push
aam
sar
jg
fisubrs
cmpsb
mov
cld
mov
push
mulb
sar
mov
pop
ljmp
inc
xchg
inc
lret
jns
push
push
rcl
xchg
shrl
mov
xchg
out
jl
je
sub
ss
scas
xchg
mov
or
mov
fucomip
mov
mov
add
mov
xchg
scas
xchg
pop
movsl
adc
ret
xchg
aam
push
andl
loop
jl
addr16
subl
ds
add
mov
cmp
push
cwtl
sbb
adc
fcoms
call
jns
xchg
sub
test
adc
aad
out
adc
sub
mov
int
aam
mov
jmp
dec
xchg
test
shrb
xlat
jge
and
xchg
mov
xlat
or
mov
cmpsl
loop
sarl
rolb
movsb
es
arpl
mov
mov
lds
pusha
rcrb
and
mov
lock
addr16
outsb
pop
mov
add
jns
insl
stos
cld
push
add
daa
shll
loop
mov
or
dec
dec
push
jg
aas
rorl
cmp
aaa
sbb
lret
lods
mov
scas
aas
xchg
daa
inc
lea
fsts
popf
push
les
push
ret
adc
add
jno
loopne
fwait
jg
mov
add
call
mov
imul
sub
mov
imul
scas
pop
lock
pop
scas
and
adc
mov
lods
inc
sbbl
jne
pop
jl
negl
or
jbe
dec
flds
in
lret
pop
popa
ss
xor
stc
xchg
in
inc
mov
mov
mov
cmpsl
sub
addb
pop
pusha
sahf
jp
hlt
fbld
jl
adc
adc
xor
mov
test
push
mov
dec
xchg
shr
cltd
jl
add
adc
mov
and
lock
sbbl
sub
ds
adc
push
xchg
fwait
jns
xlat
xchg
aaa
jbe
add
mov
adc
sarl
xchg
cmp
xor
adc
aas
cmc
std
fcmovnbe
xor
and
push
stos
or
mov
lock
sub
jmp
or
test
out
xor
mov
jecxz
xor
movsb
cmp
push
iret
nop
push
push
or
pop
push
pushl
ror
into
bndldx
xor
pop
lcall
fstpt
stc
dec
ss
xor
stos
sbb
pop
mov
xchg
rcr
repz
insb
xchg
or
or
jnp
cmp
pushf
and
or
inc
dec
sub
rorl
xor
add
into
jne,pn
lahf
xlat
add
icebp
add
cmp
jle
movsb
fs
ret
les
push
mov
stos
clc
rorb
lods
mov
push
ds
or
sbb
mov
stc
xor
jp
inc
rcrb
sub
mov
iret
sbb
popf
rcr
pusha
stc
xchg
pop
adc
clc
or
iret
nop
orb
jle
dec
or
jecxz
dec
mov
sbb
dec
pop
ss
rcl
loopne
add
lret
adc
mov
sbb
cmp
push
shlb
outsl
test
fiadds
adc
push
loop
inc
add
sahf
mov
fisubs
aam
xchg
and
xorl
and
xlat
ss
out
test
push
insb
cmpl
pop
addr16
sub
sbb
pop
stc
add
cld
inc
subl
repnz
pusha
leave
xchg
pop
aaa
in
rorb
sbb
sub
xchg
inc
fnstsw
dec
xorb
pop
mov
or
xor
cmp
mov
mov
inc
mov
mov
mov
lods
mov
notb
insl
cmp
movsl
adc
loope
push
sub
icebp
cltd
mov
pop
aam
xchg
gs
push
aad
or
mov
cmp
icebp
mov
push
lret
jmp
fidivs
add
sbb
dec
outsl
insl
push
xlat
jecxz
jmp
xchg
cmp
cli
pop
xchg
mov
fcomps
pop
cmp
sti
in
mov
xchg
inc
and
sub
cli
mov
rcll
out
orl
shrb
imulb
pop
mov
or
mov
xor
mov
pop
or
repz
movsl
rorl
add
js
fwait
push
or
lahf
fwait
jmp
cmpb
jg
ds
stos
es
std
add
and
icebp
adcl
out
xchg
push
bound
fistpl
or
mov
xor
in
xor
add
loope
in
dec
scas
mov
popa
jmp
dec
adc
and
mov
testl
dec
xchg
push
mov
xorl
dec
push
dec
movsb
mov
mov
xchg
ret
test
mov
out
ds
dec
or
jns
fstpl
mov
cltd
and
add
mov
repz
div
pop
loope
xchg
fs
cmp
pop
aaa
fadds
jne
cmpsb
cmp
mov
jmp
and
cmp
and
jl
stos
dec
lret
pop
lea
inc
pop
lret
sahf
mov
sub
and
mul
lds
mov
adc
mov
push
out
into
adc
xor
inc
push
enter
xor
inc
fadd
or
data16
inc
pop
cwtl
mov
sub
xlat
pop
sub
adc
xchg
or
and
add
push
int
lds
add
cmp
push
in
mov
mov
imul
je
jl
jmp
xchg
rorb
push
jne
and
mov
and
mov
lods
pop
sahf
cmp
hlt
add
pop
dec
push
or
in
lds
gs
repz
outsl
jo
pop
mov
bswap
inc
repnz
or
sbb
mov
fistps
nop
iret
sti
mov
test
sarl
ret
in
mov
push
push
xor
ffreep
jb
fcoml
cmpsb
cmp
orb
fldl
push
fdivs
jg,pt
aad
es
pop
mov
push
jae
mov
mov
scas
out
sub
fs
push
jp
cmpsl
sbb
lock
ljmp
shrl
pop
shrb
clc
outsl
shlb
aad
xor
pop
ja
xchg
inc
inc
or
push
lret
xchg
fldenv
lds
mov
popf
ljmp
cmp
scas
adc
fsubrl
ljmp
test
jg
pusha
fcoml
pop
ja
mov
cltd
inc
pop
xchg
fmul
jle
cmpsb
stos
data16
out
sub
add
xor
lods
sub
inc
jg
sub
xor
dec
mov
out
ret
xorb
nop
inc
inc
push
adc
lret
push
in
bndldx
mov
mov
sti
dec
imul
sarb
shll
sbbb
jae
cld
lods
dec
mov
cmpsl
inc
xor
mov
adc
mov
jo
stos
pushf
pop
xor
addr16
and
xchg
fsubr
inc
cs
mov
add
fninit
jle
xchg
mov
cld
mov
cld
jne
out
and
mov
mov
jl
sub
pop
adc
loopne,pn
mov
fst
mov
idiv
dec
mov
pop
mov
mov
scas
test
push
fadd
and
adc
mov
mov
pslld
add
mov
push
xlat
mov
leave
or
inc
jbe
dec
jo
cli
sub
lret
popa
pop
pop
lret
mov
movl
fdivs
dec
mov
stos
ss
xor
and
jl
orb
leave
inc
cltd
movl
out
pop
or
aam
jo
pop
lods
pop
cmp
nop
xlat
pop
rorl
sub
insl
adc
push
mov
xor
mov
scas
add
call
lods
mov
dec
mov
jae
fstps
mov
xchg
dec
test
std
loope
leave
movl
enter
cli
xchg
sbb
add
xchg
movsl
and
ret
test
mov
inc
sbb
es
repz
add
cmpsl
mov
int
cwtl
mov
xchg
push
das
movsb
and
adc
jbe
aas
shlb
pop
jbe
lods
ror
scas
call
imul
insb
mov
addps
mov
sti
mov
ds
cli
xchg
aam
or
repnz
mov
mov
add
adc
sbb
lea
sbb
in
inc
divl
jbe
popf
loop
jg
and
in
test
aad
pop
jae
lret
xchg
sub
cmp
jge
mov
cmp
mov
ret
stos
iret
popa
mov
ficoml
nopl
jns
sbb
sub
mov
hlt
xchg
xor
xchg
pop
insl
outsl
into
rep
dec
sub
movsl
fwait
nop
cmp
push
fsubrs
sub
add
add
add
push
adc
das
into
cmp
imul
fmull
popa
dec
push
jb
movsl
cmp
or
xchg
fstpl
push
mov
jecxz
inc
pop
push
sar
dec
daa
ret
int
jl
loopne
cmp
rcrl
sbb
mov
jo
imul
sub
xchg
inc
in
add
stos
jmp
push
call
mov
fs
push
jb
mov
lcall
xchg
dec
fdivrs
pusha
iret
jae
pop
addr16
dec
test
in
sbb
add
ret
enter
jmp
and
sbb
call
push
roll
sbb
and
test
nop
adc
and
and
adc
cmp
dec
and
mov
or
inc
add
adc
pop
mov
push
movsb
iret
xor
xor
hlt
hlt
test
int3
clc
add
fnstenv
stos
xchg
outsb
jb
jno
and
jmp
jne
cmp
add
popf
popa
popf
test
adc
sahf
aas
jbe
aad
mov
cmp
mov
push
xchg
adc
push
imul
xor
int3
mov
movsb
sbb
loopne
inc
jle
mov
xorl
mov
addb
enter
cli
xchg
lock
stos
sbb
and
mov
jns
add
jmp
xchg
fildl
add
mov
clc
jl
cmp
rcr
fsub
mov
rcr
and
stos
push
addl
sarl
rcr
ja
data16
mov
imul
push
dec
sbb
andl
push
bound
sub
jmp
roll
push
cltd
push
aas
cmp
adc
loopne
or
cli
loopne
pushf
xor
jns
jbe
jg
push
out
popa
hlt
cmp
test
insl
jb
sbb
cltd
or
lods
pop
dec
out
jne
es
subl
sbb
out
fldl
sbb
jg
xchg
mov
mov
shl
fcoml
shr
jnp
out
sarl
mov
push
popf
ljmp
dec
mov
xor
jno
pop
aam
aaa
jp
dec
pop
into
outsl
sub
outsl
aad
pop
repnz
nop
mov
leave
and
inc
xchg
push
jne
xchg
mov
or
je
imul
bound
fstl
add
mov
sbb
enter
bound
shrb
shll
movsb
scas
pop
cld
repnz
enter
sub
xchg
and
inc
faddl
xchg
aaa
out
sub
inc
mov
dec
mov
push
pop
ljmp
ja
hlt
dec
push
mov
fsubs
scas
cmp
insb
jg
lock
add
stos
test
mov
sar
xor
shlb
inc
or
ret
ja
xor
daa
jo
inc
cmc
add
imul
mov
sahf
sarl
push
fdivs
lods
mov
jmp
outsb
push
je
sahf
sarl
cmp
adc
fucomp
mov
mov
cmpsb
sete
fmull
std
addl
rclb
jle
jo
jno
inc
popf
sub
inc
and
pop
mov
sub
sbb
jle
push
cmc
adc
or
sahf
loop
in
mov
pop
fiadds
ds
fstpt
ds
push
push
sub
bound
loopne
call
test
in
xor
fs
sub
lods
fdiv
sbb
push
inc
lods
in
sbb
fbld
mov
xor
add
je
xor
sbb
dec
mov
lds
nop
call
fwait
out
enter
xchg
sub
scas
jae
xchg
adc
out
and
sub
mov
je
cmc
lahf
hlt
jecxz
es
sbb
test
mov
jmp
fstpt
ror
sti
sub
int
push
lret
jp
push
and
mov
xchg
cmp
xor
pop
adc
lret
sbb
adc
mov
pop
stos
mov
jbe
and
test
lcall
xchg
ret
fs
sbb
call
lcall
inc
sub
test
addr16
sbb
ret
dec
jbe
pop
pop
and
pop
repnz
jmp
arpl
fwait
push
pop
out
and
jmp
aam
int
sar
aaa
mov
cmpsb
ficomps
aad
sub
push
mov
sub
mov
jmp
lea
push
xchg
scas
adc
dec
dec
das
add
xlat
xchg
test
cli
cmpsb
negl
push
push
in
mov
or
sti
jae
js
xchg
xor
lcall
test
jp
inc
add
dec
out
repz
idivl
inc
lret
add
sub
adc
pop
ja
mov
dec
mov
dec
lds
int
and
mov
mulb
or
sbb
or
sbbl
push
sub
xchg
add
out
inc
sahf
xor
popf
data16
les
pushf
xchg
xchg
fsubr
ja,pn
adc
fsubrs
mov
fstl
into
mov
mov
jns
test
sahf
inc
cltd
mov
xchg
pop
stos
iret
adc
into
in
push
cltd
aam
dec
xlat
jne
fstpt
or
scas
aas
in
sbb
xchg
pop
fistps
xchg
mov
push
lret
shrl
pop
aam
cmp
orl
mov
xor
or
sbb
out
push
mov
mov
xlat
xor
mov
sarb
jno
lret
mov
nop
cli
aas
shlb
adc
popf
fnstenv
push
inc
and
cli
lahf
fistpll
xor
out
ljmpw
and
pop
je
cli
lock
adc
inc
mov
push
lods
insl
adc
jns
mov
xchg
dec
sub
mov
jne
cmc
cs
xor
mov
cld
xchg
mov
movsb
int3
sub
add
out
dec
sbb
pushf
fcompl
cld
add
into
adc
inc
insb
and
rcrb
std
mov
mov
sbb
cltd
daa
out
insb
dec
pop
mov
jle
nop
sbb
aam
lods
repz
sar
lret
inc
in
sbb
scas
rorl
jno
sbb
lret
popa
sar
inc
loopne
shl
add
adc
cli
icebp
adc
adc
ja
scas
jg
pop
mov
mov
test
cld
ja
ss
jmp
sti
pop
lea
fadd
dec
pop
out
xor
mov
lahf
xchg
imul
sbb
mov
outsb
pop
and
mov
ss
mov
mov
mov
adc
jge
cli
or
lods
test
fcomps
int
xor
push
imul
sahf
pop
adc
cmp
sti
les
lahf
adc
mov
add
cmp
cld
mull
sub
and
push
ja
push
les
jge
xor
and
scas
add
ss
mov
sub
jl
bound
loope
iret
scas
or
cmp
cmc
jmp
mov
lock
movsl
dec
sbb
and
sbb
mov
inc
movsl
cmc
mov
es
lods
or
inc
or
rclb
cwtl
adc
add
ss
adc
add
movsl
sti
mov
push
ret
ret
lahf
mov
or
rorl
add
ljmp
adc
jl
pop
stos
ja
adc
pop
mov
into
push
adc
jecxz
and
loop
jno
cmp
push
cmp
adc
dec
jns
shl
xor
cwtl
outsl
mov
push
shll
cmp
pop
jmp
jne
movsl
xlat
xor
sub
sarl
shlb
xchg
hlt
outsl
daa
lea
inc
sub
stos
movsb
pop
sahf
fxch
call
add
jnp
es
and
mov
sti
test
loop
adc
push
push
sub
loopne
jo
fnstsw
dec
mov
adc
fcoml
aad
mov
or
pop
mov
leave
popa
xor
cwtl
fmulp
adc
popa
sub
push
add
ja
repnz
aas
fwait
mov
inc
pop
push
dec
push
hlt
mov
push
jb
popf
call
dec
inc
xchg
push
ja
std
addr16
cmp
mov
add
outsl
fildl
mov
mov
mov
xlat
inc
mov
rorl
or
outsb
daa
cli
mov
jne
insb
mov
mov
push
fistps
jno
jns
stos
call
and
repz
push
daa
dec
xchg
imul
insl
jle
scas
test
in
test
cmpsl
sahf
js
xorb
int3
mov
cmpsb
dec
fisttpl
lods
faddl
popa
mov
cwtl
xchg
cwtl
push
lods
int
call
mov
je
push
pop
iret
adc
popa
cmc
loopne
adc
adc
cmc
sbb
xchg
cli
jle
and
dec
insb
loope
arpl
ja
cmp
pop
jne
or
test
mov
and
sub
add
jp,pt
push
bound
daa
cltd
leave
jnp
cmp
jne
jno
push
pop
add
fsubp
fbstp
shrl
pop
push
daa
jae
jecxz
loopne
lock
adc
inc
stc
cld
sarb
lods
xchg
mov
scas
cltd
sub
cld
repnz
push
rcrb
arpl
jbe
andb
sub
hlt
popf
or
lret
jge
push
lret
sub
arpl
xchg
or
jge
ret
jg
and
ret
jns
js
sub
loope
mov
subl
xor
rcrl
notl
add
add
jl
scas
call
out
movsl
sahf
insl
jl
js
popa
xchg
adc
imul
rol
lock
insb
movsl
push
lea
stos
shld
scas
pop
cs
mov
mov
inc
and
mov
jmp
pop
ja
pushf
ljmp
lcall
scas
es
cmp
xlat
mov
inc
sbb
in
cmc
adcl
add
das
sub
mov
fs
pop
mov
push
test
out
inc
add
push
mov
lds
jnp
jae
leave
xchg
stos
ret
add
mov
insl
mov
mov
push
push
pushf
jl
mov
lret
xchg
xchg
notl
xchg
cltd
mov
pop
and
sbb
pusha
mov
or
test
outsl
jg
and
and
or
mov
data16
or
cmp
adc
cmp
cmp
lahf
rcl
test
xchg
mov
fisubs
mov
ficomps
rcrl
fcoms
into
les
hlt
test
in
push
ret
cmp
xchg
sub
js
shll
cld
out
mov
test
push
mov
jecxz
andl
test
stc
frstor
mov
cmp
gs
test
out
rcll
mov
test
sbb
popf
and
sbb
or
xchg
mov
inc
sub
mov
or
outsb
add
add
rcrl
add
push
inc
lahf
pop
sbb
cmp
les
pusha
sub
jnp
roll
ret
outsl
sub
in
cli
rcrb
dec
mov
pop
jae
pop
jno
into
jns
adc
sub
ds
roll
pop
mov
or
dec
scas
test
stos
xor
pop
and
mov
adc
cmp
xchg
in
xor
js
mov
pop
adc
jo
pop
jne
jne
jmp
mov
int3
sbb
scas
test
lods
sub
inc
xor
sbb
push
test
xchg
mov
cltd
cmp
andl
jp
into
loope
lret
mov
push
cli
mov
mov
mov
mov
enter
ss
stos
pop
lock
push
sti
or
in
popa
mov
pop
sub
test
daa
mov
loope
mov
xchg
out
pusha
xchg
fcoms
in
xor
mov
mov
in
pop
daa
adc
fchs
dec
push
xlat
jbe
xchg
dec
sbb
sbb
push
ror
scas
mov
imul
loope
leave
cmp
push
in
push
stos
sar
cmp
js
inc
or
sbb
insb
push
shl
jnp
insb
mov
sbb
jns
test
sti
inc
adc
push
adc
push
sub
xor
lcall
pop
outsl
xchg
and
xchg
pop
test
subb
std
int3
inc
adc
daa
mov
push
sarb
mov
out
xor
into
pop
mov
out
nop
ljmp
filds
lods
fdivrl
sbb
dec
pop
ljmp
add
push
xchg
mov
in
addr16
pop
into
inc
xchg
xor
jb
lods
test
and
jl
mov
emms
ret
out
xchg
shr
call
clc
leave
jo
jp
loopne
int
and
inc
cmpsl
in
or
mov
insb
out
shll
fsubl
jecxz
fisttpl
lret
hlt
jno
es
mull
movsb
mov
xor
adc
test
mov
mov
xlat
pop
pcmpeqw
pop
stc
xor
mov
sbb
mov
test
repz
jns
das
popa
lret
dec
lret
aaa
das
cmp
rcrb
jl
cmpsb
dec
xor
bound
ds
lahf
xor
add
cmpsb
mov
testb
clc
pop
daa
aam
mov
push
lods
and
test
fdivl
sar
mov
sub
hlt
ja
push
cmpsl
iret
loope
mov
shrl
pop
cmp
repz
cmp
fstpl
xchg
dec
loope
lret
mov
cmp
popf
insl
xor
popa
adcb
sub
push
lcall
sbb
mov
mov
adc
jb
sbb
pop
mov
movsl
inc
and
out
push
daa
mov
mov
pop
rorb
jg
jae
mov
add
mov
cld
add
mov
dec
hlt
orb
stos
fmulp
dec
jp
xchg
ljmp
popf
stos
jae
pop
fldenv
jecxz
sub
add
rorl
dec
mov
test
sbb
adc
adc
adc
rorl
test
lock
rolb
fildl
mov
lcall
popa
inc
fcoms
cmp
push
push
mov
dec
sbb
leave
out
xor
jp
xor
cmpsb
inc
xchg
fnstenv
ds
inc
add
xchg
rclb
pop
imul
ja
pop
lods
inc
push
xchg
cmp
andl
stos
nop
pop
mov
push
pop
test
mov
cmp
pushf
mov
and
divb
sub
je
stos
dec
mov
pop
clc
jno
xor
outsb
xlat
loope
outsb
jl
mov
xor
mov
jnp
pushf
jns
and
push
mov
xorb
mov
jne
and
mov
cmp
jp
outsb
add
test
scas
adc
movl
and
lods
sub
inc
lea
fmuls
dec
xchg
sbb
add
adc
inc
push
in
imul
fnstenv
xchg
push
jl
mov
lods
jecxz
xor
stos
into
nop
call
sbb
inc
cli
scas
mov
add
repz
enter
mov
lretw
data16
repnz
outsl
sahf
lret
lcall
fldenv
mov
inc
mov
cmp
pusha
push
mov
in
add
push
adc
inc
inc
pop
inc
pop
sub
inc
xor
scas
fcmovnbe
out
mov
cmp
out
add
insl
cmp
movsl
movsl
inc
popf
data16
jbe
xor
inc
rclb
or
pop
shlb
xor
add
xor
xchg
and
add
cmp
cmpsl
cld
out
test
xchg
mov
fnstenv
xor
in
aaa
ret
pop
and
inc
pop
rorl
aam
cld
xchg
cmp
adc
imul
sub
mov
cmp
call
or
mov
mov
sub
sahf
push
add
mov
shrl
sub
cmc
out
add
and
pop
jnp
clc
inc
pop
mov
cmpsb
stos
mov
call
xlat
dec
push
stc
rcrl
push
test
jo
icebp
shll
inc
ret
test
cmc
and
push
lahf
test
dec
les
jnp
fsts
xchg
sbb
movsb
mov
mov
andb
sbb
and
xor
push
pushf
xor
or
test
sti
jno
sbb
lret
enter
fldt
add
outsl
movsb
nop
jl
cmp
leave
mov
dec
stos
mov
clc
addr16
xchg
mov
in
test
sbb
inc
fildl
bound
add
cmc
idivl
test
repnz
sbb
jmp
push
lcall
test
cwtl
sbb
jne
push
std
incl
arpl
call
jne
jns
sub
mov
rcrl
rcrl
cmp
cs
sub
cwtl
push
inc
outsl
scas
mov
add
or
enter
insl
adc
jge
pop
dec
xchg
sub
cs
and
out
test
xchg
xchg
push
add
popa
out
pop
dec
adc
or
xor
inc
aaa
sub
add
mov
int3
faddl
push
push
stos
adc
rcrl
pminsw
xor
das
jne
fcmovbe
mov
xor
push
mov
pop
rclb
lcall
call
lahf
add
dec
fisttpl
dec
out
add
sbb
cwtl
cmp
xchg
js
or
inc
jns
mov
sar
test
lods
push
mov
adc
and
js
and
xchg
push
or
pop
mov
rcll
nop
test
sbbb
sub
or
movsl
lods
out
mov
inc
xor
and
lret
fidivrl
fadds
xor
jno
adc
xorl
mov
movsl
add
leave
jb
or
es
lcall
fdivr
xor
fcmovnbe
divb
add
pop
pushf
or
xor
jmp
xchg
fdivr
jo
jl
call
mov
sub
cmpsb
mov
pop
in
sub
sbbl
add
stos
int
cmp
add
mov
out
in
mov
fistps
dec
mov
dec
push
ret
ss
fsubrl
jecxz
cmp
shll
loope
sbb
movsb
loope
pop
inc
dec
loope
cwtl
insb
cld
mov
sub
bswap
int
imulb
pop
xlat
repz
es
mov
xchg
push
add
mov
mov
adc
sbb
call
cmc
cmp
add
inc
add
or
sahf
ja
scas
stos
jae
mov
sub
movsb
lret
mov
jnp
and
leave
roll
lds
shll
add
cmp
clc
dec
sbb
call
or
and
push
or
int3
adc
sti
jo
movsb
movsb
xor
dec
push
push
insl
test
es
insl
mov
cs
jns
xor
add
xchg
mov
fldl
inc
mov
xchg
rcrb
jno
movsl
push
outsb
xchg
jbe
push
out
sub
clc
xchg
pusha
data16
test
sub
adc
fs
jbe
movsb
jl
loope
mov
or
cli
mov
repnz
es
imul
fninit
ja
stos
popf
out
stos
jge
js
push
jg
mov
sti
cmp
xorb
inc
lret
addl
sub
inc
mov
popf
jno
jle
xlat
mov
add
dec
aas
mov
xchg
dec
mov
insl
mov
stc
xor
xlat
ret
jg
inc
cmp
lcall
cmc
int
divb
addr16
fcomps
sbb
shrl
icebp
std
cmp
inc
fidivrl
jns
jge
js
call
jle
stos
aaa
loop
xchg
xchg
mov
imul
cmp
in
push
cltd
mov
xor
mov
adc
out
sub
push
mov
popf
xor
adc
out
fmuls
mov
outsl
push
dec
shrb
clc
js
cwtl
fnstsw
int3
xlat
in
nop
test
in
cs
sbbb
cli
cli
push
arpl
movsb
pushf
int
adc
fcoms
out
dec
xor
insb
mov
je
jge
loope
shlb
mov
add
fstl
mov
out
cmp
popf
jae
xchg
leave
pop
pop
inc
pop
mov
cwtl
lahf
loopne
les
add
jno
gs
imul
bsf
loop
cmp
in
mov
mov
jmp
xchg
jp
xchg
cmpsl
js
pop
cmp
xchg
imull
dec
xor
bound
fwait
andl
mov
je
icebp
sub
dec
cmovl
nop
insb
fmull
mov
and
add
jbe
imul
pop
notl
xchg
arpl
call
fnstenv
xchg
lock
cmp
cltd
and
aas
lahf
mov
addl
dec
aaa
adc
sbb
push
adc
inc
imul
sub
ds
shl
lea
jg
pop
sbb
fucom
sub
loop
jbe
mov
inc
jg
and
jb
cmp
xor
sub
mov
push
and
jp
or
stos
pop
mov
lods
lods
test
shlb
iret
mov
mov
and
cmp
xchg
cmp
push
fwait
mov
gs
int3
call
pop
push
aad
test
add
and
movsb
mov
and
outsl
pop
inc
scas
cmp
mov
negl
inc
aas
xor
addl
pop
adc
repz
test
mov
jge
jnp
aad
stos
in
sbb
push
fcoms
cld
push
jg
pop
xor
pop
fwait
loopne
jl
push
call
imul
jae
sbb
jg
sti
mov
fwait
sub
jno
mov
mov
xchg
and
pop
xchg
icebp
data16
push
xchg
fsts
sbb
or
mov
adc
mov
inc
dec
cli
mov
out
icebp
xchg
xor
pop
into
aas
and
in
cmpsb
ss
dec
sub
xor
stos
in
fucompp
mov
in
ret
push
into
push
push
mov
in
jb
and
mov
mov
sub
sbb
das
filds
cmp
scas
sbb
jb
stc
popf
pop
idivb
gs
pusha
xor
movsb
gs
xor
movsb
or
cmpsb
fwait
insb
andl
mov
lods
jle
inc
imul
sub
push
lods
xor
sub
out
mov
data16
enter
fiaddl
into
xchg
es
in
lds
fwait
pop
lret
mov
ror
pop
subb
out
and
out
popf
mov
mov
inc
loop
and
ja
repnz
and
loop
pushf
mov
jns
in
mov
inc
les
add
stc
add
int
fdivrl
cmc
dec
xchg
adc
bound
xor
outsl
fisttpl
movsl
jo
clc
loopne
xchg
or
cmp
sbb
cmp
cs
mov
daa
push
sbb
xor
or
inc
adc
cld
jns
adcl
dec
fcom
sbb
imul
dec
push
dec
add
ja
test
and
lret
mov
popa
roll
mov
aaa
pushf
arpl
sti
add
ja
ud1
imul
pushf
add
mov
jle
xor
jp
test
repnz
mov
mov
mov
aas
adc
inc
popa
xor
loopne
std
add
cmp
les
in
push
pcmpeqd
lods
lds
push
pop
or
fs
sahf
ss
into
cld
dec
outsl
je
testb
add
add
adc
xor
mov
xchg
lahf
je
es
add
fldcw
push
or
add
inc
es
push
dec
mov
push
pop
inc
addl
cmp
cs
outsb
sti
iret
pop
sub
inc
addl
shl
clc
gs
pop
sbb
in
inc
or
imul
push
cmpsl
pop
add
pop
pushf
jge
pop
cld
test
lods
cmpsl
js
jbe
popf
cmp
push
or
inc
and
ret
fistps
mov
sbb
ss
rorl
adc
repz
cld
xchg
jp
cwtl
adc
cmpsb
add
fisttpll
lds
mov
jmp
jae
lds
in
lods
push
inc
pop
shrl
sub
push
dec
mov
push
aaa
movsl
pop
data16
mov
imul
repnz
lds
je
lock
xchg
ljmp
adc
outsl
mov
imul
mov
repnz
sub
mov
dec
xchg
mov
jecxz
xchg
mov
cltd
and
mov
xchg
mov
in
adc
or
push
and
mov
inc
xorb
mov
dec
jae
inc
push
int
or
and
int3
mov
lods
xchg
call
jns
jns
xchg
inc
lds
cmp
mov
cmp
sarl
mov
scas
bound
push
sbb
push
xchg
test
movsl
jno
ret
cmpl
cmp
imul
inc
fwait
sub
or
lcall
push
arpl
lds
fsubrs
inc
adc
pushf
xor
mov
mov
out
mov
dec
sub
cs
shlb
or
dec
push
testb
shll
stc
repz
mov
jne
pusha
push
cli
push
aad
sub
imul
push
cmc
divb
add
lea
mov
js
add
or
xchg
sbb
daa
shl
lahf
fidivrl
pop
push
jo
cmc
mov
sbb
xchg
adc
dec
dec
cmpsb
andb
sbb
sub
pop
mov
push
add
push
in
out
xchg
iret
pop
mov
mov
imul
pop
es
xor
pop
mov
xor
mov
mov
cld
out
add
lret
int3
movb
outsl
adc
cmpsl
shll
outsl
push
test
popf
cs
leave
add
lds
xchg
add
mov
add
push
mov
inc
inc
data16
test
jnp
or
mov
stos
in
int
pop
xor
xchg
jl
stos
call
dec
scas
ss
and
jle
xchg
mov
in
xor
stos
out
loopne
mov
leave
push
mov
addr16
inc
insb
cli
jecxz
pop
xchg
mov
xor
mov
mov
test
inc
inc
add
sbb
xor
jne
xlat
test
movsb
mov
mov
push
push
push
mov
iret
repnz
mov
rcl
xchg
fcomp
sbb
or
xchg
stc
push
and
in
cmp
add
inc
mov
icebp
and
lret
mov
inc
stos
jb
jge
mov
mov
rolb
fdivr
lret
fisubs
inc
int
mov
nopl
mov
test
and
ror
inc
sub
sub
and
popl
xchg
out
ds
adc
test
cmp
cld
add
icebp
dec
loope
push
jmp
out
add
shll
rorb
js
dec
jg
xor
push
clc
adc
mov
lahf
add
add
in
mov
int
sbb
loopne
popf
mov
push
and
dec
mov
lahf
pop
pop
test
jecxz
mov
add
xchg
xchg
cmp
sahf
test
jne
jb
jl
mov
push
repz
mov
dec
mov
pop
sbb
fwait
add
jecxz
aam
in
shl
psadbw
jp
xchg
mov
dec
mulb
sbb
loop
or
sbb
fnstsw
sbb
mov
notb
jns
mov
mov
cmpsl
fisttps
cmp
sysexit
dec
mov
jmp
mov
pop
jae
in
lret
clc
inc
fwait
cwtl
test
add
leave
sbb
or
loop
out
fistpl
iret
in
sbb
inc
sbb
packsswb
xchg
mov
pop
xor
stc
or
and
fnsave
add
notl
pop
jmp
fiaddl
cmp
xchg
mov
repz
push
sbb
inc
dec
lcall
add
push
ljmp
inc
faddl
adc
sahf
mov
push
ljmp
rorl
arpl
xor
jo
js
xor
xlat
push
iret
sahf
repnz
or
addr16
push
or
inc
mov
push
mov
cmp
test
mov
fildll
cmp
push
test
xchg
xor
fdivl
sbb
pop
imul
in
jno
imulb
inc
mov
test
dec
ja
xor
jmp
test
pop
jecxz
in
inc
enter
mov
pop
popa
xor
clc
cmc
or
mov
cmc
push
mov
orl
xor
xchg
fcoml
mov
fdivl
mov
jmp
inc
mov
ds
cmpb
inc
mov
movsb
test
xor
pop
and
in
rcl
push
inc
push
cmp
int3
scas
cld
into
push
nop
push
lahf
ljmp
cmpl
inc
mov
pop
mov
xchg
mov
mov
in
dec
or
lods
clc
xchg
in
cmpsb
adc
pop
or
stc
inc
push
inc
push
sub
push
mov
rcrb
in
jmp
pusha
sbb
cmp
push
es
jbe
xchg
push
push
rcl
inc
jl
fsub
fcomi
gs
scas
dec
pop
mov
fisubl
enter
fldl2t
ljmp
rorl
pop
add
test
jmp
cmp
mov
addr16
mov
lods
shrb
aam
xor
mov
insl
popa
addr16
imul
push
push
mov
js
roll
add
xlat
outsb
dec
pop
outsl
scas
xchg
pop
dec
mov
icebp
jnp
xchg
gs
loope
pushf
pop
aam
push
push
dec
push
shll
into
jno
stc
jle
aas
testb
mov
jmp
push
fisttps
cmpsl
cmpsl
jl
push
cmp
out
fsincos
mov
pop
sbb
jno
leave
das
shl
filds
add
cmp
dec
mov
cmp
inc
mov
mov
lods
push
sub
jne
insb
in
out
jecxz
push
popa
or
popa
add
subl
bound
lahf
dec
insl
pusha
into
cmp
push
enter
mov
outsl
pop
mov
adc
fdivl
mov
dec
push
mov
pop
sbb
fdivl
repnz
inc
inc
in
shrb
cmpsl
in
nop
mov
mov
and
mov
jl
sbb
mov
shll
mov
lret
inc
sbb
ret
jmp
push
and
cmp
shl
inc
cmp
mov
out
mov
lahf
dec
jo
nop
dec
das
or
cmp
jne
sarb
mov
xchg
pop
ja
inc
lahf
in
lods
test
mov
add
adc
push
sub
or
xor
movsl
ljmp
test
les
mov
sbb
fildl
jns
mov
dec
push
adc
into
dec
mov
sahf
aam
test
push
pop
nop
dec
sbb
sti
arpl
push
bnd
sbb
mov
add
repz
add
mov
fimuls
mov
aaa
xchg
sub
mov
add
mov
cmc
add
dec
ror
pop
scas
in
add
bound
mov
sub
fisttps
mov
aas
xchg
jnp
iret
daa
int3
das
jg
stc
daa
and
sarb
fcoms
in
xchg
in
add
xor
in
in
sbb
xchg
lret
jle
push
mov
or
int3
push
adc
idiv
mov
xchg
loopne
sahf
pop
jecxz
inc
dec
xor
sub
dec
clc
outsb
insl
lods
clc
jnp
mov
addr16
scas
ret
hlt
movsb
sbb
ds
sub
pop
pop
in
xor
mov
adc
jp
pop
push
pop
aaa
test
popf
mov
arpl
ljmp
jle
xchg
call
test
pop
cmp
mov
mov
pop
add
inc
push
mov
push
orb
imul
lret
mov
sbb
push
out
xchg
out
inc
insb
jae
adc
sub
hlt
lods
push
mov
shlb
add
or
notb
aam
jmp
jo
xor
xlat
mov
jmp
sahf
aad
aaa
pop
in
daa
fisttpll
addr16
xchg
cmp
mov
repz
push
mov
daa
jmp
rcl
mov
xacquire
idiv
or
mov
lahf
subl
icebp
add
sti
jns
or
movsl
adc
push
out
mov
inc
pop
adc
das
jno
jg
mov
test
insb
or
testb
or
test
mov
dec
cmpsl
js
je
or
fsts
fadd
imul
inc
es
jno
pop
and
mov
lods
arpl
dec
and
mov
fnstsw
cmp
in
stc
test
xchg
xor
sub
lea
adc
push
inc
mov
outsb
loope
into
test
mov
mov
fwait
xchg
add
sti
ja
pop
or
out
fucomp
mov
sti
in
bound
mov
insb
je
jne
mov
xchg
test
movsb
cld
pop
stos
aad
je
psllw
mov
push
cmp
dec
int
inc
inc
mov
add
rolb
into
pop
stos
pop
mov
lods
jae
lods
aad
clc
push
dec
icebp
cmp
ret
das
add
lods
andb
push
ret
add
out
add
lahf
fcmovnb
jo
sub
bound
xor
inc
jno
ret
out
dec
std
out
inc
pop
adc
popf
aaa
lret
scas
mov
pop
push
adc
in
pop
xchg
cld
cmp
dec
sti
mov
out
xchg
rcrb
push
cmp
mov
out
sub
rorl
outsb
jne
and
aad
inc
push
das
jp
lret
and
stc
add
pop
adc
mov
jecxz
cli
xchg
sub
push
fcoms
push
sbb
cli
loope
dec
insl
cmp
xor
popa
push
fldenv
hlt
dec
jne
fwait
push
mov
scas
push
jl
ja
cwtl
or
inc
push
gs
mov
rorl
dec
mov
jecxz
xor
lock
outsb
popf
fwait
add
daa
in
rclb
pop
ret
push
add
or
push
push
push
xchg
pop
mov
rolb
fmull
daa
icebp
mov
push
out
pop
xchg
sbb
mov
dec
cltd
cmpsb
ret
xor
push
push
ret
fwait
rclb
xchg
sbb
and
repz
pop
cmp
je
push
aad
ror
inc
adc
xor
nop
fwait
xchg
fnstsw
popa
cmp
sbb
outsb
cli
push
neg
mov
mov
xchg
sub
fiaddl
inc
inc
add
xchg
cs
sub
sub
in
fucomi
jmp
sahf
or
rcll
call
sbb
movzbl
dec
int3
jnp
pop
mov
int
popa
enter
cmp
dec
push
lods
inc
fdiv
shll
imul
hlt
jnp
aam
or
push
sahf
fadd
lods
mov
mov
adc
jbe
mov
imul
call
or
lahf
rcl
pop
ds
pop
out
mov
rcr
inc
sub
cmc
cmpsl
jbe
xor
pop
or
aad
andps
insl
inc
mov
insl
rolb
xchg
dec
faddl
dec
fistpll
or
cld
add
notb
mov
repnz
nop
lret
and
push
lods
fimull
inc
xchg
or
or
lret
scas
addl
ss
adc
cmp
inc
mov
inc
movsb
fwait
rorl
jg
pusha
inc
cmp
ficomps
and
jle
int3
shl
sbb
shrb
ss
and
pusha
adc
push
iret
dec
cmc
jmp
imul
pop
jge
addr16
mov
out
js
out
enter
stos
add
xchg
mov
pop
fistps
je
andb
xchg
addb
imul
pop
es
dec
lock
and
outsl
mov
push
pop
