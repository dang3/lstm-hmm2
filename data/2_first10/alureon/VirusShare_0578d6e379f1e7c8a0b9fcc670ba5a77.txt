push
mov
sub
sub
lea
push
mov
mov
mov
mov
rep
mov
call
movzbl
mov
lea
cmpb
jne
push
push
push
movb
call
mov
mov
mov
movzbl
imul
xor
lea
test
decl
jne
push
push
push
mov
call
mov
mov
cmp
jne
movzbl
push
push
push
call
pushl
push
push
call
xor
sub
pop
leave
ret
push
push
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
add
movzwl
movzwl
incl
addl
addl
add
cmp
jb
pop
pop
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
push
add
pop
cmp
jb
pop
pop
xor
lea
test
ret
push
push
pushf
rdtsc
pop
imul
add
mov
and
ror
xor
pop
pop
ret
push
mov
sub
sub
push
push
mov
mov
mov
mov
mov
add
push
mov
mov
xor
call
mov
shr
xor
not
rol
movzwl
add
add
test
sub
push
lea
pop
mov
mov
mov
call
mov
mov
mov
mov
sub
add
mov
lods
xor
stos
add
sub
sub
add
add
ror
sub
jne
mov
mov
sub
add
mov
mov
imul
mov
neg
add
add
mov
add
mov
mov
imul
add
sub
add
and
add
movl
mov
mov
lea
mov
call
mov
add
mov
xor
add
decl
mov
jne
addl
sub
subl
pop
pop
pop
leave
ret
test
je
test
je
test
je
jbe
push
sub
mov
mov
mov
add
sub
jne
pop
mov
ret
xor
ret
push
xor
call
lea
test
jbe
push
movzwl
imul
add
lea
test
jne
pop
test
jns
add
add
and
or
mov
ret
push
mov
add
sub
push
xor
push
mov
call
lea
push
push
mov
call
push
mov
call
test
jne
push
mov
call
pop
test
jne
push
push
mov
call
pop
pop
test
jne
cmpl
jae
movzwl
test
jne
testl
jne
push
pushl
pushl
pushl
call
jmp
push
push
push
push
call
push
mov
call
jmp
push
push
mov
mov
mov
add
add
sub
mov
lods
xor
stos
add
sub
add
sub
add
ror
push
add
pop
jne
push
push
push
mov
call
pop
pop
test
je
idivb
push
lea
push
push
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
xor
pop
leave
ret
push
mov
sub
cmp
sub
push
mov
mov
add
mov
test
jne
push
add
pop
jmp
andl
push
lea
lea
cmpl
push
je
mov
mov
add
push
mov
call
mov
test
je
mov
andl
add
cmpl
je
mov
pushl
pushl
call
test
je
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
imul
lea
lea
cmpl
jne
xor
push
add
pop
pop
pop
pop
leave
ret
xor
jmp
mov
xor
cmp
je
inc
add
cmpb
jne
ret
push
lea
sub
add
sub
push
push
xor
push
cmp
je
mov
jmp
push
mov
call
push
push
push
mov
push
mov
call
mov
push
mov
call
test
jne
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
in
push
push
mov
call
jmp
cmpl
jbe
push
push
pushl
mov
call
cmp
je
cmpl
jne
lea
push
call
pushl
mov
pushl
mov
mov
call
mov
sub
mov
mov
add
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
mov
mov
add
add
push
and
add
push
call
mov
mov
add
mov
mov
mov
add
movzwl
lea
add
mov
movzwl
lea
push
mov
mov
call
push
call
lea
push
push
push
push
call
mov
sub
xor
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
test
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
cmpl
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
jne
lea
push
mov
call
mov
andl
mov
sub
cmpl
jbe
lea
mov
mov
mov
addl
subl
add
add
incl
mov
cmp
jb
push
call
test
je
cmpl
je
mov
mov
call
mov
add
mov
push
lea
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
mov
addl
addl
push
pop
rep
mov
add
add
test
add
mov
mov
movzwl
lea
test
cmp
jb
pushl
mov
pushl
pushl
pushl
call
pop
pop
pop
add
sub
leave
ret
push
push
push
push
mov
call
mov
jmp
push
mov
sub
test
add
mov
add
mov
push
xor
mov
cmp
je
add
add
sub
cmp
je
mov
push
cmpl
jne
mov
mov
add
push
mov
call
mov
mov
call
push
pushl
call
test
je
mov
mov
add
jmp
cmp
je
push
add
pop
mov
test
jne
jmp
lea
push
mov
call
push
call
lea
push
push
push
push
call
mov
mov
addl
cmp
addl
mov
cmpl
jne
pop
pop
leave
ret
push
mov
mov
mov
sub
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
andl
cmpl
jbe
jmp
mov
mov
mov
mov
add
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
test
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
cmpl
jb
push
push
push
mov
mov
mov
sub
add
mov
lods
xor
stos
sub
test
add
sub
sub
add
ror
sub
jne
pop
pop
pop
pop
ret
lock
add
xor
add
and
pop
dec
adc
sar
jns
dec
mov
add
scas
pop
mov
cmc
roll
ds
out
jmp
call
pushf
lods
xchg
bound
repz
jne
cmp
mov
jmp
dec
mov
sub
push
xchg
mov
cmp
stc
cmpsb
insb
fistl
mov
sbb
cmp
jnp
enter
push
outsb
jbe
push
test
push
outsl
mov
and
inc
icebp
push
cltd
aaa
jne
or
data16
popa
sub
std
jno
loop
arpl
hlt
push
mov
mov
pusha
adcl
mov
push
imul
cli
out
and
popf
sbb
xchg
adc
jno,pt
cs
cmp
jno
jae
pop
and
lret
shlb
sub
ret
pop
repnz
jne
or
pop
inc
aam
adc
inc
xchg
leave
sub
rclb
fistpll
mov
fistl
push
xor
pop
movb
dec
xchg
dec
ret
into
arpl
jecxz
adc
rorb
or
cmp
mov
xchg
cmpsl
pop
xor
hlt
insl
and
sbb
jmp
mov
adc
movsb
adc
mov
call
push
in
push
loop
mov
jl
add
sti
aam
push
sub
pop
push
mov
mov
sub
fdivrl
mov
clc
inc
mov
sahf
and
push
popa
lock
bound
in
xchg
mov
jbe
pop
dec
lahf
and
pop
dec
add
jl
sbb
and
jno
cmp
pusha
xchg
in
pop
leave
stos
cmpsl
sub
mov
mov
inc
dec
test
jno
adc
nop
mov
mov
cmp
push
and
and
mov
sbb
push
inc
popf
adc
stos
xor
cld
jl
test
or
sub
sbb
cmp
xorl
jp
dec
mov
add
xchg
inc
aas
dec
clc
into
mov
dec
xchg
aaa
sub
inc
jecxz
mov
popw
fldl
sbb
cwtl
imulb
sbb
xchg
cmp
fsts
ja
ds
lcall
loope
enter
lock
mov
mov
xchg
jno
xchg
test
push
jae
mov
fcomps
cmc
pop
into
roll
adc
xlat
push
data16
pop
aad
addr16
xchg
fwait
push
push
mov
xchg
adc
push
add
mov
pop
inc
shll
insl
jae
sub
mov
inc
lea
popf
mov
inc
stos
mov
mov
addl
dec
mov
pusha
adc
mov
dec
repnz
adc
mov
cmp
icebp
xchg
cmp
aas
dec
scas
adc
push
jp
popa
xchg
lcall
or
xchg
repnz
out
insl
cld
mov
cmp
and
lcall
mov
or
jnp
xor
arpl
repnz
and
imul
adc
jne
pop
daa
mov
or
scas
mov
insb
sti
insl
in
cwtl
ret
das
adc
cs
pop
mov
mov
jge
pop
jne
xor
push
inc
inc
lock
mov
imull
sti
shlb
add
inc
movsl
sbb
xor
adc
test
adc
les
incl
mov
and
mov
xchg
repz
cmp
insl
mov
push
xor
add
not
fisttpl
sbb
je
adc
fdivrl
mov
cmp
mov
jne
popa
add
insl
hlt
xchg
cmp
test
jmp
data16
pop
push
daa
and
test
or
enter
or
pop
ret
or
jg
push
inc
push
xchg
sbb
and
cmpsl
ljmp
xor
ret
and
inc
in
push
filds
data16
popf
cmp
add
xchg
mov
cmpsl
cwtl
cltd
fadds
dec
std
movsb
push
adc
dec
lahf
push
cs
rorl
lcall
lret
xchg
mov
xor
pop
sbb
mov
push
add
mov
mov
jmp
fisttpll
test
les
xor
fisttps
and
pop
pop
fisubrl
jecxz
hlt
in
mov
push
ja
and
lock
test
ficoml
xchg
inc
iret
cmp
push
xor
mov
or
pop
clc
push
add
popf
pop
loop
dec
pushf
mov
cwtl
es
jnp
mov
sbb
dec
test
push
push
fisubs
or
jo
dec
es
jg
sub
mov
pop
jl
inc
adc
outsl
hlt
sbb
daa
ja
xor
movsl
imulb
sub
pop
jns
push
daa
test
push
idivb
xor
rorl
push
mov
lcall
imul
xchg
sub
dec
lcall
xchg
push
ret
cmp
mov
daa
lret
stos
neg
dec
sub
shlb
xchg
add
lds
lock
inc
ret
in
add
and
addr16
jb
sbb
add
test
lret
sub
inc
movl
xchg
or
xchg
fs
jb
dec
fcoml
rdtsc
dec
mov
nop
pop
pop
jecxz
xchg
pop
shrb
pop
add
and
or
cmp
or
inc
cmp
mov
test
sbb
cmp
push
aam
sbb
jle
mov
shll
push
lods
push
and
sbb
cmp
les
sub
cltd
cltd
out
stos
mov
mov
stc
mov
ss
adc
or
adc
mov
and
adc
in
xchg
fistl
in
in
mov
push
outsb
xchg
inc
xor
or
lock
imul
call
add
sub
push
mov
add
fbld
outsl
cli
inc
inc
pop
or
outsl
xchg
leave
xlat
outsb
int
imul
loope
shlb
mov
nop
fwait
xchg
cmp
push
cld
inc
ret
scas
add
mov
mov
hlt
mov
outsb
out
cs
in
push
push
jl
and
jnp
sub
cs
or
je
mov
in
sbb
test
outsb
inc
pop
outsl
adc
fldpi
jle
test
xchg
cmc
jo
mov
out
xchg
fldl
sti
mov
ss
aad
and
faddl
push
sbb
pop
xchg
push
push
icebp
cwtl
sub
xor
data16
cmp
sbb
pop
insb
jecxz
popa
jecxz
mov
rolb
ds
rclb
sbb
pop
pop
mov
aam
into
and
xchg
xor
mov
fcomi
jo
insl
sub
lcall
stc
mov
pop
int
fnstcw
in
mov
pop
push
gs
popf
or
jo
repz
lcall
arpl
ds
or
arpl
xor
insl
or
push
lret
insb
scas
sbb
pop
push
jge
movsl
jl
push
frstor
add
hlt
repnz
daa
mov
and
nop
xor
ret
mov
pop
sub
xorl
popf
sti
and
xor
leave
xchg
mov
pop
in
in
cld
sbb
jne
cld
sub
adc
dec
ss
xchg
mov
mov
jp
in
lock
mov
sahf
test
mov
dec
mov
ds
jns
scas
dec
scas
xor
sub
mov
and
xchg
fst
mov
inc
es
jb
and
sarl
cld
jp
cld
sahf
shrl
jp
cmp
cmp
fsubrl
scas
sub
adc
std
mov
or
rcr
mov
mov
push
sbb
xchg
jl
and
repnz
sti
pop
rcrl
mov
fisubs
inc
dec
sbb
adc
sahf
xor
addb
popf
pusha
stc
ss
lds
mov
pop
out
in
sbb
nop
jmp
dec
mov
xor
dec
dec
inc
adc
fidivrs
je
sahf
testl
int3
pop
dec
int
sub
inc
mov
sub
mov
fdivrs
dec
loopne
push
sbb
xchg
pusha
mov
out
fiadds
jecxz
les
test
les
dec
pusha
and
ljmp
cs
ret
insb
sbb
mov
aam
sub
mov
stc
ss
call
stos
dec
int3
push
dec
loopne
out
insb
xchg
repnz
cltd
fsubl
push
sbb
and
arpl
inc
cmpsl
sahf
cmp
and
push
test
jp
pop
xchg
mov
std
sub
inc
ret
and
push
subl
jns
mov
push
arpl
sbb
in
sti
ljmp
nop
outsb
ljmp
fbld
into
add
dec
sbb
outsb
aam
addr16
and
adc
xchg
mov
push
pushl
mov
or
jp
leave
ds
sub
sbb
or
call
add
inc
fisttps
insl
push
aaa
outsb
icebp
dec
push
hlt
cld
xlat
cmp
clc
ret
jnp
fstl
clc
jmp
or
or
repnz
mov
lahf
push
imul
cltd
xchg
out
pop
mov
adc
lret
adc
sub
scas
daa
addr16
cltd
jno
add
mov
jnp
dec
sti
lret
addr16
cltd
mov
into
jns
and
add
and
loope
push
imul
or
mov
es
xor
xor
mov
and
sub
and
shll
xchg
push
loopne
xor
sub
lods
lods
push
in
movsl
mov
scas
sub
iret
mov
roll
roll
loop
imul
lods
adc
out
and
mov
jne
ret
mov
insl
push
rcrl
adc
movsl
xchg
jge
mov
mov
cmp
dec
jmp
adc
sbbb
xchg
xor
mov
cmp
subl
aas
mov
jnp
cmp
insb
sbb
pop
bound
stos
sub
mov
adc
xchg
into
jge
xchg
icebp
fisubrs
outsb
bound
enter
add
inc
pop
push
and
pusha
dec
mov
aas
cltd
lret
pop
imul
popa
dec
pop
jmp
mov
add
xor
pusha
int
pop
xchg
lret
mov
jae
nop
xchg
or
add
push
cmp
lret
mov
mov
inc
imul
inc
mov
out
mov
jle
sub
xchg
testl
ja
or
or
mov
push
jl
repz
shl
mov
mov
les
pop
xchg
xorb
xor
dec
xchg
or
popf
inc
subl
xchg
xchg
mov
pusha
and
cs
and
dec
test
fiaddl
xor
xchg
push
outsb
sub
inc
dec
je
dec
inc
test
arpl
pop
je
sbb
sub
xchg
lods
cld
test
testl
mov
and
mov
lods
pop
jae
push
and
and
xlat
les
sub
mov
fistl
sahf
in
jmp
imul
rclb
gs
jb
mov
sub
xchg
dec
lea
lcall
add
inc
lahf
mov
aaa
ficoml
sbb
daa
andb
sub
shll
hlt
mov
mov
ds
repnz
aam
int
loop
repnz
popf
decl
mov
jne
subl
or
arpl
mov
cmpsl
or
sub
in
and
xchg
adc
sbb
mov
aaa
xlat
in
adc
inc
test
add
xor
add
xchg
xchg
sbb
mov
test
mov
jo
test
jnp
push
pop
out
or
xlat
out
aad
cmp
mov
test
adc
mov
arpl
loop
pop
roll
dec
jmp
sarb
fisubrs
xor
addr16
cmpsl
xor
aas
idivb
fcmovnb
pop
or
leave
sub
xchg
fldl
and
sbb
out
push
ficompl
xlat
jbe
mov
out
int
sbb
fdivrl
clc
ret
cmp
add
adc
pusha
addr16
adc
int
jne
adc
add
inc
pop
shl
jmp
fdivs
and
repnz
pop
sub
xor
mov
adcl
dec
mov
sub
cmp
arpl
aaa
xor
into
sub
add
in
arpl
xor
add
call
pop
jge
mov
fsub
fisubrl
not
cvtps2pd
push
lods
test
jne
cmc
cld
shll
xchg
daa
rorb
shlb
and
sbb
ficomps
cs
mov
inc
and
cmc
sbb
or
sbb
cmp
pop
xor
jno
popf
cli
xchg
lods
xor
cmp
mov
dec
mov
mov
fiaddl
mul
mov
jle
push
flds
leave
insl
outsb
jg
outsb
push
out
lea
seto
jge
jle
sbb
inc
adc
test
imul
cmp
clc
push
sbb
inc
loopne
aam
fbstp
pop
dec
mov
roll
mov
jp
movsb
fcoml
adc
lahf
or
sub
jp
add
and
mov
insl
pop
sbb
iret
stos
sub
xchg
fildll
es
lods
js
sahf
popf
push
pop
in
dec
leave
pop
xorl
xor
push
sti
ds
clc
add
mov
pop
cmp
insl
pop
cmp
dec
push
jl
add
pop
adc
adc
es
jo
rorb
jno,pt
push
test
aas
movsl
pop
inc
es
lods
shrl
loope
pop
xchg
or
fwait
test
mov
jmp
push
jbe
les
cmp
mov
repz
rolb
shlb
daa
add
push
dec
cltd
test
cmp
ja
aam
jp
icebp
hlt
imul
mov
sub
movsl
push
add
or
inc
test
scas
arpl
ljmp
addr16
out
jmp
jne
mov
mov
enter
stc
movsb
or
cmp
push
adc
movsb
aas
fcmove
in
popa
fldenv
xchg
loop
ror
or
mov
and
or
movsl
push
stos
pop
dec
mov
lcall
and
dec
fcomps
push
jge
mov
add
sbbb
std
daa
or
cld
insb
or
lret
pop
jecxz
mov
in
or
sbb
decl
sbb
fildl
mov
sbb
fucomp
outsl
jbe
fucomip
mov
dec
jae
sarb
sbb
xchg
jo
xchg
push
ficoml
mov
mov
mov
sbb
lret
jge
popf
jp
dec
jmp
pop
aam
in
jo
out
adc
jmp
stos
xor
outsb
call
pushf
sbb
inc
inc
sbbb
into
ret
addr16
dec
cli
rol
iret
adc
xlat
xor
jne
xor
std
add
in
jge
cmpsb
loope
clc
aaa
dec
sbb
fcmovnbe
jbe
or
pop
popl
sbb
repnz
mov
inc
or
add
xor
jp
push
mov
dec
cmp
pushf
test
movsb
cmp
jno
ja
rorl
cmp
jbe
ds
in
or
stos
pop
lods
les
mov
int
dec
jnp
dec
pop
fistl
fstpt
push
movsb
enter
das
loope
push
scas
insb
pop
aaa
aas
ret
stc
cmp
cmpsl
jae
sbb
outsl
aas
mov
mov
push
mov
sbb
inc
aad
xchg
ljmp
dec
and
push
sub
shll
inc
test
xchg
fsubs
push
lret
sub
cmp
lret
sbb
arpl
push
ljmp
cmc
popf
sbb
adc
cmpsb
ds
xor
imull
ljmp
mov
pushf
stos
push
adc
pop
xchg
inc
icebp
or
cmp
sub
pop
sub
push
fsubl
sub
inc
and
push
arpl
or
int3
int
mov
aam
les
shlb
lock
adc
loope
std
cmc
cmp
push
sub
test
lret
push
lea
sahf
rolb
sahf
mov
aaa
sub
sub
jl
enter
xor
outsl
jb
ret
ja
jb
lods
aas
inc
mov
frstor
mov
jne
ja
adc
and
inc
pop
pop
gs
jne
sub
popa
pop
mov
dec
jmp
icebp
adc
push
xchg
out
rol
xor
pop
aam
inc
xor
xlat
or
pusha
test
pop
filds
out
xor
push
je
dec
jle
and
movb
out
in
in
inc
sub
mov
fdivr
cvtdq2ps
scas
mov
int
sbb
mov
cltd
cwtl
inc
int
mov
or
xchg
das
cltd
dec
pop
sub
ljmp
mov
loope
mov
loope
lods
out
xchg
into
sub
cmp
sbb
jno
jmp
dec
push
mov
xchg
xlat
jns
jmp
jge
test
xchg
imul
cld
imul
cld
loopne
cld
insl
fwait
adc
mov
call
ss
pushf
jae
sbb
mov
inc
clc
cmp
xor
mov
inc
xchg
push
mov
fs
xlat
icebp
fcmovnb
and
dec
mov
gs
xchg
fsubr
imulb
fldt
and
cmp
aas
jmp
adc
xchg
cmp
iret
not
sub
mov
enter
scas
jge
in
push
shrl
push
data16
rcl
jg
movsl
ja
iret
jl
add
sahf
jne
sub
lods
repnz
repz
in
loop
xor
pop
mov
fsub
adcl
adc
inc
jns
pusha
hlt
loop
nop
shll
jno
pop
outsl
sbb
cld
out
inc
push
push
mov
movsl
cmp
cmp
repz
jns
fcom
jp
adc
adc
sbb
xchg
and
shl
sbb
imul
aas
mov
insb
xor
pop
int3
mov
daa
xor
ss
sbb
rcll
cmp
enter
movsb
inc
lds
pop
xchg
xor
mov
decl
imul
mov
dec
imul
in
or
cltd
inc
mov
mov
jb
push
leave
cmc
cld
sbb
fildll
xchg
and
cmp
stc
mov
dec
mov
or
shlb
scas
mov
mov
in
jns
test
arpl
adc
mov
jnp
inc
add
ja
pop
pop
sbb
scas
stc
cmp
cmp
pop
xor
sahf
dec
lea
xchg
pop
pop
stos
leave
adc
add
inc
insb
push
xor
fwait
mov
push
dec
add
jecxz
and
or
sbb
xor
inc
andb
jno
xchg
pop
jbe
or
lret
ss
or
mov
xor
call
lods
hlt
outsb
in
sub
leave
lds
sub
fwait
test
lret
loopne
sub
fisttps
xlat
outsb
pop
mov
insl
inc
cmpb
dec
lds
cmp
fdiv
fcompl
pop
fnclex
data16
fimull
cmp
outsb
push
jae
mov
shl
mov
scas
mov
sarl
cmpl
mov
xor
lds
push
push
shrb
mov
addr16
repz
mov
mov
ljmp
out
cltd
rolb
adcb
enter
cmp
inc
insl
add
pop
pop
icebp
addr16
add
daa
xchg
dec
dec
jnp
inc
pop
popf
hlt
jb
aaa
shl
ror
aaa
icebp
adc
sbb
loopne
push
imul
sub
dec
push
jae
test
lret
mov
pop
aas
jb
lods
shl
cltd
cwtl
les
cli
mov
cmpsl
pop
cmpsb
xchg
fnstsw
inc
xor
out
fs
jae
mov
in
adc
loope
mov
and
mov
adc
jle
push
call
xor
bnd
push
push
into
pop
mov
cwtl
and
bound
sub
mov
out
or
jl
sub
stc
cltd
mov
pop
loopne
and
inc
dec
enter
and
push
daa
sub
lock
dec
in
sbb
cmc
add
push
rorb
lods
jne
movsl
and
imul
into
push
sbb
pop
arpl
inc
mov
outsb
or
jp
sub
addl
xchg
cmp
shl
loopne
mov
sbb
jbe
mov
in
mov
mov
jb
addb
sub
inc
mov
pop
xchg
imul
out
mov
push
mov
rorb
xor
test
js
dec
inc
arpl
sar
push
add
in
lds
out
test
cmp
mov
inc
repnz
int3
cmpsl
dec
or
sub
popf
and
in
ljmp
fiadds
xchg
sub
add
insb
aas
loopne
call
testl
repnz
xchg
dec
inc
cmovno
dec
jno
adc
mov
ret
inc
cmc
rorl
adc
fistpll
scas
fwait
scas
addr16
xor
sahf
xchg
xchg
cli
orb
push
jbe
adc
outsl
push
sub
imul
test
cmp
xor
mov
popa
jmp
push
sub
mov
xchg
sub
cmc
arpl
jl
arpl
fsub
icebp
enter
mov
jb
dec
jno
addr16
mov
sbb
aad
out
mov
nop
or
stos
psllw
addl
mov
inc
es
mov
add
xchg
xorb
mov
pusha
ret
lods
in
mov
icebp
dec
push
xchg
divl
loopne
jmp
xor
mov
xchg
in
push
cmp
inc
movsl
cmc
icebp
negl
inc
mov
or
jle
pop
add
pop
dec
sbb
pop
inc
iret
fldcw
sahf
ja
fwait
inc
cmp
imul
jg
mov
sahf
aas
imul
add
cmp
insl
rep
jl
lea
frstor
icebp
mov
fisubrl
leave
repz
negb
lahf
push
call
orb
mov
imul
into
enter
popf
popa
rcrb
fldcw
mov
pop
aaa
andb
ficomps
xor
sbb
iret
adc
jmp
sbb
sub
dec
cmp
dec
adcb
mov
mov
xlat
dec
out
lods
outsl
add
in
leave
cmp
lea
jle,pn
jne
lea
adc
mov
popl
xchg
mov
jecxz
in
test
pop
push
cmp
insb
in
je
lods
fdivrl
mov
cmp
sub
cmp
add
movsb
pushf
add
inc
dec
adc
sub
pop
test
cmp
inc
cltd
fldenv
repnz
mov
shlb
out
and
jl
lea
xchg
les
xlat
mov
mov
pop
arpl
imul
fwait
insb
and
leave
std
das
and
jbe
gs
xchg
imul
mov
je
bound
mov
cs
das
out
pop
sarl
shlb
mov
sbb
insl
dec
ret
shrl
js
lea
inc
fsts
inc
leave
cld
and
add
add
pop
jne
fcmovbe
mov
pop
mov
adc
aaa
dec
jns
hlt
jno
out
in
sub
int
out
push
std
mov
jae
dec
xor
andb
inc
cmp
insl
filds
jle
aad
hlt
sbb
ljmp
scas
lock
mov
pop
pushf
repnz
iret
fwait
pop
outsb
xchg
sub
inc
add
popa
mov
dec
out
fdivs
sti
fwait
sub
sub
add
add
mov
out
test
movl
lds
imulb
out
mov
icebp
repnz
mov
mov
xor
pop
jmp
jecxz
inc
push
xor
jmp
or
push
in
pop
lock
xchg
dec
into
leave
cmc
lds
out
out
inc
mov
xor
lret
xchg
dec
int
mov
xor
in
loope
or
pusha
mov
push
in
mov
imull
mov
iret
jb
popf
or
rep
or
std
xchg
das
movsb
xchg
jmp
dec
sub
add
mov
jae
scas
push
xchg
or
loopne
sbb
hlt
mov
or
scas
cmp
fmuls
pop
insb
test
adcl
push
test
mov
jmp
push
lret
jl
rorl
pop
push
sub
sub
push
mov
std
ja
pop
xchg
jb
rcr
and
sub
add
fisttpl
shl
xchg
aam
lahf
loop
pop
aas
push
sub
movsb
push
addb
nop
pop
insl
lods
push
pop
inc
cltd
pop
add
mov
inc
jnp
lds
out
mov
xor
cmp
jg
cli
shrb
cmp
xchg
movsb
in
movsb
int3
ret
cltd
sbb
roll
popf
test
xchg
subl
mov
shlb
or
mov
out
xchg
dec
dec
fcompl
sub
int3
insb
in
jbe
mov
in
ds
dec
lahf
data16
dec
scas
cs
pop
test
jle
push
jl
fwait
jge
push
sub
nop
pop
mov
imul
add
jmp
mov
lock
test
dec
fnstcw
pop
jnp
aas
enter
out
fs
cmp
cmpsb
leave
xchg
incl
or
mov
pop
jmp
sub
jmp
and
jne
pusha
inc
cwtl
cwtl
xor
subb
into
fildl
lock
ds
incl
inc
xchg
rcll
cmp
mov
fldpi
bound
jnp
mov
mov
scas
add
scas
ret
add
fdiv
pop
and
and
cmp
sub
rcrb
int
mov
aaa
or
mov
xchg
cmp
insl
loope
enter
mov
mov
add
gs
popa
sbbl
cmp
lods
je
mov
lea
pop
ja
out
xlat
test
xchg
inc
insl
bound
push
inc
lods
xor
das
dec
rcrb
aad
adc
push
stc
jge
mov
ss
pop
add
int3
xchg
jp
and
xor
pushf
imul
pop
shll
test
test
ja
xchg
add
mov
ret
xor
pushf
xorb
adc
jge
cmpsb
dec
push
andl
sub
out
movsl
fiaddl
xchg
push
les
dec
or
out
add
add
add
int3
shr
leave
shl
es
cmp
cltd
push
push
xchg
cmpsl
adc
add
mov
mov
in
aad
push
inc
outsl
cmp
add
jbe
daa
clc
sbb
inc
xor
popf
mov
cmp
xor
add
ds
adc
mov
hlt
xchg
pop
lcall
fcomip
int3
imul
and
stos
and
mov
out
lret
inc
adc
jp
ret
mov
stos
dec
xchg
sbb
dec
stos
cltd
lods
pusha
pop
sub
inc
addb
inc
addb
push
sbb
into
leave
xor
daa
or
inc
cmp
push
mov
cmp
inc
mov
adc
test
loop
fsubrl
xor
cld
dec
and
inc
jo
loopne
adc
mov
jns
pop
negl
push
mov
and
xchg
fs
push
imul
ret
loop
push
mov
out
into
fwait
cltd
push
nop
xor
inc
xchg
fsts
cmp
insl
or
inc
mov
and
pop
scas
arpl
mov
icebp
or
js
leave
daa
sub
mov
test
xor
push
add
add
mov
cld
mov
stos
inc
sti
dec
push
xchg
nop
mov
push
jmp
sub
ficompl
xchg
pop
adc
out
sub
enter
mov
push
fadds
dec
pop
sbb
jno
cld
dec
popa
add
or
mov
aaa
fisttpl
add
lock
push
loopne
movsb
inc
int
enter
iret
ret
adc
iret
dec
jge
sub
cmpsb
stos
add
inc
mov
lcall
mov
je
cmp
pop
add
xlat
mov
repz
jle
jp
jo
and
int3
push
mov
out
mov
xlat
xor
fisubs
sub
in
inc
out
add
hlt
js
pop
pusha
lret
jge
inc
es
nop
xchg
lock
aad
ret
sub
mov
nop
popf
test
loop
mov
sbb
call
addr16
cmp
or
push
push
outsb
mov
paddq
mov
fcomps
bound
jnp
xchg
jmp
dec
ja
andb
arpl
xchg
push
mov
jae
mov
sub
adc
fwait
or
cs
jns
adc
cmp
inc
aad
data16
push
adc
lea
and
dec
adc
outsl
add
push
pop
or
sbb
add
inc
repz
pusha
shrl
cmpsl
or
test
sub
movntps
insb
and
mov
mov
mov
push
imul
sti
movsl
jns
pop
int
cmpsb
dec
jne
cmpsl
dec
scas
aam
out
dec
enter
push
xor
dec
mov
inc
fcoml
gs
fisubs
mov
sti
xor
jp
imul
lock
cld
sub
push
lea
hlt
rcrb
cli
test
adcb
jp
fdivrs
add
or
les
daa
call
scas
lods
inc
fldt
push
aad
cmp
test
repz
repz
orl
sahf
incl
jns
mov
pop
arpl
and
inc
mov
movsl
pop
fists
repz
xor
aam
ss
imul
addr16
mov
or
mov
cltd
mov
out
sub
xorb
push
cmp
adc
mov
lcall
jmp
notl
outsl
aam
je
lcall
ficomps
xchg
lcall
and
les
nop
inc
mov
rcl
sub
mov
mov
sub
inc
mov
into
into
push
pop
lea
pushf
sbb
xchg
loope
fisubrs
dec
xchg
mov
or
dec
pop
hlt
sub
shrb
ret
dec
mov
adc
fs
mov
sti
fdivr
jp
call
repz
iret
sub
fmull
daa
dec
sbb
xchg
fldt
mov
mov
js
in
sbb
adc
dec
pop
cs
push
jno
jp
js
and
mov
ret
dec
ret
lcall
sbb
jnp
mov
mov
rcll
xorl
inc
and
xor
mov
shlb
xor
adc
fsubr
push
inc
daa
mov
xchg
mov
jb
inc
outsl
pop
les
jb
test
in
fst
mov
out
xchg
shl
mov
pop
pop
clc
cs
repnz
aaa
in
in
sub
xchg
mov
jo
pop
pushf
leave
rcll
inc
pop
lcall
rcr
popl
xlat
adc
mov
ds
pop
sbb
ret
shrl
add
adc
sahf
adc
pop
xorb
dec
xor
jb
xchg
aaa
sbb
mov
out
cmp
pop
out
inc
add
adc
test
or
movsb
add
scas
adc
jle
je
pop
and
mov
pop
leave
adc
cwtl
jae
mov
lock
mov
adc
fsubrs
inc
icebp
loope
xor
subb
imul
dec
mov
movsb
mov
and
les
adc
aaa
std
outsl
sbb
popa
and
daa
jle
lcall
mov
fs
in
aaa
test
mov
and
pop
inc
mov
stos
cmp
sub
push
or
pop
pop
jmp
repz
leave
push
sbb
sbb
jge
lds
inc
inc
xor
push
xor
cmp
dec
add
lock
adc
test
sti
imul
mov
xchg
or
dec
xchg
push
adc
int3
mov
mov
inc
mov
rcrl
arpl
daa
jg
mov
push
xlat
jmp
iret
adc
xchg
pop
or
sbb
cmp
insb
fstl
popf
and
dec
xor
lock
out
mov
das
cmove
mov
adc
lret
ds
into
test
pop
ret
jnp
addr16
cmp
sub
or
sbb
jo
mov
add
orb
jmp
pushl
push
add
mov
lcall
sbb
cwtl
mov
push
mov
jg
outsl
int
push
jno
inc
mov
dec
dec
sub
and
cmp
xchg
nop
cli
jne
bound
les
popa
pop
sar
push
inc
jo
in
or
inc
mov
lret
sub
jbe
push
lret
test
stos
push
js
aaa
lret
dec
fcoms
push
push
sbb
or
ret
sub
cmpsb
outsb
dec
adc
or
jb
push
xchg
daa
in
test
std
jns
gs
sti
stos
test
xor
dec
ljmp
jb
scas
xchg
fldt
fs
mov
das
pushf
lret
or
mov
pop
mov
pop
mov
repnz
cmpsl
mov
cmp
mov
add
scas
mov
stc
xchg
daa
in
mov
push
add
adc
notl
jno
and
repz
cmp
xchg
mov
add
jg
jno
push
xchg
scas
xor
out
outsb
sub
pushf
push
repz
and
nop
das
mov
in
xor
fbld
mov
repz
xor
pusha
xor
adc
xor
adcb
pusha
mov
xor
jmp
in
sahf
enter
pop
push
cmpsl
repz
insl
fld
imul
xor
aad
sub
insl
subl
leave
lods
pop
pop
ds
sahf
jle
test
mov
sub
mov
fistps
xlat
pop
movsl
ficoml
je
aam
inc
dec
pop
sbb
fdivrl
push
cmp
rorl
cld
push
into
das
push
adc
ss
inc
mov
adc
jp
pop
dec
sbb
or
xor
pop
cli
cltd
iret
lds
sub
push
out
push
or
mov
ror
test
jno
cmpsb
dec
int
jl
idivl
add
mov
sbb
iret
shrb
mov
cltd
push
stc
test
into
pop
mov
das
lea
aad
fdiv
clc
lock
mov
sub
fcmovu
mov
popa
nop
push
stos
push
sbb
bnd
mov
test
mov
jne
jns
stos
test
test
shlb
arpl
pop
pop
mov
jmp
pop
ffree
cmp
nop
fucomi
push
ja
adc
mov
mov
add
pop
in
push
sahf
add
cmp
push
dec
sub
insb
cwtl
jp
pop
add
and
pop
push
push
and
mov
or
mov
shlb
dec
hlt
mov
xor
inc
test
hlt
and
xchg
clc
mov
pop
mov
mov
fadds
sbb
scas
pop
fnstcw
add
insb
sub
test
stc
sub
pop
pop
or
push
push
fs
mov
lahf
xchg
rcll
push
mov
add
mov
xchg
inc
mull
add
lret
sahf
das
sbb
jl
cmp
adc
mov
aam
stc
enter
pop
xchg
dec
jbe
fcoml
rcll
iret
insb
xchg
enter
cmp
dec
imul
into
or
cmp
push
flds
insb
jmp
sub
xor
cmc
dec
lret
push
adc
out
inc
mov
cmp
sub
cli
dec
sub
sub
inc
sbb
dec
ljmp
stos
and
cld
push
bound
and
inc
lods
movl
mov
fisttps
mov
out
ja
stos
or
cwtl
in
pop
xchg
fsubl
shlb
aam
dec
gs
outsb
pop
xor
sub
jns
jge
sub
xor
aad
xor
in
and
add
adc
sbb
mov
lcall
mov
jmp
jo
insl
jp
mov
sbb
jl
into
roll
mov
pop
inc
cmpsb
push
dec
dec
sub
cmpsb
dec
mov
add
mov
or
call
scas
jl
sbb
sub
xchg
out
xchg
cmp
jbe
jle
cmpsl
icebp
cmpl
std
shrb
in
mov
scas
fistl
movsl
sbb
cmc
imul
xchg
aad
mov
jecxz
sar
and
jl
add
ss
add
into
push
pop
push
inc
sti
xlat
in
mov
sbb
inc
out
test
cmp
or
lahf
and
dec
sub
push
je
mov
cmpsl
adc
cltd
stc
in
cmc
outsb
lea
lds
and
inc
mov
ret
lods
mov
ja
push
jp
add
sarl
and
fisttps
jbe
push
adc
sbb
xchg
outsb
mov
cmp
es
adc
insb
cmp
imulb
cs
inc
cmp
sub
push
fcmovnb
jg
dec
or
jl
jnp
xchg
xchg
add
movsb
cmp
fldl
lods
sbb
pop
addr16
mov
xchg
movsb
ss
ss
test
xchg
test
and
popa
mov
mov
imul
cmpb
lcall
adc
repnz
inc
sub
imul
idivl
repnz
negl
push
mov
or
pop
mov
pop
xorb
incb
cmp
stos
les
rep
mov
cmp
mov
cltd
adc
repnz
xor
sahf
pop
les
and
bound
jl
inc
add
repz
mov
xchg
jno
jle
pop
rolb
in
cmp
aaa
xor
sub
push
insl
add
jb
enter
sbb
mov
push
jmp
addr16
aam
pop
add
jb
lcall
and
pslld
and
insl
xchg
ds
out
mov
push
jno
jb
push
test
and
dec
mov
push
addr16
cmpl
aad
es
dec
jbe
ljmp
adc
mov
pop
xchg
fstl
je
ret
add
xchg
jg
lret
imul
jbe
sahf
or
ljmp
arpl
inc
adc
sbb
xor
or
das
movsl
inc
out
or
test
add
and
push
inc
stos
outsb
adc
cmp
and
mov
scas
or
sbb
mov
call
ds
gs
andb
std
ds
pushf
movsb
or
movsl
add
stos
mov
out
push
jbe
cmp
inc
mov
pushf
inc
dec
pop
xchg
mov
ja
mov
mov
in
out
pushf
out
sub
test
mov
xor
mov
push
and
shl
neg
push
in
cli
movsb
lds
and
inc
mov
jno
scas
or
add
push
data16
xchg
test
scas
js
jp
repz
leave
lahf
dec
push
mov
mov
jmp
int
cwtl
adc
pop
jne
daa
add
push
ficompl
fistpl
testb
pop
adc
push
pop
adc
pop
filds
lods
mov
jb
and
lods
imul
imul
add
arpl
addr16
jae
imul
add
add
imul
arpl
popa
add
je
add
bound
popa
add
jb
imul
jae
add
arpl
push
add
jae
add
bound
imul
je
jns
jo
outsl
add
add
jns
add
jo
outsl
add
add
add
popa
add
add
add
insl
imul
add
outsl
arpl
jae
add
je
push
add
add
imul
arpl
je
outsb
fs
add
add
add
jb
add
add
jbe
popa
add
add
outsb
add
add
imul
add
je
add
add
outsb
add
add
add
add
add
add
add
add
add
outsb
arpl
outsb
jae
arpl
popa
add
add
add
outsl
add
jb
je
add
imul
add
add
jne
je
imul
add
add
add
add
add
add
imul
add
add
data16
add
inc
add
popa
add
arpl
push
add
add
