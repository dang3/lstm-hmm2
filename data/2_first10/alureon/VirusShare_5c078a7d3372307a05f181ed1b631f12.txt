push
mov
add
pusha
lea
ror
mov
mov
push
mov
mov
lea
ror
ret
xor
shr
mov
neg
sub
cmp
xchg
movl
neg
rcr
not
adc
movl
mov
mov
mov
rcl
mov
not
lea
mov
movl
xor
mov
lea
neg
movb
not
add
xor
add
xor
lea
neg
lea
lea
ror
xchg
mov
mov
push
mov
xchg
lea
mov
nop
xor
lea
not
nop
lea
xor
mov
neg
neg
add
mov
rcl
lea
mov
mov
mov
rcr
not
xor
not
push
mov
mov
neg
lea
lea
call
mov
not
xor
neg
mov
mov
nop
xchg
adc
rol
mov
mov
xor
add
nop
mov
mov
rcr
mov
lea
and
call
mov
mov
xchg
mov
mov
shr
push
mov
not
or
xor
shr
xor
nop
xor
mov
mov
lea
xor
shr
lea
nop
mov
mov
mov
rcl
mov
rol
lea
mov
movl
xor
neg
mov
lea
xor
sbb
mov
movl
xor
rcr
mov
xor
mov
movl
xor
mov
xchg
sub
sub
not
rol
movl
xor
mov
lea
mov
not
mov
nop
neg
xchg
rcl
neg
xor
not
not
mov
nop
mov
lea
lea
mov
mov
and
lea
nop
not
not
xor
mov
neg
movw
mov
lea
not
xor
not
lea
mov
xor
movb
add
shl
mov
neg
sub
xor
mov
mov
nop
xor
lea
mov
or
rcr
nop
mov
shl
rcr
mov
xchg
mov
xor
lea
call
lea
mov
mov
or
jne
mov
mov
xor
neg
nop
cmp
rol
lea
mov
neg
nop
mov
not
mov
mov
mov
xor
ror
mov
mov
xor
cmp
lea
rcl
mov
or
jne
xchg
neg
neg
mov
add
mov
lea
push
lea
xchg
mov
not
mov
lea
call
rol
lea
mov
lea
lea
neg
xor
sub
mov
mov
not
mov
adc
nop
mov
mov
neg
mov
lea
mov
neg
lea
push
not
xor
xor
lea
mov
popl
mov
not
xor
lea
movl
rol
mov
mov
push
lea
mov
add
sub
mov
push
mov
xor
lea
not
xor
call
rol
rol
or
and
xor
lea
not
mov
neg
mov
xor
lea
lea
mov
sub
mov
mov
neg
nop
mov
adc
mov
not
xor
mov
nop
mov
lea
mov
mov
lea
not
mov
mov
mov
xor
or
lea
rcr
mov
mov
rol
xor
xor
mov
adc
mov
lea
pushl
lea
lea
xor
mov
mov
lea
not
not
push
xor
lea
lea
mov
mov
nop
not
mov
lea
mov
mov
not
lea
nop
shr
mov
rcl
lea
xor
xor
mov
movl
neg
xor
mov
xchg
mov
lea
not
mov
mov
neg
mov
neg
xchg
or
je
mov
lea
neg
xor
shr
mov
xor
mov
rcl
lea
mov
lea
nop
neg
lea
mov
nop
rol
and
mov
neg
ror
not
not
mov
cmp
mov
lea
mov
xchg
mov
mov
mov
ror
xor
not
sbb
lea
mov
xor
xor
lea
mov
lea
lea
mov
mov
mov
xor
neg
mov
xor
xor
shr
add
xor
mov
nop
not
mov
mov
or
mov
sub
neg
mov
nop
neg
mov
cmp
mov
pop
add
neg
mov
xor
popl
lea
mov
mov
lea
lea
lea
lea
mov
mov
xor
not
mov
push
lea
cmp
xchg
neg
mov
ror
push
mov
ror
mov
neg
xor
lea
ror
push
mov
mov
mov
push
lea
mov
rcr
lea
call
lea
mov
mov
xor
mov
xor
not
movl
adc
mov
lea
neg
xchg
mov
nop
xor
mov
mov
lea
and
not
add
push
mov
lea
mov
mov
add
mov
or
neg
push
mov
mov
add
push
mov
not
sub
xor
lea
push
mov
lea
ror
mov
push
lea
mov
lea
mov
xor
xor
ror
not
call
xor
rcr
lea
add
lea
lea
nop
mov
lea
adc
mov
lea
or
nop
mov
xor
lea
shr
xor
mov
lea
xor
xor
cmp
mov
push
ror
lea
lea
shl
mov
sub
mov
sub
push
mov
mov
ror
push
rcr
mov
mov
neg
mov
xor
push
mov
and
mov
add
mov
pushl
mov
mov
mov
mov
xor
mov
cmp
call
lea
mov
cmp
mov
adc
mov
xor
not
nop
neg
lea
mov
or
ror
nop
mov
neg
lea
lea
cmp
mov
mov
add
mov
mov
neg
push
xor
mov
mov
push
lea
rol
xor
mov
xchg
push
mov
and
mov
mov
mov
xor
pushl
mov
xor
shr
call
xor
cmp
xor
mov
mov
nop
add
adc
adc
mov
mov
neg
lea
nop
lea
xor
xchg
mov
lea
lea
mov
lea
mov
lea
push
rcl
neg
lea
mov
push
not
shl
cmp
xchg
mov
rcl
mov
lea
pushl
xor
mov
mov
sub
lea
mov
mov
push
lea
adc
xor
lea
mov
mov
mov
pushl
neg
mov
xor
mov
lea
xchg
lea
call
xor
add
mov
mov
not
xchg
rcl
mov
nop
xor
not
not
mov
lea
nop
mov
lea
mov
adc
shr
push
rcl
mov
mov
or
push
sub
sub
mov
push
xor
shl
xor
push
lea
or
mov
neg
xor
mov
xor
push
rcr
not
mov
rcr
push
cmp
neg
ror
mov
pushl
lea
shr
lea
mov
xor
shl
xor
call
add
mov
neg
xor
nop
mov
not
mov
nop
not
mov
mov
lea
mov
mov
mov
popa
leave
jmp
pop
daa
les
inc
inc
dec
in
sbb
adc
push
push
in
mov
popa
loopne
jmp
rcr
mov
xlat
xor
enter
loop
xlat
pop
mov
cs
xchg
inc
add
rorl
sbb
or
fists
mov
popa
push
ljmp
cmc
jb
movsb
arpl
mov
addr16
stc
pushl
xor
mov
icebp
insl
add
mov
lods
dec
loope
ljmp
mov
push
addr16
fs
push
xor
nop
lcall
outsb
test
inc
jp
or
in
lret
insl
push
test
push
in
arpl
pxor
pusha
mov
inc
cmp
cli
xchg
push
sbb
cmp
fistl
and
lret
or
and
xchg
es
sub
xchg
cld
sbb
loope
add
inc
nop
dec
push
outsb
icebp
int
insl
xchg
push
jb
clc
roll
cmp
mov
cmp
lods
push
push
cs
dec
pop
mov
xor
dec
repz
ljmp
loop
fld
mov
dec
fcomps
jg
imul
mov
pushf
test
test
or
hlt
das
dec
rorb
dec
inc
in
adc
imul
add
add
fisttpll
dec
jae
jp
inc
roll
out
adc
cld
cmc
xor
mov
mov
fisubl
stos
mov
sbb
mov
repz
divb
push
bound
loopne
sti
xchg
test
mov
jb
fdivr
daa
sub
pusha
bswap
cmpsb
aas
clc
dec
nop
cmp
xchg
pop
xchg
call
ja
pop
mov
fisttpl
movsl
fdivrp
stos
adc
dec
daa
aam
lock
dec
repz
fcmovb
ss
sbb
fwait
repnz
dec
jno
addl
mov
jle
jo
push
sbb
jno
into
into
cmp
add
inc
insb
add
iret
fdivs
cmp
push
int
mov
out
adc
addr16
lea
and
xchg
add
xchg
pop
int
jnp
jmp
xor
jb
pop
mov
push
sbb
sahf
pop
pop
adc
fisubs
and
mov
les
ljmp
insb
dec
adc
and
add
jge
scas
jmp
mov
sub
add
lds
js
push
dec
sarb
cmp
fidivrs
outsl
mov
int3
cmpsl
ds
lcall
icebp
mov
shll
das
jns
mov
bound
in
lea
shll
xor
jnp
outsl
or
sbb
jae
xchg
iret
jg
mov
popa
pusha
xchg
dec
lea
or
das
ret
sub
pop
cmp
dec
cmpsb
push
and
rol
dec
push
int
out
xchg
in
pop
sub
fisttps
loop
dec
sbb
into
in
testb
loop
shl
into
push
jno
pop
lret
push
in
sbb
or
outsb
fidivrs
pop
daa
fs
outsb
sbb
out
ret
shl
xchg
je
test
pcmpgtw
push
bound
xchg
sbb
sbb
out
mov
jo
dec
pop
lret
cltd
incb
mov
icebp
pop
int
lret
pop
adc
dec
ret
cmp
push
icebp
sbb
dec
pop
pop
jg
rorl
xchg
pop
vmwrite
inc
scas
pop
or
out
stc
insl
lcall
xor
inc
fwait
inc
cld
jb
xchg
out
cmp
fcmovb
or
dec
sub
pop
jne
sub
int
aaa
fs
mov
aam
das
mov
ss
sarb
pop
pusha
roll
ret
int3
les
push
push
rcrl
inc
pushf
xchg
jecxz
fstps
sbb
shr
jle
stc
push
xrelease
test
xchg
bound
stc
push
add
mov
mov
pop
push
and
inc
jp
scas
stc
loop
mov
cmp
mov
dec
and
popa
loopne
mov
push
ret
xchg
jmp
jb
and
outsl
subl
push
xor
adc
insl
ror
loope
enter
inc
pop
les
je
mov
sub
fcom
aad
cmpsb
mov
test
loope
out
jp
mul
sub
test
mov
xchg
xlat
hlt
mov
mov
movsb
xchg
sub
xor
popa
pop
mov
jne
or
xchg
loop
adc
rcrl
imul
lods
shrb
add
jg
and
fnstenv
movsb
sti
fstpl
mov
movsl
mov
in
fsubrl
jmp
and
and
mov
or
scas
mov
test
add
mov
cmpsb
subb
pushf
cli
fwait
test
sbb
dec
bound
xor
add
push
cwtl
pop
add
gs
hlt
std
adc
int3
sbbl
push
mov
mov
cwtl
mov
dec
int3
pushf
jnp
push
mov
rclb
dec
dec
arpl
nop
ds
imul
dec
or
mov
int
jp
push
cmpsl
pop
aam
mov
cmpsl
and
fcoml
stc
xchg
mov
dec
jl
mov
mov
cmp
shrd
pop
loope
lret
fcompl
mov
mov
stos
and
gs
pop
outsb
adc
cltd
leave
sbb
inc
pop
and
flds
loop
test
push
push
lahf
lret
cmpsl
mov
sub
xor
or
xchg
loop
xlat
push
adc
sbb
xchg
movsl
xor
movsb
mov
lahf
ret
mov
mov
into
add
sub
cmp
jg
dec
xchg
or
sbb
adc
mov
pushl
lret
push
nop
mov
xchg
add
cmpsb
mov
in
push
inc
aam
pusha
loop
cmp
data16
jb
or
ljmp
sbb
mov
jno
or
js
pop
insb
jae
in
sub
pop
jmp
dec
std
jns
inc
jle
aaa
mov
add
jge
out
cmpsb
roll
lock
hlt
je
dec
dec
test
push
mov
push
inc
cs
xchg
mov
lock
lcall
mov
dec
nop
and
xlat
sub
insl
adc
nop
inc
add
jae
jns
roll
ja
or
pop
xchg
mov
inc
and
sbb
insl
xchg
adc
fisubrs
insb
cmp
xor
push
mov
test
sub
iret
aam
fimuls
xor
jno
fwait
xchg
sbb
adc
in
mov
stc
mov
daa
test
mov
inc
pop
out
test
pop
sbb
leave
cmc
dec
jno
lea
out
mov
int3
or
cmpsb
push
jno
xor
inc
jno
push
mov
dec
leave
cmpsb
leave
loopne
add
pop
rcrb
sub
clc
mov
int
xchg
mov
std
xor
sub
pop
or
dec
and
jo
xchg
sub
pusha
cli
in
daa
in
jb
xor
outsl
lret
addb
add
cli
pop
out
out
cmc
adc
pop
xchg
push
jl
xchg
das
dec
imul
fdivrs
lds
sub
mov
test
lea
ret
jno
fwait
xchg
adc
dec
cmp
xchg
sahf
jae
mov
sahf
push
int3
xchg
sbbl
mov
aaa
cltd
or
adc
lea
mov
jae
add
jbe
lock
cmp
or
jg
lds
xchg
out
je
pop
sti
dec
scas
stc
and
mov
pop
cmp
adc
or
push
sbb
pusha
mov
leave
xchg
out
jo
das
cwtl
jge
data16
xchg
pop
cmp
xor
mov
ds
dec
inc
mov
pop
daa
scas
cld
lds
adc
scas
push
scas
stos
lock
movsb
stc
test
