mov
add
fiadds
push
dec
push
adc
jecxz
cmp
inc
movsl
adc
test
lods
bnd
lcall
pushf
xchg
cmp
bound
inc
in
or
inc
lcall
popf
and
mov
adc
mov
adc
adc
clc
out
rol
push
cli
pop
nop
gs
in
mov
mov
mov
js
mov
fsubl
out
xor
fcmovnb
adc
xor
mov
and
aad
jno
and
jns
test
cwtl
mov
repz
xor
push
testb
in
inc
push
dec
mov
jmp
cmpsb
stos
ret
clc
sub
incl
lret
adc
rclb
push
int
add
xchg
inc
pop
dec
sbb
fistl
in
popa
sub
in
and
in
xchg
sahf
jno
insl
pop
pushf
pop
test
cmp
into
test
push
lea
xlat
pop
ss
add
ficomps
push
subl
cld
in
mov
mov
je
lea
and
pop
fisubrs
xchg
jl
xchg
stos
fdivl
cli
test
andb
jl
sarb
pop
test
loopne
cwtl
mov
nop
clc
scas
std
data16
jns
sub
cmp
xchg
pop
adc
cld
add
mov
add
jne
jo
xchg
je
test
xchg
xor
mov
lods
cmp
sbb
ret
push
mov
call
push
cmp
fstl
das
addr16
or
fsubs
fucom
push
add
cmpsb
sbb
cwtl
cmp
inc
les
sbb
lock
sub
jo
adc
cs
lea
push
dec
sbb
aas
jl
mov
stc
mov
fistl
js
xchg
jmp
mov
insb
mov
jbe
adc
ss
inc
scas
inc
and
fldenv
outsb
or
pop
clc
cld
cmp
test
mov
and
popf
xchg
add
mov
jle
dec
cmpsl
xchg
pusha
lods
lea
xchg
cltd
in
mov
movsl
movsb
jns
jecxz
mov
pop
scas
and
dec
sahf
push
mov
loop
daa
rorb
dec
mov
psubsw
dec
push
cmp
mov
pusha
cmp
push
sbb
sbb
enter
and
fldcw
xchg
enter
pusha
jge
insb
sub
jg
cmc
data16
fmull
fucomi
adc
aad
lea
xor
leave
jg
sti
shll
addr16
nop
icebp
mov
mov
jns
xchg
stos
push
add
push
push
pusha
out
mov
inc
aas
xchg
cmp
loop
adc
fs
iret
push
or
jae
out
lret
shrb
in
push
inc
push
xchg
bnd
and
jne
fldcw
jne
mov
lods
sub
xchg
xchg
loop
mov
rcrb
scas
lea
mov
scas
add
int3
dec
mov
add
fisubrl
fiaddl
xchg
jnp
jecxz
call
and
cmp
lods
push
lds
push
mov
mov
dec
call
mov
lea
call
imul
push
add
call
call
call
add
add
sub
movsbl
add
movzbl
add
mov
dec
dec
lea
inc
lea
mov
lea
dec
lea
inc
dec
inc
dec
mov
add
call
dec
mov
call
movzbl
sub
add
imul
dec
or
sub
xor
dec
pop
dec
add
dec
add
inc
pop
xor
mov
pop
imul
lea
or
mov
pop
inc
dec
dec
mov
mov
or
mov
dec
pop
sub
imul
pop
inc
or
mov
dec
mov
call
xor
lea
dec
inc
ret
mov
dec
push
add
mov
push
inc
mov
push
dec
dec
push
add
mov
push
dec
dec
mov
and
lea
push
inc
ret
push
imul
mov
sub
dec
dec
sub
xor
push
add
push
imul
call
pop
ret
jmp
dec
and
dec
dec
movzbl
or
mov
xchg
mov
mov
mov
mov
xor
lea
inc
xor
inc
inc
dec
add
dec
jne
mov
mov
inc
inc
pop
dec
mov
pop
xor
inc
pop
dec
inc
sub
or
imul
mov
mov
lea
imul
dec
mov
add
ret
push
add
imul
sub
movzwl
mov
lea
add
sub
push
push
push
push
add
sub
imul
push
sub
mov
sub
dec
mov
add
mov
inc
xor
mov
xor
push
add
add
xor
inc
sub
push
lea
mov
push
dec
add
pushl
imul
call
inc
add
dec
dec
imul
dec
imul
movzwl
mov
pop
ret
jb
dec
xor
xor
dec
mov
lea
imul
mov
add
mov
inc
inc
xor
movswl
lea
xor
and
mov
imul
dec
cmp
jb
dec
mov
and
add
xor
inc
add
xor
inc
pop
inc
test
jbe
inc
and
inc
sub
inc
lea
xor
inc
mov
sub
inc
xor
and
sub
movzbl
or
sub
inc
movswl
dec
inc
dec
mov
inc
and
inc
inc
mov
movzwl
imul
movzbl
dec
add
add
inc
inc
and
inc
mov
sub
add
mov
mov
xor
mov
dec
lea
mov
dec
xor
inc
lea
lea
mov
dec
jne
lea
mov
dec
inc
mov
inc
add
mov
mov
inc
mov
mov
mov
dec
mov
lea
inc
mov
movzwl
add
mov
mov
inc
test
jbe
inc
lea
dec
add
movsbl
mov
mov
movswl
add
inc
lea
mov
dec
inc
or
inc
dec
or
movzbl
sub
lea
inc
and
add
inc
mov
imul
dec
movzbl
dec
mov
add
lea
dec
and
inc
dec
mov
mov
and
movzbl
imul
mov
mov
lea
dec
mov
movsbl
movzbl
movzbl
inc
add
add
mov
jmp
push
call
mov
xor
inc
sub
xor
sub
xor
inc
or
dec
inc
and
inc
xor
xor
add
lea
dec
shl
dec
mov
xor
imul
dec
push
lea
dec
mov
call
mov
pop
inc
sub
inc
lea
and
mov
movsbl
inc
cmp
je
call
call
mov
iret
dec
lea
inc
dec
add
mov
mov
add
mov
add
add
add
xor
mov
pop
lea
ret
push
mov
inc
dec
inc
add
push
mov
movswl
push
mov
push
dec
push
lea
mov
push
add
mov
lea
mov
mov
call
xor
push
dec
push
inc
pop
movzbl
mov
mov
mov
mov
mov
sub
mov
inc
imul
lea
dec
je
inc
mov
dec
dec
dec
dec
mov
movzwl
mov
mov
lea
lea
mov
inc
movzwl
inc
add
repnz
dec
lea
add
lea
jmp
dec
inc
inc
lea
xor
inc
inc
xor
dec
add
sub
inc
jmp
mov
add
imul
movsbl
pop
pop
ret
push
add
and
add
movsbl
mov
inc
dec
inc
mov
inc
movsbl
movswl
mov
mov
lea
add
mov
imul
inc
lea
dec
imul
add
inc
lea
mov
pop
ret
sub
inc
mov
and
add
mov
inc
add
mov
sub
mov
mov
movswl
mov
xor
mov
imul
mov
dec
inc
inc
mov
inc
or
mov
dec
lea
cmp
jb
lea
push
lea
add
push
imul
or
push
add
dec
mov
imul
mov
xor
lea
imul
xor
mov
add
xor
dec
mov
push
dec
and
xor
xor
dec
mov
or
inc
mov
imul
mov
movzbl
inc
or
sub
add
mov
movzwl
add
dec
add
movzbl
sub
inc
xor
dec
and
inc
dec
inc
add
dec
mov
dec
dec
inc
add
sub
cmp
jmp
call
mov
or
sahf
jnp
sub
repnz
je
sbb
pop
jp
add
pop
test
test
add
sysexit
subb
adc
into
test
data16
loopne
cli
cmp
iret
hlt
pop
insl
or
je
imul
in
scas
out
xchg
lods
inc
cltd
xchg
xlat
sub
push
test
dec
dec
xchg
rorb
int
jmp
push
and
repnz
fwait
inc
push
xchg
loopne
adc
int3
lea
and
in
pop
pop
or
and
fdiv
divl
xchg
in
xchg
je
and
testl
ret
mov
call
movsb
xor
lea
in
xchg
outsl
mov
faddl
push
add
imul
pop
and
test
call
pop
out
adcb
xor
or
sahf
push
in
fcomps
scas
xor
rclb
inc
xchg
sbb
dec
jmp
xor
movsl
or
cmp
fcompl
enter
test
ret
sub
rorb
xchg
aaa
bndstx
les
mov
mov
shrl
icebp
mov
dec
mov
pop
xchg
ja
adc
and
xor
fisttpll
repnz
imul
pop
mov
mov
push
mov
scas
nop
subb
out
imulb
dec
aaa
enter
daa
sbb
and
sub
xchg
jg
add
pop
sub
add
jnp
xchg
inc
imul
lea
add
imull
xor
je
adc
rorb
or
pop
add
call
mov
add
mov
insb
mov
adc
dec
sahf
cmp
jp
imul
pop
stos
cmova
enter
std
mov
mov
out
lret
sahf
jmp
outsl
test
sub
mov
push
rclb
shlb
cmc
nop
rorb
inc
xchg
das
loopew
mov
and
rorb
inc
adc
aaa
lcall
sub
xchg
repz
insb
sub
push
lods
cmp
sub
or
xor
pusha
mov
xchg
xor
scas
sub
pop
sar
ss
mov
jbe
cld
fldl
fucomp
mov
sti
ljmp
push
out
sbb
insb
xlat
insl
lods
stos
push
in
adc
sub
mul
lods
movsb
stos
add
push
lea
lcall
add
xor
mov
and
and
xchg
cltd
insb
mov
lahf
sub
mov
cmp
adc
pushf
daa
rcr
push
outsb
sbb
andl
sub
mov
push
or
sub
shlb
dec
stc
rcrl
repz
scas
cmpsl
lahf
mov
popf
pop
sbb
stos
pop
and
xchg
aad
cltd
pop
mov
daa
stos
mov
inc
dec
test
out
cmp
sbb
jg
push
aam
xchg
pusha
pop
test
adc
dec
and
lea
mov
mov
sbb
mov
out
jl
ss
lds
lret
mov
scas
lcall
addr16
adc
jne
cmp
scas
outsb
jo
xchg
sbb
add
xor
mov
xchg
xor
sub
pop
test
icebp
mov
cld
push
dec
out
aaa
or
pop
jle
ljmp
in
cmc
aas
jmp
push
insb
jmp
mov
xor
cmpsb
and
cmp
sbb
scas
dec
ret
cmp
pop
cmp
hlt
mov
dec
mov
nop
xchg
frstor
pop
popa
mov
popaw
xchg
push
push
int
lcall
xlat
shll
push
sbb
rolb
insb
mov
jno
xchg
cmp
fs
mov
popa
in
add
push
and
sub
sbb
jmp
dec
js
rorl
pop
addr16
popf
xchg
ss
cmp
test
outsl
mov
pop
cld
and
negl
arpl
cmp
rcrl
pop
rol
lea
shll
push
sahf
sub
shlb
jg
add
cmp
pop
dec
push
push
push
test
mov
mov
pop
and
xchg
mov
pushf
and
icebp
imul
pop
lcall
push
loope
mov
jle
std
cmp
jmp
cmp
adc
dec
dec
shrl
bound
push
data16
je
fcmovnb
outsb
mov
imul
xor
cwtl
in
push
mov
dec
pop
andb
dec
lcall
movsb
sbb
fs
ja
cld
mov
adc
cmpsl
out
pop
sub
cmp
aad
cmp
or
push
inc
dec
xchg
mov
sahf
or
pop
inc
sub
jge
std
add
mov
inc
fcomi
iretw
sub
mov
jno
cld
scas
mov
shrl
dec
push
fnstenv
or
jmp
dec
int3
pop
mov
mov
xchg
lds
je
push
jbe
test
addr16
pop
inc
scas
insl
bound
pop
sub
jnp
std
mov
outsl
mov
inc
repnz
scas
icebp
mov
bnd
lods
or
cmpsl
dec
pop
fnstcw
mov
testb
add
sub
jno
stos
loope
push
push
mov
xchg
rolb
pop
pop
adc
xor
push
push
dec
xchg
sub
inc
mov
sarb
out
adc
sub
jno
inc
lds
sub
fimuls
jnp
sbb
pop
pushf
xchg
mov
xlat
mov
jns
repz
test
adc
popf
pop
aas
add
sar
cmp
idivl
sub
xor
xchg
fucomp
stos
adc
test
fcom
popa
leave
icebp
lea
test
test
mov
jns
jp
dec
hlt
pop
ljmp
dec
dec
sbb
movsl
push
inc
xchg
dec
push
push
outsb
adc
leave
aaa
fs
pop
icebp
gs
sbb
push
pop
cli
adc
ds
or
mov
inc
arpl
cmp
or
mov
mov
push
out
popa
jmp
cld
xchg
cmp
mov
pop
imul
pop
fbld
dec
fwait
insb
jg
in
xchg
lret
pop
imul
or
push
pop
popa
lock
rolb
inc
add
xchg
jne
dec
lret
jge
pop
mov
hlt
repz
push
jg
iret
cli
cli
adc
movsb
js
push
pop
hlt
leave
lahf
ds
je
inc
jae
fsubr
fdivs
and
in
push
jns
pop
sbb
in
inc
dec
add
mov
dec
jns
sbb
mov
sti
jae
das
lods
loope
mov
out
andb
mov
negb
cmpsb
xchg
orb
sub
jne
or
dec
xchg
test
call
stc
push
movsb
jl
dec
xor
xor
adc
push
push
dec
jns
or
mov
lea
lret
push
cmc
inc
pop
hlt
push
cli
push
dec
cmp
push
test
das
out
hlt
bnd
enter
lcall
sahf
sti
pushf
cmpsb
or
movsl
xchg
adc
insb
fs
mov
cwtl
aam
filds
push
inc
mov
sub
je
pop
mov
push
ds
and
push
adc
das
cld
add
mov
or
mov
mov
xchg
daa
repz
xchg
mov
adcb
mov
imul
or
je
popf
mov
sub
cs
hlt
add
int
and
out
add
and
mov
jmp
push
dec
stc
pushf
pop
jnp
cmp
cmovl
cmp
xchg
mov
ret
lcall
ret
jns
xchg
adc
mov
cmc
mov
mov
dec
mov
mov
lods
xchg
imul
test
lea
and
sub
push
lahf
sub
bnd
mov
jb
popa
inc
mov
jo
dec
cmpsb
jp
jne
xor
nop
out
mov
add
mov
inc
sbb
fdivrs
mov
hlt
jmp
add
push
subb
dec
mov
add
jg
and
loope
mov
test
cld
call
xchg
jl
icebp
xor
lea
adc
or
push
shl
leave
repz
jp
jl
mov
mov
daa
push
dec
mov
xlat
push
je
or
leave
mov
xor
jecxz
loope
popf
jbe
ja
std
imul
xchg
movsb
mov
imul
dec
ffree
les
ja
fisubs
mov
aaa
push
pop
stc
clc
mov
out
orb
mov
push
addb
xor
insb
mov
lds
ss
cmp
and
int
mov
dec
lock
inc
lcall
jmp
push
jnp
mov
xor
lods
xor
sbb
adcb
sti
mov
xchg
add
xchg
add
sub
lds
mov
add
mov
shl
mov
cmpsl
xchg
je
or
int3
js
cltd
les
xchg
jnp
aad
cmp
and
mov
xchg
or
inc
test
jge
sub
or
test
or
out
pop
push
adc
mov
pop
arpl
fs
ret
data16
push
out
cmp
xchg
je
xor
iret
stos
adc
dec
jle
mov
mov
bound
and
sbb
enter
or
pop
fcomps
jge
mov
jecxz
stos
sti
fsubrs
outsb
or
clc
push
fdivl
cmpsl
jg
fs
mov
cmp
mov
inc
sbb
mov
imul
sbb
xchg
leave
xchg
cmp
jb
pop
scas
aad
xchg
leave
pop
sbb
or
mov
rcr
xchg
cwtl
inc
mov
test
push
pop
inc
call
xor
das
lods
out
cltd
and
push
cmp
in
call
mov
mov
rol
xor
sub
xor
cmp
int3
xor
int3
push
xchg
mov
mov
cmp
add
push
mov
in
mov
pop
push
add
add
sub
pop
cltd
sti
cmp
add
xlat
insb
out
dec
fcmovb
pop
add
mov
add
dec
test
lret
pop
xor
push
out
movsb
sub
pop
cmp
daa
push
pop
push
sub
mov
je
jb
int
fs
mov
ret
or
inc
pop
pop
fs
push
pop
push
and
cmc
xlat
popf
cld
lret
fisubs
mov
popf
addb
mov
bound
into
xor
mov
loop
insl
mov
sbb
fildll
popf
scas
aaa
in
ja
sbb
and
jl
xchg
pushf
pushf
add
sbb
xlat
stos
xchg
sub
outsl
or
int3
dec
jns
lods
sti
pop
je
es
cmp
sbb
popa
bound
jnp
inc
je
mov
imul
outsl
or
call
sbb
push
inc
scas
pop
imul
test
in
mov
insb
xor
mov
sbb
or
int3
push
jno
mov
adc
insl
mov
repz
dec
xchg
jg
pop
cwtl
inc
xchg
and
xchg
push
push
sub
fisubrl
cs
pop
jecxz
mov
xorl
daa
hlt
jo
mov
les
addl
stos
cmp
mov
in
out
or
test
jg
clc
loope
roll
rcrb
outsl
out
lret
mov
notb
sarb
mov
jl
fucomi
jecxz
imul
lretw
fldt
push
lods
movsb
std
inc
lret
arpl
mov
call
imul
or
and
adc
cld
jecxz
fwait
imul
jnp
pop
popl
xor
sub
outsb
sbb
test
sbb
push
loope
int
push
xchg
mov
in
ss
pop
dec
decb
pop
xchg
pop
jmp
movsl
cli
dec
sub
out
ret
iret
push
xchg
jl
andl
jecxz
fisttps
jb
je
push
xor
scas
sub
inc
rcrl
mov
inc
imul
mov
aad
lock
pop
lahf
adcb
mov
add
pop
push
xchg
cwtl
test
je
icebp
out
add
test
push
imul
fnstcw
js
cmpsb
mov
cmp
movsl
gs
in
add
inc
fmul
imul
or
sahf
jbe
les
ret
push
cmp
out
xor
ljmp
daa
seta
aad
xor
fdiv
or
jp
sub
add
cmp
fwait
fwait
add
sub
popf
inc
mov
sub
push
inc
mov
adc
js
mov
rclb
fprem
cltd
fwait
out
aaa
inc
pop
arpl
xchg
jp
push
jmp
mov
pop
cld
pop
test
mov
or
pop
mov
push
scas
rcr
xorb
mov
xor
push
js
sub
xchg
xor
sbb
push
or
push
xchg
xchg
es
mov
mov
xchg
test
fldcw
pcmpgtw
inc
xchg
inc
pop
aas
jp
scas
gs
sbb
mov
repnz
jo
or
jne
fisubrs
jecxz
jge
inc
add
pusha
xor
jae
inc
xchg
mov
test
aaa
mov
inc
mov
lahf
lods
add
lods
in
scas
mov
repnz
jno
dec
jp
sub
or
xchg
in
and
add
bound
mov
imul
push
das
lret
and
popf
pushf
rep
mov
test
test
xchg
lahf
mov
and
jecxz
mov
inc
cmp
lods
stos
push
and
adc
aaa
xchg
data16
movsb
add
push
cmp
pop
icebp
add
sbb
mov
xchg
out
dec
mov
adc
enter
mov
mov
fucomp
mov
xchg
sbb
movsb
repz
xor
add
gs
inc
jl
jnp
and
call
sahf
fwait
mov
mov
repz
shr
or
sub
loope
mov
or
pop
pop
xor
jb
inc
out
pop
mov
lds
stc
xor
leave
stos
cld
cs
pop
push
ret
out
lahf
mov
popa
idivl
aas
mov
data16
cmp
jb
lret
push
imull
pop
sarl
out
mov
notb
shll
fwait
or
repz
jnp
stc
cmp
stc
aas
pop
xchg
cmpsb
cmp
mov
jle
inc
inc
js
jnp
cmpsb
ljmp
and
popf
xchg
sbb
pop
in
jae
aas
add
dec
lods
aad
lea
imul
push
cli
dec
cs
loopne
loop,pn
shr
add
call
je
add
xchg
popa
mov
pop
adc
shrb
xchg
lcall
int3
das
test
ret
jne
jmp
inc
jnp
jb
jg
lret
mov
cmpsb
pop
loop
push
ficoms
and
jl
mov
fdiv
add
mov
lods
cmc
mov
lds
jae
mov
data16
jnp
fs
ss
pop
sar
loop
iret
or
sub
negl
nop
ja
test
xor
jne
in
stos
mov
inc
jge
jle
jno
scas
pushf
jle
mov
sub
add
jge
hlt
cwtl
inc
push
cltd
jle
sub
pop
inc
scas
imul
push
inc
fs
in
jae
movsb
shll
pop
pop
ret
cli
loop
pop
jns
xor
xor
repz
push
pop
ficomps
adc
in
out
and
mov
add
int3
jg
adcb
jb
sbb
call
jecxz
jbe
insl
xor
popf
mov
mov
shr
add
out
sbb
dec
stos
shlb
lods
fimull
inc
ljmp
pop
out
in
jl
jae
and
lods
stos
dec
sub
pop
mov
es
sbb
mov
popf
push
jmp
sub
rcrl
inc
negb
cmc
sbb
push
pop
faddl
jp
sti
aas
inc
xchg
enter
rolb
mov
mov
or
and
add
dec
inc
xchg
dec
inc
lods
pop
ret
out
or
icebp
leave
pop
cmc
xchg
inc
in
test
cli
xchg
ja
addl
mov
push
ja
loope
mov
imul
nop
test
sub
imul
enter
sbb
and
sti
sub
ret
imul
enter
sub
inc
test
mov
pop
push
lret
ret
sbb
xchg
clc
and
xor
inc
adc
fnstsw
cmc
sub
shl
pop
data16
cmp
jp
fdivrl
lods
mov
es
cmp
pop
push
repnz
mov
sbb
fs
fs
popf
mov
aad
adc
jns
popa
xlat
or
rolb
push
and
sbb
test
push
popf
fstpl
jp
mov
push
push
repnz
das
ljmp
je
jae
add
mov
xor
inc
ret
testl
or
cmpsb
in
pop
fwait
sub
pusha
adc
add
popa
into
call
cmp
add
aas
pop
pop
scas
loop
dec
jg
cmp
dec
and
pop
xchg
pop
cmp
xchg
movsl
push
cmp
push
jmp
jmp
xchg
nop
xchg
ret
insl
cmp
popf
stos
push
nop
shlb
sub
pop
pop
roll
sub
lds
pop
fnsave
pop
test
sbb
sub
lods
incb
enter
adcl
pop
sti
xchg
ret
add
mov
les
movsl
mov
data16
roll
shlb
imul
in
mov
or
dec
pushf
ljmp
fisttps
lods
pop
pop
lret
adc
jo
cmc
iret
push
xchg
mov
cmp
outsb
jge
lcall
sti
pop
xor
jmp
jl
ljmp
pop
scas
cmpsl
xor
jno
inc
or
outsl
data16
mov
enter
stc
push
dec
dec
push
mov
jmp
arpl
push
dec
outsl
loope
lahf
out
sub
push
inc
iret
dec
test
sbb
mov
out
dec
fadd
or
pop
pop
push
daa
icebp
nop
pop
sahf
shl
push
cli
pusha
lret
imul
xlat
sahf
mov
mov
push
cmc
add
sub
aam
sbb
leave
push
push
fcompl
pop
mov
or
bound
adc
and
or
pop
pop
add
divb
lret
leave
push
or
jle
ljmp
add
pop
out
mov
dec
data16
fs
pop
testb
xor
andb
bnd
inc
and
mov
in
pop
int
dec
scas
jo
sub
jo
push
pusha
pusha
cmpb
loop
mov
mov
xor
daa
in
iret
mov
xor
orb
push
cmpb
inc
cmp
stc
inc
sahf
ljmp
out
int3
adc
icebp
cmp
in
lods
add
dec
xchg
fwait
cwtl
jg
adc
dec
lds
popf
jl
es
dec
pop
jnp
mov
fisubs
mov
stos
push
mov
outsb
sub
das
xchg
or
shll
dec
popf
fcmovnu
dec
lds
sub
push
movsb
subb
sbb
mov
stc
mov
adc
inc
push
insl
popa
mov
add
lret
js
je
pop
sbb
push
jae
aas
mov
mov
dec
mov
inc
sub
mov
xlat
fmuls
push
mov
cmp
add
and
add
jl
movsl
hlt
cs
int
cltd
es
das
and
fisttps
out
and
es
loop
xorl
push
pop
add
jecxz
xchg
xchg
ds
dec
aas
mov
sbb
out
sub
push
outsb
xchg
insl
cmpsl
push
lods
pop
pop
dec
stc
jmp
out
les
outsl
cmp
jno
mov
leave
sbb
pop
cmp
adc
mov
adc
or
daa
fisubrl
xchg
into
insb
cltd
inc
cli
pushf
inc
rolb
mov
dec
lods
xor
fmul
data16
inc
xlat
mov
mov
gs
sahf
cmpsb
dec
leave
imul
loop
imul
push
push
xor
and
sahf
int
lret
sbb
sbb
xchg
xor
mov
jbe
inc
clc
xchg
leave
xchg
jbe
xor
sti
cmp
push
and
jmp
jne
daa
push
inc
adc
xor
insl
jbe
cmp
loopne
aad
push
mov
xchg
aaa
inc
es
add
std
and
addr16
mov
or
push
or
cmpsb
testb
xchg
cltd
dec
mov
bound
int
fiadds
push
jp
xor
into
jp
pop
jp
pop
enter
movsb
add
lods
clc
hlt
jmp
enter
jo
inc
loop
outsl
or
ss
push
lahf
call
movsb
xchg
aaa
fsubrp
shrl
sahf
mov
in
push
lea
mov
rorb
mov
daa
jnp
pop
daa
or
out
cli
daa
imul
inc
lret
out
mov
cltd
fisttpll
mov
testb
out
lahf
mov
push
stos
dec
ds
int
mov
in
ret
or
mov
add
repnz
insb
aaa
pop
xor
mov
jp
xchg
add
lods
sahf
or
push
or
jae
or
xchg
or
iret
pop
jae
push
mov
cmpb
or
icebp
xor
cmp
mov
lds
ss
xor
mov
or
subb
or
jecxz
nop
mov
lock
push
cmp
mov
test
sub
test
mov
out
and
inc
popf
in
cmp
mov
scas
sbb
push
mov
cmpb
pop
mov
ja
fisubs
jbe
pop
or
cwtl
subb
cltd
pop
sti
sbb
out
daa
int3
outsl
cmp
pop
iret
and
cmc
xchg
std
inc
adc
push
push
gs
and
xlat
push
mov
jmp
in
leave
popa
sbbl
mov
test
fdivl
hlt
push
imul
test
fstpt
ja
fdivs
add
pop
inc
insl
pop
or
and
mov
add
lahf
sbb
lret
sbb
or
in
jb
movsl
jl
or
mov
push
loope
hlt
bound
dec
jbe
add
dec
jge
jno
dec
add
sbb
jge
outsb
mov
repz
sbb
lahf
and
pop
lds
mov
out
push
enter
pop
sahf
sub
je
out
xor
sbb
sub
sarl
divl
mov
xor
faddl
into
pusha
cltd
sbb
loop
pop
fwait
jbe
into
jno
out
inc
push
jno
xchg
leave
dec
fcomi
sub
sti
push
jp
adc
push
insl
mov
leave
dec
fdivrl
insl
dec
in
lcall
test
push
pop
cli
cmp
bound
aaa
jns
cmp
lock
xor
mov
pop
jle
imul
fs
adc
imul
xchg
add
aad
xchg
push
adc
in
push
jns
lods
push
mov
jnp
push
push
cmpsl
addb
sbb
or
out
movsl
addr16
lds
in
add
sub
push
lret
js
in
mov
clc
je
push
rorb
roll
mov
into
loope
add
inc
mov
xor
insl
jae
fldl2t
movsb
mov
mov
hlt
adc
push
popf
sti
pop
fmul
cmp
fimull
jecxz
ret
or
enter
and
mov
js
lahf
xchg
clc
insb
inc
sbb
mov
rcl
sahf
pop
scas
stos
fcmovne
push
xchg
enter
das
pop
mov
jg
pop
pop
ds
inc
mov
ja
adc
das
int3
jge
cmp
clc
mov
inc
aad
mov
fisubl
ds
push
pop
xchg
jo
mov
and
js
pop
push
sbbl
imul
inc
cmc
loope
ss
or
leave
repz
inc
ds
shrb
mov
std
push
dec
fstps
mov
idivl
sarl
addb
lea
cmp
in
jns
jno
pop
aaa
inc
or
dec
fadd
cmovge
pop
cmp
jae
mov
test
imul
inc
xorl
inc
or
movsl
mov
sbb
loope
push
mov
jb
test
mov
or
xchg
sbb
shlb
pop
fnstenv
insb
xchg
fists
or
jge
xchg
test
out
sbb
xor
fadd
push
add
bound
out
pop
and
arpl
pop
and
out
mov
jecxz
jl
or
xchg
hlt
bound
cmc
addr16
ja
iret
cmp
or
ret
and
mov
jg
mov
lret
lea
sar
xchg
push
pop
sub
dec
in
jae
addl
idivl
aam
ds
pop
and
cltd
inc
imul
or
jnp
push
ds
fwait
out
aam
aad
or
adc
mov
icebp
push
mov
mov
xchg
into
pop
add
daa
les
insl
or
out
xor
or
in
and
adc
cmp
out
scas
out
mov
popa
xchg
xlat
aad
insb
and
add
sub
aam
inc
imul
jp
pop
test
aas
mov
movsl
inc
mov
rclb
stos
sbb
sub
mov
sub
repnz
dec
movsl
aam
xor
fiaddl
cmp
jp
pop
std
and
jnp
scas
shrb
inc
aam
fistps
dec
mov
sbb
mov
xlat
out
push
inc
xchg
js
mov
push
int
adc
xchg
das
push
sub
mov
or
or
je
outsb
dec
or
inc
insl
cwtl
arpl
ja
sarb
inc
pusha
sub
stos
jmp
in
nop
icebp
sbb
int3
stc
adc
popf
sbb
cmp
push
adc
sbbl
push
mov
test
cmpsl
repnz
arpl
adc
sahf
stos
mov
in
xchg
push
and
lods
jnp
push
xchg
mov
fnstcw
jne
adcb
push
sub
sub
xchg
sti
and
jae
xchg
or
test
and
ret
outsb
inc
cs
sub
in
fld1
icebp
int
mov
fxch
jg
xchg
inc
and
mov
dec
sbb
push
in
and
stos
cmp
jp
fistpll
xchg
addr16
mov
fimull
sbb
hlt
cmpsb
add
lods
test
cmpsl
push
mov
jg
popa
pop
or
mov
or
or
mov
inc
ljmp
xchg
add
out
jb
xor
mov
out
inc
js
pusha
mov
test
fstps
mov
daa
pop
push
mov
outsb
push
fcoms
push
es
imul
push
and
out
fucomip
mov
jg
pop
dec
push
dec
fists
add
mov
push
loop
aaa
jp
aad
cmc
sub
jb
stos
sbb
jbe
mov
or
xor
rcrb
mov
rcll
imul
popf
push
ss
mov
xchg
dec
mov
cmp
mov
movsb
xor
mov
cmovg
inc
and
movsb
repz
aas
shrb
sbb
out
in
jge
lea
jg
mov
jb
shll
and
adc
sti
ror
dec
pop
sub
mov
mov
jp
push
js
stos
sbb
jns
sbb
fcomps
enter
push
scas
sti
push
inc
mov
fsubl
pop
jmp
cmc
sub
xorl
and
scas
stc
xchg
sahf
addl
repnz
inc
mov
in
cltd
or
in
imul
mov
pusha
jmp
push
lahf
sub
aad
sub
inc
pop
enter
movsb
out
fldt
sub
les
mov
and
fcompl
xchg
xor
sbb
mov
sti
and
adc
stc
xor
push
adc
or
or
mov
jg
pop
imul
aad
out
mov
mov
testb
aaa
sub
cld
sbb
pushl
pop
and
jl
stos
clc
cli
cld
inc
movsl
sub
and
cmp
add
add
les
mov
shlb
pushf
leave
or
add
shll
sub
push
inc
icebp
std
mov
lahf
add
seta
fwait
call
cld
or
mov
mov
into
sbb
cwtl
jp
xor
pop
dec
fwait
pop
pop
or
jmp
jne
mov
inc
add
xchg
pusha
ljmp
andb
aas
dec
ret
into
mov
xchg
and
in
inc
and
data16
lods
xchg
in
movb
mov
jbe
aam
mov
add
cwtl
jnp,pt
cmp
sti
jp
jbe
out
and
dec
orl
adc
cltd
mov
push
mov
adc
push
popa
mov
push
dec
ss
jb
mov
scas
lcall
fstpl
mov
inc
ds
jecxz
and
push
es
lahf
pop
sub
sbb
mov
or
inc
popa
cmp
mov
ret
frstor
mov
inc
into
mov
mov
jo
pop
cmp
jbe
adc
test
shr
inc
insl
fldcw
ds
insb
jg
fnsave
sbb
sarb
push
fbld
and
xor
lods
daa
bswap
jl
ds
loopne
jnp
mov
mov
adc
aas
in
loop
add
pop
or
ret
sub
adc
imul
xchg
xchg
push
sub
jle
xchg
and
push
xor
jl
fs
jl
jp
sahf
mov
xchg
xchg
pusha
jnp
incb
sarl
jge
cmpsl
pop
cli
adc
stos
mov
aaa
push
pop
insl
and
and
testb
mov
adc
jl
push
fbld
out
sti
mov
fwait
cmp
pop
sub
fildll
or
xchg
or
aam
push
pop
imul
sub
dec
mov
hlt
daa
jecxz
call
imul
lcall
cltd
pop
flds
cmp
push
push
shll
cmpl
xor
insl
aaa
pop
cs
jge
call
inc
mov
jnp
sub
add
subl
scas
lret
fdivrs
sti
xor
or
xchg
sahf
push
rcl
stos
mov
pop
cmp
cld
jecxz
hlt
and
nop
pop
mov
pushf
push
fidivl
push
dec
xchg
lea
lods
jb
or
int
mov
cmc
into
test
jb
in
imul
jg
lods
dec
shlb
divb
ljmp
popa
out
or
dec
insl
adc
push
pop
mov
in
leave
fdivl
test
xor
add
mov
xchg
scas
xchg
popa
ficompl
add
pop
lret
ret
ret
mov
and
cwtl
test
subl
pop
cmp
mov
gs
xchg
jne
movsl
fdiv
movsb
mov
fdiv
stos
std
adc
add
jb
jecxz
cmp
nop
add
test
push
icebp
popf
stc
ret
ss
push
or
push
inc
and
xchg
lea
fdivrl
pushf
lods
inc
dec
mov
repz
pushf
pop
movb
xchg
lods
jle
loop
pop
mov
jb
enter
push
aad
jns
push
xchg
mov
pop
mov
je
mov
inc
adc
inc
pop
ret
mov
jne
pop
rclb
fsubl
ljmp
mov
fbstp
adc
addr16
fstps
aam
adc
add
outsb
jno
int3
stc
cmpb
hlt
jl
bnd
xchg
add
shrl
pop
repnz
mov
addr16
mov
bound
enter
or
in
cwtl
pop
in
cmc
inc
stc
sbb
and
xor
push
inc
inc
dec
pop
sbb
fiaddl
add
imul
xor
sub
dec
xor
cmc
mov
fidivrl
aam
sub
mov
inc
pop
dec
push
jne
xchg
test
xor
jnp
or
xchg
jg
sbb
out
add
iret
mov
test
addr16
cli
and
test
xor
mov
lods
mov
or
xchg
sar
jno
sub
sahf
fs
int3
pop
push
scas
rol
cmp
mov
dec
test
into
jae
in
enter
dec
jmp
dec
fdivrp
inc
outsl
fcoml
ret
out
mov
clc
xor
mov
push
jbe
jmp
fldl
inc
pop
pop
test
xchg
fnstsw
add
outsb
out
lahf
cs
mov
iret
lods
test
inc
xchg
enter
mov
add
dec
fbld
int
cld
mov
adc
adcl
test
dec
dec
or
mov
jp
arpl
movsb
mov
insl
xchg
gs
add
in
fs
icebp
test
fistps
inc
pop
and
cli
in
xor
mov
mov
sub
jmp
pop
fcompl
pop
xchg
mov
out
imul
push
push
pop
adc
sahf
ret
mov
add
cmp
sub
bound
inc
and
xchg
aam
mov
lods
push
mov
push
push
jno
out
in
into
lahf
sbb
lock
lret
xchg
test
sub
adc
cs
and
push
jg
inc
daa
add
rcrl
xchg
push
push
or
fcomps
ss
pop
mov
lods
push
es
adc
inc
je
testl
dec
mov
add
aam
aam
mov
jne
fidivrl
push
imul
mov
and
mov
mov
adc
and
pushf
cwtl
outsl
insb
cld
loopne
inc
je
lea
scas
stos
les
ljmp
lock
sbbb
mov
lret
sub
call
jb,pt
fs
inc
enter
lea
ja
push
mov
mov
push
push
xor
adc
cmp
xorb
lret
es
fmuls
adc
cltd
je
lods
inc
loopne
and
xor
in
mov
xor
push
sbb
inc
inc
lea
push
ja
cmp
cmpsb
and
push
loopne
inc
das
add
test
inc
out
jmp
dec
xchg
inc
mov
xchg
ss
add
arpl
ret
movsb
lock
add
test
xchg
xchg
xchg
jecxz
push
ret
testl
mov
jb
push
leave
aad
pushf
inc
jno
mov
out
dec
imul
je
clc
push
xchg
lcall
call
repz
cmp
movsb
mov
sti
dec
loopne
mov
and
arpl
mov
call
inc
fnsave
popf
out
insb
sahf
adc
test
sbb
jp
adc
shrb
nop
das
fisubs
dec
jge
sarb
xchg
sahf
daa
or
and
lds
dec
sub
ljmp
cmp
jne
adc
int
sahf
test
jmp
ret
sbb
xor
fnsave
mov
decb
jl
repz
adc
inc
inc
jle
mov
cmp
push
jle
or
popa
stc
mov
mov
scas
mov
cli
dec
cmp
pop
adc
sub
lods
pop
adc
xchg
and
pushl
mov
inc
inc
sbb
push
push
cmp
stos
cmpsb
jno
dec
loopne
outsb
cwtl
xchg
add
insb
push
jbe
lods
les
cmp
push
push
push
test
jns
inc
pop
jle
sbb
movsb
daa
pop
jbe
jg
shlb
jle
push
fsts
cs
adcb
adc
mov
cs
cwtl
cmp
mov
adc
jae
dec
icebp
push
aam
fstps
inc
arpl
cs
mov
shrb
inc
inc
inc
fisubs
testb
mov
sub
cmp
insb
ljmp
test
jmp
mov
xchg
mov
call
cmp
push
push
mov
mov
in
pop
sarb
test
outsb
js
xchg
dec
jmp
sub
lret
jecxz
sub
ret
xchg
add
mov
nop
dec
jno
mov
dec
sbb
mov
ja
out
sub
and
or
sbb
dec
jbe
imul
and
mov
lods
mov
movsl
sbb
push
xor
stos
inc
pop
call
push
push
mov
por
adcb
pop
ljmp
xor
mov
mov
push
int
and
push
push
ret
fcoms
out
test
jge
pop
in
mov
fnstsw
cld
add
pop
in
data16
cmp
xchg
and
and
push
rcll
jb
mov
shll
cmp
xor
push
clc
or
fsincos
fisubrl
jns
mov
stos
mov
sub
and
je
push
mov
jne
stc
je
mov
les
mov
pop
sbb
xor
stc
jp
and
and
mov
pop
dec
outsb
cmp
push
movsl
mov
jae
mov
clc
jnp
divb
fs
jmp
mov
xor
test
push
add
repz
push
mov
mov
loope
jb,pt
icebp
push
int3
loop
cmp
ds
repz
cmp
test
jb
sub
das
push
or
fldl
sbb
jl
jno
push
fnstsw
mov
dec
aad
or
cmc
dec
fs
jg
imul
mov
ss
andl
pop
mov
mov
jg
mov
sub
dec
lahf
jae
and
fnsave
push
cmpsl
pop
push
mov
cmp
inc
mov
stos
enter
leave
push
lcall
add
psrlw
mov
loope
loopne
cltd
xchg
cli
push
xchg
sub
je
dec
repnz
and
movb
pop
and
dec
dec
cmp
xor
jl
leave
push
shrb
push
mov
rcrl
imul
outsl
xor
das
add
xor
dec
out
pop
pop
lcall
mov
inc
test
mov
dec
scas
cld
push
in
cmp
add
xchg
fcomps
je
enter
mov
mov
cli
and
inc
jmp
xchg
test
pop
lret
mov
sar
jg
aaa
dec
loopne
out
sarl
cmp
fldl
jmp
data16
cltd
inc
and
mov
cs
shrb
outsl
pop
mov
pop
rcrb
out
addr16
jg
dec
cltd
lea
inc
icebp
adc
rcll
add
in
mov
dec
jecxz
daa
cmp
sub
mov
cltd
push
mov
cmp
sub
push
enter
jp
or
jne
fstl
fisubrl
sysenter
xor
mov
sbb
push
mov
in
mov
xchg
divb
cld
mull
cmc
cmpsl
cwtl
insb
cmp
lret
loop
adc
popf
xlat
pop
dec
mov
fsubrs
je
or
sbb
fildl
xlat
pop
subl
int
jp
cld
lods
std
cli
subb
popa
or
pop
mov
ja
cmc
subl
inc
ja
inc
inc
ss
in
mov
push
enter
cmp
sar
inc
or
ljmp
and
inc
rorl
adc
inc
sub
xor
enter
cmp
xchg
aad
cld
arpl
add
lret
push
jbe
mov
pusha
push
enter
push
xchg
or
lods
rcl
shlb
imul
popa
mov
mov
add
mov
enter
pop
sarl
pop
jmp
cmp
jmp
movsb
les
mov
pop
or
sbb
test
mov
push
jp
nop
out
mov
imul
sbb
fnstcw
cld
lock
adc
nop
mov
xor
adc
out
sbb
scas
push
jmp
mov
inc
sti
ficompl
fiadds
inc
mov
lea
int3
sbb
push
dec
je
pop
fisubrl
xor
std
mov
int
fstpt
and
lret
js
mov
nop
aas
aaa
iret
push
mov
sbb
jge
lods
inc
inc
adc
adc
jmp
cltd
mov
movsl
data16
or
call
lock
cmc
pop
adc
dec
pop
mov
ja
pop
cmp
push
sti
bound
bnd
cmpsb
lods
es
fstps
pushf
inc
lcall
hlt
ss
imul
mov
mov
add
incl
inc
repnz
out
xchg
xchg
fisttpl
xchg
xchg
imul
ret
lret
cmc
mov
mov
jbe
aaa
stos
pop
add
or
mov
out
pushf
jp
test
xor
sub
mov
movsl
dec
rcpps
xlat
pop
mov
xor
cmp
lds
mov
inc
insl
xor
lahf
mov
dec
pop
mov
push
sub
xor
es
lods
sbb
xor
pushf
mov
adc
push
jno
cmc
cld
and
lock
push
mov
push
mov
cmp
xchg
ror
int
cmp
mov
lret
xchg
mov
cmp
xchg
xor
mov
jbe
cmp
push
add
xchg
cs
mov
xor
repz
enter
mov
adcb
sbb
or
mov
test
clc
cmpsl
mov
xor
add
js
loopne
mov
fcomps
and
leave
add
mov
stos
sub
int3
mov
in
jp
mov
ret
mov
adc
imul
sbb
ds
cmp
addl
lcall
add
push
lods
fdiv
add
insl
dec
mov
jnp
jae
dec
xor
mov
or
loopne
out
push
and
lock
lods
jp
xchg
mov
test
add
pusha
xchg
hlt
jnp
fcomps
xor
xor
enter
mov
clc
jg
dec
rol
dec
ds
jmp
in
rorl
inc
push
fiadds
call
enter
aad
imull
adc
xor
test
mov
lods
aas
jp
ret
mov
adc
clc
cmp
stc
jnp
cltd
mov
lock
add
add
pop
sahf
loop
pop
xor
sub
mov
and
sub
push
mov
int
stos
notb
and
and
leave
push
imul
xchg
pop
dec
inc
push
xchg
dec
cmc
fdivl
xor
push
ret
add
adc
daa
push
iret
jp
xchg
inc
shld
std
shlb
cmpsw
mov
mov
mov
and
mov
test
loope
imul
in
ja
in
push
fnclex
dec
ja
icebp
fnstcw
inc
clc
mov
or
movsl
sub
push
xchg
lods
or
sub
add
pop
push
pop
jl
out
out
imul
jns
in
shl
jmp
outsl
test
mov
setge
mov
adc
js
or
pop
jbe
adc
cmp
clc
fdivr
and
xor
nop
iret
cmp
xchg
cmp
add
daa
bound
xor
aad
adcl
bound
mov
push
aam
xor
inc
fs
pop
cli
lods
cmp
sti
xchg
mov
dec
test
xchg
cmc
pop
psrld
pop
in
inc
test
sub
lret
andl
fcompl
jmp
xchg
cmpsl
ljmp
aam
adc
popf
popf
call
jg
js
xchg
fsubl
inc
sbb
pop
mov
mov
sbb
dec
mov
iret
mov
mov
mov
mov
lret
outsb
aad
add
hlt
inc
or
add
popf
xorl
jge
pop
lahf
js
xor
cmove
pop
inc
lods
fwait
xchg
scas
cmc
push
sub
mov
out
dec
sbb
cmc
and
xchg
jno
xor
xchg
adc
mov
popf
hlt
pop
aad
loopne
mov
xchg
add
add
fs
jo
and
daa
sub
aas
je
imul
lock
cmpsb
stos
stos
shrb
push
aam
inc
xor
sub
inc
out
push
movsl
movsb
dec
xchg
and
pop
stos
out
and
nop
and
cmp
inc
pop
scas
lret
pop
pop
rolb
sbb
fcmovnbe
scas
fcom
or
push
inc
hlt
push
adcb
pop
mov
mov
xchg
xchg
scas
out
stos
ret
and
mov
mov
lcall
sub
jg
insb
mov
ss
aad
test
mov
int
push
lahf
movsb
sub
and
icebp
test
add
xchg
add
fidivrl
in
dec
jge
arpl
cltd
nop
fs
sbb
cld
pop
jmpw
fimull
sbb
icebp
mov
hlt
xchg
pop
pop
dec
pop
fisttpll
pop
outsb
ret
repnz
nop
mov
popf
or
lret
outsl
fwait
xchg
cwtl
lock
mov
dec
pusha
push
dec
add
mov
sbb
stc
adc
jbe
pop
jle
dec
xchg
stos
aas
pop
mov
ds
cmp
lods
sti
push
and
mov
fildll
cmpsl
insb
fcoml
adcb
push
fbld
hlt
dec
imul
insl
gs
mov
out
movsb
aaa
adc
cmp
fwait
shl
lcall
lock
stc
call
movsl
enter
test
addr16
sub
cs
incl
cmp
stos
adc
icebp
rorl
sbb
out
and
mov
adc
cmpsb
mov
je
aas
jns
cmp
push
incl
sub
add
jbe
push
insb
jae
jl
pop
pop
sub
push
mov
jb
int3
pop
sahf
dec
test
popa
loop
pop
push
in
loope
dec
pop
inc
cmp
call
loop
mov
mov
xor
xchg
sub
push
xor
sbb
pop
aas
and
cmp
out
jge
fs
leave
dec
mov
add
sbb
or
mov
inc
and
dec
inc
xchg
pop
inc
fdivs
mov
lock
xchg
lods
mov
out
push
fisubl
in
idivl
push
ficoml
add
jge
xchg
xor
enter
fs
pop
xchg
mov
rclb
dec
and
je
xchg
adc
mov
insl
adc
test
aad
sarl
add
cmp
push
fstps
inc
in
pusha
xchg
push
lcall
inc
push
dec
test
in
and
js
sbb
jae
sub
pop
rcll
xor
push
mov
sbb
jns
popl
mov
test
and
sbb
pop
push
clc
mov
outsb
stc
push
int3
loopne
jnp
lods
or
dec
inc
fisttpl
lahf
xor
leave
sti
mov
xchg
inc
std
fwait
sbb
sbb
xchg
xorb
sub
ds
cmpsl
cmp
imul
aas
add
cmpsl
cwtl
mov
mov
push
add
jbe
loopne
sub
inc
mov
push
push
sbb
in
nop
in
leave
xchg
jo
adc
es
scas
cmpsl
mov
dec
jb
push
fstps
mov
cmp
jle
hlt
mov
in
pop
icebp
aad
leave
pop
mov
jl
movsl
rorl
fbstp
addr16
leave
inc
ret
hlt
pop
mov
jmp
into
rcrb
ret
lret
cs
cld
mov
fstpl
mov
dec
adc
sub
fisubrs
sbb
loop
popa
mov
cs
imul
push
negb
push
push
dec
lods
push
bound
and
shrl
shl
shrl
sbb
imul
mov
adc
push
jbe
pop
hlt
push
call
rolb
push
je
xchg
test
jl
outsl
ljmp
loop
mov
ja
mov
mov
push
call
push
adc
push
ja
sbb
push
xchg
push
mov
in
andl
std
out
cli
push
dec
faddl
fcoms
aad
xor
add
or
push
mov
inc
push
adc
mov
pop
fbld
or
loop
lcall
pop
mov
push
sbb
pop
adc
fidivrs
xchg
shrb
inc
stos
dec
push
sub
xchg
and
and
sbb
xchg
inc
repz
push
cs
and
cli
dec
rcll
ficoml
rcll
push
jecxz
notl
push
aaa
dec
xchg
outsl
iret
pop
sub
and
insl
dec
xor
push
lret
mov
pop
fidivrs
push
mov
ret
add
ja
decl
popa
je
pop
cmp
xchg
mov
or
pushf
jno
mov
or
les
xchg
sub
sub
push
or
outsl
in
sbb
mov
sahf
and
xchg
mov
push
mov
cmp
adc
aaa
add
mov
cmp
jmp
fists
fnstsw
jno
pusha
fsubrs
repnz
mov
sbb
nopl
jp
xchg
xor
call
jle
jnp
pop
mov
movsb
imul
fwait
inc
shll
test
pushf
cmp
mov
daa
dec
sbb
in
stos
into
xchg
lcall
mov
rcr
loopne
cli
mov
aaa
mov
jae,pn
test
ds
jbe
andb
mov
mov
jne
push
dec
bound
ljmp
dec
pop
loop
and
sti
xchg
aas
xor
movsl
cli
outsl
xor
stc
jmp
addr16
sub
std
pop
mov
mov
jmp
mov
aaa
adc
pop
fldenv
fs
ljmp
or
loope
pusha
sub
adc
mov
popa
dec
pop
in
fistpl
inc
push
and
daa
ficompl
push
adcl
mov
mov
pusha
xchg
jns
popf
lcall
add
scas
test
adc
jno
movsl
cmc
mov
test
ljmp
loopne
icebp
push
xorb
xor
pop
cmp
pop
push
sub
lret
mov
jo
and
xchg
int3
xchg
test
and
dec
sub
popf
sbb
mov
jns
fdivp
push
or
push
fisubrs
inc
mov
addl
stos
aad
cwtl
bound
inc
fisubl
sub
nop
pop
ljmp
xchg
and
sub
jae
sub
mov
push
in
in
pusha
test
or
add
daa
add
jns
push
inc
dec
iret
lods
mov
sub
fwait
sti
sub
pop
mov
xchg
xor
sub
loop
and
outsl
int
xlat
fcmovb
sub
cmova
cwtl
push
push
int3
sub
fsubl
fsubl
cmc
push
rolb
out
lock
xchg
sub
addb
cmpsl
scas
jae
jo
mov
jecxz
inc
repnz
in
xor
sub
out
les
adc
or
pop
xor
in
lahf
pop
leave
loop
mov
sbb
and
roll
mov
push
cltd
sub
ret
adc
lods
repnz
or
mov
push
jp
bound
xchg
pushf
xchg
pop
scas
dec
or
fmull
sub
lcall
and
lock
fildll
inc
jecxz
push
add
dec
repz
mov
loopne
push
xlat
ret
movb
loop
incb
mov
mov
into
pop
and
insl
popf
fldl
std
out
and
dec
in
inc
movsb
enter
lret
cwtl
fidivs
inc
and
inc
dec
movsl
and
push
mov
mov
ljmp
mov
sbb
nop
int
pushf
mov
push
xor
mov
or
daa
loope
fbstp
xlat
pop
jo
in
xchg
call
divl
fscale
jo
das
cmpsl
int
push
scas
dec
and
fldenv
or
add
mov
int3
jl
push
jae
push
add
pusha
loop
sub
and
int
jmp
pusha
orb
mov
fs
cltd
cs
mov
and
push
or
xor
mov
inc
int
add
fdivs
fidivrs
push
fisttps
or
mov
es
leave
pushf
jne
loopne
cltd
ret
gs
mov
mov
mov
enter
mov
fcom
jnp
xchg
pop
fidivrl
inc
or
cmc
inc
out
push
call
xor
sbb
dec
push
cs
cmp
clc
pop
addr16
jb
cwtl
out
fidivs
sbb
out
aaa
push
lcall
out
xor
and
xchg
sbb
inc
sub
pop
dec
push
ljmp
cmp
lret
int
scas
push
add
mov
pop
pushf
out
mov
scas
cmpsl
call
cltd
xchg
xchg
mulb
mov
pop
adc
gs
jbe
repz
mov
mov
pop
jmp
jbe
xchg
push
cmp
fcoms
push
bound
push
std
test
out
inc
jg
sarb
ret
push
sub
cmp
rorb
scas
mov
aad
test
ss
jb
dec
js
xor
stos
movsb
sbb
cwtl
push
inc
loopne
int
xor
movsb
in
push
fldlg2
push
sub
cli
nop
das
jl
outsl
sub
jg
xor
cmpsb
and
dec
or
imul
push
jecxz
inc
sbb
or
pusha
frstor
mov
xchg
nop
lods
mov
mov
jae
add
inc
and
out
push
inc
dec
sub
loopne
xchg
sub
fwait
xlat
mov
push
das
sub
gs
mov
xchg
ljmp
stc
pop
xor
sbbb
lods
xchg
lea
jmp
lahf
jns
cwtl
pop
mov
add
stos
mull
cmp
and
inc
daa
mov
mov
jmp
mov
sub
inc
mov
mov
popf
xchg
movsl
out
pushf
or
dec
sub
jp
or
dec
mov
cs
adc
lods
shlb
sub
add
cmp
dec
fdivrs
lock
dec
add
xchg
test
dec
push
dec
sbb
mov
stos
out
dec
or
mov
cld
xor
fcmovne
cmp
sbb
mov
jmp
cltd
and
mov
inc
push
or
int
pop
mov
inc
shll
dec
out
data16
and
addr16
xchg
mov
shll
jle
dec
daa
push
mov
inc
test
loop
jo
ljmp
clc
or
lea
arpl
push
mov
mov
xor
xor
insb
cmp
push
mov
pop
cmpsl
into
sub
push
mov
push
sbb
sbb
inc
shrl
sbb
out
mov
xchg
push
ret
lcall
xor
sbb
and
arpl
fildll
shl
icebp
pop
push
xor
repz
sub
lock
xor
nop
fistpl
out
call
mov
mov
rcrb
es
pop
and
sbb
js
outsb
add
cmp
push
ljmp
push
and
outsl
stos
push
push
mov
cld
mov
mov
mov
div
aas
fisubs
pop
and
push
pop
xchg
cwtl
ja
outsl
inc
mov
pop
out
sbb
adc
in
cld
inc
jbe
fwait
out
mov
in
and
push
pop
cld
xor
xchg
fadd
sbb
in
xchg
js
jmp
xchg
fiadds
mov
jno
repz
mov
mov
adc
into
pop
in
rcrl
stos
dec
test
dec
and
cmp
loop
ja
sub
push
jecxz
dec
xchg
cmpsb
add
adc
ja
out
mov
sbb
adc
add
jecxz
dec
inc
jne
inc
mov
je
cltd
jge
mov
les
push
es
fmull
imul
dec
mov
adc
ret
cmp
push
dec
in
ja
xchg
xlat
clc
jne
cs
mov
or
add
aaa
je
push
inc
push
cld
aaa
cmp
out
ja
pop
sbb
mov
xor
test
mov
xchg
je
inc
sbb
call
and
shll
mov
call
out
aad
rcrb
cli
mov
aam
in
popf
arpl
pop
fs
fs
sbb
pop
dec
decb
rclb
adcb
cwtl
aas
inc
pop
and
jne
cli
out
mov
xor
lods
push
lea
mov
lret
jbe
push
lea
ret
enter
lcall
out
fucomp
or
xorl
and
sub
mov
enter
in
repz
loopne
and
jnp
jbe
push
push
loope
sub
loopne
sbb
xchg
lret
pop
sub
lds
push
xchg
sub
jnp
pop
orl
dec
mov
stos
or
pop
xlat
inc
lea
roll
jle
loop
cwtl
adc
inc
dec
push
xor
adc
mov
in
xor
iret
ret
sub
popf
cli
mov
into
nop
push
andb
mov
into
sbb
fwait
xlat
gs
aam
push
lods
mov
dec
mov
inc
and
scas
data16
insb
mov
add
lods
fdivr
leave
das
arpl
ret
sbb
mov
jo
fcmovbe
gs
fcmove
mov
sub
dec
push
or
jae
or
std
cmc
sahf
dec
lahf
stc
cli
lret
sub
cwtl
or
lods
mov
loop
inc
inc
mov
sub
and
out
sahf
jbe
iret
orb
mov
popa
add
sbb
cmp
fmull
iret
mov
xor
in
cmp
sub
dec
aaa
inc
int
xchg
pushf
lahf
sahf
add
jne
add
ljmp
pop
mov
mov
movsb
push
in
push
and
cwtl
sub
push
pop
push
popw
test
insb
cmp
popa
in
lret
jg
dec
std
pushf
xchg
jbe
shr
xor
lods
mov
sbb
pop
outsb
negl
roll
xor
daa
xchg
mov
test
jns
pop
or
fstpl
mov
addr16
imul
cli
sarb
lret
push
rcrb
and
mov
push
push
test
aaa
mov
push
ret
or
cli
mov
push
inc
fcmovnbe
add
cli
add
insl
or
cltd
lret
pop
or
sub
mov
add
xchg
mov
test
mov
or
int
aam
shrl
xor
adc
inc
cs
cmp
sbb
inc
jnp
sbb
hlt
das
loop
outsl
jb
lea
adc
pop
js
pop
movl
fstps
icebp
mov
pop
mov
inc
mov
mov
xchg
neg
negl
xchg
leave
addr16
imul
scas
outsb
push
and
pop
dec
push
mov
or
pop
dec
into
xor
inc
mov
xchg
jl
jge
add
incb
inc
sub
daa
das
fisttpl
jnp
imul
and
or
cmpsb
inc
cmc
aas
push
add
jp
push
inc
lods
xchg
scas
fidivrs
jmp
sbb
fldenv
adc
jecxz
leave
mov
lock
lret
loopne
loope
adc
out
mov
enter
mov
fiadds
mov
xchg
push
xchg
or
loop
inc
cs
fldt
xlat
push
xchg
dec
test
dec
test
mov
jnp
mov
jno
repnz
pop
clc
add
fs
stc
les
push
popl
out
mov
inc
push
pop
sub
rorl
aad
jmp
rorl
pop
pop
sbb
adc
das
jae
mov
cmp
jg
test
push
outsb
mov
push
imul
lock
jmp
ljmp
imul
xor
pop
call
rcr
data16
je
dec
mov
add
leave
ljmp
test
test
movsb
nop
imul
outsl
fcmovu
or
sbb
shrl
jo
sub
or
xor
and
jbe
mov
mov
stc
addr16
inc
xchg
sub
pop
cli
jnp
icebp
out
mov
pop
or
into
jbe
fisubrs
xor
rclb
adc
imul
cmp
in
outsl
adc
pop
in
push
cmpl
or
cmp
cmp
clc
and
mov
jb
hlt
out
and
sbb
bound
cmp
mov
xchg
in
xor
enter
gs
cmp
jo
adc
xchg
fiadds
out
dec
cmpsl
ret
sub
or
and
rcl
gs
shr
outsl
mov
and
jns
leave
hlt
inc
sub
mov
and
sbb
and
adc
loopne
push
sbb
das
push
dec
jg
mov
and
lods
lahf
repz
lret
leave
push
push
jg
push
sbb
push
push
sbb
in
and
fdivs
add
or
lret
pop
cld
ds
or
add
notl
push
orl
jge
cmpsb
enter
in
lret
xor
fadds
lret
lret
int
jbe
xchg
cmpsb
jbe
push
push
stos
dec
cmp
jge
and
rcrb
movsb
or
mov
sub
popf
mov
imull
mov
jns
push
push
mov
js
mov
jmp
sub
adcl
mov
inc
push
es
or
jge
sbb
sbb
mov
lock
pusha
loopne
in
pmulhw
icebp
mov
clc
bound
in
xlat
xchg
add
int
outsl
pop
insl
loopne
jl
int
mov
dec
xchg
pop
sbb
push
fsubl
in
xchg
push
inc
mov
xchg
push
dec
into
pushf
xchg
mov
jle
jae
lcall
test
flds
lods
fstps
pop
xchg
movsb
xor
xchg
insb
jb
push
dec
cmp
loop
jo
xchg
rorl
test
fadds
imul
sbb
mov
loope,pt
dec
call
cmp
xor
push
or
and
shr
cmp
cmp
jae
lods
pop
adcl
dec
jb
mov
mov
test
inc
push
xchg
mov
mov
out
lods
jnp
pusha
mov
lock
adc
xchg
cmp
ret
mov
xor
inc
push
mov
cwtl
or
outsl
xchg
adc
hlt
dec
pop
mov
hlt
and
or
scas
shr
inc
push
lahf
sbb
rclb
mov
push
or
popa
stos
mov
gs
mov
add
or
mov
fwait
push
or
adc
pop
pop
xor
int
mov
cltd
icebp
push
sub
gs
jge
sbb
dec
js
sbb
xor
mov
ja
sbb
xchg
or
dec
cwtl
sub
in
push
movsl
adc
and
add
fs
cmp
cld
repz
sbb
addl
imul
dec
xchg
outsl
xchg
adc
cld
dec
icebp
sub
xchg
cld
out
lahf
pusha
ds
pop
enter
gs
idiv
fildll
arpl
ljmp
nop
push
sbb
stos
jb
insb
into
push
fimuls
fnstcw
std
popa
lods
push
dec
lahf
test
imul
fcomi
clc
mov
lcall
cmp
shlb
rcrb
pop
mov
add
push
and
sub
fcmovbe
mov
pop
lock
data16
dec
inc
xchg
sub
shlb
subb
mov
lds
sahf
inc
into
notl
cmp
bound
mov
in
or
cmp
mov
test
jge
bound
and
mov
inc
mov
jb
inc
lock
repnz
inc
mov
popf
daa
pop
mov
jge
ret
fstpl
cmp
jbe
fsubl
std
out
mov
add
push
xchg
sbb
jb
push
daa
add
mov
mov
and
fldcw
pop
pop
cmp
jbe
dec
dec
push
repz
lahf
popl
cmp
xchg
fisubs
sahf
xchg
sbbl
push
xchg
push
in
mov
sub
nop
jle
xlat
jae
add
add
mov
fildll
scas
xchg
add
leave
sbb
jbe
inc
dec
xchg
add
fisubl
and
xor
mov
add
cmp
repz
xchg
xchg
dec
push
mov
cmp
pop
mov
xchg
xchg
mov
pop
into
and
mov
loopne
mov
push
add
dec
xchg
idivl
sbb
adc
iret
stos
mov
mov
das
out
cwtl
aas
sarl
push
mov
js
mov
hlt
aaa
pop
in
push
movsb
popf
sub
sahf
pop
sti
loope
loop
fwait
adc
aam
lahf
rcr
les
mov
or
mov
jecxz
cmp
adc
aaa
inc
or
xchg
popa
pop
push
adcb
jp
pop
scas
sbb
mov
sbb
movsb
mov
lock
jmp
repz
clc
mov
repnz
je
or
mov
fs
pop
je
cmc
mov
shl
nop
dec
into
xor
bound
iret
test
push
push
jmp
mov
push
sarl
add
mov
mov
inc
pusha
pop
lahf
lock
mov
cltd
mov
cld
inc
inc
iret
lret
cltd
fcoms
imul
adc
mov
and
adc
and
or
pop
adc
cmp
jae
mov
or
imul
gs
fiadds
inc
aam
push
or
sbb
jae
das
inc
test
jno
pop
push
repz
adcb
jge
add
in
scas
not
push
icebp
roll
xchg
xchg
or
cmp
mov
mov
cli
iret
mov
stos
out
mov
fistpl
xchg
push
adc
stos
jmp
iret
loope
jmp
loope
outsb
adc
push
inc
sub
mov
push
cmp
jns
bound
cmpsl
sub
mov
jnp
cmpsl
jb
out
sbb
jge
inc
rorb
and
shl
mov
mov
in
movsb
push
or
insl
sub
divl
and
dec
push
push
pop
ds
cli
fwait
adc
dec
lcall
jmpw
jecxz
fs
lea
fs
jg
mov
mov
inc
filds
xchg
andb
add
jle
mov
gs
mov
fmuls
imul
aam
adc
pusha
das
cld
in
add
or
fiadds
clc
icebp
loopne
xchg
dec
jmp
inc
ror
jecxz
arpl
fisttpll
mov
jb
sub
mov
sbb
popa
inc
pop
add
mov
cmp
aad
xchg
mov
jo
inc
popf
popa
div
add
cmp
ja
mov
xor
xchg
stc
mov
enter
xchg
out
fiadds
xor
xchg
rorb
in
pop
pop
je
dec
lods
and
xchg
pop
ja
pop
daa
sub
enter
mov
mov
icebp
pop
ds
stos
cmp
mov
or
repz
rorl
add
loopne
or
pop
sbb
rclw
mov
xlat
push
jmp
je
jns
cld
push
into
xchg
xchg
je
clc
inc
lds
jp
into
ljmp
cltd
dec
dec
pop
aas
adc
xchg
jnp
mov
jge
iret
inc
mov
xchg
clc
push
inc
xorl
iret
jne
add
dec
add
inc
lret
lea
xchg
pop
mov
aam
rorl
orl
in
aam
gs
sbb
add
and
mov
in
sub
lods
out
test
mov
push
lods
clc
inc
cli
or
sub
jae
cld
mov
fs
pop
cmpl
fisubrl
xorl
cmp
pop
icebp
push
pop
mov
into
dec
outsb
loopne,pt
pop
cmc
clc
aad
stos
or
cmpsb
xchg
jo
cmp
ds
cli
pop
add
add
pop
stos
mov
adc
push
mov
or
jae
mov
inc
lock
inc
mov
dec
or
icebp
call
in
aaa
bound
and
inc
xor
lahf
jp
test
enter
in
pop
rcll
lods
mov
mov
pop
stos
pusha
les
dec
rclb
dec
push
jnp
jmp
jg
adc
jb
or
pushf
loopne
adc
mov
jmp
adcl
or
cltd
jb
mov
or
and
sbb
sub
lret
popf
sbb
mov
scas
cmp
or
ljmp
mov
lahf
in
gs
mov
pushf
cmp
and
sub
jg
pop
and
iret
xor
mov
adc
sahf
lds
insb
push
pop
or
mov
xor
gs
sbb
popa
test
pop
insl
test
and
fdivrs
push
xor
sahf
inc
clc
hlt
cmp
adc
push
xor
leave
and
xchg
ja
mov
dec
fs
dec
jnp
cltd
lcall
mov
pop
or
mov
addr16
hlt
mov
jne
push
cmp
mov
fcomps
cmpsl
mov
cwtl
mov
jb
popa
xchg
xor
push
icebp
out
pop
js
or
xor
cltd
dec
jge
pushf
test
addb
or
rcrb
les
pop
and
adc
sbb
lea
mov
popa
or
dec
movsl
adc
test
je
jmp
dec
outsb
dec
push
mov
outsl
xor
shll
jbe
bound
ficomps
fnstsw
fsubs
xchg
loopne
dec
and
xchg
or
int3
or
push
mov
cwtl
xor
sbb
jno
arpl
fimuls
ljmp
adc
icebp
push
dec
xor
push
mov
fisttps
enter
or
inc
je
push
inc
push
xchg
mov
test
mov
inc
mov
aaa
outsl
xchg
lock
test
int
sbb
sbb
xlat
push
repnz
pusha
int3
and
adc
add
cmp
add
scas
or
fs
or
sub
loop
push
std
cmp
cmp
paddsb
sub
sar
and
mov
jae
insb
outsb
jbe
mov
les
xor
pop
mov
sti
mov
daa
inc
aam
adc
clc
mov
arpl
mov
fimuls
mov
sub
jg
imul
xor
loop
cmpsb
jbe
jecxz
in
hlt
nop
ja
mov
or
and
ja
sub
int3
adc
das
xor
xchg
dec
cmp
fdivs
out
cli
data16
and
outsl
bsf
orl
out
std
xchg
sub
jne
xchg
clc
cmp
push
hlt
dec
lcall
mov
sub
lods
mov
popa
mov
or
or
je
xor
rcr
sbb
mov
mov
sti
outsl
xor
sbb
jbe
mov
sahf
ror
lea
rcrl
sub
movsl
xor
scas
jbe
xchg
mov
fldcw
inc
mov
loopne
cwtl
add
inc
in
test
xchg
or
pop
jp
cmp
cmpsb
mov
xchg
in
mov
jno
sbb
cli
inc
into
add
int
mov
xchg
movsb
add
push
movsl
and
mov
push
push
popf
cli
dec
decl
leave
add
movsb
mov
imul
ret
or
fs
xor
arpl
cwtl
add
rol
orb
lcall
test
mov
cmp
sbb
movsl
xchg
dec
and
push
adc
repz
lock
lock
rcrb
inc
add
pop
daa
js
das
add
scas
jno
mov
lret
pop
test
xor
inc
xor
andb
and
stc
xor
in
pop
outsb
out
cli
movsb
xor
mov
sub
xor
lcall
pop
cmp
imul
and
aam
imul
xchg
xor
dec
push
inc
mov
push
imul
push
stc
or
pop
bound
roll
test
push
sbb
jbe
xor
mov
pop
sbb
movsl
jecxz
stc
inc
and
inc
lock
aam
adc
ret
add
hlt
mov
sahf
mov
add
sub
cmp
sbb
lods
lahf
sub
fnstcw
push
loop
fiaddl
lret
add
lea
mov
mov
pop
and
stos
lcall
push
sub
inc
mov
fmull
mov
pop
gs
mov
sbb
push
mov
or
es
or
cmp
xchg
push
cmp
mov
int3
loopne
pop
test
movsl
inc
xor
sbb
sbb
adc
xchg
fld
out
pop
push
in
add
mov
rclb
cmp
popf
outsl
push
loope
cmp
mov
loopne
jecxz
inc
push
or
test
push
in
jl
mov
jp
mov
dec
in
mov
adc
icebp
out
adc
jb
insb
or
arpl
push
jo
in
pop
mov
sub
lea
push
jmp
mov
xchg
and
lods
out
int
jae
lea
stc
out
mov
pop
js
sub
ficoml
ss
adc
lea
jl
mov
pop
pop
cmpsl
aaa
sub
loopne
inc
ds
ss
loop
loope
adc
mov
push
lret
mov
push
xchg
shlb
dec
iret
pushl
int3
dec
jl
pop
outsb
pop
or
je
push
pusha
sbb
xchg
into
dec
lahf
in
pop
dec
outsb
sti
sbb
ja
add
test
xor
add
popa
add
mulb
push
mov
repnz
xchg
pop
push
movsb
mov
cmp
pop
mov
imul
inc
add
xor
test
cmpsb
lcall
jmp
mov
sub
mov
adc
cmp
jno
jle
adc
in
xor
dec
lods
repnz
or
cltd
movsb
pop
cli
inc
gs
dec
and
pop
ljmp
and
sub
pop
data16
icebp
push
xchg
add
idivl
ljmp
mov
mov
jno
movsb
or
jns
cmp
mov
fiadds
lods
lcall
pop
bound
inc
or
nop
insl
cmpsl
imul
mov
in
mov
dec
test
cmp
insl
shll
dec
nop
iret
jp
loop
xchg
pop
and
xlat
popf
pop
test
aaa
pop
sahf
mov
cmpsl
push
add
vpsubusw
sub
movsb
mov
fsubr
xchg
mov
jmp
daa
xchg
out
out
cmp
cmp
mov
add
into
mov
pop
inc
sub
loop
mov
jbe,pn
movsb
and
sub
mov
fmuls
and
shll
das
add
push
mov
push
dec
mov
nop
aaa
jmp
pop
cmpsl
int
adc
dec
jecxz
clc
das
pop
aad
ret
addr16
inc
pusha
and
mov
or
sahf
add
je
mov
xor
jbe
ss
lods
cmp
mov
xlat
jle
pusha
xor
pop
inc
jle
jmp
mov
ret
mov
xchg
sub
cmp
and
imulb
sub
mov
mov
roll
lahf
sbb
xor
enter
xchg
cmp
add
push
xchg
mov
xchg
jmp
pop
mov
mov
push
push
sarl
inc
mov
das
push
add
addr16
int3
mov
pop
sbb
test
outsl
cmpsb
loope
sbb
cwtl
dec
popa
decl
fstpl
pop
dec
xchg
jecxz
mov
icebp
test
incl
loop
inc
fistps
and
jle
lds
hlt
xchg
cltd
mov
adc
pop
roll
dec
ret
push
and
xchg
mov
cmp
push
cmpl
adc
mov
out
call
push
push
lods
adc
movl
idivl
ret
adc
adc
pop
test
add
pop
ds
fdivrl
cmp
jg
fdivl
js
mov
ss
dec
outsb
sub
fdivrs
lret
stos
cmp
mov
jmp
test
scas
mov
outsl
xchg
imul
cli
xor
xor
adc
cmc
loope
sbb
pop
mov
mov
pusha
in
xor
pop
shll
push
in
sub
mov
inc
cmpsl
test
cmp
int3
loopne
cmp
jle
mov
scas
int
fistpl
icebp
mov
push
xchg
movsl
movsl
push
rcll
enter
add
mov
fdivrs
cwtl
das
push
add
inc
or
das
mov
bnd
push
clc
push
dec
mov
jb
cmpsl
iret
stc
mov
dec
adc
test
xlat
inc
pop
loop
mov
cli
fisubrs
arpl
mov
ss
jl
cmc
jmp
adc
aam
jae
jp
imul
mov
jmp
jmp
test
mov
dec
aaa
cs
xchg
sub
fidivrl
xor
push
adc
fucom
cmp
push
scas
or
lret
xlat
lods
or
adc
push
out
sbb
xor
pop
cwtl
xchg
test
in
addl
decb
push
inc
js
adc
mov
sub
push
cwtl
es
call
add
or
sub
mov
test
push
add
push
push
mov
push
stos
dec
xchg
jg
inc
sti
push
mov
sbb
mov
adc
ret
stos
xor
stos
sbb
dec
dec
mov
sub
cmc
shrl
jnp
mov
inc
addr16
cli
aad
into
insb
into
mov
pop
imul
and
pop
xor
dec
in
xchg
mov
mov
mov
stos
sub
xor
jns
inc
or
decl
sbb
jg
out
mov
mov
xor
and
cmpsl
icebp
push
ret
jmp
sbbl
dec
adc
or
mov
pop
inc
in
test
shlb
in
mov
shrb
out
bound
and
je
push
sti
mov
jge
jns
pop
push
out
adc
jmp
pop
xlat
mov
repnz
adc
lods
lods
stos
ficomps
adc
into
xchg
jo
sub
jl
mov
pop
cmpsb
jnp
cvtps2pd
mov
cmp
test
push
xchg
mov
int3
sub
cwtl
fwait
or
popf
lret
or
jecxz
adc
rcll
movsl
xchg
push
in
mov
int
mov
or
adc
ret
popa
push
dec
inc
daa
sbb
aaa
sahf
adc
pop
aam
fcompl
xchg
or
mov
pop
cmp
in
out
fisubs
push
add
lods
cmp
cmp
mov
cmpsb
repz
jne
pop
xchg
push
test
inc
pop
arpl
and
cmp
fisubs
outsb
dec
cltd
sub
adc
or
leave
rclb
mov
inc
idivl
stos
sub
mov
test
popf
iret
roll
andl
loopne
out
fldenv
dec
lea
sbb
add
movsl
and
stos
sub
test
dec
adc
xor
das
mov
and
addl
mov
ds
sub
jge
subl
cld
lods
or
push
shlb
mov
mov
push
ljmp
out
xorl
arpl
xchg
adcb
jnp
test
test
push
pop
pop
ja
andl
lahf
xor
or
inc
xchg
fwait
loopne
and
jns
xor
xor
xor
cmp
insb
lods
daa
cmpsl
cmp
stos
test
pushf
in
adc
pushf
push
in
loope
xor
pop
leave
mov
add
or
lahf
scas
dec
or
lock
fstp
ror
rcrl
xor
aas
dec
pop
ret
shll
cltd
jle
iret
sbb
mov
add
repnz
ljmp
mov
data16
cmpb
push
xlat
add
jp
inc
mov
loope
push
cmp
mov
insb
pop
sbb
push
lcall
sub
daa
sub
ss
inc
adc
or
rcrl
out
add
mov
sbb
jae
adc
mov
ds
cmp
es
sbb
nop
rcrb
cmp
sbb
clc
sub
push
outsl
add
dec
testb
je
loope
pop
mov
adc
popa
std
xchg
lock
add
mov
or
push
sti
inc
mov
jae
daa
mov
inc
das
movsb
or
mov
push
fcoml
mov
dec
dec
add
fwait
jae
clc
in
les
push
rorb
or
adc
cmp
cltd
ja
mov
xchg
mov
fistps
loope
xchg
cmpb
sti
cli
xchg
and
adcl
mov
ret
and
cmp
xchg
int
xor
in
jecxz
fildl
xor
jge
loope
stc
cmpsl
push
cmp
cwtl
dec
icebp
out
mov
aad
stos
repnz
mov
and
inc
lods
cmpsl
add
js
test
pop
xor
dec
jl
sbb
xchg
xor
aas
mov
cmc
pushf
mov
int3
fcompl
xchg
insl
aaa
inc
add
adc
mov
pop
push
xor
dec
js
pop
lods
bound
push
mov
inc
out
sbb
rorl
sub
out
mov
pop
cmp
mov
enter
xor
mov
dec
jecxz
je
lea
jmp
add
sub
xchg
jg
rcrl
sbb
pop
imul
mov
pushf
out
aas
je
call
sbb
repnz
sysret
mov
adc
imul
dec
movsb
inc
dec
rcll
dec
fisubrl
fsubrp
xor
loopne
ret
mov
enter
mov
pop
cmp
ret
xchg
mov
arpl
shrl
aaa
mov
add
into
add
or
push
sub
bound
sub
arpl
or
idivl
sub
cli
stos
popa
imul
xchg
int3
sbb
pop
sub
dec
jle
sbb
clc
jo
imul
push
cmp
adc
jb
inc
push
sub
in
mov
adc
push
jg
imul
dec
testl
cmp
cli
jnp
daa
rorl
pop
movsb
int3
add
sub
les
lea
cmc
loope
das
movsb
push
push
pop
cwtl
dec
cmpb
popa
jb
jp
add
dec
push
outsl
pop
test
push
dec
sub
cmpb
enter
jp
jecxz
adc
xchg
icebp
inc
js
jne
push
aad
jns
adc
or
js
rol
mov
and
int
lret
mov
xchg
jb
loopne
push
mov
jbe
mov
mov
rolb
and
mov
jecxz
out
jge
mov
pop
xor
cs
sbb
fcoms
aam
pop
jl
xor
dec
nop
xor
and
dec
sub
pushf
and
dec
loopne
xor
data16
cmp
push
jbe
lds
add
hlt
mov
fwait
stos
lcall
mov
mov
lods
xor
pop
mov
mov
inc
sbb
pop
out
jmp
sarb
mov
enter
cltd
imul
addr16
fstl
and
das
xchg
decl
mov
popf
push
pushf
mov
out
movsl
test
cmpsb
dec
add
xchg
pop
hlt
mov
in
std
mov
movsl
cmp
loope
dec
lock
and
or
sbb
dec
cld
ficomps
pop
pop
loope
les
sarb
std
cmc
lret
and
cmpl
mov
push
jg
mov
pop
push
sub
push
cmp
inc
add
sahf
rolb
sbb
andl
mov
xchg
mov
add
push
lock
and
mov
fnsave
xor
mov
add
cmp
out
pop
aad
push
in
ret
gs
popl
data16
pushf
xchg
je
orb
push
inc
stc
imul
out
lret
mov
mov
push
sub
cmp
mov
fst
and
lds
jno
addr16
sub
or
add
shll
int3
out
insl
sub
mov
loop
jns
outsl
sti
mov
mov
pop
dec
daa
add
lds
loopne
out
js
mov
test
ret
fistl
int3
mov
scas
bound
rorl
loop
push
outsl
in
jp
xchg
daa
push
sbb
testl
push
mov
mov
cmp
sub
pop
insl
clc
out
jge
inc
cmp
xchg
testl
pop
loop
inc
rolb
dec
jo
or
ljmp
outsb
dec
mov
and
cmp
dec
dec
lds
add
dec
pop
push
pop
mov
sarb
movsl
xor
lds
sbb
test
lret
mov
leave
fmuls
jb
das
loopne
test
pop
loopne
xlat
gs
in
aaa
movsl
lret
setg
dec
push
inc
in
fnstsw
lcall
outsl
mov
pop
inc
fadds
dec
out
cs
adc
mov
adc
hlt
push
psubw
fsub
pop
adc
call
jno
cs
iret
mov
test
add
mov
mov
jne
sbb
adc
std
ret
cli
stos
and
imulb
inc
mov
push
mov
xchg
mov
repnz
in
inc
add
cmp
jle
push
adc
push
outsl
dec
xor
sub
fsubp
pop
sbb
into
or
fimuls
aas
add
add
dec
lahf
int3
lods
pop
imul
mov
pop
push
out
mov
addr16
jle
jg
jns
sbb
fidivrs
pop
movsl
or
and
lods
mov
xchg
or
xchg
int3
lret
pop
loope
or
mov
mov
in
push
xchg
cmp
icebp
mov
mov
mov
mov
mov
xor
nop
gs
mov
inc
sub
mov
push
fucomi
mov
push
xchg
mov
jmp
pop
sbb
xor
and
pop
dec
dec
testl
ljmp
jno
nop
jl
pop
mov
sub
xor
ljmp
outsl
imul
mov
icebp
sbbl
mov
push
mov
insb
por
sbb
jo
lahf
pusha
arpl
fisubrs
or
push
xor
bound
and
popf
push
lcall
push
xlat
loope
push
aam
ds
pop
xor
mov
rcrb
cli
hlt
clc
xchg
and
dec
or
lahf
mov
inc
stos
sub
scas
push
add
aaa
addr16
or
ret
hlt
pop
es
push
ds
fs
arpl
sbb
movb
mov
or
stos
mov
pop
mov
ror
leave
jo
cmp
das
andl
ljmp
inc
dec
add
jb
mov
add
pop
incb
mov
cs
adc
pushf
adc
lahf
fs
sub
loop
nop
add
mov
inc
jno
rclb
cmpsl
jne
xchg
jo
cld
or
in
add
in
outsl
adc
movsb
enter
dec
sarb
mov
fisubs
daa
pop
das
fucom
jp
rcrl
loop
xor
xchg
sbb
cmc
dec
or
sub
jle
cmp
jae
push
sbb
packsswb
repnz
test
push
and
enter
ret
aad
xchg
fmul
lcall
add
aaa
dec
lret
or
pop
incb
cmp
or
jbe
call
ljmp
add
lds
dec
outsb
rorb
sub
mov
out
cmp
or
jge
and
scas
xchg
loopne
cwtl
and
hlt
clc
ret
and
sbb
mov
mov
cwtl
nop
xor
sbb
xchg
das
mov
push
lods
pushl
mov
int3
lds
pop
or
jle
jp
push
push
xchg
sub
jne
ds
dec
cmp
fsub
sbb
mov
adc
inc
movd
scas
jns
loope
fnstenv
pop
mov
stc
pop
out
add
fcompl
in
dec
ret
pop
pop
popa
out
daa
mov
and
push
aad
sub
jns
sahf
movsb
scas
push
or
dec
in
xchg
fadds
lods
pop
push
outsb
adc
ja
dec
sub
insb
loop
aam
shlb
shrb
and
in
push
fsubs
das
cld
negb
inc
pop
adc
pop
inc
movsb
lahf
mov
negl
add
pop
fcomps
jae
and
sahf
jmp
xor
je
lret
test
ret
ss
ret
arpl
lods
pop
insb
sbb
push
adc
popa
jmp
shll
jecxz
sbb
les
xlat
in
das
mov
jle
push
aam
add
pop
js
jne
cmp
add
xchg
divb
rorl
and
in
adc
push
fiaddl
pop
add
shll
mov
push
jne
outsb
stos
lret
xor
lods
or
out
iret
add
xchg
scas
ja
adc
test
call
test
sbb
add
fsubrs
enter
testl
xchg
sub
inc
cmp
jbe
push
bound
fcoml
mov
jno
and
pushf
mov
xchg
ljmp
or
dec
mov
dec
ret
xor
push
sbb
ljmp
outsb
mov
xor
fs
inc
pop
lock
fsub
ficoms
cmpsb
mov
popa
mov
or
pop
pop
and
aas
loop
and
ret
aam
cmp
adc
das
mov
bound
pop
fcom
test
jbe
icebp
and
outsb
mov
into
ret
mov
das
adc
aas
ss
xchg
mov
dec
inc
pop
shlb
mov
dec
pop
mov
loop
fwait
xor
icebp
adc
jne
out
popa
loop
loope
jno
pop
pop
fsubs
adc
lahf
dec
sbb
sbb
mov
gs
jbe
mov
adc
aaa
fwait
jb
xchg
loope
lret
cmp
dec
clc
cmpsl
subl
mov
scas
inc
xchg
mov
in
mov
mov
fisttps
mov
jmp
jmp
loope
popf
pusha
cmpsl
adc
push
xchg
push
push
add
in
fisubl
ljmp
jno
mov
push
mov
sahf
cli
jb
cli
push
jnp
testl
mov
jle
cmp
dec
sub
adc
jno
pop
stos
in
push
or
mov
es
jo
mov
lock
in
in
cmp
jge
cltd
je
in
add
inc
aas
pop
lods
and
sbbl
addr16
popf
xorb
add
xchg
ss
rorl
rorb
push
mov
jae
lahf
popf
repnz
pop
nop
xor
iret
mov
pop
mov
bound
jno
add
movsb
sbb
xor
mov
mov
push
add
insl
pop
rorb
test
mov
dec
dec
adc
hlt
in
arpl
movsb
outsl
mov
dec
ss
int
and
jmp
jae
push
pop
pop
add
shlb
int
out
push
out
pop
dec
mov
push
dec
inc
sub
sub
mov
clc
jbe
ds
cmp
ret
sbbl
add
daa
mov
rcrb
mov
add
mov
sbb
negb
cmp
sub
sbb
mov
ja
sbb
cmpsb
dec
int
pop
xor
xchg
rcrl
jbe
jmp
jmp
xchg
pop
cs
out
mov
add
int
dec
fwait
pop
sbb
lock
xor
xlat
xchg
sub
call
ss
mov
xor
enter
xor
cmp
aaa
xchg
ret
cmc
sub
mov
mov
dec
cmp
popf
jnp,pn
rcl
dec
icebp
fs
out
arpl
sub
xor
cmpsb
test
cmp
and
outsl
mov
stos
jmp
xchg
jbe
add
dec
mov
sub
inc
mov
lahf
mov
mov
pop
leave
sbb
xorl
popf
sub
lock
ficompl
pushf
dec
movl
stos
addr16
xlat
mov
push
leave
in
fadds
cmp
fbstp
mov
fnstenv
pop
add
xor
and
fcoms
cmp
xchg
mov
pop
and
daa
or
pop
shll
and
aam
xchg
das
in
cmp
ret
xchg
dec
fs
outsl
into
imul
subb
imul
pop
lock
addr16
inc
in
ds
aaa
or
or
xchg
lea
sbb
ds
inc
dec
outsb
pop
aas
sub
into
jno
andl
jp
fwait
lods
int
ja
pop
lcall
repz
push
fs
cwtl
dec
or
out
mov
mov
jo
adc
lret
sub
push
in
adc
pop
dec
pop
xor
enter
aaa
mov
inc
scas
ret
mov
lret
arpl
mov
xchg
xor
enter
pop
enter
pushf
pop
push
pop
dec
es
dec
adc
ja
ret
xchg
pop
adc
cmp
sub
clc
dec
sbb
push
add
fists
movsb
jecxz
inc
ds
xchg
or
add
sub
sahf
les
mov
jp
xor
das
sbb
and
mov
mov
xchg
out
mov
lds
cmp
mov
imul
and
lock
hlt
pop
lock
adc
xchg
ret
xchg
mov
xchg
xchg
subl
push
repz
mov
xchg
xchg
out
ret
xchg
push
fwait
pop
mov
jl
sar
cmp
outsl
movsl
fdivl
ds
pusha
aas
pop
in
jo
and
ret
xchg
jne
int3
scas
cwtl
push
call
mov
mov
or
mov
jp
add
xor
inc
and
mov
pop
loopne
iret
push
jo
or
xchg
inc
mov
jmp
ja
and
dec
in
into
es
xchg
in
fisubrl
incl
cli
stos
popl
add
loopne
sub
test
ljmp
push
mov
push
hlt
pop
iret
shrb
mov
ret
int
push
pop
mov
xchg
pop
adc
repnz
xchg
mov
adc
call
faddl
leave
jne
or
ret
add
mov
cmp
inc
cmp
aaa
fisubl
push
ss
aaa
insb
pop
lea
icebp
sub
notb
or
and
and
push
push
dec
mov
xchg
pop
ret
lock
fsubp
sub
push
cltd
inc
xchg
add
mov
fistps
mov
sub
push
and
dec
hlt
in
sub
mov
mov
imull
lret
add
sub
dec
movsb
mov
addl
test
lahf
lcall
mov
leave
cmpsb
pusha
leave
dec
push
lret
push
shlb
mov
insb
push
xchg
fidivs
scas
push
fistpl
jnp
stos
outsl
dec
cmpsb
push
insb
mov
xor
dec
mov
shlb
sbb
imul
cltd
mov
xchg
test
insl
rorl
xchg
push
pusha
push
jae
add
movsl
sbb
push
test
inc
aam
inc
push
mov
mov
pop
jle
xchg
adc
ss
jp
cs
dec
cmpl
mov
test
add
xor
ja
cmp
cli
dec
adc
aaa
and
stos
push
sbb
pop
outsl
int
lahf
lret
imul
mov
push
xchg
and
mov
mov
or
mov
xor
xor
xor
aam
movsb
xor
in
fsubrl
lcall
push
pop
sti
mov
sahf
imulb
fbld
pushf
out
sbb
bnd
dec
push
pop
sub
xor
scas
mov
xchg
push
rcrl
pop
push
mov
xchg
jae
mov
cs
lret
cltd
xchg
mov
cli
popa
movsb
mov
test
pusha
cltd
loopne
sbb
inc
xor
add
lret
jle
int
nop
rcr
xor
inc
data16
es
fnsaves
push
sub
std
mov
adc
mov
iret
imull
cmp
daa
cmp
pop
cmp
xchg
into
cld
arpl
adc
push
push
fs
xor
jg
bound
pop
popf
jnp
shr
inc
cs
jo
fnstcw
adc
fidivl
cmp
cwtl
jne
or
leave
cwtl
and
mov
fildll
sbb
jp
dec
fnstcw
cmpsl
cmp
lods
push
mov
sub
rclb
out
sbb
mov
push
dec
dec
jmp
push
sbb
fisttpll
pop
icebp
cwtl
roll
pop
call
mov
xchg
cld
fstpt
push
popl
dec
jae
adc
or
inc
lods
loope
enter
stc
int
repz
xchg
push
bound
cwtl
addr16
fnsave
mov
dec
jl
jl
xchg
sub
lock
sub
int3
ja
rcl
xor
pop
jmp
inc
repnz
loope
jb
pop
out
xlat
and
es
cmpsl
mov
fmuls
xor
arpl
sarb
ja
push
mov
mov
cli
xchg
sbb
lds
inc
xchg
add
xor
out
jns
pop
add
add
in
enter
aaa
int
fistl
sub
lahf
or
and
xor
repz
mov
dec
js
adc
sti
into
data16
stc
les
dec
cwtl
mov
subl
shl
lock
jg
mov
jbe
cli
mov
std
mov
pop
cmp
hlt
dec
js
or
jb
xor
or
ja
out
inc
mov
xchg
jno
xor
xchg
loope
jbe
jns
les
push
adc
stos
lret
mov
jge
pop
jl
xchg
or
xor
mov
jg
and
jecxz
xor
mov
fistl
int
inc
out
clc
shrl
mov
dec
ljmp
pop
mov
std
add
aas
pop
push
icebp
pusha
out
daa
rol
mov
lock
push
inc
insb
adc
lcall
dec
mov
fs
and
and
pop
stos
icebp
outsl
sub
repz
adc
jno
dec
stos
pop
sub
cmp
mov
int
test
in
es
pop
and
int3
iret
mov
mov
push
sub
xchg
push
movsl
mov
lock
in
dec
loopne
cmp
or
imul
shlb
outsb
jno
bound
inc
mov
in
cwtl
xchg
test
jge
or
cltd
jg
pop
push
stc
scas
lods
adc
inc
and
arpl
adc
js
inc
das
dec
inc
lods
pop
ret
daa
xor
nop
insb
lahf
xchg
xchg
inc
inc
test
mov
mov
mov
xchg
jp
out
mul
cld
stos
mov
jae
jge
xchg
mov
or
cmp
cld
xor
insl
pop
push
cmp
and
add
and
cmp
mov
push
ret
subl
mov
insl
neg
clc
pop
jns
lock
inc
xchg
and
xor
adc
mov
jns
lret
and
xor
and
scas
loopne
pop
fmuls
repz
push
adc
mov
add
xor
or
xlat
jae
std
pop
xchg
ror
in
mov
add
mov
dec
add
popf
push
leave
repz
dec
addr16
xor
das
repnz
mov
rcrl
fimuls
iret
je
push
sbb
lds
sub
or
leave
jo
popf
data16
or
xchg
sub
insb
bound
mov
repz
mov
push
pushf
mov
xor
dec
sti
mov
pop
sbb
out
imul
adc
ds
lea
test
add
jo
movsb
imul
fwait
ret
ds
mov
mov
ss
and
in
jge
int
xor
xor
imul
inc
mov
cmc
cmpsb
jnp
cs
pop
leave
pop
xor
in
adc
jne
fstl
sbb
mov
mov
inc
mov
gs
sub
push
mov
xchg
or
ljmp
xor
sbb
icebp
mov
jmp
test
fucomip
cmpsl
movsl
in
add
inc
pushf
dec
mov
push
push
dec
ret
sub
sbb
inc
insb
int
sub
mov
push
andl
jb
fldcw
cs
in
pop
adc
sarl
and
sarl
mov
or
pop
out
pop
cwtl
out
in
rclb
or
adc
in
scas
cmp
ficoml
push
sub
pop
sub
fs
inc
pop
xchg
mov
push
xchg
mov
inc
stc
addr16
out
ja
orl
mov
es
lods
sub
lret
push
je
or
cmpsl
insb
mov
jecxz
popf
inc
std
icebp
xor
cmp
dec
jne
cmp
jns
or
ret
push
mov
testb
out
mov
cs
rcrl
xor
scas
mov
mov
xlat
nop
ret
test
xor
sbb
imul
jecxz
xchg
and
cmp
pop
int
popa
ljmp
ja
xchg
adc
jmp
push
subb
jmp
je
rcll
lcall
jg
ja
and
sbbl
movsb
mull
xor
lahf
jge
mov
and
scas
adc
stos
inc
jo
arpl
sbbl
xchg
outsl
pop
pop
dec
sub
std
fidivl
add
in
mov
jbe
lds
mov
pop
mov
repz
int
out
sub
inc
mov
jae
pop
out
and
neg
jne
testb
jns
stc
shl
cli
mov
push
loopne
ret
push
mov
cmp
rcrl
or
rol
addr16
and
test
mov
xchg
dec
mulb
lahf
mov
rcll
xchg
jnp
pop
mov
les
adc
cmpsb
out
dec
jg
in
and
mov
outsl
hlt
mov
inc
dec
inc
leave
divl
insb
stos
pop
stos
repnz
jnp
jl
cmp
xchg
lods
shrb
cmp
dec
pushf
inc
orb
pop
and
jo
fstps
mov
or
adc
xchg
rcl
or
xor
push
dec
and
outsb
mov
test
push
cmp
popa
test
push
jbe
imul
sub
dec
mov
inc
cwtl
sub
fwait
ret
inc
pop
notl
enter
aad
fwait
outsl
iret
jmp
sti
cmpb
test
push
jae
push
into
hlt
xchg
fstpl
cltd
ds
pop
mov
and
lods
cmpsl
jbe
test
aaa
sub
dec
insl
jae
popa
repz
sbb
ret
jp
pop
jae
or
incb
pop
inc
and
jmp
unpcklps
cld
aam
in
lea
push
pop
xchg
shrl
jle
in
hlt
aam
or
sub
sbb
push
cmp
xor
mov
push
pop
in
mov
mov
in
sbb
cld
ds
jne
inc
loope
imul
pushf
inc
sbb
pop
dec
add
ret
and
mov
cmc
lock
adc
push
aad
sbb
out
int3
les
sub
jmp
dec
pushf
popf
mov
test
loope
and
pop
in
adc
inc
js
jp
xchg
pop
cwtl
or
xor
jmp
and
mov
lahf
aad
jnp
mov
push
iret
sbb
pop
ljmp
out
adc
lcall
in
push
fucomip
pop
or
xchg
mov
jne
stc
dec
ds
xchg
sti
jbe
lods
pop
push
pusha
out
mov
mov
inc
and
mov
xchg
mov
xchg
cmp
inc
ljmp
fs
mov
fwait
int3
jns
or
fs
mov
aad
pop
inc
mov
sub
repz
mov
push
adc
jecxz
loop
inc
and
mov
push
sub
in
fwait
jl
test
mov
inc
cmp
je
add
xchg
push
cmp
call
ret
push
icebp
xor
sbb
out
jg
pop
adc
loopne
sbbl
and
or
adc
cmp
xchg
imul
xor
pushf
cmpsb
or
jl
ret
std
push
or
push
movsl
push
dec
mov
jae
lret
pop
jp
rorl
xchg
cmp
cmp
adc
jp
xchg
xchg
dec
and
push
nop
test
repnz
xorb
movl
jne
rcll
ret
mov
mov
jns
neg
xchg
mov
pop
dec
stc
mov
ficoms
daa
xor
inc
icebp
xor
pop
repnz
shl
jns
fucomi
or
push
sbb
enter
lea
adc
push
push
in
and
xor
shll
incb
cmp
xchg
scas
jo
std
sbb
xchg
nop
pushf
push
pop
mov
sub
mov
loopne
jge
jg
push
xorl
ss
pop
stos
jecxz
roll
jno
push
pop
mov
and
rcll
adc
mov
xor
jg
dec
paddq
add
imul
pop
inc
jmp
enter
ljmp
cmp
leave
sti
mov
xor
cmp
sub
cmp
gs
jge
add
sub
mov
nop
stc
mov
add
jno
cmc
mov
sbb
arpl
jb
dec
or
push
sbb
adc
push
jg
insb
sbb
fsubs
popf
and
enterw
scas
jp
sbb
inc
pop
int
in
inc
add
je
sub
xor
push
sahf
adc
call
jns
aaa
adc
mov
inc
pop
ss
xchg
adc
mov
xchg
sub
or
loopne
pop
mov
stos
stos
stos
movsl
mov
int
jge
push
jb
jge
std
insl
rcrb
ja
leave
stc
push
mov
sbb
and
test
cmp
fstpl
cmp
imul
ds
mov
aas
fdivrp
fldcw
mov
inc
and
add
pop
dec
and
push
or
and
into
in
loope
xor
addr16
fcompl
adc
adc
sbb
les
fidivrs
je
cmpsl
pop
inc
xor
or
sub
mov
adc
stos
int3
scas
or
inc
call
push
mov
into
dec
mov
imul
inc
cmp
pop
sbb
mov
loopne
mov
repz
xchg
ret
dec
mov
cli
pop
or
std
dec
pop
or
jnp
pop
pop
lcall
rcrb
lcall
push
lods
cmp
inc
push
int3
out
jp
cmp
fwait
cmp
pop
aas
in
cmp
jnp
mov
jno
out
aam
stc
icebp
stos
dec
xchg
subb
cs
xchg
hlt
lret
mov
and
nop
sbb
lods
aam
in
jle
pop
dec
sbb
mov
mov
add
jbe
sahf
adc
push
mov
les
outsb
xchg
inc
dec
mov
or
jnp
lahf
fdivrl
pminub
xchg
sbb
lahf
inc
cmpsb
lahf
insl
pop
cmp
xchg
inc
pop
ss
jbe
inc
shlb
pop
mov
sahf
les
ds
add
sbb
ljmp
mov
sub
das
xor
push
jbe
fcmovne
inc
jbe
fstps
movsl
data16
ja
fcompl
pop
sbb
sub
loopne
lea
sbb
xchg
lahf
ffreep
out
cmp
int3
cli
pushf
mov
mov
rcl
add
pop
test
inc
sub
frstor
mov
jne
call
add
inc
push
xchg
lea
mov
push
push
out
jecxz
imul
fisttpl
das
dec
dec
fcoms
add
xor
pop
mov
out
icebp
pop
ret
ret
ret
dec
adc
js
imul
mov
add
icebp
jnp
add
dec
xchg
jecxz
sbb
je
or
pop
jmp
insl
icebp
xchg
pop
or
lods
ficoms
push
loope
lcall
and
jnp
add
and
sub
cmp
xchg
movsl
int3
xor
adc
in
xchg
lods
inc
xor
ss
cli
scas
scas
xchg
push
int3
xchg
test
jp
push
cmp
fcomps
jg
andb
cmp
and
sub
pop
inc
dec
adc
push
clc
roll
leave
in
mov
stos
and
jl
fdivs
or
imull
fs
push
cmp
xor
mov
lret
lcall
ret
sub
jge
gs
push
xlat
fcomi
pusha
cmpsl
pushf
daa
in
mov
mov
data16
loopne
mov
or
dec
dec
sbb
sahf
call
js
mov
mov
jno
icebp
sbbl
incb
cmpsb
outsb
pushf
aam
pop
sti
addl
add
mov
or
jmp
icebp
fs
das
mov
push
inc
test
sbb
xor
xor
cmc
fistl
jg
es
test
jl
and
cmpsl
orl
or
stos
mov
push
sub
nop
or
xchg
xor
pop
add
lock
outsl
in
out
inc
cmp
inc
pop
mov
cmc
dec
ret
out
dec
fcmovb
dec
xchg
mov
leave
fs
xorb
jmp
jnp
ss
mov
push
cltd
std
test
pop
in
in
sti
mov
movsl
mov
adc
addb
mov
dec
jle
int
and
decl
mov
iret
mov
leave
inc
pop
dec
sbb
adc
mov
lcall
mov
jge
dec
push
mov
push
pop
push
mov
sbb
int3
fbstp
mov
inc
cmp
lds
sub
push
push
les
push
pop
dec
insl
pop
scas
into
mov
scas
shl
ficomps
push
and
jp
dec
fsubrp
mov
rol
mull
das
or
push
sbb
pop
cmp
subb
popf
push
sti
jo
frstor
in
lret
jmp
out
push
loopne
and
scas
mov
pop
sub
jmp
ret
ret
out
popf
lret
repnz
subb
out
shll
inc
aam
fnstcw
bound
cld
jle
xchg
aas
dec
pop
pop
sarl
adc
mov
repz
push
clc
pop
jp
jle
xor
adc
cmp
sbb
loopne
xchg
cmpsl
outsb
push
mov
and
pop
push
dec
mov
and
outsl
rcrb
and
out
mov
jl
outsb
out
arpl
mov
and
mov
call
mov
jle
sar
xor
sti
jp
mov
lahf
das
or
pusha
es
inc
pushf
mov
or
pusha
jp
and
loop
xlat
adc
fcmovbe
aam
and
sti
jle
or
cmpsb
sahf
push
lahf
mov
nop
lcall
pushf
xlat
movb
jmp
push
cmpsl
imul
inc
or
pop
push
data16
rorb
xor
lods
std
sub
std
pop
pop
inc
pop
adc
fmuls
in
js
sbb
pusha
sbb
cltd
or
rcl
mov
pop
dec
sub
fnstenv
or
jno
push
jmp
cmp
out
ficompl
jne
pusha
loop
sub
mov
xor
mov
fsubs
add
ds
push
test
jb
cmp
lock
in
add
xlat
jnp
jno
inc
mov
push
pop
adc
inc
or
mov
pop
inc
mov
push
adc
push
loope
int
dec
repz
and
ret
mov
push
xchg
mov
or
inc
mov
movsb
jbe
jecxz
lods
pop
test
pop
push
aam
cwtl
scas
test
pop
jae
call
add
repnz
sub
mov
aam
ljmp
pop
adc
fcomp
mov
ss
aaa
arpl
aam
mov
jbe
and
jne
les
shlb
prefetch
cmp
xchg
sub
mov
inc
ficoml
or
lds
pop
aas
inc
cli
sub
adc
aaa
sbbb
fistl
leave
sub
pop
pusha
push
sub
push
or
sbb
sbb
mov
dec
mov
sahf
test
in
push
add
add
jle
mov
xor
inc
in
or
xor
dec
xchg
xor
test
lcall
loopne
add
pop
dec
dec
add
jno
add
test
or
je
pop
fnstsw
cmp
outsb
jb
inc
mov
loopne
mov
push
out
call
lret
loope
repnz
ljmp
stc
popf
pop
pusha
sub
adc
hlt
mov
ja
mov
shll
fmulp
mov
xor
nop
ljmp
out
ja
enter
mov
mov
xor
inc
cli
jp
cmp
call
and
jae
jb
or
enter
fldenv
aaa
pop
push
sub
jno
fwait
cmp
cmp
dec
sbb
insl
or
lcall
jne
pop
fcomp
clc
test
or
sub
leave
out
cmp
cmp
fwait
push
stc
movl
repz
jge
inc
pop
scas
test
push
xor
sahf
aad
int
inc
jo
dec
cmp
xchg
lret
xchg
popf
sbb
jb
pop
mov
enter
or
addb
jnp
add
sub
cs
js
xor
fdivrs
fldenv
or
arpl
jne
cmp
sar
ja
xlat
push
in
and
inc
es
adc
fs
dec
sub
xor
cmpsl
loopne
int3
xchg
repnz
loop
stc
fmuls
dec
mov
popf
ds
mov
inc
dec
inc
iret
into
push
repz
aaa
sarl
in
lds
js
out
fnsave
jge
inc
push
lcall
mov
enter
pop
and
mov
sub
cmp
pop
nop
push
popa
pop
mov
enter
add
sbb
jbe
sub
xlat
jae
pop
jmp
cmpsl
popa
dec
jno
push
xor
and
cmp
shr
arpl
adc
sbb
js
shlb
js
pop
cmp
add
decl
repz
mov
cli
ja
and
xchg
dec
inc
push
push
sarb
cmc
xor
xchg
out
das
in
dec
sub
add
out
cmovs
pmulhuw
cltd
in
adc
mov
leave
das
mov
cmpsl
mov
sbb
std
cmp
and
movb
add
xchg
lahf
cmp
jno
popa
scas
jae
call
dec
into
ljmp
or
stos
mov
lds
jmp
addr16
lret
jns
xorb
rorl
mov
adc
mov
sub
xchg
push
movb
push
js
pop
rcrl
divb
mov
push
xchg
std
inc
inc
fs
jbe
rcll
mov
cwtl
xchg
jle
adc
xchg
push
test
push
push
inc
mov
js
jge
mov
shrl
fsubrl
mov
subb
mov
jge
xchg
push
insl
leave
add
nop
dec
idiv
sub
loop
aas
int3
orl
inc
int
jns
out
test
xor
int3
cmp
cltd
outsl
rorb
push
jmp
or
aam
push
inc
rolb
cld
mov
xor
xor
dec
mov
stos
fwait
mov
sub
xchg
scas
icebp
dec
int
pusha
or
and
adc
lcall
fisttpl
fidivrs
sub
add
mov
pop
push
je
add
mov
pop
cmp
in
push
popf
pusha
push
push
imul
push
fdivs
mov
scas
mov
outsb
rorl
pusha
dec
test
popf
insl
rcrb
fidivl
jl
dec
sub
xor
movsl
ja
sbb
jp
xchg
sub
push
mov
loopne
jae
adc
sahf
in
sub
mov
push
push
loopne
fimull
insb
or
jo
repnz
cmpsl
pushf
sbb
js
dec
jg
adc
imul
sbb
rorb
out
daa
cmovo
dec
mov
sub
cmp
scas
add
aad
pop
popf
mov
psubw
ja
cmp
inc
lods
jle
dec
or
mov
adc
push
mov
xor
ret
xor
jmp
push
out
cld
scas
xchg
std
pop
push
and
adc
inc
add
scas
cmp
sub
lahf
fwait
addr16
inc
jle
sti
push
inc
jmp
loop
fxch
stc
icebp
lods
mov
daa
xor
aaa
mov
add
sbb
imul
je
std
ss
cmp
movl
loop
pop
test
cmc
push
clc
loopne
cmc
neg
mov
pop
jno
push
and
fcomi
loope
mov
iret
aaa
ds
lods
inc
fucomp
add
mov
cmp
xlat
je
aas
and
leave
lret
fnstsw
sub
testb
jl
imul
jbe
gs
pop
cltd
cmp
rol
cmp
pop
mov
call
pushf
cmp
jle
cmp
push
mov
scas
adc
or
movsb
leave
dec
loopne
lcall
aam
mov
je
call
push
mov
test
mov
jmp
test
das
pop
dec
cmp
ret
mov
sub
mov
xchg
adc
nop
sahf
cmc
or
fildl
push
and
ljmp
jecxz
and
push
sbb
sbb
add
sub
xchg
jg
dec
daa
enter
mov
testl
dec
inc
sub
das
hlt
cmpsb
mov
iret
mov
pop
mov
jge
or
leave
jmp
pop
int
cmp
jge
lahf
es
lret
addl
lret
sub
push
pop
mov
pusha
stos
mov
sbb
cmp
or
cld
mov
shr
jns
mov
movsl
jp
fdivrs
mov
mov
stc
or
imul
jae
and
shrl
sahf
insl
sub
fidivrl
mov
lds
push
test
lret
ret
ret
aad
scas
xorl
push
xor
ss
add
xor
inc
mov
inc
jns
int3
lods
ja
gs
fsts
out
loope
xor
gs
dec
mov
sub
mov
inc
into
mov
in
enter
push
pop
nop
xchg
cmp
dec
pop
sti
inc
jmp
dec
stos
ja
ljmp
jmp
mov
arpl
enter
clc
lret
jbe
loop
cmp
sub
leave
in
cltd
xchg
cs
pop
je
dec
loope
xchg
push
lahf
dec
inc
sahf
dec
ret
sarb
xchg
mov
aad
sbb
mov
sbb
fmuls
loope
lea
loope
and
inc
and
jne
pop
and
push
jge
or
stc
cmp
fdivl
cmp
sub
call
sub
ja
cwtl
jge
sbb
stc
sub
out
mov
jmp
xchg
sub
dec
pop
scas
pop
cmpsl
mov
cltd
inc
cmp
orl
in
mov
and
incb
push
inc
ss
push
pop
dec
mov
sub
js
ficompl
insl
push
pop
and
scas
xlat
aad
sub
cli
xchg
fs
cmp
fdivs
jle
or
insl
jle
shl
lret
cmp
xor
inc
pop
pop
mov
mov
sbbl
ljmp
int
sbb
push
test
jecxz
xchg
outsb
js
es
imul
push
cmp
xor
aam
mov
cltd
mov
ds
dec
lret
insl
add
sub
inc
sbb
and
shll
outsb
jb
jne
mov
push
or
push
mov
fidivs
xchg
xchg
daa
xor
mov
mov
jle
xchg
inc
dec
push
lcall
scas
xchg
mov
nop
mov
es
cmp
jno
pop
mov
inc
xor
add
loope
fistpl
push
dec
mov
scas
popf
jae
mov
xchg
popa
aam
cmp
cmc
and
or
jno
es
daa
sbb
repnz
sub
setae
rcll
jge
fnsave
jle
push
imul
jne
sub
data16
ja
push
jle
cmp
adc
data16
mov
leave
inc
xor
adc
push
lds
mov
fadds
jne
push
jo
enter
xor
movl
icebp
std
adc
mov
xor
cwtl
xor
or
mov
xchg
jo
stos
popa
jns
or
into
shlb
push
mov
and
mov
divb
or
in
mov
loope
mov
jg
or
dec
ljmp
pusha
shlb
xor
sbb
es
int
inc
push
xor
xor
stos
in
ss
stos
std
addr16
bound
lret
dec
sbb
dec
or
pop
pusha
addl
pop
cmp
loop
pop
xchg
outsb
push
test
and
fs
jle
cmp
pop
in
pop
jg
outsl
pop
sub
mov
shrb
mov
xchg
push
sti
xchg
ja
shrb
and
pop
jnp
dec
out
cmp
fs
push
xor
repz
ret
or
jns
in
setle
push
push
dec
mov
bound
mov
aad
mov
scas
fdivs
dec
test
enter
fwait
mov
or
pop
mov
jb
mov
or
jmp
fsubrl
movsl
inc
fistpl
fs
mov
dec
mov
pushf
add
xchg
mov
inc
inc
inc
out
out
aas
inc
inc
or
mov
xchg
inc
jecxz
jnp
pop
inc
pop
and
out
pop
mov
adc
int
ljmp
inc
out
jmp
in
mov
cld
jno
rcrl
lods
cmp
cs
sub
cmp
xchg
into
push
add
xchg
sub
cmp
std
aad
cli
cli
mov
lahf
arpl
lret
cs
or
cs
fdivp
aam
cmpsl
test
stos
xor
lcall
and
jg
ret
xchg
ficoml
loope
dec
bound
movsl
sub
xchg
jp
lahf
cmp
xorb
in
adc
or
dec
idiv
dec
in
or
loope
push
push
lret
inc
inc
fcmovnbe
pop
mov
shll
cmp
roll
cli
dec
stos
leave
or
divb
mov
loope
jp
pop
jne
inc
dec
pop
pop
call
cltd
popa
mov
lods
mov
xchg
dec
loop
iret
repz
cmp
inc
sbbb
cmpsl
xor
mov
jnp
cltd
push
daa
rcrb
fxch
xor
lcall
lahf
out
cmp
repnz
imull
leave
data16
fldenv
xchg
mov
inc
jo
mov
in
clc
js
rclb
xor
xchg
sub
or
jo
inc
pop
ljmp
andl
cmp
cmpsb
inc
add
iret
jmp
mov
or
push
jmp
test
mov
mov
fbld
mov
popa
push
jg
call
je
aas
sti
int
pop
popa
push
pop
cld
pop
xlat
push
lcall
shll
sbb
ret
stos
in
loope
ficoml
sbb
dec
mov
ret
jne
push
int3
test
dec
fcmovne
and
ficoml
dec
sbb
cmp
inc
dec
add
les
cmp
ds
pop
xor
jmp
and
adc
xor
or
call
push
jno
lcall
pop
enter
xchg
out
mov
ret
cltd
jo
push
mov
sarb
scas
mov
aam
imul
daa
add
push
mov
test
sahf
aam
xor
outsb
daa
jne
dec
xor
xchg
sub
fisubrs
adc
or
pop
int
pop
mov
outsb
les
xchg
jge
in
cltd
scas
dec
rorb
cwtl
add
or
clc
lock
cmpb
out
lahf
les
iret
pop
or
adc
mov
in
inc
nop
pop
pop
cmp
pusha
add
ds
xchg
pop
add
out
sub
int3
insl
sbb
out
call
xor
lcall
les
insl
xor
fwait
dec
push
add
out
test
jle
mov
jns
add
sbb
scas
push
sub
jb
stc
rorb
repnz
mov
int
dec
jae
lcall
xlat
scas
fmull
mov
lods
aaa
cmp
sub
lret
pop
pusha
mov
in
adc
loop
mov
mov
cmp
in
aam
mov
ja
shlb
dec
sbb
sbbb
subb
mov
mov
push
push
mov
nop
push
into
daa
js
push
js
xor
loope
xchg
in
mov
mov
out
filds
mov
out
and
or
xor
orb
inc
cmpsb
or
and
int
mov
pop
inc
cmp
jbe
cmpsb
inc
mov
sbb
int
adc
bound
mov
inc
ljmp
hlt
or
ja
or
mov
xchg
pop
loope
mov
call
jecxz
lods
jp
js
mov
mov
or
outsl
dec
xchg
fldl
shlb
adc
sbb
or
nop
ds
adc
push
mov
arpl
testb
xchg
cs
sub
and
sarl
stos
bound
jno
jne
push
jg
xor
mov
push
add
lahf
subl
sub
sub
xchg
cmp
mov
or
jno
pop
jns
insl
mov
mov
mov
fs
pop
stc
and
mov
je
adc
insb
int
adc
int
add
pop
repnz
cld
stc
imulb
hlt
adc
jp
inc
mov
xchg
lds
pop
icebp
mov
dec
leave
add
sbb
loope
ret
adc
in
ljmp
es
stc
push
or
cmp
dec
aam
mov
and
sub
mov
add
mov
adc
and
lcall
and
lds
es
dec
mov
fldcw
iret
mov
dec
arpl
push
cld
xchg
repnz
lret
jle
repnz
in
adc
dec
xor
pop
jne
jecxz
sarb
mov
and
mov
popa
sub
lods
cmp
jns
push
outsb
add
cmp
or
ja
outsl
sub
insl
mov
and
push
test
pop
out
shlb
ds
lock
pop
shrl
sarb
xchg
out
xchg
pop
xor
or
mov
xor
push
add
fisubl
dec
fadd
add
ret
js
cli
cmp
test
mov
xchg
das
in
test
js
test
into
pop
push
mov
rcll
lods
cmc
insl
sbb
push
xchg
inc
ss
idiv
pop
lock
lahf
xchg
ljmp
outsb
ljmp
jno
mov
mov
sbb
push
jns
adc
lcall
ljmp
adc
push
in
lret
aaa
mov
sbb
cs
mov
cld
popf
clc
pop
les
int
movsb
insl
lcall
daa
adc
pop
dec
cld
push
in
pop
adc
jnp
xor
insl
movl
and
aaa
out
shrl
mov
leave
push
leave
sbb
mov
mov
out
mov
jmp
pop
pop
cmp
lds
and
data16
cli
icebp
pop
out
xchg
popf
movsb
push
imul
lds
xor
pusha
dec
push
jae
popf
push
ss
xchg
push
mov
rclb
jo
fildll
movsl
sti
leave
sarb
sub
popa
pop
pop
mov
mov
sbb
int3
jne
cli
pop
in
inc
xor
or
xchg
dec
xchg
xchg
and
sub
lods
mov
adc
nopl
in
jl
pusha
lcall
xlat
pop
xorb
or
rcll
mov
data16
icebp
jge
pop
test
outsb
out
loop
xchg
dec
cmp
outsl
jp
lea
add
aaa
dec
jb
dec
insb
cmp
int
mov
mov
mov
negb
imulb
mov
gs
out
int
xchg
inc
fisttpl
sbb
push
mov
or
roll
xchg
or
and
mov
mov
mov
mov
pop
mov
movsb
outsb
adc
ret
mov
bound
imul
xor
movsb
repnz
adc
add
inc
add
dec
inc
add
adc
add
inc
add
xchg
add
add
add
mov
mov
add
shl
sbb
xchg
loopne
popa
sub
jecxz
add
bound
out
fmul
xchg
add
or
es
icebp
xchg
push
fcompl
jnp
cmp
pop
movsb
or
std
inc
enter
daa
jns
aaa
sbb
dec
cmpsl
shld
or
or
or
adc
jnp
mov
add
enter
xchg
cmpsb
pop
xchg
das
rorl
ret
out
jmp
in
enter
push
addr16
cmp
inc
or
jns
mov
divb
icebp
or
xor
aad
pop
mov
ja
jne
and
and
test
out
pop
xchg
xor
mov
cmp
scas
out
movsb
or
inc
inc
std
lock
in
sbb
pop
jno
jmp
pop
icebp
es
rcl
dec
cld
sub
fwait
pusha
scas
pushf
jae
cmpsb
dec
push
in
xchg
sub
mov
cmp
add
adc
or
and
clc
jno
cli
cmp
bound
gs
loop
arpl
sub
and
or
mov
cmpl
std
cmp
push
inc
aad
xor
loop
fimuls
rcrl
fcmove
jbe
aaa
mov
inc
sbb
fs
pop
pop
adcl
mov
xor
lahf
pop
jnp
dec
lcall
cmp
das
push
and
cmp
jb
inc
pop
setns
lods
dec
jge
int
pop
ljmp
ror
adc
mulb
ret
mov
mov
add
insb
mov
lahf
popf
lahf
lcall
icebp
or
jmp
iret
cmc
jmp
mov
test
addr16
adc
mov
std
pop
out
mov
xchg
inc
in
aas
jl
insl
inc
insb
in
cs
cmp
aam
stos
int3
jl
js
sub
int3
cmp
rcll
loop
subl
out
aas
mov
out
int3
mov
mov
fcmovbe
lods
lods
sbb
ds
adc
lea
test
push
jp
hlt
adc
out
incb
das
xlat
stc
mov
stos
dec
shll
adc
out
das
je
push
sti
sub
push
adc
ljmp
dec
push
mov
sub
add
in
push
aad
xor
mov
lods
mov
sub
jmp
addb
ret
sub
bound
push
dec
or
mov
xchg
dec
test
or
clc
ds
and
pop
test
int3
nop
loopne
push
aaa
decb
sbbb
jp
push
push
mov
mov
js
mov
out
push
ret
arpl
ficomps
mov
scas
lods
cmp
lret
shrb
mov
jge
in
add
pusha
fs
cmp
and
insl
mov
popa
cmp
cmpb
mov
fimuls
push
scas
xor
lods
cltd
bound
int
inc
push
add
jns
fmuls
add
xor
push
xchg
rol
or
mov
rolb
mov
cli
enter
sub
jl
mov
jb
dec
sahf
cmp
fidivrs
cmp
mov
out
inc
sti
adc
fs
movsb
or
push
out
jnp
inc
mov
pop
mov
loop
loop
stos
hlt
jne
mov
cmp
pop
ljmp
sub
mov
mov
or
pop
cmp
repz
xor
cwtl
test
cmpsb
popf
int3
and
xchg
mov
sahf
hlt
or
int
jg
outsb
or
cmp
and
mov
sbb
jecxz
fsubrl
dec
adc
mov
std
mov
aam
jle
pop
aaa
fucomi
push
jb
fcomp
addl
imul
cmp
aas
add
add
inc
test
push
push
loop
cmpsl
xchg
test
fcompl
aam
std
mov
imul
dec
cld
mov
inc
lods
xchg
adc
mov
sub
add
jno
ljmp
jecxz
sub
and
pop
scas
mov
movsb
rcll
sbb
std
fs
mov
xor
mov
jecxz
lea
push
popf
aas
sub
or
dec
jo
andl
xchg
and
test
fcomi
jne
cmp
mov
clc
mov
add
inc
es
xor
js,pt
ffree
lods
jbe
repz
pop
jle
sub
negl
fadds
data16
arpl
testl
call
fistpll
add
test
test
dec
pop
rcll
mov
loope
int3
dec
loopne
mov
das
fwait
in
inc
push
push
imul
ja
fbld
mov
sub
fs
outsb
fisttpll
lea
test
xchg
mov
mov
xchg
mov
stc
lcall
xchg
clc
push
unpcklps
dec
xchg
push
stos
movsl
aaa
out
and
rcr
inc
sbb
pminsw
xchg
loop
cmp
into
lods
pop
hlt
into
dec
or
out
ficompl
lds
or
pop
aam
nop
xor
and
aam
loop
cmp
sbb
dec
and
out
mov
dec
inc
repz
mov
loop
or
sub
mov
pop
mov
xor
test
data16
ja
out
inc
sub
jecxz
xchg
pop
mov
push
sbb
adc
jp
popf
sahf
fmull
dec
xor
xlat
cli
xchg
lret
mov
in
adc
pop
jne
adc
sbb
mov
hlt
mov
push
and
xchg
lods
sti
loopne
pop
xchg
cmp
and
or
int
lock
jp
inc
mov
inc
push
dec
les
aaa
addr16
pop
pusha
mov
push
xor
fists
push
int3
xor
test
out
dec
insl
addr16
pop
and
test
aad
or
loope
push
jle
mov
cltd
pop
jp
dec
or
mov
add
pop
push
inc
cld
pop
add
jp
jmp
mov
mov
mov
and
aaa
testl
std
dec
jbe
lea
push
jne
jmp
adc
inc
mov
ret
outsl
iret
push
xchg
adc
test
sub
cmpsb
sahf
sub
dec
mov
pop
pusha
rcll
xchg
shll
aad
fwait
orl
push
bound
xor
mov
pop
push
inc
rcr
sbb
pop
imul
jno
inc
jge
jl
fnstsw
aaa
lahf
mov
scas
xchg
aas
daa
popf
dec
fwait
push
decb
and
fwait
lea
or
jecxz
sbb
mov
sti
ret
aad
dec
sbb
xor
cmp
push
xor
sub
push
ss
xor
and
ljmp
sarb
and
pop
mov
les
mov
repnz
adc
rcl
cmp
movsl
test
ffree
popa
scas
xchg
fneni(8087
and
pop
into
fstpl
cld
sbb
pop
enter
scas
push
push
shrl
jo
lods
add
cmp
outsb
xor
fsubrs
inc
test
fldcw
xor
dec
inc
mov
sarl
pop
xor
movsb
negb
test
jno
lcall
es
jae
and
ljmp
mov
and
mov
jmp
test
shl
lret
cld
daa
je
sub
push
jno
pop
xbegin
lret
aaa
pop
sub
addb
int
jmp
adc
data16
push
jmp
adc
dec
fidivrl
jno
fucomip
or
jnp
pop
pop
cwtl
mov
adc
or
push
pop
or
inc
sbb
sbb
cmp
outsb
mov
inc
repnz
sub
xor
imul
add
jns
xor
jnp
xchg
mov
dec
data16
mov
inc
sub
push
pop
test
insl
sub
stos
sub
shll
push
decl
dec
sarb
das
sbb
and
sub
in
push
cmp
pop
xor
jmp
loopne
ds
or
dec
aas
push
mov
fdiv
cwtl
in
pop
pusha
push
mov
icebp
cmp
jmp
psubsw
push
out
dec
loop
add
mov
jmp
rcll
cmpsl
mov
leave
test
insl
jae
std
mov
rorl
js
cmp
pop
cmp
int3
push
imul
insb
cmp
mov
mov
push
mov
jae
push
push
std
dec
int
dec
or
jbe
pop
adc
pop
mov
xchg
push
fs
movsl
mov
xor
movsb
int3
push
fcompl
cmp
mov
pushf
sti
push
loopne
stc
sahf
push
ja
mov
xchg
stos
fisubs
ret
jb
clc
mov
cmp
das
mov
clts
and
xchg
or
insl
outsl
clc
loope
adc
divb
cs
xchg
arpl
inc
cwtl
dec
or
adc
mov
test
neg
jge
sub
ja
insb
out
mov
dec
subl
arpl
push
in
jne
jnp
mov
xchg
cmpsl
xchg
inc
dec
xor
sbb
mov
mov
push
arpl
and
dec
clc
out
stos
cmp
call
pop
cmp
pop
loope
jl
jmp
repnz
out
fdivp
adc
fs
fsubp
jecxz
loop
adc
inc
popf
ss
mov
push
mov
stos
sbb
inc
lods
pop
imul
test
hlt
out
sub
ja
push
nop
bnd
addr16
push
scas
icebp
sbb
mov
ret
cmp
dec
shl
cmc
aaa
inc
xor
mov
mov
jge
adc
mov
into
cmpsl
lock
jge
pop
icebp
lock
mov
outsl
sbb
cs
push
inc
push
jno
in
jmp
mov
movsl
aad
push
sarb
orb
jecxz
addb
in
gs
pusha
push
js
loop
mov
xor
hlt
xlat
mov
jmp
leave
lock
lea
ss
push
mov
fidivl
loopne
mov
jle
leave
jmp
jle
or
sub
pop
pop
stc
cltd
cmp
inc
ror
movsl
or
sub
in
adc
or
ret
add
stos
repz
imul
sbb
add
inc
js
mov
cmp
mov
mov
add
adc
es
inc
push
sbb
pop
lret
xchg
xchg
lret
mov
hlt
mov
in
inc
dec
nop
jnp
pop
cmp
xchg
jg
test
dec
push
popa
sbb
cmp
inc
rorb
fisubrl
rolb
sub
xor
ret
aam
push
jo
add
lock
cmpl
jmp
imul
movsl
push
add
aad
mov
mov
xor
or
icebp
mov
ret
mov
or
lock
pushf
sbb
data16
mov
nop
adc
jns
call
cs
loope
enter
inc
pop
icebp
push
sti
mov
popf
inc
stos
outsb
xor
popf
add
ljmp
adc
mov
jg
repz
repz
lret
xlat
dec
lock
jno
cmp
pop
adc
sbb
mov
movsb
push
cmpsl
aaa
jae
dec
aaa
push
loopew
js
roll
aad
mov
dec
xlat
sarb
push
xchg
pop
cmc
fiaddl
xchg
mov
mov
push
fs
cli
inc
pop
sbb
xchg
pop
mov
push
inc
lea
inc
fistl
and
addb
push
lods
mov
pusha
and
xchg
xchg
lock
push
mov
outsl
aam
ds
fadd
mov
fistpll
mov
outsb
cmovns
mov
xchg
add
push
cmpsb
stos
mov
fdivrl
sub
insl
int3
mov
add
movsb
jl
es
sbb
dec
lcall
and
add
or
test
imul
sbb
mov
mov
jno
mov
lea
push
and
aad
loop
sub
jle
add
sub
jecxz
or
sbb
cwtl
jns
push
inc
sbb
push
xor
je
loop
das
lods
pop
sahf
insb
mov
mov
adc
outsl
xor
stc
mov
sbb
cmp
xchg
jecxz
jnp
scas
lret
and
sub
imul
idivb
std
into
je
cltd
fstpl
sbb
mov
jg
adc
jne
or
mov
stc
jp
sub
adc
fnstcw
cmp
pop
bound
mov
mov
ja
mov
pop
mov
cmp
xchg
or
xor
adc
data16
xor
lds
sbb
orb
out
jecxz
in
lahf
and
rol
scas
fcomps
xchg
cmp
jne
or
jbe
pusha
jmp
xchg
loop
cs
pop
divl
shll
or
mov
jge
cwtl
icebp
or
icebp
xchg
imul
shll
add
mov
jns
sti
in
movsl
sub
sub
pushf
mov
shrl
push
outsb
fimull
sub
or
push
mov
dec
fbld
fldl
pop
les
add
aad
adc
fstpl
call
pop
sahf
xlat
cmp
push
pushf
addl
cmp
negl
push
arpl
test
sbb
test
vaddss
add
sub
into
stos
pop
mov
push
cmpsl
mov
ja
and
jge
dec
cmp
inc
ret
lcall
imul
pop
sub
cld
lcall
sub
and
repnz
or
arpl
mov
out
inc
mov
imul
sti
rol
ds
cmp
add
cwtl
arpl
xchg
cmp
xchg
mov
jmp
je
push
into
push
jle
jmp
xor
or
data16
mov
stos
push
in
mov
push
movsl
sbb
out
inc
mov
rcrl
out
nop
mov
sahf
in
and
lahf
mov
pusha
shrl
mov
jecxz
insb
and
test
pop
adc
xlat
test
cmp
xchg
mov
fwait
or
jecxz
xor
push
mov
nop
jae
push
adc
mov
outsl
test
push
add
setge
daa
and
jbe
push
mov
sti
xor
stos
dec
push
adc
iret
stos
test
or
xor
in
mov
fisttpl
repnz
test
out
mov
cli
mov
les
divl
repnz
xor
sub
jno
fnstenv
mov
inc
ss
jmp
outsb
cmp
push
subl
pop
add
pop
stc
enter
inc
cmp
hlt
or
aad
xor
cmp
outsl
stos
xchg
mov
sbb
pusha
or
repz
cmp
adc
leave
cltd
mov
mov
push
pushf
loop
cmpsl
stos
rcl
scas
sti
dec
or
xor
sub
lcall
pop
push
pop
pop
lcall
sahf
xor
xchg
or
jmp
lahf
cltd
cld
into
add
lds
xchg
pop
ss
lea
fwait
mov
xchg
push
outsb
test
jge
push
into
xor
ret
movsl
in
or
les
jnp
jne
pop
cmp
hlt
ficompl
lock
mov
and
mov
aad
les
test
mov
cltd
rep
test
orl
in
cwtl
popf
loop
stos
insl
xchg
out
mov
and
outsb
xchg
and
adc
call
lret
in
and
mov
push
push
jno
push
jnp
and
xchg
sbb
or
cld
cmp
inc
dec
jge
negl
xchg
adc
psllw
add
ja
push
jbe
outsl
jle
mov
pop
xchg
jno
loopne
mov
ret
pop
insb
dec
dec
xchg
jb
das
out
jns
cmp
add
push
fiaddl
jg
das
or
jbe
xlat
sbb
lock
inc
sub
mov
push
inc
and
xor
dec
xchg
rol
or
or
push
sub
call
pop
popa
push
daa
xor
push
jle
fistpll
ds
jnp
jecxz
popa
dec
xor
and
in
mov
sbb
std
out
imul
rcrl
je
mov
aaa
mov
xor
ds
push
xchg
xchg
out
xchg
dec
stos
stos
mov
mov
adcb
dec
mov
fdivs
popf
fld
mov
mov
cmpsb
outsl
mov
leave
jae
cmp
imul
cmpsb
test
frstor
adc
mov
js
push
xchg
add
sub
mov
cmpsl
negl
out
aad
sub
jbe
inc
pop
dec
xlat
pop
inc
jl
and
nop
xor
daa
add
dec
out
loopne
ja
mov
lcall
sar
jl
mov
and
sbb
cli
outsl
push
jo
sub
mov
lods
addb
inc
cmp
popa
std
enter
mov
sahf
les
mov
push
cmp
dec
ret
paddusb
mov
inc
lcall
mov
jp
xchg
lret
jns
dec
xor
inc
inc
cmp
sahf
add
pop
xchg
cmpl
cli
mov
in
xor
lods
xor
and
hlt
jno
imul
in
pop
test
das
mov
sub
mov
or
sbb
mov
insb
lods
into
int
sub
push
xchg
loope
sbb
ret
rcr
xchg
cltd
mov
cmp
inc
xor
jno
push
sar
pushf
fidivs
leave
xor
stos
and
leave
inc
cmp
sub
outsl
test
jecxz
dec
or
aas
pop
mov
sbb
faddl
jns
das
push
mov
xchg
imul
pop
xor
sbb
push
fs
gs
adc
lods
testb
sub
divl
mov
popa
ret
clc
mov
in
sub
sub
pop
sarl
and
outsb
sub
push
repnz
sbb
into
mov
jmp
push
ljmp
fidivrs
add
adc
or
and
fildll
rcrb
arpl
xchg
push
mov
dec
fsubr
adc
sahf
or
inc
add
andl
push
or
mov
jle
test
bound
adc
jns
cmc
adc
mov
rcl
pushf
pop
movsl
or
ljmp
adc
pop
mov
fcmovbe
push
xchg
out
call
decl
cmp
into
outsb
dec
mov
cmp
pop
jmp
jb
xchg
outsl
pop
adc
cmp
mov
cmpsl
sub
xor
testl
sub
in
lea
out
out
cld
mov
das
iret
sub
cmp
mov
dec
jle
outsl
sub
lret
push
cmp
mov
pop
iret
ret
pop
jecxz
xchg
daa
negb
test
mov
mov
fcomps
loope
lods
add
dec
mov
sbbb
sbb
hlt
aam
stos
and
les
mov
cmovne
shrb
icebp
scas
xchg
shrl
ret
fisubl
jle
les
push
neg
push
dec
push
pusha
xchg
icebp
and
jbe,pn
push
lcall
dec
mov
stos
stos
loopne
pop
imulb
cld
mov
lcall
adc
fstp
mov
push
add
xor
mov
pop
cmpsl
jl
jle
daa
jo
cld
cmp
cmp
xlat
repnz
out
cs
xor
pop
and
lret
addr16
pop
mov
cltd
fsubrs
fwait
push
jnp
gs
call
push
fs
and
mov
scas
or
movsl
sarl
inc
adc
std
ficoms
ds
pop
push
fs
popf
cmp
daa
aad
mov
sarb
lds
repnz
mov
js
jo
pop
xchg
imulb
lcall
out
mov
fucom
mov
aad
int
in
imul
xchg
jo
cmp
sub
aas
ss
dec
stos
daa
fists
jae
or
and
mov
lds
push
inc
inc
mov
jns
fdivrl
mov
push
push
loopne
scas
jp,pn
hlt
in
sub
jae
cmp
push
imul
test
je
sub
mov
clc
ret
pop
daa
test
sbb
stos
add
dec
inc
mov
inc
mov
pop
sub
and
and
roll
xchg
mov
stc
or
adc
les
addl
iret
xor
sub
lcall
inc
fdivr
adc
xchg
or
xchg
daa
dec
test
pop
push
mov
push
stos
scas
mov
pop
xor
mov
cli
insb
fwait
insl
and
push
inc
inc
icebp
and
pop
iret
mov
aas
mov
jae
cmpsb
cld
ljmp
jg
fdivl
dec
mov
js
and
insl
cmp
test
pushl
mov
lea
dec
xchg
jp
mov
scas
sbb
cltd
and
push
cmpsb
movb
int
fucom
mov
std
rorl
rolb
sbb
and
jne
nop
pop
adc
and
repz
icebp
pop
dec
sub
repnz
and
inc
iret
idivb
push
jnp
scas
mov
xor
mov
jo
jl
dec
mov
shr
cmp
les
cltd
add
into
es
je
popf
mov
cmpsl
cmp
dec
leave
loop
mov
inc
sahf
cld
int
sub
sub
push
stc
jmp
mov
mov
and
dec
out
jb
mov
mov
mov
movsl
pop
cmpsl
xchg
cmp
pop
mov
pop
mov
fnstsw
mov
repnz
cmp
in
mov
dec
inc
movsl
push
xor
fistl
mov
andb
xor
clc
andl
xlat
and
xor
aas
xor
jge
dec
mov
fiadds
fistpll
sub
fidivs
jp
repz
std
dec
jmp
aas
xchg
scas
dec
loop
or
xchg
push
dec
nop
xor
push
jl
mov
imul
jb,pn
mov
cld
fcomps
push
mov
sub
hlt
xlat
dec
aaa
cmp
jns
fs
mov
lods
sub
out
push
aas
movsl
dec
and
aam
sub
adc
pop
pop
repz
adc
jmp
lea
insl
mov
pusha
shlb
in
dec
shl
fmuls
movsb
or
or
jb
add
test
loope
divps
dec
ja
prefetcht1
pop
mov
dec
pusha
xor
cs
cmp
jl
out
rcl
sub
insb
test
inc
std
or
js
arpl
push
sbb
mov
and
dec
insl
push
mov
push
ds
fldl
and
jle
jmp
imul
pop
out
ljmp
data16
rorb
cmp
mov
movsb
imul
icebp
push
push
push
or
cmpsl
lahf
vmptrst
movsl
mov
jp
out
aaa
std
jmp
test
sbb
test
fdivrl
mov
outsb
inc
std
test
fsubl
pmaddwd
cmpsl
mov
pop
lea
push
cmp
or
ja
dec
or
inc
sbb
pop
sbb
fsubrl
sub
push
and
xchg
sbb
inc
adc
aad
and
adc
pusha
loop
xchg
add
adc
pop
inc
ja
dec
xor
adc
ljmp
mov
pop
sti
push
xlat
mov
ret
ja
add
jge
pop
inc
cmp
pop
sti
into
pop
xchg
rclb
imul
sub
test
cmp
push
scas
enter
loop
aam
ret
test
insl
mov
add
ljmp
hlt
outsb
test
cld
add
popf
push
mov
iret
mov
shll
jmp
jae
mov
jmp
sbb
add
mov
add
in
cmpsb
mov
inc
jg
stc
cmp
and
movsl
hlt
lds
loopne
mov
ret
xor
pop
data16
imul
lds
ljmp
pop
sbb
mov
xor
inc
addr16
cmp
mov
mov
data16
sbb
jl
cmp
aad
sbb
pusha
rcrl
mov
icebp
fidivs
jmp
xchg
sbb
stos
outsl
js
pop
rcrl
ljmp
outsl
mov
lock
fisubs
push
clc
xchg
and
jae
push
stc
jb
dec
pop
dec
cmp
mov
ljmp
jle
lahf
mov
in
fidivrs
fnstenv
cmp
mov
enter
stos
inc
addr16
stc
iret
push
add
pop
jae
mov
mov
mov
bound
sbb
insb
jp
pusha
xchg
mov
add
sub
pusha
fldt
enter
sbb
and
cs
sbb
stos
out
leave
sub
les
aam
out
mov
sbb
jbe
sbb
sahf
add
cmc
mov
outsb
push
les
cmc
sub
jmp
push
cmp
test
mov
and
pop
in
adc
test
inc
sbbl
push
mov
stos
mov
mov
fucom
inc
sub
popf
xchg
daa
xor
inc
pushf
out
sub
or
mov
clc
push
insb
sbb
cmp
push
push
sbb
loop
jmp
add
add
out
pop
dec
rol
xchg
mov
icebp
imul
fidivrl
sbb
dec
sti
cmpb
sbb
mov
push
and
pop
mov
testl
test
fmulp
das
xchg
add
push
xchg
or
mov
mov
xchg
insl
dec
mov
faddl
fcompl
pop
cmpsb
push
sbb
lock
xor
daa
jno
sti
in
pushf
pop
cmp
jmp
ret
xchg
push
push
js
ljmp
enter
xchg
xchg
stc
movsb
sahf
xchg
icebp
jbe
cmp
clc
stos
scas
sbb
and
xorb
gs
sub
xchg
mov
sub
movsb
push
add
xor
int
jnp
push
fisubrl
dec
mov
and
ja
pop
cmp
or
inc
inc
dec
mov
adc
outsb
sbb
jecxz
mov
nop
pop
pop
mov
push
push
jb
aad
or
push
push
outsb
inc
inc
test
mov
pop
and
fneni(8087
imul
sbb
lahf
imul
xor
or
sub
mov
add
sbb
inc
clc
pop
or
push
out
rcl
int3
in
aaa
jmp
sub
or
imul
movsl
lea
pop
push
es
rclb
sbb
rcrl
rcrb
das
fs
adc
test
shr
lret
mov
fnstsw
dec
je
addb
pmulhw
repnz
lods
xor
bsf
fsubl
add
adc
test
push
and
sbb
sbb
test
das
xchg
arpl
test
aaa
jecxz
frstor
cltd
shl
or
sbb
flds
mov
mov
sbb
mov
mov
dec
mov
and
pop
mov
rclb
lret
mov
fldl
pop
test
outsl
gs
fs
xchg
sub
notb
loop
pop
or
les
mov
inc
jmp
cmp
cmp
bound
gs
cmp
mov
xor
mov
jg
mov
ret
xor
inc
inc
mov
cli
mov
in
ficoms
pusha
and
pop
xor
je
cmp
mov
inc
dec
test
mov
xchg
dec
mov
out
and
cmp
in
dec
out
dec
jb
xchg
and
adc
mov
ja
pop
jb
ret
scas
jb
add
iret
jmp
xchg
ds
sbb
hlt
clc
gs
loopne,pt
push
out
ficoms
add
addl
mov
cld
inc
sub
cmp
or
push
jecxz
pop
sbb
in
icebp
in
cltd
mov
rcll
sub
out
fdiv
sub
inc
out
das
jmp
cmp
xorl
cli
and
mov
mov
hlt
imul
lods
ret
sub
pop
push
sub
in
jb
ds
sahf
fimuls
xlat
inc
xchg
pop
lahf
push
insb
cmp
ljmp
xor
cmpb
xchg
pop
js
dec
bound
sub
imul
cwtl
clc
enter
sub
cmp
enter
mov
sbb
call
stc
ljmp
test
aas
lret
mov
cmpb
or
es
mov
pop
call
dec
pop
xchg
dec
mov
add
gs
inc
mov
cs
jb
mov
es
push
cld
cmp
push
sub
lea
fstl
in
xor
fcomip
in
fsubl
rcrl
push
jne
sbb
insb
mov
aad
jne
dec
es
or
ljmp
lods
jge
lea
test
jae
imul
pop
rcl
xchg
pop
dec
mov
jmp
add
pop
sub
and
jne
gs
out
data16
jo
cmp
lret
pop
cwtl
sbb
sbb
lret
sti
inc
push
pushf
jecxz
sahf
and
fs
clc
or
mov
imul
aas
test
lods
inc
lahf
cwtl
push
dec
popa
xor
jge
ficompl
mov
aas
push
pop
mov
icebp
push
out
fcmove
movsl
imul
and
lcall
add
mov
jl
jp
add
leave
in
inc
fsub
inc
ret
sub
mov
jo
jno
cmpsl
aas
pop
and
sub
cwtl
jmp
loope
xchg
add
or
insb
mov
stos
test
aam
out
outsl
ja
pushf
rcl
in
call
les
cmpsl
mov
mov
scas
fcoms
cmc
jno
cmp
arpl
daa
add
inc
lds
lcall
or
ficoms
pop
push
scas
call
inc
mov
push
out
xor
xchg
jmp
fisttpl
fs
ja
loop
cs
int3
xchg
push
filds
jnp
stos
or
jbe
push
and
jle
mov
adc
sub
adc
inc
cmp
add
pop
mov
pop
dec
out
pop
mov
rcl
cmpsl
lock
movsb
push
es
inc
sub
adc
jg
push
cmpsl
xor
xchg
sub
jb
add
cmp
popf
lock
pop
and
in
mov
add
aam
outsb
ljmp
jp
testb
inc
xchg
dec
push
dec
lods
xlat
adc
scas
dec
mov
imul
push
jb
shrl
test
out
xor
loope
jae
orb
mov
sub
mov
mov
je
and
pop
lods
cli
sub
adc
test
pop
test
sti
push
ljmp
xchg
pop
outsl
jp
int3
mov
sahf
cmpb
and
push
mov
fldenv
push
rcrl
mov
imul
lock
les
ljmp
xor
add
adc
adc
add
dec
bnd
ljmp
xchg
mov
or
push
jbe
or
push
sub
inc
jp
ret
repz
addr16
pop
fsub
clc
cmc
sbb
in
gs
out
mov
dec
jle
jmp
sbb
imul
xchg
or
jno
in
sarb
daa
popa
pop
mov
mov
pushf
xchg
fnstsw
sbb
test
dec
repnz
popf
andl
sbb
dec
fnstsw
xchg
stos
jl
negl
sub
jmp
rolb
and
dec
cmp
dec
scas
das
jne
repnz
sarb
aas
icebp
inc
lret
jne
sbb
cmp
ja
mov
dec
sub
pop
sub
test
adc
sbb
cltd
cmpsb
mov
mov
lds
mov
movsb
add
inc
cwtl
out
sub
out
push
shl
mov
cmp
sbb
popf
out
shrb
outsl
ja
sub
adc
repnz
xor
imull
push
imul
sbb
loope
xor
sbb
rorl
dec
jg
mov
mov
mov
fs
enter
lret
mov
je
bound
jo
repnz
mov
xchg
subl
ror
jecxz
enter
cmp
mov
push
insl
sahf
jmp
ret
iret
loope
add
sbbl
push
test
mov
cmp
jg
aad
cmp
pop
decl
add
sbb
pop
ss
mov
pop
jo
pop
adc
and
aaa
jl
xchg
fdivrl
icebp
adc
clc
mov
inc
mov
mov
decb
jl
add
pop
jg
cwtl
inc
fs
out
divl
mov
scas
decl
xchg
loopne
sub
push
test
lcall
mov
sti
mov
lret
shrb
ljmp
movb
pop
inc
xchg
mov
rcll
add
mov
pop
scas
mov
js
dec
inc
dec
es
mov
test
enter
add
outsl
cmp
mov
mov
in
mov
inc
in
mov
pop
dec
in
jg
or
dec
out
jae
mov
inc
or
sub
data16
inc
ffree
fimuls
jp
mov
je
jo
stos
mov
add
sub
lods
imul
fstpl
xchg
ds
push
shl
pop
mov
rcll
adc
push
pop
shlb
lahf
adc
push
std
push
pop
and
jae
mov
jmp
cltd
fisubs
dec
mov
dec
lods
push
inc
arpl
mov
rorb
xchg
lcall
mov
fs
cs
mov
jb
inc
mov
fcoms
dec
inc
rol
push
adc
test
lcall
dec
sbb
jmp
push
int
scas
add
cmp
in
jne
mov
test
pop
fwait
mov
mov
call
mov
imul
daa
bound
stos
les
es
cwtl
addr16
pusha
xor
mov
sahf
aaa
xchg
pop
push
js
dec
mov
xchg
test
loopne
jp
push
jns
mov
cmc
sub
mov
push
add
cmc
inc
inc
lret
ja
pop
cs
in
inc
das
pop
xchg
jne
mov
pop
testb
test
mov
lock
mov
mov
lods
in
and
inc
shr
xor
int
call
inc
loop
add
popa
inc
iret
sahf
push
inc
push
inc
jl
mov
or
arpl
lods
sbb
mov
mov
inc
fs
loop
fdivrs
cmpsb
jns
cmpl
sbb
sbb
ss
rcrb
fisubl
add
bsr
ljmp
loope
outsl
mov
add
push
xor
mov
adc
cmp
mov
int3
movsb
mov
mov
adcl
cmp
xor
dec
popa
into
arpl
imul
fstps
xor
push
fcompl
and
cmp
dec
pop
out
popa
pop
int
idivb
shll
ljmp
inc
addr16
stc
xchg
pusha
cmp
movsl
movsl
ja
sbb
in
cmp
lds
cltd
mov
shlb
fsubl
in
push
repnz
imul
mov
push
shlb
movsb
add
sub
xchg
call
or
out
js
or
pop
leave
vpcmpeqd
jl
cld
mov
pop
loope
and
out
lret
mov
jmp
sub
sbb
cmp
sbb
fimuls
xlat
jns
mov
jg
lods
pop
lds
dec
jle
pop
xchg
jge
nop
repnz
sahf
and
jne
movsb
mov
repz
dec
iret
imul
mov
mov
and
cmc
add
cmp
jb
addr16
lods
cmpsb
and
sbb
test
inc
scas
pop
add
mov
xor
xchg
test
dec
and
sarb
ja
pop
les
scas
mov
orb
sbb
into
pop
dec
scas
bound
cltd
pop
dec
jp
scas
and
cmp
loope
mov
mov
pushf
fsubl
addr16
add
in
pop
les
push
ljmp
fdiv
push
leave
test
mov
sub
sbb
pop
fwait
rclb
sahf
push
cmp
jp
fldenv
mov
gs
ror
repz
jne
iret
mov
mov
xchg
leave
das
and
inc
mov
lods
mulb
lret
add
in
mov
dec
jo
dec
jle
sbb
aas
clc
outsb
sub
xor
jnp
ss
jbe
fs
shlb
mov
ret
idiv
dec
sub
nop
dec
dec
and
sti
pusha
adc
and
iret
leave
jecxz
xchg
xlat
adc
fnstcw
cmp
out
pop
or
test
insb
jbe
jns
add
mov
fldt
ficomps
adcb
fs
adc
push
movsb
inc
mov
pop
in
rol
movsb
inc
ret
fwait
iret
or
and
push
mov
push
notl
add
mov
sub
das
arpl
lods
fisttpl
div
push
cltd
cmp
aad
scas
gs
mov
mov
pusha
stc
inc
pusha
xor
jmp
cmpsl
pop
loop
add
mov
idivb
and
mov
mov
insl
es
stc
mov
mov
lcall
dec
std
addr16
cs
mov
out
sub
lods
popa
add
cmp
fistpll
bound
and
lds
xchg
jmp
mov
and
xchg
mov
movsb
shlb
sbb
push
orl
stos
fnstsw
jmp
je
adc
jne
cmc
rorb
loope
mov
rcr
mov
mov
nop
jg
sbb
mov
mov
cmp
fucomip
add
cs
icebp
dec
jle
rcr
lret
fdivrs
mov
mov
sbb
add
xor
dec
inc
jne
ret
dec
pop
imul
adc
and
pop
out
int
cmpsl
repz
inc
sbb
pmaxsw
ss
jge
shrl
push
add
test
or
ret
hlt
dec
cmp
pusha
imul
or
add
fnstenv
lcall
lea
shrb
fmull
pop
xchg
rorl
call
test
push
je
xor
test
or
int3
push
int
pop
and
clc
jbe
aas
outsb
pop
icebp
test
ds
ret
mov
int
jge
aam
scas
into
popa
inc
aas
push
pop
repnz
insl
mov
test
cmpsl
mov
mov
call
pop
cmp
sub
fsub
cmp
and
adc
in
in
mov
sbb
sub
call
xor
movsb
test
push
push
data16
add
sub
jne
sub
pushf
jo
xor
es
xchg
jmp
test
sub
sahf
stc
pushf
cltd
ja
mov
xchg
sbb
scas
mov
dec
xor
jb
adc
mov
add
mov
mov
clc
sub
inc
aaa
lods
lods
jo
push
pop
and
imul
add
dec
test
arpl
push
out
fdiv
ror
xor
add
add
mov
lahf
stc
jo
xor
out
call
jne
test
mov
xchg
int
mov
sbb
fldt
scas
sub
xchg
sbb
sar
xchg
push
popa
scas
dec
dec
mov
cmc
mov
xor
pop
imul
push
cmp
mov
out
mov
jae
insl
out
adc
inc
js
enter
mov
mov
lahf
daa
mov
ret
jmp
int3
in
push
mov
adc
call
pop
hlt
pop
and
loopne
leave
cmc
jl
jns
adc
pop
cs
scas
je
pop
mov
xor
insb
xor
sub
out
cmp
shrb
aas
xchg
aaa
lods
repz
dec
cmp
pushl
inc
imul
mov
ljmp
cmp
popa
movsl
outsb
shll
addb
mov
arpl
stos
push
push
bound
out
cmp
mov
clc
sbb
ja
out
push
lcall
mov
jnp
push
in
lret
cmc
or
in
or
sbb
scas
add
js
mov
cmp
add
insl
sub
fwait
outsl
mov
jne
xor
js
and
sub
lock
mov
je
push
pop
sbb
scas
out
js
mov
stos
jb
sub
mov
scas
dec
repz
sub
mov
clc
lahf
xchg
push
sbb
pop
dec
or
jnp
or
jae
jnp
sbb
push
clc
or
push
jg
dec
into
mov
shll
rolb
or
mov
dec
and
in
xchg
ret
or
push
out
xchg
sbb
xlat
xchg
add
lock
push
push
xor
dec
inc
test
push
cli
cmp
jmp
sub
cmpsl
pop
call
stc
stos
cmp
cmp
ss
sbb
int3
mov
pop
popf
pop
stc
and
call
pop
dec
data16
cwtl
loop
push
ficoml
mov
loopne
insb
pop
push
add
mov
push
ret
push
leave
sti
out
sub
jl
adc
mov
cmpsb
xor
cmpxchg
aaa
push
cmp
or
mov
dec
cltd
and
or
or
mov
in
xorl
mov
pop
pop
aam
jns
out
xor
sbb
adc
jge
shlb
pop
or
lock
mov
cmp
cld
cmpsb
lea
pop
fnstcw
mov
push
cmp
mov
push
dec
jp
daa
jns
outsb
es
mov
jbe
mov
inc
mov
incb
shlb
jne
adc
dec
ja
push
push
jge
cmpsb
xor
sbb
lahf
inc
stos
cmp
int3
in
test
xor
divl
xor
pop
cmp
cmp
add
int
ss
lcall
push
rorb
aam
or
mov
lods
les
pop
repnz
shrb
pavgb
mov
stos
and
and
imul
pop
insl
fs
add
pop
outsb
lock
sbb
int
les
and
aad
inc
aad
adc
xlat
xchg
and
mov
mov
sub
pop
add
lcall
jns
sub
mov
push
fmulp
fisttps
lods
cli
in
aam
sbbb
mov
cwtl
movsl
jb
or
outsl
mov
inc
sbb
insb
push
inc
in
clc
lds
xchg
testl
sbb
dec
sub
cli
and
inc
dec
ja
pushf
mov
inc
push
lea
lret
testl
cmp
jle
cli
adc
mov
fmul
xchg
or
mov
sub
xor
cmp
inc
xchg
cmpsl
scas
fimull
push
cmp
mov
cld
dec
pusha
xlat
adc
mov
push
jp
mov
ja
jae
jno
stc
pushf
lea
jp
mov
fisttps
notb
pop
xor
insb
sbb
push
fisubrl
xor
and
fdivr
insb
or
mov
scas
test
and
sub
pop
adc
cltd
sub
or
push
add
in
aaa
icebp
push
and
push
pop
cmp
imul
xchg
stos
fwait
add
xor
mov
leave
aam
sbb
das
or
bound
out
aam
xchg
sbbb
push
stc
test
and
test
and
add
or
ficoms
jmp
adc
incb
mov
push
std
fxch
push
out
sub
cmp
sbb
jbe
push
sbb
inc
test
aas
and
ljmp
scas
jle
mov
or
pusha
inc
xchg
lock
loope
aam
repz
jne
mov
jne
push
add
test
or
push
push
or
and
ret
push
lock
cmp
jb
add
inc
shlb
idivl
or
mov
pop
sbb
dec
aad
cmp
sbb
pop
and
mov
lock
cmp
insl
fucom
sub
out
cmp
gs
sbb
lea
jae
shlb
adc
scas
mov
push
mov
idivb
ljmp
pushf
sbb
call
mov
shlb
out
sub
mov
pop
sub
pop
adc
outsb
sub
jno
enter
rcl
rolb
cmp
bnd
mov
in
jge
push
mov
or
cmp
xchg
aas
out
push
ljmp
dec
ds
push
int
int3
sbb
aas
out
shlb
scas
insb
fbstp
ds
cmpsb
sbb
cmp
fmuls
std
in
push
adc
pop
xlat
fwait
mov
movsl
scas
sub
bnd
int3
outsb
xchg
in
aam
cmp
out
mov
int3
imul
mov
sub
mov
in
neg
cmpsb
into
lds
icebp
js
faddl
add
aaa
insl
mov
mov
jg
addr16
or
test
in
fsub
lahf
jae
inc
push
pop
movsl
lret
or
cmp
outsl
pop
je
movsb
fcoms
jbe
xchg
or
sub
mov
lcall
and
sbb
sub
adc
xor
mov
mov
inc
xchg
lds
popa
mulb
and
mov
inc
test
loope
mov
mov
pop
ljmp
adcl
fwait
lods
mov
dec
sbb
xchg
loope
inc
into
ljmp
shlb
test
xor
push
cmpb
adc
int
movb
jmp
insl
cs
jecxz
sarl
bound
jp
clc
sbb
and
push
sbb
test
bound
or
jl
mov
xchg
mov
les
iret
test
push
loop
xchg
bsf
and
idivb
enter
mov
int
es
sahf
out
pop
insb
push
dec
mov
cltd
movsl
jbe
movsb
mov
and
movsb
scas
and
es
shl
xor
sub
outsb
std
adc
int3
sbb
adcl
push
inc
dec
push
or
jl
movsl
xlat
cltd
daa
jo
lahf
fsubl
or
xchg
and
roll
shl
shll
shl
fwait
push
inc
mov
inc
jnp
pop
dec
pop
and
pop
int
hlt
fbld
push
fisubrs
or
mov
ret
jne
loop
sbb
lock
dec
fisubrs
out
movl
sub
ret
fldl
ret
rolb
pop
int
inc
inc
mov
filds
fisubrs
mov
mov
mov
lods
ss
dec
jl
jno
sbb
bound
xchg
ljmp
add
test
cld
js
scas
loopne
in
movsb
pop
call
stos
or
jb
xor
xchg
pop
inc
stos
and
cmp
sub
es
lahf
icebp
icebp
test
and
mov
rorb
adc
jg
outsl
aam
test
xor
lret
in
dec
in
repz
mov
add
cmpsb
std
push
xchg
mov
iret
popf
and
mov
es
leave
andl
mov
mov
outsb
in
and
mov
jno
or
push
dec
dec
cmpsb
sub
je
push
pop
push
in
int3
xor
in
xchg
rcrb
xchg
jns
mov
pop
add
xlat
push
add
in
add
enter
nop
mov
adc
adc
je
sar
mov
hlt
shl
mov
xor
jl
rep
pop
ja
add
cmpsl
out
sub
xor
add
pop
cmpsl
pop
testb
scas
xor
jo
test
dec
mov
sub
js
mov
jge
loop
rep
faddp
inc
aad
push
subl
xchg
shrb
xor
adc
popl
cs
pop
inc
xor
and
or
lock
test
daa
xor
push
mov
lret
loop
scas
push
xchg
int3
adc
push
loopne
dec
repnz
and
dec
or
ret
add
xchg
shlb
mov
xchg
or
push
xchg
shlb
jb
fidivs
mov
fucom
stos
dec
and
ror
pushf
sbb
push
cld
pop
add
or
test
orl
daa
fisubl
add
outsl
mov
jb
dec
popa
dec
repnz
fisubs
adc
cmpsb
fildl
jnp
andl
icebp
xchg
mov
dec
sahf
rcll
int
ret
mov
js
jbe
and
lret
out
dec
sub
stos
cwtl
clc
cmp
jnp
inc
xor
cld
cmp
cmp
inc
scas
pop
and
andl
int
dec
dec
jecxz
mov
pop
dec
mov
sub
push
cmp
mov
into
pusha
jne
xor
into
icebp
in
or
sbb
xchg
hlt
call
sbb
pop
push
mov
xchg
mov
stos
fdivl
icebp
data16
std
xor
mov
cmp
out
bound
adc
pop
rorb
test
jge
or
pusha
enter
dec
jo
or
icebp
test
xlat
int
mov
cmp
xor
dec
push
pop
adc
xor
cmp
fwait
dec
mov
push
mov
push
sarb
imul
in
mov
sti
popf
or
xlat
mov
add
jp
shl
jbe
inc
ffree
xor
push
je
aad
sbbl
subl
stos
int
adc
es
and
inc
xor
xchg
daa
mov
dec
adc
fwait
pusha
or
cld
imul
sub
cmpsl
movsl
mov
pop
filds
nop
sbb
int3
push
xor
xor
fcompl
shlb
pushf
cmp
fsts
ret
ror
push
cmp
ficoml
adc
mov
imul
leave
shll
push
mov
add
mov
sub
dec
jbe
cmp
xchg
mov
data16
fmuls
lods
insl
je
cltd
aas
popa
fimuls
mov
xchg
push
test
mov
ja
pop
clc
fwait
inc
push
mov
dec
cltd
incl
pop
dec
jecxz
roll
and
jge
into
fsubs
clc
sahf
test
jb
sbb
subl
mov
xor
jecxz
adc
and
lock
inc
test
lahf
testl
adcb
jns
jmp
push
pushf
fisubrl
xor
sbb
pop
lods
push
add
mov
es
jmp
or
and
test
andl
data16
and
lret
sarb
imul
aas
mov
jle
leave
cmp
sub
xchg
jo
jns
ret
adcl
lret
pushl
inc
adcb
sub
scas
dec
loop
sub
mov
fistps
das
dec
adc
mov
lea
jle
mov
cwtl
and
dec
and
test
add
and
aas
jle
jp
adc
cmp
fwait
push
pusha
push
je
jns
dec
xchg
or
pop
cld
mov
xchg
loopne
orl
in
mov
add
xor
or
daa
test
es
inc
add
sbb
fcoml
sub
push
scas
inc
test
mulb
daa
adc
sahf
imul
shll
jns,pn
adc
inc
pop
fisubrl
movsl
popf
or
aam
mov
add
aam
insl
out
jbe
out
cmp
pop
pop
sub
sbb
add
xor
lods
je
pop
dec
pop
mov
icebp
cmpsl
xchg
aaa
ja
jmp
dec
dec
mov
mov
jbe
xchg
push
pushf
push
inc
test
dec
repz
dec
vucomisd
xchg
popf
je
fistps
into
inc
push
scas
fsts
mov
rcr
jp
fistpl
and
leave
ret
jecxz
mov
insl
cs
aad
faddl
xchg
cmpsl
or
icebp
push
lods
insb
hlt
out
add
sbb
push
cmpsl
inc
lods
sbb
xor
jo
fisttpll
xor
dec
mov
mov
dec
std
lahf
sub
xor
je
push
adc
sbb
data16
jb
and
sbb
sub
icebp
xor
pop
bound
inc
cmp
repz
fisubrs
dec
outsb
cwtl
cmpsl
adc
lahf
fstpl
and
das
or
sub
inc
nop
shll
jg
cmp
adc
idivl
daa
xchg
jmp
push
sbb
es
xchg
rep
shll
insl
aaa
fbld
fidivrl
and
and
push
out
mov
add
jle
lods
js
sub
je
sub
adc
scas
jne
push
js
js
stos
jno
outsl
popf
mov
fistpll
xchg
lret
lods
repz
or
jecxz
or
je
xorb
cs
cmp
stos
imul
test
and
sbb
in
mov
sub
fisttps
stc
sbb
push
dec
ss
jno
insl
sarb
mov
rorb
in
or
iret
jae
shl
push
test
mov
and
dec
outsb
fstpl
in
test
sbb
pop
jle
jne
adc
pop
push
jle
mov
push
fdivrs
jmp
jae
or
mov
cmp
ret
xchg
xchg
mov
mov
add
cld
fwait
push
cmp
or
mov
add
insl
rolb
cwtl
sub
dec
inc
dec
sbb
imul
jno
jle
inc
dec
lret
ja
xor
push
sahf
push
ss
mov
xor
cli
inc
pop
push
cmp
cli
cmp
bound
out
mov
cmpsb
sub
pushf
pop
inc
les
xchg
or
mov
sbb
ret
jle
dec
push
sbb
divl
inc
int3
fldcw
cmpsl
adc
jnp
jg
shlb
scas
dec
fs
fcmovnu
dec
loope
pop
mov
mov
mov
cmp
fs
add
nop
add
imul
or
roll
sub
fisubrs
sbb
or
out
loop
xor
push
xor
mov
xlat
lds
ja
test
mov
xchg
push
mov
xchg
fmuls
nop
sbb
fsubr
and
out
sub
xchg
jg
fmul
push
stos
rorl
imul
mov
call
inc
push
inc
jne
mov
and
pop
adc
mov
xor
cli
loope
sbb
in
outsl
add
rcrb
js
les
daa
out
adcb
addb
adc
gs
mov
add
movsb
mov
es
jmp
push
pop
mov
inc
lock
mov
adc
popl
lret
sbb
inc
icebp
bound
cmp
inc
ss
fisttps
add
mov
push
sub
push
outsl
adc
xchg
cmp
push
lret
leave
fnstenv
push
fidivrs
jnp
or
cmp
cmp
clc
lock
sub
adc
sub
xchg
leave
pop
out
daa
scas
xchg
sahf
cmp
xor
xorb
mov
sbb
popf
cmp
mov
or
das
mov
pop
sub
cltd
stc
bound
fmul
jo
jg
cmpl
cmp
xlat
pop
je
out
mov
insb
rcr
xchg
addr16
xor
jge
dec
movsb
nop
mov
cmpsb
insl
jns
repz
insb
add
push
ffree
scas
mov
pop
sti
mov
sub
cmpsl
subl
shr
sti
pusha
cwtl
and
in
add
fistps
inc
outsl
sub
pusha
dec
test
out
or
into
dec
mov
push
xchg
test
sub
insl
scas
jae
cmpsb
adc
or
sub
popf
in
cmpsb
scas
lret
jl
or
inc
leave
scas
scas
sub
adc
movsb
shll
cmp
and
xor
and
fs
rcrl
leave
xchg
xchg
daa
mov
out
add
sbb
mov
or
mov
rcl
inc
xor
out
movsl
ss
adc
fists
scas
in
clc
pop
call
jno
notl
insb
mov
jl
cmp
sub
and
gs
in
jnp
and
lods
dec
in
mov
pop
adc
sbb
lcall
mov
insb
outsb
cmp
outsb
adc
lret
leave
aaa
bnd
adc
lahf
ret
pop
inc
js
into
sub
shlb
test
adc
jle
jl
mov
xor
sub
arpl
test
popf
insl
sbb
gs
xchg
mov
leave
and
call
test
pop
xor
fisttpll
sbb
sub
fidivl
dec
cmpb
mov
outsb
and
mov
mov
and
cmp
xchg
dec
sahf
sub
mov
inc
dec
std
ret
mov
push
ljmp
xor
dec
testl
lret
popa
cld
fidivl
andl
mov
or
mov
mov
in
jl
inc
cwtl
jp
test
movsl
mov
mov
test
std
out
loopne
or
add
dec
sbb
pop
ja
test
and
mov
repnz
call
mov
add
loop
xchg
inc
int
jb
push
sub
jae
sbb
iret
or
pushf
jb
addr16
sete
jno
in
jmp
stos
mov
mov
push
add
data16
mov
and
jnp
add
sub
jg
sub
and
dec
mov
outsl
ss
insb
imul
roll
sbb
neg
sub
je
insl
xor
int3
dec
je
scas
inc
cmpsb
and
imul
jg
jl
scas
test
pushl
popf
sub
mov
fs
std
aam
sbb
cmpsb
pop
lods
push
clc
cltd
adc
in
rcl
cmp
repnz
mov
mov
in
inc
xlat
leave
call
mov
cli
movsb
icebp
fsubrp
cmpsl
add
push
mov
sbb
dec
into
das
lret
sub
stos
movsl
jmp
sti
inc
rcr
mov
arpl
xlat
std
test
movsb
cltd
leave
and
arpl
sub
hlt
pusha
imul
sbb
movq
rcrl
mov
and
lahf
pop
insl
cltd
mov
jnp
sbb
scas
jmp
pop
aad
scas
lds
les
aaa
aad
push
cmp
insl
mov
rclb
andl
dec
ljmp
inc
mov
rcl
enter
mov
popa
inc
loope
inc
mov
mov
jno
aad
pop
add
push
ja
and
mov
lcall
mov
testb
test
insb
cmpsb
inc
add
inc
xor
enter
popa
sub
stc
add
add
adc
mov
rcrb
pop
jge
fisubs
rcl
pop
jne
pop
mov
xchg
in
push
jae
mov
mov
inc
adc
inc
cmp
call
pop
mov
jge
xchg
loopne
ret
lahf
xor
push
xchg
jns
out
daa
cmp
fistl
daa
insb
mov
scas
add
nop
mov
push
mov
mov
fsubs
dec
mov
nop
scas
ret
mov
pop
xor
cs
xchg
cltd
out
xchg
shlb
push
js
dec
dec
fisttpll
adc
mov
jne
mov
adc
mov
pop
or
or
xchg
cwtl
icebp
jne
pop
adc
jno
fldt
js
pop
test
mov
and
inc
dec
push
jno
ret
sbb
ret
pop
cmp
lds
imul
testl
dec
movsl
add
xor
lds
lcall
neg
fldt
popf
mov
or
shrl
cmp
ret
and
xor
nop
mov
les
mov
nop
test
pushf
fldcw
dec
hlt
sub
sahf
rcl
test
add
jb
xor
lods
sti
inc
xchg
mov
adc
jb
cmp
stc
shl
sbb
cld
mov
int3
repz
test
fs
cltd
and
sbb
scas
push
xor
sbb
loopne
sahf
mov
cmpsb
data16
rol
mov
fwait
push
nop
sub
mov
add
lods
incb
loop
mov
push
pop
mov
pop
loop
inc
test
pop
cs
xchg
mov
lret
lcall
adc
insl
xchg
icebp
test
test
adc
insl
jl
inc
jbe
insw
rcll
add
ret
shll
xchg
int3
sbb
jae
fs
push
sbb
jae
add
pop
xchg
imul
addr16
out
xor
movaps
xor
pop
xor
sbb
sbb
push
ret
das
sub
cmp
mov
dec
jbe
jno
jg
imul
xchg
adc
shrb
shrl
loope
xor
popf
les
mov
or
cmp
aas
push
repz
mov
xchg
daa
xchg
mov
rcll
mov
insb
xchg
sub
stc
sbb
inc
fwait
loope
repnz
mov
insb
shrb
sub
cmp
dec
mov
xchg
js
shrb
adc
aaa
fstl
add
mov
pop
mov
stc
mov
dec
cwtl
sbb
cmp
adc
and
cmp
inc
sub
cltd
fwait
mov
outsl
int3
stc
inc
and
add
data16
loopne
push
outsl
test
clc
cmp
shlb
ficoml
sarb
jl
xor
cs
jmp
in
mov
mov
xor
and
or
ss
fbstp
aam
mov
jne
xlat
and
xchg
adc
add
push
nop
outsl
push
dec
fs
ja
jg
jp
sbb
jmp
les
pop
les
frstor
xchg
leave
pop
test
inc
sti
fadd
sbb
jbe
test
clc
xchg
xchg
jae
and
sbb
rorl
mov
int
aaa
pop
mov
in
jno
inc
cmp
test
mov
test
repnz
lea
mov
fucomp
das
scas
or
pop
shll
in
sbb
dec
mov
int3
sbb
pop
clc
stc
and
sub
fs
push
mov
sbb
sub
ret
add
xchg
add
jle
outsl
cmc
xor
mov
mov
loopne
pop
insb
pop
mov
scas
sub
aad
lret
pop
pop
push
dec
push
ret
stos
xchg
fcmovne
jno
ljmp
fcoml
fistpll
cld
mov
pop
push
sbb
or
int3
int
sub
les
dec
jle
stc
lods
adc
push
inc
dec
push
xor
xor
jmp
mov
and
ffreep
aam
or
scas
jp
ljmp
mov
aad
jecxz
push
push
push
in
push
sub
push
ret
push
pop
dec
jp
mov
or
inc
cmp
inc
cld
pushf
xor
mov
mov
mov
iret
pop
xor
pop
mov
leave
lret
ds
shrb
xchg
pop
sbb
into
jne
lock
aad
add
cmc
test
push
inc
mov
mov
xchg
inc
cmpsl
movsb
push
sub
xor
push
jbe
push
call
lock
scas
gs
out
ret
insl
xlat
fwait
popf
pop
push
push
ret
pop
adcl
dec
lds
gs
xchg
ja
pop
xchg
stos
mov
out
popf
jmp
inc
movsl
test
dec
inc
aam
mov
fmuls
push
in
jae
into
adc
dec
xchg
push
sti
in
repnz
fwait
jp
shll
dec
sub
push
testb
addb
imulb
cwtl
lods
shll
mov
ja
add
es
inc
dec
mov
fmuls
repnz
push
pop
or
movsb
cmp
jg
fisubs
jae
mov
mov
sbb
adc
pop
pop
insl
cmpb
insb
jmp
dec
push
mov
and
leave
sbb
ss
jno
and
arpl
mov
push
hlt
lock
subl
xchg
data16
dec
push
lcall
ficoml
repz
data16
sbb
das
fwait
popf
inc
pop
xlat
xor
inc
cmc
or
add
ret
push
outsb
inc
ficoml
dec
in
test
dec
fisubrs
push
or
sub
ljmp
inc
adc
ficomps
mov
sbb
fldcw
cmp
std
push
shrb
fsubr
pop
mov
pop
and
dec
in
fimuls
adc
std
fs
adc
fs
push
jg
add
faddp
push
fiadds
sbb
dec
push
mov
shlb
int
cmp
and
inc
daa
mov
sahf
xor
testl
inc
fstpl
mov
jmp
mov
cmp
add
push
scas
lods
rol
imul
cld
gs
xchg
xchg
push
sub
fidivrl
pop
sub
lods
repz
jl
pop
pop
cmp
bound
int
add
lds
test
mov
pop
lcall
daa
xchg
jo
mov
xchg
negl
scas
inc
push
pop
cmpsl
fadds
mov
out
not
and
and
adc
mov
sub
inc
mov
imul
pop
daa
ljmp
inc
add
insb
out
insl
dec
inc
std
sbb
popa
sub
movsb
aad
iret
into
adc
or
andb
lods
int
cwtl
imul
cld
mov
mov
adc
mov
xchg
inc
adc
loopne
xchg
inc
jecxz
inc
fistps
popf
jl
lcall
and
outsl
mov
test
out
adc
push
test
pop
subb
xchg
test
ds
lods
stc
addb
add
insl
bound
cmp
daa
mov
aaa
push
pop
stc
dec
xor
shll
jecxz
les
in
gs
sarl
xchg
in
fldl
and
and
cld
or
xchg
daa
push
lret
sbb
inc
test
out
mov
and
sub
sti
mov
push
out
js
fidivs
test
push
jg
imul
addr16
inc
shl
push
pop
dec
dec
mov
and
ja
jb
es
fwait
daa
push
cltd
cmp
clc
ljmp
add
loope
mov
sti
mov
sbb
stc
cmpsb
dec
pop
int
jne
cmpsb
sub
idiv
push
push
in
inc
shrb
clc
ret
mov
aaa
mov
mov
push
jmp
fs
xor
and
jns
add
push
cmp
pop
je
xor
xor
mov
fldln2
inc
roll
jecxz
addl
mov
xchg
sub
popa
enter
push
mov
ja
scas
and
dec
xchg
in
xor
push
sti
pop
jecxz
lock
sbb
aaa
das
jg
sbb
pop
sti
leave
xchg
adcl
pop
test
fildl
ret
inc
mov
insl
jbe
mov
and
daa
mov
pop
data16
mov
mov
adc
movsl
pop
pop
jno
pop
adc
sahf
stos
mov
dec
sbb
dec
push
cwtl
xor
js
jbe
mov
movsl
push
in
mov
ficoms
insb
ja
lods
lods
dec
dec
push
mov
dec
push
sbb
fst
call
push
rcrl
ja
mov
lds
add
insl
nop
adc
popa
xchg
inc
loop
roll
inc
test
gs
pop
bound
bound
mov
xor
icebp
push
scas
gs
jne
int3
imul
shrb
fs
clc
sub
test
dec
mov
mov
aad
cmc
mov
fs
add
lret
pop
add
aas
sub
pusha
jl
aas
popf
and
roll
loop
lods
lods
add
in
idivb
iret
jbe
ss
sbbb
cli
mov
inc
cltd
mov
add
mov
aam
imul
cmp
sub
mov
push
mov
scas
mov
in
out
je
clc
lock
sarl
ret
into
mov
imull
xchg
dec
js
mov
cmp
movl
jecxz
jo
mov
jge
cmp
jae
stc
cwtl
mov
repz
vmwrite
add
push
or
test
mov
xchg
in
inc
push
add
inc
lahf
pop
dec
aam
out
out
sub
insb
lahf
int3
adc
jmp
inc
add
out
mov
ja
jae
shrb
unpcklps
mov
repz
mov
jbe
add
jns
imul
xchg
cld
pop
mov
or
and
outsl
cwtl
mov
cld
pop
loop
xlat
stos
push
sahf
scas
sub
xchg
mov
int
subl
and
repnz
pushf
and
xor
mov
xchg
mov
mov
push
cmp
ret
sbbl
andb
and
pop
sub
xor
xor
repz
mov
cmp
add
lds
xor
xchg
repz
cli
aam
sbb
dec
xor
mov
pop
out
popa
mov
cmp
xlat
fs
add
clc
jp
adc
xchg
out
push
inc
outsb
xchg
mov
orl
jo
push
sbb
xchg
imul
dec
add
sub
icebp
rorb
jne
xchg
ss
enter
sub
xchg
lods
out
das
push
pop
dec
inc
jle
sar
ss
sub
cwtl
sbb
inc
xor
jbe
cmp
cltd
xor
xlat
inc
and
scas
fcmovnbe
dec
imul
ljmp
mov
push
mov
mov
cli
cmc
lods
fidivs
je
dec
rclb
cmp
les
push
inc
pop
xor
sub
and
lret
sti
in
cmpsb
fadds
std
xor
in
imul
push
movsb
mov
mov
xor
jp
cmpsl
cwtl
and
int
or
xchg
mov
push
xor
subb
dec
mov
inc
out
sbb
sbb
jns
push
mov
out
lret
cmp
jl
sti
int3
bnd
mov
sbb
xor
or
enter
push
enter
cmpsb
out
or
and
cltd
lea
leave
loopne
lock
dec
hlt
push
push
popf
dec
rcll
loop
and
out
or
jecxz
dec
call
lds
jae
pop
imul
mov
pop
jmp
sub
sahf
aaa
les
dec
and
mov
xor
mov
popf
test
add
sub
jecxz
js
xchg
scas
inc
mov
or
adc
aam
mov
sahf
lcall
sub
jmp
push
outsl
pop
and
xor
lret
fimull
scas
fadd
mov
pop
xor
xchg
test
and
cld
sbb
loop
push
cli
insb
jl
rcl
out
subb
adc
sbb
xchg
addr16
add
sbb
or
add
aam
pusha
scas
mov
xchg
add
in
xchg
dec
mov
and
mov
dec
loope
jns
xchg
xor
aam
pop
xchg
lahf
mov
mov
lds
dec
lods
fldl
pop
sbb
in
dec
mov
jne
cmp
pop
xchg
popa
pop
push
add
aas
dec
jp
jg
push
popf
popa
fisttps
lret
inc
std
add
repnz
fidivl
sbb
fs
sahf
mov
lds
xor
mov
ja
test
test
adc
xlat
mov
pop
jne
shll
lcall
add
es
fsts
movsl
or
add
mov
dec
push
push
sbb
test
cld
test
xchg
test
shll
add
mov
sub
and
stc
and
pop
and
in
sub
ret
and
xchg
cli
jae
pop
lea
popa
addr16
insl
test
xorl
inc
xchg
push
xor
sbb
adc
mov
scas
mov
addb
sarb
push
adc
cli
ret
and
jns
stc
sti
xchg
popa
jl
pop
ja
adc
xor
mov
popf
mov
sbb
xor
ljmp
outsb
les
mov
aaa
aaa
mov
pushf
fwait
mov
loope
push
int3
push
inc
pop
cli
mov
imul
mov
mov
jmp
lret
inc
sti
cmp
mov
fucomip
mov
mov
and
sub
addr16
subl
daa
push
aas
pop
dec
cmp
in
mov
shl
stos
lods
mov
jnp
lock
outsb
mov
pushf
les
xlat
mov
xchg
sub
and
iret
push
push
ja
xchg
stos
mov
dec
push
cmp
mov
jg
lcall
mov
inc
jmp
in
or
jae
dec
dec
push
testb
dec
fldcw
pop
or
mov
loope
jge
cld
push
jo
mov
mov
dec
out
jecxz
push
lret
test
repnz
jnp
cmpsl
mov
adc
mov
or
pop
jl
cmp
andb
pop
mov
jg
sbb
sbb
add
lock
cld
jp
dec
jns
dec
imul
aaa
adc
cld
lcall
in
xor
es
mov
xchg
jae
fcompl
inc
out
jo
xor
arpl
sahf
imul
mov
mulb
mov
sahf
xchg
movsl
mov
test
pop
mov
sbb
hlt
cmp
roll
fadds
lahf
in
scas
repnz
xchg
das
push
push
push
lock
pop
jo
jp
jnp
iret
jbe
sub
lret
imul
xchg
into
outsl
inc
insb
adc
stos
mov
lods
out
add
inc
std
movsl
and
jno
cld
fistl
cmp
xor
pop
sub
fcoms
fwait
inc
sub
sub
inc
stos
aaa
gs
fsubp
add
imul
and
andb
test
fiadds
cld
divl
cmc
xchg
and
add
aas
cmp
popf
mov
mov
xchg
jb
lea
push
daa
in
int
xchg
into
xor
into
repnz
std
lcall
ljmp
pop
in
lds
dec
lods
ret
rcrl
inc
xlat
mov
dec
xor
loopne
jle
fwait
pop
movsb
xor
jne
enter
int3
xchg
adcl
mov
xchg
cli
jmp
or
and
add
inc
inc
lret
add
dec
lahf
and
xchg
clc
or
or
add
shll
jb
push
mov
ds
xchg
xchg
sarb
mov
mov
test
pop
sarb
and
inc
out
inc
and
mov
sub
mov
in
or
add
js
push
push
nop
das
and
fwait
loop
sbb
jbe
xchg
addb
outsl
dec
orl
push
lods
call
sub
sbb
sbb
add
xor
or
cmpl
jp
out
xor
push
pusha
enter
leave
jl
mov
push
roll
test
aas
test
lea
bound
xor
mov
add
add
mov
cmp
xchg
or
lods
popf
sarl
int
sti
leave
cmpsb
mov
xchg
cwtl
mov
push
push
int
and
mov
xlat
mov
imul
lods
inc
xor
sub
scas
xchg
and
pop
fisttpll
pop
sub
cld
push
stos
addr16
movsl
mov
mov
xchg
mov
sub
hlt
aaa
cmc
data16
out
adc
int3
clc
sbb
scas
sbb
and
and
pop
int3
jno
inc
pop
clc
push
xor
mov
daa
out
xor
ljmp
xor
out
stc
push
call
arpl
cmp
fbld
adc
leave
push
loope
and
push
imul
subb
movsb
sti
mov
dec
leave
jnp
mov
shr
aaa
push
jge
leave
cmpl
repz
jbe
and
jmp
mov
add
nop
js
divl
sub
sbb
mov
adc
int3
loopne
xrelease
xchg
stc
leave
test
add
mov
add
mov
sti
sbb
shlb
mov
push
test
push
in
aad
mov
dec
lret
insb
jnp
lret
scas
pop
lods
mov
add
out
outsb
push
adc
mov
loopne
mov
add
cltd
and
das
pop
sbb
add
lcall
insl
enter
outsb
pop
mov
bound
dec
shl
jns
xchg
int3
cltd
orb
dec
arpl
mov
in
lods
out
scas
and
jmp
scas
clc
lret
ficoms
stos
lock
xchg
bnd
inc
mov
sub
pop
or
ss
and
cmpsb
jo
push
pop
or
mov
mov
jl
fdivr
hlt
enter
xchg
inc
insb
into
loope
or
xchg
add
loop
dec
imul
push
sbb
cmp
dec
pushf
adc
iret
dec
neg
in
movsl
adc
xchg
movsb
jae
mov
xchg
sbb
pop
push
fsubrs
cmpsb
mov
lret
std
mov
xchg
int3
and
pop
lahf
int3
dec
and
lods
ret
jae
cmp
shrb
mov
shlb
cli
fisubrl
fmuls
pop
imul
push
inc
mov
pop
repz
lea
movsb
mov
jl
test
adcl
or
push
imul
jl
inc
push
lcall
jbe
aas
rcrl
sbb
or
dec
leave
add
add
jns
adc
sub
enter
xchg
sub
out
push
jno
stos
scas
dec
insl
mov
jmp
mov
imul
testl
ljmp
cmp
mov
popa
xor
sbbb
and
test
outsl
and
loopne
mov
push
test
shl
add
pop
cltd
in
pop
js
in
and
jae
cmpsb
jge
scas
or
loope
ret
fbstp
daa
xchg
or
lret
mov
mov
pop
aam
cli
push
mov
jo
lret
mov
pop
and
outsl
or
clc
outsb
shrl
fstps
enter
outsb
aam
stc
or
sub
mov
push
bound
xchg
jg
mov
jns
bound
mov
loope
add
jge
in
out
lock
add
mov
mov
cmp
mov
inc
pop
dec
mov
push
in
iret
jns
xchg
xorl
add
dec
movsb
pop
data16
dec
popf
inc
rolb
pop
stos
mov
or
lcall
movsl
inc
repz
testl
sahf
call
push
dec
iret
lea
fsubrl
or
mov
sbb
add
fdivl
daa
inc
and
sbb
adcb
mov
insb
dec
mov
shr
cmp
ja
mov
punpckldq
push
cmp
inc
lret
sub
call
mov
xchg
xchg
xor
add
out
loop
mov
idivb
ret
out
xchg
fistl
ret
push
dec
scas
leave
gs
inc
pop
out
mov
pushf
push
adc
pop
in
inc
outsb
inc
pushf
popf
stos
ss
movsb
push
int3
dec
mov
inc
not
ret
sbb
hlt
adc
adc
jge
push
dec
jae
cmp
lcall
and
cmp
mov
es
add
inc
addr16
jg
lock
stos
cmp
xorl
mov
push
scas
jle
inc
cwtl
cltd
push
insl
jg
lds
sbb
and
add
sbb
mov
pop
imulb
xor
je
push
mov
push
movsl
mov
sub
adc
dec
loope
xor
inc
movsl
add
imul
add
into
push
lcall
adc
and
xchg
aam
adc
idiv
inc
out
dec
sbb
cmp
pop
dec
or
add
inc
mov
xor
sub
rorb
fdivr
rcr
cs
and
aas
add
adc
sbb
cmp
popf
stos
je
fdivrl
mov
or
pushf
cli
inc
xchg
out
adc
lds
xor
stc
in
xchg
out
int
inc
xchg
shrb
inc
push
sub
sbb
jbe
inc
jae
popa
icebp
jecxz
pop
sbb
nop
ret
xor
mov
add
testb
jnp
jecxz
arpl
movsl
xchg
jne
cmpsb
lret
add
in
dec
call
cmc
fcoml
mov
imul
sub
fidivs
imul
adc
xchg
sub
popa
pop
mov
gs
jge
or
jno
shll
andl
fadd
add
mov
shr
jo
fsubrl
pop
setns
jbe
xchg
mov
and
dec
lods
repz
ss
sbb
mov
xchg
in
insb
add
and
in
repnz
xchg
xchg
ds
popw
icebp
or
and
in
cwtl
inc
xor
in
xchg
mov
cld
pusha
mov
or
mov
mov
cmp
mov
and
xchg
nop
inc
test
sbb
popf
push
pop
nop
adc
push
insl
aam
daa
add
adc
mov
stos
mov
cwtl
fnstsw
into
or
xor
mov
testl
fstpl
sub
in
xor
dec
ret
test
xor
ret
rcr
mov
ja
clc
inc
xchg
data16
rcrl
data16
icebp
les
xchg
or
xor
js
sbb
test
jge
loope
pop
sbb
enter
ds
jle
in
stos
xchg
dec
and
add
xor
inc
in
jbe
lods
mov
test
mov
xchg
xor
add
lret
pop
stc
fs
mov
mov
je
mov
add
outsb
in
int3
mov
out
mov
outsb
testb
dec
mov
cli
push
loop
pop
int3
mov
inc
xchg
bound
cmp
adc
sbb
or
xchg
cmpsl
aam
sub
and
adc
push
inc
xor
into
adc
xor
lods
mov
push
cli
sbb
cltd
int
dec
icebp
cmp
lods
nop
lahf
ficoml
pop
in
mov
popf
insl
mov
jecxz
lret
mov
lret
daa
insb
movsb
mov
dec
icebp
xor
xor
mov
inc
arpl
and
js
lret
ja
sahf
pop
cmp
push
sbb
xlat
fmuls
cmp
push
mull
les
pop
ret
stc
jge
and
or
ja
aaa
add
push
fwait
call
fldt
lahf
pusha
loop
popf
popa
push
mov
bound
jae
rclb
ljmp
pop
in
add
push
xchg
stos
lock
popa
out
jle
pusha
movsl
sbb
fmulp
jo
push
jbe
call
das
pop
sbb
fsubr
scas
add
repz
inc
int3
iret
dec
je
xchg
add
sub
enter
fucompp
push
outsl
push
scas
adc
adc
lods
xchg
insb
test
mov
sub
adc
or
fldl
push
cs
test
cld
jp
scas
sub
inc
dec
loop
mull
add
inc
mov
mov
sbb
in
repz
jle
xchg
lret
mov
repz
push
sub
movsb
dec
fstpl
lock
cmpsl
sti
frstor
push
stc
in
ss
clc
sub
push
pop
pop
pop
xor
rorb
popa
fmull
adcl
pop
push
lcall
sahf
xlat
in
jp
lret
cmpb
fidivl
mov
lock
cmc
jne
xor
mov
adc
lret
and
mov
add
shl
sub
push
cmp
inc
push
test
mov
inc
pop
push
hlt
jl
inc
daa
add
mov
fmuls
mov
xchg
xchg
lds
or
andl
fstpt
push
ficompl
and
fisubl
shr
or
jns
cmc
mov
mov
jg
in
cmc
fwait
aam
lcall
push
in
pop
xor
xchg
fnstcw
adcl
ds
sbb
pusha
xchg
push
insb
cmp
inc
mov
daa
ds
sbb
mov
mov
dec
dec
shl
cltd
xchg
ljmp
jp
shl
and
mov
xchg
mov
pop
les
xchg
in
out
cwtl
sub
push
nop
and
push
iret
jge
push
es
mov
rcl
add
dec
test
xchg
test
dec
xchg
adc
movsl
aas
pushf
aam
pop
aaa
mov
cs
and
cmpsl
addb
daa
jle
dec
int3
jp
out
cmp
cmp
or
test
mov
cltd
mov
add
ja
dec
cmp
loopne
push
lret
jmp
and
inc
xchg
cmpb
mov
mov
or
int
pop
and
push
xchg
frstor
xchg
mov
add
add
push
es
or
or
mov
mov
push
dec
pop
mov
dec
mov
and
call
push
dec
movsl
push
pop
in
rcll
sub
ret
mov
adcl
or
jmp
xor
mov
mov
push
in
lods
push
jnp
dec
add
fcmovnbe
out
daa
rcr
loop
jb
jae
adc
cmp
xchg
ss
mov
mov
aad
loop
push
xchg
mov
ss
das
out
gs
pushf
jo
adc
sub
aam
dec
push
out
jne
pop
subb
lods
dec
mov
jle
addr16
in
xchg
cmpsl
or
sub
sub
and
mov
mov
push
cltd
cwtl
xchg
adc
inc
ja
nop
cltd
sub
mov
pop
lods
sbb
cld
hlt
jns
bound
sub
sub
out
adc
add
pop
js
aaa
ljmp
iret
push
das
mov
inc
xchg
xor
stos
pop
fwait
sarb
nop
insl
mov
loop
lea
push
imul
cmpsb
jnp
cmc
addb
shlb
ret
cs
mov
adc
mov
xlat
call
mov
lods
mov
dec
cmc
scas
out
enter
ja
ja
lods
inc
imul
in
or
cmp
mov
vpsadbw
ror
cli
pop
jns
stos
inc
cmc
jecxz
add
in
shlb
pop
xor
cli
rcl
dec
xor
dec
cmpsb
add
div
in
push
add
int
mov
iret
sub
ficoms
test
jbe
pop
dec
mov
test
sahf
mov
imull
cmpsl
das
shrb
insl
jb
push
sahf
jne
arpl
jns
outsb
pop
sbb
and
pop
or
mov
and
iret
fwait
mov
mov
or
jns
xor
insb
imul
cmc
movsb
push
xchg
push
inc
cwtl
cltd
test
sbb
in
adc
insl
movsb
pop
xchg
sbb
sub
cmpsb
scas
push
dec
pushf
pop
mov
fwait
sti
icebp
xor
insb
mov
cmpsb
mov
popf
lret
sarb
jecxz
lods
les
jmp
xor
jl
pushf
loope
cmpsl
jge
dec
and
cli
mov
shll
loopne
lods
cmpsb
into
fwait
test
dec
dec
sarl
add
mov
gs
andl
mov
or
in
orl
xor
dec
mov
xor
nop
roll
mov
fnstsw
xchg
xchg
lds
jecxz
inc
jle
push
out
repnz
flds
xchg
inc
lahf
scas
pushl
mov
push
aad
pop
mov
int3
ret
fld
adc
daa
call
jp
add
aad
iret
jnp
cmp
nop
xor
or
mov
mov
ret
out
out
cmp
ss
add
cld
je
out
jne
cli
dec
push
cmp
pop
mov
imul
inc
mov
push
mov
sbb
js
mov
stos
mov
push
jb
out
sbb
ficompl
in
or
jmp
pop
inc
out
or
pop
add
xor
cmp
push
and
push
ds
into
dec
das
fstl
xor
enter
sbb
jl
mov
outsl
nop
pop
int
xor
inc
insb
mov
cmp
sbb
lods
mov
mov
jo
push
icebp
into
sbb
and
subl
adcl
cwtl
add
cmp
jp
cmp
sbb
and
arpl
sbb
pop
dec
jo
xor
lds
add
xor
pop
int3
push
xchg
adc
iret
rolb
sub
int3
mov
loope
xchg
mov
or
jae
mov
fstpl
xor
push
jns
shll
xor
pusha
imul
testl
fldcw
mov
and
sti
leave
inc
mov
ljmp
pop
popf
jb
inc
mov
add
into
mov
test
adc
push
lret
xchg
dec
ljmp
int
and
mov
mov
stc
mov
repz
std
cwtl
pop
dec
jmp
xor
dec
out
pop
jp
pop
fdiv
int3
iret
add
je
scas
hlt
scas
jmp
adc
je
iret
sub
lds
pushf
outsl
out
pop
insl
sbb
push
and
mov
dec
divb
out
xchg
cmp
out
jnp
test
add
adc
imulb
jge
fidivl
cmp
mov
movsl
xorb
lcall
xor
leave
sub
iret
insl
frstor
aad
push
pusha
inc
jne
push
out
jp
xchg
pop
ds
pop
or
idivl
dec
loop
test
inc
repz
adc
inc
xlat
mov
jle
adc
add
pop
cwtl
cmpsb
fcoml
add
inc
iret
add
dec
sbb
int
in
dec
aaa
fistpll
dec
and
inc
cs
not
pop
jg
dec
and
aaa
xor
mov
add
xchg
or
rcl
mov
outsl
pop
mov
dec
mov
mov
sbb
lods
sbb
inc
inc
xchg
stos
add
adc
cmpl
lods
jne
push
cmpsb
insl
inc
xor
or
leave
iret
push
roll
and
in
pop
xchg
fs
or
xchg
aaa
push
faddp
adc
insl
inc
aas
shrb
jo
jge
fistpll
je
jne
sub
jecxz
add
mov
add
insb
or
call
cli
mov
adc
enter
iret
sub
jae
pop
push
lahf
mov
in
dec
cmc
push
outsb
cmpsb
lret
push
in
sbb
mov
mov
cmp
ds
jns
push
flds
and
push
fistps
xor
test
mov
or
pop
jne
or
jle
and
inc
loopne
or
insl
sbb
stc
ds
cmp
aam
inc
mov
js
adc
sub
push
cmpsl
mov
ud2
push
int3
test
pop
mov
add
pushf
mov
pop
clc
sbb
adc
rorl
test
inc
jg
or
ret
pop
ss
cmp
cmpsl
mov
sbb
jecxz
cwtl
push
mov
pushl
xchg
jne
decl
lahf
mov
xchg
out
mov
add
dec
dec
lcall
push
aas
pop
adc
out
gs
xchg
adcb
outsb
cmp
test
add
dec
call
es
mov
jae
int3
sbb
ljmp
shrb
jp
movsb
cmc
jns
mov
xor
xor
stos
sbb
out
arpl
mov
cmp
push
cmp
sbb
jecxz
sub
push
or
repz
paddb
ds
dec
test
pmaxub
rolb
cmpsb
rorl
push
and
push
sub
jge
ret
jb
lds
mov
mov
sub
mov
sub
inc
addl
popf
imull
xchg
out
adc
or
or
loop
pop
jne
popf
bound
out
inc
cmpb
mov
mov
test
push
push
les
out
cwtl
les
push
in
inc
sbb
adc
ds
pop
sbb
adc
jg
xor
xlat
flds
in
add
iret
pop
xor
sub
testl
mov
add
icebp
pusha
push
scas
push
xor
add
inc
push
inc
loop
aad
jb
or
cmpsb
loopne
adc
push
call
push
fisubs
lret
loope
stos
xor
and
xor
sbb
push
cmp
test
idivb
fildl
dec
imul
pop
jmp
frstor
sub
xor
fisubs
push
sub
aad
shrl
in
pop
das
les
inc
mov
xchg
dec
sbb
arpl
inc
lods
sub
cld
insl
xchg
sbb
nop
stc
lret
sarl
jae
adc
sub
jp
lret
mov
pop
cmpl
lods
imul
mov
cmpsl
cli
mov
mov
mov
insl
mov
icebp
mov
pop
xchg
test
imul
gs
std
stos
push
adc
fstpt
or
stos
dec
pop
adc
in
sbb
pop
mov
inc
pop
cmp
xchg
enter
int
bound
jmp
inc
push
jne
pop
hlt
or
int
mov
loop
call
sbbb
fdivp
daa
mov
cwtl
in
loop
xor
xchg
das
out
inc
mov
cmp
cld
inc
mov
fwait
push
repnz
lds
mov
test
movsb
push
loopne
lock
addl
pop
mov
jle
stc
or
adc
add
jno
sarb
int3
pop
and
mov
xchg
icebp
inc
jno
mov
fsubl
fsts
cmpsb
mov
xchg
cmpl
xchg
pop
mov
or
mov
mov
pop
ja
ja
xchg
in
xor
sub
loope
add
sbb
inc
or
mov
add
in
jae
mov
in
cltd
repz
in
sbb
inc
mov
pop
xchg
lods
and
push
inc
loopne
xlat
inc
xchg
or
mov
pusha
or
jo
mulb
mov
movsl
ret
push
les
mov
xlat
push
fstl
outsb
loop
mov
insb
mov
es
lret
pusha
add
xor
inc
sub
pushf
mov
sti
xlat
inc
adc
add
lock
in
pop
add
xchg
pop
aam
xchg
pop
inc
sub
add
pusha
add
cmpsl
adc
mov
out
into
push
xor
mov
cltd
or
lcall
mov
sarb
xchg
sti
mov
leave
popf
xor
lgs
jp
ljmp
jno
mov
push
push
mov
xor
xchg
cmp
pop
outsb
pop
dec
cmpsb
mov
push
mov
jo
sub
lods
sahf
mov
push
pushf
mov
icebp
pop
dec
cmp
in
cltd
dec
iret
lods
dec
push
xor
enter
mov
dec
dec
sbbb
jecxz
adc
mov
mov
lahf
paddw
xchg
dec
aad
sahf
mov
xchg
xor
mov
cld
sbbl
cmp
pop
mov
cwtl
push
pop
ret
loop
gs
aam
test
clc
jmp
cli
aad
mov
inc
test
push
addr16
cwtl
or
popf
jo
dec
addr16
mov
mov
inc
clc
push
jmp
mov
add
mov
xchg
test
xchg
dec
cld
push
fadd
dec
cmp
xor
mov
repnz
jo
loopne
lods
out
int
pop
rclb
hlt
push
hlt
pop
and
sbb
xchg
outsb
pop
jmp
push
pop
shll
loopne
int
test
mov
aas
mov
xchg
jecxz
js
cmpsl
outsl
pushf
stc
lret
je
cmpsb
fnsave
clc
and
cmp
push
mov
cmp
add
mov
push
out
inc
xchg
jp
ret
push
cmc
push
xchg
jnp
mov
jnp
mov
enter
inc
rcl
ds
jge
adc
enter
adc
stos
out
mov
xor
sbbl
int
imul
xor
cmc
out
or
add
xchg
mov
pop
dec
shlb
add
or
add
xchg
pop
test
cmp
sbb
aad
icebp
movsb
push
inc
add
push
aam
push
mov
pop
and
cld
in
loop
sarb
int
pop
cwtl
xchg
cmp
jmp
aam
pop
xchg
adc
ficomps
loopne
inc
mov
loopne
mov
pop
xchg
mov
and
inc
xchg
fmull
xchg
add
cmpsb
pop
jnp
push
mov
outsl
jle
scas
adc
or
mov
ja
out
push
jb
jae
lret
jb
mov
in
std
pop
xchg
loopne
jecxz
and
sub
ret
jns
jbe
mov
sti
and
mov
jge
loop
dec
sub
es
and
adc
pusha
mov
sbb
jno
add
mov
dec
insl
daa
mov
int
sbb
shlb
mov
std
or
cmpsl
inc
dec
test
mov
mov
int3
ret
sbb
fsubrp
scas
pop
push
cmp
jl
mov
fsubrl
dec
jb
int3
daa
sbb
sarl
stc
lds
shr
pop
sub
rorl
cmpsb
pop
pushf
cld
subl
jge
mov
aaa
lods
ljmp
pmuludq
xchg
add
lds
loope
mov
xchg
adc
push
jmp
pushf
adc
das
les
jp
push
stos
fildll
rcll
push
js
sbb
xor
add
mov
cmpsl
push
sbb
and
imul
and
fwait
aam
mov
fwait
stos
and
sbb
jns
or
lds
movsl
dec
outsb
xorb
out
imul
in
mov
cmp
fs
dec
inc
cltd
inc
std
cmc
dec
dec
xchg
mov
aas
jae
outsl
adc
call
inc
or
cmp
fldl
inc
or
dec
cmp
adcl
inc
mov
jmp
icebp
shlb
lods
xchg
sbb
adc
jne
adc
or
in
xchg
push
div
mull
pop
addr16
imul
push
and
rcll
daa
cmpl
in
mov
sub
xor
jl
push
sbb
adc
sub
push
sbb
lahf
leave
xorl
or
sbb
fisubrl
cltd
sbb
jns
popl
cmp
xor
loopne
adc
xchg
mov
das
push
outsl
xor
jbe
outsb
ja
adc
push
pop
call
cmp
sbb
sbb
add
repz
out
dec
dec
es
add
jbe
mov
and
jne
bound
push
outsb
pop
jo
or
loop
cli
push
je
pushf
xor
inc
cmc
xchg
ja
daa
lods
mov
ret
adc
and
fcomps
inc
repz
ds
mov
cmpsl
leave
shr
push
lret
pop
mov
pusha
aaa
scas
cmpsl
outsl
dec
fildl
jmp
xor
add
pop
xchg
inc
or
loope
gs
or
cwtl
je
jmp
scas
aam
push
mov
xchg
sbb
xor
mov
outsb
js
push
push
adc
dec
aaa
sub
cwtl
sub
push
stos
hlt
fldl
or
mov
daa
sub
lret
mov
fwait
sub
push
sarb
cmpsb
xchg
dec
data16
xchg
sbb
pop
xor
push
int3
push
lret
cmpsb
subb
push
movsl
mov
dec
mov
sub
rclb
push
or
imul
aas
add
pop
pushw
repz
mov
stos
cmp
jmp
addr16
xchg
and
imul
and
mov
mov
mov
decb
out
das
jno
scas
mov
test
ljmp
push
add
test
sahf
mov
inc
dec
pop
xor
shr
or
sbb
add
xchg
inc
rolb
and
dec
out
pusha
and
xchg
mov
mov
test
and
inc
ja
gs
dec
popf
clc
pushf
ficoms
mov
fistpl
aas
or
dec
inc
mov
addr16
pop
data16
xor
stos
gs
outsl
enter
cmpsb
sub
mov
bound
xor
repnz
mov
cmp
mov
add
sbbl
mov
arpl
in
dec
pop
sub
jae
jge
pop
mov
fwait
test
les
inc
push
mov
jl
or
lret
stos
sub
adc
mov
and
fst
lea
int3
inc
pop
jecxz
cmp
jl
iret
push
cli
rorb
add
into
or
stos
or
push
mov
push
jo
add
inc
mov
scas
push
adc
test
xor
lods
popa
inc
in
rolb
movsl
mov
xchg
sub
icebp
inc
jmp
dec
aaa
jae
mov
sbb
mov
mov
jnp
jle
sbb
leave
jmp
cmpsl
stos
push
pushf
adc
xchg
xor
repz
mov
bound
ret
in
faddl
pop
sub
jl
jp
je
adcb
or
dec
repz
aaa
lret
repnz
or
fstl
mov
add
pusha
push
into
mov
push
mov
idivl
push
jmp
rclb
stc
into
aad
fwait
addr16
sub
jne
sti
cmp
xor
and
rclb
push
mov
cmp
pop
adc
add
out
mov
ljmp
nop
add
or
addr16
mov
xor
add
popa
mov
jae
jns
push
inc
adc
dec
xchg
mov
mov
aaa
aaa
addr16
mov
cmc
cmp
lret
popa
mov
arpl
sub
sub
pusha
insb
sub
jp
int
xor
or
dec
add
movsl
int3
movsl
movsl
jecxz
xchg
dec
jo
mov
fcomps
imul
ljmp
sbb
adc
scas
mov
icebp
jno
ret
adc
cwtl
pop
movsl
xor
adc
stos
je
outsl
test
jecxz
mov
dec
xlat
push
fcompl
push
fdivrl
add
adc
push
adc
or
xchg
inc
in
loopne
sub
push
popa
sub
dec
pop
pusha
mov
sub
sti
pop
xchg
xchg
test
orl
fwait
jl
jnp
test
in
les
shll
movl
cs
das
outsb
andl
loop
fmul
fucom
ret
mov
and
movsl
cmpsl
fistpl
bound
adc
adcb
scas
or
push
lods
in
jl
dec
fnstsw
aam
das
fists
loope
leave
in
icebp
iret
adc
es
data16
mov
push
cmp
fs
push
jp
inc
in
loop
xor
push
or
xchg
out
imull
jo
and
subb
das
icebp
fdivr
mov
iret
dec
mov
int3
daa
mov
imul
mov
mov
imul
add
imul
incl
sarl
fs
xchg
test
data16
int3
inc
es
jo
mov
test
xchg
pop
into
jecxz
je
lock
xchg
cli
cmpsl
cmp
lret
fmul
mov
or
pop
fistpl
dec
movsl
subb
jle
sub
test
jae
push
pop
pushf
push
cmpsl
les
mov
mov
sbb
xchg
xchg
sbb
mov
and
je
dec
cs
cs
jecxz
mov
jno
xor
xchg
loope
pusha
jnp
dec
xor
inc
jns
icebp
cmp
cmove
or
test
fstps
cmpsb
popa
mov
jbe
lods
inc
xor
jmp
bound
dec
jle
sub
sbb
fildll
in
push
mov
outsl
lret
insb
pop
xor
xchg
aad
bound
xor
mov
pop
sub
mov
jns
test
idivb
sbb
jge
out
xchg
add
div
or
aam
cmp
or
lea
pop
jl
ja
mov
daa
mov
fistpl
out
xor
jge
outsb
test
sbb
cmp
ret
insl
sub
inc
push
mov
cmp
cmp
cmp
in
cmp
jmp
adcl
test
lods
fsts
adc
ret
es
cli
in
ficompl
jmp
repnz
daa
cmpsl
punpcklbw
roll
or
inc
adc
lods
and
lret
lods
int3
das
mov
fldenv
jne
cmp
popf
pop
mov
out
movsb
and
or
adc
mov
xchg
shll
xor
dec
clc
xchg
and
push
imul
inc
and
mov
in
insb
out
test
mov
xchg
pop
addr16
loopne
adc
das
stc
movsb
adc
int3
or
mov
pop
sub
and
outsl
adc
sub
cli
in
xchg
pop
fstl
and
test
inc
adcb
rcr
push
mov
mov
movsb
sub
movsl
bound
cmp
add
mov
icebp
jo
mov
cltd
arpl
ja
cmp
dec
and
jle
cwtl
inc
jge
jle
ret
cmp
imul
imul
mov
fisubs
stos
out
dec
lods
xchg
insb
lea
pushf
sbb
dec
push
test
inc
inc
push
push
sub
cmpsl
and
mov
int3
dec
push
sub
cmp
aam
jl
jo
fnstenv
jg
pop
std
xchg
ja
dec
jle
pop
jbe
daa
pop
dec
repz
pop
and
mov
jnp
dec
dec
mov
push
lea
pop
cmp
movsl
mov
cli
je
mov
adc
sub
jge
std
pop
imul
mov
fwait
mov
rorl
mov
jle
pop
ljmp
les
ljmp
adcb
into
xchg
cwtl
cli
dec
movsb
mov
cmc
loope
push
rorl
cmp
das
push
in
je
mov
out
subb
rep
int3
lahf
mov
aad
in
testl
out
int3
add
mov
push
jb
stos
xor
inc
into
mov
mov
mov
dec
xchg
inc
xchg
cmp
mov
xorl
pushl
mov
pop
stos
mov
cmpsl
shrl
fdivrs
das
xchg
lods
out
sub
aad
roll
movsb
pop
mov
ja
fwait
adc
fstl
mov
adc
cld
and
iret
push
adc
xchg
ret
cltd
and
movsl
lahf
stos
mov
mov
mov
lds
inc
or
cs
arpl
jp
sbb
and
adc
cmc
mov
rolb
mov
or
arpl
push
mov
xlat
add
mov
push
in
and
xor
inc
cmp
test
int3
je
shll
pusha
outsb
sub
fidivl
mov
pop
loope
pop
add
mov
pusha
loopne
insl
pop
jns
push
in
jecxz
call
pop
sbb
aaa
fcmovbe
cmpsb
xchg
test
pop
xchg
sub
or
lea
mov
shrb
and
xchg
dec
movsb
aad
iret
cltd
inc
dec
mov
out
jns
xor
movsl
inc
jnp
sbb
outsb
pop
sub
in
cmp
jnp
sub
jbe
push
iret
mov
cmpb
int
aas
inc
or
shl
ss
jle
sbb
xor
cld
sbb
inc
js
lcall
shr
clc
loop
xchg
lret
in
push
js
push
scas
hlt
or
inc
add
in
add
cmp
in
and
fmuls
sarb
pop
ret
fisttpl
fdivl
push
cmpsb
ret
cmc
repnz
test
push
aaa
bound
outsl
nop
imul
mov
dec
data16
cmp
js
or
push
xchg
data16
pop
or
idiv
cmp
je
fdivl
fs
lock
pop
fwait
insb
sub
jo
int
mov
jmp
ror
jnp
and
dec
into
in
stos
push
push
lock
mov
test
aam
arpl
shrl
test
cmp
loope
xor
jae
cmpsl
call
sbb
jnp
andb
out
lea
lcall
rcrb
jg
mov
adc
jecxz
jmp
movsb
push
pusha
inc
testl
jb
xchg
mov
dec
or
jl
mulb
jb
data16
mov
cmp
fisubrl
icebp
xor
adc
jecxz
nop
movsb
xor
cli
mov
mov
mov
mov
inc
jg
mov
sbb
or
or
pop
aad
and
push
les
adc
movsl
movsl
xchg
stc
mov
or
in
lret
push
mov
jbe
mov
and
xchg
leave
lcall
insl
fisubl
pop
push
mov
mov
cmp
mov
rcll
adc
cmp
das
add
mov
and
sub
mov
sbb
push
iret
cmp
imul
add
cmp
call
loop
ss
jl
mov
ffreep
int3
fnsave
test
pop
mov
jno
sub
jg
cmp
adc
mov
stos
shll
xchg
pop
add
pop
enter
test
jbe
stc
mov
scas
mov
sbb
mov
fiadds
rol
and
test
repnz
in
jae
stc
enter
lret
gs
cwtl
inc
leave
push
push
mov
test
push
sbb
cmp
push
push
adc
out
bound
pop
mov
out
ret
push
pop
les
jge
popa
sub
pusha
pusha
mov
jl
adc
in
rcrb
pusha
test
push
and
lret
fidivrs
or
cltd
push
jge
xchg
mov
cmpl
mov
test
cmp
inc
dec
mov
adc
shlb
jae
jne
fadd
xchg
jg
xchg
or
sub
jecxz
push
jp
aas
and
es
cmp
sbbb
daa
or
pop
dec
xchg
cmp
mov
sub
or
xchg
mov
les
es
cwtl
lods
rclb
inc
out
add
adc
movsb
mov
cmc
add
inc
daa
mov
jbe
push
xchg
js
inc
inc
clc
scas
sahf
jb
push
adc
lcall
cmc
ret
jnp
mov
scas
int3
lods
adc
mov
cmp
sub
sbb
ffreep
inc
cmp
loopne
adc
loopne
push
cmp
pop
stc
mov
leave
sbb
dec
pop
pop
pop
fiaddl
in
ds
mov
mov
es
xchg
xchg
enter
or
jb
adc
cld
mov
ljmp
cwtl
cltd
add
shll
dec
repnz
ds
cwtl
pop
cmp
int
fstl
jnp
fwait
arpl
push
in
fmul
dec
xchg
test
in
aam
push
or
push
dec
dec
cmp
mov
and
cmc
xchg
loopne
mov
dec
in
pop
movsl
test
clc
cmp
mov
sarl
mov
imul
out
cmp
lret
adc
das
inc
mov
testb
insb
pop
in
or
mov
mov
mov
mov
popa
mov
mov
std
push
dec
lahf
cs
and
imul
lret
mov
pop
adc
std
fwait
cmovo
leave
push
mov
inc
lret
lret
xor
cmp
mov
aam
in
jmp
ss
jbe
es
add
hlt
pusha
mov
xchg
subl
mov
dec
mov
shll
cli
scas
je
addr16
movsl
and
ror
push
cmp
out
aaa
xadd
adc
jle
cwtl
xlat
out
push
lock
loop
divb
mov
pop
aas
test
lea
mov
shl
push
cwtl
jb
fstl
jg
je
scas
mov
dec
cli
loope
aam
pop
jge
cmpsb
push
int
ljmp
dec
in
cwtl
jne
int3
fidivs
movsb
cmp
lods
xchg
xor
insl
fcomps
aad
popf
stos
test
jge
pop
add
mov
cmp
test
out
repz
pop
sub
inc
daa
adc
cwtl
sahf
mov
insb
cmp
divb
pushf
fld
ds
push
mov
test
imul
and
test
pop
loopne
sbb
aad
cmpsl
popa
sub
test
aam
adc
xchg
subps
aas
pop
cmp
xchg
aam
inc
out
and
data16
xchg
lret
loope
xchg
xor
ret
pop
cmc
clc
rcrl
mov
xchg
mov
or
cmc
push
jb
mov
sbb
int
sub
xlat
pop
xlat
inc
stos
outsb
lret
inc
ljmp
aam
adc
cmc
mov
fisubrs
add
xchg
push
gs
adc
dec
sub
cltd
sahf
rorb
xchg
jecxz
cmpl
jb
rol
loope
jns
sub
push
push
testb
pop
push
sbb
lret
xor
into
sbb
add
test
push
mov
pop
jno
fs
xor
insl
negl
or
add
dec
cmp
daa
pop
sbb
mov
or
xlat
je
push
xchg
inc
mulb
add
or
repnz
hlt
lods
nop
sbbb
imul
mov
dec
out
imul
sub
jg
sub
cli
sub
lret
nop
jb
cmp
dec
push
and
into
xchg
inc
scas
pop
or
sbb
xchg
jns
gs
pusha
cmp
pop
je,pt
filds
mov
idiv
lea
cmp
jecxz
mov
outsb
jge
mov
int
push
add
or
rcrb
sbb
cmp
jb
or
sbb
call
jl
ljmp
jae
or
mov
xchg
adc
mov
sahf
icebp
jecxz
sbb
not
dec
pop
idivl
and
cmc
jl
movsl
test
inc
aaa
sahf
cmpsb
rorb
sub
jae
or
icebp
flds
out
jg
xlat
cmp
adc
fs
mov
push
inc
mov
imul
lahf
mov
hlt
movntq
pop
iret
sub
push
xor
add
mov
lret
jns
jno
mov
movsl
ja
mov
jo
stos
mov
adc
insb
jg
cld
dec
ja
xchg
in
test
ljmp
lods
add
mov
mov
in
pop
sub
cmpsb
insl
outsl
test
icebp
in
add
fwait
repnz
jbe
dec
imul
inc
fsubp
test
jge
stos
jbe
push
mov
jo
loope
stos
jo
jb
aad
test
movsl
leave
sbb
xchg
xchg
into
stos
rcl
mov
xchg
mov
xor
ds
or
lahf
mov
sub
cld
push
inc
scas
push
xchg
xchg
dec
xor
out
addr16
sub
sub
cmp
add
sbb
cmpsl
xchg
jno
add
add
out
xchg
rol
mov
cmpsb
cli
pop
pop
jne
xlat
push
push
sub
mov
mov
mov
mov
les
int3
mov
cmp
pop
incb
push
mov
cmp
pop
push
pop
inc
xor
adc
mov
pop
sbb
adc
stos
jl
imul
dec
and
mov
pop
mov
jmp
loope
sub
das
lods
filds
bnd
scas
mov
pop
loopne
icebp
aam
lea
inc
pop
clc
inc
inc
lock
out
cmp
pop
das
fs
es
movsb
push
mov
negl
add
mov
fcoms
rorb
mov
mov
sub
filds
dec
inc
jl
mov
mov
popf
push
xchg
mov
sar
jmp
scas
fwait
nop
or
sub
xchg
movsb
push
xchg
mov
push
mov
in
outsl
sub
push
sbb
and
adc
in
pop
or
and
pop
jbe
mov
push
repnz
outsl
test
push
ficoms
and
mov
int3
fsubs
sbb
mov
sub
popa
scas
cmc
dec
fwait
mov
or
add
in
jge
push
fdivs
push
out
rcll
ret
test
fcompl
jmp
lods
aas
pop
out
out
lds
mov
lods
jb
mov
addr16
loopne
cld
cmp
or
adc
push
into
add
daa
pop
cltd
in
add
pop
insl
popa
rolb
and
sub
jae
xchg
cmp
insb
shll
xchg
mov
or
cmp
std
test
popf
jae
xor
xchg
lret
movsl
inc
ds
inc
xor
pop
push
jnp
aaa
out
mov
add
cltd
xchg
push
out
dec
mov
neg
pusha
or
out
lcall
lods
stc
ljmp
outsl
mov
nop
sahf
and
push
outsl
les
inc
dec
xor
cmp
sahf
xor
mov
sbb
scas
cmp
iret
push
adc
loopne
pushf
jg
mov
jg
lods
roll
add
adc
cmp
popf
jae
dec
test
call
and
cmp
mov
call
notl
shlb
lcall
inc
arpl
sub
cmp
sub
cmp
sar
mov
in
mov
enter
inc
fstl
mov
out
in
scas
mov
and
or
nop
pop
or
decb
add
or
xlat
xor
and
mov
and
push
sbb
insl
loop
or
sub
xchg
ljmp
lret
cli
imul
sbb
pop
sub
sahf
roll
arpl
or
scas
ds
pop
lds
pop
test
aam
cwtl
movl
notl
jne
fadds
and
pop
push
adc
les
inc
dec
mov
or
fs
mov
mov
in
dec
fiaddl
mov
jecxz
mov
push
push
outsb
mov
jno
xor
popf
lahf
jae
enter
insl
test
inc
push
jno
aaa
fs
cs
xchg
push
sbb
mov
pusha
aam
icebp
paddusb
add
enter
dec
xchg
push
cmpsl
dec
movsb
add
fisubl
xchg
loope
jne
xchg
movl
lea
cmc
jle
mov
cmp
mov
ljmp
push
fstp
xchg
loope,pn
cld
aaa
ret
es
adc
fwait
stos
inc
sahf
sbb
push
pop
pushf
or
int3
cmp
jmp
in
dec
push
rcl
in
lret
xor
shlb
lods
bound
imul
cli
sbb
ja
ficomps
lods
fildll
push
mov
fildll
mov
or
inc
xor
cmp
nop
or
mov
sbb
and
and
push
dec
push
dec
movsl
fiaddl
mov
xlat
fisubrs
push
loope
dec
push
pop
shlb
popf
es
and
enter
loope
sub
sub
xor
outsl
cmc
xor
mov
call
ja
inc
xchg
sbb
jo
out
jp
std
jmp
mov
cli
negb
imul
mov
push
mov
ss
xorb
dec
lcall
mov
xchg
jbe
push
out
xor
insl
cmp
mov
cli
add
mov
loope
jl
into
sub
mov
ficoms
sti
sbb
mov
lcall
mov
inc
ja
xchg
outsb
ja
and
jl
jnp
pusha
inc
sar
sbb
mov
cld
cwtl
push
xor
dec
lret
into
xor
or
mov
iret
adc
arpl
aad
sti
ret
and
popf
jg
jmp
pop
add
roll
enter
in
jnp
push
sarb
adc
jg
cwtl
in
xor
push
std
jg
xchg
jae
movd
dec
sbb
or
cmc
popa
or
or
push
es
repnz
cld
cmp
inc
or
inc
fsubp
cltd
or
lds
sub
hlt
loope
js
shr
stos
xchg
mov
leave
data16
int
jg
pop
enter
int
or
mov
push
xchg
dec
fisttpll
std
out
testb
push
inc
jg
mov
lods
push
inc
mov
cmp
call
fidivl
repnz
mov
sbb
cmc
push
rolb
and
xchg
arpl
inc
xchg
inc
dec
pushf
inc
pusha
movsb
push
dec
arpl
test
jnp
es
ss
xor
or
sbb
or
fs
adc
ljmp
xlat
jp
add
aam
dec
mov
mov
or
popf
scas
mov
adc
out
std
xchg
xchg
out
insl
test
jp
ret
jbe
or
mov
sarl
mov
pop
xor
push
inc
mov
sub
pop
jp
push
and
ljmp
lods
rol
imul
std
pusha
inc
es
or
out
push
adc
clc
loopne
ljmp
or
dec
ficoms
cmpsb
scas
mov
pop
int
sbb
jnp
icebp
stos
dec
sub
sub
cli
sbb
outsl
in
or
movsb
mov
pop
pushl
dec
daa
xor
mov
cmp
dec
cmp
stos
push
les
cmp
sbb
insb
jle
insb
cmp
mov
scas
pop
lock
mov
and
add
aaa
mov
or
inc
xchg
mov
jle
push
shrl
adc
into
int
in
push
mov
iret
adc
jo
mov
test
cmpsl
pop
sub
adc
mov
leave
push
cld
sbb
int
jne
test
jecxz
inc
nop
stos
int3
push
out
js
push
cmp
push
mov
bound
xor
xlat
sub
fidivs
ljmp
and
pop
vpand
jmp
mov
shll
aad
push
idivb
and
xlat
dec
add
xor
lcall
fimuls
in
push
mov
arpl
fisubs
mov
sub
test
in
mov
mov
and
dec
and
in
mov
xlat
mov
mov
imul
imul
in
divl
movsl
inc
mov
or
xor
imul
divl
je
push
test
lret
mov
sti
cmpsb
test
jecxz
mov
mov
cmp
jle
add
jbe
nop
xchg
mov
adc
sub
sub
fcoml
fwait
cmpl
pop
mov
or
mov
aaa
jbe
sahf
pop
ret
dec
fldenv
push
aaa
mov
fistl
lea
sub
jecxz
aam
xchg
and
cmp
sub
ret
cltd
push
push
cmp
pop
mov
movsb
clc
sub
pop
xchg
cmpsl
add
xchg
popf
pushf
test
add
inc
adc
sbb
dec
divl
stos
test
movsl
test
nop
pop
das
popa
call
sbb
jecxz
cmp
or
out
sbb
les
xor
pop
pop
inc
mov
stc
mov
push
and
sahf
mov
bound
mov
repnz
dec
push
cld
xchg
push
imul
sub
jge
pop
mov
idivl
push
adc
fstl
adcb
sbb
stos
aas
xchg
ja
push
sti
stos
cmc
inc
dec
push
jg
daa
dec
xchg
dec
insl
sbb
or
ficompl
ret
dec
dec
pop
mov
roll
pop
ret
jecxz
sti
jne
ret
enter
gs
out
dec
mov
xor
loop
adc
fisttpl
jb
add
push
test
ret
inc
popf
popf
xor
mov
addb
out
mov
add
mov
ljmp
pushf
lods
sbb
or
ret
rcr
andb
mov
lock
les
add
rcll
xchg
pop
pop
sub
pop
pop
lahf
sbb
inc
mov
cs
jbe
xchg
jp
xchg
jg
outsl
test
scas
dec
lret
lods
shl
jge
arpl
jno
add
cmpsl
push
imul
ror
add
add
mov
fldln2
call
mov
sub
adc
mov
cmp
lea
mov
pop
adc
push
repz
leave
lcall
leave
push
adc
mov
test
sbb
pop
popa
mov
dec
mov
rclb
shrl
xchg
cli
push
xorb
pop
cs
push
shl
cmp
iret
xlat
sub
ret
lock
or
fists
and
mov
xor
jmp
mov
outsb
pop
dec
cmpsl
cmp
push
cmpsl
mov
adc
frstor
int
adc
sub
xchg
push
sbb
mov
lea
movsl
adc
mov
test
mov
mov
loope
in
xor
insb
jae
sbb
push
stos
mov
or
inc
mov
inc
sbb
sbb
jge
dec
jge
cmpsb
les
pop
or
mov
or
push
fwait
das
cmpsb
fucomp
and
inc
mov
test
cli
inc
sahf
cs
sub
out
lret
es
movsb
bound
daa
sub
cs
push
sbb
push
and
sbb
in
lret
sub
cmp
iret
push
xchg
cmp
out
xor
or
jne
push
test
dec
int3
pusha
sbb
jge
add
testb
push
mov
std
mov
and
mov
lods
out
loopne
movsb
out
mov
sub
xchg
stos
divb
inc
adc
mov
fimull
pop
mov
cmpb
insb
dec
mov
loop
push
movsb
xchg
xchg
and
test
pop
push
sub
aaa
call
std
fstpl
loope
insb
arpl
test
int
cmp
in
fisubrs
testb
adc
jnp
cltd
jo
pop
cmp
gs
jp
xchg
out
or
es
sbb
mov
hlt
ss
pop
mov
fistl
cld
fidivs
popf
pop
sarb
and
mov
imul
mov
mov
jb
lret
stos
ret
es
repz
xor
push
add
mov
mov
sbb
orb
sbb
imulb
aam
dec
clc
nop
xchg
dec
mov
in
inc
push
les
sub
adc
rorb
test
cmp
jns
mov
outsb
scas
jl
add
push
lock
sub
push
data16
inc
repz
jl
pop
testb
xchg
dec
xchg
mov
scas
xor
adc
or
mov
ret
mov
push
out
jle
cmpl
push
xchg
or
push
pop
dec
fidivl
sarb
out
lods
dec
and
decb
mov
test
push
ds
lods
sub
xorl
fiadds
out
je
dec
dec
in
and
pop
int3
shll
push
cmp
inc
fldenv
inc
repnz
mov
xchg
fidivl
inc
rorl
loope
scas
outsl
inc
shll
out
mov
sti
les
xchg
lock
inc
xor
dec
cmc
xor
fcom
inc
inc
mov
push
and
add
je
push
xlat
inc
lods
mov
lahf
inc
pop
pop
ds
push
cmp
test
sub
adc
in
add
cli
sub
jne
jmp
mov
call
xchg
inc
aaa
sub
pop
and
ds
das
loop
incl
dec
inc
mov
sbb
mov
ja
daa
pop
inc
int
fnstenv
mov
dec
enter
cmpb
repz
sub
cmp
xor
mov
sbb
pushf
shrb
xor
test
sub
arpl
stos
call
insb
or
rorl
add
xor
push
cmp
mov
xlat
jge
mov
test
cld
push
incb
cli
xchg
push
sub
je
xchg
loopne
xchg
or
ret
sub
push
fsubrs
jnp
in
dec
mov
cmp
int3
xor
into
xchg
icebp
lret
mov
outsb
mov
xor
pop
stos
cwtl
aam
fsubr
fsubr
jg
stos
cmp
popa
xor
stos
sub
enter
pop
daa
and
cmc
scas
mov
and
mov
popw
in
xor
test
mov
and
out
sbb
dec
popf
mov
iret
iret
dec
frstor
in
das
xchg
pushf
inc
movsb
outsb
dec
mov
sbb
iret
and
jge
jp
test
and
pop
xlat
mov
push
or
mov
imul
orl
sbb
cli
xchg
das
ds
pop
or
jb
mov
scas
xchg
sahf
cmpsb
fadds
add
jns
push
push
or
popa
mov
push
cmp
mov
push
xchg
xorl
mov
mov
orb
xchg
scas
push
and
imul
aaa
jp
jle
jne
lret
sub
clc
arpl
arpl
je
sub
jg
xor
je
call
add
std
lcall
push
inc
mov
jne
sbb
into
mov
add
ds
sti
push
iret
popa
push
adcb
test
test
pop
dec
imul
scas
mov
push
lret
pusha
fstpt
push
add
dec
cmp
mov
sub
mov
mov
and
dec
mov
pushf
adc
idivl
or
pop
popa
fnstsw
movsl
shr
push
cmp
mov
xor
sbb
adc
sub
push
ret
dec
test
jno
cmp
bound
fwait
push
pop
fwait
mov
sub
stc
pusha
sub
iret
mov
ja
adc
push
popa
nop
xchg
push
and
ret
mov
ret
test
data16
sbb
shl
fldt
repnz
orl
dec
std
dec
jp
test
sahf
inc
cmp
cmp
inc
pusha
jb
movsb
jle
scas
lea
fs
push
cli
jl
inc
mov
push
push
xor
jns
lea
or
mov
pop
inc
pop
xchg
dec
pusha
mov
lret
movsb
ffree
push
fnstenv
scas
jmp
xlat
push
mov
inc
cs
lahf
mov
xchg
in
ds
insb
cld
icebp
insb
inc
or
jle
scas
andl
pop
mov
sub
cmp
jnp
stos
sub
sbbl
inc
bound
jmp
dec
lea
cmpb
rcpps
cs
mov
xchg
enter
xlat
mov
test
dec
lret
aas
fcmovu
jl
jg
sbb
ss
movsl
mov
lock
inc
push
lcall
jnp
fisttpll
and
dec
je
jg
lds
mov
xor
mov
push
cmp
or
sbb
aas
xchg
repz
mov
imul
or
mov
inc
add
outsl
mov
cli
das
ss
push
mov
xchg
jae
inc
ss
dec
mov
mov
test
add
imul
data16
lret
int3
mov
fwait
xchg
xchg
xlat
dec
sub
cmp
lds
aam
xchg
clc
mov
adc
hlt
mov
shl
popa
sbb
dec
jmp
in
adc
in
jnp
cld
aam
and
in
adc
enter
rcll
jg
mov
push
cmpsb
adc
xchg
in
mov
ss
cmc
int
ljmp
in
lahf
xchg
sti
testb
add
pusha
inc
sbb
jmp
push
rol
pop
inc
rcrb
nop
xor
mov
mov
sub
inc
in
cwtl
and
push
divb
push
mov
push
rcl
sarb
pop
mov
fadd
pop
or
call
xchg
cmp
sub
xchg
lods
add
les
inc
lock
sbb
cld
sbb
xchg
sub
xchg
dec
out
lds
cmp
lahf
sub
mov
mov
mov
adc
jmp
push
inc
fsubs
stos
push
mov
and
mov
cmc
addb
incl
pop
loope
popf
add
inc
popf
sbb
sti
dec
test
push
jno
arpl
sarl
shr
xlat
add
xchg
push
lods
js
push
push
push
jmp
addr16
adc
pop
insl
xchg
aas
inc
out
in
xor
arpl
imul
jmp
push
sub
movsb
add
or
imul
adc
in
lcall
adc
jb
mov
insb
insl
fs
mov
sub
rcrb
notl
sbb
and
stc
mov
dec
hlt
push
pop
ljmp
subb
inc
clc
int
xchg
sub
fildl
fldenv
cmpsl
jmp
mov
test
and
fs
inc
loopne
fiadds
cmp
fldt
sbb
inc
xchg
inc
or
mov
dec
or
lock
push
xchg
iret
div
lcall
faddl
and
paddusw
sahf
cltd
jno
sbb
lret
ficoml
cwtl
out
aam
cmp
outsl
inc
mov
imul
and
fdivp
mov
movsb
dec
or
xchg
mov
fnsetpm(287
push
std
push
in
cmp
loop
dec
rcr
cmpl
adc
mov
popa
mov
cmpsb
xlat
mov
jge
mov
xchg
push
xchg
pop
jo
lcall
icebp
jle
sub
es
addl
sub
xchg
jbe
rorb
sub
outsl
push
out
andl
adc
imul
add
add
cmp
sub
or
divl
lret
stos
pop
sub
aaa
jecxz
ret
cld
jae
dec
mov
jns
aam
sbb
add
addr16
and
xorl
stos
loop
cmpsl
sbb
push
scas
sub
inc
int
sbb
fnstsw
or
sbb
call
add
cld
xor
xor
mov
test
ret
or
std
out
sub
dec
outsl
arpl
mov
mov
icebp
imul
testl
repnz
jg
mov
mov
and
mov
or
cmpsb
add
dec
jl
mov
add
push
lcall
sub
mov
jmp
idiv
sbb
fs
or
cld
ret
fwait
mov
push
nop
fiadds
int3
aaa
popa
sub
lock
cmp
ss
dec
inc
sub
pop
xor
dec
cmpl
and
cmpsl
std
repz
dec
dec
shll
cmp
xchg
pop
fidivrl
pop
and
sbb
imul
pushf
imul
mov
push
mov
fistps
jmp
fdivs
dec
sbb
cs
in
and
rep
dec
fidivrs
loope
shr
lret
mov
das
or
orb
ljmp
push
dec
inc
dec
fwait
push
mov
mov
cmovg
jns
push
mov
mov
gs
mov
out
leave
flds
imul
in
sarb
outsb
cmp
xor
push
mov
loop
pop
cmc
push
cmp
mov
jle
jp
xchg
fnstsw
popl
repz
xchg
mov
aas
add
push
pop
lcall
mov
adc
ljmp
lahf
arpl
pop
pop
dec
insl
sub
add
xorb
sbb
dec
mov
mov
cltd
sbb
iret
adc
pop
add
call
dec
inc
mov
mov
lahf
mov
call
sti
sbb
push
cmpsb
jl
arpl
jae
push
out
shll
xor
cmp
and
rep
imul
cltd
cmp
push
inc
lock
outsl
lea
fadd
xchg
jo
scas
es
adc
aad
movsl
dec
dec
pop
xor
xor
xchg
loopne
push
jnp
cmp
or
ja
jb
mov
clc
jmp
pop
pop
jmp
cmc
jne
inc
ja
mov
jnp
sub
test
je
aam
mov
jmp
fidivl
xor
fldcw
das
in
and
pop
cmp
iret
call
xchg
ja
sbb
ljmp
xor
imul
xor
iret
or
dec
cmpb
clc
inc
mov
fwait
mov
dec
xor
lret
enter
xor
adc
or
out
adcl
sbb
imul
test
cmp
lods
jp
imul
jns
sbb
lock
xor
mov
out
arpl
imul
mov
mov
add
inc
lock
push
pop
or
sbb
cmpb
inc
xorb
jae
and
or
push
mov
pop
idivb
cltd
pop
outsb
lret
xchg
sub
das
mov
jns
push
inc
jnp
and
xchg
xchg
or
mov
xchg
mov
stos
pop
iret
or
jecxz
sbb
inc
ss
cmp
movsb
mov
dec
js
cmpsb
mov
rorb
sub
pop
cmp
inc
movsb
jge
mov
mov
sbb
inc
pop
pushf
dec
jecxz
or
repnz
nop
ja
and
cmc
lret
xchg
daa
pushf
push
movsl
test
inc
nop
sub
jmp
pushf
jecxz
rol
loope
push
sbb
cmp
sbb
push
sbb
mov
jle
sub
out
mov
inc
jmp
cltd
out
cmc
and
jno
dec
and
or
jno
ss
orb
ljmpw
jns
in
mov
jnp
in
orb
xchg
jg
xor
xchg
sub
xor
mov
jmp
push
movsl
jo
jecxz
imul
fwait
xchg
or
rcr
pop
sub
aaa
je
xor
fwait
outsb
adc
jmp
or
sbb
test
loope,pt
cmp
inc
fnstcw
les
cmp
mov
pop
jge
xor
stos
jge
pop
iret
jae
repnz
pop
movsb
movl
push
shlb
mov
sbb
adcb
dec
sub
iret
adc
xchg
add
or
decb
int
fwait
jne
lahf
dec
adc
aam
dec
hlt
iret
mov
mov
rcll
push
dec
cmp
lds
push
stos
loopne
lret
sti
lahf
aaa
xor
fdivrs
stc
sub
or
mov
fsubs
and
sub
orl
lock
mov
mov
mov
jecxz
movsb
imul
pop
cmp
cmc
cmpl
jns
aaa
cmpsl
jnp
arpl
cwtl
jae
mov
lahf
jmp
repnz
pop
dec
rcrl
mov
mov
in
addl
dec
adc
sbb
lods
ret
mov
stos
or
xchg
sar
rolb
sarb
lcall
pusha
mov
and
sti
pop
mov
jno
fwait
xor
xor
xchg
push
cwtl
sub
repnz
adc
adc
test
mov
sub
cmp
cmpsl
js
add
pushf
adc
addr16
sbb
push
jmp
mov
jnp
les
mov
popa
jl
lods
add
outsb
mov
mov
xor
shr
pop
imul
cmp
scas
shl
mov
push
lods
mov
popf
sahf
mov
outsl
push
sarl
movsl
jbe
aas
outsl
popa
mov
inc
xor
ret
js
ss
aas
in
ljmp
inc
add
pop
imul
cmp
push
and
rcrl
roll
or
test
xchg
pop
xor
jmp
push
mov
clc
shll
inc
daa
add
cld
shlb
pop
mulb
xchg
scas
test
push
call
inc
into
and
frstor
mov
dec
and
loop
std
jecxz
add
push
cmp
xchg
mov
sub
push
xchg
rcrl
xchg
stos
xchg
inc
jmp
mov
mov
mov
imul
mov
imul
ds
in
xor
push
mov
icebp
mov
mov
sbb
pop
push
cmp
mov
mov
popa
adc
or
jne
sti
scas
mov
push
mov
iret
loopne
out
dec
popf
pusha
rorl
adc
sbb
xchg
xchg
jnp
cmp
fbld
mov
mov
push
add
and
loope
es
mov
jle
aaa
cmp
out
into
out
sarl
nop
inc
fcmovnbe
jno
mov
push
push
sub
fmull
je
pop
sti
push
cmp
sub
test
pop
jmp
out
ja
cmp
inc
stos
mov
mov
push
repnz
mov
enter
repnz
jmp
push
lcall
adc
push
mov
leave
dec
xchg
adc
push
mov
cmc
jnp
cmp
lds
mov
int
lock
lods
add
lss
mull
repz
pop
std
mov
mov
je
mov
adc
mov
rol
repnz
adc
dec
sbb
inc
cmp
xchg
push
sub
into
mov
out
in
jne
inc
jl
stos
les
cmp
cmpsl
jg
sub
inc
loopne
nop
push
jp
sbb
fistl
cs
xchg
push
subl
out
lret
sub
ss
xor
in
cmp
inc
adc
shrl
cmpsl
shll
hlt
dec
xchg
sbbl
je
out
cld
imul
fbstp
rcrb
pop
inc
mov
dec
fs
and
jbe
and
sub
push
mov
push
jne
mov
je
imul
lcall
nop
cmpsb
insb
sahf
adc
mov
push
mov
scas
dec
and
mov
pop
and
push
imulb
movsb
iret
ja,pn
out
shr
test
lods
pop
mov
xorl
cmpsb
les
sbb
mov
and
pop
sahf
mov
imul
inc
xor
addr16
jl
cltd
dec
xchg
xor
movsl
xor
stc
mov
cmp
in
mov
inc
push
ret
adc
shr
lcall
add
push
mov
lret
push
mov
aad
mov
dec
lds
hlt
adc
mov
je
je
roll
sbb
test
jo
push
clc
call
sub
shrb
ljmp
dec
ljmp
dec
lods
pop
pop
fs
add
mov
push
jne
jae
cmp
fisubl
mov
add
test
out
push
jb
out
mov
jg
xchg
mov
mov
out
lock
orb
repz
mov
adc
sbb
xchg
jo
jecxz
cmp
push
loopne
movsl
mov
lock
test
mov
mov
ret
jg
cmc
pop
inc
adc
fisubs
lahf
lcall
leave
adc
jo
inc
mov
sub
jb
frstor
mov
clc
out
gs
jge
sbb
inc
pop
out
mov
or
loopne
insl
arpl
xor
mov
and
ret
int
and
and
shrl
int
addr16
fsubrl
das
shrl
push
into
loope
push
lret
adc
stos
cmpsb
mov
ss
xor
lock
int
xchg
repz
lods
inc
pop
popa
test
xorb
xchg
jo
es
xlat
push
mov
pop
mov
and
dec
inc
xchg
lods
fcomp
js
and
push
push
loope
inc
add
sub
inc
mov
aad
or
mov
aaa
cmpsb
imul
and
xchg
sahf
lret
mov
fstps
movsb
test
xchg
jae
fildl
inc
mov
cmc
pop
cmp
and
adc
loopne
xor
negl
xchg
adc
cmpsl
shlb
mov
jp
repz
push
jbe
in
outsb
push
icebp
loopne
jno
dec
nop
filds
hlt
addb
mov
sbb
popa
jl
and
push
pop
js
pop
adc
fnstenv
jmp
std
push
sbb
loop
pop
clc
jmp
into
daa
cmc
mov
cmp
xchg
sarl
xchg
mov
shll
jp
mov
pop
pop
jl
xor
xor
leave
daa
mov
xchg
punpcklbw
ja
fldenv
js
fsts
test
or
repz
shlb
ror
xorb
scas
cli
test
js
mov
pop
clc
mov
push
jnp
inc
lods
decb
outsb
push
mov
shl
mov
dec
movsb
insb
sbb
ror
into
lahf
adc
dec
cwtl
lcall
add
and
inc
adcb
inc
or
popf
inc
cwtl
push
in
fisttpll
xor
xor
sbb
mov
mull
addr16
ret
pop
xchg
pop
repz
sbb
dec
push
das
jmp
inc
push
add
add
or
dec
mov
or
pop
fldl
xor
xor
out
dec
insb
fidivrl
mov
movsl
xor
lahf
test
pop
add
subb
push
cmp
aaa
add
std
ret
cmp
add
mov
and
pop
ljmp
and
or
lock
movsb
dec
in
push
negl
fwait
or
cld
pop
cld
jns
pop
subl
imul
movsl
inc
in
jecxz
pop
inc
cmp
or
in
mov
pop
sub
stos
lcall
ss
push
rcll
push
stos
popf
mov
es
imul
cmpsl
pop
adc
cli
mov
mov
test
and
stos
stos
lods
dec
dec
dec
pop
or
ljmp
imul
xor
adc
aas
mov
decl
data16
cmp
inc
inc
rolb
mov
pop
movsl
push
lods
cmp
pushf
adc
xchg
iret
sarl
lahf
adc
and
cmp
imul
push
mov
enter
cmp
mov
mov
dec
adc
stos
lret
sub
or
xchg
sbb
mov
push
mov
xchg
pop
repz
inc
pop
push
inc
dec
jno
mov
or
jnp
xor
sub
dec
mov
jns
jecxz
fcomip
fcoml
daa
cmp
outsb
cltd
xchg
test
mov
and
cmp
ss
pop
mov
test
push
xchg
outsl
inc
insl
fwait
cmp
sbb
mov
flds
in
ds
pushf
ljmp
mov
sbb
mov
add
jbe
rclb
pop
jge
lea
sbb
ss
lock
sbb
mov
push
ret
negb
sahf
jnp
mov
add
mov
test
mov
iret
pop
push
gs
sub
push
inc
sbb
pop
movsl
jns
inc
jno
imul
push
dec
xor
push
shrl
jl
leave
mov
mov
mov
xlat
hlt
mov
gs
in
mov
mov
lcall
cmp
enter
hlt
fs
sarl
cli
pop
dec
iret
hlt
rcll
cmp
mov
inc
pop
xor
mov
mov
pop
pushf
mov
lods
mov
je
cmp
adc
inc
pop
out
jmp
xor
sub
fs
jbe
adc
mov
ror
mov
shr
cmp
add
or
sub
faddp
leave
cs
jne
cmp
push
add
lods
pop
mov
mov
add
sub
out
or
stc
nopl
dec
push
mov
adc
lock
cmp
sbbb
jmp
div
imul
mov
call
mov
ret
pushf
js
cmp
and
sbb
jmp
cmp
in
cwtl
mov
pop
sub
dec
pop
lods
cwtl
xor
test
sub
lods
push
dec
cli
imul
lret
jno
lret
mov
popa
sbb
test
pop
xchg
adc
aad
cmc
dec
or
sti
pslld
xchg
dec
es
shrl
fcoml
sarl
imul
xchg
sbb
inc
and
pop
aad
dec
sbb
xchg
mov
jnp
cmp
xchg
aaa
lods
sbb
jle
loop
das
sbb
ljmp
fidivs
mov
into
leave
inc
pop
pushl
imull
outsl
rol
movsl
pop
push
outsb
popa
sub
rcll
idiv
pop
lods
add
inc
data16
int3
and
pop
fdivrl
mul
jp
pop
adc
out
test
mov
or
lea
notl
lds
xchg
or
test
push
dec
inc
mov
ret
add
push
mov
dec
aas
adc
push
pop
pushf
jb
xchg
jmp
aam
mov
sub
shll
aas
int
adc
xchg
mov
cmp
pop
or
fcmovb
push
jb
es
std
ret
push
ja
mov
push
adc
in
xorb
test
or
mov
mov
lahf
pop
jno
xor
cs
sub
jmp
loope
int3
cltd
xchg
adc
test
cmc
ja
cmp
mov
int3
lret
fisubs
push
aam
xor
pop
ret
js
jbe
jno
sub
jmp
sbb
es
repnz
inc
stos
xchg
mov
je
stos
ja
orl
out
cmc
xor
cmpsl
cs
scas
mov
sbb
in
jl
cltd
jnp
or
sar
sub
aam
xor
jae
int3
xchg
fmul
mov
pusha
xchg
jnp
fsub
loope
pop
aas
ljmp
test
mov
or
decl
push
jecxz
jae
or
inc
hlt
ljmp
pop
test
adc
rcll
pop
mov
add
mov
int3
xor
push
inc
hlt
rcr
ret
or
and
clc
jnp
andl
fildll
push
in
ficompl
xchg
iret
adc
cmp
dec
mov
pop
xor
pop
test
pop
pop
mov
add
sbb
and
fwait
clc
push
sub
cmp
jp
mov
out
in
cmpsl
je
push
mov
icebp
jmp
test
cmpsl
or
adc
push
xchg
and
in
aas
mov
mulb
imul
mov
pop
xor
ljmp
imul
xor
sbb
leave
pop
push
setp
sub
lret
jo
addl
sbb
sbb
ret
or
jle
ljmp
cmp
and
cmp
push
jae
fmuls
xchg
mov
arpl
add
pop
pop
lahf
dec
cli
push
push
xor
in
mov
mov
sub
fstpl
pop
dec
sub
dec
test
jne
jo
testb
test
jbe
mov
imul
nop
pop
and
adc
jl
add
adc
clc
movb
dec
fwait
adc
popf
pop
jg
cli
jecxz
xchg
adc
jb
adc
or
dec
int
cmp
mov
sub
adc
jp
nop
push
loope
and
mov
shrl
mov
das
cmp
popf
lahf
xor
sbb
int
popa
loopew
push
call
inc
lds
stos
xorl
mov
repz
jecxz
lods
pop
xchg
lahf
int
sbb
arpl
rolb
loop
cld
mov
popa
pop
xchg
jge
lds
inc
mov
rol
dec
sbb
insl
jmp
xchg
rorl
mov
loop
outsl
imul
inc
popa
ffreep
inc
sbb
mov
mov
cmp
xor
xchg
insb
mov
jp
sahf
das
xchg
sbb
mov
inc
loop
mov
and
push
fistpll
icebp
xchg
aas
sub
ror
mov
mov
pop
jmp
into
fs
and
hlt
clc
dec
fsubrs
jno
sbb
cmp
cs
mov
jne
mov
add
cld
insl
popa
fdivs
test
lcall
clc
sbb
inc
das
mov
lret
test
sbb
cmp
jmp
xchg
lock
stc
imul
xchg
out
ss
jo
cli
cmp
mov
js
cmpsl
push
push
dec
in
mov
mov
in
mov
add
jp
add
lret
ja
scas
stc
les
cmp
mov
test
push
and
mov
pop
mov
mov
int
xchg
fs
test
aas
outsl
lahf
flds
popa
xchg
dec
jb
data16
lcall
xor
pop
cmp
and
pop
mov
jnp
add
mov
push
fistps
dec
dec
cltd
mov
popf
into
scas
les
sbb
nop
and
test
mov
add
js
xchg
cmp
add
call
sahf
add
shrb
mov
sti
pop
int
mov
adc
insl
ja
jp
stc
repz
loopne
or
push
xchg
xor
testb
and
xor
and
stc
in
clc
add
jle
fwait
icebp
pop
pop
js
pop
dec
iret
in
repnz
jae
cmp
sahf
pop
adc
sub
jns
mov
mov
enter
mov
fdiv
jp
js
inc
add
adc
ds
mov
test
dec
or
push
popa
pop
in
adc
and
sbb
pop
repnz
sbb
rorl
pop
cmpsb
lcall
cmp
popf
pop
cmp
push
jmp
rcll
jns
sub
fimuls
fs
jnp
jb
outsb
sbb
dec
adcl
mov
pop
add
insl
sahf
repz
mov
push
ret
lods
inc
stos
sbb
je
push
je
add
aas
sub
dec
xor
fnstcw
out
or
pop
or
mov
jp
shlb
jmp
mov
iret
jle
outsl
les
sbb
xchg
or
adc
icebp
arpl
mov
movsl
icebp
and
int3
lods
std
jo
xor
fisttpll
iret
mov
test
add
xchg
xor
ds
arpl
pop
pop
sub
hlt
shl
xchg
inc
daa
rol
cmpsl
out
sbbb
sbb
xor
inc
pop
imulb
lret
push
iret
or
pop
xchg
inc
arpl
dec
or
jnp
pushw
xchg
jecxz
xchg
cwtl
divb
xchg
nop
aam
aad
dec
mov
dec
sbb
mov
imul
adc
xchg
mov
loope
divl
xor
arpl
xchg
outsb
push
xor
jbe
jg
jae
idiv
add
push
aas
mov
xchg
inc
addr16
mov
push
sub
movsb
or
jb
jle
dec
xchg
pop
mov
inc
pop
popf
lcall
push
mov
mov
push
adc
mov
fcompp
fdivrs
sbb
in
popa
xor
and
es
or
xchg
mov
sbb
fnstenv
pop
push
out
ljmp
jg
adc
jmp
mov
jne
hlt
mov
sti
cld
mov
daa
add
int3
jp
out
lods
push
repz
add
jo
fistps
fstps
test
pop
test
dec
and
sub
addb
ficoml
sub
lds
pop
ljmp
dec
fstps
iret
movsb
insb
and
jae
mov
ret
jmp
add
shlb
pop
jne
mov
das
mov
and
push
dec
push
sub
cmc
adc
pop
loope
inc
dec
cli
aam
movsb
shll
lds
es
stc
and
add
movsb
dec
aaa
mov
dec
stos
dec
jno
jno
dec
mov
and
sub
push
fbstp
xchg
push
mov
shrb
pop
dec
mov
xor
sbb
mov
xchg
dec
imul
and
inc
xchg
icebp
stos
push
mov
cs
sahf
fnstcw
adc
das
cli
je
add
xchg
js
mov
adc
lret
aam
adc
push
xchg
bound
jns
mov
mov
mov
rorl
sbb
arpl
mov
fwait
push
adc
mov
fsincos
xchg
pop
mov
in
mov
movsl
fildll
sub
xchg
dec
fadd
mov
frstor
int
mov
push
and
lcall
mov
mov
mov
dec
cltd
jge
and
icebp
and
shll
insl
rorb
ja
inc
pusha
aam
xchg
lds
cltd
mov
std
sarl
pop
lock
xlat
xor
adc
mov
and
or
dec
js
adc
inc
push
jno
clc
iret
xor
int
push
xor
lods
daa
add
mov
adc
push
sub
insb
adc
pop
cltd
ret
dec
cmp
jne
test
and
xor
mov
pop
shrb
mov
js
int
jl
xchg
fmull
cwtl
les
std
in
adc
or
push
mov
jmp
xchg
fs
push
jae
arpl
adc
stos
or
fldenv
aad
jecxz
lcall
repnz
out
aas
decb
hlt
xor
dec
cmc
call
dec
xchg
jb
push
mov
leave
xor
aas
adc
jle
add
inc
call
xchg
cmovge
icebp
mov
mov
lods
cltd
movsb
jecxz
mov
pop
in
add
jb
movsb
and
cmp
in
xchg
imul
xchg
push
add
mov
hlt
ret
lcall
mov
push
pop
mov
jmp
xor
dec
popf
fbld
inc
or
inc
and
pop
pusha
adc
sub
fwait
addr16
test
mov
lret
cmp
pop
or
xor
pushf
sub
xchg
mov
jns
test
xchg
das
pop
sbb
inc
scas
push
add
pop
arpl
or
dec
mov
xchg
les
aam
movl
mov
mov
jg
mov
fldenv
xchg
dec
sarb
push
sbb
cld
fistl
hlt
test
shrb
mov
xorb
ftst
popf
shrb
in
sub
mov
cmp
xor
frstor
sti
out
xchg
pop
mov
adc
nop
sub
aam
roll
in
mov
push
xchg
in
jns
xor
das
xchg
fistps
adc
jae
dec
inc
int3
and
icebp
mov
push
aas
js
and
and
mov
leave
fstl
ficoms
xchg
add
sub
mov
mov
pop
ss
lods
bound
js
sub
add
push
leave
cmp
push
movw
movsb
mov
imul
imul
outsl
or
jmp
cltd
nop
jg
xchg
mov
sub
les
jns
popf
dec
cmp
jbe
xor
push
and
pop
and
test
stos
scas
imul
ljmp
sub
push
adc
loope
arpl
mov
mov
mov
mov
jp
mov
sbbl
fildl
add
movsb
jl
daa
out
mov
xchg
mov
dec
or
andb
fs
adc
mov
or
or
hlt
dec
fs
aad
test
or
jle
leave
aam
push
sbb
shr
jg
jnp
mov
jl
cld
push
cs
sti
out
out
sub
mov
xor
add
push
jns
movsl
jl
jnp
insb
xchg
in
or
xchg
cld
cli
sub
dec
sub
sbb
mov
in
pop
jmp
out
add
pop
or
dec
outsb
or
outsl
jne
es
jae
sub
aam
and
push
inc
dec
lahf
aaa
mov
scas
add
scas
loope
lods
fs
lcall
cltd
xor
insb
in
push
call
pop
and
in
jae
testl
rcrb
xchg
sub
das
mov
dec
and
pop
mov
push
sub
xor
add
icebp
loopne
dec
adc
out
add
jnp
icebp
roll
dec
in
fstps
cmp
xchg
lahf
into
das
notb
std
mov
or
pushf
push
pop
or
inc
push
mov
push
popf
test
sbb
sub
popa
ror
enter
rcr
mov
xor
pop
jmp
xchg
call
jb
scas
insl
mul
and
sub
sbb
ficoml
jecxz
dec
sbb
rcr
jae
sub
nop
je
std
and
add
add
ds
into
rolb
rep
mov
into
sbb
xor
xlat
xchg
jmp
mov
xchg
stos
dec
lods
test
and
or
push
lock
insb
je
push
or
into
call
jno
mov
pop
jmp
pop
mov
js
sahf
repz
scas
leave
dec
push
xchg
fidivs
pop
pop
mov
pop
ljmp
in
in
pop
imul
inc
dec
sbb
fsubrl
or
adc
sub
clc
cmp
andl
ljmp
push
out
lcall
and
sub
mov
jae
das
sub
fisttps
mov
sbb
push
jne
adc
xchg
mov
adc
sub
lret
je
xor
cmp
jl
and
fs
aam
add
xchg
bound
pop
dec
sub
sarb
mov
mov
jge
or
cmc
mov
mov
popf
enter
mov
pop
inc
lret
jge
adc
popf
enter
sarb
xor
cmpsl
cmpsl
jmp
mov
insl
xchg
mov
ret
jp
mov
cmp
push
lock
testl
out
rorl
add
cmpsl
out
mov
push
mov
negl
mov
push
mov
enter
subb
scas
mov
pop
std
and
jecxz
add
jecxz
movsb
mov
movsb
sahf
call
icebp
fildll
dec
loopne
mov
in
sbb
and
jmp
imul
out
bound
es
inc
sbb
jecxz
sbb
push
or
call
push
push
idivl
ret
xor
mov
xor
jne
or
sbb
adc
jae
adc
out
pop
or
cmp
hlt
pop
pop
addr16
mov
inc
cld
cli
outsb
fwait
adc
sti
cwtl
sub
js
inc
push
sbb
mov
clc
inc
mov
int
fcoms
test
stc
shl
inc
fisubl
and
push
jmp
ficompl
adc
dec
sub
push
aas
gs
pop
inc
jp
mov
mov
sub
mov
xor
jne
fwait
popa
sbb
lock
nop
sub
mov
pop
dec
or
xor
imull
push
pop
sbb
fnsave
xchg
xchg
and
mov
lcall
cld
aam
fsubrs
test
mov
out
loopne
test
mov
mov
mov
test
in
xor
cmp
fwait
jp
sub
adc
mull
mov
cwtl
mov
or
or
std
pop
mov
bswap
insb
sub
std
out
stos
push
out
shl
push
sub
aam
jge
dec
aad
fisubl
pop
movsl
jp
inc
std
xchg
and
mov
daa
adc
jmp
mov
ja
push
jnp
and
aad
inc
jle
push
sbb
sti
aam
xchg
pop
cwtl
mov
rcrl
xchg
add
xlat
fwait
pop
and
shll
inc
insb
imul
call
push
xor
cwtl
and
xor
xchg
mov
popa
push
pushf
pushf
and
mov
jecxz
imul
jo
fcompl
out
ljmp
mov
arpl
inc
push
sub
cmc
sbbl
fdivp
sbb
dec
adc
movsl
das
mov
aad
mov
mov
adc
pop
pop
mov
or
cwtl
das
mov
stc
stos
ja
pusha
jb
pop
data16
pop
inc
add
sbb
repnz
lods
xchg
sbb
call
and
aaa
nop
icebp
mov
scas
inc
cmp
ficoml
icebp
sub
or
ja
pop
mov
and
dec
sbb
std
push
pop
adc
sub
jb
dec
mov
add
jecxz
leave
xchg
in
dec
rol
mov
lahf
or
lahf
ficoms
adc
mov
test
js
push
in
call
sub
or
std
les
pushf
push
in
js
pusha
mov
fcom
mov
sub
sbb
xchg
inc
test
ja
loope
inc
in
ret
cmp
inc
mov
and
dec
in
ljmp
sbb
je
add
dec
mov
mov
div
push
addr16
and
cmp
and
add
sbb
scas
cmpsl
pop
ret
bound
mov
mov
pop
sub
mov
push
sub
icebp
mov
lahf
fistl
repnz
fstpl
lret
repnz
dec
lea
fs
push
xchg
adc
and
lahf
bnd
lcall
jecxz
mov
pop
ret
inc
xchg
test
sbbb
cmp
stc
fiaddl
sbb
fstl
or
push
mov
or
insb
xor
cmc
mov
clc
outsl
dec
xor
jg
add
in
cli
aad
mov
mov
loope
fadd
dec
push
xchg
xchg
sub
scas
pop
add
mov
in
or
and
xor
int3
mov
xchg
repnz
jae
jne
fistpl
push
test
aas
cs
sbb
outsb
call
je
mov
xor
xchg
repnz
xchg
add
xchg
sub
ret
sub
and
rcrb
push
dec
inc
data16
aad
std
repnz
mov
dec
pop
lock
movsl
jo
and
sti
xor
cmp
sbb
and
arpl
cmp
and
mov
push
and
fmull
mov
xchg
movl
cltd
cmp
mov
mov
sbb
and
mov
int3
cmpsl
repz
mov
lods
cmp
mov
pop
mov
pop
pop
mov
push
add
in
cmpsb
adc
addl
inc
pop
sub
xchg
dec
fisttps
call
push
add
pop
xchg
fs
call
lock
sub
sub
iret
sub
pop
dec
jo
in
mov
jl
mov
xchg
xchg
push
shlb
pop
mov
cmc
loop
add
inc
out
jg
in
dec
aad
sbb
sahf
inc
cmp
daa
loop
pop
xchg
in
cld
cmpsb
and
test
cmp
and
lahf
out
inc
lahf
int3
jae
fwait
push
call
mov
sbb
mov
popa
pop
out
sbb
in
inc
enter
out
rorb
inc
rclb
fwait
ss
xlat
cmp
dec
sbb
into
xor
xchg
cmp
xor
add
lds
jl
push
jle
int3
dec
arpl
insb
scas
mov
cli
mov
fnstcw
lahf
mov
stos
push
lcall
cmpb
xchg
inc
cmp
sbb
subl
push
dec
push
and
repz
sub
mov
scas
faddl
cmpb
ds
mov
dec
movsl
dec
outsl
js
push
xor
inc
mov
in
fstp
bnd
adc
xchg
hlt
dec
xor
jae
aaa
dec
icebp
data16
imul
cld
push
xchg
imul
inc
mov
mov
mov
fistl
int
xor
jb
movsb
lea
pop
mov
jmp
push
les
movsb
dec
orl
jmp
mov
mov
mov
movl
mov
mov
out
lock
aaa
cmp
shl
pop
test
punpckhwd
jg
cs
fucomi
pop
popf
scas
push
clc
unpcklps
or
call
push
rolb
inc
sub
add
inc
jle
mov
imul
dec
fistps
mov
mov
jp
pop
lahf
mov
lret
daa
idivb
push
sbb
cmp
loope
inc
test
sub
xor
mov
subb
nop
sbb
push
fistpll
nop
jb
adc
addb
mov
or
mov
adc
les
cwtl
sbb
out
jns
inc
mov
sub
mov
sbb
cmpsb
std
dec
xor
push
rolb
sbb
andl
pop
out
push
sbb
pop
jno
je
imul
pusha
push
pop
popa
push
xchg
inc
outsl
cmp
xchg
movb
sub
adc
lcall
pusha
or
jp
pusha
je
into
mov
loope
hlt
popf
outsb
cltd
imul
adcl
rcr
push
pop
xchg
mov
pop
pop
pop
aad
or
sub
xbegin
inc
sbb
jl
movups
shll
mov
inc
in
adcb
cmp
jne
sbb
xor
leave
jl
add
ret
mov
mov
jmp
scas
das
xchg
adc
jno
in
fptan
test
mov
cltd
sub
aam
xor
pop
add
jne
je
aas
jns
ficoml
rclb
leave
mov
aaa
repnz
aas
pop
fs
test
xlat
movsb
push
mov
inc
adc
ret
mov
clc
cmpsb
inc
xchg
mov
dec
xchg
xor
jg
cmp
add
aad
hlt
add
pushf
sbb
mov
add
mov
and
popf
or
add
rolb
js
mov
pop
outsb
idivl
out
lock
in
jp
lds
xor
jg
xlat
push
xor
adc
ffree
add
mull
jmp
dec
pop
mov
mov
xchg
dec
cwtl
sbb
inc
shl
lcall
js
int3
outsb
mov
jle
or
jp
push
mov
and
repz
lret
imul
push
std
in
sub
adc
scas
cs
notb
fs
jne
arpl
fdivrl
or
xchg
into
jnp
xchg
mov
and
mov
jp
lea
sub
cwtl
mov
stc
push
inc
cmp
or
orb
pushf
jbe
test
cmp
out
mov
pop
fcoms
mov
movsl
add
das
xor
pop
pusha
movsl
xchg
cmp
and
fwait
in
aam
sbb
mov
int
dec
iret
or
and
cld
jbe
mov
sti
jg
jno
pop
xor
cltd
int3
push
ja
scas
fists
stos
shll
cmpsb
sub
out
jns
mov
imul
xor
cmp
daa
dec
mov
hlt
ret
std
stc
ja
xor
repz
xchg
aam
sbb
cmp
test
testl
mov
add
mov
pop
hlt
cmpsl
or
in
ret
mov
out
or
and
jmp
cwtl
addb
insl
push
or
push
adc
sahf
enter
and
lods
bound
lock
or
out
pushf
mov
mov
mov
cmp
mov
sub
sbb
xchg
add
lods
loope
dec
sbb
fldcw
push
pop
mov
and
test
xchg
loope
iret
in
fisttpl
sub
mov
mov
std
ljmp
xchg
cli
dec
cmp
jns
add
scas
dec
sbb
jbe
es
addr16
sbb
sub
mov
push
aad
repz
xor
shl
mov
popa
pop
stos
add
mov
jle
addr16
testb
loop
jg
std
adc
das
mov
xor
and
sub
or
xchg
mov
lock
push
enter
loopne
and
pop
cmpsb
stc
dec
inc
sbb
mov
fld1
adc
lds
mov
jmp
clc
inc
loope
adc
dec
or
cmpsl
pop
in
out
test
xchg
scas
test
add
and
lea
mov
stc
xor
and
xlat
sub
add
sti
xchg
rcrb
mov
inc
inc
iret
ss
decl
je
daa
sub
insl
xchg
jmp
out
sub
mov
pop
loope
fidivl
xchg
xor
stc
push
cwtl
addr16
pop
mov
in
insl
das
mov
lahf
mov
es
pushf
dec
nop
xlat
jecxz
pop
jl
nop
sub
jecxz
rorb
push
sti
sub
cmp
xchg
lahf
jns
insl
mov
push
mov
lods
adc
pop
fildll
dec
call
xchg
jne
and
xor
jb
lcall
shll
out
push
aaa
je
shll
repnz
cmp
ds
xchg
push
lds
or
sub
scas
jg
adc
rorl
rorl
inc
movsl
loopne
fimull
sbb
xchg
pop
mov
mov
js
pop
rcrb
stos
ret
mov
addr16
pop
scas
xor
stos
enter
pop
inc
add
lret
sahf
cmp
sarl
es
hlt
jg
mov
sbb
push
shrl
popa
mov
xchg
xchg
add
int3
inc
adc
or
leave
cmp
enter
cmc
enter
or
or
out
xchg
adc
xchg
pushf
jo
push
pop
movsb
cs
push
sbb
xor
cltd
cmp
xchg
iret
fprem
jecxz
xor
jno
or
push
mov
ret
and
sbb
cmp
or
lahf
or
xor
mov
in
rcr
cmpunordps
movsb
add
inc
rclb
pop
out
add
jp
cmpsl
out
cwtl
outsl
lcall
mov
push
mov
nop
pmulhuw
jno
enter
dec
test
mov
push
daa
sbb
add
push
lock
jnp
mov
sub
lock
icebp
ficoml
int3
out
add
lock
push
je
or
gs
cmpsb
mov
pop
adc
cli
mov
out
dec
cmp
outsl
jbe
push
push
or
loop
xchg
in
sti
mov
adc
jo
out
push
vmovaps
notl
pop
mov
pop
mov
sbb
addr16
sbb
cmp
fs
imul
add
mov
jnp
and
into
push
and
pop
testb
push
sahf
dec
pop
cmp
mov
mov
dec
enter
ds
mov
jb
outsb
cmpsb
mov
push
push
push
add
xchg
lcall
push
sub
dec
ret
mov
jge
fwait
dec
mov
inc
pop
push
test
ds
sbb
adc
cmp
fwait
jne
outsl
les
popa
or
jbe
inc
lock
jmp
aas
push
xchg
push
mov
out
cwtl
subb
jnp
sbb
jb
sbb
and
das
push
outsb
pop
dec
add
mov
lea
ljmp
sbb
pop
inc
addr16
jge
xlat
inc
inc
cmc
adc
aas
repnz
test
das
rcl
inc
ja
jo
dec
push
cmp
pop
jbe
add
cmp
sbb
cli
sub
inc
test
mov
sub
inc
xchg
lret
mov
or
push
dec
pop
out
lods
jno
popf
ret
xchg
push
test
notb
mov
shrb
inc
in
idiv
xor
outsb
popf
lahf
sub
add
inc
orps
out
mov
test
mov
das
push
loop
jle
jne
das
xchg
dec
jmp
dec
mulb
push
or
jmp
cmp
clc
pop
dec
xchg
stos
outsl
ljmp
mov
in
xchg
fwait
stos
add
push
lahf
insl
add
xchg
out
cmp
sbb
add
cmp
jo
test
jno
iret
sub
jne
mov
mov
repz
cli
inc
sbb
stc
js
rcll
xchg
cwtl
bound
pop
and
jo
or
dec
pop
aaa
or
add
cli
test
inc
xchg
xor
fs
push
js
adc
and
mov
loope
inc
cli
enter
push
mov
ds
aas
or
cmp
loop
fcomps
adc
push
pop
add
stc
mov
xchg
inc
shlb
in
clc
xorl
or
addl
and
push
ret
pop
push
loop
jae
lret
fidivrl
pushf
add
sub
dec
inc
mov
add
je
dec
dec
aad
fs
inc
xlat
and
sub
jb
xor
or
mov
ds
xchg
add
cmp
mov
pop
add
jns
lock
repnz
sbb
inc
iret
repz
fsubrl
in
or
xchg
mov
mov
xor
jmp
movsl
stos
test
movsb
cltd
push
sti
pop
push
sub
push
jo
in
pop
lahf
in
sbb
insb
push
mov
loope
pop
movsl
or
add
dec
push
je
bnd
lods
les
mov
mov
js
mov
cwtl
mov
loop
mov
push
pop
add
mov
jns
mov
insl
add
and
inc
xchg
fistps
and
scas
pop
lds
push
xor
ret
adc
xchg
aad
shll
flds
lock
inc
incb
xchg
adcb
jbe
mov
out
fsubrl
mov
jmp
or
sub
mov
jp
scas
mov
ffree
jge
outsl
jno
repnz
or
pop
out
mov
andb
xchg
dec
in
aaa
ds
push
mov
sub
pop
inc
pop
push
loop
mull
xchg
aaa
out
pop
loope
pop
mov
outsl
lahf
mov
xor
dec
and
jle
lods
rcrl
jp
mov
mov
fstp
sub
setg
jle
pop
xorb
sbb
repz
and
dec
rcrl
push
mov
lcall
test
cmpl
call
or
aam
enter
inc
mov
push
sbbl
outsb
fnstsw
push
in
bound
into
test
cmp
adc
pop
test
or
adc
shlb
pop
inc
or
sub
int3
sbb
push
mov
divl
shlb
jle
fmulp
add
stc
mov
jae
pop
out
lea
rcll
inc
imul
dec
add
iret
dec
fsts
xchg
sub
mov
push
xchg
xor
jecxz
sub
xor
push
push
out
dec
add
xchg
out
dec
je
pop
rolb
pop
cmpsb
and
mov
sarl
mov
jae
out
xor
adc
mov
pop
repnz
adc
mov
jne
shlb
adc
outsl
sbb
jnp
rolb
push
add
push
push
std
shl
xchg
jnp
nop
mulb
mov
xor
scas
es
dec
lods
lahf
push
sub
inc
push
loope
leave
sbb
push
into
and
jns
inc
push
mov
push
dec
rcrl
sbb
pop
cli
into
fwait
test
dec
rorl
or
lret
fsubs
bound
jne
test
dec
adc
fidivs
inc
dec
cmpsl
fdivs
pop
xchg
sbb
dec
sbb
inc
aaa
jmp
outsb
jnp
push
mov
xor
and
sub
xor
movsl
mov
mov
or
ret
arpl
lock
pushf
push
clc
cmpsb
fcmovnu
pop
mov
mov
sbb
cmpl
lret
xchg
fisubrs
or
or
mov
or
ss
sbb
insl
mov
jb
push
push
movsl
jb
insl
bound
out
push
hlt
ret
fbld
int
sti
ja
cmp
push
jns
push
cmp
test
in
call
addr16
dec
cmp
inc
xor
aam
dec
cmpsb
adc
sbb
push
mov
fisttpl
mov
adc
sub
fiadds
pop
ss
mov
pop
test
subb
or
inc
mov
outsb
sub
and
mov
dec
push
mov
movhps
iret
cltd
daa
iret
js
xchg
mov
push
mov
popf
addr16
movsl
test
sbb
adc
call
into
fldcw
int3
xchg
icebp
or
loope
iret
cs
xor
aas
fsts
call
push
cmp
sub
xchg
or
femms
out
fwait
xor
aas
ret
pop
out
xchg
loop
lods
mov
roll
mov
pop
out
mov
repz
iret
nop
hlt
test
stc
push
repnz
outsl
aad
xchg
and
movsl
mov
sbb
cmp
or
call
ret
mov
pop
mov
mov
push
pop
fs
push
sbb
push
lahf
and
cmc
scas
aam
lea
movsl
add
dec
jmp
repnz
incl
lahf
aam
lahf
cmp
mov
sbb
xchg
mov
negb
mov
jge
sbb
fiadds
cmp
xchg
and
test
mov
cmpsb
sbb
push
xor
insb
add
add
xchg
mov
cmp
or
adc
or
leave
sub
xchg
ficoms
sahf
xchg
xor
pop
adc
mov
jbe
in
popf
sub
std
lahf
int3
add
repz
mov
jge
sahf
mov
push
adc
cmpsl
shlb
dec
cmp
mov
nop
and
xor
mov
dec
add
dec
xchg
lods
inc
add
scas
jg
jae
cmp
sub
bound
sbb
inc
xor
lahf
cld
and
inc
and
sbb
clc
test
xchg
testl
sbb
pop
in
xor
rcrl
and
pop
jae
cltd
aad
outsb
xor
jae
add
or
jns
sbb
jbe
xchg
pop
std
adc
cld
mov
jl
jg
mov
cmpsb
push
sbb
xchg
stos
and
dec
push
or
call
cs
dec
out
lods
push
out
mov
fmuls
add
add
fdivs
loope
pushf
cmpsl
sub
or
push
imul
xor
leave
sub
mov
cld
jno
xchg
insb
mov
mov
inc
and
mov
std
xchg
sbb
push
fcoml
xchg
or
jl
jg
sbb
mov
and
pushf
push
xor
imul
mov
add
cmpsb
add
movsb
cmpsb
inc
mov
out
cmp
push
dec
test
in
adc
sbb
mov
lea
imul
and
aam
test
jnp
jmp
sbb
out
sbb
and
lret
push
pop
vphaddbq
inc
outsb
insl
inc
sub
fcmovne
push
int
ss
mov
and
mov
pop
gs
ret
ret
push
jnp
push
popa
pop
and
popf
mov
mov
sar
add
xchg
inc
inc
cmc
stos
xchg
sbb
xor
dec
test
js
je
jg
or
std
notb
and
pop
cwtl
cmpsl
insl
stc
ja
das
mov
rcl
cmp
enter
jp
cmp
cmp
jno
int3
ja
into
push
xchg
xchg
out
loop
add
pop
fldl
push
fstl
mov
lret
ret
cmp
mov
in
push
cmp
xchg
mov
xor
pop
scas
ret
xchg
insb
mov
into
adc
lahf
dec
mov
movsl
mov
in
sbb
and
jns
xchg
sub
or
js
adc
add
leave
pop
jle
jl
dec
and
add
rcl
nop
or
popa
dec
sbb
or
movsb
arpl
loopne
mov
xchg
push
ss
out
xchg
call
push
out
mov
ret
stc
rcrb
cmpsb
out
sbb
mov
xlat
jmp
sbb
inc
out
in
dec
and
aad
xchg
xchg
dec
jle
jns
mov
push
add
pop
call
orl
js
pop
or
xchg
xchg
xchg
fimuls
fldcw
add
xchg
fcomp
lds
jno
push
lock
add
sti
pop
insl
jbe
xlat
inc
xor
mov
sahf
xchg
stos
inc
shrl
jb
insb
daa
push
cmpsb
ljmp
xor
call
mov
xchg
je
mov
xlat
das
iret
pop
nop
dec
int
insb
int3
and
xlat
jmp
jmp
repnz
push
movsb
out
xchg
loop
pop
dec
shrl
cmp
les
movsl
in
mov
add
mov
or
out
add
hlt
pop
outsb
xor
insb
ret
les
mov
dec
mov
pop
imulb
push
lahf
adc
das
mov
cs
jle
icebp
sbb
xor
push
pop
jb
push
enter
mull
aas
lea
fmull
out
fwait
push
mov
mov
dec
inc
ret
mov
fsubrs
sub
test
xchg
addr16
push
mov
call
mov
pusha
daa
cmp
mov
pushf
xchg
xchg
xchg
nop
into
and
dec
mov
dec
scas
push
inc
les
jp
outsb
in
icebp
cli
mov
push
scas
popa
out
xchg
mov
imul
bound
xor
fwait
mov
xor
insb
and
aaa
fisubl
dec
fsubr
lods
movsl
mov
push
mov
popf
enter
and
lea
dec
nop
shrb
xchg
pop
movsb
shll
lret
mov
test
ret
rorl
es
test
std
dec
push
ret
jl
test
push
loope
cmc
lods
pop
xchg
sahf
fwait
jg
pop
xor
sbb
jb
lret
inc
pop
aad
add
decb
imul
stos
call
dec
dec
adc
jmp
repnz
mov
mov
cli
mov
sbb
mov
repz
in
adc
aad
stos
cwtl
pop
sbb
loopne
aad
pop
xor
sub
fisttpl
adc
call
js
hlt
push
adc
popf
mov
mov
movb
xlat
test
dec
lret
xor
inc
jmp
and
mov
in
nop
inc
pop
movsl
xor
xchg
or
fs
pop
push
pop
fwait
pushl
xor
xchg
scas
jmp
pop
mov
sub
inc
ss
dec
push
xchg
add
daa
andb
push
xor
stc
sbb
xchg
xor
mov
dec
inc
out
cld
leave
test
fsubl
pop
and
adc
inc
mov
push
fsubrl
inc
faddp
inc
mov
jb
out
cmp
dec
fnstsw
mov
dec
xchg
insb
jmp
int
and
pop
push
out
xlat
jo
mov
insl
stos
aaa
in
mov
in
inc
sub
sbb
pop
fisubl
fcmovnu
out
pop
cmp
sarb
knotb
repnz
enter
loopne
cmc
bound
cltd
ss
fidivs
in
sahf
jle
js
hlt
mov
push
loope
push
rolb
push
inc
inc
stos
xchg
inc
mov
inc
dec
aad
push
pop
enter
in
inc
addr16
add
std
inc
cmp
mov
mov
incl
stos
stos
xchg
popf
les
shll
jmp
mov
xor
popa
shll
add
das
xchg
notl
loopne
jo
cmpb
int3
imul
or
jecxz
jp
pusha
mov
dec
mov
divl
sub
cmpsl
loopne
inc
outsl
xchg
inc
dec
subb
imul
testl
push
cs
mov
push
ret
lret
test
xchg
adc
jno
add
jmp
ret
mov
jbe
or
mov
lods
and
xor
int
mov
xlat
xchg
dec
lea
js
arpl
call
sub
popf
iret
mov
jnp
inc
aad
loope
mov
btr
ldmxcsr
mov
pop
stc
aaa
loopne
dec
jle
push
scas
xor
pushf
lods
add
lds
dec
cmp
call
add
rcr
out
shr
mov
xchg
inc
dec
cltd
sub
dec
pop
jns
es
stos
std
jns
or
movsb
jg
movsl
mov
lea
ficomps
and
in
lret
xor
push
popa
inc
and
push
push
add
mov
test
push
mov
xchg
lods
repnz
sub
loopne
das
rorl
mov
movsl
test
add
outsb
std
shrl
xchg
mov
scas
ret
push
adcl
cli
jg
adc
test
mov
jae
pop
mov
scas
cli
pop
out
cmp
add
ret
mov
mov
sub
loope
mov
pop
adc
or
push
shll
jl
stc
add
inc
dec
xor
sub
int3
cltd
ss
les
popf
xchg
repnz
les
xchg
lret
je
aam
inc
out
nop
fcmovb
and
mov
rcrb
call
mov
push
cmp
bound
xchg
or
xchg
push
pop
dec
call
or
movsb
hlt
adc
sbb
dec
in
xchg
lret
nop
lcall
cli
or
xor
pop
dec
add
xor
add
adc
dec
cmp
xor
and
mov
mov
jle
xchg
lret
inc
push
inc
xchg
and
push
xchg
pushf
outsl
jle
loop
test
aas
add
insl
cmp
and
daa
sub
clc
cwtl
mov
test
pushf
cmpb
inc
mov
pushf
jb
lcall
fstp
cmp
adc
loope
incb
adc
mov
mov
push
bound
add
add
movsl
push
jo
pop
sub
js
push
neg
mov
cmc
icebp
pop
imulb
dec
or
xchg
mov
xchg
out
inc
and
mov
xchg
idivl
imul
gs
jp
cmc
subb
fwait
ret
xchg
add
sti
xorl
add
dec
pushf
xchg
andl
cmp
mov
sbb
sub
insl
repz
sbb
subl
xor
data16
mov
leave
xchg
adc
adc
imul
and
push
xchg
dec
icebp
cmp
dec
imul
pop
inc
adc
aas
inc
or
data16
gs
into
mov
daa
and
pop
add
je
sub
lods
push
js
daa
cmc
push
icebp
push
cmpl
push
lock
aaa
loop
pop
cmc
add
movsb
and
cwtl
add
dec
jo
daa
cmpsl
dec
adc
shlb
xor
push
or
mov
mov
xor
sti
outsl
jmp
add
into
xchg
call
ret
loop
jg
test
inc
cld
popa
loopne
ret
loope
mov
inc
in
iret
jg
aas
call
mov
lods
sub
ret
push
add
jmp
mov
sar
dec
cmp
les
add
fcom
sbb
imul
cmc
push
arpl
pop
icebp
les
adc
inc
dec
mov
arpl
and
push
test
add
xlat
sub
test
lds
mov
iret
cmp
sub
mov
repz
add
push
jbe
or
insl
or
sti
pusha
or
sbb
divl
rorb
cmp
test
adc
std
xchg
xchg
jle
mov
dec
sub
pop
shll
adc
inc
jae
dec
ljmp
jb
test
out
les
or
mov
jecxz
fs
jnp
jmp
arpl
and
icebp
xchg
popa
cltd
push
xchg
daa
mov
ss
adc
mov
xchg
pop
and
nop
sarl
pop
mov
imul
fldenv
out
cmp
sar
sub
jge
iret
mov
in
pop
sbb
fdivr
stos
or
cmp
out
pop
pop
mov
js
movsl
je
pop
fs
cwtl
adc
sub
out
push
rcll
cmpps
and
pushf
xor
pop
pop
push
or
push
sub
add
pop
adc
xorl
adc
imul
test
push
pop
or
mov
test
addr16
push
mov
or
sarb
or
adc
adc
lods
dec
rorl
xor
jmp
fld
movsb
inc
sbb
adc
into
lds
cltd
mov
mov
repz
int3
shr
xchg
sbb
xchg
stc
adc
in
cld
dec
mov
in
xchg
loop
adc
xor
movsl
fadd
pop
pushf
mov
jp
lahf
push
xchg
and
inc
mov
push
xchg
pop
or
fwait
sahf
lock
inc
popf
lahf
out
sbb
das
or
sbbl
fwait
push
or
lock
pop
mov
in
inc
add
xchg
imul
inc
jae
lock
sbb
cmp
outsl
push
repnz
pop
mov
imul
in
dec
aas
inc
xchg
adc
sub
sub
je
aam
rolb
stc
sbb
divb
add
inc
dec
outsl
and
in
sbb
or
test
iret
and
lock
pop
xor
popa
test
add
test
in
push
sbbb
dec
mov
ficoms
mov
sub
jecxz
test
xor
call
outsl
lahf
aam
inc
cmp
cmc
ja
hlt
dec
std
push
sub
dec
and
pusha
iret
add
dec
sub
mov
fmuls
mov
push
and
jns
mov
and
xchg
push
stc
sub
fsub
push
fnsave
rcll
dec
mov
stc
cmp
inc
xchg
add
fisubrl
aad
mov
insl
mov
push
jge
bound
mov
push
icebp
test
dec
test
xor
popa
jno
sahf
adc
pop
mov
outsl
mov
push
push
gs
cmpsl
inc
shlb
adc
sbb
jno
or
insl
roll
fcmove
inc
idivl
ret
ljmp
xor
ljmp
xchg
pop
shlb
fs
test
push
inc
xchg
xchg
les
es
inc
inc
cmpsl
das
or
mov
push
pop
jo
fistpl
ret
xchg
dec
pop
ja
test
xchg
mov
fcmovbe
arpl
fnstcw
test
pop
repz
pop
jl,pn
stos
movsl
scas
mov
lret
ret
leave
xchg
cltd
jbe
enter
sti
xchg
jns
leave
stos
inc
lahf
ss
int3
mov
int
cmc
mov
js
lea
ret
cmp
fwait
xor
xorl
cmpsb
lods
int3
xchg
call
inc
iret
jg
sub
cmpsb
stos
sub
add
jnp
adc
push
icebp
sarb
cld
imulb
mov
lods
and
cmp
mov
xor
cli
imul
dec
fsubrs
out
pop
in
jne
jb
xchg
imul
mov
mov
popa
xor
aam
sub
adc
int
or
out
pop
mov
pop
pop
outsl
mov
pop
pop
xchg
push
out
sub
and
imul
mov
jle
rolb
stc
xchg
sub
outsl
dec
outsl
inc
js
fistpll
jns
out
ss
or
cmp
push
in
je
divb
aam
mov
daa
jo
or
mov
adc
rolb
dec
in
pop
push
jns,pt
pop
pop
pop
add
cwtl
dec
aas
aaa
or
scas
mov
in
cmpsb
jno
xor
int
add
xor
ljmp
inc
mov
cmp
adc
pop
push
mov
nop
mulb
cmp
push
cltd
adc
xor
cld
jmp
fdivrs
sar
cmp
xchg
inc
dec
fldcw
cmpsl
add
and
dec
out
pop
enter
sub
xchg
divl
in
push
sbb
add
and
pop
lods
inc
paddsw
pop
pop
dec
jg
xchg
xchg
lods
sub
lods
xchg
shr
hlt
jl
push
mov
sbb
movb
jnp
lahf
fsubr
cmp
jl
aad
mov
adc
push
and
mov
jecxz
test
arpl
fdivs
push
or
cmp
dec
pop
scas
push
xchg
into
jne
push
cmpsb
jne
stc
and
adc
xchg
arpl
mov
in
mov
and
adc
or
mov
xor
or
mov
ret
lahf
fwait
cli
mull
adc
lods
rorb
bound
lock
push
aam
adc
shl
and
cmp
ret
add
adc
mov
sub
daa
cmp
xchg
xlat
inc
adc
rolb
xor
leave
and
mov
movsb
enter
sbb
sbb
retw
push
popa
cs
cld
adc
int
loop
fsubrl
xor
push
dec
pop
loope
add
adc
and
xchg
loopne
test
ds
xchg
icebp
sbb
jl
mov
std
inc
hlt
fcoml
cmpsb
int3
in
movsbl
int3
cmp
ret
out
inc
sub
aad
add
add
mov
dec
fsubl
push
sarl
js
push
jmp
outsb
xor
je
add
mov
rcll
js
add
pop
or
je
aam
mov
aam
adc
leave
cmpsl
inc
push
ja
movsl
and
mov
leave
jns
int3
enter
cmc
test
push
adc
shll
out
mov
ljmp
loope
add
imul
add
gs
sbb
mov
inc
repz
add
mov
xor
in
mov
pop
ss
and
cwtl
push
xchg
jg
or
cwtl
cmpsl
mov
pop
rol
repnz
push
mov
mov
inc
test
or
bound
iret
jle
movl
adc
jne
inc
jo
in
imul
int
es
mov
jnp
pusha
shrb
fcomip
jnp
xchg
mov
pop
in
rorl
inc
xor
imul
add
dec
adc
xor
insl
adc
shl
xor
popf
aas
test
in
into
in
pop
sbb
clc
cmp
leave
push
sub
sarl
psubusw
push
xor
and
ret
sbb
lret
mov
clc
popf
lahf
pop
sbb
mov
stos
sbb
sub
fcmovb
repnz
mov
xchg
xor
ds
xor
lret
adc
xor
cltd
das
lds
mov
into
mov
lcall
mov
add
mov
inc
dec
in
cli
inc
shll
jmp
mov
popf
lock
iret
pop
xor
sbbb
lahf
test
frstor
insb
test
int3
push
loop
mov
loop
pop
in
mov
popf
jns
dec
out
pop
jp
test
lds
ds
jo
int
fwait
mov
clc
mov
push
inc
pop
jp
and
stc
mov
mov
mov
inc
lret
nop
outsl
mov
inc
insl
and
cs
mov
pop
sar
mov
mov
outsb
cwtl
or
xchg
mov
vpinsrq
mov
add
jl
and
push
xchg
mov
or
filds
jl
cmp
push
stc
or
ljmp
fcomps
add
jnp
jp
lods
sub
out
std
sarl
dec
test
sahf
cmp
daa
and
es
xor
adc
sbb
cwtl
ds
mov
jbe
cs
inc
cwtl
leave
mov
sbb
nop
mov
inc
insl
pop
mov
add
push
loop
test
hlt
push
clc
lret
loop,pt
push
sbb
inc
clc
ljmp
scas
imul
mov
out
cltd
xchg
adc
adc
sub
lea
and
xor
and
push
loopne
gs
jnp
pop
xchg
jle
mov
data16
out
adc
int
inc
inc
shr
jmp
notl
or
xchg
rcll
repnz
rcrb
push
les
cmp
mov
push
xchg
add
out
sahf
push
cmp
arpl
xor
insb
dec
mov
lods
add
rcr
jmp
dec
adc
shlb
test
xlat
cltd
pop
jle,pn
jns
xor
mov
movsb
jmp
pushf
adc
xchg
adc
add
xchg
sub
pushf
sub
pop
addr16
movsb
add
pop
cmpsb
imul
shll
movb
movsb
sub
sbb
pushl
scas
xchg
adc
shll
jp
bound
outsl
xlat
inc
ds
call
inc
inc
subb
add
push
bound
cmp
sub
jbe
mov
push
xor
adc
pop
jmp
call
adc
cmc
cmp
sbb
shl
inc
repnz
pop
loop
rorl
pushl
inc
repnz
outsb
mov
jmp
dec
or
mov
cli
push
out
in
aad
inc
mov
mov
sub
cmp
leave
add
std
adc
xchg
add
dec
hlt
enter
ss
ret
mov
std
lock
imul
clc
xchg
pop
mulb
repnz
outsb
rcl
or
insl
inc
sbb
les
add
dec
in
test
sti
cmp
movsb
pop
cmpsl
cli
mov
jecxz
pop
aam
pusha
rclb
shr
fs
cli
fs
mov
mov
insb
ss
lahf
mov
pop
jb
mov
decl
mov
sti
arpl
test
fisubrs
in
xchg
sbbb
jge
cmp
lods
and
cmpl
inc
decl
xchg
inc
test
sbb
jl
sbb
mov
sti
cmpl
add
je
out
add
inc
fldcw
mov
add
ret
adc
or
dec
cmpsb
sets
pop
clc
pop
cmpsb
rol
hlt
or
jno
stos
jge
aas
pop
mov
inc
fbstp
cmp
ja
jnp
es
nop
dec
aaa
or
les
test
icebp
add
inc
dec
iret
xchg
adc
outsb
clc
xor
andb
ret
mov
movsl
adc
cmp
ss
flds
push
les
fbld
movsl
pop
lock
mov
push
sbb
lods
jnp
insb
scas
addb
or
mov
std
mov
jp
mov
pop
mov
out
test
movsl
lods
ret
outsl
es
fistps
outsl
pop
push
mov
mov
xchg
jo
adc
ss
lret
daa
cwtl
dec
and
add
inc
mov
outsl
add
lock
ror
push
or
adc
sbb
test
jmp
ds
mov
jmp
das
xor
xor
int
cld
dec
sub
fistpll
dec
in
sub
sbb
adc
sub
outsl
int
jno
fcom
nop
xor
in
inc
aaa
lret
ljmp
gs
sbb
jmp
in
sbb
test
add
in
sbb
std
dec
pop
inc
addl
aad
cmp
dec
ret
lods
ds
xchg
and
or
out
aaa
mov
or
and
and
push
cmp
push
stos
pop
sbb
or
push
cmpsl
dec
jl
inc
out
dec
std
aad
jb
rol
arpl
repnz
mov
and
mov
mov
pushf
and
lods
mov
dec
iret
adc
sub
sar
pop
daa
push
enter
or
mov
inc
jbe
mov
stc
fistps
cs
jne
lea
jne
xor
int
jno
cld
dec
out
popf
stos
xor
cmpsl
in
fldcw
pop
mov
jmp
xor
bound
rcrl
jg
decb
scas
lea
push
or
mov
or
push
imul
or
mov
mov
out
pop
dec
jbe
dec
lds
aam
adc
xchg
ja
movsb
shll
pop
mov
shr
and
push
pop
jno
inc
push
pop
mov
in
pop
jle
jae
aam
push
into
ds
push
mov
push
adc
dec
xlat
popa
into
sub
std
mov
push
rep
loop
test
pop
scas
sbb
inc
repnz
sub
pop
mov
sub
mov
mov
loop
xchg
fs
mov
jmp
andb
cwtl
adc
testb
adc
ja
fcoms
repnz
in
aas
jmp
push
dec
mov
xchg
push
or
jge
mov
cld
dec
sub
into
mov
leave
jp
adc
inc
and
std
je
or
sub
adc
adc
inc
adc
adcl
or
add
and
outsb
or
ss
or
mov
cmp
cs
ja
fiaddl
test
imul
xchg
dec
insb
aad
or
les
pop
ret
pusha
jae
mulb
dec
loop
inc
cwtl
enter
out
fiadds
out
cmp
or
icebp
insl
bound
cmp
push
insl
scas
popa
in
xor
popa
push
movsl
mov
and
add
dec
ret
push
in
add
out
in
imul
mov
jecxz
test
mov
jp
std
inc
out
push
push
pop
mov
inc
test
xor
shrl
mov
test
push
push
in
aam
xor
fcomps
and
jnp
sub
fcoml
push
push
cmpsl
inc
lods
int
stos
inc
mov
cwtl
or
out
cmpsb
icebp
out
jmp
fwait
ja
ret
dec
iret
adc
jg
pop
and
popf
xchg
pushf
daa
stc
iret
addl
dec
fiaddl
adc
addr16
js
xlat
mov
loopne
int
sbb
lds
pop
insl
sub
push
iret
cmp
loopne
mov
ret
adc
pop
lret
into
out
mov
sbb
lods
fs
addr16
popf
dec
mov
int
movsb
or
test
lret
std
flds
lods
adc
and
xchg
sub
testl
inc
sbb
lods
inc
aam
sub
add
add
gs
leave
mov
scas
adcl
or
mov
push
dec
sbb
outsb
jp
lods
jo
xor
or
jecxz
dec
cmp
sub
js
mov
push
jge
dec
loopne
mov
std
cmp
fwait
imul
mov
jmp
gs
int
rcrb
out
pop
and
jge
xor
push
xor
dec
xchg
lret
jns
pop
das
sahf
aam
ds
jo
adcl
pop
xlat
int
inc
mov
or
fcompl
bound
cs
and
mov
sbb
fstp
push
lods
stc
xchg
cmp
pop
push
jnp
ds
inc
std
aam
adcb
xchg
or
insb
mov
fucomip
jae
loope
add
and
mov
stc
mov
insl
and
and
loopne
push
pop
add
jbe
icebp
cli
iret
sub
ljmp
jl
pop
fs
dec
das
jno
mov
lds
jae
popl
jecxz
xor
dec
dec
or
lods
data16
xor
jge
adc
fidivrs
mov
aaa
and
ret
popl
xchg
push
pop
or
jmp
mov
outsb
push
jl
call
in
sarl
mov
icebp
in
cld
in
jmp
jae
add
vpcmpgtw
lods
idivb
push
dec
mov
scas
xchg
loop
nop
mov
jl
ficoml
xchg
sub
dec
xchg
lret
or
lcall
mov
data16
push
daa
xchg
shlb
mov
xor
jno
jnp
int
movl
clc
dec
daa
inc
lock
loop
dec
xor
pop
inc
pop
js
js
dec
xchg
add
loopne
cmp
orb
push
popf
leave
sbb
cmp
and
mov
inc
cwtl
fdivrs
adcl
xchg
je
jae
hlt
mov
cmpl
jnp
imul
movsl
push
inc
aad
cmpsl
rclb
push
dec
push
cmp
outsb
rcrb
mov
je
js
sbb
in
in
bnd
mov
pop
inc
push
add
pop
in
cld
test
jp
popa
cmpsb
push
stc
dec
outsl
movsb
scas
je
enter
mov
xchg
nop
jg
or
cmp
push
push
rcll
add
out
sbb
out
es
push
out
jl
sbb
gs
mov
adc
lods
mov
stos
insl
mov
insl
pop
push
push
push
fadd
pop
loope
cli
out
or
jmp
aam
mov
dec
dec
xor
into
sub
lret
xchg
call
cli
das
push
fwait
mov
jo
pushl
inc
jns
pop
testb
in
inc
ds
mov
hlt
jg
mov
xchg
sub
mov
cmp
pop
xor
test
xorb
clc
cmpsl
adc
xchg
cmpl
in
out
and
push
xchg
inc
mov
jg
aaa
jns
shlb
jns
repnz
addr16
lret
jecxz
ficoms
fildl
cmp
outsb
jbe
popf
mov
pop
pop
imul
mov
enter
test
push
push
cmp
stos
adc
add
push
sti
xor
cmc
aam
ljmp
mov
imul
pushf
hlt
sub
test
mov
pop
enter
dec
pusha
xchg
mov
sub
jg
adc
jo
mov
popf
sbb
inc
jo
xchg
push
repnz
lea
data16
add
inc
arpl
mov
int3
mov
mov
xlat
ja
and
jp
lcall
popa
inc
xor
push
xchg
sub
sub
xchg
jmp
out
xchg
popf
xchg
add
push
push
and
xchg
xchg
stc
xchg
rcr
adc
or
jne
cmp
imul
sbb
sti
push
push
xchg
ret
push
std
dec
push
out
mov
jae
lock
das
ds
xchg
aad
cmp
das
outsb
popa
mov
out
test
mov
add
nop
es
push
cmp
or
pop
mov
pop
add
and
loop
ret
sub
push
mov
inc
mov
or
cmp
mov
xchg
jmp
in
mov
pop
cmp
mov
adcl
cmpsb
sahf
adc
xchg
aas
inc
mov
xchg
dec
or
jnp
jge
pop
or
add
push
loop
pop
loop
mov
push
mov
sbb
imul
xor
repnz
xor
int3
xor
push
jb
insl
cmpsb
test
xor
or
pop
and
mov
aam
lret
fidivrs
dec
filds
fcoms
test
add
add
movhps
or
push
mov
xchg
cmc
mov
pop
xchg
popf
jno
test
cmp
fisttps
jp
xchg
std
adc
aam
sub
xchg
cmpsb
repnz
push
fstpt
stos
nop
negb
mov
cmpsl
jb
cmp
ds
inc
inc
or
mov
aaa
sbb
jg
int
adc
dec
mov
int
out
add
xchg
xor
roll
testl
cmp
fldcw
and
xchg
in
ja
and
or
adc
dec
jbe
out
xchg
mov
pop
pop
insb
shll
fisttpl
inc
aas
add
idiv
in
push
sub
mov
fcmovnbe
movsl
xchg
mov
out
jecxz
xor
cmp
clc
cmp
leave
les
mov
loop
sbb
jmp
aas
and
repz
sti
xchg
hlt
mov
leave
pop
dec
popf
mov
pop
push
xor
mov
fsubrl
ret
xor
fsubrs
xor
aad
test
pop
adc
cmpsl
jae
sub
in
inc
pop
imul
push
fcompl
push
cmovns
popf
xchg
pop
jle
cwtl
ds
les
pop
add
jecxz
xchg
xor
cs
add
inc
jo
and
cmp
dec
das
in
scas
pop
in
mov
imul
popa
in
jb
movsl
mov
mov
sub
lods
pusha
lcall
fbld
pop
sbb
lahf
mov
mov
mov
insb
jp
sub
je
jae
mov
std
lahf
sub
leave
cmc
mov
jg
mov
loop
inc
lods
push
ljmp
subl
jle
addl
sub
sbb
shlb
and
dec
add
stos
mov
divl
push
ror
mov
mov
out
cli
lds
sub
lods
add
xor
cmpsl
sbb
and
jl
dec
dec
mov
clc
or
cmp
or
jo
std
cmpsb
fldt
xchg
jae
insb
mov
or
jecxz
or
popa
dec
cmpl
add
adc
or
cmp
ds
or
push
je
xchg
int
scas
in
fs
movsb
loope
and
imul
fbstp
call
repz
dec
cli
lods
pop
aad
insl
sbb
bound
mov
in
sub
mov
push
adc
dec
or
cmp
ja
inc
cs
add
into
sbbb
push
adc
aam
cltd
stos
pop
mov
insb
cld
xchg
xchg
pop
out
outsb
xchg
lret
in
fsubr
mulps
dec
jl
aas
aam
je
and
or
mov
cld
dec
cmpsb
mov
xchg
out
rcrl
cwtl
xchg
lods
nop
jns
scas
jmp
cli
rcr
popf
mov
arpl
lods
and
ss
cltd
or
ss
push
fs
fs
pop
daa
in
or
jno
scas
add
out
pop
test
in
pop
cmp
loopne
sub
das
out
pop
cmp
cltd
jnp
clc
pop
scas
adcb
dec
dec
mov
lcall
dec
dec
testl
outsb
roll
je
cs
or
dec
popa
and
fsub
nop
or
icebp
incb
push
jae
mov
inc
or
jne
jo
or
pop
test
std
sbbb
or
testl
mov
imul
divl
loopne
jnp
inc
gs
push
cmp
movsb
frstor
pushf
rcrb
jle
sub
inc
imul
in
mov
lock
cmpsl
pop
bound
arpl
mov
or
iret
mov
imul
mov
jmp
fwait
sbb
hlt
fidivs
outsl
pushf
inc
sub
lods
daa
test
jo
mov
cli
aaa
les
and
add
mov
jge
cli
rcrl
jmp
scas
xchg
fucom
mov
xchg
repnz
ret
sbb
es
rcrb
and
mov
das
push
mov
scas
xor
mov
mov
imul
ret
pop
xchg
adc
out
mov
push
mov
in
stos
ljmp
pop
xchg
aaa
cs
sub
jp
aam
imul
js
scas
repz
bound
aas
inc
pushl
das
scas
outsl
push
into
imull
in
and
xchg
testl
fbstp
shlb
fidivrl
call
loopne
inc
cld
sub
xor
mov
mov
addb
inc
fbstp
imul
xchg
movsl
xor
subl
out
pop
lahf
mov
jmp
push
inc
pusha
inc
jecxz
mov
inc
adc
cmp
out
popa
insb
adc
int3
sub
aas
dec
mov
insb
outsl
ss
add
pop
jp
mov
pop
iret
adc
into
fmull
jmp
push
bound
pop
lcall
mov
insl
xchg
pop
mov
sbb
inc
fisubs
pop
cwtl
and
pop
xchg
adc
fdivrl
pop
bound
push
inc
movsb
out
xorb
pop
test
sbb
out
mov
push
pusha
pusha
movsl
js
sub
push
pop
add
aas
mov
mov
push
add
hlt
imul
dec
sbb
or
int
sbb
aam
sti
mov
aad
movsl
orl
cmp
jno
nop
sub
imulb
mov
pop
gs
mov
add
cmp
lea
add
and
xchg
dec
or
or
fistpll
in
fistps
movsl
add
cltd
add
cmp
pushf
aam
pop
push
dec
scas
loopne
adc
in
loopne
fisttpl
dec
mov
mov
add
inc
mov
out
jns
cmp
sub
imul
ss
das
and
mov
cmpsb
add
hlt
or
jecxz
or
or
mov
jp
xchg
mov
add
jb
pop
ret
mov
test
loopne
push
mov
subb
cs
lcall
aam
lods
dec
inc
push
ja
add
adc
add
pop
leave
in
xor
and
xchg
incl
pop
and
lds
inc
cmpsb
lahf
pop
popa
xchg
in
sbb
cs
cmp
mov
lcall
leave
imul
in
lock
add
clc
fistps
out
add
xor
pop
xor
loopne
mov
addr16
push
lods
dec
and
icebp
and
fdivrp
and
mov
and
int
lahf
imul
rcl
inc
out
push
sub
push
shl
in
popa
push
push
fsubrl
leave
jo
sti
add
mov
xchg
aad
frstor
loopne
call
pop
xor
aas
les
sub
mov
mov
cmp
push
aaa
sub
bound
dec
ss
jge
test
push
jmp
mov
cld
repz
imul
out
arpl
addr16
shll
pop
test
sbb
pop
or
fs
adc
out
movsl
jno
inc
in
mov
je
inc
andb
mull
imul
jmp
jp
mov
fdivs
or
outsl
jl
dec
push
fstps
adc
adc
clc
jle
pop
out
pop
dec
ss
pop
into
push
bound
inc
push
dec
cmp
pusha
adc
push
cmp
bound
shlb
aas
dec
mov
cld
pusha
jne
sub
shr
add
cltd
cs
lret
fsubp
xchg
popf
fldl
dec
mov
lods
sub
mov
jns
aas
call
repz
mov
fs
xchg
or
xor
fiadds
sbb
jmp
nop
out
mov
mov
das
and
add
jge
ljmp
mov
jo
xor
stos
and
and
sbb
add
outsb
fs
xchg
mov
xchg
aad
sbb
xchg
cmp
adc
adc
push
gs
mov
jmp
dec
mov
cmp
lahf
mov
and
jg
sub
mov
scas
lret
add
aaa
push
mov
xor
orb
leave
repz
pmaddwd
les
shl
leave
xchg
in
cmc
aam
jg
insl
popa
fcmove
mov
cli
ds
or
lret
aaa
mov
rcrb
sti
es
cli
and
mov
cmpsb
lods
mov
sbb
mov
hlt
mov
push
add
cmp
cltd
std
pusha
push
ret
jecxz
repz
adc
fdivrs
xchg
push
jne
xchg
loope
jmp
andb
lods
outsb
adc
in
mov
xchg
loope
daa
mov
pop
cmc
xor
fst
cld
mov
mov
das
xchg
mov
jae
ljmp
jmp
mov
xor
insb
pushf
xor
jae
cmpxchg
shll
lods
scas
jb
mov
xchg
sbb
sahf
popa
dec
pop
adc
mov
pop
sub
mov
int
or
dec
jnp
adc
pop
push
adc
sub
pop
add
int
lock
and
andb
push
movsb
outsb
xchg
push
in
jo
fnstcw
pop
rcrl
mov
out
fdivl
jp
test
fstl
cld
fwait
lret
push
int
rolb
mov
bswap
push
cmp
mov
aas
xchg
jnp
pusha
ss
andl
jge
xchg
icebp
adc
push
aad
sbb
pop
pop
out
aad
jl
sbb
and
cmp
add
jnp
fldl
mov
mov
and
cmc
test
or
rolb
dec
jne
sbb
sbb
sub
jo
push
cltd
mov
stos
jne
int
mov
inc
jno
jae
ret
dec
adc
inc
pop
lds
sbb
imul
adc
xchg
inc
sub
imul
fbstp
mov
or
enter
push
hlt
daa
xlat
data16
mov
pop
and
lds
inc
sbb
mov
shrd
lods
int
test
cwtl
dec
loopne
out
push
div
test
ret
arpl
lret
out
int3
testb
aam
fidivrl
sbb
mov
xchg
lea
xor
in
dec
cwtl
inc
fidivs
push
repnz
mov
fidivrs
stos
sti
push
add
jb
jmp
or
cmp
into
jmp
insl
push
fbld
std
lods
add
jl
push
pop
dec
sub
xchg
sbb
fimuls
bound
pop
mov
jns
lods
call
aad
int
jne
dec
dec
jg
cmp
sub
in
push
fcmovne
and
or
pmaxsw
push
pop
lahf
adc
repnz
lcall
icebp
aas
push
out
aad
push
xor
push
xor
out
stc
cmp
push
int
sti
arpl
dec
leave
orb
mov
pop
cmp
xchg
mov
xor
xor
adc
lahf
pushf
cmp
je
out
popa
stc
das
dec
jb
adc
in
out
and
imul
lock
add
js
adc
sub
lahf
and
out
sti
pop
dec
mov
pop
xchg
movsl
ljmp
push
add
add
xchg
divl
shrl
pusha
das
mov
aad
ror
fidivs
fdiv
pop
jge,pt
push
mov
mov
lods
cmc
pop
es
pop
loopne
sub
icebp
scas
int3
mov
stos
cwtl
stos
sti
ss
pop
mov
fsubrp
pop
and
lods
aam
cmpsl
cli
shrb
rcl
xor
jecxz
mov
jbe
sti
adc
xor
fs
out
aam
repnz
mov
enter
data16
mov
fs
mov
dec
mov
out
movups
ja
test
sarl
cmpsl
cltd
sarl
aaa
sub
xchg
inc
out
sub
cmp
dec
jns
push
inc
adc
sub
outsl
add
mov
and
pop
gs
test
mov
jbe
dec
mov
and
dec
mov
popf
mov
into
loopne
sub
lahf
and
imul
jnp
inc
sbb
test
test
push
int
mov
inc
mov
out
mov
sbb
out
xchg
testl
enter
sbb
jnp
pop
je
rcll
cmc
movsl
aam
adc
ss
jne
icebp
clc
popf
mov
xchg
lods
sub
push
and
push
stos
int3
mov
in
out
cmp
jno
lahf
push
jo
xchg
repz
outsl
mov
mov
in
or
adc
jle
dec
mov
sub
cmp
fcoms
or
mov
test
push
gs
mov
movsl
imul
into
mov
sbb
test
push
push
call
in
pop
sub
push
mov
and
or
arpl
decb
imul
pushf
inc
jnp
pop
lret
push
dec
inc
and
xchg
andl
in
cmpsb
in
outsw
and
sub
ja
popa
loope
hlt
mov
enter
test
orl
pop
mov
scas
scas
test
adc
fwait
call
cld
jecxz
mov
or
negb
jmp
xchg
dec
add
mov
dec
dec
dec
adc
dec
jp
lret
shll
fadd
mov
or
dec
or
cmp
push
das
and
mov
testl
mov
and
and
stos
push
jne
repnz
push
inc
and
sbb
mov
add
imul
sub
cmp
push
mov
jl
jle
add
out
mov
lret
or
add
shlb
sbbb
lods
xlat
shll
shll
xor
jb
das
xor
cmc
sbb
out
jle
fsubs
mov
xchg
sbb
pop
and
loop
inc
or
nop
pmullw
fwait
decb
xchg
clc
xor
fsubr
insl
xchg
pop
and
cmp
mov
int
mov
ret
sbb
sbb
sub
jmp
test
pop
inc
mov
flds
inc
lods
lds
out
mov
mov
mov
xor
shll
repz
fbld
ds
ss
xor
mov
in
or
ja
imul
cmc
jecxz
adc
rcl
jp
fstpl
xor
dec
rcl
in
xchg
aam
inc
popl
jecxz
shr
or
adc
cmc
fists
sub
mov
xchg
sbb
pop
ret
adc
jns
cmp
movsl
aad
ret
rorl
insl
mov
lea
mov
popf
inc
cltd
push
inc
sub
mov
leave
cltd
inc
popa
add
into
add
dec
push
or
cwtl
ljmp
jbe
pop
shrb
sbb
pop
hlt
xchg
gs
mov
aas
data16
arpl
out
add
mov
cli
fcomps
jne
pop
mov
xchg
push
pop
imul
adc
fidivrs
sbb
dec
inc
mov
dec
lea
add
inc
push
scas
adc
adc
dec
jns
movsb
xor
lock
mov
aam
call
or
xchg
cli
repnz
fisttpl
out
stos
fstl
push
push
into
sub
push
push
in
sbb
mov
or
xor
lock
hlt
adc
push
sbb
push
push
dec
lahf
mov
xor
adc
in
and
or
test
jge
rorl
jg
mov
jns
popf
jp
dec
decl
lock
mov
icebp
mov
fcmove
aam
das
test
mov
andb
xorl
push
sbb
or
addr16
cs
cld
adc
pop
pop
fstpl
ljmp
xor
loope
pushf
outsl
js
cli
inc
mov
lods
sbb
or
sbb
add
or
test
repnz
add
pop
mov
mov
in
out
xor
fld
out
lss
sub
and
mov
inc
add
xor
sbb
hlt
lods
sub
pop
jno
mov
xchg
fcoml
pushf
lahf
push
mov
es
cmp
stos
dec
push
add
mov
popf
xor
jne
xchg
or
pusha
popf
repz
sub
cli
mov
xor
sti
clc
idivl
lods
es
ds
xchg
cmp
in
movsl
push
ss
push
push
bound
xchg
neg
daa
push
fdivl
jp
mov
jle
jecxz
inc
mov
or
dec
push
repz
es
pop
and
cmp
sbb
test
aam
icebp
jl
dec
mov
pop
mov
test
int3
std
lock
add
jno
iret
lcall
cmc
ja
cs
dec
or
nop
jnp
es
xchg
jmp
es
add
mov
adc
aam
out
and
iret
stos
push
xchg
outsl
sub
cmp
xor
arpl
mov
mov
fwait
jge
push
and
sub
test
xchg
dec
outsl
sub
cli
mov
stos
cmp
loope
repnz
push
daa
pop
aad
mov
ljmp
or
das
cmp
adc
sbb
pop
push
rclb
shll
rcrl
inc
mov
ret
jo
pop
aad
inc
popa
lret
movsb
pop
and
popf
and
popf
xchg
movsl
jno
int
or
adc
sahf
sub
lock
into
cmp
sahf
fstpl
insl
decb
insl
into
and
fld
cld
lods
ja
insb
sub
mov
lds
xor
flds
stc
inc
cmpsl
jns
or
dec
cmp
dec
hlt
out
push
dec
mov
and
loopne
jo
mov
shll
cld
push
daa
outsb
fistpl
jbe
inc
xor
cmp
in
insb
and
lds
data16
enter
sahf
imul
addr16
xchg
pop
stos
xchg
sbb
outsl
aas
lret
stc
neg
inc
fisttpl
add
int
fsts
inc
lods
inc
lods
xchg
pop
movsb
adc
xor
push
pop
int
stos
or
stos
aam
aam
scas
xchg
test
mov
sbb
out
cmpb
push
or
and
in
jp
ljmp
pop
lret
rcl
cmp
sub
roll
cmp
xor
shl
or
xchg
lcall
push
xor
xchg
adc
adc
cltd
jo
rolb
divb
and
push
inc
dec
ss
incl
sub
adc
notl
xchg
push
cmp
inc
test
sbbl
push
es
out
lret
and
test
push
add
repnz
lods
xchg
xchg
test
bound
pop
push
sbb
sub
push
in
xchg
add
mov
xor
shll
repz
push
pop
sub
inc
mov
rorl
xor
xor
jecxz
pop
jo
xchg
out
cwtl
cmp
jecxz
shll
stos
sub
dec
clc
sub
inc
mov
xchg
cmp
test
fs
call
jo
mov
jmp
scas
xor
js
out
xchg
inc
sarl
addr16
dec
icebp
or
xchg
jge
mov
mov
jp
pop
les
xor
or
xor
mov
adc
or
out
xor
sbb
pop
inc
and
push
stc
sbb
hlt
mov
stc
inc
sbb
mov
sub
inc
rcrb
aas
lcall
pop
fs
shl
mov
jne
imul
cmpb
fadds
in
dec
lahf
movsb
stos
push
sbb
mov
fwait
arpl
xchg
sahf
rcrb
cltd
dec
pop
adc
or
xor
das
shrl
bound
cli
mov
scas
dec
in
lcall
add
fstl
sti
stc
mov
scas
and
loop
mov
push
pop
loope
lcall
and
jmp
arpl
mov
xor
and
add
xor
out
clc
frstor
fists
les
xchg
sub
mov
loopne
out
mov
outsb
add
push
cltd
out
stos
jae
cwtl
fisttpl
iret
push
push
jns
xchg
mov
call
repz
cmp
add
push
lret
out
push
fdivl
sbb
popa
fldt
hlt
lea
sub
sbbl
insb
sbb
lock
cli
js
push
into
and
into
jp
cmpsb
lods
xchg
adc
out
xlat
jno
mov
sub
out
jge
dec
into
mov
xchg
mov
loope
aas
mov
and
daa
or
and
in
push
and
jmp
mov
or
mov
int
test
jb
cmc
pop
cmpl
pop
pop
subl
stc
xchg
pushf
pop
adc
sub
stos
jbe
jns
push
int
arpl
pop
xor
mov
push
js
or
clc
adc
push
jnp
movsl
adc
ja
mov
or
repz
or
inc
pusha
add
mov
sbbl
and
dec
mov
pop
add
cwtl
push
add
cmp
pop
mov
inc
xchg
push
or
test
cmpb
outsl
pop
xor
in
in
inc
lds
mov
mov
fistpl
scas
sbb
xchg
test
sub
aad
aas
and
cmp
daa
divl
push
rorl
push
jp
adc
xor
dec
sbb
add
push
lods
pop
sub
fcomps
and
pushf
and
xor
outsb
ss
jno
inc
sub
sti
jp
xchg
adc
push
dec
push
pop
aad
pop
bound
push
inc
negl
loop
or
lcall
jl
stos
stos
push
mov
push
lret
xor
rcll
in
inc
or
push
les
inc
sarb
dec
loope
sub
jnp
std
dec
aas
jl
nop
fs
add
hlt
xchg
fdivrp
fcoms
fimuls
pop
jae
sahf
push
popf
cmc
push
mov
mov
fs
push
sbb
mov
ret
mov
pop
pop
pusha
push
sahf
xor
out
ret
pushf
xor
rol
xor
push
decb
push
filds
jo
lock
test
cld
popa
ficoml
les
movb
mov
pop
mov
lcall
jns
mov
add
icebp
mov
fmul
sbb
jecxz
inc
jns
sbb
push
scas
sarl
pop
mov
jl
pop
pusha
jmp
fdivrs
or
mov
xchg
shl
enter
or
adc
fisttpll
xor
addr16
xor
test
bound
jecxz
sub
jns
insb
or
out
push
enter
and
adc
jbe
mov
add
lahf
sub
lret
mov
push
test
jo
xchg
notb
out
lret
sbb
in
xchg
movsl
mov
push
out
add
cmpsl
sti
jne
nop
sbb
je
cmp
movl
xchg
repz
fadd
stos
test
jbe
cmpl
ret
lock
in
outsb
adc
shrb
in
sbbb
jnp
ffreep
or
push
pusha
mov
or
mov
xchg
enter
nop
mov
ja
inc
rolb
and
xor
add
pusha
xor
mov
or
leave
into
mov
popf
addr16
pop
inc
mov
and
and
or
mov
cld
cmp
scas
in
jno
movsb
icebp
and
fcoms
ja
xchg
aam
nop
xor
out
fisttps
in
xor
inc
mov
cmp
pop
jae
in
lods
dec
repz
iret
jge
add
lods
add
lcall
jne
outsb
mov
jo
iret
inc
push
cmp
or
movsl
out
pop
in
lahf
mov
mov
shlb
in
outsb
ljmp
test
scas
lcall
pop
sub
inc
pop
jg
lea
xlat
aad
das
xor
mov
jecxz
out
mov
xor
pop
mov
jecxz
lods
inc
out
repnz
mov
cmpsl
scas
mov
adc
mov
or
icebp
outsb
xor
out
cwtl
fs
cld
inc
push
sbb
iret
stos
enter
cmp
aam
pop
mov
fiaddl
out
inc
mov
jecxz
mov
mov
outsl
in
test
push
xor
push
mov
sbb
sbb
fildl
rol
jbe
push
cmp
inc
dec
add
pop
mov
dec
xor
cmp
cld
insl
aaa
cli
xchg
push
mov
sub
jmp
hlt
dec
popa
mov
insl
shll
hlt
sbb
mov
push
push
mov
mov
adc
repz
sub
mov
adc
dec
dec
cmp
loop
add
push
movsb
adc
xor
mov
mov
imul
mov
mov
adc
stos
popa
ja
testl
or
std
cmp
or
into
or
sub
xchg
dec
pop
add
cltd
mov
aaa
pop
or
mov
aaa
jle
push
scas
jecxz
sub
lahf
popf
xchg
push
pop
push
xchg
scas
pcmpeqd
cmp
les
xor
jo
ds
add
push
cli
clc
mov
jle
fsubp
data16
icebp
loopne
xor
push
dec
mov
dec
mov
add
mov
xchg
sarl
jb
xchg
jecxz
jne
addb
fdiv
into
movsb
movsb
mov
je
into
sahf
adc
jl
inc
mov
pop
xchg
pushl
sarl
test
cmp
mov
jne
sti
loopne
in
adc
addr16
out
push
lods
lahf
test
faddl
cvtdq2ps
insl
movsl
fimull
and
shl
xchg
or
mov
jb
push
sarb
dec
jne
loopne
fs
fisubl
or
lahf
xchg
pop
dec
fsubrl
xor
mov
xchg
rcr
outsb
in
pop
shl
pusha
jecxz
xchg
inc
mov
cmp
enter
xor
outsb
fscale
adc
insl
sbb
mov
int3
pusha
lea
inc
mov
gs
push
iret
stos
or
insb
sbb
pop
pop
rolb
in
push
fsubl
xor
xlat
mov
dec
leave
loop
cmp
jae
cmp
mov
jecxz
inc
loope
outsb
jns
dec
cmp
in
popf
in
dec
mov
arpl
adc
js
pop
out
add
inc
mov
and
sub
sbb
push
jg
push
aas
pop
and
imul
sub
call
mov
das
ret
or
cmpsb
or
lea
jge
out
mov
inc
mov
pop
adc
jmp
or
dec
mov
call
mov
into
jmp
adc
loop
inc
dec
fs
cli
cs
sub
xchg
add
shrb
testb
mov
mov
notb
mov
and
roll
lahf
lods
xchg
dec
repz
dec
bound
fisubrl
pushf
ds
in
sbb
adc
aas
inc
pushf
xchg
and
or
adc
adc
add
fnstcw
out
push
std
call
push
adc
dec
daa
xorb
loop
insb
pop
cmc
sbbl
testl
aaa
lea
test
jle
lods
pop
mov
call
mov
loopne
sub
xchg
push
movsl
stc
xor
loop
push
sahf
movsb
cltd
and
and
icebp
cli
push
inc
add
cmp
scas
jns
mov
iret
fs
leave
mov
lahf
push
lea
enter
xor
faddl
ficomps
insb
loop
fidivl
mov
push
pop
add
xor
lea
or
sarb
push
xchg
mov
sbbb
repz
pop
push
out
jge
insb
in
in
sbb
sbb
inc
cmp
lods
lret
mov
call
das
js
dec
movsb
xchg
jecxz
push
pop
push
sbb
jo
in
fsubl
out
cld
popf
iret
jle
out
bound
push
scas
ljmp
hlt
jno
adc
loopne
jns
or
adc
dec
fcomi
cmp
fbstp
fs
and
dec
ss
mov
mov
stos
mov
xchg
cmp
pop
fwait
leave
idivl
lahf
std
inc
xchg
push
mov
xchg
mov
mov
clc
cwtl
out
mov
test
jp
xorb
jle
sub
cltd
or
jg
mov
incb
stos
out
or
sbb
jb
sub
adc
ret
addr16
addr16
mov
and
scas
push
mov
test
aaa
jbe
fstpt
fstpl
xor
xor
inc
cli
jg
roll
adc
xchg
icebp
in
scas
pop
mov
adc
adcl
pushf
push
in
cmp
mov
mov
xchg
notb
push
push
and
pop
push
inc
xchg
xor
mov
in
pop
jnp
jle
stc
andl
xor
mov
cmp
jns
push
jne
fbld
add
mov
test
bound
popa
fdivrs
pop
sbb
scas
sti
repz
fmuls
aas
xchg
mov
pop
ret
bnd
cli
std
shrl
test
xchg
dec
mov
cmp
lret
aaa
xchg
aaa
cmp
aas
pop
je
and
mov
sub
xor
push
enter
xchg
ret
popa
loop
mov
sbb
sub
dec
mov
or
ja
cmpsb
rolb
jo
ss
mov
push
fidivl
pop
nop
inc
dec
daa
js
push
dec
push
cmp
sub
pushf
fs
aas
pop
sbb
lcall
or
cmp
arpl
sub
fs
cmp
out
aaa
pop
int
cld
fbld
dec
jbe
loop
ljmp
sub
movsl
cltd
mov
das
xchg
jo
divb
test
int3
mov
cmp
dec
inc
sbb
ja
pop
jmp
imul
lret
cmp
dec
leave
pop
mov
adc
push
cmp
or
push
mov
push
push
movl
push
movsb
fsub
lret
insb
pop
jae
out
dec
xchg
imul
test
imul
lahf
jecxz
dec
pop
pop
into
daa
push
mov
lds
inc
add
loop
jle
jae
lods
dec
cmp
and
outsl
cmp
push
sti
mov
xchg
outsb
pop
pop
notl
cli
clc
popf
jmp
lods
inc
jae
out
dec
enter
cmp
mov
pop
cmpb
xchg
enter
into
icebp
pop
outsb
cld
sbb
aas
jns
cltd
outsl
test
inc
push
or
cs
fsubs
mov
insb
les
sbb
xbegin
cmp
cmp
inc
mov
jg
arpl
loopne
add
movsb
xor
lea
cmp
cmp
fidivs
subl
adc
sbb
xchg
and
or
mov
mov
push
or
scas
and
jno
movsb
jae
mov
loopne
push
xor
aam
xor
sub
out
test
jo
xchg
jb,pt
and
loope
imul
pop
bound
and
data16
sub
sbb
stos
adc
shlb
mov
les
mov
xchg
dec
mov
pop
gs
bound
repnz
pop
fldpi
rorl
aas
sub
xor
mov
in
rcrl
push
vmread
sbb
lock
insl
fstl
je
shlb
lds
enter
stc
mov
push
mov
sahf
and
repnz
push
fsubp
add
pusha
pop
sub
add
lock
aad
inc
xor
cld
pop
in
ss
jae
or
nop
js
pop
clc
lcall
insb
nop
sub
xchg
jge
ret
das
sbb
jmp
in
movsl
pop
cltd
lea
scas
aas
dec
add
jo
rcll
dec
adc
and
ds
mov
ret
mov
sbb
ds
push
int
outsb
jne
jmp
shr
mov
inc
inc
repnz
shll
cmpsl
adc
push
jne
sub
sub
daa
ss
loop
leave
xchg
clc
dec
or
add
std
sbb
mov
fwait
xor
inc
xor
scas
fwait
jmp
mov
adc
int
testb
fimull
or
loopne
inc
cpuid
xor
daa
sub
adc
cwtl
pop
daa
xor
mov
mov
fwait
jne
jae
shlb
inc
outsb
adc
lds
dec
adc
mov
bound
dec
xor
and
test
jnp
mov
fadds
cmp
shr
testb
add
inc
int
push
xor
sbb
add
jo
or
lds
fstpt
add
mov
inc
lods
cmpsb
or
mov
mov
cld
inc
divl
mov
scas
jp
inc
xlat
xchg
leave
out
wrmsr
ret
mov
cli
out
sub
popa
insl
inc
push
lods
addr16
int3
fcmovnu
or
mov
jp
js
push
bound
sbb
sbb
add
adc
jnp
add
cmp
pop
test
inc
out
or
ficoml
popf
outsb
sbb
out
lret
mov
push
dec
out
adc
stc
xchg
cmc
pop
and
enter
mov
repnz
test
jge
inc
int
fnsave
loop
dec
je
push
fistps
test
xchg
jns
cmc
sbb
push
cmpsl
popf
push
sbb
inc
lcall
jo
mov
mov
in
loop
insb
mov
dec
fucomp
xchg
adc
push
mov
pop
xor
jno
sahf
bound
out
in
rcrb
dec
test
push
xor
sbb
sbb
xor
push
sub
jmp
aas
sbb
dec
imul
adc
in
popf
xchg
loop
jecxz
fsubrp
jmp
stos
and
dec
cmp
dec
push
daa
lret
mov
imul
cmpsl
xchg
add
mov
mov
pop
mov
pop
push
mov
scas
popa
loop
mov
pop
dec
cmp
pop
push
dec
adc
mov
adc
fcomp
lea
pop
push
mov
mov
movsl
out
mov
mov
lret
hlt
sub
call
cltd
push
stos
hlt
push
xor
testl
push
mov
stos
pop
es
shll
xchg
je
dec
pusha
shrb
cmp
mov
push
mov
test
jl
or
xlat
mov
lret
jae
addb
lcall
jge
push
movsl
mov
lahf
pop
dec
adc
mov
mov
loopne
stos
insl
push
addb
and
shrb
loope
jbe
sub
xchg
jno
jle
mov
dec
out
addl
or
mov
cwtl
sub
push
popf
arpl
iret
iret
inc
lret
insl
lock
imul
imul
movsl
out
mov
cmp
flds
sbbb
test
cwtl
push
idiv
push
add
pop
cs
dec
cld
mov
add
jp
xchg
iret
push
clc
mov
inc
data16
ds
xor
popa
inc
mov
sahf
jno
sbb
jnp
je
ds
sahf
nop
cmpsb
idivl
fcmovu
loop
dec
fcmovne
push
fs
inc
fdivrl
lods
pop
js
xor
sub
popa
jae
in
mov
or
or
mov
clc
sbb
mov
or
push
push
pop
cmpsb
dec
sbb
lret
sbb
ds
int
jmp
filds
mov
sub
push
lds
push
std
test
xor
or
push
test
pop
inc
push
xchg
pop
fwait
mov
stos
and
test
stc
popf
jl
inc
scas
inc
lds
add
negb
loop
pushf
jae
mov
int3
jbe
sbb
dec
out
jge
cld
mov
cmp
fisubrs
cmc
inc
bound
adc
lahf
cmpl
push
xlat
or
in
jo
push
clc
iret
mov
pop
xlat
mov
movnti
icebp
jbe
add
adc
push
lret
out
inc
inc
sub
pusha
pop
pop
push
repz
fs
mov
add
jno
cld
in
iret
mov
inc
push
cmpsb
cld
aas
test
push
inc
sahf
lret
dec
sub
xchg
xor
or
imul
xchg
pop
fcmovbe
cmpsb
pop
mov
mov
stc
loop
add
mov
ljmp
and
insb
imul
jo
xchg
jbe
les
fs
xor
dec
in
jae
lret
icebp
xchg
inc
mulb
fs
rcll
stos
jl
jbe
aas
push
ja
in
stos
add
jae
fisttps
jl
dec
fidivrs
pop
mov
sbb
sub
dec
aad
jmp
jae
lock
dec
cmc
sub
push
mov
push
stc
pop
bound
lahf
xchg
pop
inc
mov
fsts
shlb
imul
or
adc
mov
js
jle
xchg
std
xor
iret
jno
rcl
cmp
hlt
out
cmp
jecxz
pop
ds
push
in
daa
aaa
cmp
mov
adc
mull
push
pop
jns
jne
fwait
add
push
addb
arpl
push
lods
sub
pop
lds
lods
jae
push
pop
push
xchg
sbb
mov
and
jne
dec
jbe
adc
out
dec
rcll
sub
cltd
jl
xchg
dec
or
dec
out
jnp
iret
mov
xchg
adc
mov
jnp
mov
sahf
lcall
xchg
dec
inc
dec
ret
cli
mov
std
rolb
or
sbb
and
imul
fs
dec
and
std
push
mov
xor
jl
cmpsl
inc
fidivs
das
imul
lret
loop
lret
daa
dec
jl
les
xor
lahf
sar
divl
lcall
and
mov
pop
les
cmp
cwtl
dec
jno
pusha
mov
and
push
adc
jae
mov
inc
sub
lods
loop
pop
push
sub
mov
xchg
repz
jl
and
push
mov
aad
pop
mov
adc
push
pop
test
xchg
mov
sub
push
pushf
push
mov
inc
inc
shrb
sub
push
shlb
xchg
add
aam
mov
mov
sarl
add
pop
lock
ds
cmpsl
loop
popa
jp
fnstenv
insl
jge
ja
orb
mov
cmpsl
push
pop
push
dec
jp
mov
adc
pop
pop
int
popf
ja
je
dec
or
fdivs
addl
sub
xorb
sahf
xlat
mov
ret
and
lcall
outsb
add
push
incb
mov
or
lret
or
dec
pop
push
push
xchg
adc
mov
arpl
inc
sarb
sbb
aad
inc
pop
cmp
adc
sbb
xor
addr16
out
sbb
push
in
insl
or
cmpsb
shl
xor
int
dec
test
pop
xor
pushf
insl
xor
xor
popf
sbbl
push
gs
rol
mov
fdivrl
cld
call
jbe
outsb
test
inc
rcll
jmp
jg
push
popa
and
sub
add
lcall
adc
or
int
out
and
push
mov
call
cmp
jp
lret
mov
xchg
inc
int
jae
jno
mov
das
push
imul
xor
loope
jnp
and
cli
inc
xor
sbb
in
jbe
inc
les
js
xchg
mov
shll
or
lea
add
xchg
fwait
int
je
sbb
and
scas
cmpsl
rep
ret
mov
push
fiaddl
xor
sbb
test
dec
add
and
jl
ficoml
xor
fcomps
loope
push
enter
cmp
nop
repz
stc
xchg
jp
inc
loopne
dec
push
sub
jb
sub
stos
loop
popa
in
inc
xor
mov
inc
xlat
mov
jle
lods
aam
test
out
mov
popf
mov
in
sbb
test
adc
adcb
mov
jo
repnz
cmpsl
dec
ret
clc
mov
cs
fstps
stc
inc
xor
mov
ljmp
gs
lret
in
cmp
inc
fstps
push
cmpsl
pop
pop
enter
aaa
or
adc
xorb
sub
test
add
xor
and
jge
xor
stos
js
push
loope
out
out
inc
insl
and
in
push
fnsave
dec
shrb
push
xor
shll
adc
test
fsts
jl
lds
push
dec
cmp
and
sbb
push
into
cs
jnp
lods
in
inc
mov
adc
and
jno
addr16
lds
add
into
push
sub
mov
and
ljmp
clc
out
mull
inc
imul
aaa
xchg
xor
and
inc
js
dec
jns
mov
push
xlat
in
sub
imul
sub
divb
push
jne
and
orl
push
outsl
pop
leave
fisubs
mov
mov
jno
aam
add
or
call
mov
and
cmp
or
xchg
or
scas
call
xchg
rclb
mov
ss
daa
ja
aaa
divb
jmp
lods
mov
stc
xor
ret
cmc
std
add
jae
sub
adc
xchg
sbb
jg,pn
adc
xchg
dec
xchg
sub
dec
lods
cmc
orb
and
dec
int
mov
cltd
adc
fcomi
pop
arpl
mov
or
cwtl
and
mull
jecxz
ret
loopew
outsl
inc
mov
lods
sub
push
loop
mov
andb
mov
fimull
push
adc
mov
stc
push
push
clc
xchg
jmp
test
imul
or
push
rorb
cwtl
dec
or
rorb
jne
or
cmp
jbe
push
mov
outsb
mov
out
cmp
lret
mov
in
dec
jp
subb
arpl
testb
xchg
nop
setg
aas
repnz
mov
aad
ja
jb
add
mov
or
les
xor
fs
xor
or
mov
add
insl
or
not
shrl
mov
sbb
jmp
lods
inc
jmp
fmuls
push
cltd
rolb
mov
mov
aam
inc
dec
push
dec
imulb
mov
jg
outsb
bound
rolb
aad
cmpsl
movsb
add
adc
jl
andl
call
jb
shl
adc
sub
test
mov
jmp
stos
notl
or
mov
clc
int
mov
lock
negl
cli
test
nop
inc
xchg
xchg
out
dec
and
sarl
nop
jno
inc
dec
fcom
pop
push
push
mov
pcmpgtw
xchg
imulb
pushf
adc
leave
aad
adc
iret
add
xorl
cmc
pop
shlb
or
lret
pop
mov
adc
imul
jl
addl
inc
and
out
pop
pop
or
cmp
push
add
mov
inc
pop
inc
adc
