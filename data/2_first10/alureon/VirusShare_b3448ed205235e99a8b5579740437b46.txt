jge
add
pushf
adc
add
adc
add
adc
add
adc
add
adc
add
add
xor
add
push
adc
add
add
imul
add
add
cwtl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
outsb
adc
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
daa
call
daa
sub
mov
out
fcomip
lcall
sbb
pop
ljmp
scas
dec
inc
pop
pop
mov
add
sarl
test
jge
sbb
jo
push
or
push
aad
repz
mov
imull
in
andl
stos
in
movsb
push
lret
or
mov
jmp
movb
popa
inc
out
lods
mov
jge
jno
mov
or
mov
out
imul
inc
cmp
addr16
inc
ds
fildll
push
add
push
out
popf
shrb
jg
mov
mov
mov
ja
dec
inc
add
mov
lock
shl
testb
mov
inc
and
inc
fld
push
adc
in
mov
ret
push
mov
and
pop
out
jecxz
xchg
pop
pop
in
sub
fldenv
lock
sub
subb
stos
jecxz
mov
pop
and
movsb
sub
iret
js
mov
mov
or
add
mov
mov
cmp
test
stos
mov
or
xchg
push
pusha
stc
jg
cmc
pop
xchg
adc
fwait
mov
push
or
inc
pop
popl
imul
pop
xor
imul
jnp
inc
mov
repnz
xchg
aaa
add
sahf
sub
sub
mov
loop
roll
js
scas
dec
loopne
out
pushl
addr16
test
popf
add
add
gs
das
inc
mov
icebp
push
lahf
cmp
into
mov
sbb
mov
jge
loopne
lods
push
in
in
cltd
aas
push
cli
push
or
loop
in
insb
push
xlat
cwtl
lgs
dec
jnp
dec
loopne
mov
clc
and
mov
mov
movl
xor
dec
sbbl
xlat
lods
mov
inc
mov
dec
cmpsl
daa
cmpsb
push
mov
jle
mov
cs
in
xchg
xchg
sarl
sbb
mov
sbb
shll
or
and
adc
xchg
mov
push
addr16
cmp
data16
sarb
pushf
push
mov
fnsave
cmp
out
jnp
push
imulb
mov
std
in
mov
cmpl
sbb
rcll
xor
add
add
adc
dec
cmc
lds
fistps
dec
insb
out
or
outsb
or
pop
addb
mov
aam
xor
xchg
jge
es
enter
push
cli
call
push
cmp
inc
insl
jge
setnp
loopne
int
xchg
cmp
push
sub
cmp
sub
or
in
push
jns
xchg
in
push
sti
or
dec
stos
out
les
aam
jbe
pop
icebp
jge
addl
ret
popf
stos
ds
xor
inc
push
mov
xchg
shll
push
or
and
imul
mov
jns
jne
repnz
jp
stc
and
push
sahf
int3
aam
push
and
jne
ficoms
sub
leave
lods
adcb
fistl
lods
xor
stos
adc
subb
mov
jno
icebp
pop
sub
fcmovnbe
add
adc
mov
dec
scas
int3
xor
popa
jp
cmovg
adc
push
loopne
or
adc
add
adc
ja
popa
data16
inc
mov
int
mov
fsts
insb
jl
and
cmp
mov
mov
movsb
leave
sub
push
pushf
and
jns
add
iret
lods
pop
jae
ja
das
test
and
movsl
mov
dec
scas
in
xor
push
ljmp
nop
xor
sti
push
jecxz
inc
insb
fwait
shl
das
sahf
jo
comiss
loopne
data16
fstenv
mov
les
aaa
rolb
call
dec
cmp
shr
push
rol
loope
cmp
popf
push
data16
shll
hlt
xor
mov
mov
add
test
loopne
pusha
dec
add
lods
inc
call
js
mov
cmp
cmpb
mov
dec
jle
mov
mov
xchg
leave
or
xchg
fwait
psubw
cmp
mov
popa
pop
add
div
add
sub
mov
push
xchg
loop
add
hlt
fs
iret
push
push
or
xchg
addl
nop
push
lahf
xchg
call
stos
mov
or
js
inc
xchg
subb
or
pop
xchg
jecxz
mov
stc
fwait
repnz
es
lcall
xchg
inc
xor
xor
lret
pop
stc
jl
sub
mov
jle
loopne
mov
mov
push
mov
sub
cltd
aaa
mov
sub
fwait
jp
fwait
pushf
std
lcall
mov
shl
sub
testb
aad
jb
dec
into
mov
xchg
outsb
hlt
lsl
sub
jns
or
hlt
push
adc
mov
fwait
sub
xchg
fsub
negb
mov
lea
in
mov
add
call
inc
inc
call
add
push
mov
call
mov
dec
dec
mov
dec
inc
call
mov
mov
mov
mov
dec
dec
xor
dec
mov
lea
mov
inc
sub
add
call
movswl
add
add
add
dec
call
add
inc
call
sub
inc
inc
lea
mov
lea
mov
add
lea
pop
imul
sub
inc
add
mov
pop
inc
dec
pop
inc
lea
sub
or
pop
add
lea
mov
lea
lea
movzbl
add
dec
pop
dec
mov
pop
or
or
mov
and
add
call
inc
imul
movsbl
dec
ret
and
inc
push
imul
movsbl
push
imul
dec
push
dec
inc
push
dec
mov
push
inc
lea
mov
movzbl
add
push
ret
push
lea
sub
or
mov
xor
imul
mov
push
mov
lea
push
add
call
pop
ret
jmp
add
and
or
mov
movzbl
mov
add
xchg
mov
add
dec
dec
xor
add
lea
sub
inc
inc
inc
sub
dec
jne
and
mov
dec
inc
pop
mov
imul
pop
inc
imul
pop
or
inc
inc
imul
add
dec
sub
mov
dec
add
inc
add
ret
push
mov
mov
add
movzwl
mov
inc
xor
mov
push
push
push
push
add
add
dec
push
mov
inc
or
xor
mov
movzbl
add
inc
sub
mov
imul
push
imul
mov
xor
xor
dec
push
inc
imul
push
dec
sub
pushl
mov
call
dec
add
movswl
inc
dec
dec
mov
inc
mov
pop
ret
jb
sub
xor
lea
inc
mov
inc
lea
mov
lea
dec
inc
lea
dec
mov
dec
mov
dec
add
cmp
jb
dec
mov
movzwl
inc
xor
mov
xor
add
inc
pop
lea
movzwl
test
jbe
and
dec
inc
inc
mov
dec
add
dec
xor
inc
mov
lea
dec
inc
and
inc
mov
mov
mov
mov
lea
add
and
mov
inc
mov
and
mov
movzbl
add
sub
add
imul
and
add
movsbl
mov
dec
imul
mov
add
and
mov
movsbl
mov
mov
dec
dec
sub
dec
mov
add
dec
jne
and
mov
inc
movswl
or
mov
mov
dec
inc
inc
add
mov
xor
movzbl
mov
inc
mov
add
add
lea
mov
mov
mov
test
jbe
lea
movswl
mov
mov
mov
sub
mov
mov
dec
mov
dec
dec
mov
mov
dec
inc
lea
add
mov
sub
sub
dec
and
add
add
mov
add
or
movzbl
mov
dec
add
dec
dec
and
mov
movsbl
mov
lea
mov
movzbl
inc
add
mov
inc
mov
mov
dec
lea
movzbl
mov
add
add
mov
jmp
push
call
mov
xor
inc
dec
xor
mov
mov
inc
dec
dec
inc
dec
dec
xor
sub
lea
dec
imul
shl
sub
add
xor
lea
dec
push
movsbl
mov
mov
call
inc
pop
add
add
inc
lea
imul
lea
mov
mov
cmp
je
call
call
and
iret
and
movzwl
sub
imul
dec
movsbl
mov
lea
dec
inc
movzwl
dec
dec
sub
pop
inc
ret
push
xor
mov
lea
mov
xor
push
mov
mov
push
mov
push
inc
push
inc
xor
push
add
add
inc
xor
inc
call
dec
push
and
push
mov
pop
mov
lea
mov
inc
mov
mov
sub
dec
inc
dec
imul
dec
je
mov
dec
imul
sub
mov
sub
dec
mov
mov
mov
sub
mov
mov
inc
dec
lea
inc
repnz
and
or
add
imul
jmp
mov
movzwl
dec
add
inc
sub
mov
inc
mov
dec
and
inc
jmp
mov
and
dec
mov
pop
pop
ret
push
add
mov
mov
lea
inc
and
add
inc
mov
or
inc
imul
sub
mov
add
dec
inc
add
dec
add
sub
inc
add
inc
mov
imul
mov
pop
ret
sub
dec
mov
lea
imul
mov
add
mov
mov
add
imul
mov
inc
imul
xor
add
sub
mov
mov
mov
inc
sub
imul
sub
inc
imul
sub
cmp
jb
add
push
mov
dec
push
imul
add
push
imul
lea
mov
mov
dec
xor
mov
movzwl
xor
and
dec
xor
inc
add
push
inc
xor
lea
mov
and
xor
mov
inc
lea
movzbl
sub
inc
lea
add
mov
dec
add
add
inc
movzbl
sub
lea
dec
sub
lea
mov
inc
inc
add
mov
mov
mov
inc
add
add
inc
cmp
jmp
xchg
cwtl
test
mov
je
mov
xor
adc
cmp
fcomps
push
in
stc
mov
imul
setns
test
pop
jb
lret
in
fnclex
push
addr16
lods
jp
pop
jl
je
mov
into
push
test
and
and
sub
cmp
call
das
mov
or
or
popa
call
push
lahf
sbb
pop
js
push
ja
sub
xor
mov
jae
jne
add
mov
lock
mov
push
fucomip
mov
pop
push
inc
das
scas
sbb
mov
cmp
xchg
mov
loope
icebp
jge
lcall
mov
push
dec
push
lcall
in
lret
sub
mov
push
fstl
push
cmpsl
sub
cltd
mov
mov
dec
aaa
inc
fwait
mov
aad
jg
test
or
popa
bound
scas
out
push
adc
call
into
ljmp
adc
cld
into
int3
sbbb
cmp
popf
scas
sti
daa
add
insl
lret
popa
jp
push
loopne
leave
fstpt
sbb
adc
lock
dec
idivl
pushf
push
sub
cmp
and
out
stos
mov
shl
xor
cmc
jns
sahf
xchg
xor
sbb
mov
pop
ds
add
add
cmpsl
pop
cs
xchg
ds
pop
cmp
dec
inc
test
fsubs
loope
lea
in
jge
mov
ret
push
sub
ret
jo
dec
mov
add
sti
push
pop
je
pop
jmp
jno
jb
cmc
sbb
rorb
jg
int
push
nop
outsl
lds
mov
or
xchg
mov
sbb
mov
cmp
inc
rol
mov
or
mov
test
sbb
popa
loop
loope
and
test
in
std
in
test
in
mov
pop
icebp
stos
xor
and
clc
imul
add
test
cmpsb
mov
and
mov
cmp
pop
xchg
and
mov
xchg
cmp
sub
push
mov
xor
cmp
add
fldl
movsb
inc
pop
adc
jne
inc
xchg
loop
imul
xchg
xor
mov
pop
sub
test
cltd
fidivl
sbb
inc
inc
fisttps
in
imul
push
pop
jg
push
std
and
adc
int3
xor
push
jp
xchg
jle
fsubrl
jae
sub
arpl
add
into
dec
outsb
and
jo
movsl
mov
popa
xchg
stos
adc
add
xchg
xorl
jg
jl
sbbb
mov
jmp
dec
xor
xlat
outsl
scas
push
push
rcll
ret
ja
jmp
or
adc
fnstsw
je
js
in
jmp
fnstcw
and
div
jecxz
out
into
dec
rcr
stos
pushf
inc
or
sysret
pop
pop
dec
and
mov
ja
repz
cmp
or
push
insl
loop
jae
xchg
push
jmp
cmpsl
and
ret
int3
pop
mov
sbb
lcall
mov
adc
sub
jmp
cltd
jns
sub
pop
loop
pushf
aam
lret
add
xchg
cs
add
pop
ja
or
loope
loopne
xchg
loope
mov
pop
popa
sbb
push
adc
sti
mov
jge
jmp
or
fwait
cmp
loop
mov
in
push
sub
ret
cld
xor
xor
decb
iret
cmp
cld
or
shl
rcll
push
addr16
dec
pop
addb
jns
test
adc
sbb
push
or
mov
aad
push
icebp
test
xor
fwait
loopne
scas
mov
popa
xchg
jnp
and
xor
cmp
sbb
fs
arpl
in
aas
xchg
jne
inc
cmc
cmp
stc
movsl
pushf
test
movsb
dec
dec
test
sbb
rorb
insl
jbe
jbe
ljmp
inc
lahf
mov
test
push
push
jns
xor
dec
fcmovu
loop
mov
out
imul
mov
mov
push
out
mov
or
jmp
mov
push
scas
in
mov
mov
gs
pop
je
xor
out
cltd
fistpl
lods
test
mov
iret
dec
add
rcll
ret
cmp
mov
data16
mov
mov
sahf
je
mov
push
je
mov
sahf
push
clc
xor
daa
add
cmp
adc
pop
fmull
jmp
fdivrl
lret
fwait
cmc
jns
inc
int
dec
scas
in
xchg
int
fiadds
pop
jo
inc
inc
mov
jbe
lret
cs
ret
fdivrs
inc
clc
mov
push
mov
pop
add
xchg
adc
aad
je
dec
lret
jg
cli
adc
stc
push
inc
js
pop
inc
scas
push
sbb
fisttpll
dec
add
dec
mov
arpl
mov
jecxz
jl
inc
loopne
dec
push
jnp
jge
enter
lock
je
shl
jg
sahf
sub
adc
ds
and
arpl
out
adcb
jno
ss
push
xchg
aad
fists
loopne
and
jp
cmpl
ret
cs
std
adc
dec
adc
iret
mov
push
add
push
sub
dec
inc
std
cmp
movsl
fisttpll
cmc
rcr
pop
sti
loop
scas
pop
lret
fisubs
aaa
adc
xchg
push
push
pusha
out
lock
push
enter
adc
sbbb
cmp
mov
cmp
push
xor
inc
and
movsl
daa
imul
and
js
arpl
cmp
dec
aad
jge
lahf
sbb
lea
push
push
leave
dec
and
push
inc
xor
sub
mov
sub
ljmp
jnp
rolb
inc
pop
or
inc
lahf
mov
inc
and
lret
in
adc
xor
inc
xor
xchg
cmpsl
addr16
rclb
adcl
sbb
test
cltd
sub
iret
in
jmp
and
insl
fstps
imul
sarb
clc
mov
jg
test
xchg
add
jecxz
das
dec
sub
cmp
pop
test
xchg
inc
jl
sbb
out
outsb
cmp
fistl
pop
mov
out
push
flds
and
mov
jle
adc
pop
imulb
or
mov
or
or
jnp
in
jnp
cmp
ja
sbb
mov
test
inc
aad
cltd
pop
add
sti
sub
cwtl
movsb
es
and
jmp
ja
das
mov
cltd
dec
insl
xchg
cmp
push
and
scas
mov
arpl
xor
mov
sub
pop
and
mov
xchg
sahf
dec
test
mov
sahf
in
repnz
inc
clc
gs
jl
jns
sub
cmp
je
pop
jne
ljmp
insl
push
stc
push
inc
outsb
adc
xchg
int3
dec
loop
sub
pop
in
subb
sbb
lahf
jg
mov
push
push
roll
dec
mov
shrl
cmp
out
sbb
lret
mov
push
jle
jge
jns
mov
rcll
mov
mov
and
clc
sbb
out
mov
push
das
loop
or
inc
lahf
stos
enter
mov
fldcw
push
insl
and
dec
mov
repnz
fildl
test
inc
mov
xchg
adc
xor
cmp
je
stos
nop
mov
and
dec
fwait
sub
js
loopne
and
sti
movsl
leave
test
fcoml
and
movsl
push
or
loop
cwtl
lock
xchg
mov
fcoml
outsl
push
std
hlt
xor
shrb
int
mov
push
pop
pop
repz
ret
cmp
push
scas
cmp
into
out
mov
inc
inc
jmp
mov
dec
adc
fsubs
push
sbb
ret
sbb
je
or
sbb
jb
push
mov
cld
shll
iret
inc
fldl
loop
sti
xchg
mov
xor
push
out
stos
jecxz
and
out
out
push
xorb
add
fnstcw
ret
pop
add
loopne
into
pop
imul
cld
xchg
add
pop
push
jnp
in
clc
mulps
mov
xlat
loop
push
fmuls
out
push
stos
xchg
mov
addr16
aas
fwait
out
mov
mov
movsl
mov
loop
out
xlat
stos
iret
mov
xor
loope
sub
jp
add
jb
lahf
sub
int3
movsl
push
cmp
cmp
and
or
mov
outsl
pop
cli
mov
addl
push
adc
xchg
inc
and
inc
sub
and
sub
add
mov
adc
sub
mov
lock
fldl
push
insb
dec
add
push
sub
jmp
leave
ljmp
cmpsl
jb
push
cltd
fcomip
add
jmp
cmp
jnp
adc
aad
jge
test
pop
push
in
xlat
adc
adc
and
pop
insl
and
sbb
fld
out
push
jb
inc
mov
mov
mov
jo
aad
cmp
dec
mov
dec
xchg
and
push
in
sub
orl
mov
lea
xchg
icebp
movsl
pop
addr16
ret
cmp
push
mov
pop
fbld
fnstcw
or
lock
ja
mov
loop
rclb
push
test
jl
xlat
dec
push
in
icebp
out
cmp
xor
mov
test
mov
shll
sbb
scas
repz
sbb
mov
iret
int3
aas
or
pop
xor
push
xor
daa
dec
dec
loope
and
int
std
xchg
iret
push
cmpsl
cmpsl
or
lret
mov
xor
mov
jo
inc
pop
add
outsl
push
ror
pop
cld
insl
mov
mov
pop
mov
sbb
adc
dec
cmp
and
mov
push
xor
lahf
push
sub
adc
sbb
iret
add
sar
cmc
lds
fs
add
rolb
sub
mov
push
push
ret
xchg
mov
or
ljmp
aam
cmp
es
js
mov
push
iret
adc
adc
push
repz
or
arpl
cld
call
xchg
cs
es
jl
rolb
in
std
pop
pop
sbb
fimull
lcall
rclb
stos
movsl
adc
cmp
movsl
push
out
je
xchg
pop
jmp
push
iret
fwait
push
jle
loop
sarl
lahf
es
loop
or
xor
add
mov
test
cli
aad
or
inc
rol
roll
and
mov
dec
ss
adc
jecxz
es
test
pop
lods
mov
cmp
clc
mov
fmuls
push
xchg
jno
fs
cmp
inc
sub
xchg
mov
push
js
and
pop
xchg
cltd
sarb
mov
inc
mov
cmp
push
push
loope
hlt
adc
mov
sbb
sub
mov
js
xor
fucomp
imul
sbb
cmp
aad
test
dec
xchg
int3
aas
dec
popf
jecxz
dec
cmp
fmull
rcl
xchg
repnz
bound
ret
aam
shll
cmp
and
out
xorl
je
add
repnz
jg
outsb
adc
outsl
lods
push
sti
test
xchg
mov
cmpsl
sbb
in
mov
mov
jns
lcall
ljmp
cltd
adc
jl
sarl
ja
ljmp
idiv
insb
mov
xchg
cmp
out
leave
jbe
shrb
in
or
js
and
adc
outsl
or
adc
fldl
add
jmp
mov
mov
sub
pop
add
rorl
dec
hlt
lahf
xchg
sbb
push
jg
imul
lea
push
outsl
jns
mov
add
mov
pop
jp
in
andl
jae
pop
pop
movsl
cwtl
les
xor
push
xchg
xor
jbe
or
fwait
mov
mov
jo
sbb
not
lahf
rorl
xor
out
lret
lret
divl
mov
mov
sub
xor
ds
jp,pt
pop
mov
pinsrw
sahf
pop
cmc
jle
sub
push
loope
sbb
ljmp
xchg
rolb
sti
sahf
aad
pop
lahf
in
sub
xor
jecxz
fcomi
adc
bound
fwait
jle
fdiv
lcall
fwait
movsb
enter
sub
mov
dec
in
jle
dec
arpl
mov
cld
ljmp
in
pop
xor
cmp
or
rclb
mov
call
adc
push
xchg
add
sbb
mov
inc
adc
pusha
sbb
mov
iret
mov
inc
stc
jecxz
push
mov
jb
mov
inc
adc
ljmp
inc
js
push
movsl
xor
pop
mov
jge
stos
mov
sbb
jns
mov
sahf
enter
add
loop
cli
lods
jp
add
dec
fidivl
jo
ss
fbld
pop
out
loope
lock
lcall
les
fwait
xchg
cmp
fisubl
lock
pop
pop
adc
fdivrs
add
pop
lods
sub
test
lock
loopne
xchg
shl
test
rol
int3
shl
ficomps
inc
pop
cmp
adc
std
push
push
xor
fldcw
negl
jge
xchg
lret
dec
cmpsl
inc
mov
in
cwtl
push
or
mov
jmp
fsub
pop
xchg
mov
movsb
pop
sbb
add
jl
daa
scas
lcall
jno
fs
cwtl
andl
pop
or
and
ret
hlt
ror
flds
push
imul
lds
mov
sub
adc
add
xchg
jo
andb
adc
adc
inc
push
pop
pop
adc
jae
ljmp
push
add
jne
cmp
push
shrb
out
mov
arpl
pop
out
ret
jae
sbb
cmc
mov
push
jmp
hlt
jnp
std
shrb
jnp
les
dec
cmp
das
arpl
and
enter
fstl
pop
sbb
xchg
ss
js
xchg
push
out
jb
push
je
xor
fwait
outsl
fidivrs
jae
sub
mov
in
mov
cmpsl
push
movsl
push
mov
insl
movsl
insb
push
push
sbb
push
inc
rcrl
mov
int3
inc
dec
mov
jo
rorb
sub
sbb
lahf
das
and
lods
cltd
sub
sub
mov
jb
mov
mov
dec
xchg
adc
mov
mov
mov
push
jecxz
adc
mov
cmpsl
push
into
pusha
sbb
xor
sub
shlb
subl
test
lahf
push
add
out
dec
jecxz
cs
fmull
push
cwtl
jg
dec
or
or
sbb
stos
jl
add
test
jnp
xor
or
cs
mov
adc
push
cmp
iret
xor
shlb
loopne
dec
inc
lcall
cmp
pop
gs
sub
inc
xor
loop
popa
loope
sti
aas
pusha
mov
test
pushl
dec
and
jns
jp
pushf
bound
mov
ret
and
cli
jmp
xchg
aam
fldcw
inc
mov
test
inc
inc
inc
test
sbb
mov
cmp
xchg
push
mov
cmp
sbb
cmp
aad
iret
sbb
dec
xor
idiv
les
pop
cmp
push
test
scas
and
inc
lret
sti
cli
mov
or
jbe
aam
push
iret
add
mov
scas
gs
fs
outsb
jno
daa
pop
test
int3
out
orl
jne
loopne
fsubp
shrb
lds
or
aam
mov
inc
scas
addl
outsl
mov
add
add
js
in
lods
cmp
shlb
adc
aad
mov
adc
decl
jne
imul
or
repz
cmpsl
repz
adc
aas
repz
mov
mov
xlat
ror
out
xchg
aas
popa
mov
push
jo
popf
fisttpl
imul
in
stc
insb
pop
adc
lods
mov
mov
pop
aad
inc
data16
aad
hlt
aaa
xor
sbb
mov
punpckldq
pop
icebp
push
adc
xlat
out
push
xchg
nop
xor
lods
xchg
sbb
gs
les
test
mov
movsb
aad
jne
lret
mov
push
pop
mov
stos
xlat
inc
lock
xor
dec
into
aad
ss
insl
or
inc
scas
xchg
push
imul
dec
xlat
dec
add
mov
lahf
popf
shrb
add
data16
ljmp
fstpl
sar
insl
mov
jns
push
push
dec
cld
jae
outsb
lods
out
out
int
in
mov
or
subl
cmp
push
xchg
pop
xor
xlat
sbb
pop
add
add
cmp
xor
pusha
sbb
push
pop
jl
pop
mov
adc
xor
and
cwtl
in
push
aas
jmp
or
adc
pop
xor
lock
or
fsubrs
fstpt
fadd
xchg
imul
push
mov
inc
and
and
mov
pop
into
mov
and
jns
in
arpl
xchg
and
popl
insb
insl
enter
out
inc
in
mov
mov
pop
adc
cmpb
sbb
aas
dec
sbb
adc
fstpl
mov
out
cmp
sbb
loopne
lds
jbe
out
aad
repz
pop
push
xchg
bnd
stos
xchg
sbbb
insl
gs
pop
sub
ret
push
push
test
ljmp
mov
mov
ja
add
and
jge
je
adc
shrl
mov
out
mov
push
sub
daa
xor
adc
mov
add
push
cltd
mov
sub
push
push
pop
stos
mov
dec
xor
jbe
fisttpll
jl
into
mov
push
and
xchg
cmp
int
test
jp
sub
mov
out
call
daa
push
push
aas
test
ds
ret
mov
lock
cmpsl
insb
repnz
std
imul
jne
dec
cmp
or
xchg
push
in
add
aas
add
xchg
xchg
mov
push
arpl
clc
cmpsl
scas
mov
push
sti
testl
imul
cmp
fwait
inc
ficoms
nop
call
ss
loop
sbb
fsubs
inc
fstl
pop
pop
stos
jg
mov
subb
cltd
or
shll
push
push
inc
imul
or
test
sti
or
cmp
or
popa
movsb
dec
cltd
insl
mov
sub
jb
mov
mov
cltd
and
stos
ret
mov
xchg
fwait
adc
stos
notl
cmc
push
ss
mov
daa
cmp
out
ja
ljmp
sarb
ret
out
mov
std
push
movsb
test
xchg
xchg
rol
jecxz
lcall
push
bound
subl
outsb
loope
add
pushf
icebp
or
push
insb
test
or
sub
fdiv
jl
or
pop
int3
pop
sbb
cmp
lret
es
push
dec
adc
lret
xlat
repz
mov
pop
and
ss
cmp
stos
sbb
test
mov
aaa
mov
dec
mov
pop
sbb
test
dec
or
mov
enter
cli
inc
sub
xor
insl
mov
cmp
xchg
ljmp
dec
aaa
dec
mov
sbb
mov
repnz
mov
outsb
int
das
pop
and
int3
scas
daa
loope
sbb
add
or
mov
add
push
mov
inc
lret
add
call
pop
fstpt
adc
nop
pop
mov
fwait
lahf
sub
mov
sbb
ljmp
lods
lahf
and
stos
icebp
sbb
outsl
xor
scas
cmpsb
inc
xlat
cltd
add
push
sbb
mov
icebp
enter
sub
pop
vaddss
or
ret
popf
mov
sbb
insb
in
loop
dec
cmp
inc
pop
cmpsb
mov
lea
cmpsl
mov
xlat
mov
ss
adc
cmp
fcmovnu
xor
jne
and
inc
movsl
mov
jg
mov
and
pop
ret
lds
dec
dec
sarl
fimuls
movsl
leave
fnsave
push
mov
repz
dec
xchg
push
sbb
ds
push
mov
cli
adc
pop
mov
ja
iret
jo
mov
sub
or
les
js
fdivrs
test
mov
mov
mov
xlat
repz
aas
jno,pn
jecxz
dec
in
inc
loop
pop
enter
divl
aam
into
push
cmp
iret
and
lahf
sub
adc
mov
dec
fnstenv
or
push
ffreep
push
into
fsubl
scas
mov
clc
or
arpl
adc
jmp
aas
leave
fmull
or
popl
ds
and
fwait
repz
or
and
mov
outsb
xchg
test
rcrb
sub
insl
mov
js
or
fwait
aaa
push
scas
mov
mov
outsl
scas
cmp
inc
sti
inc
in
sbb
add
mov
jae
xchg
jge
pushf
mov
xor
mov
aad
ss
mov
dec
outsl
cmp
addr16
into
js
outsb
mov
fsub
call
or
test
into
ss
sub
cmp
sbb
outsb
cmp
and
in
xlat
subl
add
aas
repz
xor
test
fistps
cltd
aaa
mov
mov
mov
jns
repz
push
add
xorl
out
std
sbb
repnz
inc
mov
aad
das
loopne
daa
jmp
test
push
pop
inc
ljmp
xchg
scas
decl
insb
and
push
push
inc
xor
nop
xchg
popa
xchg
shlb
jne
lret
cmpsl
cmp
into
add
push
xchg
pop
pop
jbe
loopne
js
out
xorb
inc
mov
jp
jmp
cmpsl
push
sbb
push
nop
ljmp
xlat
xor
lret
mov
cmpsb
mov
push
jl
push
mov
fld
popf
loope
push
mov
cmc
fdivr
cli
outsb
push
sub
popf
cmp
dec
mov
fldt
mov
mov
and
adc
jg
mov
es
in
sub
cwtl
cltd
je
gs
pop
jmp
jmp
fldl
mov
mov
or
and
enter
das
inc
cwtl
mov
cli
aaa
std
and
inc
cmp
in
dec
jnp
outsl
jmp
or
inc
push
int
sbb
add
add
push
pop
pushf
inc
in
xor
pop
test
movb
movsb
adc
add
pop
jge
stos
flds
adc
shrb
mov
jecxz
enter
les
dec
cmp
in
mov
fildl
jl
add
ljmp
sub
bound
aam
xchg
sbb
lods
push
and
stos
dec
out
xlat
mov
push
or
fsub
or
icebp
in
adc
popf
shlb
push
add
loope
and
add
or
jb
cmp
mov
fbstp
xchg
ficomps
xchg
iret
xor
pop
push
mov
push
xchg
scas
sahf
sub
inc
xor
orl
inc
mov
lods
aad
lock
insl
jl
std
push
les
lret
sub
cld
aas
enter
imul
mov
ret
push
mov
xor
cli
clc
fldcw
sbb
or
imul
icebp
mov
xchg
inc
xlat
cwtl
mov
and
int
stc
mov
push
stos
add
leave
cmp
add
xchg
xor
out
dec
fwait
mov
popf
jge
push
lock
jmp
dec
cmp
xchg
loope
call
subb
dec
imul
aad
sbb
push
adc
insb
adc
sbb
add
bound
aas
jecxz
jp
les
pop
scas
aam
lret
xchg
pushf
les
popf
cmp
push
and
loopne
mov
sbb
aas
scas
and
in
and
xchg
jle
add
xorl
lock
inc
aas
push
sti
notl
jno
mov
arpl
jno
adc
subb
testb
mov
pop
jmp
int3
lods
cwtl
jno
mov
rcll
jno
jl
xchg
in
fists
pop
sub
sti
pop
adc
scas
test
inc
ficompl
xchg
jb
mov
mov
int
push
mov
dec
adc
cltd
mov
xchg
repnz
jp
insl
shr
xor
repz
test
mov
inc
repz
cwtl
pop
inc
dec
stc
push
pop
ja
cmc
ret
lds
stc
fstp
inc
repnz
aam
xor
inc
add
pusha
add
dec
ss
cltd
sub
shr
andl
insl
xchg
cmp
mov
pushf
mov
call
ror
push
int
sub
mov
out
lret
inc
jnp
mov
cmp
dec
rcl
push
insl
loope
pop
mov
xchg
push
out
jg
in
push
scas
jecxz
push
arpl
adc
sbb
fimuls
mov
fwait
in
repz
fstl
push
pop
repnz
xor
popl
jo
xchg
lcall
xchg
push
hlt
mov
jo
mov
xor
sbb
xchg
ljmp
lods
or
cwtl
add
in
aam
std
scas
jo
jecxz
dec
in
sub
cltd
addr16
inc
test
cmc
push
mov
pushf
jne
rcl
add
es
xchg
loopne
sahf
mov
cmp
push
jmp
jecxz
jl
in
ds
cmp
push
mov
aaa
int3
hlt
cmp
outsl
int
xor
ja
stos
rorl
adc
jle
inc
dec
add
and
jnp
gs
mov
movsl
or
add
and
fst
stos
test
popa
clc
ds
inc
fcoml
jne
pop
inc
std
jge
addb
mov
ds
fisttpl
lret
cmp
inc
stos
int3
xor
jbe
daa
and
js
cmp
popf
xor
mov
adc
cmpsl
in
xchg
mov
add
mov
sub
push
push
scas
push
pop
inc
js
pop
aad
repz
in
es
arpl
das
lcall
jbe
push
shlb
iret
adc
les
or
jmp
test
jnp
jp
shrl
push
xchg
push
sbb
mov
ljmp
jae
and
and
aaa
sub
xchg
or
pop
int
sub
nop
adc
pop
rorb
dec
data16
lods
jns
adcl
cmp
mov
mov
pop
aam
movsb
stos
in
aas
xchg
cmp
out
fs
add
dec
inc
cmp
or
scas
push
jnp
push
js
rcr
shl
sbb
je
pop
sbb
ds
fcmovnb
adc
movsl
cmp
xchg
adc
jb
in
aas
bound
jae
pusha
jbe
or
repz
xlat
stos
je
out
pop
fistps
call
xchg
xor
jge
cmpsb
mov
mov
scas
movsl
add
sbb
mov
pop
inc
xlat
imul
es
xlat
xchg
call
jl
dec
xchg
frstor
in
adc
pop
xchg
and
cmp
xor
in
ja
rorb
mov
in
shl
ds
insb
rcl
ret
test
ds
push
sahf
xor
fwait
push
pop
inc
in
aaa
inc
sbb
mov
jne
lods
jns
cmp
or
pop
jno
aaa
sub
sub
mov
cmp
insb
mov
out
xor
xor
mov
in
dec
mov
mov
cwtl
test
pop
adc
cwtl
push
xor
sbb
push
daa
or
pop
cld
pusha
add
loop
les
scas
xlat
xchg
cli
jnp
jbe
mov
das
fisttpl
imul
lea
cmpb
lret
in
mov
inc
sarb
jnp
lret
test
dec
pop
xor
out
inc
or
xchg
xor
jmp
push
and
jno
icebp
dec
sahf
xor
pop
cmc
ret
add
dec
roll
xchg
cmc
push
mov
sbb
iret
sub
and
mov
fwait
bound
xchg
xorb
jg
push
rorb
jge
dec
test
push
dec
xor
and
cld
roll
sub
insl
scas
icebp
or
pop
adc
pushf
sarb
mov
cmp
fdivl
mov
cmpsb
mov
xor
out
dec
pop
sub
cmc
xor
push
jle
stc
mov
jp
adc
fisttpl
xchg
mov
jae
xor
xor
add
insl
rclb
int3
jnp
inc
movsl
sbb
movsb
mov
lcall
jns
popf
push
xlat
lock
stc
lods
sub
sarb
push
lcall
repnz
push
orb
cs
iret
push
enter
loopne
ja
lret
xor
sarl
or
daa
mov
sbbl
loope
nop
mov
or
out
xchg
cld
or
jg
xor
mov
orl
inc
jno
xor
push
xchg
push
insb
and
cmp
xchg
mov
inc
sbb
push
in
aad
mov
loop
insl
loope
inc
or
test
ret
sub
inc
leave
add
filds
push
leave
push
insb
clc
fcomps
sti
xchg
jge
in
sub
add
int3
mov
popa
mov
cwtl
ss
jnp
xor
repnz
or
push
dec
sub
pusha
addr16
mov
sahf
and
fstpl
mov
jecxz
push
push
ja
sbb
adc
enter
test
mov
pop
pusha
sub
stos
int
jmp
addr16
test
popa
jo
and
div
cmp
ljmp
xchg
jecxz
mov
das
or
add
icebp
into
push
data16
xchg
pop
push
mov
dec
sbb
shr
jno
mov
xchg
lcall
faddp
xchg
ret
xchg
dec
hlt
mov
rorb
sub
mov
je
loop
add
popf
mov
in
stos
lcall
inc
jecxz
aaa
in
daa
sbb
addr16
dec
outsb
aaa
sub
sub
mov
and
std
add
sbb
ss
arpl
jg
add
xchg
dec
aam
repz
add
lret
pushf
lea
jge
mov
jecxz
lea
cmpsb
ret
xlat
pop
aas
divl
jne
test
cmp
xor
and
repz
dec
test
dec
inc
mov
xlat
movsl
loope
mov
adc
lcall
lcall
cmc
push
mov
aas
data16
and
ljmp
push
clc
nop
jle
pop
jl
dec
sbb
cmp
cmp
add
aas
popf
es
jo
jp
sbb
mov
lods
and
mov
fcoms
mov
and
and
fcmovbe
aas
dec
jg
push
mov
mov
dec
mov
cmp
imul
shrl
pop
mov
out
inc
and
cmp
fucomi
inc
fcomi
xchg
mov
sub
fsubs
ret
fists
sbb
lock
jle
unpckhps
add
cld
xchg
das
sub
add
jbe
sub
mov
pop
cmp
xor
aaa
cmp
dec
mov
inc
lahf
cmp
cmpsl
repz
mov
int3
frstor
xlat
adc
ret
inc
roll
push
cmp
pop
daa
pop
pushf
cli
xchg
and
jecxz
repz
jecxz
mov
cli
mov
or
out
movsb
sbb
mov
sbbl
push
imul
shrb
and
jo
adc
pop
or
inc
imul
xchg
loopne
pop
cmpsb
lret
arpl
rcll
pushf
push
xor
pop
jnp
mov
sub
lods
cmp
out
cli
movsl
lock
fcoms
subb
jae
mov
sub
sbb
jnp
fstpl
mov
sub
and
pop
out
and
lcall
jge
fucomip
mov
loop
adc
arpl
pusha
jp
jnp
sub
rcrb
adc
insb
lds
mov
nop
pop
add
daa
call
push
push
dec
out
inc
mov
inc
sbb
out
out
cmp
xor
mov
iret
jo
sti
js
fldl
mov
leave
push
push
test
add
mov
inc
bound
dec
sbb
sbbl
cmp
icebp
sbb
inc
popa
jne
jns
jge
or
aad
push
mov
lods
loopne
test
push
inc
cmp
push
adc
loop,pt
rcrl
test
sub
lret
adc
jmp
mov
pusha
mov
inc
or
insl
adc
pop
inc
jno
test
aas
sub
pop
inc
sbb
and
adc
pop
xchg
pop
js
pop
cwtl
dec
stc
sbb
cwtl
outsl
jge
cld
and
xchg
mov
pop
jl
xchg
add
and
add
xor
pop
and
mov
clc
pop
xchg
aam
sbb
lods
jmp
jg
dec
sub
xor
xor
repz
fs
ret
cltd
js
xor
call
or
inc
nop
or
xor
cmp
and
cmp
dec
popf
mov
mov
arpl
jnp
pusha
cmp
cmpsb
stos
out
and
jno
xor
aas
push
sbb
negl
xchg
fwait
jae
int3
xor
andb
mov
gs
fwait
sub
repz
not
xchg
mov
add
fiadds
icebp
sub
mov
xor
adc
or
sub
inc
cmp
cmc
jmp
ss
sub
mov
ds
pusha
fmuls
and
push
xor
adc
sbb
leave
cmp
adc
in
test
pop
pop
push
jmp
sbb
inc
sbb
fdivs
mov
xchg
out
pop
xor
dec
mov
mov
movsl
std
out
insb
inc
cmp
leave
bound
int
arpl
jecxz
stc
sbb
jmp
pop
in
adc
mov
push
aaa
pop
jmp
mov
sub
pop
sub
xor
mov
aad
pushf
hlt
mov
or
mov
lods
int3
jmp
push
mov
push
stc
sbb
or
sub
in
cltd
cmp
lea
mov
pusha
stc
loop
jno
shrl
ror
jno
stos
stos
stos
xor
mov
js
rcll
inc
out
popf
cmp
or
inc
xchg
jp
cs
and
sahf
inc
xor
stc
or
lds
iret
inc
mov
sub
mov
pop
lea
dec
inc
jecxz
xchg
sbb
push
and
xor
dec
jne
push
test
jp
fistps
lods
negl
pop
lcall
ljmp
xor
cltd
add
add
pop
dec
sbbb
sub
cmp
dec
jp
inc
jecxz
lcall
daa
inc
mov
push
pop
and
cltd
jg
prefetch
or
outsb
xchg
dec
dec
adc
fiaddl
test
xor
sbb
inc
aam
dec
aam
or
push
outsl
add
jnp
or
or
add
fstps
loope
jbe
iret
mov
js
fsubrs
push
mov
adc
sub
pop
jb
mov
prefetch
adc
cli
push
and
xchg
dec
mov
loop
cs
cmp
lcall
jbe
dec
inc
dec
sbb
mov
pop
jl
lock
scas
movsl
loop
xchg
sbb
adc
mov
leave
lahf
lret
out
cmp
inc
lret
mov
mov
dec
cmp
lret
mov
or
fadd
mov
mov
pop
out
dec
push
cltd
xor
or
pop
jo
int3
int
jno
adc
pop
jmp
imul
lret
mov
fstps
ret
jge
ss
push
and
xchg
jecxz
aas
mov
cmpsl
and
mov
sarb
inc
push
inc
sbb
mov
roll
in
mov
inc
imul
outsl
scas
mul
or
adc
shll
repnz
mov
sbb
call
mov
js
daa
adc
dec
popa
divl
lea
cmp
push
or
aad
xchg
mov
or
loop
imul
int
jmp
mov
aaa
mov
ljmp
push
dec
mov
outsb
dec
sub
aaa
out
jecxz
lock
sbb
sbb
mov
pusha
divl
ss
sbb
cld
sub
lret
sub
outsb
aad
sub
xchg
pusha
je
dec
sar
pop
ds
aaa
int
mov
popf
neg
inc
mov
cmp
dec
pop
and
shll
mov
push
das
sbb
and
sbb
sar
rcrb
cmp
jmp
jne
xor
pop
jmp
aam
mov
xor
inc
cmpsl
iret
adc
add
daa
arpl
xchg
arpl
iret
inc
in
and
push
sbb
in
pop
mov
fcomip
cmp
rclb
xchg
sarl
bnd
push
setle
push
mov
mov
repnz
ret
aas
aaa
rclb
sub
cltd
aad
outsb
arpl
xor
cs
arpl
inc
scas
inc
pop
cmp
fildl
xchg
in
sbb
lock
testb
xchg
and
sbb
sahf
adc
pop
movsl
sbb
adc
out
mov
scas
mov
pusha
adc
daa
and
push
enter
sbb
add
stc
pushw
jmp
adc
xchg
iret
pop
mov
xchg
std
addl
test
in
ret
sti
pop
xor
and
or
test
mov
or
repz
bound
pop
js
mov
test
divb
loop
xor
xor
and
int3
sbb
je
addr16
shll
adc
and
or
inc
aaa
mov
sub
xlat
or
andl
mov
jno
lret
ja
jecxz
cmpb
mov
fdivrs
pop
fildll
repz
cmp
xchg
cmpsb
fsubl
mov
or
adc
fwait
idivb
mov
add
ret
lea
adc
sti
repz
dec
xchg
inc
xchg
dec
shl
sbb
jbe
sbb
scas
lea
cmp
rcll
pop
dec
cld
out
mov
clc
mov
call
xchg
xchg
inc
imull
mov
adc
push
cmp
arpl
vmwrite
pop
cli
arpl
or
sti
rorb
or
mov
cmc
stos
popa
cwtl
ja
or
sbb
sub
ja
fbld
outsb
sbb
mov
xchg
mov
decb
ljmp
sbb
lret
daa
push
decb
sbb
in
and
repnz
xchg
xlat
iret
fldl
adc
mov
out
lcall
aam
int3
cli
clc
pushf
enter
cltd
and
insb
push
divl
std
inc
sub
add
mov
sahf
mov
push
cmc
or
sub
ret
xor
lods
out
fcmovne
stc
add
sbb
loop
cmp
push
jae
arpl
xchg
inc
int3
mov
xor
std
fdivrs
inc
fsubrs
daa
sub
mull
loopne
data16
push
sbb
pusha
adc
cmp
sbb
out
shrl
dec
rolb
nop
sahf
insb
push
push
xor
insl
stos
cltd
jo
push
jecxz
sub
jno
dec
insb
inc
int
dec
cmp
mov
cmp
out
xchg
into
fidivl
push
insl
and
ss
lea
dec
jbe
pop
and
js
sub
adc
imul
sub
sahf
aam
mov
adc
ret
in
and
repnz
pop
and
outsl
xchg
adc
cmp
pop
jbe
inc
mov
stos
inc
jg
sub
jb
ss
adc
inc
out
lret
adc
xchg
push
movsb
int3
jmp
es
ljmp
inc
hlt
xchg
jb
xchg
pop
loop
lcall
clc
mov
lcall
cld
jecxz
aas
push
inc
mov
in
xchg
shll
xor
leave
dec
ret
in
adc
xor
push
addr16
jne
jge
inc
lods
push
rcr
and
cmp
mov
leave
sbb
xchg
dec
sarl
notl
loop
xchg
xor
popf
cld
add
lahf
mov
out
lods
rcr
mov
and
jmp
or
stos
cmp
cwtl
lods
lods
cmpsl
adc
notl
wbinvd
ja
pop
mov
push
pop
cmc
lock
adc
in
push
xor
and
daa
lods
push
mov
xor
scas
imulb
mov
mov
fmul
pop
ret
xchg
std
shlb
jo
pop
mov
mov
outsl
std
fisubrs
cmc
andl
dec
icebp
mov
push
test
adc
andb
hlt
cltd
cmc
dec
sti
in
stc
cld
sbb
std
bound
jae
and
jmp
shl
cmp
push
mov
je
mov
jno
adc
and
pop
jnp
inc
jecxz
clc
sub
das
es
aad
jb
sub
mov
sbb
cli
pushf
jb
jbe
cltd
test
jp
xchg
fistps
sbb
ja
out
xor
inc
mov
push
movsb
sbb
mov
cltd
mov
push
jg
dec
xor
outsb
mov
in
sub
ds
ljmp
scas
stc
jmp
sub
shrb
negb
xchg
imul
pop
mov
xorl
adc
jno
pop
mov
mov
push
add
xor
adc
je
sbb
lods
movsb
clc
lcall
test
jno
stc
mov
inc
ret
out
lea
bound
adc
mov
mov
in
mov
arpl
sti
jo
stos
sbb
push
in
sbb
ret
lock
lahf
movsb
ror
stos
jns
fmul
jl
adc
and
sbb
outsb
sbb
pop
dec
test
sub
xor
call
je
scas
xorb
cmpsl
adc
xchg
cmp
pop
pop
movsl
hlt
add
sbb
push
or
xor
arpl
jmp
bound
mov
cmpsb
and
sarl
fidivrl
fsts
out
mov
fwait
int
ret
sbb
aad
in
fstl
push
push
sbb
lods
out
imul
mov
fwait
jl
adc
jb
pop
ja
ret
jno
jp
cmpsb
fwait
push
daa
data16
inc
test
add
movsl
dec
push
jle
psraw
add
lods
mov
xor
aas
das
out
cmp
xor
add
es
push
xchg
or
stc
lret
xchg
cltd
mov
adc
cld
and
add
pusha
rcll
dec
int3
lahf
out
and
shll
mov
rorb
xchg
mov
add
addr16
mov
das
cmc
and
scas
sub
aam
mov
xor
repnz
mov
sub
aas
sbb
xor
add
imul
lds
repz
adc
mov
scas
cltd
cwtl
lcall
fs
push
fbld
cmp
cwtl
das
int
out
cwtl
dec
xchg
pop
outsl
movsl
pop
mov
lahf
adc
mov
in
jp
mov
sub
repnz
jmp
jbe
loopne
out
lock
in
cld
push
fsubs
movsb
popf
ret
cmpsl
and
arpl
int3
rol
subb
ja
xchg
addb
sbb
aas
lret
dec
testl
clc
adc
dec
sub
push
mov
mov
add
orb
mov
jle
sbb
lahf
adc
lds
lret
lret
xor
dec
sub
pop
mov
sahf
mov
or
push
xor
out
pop
mov
cmp
mov
jmp
push
fldcw
pop
fdivrl
cmp
push
pop
mov
dec
add
rolb
push
xor
insb
scas
inc
xlat
loopne
pusha
inc
dec
adc
push
into
push
cmp
mov
cmp
dec
fdivl
fldl
dec
ficoms
jmp
bound
out
outsl
ss
sahf
add
adc
cmpb
inc
lods
sub
add
out
popf
xor
rcrb
xchg
push
mov
mov
lret
xor
xchg
add
popa
loope
xchg
lret
in
mov
xor
insl
aaa
dec
xor
adc
lods
sbb
orl
sub
jbe
sub
pop
cmp
aad
roll
sbb
jne
xchg
pop
test
sahf
push
cmp
cmpsl
jmp
jp
sub
lods
loop
in
inc
push
mov
jno
mov
cs
int
xor
je
enter
fcomp
lret
sahf
test
jl
nop
int3
jg
sbb
test
hlt
or
sbb
fnstenv
xor
aaa
mov
pop
nop
int
mov
xchg
inc
pop
cltd
in
push
lret
insb
scas
repz
inc
cmp
mov
mov
push
sbb
add
loopne
push
add
cmp
xchg
cmp
lds
xchg
pushf
scas
hlt
jnp
and
add
mov
pop
mov
aaa
push
clc
pop
jmp
adc
xor
into
push
nop
stc
lds
sub
sti
mov
jae
push
xor
js
pop
pop
xchg
insl
dec
in
adc
fisttps
popa
mov
jp
push
push
sub
mov
out
mov
add
leave
mov
pop
xor
enter
test
jae
cli
ret
shl
shrl
push
sbb
shr
dec
imul
adc
ror
test
lahf
test
jbe
sbb
leave
and
xchg
iret
or
xchg
sub
pop
push
test
inc
mov
push
retw
loope
mov
fmul
and
in
iret
aad
mov
xor
in
sbb
inc
ret
cmp
scas
cltd
jp
rcr
ss
pop
dec
sbb
cwtl
lret
jns
int
push
jo
sbb
sti
addr16
pop
jecxz
push
jbe
jle
enter
push
fs
stc
cs
push
mov
mov
mov
outsb
mov
loope
std
ret
mov
dec
push
out
and
cmp
mov
xorb
cmp
mov
mov
ficoml
cli
sbb
je
mov
loop
leave
cld
das
lahf
xor
bound
mov
lds
gs
jno
mov
adc
xor
mov
mov
jo
push
mov
adc
push
dec
cmp
mov
push
and
shlb
cmpl
dec
lret
imul
push
repnz
in
ret
das
ljmp
jecxz
cmpsb
pop
shll
lcall
jns
pop
fs
aas
mov
faddl
and
int3
lahf
inc
add
sbb
lea
adc
scas
inc
or
cmpsb
mov
bound
arpl
jmp
pop
cmp
pop
jb
dec
movsb
js
xor
push
gs
cmpsb
ds
xor
std
or
push
xor
xor
ja
xchg
xor
adc
lahf
add
add
add
sbb
add
and
add
arpl
adc
cmp
add
add
jb
add
jns
imul
xor
fisubs
call
rcrb
ret
push
dec
xchg
data16
push
dec
inc
cmp
xchg
les
mov
stc
ljmp
repz
add
cs
rcrl
sbb
testb
add
mov
pop
aas
je
xchg
sbb
loop
mov
mov
mov
fstp
inc
cmp
loope
inc
rclb
mov
mov
std
or
sti
mov
out
int
mov
jnp
and
rcrb
inc
pop
xor
dec
cmp
push
xchg
leave
dec
sub
xlat
inc
add
and
cmpsb
and
adc
ja
fisubrs
push
ret
out
imul
pop
or
pop
push
outsb
cmp
mov
loopne
jge
inc
test
lret
rol
jae
fcompl
mov
inc
mov
cmc
fpatan
cwtl
icebp
add
mov
push
lea
pop
mov
dec
sbb
adcl
sbb
inc
cmp
jp
add
and
cli
icebp
add
lea
mov
fisttps
adc
xchg
mov
adc
sub
xor
in
lcall
push
xchg
out
xlat
sbb
and
jg
add
jo
sti
sub
or
jo
mov
jb
mov
into
jns
mov
and
push
fbstp
movsl
mov
stos
pushf
pop
pushf
mov
or
es
test
or
inc
xchg
and
shll
icebp
push
add
notb
jg
mov
pop
mov
int3
mov
dec
out
sti
out
imul
inc
lret
mov
add
roll
xchg
push
lea
mov
ret
sbb
push
stos
push
ret
int
int
aas
lods
fidivl
lret
pusha
and
test
add
pop
xor
mov
pop
js
jge
pop
pop
mov
mov
rclb
out
mov
mov
repnz
adc
sub
xchg
pop
xchg
cmp
lods
xchg
mov
mov
dec
sub
xor
test
mov
mov
cmc
lock
sbb
loop
adc
dec
loopne
jp
loope
cmp
shlb
int
push
mov
cmp
push
aam
add
jle
in
mov
fistps
mov
and
das
lods
cmp
in
ss
enter
cmp
daa
xlat
xor
mov
out
sub
insb
mov
mov
jns
cmp
scas
cwtl
pop
test
ds
push
xor
dec
out
jae
ret
sbb
and
mov
aad
inc
sbb
pushf
push
cmpsl
fwait
pop
mov
mov
and
add
scas
push
test
jns
sub
pusha
lahf
aaa
dec
cli
or
clc
movb
or
adc
lods
fs
mul
mov
fsts
iret
push
mov
scas
out
mov
sbbl
push
jno
inc
mov
xchg
ror
push
xor
imul
mov
js
or
pop
pop
jo
insl
cmc
jnp
xchg
sbb
stos
and
mov
mov
out
and
pop
add
push
jmp
xchg
fs
xor
fists
iret
push
sub
cs
push
fimuls
movsl
dec
push
push
fadd
out
mov
mov
rcrl
cmp
lods
cmpsl
scas
push
lods
push
cmp
mov
repnz
xor
inc
push
hlt
mov
jnp
mov
scas
hlt
push
jae
aaa
in
lock
int3
pop
pop
pushf
sub
push
or
cmc
iret
mov
scas
out
sbb
sub
nop
aad
sti
lret
sbb
add
sbb
fcompl
adc
jl
jne
sub
adcb
sti
pop
lret
jno
jmp
fnstcw
iret
inc
mov
fnstsw
iret
mov
cmpsb
or
dec
and
xchg
iret
xchg
adc
cmp
pop
xor
xchg
sbb
enter
cmp
sbb
inc
hlt
int
cmpb
inc
xchg
mov
mov
and
shrd
pushf
fwait
sahf
ss
xor
cmp
push
cli
dec
ret
xorb
adc
or
cld
jno
adc
scas
fistpl
ficoml
dec
sub
out
aam
gs
adc
push
repz
mov
jl
jns
sub
pop
inc
sbb
mov
test
std
sub
cs
push
subb
pop
and
pop
push
or
mov
add
xor
push
test
xchg
pop
es
fistl
mov
sub
pop
nop
fcmovbe
daa
dec
dec
mov
or
push
fisubrs
icebp
lahf
pop
aam
inc
test
sar
jle
sub
aam
push
pusha
fidivrl
das
sbb
out
loopne
ljmp
stc
fiaddl
mov
or
cltd
js
popl
inc
lcall
and
cmp
mov
pop
fmuls
cmpsb
inc
jl
sbb
mov
rcrl
mov
or
addr16
push
xchg
push
add
inc
sub
inc
or
xchg
popa
leave
xlat
pop
imul
add
repz
mov
mov
cmpsb
roll
pop
or
ret
add
mov
in
mov
and
jb
xchg
cmp
gs
xchg
out
dec
jg
fs
imulb
movsb
cs
testl
arpl
test
movsl
adc
in
push
test
rclb
test
dec
iret
pop
push
lods
xor
les
enter
push
or
ljmp
ficomps
sbb
jecxz
pop
mov
lret
rclb
popf
cmpb
and
rcrl
loopne
scas
jecxz
mov
add
out
cmp
jne
fcmovu
leave
cs
ja
cli
movl
js
in
xchg
push
popa
rorl
inc
xor
sbb
mov
and
shll
je
fisttpll
imul
shll
mov
jo
push
shrb
pop
sub
add
cmp
pop
cmpsl
xchg
lea
jmp
pop
adc
lock
xor
cmp
mov
mov
pop
and
mov
add
enter
sbb
cmpsb
or
adc
mov
pop
inc
mov
test
in
sar
mov
rcrl
sbb
out
mov
out
sahf
stc
cli
sub
and
icebp
mov
sub
shll
jnp
ss
fcmovnu
mov
jne
xchg
mov
rcr
push
adc
sub
lock
icebp
adc
inc
ret
cs
lcall
ss
sbbl
aad
mov
inc
loope,pn
push
outsl
jge
fwait
roll
not
sub
rcrb
jle
cwtl
cwtl
mov
add
mov
pop
rclb
movsb
lret
mov
dec
jl
ljmp
das
cmpsb
or
push
aaa
fnstenv
inc
sbb
stc
sub
shrl
loop
cmp
or
cmp
movl
ljmp
in
cli
aas
hlt
cmp
int3
hlt
lcall
gs
push
ret
push
jb
sub
jecxz
int
cmc
stos
jp
sbb
dec
mov
or
and
cs
and
mov
mov
xchg
fdivl
sar
out
mov
mov
and
sub
sbb
and
mov
xchg
dec
jp
insb
idivb
in
imul
jns
mov
in
sahf
push
xchg
dec
xchg
in
push
xlat
mov
and
jb
stos
pushf
sahf
dec
scas
push
or
fisubl
fwait
lods
lret
mov
stc
scas
mov
ljmp
outsl
add
add
inc
push
fadd
mov
push
shrb
sub
cltd
dec
mov
cmp
incl
xchg
pusha
shr
nop
cmp
mov
cmp
xlat
xlat
mov
jae
test
stc
push
and
cmp
adc
or
and
push
and
add
sbb
out
stos
pop
hlt
cmpb
adc
inc
ficoms
out
popf
xchg
idiv
sbb
daa
inc
popf
inc
test
mov
in
mov
jns
mov
fiaddl
inc
jbe
or
aaa
sbb
negb
jmp
sbb
lret
jl
inc
pop
xor
xor
aam
hlt
pop
mov
es
and
mov
rcrl
stos
inc
jle
sub
mov
mov
mov
ljmp
movsl
pop
xchg
jp
rcrb
adc
rcll
hlt
add
mov
fwait
loope
sub
jbe
xchg
fwait
lret
push
push
dec
fildl
cmp
mov
das
sbb
cli
fisubl
int3
aam
adc
inc
push
imulb
lods
sahf
lea
adc
jmp
mov
dec
jbe
or
fwait
mov
dec
movsb
cmp
xchg
jle
or
pavgw
imul
movb
add
fs
sarb
int3
pop
sub
stc
or
out
into
xor
daa
push
fcomps
daa
sbbb
dec
sub
mov
rcrb
or
sarb
in
jae
inc
push
cmp
lcall
add
xor
sub
pop
and
mov
pop
popa
jbe
ljmp
push
imul
movsb
xchg
scas
jb
lahf
mov
icebp
aam
filds
pop
xor
push
and
data16
jge
aad
daa
nop
jp
fistpl
or
imul
xorb
mov
cmp
sbb
movsl
pop
lea
sub
nop
mov
popa
jp
inc
jge
sub
out
call
repz
inc
stos
out
fisubrs
or
ret
add
lahf
push
add
call
mov
inc
dec
sbb
jb
adc
inc
push
mov
xlat
add
jns
out
aas
enter
push
adc
and
push
ret
add
xchg
call
mov
push
dec
vcomisd
xchg
jns
fildll
xlat
xchg
shll
cmp
fbld
pop
std
aad
bound
lods
push
pop
push
xor
pop
or
pop
sub
push
in
mov
sbb
or
lahf
andl
fidivs
mov
adc
fcmovnu
sub
lods
js
ret
jno
cmc
lahf
xor
pop
fwait
push
jne
pushf
cli
mov
nop
outsl
cmp
or
cmpsb
lret
lahf
dec
subl
cmp
mov
or
mov
repnz
cwtl
fsubl
aad
pop
add
das
add
cs
in
aam
push
dec
insb
xchg
cltd
call
enter
iret
js
ret
xorb
adc
int3
jmp
movsl
pop
sub
or
in
stos
in
repnz
fcmovne
dec
mov
aaa
cwtl
cs
adc
mov
mov
push
fsubl
inc
testb
outsl
enter
jecxz
out
mov
ror
ret
xchg
push
inc
out
daa
jge
jecxz
xchg
jo
adc
out
add
adc
lds
stos
jo
jl
cli
in
jmp
push
in
mov
mov
dec
in
or
push
push
movsb
ds
shll
rorl
das
jg
push
dec
jecxz
clc
out
je
ja
outsl
and
jge
cwtl
add
push
jp
es
pop
ret
dec
fs
sbb
lret
mov
clc
loopne
ret
sub
ja
shll
popa
inc
or
xchg
std
scas
mov
mov
mov
out
out
push
lods
or
orl
jg
sahf
int
ret
adc
inc
ja
js
mov
adc
fwait
aaa
notb
loop
mov
iret
shl
out
je
mov
dec
pop
cmp
jo
leave
lock
repz
mov
rorl
mov
icebp
mov
pop
rclb
or
mov
repz
xchg
call
mov
stos
adc
inc
mov
cmp
sub
lret
mov
scas
inc
mov
jmp
adc
jo
jbe
adc
xor
mov
dec
fsubrs
cmp
jg
xor
jae
fildll
push
push
adc
push
loope
lock
jp
and
in
push
push
mov
dec
loopne
lea
shlb
push
xchg
ss
popa
dec
mov
scas
push
sub
pminub
imull
movsb
out
lock
shll
je
pop
mov
iret
shrl
roll
pusha
aas
or
push
dec
push
cmpsb
leave
sub
xchg
fisttps
das
stos
bswap
mov
jmp
dec
rolb
in
das
in
push
push
mov
mov
sahf
cld
fidivrs
mov
or
jbe
cmp
js
pop
hlt
dec
movsl
data16
push
dec
or
xor
or
stos
out
add
std
mov
sbb
ds
lods
into
insb
iret
call
xchg
cmp
ds
push
fwait
shlb
xor
cs
mov
cmp
or
cltd
adc
xlat
in
xchg
pop
sub
sub
sti
xor
shlb
aad
and
push
pop
scas
jle
loope
sub
jecxz
jle,pt
inc
ds
add
mov
in
test
mov
shl
pop
push
sub
stc
out
imul
sbb
negl
enter
pop
movsl
bound
lock
or
xor
jecxz
xlat
dec
or
lods
xor
lds
jne
mov
fisubl
sbb
adc
sbb
jb
push
in
out
pop
mov
js
mov
pop
inc
xchg
push
test
cs
cmp
and
mov
stc
sub
mov
out
jle
sub
mov
pop
enter
mov
out
pop
push
sbb
fwait
push
dec
push
inc
mov
cmp
int
and
shrb
or
mov
xchg
in
xchg
sub
aas
cmp
lock
shll
push
jnp
mov
dec
pop
stos
xor
jae
dec
aad
pop
data16
mov
cs
mov
add
movb
roll
push
xchg
or
js
int
mov
xchg
insb
add
mov
icebp
sarl
jns
pop
insl
jge
ficompl
pop
gs
adc
push
aad
scas
jge
cs
mov
add
aas
cli
sbb
cmp
push
mov
cmc
scas
orb
dec
inc
movsl
adc
out
push
aas
imul
xor
inc
enter
cwtl
inc
aam
jle
fwait
scas
push
xlat
shl
fxch
js
dec
test
inc
cwtl
insl
xorb
call
popa
jno
test
frstor
lods
icebp
imul
imul
mov
es
scas
inc
ds
push
pop
loope
sub
mov
sahf
mov
mov
push
fisttpl
add
or
mov
dec
hlt
scas
mov
js
lahf
out
andb
ret
testl
ret
sti
push
dec
popa
call
mov
xchg
std
mov
and
xlat
stc
mov
jle
sub
pop
movsb
imul
xchg
adc
shrl
push
sub
adc
out
jno
xor
mov
sbb
std
je
and
clc
repz
insb
adcl
inc
sbb
pushf
xchg
test
inc
int
pop
scas
sbb
adc
jecxz
lahf
in
and
push
cmp
shl
mov
lock
shrl
ljmp
ficoml
xor
popf
fwait
sbb
jl
inc
pop
xor
ret
imul
cld
sarl
pop
push
lcall
lods
pop
daa
jnp
jno
stos
mov
out
out
pop
sbb
push
cmp
pop
insl
mov
cld
jb
sahf
mov
sbb
mov
xchg
push
jle
mov
js
test
fwait
and
sub
push
leave
and
pop
ja
cmp
out
add
inc
sub
lcall
adc
mov
les
ljmp
mov
fisubl
pop
sub
mov
gs
mov
push
dec
sbb
or
test
pusha
fcmovbe
js
xorb
or
push
mov
mov
and
mov
jp
pop
sbb
pop
inc
sbb
dec
and
nop
sbb
mov
scas
fnstcw
push
sub
sbb
cmp
and
sbb
dec
aaa
adcb
movb
test
mov
push
aad
fmull
push
outsb
shlb
adc
cwtl
pushf
data16
adc
popa
daa
or
xchg
cmp
call
clc
mov
mov
sbb
test
and
popf
dec
adc
or
pop
mov
out
popf
dec
push
xor
lds
ret
ss
pop
xchg
es
cmc
fisubrs
cmc
push
stos
mov
pushf
cmp
jmp
pop
ds
pop
xchg
aaa
jge
addb
popa
mov
xor
ret
jle
push
adc
jp
xor
je
inc
jno
mov
push
clc
pop
fsubrs
pop
dec
in
adc
or
fs
inc
fildll
movsb
mov
dec
or
push
jl
mov
arpl
notl
in
adc
mul
jno
fdivs
xchg
inc
mov
mov
mov
xlat
in
lods
pop
fcomps
ja
mov
jecxz
fwait
sbb
add
inc
scas
testl
mov
mov
xor
jo
les
or
sbbl
adc
or
ret
frstor
cs
jecxz
adc
xchg
mov
leave
mov
add
cmpsb
aam
test
push
xor
jp
mov
rorb
loopne
pop
sbb
fucomp
stos
xchg
push
es
cmpsl
jno
or
add
dec
jae
mov
lret
popf
jmp
xchg
and
jmp
sbb
jne
out
mov
movsl
jae
data16
cmp
ficompl
shll
mov
ffreep
jae
test
divb
mov
xor
out
inc
loopne
sbb
hlt
mov
out
pop
sahf
push
pushf
sti
add
loope
or
cli
pop
or
lea
fwait
prefetch
fistps
sub
loope
jne
adc
dec
aad
add
stos
mov
repnz
fld
pop
sbb
dec
inc
subb
pop
mov
rorl
repz
mov
enter
int
ror
adc
insl
xchg
out
dec
pop
cmp
dec
xor
mov
dec
cltd
xchg
push
or
adc
inc
xchg
mov
mov
stc
bound
inc
mov
push
mov
idivl
ss
xchg
data16
adc
jb
push
mov
xchg
ja
out
adc
xor
mov
arpl
push
inc
mov
mov
icebp
es
or
mov
sarl
mov
jecxz
test
xchg
pop
xchg
adcb
enter
push
pop
cmp
mov
sbb
test
in
mov
jp
push
loopne
push
push
adc
jecxz
pop
test
aaa
and
out
out
adc
fidivl
xchg
lret
out
fiaddl
jle
sub
mov
sub
std
push
aas
fsubl
pop
movsb
je
movsl
dec
sub
aam
mov
fcoms
popa
fistps
inc
stc
in
xlat
lods
das
andl
inc
nop
imul
mov
sbb
incl
movsl
test
pop
xor
sub
push
dec
mov
inc
shrb
ss
jns
testb
out
aam
or
mov
pop
out
rorl
negl
cmpl
out
and
dec
push
pushf
lds
out
loop
fcmovnu
imul
mov
cmp
scas
sbb
jle
lea
leave
or
loope
xchg
mov
cmp
pop
insb
xchg
sub
cmp
mov
jmp
insb
popa
jno
movsb
push
ja
stos
push
mov
inc
sbb
mov
cltd
jnp
dec
dec
jl
mov
pop
je
in
les
and
dec
jb
icebp
mov
push
push
rcr
pop
add
dec
dec
jo
mov
das
sub
dec
or
das
es
mov
cld
pop
shrl
and
in
out
or
add
push
push
and
mov
mov
xchg
mov
roll
xchg
sbb
shlb
xor
repz
lods
daa
pop
je
cltd
aam
xchg
mov
lret
adc
rorb
dec
fistl
rorl
mov
rcll
mov
loop
jns
push
clc
test
test
lock
popf
ret
push
cmpsl
int
shr
cli
fistpll
mov
dec
cmpsl
es
sub
in
subb
scas
lahf
fcomps
xchg
and
xor
out
lds
mov
roll
lock
lahf
dec
ret
in
jb
mov
push
in
jo
cmpsb
add
stc
outsb
dec
andl
arpl
movsb
sahf
movsb
pushf
mov
add
ret
imul
test
call
pop
in
mov
rolb
pop
stc
mov
cmp
add
notb
mov
shl
nop
mov
dec
dec
jb
sbb
movsb
daa
bound
int3
xchg
mov
rcr
add
roll
cmp
push
jne
mov
mov
push
pop
mov
insb
mov
leave
out
or
sub
hlt
fisubs
xchg
cmp
pop
and
fidivrl
or
nop
lret
fistps
pop
out
adc
cmp
xor
cmp
pop
mull
mov
adcb
lods
inc
lods
lods
in
add
dec
pop
aam
sbb
and
or
movsb
cmpb
fdivs
sub
stos
sbb
dec
das
imul
test
sub
fs
sub
push
mov
dec
cmpb
jmp
mov
ret
sahf
sub
iret
cmp
add
xchg
mov
sub
cvtps2pi
push
lods
imul
enter
sahf
mov
mov
test
out
lahf
fmuls
pop
rcrb
daa
outsl
cmp
dec
aaa
pop
adcb
aam
inc
cmpsl
jno
mov
pop
or
push
pop
subb
dec
xchg
mov
popf
and
in
pop
insl
movsl
cmpsl
dec
popa
popf
enter
dec
lahf
jecxz
popa
test
into
push
add
adc
sbb
sub
jb
fdivrs
shlb
xchg
xchg
jae
sub
push
mov
jae
fadds
lds
sarb
fucomp
into
scas
cmp
ljmp
xchg
xchg
lahf
mov
dec
and
addr16
xor
xlat
mov
push
or
mov
push
and
dec
sub
je
pop
aam
cmp
jg
in
pop
dec
pop
jg
mov
ret
sti
shll
sub
xchg
add
sbb
or
push
cs
pop
repz
movl
fwait
adc
dec
pop
xlat
outsl
mov
push
popf
mov
cmp
outsl
out
in
sub
leave
rorb
xlat
cmp
cmp
test
xchg
rorl
mov
sbb
cmpsl
fbstp
adc
push
cmp
imul
sbb
arpl
xchg
push
xor
mov
jmp
xchg
and
scas
sti
data16
add
adc
adc
vpshld
push
push
and
lret
jecxz
out
shrb
rcr
cmpsb
or
pop
ds
mov
test
push
aam
loopne
mov
pop
test
add
push
movsb
jle
scas
adc
mov
mov
clc
mov
test
xchg
xchg
jl
mov
xor
sbb
sbb
inc
inc
ds
mov
enter
sbb
dec
adc
push
test
inc
in
xorb
xor
xor
insl
sub
jmp
mov
inc
jp
mov
clc
call
notl
in
mov
xchg
dec
adc
es
and
jae
mov
icebp
pop
inc
xchg
cmc
push
xchg
jb
dec
sub
fdivrl
rcrb
movsb
out
rcrb
jle
out
fstpl
scas
adc
leave
leave
xchg
mov
jns
out
lret
into
call
xchg
and
fnstsw
out
lret
jbe
mov
pop
rcrl
icebp
dec
out
jno
jo
fstpl
out
mov
jne
clc
sub
rcll
mov
test
and
or
cmp
mov
cmp
pop
xchg
add
or
movsl
push
pop
in
dec
jle
mov
inc
inc
js
inc
xor
sub
xor
pop
popa
xor
ret
mov
mov
pop
fildll
pop
js
movsl
rcrl
movsl
jmp
jnp
movsl
inc
cmp
mov
into
sub
and
data16
aaa
jmp
sbb
mov
adc
adc
inc
pop
fldt
addr16
fwait
mov
ja
call
and
xor
inc
add
fistpll
hlt
out
ucomiss
lret
jbe
dec
inc
in
sti
xorl
xlat
inc
fs
jp
mov
aad
ss
call
fldt
push
jne
xchg
testb
ds
xchg
mov
mov
xor
pop
xor
jle
dec
dec
dec
add
dec
mov
pop
push
jle
mov
lds
int
popa
sahf
adc
arpl
aad
sub
jmp
jns
fsubs
sub
jle
mov
cmp
xchg
xor
fiadds
out
push
ljmp
push
rcll
lds
xor
dec
clc
pop
push
popf
test
dec
mov
aam
adc
lret
mov
fcomps
cld
mov
jecxz
inc
mov
sbb
xor
dec
push
sbb
dec
or
and
pop
shr
scas
xchg
daa
mov
popl
test
mov
test
push
movsl
in
adc
lcall
sbb
pop
leave
pop
lea
add
mov
bound
add
inc
je
into
mov
dec
mov
mov
pop
enter
xchg
jecxz
fiaddl
or
in
ret
mov
and
ret
arpl
sub
movsb
mov
pushf
call
and
adc
lret
scas
inc
mov
rorb
rolb
dec
imul
sub
jns
sti
push
pop
test
mov
pusha
clc
lret
inc
outsb
jmp
push
xor
mov
mov
or
xor
jo
fiaddl
lcall
cmc
push
mov
xor
xchg
fstps
inc
inc
ljmp
inc
call
mov
and
insl
fcomp
mov
push
loopne
xor
cmp
scas
fnsave
lret
push
out
add
popf
inc
lcall
sbb
call
sbb
cmp
and
das
arpl
or
daa
push
ds
dec
push
sub
int
adc
lea
jmp
outsb
or
xor
dec
call
xchg
or
jb
ret
mov
fldt
sub
incl
imulb
enter
adc
popw
stos
pop
int3
cmpsl
and
arpl
pop
or
mov
dec
test
pushf
test
mov
cwtl
bound
pop
rcl
pop
ret
lahf
or
aaa
add
gs
jns
dec
fildl
jne
imul
adc
fcmovne
mov
add
in
fcmove
stc
sahf
mov
pop
mov
sbb
and
push
mov
pop
fnstcw
inc
push
push
jo
adc
roll
clc
ret
nop
or
ds
mov
jne
insl
dec
push
sub
xor
imul
xchg
rcrl
js
call
andb
jmp
scas
cmpsl
sahf
enter
mov
push
or
adc
ret
sub
xlat
call
mov
popa
aam
push
clc
stc
popa
pop
cmp
in
dec
xor
in
xor
sub
sbb
int3
je
je
iret
mov
scas
test
sub
ds
cs
popl
pop
iret
mov
insb
cmpl
in
and
cmp
xchg
mov
cmp
shll
loop
stos
push
sub
cli
xchg
stc
ljmp
movl
repnz
mov
push
add
ja
inc
add
sbb
iret
jge
lea
clc
icebp
jo
mulb
lret
pop
lcall
and
cmc
sub
gs
scas
insl
neg
xchg
fcomip
dec
push
sbb
icebp
sbb
adc
mov
bound
fcmovnb
stos
nop
cmp
cmp
ja
push
xlat
push
inc
loopne
data16
jb
nop
pop
adc
int3
loopne
dec
out
push
mov
xor
ds
ret
lahf
dec
inc
cmp
shll
loope
jns
mov
fsts
cmp
mov
pushf
scas
fwait
jp,pn
pushf
test
cmp
pushf
push
les
cs
sbb
push
loop
mov
mov
and
int
and
maxps
pop
imul
imul
inc
xchg
push
insb
inc
or
fs
ficompl
insb
int
movsb
imul
add
das
repz
mov
xchg
mov
scas
fstp
dec
roll
mov
mov
jge
imul
fisubrl
pop
xchg
lcall
popa
lock
inc
mov
hlt
shrb
mov
aaa
loope
stc
sbb
and
scas
sub
xor
std
mov
hlt
fistpl
scas
adc
nop
jns
inc
je
mov
nop
ret
scas
pop
outsb
aam
into
mov
jo
cmp
dec
push
add
les
lcall
in
adc
in
fstl
xlat
dec
sub
push
mov
xchg
jbe
and
dec
es
xchg
ja
push
add
call
decb
lds
pop
xchg
loope
ja
xor
mov
adc
sub
popf
jecxz
nop
scas
add
dec
mov
pop
rorl
sub
or
or
mov
rol
fnstsw
stos
adc
push
out
ja
iret
in
pop
in
pushf
leave
pop
outsl
sbb
mov
cmc
stc
fadds
ss
out
pop
aaa
stos
adc
mov
sub
scas
fwait
lea
aad
out
rcrl
enter
rorl
lret
cmp
pop
mov
dec
out
cmp
fwait
adc
jp
dec
bound
mov
sbb
shll
test
movsl
xchg
mov
pop
add
mov
mov
pop
add
scas
clc
adc
dec
es
cmp
sub
bound
test
dec
stos
cmpsb
ss
cmc
mov
orl
cmp
push
cmp
js
xlat
ret
and
lods
mov
stos
pop
and
inc
lret
int
dec
imul
arpl
jbe
bound
int3
jl
mov
mov
xchg
cld
into
shlb
push
xchg
xchg
mov
out
xor
add
jl
out
sub
pop
mov
cmp
mov
std
dec
mov
jl
test
cmp
xchg
ljmp
test
aad
mov
hlt
xlat
cmp
repnz
pushf
pop
dec
sub
or
test
jbe
push
jle
lock
add
xlat
test
into
jo
push
sub
xor
pop
fisubrl
pop
cmp
je
insl
repz
imul
pop
mov
lea
dec
or
jb
test
data16
inc
lahf
ljmp
mov
sub
cmc
faddl
out
cmpsl
aas
aas
sub
sbb
imul
into
mov
std
xor
test
and
loopne
dec
or
push
ficomps
mov
bnd
mov
ret
inc
jl
mov
or
cmp
ret
push
push
mov
and
add
push
mov
es
clc
out
lret
adc
pusha
sar
mov
enter
daa
cmpsl
out
and
pop
or
aaa
or
bound
movsl
je
cwtl
arpl
or
cmc
pop
adc
push
shll
pop
jb
fldl
testl
pop
rcll
stos
add
push
inc
jae
je
outsl
jl
fdivrp
push
enter
fdivl
pushf
pop
and
test
shll
repz
sbb
mov
pop
int
add
jbe
mov
cli
pop
lods
loope
ss
push
mov
arpl
pop
sub
outsl
push
sbb
ljmp
stos
pop
jle
mov
push
aaa
jbe
cli
add
pop
std
mov
scas
xlat
pusha
xor
mov
hlt
jmp
sar
push
dec
mov
or
into
cltd
inc
push
mov
addr16
rorl
and
ficompl
aaa
loopne
xor
lret
xor
outsb
repz
sbb
or
push
ja
in
adc
das
push
push
addr16
mov
push
pop
lret
adc
imul
jne
mov
inc
push
cmpsl
jo
pop
push
out
int
ficomps
sarb
aas
les
out
jns
mov
hlt
aaa
jb
shll
gs
jle
dec
movsb
sub
xor
outsb
push
imull
adc
xor
sbb
add
jbe
lds
sub
add
ja
loope
inc
dec
xchg
orb
test
out
mov
push
fdivrs
and
jne
xchg
xor
andl
jno
lret
mov
adc
xchg
std
shl
dec
push
fwait
push
pop
sub
repnz
addr16
iret
add
xorl
scas
xchg
insb
sahf
or
rcrb
xlat
out
dec
ret
loope
add
shrl
outsb
fistpl
negb
jae
jmp
js
popl
ficomps
mov
out
add
movsb
dec
mov
shr
sbb
loopne
cmp
pop
pushf
jle
bound
repz
fcomp
imul
lahf
mov
cld
jb
inc
push
mov
sub
popa
iret
movsb
lods
jmp
pop
push
or
sbb
add
ret
xor
adc
loopne
in
scas
rcrl
xchg
scas
insb
and
leave
mov
sete
outsb
push
data16
xchg
inc
test
pop
in
jae
pop
js
pop
add
jmp
adc
or
popa
nop
mov
xchg
add
das
mov
int
mov
ficomps
mov
orl
pop
out
dec
ret
sti
ret
lds
sub
inc
lods
daa
ret
mov
arpl
loope
movsl
mov
les
int
sub
aaa
xchg
out
clc
push
xor
mov
rsqrtps
out
add
sbb
loop
lret
outsl
mov
and
sti
jge
sbb
pop
in
push
aad
les
push
ds
sub
in
sarl
insb
cli
imul
xchg
aas
ds
rcrb
cs
out
xor
mov
cmp
xchg
add
mov
ds
dec
xorb
sbb
les
or
ljmp
dec
cltd
xor
dec
lret
test
mul
bound
xchg
test
je
xchg
iret
or
xchg
inc
push
cs
mov
daa
mov
xchg
adc
fsub
dec
mov
jle
test
call
jmp
out
push
inc
add
stos
negb
pushl
lea
mov
test
push
xchg
mov
lock
sbb
push
call
icebp
dec
inc
jg
cmpsb
dec
cmp
pusha
imul
sarl
std
das
pop
mov
aaa
mov
pop
shrl
fisubs
dec
or
xchg
mov
cmp
loopne
das
nop
scas
lcall
lcall
or
jge
stos
inc
lret
cmc
xor
xchg
lods
mov
mov
push
ljmp
mov
push
add
stc
or
popa
adcl
sbb
int3
aas
fwait
rclb
pop
and
aad
repnz
add
adc
pop
and
jo
cli
sahf
addr16
fcmovbe
and
loopne
rcrl
call
push
data16
adc
jbe
mov
dec
sub
int3
jmp
cmpsl
enter
add
mov
jge
notb
out
add
in
shll
loope
nop
mov
ljmp
xchg
mov
test
pop
inc
nop
pop
pop
xchg
pop
xchg
xor
inc
clc
pushf
xor
repz
adc
jns
in
sahf
stos
xor
adc
js,pt
inc
xchg
push
add
cmp
insb
pushw
xchg
inc
dec
lea
pop
test
dec
test
aad
cmp
add
shl
inc
lods
mov
adc
jmp
mov
inc
enter
cmpsb
dec
xlat
cmp
test
test
hlt
mov
mov
or
and
sub
ret
loop
into
hlt
xor
pop
das
xchg
mov
jae
ds
lea
int
scas
gs
adc
js
mov
imul
fdivrs
enter
push
lret
inc
outsl
or
sbbb
sub
cmp
jge
push
jbe
lret
mov
mov
aas
out
std
mov
pop
mov
addr16
pop
andl
imul
pop
sbb
ds
shlb
sub
push
cmc
maxps
push
push
push
stos
push
cmp
add
pop
mov
dec
cwtl
fisubrs
cmp
and
mov
jge
test
es
shl
jbe
and
add
xorl
push
jae
clc
orb
insb
cmp
jp
dec
jno
dec
xchg
pop
pop
xlat
int3
sub
push
in
xlat
mov
in
mov
outsb
mov
and
sub
adc
dec
xor
lcall
add
sarb
xchg
xchg
lods
stc
pusha
xchg
cwtl
mov
jo
lods
outsb
es
cmp
ljmp
or
dec
loop
repnz
lock
pop
sarl
inc
jno
andb
dec
aad
popf
loopne
mov
dec
xor
outsb
adc
pop
aas
lods
mov
cmpsb
xchg
and
lret
orl
xlat
mov
lock
add
push
mov
mov
out
stos
mov
jp
and
adc
push
sbb
add
pop
add
pop
pop
lcall
cmpsl
add
cmp
lock
push
pop
dec
mov
sbb
xor
aas
lea
test
sub
aaa
mov
jmp
jg
and
pop
cmp
sbb
push
mov
cld
icebp
divl
mul
das
test
xchg
add
adc
mov
inc
adc
in
jae
adc
fdivrl
xchg
in
jmp
push
and
fisubl
cmp
movsl
mov
jb
call
inc
sub
fidivrl
scas
mov
jns
insb
aaa
cmp
pop
je
xor
lret
incl
add
jno
lahf
adcb
out
fptan
inc
ja
push
loope
or
insl
pop
popa
xchg
fnsave
pop
mov
add
pop
loop
inc
popa
in
addr16
jbe
loope
imul
add
data16
lahf
mov
test
xchg
test
imul
and
mov
mov
mov
cltd
ljmp
sub
mov
jg
dec
sbb
stos
jns
popa
movsb
jns
add
and
cmc
hlt
lret
dec
lds
repnz
ret
addr16
in
adc
mov
pop
pusha
shll
inc
cmp
fdivl
jnp
cmp
or
xchg
or
stos
cmp
out
or
or
pusha
jo
push
subb
jle
jo
fwait
mov
bound
mov
int
iret
mov
cmp
sbb
inc
cs
lods
out
adc
push
sub
xlat
add
push
add
mov
push
test
push
inc
jae
imul
xor
rcrb
jl
arpl
add
inc
icebp
stos
mov
push
mov
jno
cmp
mov
loopne
pop
sub
sub
nop
pop
dec
mov
jg
xchg
mov
sbb
cltd
pop
inc
bnd
sub
shlb
jne
outsb
mov
and
mov
shl
call
outsl
lods
pop
push
sbb
add
je
mov
mov
adc
inc
inc
or
xchg
mov
lods
push
pop
out
andl
mov
outsb
add
in
test
fldlg2
into
iret
cld
int3
sub
mov
ret
pop
ret
test
inc
jmp
cwtl
pushf
jb
push
dec
aaa
lods
js
jmp
fnstcw
popf
xor
xor
loop
jecxz
std
std
repnz
outsb
ljmp
leave
fwait
mov
stc
push
mov
pop
push
sbb
cwtl
adc
sbbb
or
stc
stc
mov
mov
into
push
mov
inc
pop
mov
or
pop
cmp
cli
out
jo
arpl
or
xchg
add
push
fcom
dec
xchg
pop
clc
cmp
es
aad
xchg
fs
xchg
lret
mov
test
lds
push
cmp
outsl
push
pop
aad
shlb
pop
cltd
mov
xchg
lcall
mov
inc
dec
fadd
cmp
or
and
push
scas
mov
pusha
adc
gs
into
or
bound
adc
sub
outsb
mov
xor
mov
cmp
sbbl
mov
push
mov
mov
sbb
mov
pop
add
imull
cmp
adc
std
lock
adc
xchg
out
ja
out
into
sub
mov
divb
and
jbe
cmp
inc
push
int
test
jnp,pt
and
and
jg
loope
mov
fistl
mov
iret
cld
xor
add
insb
bound
mov
sbb
xor
mov
jbe,pt
aad
sahf
ficoml
movsb
add
jo
pop
sbb
movsl
mov
movsl
adc
aaa
xor
fsubs
insl
xchg
adc
lea
cs
dec
mov
cwtl
imul
fistps
push
inc
sub
adc
mov
mov
jo
outsl
and
mov
aad
mov
add
pop
lret
push
cs
hlt
aaa
je
data16
cmpsl
push
int
jo
dec
jbe
xchg
lahf
adc
mov
xor
fstps
sbb
xchg
cli
adc
xchg
lret
rorl
sti
movsb
or
lret
clc
xchg
fs
call
fs
add
daa
shl
push
sbb
xor
pushf
inc
and
sub
outsb
fadds
adc
inc
enter
arpl
cmp
sub
xor
mov
icebp
lock
or
cmc
in
mov
sahf
fidivrl
inc
push
dec
cmp
jo
mov
movsb
dec
fdivl
shlb
inc
push
addr16
or
mov
sub
push
mov
mov
mov
inc
imul
xchg
mov
in
jns
dec
int
movsb
gs
pop
mov
mov
ret
imul
dec
mov
adc
inc
jp
data16
xlat
sbb
popa
sub
and
iret
mov
daa
mov
jo
mov
or
sub
xor
dec
fnstenv
dec
shll
pop
adc
add
lods
jo
mov
lds
rolb
cld
pushf
pop
lea
mov
jb
mov
sbb
dec
lods
movsb
cmpsl
cmp
addr16
cmp
jecxz
leave
cmp
ret
cmc
fadd
sbb
in
inc
pop
push
push
leave
int3
inc
addl
cmpsl
hlt
pop
inc
xchg
push
xor
call
popa
outsb
sub
out
or
fcomi
and
adc
int
bnd
mov
inc
adc
pop
out
xor
ret
xchg
js
or
ljmp
push
enter
mov
jge
gs
jb
adc
and
insb
inc
jne
out
into
mov
inc
pop
stc
push
call
mov
mov
mov
adc
xchg
dec
enter
in
inc
fdivrl
loop
and
in
jmp
mov
xorl
and
cmpsl
dec
push
ss
lret
or
ja
insb
sbb
pop
push
jns
daa
imul
push
pop
sbb
ret
jb
inc
push
enter
es
xor
in
mov
loope
stc
in
sbb
jecxz
fisubrl
movl
xchg
test
ds
cmp
or
xchg
les
pop
das
jae
scas
xor
idivb
ds
testb
dec
les
out
repz
into
sub
fwait
xchg
mov
mov
push
add
xor
cmovns
mov
jmp
push
jbe
arpl
inc
stos
dec
xor
push
sbb
out
aam
pop
mov
adc
jbe
push
sub
lcall
cmc
rcrb
mov
lods
das
xchg
mov
mov
stc
pop
mov
push
inc
add
and
dec
leave
repz
inc
daa
into
pop
lea
in
dec
dec
sub
sti
dec
or
shrb
dec
mov
xchg
push
xchg
mov
pop
test
mov
and
stc
hlt
cld
clc
dec
fprem
jmp
dec
mov
xorb
mov
out
dec
insb
ficoml
mov
out
mov
sti
xchg
push
xchg
and
pop
jbe
adc
repz
out
loopne
in
in
mov
data16
loopne
adc
andb
loope
dec
fbld
clc
bound
cmp
sahf
push
mov
shr
aad
clc
daa
fdivr
cmp
xchg
out
outsl
cwtl
push
cmpsb
aam
push
mov
mov
push
jle
dec
leave
cwtl
lock
mov
roll
push
cltd
in
pop
and
push
js
dec
in
add
testl
xchg
bound
in
fcmovnbe
add
clc
adc
insb
sub
ret
es
sbbb
xlat
xchg
das
popf
inc
adc
xor
je
or
jne
dec
push
mov
pop
adc
mov
movsb
xorb
mov
push
addb
xchg
inc
push
es
pop
movsb
jnp
jp
adc
jnp
dec
repz
and
xor
add
call
jne
notl
xor
dec
mov
psubusw
cld
addr16
std
fstpt
push
icebp
out
pop
and
dec
out
push
adc
cmp
mov
add
sahf
cmp
shl
pushf
stos
ss
dec
mov
test
mov
ret
aam
push
cs
cmp
or
mov
or
cld
jne
in
push
les
movsl
shl
and
ss
mov
xchg
inc
jo
mov
icebp
imul
cwtl
je
cmp
mov
bndstx
xor
shll
xchg
jb
mov
out
xor
xor
adc
cld
xchg
push
fcoml
inc
lods
enter
daa
das
dec
mov
adc
sar
pusha
xor
sub
mov
or
ss
push
xor
pop
mov
add
cmc
incb
cs
sti
fisubrs
cmpsl
enter
enter
pop
jo
movl
mov
enter
cltd
or
lcall
push
fcoms
push
mov
xchg
test
inc
sub
subl
mov
rorl
addb
mov
cmp
inc
and
out
mov
cld
cmpl
hlt
sbb
cmc
roll
imul
hlt
xor
and
inc
imul
add
push
ret
aam
std
pushf
test
push
test
dec
sbb
add
xchg
pop
mov
pop
lds
out
fldcw
dec
and
mov
jle
sub
jae
inc
dec
rcll
sti
and
push
mov
pop
sarb
and
cwtl
mov
mov
sbb
movsb
ljmp
add
sub
jo
pop
clc
sbb
mov
add
inc
insb
xchg
incb
stos
mov
outsl
scas
mov
imul
ret
outsb
dec
jns
jo
repnz
cmpsl
and
mov
add
jns
stos
cmp
and
add
sbb
dec
push
or
mov
scas
popa
nop
sub
dec
daa
callw
sti
pop
daa
or
adc
mov
push
inc
repz
outsl
mov
add
mov
sub
mov
push
sub
test
les
fwait
pop
movsb
hlt
popf
lds
leave
mov
stos
stos
and
adc
iret
or
xor
sbb
aam
leave
imul
mov
push
out
loope
xchg
addr16
inc
push
mov
pop
cs
out
add
mov
sti
dec
sbb
cs
push
push
pop
dec
inc
jns
add
out
or
iret
xchg
xor
or
mov
lcall
int3
aam
xchg
int
cmp
inc
or
and
shlb
out
mov
loopne
popf
mov
sub
inc
nop
call
in
push
add
sbb
fdivrs
jge
sbb
repz
test
pop
cld
jo
pop
dec
mov
mov
push
in
mov
mov
arpl
pop
xor
pop
jo
jp
pop
cmp
dec
sbb
xchg
lock
subb
sub
dec
dec
inc
cmpsl
add
fldenv
stc
push
dec
xchg
rclb
pusha
ret
daa
mov
sub
push
mov
daa
sbb
dec
popa
push
pop
mov
add
test
add
cmp
mov
jae
pop
pop
mov
cmp
push
jno
cmp
repnz
push
mov
dec
xor
out
leave
call
fxam
add
sbbl
dec
out
jb
push
movsb
inc
inc
and
xchg
or
out
lods
jg
sub
hlt
mov
daa
pop
loopne
in
add
movsb
ret
cmpb
push
cmp
pushf
in
cmpsl
rcr
xor
push
dec
push
or
push
sbb
movsl
mov
sbb
push
mov
in
int
out
hlt
outsl
outsb
sbb
adc
sysret
pop
sbb
cmpsl
mov
cmpsl
mov
das
cmp
add
pop
or
mov
inc
inc
rcrl
add
cmp
setl
push
repz
pop
int3
sub
outsl
and
cmp
jg
add
sbb
test
or
popa
out
cmp
pop
enter
sub
mov
shrb
testl
cli
push
or
xchg
cmp
leave
dec
pusha
sub
cmp
iret
rorw
xchg
or
jne
test
inc
std
stc
andb
in
cmpsl
fistps
pop
add
in
and
cltd
cmp
xchg
mov
lock
out
cmp
inc
xor
xor
xchg
cs
cltd
int
add
ret
mov
adc
aas
test
mov
cmp
sbb
rol
add
mov
jl
and
push
sub
cmc
loop
or
xchg
mov
cmp
icebp
add
mov
xchg
fcoms
add
fsubl
movsl
in
mov
shl
and
adc
movsl
inc
ret
ds
xor
dec
mov
out
mov
or
cmpsb
sub
popa
shl
and
int
cs
jecxz
add
add
cmp
sbb
shr
pop
notb
imul
movsb
sbb
int
lcall
shlb
in
dec
aad
outsl
push
jnp
test
jae
jno
lea
push
add
stc
and
jns
jns
jp
mov
orb
or
iret
int
xorl
ja
iret
pushf
xchg
sbb
jno
sbb
js
lock
test
sti
stc
popf
or
pushf
mov
push
dec
mov
add
js
rcll
imul
sub
imul
adc
out
fcoms
sbb
lcall
mov
popa
in
cmp
mov
mov
jns
inc
add
int3
pop
mov
mov
mov
pop
repnz
icebp
dec
push
jb
and
sub
xor
fnstsw
mov
cmp
test
bound
leave
adc
cmpsl
test
pop
xchg
sarb
adc
inc
xor
ret
cmp
pop
fs
test
insb
pop
shr
jge
sbb
mov
cli
fnstcw
push
mov
dec
insl
xchg
pop
ret
repnz
into
adc
addr16
push
popa
sbb
adc
fs
xchg
loopne
cmp
fnstcw
lods
aad
jnp
or
push
dec
adc
movsb
movsb
xor
rcr
jo
out
jg
jge
inc
pusha
aam
lret
mov
mov
mov
fimuls
or
inc
dec
ja
scas
std
mov
lahf
popa
mov
dec
ret
inc
insb
and
sub
adc
inc
nop
mov
fiaddl
xchg
jge
mov
jno
insb
outsl
xchg
mov
adc
repz
jg
je
outsb
call
or
pop
roll
leave
cmp
sti
adc
jmp
lret
rclb
ret
or
aas
ffreep
lret
in
test
fldcw
pusha
sub
rclb
pop
repz
scas
pop
rcrl
pusha
sbb
test
inc
icebp
mov
loop
jmp
int3
pop
in
and
mov
push
das
mov
mov
repz
adc
stc
fs
hlt
or
add
xchg
nop
and
daa
out
aas
sarl
dec
loope
dec
or
nop
arpl
stos
fbstp
jp
jns
cwtl
adc
ret
mov
push
jne
or
sbb
les
lret
es
sahf
xor
ss
mov
mov
fwait
sti
pop
or
inc
sbb
shlb
js
push
jl
mov
adc
out
popa
adc
mov
sbb
stc
mov
cld
lahf
jae
aas
shlb
fcompl
jne
popa
lahf
push
cmp
sbb
aad
and
dec
fmul
push
push
cld
push
xor
xchg
pop
adc
fnsave
jae
and
mov
lea
test
pop
push
js
fadds
dec
or
fimuls
push
push
subl
xor
xchg
sbbb
xchg
js
lds
insb
push
or
out
out
mov
cs
lods
std
cmp
add
into
imul
and
mov
xor
jg
add
adc
sub
stos
inc
jae
xor
xlat
int3
insb
mov
pop
add
ficomps
xor
mov
and
xchg
push
push
scas
sti
mov
lret
fcom
loope
std
insl
mov
pop
cmp
cmp
xchg
nop
imul
pop
cwtl
in
fbld
fimull
cmp
idivb
mov
aas
inc
call
mov
jg
mov
scas
ret
dec
fdivrs
inc
insl
sti
xchg
lds
jge
lods
inc
mov
scas
inc
dec
stos
xchg
inc
xchg
mov
sub
sbb
pop
and
jg
xor
into
cmp
fld
movsl
lea
xchg
jg
jl
inc
mov
aas
shrb
lcall
xlat
rcll
aam
and
lods
loope
mov
xor
mov
push
pushw
add
ret
stos
stc
sub
jo
jbe
outsb
lcall
test
push
mov
js
repnz
fsubs
enter
mov
pop
fadds
loope
mov
mov
mov
jmp
mov
xchg
fsub
pop
adc
sbb
andb
jns
inc
je
fists
or
adc
into
push
or
test
je
lea
dec
fadds
int
mov
mov
and
fwait
or
rcl
bound
lret
stc
inc
into
adc
cmpsl
mov
into
mov
xor
mov
ss
out
and
cmp
jne
in
ret
nop
adc
add
add
jge
divl
pop
mov
jecxz
test
jae,pt
popf
fimuls
adc
negb
inc
fmuls
mov
mov
test
decb
negb
xor
xchg
pop
mov
loopne
test
mov
adc
jnp
xor
pusha
mov
sub
les
pop
jmp
xlat
push
movsl
xchg
nop
xor
adc
lret
decb
mov
jle
mov
pop
or
mov
mov
ror
push
sbb
inc
push
je
aas
dec
outsb
jbe
mov
mov
sbb
push
jge
jmp
lds
fnstenv
mov
int
sbb
adc
jo
mov
dec
rcr
scas
ljmp
inc
inc
jp
lock
jo
out
aam
test
scas
test
sub
add
mov
mov
sbb
imul
add
mov
xlat
sub
in
xor
lods
test
push
daa
test
mov
incb
pusha
cmpsl
xor
movsl
push
adc
xor
jl
sbb
dec
enter
dec
mov
shrb
popf
mov
lock
into
and
push
fdivs
cmpxchg8b
cli
cmp
lock
std
or
mov
or
push
scas
test
inc
imull
sub
mov
dec
xor
dec
xor
mov
adc
mov
js
je
xchg
xchg
dec
into
xchg
xchg
lret
pop
call
in
fnstenv
push
push
and
pop
jecxz
dec
test
ss
mov
push
cmc
repz
mov
loop
adc
popf
mov
mov
dec
movsl
arpl
mov
inc
push
in
lret
mov
and
mov
adc
test
aaa
sbb
jbe
sbb
jbe
loop
mov
sbb
push
or
mov
aam
dec
sub
mov
int
xor
ret
push
fcoms
fs
xchg
popa
sub
aam
push
ljmp
xchg
addl
adc
aad
imul
movsb
jle
iret
push
les
fistl
fdivrp
mov
dec
nop
mov
cmp
sub
add
push
cli
push
fcoms
je
jnp
ds
xchg
leave
push
fldt
clc
cld
sti
nop
jecxz
repnz
stos
xchg
adc
mov
ret
in
rcll
jp
inc
loopne
jp
sbb
and
js
int
imull
mov
or
pop
push
lahf
test
addl
lret
sub
xchg
js
sti
adc
test
cld
test
xchg
jmp
popa
sbb
test
shl
jge
clc
jl
fisubs
ret
mov
icebp
cmp
and
mov
mov
lock
dec
fsubl
mov
ljmp
lods
dec
xchg
mov
aad
std
push
jno
cmp
inc
fnstenv
lcall
xchg
inc
mov
mov
sbb
mov
mov
cmc
stc
jmp
pop
pushf
fistl
scas
and
mov
sbb
loop
or
sub
add
cltd
jne
lret
dec
mov
lahf
enter
adc
inc
push
dec
adc
mov
cs
and
jbe
and
iret
pop
jns
adc
icebp
pop
out
lret
fwait
je
xchg
dec
aas
cmp
or
outsl
out
or
mov
std
push
aaa
loope
add
jmp
insl
push
cmc
xchg
jl
xchg
xchg
xlat
pop
rclb
scas
int3
fsubr
dec
xchg
and
adc
fldenv
push
pop
and
shrb
lock
and
fstpt
imul
cwtl
sub
imul
inc
add
mov
dec
das
mov
sub
pop
js
xchg
repz
mov
adc
adc
push
sub
in
push
xchg
repz
sbb
cmpsb
sub
cmp
mov
xchg
xlat
xchg
dec
adc
movsb
pop
add
or
pop
in
movsb
push
icebp
ficompl
mov
sbb
xchg
jg
jle
movsl
add
push
lcall
notb
inc
les
lods
jl
and
gs
ficoms
xchg
fcomps
push
lea
sbb
pop
sbb
mov
sbb
mov
jge
adc
ja
hlt
scas
fstpl
imul
insl
xor
sti
or
fs
push
dec
mov
sub
out
sub
imul
adc
mov
push
jge
mov
pop
int3
mulb
dec
push
mov
jnp
es
jo
imul
jns
mov
mov
cs
pop
pop
push
call
int3
imul
mov
jle
push
aas
jb
out
stc
ret
lock
jne
xchg
shrl
mov
aam
sbb
pop
lock
push
es
lret
lea
hlt
dec
pop
outsl
mov
push
test
xchg
enter
pushf
cwtl
pop
dec
cmpxchg
cltd
daa
lds
in
jge
fstl
cmpsl
int
xor
and
push
sub
mov
mov
es
push
push
mov
loope
insl
xchg
rcl
sub
xchg
mov
mov
pop
mov
call
cmpsl
mov
pop
imul
cmc
test
add
int
pop
clc
fadd
mov
loop
hlt
lock
aad
test
es
fildll
or
and
arpl
test
mov
ret
divl
mov
les
imul
es
mov
sub
stos
sbb
data16
mov
icebp
push
mov
insl
mov
mov
out
dec
or
xor
outsb
out
or
push
in
jb
sbb
and
jne
jns
cmp
stc
sub
jecxz
sahf
aaa
addr16
mov
xlat
mov
dec
lods
test
out
sub
cmp
gs
test
in
jle
mov
js
jge
daa
aas
fdivs
jp
mov
inc
repnz
mov
sub
cmp
mov
inc
xchg
sahf
insb
icebp
xchg
cmp
xor
sub
hlt
mov
gs
xor
mov
aaa
jp
in
fstpt
aam
mov
ret
xchg
pop
stos
lods
cmp
push
add
lods
xchg
aas
jl
sbb
leave
lock
in
outsb
sahf
mov
iret
pcmpgtw
push
clc
pop
and
add
int3
jne
lock
in
daa
jnp
fisttps
push
xchg
test
sbb
rclb
jno
ds
in
xor
and
in
dec
cmp
lods
popf
xchg
jle
bound
mov
cmp
lods
popf
lcall
lock
sub
mov
mov
js
push
push
jno
inc
setno
outsl
aaa
or
in
push
ret
adc
bound
inc
sub
jle
add
shl
adc
fs
cmp
imul
sbb
arpl
shll
cmpb
loope
test
mov
hlt
dec
add
jmp
jle
std
jp
nop
pushf
cli
shrb
add
pop
push
pop
mov
pop
js
fidivs
pop
cld
sahf
fidivl
icebp
pop
std
aad
jmp
push
mov
or
addr16
mov
jle
pop
mov
push
icebp
cs
add
dec
movsl
add
lods
push
jb
fisubrl
mov
insl
xchg
insl
xchg
or
lods
xor
in
pop
pusha
sahf
out
sbb
xor
incb
aad
jne
mov
addr16
daa
mov
push
jge
jge
push
lahf
fdivrl
subl
arpl
fs
cmp
aas
cmpb
jecxz
pop
repnz
push
out
fwait
roll
jp
push
add
movsl
lds
shll
push
out
lea
lds
pop
adc
and
sub
mov
inc
iret
lret
ja
ljmp
outsl
pop
movb
add
fwait
iret
addr16
rolb
fwait
jg
push
jmp
and
cmp
arpl
xor
in
jl
pop
loope
ss
lock
and
ss
pop
xchg
jns
in
pop
xchg
call
out
dec
std
pop
loop
scas
or
adc
sub
icebp
outsl
fidivrs
lret
sbbb
xor
ret
lahf
push
fiadds
mov
cmp
ljmp
test
ja
ret
push
lahf
and
in
aaa
sub
sbb
push
cmp
sub
jg
mov
dec
mov
push
shll
push
lcall
movsl
and
inc
je
rol
in
lds
push
or
icebp
call
cli
and
add
scas
arpl
hlt
mov
xor
lods
add
fsubr
jmp
and
sub
ss
xor
lods
xchg
movsl
or
or
mov
dec
stos
punpcklbw
cltd
aam
dec
ss
mov
xlat
jmp
mov
jnp
inc
addr16
jge
lods
frstor
repz
mov
in
push
sub
outsb
inc
dec
pop
pop
or
mov
aas
dec
mov
dec
cmp
in
fistl
mov
lcall
pop
enter
stos
mov
xor
push
jns
xchg
stos
in
and
jg
nop
divl
popf
adc
mov
push
pop
dec
jno
andl
lock
es
pop
inc
adc
sarl
and
inc
je
xchg
adc
jmp
pop
popf
pop
scas
icebp
cmp
push
jmp
add
cmp
inc
rolb
lea
jle
int3
and
scas
mov
daa
sbb
sarl
inc
adc
xor
sub
imul
mov
outsl
stc
les
loopne
ror
add
push
and
testb
inc
add
and
sbb
add
jecxz
jge
test
add
pop
movb
xchg
int
jae
decb
and
mov
mov
jnp
mov
loop
jmp
xchg
jnp
mov
in
add
scas
scas
divl
adc
sahf
push
jl
imul
movsb
push
test
sahf
sub
popa
push
fcmovnbe
push
pop
rcl
aaa
jnp
in
roll
sbb
inc
aam
fisubrs
pushf
xor
dec
movsl
cli
ljmp
push
cmp
out
push
mov
pop
mov
clc
and
xchg
out
cmp
in
in
jp
mov
adc
popa
mov
sub
dec
jnp
xchg
push
iret
sbb
push
das
nop
push
jbe
les
push
adc
cmp
jb
pushf
mov
aad
lock
leave
adc
daa
xchg
lret
and
sbb
inc
push
roll
or
fldcw
les
int
int
imul
cmp
cmp
pop
sbb
insl
je
sbb
bound
fistpll
jbe
out
outsb
mov
cmp
dec
fsubrl
adc
mov
mov
add
loope
aad
notl
mov
fsubl
push
cltd
or
jno
jmp
test
adc
lea
loope
sarb
call
mov
loopne
int3
cmpsl
sub
sbb
out
stos
xchg
sub
push
pop
mov
movsl
popf
inc
sbb
mov
je
xor
int
add
and
sub
jne
pop
jbe
lods
mov
sbb
adc
cwtl
jae
mov
fs
bound
jo
testl
add
push
mov
sub
rcrb
ret
scas
dec
sbb
int
aam
adcl
dec
mov
sahf
pop
push
push
pop
xchg
dec
sbb
add
ret
xchg
ror
insb
inc
jp
sub
add
push
leave
mov
es
jp
push
push
push
add
mov
push
push
mov
sbb
mov
and
scas
int3
push
pop
addr16
sbb
fdivs
ljmp
or
sar
imul
push
out
adc
jg
xor
cmc
popa
xchg
add
inc
mov
fdiv
xchg
push
das
jecxz
lods
gs
lods
popa
pop
mov
mov
lods
daa
xchg
xor
out
orl
incb
int
es
or
and
loopne
imul
push
ret
dec
fdivs
loope
bound
xchg
xchg
mov
mov
das
push
adc
sub
adc
add
mov
dec
jo
or
dec
or
adc
pusha
cmp
in
jp
xor
call
mov
jbe
xor
test
movsl
mov
clc
cmpsb
cmp
sbb
inc
push
repz
jge
je
or
lahf
ret
mov
jg
dec
shr
lods
daa
xor
mov
jae
push
mov
iret
mov
ret
inc
or
inc
insb
push
xor
hlt
fcompl
or
fbld
fwait
pop
fisubrl
mov
lock
popf
inc
mov
stos
inc
imull
lds
cmp
addr16
ljmp
jle
imul
push
pop
mov
xchg
and
push
cltd
dec
mov
xchg
test
insb
arpl
xchg
add
test
dec
dec
xrelease
inc
cmc
insb
dec
js
jbe
orl
add
and
int
mov
dec
and
out
and
int3
pop
popa
ljmp
inc
pop
mov
testb
scas
lret
das
mov
mov
mov
or
mov
fwait
stos
stc
orl
lcall
jo
cmpl
lar
iret
jmp
das
jo
or
outsb
push
adc
push
or
xchg
test
mov
dec
cs
pop
pusha
repz
push
pushl
add
push
aam
xchg
inc
in
mov
mov
mov
frstor
aas
fcoml
cmp
das
and
mov
push
xchg
mov
xor
inc
fldt
or
out
ret
mov
cmpsb
icebp
xchg
lahf
ss
and
xlat
jle
nop
or
bound
ljmp
movsl
adcb
int
ja
idivb
rcr
mov
in
lahf
jge
cs
dec
pop
daa
shlb
lret
lods
inc
rol
fldenv
mov
pop
xor
push
pop
clc
or
loopne
push
jne
mov
in
sub
pop
dec
sub
adc
xor
push
in
jmp
rolb
int
dec
repnz
adc
pop
in
xchg
pushf
mov
ficompl
push
gs
xchg
movsb
in
cmpsl
xor
adc
push
sub
scas
lahf
cmpsb
lret
test
mov
pusha
into
lret
int
mov
sbb
aad
sbb
adc
shrb
out
test
ret
in
push
cmp
xor
inc
mov
sub
loopne
lret
pop
cltd
aad
int3
pushf
int3
arpl
mov
pop
pop
push
mov
clc
pop
xchg
shlb
pop
ret
popf
xchg
call
push
mov
pop
push
mov
xor
mov
or
adc
push
cmp
xchg
add
cmp
push
lret
enter
js
push
mov
cmp
push
mov
cmpsl
cmp
fiaddl
out
mov
adc
cwtl
xchg
cmp
mov
push
xchg
xchg
pop
fcmovnbe
pop
sbb
push
lret
inc
inc
adc
fsubrl
xor
push
scas
mov
cmp
inc
pop
add
aaa
leave
ret
add
xor
mov
and
add
sbb
mov
test
jae
jl
sub
mov
mov
pop
add
iret
flds
mov
adc
add
dec
dec
mov
pop
jo
inc
filds
mov
sub
jo
cmp
pop
push
or
test
sahf
incb
xlat
mov
sbb
lret
stc
mov
dec
lret
aam
add
ds
insl
add
mov
in
cmc
sub
mov
sbb
mov
enter
clc
pop
fscale
cmc
mov
mov
sbbb
xorl
mov
xchg
xchg
mov
in
mov
inc
mov
pop
test
mov
xchg
xchg
nop
mov
imul
rcl
pop
lock
aad
jp
clc
or
std
fcoms
xor
sub
popa
loope
push
scas
inc
cmpb
pop
je
pop
mov
mov
out
dec
addr16
push
lahf
daa
inc
or
push
dec
cmp
movsl
push
movsl
jb
and
mov
ret
lret
or
sub
loopne
push
and
rol
sub
mov
pop
ret
outsl
or
dec
sar
fs
fnstenv
insl
pop
lcall
jns
jl
in
xchg
jmp
dec
pop
xor
popa
xlat
xlat
mov
inc
push
and
push
int3
filds
test
mov
ljmp
loopne
jmp
fnstcw
pushf
loop
mov
or
lods
sub
call
sbb
push
aad
ficomps
xchg
icebp
push
psllw
in
dec
ficoml
cltd
pop
jne
push
adc
sar
sub
push
xchg
daa
movsb
ss
jg
les
cmpsl
xlat
mov
das
fiadds
push
notb
mov
push
xlat
pop
std
movsl
insl
inc
sarb
testb
add
rcr
jb
sub
jg
repnz
push
test
push
mov
pop
sti
mov
scas
mov
add
sahf
inc
bound
jae
dec
pusha
dec
lcall
xor
inc
jo
pop
cmp
cmp
repnz
in
jge
leave
push
mov
test
xchg
sub
dec
jge
mov
add
mov
push
adc
stos
movsl
dec
shl
sub
stc
lods
mov
mov
rorl
jmp
imul
out
dec
flds
adc
sub
sbb
push
xchg
repnz
sbb
insb
int
jns
std
loopne
jne
sub
xchg
test
faddl
in
cmp
stc
aas
fildl
mov
mov
or
sahf
pop
and
push
push
sub
aas
pop
sahf
movsb
push
sbb
pop
jb
rolb
int
icebp
mov
stos
push
or
lcall
bound
push
pop
push
cmc
jnp
aam
repnz
out
sahf
add
int3
insb
sub
int3
and
and
or
and
adc
cmp
int
sbb
jge
lock
fmul
xchg
incb
push
xchg
fisubrs
pop
je,pn
repnz
jl
mov
loope
insl
ret
cmp
push
pop
pop
mov
dec
jne
dec
enter
lods
jle
je
and
pop
and
mov
ljmp
push
dec
xchg
jle
idivb
inc
dec
addr16
push
push
aad
add
mov
jnp
das
sub
push
inc
push
fimuls
or
or
cmp
in
add
mov
aas
add
cmc
ljmp
mov
in
jmp
adc
mov
sti
aad
mov
mov
bound
data16
xor
sub
mov
lret
mov
pop
xchg
push
out
fbld
or
xor
push
add
mov
repnz
pushw
cmpsl
aaa
xchg
mov
mov
sub
outsl
popa
insb
fidivs
cmp
pushf
push
filds
mov
add
push
stc
inc
lock
dec
jmp
mov
pop
cld
test
jno
dec
std
sub
or
dec
daa
cmp
cmpl
js
and
pop
popa
push
popf
xor
mov
les
fists
xor
mov
dec
xchg
inc
je
mov
mov
adc
loopne
mov
faddp
mov
rorl
mov
into
pop
cmp
jns
rcl
dec
xchg
js
lock
inc
ss
ret
jae
out
clc
sbb
nop
push
jge
xor
pop
mov
stos
lahf
sbb
mov
pop
in
sbb
sub
test
fwait
lcall
mov
jl
scas
outsb
push
es
mov
jge
in
sbb
loopne
roll
lcall
jp
inc
dec
je
add
stc
xor
dec
pop
push
loop
inc
xor
mov
xchg
sub
js
stos
mov
adc
add
ja
repnz
mov
fistl
cwtl
in
inc
mull
mov
cmp
insl
push
mov
popf
ss
fmul
sub
and
sbb
cmp
sbb
mov
or
add
roll
dec
pusha
pop
pop
pop
dec
into
addr16
xor
lahf
sub
ret
outsb
cmpsb
sbb
cwtl
cmp
add
mov
mov
cmp
mov
rorb
jnp
xchg
dec
jns
out
call
jecxz
sub
push
jmp
aad
ljmp
jecxz
pop
lods
jg
roll
lods
mov
xor
test
xchg
fldenv
sbb
popa
push
fs
dec
mov
adc
jmp
cld
faddl
and
cld
das
shlb
push
mov
pusha
jp
sub
xor
push
popa
cmp
sbb
enter
mov
jbe
xchg
subl
mov
push
mov
movsb
xchg
addr16
inc
and
pop
insl
xor
dec
jecxz
int
stos
xchg
test
mov
pusha
in
decl
mov
sub
add
cmp
push
jg
dec
das
sub
es
mov
fisttpl
sub
push
dec
jle
hlt
fildll
jo
pop
xor
pop
inc
jbe
and
repz
sbb
add
xacquire
mov
into
mov
and
jns
gs
leave
xchg
jle
xor
cld
cltd
jo
adc
bound
adc
push
jecxz
popa
or
daa
xchg
sti
nop
cli
orl
jl
sbb
mov
loopne
ss
mov
and
insl
cmovb
lods
fisttpl
jno
pop
into
icebp
add
loopne
pusha
mov
push
and
ret
cmp
jnp
add
bnd
lods
dec
fisttpl
xor
mov
mov
cmp
sbb
and
xchg
je
rcll
subl
cmpsl
jl
dec
mov
fsts
add
push
test
jno
int
cmp
push
int
lods
fs
and
xor
inc
aad
xor
das
and
call
sub
fwait
push
jb
xchg
push
test
fsts
shll
xor
and
sarb
mov
mov
leave
js
xchg
or
adc
pop
jne
dec
xchg
fcompl
xchg
rorl
aaa
or
jge
ud0
xchg
shll
xchg
scas
aad
into
or
push
adc
mov
xchg
pop
out
dec
mov
sbb
mov
bound
inc
xor
mov
dec
and
pop
cmp
std
push
lret
insb
and
and
push
sub
pusha
sbb
inc
in
inc
inc
jmp
pop
clc
sub
ret
push
push
mov
sti
mov
push
ds
pop
and
adc
arpl
pop
enter
mov
jns
add
js
insb
mov
or
jae
xchg
adc
push
mov
in
push
mov
test
xlat
adc
testb
cmp
rorl
sub
sub
jns
cmc
mov
or
lock
in
fistl
loopne
inc
lock
cltd
inc
int
inc
mov
inc
mov
mov
add
pusha
call
push
pop
stos
out
pop
push
add
xlat
dec
fdivl
sub
arpl
cmp
psrlq
mov
dec
scas
xor
lcall
das
push
push
aas
jl
mov
pop
xchg
inc
into
and
ret
dec
push
sbb
xchg
idivb
in
pop
sub
adc
loopne
pop
dec
mov
idiv
push
mull
imul
cs
mov
push
test
adc
mov
sub
loope
xchg
jne
push
stos
scas
fwait
loope
jmp
jb
lret
jae
pushf
xchg
cmp
aaa
mov
push
aam
push
pop
test
xchg
outsl
loope
sahf
insl
lahf
jge
add
leave
into
aad
pop
mov
pop
xchg
or
scas
sbb
cmp
xor
jmp
mov
mov
xchg
jnp
inc
mov
xchg
loope
jo
jae
ljmp
orl
aam
jl
push
cld
xchg
mov
imul
pop
popf
fldt
inc
pop
and
inc
fwait
and
arpl
out
jnp
dec
mov
adc
and
loop
and
dec
lods
adc
fisubrl
pop
push
lods
idivb
les
sbb
xchg
mov
andb
sti
cld
xor
leave
add
pop
pop
std
loopne
add
int
push
mov
lods
arpl
ljmp
sub
lods
jge
dec
mov
xchg
gs
dec
mov
push
pop
jmp
adc
scas
and
in
or
xor
movsl
add
in
jmp
inc
add
daa
test
fwait
jbe
mov
jne
adc
xchg
inc
pop
xor
int
out
lds
scas
jle
xchg
mov
push
fmull
shlb
int
pop
popf
xchg
add
xlat
ss
iret
sub
jo
add
push
pusha
dec
and
lock
sbb
ljmp
test
sbb
pusha
daa
add
out
push
addb
sbb
add
test
or
push
push
or
ja
outsl
ret
fmuls
in
mov
sub
jo
lods
lret
in
push
jg
xchg
push
xchg
adc
or
push
mov
loop
aas
adc
sbb
xlat
xchg
inc
adc
lahf
mov
inc
stos
fisttps
and
sub
sti
add
pop
lret
mov
add
popa
adc
lret
sti
push
dec
push
dec
fs
add
cmp
pop
mov
ret
dec
rdtsc
ds
insb
cmp
mov
cmpsl
imul
push
lahf
mov
sbb
xchg
das
lea
mov
aas
xchg
call
adc
lret
enter
mov
or
push
xor
test
imul
in
insb
aam
in
inc
call
movsb
popf
jecxz
in
cld
mov
sub
repnz
stc
sub
pushl
rol
sub
jecxz
jnp
jns
push
dec
mov
ret
je
inc
in
or
test
or
push
adc
mov
mov
test
test
cmpb
mov
cmc
pop
leave
ljmp
sbb
sbb
test
out
mov
movsl
sub
sbb
ljmp
das
js,pn
fmulp
je
pop
dec
jmp
inc
push
rcrb
or
mov
or
andb
adc
pop
into
ja
pop
out
icebp
xor
pop
adc
jl
jmp
lock
fmulp
add
out
cmp
in
das
xchg
fmulp
and
cmp
shr
loop
jg
pop
jecxz
dec
inc
out
les
loop
adc
mov
stos
cmp
flds
loop
and
add
sbb
mov
cmp
cmp
in
ret
stc
data16
jg
push
or
ja
roll
mov
mov
adc
ret
iret
in
jne
int3
pop
std
mov
add
pop
mov
sarl
xlat
or
fwait
clc
lret
push
mull
adc
fnsave
int3
sub
cmp
push
mov
adc
fsubl
mov
dec
fsubrl
adc
mov
sub
andb
xchg
add
sbb
fidivrl
mov
std
fs
mov
das
mov
arpl
push
jmp
mov
xor
ds
std
push
push
sbb
or
popa
cmp
mov
clc
hlt
movsl
xorl
enter
pop
xchg
xchg
push
adc
adc
aas
movsb
fistps
test
sub
mov
adcl
scas
dec
lea
ljmp
pop
pushf
sahf
adc
addr16
pop
inc
rorb
inc
push
out
xor
rorl
push
xchg
jbe
jle
push
lds
mov
or
hlt
inc
pop
dec
xor
fisttpl
stc
and
dec
mov
inc
into
mov
jp
mov
pop
sbb
divl
pusha
dec
jle
jmp
imul
cwtl
fmuls
sub
inc
sbb
fisubs
fisttps
adcl
movsl
or
sub
test
lahf
out
push
roll
lods
dec
js
xor
mov
hlt
add
pushf
fcoms
mov
push
shlb
fnstcw
add
aaa
test
fs
cwtl
lock
fldt
mov
pushf
shl
push
xchg
and
mov
dec
clc
sub
xor
inc
pop
addr16
test
adc
push
aam
and
mov
iret
outsl
fidivs
push
mov
dec
iret
push
fnstsw
clc
inc
inc
mov
push
rorl
sbb
push
in
pusha
or
mov
sahf
loopne
and
cwtl
mov
xor
mov
outsb
faddl
mov
mov
xlat
xor
push
popf
sbb
and
in
push
xor
insl
pop
inc
add
mov
or
push
mov
or
xor
jbe
xchg
xchg
lea
enter
xchg
notl
leave
pop
and
prefetcht1
push
mov
and
sub
imul
add
sub
add
addl
nop
lret
mov
pop
or
and
out
dec
js
je
sbb
lcall
stc
aas
push
pop
xlat
sbb
aad
in
xchg
or
sub
push
push
cwtl
insl
bound
sbb
popa
mov
test
loopne
push
dec
loop
cli
push
stos
adc
pop
lahf
push
adc
add
ja
jmp
nop
or
repnz
mov
inc
iret
shrb
popa
stos
pop
test
mov
sbb
popa
enter
rcl
das
xchg
ret
push
sbb
mov
jl
loop
fcmovbe
fcoml
out
movsl
ret
jbe
fisttpll
dec
xor
loop
xor
or
jge
ljmp
push
lahf
imul
push
or
lods
jno
enter
and
and
jmp
in
mov
sbb
arpl
jae
stos
rcrl
test
jl
sub
shl
or
in
pop
aam
mull
lods
in
xor
xchg
and
pop
pop
jae
cmp
push
mov
cltd
insb
mov
dec
sub
mov
test
rorb
dec
xor
in
imul
mov
cmp
push
adc
arpl
pop
inc
jns
push
ja
jne
push
dec
cmp
je
mov
sub
jp
xchg
mov
rcll
fucomp
hlt
ss
stos
push
dec
xchg
cmova
push
scas
ds
sbb
or
cmp
push
mov
xchg
bt
into
xor
xlat
ds
out
out
mov
subl
nop
and
sbb
pop
add
push
sti
push
out
mov
rol
lcall
sub
jecxz
mov
mov
mov
iret
xchg
mov
or
cmp
sbb
pop
add
fwait
jo
insb
jnp
std
loopne
xchg
lds
mov
arpl
jnp
push
mov
arpl
pusha
test
addr16
pop
sti
add
jecxz
sub
orb
mov
int
and
orb
xorb
cs
xchg
in
xor
push
enter
inc
adc
rcr
out
xor
enter
add
inc
or
inc
stos
pop
adc
xchg
loope
pop
pop
rclb
lock
inc
rcrl
adc
or
outsl
cmp
xchg
ror
js
mov
fnsave
cltd
jle
in
or
gs
dec
and
cs
fists
dec
jo
addr16
loop
lds
inc
dec
mov
addr16
cmc
jle
mov
adc
xchg
cmp
cld
jp
mov
test
mov
mov
jb
pop
jb
inc
or
sbb
icebp
xchg
pop
dec
dec
pop
enter
insl
cmp
or
arpl
aam
xchg
pop
loop
incb
rcrl
dec
jp
in
xor
cmp
scas
mov
outsb
lret
addl
sbb
and
lea
lcall
add
mov
sbb
mov
mov
and
ljmp
xchg
dec
mov
push
loop
pop
dec
pop
cmp
enter
push
adc
out
mov
and
rorl
push
mov
ret
and
adc
pop
or
adc
int
movsb
sub
cmpsb
inc
cmc
int3
pop
xor
and
pop
insl
or
inc
imul
shl
adc
sbb
fwait
lahf
fiaddl
jge
ljmp
add
shl
fadds
cwtl
push
and
lods
push
mov
or
xor
notl
add
adcb
outsb
movsl
mov
je
repnz
pop
jg
sbb
movsb
ss
shrb
jecxz
jne
scas
or
mov
pop
dec
cmp
cmp
xchg
xchg
adc
int
add
sub
cltd
mov
xchg
cmpsb
movsl
push
scas
adc
add
and
hlt
out
out
xor
mov
outsl
imul
fdivl
pushf
std
roll
push
jnp
es
mov
notl
lcall
pop
aaa
xor
repz
jmp
repnz
mov
imul
xor
cmpsl
js
pop
or
sahf
stos
push
dec
idivl
leave
shrb
adc
cmpsl
sub
pop
imul
lods
push
pushf
ds
jno
arpl
loope
insl
or
sbb
divl
fsubs
loope
cltd
xchg
mov
and
adcl
aad
add
or
push
cmp
push
repz
insb
cld
icebp
cs
xlat
mov
pop
idivb
xor
sbb
cmp
inc
rcr
or
jl
push
and
dec
xor
inc
lret
aas
mov
adc
dec
jle
cmp
push
jecxz
mulb
sahf
push
das
roll
mov
add
ret
push
rolb
add
test
mov
mov
and
repz
mov
mov
or
add
gs
adc
out
jle
adc
daa
jbe
enter
test
loopne
and
mov
lods
call
std
xchg
pop
mov
pop
mov
inc
jno
sub
inc
jge
mov
lcall
out
pop
cmp
lret
rcrb
mov
mov
inc
mov
loopne
and
mov
and
dec
dec
bound
enter
sub
shlb
sub
cwtl
bound
inc
mov
mov
mov
sub
mov
push
das
call
pop
jo
push
outsb
jl
jmp
cli
mov
inc
jle
pop
js,pn
inc
imul
mov
orb
or
and
dec
in
test
jmp
scas
or
cld
sbbb
adc
jmp
sti
enter
repnz
mov
fstp
push
cmp
mov
scas
out
push
in
xlat
jns
cltd
push
xor
jnp
and
in
inc
pop
pop
adc
aas
fwait
dec
dec
inc
push
mov
arpl
cs
push
les
int
js
mov
lret
je
jbe
lea
and
add
and
test
jl
out
outsl
mov
adc
inc
mov
lcall
mov
add
xor
loopne
xor
aaa
dec
enter
test
les
push
cmp
dec
mov
inc
mov
xchg
nop
stos
out
push
daa
sub
pop
or
pop
cmpsb
std
loop
cmp
imul
sbb
push
xor
adc
jg
js
hlt
xor
imul
mov
fucomp
mov
cmp
mov
mov
lods
imul
adc
ficoml
dec
je
sbb
jno
mov
pop
stc
jnp
fcoms
lods
push
shrb
outsl
add
jno
cmpsb
fstps
jle
pusha
repz
push
jg
pop
and
add
xor
cld
push
and
lock
or
pop
xor
or
es
rcrb
jp
jge
adc
orb
pop
xchg
and
in
push
xlat
sbb
pop
stc
xchg
sub
dec
push
xchg
hlt
push
shl
mov
je
imul
lea
mov
jp
gs
push
pusha
add
pop
dec
and
dec
jbe
inc
dec
out
sub
xchg
call
out
jg
imul
xchg
lds
fidivl
mov
sub
nop
push
pop
dec
pusha
dec
mov
inc
mov
sbb
faddl
lock
int3
cmp
inc
in
lret
repz
pop
xor
push
jp
dec
jno
or
dec
in
push
lret
das
xor
test
mov
pushf
sarb
or
mov
loopne
sub
push
push
pusha
mov
notb
ret
das
adc
or
sbb
lret
in
cmp
and
int
mov
xchg
loope
cmp
pusha
jp
push
sub
xchg
fimull
lea
mov
pushf
icebp
pop
xor
jge
addr16
mov
or
mov
push
xchg
or
mov
das
mov
sbb
adc
roll
dec
push
lea
pop
xor
inc
push
sar
out
std
jbe
lret
sub
lods
add
xchg
lods
mov
and
adc
sarb
jge
movl
cs
sbb
xchg
adc
and
mov
mov
inc
test
ljmp
std
pop
jle
jns
or
imul
lret
cmpl
fldt
std
push
sarl
mov
mov
mov
sahf
sar
fwait
cli
sbb
sbb
movsb
das
mov
enter
into
ret
push
stos
imul
mov
fwait
sbb
sbb
mov
mov
mov
and
xchg
out
add
cmp
mulb
ds
out
arpl
cmc
mov
cld
xor
sub
sub
inc
lahf
dec
jge
popa
pop
shlb
add
sbb
fiadds
cmpsb
add
repz
bound
or
stos
pop
xor
push
jne
idivb
dec
loope
dec
inc
xor
mov
cmc
adc
mov
movsb
fdivr
and
mov
mov
and
bound
inc
mov
out
test
xor
lcall
inc
popa
sahf
dec
imulb
sti
or
test
xor
inc
pusha
pop
jmp
mov
sbb
fldcw
push
nop
inc
mov
lret
je
iret
xchg
inc
je
ja
ds
decb
inc
ficoms
xor
loop
dec
xor
jne
sbb
sub
pop
fnstsw
gs
push
jae
mov
rolb
xchg
pop
mov
pop
ret
inc
dec
push
cmp
lea
jmp
adc
push
pop
cmc
sbb
and
mov
loop
fisubs
scas
jb
jp
jno
pop
mov
pusha
lret
std
out
sbbb
jge
adc
add
inc
es
adc
or
test
cmp
dec
in
add
rcrb
mov
dec
out
mov
xchg
push
ljmp
add
mov
jle
pop
aad
enter
les
inc
sub
leave
add
sbb
dec
sbb
movsb
lcall
sub
push
lds
dec
lods
mov
cmc
hlt
xor
cs
mov
sbb
inc
leave
frstor
stc
mov
ds
jp
fistl
push
insl
mov
out
stos
jp
xchg
jne
xor
jae
arpl
and
adc
into
gs
out
hlt
lods
aaa
loope
or
add
mov
or
sbb
xchg
sbb
add
cli
sbb
push
mov
fildl
je
arpl
cmp
fstpt
mov
pop
mov
pop
jbe
dec
lret
cmp
push
inc
pop
aad
loopne
push
push
mov
dec
sub
stos
in
popf
jns
dec
cmp
mov
shrl
mov
ljmp
int
ljmp
out
pop
lret
movsl
cltd
push
mov
xor
pop
test
roll
sbb
leave
mov
inc
cli
int
cmp
in
jmp
addr16
pop
fcmovu
mov
push
gs
mov
daa
mov
xor
cmpb
xchg
mov
pop
dec
pop
adc
push
mulb
mov
xor
push
xor
sub
adc
and
insl
icebp
jecxz
rclb
cwtl
pop
in
rorb
enter
adc
push
fstpl
jbe,pn
pushf
xchg
mov
xlat
shlb
pusha
repnz
pusha
push
es
or
lret
ret
icebp
jns
imul
and
mov
cmp
shlb
mov
dec
out
sub
pop
jno
pop
sti
sarl
adc
jle
ret
inc
mov
sub
and
aad
push
mov
xor
fldcw
dec
idiv
es
ljmp
sar
sbb
jno
xlat
inc
test
inc
fldenv
cmp
mov
dec
pop
and
cmp
insb
mov
lock
mov
sbb
pop
int3
mov
push
xor
int
pop
xor
push
mov
incl
ss
add
or
loop
inc
push
out
jae
out
xlat
ja,pt
mov
push
sub
rcll
clc
cmp
out
flds
and
andb
push
jp
jae
dec
jmp
push
movsl
jo
negb
push
fstpt
jae
or
adc
cmp
sahf
sbb
jge
and
rcrl
test
cmp
imul
das
cmpsb
out
sbb
pop
movsl
adc
mov
and
test
fstps
ljmp
pusha
sbb
sbb
outsb
dec
gs
loope
pop
andl
add
mov
jmp
pop
sbb
das
cli
in
cmpsl
inc
mov
jbe
pop
lret
inc
sub
sub
xchg
dec
inc
lea
out
rcrb
sti
mov
mov
dec
out
pop
jp
lock
sbb
or
mov
pop
jns
xor
je
out
sahf
imul
ret
nop
and
push
lods
repnz
mov
pop
mov
cmp
and
adc
mov
adc
iret
stc
test
pusha
cmc
loop
mov
insl
adc
leave
xchg
in
adc
push
cld
jns
xlat
in
ret
xor
xchg
int3
push
lret
arpl
mov
push
xchg
cmp
sti
into
inc
pop
xchg
add
adc
loop
dec
or
icebp
cmp
in
pop
das
sub
jmp
std
loop
jge
xorb
movsl
lcall
stc
icebp
push
mulb
inc
sub
ret
mov
xchg
inc
jae
stc
cmc
roll
js
mov
jg
and
xchg
cltd
push
out
dec
xchg
fldl
cmp
popa
jae
inc
int
out
out
cmpsl
lds
stc
popf
inc
fbstp
lret
imull
stos
xor
repnz
ret
in
push
xor
cltd
inc
negl
adc
popa
in
sahf
add
cld
cmpsl
pop
jge
jl
jno
inc
jecxz
mov
dec
imull
pop
loopne
sti
cld
jae
sub
ret
shlb
jmp
adc
xchg
sar
dec
pop
mov
lahf
int3
xchg
lods
pusha
jne
dec
mov
pop
test
cwtl
jge
imul
push
ds
pop
jae
pop
or
ret
inc
xor
gs
xchg
adcb
out
adc
jge
out
jle
mov
lahf
int3
xor
cli
dec
push
loop
push
cmp
xor
adc
fsub
dec
adc
fidivs
aas
nop
pop
jns
mov
inc
sbb
int3
gs
mov
xchg
gs
sub
inc
push
jno
mov
mov
adc
xor
xor
inc
mov
ds
add
int
out
les
sub
xchg
stc
mov
popa
xor
scas
lret
jmp
mov
arpl
imul
xor
pusha
sub
rolb
in
lret
mov
inc
mov
mov
pop
inc
sbb
stos
push
nop
repz
push
mov
rcl
test
xor
scas
push
lea
dec
xchg
shlb
jb
xchg
test
imul
mov
lods
mov
or
mov
sbb
cmp
out
inc
mov
sbb
lock
mov
and
inc
jmp
mov
lcall
mov
mov
sbb
jecxz
rorl
and
or
mov
cmpsl
jle
bound
sbb
popf
xor
and
adc
mov
inc
sbb
aad
dec
xchg
pop
insl
sub
popa
jle
mov
cmp
in
pop
loop
into
in
cmp
push
mull
push
sbb
inc
pushf
in
fstl
sub
dec
lahf
inc
ss
out
ret
dec
mov
add
fists
mov
dec
shll
mov
cmp
popa
mov
insl
and
cmpsl
fcoml
cmp
je
dec
daa
shr
cwtl
nop
je
shll
or
bound
dec
sub
jnp,pt
ret
adc
push
push
cs
dec
push
mov
stos
lret
icebp
stos
sub
sbb
notl
jecxz
xchg
pop
and
dec
inc
repnz
cld
pop
jns
leave
push
adc
ret
dec
xchg
mov
jbe
mov
inc
pop
stos
jle
in
orl
adc
lods
das
out
in
clc
mov
ret
imul
in
sbb
loope
lret
cmp
ret
adc
nop
movzwl
sarb
scas
inc
insl
dec
fs
mov
push
mov
cmp
xchg
notb
xlat
fstps
iret
loopne
push
sbb
into
pop
pop
mov
movsb
jno
xchg
jae
iret
xor
das
subl
ficompl
and
cmpsl
fmul
push
or
popl
dec
jmp
es
mov
fildl
dec
addb
out
movsb
pop
in
xchg
adc
push
xor
cmp
sbb
xchg
jle
cmp
lods
xchg
mov
ret
subl
lcall
fcmovb
cltd
adc
pop
nop
cmpsb
jnp
iret
or
lret
inc
aaa
and
fstpt
scas
jo
imul
lock
xlat
lock
xor
fdivs
push
mov
pop
rcl
rcr
and
daa
sbb
iret
jge
loope
jl
mov
pop
push
or
jbe
cmc
icebp
fidivrl
mov
and
xor
sbb
je
jb
push
les
rsm
pop
sarl
cmp
cld
xchg
pop
mov
xor
inc
mov
ljmp
orb
cwtl
mov
sbb
xchg
and
stc
fmuls
mov
out
mov
stos
out
sub
cmp
mov
sub
xchg
xchg
push
push
shl
popa
ljmp
pop
ss
push
out
push
add
daa
fadd
loope
add
push
std
cmp
pop
popf
xor
dec
xchg
imul
and
dec
mov
fsubrp
push
inc
sub
xor
fiadds
cmp
sub
inc
lock
loopne
xor
js
dec
mov
pop
aad
mov
out
add
mov
cmpsb
inc
push
add
outsl
aaa
cld
mov
mov
incl
add
imul
loop
xchg
mov
or
or
inc
sub
test
aad
dec
fadds
sub
jbe
stos
aam
out
imul
in
mov
imul
shr
pop
test
jp
jo
lock
imul
sti
data16
jle
imul
imull
stos
scas
stos
jbe
in
or
sub
rol
sahf
dec
lods
mov
xchg
mov
aad
enter
dec
add
int3
add
imul
iret
and
or
imul
clc
push
cs
clc
xchg
dec
mov
cmp
xor
faddl
aam
sbb
push
sbb
loope
xchg
pop
sarl
mov
sub
sub
test
dec
push
sbb
sbb
ljmp
push
imul
mov
sbb
stc
test
rcrb
mov
out
mov
imul
adc
xchg
test
push
adc
out
aam
negl
in
push
and
push
jg
pop
xor
push
pushf
sbbb
test
pop
rclb
insl
es
fwait
jnp
add
sbb
push
mulb
stc
inc
sahf
sarb
add
inc
cmp
push
ret
aam
dec
push
pop
push
fwait
xor
jo
adc
divl
dec
sub
jl
test
cmp
push
or
dec
pop
push
adc
je
dec
out
pusha
in
xor
jbe
fsubl
pop
pop
inc
lea
pusha
and
sti
cmp
in
adc
lock
aaa
mov
jae
mov
and
jnp
ja
movsb
lods
jp
je
loop
add
push
andl
hlt
push
dec
dec
enter
and
std
push
in
pop
sub
mov
daa
xchg
rorl
icebp
jns
hlt
mov
pop
dec
dec
adc
sahf
or
cmp
in
adc
imul
push
div
jo,pt
pop
push
inc
arpl
outsb
lods
mov
xor
popl
movsb
lahf
es
xchg
sbb
bound
shlb
add
movsb
aaa
adc
sub
lods
int
popf
rcrb
cmp
inc
in
lret
inc
jo
xor
dec
mov
sub
inc
sbb
clc
popa
jne
xchg
mov
fldenv
add
sub
ljmp
shr
ja
shll
mov
mov
and
and
sbb
stos
jbe
mov
push
mov
aas
dec
addb
pop
scas
sarl
sbb
add
cmp
xor
jno
and
repz
data16
loop
lret
cmp
cmp
enter
cmp
pop
getsec
fdivrs
into
adc
repz
inc
loop
inc
lds
data16
popa
pop
enter
add
push
in
imul
fdivs
add
lcall
lods
test
push
jae
mov
int
pop
hlt
rol
adc
ds
iret
or
test
cmp
pop
or
or
jecxz
adc
inc
test
outsl
sub
mov
scas
in
mov
frstor
mov
fs
int
dec
test
pop
xlat
sbb
pop
mull
pop
hlt
out
xor
pop
jmp
sbb
out
or
mov
int
mov
dec
xchg
or
clc
cld
lret
pop
insl
ss
push
push
cmp
ja
lock
inc
jbe
dec
mov
icebp
cltd
inc
fisubrs
addr16
fsubs
mov
and
lock
icebp
adc
in
test
sbb
mov
inc
fisttpl
lods
loopne
ficoml
cmpsb
pushf
fisttpll
xchg
repnz
icebp
aam
fsubs
dec
mov
jge
sub
jns
cmpsl
aam
cli
test
fs
inc
aaa
mov
mov
push
mov
pushf
cli
fistps
cmp
cmc
jae
jns
xchg
jnp
push
jg
test
outsb
shlb
or
push
insl
add
aad
xor
aam
test
adc
sbb
fwait
push
add
dec
inc
xor
jge
adc
int
push
jns
cmp
outsl
mov
or
ret
fmull
inc
repnz
dec
out
icebp
mov
pop
fimuls
xor
in
out
outsb
push
push
xor
pop
xchg
loope
xchg
incw
sbb
mov
insl
adc
vshufpd
mov
mov
ja
iret
loope
mov
cli
outsl
insb
dec
pop
xchg
mov
jb
dec
jnp
cwtl
xchg
pop
push
scas
mov
xchg
pop
outsl
test
in
dec
sar
fisubs
aad
mov
call
mov
and
pop
and
xchg
out
and
insb
jnp
xor
daa
jns
inc
loop
ljmp
xchg
insl
fistl
xor
jnp
loope
popa
sub
or
adc
mov
sbbb
mov
imul
cmpsl
xor
sti
aas
cmp
pusha
cmp
pop
jb
jno
scas
inc
or
outsl
bnd
in
jmp
in
pop
sub
dec
jo
add
push
hlt
add
into
or
cs
mov
add
cltd
mov
fstps
sub
xchg
push
push
sbb
ljmp
pop
imul
popa
xlat
lret
outsl
cmp
and
mov
mov
or
xor
and
sub
loope
insl
push
addr16
mov
mov
push
push
rol
inc
xchg
or
sbb
mov
int
mov
push
pushf
mov
cltd
negl
xor
cltd
dec
fs
and
ret
cmpb
fwait
jb
add
cmpsl
hlt
lret
sti
jp
inc
out
fistpll
lcall
addb
fisttpl
test
cmpsb
and
cld
imul
push
jmp
rorl
mov
jne
aam
test
xchg
adc
out
cmp
outsb
mov
out
out
pop
xor
icebp
add
sub
popf
shll
ljmp
lahf
aaa
add
xor
roll
sbb
pop
sub
jg
cmp
scas
dec
mov
ret
jmp
pop
or
repnz
jg
jge
fisubl
mov
imul
jge
cmp
jge
adc
outsl
arpl
and
dec
repz
pop
lea
dec
bnd
out
push
inc
xchg
mov
leave
sub
cltd
or
xchg
scas
jmp
xor
mov
fldcw
std
idivl
mov
in
stos
inc
ret
mov
dec
call
sbb
or
pop
and
cmp
sub
xor
adc
movsl
pop
inc
sub
push
sbb
sahf
mov
jno
in
mov
mov
mov
rcrb
xor
ljmp
inc
xchg
push
lahf
scas
dec
add
jmp
mov
jbe
push
cmp
pushf
add
sbb
pop
movsb
fwait
std
sub
mov
aaa
leave
sub
nop
fnsave
xchg
push
ss
jmp
int
or
cmc
and
pop
imul
add
push
pop
xchg
scas
mov
inc
xchg
movsl
mov
insb
mov
outsb
pop
adc
fnstenv
push
push
xchg
mov
add
fisubrs
mov
ret
xor
mov
jns
sub
stos
cs
sbb
jnp
sahf
or
jg
sahf
fdivrp
xorl
or
shl
rcl
mov
fistl
push
lcall
mov
repnz
insl
inc
inc
mov
pop
pop
xchg
mov
loop
push
mov
adc
imul
jo
pusha
jns
rolb
outsl
stos
ss
sub
jle
jne
pop
adc
mov
pop
lret
arpl
sub
rol
test
fs
shrb
pusha
popa
addb
and
daa
mov
int3
jg
mov
jbe
cwtl
inc
push
inc
push
repnz
pop
pop
loope
push
xchg
clc
or
push
mov
and
rorb
push
xchg
rcrb
sbb
cmc
ret
js
ds
lods
jl
xchg
fwait
movsb
icebp
fmul
jge
mov
cmp
lret
shr
adc
js
jbe
cmp
fcomp
push
lcall
ja
sti
jge
rolb
xchg
ret
movsl
stos
mov
inc
movsl
dec
dec
mov
dec
lods
cltd
lods
cmp
push
jl
dec
in
push
inc
stos
push
push
inc
mov
lods
mov
movsb
push
bound
fsubs
nop
mov
jge
dec
mov
add
arpl
mov
mov
sub
pop
ror
fcoms
lods
sbb
xchg
push
push
mov
pop
and
fldenv
sub
pop
clc
pop
aaa
cmp
shll
add
fists
sbb
sarb
test
xor
lock
ja
xor
inc
adc
cmp
lahf
jecxz
filds
les
roll
je
push
stos
dec
sti
mov
lds
out
or
and
sbb
and
sub
push
push
clc
enter
js
js
xchg
aaa
xor
mov
pop
fucomi
sbb
add
pop
ffree
jg
ds
cmp
push
nop
pop
jb
sub
xor
es
jns
cmc
repz
out
loopne
fisubs
sbb
stos
cmp
nop
mov
outsl
out
test
ss
ret
cmpsb
loopne
xor
mov
popf
sbb
addr16
jmp
push
lcall
mov
mov
sbb
or
push
add
sbb
adc
xchg
hlt
fstl
call
pop
fmuls
jnp
repnz
mov
mov
mov
sbb
std
into
and
cmp
lods
pop
in
push
push
mov
clc
out
popf
out
xchg
cmp
aad
mov
add
xchg
add
push
out
imul
punpckhdq
ja
scas
pushf
insb
add
test
push
lret
xchg
sub
inc
stos
repnz
push
stos
push
xor
lods
adc
stc
xor
jnp
scas
in
dec
pusha
je,pn
in
loop
pop
cmpsb
mov
xlat
or
mov
jecxz
gs
mov
lods
inc
adc
xchg
shlb
pop
movsb
mov
imul
lock
cmpsl
jns
pop
xor
pop
ds
aas
mov
inc
xchg
mov
or
mov
test
push
sbb
shlb
adc
mov
or
inc
or
ja,pt
je
or
xchg
inc
add
mov
hlt
or
test
push
xor
in
add
dec
pop
in
mov
mov
sbb
or
xchg
pop
or
cld
adc
and
add
add
add
xchg
cmp
add
pusha
add
adc
add
aas
xor
dec
xor
pop
xor
