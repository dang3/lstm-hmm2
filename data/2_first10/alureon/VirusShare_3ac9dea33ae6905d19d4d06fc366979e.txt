mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
mov
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
not
imul
inc
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
push
call
movl
call
mov
push
call
pop
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
push
push
push
mov
add
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
mov
test
je
xor
push
call
mov
push
push
call
mov
call
add
mov
cmp
je
cmpl
jne
mov
push
call
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
xor
pushl
mov
pushl
pushl
pushl
call
mov
cmp
jne
push
call
cmp
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
mov
rorb
shlb
sbb
add
loope
and
and
nop
mov
inc
xor
cmc
rorl
les
clc
lods
jnp
xor
add
cmp
roll
loop
mov
out
adc
sub
add
out
and
adc
pop
mov
ret
jl
xchg
xchg
adc
cmp
adc
mov
mov
out
cld
xor
and
icebp
xor
iret
sbbl
bound
jmp
js
test
sbb
test
pop
push
xchg
mov
add
push
cmp
insl
push
sbb
add
jne
rcr
shlb
lret
mov
jb
mov
add
dec
mov
and
dec
pop
pop
shlb
and
ljmp
mov
in
push
dec
aad
mov
add
fsub
push
jge
mov
add
adc
repnz
pop
out
jbe
dec
sti
lock
jno
je
adc
aaa
add
add
add
arpl
mov
mov
mov
pop
in
lds
add
push
dec
xchg
jle
or
arpl
push
cmpsl
test
bound
fisubs
jg
loopne
cmp
lds
jmp
jp
lcall
cmpsl
inc
mov
jnp
aaa
test
inc
push
movsb
shrl
sub
aaa
add
lahf
out
mov
sub
cwtl
jg
pop
lods
sub
test
mov
jne
cmp
in
rolb
pop
rol
in
push
je
rcl
and
out
out
cmpsl
repnz
sti
xor
pop
xor
bound
xor
ficoms
inc
fstps
jbe
adc
out
fidivs
push
sub
fsubrl
mov
xchg
add
fnstcw
and
repz
stc
jg
dec
sub
data16
les
xchg
dec
mov
pop
ror
aam
dec
popa
fstpt
jp
mov
gs
fstpt
ljmp
and
daa
and
hlt
and
xor
rclb
mov
mov
adc
jecxz
pop
sub
and
fisttpll
outsb
pop
push
cwtl
rorl
xchg
xor
pop
add
movsb
xorl
repnz
mov
shrl
and
inc
cs
in
cmc
cld
mov
jne
call
push
mov
xchg
xor
and
test
fcomps
sub
jp
call
xchg
jmp
subl
xchg
bound
pusha
xchg
sub
test
loopne
jmp
std
mov
mov
aas
push
lcall
jno,pt
int
jecxz
scas
sbb
fisttpl
sub
cwtl
data16
mov
or
sti
push
lret
data16
jmp
aas
jmp
xor
adc
sub
adc
xchg
addb
cmp
xor
push
mov
lods
fnstcw
push
js
pop
adc
adc
sub
stc
xchg
add
add
int
andb
mov
incb
cli
push
sbb
mov
mov
daa
mov
ret
cmc
filds
mov
jmp
adc
sbb
dec
int3
jno
inc
in
ret
mov
fidivrl
scas
cmp
mov
insb
inc
and
lea
xor
pop
daa
cmc
or
jg
jmp
in
and
push
adc
mov
jbe
xor
cmpsl
jb
mov
add
add
push
rcll
xchg
pop
out
stos
jnp
sbb
mov
inc
pop
xchg
push
pop
int
and
mov
sti
add
add
jmp
xchg
rorb
jp
test
outsb
jge
push
jne
mov
cltd
mov
int3
or
aam
sbb
cli
and
mov
std
mov
scas
cmc
add
popa
jl
lea
dec
ds
in
xchg
hlt
mov
leave
adc
jbe
mov
mov
rcr
inc
adc
xor
inc
inc
push
add
stos
fs
test
mov
rol
hlt
mov
mov
mov
cltd
fdivrl
dec
fisttpll
inc
dec
pop
mov
push
push
aad
in
dec
dec
xor
push
mov
mov
nop
xor
cltd
lcall
repnz
xchg
int3
xchg
or
and
aas
mov
inc
xor
fucomip
inc
push
pop
push
xchg
mov
cld
sahf
in
or
addb
mov
and
mov
jno
dec
mov
cs
xor
outsl
in
rcll
jle
loope
xor
xor
push
cli
sbbb
mov
int
jmp
pop
mov
mov
iret
sbb
mov
dec
add
add
adc
jl
out
sbb
je
nop
jae
mov
push
bound
jl
pushf
test
sbb
mov
dec
ds
adc
popa
xor
ret
aaa
test
push
lea
mov
dec
in
or
je
add
les
cmp
or
pushf
je
xor
pop
jbe
and
cmc
and
scas
inc
and
faddl
add
ror
daa
stos
cmp
dec
dec
mov
movsb
ret
mov
mov
pop
cwtl
cmc
cs
inc
jnp
jmp
push
scas
xor
or
movsb
pop
and
xor
xchg
les
push
sbb
lcall
rcrb
sbb
shl
enter
inc
mov
cs
das
xchg
jl
cld
xor
fcoml
push
push
testl
dec
push
scas
cmpsb
mov
lcall
push
mov
cmp
daa
mov
push
jmp
rcll
mov
je
cs
in
dec
inc
stos
lcall
jns
les
icebp
hlt
fdivrl
mov
jne
mov
ds
xor
shrb
inc
push
stos
js
dec
adc
ficomps
test
hlt
mov
mull
test
pcmpgtb
cwtl
repnz
adc
testl
lcall
enter
cmp
add
cmp
inc
mov
loopne
pop
test
lcall
enter
inc
loopne
sbb
xor
xchg
add
dec
fildll
mov
jb
or
push
xor
push
int
dec
out
pusha
leave
dec
clc
popa
das
sub
cltd
imul
cmp
and
push
aam
shll
or
aas
divb
inc
test
outsb
es
cwtl
jle
inc
mov
inc
stos
xor
int
add
jae
or
or
adc
push
mov
push
in
cmp
orl
ja
cld
in
in
xchg
lods
in
and
mov
push
or
pop
fmull
mov
pushf
mov
sbb
push
push
out
loopne
stc
ret
xchg
sbb
loop
faddl
adc
and
mov
xor
loop
lret
ds
xor
add
sub
andl
adc
mov
sbbl
mov
test
and
add
es
sub
adc
cmp
mov
xor
or
inc
js,pn
jg
cmp
jle
push
inc
inc
push
stos
mov
or
stos
push
xlat
fs
iret
stos
mov
xorl
lahf
mov
or
enter
mov
test
xor
add
outsl
sbb
mov
mov
and
jns
cmp
sbb
leave
or
nop
cltd
imul
daa
pop
adc
fidivrs
hlt
push
popa
icebp
adc
adc
pop
mov
sbb
rol
xchg
sarl
arpl
test
mov
dec
divl
and
jle
iret
xchg
sub
mov
loopne
mov
icebp
sbb
inc
inc
sbb
push
popa
das
imulb
cs
jmp
adc
push
xchg
or
cmpl
lret
loope
sbb
cmp
test
pop
hlt
iret
aad
mov
sarl
mov
loope
call
popa
mov
test
mov
test
sbb
xchg
push
adc
xchg
leave
lods
imul
pop
ja
sti
insb
sarb
pop
mov
mov
xor
sbb
add
cli
into
xor
add
sbb
lahf
cltd
push
cli
mov
negl
enter
inc
xor
hlt
loop
mov
aaa
xchg
xor
out
ud2
stos
jo
lret
mov
xchg
mov
lods
aam
lret
cmp
cwtl
repz
cld
mov
inc
sti
inc
xor
imulb
mov
or
push
dec
xor
lds
and
jmp
inc
adc
ss
push
push
sub
dec
repz
xlat
icebp
sub
fwait
daa
push
add
aad
xchg
pop
sbb
pop
ret
jmp
dec
pop
testl
fimull
pop
outsl
xchg
cmp
loope
push
jnp
jl
add
movsb
jns
and
lea
pop
adc
pop
dec
rcr
lods
incl
imul
sbb
add
iret
xchg
sbb
sub
ret
aaa
xchg
je
and
cmp
clc
dec
fcmovne
enter
imul
lods
adc
jae
outsl
sub
xor
add
ud0
cli
fistps
test
cmp
cmp
pop
lret
frstpm(287
scas
jge
shll
mov
mov
scas
inc
nop
sbb
and
shlb
shlb
pop
stos
add
dec
movsl
lea
mov
pop
dec
pushf
ss
sar
inc
in
xchg
add
or
es
or
push
sti
cmp
xchg
not
xor
jns
cmp
loop
repnz
out
xor
aas
mov
dec
test
jge
cld
mov
pop
cmp
daa
pop
test
data16
jmp
shll
mov
jle
loope
jp
lcall
xor
cli
sbb
push
inc
xchg
call
mov
lock
iret
pop
in
test
adc
fdivrs
lcall
icebp
sbb
push
cld
xor
into
xchg
push
xor
js
adc
mov
clc
sub
out
dec
lcall
ret
mov
fs
mov
jp
iret
push
mov
divps
mov
stos
xor
fstps
add
arpl
cmp
and
mov
sbb
jge
and
bound
cs
movsb
fnsetpm(287
fwait
jg
ljmp
mov
in
jg
dec
rep
adc
mov
insb
dec
mov
aaa
or
sub
test
inc
outsb
add
inc
dec
mov
push
cmp
inc
lods
sub
pop
ja
cwtl
stos
repz
sub
xchg
add
add
bound
lret
ficoms
or
sub
cwtl
sbb
loopne
cli
mov
mov
dec
imul
push
mov
dec
out
jl
insb
ss
arpl
adc
lea
mov
cmp
js
pop
and
out
nop
arpl
xchg
std
mov
inc
sbb
xor
je
mov
or
mov
lcall
ficoml
dec
pop
loop
leave
roll
pop
dec
loop
repnz
jmp
inc
dec
or
insb
lods
stc
test
imul
xor
inc
scas
cmp
push
addr16
jmp
shlb
push
aaa
xchg
add
arpl
cmp
repnz
pusha
jmp
fsubl
xor
adc
or
push
mov
dec
scas
inc
jl
pop
mov
add
mov
ret
jae
push
out
push
sbb
push
loope
sub
in
ja
push
add
call
rolb
add
into
pop
daa
or
mulb
push
mov
xchg
outsl
mov
jb
mov
imul
xchg
movsb
jns
mov
ret
rcll
mov
notl
bound
xor
pop
int3
sub
pop
xchg
outsb
out
xor
and
call
fdivl
sarl
dec
sub
cmp
sbb
xchg
cmp
and
dec
daa
add
mov
hlt
inc
pop
shr
push
sbb
add
mov
push
xchg
jmp
mov
push
aaa
cmp
xor
sahf
imul
push
xor
adc
xor
call
cmc
jne
mov
mov
stc
sarb
aaa
loop
push
jne
cmpb
or
lds
jp
dec
fldenv
adc
test
cmp
mov
in
je
dec
dec
cltd
sbb
push
add
add
cmp
cmpsl
jae
and
jle
xor
jecxz
enter
in
pop
push
mov
outsb
mov
out
je
loope
dec
lods
pop
pop
add
arpl
outsl
add
rcrb
mov
sbb
ljmp
int3
mov
or
push
xchg
fwait
lret
cmp
push
jo
lods
int3
test
cmp
push
dec
bswap
pop
sti
jmp
add
dec
lods
out
push
mov
add
push
push
out
or
ljmp
mov
jl
mov
dec
and
mov
mov
ljmp
push
nop
xchg
inc
xchg
in
ret
inc
push
add
shlb
aam
jb
add
or
out
sbb
hlt
imul
mov
imul
mov
xor
inc
les
sub
jg
gs
add
add
pop
add
cli
add
mov
roll
mov
stos
call
lods
sub
int3
pop
pop
pusha
add
lds
lcall
fstpl
sbb
fstpt
jnp
xchg
repnz
jge
in
cmp
sahf
lret
adc
fists
lds
out
mov
sub
test
mov
daa
push
cli
mov
sbb
mov
movsl
cli
ret
dec
push
es
add
daa
mov
sub
pop
sti
jmp
loope
push
push
nop
or
mov
inc
or
lret
loopne
push
imul
xor
aaa
push
inc
fisttpll
out
and
lods
cmp
xor
arpl
aas
adc
addr16
mov
sbbb
imul
loop
out
and
call
or
sahf
mov
imul
and
xorl
jbe
xchg
imul
out
cld
inc
and
stos
stos
mov
mov
cwtl
nop
cmp
js
mov
xor
icebp
cmp
nop
rclb
push
into
outsb
push
push
mov
movsl
fiaddl
adc
jmp
sub
lock
popl
pop
sub
scas
aas
test
rorl
sub
mov
lahf
inc
je
cmpsl
mov
adc
add
pop
xchg
imul
cmpsl
in
test
cmp
movsl
push
stos
fucomp
and
adc
iret
insl
shrl
iret
call
push
xchg
shlb
lock
cmp
push
mov
repnz
fdivr
xchg
sub
daa
add
jnp
mov
mov
inc
out
js
stc
push
xor
insb
dec
pop
sbb
add
push
or
lea
in
add
daa
icebp
cmp
mov
jno
and
aad
mov
pop
insb
cmpsb
in
sbb
arpl
push
rcll
repnz
mov
pop
xor
cmc
xor
jbe
les
mov
xor
stos
push
jne
xlat
pop
nop
xchg
and
sar
push
int
test
cmpsb
xchg
adc
add
in
sbbl
lods
mov
push
cwtl
inc
stos
push
push
add
fucomi
loope
std
jmp
mov
stos
add
or
mov
pop
cmpsl
xor
jo
sahf
sbb
add
out
std
dec
mov
mov
lds
mov
push
cld
pop
jp
push
mov
or
das
inc
pop
push
icebp
js
push
enter
test
adc
mov
xorl
pushf
mov
mov
xor
sbb
cmp
cwtl
jb
mov
stos
dec
mov
jae
adc
jnp
leave
shrb
sbb
ja
cmp
add
jnp
cli
stos
mov
mov
or
mov
xchg
sbb
mov
fistpll
pushf
or
cmpsb
aaa
rcrb
inc
pop
mov
lds
lods
rcr
je
add
jle
mov
pushf
arpl
pop
popa
add
fwait
test
xchg
or
test
or
loopne
sbb
std
pop
ret
popa
push
scas
out
mov
and
das
cmp
je
nop
mov
mull
js
add
lret
mov
int
sub
add
pop
jb
imull
clc
ds
call
jp
scas
adc
inc
or
cmp
xlat
xchg
mov
push
lea
pop
xor
fiaddl
ret
jp
xchg
pop
cmpsl
sbb
cmpsb
jb
ljmp
insl
sub
addb
xchg
mov
dec
mov
test
push
stc
hlt
adc
lcall
fnstcw
shl
jl
xchg
add
add
test
lcall
xor
out
movsb
xor
aaa
jbe
fwait
loop
xchg
addr16
xlat
std
mov
cmp
adc
cmpsb
out
loop
add
cltd
mov
popa
jo
insb
js
sarb
stos
xchg
lods
cmpsb
mov
mov
leave
xor
out
subb
loopne
pop
and
cmp
cmp
or
aad
add
cwtl
psrlq
mov
sbb
jbe
lds
dec
fsts
add
sbb
and
scas
lret
in
inc
js
mov
xchg
mov
mov
pop
cmpsb
sbb
rcrb
xor
lds
outsb
out
mov
loopew
xchg
out
mov
cwtl
scas
sub
daa
cmp
test
in
push
sbb
jbe
jne
jbe
cmp
divl
add
add
add
add
adc
push
adc
lea
add
andb
pop
ljmp
hlt
dec
fidivs
daa
mov
mov
or
and
addb
dec
aas
outsb
ds
mov
insb
dec
mov
jecxz
mov
cmp
jecxz
fcmovbe
pop
cwtl
and
adc
and
daa
jbe
mov
pushf
jmp
or
ret
xorb
add
dec
filds
inc
sbbb
imul
mov
imulb
imul
xorb
lret
adc
mov
mov
xchg
mov
adc
imul
outsb
lock
or
cvtdq2ps
popf
xchg
js
inc
lea
fildll
or
sub
test
sub
ret
les
shll
fwait
xor
into
nopl
add
jns
sub
fs
sbb
xchg
sbb
ret
push
add
dec
cli
ret
bound
pop
mov
add
cmp
mov
xchg
daa
por
adc
or
testl
sub
pop
ljmp
imul
test
cmp
cs
mov
adc
push
sbb
xchg
xchg
mov
inc
xchg
cmpl
das
movsb
andl
dec
xor
sbbb
ret
mov
add
cli
ds
shl
mov
mov
dec
into
test
lods
lret
and
pop
pop
aam
addl
push
mov
mov
adc
movsb
mov
mov
lret
popw
into
push
test
jle
jle
mov
fldl
cmpl
cmp
outsb
fnstsw
data16
add
shr
pop
xchg
add
int3
outsb
xor
cmc
cmp
xchg
jle
cmc
iret
ret
jecxz
stc
push
iret
add
arpl
jle
pushf
int3
out
fmul
orl
arpl
and
push
cmp
mov
pop
push
loop
rep
icebp
fmuls
xchg
adc
vpsubb
imul
jo
pop
xor
scas
cmp
lret
fwait
shll
lret
add
sarb
pop
popa
push
mov
cmpsb
testl
add
arpl
test
pop
push
and
inc
add
push
mov
int
mov
lods
jno
loop
arpl
outsl
sti
adc
mov
mov
mov
test
mov
cwtl
repz
popa
das
out
cli
dec
repnz
clc
stos
adc
mov
shll
mov
dec
out
push
lock
add
mov
xchg
fistl
and
cmp
mov
ret
mov
push
inc
xorl
cmc
inc
clc
aas
fistps
jb
imull
loopne
aad
addb
aaa
push
icebp
mov
int
ret
cld
gs
add
fnsave
rcll
xchg
out
pop
stos
subb
or
stos
adc
xor
add
xchg
ljmp
cmc
test
xor
and
nop
or
dec
call
sub
sub
xchg
cmp
or
inc
xchg
call
psubsw
shlb
scas
jmp
jae
shrb
sub
sub
jmp
cli
fs
mov
call
lods
inc
test
dec
out
repz
jecxz
test
pop
in
daa
and
add
add
pop
aad
xor
pusha
push
jp
xor
inc
add
pop
add
sbb
or
pusha
lods
aaa
add
movsb
jne
je
dec
loopne
pop
sub
or
ffreep
xor
pop
int3
std
pop
mov
push
pop
pop
xor
adc
pop
and
dec
jp
and
aam
enter
xchg
ret
lret
sti
pop
push
jbe
lret
test
adc
fwait
push
lods
in
into
cmp
add
add
or
pop
xor
lret
shlb
dec
das
jns
and
dec
cmc
mov
push
mov
mov
sti
sub
popa
cmpsl
mov
xchg
xchg
jp
xchg
insl
sarl
cmpl
testl
loope
add
imul
and
lcall
inc
cld
sub
or
jge
xor
and
ss
jns
inc
mov
mov
lcall
cwtl
fdivrs
loope
or
popl
dec
adc
ds
or
jno
stc
nop
stos
movsl
dec
roll
xchg
sbb
adc
ret
fdivs
aam
xor
add
push
add
xor
lods
xlat
popa
pop
ja
shr
sarl
push
sbb
adc
dec
push
inc
push
mov
cmp
mov
jg
orb
jl
add
out
aad
mov
sbb
sbb
jns
sbb
pushf
xchg
lret
jp
aaa
inc
repz
test
xchg
stos
cmp
out
ljmp
cld
adc
in
test
fimuls
jno
xchg
movsl
jno
mov
andb
popw
pusha
xchg
imul
sbb
mov
sub
int
inc
sub
cmp
mov
mov
mov
movsb
testl
out
add
push
or
sub
pop
pop
mov
out
out
popf
mov
jno
fs
xchg
inc
xor
cmp
lds
mov
call
push
or
dec
sbb
adc
test
mov
xchg
xchg
jnp
jl
xchg
cmp
lcall
mov
cmpb
mov
adc
add
add
into
dec
mov
sub
pop
dec
orl
mov
cmp
sub
pop
stos
icebp
cmp
rcr
mov
cmpsw
xchg
jp
sub
cmpsb
mov
push
movb
dec
test
mov
test
xor
lock
sbbl
inc
push
add
dec
cli
mov
add
shrl
ret
ljmp
lock
cltd
shlb
xchg
dec
xchg
jmp
pop
inc
and
repnz
add
xor
add
ja
push
push
pop
hlt
sti
cs
push
lahf
int
push
xor
jg
jo
xor
or
imull
popf
divb
pop
clc
or
scas
cli
ret
cmp
push
int
mov
xchg
addb
ret
adc
jp
dec
adcl
fisubs
fidivl
jne
loope,pn
lds
and
jle
xor
add
add
inc
mov
hlt
ljmp
jns
xor
fadds
push
out
xorl
mov
xor
lahf
jg
mov
test
repnz
cmp
jl
push
andl
jmp
pop
add
pop
mov
inc
dec
inc
xchg
and
setl
lahf
je
push
pop
rcll
mov
sbb
pop
cmp
sti
sbb
rorb
lret
cvtps2pi
inc
scas
jp
or
scas
pusha
add
out
repz
mov
out
hlt
mov
cmp
fisubrs
cmpl
inc
jp
fimull
jecxz
pop
fadds
inc
idivl
shll
and
push
loopne
repz
xchg
inc
stos
and
sbb
and
outsl
xor
outsb
jl
inc
jo
add
loop
xchg
in
sub
movsb
xor
cmp
add
out
inc
sti
cmp
mov
inc
cmp
clc
cltd
mov
ret
sbb
mov
hlt
mov
sti
mov
popa
dec
sub
push
adc
jge
in
inc
iret
sub
loop
mov
push
les
lcall
mov
pop
scas
xor
pop
jbe
mov
lds
or
in
add
clc
push
into
xchg
lcall
cltd
mov
pop
add
jecxz
xchg
out
in
dec
dec
cmp
xor
pop
xchg
mov
and
push
xchg
mov
fsts
and
out
and
and
stos
push
aas
sbb
cmp
cmpb
jle
loopne
cmpsb
fwait
out
push
or
daa
inc
cwtl
call
xor
add
in
and
pusha
xor
rcrb
sbb
aad
mov
fcomps
fisttpl
pushf
and
test
fnstsw
sbb
add
into
mov
xor
leave
jle
outsb
lcall
cwtl
push
jns,pt
adcl
mov
fcoml
test
mov
xor
das
das
cmp
adc
add
add
inc
or
imul
add
icebp
repz
pop
xchg
aaa
fcomip
popa
in
sbb
cli
pop
xchg
out
xchg
int
mov
lea
lock
subb
lds
imul
arpl
hlt
mov
xor
add
cmpsl
cmc
mov
jb
icebp
ja
add
push
and
push
mov
sbb
pop
nop
dec
inc
fbstp
cmp
add
and
int3
add
pop
push
jo
xor
enter
mov
mov
lcall
xor
lret
repz
jg
movsl
aas
je
das
fs
mov
jnp
xchg
jp
les
test
int3
cld
repz
inc
pop
push
pop
pop
mov
push
cmp
adc
jne
xor
push
dec
out
sub
push
idivl
inc
add
shl
fsts
arpl
xchg
push
xchg
sahf
cmp
cld
lea
imul
xor
jnp
sub
jne
cmc
inc
mov
int
sbb
xor
ss
sub
pop
or
ja
mov
cmpsl
dec
test
lret
xor
jae
mov
ljmp
out
mov
ss
cld
rcrl
in
inc
mov
es
ret
add
out
dec
mov
xchg
add
jecxz
scas
pusha
jae
das
stos
addb
cmp
outsb
pushf
mov
scas
cmp
movl
je
sbb
lcall
out
inc
sub
mov
sahf
xchg
pushf
pop
orb
adc
push
add
xor
popa
xchg
dec
xlat
dec
insl
sbb
es
stos
pushl
or
push
xchg
insb
fidivrs
adc
and
sbb
adc
pop
xor
inc
ljmp
mov
or
add
pop
lods
mov
or
aad
inc
pop
cmp
inc
cmp
leave
and
repz
xor
inc
test
mov
jno
sbb
dec
sbb
and
roll
out
mov
mov
xchg
js
test
fwait
mov
and
mov
mov
sbb
int3
aam
push
sub
mov
push
mov
or
adc
or
notb
mov
int3
call
je
jle
lock
mov
cmc
sub
pop
xchg
popl
enter
cmc
pop
aam
push
shr
in
jbe
pop
ja
sysret
sub
jecxz
test
sbb
fisubl
mov
add
xor
sbb
insl
inc
jmp
scas
scas
adc
in
rorb
xchg
stc
scas
jae
shl
popa
cmp
faddl
