mov
mov
repnz
xor
jg
lcall
in
fisubs
xchg
cmp
out
ret
outsl
mov
lods
jmp
jnp
mov
and
push
aad
jo
scas
cmpsl
cs
scas
pop
pushf
decb
enter
push
cmpsl
gs
cmp
mov
push
stos
mov
xor
dec
dec
or
dec
test
stos
add
xchg
stos
ja
in
cld
movsl
jne
dec
push
xchg
aad
setge
ret
mov
lds
dec
inc
adc
mov
aad
insb
cmp
out
test
stos
xlat
cmp
fists
fldenv
sbb
pop
xor
fidivs
xchg
add
and
mov
mov
outsb
jb
cmc
push
scas
adc
sti
jbe
lods
decb
mov
das
jle
sub
mov
adc
mov
gs
cmp
mov
nop
ljmp
pop
mov
scas
inc
rcr
jno
addl
call
mov
lea
loope
add
lret
mov
xor
mov
ret
mov
enter
adc
pop
fisttpl
xchg
jo
bound
mov
add
imul
mov
pop
in
or
push
sbb
push
gs
cwtl
adc
shrb
ja
loop
adc
inc
insl
dec
mov
leave
sbb
mov
pop
outsl
mov
mov
and
out
mov
xchg
jle
sti
push
jb
cwtl
mov
jns
and
lods
add
cmp
jp
lahf
arpl
decb
mov
or
std
sub
loopne
jo
ret
cmp
cld
scas
shlb
xchg
nop
push
ljmp
sub
je
mov
mov
push
jae
mov
iret
sbb
sahf
xchg
nop
push
gs
cmpsl
out
dec
jnp
cli
not
dec
fldcw
adc
cmpsl
push
ja
push
pushf
and
aad
pushf
inc
jb
xchg
mov
test
xchg
pop
pop
in
sbb
and
daa
and
cltd
sub
mov
scas
inc
enter
fldt
cs
adc
push
test
cmpb
sbb
shrb
mov
dec
mov
mov
inc
xor
scas
mov
xchg
sub
cmp
mov
out
and
repnz
xchg
inc
int
in
and
xchg
add
je
aam
aad
jmp
lea
xchg
aaa
mov
outsb
push
int
jne
add
adc
cmp
lcall
ret
lods
pop
mov
std
lods
cmp
ja
dec
rcrl
adc
cmp
out
mov
mov
jg
in
jl
xor
mov
out
loope
stc
les
cmc
scas
arpl
sbb
xor
test
or
adc
mov
or
ljmp
subl
xchg
ss
and
push
or
cwtl
hlt
adc
sbb
ljmp
cmpsb
cmpsl
jns
mov
jbe
mov
mov
mov
ljmp
outsb
jbe
and
dec
sbb
stos
dec
and
xor
mov
sbb
data16
scas
jno
lret
mov
pop
ss
inc
out
cli
ljmp
std
adcl
fwait
pushf
sahf
inc
mov
pop
cli
neg
not
xchg
fcompl
or
frstor
rcl
jno
fcmovne
adc
xlat
sub
sbb
mov
sbbb
pop
popa
adc
out
test
idivl
jg
in
and
cmp
dec
pop
cmpsl
inc
jae
and
lea
adc
dec
push
dec
and
mov
inc
xor
aam
adc
in
gs
insb
fstps
sbb
shrb
jle
mov
adcl
push
in
outsl
jb
pop
es
or
loop
and
gs
mov
inc
lods
lods
iret
inc
dec
jge
cmc
and
ljmp
jecxz
fdivrs
jmp
dec
mov
stos
nop
cltd
cmp
lods
mov
mov
add
mov
add
mov
addr16
sub
hlt
xor
pop
jecxz
dec
jno
in
fcmovb
aaa
add
lods
in
aad
loopne
xchg
pop
outsb
or
jp
push
add
je
rorb
mov
test
push
popa
mov
dec
out
push
cmc
push
ja
movsl
cld
fwait
mov
repz
and
and
mov
outsl
jno
pop
and
cmp
pusha
testb
sub
pop
push
push
xor
inc
or
cmp
mov
repnz
mov
fs
insb
mov
sbb
inc
cmp
cmove
add
inc
mov
jge
aad
push
mov
jp
pop
xor
or
add
xchg
inc
adc
addr16
jns
or
outsb
movsb
lds
add
daa
js
lahf
add
fadd
lods
adc
rclb
xor
xchg
mov
jl
jo
hlt
adc
inc
cmp
out
xchg
sbb
insb
rclb
xchg
adc
cmc
or
and
inc
sbb
ret
adc
aam
inc
push
jp
xchg
dec
insb
mov
loope
push
adc
mov
cmp
in
xchg
adc
mov
fildl
jnp
pop
mov
outsb
sub
pop
decl
push
adc
lret
and
lods
addl
jbe
jb
xor
and
ds
inc
jb
xor
es
jg
dec
ja
push
and
test
jns
icebp
jg
int
cs
scas
pop
pop
mov
jge
xor
push
out
filds
jecxz
mov
push
les
mov
push
cmp
jno
pop
ror
loop
aad
cmp
cld
vunpckhpd
out
pop
cmp
cwtl
pop
clc
cmp
lods
cmp
adc
sbb
sub
outsb
enter
add
jnp
and
jns
pop
outsb
fisubl
scas
aam
cmpsl
inc
xchg
sub
repnz
ret
cmc
xor
adc
enter
shlb
jle
ss
repnz
push
fisttps
xlat
push
cld
out
inc
adc
dec
pop
sbb
xor
push
outsb
das
pop
push
cmp
fwait
mov
mov
mov
addr16
mov
pop
cmpsl
je,pt
pop
stc
push
mov
xchg
xor
pop
add
jge
inc
or
lods
arpl
int3
call
push
add
shll
cs
adc
cmpsb
mov
aaa
and
jge
inc
roll
test
cmp
push
add
dec
data16
push
jno
arpl
fiadds
sub
fcmovu
adcb
sahf
rorb
loope
outsl
xor
enter
dec
fadds
xchg
decb
mov
mov
aam
shr
xor
jecxz
mov
mov
mov
shrl
xchg
shll
add
jecxz
or
xchg
call
sti
test
stos
bound
mov
mov
daa
jns
jae
sbb
repnz
pop
mov
sar
adc
stc
pop
push
pop
jecxz
shl
dec
mov
sub
mov
mov
test
jecxz
aad
jno
cmc
negb
jno
inc
jnp
or
sub
mov
add
in
xchg
and
repnz
arpl
insl
jge
out
les
jg
adc
in
fnstcw
cmp
jno
push
in
ja
sahf
sub
loop
pop
gs
test
add
cmpsl
push
sbb
dec
cmp
fcomip
lahf
pop
int
jne
push
pop
je
cld
pop
lfs
gs
sbb
stos
cwtl
dec
mov
insl
in
and
cmp
jl
lcall
sbb
lret
popa
xchg
mov
mov
fistl
daa
mov
mov
sbb
popf
clc
repz
push
ss
jns
sar
xchg
data16
dec
mov
xchg
gs
pop
mov
jge
mov
jnp
ret
decb
fldt
out
mov
push
push
jae
std
mov
out
pop
in
enter
push
pushf
sbb
inc
adc
mov
bound
test
cmp
lock
hlt
xchg
fwait
or
lods
pop
test
outsb
push
pop
std
jbe
ret
and
mov
rorb
mov
jl
push
xor
mov
popa
outsl
inc
lds
push
hlt
pop
cltd
pop
mov
jg
mov
loop
test
dec
sti
mov
sub
xor
or
jbe
xor
cmp
cwtl
fdivr
repnz
sbb
xorb
addr16
out
pause
sub
out
test
dec
mov
mov
inc
movsb
cmp
pop
and
mov
sbb
mov
cmpsl
outsb
shll
in
in
pop
mov
imul
jg
pop
dec
xchg
mov
jne
cmp
cli
pop
xor
cs
dec
lds
bound
shlb
pop
pop
sti
imul
xor
out
shll
fldl
lret
add
lcall
loop
adc
fsubrs
sbb
ds
adc
das
dec
mov
adc
dec
stos
dec
push
scas
lahf
jecxz
add
xchg
loope
fucomp
or
shll
les
fidivl
cmc
cmp
and
xchg
bnd
orb
xor
test
push
or
sbb
and
jmp
mov
push
loope
cmp
sub
mov
pop
push
ret
pop
cmp
test
sub
push
sar
lret
aaa
inc
cmp
jge
in
test
cmc
xchg
inc
mov
flds
adc
fbstp
sbb
clc
mov
pusha
dec
movsl
test
mov
dec
icebp
test
out
repz
mov
inc
mov
push
in
mov
pop
aas
stos
pop
or
lahf
mov
sti
pop
aad
mov
pushf
fwait
cld
stos
jno
inc
nop
sbb
sub
scas
out
popf
mov
cmp
inc
sti
inc
push
lcall
in
lea
mov
pop
shrl
fdivrl
xchg
mov
test
jle
sahf
inc
push
aam
stos
unpckhps
sbb
xor
enter
sbb
xor
jno
outsl
sbb
aas
push
jno
cmc
fisubrs
jp
jbe
jbe
icebp
jo
add
cmp
xchg
mov
cwtl
pop
cli
dec
fdivrl
jl
es
dec
lea
xchg
stos
out
lcall
mov
add
sub
out
mov
movsb
lahf
dec
fldenv
push
and
or
roll
or
mov
sbb
insb
movb
enter
mov
mov
aaa
add
sub
cmp
ljmp
rcr
pop
in
rorl
push
imul
xorl
jae
push
push
adc
ljmp
nop
inc
jns
imul
in
jp
nop
jns
push
fmuls
sbb
mov
sub
xchg
mov
xchg
push
test
sbb
dec
mov
les
lahf
xchg
xor
and
jae
dec
sub
or
ffree
jp
bound
frndint
dec
mov
std
pop
lods
xchg
icebp
cmp
add
ljmp
sti
hlt
imul
jl
scas
mov
mov
jb
cltd
fbstp
arpl
mov
rcrb
fs
hlt
ret
scas
sbb
xor
rcr
inc
mov
sub
sub
ffree
mov
dec
pushf
mov
fistpll
xor
ret
dec
push
mov
add
pop
sbb
or
sbb
sub
xor
popa
adc
cmp
mov
pop
mov
movsb
sbb
iret
lret
mov
sarb
aaa
jns
pop
jge
push
inc
mov
jne
loope
pushf
inc
outsl
lea
pushf
sub
test
mov
sarl
insb
xlat
into
inc
and
jo
pop
adc
pop
xor
pushf
data16
sbbb
fbld
mov
xchg
jmp
dec
or
fsub
mov
fwait
xor
cli
add
das
int3
xchg
sar
or
push
xchg
fdivrl
jge
shlb
mov
fcmovnu
ret
push
mov
cmp
imul
shrb
popf
inc
stos
int3
imul
mov
pushf
idivb
pop
add
pop
add
movsb
out
mov
xchg
cmpsb
stos
aaa
sub
cmp
out
adc
mov
out
pushf
or
lret
jne
jle
xchg
push
add
mov
xchg
cs
push
or
inc
imul
and
pusha
pop
fdivr
pushl
adc
xor
mov
pop
push
bound
cmp
or
fimull
lcall
rolb
outsl
imul
cli
fcoml
xor
leave
js
lds
sub
outsl
and
dec
mov
sub
int3
sub
cmp
xchg
test
mov
mov
or
inc
xchg
pop
movsl
rol
mov
mov
push
sahf
ljmp
mov
sbb
rorl
sarb
clc
clc
outsl
mov
outsb
test
or
icebp
mov
cmp
call
jbe
test
mov
arpl
out
push
mov
add
orl
int
inc
addr16
addr16
fnstsw
test
ret
dec
loope
add
push
sbb
pop
in
and
shrb
cmp
icebp
cmc
xchg
add
gs
push
je
cmc
jp
sub
cli
xor
pop
mov
push
jbe
dec
or
inc
xchg
and
imulb
ficoml
test
push
lock
stc
mov
sbb
out
clc
repz
ja
mov
jnp
inc
xor
pop
stos
out
push
jmp
adc
add
roll
decb
push
xchg
jecxz
xchg
add
and
pop
xchg
sub
bound
pop
arpl
lods
iret
test
mov
addr16
imul
push
aam
pop
jne
packuswb
xchg
scas
mov
push
mov
out
lret
insb
les
in
push
movl
pop
push
xlat
popf
imul
add
dec
pusha
cmpsl
dec
incl
notl
sbb
shll
fisttps
and
jge
fidivl
insb
in
push
jecxz
push
cmpxchg
mov
imul
int
inc
jl
pop
mov
mov
in
movsl
mov
xor
sub
mov
pop
leave
jae,pt
jnp
cld
push
aas
jne
ljmp
adc
pop
push
cmpb
pop
jl
movsl
fwait
mov
in
cmp
fwait
lods
pop
icebp
jae,pn
test
das
cli
sbb
dec
sub
inc
out
xchg
add
aad
mov
mov
cmpsb
cmc
hlt
sub
fdiv
add
aad
add
and
inc
cmc
cmp
arpl
push
imul
roll
mov
rolb
jecxz
data16
and
xchg
mov
int3
sub
sahf
mov
insl
adc
sub
push
fdivl
les
sub
adc
jl
dec
pop
sbb
addr16
std
mov
xchg
roll
jmp
adc
out
hlt
and
aad
inc
out
std
stos
mov
aad
sbbb
addr16
stos
test
je
pop
jae
testb
inc
and
lea
sub
jmp
icebp
sub
mov
mov
int3
jmp
push
imul
ret
inc
push
xchg
es
jb
mov
jno
push
in
shlb
das
mov
pop
push
xchg
sarl
mov
mov
fs
lock
scas
cmp
sub
mov
out
icebp
or
lock
cwtl
lret
inc
lods
mov
enter
adc
inc
mov
pop
push
pushf
jge
jnp
push
mov
pop
inc
jno
pop
jl
sti
add
jbe
ljmp
arpl
mov
cmp
cld
dec
cmp
adc
add
adc
xchg
xchg
test
ss
dec
add
mov
pop
pop
sbb
test
jge
xchg
and
cli
dec
mov
or
pop
mov
mov
sub
adc
jmp
pop
mov
pusha
lret
addl
aaa
test
dec
sub
nop
xor
movsl
pop
ds
push
dec
loopne
jecxz
push
dec
mov
sarl
jecxz
outsb
stos
cmp
jns
inc
mov
sbb
jno
dec
inc
xor
aad
or
mov
adcb
sbb
sbb
outsl
aas
dec
jl
mov
pop
sti
xchg
lods
mov
lret
test
adc
push
xchg
std
insb
adc
or
mov
xchg
std
inc
fisubrs
mov
pushf
xchg
sbb
repnz
sub
mov
push
imul
scas
fchs
push
imul
cltd
loopne
insb
jp
cmp
jb
arpl
mov
sti
lahf
pop
icebp
int3
mov
fiaddl
fwait
je
adc
mov
inc
adc
sub
cmp
int3
js
and
add
jmp
les
roll
gs
inc
lret
daa
ja
and
jge
mov
dec
hlt
stc
or
out
sub
enter
add
adc
rol
cwtl
arpl
cmpsl
ja
mov
adc
shrb
xchg
xor
mov
cmp
mov
enter
dec
fildl
sub
dec
clc
leave
insb
xchg
shrl
xchg
jnp
push
pop
adc
clc
mov
in
mov
add
mov
lds
addr16
imul
outsb
push
std
push
adc
cmp
push
lret
scas
adc
ljmp
test
cmpb
adc
inc
sbb
push
mov
add
outsb
clc
adc
lock
cmp
aad
lret
arpl
test
inc
cwtl
jmp
push
popa
aaa
aad
enter
xchg
adc
inc
push
jnp
out
icebp
xor
mov
pop
pop
sbb
inc
inc
jp
test
cmc
pop
push
sbb
sbb
pop
push
mov
jnp
fistps
and
divl
pop
notl
rclb
cmc
rorb
loop
push
arpl
pushf
std
test
add
cmc
popa
pop
sub
and
paddsw
std
dec
add
xchg
popf
aad
push
xchg
push
int
mov
into
mov
pop
xchg
popa
mov
and
repz
mov
cs
enter
cwtl
mov
shlb
iret
cmp
test
mov
es
pop
push
in
dec
js
insl
and
mov
cmp
pop
out
jo
stos
xchg
cltd
shl
cmpsb
cmp
lds
mov
aas
cmp
mov
adc
mov
int3
rclb
loopne
mov
das
insb
xor
sahf
in
push
and
sub
loop
push
cld
xor
dec
xor
and
jnp
insl
xor
cltd
fldenv
sbb
push
push
movsb
sub
lods
jnp
out
dec
lods
cmp
scas
mov
fcmovnu
adc
bound
push
loop
and
nop
inc
jp
scas
jnp
sub
jns
pop
push
pop
add
cmpsb
or
dec
cmpb
mov
loope
aas
clc
sahf
rcrl
jmp
xchg
xor
into
inc
loope
cld
outsl
sbb
ljmp
icebp
js
mov
dec
syscall
mov
cmp
ss
lods
fisubl
loop
insb
out
mov
insb
stos
loope
mov
stc
xchg
ret
sbb
jb
adc
lods
mov
addl
out
cmp
mov
cmp
mov
cmp
sub
cwtl
inc
scas
shll
xor
stos
andl
xchg
sbb
aaa
adcb
mov
jb
ret
dec
push
pop
test
cld
cmp
xlat
jno
cmpsb
push
add
mov
dec
jo
fwait
fs
jp
and
pushf
push
je
mov
test
mov
jmp
stos
je
xor
sub
dec
loop
xchg
pop
add
adc
imul
ret
jbe
fistl
inc
mov
nop
pop
into
aaa
mov
mov
add
jmp
movsl
fidivl
mov
lea
insb
inc
pop
jbe
dec
outsl
stos
test
pop
test
mov
inc
cs
cmc
pop
shrl
mov
das
sbbb
adc
leave
pusha
cmp
xchg
movb
xchg
hlt
sub
lods
aam
aaa
outsb
add
lods
lahf
lret
xchg
xor
mov
aas
fmull
inc
outsb
xchg
mov
cltd
sbb
push
mov
xor
test
mov
adc
dec
xchg
mov
fstl
imul
in
pop
mov
in
rcrl
dec
jnp
outsl
test
sbb
mov
aad
arpl
cmp
dec
xchg
sbb
push
xchg
shl
cltd
xor
cmpsl
lods
pop
addr16
sub
sub
scas
test
and
nop
mov
filds
inc
stos
les
mov
shll
gs
ljmp
xor
mov
mov
sub
dec
push
mov
sbb
lret
stos
imull
ret
add
cmpl
cld
stc
dec
xchg
mov
cmp
cli
shll
mov
ljmp
je
les
fcoms
mov
cmp
or
cmp
push
stos
pop
mov
add
jecxz
jnp
test
push
das
lcall
pop
mov
jae
call
push
jg
xlat
cmp
push
jb
mov
fdiv
jl,pn
imul
dec
sbb
clc
loope
cmpsb
and
cli
cmp
repnz
ret
fildl
adc
pop
push
out
pop
push
mov
pcmpeqw
outsb
pop
xor
cli
out
jp
aad
sub
mov
dec
inc
stos
fisubs
ds
shll
ret
addr16
and
jmp
sub
sub
cmc
mov
enter
xor
loop
data16
add
xor
popf
sbb
xchg
pop
push
mov
shlb
jp
testl
pop
out
and
adcl
pop
repz
pop
xchg
lea
fidivrl
and
pop
mov
adc
bound
dec
sti
ret
cmp
fwait
cmp
sbb
push
pop
adc
mov
mov
insb
dec
or
and
sub
and
sbb
in
cmpsl
mov
xchg
out
xchg
mov
xchg
js
or
fcoml
enter
sbb
xlat
sti
push
xor
or
mov
pop
cmp
fiaddl
cli
cmc
pop
shrb
dec
shll
xchg
pop
pop
out
pop
sub
mov
adc
mov
in
sbb
sub
cli
xchg
inc
cld
xor
frstor
mov
add
pop
dec
xor
mov
aaa
daa
inc
cmc
iret
xor
adc
cmp
sub
dec
push
out
jl
mov
jge
mov
mov
stos
dec
mov
test
add
aam
mov
lea
push
test
ret
ja
inc
jnp
jne
and
xor
xchg
cmp
sub
mov
inc
push
jmp
push
movsl
jbe
mov
inc
vpcomq
push
scas
inc
aaa
in
ret
add
adc
cmc
jae
sbb
fdivp
push
lock
mov
std
aad
aad
movaps
xchg
movsl
adc
cmp
cmp
int
adc
xchg
inc
jle
xchg
sub
jg
mov
inc
push
mov
and
jmp
out
fsubl
ret
ja
iret
mov
repnz
add
sbb
cltd
sbb
adc
aam
pop
xchg
ja
mov
jecxz
push
push
out
dec
call
insl
jo
adc
cmpsl
iret
sbb
repnz
fwait
out
mov
stos
rcrl
aas
xchg
jecxz
ljmp
mov
mov
xor
stos
rorb
jbe
mov
jp
div
jbe
stc
inc
jae
dec
xchg
imull
pop
ret
sub
out
test
fwait
mov
popf
and
sub
cmp
mov
and
int3
xchg
test
mov
and
insl
cmp
jle
mov
jns
dec
push
dec
adc
add
and
cmpsl
mov
mov
inc
fwait
outsb
rcrl
push
pop
jmp
sbb
mov
xor
mov
jns
inc
mov
sub
iret
jo
cmp
jmp
out
lret
push
mull
and
outsb
mov
rolb
shl
ja
punpckhwd
mov
aam
pop
and
out
sub
aad
inc
xchg
dec
jmp
enter
jmp
xchg
sub
cmp
push
dec
mov
mov
into
lea
mov
xor
push
jg
ds
ss
loope
ret
sub
scas
rolb
jmp
aaa
repnz
xor
dec
insb
xor
daa
pusha
dec
pop
loope
sub
mov
mov
loope
imul
jp
push
lcall
pop
lcall
pop
hlt
jmp
notl
ds
lods
mov
loope
int3
and
testl
or
sar
insb
jae
sub
addl
out
add
push
adc
ja
jp
cmp
cmpb
call
pop
call
outsb
cli
xchg
sarl
shll
xor
xchg
int
add
jae
andb
adc
ficompl
mov
popf
fldt
dec
sbb
daa
inc
sahf
push
or
fsubrs
adc
sub
mov
cmpl
jo
testl
push
fcomps
push
xchg
lods
repnz
push
push
mov
sub
ret
mov
dec
adc
cmp
and
xlat
or
cmp
stos
or
testl
sub
xor
add
cmp
push
cmp
adc
rcll
dec
repnz
and
xor
mov
outsl
add
xor
add
mov
cmp
cmp
lods
inc
iret
pop
xor
fwait
xchg
inc
stc
or
xchg
mov
mov
cmpsl
pop
fs
and
fisttpl
push
mov
mov
mov
push
adcb
sbb
cmp
mov
sahf
mov
lods
pop
out
dec
out
dec
push
and
lods
call
je
dec
xchg
sarb
jnp
and
jo
and
ljmp
sub
jp
ret
mov
cmp
rcl
cmp
add
sbb
push
frstor
mov
mov
push
lahf
movsl
jl
jmp
std
sub
fdiv
ljmp
mov
je
cmp
mov
in
sub
xorl
dec
ror
out
sbbl
aam
sti
mov
addr16
insb
sub
push
fldcw
xor
dec
hlt
int3
sbb
nop
je
push
lods
scas
aam
out
into
aad
enter
icebp
call
scas
imul
daa
xor
sbb
outsb
lds
div
mov
dec
xchg
fadds
mov
lods
fwait
cwtl
mov
fcmovb
sbb
mov
nop
cld
stos
je
mov
mov
rclb
dec
pop
je
inc
sbb
and
mov
add
js
sbb
sti
shrl
inc
dec
dec
iret
gs
loopne
daa
subb
adc
add
lods
scas
xchg
push
stc
idivl
or
mov
pop
ljmp
inc
ds
jl
or
lea
mov
sub
mov
sub
fcoms
add
clc
outsb
push
mov
test
lret
sub
push
mov
aad
insb
data16
inc
cwtl
bnd
push
mov
mov
add
and
loope
cmp
and
sub
loope
jbe
lret
cltd
xchg
lods
mov
inc
cs
inc
jecxz
out
jnp
jnp
lcall
jp
fimull
xchg
push
adc
xchg
xchg
nop
fdivrs
xchg
imul
jno
test
idivb
es
lret
xor
loopne
lea
xchg
lods
ret
and
mov
popa
shrl
jnp
sbb
loope
scas
inc
xor
cmp
les
mov
pop
stos
clc
xlat
push
xor
lret
pop
call
inc
imul
cmp
int3
jmp
nop
fdivs
in
sbb
popa
out
pop
aad
sbb
fwait
adc
mov
fidivrs
mov
pop
push
aad
xor
and
cltd
mov
idivb
sahf
cmp
ja
xor
mov
push
pop
daa
push
sub
andb
push
shll
out
pop
jl
and
iret
divb
sub
xor
icebp
add
test
imul
cwtl
inc
inc
stos
and
sbb
add
andb
es
adc
sub
fwait
mov
int3
cmp
ljmp
imul
push
mov
pop
add
aas
bound
orb
test
sbb
pop
pop
movsb
scas
jbe
addr16
shrb
pop
push
std
mov
aad
jecxz
lock
addr16
jae
xor
out
push
ficoml
lret
xchg
fdivrs
or
mov
adc
add
aas
ja
test
in
mov
mov
icebp
jmp
ret
std
das
xchg
inc
or
cwtl
dec
stc
in
cmp
fcmovb
lock
scas
sub
and
clc
lds
mov
les
aaa
mov
out
push
pop
or
hlt
xchg
js
cltd
loop
fsin
cmp
adc
rcrb
xor
pop
push
inc
inc
jge
loop
adc
push
and
out
xchg
add
sub
jne
cmpsb
mov
xchg
dec
mov
fisubrl
adc
or
les
mov
cmp
push
xor
mov
jns
ja
push
pusha
cmp
and
adc
imul
in
cmc
inc
outsl
jae
or
xor
mov
push
sbb
jb
jge
or
aam
jmp
mov
rcrl
and
or
and
adcl
mov
push
lods
jmp
scas
dec
push
cmc
cmp
and
lea
dec
jmp
scas
jle
lret
lret
fdivs
push
pop
adc
add
test
ficoms
xchg
cmp
pusha
incb
sahf
fwait
push
out
fbld
daa
xor
outsb
adc
adcl
adc
lock
lds
xor
push
jle
outsl
dec
rcrb
cmp
pop
insb
adc
and
cmpsb
xchg
fwait
test
stos
or
lret
push
push
std
mov
sbb
lea
aas
inc
testl
pop
hlt
in
decl
mov
in
inc
out
or
sahf
xor
or
std
mov
jnp
repz
int3
out
in
sub
and
ret
aad
in
dec
movsl
sub
ljmp
popf
das
or
and
add
jb
cmp
int
mov
dec
rcrl
jp
shlb
insb
inc
mov
std
xchg
add
cmp
mov
aam
ret
and
sub
insl
add
xor
dec
jg
and
mov
outsl
outsb
mov
push
fcmovne
testb
sbb
add
out
lock
daa
cmp
cs
mov
jg
add
aad
jo
jl
movsb
mov
pop
in
insb
xorl
and
test
xchg
sahf
stos
fs
mov
xor
dec
xchg
cmpsb
xchg
xchg
out
movsb
hlt
daa
and
sub
fidivs
outsl
imul
into
nop
jo
jb
inc
scas
lods
mov
pop
fsubl
xor
adc
sahf
cmp
dec
jo
mov
xor
ja
scas
jbe
dec
cmp
push
les
cmp
xchg
pushf
xchg
loopne
shl
mov
out
push
and
test
iret
iret
jno
lret
dec
out
xchg
int
jecxz
lea
mov
or
lock
xor
and
mov
cltd
enter
outsl
xor
loop
push
adc
ffree
pop
test
and
test
jge
in
mov
fisttpll
jmp
icebp
mov
inc
outsb
das
mov
arpl
stos
pop
sub
dec
adcl
push
scas
dec
ficomps
inc
call
in
sub
out
orl
and
and
mov
jo
lcall
cmpsl
or
stos
movsl
dec
aas
mov
das
push
movsl
adc
and
mov
jg
jmp
dec
pop
hlt
mov
loop
icebp
rorb
add
mov
outsb
jp
sti
add
insb
jo
test
es
jne
sbb
cwtl
dec
fs
jnp
dec
push
ficompl
xor
cmp
insl
push
adc
dec
cmpsl
pop
cmpsb
mov
mov
test
cmp
xchg
sub
cmpsl
sub
xchg
lret
add
adc
call
iret
sub
mov
js
push
pop
das
pop
in
rcrb
rclb
hlt
mov
fnstsw
and
sub
lock
inc
lret
test
out
mov
ja
mov
push
xor
test
adc
fstps
mov
cmp
mov
repz
fcom
test
test
jmp
jne
aaa
gs
mov
jg
mov
pop
fisubl
sbb
push
addr16
bound
fimuls
jl
inc
xchg
stos
in
xchg
cltd
add
fwait
int
stos
loopne
xor
negl
repnz
hlt
cmpsl
je
xchg
es
mov
mov
mov
mov
pop
cld
xor
xchg
arpl
sti
arpl
mov
sbb
mov
dec
add
mov
cs
lock
cld
cmpsl
adc
cmp
icebp
cmc
subl
scas
pop
cmp
repnz
lods
add
mov
test
and
out
jnp
cwtl
in
push
jecxz
jb
shl
cld
cmp
xchg
scas
push
lret
daa
xorb
movsl
sub
fistpll
mov
sarl
and
pop
or
add
fdiv
mov
mov
jne
cmp
mov
add
outsb
xchg
pop
mov
enter
nop
xacquire
push
add
fcoms
adc
jno
jo
cmc
out
loopne
jne
jecxz
ljmp
loope
adc
in
push
sub
push
cld
js
jbe
movb
adc
out
hlt
mov
xchg
mov
cli
sar
insl
pushf
fcoms
inc
test
jbe
subl
icebp
divl
and
or
xlat
insl
fldt
xchg
data16
jmp
pop
movsl
imul
bound
mov
pop
cmp
decl
scas
mov
and
movsb
out
in
shlb
out
xor
pop
test
xchg
stc
pop
cld
xchg
cmp
adc
scas
ja
test
or
push
xchg
sbb
pop
stos
rcr
lods
pusha
mov
xlat
cs
inc
or
movsb
fimull
add
data16
or
pop
lock
push
int
add
lret
sbb
pop
packsswb
lock
aaa
roll
int
mov
jp
xor
inc
outsl
fiadds
or
stos
stc
clc
push
inc
and
sub
pop
and
in
and
mov
and
xor
dec
test
mov
sub
fcoms
out
adc
push
push
mov
xchg
pop
sub
pop
mov
mov
or
inc
ja
sub
xchg
sub
loopne
mov
fdivl
ret
leave
xor
pop
sar
and
mov
xchg
mov
inc
mov
shl
mov
mov
fsubp
into
nop
enter
stos
jne
inc
pop
ds
loopne
je
push
dec
xlat
ret
mov
pop
aaa
jg
jb
xorl
nop
and
mov
sbb
not
mov
pop
mov
movups
mov
mulps
adc
xchg
xchg
cltd
or
cmp
ja
popa
addl
or
sub
movsb
pusha
test
jle
push
pop
adc
mov
xlat
adcl
inc
loop
xchg
pushf
push
xlat
scas
xlat
into
push
mov
push
jb
les
sbb
daa
xlat
sbbl
insl
mov
in
mov
mov
xchg
dec
sbb
xor
jecxz
mov
mov
push
adc
jmp
loop
fbld
mov
adc
arpl
xchg
mov
xchg
or
aas
xlat
int
stos
mov
push
sub
adc
adc
sub
push
push
stos
sub
and
cmp
jno
inc
xor
jne
bound
fcmovu
lcall
dec
push
nop
add
jns
or
mov
out
xchg
test
sub
test
js
mov
add
mov
mov
xchg
fcmovb
pop
pop
les
cmpsb
mulb
imul
lret
outsb
ss
inc
std
insb
sub
jge,pt
je
jg
jns
shll
xchg
sti
add
cmp
adc
dec
dec
push
cwtl
mov
cs
movsb
sar
sbb
add
in
movl
jno
out
cmp
cmp
or
cmc
mov
aam
mulb
pop
cwtl
or
in
jo
stos
outsl
xchg
repnz
adc
mov
repz
es
xor
cmp
jecxz
ficompl
adc
push
xchg
mov
jg
mov
insb
mov
outsl
insb
aaa
jp
sub
stc
jg
sti
lcall
pop
int
aad
push
inc
inc
xchg
mov
pop
lcall
push
xor
jge
jp
sbb
xor
jno
movb
lds
jp
mov
mov
lock
dec
cmpb
add
dec
inc
mov
mov
loopne
cwtl
lcall
sub
popf
dec
jbe
lock
push
mov
xchg
cmpsb
jecxz
loop
xchg
inc
fists
dec
xchg
sarl
mov
mov
add
flds
lret
lods
sbb
sub
inc
divb
pop
mov
roll
adc
pop
scas
js
mov
add
mov
sarb
imul
addl
xrelease
xor
faddl
and
in
cmp
movsl
int3
out
ret
scas
cmp
push
cltd
cmp
mov
cmp
push
loopne
push
push
inc
outsb
xor
popa
cmp
mov
pop
mov
push
or
sbb
in
and
cwtl
push
lcall
scas
lea
pop
sub
pop
push
and
jb
add
push
push
add
scas
ja
scas
jge
mov
stc
jae
repz
mov
push
lds
or
fistpl
scas
sahf
cmp
adc
and
ret
dec
xchg
and
xchg
cwtl
xor
xor
fildll
push
add
jmp
pop
test
ja
sahf
je
iret
addr16
bound
sarb
add
jl
outsb
mov
mov
pop
xchg
mov
js
pop
movsl
mov
mov
into
out
cmpsb
scas
fildl
sbb
mov
adc
inc
sub
cmp
gs
andb
inc
pop
enter
adc
pop
call
lahf
pushf
cmp
imul
add
loopne
and
cmp
je
hlt
dec
les
lahf
lret
jmp
outsb
push
cltd
dec
or
sbb
push
mov
fildl
jnp
jg
imul
mov
imulb
adc
repz
xor
dec
or
scas
cmp
out
int3
jbe
aam
ficomps
daa
loope
dec
jne
add
jg
cmpsb
dec
test
nop
pop
push
out
xor
jo
jmp
or
or
push
jle
dec
imul
repz
sbb
dec
xor
std
rorl
stos
inc
lret
movsb
lds
inc
xchg
sub
loop
push
cli
ret
sub
in
push
mov
in
popf
cmpsb
dec
sbb
cmp
mov
cmp
aaa
cmc
out
fsts
test
sub
push
mov
les
imul
mov
pop
test
jb
jmp
cmc
lods
leave
fildl
rorl
add
pop
jnp
ret
sti
inc
xchg
es
scas
jecxz
sbb
add
and
or
add
xor
push
jae
xorl
add
xor
xlat
das
cmp
repz
popa
leave
jle,pt
loop
lret
mov
std
pop
adc
repnz
lods
jmp
repnz
mov
dec
sahf
dec
fucomip
inc
lods
jg
cmp
add
lahf
or
stos
xor
fwait
popf
lahf
popf
jns
jle
fcomi
testb
push
movsb
test
aaa
adc
sbb
lock
xor
in
pushf
dec
in
fidivl
cli
rcrb
jmp
popa
in
mov
fimull
dec
jl
and
pop
clc
xchg
xchg
adc
nop
test
inc
inc
out
push
xor
xor
repnz
and
inc
repz
pop
sbb
sbb
in
in
fisttps
rorb
xchg
or
out
daa
mov
mov
add
lods
arpl
lock
divb
jo
mov
insb
pop
fdivrp
cmpsl
jbe
and
mov
cmc
cmp
xchg
inc
out
loop
jbe
fnstsw
out
scas
inc
int
xor
movsb
imul
out
stc
data16
insl
stos
add
pop
inc
ds
adc
push
or
lea
mov
pop
aaa
push
arpl
hlt
dec
jle
push
push
mov
push
mov
sti
addr16
lcall
push
jmp
movsb
iret
cmp
loop
xchg
es
ret
sub
in
dec
sub
or
jmp
mov
lds
dec
mov
or
andb
popa
in
xchg
test
jnp,pn
imul
bound
rcl
or
test
sub
fdivs
and
or
pop
pop
imul
pop
cs
xchg
imul
push
xor
push
outsl
in
clts
or
lahf
push
add
rcrb
icebp
inc
cmp
faddl
mov
push
mov
cmp
lea
bound
mov
in
jbe
cmp
lods
sub
movsl
adc
xorb
ficompl
sahf
sahf
popa
xchg
and
rorl
ljmp
push
xchg
aaa
sub
notb
insl
shll
xlat
add
lret
dec
pop
mov
fs
es
push
inc
sbb
dec
sub
mov
lahf
sbb
sub
loope
aaa
mov
xor
sub
shrl
cltd
mov
jecxz
mov
dec
adc
adc
lock
fwait
adc
push
mov
push
int3
pop
pop
mov
sbbb
test
sbb
xchg
mov
and
xor
jo
xor
mov
cmp
sbb
adc
cmc
fisubrl
mov
mov
adc
cmp
xlat
das
inc
xchg
loop
in
insb
pusha
icebp
or
xor
mov
je
sbb
xor
cmp
push
pusha
or
decl
push
outsl
xchg
in
shll
pop
and
jg
repz
pop
mov
mov
or
ret
jp
cltd
lcall
in
inc
popf
mov
in
hlt
repz
stos
or
test
jne
sbb
push
inc
mov
repz
lods
icebp
push
adc
mov
out
or
lret
insb
mov
in
icebp
subl
cmp
xchg
pop
aas
fmuls
std
rcrl
pushf
stc
fwait
push
cs
pop
mov
adc
mov
jmp
adc
dec
insl
xor
pop
test
fwait
xchg
std
testl
mov
bound
inc
sub
out
push
sub
pop
pusha
jmp
int3
and
movsb
inc
dec
xchg
cmc
cld
push
cwtl
mov
scas
mov
mov
jmp
sub
jmp
insl
inc
in
loope
pop
rorb
jmp
xchg
pop
movsl
jmp
ss
mov
xlat
xchg
fs
push
jmp
xchg
lods
mov
add
xchg
sub
loop
add
ret
and
dec
lahf
dec
subl
mov
jb
cld
xchg
pop
add
sub
push
add
dec
mull
pop
cmpb
jno
xchg
and
inc
jne
adc
out
out
cld
and
pop
pop
lret
dec
jg
adc
clc
mov
ret
enter
fisubs
push
out
mov
stos
xor
adc
pop
in
aad
addl
popf
rolb
aam
pop
mov
mov
movsb
mov
add
mov
inc
or
xchg
ds
popa
pop
xlat
shrb
and
imul
imul
jge
adc
lahf
or
sbb
enter
ja
sbb
or
and
inc
mov
xchg
xor
and
or
aad
loopne
pop
shlb
and
mov
faddl
xor
aas
in
popf
shrl
jns
add
sahf
mov
lds
imul
sub
invd
movsl
add
pop
cmpb
jb
dec
mov
lds
adc
int3
repz
inc
lods
or
cwtl
in
cltd
mov
jecxz
bound
sbb
push
ficoms
insl
xchg
andl
inc
dec
sti
sbb
aas
std
loop
test
sbb
leave
pop
xchg
fcmovbe
sub
mov
push
iret
subl
call
cli
mov
mov
jno
or
lahf
push
mov
sbb
pop
cli
mov
mov
gs
add
in
jecxz
inc
mov
push
pop
push
jge
loop
jns
stos
leave
pop
in
add
or
mov
loopne
ret
jp
mov
xchg
push
or
out
iret
out
pop
scas
test
dec
lret
scas
clc
xchg
sub
into
mov
mov
xor
push
call
clc
mov
dec
jle
inc
test
daa
addb
hlt
add
mov
add
stos
adc
mov
add
loopne
xchg
and
fsub
cwtl
out
mov
adc
inc
jno
loop
cmpsb
stos
daa
inc
mov
cld
xor
movsl
push
xlat
mov
and
jns
xchg
jnp
std
ror
or
addr16
mov
test
cs
jne
ret
cmp
out
xor
jl
fxch
int
inc
push
js
inc
mov
sbbl
lcall
scas
in
push
push
loopne
fildl
lahf
popa
mov
inc
out
ficompl
pop
cmp
sysenter
int
mov
or
mov
jecxz
jle
and
xchg
fabs
mov
add
adc
push
movsb
adc
adc
pop
sbb
shl
cmpl
mov
lods
dec
andb
add
mov
lods
sub
inc
cltd
xor
sbb
dec
hlt
jae
inc
notb
mov
in
pop
cmpsl
inc
in
or
int3
jl
pusha
push
xor
push
adc
cmp
rorb
ret
pop
fidivl
cmp
leave
data16
fisubl
or
cmp
nop
clc
mov
jge
jo
add
sbb
fimull
daa
das
into
cmp
xor
mov
rorl
or
add
ljmp
aad
imul
mov
lret
dec
dec
or
dec
stc
pusha
insb
data16
sahf
gs
push
xchg
imul
jl
rorb
in
cmp
mov
adc
pop
dec
inc
sti
imul
decb
mov
test
dec
testl
push
xchg
in
jb
add
insb
push
sub
lret
cmp
fiaddl
mov
nop
mov
and
xchg
dec
jb
icebp
xorb
cmpl
xor
popf
pop
pop
pushf
cltd
movsb
and
xchg
js
pop
mov
adc
sub
jecxz
pop
pop
mov
ss
adcb
push
pop
sbb
outsl
loop
pushf
cmp
jl
hlt
insl
inc
or
adc
test
jnp
shll
and
sub
test
ljmp
mov
data16
and
shll
jp
imul
pop
pop
push
into
jnp
ds
mov
jne
push
sub
mov
loop,pn
fstps
lock
add
mov
mov
cmp
or
leave
dec
and
inc
mov
sbb
push
lret
mov
sbb
int3
xchg
clc
mov
sbb
rolb
clc
fadd
push
lcall
lret
xlat
pop
or
xchg
cli
pop
cmpsl
push
test
mov
mov
fwait
or
xchg
pop
mov
out
imul
clc
std
lock
xchg
inc
and
aam
popf
scas
cmc
cwtl
cmp
imul
aaa
fsubp
fsubr
ret
sbb
xor
push
mov
mov
in
nop
addr16
adc
sahf
in
daa
sub
jmp
ljmp
iret
inc
dec
adc
out
or
and
mov
jns
cmc
mov
popa
imul
xchg
add
pusha
inc
fiadds
push
ds
mov
out
icebp
add
cmp
lret
int3
cld
cmpsb
bswap
scas
inc
xchg
xor
jmp
popf
cmp
test
ljmp
test
pop
sub
cmpsb
cs
movsb
mov
ljmp
add
xchg
xchg
push
scas
jecxz
mov
popa
jmp
pop
mov
ds
push
filds
js
loopne
jmp
fidivrs
inc
gs
mov
cld
xchg
and
insl
inc
fdiv
arpl
jns
xchg
shrl
push
mov
cwtl
ja
fadd
and
fmuls
aas
fwait
aaa
jmp
mov
push
stc
mov
xchg
mov
mov
shlb
add
xchg
ds
xor
sbb
cltd
jo
bswap
sub
mov
stc
push
cmc
inc
pop
aas
or
xchg
shl
loop
cs
cmp
cs
call
mov
add
cmp
shrl
push
pop
cmp
sub
arpl
lock
cwtl
rorl
sub
sub
cmc
popa
push
insl
lods
fdecstp
jae
ds
cmp
lds
xor
ds
rorb
mov
push
add
mov
test
out
adc
inc
in
stos
out
and
mov
mov
bound
leave
inc
rorb
jae
pop
adcl
in
jge
sbb
inc
add
aaa
jns
lret
jns
test
mov
popa
adc
xchg
call
mov
add
mov
movsl
lea
in
fistl
xchg
test
adc
lods
scas
jg
cmc
lods
push
push
push
cmpsl
out
scas
mov
inc
cmp
dec
stc
rcr
xchg
inc
mov
sub
fcoml
jp
lock
mov
push
push
clc
test
or
lods
fstpt
rcr
sbb
scas
mov
jle
cmpb
mov
dec
mov
mov
mov
push
xchg
ret
pop
add
mov
aaa
adc
push
push
lret
hlt
xchg
pushf
fwait
sub
pop
sbb
repz
and
dec
jb
or
mov
xorl
int3
stc
lock
inc
adc
iret
pop
dec
setl
hlt
test
sbb
jg
pusha
test
cmpsb
cmc
cmp
mov
movsb
fcoml
lret
in
or
xor
mov
lahf
out
and
mov
xor
adc
xor
out
es
stos
ja
shr
icebp
xchg
xchg
adc
bound
add
push
into
cmp
mov
out
push
add
je
lea
clc
lods
xchg
jne
cltd
icebp
imul
or
dec
lods
lods
out
mov
in
lahf
jg
hlt
ficomps
dec
stc
push
ds
lret
xchg
popa
push
orb
ja
sbb
mov
pop
jo
fsubrs
mov
xor
or
data16
sbb
adc
mov
mov
hlt
or
out
jb
xor
ficoms
dec
enter
sub
push
jg,pt
outsb
mov
push
dec
xchg
std
aad
sub
call
mov
scas
dec
sub
fldcw
jbe
aas
imul
and
inc
xor
inc
shll
adc
xchg
test
pop
dec
imul
xchg
jecxz
std
ret
fwait
movsl
stos
xchg
cmp
jmp
xchg
jbe
xchg
xchg
andl
cmp
xlat
sub
nop
or
inc
mov
xchg
addr16
enter
adc
lcall
mov
cmp
inc
lock
xchg
ljmp
sbb
xor
and
subl
mov
adc
sub
popl
repz
or
ret
sbb
das
dec
dec
ret
inc
sbb
out
mov
lock
add
mov
aam
xorl
out
lea
lock
xlat
and
sahf
mov
movl
add
and
lock
jne
sub
imul
add
cmp
and
cmp
nop
divb
cmp
repnz
fnstenv
iret
int3
inc
call
outsb
popa
mov
fbstp
xchg
jge
out
cwtl
fidivrs
dec
push
cwtl
repnz
sbb
bound
jae
push
int
sahf
rol
pop
and
sub
ss
lock
dec
insl
jmp
filds
mov
fs
add
push
xor
xchg
movsb
call
rol
lcall
aaa
stos
int3
add
fdivr
pop
and
cmpsl
mov
jmp
stos
xchg
addb
xor
mov
push
popf
andb
xchg
dec
nop
inc
push
push
jmp
lret
lahf
test
dec
out
sar
push
xchg
mov
in
loopne
push
add
int
mov
sbb
stos
dec
xchg
int3
ret
inc
push
and
adc
ljmp
pop
or
mov
lret
mov
ror
bound
mov
jl
rcl
jle
mov
ret
push
rorl
in
pop
adc
js
fs
pushf
dec
add
pushl
cltd
sub
push
jecxz
inc
or
mov
lock
and
repz
movsb
pop
push
or
lods
pop
fsubs
inc
jmp
aas
xchg
fildll
pusha
out
xchg
mov
mov
dec
out
arpl
arpl
test
sbb
out
mov
mov
xchg
bound
sbb
jns
mov
rcll
fwait
js
xor
lret
scas
and
insl
mov
and
pop
and
mov
and
iret
das
dec
mov
shll
scas
push
nop
adc
push
sbb
in
fwait
dec
pusha
rcrl
sbb
sarb
jp
dec
jg
sbb
lea
add
f2xm1
cld
enter
fldl
mov
fwait
mov
xor
mov
jbe
jb
inc
daa
pop
sbb
int
out
scas
movsl
dec
mov
cmp
jne
cmp
in
hlt
pop
hlt
out
sub
aas
jb
popf
cltd
and
cmp
xor
cltd
xchg
gs
test
jnp
dec
mov
clc
pop
cwtl
xor
pop
jb
push
lret
inc
xchg
pusha
sub
popf
jae
xchg
push
add
cmp
mov
sub
test
push
lret
push
mov
out
test
in
dec
xorb
movsl
je
test
inc
pop
and
sbbl
stc
sub
loope
mov
test
pop
adc
ss
arpl
lea
cmp
or
pop
xchg
decb
pop
xchg
mull
sbb
dec
iret
cmpsb
mov
mov
testb
jl
popa
inc
jmp
iret
jo
sahf
sub
fnstcw
adc
mov
int3
rorb
shll
aad
inc
jecxz
pop
or
pop
shl
xor
jno
inc
or
aad
xchg
inc
sbb
repnz
inc
sub
nop
repz
fwait
sub
lahf
fnstenv
jns
pop
nop
sbb
fldenv
push
stc
jmp
sbb
hlt
aad
dec
push
mov
scas
jae
cmpsl
fsubs
into
jb
lods
xor
cld
loopne
test
fstl
ja
add
cli
aam
int3
push
lock
mov
sub
and
imul
sti
mov
jl
loop
sub
ljmp
jnp
aas
or
sub
jmp
popf
insl
or
outsl
inc
ljmp
aaa
popa
sub
in
push
inc
mov
mov
inc
sbb
mov
into
xchg
inc
cmp
dec
push
adc
xchg
jb
pop
adc
daa
ss
jbe
lret
pusha
cmp
repz
push
nop
fcompl
into
inc
pop
mov
cs
jo
push
pusha
mov
cmp
push
pop
or
or
lods
arpl
das
sbb
cmc
outsl
orb
mov
pop
and
addr16
mov
loopne
sbb
lds
pop
enter
test
lahf
rcrl
aas
test
lock
xchg
sub
jg
inc
in
push
in
cli
xor
xchg
jns
cmp
xchg
and
adc
dec
mov
imul
inc
mov
mov
mov
xor
and
outsl
jmp
rcr
xchg
mov
sub
rcrl
add
insb
data16
cli
or
adc
cmp
mov
aaa
xchg
adc
insl
gs
jp
outsb
daa
jg
cmp
xor
and
mov
xor
xor
and
insb
cmp
add
or
outsl
cltd
jne
pop
iret
imul
insl
aas
sub
pop
arpl
jg
jge
mov
sub
mov
mov
push
mov
loopne
enter
xchg
out
xchg
cmc
xchg
sub
outsb
movsl
push
aas
test
mov
xor
cmp
dec
out
jno
mov
rcrb
mov
jno
sub
mov
stos
jp
push
test
lret
int3
or
aaa
sbb
out
mov
dec
cmp
xchg
inc
fsubr
inc
pushf
jbe
rcll
pop
pop
lods
test
fmull
in
add
jmp
nop
adc
pop
mov
out
int
lcall
push
mov
pop
push
repz
mov
pop
pop
xor
cwtl
mov
xchg
pop
mov
push
fwait
repnz
stc
movsb
adcl
inc
scas
sbb
lock
leave
adc
xorl
out
call
mov
insl
add
jg
jl
sub
xor
loopne
aas
aam
pushf
push
inc
movsl
dec
xor
fnstenv
pop
insb
mov
mov
pop
add
aam
in
adc
pop
arpl
adc
das
lret
shlb
daa
or
sbb
adc
adc
jne
pop
daa
mov
in
jge
add
shll
push
pop
mov
jge
sbb
dec
cmp
and
cmp
leave
div
mov
loope
add
scas
jecxz
negl
pop
imul
add
and
pop
dec
out
lret
pop
fcmove
les
lahf
repnz
incl
jae
push
cmpsl
loope
addr16
je
lret
mov
jb
stos
jnp
ljmp
or
mov
dec
jo
addb
iret
jmp
xchg
sbb
mov
ss
jg
jne
and
sub
pop
mov
fs
int
mov
ret
imul
rclb
push
add
cmc
push
std
adc
insl
nop
je
ds
icebp
xorl
pop
fcomps
bound
mov
cmpsl
and
icebp
mov
aam
or
rcr
xchg
xor
sbb
sbbb
popa
and
jns
daa
cmpsl
jnp
js
mov
lret
inc
ja
xor
mov
in
dec
pop
mov
xor
in
popa
mov
cmc
aaa
movsl
push
push
jmp
xchg
push
out
test
inc
fidivs
jg
pusha
pushf
cmpsb
nop
jo
mov
mov
push
or
repz
mov
mov
test
js
fstpt
mov
xchg
add
imul
sahf
mov
fldcw
out
adc
out
and
mov
xor
cmp
stos
push
mov
daa
cmpsb
notl
push
shlb
stc
inc
sbb
mov
outsl
test
jge
or
sbb
pop
mov
xchg
mov
ret
push
in
shr
mov
ljmp
test
add
in
in
push
mov
movsb
pop
xchg
mov
jae
lret
mov
loop
mov
aam
lea
shlb
inc
lret
cli
xorl
push
and
jne
adc
push
aam
jno
ss
inc
clc
hlt
inc
scas
iret
ss
sahf
dec
inc
in
jmp
mov
sbb
inc
xchg
xorb
jns
mov
aaa
xor
adc
xor
fcom
pop
daa
inc
or
dec
xchg
outsb
xchg
popa
loopne
cmpsb
inc
add
filds
lods
addl
fildll
mov
jae
mov
sbb
in
sbb
pop
sub
orb
pop
shlb
mov
aas
xor
out
adc
pop
pushf
ljmp
enter
push
jae
hlt
stc
push
mov
jp
enter
int3
loopne
mov
push
ja
xor
jmp
mov
cmp
or
and
lods
lahf
and
enter
aam
add
dec
push
push
fs
decl
xlat
sbb
fld
out
mov
popf
inc
and
add
fistl
jns
stos
mov
mov
sarb
jecxz
xor
and
inc
cmp
jg
fs
cltd
jbe
addr16
gs
mov
data16
jae
mov
jne
jp,pt
movsl
lea
shrl
xchg
adc
icebp
mov
xchg
add
call
jg
push
inc
jno
das
inc
and
test
es
jle
idivl
jecxz
mov
cwtl
push
or
movsl
push
or
mov
movsb
daa
in
add
mov
mov
or
jno
dec
loope
jecxz
cltd
loop
dec
and
fldl
aam
pop
enter
fcoml
jnp
test
xchg
or
xlat
jle
lcall
adc
mov
adc
imul
jmp
push
mov
aad
test
scas
hlt
jo
lods
pop
mov
leave
scas
dec
cmc
repnz
movsb
pop
dec
adc
inc
outsb
mov
shlb
or
hlt
mov
adc
adc
stc
cmpb
popa
dec
mov
ds
xchg
or
movsb
push
inc
inc
rsm
lea
add
jl
cmp
mov
xor
pop
or
dec
dec
ja
imul
cmc
dec
xor
cmp
jp
dec
int
mov
pop
stc
pop
test
mov
dec
push
or
jg
adcl
dec
shl
mov
das
xor
sbb
pop
rolb
lock
rorl
in
loope
push
mov
pop
xlat
pusha
pop
jbe
mov
cmp
sub
orb
dec
and
test
add
sbb
mov
push
sub
jg
mov
stos
sbb
mov
mov
fsubrl
fmul
inc
mov
sbb
mov
sub
hlt
push
mov
out
add
jb
pop
ljmp
stc
xor
lea
mov
pop
mov
jmp
cli
mov
xchg
and
xor
sbb
inc
enter
cmp
xchg
mov
cmpsl
addr16
push
mov
insb
ja
jp
daa
inc
add
jge
mov
fadds
sub
pop
mov
jle
loopne
jns
mov
or
cs
fidivs
mov
pmaxub
shlb
bound
stos
add
repnz
mov
enter
push
ljmp
cld
jae
push
loopne
lcall
adc
inc
pop
add
push
jnp
dec
mov
cmpsb
imul
daa
sbb
loop
jb
in
sbb
imul
mov
out
add
or
and
mov
sub
push
dec
aam
jne
sbb
lret
xchg
in
sarb
movb
scas
adc
mov
sub
add
jbe
add
add
dec
rcll
or
sbb
rcrl
lods
roll
out
mov
out
popf
outsb
stos
insl
in
enter
shl
out
adc
mov
cmp
lret
fcmovnb
repz
mov
stc
dec
inc
int
mov
pop
mov
js
mov
mov
dec
ja
insb
jae
cli
repz
mov
addl
push
popf
repnz
inc
sub
in
cli
lret
bound
mov
sub
add
pop
pop
xchg
push
add
gs
mov
push
loopne
fidivrs
inc
jae
mov
jle
icebp
enter
pop
or
jmp
dec
dec
mov
js
mov
pop
test
jno
mov
jp
pop
dec
insl
push
aaa
into
arpl
lea
pop
mov
and
std
fs
repnz
lods
cmp
or
cltd
loop
test
jecxz
xchg
int
icebp
divl
sbb
sub
repnz
push
clc
mov
sti
sbb
mov
and
into
or
fldcw
insl
jno
xchg
loopne
xor
xor
stc
mov
js
repnz
addr16
pop
fcomps
lods
push
fmuls
lock
movsb
mov
dec
and
in
cltd
push
hlt
ljmp
pop
inc
xorl
xor
push
pop
and
sub
xor
jo
pop
sbb
mov
inc
shrb
push
stos
cmpsl
xrelease
lea
ficoml
inc
inc
or
mov
ror
inc
xlat
ss
jecxz
movsb
mov
lds
sarl
and
mov
shll
push
mov
test
insb
imul
lret
pop
mov
cmpsb
ljmp
mov
cmc
push
stc
adc
loopne
sahf
push
add
out
xchg
dec
in
ljmp
cmpsb
mov
lcall
xchg
jp
lock
jmp
xor
push
or
rcrl
stos
mov
mov
sahf
test
jp
push
mov
sub
lods
into
shl
add
pushl
enter
dec
or
cmp
push
andb
lods
jg
test
xchg
cmp
cmp
cmp
pop
adc
in
outsb
mov
sbb
xor
in
iret
pushf
mov
lds
dec
lea
push
jns
popf
je
in
sub
mov
pop
xchg
cltd
xor
shl
pop
cmp
in
out
imul
shrl
clc
aam
xchg
rol
push
imul
push
sbb
adc
movsb
scas
mov
mov
ret
sub
cmc
sti
loope
icebp
add
enter
clc
outsl
sti
ds
dec
mov
sub
mov
mov
add
adc
aam
std
cmp
cmp
inc
sbb
push
ds
js
mov
inc
mov
adc
mov
push
leave
addl
push
sbb
loop
pop
testl
outsb
jno
mov
scas
jnp
and
or
adc
test
push
lret
stc
mov
jg
ficoml
in
cmp
lock
loope
inc
cs
shlb
aam
or
xor
mov
sbb
push
cmpsl
arpl
arpl
adc
cmp
pusha
fcmove
jns
rol
shr
sub
jecxz
pop
icebp
cmp
pop
ljmp
pop
push
daa
mov
ret
ss
addr16
out
inc
mov
int
lea
ss
pop
adcl
mov
aad
psubw
pop
jbe
dec
in
pop
jne
xchg
pop
push
adc
pop
sbb
popf
jl
imul
iret
or
sbb
jnp
dec
idivl
adc
pop
call
loop
add
jns
loope
xor
dec
sbb
shlb
lods
cmp
pop
loop
fdivr
mov
scas
ret
mov
arpl
lds
mov
nop
mov
dec
andl
sbb
and
xchg
ljmp
or
hlt
movsb
arpl
push
lret
les
mov
test
cmp
jecxz
rcrb
mov
mov
pop
and
pinsrw
mov
int3
pop
imul
fdivp
movsb
gs
xchg
and
mov
jb
imul
inc
subl
movsb
cli
insb
mov
mov
sarb
test
xchg
roll
sub
loop
push
and
std
sub
fs
mov
sub
dec
xor
dec
fwait
jbe
stos
cmp
pop
jbe
mov
fdivrl
fwait
pusha
je
inc
aaa
and
out
stc
adc
mov
lea
jg
dec
sbb
repnz
pop
das
frndint
pop
int3
lods
shrl
sub
ljmp
xchg
push
mov
aad
cmp
pop
jp
mov
adc
ss
sub
addr16
dec
out
call
andl
out
lods
sbb
sbb
and
adc
xor
inc
push
mov
jmp
xor
negl
push
push
push
xchg
jg
jo
sub
push
into
in
lcall
xchg
mov
mov
xchg
daa
pop
daa
dec
sbb
jbe
loopne
pop
mov
or
mov
push
scas
fwait
and
test
jns
popf
pop
decl
mov
enter
or
add
into
lds
lock
and
push
je
mov
lods
int3
lds
pop
dec
shlb
adc
mov
jbe
cmp
dec
dec
xchg
enter
insb
in
mov
fwait
mov
xlat
push
mov
leave
pop
sbb
test
js
sub
test
jne
mov
dec
rcrb
lret
jbe
jge
push
cmp
adc
add
test
lcall
out
je
lahf
xchg
pushl
dec
pop
push
adcl
into
xor
cmc
push
or
mov
ja
add
lahf
mov
fisttpl
inc
push
mov
subw
cli
sub
push
dec
or
lahf
mov
adcb
cmp
pop
shl
arpl
into
jno
jo
aad
test
mov
ja
xchg
dec
imul
fst
dec
or
inc
lahf
lds
dec
andl
jl
jmp
loopne
js
lcall
stos
jb
jae
sbb
dec
mov
cmp
ret
push
cs
sub
add
adc
dec
addl
or
addl
bound
js
cld
pop
in
subl
es
aam
xor
mov
fwait
cmp
gs
xorl
jnp
xchg
clc
leave
loope
sub
rolb
or
outsb
pop
pop
or
cmp
adc
mov
aaa
xchg
sbb
mov
mov
cli
pop
mov
mov
mov
jl
push
pcmpeqb
and
cmp
mov
cmp
xor
jmp
shrl
mov
jnp
les
adc
add
dec
loope
call
out
dec
lea
iret
cmc
sbb
les
icebp
or
ficoms
ret
xchg
lods
insl
xorb
sahf
xchg
sbb
aam
adc
inc
mov
mov
in
sub
and
movsl
inc
mov
fwait
stos
pop
repz
and
add
mov
add
xor
imul
push
cs
mov
or
out
sti
pop
arpl
sbb
loope
lcall
lcall
ljmp
push
cmovae
inc
repnz
aaa
nop
dec
inc
pusha
push
bound
jb
gs
leave
loope
movsb
mov
leave
jle
or
push
and
dec
adc
push
clc
int3
js
bound
cltd
pusha
pop
in
movsl
es
aam
xchg
cltd
jnp
or
bnd
push
push
imul
clc
jns
adc
push
pop
imul
push
pop
cmp
sub
lret
fmuls
stos
mov
ss
leave
in
lcall
clc
cmp
pop
sti
cli
sub
out
mov
jge
je
mov
bound
push
imul
mov
jae
inc
jbe
sarb
mov
lret
sbb
push
adc
push
mov
inc
ds
jge
cmp
hlt
adcl
scas
dec
movsl
vpshufd
dec
sub
xor
or
pop
pushf
xchg
fidivs
ja
jecxz
adc
out
sub
xchg
push
les
or
pop
in
pop
adc
push
movsb
in
movsb
loope
popf
sahf
movsl
repz
mov
cli
jo
pop
icebp
push
dec
jb
outsb
pop
cmpsl
test
in
xlat
subb
mov
jne
inc
cmpsl
test
jb
mov
xor
xor
pop
pop
decb
cmpsl
cltd
cmpsl
fstl
sbb
test
hlt
in
jno
jns
in
dec
mov
jecxz
nop
sub
fistps
push
inc
dec
push
scas
jae
imul
sub
add
sahf
cli
test
jo
pusha
cli
sub
inc
xor
mov
jne
repnz
in
movsl
mov
xchg
rorl
add
stos
push
ljmp
sub
ss
clc
xor
ja
stc
add
into
pop
pop
cmpsb
pop
xor
in
inc
stos
out
iret
and
mov
adc
pop
push
mov
mov
pusha
lret
push
imul
pop
push
and
xor
sbb
xchg
js
mov
jp
xchg
rclb
add
mov
mov
pusha
icebp
scas
mov
popf
and
fsubs
push
xchg
sub
les
nop
pop
or
cld
stc
adc
cmc
ljmp
adc
add
cmp
pop
push
in
lret
cmp
leave
out
sahf
subb
repz
lods
dec
ret
cltd
jbe
xchg
or
cmp
or
dec
mov
test
clc
lock
shlb
or
adc
shr
jmp
xor
in
pop
sbb
mov
insl
jmp
adc
or
nop
xor
cmpsl
xchg
loop
pop
jl
arpl
std
lea
sti
add
adc
lcall
cmc
rcr
jns
outsl
loop
inc
mov
jl
out
pop
jmp
dec
mov
fstpt
dec
notb
scas
std
and
sarl
mov
addr16
sti
mov
inc
pop
xorl
or
mov
sub
add
dec
stos
lret
or
pop
mov
out
jae
arpl
xlat
inc
jae
mov
dec
jp
push
sahf
mov
mov
add
std
mov
jae
cmp
push
xor
rcrb
push
mov
cli
xchg
movsb
orb
jnp
cbtw
xchg
push
xchg
shld
adc
idiv
enter
icebp
sub
mov
cmp
dec
sub
adc
rorb
inc
nop
push
sbbl
inc
cmpsl
fadds
xor
test
dec
addr16
push
push
cmc
push
rorl
add
mov
sbb
arpl
lds
aad
jge
out
rclb
and
sbb
popf
sub
fsubs
nop
pop
add
xchg
cltd
or
cmp
jge
inc
push
jmp
mov
shlb
data16
dec
sub
jbe
pop
gs
scas
sbb
adc
ja
add
inc
or
add
stos
push
out
mov
inc
out
and
sbb
push
js
mov
or
icebp
call
jbe
div
movsl
mov
xchg
fildl
sub
out
mov
fimuls
imul
loope
cmp
dec
out
or
xlat
loope
push
adc
mov
jnp
mov
cs
lods
cmpsl
addl
cld
add
push
mov
daa
mov
push
testb
loope
aam
jo
dec
pop
enter
inc
mov
xor
ja
or
js
sub
mov
sub
ret
outsl
pusha
pushf
fwait
jp
cs
arpl
fsubrl
repnz
cmp
filds
test
cmp
movsb
jmp
lret
sarb
sub
inc
inc
cmp
cmp
pop
and
ret
lret
jae
ds
adc
dec
cmc
push
mov
shl
inc
mov
cmc
in
add
or
push
adc
in
lret
movsb
xorl
xlat
pusha
xor
dec
leave
pop
stos
rcrb
push
das
xor
pusha
dec
push
shl
xor
fs
xchg
and
mov
jbe
mov
jl
stc
push
int3
cmp
std
scas
lret
pop
dec
push
cmp
sbb
sbb
jp
mov
add
repz
sub
xchg
xor
inc
cmp
out
xchg
cmc
sub
ret
lret
das
push
lock
sarb
cmc
push
loopne
rcrl
inc
imul
push
call
mov
push
sub
in
jg
add
stos
mov
fimuls
cmpsb
sahf
pusha
iret
pushf
adc
cmp
je
aam
test
nop
inc
sbb
inc
cwtl
lods
fistpl
mov
leave
mov
addb
push
aam
sub
xor
pop
dec
xor
or
punpckhdq
std
mov
xor
push
pop
push
sub
les
pop
mov
cmpsl
or
jbe
mov
sub
sbb
mov
popf
das
loopne
test
sbb
aaa
adc
das
push
shlb
inc
repnz
adc
jmp
aas
leave
and
push
cmp
adc
dec
mov
std
pop
cs
jnp
or
fists
lcall
add
add
popf
lret
out
inc
adc
and
adc
bound
int3
mov
adc
test
lock
sbb
mov
and
xor
fwait
cmp
lret
imul
movsl
iret
jbe
and
sbb
inc
jecxz
scas
mov
fimuls
pusha
sbb
addb
push
inc
mov
test
pop
cmp
mov
es
xor
jl
pop
fcomps
jecxz
lea
jae
push
sbb
mov
popl
daa
jne
and
das
inc
jb
repnz
xor
lods
into
and
sti
mov
xchg
xchg
lahf
jge
jns
sub
vmovaps
pusha
jmp
ljmp
inc
das
adc
testb
sbb
push
fwait
repz
scas
sub
mov
push
stos
inc
stos
mov
sbb
loopne
push
mov
outsb
cmp
js
in
xchg
fidivrs
lds
hlt
sub
lea
push
iret
cmpb
add
xchg
out
imul
xlat
fs
sub
xchg
mov
imul
xchg
cmpb
cmp
inc
jmp
bound
out
hlt
dec
and
push
sbb
push
push
scas
cmp
sub
inc
xchg
mov
loop
push
div
and
fsubl
mov
xchg
xchg
loop
or
pop
lret
xchg
push
mov
pop
fistps
inc
sub
adc
dec
mov
lds
ret
sub
loopne
pop
xchg
cmp
mov
inc
int
fmull
popf
stos
fadds
outsb
jae
outsl
dec
inc
testb
jne
js
add
popf
dec
mov
into
dec
jne
mov
test
jp
mov
repz
xor
mov
nop
mov
ja
inc
jle
pushf
mov
sahf
mov
jae
push
push
jmp
mov
xchg
jl
inc
pushf
mov
int3
sbb
mov
sar
xchg
bound
lahf
push
add
clc
jg
or
mov
sti
sub
aad
divl
push
or
sbb
cmpsl
ret
mov
cmp
cmc
outsb
push
das
bnd
mov
adc
push
hlt
test
lods
add
inc
adc
in
adc
loop
xor
js
jle
cmpsb
stos
adc
nop
pop
mov
ljmp
and
mov
pop
mov
mov
gs
loope
movsl
inc
mov
insl
fwait
dec
rep
jb
in
adc
loop
add
decb
adc
lods
lret
jmp
cmp
xchg
xor
lock
cmp
dec
push
aad
andb
cld
mov
cltd
mov
sub
mov
cltd
cs
or
shll
bound
add
mov
inc
dec
aad
dec
rcr
popf
stc
jge
ret
cmc
adc
pop
cmp
pop
inc
xlat
mov
aad
mov
inc
push
cld
shll
jge
mov
jae
sub
loop
xchg
pop
adc
enter
xchg
stc
push
inc
jae
adcb
movsl
mov
mov
aaa
and
mov
sub
push
dec
mov
cltd
aad
xchg
loop
iret
mov
adc
sbb
out
imul
cmpb
dec
lds
pushf
mov
imul
hlt
stos
jno
pop
cmp
pop
or
mov
and
fiadds
mov
fsubr
test
leave
out
test
cmpsl
add
and
repnz
cmovno
cs
add
test
es
push
ja
dec
mov
mov
mov
mov
scas
xchg
movb
daa
cmpsb
add
inc
out
mov
jecxz
add
faddl
int3
cmp
rol
test
sub
lret
notb
or
fcomi
adc
inc
jnp
jmp
rorl
ret
dec
loop
cmpb
lea
enter
in
mov
test
dec
test
mov
push
push
test
lcall
xlat
loopne
mov
push
clc
xchg
testb
hlt
xor
popf
mov
sub
sbb
sbb
add
mov
test
push
and
lea
xchg
or
push
xchg
popf
test
out
fs
push
xchg
ja
jno
cmp
test
sbb
divl
cmp
jmp
push
sub
int
cli
jo
aas
mov
lds
xor
ficompl
scas
fidivs
sbb
dec
mov
mov
inc
fidivrs
ffree
sub
ret
fidivl
loope
lcall
lock
stos
ds
push
sbb
fwait
pushf
aas
repnz
lret
sub
mov
xchg
dec
fs
or
je
adc
lahf
pop
mov
scas
ds
ret
jecxz,pn
xor
cwtl
jecxz
icebp
mov
lret
push
pop
std
dec
xlat
outsl
push
insb
fnstcw
adc
xor
adc
inc
sub
fcompl
mov
or
rcr
xchg
pop
fidivs
lods
test
inc
dec
xchg
adc
popf
cmp
aas
movsl
xor
in
xchg
ljmp
cmc
xchg
test
pop
pop
hlt
add
cmp
cmp
mov
lret
int
es
and
test
cwtl
xchg
push
repz
jmp
xlat
mov
gs
popf
cmpsb
mov
in
inc
nop
push
nop
daa
xor
cld
dec
mov
push
out
jb
icebp
sbb
sbb
movsl
sti
or
icebp
pop
std
in
mov
shll
loopne
inc
notl
stos
loopne
push
imull
mov
adc
jge
adc
iret
aam
pop
stc
stc
fs
int3
push
xchg
testb
push
mov
mov
pop
ds
xor
fs
and
pop
call
and
lret
cwtl
xor
sahf
mov
shl
into
clc
and
mov
dec
add
add
jo
jge
jb
stos
loop
movsl
push
shll
xor
cmp
pop
mov
inc
sub
stos
adc
mov
mov
jo
xchg
in
std
mov
sub
jb
insl
cmp
lcall
adc
repnz
xchg
ficoml
ficoml
leave
mov
inc
add
ss
adc
outsb
mov
sub
dec
sbb
ret
xchg
sti
push
pop
and
or
add
pop
add
push
jne
sub
movsw
aad
dec
pusha
mov
clc
cmc
ret
jg
std
mov
es
cmc
mov
cmp
or
xchg
sub
rclb
xchg
test
mull
push
cwtl
fstpt
test
jecxz,pt
sub
inc
rcrb
mov
sti
mov
lock
rolb
mov
sub
gs
sbb
out
jl
mov
mov
inc
push
popa
ss
and
inc
add
movsl
and
fistl
inc
inc
xor
leave
iret
add
or
and
test
mov
mov
cmp
push
mov
pop
xor
mov
rcrb
fcompl
loopne
or
outsl
cmp
hlt
fcmovb
inc
lods
ret
setnp
int3
push
in
sub
data16
lea
mov
cmc
inc
xchg
in
and
fldt
insl
out
outsl
or
into
sub
pop
cmc
into
fisubrl
adc
jecxz
sub
stos
aad
pusha
sbb
dec
push
shll
mov
xchg
inc
mov
scas
lret
stc
and
fwait
imul
popf
add
sbb
out
stos
xor
movsb
push
xchg
or
push
mov
add
xor
sbb
add
popa
adc
xchg
imulb
int
fidivs
jg
xchg
xor
fwait
push
push
dec
fisubrs
divl
mov
mov
and
push
push
mov
jmp
push
mov
dec
inc
in
ljmp
aad
cld
mov
aas
pop
sbb
cmpsb
mov
cmp
iret
outsb
cli
shr
adc
in
sbb
lahf
fdivl
jecxz
cmc
xor
push
push
leave
imul
fisttps
xor
daa
inc
and
pop
aad
inc
cmp
push
std
or
movsb
lock
push
cld
push
int
mov
cmp
xor
int3
jle
add
icebp
std
sarl
lcall
fmull
insb
clc
jae
mov
lods
jnp
std
cmp
out
add
mov
add
in
lcall
adc
lret
mov
test
or
jo
jle
aas
pop
sub
mov
xor
mov
scas
fstpl
mov
sarb
dec
push
pop
pushl
sbb
jle
pushf
sbbb
jp
shll
sub
mov
jl
in
popa
les
int3
sarl
pop
mov
sbb
pop
sbbl
add
xchg
dec
loope
popf
cmp
into
aas
sbb
int3
jmp
mov
mov
xchg
mov
or
clc
inc
dec
out
pop
dec
mov
mov
add
stos
in
test
pop
dec
popa
jecxz
or
movsl
and
jnp
and
push
lret
pop
pop
insl
shrb
movsl
stos
cmp
int
xchg
sbb
mov
mov
pop
adc
test
or
jns
lds
sub
ret
dec
test
sub
pop
enter
jns,pt
push
mov
xchg
lea
mov
mov
push
mov
fwait
inc
pop
cmc
test
and
stc
or
in
cli
mov
jo
mov
jns
ss
js
fwait
aas
imul
bound
outsb
insl
push
leave
sbb
pop
xor
sbb
adc
pusha
dec
sahf
popa
or
orl
lods
inc
addl
lcall
add
mov
push
inc
scas
les
shrl
js
xchg
xchg
mov
lock
mov
sub
hlt
and
cld
xchg
mov
mov
pop
mov
mov
jno
lods
sbb
push
pop
mov
pushf
nop
xchg
mov
addr16
je
stos
loope
int
add
or
loope
cmp
ja
test
out
cmp
xor
out
sub
xchg
mov
mov
pop
stos
add
lods
and
mov
inc
jecxz
icebp
adc
push
dec
fs
mov
not
int
in
push
data16
cmp
or
scas
les
sbb
or
mov
in
fs
cmpsb
cltd
call
lock
ds
dec
adc
inc
in
mov
sbb
mov
cmpsl
test
mov
repz
int3
loope
je
jae
ret
mov
mov
sahf
cli
je
push
push
adc
inc
dec
sbb
xor
popf
cmp
mov
mov
test
mov
repnz
mov
andl
xor
test
dec
pusha
stc
stc
xchg
inc
pop
adc
inc
test
adc
das
pusha
dec
jl
icebp
cli
push
adc
stos
mov
pop
mov
enter
jnp
mov
call
cmpb
dec
jecxz
es
lret
out
dec
cld
push
push
clc
sahf
mov
pop
pusha
dec
es
or
jecxz
mov
jg
inc
mov
imul
insb
dec
filds
in
add
or
loopne
xchg
lea
add
ret
pop
imul
dec
xor
subb
jno
imul
xchg
mov
mov
cmp
fiadds
gs
adc
cs
stos
das
dec
dec
sub
xchg
es
aas
cli
orl
in
xchg
ljmp
sahf
inc
sahf
imulb
mov
push
int3
adc
xchg
inc
je
cs
add
cmp
outsl
cmpsb
xor
sub
lods
fsubs
dec
imul
jo
pop
mov
adc
out
outsb
imul
bound
push
les
mov
out
rcll
cmc
sbb
inc
fsts
in
repnz
fcoms
adc
jne
repnz
fistps
dec
data16
idivb
xchg
dec
fbstp
cli
fwait
ret
pusha
hlt
scas
push
dec
dec
jmp
mov
mov
lret
outsl
sti
xchg
push
into
mov
gs
jmp
cmpsb
mov
cmovle
dec
cmp
and
roll
jne
js
aam
test
xchg
inc
and
and
cltd
push
rcrl
sarb
arpl
add
sbb
inc
sub
test
insb
pop
mov
pop
inc
pop
push
mov
adc
imul
xchg
leave
jecxz
cmp
incl
jg
add
inc
clc
mov
jecxz
outsl
push
and
orl
dec
dec
mov
data16
inc
stos
lahf
cli
push
or
xchg
stc
fwait
rol
sub
in
mov
and
ss
inc
adc
sbb
xchg
icebp
sub
out
cmp
test
sub
sbb
mov
jno
jne
fmull
and
andl
pop
add
mov
in
cmc
push
xchg
sub
pop
sub
stos
or
nop
and
mov
xor
push
fiaddl
test
fdivl
gs
in
push
adc
jmp
or
aam
cwtl
sub
aaa
pop
mov
dec
push
mov
outsb
repz
cmp
mov
mov
imul
ljmp
xor
dec
xchg
aam
cli
cmp
mov
mov
sub
dec
into
or
mov
mov
aas
fidivs
loope
pop
fstpl
outsl
xor
sahf
xlat
iret
cmc
adc
std
push
push
lret
in
pushf
call
add
mulb
xchg
test
movsl
fcoms
xchg
movsb
mov
leave
aas
sbb
push
movsl
arpl
adc
push
jb
xor
aad
imul
lret
repz
sbb
imul
dec
mov
nop
lds
and
jae
inc
neg
pusha
out
push
test
das
mov
jnp
subl
cltd
xchg
leave
mov
cmp
mov
jbe
xchg
in
fstpt
adc
pop
pop
push
cmp
mul
fisttpl
pop
les
ret
test
addb
in
sarb
daa
mov
aam
push
sub
mov
mov
out
adc
xor
pop
pop
xor
pop
cmpsl
mov
mov
jle
inc
cbtw
xchg
xor
cld
repz
adc
loopne
rcl
js
fs
into
and
or
test
fwait
pop
inc
pushw
xor
or
ljmp
test
xchg
inc
push
mov
sbbb
xchg
mov
pop
nop
out
mov
mov
xlat
sbb
insb
mov
cmp
push
cmp
dec
and
hlt
sbb
mov
je
sbb
aaa
stos
add
jmp
sbb
test
mov
jae
div
movsb
dec
cmpsb
out
mov
popf
movsb
bound
pop
xchg
add
jecxz
iret
stos
test
dec
enter
adc
or
hlt
sub
jne
or
inc
fdivr
clc
dec
pushf
mov
ficoml
out
xor
mov
out
add
mov
nop
mov
cmp
inc
cmp
push
out
inc
jle
je
jnp
cld
fcmovb
out
clc
imul
pop
push
xor
add
xchg
test
outsb
iret
shrl
dec
es
mov
dec
popa
pusha
xchg
cmp
cmp
mov
mov
cmp
xchg
inc
add
das
xor
and
repnz
in
in
or
mov
shl
lcall
ds
or
push
add
fldcw
test
sub
nop
bound
jno,pn
xchg
flds
mov
inc
xchg
mov
xor
add
fstpt
jp
ds
xchg
movb
pop
inc
inc
aaa
mul
mov
les
gs
into
inc
dec
lods
testl
or
stc
dec
popa
imul
lret
outsb
insb
cmp
lret
inc
cmc
mov
stos
ret
fs
shlb
mov
cmp
or
stc
pop
sbb
testl
out
add
shrl
mov
popa
push
push
rolb
iret
xchg
loope
lretw
jmp
fisubrs
cmpl
call
daa
sbb
jo
inc
insl
and
idivl
rol
ljmp
inc
xorl
insl
or
xorb
test
fdivs
push
jno
sbb
xchg
jnp
call
xchg
add
cld
or
in
dec
pop
adc
cmpsl
lods
imul
mov
adc
lret
mov
fstl
mov
test
out
inc
in
int
mov
mov
add
cmp
mov
pushf
loop
pop
ds
data16
mov
mov
xor
bound
pop
dec
pop
in
adc
out
fcmovu
test
fisubrl
sarb
cmp
fwait
mov
rcr
fwait
xchg
pop
xor
mov
jl
inc
cmp
push
add
icebp
sti
push
mov
cs
lea
notl
xchg
sub
dec
push
jecxz
popa
or
adc
jmp
sbb
lea
es
movsb
mov
int
push
xchg
jbe
mov
sub
xor
mov
inc
cli
sbb
imull
movsb
cmp
stc
scas
and
shll
ror
pop
jl
roll
push
testb
sub
mov
mov
loop
in
push
insb
cmc
add
inc
test
cmp
scas
imul
fwait
dec
mov
bound
ret
popa
inc
je
or
or
test
hlt
adc
inc
pop
pop
addb
mov
jg
int
xchg
pop
int
aas
jae
es
xor
xor
fwait
push
xchg
sub
push
out
gs
test
cmpsl
addr16
xchg
lods
xor
dec
out
std
test
fdivrs
mov
mov
movsl
cmpsb
fldenv
negb
mov
lcall
cmpsl
dec
jbe
inc
dec
aam
mov
xchg
ds
pop
xor
lods
sub
rolb
cltd
js
clc
dec
mov
push
outsb
les
add
mov
aaa
inc
cltd
adc
xchg
cmpl
ret
sahf
dec
fisttpll
xchg
dec
ficoml
and
mov
mov
cwtl
repnz
aam
es
enter
imulb
and
shrl
pop
push
or
cs
pop
mov
fs
scas
sarb
pop
add
ljmp
test
inc
mov
dec
insl
dec
jle
mov
push
loope
in
aas
xchg
mov
imul
pop
sbb
sbb
nop
and
loope
mov
loopne
rolb
insb
xor
test
mov
pop
loope
and
cltd
push
js
outsb
popa
aam
push
notb
inc
cmp
fstpl
dec
adc
or
mov
pop
pushf
xor
jns
sub
xchg
dec
movsb
xchg
sbb
ds
dec
mov
repz
mov
lcall
arpl
cmp
push
outsl
and
and
xor
pop
repz
mov
les
inc
mov
dec
add
jecxz
cmovl
insb
and
jge
jae
jmp
cld
loope
or
jnp
mov
shlb
mov
inc
test
and
sbb
mov
ret
cld
or
xchg
push
imul
or
outsl
loopne
xchg
adc
imull
loope,pn
mov
inc
jmp
icebp
mov
cmp
fimull
dec
in
push
inc
push
adc
in
push
adc
call
mov
fwait
jg
xchg
jle
dec
ret
ds
frstor
gs
fsubr
clc
loope
iret
mov
and
xchg
push
jo
push
pop
and
mov
in
aaa
pop
cmpsl
pause
jnp
out
adcb
lods
incl
js
das
idiv
jle
push
mov
adc
xchg
sub
cli
lock
adc
jo
inc
adc
inc
popf
lret
loopne
bound
icebp
mov
adc
leave
jecxz
xor
xchg
mov
aam
dec
cld
arpl
sub
pop
ljmp
sub
movsb
imul
fstp
decb
xchg
inc
fldt
xor
ret
fdivrl
or
out
arpl
mov
enter
dec
or
push
xor
in
pushf
hlt
mov
ret
icebp
ds
mov
cmp
dec
mov
xchg
mov
pop
gs
xor
popa
popf
popf
xor
xchg
loope
es
insl
sbb
mov
add
dec
mov
stos
push
lods
popa
inc
ja
jecxz
mov
cmpsl
xchg
jmp
lock
loopne
shlb
ficomps
inc
shll
testb
jns
fadd
testb
std
lds
or
sahf
inc
lods
mov
imul
outsb
and
mov
dec
dec
and
cmpsl
nop
arpl
adc
scas
dec
mov
add
or
jg
push
adc
mov
pop
mov
mov
xlat
xchg
mov
mov
mov
xchg
or
mov
cli
repnz
leave
inc
nop
jns
pop
mov
and
cmp
ljmp
sbb
cmp
jne
xor
fnstenv
mov
or
mov
pop
push
mov
gs
sarb
in
add
sbbl
insb
addr16
repnz
fstpl
push
in
inc
sub
mov
inc
hlt
fcomi
pushf
test
in
push
lret
or
push
mov
fadds
fs
dec
xchg
stc
jnp
jmp
lock
mov
outsb
insb
or
pop
scas
es
pop
imul
xchg
test
push
in
or
mov
repz
stos
imul
xchg
int3
xor
jge
shll
adc
test
imul
repz
or
xchg
out
hlt
addr16
xor
pop
mov
icebp
push
dec
dec
push
add
int3
lods
adc
push
xchg
iret
pop
mov
lcall
imul
xor
lock
mov
dec
cmp
daa
sbb
loop
data16
in
sbb
push
mov
leave
stos
push
vpshufhw
mov
test
sub
and
insl
mov
mov
ss
testl
push
test
adc
dec
std
sbb
ss
xchg
xchg
test
test
and
push
jo
jae
push
mov
mov
leave
sub
es
mov
xchg
es
adc
or
jge
xor
xchg
inc
cmpsb
cmp
inc
jle
int3
mov
pop
fnstsw
jb
mov
mov
sub
cmp
xor
push
loope
adc
xor
mov
jnp
mov
clc
cli
dec
nop
test
lds
push
adc
jp
xor
mov
pop
test
cmp
jne
dec
popa
scas
aas
sbb
lahf
jnp
aaa
psubusb
add
sbb
repz
adc
fisttps
icebp
inc
add
sbb
xlat
dec
cmpsb
notb
mov
loop
cmp
xchg
adc
mov
rcrb
xchg
push
daa
lock
xchg
and
out
aas
imul
xlat
out
push
sbb
in
push
jg
cmp
into
mov
jae
shl
xchg
inc
and
arpl
out
lret
and
sbb
and
mov
fsub
adc
lcall
aam
pusha
adc
jo
mov
outsl
loope
sbb
in
or
ljmp
fidivs
mov
mov
cmc
cmp
xchg
into
cwtl
filds
inc
inc
cmp
leave
outsl
sti
enter
mov
dec
repz
jp
mov
lods
iret
imul
adc
sub
bound
dec
sbb
xchg
push
fwait
pop
dec
mov
jmp
adc
add
shrl
in
mov
xor
adc
inc
clc
xchg
mov
enter
push
fidivs
push
push
mov
xchg
dec
xor
test
jnp
sbb
std
shrl
in
ret
shl
adc
js
sbb
dec
dec
movsl
inc
lock
jge
pop
sbb
cmpsb
repz
pop
mov
imul
mov
nop
sahf
int
lret
sahf
inc
adc
sub
push
cltd
sbb
and
aad
add
xor
add
andnps
fsubl
jnp
std
popa
dec
dec
ja
in
ret
mov
mov
xchg
xor
leave
mov
mov
xchg
xchg
ljmp
fbstp
xchg
push
jg
xchg
mov
dec
cmpb
add
or
sub
mov
adc
pop
adc
push
enter
imul
sahf
jnp
iret
addr16
jecxz
fnstsw
jmp
mov
dec
stc
pop
pop
in
xchg
aaa
in
int3
inc
fstps
xchg
in
pop
jb
mov
lcallw
cmc
out
xor
add
inc
scas
mov
stos
pop
test
and
leave
xchg
push
push
inc
test
mov
icebp
fsubrl
cltd
adc
cmp
orb
mov
js
or
push
cmp
repz
arpl
push
cmc
addr16
fwait
mov
mov
icebp
lods
lcall
add
in
inc
fldcw
in
cmp
xchg
push
call
lret
dec
pop
popl
mov
movl
jae
sub
inc
cltd
iret
mov
ficomps
or
jecxz
sub
jno
cmpsb
mov
and
mov
add
mov
leave
xchg
xor
ljmp
pop
ljmp
mov
dec
jb
jo
push
fwait
ret
es
in
jge
xchg
loop
bound
insl
subb
push
cltd
mov
sub
add
stos
add
movsb
mov
mov
fdivrs
add
icebp
les
lahf
push
stos
ss
cmc
pop
icebp
test
push
mov
push
inc
test
push
add
xor
fdivs
jmp
data16
out
in
pop
cli
or
leave
xchg
dec
mov
repz
mov
movsl
xchg
mov
jp
add
xchg
lahf
jmp
fmuls
jg
jmp
in
cmc
dec
pop
call
rcrl
aad
clc
xchg
mov
adc
push
add
mov
lret
les
jl
loope
cmp
sbb
ficompl
sbb
out
loop
xchg
xor
negl
inc
jno
das
subl
je
and
js
pop
in
ds
stos
mov
iret
mov
outsb
pushf
in
xchg
xor
inc
xchg
or
mov
mov
xchg
ja
add
stos
testl
imul
cmp
inc
out
stc
test
lret
cmp
jns
inc
test
pop
push
pop
sbb
imul
push
cmpsb
pop
add
jo
mov
in
cmp
mov
dec
add
mov
and
cld
adc
xchg
arpl
test
icebp
jb
mov
sbb
jle
movl
orb
mov
xchg
roll
jp
lcall
es
testl
jmp
push
pop
aad
sbb
and
inc
lods
insb
loope
or
psubusw
xorl
mov
dec
adc
aad
mov
inc
xor
leave
pop
sbbb
and
fdivl
dec
fisubs
es
imul
and
or
daa
pushf
mov
jo
scas
lds
inc
roll
pushf
orl
jp
repz
inc
mov
dec
stos
stos
sbb
outsl
enter
stc
push
inc
jg
addr16
sti
push
push
push
leave
add
clc
subl
iret
out
mov
out
mov
pop
and
in
mov
pop
push
inc
mov
rclb
mov
movaps
mov
jmp
xchg
es
std
bound
cli
and
rep
nop
pop
adc
jg
cld
in
fildll
inc
in
in
sbb
test
scas
shll
or
loopne
or
jns
inc
push
mov
dec
rolb
leave
cmpl
mov
cmp
mov
sahf
jnp
gs
enter
push
js
xchg
dec
xchg
mov
cli
adc
or
xor
push
jle
xor
push
stos
add
fstpt
cmp
mov
adc
mov
fdivrl
daa
cmp
clc
inc
pushf
in
xor
mov
into
mov
test
cld
xor
or
sub
push
fmuls
sub
aam
sub
push
xchg
outsl
sub
test
mov
sbb
das
push
icebp
jl
in
xchg
jae
mov
jecxz
sbb
pop
jmp
lods
fwait
incl
cld
jp
bound
popa
and
loop
scas
rep
lea
popa
inc
add
inc
jno
jo
rclb
repz
sbb
shl
mov
xchg
and
sub
call
push
dec
insl
imul
and
inc
mov
mov
mov
mov
in
sarl
inc
fs
lods
push
xor
pop
shrl
push
addr16
mov
fstl
inc
add
ret
stos
inc
adc
ret
sbb
les
mov
test
icebp
dec
push
xlat
add
mov
cs
lret
push
or
shr
mov
lret
test
test
pop
xor
icebp
sbb
scas
dec
jmp
outsl
fiadds
out
or
das
mov
cmpsb
push
inc
pop
mov
stc
cmc
and
sarl
push
adc
dec
int3
push
ljmp
jnp
lea
adc
push
daa
mov
enter
lock
inc
ror
sbb
mov
and
roll
inc
stc
ret
stc
test
add
adc
mov
pop
dec
shlb
out
xor
ds
jp
mov
rclb
or
js
mov
ja
jle
jae
aas
or
ds
pop
mov
mov
cld
lods
bound
testl
aam
pop
mov
les
insb
in
or
lret
rcrl
sbb
mov
inc
add
mov
mov
scas
insb
loopne
jo
pop
rol
aad
jo
xor
inc
push
popf
jno
xor
mov
inc
cmp
cmp
cmp
pop
mov
cmc
roll
xchg
fs
aam
call
cmp
cmc
cltd
inc
ja
push
cmpsl
adc
push
popa
aaa
loop
lods
cmpsb
jbe
lret
xchg
repnz
dec
xchg
mov
xor
mov
into
aad
pop
jns
push
rcll
sahf
clc
arpl
mov
inc
orb
pop
jo
push
xor
pop
pop
imul
mov
sbb
imul
ret
stos
jb
xor
mov
cmp
cwtl
paddusw
add
pop
adc
in
loope
stos
or
jl
mov
les
divps
fisubs
popa
mov
and
add
jno
push
mov
xor
fisubrs
andl
leave
and
ljmp
mov
andl
push
lcall
jge
stos
lret
jo
fistl
mov
cmp
ljmp
adc
in
in
std
sub
dec
ds
pop
nop
jle
lcall
cmp
and
push
xchg
push
push
fmul
xor
fsubrl
insl
sahf
imul
fistl
mov
mov
fwait
dec
in
xor
adc
fsubrs
lahf
imul
pusha
rorb
push
add
test
mov
pop
jmp
adc
cwtl
mov
cli
inc
jnp
outsb
sub
lock
jbe
xchg
jne
ss
lock
addr16
nop
imul
mov
mov
xchg
and
decl
and
mov
push
mov
sarb
addr16
pop
pushf
aad
jo
push
xor
sub
aas
push
jnp
mov
pop
lods
push
xchg
cmc
lods
add
fldt
in
enter
add
repnz
test
outsl
inc
js
mov
pop
mov
das
bound
push
aaa
shrl
xor
shll
and
lods
and
sbb
fldcw
movsl
add
push
xor
insl
sbb
mov
pop
das
loop
test
sbb
rorb
addb
nop
and
mov
rcrb
ss
and
clc
jae
scas
mov
pop
fsubrs
jo
add
and
aam
cmpsb
aad
mov
out
xchg
lcall
add
scas
shlb
jb
out
push
leave
jo
mov
or
or
popf
cmp
push
mov
ljmp
cld
add
push
loop
mov
jl
rorl
cmpsb
imul
mov
dec
mov
mov
or
gs
aaa
xchg
lret
xor
pop
sub
pcmpeqw
mov
push
xchg
push
mov
aas
and
out
mov
gs
aas
mov
sub
enter
imull
sarb
inc
sbb
lcall
dec
dec
mov
fisttpl
outsb
jnp
or
imul
cmp
cwtl
mov
ljmp
popf
sub
mov
pop
inc
rorb
imul
dec
mov
jne
mov
jmp
mov
mov
cwtl
sbb
in
jnp
push
adc
ss
push
imul
lods
clc
mov
ret
mov
inc
jne
xchg
bnd
in
xor
in
and
cld
pop
jb
mov
jo
inc
jo
dec
mov
or
inc
pop
cmp
daa
pop
xchg
test
fnstenv
mov
xor
dec
aas
and
mov
sub
scas
nop
add
sahf
fadds
pushf
roll
orb
popa
aas
cs
xchg
cmc
out
test
mov
xchg
lods
sbb
dec
jbe,pt
pop
loopne
jp
divps
ds
ljmp
aam
sbb
xor
clc
xchg
xor
pushl
addb
in
sub
cli
inc
incb
push
daa
jae
lock
push
cltd
aam
pop
pop
repnz
xchg
nop
rcrl
add
std
scas
mov
pop
out
mov
lea
mov
inc
divb
sbb
and
clc
xchg
jmp
mov
js
mov
push
repnz
shr
scas
adc
sahf
push
cli
cmp
xchg
mov
mov
loopne
gs
mov
test
xorb
pop
mov
push
jae
fwait
mov
add
add
test
and
cmp
ret
jl
shrb
ficoml
into
jl
into
cmpsb
pop
js
lcall
shll
inc
xor
or
jecxz
mov
adc
mov
xchg
xchg
or
fmull
rcll
cmpsl
lahf
subb
call
add
pop
fisubrs
std
std
rcr
mov
pop
push
push
mov
ljmp
sub
cwtl
inc
or
jg
jmp
sbb
insl
dec
outsl
jg
cmc
sahf
mov
idiv
xlat
xchg
xchg
sub
es
popa
jne
std
inc
inc
add
jnp
push
push
add
test
call
push
les
pop
jne
push
pop
mov
idivb
or
inc
arpl
cmp
repnz
and
pop
sbbl
in
xlat
daa
cmp
loop
pop
jo
hlt
push
hlt
mov
into
xor
push
out
and
pushf
sbb
jg
es
fs
lods
decb
push
adc
jae
mov
insl
mov
shrl
sbb
test
cmp
inc
xor
jmp
lcall
bound
mov
into
loope
jae
daa
mov
inc
xor
or
sbb
mov
mov
jp
fistl
call
xchg
shlb
dec
stos
popf
cmp
and
push
push
pop
cmp
jge
out
xchg
iret
repz
push
mov
movsl
insl
add
mov
xchg
and
lret
cltd
dec
repz
push
sarb
jle
push
mov
lods
mov
mov
and
sbb
xor
loope
inc
dec
or
push
dec
enter
fnstenv
mov
push
cwtl
imull
fcomps
in
out
jbe
cmpb
test
stos
orb
pop
std
int
sbb
xor
cmpsl
stos
mov
mov
sub
test
sti
aam
jp
and
loopne
imul
xchg
or
es
inc
fwait
jnp
and
in
and
xchg
xchg
inc
push
int
fs
pop
orb
push
push
cmp
dec
daa
insl
dec
jo
xchg
in
das
jno
stc
das
jmp
mov
jg
xor
stos
lods
pop
fidivs
and
adc
push
std
sbb
mov
sarb
jg
jo
lret
adc
test
dec
sub
hlt
xor
pop
jae
lock
bound
hlt
adcl
and
mov
ds
std
out
shll
push
decl
sub
mov
mov
fcompl
cld
fistpll
scas
in
mov
add
push
and
in
fidivrl
sbb
mov
xchg
pop
in
imul
nop
add
aam
xor
fildl
dec
cs
pop
and
test
arpl
insl
and
sub
test
mov
loop
mov
and
jecxz
lcall
mov
adc
out
dec
ljmp
jns
iret
stc
jp
rorb
mov
loop
jae
xchg
aas
in
pop
xchg
repz
xor
mov
pop
mov
fcoms
mov
jle
orl
xchg
dec
lea
sub
push
adc
hlt
cmp
loopne
int3
xchg
add
cmp
daa
mov
jne
or
jne
mov
out
call
imul
stos
in
or
pop
sbb
aaa
jle
mov
inc
mov
decl
cltd
stc
addl
aam
lods
mov
xchg
rorb
or
inc
mov
pop
out
add
clc
xor
jle
mov
stc
sbb
out
clc
or
jecxz
jp
cmp
daa
sub
xchg
scas
lods
pop
out
xchg
lcall
shll
xor
cmp
cmpsl
imul
insl
popw
ja
nop
clc
adc
jbe
jae
mov
iret
inc
jnp
sbb
mov
out
pop
mov
pop
cmovo
push
add
mov
fwait
into
nop
cwtl
roll
nop
mov
pop
stc
inc
lret
push
inc
stc
add
aas
push
jae
and
ret
add
and
sub
ljmp
repz
lahf
push
sbb
bound
adc
shlb
push
jns
inc
pop
jns
fnstenv
aam
orl
cmp
mov
sahf
sahf
jne
insl
into
cmp
popa
and
mov
xchg
leave
or
push
mov
cmpsb
rcr
jg
inc
insl
inc
jo
insb
cmpsb
clc
mov
and
scas
test
mov
ja
sti
jno
mov
sbb
jecxz
je
cltd
mov
hlt
jne
ss
inc
inc
scas
adc
subl
mov
pushf
clc
loop
add
dec
xchg
mov
cmp
fldcw
lea
and
or
inc
adc
xorl
ljmp
inc
test
mov
ljmp
bnd
mov
fidivs
add
mov
xchg
sbb
xor
fstp
push
and
cmp
xchg
jp
mulb
movsl
test
and
add
mov
push
pop
rcr
sbbl
outsb
lea
jno
daa
idivl
and
jno
push
adc
add
roll
cmp
jae
in
xchg
add
add
inc
sbb
push
fistpll
movsl
sbb
and
cltd
add
pop
push
hlt
and
adc
push
fs
pop
sub
and
sub
in
mov
ret
adc
int3
sbbl
outsl
call
outsl
inc
xor
stc
sbb
pop
shlb
add
popf
or
mov
cltd
cltd
dec
sbb
push
fisubrl
push
cmp
int3
sub
dec
jp
repz
add
jno
xor
les
jne
pop
cmpl
out
jle
int
sub
insb
imul
lahf
mov
dec
cmp
mov
sbb
cmp
call
bound
pop
cmp
cs
push
mov
push
add
dec
pop
test
cmpsb
push
jne
push
xchg
cmpsb
ficompl
dec
sarb
cltd
cmpsb
ss
flds
stos
dec
cmp
pop
add
add
mov
mov
mov
mov
int3
pop
jmp
xchg
dec
dec
cli
cmpsb
in
mul
cmp
stos
cmp
movsl
adc
push
sub
xlat
in
ljmp
sarl
ret
xor
cli
das
push
bound
ljmp
add
sbb
jne
adc
ja
in
lods
cmp
pop
mov
pop
jno
cmp
cmp
lret
dec
repz
xlat
adc
imul
cmpsl
out
inc
mov
xchg
push
aaa
daa
mov
arpl
stos
addl
dec
mov
scas
cwtl
leave
test
shl
sbb
sti
out
mov
addr16
xchg
pusha
push
xlat
cmpb
test
dec
out
add
sarl
jo
clc
adc
pop
in
sbb
sahf
pop
shlb
test
roll
dec
test
cmp
or
jl
xchg
adc
pop
and
push
pusha
pop
je
mov
mov
xchg
jnp
mov
inc
fildl
push
add
addr16
hlt
adc
adc
ficompl
inc
pusha
lahf
mov
sbb
inc
lds
fld
fisttps
mov
shrl
xchg
popa
pusha
inc
roll
xlat
adcb
xchg
in
pop
push
inc
out
ss
movb
shlb
push
pop
mov
jmp
adc
inc
jbe
pop
repnz
jp
lods
add
jp
rcrb
inc
imul
scas
mov
cmpsb
scas
mov
andl
xchg
sub
pop
add
sub
cli
iret
pop
icebp
lods
fdivs
inc
xor
jne
lods
adc
jecxz
jl
cmp
mov
adc
dec
or
push
push
fwait
cmp
addr16
call
jmp
stos
js
rorl
mov
pop
sub
cli
rcr
pop
mov
inc
and
popf
adc
mov
jp
call
call
cmp
in
pop
loope
adc
call
test
frstor
mov
mov
arpl
or
int
push
loop
fimull
cmpsl
pop
cmp
fwait
pop
or
fidivl
and
adc
mov
mov
adc
imul
dec
sbb
xlat
movsb
daa
leave
mov
xchg
test
lcall
xor
gs
mov
gs
mov
and
mov
out
adc
mov
sbb
pop
imul
popa
sbb
sbb
inc
jge
or
outsl
andl
add
dec
dec
mov
add
aaa
cli
or
pop
lods
xlat
xchg
lahf
loopne
mov
out
mov
rolb
frstor
jmp
mov
cmp
inc
sbb
aaa
add
push
xchg
adcb
fbld
ss
iret
xchg
or
mov
xor
jg
pop
adc
jl
push
mov
xor
xchg
les
adc
push
sub
xchg
loop
push
jg
mov
dec
xor
movaps
inc
mov
movsl
add
jmp
les
sub
jp
inc
int3
adcb
push
or
xchg
and
mov
test
mov
ja
xor
icebp
loope
dec
imul
ss
ss
xchg
xor
je
add
mov
and
mov
loope
notb
stos
in
loopne
adc
loope
gs
divb
pop
fistps
xor
scas
jne
cmp
leave
add
push
loope
les
mov
xchg
imul
xchg
stos
push
cwtl
add
stos
pop
or
dec
mov
data16
xor
xchg
lock
xor
jmp
cwtl
inc
divb
cmpsl
addr16
imul
fs
adc
aad
inc
pop
icebp
and
mov
es
enter
in
lock
fstpl
fsubrl
iret
sbb
jae
mov
push
cld
push
mov
xchg
lods
hlt
inc
fs
inc
mov
sti
stos
or
pop
frstpm(287
and
mov
pop
mov
jo
loop
clc
pop
nop
hlt
cmc
pusha
dec
mov
ret
xchg
sub
gs
cld
and
movsb
in
inc
out
inc
adc
ficoml
je
or
jae
xchg
sbb
mov
subb
pop
dec
xchg
test
inc
and
rorb
pop
and
mov
inc
or
pop
ret
loopne
mov
inc
ljmp
lret
mov
and
mov
loopne
pop
cmpsb
cmp
add
push
js
jno
aad
sbb
add
add
fsubp
mov
shl
sbb
mov
and
int3
cltd
mov
xlat
mov
call
mov
stos
adc
mov
popa
inc
icebp
in
sub
pop
push
lods
in
push
add
out
inc
ds
jl
movsl
jle
push
pop
faddp
and
xchg
outsb
push
ret
rorb
and
jmp
out
lods
inc
xchg
inc
xor
adc
pop
repz
aam
xor
nop
xchg
subl
in
and
xor
jle
int3
push
out
testl
aam
mov
imul
mov
dec
lock
out
lds
add
out
lds
out
add
inc
pop
int
test
jg
test
insb
sbb
mov
mov
cmc
fstpt
jne
xor
es
fucomp
aas
arpl
inc
loopne
push
mov
in
jle
sbb
pop
and
lret
in
push
pop
push
loopne
inc
arpl
idiv
push
and
or
push
in
cli
pop
inc
popf
mov
or
into
cltd
mov
repz
out
clc
push
sbb
and
jb
adc
imul
outsl
sbb
nop
mov
jns
inc
fldt
sub
sbb
push
and
mov
pop
sbb
shlb
adc
mov
cwtl
push
movsl
or
call
mov
push
add
mov
and
stos
dec
mov
sub
or
aaa
and
jbe
mov
push
mov
mov
mov
out
pop
pop
push
jo
roll
in
jb
pop
adc
sti
lea
add
test
sub
xchg
mov
push
xor
xor
add
dec
ja
notb
jns
aam
arpl
push
sbb
popf
xchg
mov
jns
dec
repnz
shrd
push
cld
or
or
inc
jb
mov
pop
push
popf
cld
push
repz
jle
hlt
inc
je
hlt
sub
into
mov
imul
pop
jno
and
insb
std
outsl
dec
sarb
lahf
imul
hlt
lods
push
and
and
loop
pop
pop
jecxz
mov
adc
mov
mov
imul
xchg
sub
mov
mov
dec
pop
fucomip
scas
xchg
test
adc
pushf
das
add
inc
sbb
test
dec
sub
daa
enter
fwait
mov
xor
pop
daa
xlat
leave
jg
fisubs
lcall
jmp
dec
fcmovne
movsl
pop
pusha
fcompl
int3
divl
ret
push
and
xchg
fildll
mov
cltd
idiv
lods
insl
cmp
jle
paddb
lock
les
and
dec
push
push
loop
ja
dec
sub
cld
jg
in
push
fwait
inc
jbe
ds
add
int3
fbld
sbb
fnsave
movsb
dec
in
push
xor
movsl
in
push
arpl
push
addb
out
mov
daa
test
sub
jno
stos
daa
inc
mov
xor
and
jecxz
lret
es
stos
out
test
mov
jg
fcoms
sbbb
and
or
cwtl
xchg
push
and
xchg
pop
mov
pop
xorl
lock
mov
jo
mov
fisubrs
mov
sub
sub
cwtl
and
push
popf
aad
mov
fbld
mov
lret
insb
roll
ja
fcomps
inc
cmp
int3
pop
or
mov
push
cmc
fdivrl
fwait
mov
mov
out
cmc
pmaxub
xor
int3
repnz
xchg
cs
push
add
lods
adc
xlat
je
test
pop
pushf
cmpsl
or
aas
add
ret
pop
mov
xor
pop
insl
push
push
or
lods
xchg
dec
sbb
xchg
stc
scas
mov
mov
das
mov
inc
mov
and
and
fnstsw
fstl
arpl
repz
jp
mov
dec
push
jo
jp
roll
rclb
data16
mov
xor
fwait
incb
pop
mov
xor
mov
and
pop
repz
es
jnp
pop
lahf
lods
push
cwtl
mov
jmp
dec
jno
clc
in
pop
adc
add
popf
mov
adc
hlt
pushw
jae
mov
jnp
pop
ficompl
pop
ror
ret
xchg
mov
fwait
mov
imul
or
inc
xchg
hlt
outsl
cmp
ja
cmp
add
mov
adc
adc
sub
inc
out
add
and
in
mov
rcrb
scas
jae
lcall
jae
in
lcall
jg
lds
daa
add
push
bound
add
and
jecxz
mov
repnz
test
xor
sarl
les
cmp
lods
or
sbb
mov
mov
cli
xor
movsb
mov
roll
inc
call
iret
jno
int
xchg
mov
xlat
sub
cmp
out
rolb
mov
pop
movsl
pop
test
mov
pushf
test
loopne
daa
je
xchg
cs
xchg
xchg
adc
adc
dec
lock
bound
jbe
cltd
jp,pt
clc
outsl
lods
jnp
push
sbb
mov
aas
xchg
push
pop
jo
popa
outsl
call
stos
mov
dec
movsb
inc
sub
sub
ret
inc
shr
out
mov
mov
mov
jo
pop
mov
add
mov
lahf
je
cmpsl
stc
xor
add
or
add
sahf
cmpsl
mov
pop
pop
cwtl
cmp
hlt
sub
ds
push
int
inc
jnp
dec
lcall
pop
jle
push
enter
inc
int3
out
enter
pusha
adc
lds
call
inc
ja
int
ror
inc
pop
es
pop
ss
sub
xchg
ljmp
add
xor
push
cmp
outsl
ja
mov
add
add
aaa
and
dec
adc
xor
dec
nop
stos
jge
test
or
sarl
stos
or
mov
dec
in
sbb
fcoms
mov
mov
test
ret
xchg
push
pusha
push
test
dec
cmpb
cs
pop
in
pop
rcrl
mov
mov
pop
mov
lahf
mov
sub
cli
pushf
mov
push
adcl
movb
jp
stos
les
add
sti
jecxz
cmpsb
mov
adcl
xchg
cmpsl
icebp
and
mov
adc
sbb
out
or
push
xor
testb
aam
or
add
stc
leave
mov
cmp
stc
out
xor
push
or
repz
add
and
sub
in
xor
test
stos
dec
addr16
aad
inc
mov
fwait
lods
test
add
mov
mov
dec
xchg
outsb
jmp
int3
sbb
inc
xor
scas
inc
sti
in
jns
pop
lea
arpl
lods
pop
mov
enter
push
je
sub
fs
rcll
insl
leave
clc
shrb
pop
xchg
ja
sahf
jmp
stos
iret
shl
sbb
mov
scas
mov
cmp
lods
inc
sbb
rolb
push
xchg
pushf
aam
enter
sub
sahf
pop
nop
mov
das
cmc
inc
je
add
enter
or
loope
mov
pop
in
mov
add
xlat
fxch
push
mov
icebp
xor
mov
push
pop
dec
push
mov
mov
inc
inc
push
adc
std
cmp
jl
ja
push
lret
pop
jmp
fcmovbe
popa
sbb
orb
ljmp
inc
mov
repnz
cltd
mov
pusha
test
cmp
jmp
fsubrs
sub
and
inc
out
mov
push
ret
mov
mov
xchg
push
pushl
cmpsb
sub
lods
xor
cmp
xor
or
push
aad
rorb
sbb
adc
inc
pop
sbb
mov
lods
js
in
sub
mov
sub
call
loop
pop
test
imull
fdivs
lods
shrb
stos
mov
mov
and
dec
xchg
mov
xchg
xor
add
call
xchg
mov
shlb
lret
iret
mov
mov
in
ljmp
arpl
mov
fsubrs
push
pusha
xchg
inc
sub
xor
or
cld
enter
ds
xor
sti
test
das
mov
mov
mov
jns
das
xor
cltd
sub
je
daa
pop
ja
loope
mov
out
pushf
fistpll
jbe
hlt
xorl
mov
push
xchg
pop
pop
jb
jnp
flds
loopne
jae
push
idivb
mov
stos
adc
add
sbb
cmp
xor
fisttps
in
jnp
mov
dec
ss
xor
lahf
lock
xor
lea
or
mov
js
cmp
cmp
arpl
jae
add
pushf
nop
xor
ror
jo
push
and
lahf
add
jl
cmpsl
mov
fmul
lock
and
sar
pop
pop
cli
sub
jbe
rcl
jp
rcrl
add
xchg
fbld
in
sub
mov
adc
mov
out
mov
jns
add
fwait
jno
mov
mov
add
std
sbb
das
leave
jmp
fwait
in
and
aaa
cli
repz
dec
or
pop
and
lea
call
test
lock
xchg
dec
mov
pop
outsb
adc
mov
sahf
lcall
imul
iret
cwtl
mov
dec
mov
mov
pop
jecxz
out
punpckhbw
in
ja
xchg
pop
test
subb
sbb
insl
mov
insl
or
adc
mov
ss
test
sbb
push
inc
inc
in
enter
push
out
xchg
mov
mov
std
pop
xor
bound
jo
sub
xor
sub
int
shl
add
pusha
inc
adc
aad
xchg
jne
out
outsb
adc
mov
lds
clc
sub
mov
insl
fidivl
imul
shll
mov
mov
bound
sarl
or
enter
iret
scas
dec
out
inc
adc
fadds
ss
xchg
mov
mov
std
xchg
dec
movsl
movsb
aaa
jnp
mov
pop
jg
andl
add
ret
mov
push
ljmp
adc
cmp
cmp
xchg
adc
mov
xchg
lcall
popa
sahf
dec
imul
ds
sahf
add
enter
out
and
stos
call
lahf
nop
jne
jnp
cmp
mov
push
mov
cli
cmp
mov
outsl
fcmovnb
add
or
idivb
sbb
and
add
jne
andl
and
in
xchg
push
clc
ret
xchg
jecxz
or
add
pusha
dec
imul
and
xchg
fs
adc
out
popl
imul
xor
sbb
sti
arpl
cs
mov
outsl
and
inc
pushf
arpl
repz
insb
gs
jl
xlat
loopne
fimuls
iret
int
xor
pop
inc
cmp
clc
and
push
jnp
and
pushl
fwait
in
pop
dec
call
daa
mov
inc
js
rcll
push
jl
test
fdivl
jecxz
dec
lods
or
sub
sbb
popa
lcall
aam
mov
xlat
mov
lret
sub
insl
lods
bswap
pop
testb
inc
fbstp
addps
clc
mov
mov
mov
cwtl
xlat
fildl
test
mov
adc
adc
ja
fnstcw
add
dec
pop
cmp
pop
mov
in
shll
sbb
pop
or
mov
sbb
and
adc
cmp
das
mull
push
cltd
jge
inc
xor
scas
mov
out
or
add
xchg
out
insb
xchg
inc
out
sarb
or
dec
xchg
lret
in
cs
and
add
push
jl
mov
mov
sbb
cmpsl
xchg
stos
iret
cmc
mov
xchg
inc
stc
xchg
cmp
and
sub
out
or
mov
jnp
pop
lcall
xor
cs
push
mov
or
jp
in
dec
mov
push
xchg
testl
mov
fisubl
sub
leave
mov
push
shr
dec
cltd
test
in
mov
call
aad
pop
cmp
mov
cli
xchg
int
aaa
xchg
dec
inc
scas
ret
pop
imul
movsl
jl
or
fwait
rorl
pop
cs
test
outsb
stos
lret
dec
aam
repz
cmp
shr
js
leave
ret
ss
xor
loopne
int3
ds
jmp
stos
and
loopne
icebp
into
cld
data16
rorb
cli
fadd
sahf
test
hlt
scas
jp
mov
adc
add
loop
add
xor
into
pop
mov
cs
pop
cmpsb
sub
push
pop
pop
movsl
and
pop
cmp
dec
fisubrl
mov
aaa
xor
nop
xor
push
sbb
pop
push
fiaddl
pop
jnp
loope
sti
lods
mov
and
xchg
push
sub
ljmp
shl
dec
add
shrb
push
movsl
shrl
mov
adc
inc
inc
mov
shrl
scas
sbb
lock
sbb
scas
xor
xchg
mov
mov
ret
sbb
sbb
or
or
test
insl
adc
push
mov
std
xor
rcr
push
pop
push
mov
and
stos
loopne
sbb
adc
adc
jnp
mov
shl
xchg
push
sar
sub
sahf
shr
jecxz
repnz
mov
test
out
cmpsl
icebp
push
out
pop
xor
pusha
add
jge
xlat
ds
or
cmpsl
jl
in
mov
jecxz
pushl
xchg
pop
xchg
scas
jae
rcr
cltd
xchg
cmpsl
jge,pt
jge
mull
mov
mov
pop
or
add
fwait
push
cwtl
iret
fsub
and
mov
push
cmp
loop
push
dec
jae
ds
stos
adc
add
jg
mov
stos
testl
fistpl
sub
push
test
aam
das
hlt
pop
or
lods
push
repnz
inc
fs
jo
hlt
adc
sub
pop
push
xchg
add
cmpsl
lea
int3
adc
lea
xchg
insb
loop,pt
adc
out
mov
dec
aam
jnp
inc
jle
jns
int3
pop
sti
repz
cmpsl
test
faddl
cmp
pop
clc
mov
and
add
test
aas
iret
daa
dec
dec
mov
push
adc
xor
call
lret
mov
pop
xor
shlb
push
mov
mov
arpl
loop
jns
out
or
dec
push
push
inc
cmpsl
xchg
xor
dec
xor
cmp
stc
mov
or
push
idivb
in
inc
inc
mov
mov
arpl
outsb
lret
sub
das
imul
lds
xor
sar
clc
dec
dec
mov
pop
enter
ficompl
push
mov
scas
lods
ss
mov
xor
js
mov
jne
incb
push
popa
and
test
pop
adc
cmp
ret
out
cs
inc
testl
pop
sbb
hlt
push
rclb
xchg
jmp
test
leave
stos
je
dec
out
pop
addr16
mov
arpl
push
or
xchg
pop
xchg
js
sub
jnp
pusha
mov
cli
imul
pop
and
test
jns
and
push
iret
mov
int
and
mov
push
jnp
pop
pop
lock
mov
arpl
gs
loopne
stos
cmpsl
ljmp
fmull
pop
xor
jmp
pop
add
xchg
mov
inc
mov
es
scas
call
push
outsb
dec
mov
add
push
push
inc
ret
bound
loope
dec
pop
mov
fisubs
jmp
loop
or
and
arpl
pop
lret
lahf
test
or
int3
lcall
fidivrl
dec
mov
aam
mov
arpl
pshufw
test
divb
subb
adc
mov
les
roll
arpl
sahf
pop
pop
scas
and
mov
call
mov
out
mov
cmp
cld
cmp
test
cmp
jl
pop
loope
sarl
or
add
in
testl
out
aam
xchg
out
lret
mov
xchg
fsubrs
xor
rorb
mov
in
enter
out
mov
cmp
jbe
pop
xlat
mov
shlb
mov
push
sub
test
ficoml
fcoms
jno
or
stos
push
aam
aam
fidivrs
jmp
popf
and
fucom
out
popf
lods
pop
and
jle
xor
mov
scas
icebp
aas
jbe
jne
push
xchg
mov
or
repz
xlat
out
jne
dec
or
stc
mov
icebp
ret
dec
aam
jmp
out
pop
imul
and
xor
jb
out
int3
jae
daa
nop
lea
dec
sub
xor
jnp
xor
mov
push
push
lcall
mov
sbb
push
decl
mov
xor
sub
mov
lret
push
addr16
push
jmp
or
and
addr16
andb
mov
jg
pushf
insb
aas
mov
inc
inc
mov
xchg
out
mov
dec
rcrb
pushf
jno
pop
lea
cld
or
mov
aad
lret
nop
pop
jne
jno
mov
inc
call
jne
stos
jp
cwtl
pop
inc
xor
es
iret
mov
ljmp
mov
sub
jle
or
loope
or
out
bnd
iret
clc
xchg
je
test
cs
aam
push
cmp
add
jno
push
and
gs
sbb
pop
lock
cmp
pop
fimuls
repz
add
adc
outsb
inc
pop
mov
mov
mov
mov
cwtl
and
pcmpgtd
sub
add
or
sbb
neg
mov
push
stos
or
push
jo
call
add
sub
pushf
sbb
out
mov
ret
cmp
scas
mov
ret
xor
leave
sbb
stos
fisttpl
lods
fcmovnbe
pop
xchg
ss
nop
or
or
icebp
jp
lahf
add
das
xchg
rcll
xchg
mov
into
nop
dec
fwait
jge
pop
aad
mov
outsl
push
mov
push
in
and
out
out
jbe
scas
hlt
sbbb
popa
jle
pop
mov
pop
pop
test
fcmove
or
insb
jl
or
or
fsubrl
jp
inc
mov
cmpb
in
fs
add
add
cld
adc
mov
aad
aas
in
and
test
inc
lds
inc
loopne
or
ss
dec
mov
mov
das
dec
je
sub
or
outsl
xor
sub
das
or
push
xchg
jno
lea
push
orb
dec
pop
jo
xchg
icebp
mov
iret
jb
or
sarb
mov
inc
and
mov
out
dec
pop
lahf
test
xchg
ret
jmp
xchg
xor
jnp
lret
fldcw
mov
movsl
loopne
xchg
dec
mov
fwait
sbb
dec
inc
stos
push
mov
jns
std
outsl
jbe
ret
pop
daa
or
xor
sarb
mov
mov
bound
xchg
call
lods
xchg
lds
adcl
ss
jmp
jmp
push
push
jge
cmp
into
adc
cmp
int
movl
and
jae
cltd
mov
iret
ret
jle
pop
mov
jl
vaddsd
add
mov
mov
in
sub
jnp
shlb
push
in
xlat
cs
or
inc
bound
cmp
or
mov
dec
adc
mov
fiadds
sub
cmpsb
outsb
or
or
ja
sub
mov
out
xchg
and
push
int3
dec
out
adc
imul
stos
xchg
int3
or
shrl
aas
cmp
js
ret
xchg
loope
sahf
in
repz
sbb
jmp
pop
dec
jmp
ds
mov
ret
dec
push
adc
jl
loopne
es
sti
shrl
add
mov
das
add
mov
cltd
dec
rorb
ljmp
add
cmp
jae
cmp
ret
xchg
movsb
mov
mov
mov
add
sbb
mov
fs
fdivrs
repnz
add
loope
pop
mov
fs
test
fistps
mov
adc
pop
outsl
dec
imul
add
add
mov
sbb
xchg
push
adc
fdivrl
pop
push
sbb
imul
sub
xor
or
fmulp
jmp
in
pop
adc
inc
push
and
inc
sahf
add
push
inc
cmp
ss
cltd
xchg
int
add
push
jmp
test
and
movsl
enter
gs
pop
fcomps
jg
adc
pop
pop
xor
movsl
mov
push
cli
sub
jp
in
inc
sub
cs
dec
cmp
and
inc
inc
add
mov
xchg
lret
ja
inc
ret
pop
and
or
imul
sub
xor
fistpll
cmc
leave
subb
xchg
cmpsl
add
cmp
mov
dec
clc
daa
loope
pop
adc
cmp
cmpb
rclb
fldenv
jl
out
mov
stc
cmp
pop
cs
lods
imul
xchg
fidivrs
call
xor
push
inc
mov
dec
or
jns
cmpsl
fstpt
or
mov
mov
pop
js
loopne
lret
cmp
test
jmp
jbe
lods
test
shrl
add
inc
int
pop
sub
sub
frstor
dec
sahf
adc
out
mov
fwait
inc
movsb
rol
mov
lds
daa
pop
cmp
nop
add
int
int3
aas
inc
int
mov
mov
add
xor
add
pop
inc
out
inc
adc
inc
sbb
xchg
das
mov
dec
loope
arpl
or
inc
scas
add
push
mov
sub
xor
jle
mov
in
sbb
lcall
sub
xchg
inc
sub
loop
clc
jne
gs
adc
push
cld
xchg
cmp
popa
repnz
jp
mov
andb
addb
mov
lret
fldt
dec
xor
mov
shrl
mov
mov
mov
sbb
fnstsw
or
push
mov
sub
inc
aas
xor
cmp
bound
mov
cmpl
jl
int3
cwtl
out
icebp
or
or
cwtl
bound
mov
push
xchg
mov
sub
clc
cmp
inc
push
jne
and
xor
ss
mov
js
jg
adcl
mov
loop
push
or
sti
and
aaa
lds
push
push
fadds
mov
lods
jl
push
stos
repz
shlb
fisubrs
mov
je
inc
lea
stos
sbb
shll
cs
xchg
and
aas
subl
je
sub
insl
lcall
mov
jo
jb
add
pop
inc
xor
sub
fnsave
fcmovnb
mov
ds
or
push
aaa
inc
imul
cwtl
imul
scas
and
and
lahf
mov
and
and
mov
inc
add
cmp
enter
mov
lds
cmp
orb
inc
inc
fldl
lcall
imulb
cmp
and
sbb
cmp
jno
inc
iret
mov
shll
jbe
inc
lcall
sti
or
and
sbb
sub
mov
fwait
add
js
sarb
adc
xor
and
call
pop
loope
pop
out
sub
fs
test
add
cld
cmp
jge
sarl
mov
icebp
insl
and
add
mov
add
jp
enter
rcll
jae
mov
mov
mov
xchg
cmp
sbb
ror
and
loope
mov
mov
out
popa
xor
je
inc
test
mov
fs
pop
xchg
xor
inc
jp
xor
or
loope
mov
outsl
push
jecxz
popa
std
stos
pop
shr
cmpsb
outsl
aaa
or
push
dec
ljmp
add
pop
xor
lea
cli
sbb
cmp
xor
adc
push
sbb
clc
jne
shlb
jge
ret
daa
cld
cmc
imul
call
jmp
cmpb
pop
jno
repnz
dec
cmpsl
cmp
push
pop
cli
clc
sahf
push
clc
les
push
sub
adc
mov
push
lret
adc
add
cmp
nop
push
adc
sub
fwait
and
call
icebp
cli
jecxz
ficoml
adc
xor
cli
call
cmpl
jno
mov
jle
leave
xchg
mov
lret
fldcw
int3
repnz
dec
mov
mov
xchg
fildll
aam
repz
push
repz
in
mov
jb
adc
push
scas
clc
cmpl
das
shlb
into
jp
xorb
lret
jbe
test
push
dec
fwait
int3
incb
lds
sbb
mov
mov
fisubrs
jnp
pop
cmp
or
fstl
ss
pushf
lock
pop
lea
out
mov
mov
mov
lahf
sub
pop
push
push
adc
or
jp
fdivrl
and
daa
mov
mov
mov
fcoml
dec
cmpsl
or
jne
out
sbb
sub
xor
loop
rcrl
loopne
repnz
stos
fidivs
push
imul
sbb
dec
in
dec
les
cmp
jg
xchg
pop
in
test
or
int3
addr16
jb
and
ljmp
lcall
xor
xor
aam
jp
sub
add
or
pusha
div
fidivrl
mov
mov
jmp
mov
sbb
ljmp
push
ds
push
fisubrl
test
xor
lds
mov
mov
cmp
int
mov
sub
dec
lods
ja
and
pop
adc
in
cmpsl
rolb
adc
test
rdtsc
adc
mov
out
sub
push
and
andl
mov
sti
push
iret
out
es
pushf
daa
cmp
mov
add
std
inc
sub
mov
lret
arpl
iret
cmp
gs
pop
lahf
jae
cli
mov
loopne
mov
pushf
pop
push
mov
adc
jecxz
cmpsl
inc
out
push
jl
cli
rcll
leave
jge
ret
sbb
lock
pop
movsl
test
xchg
cmp
aaa
mov
popaw
cld
push
push
dec
enter
dec
rorb
jl
ljmp
mov
dec
lcall
fistps
sub
aad
add
je
ja
xchg
push
sti
les
insb
ljmp
stos
cmp
adc
jnp
jecxz
adc
mov
ljmp
shrl
inc
mov
enter
ret
ja
fwait
dec
rorl
jl
xor
int
inc
and
mov
mov
jmp
jns
scas
xor
jnp
std
push
pop
or
scas
cmp
jne
mov
jl
out
outsl
jecxz
pop
repz
push
arpl
mov
imul
fsubrs
enter
xchg
js
and
sbb
and
add
mov
mov
xchg
repnz
arpl
les
leave
pop
cmpsb
and
rolb
aad
mov
jne
jle
ljmp
repz
loop
jnp
es
xor
xor
mov
add
add
push
popf
add
decl
repnz
mov
xchg
pusha
or
xchg
mov
daa
std
fs
loop
inc
lret
in
jecxz
gs
cmp
add
insb
cmp
pop
push
scas
mov
mov
into
dec
push
jle
and
push
mov
mov
mov
add
dec
incb
pop
mov
dec
pop
pusha
loope
repnz
jno
pop
cmp
push
mov
cld
stos
stc
xor
xchg
adc
lcall
ret
divl
mov
cmp
in
sbb
fcompl
ja
cltd
into
enter
pop
sbb
icebp
sti
push
pop
xor
xchg
cld
cs
add
pop
mov
adc
push
rclb
aaa
or
mov
call
sbb
je
popf
and
pop
xchg
xor
aad
inc
mov
add
clc
push
xor
pop
in
out
push
das
mov
ljmp
inc
jmp
cmp
inc
scas
mov
hlt
scas
ficoms
ja
fnstcw
mov
jb
pop
bound
or
mov
xchg
jp
push
je
filds
mov
fwait
jle
inc
insb
das
scas
ds
sti
add
xchg
xlat
jne
loope
leave
out
mov
cmpsb
xchg
insb
jne
out
mov
das
mov
mov
sbb
pop
xchg
test
std
sbb
arpl
jnp
dec
cli
jae
xlat
lret
push
fcmovbe
addr16
mov
mov
cmp
mov
xchg
aas
aad
loope
rol
sbbl
pop
adc
xor
aas
mov
push
outsl
dec
adc
mov
repz
fsubs
xchg
push
pop
mov
adc
stc
icebp
mov
cs
daa
fwait
fs
adc
es
mov
and
and
jge
shl
insl
xchg
hlt
pop
test
mov
or
popa
movsb
out
scas
daa
cltd
ret
jo
sbb
sbb
ss
dec
xor
xor
test
jmp
mov
out
dec
jle
jmp
subb
add
xorl
pop
dec
and
jae
sbb
lods
xchg
cmp
les
scas
jns
mov
mov
cmp
lcall
sub
xchg
mov
std
mov
and
pop
and
je
inc
push
clc
jle
ss
inc
in
push
adc
jg
cmp
es
cmp
mov
cmp
rolb
jnp
xchg
jp
idiv
loop
xchg
jo
jge
inc
fwait
lcall
adc
xor
ret
cmp
xchg
xchg
ret
push
mov
jecxz
dec
or
add
movsb
pop
add
imulb
jbe
pop
mov
or
es
loope
push
or
and
xor
mov
in
js
and
and
test
fs
cmp
or
add
outsb
inc
add
icebp
add
into
adc
out
test
imul
cmpsl
pop
cwtl
cmp
adc
dec
sti
aad
and
jbe
xor
icebp
sbb
inc
popa
mov
loopne
js
push
inc
xchg
or
mov
sub
cmp
inc
dec
sub
rolb
movb
fists
nop
scas
lret
xchg
jb
mov
push
mov
das
leave
inc
pop
out
bound
pop
stos
shrb
xchg
leave
and
sbb
dec
sub
lods
ret
lret
test
and
and
push
mov
nop
sub
mov
cli
or
push
fs
adc
popa
cmc
clc
cli
popa
dec
sub
leave
jle
xchg
cmp
mov
rclb
xorl
jge
popa
sbb
mov
mov
lcall
mov
jns
lret
push
lret
lods
dec
push
sarl
orb
jmp
mov
mov
inc
das
repnz
aam
imul
lods
sub
and
ss
lods
stos
lcall
dec
nop
cmp
xor
and
fstpl
leave
arpl
or
mov
fldenv
add
mov
rolb
jle
out
and
mov
cmp
bound
mov
mov
xchg
xor
mov
scas
lret
adc
add
cmpsb
iret
mov
in
inc
cmpsb
push
mov
test
cmpsb
cmp
mov
and
mov
pop
mov
dec
or
mov
pushl
mov
stos
pop
lret
fcmovbe
jne
cmpsb
aam
mov
cli
cmp
repz
fldt
xor
or
fs
ss
loopne
sub
push
cmp
adc
dec
mov
cmp
mov
fdivrl
inc
aam
and
xchg
jae
push
cmp
int3
add
jne
push
pop
cs
lods
jle
xor
cld
and
pop
adc
stos
adc
push
xchg
frstor
dec
into
or
mov
divl
shrb
sti
xchg
pop
adc
arpl
push
mov
jnp
push
jmp
sub
lods
lock
dec
cld
in
jne
sbb
sbb
movsl
cmc
mov
popa
lock
adc
test
jns
mov
bound
dec
std
jnp
rclb
movsl
cwtl
fisubs
imul
lock
out
popa
pushf
add
loope
sbb
add
aad
push
lea
inc
mov
addb
xor
push
rcl
jnp
mov
out
and
pop
enter
add
cmpsl
addr16
sbb
outsl
data16
pop
adc
pop
mov
jnp
lods
int
mov
mov
les
push
push
popf
fs
lahf
insb
xchg
add
mov
int3
pop
jbe
dec
mov
cltd
push
out
cmp
dec
add
jnp
stos
xchg
push
jle
lods
push
test
dec
or
add
push
mov
loop
push
mov
lret
cmpsb
aad
inc
lcall
hlt
and
xor
add
lods
jp
pusha
or
pop
cmp
push
hlt
mov
inc
call
mov
dec
inc
inc
cmp
mov
movsb
aad
mov
std
push
outsl
aas
lods
dec
aas
mov
je
push
lahf
lahf
inc
mov
jnp
aas
and
dec
int
adc
lret
out
popa
ljmp
or
repz
sub
repz
inc
add
mov
add
ret
sahf
and
cmp
mov
push
inc
mov
sub
adc
mov
popa
inc
sbb
jbe
lods
xchg
pusha
std
nop
sbb
xor
xchg
inc
sbb
ret
out
int
ss
out
dec
or
mov
xchg
sbb
jg
mov
nop
xor
xchg
inc
add
fcom
add
test
dec
xchg
and
divb
cmp
sub
in
adc
ret
lahf
hlt
imul
mov
push
adc
ret
cmp
adc
or
push
outsl
jle
in
sub
out
fs
jns
sbb
or
enter
sbb
xor
push
sbb
sahf
dec
pop
sti
add
or
xchg
and
push
dec
and
xor
in
iret
and
push
and
dec
jbe
xor
stos
xchg
adc
loopw
jg
jnp
jne
xor
push
xchg
dec
adc
mov
mov
inc
push
sbb
out
mov
fst
jp
and
sar
and
cmp
ret
push
inc
gs
and
sub
aam
xchg
mov
dec
push
test
push
inc
inc
sbb
mov
sbb
sub
xchg
and
dec
out
inc
jl
out
sbb
or
push
pop
mov
ret
clc
pop
inc
sub
mov
fsubs
jae
imull
testb
mov
push
arpl
cmp
or
out
inc
adc
inc
xchg
jl
lret
filds
cwtl
pop
sbb
rol
lock
xchg
push
cli
pushf
lret
pop
repz
or
clc
inc
cmp
mov
cld
push
push
ficomps
sbbl
jecxz
or
fidivs
mov
or
les
or
add
jnp
clc
aaa
pop
mov
pop
push
faddl
dec
int
popf
fisubs
lods
insb
fbld
mov
dec
call
test
fildll
lea
fldl
cwtl
sahf
pop
inc
ss
jno
cld
jp
repz
lds
icebp
and
fdiv
mov
fiadds
imul
dec
dec
and
cmp
movsb
push
repnz
decb
lret
mov
add
sub
dec
xchg
sub
out
sub
push
into
loop
pop
xorb
jl
out
dec
movsb
roll
add
fwait
aad
xchg
mov
test
pop
dec
movb
cwtl
mov
add
ljmp
push
inc
scas
pop
lahf
mov
loope
imul
or
sbb
mov
hlt
mov
mov
mov
inc
icebp
lahf
fldcw
stc
stos
xchg
jg
or
jl
test
roll
ret
xchg
pushfw
cmpsl
dec
insb
shr
sbb
mov
int
inc
pop
mov
and
add
imul
push
adc
lods
das
sahf
in
lock
scas
pop
popa
add
adc
jbe
arpl
or
mov
push
cltd
cli
outsl
out
push
cmp
inc
jo
cwtl
lods
popa
xchg
adc
mov
orb
cmpsb
add
dec
jmp
mov
jnp
xlat
sbbb
repz
dec
inc
sarb
fildll
jl
jmp
mov
mov
mov
rcr
in
cmp
daa
jle
push
and
out
push
pop
mov
mov
pop
fcomip
adc
jae
xchg
inc
mov
jge
inc
mov
cmc
mov
loopne
xor
lcall
imul
icebp
mov
movsl
movsb
fucomip
fwait
mov
dec
loope
dec
and
jae
test
pop
movb
pop
int3
push
mov
and
pop
or
xchg
rcrl
ds
inc
shll
jp
nop
dec
jnp
push
stc
and
jp
popf
inc
push
je
cmp
lods
dec
add
popa
mov
push
aas
data16
adc
sbb
mov
into
mov
lods
pop
or
adc
gs
aaa
jnp
stos
mov
in
adc
inc
roll
xchg
aas
out
out
add
jnp
mov
roll
xchg
scas
sub
dec
or
push
clc
iret
push
lret
sub
aaa
mov
mov
int3
std
arpl
mov
adc
mov
xchg
sub
adc
imul
and
push
cmp
and
aam
sbb
sti
push
jno
push
imul
lcall
mov
mov
stc
xlat
pop
add
outsb
shll
mov
or
cmpsl
popa
inc
arpl
sti
mov
loop
add
icebp
or
mov
xchg
mov
fs
jge
test
mov
decl
fwait
repnz
test
call
sub
ret
jb
jae
inc
jns
lcall
enter
dec
into
xor
data16
cmp
test
cli
adc
stos
xchg
mov
or
mov
cs
jnp
addr16
and
out
mov
adc
mov
pop
or
into
xor
gs
es
outsb
pop
pop
push
cmp
lds
pop
fldt
jle
mov
cmp
mov
addr16
repnz
cmpsl
dec
pop
sbb
into
fwait
ja
inc
push
lret
int3
fidivs
pop
inc
mov
aam
testl
mov
xor
push
xchg
or
icebp
mov
adc
dec
mov
inc
pop
stc
pop
mov
sub
decl
cmc
dec
inc
cmpsl
pop
fists
loopne
fcmove
xchg
into
sub
mov
mov
mov
in
ss
cmp
dec
decb
pop
inc
pop
xorl
outsb
lret
pop
imul
adc
pop
adc
in
popa
mov
outsb
shl
push
push
into
stos
test
cs
fnstsw
and
fiadds
sti
xchg
movsl
xlat
mov
lock
xor
cmp
popf
addb
mov
iret
cltd
cli
hlt
xchg
or
incl
sub
mov
stos
movsb
dec
adc
ja
cmp
pop
mov
leave
dec
sub
jmp
lcall
mov
cltd
mov
lret
adc
scas
insb
push
push
test
dec
sbb
test
insl
ja
dec
inc
into
pop
xchg
jp
loop
stos
or
xchg
cmc
mov
mov
push
and
shlb
in
test
pusha
push
and
pop
jp,pn
fsubrl
cmp
lcall
insl
push
xchg
pop
mov
sub
hlt
jle
dec
cmp
push
cmc
add
mov
nop
jg
enter
repnz
add
xchg
sbb
add
jns
shl
push
adc
jo
add
dec
dec
pop
pop
test
push
add
icebp
push
push
jge
imul
add
adc
in
mov
or
mov
and
pusha
loopne
and
pop
sub
incl
icebp
jns
fadds
call
pop
xlat
pusha
cmc
movsb
dec
aad
out
in
mov
sub
popa
stos
pop
sbb
mov
dec
lret
xlat
lret
or
clc
push
pop
ja
sbb
int
xchg
cmp
sub
push
inc
sbb
frstor
mov
sbb
in
pop
sub
add
fstpt
sahf
dec
leave
sar
mov
pop
push
dec
mov
lods
cltd
push
inc
pop
in
cmp
fsub
rcrb
dec
cmpsb
imul
push
sbb
fldcw
pusha
jb
inc
sub
sub
cli
inc
lcall
ja
popf
je
pop
push
andl
cwtl
les
insl
sahf
push
mov
jg
je
jbe
test
xor
inc
cmpsb
jecxz
popa
push
fildl
loope
outsb
adcl
xchg
jle
push
movsb
sbb
jmp
lcall
pop
adc
xchg
push
ret
mov
cmp
pop
fmuls
fdiv
dec
rclb
pop
dec
test
pop
xor
add
sub
fstl
pop
inc
add
movsb
ss
push
insl
xor
mov
daa
dec
dec
sub
jecxz
pop
lea
add
jle
and
test
repnz
inc
data16
push
cli
xchg
and
sbb
xchg
in
out
out
loope
jb
xchg
jns
xlat
daa
sub
mov
or
pop
mov
push
mov
pop
sarb
mov
add
xchg
sbb
cmp
sahf
xchg
js
mov
push
xor
mov
iret
xor
es
aam
sbb
add
jg
inc
adc
add
aaa
adcb
mov
test
in
push
hlt
adc
pop
adc
fidivs
mov
lods
shrb
fsub
jbe
arpl
cmpsb
dec
push
add
mul
insl
adc
int
pop
mov
adc
cmp
jae
or
in
enter
and
std
sti
xor
xchg
adc
cmp
cmp
push
pop
jns
xchg
shrl
xchg
mov
arpl
sbb
ljmp
pop
push
rcrl
lea
out
out
sbb
mov
cmp
nop
iret
xlat
inc
add
pop
leave
inc
out
adc
adc
lock
jp
inc
fadd
mov
pop
aas
insb
xor
sub
mov
and
es
sbb
nop
push
movsb
push
dec
rorl
sub
in
push
jae
or
popf
xchg
xchg
negl
xor
inc
scas
fwait
in
ret
aad
in
mov
xchg
lahf
adc
lea
rclb
cmp
pop
or
jo
pushf
pusha
xchg
adc
shrb
pop
fcmovnbe
out
call
int3
jecxz
test
ret
jnp
adc
loopne
cmp
test
jo
add
outsb
loop
and
ds
mov
pop
test
mov
leave
les
es
dec
test
in
and
and
jg
in
pop
cltd
inc
les
data16
sahf
test
test
out
loopne
repz
lds
popa
xor
xchg
fwait
pop
mov
push
dec
or
inc
xor
jnp
mov
aas
arpl
clc
jno
jecxz
sbb
add
add
push
out
adc
addb
dec
xchg
shr
mov
arpl
lahf
mov
fiaddl
adc
cmp
mov
movsl
je
ljmp
lods
out
push
lock
jo
sub
outsb
ds
or
xchg
mov
sub
dec
mov
fiaddl
adc
jge
mov
sub
pusha
out
int
stos
aaa
dec
aas
xor
lock
les
mov
mov
addr16
das
fisubrl
xor
nop
sbb
rorl
addr16
sub
popa
orl
outsl
fstps
daa
sbb
add
rcll
xor
unpckhps
in
insl
hlt
mov
mov
push
jg
push
lock
js
shll
sbb
test
inc
dec
cmpsl
and
cmpsb
cli
fwait
sarl
jmp
cmpsl
in
nop
ret
add
jecxz
int3
xchg
xchg
xor
mov
xlat
ret
stc
ss
call
jp
stc
jl
scas
sbb
test
ja
call
ljmp
mov
cs
repnz
inc
xor
xchg
bound
adc
xchg
imul
xor
repnz
cld
or
es
push
jp
dec
push
pop
cmpsb
mov
lret
push
add
inc
das
lods
cmp
inc
mov
clc
inc
xchg
jno
xchg
or
mov
push
jg
adc
ficompl
inc
insb
addr16
in
dec
mov
aaa
dec
sub
arpl
or
jp
jae
jo
cmp
jmp
xor
push
cmpsb
fsubs
adc
loop
lret
jge
xor
in
cmp
out
lret
or
fcoms
add
xor
mov
mov
cmp
pop
xor
fcoms
fs
lcall
lret
mov
outsl
sub
and
jl
jae
andb
mov
sbb
dec
xor
xchg
rorb
inc
xor
dec
pop
aam
test
xorl
in
fimull
rol
repz
cltd
mov
nop
xlat
xchg
mov
or
mov
test
fstl
enter
add
xchg
sub
subb
out
xchg
mov
pop
movsb
or
xchg
fs
mov
in
dec
jmp
cmp
push
push
xor
mov
inc
repnz
mov
mov
and
test
stos
leave
stc
lea
insl
inc
lea
push
cmp
gs
hlt
mov
sub
subb
jp
rolb
jne
cmp
mov
sbb
jbe
insl
xchg
repz
repz
push
iret
and
rcrl
and
hlt
push
stc
or
faddp
xchg
add
dec
mov
adc
adc
test
xchg
aam
push
xor
and
jns
dec
mov
mov
adc
xor
jle
mov
ret
subl
cmp
stos
pop
and
mov
lret
fstl
mov
jmp
ss
inc
nop
cmp
pop
jbe
call
stos
and
xor
add
adc
cmp
sbb
add
sub
cwtl
mov
dec
fs
inc
mov
adc
leave
mov
push
aad
add
inc
xchg
out
aam
loop
scas
or
cmp
insb
add
or
movsl
xor
aas
adc
ljmp
jnp
int
cmp
gs
sub
jmp
jnp
es
std
xor
ds
xchg
shrb
inc
adc
into
shr
adc
scas
sub
push
out
pop
add
das
mov
insl
test
arpl
sub
push
test
cmpsb
mov
xchg
pop
shrl
mov
and
xchg
fs
adc
and
es
xor
cmp
xor
sbb
loopne
mov
mov
mov
sbb
mov
push
or
adc
jmp
add
popf
xchg
inc
mov
mov
bound
dec
icebp
sbb
out
jg
lcall
push
pop
pop
mov
add
add
mov
mov
imul
pusha
jl,pn
int
leave
dec
and
dec
push
scas
clc
and
push
push
pop
ret
jmp
std
test
gs
adc
fmulp
mov
lds
dec
xchg
sub
mov
mov
mov
add
push
mov
fsubrp
mov
jle
sbb
in
out
dec
dec
xor
jo
dec
push
mov
jne
pop
mov
sbb
or
pop
lea
insl
push
cmp
clc
enter
xchg
jp
sub
popa
inc
addl
add
jbe
fldenv
push
xchg
lret
dec
adc
xchg
mov
mov
add
dec
dec
dec
int3
pop
push
push
xchg
or
sbb
stc
mov
xchg
sbb
pop
sbb
rcll
push
cli
test
sub
ss
out
jne
or
jp
ret
or
xchg
repnz
pushf
sbb
mov
jle
cmp
xor
insb
and
inc
pop
out
pop
add
les
mov
or
testl
sbb
ficoml
sub
movsb
jmp
cld
movsl
ret
push
ljmp
sbb
iret
mov
popf
sub
cmp
ja
mov
lock
divb
mov
pop
sbb
sbb
pop
xlat
jbe
mov
fwait
insb
and
push
and
fs
cld
imul
or
ljmp
mov
adc
jbe
fsts
out
pop
ss
mov
bnd
push
sbb
sahf
or
addr16
pushf
mov
xor
mul
in
add
jo
movsl
outsb
xchg
xorl
or
scas
mov
mov
mov
mov
pushf
popl
mov
addr16
addr16
jns
cmpxchg8b
cld
rcl
aam
fistpl
pop
xchg
ds
or
ret
pop
fadds
in
mov
sub
sbb
data16
or
sbb
cwtl
nop
and
pop
das
and
xchg
adc
inc
cmp
fdivrs
mov
icebp
or
outsb
orl
mov
test
sub
inc
xchg
jg
incl
ret
dec
cld
and
fdivl
insl
push
pop
insl
inc
jb
and
mov
cwtl
adc
inc
add
xor
jnp
fwait
adc
lret
fstpl
xchg
out
sub
mov
or
push
push
int
call
outsl
aas
dec
push
mov
jnp
sub
mov
or
xabort
stos
popf
pusha
fldenv
movsb
les
loope
aad
dec
xchg
out
jae
ffreep
push
cmp
and
mov
mov
jo
es
mov
adc
ret
popa
lret
lret
xor
loope
xchg
jbe
rcll
sub
xchg
sbb
sub
mov
jb
ficoms
popa
xchg
repnz
pop
xchg
inc
insl
sub
cmp
mov
int3
xchg
aam
fistl
mov
push
mov
sbb
divl
test
mov
cmpl
xorb
jne
sub
ss
jl
fbld
mov
ds
mov
xchg
jge
int3
cmp
jns
loope
cltd
out
stc
push
mov
dec
or
out
xor
test
push
cmp
jle
cmp
mov
test
jbe
pop
jae
pop
mov
push
add
movsl
fistps
clc
test
dec
mov
cmp
adc
scas
lock
push
out
add
pusha
inc
jg
inc
cltd
mov
lret
inc
mov
ja
sbb
sub
jae
stos
jg
and
pop
fisubrl
jbe
pushl
out
std
push
pop
push
sbb
push
shll
or
lret
enter
dec
movsl
lods
xchg
and
in
jne
js
dec
stc
push
jbe
or
pop
xor
adc
add
in
add
clc
movsl
or
add
aaa
nopl
or
sbb
das
arpl
and
cmp
call
sbb
mov
mov
aad
movsl
aam
add
in
dec
push
xlat
movzwl
xlat
ret
arpl
rcl
ss
xchg
pop
adc
test
pushl
jmp
pop
xor
inc
fdivl
rcrb
ret
jmp
sub
jl
js
ja
jns
push
loope
pop
mov
sub
stos
les
dec
cltd
mov
rorl
xchg
xor
iret
cmp
lret
lock
jb
inc
ret
jmp
xor
ficoms
imul
jp
repz
xchg
stos
sub
xor
xchg
mov
frstor
stos
leave
in
xchg
mov
gs
cld
push
mov
mov
inc
dec
and
icebp
testb
inc
or
fdivr
insb
or
jge
push
fs
sbb
mov
mov
mov
xchg
inc
lcall
or
push
add
lret
cmpsl
xor
add
stos
push
mov
sbb
imul
jne
ds
mov
imul
cmp
xchg
mov
jns
out
pop
or
lods
or
push
mov
rorl
out
lds
sub
push
movntq
pop
mov
rclb
dec
mov
and
out
mov
xchg
push
stos
xchg
fmull
add
pop
add
push
jmp
push
popa
cmp
dec
dec
imul
sub
outsb
mov
jbe
xor
in
pop
inc
pushl
insb
aas
mov
mov
ds
iret
add
jno
add
mov
sarb
hlt
out
sub
out
inc
or
mov
xchg
jmp
addr16
pop
or
dec
cmp
xor
cwtl
mov
cmp
add
xchg
dec
icebp
fucomp
add
es
mov
or
pop
add
loopne
inc
inc
in
iret
pop
cmc
sub
test
fnstcw
adc
jbe
and
mov
insl
lods
inc
movsb
insb
sub
cmpsb
js
sub
out
mov
adc
pop
mov
mov
stos
push
jb
jmp
sti
mov
mov
mov
inc
pop
repz
out
loop
add
lret
add
sbb
pop
ss
or
add
and
ljmp
or
movsl
jb
pop
in
stc
arpl
push
mov
hlt
push
cmpsl
jg
mov
and
push
xchg
cmp
and
vandnps
bound
outsb
pop
pop
push
enter
jge
in
sub
out
pusha
or
cmpsl
imul
add
mov
loope
lods
cmp
fidivl
call
data16
loop
xchg
dec
ds
loop
dec
fstps
popa
mov
or
jge
inc
mov
in
gs
jae
outsb
leave
in
lret
cmp
jecxz
or
pop
fcoml
out
enter
bound
negb
and
jge
test
fnstsw
ja
mov
idivl
sbb
sub
lods
cltd
out
sub
mov
dec
cmp
xchg
mov
setne
pop
cltd
lret
cmpsl
mov
add
call
push
loopne
inc
in
jno
sub
cli
push
pop
cs
test
jle
lods
in
ds
mov
fdivrl
into
mov
dec
adc
cmpsb
inc
adc
call
lods
imul
lret
loopne
jns
das
out
outsl
in
lcall
aam
std
pop
roll
push
ss
dec
mov
or
jae
leave
shll
scas
sub
mov
iret
data16
arpl
cs
mov
push
push
dec
jae
out
into
hlt
adc
add
sbb
xchg
fsub
cli
lahf
sbb
mov
movsb
push
int
adc
jecxz
adc
inc
jmp
iret
lahf
pop
inc
xchg
and
jno
xlat
gs
ret
fwait
jecxz
test
ljmp
sub
out
dec
imul
icebp
scas
cltd
loop
inc
stos
fbstp
aas
inc
mov
ficomps
ret
outsl
sbb
xlat
xchg
sub
jmp
faddp
scas
subl
sar
dec
stos
xchg
jecxz
adc
dec
sub
sub
pop
inc
divl
push
sbb
fdivr
dec
clc
fisubs
sub
push
jmp
jge
into
icebp
xor
ret
fwait
cmp
lock
sub
push
in
stos
lods
shll
xchg
stos
dec
xor
mov
or
inc
scas
mov
xor
push
and
test
xchg
and
aad
sub
clc
adc
mov
jne
aam
call
fdivrl
stc
cmp
inc
jle
lock
pop
mov
sub
sbb
xor
test
inc
and
lods
frstor
sbb
test
mov
mov
mov
shlb
jne
ret
adc
adc
dec
sahf
cmp
cmpxchg
ret
mov
adc
pushf
je
xchg
iret
xorl
jge
xlat
and
fidivrl
and
add
scas
loope
lcall
mov
xchg
popf
int
xor
repz
sahf
mov
inc
adc
jo
or
es
mov
and
xchg
cmpsl
mov
lds
adc
fisubrs
sub
inc
pop
cmpsb
mov
rcr
mov
jle
inc
xor
pop
jnp
adc
dec
mov
push
jno
xor
adc
mov
aaa
pusha
dec
mov
dec
pop
xchg
and
out
mov
pop
jo
adc
inc
and
xor
inc
xor
push
into
jbe
mov
adc
xchg
fucomp
fbstp
repz
jnp
cmpxchg8b
and
pop
dec
mov
jae
in
or
jecxz
sub
leave
js
repnz
inc
push
rorb
es
add
clc
sub
adc
rcrl
mov
cs
push
xchg
bound
sti
jmp
mov
sbb
mov
and
into
call
pop
cpuid
sub
lods
adc
icebp
daa
mov
fistpll
push
loopne
cmp
lock
fdivrl
test
leave
shl
sbb
repz
jg
dec
dec
add
sbb
and
xchg
jp
lea
je
lahf
jp
scas
xorb
stc
pop
decb
mov
sbb
lock
dec
xor
xor
mov
mov
das
hlt
xchg
pop
popa
adc
pop
sbb
mov
rcrl
addps
sub
sarl
push
repz
mov
inc
cmp
fidivs
jmp
mov
ss
xchg
in
inc
add
pop
adc
inc
jns
cld
push
in
mov
lds
pop
lods
lret
push
push
in
enter
rclb
insl
pop
sub
lret
sti
leave
stos
mov
fwait
sub
loop
or
or
xor
and
dec
loopne
fsubrl
flds
aaa
or
or
cmpsl
je
int3
test
xchg
push
cs
sub
call
pop
add
xchg
sbb
movsb
xchg
xlat
push
sub
idivl
test
loop
cmpsb
stos
sbb
mov
adc
stos
add
add
or
mov
in
inc
cmpsl
sub
in
pop
lds
sub
jl
cltd
lods
add
aam
aas
imul
dec
mov
gs
jp
sub
adc
jmp
lret
sbb
mov
adc
and
and
iret
inc
mov
jge
lods
jbe
sub
xor
ret
repz
jp
test
mov
cltd
cmp
mov
call
out
push
shll
add
movsb
std
lods
lret
xchg
lods
add
or
dec
cld
negl
xor
rorw
mov
push
push
xor
add
sbb
call
jp
inc
mov
lcall
dec
or
mov
rorb
mov
shr
fisttpl
insl
and
pop
xchg
adc
inc
jne
pop
fsubs
xor
and
or
popf
inc
mov
shrb
sahf
xor
test
cmp
dec
adcl
or
loope
in
pop
fisubrs
mov
push
or
and
inc
push
mov
push
xor
inc
fsubp
fsts
lret
scas
rclb
add
aad
in
lods
dec
stos
mov
cli
pop
aad
stos
jbe
movsb
int
sub
dec
cmp
repz
jl
cmpsb
ret
pop
mov
aaa
loope
push
popa
test
ss
sbb
add
out
cmpsl
cs
push
mov
cmp
and
mov
push
mov
in
cmc
stos
fidivl
insl
jge
insb
test
jo
xchg
clc
mov
in
mov
lahf
inc
pop
sbb
pop
je
int3
adc
jb
fs
inc
adcl
ret
dec
lahf
adc
add
int3
lret
cwtl
clc
mov
cs
in
ret
jge
jo
in
icebp
sub
dec
xor
lock
push
fcoml
leave
xorps
xor
loop
cmc
mov
sbb
jae
leave
out
repz
dec
mov
pop
adc
cmc
lds
jbe
es
mov
popf
and
adc
push
dec
daa
aaa
es
add
dec
dec
xor
enter
int3
rolb
repz
ja
sub
dec
scas
and
cmp
inc
cmp
pop
xor
push
push
ja
xchg
inc
jle
and
scas
aam
push
ljmp
fwait
sbb
xor
test
mov
dec
mov
push
mov
mov
mov
xchg
stos
push
add
xchg
jcxz
aad
jle
adc
negl
movsb
enter
jmp
enter
icebp
pop
fnstenv
push
sti
std
fdivrs
adc
or
mov
add
jge
add
sub
imul
inc
or
mov
add
push
mov
sbb
mov
sub
leave
loopne
ss
pop
mov
sub
std
loopne
lea
into
ficoml
gs
cwtl
pop
popl
cld
mov
repnz
adc
dec
push
jp
sub
jle
sti
jge
stos
xchg
xchg
adc
mov
das
pop
mov
add
push
cmp
or
or
jne
movsl
push
call
pop
or
adc
sbb
cltd
loopne
adc
imul
or
test
out
or
mov
xor
fwait
pop
adc
std
pop
adc
icebp
mov
ss
lods
xchg
std
pop
mov
mov
push
jo
xchg
inc
inc
xchg
dec
inc
aaa
mov
cmpl
cmp
cmp
cli
fdivl
pusha
or
mov
pop
pop
in
sbb
and
mov
pop
stos
lahf
fdivrl
sahf
add
rorl
xchg
pop
outsl
aad
aas
cmp
sbb
push
push
sbb
imul
sub
xchg
lock
and
stos
je
push
sti
xchg
jae
frstor
mov
imul
stos
dec
ret
and
pushl
pop
pop
rol
mov
jmp
inc
push
cli
insl
mov
loopne
jns
ja
test
insl
pop
jb
mov
pop
enter
daa
push
stos
lds
mov
lcall
fistps
out
dec
movsb
xor
sbb
int
subb
xor
mov
popa
lret
insl
daa
std
aas
ss
lods
push
inc
mov
ret
dec
adc
add
testl
mov
and
cmp
push
add
pop
hlt
sub
out
es
add
mov
addr16
lods
sub
adc
sub
movsb
mov
clc
into
cmp
stc
pop
xor
push
dec
sbb
icebp
dec
test
xor
fwait
pop
insb
jl
test
call
sub
adc
xchg
sub
fst
popa
dec
xor
loope
add
xor
ja
bound
mov
rcrb
sub
dec
sbb
pop
daa
lret
aam
popa
dec
jno
pop
mov
popa
push
jmp
jno
jbe
mov
lcall
int
ret
es
repnz
loop
shll
adc
mov
lret
lods
push
repnz
dec
fdivrl
add
and
int
lret
mov
mov
adc
xchg
pop
dec
jmp
imull
mov
push
cld
xor
jg
pop
dec
sub
dec
movsl
adc
aaa
adc
xchg
xchg
int
xchg
fcmovbe
enter
inc
jbe
jo
fldl
loopne
out
arpl
ror
cmp
jp
adc
cwtl
xor
stos
insb
and
push
sahf
xchg
sub
and
adc
popf
movsb
outsl
xor
adc
aam
imul
lret
or
imul
mov
xorb
jecxz
pusha
inc
ret
sbb
and
sbb
xlat
in
mov
push
addr16
add
push
andb
aam
dec
stos
call
out
adc
or
adc
push
xor
pusha
testb
cmc
dec
sub
push
sar
xor
inc
js
mov
int3
or
xchg
adc
fnstsw
jp
dec
sbb
pop
sarl
push
jns
sub
push
push
test
cmp
pop
cmp
cli
jb
notb
pop
push
pop
or
cmpsb
outsb
cwtl
scas
mov
rcrb
mov
movb
lcall
cmpsl
ljmp
and
lods
repnz
pop
std
cmp
mov
ljmp
and
add
xlat
and
repnz
ret
cmpsl
cmp
mov
pop
cs
jmp
cmp
push
push
lret
icebp
lret
test
outsb
mov
jae
aam
inc
pop
mov
shlb
loope
pop
sub
cltd
inc
push
cmp
xchg
repz
xchg
sub
mov
and
cltd
adc
ljmp
ljmp
push
fucom
addr16
aas
dec
fildll
jp
pushf
mov
js
and
sub
sbb
std
add
pop
sub
fwait
lods
mov
idivl
test
mov
dec
sarb
les
addr16
add
push
inc
loop
dec
mov
sub
lahf
negb
bound
rcrb
mov
std
and
jns
mov
mov
gs
bound
pusha
insb
cmp
aas
pop
add
fnstcw
imul
mov
inc
outsl
jae
neg
dec
xchg
pop
add
and
xlat
lahf
mov
xchg
out
jl
and
insb
fnstcw
add
cmpsl
inc
leave
mov
ret
test
lcall
outsb
mov
pushf
sub
stos
sub
or
xchg
and
mov
cwtl
or
das
pop
mov
inc
pop
push
push
ret
sbbl
jbe
hlt
aas
push
xchg
shlb
pandn
mov
cmp
jmp
mov
or
sub
xchg
test
or
fs
stc
fcmovne
push
in
fstps
rcrl
call
scas
mov
pop
repnz
xchg
mov
dec
lods
shrb
add
shll
xchg
sbb
mov
xchg
fstps
addb
sub
push
push
jne
add
sub
mov
and
xlat
fisttps
mov
in
popf
sbb
and
test
adc
repz
cs
sub
jmp
or
jb
pop
daa
mov
jle
rcrb
pop
jnp
cmpsb
js
in
lcall
addr16
xor
mov
stos
or
fwait
jmp
iret
push
mov
movsl
cmp
fwait
repz
cwtl
jmp
push
dec
push
test
xchg
xchg
and
test
lock
sub
fcmovbe
mov
push
test
fcomps
mov
out
cmp
dec
in
mov
ss
leave
outsl
scas
adc
xor
testl
mov
mov
add
cltd
out
mov
rorl
mov
and
xor
jg
xchg
xlat
es
xchg
cwtl
mov
fdivl
mov
loopne
push
sarb
or
mov
xor
push
popf
les
aad
fistl
lods
pop
repz
xchg
sbbb
cmp
lods
mov
adc
push
cli
fdivp
mov
shlb
rcl
xlat
and
sahf
inc
mov
push
movsb
mov
test
mov
fnstsw
and
pop
mov
xchg
in
cmc
sub
stc
lea
lret
dec
jne
mov
pop
xchg
mov
into
stos
cld
daa
pop
scas
popa
fistpll
popa
decb
outsl
mov
lcall
mov
xor
js
mov
js
imul
sahf
movsb
cmp
adc
jge
sub
jns
and
jle
stos
xorb
sbb
fcoml
in
ljmp
fstpl
push
jge
shll
jmp
call
sahf
imul
es
mov
leave
cld
xor
js
mov
cli
lea
fwait
repz
sbb
inc
jb
cld
rcrl
stc
cmpsl
fdivl
inc
dec
nop
idivl
in
call
mov
sub
js
addr16
lods
inc
fistl
push
sbb
mov
inc
scas
lock
mov
lcall
xchg
mov
bound
outsl
lock
cmp
in
cltd
xor
mov
inc
adc
int3
icebp
hlt
or
cmpsb
inc
mov
and
sub
cmc
mov
fisubl
shll
sub
mov
sti
sti
sbb
daa
pusha
scas
xor
xchg
adc
xchg
pop
stos
sub
sbb
pop
sti
ss
xchg
mov
sti
ret
int3
call
adc
push
jnp
cwtl
pop
in
mov
stc
mov
cmpb
cwtl
mov
out
mov
push
dec
inc
fcmovb
inc
xchg
sbb
rcr
or
hlt
and
pop
add
mov
insb
sbb
cltd
lcall
push
xor
cmc
out
sbb
xor
faddl
sub
jnp
cmp
sub
or
stos
jb
inc
jns
andl
das
loopne
out
dec
xlat
xor
fucomi
mov
sub
es
sti
cld
outsl
pop
mov
jg
push
fwait
jbe
mov
cmp
jo
shrb
cmp
or
or
mov
inc
sbb
mov
adc
cli
xchg
xchg
data16
jecxz
repnz
les
call
mov
cmp
shrb
jge
add
mov
imul
aas
fildl
scas
test
pop
pop
inc
dec
xor
inc
loope
lods
call
and
or
mov
ss
jae
mov
adc
test
mov
nop
icebp
lahf
adc
xor
cmp
daa
inc
aad
mov
push
imul
rcrl
aad
xchg
cmp
cld
cmpsl
popf
pop
out
push
aam
fcomps
out
in
and
jb
or
mov
pop
hlt
adc
cmp
sbb
cli
mov
xchg
and
lods
inc
sub
inc
inc
xor
movsl
jg
and
mov
cmp
push
cmpsb
cmp
push
pop
sti
aad
mov
lods
and
aad
mov
cld
movsb
push
es
sbb
dec
out
in
mov
loopne
pop
mov
jbe
push
mov
dec
mov
mov
push
add
outsb
rolb
mov
jo
lahf
and
jmp
sbb
imul
movsb
aaa
mov
je
gs
or
push
cmc
imulb
xchg
insb
sub
mov
outsb
push
fildll
frstor
jle
xchg
insb
ds
sub
aam
std
adc
push
movsl
je
sub
movsl
xchg
adc
addr16
mov
in
mov
int
std
mov
xchg
push
mulb
fwait
sbb
push
lea
mov
ljmp
and
xchg
out
xor
and
mov
daa
dec
fldt
lods
inc
mov
stc
dec
jg
lea
jp
imul
or
cli
add
jl
fildll
dec
jae
mov
sub
pop
xchg
lds
or
fidivl
mov
push
sbb
add
imul
js
jmp
push
pop
pop
lret
ffree
push
jp
push
sub
movsl
pop
push
and
adc
and
subb
mov
movsb
pusha
movsb
fisubl
fldl
xor
call
dec
imul
stos
mov
je
lods
push
mov
repz
movsl
inc
xorl
xor
jns
nop
int
push
sbb
mov
and
movsl
xchg
pop
aam
das
imul
push
fwait
jmp
fisubl
fimuls
fistl
cs
addr16
fwait
dec
ds
ret
sub
sbb
push
sbb
jmp
popf
lock
or
inc
mov
xlat
adc
inc
movsb
mov
idivl
or
scas
and
retw
jbe
fsubrl
inc
ljmp
clc
cmp
pop
adc
leave
clc
and
jl
out
icebp
push
aad
mov
sbb
xor
pcmpgtd
mov
adc
mov
stos
call
cmc
scas
dec
jl
sub
loop
inc
jl
push
pop
pushf
icebp
outsl
dec
sbb
shlb
inc
lahf
and
pop
lret
push
pop
enter
in
add
roll
iret
stos
fnsave
xor
loop
jbe
andb
mov
pop
lds
lret
in
scas
mov
cmp
sbb
loop
popa
mov
push
mov
cmp
jle
cmpsl
xchg
mov
fistpll
cltd
jecxz
int3
push
loop
add
imul
jmp
inc
into
shlb
outsb
ds
xor
and
sub
add
mov
add
dec
daa
sti
pop
or
or
mov
cmc
addr16
sub
mov
mov
into
xor
xor
out
mov
pop
jae
popa
aaa
cmp
arpl
mov
mov
jns
pop
sbb
aad
popa
fldz
in
movsl
addb
in
cs
das
push
lods
std
mov
fdivr
popa
mov
das
mov
shr
cmp
into
sarb
fcmovu
adc
push
mov
mov
mov
js
stos
fstpt
nop
pop
popf
ss
inc
insb
cmp
les
xchg
mov
ljmp
mov
fwait
sbb
inc
movsb
fs
jp
fs
pop
adc
adc
xchg
lods
aaa
mov
inc
sub
xchg
or
push
xor
hlt
addr16
add
filds
js
cmp
sahf
scas
and
dec
je
push
pop
mov
push
mov
xor
fidivl
mov
mov
mov
ret
daa
ret
sub
gs
or
push
dec
add
xor
cmp
sub
fstp
mov
lret
jg
imul
ficompl
aam
jmp
inc
sub
cmc
cld
lret
pop
or
cli
mov
or
cmp
ss
ljmp
mov
lret
add
mov
mov
jo
imul
rcl
inc
mov
fmuls
out
into
xor
rcrb
dec
add
or
ljmp
arpl
mov
push
mov
or
out
jbe
push
mov
ret
mov
daa
les
stc
lea
jecxz
pop
adc
jne
cwtl
and
xchg
add
cmp
cld
adc
icebp
es
mov
adc
adc
in
int
mov
cmp
inc
sti
fcompl
imul
inc
mov
inc
push
popa
push
fptan
aad
jb
rcrl
or
pop
ja
xor
mov
sahf
je
sbb
xchg
fnsave
cltd
mov
jge
lret
xchg
push
rorb
hlt
es
int3
cmpsl
jbe
xchg
adc
xchg
jecxz
popa
mov
sub
mull
repnz
sub
ret
inc
out
push
push
cmpsb
add
into
aam
push
into
mov
sbbl
leave
mov
jmp
iret
dec
jb
or
inc
and
negl
sbb
lcall
jb
lock
jmp
sbb
sub
dec
mov
xchg
pop
js
cmp
movsb
inc
xor
ss
mov
in
pop
stos
test
mov
push
push
dec
push
xchg
leave
pop
cltd
xchg
mov
incl
das
test
cmp
ds
dec
xchg
cmp
mov
push
jp
insl
out
mov
mov
iret
clc
movl
fcmovne
outsl
test
mov
inc
nop
xor
jl
outsl
sub
push
mov
ss
and
cmp
mov
in
aad
and
jbe
fisubrl
mov
std
push
pop
cmp
ficomps
scas
pop
mov
ficoml
sti
repnz
sbb
push
mov
push
pop
jns
cld
jne
pop
mov
mov
push
pop
mov
xor
dec
xchg
cmp
cs
sbb
outsb
jp
testl
xchg
dec
jae
or
ljmp
cltd
mov
mov
adc
xor
push
and
popa
inc
xor
js
out
lock
mov
add
and
out
into
push
dec
hlt
and
mov
stos
inc
aaa
or
movsb
lahf
xor
lcall
pushf
mov
cmp
fisttpl
out
xchg
xor
xor
fs
and
and
dec
mov
lret
jno
out
or
mov
insb
fisubl
rcl
inc
iret
pop
std
lahf
mov
dec
pop
hlt
inc
add
pop
sbb
sbb
lea
lret
ret
std
leave
pop
int
mov
mov
popf
lret
inc
fadds
jnp
cmp
jmp
mov
cmpsb
cld
mov
cmp
inc
jge
xchg
pop
negb
pop
aaa
mov
movsl
jge
xorb
adc
mov
add
jbe
xchg
fisubl
cli
adc
aas
subl
imulb
sub
in
jno
cld
repnz
pop
enter
xchg
and
mov
mov
xor
mov
cmpsl
bnd
vxorps
negl
add
mov
rcrb
jno
inc
sub
addl
jg
movsl
out
movsb
mov
jmp
ffree
lahf
nop
xchg
pushf
mov
mov
dec
xor
xor
push
and
cmp
clc
mov
addb
mov
es
enter
add
in
push
stos
cmp
sbb
hlt
dec
and
inc
les
rorl
scas
xchg
fisttps
loope
or
cld
mov
mov
fwait
jg
dec
icebp
xor
fnstsw
fdivs
dec
xchg
and
int3
mov
xchg
das
jle
add
lcall
or
sbb
or
fdivrl
jbe
inc
cmp
mov
mov
sahf
xor
fsubl
mov
adc
mov
jo
add
andb
sbb
hlt
loope
outsb
mov
mov
insl
pop
fimuls
and
movsl
out
xor
adc
push
stos
repz
movsl
mov
repnz
je
xor
sub
sarb
adc
testb
out
xchg
je
cld
dec
or
lcall
push
push
push
cltd
mov
or
mov
mov
mov
ljmp
daa
and
pop
insb
insl
rcrl
push
dec
cld
addb
test
lcall
push
mov
and
mov
outsb
pop
pop
pop
add
cwtl
lcall
add
and
test
cmp
pop
sti
sbb
dec
lods
dec
divb
hlt
mov
adc
push
pop
addr16
out
cli
sahf
pop
aaa
jle
movsl
fdivrp
inc
cmp
push
pushf
jge
or
mov
outsl
cltd
xchg
pop
jae
or
test
push
or
or
cmp
adc
jp
or
rclb
mov
sub
outsb
push
aad
mov
test
mov
xchg
fisttps
push
ret
ljmp
mov
fwait
push
imul
fildl
push
adc
je
pop
mov
sub
cltd
nop
cmp
stc
test
xchg
jmp
and
popf
in
mov
xchg
hlt
test
pop
sbb
push
mov
test
jmp
sub
and
lret
sbb
test
jo,pn
sarl
or
mov
jo
pop
dec
ljmp
pop
stos
and
ret
dec
lods
and
sbb
aam
add
stc
ret
jno
lahf
in
sahf
cwtl
ret
and
lock
das
mov
into
pop
das
push
adc
push
iret
repnz
inc
sub
inc
es
imul
jb
outsl
aad
and
outsb
aas
das
mov
mov
in
iret
inc
mov
cmp
sbb
fcmovnbe
pop
aam
mov
jbe
mov
cld
shlb
cmpsl
dec
xor
sbb
bnd
adc
pop
vmovupd
mov
cs
fnstcw
dec
jnp
imul
std
wrmsr
mov
push
popa
xor
mov
lds
rcrl
cmc
mov
lahf
jo
xchg
popa
sbb
andb
stc
inc
jecxz
jmp
xor
outsb
rorl
push
cmpb
lcall
cs
push
and
popf
cld
movsl
rcll
aam
jnp
sub
xchg
in
int
or
ret
and
jne
es
scas
outsb
push
sbb
jl
and
pop
std
ret
imul
lret
sbb
cmp
fists
icebp
push
jp
jb
mov
pop
or
push
xchg
std
dec
pop
sbb
lret
out
sbb
xor
mov
mov
cmp
leave
jecxz
cltd
inc
ljmp
jp
iret
sub
jae
mov
shrl
xchg
test
jecxz
ds
pop
andl
sub
pop
jnp
outsl
mov
jno
fwait
test
mov
imul
sahf
jl
xor
sbb
js
pop
add
mov
mov
jbe
nop
xor
mov
jl
pushl
lahf
in
push
push
arpl
ret
nop
fisttpll
ret
or
fiadds
xorb
add
ja
js
nop
fucomi
mov
jae
adc
scas
mov
shrl
push
roll
sub
out
sahf
mov
clc
lods
dec
inc
xchg
sti
jnp
ficoms
sar
xchg
mov
std
cmp
in
add
jmp
ss
dec
push
aam
jge
aam
pop
cli
lea
rcrl
cwtl
std
or
cmpsl
mov
jnp
add
test
cli
cmp
inc
adc
scas
inc
movsb
mov
ret
inc
fs
jecxz
js
sub
or
mov
cmc
jbe
mov
dec
repz
imul
xor
into
in
adc
xor
or
xchg
outsb
jb
out
or
or
testb
cli
je
and
push
cmp
and
xchg
sbb
pushf
and
jmp
loop
std
fs
pop
pop
jno
cmp
fstps
roll
rcr
lods
pop
stos
sub
mov
pop
xor
inc
or
sub
push
mov
mov
mov
xor
sbb
shrl
dec
faddp
inc
xchg
in
aad
pop
out
xor
sub
add
dec
sbbl
dec
lods
cmc
adc
sbb
call
repnz
call
jg
jae
jge
daa
scas
dec
add
out
xlat
decb
out
repnz
adc
push
les
or
cs
ljmp
daa
push
xor
jl
cmp
inc
movsb
out
daa
sbb
jecxz
mov
cmp
scas
mov
outsl
test
jp
jae
arpl
clc
sbb
and
test
test
pop
mov
cmpb
jno
pop
sahf
fmul
adc
jo
add
repz
sahf
push
ror
add
pop
fimull
daa
fldcw
enter
movsb
orl
in
in
sti
pop
stc
fcmovnbe
lods
insb
outsl
stos
insl
mov
aam
pop
push
insl
das
das
xor
adc
andb
adc
es
andb
mov
inc
fstpt
jp
pop
outsl
mov
sahf
test
mov
pop
mov
sbb
mov
mov
loop
dec
jbe
test
lcall
sbb
xorb
and
xor
and
xor
shrb
jb
dec
sub
idivl
fnstenv
jecxz
decb
mov
bound
idivb
cmpsl
ja
jne
add
sbb
jecxz
fcomps
int
std
adc
pop
data16
cmp
stc
push
push
add
mov
push
pop
dec
andb
inc
les
sbb
stos
mov
je
jno
cmp
gs
sub
cmp
in
jns
xor
inc
jne
or
mov
jne
shrb
movsb
lcall
mov
push
mov
ret
aam
aas
daa
push
xchg
sti
jl
sub
popa
dec
bound
aas
sbb
add
sbb
fldenv
lds
xchg
fcoml
scas
and
inc
cmpsl
and
inc
nop
jmp
dec
sar
pop
in
inc
test
push
mov
cmp
xor
vmovhps
jb
jmp
jns
fstpt
pop
lock
push
adc
outsl
pushf
sub
and
mov
aad
cmp
jno
mov
mov
dec
xor
scas
test
sbb
cmc
jae
into
rclb
xchg
rorb
int
xchg
cmp
sti
out
push
pop
mov
loopne
jmp
hlt
cwtl
cmpsl
sub
and
dec
dec
or
xchg
stc
mov
cmpsl
pop
sub
mov
add
mov
aaa
insb
aaa
test
inc
into
in
add
xor
or
lods
or
jno
sahf
cmp
ja
jecxz
dec
jmp
shl
out
dec
adc
loope
push
ret
sahf
xlat
sti
inc
push
mov
stc
xor
loope
mov
pusha
mov
mov
fdivrl
jns
idivb
leave
out
or
out
jne
mov
clc
sub
xchg
mov
xchg
rcrb
mov
mov
pop
inc
data16
arpl
xlat
sbb
and
repnz
pusha
mov
fcoms
rolb
test
lret
lods
mov
es
test
xchg
dec
insl
or
mov
sbb
mov
add
dec
push
or
adc
sbb
dec
and
and
xchg
test
bound
pop
ret
out
xchg
mov
pop
inc
push
sbb
lods
mov
cld
fdivr
scas
ret
push
cmpsl
inc
loope
jno
imul
pop
fists
pop
push
xor
ret
fmuls
mov
mov
sub
imul
jmp
push
mov
repz
inc
cmp
xor
push
and
pop
cmp
inc
test
xor
fbstp
push
pushf
dec
int
imul
mov
mov
ret
ss
dec
lds
xorl
mov
add
jmp
and
and
xchg
test
insb
pop
inc
fs
inc
lcall
pushf
lea
sbb
arpl
insl
fnstenv
inc
mov
clc
scas
jno
in
add
fisubrl
xorb
cmp
ljmp
dec
pop
ja
repnz
adc
lock
pmullw
and
xor
stos
mov
mov
push
mov
mov
or
lods
imul
adc
sahf
jbe
sbb
mov
xor
divb
ss
stos
in
pop
dec
fldl
inc
push
and
add
and
jl
cmp
clc
sub
sub
mov
cld
out
aas
scas
mov
insl
pop
mov
lea
cmpsl
enter
dec
out
call
or
popf
xor
xchg
push
into
pop
aad
test
xorl
bound
xor
fxch
out
pop
mov
ret
adc
loop
or
push
shl
xor
dec
scas
iret
movsb
lods
sbb
out
loop
xlat
bound
imul
fdivl
mov
xchg
and
mov
rcll
dec
xchg
stos
cmp
dec
aas
movsl
je
jnp
jae
mov
sbb
inc
in
inc
cmp
adc
pop
loop
or
and
jne
mov
popl
shrl
push
xchg
and
and
cs
cltd
clc
pop
adc
inc
ja
scas
stos
outsb
repnz
or
jg
push
fcmovu
arpl
call
ljmp
jo
adc
nopl
push
pop
out
shlb
mov
jbe
jnp
pushf
dec
adc
mov
repnz
sbb
lods
cs
jbe
cmp
and
jo,pt
cmp
mov
inc
inc
lods
add
jl
push
inc
xor
shlb
sbb
mov
outsb
sub
pusha
cmp
inc
inc
xor
sbb
test
dec
cmp
sub
cmp
lcall
ret
mov
std
cmpsb
inc
popa
inc
xor
leave
pop
and
cmp
jbe
lcall
adc
sub
mov
push
xchg
xchg
repz
sub
mov
imul
ret
outsl
inc
pop
pop
movsb
scas
enter
jg
int
sub
add
stc
push
std
cmp
xchg
mov
xor
loope
jns
xchg
insl
js
jecxz
jns
sahf
mov
inc
lea
lods
and
hlt
mov
sbb
pop
jb
mov
pop
out
enter
int3
sub
and
cmp
cwtl
mov
jmp
fadds
ss
lahf
mov
in
xchg
testl
sub
pusha
adc
push
sub
ja
gs
pop
movsl
pop
repnz
and
stc
in
cmp
or
fsubr
fcomps
ret
adc
push
ror
pusha
mov
dec
fwait
xor
dec
imul
cmp
sub
fsubrl
jnp
add
rdtsc
jae
mov
cli
xchg
xor
push
sbb
fld
mov
sbb
lods
pop
lahf
sub
jb
sbb
mov
xor
xchg
mov
shrb
mov
or
xchg
sbb
sbb
sarl
dec
or
lahf
aaa
xchg
lock
or
in
pop
pop
stc
sti
cs
mov
sarb
inc
inc
data16
xor
data16
sarl
mov
imulb
sbb
sahf
adc
mov
call
gs
push
iret
popa
rorb
jb
filds
shufps
popa
repnz
cld
fwait
jbe
leave
imul
mov
int
cmp
shld
popa
xor
cmc
mov
aas
imul
xchg
push
dec
test
fcomip
and
jecxz
sub
and
cmp
inc
xchg
scas
scas
lret
stos
push
sbb
inc
mov
mul
xor
mov
dec
xor
mov
push
in
and
sbb
nop
int
es
ljmp
testl
in
inc
or
in
mov
std
leave
clc
lcall
xchg
xor
xor
clc
jnp
fs
xor
add
and
lods
or
rcl
jl
jmp
imul
xlat
movsb
mov
dec
mov
sbb
shll
sub
scas
ror
add
repnz
jne
jo
sbb
mov
xchg
mov
xchg
and
in
jp
stos
imul
pop
jae
call
mov
lods
mov
ficompl
andb
jp
cmpsb
jp
mov
add
push
daa
mov
mov
mov
shl
aaa
je
outsl
movsb
mov
jecxz
repz
outsb
aaa
jo
testb
imul
sbb
js
xchg
ffree
cmp
arpl
pop
jno
dec
shlb
push
push
frstor
jb
rclb
out
mov
mov
fwait
or
push
xor
dec
aad
adc
cld
cwtl
lock
imul
jp
sub
ljmp
mov
arpl
cmp
or
inc
xor
pushf
pop
ret
add
hlt
dec
pop
inc
dec
mov
or
push
in
pop
and
aam
sbb
pop
xlat
mov
sbb
push
or
pop
out
dec
mov
push
pop
in
cmp
je
add
fst
pop
push
jno
xchg
xchg
enter
pop
fstpl
fmul
and
pop
repz
pop
loopne
mov
xchg
shlb
adc
test
jmp
sahf
mov
sub
adc
mov
fcmovbe
jge
mov
std
xchg
cs
jb
testb
in
add
dec
shrl
push
jns
test
int3
sub
idivl
or
inc
dec
pop
sbb
pop
inc
pop
mov
bound
fists
dec
fsqrt
cmpsb
mov
jle
out
cmp
sahf
xlat
inc
xor
int
push
daa
fisttpl
rcl
xor
xchg
test
lret
shrb
xor
js
cmpsb
cmpsl
test
xor
fimull
inc
sub
lcall
xchg
pop
inc
adc
and
inc
jg
cmpsb
negl
xchg
sub
pop
std
rcrb
dec
das
xchg
iret
in
push
pop
dec
xor
cmpsl
repz
leave
je
addl
lock
pop
and
or
push
adc
and
ja
loop
xor
mov
mov
mov
lods
shrl
sub
push
push
jge
or
inc
mov
pop
jle
imul
sub
ja
pop
mov
ror
sbb
push
lods
adc
fnsave
lret
mov
dec
lahf
add
out
ficoml
xor
adc
and
mov
or
inc
xorl
ret
lea
jnp
mov
sarl
fistpl
pop
mov
mov
lds
cli
add
xlat
jle
mov
loopne
int
cwtl
shll
jg
lcall
mov
xchg
push
insl
aaa
mov
in
lods
fnstsw
fwait
addr16
loop
out
jbe
sub
jg
inc
adc
cld
insb
push
bound
scas
pop
in
mov
mov
movsb
rcll
lahf
mov
lahf
jae
or
fildll
lock
pop
and
sbb
orb
pop
in
jmp
stos
jnp
sub
cs
nop
lea
adc
lods
inc
inc
pop
cmpsb
dec
mov
fs
push
pop
mov
dec
mov
inc
mov
sti
or
clc
mov
cmpb
push
test
mov
insl
jnp
xor
insl
jne
pushf
and
icebp
jl
aas
mov
clc
mov
pop
stc
inc
movsl
sbb
pop
adc
ret
ljmp
dec
pop
push
mov
sub
sub
cs
inc
cwtl
fadds
std
jle
inc
lret
xchg
add
fwait
pop
or
insl
lds
mov
pop
cmp
mov
stc
mov
mov
fs
in
inc
icebp
in
push
jnp
dec
cmp
aas
aaa
mov
stc
mov
repnz
mov
xchg
das
mov
inc
scas
dec
idivl
aam
cwtl
mov
mov
std
adc
es
or
nop
in
jmp
add
add
mov
mov
scas
add
loop
andl
loope
pop
in
es
in
mov
jne
cmp
scas
jg
sbb
and
cs
mov
add
ljmp
jmp
out
sub
fidivs
and
ret
jge
data16
cmp
cmp
dec
jge
xor
imulb
pop
cmp
inc
incl
or
lret
xchg
cld
jp
push
test
imul
mov
insb
mov
ret
int3
xor
insl
int3
je
sub
aaa
orl
inc
scas
xor
xchg
mov
ret
int
or
in
cmpsb
fs
repz
push
jmp
cs
xor
or
sarl
dec
lahf
mov
pusha
cmp
xchg
cmp
lea
inc
and
push
and
popf
or
bts
pop
loope
and
mov
pop
hlt
dec
jg
lods
sub
mov
add
and
scas
aad
xor
lods
out
sub
rcrb
jb
xchg
xchg
mov
cmp
in
loope
xchg
mov
cmp
push
stc
adc
inc
inc
fadds
mov
into
mov
mov
push
in
mov
jecxz
das
xlat
or
xchg
dec
aas
movsl
jo
push
cs
xor
out
lock
fmuls
xor
cmpsl
mov
mov
rcr
andb
rcl
lock
loopne
stc
popa
jb
popf
fidivs
xchg
imul
sti
out
xchg
pop
rep
les
ds
fxch
icebp
testb
sbb
das
mov
cmp
or
cld
xchg
mov
cmp
movsl
cmp
xchg
ret
adc
rolb
stc
add
cmpsb
dec
shrb
fadd
pop
repz
ret
and
xchg
jbe
lret
iret
xchg
cmc
add
inc
sbb
sub
xor
inc
mov
mov
sbb
shll
push
je
dec
lcall
sarl
fiadds
xchg
push
ss
ret
xchg
repz
sbb
sbb
je
in
in
paddw
fsub
push
or
popf
imul
enter
ss
icebp
jmp
das
popa
xlat
test
adc
mov
pop
dec
fsts
int
scas
outsl
ss
fildl
mov
testb
jecxz
in
iret
sar
clc
inc
add
mov
stc
mov
dec
add
lret
pop
sbb
addr16
js
call
daa
pop
aas
ret
jno
lods
cmp
or
loopne
adc
addr16
out
push
sahf
rcl
dec
xchg
or
mov
inc
xor
xchg
imul
orb
lahf
scas
lods
cmc
scas
or
sti
inc
and
lret
jbe
sti
fs
pop
nop
jg
mov
or
lds
push
cmpsb
xchg
lods
pop
xorb
movl
fidivs
xchg
movsl
mov
nop
fmul
loop
insb
out
sbb
or
enter
or
push
push
je
dec
adcl
arpl
aas
nop
in
cmc
in
pop
add
enter
cmp
xor
test
popa
xor
mov
or
xchg
adc
lret
into
out
jmp
jo
cmp
jnp
dec
sbb
xor
jae
mov
fisttpll
ds
cwtl
push
nop
addr16
mov
push
push
sub
sub
mov
int3
ret
divb
push
fsubl
cmp
inc
popl
fdiv
sub
mov
push
sub
test
jge
xchg
and
push
sub
push
mov
push
inc
push
subb
push
ja
movsl
pushf
mov
jg
mov
mov
xchg
loope
mov
and
xor
in
xchg
pop
sti
xchg
aaa
js
xor
mov
loop
jle
pop
mov
mov
cld
popa
subb
push
add
xor
inc
repz
inc
sub
xor
and
cmp
in
iret
push
icebp
adc
jbe
pop
mov
loopne
test
je
lock
rorb
ss
gs
pop
mov
ja
loop
in
mov
lahf
testl
test
pop
add
icebp
mov
popa
sub
into
inc
jle
jge
lret
adc
push
fmull
mov
sbb
in
mov
test
pop
and
adc
mov
or
jb
fidivrs
push
mov
xchg
jbe
inc
scas
mov
mov
pop
hlt
or
js
pop
push
mov
mov
xchg
pushf
pop
inc
inc
addr16
xchg
repnz
in
mov
out
fisubs
xchg
scas
sahf
loop
movsl
adc
dec
jp
dec
cmp
add
roll
pusha
test
adc
test
jne
cmp
jp
icebp
rclb
out
lcall
imul
pop
sub
inc
iret
movsb
sarl
testl
and
int
sbb
or
add
or
mov
outsl
adc
sub
mov
rcll
inc
xchg
fisubl
aaa
filds
inc
jae
push
cmp
fs
pop
push
adc
mov
dec
xor
pop
mov
fistpl
ret
stos
cvtps2pi
shl
push
ja
lahf
mov
cld
adc
sub
push
aam
mov
cld
prefetch
or
xchg
dec
test
push
lahf
xlat
sub
pop
ret
roll
loopne
scas
jbe
sub
ret
pop
jb
mov
inc
xor
xor
jae
clc
adc
ljmp
pop
xchg
cli
jmp
cmc
inc
cmp
pop
pusha
imul
das
popa
int3
cs
cmpsb
sbb
je
fcoms
loope
cmp
les
sbb
pushf
daa
xchg
add
add
sbb
push
dec
inc
push
in
cmp
adc
xor
pop
mov
or
sub
js
addr16
xchg
jge
aad
sahf
pop
cmp
lea
dec
insl
aas
mov
scas
call
sahf
mov
pop
ficoms
fwait
pop
or
pop
mov
mov
push
cmpsl
xchg
mov
xchg
mov
mov
sbb
adc
pop
mov
cwtl
cmp
lret
fimull
in
lods
jo
call
sahf
lcall
or
sarb
sub
adc
loope
dec
jge
aad
pop
xchg
in
adc
rclb
or
jle
push
sbb
int3
push
movsl
mov
out
imul
mov
cmpsl
mov
sbb
cmp
dec
and
js
js
dec
xchg
insl
dec
push
hlt
jecxz
cmp
iret
xrelease
mov
lret
sbb
mov
test
mov
xchg
lret
daa
adc
movsl
jecxz
test
idivb
test
cmp
push
xchg
push
adcl
xchg
test
mov
mov
lcall
xchg
dec
sub
or
xchg
jne
inc
shl
int
scas
add
xor
pop
lcall
enter
cwtl
icebp
xchg
mov
je
and
out
mov
ljmp
mov
pop
test
inc
sub
stos
les
shll
cmp
dec
mov
fcomps
not
in
pusha
xchg
cmc
in
jno
test
sbb
xchg
push
ljmp
pop
xor
fcmove
adc
lret
xchg
cmp
jo
xchg
ds
cs
leave
xor
sbb
mov
scas
jno
imul
or
xor
cmpsl
pusha
cmp
test
jl
arpl
sub
insl
xchg
loope
insl
inc
icebp
popa
xor
sarb
inc
test
xchg
sub
leave
or
sbb
lods
or
in
addr16
jl
js
cs
ret
mov
sahf
cmp
jp
fs
xor
sub
jo
mov
inc
int
loopne
dec
xor
dec
aam
insb
aaa
xlat
mov
dec
arpl
or
mov
or
inc
popa
div
loop
add
psllw
lret
cmp
or
bound
loop
daa
dec
movsl
pop
mov
ret
xchg
fwait
adc
add
outsl
loopne
add
nop
inc
jns
push
and
scas
cmp
out
mov
ss
test
mov
std
and
adc
gs
enter
cmc
iret
movsl
js
add
and
dec
aam
xchg
jl
lahf
mov
sbb
xchg
movsl
xchg
mov
and
loope
scas
dec
in
cwtl
and
int
imul
xchg
aad
aad
lret
or
pop
aam
add
enter
nop
fistl
inc
pushf
scas
push
xor
faddl
xchg
aad
sahf
or
push
popa
testl
adc
shlb
ret
adc
icebp
arpl
sbb
xor
in
xlat
repz
inc
xchg
imul
fmul
insb
cld
jae
divl
out
mov
test
cmp
mov
cmp
pop
add
mov
jo
out
xchg
cs
std
mov
cmp
nopl
lahf
ret
add
rcrb
mov
mov
or
push
repnz
mov
cli
adc
icebp
add
add
enter
fisubs
jl
xlat
adc
sbb
cmpsb
cmc
cmp
mov
je
and
cmpb
popa
or
repz
xchg
sub
jmp
sub
xchg
pusha
lret
fiadds
mov
dec
xchg
bound
popf
mov
mov
pushf
mov
mov
repnz
sti
cmpsb
or
sub
lahf
add
mov
std
in
inc
xchg
stc
push
mov
pop
inc
dec
mov
insb
ljmp
mov
adc
je
push
fistl
cmc
xlat
jne
sub
loope
add
stc
mov
push
sub
or
mov
add
mov
mov
das
mov
adc
int3
mov
inc
and
test
pop
sbbb
dec
dec
out
jmp
push
and
out
jb
cmp
in
jp
sbb
xchg
or
and
pop
fsubr
xchg
lds
test
lea
xchg
sahf
pop
adc
call
push
push
jns
sbb
mov
scas
icebp
jo
xor
xor
inc
test
lahf
or
and
xchg
inc
push
mov
jg
aad
scas
negb
inc
mov
add
xlat
jb
dec
adc
xchg
test
lcall
popf
xchg
and
aam
std
addr16
testb
add
push
rclb
sti
or
sbbl
lahf
jmp
add
jnp
outsb
fsubrl
out
ja
jp
push
mov
sti
int3
pushf
hlt
xor
mov
fldlg2
cmpsl
lds
jg
mov
mov
mov
mov
outsb
sub
cmp
les
aad
inc
ja
jle
xchg
dec
inc
adcb
push
pop
cmp
mov
lahf
fstl
adc
loope
stos
mov
mov
and
inc
ljmp
imul
sbb
or
push
xchg
outsb
sub
sub
inc
xchg
jne
push
mov
mull
jge
pop
arpl
loopne
sti
aas
mov
or
adc
outsl
mov
push
sub
hlt
sti
or
push
jle
mov
inc
mov
inc
imulb
push
iret
dec
xchg
pop
push
lds
pop
stos
out
ret
psraw
dec
sbb
outsb
jle
mov
xchg
pop
sbb
push
lock
jbe
cld
in
in
push
push
pop
inc
xchg
sbb
gs
pop
xchg
cmc
or
dec
test
sub
dec
loop
xchg
mov
das
xor
sbb
jae
lcall
or
mov
dec
push
sub
clc
ret
sub
popf
xor
add
into
sub
nop
nop
out
fcomps
cmp
repnz
popf
outsl
adc
aad
std
fisttpll
or
cmp
and
push
fstpl
dec
in
cmp
ret
mov
jmp
into
out
or
lds
mov
lods
mov
or
mov
cltd
cmp
rclb
xchg
incl
and
dec
adc
jge
std
adcl
pop
dec
in
pop
xchg
adc
lods
fwait
mov
pop
movsb
xchg
mov
test
inc
add
leave
pop
xor
sbb
inc
ljmp
outsb
mov
insb
in
or
shll
loop
nop
sub
cwtl
popa
popa
clc
xor
test
mov
xor
sarl
insb
stos
call
pop
imul
push
xchg
test
imull
pop
sub
sub
stc
push
push
mov
inc
sbb
dec
repz
push
xor
jge
sub
pop
out
addb
repz
sti
mov
dec
add
mov
inc
loop
and
pusha
mov
inc
dec
stos
out
fists
cmp
mov
and
in
xchg
jl
pop
cmp
clc
mov
sar
or
xchg
test
pop
lds
inc
mov
xor
sahf
and
sbb
jbe
out
cmp
adc
pop
cltd
sahf
in
int3
out
out
out
jns
or
xor
pop
leave
insb
mov
xchg
es
mov
push
leave
push
testl
mov
mov
and
popa
jne
stc
mov
jmp
frstor
ret
sarb
cmp
mov
inc
nop
repnz
ret
outsl
and
mov
add
jns
mov
sub
mov
out
push
mov
mov
mov
jmp
cmp
jle
out
out
add
aaa
rcll
ljmp
loop
dec
das
push
mov
pop
dec
popf
fmull
sahf
mov
cmc
jecxz
scas
sub
mov
sti
jle
xor
pop
jne
dec
cs
xor
out
and
and
inc
mov
mov
or
sbb
test
fdivrp
out
jle
dec
icebp
cmp
shrb
mov
mov
adc
cmp
iret
ret
hlt
lods
sti
add
enter
pusha
js
mov
outsl
aam
or
stos
inc
cmp
shlb
scas
push
loope
inc
pop
xorl
cmc
xchg
dec
xchg
sub
dec
ficoms
mov
out
adc
gs
inc
lock
mov
test
xlat
add
in
stos
mov
pop
cmp
mov
popf
pop
jo
test
gs
outsb
mov
add
xor
inc
xchg
mov
pushf
sahf
mov
mov
rorl
jecxz
cmp
outsb
mov
imul
pusha
stos
lcall
dec
leave
popf
adc
jne
inc
pop
cmp
xchg
rorb
sahf
movsl
lret
xchg
les
test
out
dec
jp
in
sub
jmp
xchg
jp
popf
in
out
imul
enter
or
call
push
xor
insl
pop
test
pop
jmp
cmp
hlt
jg
inc
inc
mov
xor
test
cmp
daa
add
les
xor
fnsave
pop
and
xlat
adc
cmp
jne
rorl
pop
xchg
sbb
add
sub
ret
setne
sub
mov
jmp
sub
jae
cmpsb
dec
push
cwtl
fimuls
and
cmp
or
dec
outsl
cwtl
mov
xor
xlat
pop
jb
push
add
mov
cmp
lds
jb
push
lret
push
cmpsl
lds
jmp
bound
mov
fmuls
mov
insl
push
into
pop
xor
cmc
mov
enter
or
pop
out
data16
inc
adc
cmp
dec
xor
add
xor
sahf
mov
test
addr16
xchg
fldenv
repz
mov
sarl
add
loope
in
sti
das
sti
fimull
nop
test
ret
cmp
add
lods
adc
add
dec
mov
pop
xchg
sarb
adc
call
add
sbb
ret
add
lahf
push
xor
fldcw
leave
stos
mov
bound
and
imul
out
mov
mov
mov
mov
or
aad
push
push
xchg
clc
and
pop
repz
jge
fadds
enter
test
faddl
popa
pop
or
shrb
data16
into
dec
or
sub
xor
push
icebp
popf
dec
jge
xor
mov
outsl
pop
test
pop
aas
xchg
xchg
jb
aas
dec
pop
dec
adc
rolb
push
xor
fadds
faddp
pushf
shr
cli
adc
outsb
xor
push
add
push
leave
sub
push
pop
pop
jbe
aad
inc
pop
int
cmpsl
arpl
mov
xchg
ja
bound
mov
lea
or
cmc
das
cmpsl
ret
cmp
or
push
ds
data16
mov
data16
loopne
hlt
into
loopne
scas
popf
mov
jg
jp
xor
lods
cltd
sbb
push
sub
mov
mov
aas
rcr
popa
sbb
aad
leave
xor
jae
enter
mov
push
popa
inc
dec
fsubrl
in
pop
icebp
pop
mov
mov
loope
aam
cli
cmp
mov
sti
xor
mov
adc
jbe
push
mov
inc
jg
outsb
sub
pop
sahf
mov
insl
jg
sbb
js
ficoms
pop
adc
jecxz
insl
addr16
dec
xor
xchg
in
mov
or
ss
lods
je
mov
jb
popf
icebp
scas
call
inc
outsl
repz
orb
inc
movsb
movsb
icebp
mov
mov
adc
rorb
or
push
ss
in
les
jp
xorl
xor
rcl
hlt
xchg
mov
loop
cmp
pop
pusha
jno
icebp
pusha
imul
int3
shll
push
cld
cmpsb
mov
mov
xchg
jle
jbe
int3
dec
jns
pop
lcall
mov
setp
xchg
xor
inc
mov
clc
fdivr
shr
in
dec
xor
push
mov
jl
mov
xor
jle
lret
ja
or
test
or
les
test
and
loop
xor
rclb
pop
test
jbe,pt
daa
sub
dec
mov
mov
xlat
in
mov
rorb
cmpl
out
scas
pop
fmull
std
pop
popf
daa
pop
xor
dec
dec
out
xlat
jnp
fadds
cmp
and
push
adc
sar
adc
or
sub
mov
out
iret
mov
lret
and
int3
int
sbb
es
adc
mov
jmp
fisubl
adc
fisttpl
ss
cmp
jbe
testb
mul
fdiv
push
iret
jnp
cmp
scas
mov
xchg
out
int
sub
push
jp
lds
test
fwait
in
dec
and
fisttps
and
lea
mov
je
iret
stos
arpl
mov
push
fistps
fstpt
push
cli
nop
mov
mov
dec
ds
mov
xor
dec
ret
add
lods
test
push
out
pop
bound
fld
cmpsl
aad
pop
aaa
xchg
sbb
arpl
or
outsl
add
mov
jno
dec
push
cmp
movsl
sbb
cli
shrb
mov
adc
fcmovu
testb
es
mov
pop
aad
xchg
in
in
loopne
mov
mov
icebp
data16
pop
insl
inc
sti
icebp
ret
inc
sahf
mov
cmpsl
push
push
sub
aas
fsubrs
xor
fs
sbb
cmp
mov
jne
or
dec
sub
sarb
push
pop
dec
aaa
sbb
nop
pusha
sbb
cwtl
jbe
sbb
or
nop
lahf
or
xchg
movsl
mov
sub
jg
lds
jae
pop
add
xor
inc
adcb
jns
cmp
push
jno
mov
push
or
mov
jo
mov
outsl
jecxz
inc
leave
push
push
add
pop
jns
stc
addr16
push
loopne
push
pop
ret
popa
add
scas
jecxz
aad
dec
mov
stc
sbb
leave
gs
mov
adc
ss
sbb
sahf
dec
negl
xor
sarl
xor
and
test
gs
fistps
repz
dec
popa
inc
xchg
mov
xor
leave
mov
jge
adc
and
iret
in
jl
loop
mov
mov
call
xchg
push
out
jle
fcoms
std
mov
jnp
dec
inc
vrangess
jge
push
mov
loop
jb
sbb
scas
icebp
push
mov
shll
shlb
push
arpl
inc
ja
dec
pusha
and
fistpll
sbb
lds
test
fwait
push
push
test
out
and
jo
xlat
int3
push
scas
insb
push
adc
inc
bound
incl
shrb
xchg
sub
insb
push
dec
idivl
in
repz
cltd
std
add
pop
mov
jbe
fimull
mov
popa
mov
or
xchg
lds
and
fildl
and
mov
aas
sub
mov
xchg
aaa
add
sbb
cmp
xchg
pop
xchg
mov
fists
imul
movsl
lea
xor
xchg
inc
int
fwait
mov
xor
mov
add
insb
push
inc
sub
mov
pop
xchg
pop
adc
shlb
cmp
push
adcl
jg
call
pop
push
roll
sub
dec
negb
loop
cwtl
mov
pop
int3
mov
mov
dec
mov
movsb
imul
xor
mov
enter
jp
sub
hlt
mov
insb
or
not
jns
xor
out
cltd
outsl
xchg
shrb
mov
sbb
loope
xchg
xor
call
out
and
jg
test
inc
jmp
in
jbe
out
add
sbb
popf
cld
out
mov
cmp
or
xor
add
daa
fcompl
or
add
adc
repz
cmpsl
sbb
jne
xchg
nop
push
movsl
fistps
jns
cmp
xor
arpl
add
out
dec
jbe
orl
and
sub
xchg
incb
jns
inc
and
sbb
mov
lret
int3
sub
fildl
enter
fsubrs
out
out
or
cs
add
jl
jmp
mov
clc
mull
outsl
sub
lock
insb
or
fwait
push
mov
pop
mov
pop
imul
lcall
push
add
cmp
loop
adc
lret
lods
jmp
mov
subb
mov
fwait
xor
sub
push
xchg
cs
dec
push
imul
sub
jb
cmp
out
cmc
cmp
mov
xlat
arpl
sub
jno
dec
pcmpgtb
in
add
enter
cwtl
lods
das
movsb
inc
cmpsb
aaa
lahf
jge
out
lods
lret
mov
jp
mov
add
fs
mov
aaa
sub
dec
lret
jno
adc
xor
aam
sub
fs
add
repnz
xchg
imul
aam
mov
aaa
pop
adc
movl
push
jle
jmp
js
shlb
and
push
adcb
jne
loope
jae
inc
push
and
dec
dec
sub
ljmp
and
cs
push
xchg
mov
inc
dec
and
cltd
jmp
lods
xor
inc
push
mov
jnp
ljmp
outsb
sbb
cmpsl
cmp
mov
or
sahf
ror
call
add
adc
flds
add
xor
and
lahf
inc
sub
xchg
repz
xor
adc
sub
sbb
fnsave
shrb
iret
pusha
mov
int
mov
mov
popa
xchg
add
push
sub
lret
push
popl
pop
out
nop
mov
inc
lea
push
aam
mov
bnd
repz
call
mov
movsl
pusha
es
add
outsb
call
clc
jg
data16
and
aad
cmp
aaa
cwtl
mov
jnp
sbb
dec
xor
mov
xor
subb
into
inc
mov
imul
repz
mov
and
aam
xchg
repnz
cmc
out
movsl
bound
repnz
xchg
mov
pop
pop
jp
sub
inc
cmpsb
adc
or
mov
es
fsts
jbe
xor
or
sarl
cvtdq2ps
stos
cli
cmc
into
pop
out
pop
dec
das
push
push
fwait
mov
sub
in
sahf
fs
mov
cmpsb
adc
test
push
xor
cld
outsb
add
ja
xchg
cmpl
xchg
jae
pushl
cmp
pushf
ret
sub
xor
jb
sub
or
adc
inc
repz
mov
mov
repnz
ror
pop
hlt
pop
loopne
lahf
and
mov
add
sub
mov
mov
dec
mov
aad
push
inc
push
addr16
pushl
imul
and
popa
sbbl
adc
pop
mov
outsb
or
cmpsb
rdmsr
mov
int3
cs
fwait
jmp
les
mull
cmp
adc
xor
stc
jno,pn
cmp
sub
sarb
pop
inc
mov
mov
movsl
push
jo
push
negl
mov
imul
movsl
xchg
sub
or
call
stos
xchg
popa
jbe
adc
out
in
insl
fiaddl
push
out
mov
sahf
in
or
mov
mov
xor
push
bnd
inc
fimuls
xchg
xor
inc
sbb
cmc
xchg
add
fsubrl
push
outsl
sbb
pop
cmp
in
inc
js
add
cmp
cltd
fucom
and
sahf
femms
add
movsb
movsl
sub
cli
ds
fld
les
cmp
push
outsb
xlat
xchg
ljmp
fwait
mov
lret
lods
push
adc
xchg
push
scas
fisubl
rcl
cmp
push
and
roll
incb
aas
push
jg
jge
or
pop
addl
leave
push
outsl
mov
xchg
fistps
cmc
cld
jno
movsl
ljmp
lods
int
gs
hlt
test
adc
loopne
dec
push
repz
addb
js
dec
jne
ljmp
jl
negl
cli
out
mov
inc
jmp
inc
jmp
addr16
lods
in
es
je
cmp
dec
sub
icebp
add
or
nop
outsb
xorb
push
adc
sub
push
xor
jno
pop
int
jb
add
loop
and
out
xorb
insl
aas
add
mov
repnz
push
mov
ret
pop
pop
dec
stos
sbb
mov
incl
push
stos
pushf
sar
movsl
xlat
popf
cmp
test
jle
pop
cld
iret
dec
xor
je
aaa
inc
aaa
loope
mov
pop
std
pop
pop
push
sbb
outsl
mov
rolb
jbe
jle
pop
cld
mov
roll
jmp
frstor
push
mov
inc
aaa
or
and
lret
pop
sbb
cmpsb
test
std
sahf
imul
push
aad
jge
sbb
scas
fwait
dec
repnz
mov
adcl
jmp
pop
cmp
xor
jnp
subl
fucomp
int
clc
sub
shlb
stc
or
mov
std
mov
sbb
mov
testb
mov
hlt
add
xor
mov
xchg
icebp
stos
sti
sub
sub
cmp
lcall
leave
pop
cmpb
iret
push
int
inc
xchg
push
mov
mov
btc
pop
loope
xor
mov
movsl
pop
lea
pop
mov
rcl
data16
push
adc
pop
and
xor
popa
mov
rolb
not
in
mov
add
clc
add
movsl
dec
dec
mov
mov
outsb
mov
sahf
mov
push
inc
pop
stc
xlat
popa
icebp
idivl
sub
loopne
mov
addr16
psubsw
fstl
cmc
bound
push
mov
test
divb
je
jno
out
jne
aad
jle
jno
mov
add
cmp
out
cli
xchg
jno
push
xchg
push
add
aam
push
inc
adc
imul
lods
xlat
xor
and
repz
pop
cmp
and
push
jg
mov
push
mov
negb
cltd
jmp
cmc
scas
rcrb
mov
dec
fisttpll
adcl
inc
fdivrl
cs
inc
jns
out
lret
pop
stos
mov
iret
int
imul
inc
mov
push
cmp
jp
movsl
cmpsl
mov
adc
pop
mov
ds
pop
cwtl
enter
jns
ss
xor
movsb
jae
cli
repnz
xchg
bound
std
pop
mov
arpl
mov
ficompl
aas
push
iret
push
push
sub
in
movsl
jecxz
pushf
imul
xchg
jmp
add
xchg
sub
fsubr
sub
cmp
add
or
lret
test
cmpsl
dec
mov
std
lahf
test
ljmp
cmp
lret
jne
mov
mov
sub
addr16
adc
mov
add
adcl
dec
jp
jnp
in
or
sti
pop
cmp
mov
es
ds
sub
insl
xchg
arpl
push
cld
adc
mov
inc
test
xor
out
jae
dec
mov
add
add
cld
lea
mov
ret
xchg
mov
pop
mov
cmp
mov
sbb
pop
ret
mov
dec
or
jne
cmp
cmpsb
stos
pop
fmul
shl
or
mov
cmp
nop
jo
pop
and
cld
in
mov
gs
pushf
lcall
mov
cli
adc
mov
xor
lahf
push
xchg
imul
mov
repnz
mov
pop
cmp
rolb
jnp
call
shll
pop
mov
movsb
notl
pop
jecxz
sub
add
or
mov
notb
mov
pushf
lahf
jnp
push
jge
jecxz
or
js
add
xorl
jo
fsubl
jb
and
scas
cld
adc
cmpl
aaa
out
sbb
dec
push
xorl
cmp
push
rcll
cmp
mov
fadds
adc
ret
fcmovnbe
push
cwtl
pop
push
push
shrb
dec
test
push
sbbl
jno
xor
sbb
lock
sub
and
add
sub
xchg
cltd
mov
pop
fs
adc
push
addl
subl
iret
fldenv
mov
mov
jns
mov
add
adc
out
xor
xchg
mov
fwait
in
sub
dec
shll
dec
inc
push
insl
xchg
push
loope
adc
in
mov
movsl
pop
jl
sahf
out
fsubs
movsb
add
mul
mov
sbb
xchg
mov
sbb
jp
xchg
jnp
inc
test
mov
jnp
mov
js
push
xchg
test
dec
dec
mov
push
aas
xchg
dec
mov
mov
loop
inc
and
sahf
insl
mov
mov
cmp
mov
cmpsb
fisubl
lea
add
push
mov
inc
into
inc
test
inc
sbb
clc
push
xchg
push
hlt
inc
stos
popl
mov
mov
in
mov
ss
mov
arpl
ss
sub
jb
sub
jp
xchg
fidivrl
dec
lahf
push
pop
inc
xchg
fidivs
inc
aaa
sbb
pop
cmp
adc
lcall
mov
xor
add
pop
loope
jne
pushf
pop
adc
popa
cmp
xchg
xor
push
add
clc
adc
outsb
outsl
pop
hlt
test
pop
roll
shrl
push
pop
pop
pop
sub
pop
mov
imul
aaa
jle
shrl
adcb
adc
jnp
fstpl
ljmp
dec
je
nop
cmp
and
jbe
subl
pop
dec
add
inc
or
push
cmp
leave
imul
inc
push
pop
mov
mov
jmp
adc
jno
dec
lahf
mov
add
xchg
and
xchg
xchg
rcl
push
sbb
pusha
sbb
in
push
jnp
or
js
add
cmp
stos
inc
jecxz
jle
mov
lds
pop
sbb
cli
loopne
mov
icebp
mov
fs
imul
test
lahf
mov
mov
sub
pop
jno
inc
outsl
insl
pusha
scas
jno
mov
neg
aas
inc
jno
and
sub
or
sti
ljmp
popl
push
cmpsb
dec
ret
je
ja
fistpll
jp
lods
mov
mov
or
lods
out
ljmp
arpl
popa
out
jbe
rolb
pop
lods
out
addr16
sub
sub
inc
in
xchg
sbbl
test
dec
stos
push
ret
fildll
push
cmp
mov
mov
mov
mov
xor
movsl
pop
prefetch
push
pushf
push
mov
testb
push
into
mov
xlat
mov
sti
in
clc
fldcw
dec
xchg
and
inc
mov
scas
sbbb
aam
aad
cld
or
aad
enter
pop
sbb
ds
push
and
or
lods
fimull
lds
sbb
lods
or
imul
leave
pop
cld
imul
popa
pop
in
mov
push
mov
loop
cld
ret
stc
icebp
adc
pop
jns
fmulp
lock
aad
loope
insb
push
enter
sub
rorb
adc
ffree
mov
ds
push
adc
pop
pop
leave
int3
xchg
sub
sub
mov
sbb
jg
xchg
sbb
scas
add
lret
pop
mov
imul
movsb
imul
push
add
cmp
push
ss
mov
dec
daa
push
daa
out
pop
mov
add
cltd
pusha
fcmovu
test
movsb
adc
cmp
lock
arpl
jnp
add
mov
cmpl
das
jno
mov
mov
add
push
inc
or
rol
sub
mov
mov
mov
xchg
fstl
test
inc
aam
scas
push
in
mov
clc
sub
rolb
dec
insb
rdtsc
pushl
xchg
push
lcall
adcl
lea
enter
lods
cwtl
adc
rcl
enter
mov
mov
or
test
or
lock
mov
jne
ret
out
inc
std
sub
in
aad
lcall
cmp
fs
push
nop
pusha
inc
lcall
pop
cmp
and
sub
xor
xchg
adc
dec
jb
add
pop
in
cld
mov
mov
test
add
sub
insl
mov
sub
lea
inc
aaa
mulb
test
fists
add
sarl
iret
addl
imul
or
sub
xchg
mov
pop
dec
jns
dec
jo
jp
mov
outsl
mov
cmpsb
xchg
sub
cmp
dec
xlat
xor
int
sub
inc
cltd
jns
xchg
mulb
test
add
negb
dec
aaa
lret
sbb
inc
sbb
enter
sub
dec
pop
add
sbb
int3
cmp
xor
outsb
xchg
lods
mov
or
mov
fisubrl
jns
xchg
in
push
enter
mov
sar
mov
jbe
jb
test
pop
out
bswap
sub
sbb
jmp
mov
sti
lods
ljmp
push
in
mov
jno
pop
xor
inc
mov
dec
call
std
push
jl
lods
lahf
in
xor
pop
mov
aad
call
les
pop
and
inc
lds
and
jne
outsb
add
mov
fdivl
xor
xchg
push
int3
add
push
cli
cmpl
mov
cmc
pop
sbb
adc
xchg
and
add
icebp
lcall
nop
add
jb
and
fisubs
shrb
inc
lock
dec
mov
push
jae
pop
fcompl
ret
enter
add
ret
dec
xchg
add
push
inc
cmp
rolb
mov
ja
xor
xchg
mov
int3
pop
js
test
sbbb
xchg
sbb
push
mov
jecxz
in
ljmp
sbb
xchg
adc
data16
jns
testl
xchg
inc
call
and
sbb
ljmp
cli
aaa
test
and
xchg
push
push
xchg
push
fidivrs
pop
jns
lcall
jae
sub
fs
ja
and
xchg
inc
adc
xchg
or
dec
jg
mov
mov
adc
in
pop
pop
shrb
sub
shl
ss
loop
jl
mov
jecxz
lods
sbb
xchg
divps
icebp
mov
js
in
aad
lds
test
cmp
sbb
sub
cmp
fiaddl
call
pusha
jo
sub
xor
cmp
mov
add
into
lock
pandn
dec
cmpb
mov
iret
jno
out
scas
leave
xchg
jge
shll
add
shr
sub
mov
repz
and
addr16
push
mov
mov
cmp
mov
sbb
jge
xor
push
je
mov
das
pushf
mov
clc
push
repz
xorb
add
clc
mov
jne
aas
push
sbb
scas
mov
shrl
repz
sahf
out
mov
pushf
cmp
lahf
in
jbe
xchg
in
out
adc
fwait
push
mov
mov
mov
inc
popf
mov
add
sub
or
mov
pop
pop
shr
jno
lret
fnstenv
cmpsl
call
push
mov
cmp
repz
mov
inc
loop
int3
frstor
scas
ret
mov
inc
sbb
or
xor
stos
or
and
cmp
mov
jno
outsb
fs
test
aam
dec
mov
fidivs
cmc
clc
loopne
lds
repnz
xchg
pushf
aam
int3
mov
iret
xchg
push
add
sbb
push
xchg
pop
adc
daa
adc
dec
call
inc
mov
jl
mov
scas
cmpsl
push
jne
cmpsl
inc
dec
stc
dec
lret
ds
or
shr
ret
pushf
loop
fadd
out
mov
pushf
icebp
and
sub
and
cmp
in
or
jle
cmp
cmp
loop
or
sbb
shrl
loope
xchg
in
jae
out
and
neg
jge
xorl
sbb
sub
cwtl
arpl
pop
out
cwtl
int3
or
and
clc
mov
or
pop
in
fnstenv
inc
loope
imull
ret
scas
jae
mov
sub
pop
xor
jl
sub
mov
mov
jg
jmp
mov
addl
mov
loop
xchg
pop
in
sub
into
filds
lock
jle
sbb
add
jecxz
repz
lds
mov
dec
int
cltd
lds
testl
xor
pusha
fdivl
push
push
xchg
in
test
mov
push
jle
push
add
or
in
add
imul
sub
sahf
xor
aas
mov
or
sbb
ja
das
cmp
jp
mov
xor
mov
ja
cmc
lcall
cmp
mov
xchg
lcall
icebp
aas
es
sub
xchg
fstl
incb
sub
mov
xchg
sti
adc
inc
jecxz
jo
mov
addl
mov
pop
xor
and
and
mov
jno
popf
or
push
push
jae
call
cmp
and
bound
fidivrl
cmp
dec
mov
or
mov
gs
jae
fiadds
es
call
mov
mov
test
mov
dec
notl
jp
test
jmp
inc
mov
rcrb
outsl
in
popa
out
push
jg
in
stos
push
or
add
jbe
sub
cmpsb
push
dec
mov
test
mov
pop
dec
xchg
inc
or
movsb
push
xor
aad
popa
ret
out
push
stos
jmp
mov
shl
jl
cmpsl
test
ss
pop
es
xchg
stc
push
mov
mov
jge
insl
add
jbe
and
xchg
and
mov
mov
hlt
aaa
cmp
mov
and
jmp
test
aas
jnp
cs
pushf
cmp
jbe
jge
mov
xchg
das
jg
iret
jno
mov
lcall
push
pop
dec
sarb
adc
and
and
push
lods
dec
fisubrs
xchg
jbe
jecxz
mov
jecxz
inc
int
sbb
aad
shlb
adc
and
cmp
arpl
rolb
or
lds
and
pop
out
insl
rorl
pop
lea
push
nop
fbld
popa
lods
out
xchg
and
ds
enter
add
xor
inc
shll
adc
repnz
std
js
sub
fldt
jl
xchg
mov
sub
cli
popf
insb
iret
inc
outsb
cwtl
iret
jg
push
rcll
adc
jns
inc
pop
dec
daa
cmp
push
test
fistps
mov
mov
mov
adc
sbb
lret
adc
andl
or
pop
or
int
subb
mov
mov
in
mov
loopne
clc
outsl
rclb
aad
or
testb
cmc
push
lcall
arpl
pop
dec
pop
dec
stc
jg
add
dec
lret
mov
ljmp
dec
neg
push
call
mov
insl
stos
push
test
mov
leave
cmp
dec
outsl
fs
mov
xchg
leave
pop
sbb
scas
mov
aas
movsb
sbb
mov
sbb
cld
dec
xor
dec
lea
cwtl
cli
lds
pusha
lcall
repz
inc
jge
mov
mov
hlt
out
mov
arpl
adc
xchg
out
adcb
cwtl
std
and
enter
aad
dec
outsl
cmc
into
repnz
movsb
addr16
arpl
es
stos
dec
xchg
inc
inc
jns
add
mov
and
and
into
rcl
aad
mov
out
sbb
fisubrl
sbb
mov
test
mov
ljmp
cld
sub
add
sahf
enter
ret
jmp
data16
cmp
cmp
icebp
pop
into
mov
jno
mov
push
jo
scas
add
int3
bound
mov
cmp
inc
adc
cmp
jne
mov
sub
sbb
pop
push
jecxz
mov
mov
stos
fbld
cmp
popl
xchg
ret
add
imul
inc
es
sbb
jb
idivb
adc
jp
div
pop
mov
pop
pushf
int3
pop
xchg
int
xchg
cmp
int
in
xlat
sub
cmpsl
in
jl,pt
jmp
sub
dec
pop
out
dec
adc
dec
inc
out
xchg
call
and
pop
loop
movsl
mov
sub
rcrb
adc
xchg
ja
call
cmp
mov
sahf
jo,pt
pusha
aaa
faddl
hlt
mov
popa
push
jl
add
rcll
testb
lahf
loop
pop
xor
aam
scas
daa
mov
push
in
scas
cmp
xchg
and
xchg
xchg
inc
addb
fstpl
imul
fnstcw
stc
jns
mov
lods
int3
cmp
dec
jnp
in
jp
scas
push
jno
add
fnstenv
cld
movsb
or
popa
mov
ret
and
dec
push
mov
mov
orl
fwait
mov
sbb
cmp
mov
lahf
cs
xor
mov
fsubrl
pusha
adc
mov
sub
mov
enter
shr
adc
and
mov
loope
in
push
loope
dec
gs
cmp
insl
mov
xchg
mov
adc
sub
dec
js
stc
push
xchg
int
popa
or
jbe
inc
sub
aas
mov
sbb
mov
push
insl
jp
mov
cmp
sbb
add
dec
adc
je
mov
jle
test
dec
mov
movsl
pop
adc
fisttps
mov
cmp
rcll
out
jns
jl
lret
xchg
cmc
lret
stos
fistpll
sub
popf
cmp
mov
sub
push
pop
mov
lea
loopne
aam
xor
popa
sub
arpl
push
jmp
xlat
ja
push
shrb
adc
pushf
dec
mov
lds
add
cmc
push
mov
into
xor
dec
icebp
cmpsb
push
in
jbe
imul
movl
cmpsb
rorl
fisubl
loope
lock
mov
jle
or
daa
enter
cmp
inc
and
cli
stos
cld
arpl
pop
insl
jns
push
adc
fldt
xlat
dec
mov
inc
dec
inc
cwtl
aas
pop
lods
or
inc
div
sbb
xchg
ss
in
xchg
testl
mov
aas
mov
cmp
cs
jnp
jb
pop
mov
push
add
pop
test
andl
or
push
in
mov
out
dec
xlat
sub
stc
push
sbb
and
lea
shrb
leave
jmp
mov
mull
pop
rcll
dec
mov
mov
aaa
jae
add
mov
add
mov
mov
repz
lret
rcl
and
test
add
aaa
aaa
push
outsl
xor
mov
and
lar
xor
xchg
iret
pop
cmp
in
push
or
sub
gs
loop
jl
shl
test
xchg
dec
push
dec
push
jmp
dec
jne
xchg
sbb
lds
rclb
mov
mov
jne
add
xchg
cmp
stos
pop
ficoms
push
mov
test
sti
loope
fdivrl
arpl
push
inc
jbe
push
push
adc
pop
rcrl
std
cmp
mov
mov
and
loope
loope
cmc
daa
or
hlt
xor
loopne
lods
hlt
mov
mov
xor
shlb
mov
sub
sub
das
cmp
das
int3
movsb
test
nop
pop
fwait
repz
mov
pushf
ret
lods
test
out
and
in
lds
pop
xchg
lods
mov
sbb
mov
jl
xchg
xchg
add
pop
jle
xor
mov
hlt
mov
ds
cmpsl
pusha
pop
mov
xchg
mov
nop
mov
lods
pop
and
shrl
push
and
loop
pusha
ja
shr
sbb
sbb
scas
pushl
and
popa
and
cwtl
lods
and
push
ficompl
iret
scas
add
subl
xor
jle
pop
and
mov
fdivr
fimuls
dec
mov
xor
fs
xchg
test
jecxz
push
rorb
lret
dec
dec
pop
xchg
call
shrb
sbb
cltd
jae
adc
out
scas
mov
loope
mov
and
leave
fcoml
call
or
add
and
aaa
ss
in
mov
les
pop
enter
cmpsl
in
stc
push
pushf
fidivrs
data16
sti
xor
mov
repnz
jne
icebp
loopne
addr16
inc
xor
mov
mov
xor
aam
gs
ljmp
aaa
outsb
bound
push
mov
das
jmp
push
jle
inc
inc
push
lock
jmp
xchg
push
inc
fcompl
mov
daa
stc
rcrb
jne
mov
inc
ret
jb
jnp
jbe
mov
test
adc
mov
shrb
mov
out
or
imul
bound
pop
pusha
lods
in
xor
cli
sub
ss
adc
adc
mov
les
fiadds
push
adc
lea
xor
out
dec
fidivrl
xlat
imul
subb
xor
mov
push
mov
lds
sbb
not
xor
cmp
mov
aad
jge
mov
push
enter
jo
lret
dec
jle
orl
add
dec
repnz
add
sub
lea
scas
mov
jb
in
cmc
inc
nop
out
push
push
and
add
out
stos
mov
mov
fs
or
dec
pop
stc
call
pop
dec
inc
inc
sub
and
mov
mov
add
cmp
add
jmp
inc
adc
mov
xor
sbb
mov
cmpsb
cwtl
xor
shlb
adc
xchg
mov
mov
xchg
sbb
bound
enter
push
iret
adc
aaa
jb
mov
nop
jl
xchg
mov
and
xchg
or
scas
sub
adc
cmp
jnp
cmpl
and
dec
ja
ret
insl
dec
add
push
xor
adc
pop
xor
sbb
sub
xchg
aaa
in
mov
xchg
push
lret
xlat
push
aas
ja
sbb
fbstp
sahf
hlt
repnz
ljmp
ljmp
dec
mov
fwait
inc
stos
jg
xor
pop
pop
push
pop
push
push
mov
cmp
mov
outsl
cld
jge
ds
ljmp
outsb
loop
push
aas
test
insb
movsb
push
or
push
push
mov
adc
rcll
pop
sub
pop
pop
mov
adc
pushf
jp
int
or
iret
bound
neg
push
mov
fcoml
add
ret
or
das
stos
out
pop
mov
mov
adc
pop
mov
mov
fcoms
xor
or
dec
hlt
sub
jae
int
sarl
xchg
jecxz,pn
adc
clc
roll
or
pop
mov
or
sub
imulb
fwait
addb
aaa
insb
stos
cld
aaa
loop
jb
das
mov
mov
cmp
adc
faddl
mov
jae
push
loopne
mov
adc
or
into
ret
dec
pop
or
sbb
in
cmp
scas
adc
mov
mov
daa
xlat
sbb
adc
bound
mov
sbb
jae
cmpsb
ja
and
lea
cmp
loopne
ficomps
lea
stos
pop
ret
mov
sub
or
cli
push
mov
sbb
lods
out
push
sbbb
push
jae
adc
cmovb
ret
das
adc
shll
and
fnstsw
pop
addr16
nop
rolb
scas
sub
les
out
enter
int
fwait
push
mov
pushf
inc
cmp
add
mov
and
push
mov
xchg
xchg
testl
xchg
mov
sti
jnp
data16
inc
add
jmp
faddl
hlt
stos
insb
les
adc
jb
push
into
jo
push
mov
sbb
xor
ljmp
iret
pop
in
fs
lods
not
push
pop
mov
jae
mov
addr16
mov
out
fdivrl
movsl
push
nop
leave
inc
jge
mov
ret
out
mov
sub
insl
push
loope
push
in
int3
cltd
je
mov
aaa
in
jns
mov
loope
sub
movsb
bound
out
enter
pop
in
mov
push
or
add
add
pop
mov
jnp
xor
mov
inc
jp
fcompl
push
lock
mov
ret
jo
xor
fstpt
clc
mov
jb
cmp
cld
adc
pop
cmpsl
or
xor
push
push
xlat
push
cmpsb
mov
pop
in
testl
sbb
inc
cmp
aad
xchg
outsb
ret
dec
xor
xchg
mov
or
mov
popf
add
push
inc
in
pop
mov
outsl
pushf
scas
fisubrl
mov
add
js
movsb
add
icebp
in
ljmp
popf
cmp
pop
loop
stos
cmpsb
fwait
mov
or
stos
fdivl
add
lea
adcl
jecxz
int3
dec
mov
push
les
fisubs
xchg
out
lret
sbb
rorl
pop
int3
mov
jns
jbe
xchg
ljmp
pop
push
jg
add
sbb
pop
push
sbb
pop
and
jge
push
icebp
or
jmp
xchg
jns
xor
out
mov
add
xchg
pop
fildl
sbb
mov
jae
ja
arpl
test
sub
nop
stos
push
mov
dec
test
movsl
jne
push
push
popa
pusha
or
imul
pushf
adc
lret
stos
in
arpl
pushf
xor
sbb
cmp
mov
add
enter
cs
push
push
push
sub
aad
add
imul
xor
outsb
lret
xor
or
adc
subl
sub
negb
stos
je
or
repz
cmp
pop
pop
push
hlt
jns
xchg
sbb
mov
sub
mov
sahf
insl
into
enter
aaa
es
sbb
int
or
daa
add
mov
mov
je
shrl
adc
lcall
and
les
mov
daa
daa
mov
mov
ljmp
pop
rolb
ficomps
test
arpl
movsb
fdivl
ljmp
std
mov
cwtl
add
into
sub
subb
cmp
xchg
out
pop
int3
mov
and
jmp
insb
sub
lcall
mov
or
int
call
adcb
xchg
mov
pop
xchg
xchg
pop
mov
in
jl
inc
bound
inc
ja
or
sbb
std
imul
bound
hlt
fucom
es
sbb
mov
jbe
push
test
pop
jmp
mov
in
ret
test
mov
jb
loop
pop
out
xchg
inc
cmp
cmpsb
adc
pusha
pop
mov
xor
xchg
mov
das
jmp
aad
aam
pop
aam
add
mov
mov
lcall
data16
loope
ret
dec
addb
mov
mov
and
pop
inc
sub
push
inc
imul
jnp
subl
dec
push
jl
mov
inc
mov
and
jne
add
mov
fistps
aam
fs
test
jmp
adc
jmp
jl
xchg
jo
and
xchg
rorb
lea
sub
int
hlt
fistpll
xchg
inc
mov
cmp
adc
sub
sub
jl
add
ret
jae
ss
inc
sbb
pop
repnz
aad
popf
mov
cmp
cmc
jp
push
stc
xor
inc
lret
sti
inc
pop
mov
sbb
or
fwait
add
call
lock
sbb
popa
cmp
cli
adc
cmp
push
out
dec
dec
push
inc
imul
xchg
in
mov
jbe
pop
nop
hlt
fcomps
sbb
jbe
mov
or
arpl
testl
mov
in
ficomps
jl
mov
jne
mov
inc
xchg
loopne
and
dec
pop
mov
mov
jae
outsl
ret
inc
test
sub
lods
jmp
subb
mov
pop
mov
das
shr
and
pushf
sub
vminsd
xor
cli
inc
mov
push
jne
jmp
repnz
push
jecxz
jno
mov
daa
je
xchg
pop
rorl
lock
adc
xchg
push
xor
imull
mov
shll
fnstcw
push
push
jmp
sub
jno
daa
mov
mov
nop
popf
cmp
test
adc
or
movsl
aam
aas
insl
jle
jmp
and
pop
out
cmp
andl
subl
sbb
mov
sbb
hlt
cmp
cmpsb
rorb
bound
adc
xchg
jbe
daa
or
roll
dec
xchg
leave
fldcw
mulb
dec
cmpsl
lret
sub
mov
test
stos
sbb
cmp
mov
aaa
dec
jle
mov
mov
xchg
jbe
outsb
mov
sarb
or
jge
dec
or
nop
lret
nop
and
jae
dec
shrb
adc
xchg
ds
pusha
imulb
rcrl
mov
xor
sub
adc
hlt
hlt
mov
stc
clc
ret
mov
gs
mov
imul
ljmp
xchg
adc
mov
ljmp
rclb
jmp
repz
cmp
iret
dec
xchg
fiaddl
cmp
jecxz
cmpsb
jl
xchg
outsb
adc
rorl
rcll
add
push
test
cmp
dec
pop
sub
pop
and
jle
add
stos
push
js
lock
push
je
pop
xchg
pushf
in
mov
adc
out
dec
push
jmp
ljmp
imul
cmp
loopne
stc
into
bound
push
cs
jnp
mov
xor
call
xor
fwait
jbe
cmp
cmpsb
pop
mov
cs
popf
ret
mov
loope
mov
mov
cmc
mov
inc
mov
imul
add
stos
and
cmpsb
cwtl
push
mov
xor
dec
imul
adc
pop
xor
dec
cmp
testl
addr16
ficoml
mov
xor
mov
dec
sbbb
jmp
out
inc
pop
in
pop
or
cmpsb
imul
bound
out
pop
jecxz
ffree
in
stos
loop
fcmovnbe
jl
adc
pop
add
cmp
lds
repnz
jecxz
push
out
adc
pop
aam
xor
and
fidivl
xchg
lods
loop
jle
add
aaa
lret
jecxz
pop
mov
repnz
or
mov
and
lret
xor
and
rcrl
popa
scas
mov
ficomps
cmp
aad
ret
lods
int3
dec
repz
ja
out
cltd
add
cmpsb
hlt
je
out
outsl
enter
xchg
push
push
mov
rorb
jnp
cmp
mov
stos
inc
inc
dec
test
stos
inc
add
stos
jne
test
js
insb
pusha
add
pop
mov
mov
sbb
cmp
je
repnz
iret
jo
clc
test
outsl
xor
lods
lods
fnsave
dec
dec
loopne
mov
fildll
cmc
mov
loop
in
push
push
bound
jg
push
push
inc
inc
in
xchg
popl
aad
sahf
int
dec
and
popa
scas
pop
test
inc
and
jbe
test
sub
inc
fwait
and
aas
sahf
mov
mov
mov
bound
js
stos
repnz
test
jns
push
loopne
dec
jb
jnp
xor
xchg
xchg
adc
adc
cli
mov
mov
lcall
cwtl
sbb
sub
pop
mov
jns
dec
scas
and
pop
pop
test
cmc
mov
fcmovnbe
test
leave
and
jg
jb
movntq
out
cmpsl
dec
mov
mov
jne
in
repnz
fcomps
pop
ss
inc
dec
mov
movsl
and
xor
adc
dec
jp
rcrl
push
repnz
cmp
jle
pushf
cwtl
cld
insl
popf
xor
xchg
sbb
sub
stos
cltd
lcall
fstpt
mov
adc
mov
dec
js
cltd
les
jmp
leave
imul
fisubrl
psllq
jecxz
push
mov
push
bound
fsts
cmc
mov
cwtl
pop
out
mov
or
das
sub
push
popa
add
cmpl
enter
cmpsl
cmp
adc
insl
xor
dec
sub
push
lock
outsl
leave
ss
movsl
inc
mov
mov
xor
insl
test
sbb
adc
push
in
lds
stc
lods
mov
sbbl
ds
jno
inc
int3
push
adc
icebp
test
mov
jp
mov
adc
out
ror
dec
out
mov
inc
inc
int3
sbb
add
sarl
sbb
mov
push
jnp
jmp
ret
lock
add
iret
or
out
mov
sbb
pop
pop
cwtl
cmp
stc
push
out
arpl
xchg
pop
ljmp
dec
xchg
ss
call
and
stc
adc
imul
lea
dec
mov
cmpl
in
daa
iret
sbb
mov
ficompl
pop
testl
ljmp
xor
adc
add
stos
xchg
inc
and
cwtl
mov
test
add
or
orl
outsl
dec
xchg
push
insl
push
and
mov
jle
mov
daa
clc
sbb
xor
out
mov
or
mov
mov
xor
and
push
xchg
ret
insb
or
test
popf
imul
push
adc
je
mov
sub
adc
movl
ja
imulb
addb
gs
xor
arpl
pusha
rcll
lret
out
sbb
lahf
jno
rcrl
or
inc
push
pushf
jnp
fucomi
dec
ret
xchg
mov
es
mov
mov
rolb
jo
insb
imul
jecxz
push
jno
mov
stos
xor
sub
aaa
mov
test
stos
dec
fistps
pop
loope
mov
mov
out
push
pop
fsubs
dec
out
push
cmp
cld
mov
out
inc
jbe
jmp
es
ja
mov
sbb
ss
call
xor
inc
outsb
jb
ret
loop
data16
inc
lods
test
mov
push
scas
mov
lods
and
cmp
pop
push
pop
in
xchg
and
or
add
push
subl
add
popa
imul
je
imul
popa
push
roll
inc
aam
adc
js
cmp
cltd
rcrl
xor
pop
cmp
pop
call
mov
jns
sub
shlb
adc
jo
push
jae
cli
mov
xchg
cld
jbe
stos
rcrb
aaa
sahf
adc
xchg
and
adc
xor
jns
lahf
cmc
fildl
test
jbe
jge
and
ror
dec
sbb
rcll
fldl
cmpsb
jg
idiv
mov
hlt
aas
in
test
push
and
adc
push
rcrl
jge
sub
pop
push
sub
jno
jbe
xchg
cmp
mov
pop
fwait
outsb
or
add
lea
das
insb
add
dec
pop
dec
xchg
or
sahf
mov
test
inc
loop
out
sub
mov
lds
out
shl
repz
sub
and
fwait
sub
ljmp
inc
mov
sub
stos
movsl
lods
mov
inc
adc
dec
imul
or
pusha
xor
jmp
dec
cmp
push
inc
adc
cmp
mov
sahf
nop
pop
sbb
and
bswap
inc
lods
sbb
jle,pn
shll
sahf
sahf
jg
push
cmp
inc
in
mov
jne
fcmovnu
inc
sbb
add
cmc
cmp
cmpl
adc
das
push
popa
add
lahf
ja
push
in
adc
ret
push
cmp
cld
arpl
jl
pop
ret
stos
dec
sbb
mov
dec
fcmove
jle
fdivrp
repz
mov
inc
or
es
in
add
pop
js
push
pop
mov
lods
ds
push
cli
sar
scas
and
jne
and
pop
dec
outsb
int
sahf
dec
cld
mov
sbb
push
and
fcomp
dec
xchg
xor
ficoml
cmp
arpl
sub
sbb
jb
imul
and
cwtl
pop
or
push
icebp
leave
stos
push
or
into
ja
imul
and
inc
ds
and
push
lock
cmp
lahf
aaa
sub
ljmp
in
dec
das
fwait
sbb
hlt
ljmp
adc
xlat
mov
jg
dec
and
sbb
pop
cmp
pop
adc
outsb
inc
in
pop
jmp
add
and
push
jno
mov
mov
xlat
ds
fsubr
cmp
sahf
jle
stos
daa
idivb
pop
cmpl
fcomps
aaa
fistpll
adc
aas
push
sbb
mov
bound
sub
xchg
insb
or
push
mov
push
sysenter
jl
call
addr16
mov
jnp
cmp
iret
sar
insb
in
in
out
cltd
in
ret
lock
push
sub
sbb
adc
outsl
cli
xchg
fimull
pop
jbe
scas
mov
mov
bound
or
mov
dec
push
into
adc
fdivs
pop
mov
or
add
daa
push
movsl
lcall
and
lds
int
push
imul
push
pop
mov
sub
cmp
add
mov
add
stc
out
pop
xchg
xchg
jp
mov
xchg
cld
mov
pop
sub
xchg
xchg
mov
shrb
add
cmp
shlb
jmp
fs
cld
rclb
je
les
inc
mov
insl
inc
xchg
push
push
push
and
lahf
mov
sub
sub
repz
xor
push
pop
mov
sub
movsb
test
jge
push
mov
das
mov
add
sub
dec
in
jecxz
enter
scas
sbb
pop
aad
lret
daa
popa
out
and
popf
gs
js
inc
jmp
fimuls
int
aam
dec
or
std
subb
dec
push
mov
jmp
aam
xor
in
add
mov
pop
jl
sub
mov
pop
or
mov
std
enter
call
pop
mov
cs
repz
jnp
fisttps
stc
mov
pop
jl
test
jecxz
cmp
xchg
dec
dec
xor
mov
adc
fistpll
inc
and
out
mov
std
cmp
jp
cs
pop
loop
out
push
mov
push
xchg
inc
and
lock
repnz
pushf
push
and
nop
aas
cmpsb
cmp
testl
jns
mov
xchg
add
jae
xlat
xor
sbb
fldcw
add
push
pop
in
xchg
cli
cmp
mov
std
xchg
ret
fistpl
les
fs
push
adc
jae
out
cld
daa
jb
jecxz
sub
fsubrl
mov
addr16
xchg
xchg
push
jae
test
push
int3
in
mov
xor
add
pushf
fldt
jbe
jle
aas
sbb
inc
adc
push
fstps
shrb
add
sahf
push
mov
scas
or
fildll
pop
test
test
mov
mov
xchg
lret
xlat
push
outsb
pop
xor
aaa
push
and
ja
jg
sbb
das
je
or
xlat
lods
dec
mov
pop
lret
lret
out
mov
adc
dec
fadd
lahf
sub
nop
push
outsl
popa
test
jae
or
push
add
jo
sbb
pop
mov
mov
mov
sti
mov
pop
xor
cmp
in
add
test
or
add
cli
loope
mov
iret
pop
push
mov
adc
sub
enter
push
add
xor
or
xor
or
and
cmp
or
mov
gs
arpl
fimull
clc
sub
push
xchg
add
into
sbb
hlt
lret
iret
or
pop
movsb
ljmp
fiadds
cld
add
insl
mov
test
mov
inc
xorb
call
jle
sub
pop
mov
stos
popf
and
in
mov
jb
mov
jle
ret
mov
jne,pn
xor
fisttpl
in
jecxz
aad
adc
enter
dec
shll
add
or
iret
sbb
movsl
push
mov
push
mov
pushf
popf
or
push
cmpsb
and
xchg
mov
jns
mov
insb
jp
cltd
dec
flds
pop
dec
mov
and
add
inc
or
orl
add
sub
jl
mov
add
into
out
cmp
aas
bound
lock
ja
xor
pop
insl
sub
cmp
fisubl
sbb
pop
adc
std
sbb
ja
lds
mov
sti
inc
fs
fwait
aam
in
jae
scas
sbb
mov
add
cld
ljmp
stos
jnp
xor
loop
xchg
sub
sbb
xchg
sub
call
jge
xchg
mov
lret
cmp
hlt
gs
cmc
and
cltd
jnp
mov
xor
out
and
mov
pop
mov
mov
test
pop
out
aad
loop
test
outsb
sbb
mov
arpl
pop
xchg
lahf
push
cld
outsb
push
xchg
mov
pop
scas
sub
lret
outsl
test
ret
daa
imul
mov
repnz
xchg
push
adc
inc
mov
in
int3
sbb
icebp
pop
cld
cs
jg
sbb
push
in
add
pop
into
inc
ror
xlat
or
pop
xchg
repz
in
in
lea
jbe
xorl
xchg
loop
ds
pop
xchg
sahf
aaa
sub
mov
push
cmp
adc
or
int
xchg
arpl
jecxz
add
jg
push
sbb
cmovp
ret
adc
push
ds
cs
sub
xlat
and
stos
loop
std
clc
call
sbb
push
incl
adc
loop
popf
and
fs
push
shrl
xchg
sbbl
cltd
mov
jo
push
pushf
pop
ret
cmpsl
int3
and
cmp
adcb
std
sbb
push
mov
cmc
cmp
es
mov
test
into
add
xorb
mov
fwait
mov
mov
mov
outsl
xchg
dec
xchg
sub
push
call
das
mov
mov
mov
cs
push
jp
dec
jge
pop
outsl
inc
rcrb
aaa
inc
test
lahf
loope
int
das
psllq
std
and
pusha
inc
cs
ret
ret
cmp
sarl
lds
mov
lret
insl
adc
jnp
push
sbbl
cwtl
rorl
int
sub
dec
movsb
icebp
movsl
repz
dec
hlt
dec
jbe
arpl
lods
test
repz
mov
push
clc
sub
xchg
rol
or
aaa
sub
adc
adc
adc
lea
xchg
cmp
stc
dec
dec
dec
test
imul
pop
inc
pop
out
popa
xorl
jmp
and
jle
jb
dec
aaa
stos
dec
jle
iret
mov
test
incb
int
pushf
das
xchg
mov
mov
test
add
rcr
pop
mov
ja
mov
inc
push
pop
add
addr16
repz
pop
test
int3
fwait
push
sbb
fdivs
push
add
mov
pop
adc
push
jb,pn
jle
adc
push
xor
push
out
xor
jle
stos
cmp
fcmovne
mov
mov
dec
outsl
push
int3
xorl
adc
lcall
es
imul
ja
pop
cmc
dec
loope
jecxz
mov
jmp
jle
push
jne
push
mov
sub
mov
mov
xchg
xor
mov
inc
in
daa
in
andl
cmpsb
gs
push
adc
push
add
adc
or
mov
rcrb
jb
mov
dec
and
xor
add
cli
test
jbe
aam
fsubr
dec
shl
sub
mov
mov
push
jne
xchg
out
cmc
in
mov
rcll
aas
jecxz
jmp
mov
pop
lods
hlt
pop
or
in
int
dec
out
jmp
cmpb
cmp
lock
xchg
fstl
adc
cmpsl
add
dec
sbb
mull
jnp
jl
scas
dec
sbb
mov
lock
cmpsb
dec
pusha
rcrb
jle
insl
or
push
iret
es
imul
mov
pop
repz
out
loope
cmp
jp
inc
lds
mov
loope
fmull
dec
mov
sbb
jg
sbb
das
int3
lock
dec
fisubrl
cmpb
xor
mov
lahf
mov
cmpl
js
sar
in
sub
sbb
inc
fldl
sub
je
pop
ss
cmp
and
fmull
sbb
sarb
push
les
das
xor
stos
or
pusha
adcl
mov
inc
aad
test
stos
fcoml
scas
or
mov
outsl
pushf
dec
ja
pop
mov
adc
shlb
xchg
xor
nop
push
pushf
push
jp
repz
ss
and
hlt
mov
outsl
inc
call
push
and
dec
stos
pop
mov
jae
push
cmpsb
and
enter
push
push
cmc
add
ja
push
push
int3
inc
lret
pop
cltd
mov
in
imul
push
sub
stc
es
xchg
dec
in
push
sbb
adc
xlat
arpl
pushf
and
pop
adc
or
jecxz
mov
scas
dec
pop
icebp
out
sbb
pop
fdivs
add
adc
or
and
cmpsl
pop
pop
xchg
push
push
cs
jae
jecxz
ss
pusha
xchg
sub
pop
ret
mov
inc
jmp
sbb
mov
repnz
xor
cwtl
mov
scas
xchg
pop
les
push
mov
imul
dec
outsl
dec
loop
int
add
in
divb
jl
ss
iret
rcr
inc
lret
ljmp
mov
addb
cmp
push
jg
cwtl
jl
jp
sbb
pop
test
inc
sub
adc
jae
imull
jbe
jmp
sahf
sub
mov
lods
ds
sub
call
sbb
push
das
out
sub
in
xchg
cwtl
push
repnz
mov
xchg
push
xor
hlt
sbb
pop
pop
ja
in
adc
sahf
arpl
add
push
xchg
imul
fdivp
xlat
xchg
fcomp
in
xor
mov
xor
scas
jg
fsubr
mov
rcll
hlt
popf
cmp
mov
inc
mov
mov
outsb
or
xchg
sub
xchg
loop
fmul
sbb
cmp
cmp
lods
add
sti
add
xchg
xchg
jp
or
ficompl
mov
daa
cmpsb
fsubrl
decl
push
aad
lcall
arpl
jno
jo
pop
ja
std
mov
sub
or
adc
jg
out
iret
jae
mov
xor
push
call
sub
ret
xchg
mov
sbb
xor
adc
cmpsl
jnp
nop
adc
and
jae
ljmp
idivl
loopne
lahf
xchg
sub
iret
add
gs
and
ds
divl
addr16
add
jb
push
inc
hlt
out
mov
fldenv
gs
jecxz
sti
dec
pop
stos
xor
lods
stc
shlb
stos
mov
js
iret
incb
movsb
push
jnp
sub
ret
pushw
mov
push
push
inc
leave
dec
loop
arpl
xchg
mov
sarl
or
push
jecxz
xor
push
nop
test
add
lods
dec
daa
popf
rol
movsb
mov
mov
push
fnstcw
sbb
mov
cmp
leave
out
enter
in
jns
jl
xchg
sbb
or
jne
popf
cmpsb
adc
xlat
movsl
out
int
sub
dec
push
bound
dec
arpl
es
movsl
jmp
icebp
dec
jb
and
or
jne
pop
jno
cld
shl
lret
inc
ljmp
fistps
popf
or
sub
jmp
push
aad
fnstcw
sbb
sbb
cs
mov
push
stos
mov
lods
loop
sbb
mov
in
stc
mov
or
bound
push
add
adc
pop
ds
pop
mov
std
adc
cltd
jl
mov
int3
push
jecxz
xchg
xchg
pop
inc
adc
and
mov
cmp
repz
dec
sub
pushf
pop
jno
ret
test
xchg
aam
or
fstpt
push
jl
push
cmp
dec
mov
loope
pop
xchg
into
add
iret
mov
rcrl
popf
jb
mov
pop
int
inc
cmp
das
hlt
jne
sets
and
mov
mov
fmul
out
or
xchg
adc
cli
push
cmpsl
jo
enter
insb
int3
pop
orb
lock
notl
mov
pop
sbb
into
fisubrl
mov
std
ss
push
sub
xchg
repz
inc
add
stos
push
clc
jbe
sub
sbb
xor
xchg
shl
enter
sbb
lret
and
and
ljmp
mov
and
cmp
ljmp
mov
pop
ret
arpl
test
push
sahf
stos
adc
leave
popf
pop
pop
inc
pop
lcall
push
dec
sbb
or
jl
fdivrs
hlt
shlb
sbb
loopne
rcl
inc
jge
adc
jmp
loop
add
and
xchg
aad
sub
lret
cmp
push
outsl
sbb
mov
push
ja
dec
or
xor
fcompl
aam
mov
cmp
or
pop
cmp
popf
shrb
cld
lods
movswl
jg
icebp
push
push
mov
out
cltd
out
insl
movsb
fstpl
sub
jle
sub
loop
jae
pushf
inc
add
cmp
sub
mov
rcl
mov
sub
out
push
fnsave
sbb
push
mov
mov
xchg
push
xchg
fisttpl
mov
int
repz
pop
mov
xchg
push
cs
xor
cmpsb
ljmp
fbld
or
lcall
adc
jg
cwtl
push
mov
adc
ljmp
xchg
sbb
cmpb
mov
sahf
fmuls
sbb
lret
pop
dec
fmulp
pusha
lock
and
stos
popf
push
sbb
stos
out
ret
xlat
cli
das
jecxz
scas
or
mov
add
insb
adc
movsb
or
dec
out
xchg
jno
pop
cmc
lret
pop
ljmp
sub
cmp
out
sti
mov
pop
ljmp
sub
fnclex
sub
inc
dec
mov
pop
xor
leave
orb
cs
push
jg
sbb
movsb
shl
movsl
mov
cmp
testb
xor
cmp
shlb
and
out
mov
scas
adc
test
mov
sub
sub
mov
sti
xlat
adc
hlt
sarb
jg
jns
lods
adc
mov
sub
jae
in
mov
leave
xchg
xchg
repnz
addr16
inc
and
ljmp
mov
bound
or
int
dec
in
outsb
add
pop
lea
outsb
mov
xchg
divl
dec
mov
mov
dec
xchg
gs
xchg
int
add
cmpsb
repnz
test
sbb
push
mov
es
push
out
and
mov
mov
or
push
push
jmp
ds
mov
xchg
mov
mov
pop
stos
rcl
mov
add
add
out
mov
add
ja
imul
scas
out
or
fwait
cmp
outsl
adc
bound
dec
sub
pop
fildl
pushf
push
mov
das
jg
push
mov
push
xchg
mov
add
sti
sbb
dec
pop
lock
out
adc
and
xor
ficomps
shrb
mov
inc
and
movsl
daa
mov
mov
mov
push
inc
es
push
nop
or
sbb
sub
pop
movb
jle
in
in
ret
mov
into
icebp
bound
sbb
cltd
ljmp
aam
xor
adc
cltd
inc
adc
test
out
les
add
xchg
sbb
ss
int3
leave
adc
push
nop
or
pushf
cmp
mov
fisttps
dec
add
cmp
popa
mov
aaa
scas
pop
shrl
movsb
sti
test
xchg
mov
xor
repnz
dec
sbb
loop
insl
in
arpl
jge
shrb
mov
sub
ljmp
rclw
int
les
jnp
cmp
es
leave
loop
aad
cltd
pop
std
mov
sub
cmp
add
push
mov
arpl
inc
push
enter
or
repnz
flds
mov
outsb
jecxz
insl
xchg
inc
push
jbe
sti
rcrl
ret
inc
adc
cmpsb
sbb
negl
pop
xorb
sub
test
jae
and
inc
adc
fs
pop
mov
jns
jg
push
jecxz
mov
mov
dec
adc
inc
jb
adc
mov
or
xor
and
mov
dec
mov
sub
push
loope
jae
fcompl
xlat
cmp
sub
inc
push
outsb
leave
jno
sub
fiadds
add
mov
into
std
cld
adcl
int
cmpsl
mov
dec
out
lea
loop
sbb
xor
es
sbb
pusha
std
addb
pop
cmp
lods
jb
dec
inc
shl
xor
cs
pop
push
xchg
in
mov
rol
xor
das
bound
push
and
jne
std
mov
pop
sub
insl
adc
andb
adc
sbb
mov
loope
or
lahf
adc
push
jnp
mov
dec
sbb
clc
sbb
adc
lret
jo
jae,pn
mov
dec
subl
cmc
rcl
leave
cmpsl
jp
stc
pop
loope
repnz
mov
xlat
xchg
mov
fsubs
enter
outsb
mov
aam
sub
mull
das
nop
xor
mov
repz
test
mov
inc
setbe
dec
inc
lds
std
cmp
rorl
out
insb
leave
sti
popa
jae
pop
mov
adc
clc
test
cmp
movnti
mov
xchg
fnstcw
mov
pop
pop
in
or
rcl
xor
daa
cmc
into
add
jmp
icebp
or
cmp
jo
ja
stc
cmp
ss
cmp
adc
insl
dec
or
mov
inc
inc
pop
icebp
cld
lods
push
jo
test
sbbl
xchg
inc
adc
dec
test
jecxz
add
cmp
vpavgb
bound
pop
aaa
mov
push
mov
cwtl
ljmp
xchg
xchg
dec
in
push
mov
push
mov
int3
fwait
ja
inc
push
xchg
cmp
inc
sub
inc
test
xor
adc
clc
mov
pop
push
inc
jae
cmp
fldcw
nop
outsl
out
std
fdivrs
faddl
jno
cmp
cwtl
adc
cwtl
test
imul
jmp
cli
mov
js
pusha
or
push
push
sar
xchg
and
lret
pop
in
fisubrs
stos
sub
clc
cli
push
adc
dec
mov
imul
pop
arpl
mov
inc
mov
jp
jo
outsb
shrw
jns
jno
push
mov
add
push
int
and
int
rcr
mov
mov
mov
sbbb
add
push
push
jbe
loopne
pushf
mov
jae
sub
mov
sbb
or
aad
pop
insl
mov
mov
adc
nop
xor
pusha
pop
sub
inc
std
sbb
arpl
scas
mov
test
and
push
ret
mov
jae
outsb
push
stc
mov
pop
push
cli
jno
setle
mov
fistpl
sti
stos
roll
cmpsb
fildll
dec
push
adc
push
add
sahf
dec
adc
pushf
dec
ja
xchg
rorb
xchg
fdivs
sahf
xchg
add
sbb
add
inc
push
lods
cmp
fiadds
jmp
imull
in
out
into
lcall
sti
push
psubsw
sbb
xchg
jg
push
mov
test
imulb
es
sbb
push
popf
and
fdiv
fs
loope
aaa
jecxz
sarb
xor
cmp
xlat
enter
mov
pop
mov
data16
hlt
scas
lea
inc
loopne
repnz
lds
lret
shr
fwait
cmc
dec
push
push
cmp
call
xchg
push
push
lods
xchg
push
mov
outsl
test
fisubl
xchg
gs
mov
adc
test
pop
jecxz
pop
and
mov
or
ja
lods
cmc
mov
in
adc
push
push
and
lcall
mov
das
test
mov
pop
add
scas
fwait
stos
jne
mov
lods
add
clc
mov
mov
cli
or
ret
xchg
loopne
add
mov
adc
jl
xorb
xor
loop
or
fcoml
fldt
sbb
and
jg
inc
or
jg
gs
stos
into
sub
xchg
or
mov
xor
sarl
stos
xor
sbb
fisubrs
mov
jge
mov
scas
enter
and
jbe
push
inc
imul
inc
imul
mov
lock
cli
cmp
jo
lea
mov
pop
rclb
gs
sub
imul
das
jmp
hlt
jns
jo
ret
push
orb
push
sub
inc
xchg
push
sbb
pop
mov
push
bound
in
sbb
sbb
mov
ss
loop
cmpsl
test
mov
cmpsb
je
stc
subl
jo
jnp
mov
xchg
loope
xchg
add
adc
push
fadds
pushf
or
out
fsub
add
jb
popf
lcall
aad
mov
mov
jo
adc
inc
jo
jp
dec
push
cltd
aas
adc
push
rorb
sbb
xchg
fsubr
sbb
inc
ret
push
cmpsb
sbb
out
xchg
testb
dec
mov
or
xchg
push
lret
test
aaa
pop
lret
lea
jmp
pop
lcall
sarl
pop
not
add
inc
lret
fisubl
or
sub
shll
lret
sbb
jge
out
pop
lea
mov
fadd
cmc
jne
and
leave
in
mov
lea
push
scas
bound
add
loop
lock
mov
imul
sub
loopne
cmpsl
mov
loope
sbb
lock
mov
aas
stc
rcll
ficompl
lret
cmp
out
rcrb
mov
mov
out
nop
testb
ds
and
fisubrl
sbb
push
adc
cmp
cmp
jg
gs
jnp
xchg
shlb
adc
mov
aas
ja
sbb
mov
push
leave
cltd
sbb
push
inc
mov
jg
push
mov
jno
or
xchg
cmp
mov
test
adc
mov
insl
add
mov
mov
adc
mov
rorl
xor
repnz
dec
pop
lock
adc
sar
push
out
xchg
xchg
mov
pop
movsb
lods
mov
jg
in
mov
icebp
inc
repz
pop
sub
insb
ss
xchg
add
xchg
dec
sbb
sbb
mov
mov
divl
pop
or
fstl
mov
std
cltd
call
mov
sahf
push
push
sbb
stos
or
sub
and
cmpsb
out
sbb
inc
test
xor
je
mov
pop
js
and
and
xor
jo
and
mov
and
aam
fucomp
mov
mov
in
loopne
in
xor
sbb
loop
ljmp
sbb
xchg
fstpt
mov
jno
mov
xor
lods
add
cmc
and
es
pop
xchg
rcl
cld
rorl
inc
aaa
sub
lret
lcall
shrb
cwtl
int3
orl
sbb
out
inc
insl
out
sub
and
inc
cmp
rcr
and
mov
pop
mov
cwtl
test
lret
and
mov
vextractps
lods
add
pushf
adc
xchg
cltd
mov
dec
push
pop
adc
stc
mov
cmp
mov
ret
fldcw
add
icebp
cli
popf
das
pop
push
jle
fs
sbb
lods
or
and
rolb
mov
loopne
inc
rorb
mov
addr16
out
mov
add
push
movsb
inc
cmp
mov
fstps
lret
fiaddl
and
mov
mov
imul
sbb
xchg
faddl
scas
push
cmc
lods
or
or
fiadds
mov
or
or
sbb
push
mov
dec
add
gs
fcomps
pop
daa
adc
add
jns
xor
xchg
mov
xchg
xchg
negl
cmpsl
sbb
ss
mov
mul
mov
mov
jge
inc
and
push
fildl
add
or
sub
test
cs
call
addb
mov
jb
push
frstor
sub
cmp
bound
pushf
mov
rorl
test
out
add
adc
lods
mov
pop
ljmp
cmpsb
cltd
movsl
es
xor
fiaddl
pop
in
repz
pop
mov
adc
xchg
mov
mov
ss
stc
ja
sub
in
cwtl
jo
add
inc
pop
inc
cwtl
ret
push
mov
push
scas
cmp
faddl
xor
loopne
jg
add
int3
cmpsl
gs
pop
jne
pusha
xlat
stos
xchg
and
inc
add
stc
and
xchg
pop
mov
inc
lret
cmpb
xor
push
adc
pop
mov
push
insl
jecxz
test
mov
xchg
xchg
or
fnsave
or
or
sbb
push
or
mov
xchg
fs
mov
addr16
inc
lret
xlat
mov
mov
sbb
cmpsl
stos
fsubl
jl,pn
rolb
adc
cmp
out
gs
lcall
mov
pop
mov
in
inc
xchg
jl
sbb
xchg
mov
cmp
add
or
add
sub
loope
pusha
push
repnz
cltd
push
jmp
mov
gs
xchg
add
add
adc
test
mov
jg
fmull
push
xchg
movsl
mull
or
subl
inc
push
dec
push
xchg
and
stc
aas
jecxz
cltd
add
enter
adc
dec
repz
loope
into
das
mov
jmp
xchg
sub
fcmove
jne
mov
ja
sbb
inc
push
dec
push
cmp
orl
sar
mov
je
imul
or
mov
sbb
imul
pop
sbb
incl
mov
cmpsl
nop
ljmp
lret
lahf
xchg
scas
loop
add
cmpsl
mov
dec
je
int3
iret
cmp
fs
cli
cld
cmp
loope
mov
push
repz
cwtl
mov
jle
lcall
lds
pop
and
xlat
inc
lds
shll
fdivr
sbb
cwtl
push
fbld
xchg
and
mov
fimuls
daa
test
and
shl
adc
sbb
lock
cmp
push
push
pop
or
daa
xor
fnstcw
cmp
movlps
dec
push
mov
std
or
jae
pop
out
shlb
movsb
jo
jnp
movb
imul
inc
jns
insb
in
loopne
sub
cmp
mov
mov
cld
lock
pusha
das
inc
push
lret
and
sub
and
shl
mov
inc
daa
cmp
rol
in
jl
daa
sbb
fcmovne
into
push
jns
rol
mov
or
pop
ficompl
insb
repnz
sarb
and
adc
and
mulb
in
lea
cmp
mov
push
mov
test
mov
imul
shlb
pop
aad
leave
xchg
mov
or
std
pop
repz
pop
xchg
hlt
arpl
xchg
mov
mov
push
or
dec
inc
push
mov
sub
add
daa
rclb
bnd
aas
lock
lods
sub
mov
movsl
stos
jb
lahf
pusha
mov
bound
mov
xchg
pop
push
inc
push
jb
mov
leave
lods
gs
inc
popa
scas
popa
push
andl
pop
cmp
sbb
or
shl
inc
test
or
add
sub
add
in
movsl
pop
nop
mov
out
leave
xor
jns
mov
cmc
jge
dec
xlat
hlt
mov
popa
lret
rorl
xor
dec
mov
stos
rcr
jo
test
mov
adc
mov
lods
cmp
sahf
sbb
sbb
fsubs
ss
mov
addr16
arpl
negb
xchg
fdivs
movsl
data16
std
fnstenv
xor
push
dec
iret
pop
cmp
lcall
fxch
pop
lods
and
xor
pop
shll
ret
sbb
push
sarb
or
and
lock
push
mov
ss
dec
push
xor
in
jbe
push
imul
cmpsb
pop
sub
movsl
ret
movsb
mov
pop
imul
inc
aaa
dec
or
cmpsb
jp
push
add
push
rcrb
sub
inc
push
mov
xchg
fimull
dec
pop
leave
nop
out
inc
mov
cmp
lods
bound
sbb
aad
addr16
pusha
lahf
insb
jo
mov
cmp
jns
int
inc
pop
and
mov
out
dec
sub
outsl
sub
pop
cmp
mov
jnp
adc
push
sahf
inc
fsub
dec
jg
test
stos
leave
fucomi
or
aad
xor
add
jo
add
mov
xchg
fcoms
sar
xor
mov
pushf
and
mov
fimuls
push
xchg
in
push
mov
cmp
sti
add
xchg
jmp
mov
mov
mov
add
or
popf
lods
mov
daa
dec
and
shr
mov
and
ljmp
jge
push
dec
lcall
subl
add
idivb
push
scas
nop
repz
pop
fisttpl
push
and
dec
adc
cmpsl
outsb
xchg
jmp
loopne
or
outsb
lock
add
add
cmpsl
std
xchg
clc
mov
add
hlt
arpl
imul
mov
jl
jg
adc
movsb
xor
dec
mov
sub
adcb
iret
mov
pop
int
ja
fwait
push
fwait
in
push
ficoms
inc
mov
inc
xchg
push
sbbl
bound
push
xor
movsb
sub
insb
lahf
cmc
push
sbb
sub
int3
sbb
scas
push
sbb
js
dec
clc
push
insb
or
out
adc
int
fdivr
jo
aas
fisubs
pop
xor
xor
inc
mov
movsl
stc
adc
jno
fs
add
mov
out
cmp
cs
jae
mov
fstps
pop
mov
mov
jl
xchg
lods
mov
pop
sub
sub
repz
mov
push
mov
cltd
mov
jmp
test
mov
ljmp
add
sbb
pushf
inc
clc
insb
cmc
sbb
mov
jmp
repz
and
pop
test
push
or
loope
insb
inc
push
clc
mov
sub
add
pop
mov
mov
mov
inc
int3
lcall
add
or
stc
and
adc
daa
pushw
push
pop
or
insl
inc
or
mov
insl
mov
add
mov
push
nop
ljmp
push
jp
or
xor
jp
dec
inc
rcrl
in
add
fstl
cwtl
imul
mov
sbb
mov
add
mov
bound
mov
adc
roll
pop
mov
jns
cmp
stc
xchg
add
es
out
cmpb
pop
call
jae
sub
inc
lds
or
push
cmc
js
sbb
cwtl
aam
xor
adc
insl
cs
cmc
or
add
xchg
or
int
push
dec
mov
movsl
cmp
xor
mov
sbb
loop
xchg
dec
xchg
push
fmuls
cwtl
fdivr
lcall
inc
mov
mov
sub
jg
aaa
sub
xchg
fdiv
jb
pop
sub
adcb
add
fstpl
lods
ljmp
mov
jl
jmp
or
sub
xor
into
dec
aad
xor
lcall
cmc
outsb
push
insl
mov
icebp
fdivrl
dec
int3
and
mov
nop
mov
cmpsl
mov
jmp
in
dec
cmpsb
jmp
outsb
inc
fsubrs
je
lahf
lods
xlat
pop
or
inc
enter
push
pop
dec
lret
scas
iret
shlb
ja
mov
test
mov
into
push
lods
jecxz
mov
daa
xchg
jmp
xor
and
mov
cmpsb
out
mov
jmp
outsl
pushf
mov
inc
push
mov
xchg
subb
jecxz
push
ss
pop
pand
lock
pop
in
mov
es
xor
adc
fwait
int3
cmp
outsl
es
pop
out
cmp
rorl
inc
sbb
in
rcrb
mov
sub
lea
cmp
dec
mov
cli
les
cwtl
ja
movl
or
cltd
and
xlat
cli
out
sbb
jo
dec
rcrb
lret
cltd
fucomp
scas
lea
xor
xchg
cmp
pop
xchg
xor
pop
insb
sbb
xlat
adc
fdivs
jmp
icebp
mov
repz
aas
out
dec
adc
adc
rorb
rcrl
mov
ret
pop
in
xor
addr16
lcall
xor
mov
xchg
pop
getsec
cld
int
gs
pop
sbb
lock
or
in
add
popf
inc
negb
xor
xor
iret
xor
in
cli
pop
sbb
xor
xor
std
lods
add
rcrl
inc
fcmovb
out
insl
push
sub
push
popf
stos
xchg
mov
sub
push
cmp
lret
subb
ret
test
ret
pop
pop
test
mov
aaa
out
sbb
cld
mov
repz
mov
lret
enter
inc
out
test
cmpsb
fwait
lods
mov
cmpsb
sbbb
xchg
dec
dec
cmpsl
movsb
xor
iret
rolb
movsb
fcomp
add
insb
jg
mov
mov
sub
sbb
push
or
cmp
imul
xchg
cmpsb
xchg
lcall
dec
push
adc
dec
sub
ret
and
cmp
mov
sub
xchg
mov
outsl
and
pushf
in
xchg
sahf
xchg
lock
dec
mov
inc
mov
or
aam
rcll
adc
sbb
mov
pop
mov
or
ds
mov
cmp
ljmp
and
and
imul
enter
imulb
fstpl
add
push
or
inc
out
cmp
add
and
cmc
pop
into
mov
rorl
lods
les
sbb
sub
call
lds
xor
xor
dec
and
pop
popf
inc
neg
data16
test
jl
pop
sbb
in
psubusw
ss
xor
imul
mov
movsl
repnz
fbld
sarl
sbb
mov
in
rclb
dec
stos
pop
fistpl
push
sahf
mov
jge
dec
shr
jae
mov
dec
je
inc
nop
adc
loopne
mov
or
int
inc
hlt
adc
adc
mov
popf
jne
xchg
mov
fs
pusha
enter
out
push
mov
in
fs
es
stos
mov
ficompl
add
jg
int
dec
test
cmp
xor
fisttps
mov
popa
imul
pop
and
leave
pop
dec
mov
jg
dec
aam
sahf
push
fcomi
in
adc
stc
xor
in
loopne
inc
push
pop
scas
push
inc
imul
cmp
cltd
cmpsl
stos
or
leave
xor
mov
pop
mov
insb
mov
mov
and
mov
mov
loopne
pop
and
rclb
ficomps
popf
loope
push
mov
stc
jge
call
cmp
fcmovb
nop
sbb
pop
adc
pop
mov
and
inc
cmp
data16
push
jmp
or
cmpsb
cmp
mov
xchg
mov
outsb
lcall
mov
adc
jne
and
outsl
das
jbe
stc
pop
add
xchg
inc
lods
clc
push
lods
movsb
push
xlat
rcrl
and
pop
pop
in
sub
or
cmp
sbb
iret
or
mov
lcall
imul
loop
inc
aam
xchg
shrl
fcmovb
aas
xchg
mov
fucom
mov
dec
stc
xchg
shrb
int
mov
mov
rorb
ret
inc
cmpsl
mov
push
sbb
xor
insl
shrl
xor
mov
push
mov
mov
movl
mov
mov
ret
and
ss
xor
repz
hlt
push
test
scas
mov
sub
ljmp
or
mov
testb
xchg
cs
aad
leave
or
push
leave
jp
pop
repnz
arpl
aam
or
js
mov
mov
jbe
dec
in
and
adc
xor
out
mov
pop
mov
mov
or
pop
fsubs
js
pop
psraw
or
pusha
cmp
jg
popa
cwtl
lahf
and
ffreep
in
aas
xchg
and
cmpsl
adc
pop
out
mov
push
outsb
sub
pusha
mov
xorl
mov
and
loopne
inc
and
cmp
pop
insl
test
fcmovnbe
pop
int
jbe
iret
push
push
dec
sahf
and
cmp
je
mov
lods
enter
inc
xorl
dec
daa
in
pop
fsubrl
add
movsb
push
fs
daa
adc
inc
dec
fimuls
fdivs
out
stos
inc
repz
xchg
sbb
lods
push
test
adc
leave
sub
inc
clc
pop
imul
pop
adc
mov
ss
ja
iret
insl
pop
mov
mov
sub
lock
xchg
mov
dec
pop
cltd
cmp
sahf
mov
js
ret
insl
xor
mov
sub
dec
leave
mov
test
leave
sub
bound
adc
lea
push
nop
insl
cli
dec
xor
aad
cmpsl
dec
shrl
cmp
iret
jecxz
clc
ds
push
jg
cmpb
sbb
je
sub
clc
pop
or
cli
pop
lea
insl
cmp
mov
aam
iret
cs
mov
test
ficompl
and
cmp
jge
mov
push
dec
or
and
nop
loop
nop
fsubl
pop
lcall
mov
outsl
jne
jae
pop
inc
fdivs
inc
mov
adc
or
push
out
movb
mov
aam
adcb
ret
lods
cltd
adc
mov
andl
xor
push
lret
mov
cmc
cs
lds
pop
mov
push
lret
dec
out
add
je
test
sbb
aas
addr16
add
cmp
into
mov
test
inc
push
orb
in
jae
shr
xchg
mov
imulb
jo
mov
push
addr16
sbb
outsl
imul
mov
arpl
int3
insl
insl
sbb
mov
loopne
in
xchg
cmp
js
pop
push
mov
xchg
pushf
jecxz
dec
dec
inc
in
pop
insb
jno
xor
loop
sbb
inc
jg
lds
mov
xor
inc
pop
mov
cmp
loope
sbb
jge
mov
add
cs
lahf
ljmp
sarl
pushf
leave
test
push
icebp
jae
pop
cltd
ljmp
jns
iret
ljmp
fmuls
jmp
xchg
popw
in
pop
xchg
add
dec
mov
nop
push
popf
jne
inc
sbb
jl
cmpsl
push
mov
repz
push
ja
imul
or
add
lea
addr16
fwait
cmp
imul
in
pusha
mov
out
jmp
out
stos
lods
jg
add
js
dec
cmp
and
or
dec
sub
mov
in
jno
jno
mov
js
inc
fdiv
jg
mov
cmp
inc
call
call
or
pop
movsl
sbb
jp
dec
shrb
sbb
push
jne
dec
cwtl
mov
add
std
rcl
mov
mov
add
ds
sahf
enter
pop
pop
or
ljmp
jnp
xor
jb
fdivs
jb
push
fwait
sub
or
aad
movsb
dec
loope
lret
dec
nop
sub
push
sub
and
lret
inc
jle
in
lods
roll
jne
subl
cmpsb
lds
pop
stos
sub
cmp
outsl
ds
fwait
or
xor
das
push
mov
inc
pop
lret
push
icebp
jl
push
fcmovbe
dec
loopne
mov
mov
mov
popf
mov
cmp
out
inc
inc
mov
int
jo
cs
clc
xlat
adc
gs
insb
mov
sub
inc
loop
rcrb
inc
rcl
test
pop
es
sub
movsb
sbb
lea
xor
movsb
dec
fwait
xchg
test
pop
pop
pop
mov
insb
push
add
sbb
test
je
mov
cld
jmp
insb
and
sbb
adc
adc
mov
in
cmc
pop
xchg
ljmp
movsb
cs
std
ret
xor
push
movl
mov
or
sbb
inc
lret
sub
shl
pop
dec
sbb
stc
insb
mov
add
or
add
aad
fstp
or
lods
ret
and
mov
pop
in
iret
jl
jmp
xchg
outsb
mov
sbb
xor
xor
and
lret
jle
cli
dec
adc
enter
popa
ffree
stos
jmp
add
xchg
sub
pop
sub
lea
inc
add
sbb
and
jmp
jb
xor
adc
test
in
fldl
cmp
ds
pop
dec
imul
jbe
fstps
rcl
addl
fidivrl
mov
cmp
ja
xlat
add
movsl
fcmovne
rcrl
leave
movsl
adc
int
push
leave
sub
jp
sarb
popa
or
sbb
fimuls
cltd
push
imulb
addl
jmp
lods
je
adc
xor
jl
mov
push
dec
pop
add
or
cmp
cli
jne
imul
test
add
adc
pop
sub
ret
icebp
fdivr
ret
fwait
jns
mov
push
mov
pop
sbb
out
dec
and
test
xor
lret
jp
test
push
dec
jmp
adc
enter
cmpsb
ja
ja
pop
mov
lock
dec
mov
fwait
scas
push
and
iret
xchg
fcmove
mov
arpl
dec
pop
mov
sahf
inc
stc
fildl
xor
loop
ret
in
pop
push
test
lods
adc
sub
adcl
inc
pushf
imull
enter
push
mov
and
sbb
out
pop
jbe
cmp
cs
fwait
mov
pop
mov
cmp
andl
adc
insb
mov
addr16
fdivrs
push
rclb
add
insb
fisttpl
inc
dec
pop
int3
inc
pusha
lret
filds
mov
fsubl
cs
add
adc
decl
or
cltd
sbb
movsb
xlat
mov
dec
cmp
mov
mov
cmpsl
cwtl
idivl
mov
cmp
mov
loopne
shlb
mov
lahf
xor
in
imul
sub
mov
sbb
out
fisttps
pop
or
adc
push
adc
add
sub
inc
pop
addr16
ja
cmp
test
lds
mov
push
cmp
adc
mov
rclb
lcall
ret
aas
lret
rorb
dec
mov
sub
sti
mov
sbb
test
sbb
daa
mov
xlat
das
cmp
add
call
in
or
out
test
lret
xchg
xchg
xlat
js
push
xchg
cmpsl
mov
inc
popa
mov
lods
icebp
and
pop
push
pop
mov
inc
mov
adc
lahf
inc
outsb
iret
or
loopne
xchg
lock
mov
test
icebp
mov
pop
fnstenv
mov
insb
mov
lret
int
cli
scas
adc
mov
lcall
orl
add
pop
mov
fsubrs
out
mov
pop
or
into
fucom
movsb
daa
sub
clc
or
aas
xchg
inc
xor
out
outsl
push
inc
cmp
imul
push
lods
je
imul
xor
fbld
pushf
pop
lods
push
pushf
std
imul
out
pop
aas
push
les
scas
fxch
stos
inc
int3
mov
push
add
xorb
mov
xchg
pop
out
or
push
jb
adc
lret
inc
jle
jecxz
jnp
inc
jae
addr16
jo
xchg
add
repnz
mov
jnp
xor
sbb
inc
dec
ja
or
mov
clc
sahf
fadds
int3
daa
jmp
cmc
imul
aaa
bound
les
jo
fldl
push
cltd
andl
testb
and
and
mov
jg
lcall
rcrl
inc
cmc
into
add
inc
dec
jp
in
in
xor
push
inc
popf
decb
xlat
dec
jns
ss
cmc
push
dec
fsubrs
repnz
pop
stos
popl
in
ljmp
mov
or
push
imul
pop
sub
cmp
fldl
push
pushf
cmp
iret
jmp
loop
and
jbe
adc
xor
jno
inc
cld
cmpl
ret
daa
xor
je
or
fnstenv
setg
cmc
aaa
inc
jnp
stos
push
adc
jae
test
stc
leave
call
lea
and
mov
fstl
add
add
std
xchg
lret
cli
mov
stc
add
mov
lock
scas
arpl
mov
aas
xchg
adc
aad
jne
mov
in
call
lea
pushf
loop
mov
push
cltd
push
lods
test
pop
and
shl
gs
inc
lcall
xor
scas
and
adc
inc
test
mov
jl
or
clc
jmp
xchg
inc
ss
orb
xchg
scas
dec
in
sti
sub
ficompl
ds
push
stos
loopne
xchg
mov
popa
pushw
and
outsb
shrb
push
jno
out
cmp
mov
scas
add
sub
mov
dec
mov
jle
jg
mov
mov
push
inc
jbe
mov
cmpsb
and
cmpb
sub
movsl
subb
in
cmp
aas
call
popf
mov
or
repnz
add
faddl
gs
push
test
repz
jno
lea
sub
rolb
mov
arpl
stc
push
push
shrb
cmpsl
ja
aad
dec
test
lret
adc
inc
rcrb
or
xchg
call
addr16
in
ja
arpl
dec
mov
pop
sbb
scas
negl
iret
in
jae,pn
inc
outsb
inc
lods
push
jb
pushl
mov
fs
pop
add
mov
adc
in
jp
pop
cmp
pop
ret
xlat
pop
jg
mov
pop
jbe
jmp
movsl
sarl
ja
popf
cmc
shrl
sti
push
push
pop
repz
pop
cltd
push
iret
pop
js
roll
mov
inc
mov
cmp
out
mov
jge
shl
dec
outsl
push
push
idivl
andb
mov
in
out
lahf
push
push
es
xchg
aas
clc
inc
cmp
jnp
iret
aas
aam
insb
pop
cld
cmp
cltd
xchg
loop
jle
jge
ret
stos
mov
mov
cmp
rorl
sbb
push
leave
add
call
mov
lea
mov
mov
fimuls
push
out
adc
or
dec
add
adcl
gs
push
xor
add
insb
mov
pusha
loope
clc
inc
ljmp
xchg
sbb
popf
jmp
push
mov
jmp
push
cmc
dec
fcomp
or
out
sbb
test
sarl
adcl
pop
popa
mov
jmp
cmc
scas
loopne
inc
add
pop
jp
popf
mov
imul
insb
mov
jge
out
push
cmp
jno
mov
sarb
fistpll
sbb
or
sub
sbb
xor
shll
in
adc
lods
stos
lock
lret
add
loopne
cmp
push
push
add
sub
movsb
adc
mov
sbb
cmp
mov
leave
pop
in
jo
xor
out
lahf
mov
fsubrl
pop
ljmp
lods
jmp
test
push
add
jmp
int3
cwtl
xchg
ljmp
mov
pop
push
lcall
dec
mov
mov
mov
movsl
lahf
xchg
jb
xor
mov
nop
out
push
lret
repnz
hlt
push
mov
imul
in
rorl
xchg
stc
jle
sub
stc
mov
dec
mov
pop
xchg
jle
loopne
push
popa
repnz
bound
arpl
mov
cwtl
push
je
dec
push
dec
popa
push
or
cmc
fst
lret
and
sbb
loopne
sub
movsb
rorl
pop
test
ud1
stos
mov
fcmovnb
out
int
mov
pop
mov
jnp
ret
add
out
adc
sub
mov
xor
roll
xor
test
mull
ret
sbb
ret
outsb
mov
push
pop
inc
cli
movsb
adc
mov
mov
and
stc
and
ds
mov
lods
mov
pop
push
flds
bound
pop
pop
rcll
xchg
and
inc
xchg
or
or
lock
mov
xchg
decl
cmpsl
sub
push
imul
aam
lock
mov
jns
xor
fstps
pop
jbe
in
frstor
dec
icebp
es
shrl
push
fisttps
arpl
jnp
jge
inc
ljmp
add
and
ja
xor
jl
cmpsb
inc
pmullw
nop
pushf
dec
push
mov
insb
xor
mov
clc
out
sti
pop
push
movsb
jp
xorb
cmc
daa
cmpsb
pop
dec
xor
cmp
out
dec
or
lods
mov
data16
das
inc
loope
xor
cmp
cs
dec
fistpll
xor
or
inc
pop
jp
dec
jl
ret
sbb
in
std
cltd
mov
fstpt
fsubrs
dec
pop
mov
jb
cmpsl
cmpsb
cld
sub
nop
add
lea
nop
add
sahf
lods
cld
fbstp
dec
sahf
cmp
int
inc
push
popa
jle
int
inc
enter
dec
aam
jp
jmp
imul
call
mov
jp
imull
aas
xorl
mov
lahf
das
pop
cmp
mov
push
adc
mov
decl
mov
lret
mov
lahf
push
into
in
xlat
data16
test
cmp
add
fisubrs
add
pop
rclb
or
cs
scas
test
daa
testl
xor
xchg
jp
inc
fs
stc
hlt
mov
cmpsl
mov
mov
dec
push
xor
lea
fwait
xchg
adc
iret
lock
jae
out
inc
ret
push
or
or
iret
call
adc
aam
xor
enter
imul
inc
pop
adc
or
fwait
sbb
inc
pop
cmp
pop
mov
dec
sbb
test
xchg
stc
xor
std
pop
or
cmp
stc
xor
inc
lea
inc
dec
or
push
jecxz
stos
xor
cwtl
clc
xor
arpl
inc
rcr
and
mov
cmpsl
jae
or
fdivs
push
sub
mov
sub
aaa
sti
sub
mov
sbb
sahf
scas
mov
in
mov
fdivrp
xchg
sbb
bound
cmp
ret
and
xchg
pop
xor
cmp
inc
inc
popa
push
mov
addr16
ficoms
push
pop
xchg
cmp
decl
push
or
roll
mov
xchg
and
out
imul
out
push
stos
adc
movsl
mov
xchg
mov
mov
les
cmp
push
sub
inc
enter
dec
push
fildl
mov
aam
in
jp
outsl
les
and
ljmp
dec
sub
call
pop
out
jne
mov
out
sbb
xchg
cmp
pop
xchg
sbb
ja,pn
jl
mov
js
movzwl
and
inc
jmp
xchg
data16
pop
dec
dec
push
or
jmp
and
in
popa
mov
push
jecxz
inc
mov
aaa
aad
push
mov
adc
adc
dec
dec
cli
and
and
imul
push
sbb
jle
lret
mov
dec
fs
jbe
mov
popa
les
fs
adc
scas
fsubrl
fiadds
test
mov
sbb
push
inc
fildll
lea
mov
push
cwtl
push
xor
cmp
arpl
shll
or
rolb
adc
cmpsb
mull
cmp
xor
add
xchg
sub
js
movsb
out
pop
mov
aaa
loopew
or
shlb
or
insb
cmp
adc
aaa
sbb
sbb
testl
push
push
and
fists
sub
jne
push
jle
jns
lret
sub
pusha
in
and
sbb
fmuls
loope
cs
and
pop
mov
into
fcomi
pop
or
loopne
frstor
outsl
pop
add
clc
cmp
aas
icebp
and
dec
xchg
jl
jmp
in
push
in
es
inc
and
cmpsl
enter
mov
sti
and
aas
andl
test
mov
cld
das
pusha
mov
js
ss
xchg
daa
orl
xchg
test
je
test
mov
adc
notl
jle
and
fwait
loopne
pop
loope
loop
pop
and
hlt
test
and
ja
loop
iret
sbb
rcll
inc
clc
loopne
nop
mov
add
fsubrs
push
or
mov
data16
sbbl
push
push
dec
cmp
xchg
xchg
sarb
test
cmp
push
mov
fisubrl
cmp
test
cmp
adc
adc
add
out
push
loop
aaa
or
mov
fistl
xchg
inc
cmp
jo
mov
inc
mulb
loope
fisubs
cmp
mov
out
mov
pushf
popa
ss
rorb
popl
fisubrs
cmp
stc
sbb
xor
stos
ficoml
out
sahf
ja
sub
cs
outsl
cmp
sbb
sbb
xor
sbb
or
mov
inc
jne
pop
push
adc
xor
imul
inc
jl
loope
xor
divl
cmp
push
xchg
loop
aaa
dec
mov
ret
mov
push
mov
mov
inc
mov
bound
mov
mov
mov
incl
fnstsw
scas
jmp
jnp
xchg
cmp
roll
clc
jmp
jmp
inc
jnp
adc
push
lods
shrl
aaa
jmp
sbbb
outsl
push
xor
lds
and
rolb
lods
jg
jp
int
xor
fptan
les
cmc
repnz
das
sbb
or
addr16
outsl
dec
jno
push
imul
xchg
cmpsb
mov
stos
sbb
push
and
sub
pushf
dec
push
mov
inc
mov
adc
ds
test
dec
add
add
xor
adc
push
sub
sbb
and
xor
inc
or
cmpl
mov
pop
sub
jnp
or
call
pushf
pop
imul
mov
xchg
icebp
jne
ficoml
fisttpl
loopne,pn
clc
sbb
shrd
js
and
adc
or
push
and
je
or
lahf
ss
xorl
mov
ja
aas
mov
xchg
repz
push
mov
mov
shlb
jo
dec
xor
stos
movsl
jl
jge
mov
xor
sbbl
add
ljmp
movsb
ret
sar
adc
xor
shll
jb
pop
jns
pop
fwait
shll
jne
leave
inc
lret
mov
adc
rorl
rcrl
dec
pop
std
icebp
push
lods
jmp
aad
mov
gs
pop
fistps
sahf
sub
xor
clc
dec
push
mov
push
pushf
push
loop
imul
jecxz
lds
pop
clc
insb
rolb
shrl
adc
fdivs
and
pop
dec
add
shll
std
mov
adc
aam
ror
jp
and
sub
mov
push
test
lret
and
mov
aas
push
lods
adc
push
xchg
mov
fmuls
xchg
rcr
push
or
inc
jp
add
ds
mov
jmp
cltd
fadd
pop
in
lds
es
mov
addr16
jg
rcrb
cld
dec
mov
mov
out
mov
jo
scas
mov
jnp
sub
lahf
xchg
and
iret
dec
lcall
xchg
fwait
push
sbb
clc
add
mov
daa
outsb
int3
sub
pop
aas
nop
insb
adc
jg
test
loopne
mov
into
add
inc
shrb
mov
push
mov
inc
sub
cmpsl
sbb
mov
xchg
push
mov
stc
push
adc
jae
cs
and
jp
ret
sar
lcall
or
aaa
std
fsts
sub
sbb
in
je
xchg
cmp
and
dec
jge
push
iret
ds
and
cmp
mov
mov
fstpl
cld
xor
out
pop
mov
or
mov
aam
mov
xchg
mov
or
mov
jne
mov
fwait
lock
arpl
jp
xor
pop
dec
dec
aas
out
jbe
fisubrs
or
repnz
loopne
push
push
jns
cmpsl
dec
int
out
push
in
cmp
inc
loop
cmp
sti
dec
cmp
add
sarl
push
repz
pop
leave
xchg
gs
and
out
paddusb
add
cmp
stos
and
push
push
xchg
jecxz
dec
jp
data16
inc
pop
jg
cld
and
pop
fs
idivl
jo
into
adc
mov
sbb
dec
add
movb
das
xchg
stos
in
mov
xchg
xchg
int3
pop
shrl
rcl
xchg
gs
mov
shll
dec
adc
popf
call
fidivrs
ss
mov
push
dec
test
jle
inc
pop
xchg
and
data16
loope
call
pop
shl
mov
ja
sahf
xor
inc
lock
adc
fistpl
cltd
imul
mov
movsb
lds
jb
movsb
adcb
outsl
repz
push
push
jb
cwtl
adc
nop
lods
fidivl
dec
addr16
icebp
fimull
or
push
cmpl
mov
and
test
push
sub
lret
dec
negl
push
push
jg
xor
fldenv
inc
lock
mov
push
push
mov
pusha
hlt
loop
div
mov
xchg
lret
cmpsl
ret
xchg
xchg
and
in
dec
inc
mov
push
mov
and
mov
loopne
sub
adc
mov
popa
lahf
orl
dec
sub
fnstenv
aad
mov
pushf
cwtl
jne
pushl
cmp
fsubrs
dec
xchg
cmp
out
movsl
test
imul
mov
sbb
movsb
adc
fucomip
subb
jo
mov
cld
inc
arpl
ds
cmp
dec
pusha
push
xor
add
xchg
arpl
xchg
inc
mov
jle
push
pop
out
jl
inc
scas
pop
jo
jno
xchg
arpl
leave
mov
mov
ss
lods
push
pop
adc
std
cli
movsl
jge
lret
mov
out
loopne
out
mov
cwtl
add
loopne
clc
nop
loope
cmc
shll
mov
add
ret
or
in
xchg
es
lea
or
std
mov
dec
add
ret
inc
adc
or
sbb
pop
stc
cmpsb
or
movsb
sub
imul
inc
lods
jno
xor
jb
jno
lods
mov
push
sbb
ja
fisubrl
inc
icebp
flds
xor
and
sub
lcall
push
sbb
out
repz
adc
dec
cmpl
xchg
sub
fistl
pop
mov
pop
adc
lahf
inc
mov
popf
xor
enter
lds
mov
cltd
std
test
das
xchg
push
gs
pop
xchg
gs
mov
and
inc
and
lods
fcoml
js
adc
ljmp
mov
lcall
xor
leave
movb
and
xor
das
or
sbb
jg
adc
repnz
fsubrs
jnp
mov
lods
inc
inc
pop
sub
mov
jbe
mov
xlat
mov
mov
aam
xor
cmp
jns
loope
sub
xor
cmp
ljmp
rorl
das
pop
insb
xchg
imul
cltd
loope
faddl
mov
inc
ret
cmp
pop
pushf
inc
roll
mov
iret
jmp
dec
arpl
mov
call
dec
lods
pop
adc
mov
xchg
xlat
clc
ss
or
jg
bound
ret
inc
push
in
les
cmp
aad
aam
adc
movntq
div
cmp
out
dec
rcrb
push
cmp
call
xchg
out
adc
sbb
fmul
jb
cmpsb
jl
cli
sbb
sbb
push
adc
jns
sub
sub
clc
test
les
xor
add
sbb
jno
arpl
in
xor
stos
pop
out
lea
lret
rolb
mov
sbb
lods
jnp
out
push
push
jmp
psllw
imul
outsl
outsl
xchg
scas
adcb
jb
push
decb
shrb
mov
jne
call
push
push
xchg
or
or
clc
testb
xchg
mov
negb
sub
xchg
stos
or
bound
subb
sbb
pop
or
rcrb
test
mov
add
push
mov
adc
adc
and
mov
mov
cwtl
mov
faddl
mov
mov
mov
inc
xor
aam
jno
outsl
push
pushf
add
movsl
testb
jg
adc
lock
mov
imul
lea
pop
and
xchg
pop
dec
xlat
adc
iretw
lods
lods
add
adc
sbb
mov
in
adc
cwtl
xor
in
sbb
clc
aam
aaa
dec
pop
jb
sub
sahf
or
dec
add
xchg
xchg
push
je
les
jo
mov
adc
fnstsw
aas
iret
jg
push
push
mov
in
mov
push
dec
hlt
nop
call
roll
aam
mov
lret
fnstenv
lods
addr16
dec
das
pop
js
pusha
xor
lret
mov
sbb
stos
xchg
clc
bnd
stc
mov
sub
hlt
mov
push
testl
fisubrl
sbb
lcall
sbb
cwtl
inc
cltd
jecxz
mov
push
sub
mov
lahf
imul
inc
idiv
dec
inc
aaa
inc
bound
xchg
cmp
mov
sbb
sar
lcall
iret
divb
negb
outsb
sbb
or
mov
cmp
int3
insb
pop
and
cmp
out
bound
cmpsl
sbb
adc
js
adc
dec
imul
sbb
xor
push
fwait
scas
enter
xchg
ja
jmp
inc
imul
fimuls
jne
arpl
popa
sub
xchg
add
sbb
test
lret
outsb
pop
add
cwtl
mov
and
cmpsb
xor
imul
or
lock
push
push
cmp
shlb
ds
inc
push
push
xlat
cmpl
cmc
xchg
jnp
push
sarl
add
mov
cmpsl
push
xlat
push
sub
xchg
sub
ret
aam
push
jbe
cld
mov
sub
and
jo
stos
sbb
jecxz
pop
add
cli
imul
lret
and
scas
std
fldt
jmp
sub
mov
push
and
pop
inc
popa
or
jo
aam
cli
lcall
fcmovu
jl
lcall
adc
imul
xor
mov
and
lods
push
pop
jae
por
ret
ss
hlt
pop
cmpsb
and
nop
or
addr16
push
loop
adc
movsl
push
das
div
aam
inc
cwtl
cmp
mov
addr16
lahf
out
pop
icebp
fisubrs
add
mov
sbb
out
mov
push
mov
sti
sub
push
adc
cmp
ret
jmp
fidivl
rcrl
fadds
mov
sti
jnp
mov
push
mov
xchg
sbb
cmp
jecxz
pop
sbbb
shrb
mov
pop
mov
cmc
mov
hlt
cmpsl
pop
nop
dec
repz
pop
loope
adc
or
xor
pop
leave
inc
sub
push
mov
xchg
lret
aas
jno
inc
enter
ljmp
into
push
mov
xor
add
add
into
test
jp
push
sbb
imulb
lret
or
shlb
aas
nop
aad
pop
jge
or
jae
cmp
lahf
add
sbb
stc
dec
pop
push
sub
loope
outsb
push
pop
iret
jg
push
int
and
add
mov
xor
jg
xor
test
pop
icebp
test
into
sub
das
push
sbb
cmp
test
lods
hlt
add
cmp
jecxz
push
in
scas
out
xchg
pushf
or
cli
adc
push
inc
mov
insl
push
fsubrl
mov
pushf
lcall
mov
fsubl
jp
sahf
inc
mov
loop
into
jne
das
jno
or
or
daa
ficompl
shrl
xor
enter
faddl
xorb
sahf
scas
in
pusha
push
jmp
jb
test
arpl
pop
mov
dec
mov
gs
xchg
cmp
mov
inc
imul
icebp
stos
nop
shll
mov
dec
cmpsl
jp
jle,pn
fisubl
mov
fcomp
xlat
xchg
lret
adc
sub
adc
repnz
push
inc
aaa
jb
inc
mov
nop
jno
stc
in
and
lcall
push
mov
jmp
imul
in
outsl
inc
cwtl
push
sbb
xchg
rcrb
push
adc
inc
push
xchg
sub
mov
mov
mov
mov
lret
shll
adc
xor
mov
add
int
push
adc
popf
jo
mov
jo
test
and
pop
inc
decl
push
into
xchg
jmp
repz
inc
jle
xchg
add
hlt
or
lahf
je
mov
xchg
ja
and
pop
mov
adc
cmp
rcrb
test
cmp
sar
push
mov
xor
jo
enter
and
dec
mov
std
insb
adc
pusha
fisubrl
pop
in
xor
xlat
inc
test
pop
out
pop
xchg
sbb
mov
jns
and
movsl
jne
dec
adc
inc
xchg
lcall
mov
push
jmpw
mov
adc
adc
xor
popa
sbb
ficoms
adc
inc
add
xor
bound
mov
fxch
and
jne
jle
call
push
ja
xor
xchg
repz
cmp
scas
cmpsb
and
movsb
aam
fwait
out
mov
negb
xorb
pop
lock
cmp
jno
shl
orb
int
ret
repnz
cmp
mov
hlt
or
loopne
ja
sahf
loop
int
xchg
out
adc
leave
insb
scas
loope
out
dec
xor
dec
and
cmp
mov
sub
inc
inc
dec
mov
push
jo
cmpsl
decl
xchg
and
pop
stos
cli
in
mov
adc
cmp
stc
mov
xorb
pop
mov
jns
push
out
fildll
or
aad
loopne
mov
lods
or
arpl
je
push
push
pop
fnstsw
dec
cmp
mov
mov
fldcw
dec
nop
scas
xor
addl
cmp
push
out
js
rcl
adc
adc
in
xchg
cld
jne
ss
mov
mov
pop
fwait
shr
sbb
icebp
jb
enter
addr16
fildl
mov
mov
pop
mov
fnstsw
ret
xchg
lret
xchg
daa
out
jmp
imul
xchg
in
pop
fmul
jmp
pop
loop
and
mov
scas
sub
es
add
add
push
jbe
nop
out
adc
popa
mov
cli
std
sbb
lea
inc
clc
jge
subl
sub
jle
sbb
xchg
outsl
mov
jo
jne
push
or
outsl
fldl
mov
jmp
and
xchg
psubsb
add
loopne
fsts
out
outsl
xchg
mov
dec
aad
sti
sub
pusha
xor
repnz
push
dec
les
cmp
int3
arpl
test
dec
mov
leave
push
push
mov
jne
mov
add
mov
xchg
cltd
pusha
mov
test
ret
imul
add
adc
into
ljmp
xchg
jo
and
mov
enter
cmp
sub
daa
or
xchg
out
xchg
in
inc
adc
outsb
fwait
or
xchg
xchg
mov
push
mov
pushf
or
pop
sbb
outsl
jno
fidivs
test
es
push
or
cld
outsb
stos
mov
fimuls
sbb
aad
jg
outsb
mov
pop
mov
test
mov
adc
lahf
or
mov
dec
jl
repz
cmp
add
pop
xor
adc
mov
adc
bound
call
sub
jae
inc
popl
pop
inc
js
sub
sbb
or
ds
ret
mov
push
clc
cmpsl
mov
icebp
mov
sbb
lea
cmp
clc
movsb
leave
and
insb
xorl
movb
sbb
mov
lods
fs
xlat
rorl
jb
les
cmp
add
pop
fisttps
mov
and
ret
out
and
adc
movsb
roll
push
jb
movsb
sbb
xor
xchg
pop
sbb
pop
repnz
mov
jle
inc
mul
add
jb
or
fcomps
jno
imul
adc
loop
pop
mov
sbb
add
xchg
insb
shll
jno
pusha
inc
insl
mov
mov
xor
mov
fmull
test
daa
push
ja
cwtl
loope
jmp
cmc
aaa
sub
js
sbb
dec
das
test
not
arpl
mov
addb
push
std
cs
add
pop
xor
imul
fisttpll
inc
pop
int3
outsb
and
cmp
ss
shll
cmovb
mov
push
rcrb
int3
sbb
shrb
es
fsubr
add
add
iret
jno
jo
mov
sbb
sbb
cmpb
pop
testl
sub
xlat
adc
mov
aas
add
loope
pusha
test
jg
mov
cmp
dec
leave
adc
cmp
sbb
lcall
dec
pop
aam
jae
push
scas
push
mov
addb
enter
mull
cld
lods
shll
mov
jne
test
push
mov
popf
mov
inc
inc
in
insl
int3
and
mov
pop
cmpb
aad
cwtl
mov
pop
aad
into
stos
roll
xchg
add
jmp
movsl
jnp
pop
hlt
fistpl
daa
mov
imul
mov
or
push
add
dec
xor
push
inc
jge
ds
xchg
dec
cli
aam
push
push
mov
insb
fmull
or
mov
fdiv
sub
push
stos
in
inc
sub
sbb
ret
sub
adcb
fidivrs
out
mov
xchg
and
cli
leave
cmp
call
push
pop
xor
ljmp
mov
pop
lods
mov
shlb
sub
inc
shr
inc
test
inc
cmp
sub
scas
xchg
cmpl
mov
jp
jl
sahf
adc
xchg
mov
mov
out
stc
push
xchg
pop
lods
inc
add
inc
xchg
push
imul
fildl
push
jnp
xchg
dec
cmp
mov
ljmp
dec
jecxz
outsb
mov
movsl
fcmovb
ja
lret
les
addr16
or
adc
rcl
mov
pop
movsb
xor
or
pop
push
mov
stos
lock
and
rcrl
repnz
jne
adc
mov
call
cmp
push
scas
orb
sub
insb
pop
into
and
sbb
dec
push
orl
lds
push
arpl
ja
add
fnsave
cmc
xchg
push
lods
cwtl
mov
insb
je
in
addr16
outsl
pop
xor
dec
repnz
mov
loope
xchg
loop
sub
pusha
rcl
outsl
fbstp
fidivrl
add
in
xor
test
jge
sti
stc
iret
xchg
dec
aaa
add
icebp
sti
and
mov
shlb
pop
push
shlb
std
jne
sub
jmp
subl
dec
push
pop
dec
je
aaa
sub
lds
cmp
push
add
cltd
nop
xchg
or
jmp
aad
dec
shl
sahf
into
and
xlat
adc
push
push
mov
leave
add
mov
xchg
inc
pop
and
mov
cmp
outsb
xchg
mov
cmp
jns
pusha
pop
aaa
fiaddl
and
mov
gs
or
mov
and
negb
and
test
ja
popf
repz
lret
cmpsb
sub
cmpsl
mov
lods
pop
jge
cmp
jl
pusha
xchg
outsb
fldl
std
adc
cmc
dec
adc
mov
sbb
repz
leave
movsl
jge
xor
ret
out
push
fs
xor
lods
mov
enter
or
bsf
popa
mov
in
push
push
mov
insl
sub
lea
xchg
dec
mov
out
repz
popa
xrelease
jbe
ret
imull
push
lcall
out
mov
call
and
repz
cwtl
mov
iret
mov
and
sub
dec
mov
pop
and
xor
mov
sbb
imul
mov
and
xor
lcall
sub
push
push
ds
cmpsl
hlt
xor
fsubs
mov
xchg
test
jmp
in
adc
xchg
cmp
inc
mov
xchg
call
dec
sbb
jmp
fisubrs
repz
pop
lahf
mov
mov
mov
into
adc
mov
inc
jmp
stos
out
scas
inc
movsb
xor
add
pushf
sbb
movsl
inc
lods
insl
push
pop
inc
add
jno
das
xor
cltd
xor
es
cmp
xchg
jnp
fisubs
mov
xchg
mov
mov
cmp
adc
add
fsts
and
sbb
push
into
leave
push
in
les
cmpsb
fs
pop
pushf
inc
or
dec
xchg
sbb
dec
xchg
jl
out
mov
inc
xchg
add
gs
sub
pop
repnz
inc
sysexit
push
lock
push
xchg
adc
adc
ds
test
pop
push
mov
sub
movsb
cmp
iret
pop
hlt
cli
inc
adc
dec
cmp
xchg
inc
popf
inc
mov
add
jp
cld
test
cmp
mov
fcmovnbe
in
sub
cmp
enter
mov
cmp
lock
and
orl
sub
or
mov
aad
pop
popa
aas
adc
pop
push
mov
std
push
xchg
push
xchg
mov
and
bnd
fwait
xor
mov
pop
dec
aad
in
jg
mov
cmc
scas
inc
adc
mov
jb
data16
dec
ss
aam
das
fwait
mov
sarb
sbbb
pop
cmp
adc
inc
dec
aaa
js
lcall
and
je
ret
inc
add
cmp
and
xor
inc
roll
sbb
or
and
lcall
popf
lock
xor
fsub
cmp
ja
or
push
repnz
arpl
push
jbe
fisubrl
vunpcklpd
mov
loope
push
in
mov
sub
push
loope
adc
into
jno
mov
stos
movsl
inc
shlb
in
dec
add
call
imul
movsb
push
das
roll
popf
fnstenv
dec
out
inc
nop
test
jbe
popa
lods
idivl
divl
and
inc
imul
insl
scas
fcoms
movl
aaa
test
stc
daa
or
in
jb
in
sahf
cmp
enter
fst
aas
xor
dec
dec
mov
hlt
push
and
out
mov
outsb
arpl
lea
inc
dec
ror
hlt
cmpb
ja
jmp
add
xor
pop
cld
je
iret
aam
roll
mov
cmp
fdivr
repnz
xor
jo
cmc
aaa
fwait
pusha
or
iret
jp
push
mov
cmc
inc
andl
pop
jbe
into
or
imul
xor
mov
and
loopne
pop
xor
dec
sub
jmp
fincstp
imul
les
lcall
push
lds
jmp
adc
inc
imul
dec
jae
ljmp
and
fisttpl
inc
ds
cli
inc
fisubrs
mov
into
loop
bnd
jns
and
clc
test
js
aam
out
sbb
test
sub
mov
lds
xor
mov
mov
cmp
out
push
cs
pop
push
fsubp
xchg
mov
pushf
push
cmp
in
xchg
cmp
xchg
fucomi
inc
fiadds
mov
add
mov
mov
in
scas
cmpl
loope
pusha
popf
addb
mov
adcl
das
repz
adc
scas
cmp
pop
imul
mov
addl
push
pusha
adc
pop
and
inc
add
cmp
subl
cmp
cwtl
pop
xchg
mov
lods
in
int
xor
mov
stc
cmp
fisttps
xchg
adc
not
add
pop
daa
aas
sti
xor
out
bndstx
in
xor
pop
popf
sarl
icebp
mov
cmp
bound
icebp
push
fs
adc
push
mov
dec
mov
leave
mov
stos
mov
insl
xchg
sub
adc
cmp
gs
push
cs
je
test
in
dec
or
pusha
mov
or
sub
push
test
pop
sarl
sbb
mov
cmp
add
push
cmp
inc
or
add
cmc
sub
push
pushf
call
imul
outsl
inc
ficoms
mov
test
fs
out
add
pop
imul
mov
in
nop
pop
sbb
js
xchg
outsb
lea
fs
push
inc
mov
les
ds
jne
pop
push
std
bound
outsb
in
jle
mov
rdmsr
jnp
dec
fbstp
movsb
sub
adc
pop
xor
push
mov
add
mov
stos
lahf
sahf
inc
pusha
loop
and
cltd
outsl
fildll
adc
clc
std
mov
sahf
and
fmulp
movsl
jbe
fwait
jmp
fdivrp
mov
call
lods
pop
bound
adc
xorb
lahf
dec
lock
cmp
xchg
fdivrs
inc
iret
cli
jecxz
xor
les
arpl
cmp
cmp
fiaddl
xor
inc
gs
loop
shlb
fstl
hlt
imul
mov
ss
inc
mov
repz
push
in
cmp
dec
ljmp
ss
mov
mov
jns
lods
mov
adc
dec
xor
sti
inc
pop
hlt
jbe
test
mov
dec
add
std
add
xor
inc
pusha
push
xor
mov
pop
popf
mov
add
test
sub
cs
mov
push
jo
shlb
das
xor
dec
call
cmp
fnsave
repz
lcall
mov
rolb
push
jnp
ljmp
sbb
mov
in
and
adc
sbb
pop
xorl
enter
outsb
lcall
xlat
adc
push
mov
jbe
cs
stc
iret
sbb
inc
incl
mov
xchg
mov
push
repnz
mov
inc
and
popa
inc
cwtl
adc
dec
fs
loopne
daa
clc
lret
mov
out
or
push
xor
pop
dec
cmp
cmp
imul
sbbb
mov
out
clc
or
inc
xchg
loop
push
out
sahf
aaa
push
push
adc
inc
sub
add
jne
inc
scas
or
mov
mov
xor
pcmpeqb
sub
pop
lahf
push
jb
jns
push
sub
mov
mov
ds
inc
stos
popf
or
int3
outsw
repz
pushl
mov
movsb
in
jb
fwait
popa
jp
vpunpcklbw
pop
adc
imul
mov
ljmp
into
movsb
xchg
jecxz
push
popa
mov
dec
in
test
inc
push
adc
sub
xchg
dec
mov
add
lea
shll
pop
jge
cld
rolb
sub
negl
ljmp
fwait
outsl
cmp
mov
xchg
inc
inc
call
out
adc
lahf
or
mov
and
icebp
add
xchg
xchg
in
pop
xor
fiaddl
rcrl
mov
or
jl
aad
mov
push
sub
psllq
movsb
lahf
xor
aam
xorb
ss
mov
sub
sbb
dec
int3
lods
mov
cmc
xchg
cmpsl
push
aad
mov
or
xchg
xchg
or
aas
and
andb
jge
mov
fnstenv
clc
and
cmp
mov
sub
arpl
daa
bound
in
sbb
in
lock
jle
jmp
cmp
icebp
xor
push
test
aam
pop
and
into
and
lods
clc
rorl
dec
jo
movsb
push
cmp
and
std
int
ret
mov
mov
cltd
loop
sub
and
and
push
mov
push
mov
dec
pop
dec
xchg
adcb
sub
inc
cld
sbb
cli
mov
sbb
cmpsb
xchg
mov
lods
push
add
adc
adc
mov
add
push
adc
xor
sbb
push
popl
fwait
cmc
add
ljmp
fisubl
mov
ja
dec
or
jge
inc
pop
in
inc
push
xor
lret
stos
mov
fldl
mov
ret
jmp
lea
and
test
fildl
dec
xor
imul
mov
dec
int3
jae
mulb
iret
dec
movsl
sub
sbb
push
jns
mov
mov
pop
mov
jno
fistl
sub
dec
ljmp
nop
ss
pushf
and
adc
sarb
mov
xor
sbb
cmc
cmp
xchg
out
scas
movsl
cld
mov
add
cmp
push
ret
loopne
daa
loop
add
jl
stc
adc
mov
sub
sub
dec
jnp
shll
xchg
adcb
out
push
addr16
add
push
mov
fld
loopne
stos
out
pop
dec
daa
shll
aad
jecxz
cld
xchg
repnz
xchg
sbbl
vphaddbw
lahf
mov
xchg
xor
and
xchg
rolb
mov
sahf
sbb
inc
in
mov
fsubs
and
or
cmp
stos
inc
inc
jg
push
ret
jbe
test
dec
mov
test
cmpsl
fdivrl
jmp
jb
je
subl
jo
mov
mov
push
push
notl
test
inc
jp
or
cmp
cmp
cmp
push
repnz
cli
insl
loope
movsb
cld
pop
out
cmp
jae
les
adc
dec
jno
mov
int
test
fidivrs
jo
ss
mov
fnstsw
push
lds
xlat
dec
jns,pn
push
movsb
mov
rorb
fbstp
push
rorl
xlat
fdivl
dec
testl
lods
dec
lret
xor
sbb
popf
outsb
rolb
rorb
shll
pop
enter
push
sub
push
mov
rcll
cmp
js
mov
pop
sbb
insl
push
gs
push
ss
sbb
stos
dec
outsb
mov
cmp
std
mov
dec
mov
inc
jae
scas
ja
lahf
es
adc
sub
fwait
push
aaa
aas
stc
je
out
repnz
or
jle
lcall
fsubs
jo
push
pop
cwtl
mov
mov
pop
loope
ja
iret
adc
pushf
sub
xor
or
out
dec
ja
mov
lcall
or
ror
pop
sbb
push
cmp
test
sub
jle
pop
jg
jbe
sub
ret
cmp
out
push
insb
push
fbstp
jae
jp
sbb
aaa
xor
push
jle
pop
pop
and
test
xchg
adc
les
xchg
int
mov
jbe
lds
test
outsl
jl
scas
add
arpl
test
popf
jnp
ja
mov
insb
mov
adc
xchg
add
bswap
or
call
mov
push
dec
arpl
aam
mov
xor
lods
fdiv
jmp
imul
movsb
push
or
dec
push
mov
iret
mov
sbb
popf
shll
bound
js
push
pop
mov
mov
mov
pop
cmp
jg
xor
test
cli
fwait
push
sarb
or
pop
int3
test
push
and
sbb
pop
xor
es
mov
outsb
hlt
mov
in
mov
mov
call
add
xchg
xorb
xor
imul
and
mov
cwtl
and
mov
lahf
push
jno
int3
ret
out
fnstenv
and
dec
sbb
leave
scas
mov
mov
hlt
push
je
sub
stc
int3
pop
imul
insb
cmp
sbb
jl
add
je
cwtl
je
pop
mov
pop
imul
ficoml
sub
ficomps
loopne
fists
in
ror
mov
loope
pop
xor
repnz
xor
push
dec
shlb
cli
enter
rol
xchg
pusha
add
inc
lock
insb
cli
cmp
push
push
lock
or
jae
xchg
dec
dec
jmp
and
add
repz
rep
adc
mov
and
push
inc
push
shll
xlat
xor
dec
aaa
adc
cmp
pop
cwtl
add
imul
orb
mov
and
inc
push
mov
sarb
xor
mov
pop
and
xchg
idivl
sub
and
dec
nop
mov
adcl
push
popa
jmp
adc
ret
xchg
ljmp
dec
cltd
mov
add
or
cmc
idiv
sbbb
out
xor
aam
mov
dec
icebp
popa
jnp
sbb
xor
sbbb
sahf
ljmp
lret
inc
test
push
fcomp
imull
mov
xor
leave
fdivrp
cmpl
adc
aad
and
and
movsb
mov
sub
mov
cli
push
cld
push
add
ficoml
cmpsl
decb
pop
mov
inc
sub
push
pop
add
pusha
adc
out
push
cld
and
lahf
jecxz
daa
test
adc
iret
pop
dec
mov
stc
shrb
adc
inc
sub
pop
clc
out
call
aas
inc
jno
xchg
inc
cmp
in
es
pop
iret
pushf
loopne
mov
aad
jmp
fidivrl
inc
push
mov
arpl
or
popa
ret
add
sub
test
imul
icebp
fcomps
sub
dec
xchg
es
cwtl
rorl
je
jl
inc
loop
mov
shll
push
sbb
pusha
inc
test
icebp
pusha
clc
xchg
lods
dec
call
sti
testl
add
dec
popa
test
push
cmpsl
loop
shlb
sub
in
sarl
out
mov
push
cmc
sbbl
loopne
test
sub
ror
mov
pop
pop
fsubs
je
movsb
lret
in
loope
sahf
push
mov
jne
addr16
push
fimuls
sbb
cld
data16
mov
push
adcl
ficoms
dec
adc
and
push
mov
in
jge
inc
mov
xchg
sarb
jo
mov
movsl
sahf
pop
sbb
jg
mov
mov
and
bound
jmp
leave
arpl
sbb
repnz
or
and
push
out
fucomp
sbb
leave
push
out
or
xor
adc
mov
addr16
mov
sub
data16
std
mov
xor
subb
xchg
shlb
sub
mov
lock
repz
das
les
add
addr16
sbb
scas
jnp
cmp
cmp
add
mov
lcall
dec
inc
out
std
cld
adc
ret
pop
rcll
cmp
mov
mov
sub
das
add
xor
push
jge
xchg
push
sbb
cltd
addr16
or
pop
clc
loop
or
in
sti
jecxz
inc
dec
sub
or
dec
dec
imul
inc
mov
cld
mov
scas
bound
mov
repz
pop
aaa
jnp
push
aaa
imul
repz
mov
dec
loop
xchg
loop
ja
ss
mov
sub
mov
insb
mov
mull
push
xchg
imul
outsb
cmpsl
lahf
popa
dec
rorb
adc
xchg
dec
fdivrs
fisttpl
test
outsw
imul
xchg
shrb
lea
cmc
repnz
sahf
je
push
out
mov
leave
outsl
fidivs
mov
lahf
inc
pushf
cmpsb
test
sub
sbbb
js
arpl
mov
test
aad
std
je
jl
repnz
test
fisubs
scas
fstps
sbb
xchg
cmp
xchg
test
dec
adc
sbb
or
xlat
cli
cli
mov
lret
mov
repz
cs
sbb
scas
inc
loopne
imul
inc
int3
or
jg
clc
pop
rcrb
test
pop
es
sbb
mov
inc
int3
pop
mov
movsb
xor
popf
out
loopne
jle
imul
je
inc
xor
sbb
movsb
movsb
jecxz
frstor
sbb
insl
fists
iret
cmpsb
out
cmp
cmp
xorl
dec
push
cmp
outsl
nop
push
cld
hlt
enter
lods
add
sbb
mov
aas
xchg
das
pop
lret
stos
inc
ljmp
jle
not
stos
je
cmp
jecxz
pop
sub
or
scas
out
lea
movsb
xchg
push
pop
addr16
mov
negb
movsl
adc
push
push
dec
add
enter
mov
jmp
je
popf
iret
ficoml
push
pop
ja
out
and
lock
push
fadds
pop
jno
in
call
imul
into
dec
and
jns
loope
test
int
rorl
pop
lods
loop
xor
loop
dec
fidivl
push
in
outsb
adc
daa
pop
mov
cwtl
imul
cmpsl
sub
and
xchg
insb
mov
push
pop
jno
jl
loopne
xor
sbb
lock
lahf
push
stos
jb
push
scas
jl
ljmp
xlat
push
xor
or
sti
out
mov
out
jo
xor
add
in
xor
or
js
push
scas
out
adc
and
xchg
pusha
int
sub
aaa
std
scas
insb
loopne
in
pusha
js
addl
sbb
call
jo
inc
jge
fwait
mov
lods
mov
jecxz
and
je
mov
xor
sbbl
les
inc
test
fdivl
enter
pop
mov
pop
call
aas
add
stc
add
movsl
pop
test
push
jl
fs
sbb
cmp
xchg
adcb
outsl
xchg
and
dec
lea
nop
test
add
notl
cmp
outsb
std
scas
xor
imull
adc
ret
push
sub
jmp
and
in
mov
ljmp
mov
les
xchg
or
cli
andb
repz
xchg
xor
push
hlt
shl
xchg
lods
lea
xor
in
inc
xlat
lock
sbb
scas
pusha
out
push
shrb
add
push
js
cmp
loopne
insl
sbb
hlt
daa
paddw
push
adc
or
decl
dec
outsb
xchg
push
ss
xchg
lds
mov
push
movsl
mov
movsb
sbb
cmp
scas
mov
pop
out
mov
jp
insl
inc
imul
cld
mov
clc
cmpsb
xor
mov
arpl
rcrl
sbbl
push
sbb
push
cmp
clc
lcall
add
pusha
adc
fldcw
sbb
movl
movq
iret
mov
andl
into
outsb
dec
cltd
xor
dec
cmp
addr16
push
sbb
adc
xor
add
inc
push
or
mov
outsl
aam
jno
mul
cmp
cld
ss
fstps
jae
xorl
test
xlat
out
dec
cmpsl
jae
xlat
leave
fwait
push
jmp
and
sub
xlat
imul
inc
cmc
ljmp
fcomip
adc
cmp
push
iret
add
subb
movsl
sbbb
daa
xchg
mov
mov
mov
jecxz
dec
xchg
in
lret
jnp
sub
outsl
sahf
aam
pushl
fs
add
mov
mov
or
lahf
xchg
cmp
pop
xor
mov
or
adc
std
mov
popa
push
cwtl
pusha
add
les
stos
inc
pop
cmp
rorl
out
jmp
add
xchg
mov
cli
insl
or
push
and
sub
add
dec
leave
xor
jo
fildll
mov
xchg
dec
mov
imull
out
imul
cmp
xchg
outsl
sbbb
inc
mov
lret
sti
mov
in
lahf
aam
scas
sub
pushf
push
mov
sti
mov
sbb
dec
das
adc
pushf
sbb
imulb
mov
pop
cli
and
popa
push
push
mov
lds
mov
mov
gs
das
mov
dec
and
push
xlat
les
test
jecxz
dec
adc
pop
daa
into
and
int
loope
mov
push
movsb
jns
pop
lods
cs
push
pop
pop
jp
lcall
pop
jno
sub
mov
and
push
jne
dec
inc
mov
cmp
stc
pushf
dec
xchg
sarb
or
ja
mov
adc
aas
push
xor
jo
sti
out
xchg
inc
lret
scas
cmp
xchg
mov
insl
aas
sahf
cmp
popf
lods
and
repz
cwtl
sti
push
and
enter
mov
lods
rcll
or
dec
sbb
cwtl
sub
cmp
lods
dec
dec
stc
push
repz
cwtl
lahf
cmpsb
pop
jnp
mov
insb
pop
ss
in
ret
jnp
fsubs
jnp
mov
cld
mov
mov
fsubs
nop
adc
pushf
ja
bound
push
sarl
in
shll
inc
pop
pushf
mov
add
sbb
test
in
ljmp
aas
jp
je
push
xor
sub
adc
jle
push
fnstenv
aaa
leave
icebp
jg
dec
stc
sbb
cmp
icebp
in
dec
jnp
mov
cmp
lods
jo
dec
mov
lcall
sbb
lret
cmc
sbb
xchg
lods
xor
test
lret
jle
lret
adcb
hlt
out
and
xchg
mov
inc
fcoms
cltd
lcall
push
mov
aaa
lods
pop
or
push
cli
push
dec
fisubs
jno
inc
hlt
cld
jmp
jno
sbb
inc
insl
or
mov
aam
hlt
mov
mov
pushf
popf
out
jnp
inc
push
fmuls
sub
pop
mov
xlat
mov
xor
jns
bound
fildll
out
hlt
sbb
mov
popa
sub
pop
sub
cli
decb
push
shl
loop
xchg
sbbb
and
xlat
incl
pushf
cmp
xorb
mov
insb
ret
stos
pop
jge
movb
cmp
mov
push
pop
shll
or
fstpt
je
loope
mov
dec
in
fldt
and
sbb
scas
mov
push
mov
xor
and
jo
je
leave
pop
mov
push
ja
repz
inc
push
nop
int3
rol
add
aad
out
pop
arpl
lods
clc
lahf
int3
push
pushf
add
fimull
in
push
fnstsw
mov
lock
mov
add
sahf
popa
ret
mov
js
mov
cmpsl
cmpsb
dec
mov
sar
ja
dec
fstpt
sub
lea
dec
inc
lods
and
ljmp
sub
and
xchg
xchg
je
jecxz
mov
adc
and
push
es
test
cli
hlt
cmp
push
rcrb
lret
sub
loope
xlat
mov
ffree
in
out
mov
push
fildll
xchg
mov
cmc
inc
movsb
sbb
mov
jg
stos
pop
subl
fwait
js
xchg
sub
cli
cwtl
inc
ljmp
rcll
out
or
mov
cld
test
jo
cld
jno
stc
ljmp
dec
jmp
jle
lea
sub
add
jmp
adc
cmp
dec
add
enter
lods
pop
sbb
jnp
jmp
rcl
imul
rorl
mov
mov
orl
sti
fcoms
add
pop
mov
pop
push
inc
daa
rolb
mov
mov
lea
inc
in
inc
cmp
xchg
sbb
movsl
addr16
push
xor
xchg
in
in
jbe
mov
iret
dec
mov
mov
cltd
pusha
lock
cld
js
and
push
test
jae
xlat
push
cwtl
and
xchg
dec
mov
cmp
pop
push
les
cmp
loope
iret
repnz
adc
inc
aam
lock
lds
cmp
arpl
jae
loope
andl
and
into
xchg
and
dec
sbb
jmp
imul
push
je
add
push
fisttpl
insb
mov
sub
inc
aaa
cltd
enter
les
push
pop
xor
scas
lret
and
lcall
inc
jns
sbb
sbb
push
cmp
cmp
fadd
das
mov
nop
push
sar
xor
add
adc
xchg
cmp
pop
lahf
dec
ret
adc
test
mov
cli
xor
sar
loopne
in
rclb
movsl
scas
push
push
lahf
inc
loope
pop
pop
add
js
xchg
gs
js
mov
or
jne
daa
mov
mov
mov
sbb
push
cltd
pop
lret
add
lahf
imul
pop
cli
dec
arpl
jbe
lret
and
dec
test
into
push
popf
or
mov
sub
cwtl
das
mov
cmp
clc
xchg
xchg
lret
add
es
push
test
bound
or
cmp
outsb
test
mov
sbb
lods
sub
out
scas
nop
ljmp
push
es
cs
iret
imul
pusha
add
lock
push
movsl
pop
and
das
sub
or
dec
mov
jle
mov
fisubl
shll
xchg
cmp
fwait
xor
jmp
std
arpl
add
xor
cmp
mov
std
push
ljmp
sahf
add
cli
pop
out
mov
mov
xchg
inc
add
sbb
lret
test
mov
dec
cmp
and
lock
enter
or
push
dec
adc
dec
lcall
adc
jmp
adc
popa
jl
sbb
dec
jbe
mov
sub
xchg
or
aas
dec
dec
test
mov
mov
sbb
adc
jp
in
adc
push
leave
push
xchg
xchg
jmp
loop
sub
push
in
jnp
mov
insl
das
sbb
addr16
imull
sub
es
push
and
sub
mov
cs
jmp
das
vmovaps
mov
or
test
xchg
xor
sub
pop
add
pop
mov
sahf
mov
lods
push
lahf
data16
xor
dec
fistl
into
push
dec
insb
push
movsl
dec
dec
sahf
fimuls
mov
cmpsb
rcl
loope
nop
pop
loopne
dec
push
repz
mov
add
lcall
xchg
gs
fistpll
dec
push
pop
rcll
fisttpl
mov
mov
sub
loope
or
fiaddl
outsl
lods
lret
nop
lods
sub
sbb
mov
rorb
in
xchg
dec
lahf
cld
dec
ja
mov
insl
pushf
in
jl
pop
mov
jnp
ja
lret
dec
xorb
jp
leave
sbb
dec
dec
jns
popa
mov
or
xchg
and
pushf
xor
aam
sahf
jmp
cltd
cmc
cmc
xchg
xchg
movsl
sub
pushf
and
shl
xchg
mov
bound
xchg
push
stc
je
cltd
int3
jae
bndstx
incb
cmp
rorb
push
and
rcl
cmpsl
xor
mov
mov
sbb
pop
test
in
lock
dec
stc
cmp
ror
arpl
aam
in
xor
fiaddl
xchg
jl
loop
dec
push
ficomps
inc
js
bound
cli
sub
in
cmp
fwait
aaa
pop
fisttps
or
outsl
mov
push
es
ja
outsl
or
push
xchg
shl
push
je
insl
call
xor
xchg
jmp
icebp
pop
xchg
inc
xchg
adc
fsubrs
les
add
dec
push
mov
sbb
hlt
inc
xchg
dec
sub
fldenv
add
or
mov
xsaveopt
ret
sbbb
in
or
inc
ja
and
sbb
jnp
pop
mov
jbe
aam
mov
add
pop
jnp
fists
fsubl
jl
fsubs
call
jne
in
adc
subl
mov
xchg
enter
sbb
xlat
xor
xor
and
mov
lods
jp
movsl
loopne
mov
jge
cmp
jno
push
ret
and
push
xorl
push
ds
ss
stos
test
incb
push
sarb
cld
jns
or
pop
ds
gs
mov
mov
pshufw
mov
leave
cmp
lret
iret
push
in
inc
xchg
mov
push
mov
mov
xchg
or
int
and
mov
or
std
mov
push
rcr
xor
arpl
repz
jp
push
sbb
ret
dec
dec
stos
mov
stos
out
mov
test
loope
push
subb
pusha
cmc
stos
jmp
cmp
xor
push
aaa
or
rcll
in
in
dec
dec
push
nop
sbb
push
into
dec
aad
push
sub
lock
stos
sbb
push
ds
addr16
cs
ja
mov
and
ret
and
inc
sbb
test
loopne
cltd
lcall
jnp
call
fs
insb
xlat
xor
js
dec
mov
addr16
jge
ficoml
or
test
sub
out
stos
ja
inc
fstl
adc
push
lock
pushf
in
cltd
mov
rcl
jne
jp
adc
dec
inc
adc
xchg
jnp
sub
mov
int
rclb
loop
lcall
adc
js
pop
ficoms
flds
shl
mov
lret
fdivl
aas
std
repz
stc
gs
mov
or
sbb
xchg
xchg
jmp
push
cmp
notl
adc
cmc
jl
lock
lock
lret
jnp
aad
push
jns
pop
mov
dec
jo
in
sub
outsb
insb
arpl
push
es
fisubrl
bnd
lds
xor
fst
test
pop
push
adc
cmp
lock
add
sbb
jb
rcrl
or
adc
lods
inc
adc
mov
mov
mov
imul
shll
ss
lods
cmpb
leave
xchg
or
cs
push
ds
sbb
jle
pop
test
lcall
or
in
add
mov
inc
inc
sti
cmpb
fdivs
xchg
cmc
insb
mov
mov
xchg
jmp
dec
leave
mov
out
movsl
sbb
mov
insl
dec
rolb
push
cmp
mov
dec
pop
into
stos
mov
push
das
fwait
lds
gs
xchg
or
imul
leave
fwait
test
xor
mov
loope
lods
ret
sub
jmp
xchg
cmp
lahf
sarl
add
inc
aaa
xchg
xchg
outsl
pop
popa
and
mov
xchg
jge
ret
jmp
ljmp
icebp
test
dec
sub
mov
sub
pop
imul
or
and
popa
mov
enter
xchg
xchg
adc
fs
inc
test
test
sahf
sbbl
xchg
ss
mov
add
lret
ljmp
inc
and
pusha
pop
cmp
inc
in
mov
stos
sub
mov
stos
test
mov
aas
cmpb
xchg
gs
testb
dec
pop
inc
sahf
jl
les
fstpt
lock
les
shll
cs
mov
xchg
lret
sti
les
xor
icebp
adcl
stos
es
cltd
bound
push
repnz
lods
addr16
xor
xorb
push
loop
sub
cmp
cmp
sbb
and
std
pushf
mov
add
es
cmp
pushf
movsb
xchg
insb
mov
das
mov
sbb
ret
aam
aas
dec
push
cmp
adc
cmpsl
xchg
in
jo
nop
add
sbb
orl
sub
test
mov
test
add
fidivl
lret
scas
mov
jae
xchg
sub
jecxz
cs
sbb
ljmp
push
add
test
mov
push
mov
aas
in
int3
int
add
jg
fwait
jno
mov
mov
inc
xchg
mov
pop
std
push
push
test
vpsrlw
dec
ficoms
aas
testl
mov
nop
cmp
mov
cwtl
loop
shlb
pop
stos
push
divl
addr16
ficoml
sahf
mov
mov
rcrl
pop
andl
mov
mov
fnstsw
dec
push
push
dec
into
loopne
mov
and
xor
mov
mov
xchg
scas
cmp
test
dec
test
jl
js
fidivrs
sbb
or
dec
mov
fsubrs
xchg
out
sti
pushf
sub
inc
inc
inc
mov
sub
rcrb
lods
gs
cld
in
mov
fdivr
dec
pop
mov
repz
add
cli
ffree
sbb
dec
jae
je
int3
popf
jb
outsb
xchg
in
movsl
decb
int
xchg
popf
test
xchg
int3
push
in
lret
lods
sub
scas
adc
mov
mov
xor
push
and
or
es
mov
add
cmp
adc
es
adc
cmp
sbb
cmp
les
pop
or
sbb
ljmp
xor
ret
cltd
fmulp
std
je
push
in
mov
cmpsb
js
mov
inc
pushf
and
nop
iret
fimull
shlb
daa
add
mov
inc
out
xchg
pop
add
mov
lock
and
dec
or
pop
adc
mov
jg
cmp
movsb
pop
dec
or
int
sub
loope
cli
mov
pop
sub
dec
loop
pop
inc
aad
mov
adc
push
or
push
mov
icebp
xor
mov
xchg
xlat
jnp
aam
cmp
push
inc
cmpl
int3
pop
mov
mov
add
divb
dec
dec
pop
add
xchg
daa
fcmovu
pop
adc
dec
pop
fstpt
cmp
push
lret
mov
lahf
imul
xchg
sar
pusha
lret
clc
negl
insb
pop
gs
sub
sub
daa
ret
lcall
icebp
xor
cmp
andl
add
fidivrs
jge
pushf
lret
xor
lea
push
mov
shl
aam
in
popf
inc
mov
cmpsb
aaa
out
lock
fcoml
mov
pop
lahf
int
js
pop
sub
inc
mov
jmp
cmp
lods
mov
cwtl
push
test
push
push
fwait
mov
xor
mov
dec
pop
das
scas
jle
xchg
mov
sub
popf
push
in
jge
scas
aaa
xchg
movsl
push
inc
and
mov
lea
movzbl
mov
lea
xchg
dec
sub
movzwl
and
xor
sub
mov
imul
inc
inc
inc
mov
dec
jne
imul
mov
mov
dec
pop
lea
mov
pop
dec
lea
pop
mov
and
imul
lea
imul
sub
add
mov
sub
or
imul
add
ret
push
push
add
mov
push
inc
inc
sub
and
mov
lea
push
mov
sub
dec
imul
push
inc
imul
and
xor
lea
or
mov
push
mov
mov
dec
push
add
sub
xor
lea
inc
push
lea
inc
push
imul
dec
pushl
dec
call
xor
add
dec
dec
mov
add
mov
mov
mov
pop
ret
inc
inc
cmp
jb
dec
xor
dec
mov
or
mov
mov
add
inc
inc
dec
movswl
lea
add
mov
mov
and
cmp
jb
add
pop
sub
dec
movsbl
sub
sub
inc
mov
add
inc
dec
xor
dec
imul
xor
or
lea
mov
add
test
jbe
mov
mov
movzbl
mov
sub
inc
add
movswl
lea
lea
lea
dec
and
inc
add
mov
mov
imul
movzbl
add
add
dec
sub
and
add
dec
mov
inc
inc
mov
add
dec
mov
dec
dec
mov
dec
sub
inc
inc
or
and
dec
jne
add
mov
mov
and
mov
inc
add
inc
movzwl
movsbl
dec
mov
xor
mov
add
inc
inc
lea
imul
imul
mov
or
inc
test
jbe
lea
imul
inc
lea
mov
dec
dec
dec
mov
dec
imul
dec
add
dec
dec
inc
sub
sub
dec
imul
add
sub
and
mov
mov
mov
add
inc
movzbl
add
xor
add
mov
inc
and
lea
or
mov
dec
mov
movzbl
lea
add
mov
mov
add
mov
mov
lea
movzbl
inc
imul
add
add
jmp
push
or
inc
add
sub
lea
imul
imul
mov
dec
mov
inc
mov
mov
movzbl
movzwl
imul
sub
sub
lea
sub
lea
add
mov
sub
lea
movsbl
dec
inc
mov
or
inc
inc
inc
mov
sub
imul
mov
mov
sub
cmp
je
add
imul
or
push
lea
call
call
sub
dec
call
call
or
imul
add
add
imul
inc
lea
ret
add
mov
pop
mov
ret
push
mov
inc
mov
lea
inc
push
inc
dec
push
imul
push
lea
push
xor
dec
mov
inc
movsbl
call
inc
push
add
xor
xor
inc
sub
add
neg
movzbl
dec
mov
sub
lea
mov
mov
dec
inc
mov
lea
movswl
inc
add
mov
dec
je
inc
lea
xor
mov
dec
mov
mov
mov
dec
dec
add
repnz
inc
mov
add
and
jmp
lea
or
add
dec
mov
inc
lea
add
mov
dec
movswl
dec
dec
inc
jmp
jmp
in
ja
mov
jbe
gs
scas
leave
andl
gs
mov
loopne
lods
pop
sbb
inc
aad
call
push
jl
lods
dec
outsb
mov
push
adc
cmp
movsb
test
dec
addl
sbb
xor
pop
sarl
aad
mov
adc
sbb
insl
dec
xchg
out
adc
mov
xor
adc
repz
push
aam
cmpsb
adcl
outsl
mov
mov
xchg
add
cmp
cs
pop
lcall
pushf
repz
adc
sbb
lahf
mov
mov
mov
and
sub
sub
std
loop
jg
or
and
xorb
je
cmp
mov
bound
mov
je
xor
js
add
cmp
xor
out
sbb
mov
inc
inc
mov
imul
lea
push
jg
sbb
jle
mov
push
cld
in
inc
outsl
inc
call
mov
mov
testb
push
stc
pop
scas
and
push
ret
subb
scas
and
mov
std
or
adc
repz
fcompl
sar
sarl
outsl
dec
inc
xlat
call
icebp
fisttpll
sub
lock
push
int
jecxz
jge
fcmovbe
mov
xchg
and
lret
and
shll
adc
popa
leave
mov
push
mov
mov
gs
inc
or
js
loope
out
and
push
cmp
mov
adc
int
sub
mov
pop
pop
jp
cmp
addr16
pop
into
xor
inc
sub
mov
arpl
pop
dec
jo
push
and
hlt
and
jge
fistpll
mov
xchg
mov
push
call
ss
subl
or
clc
bnd
loop
or
jge
cltd
lods
mov
test
jb
pop
jecxz
xchg
outsl
in
les
jbe
aad
orl
xor
mov
xor
push
lahf
xor
enter
inc
outsb
adc
ret
xor
out
xor
mov
in
xchg
subb
sbb
int3
sub
pusha
push
mov
and
mov
inc
mov
idivl
clc
ret
lds
loopne
dec
lret
test
push
add
jno
decl
push
pop
ret
sbb
cmp
mov
loop
fsubl
sahf
imul
lods
dec
shlb
lea
push
mov
push
pop
rclb
add
cwtl
sbb
out
mov
fdivr
rcrl
shlb
mov
lcall
cmpsb
lods
ret
shr
jp
or
and
stos
insb
xchg
and
iret
rcll
xor
sbb
sub
es
jne
jbe
cmp
es
sbb
jae
jge
jne
jns
call
in
test
push
xor
pop
int
cmp
dec
repnz
or
test
or
cmpsl
lret
sbb
orb
push
xor
jae
mov
jl
pop
incb
jne
insw
loopne
test
or
mov
xlat
pop
into
bound
sbb
jl
insb
fcmovu
cli
faddp
sbb
xchg
xchg
push
inc
and
pusha
pop
test
mov
stc
pop
inc
out
sub
jnp
add
dec
sub
xor
push
mov
test
lods
push
push
lret
mov
mov
popa
imul
sahf
ficoms
into
jmp
ror
bound
mov
push
xlat
arpl
std
and
loope
daa
and
jb
bound
or
jmp
or
fwait
jl
inc
outsl
push
test
mov
push
mov
mov
xchg
mov
mov
mov
ss
or
mov
pop
neg
add
sbb
nop
pop
push
add
stc
ss
cmpsb
adc
sub
and
lcall
fwait
mov
or
xor
sbb
and
rorl
dec
int
sbb
sar
inc
ret
ljmp
push
rclb
sub
into
pop
mov
adc
dec
push
jle
stos
dec
cwtl
sahf
nop
sub
stc
pusha
xchg
xchg
into
pop
scas
dec
push
sbb
or
xlat
sub
loop
sbb
fwait
rolb
xchg
shrl
arpl
ljmp
or
data16
adcb
sub
xchg
aas
popf
lock
outsb
xor
xchg
and
fidivrl
add
clc
mov
jb
mov
jnp
jno
cmpsb
out
dec
movsb
jo
outsl
jno
fwait
push
subl
dec
lcall
mov
repnz
mov
int
xor
sbb
call
xor
fwait
daa
push
scas
outsl
ret
out
loopne
mov
divl
pcmpgtw
jmp
push
movsl
je
and
pop
cmp
pop
fmull
repnz
jmp
xacquire
mov
inc
mov
mov
push
lret
mov
or
and
push
in
pop
mov
out
test
loope
andb
out
stc
or
jmp
pop
ret
sub
sbb
jle
aam
mov
dec
jo
sar
jp
add
idivl
cmp
stos
dec
test
gs
add
int3
push
ret
pusha
mov
xchg
adc
jnp
clc
outsl
imul
loopne
int
repz
pop
dec
jle
call
cmp
in
sbb
in
mov
mov
push
mov
jo
pop
dec
cmpsl
iret
hlt
outsl
scas
push
xchg
imul
jb
fcom
and
sub
das
outsl
push
mov
aaa
and
call
shlb
mov
pop
insl
bound
sbb
insb
inc
xchg
cld
mov
js
push
inc
mov
pop
dec
out
cmp
mov
pop
jge
out
xor
inc
ficoml
in
sbb
les
mov
dec
mov
loop
jnp
push
mov
jmp
jbe
adc
ret
mov
xor
sub
push
ret
out
fmull
je
dec
inc
pop
pushf
cli
adc
sub
popa
icebp
je
shrb
jle
repz
mov
and
fnsave
and
mov
test
jbe
push
cltd
adc
and
pop
mov
mov
xchg
jns
mov
incl
inc
push
ficoml
fs
fwait
dec
clc
cwtl
xor
mov
jp
jg
mov
mov
jns
jp
xchg
repz
jp
push
push
inc
test
sub
xchg
add
add
jle
push
test
loopne
frstor
dec
mov
cmp
mov
fwait
icebp
mov
push
inc
cmp
insl
dec
insl
xchg
push
psllq
leave
mov
inc
rclb
addl
negb
inc
fwait
add
fcmovu
jmp
test
jl
lret
outsl
fisubl
xorb
and
xchg
xchg
pop
mov
jo
jle
pop
cmc
fstps
dec
or
cli
push
int
xchg
popf
ljmp
je
pop
xchg
lock
or
pop
mov
jnp
sub
in
test
adc
mov
xlat
daa
mov
insb
push
std
lds
mov
imul
ficomps
pop
push
and
inc
mov
das
push
sub
dec
mov
outsb
ret
mov
fldcw
je
sub
faddl
popf
arpl
fsubp
in
pop
mov
inc
adc
aas
lods
imul
arpl
mov
adc
cmc
adc
fwait
mov
or
xor
into
sub
les
dec
fistl
data16
push
pop
cs
mov
cld
sub
dec
scas
or
or
inc
jne
xor
loopne
mov
fwait
mov
call
adc
dec
adc
and
push
stc
push
and
in
inc
sqrtps
imul
dec
xlat
lods
ja
loope
or
pop
fmuls
lret
cwtl
lds
add
addr16
cs
je
and
fcomps
lahf
in
repnz
mov
jmp
std
pop
int3
fdivs
test
ror
loop
jae
push
sub
push
movsb
xor
jg
or
pop
mov
adc
jmp
stos
rol
andl
aam
outsl
fidivs
sub
es
arpl
jbe
lods
loop
fdiv
push
rolb
scas
movd
cmp
imul
cmp
mov
sub
or
mov
scas
insl
ljmp
fisttps
push
js
fidivrs
jl
dec
jmp
adc
ss
or
movnti
adc
out
mov
sub
dec
jns
xchg
aad
repz
xchg
mov
dec
call
paddw
mov
cs
xchg
outsb
and
std
push
jmp
shrl
aam
xor
mov
dec
jns
les
repz
addb
mov
outsb
mov
shrb
enter
push
in
pop
or
add
dec
pop
rcll
inc
test
mov
adc
sbb
insl
inc
push
cltd
pop
aad
push
push
and
ljmp
aaa
xor
mov
xchg
rorb
pusha
leave
test
aas
addb
mov
loope
and
cli
or
mov
xchg
inc
jb
imul
clc
rcr
pop
inc
pop
or
dec
cmpsb
aam
and
insb
xor
mov
xor
pop
sbb
fwait
test
and
imul
lock
lcall
mov
xchg
in
sub
movsl
lods
cmpl
stc
jl
imul
pop
jo
inc
mov
in
stos
pop
xlat
jne
scas
fidivs
xor
push
add
or
jbe
mov
imul
push
xchg
addb
dec
jg
jb
pop
mov
xchg
xor
pop
mov
sbb
arpl
cmpsl
sub
mov
in
adc
inc
data16
jns
jb
cmp
mov
leave
pop
push
insb
test
lods
xchg
int3
or
cs
aam
sahf
adc
ds
je
xor
inc
arpl
aad
mov
gs
mov
into
pop
or
xchg
dec
nop
pop
mov
idivb
sbb
mov
mov
mov
jge
mov
stc
or
inc
push
out
mov
and
mov
ds
jge
fisubl
jecxz
jle
pop
addl
lods
scas
pop
subl
loopne
pushf
mov
or
sub
mov
mov
fsubrs
rcll
inc
xor
add
shll
dec
cli
cmp
xor
fnstenv
les
idiv
negl
or
les
fimuls
addr16
pop
jecxz
pushl
ret
fnstenv
call
ret
xchg
pop
les
mov
jp
mov
cmp
jnp
les
fsts
xchg
cmp
nop
ja
into
sub
push
push
insb
cmp
dec
repz
pop
sbb
leave
adc
jne
out
and
mov
popa
dec
xor
or
pop
sub
cmp
adc
xchg
in
mov
mov
fs
pop
push
fistps
popf
imul
dec
test
arpl
and
pop
not
lods
jp
jmp
lcall
lahf
cmp
sti
loop
push
popf
xor
cmpsl
mov
push
cmpsb
test
pop
fwait
xchg
ss
xor
mov
daa
movsb
sbb
arpl
xchg
mov
mov
popf
das
mov
sub
sub
xchg
push
push
pop
scas
push
push
sub
push
xchg
jge
add
pop
mov
out
sub
push
pop
jns
add
ret
repz
cmp
movsl
mov
pushf
sbb
push
into
test
inc
in
or
and
jp
popf
sub
dec
dec
mov
jno
pop
push
xor
shrl
andb
rorb
hlt
int
add
dec
out
dec
aas
fimull
push
rcll
pop
aas
lcall
into
cmp
rcrl
ficompl
sub
or
mov
in
push
pop
enter
fs
inc
adc
or
and
out
ret
pop
jne
sub
push
sarl
jb
stc
in
add
jb
test
xor
mov
dec
ret
xchg
or
xchg
jae
fnstcw
and
andb
lock
mov
ljmp
hlt
push
mov
das
mov
cld
adc
ret
sub
cmp
cmp
mov
and
fcmovnbe
push
xchg
ret
xchg
cmp
mov
imul
push
mov
xchg
mov
lods
jp
jbe
add
leave
cmp
mov
dec
cwtl
cmp
loope
test
mov
mov
lods
mov
pop
inc
add
adc
mov
jb
iret
lods
icebp
add
pop
rorb
mov
enter
xor
jns
stos
loope
int
lcall
jnp
push
out
jbe
pop
jmp
fistpll
and
insb
sti
adc
lret
hlt
jb
nop
mov
int
ret
xor
push
fiaddl
and
aaa
adc
inc
sub
dec
andb
sub
ds
int
cmp
mov
fsubl
pop
aaa
nop
adcl
inc
and
bound
xchg
out
cmp
data16
cs
jbe
sbbb
nop
dec
aad
mov
jnp
inc
fnstsw
xor
leave
push
mov
xor
pop
in
out
jns
xchg
push
bound
ret
jb
ss
hlt
sti
mov
ja
outsb
ljmp
cmp
push
pop
and
ficompl
jo
pop
add
ljmp
call
movsb
insl
aaa
leave
push
in
in
fs
loope
outsl
push
xor
into
mov
push
mov
or
or
call
and
mov
call
add
push
imul
call
dec
dec
inc
mov
sub
inc
call
inc
mov
movzbl
or
dec
add
imul
lea
inc
mov
dec
mov
mov
call
inc
add
and
dec
dec
call
sub
add
call
mov
or
dec
sub
mov
add
add
sub
pop
sub
lea
movsbl
add
lea
pop
lea
inc
pop
lea
add
mov
dec
pop
mov
mov
dec
inc
dec
add
inc
dec
pop
and
add
pop
dec
inc
mov
dec
add
call
mov
imul
and
and
ret
add
mov
push
add
mov
push
mov
sub
push
sub
or
push
dec
imul
push
dec
mov
mov
lea
movzbl
push
add
ret
push
dec
push
mov
inc
inc
sub
push
sub
lea
inc
call
pop
ret
jmp
movzwl
inc
pop
pop
ret
push
lea
inc
imul
sub
sub
inc
add
inc
xor
inc
mov
dec
mov
mov
lea
mov
sub
mov
inc
dec
xor
add
mov
lea
dec
and
inc
dec
pop
ret
sub
inc
mov
imul
imul
mov
mov
inc
mov
lea
inc
mov
inc
lea
xor
inc
mov
mov
add
xor
inc
add
mov
lea
add
dec
add
cmp
jb
mov
push
inc
mov
push
lea
dec
push
dec
inc
xor
mov
sub
xor
mov
add
xor
dec
add
push
imul
mov
push
mov
mov
pop
add
mov
inc
dec
inc
lea
imul
xor
add
dec
xor
or
mov
or
mov
movsbl
movzbl
xor
mov
lea
inc
add
inc
inc
add
sub
lea
movzbl
lea
lea
dec
add
dec
sub
sub
inc
mov
add
mov
sub
xor
lea
jmp
add
inc
add
or
add
inc
add
adc
add
sub
mov
add
jmp
lcall
ret
add
push
xchg
shll
adc
add
ja
push
xor
and
lahf
pusha
adc
call
mov
and
pop
mov
dec
pop
dec
ret
jns
das
pop
movsl
shlb
inc
mov
push
stos
mov
lods
xchg
inc
insl
daa
xor
add
xchg
adc
lods
mov
mov
movsb
mov
and
xchg
push
pusha
pop
sub
and
pop
mov
xlat
mov
shll
push
xchg
movsl
rcrb
mov
and
and
shlb
and
es
testl
rcll
add
aam
adc
adc
push
push
xchg
xchg
fwait
push
push
push
out
icebp
mov
test
insb
mov
movntq
xor
mov
aas
leave
mov
sarb
push
jmp
or
or
cltd
inc
dec
mov
push
daa
pop
mov
loope
mov
xchg
loope
xor
sbb
push
cmp
mov
mov
add
jb
mov
xchg
jp
mov
or
in
loope
sbb
inc
movsl
adc
push
ror
rolb
in
outsl
mov
adc
sub
imul
lods
fwait
in
xlat
inc
fistl
loopne
mov
test
sbb
xor
pushf
sub
and
xlat
jp
or
xor
xor
mov
pop
pusha
mov
imulb
jbe
dec
dec
outsb
sahf
push
test
pop
or
and
jns
push
jno
stos
adc
int
mov
pushf
fistl
xchg
inc
movb
test
jle
shll
add
adc
div
add
cmovno
stos
addl
rcll
mov
ret
outsl
pop
add
mov
and
xor
jmp
add
push
aas
mov
in
push
cld
bound
pop
jle
adc
inc
sbb
pop
in
xchg
enter
ret
arpl
ffreep
aas
jo
pushf
mov
ret
in
ljmp
cli
fcmovb
fwait
mov
fwait
and
mov
int
les
push
sti
in
and
fs
jo
jmp
and
dec
mov
inc
mov
xchg
adc
les
inc
cmp
idivl
adc
jns
daa
cmp
int3
outsl
push
movsb
mov
add
add
rcl
adc
lds
and
rorl
xchg
in
fs
sbb
scas
leave
imul
pop
jl
mov
pop
shl
ds
mov
pop
xor
mov
add
xchg
mov
jne
mov
sub
mulb
push
cmpsb
cmc
push
lcall
das
shll
mov
pop
mov
fbld
add
push
insl
adc
push
icebp
dec
and
imul
jno
cmp
cmpsl
xchg
dec
lea
ret
loope
xor
int
jp
subl
jns
and
jno
movsb
or
cld
daa
cli
cs
into
call
inc
test
in
mov
push
enter
or
mov
xchg
adc
cs
jl
jb
dec
mov
shl
fdivs
pop
inc
dec
cmpsb
sbb
push
ss
add
push
push
mov
pop
xor
push
jae
cmp
call
stc
mov
lods
adc
je
jmp
dec
subb
inc
xor
jl
pop
nop
xlat
adc
pop
in
sahf
mov
out
hlt
adc
push
imul
in
adcl
cmpsb
leave
push
lret
cmp
jg
out
push
lods
lahf
push
sub
js
xor
xor
inc
pop
test
mov
adc
fdivrs
into
shll
stos
push
stc
jb
push
mov
in
insl
jmp
scas
push
cmp
sbb
mov
mov
iret
adc
inc
dec
push
sub
scas
and
nop
sub
test
mov
mov
push
mov
push
mov
inc
insb
adc
cmc
notl
add
mov
dec
rolb
mov
push
adc
scas
fidivs
xchg
cmpsl
cwtl
sub
repnz
or
dec
inc
add
pop
sub
jne
jo
mov
popf
stc
pop
jns
rclb
pop
mov
mov
cmc
mov
push
cmpsl
jmp
fstpt
lock
mov
cmp
pop
inc
jmp
ret
push
jmp
mov
jp
xchg
hlt
cmp
inc
jns
xor
cmp
decl
lods
sbb
mov
call
negb
xor
ljmp
test
test
cs
loopne
mov
or
es
xacquire
pop
nop
xor
adc
or
xor
iret
clc
das
in
add
rcll
lret
jmp
adc
and
push
add
fisubrl
out
je
or
adc
test
add
sub
xor
push
mov
mov
add
enter
cmpsb
aam
rolb
and
pop
xlat
add
jno
ja
insl
mov
and
outsl
jnp
sub
jle
das
inc
mul
adc
and
test
lret
lahf
mov
mov
cmp
imul
lods
cmp
push
pop
xorb
lock
pop
fildll
movsl
jbe
push
mov
insb
mov
jmp
xchg
xchg
pop
pop
mov
cmp
mov
cli
push
add
or
in
insb
add
cmp
xchg
dec
outsl
sbbl
add
loop
dec
cmpsl
lcall
das
push
movsl
push
push
mov
sti
pop
leave
cltd
dec
cmp
jmp
cmovs
and
mov
scas
out
push
ret
push
xor
into
sbb
xor
outsl
sub
std
mov
mov
mov
xchg
push
rclb
adc
xchg
divps
daa
lds
sub
inc
xchg
xchg
repz
out
test
insl
std
test
mov
mov
fldl
or
ds
ja
and
pop
dec
sub
mov
sub
xchg
rcll
sarl
jne
xchg
inc
jo
aam
add
mov
jle
fldenv
imul
or
cli
sbb
xchg
mov
mov
adc
dec
lret
cmp
fstpt
adc
adc
cli
fimuls
lods
sahf
pusha
sbb
sbb
cmp
pushf
add
or
out
push
cmc
imul
adc
loope
or
or
xor
pop
nop
outsb
mov
loop
daa
xor
mov
data16
int
mov
loopne
or
add
push
mov
jns
outsl
or
and
cmp
inc
mov
or
notb
outsb
in
inc
es
cmp
or
push
arpl
mov
fs
mov
gs
cmp
xor
insl
inc
inc
jmp
lahf
pop
jne
mov
cltd
mov
mov
bound
xor
prefetcht0
sub
xchg
mov
add
bndstx
mov
repz
cmp
adc
loope
dec
sbb
loop
addl
xchg
icebp
and
push
imul
cmp
mov
sbb
lods
pop
sub
sub
loop
and
imul
dec
sarl
addr16
xchg
daa
jbe
xchg
mov
stos
popf
cltd
mov
and
mov
mov
movsl
jmp
dec
popa
adc
aaa
pop
push
paddd
inc
mov
sub
adc
stos
mov
mov
lods
dec
mov
mov
rorb
decb
jg
push
mov
rorl
jb
pop
mov
int3
in
jno
adc
pop
mov
adc
fwait
shlb
test
push
into
in
push
ljmp
add
cmp
adc
adc
shr
push
rcrl
icebp
mov
xor
repnz
sub
cmp
inc
push
fisubrs
shlb
es
cmp
je
insb
cld
mov
orl
sub
ret
jae
xchg
mov
cld
add
es
filds
test
lds
jp
push
es
adc
mov
ficompl
popa
call
addr16
lcall
aam
adc
or
movsl
std
shl
add
insl
daa
sub
std
fadds
xchg
add
mulb
xor
push
and
and
lods
sbb
mov
scas
dec
xchg
xchg
insl
bound
mov
repz
imul
jns
mov
movsb
and
pop
cmpsb
in
repz
jl
inc
or
mov
inc
shl
stc
mov
xor
jge
fsubrl
sbb
arpl
sbb
outsb
pop
push
repnz
das
pop
cmp
nop
inc
movsl
cmpsb
pop
js
add
movl
cmp
psubb
add
dec
inc
adc
cmp
movsl
movsb
movsl
add
and
and
sbb
mulb
push
mov
jecxz
or
das
jecxz
fcoml
xor
rcrb
or
fstpl
xor
sbb
mov
adc
fidivs
push
jl
lods
push
les
cmc
fld
inc
adc
xchg
js
push
jno
xor
fldt
and
jnp
jmp
mov
adc
and
jo
movsb
pop
mov
pop
pop
cmp
arpl
loope
adcb
lea
dec
dec
insb
push
mov
push
fwait
sub
rep
or
cmp
dec
sti
mov
ret
mov
ds
pushl
or
push
sahf
cmp
hlt
pop
push
movsl
push
jmp
hlt
aaa
mov
add
jo
sub
push
dec
pop
adc
fldt
aas
adc
cmc
sahf
mov
test
clc
mov
add
lds
aas
sbb
or
hlt
mov
jecxz,pn
in
and
adc
fiadds
mov
aaa
dec
and
scas
ja
push
rorl
mov
hlt
lret
cmp
inc
orl
sahf
cltd
mov
jg
push
jbe
lods
inc
push
push
push
clc
add
or
int
jl
mov
cld
adc
dec
inc
pushf
mov
sbb
sub
stc
inc
stos
out
and
add
dec
cltd
xlat
or
lahf
add
repz
jp
mov
push
data16
movsl
dec
rclb
jno
fxtract
lret
or
stos
dec
pop
push
add
pop
mov
or
adcb
call
jmp
xchg
xor
push
mov
ljmp
pusha
lret
push
lds
sub
int3
sahf
ljmp
jmp
cld
inc
push
xor
pop
lock
sbb
sbb
dec
and
pusha
mov
jmp
out
pmulhuw
in
xor
lods
ljmp
pop
clc
dec
arpl
mov
adc
call
nop
cmp
sbb
inc
cmc
cmp
hlt
adc
sub
rcrb
jecxz
cmp
ds
mov
mov
xchg
in
ds
add
test
int3
cld
test
add
jmp
or
pop
test
mov
inc
orl
dec
or
pop
jne
js
adc
push
lcall
out
in
push
mov
cmpsb
adc
arpl
int3
pop
jg
stos
jnp
mov
lods
in
xchg
icebp
mov
lcall
bnd
pop
data16
test
movsl
loope
jbe
inc
pop
cmp
adc
sbb
lea
lods
test
pop
jns
testl
sbb
adc
pop
subl
cli
mov
push
sahf
pusha
fisttpll
fcmovbe
icebp
sbb
fcompl
test
das
test
mov
mov
ss
sbb
loopne
divl
les
aas
fildl
pop
dec
popa
xlat
subl
jmp
or
mov
imul
call
xchg
fidivrs
cmc
xchg
rsm
std
or
jo
jne
jno
call
push
xchg
dec
sub
mov
out
xor
push
daa
jl
and
ss
mov
xor
ljmp
xchg
ret
ficoms
sub
cmp
arpl
lret
imul
data16
mov
xor
out
push
push
cli
sbb
sub
repnz
sbb
orl
or
jns
add
adc
mov
cmp
aaa
stos
sarl
sub
or
es
jecxz
and
imul
testb
cmpsl
mov
add
sub
jo
out
xchg
ss
aas
ss
in
stos
sbb
mov
push
hlt
mov
lods
movsb
xlat
roll
das
pop
mov
and
inc
testb
cmp
adc
and
or
aaa
add
mov
mov
push
mov
xor
push
jne
pusha
pop
pop
sbb
push
nop
data16
iret
lds
push
aad
test
mov
add
loop
and
scas
iret
movsl
nop
ficompl
je
test
jle
xor
and
repnz
cmpsb
push
dec
mov
sub
mov
cmp
jno
sbb
dec
and
cltd
mov
mov
cli
popa
mov
adc
pusha
or
cmp
mov
cmp
out
sbb
or
in
pop
repz
popa
mov
sbb
bnd
loopne
out
sbb
js
das
loop
xchg
pop
mov
pop
clc
sbb
add
pop
pop
xor
insl
mov
push
aam
shr
pop
pop
aas
dec
sbb
xor
sbb
cld
jp
mov
fists
and
dec
imul
lret
pop
push
pop
outsb
cmpxchg
lcall
ds
mov
xor
sti
neg
sbb
push
arpl
insb
add
rorl
idiv
dec
nop
movsl
int3
lret
mov
fisttps
adc
pushf
cmc
cmp
dec
adc
xchg
xchg
test
outsl
dec
jne
dec
fwait
ret
mov
ljmp
and
ret
mov
push
jbe
fsts
dec
cld
sbb
jns
sbb
movsl
int3
sbb
ret
das
or
cmp
aam
adc
hlt
jns
mov
xlat
pop
sub
sbb
in
int3
inc
cmp
push
pop
jg
aad
sub
repnz
lock
lea
cmp
and
and
call
jle
out
jno
xchg
aas
cmp
pop
cli
scas
into
sbb
lahf
fistps
xchg
sub
es
adc
daa
xchg
inc
mov
mov
out
xchg
pop
push
push
loopne
dec
sub
iret
loop
and
aas
mov
popf
xor
inc
push
add
sbb
push
mov
sub
lahf
push
hlt
nop
or
in
jb
std
sbb
insl
lea
movsb
in
loop
xchg
pop
loopne
mov
stc
sub
mov
lods
popa
dec
divb
mov
mov
dec
inc
cmp
nop
les
mov
pop
mov
jmp
mov
sbb
repnz
inc
fwait
ret
pop
lds
add
fidivrs
into
popa
jno
mov
jge
popf
push
ss
dec
push
movsl
mov
lea
cmp
lret
push
scas
inc
adc
sbb
jl
je
addb
push
loop
clc
out
mov
push
inc
add
ljmp
xchg
jae
inc
into
test
orl
mov
xor
aaa
cmc
inc
mov
lods
mulps
sbb
xchg
cmpsl
mov
outsb
cwtl
lods
pop
je
jl
lahf
or
xchg
adc
mov
jle
das
push
dec
add
mul
push
std
push
gs
popf
push
xor
lods
push
int
gs
sbb
or
dec
loopne
jns
shlb
fldl
lea
out
lock
cmp
popf
fs
cld
je
addl
xor
sbb
sbb
insl
std
and
push
lcall
cltd
sub
mov
mov
add
mov
pusha
jge
imul
pop
subl
xlat
sub
push
pop
inc
imull
repz
ljmp
cmc
lods
jo
mov
mov
mov
cmp
sub
mov
xor
call
mov
jo
jno
jns
cltd
sbb
dec
inc
inc
idivl
mov
scas
movsb
cli
les
ljmp
sub
movsw
pop
int3
or
mov
rorb
cmp
xchg
inc
sbb
sub
sbb
pushf
out
lods
dec
cli
cli
push
stos
dec
adc
or
push
jne
push
or
out
popf
fwait
daa
jge
shlb
jbe
test
inc
mov
outsl
shrb
in
jns
inc
out
data16
fisttps
mov
leave
xor
lods
add
inc
inc
jg
xchg
push
es
cmp
mov
jnp
test
insl
xor
arpl
lock
fisubl
and
fstl
outsb
out
add
dec
dec
pop
adc
stos
sub
adc
cmp
cld
ret
sub
hlt
push
test
pusha
mov
ja
mov
and
pop
sbb
into
sub
xchg
or
ss
adc
adc
jecxz
loop
or
pop
mov
in
xor
cmpsb
in
repz
pop
nop
mov
xlat
in
fwait
mov
xorb
imul
or
xchg
mov
scas
pop
mov
jne
fistpl
stc
repnz
int
xlat
fldt
mov
loope
int3
push
inc
int
popa
sub
in
mov
adc
jnp
jle
and
testb
out
jns
mov
int3
ret
fsubrl
jge
nop
repz
int
and
xchg
inc
rcrb
negl
mov
je
mov
mov
fisttpl
fs
mov
sbb
push
mov
mov
stos
xchg
fdivrs
je
mov
in
push
mov
adc
imul
aas
mov
pop
cwtl
les
dec
insl
fwait
mov
inc
rorl
insb
roll
mov
aaa
jge
and
or
imul
mov
gs
repnz
cmc
int3
mov
mov
js
bound
testb
std
daa
cld
loopne
mov
xor
sub
xor
dec
out
add
jns
sub
inc
cld
xor
in
rclb
xchg
out
pushf
int
aas
and
mov
dec
add
sub
mov
push
jge
push
nop
or
stos
incb
or
mov
arpl
add
js
adc
shrb
xchg
cmp
xchg
clts
mov
mov
repz
pop
mov
clc
mov
xchg
hlt
addl
mov
leave
iret
push
bound
fs
lds
mov
cmp
insl
or
jno
xlat
sbb
orb
adc
movsl
add
dec
push
ret
sahf
in
xor
push
push
inc
dec
pop
or
sub
xchg
in
mov
mov
shrl
and
mov
xor
push
push
outsb
xchg
push
lods
aad
jns
into
push
and
out
fstpt
imul
aad
dec
out
add
push
xchg
iret
addr16
lret
out
div
hlt
mov
cltd
ss
les
cwtl
int
repz
shrb
or
sub
mov
lods
xchg
ficompl
mov
and
xchg
mov
call
push
jns
sbb
cld
lcall
movsb
jne
out
cltd
fsubl
jne
cmp
in
adc
mov
mov
scas
pop
dec
ffree
mov
fwait
cmp
aas
fwait
mov
call
lcall
push
jecxz
in
das
nop
adc
mov
and
cltd
add
inc
adc
add
jnp
aas
lea
inc
push
cmp
stos
scas
xchg
cmc
mov
popa
sub
or
mov
inc
dec
mov
sbb
shl
mov
or
sbb
sbb
sub
cmp
adc
and
sbb
jecxz
sub
xchg
jg
inc
cmpsl
icebp
inc
or
loopne
adc
mov
dec
fs
shrb
shrl
inc
inc
test
dec
cmp
in
dec
push
pop
cmpsb
xor
sub
inc
imul
pop
push
jnp
or
add
add
add
inc
movsl
lods
or
jg
mov
arpl
or
into
lods
rcll
repnz
dec
cltd
pop
imul
addb
stc
add
outsl
cmpsl
not
je
xchg
cmc
jae
and
mov
jp
or
push
ficoms
pop
stos
jne
add
das
gs
cmpsl
shll
cmp
leave
jns
into
rclb
dec
pop
mov
scas
xchg
fisttps
cmpsb
out
inc
and
je
mov
aad
rcr
and
sbb
mov
in
ret
lock
mov
add
sub
jbe
rolb
dec
out
or
jle
sbb
adc
cli
and
push
sbb
into
imul
stos
cmp
in
movsb
lcall
pop
lods
inc
sbb
les
fwait
mov
clc
imul
cs
sbb
xchg
in
sbb
adcb
mov
fdivl
mov
inc
pop
iret
inc
test
or
mov
inc
bound
jecxz
sbb
jae
lods
jg
cmp
push
sbbb
and
lock
add
xchg
mov
dec
mov
shll
mov
adc
push
sub
hlt
inc
xor
call
pop
repnz
loop
fidivl
and
cld
dec
ds
mov
inc
scas
lret
les
ret
vprotb
arpl
push
repz
dec
cwtl
into
inc
mov
idivb
into
and
mov
pop
test
stos
stos
mov
mov
sub
adc
icebp
addb
fildl
mov
cld
cwtl
in
test
push
jge
dec
xchg
or
cli
push
test
ja
ficoms
in
mov
sti
cmpsb
ret
imul
mov
xor
outsl
addr16
adc
adc
fistl
insl
push
mov
xor
bound
lret
jbe
cld
insb
dec
mov
sub
mov
mov
insl
inc
fdivl
mov
inc
xlat
and
jge
imul
out
jp
ficoml
jp
jp
das
pop
stos
int
repz
xor
pop
and
ss
ss
test
enter
mov
add
out
aas
js
lds
or
jmp
add
lret
xchg
and
push
cs
mov
inc
insl
frstor
sbb
in
sarl
inc
arpl
aaa
lret
ret
push
les
lret
out
xchg
mov
xorl
std
inc
sbb
cmp
inc
scas
push
push
arpl
sbbb
cmp
mov
jle
imul
cmc
cmp
push
sub
xor
xchg
std
jns
xorb
fsubr
mov
loopne
pop
fsubs
scas
pop
int3
adc
icebp
or
shll
lahf
jno
jg
xchg
inc
sub
push
js
loopne
push
mov
fdivs
out
sub
xor
sbb
movsb
sarl
sbb
lahf
pop
loope
jp
add
and
popf
jb
xchg
lods
in
inc
xlat
lock
cmpsb
or
shll
leave
push
or
orl
push
movsb
loop
cld
ja
cmp
and
sbb
jl
sbb
ljmp
cmp
and
clc
lret
outsb
mov
sub
inc
imul
adc
sbb
sub
sub
and
push
jns
ret
fisttpl
jno
inc
mov
ja
lds
jl
cwtl
mov
pop
xchg
pop
fwait
mov
movsb
add
lcall
cmpsb
leave
int3
pop
xlat
sbb
mov
sub
fdivrs
mov
jno
lahf
pop
sbb
je
xor
mov
lcall
jne
aas
mov
das
xor
je
fdiv
or
scas
lock
dec
cmc
lea
push
mull
inc
daa
push
stos
cmc
lcall
in
mov
notb
fdivp
adc
jb
loop
lds
popf
and
movsb
sar
mov
in
and
mov
pop
and
xchg
and
repz
fldcw
out
adc
repnz
pop
popf
sbb
dec
cmpb
std
mov
data16
loop
cmp
xchg
mov
shl
fiadds
popa
je
mov
mov
repz
push
pop
aaa
fwait
rclb
mov
lret
xor
cmp
sub
or
call
mov
and
shll
and
push
testl
fs
js
ret
mov
xchg
call
mov
dec
push
xor
cmp
mov
xchg
std
sub
xlat
ljmp
xchg
jne
ret
or
mov
or
nop
fmuls
mov
pusha
cmp
fbld
mov
sbb
mov
dec
daa
in
data16
pop
gs
loope
xor
pop
mov
popa
sub
dec
inc
int3
mov
jle
shl
clc
dec
push
popa
cmp
cmc
stos
imul
movsl
lods
cmc
mov
mov
in
dec
cmp
pop
and
adc
out
pushf
push
xor
sarl
mov
rorb
stc
mov
scas
pop
dec
mov
jmp
dec
lods
divb
mov
and
push
cmp
dec
aam
std
gs
jb
adc
or
jmp
std
inc
fildll
sbb
pop
pushf
pop
inc
outsb
inc
or
es
arpl
xor
xor
lods
aam
cs
ret
fisubrs
inc
insl
xchg
es
or
int3
aad
xor
les
xor
cs
or
xor
jnp
and
push
cmpsb
leave
nop
cmp
dec
jns
dec
imul
cwtl
sbb
in
mov
pop
insl
or
xor
test
pop
fcmovu
sti
mov
mov
or
mov
add
cmp
test
cmp
mov
and
and
insl
cmc
dec
pop
jg
xor
inc
mov
popf
rcr
lods
insl
jo
sbb
sub
test
loopne
cmp
ljmp
sbb
mov
fldcw
dec
fcompp
pop
in
inc
jno
xlat
popf
lods
cmp
lret
insl
stos
xor
add
lods
xlat
aam
xor
test
mov
sahf
pop
in
mov
fadds
jl
jnp
in
mov
xchg
or
or
fwait
mov
adc
std
call
negl
je
fidivrl
or
inc
add
test
test
test
rolb
mov
and
sbb
in
dec
stos
aad
sbb
cmp
mov
inc
stos
pop
sub
rorb
cmp
out
lock
mov
sbbb
push
addr16
ja
adc
mov
insb
push
out
lea
mov
mov
jbe
adc
and
jae,pt
xlat
lret
dec
je
stos
ret
cwtl
dec
test
leave
stos
neg
std
mov
cli
push
and
mov
movl
loopne
cwtl
rcr
add
dec
push
and
adc
fistps
sbb
pop
neg
xchg
lds
lahf
outsb
in
mov
dec
scas
mov
fwait
ss
repz
mov
fiadds
mov
cmpsl
lcall
fnstcw
cmpsl
cmp
jl
inc
xchg
iret
push
test
pop
insb
in
sahf
insl
je
mov
shll
mov
push
aaa
dec
pop
dec
or
js
negb
loopne
inc
testb
out
pop
mov
dec
test
out
fisubrs
xor
iret
fisubrl
lret
shr
jle
dec
out
jo
in
insb
es
in
dec
add
mov
jae
enter
jl
xchg
pop
aad
std
and
sti
xor
hlt
push
push
lcall
dec
in
fstpt
in
aaa
test
push
fsubrs
or
enter
in
mov
aam
and
fnstcw
bound
xlat
sbb
mov
xlat
aas
or
mov
lea
outsb
cmp
cmp
int3
ret
xchg
aas
in
outsb
cwtl
popa
dec
pop
sbb
loope
pop
loope
dec
push
out
mov
int
les
out
mov
xor
push
pop
mov
es
popf
insb
mov
xor
stos
mov
lcall
aam
ja
lods
sbb
lcall
movsb
jmp
testb
mov
push
mov
sub
loop
shrl
sbb
mov
cmpsb
aad
push
dec
jge
in
in
or
mov
xor
in
leave
scas
imul
mov
and
sub
mov
cwtl
insl
loopne
insl
xlat
repz
mov
std
fucom
icebp
out
push
sub
dec
xchg
ljmp
rcl
add
jb
in
cmp
insl
mov
out
mov
cmp
xor
dec
cmpsb
data16
hlt
in
ret
in
lods
mov
mov
subl
push
sbb
jb
xorb
lret
add
outsl
out
adc
inc
cltd
pusha
add
jno
call
mov
cmp
mov
lret
aas
daa
and
imul
mov
sub
lret
insb
repz
aaa
ljmp
lods
jne
lods
xchg
adc
and
iret
xchg
test
sahf
sbb
cs
jge
add
ds
stos
int3
mov
xchg
test
mov
pop
sahf
cmp
sahf
shlb
fiadds
or
push
bound
jbe
pop
loope
add
add
dec
or
test
out
testb
xchg
test
fmuls
aam
popa
push
push
mov
xor
loopne
loope
lock
shlb
mov
jnp
xor
fs
xchg
push
cmp
xor
fcomps
adc
cmpsl
setnp
repz
cmp
mov
rorb
repz
aaa
mov
sub
adc
inc
sti
sub
mov
cmp
jnp
sub
pop
pushf
jnp
lret
jp
lods
sub
xchg
pop
jne
test
call
repnz
cli
bound
test
ds
rcll
loop
add
adc
add
add
add
inc
inc
aad
xchg
or
xor
mov
in
add
or
jecxz
cwtl
xchg
add
ret
inc
popa
int3
push
mov
cmpsl
mov
aam
and
pop
rolb
or
add
mov
cmp
sub
jecxz
stc
lret
inc
jae
fs
add
push
movsb
sbb
hlt
mov
jns
dec
jne
mov
cmp
loop
mov
fs
fs
dec
push
xchg
and
jne
adc
sub
cli
xor
gs
sbb
jle
pop
or
test
sub
mov
shrb
movsl
mov
imul
call
repz
push
adc
mov
imul
cmp
js
clc
inc
scas
xchg
adc
xor
pushl
loope
lcall
pop
mov
xor
pop
xor
cmp
cmpsb
cmp
call
jb
xor
sahf
aaa
and
imul
je
je
add
mov
in
insl
and
test
int
pop
sbb
lods
sub
add
int3
pop
push
xchg
jecxz
mov
cmp
pusha
sbb
mov
in
ss
loop
dec
popa
je
pushf
dec
mov
hlt
sub
lock
inc
mov
test
xor
fldl
fdivrl
push
out
add
sub
push
das
inc
ret
xor
cwtl
nop
idivl
loope
lcall
dec
scas
add
push
mov
out
push
push
or
mov
pop
out
add
push
aad
xchg
in
rorb
popf
lods
mov
fidivs
scas
je
mov
and
mov
lods
ss
mov
enter
cltd
pop
and
shl
pop
sub
sub
push
in
sbb
cmc
icebp
js
push
push
and
push
mov
push
cmpsb
xchg
jmp
cmp
mov
testb
sbb
push
nop
iret
sbb
jbe
aam
ja
lea
pop
sbb
jnp
xchg
test
dec
sub
mov
sub
shlb
jbe
rorb
push
leave
cmp
imul
or
neg
push
mov
js
in
test
rcrl
popa
gs
ficoms
add
out
xchg
sub
lds
sub
and
lds
pop
ret
inc
jae
enter
pop
lock
icebp
mov
test
jne
test
test
push
cmp
mov
xchg
popa
inc
adc
popa
jge
sbb
pop
xor
mov
dec
mov
in
inc
sub
mov
div
loop
jl
push
fcompl
cli
sub
scas
mov
pop
insl
xchg
fisttpl
popw
inc
dec
mov
popa
loopne
lret
jl
inc
cmp
jns
test
pop
jle
pop
in
imul
add
pop
imul
pop
add
mov
adc
add
or
stc
mov
adc
clc
hlt
mov
or
jbe
test
roll
lret
xchg
scas
gs
aad
fisttps
out
aad
inc
xor
fcomps
pop
data16
mov
pop
lea
int
mov
test
and
aas
repnz
xor
xchg
icebp
mov
xchg
add
mov
xchg
mov
fsubs
and
and
je
pop
mov
ss
mov
inc
inc
cmp
inc
fildl
cmpb
mov
imulb
sub
rolb
ret
out
mov
repnz
jg
popf
jge
cmp
cmp
mov
cli
jle
fs
push
aaa
test
pop
call
rcrl
mov
adc
push
xchg
adc
inc
in
out
lcall
je
fldenv
xor
xchg
pop
jo
or
dec
lret
dec
jo
pop
fcom
xor
push
mov
fadds
jbe
add
push
sub
xchg
adc
cmp
mov
test
lock
pop
adc
pusha
inc
jg
movsb
pop
sbb
gs
jl
movswl
push
es
push
popa
xchg
in
in
in
fwait
aam
sbb
enter
inc
dec
ret
out
xchg
adc
xchg
and
and
stos
movsb
or
push
and
and
xchg
ds
negb
cli
mov
push
fbld
test
adc
int
shll
popf
sbb
mov
cli
sbb
mov
ja
mov
pop
ja
loopne
dec
popf
dec
aaa
dec
push
or
sub
test
or
jae
xor
lcall
mov
pop
push
jmp
subl
out
mov
cmpsb
and
pop
nop
adc
cmpl
fnsave
jo
cli
mov
xor
or
cmp
clc
enter
mov
push
sub
push
add
mov
js
mov
cltd
inc
repnz
aad
mov
call
gs
mov
cmpsb
xlat
xchg
xor
mov
cmp
pop
leave
scas
add
into
movb
jl
dec
mov
sub
mov
push
lock
fmuls
adc
fsts
rolb
test
mov
aaa
scas
mov
push
sub
iret
dec
cmp
jnp
push
mov
repnz
cld
lods
mov
call
jmp
arpl
jno
loope
movsb
ljmp
or
ret
xchg
and
cmp
daa
push
sbb
aas
jne
pop
or
sarl
jbe
stc
test
pop
dec
mov
es
es
sub
mov
jbe
inc
push
inc
mov
mov
jmp
dec
out
pop
sar
xchg
test
cltd
mov
adc
int
add
cmp
leave
add
sbb
xor
cmp
and
add
mov
jnp
into
and
dec
jbe
xchg
jl
sub
jns
pop
test
pop
pop
subb
jecxz
sbb
xchg
pop
cmp
mov
jnp
cmp
jecxz
mov
xchg
ss
cmpb
data16
jge
adc
xchg
shlb
push
xor
incb
cmp
mov
in
and
inc
in
in
call
mov
insb
in
push
daa
dec
std
xchg
sbb
mov
ljmp
fidivs
jo
adc
test
mov
and
dec
notl
pop
movsl
in
andl
xor
pushf
aas
dec
xchg
dec
inc
sub
outsb
cwtl
pop
lock
int
imul
sbb
sub
sub
add
mov
movb
lds
mov
pop
mov
ret
fcom
and
jp
loope
cmp
mov
dec
sbb
xor
lea
cltd
test
xor
pop
flds
xor
mov
add
mov
or
leave
into
xchg
enter
xchg
sbb
xor
mov
icebp
lcall
out
out
mov
cmp
cmp
and
imul
out
ret
push
mov
arpl
sbb
jl
push
push
pop
mov
loopne
adc
leave
dec
adc
and
out
data16
ret
fldcw
ljmp
sub
lods
push
orl
push
pop
push
xchg
cmp
sbb
jecxz
cmp
les
out
or
push
gs
jg
mov
xchg
jne,pn
fsubr
xor
push
sbb
out
mov
dec
push
adc
popf
push
add
fiaddl
jge
mov
sbb
or
add
inc
aas
sahf
xor
dec
push
xchg
adc
mov
adc
ljmp
pop
lock
mov
out
push
and
xorb
push
shl
lea
je
out
or
or
cmp
outsb
fwait
adc
dec
insl
std
dec
arpl
push
dec
dec
xchg
fisttps
lock
insb
or
imul
sub
jo
jl
jno
ljmp
iret
add
int
mov
pop
mov
jnp
adc
xlat
andb
sahf
hlt
sub
xor
push
aas
jnp
xor
fdivs
loopne
je
adcb
jmp
mov
cmp
xchg
push
and
or
ret
adcb
adc
dec
mov
and
mov
mov
and
inc
shll
cmp
shlb
xchg
push
sbb
inc
stc
test
leave
mov
or
test
push
push
mov
jnp
sub
jmp
outsl
ja
jo
sbb
in
test
push
adc
in
jg
stos
add
push
stos
aam
sti
add
std
pop
xchg
push
xor
mov
lods
sbb
loope
add
or
lahf
add
repz
hlt
enter
xchg
test
mov
cmp
or
push
mov
popl
out
jg
cmp
jl
fmulp
jecxz
fwait
ds
push
ds
in
std
mov
inc
into
cmp
cmp
push
jbe
jmp
rcr
movsl
sbb
into
add
jge
or
xor
adc
adc
shll
add
adc
aad
scas
cltd
jp
in
pop
lea
stc
dec
and
in
in
loope
loop
xchg
je
popf
cmp
cld
xchg
aaa
bound
dec
xor
add
xor
scas
jo
stc
pop
adc
clc
dec
sbb
sub
ljmp
jbe
nop
xchg
je
aad
sub
rorl
popf
push
popf
sub
mov
cmc
int
cmp
mov
mov
nop
cli
idivb
dec
push
cmp
jnp
leave
ficoml
scas
adc
stos
xchg
sbb
in
loop
add
ja
sub
cld
shlb
ret
and
add
shll
push
inc
stos
inc
in
repz
push
fsubrs
aas
push
aas
fucom
jno
aam
test
loopne
rol
jns
pop
xor
mov
cltd
imul
adc
cmp
jecxz
mov
pop
push
xor
sbb
lret
mov
cmp
jge
sub
subb
inc
pop
inc
push
aad
pop
sbb
and
sub
mov
ret
or
cmp
in
dec
rcrl
push
fwait
xor
xor
sbb
mov
popf
push
sahf
imul
ljmp
mov
sbbb
leave
and
fxch
jmp
ret
xchg
sarb
mov
loope
inc
popl
vpsraw
push
insl
dec
jno
dec
and
cld
push
adc
xchg
js
cwtl
adc
out
cmp
scas
out
pushf
dec
fldenv
mov
dec
cmp
mov
jl
scas
out
push
fisubs
cmp
fcompl
dec
ljmp
sub
mov
or
ds
mov
sbb
loop
sub
cmp
and
rcll
cmp
xchg
cmc
outsb
fdivr
inc
aaa
mov
mov
mov
aaa
sbb
cwtl
xor
or
xor
cli
mov
xchg
and
stos
cmp
xlat
or
sub
aas
push
out
leave
mov
and
jl
fdivs
sub
xlat
data16
mov
call
jne
and
lds
lods
push
aas
das
and
ss
bsr
icebp
shll
ret
test
xchg
int3
bound
imul
scas
sbb
bound
pop
stc
xchg
and
xor
testb
add
jge
mov
lret
mov
mov
mov
and
loop
sub
cmpb
in
mov
jo
test
jecxz
xchg
outsb
or
dec
outsl
push
cmp
pop
inc
pusha
in
mov
testl
mov
orl
int3
push
xchg
js
imul
and
mov
jnp
inc
adc
xchg
and
xchg
shr
test
fwait
push
js
sbb
pushf
sbb
push
push
fwait
push
jle
push
sbb
fidivrs
xorps
ds
xchg
and
ret
dec
stos
or
fimull
subl
popa
sub
adc
pop
sbb
data16
aad
push
in
xchg
imul
mov
cmpb
sti
adc
jmp
mov
icebp
test
cmp
xlat
adc
cmp
mov
mov
sub
pop
add
jbe
test
stos
pushf
out
cmp
cmc
stos
xor
jbe
push
sbb
dec
test
call
leave
push
rcl
push
enter
mov
fs
or
icebp
lock
dec
sti
cmp
lea
je
sbbl
in
sbb
xor
push
inc
jo
mov
sbb
addl
dec
mov
out
je
adc
ds
lea
imul
and
xchg
xchg
xor
loope
push
aad
fsubrp
lcall
lcall
test
jmp
push
xor
jb
xor
mov
adcl
cmp
pop
add
mov
push
mov
or
insb
sub
xchg
loop
add
rcll
ja
nop
icebp
shl
shll
xchg
pop
adc
jmp
xchg
movsb
movsb
ja
jb
js
push
loope
inc
out
cmp
push
addl
sbbl
fisubl
cld
shl
lods
xor
sbb
ret
add
sub
ja
push
test
lock
cmpsl
das
repnz
ret
test
mov
pop
and
aas
xchg
js
das
les
test
je
mov
xor
xor
addr16
push
sbb
fsubrl
jb
test
pop
sbb
lods
sub
subb
imul
hlt
in
or
call
lret
push
loop
mov
int
mov
xchg
or
pop
aad
lods
inc
insb
out
in
pop
cld
xor
mov
or
xlat
flds
out
add
jmp
adc
jo
mov
push
lret
mov
add
mov
jg
bswap
or
in
lds
jae
jle
push
test
jb
jnp
std
jp
daa
stc
xor
outsb
dec
cwtl
adc
lods
push
push
sbb
les
out
add
jbe
sub
cmp
cmp
pop
add
je
cmp
fidivrs
mov
mov
push
sub
jb
in
push
clc
stos
xlat
repz
adc
cmp
ja
push
outsb
scas
add
ret
or
aaa
jge
or
out
cmp
and
gs
popf
insb
incl
mov
cmpsb
and
pushw
and
cmp
ss
dec
je
lods
cwtl
mov
add
pop
jg
mov
cmpsl
gs
ds
adc
dec
ret
imul
and
mov
lods
mov
in
ja
test
dec
adc
ja
or
insb
loope
jo
sub
in
lcall
xchg
icebp
mov
and
cmpsl
loopne
aaa
adc
fstl
fsubrl
pop
mov
dec
dec
add
sub
jno,pt
out
mov
int3
or
adc
or
xor
push
pusha
jbe
and
pop
dec
mov
insb
mov
xchg
ja
push
out
test
adc
sbb
jne
js
nop
mov
cmpsb
push
xor
mov
jae
popf
pop
jnp
cmp
imul
xor
push
out
mov
pop
repz
sbb
xor
mov
gs
pop
shr
leave
pop
cmp
ja
jg
hlt
sbb
adcb
jge
mov
xchg
call
cmc
sbb
iret
clc
mov
or
pop
adc
push
icebp
sub
ja
pop
jg
inc
jae
cmpsb
add
inc
mov
mov
in
dec
rolb
inc
jae
add
call
fwait
jnp
aas
jge
inc
jmp
cwtl
dec
stc
insb
pop
sbb
mov
repz
and
movsl
fildl
mov
cwtl
cwtl
mov
adc
inc
cltd
cmpsl
jbe
and
arpl
subl
popl
push
fwait
mov
jo
xchg
xor
mov
sub
or
dec
sbb
and
ficoml
pop
call
xchg
pop
repz
or
sti
dec
dec
dec
rolb
push
gs
mov
fwait
js
or
call
sbb
adc
mov
xchg
andl
pop
xchg
mov
mov
sbb
vsqrtss
pusha
and
xchg
push
inc
ficomps
sbb
sbb
jmp
mov
add
jge
mov
sub
adc
cmp
inc
xor
scas
jge
pusha
out
lea
pop
sub
jne
or
sbb
sbb
aaa
lods
cmpsl
cmp
clc
or
adc
push
sub
fs
cmpsb
test
sbb
enter
ss
fs
loope
mov
cs
push
inc
push
testl
sub
mov
aad
inc
inc
stos
jmp
adc
jbe,pt
sbb
add
dec
arpl
arpl
pushf
lock
jecxz
pop
arpl
lahf
xor
or
xor
adc
cmpsb
xchg
jp
mov
inc
into
xor
ret
in
xchg
stos
pop
out
dec
sbb
adc
bound
adc
xorb
incb
pop
out
je
push
or
sbbb
push
std
mov
and
cmp
mov
cmpsl
lds
mov
add
push
push
mov
ss
out
cmp
jb
leave
scas
mov
cli
adc
add
es
stos
sub
xlat
mov
test
clc
pop
inc
or
inc
xor
pusha
inc
fisubl
jnp
movsb
test
in
pusha
xchg
mov
test
cmpb
xchg
xor
lds
inc
mov
sub
outsl
scas
jno
fmull
and
jp
jbe
pop
pop
xchg
iret
mov
sub
sub
cli
aas
lcall
mov
jb
lahf
shrl
ss
mov
js
lods
test
addr16
insl
out
das
mov
inc
sub
cli
outsb
ss
arpl
in
mov
add
sbb
adc
pop
hlt
addr16
and
data16
lret
add
push
jecxz
jb
pop
mov
pop
clc
dec
out
les
repz
rcll
lds
repz
bndldx
pop
cmp
pop
and
pop
pop
mov
insl
xchg
popf
shlb
and
jb
adc
xchg
andb
cmp
mov
les
cmp
mov
jecxz
cmp
dec
out
cli
fsubr
js
cmpsb
sub
fildll
out
pop
jo
rcrb
incl
dec
jl
dec
jo
es
jno
sub
and
fsts
and
jns
jp
jnp
aaa
icebp
es
lret
mov
inc
shlb
aas
and
dec
frstor
out
imul
inc
scas
int3
pop
jl
mov
lods
cli
fwait
pushl
mov
sar
ret
jg
pop
mov
sub
test
cwtl
sub
in
lods
sbb
aad
cmp
lds
divb
ljmp
dec
jbe
sbb
mov
sbb
inc
lods
sbb
lahf
dec
cltd
arpl
cmp
repz
pop
xchg
mov
inc
movsl
cmpsl
call
cmc
in
jp
inc
mov
xchg
mov
icebp
and
sbb
cs
jge
arpl
mov
inc
movsl
ja
jle
aaa
pop
insl
push
mov
fisubrs
xchg
dec
in
fwait
inc
jns
stos
std
cmc
sbb
jg
outsl
mov
pop
loope
shll
fisubrl
popf
in
into
sub
jecxz
imul
push
sub
lret
add
mov
mov
orb
stc
pop
inc
repnz
int
roll
scas
jo
push
pushf
loope
loope
xorb
jge
sbb
scas
int
das
sbb
mov
in
xor
fldt
sbb
std
hlt
dec
cmpsl
jl
paddusw
sar
inc
jp
int3
push
inc
xchg
pop
sbb
mov
aad
ret
pusha
push
scas
lahf
movsb
outsb
mov
in
cmp
sbb
sub
in
int
iret
sub
pop
add
add
and
mov
add
imul
in
push
in
cmpsl
jmp
fimull
shl
dec
fisttpl
adc
mov
inc
xor
fldt
ds
rol
lods
pop
nop
inc
jmp
fcompl
mov
fistpl
mov
adc
xor
dec
in
mov
xorb
rcrb
ret
mov
lock
in
pop
mov
inc
jmp
jno
xor
push
jo
loop
push
jecxz
loop
xor
mov
sbb
push
popf
lret
daa
push
or
aaa
or
cmpsb
jp
ficompl
mov
sub
js
into
js
fcomps
pop
outsb
test
mov
or
mov
int3
pop
call
movsl
insb
lret
cld
stc
jecxz
ss
add
push
cmp
and
ja
mov
jp
aaa
or
ljmp
adc
iret
push
mov
pop
js
fwait
add
hlt
lret
xor
enter
sbb
mov
xor
lds
in
push
sbb
xchg
in
pop
insl
mov
pop
jns
shrl
cmpsl
jae
mov
shlb
mov
test
adc
dec
outsl
mov
jl
add
das
inc
mov
outsl
pop
out
mov
adc
jg
in
pop
sti
ja
insw
fistl
test
add
add
cmpl
cltd
xor
mov
adc
lahf
aad
aad
inc
dec
testb
rorl
pop
int3
jl
push
and
xchg
or
pop
pop
stos
xchg
int3
jp
sbb
leave
sub
mov
push
push
scas
stos
icebp
sti
mov
repz
and
mov
fdiv
or
mov
push
fwait
sbb
dec
mov
xor
push
hlt
test
scas
dec
jge
pop
in
or
int
sub
or
notl
push
in
std
loope
adc
jg
mov
popf
adc
push
add
outsl
aam
into
pop
or
nop
shrb
loope
mov
fisubrs
dec
out
sahf
lret
dec
rcr
ret
xor
jne
jecxz
pop
pusha
pusha
jae
nop
mov
lret
cld
shl
or
in
insb
pop
jmp
sarb
out
sbb
mov
mov
ja
das
enter
fisubl
loopne
or
lods
mov
into
xchg
push
mov
mov
popa
insb
jne
cmpsb
inc
add
and
mov
and
mov
mov
lods
push
cwtl
jl
jns
out
loopne
repnz
sub
cmp
scas
dec
push
and
sbb
mov
mov
cmp
mov
test
adc
fists
fisubrl
jnp
out
push
test
movsl
fsubs
test
adcl
mov
in
sbb
pop
inc
xchg
sub
mov
xor
cmc
jl
ds
aad
jg
nop
add
les
mov
jne
sub
test
pushf
dec
sub
fisubs
jge
mov
out
subl
lea
mov
cmpsl
push
jmp
push
xor
mov
mov
cli
divb
and
cmpsb
add
aam
add
enter
jne
jbe
mov
aas
cmp
jns
inc
int
pop
pop
leave
sub
cltd
test
add
dec
mov
enter
cld
enter
stos
shll
cs
sahf
mov
mov
aad
jb
sub
int3
xor
xor
aas
scas
cmp
jp
cmpps
jl
in
cmp
gs
clc
dec
int3
shlb
xor
outsl
push
ds
lret
fadd
push
hlt
jbe
imul
cmpsb
cltd
dec
jecxz
int3
dec
aas
and
fldenv
fstpl
sbb
pusha
gs
inc
pop
sbb
sbb
push
repnz
adc
loopne
xchg
xchg
xchg
pusha
add
cld
xor
arpl
xlat
in
push
imul
leave
fs
mov
aad
or
xchg
dec
iret
cmp
stos
dec
dec
mov
dec
mov
popf
arpl
cmpsb
out
icebp
jnp
pusha
and
mov
inc
mov
mov
imul
sub
push
jo
sbb
faddl
mov
lcall
out
shll
mov
and
xor
mov
mov
jnp
scas
jae
sbb
lret
xchg
fnsave
xorb
movsl
push
idiv
rcrb
lods
and
out
lea
xchg
aaa
or
sbb
inc
dec
js
sbbb
fdivs
das
cltd
lret
ja
add
push
mov
cwtl
shrl
fldcw
jmp
pop
out
push
xchg
pop
int
stos
dec
mov
lods
inc
add
mov
mov
fmull
adc
sub
vpmacssdqh
iret
pop
es
imul
fnstsw
jno
lea
push
adc
imul
sbb
pop
mov
ret
adc
push
and
cld
sub
mov
out
enter
or
xor
push
test
aam
pop
call
cmp
ljmp
je
jae
xlat
outsl
mov
sti
fisubrs
mov
test
dec
rcrl
push
movsl
in
push
in
negb
sub
pop
insb
or
into
cmpsb
inc
out
xchg
imul
into
sub
outsb
xor
jp
pop
lcall
mov
pushf
xlat
and
dec
daa
sbb
pop
mov
in
xchg
orb
inc
jne
mov
insb
jp
push
test
and
insl
xor
data16
or
mov
push
movsb
push
rcrb
mov
cli
rcrb
cmp
pop
mov
fiadds
xor
mov
push
add
shll
jb
jae
mov
push
jns
fcmovnbe
js
in
dec
inc
sti
adc
jp
adc
cmp
push
push
mov
lret
add
call
cmp
mulb
mov
sti
pop
jno
cli
mov
fstl
push
xchg
mov
icebp
filds
cmp
inc
insl
sub
stc
movsb
inc
or
fmull
aad
xchg
imul
and
pop
bound
faddl
icebp
push
mov
jl
int
mov
dec
cltd
je
jge
sbb
mov
sbb
out
out
daa
xor
ret
pop
cmpb
popf
jae
jge
adc
jbe
pusha
nop
lret
xchg
mov
popf
popa
and
jae
mov
mov
arpl
shrl
daa
inc
or
enter
lcall
cmp
cmp
enter
sub
push
addb
movsb
lods
push
sbb
pop
dec
repnz
stos
and
add
push
xor
mov
and
es
cmpsl
jmp
test
sub
sub
xor
jnp
scas
data16
fsubrl
lds
push
or
repnz
mov
pushl
and
inc
loop
adc
mov
repnz
ret
jmp
sub
lds
ja
andl
fs
lret
sbb
aas
or
enter
les
pop
cmp
imul
mov
jb
pop
shll
mov
xor
fs
mov
pop
test
mov
pop
jae
cwtl
adc
les
adc
in
js
mov
les
sub
dec
dec
lret
mov
inc
xchg
xchg
mov
mov
xorl
sbb
push
jl
mov
pop
add
mov
cmp
scas
mov
add
add
xlat
lock
sbb
mov
adc
sarl
ljmp
loop
int
cmpsl
popf
js
inc
cmc
mov
subl
pop
imul
addb
mov
aas
jmp
gs
lcall
xor
in
imul
mov
into
or
and
shrl
aas
pop
repz
xor
sbb
mov
mov
arpl
add
or
addr16
enter
jmp
jp
fnstcw
insl
push
pop
pusha
mov
mov
dec
out
mov
movsb
xlat
dec
mov
lds
cmp
outsl
xchg
ljmp
cmp
mov
frstor
add
inc
cmp
aaa
shr
lods
lea
lret
inc
xchg
lock
push
ss
arpl
pop
mov
ret
outsl
hlt
movl
sbb
sub
pushf
lret
lea
mov
mov
inc
imul
cwtl
push
inc
push
adc
ret
sub
jg
out
dec
pop
xor
insl
cld
pop
out
pop
dec
inc
jg
in
aam
rorb
mov
add
dec
aaa
mov
push
dec
dec
fstps
jge
cmpsb
sbb
int
jle
mov
jbe
pop
xchg
add
and
lds
mov
ret
push
icebp
add
stc
popa
das
xchg
inc
xchg
out
inc
mov
incb
sahf
in
fidivs
incl
cs
cmpsb
js
insl
ror
xchg
mov
mov
push
jl
hlt
xor
pop
pushl
loop
fsubp
lcall
jg
xchg
pop
gs
repz
popa
outsb
inc
xor
fcom
loope
addr16
xor
mov
cmpsl
pop
cwtl
scas
in
xor
push
inc
cltd
imul
test
aaa
pushf
sbb
and
mov
sbb
dec
and
pop
inc
nop
push
sbb
sub
cmp
and
jno
mov
jecxz
sahf
imul
cwtl
cltd
jp
rclb
inc
clc
mov
test
fldcw
std
movsl
add
push
xor
cmc
sub
push
daa
xor
repz
imul
fcompl
in
cmp
jnp
dec
xor
mov
mov
push
cmc
ljmp
fs
mov
loopne
pop
jg
xor
ficoml
jo
sti
mov
sbb
add
dec
dec
imul
mov
or
pop
repz
push
xchg
xchg
or
loopne
and
shlb
idiv
icebp
xchg
mov
or
pop
mull
xor
outsl
popa
sbb
test
push
test
sbb
ss
popf
cltd
push
test
adc
push
bound
xor
push
pusha
mov
cld
dec
sets
clc
xchg
fs
inc
sbb
imul
dec
mov
jo
mov
lret
push
xor
mov
pop
sarb
pop
inc
pop
xchg
lock
push
cmp
xor
add
push
adcb
les
leave
lcall
or
adc
lea
sbb
sub
es
into
jbe
inc
sbb
adc
sub
sbbl
test
gs
jmp
lcall
jl
popf
inc
sub
fbld
jmp
cmp
js
inc
xor
mov
gs
lds
sbb
mov
cmpsb
mov
or
jb
inc
push
ret
sahf
or
pop
push
jb
xorl
mov
aad
sbb
xor
outsl
sbb
xchg
adc
pop
sahf
in
cmp
mov
icebp
hlt
mov
lods
mov
pop
xchg
add
les
sarw
mov
mov
jmp
ret
cltd
scas
add
in
imul
add
mov
out
push
mov
mov
insl
push
fsubrl
std
or
xlat
sub
jmp
bound
add
mov
xchg
push
pop
inc
clc
loopne
inc
xlat
xchg
je
lahf
popa
cmpsl
enter
jl
xchg
xchg
cmpb
scas
dec
pop
xchg
cltd
mov
ss
xorl
and
movsb
mov
xchg
loope
je
xor
pop
add
inc
mov
xor
mov
xor
lret
movsl
cli
xorl
sarb
pop
std
cmp
loope
xchg
jbe
insb
lret
mov
test
dec
es
test
cmp
pop
lock
mov
mov
subb
mov
mov
aaa
out
and
add
mov
ret
dec
sbb
push
ret
mov
hlt
cwtl
push
js
pop
nop
inc
rorb
mov
dec
and
cwtl
mov
fdivp
loop
inc
enter
fildl
push
pusha
inc
movsb
jae
cld
dec
xchg
ds
stc
popf
sub
inc
cmp
fstl
shr
dec
jnp
cmc
dec
lods
ja
jo
loop
fs
sub
mov
mov
pop
sbb
lcall
push
or
mov
shrb
mov
arpl
xchg
lcall
pop
cmp
sbb
test
add
push
int3
mov
and
addr16
mov
cwtl
test
mov
jns
pop
and
mov
mov
test
xor
jne
ljmp
mov
leave
or
aad
pop
out
push
mov
ss
aad
dec
into
cmp
xchg
fldl
test
pop
loopne
aad
cmp
out
jmp
adcl
test
lods
push
mov
inc
lret
mov
cmpsl
inc
outsl
int
shrl
and
shlb
cmpb
cmc
bound
addr16
xor
inc
std
int
add
arpl
xchg
stos
loope
and
ret
xlat
movsl
mov
mov
mov
lods
aaa
out
daa
push
mov
sub
test
add
xchg
mov
ret
dec
loope
sub
adc
shlb
jne
fidivs
xchg
pop
sub
push
popa
lea
inc
xor
int
icebp
or
data16
mov
in
inc
repnz
sti
inc
sbb
adc
sub
xchg
sub
ljmp
adc
ret
mov
mov
mov
mov
jae
stos
dec
ja
jp
add
ja
sub
pusha
pop
add
xor
cmp
cmpsl
mov
and
push
jns
fs
les
insl
frstor
mov
into
add
frstor
lret
clc
cmc
xor
mov
sti
sbb
inc
lds
ret
mov
adc
mov
inc
insb
mov
cli
sub
popf
rorl
les
jb
pop
xchg
pop
imul
xchg
jae
mov
pop
fnstsw
cmp
pop
mov
push
mov
stos
inc
dec
repz
daa
dec
inc
sbbb
dec
pmulhw
adc
jbe
and
mov
mov
jge
psubb
sub
nop
sahf
out
xlat
dec
xor
mov
stc
inc
add
and
push
add
inc
sbb
lret
sub
test
loope
subb
inc
stc
fstpl
in
adc
xor
inc
or
leave
clc
push
xor
inc
cmc
insl
pop
cmc
xchg
mov
outsl
cwtl
push
sbb
repnz
loop
xor
cmpsb
rcll
jb
pop
fnstenv
es
or
adc
arpl
fs
pop
xor
sub
or
lods
cs
lods
js
repnz
in
and
and
out
out
rclb
jbe
test
pop
rorb
xchg
aam
xchg
lods
jnp
or
adc
mov
aam
and
leave
sub
xor
adc
push
mov
stos
js
push
aad
sbbl
mov
pop
add
add
xor
test
inc
das
jmp
imul
inc
scas
je
lcall
flds
add
ds
pusha
in
in
and
scas
sbb
rclb
pop
shrl
or
mov
fldenv
insb
data16
aaa
push
fs
test
out
sbb
mov
mov
bound
addr16
jp
idivl
sarl
cltd
xchg
or
std
mov
pop
pop
sbb
and
aas
inc
or
mov
sahf
in
push
xchg
cmp
cmp
jb
cmp
xchg
mov
cmp
mov
sub
dec
inc
fisubrs
stos
pop
xchg
cmpsl
les
sub
aam
xchg
pop
lret
jne
or
mov
in
outsl
sbb
rorl
pop
jecxz
iret
rorl
add
lahf
xchg
xor
mov
int
pop
nop/reserved
imul
and
loop
adc
dec
jnp
fstpl
ror
sbb
lods
xchg
js
cmpsb
lods
mov
mov
test
gs
call
mov
rep
stos
push
rcrb
dec
mov
cwtl
aaa
icebp
mov
ds
sahf
mov
adc
loop
pop
sbb
in
out
repz
mov
pop
mov
mul
mov
cwtl
pushf
xchg
sbbb
inc
xor
adc
call
cmp
xor
xor
jne
out
test
ss
push
or
or
hlt
dec
das
jae
jg
sahf
jmp
xchg
lahf
cmpsb
fisttpll
sbb
sbb
imul
xchg
adc
pusha
lock
mov
test
scas
and
cmpsb
aam
and
sub
paddb
lods
stos
jb
inc
imul
xor
sbb
test
cltd
cmc
jecxz
or
fs
push
fucomp
inc
adc
jno
xchg
aaa
push
lods
or
popf
test
xor
jb
mov
jecxz
mov
dec
test
sub
mov
js
mov
into
pop
jmp
lea
mov
xor
push
stos
jecxz
fisubs
sti
jns
add
dec
push
shll
mov
jl
inc
adc
jl
mov
in
push
xor
out
mov
and
rclb
cwtl
call
mov
icebp
lock
jo
cmp
dec
mov
pop
dec
outsb
or
xchg
jp,pn
scas
adc
and
sbbl
movsb
xchg
fs
les
jb
mov
pushf
divl
fildll
inc
clc
movsb
push
iret
push
lcall
inc
push
addr16
rcr
pop
outsl
imul
jp
push
xchg
push
test
mov
ss
sbb
lcall
loop
xchg
jl
xor
and
adc
sub
adc
jmp
xor
testl
push
sub
ljmp
xchg
dec
adc
cmpb
add
repz
dec
inc
int
out
mov
test
sbb
pop
jne
insb
lahf
pusha
xchg
jns
lahf
test
jmp
xchg
xor
push
adc
jl
mov
cs
mov
mov
subb
sbb
xchg
ud0
sub
ds
mov
xlat
je
hlt
xor
es
or
orl
mov
in
aad
mov
int3
fistpll
scas
jns
call
sub
push
pop
dec
mov
pushf
sbb
and
xchg
pushf
jo
lods
mov
aaa
jnp
mov
dec
not
jmp
out
faddp
data16
sub
push
xor
xorl
bsf
popf
and
xor
push
adc
pop
dec
cwtl
imul
js
into
lock
cmp
jle
cmpsb
pushf
aam
das
mov
clc
loopne
pop
mov
subb
outsl
jns
mov
ss
xchg
mov
or
pop
clc
sub
clc
xchg
sbb
sub
push
cli
insl
jp
ljmp
scas
ss
adc
mov
mov
mov
jno
and
jno
fisttpll
mov
jno
lcall
loop
dec
jnp
dec
sti
and
add
adc
pop
stc
mov
pop
std
in
cmp
insb
push
lods
mov
pop
mov
pusha
mov
mov
inc
push
mov
test
clc
push
add
push
cmc
add
and
sbb
shll
daa
xchg
adc
ret
rcll
test
pusha
les
rcll
lcall
xor
and
cmp
and
imul
lods
add
js
pop
mov
call
inc
mov
sbb
dec
fcoml
xchg
mov
aad
insl
jo
pop
add
jg
push
cmpsb
and
aad
cmp
shrb
push
fstl
lods
add
pusha
das
into
addr16
fs
mov
mov
mov
and
mov
cs
popa
or
inc
xor
stc
movsl
add
add
out
out
and
cmp
sub
mov
xchg
iret
inc
out
cmp
sbbl
rcr
or
scas
fldt
ljmp
fadd
imul
js
loopne
repnz
daa
sbb
pusha
mov
aas
xchg
pop
pop
inc
mov
repz
and
jmp
xchg
pop
add
push
mov
jnp
ds
dec
aam
mov
and
andnps
dec
sbb
mov
sub
js
testb
xorb
mov
int3
aas
js
or
not
adc
rcll
imul
push
mov
or
inc
mov
out
adc
jo
lret
pop
shrl
mov
sub
sbb
adc
cltd
inc
sti
or
in
pop
adc
outsb
hlt
cmp
cltd
jo
jne
mov
pop
or
mov
rol
mov
les
mov
jo
cmp
fwait
add
pusha
add
imul
out
cmp
sarl
inc
xor
xchg
push
add
shl
mov
inc
gs
enter
xchg
lods
dec
test
xchg
cwtl
aaa
jecxz
lret
and
out
cmc
aam
movsl
cmpsl
xor
mov
out
cmp
mov
call
sar
cs
push
dec
xor
ja
in
mov
nop
repz
mov
push
xor
dec
push
xor
lea
cmp
jo
jge
addr16
push
int3
filds
xor
lock
scas
addr16
scas
lods
dec
inc
jb
stos
popa
loop
cvtps2pi
pop
sti
lret
cld
or
xor
jne
bound
inc
pop
pop
cmp
call
rcrb
mov
testb
enter
lds
mov
dec
mov
mov
int3
or
outsb
pusha
in
cmp
mov
jns
addr16
outsb
xor
cmp
scas
xchg
mov
sub
cmc
lds
lds
je
pop
cmc
icebp
jne
adc
sti
je
add
test
inc
xchg
fld
jns
push
clc
jb
cmp
or
mov
addr16
xchg
mov
clc
mov
pushl
xor
jne
lcall
mov
inc
gs
pop
adc
pop
movsb
outsl
cmp
loope
mov
sbb
aaa
sub
lock
pop
inc
fs
mov
push
xchg
pop
mull
mov
xchg
lock
in
lahf
lds
mov
enter
test
jmp
add
das
add
cmp
icebp
repnz
xchg
insb
ficoml
lock
sub
xor
xchg
fwait
xchg
aaa
das
sub
dec
mov
mov
pop
rcrb
sub
ss
rcrb
out
xchg
inc
push
out
sbbb
fisubl
imul
push
cld
shrl
bnd
fsubl
insl
out
addl
push
lret
into
push
jecxz
and
outsb
and
add
xchg
popf
pushf
cmpsb
aas
dec
push
or
xor
fnstcw
adc
mov
in
cmpsl
mov
push
push
push
pop
outsb
outsb
in
add
xchg
xor
rcll
pushf
mov
data16
jg
xor
sbb
fistpl
scas
popa
dec
scas
adcb
adc
or
arpl
mov
sub
pop
or
bound
jp
push
sbb
jecxz
pop
sub
loope
dec
int
push
mov
call
xchg
mov
sti
or
mov
adc
sbb
test
adc
xchg
cmp
mov
sarb
bound
ret
xor
mov
push
add
inc
mov
inc
dec
ja
test
dec
and
mov
sti
or
pop
in
pop
ja
jne
out
mov
pop
sub
fmull
mov
add
jle
jmp
pop
repz
jnp
subb
mov
orb
add
pop
xchg
es
pop
adc
xchg
nop
xlat
sti
sub
mov
sub
notb
andb
push
pop
dec
lret
adcl
pusha
push
add
adc
ret
push
js
sbb
mov
outsl
pushl
in
and
and
push
ljmp
mov
dec
int
into
fs
mov
outsl
dec
pusha
pop
and
push
stos
or
fisubrl
xchg
mov
or
out
fldl
leave
adc
jbe
push
in
jge
lods
xchg
outsb
dec
jl
outsl
cmp
outsl
xchg
jnp
inc
xchg
adc
sbb
cmp
pop
dec
rcrb
imul
lahf
sbb
mov
ror
pop
fistpl
jp
imul
add
outsl
mov
shll
orb
sbb
into
or
jnp
sbb
lods
sub
in
jmp
dec
mov
xchg
add
adc
inc
dec
pushf
push
xor
mov
insb
loope
and
mov
xchg
cmpsb
or
and
mov
mov
aaa
pop
lock
ss
rcrb
iret
stos
cmp
xchg
jle
fs
stos
mov
lret
sbb
ja
fsubrs
or
pop
adc
lods
jl
push
lret
hlt
es
mov
imul
insb
aas
lret
pusha
lret
js
fs
fidivs
mov
roll
push
dec
sahf
dec
insb
sbb
fimull
out
adc
xor
mov
mov
fnstenv
xchg
ljmp
hlt
dec
adc
push
jge
repnz
cmc
orl
sbb
rorl
inc
xchg
dec
and
inc
add
fst
bnd
int3
mov
cmpl
iret
int
ret
je
cltd
pushf
mov
push
pop
mov
fs
cmp
das
pop
mov
adc
adc
add
movsb
lods
jg
cmpsl
push
das
pop
xor
testl
lods
repnz
and
xchg
ja
pop
lahf
and
arpl
xchg
push
sbb
mov
cmpsl
xor
lret
pop
scas
hlt
or
cmp
add
ljmp
adc
inc
sub
or
shll
sbb
xchg
cmp
test
lods
add
or
mov
xor
mov
cmp
xchg
jne
mov
adc
gs
clc
inc
inc
stos
ret
in
add
sub
fisubs
sbb
outsb
cmc
ret
repnz
xchg
imul
adc
ret
filds
int
repnz
aam
push
xlat
inc
push
cmp
push
into
mov
add
fwait
loop
out
pop
shrl
cmpsb
add
pop
xchg
test
repz
dec
je
outsb
dec
push
dec
push
xchg
sbb
push
push
int
mov
cmp
mov
mov
xchg
xor
in
or
push
mov
jmp
popl
xchg
xchg
shlb
xchg
js
adc
pop
loop
cmp
or
xchg
lea
adc
loop
adc
or
inc
xchg
adc
mov
std
sub
xor
push
push
ja
xor
daa
mov
mov
setno
jmp
xchg
in
xchg
pop
and
adc
mov
add
mov
subl
cmpsb
push
pop
mov
or
jno
jge
or
dec
push
data16
out
scas
rcrb
jns
lahf
push
adc
popa
adc
mov
fimuls
addr16
out
xchg
jb
mov
fnstenv
out
push
fwait
iret
insl
adc
sarl
test
sar
and
mov
mov
ljmp
test
or
ljmp
ret
fildll
sbb
add
fisttpll
inc
lods
cltd
pop
je
pop
jns
xchg
fimuls
push
adc
call
cli
addb
mov
xor
xor
push
inc
js
jle
in
or
pop
inc
add
push
mov
mov
test
push
lea
inc
mov
mov
lds
hlt
ror
cli
cmp
fidivrl
mov
lds
push
dec
mov
cld
pop
pop
in
jo
pop
jge
mov
repnz
js
rcrl
jno
mov
mov
orl
adc
dec
fsubrl
add
inc
mov
lods
cmp
fsincos
xchg
pop
and
leave
push
mov
nop
mov
mov
stos
icebp
add
inc
jl
push
rcl
jp
testb
add
mov
push
xor
add
stos
clc
jmp
fbstp
or
movsl
clc
mov
and
jo
dec
sbb
push
jmp
or
push
sub
push
inc
inc
jge
mov
pop
push
pop
adcl
stc
cmc
shll
cltd
push
xor
int3
sub
pop
in
inc
fwait
mov
fcoms
cmpsb
arpl
lret
sahf
dec
cltd
hlt
fldt
loope
shl
adc
stc
sub
pop
es
fidivrl
mov
jl
popf
and
jns
pusha
clc
movsb
movb
mov
movsl
xchg
inc
fwait
mov
push
cwtl
loopne
in
xchg
adc
stos
push
test
mov
hlt
cmp
jecxz
jl
pop
fwait
shll
in
rclb
sub
test
loope
test
and
jbe
inc
push
pop
arpl
cwtl
adc
add
and
cmp
je
mov
xchg
fwait
dec
pop
add
scas
stc
mov
jnp
jbe
int
mov
out
aas
push
mov
cwtl
inc
repz
icebp
mov
sti
test
xor
out
cmp
or
fmull
xchg
mov
and
jge
enter
in
mov
in
push
js
jns
js
dec
shlb
sub
or
aad
dec
sub
addr16
in
scas
dec
push
sbb
adc
out
xor
xchg
mov
cmp
insl
cwtl
pop
outsb
or
xchg
xchg
pop
sub
movb
pop
add
sbb
sub
es
jbe
adc
hlt
lock
imul
aas
mov
sub
pop
xor
nop
shr
mov
in
mov
cltd
lret
std
jno
outsb
xchg
pop
std
push
add
or
jbe
xor
lea
dec
add
or
inc
adc
aaa
cmc
mov
call
aam
mov
fldl
popa
sti
sub
lret
xor
sti
or
cmp
aam
cmp
adc
pop
fistps
cmpsb
sarl
and
dec
lcall
mov
insl
aas
lret
shlb
push
fsubrs
push
sub
jnp
mov
cmp
outsl
cld
or
leave
aas
or
xchg
lock
lods
jbe
pop
cwtl
sbb
cmpsl
movsl
mov
mov
mov
lock
addl
shll
enter
adc
in
sbb
shl
mov
dec
fs
in
dec
pop
add
movsl
mov
or
xlat
cwtl
fs
out
cmp
outsl
or
adc
outsl
cld
out
fs
pop
xchg
xor
imul
ss
pusha
js
sub
sub
add
push
xor
xchg
push
sti
xor
mov
mov
nop
dec
fmuls
cmp
insb
pop
and
push
not
dec
push
push
cmp
mov
je
mov
sub
lds
movsb
or
jp
pop
or
ja
xor
or
jge
bound
push
and
js
push
movsl
popf
dec
pop
xchg
mov
dec
sub
jge
jl
mov
and
pop
js
cmp
hlt
sbb
out
xor
mov
testb
out
xlat
scas
pmullw
add
mov
inc
cmp
add
in
nop
testb
push
ds
shrl
aas
out
cmp
mov
mov
sbb
lret
mov
in
pop
or
lock
add
negl
in
sub
mov
and
test
xchg
and
stos
nop
mov
adc
enter
hlt
mov
stc
sbb
mov
sbb
xchg
paddsb
xchg
adc
cltd
les
in
jge
jge
jmp
inc
scas
or
es
loop
mov
sbb
rcr
ficomps
fxch
cmp
jbe
sub
inc
pop
scas
xor
repnz
mov
fmull
in
mov
push
jmp
dec
inc
into
pop
aad
mov
outsl
cmp
mov
test
std
cmpsb
iret
and
fwait
mov
mov
repnz
in
ds
mov
pop
jns
int3
cmp
test
xchg
lret
or
dec
idiv
push
loope
mov
sbb
lock
jle
and
sbb
push
popa
lcall
adc
and
int
adc
ja
jmp
pop
push
incb
bound
test
jbe
inc
clc
xchg
fidivrs
das
push
add
mov
dec
jb
out
add
inc
xchg
stos
pop
mov
outsb
mov
jb
das
pop
ret
or
shlb
adc
xchg
mov
mov
outsl
cmp
mov
lea
jb
or
addl
mulb
cmp
jp
lods
mov
cmpl
push
hlt
cmpsl
jecxz
add
ja
pop
mov
aad
aaa
nop
cltd
mov
inc
mov
xchg
jae
mov
in
in
or
mov
jge
sub
lods
hlt
je
mov
or
mov
out
inc
mov
inc
div
inc
dec
sti
cld
dec
mov
lds
adc
and
fidivrl
push
push
push
xchg
mov
sbb
push
test
popa
and
fidivrl
pop
sbb
std
or
sahf
in
and
xor
in
fcoms
das
cwtl
add
mov
icebp
test
fsts
push
mov
mov
clc
mov
inc
push
pop
decl
xchg
dec
push
shll
ss
xor
insl
scas
iret
xchg
add
loop
or
outsl
mov
mov
push
roll
sahf
sti
jle
ror
or
shl
push
lock
cmp
push
cmpsb
inc
mov
arpl
pop
dec
or
dec
mov
xchg
mov
and
into
fsts
stc
and
mov
pop
ficoms
dec
push
jge
stc
cmp
mov
xchg
xchg
jmp
sub
cmpsb
call
das
sbb
das
lahf
mov
push
lds
popa
fldenv
dec
sub
pop
sub
arpl
jns
sub
jb
mov
shlb
icebp
mov
dec
je
imul
jg
jp
push
add
cld
sub
lods
in
inc
xor
mov
cmpsl
cmp
fldcw
dec
cld
adc
jmp
pop
mov
or
cltd
or
lock
and
inc
jmp
adc
ds
pop
stos
jne
mov
les
ret
fucom
jae
sti
jg
pop
std
xchg
adc
push
test
xlat
imulb
and
in
pop
cmp
push
lahf
cmp
pop
in
adc
jmp
out
sar
ljmp
add
xor
push
inc
call
fisttpl
push
imulb
imul
push
push
adc
jl
test
insl
cmp
mov
xor
and
xor
fmuls
adcb
ljmp
cmc
adc
stos
mov
push
sbb
clc
bound
xor
sub
test
adc
fiadds
mov
jb
mov
std
and
daa
mov
out
inc
popa
insl
push
or
cltd
pop
inc
push
neg
sbb
push
push
std
pop
repnz
pop
leave
push
or
xor
jmp
gs
sub
jmp
push
push
int3
stc
ljmp
xor
ljmp
xor
mov
cmp
adc
pop
filds
ss
or
sbb
fsts
iret
mov
stc
jno
iret
push
mov
inc
xor
sbb
dec
out
andl
call
push
add
rol
stos
adc
adcb
les
or
nop
push
repnz
xchg
sahf
les
out
test
popa
out
sub
mov
out
jae
and
mov
mov
jb
stos
cwtl
adc
xor
ds
out
fwait
push
js
loop
mov
lea
xchg
inc
mov
xchg
xchg
mov
sub
leave
add
xchg
jo
pop
push
and
push
loop
inc
and
into
insb
lea
push
nop
cmp
and
clc
jno
push
in
mov
xchg
adc
jge
test
inc
clc
mov
fnstenv
sub
jl
sub
jmp
vpshlw
popa
mov
and
inc
decl
lahf
ret
push
pop
test
addl
mov
xor
imul
push
pop
or
repnz
rclb
pop
loopne
or
sub
loop
jno
xor
cmp
mov
pop
xlat
fiadds
add
outsl
fnstsw
push
mov
mov
pop
pushf
jg
jl
inc
stos
jb
or
adc
push
out
pop
sbb
mov
xchg
ret
es
jb
xlat
mov
xor
jne
testb
je
clc
int3
mov
xchg
pusha
dec
gs
ljmp
pop
enter
popf
add
icebp
movsl
movl
mov
pop
cmp
fninit
sub
daa
jle
push
adc
jo
ret
jbe
bound
js
jo
lods
jne
mov
pop
movsl
mov
or
add
xchg
or
pop
sbb
cs
jge
aaa
or
add
stos
int3
inc
ret
ror
ret
jne
ss
into
dec
test
outsl
popa
divl
inc
or
cmpb
popa
mov
data16
loope
fisubs
lahf
lods
scas
bound
jge
dec
dec
ss
cmp
mov
ljmp
das
cmc
stos
mov
int
push
enter
insl
scas
push
sbb
add
mov
out
xor
movsl
aad
jge
rcl
push
xor
jnp
mov
fistps
daa
sarl
xor
adc
sar
lahf
push
ds
sub
jb
mov
nop
lods
das
lahf
stos
cmpsb
fwait
into
lods
aas
mov
int
repz
rcrb
fdiv
sahf
pop
shlb
push
xchg
xchg
xchg
xchg
scas
pop
roll
lock
nop
fadd
push
sub
jo
das
adc
out
or
push
inc
xor
sbb
add
push
ljmp
push
xchg
stos
aad
daa
outsl
push
jle
push
jbe
adcb
mov
shlb
hlt
jbe
lds
dec
cmp
pop
or
mov
xor
push
pop
jmp
cli
sub
pop
cwtl
test
dec
add
test
fwait
jo
out
outsl
aas
test
imul
dec
sbb
test
or
movsb
mov
push
mov
cmp
pop
xlat
andl
push
mov
lret
adc
testb
testl
aam
test
fs
fstp
shrl
fstps
sub
dec
push
test
inc
lods
push
xor
or
lahf
stc
mov
pop
mov
or
fimull
int
add
cmp
or
dec
and
xorl
lahf
hlt
aaa
mov
test
push
mov
mov
pop
mov
sub
lea
cltd
insb
scas
or
mov
outsb
push
add
inc
dec
mov
pop
push
xor
jnp
mov
cltd
push
xchg
xchg
test
sbb
mov
in
mov
push
and
inc
jmp
test
add
pop
jns
lea
add
jnp
into
lahf
sbb
dec
into
sbb
mov
mov
mov
mov
cmp
daa
outsl
jg
jne
pop
dec
lods
jmp
sbb
lock
sbb
cmp
sbb
mov
jbe
inc
cmp
imul
pushf
sbb
ret
incb
xchg
push
pop
adc
and
push
clc
call
mov
and
loop
jbe
and
dec
enter
loop
sbb
daa
pop
out
fs
ffree
aaa
pop
insl
xchg
loope
mov
xor
addl
std
push
in
cs
arpl
cltd
pop
nop
pushf
pop
jne
lahf
xor
adc
adc
test
in
clc
jge
jb
scas
xchg
push
rorl
xor
in
mov
fisubrl
xlat
xor
outsl
adcb
or
or
cli
int
xor
neg
adc
repnz
cmc
loopne
jge
pop
sti
fsts
out
jns
and
push
fdivrl
les
int
aad
jmp
inc
dec
fcoms
insb
aas
and
mov
sub
int3
xor
sub
jns
pushf
ret
repz
out
xor
into
or
inc
sub
xor
xchg
loop
mov
data16
ja
jmp
loop
sub
gs
pop
xchg
and
sbb
addl
lret
xchg
sbb
sti
loop
cmpsl
lcall
sub
in
jmp
jns
adc
scas
cmp
fisubrs
aam
pop
jae
pop
shrb
xchg
int
dec
sub
leave
sbb
dec
pop
push
hlt
fnstcw
push
inc
cmpsb
sbb
movsb
in
xchg
test
in
pop
int3
push
jmp
xor
pop
lods
sti
mov
repnz
cld
inc
mov
push
orl
test
or
rclb
addb
jg
xchg
jnp
popa
loop
cmp
mov
dec
stos
int3
fcom
mov
sti
in
movsb
push
fwait
push
rcrb
enter
cmc
adc
sarl
pop
imul
je
test
notb
mov
addr16
lcall
call
pusha
call
int3
pusha
dec
lock
mov
jnp
repz
aaa
cli
std
addr16
xor
aaa
shlb
push
sub
int3
xlat
in
inc
inc
mov
repnz
enter
jne
ja
stc
fsubrs
and
pop
xor
mov
mov
mov
out
insb
mov
mov
cltd
lret
lret
movl
dec
vpackssdw
ror
add
and
push
aas
push
mov
movsl
test
sub
pop
adc
je
sub
push
cwtl
push
das
dec
rorl
adc
gs
add
jnp
inc
pop
fbstp
dec
adc
int3
call
sub
js
pop
pusha
cmp
pop
clc
pop
addr16
lods
mov
pop
fsts
lods
test
int3
pop
lock
sbb
adcl
pop
in
adc
pop
in
mov
cmp
mov
adc
mov
cmp
adc
inc
cld
xlat
nop
pop
pop
pop
cmc
sarl
mov
inc
inc
xchg
jb
mov
testb
inc
jecxz
jp
add
and
mov
pusha
push
iret
stos
jns
loop
bound
andb
jbe
jge
jle
hlt
arpl
add
shl
xor
pop
jae
cli
iret
push
and
cltd
icebp
inc
fldl
stos
mov
cwtl
cmp
ror
fsts
push
adc
add
in
loop
rorl
cld
mov
push
shrl
out
in
add
or
cmp
inc
pop
pop
cmp
or
push
mov
lret
mov
xchg
loope
ljmp
scas
js
cltd
cmp
jnp
mov
adc
loop
insb
sbb
hlt
jno
cmp
push
es
mov
out
dec
inc
dec
in
inc
lret
shr
mov
sbb
and
nop
negl
pop
mov
adc
push
aaa
jl
xchg
fsts
dec
leave
out
mov
dec
test
out
cmpsl
pop
movsl
or
je
icebp
jge
mov
loope
addr16
cmc
cmp
inc
cmp
dec
pushw
btr
icebp
and
fcoms
sub
sub
repnz
loope
dec
xchg
or
adc
xchg
or
shlb
xchg
fcomp
call
arpl
mov
sub
push
test
lds
xchg
cmp
mov
dec
pop
xor
mov
xchg
mul
das
sbb
out
mov
mov
mov
inc
dec
pop
xchg
mov
mov
cmp
sbb
mov
es
push
fidivrs
fnsave
insl
mov
mov
mov
repnz
aad
inc
push
ljmp
sti
in
adc
divl
les
loope
mov
jae
mov
gs
in
aaa
or
fsubs
lea
scas
push
mulb
dec
add
cmp
dec
dec
mov
ret
mov
decb
mov
mov
jbe
dec
loop
into
push
xor
test
idivl
scas
hlt
scas
daa
add
jb
ja
inc
movsl
loope
test
enter
lret
stos
jp
push
cmp
xlat
pmullw
or
jo
jmp
mov
adc
jle
pop
pusha
rolb
pop
xchg
xchg
pop
cmp
mov
sbbl
insl
insl
cmp
loope
btr
test
add
push
lods
xchg
lea
sbb
push
arpl
jle
mov
imul
cmpsl
dec
jb
fldln2
movsb
test
push
call
sarb
cmp
push
jg
xlat
or
arpl
negb
push
adc
inc
aam
js
into
int
gs
out
xchg
shlb
mov
pop
and
int
jmp
sbb
dec
xor
das
fstpl
xchg
fcmovnb
inc
cmc
movsb
adc
mov
es
sub
sbb
in
stc
xor
dec
push
add
xor
sbb
xchg
jmp
rorl
jmp
cmpb
lea
pop
outsb
stc
pop
mov
cmc
pop
mov
sub
pop
scas
push
and
adc
hlt
push
enter
mulb
leave
imul
jge
movsb
lods
jo
fidivl
mov
pop
test
mov
fwait
das
mov
push
adc
aaa
xor
add
sbb
stos
xchg
dec
std
and
or
jmp
scas
or
and
push
punpcklbw
xor
shlb
and
fwait
in
mov
mov
mov
jo
xchg
add
mov
fisttpl
adc
pop
mov
xor
add
cmp
rcrb
mov
das
mov
call
jp
je
push
sbbl
rcr
or
cs
das
std
out
mov
sbb
pop
inc
ds
sub
sbb
adc
gs
ljmp
mov
cs
js
loopne
call
or
xor
mov
push
pandn
fsubrl
push
inc
cmc
lea
shll
mov
sbb
sbb
pop
scas
iretw
ret
jle
dec
or
mov
faddl
shll
lea
mov
jmp
jmp
adc
addl
repz
cld
add
pop
jmp
lods
out
incl
sub
movsb
push
mov
add
cltd
or
mov
jp
mov
ljmp
scas
mov
ds
call
cmc
inc
test
xchg
or
mov
jecxz
ja
cld
jno
test
fadd
jns
dec
mov
dec
cmpsl
lds
ss
jae
daa
aas
add
dec
jns
repnz
mov
lods
xchg
outsl
imul
data16
pop
fcmovnbe
xchg
cltd
pushf
mov
fldt
adcb
dec
jmp
dec
pop
mov
xchg
in
les
jle
xor
dec
insb
push
scas
fwait
and
movsl
out
insl
or
and
sub
nop
inc
std
push
stc
pop
sub
mov
adc
add
cltd
rorl
rorb
pop
and
xor
xchg
aam
xchg
mov
mov
xchg
push
in
and
insb
inc
pop
lea
nop
sub
push
cmp
sub
push
push
int3
push
test
inc
shl
lcall
jae
jp
mov
jmp
ljmp
xchg
push
lret
lcall
xor
insl
push
or
mov
test
int3
or
push
or
cmpsb
arpl
divl
icebp
jb
js
jae
mov
daa
mov
jne
xchg
sbb
xchg
cmp
pop
jns
ds
push
push
std
test
xchg
xlat
cmpsb
mov
scas
popf
mov
jp
hlt
jbe
das
cli
sbb
ljmp
sub
insb
lcall
stc
lret
mov
cmpsl
jnp
mov
aaa
idivl
mov
bound
jnp
pop
cmpb
pop
push
xchg
sbb
addr16
imul
inc
enter
push
cmpsb
or
and
psubusb
xor
shrb
push
jl
movb
sbb
pop
fisttpll
add
pushf
dec
lock
cmp
rclb
dec
mov
hlt
dec
out
push
jmp
sbb
mov
adc
jecxz
clc
stos
xor
std
aam
outsl
dec
repnz
fcmovb
adc
sbb
filds
fstl
or
jns
loope
insl
imul
mov
mov
test
jmp
mov
mov
test
push
cltd
cwtl
int3
cwtl
mov
inc
fisubrl
aam
jne
adc
mov
dec
mov
test
push
imul
cmpl
outsl
inc
cltd
lods
or
mov
icebp
jg
jno
xchg
jg
shl
xchg
iret
xchg
test
jmp
in
inc
push
das
or
fsubl
rcrb
fs
movsl
xchg
dec
inc
inc
bts
pop
call
lea
out
mov
ljmp
fbstp
and
imul
pop
and
jo
pusha
mov
xchg
and
stc
pop
jmp
sti
sbb
lahf
pcmpgtd
subb
inc
cmp
stos
jns
pop
pop
popf
daa
lret
sti
jae
icebp
lods
jmp
push
pop
cmpsb
lahf
fisubrl
push
add
lods
push
cmpsb
mov
pushf
dec
jns
add
xlat
les
or
imul
bound
add
test
sbb
xchg
jbe
adc
stc
xchg
mov
adc
cmp
jbe
popf
or
ret
cmc
ficoms
mov
js
incl
scas
add
mov
xchg
or
jne
push
push
outsb
dec
adc
dec
rolb
sbbb
jle
push
orl
mov
push
push
lods
cmp
lods
int
ja
adc
fwait
pop
cli
popf
jnp
iret
jbe
add
jle
jbe
lret
ja
inc
out
int
hlt
test
aad
sub
and
jle
ja
pop
mov
outsl
inc
cli
idivb
lret
sub
xorl
insl
push
mulb
push
cmp
dec
mov
push
add
mov
int
push
adc
or
mov
cmp
xchg
sbb
orl
mov
ficoml
jbe
stos
dec
mov
mov
fcomps
stc
insl
and
xchg
inc
cmp
outsb
add
jne
pop
insb
ljmp
addr16
das
or
pop
adc
sbb
retw
fs
xor
jg
mov
push
push
outsb
cmp
leave
orb
repnz
sbb
scas
lods
int
outsl
jno
xchg
aam
dec
xor
inc
icebp
push
mov
jge
je
mov
push
push
or
addb
aaa
stos
mov
dec
mov
xor
mov
sbb
movsl
mov
mov
aad
xchg
into
popl
xchg
shll
xor
ja
jl
fcoms
pop
ja
push
sub
daa
std
push
int
jmp
ds
das
inc
sbb
leave
mov
fsubrp
rclb
cmc
inc
mov
repnz
or
adc
mov
xchg
pop
or
jle
out
fwait
mov
arpl
cmp
sub
ffreep
pop
xchg
sti
mov
and
cmp
sbb
dec
fimuls
adc
out
jns
hlt
mov
gs
pop
mov
addr16
pop
jno
mov
shr
je
int3
mov
inc
xchg
lcall
out
add
cmc
pop
test
mov
sub
xchg
fsubrp
outsl
int
out
mov
aam
jns
and
xchg
jmp
sub
sbb
and
sub
shrb
jg
clc
add
bound
cmpsb
test
pop
cld
jo
cld
cli
xchg
sahf
cs
push
test
mov
cwtl
mov
sub
xchg
sub
lock
daa
or
sti
inc
xchg
sub
mov
add
aas
lods
shlb
leave
pop
cmc
xor
inc
dec
jl
cwtl
lret
add
inc
out
cld
out
xchg
hlt
adc
cmp
dec
fsubr
xchg
add
hlt
fdivl
fisttpll
jl
xchg
jecxz
adc
push
fcomps
leave
mov
xchg
das
adcl
mov
jmp
mov
test
sarb
scas
dec
stos
lcall
js
test
out
adc
rolb
and
mov
sbbl
lret
sbb
push
mov
push
iret
in
mov
xor
pop
sahf
xor
adc
scas
into
nop
mov
lods
pop
std
and
mov
aam
fistpll
pushf
mov
movsl
movsl
addr16
fnsave
loop
std
data16
pop
insb
mov
out
pop
dec
add
jbe
jle
push
push
daa
xchg
sbb
sbb
cmpsb
push
orb
pop
xor
lret
fistpl
stos
andl
mov
fistpl
in
ret
mov
mov
jae
mov
std
add
ret
shll
push
mov
push
dec
imul
bound
rcrb
stos
inc
test
rsm
movsl
bswap
inc
fdivrs
call
mov
test
mov
sahf
and
push
js
lods
pop
and
mov
push
jecxz
push
mov
jp
out
inc
xlat
xchg
test
aaa
cmp
es
xchg
cwtl
test
lcall
jle
int
hlt
cmp
mov
in
imul
lahf
fnstsw
lds
add
addr16
xlat
int3
xor
mov
fmuls
mov
xchg
loop
or
mov
dec
jnp
mov
movb
mov
movsb
add
cwtl
mov
loopne
ffree
fnsave
pop
xchg
sub
mov
aaa
pop
sub
loop
xchg
pusha
mov
pop
dec
add
sub
and
orl
inc
xchg
push
sub
pop
lods
jg
jg
and
call
pop
mov
xchg
mov
icebp
cltd
fdivs
es
jg
sbb
push
adc
cmp
sbb
je
mov
or
cmpsl
jns
popf
rorl
rcrl
ja
mov
xor
loop
ficomps
daa
push
ljmp
mov
daa
loopne
or
cmpsl
pop
xchg
inc
push
out
into
pop
repnz
adc
cmc
adc
lahf
pop
mov
fisubrs
mov
xchg
int3
outsb
or
dec
push
lcall
das
lock
loop
outsb
jae
xor
sub
xor
dec
int3
sahf
lea
dec
jl
orl
sti
push
lods
xchg
sub
mov
lret
and
jecxz
push
loope
sub
sbb
mov
inc
aaa
pop
stc
pop
outsl
dec
mov
dec
xchg
mov
pusha
loop
cld
or
dec
faddl
repz
sbb
jne
lahf
ja
mov
movsb
ds
aaa
mov
cmp
lock
jae
hlt
sbb
mov
loope
jno
xor
xor
or
jecxz
in
cmpb
sbbl
pop
cld
sbb
cs
gs
or
inc
dec
cmp
xchg
or
in
add
aas
push
cmp
mov
push
push
pop
in
pop
mov
mov
or
fisttpll
cli
popa
jns
sbb
sub
stos
in
mov
out
pop
mov
or
hlt
cmp
xchg
sbb
pop
sti
sub
sarb
lret
out
fs
lock
xchg
leave
bound
xlat
push
sbbl
inc
scas
and
mov
cmc
pop
leave
out
cwtl
cs
add
ret
shrb
pop
notb
rcr
pop
ret
rorb
and
dec
scas
add
fdivl
in
sub
jo
test
sub
test
outsl
cmp
add
popf
jp
mov
jp
and
cmp
outsl
cmp
out
std
mov
fnsave
push
sbb
loopne
jmp
test
in
lcall
xchg
add
mov
inc
stos
pop
fcmovb
imul
filds
push
adc
test
sbb
call
pop
cmpsb
ret
aad
addb
jb
loop
movsl
xchg
out
push
cwtl
sbb
xchg
and
call
or
pop
mov
je
loop
popf
inc
sub
pop
or
sarb
into
push
popf
xor
rol
dec
test
jp
in
lods
hlt
sub
stos
adc
pusha
in
test
sbb
iret
rcll
inc
fld
clc
pop
bound
lods
data16
mov
das
cmova
mov
push
insl
leave
jp
mov
scas
fwait
push
loope
popa
in
sbb
mull
adcl
fnsave
push
ret
aam
repz
add
sbb
dec
jmp
loopne
aas
or
daa
adc
jo
test
mov
in
jmp
test
orb
cmp
mov
cmp
sub
into
pop
out
aam
push
xchg
dec
jmp
mov
xchg
addr16
jno
stc
push
push
jge
push
insl
mov
aas
inc
ja
adc
insl
adc
push
mul
ljmp
mov
adcl
pop
sbb
xchg
int
pop
mov
xor
rcrb
pop
imul
or
lcall
enter
or
mov
fisttps
add
jno
jbe
ljmp
shlb
stc
adc
cmp
cmp
gs
mov
mov
clc
daa
sbbl
jno
call
xor
repnz
sarl
js
loop
int
inc
imulb
mov
pop
ret
sub
sub
and
in
int
pop
mov
mov
sbb
xchg
mov
repz
cs
jmp
adc
popa
jp
mov
ds
inc
sbb
xchg
mov
add
loope
in
cwtl
roll
dec
shll
xor
pop
xchg
and
leave
fdivl
adc
sub
cwtl
outsb
push
dec
loopne
outsl
jmp
mov
es
and
lock
inc
repnz
aad
xchg
hlt
push
pushf
cmp
xchg
mov
mov
pushf
mov
cmp
and
inc
jmp
hlt
pop
test
test
aad
adc
ret
and
shll
and
jae
or
in
pop
pushf
jecxz
daa
into
scas
xchg
cmp
adc
icebp
cmpsb
push
pop
call
adc
xchg
push
pop
repnz
jecxz
add
fdivrs
push
and
cmpsl
push
lcall
add
and
pop
out
xor
mov
pushf
out
and
roll
xchg
lahf
cmp
inc
popf
lret
fsubrp
dec
push
arpl
in
sub
xor
dec
cmp
fcmove
add
rol
mov
jl
push
int
dec
sub
lock
cmp
lret
xchg
imul
jno
insl
call
xor
cmp
into
xchg
sub
cs
repnz
dec
xchg
popf
lret
xorb
fs
rorb
sub
lret
test
out
out
outsb
push
enter
mov
pop
cmp
andb
das
cmc
xlat
aaa
jle
pop
sbb
lret
jmp
push
decb
and
and
jbe
aam
or
ljmp
popa
xchg
adc
mov
sbb
ja
push
mov
sub
orb
sub
ret
or
stc
das
daa
pop
jbe
jbe
pusha
dec
sub
pop
mov
mov
adc
lahf
sub
sahf
sbb
mov
mov
lret
xorl
sti
ljmp
jmp
add
imul
pushf
push
cld
jo
jge
call
mov
adc
dec
mov
mov
repz
sbb
pop
push
fsubrp
mov
fcomps
lahf
nop
mov
xchg
jecxz
xchg
jne
mov
sbb
xor
push
repnz
mov
lcall
sbb
sub
test
cmpsl
lea
std
das
add
jg
pop
in
rolb
leave
fwait
dec
push
ret
mov
xor
aad
pop
in
xchg
dec
xchg
jecxz
or
mov
adc
jbe
mov
test
cwtl
push
adcl
aad
fdivrs
imul
stc
push
popa
in
cwtl
add
mov
mov
test
pop
fnstcw
in
nop
lret
mov
into
mov
mov
jns
xlat
hlt
jno
loope
cld
add
test
leave
pop
test
iret
sbb
out
xchg
std
adc
xor
sahf
cs
fisttps
movsl
loop
ja
mov
repz
fldenv
fdivs
repz
cmp
add
push
mov
mov
jmp
xor
cmp
inc
push
bound
outsb
repnz
inc
lcall
out
scas
pop
xchg
stos
popf
iret
jl
into
lcall
lret
jecxz
inc
movsl
std
mov
testb
scas
pop
addr16
mov
push
xor
addl
and
dec
lds
fdecstp
out
sub
iret
xchg
js
dec
clc
stos
pop
scas
gs
sbb
jl
jmp
repz
vaddps
sahf
jl
jae
fistpl
sub
addr16
clc
cld
push
dec
icebp
jle
xor
xchg
jo
cmp
test
inc
test
xchg
mov
aad
cwtl
cmpsl
add
out
popa
sbb
addr16
push
sbb
insb
enter
mov
loop
arpl
dec
out
enter
cmp
or
scas
stos
and
sarl
pop
aaa
mov
xchg
imul
xlat
mov
fnstenv
adc
mov
loop
sub
arpl
stos
xor
mul
pop
adc
icebp
rolb
jnp
add
lret
sarb
loop
clc
mov
or
mov
setae
loop
xor
je
inc
sub
imul
jmp
cmp
leave
or
xchg
aas
xchg
movsl
dec
add
jno
aam
addl
mov
cmpsb
loop
fisttps
push
insl
arpl
std
mov
loopne
ja
lea
push
mov
dec
stos
icebp
hlt
jg
sbb
sub
mull
outsl
ret
lret
jl
push
or
iret
push
cmc
or
and
aaa
pop
add
sbb
hlt
mov
inc
and
jp
push
ret
sbb
repnz
lods
shl
repz
cmovle
addr16
lods
sti
sbb
xchg
cmpsl
cmpsl
push
add
xchg
mov
adc
rcrl
mov
adc
push
sbb
and
popf
dec
orl
dec
lret
js
test
or
mov
xchg
cmp
sub
dec
mov
mov
mov
jns
xor
outsl
mov
mov
flds
loopne
cltd
sbb
sbb
jmp
bound
sub
lods
imul
inc
xorl
test
in
and
add
push
jge
jp
popa
mov
lds
sarb
lea
aad
loop
pop
mov
outsl
dec
js
out
mov
in
sahf
faddl
cli
std
out
xor
pusha
mov
hlt
cmovp
mov
ret
adc
jo
sbb
and
sti
sbb
mov
daa
daa
adc
nop
pushf
cmc
mov
mov
mov
fcoml
fwait
xchg
loop
repnz
lahf
insb
data16
mov
enter
daa
mov
and
jb
ss
cld
adc
fisttpl
icebp
int
push
mov
or
scas
push
push
push
fisttpll
sbb
lea
xor
adc
add
push
sbb
xchg
cld
cwtl
jb
push
jge
sbb
pop
pop
or
fsub
sub
out
lds
add
mov
xchg
notl
or
mov
pop
dec
pop
fxch
pushf
gs
pop
scas
mov
aad
cmp
cli
xchg
lds
in
jns
mov
or
mov
push
mov
orl
orl
out
dec
movsl
lods
jle
mov
decb
je
lret
jo
push
jnp
stos
out
add
ret
mov
call
push
imul
sub
sub
pop
shl
mov
fidivs
call
test
loopne
in
nop
xor
cmp
test
rclb
sarl
adc
or
jb
xor
aam
pop
sbb
cmp
sar
test
fdivp
xor
add
push
mov
xchg
loop
or
mov
mov
hlt
or
hlt
imul
pushf
sbb
xor
subl
push
mov
pop
std
or
shrb
add
and
sbb
stos
cltd
testl
mov
dec
int
test
mov
push
jno
pusha
mov
xchg
push
jge
aas
mov
arpl
sub
test
popf
sub
imul
and
dec
sub
xor
mov
mov
leave
and
push
les
mov
jne
rolb
lea
mov
xor
outsl
lds
xor
or
dec
sbb
mov
dec
call
jb
stos
dec
mov
inc
imul
iret
sti
lea
push
inc
inc
addr16
cmp
dec
sbb
cmc
movsl
aam
pusha
inc
verw
or
gs
jne
jg
pop
push
stos
insl
push
push
es
inc
sub
xor
dec
mov
jns
dec
loope
xor
imul
xchg
lds
xchg
lret
xor
xchg
jb
add
repz
push
mov
movsb
jle
jnp
adc
inc
lods
adc
mov
cmp
clc
rcl
shll
lock
or
xchg
and
addr16
push
outsb
jle
pop
mov
mov
repnz
lods
push
out
jecxz
adcl
pushf
push
jg
jmp
mov
in
fcoms
arpl
or
sbb
push
test
and
cwtl
sbb
popf
movb
je
frstor
xchg
xor
push
sub
and
push
imul
into
ffreep
popf
sti
pop
movsb
dec
adcb
outsl
scas
mov
push
mov
cmp
pop
iret
ss
mov
test
js
loop
sub
js
dec
mov
into
pop
xchg
lcall
push
dec
push
shlb
mov
loopne
mov
fimull
push
scas
xchg
xchg
fwait
mov
cs
cmpb
aam
sahf
adc
xchg
or
sbb
push
test
int3
or
bound
rcrl
fldpi
bound
cli
psubusw
nop
lods
test
gs
pop
pop
lret
push
das
cmpsl
and
xchg
dec
push
or
dec
mov
xor
and
cmc
or
repz
lahf
int
adc
mulb
pop
imull
pop
aas
dec
inc
movsl
mov
movsb
push
xor
dec
push
xchg
test
xchg
aad
inc
xor
cli
loopne
pop
jno
sbb
loopne
shrb
aaa
mov
lods
xchg
sti
in
pop
inc
sbb
inc
sbb
std
dec
loop
jge
mov
sub
iret
enter
imul
or
xchg
ret
dec
inc
cmp
insl
mov
test
dec
push
pop
mov
lahf
fsubrs
xchg
jge
fildl
cmc
dec
ret
fidivrs
icebp
jle
stc
shll
and
push
cli
sarb
cmp
gs
mov
jb
adcl
into
inc
cmpsb
or
or
mov
scas
sbb
ljmp
pop
mov
andb
pushf
lods
and
mov
jmp
cmpl
adc
filds
pusha
jmp
cmp
mov
sub
mov
mov
dec
scas
xor
jo
cmpsb
sahf
rcrb
popa
mov
sbb
inc
pop
clc
leave
loope
fwait
inc
mov
in
jae
xor
pop
mov
das
push
jb
mov
mov
lock
stos
cmp
lahf
cltd
loope
in
pop
add
enter
cmp
ds
ret
cmp
hlt
out
adc
add
inc
xor
mov
nop
sub
fcoms
dec
insb
xor
cs
loopne
add
ja
fisubl
sbb
cmp
popf
punpckldq
cmp
rolb
aad
loop
aas
arpl
cmpsl
notb
jmp
ret
mov
aas
cmc
push
mov
movsb
mov
fs
pop
dec
add
lar
subb
inc
in
jbe
xor
sti
cmp
sbb
xchg
lea
adc
nop
cmc
jecxz
popa
sub
mov
mov
pop
outsl
sbb
add
lret
fs
pop
repz
data16
pop
or
or
or
xor
loope
loopne
adc
jae
push
popf
push
mov
cmc
dec
xor
ljmp
and
mov
imul
je
mov
inc
lret
xchg
sub
pusha
and
jb
mov
ljmp
and
sub
rol
sbb
mov
jmp
jbe
hlt
shrb
jg
je
imul
dec
mov
sub
mov
xor
das
sarl
pop
pop
andb
mov
adc
ficoml
or
hlt
mov
inc
fdivrs
cmp
inc
hlt
aaa
test
loop
in
mov
scas
or
enter
scas
adcl
sahf
cwtl
ficomps
dec
loop
fisubrs
jo
push
fsubrp
fcmovu
shrl
xchg
jae
aaa
jb,pt
movsb
sbb
test
fcmovnbe
add
rcll
xchg
jg
pop
mov
into
push
imul
rclb
adc
sub
xor
jbe
mov
mov
shll
out
in
outsb
dec
jae
pop
sbbb
cmpsl
adc
xchg
or
cmp
or
push
mov
aam
mov
sbb
movsb
push
leave
test
sub
add
mov
sbb
inc
pushf
ljmp
xchg
pop
adc
popf
mov
outsb
push
add
xchg
dec
sub
out
xchg
imul
jecxz
adc
push
jge
jg
and
out
xor
and
or
call
aaa
pop
add
jbe
sub
or
xchg
jmp
cmp
cwtl
adc
dec
adc
sub
repnz
inc
or
adcb
xchg
dec
push
je
fdivrs
mov
test
lcall
and
cmp
mov
jns
mov
dec
jle
mov
in
sbb
dec
jae
xorb
ljmp
sahf
and
push
jp
add
int3
shll
xchg
jecxz
inc
dec
jns
push
pop
xor
fdivl
call
and
inc
pop
cmpsl
jp
pop
xlat
mov
mov
cmp
xchg
cltd
lcall
es
inc
xchg
add
shrl
lahf
fcmovb
pop
adc
inc
xchg
mov
push
cwtl
mov
pushf
and
popa
or
or
and
and
dec
test
inc
xchg
xorb
in
mov
fst
push
lds
rorl
and
xchg
sbb
dec
enter
jb
xchg
dec
sbb
es
sbb
hlt
inc
dec
iret
lock
sbb
and
adc
imul
out
daa
mov
mov
mov
xchg
mov
filds
mov
insb
add
insb
or
xor
adc
dec
dec
mov
jae
imul
jmp
jp
out
rcll
xchg
pop
ljmp
int
or
push
dec
mov
loopne
pop
call
negb
dec
xchg
and
cmp
jmp
mov
jo
sub
push
ss
insb
and
inc
clc
iret
add
inc
pushf
mov
sbb
xchg
xchg
lcall
sbb
sti
inc
fsubr
ficoml
enter
dec
xchg
cmp
sti
xchg
jb
ja
push
ljmp
cwtl
out
pop
movsl
adc
in
test
adc
or
lcall
ficompl
adcl
cmp
mov
cmc
in
lret
aad
stc
fdiv
xchg
cltd
js
scas
aad
push
dec
pop
loopne
shr
shll
jecxz
jae
int3
outsb
sbb
ljmp
dec
xor
sbb
mov
out
shll
stos
test
mov
or
fiaddl
xor
jae
push
insl
xchg
sub
lds
popa
rcl
adcl
fs
std
jno
outsl
stc
out
dec
pop
mov
jl
add
es
and
arpl
xlat
cmp
sahf
repnz
pushf
adc
xchg
mov
or
xlat
mov
cmp
add
mov
fmuls
js
jbe
popf
push
mov
mov
xchg
xorb
stc
pusha
adc
test
ja
outsb
mov
pop
in
subl
push
int
shrb
push
decl
psrld
jnp
mov
push
xor
ret
pop
mov
push
gs
mov
sbb
or
imul
aam
popf
or
arpl
popa
inc
popf
xchg
xchg
bound
fiadds
fimull
mov
or
jbe
mov
clc
pop
js
sub
in
mov
cmpl
jne
pop
mov
mov
jbe
push
out
adc
cmpsl
pop
xchg
movsl
rolb
sbb
mov
mov
xchg
outsl
mov
stos
enter
cmp
push
sub
aas
jb
mov
inc
loope
mov
div
cmp
adc
ret
jp
xor
mov
cmp
cli
loopne
jge
movb
dec
movzwl
xor
cwtl
std
push
cmpsb
inc
mov
xor
jg
das
inc
mov
aaa
push
or
jnp
pop
mov
and
pushl
or
xlat
faddl
aam
pushf
cmp
jns
or
popf
stos
dec
fcomp
inc
cmp
adc
lods
sub
stc
adcb
adc
push
sub
mov
ficoms
mov
shl
test
aam
xor
shlb
aad
scas
push
dec
nop
incl
ss
jb
push
decb
xchg
fcos
jnp
imul
xchg
gs
push
lea
lods
push
imul
mov
inc
mov
popa
add
sub
jo
ret
loop
int3
iret
sub
inc
mov
push
push
lahf
sub
mov
subl
sub
movb
negl
or
popa
and
mov
fisubs
xor
pop
js
fadds
and
adc
pop
fistl
sub
out
sbb
jbe
or
push
add
mov
imul
movsb
imul
stc
xor
mov
jb
lods
insb
sbb
icebp
popf
insl
outsl
sub
ror
cmp
ss
lea
out
test
daa
jno
mov
jge
popl
js
sbb
cltd
xlat
sub
add
mov
mov
sbb
adc
sbb
push
inc
lret
outsb
xchg
pusha
mov
xor
dec
pop
mov
mov
popa
dec
inc
mov
dec
faddl
movsb
push
dec
pop
inc
xchg
lret
cmp
sub
das
ret
ss
cld
sub
xor
sbb
int
pop
fcoms
ret
mov
inc
dec
or
lods
orl
mov
dec
outsl
inc
xchg
insl
not
lds
pop
xchg
repnz
mov
xchg
test
aas
inc
rol
movsl
xchg
dec
push
cltd
lods
cld
mov
mov
adcl
outsb
mov
inc
clc
lock
into
xchg
add
sbb
adc
dec
mov
cmpsb
pop
inc
pop
mov
fstps
lods
addb
adc
lods
sbb
cmp
aad
lock
xchg
sbb
mov
mov
fdivrs
lea
sub
neg
xor
icebp
addr16
iret
test
popa
adc
inc
jnp
push
and
sbb
cmc
jg
jo
pop
add
xchg
xor
and
mov
in
ss
loope
repnz
out
imul
es
xor
push
inc
testl
xlat
mov
mov
je
adc
fcomi
and
sbb
lcall
repz
pop
pop
dec
ljmp
pop
inc
mov
inc
aaa
insb
test
cmc
pop
sbb
dec
mov
add
xchg
cltd
pop
ficompl
sub
cmp
sub
pop
xchg
mov
or
fmuls
mov
imul
cmp
cltd
ja
inc
and
cmp
fnstsw
lret
daa
xchg
aad
iret
lret
sahf
leave
inc
std
xchg
std
repnz
cmp
mov
mov
outsb
jmp
push
or
sarb
lea
out
sbb
jno
ret
mov
repnz
sahf
cltd
mov
loopne
mov
mov
pop
push
cmp
push
cmp
add
jnp
xchg
cmp
scas
mov
insb
add
jmp
rorl
add
cmp
lea
push
addr16
sar
sbb
scas
fs
dec
and
xchg
push
cwtl
dec
jge
sahf
xorl
into
cmpsl
adc
in
add
daa
mov
inc
fidivrl
hlt
dec
popf
sbb
mov
and
cmp
lods
xor
cmpsb
mov
xor
je
cmp
mov
out
test
pop
jo
shl
mulb
addr16
dec
scas
pop
iret
out
mov
outsb
xor
mov
sbb
mov
jmp
movb
push
out
mov
out
lods
fxch
dec
lds
fadds
dec
mov
xchg
scas
jno
call
mov
lods
push
pushl
sbb
push
cmpsb
mov
nop
dec
mov
add
imul
ret
movl
xchg
jo
xchg
fcoms
shll
imul
mov
enter
pop
lods
mov
sbb
sub
and
sbb
imul
and
inc
mov
cld
sub
sub
push
pop
and
js
mov
dec
shll
pushf
xchg
adc
sub
popf
cmp
pushf
xchg
loopne
mov
arpl
pop
sbb
jl
in
fwait
mov
or
inc
aas
push
mov
pushf
movsl
ljmp
dec
xorl
inc
mov
jb
pop
gs
mov
into
scas
mov
sub
stc
cmp
cmp
or
inc
stos
sbb
jb
mov
sbb
das
pop
mov
mov
inc
push
pop
pop
push
cmp
ja
xchg
std
mov
inc
cmp
and
dec
rcrl
lds
int
das
adc
jb
pop
xchg
ror
jle
mov
mov
cmc
fcoms
lcall
stos
mov
aaa
or
sub
repnz
pop
inc
fistps
lods
mov
clc
ss
push
pop
ror
or
ds
adc
repz
gs
mov
js
arpl
cmp
or
ss
mov
xchg
jmp
ret
scas
test
jle
fldt
and
aam
aaa
add
gs
add
dec
andl
mov
in
and
lahf
int
sub
stos
ret
stos
out
mov
cmpsb
mov
pusha
repnz
mov
cwtl
or
mov
popf
mov
mov
iret
pop
sub
mov
jne
pop
addb
mov
cmc
cmp
loopne
lock
loop
repz
sbb
push
inc
mov
incl
popf
add
fists
and
jecxz
scas
push
xchg
inc
or
repnz
out
imul
int3
jno
mov
xchg
mov
sbb
jp
loop
cltd
popf
movsl
xlat
test
icebp
and
cwtl
andl
and
movsb
ret
sbb
fbstp
xchg
inc
mov
arpl
inc
mov
sbb
leave
push
mov
imul
xchg
pop
mov
jmp
dec
out
push
aad
addr16
test
dec
jp
test
es
ret
cltd
popa
mov
fiadds
and
clc
mov
jnp
xchg
iret
fcoms
nop
cs
and
cmp
mov
cmp
lock
sarb
mov
and
cmp
mov
lea
push
subb
inc
inc
aaa
subl
addr16
loope
sub
add
icebp
adc
push
test
int3
add
cli
arpl
jae
sbb
mov
mov
lret
ret
cwtl
out
cmp
leave
dec
int3
sbb
dec
xor
fwait
les
sbb
out
mov
pop
xchg
adc
jp
and
add
fidivrs
dec
pusha
bound
sbb
mov
and
fnstenv
inc
movsb
dec
xor
call
loope
sub
mov
out
shrb
lds
pop
daa
cmc
jmp
arpl
stos
mov
lock
fwait
fbstp
push
mov
pop
cmp
and
call
push
cmp
dec
js
stos
cmp
stc
std
out
or
ljmp
sar
cmp
pop
xchg
into
add
xor
or
add
aas
repnz
push
jmp
mov
cli
inc
cmp
out
add
movsb
push
pop
insl
je
mov
dec
xchg
sub
ljmp
jno
imul
dec
notb
jecxz
pop
out
xchg
hlt
rolb
cmp
push
das
add
sub
mov
loopne
mull
xchg
mov
sub
insl
insb
fwait
sbb
cmp
sahf
hlt
pop
jg
push
test
mov
xor
pop
mov
leave
push
cmp
push
iret
adc
adc
hlt
sbb
cmc
addr16
dec
fs
sub
cmp
fnstcw
arpl
jmp
or
xchg
cmc
xchg
insb
cld
mov
aas
lods
jne
cltd
xchg
pop
sub
sub
sub
adc
loopne
sahf
mov
sbb
jnp
and
loope
mov
pop
pop
iret
mov
xlat
loop
lcall
mov
mov
pop
xor
xchg
mov
cld
jmp
push
mov
push
pop
addr16
jp
and
ror
cld
inc
enter
jg
rcll
push
xchg
jle
xchg
xor
xchg
add
aad
jb
out
lods
sbb
mov
movsl
mov
xchg
dec
cmpl
test
push
and
sub
push
and
add
mov
jbe
mov
outsb
repnz
shrb
pusha
std
push
push
xlat
push
inc
mov
mov
mov
mov
loope
add
or
imul
mov
imul
cmpsb
loope
mov
dec
mov
push
inc
test
fs
pop
xlat
ror
out
stos
and
ds
std
sub
and
jge
pop
mov
mov
je
fwait
xchg
aad
add
stos
shr
leave
shrb
cmp
repz
into
mov
jb
inc
jbe
aam
in
push
mov
aas
cltd
sub
in
xor
aam
out
in
movsl
ja
ljmp
in
fsts
loope
dec
stos
ljmp
xor
pop
lretw
vcvttps2dq
loopne
sbbb
aaa
movsl
xchg
mov
push
dec
mov
add
and
addl
icebp
pop
fst
mov
hlt
mov
outsl
jne
test
out
cmp
jbe
loop
bound
mov
jp
stos
push
mov
and
mov
scas
mov
mov
push
test
fistps
dec
hlt
or
fadds
sbb
cwtl
or
adc
mov
mov
jb
dec
loopne
ja
lock
mov
fnsave
cmc
idiv
int
stos
sub
aas
push
in
and
int3
inc
pop
jns
pusha
sbb
add
scas
out
lea
cs
bound
ljmp
adc
inc
jnp
push
stc
outsb
push
inc
in
subl
sub
fbld
mov
and
mov
nop
mov
inc
mov
testl
inc
aas
loopne
stos
int
and
in
jne
jecxz
push
pop
lods
adc
mov
sub
pop
dec
pop
xchg
sub
push
movsl
leave
adcb
push
imul
mov
mov
sub
cmp
clc
sub
dec
xchg
sbb
popa
cmp
and
jg
rorb
out
sahf
outsl
test
or
fidivl
push
mov
addr16
push
aad
xchg
movsl
adc
data16
ds
arpl
mov
lahf
sbb
int3
movsl
in
es
mov
xchg
lret
je
cld
and
das
dec
imul
push
call
jecxz
cld
fimuls
fs
fwait
in
xchg
mov
in
arpl
pusha
gs
ucomiss
xchg
add
sti
icebp
fsubp
idivb
leave
sub
push
nop
push
int
leave
add
mov
insl
xor
and
loop
xor
push
sbb
mov
mov
jge
mov
adc
stos
and
movsb
xchg
shrb
sbb
mov
aam
mov
xor
inc
push
movsb
adc
pop
popa
cmpsl
sub
mov
mov
and
and
aad
aam
cmpsl
into
and
jns
add
ss
adc
andl
add
cmp
in
mov
or
sbbb
cs
fists
addb
sub
mov
cmp
dec
fstps
cld
add
adc
cltd
aas
xor
mov
lods
jg
mov
jg
fnsave
mov
sub
dec
xchg
xor
mov
and
adc
movsb
push
or
ret
mov
pop
mov
dec
jns
fucom
imul
mov
and
xchg
mov
or
mov
xchg
xchg
jle
or
fs
in
ja
ret
leave
rol
push
stos
lods
xchg
mov
imul
outsl
cmp
lds
push
cmp
int3
push
xor
jmp
dec
sub
imul
fistpl
bound
sub
cltd
mov
and
aad
popf
out
xchg
loop
xor
mov
inc
idiv
ret
out
sbb
cmp
xor
push
loopne
in
out
adc
sbb
nop
fnstsw
cwtl
shll
cwtl
dec
mov
shl
pop
cmp
jmp
cltd
nop
dec
in
cltd
es
mov
sub
mov
push
inc
rorb
fldenv
mov
and
loop
lahf
aas
push
cli
das
inc
push
outsb
dec
dec
or
push
jnp
and
sub
inc
ret
in
lahf
out
hlt
cmpsb
sbb
sbb
push
mov
jecxz
jp
jle
push
sub
in
and
xor
cli
mov
aad
push
aaa
add
sahf
clc
rol
inc
push
rclb
adc
test
mov
sub
adc
loopne
stos
or
pop
push
xchg
pop
int3
sub
test
push
les
shrb
mov
bound
outsl
xor
jp
stos
xchg
mov
lahf
shl
out
sbb
fisubrs
or
ret
cmpsl
leave
xchg
xchg
ror
pop
loopne
flds
sub
out
repz
dec
movsl
test
stos
and
inc
aad
mov
sub
mov
lds
stc
fimuls
lahf
imul
sub
subb
fisttps
ss
mov
mov
sbb
add
outsb
lret
xchg
pop
inc
popfw
mov
clc
push
ret
jmp
insb
add
xor
aam
mov
in
sti
loope
call
dec
xchg
clc
dec
test
lea
and
shlb
xor
insl
out
jo
lods
std
xlat
dec
lock
sarb
imul
cmpsl
cmp
dec
push
jge
sbb
clc
es
xlat
mov
imul
iret
loop
adc
sub
rep
js
scas
dec
xchg
jns
mov
or
fcomps
fistps
xor
loope
bound
mov
dec
sbb
das
std
mov
and
push
and
xor
jg
outsl
pop
jb
int
arpl
in
cltd
movb
mov
out
or
mov
mov
sbb
mov
jmp
sub
std
addl
and
mov
and
pop
sti
adc
lock
ljmp
lcall
jne
lods
add
push
je
icebp
fnstenv
dec
sbb
mov
fldl
dec
push
mov
mov
mov
lcall
pop
outsb
jnp
add
xor
ret
mov
inc
gs
xchg
je
cmp
jecxz
test
mov
push
mov
insb
or
pop
js
lods
xchg
ljmp
in
cmpsl
addr16
add
sub
jg
aas
sub
es
mov
lods
mov
push
pop
jns
xchg
shr
xor
cmpsl
ss
fisttps
inc
mov
cmpl
out
pop
dec
lea
pop
jo
and
jno
mov
pop
stc
jb
or
out
cmp
sbbl
jnp
xor
push
rol
pop
ret
or
add
inc
sbb
push
cmp
pop
lea
scas
out
push
pushf
xchg
mov
push
jno
aas
fimuls
mov
dec
movsl
mov
pop
les
push
aam
js
lds
dec
cmp
jp
and
push
adc
shrb
mov
idiv
xlat
mull
sbb
mov
pushl
mov
xor
dec
and
in
ror
inc
add
xor
cmp
je
push
jp
out
add
shll
add
sub
xor
inc
sbb
int
movsb
pop
mov
mov
mov
pop
jecxz
jge
test
loop
ret
xchg
jbe
lock
cmpsl
lea
jne
sbb
daa
popf
ljmp
sbb
mov
mov
imul
and
pop
mov
adc
mov
cmpl
jns
cld
mov
test
aad
repnz
sti
sti
dec
dec
sub
hlt
nop
inc
mov
mov
sbb
jl
mov
lods
dec
jl
std
jg
inc
sub
bound
sub
xor
push
cmp
rcll
dec
fcomp
pop
es
sub
inc
dec
sub
in
fstpl
into
xchg
jg
sbb
push
rorl
pop
push
stc
jle
xor
shl
xchg
insl
sub
inc
stos
aas
aam
pushf
pop
jge
shrl
push
lock
shr
push
adc
pop
push
iret
cmp
lcall
jb
jno
xor
inc
faddl
ret
xchg
pop
mov
addr16
faddl
inc
popl
or
punpckhwd
push
adc
js
xchg
and
add
dec
jge
cmp
pop
add
fwait
jmp
push
mov
push
in
fisubrl
push
in
bound
test
test
or
int
sarb
shr
mov
mov
dec
adc
cld
add
insb
jnp
sbb
mov
aas
pop
insl
sbb
add
inc
imull
xchg
mov
jns
jae
insb
jne
ja
test
sub
jb
les
or
mov
push
sub
push
rcll
lds
rcrb
xorl
mov
lds
je
fwait
cmp
sbb
jne
adc
adc
xor
inc
and
mov
mov
xor
inc
adc
mov
jno
cmp
inc
pop
insb
data16
mov
int3
and
cmp
dec
daa
inc
adc
cld
pop
push
jmp
outsb
and
inc
ljmp
mov
lock
lret
push
dec
xchg
lds
xchg
int3
shll
nop
or
iret
invd
out
push
pop
fcomps
rolb
fwait
mov
sarb
mov
jle
std
dec
xlat
inc
and
loop
push
xchg
fcoms
sub
sti
mov
mov
arpl
pop
loope
pop
dec
js
bnd
aaa
push
push
push
je
pop
int
fstl
pop
or
bound
nop
adc
rcrl
lahf
enter
pop
fisubl
and
popa
shll
cmp
dec
add
push
and
xor
dec
jnp
xchg
jge
add
mov
mov
test
lods
pop
jno
dec
movsl
sub
mov
mov
leave
mov
bound
push
sti
ret
mov
jno
push
inc
cltd
or
out
mov
xchg
push
sarb
adc
repz
cmp
inc
es
push
inc
das
mov
mov
xor
mov
sub
lcall
adc
mov
push
stos
repz
stc
out
jl
xchg
xor
arpl
dec
insl
int3
loopne
pop
cwtl
adcb
lret
adc
mov
mov
shrb
sub
pop
inc
inc
sti
inc
lret
jp
inc
js
aad
call
rclb
mov
inc
pop
ret
push
jmp
fwait
inc
popf
sbb
jle
jl
xlat
rorl
outsl
loopne
orb
inc
pushf
inc
adc
sbb
out
mov
lret
mov
imul
cmp
faddp
xchg
add
addr16
pop
mov
mov
insb
es
sbb
or
stos
mov
subl
mov
add
cmpb
inc
dec
jecxz
jg
cmpsb
xchg
cmpsl
stos
push
sub
incl
sub
mulb
rorb
pop
mov
pop
stos
cmc
aad
lods
add
cltd
sub
rcrb
int
pop
sub
imul
pop
fdivs
shlb
jecxz
sbb
cwtl
inc
ret
scas
jl
faddp
inc
pop
adc
jecxz
test
pop
sub
negl
mov
daa
push
jns
jmp
cmc
arpl
pushf
icebp
push
xor
mov
test
fs
sub
mov
mov
mov
adc
pop
aad
push
push
sub
push
smsw
mov
mov
cli
mov
jo
add
and
je
clc
jmp
scas
cmp
jle
sub
cmp
enter
pop
fldenv
add
out
out
push
test
xchg
into
ret
push
subb
jne
and
xchg
mov
loop
fdivl
jmp
jecxz
lret
push
lea
xchg
xchg
loope
imul
fldenv
dec
adcb
add
in
or
scas
repnz
js
sbbb
add
mov
test
sbb
test
out
test
mov
sub
mov
cmpb
lcall
push
inc
aam
pushf
cmc
sub
jl
pop
xchg
lds
push
sbb
mov
cmpsl
sbbl
test
xor
jl
ret
cld
test
jg
pusha
js
lcall
inc
push
mov
testl
pop
stos
mov
mov
push
aam
outsl
sbb
dec
sarb
in
mov
in
sbb
mull
add
iret
stos
or
xor
sbb
sbb
repz
aas
stos
adc
inc
fwait
mulb
mov
orl
jecxz
xor
xor
and
andl
je
jecxz
ss
pushf
and
xor
push
pushf
nop
cltd
mov
pop
cmc
add
mov
gs
out
in
mov
cmpsb
js
outsl
icebp
sub
and
cmp
ficompl
lahf
xchg
rcll
popa
pop
leave
incl
pop
adc
icebp
lock
jle
jne
xor
inc
lods
mov
mov
test
lock
iret
cs
pop
notb
add
push
pop
cmc
ret
sub
bound
hlt
fs
in
pop
es
adc
jne
jmp
mov
clc
lahf
and
xor
daa
fnstsw
sti
mov
aas
lcall
aaa
jecxz
xchg
aas
push
add
xchg
mov
sbb
dec
push
aad
mov
int
pusha
dec
sahf
sbb
pop
jmp
nop
sbb
push
mov
fs
stc
call
push
in
ficompl
into
out
aad
outsl
pop
jmp
adc
loop
mov
inc
push
xchg
fistps
add
xor
cs
addr16
roll
pushf
sbb
jbe
sub
xchg
addr16
mov
inc
cld
sbb
into
fidivrs
notb
cmp
cmp
mov
pop
outsb
and
jb
sbb
stos
movaps
mov
and
push
push
out
leave
adc
sbb
pop
test
cmc
mov
cmp
lea
out
test
xor
push
or
cmp
hlt
out
mov
mov
out
inc
std
pop
bnd
outsb
lcall
xchg
outsb
mov
push
jp
xchg
jle
rcr
adc
loope
cmp
xchg
jnp
mov
test
cld
cs
loopne,pt
dec
push
dec
in
movl
sbb
adc
and
stos
insb
insl
shl
sbb
popa
push
jecxz
aad
call
rcl
loopne
aad
fs
subl
inc
and
xorb
inc
xlat
pop
sbb
mov
jo
sbb
push
fs
js
loopne
sbb
and
lret
xchg
sbb
xlat
push
and
ss
mov
mov
dec
cmp
test
lcall
sub
test
add
bound
xchg
mov
inc
repz
ret
pop
fucom
adc
bnd
adc
ja
push
out
sbb
lods
lods
lods
mov
out
in
inc
push
rol
pusha
xchg
dec
dec
inc
dec
inc
ds
ja
pushf
xor
dec
jae,pn
fistps
inc
and
ret
dec
out
sub
loope
dec
out
pop
fst
cmc
mov
cmp
cmpsb
cltd
add
dec
pop
hlt
xchg
mov
loopne
and
test
cmp
sbbl
loop
repz
je
xorb
xchg
sbb
loop
cmp
scas
imul
dec
data16
push
jge
cmpsb
push
out
mov
xchg
cmp
mov
ret
arpl
push
mov
outsb
loopne
or
dec
clc
inc
cmpsl
scas
in
push
add
daa
shrl
aaa
sahf
adc
cmp
iret
push
adc
out
sbb
adc
sbb
pop
inc
pop
in
loope
mov
ja
mov
in
push
xor
pop
cs
dec
mov
xchg
loopne
pop
stos
pusha
jmp
fldl2t
xchg
push
dec
and
cmp
add
sub
test
scas
add
ds
jge
pop
push
or
lret
icebp
xchg
stos
fdivr
inc
popa
stos
in
sbb
and
outsl
adc
pop
fldenv
std
cmp
xchg
rorl
insb
jb
test
test
mov
inc
jo
imul
add
aad
data16
push
fwait
loopne
test
test
cli
inc
flds
addr16
xchg
stc
add
pop
dec
pop
dec
xor
pop
rorb
lret
xchg
push
mov
jns
xchg
sti
add
dec
pop
cmc
aad
nop
xor
pop
sbb
cmp
mov
pop
loopne
daa
push
je
stc
popl
stos
mov
push
notl
lock
mov
sbb
lahf
sub
mov
dec
and
mov
sub
fiaddl
add
popf
push
mov
loope
inc
mov
inc
stc
decb
jmp
sbb
jmp
in
mov
sbb
fstpl
sbb
fisttps
cmpsl
lods
js
sbb
xor
inc
sub
test
repnz
dec
sahf
cmp
mov
addr16
and
outsl
lock
cli
rcrb
mov
dec
cmp
data16
mov
data16
lahf
adc
cmp
jmp
xchg
daa
mov
loop
push
or
sub
std
mov
stos
mov
adc
nop
cmp
dec
into
movsb
ret
sub
pop
adc
add
rolb
imul
inc
push
or
repnz
imul
pop
cwtl
imul
dec
jbe
pop
cs
lfs
inc
clc
sub
cmpsl
popa
inc
sbb
xorb
cmc
call
jae
inc
loope
cmc
xor
mov
or
cmpsl
mov
call
sub
or
repz
out
lret
sbb
dec
jp
mov
jbe
insl
pushf
jle
xor
or
sub
sub
push
je
pushf
sbb
rcrl
pop
sti
int
xor
andl
push
out
jne
mov
pop
mov
dec
push
arpl
or
ret
repnz
es
or
aam
pop
lret
push
push
shlb
dec
jl
mov
xchg
jo
loope
bound
jmp
push
cli
stc
mov
pop
pop
cld
scas
lret
or
das
fwait
pop
test
push
xrelease
jae
jl
mov
ljmp
inc
fwait
xorl
int
sub
lods
xor
test
iret
arpl
or
xchg
cmp
jnp
and
ljmp
jmp
sbb
das
dec
add
mov
in
xor
jne
jae
pushf
movsb
adc
push
inc
loope
mov
test
sbb
pop
psubw
or
sbb
fisttpl
repz
mov
fsubr
pop
sub
cmp
push
pushf
jne
fwait
mov
pop
ja
sbb
jle
sub
pop
stos
fisttpll
cmp
jnp
pop
and
inc
sub
cmp
mov
call
in
cmc
pop
add
jno
outsb
imul
sbb
insb
adc
mov
mov
inc
dec
jg
or
popa
outsb
sbb
test
addb
xchg
and
push
sarb
jl
sbb
mov
mov
pop
clc
push
inc
mov
pusha
call
daa
mov
adc
push
fdiv
shr
adc
pop
jne
jb
or
xor
arpl
sarl
push
mov
test
js
dec
add
jb
jge
aad
out
push
jno
sarl
les
aaa
shl
divw
fmuls
xchg
fdivl
mov
mov
jo
dec
pop
and
test
or
and
add
push
je
cld
mov
dec
mov
ret
out
out
cwtl
add
cmp
movsb
mov
testb
out
enter
mov
sub
push
inc
sbb
add
xchg
shll
lret
rcrb
push
mov
push
xchg
push
popa
xchg
or
incb
dec
aam
inc
jns
int3
push
fimuls
add
pop
jb
sub
adc
xor
insl
enter
es
nop
andb
inc
in
and
bound
mov
lahf
pop
jmp
sti
movsb
xor
icebp
pop
clc
mov
jb
out
ret
sahf
test
and
mov
sahf
movsb
push
mov
add
pop
cmp
test
dec
jae
xchg
add
shll
or
xlat
or
adc
dec
mov
push
out
gs
jmp
mov
movsl
xchg
subl
movsl
stos
fisttpll
push
leavew
das
andl
icebp
push
sub
xor
xor
cltd
mov
into
push
push
sub
out
out
repz
mov
testl
push
jb
adcl
nop
daa
hlt
jg
movl
sbb
lret
mov
push
jp
sub
inc
insb
call
sbb
add
imull
and
push
lds
leave
leave
xchg
ret
or
pop
cwtl
stos
sahf
test
lcall
insb
cmp
or
and
jmp
enter
and
sub
or
test
iret
lods
icebp
inc
sub
mov
mov
enter
pushf
lock
movsb
sbb
mov
movsb
add
sub
sbb
rcrb
pop
iret
xor
daa
push
shll
inc
call
in
movsl
dec
aaa
push
push
enter
in
ret
fildll
enter
mov
pop
and
push
inc
jo
pop
xor
push
or
mov
mov
fiadds
pop
inc
xor
dec
mov
dec
add
pop
lret
stos
iret
loop
push
push
test
fsubl
add
sbb
dec
inc
stc
jp
cltd
xchg
mov
cmp
and
iret
leave
in
dec
pop
addb
and
xchg
gs
xor
fmul
lcall
test
xchg
and
mov
icebp
and
push
add
push
or
inc
popf
movsb
pop
les
aas
sbb
das
mov
adc
imull
aad
popf
dec
ret
mov
outsb
lahf
aad
cmp
fnstsw
stos
adc
and
jns
or
mov
push
cld
test
lret
fwait
cmp
and
stc
out
pop
call
cmp
sub
cmpsl
jge
fnstsw
pop
jl
aas
stos
lods
push
imul
ficoml
wbinvd
andb
inc
mov
leave
xor
leave
lcall
jge
and
xor
pop
mov
lret
cmc
movhps
and
add
repz
out
rcr
push
test
sti
insl
push
mulb
cmpsb
push
arpl
dec
divb
cmpsl
pusha
inc
push
fimull
and
xchg
sbb
sub
mov
fadd
repnz
or
push
out
test
outsl
sbb
jo
pop
out
add
push
ss
and
lods
sub
outsl
aad
aad
insl
loope
xor
int
cli
lcall
sub
in
insb
pop
and
pop
ds
out
in
push
or
pop
divb
sub
cmp
repz
sti
jae
or
or
cmp
jg
mov
lahf
ljmp
inc
sbbb
popf
mov
gs
bswap
sbb
je
push
adc
push
je
inc
lahf
push
xor
xlat
sub
mov
cltd
in
fsubrl
cld
sti
jmp
sub
xor
xor
daa
cmp
in
mov
jb
xchg
and
scas
mov
push
sbb
ficompl
add
mov
lret
pop
inc
call
lods
popf
loop
add
fbld
add
popf
je
in
add
dec
adc
add
js
repnz
ret
push
cmp
sti
jo
das
mov
addr16
lcall
stos
insl
mulb
adcl
add
inc
and
int3
mov
jns
outsb
jl
pop
adc
lea
push
fs
adc
insb
adcl
xor
xchg
push
sub
mov
adc
add
icebp
push
dec
jl
sbb
orl
dec
or
fbstp
shlb
sub
pop
jne
sbb
addb
inc
loope
xlat
sub
imul
pop
outsl
cltd
add
rolb
pop
adc
pushf
mov
sub
lods
xchg
aaa
and
iret
cs
push
dec
xor
sub
adc
mov
std
adc
jne
ss
jmp
or
nop
fwait
ja
adc
test
adc
lods
pushf
f2xm1
mov
lods
enter
mov
and
cmp
lea
mov
pop
enter
inc
pop
inc
and
gs
xor
fwait
add
rorb
jns
test
jno
jns
add
arpl
lcall
mov
and
push
out
or
lahf
push
mov
shr
vpsrlw
add
popa
jp
and
fwait
in
in
icebp
fldl
pop
push
mov
xchg
andb
mov
outsb
adc
out
mov
gs
add
mov
and
jbe
into
pop
xchg
cmp
sub
in
insb
ja
repnz
mov
or
das
xchg
ss
jle
mov
pop
and
in
push
icebp
popa
les
movsb
mov
lods
push
popa
pop
icebp
ret
cltd
pop
in
sbb
subl
and
aam
scas
sbb
jb
je
ror
mov
pop
mov
lods
adc
inc
out
jle
mov
rolb
testb
repz
adc
add
adc
or
inc
pop
sbb
aas
xchg
movsl
cwtl
mov
jp
ret
sbb
addb
xchg
imul
pop
inc
fnstcw
xlat
jae
push
mov
xor
leave
in
in
push
push
das
pop
jae
lcall
bound
xchg
jg
es
dec
jae
inc
xor
iret
dec
or
sbb
sarb
jne
sahf
xchg
cmp
into
ror
ljmp
and
sahf
push
cmp
mov
clc
pop
sub
jecxz
add
test
jle
jle
mulb
rclb
inc
xlat
pop
stos
pause
imul
fisubs
cmpsl
pop
enter
shll
inc
pushf
mov
push
leave
jae
inc
pop
cs
fld
mov
mov
pand
scas
mov
sub
jp
test
push
out
subb
fmulp
mov
sahf
call
sbb
inc
testb
popf
mov
das
or
les
ret
mov
stos
sahf
outsl
mov
ljmp
cmp
mov
fisubrl
paddsw
adc
and
mov
mov
not
xchg
cld
cmc
push
push
mov
mov
inc
daa
mov
push
in
popa
jle
cmp
icebp
cmp
das
mov
mov
into
cltd
popa
aad
stc
lds
dec
lret
push
mov
out
pusha
in
jo
stos
daa
adc
xchg
sbb
mov
scas
bound
dec
push
mov
fildll
repz
addr16
push
dec
aaa
adc
sub
mov
lret
add
cwtl
jno
orb
sub
hlt
das
push
cli
inc
or
mov
xchg
mov
dec
bound
loop
outsl
imul
add
jg
push
lahf
xor
inc
testl
mov
jle
mov
inc
das
jns
or
out
les
shll
or
sbb
adc
sahf
add
xor
pushf
outsl
clc
ljmp
movsl
push
lcall
dec
pushf
das
clc
iret
and
loop
jno
call
je
xor
mov
addr16
adc
das
sahf
xor
es
push
stos
aad
nop
stc
cwtl
dec
push
aaa
lods
andb
sub
mov
ja
push
mull
fbld
je
lock
push
xchg
push
dec
leave
push
outsl
mov
ficoml
fwait
mov
fadds
pop
fsub
add
dec
mov
cwtl
xlat
nop
testl
out
add
sbb
insb
jg
cmc
int3
es
jge
imul
notb
call
movsl
jne
lods
in
sub
popf
into
xchg
fs
nop
aaa
fisubs
and
xor
mov
xchg
add
data16
jl
sbb
xchg
add
test
jne
mov
cmp
pop
push
pop
fnstcw
lret
outsl
imulb
and
sbb
sub
shlb
ljmp
mov
pusha
mov
decb
cmp
fisttps
sbb
out
mov
dec
mov
movsl
lock
es
or
mov
xchg
mov
fsubrp
insb
inc
outsl
mov
adc
dec
dec
and
mov
jno
out
pop
mov
xchg
adc
fdivrs
jb
xchg
pushf
mov
xchg
add
sub
push
loop
push
ret
cmp
pop
dec
inc
fisubrl
pop
dec
pop
add
stos
mov
lods
xchg
push
mov
dec
filds
aad
std
mov
insl
out
mov
test
mov
adc
pop
or
mov
jp
pop
sub
push
mov
jbe
pop
icebp
shrl
push
add
pop
mov
out
push
cmp
icebp
pop
add
mov
jb
cmp
cwtl
pusha
cli
adc
insb
cmp
fisttpll
faddl
in
cmpsl
dec
xor
popa
mov
sbb
xor
push
bnd
stc
dec
ret
xor
add
imul
cmp
or
or
cmp
lahf
ret
jecxz
xchg
les
pusha
jp
and
xchg
shll
inc
mov
hlt
jp
xchg
jae
xlat
pop
xor
pop
insl
shlb
mov
xchg
mov
stos
xor
sub
xchg
scas
add
mov
fcmovu
out
and
cmpsl
mov
mov
hlt
ret
loop
xor
lock
add
divl
pop
lods
stos
mov
cwtl
xchg
roll
mov
dec
push
movsl
imul
sbb
pusha
mov
xor
mov
daa
rorl
es
xor
jbe
or
test
fdiv
mov
ja
sub
sub
push
arpl
mov
shl
testl
or
scas
shrb
mov
mov
dec
push
ret
xchg
sbb
sbb
mov
mov
inc
aam
mov
jecxz
std
fcmovnb
cmp
jp
inc
aad
push
mov
call
push
stc
insb
jg
dec
aam
imul
loopne
add
xchg
lret
xor
pop
lret
mov
pop
shll
mov
cwtl
push
sbbl
aad
and
fs
jle
adc
mov
cmp
mov
rol
jbe
dec
insl
mov
idivb
push
or
and
lret
pop
dec
dec
je
mov
lods
pop
lea
push
jmp
icebp
fcoml
push
mov
fwait
mov
cmpsl
jmp
scas
or
adc
add
dec
stc
bound
mov
xor
lods
mov
dec
loopne
js
jg
testb
push
adc
loopne
incl
xlat
mov
or
stos
lcall
movsb
cmc
mov
stc
and
loopne
xor
pushf
sbb
push
inc
push
lret
xchg
and
sbb
ljmp
mov
popa
jg
hlt
cltd
hlt
xor
sti
mov
jmp
pop
and
xor
pop
lds
mov
xchg
jb
repnz
aad
cmc
pop
mov
out
pop
sub
mov
push
add
scas
movsb
mov
mov
lret
add
jae
inc
cltd
and
sub
add
push
fdiv
leave
xor
mov
or
leave
lods
lahf
sti
addr16
mov
adc
mov
mov
int3
enter
push
sub
fs
or
shll
out
jno
xor
popa
in
mov
or
mov
push
cmp
add
push
add
sub
int
nop
sbb
popf
jle
cli
in
xor
pop
cmp
in
fnstcw
jge
mov
in
pop
and
addr16
fistps
int3
inc
xor
adc
fisubrl
in
dec
push
xorl
out
filds
inc
xchg
gs
pop
xor
lods
lds
std
stos
rorb
subl
mov
out
jg
xor
divl
push
rcrb
xor
cmp
test
sti
jecxz
daa
mov
divl
cwtl
jbe
rorb
cmp
pop
lods
pop
and
and
cmp
jnp
xchg
dec
hlt
nop
sbb
xchg
bnd
movsb
and
dec
lcall
mov
out
mov
lea
cmp
ja
test
test
jecxz
js
mov
mov
lcall
push
stos
std
and
dec
mov
jp
call
sbb
inc
lret
pop
push
shl
push
fs
jle
xchg
jmp
mov
std
cmp
je
out
fists
add
jg
js
insl
sbb
mov
xchg
add
or
mov
movsb
cmp
aam
hlt
and
push
movsl
xchg
xchg
sbb
icebp
xor
mov
jns
jp
loope
lahf
xor
dec
sbb
jns
repz
imul
pop
je
iret
jns
hlt
cmc
push
push
or
les
movsb
adc
out
insb
xchg
mov
dec
xchg
sbb
scas
dec
imul
pop
xchg
enter
ja
ljmp
mov
lock
mov
sub
scas
sbb
test
js
push
ja
add
xchg
rorb
les
out
dec
jb
fldcw
pop
xor
loope
dec
add
mov
push
jg
frstor
int
iret
ja
mov
jb
mov
or
mov
mov
add
sub
pop
hlt
test
lock
ficomps
lods
jo
lahf
and
pop
stc
adc
push
mov
call
or
ret
sub
dec
sbb
add
hlt
test
iret
fwait
out
push
inc
xor
lret
inc
into
cli
add
loope
mov
sbb
pop
jl
rorb
and
sub
into
add
inc
test
xlat
aad
mov
pushf
pop
xchg
sub
fcmovb
jns
and
inc
xor
lret
in
in
insl
cmp
leave
jmp
mov
xor
cmpsl
inc
push
es
repz
repz
pop
aas
xlat
mov
out
mov
rclb
shll
mov
loopne
push
xchg
fsubrl
shlb
or
ss
pop
shll
mov
mov
test
pop
pushf
and
mov
sbb
sbb
sub
dec
cmpsl
sbb
xchg
lret
mov
pop
hlt
xchg
fsubs
mov
or
lret
pop
mov
mov
pop
fiaddl
xchg
lret
ss
sbb
add
pop
daa
sti
push
icebp
ja
or
in
cmp
and
int
jne
jnp
cld
and
insl
xchg
cwtl
cmp
stos
and
int
iret
inc
mov
insb
jno
or
mov
orps
pop
inc
xor
mull
es
xor
or
cmpsb
arpl
cmpsl
fisubrl
popa
aad
jns
xor
movsbl
sub
or
dec
lcall
repz
mov
push
pop
scas
mov
inc
jae
push
icebp
xlat
stos
xor
hlt
push
mov
push
cmp
xorl
jbe
pop
iret
out
and
pushf
orb
pop
jmp
or
xchg
dec
aam
sub
sahf
gs
jb
xchg
jmp
jb
cmp
cmp
mulb
xchg
xor
arpl
and
or
mov
test
lea
rorb
xchg
cwtl
stos
dec
mov
pop
fstcw
or
pop
dec
and
pop
push
cmp
popa
filds
xor
dec
js
adc
and
jnp
jb
pop
scas
xor
shlb
inc
mov
sahf
xchg
jge
xchg
lret
add
xchg
sbb
add
sub
push
pop
into
and
fistps
lds
shlb
aam
cmp
cmp
cli
fxch
dec
jb
scas
xor
movl
ljmp
sub
lret
je
and
mov
adc
mov
xchg
or
ficoml
orb
xor
and
addr16
inc
test
jge
inc
jp
mov
or
sub
shlb
dec
aas
jp
lret
imul
jg
shrl
xor
inc
movsb
mov
push
inc
dec
dec
sub
push
jno
push
leave
sarb
lods
inc
push
jnp
pop
or
jno
repnz
adc
add
test
adc
addl
cmp
adc
inc
add
xor
das
out
into
rorb
push
lret
sub
clc
test
int
mov
pop
add
add
pop
push
xor
lds
gs
mulb
jns
push
push
dec
cmp
repz
push
and
aam
testl
aas
cltd
imul
or
cmp
popf
fs
pop
and
cmp
movl
adc
pop
mov
mov
add
lret
iret
or
add
jp
imul
arpl
fldl
lcall
ficompl
dec
or
jp
xchg
jae
out
shlb
hlt
icebp
mov
cli
pushf
mov
fcmovu
jecxz
adc
rorb
mov
push
cmpsb
in
push
push
or
push
jl
add
cmc
push
lcall
jbe
push
xor
xor
inc
or
push
incl
rcll
mov
push
inc
and
loop
push
add
cmp
scas
repz
sbb
inc
fidivl
aam
cmpsl
add
lds
ret
loop
ret
mov
dec
jl
sahf
inc
and
mov
cmp
push
cmc
fidivrs
ds
push
inc
or
es
lds
negb
in
xchg
lea
xchg
lods
mov
jp
push
sub
cmp
not
test
and
add
and
mov
cltd
jg
mov
push
mov
iret
faddl
ja
ret
stos
inc
bound
mulb
mov
dec
sahf
outsl
push
mov
outsl
icebp
inc
xchg
mov
pusha
jle
les
and
lods
enter
cmc
fst
dec
icebp
fisttpll
fwait
movsl
rcll
mov
jae
mov
xchg
repz
das
push
cmp
lods
int3
icebp
out
push
dec
add
pop
rol
cmp
or
xor
push
dec
or
out
les
pop
hlt
cwtl
mov
xor
js
add
add
sbb
sbb
sti
mov
stos
jg
sub
jne
push
mov
mov
cwtl
test
in
sbb
dec
out
fisttpll
and
jnp
lea
nop
xchg
dec
int
lods
icebp
xchg
clc
cmpsb
add
cltd
pop
fstps
iret
nop
cwtl
icebp
in
shl
enter
xorl
sub
roll
push
mov
loope
cld
roll
xor
pop
fisubrs
jle
push
adc
cmp
js
jne
test
or
out
jne
add
pop
out
mov
jle
push
xlat
cli
add
push
or
je
movsl
std
cmp
jg
dec
iret
inc
aaa
mov
daa
dec
fcmovne
cli
subl
lods
xchg
pop
adc
pop
mov
sbb
fnsave
pop
sahf
call
insl
les
cmpsl
xchg
in
out
inc
mov
mov
sbb
lcall
xchg
lock
out
fs
jl
mov
push
test
mov
lods
and
xchg
dec
sbb
je
xchg
mull
test
insl
imull
xlat
dec
inc
cmpsl
test
decb
std
fldt
fsubr
ss
xchg
jecxz
cmc
jg
cmpsl
mov
mov
push
or
cmp
addr16
popl
or
push
daa
add
loope
inc
dec
dec
push
push
sahf
cs
push
adc
mov
xlat
lcall
add
pop
outsl
adc
mov
xlat
repnz
insb
xchg
pushf
jnp
push
mov
jae
ss
mov
imul
mov
pop
notb
dec
push
lds
mov
jg
inc
push
enter
inc
and
imul
test
ret
into
nop
jge
ret
cmp
cli
cwtl
add
cmp
add
xor
loop
frstor
leave
pop
inc
jae
shl
jbe
test
bound
mov
lret
inc
shll
outsl
sub
add
sbb
jecxz
cmc
dec
push
xchg
inc
inc
mov
aam
adc
push
sub
aaa
loope
mov
shlb
fs
daa
outsb
rorb
xchg
movsb
mov
jns
popa
lcall
std
loope
enter
enter
andb
add
push
cmp
popa
mov
movsl
int
testl
jp,pn
out
jns
cmpsl
dec
sub
sub
or
out
mov
jg
push
daa
and
inc
jl
inc
pop
lea
jb
cmp
mov
test
pop
rol
jnp
repz
test
xchg
push
pop
push
mov
ja
mov
sub
loopne
xchg
add
lahf
or
aas
sbb
arpl
scas
add
fmul
push
sbb
push
and
xor
subl
add
ret
fnstcw
sub
lcall
xor
push
loope
mov
rorb
dec
xor
mov
je
test
icebp
dec
shlb
loop
js
test
jge
sub
sub
sub
mov
mov
inc
add
push
shrl
xor
mov
icebp
pop
jl
cmp
divb
push
jmp
mov
subw
adc
aaa
subb
push
scas
pop
mov
daa
jmp
or
int
adc
cmpsl
mov
imul
jmp
add
int3
pop
andl
out
push
pop
mov
aad
mov
cmpsl
dec
xchg
insb
push
fwait
xchg
adc
add
test
sub
sub
or
dec
and
shlb
shl
xchg
hlt
insl
xor
push
mov
hlt
or
lcall
aad
imul
int
adc
or
pop
ficoms
shl
or
adc
and
sub
leave
sbb
xor
stos
icebp
adc
cld
mov
ljmp
stos
cmp
mov
cmp
sub
or
insl
and
mov
jne
lds
mov
pop
movl
cmp
lcall
or
mov
stos
hlt
ss
loop
jns
fistps
push
mov
push
mov
sti
mov
dec
and
std
xchg
clc
pop
adc
lcall
cmpsl
andb
cwtl
fnstsw
xchg
movsl
cmp
add
lret
pusha
lods
pop
test
sub
test
add
jmp
test
add
sub
dec
fdivs
mov
mov
push
cwtl
or
jnp
xor
push
stos
jne
jecxz
mov
int3
xor
xchg
out
in
mov
popf
std
xchg
repz
mov
incb
hlt
dec
mov
dec
test
movsl
adc
cld
js
ror
add
ja,pt
fcoms
jle
popa
aaa
loop
mov
inc
and
outsb
xlat
iret
adc
mov
sbb
scas
comiss
cmp
dec
cli
or
loop
mov
pop
ss
mov
ret
fdivs
push
iret
in
rcrl
rolb
ljmp
xor
imul
inc
mov
jmp
in
inc
push
dec
imul
in
lods
lea
movsb
jle
movsl
lock
push
pop
leave
add
clc
lods
cmp
pop
sar
add
push
sbb
inc
sbb
and
sub
sub
xor
test
adc
cltd
lock
push
das
test
mov
fisubs
arpl
mov
es
jge
dec
push
mov
adc
mov
push
dec
imul
rcrl
push
and
sbb
nop
scas
stos
shr
add
xchg
push
mov
fs
xchg
mov
test
es
mov
push
aas
xchg
rorb
push
outsb
sbb
mov
jp
cmpsl
mov
jne
mov
sbb
insl
jae
pop
mov
les
mov
popa
dec
les
sbb
movsb
xchg
inc
les
pop
xlat
fsubl
jge
out
mov
and
ja
lods
adcl
and
push
push
aad
inc
add
loopne
and
adc
inc
movsb
push
outsl
ds
pop
or
xchg
mov
adc
aaa
jns
jp
inc
jge
not
ret
inc
cmp
ret
and
pop
popf
pop
inc
and
push
sub
mov
iret
push
pusha
xor
inc
sub
add
mov
das
mov
fistpll
or
sub
mov
pop
out
add
sub
pop
ds
dec
outsb
sbb
pop
fs
in
sbbl
cs
dec
subps
iret
or
sbb
jg
inc
int
das
jo
dec
sbb
push
xlat
push
dec
sarb
jmp
gs
inc
xchg
mov
pop
scas
in
sbb
jl
int
int3
shr
mov
inc
lcall
sub
mov
daa
sbb
roll
in
xchg
push
iret
aad
and
in
xor
mov
inc
xor
xchg
call
xor
jecxz
in
leave
in
sbb
sbb
jl
jb
aas
mov
shll
dec
pop
test
xchg
sti
cli
push
daa
pop
ja
inc
jb
sub
inc
lcall
dec
lock
xlat
lds
imull
jl
fwait
jns
lds
xor
int3
mov
xor
in
add
or
sub
cmp
jne
cmp
inc
xchg
pop
mov
mov
cmp
and
push
dec
test
pop
xchg
or
fistl
cmp
movsl
lods
mov
pop
fstp
rolb
in
aam
cmp
repz
push
mov
pop
pop
xor
aas
mov
popl
jae
jp
pop
js
js
xchg
into
lods
das
lods
jle
push
mov
or
outsb
and
mov
mov
xchg
ficompl
sbb
jle
sub
or
mov
pop
pop
or
pop
enter
mov
or
sbb
cmp
sahf
pop
jno
push
aas
sbb
xchg
repnz
cltd
std
int
ss
insl
test
adc
invd
in
sub
pop
loop
addr16
mov
ret
in
pop
enter
xor
test
cltd
jg
outsb
push
or
dec
add
fdivl
push
mov
sbb
mov
popa
clc
outsb
xchg
inc
inc
call
ret
jecxz
call
push
push
lock
je
push
cmpsb
out
mov
sbb
push
xorb
xchg
into
ds
leave
jle
xor
jo
push
testb
jecxz
out
scas
or
push
push
pop
popfw
fs
pop
ja
imul
enter
mov
out
cmpsl
test
frstor
dec
jl
out
test
push
mov
push
cwtl
jnp
xor
or
push
das
mov
ds
shlb
xchg
and
xor
mov
push
push
adc
mov
in
lret
xchg
pop
mov
dec
imul
enter
push
adc
jb
aas
lods
into
mov
xchg
repz
js
fwait
jae
sarb
outsb
xchg
push
xchg
adcb
pop
fnstsw
pop
add
aas
out
mov
ret
inc
xchg
negl
sbb
and
rclb
fcoml
mov
adc
jns
sub
jg
scas
push
sti
xor
cmp
pop
loop
lret
pusha
mov
dec
or
movl
inc
daa
jecxz
repnz
mov
ja
mov
pop
sub
adc
xchg
lret
pop
ljmp
or
mov
dec
orl
scas
xor
xchg
scas
mov
xor
xchg
xchg
insb
sub
mov
xchg
rcl
loopne
xchg
mov
dec
ret
mov
iret
sub
test
add
stos
mov
rcll
xchg
insb
sub
clc
in
ret
pusha
imul
leave
xor
xor
lock
mov
into
lahf
nop
jmp
xchg
daa
fcomp
sub
enter
test
and
aas
mov
jbe
mov
imul
pop
cmp
sarb
lods
das
addr16
push
out
and
xor
mov
loop
int
ret
gs
jmp
scas
mov
mov
loopne
fwait
mov
dec
je
inc
movsl
xor
dec
pop
in
mov
cmp
add
testb
mov
arpl
mov
or
int
or
pop
mov
es
add
int
sbb
jne
xchg
decl
rcl
sbb
mov
adc
into
out
mov
or
pop
cmpsl
pop
stos
add
inc
or
stos
cmp
lahf
nop
push
lock
dec
sbb
xor
imul
cli
scas
adc
push
mov
sbb
xchg
mov
fucomp
mov
loope
jne
gs
mov
test
xorb
ja
add
xchg
imul
jnp
add
movsl
dec
shrb
dec
cmp
int3
fildll
mov
sahf
js
adc
jmp
out
sub
or
aad
push
jmp
mov
orl
xchg
scas
pop
aas
cli
sahf
cmp
arpl
es
jnp
nop
sbb
sbb
addb
cli
fs
mov
fdivr
ds
cwtl
sarb
cld
fsubrs
bound
push
adc
adc
jno
ss
add
xchg
pslld
push
xlat
cmp
test
jl
pop
mov
in
in
fs
shlb
lahf
dec
xor
push
sbb
out
mov
inc
pusha
lcall
hlt
test
jae
adc
mov
sbb
jp
fldcw
jns
pop
test
cmp
addr16
xchg
sarl
dec
and
sbb
out
cmpsb
adcb
not
test
sbb
xor
dec
push
lcall
pop
pop
push
inc
cld
cli
mov
std
fistpll
in
outsb
push
fwait
ja
cmp
scas
test
push
shr
pop
mov
aam
cmp
mov
aam
dec
daa
mov
ss
iret
pop
hlt
xor
push
add
mov
add
data16
jb
dec
push
icebp
and
jmp
shlb
mov
out
sub
ret
dec
adc
pop
inc
pop
insl
fs
test
test
sahf
inc
and
cmp
jno
lock
xchg
mov
and
xchg
pop
test
xchg
pop
xlat
loopne
add
inc
cwtl
jne
add
das
cmpsl
inc
cmc
xor
cli
sub
adc
test
mov
ffreep
les
ss
ss
call
push
pusha
sbbl
outsb
fs
and
stos
fstp
enter
push
jle
and
or
xchg
and
aas
sbb
in
cmp
js
add
aaa
mov
fnsave
xchg
mov
ljmp
inc
push
sub
jge
jno
leave
mov
and
sbb
pop
lret
inc
subl
in
add
xlat
jne
mov
cltd
ja
test
cmp
adc
lea
xchg
pop
bound
cmp
pop
inc
pusha
dec
scas
enter
cmpl
mov
ja
lods
jle
add
dec
cmp
out
cmc
cmpsb
aaa
or
xchg
leave
lods
jg
cmp
movsl
test
ja,pn
pop
in
aaa
bound
and
ss
cvtps2pi
xor
mov
xlat
jne
add
sti
insl
and
pusha
je
data16
xchg
ss
add
push
sti
xor
cmp
stos
sub
outsb
mov
mov
popa
stos
xor
pop
mov
xchg
stos
xor
insl
sub
cmc
mov
lret
cs
mov
jbe
fimull
mov
fsts
jl
adc
icebp
icebp
push
fsts
add
outsb
aaa
lds
mov
ja
cmpl
les
lods
push
and
stos
inc
jb
or
cmc
mov
cmpsl
cli
mov
popf
dec
ss
add
adcl
dec
gs
adc
icebp
pop
jg
and
je
fistl
fisubrs
dec
and
in
loop
adc
jns
xor
mov
scas
js
or
mov
add
jns
jle
push
mov
push
push
mov
add
cmp
nop
sarb
jp
cltd
test
or
sbb
outsb
stos
in
fwait
into
mov
stos
les
sub
cli
xchg
dec
in
in
cmpsb
cmp
sbb
stc
pushf
negb
or
lods
leave
lahf
sub
xor
ret
out
pop
out
test
xor
fnstcw
add
into
ds
jae
and
jecxz
push
stos
mov
dec
not
pop
fdiv
jb
push
push
out
les
jmp
mov
into
push
call
xor
add
adcl
sbb
lahf
mov
rcll
mov
leave
pop
or
jge
popa
push
decl
push
inc
jb
mov
repnz
fcoml
jmp
adc
lret
int3
sti
repnz
in
scas
mov
stos
and
mov
jne
jbe
lret
lret
adc
imul
sub
cmpsb
cs
sub
push
cwtl
scas
std
jae
dec
mov
dec
call
cmpsl
out
mov
jae
push
push
lds
mov
or
xorb
rorl
pop
and
dec
call
stos
fbld
or
sub
xorb
lcall
pop
mov
aam
cli
out
imulb
push
shl
xor
sub
fcmovnb
xor
bound
adc
ss
negb
popa
mov
push
addr16
lods
push
hlt
jns
xchg
cli
outsl
and
add
pop
ja
mov
les
pop
sar
das
adc
ja
pop
pop
pop
hlt
loope
adc
in
faddl
gs
mov
lret
cwtl
pop
mov
and
pushf
clc
cmpsb
pop
insb
mov
sti
xchg
insb
idivl
in
aam
test
lock
sbb
dec
or
push
pop
shll
inc
aam
sbb
push
cwtl
xchg
imul
test
inc
and
and
nop
push
dec
repz
adc
sbb
cmpsl
push
mov
test
pop
inc
pop
lret
jg
ljmp
sti
lcall
cwtl
movsb
lret
stos
sar
cli
loopne
stc
outsl
mov
dec
adc
cltd
xchg
jno
inc
push
or
xor
inc
fdivs
cmp
cmp
cmpsl
jl
lea
ret
insb
repz
jo
jbe
xor
pusha
ror
push
jmp
jge
pop
mov
inc
xchg
sbb
popa
push
aaa
jo
jl
stos
cli
push
cmp
lock
dec
cli
ffreep
mov
jb
sbb
inc
fcomip
cltd
aas
sahf
xchg
repz
ret
push
in
push
xchg
mov
xor
jle
add
fwait
push
push
adc
mov
push
popa
lcall
inc
and
adc
xor
jge
or
and
rcrb
cltd
push
dec
lcall
adc
add
fldt
cmp
mov
lods
cmc
div
xor
lock
sbb
xchg
jmp
es
push
out
xchg
cld
inc
lret
xchg
test
or
popa
repnz
movsl
mov
push
inc
sub
push
mov
pusha
lea
xlat
mov
inc
fadds
jbe
jno
int3
shll
pop
push
data16
std
out
push
std
xor
jge
xchg
mov
les
je
xor
xchg
inc
pop
dec
pop
push
dec
mov
adc
pmullw
cmp
pop
push
cmp
pop
in
mov
lock
mov
add
loop
pusha
xchg
insb
pop
jno
faddl
sub
loopne
jge
or
cmp
mov
cld
lcall
fs
shrb
sub
das
fimull
fcoml
repnz
push
pop
mov
in
xor
test
stc
jp
gs
mov
in
and
aad
or
jno
mov
push
cmpsb
xchg
shl
push
inc
jae
jo
adc
mov
int3
xor
jle
dec
out
xor
xchg
push
pop
fwait
mov
cmp
hlt
sub
mov
cmp
jbe
ds
adc
dec
jno
inc
sbb
and
mov
cmpsl
aaa
and
dec
pop
lret
filds
scas
movsb
mov
scas
xor
or
inc
adcl
adc
mov
rcll
bound
aam
adc
jmp
jmp
lret
popa
js
nop
xchg
push
inc
mov
add
jne
imul
movsl
inc
out
xchg
pop
dec
dec
test
xchg
mov
insl
shlb
aas
lahf
cmp
test
fcompl
adc
test
clc
imul
push
repnz
inc
idiv
xor
inc
stos
fucomp
fiaddl
inc
mov
subb
xor
fmul
in
push
lcall
push
fwait
leave
fs
xlat
dec
mov
shrb
in
popl
stc
ret
fistpll
cmp
pop
stos
pop
sub
lods
enter
push
outsl
ret
ret
adc
cmp
insl
xchg
push
adc
loope
mov
ret
lods
and
jne
idivb
mov
mov
in
jge
outsl
fadd
mov
cmpsl
or
pop
lods
or
dec
dec
dec
mov
push
xor
xor
mov
shrl
push
mov
nop
out
fs
push
mov
ret
jp
mov
add
pop
imul
sub
push
cltd
push
test
mov
sub
mov
inc
adc
cmp
js
xchg
mov
mov
insb
je
push
lahf
flds
jns
cmc
and
insl
pop
int
mov
dec
repnz
test
into
inc
int
add
cmp
xchg
pop
ljmp
mov
sbb
push
gs
movsb
xchg
push
les
int3
scas
lods
pop
jmp
scas
adcl
icebp
hlt
lea
mov
lret
mov
lds
fisubrl
pop
lcall
dec
sub
or
loop
orb
repz
mov
hlt
xchg
add
pop
insb
xor
lret
sbb
adc
outsb
cmp
dec
sbb
repnz
or
fadds
mov
sarb
cmpsl
hlt
stos
mov
jno
xchg
add
jge
int3
mov
call
inc
xchg
es
push
mov
scas
test
rorb
jo
jle
aas
add
adc
pop
adc
movsl
repz
clc
fnstenv
stos
push
dec
in
xchg
mov
cmc
mov
dec
mov
mov
and
out
into
add
fld
mov
out
xor
in
mov
mov
dec
pmuludq
orb
icebp
js
push
ja
push
lods
mov
out
jmp
cmpsl
iret
scas
std
sub
fcmovnb
mov
jns
aam
sbb
decb
inc
sbb
fmull
or
pop
fiaddl
mov
pushf
and
call
movsl
dec
out
xchg
loope
xor
movsl
and
dec
mov
loope
pop
pop
dec
jbe
call
ss
dec
repz
ds
scas
sub
test
lret
adc
out
add
daa
mov
nop
sar
mov
xor
push
repz
mov
jmp
or
xchg
cs
lea
cmp
xchg
pop
xor
mov
mov
das
jo
gs
imul
xchg
roll
mov
out
rclb
flds
lahf
pop
ljmp
cmp
seta
jns
cwtl
or
sbb
popa
xor
mov
rep
sbb
addr16
loop
outsl
add
iret
popa
nop
test
inc
jp
test
aad
inc
sbb
bnd
dec
and
loop
call
shll
sbb
add
xchg
push
add
jecxz
push
rcrb
push
and
and
outsl
add
out
jmp
fcmove
lods
outsl
insl
push
lret
jns
lock
stos
or
or
sahf
cwtl
daa
pushf
lods
lcall
cs
sbb
sbb
les
inc
sbb
adc
cwtl
push
mov
pop
pushf
pop
ret
inc
aaa
push
lret
lea
mov
jecxz
dec
insl
or
jbe
lods
popa
enter
jecxz
cmpsl
adc
hlt
loopne
pop
fimuls
ffreep
adc
mov
xlat
mov
out
cld
fdivs
jbe
lods
xor
fcomps
mov
adc
inc
aas
ja
mov
sbb
pop
inc
push
or
call
xchg
repnz
add
rcl
mov
push
add
loop
cld
pop
xlat
lock
lods
mov
fsubrs
dec
or
cltd
sub
popf
rcpps
and
ffreep
adc
call
xchg
adc
into
dec
cmp
mov
repnz
pop
loope
jae
cltd
xor
mov
pop
ss
cmpsb
dec
ret
sub
ja
sub
lods
lea
adc
out
insl
mov
dec
cmp
je
test
lret
mov
icebp
aaa
jecxz
jmp
cmp
mov
shr
orb
pop
cmp
jl
or
inc
dec
mov
pop
jle
dec
adc
mov
rcrl
lahf
mov
lods
xor
faddp
movsl
mov
sub
ret
pop
out
jecxz
stc
lret
dec
mov
jbe
pop
push
xchg
mov
stos
std
in
lahf
dec
das
xchg
xchg
or
sub
fdiv
cs
cmp
pop
popa
repz
jg
ljmp
subl
dec
int3
jns
das
adc
adc
xchg
lods
rcrb
sbb
repz
mov
jmp
pop
ja
mov
in
mov
inc
fisubrs
or
add
push
cs
in
sti
add
sbb
test
inc
dec
jecxz
comiss
fistps
cmc
xlat
push
xchg
add
and
rorl
jge
inc
inc
imul
ss
dec
cltd
scas
in
lret
cmp
out
xor
fildll
xor
push
xlat
pop
and
inc
aas
adc
sbb
jnp
enter
push
jnp
and
es
lock
fwait
push
stos
mov
out
jecxz
pop
in
add
aad
repz
mov
es
inc
sub
mov
mov
movsl
arpl
push
jmp
cmp
je
push
adc
lret
push
or
scas
into
dec
mov
mov
sarl
sbb
addl
rcl
dec
push
divb
call
jne
inc
jo
rcll
stos
dec
ror
jle
hlt
xor
mov
out
dec
push
xchg
popa
lea
movsb
xchg
pop
lea
xor
sub
xchg
pop
xor
dec
mov
adc
cmp
test
cmp
icebp
add
sbb
sbbb
sbb
in
add
mov
fadds
in
mov
fst
xor
mov
fmull
sbb
imul
ljmp
add
dec
xchg
jb
xchg
sbb
dec
push
jle
jmp
push
dec
cmp
repz
and
sbb
push
movswl
cwtl
mov
cmp
call
test
push
xor
xor
sbb
and
sbb
repnz
and
icebp
insl
cltd
test
in
leave
adc
inc
mov
aaa
inc
sub
out
add
out
pop
sbb
adc
sub
fisttpl
jnp
sbb
jl
stc
mov
add
adc
je
lods
outsl
out
lret
pop
aaa
int
mov
xor
imul
fwait
mov
subb
cld
loopne
pop
xchg
xor
das
outsb
lret
icebp
mov
add
adcb
sbb
mov
popf
test
adc
adc
adc
or
imul
stos
test
fsubrs
add
dec
decl
aam
xor
and
ss
lahf
je
jmp
adc
nop
xchg
xor
pop
mov
sahf
cli
push
movsb
pop
icebp
cmp
repz
xcrypt-ecb
cmpsl
into
or
xchg
cwtl
sahf
mov
pop
dec
es
lret
sub
mov
daa
mov
cmpsl
or
into
xlat
xchg
jmp
lcall
sbb
jp
sub
and
jg
push
jge
sbb
cwtl
cmp
adc
movsb
lods
or
add
stc
mov
push
ss
add
mov
lret
xor
js
pushf
ds
add
not
sub
std
addr16
push
dec
xlat
addr16
pop
rol
jae
shrl
jmp
decb
add
cmpb
pop
mov
mov
push
dec
mov
sub
push
popf
stos
jae
adc
sub
mov
sbb
jecxz
test
push
lret
repnz
sbbl
in
dec
in
sbb
sub
fcoml
adc
push
adc
push
mov
sub
arpl
inc
mov
push
xor
es
xlat
sarb
jl
sub
hlt
cli
jle
cwtl
sbb
push
cmp
outsb
fadds
cmp
and
sub
mov
lcall
mov
xor
loopne
fisttpl
cwtl
ss
iret
inc
out
add
repnz
adc
jg
adc
jae
ljmp
in
adc
or
jo
cmp
pop
push
daa
inc
pop
inc
or
imulb
ljmp
push
add
loope
sub
lcall
push
icebp
es
sub
jne
sarb
int3
les
inc
push
jge
loopne
ss
shlb
hlt
dec
or
fucomi
mov
mov
and
daa
out
xor
pop
xor
xchg
sub
popa
xchg
test
pop
pushf
mov
outsb
imul
push
pop
sbb
jle
out
in
mov
cmp
push
and
mov
into
jnp
add
dec
call
sub
jle
xchg
mov
sub
push
stc
sbb
xor
imul
call
inc
loop
out
in
mov
daa
ljmp
jle
xchg
jno
pop
mov
jge
xor
aaa
xchg
xchg
jg
pop
lea
in
push
rorb
cltd
js
mov
jo
insl
imul
jnp
pusha
push
ret
out
nop
aad
push
pusha
cmp
mov
mov
pusha
dec
jne
das
add
jnp
xorl
mov
insl
inc
xor
idiv
xchg
jge
stos
xor
mov
jmp
mov
sub
test
adc
and
xchg
push
sbb
sbbl
aam
push
push
jnp
cld
aad
mov
fnstsw
pop
dec
cmp
mov
cmpsb
push
jle
jb
mov
lock
mov
rcl
mov
in
and
sahf
or
stc
cmp
cli
pop
dec
fs
mov
sahf
cmpsb
jnp
xchg
dec
lds
jb
test
jg
cmpsb
pop
enter
fisttpll
in
cmp
out
adc
hlt
nop
dec
dec
jmp
push
ret
sbb
sbbb
xor
adc
cmp
iret
or
push
in
arpl
push
jle
xor
dec
stos
inc
es
cmc
dec
sbb
nop
insb
rorl
mov
xchg
pop
dec
mov
xor
inc
stos
sub
fcomps
xorl
rorb
shrb
stos
orb
shrb
cmp
and
in
and
scas
addr16
jnp
test
ret
cmp
adc
jbe
in
inc
icebp
adc
sub
or
in
loope
fbld
mov
mov
mov
dec
jle
jl
fisubrl
pop
imul
mov
jae
loope
mov
add
pop
jecxz
movsl
adc
adc
iret
xor
sub
repnz
pop
sbb
adc
push
mov
fisubrs
ficomps
pop
imul
fsubrs
test
mov
ljmp
scas
repz
pop
testl
lock
shll
adc
in
dec
push
mov
lods
inc
movsb
jecxz
sbb
mov
stos
mov
mov
push
stos
mov
imul
call
xchg
fistpl
xor
and
add
dec
nop
xor
loope
adc
lock
test
mov
and
adc
movsb
adc
adc
adc
gs
jno
mov
push
cmc
xor
lods
rorb
sbb
push
pushf
jb
loopne
lret
jo
mov
shlb
sub
out
sbb
stos
jl
test
ljmp
aad
hlt
out
jle
rcrb
cmc
dec
loope
jno
fs
pop
cwtl
scas
stos
inc
or
test
adc
pop
ret
jno
daa
fs
stos
stos
xor
mov
push
inc
shlb
lods
cmp
in
push
ljmp
xchg
sub
out
fisubrs
outsb
jne
stos
dec
das
stos
pop
adc
loop
fists
inc
push
in
jbe
aam
cld
pop
xor
sub
pushf
mov
mov
pop
pop
fs
fnsave
scas
adc
and
sbb
fcmovbe
or
inc
cmpsb
xor
shr
add
mov
popa
inc
push
popa
jmp
jle
hlt
xor
imul
add
ljmp
addl
cmp
jae
lret
jno
xchg
imul
cmp
dec
wbinvd
mov
out
repz
sbb
test
data16
in
lods
aas
out
gs
and
lahf
xchg
negl
jae
mov
call
jmp
push
fs
iret
adc
int3
jmp
pop
xlat
dec
fisubrl
ja
xor
rep
ret
leave
sbb
fs
mov
sub
outsb
xchg
sbb
addb
orl
mov
sub
bnd
mov
data16
movb
sbb
xor
out
shll
stos
xlat
push
daa
daa
ja
and
mov
sbb
ds
xchg
popa
fdivrs
pop
mov
xadd
pushf
orb
sbb
decl
lock
loopne
jp
sub
and
and
shl
enter
add
cmp
jnp
sarb
repnz
jg
xchg
jg
sub
add
ss
pop
sub
sbb
inc
jne
mov
or
jb
lcall
cmp
dec
or
das
ljmp
lea
nop
sub
call
jo
negb
xchg
outsb
movsb
loop,pt
ret
push
loopne
out
mov
rcll
sarl
push
out
imul
int
sbb
and
adc
push
shll
jnp
jbe
push
fucomp
cmp
lret
add
fwait
shl
adc
inc
mov
stos
mov
adc
mov
mov
inc
xor
xchg
ret
outsb
subb
mov
and
inc
rclb
mov
test
testb
fdivl
lock
dec
fistpl
adc
es
inc
xor
js
hlt
jno
mov
fisubrl
sbb
or
jle
sbb
loopne
xor
rcll
or
push
and
ret
xchg
mov
data16
je
push
dec
mov
mov
jmp
mov
xor
sbb
xor
popa
mov
aam
mov
push
cwtl
aad
rcll
xchg
or
sbb
dec
inc
adc
popa
and
jecxz
and
mov
out
in
xchg
into
rcll
pusha
push
add
daa
pop
gs
mov
stos
scas
jge
loop
in
fsts
adc
daa
inc
sub
fwait
js
mov
and
xchg
jo
in
or
insl
pop
ja
into
rcl
pop
adc
or
cmpsl
jne
dec
xor
sbb
iret
icebp
jl
adc
andb
sub
fcomps
mov
and
inc
xchg
in
divb
adc
das
mov
xchg
inc
subl
lods
enter
loope
xor
xchg
sub
outsb
in
movsb
icebp
push
cltd
fs
and
sbb
and
das
clc
cmp
imul
and
adc
mov
int3
xchg
push
lea
mov
leave
xchg
pop
fisubrs
mov
cmp
out
call
sbb
sar
mov
mov
cmp
clc
repnz
shrl
push
imul
test
xor
daa
loope
loop
enter
jae
nop
sub
mov
jl
inc
mov
push
push
out
push
jo
cwtl
sub
in
sub
test
jmp
adc
add
push
bound
pop
testb
jp
cmc
ljmp
scas
fldenv
dec
push
fildll
push
repnz
pop
mov
dec
mov
xor
scas
dec
jg
push
xchg
mov
xor
inc
fists
nop
jnp
or
addr16
out
xor
xchg
pop
or
je
stos
add
sbb
pop
mov
daa
inc
test
mov
in
cmp
fildl
icebp
sbb
test
adc
das
pop
sbb
stos
push
repnz
add
aas
bound
and
nop
cmpsl
add
mov
popf
inc
popf
sbb
in
aas
rcrb
and
push
cmp
mov
and
sbb
je
pop
gs
scas
xchg
xor
mov
movsl
fcoml
ss
add
xchg
shrl
push
xchg
std
fld
adcl
dec
push
jp
adc
xlat
pop
out
nop
inc
push
pop
imul
imul
xchg
int
mov
or
loopne
jb
iret
lea
and
or
enter
cmpsb
dec
sbbl
sahf
rorl
hlt
mov
pop
dec
push
les
adc
bound
pop
into
cmp
adc
js
xor
mov
add
cltd
pop
lods
leave
mov
push
jg
loope
and
imul
mov
ds
popa
outsl
fnstcw
fnstsw
cli
xor
mov
data16
test
xchg
add
in
daa
shll
rol
popa
mov
xchg
xchg
ret
xchg
es
jne
je
jmp
lret
adc
test
leave
adc
mov
fs
sbb
repz
dec
rcrl
add
lahf
dec
cmp
insb
jmp
inc
mov
xchg
dec
ja
loop
and
rolb
fucomip
adc
ss
push
mov
out
icebp
push
adc
xlat
cmc
notb
sarb
pop
dec
or
movsl
and
lcall
lret
adc
rol
mov
mov
cmpl
in
or
ret
xchg
cmp
mov
popf
aas
aas
dec
out
loopne
and
push
push
rorb
mov
or
imull
out
xor
dec
dec
push
sub
mull
mov
wrmsr
pop
mov
mov
and
sub
int3
cmp
movsb
pop
and
cmp
push
shlb
fsubl
pusha
ss
aam
arpl
push
add
cmp
mov
xchg
mov
movsb
push
cmp
sub
or
pop
or
iret
shrb
mov
xorb
mov
mov
mov
and
idivl
push
xorb
mov
insb
aam
or
test
xor
sub
jnp
dec
sahf
cwtl
nop
lcall
lret
sub
icebp
jmp
cld
jne
pop
sbb
xchg
push
inc
cmpsb
repnz
fbld
rolb
add
gs
inc
xor
dec
notl
mov
in
xchg
jno
jle
ds
fdivl
cs
sub
mov
sbb
ret
insl
insl
mov
inc
aam
addr16
add
mov
scas
clc
xlat
insb
xchg
adc
push
movsl
arpl
mov
pop
push
lahf
ret
fldt
add
mov
rsqrtps
cmp
push
jnp
dec
add
inc
lea
inc
mov
push
addr16
into
enter
dec
scas
sbb
aam
mov
mov
scas
dec
xchg
addr16
pop
ret
fidivl
icebp
stos
lods
movsb
and
movsb
xor
sub
mov
jae
and
mov
lret
or
lcall
mov
mov
fwait
sub
rolb
js
addr16
sti
in
scas
aam
loopne
out
add
push
mov
mov
inc
mov
cwtl
mov
mov
jno
rcrb
lea
lods
test
add
sbb
daa
pushl
mov
cmp
lock
push
add
scas
sahf
pop
dec
insb
jo
or
inc
pop
ret
jmp
adc
enter
xorl
xchg
pushf
stc
out
cmp
xchg
adc
pop
sahf
mov
aam
lods
aad
inc
insl
outsb
andb
out
repnz
js
outsb
or
ret
xchg
fbld
cmc
xlat
call
mov
cmpsl
out
inc
scas
outsb
out
cmp
iret
sub
xor
in
lahf
adcb
dec
inc
shlb
lods
pushf
cs
dec
inc
dec
mov
push
adc
mov
in
daa
dec
in
cmp
pop
subb
add
movsl
addr16
loop
add
mov
xor
insb
psllq
jae
lods
pop
inc
adc
cmp
and
jg
push
lahf
pusha
push
xchg
orb
lea
mov
xor
pop
loopne
dec
jo
inc
push
xchg
dec
stos
mov
pop
ret
scas
jae
pop
cmp
lahf
pop
pop
xor
mov
mov
add
adc
ret
imull
movsb
mov
js
adc
int
les
sub
cmpsb
test
movsb
lret
xlat
rclb
mov
mov
repnz
cli
int3
daa
sbb
add
test
gs
cmp
leave
in
je
xor
es
cmpsl
and
sub
gs
mov
std
push
mov
call
aaa
movb
mov
push
jne
pop
pop
mov
sti
test
adc
cmc
mov
mov
add
jg
daa
adc
fcom
adc
rcrb
lods
cs
mov
mov
movsl
dec
xor
mov
adc
or
fwait
sub
lahf
lods
push
mov
popa
mov
cmp
adc
sbb
stc
test
jnp
movsl
cmp
pop
test
jb
mov
mov
xor
adc
jbe
xchg
add
cmp
movsb
in
gs
lods
add
jecxz
bound
int3
inc
subl
stos
xchg
faddl
xchg
popf
fisubl
or
xor
mov
aad
cmp
loope
out
dec
dec
mov
add
imul
lret
mov
mov
pushf
sbb
add
push
sbb
scas
push
lret
dec
push
test
push
fists
mov
and
cmpl
sub
dec
push
add
fcomp
or
push
repnz
xchg
push
pop
pop
inc
or
fldlg2
js
cmp
jmp
adc
inc
pop
jge
ret
or
scas
push
imulb
mov
pop
aaa
data16
mov
jbe
and
scas
jne
inc
cmpl
xchg
adc
fidivrs
stc
or
mov
mov
imulb
pop
popf
shl
dec
mulb
arpl
inc
push
add
mull
cs
sub
lcall
ret
cmp
pop
outsl
mov
mov
out
test
add
pusha
xchg
rclb
push
cmp
test
xor
or
imul
lock
jbe
cmc
xchg
stos
lcall
mov
pop
andb
sbb
cltd
clc
shll
cmp
inc
mov
cli
mov
jae
jp
push
imul
fsubl
xlat
sbb
jmp
mov
fucom
adc
ss
pop
dec
mov
inc
add
pop
cltd
rclb
mov
jne
dec
mov
out
fisubrl
mov
cmpb
je
and
push
lahf
mov
or
jo
push
in
jne
mov
movsl
dec
push
jmp
lret
adcb
mov
push
push
mov
adc
add
divb
pop
cmp
push
or
dec
xlat
mov
xchg
jmp
sbb
add
inc
xchg
or
pop
jmp
adc
sbb
in
dec
xchg
mov
inc
fld
xor
mov
stos
inc
cmc
iret
inc
and
leave
xor
rolb
jbe
pop
inc
ja
xchg
js
fisttps
daa
xor
add
and
push
push
insl
test
fcmovne
popa
testb
lcall
in
ja
popf
std
rcrl
das
sub
lock
mov
inc
xchg
sub
iret
mov
mov
aaa
cmp
mov
ret
push
sub
test
add
ret
xor
push
lds
add
push
scas
push
sbb
in
cli
aaa
push
and
pop
push
insb
test
rolb
adc
mov
xchg
mov
outsl
mov
push
cmpl
in
dec
sub
mov
cwtl
jnp
mov
jnp
sub
dec
popf
cmp
icebp
lods
test
add
loopne
ret
inc
xchg
add
pop
cmc
mov
popa
repnz
jns
sbb
pop
and
xor
jb
mov
dec
movsl
outsb
jno
dec
dec
in
imul
dec
aaa
jns
les
pushf
push
insl
addr16
xchg
or
add
mov
or
add
xlat
xor
arpl
shrw
sub
loope
sub
adcl
lcall
jbe
outsb
scas
loopne
xor
pop
ja
xchg
pop
int
inc
pusha
scas
imul
sbb
hlt
cwtl
cmp
or
inc
push
mov
lret
test
popa
mov
inc
test
mov
fwait
clc
in
aaa
push
push
aas
xor
xchg
add
mov
or
inc
and
adc
insl
xchg
adc
sahf
mov
pop
ljmp
movl
mov
mov
out
dec
inc
push
mov
sub
push
push
sbb
push
hlt
mov
je
arpl
mov
ss
mov
inc
pop
adc
jne
adcb
fidivrs
add
push
xchg
xor
and
sub
out
xor
xor
push
sbb
jle
fmull
mov
les
and
aam
or
repnz
xor
aaa
mov
sub
into
aaa
mov
inc
insl
sbbb
or
mov
pop
and
jle
jae
cwtl
std
adc
jmp
adc
mov
lds
pop
cld
jmp
dec
sbb
inc
les
in
fwait
js
mov
es
das
sub
sub
imul
call
inc
sbb
adc
ret
loope
or
pop
mov
les
add
or
les
adc
std
jae
int
ds
cltd
adc
adc
and
movhps
jbe
in
ljmp
into
dec
out
rclb
fdivrl
and
subl
push
and
negb
iret
cltd
cwtl
sub
mov
pop
xor
cmpsl
call
mov
jmp
nop
xor
xchg
leave
push
pop
add
sub
push
imul
adc
icebp
mulb
xchg
in
das
lods
cmp
rorb
rcll
adc
and
xor
xchg
mov
imul
mov
xor
fcmovnu
addr16
push
jle
cwtl
in
and
gs
xchg
testb
adc
stc
push
cmp
mov
filds
scas
push
adc
dec
push
or
dec
xchg
int3
cmp
sub
mov
daa
outsb
and
test
insl
jp
xchg
jne
arpl
jb
mov
push
sbb
clc
and
cmpsl
int
adc
sbb
jnp
push
push
xchg
xchg
bound
mov
nop
aaa
inc
mov
stos
mov
xor
xor
inc
mov
fisttps
cmp
loop
lret
mov
cwtl
sarl
sub
sti
fsts
and
scas
jb
xor
sub
or
push
shr
sbb
or
mov
aas
push
mov
push
jnp
pop
cmp
cmp
sbb
mov
popf
sub
imul
ss
xlat
jne
sbb
cmp
dec
cmp
inc
xchg
pop
or
std
les
aad
mov
mov
jl
jno
sbb
outsb
enter
ss
mov
jge
jae
push
mov
lods
cmpsl
pusha
cmpsl
cmp
loopne
cmc
or
push
testb
jae
jne
call
movsl
dec
lds
pop
push
shrl
loopne
dec
or
sub
or
jb
mov
fstl
fstpt
out
xor
out
mov
jg
xchg
pop
dec
pushf
test
dec
sbb
movswl
cltd
lret
inc
imul
out
or
dec
push
xchg
push
in
jle
fcmovbe
mov
ss
mov
or
orl
push
loopne,pn
popa
xor
idivl
jo
inc
adc
sub
dec
dec
ret
push
jp
xlat
and
inc
push
mov
mov
mov
fs
shr
or
rclb
jne
xchg
mov
dec
lret
aaa
mov
cmp
xor
mov
pop
mulb
shrb
cltd
test
jmp
test
adc
out
dec
push
push
aam
aaa
sbb
push
rcl
fsubrl
in
xor
in
adc
inc
lcall
mov
cld
fsubrl
addr16
or
sub
popw
mov
pop
jno
andb
sbb
cmp
in
sarl
xchg
hlt
or
add
mov
fsubl
ja
jge
xchg
or
imul
dec
loope
mov
daa
xchg
sbb
push
fisubs
orb
inc
mov
mov
mov
cmp
jp
xlat
mov
push
shrl
int3
jle
adc
lock
add
icebp
adc
cwtl
xor
int3
dec
ret
es
mov
cmp
sub
stos
inc
mov
add
mov
ja
test
into
pop
sub
adc
sti
cltd
outsb
xor
jge
xchg
les
mov
sbb
inc
sub
notl
mov
add
js
or
test
jo
scas
mov
outsl
imul
cmpsl
outsb
ja
mov
sbb
sbb
loop
inc
lea
roll
lods
jg
dec
cmp
test
adc
in
jae
mov
fdivs
sbb
jae
jmp
cmpsl
ljmp
cmp
lods
shll
es
mov
icebp
lahf
pop
sbb
pushf
lds
adc
aad
push
int3
int3
movsb
pop
jmp
push
add
xlat
sti
mov
sub
mov
jns
sub
dec
sahf
pusha
inc
push
enter
mov
adc
inc
pop
xlat
mov
cmc
inc
xchg
sbb
mov
cltd
dec
out
cli
sub
dec
add
lret
ss
add
cli
xor
ja
mov
outsb
test
dec
cwtl
fstpt
jno
bound
push
out
push
daa
mov
pop
pushf
or
movsb
loop,pn
int3
out
stos
lcall
rcr
lret
mov
outsb
mov
stos
into
aam
xchg
aad
lcall
jmp
addb
jno
pop
rolb
imull
shl
dec
fldt
addr16
jae
lods
pushf
jbe
push
in
test
jne
jg
fcompl
loopne
mov
mov
lcall
ljmp
rclb
inc
jb
jo
das
add
sub
pop
mov
push
inc
cld
fwait
xor
scas
pop
cmc
and
pavgb
xor
test
cltd
imul
cli
inc
repz
dec
popf
cmp
adc
cld
sbb
add
add
mov
mov
and
aas
lret
aad
add
inc
mov
sub
test
inc
add
cmp
inc
cmp
out
lods
mov
jge
cmpb
sti
repz
cwtl
test
scas
sti
imul
iret
xchg
dec
sbb
pop
or
pop
imull
fcmovb
cmp
test
sahf
or
and
dec
push
mov
mov
sti
in
push
cmpsb
addr16
pop
xchg
test
pop
jp
cmp
fildll
xor
out
xchg
or
imul
out
jae
dec
paddd
les
inc
in
or
cmp
or
inc
mov
icebp
mov
pop
mov
sbb
aam
insl
or
cli
push
scas
es
gs
loope
xchg
les
jbe
lret
aaa
ja
pop
scas
jg
in
jge
add
adc
and
push
push
xor
and
andb
fsubr
insl
xor
sti
bound
dec
cwtl
push
leave
xor
jbe
pop
inc
cmc
cmp
paddw
mulb
push
push
add
data16
xchg
xchg
xchg
dec
call
xor
int3
sub
dec
in
pusha
hlt
lret
dec
sahf
outsl
adc
xchg
xchg
jne
inc
loopne
fnstenv
pop
hlt
push
aas
jnp
ret
add
jg
push
push
jbe
aas
pop
or
test
fs
repz
jecxz
flds
pop
adc
push
loope
mov
into
cwtl
xor
push
pop
jno
popf
clc
arpl
ficoms
lret
mov
ret
jl
cmp
cld
adc
adc
repz
adc
fidivrs
mov
mov
fiadds
jns
mull
insl
sub
call
pop
pop
in
mov
inc
cld
jge
dec
fucomi
rcll
sub
xorl
inc
add
or
sbb
sbb
leave
push
jns
rolb
ss
iret
xor
ds
movsb
aad
cwtl
jno
sbb
in
repz
sbb
cld
xchg
daa
and
out
inc
outsb
sbb
sbb
mov
sbb
mov
mov
mov
sahf
dec
add
cs
add
pop
pop
mov
dec
test
mov
sti
ja
ljmp
cmp
push
shl
cli
inc
test
inc
xchg
stos
push
mov
add
aaa
add
or
and
sti
mov
nop
jecxz
sbb
xchg
xchg
inc
mov
leave
pop
mov
mov
call
int3
or
int
mov
mov
xchg
in
adc
mov
shlb
push
ret
dec
xchg
jne
sub
rcl
stos
or
xchg
fisubrl
mov
lea
mulb
cmp
popf
mov
cltd
clc
mov
cwtl
pop
xchg
xchg
cwtl
pusha
xchg
sti
push
inc
xor
inc
stos
outsb
aad
add
fbld
dec
pop
push
jns
pop
mov
adc
fs
cmp
adc
mov
lret
leave
inc
push
popf
lret
inc
mov
adc
loope
dec
inc
and
pop
cmpsl
xor
fidivrs
mov
push
add
and
cmp
repz
jns
ds
mov
pop
jae
pop
popl
inc
mov
dec
call
in
fcmovb
scas
cmpsb
loopne
repnz
cmp
adc
repz
out
push
clc
in
jge
inc
andl
mov
sub
shl
lock
mov
movsl
je
or
adc
ljmp
or
andb
push
fdivl
lods
sbb
jne
mov
ficoms
lret
inc
xor
dec
mov
lds
dec
push
jp
push
xchg
or
xchg
imul
mov
fimull
and
lea
xchg
stos
mov
cmp
popf
mov
xchg
jne
mov
shrl
jecxz
dec
int
popf
fwait
mov
mov
mov
inc
lcall
adc
dec
ja
aas
aas
or
sbb
push
jne
push
nop
dec
jmp
xchg
xor
fucomip
clc
sub
mov
or
mov
cli
shlb
push
ds
mov
mov
insb
cmp
mov
lahf
aas
ss
imul
es
cmc
jmp
ljmp
mov
lds
adc
xchg
jle
int3
out
test
sbb
cmc
push
xchg
fs
out
cmpsl
inc
dec
stc
pop
jl
jnp
stc
add
mov
es
out
popa
insb
cmpsb
adc
in
outsb
or
movl
xchg
lds
dec
or
hlt
mov
iret
add
lret
cmc
int
inc
adc
dec
out
xor
dec
and
lock
mov
popf
mov
cmp
out
enter
cwtl
out
add
dec
fbld
rcrl
sbb
movsl
mov
insl
rcll
mov
les
adc
pop
subb
int3
mov
xchg
push
mov
jae
add
mov
jge
test
lret
dec
movsl
push
jo
jg
popf
sti
push
mov
jg
stos
lods
stos
sbb
xor
mov
lock
mov
into
xchg
sub
rorb
push
or
push
push
shrb
pop
ret
std
xor
adcb
sub
popf
lcall
pop
jp
mov
mov
push
add
cmp
loop
orb
jae
dec
in
mull
insb
xchg
aas
mov
sti
pop
sub
inc
mov
addl
stos
push
inc
outsb
enter
enter
stos
stos
test
mov
les
loop
and
fs
xchg
jnp
lock
mov
lds
push
daa
neg
mov
jp
lret
mov
sarl
push
movnti
mov
xor
mov
xor
push
mov
cmpsb
adcl
sbb
mov
or
push
cmc
in
mov
sbb
les
or
call
aad
add
add
fcoms
je
fwait
nop
out
fistps
into
shll
out
jecxz
outsl
push
lret
jge
push
hlt
xchg
xor
or
push
mov
pop
push
bound
sti
mov
cmp
int3
test
xor
pop
aaa
ds
mov
xchg
int3
fs
dec
mov
jmp
movsb
dec
cmc
fwait
add
das
in
pop
fs
das
les
inc
mov
jl
lock
pop
or
push
adc
inc
aaa
lea
inc
sbb
mov
movsl
push
movsl
pop
fsubrl
jne
adc
jge
cmp
out
cld
or
call
negb
mov
int3
lods
mov
dec
and
daa
xor
movsl
jecxz
sahf
dec
mov
mov
fs
cmp
aam
and
inc
arpl
ret
xor
xchg
push
mov
or
sbb
test
pop
pop
pop
loopne
into
in
ja
xor
sbb
rolb
fdivrs
gs
inc
cld
inc
repnz
add
lods
jp
loopne
cmp
push
movsl
push
imul
scas
mov
jne
lret
sub
test
mov
call
jne
add
mov
adc
or
test
sub
aam
insl
dec
mov
cmc
inc
inc
lcall
out
and
or
pop
mov
loopne
xor
mov
cs
imul
out
push
xchg
iret
xchg
dec
bound
aad
stc
es
jno
pop
mov
subb
or
call
xchg
or
test
dec
sti
loop
sub
and
jecxz
fld
out
add
dec
xor
les
mov
loop
xchg
inc
ss
sbbb
inc
int3
lods
repnz
ds
aam
jge
aas
jns
sbb
push
stos
pop
out
repz
shrb
xchg
cmp
xor
dec
xchg
xchg
std
adc
das
cli
sbb
lea
pop
loopne
pusha
ret
inc
outsl
lcall
sbb
pop
ss
cmp
pop
add
add
mov
imulb
xor
imul
rcrl
movsl
jmp
adc
sbbl
push
imul
add
and
lcall
push
inc
pop
cmc
add
jb
clc
mov
test
push
cli
and
inc
test
test
xor
mov
cld
into
ret
mov
xchg
loopne
adc
movsl
ss
jmp
fistps
popf
lahf
cltd
mov
mov
and
sub
iret
and
test
or
stc
mov
sbb
and
int3
adc
push
fcoms
jb
push
nop
mov
pop
adc
or
js
test
push
jl
scas
movd
std
xchg
sbb
mov
test
dec
jno
or
add
test
jae
sbb
lahf
out
mov
ja
arpl
cmp
xchg
insl
pop
push
scas
outsl
jno
sarl
cwtl
movl
add
add
outsb
sub
and
mov
in
sub
adc
ret
or
repnz
loop
adc
mov
mov
cs
pop
iret
loop
inc
mov
add
sub
into
push
sub
imul
lods
mov
mov
cld
push
jns
or
dec
shll
inc
xchg
push
inc
ja
push
lcall
lcall
fsubr
adc
sub
cli
pop
icebp
lea
xchg
aam
inc
mov
adc
xlat
xor
out
arpl
mov
imul
jae
shlb
sti
jne
adc
cmp
sbb
dec
push
fcmovne
adc
adc
ja
adcl
dec
sbb
cmp
cmp
nop
js
dec
xor
adc
mov
mov
mov
sti
cmc
std
xchg
xor
sub
ss
push
sbb
out
sub
jp
mov
sub
sti
test
jle
fildll
and
leave
and
pop
movsl
dec
sub
xchg
pusha
pusha
into
adc
pop
push
push
test
pop
mov
pop
in
mov
je
fsts
in
jae
aam
or
fs
sarb
jns
je
dec
and
xchg
jno
xor
call
dec
sbb
mov
inc
push
loop
mov
jbe
faddl
pop
add
xchg
lea
test
in
mov
sahf
mov
pushf
jne
fisubs
aam
mov
pop
inc
cmp
jg
addb
pop
ss
das
fwait
xchg
jo
stos
cmc
pop
pop
je
jno
call
pop
stc
je
and
int
or
mov
ja
cmc
mov
in
cmpsb
push
outsb
dec
cmp
dec
or
jge
and
in
jae
mov
aad
fcompl
push
popf
imul
sbb
leave
push
frstor
adc
add
and
mov
es
sbb
cmp
test
push
in
pop
push
or
sbb
and
je
add
addr16
test
xor
inc
jb
cmp
movsb
nop
pop
xchg
xlat
dec
fs
shll
inc
inc
sub
adc
repz
push
nop
aas
out
sub
add
negl
mov
sbb
imul
bound
test
mov
xor
loop
and
and
pop
sub
mov
call
lds
adc
outsl
imul
daa
cltd
xor
mov
or
ret
jbe
cmp
dec
inc
mov
stc
pop
fnstenv
fmull
cmpsl
lea
jl
outsb
das
mov
sahf
arpl
push
lret
div
dec
aas
add
nop
adc
inc
bound
out
cmc
xor
sbb
jo
sub
rorb
les
sbb
xchg
fdivrl
push
test
jge
ljmp
jmp
sbb
adc
stos
insl
fstpt
ss
cmpsl
pop
or
inc
and
popf
int
bound
lea
xchg
pop
imul
lret
mov
mov
dec
sbb
push
sub
movsl
push
ljmp
jg
dec
adc
pop
xor
mov
add
cs
cmp
dec
dec
add
mov
mov
xchg
push
push
or
in
test
mov
test
jb
adc
adc
cmp
cltd
sub
jne
push
dec
je
fld
iret
nop
pop
in
mov
push
inc
int3
ret
jl
mov
xor
loopne
loope
pop
cwtl
push
push
mov
mov
add
mov
iret
push
add
sbb
inc
pop
dec
shlb
int
outsl
lcall
pop
and
fldenv
xor
jle
xchg
jmp
or
mov
insb
xchg
lahf
push
cmc
pop
jl
push
test
aas
and
xchg
iret
push
movsl
jae
push
cwtl
dec
push
sbb
lds
andl
stc
ja
ds
jne
pop
out
add
leave
jle
or
dec
nop
inc
cli
mov
xor
dec
mov
out
push
sub
das
or
call
mov
xor
cmp
pop
sbb
dec
pop
movsl
mov
nopl
mov
pop
push
add
cs
cwtl
movaps
sahf
dec
je
dec
jge
jns
imul
mov
stc
cmp
or
mov
inc
push
adc
addr16
or
aaa
insl
out
or
inc
mov
repnz
shl
add
and
and
cmp
mov
cmp
xchg
orl
jge
dec
or
cmp
daa
push
stos
adc
inc
cmpsl
mov
movsb
aaa
shlb
dec
jecxz
xchg
outsl
mul
popa
mov
popf
mov
mov
xor
xor
sub
lret
sub
pop
fbstp
mov
fisubrs
mov
insb
int3
jne
out
push
mov
fsubrp
sbb
cmc
jns
lahf
pop
adc
dec
mov
mov
frstor
cmp
hlt
adc
mov
in
mov
aad
sti
jnp
je
mov
xchg
pop
mov
mov
imul
fdivl
les
xor
sti
test
ret
arpl
inc
test
pop
call
les
pop
fnsave
pop
adc
add
inc
xor
out
lret
and
xor
pushf
lcall
add
in
aad
mov
outsl
loope
bound
pop
loope
dec
aad
xorl
sbb
add
xchg
jbe
int
fcomip
cmp
jae
outsb
mov
mov
add
and
inc
mov
pop
fistl
loope
js
popf
mov
jmp
push
adc
mov
sbb
inc
in
adc
ret
subb
test
add
movsb
test
mov
jae
mov
aad
jne
jg
and
add
push
xor
mov
jae
das
pop
fstpt
pop
mov
lock
adc
call
imulb
fs
aam
inc
mov
sub
lods
or
xor
stc
in
jge
arpl
mov
jecxz
out
inc
mov
sbb
push
mov
dec
mov
dec
cmp
and
mov
inc
jg
mov
shlb
shl
push
sbb
mov
ds
or
inc
je
fildll
mov
mov
cmc
xchg
xchg
int
iret
stos
cmpsl
test
xor
xchg
lds
cwtl
into
mov
stos
dec
scas
sub
xor
jb
sub
lahf
pop
push
jnp
popa
inc
mov
sub
lock
dec
popf
push
pop
lods
dec
or
mov
push
push
or
test
jge
divb
mov
cmp
out
insb
mov
cli
stos
pop
ss
lods
hlt
lock
cmp
shrb
xchg
sbb
and
seto
mov
mov
stos
test
arpl
sbb
in
stc
lds
aad
sbb
mov
stc
add
push
mov
or
mov
or
jne
add
test
xchg
addr16
sbb
popa
int3
in
add
out
add
ljmp
pop
cld
fbld
pop
mov
cmpsl
lds
dec
sbb
jnp
and
sub
mov
ficoml
or
or
sahf
push
inc
imul
ss
add
lret
outsb
fcmovbe
xchg
enter
mov
or
pop
sbb
xor
jl
movsb
jb
push
stc
orl
and
mov
shrl
loope
sub
in
pop
lahf
xor
add
xor
lods
into
stos
pop
sarl
dec
je
pop
cld
dec
mov
jg
xlat
add
xchg
lods
mov
test
push
dec
sti
mov
insb
rcrb
cmp
xchg
jnp
sbb
scas
outsb
cwtl
xchg
cmp
es
sbb
andb
loopne
in
fsubs
push
pop
lds
xchg
cmp
sbb
fucomip
nopl
jl
hlt
cmp
pop
ret
cs
shrb
or
mov
iret
adc
pop
mov
pop
repnz
aas
fidivrs
sbb
test
imul
inc
mov
jle
xor
fstpl
test
xchg
push
fwait
aas
xchg
dec
mov
pop
dec
lock
add
rcl
inc
gs
mov
cmp
xchg
dec
sub
pop
xchg
mov
dec
cs
xchg
sahf
push
mov
test
xlat
scas
or
int3
out
sbb
adc
mov
cld
pop
aad
ret
and
cmp
sbb
pop
xchg
ljmp
dec
mov
cmp
mov
les
scas
lret
sub
xchg
xchg
test
les
aam
cmpsb
jbe
mov
lock
mov
jbe
repnz
scas
rol
fisubrl
movsl
flds
cmp
fmull
inc
imul
pusha
or
test
mov
das
push
daa
mov
repnz
mov
pop
call
je
in
sbb
scas
lahf
push
out
push
push
lods
push
mov
cld
or
add
lret
lret
movsl
rcr
mov
mov
cmp
cmp
js
jne
sbbl
adc
mov
and
push
out
mov
inc
ficoms
aas
pop
lea
js
xchg
mov
sbb
jae
jne
ret
and
ret
xor
jmp
int3
jg
ret
xchg
scas
mov
fnstsw
ret
pop
daa
inc
rorb
push
incl
adc
push
and
sbb
inc
push
and
and
xor
icebp
jo
push
pushf
jg
jno
or
xor
mov
pop
cmp
ds
sbb
in
rorb
jb
mov
dec
popa
add
pop
mov
test
jl
iret
ret
push
inc
jne
inc
pop
adc
in
or
andl
xchg
xchg
and
bound
std
fcomps
ret
jae
stos
xchg
std
imul
lods
test
jo
add
dec
shll
push
repz
xchg
and
outsb
jno
les
mov
push
jae
mov
lods
fists
push
inc
iret
fcomip
daa
in
push
xor
inc
sub
test
pop
jl
add
arpl
mov
adc
jne
xchg
dec
mov
sbb
pushf
ljmp
mov
andl
les
aas
ljmp
mov
and
adc
ds
cmp
ror
mov
push
sbb
xor
jnp,pn
cmp
and
shll
inc
addr16
sbb
push
and
sahf
sahf
xor
dec
push
mov
mov
arpl
rorb
and
mov
xchg
fisttps
mov
imul
in
lods
mov
in
xor
sbb
sub
std
mov
sahf
sbb
shll
stc
clc
jmp
mov
jbe
movsl
dec
les
aam
fstpl
jg
mov
enter
std
mov
jbe
in
dec
fnstenv
ret
cmp
sub
in
dec
dec
dec
enter
ljmp
in
cli
mov
ds
mov
fs
mov
push
pop
fidivrl
sub
mov
add
or
cmpsl
dec
test
cmp
shr
aas
cmp
mov
adc
cmpsl
lret
adc
shld
subl
cmp
and
push
add
mov
adc
out
or
loopne
pop
push
xchg
lcall
pop
roll
inc
cmpb
and
and
pop
dec
pop
cmp
dec
aad
loop
inc
inc
cltd
aas
push
or
adc
into
mov
adc
inc
inc
sub
sbb
bound
dec
or
leave
je
push
bound
inc
cli
mov
jnp
cs
test
mov
xor
leave
dec
popa
sbb
pop
push
dec
mov
mov
ret
sub
rcrl
pop
ja
or
ret
cmp
cwtl
adc
cmpsl
out
cmp
pop
cmp
mov
fsubrs
sti
in
lea
jmp
data16
aam
mov
ljmp
push
or
or
jmp
insl
ret
sub
mov
mov
pop
flds
xchg
jge
dec
pusha
add
imul
in
sbb
and
sbb
lods
lea
adc
sar
out
push
pop
push
and
test
pop
jl
mov
out
movl
or
sahf
fbstp
add
out
sub
push
test
pop
pusha
mov
push
lret
test
pop
mov
xchg
fisttpl
shlb
xor
pop
jl
shll
mov
xor
mov
imulb
mov
lret
out
jne
jmp
sahf
push
adc
movsb
mov
shr
adc
into
ds
sahf
inc
mov
hlt
inc
adc
lcall
dec
inc
adc
lods
cmpsl
push
adc
mov
mov
and
in
daa
sub
mov
insb
bound
inc
mov
adc
lds
mov
clc
cmp
mov
sub
cld
push
les
adc
aad
push
add
pop
mov
hlt
push
fisttpll
out
mov
pop
mov
xor
fsubrp
inc
xor
clc
push
leave
jmp
mulb
arpl
fistps
insb
jmp
jle
fwait
std
mov
movsl
mov
fbld
pop
adc
scas
aad
faddp
and
push
xchg
cli
cmp
jmp
sarb
inc
and
repz
test
push
add
clc
push
pop
cmp
or
jmp
pop
rorb
sarb
into
mov
mov
les
pop
pop
cli
push
out
mov
or
dec
sbb
sarl
repnz
rolb
xchg
fisttps
mov
and
stos
orb
cwtl
jae
loop
cmp
push
jmp
jmp
pop
mov
dec
sub
push
push
inc
and
inc
or
push
js
repz
xchg
subb
dec
fmul
xchg
sub
cmpsb
pop
out
fdivrp
loope
mov
scas
out
pop
lea
outsl
std
in
jge
icebp
pop
xor
lods
lock
or
dec
inc
lods
jmp
sub
or
nop
xchg
adc
sbb
test
inc
inc
push
push
pcmpgtw
pop
jbe
adc
test
and
popf
mov
das
add
rol
mov
test
mov
pop
call
sub
lods
rcl
cmp
fistps
jecxz
inc
mov
mov
jnp
aam
movb
mov
cltd
or
pop
inc
addr16
outsl
test
repnz
inc
leave
call
sub
fsts
rcr
jno
mov
xorl
fdivrs
filds
sbb
push
or
jae
shlb
dec
dec
jl
cmpsb
cltd
stos
sub
sbb
push
loop
clc
cmpsl
lahf
mov
lahf
push
lahf
dec
xchg
cmpsb
test
adcl
mov
jmp
pop
mov
xlat
mov
pop
rclb
out
rorl
negb
aas
adc
lcall
sub
mov
lret
mov
mov
inc
and
sbb
push
xor
roll
scas
dec
add
pop
push
mov
cld
cltd
leave
jle
jg
ret
mov
mov
xor
ss
and
or
cmp
push
jp
sahf
sahf
inc
rolb
stos
pop
and
xchg
mov
test
jg
sub
xchg
add
cmp
mov
mov
dec
lock
sti
cmp
sbb
aam
and
xor
jmp
out
sbb
mov
das
sbb
arpl
negl
mov
iret
pop
dec
mov
jnp
push
movsb
and
cmc
push
xchg
xchg
xlat
cmp
mov
roll
insl
mov
mov
add
lods
movsl
adc
xor
test
js
lret
js
sbb
jge
pop
das
dec
dec
jmp
xor
sbb
rcl
push
sub
shl
sbb
mov
push
sbb
out
jg
push
cmp
sti
gs
jb
jae
js
or
cmp
bound
shrl
dec
or
repz
dec
inc
aas
ss
adc
mov
in
sbb
add
sbb
loop
lods
pusha
fistpl
clc
pop
push
jb
adcb
and
js
call
and
inc
inc
mov
jmp
adcb
sar
pop
sbb
fs
dec
mov
push
pusha
jmp
xorb
rolb
push
test
or
mov
mov
mov
subl
test
subl
lea
cmp
mov
nop
inc
mov
fnsave
mov
add
stos
sbb
aas
pop
es
jge
adcb
xor
xorb
sub
lock
dec
outsl
testl
dec
lret
pop
ds
inc
jp
mov
push
adc
incl
lcall
fs
fidivs
mov
leave
aaa
and
mov
stos
jns
faddl
scas
inc
xor
aad
test
jmp
pop
adc
or
orl
popf
add
push
dec
mov
fwait
std
xchg
sbb
std
daa
xchg
subb
push
test
mov
dec
push
jecxz
pop
out
push
je
imul
leave
cmc
std
or
popf
sahf
inc
ja
out
mov
lcall
cmp
stos
test
icebp
sub
shll
aam
xor
paddsw
pop
ret
ljmp
subb
jmp
call
nop
add
inc
flds
outsl
outsl
jne
mov
xor
pop
xchg
test
inc
loope
jb
sub
sti
push
mov
xchg
push
stos
subb
mov
or
xchg
in
xchg
push
test
cmp
pop
inc
or
push
xchg
bound
jmp
testl
daa
push
leave
cmpsb
sbb
lret
pop
xchg
pop
sbb
jg
lock
adc
aam
test
adc
push
in
pop
xor
push
sub
adc
adc
add
xchg
dec
aaa
add
jne
sbb
mov
hlt
test
inc
ljmp
lretw
mov
mov
xor
mov
dec
movsb
cwtl
std
inc
decl
shrl
ljmp
push
add
das
mov
push
inc
out
les
pop
sub
fiadds
rcll
in
mov
push
pop
mov
lods
clc
mov
cmp
xchg
jbe
mov
jp
xor
test
out
loopne
mov
loop
mov
into
int3
mov
mov
push
test
pushl
lret
das
jecxz
jmp
dec
push
or
clc
pop
movsl
insl
ficomps
loope
mov
and
pop
pusha
dec
jle,pt
inc
add
imul
test
pop
hlt
xchg
or
ret
mov
fistl
mov
insb
cli
mov
push
jecxz
jno
mov
push
out
sub
dec
push
dec
mov
call
or
in
sbb
or
mov
push
psubd
inc
sbb
mov
sub
popf
lods
push
ljmp
pop
fsubrl
rorb
cmpb
or
bound
adc
pop
bound
adcl
xchg
jg
sub
jbe
mov
adc
cmpb
push
sub
push
push
jae
imul
jg
iret
jnp
mov
dec
xchg
inc
in
into
sbb
cli
mov
mov
dec
cld
lea
stos
lock
cmp
inc
pop
mov
or
ja
pop
or
jnp
std
lds
insb
iret
imul
jp
pusha
shlb
sbb
and
test
lret
push
sbb
and
adc
jle
lret
cld
out
lods
data16
cli
out
std
sbb
jns
dec
sub
repz
adc
aad
insl
es
sbb
std
cmp
loope
mov
imul
cmp
lods
int3
mov
mov
aam
les
xchg
xchg
inc
mov
adc
inc
cli
mov
mov
and
es
sbb
cmp
hlt
dec
lcall
movsl
movsb
jge
jae
push
push
fldcw
xor
es
shll
add
adc
insb
mov
add
mov
or
movsb
dec
es
test
rorl
cmp
xlat
testb
sbb
jmp
ret
xorl
push
in
and
sub
mov
in
movsb
inc
fadd
or
push
xchg
into
shr
push
mov
xor
popf
lock
mov
inc
adc
adc
hlt
xor
dec
mov
xor
push
and
jge
jle
mov
gs
or
pop
sbbl
enter
inc
jo
adc
test
sbb
xchg
in
push
push
icebp
adc
jge
pop
es
js
stos
cmp
in
arpl
js
inc
fwait
xor
lods
arpl
aas
in
mov
or
push
hlt
pop
add
sbb
ja
sub
or
push
inc
lods
ret
stos
xor
jp
imul
jnp
test
out
daa
xchg
xchg
sbb
mov
mov
lret
loopne
icebp
add
lahf
mov
dec
inc
jb
mov
inc
cmpb
add
les
and
jl
cli
jnp
in
and
pushf
cmp
or
sub
push
outsb
scas
pop
aam
jmp
idivl
or
jp
pop
push
dec
ljmp
mov
or
cmpl
movl
xor
out
cmp
addl
add
loopne
rcrl
dec
dec
and
mov
fs
je
dec
pop
push
sub
pop
pop
das
mov
mov
icebp
sbb
xchg
cmc
jb
repnz
sbb
mov
pusha
xor
inc
mov
and
add
outsb
cmp
jns
sbb
insl
aas
or
fiaddl
pop
pop
inc
pop
and
jo
xor
std
data16
addb
clc
hlt
out
pop
out
dec
mov
gs
jne
adc
add
push
hlt
jecxz
hlt
pop
sahf
shrb
aaa
push
sub
or
imul
push
cltd
aaa
cmp
cltd
lahf
jbe
sar
loope
adc
daa
dec
dec
insl
popl
divb
add
push
add
aaa
mov
and
lods
fidivrl
cmp
and
fidivl
dec
jns
shlb
les
fsts
inc
xchg
roll
cltd
lret
out
jge
out
fnsave
inc
or
mov
mov
jl
dec
outsl
std
pusha
fcoms
fsubrs
jno
sub
jo
push
xor
xchg
push
add
lret
adc
fists
cmc
inc
lcall
jge
enter
dec
inc
mov
xor
andl
je
out
add
or
insb
popa
dec
ret
roll
hlt
jl
rclb
xchg
jecxz
cwtl
pop
imul
cmp
dec
leave
imul
imul
push
shl
mov
dec
add
addl
xor
sbb
orb
cmp
in
push
mov
mov
aam
mov
mov
and
and
insb
andb
push
fwait
xlat
or
loopne
mov
jp
or
sti
in
out
mov
jecxz
call
mov
mov
xchg
rolb
inc
into
adc
cmc
ret
in
pushl
into
mov
xchg
and
rcll
mov
mov
dec
popa
cmp
inc
out
js
int3
aaa
sbbb
int
adc
adc
popa
ror
test
xor
mov
imul
scas
xor
push
push
iret
xchg
std
push
pop
repnz
shlb
inc
push
lods
or
movsl
pop
lcall
xlat
ljmp
push
add
sbb
push
push
sarb
and
dec
loopne
lods
inc
jmp
lds
vaddsubpd
xor
cmp
adc
cmp
mov
cmp
cltd
inc
mov
sub
xor
mov
xchg
addr16
xchg
adc
lock
loop
jnp
xor
xchg
test
daa
pusha
imul
fs
dec
push
insb
sti
mov
scas
mov
add
cmpsb
add
cmp
cld
adc
pop
std
aam
sbb
push
mov
and
jl
or
std
inc
stc
stos
outsb
sbb
cmp
or
mov
cld
ret
adcl
xor
lds
and
sbb
cmp
cmp
ljmp
insb
divl
std
in
sbb
and
adc
mov
pop
imull
out
cs
fcoms
jno
inc
or
ss
insl
hlt
cltd
ret
pop
jmp
ret
movl
jns
cltd
push
stos
movsb
ljmp
insl
or
mov
mov
dec
aad
arpl
mov
mov
pop
cmp
leave
jnp
ret
jmp
sbb
sti
xor
pop
mov
xchg
pusha
pushl
jmp
xor
cld
add
sbb
cli
in
stos
call
cld
rclb
pop
leave
mov
sbb
mov
std
flds
rcrl
lods
sub
dec
pop
mov
xchg
jns
popf
jl
pop
push
push
lret
pop
addl
stc
cs
inc
repnz
pop
nop
js
push
into
fldenv
lea
out
sbb
clc
adc
cwtl
push
mov
sbb
adc
jb
push
inc
xchg
xchg
ja
enter
daa
sub
popa
adc
sub
test
loop
std
rorb
push
inc
loopne
outsb
lock
loope
aam
data16
sub
mov
mov
jae
out
sub
mov
add
ss
adc
or
pushf
ficoml
iret
cltd
pusha
inc
repnz
fldenv
sub
cmpsl
lds
xchg
cmp
sbb
push
xchg
mov
clc
inc
jb
out
dec
inc
test
pop
jp
mov
popa
inc
mov
icebp
stos
pushf
rcr
jne
in
cmp
sbbl
ss
sub
xor
sbb
test
fdivrs
pop
adc
adc
popa
imul
inc
faddl
mov
dec
inc
repnz
jnp
xchg
adc
fldcw
sbb
sarb
sub
inc
sbb
jg
mov
ja
push
repnz
stos
pop
or
add
adc
lcall
int3
movsl
xor
mov
pop
cwtl
out
in
cwtl
dec
cmp
jmp
cli
in
faddl
addl
jmp
fimuls
imul
sub
test
pop
inc
add
add
jmp
test
fndisi(8087
jne
dec
xor
daa
je
rcrb
not
loopne
jo
std
pushl
jl
mov
jo
mov
pop
jno
fimuls
punpcklbw
mov
pop
fisttpl
dec
aas
push
in
fistpl
add
or
int3
mov
push
in
jge
shrl
shlb
mov
and
sti
pcmpeqw
jae
pop
dec
jae
jnp
mov
cmp
bound
xor
mov
out
and
mov
xorb
mov
adc
cltd
cmp
imul
push
add
lahf
mov
rcrl
dec
aad
cmc
in
loop
ja
ljmp
nop
or
cwtl
aam
push
js
sub
out
pop
push
enter
sub
mov
popa
in
and
movsl
stos
mov
pop
cmp
mov
popf
sti
pop
and
push
mov
daa
xor
shll
mov
push
mov
jmp
or
sbb
test
adc
orl
add
pop
push
inc
xchg
and
sbb
js
or
movsb
js
or
push
inc
dec
pop
pusha
xor
shll
dec
pop
loope
jnp
lcall
cwtl
push
lock
mov
mov
mov
dec
add
xchg
pop
out
and
scas
sub
imul
adc
push
push
aad
jmp
cmp
mov
xchg
in
xor
xchg
jl
stos
xor
dec
push
xor
lods
mov
fwait
or
xchg
fcmove
lret
into
loop
sbb
jge
mov
aaa
je
dec
xor
mov
push
adc
pop
pop
push
mov
xor
mov
xchg
popf
pop
push
add
call
xor
aas
jecxz
jmp
jae
imul
repnz
nop
pop
popa
adc
mov
dec
mov
xor
pop
and
frstor
adc
or
sbb
int3
andl
dec
sbb
out
fimuls
enter
mov
mov
stc
add
insl
nop
imull
xlat
jmp
jb
in
imul
lcall
mov
add
dec
outsb
lods
fcom
xor
lahf
and
jle
adc
ljmp
repnz
lods
push
sub
sar
push
mov
sti
pop
jecxz
dec
sbb
popf
inc
cmp
mov
adc
daa
and
mov
insb
ja
sub
sub
jg
xorl
xor
inc
shll
adc
push
ds
xor
add
push
mov
dec
idivl
cmp
pop
ficoml
or
xchg
iret
or
xchg
out
outsl
xor
ds
and
das
adcl
pop
push
xlat
aad
push
sub
call
lock
fisubrs
scas
mov
stos
inc
jge
inc
mov
lea
scas
sahf
test
aam
push
push
and
mov
jnp
jb
sub
mov
bnd
mov
icebp
dec
adc
and
cmp
adcb
iret
outsl
dec
push
sarb
xchg
push
cmpsl
push
or
mov
dec
lahf
das
mov
cmp
call
mov
ljmp
mov
adc
inc
aas
push
pusha
mov
dec
lahf
xor
hlt
xchg
divb
inc
movl
scas
mov
mov
cmp
add
cwtl
jmp
xchg
and
sti
mov
add
negl
lcall
xchg
leave
popf
add
leave
jecxz
cld
or
in
jns
or
nop
faddl
push
ss
xchg
repnz
xor
sub
push
pop
mov
aam
int3
cs
inc
lcall
out
adc
aad
jmp
lret
sti
jo
dec
push
xchg
add
cmpsb
stos
faddl
mov
xorl
inc
movb
js
jg
js
loope
xchg
jbe
lods
push
lret
scas
call
pop
ror
fisttps
mov
fldt
lahf
and
jb
and
mov
loopne
and
inc
repz
mov
cltd
cmp
and
iret
or
insl
cld
xor
sbb
lret
loopne
mov
mov
cmpsb
lock
push
cmpsb
ds
pop
inc
mov
mov
in
in
sbb
jp
fidivl
mov
loopne
loope
add
lds
xor
aas
inc
mov
movsb
lds
fisubs
inc
inc
add
pusha
push
xchg
test
xchg
mov
xchg
stc
push
test
and
cmp
inc
daa
test
jbe
add
jmp
stos
pop
in
jecxz
mov
lret
cs
cmp
jno
ret
icebp
cmpsb
xchg
and
ljmp
pop
xlat
inc
and
sub
or
les
and
jle
dec
std
inc
fsubs
pop
jle
jb
mov
sbb
shrl
sub
sub
fadds
es
imul
dec
push
pop
inc
mov
lods
xchg
dec
outsl
out
jle
jle
jge
xchg
lret
cmpsb
cs
mov
xchg
out
pop
popf
cmp
mov
pop
or
mov
test
adc
fwait
mov
add
xchg
bnd
fwait
xchg
out
mov
rcrl
lds
and
or
push
cmp
mov
mov
loop
stos
mov
stc
jle
push
sahf
notb
lods
mov
and
in
cmp
hlt
mov
inc
ficompl
xchg
xchg
cmp
ret
sub
idivl
cwtl
adc
movsl
icebp
pop
mov
es
fsubl
push
push
push
ret
sub
sbb
loopne
mov
inc
mov
shl
sbb
sub
pop
or
adc
xchg
sbb
mov
int
mov
jo
ss
les
in
push
xchg
push
pop
shrb
pop
sub
xchg
scas
jnp
or
loopne
enter
and
lods
dec
xchg
testb
scas
ljmp
jmp
cmp
jnp
pusha
ljmp
lds
insl
cmp
push
bound
push
scas
repnz
test
push
mov
mov
out
sub
movsb
loopne
lahf
loope
push
into
aam
repnz
adc
cli
sub
cmp
cltd
incb
xor
mov
rcll
jg
xchg
call
push
ret
scas
pop
arpl
mov
push
sub
push
insl
jae
sub
stos
jno
dec
mov
push
mov
mov
in
int3
subb
mov
je
cs
cwtl
in
push
inc
or
mov
int3
xlat
clc
fs
cmp
test
lods
jg
dec
in
std
xor
jns
nop
jl
lods
repz
out
add
pop
xchg
add
mov
in
iret
hlt
xchg
xchg
mov
pop
xor
test
out
mov
sti
fucomp
mov
pop
mov
fisttpl
test
shrl
cmp
in
stos
mov
mov
outsb
and
enter
xor
push
sbb
aas
pop
xchg
mov
cli
mov
out
cmp
mov
mov
inc
adcl
out
mov
nop
push
push
dec
pop
dec
mov
mov
out
xchg
es
cmp
in
cmp
or
fdivrl
dec
mov
fbstp
arpl
dec
xor
cmp
repnz
or
jno
out
jae
jns
outsb
and
cmp
push
stos
bound
fistpl
std
push
popa
cmp
scas
adc
xchg
arpl
or
push
imul
out
jno
xor
adc
sahf
xchg
stos
imul
push
test
inc
push
xlat
inc
test
mov
inc
pop
inc
cmc
push
testl
jmp
add
xchg
in
xor
inc
jmp
xor
lods
inc
or
pop
push
sti
push
dec
jae
mov
loop
into
bound
inc
aad
pop
mov
clc
inc
sbb
push
lods
cmp
add
push
pop
fwait
sbb
enter
pop
adc
cmp
sub
std
jmp
fsubs
cli
sub
add
fisttps
stos
mov
sbb
or
cwtl
aad
mov
xor
and
icebp
repnz
in
push
sbb
jg
iret
sbb
sbb
adc
inc
sahf
rcrl
and
das
lahf
in
into
fs
xchg
push
xlat
scas
test
lds
adc
push
cmpl
daa
inc
lret
fs
ja
add
sbb
jg,pt
fcmovbe
mov
pop
int
dec
sbb
mov
cmc
xor
gs
add
fs
insl
pop
sub
in
ret
repnz
ret
mov
movsl
subl
add
pop
repz
cmpsb
or
xchg
jp
cmpsb
enter
xchg
jmp
lcall
cmpsl
enter
movsl
mov
cmp
aaa
cmp
dec
pop
mov
mov
and
adc
fdivr
and
ret
adc
pusha
imul
jns
cmpsl
mov
mov
sub
js
and
add
add
sub
aas
adc
mov
mov
push
imul
or
movsb
inc
push
jne
out
bound
cltd
sbbl
pop
and
lods
jnp
in
in
mov
mov
int
je
push
xchg
push
into
outsl
lea
mov
orb
push
cmp
loope
repnz
dec
jae
incb
mov
add
rcrb
sti
scas
mov
jnp
mov
cmp
enter
dec
test
mov
jl
fcom
mov
in
jbe
mov
inc
sub
jge
aas
push
pop
xor
clc
div
xchg
ret
dec
jge
sbb
pop
test
loop
push
ja
push
cmp
push
adc
pushf
les
push
popf
and
test
pavgb
std
sub
addb
mov
xor
mov
outsb
leave
and
sbb
pop
imul
rcrl
call
lods
fstpt
movsb
mov
test
mov
movsl
jg
cmp
pop
sub
mov
or
and
aas
fnstenv
push
jns
dec
push
mov
icebp
fists
xor
jmp
pop
mov
xchg
scas
dec
aam
das
pop
aaa
add
sbb
idivl
fimuls
mov
mov
outsb
icebp
sbb
jae
and
xchg
mov
and
adc
lock
pop
sub
js
das
sbbb
sub
nop
dec
adc
inc
sbb
mov
lods
icebp
pop
inc
loope
xchg
js
lea
push
dec
ja
jb
loopne
mov
push
sbb
cmp
pop
inc
sti
shrl
fstps
out
inc
xor
mov
divl
cmc
sbb
xchg
in
inc
test
dec
in
dec
incl
fcoms
sbb
add
mov
faddl
push
push
push
lods
iret
out
ret
xlat
in
in
push
xor
cmp
push
je
pop
lods
enter
sti
xchg
mov
ret
jns
movsbl
pop
daa
cmp
jbe
add
shrl
imul
add
add
mov
ret
pop
push
and
fists
lods
cmp
mov
je
sti
pop
jns
and
adcb
insl
gs
rorl
sahf
call
rolb
out
jl
int
sbb
jl
jecxz
int3
xchg
inc
push
and
arpl
mulb
testb
xor
inc
jo
sarl
outsl
cli
add
sub
push
ret
push
sarl
dec
fdivp
or
jle
lret
popf
aam
fwait
inc
sub
in
sbb
xchg
sar
xchg
addb
xchg
cld
arpl
xor
mov
addl
xor
or
xchg
andl
scas
das
mov
xchg
notl
or
xor
sub
or
and
pop
mov
inc
shll
pop
add
and
adc
fsubl
xchg
pop
test
test
movl
push
dec
test
push
push
aam
insb
jb
in
mov
mov
adc
test
haddpd
cs
jmp
xchg
adcb
ljmp
ja
gs
in
dec
cmp
into
arpl
mov
and
imul
xchg
popf
mov
in
dec
jbe
inc
pop
aad
push
cmpsl
and
fsts
rcrl
mov
and
lret
mov
xor
movsl
shll
sahf
cs
jl
bound
ficomps
mov
mov
addr16
cltd
push
and
scas
leave
sbb
shll
push
cmc
fldcw
add
jmp
dec
into
jb
mov
cmp
sti
cmpsl
int3
xchg
push
jmp
testl
das
xchg
jns
xchg
sub
fcomi
jle
cmp
adc
or
sub
in
mov
imulb
hlt
push
pop
adc
inc
xchg
test
add
mov
or
mov
and
pop
cmpsb
es
mov
xchg
pop
jle
mov
cltd
add
sub
imul
xchg
in
aaa
sarl
movsl
cld
cmpb
jp
mov
sbb
mov
push
mov
inc
jmp
sbbl
add
femms
enter
jmp
js
bound
lret
js
imull
or
movlps
jmp
loope
sarb
cmp
jmp
sbb
jmp
inc
sti
add
sbb
sub
in
fsts
mov
dec
aas
and
adc
lods
decb
loope
das
lds
adc
push
mov
rclb
dec
pop
xor
jb
nop
mov
subl
testb
sbb
popa
sahf
push
lret
pop
bound
rcll
pop
sbb
and
push
xchg
dec
rol
inc
fimuls
ss
decl
nop
ja
jecxz
jb
push
and
repnz
repnz
cli
outsl
loopne
lods
cwtl
jo
push
mov
cmc
loope
adc
cli
leave
mov
gs
outsl
punpckhwd
add
xchg
popf
cmc
mov
or
call
fnstsw
mov
mov
es
pop
mov
dec
dec
iret
je
add
cmp
je
aam
imul
loop
or
lret
shll
sahf
xor
lret
sahf
or
mov
arpl
mov
in
inc
mov
sub
mov
mov
nop
xchg
cmp
test
out
jle
pop
shlb
aam
jl
arpl
shll
mov
adc
in
xchg
dec
mov
fisubs
pop
lret
arpl
call
sub
mov
and
push
jmp
mov
aaa
sub
pushf
loop
cmpsb
dec
iret
mov
into
popf
cmp
movsb
jo
aad
clc
bound
pop
sbb
roll
les
xchg
mov
push
jl
mov
pop
ss
pop
mov
sbb
pop
inc
push
rorl
adc
xlat
imul
sbb
push
inc
cmpsl
jg
sub
inc
movsb
cltd
xorl
add
outsl
cmp
pushf
mov
xchg
call
dec
mov
jp
mov
add
push
jge
pushf
divb
test
dec
push
int3
jnp
mov
stc
out
nop
pop
subb
mov
pop
fisttpl
scas
sahf
cmp
test
xor
arpl
stc
leave
fiaddl
test
mov
cmp
lret
sub
rorl
or
mov
inc
dec
hlt
sarb
movsl
cld
xor
popa
jne
pop
cmp
rorl
outsl
test
mov
pop
push
dec
repz
jmp
inc
movsl
inc
jg
inc
jne
jl
mov
pushf
xchg
adc
cmp
dec
fisubs
jle
push
fcomps
sti
jl
fimuls
mov
lock
nop
mov
repnz
movsb
dec
popa
pop
push
cmp
scas
sar
mov
or
xor
xor
fs
mov
sub
sub
dec
int3
jns
xchg
push
dec
mov
cs
cmp
inc
das
xchg
ja
sub
out
adc
mov
icebp
mov
rcrl
fs
cltd
adc
in
bound
adc
cmpl
and
lea
ret
popa
cmpsl
jmp
and
out
push
xchg
in
je
lds
inc
popf
outsb
xor
inc
ss
lret
aas
insl
imul
mov
xchg
mov
ret
loopne
push
xchg
mov
jecxz
test
in
stos
cmp
push
test
data16
leave
movsl
mov
xchg
sbb
xchg
ja
pop
lock
and
mov
xor
lds
adc
test
mov
sub
mull
sar
cs
das
xor
std
mov
push
mov
imul
push
fcoml
and
aam
lret
adcl
enter
inc
add
inc
dec
add
rclb
pop
sysret
or
in
js
movsl
movsb
push
dec
xchg
mov
repz
imulb
xlat
imul
mov
cs
cwtl
fisubrs
inc
outsb
jne
sub
inc
mov
dec
movsl
inc
loopne
jmp
imul
fcoml
outsb
mov
adc
xchg
mov
in
les
mov
pop
push
cmpl
xchg
insl
dec
popa
repnz
pop
and
sub
add
adc
fmuls
mov
imulb
mov
popf
test
or
mov
loop
popw
repz
pop
push
mov
jne
fisttps
or
int3
xor
in
push
ret
or
sub
dec
lret
scas
int
clc
xchg
ss
clc
cmp
popa
jno
cmc
sbb
inc
pop
jae
inc
movsl
cwtl
mov
hlt
scas
insl
int3
lret
in
int
adc
ss
add
mov
lock
cmp
out
inc
pop
or
stos
jle
sbb
in
ja
and
popa
mov
sub
mov
je
cmp
sbb
xor
jns
fbstp
jmp
bound
add
das
inc
push
repz
dec
pop
aad
xchg
out
jg
push
and
arpl
sub
sbb
rcr
mov
xor
xchg
add
mov
adc
mov
push
adc
aas
shll
shlb
fisubrs
pop
adc
jp
sub
jnp
cmp
mov
dec
in
sub
dec
and
into
or
hlt
sub
test
or
sbbb
mov
enter
adc
jbe
mov
mov
push
or
popf
dec
add
or
cmp
enter
or
xor
test
and
mov
jno
lret
lahf
mov
out
add
mov
pop
cltd
or
or
mov
nop
mov
test
loope
mov
stos
and
orl
sbb
scas
ficoms
jg
movl
adc
fcom
data16
out
or
ror
sbb
lret
aad
lret
lods
orb
orb
adc
es
jmp
scas
insb
ds
cmp
pop
arpl
sbb
int
inc
lcall
fisubl
stos
lea
pop
popf
fists
jl
sbb
ja
movsl
pop
and
jecxz
mov
in
lahf
mov
mov
mov
repz
mov
and
inc
jge
mov
push
repz
push
cmovo
stos
int
test
incb
mov
es
dec
sub
or
adc
out
jl
jne
jae
cs
add
pushw
or
inc
incb
lea
fdiv
out
ret
or
test
dec
rcrb
xchg
push
int
filds
in
xchg
movsb
inc
cmp
shr
fisubrl
orb
into
or
stos
fsubrl
sbb
mov
mov
mov
mov
gs
call
sahf
repz
outsb
clc
hlt
popa
adc
push
fidivrs
jge
aam
lret
cmp
inc
push
bound
add
mov
aas
fsubl
inc
push
loopne
push
insl
push
das
hlt
dec
fstpt
addl
and
fucomp
pusha
aad
js
adc
sti
add
rcrl
pop
inc
push
leave
in
negb
std
testb
push
bound
pop
insl
mov
cld
xchg
pop
nop
sub
rorb
sti
mov
clc
mov
sub
xchg
jge
aad
shll
pushf
bound
jns
inc
popf
ss
sub
test
aam
jp
jbe
shrb
sbb
andb
cmp
cmp
sbb
and
adc
push
xlat
mov
push
loopne
and
or
cmpsl
jg
push
in
ds
loope
shrb
sub
ds
loopne
addl
push
push
mov
cmp
arpl
data16
test
test
adc
in
inc
push
loop
mov
bound
imul
xchg
sarb
js
popf
mov
push
jns
push
push
cmc
sbb
mov
aaa
jg
inc
call
lock
pushf
mov
fs
or
xchg
out
and
dec
push
jle
jge
mov
fs
orl
push
repnz
push
sbb
cmc
addr16
xor
in
movsl
ja
std
divl
daa
cli
jmp
cmp
or
sub
mov
push
mov
std
xchg
rcl
leave
add
shrl
xor
js
xchg
pop
sub
jb
mov
pop
leave
out
mov
das
push
sub
cmp
andb
pop
push
popf
js
lahf
mov
aas
sub
lret
and
push
sub
dec
mov
pop
pop
push
sbb
adc
shrb
repz
adc
and
inc
cmpl
out
bound
cmc
xor
icebp
pop
ss
scas
inc
jle
stos
ret
test
arpl
sti
mov
lcall
adc
je
aad
setnp
sahf
inc
add
sahf
adc
push
fs
cmc
push
outsb
pop
pop
cltd
leave
xchg
mov
jp
stc
or
sbb
popf
mov
aas
fsubrl
xlat
roll
mov
inc
fisttpl
addr16
cltd
add
jmp
pop
insl
das
xor
jmp
mov
pop
and
adc
add
clc
push
int
or
jle
cmc
sub
sarl
mov
xchg
and
xor
sti
and
mov
inc
and
in
jae
jmp
pop
add
inc
imul
dec
xchg
sub
mov
mov
inc
pop
or
pop
pop
xor
xor
clc
shll
push
in
add
ja
inc
sahf
push
push
gs
dec
xchg
lret
adc
adc
nop
and
adc
jg
cmc
xchg
into
and
or
leave
push
pop
add
lea
movsl
add
push
push
sahf
mov
sbb
push
or
jg
jnp
scas
xor
push
sub
mov
iret
outsl
jnp
xchg
repnz
jmp
sub
cmp
mov
popa
sarl
aam
movsb
in
sbb
ret
es
xchg
movsl
mov
rolb
imulb
inc
xchg
dec
add
add
mov
mov
bnd
fnstenv
sbb
mov
jge
test
dec
call
mov
push
jbe
test
push
mov
and
gs
mov
push
test
aas
iret
bound
mov
ret
jle
in
xor
ds
orb
and
movsl
mov
xchg
addr16
outsb
cmpb
in
push
test
test
clc
adc
es
xor
mov
push
movl
loopne
sbb
lea
mov
and
xchg
pop
sub
mov
dec
into
inc
sbb
mov
std
mov
and
fwait
mov
imul
pusha
mov
arpl
dec
data16
fwait
in
jmp
std
cmp
rorl
loopne
pop
notb
cmp
mov
pop
and
jge
pop
test
sbb
cli
add
xor
ret
add
loop
bound
and
or
sti
mov
je
adc
pop
push
mov
orb
cli
int
stc
pop
push
fidivrs
cmc
xchg
ds
fiaddl
daa
add
dec
out
setnp
jmp
lods
add
in
mov
movsl
movsb
or
ljmp
inc
inc
inc
js
int3
jns
xchg
adc
icebp
mov
sub
lods
sbb
sahf
jg
repz
lea
cmp
jno
ljmp
in
cmp
xor
jo
imul
dec
jo
push
dec
jbe
sarb
mov
cmp
addr16
fdivs
fidivrs
dec
and
popf
inc
mov
into
icebp
ret
les
lods
out
or
arpl
mov
mov
adcb
arpl
test
jo
out
sub
sub
mov
lahf
mov
or
je
mov
sub
mov
pop
push
mov
fldcw
jno
pop
jecxz
adc
mov
inc
loope
idivb
add
dec
push
fmull
push
adc
iret
cld
jmp
repz
stc
or
iret
pop
movsl
bound
stos
loope
ss
and
rolb
or
out
ljmp
lahf
imul
add
int
cltd
push
lock
jecxz
or
or
lods
adc
jecxz
mov
xchg
or
loopne
fwait
js
mov
arpl
cld
jbe
data16
mov
test
dec
in
mov
nop
rcrb
addr16
add
repnz
leave
xor
mov
movsb
mov
ljmp
jbe
mov
adc
mov
dec
jecxz
cld
je
or
jo
pop
enter
je
scas
jns
clc
jae
cmp
inc
testl
std
aad
pop
pop
mov
jbe
arpl
xor
cli
cmp
adc
idivb
jno
push
sahf
pop
test
mov
rolw
xchg
les
pop
stos
fldt
imulb
ficoml
dec
add
rol
sbb
inc
clc
pop
xchg
icebp
pop
xor
je
push
aas
jno
jmp
pop
pop
cmp
jg
mov
push
mov
mov
lods
insl
ja
loope
shr
out
stc
inc
and
shll
sarl
sahf
xor
pop
sub
and
mov
lds
shl
cmp
add
inc
hlt
fldenv
cmp
fadd
or
add
arpl
push
mov
roll
mov
sbb
cs
dec
lea
mov
xor
push
sub
xor
sbb
adc
jp
inc
jl
aad
jmp
scas
lret
jnp
aam
lock
pop
rcll
dec
decl
sub
pop
loope
jp
out
or
cltd
xchg
push
fbstp
pop
ljmp
inc
mov
call
adc
push
add
test
xchg
mov
into
shrb
inc
dec
and
sarb
xchg
into
sbb
cld
xchg
jmp
data16
xor
divb
jbe
and
mov
jno
ficomps
nop
ds
push
insl
or
js
dec
in
inc
fisttps
xchg
hlt
dec
sbb
jo
push
xchg
ss
or
insb
jne
or
out
mov
add
jecxz
xor
aas
out
jge
sub
push
sbb
mov
aam
test
xor
jb
fwait
loop
cmp
faddl
xor
add
xchg
mov
arpl
lcall
jbe
cld
gs
pop
lahf
pop
adcb
js
out
test
push
popf
sbb
aam
out
adc
in
fwait
sub
jle
dec
out
lret
pop
cmp
popf
jno
and
outsb
icebp
dec
add
cmpsb
shrb
ss
pop
test
pushf
roll
xchg
nop
mov
cmp
jge
stos
cld
push
icebp
cmp
out
push
data16
js
daa
and
data16
xchg
mov
xor
subl
sub
shlb
into
aad
ds
mov
or
arpl
ss
ds
and
stc
push
inc
mov
push
shll
nop
inc
inc
pop
add
xchg
movsb
js
repz
repz
fimull
add
leave
xchg
xchg
cmpb
enter
mov
mov
ret
push
sub
cli
mov
insb
and
add
adc
mov
cmc
jle
fucomip
and
movsb
test
jbe
cmp
jp
jg
xor
xchg
sub
adc
and
mov
adc
pop
int
movsb
pcmpgtw
xchg
lods
inc
jo
inc
cmpsl
cmp
push
inc
inc
adc
mov
mov
xor
loope
aam
mov
clc
push
mov
mov
pop
lcall
pop
fnstcw
push
ficoml
rclb
shll
or
mov
or
mov
xchg
cmpsl
hlt
scas
push
xchg
sbb
mov
cmp
mov
out
insb
rol
out
out
jns
fists
xchg
int
imul
sbb
pop
mov
xchg
cmc
psubusw
stos
rcrl
sar
imul
cmpsb
int
clc
es
cmp
inc
cwtl
out
insl
dec
inc
pop
pusha
or
and
mov
sti
fcoms
mov
pop
mov
and
mov
push
push
nop
mov
or
xor
dec
or
jo
js
xor
jb
aas
imul
fcomip
fbstp
jle
pop
sub
dec
sti
mov
stos
xchg
daa
lds
ret
push
jae
add
enter
outsl
je
mov
je
push
stos
lret
leave
lods
or
aaa
dec
or
flds
out
sub
std
negl
inc
sbb
sbb
sbb
lret
ret
jb
call
insb
mov
xor
iret
rcr
loopne
loope
jbe
in
push
inc
xlat
fs
ja
jb
mov
test
jmp
and
clc
sbb
sbbb
repnz
mov
shlb
xchg
pop
aas
or
xchg
cmp
sti
movsb
loope
es
or
cli
cmc
or
fisttps
add
inc
mov
mov
cs
mov
rcr
push
aam
mov
jo
add
negl
jmp
sbb
dec
adc
sub
push
bound
dec
push
xchg
cmpsb
scas
jbe
iret
cmp
jp
pop
or
jecxz
fcomip
stos
into
push
xchg
imul
xchg
les
pop
xchg
jp
mov
sub
inc
mov
lret
loop
scas
in
pop
addr16
popa
popf
pop
mov
iret
mov
shll
cwtl
out
fisttps
mov
push
inc
xorl
add
lret
pop
mov
push
enter
push
cld
lock
inc
in
and
adc
inc
repnz
cmp
and
jnp
pop
ds
nop
lret
push
xor
cmpsl
sub
and
enter
xor
jg
jmp
add
bound
popf
and
pop
jecxz
lcall
mov
mov
mov
rcl
pushl
les
movsl
jg
gs
pcmpgtd
adcl
sbb
inc
xchg
popf
jo
pavgb
pop
ffree
lret
adc
add
sub
jp
xchg
dec
pusha
jne
scas
lea
aad
aam
shll
xchg
and
mov
sub
idivl
std
dec
mov
sbb
push
adcb
in
jp
outsb
push
xchg
into
dec
scas
inc
aad
lods
loope
xor
out
scas
test
xchg
repnz
leave
int
add
stc
xchg
popf
push
aam
pop
ret
jo
mov
adc
mov
stos
or
mov
xor
and
movsb
push
shl
loope
pop
add
outsb
inc
scas
andl
out
mov
dec
in
add
js
push
nop
inc
inc
xchg
pusha
sub
push
add
jns
xchg
mov
dec
outsl
outsl
mov
movsb
push
lea
pop
cmp
sub
sbb
cmpsl
pushf
in
stc
jae
rcrl
shlb
inc
inc
jne
in
xor
xor
cli
inc
inc
dec
or
sbb
pop
cli
stos
or
std
sub
jg
pop
xchg
jno
jnp
insl
aam
repnz
or
aaa
push
xor
and
sub
fisttps
in
jo
dec
xchg
xchg
sti
push
add
arpl
jns
aam
outsb
stos
addr16
push
lret
mov
jbe
mov
sub
popa
shlb
idivb
push
ss
xor
in
push
in
pop
or
cmpb
sbbb
xor
jmp
dec
daa
jnp
push
xchg
jmp
in
mov
xor
push
test
xlat
test
inc
rcl
push
pop
cld
mov
out
sub
int3
outsl
jmp
lods
xchg
in
mov
cmpsb
push
push
out
inc
add
jne
mov
xchg
filds
push
xchg
jp
pop
mov
shl
leave
loopne
mov
or
es
repz
scas
mov
leave
pop
inc
outsb
mov
xchg
sbb
enter
rclb
dec
shll
adc
pop
flds
fistl
jae
cld
shrl
sbb
pop
xchg
popf
dec
loopne
add
in
loopne
hlt
in
add
pusha
popf
add
fdivrl
dec
aaa
ljmp
push
andl
hlt
jle
xor
pop
rorl
das
mov
push
and
jno
xor
mov
hlt
stc
mov
xor
and
pop
cmp
lea
mov
movsb
jbe
out
movsb
sarl
xchg
in
sub
pop
dec
enter
rolb
cmpb
sbb
int3
jl
push
xor
or
mov
add
lods
cmc
lcall
fcoml
xlat
lds
repnz
cmp
and
xchg
jo
repz
push
std
add
scas
push
jle
xlat
setno
pushf
aaa
pop
scas
pop
scas
aaa
dec
mov
data16
mov
pop
fwait
and
cli
sbb
rorb
cmpsb
sub
test
push
scas
sbb
js
mov
mov
dec
mov
movsl
lret
lock
xchg
das
cmp
adc
cmp
sahf
adc
jecxz
out
repnz
adc
clc
std
shll
test
inc
pop
mov
insl
or
mov
into
shr
dec
outsl
push
and
xor
mov
sbb
nop
add
aaa
imul
gs
pop
push
mov
push
imul
in
int
hlt
jmp
fistpll
push
filds
sahf
add
jo
dec
mov
cltd
xchg
fildll
dec
dec
scas
or
aam
sbb
lret
mov
cli
adc
jae
enter
ret
pop
int
dec
cmc
sarb
mov
jns
or
inc
clc
and
ret
inc
movsb
out
pop
xchg
jecxz
inc
loope
repnz
inc
pop
pop
gs
adc
inc
xchg
add
into
loopne
jno
mov
mov
inc
sbb
mov
mov
lret
xchg
cs
xor
test
mov
sub
loopne
fnstsw
jge
ja
xchg
jne
clc
xchg
jo
into
jl
loopne
mov
mov
and
lock
out
add
pop
in
push
adc
sub
jp
out
mov
and
out
sbb
mov
push
sbb
push
push
or
dec
inc
sti
mov
push
pop
cmp
imul
ret
mov
sahf
sbb
negb
dec
hlt
push
pop
push
aas
jne
mov
xor
push
sub
dec
mov
fidivs
fisubs
inc
test
lock
iret
and
lahf
mov
jle
dec
push
pop
jo
int
aaa
subl
je
sbbl
movsl
cli
dec
pop
fs
popf
and
add
xor
mov
roll
xchg
hlt
pop
jg
fs
inc
xor
mov
adc
jmp
lods
and
pop
dec
jo
lods
jae
sbb
inc
scas
popf
adc
les
insb
xchg
das
mov
cld
mov
cli
stos
mov
sub
dec
popl
pop
dec
pop
adc
jecxz
xor
sbb
fwait
pop
out
push
enter
lahf
adc
cmp
add
pushf
push
cmpsb
fcmove
jle
inc
xchg
sbb
sarb
in
push
push
test
arpl
sahf
xlat
inc
movsb
pop
pop
cwtl
cmp
mov
flds
ret
sbb
dec
das
adc
mov
lret
xchg
xchg
or
xchg
push
pop
sub
xor
mov
stos
mov
inc
scas
sbb
cltd
pusha
fcoms
add
inc
jp
rcll
stos
fs
mov
int
inc
sub
mov
loop
dec
sbb
sbbl
fisubs
push
mov
arpl
xor
push
mov
repnz
out
popf
cmp
sub
movsb
into
or
test
or
std
lret
mov
pop
cmp
adc
outsb
imul
jl
inc
repnz
sbb
shlb
cmpsb
out
xchg
and
jecxz
ret
pop
arpl
sub
inc
jmp
insl
mov
or
imul
shr
lcall
aam
dec
insl
aad
xchg
les
insb
bound
out
jge
pop
notb
sub
cmp
daa
cltd
or
insl
sub
ljmp
cmp
cmp
sub
inc
pop
sbb
roll
xor
sti
or
sub
xor
out
fistpll
inc
loopne
pop
popa
cmc
jnp
adc
and
rcrb
jnp
inc
scas
mov
jmp
mov
ja
or
es
into
call
mov
stos
adc
pop
push
push
mov
imul
cld
sub
mov
repnz
add
cli
sub
inc
pop
mov
mov
pop
cmp
je
xchg
data16
fwait
cmpb
scas
xor
push
inc
jg
pop
imull
mov
xlat
aam
xor
fwait
out
hlt
or
push
xchg
jecxz
fistl
cld
xchg
test
cmp
pop
out
nop
lods
xchg
push
push
jae
stos
cltd
enter
arpl
sub
mov
sub
dec
pusha
sbb
add
loop
pop
ja
pop
adc
push
iret
pop
fstpt
cmpb
xchg
mov
cmpsb
fcoms
inc
fimuls
rcr
pop
lock
insl
adc
mov
addr16
jmp
pushf
mov
es
roll
jnp
ja
or
or
cwtl
pop
fsubl
ljmp
xchg
pop
inc
adc
jl
dec
jbe
insl
jmp
adc
fsubrs
jmp
in
movsl
orb
jmp
ret
mov
imul
aaa
push
sub
aad
sub
mov
xchg
stos
mov
std
pop
push
push
dec
cmp
aaa
sub
sub
or
je
lret
pop
push
ret
dec
xor
dec
or
sub
xchg
push
sbb
aad
les
ss
into
xor
nop
mov
lcall
dec
and
stos
add
cltd
repnz
out
push
mov
sub
sub
mov
roll
add
jnp
xchg
push
enter
bound
test
and
adc
popf
in
or
fisubrl
xorb
or
int3
scas
dec
sub
jmp
lcall
pop
ljmp
jge
scas
jge
cltd
testl
aad
lcall
out
outsl
sbbl
mov
xor
sbbl
inc
push
xchg
add
shrl
scas
sub
loop
mov
or
pop
repnz
loope
inc
and
mov
mov
sahf
xor
pop
inc
mov
inc
insb
jp
out
mov
lahf
push
push
std
fdivs
sub
xchg
mov
xchg
in
pusha
dec
fnstenv
or
mov
scas
dec
mov
nop
scas
shlb
out
push
xchg
dec
dec
int
call
cmpl
nop
icebp
cmp
adc
push
outsl
xchg
or
shrl
dec
mov
scas
jno
adc
dec
push
push
sarl
pushf
imul
cmpb
pop
loop
jne
rcrl
xchg
xor
xchg
xchg
aam
jne
dec
outsb
dec
cmp
jmp
xchg
test
mov
pop
sbb
pop
mov
adc
mov
sub
in
pop
pop
pop
jns
nop
and
ljmp
pusha
mov
and
dec
leave
jbe
divl
mov
leave
push
rorb
movsl
xchg
push
lock
cmp
mov
add
push
lds
aad
push
inc
das
sub
vpunpcklwd
and
xchg
insl
or
addb
mov
adc
mov
test
jnp
das
and
xchg
out
arpl
lret
les
mov
andl
lock
push
sub
js
pop
ffree
jge
in
add
cld
icebp
lahf
int
in
add
lea
hlt
jnp
xchg
and
cs
mov
aas
and
jnp
mov
xor
adc
xor
call
mov
or
or
imul
inc
fstpt
cmp
mov
sub
jecxz
or
xlat
adc
or
pop
sub
arpl
out
fists
cmc
mov
jne
addl
fiadds
arpl
dec
dec
inc
add
push
outsb
movsl
xchg
bound
adc
jno
pop
xchg
sbb
std
in
pop
mov
notl
sub
jg
in
int
jo
out
scas
xchg
rcll
insb
ret
push
add
adc
xor
mov
sub
push
pop
pop
inc
aaa
popa
inc
dec
jge
insl
loop
push
xor
mov
test
call
movsb
push
xor
and
stos
ds
fisubrl
dec
and
aas
cwtl
outsb
mov
pushf
lock
orl
mov
cs
lea
push
dec
push
jae
or
loopne
daa
loop
sub
adc
xchg
call
repnz
movsl
pusha
push
xchg
pop
pop
xor
jge
mov
jnp
mov
out
and
loope
dec
scas
cli
int3
mov
or
ds
repnz
pop
sbb
int3
xorb
mov
cltd
sbb
push
xchg
arpl
xor
sbb
push
gs
push
xchg
jge
in
cwtl
aaa
pop
sub
cmc
pop
call
std
ret
ficomps
ljmp
xor
and
scas
jo
stos
adc
and
push
gs
sub
inc
vmwrite
mov
or
mov
bound
ss
jno
cmpsl
add
cwtl
adc
rcr
jl
addr16
sbb
pop
insb
aaa
fstpt
enter
aad
out
xchg
int
adc
std
rorb
add
pushf
and
jle
adc
fs
mov
mov
in
mov
dec
roll
ret
push
dec
fadds
lds
mov
into
add
fwait
mov
add
mov
jnp
fwait
push
sahf
aaa
dec
add
or
xchg
mov
inc
jmp
loope
in
sub
fisubrl
add
mov
je
jg
jae
sbb
mov
aas
sub
js
orb
cltd
adc
enter
shlb
and
sub
loope
imul
subl
push
cmp
jb
cltd
jg
mulb
cli
push
push
out
or
push
dec
pusha
movsl
pop
jns
repz
test
out
or
aas
dec
jle
fs
call
xlat
int
push
repz
inc
add
aas
cmp
loope
lcall
in
cmc
sub
jecxz
or
xchg
and
fwait
aad
mov
pushf
jmp
roll
imul
loop
bound
dec
adc
ljmp
sbb
repnz
test
or
and
sub
ret
or
into
pop
cmpsl
adc
sub
push
sub
sub
clc
push
out
cld
cmp
test
pop
cmp
push
inc
jmp
mov
jo
clc
push
and
inc
in
rcl
out
fldcw
lods
xchg
lods
jmp
fisubs
cmpsl
adc
xchg
xchg
repz
add
cmp
rcrl
aam
jl
push
jecxz
mov
xchg
inc
inc
mov
mov
clc
ret
cli
ret
mov
lahf
lahf
inc
ret
add
int3
into
pop
jnp
aam
popf
aam
icebp
std
add
cmp
add
jns
dec
inc
sub
xchg
loop
ljmp
xor
out
std
ljmp
sub
cmp
repz
gs
inc
mov
push
mov
mov
aad
cmp
add
jne
adc
cmc
das
mov
mov
fcmovu
and
pop
add
and
loope
jo
mov
add
mov
adc
ds
rcr
gs
idivb
dec
popf
sbbb
cmp
xchg
xchg
out
lret
and
jbe
adc
aad
lea
mov
cld
push
cmp
xchg
jno
jo
sti
mov
cmpsb
cmpsb
push
mov
mov
dec
or
mov
xchg
jns
sarb
in
pop
mov
mov
sbb
push
stc
rcll
jmp
sub
sbb
incl
push
xchg
cld
test
sub
mov
out
int3
mov
mov
idivb
rorl
mov
pop
negb
sahf
stc
fisttpl
test
pop
xchg
and
mov
adc
lret
dec
and
aad
aaa
inc
arpl
insb
lcall
aam
jb
movl
mov
cmp
aas
push
rcrb
jmp
or
jmp
adc
cltd
div
je
loop
aad
sub
dec
pop
cmp
fstpl
in
mov
or
mov
pop
pusha
ja
cltd
xorl
inc
fmuls
ss
cmc
xchg
lret
fbstp
mov
mov
xchg
rclb
dec
or
mov
int
movsb
lods
mov
decl
pop
ja
add
jle
adc
daa
and
into
cmp
ret
ret
xor
movsl
icebp
cmpsb
or
lahf
cmpb
and
test
and
mov
add
xor
pusha
xchg
arpl
push
jmp
loopne
call
test
in
sub
dec
sahf
inc
inc
xchg
cmpsb
clc
mov
add
push
mov
adc
push
daa
out
push
jae
inc
sarl
and
out
push
inc
mov
mov
imul
add
mov
dec
jae
cwtl
adc
mov
xor
pop
stc
sbb
xchg
jg
inc
movsb
cld
js
inc
cmp
push
dec
and
sarl
inc
and
mov
mov
ret
icebp
sahf
mov
movsb
icebp
fildl
mov
or
cmp
aad
insb
push
mov
imul
lahf
jp
dec
xchg
ja
call
int
xchg
pushf
ds
cmp
push
fs
call
repnz
xchg
mov
mov
cmp
mov
jns
mov
xchg
dec
push
lock
mov
dec
std
sbb
lock
xchg
push
cmp
mov
lret
lret
dec
ret
aas
mov
jne
scas
imul
push
icebp
sarl
jge
jle
xchg
jge
stos
lahf
mov
or
mov
aam
add
pop
pop
mov
out
shl
insl
into
sbb
test
add
or
push
and
cmpsl
cmc
aam
push
data16
push
in
cmp
dec
je
jbe
les
adc
ds
mov
xor
xor
shl
dec
cmpb
rcrb
leave
pop
aaa
fucomp
lock
loopne
bound
add
mov
cmp
jmp
dec
xor
popa
xchg
or
pop
xor
push
stc
mov
test
push
flds
les
push
mov
mov
cmpl
leave
mov
addl
adc
push
add
push
sbbl
out
lahf
inc
jl
push
fwait
cli
cmp
jnp
mov
sarb
adc
mov
and
adc
sbb
xchg
gs
cwtl
sti
sub
sarb
jbe
add
int3
call
cltd
or
pop
push
jns
dec
enter
dec
clc
cmp
push
pushf
dec
movsb
mov
repnz
outsl
insl
sarb
mov
mov
mov
idiv
push
add
adc
sub
bound
pop
xchg
ja
xchg
add
cmp
sbb
inc
inc
stos
out
jno
pop
xchg
das
test
in
sub
jge
mov
mov
sahf
mov
push
bound
imul
in
enter
ror
clc
loopne
inc
cmpsb
in
nop
inc
cli
dec
or
in
rol
in
inc
mov
inc
insb
imul
popa
imul
stc
mov
js
dec
insl
into
mov
cwtl
icebp
bound
adc
popf
pop
fnclex
repnz
stc
sub
inc
rcrl
dec
adc
insb
jno
mov
int
repnz
ljmp
lds
test
inc
xchg
pop
lahf
ficompl
push
loope
and
inc
adc
jbe
addr16
mov
rcrb
pop
mov
dec
adc
test
popa
jno
js
xlat
push
xor
mov
sbb
cmp
mov
loope
lcall
je
xchg
stc
xor
fcmovu
or
into
push
and
fisubs
fsub
jg
in
mov
inc
lods
repnz
cmp
and
xor
pushf
inc
cs
fsubl
mov
call
test
and
int
add
cmp
cmp
xchg
arpl
xor
mov
sbb
es
fwait
dec
insb
pop
call
mov
inc
inc
or
fdivl
test
push
int
outsb
pop
in
add
xor
rcrb
pop
aas
sbb
adc
jae
jge
mov
mov
arpl
push
sahf
push
insb
push
add
das
cmpsb
fisttps
lea
test
fsubs
neg
lret
adc
push
pushf
sbb
jo
mov
fnstenv
jecxz
cmp
les
cs
icebp
lock
or
mov
sub
xor
pop
or
pop
stos
push
cmpb
xchg
cmpsl
sub
xlat
ljmp
loop
jmp
inc
les
cmpsb
and
scas
movsl
iret
cmpsl
hlt
xchg
and
push
dec
xlat
push
iret
xchg
int
cld
pusha
xchg
out
cmp
sub
fs
iret
mov
sub
aas
jmp
xchg
push
jge
jno
test
scas
sbb
mov
cmc
stos
negl
pushf
sbb
inc
iret
ja
pop
psubusb
lea
aad
or
sahf
ret
xlat
fsubl
ret
je
testb
xchg
mov
ret
aaa
mov
jg
sahf
lret
cmp
mov
into
jmp
pop
scas
cwtl
pusha
pusha
sbb
push
and
sbb
xchg
push
mov
mov
adc
xchg
jl
sub
rcrb
outsl
cli
popf
mov
and
pop
adc
inc
xchg
lahf
bound
mov
addr16
out
ret
test
ret
imul
mov
lods
insl
inc
inc
mov
jp
sub
push
xchg
mov
lock
fmuls
or
sub
scas
or
mov
xchg
add
into
dec
mov
inc
or
mov
cmp
jbe
add
lahf
lock
lock
push
mov
ret
jbe
adc
andl
adc
cmpsl
mov
icebp
push
rclb
ffree
mov
roll
sbb
add
dec
inc
lcall
dec
xor
jb
cmc
int3
movl
dec
in
fisttps
aad
ja
add
cwtl
dec
inc
sbb
call
jb
mov
or
mov
jecxz
stc
cltd
mov
cmpsb
stos
in
imul
pop
jle
clc
daa
inc
cmp
pop
cs
imul
insb
xchg
inc
push
in
and
sar
subl
in
in
jle
mov
add
stos
push
xor
in
or
sub
scas
mov
mov
scas
mov
fs
incl
sbb
bound
mov
rorb
mov
mov
dec
int
pop
xor
bswap
cmpsl
cwtl
push
in
and
pop
movsb
lods
adcb
push
lret
pushf
xchg
dec
xchg
dec
outsb
idivl
jno
pusha
fnstsw
shll
sub
mov
gs
ror
test
mov
es
scas
cmpl
cmc
inc
dec
iret
imul
xchg
lahf
sub
xchg
loop
mov
cwtl
and
and
jmp
cmp
test
mov
jp
mov
inc
mov
mov
ret
dec
lcall
pop
jmp
addr16
addr16
js
bound
xor
fwait
push
aaa
mov
ficoml
inc
shl
push
inc
jns
push
out
hlt
sub
adc
enter
dec
mov
push
popl
lods
scas
int
and
mov
call
out
lock
das
filds
mov
xchg
xchg
roll
insl
inc
outsl
mov
testl
cltd
fdivrl
imul
mov
popf
pusha
cwtl
xchg
xchg
adc
enter
cwtl
arpl
arpl
insb
cwtl
es
jbe
outsb
mov
es
movsl
xor
sub
mov
in
fcoml
mov
mov
repnz
nop
cs
sahf
icebp
imul
imulb
jmp
jo
lcall
xor
shrb
aas
fisubrl
leave
negl
xor
std
je
and
test
movsb
imul
sub
xor
mov
lea
adc
mov
repnz
out
sti
mov
bound
in
mov
inc
sbb
add
test
adc
adc
js
cmp
or
sub
add
adc
dec
mov
andb
cli
add
adc
xlat
jb
scas
push
stos
outsw
in
pushf
ret
stos
fnstcw
mov
jns
fnstsw
xchg
mov
loope
xor
out
out
xor
fbstp
rcrl
push
mov
lcall
addr16
xchg
inc
adc
cmpsb
push
push
rcr
repz
shld
inc
mov
push
cwtl
popa
vmwrite
addr16
xor
rcr
pop
xor
iret
pushf
repnz
adc
daa
sub
decb
jo
mov
sub
mulb
push
inc
push
ret
jae
or
outsl
int3
xchg
cmp
test
sbb
leave
jne
cmpsb
push
mov
fbstp
adc
xchg
in
std
cmpsw
aam
testl
mov
pop
paddb
ret
xchg
ja
xchg
cli
movsl
add
out
pop
mov
hlt
lret
mov
js
mov
push
scas
iret
xor
mov
lcall
lret
jbe
enter
rcll
mov
mov
idivl
enter
pop
jo
jle
sbb
push
or
jp
loopne
mov
jecxz
repnz
dec
in
test
inc
adc
mov
jae
test
leave
sahf
xchg
mull
ret
mov
jno
addr16
xlat
xchg
mul
inc
xor
test
xchg
movsb
rorb
pop
mov
repnz
mov
push
addr16
outsl
outsb
movsl
bound
xchg
test
mov
pop
mov
cmpsb
push
cmpsb
popa
sub
mov
inc
rorl
adc
mov
mov
fcmovbe
andl
pop
xor
nop
cmp
test
sub
sbb
rcrl
add
loop
xlat
out
jg
or
out
xchg
xchg
push
push
sar
pop
shr
addr16
enter
cmp
mov
sub
insl
xor
loope
fucomp
lds
jne
xor
outsb
adc
rorl
pop
lods
mov
mov
push
int3
cmpsl
insb
je
jecxz
fisubrl
adc
fisttpl
sar
gs
dec
fldt
sub
xchg
leave
repnz
push
out
jnp
and
mov
divb
xchg
sti
jne
mov
dec
nop
rcll
clc
xchg
dec
cmpsl
push
sbb
scas
js
ss
pop
stc
pushf
cld
test
fidivl
mov
pop
add
jp
cli
sahf
mov
movd
sbb
pop
sbb
gs
bound
cli
rcl
mov
or
push
out
lret
sub
sbb
cmp
dec
or
push
cmp
lods
fcoml
in
dec
mov
pop
jl
cmp
jns
sub
mov
sbb
xchg
and
sub
insb
test
xor
ds
fcmovne
xchg
das
mov
imul
jne
daa
push
ss
xor
mov
dec
inc
mov
and
xchg
mov
xchg
stc
xchg
mov
hlt
add
mov
push
adc
push
xchg
into
inc
and
enter
test
adc
into
mov
xchg
aaa
arpl
push
movsb
inc
sbb
pop
and
int
cmp
test
sbb
and
fldt
icebp
or
adc
mov
fs
inc
aam
cmp
jle
pop
cmpb
mov
adc
frstor
xlat
and
push
push
mov
adc
adc
dec
mov
mov
add
pop
daa
jle
gs
and
loopne
sti
sahf
xchg
js
mov
pop
shr
cmp
sbb
shlb
pop
arpl
xchg
sub
movsb
and
push
fmulp
orb
test
clc
mov
stc
cmpl
lods
mov
xor
ss
mov
jbe
xchg
test
jae
fidivl
sub
pop
push
cmp
and
sarb
ds
or
popl
insl
nop
cmp
inc
loop
loop
adc
push
inc
jne
lret
enter
or
xor
sub
xchg
lock
ja
mov
jne
cmp
sbb
push
cs
mov
lret
imul
mov
push
and
ljmp
mov
scas
es
xlat
jno
sub
enter
ret
add
xlat
adc
popa
inc
pop
test
sbb
add
pop
addr16
fnstenv
out
jge
cwtl
mov
add
mov
outsb
inc
insb
lahf
jp
jo
mov
aas
loope
mov
ja
mov
inc
xor
sti
scas
adc
mov
xchg
test
fldt
loope
sub
jge
aaa
call
push
mov
test
xor
mov
sbb
inc
clc
jno
subl
jmp
and
arpl
dec
aam
fdivrp
divl
addr16
call
or
stos
or
fiaddl
pusha
out
movsb
shll
fdivl
aam
mov
and
jmp
jg
push
mov
bound
and
and
pop
clc
mov
lock
popa
mov
jecxz
loop
inc
mov
mov
sahf
adc
call
jl
es
test
popf
pop
lcall
cltd
xchg
sub
add
mov
hlt
cmp
and
inc
and
cmp
jecxz
xchg
mov
insb
jo
mov
add
insl
and
or
xor
call
shr
fildll
xor
xchg
les
pop
push
ss
mov
mov
mov
sar
pop
lock
mov
adc
and
adc
jo
ja
mov
test
je
loope
outsl
ret
xchg
push
sbb
aad
sbb
fadds
inc
xor
xchg
pop
ret
push
dec
jmp
cmp
aaa
jmp
push
js
out
mov
pop
sbb
fcoml
fwait
push
push
cmpsl
push
loope
cld
adc
xor
cld
mov
adc
stc
or
lock
loop
cmpsl
push
lahf
mov
mov
data16
aam
and
sahf
and
mov
lods
mov
cld
cli
fcoms
mov
inc
loopne
inc
add
jmp
adc
pusha
sbb
sbb
adc
pop
inc
lods
xor
dec
ss
or
add
lcall
xchg
jne
iret
popf
popf
or
je
test
ja
pop
nop
dec
test
out
sysret
push
lock
das
add
adc
fisttps
sub
jbe
sbb
pop
addr16
daa
cli
fwait
mov
xor
out
pop
cmpsl
jecxz
andb
pop
jns
icebp
push
push
icebp
out
and
push
js
inc
jo
aas
ss
dec
sbb
push
nop
mov
in
push
hlt
push
ret
popf
xchg
dec
rorb
lret
add
aaa
sbb
cmp
and
xor
or
jno
or
sub
jmp
and
mov
or
gs
pop
sbb
xor
mov
mov
mov
aad
ret
movsl
test
push
or
pop
cmp
and
in
mov
add
rcll
mov
or
sub
mov
or
xchg
sarl
jl
xor
and
mov
adc
sub
inc
and
jge
fdivrs
sub
loopne
fldl
sub
ljmp
cli
sbb
inc
sbb
jp
mov
ficomps
push
jnp
icebp
test
and
out
add
daa
adc
cmp
dec
jle
adc
es
or
lahf
ss
xchg
in
daa
pop
inc
pushl
sbb
jmp
mov
dec
inc
sub
sahf
in
jg
push
lock
aam
ds
int3
dec
loop
and
fimull
and
bound
jae
mov
sar
jns
xchg
test
inc
stos
std
push
cld
cmp
icebp
add
lret
in
adc
sahf
mov
imul
aam
jnp
push
fildll
mov
sbb
mov
ds
xorb
lea
ljmp
int
adc
js
add
mov
andl
hlt
aas
aas
sbb
dec
dec
testb
cmp
sbb
push
xchg
les
insl
mov
push
push
pop
cmp
pusha
mov
das
inc
or
imull
or
mov
cmp
push
iret
in
jg
jle
mov
or
sbb
inc
mov
rclb
ds
aaa
jns
fisubrs
inc
imul
xchg
out
popl
dec
adc
adc
imul
imul
cmp
in
sub
lds
stos
repnz
cmp
in
adc
and
ds
icebp
jecxz
outsb
jbe
xlat
sub
in
js
add
dec
ljmp
fs
jbe
jge
inc
lcall
stc
popa
pushf
push
in
ret
mov
xchg
and
in
mov
fisubrl
mov
fcmovnbe
fidivl
dec
xor
repz
inc
jle
mov
xor
scas
stos
sub
sbb
jbe
or
inc
test
aas
scas
sbb
repnz
xor
push
mov
test
dec
jb
out
mov
xor
jbe
cmpsl
xchg
lcall
xchg
imul
fcoml
push
push
fnstsw
cltd
adc
jge
scas
out
add
ret
jno
mov
in
jmp
xor
aaa
repnz
into
mov
dec
jo,pt
dec
cmp
daa
add
inc
and
orl
mov
sub
loopne
cs
testl
xor
rcrb
into
xor
mov
jge
sub
xor
fisubl
clc
lret
or
mov
inc
push
lidtl
jp
or
jp
ror
push
int3
mov
hlt
push
sarb
rcll
pop
and
push
lret
scas
xchg
fs
std
sub
or
dec
hlt
mov
dec
jmp
pop
aaa
mov
popa
adc
gs
dec
push
aad
cwtl
repnz
sub
test
shll
and
rorl
lods
lods
xlat
dec
inc
aam
repnz
lret
add
xchg
mov
pop
push
inc
xchg
xor
daa
out
sti
push
push
mov
lahf
pop
lock
insl
mov
test
jle
add
popa
jo
push
test
push
inc
fcoml
clc
in
fidivrl
arpl
mov
jp
adc
jb
lcall
jl
lods
pop
daa
adc
fnstsw
mov
lahf
adc
mov
outsb
dec
dec
loope
int
js
cmc
push
je
sbb
aaa
pop
xor
mov
dec
aam
cli
daa
shlb
or
sbb
subb
mov
xor
mov
leave
aaa
popa
cwtl
sub
js
cmp
insb
or
mov
jg
add
mov
xchg
jb
shrl
pop
or
inc
sub
and
out
xchg
push
inc
adc
leave
pop
fsubrl
jb
fldl
nop
mov
lahf
pop
pop
out
adc
sub
cmp
not
icebp
push
sub
adc
jg
inc
lods
call
sub
mov
stc
dec
adc
int
adc
popa
mov
sti
incl
imul
mov
xchg
inc
call
data16
push
adc
sub
aas
movsb
lret
adc
mov
xor
in
mov
add
repz
in
test
jecxz
adc
jne
neg
pop
adc
push
jg
sbb
sub
imul
subl
scas
mov
mov
adc
cmc
push
setb
pop
inc
jae
push
and
dec
test
orl
out
int
scas
sahf
clc
lcall
jge
cltd
mov
out
rcll
cmp
mov
sub
sub
mov
lods
ficoms
enter
bound
call
push
movsb
sbb
pusha
xchg
mov
pushl
fs
mov
sahf
jo
ret
and
scas
lods
popf
mov
pop
sub
insb
and
mov
jb
jo
push
movl
xor
mov
pushf
adc
pusha
sbbb
and
sbb
adc
shlb
pop
xchg
js
lahf
mov
jmp
aam
out
cmp
inc
repz
mov
adc
pop
rclb
sub
jle
push
lret
in
push
dec
fcoms
push
push
xorl
add
aas
out
sub
jne
xor
filds
clc
cmpsb
les
and
xor
push
inc
icebp
push
into
shlb
cmp
xor
aas
xchg
jle
mov
or
mov
mov
jecxz
lock
outsl
and
or
jge
int
fdivs
xor
stos
xor
inc
pop
outsl
test
fcmovne
sub
testb
cmpsl
bound
push
cli
std
fs
xlat
cmp
lret
stos
push
inc
push
sub
inc
cld
or
add
fisttpll
xchg
xchg
roll
or
sub
xor
lods
jne
lahf
cltd
sahf
dec
packssdw
rorl
xor
ret
cltd
push
repz
xchg
jb
fcmovbe
leave
lds
jl
and
jecxz
cmp
popf
xlat
sbb
sub
jmp
lods
push
mov
out
pop
in
push
shll
dec
dec
or
mov
sbb
xor
ja
pushf
cld
fidivl
sub
cmpsl
mov
inc
cli
sub
sbb
stos
lock
adc
das
iret
pushf
divb
fst
sti
les
cmpsl
incb
pop
test
pop
sub
rcl
fistl
insl
fists
mov
std
inc
jno
mov
mov
leave
ja
and
pusha
sub
mov
push
mov
lahf
daa
xchg
mov
add
push
xor
mov
dec
xor
dec
das
lret
out
stc
fstpl
loop
mov
sarl
xlat
push
loope
clc
sub
mov
bound
mov
push
fbstp
sub
jae
ror
pop
fnstsw
jg
inc
cld
mov
add
dec
dec
rcl
stc
test
adc
pop
sub
jb
pop
aad
mov
pop
lea
mov
popf
push
notb
repnz
das
iret
or
xor
dec
sbb
adcb
out
cmp
cmp
out
cwtl
pop
adc
mov
pop
push
push
adc
mov
mov
loope
mov
mov
dec
pop
or
enter
mov
stos
xor
aad
push
sub
inc
push
cmp
mov
lret
std
iret
iret
stos
and
lret
outsb
cltd
bound
pop
out
pop
or
mov
mov
pop
iret
xchg
sbb
mov
daa
cmpsl
in
push
pop
clc
dec
and
dec
mov
mov
scas
xchg
cmp
pop
daa
mov
das
mov
stos
es
cmpb
dec
mov
xor
into
mov
xchg
cmp
cltd
or
call
add
inc
or
icebp
dec
pop
mov
and
xchg
xor
mov
push
sbb
loopne
add
cmc
lcall
xor
nopl
test
rol
add
in
aad
xor
sti
cmp
push
scas
inc
test
repz
jge
push
add
int3
lods
cwtl
mov
scas
cmp
pop
pop
jle
adc
std
aad
repnz
or
sbb
aad
xchg
cmp
and
scas
inc
ret
xchg
loopne
adc
jecxz
pop
mov
stos
xchg
jb,pn
mov
pop
xor
in
cltd
push
and
and
fnstcw
sub
popf
xor
jmp
frstor
pop
add
mov
mov
mov
mov
ret
inc
push
sub
jecxz
dec
daa
push
lret
adc
mov
jnp
and
scas
jg
faddl
lret
in
or
jmp
jno
jmp
arpl
iret
mov
cwtl
in
push
data16
scas
filds
add
and
pop
and
sbb
test
loope
bound
adc
lcall
fisubrl
js
add
fcompl
add
div
mov
xor
push
add
jle
fstpt
aam
shll
fcoms
inc
pop
jno
pop
mov
cld
or
incl
gs
cmp
in
adc
sub
and
inc
mov
cmp
mov
xchg
test
mull
lret
xchg
loopne
pop
push
dec
cmp
sub
shll
add
sti
aas
outsb
cmc
arpl
jmp
popf
mov
push
fisubs
inc
in
loopne
xchg
lea
rcr
into
cltd
inc
pop
test
fdiv
cmc
adc
sbb
jns
mov
les
pop
pop
imul
test
pop
or
jp
test
and
insb
lret
mov
es
cmc
pop
mov
repnz
cwtl
dec
lret
cwtl
xchg
das
gs
insb
clc
loop
jbe
cmpsb
mov
cmp
repnz
out
sub
push
flds
jno
into
fimuls
pop
mov
bound
adc
jecxz
mov
pop
mov
lea
aad
insl
xchg
jne
jp
shl
mov
xcrypt-ecb
cmpsl
mov
clc
or
jne
xor
into
es
xchg
sub
pop
and
mov
dec
jnp
lcall
sbbb
cmp
vmaxpd
push
pop
rcl
cltd
fwait
xor
push
jge
and
in
sahf
cmpsl
imul
sub
fnstsw
fistpl
mov
or
lea
xchg
xlat
cltd
movsl
popa
add
push
lahf
je
mov
mov
les
sub
sahf
push
xchg
pop
test
arpl
or
cwtl
xchg
or
test
in
mov
jmp
imul
icebp
in
mov
je
pop
push
or
rcrb
ss
imul
fsubrs
cmp
testb
dec
scas
mov
xchg
jno
adc
lods
xchg
add
lods
iret
adc
jle
or
sbb
insl
andl
cmp
shll
test
popa
aas
fsubl
pop
stc
sub
imul
or
xchg
scas
xchg
jle
sub
mov
mulb
mov
pushf
cmpsb
add
ljmp
movsl
inc
subb
in
sbb
inc
shr
in
les
xor
cmpsl
adc
ret
in
lods
testl
jo
or
fsub
mov
mov
fisubrs
lock
jo
and
and
inc
lcall
xchg
mov
stos
dec
adc
dec
clc
and
das
cli
out
xchg
cmp
xchg
push
fistps
pop
xchg
push
jno
in
shll
mov
lret
mov
subb
sub
mov
cmpsl
stc
fimuls
gs
hlt
mov
adc
adc
jns
xor
or
mov
pop
xchg
xor
lret
and
rolb
aam
call
cmpsb
ss
adc
jmp
inc
dec
and
and
xlat
mov
adc
xchg
xchg
push
jnp
leave
sub
sarl
inc
push
insb
xchg
jge
out
mov
cmp
cmp
aaa
pop
or
mov
jmp
inc
ret
cltd
fstl
repnz
lods
repz
in
lods
dec
mov
roll
loopne
fadd
sub
jae
in
lds
mov
dec
fisubrs
arpl
mov
add
mov
out
or
mov
jge
std
and
ret
inc
mov
mov
lods
aad
movsl
cmp
mov
mov
cli
xchg
sti
ds
and
shrb
or
mov
pop
mov
push
cmc
or
movsb
pop
jle
push
and
les
rclb
jae
mov
mov
lea
add
mov
loop
xchg
imul
mov
in
jns
pushf
sub
test
or
add
outsb
repnz
add
jp
jns
jge
push
into
imul
mov
pop
sahf
or
jle
fiadds
jle
pop
mov
fcmove
je
data16
sti
or
mov
dec
pop
jge
cltd
lock
gs
sbb
jbe
mulb
sub
jecxz
mov
sahf
fucom
push
iret
sbb
mov
jp
jmp
push
adc
jmp
cmp
shrb
mov
mov
dec
in
and
pop
lea
dec
push
pop
xor
push
les
sbb
push
ret
mov
inc
into
push
lods
xor
sbbb
adc
pop
negl
pop
popf
ss
inc
jl
sbb
imul
out
or
aad
pushf
and
imul
jg
jl
cmp
loopne
in
mul
call
out
push
dec
or
mov
push
mov
dec
dec
cmp
cmc
out
fisttpl
mov
mov
adcb
insb
mov
mov
or
jecxz
jge
ss
push
sbb
popf
inc
bound
daa
cwtl
xchg
idiv
bnd
dec
cmp
in
fcompp
cmpsb
push
lods
sub
aam
sbb
filds
stos
cmp
cld
hlt
mov
movsl
mov
sbb
repnz
aas
push
sahf
nop
popf
lds
fmulp
cli
jno
add
out
or
xchg
movsl
sbb
jns
dec
adc
daa
jbe
in
adc
mulb
mov
push
mov
dec
and
push
xor
cwtl
out
cli
cwtl
and
inc
test
aaa
and
jno
xor
leave
and
sub
mov
aas
out
ss
rsqrtps
fld
repnz
test
daa
loope
lods
jg
insl
cmpsl
ficoml
xor
sbb
jp
or
mov
and
int
jb
push
aam
xchg
mov
mov
loopne
subb
ja
addr16
dec
pop
int
cmpsl
loopne
fprem1
push
lret
xor
pop
push
add
inc
lcall
shrb
jb
idiv
in
bound
push
cs
push
pop
inc
pop
xchg
incb
sub
mov
inc
fs
or
adc
adc
dec
shl
xor
ljmp
jle
ljmp
fildll
adc
fmuls
mov
adc
leave
aad
push
mov
dec
nop
stos
jnp
xchg
imul
add
cmp
iret
aaa
jnp
xchg
add
lods
icebp
cmpsl
inc
ss
pop
push
aad
dec
jl
inc
test
jecxz
adc
and
pop
ds
or
lock
inc
cmp
int
mov
push
loopne
in
xor
xor
xor
jp
dec
dec
lock
and
ficoml
push
mov
mov
xor
adc
xchg
popa
inc
mov
pop
pop
cmpsb
cs
xchg
sbb
mov
shr
rol
add
and
dec
cmp
test
lds
dec
push
in
push
mov
addr16
pop
push
fcoml
mov
push
push
mov
add
lret
aad
adc
fstpt
lcall
cwtl
jp
sub
lods
lahf
jl
mov
aam
inc
cmpsl
or
dec
lods
ljmp
add
xchg
mov
jne
jns
adc
ret
inc
mov
mov
sbb
and
inc
fcomps
mov
and
aad
pop
rcll
ret
out
xchg
cmp
loop
mov
push
adc
mov
fwait
addr16
rcrl
mov
jb
mov
cs
cmpl
pusha
sbb
shrb
sub
je
imul
xchg
sub
imul
movsb
xlat
mov
stos
outsb
mov
mov
or
dec
inc
dec
ljmp
test
out
xchg
and
add
jg
mov
push
and
das
push
pop
add
stos
dec
enter
mov
stos
ror
jbe
xor
and
out
lds
adc
sahf
mov
and
mov
mov
cmp
dec
gs
je
adc
lds
fwait
imul
je
push
scas
addr16
pop
movsb
pop
push
xchg
into
xor
sub
in
xchg
inc
jno
repz
lcall
or
aam
out
dec
push
mov
out
js
inc
mov
insb
or
loopne
inc
or
out
and
cld
dec
stc
or
jo
cmp
scas
clc
repz
sub
daa
push
leave
jne
push
mov
or
and
stc
lock
sub
pusha
sbb
mov
xor
mov
sbb
xlat
add
dec
add
mov
out
adc
sahf
xor
cmp
cmp
lods
enter
leave
notb
faddl
test
xor
repz
jb
nop
mov
arpl
or
or
push
jnp
and
mov
cmp
adc
iret
fnstenv
fldl
jno
xchg
jno
add
cmp
mov
adc
jmp
stos
in
cmp
popf
aad
lcall
push
inc
daa
jl
inc
mov
push
scas
push
popf
adc
lock
jle
addr16
push
test
mov
mov
xlat
sbb
dec
or
mov
aad
mov
jle
or
mov
jae
cmp
stos
mov
out
cltd
out
aad
mov
inc
out
sub
das
or
neg
popa
mov
cmpsb
cwtl
push
pop
lds
push
mull
cmc
rcrb
inc
pop
pop
pop
add
pop
push
mov
lret
push
nop
lods
pop
sub
stos
mov
test
cmpsl
jmp
repnz
movsl
add
jp
mov
sub
in
add
lcall
and
std
rolb
add
in
fbld
or
or
push
inc
aad
jle
xchg
and
or
roll
jmp
push
sbb
inc
dec
arpl
insb
adc
push
cltd
addr16
int3
pop
adc
inc
xchg
sbb
fcomi
outsb
out
out
mov
je
rorl
addr16
loopne
pop
unpcklps
mov
mov
fsubp
mov
mov
fwait
or
inc
fcmovbe
clc
fucomi
mov
or
xorb
sub
inc
call
push
jmp
xor
push
xchg
les
push
dec
leave
insb
aas
pop
dec
sbb
inc
shrb
xchg
xchg
jns
pop
jae
das
nop
mov
sub
subl
mov
scas
test
pop
inc
and
into
sbbb
repz
hlt
insl
stos
xchg
sub
int3
push
or
icebp
out
add
sahf
inc
jl
or
nop
push
repnz
jb
jp
nop
mov
pop
in
and
test
dec
scas
sbbb
dec
xchg
inc
rcr
or
rcl
aaa
dec
push
or
jle
and
adc
cmpsb
cli
xor
cwtl
or
cld
in
cmp
fnsave
inc
dec
mov
add
add
lret
and
xchg
push
inc
mov
xlat
and
xor
and
mov
imul
lret
imul
xchg
test
sub
pop
roll
sub
fidivs
fnsetpm(287
adc
lock
push
mov
sub
or
add
call
outsl
ljmp
cmp
or
cmp
pushf
rolb
jp
adc
jno
pop
cmp
scas
rcl
mov
mov
sub
frstor
outsl
rcrb
lret
je
lods
insl
fbstp
aad
push
mov
imul
sub
ja
mov
push
and
push
xor
adc
lds
and
insb
xor
push
jae
inc
push
dec
push
into
mov
adc
lock
ficomps
mov
push
or
test
jecxz
lea
repnz
testl
cmc
popf
mov
clc
int
mov
sbb
mov
inc
in
xor
dec
nop
adc
mov
mov
cmp
andb
cmp
mov
shrl
dec
xchg
lahf
xor
test
xlat
jb
jno
and
fldenv
pop
sbb
aad
fisttpl
ja
push
bound
lret
xchg
movsb
cmpsb
js
push
mov
xor
in
sbb
ficoms
cs
int3
je
sahf
inc
push
dec
mov
loope
or
popa
jns
mov
pop
lds
xorl
out
cmp
push
into
cmpsl
es
clc
jge
mov
adc
jmp
xlat
mov
xchg
sbb
xor
or
pusha
push
cmp
mov
repnz
pop
jmp
adc
sub
sahf
push
lret
scas
xchg
mov
icebp
sub
movsl
fsubrs
mov
xchg
in
ss
aam
push
ja
out
in
inc
lea
pushf
stos
xor
dec
adc
sbb
inc
mov
cmp
jge
hlt
jnp
or
fs
out
fs
sub
xor
cli
ret
aad
test
cli
call
xchg
ds
repnz
mov
out
roll
ljmp
sbb
test
sub
mov
stos
cmp
sti
jge
lods
jp
dec
dec
jle
data16
inc
rcll
lods
aas
push
cmpsb
test
imul
mov
arpl
daa
add
ret
fsubrs
jae
cmpl
icebp
lret
xor
arpl
push
mov
repz
add
mov
adc
leave
icebp
out
push
or
jnp
pop
inc
popa
mov
add
xor
mov
xor
adc
fisttpll
pop
insb
icebp
pop
sbb
xchg
cmpsb
mov
rclb
cmp
pop
cli
and
push
sub
not
xchg
sub
gs
in
cmp
addr16
and
inc
je
movsb
jge
and
arpl
imul
add
dec
cmp
fsubr
movsl
aad
in
js
loopne
jmp
dec
cmp
jae
loopne
cmc
sub
xor
mov
mov
outsl
lock
xor
dec
imul
and
js
cmp
xorl
lods
jne
in
dec
fistpll
cwtl
dec
xchg
pushf
push
xchg
dec
push
cmpsb
mov
add
jae
cmpsl
ja
and
ss
xchg
test
xor
sbb
and
loop
add
push
pusha
lock
fisubrl
mov
insl
xchg
or
sbb
test
jno
sub
mov
sahf
sbb
add
jmp
xor
outsb
jnp
xchg
enter
sub
xor
mov
mov
push
bnd
or
pop
dec
out
cmp
loopne
jmp
dec
rorb
inc
cltd
add
sbb
pop
xlat
mov
jae
inc
xor
movb
fwait
sub
andb
into
xchg
xlat
lds
lahf
aad
and
lret
ja
cmp
movsl
fucom
out
mov
adc
lret
adcb
dec
adc
inc
sub
movsb
dec
push
in
sub
xchg
faddl
lods
lock
popf
aas
mov
dec
js
arpl
jne
test
push
shrb
mov
fldcw
shlb
lret
and
cmp
lahf
dec
jecxz
jge
push
push
and
mov
jecxz
icebp
movsl
seto
jle
and
sbbl
outsl
sub
inc
mov
and
dec
xorb
sbb
hlt
aaa
mov
and
jecxz
and
dec
gs
jbe
or
fs
dec
jo
pushf
adc
lods
and
shrb
stc
vmovntps
mov
lcall
mov
mov
movsb
lahf
pop
sub
adc
cmp
lods
aas
xchg
mov
mov
mov
es
pop
jae
xor
pop
jg
jo
mov
and
dec
dec
sub
adc
dec
js
les
outsl
lods
add
sbb
fdivrs
loopne
mov
inc
cmp
outsb
cmp
xchg
je
pop
stos
mov
shrb
pop
push
fsubrl
mov
and
dec
add
jge
mov
pop
cmp
in
test
loopne
xchg
shll
popa
outsl
and
clc
dec
cmp
sub
fisttpl
jp
sar
pop
pop
stos
push
stos
or
lds
jno
and
andb
or
pop
adcb
ret
sub
adc
push
insb
sub
fisttpll
fdivrs
out
js
mov
xchg
inc
push
push
out
fsubl
jmp
xchg
lret
mov
inc
xchg
lods
mov
jge
push
or
and
push
xchg
es
inc
xor
mov
pop
mov
out
sahf
and
dec
cmp
jbe
imul
sbb
movsb
mov
lret
les
cmp
rcrl
sti
inc
lcall
rorb
jge
pushf
jne
jl
fnsave
sbb
adc
sbb
stc
mov
fsub
daa
push
repnz
xchg
sbb
cmpsl
or
das
loop
sbb
sub
adc
mov
rorl
mov
mov
jle
pop
sahf
add
jmp
les
sub
mov
or
jns
scas
in
addr16
and
mov
pop
jg
xchg
lahf
xchg
xchg
dec
mov
and
dec
adc
imul
push
je
lods
jne
push
sbb
push
mov
mov
shll
ficompl
sti
jge
aaa
mov
xor
fistl
mov
or
lcall
jge
dec
cmpsb
mov
adc
mov
lds
fstpl
loop
mov
and
cld
lret
xor
repz
jae
and
loopne
mov
fnstenv
outsb
out
jle
jno
or
xor
sbb
adc
scas
in
mov
clc
fs
cmc
mov
repnz
outsl
and
daa
add
mov
fidivrl
inc
das
pop
push
cli
subb
imul
cmc
inc
pop
sub
dec
jne
in
pop
nop
pop
mov
push
jp
lret
mov
ss
add
sub
push
notb
fldt
outsb
stos
mov
inc
out
xor
sbb
sub
and
jb
ss
mov
lret
mov
inc
sti
adc
xor
xor
push
cmp
add
mov
cld
cmp
and
test
js
ss
xchg
leave
rorl
ljmp
outsb
rorb
sub
sub
add
sub
int
mov
cmp
stc
pop
mov
clc
int
aaa
xchg
xchg
stc
xchg
jno
and
sbb
loopne
lods
jns
fisubl
ror
and
sub
and
imul
rcrl
lea
insb
fldcw
lods
pop
sbb
mov
lahf
icebp
sbb
dec
sbb
andl
stos
fwait
gs
add
scas
sub
fstl
es
xor
jne
lods
int
popf
aam
xchg
mov
leave
sbb
nop
xchg
and
inc
aam
lret
pop
es
jae
dec
mov
mov
loop
jns
jmp
and
push
adcb
adc
scas
dec
mov
or
add
adc
leave
sbbl
fcompl
clc
aam
test
lds
xchg
or
fstpt
and
insb
pop
int
subl
xor
xor
add
cmpsl
subl
test
cmpb
adc
cmp
ljmp
push
ds
je
mov
loopne
mov
call
into
lcall
movswl
mov
adc
mov
cmp
popf
es
ja
ljmp
pop
and
inc
aaa
mov
push
clc
mov
inc
mov
orl
xor
test
out
fadds
or
test
in
xchg
pop
imul
xor
sub
int3
data16
and
das
rorb
jbe
jle
insb
lret
dec
es
jae
xor
inc
imul
rorw
adc
add
in
lea
imul
mov
dec
sbb
bound
icebp
out
xchg
lock
fs
adc
rorl
fs
nop
aas
outsl
sub
pushf
sbb
in
aad
mov
fstps
push
and
cmp
push
fidivrs
adc
sub
or
aas
fwait
loop
add
ljmp
mov
sbbl
sti
pop
jne
mov
push
dec
xchg
nop
cmp
push
jle
call
mov
cmpl
dec
idivl
adc
lods
ljmp
jne
and
loop
lahf
pop
mov
adc
out
pop
mov
lret
inc
js
neg
outsb
stos
and
jns
sti
mov
aaa
ret
repnz
add
sahf
cwtl
jg
xchg
adc
loopne
in
inc
call
xor
fdivs
popf
sbb
jle
lods
xchg
push
xlat
mov
push
enter
dec
sbb
stc
mov
in
mov
mov
sub
dec
jge
sub
push
jge
outsl
or
jle
and
inc
sub
xor
aaa
mov
jno
xor
adc
dec
mov
push
fisubl
insb
cmc
int
pushf
sbb
sub
loopne
into
call
arpl
inc
push
xor
xchg
push
sub
pop
lret
inc
cmp
push
push
je
dec
dec
pushf
aam
dec
and
lock
or
inc
lock
jns
hlt
loope
jmp
cmc
movsb
nop
mov
pusha
in
sub
jge
ljmp
push
movsl
sbb
xchg
aaa
and
mov
shlb
test
popa
push
push
or
xlat
test
pushf
fwait
jno
add
ret
stos
jp
cmp
das
pop
test
shl
ret
gs
cmp
push
sub
int3
pop
dec
inc
push
pop
clc
xchg
sub
push
jnp
icebp
popa
and
jbe
in
mov
and
dec
sbb
adc
xchg
cmp
ds
mov
clc
lock
mov
cld
test
add
inc
xchg
out
cmpsb
cmp
or
pop
mov
orl
inc
add
ss
pushl
dec
js
movsl
mov
lcall
xchg
and
out
inc
mov
lcall
imul
test
pop
jo
and
sub
daa
call
ds
cltd
out
xor
loope
sti
mov
hlt
push
out
lret
je
test
insb
adc
jnp
xor
mov
stc
idivl
cli
mov
daa
cmp
scas
mov
xchg
sti
mov
cltd
frstor
sbb
mov
jbe
xchg
popa
dec
push
cmp
cmp
clc
xchg
sbb
in
sahf
cmp
jns
pop
jge
fldcw
es
mov
ljmp
jae
cmp
nop
lret
outsl
dec
aam
dec
in
stos
mov
jbe
mov
jo
xor
sub
fcoml
hlt
add
mov
fwait
cmpsb
xchg
daa
pop
or
test
jle
mov
scas
adc
cli
jnp
out
xchg
xchg
jp
sbb
movsl
decb
dec
lret
loopne
js
je
sub
adc
push
or
out
lea
lea
ret
fmul
aad
jmp
add
mov
iret
ja
cltd
sub
xchg
andb
pushf
std
fnsave
cmp
clc
popa
repz
mov
xor
cwtl
xor
mov
push
xchg
imul
hlt
mov
jle
xchg
mov
int3
loop
lods
movsb
aas
xor
loope
and
jg
pop
inc
sahf
outsb
add
cmp
aad
pop
mov
out
out
xorl
div
pop
fs
dec
cmp
bound
xlat
imul
pop
sbb
adc
mov
ja
cmp
scas
movsl
ljmp
enter
push
lret
push
push
inc
loop
and
icebp
pop
mov
xchg
add
mov
in
scas
mov
in
mov
adc
sbbl
xchg
mov
std
dec
xor
pusha
xchg
and
nop
cmpsb
add
pop
pop
unpcklps
push
xlat
dec
pop
jl
jae
xchg
or
and
out
mov
jne
mov
outsb
into
clc
inc
dec
sbb
adc
movsl
mov
jmp
jle
in
jb
sub
push
push
lock
pop
enter
fmull
int3
shr
stos
sub
shl
in
pusha
or
insl
mov
dec
or
push
mov
adc
bnd
out
mov
loop
pop
movsl
push
dec
lods
clc
and
pop
xchg
mov
xor
fcomps
sub
imul
out
les
push
ljmp
fnstsw
ljmp
clc
stc
jge
xor
icebp
clc
into
fld
movsb
imul
shll
jnp
cld
mov
mov
add
sbb
mov
mov
movsl
mov
shl
jge
and
mov
mov
sub
dec
cmp
iret
arpl
inc
fldenv
es
das
movsl
dec
mov
or
sub
mov
cs
mov
sbb
cmp
inc
xlat
push
mov
mov
popf
xchg
insl
into
andb
mov
jae
add
xchg
fucomip
jge
jb
or
pusha
pop
adcl
dec
jg
and
jnp
jp
jns
arpl
leave
mov
std
or
test
pop
fisttps
and
arpl
push
jl
fisttpl
cmp
inc
sbb
mov
cs
je
mov
pop
movsl
cltd
imul
movsb
mov
cmpsl
jns
loope
mov
push
mov
xlat
ret
sbbb
inc
mov
ret
adc
lret
sub
sub
and
or
fnsave
fwait
or
outsl
mov
fcomi
mov
je
ret
add
cmpsl
call
cli
iret
mov
add
movsl
fisubl
and
cli
mov
push
inc
test
ror
mov
clc
or
jbe
dec
imul
mov
out
xor
mov
shll
call
mov
cli
insl
add
or
dec
xor
shll
push
jg
sbb
in
dec
cmp
add
test
pushf
inc
inc
popa
add
daa
mov
call
mov
outsl
cli
scas
cmp
or
sbb
push
sarl
fucomi
int
mov
sbb
popa
jb
aas
lahf
pop
pop
push
xor
stos
add
enter
cwtl
data16
out
adc
fidivrs
push
lahf
mov
insl
add
les
fiadds
cmpsl
inc
shl
xchg
fisubl
rol
inc
lds
mov
sbb
dec
into
in
and
gs
inc
lock
sub
xor
dec
cmp
fs
jle
adc
mov
std
mov
adc
dec
dec
pop
jo
je
mov
cli
xchg
js
sbb
inc
xorb
mov
mov
cmp
ss
cmp
sti
pop
adc
push
pop
dec
or
lods
push
aas
mov
push
push
mov
mov
loopne
jmp
inc
mov
jp
dec
popa
xor
mov
ja
sub
les
lock
push
push
in
jmp
pop
imul
xor
in
insl
data16
sub
sbb
inc
iret
inc
xor
pop
adc
mov
dec
dec
xor
or
mov
and
mov
sbb
push
shll
cmc
sbb
mov
std
sbb
pop
pop
sub
rorl
pop
mov
movsb
sti
jge
push
lcall
test
sahf
dec
into
adc
lods
mov
push
aas
sbb
cmp
stc
jl
int3
cli
nop
mov
push
addl
push
xchg
std
adc
in
adc
pop
xchg
pop
jge
inc
into
push
jo
jle
fistpl
rol
adc
mov
xchg
test
call
xchg
mov
leave
ret
inc
out
imul
mov
or
xchg
mov
iret
cmp
mov
xor
inc
cmpsb
shll
mov
jns
dec
lds
xchg
movsl
push
adc
jmp
or
mov
inc
mov
cli
dec
adc
fistl
shrl
adc
sbb
std
pop
mull
lcall
jl
pop
jnp
ds
ret
out
scas
scas
xchg
add
xchg
insl
ficoms
leave
cmpsb
or
jbe
mov
mov
mov
mov
lahf
out
ss
xor
std
jno
and
das
xor
hlt
loope
mov
adc
or
inc
daa
shrl
jnp
hlt
and
clc
fdivl
sbb
int
ret
test
dec
cs
jl
sub
push
daa
pop
das
jg
and
in
or
stc
adc
pop
sbb
inc
sub
cmp
pop
pop
add
mov
ficompl
out
ljmp
pushf
xchg
icebp
inc
jecxz
int
out
sti
ret
fcomps
icebp
push
mov
or
jnp
in
ret
lds
mov
push
dec
xor
pop
rcll
dec
cwtl
or
daa
inc
mov
ret
inc
mov
pop
adc
imul
adc
test
bound
hlt
or
jns
mov
ljmp
or
mov
fs
jae
call
add
outsb
ret
lods
stc
mov
or
repz
xor
sbb
adc
lcall
ds
addb
sbb
mov
mov
xor
cmpsb
sub
add
sbb
mov
loopne
mov
lock
cmp
inc
xor
xchg
mov
lret
push
add
inc
inc
add
rorl
rcl
icebp
insb
stos
int3
nop
jmp
jno
stos
pop
jno
call
stc
out
and
dec
mov
mov
pushf
xchg
dec
mov
xchg
fwait
jns
cmpsl
or
jae
test
pop
push
lods
xchg
sub
jnp
fldt
jnp
mov
or
mov
inc
pop
mov
jle,pt
test
jge
push
push
adc
mov
loop
imul
adc
add
or
aam
fsubl
or
mov
xor
sub
adc
or
addr16
inc
jne
inc
xchg
fs
mov
jbe
or
dec
sub
add
mov
cmp
mov
xchg
movsl
movsl
inc
mov
aaa
sbb
lods
xor
ds
xchg
adc
icebp
push
push
sbb
clc
icebp
stos
gs
jno
icebp
push
lret
pop
cmp
call
mov
in
fildl
push
xor
fsubrl
and
into
cmp
sub
in
movd
add
leave
xchg
mov
sub
fisubl
xchg
or
cmpsb
into
mov
std
scas
or
dec
sub
and
mov
orl
push
jns
or
xchg
mov
jl
pop
mov
mov
scas
dec
sub
dec
scas
rcrl
xorl
mov
into
mov
xchg
mov
pop
adc
cmovb
or
dec
fwait
test
pop
mov
stos
push
test
mov
cmp
sub
adc
push
xchg
movsb
jno
push
sub
out
popf
sbb
enter
cmpsb
inc
mov
pop
lret
xor
fistpll
dec
dec
into
sub
add
cmp
mov
mov
xchg
xchg
repz
sti
and
and
lods
sti
inc
enter
jmp
push
call
loopne
adc
jp
das
pop
fs
adc
fldt
not
scas
ficomps
cs
rcll
negb
lds
sub
or
or
sbb
dec
aad
and
sbb
and
adc
jae
jl
inc
mov
hlt
mov
ljmp
insl
add
ds
push
int
dec
pop
pop
lea
mov
inc
leave
sub
dec
lahf
repnz
repz
lahf
data16
test
pop
out
movsl
outsb
and
aas
mov
sahf
jg
cltd
sbb
push
dec
push
insb
insl
mov
int3
not
ret
push
mov
fisubrl
dec
mov
out
sbb
adc
and
and
sbb
stc
int3
sarl
xor
int3
loope
movsb
test
popa
mov
iret
repz
cmc
push
and
mov
dec
xchg
push
pop
jns
push
adc
cmp
repz
and
cmp
aas
pop
and
in
sbb
xor
icebp
dec
fs
lahf
push
adc
sbb
jno
and
inc
scas
xchg
cmc
jo
lock
mov
inc
add
pop
aaa
push
addl
xchg
mov
add
jne
fldenv
mov
sub
jecxz
out
xchg
pusha
sub
fmull
and
shll
mov
xchg
clc
xchg
lods
addr16
adc
lret
adc
push
push
mov
mov
cmp
ds
dec
xor
sub
jne
mull
cmp
mov
inc
call
mov
leave
mov
int
dec
sbb
loope
dec
nop
mov
fadd
adc
lret
xor
xor
cmpsl
popf
xchg
sbb
jo
inc
pop
and
jl
dec
mov
pop
das
sub
cmp
arpl
cmp
adc
fistps
or
push
push
mov
jmp
jecxz
cmp
arpl
jmp
imul
add
and
popa
test
fsubl
pop
js
scas
pop
jmp
xchg
cmp
pop
cmpsb
test
test
and
or
mov
push
sahf
jne
cmpsl
aas
add
cmovp
sti
jp
mov
popa
andl
or
cld
icebp
sbb
dec
test
lahf
mov
test
sub
popf
jnp
cmp
jo
shlb
imulb
mov
cmp
in
push
push
insl
fistl
dec
out
hlt
insl
mov
sbb
test
pop
dec
push
xchg
pushf
ficompl
push
fwait
loopne
mov
int3
inc
addl
dec
pop
fucomip
pop
pushf
sbb
cltd
push
les
xor
sahf
dec
jmp
mov
shrl
adc
or
xor
cmp
adc
loop
sbb
mov
push
mov
nop
jmp
push
and
hlt
pusha
movsb
jl
daa
push
sbb
stos
sub
sti
dec
int3
call
adc
imul
out
paddw
fisttpl
push
scas
cmpsl
decl
xchg
icebp
sbb
in
and
ljmp
cmp
push
and
jb
sbb
pop
subl
testb
sbb
cld
jmp
inc
push
sbb
xchg
cmp
inc
imul
push
and
jp
or
shlb
je
mov
les
pop
cmp
hlt
stos
adc
scas
jecxz
dec
pop
dec
in
push
leave
sbb
cld
or
out
jno
scas
test
lahf
mov
xchg
xor
rolw
sbb
xchg
or
add
or
test
popf
iret
cmp
rorl
jg
daa
jg
inc
das
mov
jmp
push
pop
jbe
hlt
and
fidivl
or
adc
lds
adcb
jl
ret
daa
pop
enter
sbb
aad
fnstenv
das
lods
cmpsl
xor
sub
popa
push
js
jecxz
loopne
add
cmpsl
adc
pop
ljmp
jno
jb
iret
aas
lcall
int
arpl
xchg
shrb
out
int3
mov
test
fists
das
xchg
xor
mov
add
xor
push
xchg
inc
dec
push
adc
xchg
sbb
dec
cmp
cmp
out
pop
xor
clc
dec
test
push
js
in
dec
shll
adc
jbe
xor
add
inc
movsl
cmp
add
add
pushf
adc
push
jo
repnz
cld
fstl
cmp
sub
insl
sub
xchg
js
push
jno
idivb
in
rcl
xchg
movsl
inc
pop
loop
sbb
aas
pop
testb
sahf
cmc
sub
ds
adc
dec
pop
stos
cmpsl
scas
mov
je
dec
sbb
pop
fidivl
cmp
pop
or
lods
push
test
cmp
jg
dec
jmp
iret
xor
sbb
and
movsb
das
test
ror
fiadds
xor
hlt
sbb
mov
mov
cmp
push
or
callw
dec
pop
movsb
jno
int3
mov
jnp
je
lock
addr16
mov
inc
aaa
or
xchg
or
xor
cmp
or
xor
xor
in
jl
mov
mov
mov
mov
pop
push
pop
fs
sbbl
mov
dec
mov
hlt
xchg
or
movsl
xchg
xor
add
sub
push
pop
inc
lds
repz
pop
xchg
cld
imul
mov
sub
cmp
faddp
sub
rolb
icebp
push
jg
or
out
adc
and
movl
out
lahf
lds
mov
sahf
cli
pop
xor
cltd
jmp
in
in
xlat
sbb
and
movsl
lea
xchg
ja
leave
cmp
test
pop
xchg
sub
pop
pop
aas
fst
pusha
xchg
and
je
dec
pop
xchg
add
xor
add
out
mov
shrb
dec
cld
cmp
movsb
pop
je
xchg
mov
add
pop
mov
jne
add
gs
ret
pop
add
lods
sahf
cli
out
xor
push
int
int3
inc
pop
pop
xor
mov
js
mov
pop
lea
fdivr
xor
jmp
popf
insb
adc
call
ret
outsb
shl
mov
xchg
add
dec
inc
inc
nop
mov
sbb
sub
inc
test
int
stos
jle
mov
stc
lds
es
sub
loopne
cltd
mov
enter
xlat
xchg
ds
rcl
push
mov
adcl
add
xchg
xor
mov
add
inc
mov
xor
loopne
cmp
in
lods
pushf
or
cwtl
mov
cmp
dec
gs
mov
stos
mov
xchg
or
push
adcl
push
and
fst
adc
mov
aam
in
mov
out
mov
hlt
rolb
dec
sub
incb
pop
lret
mov
test
fdivp
addr16
jno
adc
in
lcall
int3
movb
sbb
fcompl
sbbb
inc
add
int3
mov
and
lcall
and
fisubrl
jae
mov
push
mov
outsl
adc
pop
ret
xor
aam
jmp
fwait
pushf
and
bound
and
mov
add
xlat
or
fmuls
pop
or
cmpsl
push
add
out
and
inc
stos
mov
push
fadds
xchg
sub
pusha
es
sti
test
test
pusha
push
cmp
fistpl
shlb
test
lahf
fnstcw
pop
aam
cmc
hlt
jns
mov
sbb
cmp
add
je
dec
cmpsb
movb
push
mov
int
sub
xchg
xchg
in
insl
push
out
leave
adc
mov
ljmp
adc
sti
sub
and
xorl
rolb
inc
dec
loop
cltd
ljmp
mov
add
lret
mov
dec
xor
gs
lock
sub
out
cmp
and
shl
and
adc
loope
out
ss
inc
jmp
cmp
repnz
adc
repnz
xor
mov
cmpsl
sbb
xorb
mov
call
mov
fists
jle
mov
cwtl
hlt
test
and
jo
loop
scas
xor
repnz
aam
fstps
mov
outsl
hlt
movl
inc
pop
xchg
ret
flds
fidivrs
jl
sub
loopne
mov
mov
mov
push
cld
cmp
icebp
lods
mov
je
inc
xchg
lcall
out
test
xor
jb
mov
push
inc
dec
fidivrl
into
xchg
sub
push
lock
sbb
in
ffree
push
or
pop
mov
out
aam
pop
cltd
push
pushf
sub
enter
rcrl
jae
xchg
jp
inc
mov
add
mov
xchg
sub
mov
cltd
enter
insb
in
pop
test
and
cmp
add
dec
fidivrs
mov
cmpsb
xor
xchg
dec
aad
mov
jb
or
mov
and
pop
rcrl
leave
sub
mov
mov
or
imul
fistl
or
adc
or
int3
les
dec
cwtl
sbb
dec
jo
and
pop
loope
push
jg
jo
sarl
adc
lods
fstpt
and
js
in
mov
add
cmc
adc
push
jnp
push
xchg
mov
hlt
or
repnz
xchg
jb
xlat
addb
adc
popf
and
jns
test
push
pop
adcl
cmp
shl
sbb
cs
and
inc
cmp
in
test
enter
pop
sub
inc
jmp
cmp
inc
and
lret
cmp
jl
out
lahf
mov
ficompl
xor
inc
xor
or
sbb
mov
cld
dec
add
adc
sti
stc
sub
xor
aas
and
data16
mov
inc
or
in
shll
cld
sti
sub
lret
mov
push
pop
mov
std
shll
icebp
push
fsubs
scas
cmp
orb
rolb
lret
icebp
xchg
arpl
jnp
into
jae
filds
jb
orb
into
push
push
jo
push
int3
stos
sbb
bound
divb
and
jmp
lahf
push
xchg
push
out
orb
into
stos
pop
inc
les
mov
ljmp
push
sbb
or
icebp
lahf
dec
es
add
push
mov
dec
jge
pop
dec
pop
mov
sub
outsl
rcr
xchg
lcall
pop
mov
scas
lods
adc
push
icebp
mov
out
shrb
xchg
dec
jbe
push
xor
ficoml
inc
mov
inc
push
xchg
mov
add
mov
stos
push
andl
into
test
xor
cli
lock
dec
int3
mov
push
dec
and
mov
lods
sub
psrlw
cmpb
mov
lods
add
ljmp
out
out
mov
lret
aad
sbb
into
test
in
add
popa
imul
cmovns
lods
add
ss
sbb
mov
test
mov
mov
mov
xor
mov
push
xchg
xchg
pop
lods
push
enter
stc
dec
dec
std
std
add
sub
pop
push
fbld
repnz
daa
and
jmp
push
into
nop
out
shlb
pushf
jae
fidivrl
jne
pop
xchg
icebp
sub
sbb
pusha
sub
jp
xlat
mov
jnp
pushf
push
mov
xchg
push
test
mov
sti
push
push
notl
pop
adc
push
and
scas
js
inc
adc
lock
repnz
inc
leave
xchg
xor
sub
loope
arpl
push
into
jns
fsubrl
inc
cmp
std
mov
pusha
cmp
ss
jge
and
lcall
push
mov
mov
or
jg
leave
hlt
mov
addr16
daa
sub
sub
mov
stos
and
mov
sub
mov
jg
adc
fs
or
cmpsl
imul
or
mov
pop
mov
add
xchg
dec
mov
das
cmp
test
or
jl
dec
jns
sbb
adc
push
cmp
cltd
jbe
push
push
movsl
loop
dec
mov
shrl
nop
fidivrs
inc
jae
dec
sub
push
sub
dec
arpl
ja
mov
mov
pop
fidivs
push
pop
je
mov
push
dec
lret
xorb
pop
inc
inc
xor
ljmp
mulb
and
add
pop
push
sahf
inc
or
xor
xchg
jne
lods
adc
or
jne
jmp
lods
jg
cld
daa
imul
push
aaa
lret
mov
cmpsb
pop
dec
out
jmp
rcrl
mov
dec
sbb
fiaddl
xor
dec
movsb
repz
pshufw
mov
loopne
inc
mov
xchg
test
flds
outsl
cs
adc
cmp
mov
jle
cwtl
mov
add
loopne
mov
popf
je
xchg
lret
cwtl
ljmp
jmp
add
xchg
mov
add
cltd
mov
cmc
popa
fldenv
js
sub
add
push
inc
sub
mov
arpl
insb
fs
jo
int3
nop
sub
in
mov
mov
mov
pusha
jns
add
leave
mov
sub
movsb
add
adc
jecxz
icebp
dec
mov
addb
add
mov
into
inc
stos
fimull
mov
cmp
push
repz
or
jmp
or
inc
and
movsl
xor
in
dec
dec
test
dec
sarl
push
push
and
lock
push
dec
lret
stc
scas
movsb
or
mov
pop
repz
jp
and
xor
adc
bound
mov
cmp
jnp
jecxz
es
negl
movsb
jne
and
les
pop
xchg
stos
enter
adc
xchg
stos
ficoml
int3
mov
js
xchg
xor
xchg
test
jge
fbstp
jg
xlat
pop
testl
push
bound
fistpll
add
sub
mov
pop
imul
pop
popa
hlt
stos
xor
push
adc
and
and
cmp
loopne
outsb
xchg
mov
lahf
dec
rol
inc
int3
leave
pop
adc
pop
test
ja
sub
inc
lods
cld
arpl
pop
fwait
cmpsb
iret
aas
push
xchg
movsl
fsub
scas
test
sub
jno
test
add
and
loop
mov
subl
fcoml
cmovl
test
repnz
xchg
mov
jnp
inc
imul
js
pop
call
pop
add
lea
lret
jl
orb
jne
dec
mov
cmp
fs
inc
inc
cli
arpl
dec
mov
dec
xor
js
push
pushf
fidivrs
int
and
inc
push
xchg
fdivrs
adc
and
in
ds
cs
sub
cwtl
and
out
add
push
mov
test
pop
cltd
fisubl
ljmp
and
pop
cmp
mov
cmp
sub
je
and
popa
xchg
dec
cmc
test
xor
mov
jp
push
fidivl
outsl
sbb
cltd
in
add
aaa
jp
cmp
jns
addl
add
jnp
push
pop
adc
add
les
pop
or
cmp
mov
pop
xchg
jne
addl
loope
aas
int
cs
sbb
jp
scas
les
sub
into
shl
adc
dec
dec
adc
scas
ss
add
sub
pushf
leave
pop
cmc
sbbl
pop
sub
push
cmc
stos
or
jp
cli
and
addl
out
lds
daa
jl
add
mov
aad
loope
push
adc
pop
jae
repz
test
cmp
dec
xor
pop
aas
outsb
sbb
pop
push
scas
ret
enter
mov
lods
push
push
sub
out
xor
or
lret
loopne
shr
scas
mov
inc
fisubrs
shll
not
push
sub
mov
sbb
into
cwtl
adc
outsb
cmpsb
les
pop
js
js
sub
mov
fists
enter
sarl
dec
shlb
lock
test
adc
mov
jecxz
in
xor
mov
mov
nop
jmp
add
lds
cmpsb
sub
pop
mov
sbb
out
push
adc
ffree
push
adc
xor
adc
hlt
fistpll
cmp
pop
sub
and
in
cltd
fsts
popf
ss
pushf
push
push
pop
xor
jno
cmpxchg
mov
sub
inc
lods
fxch
dec
aas
mov
sbb
ds
mov
addr16
cmpb
mov
xor
insl
xor
jle
inc
fisttps
lret
leave
pop
adc
cld
addb
mov
mov
inc
in
scas
das
outsl
rol
xchg
aad
pop
jg
int
in
xchg
pavgw
mov
out
mov
push
cs
or
pushf
or
in
cmp
dec
mov
lcall
lahf
xor
push
inc
ss
cmpb
adcb
mov
pop
test
cs
sbb
dec
scas
imul
out
cmp
mov
nop
jmp
popa
cmova
push
mov
lods
sarl
imul
push
leave
pop
pop
stos
dec
mov
stos
mov
outsb
add
xchg
push
xchg
cmp
push
scas
xor
mov
mov
xor
mov
movsl
cmp
mov
lods
lods
mov
data16
mov
ret
xor
sub
lea
fstps
sbbl
aas
jl
push
mov
ret
popa
outsl
pop
xchg
jae
cmp
adc
sub
jnp
dec
popa
aam
fcoml
or
in
leave
add
add
in
je
fnstsw
scas
gs
dec
out
adc
xchg
xor
in
or
push
sbb
xor
outsb
sar
sub
mov
call
xor
daa
and
push
ss
push
jb
test
add
aaa
daa
xor
in
ljmp
sub
test
cmp
mov
sbb
loope
or
sbb
and
stc
inc
scas
xor
or
incb
sbb
xchg
push
pop
mov
cld
cli
jns
pop
dec
subl
std
or
fcmovbe
or
cmc
aad
test
cmp
rol
sub
cmp
cwtl
lods
jnp
cmp
pop
out
mov
fs
frstor
divb
cld
lret
pushf
xchg
jmp
xchg
push
push
jg
loope
inc
pop
int
push
cltd
cwtl
iret
push
test
xor
shl
xchg
cmp
or
lods
dec
xchg
mov
ret
mov
decb
fdivl
das
sbb
pop
jb
daa
dec
push
mov
daa
inc
dec
and
ret
adc
int3
fwait
test
test
enter
xor
popa
js
fsubrs
inc
test
jns
adc
push
les
out
das
mov
mov
mov
cmc
jb
mov
pop
or
sbb
pop
call
pop
shrl
out
loopne
repnz
xchg
add
push
mov
lcall
sub
addl
insl
or
into
and
mov
sub
cmpsb
xor
ljmp
ja
enter
pop
xchg
pop
rorb
inc
xorl
and
mov
jne
fwait
pop
inc
in
and
movsb
movsb
sbb
xchg
in
xor
shlb
fbstp
movsb
arpl
push
stos
je
ja
jae
inc
out
repz
pushf
pop
sbb
jns
das
out
inc
jb
jmp
mov
xchg
push
pop
inc
push
sub
add
pop
jp
mov
mov
popf
xor
icebp
mov
pop
mov
fimull
cltd
jle
add
jp
lds
mov
sbb
push
xchg
test
stos
cwtl
js
or
ss
sub
stos
xchg
aam
sbb
sti
sub
je
push
ljmp
out
inc
and
es
mov
call
and
fldenv
fcompl
out
pop
jl
xor
mov
add
jmp
xchg
fiaddl
mov
sub
mov
inc
xor
clc
in
inc
and
in
jne
lock
cmp
inc
mov
clc
mov
push
sarl
pop
fisubrs
jnp
cmp
cmpsb
int
dec
cmpsb
lcall
ret
adcl
fstps
pop
ds
gs
in
cwtl
sub
mov
rorb
inc
sbb
jbe
adcb
push
imul
ret
mov
and
gs
add
cmp
dec
scas
jne
inc
mov
testl
push
mov
mov
pop
leave
insb
shlb
adc
addl
push
pop
mov
mov
orb
mov
in
jns
mov
aas
mov
mov
in
rclb
int
add
lcall
jmp
lods
rolb
pop
xchg
rcr
cmp
jmp
ljmp
pmulhuw
out
daa
mov
mov
sbb
call
orb
pop
in
fldcw
cmc
lods
je
std
mov
test
jp
add
cmpsl
and
add
shrb
in
lret
daa
hlt
lock
xor
lock
sahf
into
sbb
rcll
insl
stos
dec
mov
sbb
out
push
push
dec
sub
mov
mov
adc
xor
jbe
push
ja
xchg
test
jge
push
inc
add
or
mov
push
dec
cmp
js
fisubrs
dec
mov
pop
or
mov
cmpsb
dec
xchg
cmp
movsb
add
test
repz
cli
pop
aaa
fcmovu
jle
mov
rclb
cli
or
jb
cltd
stos
mov
dec
int3
cmpsb
cmp
lods
imul
push
les
pop
movsb
shlb
movsb
faddp
pop
and
dec
imul
out
cli
testl
pushf
js
in
dec
jl
push
icebp
ljmp
push
pop
dec
xchg
jo
enter
outsb
call
aad
sbb
gs
add
cwtl
cmpsl
fistpll
lahf
mov
call
mov
nop
mov
lods
andb
jge
les
out
addr16
jnp
xchg
mov
mov
or
xchg
inc
mov
sub
jne
test
mov
jge
sub
out
fnstenv
sub
leave
lcall
lea
pop
aad
jge
mulb
jmp
sbbl
or
lcall
push
and
xlat
xchg
jno
jno
push
xchg
adc
in
cmp
pop
lods
push
or
push
mov
xchg
mov
sub
ss
xor
xchg
cmp
add
movsl
jnp
pusha
fistpll
ljmp
pop
xchg
mov
mov
pop
in
sub
aaa
shll
in
sbb
lods
jl
lret
hlt
pop
rcrl
scas
add
push
aad
or
arpl
inc
sti
out
jno
imul
cmpsl
pop
aas
aad
icebp
mov
loop
jmp
sti
inc
daa
repz
mov
out
movsl
pusha
add
mov
dec
ficoml
in
ret
push
adcb
cwtl
scas
repz
jmp
sbb
xor
or
push
inc
mov
in
and
xlat
aam
lods
aad
adc
pop
mov
push
popa
pop
jbe
leave
xor
push
cmp
push
fisubs
repz
call
pusha
mov
jb
mov
xchg
jl
leave
cmpsb
ret
imul
mov
pop
aaa
adc
xor
or
sub
pop
adc
xor
or
bound
fwait
out
and
inc
jns,pn
out
mov
adc
xchg
mov
bswap
out
xchg
into
cltd
add
xchg
fmulp
std
jmp
mov
mov
jo
bound
aad
je
clc
cld
mov
mov
mov
adcl
ret
test
mov
lret
push
pop
jae
mov
mov
mov
ret
push
sbb
jmp
lahf
pop
int
push
pop
in
loope
and
mov
push
jb
jns
push
push
flds
roll
imul
cmp
imul
cld
xor
fwait
imul
xor
pop
daa
push
push
outsb
mov
or
cmp
jl
sahf
addl
clc
or
or
ss
jle
pop
sahf
imul
xchg
jo
les
fwait
stc
xor
addr16
adc
aam
ret
push
pushf
js
mov
jbe
sbb
push
push
dec
cld
cmp
aam
push
dec
andb
or
ss
push
sbb
cmp
imul
push
mov
cmpb
pop
jbe
je
int
jnp
clc
jae
daa
xchg
adc
or
inc
jge
sbb
and
xor
jns
mov
clc
mov
xchg
jo
jp
mov
mov
adc
jns
aas
cmpsb
mov
aad
or
sub
mov
add
add
mov
lgs
imul
pop
sub
into
cmpsl
xchg
mov
into
int
adcl
stos
dec
imul
dec
into
mov
mov
call
fcomps
cwtl
dec
mov
popa
rorb
ds
pop
rorb
into
je
or
test
mov
je
or
inc
pop
lahf
scas
inc
bound
test
mov
inc
mov
mov
push
and
push
gs
mov
daa
mov
mov
mov
mov
out
pop
in
xchg
arpl
xor
mov
sbb
cmp
dec
out
jge
scas
cltd
pop
cmpsb
or
iret
lcall
fs
iret
stos
jle
es
daa
lds
xchg
movsb
ljmp
outsl
mov
xor
or
fs
pop
add
cmp
xchg
sub
pop
es
and
out
int
std
sbb
iret
push
or
ret
fimull
in
pop
fcomps
cli
out
xor
or
push
pop
pop
sub
or
dec
or
xor
in
push
mov
fwait
jnp
jmp
or
lret
call
jecxz
pop
les
xor
shr
loopne
mov
test
pop
or
cltd
mov
jo
mov
push
pop
lods
lret
push
xor
insl
dec
cltd
rorl
sbb
aaa
xchg
call
pop
outsb
sbb
or
aam
ds
mov
adc
fdivr
cmpsl
stos
jno
cwtl
pop
cltd
cmpsl
js
int3
mov
loop
mov
fwait
adc
pop
xor
fbld
sar
popf
stos
push
les
arpl
rcrl
lcall
into
sub
mov
dec
stos
and
subl
dec
repz
out
enter
scas
xor
and
fidivrs
and
sbb
cmpl
repnz
pop
push
dec
ret
dec
push
and
sbb
dec
inc
dec
adc
int3
add
imul
inc
test
mov
repnz
inc
rclb
and
or
nop
dec
adc
push
mov
dec
sub
inc
add
xorl
cmp
test
jge
mov
xchg
mov
cwtl
xchg
hlt
leave
mov
movsb
test
dec
jg
cmp
adc
pop
or
add
pushf
lret
imul
push
pusha
cmpsl
gs
addb
adc
and
inc
cli
xor
icebp
shrl
arpl
push
jns
sbb
and
add
pop
xchg
push
fwait
cmp
mov
mov
xchg
sbb
lea
sbbb
lock
ffreep
dec
arpl
jo
pop
inc
lds
sti
lret
lret
rclb
xorl
popl
mov
mov
pushf
fildll
push
pop
lahf
jecxz
cmp
inc
imul
adc
pop
cmpsl
incl
cmp
fwait
sti
mov
inc
cmp
xchg
movsb
lahf
pusha
add
mov
xchg
ret
ja
pop
cs
loopne
ret
push
mov
fdivrl
xor
push
mov
in
or
cmp
shrd
xor
adc
push
cltd
cld
jbe
sti
addr16
in
pop
shr
das
inc
hlt
sub
out
gs
das
push
add
in
dec
scas
fucom
mov
scas
cmc
mov
fcmovnb
jle
mov
xor
repz
pop
xor
enterw
lcall
push
xchg
arpl
imul
out
lds
mov
cltd
rcrl
fs
mov
popa
pop
cmpsl
or
cmp
sub
mov
cltd
repz
cmp
jbe
dec
push
iret
add
and
adc
arpl
pop
mov
and
sub
test
les
jo
ljmp
loop
and
ljmp
add
lret
xchg
inc
das
xchg
jl
inc
mov
out
dec
cmp
push
mov
jne
sarb
add
std
stos
sbb
push
cmc
test
sub
jp
dec
pop
in
pop
shr
sbb
aas
xor
sbb
jecxz
call
mov
mov
popa
inc
xchg
and
and
mov
xorb
pusha
cmp
mov
or
in
aaa
and
sbb
or
and
fistpl
imul
mov
mov
pop
adc
loop
jmp
and
push
hlt
into
dec
pop
fs
cmp
outsb
or
cmpsb
sbb
repnz
arpl
xchg
pop
inc
sbb
mov
mov
jmp
and
adc
sbb
dec
inc
stos
sub
add
mov
lcall
inc
push
pop
jp
sbb
cmpsl
xchg
in
pushf
mov
jo
ljmp
mov
pop
cs
call
mov
pop
mov
cli
add
rolb
lods
sbb
adc
test
jne
push
adc
jmp
pusha
xor
arpl
pop
dec
imul
jmp
std
es
xor
mov
adc
lret
sbb
ret
inc
pusha
fwait
mov
push
stos
mov
negb
jmp
imul
insb
or
pushf
add
mov
push
arpl
mov
jae
movsl
aas
push
mov
lea
in
jle
sub
aaa
and
adcl
pusha
clc
mov
and
cld
mov
in
adc
mov
leave
out
orl
lret
adc
insb
or
mov
pop
mov
lcall
mov
mov
mov
movb
jns
mov
add
aas
pusha
push
pusha
push
jl
aad
jp
cmc
sub
sbb
jbe
adc
popf
cltd
jb
mov
movsl
and
adc
xchg
mov
mov
mov
loop
out
inc
daa
daa
es
stos
lret
mov
fistps
fcmovu
mov
clc
xor
into
push
dec
push
inc
mov
jo
fcomps
jns
or
inc
dec
data16
into
mov
js
cltd
cltd
cmp
push
push
les
push
das
mov
repz
or
inc
call
ss
cli
dec
xor
pop
loope
sbb
stos
das
jge
repnz
fdivrs
xchg
imul
cld
or
or
jbe
and
nop
xchg
aad
lods
sbb
xchg
xor
cmp
dec
mov
outsb
aas
rcl
sub
dec
mov
xor
inc
inc
je
mov
mov
sub
hlt
inc
inc
jg
mov
push
jle
mov
hlt
test
xchg
or
and
jmp
push
dec
mov
adcl
xor
mov
sub
lret
mov
ret
sub
sbb
daa
addr16
lret
pop
ficompl
mov
bnd
adc
movsb
stos
add
in
jl
hlt
mov
or
inc
fildll
xchg
jnp
inc
ja
shlb
xchg
cs
push
jno
popa
fildl
sbb
mov
xchg
movsb
or
subl
clc
xor
dec
push
pop
sbbb
jnp
pushf
jecxz
test
shlb
mov
pop
arpl
int
mov
je
ret
imul
es
fcoml
popf
push
jb
sbb
test
hlt
cli
outsl
call
cmp
leave
lcall
xchg
mov
lods
ljmp
cmp
xor
clc
lock
xchg
aad
test
lods
out
cs
push
cwtl
icebp
and
xchg
add
inc
mov
push
in
idivl
pop
and
or
sbb
stc
les
ret
mov
pop
jnp
outsl
inc
pusha
stc
sub
xchg
mov
mov
xchg
rolb
loopne
jmp
loop
cmp
xchg
test
mov
push
imul
gs
lock
jno
cwtl
adc
hlt
hlt
mov
imul
dec
imulb
xchg
adc
fcomps
push
jle
sbb
pop
sub
cmp
mov
out
xchg
xor
and
dec
sahf
rcl
sti
mov
sbb
std
stos
mov
mov
and
into
movsl
scas
fldcw
mov
cwtl
mov
insl
sahf
mov
into
cmp
add
jg
lea
add
je
jnp
dec
and
movsl
jnp
mov
adc
push
cmp
nop
repz
imul
pop
inc
ljmp
clc
mov
adc
inc
adc
mov
xor
aas
ja
xor
adc
fidivrs
adcb
ret
hlt
and
sub
aaa
pop
das
hlt
xchg
das
test
fbld
lcall
dec
pushf
xchg
test
icebp
je
xor
fcmovnu
movsl
pop
pop
ja,pt
loopne
mov
orl
inc
addr16
ret
push
xor
dec
cmp
test
mov
fsubr
mov
jecxz
iret
inc
jno
add
icebp
scas
leave
int
mov
pop
pop
imul
xor
xorb
fsubl
mov
jge
push
mov
add
pop
inc
enter
test
xchg
jg
stos
out
fcoms
xchg
aaa
test
shlb
lret
ja
insb
subl
nop
jecxz
test
jp
and
push
dec
and
cmc
mov
das
sub
bound
stc
mov
cmp
mov
aaa
clc
aad
mov
inc
mov
fidivs
jp
adc
jecxz
call
pop
mov
in
mov
int3
inc
ss
sub
xor
pop
inc
jmp
jmp
and
dec
clc
test
dec
insl
mov
push
in
movsl
pushf
fcoms
insb
jle
xor
or
popa
push
movsl
enter
js
jle
dec
sbb
jl
sti
jl
lahf
xchg
add
cmp
fscale
popa
stos
jns
push
xor
pop
int3
xchg
add
add
inc
bnd
xchg
and
in
ljmp
sbb
fwait
jno
adc
call
cmpsb
fcomps
loop
sbb
mov
roll
xor
insb
adcb
loopne
jne
mov
add
sbb
sub
jne
cmp
and
adc
push
cmp
call
xor
cmp
incl
adc
jp
clc
inc
lea
xor
pop
test
dec
aad
and
adc
pop
push
ffreep
sti
test
sbb
cmpsb
loop
fcmovu
xor
andb
test
push
test
out
icebp
jns
rorb
rcl
repz
dec
loope
mov
or
pop
pusha
mov
in
stos
sbb
fsub
add
jns
dec
ret
aad
sub
push
add
xchg
hlt
sahf
inc
push
adc
mov
lret
pop
push
cmp
out
aam
push
cmpsl
mov
adc
movsb
cmp
xchg
cmpb
enter
push
mov
stos
frstor
jmp
rorb
pop
xchg
shll
pop
jbe
mov
shr
and
test
sub
fcoms
iret
hlt
iret
cmc
fs
lahf
imul
fstpt
cmpb
pop
cld
shl
jo
nop
ret
stc
cmp
pop
sahf
lods
push
jmp
and
mov
sbb
addr16
test
adc
or
stc
mov
cltd
and
aas
dec
push
jne
cmp
jae
mov
mov
mov
and
cmpsl
shlb
subb
ficoml
adc
sub
push
imul
and
js
jnp
fisubl
jb
lds
mov
jl
add
mov
xlat
ljmp
sbb
jl
arpl
das
adc
push
aad
jns
aas
xchg
mov
and
mul
dec
add
pushl
xor
jnp
pop
mov
inc
inc
inc
xchg
mov
test
push
cmp
jne
fcomps
fwait
sub
aaa
xchg
sub
cmpsb
pop
cli
adc
push
sub
jb
mulb
push
xchg
mov
xlat
xor
mov
jae
mov
cwtl
and
jb
cmp
sbb
xchg
fcomps
mov
push
xlat
pop
mov
mov
jne
pushf
pop
adc
push
xor
leave
push
movsb
popl
ds
fistpl
mov
stc
int3
mov
sbb
mov
rorl
mov
pop
out
movl
jg
xchg
out
lahf
inc
push
push
inc
rep
jmp
xor
les
lcall
sbb
cmpsb
sub
xchg
sub
fwait
aam
out
add
stos
or
scas
pop
push
imul
lds
xchg
pop
mov
cmp
imull
fnsave
xchg
gs
fsubr
fs
inc
jmp
scas
push
cmpsl
fld
adc
adc
in
push
and
cltd
incb
adc
enter
inc
insl
cmp
out
add
mov
int3
clc
inc
subb
enter
scas
push
aam
lods
add
sbb
mov
xchg
ss
out
adc
xor
mov
xor
incl
add
or
push
lahf
in
jp
out
sub
xor
pushf
rorl
xor
push
lcall
sbb
in
or
sbb
shl
fmuls
mov
jg
mov
sarb
jg
mov
mov
int3
xchg
mov
pop
cli
pop
add
dec
stos
outsl
out
out
inc
jle
push
push
or
fistpl
push
sub
mov
pop
ljmp
cs
sub
push
dec
mov
int3
jnp
cli
xchg
movsl
adc
outsl
dec
mov
and
test
fistpl
mov
fxam
loop
outsb
rorb
xor
jg
pusha
test
add
lds
xor
jl
aaa
aam
in
hlt
push
in
fisubl
mov
popf
pop
cmc
xchg
cmp
loopne
sar
clc
fidivrs
ds
jnp
popa
add
jle
mov
inc
jmp
aaa
fidivl
pop
mov
nop
inc
jmp
leave
pop
cmp
test
call
not
bound
fists
aam
cld
xchg
fidivl
insl
daa
xor
int
scas
inc
xor
sub
jmp
sbb
leave
xchg
aad
and
sbb
jp
xor
dec
fdivrs
push
jne
mov
adc
lahf
scas
fstps
jmp
hlt
ljmp
mov
test
insb
xchg
insb
sbb
xchg
stos
pop
out
ret
dec
mov
adc
mov
inc
and
xchg
bound
mov
out
roll
bnd
shlb
mov
lea
sub
pop
xor
adc
add
xchg
xchg
pop
adc
ficoml
arpl
out
mov
insl
sbb
ljmp
inc
pop
mov
xchg
push
add
ja
das
iret
sbb
pop
or
xlat
ja
fldl
lahf
leave
and
jb
ja
sti
xchg
aam
sub
push
fsubrs
arpl
nop
dec
shrl
push
jae
shr
xor
cmpsb
sbb
mov
fcoml
fisttpll
mov
add
cmp
nop
adc
loope
es
loopne
ljmp
jno
popa
imul
pop
xchg
stos
iret
outsb
dec
pop
ss
mov
out
pop
jnp
xchg
xchg
out
xchg
and
sub
gs
jl
pop
stos
rorb
repnz
mov
push
ret
dec
mov
adc
and
cltd
adc
push
rcrb
sbb
jae
push
js
int
mov
adc
mov
ret
repnz
pop
mov
jnp
shr
push
add
stos
out
popa
xchg
ret
xor
cmpsl
rorb
frstor
lahf
negl
xorl
jne
movsl
int3
loope
mov
push
add
jmp
push
call
fadds
inc
fnstsw
sub
pop
cmp
pop
pop
aaa
lahf
pop
test
imul
jge
test
movsl
loope
cld
sti
xor
pop
in
addr16
dec
test
pop
and
lcall
cmp
cmp
ljmp
call
addr16
mov
sbb
dec
jo
fst
clc
aad
js
mov
pop
cwtl
push
jno
insb
add
out
pop
sahf
flds
lea
push
out
test
adc
icebp
xchg
push
shlb
in
lea
push
outsl
test
lret
int
mov
add
sbb
movsb
jl
mov
clc
adc
lcall
or
xchg
and
sub
aam
lock
or
sbb
fdivp
xor
out
pop
xchg
lcall
sub
fs
addr16
or
popf
adc
inc
mov
fidivrs
ljmp
les
mov
mov
fists
mov
lret
xor
loop
cli
xor
lcall
scas
lods
pop
push
pop
push
add
in
xchg
xchg
ret
aam
lods
mov
bound
aaa
or
icebp
sbb
das
enter
cmp
push
dec
sarl
into
leave
dec
dec
xor
repz
and
push
or
xor
mov
insb
data16
xchg
in
repnz
psrlq
sub
adc
inc
or
stos
dec
xchg
scas
or
outsl
mov
mov
or
andb
lea
mov
fnstsw
push
dec
and
mov
jmp
insl
lods
in
jns
xchg
pop
stos
ds
enter
lcall
add
cli
stos
aaa
cld
loopne
sbb
push
pop
pop
and
cltd
imul
sbb
or
out
repnz
fwait
jae
orl
leave
pop
mov
cmp
in
adcl
sub
dec
fs
pop
je
arpl
jno
add
cmpsl
inc
popa
js
rorl
int3
loopne
jbe
and
out
clc
mov
and
dec
mov
inc
into
movsb
cwtl
into
mov
sbb
jnp
xchg
sbb
inc
cld
arpl
dec
or
sbb
cmpl
cmp
mov
mov
pop
jns
insb
popf
cmp
jo
adcb
push
nop
jg
adc
push
nop
lret
dec
es
pop
sub
xor
fcompl
fsubrs
push
fiaddl
inc
stos
xor
arpl
sub
xchg
cmp
add
pop
cmc
mov
test
std
push
lahf
push
movsl
mov
inc
add
xor
jecxz
in
aam
hlt
jnp
jp
enter
cs
sbb
shrl
pop
mov
xchg
les
in
jbe
adc
lds
push
test
mov
cmc
cmp
sub
and
adc
dec
and
pop
mov
loop
jge
in
mov
outsb
aas
mov
call
or
pusha
std
sbb
aam
inc
daa
mov
aad
adc
push
xchg
push
and
push
fdivr
or
jl
outsl
divb
push
cmp
jmp
dec
scas
jl
pop
int
int
sub
mov
lock
mov
insl
enter
push
inc
mov
sbb
or
dec
and
jbe
mov
pop
leave
push
mov
shll
sbb
and
pop
xchg
xor
push
addr16
shll
mov
aad
subb
ret
jle
pushf
and
and
in
sbb
bound
sub
ficoml
faddp
js
addb
sbb
lods
std
inc
dec
push
inc
mov
movaps
int
adc
xor
sarb
clc
jecxz
aaa
sti
dec
fidivrs
or
leave
add
xchg
ret
in
popa
incl
sub
shrb
cli
cmp
add
or
pusha
sarl
xchg
pop
in
jmp
fwait
push
cmp
sbb
dec
jnp
sbb
js
push
inc
add
rcll
cmp
add
divb
ja
adc
jg
and
mov
sarb
sub
jle
pushf
inc
push
repz
mov
popa
push
pop
das
repnz
sub
insl
sub
mov
mov
jno
push
jae
jecxz
insb
pushf
cmp
bound
sbb
sbb
mov
repnz
les
jnp
flds
sti
jne
add
je
dec
mov
fs
scas
out
xlat
cmc
aad
push
das
sbb
xchg
lcall
aaa
sub
fisubrs
icebp
xor
add
outsl
ret
mov
hlt
and
jnp
jmp
push
push
mov
push
add
insb
push
sarl
push
stos
cmpsb
adc
jmp
popa
leave
test
lods
xlat
mov
mov
xor
flds
push
cmp
shlb
mov
push
mov
dec
xorl
xor
mov
mov
scas
jno
mov
in
and
outsl
mov
movsl
insl
addr16
rcr
cld
and
pushf
mov
and
cmpsb
daa
push
ret
imul
add
sbb
rol
mov
call
sbb
es
xor
sti
jg
push
fcmovbe
loopne
cmpsl
push
adc
inc
sub
scas
aas
xor
sbb
pushl
push
push
jno,pn
iret
outsb
mov
jae
jo
adc
add
loope
enter
not
and
daa
jp
pop
cmp
shlb
pop
addr16
mov
sub
or
dec
dec
cmp
sub
xchg
mov
notb
pop
adc
std
nop
cmc
and
push
dec
jo
pop
lods
lods
out
in
in
test
daa
jge
imul
pop
xor
repz
or
inc
sbb
ret
adc
lods
lret
out
adc
mov
fadds
or
ffree
dec
dec
in
adc
push
ljmp
mov
lahf
inc
shll
inc
into
mov
jae
add
xchg
and
inc
hlt
bound
mov
loope
mov
mov
popa
call
mov
sti
jl
xchg
aaa
cmp
movsb
jmp
cmpsb
and
out
add
das
aam
lret
arpl
shlb
sub
inc
jns
lods
pop
aam
adc
cmp
iret
sub
push
jg
popa
fsts
test
push
mov
stc
add
push
push
jb
aam
test
ds
call
mov
or
xchg
out
or
fmul
push
pop
mov
xor
lret
subl
push
sarl
sub
inc
sbb
and
outsl
lcall
int
lods
xor
xor
push
nopl
test
sbb
in
dec
outsl
shl
mov
adc
pop
xor
jp
inc
fisubrs
fiaddl
mov
push
scas
sarb
imul
and
sub
or
jnp
std
adc
icebp
mov
jns
push
sbb
and
and
pop
cmp
leave
scas
push
or
mov
in
pop
add
daa
cmp
inc
jge
xchg
lods
lret
mov
repz
dec
mov
outsb
test
add
pop
or
shl
fcompl
out
data16
add
test
inc
dec
ret
outsb
adc
int
iret
mov
mov
fistps
jae
or
and
or
jnp
out
cs
out
test
sahf
fistps
test
lahf
shrb
movsb
outsl
fiadds
stc
xor
inc
subb
adc
outsb
sahf
sub
inc
and
mov
xchg
aam
aam
inc
clc
fdivrs
scas
and
adc
jg
cli
ds
dec
jne
inc
in
les
sbb
or
or
push
cltd
sbb
loopne
sub
add
pop
mov
inc
mov
cmp
mov
jle
dec
iret
jl
clc
arpl
adc
outsb
add
ret
jns
pop
bound
test
outsl
lods
js
mov
cli
outsl
std
imul
xchg
push
cmp
in
jns
sti
aam
aad
mov
in
fs
loope
sarl
mov
xor
mov
mov
mov
and
in
xor
in
and
dec
and
fnstsw
xor
lea
fs
adc
xor
xor
mov
jecxz
in
xor
mov
mov
fiaddl
nop
mov
dec
push
icebp
test
inc
dec
mov
repz
test
jp
ror
inc
in
into
rolb
sub
lods
or
fcompl
fists
mov
adc
cmp
sub
jl
mov
pop
cmpsl
addl
push
dec
fildl
lds
loope,pn
cltd
xchg
push
fmul
imul
xchg
fdivs
jo
stos
jge
xor
xchg
jecxz
xchg
int
enter
sub
je
ljmp
push
pop
es
fs
cmp
lds
rclb
test
mov
inc
jle
js
xor
ljmp
adc
in
add
mov
shr
loope
stc
aam
enter
fisubl
cmp
mov
mov
and
mov
pop
loope
ljmp
dec
push
movb
shlb
test
fsubs
mov
loopne
push
out
xor
push
cmp
fistpll
xchg
or
jge
jns
fdivs
daa
inc
dec
inc
and
sbb
cmpsb
or
inc
pop
outsl
ljmp
pushf
rol
scas
int3
jge
cmpsl
mov
outsb
jbe
cmc
lcall
rcrl
inc
data16
fsubl
cmove
insb
xchg
cmpsl
xchg
shl
jecxz
aaa
jle
xor
and
push
lods
fldt
or
or
dec
pop
xor
xor
jo
repnz
dec
arpl
xor
inc
and
loopne
sub
adc
cli
mov
je
cmp
xchg
pop
xchg
repz
movsl
aaa
imul
aas
pushf
adc
fadd
aaa
addr16
add
jmp
xlat
pop
push
dec
stos
or
in
mov
pushf
push
or
jnp
pop
sub
and
stos
stos
mov
shll
push
add
ds
push
add
insl
mov
dec
lock
push
xchg
mov
mov
stos
mov
movsl
in
pop
dec
repz
repnz
das
fsubrs
push
jns
mov
dec
or
sbb
sub
faddl
imul
repnz
adc
and
inc
mov
lret
cmc
sbb
daa
xlat
pop
outsl
scas
sub
cld
or
mov
mov
pop
mov
inc
dec
cli
out
cld
and
mov
jecxz
mov
add
loope
cmpsb
mov
int3
xchg
jge
mov
loope
cltd
push
inc
lret
ficoml
leave
sub
je
dec
insl
ljmp
xor
lcall
ja
sarl
sbb
lahf
jmp
lds
int3
push
push
aas
mov
mov
sahf
mov
test
int
pop
mov
xchg
jae
std
cltd
push
test
dec
insl
insb
pop
adc
mov
in
push
push
std
imul
xchg
cmp
shlb
outsl
sub
popf
addb
rclb
push
mov
dec
std
adc
aam
adc
loope
pop
shll
pusha
negl
sub
or
dec
xchg
push
je
push
sbb
sbb
stc
sub
sbb
xor
enter
cmp
xor
and
and
adc
inc
ficoml
std
stc
mov
cmp
iret
inc
xchg
push
mov
adc
stos
xchg
jb
in
das
sub
adc
arpl
outsb
xor
mov
xchg
pusha
fdiv
mov
mov
insb
add
ficomps
pop
and
rcl
hlt
xor
jp
adc
rcll
cmpsl
cmc
mov
dec
mov
add
or
sar
or
push
out
jp
lods
rclb
sahf
push
sahf
mov
mov
jae
in
and
inc
push
lret
not
call
push
scas
mov
int3
or
xor
movups
lahf
add
insl
or
inc
xor
fsubl
out
data16
mov
outsl
push
shlb
cli
pusha
add
out
or
and
pop
mov
leave
and
jno
push
cltd
enter
xchg
adc
mov
push
sub
fld
ljmp
subb
cmp
mov
and
incb
dec
push
in
popf
adcl
gs
mov
sub
inc
test
shrl
fisttps
int3
ds
cmc
jnp
jno
push
negb
and
cmp
inc
es
sarl
add
jl
dec
sub
test
and
out
sbb
cmpsl
outsl
cli
stc
ret
aas
pop
loope
xor
adc
imul
hlt
icebp
popa
mov
lret
add
jl
pop
lods
enter
cwtl
mov
mov
lds
push
push
in
cmpsl
addr16
in
dec
sbb
mov
mov
pop
in
push
xor
fwait
sub
movsb
push
repz
push
mov
cmp
inc
xchg
mov
inc
movsb
leave
pushf
repz
arpl
sti
popa
mov
fisubrl
xchg
mov
fisubl
idiv
mov
adc
lcall
outsb
xchg
scas
mov
popf
mov
repnz
xchg
inc
mov
fisubrl
adc
popa
mov
add
jae
fwait
inc
add
jge
fcomps
fmuls
cli
or
mov
adc
mov
or
lock
mov
aad
stos
js
ror
fsubrs
insb
repnz
pop
xchg
call
xchg
lds
sbb
scas
aam
add
loope
pop
insl
xor
pop
sahf
xor
add
push
or
rcrl
scas
inc
pop
fsubrl
es
loope
push
mov
lods
push
hlt
bound
ja
sbb
pusha
and
subb
fwait
xchg
stos
sti
jp
aad
dec
mov
es
push
or
imul
fdivrl
lea
ljmp
mov
in
mov
pop
mov
and
in
sub
leave
stos
stos
add
bound
loopne
ficomps
xor
add
pop
out
ss
jle
cld
sahf
cmp
pushf
in
push
mov
add
jg
jne
inc
or
mov
movsl
mov
or
cmpb
je
sub
aaa
lods
xor
mov
sbb
aaa
or
cmp
lret
faddp
ja
or
sbb
fnsave
movsl
imul
add
push
push
dec
outsb
call
and
iret
mov
fildll
subb
int3
mov
push
shl
imul
test
xlat
add
pop
dec
outsb
pop
outsl
xchg
push
call
mov
mov
pushf
or
xor
lods
add
stc
add
es
lock
sbb
adc
mov
xlat
and
in
ret
mov
add
xchg
xchg
daa
sbb
pop
jmp
cmp
mov
or
push
mov
lret
mov
pop
or
add
stos
outsb
pop
lcall
dec
hlt
xchg
xchg
xor
xor
or
movsl
es
aam
push
movsl
jg
fcomps
adc
jno
rorb
loope
push
inc
sub
cs
loope
push
or
mov
stc
mov
les
adc
xchg
movsl
cmp
adc
cld
add
out
xchg
xchg
sahf
push
mov
push
sub
push
add
xchg
fimull
cmpsb
mov
stc
out
out
clc
testl
aas
add
push
sub
fisubs
adc
xchg
jno
or
sub
out
sbb
jb
push
mov
aaa
nopl
mov
and
cmp
movsl
addr16
test
lret
mov
mov
and
cmp
stos
mov
fcmovb
daa
aas
cmc
push
and
mov
adc
xchg
cmp
lret
sahf
dec
ljmp
mov
in
pop
lahf
insl
add
xchg
inc
xchg
test
add
shlb
js
fadds
push
sbb
and
syscall
mov
or
fdivr
cmpb
ss
xorb
bound
xor
es
mov
std
or
mov
pop
decb
xchg
and
dec
mov
decb
mov
outsb
xlat
xchg
sub
stc
dec
jbe
nop
rorl
and
xor
cwtl
pushf
xchg
mov
pop
fs
in
mov
cmp
or
inc
push
dec
scas
out
mov
test
repnz
jmp
ror
ljmp
pop
cltd
and
dec
push
repz
jle
or
sbb
mov
dec
movsl
insl
out
jo
pop
and
xchg
mov
pop
pop
cld
jmp
mov
add
xor
smsw
or
rclb
dec
daa
sub
xor
sti
gs
std
dec
and
xchg
mov
jle
inc
xchg
pop
divl
insl
in
stos
aad
pop
xor
or
xchg
mov
cmpsl
cmp
outsb
stc
add
jbe
into
mov
add
iret
dec
sbb
mov
into
inc
fs
rorl
push
fcomps
hlt
inc
es
cmp
mov
lea
stos
clc
push
sub
add
and
push
sub
test
push
clc
and
cmpsl
movsl
daa
das
push
push
or
fstl
popf
mov
sub
xor
out
jne
push
pop
push
dec
push
push
cmpsl
adc
aad
mov
xchg
clc
enter
fisttpll
xchg
or
inc
mov
int
sahf
mov
pushf
or
dec
push
stos
cltd
adc
dec
scas
pop
mov
test
mov
adc
out
xor
hlt
pop
xchg
pop
fcoml
push
scas
sub
lods
fldt
imulb
mov
out
sbb
adc
pop
jns
mov
inc
xchg
pop
inc
push
push
or
cmp
in
iret
pop
adc
mov
jb
mov
and
rcll
mov
ljmp
das
data16
fadds
mov
int3
je
mov
int
add
fstpt
div
mov
xchg
mov
out
in
jmp
or
inc
out
dec
mov
orb
fcmovb
roll
lea
out
xchg
loopne
jl
inc
cmp
ja
shll
lahf
jnp
adc
aam
mov
lcall
sub
outsl
mov
dec
int3
mov
bound
cmp
jo
fimuls
arpl
pop
xchg
jmp
popf
insl
xchg
add
loopne
inc
sbbb
adc
scas
mov
or
daa
shlb
sub
inc
inc
mov
mov
or
xor
mov
pop
xchg
ja
inc
inc
jmp
push
shrb
xchg
push
pop
leave
shrl
mov
jg
sbb
sub
daa
test
gs
push
pop
cmpsb
outsl
dec
mov
call
mov
fadd
test
or
scas
dec
dec
dec
mov
adc
les
mov
push
adc
gs
imul
es
and
in
xchg
adc
jecxz
push
call
incl
add
iret
jno
les
push
repnz
mov
mov
mov
push
lods
cmp
and
or
daa
inc
sahf
mov
loopne
dec
jle
sbb
adc
rorl
lahf
adc
push
mov
xlat
add
iret
jb
dec
push
fwait
lods
push
shrb
insb
add
in
rcr
ret
test
cltd
sbb
lcall
mov
lcall
cmpsl
lock
cmp
mov
cmpsl
testb
ss
movsb
pop
test
sub
mov
fcmove
dec
jmp
or
xchg
popa
js
mov
push
stc
out
dec
adc
in
mov
xchg
lods
xchg
pop
test
repnz
add
or
hlt
add
inc
pop
jmp
cmp
and
and
and
incl
dec
mov
daa
adc
outsb
cs
mov
leave
pop
lret
sti
repnz
addl
mov
loopne
pop
and
loope
out
std
rorl
aam
ret
xlat
mov
sahf
loope
push
maxps
mov
sub
stos
mov
imul
mov
inc
add
sbb
xchg
cld
jp
mov
test
pushf
xchg
ffree
mov
cltd
fwait
pop
faddl
call
sub
mov
inc
add
mov
push
int3
adc
imul
inc
sbb
xchg
rcr
test
mov
jo
push
out
hlt
xor
adc
adc
add
dec
mov
rcll
dec
add
fsubrp
iret
out
pop
add
mov
or
add
pushf
in
jl
and
mov
nop
data16
jmp
aas
imul
push
cwtl
rorb
sub
repnz
mov
test
je
rcl
cmpsl
inc
or
inc
lret
dec
pusha
cmpsb
shrl
push
xchg
ljmp
lds
pop
movsb
sbb
inc
sub
mov
stc
icebp
rol
cmp
mov
lahf
jo
lds
dec
clc
lock
lret
add
cs
fadds
push
push
mov
mov
mov
push
xchg
mov
sbb
pop
popf
push
addl
xor
mov
insb
mov
ljmpw
dec
push
movsb
or
dec
call
adc
fstpt
add
testl
arpl
scas
xor
mov
jb
iret
das
jne
ja
dec
das
pusha
mov
xor
xchg
pop
push
jno
popw
jb
lods
sbb
cltd
mov
cltd
dec
push
or
push
push
mov
mov
sub
add
pop
nop
pop
sti
imul
andb
pop
adc
int3
fs
fsubs
out
fstp
leave
mov
in
pop
daa
fdivl
or
fwait
push
arpl
cld
push
push
pop
jmp
mov
mov
daa
jbe
or
test
pop
adc
gs
in
in
xchg
testl
cmp
xchg
data16
sub
das
push
mov
sbb
jo
cmpsb
jmp
xor
jl
pmulhw
imul
xchg
jbe
xor
sub
or
in
jae
loopne
xchg
cmc
dec
rcll
and
xor
and
test
out
or
pop
pushf
divl
mov
dec
or
fs
loopne
sti
ljmp
inc
push
push
adc
fnstcw
test
fists
inc
or
jo
int3
fucom
pushf
movsb
xchg
inc
push
cmp
xchg
out
aam
or
popa
stc
ss
mov
push
jmp
das
adc
scas
adc
insl
gs
push
test
cld
cmp
rclb
mov
jmp
dec
mov
addr16
xchg
mull
aad
push
cmpb
push
mov
std
pushf
pop
push
call
adc
aad
repnz
jmp
cwtl
add
ljmp
jne
ja
xchg
pop
int3
jne
pop
lds
cwtl
pop
push
jne
dec
aas
jno
push
repnz
mov
outsb
push
jae
arpl
dec
sub
rorl
jl
cmpsl
add
popf
or
jae
popf
js
cmp
and
repz
mov
pop
cld
scas
test
dec
push
inc
ss
cmpsl
fs
stc
dec
pop
repnz
fxtract
shlb
je
and
fimull
mov
push
or
sub
push
and
and
xchg
cmp
xchg
hlt
dec
dec
leave
xchg
mov
stc
mov
out
xchg
mov
iret
jp
pusha
rep
pop
out
outsl
xchg
lods
xor
loop
xchg
mov
sbb
repnz
xchg
mov
inc
pop
subl
mov
add
inc
mov
mov
jnp
sub
rcll
arpl
adc
mov
mov
xchg
pop
fmulp
sbb
icebp
fldcw
add
adc
mov
xchg
dec
dec
cmp
xor
jne
or
pop
inc
shrl
je
dec
fwait
jo
sub
push
or
jns
or
xor
fxch
add
pushl
testl
repz
repnz
xchg
mov
pop
outsl
jns
lcall
pusha
or
imul
shll
mov
and
in
movsb
out
jg
sub
ljmp
mov
pop
lods
jg
sbb
pop
jns
out
pusha
fimuls
mov
cltd
xor
mov
push
arpl
ret
jo
pop
scas
dec
add
and
push
into
bswap
dec
mov
rcl
xchg
sbb
or
bound
jnp
out
ficompl
fdiv
movsl
fwait
sbb
fs
pop
xchg
sbb
arpl
ret
xlat
mov
xchg
jo
pop
fdivrs
aad
fldenv
in
or
test
jp
aad
add
xor
cmpb
jmp
mov
scas
test
and
addl
inc
mov
inc
cmpl
inc
cmp
test
aas
leave
xor
add
cmp
mov
mov
push
aaa
mov
test
inc
xor
scas
jg
xchg
dec
push
sarb
cld
fists
test
dec
jp
pusha
pop
add
ret
sar
lret
jbe
je
xchg
and
ss
clc
les
daa
cmp
enter
int3
sbb
fldl
sub
out
push
shll
orl
test
cmp
mov
subl
pushf
cli
aas
cwtl
aad
push
enter
repz
negl
mov
inc
fwait
sbb
jge
leave
dec
mov
pop
pushf
jg
inc
loop
or
outsb
clc
add
fisubrs
adc
mov
jnp,pn
shl
ds
insl
ljmp
dec
aas
add
fdivs
out
or
jno
push
inc
hlt
adc
stos
fistps
xchg
orb
dec
adc
testb
and
sbb
mov
loope
call
add
xchg
fisubrs
in
test
mov
clc
jg
adc
and
into
js
aam
mov
pop
mov
pop
loope
notl
cs
clc
mov
and
push
xchg
movsb
adc
mull
add
push
push
aam
jmp
mov
cwtl
bound
sub
sbb
mov
cmp
and
fidivrs
pusha
into
fisubrl
movsb
inc
fidivs
sub
adc
addb
mov
push
aam
mov
jle
maskmovq
testl
or
xchg
test
push
addr16
xchg
and
dec
mov
or
push
dec
int3
cmp
into
mov
mov
nop
aaa
sub
push
sub
or
fidivrs
call
mov
jnp,pt
jne
dec
clc
pop
daa
xlat
lods
repz
sbb
mov
jp
sub
and
sbb
xor
dec
nop
push
popa
loopne
lock
loope
sbb
pop
shlb
jp
inc
andps
xchg
adc
mov
data16
popa
xlat
subb
mov
or
addr16
sbb
push
test
mov
cmp
mov
and
mov
cltd
fyl2xp1
stc
mov
push
xchg
inc
loopne
push
jns
iret
cmp
shll
sbb
cli
dec
outsl
push
sub
dec
push
lods
leave
rclb
shrl
mov
lods
mov
fwait
push
xchg
cmc
pop
sbb
or
pop
or
adc
or
jne
sub
or
hlt
inc
xor
jb
push
mov
mov
adc
test
xchg
fdivrs
jp
js
xlat
addr16
pop
aad
lds
mov
adc
int3
push
jo
call
jne
dec
cmp
xchg
stos
lahf
mov
repnz
test
xor
mov
cmp
outsb
mov
xor
xchg
or
jg
xchg
shll
clc
mov
push
sub
dec
addr16
push
or
pop
test
pusha
jmp
inc
pop
sbb
sub
fwait
lds
xor
popa
test
flds
jnp
sti
pop
mov
lock
xchg
and
mov
shll
mov
lahf
jle
pushl
divl
clc
das
rolb
cmpsb
pop
cltd
xor
imul
or
jecxz
pop
pusha
dec
cli
xchg
xchg
mov
sub
pop
cmp
test
mov
data16
rcll
sbb
gs
ss
push
push
cmp
add
pushf
lcall
mov
cmp
pop
dec
push
xlat
adc
divl
pushf
mov
arpl
dec
or
sub
inc
dec
faddl
sbb
mov
cmc
or
cmpsb
xor
rclb
in
xchg
xchg
push
test
out
sbb
inc
pop
inc
inc
jmp
shlb
shrb
dec
jle
stos
es
sub
jo
cmp
mov
xchg
js
mov
pop
dec
gs
rolb
movsb
xor
rol
or
jge
mov
cltd
pop
lea
mov
push
jnp
test
mov
lds
bswap
into
cmp
dec
hlt
rsqrtps
mov
test
insb
popf
mov
mov
xchg
cld
and
jns
sbb
icebp
mov
pop
loop
addb
xlat
sub
shl
lock
xor
or
cmp
adc
adc
fdivrl
push
imul
or
mov
mov
dec
cmp
shr
addl
stos
jb
push
aam
sbbl
lret
popf
fisubrl
inc
cmp
cmpsb
jne
test
xchg
aaa
jmp
cmp
mov
lods
pop
rcr
adc
enter
fsubs
fistpl
jge
je
fwait
test
stc
add
cltd
in
add
icebp
or
stos
mov
push
fists
adc
hlt
idivl
outsl
push
cs
mov
mov
scas
mov
and
sub
jg
push
pop
sbbl
ds
jnp
mov
mulb
insl
sub
icebp
mov
mov
mov
dec
cmpsl
mov
cltd
enter
sti
xor
and
cmp
fnstenv
loope
call
fistpll
std
fisttpll
scas
insb
mov
insb
divb
ja
jbe
sar
pop
fidivl
iret
xchg
ret
ljmp
inc
sub
inc
scas
jle
fwait
xchg
notb
and
jo
fdivrl
aam
cmpb
daa
xchg
in
jmp
push
jne
out
je
add
xchg
xchg
insl
dec
je
cltd
fldenv
xor
ret
popa
movsb
inc
jmp
cld
loop
and
test
xchg
daa
xchg
adc
cmp
push
aam
mov
mov
call
or
or
decb
or
fadd
inc
and
pop
out
sarl
cmp
push
repnz
sbb
or
aaa
enter
jg
xchg
stos
jg
ljmp
out
iret
or
jno
je
push
out
dec
loopne
daa
mov
loop
into
xor
and
mov
pop
ret
shl
imul
stos
sahf
outsb
mov
jbe
je
cli
mov
ss
aaa
sarb
jle
mov
or
repnz
or
sub
add
loop
add
stos
sub
fcmovnbe
adcb
enter
clc
imul
jo
orb
push
std
lahf
adc
inc
sub
adc
clc
lret
ret
jne
stc
jmp
mov
in
jb
stos
sub
push
push
mov
lods
repz
pop
outsl
push
inc
stos
notb
test
nop
adc
inc
imul
xor
rorb
or
sbb
iret
imul
or
xor
outsl
mov
cmp
mov
adc
fldcw
test
imul
jb
pushf
popa
aas
rorb
dec
popf
jno
insb
gs
fsts
mov
add
addr16
lock
divb
andb
inc
inc
icebp
cmp
je
mov
pop
inc
aam
aas
pop
into
jge
inc
dec
dec
jns
adc
iret
xchg
push
mov
ss
lret
pop
loope
imul
movsb
mov
xchg
psrad
fcoml
sub
push
cmp
xor
dec
xchg
clc
rorb
scas
adc
adc
push
ss
add
pop
arpl
mov
push
cwtl
sarb
pop
daa
ljmp
js
adc
arpl
jb
and
pop
shlb
xchg
stos
adc
lock
adc
sbb
loope
jle
test
adc
sub
or
hlt
cwtl
arpl
lds
test
xor
scas
icebp
lods
in
enter
inc
sub
add
dec
mov
adc
clc
push
cmp
mov
ror
push
sub
stos
dec
movsl
xor
iret
lods
lods
in
sbb
outsl
inc
jbe
iret
call
xchg
mov
in
mov
aaa
lds
sub
pop
scas
aaa
ss
lret
daa
sbb
cs
mov
mov
sbb
push
rclb
add
cld
mov
sbb
std
test
xlat
pusha
mov
mov
push
fistpll
out
sub
or
mov
clc
inc
cmp
dec
sbb
test
lock
mov
push
int
adc
jbe
shl
cmc
dec
mov
rcl
push
data16
dec
or
or
scas
cmc
jno
mov
jg
rcrl
test
fiadds
movsb
fldcw
sbb
fildl
lods
cltd
mov
jbe
xor
arpl
pop
repnz
push
stos
gs
xchg
or
xor
pop
add
addps
hlt
mov
add
sti
rcr
out
or
add
add
movsl
test
xchg
sahf
mov
sbb
xchg
cmpb
sub
pusha
cli
add
pop
rcrl
mov
mov
push
loopne
stc
ljmp
test
pusha
push
jl
roll
jecxz
xchg
push
das
loope
or
adc
dec
call
dec
test
in
in
loopne
push
das
xchg
loope
nop
ja
in
sbb
mov
and
into
mov
sub
mov
or
aas
push
ja
aam
mov
or
mov
test
inc
mov
lahf
insl
mov
and
out
cmc
adc
insb
inc
mov
stos
aad
popf
push
xlat
pop
dec
repz
aas
push
aam
int
arpl
xor
sub
xor
hlt
sub
mov
cmc
xchg
dec
sbb
and
rorb
popa
outsl
andb
out
inc
cmp
in
repz
or
aam
xor
jb
mov
mov
sub
xchg
push
jb
andl
push
sbb
mov
daa
icebp
nop
sbb
mov
aas
lret
out
jns
cmc
jle
orl
pop
adc
ljmp
mov
in
or
inc
and
out
mov
loopne
inc
imul
pop
arpl
push
push
dec
movsb
dec
mov
xlat
sahf
or
rorb
or
jbe
shrl
mov
inc
insl
in
jb
adc
scas
mov
adc
xchg
and
cmp
jg
pop
push
cmp
jnp
sbb
test
les
mov
xchg
int
cmp
mov
mov
cmp
cmp
sub
out
lret
dec
jl
xor
aaa
and
out
sub
imul
mov
int
ja
sti
dec
in
xor
je
rcrb
or
pop
in
mov
and
insl
fs
arpl
scas
inc
cmp
xchg
fs
adc
xchg
ss
dec
das
adc
test
push
test
mov
pusha
dec
mov
mov
and
aad
push
mov
shrb
adc
dec
mov
jae
ror
xchg
push
sub
xchg
push
je
repnz
test
faddl
sahf
int
push
lods
sar
xor
fdivrl
dec
arpl
jbe
test
and
xor
fimuls
jae
cltd
les
inc
mov
sti
lods
mov
xlat
lods
in
clc
or
mov
ss
aaa
inc
xor
fs
fbstp
sub
push
cmpsl
cmc
test
push
adc
xchg
sbb
xchg
sbb
cli
fmuls
xor
stc
hlt
xor
inc
xchg
pop
and
mov
out
dec
fwait
push
repnz
jmp
popf
mov
mov
mov
jnp
xchg
outsb
loop
inc
orb
dec
mov
sti
daa
mov
shlb
fcomps
jns
sub
mov
cmp
fs
out
mov
sbb
rdpmc
xor
lea
outsl
mov
into
cwtl
mov
leave
xchg
dec
insl
in
and
popa
pop
xchg
sub
ss
add
add
bound
ja
hlt
pushf
adc
aam
or
push
xor
mov
inc
lods
pop
mov
mov
fs
aam
pop
roll
jl
aad
into
scas
int3
icebp
dec
cmp
pop
push
sti
ret
stc
nop
stc
pop
lcall
rcl
push
sbb
push
xchg
pop
xor
out
add
ds
push
inc
subb
icebp
jmp
sbb
lods
xor
pop
push
add
mov
in
inc
popa
add
jmp
push
scas
pop
out
enter
dec
ret
xor
fildll
xchg
jno
leave
mov
aas
dec
pop
repnz
lcall
mov
cltd
xchg
adc
dec
lcall
mov
sti
lcall
dec
rolb
mov
jmp
movsb
dec
sarb
xchg
sub
idivb
inc
cmp
cmp
mov
and
ficoms
pop
pop
fadd
imul
sub
add
in
scas
out
ds
or
cmp
adc
push
push
adc
dec
sbb
negl
push
popf
jge
push
push
fisttpl
cmp
insb
ja
mov
decl
loop
idivl
mov
lret
jbe
sbb
add
idivb
cltd
sbb
sub
les
jl
sbb
xlat
lods
iret
sub
mov
loop
test
aas
lahf
int
fwait
adc
add
hlt
mov
xchg
mov
fstl
mov
bound
inc
push
lret
in
mov
iret
das
add
mov
push
cld
jo
js
push
sub
or
sbb
dec
hlt
movsb
pop
sbb
lahf
lcall
fcompl
movsb
mov
mov
ficomps
cmp
mov
add
mov
lods
add
icebp
push
nop
dec
sar
outsb
push
and
xchg
mov
or
jns
pop
cmp
or
xchg
jge
sbb
inc
cmp
xor
loopne
fdiv
xchg
out
mov
sar
mov
jecxz
xor
dec
movsl
loop
popa
in
loopne
lret
dec
not
add
jo
imul
lock
bound
dec
ret
pcmpeqw
test
mov
dec
int3
iret
and
ret
ljmp
out
adc
push
daa
jbe
arpl
mov
adc
and
cmp
mov
out
add
jmp
loopne
in
rclb
daa
bound
add
add
inc
ds
pop
or
mov
sbb
and
outsb
mov
mov
cmpsl
cmp
sbb
or
cmp
pop
cltd
and
in
sub
icebp
cs
pop
or
lret
mov
xchg
xchg
ret
mov
jge
mov
mov
jb
je
bound
inc
das
mov
mov
test
cmp
jle
repz
add
insl
inc
add
adc
pop
jne
out
in
sahf
sub
in
jmp
inc
xchg
mov
jb
xor
in
sub
filds
add
and
add
mov
pop
inc
jo
inc
bound
push
movsl
push
sahf
jae
cs
jb
jne
lock
daa
mov
ficomps
shll
das
aam
and
mov
movsb
ds
fs
loope
das
xchg
std
ljmp
loop
dec
nop
out
pop
subb
sub
inc
shlb
lods
cmp
das
leave
clc
mov
cmp
loope
mov
jmp
ja
cs
cmc
sub
add
popf
inc
movsb
popf
xchg
test
nop
scas
fwait
stos
push
or
jns
dec
sub
loopne
popa
lods
mov
cltd
pop
adc
lods
decb
les
mov
cmp
or
bound
dec
jp
out
fwait
daa
fdivl
lods
lcall
push
jb
and
fidivrl
adc
mov
pushf
cmpsb
jl
js
add
aad
pop
scas
dec
add
addr16
test
pop
aad
cmpsl
inc
xchg
jne
aas
in
sub
and
roll
fidivl
pop
xchg
pop
pop
icebp
and
or
sbb
repnz
inc
es
lock
divb
bound
inc
push
lea
insl
and
cli
xor
cmp
repz
or
xchg
je
pop
and
loopne
sbb
pop
sbb
pop
push
dec
dec
cmpsl
cmpsl
lds
cmpsb
lcall
mov
mov
aad
cmp
adc
stos
dec
scas
dec
rolb
jbe
mov
mov
in
loop
push
fldl
or
js
data16
mov
jmp
jecxz
cmc
cltd
jne
sbb
push
sbb
rorb
add
dec
movsl
or
les
adc
popf
jnp
jmp
jecxz
jae
es
jae
sbb
idiv
cltd
lea
scas
sbb
mov
cmp
fldcw
mov
aaa
jmp
push
cmp
out
iret
ds
mov
ret
rclb
or
pushf
in
jnp
orb
jb
pop
mov
inc
dec
adc
push
les
shl
mov
cmp
in
cmp
cmp
shl
mov
call
into
loop
fdivrp
dec
push
ljmp
xor
add
adc
outsl
leave
push
push
mov
mov
pushf
mov
mov
jg
lcall
pop
inc
jbe
or
std
cmp
push
loope
pop
int3
cmp
xlat
rcl
out
mov
add
push
loop
pushf
jle
es
and
add
ja
add
loopne
mov
xchg
mov
mov
stos
pop
inc
mov
lret
les
out
iret
adc
sbb
mov
sub
inc
pop
jbe
int
ret
push
push
pop
push
mov
lahf
mov
popf
push
outsb
xchg
cmp
push
fisubl
lock
jbe
mov
pop
aad
jne
push
cmp
dec
fmulp
dec
adc
not
stc
arpl
or
xchg
xor
ret
in
dec
aaa
jmp
repnz
add
xlat
out
push
cmp
shr
and
add
sarl
fstps
sub
sub
push
cmp
xor
cltd
xchg
js
xor
sbb
mov
cld
cs
fbstp
movsb
inc
scas
mov
int
jae
add
cmp
xor
sbb
inc
mov
icebp
stos
ja
mov
leave
mov
clc
lcall
mov
or
adc
mov
in
pop
xchg
cmpl
frstor
push
push
loopne
sbb
pop
cmp
mov
lds
lds
mov
and
and
xchg
and
jb
test
subl
loopne
mov
cmpsb
cld
fldcw
stos
sbb
adc
and
daa
mov
sar
clc
pop
xchg
insb
pusha
push
sahf
cs
pop
js
cmpsb
ds
out
es
in
rcrl
mov
pop
shrl
pop
mov
mov
ljmp
adc
pop
ficomps
add
fwait
dec
bnd
sbb
xchg
xor
das
bnd
jae
hlt
pop
repz
test
sub
xchg
xchg
xchg
push
mov
jp
pop
sub
mov
inc
push
mov
jmp
pop
sub
ret
out
shrl
cld
pop
scas
andb
outsb
cmp
inc
aad
push
jecxz
loopne
push
lcall
inc
fwait
lods
and
jns
adc
mov
add
pfcmpgt
insb
loop
je
pop
add
xchg
xor
fdivl
dec
aaa
mov
fdivrl
cwtl
jg
dec
cs
add
iret
int
mov
std
mov
push
mov
cmpsw
mov
outsb
movsb
xlat
dec
cmpsl
mov
add
mov
ja
dec
ret
xchg
into
pop
aas
mov
sub
les
sti
cld
in
insb
fucomp
test
testl
add
add
int3
adc
xchg
scas
mov
mov
lret
mov
add
mov
js
imul
std
mov
mov
pop
cmpsl
push
mov
jbe
mov
push
cmc
mov
imul
mov
cli
insl
push
jmp
popf
ror
je
add
xor
into
mov
sbb
xchg
pop
lods
add
sbb
gs
imul
and
add
std
ficomps
rcl
adc
mov
push
push
sub
btr
adc
mov
dec
lret
cmp
cmpsl
or
sbb
adcl
jae
jmp
shrl
ficompl
adc
or
xchg
push
ja
xchg
fnstenv
and
jg
std
pop
aaa
mov
push
cmp
mov
mov
sarb
push
sbb
sbb
movl
pusha
fwait
shll
cltd
and
xlat
in
loope
mov
sub
add
out
outsb
push
adc
mov
gs
rcrb
sbb
push
xchg
jg
lock
mov
out
push
push
xor
lret
jge
cwtl
mov
clc
xor
inc
cmp
mov
out
inc
addr16
xchg
cmpsl
out
push
test
data16
gs
cwtl
clc
sbb
jp
mov
aam
adc
mov
out
fsubrs
cmp
mov
pushf
movsb
mov
out
and
cmp
pop
add
jecxz
xlat
je
mov
fldcw
inc
pop
loopne
hlt
xlat
icebp
push
adc
mov
mov
data16
mov
or
daa
frstor
rol
cmp
pusha
jp
pusha
dec
dec
cmpsl
es
sbbb
insl
fisubrl
dec
incb
cmp
int
jbe
pop
lock
test
xor
in
add
xlat
movsl
loopne
sti
mov
rcll
or
frstor
pop
mov
cli
test
sbb
mov
shll
mov
cld
jns
xor
pop
pop
add
mov
fnstenv
rol
dec
jg
ret
stos
shrb
or
push
pop
add
dec
dec
jbe
xchg
movsb
jp
ret
lahf
inc
ret
loopne
in
inc
add
xchg
clc
hlt
jl
sub
adc
xchg
test
cltd
mov
lods
push
pusha
adc
addr16
fsubrs
xchg
dec
shlb
or
xchg
das
in
insb
pop
and
sub
shll
or
and
loop
sti
aad
sbb
cmpsb
aaa
jp
lret
cmp
in
lcall
out
xchg
rcrb
sbb
ss
xor
cli
mov
sub
push
and
pusha
sub
pop
repz
lea
pop
dec
pop
pop
add
pop
int
mov
mov
stc
cmpsb
or
sbb
and
enter
adc
pusha
or
andl
mov
aaa
pop
aam
pop
loopne
push
mov
add
and
pop
or
push
sbb
out
outsl
push
mov
mov
mov
cmpb
in
xor
pusha
imul
adc
pop
fdivp
cltd
mov
icebp
push
das
cli
fldt
mov
clc
sbb
aas
movsb
sar
adc
loopne
test
adc
fnsave
int3
cmc
nop
mov
outsl
std
cwtl
push
pop
mov
imul
jne
cmpsl
mov
xchg
adc
bound
inc
sub
outsl
xor
adc
mov
add
jge
xor
dec
in
or
ret
cli
sbb
dec
or
xor
cmpsl
sbb
cmp
push
shlb
loop
push
and
out
or
xlat
pop
mov
dec
sbb
mov
pusha
lods
jle
lret
out
pop
and
aam
ds
sub
sub
jb
pop
xor
inc
into
mov
sub
jno
aam
repnz
adc
push
sbb
daa
push
ja
mov
fsubs
or
lock
push
sbbl
je
xchg
pop
xor
pusha
xor
mov
fisttpl
jb
xchg
sarl
pop
aaa
add
lods
sahf
xor
enter
testl
pop
int3
inc
jae
xchg
cmp
push
ret
cmpsl
arpl
rolb
push
fistpl
and
sbb
test
cmp
sbb
push
cvtps2pi
jbe
loopne
push
lret
rcrl
xor
xor
adc
add
mov
cmovne
cmc
inc
push
insb
jb
dec
jne
xor
xor
jns
cmpsb
adc
test
dec
aam
jno
cmpl
addr16
jno
das
or
or
out
xchg
xor
xchg
sbb
mov
xchg
iret
and
sub
nop
dec
enter
sub
inc
imul
imul
das
cltd
addb
pop
mov
sbb
lds
inc
sub
out
int3
ret
xor
or
mov
iret
mov
xchg
arpl
mov
jecxz
inc
das
shr
pop
clc
stos
jno
dec
lock
lock
push
sbb
clc
push
mov
movsl
mov
getsec
xchg
sbbb
mov
cmpsl
xchg
push
cmp
ss
push
ror
aaa
fisttps
xor
lahf
rolb
test
cmp
cmpsl
dec
repz
int3
fs
push
rcrb
pusha
aas
push
jbe
cmc
cmp
adc
pushf
out
cwtl
push
cmp
or
cwtl
xor
push
and
stos
enter
sub
stc
dec
repnz
pop
faddl
jno
xor
inc
dec
or
mov
inc
out
loop
or
push
fs
cmp
add
mov
push
mov
ljmp
in
sbb
cltd
repz
jno
cltd
jle
xchg
xchg
jle
dec
mov
xchg
in
mov
out
mov
imul
inc
lcall
ds
sarb
test
jb
pop
xchg
in
cmp
dec
adc
fnstsw
lahf
je
pusha
js
aam
fldpi
or
inc
lock
jnp
fistps
das
mov
dec
adc
call
or
ret
or
and
ja
pushf
repz
sub
mov
and
adc
sarb
pop
mov
mov
scas
mov
and
xchg
in
lahf
mov
rcr
and
stos
inc
adc
mov
shr
out
and
jp
mov
dec
jne
pop
in
mov
or
jge
in
out
sub
cmpsb
pop
xchg
adc
push
mov
jp
mov
dec
and
mov
push
mov
mov
mov
nop
je
mov
daa
cmpsl
mov
mov
sti
cmp
stos
mov
mov
out
sub
aaa
add
jg
cmc
mov
test
stos
add
movsl
ret
xor
sub
ds
mov
or
mov
mov
cmp
out
ret
or
mov
les
aad
adc
sub
pop
enter
ficompl
push
aam
lock
and
add
inc
xor
cmp
xor
mov
or
push
out
xchg
dec
xchg
push
sbb
and
imul
into
xor
mov
lcall
in
mov
stos
mov
ljmp
insl
roll
cmp
dec
dec
xchg
mov
xchg
enter
jno
adc
sub
repz
add
ss
ljmp
pop
insl
mov
dec
je
test
ss
stc
mov
xchg
fwait
adc
test
sbb
xor
repz
stos
xor
call
mov
loope
test
and
xchg
icebp
xchg
enter
pop
and
repnz
inc
push
xlat
hlt
or
mov
sbb
dec
cltd
je
xlat
xchg
mov
push
loope
repz
sbb
pop
imul
ficoms
or
pop
mov
aaa
pop
movsl
loop
jae
push
add
cmp
inc
sbb
js
mov
mov
mov
shlb
ljmp
divl
shl
mov
test
push
gs
roll
add
lret
adc
jno
arpl
and
loopne
movb
in
add
mov
jbe
out
addr16
daa
or
pushf
and
cli
jb
add
out
sbb
sbb
xchg
ret
mov
inc
and
mov
es
push
adcb
cld
jge
es
ret
jecxz
insb
cli
cmp
mov
int
clc
aam
into
mov
jmp
in
test
pop
jns
xor
add
inc
cltd
mov
call
sbb
repz
push
pop
xchg
stos
gs
shlb
mov
rcll
add
leave
mov
popa
nop
pop
fs
dec
andl
sub
inc
mov
ljmp
sar
shlb
and
lret
mov
rol
pop
sbb
aam
lcall
popa
mov
mov
insb
fcomp
rclb
sbb
xor
xchg
mov
insb
aaa
loop
mov
sub
fadds
stos
sbb
daa
test
jnp
pop
in
mov
rcrl
jg
cltd
push
loop
xlat
mov
fistl
mov
sti
jb
stc
nop
sti
mov
add
push
movsl
xchg
cmpsl
subb
aaa
sbb
and
mov
jns
pop
ret
jb
mov
xor
xor
or
dec
xchg
pop
addr16
xor
enter
push
rcrb
sub
repnz
xchg
stos
call
mov
ss
pop
adc
jne
inc
sbb
addb
or
stc
mov
jle
sarl
loop
add
loopne
mov
icebp
sub
out
push
fsts
dec
je
pop
inc
jl
mov
stos
push
movsb
add
outsb
ret
add
dec
mov
bound
aaa
leave
icebp
vpunpcklqdq
mov
jp
sti
test
mov
aam
std
push
push
cmp
subb
adc
in
xor
xchg
cltd
xchg
test
fld1
jge
and
sbb
jae
jae
les
pop
stos
out
test
es
iret
js
push
aaa
daa
stos
sbb
mov
xchg
sti
shrb
or
mov
jb
ds
stos
out
es
mov
add
loope
dec
out
xorl
xlat
ficompl
push
sbb
arpl
imul
test
xchg
jle
loopne
out
jmp
xchg
in
cs
dec
add
jp
ret
popf
lods
and
in
in
js
andl
popa
movsb
inc
fdivl
jbe
scas
dec
call
and
cld
lahf
lcall
and
xor
inc
jae
xor
mov
mov
sbb
pusha
sbb
push
adc
cs
mov
iret
mov
repnz
out
mov
mov
sahf
dec
xor
sub
je
add
xchg
push
dec
stos
int3
dec
sbb
push
in
popa
out
popf
pop
insl
cmp
sbb
inc
sahf
adc
test
sub
cmc
out
stc
mov
dec
jl
leave
or
add
inc
push
repnz
adc
mov
inc
dec
jns
dec
mov
mov
loop
and
scas
lcall
push
inc
out
scas
fdivl
dec
jae
jbe
add
loop
cld
je
cmp
or
sub
and
pop
test
push
pop
cmp
fisubrl
dec
clc
push
sbb
arpl
jae
jno
inc
nop
mov
pop
pop
insl
push
rcrl
jecxz
cld
out
sub
push
insb
fidivrl
xchg
push
insl
aad
sbb
cmp
and
fcoms
ss
push
sbb
arpl
les
cmpsl
dec
jae
xor
mov
in
or
je
imul
sbb
adc
fidivs
pushf
pop
adc
fs
or
dec
cld
jbe
dec
mov
scas
sbb
mov
pusha
xlat
xor
dec
aas
andb
and
test
inc
mov
cli
ss
push
pop
loopne
mov
imul
dec
aad
pop
or
stc
cmp
push
insb
mov
pop
sub
xchg
jns
pop
pop
mov
mov
cmp
fs
mov
sub
stc
push
dec
mov
enter
pop
int
and
out
in
popa
jo
filds
sbb
pop
stc
out
imul
ret
push
decl
and
add
xor
xchg
call
cmp
fs
jb
call
push
dec
push
outsl
sub
push
lock
insb
cwtl
in
jl
or
adc
sub
test
jmp
lds
int3
add
or
sub
cltd
and
roll
sub
dec
sahf
xchg
inc
loopne
add
mov
cmc
inc
jl
insl
pop
lods
dec
push
mov
popf
pop
test
lock
xchg
push
inc
sahf
lods
and
outsl
push
xor
add
pop
fldt
mov
jmp
inc
jecxz
xchg
mov
xor
jns
cmp
push
ja
stos
mov
mov
pop
out
jnp
les
push
in
mov
add
add
sub
and
xchg
testb
repnz
outsl
es
inc
xchg
or
xchg
call
mov
mov
add
out
adc
xor
bound
xchg
in
or
jne
xchg
add
xor
mov
das
mov
and
sar
outsb
dec
dec
xchg
cmp
fiadds
jnp
mov
les
in
cmpl
daa
pusha
imul
daa
push
scas
popa
cmp
cmp
jmp
les
mov
addr16
xlat
dec
sub
test
jl
mov
mov
fldcw
sbb
adc
pop
jo
jae
cmp
inc
in
sub
int
les
mov
pop
sub
lret
scas
and
movsb
xchg
pushf
add
push
pop
pop
movsl
into
ds
lret
or
iret
add
pop
mov
mov
xchg
sbb
daa
or
fnstcw
pusha
jmp
adc
fwait
xor
sub
and
mov
mov
ljmp
adc
sbb
pop
push
fadd
add
and
stos
pop
mov
fiadds
mov
mov
out
aam
aaa
push
aaa
insl
jp
jb
dec
cmp
push
popf
insl
push
dec
pushf
sbb
mov
loopne
xchg
lock
xchg
or
mov
jecxz
in
and
jg
lds
lock
divl
jmp
and
cmpsl
stos
mov
pop
inc
cmp
fwait
sub
cmp
mov
add
sbb
mov
pop
sbb
xor
pop
sti
out
adc
scas
cmp
test
lcall
mov
in
or
sbb
mov
xchg
cmp
mulb
pop
dec
lea
loopne
popf
sti
out
fcmovb
ja
pop
pop
jg
push
jne
cmp
jmp
jae
jmp
test
aas
push
ds
stc
pop
into
movsl
inc
inc
fcomp
aam
push
cwtl
sub
sub
dec
xchg
sbb
inc
xor
adc
bound
mov
jecxz
das
jp
cmp
adc
inc
aaa
push
int
in
xor
xor
push
xchg
mov
push
mov
call
aaa
rcl
push
adc
ret
sbb
xlat
cmpsl
push
mov
pop
scas
pop
push
int
aam
cmc
add
inc
and
jno
out
mov
lahf
and
push
popf
or
shrb
cmpsl
test
cli
and
aam
idivb
fmull
and
lcall
leave
ret
jns
and
call
bnd
jo
add
lods
mov
fs
es
imul
mov
sub
dec
dec
pop
lea
movsl
addl
dec
in
cwtl
fmuls
out
jnp
popa
lock
or
mov
inc
ret
andl
sub
push
cld
sub
shlb
jns
mov
mov
test
sub
adc
sub
into
addr16
xlat
jg
aam
mov
pop
inc
add
inc
push
insl
shl
inc
push
jnp
adc
pop
jb
mov
mov
mov
push
jne
cmpsl
lock
push
jecxz
jge
push
popf
enter
outsl
movsl
je
inc
es
cmp
or
lods
call
ja
enter
ret
pop
push
mov
outsb
cmp
bound
int3
leave
pusha
es
or
cmpsl
leave
mov
ficompl
mov
jb
sti
lcall
mov
or
inc
jecxz
jb
xchg
cmp
xor
sub
inc
fistps
push
hlt
pop
push
sub
push
pop
xor
hlt
sbb
sbb
push
dec
ficoml
fwait
dec
rclb
leave
outsb
mov
or
lods
cmp
mov
mov
dec
dec
into
adc
xor
push
in
push
outsl
mov
nop
out
pop
mov
ss
cmp
add
sub
insl
cmp
or
sbb
push
lea
loop
and
pushf
int
adc
shl
mov
cmp
fnstenv
sub
mov
mov
sub
adc
sub
jbe
cs
push
out
outsb
mov
imul
sahf
jno
in
xor
pop
lcall
pop
cmc
loop
aam
lods
add
sub
and
popf
ja
add
push
loop
mov
stos
loop
xchg
repnz
lods
insl
dec
sbb
mov
pop
jl
pop
sub
mov
sahf
fimuls
sbb
jbe
mov
iret
dec
fisttps
mov
sub
sbb
test
movsb
cli
shll
fildll
push
mov
sub
xchg
popa
aad
jb
pop
mov
std
daa
test
test
add
inc
push
inc
add
mov
dec
insl
call
mov
rcrl
sub
aam
push
hlt
shlb
scas
rcrb
daa
insb
arpl
rcrb
mov
dec
aam
push
popa
mov
mov
rolb
jg
inc
or
mov
sbb
div
std
sub
add
mov
jmp
fisttpl
imul
cmp
idivl
push
fs
enter
push
in
xchg
sub
mov
adc
cmpsb
dec
aas
repnz
mov
mov
loopne
je
and
lds
push
xor
pop
add
cmp
test
mov
lcall
loope
push
sub
adc
or
stos
pop
ljmp
mov
nop
mov
loope
mov
add
fwait
mov
mov
and
pop
pop
andb
adc
call
cmp
sbb
mov
adc
xor
test
iret
lahf
mov
push
push
enter
mov
inc
cmpb
cmp
jg
fstps
mov
std
adc
mov
insl
lret
cmp
popf
test
fstl
xchg
fwait
jecxz
fs
rclb
cltd
ds
mov
dec
aas
nop
xchg
sub
daa
pop
xchg
mov
sbb
sbbb
rclb
outsl
xchg
mulb
mulb
jl
mov
and
scas
jmp
repz
jbe
popa
lock
xchg
push
out
popa
popf
and
sbb
push
outsl
fidivs
xchg
leave
push
jbe
dec
jnp
cmp
aas
jle
dec
jne
ds
out
jno
out
es
jmp
pop
jbe
daa
fsubr
std
popf
push
mov
mov
mov
fadd
and
mov
or
jno
dec
insb
gs
inc
inc
or
pusha
or
mov
mov
imul
push
xlat
add
jp
xchg
push
dec
pop
add
addr16
pop
push
push
fcompl
icebp
ds
jo
or
scas
sub
ret
lods
decb
fldcw
sub
movsb
fisttps
call
out
sub
sub
adc
xor
sbb
cmp
pop
jge
and
dec
lret
enter
xor
mov
pop
cmp
movsl
and
jo
mov
and
sbb
mov
test
and
test
sti
lret
push
inc
jg
mov
imul
adc
ljmp
push
inc
lcall
xchg
fldl
dec
sub
jae
std
push
cwtl
fs
ljmp
sbb
les
stos
pop
enter
in
mov
mov
fs
lcall
ret
addr16
jp
ljmp
inc
and
arpl
push
int3
and
repz
mov
push
sbb
and
mov
mov
imul
sbb
loop
fidivs
stos
add
imul
jg
or
jg
enter
or
jecxz
int
jne
pop
orb
lret
enter
xchg
outsl
ss
mov
das
int
clc
divb
lcall
pop
aaa
xchg
int
movsb
fstpt
cmpsb
mul
xlat
nop
xchg
push
adc
adc
dec
lret
lds
jmp
mov
cmpsl
lea
out
sbb
dec
dec
out
mov
push
fmull
xchg
aas
movsl
jb
test
mov
cmpsl
in
ss
ret
and
sahf
cmc
adc
cli
cmp
and
inc
cmp
jae
sbb
fidivs
mov
sub
into
mov
sbb
jmp
fmull
dec
shlb
sti
in
cmc
mov
in
push
cmc
pushf
pop
lcall
cmc
decl
pop
xchg
pop
mov
js
jbe
leave
popa
jge
or
test
add
orb
and
out
xorb
sub
cli
addb
xor
pushf
std
push
arpl
dec
das
push
int3
sub
jno
push
pop
orb
gs
fnstsw
lcall
mov
or
mov
xor
pop
mov
mov
fucomip
and
jnp
sbb
lock
mov
loope
outsb
jnp
add
mov
mov
jmp
or
pop
shlb
xchg
and
sbb
xor
imul
dec
cli
xorb
inc
rclb
pop
enter
testb
cmp
lahf
adc
aam
mov
popf
insb
movsl
and
shrl
das
push
dec
push
mov
sub
or
mov
shll
jae
ja
fmul
and
cli
lahf
aam
mov
xchg
and
sti
fstpl
push
shl
mov
popa
mov
dec
lret
out
push
data16
mov
push
lcall
push
sbb
cmpl
aam
adc
push
dec
pusha
shlb
cmp
or
jecxz
hlt
xchg
outsl
mov
dec
dec
or
add
and
push
adc
loop
xchg
push
popa
sbb
cmp
lds
inc
push
mov
sbb
pusha
push
test
call
in
lcall
iret
movsl
imul
push
add
cwtl
in
lods
push
xor
mov
shll
rcrb
out
nop
and
push
pop
adc
loop
inc
out
mov
notrack
inc
cmpsb
pop
mov
adc
aaa
and
test
js
xor
lods
push
shr
aas
mov
adc
out
mov
and
inc
sub
push
fninit
sbb
fs
jne
cmp
ljmp
or
pop
arpl
adc
mov
icebp
add
adc
pop
xchg
jmp
mov
lods
cld
mov
test
add
cmp
push
in
xchg
inc
adc
cmp
ljmp
scas
push
out
fdiv
push
xchg
loope
sbb
fadd
mov
or
pop
add
ja
iret
sub
mov
pop
sub
cmp
sub
adc
out
ret
push
je
cmp
push
lret
icebp
hlt
jbe
inc
dec
pop
std
mov
adc
loop
push
push
pop
loop
or
out
daa
pop
xchg
jle
mov
inc
hlt
or
mov
sbb
push
xchg
and
dec
mov
mov
gs
test
movsb
ret
mull
add
sub
inc
mov
iret
add
xor
cwtl
adc
and
icebp
rclb
nop
or
movsl
ret
andb
ds
jge
cmpsl
scas
pop
jle
pop
xor
out
or
sti
enter
ds
xchg
inc
jb
xchg
rcrb
cld
call
push
addr16
and
imul
and
xor
adcb
dec
loope
out
dec
rol
xlat
loop
pop
dec
adc
js
mov
xchg
add
push
out
test
xor
jnp
adc
add
das
dec
lcall
sbb
or
stc
inc
addl
imul
and
jmp
mov
pop
inc
rorb
pop
inc
test
mov
icebp
sbb
pop
adc
jne
frstor
xorl
push
aaa
jecxz
fmuls
jp
dec
or
inc
lahf
lods
lahf
ret
dec
outsb
push
adc
xor
mov
sub
fadds
add
mov
push
les
cmpb
pop
push
cmp
push
xor
mov
insl
sbb
rol
and
push
lea
sbb
stos
test
push
inc
je
cmc
and
icebp
lock
stos
outsb
imul
in
mov
push
out
jl
cmp
add
push
daa
mov
repnz
imul
adc
roll
jne
xor
in
fmull
insl
mov
movsb
loopne
nop
imul
cs
mov
enter
movsl
jae
mov
xchg
sbb
adc
and
repnz
pop
pop
mov
or
inc
mov
jg
les
pop
xor
repz
pop
jmp
or
mov
push
jbe
and
push
push
cmpsb
repz
popf
enter
ret
xchg
xchg
bound
popa
pop
jo
jnp
imul
push
add
outsl
cli
cmc
sub
mov
and
neg
into
adc
mov
imul
les
out
mov
pusha
mov
push
sub
mov
push
dec
dec
ds
sub
out
jecxz
or
outsb
add
push
pop
lret
push
mov
dec
outsl
repnz
jmp
pushf
push
or
cmp
xor
xchg
add
fwait
cld
sahf
add
adc
movsl
stos
push
in
push
call
jne
dec
push
dec
out
movsl
mov
scas
mov
pop
fsubs
aaa
sbb
mov
or
add
or
pop
rolb
xor
cs
push
mov
cmc
loope
pop
into
adc
mov
xchg
xchg
pop
cmp
cld
out
jns
fdivr
mov
dec
imul
mov
jmp
sbb
cmpsb
cmpl
xchg
or
ds
lock
xor
fs
dec
sub
cmp
and
xor
loope
inc
lcall
xchg
call
enter
sub
adc
lret
pop
addl
jl
cmp
pop
pusha
mov
loop
enter
mov
addl
jne
inc
subl
enter
sbbb
out
loope
shlb
mov
nop
push
push
or
cmpsl
rorl
push
lods
shr
sahf
jp
inc
insb
repnz
out
add
jo
add
add
push
or
push
pop
cmp
xchg
add
icebp
adc
pop
fmuls
push
aas
fdivr
cmp
mov
add
js
in
in
pushf
push
cmp
fimuls
mov
mov
jecxz
sbb
in
clc
dec
loop
sahf
pop
inc
iret
scas
lea
jns
lret
inc
sbb
xchg
mov
sub
inc
sbb
jno
lret
jmp
xchg
negb
repz
in
insb
in
xor
stos
clc
int3
bswap
rorb
pop
jl
xor
and
rcl
and
jns
sahf
or
dec
pop
jle
sub
movsb
fucomip
add
fs
int3
push
push
jmp
xor
jnp
pop
mov
rcrl
xor
ljmp
in
sbb
mov
fsubs
cmpsb
mov
sahf
ficoms
imul
mov
into
sub
lock
mov
mov
sub
js
ror
mov
adc
nop
roll
push
xchg
lds
adc
inc
and
inc
movsl
push
call
shll
out
cmp
outsl
inc
test
or
pop
pop
xchg
sub
pop
mov
aam
xchg
jl
sbb
xor
adc
sbb
mov
pop
push
jmp
lea
ret
shll
jl
push
sub
out
push
leave
jge
jg
out
cmc
inc
sbb
and
adc
fldenv
add
jmp
inc
inc
xchg
in
inc
push
and
in
in
out
mov
outsb
fnstsw
mov
mov
loopne
xchg
js
stos
pop
jbe
mov
jl
jne
repnz
inc
rcrl
jge
mov
rclb
fisubs
sbbl
cmpsb
dec
mov
jne,pn
mov
mov
inc
xor
fidivs
addr16
cltd
or
adc
push
rorl
and
icebp
jl
xlat
push
xor
jno
into
jb
lock
xchg
mov
pushf
inc
ja
cwtl
lahf
inc
mov
ret
cld
std
mov
pop
rcrl
xchg
cmpsb
pop
add
testb
cmp
insb
mov
lock
fs
push
loope
mov
imul
das
cwtl
les
out
sub
mov
cld
sub
fcomps
scas
jae
push
adc
mov
adc
cli
ja
mov
inc
cmc
rcrl
dec
lds
test
mov
cmp
movsb
mov
or
sbb
in
shlb
cmpsl
aam
repnz
test
insl
add
rcrl
push
into
arpl
repz
aas
movsl
sahf
adc
jnp
lcall
pop
sbb
rcr
add
cmc
sbb
fbstp
iret
loopne
or
cmc
jg
lret
pop
xor
jo
pop
daa
mov
pop
aam
in
cmp
jno
lock
inc
repnz
orl
test
das
cmp
mov
mov
or
jle
inc
mov
in
and
fstl
dec
jge
lods
xor
push
xor
push
inc
fsubs
cmp
pop
lds
lret
add
mov
jmp
ljmp
and
sete
aad
mov
popf
shrb
mov
sub
loope
mov
into
and
cltd
xchg
adc
adc
mov
lods
sarb
mov
call
loopne
xchg
andb
adc
sbb
roll
popf
lcall
pushf
loop
mov
test
sbb
pop
push
dec
out
jae
pop
into
ret
jmp
inc
and
or
jb
scas
fsubrs
mov
xchg
test
aam
cld
push
pop
push
mov
addr16
loop
fsubrs
push
jl
fildl
dec
or
stos
cmp
scas
inc
jae
or
outsl
ss
in
loop
das
mov
hlt
jg
jecxz
in
xlat
jnp
jae
pop
push
jne
repnz
fsin
lock
sbb
sub
inc
or
pop
sub
repz
xchg
icebp
add
or
fsubrs
dec
ret
push
push
add
ret
jns
icebp
rcrb
movups
lock
aaa
inc
cld
int3
aad
adc
add
arpl
push
xor
xlat
mov
add
out
ljmp
xchg
sti
xchg
sbb
neg
test
jnp
pop
lea
stc
mov
loop
mov
iret
into
jge
jmp
sbb
fimuls
mov
out
inc
hlt
add
push
int
push
pop
push
shll
in
ret
out
sbb
cmp
cmp
mov
xchg
or
sbb
repnz
imul
xor
fisubrs
dec
out
roll
mov
adcb
test
insb
repnz
insb
mov
inc
push
shlb
neg
pop
and
xchg
xor
in
pop
and
shlb
jecxz
stos
ja
cmp
adc
shrl
push
xchg
and
hlt
pop
pop
sub
xchg
fld
push
stos
sbb
imul
out
mov
clc
arpl
in
adc
fs
in
pop
cmc
jmp
mov
scas
mov
or
fdivr
rolb
adc
das
daa
addr16
xor
lcallw
pusha
and
add
add
xchg
push
cmpsl
mov
xchg
push
aad
sub
fdivl
xchg
dec
jl
imul
cmovl
daa
pop
sbb
arpl
fists
lods
push
lret
cli
adc
loope
rorl
xchg
enter
sbb
lea
or
cmp
adc
inc
xlat
mov
mov
sbb
daa
push
mov
leave
dec
push
stos
xchg
fdivrs
and
jecxz
sub
jno
lcall
pop
mov
aad
aaa
xchg
nop
imul
mov
lds
jns
loop
adc
pop
jo
dec
or
add
push
pushl
inc
mov
mov
mov
jecxz
cmpsl
out
xchg
adc
aaa
cltd
inc
arpl
cwtl
mov
push
mov
cmpsl
es
jnp
inc
cs
loopne
aam
fstpt
insl
and
scas
in
jno
lea
xchg
lahf
hlt
loopne
bound
and
aad
call
les
add
or
repz
cwtl
inc
test
pop
insl
popa
xor
or
loope
sub
movsb
movsb
test
push
and
lea
std
hlt
push
inc
cmc
and
sub
mov
lret
into
gs
mov
nop
push
lret
push
push
pop
inc
mov
mov
cs
mov
lcall
dec
ret
fldl
adc
in
dec
jae
jo
mov
mov
cmp
sbb
fcomp
xchg
out
xor
dec
adc
sub
pop
xchg
out
subb
lods
out
mov
popa
loop
fisttps
add
pusha
mov
cmpsb
std
sub
fs
fidivs
insb
loope
divb
popf
jmp
xor
add
imul
cwtl
xchg
in
ret
pop
adc
xchg
outsl
push
mov
test
inc
cwtl
push
mov
sub
cwtl
jae
adc
dec
or
jns
mov
fsubp
out
cmc
das
lret
imulb
adc
pushf
loope
xor
sbb
mov
jl
jge
xor
into
js
jg
add
nop
adc
jbe
sub
ja
pop
pop
test
inc
call
fsts
push
scas
xchg
lahf
inc
pop
xor
cmp
shl
sbb
test
cltd
lahf
mov
jno
subl
sbb
cmp
int3
push
mov
lcall
mov
adc
in
aad
cwtl
cmpl
xchg
and
sbb
cmc
es
lock
mov
cwtl
pop
ds
push
add
shll
movsb
xor
xchg
mov
or
sub
jecxz
and
xchg
cmp
jl
push
mov
ret
out
hlt
jnp
jle
mov
lahf
shr
fmull
jno
push
aad
push
lods
inc
inc
pop
dec
pop
push
test
pop
ss
push
inc
sub
in
mov
and
sbb
roll
and
popf
test
dec
xor
sub
movsb
sub
js
inc
sbb
add
adc
ss
fisubs
loope
add
stos
int3
mov
popl
mov
push
lock
loop
aam
add
scas
loope
iret
pop
das
mov
dec
xchg
shlb
sub
sbb
mov
jne
fs
repz
pop
cmpsb
call
and
adc
mov
iret
mov
pop
push
out
pop
ret
movsb
sbbb
inc
sbb
arpl
lea
add
xchg
mov
add
rcrb
push
push
pop
movsb
dec
cmp
movsl
lret
add
hlt
sub
xchg
sbb
jp
pop
mov
add
push
jmp
lea
mov
scas
and
shll
pop
pop
into
and
push
clc
mov
fcomip
out
int3
movhps
xor
sti
pop
stos
orl
mov
nop
cmpsb
jae
xchg
jb
and
cmp
stos
sbb
pop
cmp
rcrl
inc
jne
mov
into
stos
or
inc
pop
inc
insb
popf
adc
mov
shlb
add
insb
adc
mov
rcrb
push
pop
pop
or
jl
and
mov
subl
xlat
adc
out
adc
push
scas
lock
xlat
mull
sbb
and
mov
push
and
add
mov
in
jg
inc
outsl
sbb
mov
ds
lret
jecxz
ret
nop
lret
cmp
xor
fidivl
cmp
xor
rcr
push
test
xor
lahf
in
je
das
inc
adc
shlb
repnz
and
dec
lods
sbb
movsl
jge
shrl
test
dec
adc
adc
mov
push
aam
in
pop
fsubrl
mov
cwtl
or
mov
xor
xor
add
aad
or
lea
pop
movsb
xchg
xor
pusha
ljmp
mov
fwait
jae
mov
popa
dec
push
add
aas
xlat
xchg
jmp
iret
mov
jns
imul
daa
adc
pop
cltd
ret
aam
nop
fs
xchg
scas
pusha
icebp
jb
ss
lds
shl
dec
add
stos
push
loope
mov
xor
xchg
addr16
test
sti
lret
leave
cmc
jno
shl
shr
mov
sbb
add
adc
adc
dec
jp
out
nop
xchg
sub
aad
lahf
dec
test
in
movsl
adc
pushf
or
out
xchg
pop
sbb
lods
fstl
xchg
or
hlt
sub
cmc
ret
xchg
push
roll
dec
mov
inc
ljmp
jmp
imul
js
and
xchg
cmp
pop
call
push
or
or
ds
dec
add
int3
in
fdivl
mov
fxch
jmp
daa
lods
sub
xor
add
outsb
dec
je
sti
mov
repz
rcll
or
pop
push
int3
cmpsb
mov
nop
out
adcl
xor
mov
int
out
addr16
loope
and
xchg
addb
mov
testb
outsl
or
mov
stos
insb
mull
pushf
loopne
std
adc
jnp
push
sub
pusha
loopne
inc
imul
sbbb
mov
jmp
out
sbb
mov
and
addl
sahf
jns
and
orl
ss
test
inc
outsb
sub
cmp
sub
imull
jo
sahf
push
addr16
cld
inc
inc
lock
imul
ret
mov
mov
jge
mov
cmp
les
xchg
test
inc
push
out
mov
aaa
add
xor
jl
or
loopne
stos
andb
and
cmp
jns
cmp
sbb
in
mov
or
aaa
push
fists
or
out
mov
aam
adc
mov
sub
cmp
cmpsb
int
pop
mov
inc
jbe
ss
aaa
or
arpl
imul
xor
lret
push
leave
out
jnp
xchg
out
jg
mov
or
jb
mov
mov
sbb
add
das
cld
jmp
stos
push
int
lods
mov
ss
cltd
mov
outsl
stos
sbb
pop
data16
repnz
sbb
addr16
test
inc
jmp
daa
shlb
std
flds
dec
es
push
push
sbb
cwtl
or
enter
rorb
mov
insl
push
xor
pushf
sbb
insb
xchg
cs
jmp
aam
push
hlt
adc
loop
cltd
jnp
call
int3
test
ljmp
mov
jmp
push
adc
loop
dec
test
fdivrs
fisttpll
stc
pushf
or
mov
cli
adc
imul
mov
dec
adc
fisubrs
fyl2xp1
cmp
push
das
sub
xchg
lods
sahf
mov
add
data16
fiadds
movsb
enter
in
jge
rcll
addr16
and
mov
adcl
mov
pop
daa
cmp
cmp
scas
lcall
jge
leave
xchg
ret
push
inc
add
ret
fimuls
mov
push
push
inc
add
scas
adc
es
xchg
jmp
dec
fsts
mov
dec
add
mov
lods
dec
test
xchg
in
fldl
repnz
int3
cmp
mov
xchg
mov
movsl
push
push
push
adcb
xor
out
movsl
clc
mov
dec
and
adc
sbb
xor
cmp
orb
add
aas
push
inc
sbb
mov
addr16
push
test
sbb
sub
test
int
in
dec
fsubl
mov
adc
test
ret
hlt
mov
or
sbbb
test
lret
out
jl
push
inc
cmp
mov
xchg
fs
lret
and
jo
inc
adc
daa
sub
mov
and
sti
adc
push
cmpsl
and
pusha
insb
ret
inc
iret
dec
mov
lcall
adc
movsb
push
sub
sti
lods
hlt
sub
adc
es
or
rcll
mov
arpl
les
movsl
das
jge
jge
xor
sbb
int3
add
hlt
in
lods
add
xor
or
out
jae
pop
in
sarb
cmpl
or
or
jl
cmp
sub
leave
add
or
push
xchg
push
iret
dec
test
mov
xchg
cwtl
cmpl
mov
pop
jmp
iret
into
and
push
push
lret
mov
movsl
or
mov
push
cltd
xchg
lss
imul
outsb
lods
xor
mov
xchg
adc
mov
pop
or
jne
and
or
mov
mov
mov
fsubs
dec
xor
pushf
pusha
fsubrs
ret
ss
and
mov
and
or
cmp
iret
popa
icebp
mov
jmp
testl
xchg
cmpl
jnp
pop
jnp
int
popf
cmp
mov
in
sti
mov
mov
inc
push
push
loope
xchg
xor
cmp
lahf
cmp
in
test
in
jl
jns
scas
push
jle
out
dec
jae
hlt
mov
and
mov
into
xchg
lea
hlt
mov
pop
cmp
int
push
movsb
lret
sysret
leave
jp
test
aaa
adc
sbb
push
int3
mov
xchg
mov
insb
pop
adc
add
fidivl
mov
cmp
jl
dec
lret
sbb
int
or
call
in
arpl
fbstp
cs
nop
mov
les
mov
jg
pop
push
rcpps
xchg
lock
cmpsb
xor
mov
mov
add
inc
push
inc
cli
jno
es
mov
sbb
test
cli
shl
and
cmp
out
jne
sbb
and
fstl
inc
mov
arpl
mov
lods
xchg
or
fbstp
fadds
mov
movsb
cmp
bound
cmp
rol
incb
xlat
add
mov
push
sbb
mov
outsb
dec
movb
testb
push
mov
ds
pop
popa
call
mov
add
sbb
mov
xchg
dec
sbb
sub
sub
xchg
je
cmp
rorb
ds
sub
mov
dec
dec
inc
mov
inc
fisttpl
lods
pop
scas
pop
cltd
imul
sahf
push
xor
std
gs
and
rcll
push
das
rolb
loopne
mov
cwtl
mov
inc
add
and
es
push
xchg
mov
popa
inc
sbb
rcrl
enter
lcall
cltd
sti
mov
or
pop
jge
arpl
jnp
ljmp
xchg
push
ljmp
les
ss
pusha
cld
idivb
sub
lret
jnp
mov
dec
adc
test
push
mov
sahf
add
mov
loop
test
ss
jbe
loope
hlt
cltd
popa
imul
addr16
inc
push
and
push
xor
mov
scas
sbb
mov
dec
out
xchg
repz
jmp
pop
and
jbe
add
or
test
sti
sbb
lret
movsb
pop
push
and
or
nop
sub
dec
loopne
mov
jge
ds
inc
sarb
adc
out
mov
stc
add
sbb
mov
adc
push
push
jo
aam
adc
xchg
fsub
sub
packsswb
cmp
push
ja
movsb
push
inc
push
xchg
dec
adc
sub
js
mov
movsl
in
mov
std
fstl
popf
insl
shll
ret
repnz
test
pop
std
jle
push
lret
jo
es
mov
std
cmp
xor
sbb
cli
mov
xor
nop
mov
hlt
add
cmc
add
jge
dec
je
inc
add
insb
test
rclb
sub
mov
aam
rcrl
push
adc
adc
in
mov
inc
cmp
or
imul
arpl
popl
pop
jge
out
pushf
es
pop
fstps
nop
fcoml
cmc
add
js
sub
add
push
outsb
cltd
jp
inc
mov
mov
inc
addr16
push
mov
xor
xor
scas
push
sbb
mov
add
jo
repnz
cld
sbb
pop
mov
pop
jge
js
jecxz
arpl
pop
xor
pop
push
dec
imul
or
pop
test
sbb
shrl
cmpsl
push
cwtl
push
cmp
or
dec
mov
add
cmp
loop
in
lock
mov
andl
outsl
xchg
lods
sti
stc
out
xlat
inc
or
std
xor
shlb
or
in
addr16
inc
pop
cmc
push
data16
push
out
or
sub
push
sti
js
or
out
xchg
ss
fsts
xlat
nop
xchg
sub
inc
imul
and
mov
bound
xchg
xchg
lahf
into
out
mov
mov
mov
and
xor
sbb
push
push
jne
mov
lock
int
add
push
movsl
dec
cwtl
sub
ret
subl
or
mov
jns
pop
pop
daa
ss
jecxz
hlt
pop
jnp
pop
loop
or
mov
imulb
xchg
xor
jns
and
xchg
cli
fcoms
cmp
add
mov
movsb
fdivrl
addb
out
mov
pop
push
cmp
ret
popa
sub
cmp
scas
fdivrs
fstl
mov
push
mov
xor
cmpsl
lods
inc
in
sbbb
movsb
xor
ss
outsl
push
adc
setnp
insl
mov
cmp
addl
arpl
inc
mov
and
iret
jp
inc
lret
iret
xchg
inc
incl
adc
adc
and
nop
and
push
fidivrs
lret
dec
mov
sahf
xlat
orb
das
movsb
mov
add
fsubs
lds
in
inc
sbb
mov
pop
xor
arpl
decb
add
mov
jno
cmc
sub
mov
xchg
jl
lcall
shufps
jno
mov
inc
add
sub
movsb
test
lcall
pop
sub
pusha
sub
jge
cld
add
pop
jno
jno
icebp
push
fimuls
daa
testl
mov
lea
or
inc
adc
mov
lret
rorb
or
rorl
mov
sbb
sub
sbbb
rcrb
push
and
jge
fs
mov
scas
jbe
in
push
sbbl
aas
or
and
or
jno
fisttpll
scas
movhps
add
jae
sbb
scas
sbb
push
mov
lods
push
cwtl
sub
outsl
stc
jae
add
xchg
xor
xchg
or
clc
add
cs
sbb
nop
lock
lcall
fimull
push
repnz
push
repnz
or
cmp
rorl
cmpl
fidivrl
mov
cmpsb
clc
and
dec
inc
outsl
xchg
out
loop
mov
sbb
or
insb
or
nop
adc
pop
cltd
lahf
repnz
add
sub
popf
sub
mov
pop
mov
xchg
and
repz
stc
arpl
pop
aam
and
into
das
cmpsl
mov
and
lock
sub
arpl
ret
lea
cmc
out
or
dec
push
push
ja
xor
xchg
pop
xchg
inc
mov
mov
jo
mov
mulb
int3
push
adc
cmp
jnp
mov
jo
pop
jmp
test
inc
aaa
add
mov
jge
mov
pop
pop
mov
aas
imul
add
test
push
negl
dec
fwait
cmp
cmp
aam
push
fwait
in
adc
test
push
insl
adc
daa
daa
mov
pop
aaa
cmp
sahf
xchg
test
mov
lret
sti
dec
ret
sarl
inc
das
adcb
fidivs
pop
lds
ss
xchg
xchg
pop
dec
sti
cld
and
ljmp
jecxz
mov
lcall
dec
xchg
jns
gs
stos
mov
inc
push
adc
or
xchg
aad
mov
aad
jp
into
arpl
outsb
lock
cmc
add
sub
fidivs
mov
aaa
icebp
movb
xchg
sub
jg
sarb
add
icebp
in
movsb
and
jnp
mov
cmc
imul
inc
push
push
cmpsl
cmpsb
mov
outsb
adc
test
dec
mov
xchg
push
shl
jne
jns,pn
insl
mov
xchg
cmp
adc
imul
in
and
sbb
push
cli
ret
fiaddl
jg
mov
bound
dec
mov
and
inc
xor
pushf
and
inc
fsubrl
stos
mov
push
popa
sub
mov
mov
mov
cmp
inc
fnstcw
clc
shll
inc
dec
in
fimull
sub
lea
cld
bound
int3
inc
or
jne
stc
or
and
clc
jns
push
xor
or
gs
sub
lret
mov
add
mov
mov
in
or
gs
dec
bound
xor
cs
mov
mov
mov
or
roll
push
in
push
popa
lahf
jae
dec
push
outsl
cmpsb
and
jmp
imul
pushf
cmp
mov
ss
cmc
push
xor
int3
mov
out
lret
mov
mov
add
addr16
pop
movsl
sahf
xchg
sahf
push
xor
or
sbbb
push
pop
stos
lcall
mov
mov
cld
loope
out
dec
ds
lret
clc
ret
jae
out
lods
xchg
or
popa
jbe
adc
mov
bound
mov
fcompl
insb
add
dec
ljmp
and
shlb
sbb
mov
outsb
sub
add
daa
mov
xor
xor
jl
inc
fmull
dec
push
out
pop
nop
or
sub
cmpb
xchg
cmp
push
xchg
int3
xchg
fsubrl
dec
adc
call
mov
aaa
fdivp
sti
jae
in
negl
cltd
jle
cmp
mov
fildll
and
mov
movsl
and
test
xor
or
xor
push
les
xorb
mov
imul
pop
aam
xor
pop
mov
subb
inc
sub
stc
adc
clc
sub
xchg
outsb
ja
push
push
and
out
negb
xchg
out
push
sbb
adc
inc
cli
jae
dec
bnd
sub
int3
push
js
adc
adc
dec
cmpsl
xor
mov
clc
xor
test
jne
push
mov
cmpsl
rcll
or
in
mov
test
outsb
jg
test
xchg
mov
push
orl
sub
test
inc
mov
push
scas
xchg
add
fnstcw
pop
fs
jp
push
pop
leave
mov
or
dec
xchg
lods
xchg
lea
jb
fsubrp
ss
leave
js
add
push
mov
dec
fiaddl
repnz
popf
or
push
in
xor
sti
lcall
cs
jb
fiaddl
js
sub
xlat
xchg
insb
aaa
inc
cmp
fstpl
push
cmp
or
mov
jp
pop
in
cmp
mov
mov
hlt
xlat
leave
ljmp
pop
add
out
xor
je
rclb
xchg
xchg
pop
mov
cld
and
add
sarb
into
cs
add
xchg
inc
cmp
mov
xchg
popa
shll
xchg
outsb
jl
add
outsb
xor
stos
outsl
jno
inc
adc
adcl
jmp
bound
and
stos
add
sbb
rcrb
jne
adc
push
adc
mov
mov
rcrl
xchg
jns
shl
or
sbb
rolb
xchg
pop
inc
inc
stos
add
adcl
mov
and
jbe
imul
sub
in
dec
cmp
cltd
sti
cmpsl
dec
ss
fstpt
clc
mov
lods
popf
cmpsl
sahf
imul
mov
stc
stos
stc
mov
icebp
inc
xlat
mov
and
sbb
mov
lods
jge
add
cmpsl
repz
jae
mov
xor
dec
push
adc
ljmp
mov
sub
sarl
fldl
shl
add
pop
push
pop
imul
xchg
push
int3
and
pop
jae
lods
popa
cmp
clc
and
push
lahf
push
pminub
repnz
faddl
push
add
lret
pop
pop
adc
mov
movsl
sub
sbb
andl
sbb
pushf
in
shll
movsl
sub
out
inc
roll
mov
add
ss
jmp
jb
adc
sbb
mov
and
cmp
xchg
js
daa
cmp
xchg
inc
pop
stos
insl
ss
cmc
cmp
mov
jnp
xchg
push
insb
or
test
shlb
inc
mov
xor
xchg
fs
outsl
sbb
pop
xchg
or
sbb
sbb
and
std
test
sub
fidivrs
xlat
push
cmp
in
push
cmp
cmpsl
sbb
mov
pop
scas
push
push
iret
sub
push
fdivrp
stos
or
loopne
sub
fninit
mov
aaa
lahf
push
inc
dec
or
cmpsb
dec
hlt
popa
aad
sbb
xchg
pop
and
int
sub
pop
popf
cmp
shrb
outsl
fwait
test
mov
push
outsb
push
nop
ret
jp
popf
cmpsb
in
fnstcw
sub
mov
mov
mov
aaa
push
ret
pop
adcb
ja
inc
dec
add
popf
test
aaa
fstp
adc
fsubrs
pop
mov
adc
ret
push
or
cli
out
add
movsb
repz
repnz
sub
dec
mov
and
into
ret
push
pop
lea
mov
pushf
add
adc
push
nopl
xchg
es
lcall
rcrb
icebp
push
fistpl
sahf
insb
mov
xchg
stos
adc
fistpll
jg
push
dec
popf
lock
ljmp
aas
shlb
cwtl
clc
xchg
sub
or
out
fs
inc
mov
mov
movsb
push
stos
aaa
imul
rclb
std
sbb
lods
push
movsl
jns
xor
adc
mov
repnz
mov
add
pop
incl
mov
fiaddl
sbb
push
push
mov
cmp
repz
cmpl
push
dec
lcall
fisubrl
test
fsub
shlb
stos
sti
mov
leave
pop
pop
popa
sarl
scas
outsl
sbb
and
rolb
addr16
sub
test
push
cwtl
cwtl
push
push
notb
pop
or
sti
outsl
jge
add
lds
int
sarl
clc
insl
lods
cmp
scas
sbb
lahf
mov
mov
imulb
inc
jne
stc
icebp
and
out
or
push
jg
and
int
dec
add
leave
cmp
mov
pop
jns
mov
in
cmp
pop
and
jmp
les
lcall
add
sbb
testb
sub
push
xor
push
jae
and
aaa
cmp
dec
sub
mov
popf
sbb
and
push
jl
ss
mov
push
loopne
mov
sub
aad
fcom
rcrl
imul
dec
inc
outsl
mov
mov
cmpsb
dec
jne
lea
data16
mov
ljmp
fildll
pop
or
addb
jb
or
push
dec
shlb
rclb
mov
iret
lock
imul
jg
and
mov
dec
cli
in
mov
std
mov
or
xor
stc
cwtl
stc
pop
sahf
lret
iret
jno
ds
xchg
fsubrp
mov
and
inc
cmp
leave
adc
jne
jns
jno
jecxz
pop
and
push
cld
test
fisubl
or
mov
movsw
mov
iret
es
jl
insb
loope
scas
add
std
push
lock
aam
jo
call
xor
loopne
ss
icebp
dec
mov
xor
mov
mov
pop
imul
arpl
rcll
test
and
xchg
or
jne
mov
xchg
push
adc
pop
mov
cltd
mov
xor
popa
cld
inc
lretw
add
rol
or
sbb
mov
mov
mov
push
sti
jnp
dec
in
out
icebp
aad
add
pop
cmp
or
cmp
push
xchg
loopne
shlb
mov
mov
xchg
inc
mov
pushl
jl
xor
push
fs
push
ds
xorb
push
out
sbb
shlb
push
ret
or
repnz
ss
loop
pop
pop
mov
cld
push
lret
jns,pn
lods
adc
dec
scas
push
cmp
popf
dec
jne
dec
push
pusha
fisubs
pop
pop
shlb
cmp
std
adc
xchg
das
dec
cmp
cmpsb
icebp
stc
pop
push
cmp
arpl
ret
dec
mov
add
cwtl
aas
mov
mov
mov
movsb
mov
pop
test
and
add
daa
fsubrs
inc
movsl
jne
shl
fsubrl
add
push
sbb
xchg
mulb
push
pop
adc
adc
push
jg
xor
repz
into
pop
dec
mov
push
cli
or
shl
dec
sub
sbb
xchg
xchg
mov
imul
jmp
or
in
testl
adcl
push
fildll
sti
je
orl
jbe
push
addr16
push
movsb
outsb
pop
jbe
push
stos
enter
jg
imul
push
bound
daa
xchg
addl
in
clc
jp
imulb
pop
jno
add
mov
andb
jns
scas
loop
aas
xchg
xor
cli
jb
popf
cmpsb
sbb
aaa
fidivrl
js
add
sub
push
cmp
mov
mov
xchg
xchg
jae
shr
movsb
adcl
xor
mov
jns
xorb
lods
lods
push
and
xchg
sbbb
add
fistpl
je
xor
inc
ret
test
filds
pop
inc
pop
insl
mov
dec
inc
jmp
pop
ret
or
jnp
push
repz
fdivrp
out
or
test
push
add
xor
bound
mov
push
inc
int3
push
fs
add
dec
mov
out
pop
lds
rol
movsl
mov
pop
push
inc
jbe
mov
popa
ret
jno
ljmp
fnsave
dec
jb
or
inc
inc
rcrb
test
mov
out
jb
pop
test
jae
fisubs
loop
push
and
ja
cmp
mov
xchg
xchg
mov
sub
test
and
inc
jne
push
xchg
mov
mov
pop
mov
sbbb
imul
jge
adc
cmp
inc
add
push
cmp
cmc
xor
cmp
stos
jae
aaa
popf
adc
cld
in
jbe
push
lahf
std
fcmovnb
mov
in
ss
loopne
fldenv
mov
lds
and
lret
fistpll
xlat
int
pop
aas
xchg
popf
add
push
lods
mov
loopne
inc
sub
into
aaa
int
mov
ja
adc
ss
imul
gs
mov
push
jg
addb
pushf
fiadds
sti
loopne
ljmp
add
mov
adc
in
je
mov
cmp
int
pop
jecxz
mov
mov
rcpps
or
mov
ret
outsb
jns
repz
mov
lcall
mov
stos
int3
mov
add
js
add
popa
call
dec
adc
lea
repz
mov
repz
add
xlat
mov
push
jecxz
mov
shll
and
pusha
lcall
imull
mov
push
inc
sub
inc
push
shll
and
xchg
inc
lds
leave
xchg
pop
aaa
cltd
addr16
and
push
adc
inc
clc
das
adc
insb
es
xchg
pushf
mov
stc
xor
pop
std
xchg
js
xlat
aaa
pusha
push
pop
xor
dec
mov
pop
mov
ss
lods
xlat
ja
imul
insb
sub
and
lahf
mov
fdivs
and
popa
lret
mov
pop
pop
cmc
shll
pop
adc
adc
mov
aaa
adc
cli
hlt
xor
ret
insl
cmpsl
cmpl
cld
ss
inc
sub
sub
mov
pop
xchg
inc
mov
outsl
out
adc
mov
inc
mov
mov
cs
je
add
mov
jge
les
outsl
mov
inc
lods
inc
xor
js
jnp
lret
movsl
out
outsb
cmc
xor
xlat
sbb
gs
mov
adc
mov
lcall
xor
jg
fidivrs
cltd
add
mov
sti
test
int
test
mov
ss
sub
jge
xchg
dec
nop
fdivs
push
mov
stos
fdivl
jecxz
js
bound
mov
cmc
mov
jmp
lock
rcll
adc
popf
jl
popf
push
pushf
jnp
add
cmp
or
xor
and
cmp
jle
xchg
int3
lcall
sub
add
mov
adc
jo
mov
aam
push
mov
out
enter
lret
adc
cltd
adc
jecxz
iret
add
push
enter
add
sbb
idiv
icebp
movsl
gs
imul
mov
cld
lock
dec
in
cmp
cmp
add
add
stos
fadds
sub
in
pop
push
dec
dec
fwait
loopne
je
add
int
or
push
ja
sbb
sub
inc
das
jmp
outsl
jl
ss
add
jnp
push
or
add
pusha
mov
mov
ds
ss
js
test
add
dec
outsb
lds
outsb
or
rcl
rcrb
push
cli
test
mov
popa
and
shll
lods
test
sarb
rcrb
dec
in
cmc
mov
dec
xor
fistps
and
ret
adc
insl
aad
leave
cmpsb
mov
fstpl
and
add
jmp
mov
or
sub
in
insl
xchg
loope
pop
mov
mov
and
mov
lods
push
testb
test
js
cmp
int
ja
jp
lods
nop
and
pop
mov
xchg
or
xor
jmp
sbb
pop
inc
loopne
clc
pop
lock
dec
mov
lahf
mov
push
or
inc
mov
gs
bound
cmp
dec
test
mov
push
jmp
lods
dec
mov
pop
jns
mov
xor
int3
xor
inc
hlt
sbb
and
inc
mov
aad
into
repz
clc
insl
mov
out
jbe
xor
stos
cwtl
mov
sahf
and
mov
or
movsl
lods
inc
mov
int3
jnp
push
dec
pop
mov
lea
mov
mov
xchg
mov
sub
sahf
xchg
fsubrl
jmp
push
adc
clc
jne
inc
aam
sbb
loop
push
aad
dec
jno
pop
fstps
ja
lahf
fnstenv
fsubl
lret
fsubl
loope
mov
cmp
jne
popa
push
or
jge
popf
and
imul
pop
inc
mov
ljmp
inc
outsl
inc
cmpsl
sub
mov
cmpsb
xchg
imul
in
jp
daa
add
mov
add
mov
into
fcmove
xchg
fldt
fdivs
jo
mov
sbb
and
jne
push
push
mov
cmpsl
adc
in
mov
lret
inc
loop
fmulp
cmc
push
popf
adc
push
ds
push
and
js
jle
sub
sub
push
imul
lret
sub
scas
icebp
out
pop
dec
divb
push
rclb
cmpsl
push
mov
cmp
pop
xchg
ds
inc
loopne
and
sub
add
push
adc
dec
mov
ficompl
icebp
sahf
in
fdivs
push
mov
xchg
scas
jecxz
mov
in
inc
dec
push
lock
adc
cs
mov
scas
or
pushl
inc
inc
ds
fstp
cmc
mov
cli
outsb
pop
mov
or
test
mov
and
sahf
pop
add
jg
dec
cmp
inc
sbb
inc
es
inc
mov
push
in
inc
cmpsl
daa
mov
nop
test
mov
mov
loopne
and
and
sbb
dec
call
imul
shrb
cmp
outsl
fcmovu
mov
scas
faddp
adc
rcr
shr
imul
mov
jl
iret
sbb
mov
xchg
push
jbe
push
addb
xchg
sbb
dec
or
in
in
iret
loope
cmpsl
inc
aad
ret
push
test
loope
loope
push
or
ds
std
jp
xchg
cld
subb
in
rcll
shll
cmpsl
push
lds
mov
daa
out
or
shll
inc
push
sub
and
fimull
rorl
cmpsb
xchg
jl
subl
cmp
or
inc
push
dec
add
pop
mov
stos
adc
in
sbb
lahf
sub
scas
pop
xorb
xchg
sbb
stos
nop
pop
lods
jns
je
cmpsl
mov
mov
pop
push
ja
jp
jns
mov
pop
pop
loop
aad
push
repz
mov
and
nop
xor
out
rcrl
aas
fstpl
pop
out
cmp
shl
nop
xlat
mov
push
cmp
mov
lds
sbb
aaa
mov
scas
jp
sub
cmc
int3
push
sti
add
mov
cmc
test
add
sbb
idivb
pop
test
loop
xchg
mov
jp
loopne
push
pop
dec
cmp
rol
mov
xchg
fnstcw
cld
cmp
test
push
add
stos
xor
lods
mov
pop
pop
in
mov
pop
stos
jb
adc
mov
jb
xchg
outsl
scas
lret
loop
cmp
fcomps
cli
shlb
aad
call
mov
movsb
popa
jns
jle
push
jb
jns
dec
and
push
mov
xchg
dec
mov
mov
clc
das
mov
jne
pop
push
shl
dec
cmc
sub
cmp
mov
sbb
push
ficoml
movsl
push
jl
shll
push
mov
mov
pop
lret
das
mov
xchg
js
sub
mov
fs
out
adc
dec
incb
outsb
negb
pop
in
push
push
mov
mov
push
lock
out
pop
dec
pop
hlt
xor
popa
inc
dec
sti
mov
jmp
out
js
insb
test
arpl
lods
add
cltd
sub
pop
das
pushf
adc
rorl
daa
xchg
ds
roll
mov
out
ficompl
xor
add
jp
push
insb
xor
lahf
mov
test
cld
popf
jns
dec
loope
ret
mov
sarl
fidivrs
lret
sbb
push
test
enter
ds
mov
aad
ja
mov
cmpsl
pop
dec
popa
lret
jge
cmp
or
jge
insl
jge
inc
loop
jne
mov
xor
out
inc
dec
mov
and
push
pop
cmc
push
xor
sbb
cmp
iret
das
das
in
mov
ret
push
or
in
xchg
push
dec
pop
and
adc
jp
push
lods
fidivl
testb
push
out
arpl
push
mov
jl
adc
and
test
aam
insb
mov
popa
pushf
inc
jge
addb
jne
mov
and
inc
cwtl
xlat
xchg
mov
shl
int3
popf
stos
jp
jmp
mov
sub
and
adc
mov
in
ret
or
dec
sbb
fisubs
xor
in
sub
imul
lcall
xor
lds
fsubr
dec
ret
js
or
cltd
mov
jne
xchg
sti
xchg
mov
cltd
je
or
movsl
shrl
mov
test
cmp
jl
fldl
adc
mov
xchg
inc
jnp
int3
xchg
scas
daa
jle
call
sar
and
pusha
dec
ret
adc
int
out
xchg
sub
xchg
sbb
mov
add
or
adc
cmp
sbb
lea
and
or
mov
sbb
cmpsb
lds
daa
orl
pop
dec
das
aaa
push
inc
inc
jo
sahf
jl
ja
sahf
mov
dec
repnz
sub
sub
clc
push
mov
lcall
sub
sahf
lock
add
iret
popa
idivb
fs
out
sahf
test
cltd
ja
shrl
dec
add
adc
fstpt
movsb
mov
psubq
mov
and
sub
pop
mov
lods
jle
or
sbb
aam
mov
mov
pop
sbb
jg
das
ja
fwait
test
pop
outsl
fadd
jge
leave
sti
push
mov
sub
test
jns
les
out
push
sar
inc
lock
cmp
mov
aaa
mov
inc
mov
movsb
mov
mov
ss
or
lahf
fildl
mov
cld
cmp
cmpsb
addr16
add
cmp
dec
add
cmp
arpl
popa
pop
xchg
in
ss
sahf
xlat
jmp
and
addr16
adc
sbb
jnp
ud0
out
jmp
or
lahf
mov
push
fnstenv
cmpsl
add
subl
enter
scas
adc
cli
ret
mov
push
cli
lds
xlat
fdivrl
pop
out
xchg
out
xchg
mov
push
xchg
rolb
add
enter
push
dec
outsl
lods
xchg
mov
sbb
test
mov
enter
sub
add
sub
and
xchg
scas
jne
test
sbb
fsts
push
or
sub
push
frstor
push
xchg
into
je
or
dec
mov
xchg
cmp
add
lds
scas
jae
aas
xchg
stc
call
andl
xor
stos
aas
gs
jge
add
in
cmp
cs
push
mov
or
leave
mov
rclb
fsts
aam
cmp
movsb
ljmp
pop
cwtl
into
and
xchg
sbb
ds
lahf
push
das
cmpsl
scas
nop
stos
aas
adc
aam
push
cmp
xchg
xor
mov
pop
aaa
lret
js
jne
sub
push
cmp
arpl
jmp
xchg
call
stos
xchg
jnp
xchg
or
scas
sbb
lds
jbe
orl
push
pop
cmc
pop
je
sub
iret
fisubl
mov
lods
mov
sub
popf
iret
rcr
inc
mov
aaa
sub
imul
dec
adc
sbb
stc
inc
jbe
push
or
xor
mov
pop
in
imul
xchg
xor
push
into
js
shll
stos
cmpsl
int3
repnz
out
pop
ja
adc
dec
and
cmpsl
ss
and
cmc
push
or
popa
push
xchg
adc
jle
lret
and
or
pop
insl
cs
xchg
or
addl
imul
loopne
and
fbstp
pushf
push
push
or
dec
mov
xor
hlt
jnp
xor
mov
les
ja
in
es
les
repnz
nop
loopne
add
jno
aam
mov
aad
mov
dec
ret
in
mov
mov
dec
sub
dec
loop
pushf
rclb
and
inc
fisttps
inc
mov
hlt
mov
fistps
fwait
mov
xchg
inc
xchg
mov
mov
call
pop
inc
sub
in
call
jnp
push
sub
arpl
repz
mov
and
jecxz
push
add
inc
mov
push
imul
jle
and
test
sub
fidivrs
out
jge
mov
pop
fwait
lcall
lds
cmp
insb
outsb
jo
mov
mov
aas
int
and
mov
shrl
lret
jecxz
loopne
cwtl
xor
xchg
les
adc
pcmpeqb
xor
scas
mov
sbb
test
mov
xchg
out
add
xlat
sbbl
cltd
or
stc
jl
jg
adc
lods
and
mov
loope
negl
pop
add
and
inc
outsl
jbe
sbb
out
or
sti
jne
jg
clc
xchg
clc
ffreep
cmp
inc
repnz
lds
dec
or
repnz
subb
sbb
push
loopne
sub
xchg
push
jmp
push
dec
dec
sahf
fidivl
movq
xor
lock
mov
xor
lock
fists
lock
fsubrs
icebp
jl
or
insb
int3
sub
repz
aaa
jns
sub
xor
call
lods
mov
shrl
mov
add
aaa
in
out
adc
mov
lcall
sti
cwtl
lock
pusha
aaa
ficomps
inc
dec
add
mov
lods
pusha
test
cld
dec
mov
outsb
adc
loope
push
pop
sub
out
rcll
mov
fcoms
cmpsb
mov
pop
xchg
ficomps
push
fs
loop
shrl
loopne
xchg
or
cld
jae
mov
jecxz
push
cmp
push
jns
jecxz
rorb
loope
or
mov
push
xor
sahf
das
sbb
xor
gs
es
lock
push
jne
mov
jno
or
pop
xchg
movsl
lahf
incb
pop
lret
divb
push
fnstsw
cmc
push
mov
addr16
dec
inc
xchg
negl
push
dec
arpl
fisubrs
mov
xchg
andb
mov
fstl
xor
gs
addr16
idivl
dec
nop
dec
gs
pop
lock
rcr
push
aas
test
jmp
sbb
pop
push
scas
and
lods
mov
lea
popa
nop
sbb
mov
xor
push
dec
sarb
dec
imul
sbb
inc
loope
in
ret
subl
dec
testb
sbb
lret
xchg
pop
cs
int3
pop
or
pop
stos
aam
sbb
out
sbb
ficoml
cmp
and
lods
mul
lahf
add
mov
ljmp
or
nop
imul
nopl
inc
push
fistpll
xchg
imul
stc
roll
fldl
punpckhdq
sbb
sbb
sbbl
nop
hlt
bound
sbb
stos
hlt
pop
lds
inc
inc
fcmovnu
ja
add
dec
fstl
sbb
pop
ljmp
scas
fistpl
cld
sub
mov
dec
sub
test
inc
fwait
mov
lea
inc
push
or
and
jle
cmp
andl
fsts
test
mov
xchg
sub
test
mov
jb
sbb
mov
push
inc
pop
inc
test
dec
jo
jl
mov
and
das
mov
aas
sub
mov
ficompl
sarl
out
cmp
inc
lret
out
fidivrs
in
in
xor
mov
jbe
cli
rcl
inc
and
out
jns
lods
hlt
test
out
mov
aam
add
and
dec
pop
add
mov
daa
je
pop
xor
add
shrb
cmp
mov
push
cmp
gs
or
test
xchg
jle
sub
leave
xor
jp
jo
xchg
cmp
loope
in
pop
push
or
mov
xchg
sbb
mov
mov
out
ret
push
inc
loop
int3
ret
cmp
adc
inc
xor
push
out
ret
xchg
xchg
add
dec
ret
push
push
xchg
lds
inc
add
cmp
cmp
pop
jp
inc
in
push
dec
cmp
sbb
fnop
xchg
mov
in
mov
iret
das
sbb
cmpsb
xchg
fsubrp
push
repz
push
push
adc
xchg
jl
lods
fisubrl
test
push
push
pusha
push
lods
mov
xor
loope
mov
push
enter
ja
pop
cmp
push
xchg
rcll
arpl
mov
int
jle
stc
push
cmp
mov
push
inc
bound
in
repnz
add
ret
xchg
lret
inc
sbb
and
push
mov
insb
stos
pop
xchg
add
divb
stos
dec
sbb
repz
insl
gs
das
in
leave
dec
lcall
or
clc
scas
jecxz
imul
jb
in
lds
or
gs
sti
fidivl
aaa
pop
cltd
rorb
mov
lods
mov
sarl
aaa
or
dec
cltd
addr16
dec
in
push
cmp
xor
in
outsl
push
cwtl
hlt
incb
insb
mov
sbb
pusha
popf
xor
mov
mov
adc
aam
lret
scas
cmovs
jle
push
sbb
out
ds
mov
push
hlt
inc
mov
sbb
loop
das
scas
stos
test
push
adc
iret
inc
test
dec
mov
xor
int3
arpl
xlat
mov
jecxz
mov
lods
cmp
jmp
inc
cmc
out
fnstsw
and
shl
jb
xchg
pushf
notl
push
or
fbstp
lock
pop
mov
lods
sbb
fnstcw
shlb
sub
sti
orl
insb
or
fwait
add
loop
mov
and
push
in
syscall
aaa
es
ret
rolb
push
push
jge
xchg
jge,pn
xchg
inc
movl
testl
and
imul
shl
pop
pushw
adc
pandn
inc
add
ds
mov
adc
pop
mov
lods
push
icebp
sbb
fcompl
call
nop
aam
mov
mov
and
mov
loop
call
ds
xchg
pop
loopne
sbb
mov
inc
out
sub
cli
movsl
mov
popf
sub
mov
sahf
fidivl
dec
sub
pop
adc
cwtl
cltd
jl
xor
gs
dec
pop
pop
test
xor
insl
fiadds
pop
loopne
jne
fdivs
and
sbb
insb
add
inc
push
jns
inc
in
or
shl
mov
inc
sbb
mov
into
inc
daa
pop
pop
mov
mov
inc
das
xchg
adc
sub
or
pop
pop
sbb
out
cmc
jbe
and
jno
xchg
stos
sub
in
xchg
mov
pop
dec
push
sbb
sti
pop
fmull
jne
cmpsb
sub
push
roll
jnp
jnp
xor
mov
add
mov
imul
call
jno
inc
jp
fmull
xor
data16
stos
mov
lcall
fmuls
movl
pop
pushf
cmpsl
jae
jl
xor
pushf
xlat
and
fsubrs
cwtd
cmp
dec
movsl
and
lods
rol
fldt
imul
lret
pop
push
sbb
mov
rorl
sbb
mov
mov
mov
imul
sub
cmp
cmp
pushf
inc
bound
xchg
push
insl
pop
or
xchg
addr16
hlt
repnz
mov
cmp
xor
out
sub
or
adc
pop
sarb
scas
mov
xlat
cli
sarb
mov
jo
inc
fnstsw
les
cltd
sub
cmovs
jns
lahf
push
aam
jecxz
inc
sub
adc
adc
das
out
popa
out
imul
mov
test
mov
repz
pop
testl
rcr
lret
push
adc
mov
cli
and
sbb
scas
pop
push
mov
xor
and
fidivrl
insl
mov
xchg
fisubs
cmp
fstps
xchg
xor
out
mov
xchg
repnz
pusha
mov
inc
dec
push
inc
fwait
arpl
es
or
stc
pop
jae
xor
push
cwtl
pop
xchg
pop
jmp
stc
xchg
adc
stos
mov
mov
push
pop
sar
pop
pop
rcll
out
jae
inc
sti
arpl
mov
sub
enter
outsl
dec
imul
mov
stc
sbb
aam
jns
mov
hlt
enter
movsl
mov
hlt
pop
mov
fisubs
dec
dec
or
adc
dec
pop
lahf
cwtl
out
jnp
fucomip
lea
dec
xchg
int
xor
popa
cmp
jne
pop
cmc
pop
enter
sub
push
jb
js
insb
call
sbb
inc
lds
jge
inc
mov
push
dec
inc
or
mov
ljmp
jmp
sahf
dec
pushf
sub
adc
cmc
pop
inc
daa
cs
mov
in
outsb
mov
push
mov
repz
insb
incb
rcll
cmp
outsl
push
inc
sarb
orb
xchg
push
sub
xchg
xor
out
mov
push
push
mov
mov
cs
adc
xchg
pop
mov
sbb
mov
cmpl
iret
outsl
mov
rolb
adc
mov
pop
in
cli
cli
xchg
cld
es
pop
jo
data16
dec
pop
pop
push
push
jno
mov
ret
xor
mov
cmp
test
ret
lahf
inc
push
stos
lds
push
adc
sub
pop
lret
shrb
xor
pop
xor
pop
pop
in
mov
pushf
dec
inc
loope
add
pop
movsb
dec
adc
sub
inc
mov
sti
ret
cmp
xchg
push
test
sbb
xor
arpl
stos
pop
xor
les
gs
inc
mov
jle
incb
popa
mov
or
in
add
ret
pop
loopne
push
add
inc
mov
inc
mov
rorb
inc
filds
lea
imul
or
cmp
sbb
add
lcall
push
iret
push
pop
sub
inc
dec
in
stos
pusha
and
mov
jns
lods
js
ljmp
test
sbb
xor
faddp
cmpsl
mov
inc
and
push
inc
pop
xchg
sbb
mov
mov
dec
in
or
nop
push
push
arpl
push
and
aad
cmpsb
xor
cmpb
in
mov
in
data16
flds
stos
cld
loopne
mov
negl
loope
xor
xchg
bound
xchg
je,pt
fcmovnu
stos
insl
in
push
xchg
jae
mov
mov
lods
jle
push
push
pop
rorb
fwait
add
or
fcompl
xchg
pop
stos
imul
push
rcrb
scas
xlat
pop
fistl
inc
add
fwait
test
mov
sub
cld
push
xchg
pop
repz
xchg
xchg
fs
lods
inc
subl
aas
pop
test
rdmsr
jg
or
jmp
or
hlt
xor
imulb
btc
inc
sub
mov
inc
inc
mov
out
je
movsb
push
in
in
and
adc
pop
sub
pop
std
and
and
or
adc
cmc
cmpsl
rcr
out
nop
movsb
insl
mov
lods
and
push
dec
loope
cmp
sbb
mov
lea
push
pop
mov
dec
repz
rcll
movsl
int
push
mov
mov
xchg
jle
adc
lods
pop
xchg
jo
repz
pop
xor
cmpsl
rcr
mov
iret
das
int
dec
adc
push
fsubl
sahf
scas
push
mov
clc
mov
aas
cmp
test
push
jae
stos
inc
test
and
jnp
gs
mov
pop
mov
adc
mov
mov
in
in
hlt
and
outsl
pop
push
ret
ss
mov
mov
xor
push
and
mov
ds
int3
xchg
lds
repnz
pop
jb
iret
das
inc
sub
xchg
mov
jl
xorb
stos
jge
pop
adc
add
imul
cmp
dec
xlat
adc
into
push
xchg
imul
clc
aas
jae
data16
sbb
mov
call
mov
add
xor
arpl
jecxz
lock
xor
xor
out
xor
sub
sub
and
dec
sbb
pusha
lret
rorb
or
pop
hlt
js
in
pop
push
add
adc
mov
jb
fwait
add
into
sub
shlb
fwait
mov
sbb
sub
enter
stos
fwait
push
push
mov
sbbb
sub
pop
sub
fcomps
sub
mov
xor
push
and
xchg
and
rorb
pop
lahf
cmpsl
sti
dec
ret
sbb
dec
nop
mov
imulb
mov
dec
mov
fs
mov
xchg
fiaddl
pushf
outsb
xlat
xchg
xchg
push
xchg
loope
mov
fnstenv
sahf
dec
js
aad
imul
test
jecxz
int3
movsb
jnp
pop
lods
gs
add
push
xchg
popf
cltd
ljmp
mov
rcll
lds
outsb
mov
push
push
repnz
js
jbe,pn
mov
cld
or
sarb
pushl
bound
clc
dec
call
scas
jae
xchg
lods
mov
test
add
lcall
faddl
mov
adc
xlat
stc
sti
in
repnz
rorb
sbb
cmp
mov
or
lock
fstpt
xchg
stos
cmp
fidivs
hlt
cld
cmc
test
mov
fldenv
sbb
push
xorl
and
ljmp
mov
push
out
xchg
push
loopne
sbb
or
out
push
add
mov
and
inc
bound
sub
scas
add
add
repnz
pop
sbb
dec
clc
in
push
pop
push
sbb
push
mov
shll
sti
or
fisttps
insl
dec
inc
daa
mov
and
loop
inc
push
mov
mov
and
sarl
ds
dec
cli
jbe
xor
or
cmp
adc
lret
lock
ror
pop
mov
sub
xor
fiaddl
or
add
pop
jb
dec
mov
test
sbb
xor
shlb
pop
fiadds
outsb
sub
dec
dec
xchg
cmp
and
scas
xor
push
leave
inc
aam
std
pusha
add
adc
jo
popf
fidivs
dec
das
pop
cmp
jl
ss
xchg
inc
mov
cltd
jl
pop
out
dec
sti
sub
aad
jnp
mov
aaa
cmp
cmp
cmpsl
out
aas
mov
into
pop
sahf
test
push
xchg
fwait
jge
inc
pop
mov
mov
xchg
in
icebp
rep
shrb
mov
stos
push
pushf
les
nop
jne
test
mov
push
faddp
xor
scas
fsubrl
and
adc
das
fstl
aas
xor
mov
ret
hlt
add
es
cmp
pop
incb
repz
jle
aas
into
adc
push
not
fisubl
push
sarl
or
loop
aaa
dec
stc
inc
dec
jle
add
jmp
js
and
ja
xor
push
pop
xchg
xchg
loopne
ljmp
mov
out
js
or
adc
sub
mov
mov
jge
and
add
inc
adc
data16
aaa
orl
xchg
scas
push
in
popa
sub
xchg
push
mov
mov
jge
loopne
popf
jmp
xor
jp
xor
cmp
xor
lock
lcall
jge
loopne
pop
sahf
sbb
cmc
xchg
or
ret
push
in
bound
push
pop
repnz
mov
leave
cld
mov
pop
xchg
cli
push
push
jnp
jbe
pusha
or
fcmovne
mov
iret
in
push
mov
les
push
xchg
pop
dec
imul
inc
xchg
sub
jne
out
fcomps
imul
xchg
mov
pop
lods
dec
nop
cs
pop
cmp
push
ret
sub
in
int
mov
inc
lahf
mov
add
xor
iret
sar
push
mov
fcoml
xchg
mov
jo
inc
push
mov
lods
popf
das
ret
xchg
fstpl
mov
push
xchg
scas
push
enter
jnp
cmp
push
jl
pushf
clc
out
push
xor
aad
xor
push
ljmp
adc
push
xor
inc
movl
icebp
jb
bound
mov
ror
mov
into
jb
fs
dec
daa
mov
test
out
dec
rol
mov
dec
aaa
fimuls
push
cmp
sti
insl
stos
sub
and
mov
ret
stos
int
xor
and
add
fisubrs
or
repz
cmp
dec
push
movsb
cmp
lahf
add
lret
std
inc
dec
cltd
lret
popa
pop
inc
cmc
dec
jecxz
sub
aam
lds
cmp
out
pop
xchg
jo
jl
fsub
icebp
inc
push
and
cli
std
mov
jle
arpl
mov
mov
push
rcll
xor
push
out
lret
icebp
faddl
dec
push
popa
jb
and
mov
addr16
dec
mov
sbb
pop
outsb
or
add
iret
pop
fwait
and
lahf
repz
push
inc
icebp
pop
sbb
lock
aaa
mov
stc
mov
clc
icebp
stos
movsb
ja
sub
jge
fdivl
loope
lock
cmpsb
adc
lods
iret
and
jge
les
sub
ja
or
jg
movups
mov
stos
movsl
pop
add
add
or
push
lea
pop
adc
mov
pop
sub
lock
les
repnz
data16
insl
out
loopne
jmp
cwtl
cmp
push
mov
in
cmpsl
mov
xchg
inc
fsubrs
inc
xlat
lret
add
inc
sub
jne
xchg
jmp
adc
push
mov
arpl
jbe
mov
incl
repnz
xchg
add
dec
pop
in
xlat
mov
test
xor
stos
pop
and
pop
in
mov
lret
adc
pop
repnz
sub
std
lret
xor
call
and
sbb
mov
or
inc
imul
adc
jno
loopne
dec
rcll
ss
mull
out
push
popa
fcmovbe
test
jne
imul
inc
mov
mov
cwtl
xchg
shll
cltd
cmpsl
push
out
repnz
push
mov
test
mov
push
push
daa
cmp
push
sbb
add
int
push
out
hlt
ds
jmp
fbstp
out
xchg
add
or
das
xor
pop
mov
and
faddl
daa
dec
mov
loopne
aaa
iret
xor
test
cmp
cmpsb
jmp
dec
popf
leave
in
loop
push
ja
popa
scas
cmp
int3
cmp
push
inc
pop
dec
push
pushf
out
pop
jecxz
mov
fmul
sub
and
stos
xlat
xchg
cltd
mov
jge
testb
pop
push
pop
test
ss
loop
pop
mov
jge
sahf
sbb
lret
or
ja
call
add
push
cld
xorl
xchg
jl
sub
or
lret
daa
push
clc
pop
shlb
test
mov
push
adc
xor
adc
jns
xor
mov
pop
add
xchg
movsb
mov
mov
or
jb
cwtl
ja
cld
jae
pop
aam
filds
jmp
dec
pop
call
rclb
ss
or
lret
mov
xchg
push
shr
sbb
sbb
test
in
mov
clc
movsl
fwait
or
out
scas
push
add
add
jg
aas
mov
pop
xlat
loop
cmp
scas
pusha
scas
mov
ror
es
insb
xor
adc
rcrb
subb
pop
sbb
xor
aad
push
fucomip
pusha
lods
test
push
inc
push
repz
shlb
or
jbe
dec
out
ds
daa
xor
arpl
xchg
push
ror
mov
add
dec
inc
adc
jbe
mov
push
mov
nop
push
sbb
cld
aad
movsb
jl
sti
inc
std
mov
adc
push
out
add
sub
das
xor
mov
popf
cmpl
movsl
pop
lret
cs
lcall
or
test
out
mov
js
push
push
mov
gs
insl
fbld
jnp
push
loop
push
or
adc
or
xor
dec
xor
loop
dec
cmp
sub
sbb
sbb
out
hlt
shl
push
lret
mov
xor
test
mov
or
inc
test
outsb
pop
mov
popf
adc
hlt
lcall
sub
movsl
dec
push
lret
ds
mov
sub
mov
test
inc
and
shll
lods
ljmp
cmpb
in
mov
pop
mov
dec
cmp
mov
inc
addb
insb
and
or
sbb
mov
xlat
dec
mov
sarl
pop
and
add
push
aad
movsl
xor
inc
repnz
leave
addr16
push
push
jne
rorb
daa
cs
cmp
jnp
dec
jbe
aad
scas
dec
sahf
pop
inc
jmp
jmp
and
pop
mov
add
adc
int3
mov
mov
gs
dec
icebp
fistps
pop
je
shrb
cmp
jnp
nop
insl
fstl
cltd
mov
jb
cmp
push
test
xchg
xor
xor
mov
adc
imul
setl
repnz
mov
pop
push
mov
mov
and
cmpsl
cmp
jp
inc
je
test
sub
imul
xor
insb
push
lret
sbb
aad
fwait
sarl
pop
inc
jecxz
xchg
pusha
lret
mov
loop
mov
xchg
mov
xchg
inc
mov
inc
fidivl
or
popa
sbb
add
jb
or
push
sub
mov
cld
sti
jne
movsl
cmp
or
jae
aam
pop
cld
jnp
pop
dec
in
mov
adc
adc
jp
cmc
mov
mov
cmp
je
or
sbb
xorb
sbb
cmp
enter
mov
test
mov
pop
ret
xchg
enter
mov
push
fs
mov
add
or
and
or
out
and
fstpl
into
or
daa
and
pop
fwait
in
dec
and
cwtl
push
rcll
orl
mov
pop
inc
jb
mov
pop
mov
insb
adc
movsl
test
or
push
loope
push
mov
inc
js
outsl
push
and
jecxz
aam
adc
add
jns
xchg
aaa
cmp
xchg
in
or
in
mov
imul
mov
pop
cli
cmc
cld
jecxz
outsl
mov
sbb
pop
push
jp
cmp
dec
test
mov
sqrtps
movsb
js
xor
push
or
bound
movsb
mov
adc
adc
mov
fsubl
test
popf
testb
cmc
jb
dec
sub
mov
divb
clc
cmpb
push
in
pushf
int3
aaa
loope
and
mov
mov
sub
xor
loope
or
mov
out
lods
ds
mov
pop
xor
pop
in
jb
cld
repz
mov
and
jg
mov
mov
movsb
les
outsb
stos
adc
ss
repnz
sbb
jecxz
mov
aam
cwtl
mov
jo
call
jne
pop
or
add
dec
enter
icebp
pop
jle
das
add
rclb
in
imul
xchg
std
jle
jle
cmp
lods
push
repz
mov
inc
mov
push
pop
mov
cwtl
xorb
icebp
xchg
data16
fiaddl
inc
lock
and
or
jge
sub
andl
mov
loop
push
xchg
pop
jle
inc
add
pop
ret
pop
fistl
clc
xchg
sub
and
cmp
inc
aam
popa
arpl
outsb
xchg
dec
outsl
lret
sub
dec
jo
push
lcall
lea
inc
aad
push
pop
push
decl
addb
scas
lret
ja
jecxz
cld
shrl
mov
int3
mov
sbb
fwait
outsb
shlb
push
push
xor
pushf
loop
data16
mov
and
dec
dec
jp
clc
push
and
mov
rcrl
icebp
xchg
enter
test
test
add
push
imul
mov
inc
push
jg,pt
add
popf
aas
pushf
mov
cld
and
stos
mov
jle
adc
stos
daa
pop
es
pop
aaa
shl
aad
stc
mov
push
loopne
push
lea
mov
fimuls
test
enter
fwait
mov
pop
jle
xor
rorb
sbb
push
and
movb
xor
inc
add
xchg
loopne
inc
sub
xlat
mov
and
xlat
lcall
sbb
adc
and
int3
mov
mov
fsubrp
jne
je
xor
lock
mov
jp
lods
ret
xor
mov
stos
cld
in
and
xchg
popf
pop
scas
call
cs
mov
push
pop
ss
insb
in
mov
push
call
clc
insb
mov
fwait
xchg
aaa
int
sbb
cmp
push
mov
and
mov
push
out
mov
pushf
add
cmp
shl
dec
sbb
xchg
dec
push
in
push
jbe
hlt
incb
pop
lret
or
pop
inc
dec
xchg
test
jl
add
in
daa
pusha
and
bnd
divb
sbb
or
filds
mov
jns
arpl
clc
add
and
jl
cmp
push
push
inc
pop
stos
dec
sbb
pop
mov
movsl
repz
mov
sahf
dec
and
test
test
or
call
jnp
mov
cld
out
pop
adc
pop
push
mov
jle
add
xchg
in
add
mov
and
inc
dec
push
jae
test
sbb
lea
push
in
scas
cmp
in
xchg
cmp
rorb
jg
cmp
mov
push
icebp
add
int3
movsl
cmp
fildl
add
pop
test
mov
arpl
pop
fsub
mov
push
dec
push
sbb
leave
pop
jg
andl
sbb
sub
dec
stos
add
xor
lret
pop
jle
pop
or
lds
mov
ss
xlat
inc
jns
out
stc
xchg
and
notb
sub
das
test
cmpsl
gs
inc
subb
add
add
insb
es
fucom
mov
adc
fsubr
dec
imul
rcrb
je
ss
addl
push
push
dec
enter
jecxz
sbb
or
inc
inc
mov
outsl
addr16
mov
insb
pop
sahf
shrl
pop
cmp
cmp
mov
lds
or
fcmovb
aas
add
sub
mov
cmp
mov
aad
jns
pop
cld
test
mov
sbb
sbb
mov
adc
xor
fists
sbb
stos
rcrb
push
ret
sbb
cmpsl
ljmp
call
fidivrl
push
ljmp
push
fs
imul
pop
mov
orl
into
sti
mov
jbe
jns
jae
lahf
mov
xchg
in
pop
mov
push
jmp
add
lret
cltd
cmp
pop
adcl
rcll
orb
fs
mov
jge
pop
dec
and
mov
xchg
into
js
les
xlat
or
jo
lods
adc
xor
loopne
fildll
pop
lcall
bound
cltd
mov
sbb
repz
arpl
mov
int3
xorl
mov
adc
cli
ja
sub
dec
bound
sub
sub
add
dec
push
scas
inc
add
insb
adc
xor
cmp
and
mov
int3
pop
mov
test
inc
xor
aam
iret
jp
and
lods
dec
loop
and
mov
lcall
add
aaa
xchg
subps
insb
add
mov
mov
in
test
fdiv
cmp
jnp
cmp
int3
pop
mov
add
enter
mov
decl
sarb
dec
out
mov
das
push
subb
pop
shlb
xchg
scas
movsb
test
and
out
xchg
mov
pop
mov
add
jbe
push
out
negl
cmp
stc
repnz
fucompp
xchg
ja
inc
jb
lahf
in
movsl
jb
out
pusha
je
shlb
loop
inc
pop
cmp
mov
xchg
ret
or
cmp
arpl
xlat
cli
aaa
xor
add
cmp
shrl
mov
mov
dec
xchg
fcomip
push
mov
fisttps
push
rclb
loopne
add
xor
negb
pusha
sbb
pop
push
inc
popf
mov
jle
in
mov
sbb
test
mov
js
test
push
push
aaa
in
xor
mov
ljmp
enter
and
out
cmp
aaa
mov
cmpb
push
lds
cmp
push
sbb
mov
lods
mov
dec
xchg
adc
fdivs
inc
adc
fisttps
jne
mov
sahf
scas
les
adc
ljmp
test
sbb
mov
roll
mov
iret
int3
jns
iret
sub
int3
lret
xor
push
sbb
mov
push
insb
mov
push
mov
test
jmp
add
add
mov
xchg
dec
movl
xor
dec
push
nopl
or
and
or
pop
call
dec
movsb
add
push
xor
lahf
push
mov
mov
mov
mov
sub
mov
aam
and
ret
in
mov
rcrb
rcrb
idiv
cmp
inc
add
mov
ja
dec
fwait
sub
mov
add
sub
pop
add
inc
rcl
jae
push
mov
pop
adc
fwait
xor
pop
xor
sbb
dec
js
sub
ret
mov
pusha
mov
aas
inc
adc
enter
lret
jne
lock
loope
mov
repz
jecxz
int
xchg
mov
push
jmp
push
jns
ud1
in
scas
lret
dec
outsl
push
idivl
jp
dec
lcall
mov
bound
mov
xor
repz
jle
or
mov
out
mov
aaa
rcrl
mov
pop
push
pop
mov
mov
pop
cmp
aam
cltd
cmp
sub
jns
and
pop
pop
in
xlat
xchg
lock
sub
icebp
cmpsb
out
mov
xorb
aas
add
aaa
mov
loope
stos
pop
icebp
popf
mov
push
jle
push
jns
aam
mov
je
inc
cmpsb
into
stos
push
shl
xor
popl
inc
pop
insl
sbb
cmp
sbb
push
dec
xlat
mov
in
push
sub
sub
push
mov
not
test
idiv
pushl
aaa
test
jbe
mov
pop
push
inc
adc
pop
pop
jnp
idivl
scas
leavew
ficompl
xor
adc
imul
pop
mov
add
and
scas
inc
pusha
xor
pop
and
mov
fcomip
dec
hlt
stos
cltd
popa
hlt
int3
sbb
mov
in
jb
push
sub
inc
mov
js
aad
hlt
leave
cld
dec
mov
push
jp
adc
lret
add
xchg
jle
je
ret
fsubs
stos
mov
xor
shrb
mov
ljmp
xchg
push
bound
imul
and
rcll
cmp
cmp
aad
mov
cltd
ret
cltd
imul
jp
or
add
mov
test
shlb
push
ret
loopne
popa
dec
mov
push
orl
ja
stos
mov
cmpsb
push
or
adc
es
pop
fwait
nop
jns
adc
das
pop
cmpsb
mov
int
sub
lret
and
cmp
scas
dec
lret
adc
ret
gs
cli
xchg
in
out
add
xlat
jp
outsb
inc
dec
in
clc
and
cmp
push
fstpt
iret
fidivs
jnp
push
or
dec
aas
jle
pop
aas
ljmp
enter
xchg
or
cmp
rcrl
push
pop
mov
sub
or
movsb
into
clc
and
insb
outsl
and
cmp
stc
sub
rcrb
fucomip
push
cmp
fidivs
lret
lret
lock
inc
push
jle
pop
iret
or
pop
out
sbb
pushf
in
ljmp
pusha
adc
mov
pop
cmc
jbe
adc
les
cmp
std
xchg
je
sub
mov
lods
push
mov
jp
pop
xchg
push
imul
outsb
pop
inc
jmp
mov
and
sub
rcll
push
stos
push
jb
or
pop
push
cmp
jmp
mov
aad
dec
es
into
dec
cmp
mov
jmp
xor
data16
sbb
icebp
das
xchg
mov
mov
lcall
fldt
inc
mov
cmp
aaa
shrl
out
jae
pop
dec
jbe
addr16
mov
dec
movsb
int3
mulb
jo
pop
and
mov
inc
stc
push
jo
in
adc
arpl
jns
je
dec
pop
and
pop
mov
lds
int3
in
icebp
ss
dec
cld
mov
pop
ret
fbstp
cmp
push
jo
inc
jg
lock
lret
dec
mov
mov
xchg
in
imul
test
jmp
cli
scas
inc
pushf
lods
je
or
mov
es
jne
icebp
push
mov
mov
jmp
push
shlb
xor
inc
jae
and
and
inc
push
lds
fcomp
jp
in
lret
sbb
sahf
sarb
push
mov
sub
cmp
jecxz
push
add
cli
mov
rcr
into
xchg
or
mov
ja
cs
aaa
jle
lcall
dec
sbb
sbb
lahf
jmp
jp
cltd
push
push
or
jne
mov
ss
fistl
mov
scas
xchg
or
sahf
mov
mov
and
xchg
xchg
push
ljmp
in
loop
jg
cld
in
inc
inc
jb
dec
cld
loope
leave
dec
dec
mov
sbb
jno
in
mov
loop
fmull
icebp
subb
pop
mov
mov
mov
mov
cmp
mov
push
test
jl
fiadds
dec
fwait
in
cwtl
es
jne
std
or
repz
sbb
pop
adc
imul
enter
dec
jb
dec
dec
std
imul
sbbl
jnp
lds
mov
jp
pusha
rol
insl
add
mov
out
int3
mov
int3
sahf
leave
imul
inc
push
jbe
insb
jae
ficomps
pop
cwtl
mov
outsb
incb
mov
iret
push
bound
or
pushf
or
pop
inc
pushf
sbb
stos
cmc
in
pushf
outsb
and
dec
repnz
mov
dec
adc
jecxz
fucomi
clc
cli
mov
jbe
push
data16
sbb
idiv
jg
mov
push
mov
inc
adc
adc
sbb
sbb
jo
cmp
xchg
imul
mov
push
ret
cmpsl
out
xlat
cmp
jg
or
jg
jnp
sbb
idiv
push
and
mov
test
push
pop
loope
and
loope
ss
stos
cmp
in
or
sub
hlt
out
loop
sahf
lock
xchg
mov
stos
adc
and
ljmp
pop
mov
add
jbe
push
addl
out
xor
insb
dec
xchg
mov
sub
mov
popf
xor
jno
aam
pushf
cmp
push
pop
fidivl
les
pop
nop
lods
jns
xchg
push
stc
cmp
insb
int
mov
xchg
sahf
daa
pusha
les
jbe
stos
data16
popf
xor
xchg
dec
push
and
adc
mov
or
movsl
je
adc
add
mov
mov
cmova
mov
jg
adc
adc
mov
repz
dec
mov
mov
pop
jg
js
aad
movswl
cli
push
pop
std
movsl
add
popa
mov
decb
mov
dec
jne
je
cmp
sahf
push
das
andb
sub
aas
sub
push
xor
xor
jge
iret
mov
aaa
xchg
stos
push
mov
dec
add
sub
dec
addl
daa
movsb
dec
cli
sbb
out
and
mov
in
jge
or
or
jmp
jmp
sbb
mov
dec
jle
popf
insb
pop
ss
jge
pop
mov
add
shrb
inc
jbe
push
pop
jbe
repnz
sub
jns
or
jns
icebp
int3
mov
pop
test
jle
pop
and
jmp
pop
inc
push
lock
sub
jbe
lods
mov
cld
aam
cmp
jecxz
sub
sti
jle
movb
das
sbb
flds
jl
cmp
jns
mov
in
aam
ds
and
dec
repnz
push
fildll
pop
dec
fprem
loop
lret
movsb
loope
sub
push
or
sarb
inc
push
pusha
xor
mov
fistpll
jns
pushf
cmp
and
rclb
pop
push
lods
sahf
stc
in
ffree
and
daa
js
add
mov
cmp
mov
scas
lods
lea
xor
repnz
pop
and
mov
xchg
mov
hlt
lods
sbbb
arpl
lea
dec
call
mov
mov
cmp
sti
repnz
shlb
jbe
cmp
xlat
out
jg,pn
shll
xchg
and
out
sub
sub
ja
and
test
imull
mov
adc
jo
cmp
jns
test
ror
imul
rclb
mov
imul
ret
jp
mov
and
and
lds
movsb
or
sbbb
jno
dec
rcrl
test
sbb
sahf
dec
stos
pop
aam
pop
xchg
push
xlat
rorb
cld
out
nop
cmc
mov
xor
cmp
daa
mov
push
sub
roll
leave
dec
in
stc
mov
movb
adc
mov
mov
inc
ffree
mov
push
cmp
cmp
nop
and
mov
mov
leave
jge
jecxz
scas
mov
push
addb
leave
stos
xlat
enter
xchg
xchg
sub
jbe
fwait
mov
xchg
pop
sti
cmp
lock
lds
sahf
aam
sub
fnstcw
inc
mov
les
jle
xchg
jns
out
xchg
inc
inc
dec
arpl
std
push
and
xor
imul
idivb
pop
out
mov
mov
loopne
repz
push
int3
push
enter
push
xor
idivb
je
jnp
xor
cltd
push
add
daa
xchg
or
and
lea
lods
out
cmc
add
dec
jmp
shlb
daa
and
pop
inc
add
jge
pop
jmp
xchg
add
mov
lods
lods
test
roll
js
push
xchg
xchg
icebp
sub
nop
out
push
cmpsl
test
cwtl
fisubrl
fcoml
mov
repz
in
int3
negb
cmp
mov
jno
inc
pushf
xchg
daa
jo
popf
fsts
stc
adc
loop
in
faddl
cmp
shlb
push
rolb
push
sbb
cwtl
into
dec
dec
adc
xchg
pop
adc
inc
ret
pop
shrl
adc
adc
pop
sar
mov
cmp
xchg
loope
fsts
push
js
cmpsl
jle
cmp
cli
push
lret
mov
and
sub
dec
or
scas
push
mov
sti
arpl
fdivrs
in
mov
mov
add
xor
inc
pop
js
fabs
aas
data16
stos
push
sbb
notb
push
adc
cltd
sub
cmpl
mov
lahf
adc
or
xor
adc
jae
popaw
xor
xor
addr16
mov
push
push
and
xchg
xchg
popf
scas
cmp
int3
in
dec
clc
sub
lcall
shlb
inc
mov
sub
rolb
sbb
push
and
leave
lret
int3
movsl
popf
push
or
sbb
out
jge
icebp
aad
divl
mov
in
stos
nop
pop
inc
pop
lret
lret
je
call
xchg
sti
imul
mov
in
lods
jl
jns
mov
icebp
fs
push
hlt
test
je
fisttpll
dec
outsl
sbb
ds
mov
imul
loopne
lret
daa
sbb
popa
adc
cmpsl
std
aad
mov
cmp
dec
add
leave
out
mov
stc
lock
pop
cmp
stos
jo
cmp
inc
fadds
push
xlat
lret
lret
jge
lahf
or
inc
pop
lret
mov
shrl
pusha
iret
xchg
into
in
jmp
and
sti
mov
outsb
dec
lods
mov
push
mov
mov
sub
sbb
out
cmp
sbb
xor
add
inc
jns
shlb
mov
insb
sar
inc
mov
adc
in
jp
cltd
pop
loop
jno
push
aam
int
pop
cs
jl
jl
inc
fs
xor
aad
gs
adcb
pop
ljmp
idivb
jno
ret
addl
pop
sahf
mov
std
cmc
add
pop
sub
lods
in
idivl
inc
lcall
add
fdivl
int
sub
rep
fdivs
pop
aam
add
dec
pop
imul
loop
cmp
xchg
lea
dec
pusha
jecxz
iret
push
cld
hlt
test
mov
in
sbb
hlt
hlt
sbb
fwait
mov
das
sahf
lds
loop
ja
add
insl
loopne
dec
sbb
arpl
out
or
leave
sub
fcomi
lods
jns
outsl
push
dec
mov
mov
imul
xchg
and
stos
add
pop
popf
imul
mov
in
push
add
jns
cmp
rdmsr
sub
and
add
out
inc
aad
push
pop
add
int3
rolb
inc
sti
mov
ret
cmp
pushf
addb
int3
jmp
xchg
js
jnp
in
sub
mov
ret
faddl
mov
lods
fildll
fwait
inc
aas
sbb
cmp
xchg
test
pop
xchg
add
rorl
roll
cmp
loope
or
adc
out
jmp
loope
jbe
sbb
mov
andl
pusha
aaa
xchg
adcb
ret
lock
loope
mov
enter
cmpsl
add
in
int3
daa
leave
jecxz
sub
xor
push
mov
loopne
cmc
dec
das
adc
dec
popf
mov
movsl
das
iret
adcl
mov
mov
and
mov
jb
xor
dec
adc
add
mov
add
cmpsl
jge
incl
add
xor
mov
cld
xchg
ljmp
jo
fidivl
cmpb
push
jmp
repnz
enter
jns
and
adc
mov
push
sbb
shl
push
mov
push
rcrb
jl
inc
fnstsw
mov
int3
mov
popa
inc
dec
ret
mov
dec
and
push
hlt
and
pop
in
inc
popf
nop
mov
xor
lea
shrl
cmpsb
or
notl
aad
cmp
sub
and
adc
cmp
lea
stos
or
inc
subb
rorl
xchg
mov
test
out
dec
out
xchg
xchg
cld
jae
pop
cmc
pop
stc
mov
xchg
pop
xor
mov
popa
mov
test
sub
adc
push
cwtl
ss
js
gs
push
or
mov
imul
pop
mov
ljmp
mov
and
mov
adcb
mov
jns
cmp
inc
mov
xchg
sbb
movl
adc
insl
icebp
add
push
xchg
xchg
mov
out
outsl
iret
sub
sarb
pop
shlb
ljmp
pop
mov
ss
bound
fucomi
pop
fdiv
jno
ret
int
push
popf
lock
adc
xlat
mov
mov
mov
data16
jo
push
lea
inc
adc
xor
add
stos
loop
dec
pop
stos
inc
cmpsb
pushf
sub
pop
fcmovnb
cmp
test
xchg
sub
mov
outsb
ror
and
insl
outsb
test
cmpsb
int
jo
aam
cmp
std
mov
cmp
mov
fistps
inc
inc
es
orl
scas
out
bound
ret
lods
dec
or
stos
arpl
mov
sub
or
mov
out
pusha
mov
xchg
mov
pop
push
jne
inc
inc
mov
roll
lcall
outsb
mov
sbb
xchg
loopne
sub
stos
mov
les
leave
dec
sub
fdivr
inc
rdpmc
jl
jae
mov
std
shlb
push
retw
repz
add
les
dec
cmp
push
cmp
lret
inc
jae
arpl
dec
aas
mov
scas
shll
stos
sbb
mov
sub
pop
bound
arpl
dec
or
mov
and
xor
or
jno
mov
inc
out
pop
cld
ja
mov
and
lock
adc
fldt
aad
popa
imul
add
jmp
and
and
andps
xor
popa
mov
roll
cli
enter
loope
push
in
push
test
lret
loopne
push
imul
into
stc
inc
fsubp
pcmpgtd
and
aaa
mov
xor
dec
incl
jmpw
lds
lods
xchg
addr16
inc
jmp
sbb
push
sub
sub
leave
hlt
out
xchg
leave
mov
ja
mov
pop
pop
sbb
mov
jnp
jnp
ds
addr16
inc
push
mov
jl
xchg
pop
aas
or
push
loopne
mov
adc
add
pusha
addr16
bound
add
pop
xlat
out
dec
das
shlb
push
leave
cmp
mov
pop
mov
pop
scas
and
mov
outsl
pop
std
pop
pop
sub
or
repnz
adc
jp
clc
rcrb
bound
out
cmp
clc
fs
dec
add
cmc
int3
cltd
fdivrs
sahf
sahf
mov
scas
pop
or
shll
mov
xorb
mov
ds
jno
xor
dec
xchg
int
add
pop
inc
mov
adc
iret
mov
iret
arpl
mov
and
xor
mov
sbb
or
push
sub
je
stos
outsb
jo
inc
rorb
adc
and
sbb
int
push
sbb
and
jmp
push
lea
mov
int3
lea
push
ds
lock
cmp
icebp
aam
push
cltd
adc
or
outsb
cltd
jp
stos
cwtl
stc
or
popf
push
push
pop
mov
cmp
mov
outsb
lods
inc
push
xchg
add
rcrb
mov
xor
enter
mov
scas
xor
in
dec
mov
pop
jge
mov
jle
dec
or
movsb
dec
sbb
cmp
mov
mov
dec
inc
frstor
les
ds
iret
or
es
es
cmpsl
pop
lods
jmp
push
mov
ljmp
push
insb
or
xlat
add
int3
popf
icebp
adc
aas
adc
shll
xchg
or
xchg
mov
mov
nop
xchg
in
iret
rclb
push
insb
pop
add
mov
lret
jg
xor
cmpsb
iret
pop
loope
stos
jecxz
cmc
shll
dec
jecxz
roll
daa
jmp
pop
xlat
dec
mov
pop
cmp
loopne
mov
xchg
sub
in
inc
push
push
mov
pop
sbb
shrb
hlt
enter
mov
mov
dec
fisttpl
imul
fildl
sub
sbb
imul
fcoml
push
orb
jo
repz
notb
mov
data16
jne
shl
popf
stos
cmp
jne
jg
movsb
mov
push
dec
xchg
ss
inc
cmpsl
push
subb
jae
pop
mov
icebp
hlt
dec
popf
mov
jp
out
ds
cld
ret
push
mov
imul
mov
ss
mov
ret
std
push
mov
repnz
adc
or
in
xor
loop
js
xor
repnz
push
outsb
pop
lods
ret
test
push
add
xchg
jns
lcall
fcom
std
xor
cli
mov
dec
adc
add
aas
lret
sbb
xchg
mov
push
stc
lret
js
ucomiss
imul
dec
mov
lahf
cs
ficomps
lret
and
jmp
jl
lcall
pop
push
and
jecxz
fildl
lods
dec
mov
sub
ja
cmc
jmp
or
jo
sbb
stc
push
xchg
fidivrl
add
mov
adc
or
insl
xor
lret
xchg
xor
lds
xchg
pop
sub
movsb
inc
push
pop
mov
xor
cmp
test
aaa
orl
jbe
inc
loope
push
fdivl
xchg
or
cli
jns
pop
lods
pusha
xchg
cmc
lea
lret
sbb
lahf
push
push
mov
data16
sbb
inc
jnp,pn
call
push
and
dec
sbb
dec
or
inc
clc
mov
adc
and
sahf
dec
add
mov
sbb
outsb
add
adc
out
pop
mov
fmull
and
pop
or
pop
push
xchg
std
insb
into
hlt
outsl
jbe
mov
jns
into
mov
mov
lcall
into
or
jge
jg
and
shlb
ja
sub
ds
out
inc
push
sar
lret
sbb
or
mov
jmp
daa
icebp
cs
xchg
lahf
je
and
push
push
mov
inc
xlat
addl
mov
dec
sbb
stos
sahf
cmp
pop
cmpsb
mov
notl
movsl
sahf
sub
cmpsl
jmp
xor
xchg
inc
hlt
lods
sbb
mov
stos
orl
sub
xchg
pop
mov
lret
jne
xor
jmp
xor
pop
add
into
push
ret
pop
mov
and
sti
int
hlt
popa
fimuls
push
iret
js
les
pushf
cmpsb
and
mov
or
push
ss
nop
inc
pop
or
push
inc
jne,pn
pop
rolb
fwait
les
xchg
cmp
int3
push
mov
rcll
insl
cltd
dec
shlb
sbb
cld
push
idivb
inc
sub
cmc
fcompl
xor
xlat
rcrl
imul
mov
popa
mov
divb
pop
xor
pop
jno
jae
ret
fildll
jne
sub
adc
mov
xchg
mov
enter
pusha
rcll
sub
sub
aas
call
cli
cwtl
aaa
lock
inc
pop
cmp
adc
and
jmp
jge
daa
jns
mov
arpl
int
pop
sbb
in
and
rorb
sub
mov
pop
xchg
mov
inc
in
pop
fidivs
or
sub
pop
xchg
sub
jecxz
movsb
lcall
pushf
out
rcrb
icebp
repz
in
sarb
inc
movsb
lods
outsl
outsb
aad
enter
push
and
push
adc
fwait
cmp
lcall
sub
cmp
out
or
add
pop
fistl
mov
jg
hlt
repnz
pusha
scas
ss
xchg
push
imul
and
or
idivb
cld
dec
in
pop
fcompl
push
jo
cltd
or
push
inc
lcall
mov
loopne
sarl
and
fiadds
jns
cmp
int
jns
cmc
jmp
ja
push
jecxz
hlt
mov
mov
sub
cmp
xor
lods
subl
jbe
ljmp
mov
inc
popf
jmp
lret
data16
and
test
push
cmp
out
xor
inc
test
mov
dec
bound
mov
divl
pop
mov
pop
sub
repz
dec
decb
std
mov
and
sarb
ror
pop
loopne
out
xor
cmp
lods
and
test
sub
adc
mov
movl
cwtl
pop
sub
sub
outsb
scas
sbb
jbe
dec
mov
push
inc
mov
push
sub
sbb
xor
and
mov
adc
and
addr16
mov
xchg
push
cld
cs
mov
inc
xchg
cmp
enter
or
cmp
mov
add
xchg
fldt
call
arpl
js,pn
and
in
or
rcrb
mov
pop
xchg
into
mov
push
idivb
adc
adc
aad
dec
lods
mov
push
insb
movsb
sbbl
jg
adc
dec
sarb
fs
outsb
adc
leave
mov
xor
push
repz
mov
dec
lahf
aas
das
lock
in
dec
rcrl
ja
cwtl
sarl
pop
or
sti
shr
fs
loopne
dec
shlb
ss
sub
push
lods
mov
shll
sub
sub
or
jmp
jle
loop
negb
cmp
xorb
icebp
push
dec
inc
imul
and
fwait
imul
xlat
mov
jnp
sub
pusha
cs
mov
push
lcall
scas
mov
call
mov
shrb
xor
sub
xchg
loop
aad
ficoml
out
cwtl
into
inc
mov
xchg
out
fwait
cmp
inc
jmp
in
or
shll
jnp
mov
aad
adc
sub
notl
mov
and
and
inc
cld
jbe
adc
xor
mov
dec
pop
and
inc
add
lret
sub
jl
in
orb
jmp
sbb
js
add
mov
fcompl
aad
in
clc
ja
cmpsl
out
sahf
adc
loopne
js
jmp
xor
mov
add
jb
lods
test
mov
orl
mov
xor
popf
pop
pcmpeqb
cltd
push
adc
pop
dec
push
xor
fwait
cmp
in
sbb
fidivl
adc
sbb
scas
sbb
sbb
push
andl
inc
inc
inc
or
xchg
jg
push
pop
fistpll
or
and
adc
int
pop
add
xor
xchg
je
mov
jge
loope
jl
xchg
addr16
push
mov
mov
xlat
int3
int
cmp
push
sbb
cli
movsl
insl
fld
pop
mov
faddl
xor
inc
out
mov
or
rcl
insb
jecxz
nop
aad
sbb
and
les
fs
out
xchg
stc
adc
jne
fwait
and
push
sub
adc
mov
mov
mov
xor
cmp
dec
pop
sbb
mov
dec
cs
sbb
aas
mov
ds
cmp
sbb
scas
test
pop
fisttpl
jne
aaa
arpl
xor
es
movsl
xor
shlb
push
mov
repz
cwtl
mov
aad
arpl
in
nop
pop
fwait
inc
mov
xchg
and
lret
cmp
cmp
negl
push
stos
sub
lahf
adc
mov
sub
mov
add
sti
aas
outsl
xchg
add
icebp
inc
push
cltd
movsb
leave
push
pop
jg
sbb
sub
pusha
fs
xchg
in
pop
jo
push
xor
cmpsb
sbb
loopne
mov
add
mov
jmp
cmpsl
shll
lock
add
mov
leave
daa
stos
jp
dec
sbb
lcall
jl
push
xor
push
mov
inc
adc
xlat
jmp
add
mov
lcall
xchg
sub
outsb
pop
push
js
mov
xchg
fdivrp
pop
std
sbb
mov
push
out
xor
aas
loopne
push
jge
xor
sarb
stos
cmpb
push
clc
aad
pop
fcmovb
pushf
adc
xchg
or
push
sbb
js
jg
mov
jmp
mov
xor
repz
or
cmp
jb
xor
fsubrl
jmp
mov
xchg
icebp
outsb
in
lods
cli
fsubrs
mov
xchg
dec
scas
fidivs
xchg
in
popf
dec
stc
mov
call
fnstcw
or
imull
push
pop
ror
fwait
pop
xor
fisubrs
pop
into
add
jmp
push
test
push
data16
loop
dec
dec
jo
fdivrs
fcomp
cmp
rcll
popa
jo
mov
inc
repnz
xor
rcr
imul
stos
sub
aad
rorl
fsubrs
stos
pop
insl
call
pop
pop
outsl
sbb
pop
sti
or
sti
and
ds
faddp
repnz
jg
in
psrlq
xor
test
cs
leave
mov
repz
test
pop
test
pop
jp
xchg
and
or
push
ja
sbb
pusha
sarl
push
inc
cmp
sbb
inc
gs
ss
or
cmp
arpl
mov
push
mov
sbb
inc
push
xchg
push
dec
shrb
lods
in
mov
push
pop
xor
cs
mov
addr16
popf
imul
icebp
push
stos
movsb
hlt
inc
fwait
dec
add
mov
cmp
movsl
mov
mov
dec
mov
or
loopne
mov
sbb
xor
xchg
cwtl
pop
je
push
leave
mov
pushf
sbb
out
fstp
jl
stos
inc
es
insb
pop
xchg
addb
cmpsb
cli
pop
xchg
add
xchg
xchg
and
cmc
push
lods
mov
fcoms
sub
jnp
fiadds
mov
or
jl
imul
andl
dec
and
in
in
stc
imul
xor
add
fwait
add
ret
push
sti
mul
shll
jae
sub
into
pop
rcrl
mov
dec
insb
push
and
mov
cmc
test
testb
xchg
jmp
mov
push
rcr
sarb
notl
adc
mov
or
xchg
mov
stos
adc
loope
test
rcll
push
les
out
mov
sub
addr16
cmc
jo
jle
lahf
sbb
mov
dec
stc
mov
xor
push
iret
and
sbb
in
cmp
inc
les
nop
sbb
das
jge
jg
mov
or
sbb
cld
inc
add
jno
and
pop
out
cs
leave
xor
sar
mov
bound
js
filds
out
divl
popa
out
mov
int
cltd
lods
subl
shll
sbb
mov
xchg
hlt
mov
shrb
push
aam
mov
js
add
jge
xchg
add
out
sub
ds
jecxz
lcall
outsb
inc
loope
dec
sub
nop
inc
ret
cmpsb
gs
push
insb
mov
into
dec
dec
imul
icebp
cmp
shl
push
push
pop
cmp
mov
mov
cli
shll
ret
mov
jno
ss
lea
test
fcomps
test
sahf
sti
push
sahf
rcrb
ret
mov
add
fiaddl
repz
and
push
xor
sub
jecxz
mov
mov
xor
or
cmpsb
les
mov
mov
mov
sbb
fnstcw
push
jecxz
add
mov
xorl
sub
jl
je
scas
xchg
adc
out
add
pop
lret
lret
dec
ds
and
inc
popa
test
ss
mov
push
mov
jle
data16
loope
pop
imul
lret
out
push
cmp
cs
mov
insb
sti
addb
stc
rclb
sbb
rcll
and
dec
adc
test
xchg
mov
shrl
stos
ss
in
add
pop
dec
mov
repz
stos
in
scas
xlat
jns
movsl
insb
jl
jmp
jge
cltd
out
xchg
mov
cs
pop
insb
mov
fwait
jle
mov
cli
cmp
outsb
rol
repz
cmp
repnz
inc
js
mov
dec
test
sbb
leavew
out
divl
cmpsb
les
inc
rol
xchg
hlt
lea
sub
inc
inc
xor
jg
inc
adc
in
cltd
fidivs
push
jnp
das
pop
outsb
and
xchg
test
push
push
rcpps
and
frndint
jl
push
mov
xlat
and
and
aam
push
pop
push
cmp
jecxz
fists
cmc
dec
mov
pop
dec
mov
mov
dec
xchg
fst
in
xor
mov
mov
push
jbe
js
or
out
xor
xor
clc
ret
push
mov
inc
mov
leave
sbb
pop
out
outsb
dec
aaa
outsb
sub
cs
mov
cmp
xor
xor
cli
push
loop
dec
loope
arpl
fildl
sbbb
push
outsl
lcall
test
add
lcall
jnp
nop
mov
cmpsl
frstor
inc
repz
add
test
push
or
les
mov
sarl
push
sub
add
push
xor
addr16
pop
mov
add
movsl
inc
mov
fisttps
and
divl
inc
out
lcall
inc
repz
cli
xchg
push
jne
jns
jnp
out
fs
mov
push
sti
and
push
push
lds
nop
loopne
and
xor
das
fisttpl
jg
sub
mov
fwait
call
xchg
mov
data16
mov
pop
pushl
out
ret
dec
cmp
xlat
mov
out
imul
outsl
inc
clc
loop,pn
mov
enter
mov
fwait
mov
fwait
mov
dec
and
mov
daa
aas
shlb
lret
in
inc
sbb
pop
stos
std
outsb
jbe
cmc
xlat
ds
inc
int3
dec
xor
insl
xor
and
ret
ljmp
aad
xchg
xlat
ss
fstps
gs
add
mov
cmp
xor
inc
daa
cwtl
or
inc
cwtl
mov
inc
jecxz
movsl
movsb
push
subl
mov
insl
inc
adc
mov
out
jns
cld
nop
xchg
mov
aas
mov
into
xor
lea
incb
lret
pop
mov
xor
imul
data16
test
hlt
sub
insb
insb
and
mov
mov
cmp
bound
or
xor
push
jge
mov
inc
and
test
xor
lea
call
inc
mov
aam
shrl
push
pop
scas
fs
mov
mov
mov
aas
inc
or
lcall
xor
and
pop
frstor
adc
dec
enter
into
or
dec
push
cmp
andl
leave
out
xchg
or
insb
xor
sbb
hlt
je
and
xor
sub
fs
lods
mov
das
xchg
cltd
inc
dec
mov
pop
or
pop
adc
inc
mov
jmp
insb
sub
mov
lcall
mov
imulb
inc
call
sti
push
shl
stos
ljmp
js
nop
imul
inc
dec
imul
jp
ror
sub
pop
stc
aaa
pop
adcb
fwait
mov
pop
cmc
push
in
adc
push
stos
jp
xlat
imul
fimuls
loope
or
mov
cmc
mov
and
int3
ds
adcb
and
xchg
pop
ffree
sub
fs
mov
clc
loop
jecxz
mov
pusha
mov
sbb
inc
mov
inc
mov
imul
or
mov
nop
mov
or
cwtl
cwtl
imul
jp
sbb
je
in
outsb
push
daa
ds
outsl
daa
imul
aas
sbb
lods
adc
rclb
and
negb
das
xor
cmp
dec
push
lcall
push
outsb
into
mov
std
lds
xor
loop
lock
dec
dec
shll
and
mov
xchg
in
pop
jns
inc
push
xor
inc
mov
mov
loope
push
movl
dec
xor
mov
lea
stc
dec
aad
cmp
jns
mull
xor
lock
rcr
xlat
or
xchg
push
or
add
sbb
fsubrp
inc
xchg
icebp
popa
mov
or
aaa
pop
fwait
ljmp
fstl
inc
push
ja
inc
and
addr16
inc
gs
pusha
lahf
or
xor
xor
mov
cmp
or
pop
jl
out
ror
cld
dec
xchg
push
mov
pop
add
mov
mov
fisttpl
xor
subb
xor
jp
jne
xlat
imul
cmp
dec
out
adc
adc
xchg
sub
scas
or
mov
aam
jmp
or
sbb
mulb
jbe
or
sub
mov
push
mov
fdivrl
inc
mov
mov
mov
sbb
in
and
xchg
insb
loope
push
cmpsl
mov
add
sbb
dec
or
dec
xchg
push
mov
je
jmp
inc
in
in
dec
fldenv
das
inc
mov
movsl
mov
xchg
movsb
call
add
xor
scas
adc
mov
test
movl
ja
shrb
in
mov
insb
ds
out
jo
outsb
xchg
add
in
inc
add
movsl
pop
movsb
and
int
xor
inc
leave
push
mov
sub
mov
push
push
mov
jno
insb
pop
orb
sub
fisttps
push
stc
fisubrl
jg
mov
jbe
popa
out
ret
mov
mov
push
mov
push
and
out
cmc
xlat
notb
out
inc
adcl
bound
popa
sbb
iret
cmp
add
push
xchg
popf
ds
lods
jle
add
out
ss
push
dec
repnz
ss
inc
test
sub
sub
inc
andb
xchg
add
jmp
sti
adc
or
jecxz
int3
imul
push
adc
out
push
clc
and
sti
xchg
lea
jg
jne
out
and
dec
cmp
shl
push
cmp
data16
and
scas
jg
adc
cltd
xor
sbb
shrb
xchg
fiaddl
aad
fidivrs
push
pop
sbb
xor
jnp
outsb
add
lahf
enter
outsb
loopne
adc
jne
mov
lcall
push
stos
mov
movsl
and
repz
rol
jb
mov
cmc
mov
inc
dec
hlt
imul
arpl
cwtl
adc
mov
mov
je
push
cli
jle
xchg
mov
and
ret
jb
adc
sbb
out
adc
popf
dec
inc
pop
inc
xor
pop
lahf
fstpt
xor
xchg
add
pop
mov
imul
add
sub
adc
jae
add
in
sub
popa
pop
loopne
aad
notb
push
lock
push
aaa
and
jmp
push
sub
mov
dec
xchg
aad
sbb
ds
je
pop
mov
and
mov
xor
ds
pop
sbb
mov
jl
jge
xchg
add
bound
jne
push
dec
mov
sub
xor
cmp
sbb
xchg
in
adc
sub
jle
mov
add
cli
jecxz
sub
dec
or
mov
pop
xchg
jp
mov
test
add
cmpsl
repnz
lret
push
or
aaa
stc
ja
test
ljmp
ljmp
int3
push
push
and
loope
push
xchg
inc
adc
jle
adc
and
ljmp
notb
xor
ja
test
pop
in
dec
out
pop
clc
or
mov
push
hlt
sbb
lods
pop
hlt
sub
in
ret
lock
pop
movsl
push
push
daa
pop
fnstcw
imul
into
sbb
mov
enter
in
ret
adc
and
push
mov
xchg
loope
testl
fs
sbb
sub
shrl
iret
mov
or
lea
add
call
ss
cs
pushf
fsubl
aas
popa
cmp
pop
mov
inc
movsb
sbb
or
push
jb
mov
aad
inc
outsb
mov
nop
adc
xor
xor
std
add
js
adc
and
or
jl
adc
cltd
outsl
push
mov
test
int
call
mov
jbe
daa
rolb
hlt
pop
dec
pop
repz
mov
or
dec
sbb
sarb
push
pop
xchg
mov
push
lea
xor
push
mov
cmp
jle
aam
outsl
xchg
orb
sbb
cmpsl
push
xor
popa
sub
sbb
aam
dec
les
inc
stos
in
push
xor
pop
sub
shr
aad
movsb
mov
push
xchg
enter
sbb
mov
lock
jecxz
pop
fisubl
pop
out
rcrl
mov
add
push
icebp
push
sarl
xchg
jno
mov
jl
je
rcrb
xor
rorb
lcall
lea
lret
fimull
clc
jo
pop
and
addr16
int
test
std
pop
sbb
loopne
pop
stc
push
ja
cmp
push
cli
out
and
cli
lods
sbb
std
xor
xor
lcall
pop
fadds
adc
dec
stos
lock
sub
lea
movsl
add
pop
add
into
mov
popf
sbb
jbe
mov
jge
lds
test
and
mov
notl
inc
in
or
push
scas
inc
pop
fidivs
gs
sbb
push
mov
lcall
mov
popf
sti
jge
jg
mov
ret
pusha
mov
or
mov
push
pop
das
sub
push
mov
or
loopne
loope
mov
ficoms
pop
scas
jl
mov
xor
adc
pop
dec
jo
wbinvd
pop
sbb
xchg
jbe
dec
andb
fnstsw
je
jle
bound
outsl
xchg
pop
scas
enter
inc
dec
int
mov
pop
out
or
es
pop
dec
sti
insb
jns
mov
outsb
adc
lock
mov
pmaxsw
nop
cld
mov
insb
mov
aaa
cmp
pop
in
push
fsubr
sti
gs
mov
adc
and
roll
icebp
adcw
enter
iret
mov
push
push
icebp
mov
cld
sub
fcomp
mov
ret
lea
xchg
int
loop
pop
jae
xlat
xchg
inc
cmp
cld
push
hlt
movsl
test
sbb
ja
or
pop
ret
jge
scas
notb
xchg
and
jg
stos
andl
sahf
mov
dec
test
cli
arpl
xorb
pop
fwait
mov
leave
inc
lods
pop
insl
bnd
xbegin
insb
xlat
dec
inc
into
ret
hlt
xchg
loopne
mov
push
adc
sbb
jmp
mov
inc
sahf
lahf
aad
cmp
faddp
in
or
dec
dec
insb
or
shrb
cld
push
jne
mov
stc
push
sahf
jecxz
cs
xchg
xlat
inc
mov
pop
add
xor
pusha
push
and
lods
xor
pop
mov
into
jo
or
jg
jp
aaa
mov
pop
jno
xchg
mov
pop
stos
nop
mov
rcrb
out
push
sarl
adc
mov
adc
in
mov
mov
ja
mov
ret
mov
icebp
sahf
sti
lds
movsb
push
cmp
daa
lcall
adc
fdivl
add
jae
jno
cwtl
mov
sbb
js
jmp
in
mov
scas
or
sub
jbe
pop
jp
jle
ret
sub
daa
xor
lcall
pop
jp
sub
cmpsl
pop
addl
mov
cltd
xor
ljmp
pop
inc
std
cld
fdivl
ss
mov
leave
clc
lods
cli
enter
add
fs
pusha
push
mov
mov
out
nop
sbb
shr
and
fidivrs
popf
sub
test
sub
adc
ljmp
ljmp
pop
fldenv
in
mov
sub
inc
pushf
les
mov
cmp
mov
out
xor
das
mov
iret
or
add
xor
mov
and
jl
ret
test
pop
popf
xlat
jae
jno
repnz
mov
dec
arpl
push
out
cltd
loope
sti
sbb
fldl
cli
mov
mov
jp
pop
loopne
fisubrl
cltd
mov
in
push
sar
fs
xchg
in
scas
sub
nop
repz
pop
xchg
dec
orl
lods
out
fsts
loopne
and
bound
cli
or
insb
and
sti
scas
je
add
add
ljmp
mov
aaa
xlat
xchg
mov
and
sub
andb
jne
and
xlat
iret
push
imul
rcr
cwtl
cmpsb
jg
ja
loopne
loopne
mov
mov
cmp
inc
outsl
pop
scas
incl
cmp
scas
mov
adc
xor
cmpl
rorl
xchg
outsb
int
pop
mov
mov
je
dec
push
sbb
jmp
je
ret
cli
mov
movsl
pop
repz
jo
ret
and
stos
lahf
dec
les
xlat
dec
jmp
mov
dec
stc
and
clc
cmp
push
mov
xchg
push
das
mov
imul
jg
imul
aam
insb
out
xchg
call
adc
clc
adc
cmp
push
test
test
psubb
inc
fs
inc
adc
push
jle
dec
jns
push
add
insl
push
popf
dec
sbb
add
add
mov
and
cmpsl
out
fmuls
outsl
adc
xchg
ret
sub
push
pop
mov
and
outsl
dec
xchg
rcll
xor
mov
push
aam
gs
jae
or
in
push
lcall
inc
jnp
inc
out
rclb
pop
mov
dec
add
lret
leave
xor
mov
mov
sub
xchg
xor
pop
fucomp
adc
jns
jne
fwait
or
sbb
fsubs
and
imul
jbe
gs
imul
jb
xchg
mov
mov
ss
jge
in
movsl
cmp
jle
and
or
fsts
scas
repnz
inc
das
test
adc
fimuls
mov
or
movsl
push
jno
notb
or
lock
mov
mov
lcall
adc
int
pop
jle
pop
pushf
dec
bound
test
pop
mov
mov
cmc
insl
cmpsl
fistl
pop
jb
ja
pop
std
xor
inc
mov
fisubs
fsubrs
sahf
aas
inc
aaa
xor
mov
fldt
inc
adc
push
leave
movsl
push
mov
shl
out
push
shlb
repnz
jl
mov
out
cmc
shlb
and
js
inc
jmp
imul
xchg
push
add
mov
enter
cmp
push
mov
mov
cmp
add
cwtl
pop
mulb
mov
or
or
mov
ret
movsl
test
daa
mov
idivb
mov
das
inc
xchg
cmpsb
cli
jmp
cld
sahf
xlat
cmp
clc
add
int
popf
xor
aaa
dec
pop
mov
andb
push
push
mull
scas
fwait
and
jne
sbb
das
pop
push
dec
popf
sub
loopne
int
stos
add
adc
mov
test
pop
outsl
cmpsb
or
lea
shrl
ljmp
imul
pop
jo
mov
pop
jae
inc
outsb
cli
out
in
es
outsb
jb
cld
pop
xor
jb
add
pop
insl
bound
xchg
out
push
gs
and
pop
fnsave
aad
out
pop
lahf
or
sbb
test
negb
mov
into
pop
lock
xor
outsb
dec
mov
lea
cmp
mov
push
push
jle
xchg
xchg
clc
pop
and
and
out
inc
xor
and
imul
or
out
rorb
mov
cmp
lods
mov
pusha
sub
pop
sub
lods
push
inc
test
int
dec
mov
sub
bound
std
xor
fwait
sar
jge
aaa
jne
subb
cmp
adc
mov
push
enter
out
xor
jge
push
scas
mov
inc
and
data16
sti
stc
rorl
sub
xor
aad
add
xchg
lds
insb
nop
jo
packssdw
jle
mov
ltr
test
sbb
shlb
cmp
sarl
ret
shlb
cmp
loope
std
les
lods
inc
inc
sub
inc
xor
jp
jmp
mov
xlat
xlat
mov
inc
imul
je
push
jne
out
cmc
mov
lock
push
pop
push
mov
xchg
int3
addr16
push
pop
cmp
insl
jmp
not
das
les
jae
jecxz
shl
mov
cmc
xor
mov
dec
push
xor
xchg
push
fnstcw
mov
sub
scas
jo
jbe
sub
stc
insb
clc
mov
cld
mov
xchg
jnp
pop
cli
enter
scas
xchg
mov
adc
xchg
inc
ret
jge
lea
out
and
cmpsb
mov
lret
stc
mov
in
stos
aaa
jmp
sub
add
int
sub
xor
inc
ret
push
out
sbb
outsb
sbb
scas
pop
les
cltd
outsb
dec
in
rcrb
pop
mov
dec
sbb
stc
lods
jecxz
repnz
jp
fmull
xlat
in
inc
or
jb
jge
stos
aaa
test
inc
repnz
and
in
push
jge
hlt
dec
inc
pop
aas
jae
jle
xor
mov
ljmp
aad
movsl
out
inc
scas
push
sub
rolb
outsl
dec
lock
sub
mov
insb
mov
sub
test
fwait
andb
dec
adc
out
push
mov
lock
dec
std
jb
adc
lods
in
test
lds
shl
sub
dec
pop
or
test
push
subl
icebp
xlat
fbstp
sbb
xor
popf
add
dec
popa
mov
jg
inc
pop
lahf
or
andl
add
outsb
push
cmp
sti
sbbb
incb
xchg
dec
xchg
imulb
push
cmp
in
push
aaa
enter
xor
fwait
addr16
nop
sub
and
rcrl
ret
dec
push
lret
mov
call
push
aaa
push
sbb
push
push
mov
leave
pop
inc
fucomp
inc
fs
data16
es
xchg
sbb
repz
mov
xor
scas
mov
mov
and
xor
or
jnp
fildll
lock
lcall
mov
add
push
jo
lret
mov
into
out
xor
xor
jle
sarl
add
inc
in
xor
test
pop
mov
mov
or
rorb
div
out
js
sti
lret
aad
lcall
or
pop
loop
xor
pop
out
mov
push
aam
aad
aaa
ja
in
fimull
outsb
mov
xchg
faddl
sti
ja
mov
jg
ja
mov
xchg
jl
or
jno
pop
in
addr16
cmp
mov
insl
sub
push
inc
dec
outsb
les
stos
repz
and
xchg
dec
pop
out
call
jnp
fiaddl
aas
xchg
pop
clc
add
aad
fcom
scas
test
ret
inc
movsb
lock
adc
jecxz
fsubrs
jp
test
and
mov
mov
addr16
xor
stc
mov
fiaddl
jge
xorb
mov
rcll
ja
addr16
sub
aas
inc
or
leave
loopne
scas
shll
or
inc
pop
and
scas
pop
cmc
push
orb
setl
ret
orb
shrl
arpl
or
out
push
into
inc
iret
add
xlat
fisttps
loopne
mov
aad
dec
int3
ljmp
push
fadds
lods
clc
and
sbb
inc
rcl
movsl
push
cmp
inc
ds
push
push
mov
jns
loope
aas
sbb
in
lea
xor
aam
shlb
cmp
cmp
or
addr16
push
movsb
in
cmp
mov
and
inc
push
cs
add
push
adc
lret
ds
arpl
and
inc
sbb
mov
stc
stos
jmp
xchg
into
sbb
push
cmp
imul
lahf
repnz
outsb
insb
repz
in
cmpsb
adc
pop
mov
test
inc
sub
mov
and
mov
cmp
jmp
in
imulb
push
fstpt
notl
mov
jae
rolb
popa
les
fisubrs
rcll
jno
xor
shll
cwtl
sub
adc
in
adc
dec
jge
imul
decb
cmp
sbb
sub
lahf
addr16
inc
jg
add
ret
mov
testb
sub
xchg
std
into
stos
xlat
sbb
jecxz
add
ja,pn
mov
cmp
fadds
test
jns
ficompl
fstl
add
pusha
mov
mov
push
add
cmp
sub
test
inc
jle
pusha
loop
mov
cmpsl
and
adcb
dec
xor
xlat
sub
sub
fisubs
and
xchg
cmpsl
jns
xchg
adc
pop
cmp
pop
in
pop
inc
or
out
cmpl
aad
jg
add
xor
lds
insl
jge
insb
or
push
and
pushf
inc
bound
into
lods
inc
ds
jne
mov
xor
dec
fdivrp
stc
lret
inc
cmpsl
dec
test
repnz
shll
icebp
mov
add
add
mov
leave
in
mov
fcomps
cmpsb
cli
cmpsl
push
inc
sub
xchg
mov
cmpsb
xor
xchg
in
pop
sbb
mov
nop
hlt
sub
inc
or
inc
xchg
cmp
jmp
add
addr16
cli
stc
jo
ds
scas
xor
cmp
cmp
repnz
fistl
mov
mov
sbb
movsl
inc
jae
cmp
movsl
xchg
outsl
cmp
sbb
pushf
scas
cmpb
pop
cli
push
ret
mov
pop
out
inc
jb
xor
pop
adc
loop
mov
mov
cmp
lods
fcmovnb
jbe
inc
popa
ret
sub
inc
sti
arpl
and
aam
jl
es
or
stc
in
push
push
jp,pn
inc
jns
fisttpl
movsl
mov
lods
pop
fisubl
sbbb
es
bound
sub
jae
sub
insl
xor
ljmp
bound
scas
pop
jl
ds
jb
mov
test
in
imul
jb
sbb
lret
inc
fwait
ret
js
inc
filds
daa
xor
jo
pop
pusha
jb
push
sbb
jo
addl
hlt
cmpsl
inc
lods
test
mov
das
jb
inc
mov
aas
dec
add
insl
lret
mov
adc
lods
nop
je
sbb
daa
adc
push
stos
in
mov
push
adc
mov
ljmp
std
dec
dec
jbe
das
repz
adc
das
insl
stc
loope
xor
push
je
or
movb
mov
call
movsl
int
dec
adc
sbb
mov
scas
mov
push
nop
cwtl
mov
add
mov
and
out
xchg
repnz
jg
and
loope
dec
sbb
fildll
clc
pop
loopne
adc
xor
xlat
dec
sahf
sahf
movsb
adcl
pushf
xor
jp
pop
or
iret
cmp
mul
sbb
cmp
sub
outsb
xor
pushf
in
push
adc
lahf
mov
lods
int3
xchg
ficomps
stos
aas
les
jp
jae
dec
aad
jmp
or
xchg
push
inc
sbb
push
jae
movl
icebp
push
mov
ljmp
xchg
mov
push
adc
stos
xor
cwtl
mov
out
fwait
pop
lods
mov
rol
aaa
dec
mov
push
ss
ja
lods
jo
dec
or
xchg
cmp
mov
je
pushf
add
orb
dec
arpl
push
stc
push
and
inc
cmp
sahf
xchg
push
mov
notl
loopne
lea
mov
aas
adc
mov
pop
mov
rcll
ljmp
push
movsb
ret
pop
in
sub
inc
jne
sarl
push
push
pop
cld
movsl
shr
pushf
mov
cmpsl
jl
mov
dec
push
inc
add
std
call
out
sub
scas
fs
int
push
test
or
cwtl
data16
dec
scas
enter
lret
cs
scas
hlt
jno
into
mov
sahf
orl
xchg
adc
sahf
or
cmp
lret
jnp
cmp
mov
adc
and
addr16
mov
cld
dec
mov
insl
xchg
fcomip
xchg
cmc
out
stos
pushl
push
mov
mov
js,pt
clc
inc
pop
enter
repnz
jnp
test
out
leave
jne
dec
adc
jecxz
cmp
mov
shlb
and
repz
jmp
aas
fbld
push
cmpsl
fisttps
pop
dec
negb
jo
dec
cmpsl
or
stos
scas
push
add
hlt
cmp
enter
aas
aam
adc
push
mov
xchg
sti
outsl
xchg
cltd
fildll
out
add
cmc
shl
mov
ret
push
pushf
add
cmp
daa
jle
leave
xchg
pushf
mov
add
xor
imul
es
das
aad
push
add
pop
aas
adc
loope
loope
lret
stos
in
test
sub
add
mov
jnp
shlb
pop
int3
movsb
mov
inc
outsb
lret
bound
push
jmp
sbb
sbb
mov
out
faddl
xchg
outsb
in
mov
outsb
rdtsc
mov
add
or
fstl
aaa
fldcw
xchg
int3
bound
xchg
call
mov
xchg
mov
push
in
mov
inc
xor
in
mov
push
or
jl
pop
out
or
sub
dec
aad
js
cwtl
dec
jl
popa
and
cmpsb
inc
pop
fiadds
xor
repz
enter
je
scas
sbb
dec
adc
cld
fcompl
fstpt
in
dec
jbe
fdivrl
inc
inc
mov
jp
movsl
incb
addb
dec
les
daa
sbb
mov
roll
lret
mov
enter
lahf
push
int3
and
in
rorl
push
and
fdivrp
stc
test
pop
jmp
jno
push
ret
js
pop
pushf
and
mov
pop
daa
jns
icebp
stos
in
jnp
jae
mov
and
cs
test
decl
call
add
icebp
xorl
mov
es
fs
mov
mov
mov
mov
adc
cmc
std
mov
cwtl
xor
call
cmp
cli
add
or
imul
adc
inc
test
dec
add
adc
leave
mov
out
dec
mov
into
jno
ret
sbb
sbb
or
xchg
out
fisttpl
int
daa
int3
loop
stos
gs
stc
rclb
push
inc
fldl
mov
jns
sub
test
stos
and
adc
mov
insb
pop
repnz
imul
cmp
sar
mov
sbb
cmpsl
jmp
jg
hlt
jo
mov
cmp
gs
shll
cwtl
and
mov
lret
cmpsb
fisubl
jge
xchg
ret
mov
test
adc
push
jb
inc
or
xchg
push
pop
lds
adc
fs
inc
test
popf
mov
cmp
mov
xchg
cmp
pop
ljmp
int3
aad
add
add
inc
in
pusha
inc
sbb
mov
adc
xlat
arpl
mov
cli
mov
jb
pop
test
dec
dec
or
lods
sub
cmp
hlt
adc
daa
js
jnp
lock
jne
sbb
pop
mov
loop
test
cmpsl
jl
xor
xor
adc
mov
es
mov
loop
aad
ss
mov
and
jge
mov
les
int
inc
adcb
and
mov
fwait
and
in
outsb
cltd
aaa
jg
sti
pop
fcmovnbe
pop
lock
mov
add
jae
repz
add
sbb
mov
xor
in
jp
sbb
inc
cli
xchg
jmp
pushf
in
fsubrs
sub
and
mov
jae
or
mov
outsb
mov
mov
outsb
ljmp
test
icebp
mov
imul
jl
dec
mov
push
sub
stos
cld
xor
pop
sub
xchg
or
sub
jl
mov
hlt
adc
sahf
inc
or
xor
mov
xchg
adc
mov
inc
inc
pop
jnp
lcall
push
jmp
inc
lock
gs
inc
aas
call
lahf
jge
cmp
fcoms
lahf
mov
push
nop
int
fnstcw
and
sbbl
add
int3
push
aaa
movsb
stc
notl
xorb
xchg
in
inc
add
and
hlt
inc
aaa
inc
rolb
rcrb
jge
out
adc
mov
das
sub
adc
cwtl
sub
loopne
mov
push
aas
add
loopne
lret
pushf
mov
js
inc
inc
inc
icebp
ss
mov
dec
add
imul
cmpsb
mov
ret
push
pop
pop
jle
divl
xor
jns
inc
adc
stos
or
cmp
ret
cmp
in
adcl
pushf
rcr
fnsave
dec
pop
add
hlt
negb
dec
fcomi
cmp
pop
dec
cmp
pop
das
test
sbb
mov
int
out
imul
mov
dec
jge
lcall
push
jnp
fs
pushf
scas
mov
push
add
movsb
mov
loop
pop
xor
pop
in
jno
xor
test
insl
add
mov
mov
xchg
lock
mov
ja
in
mov
fdivp
rorl
and
sti
rorb
or
add
and
ds
sbb
sbb
jo
adc
mov
push
test
shr
stos
bound
jno
pop
dec
js
test
stc
mov
int
adc
and
std
call
insl
and
jo
icebp
test
xchg
jp
pop
sahf
lret
bound
rol
pushf
test
jne
scas
jle
pop
or
push
mov
xchg
xor
jo
scas
or
fcmovbe
sub
cmpsb
movsl
push
dec
rcrb
sub
push
mov
and
cmp
push
jecxz
out
sub
mov
fisubrl
sub
popf
js
icebp
pusha
rcrb
push
test
sbb
jmp
scas
cmpsl
aaa
mov
je
jp
jnp
test
push
rcll
std
dec
test
dec
out
push
enter
roll
es
adc
xchg
adc
mov
testl
lea
sahf
repz
mov
in
xchg
sbb
mov
ss
push
jmp
cmp
sub
js
mov
add
push
cmp
xchg
out
imul
inc
xchg
shll
rolb
and
pop
mov
adc
pop
mov
test
cltd
lods
push
sub
add
pop
mov
mov
sbb
cmp
es
xchg
push
into
push
rcrl
rolb
xor
call
lods
test
add
mov
jle
xlat
movsb
mov
push
jle
je
xchg
pop
pop
in
mov
es
jb
mov
adc
xor
aam
jmp
xchg
fisubrl
push
xor
mov
pop
cmp
lahf
arpl
mov
xor
pop
stos
gs
add
adc
pusha
jmp
loop
xor
pop
std
leave
mov
roll
or
mov
cmp
mov
mov
fwait
out
jns
fcomi
jo
ret
inc
mov
pop
repnz
nop
aam
out
pop
in
hlt
cmc
and
mov
add
stc
xchg
outsb
lcall
cltd
mov
dec
xor
inc
lahf
jnp
enter
ds
mov
xor
push
inc
add
fdivs
outsb
add
or
mov
test
push
mov
seta
das
insl
sbb
bound
jecxz
call
ss
arpl
adc
or
stc
mov
mov
dec
in
jb
xor
mov
movsb
add
cmc
lea
outsl
idivl
in
mov
ret
adc
movsl
and
scas
ret
enter
adc
and
pop
test
imulb
push
jmp
xor
in
jmp
sbb
mov
mov
sarb
fadd
mov
subb
dec
xchg
mov
jnp
repz
jae
mov
pop
sbb
pop
mov
pop
aad
pop
xlat
mov
mov
pushf
or
adc
pop
loopne
push
add
repnz
xchg
mov
xor
jge
ss
inc
cltd
lea
xchg
cld
pop
not
and
mov
pop
jns
push
stos
push
fdivrl
mov
test
clc
add
ljmp
jae
jb
dec
ljmp
jecxz
pop
testb
jl
rclb
test
mov
outsb
iret
iret
pop
insl
jmp
ret
or
mov
imul
and
jge
xchg
loop
mov
adc
xor
pop
ret
les
scas
cmpsb
scas
fs
popf
loop
jnp
dec
mov
jnp
loopne
cmp
test
push
cltd
push
repz
ret
fdivrs
push
pop
or
mov
inc
adc
and
and
cltd
inc
add
add
repnz
push
scas
inc
fwait
rorl
rcrl
pop
rclb
stc
fcmove
clc
ret
pop
push
ss
pop
imul
cmc
jae
jns
jmp
mov
sbb
sub
pop
add
loope
xchg
out
push
sbbb
pop
and
inc
pop
imul
add
inc
inc
fnstsw
mov
dec
push
push
adc
mov
and
or
cmp
xor
call
sahf
loope
rorb
lods
dec
fsubs
insl
jno
into
test
and
pop
fdivs
sbb
sub
xchg
or
fstl
xor
loop
movzbl
push
inc
test
jno
adc
orb
cltd
test
das
rorl
and
inc
pop
xchg
push
mov
int
daa
in
xorb
stos
sbb
jne
test
pop
xchg
in
ja
ja
xchg
dec
mov
movsl
sti
fldt
les
aad
xchg
jae
inc
test
jmp
sub
xor
push
into
xchg
sub
sbb
nop
out
adc
movsb
jmp
and
sub
jbe
sbb
lret
push
mov
push
jne
jl
sub
mov
and
mov
adc
pop
add
dec
in
in
cltd
inc
ds
push
push
cld
adc
mov
pop
loope
call
xor
adc
rol
push
lcall
jne
lahf
test
inc
lock
lods
adc
movsb
push
jo
movl
add
sub
or
fdivrp
adc
cmp
fistpl
jo
fs
or
aad
inc
jge
mov
add
pop
push
testl
subl
cltd
cmp
xor
adc
jbe
mov
mov
ficompl
xor
aad
jns
cli
mov
adc
inc
jno
xor
test
add
fdivrl
cli
iret
cli
arpl
lcall
add
jo
mov
xor
jge
push
cs
cmp
pop
fnstenv
cmpsb
daa
mov
cli
sahf
xchg
pop
aas
add
push
push
in
out
cltd
mov
mov
call
xchg
int
and
jo
pop
rorl
repz
or
int3
jmp
jb
xchg
iret
adc
xchg
int3
fcoms
lcall
mov
dec
out
pop
je
enter
aas
jp
jbe
adc
mov
movsl
in
pop
mov
sub
out
test
dec
mov
pusha
rcr
ret
mov
shlb
iret
pop
addr16
xlat
imul
je
push
out
xor
popa
pop
mov
out
rcll
sti
and
enter
dec
mov
jbe
xchg
xchg
or
sahf
jo
or
mov
cs
cmpsb
pop
lret
cmp
stos
outsb
aad
test
cs
jne
mov
mov
mov
pop
lret
and
clc
adc
push
insl
inc
aas
push
daa
add
iret
pop
jne
les
adc
inc
mov
test
mov
mov
jmp
aad
and
cld
or
ds
mov
js
inc
push
adc
push
dec
xlat
scas
add
mov
sub
cmp
cmp
lock
xchg
imull
and
jle
mov
mov
fs
lahf
popf
pop
adc
push
daa
cmp
sub
cs
loopne
inc
test
stos
testl
push
push
mov
lcall
in
lods
mov
in
push
aas
ljmp
xor
or
sbb
pop
icebp
in
stc
xor
xchg
shr
fstpl
push
int
xchg
pop
and
pop
sbb
movsb
loop
loop
pop
int3
sbb
mov
leave
push
xchg
test
pop
xor
push
cmpsb
push
aad
xor
lahf
and
pushw
mov
clc
sbb
lock
xor
bound
add
add
cmc
jb
push
cmovo
pop
lock
mov
loope
inc
pusha
incb
stos
nop
enter
cmp
mov
imul
dec
sti
inc
fs
popa
jb
pop
pop
es
pop
shlb
push
enter
loop
mov
xchg
cltd
add
cwtl
or
mov
inc
in
xchg
add
pop
inc
sbb
mov
sub
imul
notl
add
jg
push
fidivrl
cmc
arpl
jge
ss
mov
ds
cli
out
inc
jp
pop
add
push
push
push
adc
sbb
dec
cmp
popa
mov
and
xchg
sahf
push
lods
mov
pop
inc
sub
push
loopne
and
hlt
and
cwtl
into
out
push
bound
cmpsl
pop
cmpsb
lds
insb
iret
popa
lock
xor
xlat
jbe
push
imul
add
sbb
aad
dec
dec
inc
or
aam
push
test
jl
fdivrl
xor
stos
mov
or
sub
mov
push
mov
mov
cmpb
cmp
je
out
jg
stos
inc
js
shlb
jae
jno
scas
aas
roll
inc
je
dec
fildl
pop
ret
adcb
sub
fcompl
push
pop
je
xorb
stos
adc
dec
andl
rcrb
mov
mov
cld
push
mov
mov
jne
repz
mov
repnz
pop
arpl
and
jae
shrl
mov
add
imul
outsl
nop
jae
ficoms
cltd
add
inc
test
push
add
lret
aam
mov
sbb
rolb
scas
add
test
xor
xlat
or
arpl
icebp
jb
fcoml
loop
push
inc
mov
xchg
push
jp
mov
loop
sub
sub
jecxz
pop
push
lahf
lret
iret
pop
cmpsl
or
int
mov
pusha
out
sbb
xor
push
mov
leave
add
mov
popf
and
sub
pop
xorl
push
jo
stc
loopne
xchg
or
add
hlt
ss
jge
test
sbb
or
hlt
cld
mov
movsl
loope
add
mov
cld
xor
jl
outsl
xor
inc
outsb
lret
xchg
xchg
addl
mov
dec
pop
push
push
dec
sub
or
test
test
outsl
ret
sbb
fcoms
pop
or
or
lods
xchg
out
cmp
int
fsubrs
and
hlt
jns
out
andl
mov
fwait
cld
in
cmp
jge
or
fisttpll
pop
mov
dec
pop
push
mov
or
jae
test
je
inc
jne
ds
mov
shrl
mov
adc
push
push
dec
stos
shlb
and
jmp
lds
mov
inc
pushf
xor
dec
xor
cld
pop
pusha
mov
pop
outsl
jg
hlt
add
mov
jp
clc
out
std
stc
ret
mov
addr16
jmp
bnd
sbb
pop
repnz
in
bound
addr16
jae
into
jmp
xor
and
es
stos
adc
sbb
mov
stos
or
js
fcmovnb
stc
cld
mov
shll
mov
cmpsl
out
jmp
es
imul
lock
inc
jmp
mov
dec
push
pop
arpl
mov
adc
cwtl
inc
in
sbb
rorl
imul
mov
mov
sub
in
ds
push
xchg
mov
dec
sbbb
test
pop
dec
movsb
test
adc
pop
xor
out
ret
jns
loope
mov
lret
dec
addb
or
cmpsb
fnsave
aaa
and
cmc
xchg
or
jnp
and
xchg
pop
and
xchg
cmpl
rcl
call
dec
jl
mov
ss
out
jns
rolb
sar
xchg
mov
mov
cli
push
mov
rolb
sbb
mov
mov
mov
pushf
mov
popl
pop
scas
push
mov
flds
cltd
clc
psubsw
lea
lock
mov
xchg
shlb
inc
pushf
and
lods
mov
fmull
loopne
fsin
xchg
add
cmp
adc
mov
mov
cmp
scas
shll
adc
dec
xchg
add
pop
cmp
mov
lret
cltd
das
dec
repz
cli
lock
mov
lock
mov
mov
idivl
add
sahf
loopne
mov
int
cmp
pop
out
mov
imul
pop
mull
jecxz
add
mov
pop
or
loope
andl
sbb
int3
cmp
mov
push
arpl
jb
push
je
sbb
adc
daa
xchg
std
cmc
or
test
aas
pop
int
ret
inc
loopne
cmp
in
jl
push
cltd
xchg
inc
jle
fdiv
xchg
daa
icebp
mov
pop
sub
addl
cmp
jno
add
add
xor
pop
jp
loopne
leave
pop
ficomps
cld
in
dec
push
out
xor
aas
inc
or
adcl
xor
push
cmp
dec
in
mov
movsl
sarb
lods
sbb
xchg
or
jmp
mov
negb
cmp
repnz
xor
int3
shll
movsl
jne
lret
outsl
mov
sbb
loope
push
pop
andb
mov
pop
dec
cs
push
fwait
mov
or
cs
sub
dec
cmp
test
or
rcl
int3
and
dec
mov
push
jle
shll
inc
pop
pop
cmpsb
fwait
mov
pushf
dec
sub
ljmp
jbe
xchg
in
cmp
xlat
popa
lret
out
nop
push
movsl
or
push
mov
jo
xchg
pop
push
dec
adc
lods
loope
imul
add
in
mov
ss
mov
pop
push
lcall
add
rcl
lahf
sub
aaa
xchg
adc
test
push
aam
xchg
or
fstpt
mov
sahf
pusha
sbb
mov
jne
jmp
mov
mov
inc
daa
pop
movl
mov
inc
xchg
push
scas
aam
and
adc
mov
pop
xchg
lret
xchg
js
pop
ljmp
jg
mov
pop
adc
out
cltd
inc
imul
test
nop
in
movsb
adc
jb
js
mov
cltd
cmc
andl
jecxz
fwait
mov
lcall
in
arpl
xchg
inc
adc
push
cmp
dec
rorb
mov
in
jno
ja
add
mov
jmp
es
cmp
jecxz
cmp
movsl
push
mov
sbb
sub
or
add
mov
jns
in
sarb
call
push
rcll
shlb
adc
push
fldenv
lret
data16
and
jno
cs
pop
sub
sti
pusha
jg
pop
cli
imul
inc
pop
lcall
data16
mov
jmp
or
icebp
cld
lods
adc
gs
clc
hlt
xor
xchg
mov
fbld
xlat
call
xor
mov
pop
inc
mov
clc
push
xor
icebp
fwait
xor
out
adc
sbb
imul
push
pushf
out
aas
adc
and
pop
movsb
test
mov
xchg
mov
neg
into
mov
push
and
cmpl
lock
lret
ljmp
xor
jg
sub
jae
in
and
ds
add
inc
std
cmpsb
push
and
push
cmp
jbe
inc
push
pop
mov
jle
jae
xchg
or
push
jg
lock
and
cs
leave
xchg
xlat
mov
shlb
cmp
jae
mov
mov
cli
sub
push
cwtl
mov
jl
nop
into
dec
fmull
xor
daa
xchg
xlat
out
std
mov
mov
insb
jo
lahf
cmp
mov
add
in
or
add
cmpl
out
dec
sub
mov
mov
out
xor
loop
or
jecxz
adcb
stos
xor
pop
lret
adc
xchg
cmp
cmc
jge
sti
aaa
cwtl
hlt
dec
shrl
mov
sbb
enter
xchg
cld
out
mov
pop
pop
popf
daa
adc
and
gs
repnz
and
pop
sbb
and
sidtl
lcall
adc
out
iret
add
and
fucom
sub
add
int3
dec
sti
imul
sbb
loopne
les
test
sbb
sub
shl
xchg
and
fwait
mov
inc
lahf
sbb
mov
fs
jge
xchg
icebp
add
jp
lahf
push
add
push
pop
adc
iret
xor
dec
repnz
pop
icebp
pop
xchg
sbb
in
addr16
cmpsl
push
push
orb
es
negb
stos
mov
ds
pusha
ret
xchg
mov
jne
std
inc
inc
sub
std
sbb
add
adc
movsl
stos
jne
mov
adc
fsubs
xchg
scas
pusha
ret
push
lret
mov
push
sahf
fwait
dec
inc
push
mov
pop
mov
aaa
scas
repnz
jmp
popa
and
mov
and
addr16
push
push
insl
hlt
loop
dec
cmp
daa
ror
lea
out
fildll
cmp
pop
mov
andb
and
je
xchg
mov
jo
cmp
bound
bound
rcll
jg
mov
je
out
adc
lret
or
fwait
in
jo
sub
pop
and
sahf
movlps
pop
fisttpll
cmp
mov
add
inc
iret
adc
push
xor
mov
xlat
ret
rorl
mov
push
fmulp
repnz
xchg
stos
sub
mov
pop
sbb
pop
test
dec
sbb
cltd
add
in
hlt
shlb
xor
jo
mov
daa
dec
es
decb
call
push
add
push
mov
mov
push
cmp
das
xlat
pop
mov
fistpll
insb
pop
arpl
sti
sbb
xor
pop
jns
fisubl
jno
daa
addl
sbb
pop
add
xor
in
cmp
mov
stc
cwtl
insl
sbb
push
mov
jecxz
mov
jmp
test
lods
jns,pt
adc
dec
shll
sub
call
push
rorl
shll
lret
pop
mov
aaa
repz
xlat
aaa
out
jo
add
dec
mov
fists
hlt
push
pop
adc
call
xchg
aas
bound
sbb
nop
and
or
mov
add
pop
add
enter
jle
inc
dec
dec
enter
sahf
test
leave
add
test
rorl
das
adc
mov
dec
push
mov
jae
fistpl
sarl
jmp
aaa
hlt
jmp
fisubrs
push
in
mov
mov
jbe
ljmp
mov
mov
adc
repnz
out
lock
xchg
lds
in
pop
sbb
dec
mov
xchg
dec
xor
test
sub
cmpsl
dec
jns
out
pop
ret
pushf
cld
pop
xor
mov
mov
xchg
xchg
pop
dec
aad
inc
xlat
sub
xor
movsb
mov
pop
aaa
cwtl
lcall
rorb
pop
mov
cmp
sub
lret
mov
mov
hlt
ret
sub
pusha
loopne
adc
cmpsb
call
pop
xchg
cmp
mov
stos
xor
nop
sbb
test
mov
add
jnp
cmpsb
xchg
jmp
mov
push
xchg
or
out
xor
and
xchg
test
pop
popf
loope
sbb
cli
aad
cmpsb
sub
jno
add
arpl
das
cmp
jmp
push
add
stos
sub
or
sbb
iret
sbb
orl
mov
rcrl
inc
adc
sbb
and
push
dec
mov
decb
cmpsl
dec
sbb
and
cwtl
mov
ficoml
movb
push
aaa
jne
sbb
sbb
loop
cmp
xchg
push
ds
int
das
leave
lret
jae
cmp
loope
daa
xchg
out
or
lods
lock
not
mov
arpl
push
lock
add
mov
imul
lret
jl
or
mov
pop
xor
jmp
mov
or
cmp
and
cmpsl
sahf
ja
aam
shll
push
lcall
fists
add
lret
xchg
push
dec
lea
aad
fwait
pop
ds
repnz
lret
movsb
dec
xchg
lret
jae
pop
pusha
push
scas
push
test
jecxz
sarb
xor
jle
push
inc
push
mov
push
jmp
lods
push
mov
pop
adc
rorl
and
mov
cli
ficomps
jmp
es
adcb
push
mov
insl
test
clc
dec
mov
fdivrl
mov
jle
aam
rcr
pop
je
stc
xchg
mov
add
xchg
cmp
and
xchg
bound
mov
outsb
adc
leave
lcall
or
aam
inc
jle
icebp
scas
jnp
jnp
push
incb
dec
inc
add
les
sub
sub
xchg
mov
mov
jns
xchg
stc
mov
sub
out
or
adc
stos
xor
loopne
fidivs
cltd
call
cmp
jle
jne
aam
add
dec
adc
xchg
dec
mov
loop
xor
xor
fisubl
dec
dec
mov
ffree
shlb
outsl
push
cltd
jp
mov
jno
add
dec
inc
xchg
xchg
sub
nop
in
fwait
outsb
pusha
jb
rorl
divl
mov
adc
xchg
iret
cmp
cld
outsb
inc
jmp
jbe
xor
lods
ret
test
popf
and
shlb
cmpsb
push
imul
mov
inc
psrld
stos
pushw
dec
sbb
jge
imul
decb
dec
sbb
mov
cmpsl
fists
pop
cli
ficoms
ds
scas
aas
jno
leave
mov
fnstsw
mov
jle
iret
push
adc
jae
das
mov
aas
imul
lock
shrb
cmp
or
int3
xchg
xor
jle
sub
cwtl
sub
scas
xor
repnz
xchg
add
push
xor
or
jne
adc
xor
stc
enter
sub
in
pusha
mov
adc
cmpsl
mov
push
push
std
aam
pop
jl
adc
and
das
leave
mov
sbb
cmp
add
inc
repnz
inc
gs
ja
mov
lret
jb
sub
out
iret
aaa
sub
cld
pop
cmc
inc
add
cmc
mov
inc
sub
outsb
loope
clc
xor
cmp
and
dec
sti
loop
xchg
test
scas
aaa
daa
cltd
mov
xchg
int
into
inc
rorl
mov
cmp
mov
ficoml
lods
add
mov
pop
xchg
or
pop
fcmovb
adc
add
mov
mov
out
leave
jl
push
repz
push
push
xchg
push
lret
and
ds
dec
jmp
int3
xor
hlt
ss
ffreep
push
pop
les
pop
pop
push
imul
shrb
leave
push
push
jle
sbb
gs
sbb
test
jecxz
sub
or
xchg
and
mov
sbb
push
popa
cmp
xor
mov
jmp
xor
lds
jb
inc
je
inc
or
pop
ret
pop
dec
pop
insb
push
xorl
stc
scas
into
clc
and
leave
jecxz
iret
pop
add
mov
das
pop
andb
dec
es
xchg
pushf
or
pop
enter
test
outsl
sbb
test
pop
xchg
and
adc
jmp
popf
lcall
mov
std
sarb
fsubr
inc
push
jno
push
fildll
jbe
cmp
mov
push
mov
insl
insl
sbb
pop
call
iret
popa
or
jb
inc
stos
sbb
in
popf
jno
loop
sbb
test
repnz
xor
dec
mov
hlt
inc
jmp
mov
push
adc
inc
or
push
loope
cmp
cld
dec
adc
out
lahf
out
sahf
cmpb
dec
and
or
or
movl
adc
pop
pmulhuw
pop
push
push
add
push
mov
or
fbstp
js
scas
pop
inc
cmp
clc
xchg
pop
dec
xlat
adc
xchg
or
and
imul
push
mov
icebp
or
loope
js
sub
cld
movl
xchg
push
rol
cmp
pop
rclb
sbb
loop
add
insl
xor
pop
pop
imull
mov
pushf
xor
outsb
adc
jmp
dec
xchg
ds
pop
mov
in
cmpsl
in
shlb
or
sbb
cs
popa
hlt
rol
aad
fiaddl
adc
rolb
xchg
cmpsl
mov
pop
sub
xlat
push
out
sub
xchg
xchg
xor
rorl
aam
jae
mov
enter
jno
mov
insl
sub
sub
insl
stos
sbb
xor
scas
sub
insl
mov
xchg
adcl
in
out
fcoms
insb
std
push
lcall
push
movsb
or
je
dec
xchg
lahf
fs
push
mov
cld
inc
pushf
dec
jl
push
popf
jge
test
cmp
ret
cmp
jb
xor
stc
aas
addr16
jecxz
lods
add
rcl
repz
add
shll
aaa
or
add
sbb
inc
arpl
dec
test
mov
fucomp
cs
cmc
jl
pop
les
outsb
xchg
sub
pop
mov
and
cmp
popa
sub
jl
jne
repz
mov
push
es
jne
xchg
clc
jo
ljmp
mov
arpl
xchg
jo
mov
sbb
add
jl
and
mov
enter
or
fsubl
cmp
xchg
sbb
frstor
dec
or
movl
cli
pop
sub
sbb
jg
lahf
inc
pop
ss
rorb
add
aaa
mov
das
cmp
in
adc
xor
outsl
xchg
in
faddl
mov
lock
xchg
pop
out
stos
or
or
nop
dec
add
sbb
cmpsl
xchg
add
adc
sarb
pop
rdtsc
sub
push
int
pusha
or
loope
icebp
mov
cmp
sub
pop
outsl
add
clc
popa
mov
sub
sbbb
nop
jmp
fndisi(8087
enter
leave
xor
gs
mov
mov
insb
cwtl
pusha
pushf
push
inc
daa
pusha
push
out
int3
adc
cmpsb
push
push
in
jo
mov
mov
jbe
jb
paddw
mov
es
cld
adc
data16
cmp
fwait
push
icebp
in
jb
hlt
push
dec
shrb
push
jg
xchg
cmpsb
cltd
xchg
fs
popf
gs
jl
stos
das
jp
mov
inc
mov
xor
fsts
nop
movsb
adc
es
mov
inc
daa
out
test
pop
adc
jle
out
fs
inc
popf
sub
popa
push
dec
cmpl
subb
jge
scas
mov
mov
insb
pushf
dec
addr16
outsl
or
popf
cwtl
pop
leave
cli
decl
jmp
pop
orb
insb
iret
lret
testl
adc
js
iret
filds
sar
and
adc
cmp
int
push
cmpsb
xor
mov
pop
fwait
mov
xchg
das
out
insb
xlat
or
cmpl
xchg
int
adc
xchg
lds
sbb
cmp
push
mov
fcomps
fldt
pop
clc
add
jbe
mov
in
sub
xor
or
dec
inc
ret
dec
xchg
mov
lsl
divl
or
pop
lahf
dec
out
jp
or
outsl
sbb
add
clc
xor
sbb
xchg
andb
and
outsb
cmp
into
and
js
imul
xchg
cmc
out
test
loope
andb
sub
inc
fcoml
popf
push
ds
stos
cmp
scas
fcompl
sarl
sbb
je
fsub
sbb
cmp
add
scas
push
cmp
lcall
mov
fcomps
push
outsl
jae
das
lds
mov
mov
inc
adc
shl
cmp
hlt
cmp
test
test
cwtl
cmc
out
cmp
sarb
jp
xchg
subb
nop
add
or
movsb
inc
mov
out
out
jno
into
sub
mov
jl
enter
popf
mov
push
xchg
and
jnp
in
jae
mov
ss
jp
push
mov
pushf
pop
stos
inc
int3
lods
jp
imull
fistps
out
cmp
adc
mov
mov
shll
dec
ljmp
das
push
fcomps
mov
dec
int
leave
mov
dec
xlat
xor
push
xor
mov
dec
ss
push
fists
add
or
jl
adc
mov
fidivl
je
lret
add
test
stc
cmp
dec
xlat
lret
cmp
hlt
and
or
stos
push
stos
jmp
or
push
mov
aaa
adc
add
gs
xor
in
fcompl
aad
adc
clc
adc
adc
ret
in
imul
mov
pop
dec
mov
int3
inc
push
push
imul
sbb
in
das
hlt
and
push
out
xor
fildl
lret
out
ljmp
ja
sub
and
and
push
mov
js
popa
sub
jl
out
stos
sub
mov
cmp
adc
add
jp
sub
inc
and
test
imul
les
jmp
jno
or
call
jl
dec
adc
and
add
jbe
xchg
in
adc
jno
test
insl
xor
scas
sbb
mov
pop
jne
hlt
inc
fidivs
lret
fisubs
push
popf
cmp
inc
lods
iret
divl
fdivrs
scas
dec
shrl
mov
das
movsl
pop
inc
iret
fstl
jne
pop
or
test
mov
mov
dec
ret
or
xor
insb
cmp
testl
leave
mov
adc
cmp
xchg
xchg
mov
bound
cmc
or
mov
jecxz
test
in
sub
je
pop
add
mov
xchg
mov
pop
ret
push
and
dec
rolb
push
sub
sti
and
jmp
insb
pop
fstpl
jae
in
nop
into
mov
je
sbb
int
sbb
lock
out
sbb
adcl
aad
shll
daa
adc
out
push
in
leave
jmp
push
mov
cmp
adc
fcomi
inc
mov
xchg
mov
out
add
pop
out
mov
out
or
jo
adc
sbb
ret
mov
insb
mov
fmull
daa
hlt
mov
sub
ror
sti
mov
sub
jo
lcall
aaa
inc
pop
aaa
mov
xchg
adc
rcll
xchg
cmp
insl
inc
lcall
and
push
pop
lahf
sbb
mov
std
jae
loopne
sub
sub
fdivrl
xchg
dec
add
fsubrl
fucomip
test
push
and
dec
sbb
lret
out
dec
xchg
int
pushf
scas
lods
dec
push
sbb
stos
sbb
jbe
push
pop
add
in
push
cld
insl
pop
dec
xchg
das
xor
or
or
and
sqrtps
jbe
mov
clc
sahf
in
fisubrs
leave
xchg
fwait
push
rolb
hlt
xchg
mov
sub
imul
push
clc
loope
jno
push
lods
mov
cmp
repz
addb
push
out
imul
cmp
daa
es
pop
icebp
xorl
or
pop
or
adc
rcr
adc
xchg
pop
popf
adc
mov
leave
jae
js
data16
arpl
mov
pop
add
push
sub
mov
stos
movsb
jge
or
jge
daa
mov
cmpsb
test
cmpb
mov
pop
pop
rolb
lahf
test
dec
test
dec
adc
jo
clc
stos
push
mov
lds
xchg
inc
incb
pop
stos
sahf
fadds
ljmp
xchg
cmp
mov
mov
ret
subl
inc
jb
jno
and
jge
jno
pusha
test
les
icebp
ficoms
pop
or
imul
pop
popf
dec
push
fwait
jmp
aaa
jp
inc
scas
lret
aad
cmc
push
mov
test
mov
cmp
pop
pop
stc
and
and
popa
out
in
jle
inc
cmpsb
imul
sbb
lahf
cmpsb
sbb
out
jl
mov
fldcw
push
dec
popf
push
fwait
pop
testb
jne
repnz
clc
dec
sub
aas
mov
out
add
dec
inc
leave
jbe
cmp
pop
lock
cmp
std
and
push
sub
pop
jmp
push
pusha
jb
lcall
ret
push
dec
push
call
inc
mov
dec
mov
data16
scas
xchg
jno
fwait
push
xor
mov
mov
cmpsb
call
jg
psubw
xchg
sub
cmp
push
in
mov
out
imul
inc
and
aad
clc
mov
dec
lcall
mov
jmp
pop
push
cmpsb
xor
mov
dec
inc
or
ret
mov
sbb
lea
and
insl
lret
ljmp
mov
pop
dec
xchg
addl
push
ret
xchg
lds
leave
inc
and
inc
jp
or
sbb
xchg
das
sub
mov
pushl
jg
into
ds
mov
int3
mov
add
outsl
xorl
shlb
mov
cwtl
jne
ja
ret
jg
into
and
sbb
jl
jnp
ljmp
mov
stos
nop
dec
js
sub
mov
add
hlt
or
fneni(8087
pop
btc
aam
adc
inc
push
ficoms
aas
mov
push
pop
loop
test
jge
rcll
push
shl
rorl
mov
imul
mov
mov
mov
es
sbb
inc
mov
mov
idiv
shrl
imul
mov
stos
push
imull
sub
pushf
jl
push
addr16
push
sbb
dec
adc
add
addr16
adc
jecxz
sbb
lahf
jb
dec
test
aas
stc
sub
or
pop
push
or
es
jbe
mov
and
mov
mov
dec
lods
cwtl
stos
add
movsl
pop
or
mov
sub
sub
inc
loope
add
out
test
pushf
notb
mov
test
pusha
repz
mov
or
or
mov
out
xor
pop
mov
aas
push
stc
addr16
sbb
out
daa
lods
loopne
ja
mov
adc
push
add
inc
inc
repz
sub
outsb
jno
push
rorb
popf
mov
ficoms
add
popf
dec
sub
and
or
nop
or
shll
aas
pop
xchg
out
ss
fildl
jb
jle
add
xchg
mov
dec
push
push
leave
mov
mov
rolb
pushf
add
jnp
push
lods
fucomp
adc
push
and
cwtl
iretw
xor
inc
cmp
call
movsb
inc
test
clc
outsl
adc
and
mov
mov
pop
adc
and
sub
movsb
jno
push
lret
es
or
jne
xchg
push
movsb
pop
cld
fisttpll
rorb
shlb
xchg
sub
sub
je
aaa
mov
mov
je
xchg
fs
push
mov
sbb
mov
mov
inc
imul
add
rorl
cltd
mov
jge
popf
adc
loop
or
fsubrs
test
stc
and
mov
jle
cmc
xchg
in
or
lahf
mov
fdivp
stos
cltd
out
pop
loope
mov
in
or
or
xor
shlb
out
faddp
cmc
fnstenv
addr16
push
cwtl
rclb
mov
roll
mov
ds
xchg
jns
jns
mov
test
mov
lea
push
jle
std
rol
aas
dec
mov
sub
and
testl
xchg
mov
ljmp
jg
mov
mulb
mov
sub
loopne
fiadds
adc
mov
cmp
mov
imul
jae
cmp
jp
lods
mov
mov
movsb
xor
mov
scas
bound
stos
xor
outsl
push
or
fldl
or
mov
ret
fisubrl
dec
inc
aam
mov
cli
add
stos
mov
rolb
rol
adc
dec
or
mov
sbb
addr16
xor
in
adc
int3
out
jle
lock
xchg
jl
mov
call
imul
hlt
aas
insl
jle
clc
aam
and
mov
popa
into
and
comiss
add
test
sub
inc
jge
push
cltd
mov
inc
and
aaa
ja
xchg
sub
sbb
sub
jno
sets
cmc
arpl
fcoms
fdivs
popf
insl
mov
lahf
nop
repz
xchg
xchg
jmp
xlat
adc
cmc
ja
in
xor
or
pop
lock
lahf
dec
std
sub
addr16
out
dec
cld
lea
pop
mov
bound
inc
iret
sub
sub
fldcw
jp
fwait
pusha
mov
insb
outsl
inc
mov
lret
push
iret
outsb
cmpsb
mov
jb
mov
xor
xchg
outsb
adc
mov
adc
pop
bswap
icebp
scas
sbb
or
stos
adc
outsb
lret
lea
and
xlat
sub
push
or
je
movsl
bnd
leave
sub
dec
pop
notb
clc
test
dec
pop
jmp
xchg
movsl
jmp
dec
lea
mov
pop
dec
fs
je
or
or
push
fldt
cmpsb
fdivrl
xchg
lock
adc
pop
cli
push
fiadds
xor
daa
jno
dec
ret
cmp
in
in
xor
mov
or
sub
add
jne
push
orb
mov
xchg
ret
ss
in
mov
fs
and
pop
or
jae
push
repnz
jns
rclb
adc
test
add
fs
es
cmp
fs
cli
or
sarb
stos
pop
inc
jmp
lret
dec
push
lods
mov
mov
roll
int3
dec
cmc
adc
xor
aas
rorb
mov
cmp
dec
or
sub
daa
shll
test
mov
mov
cmp
xlat
addr16
add
cmp
adc
outsb
jae
push
cmp
jmp
lahf
mov
mov
int
xor
daa
aaa
cmc
fistpl
cltd
mov
cmc
xchg
dec
out
sub
mov
daa
push
add
pop
cmpsb
lods
jno
dec
inc
push
xchg
stc
test
xchg
imul
icebp
iret
mov
ja
jb
jecxz
fadds
ljmp
daa
mov
push
and
nop
inc
mov
cmpb
fnstenv
xchg
dec
pop
mov
leave
add
ja
testb
cmp
or
ja
nop
rclb
jge
and
or
mov
pop
ret
inc
inc
subb
adc
sbb
lcall
push
lcall
mov
push
repz
push
mov
mov
push
and
test
stos
jmp
sub
mov
addl
push
cmpsb
jle
mov
lret
mov
lods
std
mov
int3
jecxz
aaa
pop
dec
push
adc
in
out
lcall
sar
cmp
mov
mov
cmp
pop
add
sub
lods
shrl
xor
lods
loop
add
adc
jns
sbb
jge
nop
pop
inc
loopne
xchg
xchg
testb
push
fdivs
orl
std
mov
inc
unpckhps
in
mov
sub
rorw
enter
jecxz
sub
push
adc
scas
sbb
push
pop
dec
aaa
ret
jns
cwtl
rol
pushf
fs
ret
push
movsl
nop
inc
mov
inc
stos
pop
aaa
jae
sbb
lcall
cmp
adc
out
mov
mov
jg
cmp
int
jno
pop
adc
in
daa
add
cmpsb
lock
movsl
fs
pop
adc
xchg
mov
jp
cmpl
test
xchg
pop
test
mov
add
dec
jle
jg
or
mov
xor
push
lock
das
mov
or
in
cmpsb
daa
fstl
rcrl
jge
add
insl
in
mov
and
lock
inc
adc
popf
jnp
scas
sub
push
in
inc
test
mov
insb
test
out
push
ja
push
xchg
cmp
inc
inc
or
ja
xor
pop
aad
push
shl
mov
inc
std
xor
addr16
jbe
and
lret
sbb
and
adc
sub
add
fisttpl
sbb
aad
sahf
mov
fdivl
hlt
loopne
xor
popf
adc
pop
outsb
arpl
popa
and
aam
mov
cmpsb
adc
call
add
insl
and
xchg
pop
mov
xor
pop
scas
iret
add
out
jl
dec
cmc
inc
xchg
lret
adcb
or
sti
inc
jmp
nop
and
and
aam
and
cmp
imul
fs
adc
iret
enter
mov
jl
leave
push
push
sub
add
jmp
clc
sti
inc
xor
sarb
lret
mov
push
add
out
insb
adc
add
cltd
test
xor
mov
stos
dec
sbbb
iret
mov
cmc
jb
and
repz
popa
movsb
loopne
jmp
jo
call
add
testb
adc
push
mov
fisttpl
outsb
xor
popf
xchg
mov
leave
ficomps
mov
pop
dec
sub
data16
jl
rcrl
movsl
sarb
loopne
std
xlat
dec
adc
rcr
test
sbb
test
or
dec
or
sbb
push
outsb
vpcomb
jne
andl
add
insl
arpl
loope
aad
push
loop
or
out
js
sbb
cmp
mov
in
arpl
out
inc
mov
jp
mov
cmp
addb
lock
mov
lea
mov
or
arpl
enter
adcb
adc
daa
or
mov
mov
loopne
daa
sbb
stc
sub
cmpsb
imul
mov
mov
dec
fucomip
movsl
or
jns
mov
repz
dec
cs
mov
sbb
sbb
in
xor
scas
icebp
push
add
or
push
pop
daa
jnp
xchg
mov
div
jp
movsl
loope
inc
inc
cmpsl
pop
int3
stc
outsl
pusha
test
push
bnd
loopne
aam
mov
into
mov
daa
xchg
imul
fwait
and
testb
stos
jae
mov
sub
rcll
mov
mov
or
not
pop
mulps
xchg
jb
dec
imul
cmp
into
sub
sub
test
pop
stos
or
jno
hlt
pusha
dec
cli
aaa
xor
cmp
xchg
mov
mov
lret
sahf
std
mov
loopne
test
je
jne
mov
data16
sbb
cmp
pushf
lods
stos
sbb
jl
inc
dec
adc
dec
jecxz
dec
shrl
cmpsb
inc
shll
test
stos
fidivl
loop
or
and
iret
clc
xchg
lods
inc
mov
mov
add
jl
adc
dec
mov
sbb
les
loopne
push
ret
push
call
sub
sbbl
cmp
int
incl
lods
jl
test
mul
lds
xchg
test
out
fmulp
jl
outsl
mov
fisubl
adc
push
popf
mov
push
cmp
jmp
jb
jp
outsl
sbb
sub
adc
stc
or
in
mov
mov
clc
fcmovnb
inc
lcall
pop
insb
fiaddl
or
jno
dec
in
push
mov
jnp
std
sub
outsb
das
mov
ljmp
cmpsl
jno
inc
mov
cwtl
movsb
mov
insl
mov
fs
popf
inc
pop
pop
jg
mull
sub
aam
js
dec
mov
mov
jg
jo
push
fwait
mov
pop
cmpsl
mov
cmc
push
sbb
lock
dec
fdivrp
cmp
or
in
cltd
jge
rclb
loop
adc
ds
push
mov
dec
inc
mov
setb
jnp
push
ds
roll
mov
ss
mov
xchg
inc
xchg
xchg
int3
jle
sbb
fnsetpm(287
leave
rcrl
push
push
daa
test
push
pop
testb
cmp
js
sub
sub
pushf
xor
xor
cld
mov
sbb
jle
dec
jb
push
sbb
dec
fcomps
gs
sub
mov
hlt
inc
push
movb
lret
adc
cmp
jno
jl
int3
dec
mov
mov
sbbl
in
xor
dec
xchg
jge
sti
leave
cwtl
push
cs
or
or
dec
in
lret
or
cmp
outsb
jecxz
mov
std
mov
enter
sub
aaa
pop
jge
or
or
inc
ret
test
add
int
xor
clc
shlb
rolb
aam
es
mov
xor
sahf
lahf
cmpsl
leave
lret
and
adc
shll
push
inc
enter
jp
add
xor
add
cld
popa
dec
pop
stos
in
js
xchg
rorl
xor
clc
sbb
testl
pop
add
add
aam
xor
in
sub
inc
cwtl
jns
testl
xchg
xchg
push
cmp
fs
cmp
fidivrl
fdivs
js
jp
fsubr
cmp
or
pop
and
pop
mov
arpl
imul
out
mov
fnsave
es
cwtl
repz
mov
insb
ret
push
push
aam
jge
xor
imulb
jle
das
push
loop
xchg
hlt
ficoms
adc
mov
cmp
aaa
xchg
jnp
mov
cmp
xor
outsl
xlat
mov
mov
cmp
fistpll
aas
mov
ja
scas
add
inc
dec
cs
aas
call
negb
push
dec
lret
or
jb
mov
and
jle
loope
or
jmp
pop
inc
xor
pop
into
push
cmc
inc
sub
out
dec
sbb
cmpsb
rol
xor
inc
pop
adc
jb
push
mov
sar
jbe
pop
dec
xor
hlt
lea
popa
pop
inc
jle
xchg
adc
add
pop
rolb
mulb
jge
loop
scas
sbb
int
adc
dec
mov
fsub
ffree
sub
lcall
xchg
jl
pop
imul
iret
dec
jp
push
push
mov
jmp
ljmp
pusha
xchg
add
jl
ror
pushf
aas
cmp
adc
movsl
add
fcmovne
sbb
mov
sbb
fistl
push
sub
insb
xchg
insl
lods
out
mov
shrl
int
adc
jecxz
sub
mov
and
clc
icebp
imul
sbb
lea
aam
push
cmp
add
sahf
nop
pop
inc
xchg
pop
inc
push
lods
push
xor
fstl
xlat
in
pushf
out
jo
ret
inc
push
jno
pop
icebp
dec
adc
cli
mov
data16
sbb
adc
add
jbe
add
and
mov
xchg
sub
jecxz
mov
cmpsb
inc
ljmp
out
dec
filds
pushl
jnp
cmp
loope
mov
ja
push
mov
arpl
aas
in
push
adc
rcrl
loope
mov
out
scas
shrb
add
inc
xchg
es
nop
je
sbb
lea
push
dec
xor
bnd
add
cmp
ret
leave
sbb
mov
lea
aaa
cli
lret
int
lock
cld
pusha
push
arpl
sub
mov
lcall
mov
outsl
jne
mov
push
pushf
lret
out
mov
test
pop
sbb
cli
mov
leave
xchg
inc
pop
es
add
insl
rcl
test
cmp
push
fdivrl
scas
mov
mov
movsb
xchg
out
ja
in
add
movsl
jbe
xchg
out
push
shlb
call
xor
jns
jmp
aas
lock
and
mov
pop
je
in
jb
bound
mov
cmc
es
pop
in
cli
clc
cmpsl
or
cmp
push
xor
mov
dec
loope
enter
sub
xchg
mov
mov
iret
es
inc
aam
mov
adcb
pop
dec
lea
lcall
push
xlat
rorl
jmp
push
mov
cli
ljmp
dec
adc
push
in
into
in
and
push
subb
inc
cmp
or
sub
rolb
cmpsb
in
sti
inc
and
pop
adc
cmp
push
call
out
mov
pusha
and
add
sub
and
nop
pop
mov
pop
dec
sub
arpl
dec
push
pop
loop
xchg
mov
or
out
mov
les
jo
js
push
test
sbb
fucomp
mov
pop
outsl
mov
mov
ss
out
idivl
sub
mov
mov
movsl
jb
into
adc
insl
push
xchg
sarl
lods
xlat
fs
xchg
push
jno
roll
fcomps
aas
jne
cmp
cmp
adc
sbb
push
xchg
mov
pop
movsb
mov
ljmp
push
xchg
cmp
and
add
inc
jne
mov
lahf
xchg
shl
pop
sbb
es
jns
outsl
mov
xor
pop
lea
xchg
and
jns
jge
out
rol
dec
fwait
sahf
in
ret
mov
dec
out
pop
push
jp
iret
sbb
imul
dec
and
scas
mov
cwtl
xor
faddl
xor
xor
mov
cmpsl
fldl
fisttps
iret
fwait
xor
test
mov
push
jno
int
xchg
jns
loopne,pt
cmpsb
test
inc
and
jl
xchg
mov
sub
test
inc
add
mov
inc
or
out
aam
pushf
jnp
add
cmp
add
mov
lahf
rclb
push
cmp
sub
pop
nop
cmp
adc
sub
and
sbbb
xorb
repz
sub
sbb
adc
das
icebp
xchg
dec
iret
jmp
ss
shl
jp
cmp
jb
mov
jmp
int
dec
mov
lahf
sbb
jg
je
add
ljmp
xor
test
inc
or
adc
jecxz
or
test
or
inc
sub
and
loopne
stc
popf
xchg
les
or
sti
cs
push
jmp
les
loop
and
push
cld
push
or
test
mov
push
lret
in
or
fs
lock
xor
out
popf
mov
or
insl
loope,pn
mov
cmp
jmp
lahf
insl
mov
lcall
ljmp
cwtl
hlt
cwtl
xchg
jo
and
push
enter
repnz
mov
test
jbe
and
push
xchg
mov
mov
mov
std
inc
xchg
jne
aad
fcmovnu
mov
push
xchg
xchg
jbe
push
inc
std
jns
cmc
das
faddl
adc
sub
push
repz
shrl
xlat
mov
aas
mov
dec
add
lock
fnstenv
gs
insb
ret
dec
lods
icebp
sbb
enter
into
add
mov
cmp
lret
dec
cs
and
xor
cmc
inc
leave
inc
shlb
lret
inc
cmp
push
stc
test
and
xor
out
aam
pushf
adcl
add
rorl
jbe
cs
pop
shrb
cmp
push
testb
sub
insb
imul
inc
jecxz
lret
data16
push
fwait
ljmp
daa
ret
jl
popf
out
stos
jne
scas
and
fcmovnbe
jbe
inc
loop
and
sub
stos
mov
gs
mov
inc
xor
sahf
jae
inc
test
push
dec
pop
cwtl
jb
lods
xchg
pop
int
test
dec
js
ret
and
jmp
sub
or
or
mov
or
aas
and
xchg
xchg
jb
add
aam
sub
cmp
sbb
mov
or
roll
fsubrs
mov
ficompl
mov
and
mov
mov
pop
dec
cltd
pusha
sbb
adc
push
popf
adc
imull
fcomp
jnp
ret
or
loop
in
xchg
xor
or
or
xor
pop
stos
inc
xchg
cmp
fldenv
divl
or
pushf
push
inc
jb
out
pop
xorl
repnz
leave
mov
add
sbbl
xlat
jne
iret
ficoml
xor
test
sub
fwait
dec
fisubl
scas
sbb
mov
cmpsb
cmp
lods
insl
sub
sub
push
mov
jle
add
adc
pop
das
fimull
sahf
mov
mov
push
jecxz
repz
cmp
into
or
adc
mov
xchg
push
sub
push
add
mov
and
and
xlat
mov
repnz
imul
sub
jecxz
xor
xor
faddl
aad
or
mov
aad
pop
ret
lret
jmp
imul
fwait
sub
mov
sbb
mov
xchg
adc
insl
rcll
push
dec
outsb
and
insl
imul
bound
and
insb
lcall
jae
sub
movsl
xchg
mov
jmp
push
or
xchg
cmp
repnz
mov
hlt
jge
ret
movsb
lods
sub
mov
repnz
rclb
pop
xchg
fsubs
call
cmp
lods
sub
mov
add
dec
dec
cmp
popa
insb
add
rolb
and
jb
fcomi
jle
cmp
lds
test
gs
pop
inc
lahf
add
xor
gs
notl
dec
jae
inc
jmp
sub
push
jbe
movsl
xor
out
sti
es
jno
gs
pop
cs
cld
outsb
ja
aas
sub
sbb
cwtl
aam
jns
fwait
cmp
mov
test
into
int3
call
push
outsl
jp
cmc
aam
add
leave
insb
outsl
xlat
mov
mov
xchg
pop
into
jo
std
jnp
mov
shufps
aas
adc
adc
daa
gs
xlat
orb
ffree
ret
outsb
insb
mov
adc
pop
jb
repnz
lcall
scas
or
xor
cli
in
mov
aaa
aad
call
adc
mov
push
xor
aam
icebp
scas
test
mov
and
aaa
xchg
cwtl
in
jg
mov
sub
mov
lret
scas
in
and
pop
dec
repnz
pop
ljmp
or
push
test
imul
jmp
cmc
add
in
xor
cli
xchg
imul
fistl
incl
jae
imul
mov
mov
das
add
sub
xchg
dec
mov
sbb
xchg
jp
or
add
dec
aad
mov
imul
mov
lea
mov
test
in
push
ret
xor
outsl
ljmp
jae
fucomi
inc
cmc
mov
push
les
mov
sub
dec
cmpsb
or
int3
test
mov
data16
fsts
inc
mov
push
sahf
cli
fcompl
mov
call
ret
filds
or
add
aaa
push
pop
stos
dec
adc
out
cmp
out
ljmp
xchg
sbb
ret
push
mov
ret
cmp
lret
sub
fldt
daa
jmp
mov
add
cmpsb
mov
add
push
jns
inc
loope
icebp
mov
arpl
stos
pop
bound
xchg
push
loopne
mov
push
cmc
imul
push
filds
xor
mov
test
xor
ret
sub
loope
adc
lfs
nop
xchg
movsb
push
addr16
xchg
push
add
ret
sbb
movsb
not
stc
mov
jp
icebp
xor
xchg
xchg
adc
mov
stos
scas
out
cmp
ss
pop
xchg
ret
push
repz
aas
or
mov
adc
bound
and
mov
adc
ljmp
push
out
out
push
iret
int
scas
xchg
loope
je
in
add
xchg
xor
push
mov
xor
adc
mov
and
lods
lret
dec
push
data16
cmp
xchg
jmp
jo
lock
xchg
pop
inc
push
and
pushf
out
cld
adc
cmp
mov
pushf
clc
sbb
jecxz
js
pop
add
dec
mov
cmp
enter
shrl
adc
shrl
jmp
cmp
lcall
loopne
add
ljmp
mov
jg
aas
nop
and
in
xchg
stos
jle
mov
mov
dec
dec
incb
btr
mov
mov
loop
stc
sub
cmp
dec
adc
arpl
int
xchg
push
xchg
subb
cmp
jbe
jns
jae
dec
stos
jnp
and
adc
addr16
les
testl
and
loop
scas
fidivrs
sub
pop
stos
imul
push
adc
cmpl
pop
arpl
dec
lods
je
aam
popf
mov
f2xm1
jmp
add
jle
out
pop
jb
xor
popa
sbb
clc
arpl
adc
push
frstpm(287
cmpsb
test
mov
jnp
pop
outsl
xchg
sub
mov
inc
sbb
jecxz
pop
cmp
imul
les
ss
jmp
mov
fnstcw
and
negb
lcall
sbb
adc
or
adc
call
shll
outsb
mov
sub
mov
repnz
sbb
repz
pop
jg
jmp
cmpl
mov
add
jne
sbb
mov
fnstsw
cli
sub
test
or
pop
and
mov
push
or
mov
adc
cwtl
aad
jne
xchg
out
sub
ret
leave
fwait
insb
test
and
lcall
mov
inc
mov
out
std
or
jmp
shlb
adc
sbb
jb
jmp
jp
scas
jecxz
aad
cwtl
pop
and
bound
pop
les
cmpsl
mov
xchg
jnp
xlat
mov
idivl
fwait
jnp
sti
mov
in
pop
and
xchg
idivl
packuswb
push
mov
mov
push
outsb
jl
jb
stc
push
xchg
lret
std
imul
jae
xchg
inc
mov
mov
fisubl
jno
mov
outsl
xor
sbb
sub
hlt
movsb
adc
push
mov
mov
sbb
mov
push
add
out
test
adc
mov
pop
fimuls
lea
iret
jp
fcompl
adc
mov
shr
jmp
mov
outsb
cld
test
push
mov
dec
lret
or
sti
cwtl
push
sbb
test
or
mov
mov
lcall
xor
lret
call
outsl
mov
xor
sbb
pop
rcll
in
pop
lret
xchg
sbb
popf
push
dec
push
inc
lret
jne
or
pop
cltd
push
aas
psubusw
aad
das
std
lret
and
pop
cmpsl
inc
sahf
test
mov
add
sahf
pop
jnp
aaa
mov
or
sbb
push
subb
dec
ja
outsl
arpl
fidivrs
sub
lock
fsubl
jb
xchg
cmp
out
xor
and
adc
sti
sub
gs
dec
mov
add
pop
jae
std
adc
loop
loope
mov
sub
mov
jecxz
outsl
imul
imul
divb
outsb
inc
loop
fcoms
loope
fsubr
xor
mov
xor
add
aam
ret
pop
dec
push
jnp
xor
xor
mov
into
xchg
pop
xchg
mov
rep
cli
mov
push
inc
adc
test
adc
or
xor
dec
aas
xchg
add
pusha
dec
jecxz
ss
testl
dec
jmp
inc
mov
and
cld
xchg
cli
pop
movsl
xor
test
pop
loop
push
stos
jne
jp
sub
out
je
sub
push
int3
jns
addl
dec
xor
fs
cwtl
out
loope
cmp
push
scas
xlat
jl
jnp
out
sub
inc
pop
pusha
outsl
pop
cltd
testl
testl
test
clc
xchg
and
mov
ljmp
cld
mov
rcr
cwtl
cmp
lret
push
inc
jg
jo
cli
mov
jbe
pushf
into
icebp
sub
pusha
sbb
fucom
or
add
mov
pop
and
nop
scas
add
inc
loopne
sti
xchg
pusha
frstor
les
std
push
in
mov
push
sbb
les
inc
cltd
jp
add
dec
push
lcall
dec
pop
sahf
pop
in
push
dec
aaa
jb
mov
jnp
mov
out
in
adc
xor
xchg
gs
or
mov
into
adc
cli
and
sub
rcll
les
mov
ljmp
loop
pusha
push
adc
push
ss
mov
xchg
enter
cs
enter
sbb
xor
add
pop
xchg
sub
and
xchg
mov
mov
andl
pop
xlat
sbb
add
xlat
divb
sub
into
cwtl
xlat
sub
xor
mov
rorb
dec
jns
xchg
sbb
push
xchg
mov
sbb
mov
outsb
pop
mov
out
jne
xor
sub
mov
outsl
mov
into
lcall
aam
xor
outsb
fnstenv
adc
inc
lcall
push
das
bound
jae
sub
imul
subb
stos
popfw
and
push
and
rolb
add
ljmp
in
fcmovnu
mov
sarb
inc
jne
shll
xor
or
popa
lcall
lods
movsl
cld
or
sahf
stos
cmp
mov
rorb
enter
and
add
xchg
pop
loopnew
hlt
test
iret
inc
add
insb
addr16
bound
int3
lcall
gs
cltd
shlb
pop
in
cwtl
aad
inc
stos
or
lcall
nop
pusha
cmp
adc
jo
and
sub
push
mov
dec
jmp
mov
fxam
imul
jmp
leave
mov
cmp
popf
pop
fcmovb
stos
inc
cltd
scas
lods
and
incb
sbb
pop
xor
lds
jmp
int
or
imul
cmp
lods
mov
xor
push
sub
xor
jb,pt
cwtl
inc
pop
clc
xor
out
pop
loop
cwtl
popa
aam
insl
or
cmp
in
shl
ret
sti
dec
xlat
xor
movhps
mov
adc
jge
cwtl
lret
js
xchg
loope
mov
lock
mov
add
adc
add
rorb
pushf
daa
dec
add
pop
pop
pop
js
inc
pop
out
stos
cmpsl
outsl
jp
outsb
clc
mov
in
xchg
cwtl
mov
sti
push
cltd
inc
mov
xor
clc
dec
roll
add
xor
rcrl
pushf
fldt
je
repz
jbe
das
xchg
jle
sbbb
test
pop
cmp
dec
imul
das
xor
scas
jo
inc
mov
lret
push
into
push
adc
push
mov
pop
jg
mov
inc
jle
fsubp
aad
sbb
in
jb
pop
fnsave
adc
inc
pop
inc
fmull
adc
mov
mov
aad
clc
or
lret
stos
addr16
and
adc
dec
sub
ret
sub
and
or
imul
call
adc
int3
mov
mov
int3
add
mov
xor
push
mov
mov
stc
es
pop
pop
das
dec
dec
idivb
mov
lcall
shrb
xchg
mov
ljmp
addr16
lret
dec
incb
iret
inc
pop
xchg
sahf
adc
push
lret
fimuls
stos
dec
in
fdivrs
movsb
push
pop
xchg
cld
mov
mov
cmp
sar
std
add
pushf
pop
push
pop
in
repz
and
daa
dec
jmp
mov
push
or
mov
push
jp
and
sahf
arpl
jecxz
loope
cmp
cmc
inc
lea
or
dec
cltd
mov
and
mov
mov
out
repnz
push
push
stos
loopne
call
rorb
shrl
cmpb
adc
add
lock
rcrl
scas
cmp
cmpb
aas
adc
or
fld
and
jbe
mov
push
inc
lret
aad
push
jl
jo
push
push
and
sub
pop
adc
js
sub
stos
pop
gs
ret
and
mov
cltd
lods
mov
adc
dec
inc
mov
xchg
xor
xchg
in
gs
sub
in
fcoms
nop
int3
push
imul
mov
pop
jo
test
mov
mov
adc
pop
clc
cmpsl
cwtl
icebp
mov
cmp
out
pop
and
loop
lds
jnp
bound
pop
shll
xchg
add
cmp
sbb
ss
mov
xchg
lahf
jmp
or
dec
les
xchg
add
addl
fs
testl
push
xor
lods
cmp
repnz
xchg
cltd
xor
es
out
jbe
jmp
ficompl
adc
out
push
pop
cmp
dec
in
stos
das
cmp
fdivs
add
sub
adc
mov
cmp
out
mov
adc
lret
in
inc
movsl
jbe
sbb
js
sbb
xchg
push
jnp
jecxz
in
pop
adc
sub
jo
loop
push
dec
aad
push
adc
and
out
ds
xchg
call
jge
inc
test
sbb
mov
popl
aaa
js
in
fs
mov
push
jnp
add
cld
das
in
sbb
popf
jmp
inc
mov
sbbb
add
xchg
adc
shr
leave
push
into
push
mov
push
pop
ja
dec
aam
add
pop
int3
cmp
dec
cwtl
cld
mov
sub
dec
sahf
xor
lahf
ja
daa
ljmp
lret
xor
mov
adc
cmpsb
add
loopne
mov
cmp
loop
and
fisttps
outsl
push
arpl
push
pop
mov
imul
dec
cmp
test
mov
pop
int
mov
add
jns
adc
add
jbe
sahf
xchg
push
push
mov
loope
lock
jmp
jecxz
dec
mov
clc
test
lock
addr16
int3
mov
ljmp
push
inc
jb
push
stos
jg
mov
imul
sti
xchg
xor
out
int3
cli
push
mov
xchg
pop
fldl
imul
insb
dec
sahf
xchg
pusha
sbb
xlat
jae
jge
xlat
mov
enter
loop
fisttpl
cmpsl
inc
sti
test
clc
int
adc
jo
dec
and
loopne
vhsubpd
add
xor
cmp
outsb
cld
cwtl
mov
imul
loop
dec
cltd
in
nop
or
loope
ja
or
cmp
pop
mov
xchg
mov
int
adc
je
push
cmc
repz
inc
add
jp
sbb
shrl
bound
pop
in
inc
popa
inc
push
loope
adcb
fbstp
dec
aas
add
ja
mov
pop
push
mov
push
inc
adc
ret
push
push
movsb
or
ret
out
xchg
inc
inc
lret
jne
adc
lret
out
xchg
fwait
push
mov
add
mov
pop
loope
mov
dec
pop
cmp
and
inc
cs
out
or
ret
mov
push
mov
lock
lahf
xchg
adc
sub
fcmovb
push
cld
fidivrs
iret
shrl
pushf
cwtl
out
xor
sub
inc
add
fisttps
fcompl
cmp
sub
xchg
mov
lret
add
shr
loop
test
out
in
jns
cmp
sti
pop
xor
mov
sbb
es
jns
adc
sarb
cmp
push
and
loope
bound
out
int
xor
fsts
in
cmp
jo,pt
push
enter
sahf
cmp
in
insl
push
or
mov
mov
ljmp
add
test
push
test
cmp
clc
rorb
mov
jbe
xor
push
or
insl
ja
push
push
repz
int3
adc
stos
and
xchg
xchg
scas
shrl
stos
xchg
mov
xor
testb
js
enter
aas
pop
mov
inc
push
aas
pop
inc
fs
incb
mov
lock
or
imul
js
cli
mov
jnp
mov
push
lret
and
into
pop
push
or
adc
sar
and
dec
js
mov
std
dec
pusha
hlt
gs
xorb
mov
mov
mov
loopne
xchg
cmp
dec
lea
mov
adc
or
fwait
bound
mov
xchg
mov
ljmp
mov
cmp
out
cmp
shlb
sub
enter
add
aas
inc
and
jge
sub
mov
adc
jg
test
aam
movl
mov
xchg
xchg
imul
out
aas
aas
fisttpll
ss
imul
jmp
and
xor
pop
dec
inc
pop
xor
mov
push
lahf
pusha
aaa
imul
inc
or
jae
inc
daa
adc
in
adc
sub
mov
scas
repz
and
cmp
jl
add
sub
xor
dec
add
das
and
pop
pop
fldcw
pop
pop
jmp
xor
rorl
lea
jl
inc
lds
jge
ds
jno
and
xchg
pop
add
lock
jo
xchg
pop
push
int3
pop
xchg
push
out
xchg
jle
in
mov
adc
and
mov
fidivrs
arpl
push
mov
icebp
and
aas
aas
jmp
lret
mov
sbb
pop
imul
mov
sbb
pop
shl
sbbb
mov
test
mov
cmpl
loop
xor
xchg
sub
adc
test
inc
xchg
xlat
dec
shll
dec
rol
leave
sarb
jmp
clc
enter
repnz
out
hlt
xor
aam
add
loop
pop
push
outsl
sub
fwait
out
lret
mov
orl
jnp
loop
aam
arpl
jae
addr16
mov
imul
out
and
xor
pop
les
jp
in
inc
sub
aaa
loope
lahf
sbb
push
fs
xor
xchg
jg
ret
or
test
iret
nop
adc
mov
mov
decb
add
aas
lea
xchg
push
or
add
imul
jp
mov
test
jecxz
jle
sub
and
mov
stos
stos
adc
notl
sti
dec
pop
cld
pop
stc
mov
jmp
inc
jns
add
dec
sbb
jmp
jns
insl
push
movsl
jnp
je
cmp
outsl
movsl
insl
jmp
mov
push
sarl
dec
mov
push
xchg
out
mov
mov
jge
aam
add
addb
inc
test
dec
outsb
insb
jle
push
mov
add
pop
in
clc
in
arpl
push
mov
in
xor
dec
push
in
or
sbb
cltd
sub
lea
push
jle
orb
sub
mov
push
pushf
mov
push
jl
push
aaa
cmp
stc
ficoms
mov
mov
sub
push
test
leave
subb
add
xchg
sti
push
out
pop
inc
push
addl
mov
inc
fdivrl
hlt
dec
cmp
jbe
mov
pop
insl
add
les
pop
jle
pop
adc
mov
sbb
testb
jbe
inc
scas
call
mov
jbe
pmulhuw
aas
orl
and
mov
roll
out
dec
mov
and
mov
ret
aad
popf
adc
in
jae
pop
sbb
pop
test
dec
hlt
enter
sbb
and
cltd
sbb
adc
inc
loop
push
mov
mov
sub
xchg
sarb
fwait
dec
mov
fidivs
cmc
fdivs
sbb
insb
push
in
push
loope
fsubs
movsb
test
in
faddp
push
jbe
pop
shll
xchg
ds
mov
int
arpl
sbb
lret
push
mov
add
or
fwait
rol
pop
jl
jp
dec
clc
mov
cmc
clc
fsubrl
scas
and
in
mov
cmpl
lret
jge
nop
or
push
loope
aam
imul
xlat
mov
inc
movsl
jb
jns
callw
dec
aad
scas
adc
jle
rcll
into
lock
sub
mov
cli
ss
cmpsb
movsl
add
ds
cmp
xor
jg
and
ss
test
out
aas
fistpll
xorl
or
sbbl
pop
pop
das
aam
inc
xchg
xchg
cmp
inc
ds
cmp
movsl
fiaddl
enter
mov
push
push
fistps
mov
cltd
xchg
jne
push
call
inc
dec
stos
lock
add
inc
hlt
push
adc
mov
adc
repz
in
insb
inc
cmp
sub
pop
mov
jns
subb
pop
mov
pop
xor
into
fmull
aam
mov
dec
fsub
cli
push
les
dec
push
cmpsl
mov
jmp
ret
push
or
je
and
adc
enter
push
jne
aad
push
out
push
es
add
out
test
push
push
cmc
je
decl
pop
mov
mov
add
inc
mov
mov
xchg
dec
xchg
sub
jno
xchg
decb
arpl
xor
xor
ljmp
xor
popl
add
sarl
add
push
xchg
mov
add
mov
cmpb
syscall
jp
es
mov
nop
add
test
jo
push
divb
inc
lret
lods
adc
icebp
sub
push
insl
adc
mov
push
minps
dec
mov
mov
mov
pop
aad
cwtl
rol
lds
push
and
pop
add
lods
divl
xlat
dec
cmc
dec
cmp
fs
adc
sbb
inc
call
ss
dec
push
fucom
rclb
mov
cmp
mov
or
fwait
call
mov
orb
xchg
mov
fidivrl
ja
pusha
xor
imul
dec
dec
out
mov
fnstcw
int3
xor
mov
outsl
enter
dec
loope
popa
adc
add
in
ret
xlat
sub
rcll
push
push
and
push
subb
xor
xor
mov
xlat
push
xor
jbe
mov
fwait
pop
psubd
iret
movhps
sbb
dec
xchg
jbe
fiadds
and
sbb
ja
xchg
or
orl
dec
mov
sbb
pushf
jg
adc
in
pop
scas
xorb
loop
lock
mov
in
lahf
add
xchg
cmpsb
sbb
fmulp
cld
lods
loope
out
pop
sub
mov
mov
faddl
adc
fsubrs
cmp
push
jg
xor
xchg
ljmp
stos
pop
sbb
movhps
sbb
or
aaa
push
repnz
ror
leave
mov
xor
cmp
jge
sbb
les
out
push
in
fimuls
add
push
lock
jne
cmp
into
jae
imul
dec
and
mov
ds
fadd
xor
cmc
push
sbb
jmp
dec
push
sub
adc
ficomps
out
jo
mov
xlat
jns
ret
scas
cmp
mov
sub
push
movsl
xchg
push
inc
xor
sahf
xchg
inc
pop
and
sub
sbb
xchg
push
in
adc
rcrb
sub
adc
xchg
mov
enter
mov
bound
jmp
stc
xor
leave
inc
lahf
mov
data16
pop
push
flds
mov
rorb
adc
cltd
or
mov
imulb
lods
cmp
fildl
jne
movsl
push
or
stc
add
push
imul
add
jmp
pop
sti
pop
dec
dec
xor
adc
inc
hlt
es
mov
adc
mov
into
xor
xchg
pop
inc
int
ret
imul
loop
test
mov
nop
fs
cmp
adc
mov
pusha
aam
push
test
jb
and
mov
out
test
test
into
jo
push
rcl
fs
bound
addr16
movsb
mov
cmpb
fwait
sarb
ret
enter
aaa
std
mov
xorl
sbb
or
decb
pop
add
push
fcmovnbe
iret
jb
sub
mov
outsb
shl
and
xchg
test
lods
fwait
shlb
aam
mov
scas
mov
jnp
mov
and
aad
mov
xchg
mov
pop
aad
movsl
push
movsb
or
and
enter
xor
out
and
cmpsl
sub
movsl
xchg
cld
xor
sbb
lds
add
jbe
mov
sbb
in
lock
mov
aad
jge
push
out
loop
pop
xor
lret
ret
mov
fisttps
repz
aad
cli
mov
pushf
repz
in
aaa
jo
in
or
scas
xor
pop
xchg
dec
mov
push
iret
jmp
test
lret
mov
dec
subb
mov
leave
cmpsl
pop
pop
push
cmpb
adc
adc
les
xchg
fwait
popf
dec
in
lcall
pop
xor
mov
test
lock
jge
stc
das
stos
jns
push
enter
or
out
addr16
mov
jg
dec
insl
adc
jns
insl
test
push
jp
inc
loop
int
lock
fstpt
xchg
sub
int
pop
pop
aad
mov
adc
cmp
enter
mov
mov
out
movsl
inc
lods
xchg
xchg
adc
int3
daa
jbe
jecxz
pmulhuw
jge
mov
sbb
cmp
fistpll
or
jp
lahf
scas
sbb
sub
xchg
mov
test
mov
push
std
mov
inc
aam
repnz
or
out
pushf
lods
notl
mov
outsb
pop
push
jecxz
popa
lret
setne
dec
lret
loop
lds
mov
mov
adc
cmpsb
test
xchg
or
mov
pop
shrl
out
sti
push
sub
std
push
mov
fsubl
jecxz
into
scas
sbb
jecxz
mov
stos
adc
add
addr16
mov
sbb
jmp
cltd
jno
jg
lahf
imul
mov
cmp
decb
stos
adc
test
jp
push
pop
inc
popf
fdivs
push
mov
xlat
in
sub
or
imul
push
jbe
and
test
xor
mov
ljmp
in
cmpsb
sub
inc
call
movsb
mov
xchg
pop
les
leave
test
jae
js
push
mov
jne
pop
insl
mov
scas
rcr
leave
outsl
mov
divps
and
movsl
mov
rcrb
sahf
data16
sub
fildl
adc
add
ret
das
insb
cld
or
divl
inc
mov
js
out
sub
mov
fisubl
xchg
push
test
push
sbb
ljmp
push
xchg
popf
sbb
ss
inc
adc
inc
adc
stc
mov
cmp
daa
lock
mov
push
ret
sub
hlt
std
out
aad
sub
xchg
or
popf
mov
es
into
inc
cmp
pusha
push
sti
pushf
call
adc
fildll
scas
loope
orl
xorl
inc
sub
pop
fisttps
popf
fbstp
icebp
or
mov
ret
arpl
xchg
ds
inc
sub
stos
in
mov
shrl
xor
ja
scas
mov
xor
push
cld
lcall
andb
cmp
and
sbb
push
cmp
mov
popa
incl
sub
popf
mov
pop
mov
jmp
adc
cmc
adc
mov
xchg
dec
je
mov
sahf
mov
jecxz
push
sbb
aam
insb
fbstp
in
pop
pop
imul
insb
inc
mov
mov
mov
dec
nop
jb
jge
jnp
bound
jle
mov
pop
or
mov
jle
test
aas
aaa
xor
dec
sbb
sbb
jge
imul
cmp
xor
popf
mov
iret
pushf
cltd
xchg
outsb
and
add
pusha
mov
in
cmp
xchg
xor
jbe
stc
shrb
fbld
sub
fcomps
dec
rep
sbb
rep
addr16
push
fwait
or
sbb
dec
cmp
dec
push
add
push
jo
jno
add
adc
lea
push
pop
xchg
xor
stos
or
or
or
sbb
jmp
inc
movb
mov
push
jmp
mov
push
add
test
dec
xor
pop
imull
jmp
adc
adc
outsb
and
push
push
pop
nop
jo
xlat
shll
mov
movsb
adc
mov
lahf
sbb
dec
pusha
jne
es
clc
cltd
js
aaa
aam
pop
dec
sbb
daa
jo
add
jmp
es
out
sub
sar
fisubl
jae
ss
pop
cmp
fcmovb
clc
lock
sub
movl
push
mov
ret
fdivrl
pop
sub
test
negl
pop
adc
es
mov
jmp
lods
pop
push
adc
pop
loop
mov
adc
scas
fwait
pop
cmp
xchg
jno
pop
push
lahf
pusha
or
xor
ds
lret
pop
sahf
or
jg
add
div
shlb
inc
repz
xor
and
dec
fsubrs
push
dec
cmp
jbe
mov
ss
mov
shl
mov
scas
sub
loope
mov
xlat
xchg
sub
sbb
mov
xor
push
adc
pop
mov
lcall
add
or
jl
fxch
mov
aad
or
andb
and
mov
cltd
into
or
mov
ret
loopne
sub
rcl
popl
sahf
fs
and
jecxz
cmpsb
xlat
call
and
fadd
add
enter
movsl
dec
addr16
jl
jb
mov
jl
jb
jle
or
adcb
jl
jge
cwtl
pop
xchg
lds
jg
je
fwait
adc
clc
mov
leave
mov
jp
dec
mov
mov
xor
nop
enter
icebp
jno
add
or
sarl
sbb
mov
inc
repnz
repz
aas
bound
out
leave
icebp
fucomi
xor
add
jl
dec
dec
add
shlb
cld
ret
aas
pushl
adc
ss
cmp
popa
rcll
cwtl
jb
mov
sub
addr16
push
stc
pushf
cmpsl
inc
int3
xlat
jb
mov
xchg
sub
mov
adc
enter
pop
rol
ja
or
insl
push
lods
mov
ds
ret
ds
ret
bound
add
inc
sahf
dec
into
aam
pop
pop
iret
mov
jle
sub
lahf
into
js
mov
mov
rol
sahf
mov
mov
insb
pop
cmp
push
jo
aad
into
arpl
or
in
das
xor
xor
stos
adcl
pop
or
cmp
inc
mov
lahf
addb
add
mov
mov
jge
into
sub
leave
movsb
movsl
scas
adc
xorb
mov
repnz
gs
aaa
sbb
jbe
add
test
sub
jp
mov
aam
sbbl
fnstsw
test
lret
imul
addr16
icebp
mov
dec
jmp
outsb
mov
pop
fxch
jb
mov
adcb
lcall
pop
add
adc
add
xor
lea
pop
ficompl
cmp
rolb
xor
hlt
xor
fdivrs
inc
cwtl
pop
sub
test
jb
and
nop
push
xor
pop
lds
imul
sub
lds
rorl
jmp
mov
adc
les
push
or
mov
jecxz
sub
push
cmp
or
adcl
sub
or
xlat
mov
inc
adc
push
aaa
adc
push
jle
xor
fs
arpl
rsm
ret
imul
pop
out
pop
into
out
xlat
add
xchg
data16
out
popa
mov
and
stc
push
jb
add
insl
int
repz
gs
mov
jnp
fwait
aaa
pop
push
sub
pop
jmp
and
out
popf
pop
mov
dec
xchg
js
js
cs
int3
and
jg
aaa
adc
movsb
fs
and
scas
dec
pop
xchg
rcll
fstl
std
aaa
jno
xor
arpl
sahf
jecxz
dec
pop
test
cmc
sbb
addb
and
inc
clc
shl
ljmp
push
and
stos
sbb
sbb
dec
test
add
and
push
pushf
or
push
inc
cmp
lock
xchg
or
push
and
xchg
lcall
sbb
pop
sbb
jns
repnz
daa
sbb
lret
pop
dec
xor
adc
enter
inc
mov
ss
test
push
mov
and
rcl
stc
enter
or
mov
adc
sahf
mov
or
shll
jge
dec
cmc
or
gs
lcall
lret
pop
xor
and
cltd
jnp
sti
pop
push
add
ds
push
lret
cmc
xor
dec
push
std
push
mov
adc
push
sbb
add
lods
lock
and
cs
cs
fldl
push
fnstsw
inc
aam
jo
inc
out
inc
clc
in
cwtl
pushf
jbe
div
jp
xchg
dec
dec
sti
stos
sub
subb
push
mov
pusha
push
rcrb
nop
jl
push
mov
jp
sub
push
pop
mov
mov
push
inc
call
arpl
and
test
pop
push
xor
fisubrs
sub
hlt
fcomps
fcoms
and
push
jecxz
inc
or
jae
pop
mov
jo
cwtl
jbe
mov
lcall
stc
aaa
lret
adc
cmp
cld
insl
cld
jg
jg
std
sbb
push
sub
subb
dec
inc
das
fstpl
stc
sub
test
xchg
imul
sbb
cmp
cmp
das
pop
xchg
xor
or
xchg
loope
xchg
jbe
in
add
std
xchg
call
xor
ret
xchg
fdivrl
push
xor
dec
mov
les
sbb
cmp
add
mov
mov
cmp
outsl
or
loope
rclb
daa
cmp
sbb
clc
sub
cmp
jae
adcl
sub
fnstcw
das
mov
jge
jo
int
push
ss
jae
inc
out
sub
add
cmp
adc
mov
push
cmp
cld
xchg
divl
fldcw
popf
fiaddl
dec
out
aas
call
xchg
movsb
shll
addr16
xchg
cmpsb
and
xchg
pushl
jbe
push
mov
lock
imul
je
loope
shl
jne
mov
cwtl
or
lea
shll
outsl
mov
dec
ja
jle
stos
and
sahf
cmp
xchg
jl
jmp
add
push
scas
xlat
lock
or
xchg
cwtl
jmp
push
jp
mov
xor
ljmp
ss
cmp
push
adc
mov
stos
ret
call
xchg
sbb
mov
cwtl
les
insl
jbe
iret
lahf
addr16
scas
cmp
outsl
mov
das
fsts
shr
sar
inc
cmpsb
push
stos
and
imul
out
aaa
jae
jl
bound
pop
mov
inc
shlb
mov
xchg
fcompl
pop
stos
es
and
push
rolb
loop
push
mov
sub
dec
loope
sub
jae
and
sub
es
cmp
lret
pop
mov
mov
movsl
adc
out
pop
xor
std
add
adc
fwait
sub
xchg
adc
shrl
aaa
out
mov
push
mov
lods
in
icebp
iret
sub
and
mov
inc
mov
mov
mov
jl
sbb
cmpb
cmp
inc
push
xor
inc
mov
cmp
mov
dec
fmull
xor
ja
push
hlt
roll
movsl
and
jo
lcall
repnz
enter
pop
cli
inc
adc
push
jle,pn
mov
push
je
es
sarb
xchg
pop
fs
mov
inc
mov
subl
aas
mov
push
cs
in
fistl
cmp
add
pop
lret
