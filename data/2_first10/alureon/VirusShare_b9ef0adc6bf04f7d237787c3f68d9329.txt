mov
push
xor
cmp
je
cmp
push
mov
je
push
call
jmp
push
push
push
pushl
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
mov
push
mov
push
mov
test
je
push
mov
test
je
andl
push
call
push
call
push
call
test
je
push
call
push
call
mov
push
call
push
call
pop
pop
pop
ret
mov
mov
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
jmp
push
mov
sub
push
push
mov
xor
cmp
je
mov
cmp
je
cmp
je
cmp
je
add
push
lea
push
push
call
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
lea
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
mov
lea
add
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
cmp
jb
mov
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
pushl
call
add
pop
jmp
xor
pop
pop
leave
ret
push
mov
sub
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
jmp
push
mov
push
push
mov
imul
push
mov
cmp
jb
mov
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
push
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
mov
cmp
jae
mov
sub
push
pushl
pushl
call
add
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
mov
mov
mov
rol
imul
add
mov
ret
push
call
pop
ret
push
mov
mov
mov
mov
mov
mov
cmp
jb
push
push
mov
mov
mov
lea
xor
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
mov
mov
lea
ror
lea
not
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
mov
inc
cmp
jb
pop
pop
pop
ret
push
mov
sub
mov
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
mov
push
mov
sub
mov
push
mov
push
push
lea
mov
call
lea
xor
call
test
je
test
je
cmpb
je
mov
push
call
mov
push
mov
call
mov
lea
push
call
mov
test
je
push
push
push
push
call
add
push
call
test
je
push
push
push
call
mov
test
jge
push
push
push
call
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
pop
pop
pop
call
leave
ret
push
lea
sub
mov
push
push
push
push
push
push
mov
call
push
push
call
test
je
push
xor
push
call
push
mov
call
mov
cmp
je
lea
push
push
call
mov
mov
mov
mov
push
push
mov
call
cmp
jne
movl
push
push
call
push
push
mov
call
xor
cmp
setl
mov
mov
cmp
mov
je
mov
cltd
sub
sar
mov
push
push
call
mov
neg
sbb
and
add
push
mov
call
push
mov
call
movzwl
push
call
pop
pop
push
push
push
call
push
push
push
call
push
push
lea
push
call
lea
push
call
mov
mov
mov
movzwl
xor
jmp
cmp
jne
cmpw
je
inc
inc
mov
cmp
jne
jmp
xor
inc
lea
push
movl
movl
call
mov
push
pushl
call
push
push
push
push
push
pushl
mov
call
cmp
mov
mov
jne
xor
push
pop
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
movl
movl
movl
mov
movl
movl
call
test
je
mov
push
mov
imul
cltd
pop
idiv
push
push
mov
mov
add
mov
lea
mov
mov
shl
mov
lea
push
call
mov
mov
sub
sub
mov
cmp
mov
mov
jle
mov
push
pushl
neg
push
push
pushl
sbb
push
push
push
and
add
push
push
push
push
call
cmp
mov
je
lea
push
call
push
push
push
pushl
call
test
jne
call
xor
jmp
call
pushl
call
pushl
pushl
call
pushl
call
push
pushl
call
mov
xor
cmp
sete
push
call
cmp
je
call
cmpl
je
cmpl
je
push
push
push
pushl
call
xor
inc
pop
pop
pop
add
leave
ret
mov
push
mov
push
mov
xor
mov
test
movl
je
push
call
pushl
call
mov
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
mov
push
mov
xor
cmp
jne
mov
jmp
mov
push
mov
mov
test
je
mov
inc
inc
decl
jne
cmpl
pop
jne
dec
mov
movb
pop
ret
mov
push
mov
sub
mov
push
push
push
mov
mov
mov
push
mov
lea
push
pushl
pushl
call
lea
xor
test
je
push
push
push
call
add
test
je
push
add
push
call
inc
pop
add
cmp
pop
mov
jl
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
testl
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
pop
ret
push
mov
sub
push
lea
push
push
movb
call
lea
push
call
add
cmpb
jne
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
leave
ret
push
mov
sub
mov
push
push
push
push
mov
movl
call
andl
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
push
mov
call
mov
mov
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
cmpl
je
mov
mov
jmp
push
call
mov
mov
mov
xor
push
push
push
push
call
movl
mov
push
shl
push
add
incl
push
push
call
mov
mov
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
je
cmpl
jne
lea
push
push
pop
add
xor
div
push
pushl
push
call
mov
push
push
push
push
call
lea
mov
lea
add
lea
add
mov
mov
mov
mov
and
call
mov
mov
mov
call
mov
mov
push
push
mov
xor
push
push
mov
mov
call
mov
lea
push
push
push
lea
push
pushl
movb
pushl
movb
push
call
push
push
push
call
mov
call
mov
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
add
lods
cmpsl
pop
in
cltd
es
pushf
dec
shr
jo
mov
dec
and
gs
dec
sub
psrlw
addb
js
sub
sub
or
insb
or
inc
int
movsl
shr
or
scas
dec
repz
mov
adc
xchg
mov
popa
repnz
loope
sbb
clc
or
lcall
clc
or
push
data16
nop
daa
mov
xor
cmp
xchg
jae
int
xor
sbb
gs
mov
mov
add
icebp
arpl
xchg
out
dec
into
jae
mov
sub
enter
xor
repnz
jnp
jno
clts
sub
mov
jns
lods
sub
outsb
mov
fisubl
pop
jnp
pop
out
ja
jmp
ret
das
dec
adc
addb
sahf
mov
cltd
out
dec
leave
out
inc
std
adc
xchg
test
jecxz
fidivs
mov
jbe
push
xchg
pop
jmp
and
inc
adc
add
inc
aam
dec
adc
mov
loope
js
faddp
test
xchg
repz
cltd
mov
inc
popf
mov
popa
mul
mov
pusha
not
clc
xchg
lods
xchg
iret
rcll
dec
stos
je
sbb
rcrb
jo
subl
cli
pop
fstpt
cmp
lcall
fidivl
movsl
hlt
mov
lret
jg
mov
cmp
cmp
pop
sub
mov
push
sbb
dec
add
add
add
fiadds
push
cltd
sbb
cld
out
dec
into
clc
fnsave
insb
enter
aam
add
mov
pop
cmp
jmp
cld
fstpt
and
call
mov
pop
adc
sub
mov
sahf
pop
sbb
push
test
pop
aas
xor
hlt
lock
xlat
sub
pusha
mov
lods
fcoms
mov
jl
add
add
sbb
add
push
jnp
sahf
ljmp
movsb
sub
sub
and
push
add
mov
sbb
mov
push
xchg
jno
pop
ficompl
pop
outsb
adc
jno
xorl
xchg
lock
xor
push
jb
pop
ss
jmp
xor
outsb
scas
addl
pop
jb
int
dec
push
pcmpeqd
sbb
mov
xor
pop
add
inc
sub
mov
add
add
mov
iret
lods
std
hlt
fisubs
int
test
aad
add
pop
lods
inc
shrb
or
inc
xchg
dec
scas
fadds
cmp
push
mov
jp
loop
xor
xor
and
rcrl
xchg
sbb
jmp
test
mov
dec
adc
outsb
mov
stc
xor
fistl
cmp
mov
mov
es
add
and
dec
hlt
add
inc
adc
lea
ss
xor
mov
out
inc
xor
xor
sbb
adc
pop
in
stos
fsub
mov
push
fstpl
outsl
ja
rcrl
nop
mov
jns
and
aaa
mov
xchg
bound
ret
sub
cmp
inc
bt
and
lahf
cmpl
add
lock
mov
push
push
xchg
mov
dec
inc
mov
push
fxtract
mov
cmp
xchg
jb
xchg
dec
std
mov
xchg
inc
popa
mov
in
cmp
stos
nop
or
mov
xchg
mov
insl
mov
cs
out
stos
pinsrw
jnp
inc
push
push
aas
xlat
adc
cmp
jo
iret
fsubl
sbb
jno
cld
mov
add
xor
lds
or
jbe
jp
loope
test
comiss
dec
pop
adc
imul
insb
sub
push
test
test
fildll
mov
mov
pop
xchg
pushf
or
insb
jge
gs
adc
dec
ss
cli
push
cmpsb
fwait
sbbl
cli
mov
es
mov
jbe
mov
stos
dec
fists
decb
or
jl
scas
sub
out
stos
xor
sub
fwait
add
jg
mov
or
idivb
dec
dec
pop
fisubrs
adc
into
cmp
out
cmpsb
pop
lods
ds
pop
adc
inc
mov
in
push
xchg
loopne
mov
data16
mov
pop
into
out
jns
mov
xor
xchg
roll
in
jmp
icebp
jmp
add
adc
push
jle
shlb
outsb
add
pushf
aam
jae
loopne
into
cmp
js
notl
mov
pop
inc
nop
cltd
dec
pop
adc
mov
test
iret
mov
mov
xor
jge
ljmp
jmp
loop
rcrb
mov
push
pop
lret
aam
fs
mov
popf
pop
mov
pop
movsb
imul
adc
arpl
add
gs
lret
nop
mov
adc
xchg
test
pushf
fs
or
xchg
dec
pop
inc
sub
pop
jne
fld
cwtl
arpl
lret
aad
jl
sbb
das
int
xchg
add
or
cwtl
add
gs
dec
mov
dec
add
sbbl
or
out
lahf
out
iret
push
dec
cmp
out
sub
ljmp
add
add
sub
pop
jno
inc
xor
and
ret
push
dec
pusha
or
movsb
daa
push
add
inc
fdivl
popf
gs
imul
sbb
lods
fisubs
and
mov
popa
jae
daa
mov
pop
fsubrl
add
xor
mov
out
xchg
daa
fnstsw
cmp
into
jp
test
push
add
jl
mov
scas
test
pop
or
dec
push
dec
test
iret
fsubl
cltd
push
xchg
mov
shlb
movsb
push
call
andl
dec
pop
dec
mov
dec
fimuls
mov
or
orb
sbb
gs
jmp
data16
es
and
pushf
arpl
andb
mov
shll
add
add
jne
or
push
loopne
xchg
push
fcomip
lahf
div
or
inc
mov
jle
xchg
pop
lahf
dec
cmpl
jo
std
mov
testb
jne
mov
dec
cmp
in
push
mov
lret
imul
into
jecxz
add
inc
lock
bnd
mov
jo
js
mov
and
out
mov
dec
xor
shlb
cmpb
out
psubusb
pop
popl
mov
add
add
fcomps
mov
loop
call
inc
or
pushf
fcomip
lcall
xlat
cmp
jnp
jns
dec
je
loop
stos
pop
fs
shlb
loop
ret
lods
jns
dec
and
mov
cltd
dec
sbb
jmp
subw
jecxz
xor
hlt
or
adc
lcall
test
mov
lret
push
cmp
pop
testl
ret
test
aam
das
push
xchg
popf
mov
dec
mov
pop
std
add
orb
ds
sub
sub
and
xlat
inc
lock
mov
movsl
pop
inc
mov
ja
inc
int
enter
aam
stos
inc
das
add
push
jnp
stos
arpl
mov
ds
dec
outsb
pusha
aad
and
xchg
cwtl
push
bound
push
lock
lret
add
add
mov
inc
jae
pop
cmp
repz
xchg
push
add
fnstsw
insb
mov
xor
daa
xor
imul
mov
pop
imul
xchg
orl
sub
scas
sub
call
icebp
sub
and
sub
repz
jae
mov
clc
out
cmp
mov
push
inc
push
xchg
add
jo
add
push
xchg
mov
xchg
shl
in
lea
xor
cmpb
add
mov
rol
inc
rcrb
jmp
fld
lods
adc
push
sbb
sbb
mov
test
pop
or
and
add
test
sub
jbe
xor
js
je
cmpsl
sarb
jno
scas
xchg
sub
cmp
adc
jae
outsb
das
imul
xchg
sub
les
das
pop
hlt
adc
add
pop
mov
cmp
add
jno
push
shll
out
icebp
adc
mov
fwait
es
mov
lods
mov
mov
imul
call
mov
adc
xor
fbld
push
leave
cli
rorb
cmpsl
inc
mov
movsl
inc
jns
cmpsb
addb
cmp
jae
sub
nop
iret
pop
cmp
jge
or
mov
mov
and
mov
rcl
leave
xor
sbb
dec
sbb
push
push
add
fwait
mov
mov
lret
out
adcl
loope
mov
xchg
sbb
and
and
scas
mov
mov
inc
pop
jnp
dec
push
lods
test
rolb
jns
xchg
sub
sbb
lret
jae
lcall
in
xor
in
jge,pn
cmp
daa
insl
mov
out
xlat
and
mov
xchg
add
jmp
pop
lds
out
in
sub
hlt
stc
test
mulb
or
sbb
lret
loopne
xor
pop
jl
add
out
sub
xchg
fdivl
and
inc
testl
lret
movsl
or
and
sub
push
pop
push
xchg
sbb
out
inc
pop
sub
popf
hlt
add
cmp
jno
add
inc
push
jle
add
add
in
ret
push
or
push
out
fsubrl
js
lock
push
bound
in
call
adc
shl
test
stos
clc
adc
int
xchg
aaa
lret
imul
mov
lahf
pop
push
mov
scas
and
mov
xchg
out
pop
jns
pusha
pushf
lods
mov
mov
mov
cltd
sub
push
pavgb
lcall
add
add
aaa
outsb
test
sar
mov
xchg
ljmp
sbb
cmp
testl
cld
jae
cmp
xor
sbb
mov
dec
inc
jns
xor
ja
stos
xchg
test
mov
lea
int
test
sbb
pop
pop
fwait
outsb
ds
int3
mov
fnstsw
push
stos
mov
imul
add
add
sbb
int
push
mov
subl
mov
mov
fidivrl
mov
inc
jecxz
add
shrl
lret
jbe
add
sbb
push
or
test
pop
andb
mov
xor
pop
in
xchg
movsb
pop
sub
std
test
arpl
push
mov
scas
adc
fsubl
sbb
mov
cld
addr16
mov
fistpl
add
leave
jbe
dec
test
out
cld
xchg
xchg
xchg
dec
inc
sub
stos
and
cmc
xor
jg
xchg
inc
lret
cmp
cmpsb
aam
mov
and
int3
out
cmp
xchg
leave
or
jg
popf
sbb
adc
dec
xor
xorl
pop
pop
dec
pusha
or
adc
clc
mov
pop
imul
repz
mov
push
lods
mov
inc
mov
sub
in
aam
js
mov
or
or
inc
xor
in
negl
xchg
mov
call
dec
mov
mov
adc
clc
push
jne
aaa
sahf
rorl
ret
jae
inc
pop
push
cli
inc
cmc
pop
imul
jbe
sbb
outsb
lods
sti
or
push
lods
pop
frstor
adc
pop
test
mov
inc
sub
test
ret
out
cmp
xchg
sysret
xor
js
fldenv
adc
outsl
dec
xor
ret
int
push
insb
pop
cmp
dec
or
mov
cmp
sbb
iret
dec
movups
das
lret
imul
roll
push
bound
call
mov
dec
dec
mov
or
jnp
pop
test
mov
shll
add
enter
push
aas
push
or
pop
jle
xor
jno
push
xlat
mov
pop
test
out
dec
outsl
mov
dec
lds
jnp
xchg
add
lret
iret
inc
mov
mov
or
test
dec
adc
inc
sbb
pop
cmp
jmp
stc
sub
xchg
xchg
or
mov
cwtl
dec
icebp
pushf
call
or
jo
adc
add
out
push
loope
aam
imul
arpl
sbb
jp
icebp
xchg
jae
movlps
add
aas
out
cs
into
cmp
push
mov
inc
popa
mov
mov
pop
in
mov
das
mov
imul
scas
mov
aas
and
out
mov
ss
cli
insb
cmc
stc
jl
pop
push
inc
ljmp
fnstcw
mov
aam
push
shll
movsl
xlat
test
add
xor
pop
je
shrb
and
out
lea
and
popf
add
mov
bound
mov
or
out
jb
sbb
andl
pop
test
rcll
lahf
lahf
xchg
sub
aaa
repnz
push
insb
in
xor
sbb
je
std
rcl
je
sub
stos
add
and
add
add
pop
dec
mov
cli
sahf
in
cltd
cli
mov
negb
sub
mov
shrl
push
fwait
push
pop
js
fmuls
icebp
sub
dec
adc
ds
add
jg
xchg
iret
bound
mov
imul
sbb
cmp
push
cmpsl
inc
js
popa
or
orl
fdivs
dec
jb
pop
adc
add
push
jmp
lret
rcrb
mov
hlt
aaa
cld
outsb
cs
out
lcall
cmc
lea
jl
add
push
mov
mov
ret
sub
inc
in
push
aas
cmc
rcl
ljmp
xchg
mov
cmp
mov
aad
xchg
negl
push
mov
cs
cmp
lods
xchg
dec
adc
add
add
jns
dec
sub
mov
rolb
shlb
ja
loop
daa
stc
gs
cmpsb
xchg
andb
stc
cli
adc
out
enter
aad
or
cwtl
mov
xchg
mov
js
mov
leave
jns
inc
fucom
cmp
mov
fisttpll
popa
mov
adc
lret
dec
mov
iret
cmp
cmpl
mov
outsb
pop
jbe
clc
dec
dec
push
clc
rcrb
add
add
ss
fisubrs
pop
je
test
fidivrl
test
lea
iret
push
sub
sub
addl
lods
fwait
and
fistpll
stos
jmp
push
les
mov
call
or
lds
jns
sti
mov
andl
xor
push
sbb
lret
jb
push
pushf
mov
xchg
add
jl
fmul
rol
stos
xor
cli
les
aas
push
imul
les
shll
ljmp
stos
push
lea
and
push
lods
pop
jmp
fs
cmp
inc
inc
imul
sbb
jecxz
add
mov
leave
dec
ret
mov
loope
mov
movsb
pop
ret
mov
add
je
inc
jle
outsb
cmp
jbe
std
lret
cmp
cmp
pushf
pusha
cmp
mov
sarb
dec
xor
xchg
call
ss
lcall
or
stos
xchg
je
push
mov
cmp
imul
je
adc
test
lcall
lret
add
lods
jge
add
mov
test
pop
in
popf
mov
add
add
mov
mov
add
push
mov
pop
cltd
shrb
sub
adc
fucompp
or
test
dec
mulb
mov
cmp
or
xchg
adc
pop
pop
xchg
pop
push
mov
subb
repz
jp
vcvtsd2si
aaa
notl
sbb
repnz
cwtl
lods
pop
in
and
jg
xlat
inc
mov
pop
xor
loopne
int3
pop
xor
sub
add
add
sbb
xchg
cli
ds
xchg
sub
or
mov
dec
sub
jle
scas
and
nop
pop
outsb
dec
jp
and
add
and
dec
dec
pop
inc
inc
rol
aas
imul
out
or
mov
mov
loopne
pop
mov
sbb
popa
dec
and
sbb
mov
mul
in
xor
stc
push
pop
cmp
loop
or
cmp
xchg
add
add
pop
frstor
insb
call
ds
aam
icebp
mov
outsb
call
iret
inc
and
or
xchg
dec
orb
out
in
or
pop
arpl
or
inc
call
fnstenv
pop
push
lods
out
jne
mov
fsub
mov
and
outsl
inc
outsl
jae
gs
push
push
lahf
mov
insl
repnz
add
aaa
cltd
imul
sub
aas
mov
mov
add
adc
sub
add
xchg
aad
pop
mov
adc
pop
mov
pop
sti
aad
pop
iret
jmp
lret
inc
inc
xchg
push
cmpl
pop
into
mov
shlb
mov
arpl
jl
cli
das
or
xchg
cmp
jae
stos
sti
jno
jbe
pop
inc
sbb
pop
fadds
mov
es
mov
xor
hlt
je
mov
fcomps
lret
pushf
rolb
pop
mov
arpl
repz
and
loopne
aad
mov
cmpsl
cmp
push
lret
mov
mov
sbb
notl
cli
fidivl
xchg
mov
mov
mov
mov
in
stc
sub
cmp
mov
pop
in
icebp
jp
lahf
and
and
jp
aaa
and
ljmp
add
add
push
lahf
pop
pop
popa
cs
enter
sarb
pop
dec
hlt
test
test
dec
out
inc
fstl
cmpsb
lock
and
adc
sbb
rcrb
bound
sub
lods
and
and
inc
adc
xchg
ret
xchg
dec
lcall
fisubrs
or
adc
xor
addr16
mov
add
add
xor
add
daa
xor
out
lcall
stos
hlt
loop
xor
arpl
or
jg
fldt
mov
push
lock
adc
jecxz,pn
pop
psrlw
xchg
pop
lods
imulb
jae
fmul
loopne
and
data16
push
adc
test
mov
orb
jno
cs
loopne
fstpl
add
lahf
mov
add
add
mov
mov
cmpsb
shl
pop
jnp
and
dec
leave
lahf
add
adc
adcl
xor
outsb
or
or
pop
xor
sbb
ret
outsl
jmp
mov
sub
stos
mov
jnp
sbbb
and
inc
mov
adc
or
adc
fisubl
mov
mov
push
lea
aaa
xchg
sub
mov
add
mov
xchg
mov
ljmp
jg
adc
pusha
or
in
or
aam
rep
sub
dec
inc
jo
mov
ja
test
fldl
mov
ficomps
push
sub
es
rclb
movsb
or
out
test
adc
and
sbb
xchg
cmp
lea
push
xor
aad
rorb
bound
add
sub
arpl
insl
dec
add
jg
jg
je
lahf
dec
aas
sbb
sub
nop
into
out
xchg
ret
cmp
dec
mov
repz
add
mov
jecxz
inc
fsubl
mov
popf
dec
inc
jmp
xchg
xor
roll
shrl
xchg
adc
adc
mulb
add
fs
fsubp
mov
fistps
test
mov
mov
roll
add
add
je
in
mov
dec
pushf
and
push
jnp
daa
test
inc
pop
pop
fcomi
das
xchg
add
or
dec
adc
sub
in
rcrb
pop
xor
loope
out
jno
leave
mov
or
data16
mov
mov
cmpsb
call
negb
outsb
push
add
push
pop
lock
pop
jge
jb
lcall
aad
push
je
repz
and
add
repnz
jne
push
insb
adc
je
aam
fdivrs
cltd
lds
in
lods
push
inc
dec
ret
jmp
jb
es
fsts
mov
inc
push
xchg
sarb
adc
xchg
test
pop
or
push
add
push
jmp
push
leave
mov
pop
ja
dec
mov
popa
cli
add
sarb
add
das
dec
add
mov
sub
jge
mov
add
jmp
int3
lds
gs
testl
mov
test
xlat
fstpt
push
mov
ja
div
inc
mov
cmpsb
icebp
int
call
fcoml
mov
mov
pop
int
les
cmc
shlb
out
data16
clc
cmpb
or
ret
stc
dec
aas
stos
xor
jl
add
adc
pop
dec
repz
add
ret
dec
and
pop
push
inc
cs
inc
lcall
notl
push
out
cmpsl
stos
out
pop
fwait
xor
add
add
adc
lods
add
mov
mov
pusha
lcall
test
jg
out
push
cmp
shl
cld
push
or
pop
jo
xchg
pop
mov
dec
mov
add
add
arpl
stc
int
jo
fstpt
cmp
or
fisubrs
in
out
inc
jns
push
add
lea
mov
mov
mov
push
dec
pusha
inc
pop
cmp
and
cltd
jecxz
std
rclb
mov
cmc
pop
mov
in
mov
or
mov
leave
addr16
in
xchg
pop
cltd
movsl
pusha
sbb
pop
xor
sub
mov
repnz
inc
jb
arpl
xchg
jns
gs
jle
add
out
mov
sbb
push
leave
adc
cmp
bound
mov
or
js
iret
mov
mov
insb
es
cmc
mov
xchg
shll
ja
xchg
xchg
nop
stos
sub
jmp
dec
cmp
subl
lea
push
mov
popf
cld
imul
lcall
dec
nop
mov
add
mov
out
insb
jecxz
cld
cli
test
push
adc
cmp
cmp
mov
je
daa
adc
mov
fists
sbb
sti
pop
int3
fnstsw
mov
stos
mov
mov
rcr
scas
ds
push
cmp
das
sub
adc
cmp
inc
xor
xchg
jl
dec
sub
dec
imul
push
sbb
rorb
mov
push
int3
and
add
or
pop
pop
jg
add
adc
out
sbb
add
dec
mov
loopne
sub
cmpsl
cld
mov
sbb
or
cmc
enter
cmp
jecxz
lods
shlb
das
sub
mov
repnz
pop
insl
push
xchg
and
or
mov
pop
shl
enter
cmpsb
adc
divb
int
add
jnp
frstor
stos
adc
mov
mov
sub
mov
mov
adc
out
iret
push
cmpsb
fistpll
jne
shrl
cmp
es
push
test
in
dec
adc
sbb
jge
ljmp
lahf
ljmp
push
insl
in
push
or
out
test
cs
sub
or
fs
add
add
in
sbb
lret
das
and
test
test
lahf
sbb
xchg
xor
mov
mov
dec
lahf
xchg
and
add
mov
xlat
les
push
mov
lods
shl
jg
loop
mov
or
mov
dec
cmp
xor
push
add
mov
adc
cmp
pop
out
and
inc
dec
pop
cli
mov
add
adcb
or
mov
ret
ds
out
jb
push
lock
ljmp
cli
cltd
nop
int
pop
mull
out
lret
cmp
pop
jb
into
mov
push
mov
cwtl
test
mov
ljmp
sti
mov
mov
mov
out
je
dec
icebp
cmc
mov
dec
lret
iret
mov
fmulp
inc
adc
dec
adc
push
lods
xchg
aad
aaa
add
iret
mov
add
pop
mov
aas
adc
js
cs
aas
pop
imul
test
arpl
sub
stos
xchg
mov
stc
lods
inc
stos
cmp
pushf
pushf
jbe
fmull
jp
or
ja
add
mov
cmp
mov
pop
fistl
lods
outsl
mov
inc
xchg
lahf
lahf
pop
cltd
mov
mov
mov
sub
mov
mov
xor
fistpll
cmpsl
adc
xor
roll
dec
ret
incb
add
xchg
sbb
sbb
stc
stos
iret
mov
cld
cmp
ja
fsubrs
mov
and
jmp
adc
jecxz
dec
sti
lock
pop
jl
mov
sbb
add
mov
cmp
cmp
mov
rorl
fiadds
xchg
aaa
jg
stc
pusha
mov
das
jo
sbb
int3
aam
push
xchg
int
dec
and
jmp
sbb
or
sub
ljmp
add
and
mov
mov
mov
lock
lret
push
dec
ljmp
out
int3
jl
xor
jge
repnz
fisttpl
sbb
test
mov
adc
adc
inc
adc
fdivl
sub
nop
xchg
incb
mov
add
aas
je
je
xor
add
xchg
adc
and
pop
or
push
adc
cmpsb
in
jp
mov
add
mov
inc
push
mov
scas
dec
iret
repz
adc
fcmovu
out
adc
pop
imul
es
dec
cmp
arpl
mov
bswap
mov
sar
pop
jne
inc
dec
inc
mov
call
inc
scas
inc
negb
push
popf
xlat
mov
dec
loop
ss
int3
fldt
mov
lods
jns
xchg
data16
ja
cmp
adc
fldl
add
mov
sub
sub
ds
sbb
sbb
cmp
adc
into
scas
outsl
xor
popf
xor
enter
shrb
enter
int3
cmp
cmpsl
inc
hlt
pop
xchg
pop
imul
mov
cmp
fcoms
nop
dec
pop
xchg
inc
xor
xorb
jge
mov
ror
shll
insl
inc
pop
in
lahf
xor
jmp
movsl
add
xchg
cmp
out
push
in
fwait
popf
std
stos
insl
js
inc
out
inc
outsb
lods
and
add
pop
ja
dec
repz
dec
pop
sbb
int3
out
test
in
repz
pop
test
in
jmp
or
mov
pop
pop
outsl
pop
popa
xchg
lret
pop
movsb
adc
mov
stos
push
or
ja
inc
push
mov
mov
adc
xchg
sub
lds
add
sub
repnz
cmp
adc
movsb
jp
mov
and
lret
js
or
push
sti
addl
and
lret
test
filds
cmp
jmp
enter
test
pop
ret
movsl
jg
dec
mov
adc
inc
scas
dec
insb
sub
sti
xor
push
lods
pop
mov
sbb
iret
in
xchg
push
cmp
add
test
enter
push
pop
sbb
movsb
into
lret
sub
or
xchg
rcr
cmpsl
add
mov
fprem1
push
ljmp
shrl
or
sahf
loope
outsl
ror
sub
cmp
sahf
adc
xor
sub
adc
aad
push
mov
sahf
xchg
in
pop
mov
xlat
aaa
aam
cmpsb
and
cmp
mov
loop
outsl
ss
lds
add
add
cmpsl
call
fsubrp
lea
fstl
hlt
jge
fcoms
dec
popa
in
jg
xor
ljmp
enter
aam
cmp
or
push
mov
xchg
lret
mov
aas
dec
in
or
sbb
push
pop
aam
or
loopne
adc
cli
jbe
pop
out
pop
or
jmp
je
pop
pop
shl
jge
add
push
shr
adc
adc
aaa
push
pop
push
jge
mov
or
push
mov
xor
stc
xor
cli
pop
frstor
or
push
data16
cmp
or
mov
sub
and
lcall
mov
clc
push
sbb
mov
into
loope
leave
inc
lea
push
aas
jge
sti
and
das
arpl
adc
jno
outsb
mov
pop
add
add
inc
jle
std
cwtl
xchg
sbb
sub
xor
add
pushf
sub
sub
inc
rolb
xchg
mov
pop
adc
cmc
add
or
or
xlat
jnp
mov
repz
or
mov
cmc
inc
in
pop
test
and
cmpsb
add
divb
sub
jns
sbb
mov
or
outsb
or
out
xchg
out
push
icebp
add
add
outsl
xlat
xchg
es
cmc
adc
mov
xchg
mov
push
mov
