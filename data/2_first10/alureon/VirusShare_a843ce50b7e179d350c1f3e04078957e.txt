push
push
xor
push
mov
call
xor
push
mov
call
inc
pop
cmp
jb
mov
mov
call
dec
jne
push
mov
call
mov
cmp
jne
push
pushl
push
mov
call
jmp
cmp
je
cmp
jne
testl
je
cmp
je
push
push
push
xor
call
push
mov
jmp
push
push
push
push
push
mov
call
test
je
push
mov
call
pop
xor
pop
ret
push
mov
sub
push
mov
push
test
jne
push
mov
call
push
lea
push
xor
inc
push
mov
push
mov
mov
call
mov
call
cmp
je
xor
jmp
push
push
push
push
push
mov
call
mov
mov
mov
mov
push
sub
mov
call
push
call
lea
push
push
push
push
call
push
pop
mov
mov
mov
push
mov
mov
push
lea
push
push
mov
call
cmpl
je
cmp
jne
mov
call
cmp
jne
lea
call
pushl
mov
pushl
pushl
push
call
mov
sub
mov
mov
add
push
mov
and
add
push
add
call
mov
mov
mov
mov
add
mov
add
movzwl
lea
add
mov
movzwl
lea
mov
mov
sub
xor
mov
mov
mov
cmp
je
mov
cmp
je
add
mov
mov
mov
jmp
mov
mov
mov
cmp
je
add
lea
mov
mov
mov
mov
add
push
push
push
call
or
sub
mov
mov
mov
sub
push
push
call
call
test
je
cmpl
je
mov
mov
call
movzwl
xor
xor
mov
cmp
jae
mov
mov
addl
push
pop
rep
mov
mov
mov
add
add
mov
mov
movzwl
inc
cmp
jb
mov
mov
mov
add
mov
pushl
mov
pushl
mov
mov
push
pushl
call
pop
pop
pop
leave
ret
mov
xor
cmp
je
inc
inc
cmpb
jne
ret
push
mov
sub
andl
lea
push
movb
mov
mov
mov
mov
rep
pop
push
push
rdtsc
mov
mov
test
jne
mov
jmp
mov
not
ror
not
movzbl
lea
cmpb
jne
push
pushl
movb
pushl
call
pushl
mov
call
push
pushl
mov
pushl
call
mov
mov
cmp
jne
movzbl
push
pushl
pushl
call
pushl
pushl
pushl
call
xor
pop
inc
pop
leave
ret
mov
add
mov
test
je
add
add
add
add
add
push
mov
push
lea
xor
cmp
jbe
add
inc
cmp
jb
mov
add
xor
cmp
jbe
add
inc
cmp
jb
pop
pop
xor
inc
ret
push
mov
cmpl
push
push
jb
mov
mov
mov
pushl
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
pop
pop
pop
ret
push
mov
push
mov
movzwl
movzwl
andl
add
je
push
mov
push
lea
testl
je
mov
mov
and
add
push
push
pushl
call
jmp
mov
mov
add
add
movzwl
movzwl
incl
add
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
mov
mov
sub
add
push
mov
test
jne
xor
jmp
mov
add
mov
push
mov
mov
mov
push
mov
add
add
add
mov
mov
test
jns
and
sub
cmp
jae
mov
jmp
xor
mov
cmp
jae
jmp
mov
mov
mov
mov
add
mov
call
cmp
je
incl
mov
cmp
jb
mov
mov
mov
cmp
je
movzwl
mov
add
test
je
mov
add
cmp
jae
cmp
jb
xor
cmpb
je
inc
cmpb
jne
push
lea
push
push
mov
call
add
lea
push
mov
movb
call
mov
test
jne
xor
jmp
lea
call
push
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
andl
push
call
lea
mov
test
jbe
mov
mov
mov
and
rol
movzwl
dec
lea
mov
jne
testl
je
push
mov
and
or
add
mov
pop
mov
leave
ret
push
push
mov
mov
mov
mov
mov
mov
mov
cmpb
jne
cmpb
jne
pop
pop
ret
push
mov
mov
add
mov
sub
test
je
andl
push
lea
lea
cmpl
mov
je
push
mov
mov
add
push
mov
call
mov
andl
add
cmpl
mov
je
mov
mov
test
jns
and
jmp
lea
push
pushl
mov
call
incl
mov
mov
lea
cmpl
jne
mov
incl
mov
mov
imul
lea
lea
cmpl
jne
pop
pop
xor
inc
leave
ret
push
xor
cmp
jbe
lea
push
mov
add
mov
add
inc
add
cmp
jb
pop
pop
ret
push
push
mov
mov
push
pop
movzbl
xor
mov
inc
and
rol
imul
inc
mov
sub
mov
mov
not
mov
add
not
shl
imul
sub
imul
dec
decl
mov
jne
pop
mov
pop
ret
push
mov
push
push
mov
mov
mov
mov
push
push
lea
mov
mov
mov
sub
not
sub
not
shr
add
push
mov
add
push
lea
push
mov
call
add
mov
mov
mov
mov
push
popl
sub
lods
xor
stos
sub
sub
rorl
sub
dec
jne
mov
mov
neg
add
add
sub
add
mov
imul
add
mov
imul
add
mov
mov
mov
add
and
add
movl
mov
pushl
lea
push
push
mov
call
mov
add
xor
add
add
decl
mov
jne
addl
pop
pop
leave
ret
xor
mov
add
add
stos
sldt
lods
adc
lock
jp
sub
movsl
jbe
dec
sbb
lods
or
repz
test
xchg
popl
push
fisubrl
out
mov
sub
enter
call
jae
in
sahf
push
adcl
pop
imul
rol
jbe
lock
mov
inc
adc
fidivrl
les
pop
fdivl
iret
test
jle
addr16
add
jmp
mov
xor
adc
imul
fwait
adc
cmc
dec
arpl
or
add
sbb
les
xor
mov
es
add
adc
lods
aam
sti
ret
movsb
xor
xor
inc
dec
inc
mov
jmp
clc
lock
daa
int
cmpsb
pop
xor
insb
test
test
mov
arpl
xchg
movsl
stos
popa
psubq
jno
inc
adc
mov
test
fs
into
es
in
popa
inc
enter
cli
loope
and
cs
push
and
out
sub
mov
jo
aad
sub
lea
mov
or
and
aam
scas
fsubrs
jb
jp
xor
lods
es
add
jl
repnz
lods
adc
jno
xor
dec
mov
pop
or
jb
jo
jle
cmpsb
xor
cmpsb
and
jne
int3
call
xor
test
add
std
or
inc
bound
cmpsb
mov
cs
mov
cld
jp
in
imul
jmp
addl
adcl
scas
or
sbb
pop
insb
or
inc
mov
cmpb
data16
clc
lret
jp
cmp
inc
mov
dec
jno
add
sbb
fwait
movsb
cwtl
inc
movsl
pop
addl
push
and
pop
sbb
aad
repz
cmp
cmp
adc
hlt
and
loopne
mov
sbb
fstps
hlt
sbbl
cmp
push
lds
dec
loopne
adc
negl
lods
les
aas
roll
movsb
sbb
xchg
push
iret
xorb
ror
xor
out
mov
pop
and
dec
cs
mov
lea
add
adc
outsb
dec
jb
cli
cmpsl
jae
xlat
ret
into
add
addr16
lea
and
sbb
inc
sub
jbe
cmp
pusha
push
int3
call
push
cmp
ja
imul
sahf
popa
lods
jbe
pop
dec
cmp
adc
testl
bound
dec
imul
test
addr16
mov
cmp
and
cld
lea
sbb
fnstsw
insl
lock
inc
xchg
ljmp
xchg
mov
xchg
mov
and
nop
ret
syscall
sbb
adc
xor
jno
mov
test
test
jnp
ja
mov
out
dec
pushfw
andl
xor
inc
mov
pop
nop
rcl
ja
les
test
lods
lahf
enter
pop
mov
sahf
jnp
test
fistl
mov
int
dec
inc
ret
adc
mov
adc
arpl
push
push
cli
hlt
insl
call
and
mov
mov
jecxz
ficompl
insb
test
dec
icebp
repz
clc
aam
or
pop
nop
das
dec
in
mov
shlb
inc
mov
inc
repnz
dec
aad
jmp
push
sbbb
loop
push
xchg
mov
test
ljmp
fdivrl
add
call
adc
mov
cli
or
ret
sti
pop
jns
lret
dec
pop
test
dec
sub
mov
iret
and
nop
adc
xchg
ud0
add
arpl
cmpsl
int
pusha
mov
mov
pop
mov
loop
cmp
bound
fstps
and
add
cli
je
add
mov
jmp
push
xchg
lret
loope
add
imul
pop
cltd
lahf
mov
fidivl
add
cmp
movsb
mov
inc
out
mov
int
pusha
or
out
mov
pop
push
jmp
ret
sub
jne
mov
in
fstl
mov
cmp
orb
and
push
int3
push
hlt
mov
out
push
sub
jmp
int
mov
push
ljmp
xchg
push
xchg
fisubrl
arpl
push
jno
or
or
mov
mov
dec
jae
das
in
rcrb
push
mov
in
adc
xchg
and
sbb
push
mov
icebp
movl
or
test
insb
popf
jle
in
xchg
xchg
sub
cmp
pop
adc
jl
int
cmp
xchg
pop
test
or
sub
addl
pop
test
mov
loop
xor
jnp
jo
cld
jge
pop
fdivrl
pop
jl
xlat
push
mov
insb
fwait
adc
xchg
das
jmp
aas
jnp
mov
push
or
dec
imul
or
aam
daa
shll
mov
push
clc
daa
out
aam
xchg
cmp
push
pop
jno
mov
xchg
test
add
hlt
or
push
ja
add
jge
push
inc
xchg
mov
mov
xchg
and
fsubrp
or
sbb
push
out
mov
mov
dec
sarb
rorb
adc
out
sti
lcall
push
xor
inc
loop
ret
dec
pop
in
fdivrl
and
sub
les
adc
int
and
and
leave
push
add
mov
gs
cmp
mov
rcr
inc
push
jae
xchg
push
cltd
sahf
lds
pop
lea
xchg
push
xchg
pop
jl
cwtl
pop
popa
xor
pop
aad
add
mov
sti
in
test
push
iret
jbe
sbb
int
mov
cmpsb
es
push
xlat
mov
bound
dec
ficoms
inc
or
jle
fisubrl
adc
mov
shl
jns
das
push
fisttps
aas
fcompl
rcr
roll
test
imul
repnz
push
fwait
adc
xor
push
fabs
out
iret
mov
adc
push
mov
dec
sub
pop
xchg
lcall
or
jp
std
mov
mov
sub
cpuid
addr16
jno
cmp
js
cmpsl
int
out
scas
push
push
sahf
sysenter
cld
rclb
sub
mov
xchg
shrl
dec
inc
xchg
inc
cmpsb
rcll
mov
lret
testb
fs
sub
gs
pop
cmovg
in
iret
mov
leave
enter
cmp
subps
add
and
push
int3
inc
mov
mov
addr16
andl
cmp
icebp
in
and
hlt
sub
xlat
lahf
imul
jecxz
out
dec
addr16
pop
and
std
sahf
add
cmp
popa
out
sbb
mov
xchg
js
mov
push
jno
push
sti
test
or
test
xchg
fistpl
dec
sub
cwtl
cli
jmp
lods
loop
push
add
addr16
xor
add
sahf
inc
push
mov
dec
add
cli
jp
mov
cmpsb
dec
into
add
xor
aad
add
dec
addl
dec
roll
dec
pop
icebp
out
andl
push
das
popf
and
mov
add
ljmp
int3
movsl
add
jo
push
cmp
es
test
jmp
inc
mov
cmp
jge
or
ss
or
or
pop
and
xchg
cmp
xor
in
and
sysexit
gs
adc
loopne
out
out
arpl
mov
rcrb
add
sub
xor
add
incb
inc
int
mov
lock
outsb
rorb
xor
inc
xchg
lret
lret
mov
fsts
pop
movsb
pop
pop
popa
movsl
pop
jge
adc
mov
push
sbb
out
mov
movsb
jp
out
mov
jl
inc
mov
in
lahf
adc
lcall
test
dec
sub
pop
clc
scas
ds
sti
push
dec
jmp
xor
and
sbbw
leave
xlat
subb
cmpl
jb
inc
add
sarb
and
movsl
in
call
pop
pop
decb
xlat
dec
sub
shll
lret
adc
cwtl
popa
js
pop
xor
push
or
sbb
mov
adc
fs
outsl
test
cwtl
push
cmp
popa
sbb
mov
pop
jo
inc
mov
or
or
out
pop
jge
cmp
test
ret
pop
xchg
xchg
lods
cmp
push
negb
inc
cmpl
mov
lods
add
pop
xchg
sub
and
add
sbb
xchg
notb
pop
jns
pop
or
and
and
das
push
test
cmp
ret
jno
scas
outsl
sti
call
add
push
mov
mov
xlat
dec
fidivrs
cmp
pop
and
jno
sbbl
pop
ljmp
and
push
dec
hlt
sbb
pop
sub
jne
ficoms
mov
ficompl
jg
test
fildll
xchg
and
sbb
mov
shlb
imul
loopne
adc
popf
outsb
loopne
jmp
jmp
jnp
xchg
push
fidivrl
out
mov
lret
sub
add
repnz
cmp
mov
scas
mov
mov
xchg
xor
std
lock
pop
repz
jecxz
ds
and
dec
icebp
ljmp
arpl
lods
ss
xlat
xor
jmp
xor
ss
and
xor
xor
mov
push
stos
fldl2e
add
mov
paddsb
push
enter
lds
xor
adc
cltd
xlat
out
xchg
mov
sarb
cli
je
les
outsb
in
popa
ljmp
cs
and
jbe
jnp
clc
popa
add
xor
add
test
mov
inc
dec
mov
push
fcmovb
cltd
adc
mov
cmp
dec
mov
mov
imul
movsl
or
popf
sub
inc
ror
pushf
testl
imul
mov
sbb
and
js
mov
notl
push
xor
xchg
sbb
sub
mov
xor
rol
fbld
add
cs
push
into
mov
jns
jae
and
pop
jb
loope
jb
sbb
xchg
xor
push
xor
cs
and
mov
adc
dec
ljmp
mov
jmp
xchg
dec
hlt
aaa
mov
mov
adcb
repz
jb
pop
mov
outsb
wrmsr
test
dec
add
mov
push
cmpsl
jecxz
aaa
adc
fsubr
add
xchg
adc
repnz
xlat
sub
mov
bsr
mov
bound
aaa
adc
imul
or
popa
daa
inc
xchg
mov
pop
sbb
and
pop
add
jno
adc
inc
push
xchg
fnstsw
pop
insb
lret
mov
insl
ljmp
push
xchg
lods
or
cmp
fisttpll
and
jne
and
test
or
pusha
xchg
loope
sub
fcoms
es
rol
lods
jmp
jne
mov
add
or
add
cltd
jp
sub
mov
cmp
mov
mov
ficoms
out
push
or
pop
dec
iret
cltd
in
pop
in
xchg
lods
popf
leave
pop
lahf
push
and
cmc
fcompl
cmpsb
leave
shll
sbb
cmp
movsb
sbb
jle
idivl
scas
pop
push
ret
ss
mov
test
jae
es
adc
daa
rep
pushf
add
pop
push
add
fisubl
les
dec
mov
jae
popf
and
jno
pop
adc
inc
mov
mov
or
sahf
mov
add
rcl
pop
lret
out
sbb
xor
decb
test
push
hlt
xchg
bound
cwtl
shr
mov
mov
jno
or
pop
push
push
lahf
es
xchg
rorb
stos
clc
pop
cs
dec
lock
xchg
and
add
ljmp
les
dec
mov
pusha
push
mov
imul
mov
xor
push
push
les
cwtl
mov
aas
mov
cmc
sub
sub
fidivrl
adc
es
insb
mov
lea
xlat
sbb
lcall
js
xchg
add
sbb
out
and
fs
nop
inc
sub
mov
arpl
jns
mov
or
cmpsl
push
dec
mov
scas
mov
adc
fcoml
insb
sub
lock
cmp
jle
shrb
out
js
sahf
rcrb
in
mov
into
and
divb
jno
mov
add
sbb
rcrl
shrb
xor
and
mov
or
pop
std
jle
icebp
bound
test
jno
lods
adc
rcrb
xchg
push
clc
sub
mull
mov
stos
lds
movsb
lods
cli
out
or
mov
nop
loopne
xchg
mov
addr16
push
sahf
mov
fists
mov
push
in
jo
xchg
xor
xchg
lods
insb
inc
imul
jge
pop
js
bt
jb
rcrl
add
or
cmp
jl
in
jb
pop
xor
shlb
lods
test
push
das
js
mov
movsb
decb
subl
movsl
sahf
into
jp
mov
or
icebp
jnp
into
loopne
add
loop
inc
mov
lea
sbb
je
