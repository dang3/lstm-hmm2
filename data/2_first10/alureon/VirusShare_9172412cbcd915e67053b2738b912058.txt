push
xchg
sub
mov
sub
mov
pop
pop
mov
xchg
sub
mov
push
pop
pop
sub
xchg
xchg
push
xchg
sub
mov
sub
mov
pop
pop
jmp
rcrb
pop
nop
movsl
and
add
lahf
ret
addr16
out
or
ja
ret
add
add
jo
andl
add
push
cmp
cltd
sub
xchg
popf
adc
xchg
and
adc
lea
sbb
fistps
adc
cmp
mov
fldenv
inc
push
sbb
pop
pop
cs
mov
imul
fwait
inc
jb,pn
inc
jb
pop
xor
sbb
xchg
pop
sub
and
mov
fcmove
or
psubb
mov
jo
repnz
insb
sub
inc
orb
cmp
lret
pop
adc
orl
lahf
insl
sub
lea
iret
pusha
sub
insb
outsl
into
stc
add
push
lret
into
fbstp
add
jno
orl
dec
or
call
std
mov
in
push
sub
add
push
lcall
or
ss
or
and
lock
pminsw
fstps
bound
mov
nop
outsb
rcll
call
arpl
in
ja
sbb
dec
and
cmp
pop
xchg
push
or
rsqrtps
ret
dec
pop
sbb
push
push
in
adc
adc
push
jnp
pushf
adc
rcl
out
aas
push
sbb
lock
xchg
mull
add
clc
les
jg
and
cmpsb
ja
add
push
jne
iret
xchg
push
scas
js
addr16
jge
out
cmpsl
subl
and
pop
ret
jl
jns
pop
push
mov
test
jo
ret
in
sbbb
add
pop
sahf
es
adc
pop
fists
and
pop
adc
cmp
add
push
jmp
mov
mov
lahf
jae
or
and
xor
push
jmp
sub
adcl
dec
add
jne
or
add
rcl
mov
movsb
out
jmp
add
rcll
adc
stc
add
add
notl
pop
push
loope
pop
shl
dec
shlb
pop
call
daa
divb
push
mov
int
cmpl
enter
jne
lahf
xor
add
mov
in
cltd
or
push
push
jo
push
jne
pop
sbb
and
ret
jae
sahf
popa
pop
lods
adcl
push
enter
mov
and
fdivrs
inc
push
sub
enter
mov
loope
add
pop
add
cmpsb
dec
adc
pop
xor
dec
lods
pop
pop
loope
rcrb
mov
outsl
adc
pop
sub
lea
aad
test
push
push
jmp
mov
cmpsl
xor
sbb
js
imul
sub
addr16
inc
pop
add
scas
out
add
inc
fdivs
lea
xor
mov
jne
jbe
sbb
xchg
and
into
lea
adc
scas
push
jns
loope
es
hlt
sysret
ja
jg
test
add
es
add
nop
xchg
aad
push
frstor
add
popa
ret
push
movsb
in
std
jbe
inc
pushf
jno
aaa
lahf
iret
je
pop
imul
int
arpl
xchg
aaa
sub
mov
aad
pop
mov
fbld
mov
ss
call
movsb
enter
in
mov
aam
por
dec
cmp
scas
xor
stos
xor
pop
pop
adc
or
mov
lea
mov
fidivs
add
xchg
addr16
xchg
mov
test
lahf
xchg
cmpsb
mov
popf
das
sub
cmp
out
imul
push
and
xchg
int
jp
add
sti
cmp
jb
dec
jne
xor
xor
cmp
jbe
adc
movsb
and
pop
enter
add
cmpsl
test
addl
jbe
in
fidivrl
cwtl
mov
je
xchg
cvtps2pd
xchg
pop
and
pop
call
mov
sbb
push
mov
and
and
clc
int3
mov
mov
pop
or
movb
pop
xchg
jne
adc
icebp
lods
cmp
jmp
sbb
lods
push
pop
into
pop
stos
add
std
mov
sti
add
and
sbb
push
inc
dec
push
inc
cs
adcb
int
jg
push
pop
xor
dec
mov
pop
hlt
push
mov
mov
cmp
jmp
outsl
arpl
add
rclb
adc
push
push
xchg
das
mov
xchg
or
adc
iret
adc
mov
sub
xchg
out
pop
mov
push
cmp
pop
dec
xor
movsb
fs
and
rclb
sbb
test
mov
dec
lret
sub
cmp
fidivl
mov
icebp
sbb
out
roll
in
ret
lds
gs
mov
fst
cld
gs
bound
xchg
sahf
sbb
daa
aaa
add
lahf
lcall
subl
aaa
mov
sbb
les
les
pop
sub
lahf
sub
sbb
cmp
fstl
int3
inc
pushf
ljmp
xchg
inc
push
dec
addr16
rcr
push
aam
mov
addr16
frstor
fmul
xchg
pop
fcmovu
xor
inc
test
les
andb
or
xor
loop
rolb
and
cmp
add
in
movsb
and
xor
jb
lock
mov
inc
cmp
out
mov
sbb
leave
pop
addb
sbb
add
sub
call
pmullw
or
call
sub
rcpps
aad
sub
cmp
pop
xchg
pop
stos
sub
adc
push
test
xchg
test
add
adc
sbb
aaa
add
loopne
mov
cmp
inc
fsubs
mov
inc
addl
dec
pop
push
popa
mov
mov
push
mov
jne
mov
mov
fisubrl
and
std
and
sti
and
mov
movsl
lea
ja
cltd
repz
pop
xor
sbb
sub
imul
rcrl
les
fstl
dec
aam
xchg
lods
and
shrl
sbb
sbb
xor
cmp
push
lods
pushf
enter
scas
aad
mov
test
outsb
ret
data16
lds
mov
inc
pop
les
int3
bound
shlb
xor
aam
inc
mov
mov
or
mov
inc
adc
mov
xor
sub
fimuls
push
stc
inc
xor
or
sbb
cmp
ja
ss
push
push
mov
fwait
imul
cmp
xor
fwait
pop
fs
in
inc
xchg
push
sbb
or
cmp
or
inc
and
inc
pop
inc
jge
jmp
and
sbb
fwait
lret
add
jnp
bound
mov
xor
aad
lock
xor
pop
push
addr16
add
into
and
hlt
int
adc
add
lret
push
dec
and
adc
filds
inc
xor
add
and
or
inc
lock
mov
mov
jl
aas
push
jl
int3
lds
mov
xor
inc
mov
pop
xchg
in
insb
sar
jno
xor
dec
jmp
jbe
cmp
push
inc
adc
movl
in
iret
pop
jle
sarb
fsubl
dec
push
sbb
js
jo
sub
iret
addr16
cmp
lea
in
and
cmp
divb
arpl
lahf
ja
mov
int
adc
mov
and
sbb
jge
jl
push
pop
mov
movsb
pop
das
xor
sahf
pop
bound
jns
sbb
ret
or
push
push
pop
jmp
cld
addr16
inc
push
cmp
dec
jg
lods
adc
cld
xchg
test
pop
add
push
push
es
pop
sub
adc
or
in
int
mov
imul
mov
xchg
jmp
mov
ret
jbe
incl
in
jns
fwait
inc
lahf
inc
cwtl
ja
lret
mov
mov
ljmp
adc
dec
fldcw
test
test
push
pop
in
jl
xor
pop
cmp
mov
das
andb
cmp
inc
mov
cmp
jo
adc
in
cmp
stos
add
stc
test
cmp
in
fdivrl
mov
sahf
adc
shl
push
add
loope
jnp
jmp
xchg
inc
pop
mov
jne
sbb
fbstp
push
xchg
or
adc
in
cmp
pop
push
or
cwtl
pop
cwtl
mov
jbe
jle
pop
jnp
mov
stc
xchg
pop
sbb
loope
dec
push
xchg
add
stos
pop
pop
in
push
adc
dec
movsb
aaa
in
push
mov
xor
fistl
adc
cs
mov
xor
cmp
adcb
leave
sub
fcomps
push
mov
mov
cld
test
xchg
pop
mov
repz
imul
rorb
mov
mov
cmp
add
jl
sbb
sbb
ret
push
or
mov
repz
clc
sub
inc
adcl
dec
fsubl
pop
fwait
cmp
stos
mov
ds
mov
adc
mov
sbb
test
push
cwtl
dec
push
outsb
dec
hlt
sbb
xchg
xchg
movsl
repz
and
inc
mov
sbb
lods
and
cmp
call
push
in
or
das
xchg
dec
lea
adc
jb
pop
ror
push
test
js
mov
lret
out
add
mov
sbb
push
les
pop
mov
test
nop
pop
push
sub
movsb
movb
jb
loope
pop
add
adc
cmp
imul
xor
mov
rcrl
call
pop
iret
sbbb
ficomps
sarl
sbb
pop
out
in
clc
mov
mov
add
mov
mov
jnp
into
outsb
fs
mov
sti
pop
mov
repnz
xor
add
je
in
mov
or
aaa
outsb
mov
sub
jb
call
lea
or
add
aam
adc
or
adc
sbb
adc
sbb
dec
fs
fs
pusha
cmp
or
xorl
xchg
movsl
loope
fcoms
addr16
gs
or
pushf
popa
or
push
stc
sbb
fidivl
cmc
adc
test
leave
lahf
and
mov
iret
out
pop
arpl
adc
insb
andl
nop
iret
out
aaa
rclb
sti
cli
ja
sti
cmc
clc
pop
stos
leave
stos
adc
ss
cmp
fucomp
push
and
dec
lret
lock
clc
stc
jbe
push
cmp
add
repz
insb
test
adc
xor
add
jl
fists
call
mov
adc
cmp
mov
or
dec
xchg
mulb
pop
and
push
fidivrs
movsl
or
pop
repnz
sbb
mov
insl
pop
cld
pop
dec
push
fcomps
add
push
push
inc
insb
sbb
sub
ret
jmp
xlat
xchg
push
hlt
aas
or
ja
mov
mov
es
cmp
stos
je
out
sub
daa
jg
push
les
sub
xchg
addr16
jno
lea
and
push
dec
mov
inc
push
dec
adc
dec
pop
and
push
not
inc
push
repnz
sub
push
loope
mov
sub
adcl
out
cltd
pop
int
or
lods
pop
in
sub
ljmp
daa
sbb
es
mov
in
sub
push
dec
xchg
sarb
xchg
mov
inc
add
pop
enter
adc
iret
lods
andl
or
rorl
and
mov
sbb
pop
invd
out
gs
jg
cwtl
and
adc
mov
stos
outsl
push
sbb
dec
or
xchg
mov
mov
mov
jne
adc
int3
jbe
xor
mov
mov
xchg
pop
xor
lahf
xchg
adc
add
push
inc
push
mov
mov
push
jne
push
adc
popf
xor
pminub
xor
push
insb
mov
push
dec
jl
jne
das
mov
xchg
lods
negb
adc
mov
push
adc
hlt
aad
orl
fwait
cmpsb
mov
mov
inc
xor
stc
pop
cmpl
dec
mov
mov
mov
dec
test
mov
fistl
je,pn
push
pop
inc
loope
mov
movzwl
jge
pusha
fdivrs
lds
ss
adc
pop
or
xor
stc
sbbl
int3
pop
xchg
pop
outsb
cltd
or
stos
fpatan
add
pop
jae
leave
jg
ljmp
dec
or
add
xor
xchg
mov
mov
je
std
lahf
dec
imul
xchg
add
fstps
add
mov
mov
push
lds
sub
xchg
out
cmp
gs
lock
insb
das
mov
cmp
cmp
push
xchg
iret
fnsave
lock
push
pusha
xlat
sbb
aaa
and
push
mov
jmp
pop
add
add
aaa
scas
stos
cmp
pop
fisttps
and
imul
fsub
add
loop
das
fs
inc
mov
call
jmp
es
fs
add
jmp
mov
or
pop
sub
dec
pop
cwtl
data16
mov
mov
lcall
mov
outsl
dec
in
stos
mov
sbbl
mov
scas
aaa
xchg
stos
test
inc
jle
mov
rcrl
sbb
or
das
xchg
push
test
ja
and
xchg
mov
ds
push
add
pop
je
sub
cmpsb
xor
jge
sub
xor
adc
loopne
fcom
pop
cmovg
xor
inc
jmp
jg
or
data16
inc
adc
and
fidivs
add
aaa
mov
inc
into
stos
cmp
xchg
call
cmpsl
addb
sub
sub
mov
push
sbb
ljmp
pop
dec
pop
sbb
ja
outsl
les
js
xor
call
flds
je
sbb
mov
xor
push
mov
and
add
inc
pop
fiadds
aad
fcomp
xchg
sbb
ljmp
ds
mov
lock
inc
nop
ds
cmp
jmp
mov
push
insb
imul
mov
movsb
xor
pusha
out
xchg
sub
mov
push
outsb
sbb
jae
dec
push
xor
lds
push
nop
sub
mul
fildl
xchg
mov
cs
testl
movsb
and
test
xchg
pop
sub
shll
andb
push
or
jne
and
xor
add
sbb
lcall
test
loopne
sub
sub
dec
adc
mov
leave
movsb
movsl
test
int3
dec
sub
mov
mov
jl
popa
ret
aaa
push
pop
cmp
mov
int
fdivr
popf
out
test
xlat
and
xchg
je
std
or
mov
push
xchg
inc
adc
pop
fucomi
push
int3
or
sbb
jl
out
xlat
mov
sbb
xor
fadds
jbe
push
push
stos
or
fwait
pusha
sub
inc
add
shrl
lcall
sub
push
and
sbb
pop
adc
jg
cmc
adc
and
mov
dec
dec
andb
stos
out
cmpsl
jmp
aaa
iret
mov
xchg
addr16
jp
fbld
mov
xchg
stc
add
sbb
adcl
xor
jge
aam
sub
inc
in
and
sbb
jg
scas
mov
sbb
into
mov
adc
loopne
push
cs
fwait
movsl
daa
jae
inc
sub
mov
push
add
lods
sbb
cwtl
cmp
daa
add
ret
lret
jne
ja
mov
cs
jno
lea
out
mov
mov
imul
dec
mov
push
jp
insl
int
or
loopne
repnz
mov
mov
mov
dec
roll
hlt
cmpl
mov
mov
inc
pop
mov
jae
pop
push
sbb
mov
and
dec
or
jae
push
lea
inc
inc
xchg
ss
fmul
lock
out
fs
imul
cmp
sub
jno
icebp
mov
movsl
sub
test
sbb
das
in
dec
enter
inc
outsl
xlat
sbbl
sbb
mov
inc
adc
arpl
popf
push
adc
inc
test
adc
fadds
jecxz
add
fwait
push
insb
into
add
and
adc
test
xor
mov
dec
iret
dec
in
mov
gs
or
aaa
jmp
lret
mov
in
pop
inc
lock
lret
adc
and
aam
inc
cld
jecxz
inc
inc
int3
add
mov
mov
stos
iret
xorb
add
mov
leave
adc
sbb
and
js
mov
cmpsl
shrb
cs
dec
jae
sub
sbb
sbb
lcall
clc
xor
pop
mov
daa
test
fcoms
or
xor
or
out
fadds
cld
aas
stos
or
iret
push
loopne
imul
hlt
ja
xchg
pop
mov
das
xor
loop
sbb
cmp
push
movsb
lea
cs
cmp
arpl
dec
mov
cmp
push
xchg
and
mov
sbb
adcb
inc
outsb
lea
push
sub
fstpt
dec
daa
sub
mov
jno
xor
xlat
adc
test
imul
jne
xchg
sub
test
js
adc
push
mov
or
mov
fcompl
xchg
xor
xor
jne
fucomi
sbb
test
sbb
sbb
je
scas
scas
into
call
cwtl
icebp
dec
les
insb
clc
pop
inc
inc
les
and
pusha
xor
inc
adc
cmp
push
sbbb
pusha
jns
inc
xor
add
repz
test
push
inc
adc
stc
ret
push
push
movsb
pop
in
iret
sub
sub
aad
jmp
stc
mov
xchg
mov
mov
call
loope
lods
xlat
push
and
adc
lods
cmpb
cmp
je
cmp
stc
add
insl
inc
lea
int
cmp
cmc
stos
hlt
movl
imul
push
push
adc
jo
push
lea
jmp
sbb
inc
fs
inc
xchg
out
push
or
add
ret
inc
call
or
and
aaa
lea
add
adcb
inc
into
aam
jb
fwait
lret
das
divl
inc
sbb
dec
mov
cmp
xor
dec
scas
jmp
mov
shll
sub
fnsave
icebp
pop
sub
push
pop
cmp
clc
cmpsb
mov
shll
imul
cltd
mov
or
mov
cmp
add
pop
push
push
cmc
push
mov
xor
jne
jne
jl
lods
push
mov
test
adc
push
int3
fs
sbb
push
sbb
shlb
xchg
lock
add
dec
mov
push
dec
jle
or
push
jl
pop
jae
fisttpll
xchg
roll
nop
xor
pop
mov
xchg
je
lock
pop
cld
jecxz
sub
and
mulb
iret
add
add
clc
jo
sub
lods
in
test
imul
mov
je
xor
jl
add
push
xlat
pop
inc
push
loope
dec
adc
fisubs
dec
xchg
sub
and
neg
orl
ficoms
sbb
cmp
mov
arpl
sbb
adc
dec
add
mov
xlat
jae
cwtl
pop
or
and
loopne
fdivrl
pop
add
adc
lcall
xor
sbb
and
je
fcmovne
adc
out
cmc
fs
push
fimuls
cltd
test
shll
imul
into
jb
or
or
loope
jnp
bound
sarl
pop
inc
mov
jp
ds
fs
popf
jb
mov
fstl
cs
mov
rcr
cmp
dec
fisubs
pop
sub
cmp
pushf
pusha
sbb
insb
out
shr
pop
rep
xchg
movsb
loope
jae
std
jmp
loop
cmc
pop
ja
or
movsb
sub
enter
cs
push
stc
jb
mov
xadd
dec
adc
add
mov
loopne
dec
xchg
lods
xchg
push
sub
sub
pop
shlb
fwait
or
ja
js
push
lahf
pop
not
xchg
sbb
sub
cmpsl
adc
ret
mov
out
or
lret
or
jno
orb
pushf
data16
adc
int
insl
testl
xchg
push
cmp
call
or
lcall
inc
add
add
cmp
add
add
test
cmp
repz
inc
pushf
idiv
jmp
movsb
rorb
mov
fiadds
xchg
ret
adc
ja
adc
mov
daa
xchg
lods
pop
adc
cli
cmp
int3
stc
out
inc
xor
divl
std
xchg
insl
inc
push
add
pop
cmpb
and
addr16
cs
sbb
ffreep
mov
inc
mov
jae
daa
push
inc
push
sub
and
sarl
and
sub
push
pushf
ljmp
shl
pop
jnp
clc
pop
je
cwtl
push
jne
mov
nop
out
lods
arpl
iret
sahf
sbb
adc
lret
mov
pop
push
popf
outsl
lcall
sahf
outsb
push
jbe,pt
popf
pop
stos
push
cmp
iret
sub
cmpsl
jle
dec
mov
lods
les
pop
js
addr16
and
fcmovnb
xchg
insl
mov
pop
pusha
pop
fidivl
sbb
cmpsb
mov
inc
xchg
pusha
add
ror
jle
fbld
inc
xchg
or
jg
mov
xchg
pop
and
div
andb
stc
jo
sbb
lcall
xchg
int3
xchg
insb
pusha
adc
pop
push
repz
addr16
aam
sbb
and
xor
out
push
push
jae
jg
inc
sahf
stos
push
add
arpl
pop
jbe
and
ret
pop
iret
add
mov
sub
jns
add
clc
or
iret
dec
pop
mov
xchg
jae
or
pop
cmpsl
aaa
and
pop
add
iret
push
cs
xor
xchg
sub
push
push
fcoml
mov
prefetcht1
dec
ret
movsl
sbb
xchg
and
loop
pop
cs
mov
push
mov
fisubrl
lds
out
push
jmp
and
enter
es
movsb
filds
sub
pop
lret
xor
adc
dec
movsb
stc
inc
inc
jae
test
rcrl
lods
mov
lea
add
iret
jne
sub
jmp
in
les
into
mov
push
je
push
pop
fucomp
mov
xor
sbb
xchg
shlb
in
dec
xor
iret
pop
imul
loopne
ret
fdivrs
add
pop
jmp
cltd
and
jnp
in
scas
dec
mov
jp
mov
adc
int3
repz
pushf
push
mov
cmp
shlb
insb
in
lods
insb
data16
inc
mov
cld
add
add
stos
mov
push
and
stos
mov
dec
xchg
and
cli
dec
jecxz
jbe
mov
test
call
leave
xor
sti
cs
fdivrl
jo
sub
dec
sub
sub
pop
imul
pop
aam
inc
mov
add
jo
mov
and
rorb
mov
add
loopne
cwtl
push
addr16
push
mov
push
mov
aad
das
cmc
lahf
mov
int3
cld
in
jmp
das
fistpl
add
xor
das
adc
leave
in
sub
dec
stc
jae
jne
int3
rcl
je
jle
xor
rcll
mov
jge
adc
sbb
jne
push
mov
in
in
mov
nop
xor
sbb
mov
bound
xorb
jne
or
mov
or
and
cmp
inc
or
das
pop
dec
cmc
mov
test
imul
int
push
sub
xor
sahf
add
subb
and
dec
and
adc
dec
push
adc
mov
inc
xchg
dec
test
and
adc
sbb
cmp
push
cmc
jmp
aam
iret
dec
fdivr
fimull
jg
dec
icebp
ret
jp
roll
cmp
pop
loope
cmp
cmpsb
and
dec
icebp
push
cmc
xchg
in
hlt
inc
adc
mov
push
push
fnstenv
and
fstpl
inc
stos
stos
in
xor
push
fs
push
cwtl
push
sub
and
pushf
dec
sub
cmc
enter
adc
fstps
lds
cmp
out
hlt
in
cmp
mov
popa
je
call
fsubs
dec
cmp
mov
xchg
call
mov
add
insb
stos
test
adc
divl
lods
out
pop
loop
sbbl
cmpsb
pop
add
dec
inc
sub
and
je
mov
sub
clc
dec
mov
lea
ret
outsl
pop
mov
push
dec
adc
popa
and
jne
aam
rcrl
dec
adc
jae
nop
adc
sbb
call
in
push
mov
dec
xchg
add
inc
xchg
sub
call
jns
cmp
sahf
test
arpl
mov
into
or
stos
fisttpll
fwait
push
push
push
loope
popf
imul
xchg
add
aad
mov
cld
cmp
xor
push
mov
push
adc
dec
nop
add
xchg
sbb
into
mov
push
or
dec
sbb
lcall
or
daa
adc
aam
or
imul
sarb
xchg
xchg
scas
inc
cmp
fldcw
cmp
dec
lcall
scas
inc
pop
daa
mov
bound
push
les
mov
mov
aas
inc
int3
mov
call
inc
mov
es
push
push
loope
mov
sbb
cmp
mov
test
dec
add
xchg
sbb
mov
outsb
stos
lret
push
jne
rclb
enter
pop
xchg
cmp
cmc
and
push
push
push
fs
gs
rcl
adc
out
mov
sub
adc
fsubrs
mov
sbb
std
clc
push
mov
sub
stos
mov
pop
rorl
pushl
push
sbb
pop
or
shrl
dec
int
push
xchg
xor
enter
jne
je
aaa
xchg
jg
xor
xor
mov
sub
inc
mov
xor
pop
cmp
sbb
jp
scas
lods
dec
or
or
jl
pop
adc
xchg
adc
push
aas
cmpsl
lds
into
lock
mov
call
sbb
pop
stos
mov
or
or
adc
sub
outsl
push
sub
dec
cmp
cmpsl
outsl
into
mov
mov
adc
das
adc
push
jbe
ja
push
clc
or
push
std
repz
ljmp
or
push
xchg
sub
imul
pop
popf
outsb
fstpt
loopne
das
mov
rcll
cmc
cmp
call
loopne
std
jo
cmp
rcll
cmp
mov
and
das
kmovb
insl
jp
mov
sbb
inc
out
and
inc
int
cmc
mov
xchg
cltd
xchg
jmp
mov
mov
clc
sub
repz
cmpl
cltd
sub
call
inc
data16
pop
scas
push
and
movsb
lods
mov
adcb
into
xchg
inc
push
call
ficoml
mov
shll
loop
cs
jbe
cltd
mov
adc
xchg
mov
add
sbbb
mov
lret
pop
dec
pop
pop
mov
xchg
lcall
rclb
pushf
call
je
dec
arpl
les
jg
insb
pop
jmp
aad
dec
sub
sbb
mov
pop
mov
outsl
fcmovne
cld
mov
push
mov
aad
nop
jg
dec
aad
cs
lret
xchg
sbb
push
icebp
add
or
inc
pop
rcll
jne
inc
and
add
or
jp
add
fildl
test
and
ss
mov
testl
or
lahf
pop
bnd
cltd
xchg
les
movsl
lahf
pushf
lahf
test
pop
das
jno
cmc
mov
jl
mull
js
fistps
add
sub
xchg
lods
dec
mov
pop
xor
and
addr16
out
mov
repz
mov
xchg
into
pop
insl
popf
xor
jae
faddl
dec
fs
xchg
insb
sub
dec
inc
shl
or
jl
int3
mov
sub
sbb
add
jo
stos
jmp
lds
xchg
xchg
lret
arpl
or
fnstsw
cmp
cs
xchg
and
stos
mov
jns
dec
int
sbb
incb
mov
cli
das
push
mov
lret
and
aad
xchg
mov
adc
pop
dec
int
inc
and
fldenv
jne
shlb
jg
mov
mov
mov
and
arpl
adc
adc
cmp
cmpsl
ljmp
das
enter
or
fwait
mov
and
imul
mov
push
or
and
pop
add
mov
push
adc
mov
int3
xchg
add
lea
xchg
mov
mov
aad
xchg
push
mov
mov
push
pop
dec
sub
inc
or
xchg
xchg
mov
and
jl,pn
inc
dec
add
shll
xor
push
cs
xchg
ret
add
mov
fnstcw
xor
das
stos
add
lods
or
hlt
dec
imul
or
pop
hlt
outsl
repz
data16
rcr
les
je
inc
xor
cld
cmp
loop
popa
jle
hlt
inc
js
repnz
jecxz
fbstp
adc
repz
or
or
cli
xor
out
inc
jb
hlt
andl
push
pop
outsb
cmpsb
loopne
int
lock
jge
cmpsb
sub
dec
je
in
sbb
imul
jl
lret
mov
subl
inc
aam
int3
movsb
incl
fwait
push
in
adc
and
popa
push
push
fdivl
pop
int
outsl
lret
sahf
mov
push
jb
jmp
push
push
shrb
mov
movsl
addr16
je
push
rcrl
xor
repz
pop
xchg
add
imul
jmp
cs
movsb
add
xlat
push
inc
shlb
out
div
test
dec
outsl
or
fiaddl
sub
sbbb
and
out
jne
lods
add
push
addb
bound
mov
or
nop
pop
or
jp
pushf
xchg
rcrl
adc
xor
jmp
inc
addr16
add
mov
mov
popf
in
xor
lret
fiaddl
fwait
ret
outsl
xchg
rcrl
pushf
insl
mov
xor
cmc
cli
add
shll
andl
adcb
or
or
ret
ljmp
fdivrs
mov
jge
test
and
inc
and
stc
test
sbb
push
mov
repz
mov
inc
jne
dec
dec
add
cmpsl
pop
inc
mov
xor
mov
shlb
jo
lds
lods
lret
and
leave
jo
push
mov
push
mov
outsl
or
pop
xchg
icebp
push
je
xlat
dec
cmp
mov
icebp
jo
mov
xchg
inc
and
outsb
push
xchg
add
sbb
mov
push
cmpsl
mov
xchg
mov
or
iret
pop
cmp
adc
ss
mov
imul
popa
jb
xchg
mov
mov
in
dec
pop
shlb
aam
dec
cmp
bound
lret
and
test
and
xor
stos
inc
mov
cmp
or
xor
fwait
adc
xor
sub
or
mov
mov
cmp
test
scas
enter
test
adc
das
sahf
adc
movsl
mov
bnd
pop
leave
mov
das
outsb
call
push
xchg
lea
popf
sub
push
dec
or
push
bound
jb
dec
roll
cmpsl
sub
repz
sahf
aad
cmp
mov
push
xor
mov
sbb
mov
or
lret
push
cmp
adc
pop
fwait
andl
push
push
dec
out
add
dec
mov
mov
push
mov
aad
rcrb
clc
and
mov
aam
inc
push
cs
jnp
das
dec
mov
es
dec
arpl
push
push
jmp
pusha
ja
rorb
ja
icebp
test
jle
dec
aas
push
repnz
cmp
clc
push
repz
adc
mov
jae
jne
out
push
mov
push
or
mov
and
pop
pop
push
imul
and
pop
std
push
jbe
add
insb
pop
xlat
push
inc
int
rorb
pop
adc
aam
jge
mov
out
insl
jge
fucomi
lret
mov
fs
cli
mov
sbb
ret
push
dec
pop
loope
push
flds
mov
sahf
mov
pop
push
and
add
xchg
mov
int
popf
fidivrl
test
push
cmpsb
daa
push
jae
das
pop
rcl
xchg
imul
and
lods
inc
mov
sub
jmp
mov
int3
sbb
mov
cmp
cmp
add
sbb
sbb
stos
or
sub
test
mov
das
js
push
je
int
out
outsb
pop
fildll
jmp
sbb
xchg
arpl
popa
loope
test
inc
jl
fs
test
xor
int
inc
call
loope
insl
pusha
adc
jmp
mov
push
sub
xor
dec
mov
popa
xor
jmp
jmp
cmp
ja
cmpsl
pop
fwait
mov
and
test
add
or
xchg
and
cmp
or
mov
lea
add
dec
inc
cmpsl
inc
push
aad
sub
inc
and
jae
cmp
in
push
sbb
vsqrtps
cli
clc
jb
dec
shrl
roll
jmp
xchg
es
icebp
inc
ss
xor
mov
or
and
lods
inc
outsb
movsb
fwait
gs
lods
in
push
scas
imul
push
cwtl
adc
add
fimull
ja
mov
jae
repnz
push
repz
cwtl
sahf
jae
sub
lods
and
mull
xor
aad
mov
dec
fwait
mov
aam
fcmove
inc
jbe
lahf
inc
sahf
xchg
mov
popf
xor
sub
mov
pop
addr16
lods
cmp
gs
sub
mov
cmpsb
pop
sub
loopne
movsl
pop
sub
lods
shlb
add
xchg
ficompl
or
aam
add
test
jl
mov
hlt
div
cld
or
push
aaa
das
iret
dec
sub
push
mov
xlat
jo
jae
mov
jns
jnp
jne
cmpb
inc
mov
inc
enter
cmpsl
xchg
xchg
dec
xchg
pop
loope
cmpsb
jg
inc
aaa
sub
pushf
and
nop
mov
push
push
lahf
ret
addr16
and
or
jmp
or
shll
aad
xor
stc
sbb
pop
shl
dec
lock
push
inc
push
outsb
pop
dec
cmpsl
pop
out
mov
mov
sbb
dec
pop
pop
adc
idivb
mov
addr16
sub
mov
xchg
les
push
ja
daa
sub
xorl
add
inc
jns
inc
add
ja
mov
adcb
aaa
mov
mov
jnp
in
mov
outsl
and
je
and
jbe
adc
repz
mov
imul
inc
add
and
push
push
or
adcb
shrb
mov
pusha
jno
or
movsb
in
arpl
iret
cmpsb
loopne
stc
push
shrb
jns
das
sub
leave
sar
dec
pusha
aas
jmp
pop
pop
cmp
mov
addr16
push
les
push
std
mov
jae
sbb
xorb
add
dec
mov
jge
ja
mov
and
add
cmp
or
jmp
push
fcoml
outsb
xlat
pusha
sub
mov
push
ljmp
cli
fimull
jbe
into
adc
adc
jae
les
aam
xlat
sub
jnp
movsb
mov
xchg
push
xor
into
mov
mov
pop
les
or
sbb
push
mov
push
add
iret
or
outsl
outsb
outsb
repz
cmp
les
push
push
mov
test
mov
add
movsb
subl
insb
sub
inc
fwait
cmpb
leave
enter
sti
dec
push
into
xchg
inc
and
hlt
mov
mov
cld
test
dec
cltd
bound
and
sbb
dec
data16
in
mov
jae
mov
sti
ja
mov
or
es
dec
loope
push
in
sub
lods
mov
stos
out
jg
movsb
xor
pop
repnz
cmp
lds
inc
sbb
shrb
jns
inc
in
addl
int3
jmp
cmp
mov
imul
je
je
jecxz
pop
hlt
jae
inc
fsubl
sbb
jno
cmp
inc
add
push
jns
sbb
test
add
xor
mov
imul
dec
xor
jae
cmpsb
xchg
sub
mov
mov
inc
inc
push
cmp
jne
lret
xchg
push
je
in
xchg
dec
gs
dec
inc
adc
aam
xchg
lea
into
cmpb
cmpsl
dec
hlt
test
dec
fs
cmp
sub
cmp
ljmp
popf
movsb
xor
inc
inc
xor
xchg
add
sub
repnz
mov
ljmp
add
dec
adc
test
push
dec
adc
mov
dec
mov
pop
js
cmc
fists
imul
iret
daa
dec
pop
jmp
jo
or
test
jmp
sbb
xchg
lcall
push
cli
dec
cmp
fidivs
pushf
scas
dec
popa
pop
bound
push
imul
jno
lret
loope
dec
pusha
fsubrp
cmpsl
sti
add
daa
inc
pop
xchg
inc
outsl
out
es
adc
lret
dec
cmp
mov
push
push
lcall
mov
xchg
imul
sbb
sub
inc
lea
scas
pop
or
or
jns
scas
pop
push
push
int
and
push
push
push
cmp
xor
push
inc
in
xorl
iret
or
cs
inc
imul
sbb
mov
inc
je
faddl
test
and
push
insl
xor
mov
decl
nop
fs
and
mov
dec
sub
sbb
arpl
add
sbb
mov
out
xor
popf
mov
and
sub
jmp
stos
add
mov
mov
imul
es
test
xchg
push
scas
inc
aas
psubw
push
fcomip
subb
push
mov
mov
imul
lds
sbb
shll
xor
aam
enter
pop
xchg
xchg
or
add
mov
out
and
ljmp
inc
aam
dec
mov
push
push
movsb
xchg
push
push
pop
mov
into
test
dec
lahf
mov
inc
push
and
and
test
pop
les
push
sarl
jbe
sti
dec
sub
sub
sbb
xor
testl
mov
fcmove
arpl
xchg
loop
lahf
pop
pop
sub
dec
call
adc
and
loopne
int
adc
int3
dec
pushf
aaa
into
orb
push
lret
pop
std
jg
pop
ret
sahf
incl
sti
inc
push
sub
dec
outsl
jo
push
adcb
ja
in
jp
loope
jle
popf
cmpsl
addl
pop
lods
mov
or
xchg
xchg
or
lcall
xchg
cmpsb
cmp
test
aaa
mov
sub
mov
sub
mov
mov
pop
jecxz
pop
daa
enter
int3
int
call
rcl
dec
icebp
xlat
add
fcmovu
inc
cli
popf
loope
jle
in
jp
call
in
jae
add
insb
aad
hlt
push
fdivrp
sti
popa
jge
add
sahf
and
add
sub
adc
xor
sbb
push
pop
mov
add
add
or
or
sbb
cmp
popf
bound
imul
sarl
pop
ror
push
push
cmp
push
lret
add
inc
bound
inc
jne
in
cmp
push
mov
aaa
nop
sbb
xchg
adc
mov
xchg
rolb
dec
push
das
rcl
or
sub
pop
aas
and
and
add
gs
inc
fsubs
pop
cmc
outsb
dec
sub
sub
mov
scas
or
rolb
xor
popf
inc
cmp
add
ss
and
pop
loope
sub
add
pushl
mov
xchg
fdiv
iret
pop
mov
cmp
ss
sbb
or
mov
daa
dec
sbb
dec
dec
sbb
pop
xchg
daa
cmpsb
add
aaa
nop
mov
xor
repz
xchg
sub
add
pop
punpcklbw
adc
js
add
andl
jmp
xor
dec
stc
mov
lock
xchg
and
adc
addr16
mov
xchg
xchg
xchg
fmuls
in
fsub
nop
adc
shr
pop
sub
rolb
jbe
adc
lcall
lds
inc
mov
sbb
add
jecxz
pop
data16
lock
and
or
push
mov
adc
pop
xlat
jnp
popf
in
fildll
jg
repz
je
add
insl
shll
add
cmc
cmc
push
push
stc
ljmp
jg
pop
adc
aas
or
jl
cmp
lock
xchg
add
daa
or
push
push
cmp
push
and
and
add
or
add
add
lret
add
dec
int
and
add
xor
cmc
mov
lea
sub
xor
cmpsb
test
dec
mov
jmp
cli
mov
lea
clc
mov
sbb
int
adcb
hlt
mov
mov
cs
cmp
scas
aad
xlat
push
roll
shlb
sbb
data16
int3
popf
adc
lock
mov
ds
loope
popa
in
stos
mov
push
pop
cmp
cmp
xor
cld
dec
inc
es
xchg
sahf
sbb
test
loopne
lcall
loopne
test
int
mov
jmp
sbb
movl
cmc
and
daa
js
in
cs
jmp
rclb
inc
cmp
and
ret
add
and
pop
mov
jae
aas
dec
lock
adc
pop
inc
test
arpl
inc
sub
or
dec
sbb
mov
in
add
rolb
enterw
xchg
sahf
insb
mov
lock
adc
cmp
adc
ljmp
enter
ja
daa
fwait
jae
pop
data16
popf
aas
jne
mov
sti
xor
es
xor
fdivrs
cmp
and
ret
xchg
inc
arpl
daa
xchg
dec
xchg
jb
or
ret
dec
mov
std
add
or
mov
and
inc
jge
repnz
pop
jo
sub
test
scas
mov
popf
fs
lcall
lock
pop
lock
push
test
int3
shlb
lock
daa
call
pop
add
vmovq
imull
in
popa
ja
add
sbb
addb
lds
mov
add
inc
mov
decl
test
pop
and
ret
cmp
in
fistl
pop
jg
sbb
ficompl
pop
sub
movsb
repnz
loopne
aas
mov
inc
sbb
adc
jns
and
cmp
push
cmp
pushf
jo
inc
push
sub
movl
inc
cmp
push
mov
rcrl
es
stos
cmp
add
into
lods
sbb
fdivl
push
jecxz
mov
jge
das
hlt
lahf
push
push
stc
pop
rorb
mov
nop
pop
cltd
out
xor
sbb
inc
pop
pop
or
hlt
sub
add
cmp
daa
lods
icebp
add
and
cmc
lcall
std
pushf
int
push
insb
data16
fabs
add
fdivr
addb
push
into
or
dec
fiadds
mov
rcrw
jno
and
add
and
xor
aaa
mov
fnsave
add
push
jmp
cmp
pushf
add
pop
pusha
lret
fs
scas
call
dec
call
inc
xor
push
inc
xor
jle
daa
pop
fcmovnb
jmp
sub
mov
decl
jbe
cli
add
aam
loopne
sbb
jg
sbb
xchg
lcall
pushf
sub
jg
xor
mov
mov
fwait
sbb
push
cmpsl
daa
sbb
jne
mov
test
sub
mov
pushf
push
and
xchg
pop
daa
pop
cmp
sub
push
clc
mov
enter
push
dec
inc
mov
js
sub
gs
and
lea
out
imul
arpl
push
mov
rorl
jg
clc
dec
jnp
add
adc
add
pop
daa
inc
cmp
xchg
enter
mov
sbb
sbbl
pop
xchg
mov
mov
dec
push
fiadds
sub
mov
sub
je
test
mov
or
push
add
push
adc
popf
loop
negl
pop
add
pushf
cmp
shlb
pop
jo
fadd
sbb
and
cwtl
mov
cmpsl
es
ss
lcall
push
lods
adc
shlb
ficomps
mov
adc
inc
jmp
mov
mov
dec
sub
daa
or
lea
je
daa
loop
stc
inc
movsb
jge
inc
repnz
daa
and
push
das
inc
clc
mov
popa
cmpsb
test
daa
jns
cs
sbbl
jno
call
cmpl
test
aam
mov
movsl
add
lea
adc
push
xchg
ret
jo
push
cmp
mov
jne
push
std
push
xchg
andl
ds
movl
into
mov
cmp
int3
movsl
int
cmp
fildl
fdiv
stos
loope
sbb
jmp
adc
jl
xor
mov
es
xchg
cli
xchg
out
in
popfw
and
pushl
icebp
test
sbb
add
sub
jge
or
jge,pn
lcall
add
imul
sbb
add
mov
into
movsb
daa
mov
loope
add
sub
std
sahf
movsl
daa
pop
sarb
negl
cmp
js
addb
xchg
cmc
xor
repnz
lods
clc
popf
push
cmp
aam
jbe
es
dec
enter
pop
out
orb
xchg
add
sub
test
aas
ljmp
imul
sub
les
aas
cmpsl
outsl
scas
or
cli
in
sti
mov
pop
daa
jmp
rorb
mov
rcrl
pop
lods
push
dec
cltd
mov
pop
daa
popa
rcll
sbb
in
mov
enter
or
das
dec
mov
add
ljmp
test
bound
inc
add
aaa
mov
scas
inc
dec
xchg
in
repnz
pusha
test
out
fisubl
jmp
cmp
stos
sbb
jg
and
stos
sti
inc
add
in
or
daa
insl
fdivrl
movsb
add
mov
add
sahf
mov
adc
and
push
fisubrl
pop
push
add
mov
enter
xor
dec
insl
jge
pop
sub
popa
sbbb
or
out
mov
pushf
not
popf
jmp
call
cs
add
leave
push
rolb
sahf
dec
gs
jg
movsb
cmp
int
mov
aas
cmpsb
push
fwait
pop
jne
in
gs
dec
add
mov
cmp
pushf
inc
sbb
mov
in
repnz
xorb
push
add
mov
rcll
loop
add
sbb
inc
inc
jne
add
out
arpl
dec
mov
fwait
cld
xor
mov
adc
jno
add
popa
cmpsl
decb
stc
add
data16
in
fsub
adc
in
dec
xchg
add
mov
sbb
mov
mov
or
cwtl
add
cmp
movsl
insb
add
ficoms
es
cmp
jbe
out
jb
add
popf
xchg
adc
xchg
push
cli
nop
sbb
push
ret
stos
push
adc
push
xchg
and
add
test
dec
jb
jl
push
ljmp
pop
decl
add
cmpsb
pop
xchg
dec
movsl
xchg
jnp
xchg
scas
adc
mov
add
lcall
pushf
leave
popf
lods
arpl
sub
mov
fisubrs
jb
fists
mov
ds
lods
ljmp
jg
cwtl
xchg
dec
dec
ror
shll
fcomps
or
xchg
daa
aad
iret
aas
lods
fmulp
cmp
and
aaa
pop
ret
add
mov
xor
out
popf
push
jmp
cmpsl
and
inc
into
push
das
push
cld
jnp
pop
push
lcall
push
les
out
add
fs
add
mov
lahf
decb
in
sbb
and
mov
data16
sahf
or
nop
les
lret
and
cmp
ret
int
adc
call
out
xchg
mov
dec
mov
lods
and
test
movsb
popf
test
add
inc
push
insl
loope
add
push
sbb
fdivs
add
pop
outsb
cli
andl
cwtl
lods
add
sub
cmp
rolb
outsb
rorb
adc
push
out
imul
push
and
test
mov
and
mov
adc
xlat
dec
add
call
add
cmp
sub
adc
call
in
sub
xor
sarl
popf
xchg
mov
sbb
and
xorl
mov
popf
sti
repnz
fs
add
daa
cld
cmc
ret
dec
mov
push
inc
ror
jno
andb
clc
int3
add
or
out
out
clc
fisttpl
pop
lods
inc
pusha
lret
fldl
sub
mov
iret
shrb
inc
add
pop
dec
lret
daa
dec
popf
cmp
inc
mov
jae
mov
jmp
daa
cmp
test
pushf
mov
cltd
bound
js
insl
dec
cmp
xor
ret
push
jg
mov
out
xor
stc
xchg
pushf
dec
andl
das
inc
pop
or
push
pop
popf
jo
shlb
pop
push
sbb
mov
ds
mov
dec
cwtl
aad
cmp
mov
rcll
out
fimull
sub
adcl
cmpsl
mov
pusha
push
push
jge
and
hlt
sbb
jo
mov
sbb
popf
movsb
sbbb
cmp
jo
cmp
cmpsb
cld
shll
and
daa
orl
jp
sbb
jp
add
insl
sbb
push
dec
and
daa
fidivl
mov
cmp
or
push
popa
cmp
popf
and
incl
std
popf
arpl
push
pop
stos
into
or
sub
cmp
inc
mov
xlat
fs
cwtl
jno
ffreep
jns
add
add
sarb
push
in
xor
jns
add
mov
xchg
fs
pop
jp
scas
ds
testl
mov
jecxz
add
and
lds
adc
mov
shl
dec
pushf
jp
push
outsb
xchg
ja
mov
aaa
imul
jb
nop
cmp
cmpsl
mov
enter
and
push
mov
pop
dec
sbb
push
popf
add
fistps
aas
icebp
sub
add
dec
or
mov
imul
fdivrl
mov
roll
cmp
cmp
sub
push
sbb
add
imul
test
inc
xchg
mov
pop
loop
js,pt
add
jb
xchg
jns
xchg
sbb
sub
les
pop
scas
jne
lds
fwait
loopne
fildll
pop
push
and
and
add
sbb
mov
rcrb
movsb
aas
xchg
add
mov
xor
cmp
pop
jp
test
sbb
js
in
sbb
lea
jnp
nop
pop
leave
lods
xchg
in
popl
cli
lea
or
add
mov
xchg
add
xchg
add
mov
push
rclb
add
pusha
mov
dec
test
in
inc
sbb
inc
test
mov
pop
or
add
inc
test
mov
mov
hlt
outsb
mov
jmp
out
lock
add
data16
lcall
bound
fmul
and
add
enter
sub
inc
push
add
adc
popf
leave
and
sbb
or
xchg
repnz
jecxz
cmp
xor
push
pop
sub
dec
and
and
rep
adc
pusha
adc
pop
sub
dec
and
pop
push
daa
jg
mov
cld
aad
sbb
sbb
inc
xor
sub
xchg
sub
xchg
scas
aam
call
adc
add
push
push
stos
popf
and
add
pop
fcompl
dec
test
es
pop
mov
dec
jno
fadds
inc
cli
jno
xchg
mov
popf
repz
aam
add
jle
sahf
arpl
fcoml
pusha
lret
dec
pop
pop
mov
adcb
jae
popf
fsubrp
mov
das
push
rorl
mov
int3
popf
clc
push
sbb
sbb
fcoml
mov
repnz
xor
popa
add
out
push
xchg
pop
add
sub
mov
loopne
xchg
pushf
push
insb
pop
lods
pop
dec
xchg
movsb
sbb
clc
jnp
push
daa
fs
movsl
repnz
pop
mov
xorb
push
inc
push
fcomps
es
loope
movb
push
xor
and
mov
aas
inc
data16
or
sub
or
int3
fwait
mov
loop
pop
popf
xchg
and
fimuls
pop
cmpsl
xor
dec
ljmp
or
mov
mov
sub
es
jnp
imul
or
daa
aad
into
add
add
icebp
push
cwtl
lea
ljmp
or
call
lock
scas
cmpsl
daa
mov
dec
jns
add
test
add
test
dec
xchg
xchg
out
cmp
add
sahf
iret
out
lcall
push
push
cmc
sbb
jmp
cwtl
call
dec
mov
in
loope
sbb
mov
into
incl
in
pop
lea
lds
cmp
push
push
popf
rcrl
mov
dec
scas
daa
adc
aam
pop
push
aaa
jge
mov
jae
jnp
mov
outsl
sub
inc
lret
cltd
add
push
ds
lods
sbb
sbb
push
shl
scas
add
scas
xor
negl
ds
add
daa
cmp
sti
sub
out
jne
inc
add
popa
mov
or
cmc
add
sub
cmpsb
or
int
shrl
add
scas
mov
loopne
xchg
jg
adc
test
jno
sbb
mov
test
in
mov
ret
scas
daa
dec
out
push
mov
jnp
enter
in
addl
ds
jle
inc
dec
fisubrl
add
dec
jl
xchg
add
test
hlt
xchg
testb
orb
arpl
gs
pop
out
xor
daa
mov
aam
lods
jbe
in
add
movsl
sbb
stc
js
push
inc
cmp
mov
sbb
xchg
fs
es
jmp
call
ret
addb
jns
mov
mov
fs
sub
dec
int
sbb
aam
push
or
mov
add
and
lock
mov
fs
ficomps
gs
daa
aas
orl
add
adcb
cmp
mov
xchg
aad
cmpsb
cmpb
stos
loope
dec
add
sbb
mov
and
daa
dec
and
idiv
add
mov
push
subb
mov
pop
cmp
adc
mov
rcrl
lret
mov
pop
rorl
ja
repz
xchg
cltd
addb
xchg
adc
shr
xor
fnstcw
add
andl
sarb
or
lahf
jno
jmp
shll
xchg
repnz
daa
pop
bound
cmp
negl
leave
add
sub
ds
adc
sub
inc
gs
sub
into
or
sbb
and
bound
ja
aas
ret
pop
test
scas
and
mov
popa
jb
pop
jg
add
aam
jg
outsl
dec
jp
cmp
cmp
in
add
dec
xchg
daa
and
xchg
mov
imul
daa
add
ljmp
nop
xchg
push
sbb
sbb
push
je
mov
mov
add
push
add
mov
ljmp
sub
std
dec
lcall
dec
xor
sub
cmp
fucomip
add
shrl
add
jmp
push
cmpsb
jnp
sbb
rcrl
adc
jg
add
xchg
insb
inc
test
cmp
xchg
jno
sahf
movsl
add
movsl
push
dec
sarb
and
nopl
insl
adc
pop
jecxz
fcompl
xchg
fdivp
xor
or
xchg
mov
imul
fisttpl
add
gs
icebp
mov
das
shll
dec
xchg
in
imul
mov
ds
dec
sbb
addr16
test
mov
jno
sub
fcoms
call
rol
fs
and
testb
or
lods
add
out
jo
dec
daa
orb
daa
jg
fcomi
test
decl
les
or
xor
add
hlt
add
push
hlt
mov
les
add
loop
cmp
cld
mov
sbb
jl
popf
iret
aad
mov
daa
xor
mov
ds
dec
out
mov
adc
int
or
add
insb
inc
sbb
mov
loop
pushf
out
test
jle
daa
imul
fs
add
mov
es
lret
fcompl
mov
push
add
mov
hlt
mov
mov
dec
nop
aad
pop
es
pop
cltd
ss
out
setge
les
cmp
cmpsb
fwait
movsl
scas
xor
nop
pop
inc
jmp
pop
popf
cmp
or
xchg
mov
cmp
lea
mov
outsb
cmpsl
fdiv
and
popa
jno
es
xcrypt-ofb
cmpsl
imul
shlb
popf
jp
sub
fwait
fs
lock
lods
jge
jecxz
outsb
push
fidivrl
daa
sahf
lahf
push
mov
mov
push
mov
fidivrl
push
imul
cmp
cwtl
xor
aaa
adc
add
aad
iret
dec
push
lds
sub
mov
into
add
xchg
pop
mov
mov
lret
add
cld
mov
rcrb
add
cli
das
jne
mov
cld
cld
adc
add
push
adc
pop
jne
jno
stos
inc
or
filds
inc
mov
fwait
test
xchg
scas
ret
popa
popf
mov
xor
sbb
add
and
xor
push
arpl
roll
jo
popf
push
fs
add
daa
les
fsubrl
dec
push
imul
add
lea
xchg
es
dec
sub
lock
popf
add
jecxz
cmpsb
sub
call
jle
mov
lods
add
test
push
inc
test
test
mov
cmpsl
add
or
add
push
clc
nop
add
push
xchg
jg
fs
adc
xchg
popf
daa
sub
xor
daa
andb
push
inc
popf
call
xor
pop
daa
inc
or
mov
int
fldcw
pop
add
rcrb
inc
sbb
pop
addb
popf
daa
xchg
div
xchg
out
insl
lea
outsl
mov
pop
dec
inc
iret
mov
mov
scas
add
lahf
mov
mov
push
bsr
add
fstps
jmp
xchg
lds
jecxz
add
mov
cmp
dec
cmp
loope
cmpsb
jns
push
pop
and
adc
es
push
mov
insl
add
out
mov
mov
mov
cvtdq2ps
outsl
fildl
sub
lds
push
popf
mov
cmpsl
xchg
pop
rclb
stos
push
xchg
add
inc
out
or
dec
pop
fwait
cld
add
mov
and
nop
arpl
add
add
push
int
jp
push
jmp
adc
jmp
iret
add
inc
repz
int
jle
call
and
jb
sub
movsl
popf
jmp
loopne
dec
mov
ds
scas
xchg
lods
dec
dec
add
daa
scas
push
cld
das
mov
adc
and
jmp
add
xchg
outsl
sahf
test
xor
clc
pop
lock
or
and
pop
sub
sub
popa
test
push
adc
call
lea
outsb
or
sub
inc
xchg
jp
cmpsb
ljmp
and
fistps
add
mov
push
popf
and
sbb
sti
fwait
pminub
mov
minps
mov
popf
loop
imul
jno
mov
es
ds
scas
or
pushf
xchg
ss
lods
cli
add
push
adc
adc
push
pusha
pop
iret
insl
push
clc
dec
movl
pop
lock
lahf
rorb
add
lods
xchg
xchg
addb
outsl
mov
push
test
daa
mov
shrl
fdivrl
rolb
mov
dec
push
addb
push
sub
cwtl
repz
lret
dec
add
test
daa
jecxz
mov
fdivrl
out
adc
and
cmp
in
repnz
jecxz
inc
inc
test
cmpb
push
jne
xor
pop
xlat
ret
mov
and
mov
shlb
add
out
cli
sub
pusha
popf
sub
or
sub
testb
fdivrl
ds
sbb
roll
dec
pushf
je
daa
push
cmp
inc
jecxz
inc
adcl
push
sbb
pop
inc
mov
mov
nop
popf
xor
push
les
shll
cmp
add
clc
inc
pop
jae
push
out
jno
add
clc
xor
mov
mov
lods
jge
adc
add
scas
mov
arpl
sbb
dec
imul
push
sbb
popf
jge
cmp
xor
jns
mov
divl
std
ss
push
mov
aas
cmpsl
mov
jmp
mov
add
jb
aas
sub
xchg
cmp
xchg
hlt
jnp
cltd
add
icebp
add
lea
lret
shrb
dec
hlt
push
mov
in
add
loop
mov
addb
pusha
nop
add
es
sbb
inc
mov
inc
add
out
divb
mov
push
mov
repz
or
adc
mov
dec
lcall
sub
lock
out
add
dec
push
dec
icebp
sbb
dec
push
adc
lcall
scas
mov
lahf
test
or
mov
rorl
inc
call
xchg
popf
cmp
stc
and
sub
lcall
cmp
and
adc
int
and
cmpl
push
outsl
into
jbe
nop
or
sbb
xchg
add
or
dec
notb
ret
lods
add
fdivl
enter
mov
jne
and
sbb
lret
mov
sbb
add
mov
lcall
adcb
add
push
inc
sbb
jo
into
jecxz
div
add
clc
lea
and
mov
xchg
cld
popf
ljmp
repz
add
add
fldl
out
fists
out
fmull
xchg
jmp
ficomps
adc
inc
bound
scas
lods
push
adc
inc
mov
popf
idivl
mov
in
add
xchg
rolb
roll
sbb
cwtl
jne
add
add
pop
sub
icebp
adc
daa
cltd
out
mov
mov
ja
fwait
movsb
and
lods
daa
mov
scas
mov
incb
popf
pop
idivl
sub
mov
cmp
dec
data16
fistps
dec
in
jno
add
insb
popf
sbb
rol
rorb
lock
cmpb
push
test
jno
daa
push
lds
lret
add
inc
lret
fisubrl
aad
cmp
or
test
push
cltd
popf
sarl
mov
add
sub
pusha
loope
daa
mov
xchg
mov
in
repnz
add
or
ss
movsl
cmpsl
push
inc
cmp
test
xchg
fiaddl
mov
aam
dec
fucomip
push
add
cmp
loopne
popf
lea
xor
lods
inc
ret
repnz
ss
add
aam
add
dec
push
and
insl
add
adc
movsl
js
cmp
xor
or
in
and
and
inc
aas
lds
pop
movsb
mov
mov
call
add
jge,pt
or
inc
and
jmp
dec
lock
cltd
jo
sarl
xchg
ljmp
add
ret
jge
push
in
jne
xchg
inc
arpl
ret
and
xchg
dec
sub
jno
mov
inc
add
push
xor
loopne
cmp
mov
inc
add
fs
popf
adc
add
lds
adc
add
mov
add
xor
aam
pop
mov
sbb
fidivrl
daa
or
popf
fildl
mov
ja
daa
push
cli
out
xor
loop
pusha
repz
adc
or
in
int
arpl
js
xor
jle
and
daa
je
sbb
pop
std
addb
fwait
mov
aam
adc
add
push
mov
cmp
lea
mov
sub
stos
cmp
adc
and
push
fisttpl
js
aas
or
ss
daa
dec
lcall
js
mov
adc
popf
repz
cmp
loop
idivl
jecxz
push
sbb
xchg
nop
test
mov
in
add
in
cmpsl
in
daa
push
push
inc
lods
jmp
fs
mov
add
fnstcw
lcall
lcall
dec
gs
packuswb
mov
fisubs
mov
mov
call
sbbl
inc
sub
fcoms
cmp
and
fs
stos
rclb
sbb
add
adc
es
repz
push
mov
imul
adc
out
ja
pop
lcall
push
add
push
sbb
test
pop
xchg
addb
or
dec
sbb
mov
adc
mov
cmpsl
iret
push
mov
pop
push
popa
xor
daa
cs
add
sub
xchg
out
inc
push
popf
xor
inc
mov
dec
pop
das
mov
mov
andb
pop
sarb
add
and
xchg
jnp
int
pop
push
lock
add
aad
test
add
adc
jns
cmpsl
jbe
add
push
rcrl
xlat
aas
push
daa
push
popf
sub
roll
imul
add
sti
movsl
mov
fwait
js
jno
and
sbb
insb
mov
add
push
cli
jne
pop
test
and
std
pop
dec
out
mov
popa
inc
add
push
add
dec
daa
movl
sbb
mov
cmp
cmp
scas
in
add
add
xchg
cmp
xchg
pop
flds
and
int3
loop
arpl
lret
stos
push
daa
je
psubsw
test
xchg
inc
sub
adc
inc
adc
sub
popa
and
cmp
xor
sbb
inc
mov
lahf
and
xchg
mov
cmpsl
xor
sarl
or
sub
fcomps
push
sbb
add
stos
mov
add
idiv
dec
aam
and
ja
std
jmp
jo
pop
inc
inc
testb
dec
xchg
add
imul
movsb
mov
pop
ret
or
pop
stos
popf
jae
dec
mov
iret
addb
fnstsw
ljmp
fisubl
lods
push
das
add
xor
lahf
jae
int
stos
mov
out
sarb
pop
shl
push
int
sub
out
idiv
insl
daa
or
pop
addl
jle
scas
stos
add
lods
pop
es
add
pop
sbb
adc
cltd
mov
add
pop
out
outsl
push
cwtl
xchg
xchg
mov
add
or
inc
mov
iret
out
inc
mov
add
push
ds
jmp
inc
add
add
jge
lcall
adc
cmpsl
xlat
mov
xchg
js
movsl
or
add
movsl
imul
in
inc
stc
mov
repz
xlat
loopne
bound
sbb
mulb
negb
push
add
sub
add
jns
mov
ss
adc
addr16
loopne
je
xor
daa
push
fistpll
lcall
popf
pop
and
pop
xor
sub
add
lahf
pusha
popf
in
stos
adc
mov
add
aas
loopne
lcall
pop
cli
lea
add
mov
aad
fsubrp
stos
xor
add
lds
cmp
pop
sbb
sub
popl
aam
ficomps
xchg
dec
arpl
fstpl
out
mov
sahf
push
in
sti
pop
inc
jae
imul
cmp
js
idivl
outsb
imul
cwtl
data16
push
mov
mov
inc
jg
mov
cmp
add
mov
lods
imul
mov
lcall
adc
popf
test
bound
jl
add
out
jo
mov
push
jmp
mov
add
sub
das
in
push
sub
mov
cmpsb
popf
pop
iret
popf
push
pop
out
jns
jbe
xchg
or
xor
cltd
nop
shlb
and
out
inc
xchg
popf
jmp
fsubr
xchg
xor
mov
inc
jp
call
repnz
out
mov
jns
pop
mov
in
xor
fcoml
xor
rcr
pop
xchg
out
add
scas
lock
daa
push
in
push
xchg
call
popf
notb
push
cs
mov
xor
out
popf
dec
or
not
mov
out
fnstsw
ret
inc
cmp
outsb
add
in
xor
mov
add
add
inc
repnz
fildll
pop
cmp
add
or
aam
and
loop
mov
mov
mov
adc
mov
movsb
sub
xor
das
sub
sti
daa
pop
in
pop
rolb
dec
jl
mov
sbbl
add
int3
and
cli
mov
movsb
idivb
and
enter
je
inc
fsubl
cld
add
dec
and
test
int
pop
mulb
mov
cmpsb
add
mov
es
mov
sarl
leave
fdivrl
push
adc
in
cmp
add
mov
push
sahf
xor
jb
fimull
sbb
fwait
add
rcr
sbb
loop
sub
jg
push
and
outsl
repnz
sbb
ret
adc
inc
orl
inc
shl
mov
sbbb
xchg
jne
dec
xchg
push
xchg
mov
push
inc
sub
jl
cs
or
mov
popa
lret
in
xchg
xchg
mov
sti
xchg
pop
adc
push
rep
pop
adc
dec
mov
add
mov
ret
pop
jecxz
imul
stc
and
dec
add
test
xor
std
inc
fdivs
addb
jb
jg
mov
push
or
test
fiaddl
adc
jecxz
add
daa
pop
adc
add
add
mov
rorl
pop
adc
popf
pusha
lods
jl
adc
loope
mov
cmp
push
adc
xlat
jbe
sahf
out
ret
repz
add
sbb
xlat
lret
jns
popf
daa
cwtl
push
bound
xor
xchg
out
shlb
je
daa
aaa
out
icebp
aad
jge
sbb
call
test
incl
imul
adc
fbstp
push
daa
mov
xor
addb
push
fildl
cltd
push
xchg
lret
lret
fwait
add
mov
mov
pushf
enter
jle
bound
outsb
push
xchg
subb
mov
sbb
pop
cmc
lcall
fsub
ja
cs
xor
pop
cmp
addb
nop
add
pusha
xchg
pop
mov
push
and
es
xchg
test
adc
movb
mov
add
out
inc
and
mov
daa
aaa
mov
aaa
add
dec
mov
and
pop
ret
hlt
ret
add
jno
ljmp
aam
mov
pop
daa
js
loop
sub
push
inc
add
push
aaa
xchg
xchg
sub
xchg
mov
out
mov
xor
jne
pop
adc
dec
repz
into
lcall
in
daa
add
in
and
cli
pop
sub
and
sub
cwtl
inc
inc
jno
add
in
add
xor
fcoms
popf
mov
sbb
inc
nop
xor
or
xor
add
fs
push
mov
negb
jge
imul
jns
or
add
gs
add
sbb
arpl
cwtl
pop
add
or
add
push
inc
xor
add
imul
mov
addl
shrb
test
cmp
rolb
fisubs
mov
ret
cmp
mov
or
mov
repnz
aad
pop
cmpsl
ljmp
aas
sarb
loopne
test
lahf
es
push
lds
inc
mov
xor
add
psubq
pop
std
sub
inc
sub
in
test
ret
rolb
pusha
xor
std
fwait
add
pop
or
insb
mov
roll
imul
daa
sbb
and
mov
adc
pop
or
mov
xor
andl
popf
sbb
push
test
aas
outsl
std
xchg
aaa
mov
add
cwtl
cmp
jp
jge
repz
imul
sbb
pop
out
xchg
mov
push
push
jge
rcrl
mov
pushf
or
mov
cld
inc
repnz
jg
scas
fwait
daa
jmp
fisttpll
inc
mov
cmpsl
out
aas
pop
fists
mov
out
test
roll
int
add
add
hlt
cmpl
sub
xchg
jnp
aam
ss
mov
mov
insb
fidivrs
and
xchg
ljmp
popf
in
mov
insb
push
sub
lea
rorl
std
data16
add
out
icebp
mov
and
pop
mull
or
add
popf
lock
xchg
hlt
mov
and
sub
mov
mov
and
mov
subb
daa
fistps
divb
mov
add
icebp
int
je
daa
pop
outsl
movsl
mov
add
jns
sbb
daa
or
mov
sbb
addb
add
xlat
repnz
push
or
sti
or
lods
sysenter
jecxz
jmp
fnstsw
mov
aad
add
sub
aaa
popf
int
sub
adc
mov
push
fwait
add
xorb
add
pop
adc
scas
mov
in
xchg
adcb
icebp
or
add
dec
adc
jae
xchg
xor
push
push
add
add
push
fidivrs
pushf
and
ds
nop
imul
jg
adc
push
shlb
mov
pop
inc
add
idivl
adc
aas
and
add
popf
add
sub
stc
addr16
in
cmp
subl
and
inc
cmpb
push
add
daa
adc
dec
aas
push
dec
int
and
push
xchg
add
adc
dec
or
inc
push
add
popl
adc
cmp
cld
js
loopne
cmp
jp
and
stc
popf
lods
pop
pop
adcl
daa
mov
shl
nop
mov
sub
push
pusha
rcll
add
and
enter
cmpsl
jne
and
add
and
xchg
pop
cmc
fldcw
hlt
add
mov
push
lcall
jbe
sbb
notb
add
xor
push
or
inc
add
insl
or
scas
into
je
jecxz
push
popf
daa
sbb
jo
sbb
dec
pop
adc
je
lods
ss
movsl
test
cli
lea
movsb
lock
sbb
pandn
ss
push
and
pushf
push
or
nop
repnz
pop
out
push
inc
push
sbb
mov
add
int
fwait
jnp
gs
mov
bound
test
push
out
fiadds
aaa
adc
xor
sbb
lds
dec
sarb
pop
or
sbb
in
jo
jmp
imull
roll
add
addr16
xchg
popf
or
nop
inc
daa
mov
jg
js
mov
jle
mov
adc
arpl
into
ret
or
inc
xlat
adc
dec
push
dec
into
cmpsb
faddl
and
mov
mov
xchg
out
xchg
adc
inc
add
enter
push
mov
clc
push
ja
sbb
pop
lahf
dec
add
push
sub
sbb
mov
push
loope
add
movsl
inc
or
sbb
push
fstps
dec
add
insl
sbb
sahf
fstpt
mov
arpl
adc
popf
push
dec
out
mov
or
int3
pop
lods
inc
out
fstpl
sti
mov
pushf
add
loop
or
outsl
xor
jns
sub
sahf
clc
sbb
inc
mov
pop
pand
daa
lods
xchg
dec
mov
scas
add
divl
pop
pop
add
dec
fs
roll
push
leave
je
scas
fsts
jae
sbb
dec
jnp
daa
aad
mov
push
addl
sub
lret
add
and
sub
mov
mov
hlt
pop
xchg
ja
add
mov
loop
sbb
iret
push
repnz
lahf
shlb
daa
je
daa
fildl
push
fwait
xor
fisttpl
xor
pop
dec
push
jecxz
fidivl
inc
dec
insb
xor
popf
lds
push
xchg
frstor
mov
adc
mov
inc
cs
add
mov
mov
icebp
data16
sbb
loop
sbb
mov
cmpsb
jne
bound
and
fwait
xlat
jl
sbb
xchg
sub
daa
jmp
sbb
mov
xchg
sbb
pop
inc
loop
lods
enter
das
sbb
popa
ret
push
mov
jns
in
pusha
add
adc
jp
push
or
mov
push
loopne
sub
out
and
mov
push
lods
jmp
rolb
sbb
add
fistpll
add
test
pmulhuw
and
bound
mov
pushf
and
pop
and
sahf
jns
xchg
dec
daa
pushf
push
inc
ficoms
add
xor
test
add
scas
sbb
fdivrs
sbb
cld
mov
and
divb
dec
pusha
daa
fs
in
jo
jmp
add
xchg
mov
imul
jno
push
int
add
pop
jp
movsb
daa
jmp
idivb
adc
push
cmpsl
dec
ret
add
ds
jge
ljmp
js
jl
sahf
ret
aaa
stos
jae
cmp
and
fstl
ds
xor
xchg
popf
leave
lods
in
mov
cmc
dec
mov
sub
xor
pop
pop
out
incb
mov
movl
stc
cmp
xchg
add
loop
inc
mov
lret
out
mov
push
add
add
lods
popa
cwtl
add
test
dec
add
add
adc
jmp
dec
cmpsb
inc
adc
xchg
testb
test
push
daa
rcrb
rolb
leave
mov
or
adcl
add
enter
sub
xor
add
les
popf
ja
adc
jae
or
daa
push
movntq
in
data16
add
mov
mov
add
icebp
loop
mov
or
cmpsb
fs
movsb
aas
in
xchg
loopne
push
inc
add
mov
cmp
repz
gs
out
andb
ljmp
in
mov
call
push
jecxz
popf
cmpsb
flds
lods
lods
push
clc
sub
int
insb
lcall
sub
and
push
cmpsl
test
jle
push
or
bound
data16
add
loope
xchg
stos
int
xchg
rolb
shll
push
lret
daa
cmpl
add
and
jge
repz
mov
add
daa
xor
or
add
cs
std
test
push
nop
scas
daa
and
mov
add
popa
test
cld
pop
mov
out
or
push
fiaddl
add
push
dec
ja
pop
incb
pop
mov
sti
gs
mov
jb
cmp
xor
nop
mov
es
inc
mov
push
jbe
daa
add
and
shlb
mov
sbb
push
ret
lret
push
imul
fucom
fmull
sub
lods
xor
pop
pop
add
cmp
jge
loope
pushf
mov
imul
cmp
test
data16
xor
xchg
movsb
cmc
sub
adc
jp
sub
jae
cmp
insl
repz
sub
push
imul
jns
cmpsl
outsl
sub
adc
adc
mov
call
out
mov
lahf
popf
stos
jnp
cmp
nop
push
pop
repnz
std
adc
fistps
or
pop
cmp
mov
add
pop
pop
test
and
fistps
adc
xchg
xchg
or
sbb
sub
ja
adc
xchg
sub
pop
pop
aaa
outsb
inc
adc
aaa
in
sarb
pop
push
inc
subb
mov
sbb
inc
dec
fsubl
mov
out
inc
js
cmp
aaa
mov
and
test
les
dec
pop
shrl
scas
lcall
movsb
lea
call
add
fldl
mov
xchg
jns
pop
mov
cmp
inc
sbb
rorb
div
ja
add
sub
out
push
jbe
sahf
sbb
jae
push
push
adc
cmc
pop
inc
sub
add
incb
push
stc
aad
mov
pop
out
mov
xor
dec
add
pop
add
bound
ror
rclb
and
outsl
push
cmp
in
add
xchg
outsl
xchg
xor
repz
xchg
daa
and
inc
mov
int
dec
dec
rcrb
push
std
inc
xchg
adc
mov
jle
lcall
test
pusha
fdivr
sub
je
add
mov
insb
xlat
ds
add
add
insl
pop
xchg
mov
cwtl
mov
mov
sbb
jmp
dec
cmc
popf
es
cmp
sahf
rcrb
add
aam
les
sub
pop
sarb
aad
mov
stos
call
test
rolb
mov
hlt
mov
jp
jo
popf
stos
push
inc
mov
inc
sub
daa
outsl
inc
cltd
dec
jge
out
add
adc
outsl
add
pop
daa
xchg
or
bound
inc
or
push
mov
pop
add
and
jae
and
pusha
add
jnp
cmp
sub
fldlg2
add
nop
pop
icebp
add
scas
adc
sbbb
mov
inc
inc
xorl
lock
mov
or
pop
mov
popf
sub
xchg
and
add
jo
das
dec
div
popf
ror
mov
xlat
out
out
mull
xchg
je
ret
pushf
dec
subl
out
jne
ficompl
daa
jmp
and
scas
fs
daa
mov
mov
lret
leave
mov
lret
ret
jno
loope
fcomp
ret
add
roll
push
andl
shl
lea
arpl
mov
jnp
loope
add
std
fnstenv
adc
jg
mov
push
int3
out
lods
jno
frstor
in
lahf
dec
out
loopne
popa
or
daa
add
sub
and
pop
clc
daa
addb
add
stos
inc
push
xchg
push
aad
adc
cmp
adc
sti
or
pop
mov
addl
je
pop
f2xm1
or
scas
out
sub
out
shr
sbb
inc
lcall
add
add
cwtl
test
or
popf
cmpsb
sti
adc
out
iret
nop
movl
mov
sti
aam
xchg
dec
xchg
push
icebp
xor
les
mov
in
sub
je
in
iret
push
jmp
addr16
adc
jmp
std
vmaxsd
insl
add
jbe
xor
cmp
dec
cmp
pop
ljmp
lds
pop
ror
in
mov
mov
shl
movsl
lds
popa
popf
mov
jno
outsb
inc
dec
dec
lcall
jge
addl
mov
and
nop
pushf
daa
insb
sbb
pop
add
ret
daa
sub
add
jbe
cmp
insl
adc
pop
jge
popf
mov
xchg
ret
dec
pop
jae
aaa
ficoml
loopne
dec
orl
popa
push
enter
xor
fstl
jge
lahf
jg
push
popf
addr16
jge
daa
das
jns
cltd
or
xchg
pop
add
and
mov
scas
ss
loope
test
and
add
add
out
sub
das
fstl
daa
add
ljmp
rorl
sub
shll
add
add
mov
cs
pusha
mov
sbb
add
jbe
push
and
sub
xor
dec
fs
xchg
xchg
pushf
xor
mov
pop
int
add
lret
sub
stos
and
jg
dec
fldenv
cmp
cmp
add
add
aam
das
gs
push
pop
dec
jbe
popf
and
loope
repz
sbb
popf
sbb
lds
pop
add
rolb
lahf
jl
adc
push
jne
js
mov
sub
arpl
xchg
loopne
xchg
pusha
sub
cmp
mov
pop
movsl
ret
fwait
jbe
rol
in
xor
call
sub
daa
cmpsb
or
fwait
popa
pop
repnz
add
and
ss
add
aas
mov
pusha
pop
add
sbbb
pop
or
jp
add
ds
popf
jle
sbb
pop
xor
sti
xor
add
pop
movq
cmp
xor
dec
and
or
and
mov
test
xchg
adc
int3
gs
adc
outsb
imul
inc
and
mov
pusha
cmp
jecxz
add
daa
lds
pop
sub
jno
and
lea
lds
aam
addb
pop
pop
lds
repnz
mov
push
daa
lahf
mov
or
lods
push
jno
and
or
pop
daa
xchg
xor
fwait
jecxz
ret
inc
popf
push
aas
mov
adc
cmp
int3
lahf
pop
pop
and
add
adc
cmp
jge
and
scas
pop
sbb
pop
les
cs
cmc
scas
repz
sti
in
pop
outsl
push
add
and
cmpsl
aaa
xor
add
mov
adc
aaa
dec
xlat
lea
adc
call
add
stos
cli
adc
adc
outsl
lock
out
sub
and
jmp
push
aad
jo
and
lock
pop
arpl
mov
enter
gs
push
test
aam
aaa
and
xor
adc
aaa
inc
dec
mov
dec
and
add
inc
xchg
es
pop
fstpt
aad
pop
add
or
sahf
bound
add
inc
xor
cs
mov
mov
and
addl
add
popf
and
add
xor
cmovg
aam
push
jnp
loop
jno
cmp
cmpsl
push
and
mov
aas
pusha
leave
sub
in
dec
out
lret
iret
loopne
mov
les
popf
cmovg
rcrl
sub
mov
and
mov
out
cmp
pushl
xor
jge
mov
mov
mov
mov
dec
or
and
popf
mov
xchg
adc
addr16
in
add
outsb
clc
inc
imul
and
push
cli
jnp
push
xor
loopne
pop
dec
xchg
cmpsl
push
inc
fidivl
inc
xchg
and
fisubrs
das
addr16
je
push
sarb
aas
int3
push
sub
push
test
sub
add
jge
cmpsb
sbb
sbb
sub
sub
add
sub
add
sub
adc
addr16
sbb
xchg
jae
icebp
inc
sub
cmpl
pop
loopne
cltd
repnz
mov
loope
mov
add
dec
mov
pop
in
jae
xchg
jmp
test
cmp
es
cltd
lret
sub
mov
push
nop
ljmp
mov
mov
add
push
scas
xchg
xchg
loopne
pushf
add
mov
orl
lock
bound
sbb
push
push
jp
sub
shl
dec
push
aas
push
add
clc
daa
and
popf
lods
or
es
inc
ret
jg
fsubl
fs
cmp
dec
lret
dec
sub
dec
pop
lods
xor
popf
dec
ss
cmpsl
pop
arpl
mov
and
out
cmp
and
ds
dec
and
cmp
rcrb
adc
or
add
nop
popf
pop
push
add
lret
jmp
sub
enter
fisttpl
or
mov
mov
shl
popf
cwtl
lock
fnstcw
pusha
add
iret
cmp
test
icebp
into
inc
inc
repz
xor
push
and
mov
sub
mov
test
daa
sahf
mov
mov
adcb
lock
xchg
or
ja
sbb
push
arpl
add
fs
push
and
dec
mov
pop
push
jge
sub
adc
mov
dec
fcmovnb
dec
loop
cmpsl
push
pop
jg
call
push
pop
pop
and
dec
pop
ss
inc
and
cmp
in
ljmp
fisttpl
or
sub
fildll
sbb
mov
lret
xchg
add
loopne
jg
dec
cmpsl
popf
repz
push
cld
mov
pushf
mov
add
adc
lret
sti
xor
jl
cmp
inc
das
lds
adc
mov
sub
js
cmp
in
push
movsb
pusha
fincstp
hlt
dec
fldl
mov
xor
mov
adcb
mov
ficoms
sbb
mov
dec
sub
test
mov
jbe
lea
push
mov
lret
add
in
pop
jno
cltd
adc
inc
arpl
push
pop
sub
jl
adc
testl
dec
mov
add
dec
sub
lahf
or
pusha
mov
sbb
popf
cwtl
add
ret
pop
sti
add
and
pop
or
dec
js
add
das
push
aas
xchg
orl
sar
xor
adc
sub
in
test
and
ljmp
pusha
add
pop
lret
dec
scas
aam
sbb
add
or
daa
mov
dec
out
add
sbb
test
lods
into
in
cmp
cmc
jmp
cwtl
mov
lcall
mov
push
fld
stc
mov
nop
jb
push
fildl
push
in
aam
pop
mov
addl
pop
test
cmp
xchg
inc
xor
stos
mov
pop
or
ss
jbe
call
pop
dec
inc
pushf
jo
inc
jne
inc
mov
daa
pop
dec
sarb
xorb
pop
leave
imul
popf
or
js
inc
cmp
dec
and
ja
adc
jecxz
push
sarl
movsl
inc
jns
xchg
xor
pop
pop
and
add
xchg
ss
add
or
popf
xor
push
aaa
jecxz
imul
orb
out
xchg
lods
in
xlat
loopne
xchg
stos
orl
fs
or
es
pop
fldl
in
cwtl
rolb
rolb
xchg
mov
cmp
mov
roll
in
mov
mov
fcomp
lea
lahf
mov
xchg
mov
pop
mov
pop
test
add
mov
inc
sbb
mov
adcl
lcall
gs
fdivp
sub
jle
arpl
das
inc
pushf
aas
imull
jb
push
je
lods
mov
inc
push
sahf
outsb
push
push
popf
je
pop
sarb
inc
fisubl
dec
push
fdivs
cmpl
dec
adc
jl
daa
or
test
shll
inc
popa
xor
out
je
rcrl
gs
clc
cmp
arpl
arpl
pop
pop
sub
imul
ja
pop
andl
enter
pop
movsl
push
sbb
lcall
mov
push
loope
out
jno
out
jg
cmp
mov
lcall
daa
mov
dec
mov
xlat
cmp
cmp
inc
test
shrb
sub
adc
dec
daa
add
ss
in
in
daa
xchg
sbb
xchg
xchg
and
sub
xorl
jecxz
js
out
je
jmp
or
pop
xchg
add
ficompl
adc
adc
in
sub
push
jmp
insb
jl
inc
popa
rcrl
pop
add
inc
add
pusha
dec
inc
mov
add
pop
adc
jp
jg
lahf
cli
add
push
imul
dec
dec
xchg
daa
es
push
and
cmp
xor
and
cmp
lret
cltd
out
imul
lahf
lods
inc
add
sub
add
pop
adc
pusha
jns
iret
cmp
sbb
jge
adc
xor
in
mov
popl
or
xchg
jmp
pushf
sahf
stc
mov
jecxz
xchg
lahf
sbbb
out
xchg
mov
lods
mov
mov
loop
daa
sahf
fidivrs
ret
cmpsb
in
jl
sbb
push
and
mov
shrl
inc
cmpsl
ficompl
dec
pop
xchg
sti
xor
and
inc
daa
leave
mov
nop
aad
dec
mov
ret
pop
lahf
mov
inc
and
push
fs
inc
ja
scas
popa
or
dec
jo
xchg
adc
xchg
xor
daa
jbe
test
xchg
stc
add
and
lret
in
inc
testb
push
or
and
xchg
jmp
or
das
jp
xchg
xor
int3
comiss
xchg
xchg
fisttpl
mov
das
addb
nop
addb
adc
aaa
jg
lea
mov
mov
adc
sub
fwait
xorb
adc
test
and
pop
add
mov
dec
and
clc
pop
add
mov
cmp
mov
cmpsb
or
push
sub
pop
xchg
pop
pop
inc
push
add
cmp
mov
add
and
adc
daa
sarb
sub
bnd
out
hlt
sbb
in
adc
xchg
mov
push
testb
push
cli
int
sub
ror
ds
jg
inc
ret
mov
out
rcrb
loop
lret
mov
pop
scas
in
loope
addr16
push
mov
btc
out
mov
and
mov
mov
fistpll
jg
lds
push
addl
andl
insl
fs
popf
pop
incb
xor
inc
push
insl
xchg
lods
or
out
add
outsl
push
pushf
in
and
sbb
dec
inc
mov
push
fnstcw
add
push
mov
loopne
jle
push
faddl
xchg
jae
and
dec
pop
popf
sbb
inc
xchg
add
cmp
jmp
xor
jle
add
mov
pop
sub
das
pusha
jmp
push
add
test
and
add
xor
adc
or
or
movsb
lret
in
adc
ret
loopne
jae
jmp
outsw
stc
lahf
jmp
movl
imul
addr16
aam
inc
sbb
out
scas
jg
mov
idiv
fisubrs
xor
aad
ret
xchg
mov
cld
fstps
xor
mov
mov
sub
loopne
mov
ret
mov
mov
xchg
sbb
nop
cmc
in
add
scas
movsb
daa
scas
jb
dec
jbe
mov
add
imul
cmp
push
inc
xchg
pop
daa
imul
sub
jnp
dec
xchg
sti
addr16
inc
shll
dec
fcmovbe
js
cmpsl
pop
inc
clc
outsb
rdtsc
stc
adc
push
push
je
pusha
add
sbb
or
add
icebp
lcall
xor
lcall
sbb
daa
pop
pop
xchg
and
mov
loop
and
add
cmp
pop
addb
scas
cmp
xchg
test
and
xlat
cli
shlb
out
jne
add
or
loopne
outsl
shr
ret
add
int
cmc
enter
movsl
push
jge
lds
nop
lods
popf
daa
adc
dec
in
faddp
jns
mov
mov
xchg
pop
add
pushf
push
std
daa
pop
cmp
insb
pop
cmp
jb
push
xor
stos
mov
in
or
add
jmp
aas
add
lods
ret
inc
mov
int
daa
pop
adc
ljmp
sbbl
loope
sbb
imulb
arpl
mov
pushl
add
mov
cld
pop
daa
pushf
clc
and
add
dec
das
lock
iret
and
popf
rorl
mov
out
clc
pop
mov
loop
cmpsl
outsl
fs
push
movsb
aaa
and
xchg
adc
pop
jge
mov
popf
push
xchg
js
movsl
inc
ljmp
dec
lcall
addr16
pop
daa
test
in
scas
lahf
or
pop
repnz
jbe,pt
aas
jge
mov
and
pop
sub
mov
test
mov
daa
jmp
cmovb
mov
sbb
xchg
daa
cmc
adc
andb
xor
outsb
jp
je
rolb
add
clc
out
jns
add
andl
push
mov
sar
and
lcall
sub
dec
mov
or
call
clc
and
das
jnp
imul
add
je
shl
daa
mov
test
add
mov
pop
stos
sbb
lods
aaa
rorb
fnstenv
sbb
imul
push
lcall
cmpb
and
insb
in
out
cmpsl
or
lcall
xchg
fnsave
cmpsl
imul
xor
sbb
push
cmc
je
push
fsts
pushf
jb
adc
lcall
cmp
jnp
pop
fs
enter
jecxz
fsubs
es
cld
sti
popf
scas
and
cmp
dec
push
or
cmpsb
daa
jns
mov
cmpl
cmpsb
mov
push
leave
push
andl
or
cmpl
sbb
mov
dec
inc
xchg
sub
inc
sub
cmp
in
mov
jnp
or
enter
jns
ffreep
inc
cltd
xchg
fwait
std
fwait
test
jl
sbb
out
cmp
jno
and
fidivrl
lea
sbb
les
hlt
fcmove
push
sbb
xchg
xlat
jo
xor
sbb
test
mov
sbbl
jbe
and
pop
repz
jnp
push
mov
ficoml
popa
xchg
lods
push
fucom
add
fcomp
and
sub
inc
hlt
leave
aad
ret
adc
std
in
mov
sub
sub
das
jecxz
nop
imul
pop
clc
sub
inc
or
stos
hlt
or
cmc
lods
imul
rcrb
mov
out
cmp
out
je
adc
adc
mov
or
push
sub
inc
mov
outsl
hlt
jbe
aam
cmp
mov
jns
inc
fsqrt
shlb
outsl
hlt
sbb
dec
jmp
inc
and
push
ret
jbe
sbb
push
pop
rcll
icebp
mov
in
sbb
cs
cvtps2pi
jg
cmp
cmp
call
hlt
jnp
mov
test
sbb
mov
test
add
jg
or
push
xor
cmpsl
fcmovbe
jne
push
aam
icebp
cmp
pop
imul
or
cmp
push
pusha
repz
add
adc
jno
cmp
mov
in
loop
jb
inc
jl
inc
into
xchg
push
test
test
sbb
shlb
mov
adc
mov
cmp
sub
rol
xchg
sub
rcrl
rorb
jbe
adc
sbb
std
cmp
jnp
jae
xchg
mov
ds
xchg
and
pusha
int3
mov
xchg
sub
sbb
in
fiaddl
sub
cmp
call
sub
and
shrb
imul
cmp
jle
pop
push
push
push
fdivrs
aam
ret
pop
fidivl
js
mov
and
fisubl
mov
xchg
popa
jne
das
push
inc
out
jge
imul
jb
lret
pop
repnz
test
push
ret
push
ret
cmpb
das
push
rol
popa
out
incl
fimull
mov
std
xor
push
pop
cs
out
mov
enter
insb
gs
adc
cmp
dec
pusha
mov
push
add
clc
cmp
inc
inc
mov
andl
pop
cli
aam
or
xor
testb
add
ljmp
cmp
adc
bound
push
mov
andl
jns
and
je
or
cmp
jp
lods
push
sub
fldcw
psraw
mov
aad
insb
aam
sub
add
or
or
push
scas
push
jmp
andl
int
int
jne
and
fisubl
pushw
popa
es
cmp
pop
mov
rorb
cmp
and
jnp
rolb
data16
js
cmp
mov
pop
rcrb
pusha
jnp
data16
cld
push
ljmp
sbb
or
popa
fmull
push
pop
cmp
mov
pop
or
notb
mov
scas
in
les
xchg
or
cld
xchg
mov
int
popa
mov
enter
dec
movsl
int3
push
shl
ret
popl
xchg
jb
mov
out
hlt
pop
mov
inc
shl
outsl
sbb
addb
enter
push
mov
inc
test
and
cmc
push
pop
and
xchg
mov
pop
or
push
add
in
inc
add
or
cmp
xchg
test
push
andl
sub
jns
xchg
call
cmp
cmp
jp
bound
mov
roll
fcompl
subb
out
out
or
jle
adc
mov
inc
inc
jp
and
jnp
inc
cmp
stc
sub
cmp
jnp
xchg
mov
or
test
leave
push
scas
cli
cmp
jne
pop
scas
in
mov
dec
adc
ror
cmp
call
insb
test
insb
mov
ret
inc
cmp
out
xchg
mov
add
sar
dec
jg
adc
pop
call
cli
push
clc
imul
sarb
fsubl
pop
lods
ret
shrb
inc
call
adc
sahf
sub
fldcw
jg
mov
mov
mov
inc
cmp
push
sbb
and
cmpb
ljmp
scas
or
cmp
test
sbb
cld
inc
jle
inc
aas
xchg
and
or
popa
shll
dec
movsl
testb
push
insl
lcall
shlb
popa
cmp
xor
mov
lret
andl
insb
lret
pop
ffreep
call
inc
dec
sbbb
and
mov
cltd
and
mov
pop
add
mov
lds
mov
add
jp
jge
call
push
ss
jp
repnz
adc
pop
cmp
es
jae
aas
inc
arpl
push
mov
mov
jp
subl
mov
ret
test
les
stos
jle
jne
adc
cmp
pop
mov
xchg
cmp
sbb
mov
xor
fidivrl
inc
mov
mov
push
push
hlt
mov
pop
jge
cmpsl
pusha
cmp
sbb
inc
repz
or
xor
or
in
mov
hlt
inc
rorl
sbb
cld
hlt
xchg
popa
xchg
inc
adc
cmp
xchg
inc
xor
rcl
das
cmpsb
mov
sbb
inc
add
notb
cmpsl
test
daa
inc
notl
mov
or
icebp
xor
popl
inc
dec
pop
adc
adc
pop
popl
xchg
movsl
fwait
adc
push
sbb
fistl
addr16
inc
rcr
sbb
inc
mov
lods
mov
pop
popl
fwait
imul
pushf
popl
dec
aaa
fistl
addr16
xlat
fmull
sbb
addr16
xchg
dec
sbb
inc
or
pop
pop
adc
loop
pop
popl
aad
lcall
cmp
fisubl
fnstsw
sbb
sbb
pop
mov
pop
cmp
lcall
hlt
or
das
int3
xchg
stos
cmp
clc
and
dec
mov
sarb
add
pop
dec
push
xchg
and
pop
ror
aad
jmp
dec
mov
inc
jns
fstp
cmp
sbb
adc
mov
rorl
cmp
mov
or
pop
cltd
hlt
xchg
dec
or
rorl
push
jl
fxtract
xchg
aam
adc
enter
hlt
xchg
shl
xor
jbe
hlt
ja
and
imull
xchg
cwtl
rolb
push
and
and
xchg
fcom
aad
and
not
aaa
mov
dec
and
movsl
divl
sarb
dec
icebp
mov
test
scas
sub
xchg
in
outsl
lock
mull
xor
aaa
mov
jo
or
fldenv
ja
das
or
inc
mov
or
adc
mov
push
xchg
and
lock
dec
faddl
out
or
inc
leave
in
mov
mov
inc
adcl
inc
xor
fcoml
sub
mov
jae
jno
and
pusha
decl
jecxz
xchg
popa
bound
pushw
inc
scas
addb
imul
rorb
add
testb
and
add
ss
in
adc
lret
test
pop
aaa
adc
inc
jb
repz
cltd
sbb
inc
out
aad
cld
rcll
mov
mov
mov
jmp
outsl
out
mov
inc
lret
sbb
cmp
sbb
sbb
sub
dec
cmp
push
add
adcl
pop
add
aaa
and
jp
push
orb
add
cltd
shll
cs
adc
add
xchg
inc
inc
xor
xchg
sbb
pop
test
les
jnp
mov
testb
push
cld
mov
xchg
xchg
and
jnp
mov
insb
fistpll
jae
xlat
stos
add
je
das
mov
js
add
mov
mov
mov
dec
imul
enter
insl
imul
and
fiaddl
das
in
ds
mov
repnz
adc
dec
dec
pop
or
xchg
jp
push
dec
lcall
pop
xchg
xchg
fstl
inc
aam
mov
adc
mov
push
scas
test
mov
push
ret
cmc
cmp
out
in
mov
ficompl
mov
das
repnz
sbb
loopne
pop
push
mov
cmpsl
pop
mov
pop
xchg
jmp
in
mov
loopne
pop
mov
add
mov
shl
das
add
out
dec
in
pusha
mov
popf
inc
and
ret
mov
pop
or
pop
in
and
jo
popa
addb
xchg
add
test
or
ret
mov
sbb
xorb
rcll
xor
jp
icebp
push
sbb
les
xor
pushf
mov
add
je
jno
les
daa
call
mov
adc
imul
es
sahf
inc
sub
inc
adc
popa
pop
or
insl
cmp
cli
xchg
push
cld
pop
aaa
push
and
adc
test
sub
jnp
xchg
add
mov
mov
pop
push
std
mov
xor
mov
xchg
sti
fsubs
mov
lods
addb
lods
ja
xorl
cmpsb
add
lea
add
lea
rolb
iret
hlt
movsl
inc
imul
idiv
sbb
js
and
repnz
shrl
and
fs
dec
divl
aam
pusha
dec
mov
pop
mov
cld
outsl
mov
idivl
sbb
cmp
xor
or
popa
popf
mov
insl
jle
shlb
movsl
xchg
mov
add
and
xor
shrb
cmp
adc
cmp
mov
push
pop
push
xlat
insb
mov
lret
lock
fsubs
cmpsl
push
repnz
cld
mov
mov
rcrb
jo
scas
hlt
cmpsl
enter
testl
xor
pop
or
sbb
divl
push
jns
popl
lds
lods
mov
pop
or
push
notb
es
in
push
add
mov
mov
pop
sbb
test
add
push
shr
xchg
lods
andl
popf
fnstcw
cli
adc
jmp
add
leave
jp
out
dec
xchg
aaa
sub
in
mov
insb
jne
adc
mov
pop
inc
ja
iret
sub
lcall
sub
xchg
cld
cmp
dec
imul
aad
pop
add
push
stos
jp
push
shr
push
pop
xor
imul
les
out
lods
sub
shlb
mov
adc
imul
ss
iret
mov
call
push
xchg
es
push
xchg
mov
andl
popf
sbb
mov
and
jmp
jp
inc
and
jne
jle
fcmove
mov
lret
fstpl
or
inc
or
dec
mov
dec
cmp
lea
mov
int
test
cmp
mov
mov
or
lods
aaa
mov
cld
incl
jne
dec
adc
and
shrb
pop
push
sub
xchg
test
daa
scas
and
fisttpll
and
pop
std
test
testb
pop
call
cmp
enter
je
pusha
lock
rcl
push
dec
testb
outsl
mov
ret
mov
or
push
adc
into
or
push
sub
xchg
test
add
iret
mov
jnp
call
jg
into
loopne
ds
cmp
mov
ret
mov
out
xor
push
ficompl
mov
or
test
pop
xchg
cmc
imul
mov
mov
cmp
ficompl
add
lahf
or
push
inc
adc
dec
or
int3
pop
daa
hlt
mov
stos
test
inc
decl
xorb
cmp
jnp
pop
mov
inc
xchg
xchg
pop
lea
popa
loopne
push
cmp
lahf
jo
call
ljmp
sub
imul
rcrb
dec
adc
sub
add
dec
shlb
sub
cmpsb
dec
js
inc
mov
test
mov
fstpl
cmp
out
push
int
inc
jp
out
and
and
inc
cmpb
stos
incl
xor
adc
push
adc
in
cmc
mov
push
inc
in
mov
sbb
adc
notb
in
scas
add
cmp
pop
inc
dec
xchg
xor
dec
sbb
cmp
fstps
add
mov
add
xchg
iret
in
xchg
addr16
ret
sub
int3
scas
add
inc
xchg
outsl
cltd
test
push
clc
add
jmp
add
das
popa
xchg
lahf
rcll
test
mov
xchg
inc
lret
cs
adc
sub
pop
or
lcall
loope
mov
push
iret
mov
lret
jg
popf
das
repz
pop
rorl
ss
push
hlt
xchg
mov
or
aaa
arpl
xchg
pop
mov
or
jne
mov
mov
mov
test
dec
lcall
and
mov
xlat
mov
xchg
enter
inc
cmp
bound
sub
mov
add
lcall
inc
cmp
inc
mov
test
andb
cmp
ret
je
outsl
add
xor
mov
inc
cmp
inc
mov
xchg
andl
imul
and
cmp
add
inc
cmp
inc
mov
xchg
andl
enter
xchg
inc
dec
inc
daa
in
pop
insl
cli
arpl
mov
repnz
aam
cmp
mov
push
cmpsl
hlt
or
mov
daa
sbb
hlt
or
jg
imul
sarb
pusha
enter
lods
cld
out
dec
and
ja
sbb
adc
testb
xchg
inc
lcall
ja
popl
add
adc
or
mov
mov
fdivrs
fbld
sbb
pop
imul
jecxz
pop
enter
pusha
add
cld
sub
or
sbb
pop
repnz
push
jne
ja
ficompl
enter
pop
cmp
cltd
mov
sahf
ds
in
cmp
push
sbb
mov
fistps
test
imulb
jnp
adc
loop
repz
adc
push
mov
lahf
push
cld
dec
and
iret
data16
sub
testb
add
call
jne
adc
arpl
mov
mov
cmp
jge
and
cmp
mov
or
and
mov
cwtl
fnstsw
out
enter
xor
in
mov
sbb
fcoms
inc
out
fwait
lret
rcll
inc
fcoml
and
test
sub
call
push
lret
fldenv
xchg
movsb
fmuls
pusha
jp
jno
icebp
pushf
andl
add
xor
fsub
and
add
movsl
xor
and
xchg
cmc
pop
jp
push
movsb
aas
pop
out
loopne
jne
jp
push
mov
mul
aad
push
mov
pop
mov
pop
cmp
mov
pusha
mov
pop
andl
subl
std
test
fcompl
mov
jecxz
and
jbe
dec
sbb
and
mov
mov
testb
inc
movsl
push
mov
dec
mov
mov
popa
out
cmp
push
pop
cs
in
and
cmp
data16
clc
sub
aad
jne
adc
mov
cmp
adc
lahf
cmp
pusha
jp
mov
std
ret
pushl
in
mov
mov
sub
push
inc
scas
aas
mov
ss
adc
mov
stc
mov
aad
cmp
out
cmp
xchg
or
test
xchg
fldt
addr16
int3
popl
std
lds
xadd
popl
pop
add
mov
lods
imul
ret
decb
push
pop
fbstp
push
pop
or
stos
ja
mov
sbb
mov
shlb
push
add
fmuls
mov
movsl
test
xor
sbb
in
add
lods
cmp
lahf
in
or
or
cmp
jno
and
cmp
or
jnp
cmpl
adc
pop
add
dec
mov
jp
out
into
orl
add
xor
idivl
ss
dec
iret
out
adc
aaa
call
mov
ja
inc
mov
fidivrl
and
aam
sbb
enter
mov
enterw
imul
ret
xchg
cmp
jnp
fcoms
adc
imul
add
iret
js
imul
mov
clc
adc
jbe
push
ss
cmp
iret
cmp
outsb
repnz
pop
add
lock
or
inc
cmp
popa
lds
ret
mov
sbb
cmp
and
scas
mov
jo
popa
xor
das
push
push
pop
fisubrl
popf
pushl
jne
popl
arpl
adc
rcll
xor
dec
push
mov
xchg
cmp
xchg
mov
aas
hlt
or
adc
fxch
and
pusha
adc
sbb
and
out
cmp
fisubl
push
push
push
popa
lods
xchg
nop
push
pop
pop
adc
push
or
div
adc
add
dec
inc
jns
inc
mov
test
fucom
fstpt
lret
sbb
testb
or
jae
dec
lcall
mov
mov
xchg
iret
hlt
sahf
popf
cmpsb
sbb
repz
adc
cmpsb
or
push
imul
push
or
jnp
ja
fcomip
mov
and
xchg
and
call
fisubl
popa
fsub
push
pop
sbb
mov
pop
or
inc
notb
lret
in
int
shrl
cmp
pop
adc
aam
outsl
out
cmp
push
sbb
inc
ret
popl
sbb
xchg
jp
cmp
bndldx
mov
leave
mov
lds
sub
inc
insl
icebp
pushf
cmp
lea
sbb
jnp
inc
orb
adc
lret
pop
and
fcmovnb
aaa
test
ret
lahf
cmp
das
sbb
aad
xchg
hlt
xchg
sbb
rorl
push
out
shl
xchg
inc
stc
daa
scas
rorl
not
inc
adc
xchg
and
or
mov
jno
and
inc
ljmp
inc
rcrl
popa
fcompl
push
pop
mov
or
pop
or
cmpsl
notb
pusha
adc
leave
add
dec
inc
test
into
insb
test
xor
std
sarl
lods
sbb
push
fldt
adc
in
sbb
jnp
je
cmp
sub
add
retw
xchg
cmp
out
mov
lret
add
cld
xlat
mov
cmp
or
insb
in
pop
mov
jge
adc
inc
scas
push
addr16
repz
adc
fstpl
in
iret
in
pop
cmp
ds
mov
cmp
push
sbb
add
insl
cmp
push
sbb
push
add
xchg
cmp
in
movsl
add
faddl
jge
test
inc
ror
push
cmp
add
jbe
mov
dec
cmp
push
and
cmp
iret
mov
enter
add
addr16
xor
dec
adc
call
repz
ficoml
test
push
call
mov
popa
adc
into
call
jae
adc
xorl
gs
in
xor
test
and
out
ret
les
out
std
push
fimull
mov
dec
repnz
push
sbb
bound
sarb
adcl
sbb
and
pop
jo
frstor
call
push
iret
fstl
in
in
call
adc
mov
loope
fsubrs
pop
mov
fcomps
cld
push
fcmovnb
and
xlat
inc
sbb
rcrl
mul
push
inc
jb
mov
push
jl
pop
sbb
mov
insb
call
xchg
iret
sub
call
push
xchg
shrb
in
mov
andl
xorl
in
lods
fimull
xor
inc
or
fmuls
or
int3
mov
xchg
ret
mov
call
ss
notl
cmp
lods
add
iret
pop
mov
jne
and
mov
pop
and
jbe
push
push
test
xchg
negl
mov
sub
rolb
sub
inc
shrl
mov
into
lret
in
popl
push
dec
jmp
addr16
sub
mov
push
and
pop
cmp
and
cmp
sub
in
cmp
ljmp
hlt
or
pop
stos
imul
hlt
or
das
repnz
lahf
lahf
mov
imul
hlt
or
jmp
jle
hlt
jle
add
test
aam
inc
test
fstl
sbb
test
pop
pop
cld
sub
push
test
push
xor
push
cs
add
xchg
mov
aad
jbe
mov
mov
pop
mov
jecxz
fists
sti
aas
mov
int
mov
mov
mov
mov
notb
inc
cmp
mov
dec
rolb
popl
shrb
lret
popl
sbb
xchg
imul
inc
mov
inc
cmp
pop
mov
add
mov
shl
xchg
imul
jle
mov
imul
hlt
or
js
pop
imul
test
inc
stc
sbb
fldl
fidivrl
test
pushf
jg
inc
cmp
sti
sbb
mov
es
cmp
mov
cmp
jnp
and
aam
add
les
jo
push
mov
xchg
mov
jnp
xchg
cltd
mov
insb
popf
lret
jnp
sbb
stos
es
and
cmp
sbbl
push
mov
and
rclb
jp
mov
and
into
les
dec
testb
cmp
rcr
push
cmp
mov
cmp
jnp
lock
ss
mov
xor
jno
add
inc
dec
dec
mov
stc
test
lcall
push
jbe
sbb
jmp
lahf
jns
add
xor
or
push
jnp
jl
scas
testb
cltd
push
mov
data16
insb
push
xchg
add
adc
xchg
push
inc
jnp
popa
lds
es
xchg
out
dec
push
dec
in
hlt
call
or
movsb
add
cld
mov
aaa
ret
fs
ret
arpl
and
and
jp
cmp
and
popf
xchg
enter
mov
jg
test
jo
andb
xorl
push
lock
pop
add
hlt
cmp
jp
repnz
cmp
notb
in
ss
push
add
push
inc
fimuls
jo
in
movsb
xor
sahf
inc
int3
scas
in
push
push
inc
mov
pop
cmp
push
sbb
mul
sbb
adcl
aad
cmp
cmp
push
sbb
xor
pushf
cmp
push
pop
mov
xchg
ficoml
adc
xchg
and
sbb
inc
inc
xchg
mov
push
sbb
jns
repnz
add
gs
andb
cmp
inc
mov
inc
hlt
sbb
ljmp
cld
lahf
jne
and
std
dec
sbb
stc
mov
jecxz
popf
mov
popa
adc
push
sbb
mov
pusha
fbld
bound
lahf
mov
and
pop
mov
loop
adc
add
push
ret
idivb
jno
and
sar
rorl
mov
cli
mov
mov
pop
not
in
mov
or
push
notb
imul
cld
push
inc
rolb
inc
scas
xchg
jo
ja
in
cld
sbb
pusha
outsb
aad
push
adc
cmp
sbb
ficoms
addr16
push
jb
popl
sub
mov
cltd
cmp
pop
mov
pop
cmp
in
add
notl
inc
fwait
xchg
cli
mov
test
mov
inc
push
ret
pop
cmp
out
push
pop
sarl
fidivl
popa
lods
push
pusha
push
pop
sbb
mov
pop
or
cmp
imul
dec
ss
sbb
into
int3
pop
xchg
pusha
sbb
inc
mov
pusha
frstor
pusha
xchg
iret
pusha
popf
mov
and
pop
mov
sbb
out
cmp
dec
shll
ficoml
lods
in
pushf
mov
fwait
cmp
pop
mov
pop
cmp
sub
sub
rcrb
imul
sarl
adc
cmp
add
aam
pusha
cmp
lret
and
cmp
jnp
and
imul
popf
dec
mov
into
mov
cmpsb
jl
js
add
jnp
mov
ror
or
sbb
and
sarb
add
sti
dec
and
push
mov
into
mov
mov
add
jp
aaa
ss
cmp
cmp
in
mov
jp
stos
add
mov
fs
and
or
jmp
dec
sub
notb
xchg
fsubr
push
fnsave
cld
dec
insb
adc
sbb
hlt
test
notb
rorl
sbb
sbb
xchg
mov
or
adc
sbb
aad
bound
bound
jbe
mov
mov
sub
inc
or
add
xchg
mov
in
loop
pop
jae
push
mov
andl
cmpsl
mov
lcall
lock
iret
leave
and
fsubrs
pusha
push
mov
int3
or
and
testb
ja
xchg
test
pop
mov
or
jae
and
lods
not
and
mov
sbb
ja
idiv
mov
push
out
adc
cmp
incb
es
mov
inc
mov
popa
test
push
ret
in
cmp
out
leave
pop
loope
jp
xor
pop
ss
mov
daa
icebp
jp
mov
divb
adc
sub
popa
mov
mov
lds
call
jne
xchg
ljmp
adc
aad
and
cmp
xchg
mov
xchg
cmp
push
mov
pop
or
cmc
clc
notb
das
enter
and
out
lahf
mov
jno
fisubrl
dec
rcr
arpl
mov
out
push
xor
cmp
repnz
repz
dec
imul
jmp
mov
call
inc
adc
out
iret
adc
mov
sar
adc
addb
xchg
cmp
jnp
mov
jae
ss
ret
int3
lret
jecxz
ja
fsub
adc
mov
push
adc
and
mov
rcll
and
in
sub
outsl
inc
push
cmp
push
mov
adc
adc
outsb
popa
xchg
inc
sarl
aam
movsl
push
insb
inc
xchg
cmp
xchg
mov
test
jnp
xchg
flds
movb
insl
mov
cmp
ret
jp
sbb
push
out
and
fcmovu
mov
dec
mov
popa
dec
adc
les
add
or
and
push
mov
out
call
iret
iret
jmp
call
into
int3
mov
pusha
xor
cli
arpl
out
inc
push
rcll
cwtl
lahf
inc
in
mov
push
push
lock
cwtl
xor
ret
fs
jnp
jge
imul
icebp
pusha
xchg
hlt
or
sbb
das
stos
ljmp
jne
imul
hlt
or
fcmovnbe
imul
hlt
or
sub
mov
push
and
fmuls
imul
xchg
lret
decl
mov
xor
test
jo
movsl
mov
inc
sub
inc
insl
test
leave
imul
sbb
rep
lods
cmp
jp
sbb
xchg
insl
iret
sub
fdivr
nop
call
sub
xor
loopne
pusha
sbb
iret
mov
test
fcmovu
cli
cmp
stc
out
adc
psrlw
adc
orb
stc
jne
jnp
mov
inc
lea
popa
cmp
push
push
fists
push
testb
mov
decl
fidivl
popa
xchg
sbb
imul
cmp
call
clc
scas
dec
inc
dec
and
rcrb
dec
mov
rorb
adc
das
dec
scas
je
xchg
test
adc
lds
dec
mov
test
mov
mulb
imul
mov
xchg
and
xchg
negl
sub
imul
add
and
cmp
jnp
mov
in
imul
std
inc
lret
lcall
pusha
insl
mov
cmp
cli
addr16
das
stc
jae
rcll
inc
mov
dec
add
je
mov
sbb
hlt
addr16
and
xor
and
mov
icebp
and
jae
mov
mov
xorb
popl
fcoml
in
adc
add
fcomp
mov
and
cli
out
lock
and
incl
fildll
popl
pop
sahf
in
adc
mov
movb
xchg
dec
stos
popl
jns
insb
adc
stos
loopne
popl
push
sub
popw
push
cmpb
mov
and
jnp
adc
imul
pop
cmpsl
lret
mov
ret
push
sbb
divb
mov
std
mov
sub
sahf
cltd
fistpll
mov
out
stos
xor
adc
lods
call
imul
shlb
call
fcoms
loopne
hlt
sub
inc
aad
xchg
cmp
mov
dec
notb
add
add
ret
inc
dec
jo
pusha
xchg
add
pop
test
rclb
push
adc
mov
lods
pop
jno
and
ljmp
aas
mov
ss
push
aaa
dec
or
fwait
adc
enter
pop
add
std
test
jp
ss
push
pop
add
push
mov
jp
ljmp
adc
notb
scas
jecxz
in
adc
mov
inc
mov
popa
out
sti
sub
ret
fs
out
push
fisttpll
cmp
shll
and
cmp
jmp
jge
cmp
test
and
pop
imul
outsb
and
icebp
fldt
mov
dec
fcoms
jl
sub
inc
pop
xchg
cwtl
cmp
lret
cmp
dec
imul
hlt
or
dec
or
dec
mov
inc
lods
popf
enter
or
xchg
dec
hlt
adc
add
sub
mov
popa
cmp
sub
ret
jle
and
iret
and
int3
mov
push
mov
mov
jo
test
dec
mov
hlt
or
fsubl
dec
mov
push
addr16
jg
and
pusha
rclb
add
daa
dec
and
and
shl
hlt
push
adc
mov
outsb
jl
and
ljmp
add
dec
jb
fiaddl
mov
push
cmp
shll
sbb
and
stos
xchg
push
hlt
or
outsl
jo
adc
fsubr
jnp
shl
inc
fisttpll
mov
popa
int
push
push
ret
push
cmp
jno
and
push
jmp
xchg
daa
mov
popa
fists
je
pop
jnp
push
mov
xor
dec
pop
mov
and
add
inc
dec
push
mov
xchg
rcr
call
shll
rcll
adc
daa
or
jl
adc
in
in
cmp
out
jno
sub
adc
jo
in
ret
inc
fadds
daa
sub
inc
cmpsl
fbld
ret
cli
cmp
and
and
cmp
in
and
cmp
movsb
mov
mov
mov
nop
mov
hlt
adc
sub
inc
inc
mov
add
add
ret
dec
test
test
test
add
orl
and
inc
ror
pop
add
inc
dec
dec
and
add
add
mov
inc
stos
test
test
inc
push
ficoms
lcall
fisubl
sub
fisubs
push
sbb
add
lahf
cmp
push
add
add
mov
rcrl
pop
sbb
aam
call
inc
mov
inc
mov
test
bound
jnp
insl
mov
or
cmp
fcom
stc
in
lcall
int3
mov
and
pop
xor
cmp
shll
cmp
andl
inc
out
sub
out
and
rorl
and
pushf
divl
neg
or
popa
push
fidivl
pop
in
mov
pop
or
cli
pusha
stos
mov
adc
fidivrl
add
xchg
cltd
sarb
sbb
add
roll
sub
sbb
push
out
cmp
lahf
aam
jl
sbb
cmp
jb
hlt
mov
and
jno
and
popa
jmp
fimull
popa
cmp
push
mov
dec
pop
jb
orl
mov
imul
xchg
sub
and
add
cmpsb
das
fldt
loop
or
xchg
cmp
or
push
pop
hlt
xchg
push
or
in
hlt
mov
mov
jno
call
insb
jmp
mov
jnp
cmp
mov
sbb
and
jnp
add
sbb
add
adcl
xchg
jge
repnz
cmp
int
imul
rcl
push
mov
inc
test
orb
fnstsw
mov
test
xor
cmp
or
xchg
adc
mov
fsubl
rorl
in
pop
mov
push
add
or
adc
pop
xchg
jo
pop
repnz
add
cmp
fsubl
cmp
jnp
lret
and
scas
adc
call
mov
loopne
insl
adc
cmp
sbb
mov
mov
and
sbb
lcall
inc
and
adcl
cmpsb
jo
addr16
addl
cmpsb
or
jmp
push
mov
sbb
call
mov
fidivrl
jl
sbb
inc
inc
sarl
ss
cmp
cltd
mov
add
jnp
cld
jp
ss
adc
rcll
fs
stc
ss
adc
sarb
call
movb
mov
xchg
sti
mov
inc
xchg
mov
pusha
mov
inc
push
xchg
pusha
jnp
add
inc
movb
mov
dec
sbb
fstpl
andl
push
sahf
cltd
cmc
mov
cmp
std
sbbl
sbb
rcrl
out
cld
xlat
fnstsw
in
imull
out
hlt
outsl
mov
xor
test
jp
cmp
icebp
jnp
ficompl
mov
sbb
fisubs
push
sbb
sub
and
mov
cld
cltd
jp
lret
mov
in
add
rcrb
cltd
fimull
sub
sbb
inc
xchg
jmp
in
pusha
fldenv
and
js
cli
pusha
cltd
mov
in
std
xchg
sub
popa
loop
lods
push
ret
mov
sbb
outsb
push
out
adc
enter
jnp
mov
mov
call
dec
cmpsb
dec
cli
iret
push
cmp
xchg
ljmp
xor
clc
hlt
in
loope
ds
test
lret
inc
jae
pop
cwtl
adc
adcb
add
mov
pop
mov
pop
cmp
sbb
fistpll
fsubs
nop
hlt
or
movsb
repnz
imul
hlt
or
add
das
arpl
cld
adc
or
in
pop
imul
hlt
or
sub
imul
hlt
or
cmp
imul
hlt
or
das
iret
pop
or
hlt
or
xchg
imul
hlt
or
mov
xlat
imul
push
and
leave
jbe
faddp
ret
sbb
dec
sarl
cmp
mov
add
xchg
idivb
dec
sbb
or
mov
xchg
mov
hlt
enter
popl
mov
push
adc
ret
cmp
push
imul
hlt
or
or
imul
hlt
or
out
daa
xchg
imul
fdivrl
out
xor
test
sarb
pusha
adc
inc
push
std
jp
cltd
adc
dec
sub
add
pusha
xchg
jp
jno
mov
insl
notb
scas
jb
in
mov
mov
lcall
fcomps
lahf
inc
mov
xchg
xchg
mov
rorl
mov
xchg
cwtl
lcall
jecxz
hlt
imul
mov
mov
mov
sub
mov
fidivl
mov
pop
es
arpl
and
cmp
xor
xor
je
add
repz
out
mov
ja
add
mov
inc
xchg
and
lods
jae
fstl
inc
rclb
aad
mov
leave
push
repnz
fnsave
xchg
mov
inc
xchg
dec
les
ret
push
inc
call
mov
rorl
out
push
xor
xchg
mov
and
repz
xchg
cwtl
sbb
dec
shll
mov
lods
add
jmp
test
loopne
jnp
js
mov
jno
and
inc
jnp
jb
inc
sti
js
outsl
cmp
adc
or
add
popa
push
jno
cltd
addr16
pop
int3
pop
add
jae
xor
cmpsb
clc
aaa
mov
sub
lret
icebp
jp
inc
or
dec
pop
add
ljmp
imul
inc
es
fwait
and
rcr
into
pusha
pushf
mov
nop
mov
outsl
cmp
pop
mov
into
mov
sbb
push
xor
divb
cmpsl
pop
incb
xchg
sbb
std
adc
xlat
push
andl
pop
lcall
jnp
out
inc
fcoms
inc
jl
ror
adc
adc
es
jnp
test
insl
imul
fstp
lret
popf
and
sahf
fdivs
pusha
out
mov
push
lea
and
adc
sbb
dec
js
ficompl
mov
lds
or
pushf
aas
mov
iret
mov
enter
enter
and
cmp
dec
mov
dec
hlt
adc
lret
leave
les
and
pop
add
mov
mov
idiv
idivl
and
ret
jae
mov
push
and
divl
sarb
and
fcmovb
mov
push
cld
popa
xchg
mov
push
pop
test
nop
mov
pop
or
add
notb
add
mov
cmp
inc
mov
add
push
pop
into
sub
mov
pop
jo
pusha
int
push
xchg
adc
in
xchg
std
sub
adc
sbb
mov
fldcw
lods
out
and
lcall
jb
sub
popa
cmp
push
pop
stc
inc
data16
pop
or
xchg
notb
jo
cli
in
cvtps2pd
inc
push
xchg
cmc
mov
xchg
xchg
mov
roll
insb
mov
adc
lods
cmpsl
iret
add
cmp
out
mov
xchg
imul
fsubr
in
cmp
inc
jns
push
ret
mov
jnp
pop
testb
test
push
outsl
lds
lahf
lret
mov
lahf
push
outsb
mov
ss
mov
hlt
xchg
push
iret
adc
sub
or
xchg
mov
or
pop
dec
hlt
xchg
sub
or
sbb
mov
xchg
jmp
or
lret
hlt
xchg
or
inc
ja
or
xchg
push
jns
mov
or
mov
mov
mov
jecxz
mov
mov
rorb
testl
adc
sub
daa
div
subb
pop
and
aaa
idivl
shrb
lock
jno
popl
cmc
mov
mov
outsb
hlt
or
shrb
das
mov
fsubrl
jl
imul
hlt
or
das
xchg
popf
jno
hlt
je
add
sub
sub
shrb
imul
inc
and
add
test
push
test
jmp
mov
fnsave
dec
dec
xchg
test
push
out
inc
sub
aam
or
xchg
push
cmp
adc
repnz
dec
push
rorl
out
dec
call
xchg
xchg
rorl
or
scas
sub
jae
and
aad
add
fnstsw
adc
mov
roll
shr
jbe
add
popa
test
and
mov
dec
mov
pusha
mov
inc
jp
pusha
sbb
xchg
test
out
and
inc
pusha
jp
cltd
cmp
cli
pop
add
in
add
add
pop
add
pop
pop
jp
add
push
inc
mov
test
add
or
mov
push
xor
out
mov
aam
popa
mov
cs
pop
mov
shlb
sub
notb
jbe
enter
xchg
faddl
sub
sbb
flds
sahf
push
out
test
add
js
loop
out
pop
mov
jp
mov
adc
mov
out
adc
in
xchg
cmp
push
inc
pop
cmp
jnp
adc
jge
lret
xor
dec
mov
mov
pop
fisttpll
cmp
lea
sub
popa
add
shl
mov
daa
in
push
mov
pop
and
mov
sbb
fdiv
std
mov
mov
xchg
popa
mov
cmp
and
jns
mov
push
loope
pop
mov
adc
lret
into
and
pusha
fbstp
sbb
int3
sbb
cmp
and
rorl
pop
ret
sub
pop
insl
push
and
popf
rorl
fnsave
test
arpl
jns
test
shrb
and
jns
std
fcmove
mov
xchg
out
popa
in
inc
mov
xchg
mov
pop
or
and
mov
ja
cld
fisubrl
in
push
clc
sbb
sarl
stos
inc
ljmp
popf
xchg
daa
in
sbb
dec
cli
sbb
pop
sub
and
bound
push
sarb
add
arpl
lods
and
movsb
rcrl
jbe
fsubr
dec
roll
sbb
jae
add
mov
jg
mov
cmpsb
std
daa
cmp
call
daa
leave
repz
rcll
cmc
lret
test
in
jno
outsb
dec
add
inc
dec
cmpsl
xor
xchg
fst
loopne
aas
test
popa
loop
ret
sub
inc
cs
outsl
add
mov
and
cmpsl
jnp
idivb
inc
in
sub
inc
loopne
aaa
cmp
jbe
inc
loope
cmpl
adc
and
clc
ss
fmul
and
xchg
out
popa
call
sbb
mov
inc
pusha
mov
inc
pop
xchg
sbb
test
ret
test
push
ret
iret
cmp
out
ja
or
adc
mov
mov
push
pop
dec
dec
mov
pop
or
mov
notb
xchg
pushf
xor
adc
inc
cmpsl
pop
sbb
pop
pop
test
ret
loopne
lcall
das
loope
and
xchg
mov
fst
or
leave
mulb
mov
lods
inc
jno
and
xor
popa
inc
pop
mov
ret
mov
pop
or
xlat
inc
notb
sub
hlt
mov
enter
inc
ficompl
sahf
adc
jns
idivb
adc
sub
inc
mov
dec
mov
ds
add
and
cmp
aas
mov
js
add
lea
fdiv
pop
or
dec
mov
adc
aad
jae
push
fadds
cmp
xchg
mov
or
in
mov
cli
aaa
fmuls
and
add
loope
mov
imul
adc
mov
stos
fcompl
adc
cld
mov
mov
push
sbb
push
mov
cmp
test
mov
hlt
imul
ret
jbe
pop
insb
fdiv
mov
sbb
lods
xor
sbb
add
mov
imul
ss
add
popl
sub
cmp
lret
mov
andl
sbbl
jnp
cli
push
cmpb
movsb
cmp
out
inc
imul
sarl
fimull
mov
and
icebp
push
pop
inc
insl
cmp
cmp
push
sbb
iret
inc
popa
cmp
push
sbb
sub
mov
mov
push
sbb
or
clc
dec
pushf
push
pop
stos
push
push
mov
pop
or
jno
sbb
mov
adc
and
test
les
jnp
das
push
xchg
testb
xchg
xor
xchg
jnp
jns
xchg
loope
test
add
jnp
leave
pop
shl
iret
mov
iret
ds
call
es
mov
call
iretw
sti
adc
xor
and
mov
repz
and
sbb
mov
popa
cwtl
push
icebp
push
pop
das
jmp
mov
pop
or
mov
notb
inc
mov
cld
imul
inc
xor
jnp
cli
stos
add
mov
adc
pop
jmp
das
inc
daa
cmpb
xor
out
mov
hlt
or
lret
sbb
js
jne
shr
bound
pop
dec
add
and
pop
rclb
dec
dec
popa
and
ror
add
fimull
popf
addr16
jno
mov
roll
add
jo
pop
cmp
in
add
cwtd
cmp
and
add
out
fnstcw
sbb
sbb
mov
in
push
add
sbb
xchg
xchg
jmp
je
push
xchg
push
les
scas
lahf
jp
out
repz
out
movsb
cwtl
fistpll
test
and
pop
jp
and
das
mov
into
rcll
fidivrs
jbe
fdivr
test
xlat
adc
mov
rorb
pop
mov
adc
push
mov
aas
hlt
or
das
loopne
adc
out
xchg
dec
add
movsl
inc
fucomi
inc
xchg
mov
mov
push
ret
xor
shl
das
add
inc
rcll
repz
in
inc
out
xor
cmp
pop
leave
mov
and
sbb
test
lret
cmp
push
sbb
scas
jnp
cmp
push
sbb
cmp
dec
cmp
adc
sbb
les
xor
xor
out
mov
icebp
in
cltd
gs
pusha
xchg
loope
aad
pusha
xchg
repnz
cmp
adc
pop
adc
push
mov
push
cmp
xchg
mov
xchg
cmp
jnp
push
and
imul
int
lret
clc
and
add
and
pusha
inc
mov
add
int3
scas
and
mov
hlt
lds
stos
and
jno
je
ficoml
mov
push
sbb
pop
cli
jmp
sbb
push
sbb
int
sub
xorl
mov
aas
imul
adc
pop
jle
mov
pop
or
addr16
scas
in
roll
mov
mov
mov
out
push
push
sbb
adc
pop
and
xchg
cmp
mov
loope
add
hlt
fdivs
hlt
popl
int
repz
adc
xor
add
dec
xchg
xor
je
add
and
movsl
push
pop
or
cltd
notb
sub
in
or
pop
mov
mov
test
out
push
push
iret
mov
lds
incb
mov
xchg
pop
popf
jbe
rorl
aaa
cmp
hlt
xchg
cmc
lock
shll
mov
fisubl
mov
testl
into
push
inc
mov
mov
pop
or
jo
idivb
cvtps2pi
adc
fsubl
and
rcr
ss
push
dec
mov
shlb
add
xchg
dec
push
push
and
xchg
ror
popl
rorl
out
and
add
cld
rcl
cmp
mov
rcll
adc
sub
fdivrs
fucom
push
pop
or
mov
pop
or
popa
notb
fstpl
and
stc
add
adc
jnp
insl
xchg
rolb
test
addr16
jno
je
test
xor
mov
xchg
mov
push
fstpl
fsubrp
test
push
insl
jge
fnsave
inc
sub
sbb
mov
testb
push
adc
pop
sarl
ret
mov
jnp
cltd
les
aaa
lret
enter
fnstcw
mov
sub
rcrb
add
ss
cmp
adc
add
sbb
cmp
push
sbb
xchg
iret
jmp
sub
xchg
sbb
stos
sbb
and
jmp
push
adc
fcmovbe
cmp
es
out
cmp
in
in
sub
inc
push
std
inc
xchg
xchg
pusha
sbb
test
add
jge
or
fdiv
mov
mov
jo
fisubrs
cmp
add
aas
notb
adc
pop
in
mov
pop
ss
ljmp
insb
test
outsl
push
sbb
test
jae
inc
iret
xor
shl
lret
xor
dec
push
cmp
repz
xchg
test
mov
fidivl
sbb
push
sarl
jo
scas
testb
add
call
fidivrl
adc
dec
cmp
scas
mov
lea
lret
mov
das
adc
cmpsl
ds
dec
hlt
adc
add
mov
lret
jne
sub
popa
mov
nop
leave
pop
cmp
out
push
sub
dec
hlt
xchg
cmp
sub
rorl
sbb
mov
xchg
and
or
dec
jns
hlt
xchg
clc
outsl
mov
pop
leave
or
xchg
rorl
icebp
rcll
mov
ja
popa
jbe
movsl
push
pop
stc
mov
mov
pop
or
dec
notb
iret
mov
in
addb
inc
fwait
aad
xchg
xchg
mov
jl
sbb
pop
jbe
add
lahf
pop
fcoml
jnp
or
negb
add
out
cmp
sbb
and
or
push
mul
pop
inc
cmp
inc
lret
mov
sbbb
push
pusha
pop
in
int
sub
inc
lret
jbe
in
popf
push
test
push
mov
je
fdivrs
inc
jo
xor
adc
push
insl
popl
inc
and
adc
negb
mov
adc
cmp
aad
sub
pusha
push
loop
sub
mov
mov
pop
or
mov
mov
je
rorb
and
push
mov
popf
mov
cmp
iret
mov
lods
inc
pop
sub
inc
inc
arpl
fmull
mov
mov
mov
repnz
mov
jp
dec
subl
outsb
jp
lret
out
push
test
fldt
xlat
jmp
push
out
jp
dec
test
sbb
adc
dec
cmpsb
cmp
pushf
push
icebp
cmp
jnp
dec
lea
push
xchg
pop
out
nopl
out
outsb
push
mov
mov
hlt
lds
inc
mov
iret
mov
enter
push
adc
cmpl
cmp
jnp
add
imul
jp
lret
test
clc
fadds
pusha
scas
mov
push
inc
cli
pop
movsb
inc
jecxz
push
aaa
jno
adc
jno
call
cmpsl
cmp
mov
inc
out
push
daa
pop
mov
daa
cmp
and
addr16
inc
arpl
pop
cmp
dec
daa
fidivrs
jnp
subl
pop
iret
data16
pusha
mov
fwait
xchg
cmpsl
sub
int
andl
adcl
jmp
dec
rcrl
out
les
out
or
imul
mov
dec
pop
outsl
stc
aam
jnp
cld
pop
aad
push
std
and
ret
inc
add
lds
mov
cmc
and
add
popf
clc
test
je
lods
inc
fnstsw
pusha
cmp
test
and
bnd
test
adc
add
mov
push
jno
and
mov
cli
loopne
popa
cltd
andl
mov
pop
add
push
mov
mov
iret
mov
jmp
cmpl
add
mov
in
and
mov
inc
xlat
and
das
mov
push
sarl
xor
loopne
push
xor
popa
popa
inc
push
pop
and
out
mov
or
inc
nop
notb
std
dec
push
in
pusha
add
dec
inc
das
cmc
inc
mov
test
inc
jmp
push
ret
sarb
pop
and
push
mov
jno
inc
add
inc
mov
inc
cmp
test
cmpl
mov
ret
cmp
add
xor
es
outsb
push
pop
push
cmp
mov
or
out
test
add
mov
icebp
xchg
fs
test
loop
sbb
ror
cld
inc
andl
adcl
imul
cmpsb
jbe
jnp
push
cmpl
inc
push
subb
outsl
jle
das
ljmp
ljmp
mov
jl
or
hlt
cmp
mov
jecxz
mov
ss
xchg
and
int
sbb
inc
mov
ljmp
inc
cmp
inc
push
mov
mov
sahf
push
loope
das
jb
hlt
or
mov
push
jg
hlt
adc
add
test
jl
clc
xchg
test
dec
pop
push
ret
adc
jno
and
nop
incl
jns
jnp
popa
outsl
xor
mov
pop
or
cwtl
in
addr16
outsl
add
pop
inc
outsb
mov
std
test
push
mov
inc
frstor
and
orb
test
stos
fisubrl
lret
call
mov
dec
out
and
shr
aas
fidivrl
popa
shrl
pop
fs
mov
pop
or
inc
jns
adc
xor
in
or
inc
ret
movb
or
add
jmp
inc
xchg
call
pop
ja
inc
addb
mov
cld
jns
push
and
jo
rcll
mov
mov
sti
inc
or
inc
test
sub
cmp
jnp
jl
sahf
imul
adc
jmp
xor
pusha
xor
cld
adc
or
in
dec
cmpsb
sbb
push
loop
testb
lods
mov
push
sbb
in
std
cmpl
pushf
fadds
jnp
ret
cmp
push
sbb
cmpsl
aad
cmp
push
sbb
jp
inc
cmp
push
sbb
pop
call
adc
mov
addr16
inc
mov
push
add
sbb
jmp
jmp
aad
cwtl
or
xor
xchg
add
shrb
fisubs
stos
fmuls
pushf
inc
mov
inc
loopne
and
mov
cs
in
je
sbb
xchg
scas
arpl
mov
and
pushf
cmpsl
insb
xchg
cmpsb
mov
andl
inc
aaa
cmp
mov
int
out
xor
dec
imul
fdivs
dec
xlat
lock
sbb
mov
lret
cld
test
test
jnp
adc
pushf
mul
cmp
sub
inc
sub
cmp
dec
sub
jne
out
pop
add
ss
sbb
iret
adc
push
fwait
call
iretw
dec
adc
fucomi
enter
cmpsb
iret
bound
jae
fsubrs
inc
sahf
cmp
cld
outsl
dec
flds
sbb
pop
dec
xchg
testb
push
fidivrl
jp
cltd
aaa
ret
pop
add
push
sbb
clc
outsl
pop
pop
add
cmpsb
and
jp
dec
jae
inc
pop
add
pusha
idivb
jp
outsb
and
adc
or
adcl
outsb
out
cld
out
cmpsl
cmp
outsl
leave
jp
addr16
mov
out
rcrl
lods
jns
stos
adc
mov
mov
and
stc
cmp
inc
cmpsl
clc
in
cmp
dec
and
sbb
inc
pop
xchg
in
jbe
movsb
pusha
pop
mov
andl
cmpl
pushf
and
jp
stos
mov
cmp
das
push
mov
cs
in
mov
negb
enter
cld
and
and
mov
pusha
pop
mov
ljmp
and
push
lea
sbbb
push
mov
xchg
xchg
xor
or
jg
mov
in
and
mov
ds
mov
inc
test
xchg
lea
push
cs
ret
ja
mov
pop
add
in
inc
jbe
inc
fwait
xchg
fld1
cmc
test
nop
test
test
aad
jnp
mov
and
in
xchg
mov
add
inc
jp
out
push
sahf
int
jp
outsl
clc
out
ss
adc
loop
inc
jbe
outsb
mov
fidivl
insl
add
mov
push
repz
pop
dec
lret
lods
mov
fdiv
or
cmp
mov
or
leave
notb
adc
enter
lods
mov
cmp
roll
ror
in
dec
mov
call
jne
adcb
sub
call
mov
es
xor
cmc
jne
and
call
fidivrl
mov
test
popa
das
rolb
and
lret
adc
jle
pusha
mov
cli
loop
mov
movsb
adc
xchg
test
loopne
rorl
clc
insl
cld
push
hlt
pop
in
mov
daa
xorl
imul
jp
jmp
adc
jns
fsubrs
push
cmp
and
push
sub
mov
add
xchg
lea
out
mov
xor
add
sub
jae
and
add
notb
mov
sbb
xchg
test
test
jne
adc
fcomi
call
lock
lock
push
push
sub
hlt
lret
mov
xchg
jae
sbb
xor
cld
adc
ds
cmp
sbb
mov
pop
inc
shrl
inc
xchg
mov
add
push
sbb
cmpsb
scas
scas
cmp
push
sbb
in
out
cmp
push
add
pop
das
pop
add
jg
xchg
jp
jg
lret
or
rcr
notb
fcoms
pop
in
or
and
inc
cld
xchg
xorl
popa
mov
lahf
push
iret
or
cld
testb
jg
decl
ret
popa
or
push
pop
out
mov
inc
mov
popa
push
or
add
cmp
icebp
jp
xchg
loope
dec
pop
add
fdiv
xor
pop
and
mov
jg
xchg
jno
mov
push
bound
es
cmp
bound
sahf
test
mov
arpl
das
sub
sarl
rolb
rclb
addr16
mov
push
nop
adc
ljmp
push
rclb
addr16
dec
mov
and
dec
ds
xchg
pop
pusha
arpl
cld
repnz
and
js
sbb
mov
movsl
inc
sbb
inc
frstor
loope
inc
out
jp
incl
mov
imul
rcrb
cmp
lds
mov
jbe
xchg
iret
je
pop
popf
das
jmp
mov
gs
jnp
mov
sub
lods
subb
or
mov
testb
rcrb
bound
fiaddl
popa
xor
cli
xor
pop
pop
xor
scas
ss
cmp
inc
or
clc
adc
mov
mov
lcall
pusha
dec
mov
cld
xor
or
test
dec
movsl
jnp
cmc
test
sub
inc
jbe
mov
pop
cmp
jnp
push
aam
imul
jp
push
in
lret
mov
and
or
dec
out
std
push
pop
dec
jp
inc
xor
repz
out
or
sbb
and
je
mov
frndint
popa
xor
pop
insb
lret
adc
lret
mov
and
fdivs
inc
sarb
sbb
repnz
shl
into
rcrl
add
insb
cmp
xchg
sbb
add
mov
imul
aas
test
insl
pop
pop
or
std
negb
push
add
inc
dec
mov
mov
andl
hlt
cltd
int3
cmp
mov
mov
dec
mov
dec
hlt
or
add
mov
in
pusha
pushf
mov
in
cmp
out
xchg
sarl
jp
les
popa
sub
push
pop
dec
push
sbb
pop
sbb
call
pop
xchg
andb
inc
mov
jo
mov
push
xorl
or
ror
movsl
adc
mov
inc
test
fisubrl
adc
testl
and
popl
mov
adc
adc
into
popl
or
mov
data16
cmp
sub
ljmp
cld
xchg
pop
and
or
addr16
jnp
mov
cltd
push
pop
dec
jmp
aad
push
sub
jbe
call
xchg
xchg
pusha
imul
inc
or
inc
push
xchg
mov
adc
pusha
test
and
sarb
out
and
decl
out
lods
popa
push
push
mov
pop
sub
lahf
dec
pop
cmp
xchg
adc
mov
cli
add
sub
test
rcll
mov
repnz
xchg
sbb
cmp
and
cltd
pop
scas
cmp
add
lret
jp
or
mov
jle
jp
xor
or
in
and
in
jno
dec
cli
scas
test
das
push
cmp
rcll
aam
sbb
gs
mov
test
pop
pop
pop
stos
xchg
fsubrs
inc
pusha
pop
mov
push
int
andl
addl
cmpsb
cwtl
pusha
pop
push
sub
cmpsb
push
inc
mov
push
cmpl
inc
push
sbb
mov
xchg
jno
and
fcmovbe
mov
push
popa
shll
mov
pop
int3
sub
cltd
or
daa
inc
hlt
or
das
aaa
sbb
hlt
or
lea
lds
clc
pushf
clc
ret
push
add
test
pushf
and
add
inc
dec
dec
mov
xchg
xor
cld
pop
jnp
or
testb
jmp
jmp
movsbl
shlb
inc
adc
jmp
jne
clc
add
addr16
inc
std
lds
les
ret
cmp
test
fstl
lret
shlb
cltd
fmuls
pusha
xor
cld
jb
or
dec
in
add
cmpsb
jecxz,pt
and
arpl
movsb
jp
or
ja
out
pop
shlb
jp
imul
mov
and
ds
imul
sbb
popa
add
test
popa
push
shl
pop
sbb
filds
adcl
cmp
ret
in
hlt
lds
andb
cmp
inc
mov
pop
cmp
ds
pop
cmp
mov
insb
hlt
cld
test
sub
sbb
out
inc
mov
fisubl
pushf
das
inc
popl
jne
add
shrl
push
cmp
shll
cmp
in
or
aaa
inc
pop
xor
and
daa
notb
push
mov
pop
push
or
outsb
fs
ret
mov
rorb
pop
jno
and
fidivl
mov
add
popa
dec
dec
cld
push
pop
std
adc
jge
sbbl
fstps
rorb
jp
ja
mov
pop
push
dec
mov
push
sarb
shr
add
jne
add
sub
and
outsb
pop
mov
jnp
sub
push
in
pushf
and
mov
in
push
mov
hlt
std
xchg
cmp
pop
adc
mov
popf
lock
adc
out
xchg
popl
or
call
pusha
arpl
or
daa
mov
pop
js
add
and
cmp
jnp
add
js
mov
push
sub
popa
or
call
cmp
out
cmp
in
rcll
subb
jmp
sub
flds
fstpl
pop
lods
mov
shrb
mov
vpermilps
call
mov
lret
scas
jp,pt
pop
xchg
pop
add
add
out
arpl
lret
xchg
les
adc
outsl
cmp
out
je
cmp
mov
mov
jecxz
lahf
sub
jp
push
pop
mov
sbb
cmpb
rolb
push
sbb
lock
addl
add
or
pop
lock
mov
or
movsl
cmp
in
mov
mov
dec
cmp
ss
dec
pushf
jp
orb
pop
add
or
and
pop
jae
mov
mov
adc
fsubr
jmp
iret
mov
sbb
fcom
sub
mov
mov
loopne
out
jno
mov
adc
and
repnz
and
negw
sarl
jmp
mov
inc
jl
inc
cs
ret
addr16
or
popl
cmp
xchg
jb
cld
cmp
jnp
jno
clc
imul
pop
xor
gs
arpl
ja
pusha
gs
jo
cld
aas
push
and
sbb
into
mov
test
daa
neg
or
popl
inc
cmpl
cmp
mov
mov
arpl
ja
mov
mov
in
xchg
xchg
push
add
add
and
fmuls
mov
iret
cld
xor
dec
add
test
push
inc
jns
loop
inc
push
sub
jae
test
xchg
and
push
inc
iret
int
imul
inc
add
push
iret
shlb
mov
les
jns
and
fildll
outsb
cld
rcll
jp
push
mov
or
sti
jl
adc
pop
imulb
ljmp
adc
ffree
in
push
add
cli
inc
dec
cmc
lods
and
out
or
adcb
pop
cmp
in
add
lahf
fdivrs
lret
movsl
sbb
or
fdiv
xchg
gs
sub
hlt
xchg
add
adc
mov
push
inc
dec
sub
inc
out
and
shll
lea
add
imul
lret
xchg
mov
clc
add
ret
adc
adc
jne
mov
pop
and
hlt
rol
ret
nop
popl
inc
mov
xor
push
dec
lcall
pop
mov
adc
jnp
rcl
imul
push
xchg
or
jne
popa
or
push
ret
aas
cmp
out
int3
addr16
adc
cwtl
in
sarb
inc
test
inc
jbe
enter
repnz
cmp
jnp
sub
shrb
jp
hlt
jmp
pop
cs
jp
sub
cmp
pop
add
xor
jp
popa
out
jmp
add
bound
xchg
outsb
imul
xchg
push
lret
and
pusha
shll
cld
cmc
or
and
and
sbb
int
push
notb
rorl
popf
cmc
hlt
mov
testl
inc
jge
xchg
push
adc
addr16
cmp
adc
inc
adc
jnp
pop
adc
ss
cmpsl
lret
jnp
mov
fdivrs
or
push
cld
mov
rorl
cmp
jnp
sub
fdiv
mov
mov
ficoml
push
jp
and
sub
pusha
out
adc
and
outsb
pop
adc
sub
cmp
out
ljmp
fmull
out
fcoms
je
fcmovu
loope
dec
cmp
insl
mov
loop
jnp
aad
in
imul
xor
jl
pusha
xchg
mov
xchg
jno
push
mov
out
xchg
mov
scas
addb
inc
movsb
xor
movsl
shl
sbb
cmp
testb
imul
mov
cmp
push
sbb
push
or
inc
push
xchg
push
sbb
cltd
cmp
cmp
push
add
aas
fsubrp
pop
add
fwait
adc
ss
scas
iret
mulb
fstpt
mov
mov
inc
movsb
and
loope
sbb
fistpll
testb
sbb
jmp
nop
clc
insl
fidivl
inc
mov
mov
and
les
mov
das
inc
inc
xor
inc
xor
fdivrl
jnp
and
sub
sbb
test
outsb
fwait
in
cmp
dec
rorl
fmuls
loopne
jp
rorl
insl
je
mov
xchg
xor
rorl
loope
push
jo
xchg
ja
push
dec
jle
cltd
mov
das
inc
jmp
adc
jecxz
pop
or
xor
call
test
sub
and
lahf
adc
mov
push
scas
jne
adc
in
test
loopne
mov
push
adc
push
hlt
das
jne
adc
sub
jo
mov
out
jne
adc
call
add
cwtl
sub
sub
dec
les
pop
or
inc
pop
notb
push
push
push
in
out
add
mov
call
subb
test
add
and
cmp
das
mov
sub
or
dec
gs
imul
hlt
or
leave
scas
imul
hlt
or
add
adc
inc
bound
imul
hlt
jg
ret
out
fnsave
xchg
push
test
into
call
and
mov
mov
fs
xchg
push
cli
sub
hlt
nop
test
and
aaa
in
frstor
jnp
test
rcrb
lods
fstl
int3
push
insl
mov
shrb
sub
dec
nop
test
adc
rcll
nop
xchg
popf
lcall
inc
mov
inc
mov
dec
mov
dec
cmp
or
or
gs
fcmove
mov
int3
cmp
mov
popa
repnz
mov
int3
lahf
pop
or
dec
sbb
adc
fsubr
push
add
hlt
inc
out
push
inc
xor
test
icebp
add
cli
jb
dec
andl
andl
test
addl
cmpsb
iret
jne
mov
sahf
sbb
add
mov
pop
sbb
std
mov
insl
inc
dec
sub
inc
push
dec
jae
ret
test
test
scas
mov
sub
imul
adc
lret
shll
pop
adc
stos
push
rorl
frstor
adc
xchg
dec
lret
sbb
inc
ficompl
add
add
ljmp
mov
adc
xlat
pop
in
cmpl
inc
test
inc
jae
dec
cmp
or
imul
add
repnz
movsl
lret
in
inc
neg
mov
cmpsb
in
dec
inc
xor
out
repnz
mov
andl
cmpl
cmpsb
dec
les
andl
test
out
jp
mov
lahf
jge
jno
and
jae
cmc
ret
add
dec
cmp
imul
das
or
test
out
fsubs
out
pusha
in
mov
mov
insb
and
mov
popl
jnp
xchg
push
push
imul
push
or
or
dec
inc
add
adc
dec
xlat
shlb
jnp
dec
fucompp
ret
sbb
or
sahf
or
mov
and
mov
outsb
sar
push
cmp
shlb
into
cmp
jnp
jl
or
cmpsl
mov
lret
adc
fadds
pusha
mov
cld
adc
movsl
daa
sub
test
pop
jb
or
dec
testb
pop
lcall
or
mov
sub
adc
mov
xchg
xchg
gs
daa
mov
lcall
mov
pop
xchg
push
pusha
cmpsl
mov
cld
jg
sbb
xchg
sbb
mov
push
mulb
inc
into
sub
inc
or
mov
jl
xchg
ljmp
ds
xor
dec
mov
adc
inc
mov
xor
xor
cmp
add
int
xchg
sti
sbb
add
cmp
out
lea
movsl
mov
fidivrs
pop
inc
cltd
sub
inc
in
daa
inc
popl
addr16
add
add
test
add
pop
lds
cmpb
mov
lret
fisubl
push
sub
mov
mov
notb
cld
stos
and
cmp
test
out
imulb
inc
jne
cmc
push
scas
fisubl
xchg
push
sbb
leave
mov
fidivrl
push
sbb
pushl
cmp
push
add
adc
iret
scas
adc
and
call
inc
imul
sbb
mov
ret
jne
adc
test
pop
mov
adc
inc
call
inc
jne
adc
faddl
cli
mov
adc
and
call
fisttpl
sbbl
sub
mov
pop
sbb
testb
push
int3
inc
mov
pusha
add
andl
cmpl
movsl
jp
call
das
lea
mov
adc
mov
push
fisubrs
lahf
dec
enter
out
shlb
lods
ja
inc
sbb
cmp
pusha
popa
mov
faddl
and
pushf
xchg
stos
add
mov
pop
test
pusha
sbb
insl
or
mov
inc
jno
and
mov
xor
loopne
sbb
add
dec
jo
jp
je
inc
sbb
lcall
fstpl
push
or
and
add
xor
fiaddl
popa
pop
int
push
ret
sub
jno
and
cwtl
mov
inc
outsb
dec
popa
fcoml
push
push
dec
mov
pusha
xchg
ljmp
mov
xchg
jg
cmpsb
xor
adc
subl
mov
jp
mov
pushl
adc
clc
call
mov
test
add
push
cmp
sub
inc
dec
jbe
cmp
in
add
push
sbb
cmp
inc
cmp
push
sbb
mov
add
adcl
mov
cli
ret
cmp
push
sbb
jbe
cmpl
push
sbb
cmp
jnp
xchg
push
loop
mov
and
pusha
insb
mov
xchg
cld
lods
cld
push
and
insl
sbb
cmp
and
add
lahf
pop
mov
xchg
fs
pop
cmp
mov
mov
hlt
xchg
stc
cmp
pusha
rcll
cli
and
call
push
pop
add
mov
pop
or
dec
add
adc
and
in
mov
iret
hlt
adc
das
fsubr
jbe
pop
arpl
iret
loopne
loope
pushf
call
loope
and
xchg
int
call
mov
mov
call
inc
iret
lds
xchg
mov
pop
into
push
fst
add
testb
inc
ljmp
cmp
dec
push
fistpl
pop
mov
xchg
push
push
lret
call
aaa
jnp
fbstp
pop
add
fcoml
and
cmp
inc
xor
inc
xchg
sti
mov
inc
xchg
xor
jae
xor
xchg
jnp
test
aas
jp
push
ret
inc
cmp
out
outsl
jge
rcll
arpl
xor
fmul
lahf
inc
shrl
mov
push
notb
fldcw
mov
mov
dec
lods
jp
andl
and
cmpsb
mov
push
sub
cmp
cmp
fcom
es
mov
inc
ja
pop
cmp
sti
sbbl
arpl
mov
adc
into
sbb
or
add
pop
add
xor
mov
ss
add
mov
out
loop
les
bound
adc
jp
in
jl
in
mov
aad
cmp
test
clc
jge
push
ret
sub
sbb
adc
out
rcll
adcl
icebp
jmp
shrl
cld
ja
cmp
out
js
cmp
pop
imul
hlt
or
loope
sbb
cmp
or
push
fsubrs
xchg
ljmp
rcrb
pop
hlt
adc
push
add
mov
lods
xchg
imul
in
ret
mov
sbb
ja
xor
call
push
jne
adc
pop
adc
testb
sti
shr
xor
jne
adc
stos
nop
call
xchg
jne
and
decl
stc
mov
mov
push
aas
pop
popf
in
aaa
jbe
test
add
and
imul
call
ss
xor
idivb
icebp
mov
mov
rorl
adc
loope
sub
inc
adc
cmp
cli
aaa
push
cmp
jnp
fnstsw
cld
cwtl
into
mov
add
ds
dec
sti
and
mov
aas
xchg
cld
rorb
aad
and
cmp
xchg
mov
pop
or
and
inc
cmp
rolb
sbb
or
mov
mov
notl
scas
popl
outsl
out
adc
jns
xor
hlt
mov
repz
mov
cmp
adc
add
sub
fwait
inc
enter
int3
test
jmp
loopne
ret
fidivrs
sbb
push
sbb
cmp
out
sbb
jo
mov
aaa
lock
sbb
aad
mov
dec
mov
add
sarl
out
push
shlb
rcll
nop
jge
lock
hlt
inc
sub
inc
jmp
cwtl
and
sti
jl
cmp
push
sbb
sub
out
cmp
push
sbb
stc
mov
pop
mov
push
sbb
mov
cmp
jnp
andl
inc
ret
xchg
fcoml
test
movsb
sbb
jnp
sbb
or
mov
idivl
lret
rcl
xor
and
idivl
shrb
mull
enter
rorl
scas
xor
addr16
popl
jmp
push
pop
push
push
mov
mov
or
pop
cmp
in
add
bound
mov
xchg
orl
rcrl
push
in
shl
and
mov
and
and
add
pop
out
out
or
or
jp
mov
popf
adc
adc
xlat
call
fmuls
inc
shrb
inc
jl
mov
ret
aas
cmp
in
push
add
push
inc
out
imul
rcr
sbb
cmp
repnz
mov
test
lods
scas
xor
add
push
jmp
in
out
jb
add
sub
cmp
mov
pop
jbe
bound
outsl
xchg
jbe
push
into
push
ljmp
lea
jns
inc
popf
sbb
fnstenv
inc
sbb
xchg
imul
pop
xchg
adc
sub
mov
add
lcall
jmp
add
insl
scas
shlb
mov
xchg
pop
mov
sbb
mov
xchg
scas
out
mov
lea
orl
js
leave
pushf
arpl
mov
call
jno
out
cmp
mov
cld
add
inc
pop
roll
ljmp
lret
popf
ss
cli
push
jecxz
ret
pop
and
nop
gs
cmp
xor
stos
lods
xor
fildll
xchg
popf
addr16
sub
mov
dec
mov
lods
test
mov
lods
cmpsl
jge
and
fwait
out
mov
subl
shlb
leave
jnp
daa
jns
loop
jge
xchg
add
inc
in
fs
dec
pop
jno
push
imul
lret
mov
iret
jns
pop
addl
inc
and
and
insl
cwtl
dec
add
xor
and
inc
cs
mov
popf
nop
mov
lods
daa
scas
pop
cmp
les
movsl
xchg
pushf
scas
mov
pop
or
out
inc
adc
lods
popl
sbb
sbbl
fidivs
not
dec
repz
daa
in
inc
jb
jmp
in
rcrb
lahf
les
inc
iret
dec
aad
outsb
test
cmp
andb
jp
rcr
iret
cmp
sbb
add
pop
xor
xor
or
and
jle
aas
sub
popf
sub
add
popa
sbb
sub
add
and
add
xchg
sub
je
bound
stos
push
shll
xchg
inc
push
pop
scas
jp
xchg
lods
arpl
ljmp
outsb
popf
xlat
iret
sti
push
or
xchg
push
sbb
jle
pop
bound
push
fisubl
dec
stos
sarb
dec
dec
and
mov
jbe
divb
sub
push
ss
or
movb
cmp
lcall
mov
nop
xor
dec
xchg
pusha
pop
iret
mov
int
mov
xchg
daa
cmpsb
pushl
fidivrs
fs
icebp
jae
aam
in
sahf
enter
daa
jmp
js
out
jge
add
xor
mov
sbb
mov
daa
aam
dec
jns
push
dec
adc
int3
sub
enter
shrb
rcll
cmp
cmp
adc
lods
in
leave
mov
add
mov
adc
sbb
xor
xchg
clc
movsl
add
daa
sbb
add
and
add
jg
add
shlb
gs
test
pop
fwait
jp
mov
xchg
jecxz
pusha
mov
xor
imul
nop
add
or
popf
fcmovbe
scas
popf
fdivr
sbb
add
inc
fdivrl
hlt
add
jno
and
sbb
mov
js
sahf
out
int3
dec
clc
fmull
add
mov
mov
aas
movsl
out
pop
out
inc
popf
pop
and
sub
dec
adc
inc
push
cmp
daa
sbb
push
sbb
fistpl
dec
jne
push
mulb
bound
add
pop
push
inc
addr16
dec
imul
and
jp
mov
or
xchg
cmp
and
popa
andl
mov
outsl
and
push
xor
dec
xor
inc
push
adc
add
sub
or
push
add
sub
sbb
push
dec
notl
aam
and
fcomp
mov
mov
add
subb
and
aad
icebp
rcrb
aad
in
gs
mov
repz
cwtl
add
shl
divl
xor
mov
lods
mov
popf
cmpsb
lret
lods
xchg
cmp
scas
cld
adc
inc
dec
aam
add
cmpsb
mov
cmpsb
das
pop
xor
outsb
inc
and
out
dec
or
jle
ret
mov
add
ljmp
das
jmp
push
cmp
and
add
fstps
pop
mov
or
aaa
pop
and
outsl
stos
insl
adc
push
add
mov
cmc
mov
adc
shll
movb
push
inc
and
push
jbe
out
push
add
lcall
adc
pop
dec
jecxz
sub
repnz
test
adc
xchg
adcb
xchg
mov
daa
cmpsl
and
jg
dec
xor
movsl
pop
mov
xchg
add
cltd
aas
jns
addr16
dec
xor
mov
add
cld
jae
loopne
sarb
xlat
adc
cmp
int
andb
nop
sub
hlt
enter
sub
testl
adc
inc
adc
dec
daa
je
jp
cmp
scas
int3
xchg
add
andb
sub
cmp
out
orb
add
xor
pop
xor
push
cmp
lcall
outsb
xchg
cli
stos
xchg
dec
inc
push
gs
shl
dec
rcrl
cmp
scas
lods
xor
jb
push
arpl
add
adc
daa
add
add
jmp
jecxz
inc
push
imul
loopne
popf
daa
or
add
mov
adc
mov
sub
push
jns
into
cmp
dec
adc
xor
outsl
sub
xlat
sbb
andl
dec
sti
das
dec
add
lret
lds
or
aam
mov
cmp
stos
outsb
cmp
popf
popa
or
dec
filds
mov
flds
inc
pop
fistpl
iret
stc
fnstenv
enter
aaa
jg
and
pop
das
mov
roll
mov
incb
pusha
cmpsl
lock
push
and
out
xchg
subl
outsl
xor
and
jl
in
movsb
push
add
cmp
push
and
insb
push
xor
inc
add
jno
shrb
xchg
faddp
inc
mulps
fisubl
cmpsb
test
cs
lret
pop
rorl
fs
lds
jb
ror
and
lock
inc
add
push
inc
imulb
sbb
sbbb
push
mov
cwtl
mov
lcall
pop
xor
mov
jne
pop
scas
add
add
mov
daa
dec
les
jbe
sbb
pop
and
movl
add
and
mov
divl
add
jne
lods
repz
aam
add
xchg
stc
push
push
frstor
cmp
or
inc
jg
daa
inc
sbb
mov
jne
adc
aam
test
xor
add
mov
or
fcmovnbe
ss
sub
enter
pop
cmpsb
aad
add
mov
scas
pop
jo
shll
fistpl
dec
push
inc
out
sbb
or
ror
test
xchg
push
jecxz
dec
mov
ljmp
icebp
mov
loop
add
imul
cltd
cmp
add
movsb
pop
push
sbb
mov
xorl
in
lods
mov
loop
add
or
jl
mov
xorl
popf
scas
mov
mov
jmp
and
inc
mov
and
inc
div
cmp
pop
add
jne
sbbb
push
pop
mov
or
and
jno
mov
xchg
cmp
in
mov
imull
sub
daa
add
mov
xor
popf
pop
xchg
push
inc
mov
adc
or
cmpsl
xor
xor
add
movsb
ja
sub
xor
out
popf
cmpsl
add
sub
ja
cltd
out
xor
in
sbb
arpl
and
or
ficoms
sbbb
pop
mov
out
xlat
or
insl
add
outsl
lods
leave
jne
inc
add
in
inc
push
mov
clc
pop
roll
xor
imul
out
mov
add
imul
nop
add
dec
xor
lods
adc
call
movsb
jns
xchg
cmpsl
add
mov
stos
push
daa
mov
out
rorb
leave
fcmovbe
sub
addr16
add
cmpsb
xor
dec
and
int3
pusha
inc
dec
out
sub
push
aam
popf
pop
xor
push
add
adc
decl
sbb
pop
and
or
jns
jbe
inc
mov
dec
lock
lods
add
or
adc
xchg
push
in
jle
xor
int
mov
ret
popf
xor
lds
incb
addb
and
xchg
mov
lds
inc
sbb
add
cmp
popl
andb
xor
jno
imul
fst
incb
jo
outsl
xor
jge
pop
add
xor
ss
enter
sbb
mov
test
lea
std
pop
aaa
pushf
inc
sahf
int
dec
and
cmpl
jnp
arpl
fsubrs
leave
rol
bound
aaa
fisttpll
dec
nop
adc
add
daa
and
int3
repz
sti
int
mov
cmp
cwtl
dec
call
popa
cmpsb
inc
add
stos
sahf
lock
push
jg
jge
lret
shlb
xor
pop
add
sub
imull
sti
test
rorb
add
pop
mov
dec
add
add
sbb
add
fstpl
mov
add
aas
out
nop
adc
arpl
daa
cmp
cmpl
jb
jl
jb
outsl
pop
jno
es
addr16
inc
push
std
pop
add
rcr
add
xchg
mov
mov
cmpsl
shld
cmpl
dec
sahf
int3
push
add
out
pop
mov
sbb
or
mov
movsb
or
stos
test
mov
andl
push
and
lock
xchg
popf
add
and
xor
popf
daa
jge
in
rorb
mov
and
popf
insb
into
pop
pusha
mov
xlat
fisubs
and
scas
jecxz
dec
mov
sti
push
inc
lods
mov
sbb
jmp
lahf
in
or
jne
mov
add
popf
push
idivb
pop
mov
add
mov
pop
add
subl
xchg
inc
mov
sbb
mov
out
sub
cmp
push
cmpsl
inc
mov
adc
or
arpl
adc
in
sbb
sahf
jle
addb
or
pusha
pop
rorb
pop
shll
push
cs
add
adc
loopne
in
push
outsl
std
xlat
mov
daa
daa
out
in
add
mov
mov
xor
inc
stc
or
jge
add
add
sbb
mov
fisubl
js
add
push
inc
sub
or
add
fistl
lock
push
mov
add
roll
mov
lahf
add
into
ss
xlat
jmp
cmp
out
out
push
dec
and
ljmp
daa
mov
mov
cmp
jge
in
loop
addr16
lods
xor
rorb
xor
add
jp
mov
in
mov
mov
adc
test
ja
add
sbb
sti
sub
push
add
fnstenv
sub
sub
subl
lods
loop
das
or
popf
xchg
adc
loop
cmp
inc
mov
xlat
mov
ja
in
add
lcall
push
cwtl
dec
icebp
adc
inc
xchg
popf
subl
mov
orb
lret
cmp
popa
dec
add
daa
subb
jg
pop
popf
daa
mov
mov
pop
pminub
xor
dec
xchg
fcmovne
stos
fst
les
aam
add
mov
int3
rcrl
movl
inc
inc
leave
push
inc
add
pop
cmp
add
cli
sarl
in
xor
imul
lds
and
mov
test
hlt
daa
push
testb
in
daa
or
xor
stos
xor
mov
mov
sahf
inc
leave
adc
mov
lods
and
sbbl
pop
xchg
or
jae
lahf
imulb
fcomps
inc
jno
dec
aaa
dec
stos
testl
jle
das
negl
dec
cwtl
push
imull
not
add
and
mov
out
or
sub
or
pop
jne
add
rclb
popa
sbb
repnz
add
lds
inc
aas
mov
pop
outsb
add
inc
rcll
cmp
lea
add
adc
iret
loopne
arpl
lret
mov
aaa
frstor
aam
idivl
cmpsb
mov
mov
mov
cld
jo
ds
sbb
stc
lcall
xchg
nop
popf
sbb
scas
rolb
add
repz
adc
sbb
addl
test
add
adc
in
cmp
loopne
cltd
popf
daa
aaa
pusha
rep
into
adc
jb
add
jmp
cli
or
jg
add
repnz
push
inc
mov
insb
roll
add
js
pop
rclb
cmc
mov
xchg
sbbb
add
mov
jge
lahf
and
add
stos
out
sbb
arpl
repnz
xor
in
jg
mov
mov
cmp
ret
mov
shl
into
js
cltd
in
or
iret
addr16
jae
les
test
fcmovne
ret
cmp
sbb
fsub
imul
ret
movsb
dec
daa
cmp
shl
add
or
out
mov
notb
mov
orb
xchg
stc
mov
std
cmp
jo
push
add
icebp
xchg
sub
test
and
mov
sahf
lock
add
add
mov
cmp
cwtl
cmpsl
dec
flds
ret
or
sbb
aaa
push
inc
std
and
and
cwtl
cli
jns
icebp
cmp
rolb
sti
imul
jae
addr16
out
xchg
aaa
jle
imul
addl
dec
cmc
jp
inc
mov
mov
cmpsb
shll
pop
sbb
push
push
dec
add
xorb
popf
sub
js
add
popf
aaa
inc
add
fnsave
aam
cmp
push
ljmp
je
lds
inc
movsb
addr16
test
inc
daa
or
stos
jp
fnstsw
data16
repnz
les
into
movsl
jno
mov
push
add
hlt
mov
call
fiadds
xor
or
jmp
fidivl
pop
sbbb
add
pop
sub
and
sbb
dec
cmp
xor
or
rcll
popf
pop
push
rcrb
scas
outsl
popf
call
inc
jae
adc
dec
jge
cmp
sub
jmp
orl
inc
cwtl
imulb
imul
popf
stos
dec
add
fisttps
xchg
push
mov
arpl
xor
xchg
sbb
cli
addb
inc
xchg
inc
test
adc
jnp
test
mov
sbb
push
pop
xor
xor
add
popl
jg
das
dec
or
fcoms
and
sarl
lahf
leave
fmul
je
lock
popf
fdivp
and
xchg
mov
push
dec
mov
aad
add
push
cli
mov
sub
daa
add
push
cmpsl
hlt
inc
adc
add
inc
pop
daa
aad
mov
rep
daa
mov
pop
push
loop
cmp
lods
pop
push
popf
cmp
mov
mov
sbb
cmpsl
add
mov
sbb
and
mov
mov
mov
cwtl
jo
mov
add
jno
gs
add
push
pop
daa
push
mov
add
sub
test
mov
mov
mov
push
add
arpl
repz
imul
imul
shrb
mov
pop
std
adc
gs
daa
mov
ja
add
clc
dec
add
movl
cmc
iret
popf
out
add
out
orl
orl
mov
dec
rorl
cli
fstpl
inc
jecxz
sti
pushf
lret
xor
out
call
adc
daa
fists
fimull
push
daa
lahf
shrb
dec
add
dec
and
sub
movsb
inc
jb
adc
mov
cld
pushf
add
pushf
repnz
insb
sub
add
enter
push
daa
jp
pop
push
dec
jbe
and
shrb
std
movsl
mov
imul
cltd
jnp
lock
test
add
roll
cmc
addb
jmp
add
leave
dec
popf
jg
cmpsl
fdivs
pop
mov
inc
popa
shll
xchg
popf
cltd
mov
or
xchg
cmp
push
orb
xlat
out
mov
loop
call
add
into
add
pop
je
jns
ret
fisttpll
push
sarb
loopne
imul
pushf
cwtl
sub
dec
rolb
pop
add
jl
out
xchg
jmp
pusha
leave
add
out
ror
cltd
cli
add
cmp
pop
ds
in
sub
pusha
push
flds
xor
and
hlt
cmp
out
inc
sub
xor
sub
xor
test
cltd
lret
xchg
testb
mov
push
cs
inc
adc
push
mov
xchg
add
sbb
rcrb
imul
jbe
pop
data16
mov
pop
daa
xchg
lds
dec
ljmp
inc
mov
mov
dec
lods
rorb
mov
int3
cwtl
push
mov
mov
xchg
insl
sahf
add
mov
cltd
cmpsb
pmulhw
mov
stos
lahf
scas
add
lea
or
outsb
cmp
sbb
ret
jae
inc
or
add
xchg
ror
out
sub
loope
sbb
and
je
pop
fcomp
cmp
add
add
daa
pop
cltd
lcall
adc
pop
jo
daa
fsubrs
mov
cmp
cmpsb
add
and
daa
movsl
pop
add
add
jg
xor
push
add
xchg
or
add
and
lret
cmp
adc
mov
outsl
test
int
push
subl
ljmp
xlat
data16
cmpsl
insl
and
and
inc
fwait
loopne
leave
daa
subl
add
jo
mov
pop
cmc
bound
or
mov
xchg
mov
daa
rcr
daa
sub
and
mov
arpl
pop
xchg
lods
lods
mov
ja
ret
pop
push
and
jecxz
les
add
fidivrl
mov
sar
mov
in
push
pop
lahf
xchg
mov
repnz
xlat
pop
push
add
fucom
add
cmc
out
push
inc
popa
add
adc
enter
jae
hlt
imulb
add
adc
sbb
inc
push
add
sarl
or
movsb
shll
adc
add
or
outsb
movsb
loop
xchg
push
adc
inc
daa
add
ret
lret
ret
mov
and
scas
cmp
adc
inc
loope
negl
or
insl
or
mov
outsl
dec
aam
loop
add
dec
in
mov
movsl
add
add
cs
add
loopne
xor
nop
jmp
shlb
lea
mov
mov
cmp
fiadds
push
out
inc
movsb
in
dec
call
fnstenv
add
ret
call
in
arpl
inc
xorl
out
mov
push
lcall
sarb
aas
out
out
sarl
popa
lret
pushf
fdivr
std
sbb
cmpsb
add
xchg
sbb
mov
mov
or
and
mov
jl
mov
sbb
add
xchg
sbb
andl
mov
mov
lcall
lcall
push
pusha
shufps
call
pop
std
daa
insb
mov
test
nop
or
cmp
outsb
mov
add
daa
or
jg
add
daa
mov
add
cmp
stc
pop
mov
adc
xchg
dec
ds
das
outsl
out
cmp
mov
out
and
pop
jbe
insl
daa
iret
decb
das
lea
xor
dec
not
sbb
insb
addl
mov
loop
xchg
clc
add
ret
xor
add
std
cmp
popf
xor
cmp
sub
pop
mov
aaa
stc
loope
sub
shl
xchg
fbld
mov
sahf
add
fldl
pushf
mov
pop
cmp
and
mov
xchg
add
popf
fstpt
or
data16
adc
out
mov
jecxz
pop
imul
enter
dec
pop
in
inc
aas
hlt
pop
jb
in
shr
mov
push
dec
add
fnstenv
mov
fiaddl
dec
push
lcall
adc
mov
fs
std
js
into
loope
add
daa
add
push
dec
rcrl
lea
add
popa
daa
or
lahf
arpl
add
mov
or
ds
push
daa
push
or
cmp
jmp
cli
add
fisubs
jae
pop
inc
cmc
cltd
in
sub
sbb
add
aaa
scas
cmp
xchg
daa
repnz
jp
jmp
jno
jns
sub
add
push
mov
rcl
mov
or
mov
pop
enter
pop
push
daa
cmp
popf
out
les
jmp
cmp
lods
inc
dec
inc
xor
push
mov
ljmp
ret
stos
add
hlt
mov
fwait
cwtl
lahf
inc
imul
jo
test
rclb
and
test
jo
add
fists
mov
mov
adc
inc
add
dec
sbb
mov
mov
es
mov
xorb
jo
add
add
push
shll
test
add
daa
out
popf
pop
data16
popa
and
inc
push
and
mov
add
lcall
jb
and
inc
cmp
push
add
shl
and
aam
sub
sbb
and
ss
aas
cmc
xor
shll
std
adcb
inc
sbb
inc
push
xchg
cmc
push
das
iret
pop
mov
rol
add
mov
inc
inc
pusha
add
jno
jne
int
rcrl
xchg
jg
loop
add
add
test
sbb
loopne
repnz
in
sbb
cltd
cmp
lods
mov
rclb
imul
jno
add
insl
scas
rol
dec
mov
lret
mov
popf
pop
mov
cmp
mov
daa
push
jno
sbb
ss
push
mov
repnz
shlb
inc
sub
outsl
mov
and
mov
or
sbb
popf
daa
jg
jp
lock
cmp
sbb
pushl
enter
sbb
das
pop
js
sub
int3
imul
outsb
loopne
add
in
mov
xor
andl
add
loopne
jnp
repnz
daa
pop
sub
xchg
sub
dec
icebp
add
cmp
cmpsl
js
xchg
icebp
rcll
xchg
add
xor
dec
xchg
int3
popf
jp
adc
jnp
lahf
push
add
cmp
cmp
movb
inc
jno
sub
out
sub
sub
daa
inc
mov
and
test
cmp
add
and
sbb
cli
pop
subb
inc
xchg
pop
add
lea
addr16
ret
aaa
push
push
cmp
xchg
add
xor
add
insl
add
fwait
adc
cmp
add
lahf
add
xchg
cli
testl
adc
mov
ljmp
fwait
xorb
fmull
ljmp
inc
add
mov
loope
stos
insb
jp
repnz
pop
sub
push
mov
test
jbe
cld
nop
fsts
jmp
sub
data16
inc
sub
lcall
lahf
mov
adc
jg
jp
and
push
sbb
or
roll
push
jecxz
pop
lock
sub
lods
or
shrb
popf
cwtl
push
sbb
jb
sub
daa
adc
dec
mov
sbb
add
or
xor
popf
cld
sarb
xchg
ret
out
scas
add
cmpsl
add
xchg
xor
ror
xchg
andl
or
pop
dec
sbb
cmp
cs
adc
ficomps
pop
push
mov
test
mov
jp
popf
jmp
out
inc
add
in
idivl
mov
push
fbstp
dec
mov
push
ret
loopne
adc
std
andb
in
test
repnz
push
lea
aam
loope
ret
push
call
mov
daa
addr16
daa
fildl
dec
sbb
jns
pop
mov
repnz
cmp
pop
mov
aam
cmc
inc
aaa
pop
mov
cmp
pop
mov
jne
add
xor
lahf
xor
jnp
pop
and
in
mov
es
mov
jo
iret
add
jmp
rorb
dec
cmpb
dec
add
mov
inc
lea
insl
popf
cmp
popf
jle
push
daa
popf
cmp
inc
xor
adc
and
fisttpl
popf
xchg
and
imul
add
jno
add
imul
clc
push
add
lea
push
daa
or
sbb
inc
dec
inc
jae
and
xchg
stos
push
fadds
jo
add
adc
repz
inc
stos
mov
mov
out
js
jp
ja
jg
cli
jbe
int
inc
push
dec
mov
std
xorb
outsb
cs
xor
inc
lcall
cs
pop
and
mov
cld
add
add
push
clc
sbb
push
jg
jl
insl
dec
jnp
lods
jae
add
jns
push
daa
lret
lahf
xchg
gs
pop
addb
cwtl
add
je
pop
adc
hlt
jl
cmp
out
sbbb
jecxz
mov
ljmp
dec
add
sub
add
daa
sbb
es
popf
and
loope
mov
mov
sbb
loop
ds
pop
add
mov
inc
xchg
aam
add
cmp
push
push
push
fs
push
pop
cli
mov
fcompl
mov
add
sbb
popf
cmp
add
dec
adc
daa
or
push
mov
mov
inc
cmovae
xor
lahf
xor
push
mov
inc
add
imul
daa
clc
jns
ret
sbb
xlat
xchg
out
dec
xor
mov
aaa
jns
call
and
in
js
jnp
es
outsb
jnp
sbb
jo
hlt
add
push
pop
add
cmp
add
pushf
popf
pop
cmc
daa
sub
movsl
dec
jmp
bound
movsb
imul
push
cli
rorb
mov
push
lock
popa
daa
cmp
sbb
inc
pop
inc
cmp
adc
stos
push
xor
mov
add
mov
or
xor
xchg
sahf
cmc
or
aad
js
jo
movl
add
pop
inc
mov
add
test
push
mov
pop
sub
jge
adc
mov
std
mov
sbb
das
movsb
adc
subl
std
xchg
stos
xor
cmc
ret
cwtl
aaa
call
shr
add
lds
push
fnstsw
dec
add
pop
nop
cltd
and
mov
daa
push
cmpsl
mov
inc
ret
sub
jo
nop
out
dec
adc
inc
in
mov
xor
les
insl
add
hlt
sbb
jg
inc
cltd
xor
std
sbb
insl
push
stos
add
lock
nop
popf
movsb
in
testb
test
inc
add
inc
cmp
in
cmp
mov
add
inc
push
cmp
mov
push
dec
addl
sbb
or
insb
jb
jecxz
mov
lcall
sub
xchg
icebp
dec
jno
lock
add
das
mov
call
jg
xlat
popf
xchg
mov
enter
cli
mov
loope
add
inc
imul
add
mov
lahf
adc
and
lods
jg
add
iret
stos
nop
push
sub
mov
daa
lods
mov
xchg
mov
outsl
push
jnp
jbe
mov
jmp
lods
cmp
mov
mov
add
mov
push
inc
daa
add
sub
roll
mov
into
scas
lret
ffreep
jns
add
inc
jne
rorb
cmp
pop
lcall
mov
scas
lods
sbb
daa
inc
lahf
jg
movsl
icebp
cmp
insl
add
mov
ror
rcrl
adc
in
push
popa
add
mov
and
imul
cmpsb
inc
out
fdivr
cmp
inc
dec
inc
movsl
popf
std
adc
scas
xchg
and
gs
outsl
adc
xchg
inc
mov
push
dec
adc
sbb
je
cwtl
scas
dec
sbb
test
mov
pushl
daa
psrld
sbb
daa
js
jns
pop
sbb
add
mov
adc
cltd
and
lcall
cs
subl
jb
rolb
mov
sub
cmp
gs
jo
jmp
shl
cmc
mov
test
xchg
sarl
sub
mov
mov
cmpsl
les
pop
stos
enter
add
or
js
push
mov
cmp
mov
sub
and
scas
or
mov
mov
rclb
and
xchg
aas
roll
push
mov
cvtpi2ps
pop
out
fldl
xor
lcall
add
imul
cmp
xor
add
push
adcl
les
xlat
addb
xor
out
adc
xorl
xlat
xchg
shr
push
popf
adc
sti
pop
sbb
jnp
add
dec
sub
adcb
test
daa
call
aad
movsl
jl
popf
mov
dec
cltd
and
gs
xor
add
dec
add
sti
daa
js
push
fidivs
aad
sbb
es
jns
or
lea
pusha
pop
xor
jnp
mov
fadds
xchg
jmp
sub
std
adc
getsec
fnsave
push
push
dec
sbb
sbb
popa
sub
daa
mov
enter
insl
outsl
or
inc
hlt
cmp
into
add
push
mov
cs
xchg
and
jge
nop
sti
mov
xor
pop
push
add
sbb
in
movsb
xchg
inc
aam
mov
mov
je
mov
jmp
add
or
mov
cmp
insl
and
pop
add
xchg
sub
jns
es
ret
mov
mov
outsb
fistpll
testb
push
shll
adcb
jno
and
in
dec
lds
push
add
lret
push
aaa
fcoml
add
daa
leave
xchg
neg
adc
mov
mov
pop
cwtl
mov
and
outsl
cmp
inc
ds
arpl
xor
mov
popf
jns
sub
daa
jg
fs
or
icebp
pushf
add
mov
in
cmp
push
mov
sti
mov
bound
lock
sti
dec
mov
fstps
shrl
mov
xchg
add
push
and
mov
in
rcrl
cmp
imul
pop
js
daa
or
or
filds
push
add
stos
lock
fdivs
popf
pop
ljmp
shll
push
dec
mov
mov
iret
cmp
shl
xchg
add
mov
xor
lret
popf
adc
ljmp
test
add
cmp
daa
es
pop
mov
imul
cmpsb
outsb
sbb
jns
sub
sbb
sahf
adc
push
cld
mov
inc
pop
push
out
enter
test
das
pushf
xchg
hlt
sub
int3
xchg
fstpt
push
mov
add
mov
inc
popf
cmp
sbb
test
inc
daa
push
je
call
and
and
xchg
pop
mov
add
fdivrs
push
inc
call
or
pushf
pop
cmpsl
test
daa
and
dec
lock
scas
mov
xchg
imul
add
and
jns
out
add
push
push
inc
jg
pop
adc
leave
ficomps
rcrb
sbb
adc
and
mov
sub
outsl
lcall
mov
or
and
shlb
push
imul
xor
or
xchg
jecxz
cld
jns
jge
insb
cmp
mov
daa
cmpsb
pop
inc
adc
sbb
pop
cmovp
pop
outsl
jge
pushf
inc
int3
es
or
pop
aad
inc
into
popf
xchg
or
jmp
push
rorl
jbe
daa
cmpsl
aaa
push
les
popf
test
test
testb
cmp
repnz
shll
out
and
xchg
and
dec
mov
mov
mov
popa
imul
pushf
mov
push
push
dec
add
add
xlat
jae
bound
addr16
andl
add
aas
xor
mov
or
dec
loope
daa
push
sub
popf
sbb
cmp
mov
sti
test
push
mov
out
xchg
dec
orb
sub
cmpsb
loopne
and
mov
push
push
mov
bndldx
into
imul
mov
pusha
rolb
fdivrp
lret
jg
xchg
and
cmp
mov
adc
ficoml
sbb
jecxz
movsb
cmp
add
push
jae
clc
ret
fucom
je
mov
cmc
cs
lea
xchg
lods
pop
inc
xchg
aas
andl
popf
mov
jecxz
ss
shlb
fldenv
xchg
cmp
mov
or
sbbl
push
dec
lcall
icebp
daa
sub
shll
mov
imul
icebp
xor
cmpsl
add
mov
mov
adc
push
pop
ss
mov
sub
cs
aaa
pop
hlt
cmpsl
popa
test
pop
add
sahf
call
popf
mov
gs
js
test
xrelease
daa
xlat
in
mov
jnp
xchg
iret
cmp
es
mov
xorl
add
rorb
popf
or
mov
mov
shlb
adc
lods
adc
xchg
and
pop
dec
mov
popf
lahf
stc
and
xchg
sahf
mov
push
jns
sbb
push
cmpsl
sti
xor
leave
sub
push
aad
mov
fdivl
sbb
fnsave
jne
jne
pop
add
or
push
jge
jl
cmp
and
pop
packssdw
lock
daa
sbbb
sub
lahf
fldt
cmpl
mov
and
adc
nop
add
pop
imul
out
add
pop
mov
or
data16
push
or
scas
cmpsb
adc
jp
ds
cld
cmpsl
scas
dec
mov
rol
dec
daa
or
stos
int
sbb
lahf
ret
mov
jo
jge
or
and
add
xchg
outsb
mov
pop
add
add
ss
dec
clc
sti
cmp
inc
jo
daa
cmp
rcl
ja
inc
add
icebp
mov
adc
js
imul
cmc
popf
popf
jecxz
outsb
and
pop
add
mov
dec
add
xor
ja
push
out
push
jecxz
lret
add
call
in
addr16
lahf
jge
add
rolb
out
add
mov
in
popf
jge
insl
in
out
pop
xorl
adcl
push
push
ret
popf
gs
adc
daa
stos
pop
fmulp
jb
mov
clc
xchg
in
pop
lahf
into
sbb
add
test
sub
iret
add
or
daa
xchg
cmpsb
call
dec
add
stos
in
fisttpl
and
mov
lods
add
mov
and
stos
inc
movsb
mov
sbb
fcmovnu
and
dec
idivb
sub
pop
lret
imul
xchg
inc
pushf
insb
push
inc
cs
xchg
lock
aaa
out
or
and
mov
push
cmpsl
neg
xchg
pop
and
adc
icebp
lcall
repz
mov
cmpsb
popf
jge
lret
shrl
rorl
loope
sub
mov
and
cmp
mov
daa
sub
jecxz
jl
out
cmpsl
and
add
and
xchg
popf
popf
add
jl
jae
fldenv
lods
fwait
rcrb
dec
addr16
adc
es
jb
arpl
push
popf
cmc
aas
mov
cmp
imul
lock
lock
add
loopne
add
lahf
stos
add
ljmp
inc
or
mov
roll
mov
add
sti
xchg
pushf
pop
rolb
out
inc
daa
mov
xchg
or
mov
fucom
adc
cmc
sbb
mov
test
jg
icebp
mov
and
inc
and
mov
hlt
and
stos
out
pushf
leave
pop
mov
out
pop
cwtl
test
pop
fstps
je
sub
inc
adc
mov
jl
nop
add
arpl
negb
popf
dec
daa
cld
das
loopne
leave
outsl
daa
sarb
pop
or
call
ljmp
lds
mov
fwait
cmp
pop
add
out
sahf
ret
shll
pushf
in
jge
daa
or
jae
cmp
das
cmc
xchg
or
inc
daa
les
in
add
or
lock
or
push
jbe
pop
out
icebp
add
xor
out
lds
xor
pop
xchg
mov
shlb
es
sub
dec
jl
clc
loopne
pop
jae
aam
add
adc
enter
cmp
bound
pop
dec
stos
out
scas
packuswb
push
push
sub
in
pop
daa
pop
sbb
mov
add
push
clc
pop
add
loopne
pop
daa
pop
ficoml
sub
pop
jno
popf
add
cltd
nop
jne
outsb
daa
in
fwait
jle
lret
add
xor
or
in
sbb
mov
or
pop
subb
scas
mov
nop
mov
jnp
je
popf
test
mov
lea
stc
and
ss
lcall
push
xchg
add
mov
and
jg
int
dec
and
data16
add
push
cmp
jp
lahf
push
insb
add
daa
mov
push
mov
add
sbb
add
sarl
lcall
or
cmp
aas
imul
xor
adc
js
in
sub
jp
sbb
or
add
pop
outsl
mov
mov
lahf
loopne
subb
fstpt
mov
daa
loop
mov
rclb
xchg
je
and
cmp
aam
xchg
add
jle
in
mov
mov
xor
arpl
movsl
add
mov
inc
jecxz
jg
add
mov
add
out
popf
mov
mov
sar
icebp
sbbl
std
bound
cmp
xchg
divl
sbb
push
popf
dec
test
mov
pop
stos
pop
push
add
push
movsl
rcrl
popf
ljmp
jle
inc
outsl
lock
mov
cmp
flds
repz
dec
mov
stc
outsl
mov
aad
mov
call
xchg
cld
aaa
mov
fmull
daa
aad
xor
lret
aam
xchg
bound
xor
inc
cmp
cmpsb
jl
andl
clc
push
stc
mov
cli
sbb
mov
add
cli
daa
divb
add
cmp
out
mov
mov
add
push
or
mov
add
jno
add
ljmp
mov
popa
scas
bound
sub
scas
dec
xor
mov
inc
mov
aas
jmp
mov
inc
popf
lret
shr
pop
and
mov
test
roll
add
add
add
test
fldl
push
ret
jno
daa
rcl
shll
mov
mull
or
pop
or
enter
imul
cmpsl
rolb
mov
fidivrs
out
add
xchg
imul
and
dec
cwtl
pushf
xlat
or
outsb
lock
xor
aad
lcall
pop
adc
pop
fs
sbb
aam
scas
pusha
add
mul
enter
sti
push
clc
pop
dec
add
test
add
jecxz
dec
daa
push
jbe
cmp
mov
adc
xchg
dec
aas
cwtl
pop
sti
pop
inc
dec
inc
add
aad
xor
rol
popf
add
xchg
add
sbb
xchg
sub
scas
call
sahf
inc
inc
mov
add
xor
inc
fiaddl
ss
push
mov
pop
inc
loop
je
dec
pushf
cmp
repz
mov
add
jns
mov
in
in
and
jb
in
pop
and
sbb
repnz
pushf
imul
rorl
fdivrl
lret
fiadds
aam
in
sbb
push
std
jmp
popf
fiaddl
pop
in
sbb
scas
xor
outsb
dec
push
sub
popl
mov
fildll
mov
or
mov
movsb
int3
xchg
psrlq
add
adc
and
mov
popf
inc
shrb
pop
flds
mov
lock
mov
aas
add
or
repz
or
mov
adc
lcall
adc
int
add
xchg
mov
into
xor
imul
mov
sub
add
add
xchg
pop
fcoms
pop
xor
sbb
pop
xchg
stos
outsb
stos
or
mov
or
cmp
leave
icebp
jae
das
cmc
icebp
xor
jg
push
inc
popf
dec
bound
std
es
sbb
adc
add
shl
fnstcw
lcall
xchg
xor
mov
fstl
inc
add
cmp
jecxz
popa
add
xor
inc
pop
add
jnp
orb
pop
add
dec
cmpsb
in
cmp
out
xchg
in
push
add
jae
mov
mov
xor
incb
fstps
and
mov
cmpb
daa
jp
jl
fidivrs
or
andb
add
rcrl
lods
mov
ret
xchg
mov
push
xlat
mov
faddp
pop
and
dec
sub
pop
cmp
fstps
popf
inc
lret
fsts
jae
adc
inc
adc
insl
mov
inc
add
add
xchg
sub
pop
std
push
dec
xor
sub
pop
xor
in
lock
adc
sub
inc
cmc
pushf
mov
stc
mov
dec
aas
xchg
push
cmpsl
shlb
sub
in
out
mov
jl
inc
mov
mov
xorb
push
dec
aaa
sub
imul
inc
xor
add
jg
loope
mov
add
sbb
rolb
jb
cltd
cli
out
cmp
mov
pop
dec
adc
popf
stos
push
ljmp
or
push
shrb
mov
adc
jns
dec
add
push
pop
mov
icebp
movsl
cltd
pop
and
dec
mul
rcrl
mov
popf
xor
stos
cmp
or
jge
xchg
flds
add
leave
outsb
fwait
jg
mov
add
pminsw
aad
push
or
mov
ds
fwait
aas
imul
movsb
push
aas
jne
jnp
mov
ret
rcrb
stc
leave
xor
xor
ds
cmpsb
adc
daa
icebp
or
popf
and
sarb
and
iret
inc
inc
mov
lret
xchg
push
sub
cmpsl
push
add
outsb
std
rcrl
minps
pop
add
cmpsb
mov
imul
jno
push
test
dec
test
add
ret
or
lods
cltd
rolb
scas
push
stos
dec
testl
push
sbb
dec
cltd
push
addr16
hlt
dec
popf
call
cmpsb
pop
leave
xchg
add
fstpt
stos
popf
lods
js
jno
fidivrs
daa
lahf
mov
push
in
stos
dec
add
mov
mov
jb
loope
or
hlt
popf
or
cmp
loopne
enter
adc
add
popa
pusha
pop
jmp
enter
test
leave
mov
imul
loope
cli
pop
add
outsl
test
mov
mov
mov
mov
xor
sub
into
pop
daa
bound
repnz
push
sub
mov
fmul
and
xchg
push
pop
daa
dec
sub
sti
or
int3
mov
aad
adc
cmp
icebp
add
cs
sbb
add
mov
in
or
cld
add
in
rolb
mov
sbb
xchg
pop
lods
jl
sub
pop
sbbl
es
lods
dec
repz
push
popf
dec
cld
dec
insb
ljmp
shll
pusha
test
dec
cwtl
jb
lods
dec
iret
inc
mov
and
jne
or
mov
cwtl
add
scas
xchg
cmp
mov
jp
inc
cmpsb
mov
cmc
or
lods
adcb
add
push
jns
sbb
adc
and
and
jnp
mov
pop
adc
pop
shl
lock
pop
aas
jecxz
cmpsl
adc
dec
in
add
adc
sub
movsl
add
push
out
sbb
insl
cs
int
mov
and
andb
sbb
das
inc
cmp
and
lahf
outsb
adc
push
add
inc
pop
shlb
and
pop
or
push
repnz
pop
out
ds
xchg
out
add
pop
add
lret
and
jbe
and
hlt
cld
daa
stos
sti
xchg
cwtl
inc
orb
int
aad
fucomi
mov
or
lret
adc
push
aad
add
fstp
faddl
aas
inc
add
mov
push
es
icebp
mov
jo
dec
daa
sub
sub
dec
cwtl
add
mov
lret
adc
hlt
int
std
das
loopne
xchg
pop
dec
inc
xor
insb
push
sub
add
jo
lret
add
popa
lock
mov
aam
cmpsb
mov
dec
mov
mov
mov
fs
push
mov
mov
pop
mulb
fcmovnb
mov
addb
out
pop
es
daa
add
adc
fwait
xor
stos
mov
aas
xor
xor
sbb
ja
mov
sub
mov
int3
idivl
inc
jns
dec
sbb
inc
mov
pop
aaa
xlat
jg
inc
add
or
sub
mov
cmc
xchg
popf
lret
push
sub
outsb
sahf
sbb
jb
xchg
sbb
hlt
inc
cld
cmp
shlb
jmp
mov
popf
dec
sub
mov
fldcw
daa
shll
and
lock
out
jp
fnstsw
adc
in
jmp
dec
add
or
sbb
push
sub
pop
mov
daa
mov
inc
add
fcmovne
in
jb
mov
xor
xor
sub
repz
cmp
sub
or
or
daa
cmc
push
push
cmp
in
lret
leave
jb
popf
aaa
add
cmpl
sub
cmp
add
out
out
les
scas
ljmp
repz
add
pop
xchg
ja
in
pop
jns
daa
push
lods
enter
adc
inc
xor
andl
into
mov
aas
sti
orl
leave
hlt
add
popf
inc
in
pop
ret
adc
call
pop
ljmp
mov
xor
mov
popf
dec
lds
mov
insb
and
adc
jmp
nop
sahf
adc
add
xor
aaa
sub
lods
mov
in
mov
pop
out
add
pop
and
iret
inc
jl
adc
movsb
add
subb
rcrb
sbb
popa
frstor
repz
mov
lds
rclb
aaa
daa
cmp
jno
imul
scas
leave
add
xor
ja
jecxz
xchg
and
arpl
jl
and
subb
mov
push
icebp
add
inc
adc
call
cmp
shlb
xchg
jno
cltd
stos
mov
test
out
shrl
lcall
cmp
cmp
and
add
ret
pop
adc
data16
xchg
popf
mov
pop
adc
add
inc
icebp
pushf
iret
mov
call
sub
test
daa
xlat
mov
cld
xchg
add
loopne
loopne
push
daa
cmpsl
pop
out
sbb
aaa
dec
sbb
mov
mov
add
and
sarb
sbb
sub
inc
loop
es
je
fcomp
mov
xchg
mov
sub
add
cmp
jmp
popf
mov
mov
hlt
and
stos
jge
addb
out
repnz
adc
cmpsl
js
mov
pop
xchg
add
and
fsubs
call
nop
sub
shl
inc
sub
xchg
mov
gs
add
xchg
movsb
add
and
int
stos
pop
outsl
aam
or
cs
imulb
shrl
scas
push
fwait
or
cmpl
fadd
pop
mov
test
cwtl
sbb
mov
lahf
sbbb
mov
jecxz
popa
popf
call
mov
movsb
daa
mov
das
dec
mov
sub
fstl
lret
adcb
jl
and
popf
xor
pushf
add
loop
in
xchg
adc
xchg
add
cmp
cmp
or
add
lds
pop
addr16
enter
add
cltd
mov
inc
je
lea
shld
out
lahf
arpl
test
call
popf
sub
scas
int
lea
sbb
lods
lret
add
nop
ds
test
data16
push
pop
out
jecxz
mov
rolb
add
mov
add
out
mov
fdivrl
loope
pushf
aas
lea
jb
dec
and
hlt
sti
jae
jo
push
or
jp
xchg
mov
add
mov
add
xchg
popf
loope
push
imul
lret
rcrb
pop
mov
cmpl
push
pop
jle
xchg
pop
inc
push
push
pushf
jae
daa
sbb
cld
push
inc
cmp
add
aad
cmc
divb
mov
out
decb
iret
daa
add
flds
xchg
cmp
pusha
popa
inc
push
popf
mov
popl
and
test
or
mov
js
adcl
inc
add
lods
inc
loopew
dec
cmpsb
cmp
push
xchg
xor
or
and
cs
dec
push
cmc
jne
adc
fwait
mov
in
call
dec
ficompl
sbb
loopne
xlat
pop
push
fidivrl
cmpb
xlat
add
mov
sbb
dec
sar
fs
mov
push
mov
or
xorb
xlat
mov
ss
or
aas
cmp
dec
filds
lret
push
and
test
mov
sbbl
daa
mov
int
xchg
add
dec
mov
decb
pop
inc
add
std
repz
std
add
divb
add
mov
sub
pop
inc
sub
sub
or
mov
into
inc
popf
pop
xchg
xchg
inc
xchg
call
out
inc
mov
in
mov
and
push
add
dec
cmp
popf
ret
mov
stc
add
std
addl
popf
add
aas
ljmp
mov
inc
adc
push
enter
cmpxchg
sbb
jle
and
fwait
movb
add
lret
in
pop
sbb
leave
pop
sti
add
daa
or
into
sub
add
rolb
lea
lret
iret
adc
mov
and
adc
mov
pop
sarl
add
add
outsl
inc
popf
aad
pop
push
roll
and
mov
jecxz
pop
fmulp
inc
stc
test
jecxz
cmp
add
mov
lret
mov
push
mov
mov
stc
popa
pop
lods
mov
mov
lcall
sbb
lods
or
dec
xchg
add
lahf
and
add
pop
jns
gs
xchg
popa
inc
jb
jecxz
pop
in
mov
cmpsb
sarb
pop
aam
dec
dec
mov
xchg
popf
jle
jle
mov
nop
push
daa
and
cmp
mov
mov
pop
dec
jno
mov
and
xchg
notl
sub
dec
sti
es
out
xlat
pop
je
push
adc
pop
enter
rorb
nop
sub
daa
and
add
popa
fcmovnu
or
sahf
push
data16
dec
cmp
inc
es
xchg
sub
mov
and
rep
ljmp
mov
loopne
mov
repz
outsb
sti
cmp
daa
mov
sti
add
add
mov
xchg
lds
jmp
push
rolb
xlat
fs
scas
stos
std
repnz
mov
pop
fwait
sub
leave
mov
sub
int3
mov
andl
cltd
pop
popf
ret
inc
or
fiaddl
jg
add
fstps
lds
setnp
cs
hlt
xchg
add
mov
imul
popf
in
sbb
inc
xchg
out
out
jge
push
add
repz
fildll
add
sub
pop
in
test
dec
aam
outsb
and
dec
stos
mov
xchg
popf
push
ds
mov
daa
inc
int
push
pop
and
fwait
xchg
hlt
fidivs
add
and
or
test
orb
push
in
cmpsb
add
subb
add
scas
cmpl
add
icebp
das
jno
cmp
push
popa
rcrb
ss
xor
test
inc
cli
js
inc
inc
cmpsb
or
pop
mov
popf
add
popf
lea
sbb
scas
ret
push
gs
jne
imul
int3
mov
and
aas
out
rclb
in
in
les
daa
adc
loop
pop
xor
inc
mov
mov
lock
lods
xchg
dec
cld
mov
mov
add
addl
mov
dec
popf
rcrl
xchg
sub
jo
aaa
xor
push
jg
xor
in
jge
lock
loop
sbb
mov
loope
push
cld
xor
jnp
insl
popf
clc
movsl
mov
jle
cmpb
add
mov
cwtl
mov
stos
cmpsb
imul
jmp
push
add
imull
cmpsb
push
jg
aad
add
xor
dec
jae
js
adc
ds
fistpl
daa
fcoml
sub
push
push
add
cmpsb
cld
sbb
loopne
push
popf
lds
test
daa
pushf
test
in
push
lock
sub
push
and
orb
add
or
cmp
js
mov
push
sub
xlat
cwtl
cmpsl
ss
dec
add
sarl
xchg
fists
or
pop
jp
dec
cmc
sbb
incw
jecxz
fmuls
xor
adc
mov
cmp
das
cmp
pop
add
pusha
imul
pop
push
sbb
mov
cmpsb
add
outsb
and
and
stos
mov
loopne
dec
js
add
adc
flds
and
inc
mov
popf
loopne,pt
cltd
xchg
shll
jmp
xchg
add
xor
rol
dec
bound
aam
lahf
mov
xchg
hlt
in
std
or
sbb
mov
sar
shll
adc
loope
mov
add
cmpsl
fstpt
sbb
mov
out
daa
adc
and
and
ljmp
lock
daa
mov
divl
loop
cmp
dec
loope
push
jge
and
mov
jnp
dec
sbb
insw
popa
pop
clc
add
sbb
add
addr16
and
cmp
rcrl
shlb
in
push
cmc
adc
add
icebp
ss
ljmp
pop
out
cld
pop
push
cmp
mov
sar
sub
jecxz
sub
inc
push
adc
mov
cmp
daa
mov
sti
adc
dec
mov
movsb
testl
out
daa
and
daa
insl
lret
or
push
lods
roll
adc
lret
movsb
cltd
cmp
add
sahf
das
insb
jb
lahf
add
aas
int3
fdivrl
daa
cmc
dec
arpl
cli
movsl
inc
xor
jo
hlt
xlat
bound
out
push
iret
cmp
pop
movsb
ja
add
xor
cmp
andb
out
push
and
jns
pushf
sti
test
mov
ds
stc
and
jbe
in
push
xor
sbb
mov
adc
int3
add
push
sbb
popf
push
cmp
loopne
fs
mov
hlt
jmp
dec
arpl
dec
btr
cwtl
cld
push
mov
rcll
sahf
dec
xor
pop
mov
add
inc
imul
inc
jae
movsl
cltd
mov
in
outsl
xor
dec
and
cmp
loopne
in
adc
shr
les
int
es
leave
xchg
add
arpl
jb
lret
sbb
xbegin
ret
sub
inc
xchg
inc
movsl
daa
dec
xchg
sub
lods
add
add
adc
adc
cmpsl
std
pop
popa
addl
orl
jo
repz
jno
jp
add
and
add
call
repz
fildl
xor
push
add
div
pusha
mov
fisttpl
cmp
adc
popf
ja
ret
clc
loope
stos
cmp
and
sbb
mov
inc
push
and
or
orl
dec
fmull
pop
xchg
adc
mov
mov
mov
int
add
sti
push
mov
dec
pop
xchg
or
mov
add
roll
iret
sti
xchg
mov
and
cmp
pop
push
cmp
popa
push
outsb
pop
out
sub
rorb
sbb
aas
nop
in
push
sub
in
aaa
daa
xchg
sub
mov
add
cmp
fildll
add
movsl
jo
aad
imulb
jne
popf
insl
xchg
mov
xor
add
pop
cmp
pop
jo
adc
repnz
sub
clc
jg
cmp
dec
push
fdiv
xor
cs
mul
push
popf
mov
movsb
sub
fs
or
jmp
enter
daa
jmp
lock
cmp
xor
dec
cld
daa
jge
inc
mov
into
mov
dec
push
outsb
daa
adc
daa
and
push
in
xacquire
sub
mov
fwait
dec
fldenv
hlt
lock
nop
xchg
popf
mov
icebp
xchg
stos
xorb
data16
adc
popf
aam
cmc
inc
stos
ja
adc
fisubs
das
add
push
and
nop
add
inc
lods
adc
mov
add
mov
mov
fistps
inc
adc
in
js
incl
or
fstpt
stos
adc
cs
lea
es
mov
and
ljmp
adc
xchg
xchg
cmp
sbb
xor
jp
or
xor
ja
shlb
daa
test
fiaddl
lods
sti
fimuls
ficompl
push
xchg
syscall
mov
xor
popl
adc
in
or
sub
nop
or
xor
add
jge
jne
or
jbe
lods
push
push
aad
sbb
fcomp
fwait
icebp
cmp
in
gs
sbb
mov
lcall
adc
out
es
cmp
mov
lock
orl
icebp
fidivl
daa
out
rolb
push
js
pushf
cmp
jp,pn
mov
sarl
stos
fwait
inc
cli
dec
outsb
out
xchg
add
fidivrs
cmp
rcrb
stos
mov
clc
xchg
mov
fidivs
int
data16
cmp
xchg
xor
mov
mov
roll
call
inc
add
popf
mov
rorl
xor
mov
dec
std
pusha
jmp
add
lock
xchg
add
inc
loop
xor
sub
mov
mov
pop
arpl
pop
adc
mov
mov
sbb
fsubrl
push
ss
inc
xchg
bound
add
mov
cld
jge
mov
add
int
lods
out
jb
js
cld
inc
ret
sbb
addr16
ret
xor
add
into
mov
jnp
add
xchg
cmp
dec
jp
sbb
dec
std
mov
add
lahf
lock
subl
test
mov
jp
divps
movsb
xor
dec
sti
out
xchg
inc
add
push
sub
in
popf
push
enter
loop
mov
inc
inc
test
outsl
mov
and
mov
jne
jge
pop
icebp
cmovb
dec
mov
jb
add
dec
push
aaa
mov
test
pop
pop
popf
lods
adc
loopne
pop
gs
dec
xchg
push
lods
inc
adc
push
lods
xchg
sub
inc
and
test
or
les
push
gs
dec
sbb
mov
sub
push
xchg
bt
aad
jle
daa
leave
or
jle
out
leave
cmc
mov
pop
repz
add
int
mov
mov
xchg
mov
dec
or
lret
mov
out
out
add
add
cmp
stos
add
jns
jge
repnz
mov
cld
or
dec
xchg
cmpsb
sub
and
rorl
cmpsb
pop
hlt
test
push
repz
xchg
gs
mov
inc
dec
or
mov
popf
shl
in
lret
ss
cwtl
fwait
roll
out
add
pop
inc
lods
clc
mov
in
loope
sbb
sbb
dec
outsl
je
sbb
adc
pop
adcl
in
jnp
fsubp
fildll
pop
loop
daa
dec
aaa
mov
cmp
push
add
jg
loope
jbe
movsl
add
mull
jmp
mov
mov
and
cltd
adc
mov
mov
aam
xor
ja
pop
dec
mul
test
les
jno
push
inc
mov
insl
or
mov
sub
sbb
and
fisubrs
add
repz
sub
inc
ficoms
mov
fiaddl
bound
fnstcw
loopne
cmpsl
adc
movsl
fsubrs
mov
add
mov
shrb
divl
popf
push
sub
outsb
cli
xchg
scas
je
clc
xchg
lods
icebp
stc
jp
cwtl
lahf
cltd
fmuls
mov
cmp
ficompl
jno
shl
loop
cmpl
aaa
neg
cwtl
pop
aad
les
pop
addr16
ret
sub
sub
addr16
or
test
cli
jecxz
push
ljmp
add
push
fs
lds
add
and
popf
mov
mov
test
movsb
ds
gs
test
pushf
cmc
test
shlb
dec
insl
je
xlat
outsl
ds
or
and
daa
ljmp
les
mov
in
push
mov
pop
out
repnz
xor
push
in
add
pop
add
add
lahf
push
sub
data16
test
pusha
out
mov
cmc
aaa
add
movsb
call
cmp
subb
and
jnp
pop
daa
push
leave
cli
inc
inc
or
test
xor
mov
push
pop
push
xor
imul
arpl
pusha
xor
jne
cmc
sub
mov
dec
popf
and
add
dec
jbe
sbb
in
out
sahf
dec
push
mov
add
lea
sbb
jb
popa
popf
xorl
cmp
into
daa
cli
pop
sti
mov
fsubp
add
sub
pusha
push
hlt
leave
sub
pop
lods
mov
test
icebp
js
or
mov
xlat
mov
daa
hlt
dec
add
repz
pop
shll
cmp
pop
add
mov
mov
loopne
adc
or
js
daa
pushf
fwait
push
add
addr16
sbb
dec
mov
add
or
xchg
rcrb
movb
imul
mov
dec
test
add
sti
and
cltd
jo
ds
xchg
gs
movsb
inc
stos
dec
shlb
adc
push
xor
jle
inc
std
adcb
mov
fadd
add
rcrl
add
loop
mov
sti
inc
and
add
jb
pop
jne
xor
cmpsl
add
lea
ss
fs
daa
mov
out
movl
jle
cmpsb
inc
ds
adc
jae
popf
mov
add
sbb
xchg
es
outsl
xchg
pop
or
aad
push
pop
insl
cmp
push
dec
or
dec
daa
dec
imul
jb
loope
mov
sbb
and
jo
jecxz
xchg
adc
sub
add
mov
xchg
and
sub
test
ror
add
lods
fsubrs
insl
mov
and
daa
out
mov
dec
repz
fwait
stc
xor
outsl
add
mov
jbe
insb
fsubrl
mov
sub
in
daa
push
mov
sahf
fiaddl
mov
in
lret
popf
cmp
jbe
xor
fnstcw
xor
or
sbb
insl
push
dec
mov
cmp
cmpsl
push
mov
cs
popf
pop
fiadds
inc
inc
jecxz
xlat
inc
lahf
cmp
pop
loope
add
add
sub
clc
popf
push
cmp
pop
and
xor
test
add
sub
daa
enter
cmpl
jecxz
ret
hlt
pusha
and
movb
rolb
mov
cmpsb
lret
jmp
call
add
add
jnp
mov
jmp
jb
int3
or
lahf
iret
orb
mov
call
push
push
mov
mov
and
lds
add
lods
push
popf
ror
mov
iret
push
jbe
push
ja
or
cmpsl
push
push
stc
in
push
add
inc
sti
and
sahf
push
js
jge
and
push
pop
pop
pushf
imul
dec
lods
pop
add
mov
fidivrs
daa
stos
aaa
es
in
std
mov
xchg
pop
jns
fmuls
xchg
push
subb
mov
repnz
pop
sbb
cwtl
lds
bound
xchg
sahf
inc
movsl
shll
sbb
xchg
jge
test
inc
dec
inc
in
mov
xor
popf
popf
ret
aaa
mov
pop
and
outsl
dec
dec
mov
test
jmp
lock
push
stc
iret
data16
adc
repz
mov
clc
call
out
jo
push
or
pop
sbb
orl
fstl
cmp
push
adc
ret
loope
lcall
loope
add
lret
or
fildl
xchg
jb
fisttps
mov
cmp
daa
aaa
jg
notrack
stos
sbb
arpl
stos
not
imul
pop
jno
pop
pop
imul
add
fistps
add
scas
jge
adcl
cmp
addr16
ja
pop
inc
out
mov
sahf
stos
movsb
add
mov
lcall
popf
std
decb
add
loop
mov
lahf
fidivrl
xchg
xor
xchg
sbb
push
out
inc
push
push
in
add
xchg
push
popf
jb
sub
shlb
xchg
jmp
pop
cmpsl
mov
push
hlt
dec
sub
daa
mov
pop
mov
xlat
testb
push
retw
test
fdivs
daa
sbb
mov
push
fsubrs
mov
movsb
pop
daa
cmp
xchg
or
xor
aaa
sarl
pusha
cmpsb
jo
popf
push
shrl
sbb
popf
and
xor
fiaddl
dec
sarl
xchg
add
stc
faddl
popf
in
movsb
aas
in
test
fstpl
cmpb
add
sub
push
adc
rclb
filds
fdivrl
jbe
popf
xchg
aam
fnsave
data16
call
pop
test
sbb
adc
cmp
xor
in
pop
repz
or
mov
pushf
fdivl
shlb
add
ret
lret
in
into
sub
out
push
or
mov
sub
mov
jecxz
rolb
daa
neg
cld
push
mov
and
push
sbb
ja
mov
int3
mov
out
cmp
adc
fs
cmp
cld
cmp
add
aam
leave
sbb
data16
pop
sbb
add
aas
dec
xchg
scas
jne
test
and
xor
popf
adc
ja
ja
mov
movsb
jns
sbb
add
mov
add
orl
push
loopne
xor
and
push
nop
mov
mov
add
jo
or
imul
ss
test
mov
lret
lea
dec
sbb
push
jg
add
xchg
adc
sbb
add
in
add
sub
xor
daa
loop
or
mov
popa
sub
imul
mov
adc
push
add
sub
dec
fwait
mov
lds
aad
js
and
or
fs
inc
jge
jg
adc
dec
fldl
or
je
xchg
xor
dec
mov
js
mov
pop
daa
inc
fistpll
mov
das
aaa
fs
lahf
pop
std
mov
insl
inc
sub
cltd
cs
pop
in
fisubl
lcall
popa
out
add
ja
pop
pop
imul
or
xchg
adc
and
xchg
clc
mov
iret
inc
xchg
popa
test
push
cs
mov
outsl
pop
or
out
test
ljmp
inc
es
push
lods
cltd
fiaddl
push
sahf
adc
dec
sti
add
mov
adcl
jge
jbe
hlt
jnp
jo,pt
stc
enter
add
pop
push
mov
or
lods
pop
sub
mov
frstor
test
in
jns
pop
mov
dec
and
mov
xchg
adc
jae
inc
popf
pop
imul
int
mov
jecxz
add
loopne
daa
and
sbb
adc
into
outsl
mov
xchg
inc
cmc
add
aam
movsl
clc
test
add
pop
jne
out
sti
in
cmpsb
dec
dec
out
sub
jne
jae
jp
or
ljmp
dec
test
jecxz
sub
popf
imull
pop
aas
jne
imul
mov
data16
or
and
out
sbb
sbb
pop
in
lcall
mov
sbb
sbb
in
lods
inc
sbb
scas
popf
cld
or
add
pop
push
call
or
daa
cmp
jge
add
xor
or
dec
movsl
aam
pop
adc
and
cmpsl
int3
syscall
test
xchg
jbe
and
xchg
xchg
clc
cmp
sbb
cmpb
pusha
sarb
out
add
mov
daa
scas
fwait
jno
mov
test
add
cli
add
ficoms
add
mov
popf
fprem1
repz
insl
aaa
cmp
push
and
int3
sbb
ror
xor
sbb
mov
leave
xor
pop
push
mov
shr
mov
cltd
insb
adc
dec
push
fwait
std
xor
xchg
in
xchg
inc
sbb
jbe
dec
pop
or
int
pop
daa
scas
notl
sbb
pop
or
incb
dec
xor
push
jmp
stos
xchg
jmp
adc
lahf
in
pop
ret
sub
add
sbb
or
xchg
ss
cmpsl
shrl
clc
xlat
jbe
fcompl
push
adc
mov
jo
mulb
cmp
popa
test
fisubl
outsb
mov
pop
testl
dec
imul
add
into
insb
jecxz
scas
mov
jo
outsl
stos
iret
popf
push
shlb
xchg
or
icebp
xchg
sbb
daa
sub
aas
jo
xor
add
lahf
nop
mov
fiadds
push
test
cltd
and
out
add
nop
movsl
idivl
nop
add
clc
rol
jge
add
mov
scas
pop
jbe
xor
sub
std
fdivrl
and
or
das
int3
ds
icebp
xor
cmp
das
subb
pop
and
mov
xchg
leave
aad
insl
testb
push
das
cmp
xchg
jnp
or
out
pop
pusha
push
and
xchg
movsl
lock
lret
aas
mov
mov
cmpsl
push
cwtl
sbb
mov
push
adc
test
and
mov
daa
xchg
lea
verw
popa
cmp
mov
aaa
add
lea
and
or
xchg
fisubrl
out
jns
add
push
stc
ja
rolb
js
rcl
pop
dec
inc
shlb
ficoms
mov
dec
es
ljmp
fiaddl
xor
mov
sbb
sub
dec
sbb
xchg
insl
lea
loope
movsl
mov
sbb
pop
xchg
add
xchg
lcall
sahf
insb
ficoml
es
popa
popf
and
es
in
push
enter
pop
in
jl
iret
and
insb
out
cmp
popf
addr16
in
addr16
push
je
jno
sti
mov
daa
push
jg
imul
mov
or
dec
push
jns,pt
and
ds
addb
clc
xchg
pop
sub
scas
sub
pushf
jp
adc
and
or
cmp
popf
push
inc
jne
xor
sbbb
sub
ss
jo
lret
jecxz
arpl
out
adc
lret
pop
push
repnz
repz
ljmp
inc
add
xchg
ror
fnsave
int
push
cld
rcll
outsb
in
cld
push
jg
pusha
int3
and
mov
in
cmp
out
fldt
mov
das
lahf
nop
push
popf
xchg
stos
lods
or
popl
pop
mov
out
je
in
addb
xchg
push
pop
pushf
in
lods
daa
rolb
daa
jge
incl
imul
push
dec
imul
addr16
dec
insl
popf
daa
sbb
iret
pop
jo
out
iret
inc
jle
cmp
imul
aad
rcl
fmul
xor
daa
jge
jecxz
add
imul
or
pop
test
mov
add
cmp
adc
fidivrs
scas
cmp
adc
add
or
cmp
pop
add
pushf
xor
or
adc
xor
inc
xchg
call
jecxz
scas
jmp
popf
inc
xchg
enter
loop
daa
stc
cmc
jb
xlat
clc
jp
cmp
cmp
fstpt
in
adc
loop
xchg
jmp
subps
into
ficomps
in
adc
test
adc
mov
or
xchg
loopne
xchg
jg
pop
add
stos
jp
lods
addb
xchg
mov
xchg
cmpl
test
sub
pushl
scas
loopne
repz
jbe
xchg
push
ja
hlt
or
bound
aam
fs
and
imul
add
pop
insb
push
mov
daa
popa
inc
rorl
ret
outsl
add
movb
pop
les
jecxz
pop
cmp
sbb
inc
jmp
sub
scas
idivl
and
add
sub
int3
sub
adc
push
and
lcall
xor
daa
push
add
and
daa
xchg
cmp
pop
or
fmul
rcrb
shl
cli
in
and
clc
and
loopne
mov
mov
cmp
cmc
add
push
movsb
push
loope
mov
roll
pushf
imulb
rcl
rorb
fmuls
in
sbb
cmp
scas
mov
xchg
leave
movsb
and
cld
sub
lods
mov
daa
push
mov
add
repz
lock
jg
cmp
pop
or
pop
jnp
add
push
inc
and
cs
sub
daa
cli
dec
outsb
insb
sbb
sub
mov
and
add
sahf
jnp
and
mov
divl
daa
loope
xchg
lea
xchg
fwait
mov
pop
or
addr16
or
mov
pusha
test
movsb
repnz
inc
idivl
in
rolb
repz
and
mov
loope
sarb
out
es
sti
mov
popf
mov
rcrb
daa
das
fidivrs
incl
hlt
push
dec
lds
iret
pop
push
out
ret
loope
addr16
dec
push
lods
cmp
fdivs
or
adc
sub
or
xchg
mov
add
cmp
push
fs
cmc
adc
jmp
ss
add
add
bound
lcall
icebp
loop
jge
pop
daa
xchg
jno
push
mov
push
cmc
bound
icebp
lahf
bound
std
pop
push
popfw
inc
or
jg
pop
popf
leave
pop
fmul
xchg
push
xchg
sub
int3
push
dec
std
outsb
xor
bound
adc
sub
fimuls
mov
rclb
xor
mov
push
xchg
mov
add
cwtl
ja
daa
jno
shlb
add
push
daa
test
adc
dec
sti
jae
sub
adc
mov
cmp
cwtl
or
fdivl
orl
in
jg
loopne
xor
mov
fsubr
icebp
add
jbe
sub
into
add
xchg
hlt
daa
in
add
mov
aaa
push
mov
cmp
push
push
cwtl
mov
or
sub
inc
pop
adc
mov
push
or
cmp
aam
mov
daa
and
mov
sub
je
cmp
out
jns
loop
jge
repnz
inc
icebp
gs
sahf
add
scas
outsl
mov
popf
jbe
push
jmp
dec
pop
fldenv
pop
sub
add
cmovo
insl
loop
dec
daa
dec
iret
rcrl
mov
sub
xchg
push
mov
and
cmpsl
fdivrl
jne
popf
mov
scas
pop
mov
stos
push
daa
xchg
aam
pop
xchg
sub
adc
popf
cltd
mov
pop
add
insl
xchg
mov
xchg
rcrb
rorl
cld
popf
insb
cld
inc
arpl
add
test
pavgb
lock
jbe
lock
and
adc
mov
fistpl
daa
and
mov
adc
lcall
loop
test
xor
adc
ds
mov
daa
fisubl
push
add
and
jg
dec
mov
ds
sub
cmp
ss
add
add
sbb
sub
xchg
lods
add
jns
mov
aad
pop
jg
dec
jge
out
sub
ljmp
pop
jl
add
push
sub
push
sbb
pop
test
xchg
and
dec
mov
pusha
nop
sahf
sub
enter
push
sbb
ds
or
mov
dec
xchg
nop
dec
inc
sbb
flds
icebp
popa
or
mov
iret
lods
stos
pop
mov
push
xorl
subl
addr16
lea
gs
sbb
xchg
dec
dec
out
es
mov
xchg
mov
enter
sbb
mov
dec
ss
xchg
in
faddl
xchg
dec
in
pop
gs
cwtl
pop
jbe
fldln2
pop
popa
mov
rcll
cwtl
jae
jle
shll
xor
lods
aas
cmp
test
push
scas
xor
mov
test
sub
mov
push
js
in
insl
adc
imul
cli
adc
jns
pop
mov
sub
lret
sub
int
xorb
inc
mov
sub
add
dec
int
cmpsb
pushf
loopne
xor
ret
arpl
cmp
mov
test
mov
jb
fwait
roll
dec
mov
inc
fldcw
hlt
and
lea
loop
and
add
inc
mov
popf
dec
loope
ljmp
xor
jns
call
jge
test
cld
leave
popa
cli
cld
out
popa
sub
pop
cmp
sbb
sub
adc
nop
mov
call
or
aam
popa
mov
jge
jmp
rcll
push
in
iret
jno
jecxz
test
adc
xchg
cld
add
mov
pop
fcmovne
cld
inc
fucomi
cld
fs
cld
int
aaa
imul
or
adc
jge
lods
dec
cmpsb
adc
iret
lcall
cmp
push
add
call
sbb
push
push
jno
pop
push
inc
iret
push
push
pop
iret
adcb
mov
iret
cwtl
push
mov
iret
mov
xchg
iret
mov
push
jmp
iret
loopne
ror
push
aad
clc
push
fld
add
adc
pop
pop
sbb
jnp
fwait
call
movsb
imul
js
mov
in
imul
pop
cmp
sbb
jnp,pt
cmp
cli
imul
mov
add
cmp
cmp
sahf
das
xor
push
xchg
cmpb
mov
pop
loope
sbb
outsb
in
push
mov
jmp
subb
insl
movhps
orl
lods
nop
fstl
imul
iret
mov
and
ret
hlt
dec
filds
test
movsb
push
jno
sbb
push
dec
cmp
push
dec
jbe
pop
jno
in
popf
jle
pop
aam
xchg
sbb
popf
sarl
pop
sahf
sub
mov
xchg
pusha
ss
lret
cmpsl
inc
loopne
out
lcall
addr16
mov
and
ror
sbbb
leave
sbb
cmpsl
fsts
aas
out
mov
and
mov
test
iret
adc
scas
inc
add
movsl
xchg
xchg
xor
lret
enter
pop
lret
iret
lock
shl
clc
mov
jp
sbb
adc
out
mov
dec
and
ss
add
jnp
mov
mov
sbb
movsb
xor
jl
mov
push
push
sbb
std
ret
mov
xchg
mov
in
shl
les
push
aam
repz
aam
lock
and
movsb
iret
push
in
std
xlat
xchg
cmp
loope
ficoms
xorb
outsb
push
jb
push
dec
jbe
pop
cwtl
push
aaa
xchg
or
cmpsb
sbb
dec
mov
pop
aas
andl
inc
stos
sahf
cmpsl
pop
xor
ret
mov
or
movsb
lock
lcall
xor
cmp
cmc
cmp
mov
pop
dec
inc
adc
xchg
mov
xchg
out
mov
mov
add
enter
pop
pop
pop
xchg
xchg
push
mov
pop
sub
mov
mov
pop
popl
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
add
push
sub
mov
pop
pop
xchg
mov
sub
mov
mov
pop
xchg
push
mov
pop
sub
mov
sub
mov
pop
pop
mov
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
movl
xchg
xchg
inc
incl
xchg
sub
mov
mov
pop
mov
push
push
pop
pop
xchg
call
cmp
jne
sub
mov
push
pop
pop
push
mov
pop
mov
xchg
sub
mov
push
pop
pop
inc
xchg
push
push
pop
pop
mov
xchg
sub
mov
sub
mov
pop
pop
call
cmp
jne
push
sub
mov
pop
pop
xchg
mov
sub
mov
mov
pop
xchg
xchg
push
push
pop
pop
mov
xchg
push
sub
mov
pop
pop
add
add
jmp
jmp
sub
mov
mov
pop
push
mov
pop
mov
push
push
pop
pop
push
push
pop
pop
push
push
pop
pop
push
mov
pop
lea
sub
mov
mov
pop
sub
mov
push
pop
pop
xchg
xchg
mov
xchg
push
mov
pop
sub
mov
mov
pop
sub
mov
mov
pop
xorl
xchg
xchg
add
cmp
jb
jmp
xchg
xchg
pop
xchg
push
sub
mov
pop
pop
sub
xchg
sub
mov
sub
mov
pop
pop
mov
push
sub
mov
pop
pop
sub
mov
push
pop
pop
jmp
sub
mov
sub
mov
pop
pop
push
mov
pop
mov
sub
mov
mov
pop
xchg
add
xchg
sub
mov
mov
pop
mov
sub
mov
mov
pop
push
sub
mov
pop
pop
sub
mov
mov
pop
sub
mov
push
pop
pop
mov
push
sub
mov
pop
pop
push
mov
pop
sub
xchg
push
mov
pop
mov
push
mov
pop
push
push
pop
pop
sub
mov
mov
pop
xchg
mov
xchg
push
mov
pop
ret
call
sub
mov
sub
mov
pop
pop
push
push
pop
pop
sub
mov
push
mov
pop
push
mov
pop
call
push
sub
mov
pop
pop
push
mov
pop
pop
push
mov
pop
xchg
sub
mov
mov
pop
sub
mov
sub
mov
pop
pop
sub
mov
push
mov
pop
xchg
addl
xchg
push
sub
mov
pop
pop
pushl
sub
mov
mov
pop
xchg
xchg
push
sub
mov
pop
pop
mov
sub
mov
sub
mov
pop
pop
sub
mov
mov
pop
xchg
push
mov
pop
mov
sub
mov
mov
pop
push
push
pop
pop
add
xchg
sub
mov
mov
pop
sub
mov
xchg
push
sub
mov
pop
pop
decw
sub
mov
sub
mov
pop
pop
push
push
pop
pop
mov
xchg
push
sub
mov
pop
pop
xchg
xchg
movl
xchg
xchg
inc
jmp
inc
mov
add
add
add
add
xor
add
add
add
lcall
add
mov
add
add
dec
mov
add
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
fiadds
inc
gs
gs
imul
outsb
gs
xor
cs
insb
add
add
ret
mov
insb
mov
dec
ficoml
roll
add
push
mov
scas
je
inc
fiadds
lea
dec
lea
lock
add
movsb
call
ret
lret
push
add
ficompl
das
fiaddl
aaa
and
call
mov
mov
call
mov
lea
ret
lea
push
add
push
jo
mov
ficoml
roll
add
push
mov
faddl
sarb
dec
and
add
push
jo
mov
ficoml
roll
add
push
mov
scas
mov
clc
adc
or
dec
lea
lock
add
movsb
pop
lret
pop
mov
push
add
dec
push
add
dec
push
add
dec
push
add
dec
pusha
xor
jge
ss
jno
xor
jnp
xor
jg
cmp
jns
xor
jge
ss
jno
xor
jnp
xor
jg
cmp
dec
sub
pop
sbb
imul
push
js
jge
inc
gs
adc
xor
jae
sub
pop
pop
imul
cmp
js
jge
push
imul
pop
jb
sub
js
and
je
sub
arpl
fiaddl
and
das
sarb
dec
adc
add
mov
loopne
add
sarl
or
sti
adc
inc
dec
mov
mov
rorl
sti
adc
inc
dec
mov
mov
rcrl
sti
adc
inc
dec
mov
mov
shrl
sti
adc
inc
dec
mov
mov
sarl
sti
adc
inc
dec
mov
mov
mov
in
pop
push
push
push
sbb
jne
das
sarb
dec
adc
jg
push
add
aas
insl
cmpl
cmp
mov
call
xor
mov
sbb
mov
sub
push
inc
ficompl
dec
or
xor
pop
mov
add
cmpsb
cmp
add
mov
add
jb
sbb
push
sbb
jmp
ret
add
push
mov
js
mul
adc
xor
sub
fwait
ljmp
mov
push
clc
mov
inc
or
or
pop
cwtl
ret
ficoml
sub
push
mov
fiaddl
lret
add
or
pop
push
and
or
add
jmp
mov
pop
jmp
xchg
mov
faddl
sbb
inc
push
roll
add
push
push
fucomi
mov
dec
xchg
mov
xor
add
inc
fcompl
cmp
dec
jne
mov
sbb
ja
add
sbb
add
mov
add
xorl
add
int
add
dec
faddl
add
pop
push
inc
dec
ficoml
rcl
mov
push
lea
dec
pop
lea
dec
adc
add
add
dec
shll
scas
incl
dec
add
sti
adc
inc
dec
scas
xchg
xchg
adc
mov
push
clc
adc
add
push
sbb
mov
inc
mov
push
call
rclb
mov
add
rol
add
push
jmp
lret
jmp
mov
push
clc
lret
add
shr
or
mov
je
das
fiaddl
aaa
mov
das
shl
add
cmp
das
je
pinsrw
add
push
add
inc
out
add
mov
jmp
mov
push
clc
or
add
add
dec
push
add
sar
mov
add
cmp
dec
inc
add
and
add
add
fcmovne
mov
dec
ficoml
rcl
mov
push
mov
scas
mov
clc
adc
lret
data16
add
xor
add
mov
mov
mov
adc
mov
push
rep
and
add
add
or
inc
add
push
mov
xchg
pusha
mov
jne
cld
sti
shll
fucomi
loop
call
cmp
add
dec
and
mov
jae
cli
push
inc
mov
mov
adc
cmp
aam
add
add
pusha
mov
mov
mov
je
pop
cwtl
jmp
fcomps
shl
std
call
cmp
cmp
cld
dec
and
xorl
xchg
mov
sub
mov
push
shlb
fistl
inc
pop
add
adcb
out
mov
call
cmpb
repnz
and
fdivrs
xor
