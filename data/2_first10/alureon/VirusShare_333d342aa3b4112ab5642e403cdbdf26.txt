mov
push
mov
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
add
mov
movzwl
add
mov
jmp
neg
sbb
and
add
or
andl
mov
pop
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
test
je
andl
mov
sub
add
mov
mov
mov
lea
add
mov
add
add
add
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
andl
add
cmpl
jbe
mov
lea
add
incl
mov
cmp
jb
mov
call
mov
cmpl
mov
je
or
sub
mov
mov
sub
add
mov
mov
mov
lea
push
push
push
call
mov
mov
mov
sub
add
mov
movzwl
add
lea
movzwl
lea
mov
mov
mov
andl
xor
cmp
jae
lea
mov
mov
addl
push
lea
pop
rep
mov
add
movzwl
add
incl
cmp
jb
mov
mov
add
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
sub
mov
mov
sub
mov
je
mov
test
je
push
mov
add
test
je
push
push
mov
sub
mov
sub
lea
mov
je
dec
shr
inc
mov
mov
mov
movzwl
mov
and
mov
cmp
jne
mov
and
add
add
addl
decl
jne
mov
test
jne
pop
pop
pop
xor
inc
leave
ret
push
mov
sub
andl
push
push
push
movl
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
imul
xor
add
incl
mov
push
call
mov
mov
mov
xor
mov
div
mov
mov
mov
mov
sub
not
add
xor
mov
mov
incl
add
cmpl
jb
testl
pop
pop
pop
jne
cmpl
jae
movzwl
test
jne
inc
jmp
xor
leave
ret
push
mov
push
push
mov
mov
mov
cmp
jb
andl
add
je
push
push
push
pop
mov
sub
mov
mov
mov
lea
ror
lea
imul
inc
not
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
call
pop
test
je
pushl
pushl
pushl
call
pushl
mov
pushl
pushl
call
mov
jmp
mov
pop
ret
push
mov
sub
mov
push
push
xor
push
mov
movl
cmp
je
mov
jmp
push
call
mov
mov
push
mov
add
call
push
push
push
push
call
movl
mov
push
shl
add
incl
push
push
push
call
mov
push
mov
mov
call
pop
test
je
push
call
mov
push
push
call
mov
call
add
cmpl
mov
je
cmpl
jne
push
call
lea
push
mov
push
pop
add
xor
div
push
pushl
pushl
call
mov
push
push
push
pushl
call
mov
add
lea
add
mov
lea
mov
mov
mov
and
call
mov
mov
mov
call
pushl
pushl
pushl
push
call
push
call
mov
push
call
test
je
pushl
mov
pushl
pushl
pushl
call
cmpl
mov
jne
push
call
test
jne
push
push
pushl
call
pop
pop
xor
pop
leave
ret
push
mov
mov
sub
push
mov
mov
imul
cmp
jb
mov
push
push
call
mov
add
imul
push
xor
pop
div
mov
mov
mov
mov
sub
mov
test
je
mov
sub
mov
call
xor
divl
mov
add
cmp
jae
mov
mov
imul
xor
divl
xor
mov
sub
imul
div
cmp
jae
mov
mov
sub
mov
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
incl
mov
mov
mov
mov
incl
decl
jne
add
add
add
cmpl
jne
pop
pop
pop
leave
ret
push
mov
push
push
andl
andl
push
push
push
push
push
call
mov
lea
push
pushl
lea
pushl
movb
push
pushl
movb
pushl
push
call
push
push
push
call
pop
leave
ret
mov
push
push
call
mov
xor
cmp
je
push
push
push
push
call
push
push
push
pushl
call
push
push
push
pushl
call
pop
pop
ret
push
mov
sub
push
mov
push
test
je
mov
test
je
cmpl
je
mov
test
je
push
lea
push
lea
push
push
call
mov
add
push
pop
lea
add
call
mov
test
je
mov
sub
mov
mov
inc
dec
jne
pushl
mov
pushl
pushl
pushl
pushl
call
mov
mov
mov
call
mov
add
push
pushl
pushl
push
call
add
pop
jmp
xor
pop
pop
leave
ret
mov
push
mov
sub
mov
push
xor
push
push
mov
movl
mov
movl
mov
mov
call
mov
lea
push
movl
mov
movl
call
pop
leave
ret
mov
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
ret
mov
mov
mov
rol
imul
add
mov
ret
push
mov
sub
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
inc
jmp
andl
push
push
lea
lea
cmpl
mov
je
mov
jmp
mov
mov
add
xor
nop
movb
mov
mov
inc
cmp
jb
mov
test
je
lea
movsbw
mov
add
inc
mov
test
jne
lea
push
call
mov
test
je
mov
add
andl
cmpl
je
mov
mov
mov
test
jns
and
jmp
add
add
push
pushl
call
mov
test
je
incl
mov
lea
cmpl
jne
mov
incl
mov
imul
add
lea
cmpl
jne
xor
inc
pop
pop
pop
leave
ret
xor
jmp
mov
mov
ret
mov
push
mov
push
push
mov
test
mov
je
lea
push
call
add
push
call
andl
pop
pop
pop
ret
push
mov
push
andl
push
mov
movzwl
movzwl
add
je
push
mov
lea
push
mov
mov
mov
mov
test
jns
and
push
add
push
push
call
jmp
add
movzwl
movzwl
incl
addl
add
cmp
jb
pop
pop
pop
leave
ret
add
add
sub
push
hlt
mov
jl
js
push
add
lock
xor
and
ss
sub
xchg
cmpsb
push
aaa
pop
push
push
cmp
js
jl
mov
push
mov
out
lret
mov
pop
push
push
mov
cmp
sbb
push
and
rorb
xor
popa
sbb
mov
cmp
enter
pavgw
int3
mov
push
in
pop
add
imul
rorl
sbb
sbb
movsb
into
or
mov
and
add
add
or
ja
pop
sub
ret
adc
xorl
mov
stc
push
pop
call
and
stos
add
lods
out
mov
xchg
imul
pop
nop
divb
mov
jbe
je
sbb
rorl
and
xor
out
notb
or
jmp
fnstenv
in
jae
jnp
scas
push
adc
sbb
add
repz
mov
pop
adc
mov
loopne
mov
cmc
mov
pop
test
movb
jge
sarl
xchg
idivb
jmp
or
mov
mov
pop
mov
in
jno
addr16
jge
xchg
scas
fidivrl
and
sub
xor
scas
jmp
xchg
and
lds
dec
cld
cltd
pop
popa
cli
subl
insb
sbb
test
aas
cli
mov
lret
push
add
sub
cltd
testl
and
xchg
and
ss
mov
cmp
inc
popf
clc
stos
jl
loop
push
push
mov
sti
into
cmp
xchg
das
sub
pop
sbbb
mov
repz
and
or
xor
ja
jae
lcall
hlt
icebp
fs
cmp
stos
inc
insb
mov
call
ja
and
jge
loopne
add
sbb
out
lahf
push
inc
push
loope
push
jp
jo
out
dec
jnp
es
sbb
jo
sbb
out
cmp
cmpsb
pop
fwait
clc
push
insb
sbb
std
pop
fstl
addl
or
mov
cmp
inc
daa
cld
jbe
divb
sub
jo
jle
xor
push
js
xchg
jns
mulb
cli
xchg
jae
pusha
mov
lea
add
mov
faddl
sbb
fisttps
cmp
insl
mov
sub
lret
lds
fcompl
outsl
add
out
jecxz
push
enter
sbbl
xchg
mov
adc
es
push
jle
mov
sbb
or
lcall
jmp
xchg
mov
lock
xor
cmp
dec
insl
lret
test
cwtl
mov
ficompl
out
insl
or
pop
inc
xchg
inc
fisttps
mov
imul
in
or
int
mov
dec
addb
incb
scas
ss
jns
mov
cmpl
and
jne
aad
jno
addr16
mov
xchg
fwait
or
push
cmp
popa
repz
push
pushf
or
or
xor
jno
movsl
mov
call
xchg
xor
cmp
add
xchg
mov
jle
lcall
in
aas
rol
scas
lahf
cmp
xor
inc
pop
cmpsb
cmp
cmp
or
dec
add
cmp
jbe
inc
jg
xor
add
push
jle
in
dec
call
or
repz
scas
mov
mov
in
add
outsb
jg
and
loope
icebp
gs
mov
hlt
es
aam
repz
jecxz
cs
xchg
push
in
inc
out
cmpsb
and
leave
push
mov
aas
dec
xchg
add
outsb
add
call
jmp
out
mov
sbbl
lcall
aas
test
mov
mov
cmc
push
fistpll
dec
lods
mov
fsubrs
loop
adc
pop
testl
dec
jno
pop
adc
divb
imul
fcomp
mov
push
pop
jbe
mov
jnp
loopne
movlhps
lods
fisubrl
ret
mov
add
xchg
sbb
scas
xchg
cld
stos
mov
jbe
mov
repnz
mov
decb
fwait
jno
cmpb
fucomp
mov
push
and
mov
test
mov
and
arpl
lock
add
out
jmp
lds
push
hlt
loopne
inc
pop
jb
cltd
cltd
out
pusha
cmpb
outsb
inc
push
decl
mov
mov
and
repnz
add
add
jns
mov
cwtl
push
cmpsb
sub
mov
mov
stos
push
dec
mov
pop
sub
inc
xchg
xchg
add
push
jmp
jb
outsb
cmp
xchg
xor
loop
test
aam
pushf
in
jp
cmpsl
adc
sbb
rcll
aas
enter
cld
lret
test
mov
repz
lods
sub
or
out
jno
scas
xchg
xchg
iret
inc
pop
or
jo
inc
push
inc
push
out
repnz
imul
jae
cmp
pop
lds
push
lods
nop
cld
mov
jne
cmp
sub
mov
pop
mov
mov
negl
sbb
dec
mov
aad
adc
mov
stos
add
mov
scas
mov
jnp
sub
js
jge
cltd
loop
jg
cs
sub
gs
pop
push
dec
jmp
or
in
test
add
jae
inc
jnp
mov
xor
scas
int3
inc
push
ljmp
push
and
add
mov
adc
adc
mov
sub
das
cs
sbbb
call
je
push
mov
adc
dec
xor
stos
rclb
and
dec
fwait
call
adc
push
cmc
in
sub
or
or
roll
jo
cld
cmc
jne
mov
or
adc
outsb
sub
mov
push
add
add
xchg
adc
mov
fprem
dec
adc
sbb
popl
dec
cmpsb
mov
push
mov
movsl
aaa
mov
imul
cmc
xor
mov
les
sub
movsl
mov
mov
pusha
mov
xchg
outsb
dec
sbb
outsl
mov
or
jne
in
in
xor
rcr
cmp
pop
add
mov
add
mov
into
hlt
sub
fadds
cmc
pop
fwait
jmp
push
jb
ret
lret
mov
into
lcall
push
pop
jb
aam
enter
fdivs
lea
xchg
fiadds
in
je
pop
stos
dec
test
fsubrl
add
xlat
mov
pushf
out
cmp
mov
pusha
rcrl
sub
lds
ja
mov
fwait
add
add
push
adc
out
pushf
andb
mov
jecxz
out
sbb
rclb
fstl
mov
cmp
cltd
iret
iret
inc
sbb
inc
xchg
push
inc
jno
jae
mov
mulb
std
shll
fdiv
sbb
dec
addr16
rcr
outsl
ss
cwtl
push
insb
insl
xor
ds
lahf
xchg
push
xchg
pop
mov
push
icebp
jp
xchg
rorl
in
shll
arpl
out
cli
cmp
enter
in
roll
outsl
call
sbb
add
add
int3
cmp
mov
sti
sub
imul
pop
int
ljmp
mov
adc
shlb
push
movsl
dec
jg
pop
dec
xchg
pusha
lret
inc
sti
je
mov
jmp
adc
mov
popf
push
das
fs
test
popf
cmp
pop
cmpl
add
adc
test
adc
or
mov
repz
jno
pop
jns
das
cmpb
arpl
jmp
add
pop
orl
mov
add
movb
cs
adc
insb
mov
movsbl
push
stos
sarl
adc
sbb
xchg
aaa
hlt
or
dec
aaa
mov
pop
pop
addr16
rclb
out
iret
jl
sbb
mov
lcall
mov
or
in
mov
int
xchg
sbb
cmp
jb
arpl
inc
sahf
sbb
mov
inc
bound
inc
jmp
jl
sti
mov
fsubs
dec
cmc
sub
aad
out
fdivrl
mov
in
dec
pop
scas
cs
dec
cmp
in
jl
pop
or
test
xchg
hlt
xchg
jae
and
inc
rolb
add
add
or
in
dec
and
fisttps
popf
pop
mov
sbb
arpl
movsl
leave
xor
mov
sub
imul
enter
bound
ret
jp
leave
movsl
or
mov
clc
in
ja
cmp
rol
inc
enter
cmp
jg
insl
scas
add
adc
jle
lods
mov
in
jmp
xor
push
xor
dec
jnp
bound
addr16
add
add
popf
aad
mov
mov
and
inc
inc
out
scas
mov
and
xchg
mov
inc
aas
and
fistl
xlat
or
inc
out
inc
cmp
das
xchg
shlb
mov
hlt
push
loop
movsb
rcll
aam
or
repz
test
jg
sbbb
cmp
pop
inc
mov
imul
in
inc
inc
inc
cmpb
xorb
and
cmp
arpl
les
in
push
push
mov
sbb
adc
inc
lcall
aad
lahf
adc
out
sub
sub
mov
mov
sti
notb
mov
dec
pop
cmp
push
jnp
mov
mov
ds
cmpl
aad
mov
mov
cld
add
mov
insb
enter
in
jo
loop
js
out
add
cmc
mov
into
dec
repnz
adc
push
icebp
sarb
call
es
pop
dec
aas
mov
xchg
mov
mov
int
adc
adc
mov
aad
loop
fldenv
lds
addr16
cmpsl
sarl
sbb
pop
xor
jns
leave
scas
punpckhbw
lods
cmpsl
arpl
add
add
aas
jmpw
daa
aad
fstpt
push
sbb
enter
outsb
xchg
mov
loop
or
scas
sub
divb
pop
mov
jo
pusha
lcall
fisttpl
ss
in
pop
pop
lods
jmp
out
loope
and
push
push
js
pop
lret
and
movsl
out
dec
sub
dec
mov
mov
repz
add
add
outsl
mov
rclb
pop
mov
mulb
adc
xchg
cltd
dec
jl
mov
nop
jmp
xor
jmp
in
outsb
fwait
sub
sub
sarb
adcl
popf
shlb
out
into
icebp
add
sahf
mov
and
popa
lret
in
sub
rclb
fnstenv
cmpsb
cmc
jle
rorl
cli
pop
cmpsb
push
jge
cwtl
stos
push
jp
push
out
lahf
mov
jle,pn
mov
scas
push
pop
pop
inc
mov
add
xlat
add
out
ds
and
cmpsl
add
pusha
fistps
outsb
xchg
testl
enter
cmp
mov
loope
fwait
jecxz
mov
or
aad
cmp
shl
and
shr
stos
jp
inc
pushf
pop
push
stos
popa
mov
pop
or
mov
push
sub
popa
into
add
int
xchg
lods
pop
jno
cwtl
ljmp
add
add
sbb
repz
mov
sti
shr
pop
arpl
pop
imul
sahf
dec
jge
test
push
cs
xor
jge
outsb
mov
mov
mov
fistpll
push
mov
and
stos
dec
cmp
mov
mov
fs
lret
jge
lea
pusha
and
push
pop
jno
mov
aas
fnstsw
adc
cmpsl
push
add
inc
and
int
xchg
aas
add
test
dec
stc
sub
or
pop
dec
rcr
in
ja
push
pop
les
shll
mov
sub
mov
pushf
dec
dec
jns
push
stos
lea
idivl
imul
jne
aaa
ret
adc
popa
xchg
mov
rorb
cmc
dec
xor
push
xlat
jnp
mov
imull
imul
outsl
jl
adc
repz
push
sbbb
je
jle
cmpb
cmp
cmc
and
insl
lds
aas
or
push
push
das
je
idivb
lret
push
lcall
rolb
push
mov
push
fisttpl
scas
jae
mov
xchg
and
cmp
pop
inc
add
jo
xor
int3
rclb
mov
pop
push
popf
dec
jne
cmc
xor
fldz
iret
inc
add
pop
jne
insl
mov
cmpsb
sub
cmp
jge
or
push
mul
in
pop
movsl
outsl
ja
clc
dec
jae
and
movsb
hlt
xor
sub
mov
cmp
mov
push
enter
mov
cmpsb
mov
lods
jmp
stos
or
push
pop
push
fmul
xor
out
dec
sub
hlt
sarl
mov
sub
fstps
inc
add
and
fiaddl
popa
mov
cwtl
lods
aas
dec
sti
push
sub
outsl
dec
insb
push
jge
pop
mov
je
pop
pop
fwait
cmp
mov
or
pop
fcmovb
idivl
clc
test
popa
add
jmp
inc
lret
lcall
mov
leave
es
inc
mov
test
dec
adc
cmp
in
lods
cmp
test
inc
mov
sub
and
xchg
dec
lcall
add
test
popa
addr16
fidivs
testb
pop
lret
icebp
jge
aaa
gs
shr
mov
pop
test
sbb
ljmp
mov
sbb
mov
stc
cs
int
jnp
in
xchg
push
std
lea
mulb
lods
jp
icebp
inc
xchg
jle
int3
inc
fildll
xchg
jbe
jns
test
pop
in
fisttps
mov
or
mov
icebp
add
outsb
mov
aad
je
xor
test
push
stos
lods
cmp
mov
insl
int
nop
mov
mov
stos
imul
or
pushf
pop
popa
xchg
adc
pop
push
dec
out
insb
mov
sbb
adc
loope
fimull
repz
lahf
adc
enter
sub
mov
jmp
adc
ret
jns
test
or
pop
add
add
push
cld
push
gs
xchg
out
sbb
xor
stc
lret
test
add
mov
pop
push
rorl
cld
sbb
sbb
jns
and
loopne
dec
imul
shld
stc
nop
add
mov
sti
das
pop
push
gs
cmpsb
cmp
or
push
loop
test
cltd
push
cmp
in
stc
dec
test
lds
mov
add
push
fidivrl
int
inc
pop
stos
ss
add
pop
add
push
push
push
test
cmp
and
push
jb
test
xchg
loop
and
pusha
push
jmp
xchg
jp
add
push
jb
bound
push
loop
mov
jnp
jns
push
mov
jmp
mov
and
icebp
and
mov
add
push
stc
mov
cltd
xor
test
add
leave
inc
js
adc
rol
xchg
mov
push
xor
xor
push
pop
fidivrs
mov
cmp
add
inc
pop
dec
cltd
push
push
mov
lods
movsb
mov
mov
call
sbb
xchg
inc
shll
xchg
xchg
mov
js
fists
add
and
adcb
cmp
push
fsubl
cmpb
add
out
xchg
les
lods
in
sub
imul
xor
pop
aam
xchg
lcall
add
add
inc
incb
sub
pop
movsb
inc
enter
in
lock
jmp
out
es
dec
xchg
repnz
dec
cmpsl
jo
inc
in
repz
sub
cltd
in
sarl
rep
inc
push
sub
dec
test
dec
sub
cli
lret
rcrb
stc
ja
gs
mov
shrb
insl
cmpb
out
cmpsl
orb
push
popa
pop
lods
test
repz
ljmp
repz
sub
lcall
jns
xor
push
inc
add
add
nop
jno
fs
xchg
pop
clc
popf
mov
lds
pushf
ja
lcall
enter
inc
pop
xchg
xchg
dec
mov
scas
aas
int3
or
and
sbb
cmc
dec
test
mov
loopne
daa
inc
rclb
stc
inc
jb
push
and
mov
mov
fcmovbe
fisubl
lods
push
inc
inc
cmp
push
sbb
add
in
mov
mov
xor
insl
ss
clc
pop
dec
bound
sbb
pop
shlb
packsswb
or
jno
or
adc
add
mov
pop
push
xchg
adc
add
sbb
mov
mov
dec
or
mov
mov
test
je
into
xchg
out
fbstp
mov
arpl
push
add
and
push
sti
sub
jp
inc
cmpsb
and
xor
das
xlat
mov
jns
dec
or
or
adc
pop
daa
sub
hlt
and
das
mov
sub
dec
cltd
pop
sub
test
outsl
lods
jb
pushf
mov
mov
cmp
sbb
mov
stc
repz
push
dec
outsb
push
das
and
add
cmp
jb
adc
lods
cmpl
pop
cmp
loope
or
jg
xchg
add
xchg
pop
outsb
adc
shl
add
jno
jl
divl
dec
rcll
clc
ret
push
repz
push
out
mov
rcrl
imulb
gs
or
test
pop
fbstp
or
jl
cwtl
daa
stc
lods
push
add
cmp
testl
imul
enter
imul
loop
adc
es
rol
cli
inc
aas
in
loope
das
dec
shrl
pop
clc
mov
fxtract
jo
inc
jmp
pop
sub
and
data16
adc
lock
loopne
dec
daa
xor
lahf
cmp
jecxz
fistpl
dec
int
inc
fwait
out
cmp
jno
shlb
add
add
lret
lock
arpl
adc
xchg
test
in
and
mov
addr16
int3
push
hlt
rorl
lret
js
xchg
pop
arpl
adc
xor
add
push
push
test
or
add
and
les
mov
cmp
sub
test
add
push
rep
insb
mov
insl
and
sub
add
int
das
add
xchg
pop
jecxz
sub
int
mov
mov
mov
enter
jle
int
aaa
sbb
lds
and
in
insl
iret
xor
mov
inc
jle
cmp
fsubrl
rcrb
add
cmp
inc
adc
in
xor
adc
pop
push
loope
in
pop
aas
xor
ficoms
dec
lcall
bound
pusha
cmp
sub
jae
add
add
lock
int
js
add
and
aam
sub
data16
clc
js
outsb
mov
fstpt
daa
mov
ljmp
pop
or
mov
jle
and
ja
cmp
xor
cmp
sub
xor
out
lods
div
sub
xor
les
std
sti
xchg
ds
push
sbb
add
roll
shl
fcomps
inc
test
add
add
scas
insb
jecxz
enter
xchg
addl
fldcw
sbb
or
adc
xchg
dec
hlt
in
negb
leave
pushf
xchg
cs
out
mov
inc
push
in
add
xor
inc
mov
in
ljmp
pop
mov
aas
or
jbe
push
and
push
jmp
loope
inc
inc
lds
les
xor
cmp
ret
cli
pop
pop
loope
mov
mov
mov
add
fstpt
inc
mov
fwait
rcl
lret
out
negl
inc
rcl
stc
adc
xchg
lret
pushf
mov
stos
push
pop
data16
push
stos
shl
aaa
add
aam
fwait
dec
sub
mov
mov
jmp
cld
mov
mov
adc
and
mov
mov
or
enter
or
add
sub
inc
pop
outsb
loope
and
dec
out
push
push
mov
inc
imul
lret
pop
ficoml
ret
scas
icebp
pushf
dec
lcall
shlb
imul
xor
sbb
and
out
mov
fs
mov
jl
and
lods
jge
fidivrl
pop
insb
in
or
push
jmp
aas
loope
pop
das
dec
std
js
in
sbb
movsb
adc
dec
or
add
out
lahf
outsb
mov
stos
dec
jmp
call
aad
pop
sub
inc
sbb
and
test
lahf
les
into
jmp
pop
dec
stos
push
sub
clc
lods
outsb
jo
lcall
in
sub
movsl
xchg
jo
add
and
lock
jp
andl
movsl
mov
dec
pop
add
data16
rcll
jae
aaa
insl
in
mov
jge
notb
mov
rorb
loope
xchg
mov
loopne
inc
add
fiadds
les
pop
adcl
fstl
cld
push
ficoml
int
mov
mov
dec
and
pop
push
insb
adc
mov
aas
xchg
xor
movsl
push
in
test
pop
mov
xor
decl
sub
cltd
enter
mov
lret
push
fs
mov
int
add
add
outsl
hlt
mov
inc
leave
shll
sarl
ja
xchg
pop
movb
nop
loopne
aad
imul
push
jae
pop
in
and
mov
push
or
daa
jo
and
shlb
xchg
inc
bound
out
dec
dec
and
repnz
push
popa
aad
test
pop
pusha
sub
xor
out
sti
or
aaa
fsubl
fnsave
xor
sbb
not
std
mov
inc
in
stos
jge
push
shl
xor
in
int
or
pushf
adc
push
mov
and
ret
lcall
xor
jns
xchg
cmp
mov
cmpsl
movsl
outsl
mov
jmp
pop
cmp
cld
rcrl
mov
xorb
xchg
mov
xor
pop
adc
and
dec
cli
jge
test
mov
icebp
int
dec
add
add
roll
inc
jl
jns
mov
out
idivl
ja
sahf
add
inc
cltd
ret
push
ja
xchg
pushfw
mov
fnstenv
adc
and
dec
scas
cmp
popaw
hlt
dec
pop
rcrl
in
std
cmp
mov
xchg
rol
jg
imul
and
ficomps
sarl
mov
test
rolb
add
add
outsb
inc
sbb
sbb
push
in
shl
arpl
in
cld
dec
lret
insl
adc
fcomp
xor
cwtl
outsb
xor
xchg
fsubl
jae
mov
dec
dec
cli
fldt
jmp
cmp
es
stos
scas
out
aam
mov
inc
pushl
shrb
test
push
dec
or
ss
mov
cli
imul
ljmp
lea
jge
add
add
aas
mov
push
scas
xlat
jnp
lret
loop
mov
icebp
or
lahf
and
test
and
xchg
fcoml
jg
shlb
mov
cmp
aam
add
mov
push
repnz
test
jg
lret
jne
push
faddl
out
mov
scas
lcall
test
mov
sub
lret
test
xlat
inc
add
jl
push
jmp
push
xor
inc
cld
int
loope
inc
cmp
push
pop
fs
pop
int3
sbb
dec
cmpsl
in
add
aas
jmp
or
lret
loopne
insb
sub
mov
sub
enter
les
divl
mov
push
popf
xchg
jae
sti
int3
pop
mov
cld
fdivrl
aas
lds
and
add
jbe
add
mov
fsts
shrl
fiadds
jno
jbe
ja
push
test
ds
mov
sbb
jno
dec
sbb
loop
inc
jecxz
jl
pushf
fwait
sub
pop
sbb
jmp
push
scas
sub
jbe
test
and
popa
test
out
add
shrb
pop
leave
fs
cmp
add
test
scas
add
movsb
adc
add
jo
data16
je
inc
shrd
adc
mov
push
mov
pop
push
pop
cmpsl
or
loopne
push
scas
mov
add
shl
cmp
mov
pushf
add
cmp
push
and
cmp
inc
lret
outsl
push
mov
xchg
push
pop
sbb
jae
pushf
jecxz
insl
js
fsubrl
addr16
ja
hlt
sbbl
push
mov
roll
sub
test
xor
pusha
pusha
insb
movsb
cmovl
push
jno
xor
adc
mov
mov
lods
dec
cli
inc
mov
shll
cmc
adc
mov
lret
xchg
bound
call
outsl
mov
dec
lcall
mov
stos
push
aaa
jmp
outsb
fimuls
xchg
adc
out
pop
mov
bound
bound
xchg
add
mov
push
or
fcoms
jle
mov
movsl
std
jae
repnz
adc
or
ret
add
add
push
jb
fnstenv
gs
pop
jmp
sub
cmp
mov
imul
lahf
jno
and
dec
fbstp
int
and
call
mov
push
fildl
jno
or
out
into
popa
lods
ds
pushf
jp
leave
js
jge
push
mov
adc
xor
sub
mov
rol
push
outsl
dec
adc
mov
add
add
add
xchg
sahf
pop
es
gs
gs
cmpsl
cmp
fldl
push
cwtl
movsl
fistpll
ja
xchg
adc
pop
repnz
out
shll
mov
das
mov
sub
mov
ror
sar
lods
ret
cmpsb
ljmp
pusha
push
nop
xchg
inc
sub
popf
sub
push
adc
add
call
xchg
or
inc
arpl
data16
xchg
rorl
mov
or
sbb
push
std
dec
mov
fcmovbe
fbld
pusha
adc
in
in
nop
xor
enter
outsb
gs
fnstcw
scas
sub
cmp
sbb
loopne
shll
cmp
sarl
pop
jno
push
adc
lods
cmp
push
dec
clc
pushf
daa
xor
out
je
fcompl
mov
sbb
add
or
sbb
in
pop
xchg
mov
inc
pop
pop
pusha
cmc
cmp
jns
and
shrd
lods
mov
addr16
pop
mov
pop
rclb
addl
cmp
enter
lods
jb
or
mov
lods
sbb
addr16
sub
ret
dec
dec
inc
bound
mov
push
sbb
dec
fcoms
pop
hlt
mov
repz
inc
hlt
dec
inc
jg
xchg
jmp
jb
mov
xor
xorb
sub
dec
jmp
rcr
and
int
sbb
xor
in
dec
shrl
mov
in
fcompl
xor
mov
nop
es
aas
cmp
movsb
xchg
jns
pop
test
jnp
push
inc
jbe
movsl
push
or
andl
sbbb
das
mov
rorl
push
ds
jmp
xlat
jmp
pop
xor
add
mov
push
xchg
push
stos
pop
pop
mov
fstl
mov
mov
ffree
push
and
pusha
mov
gs
adcb
bound
shlb
mov
push
dec
popa
hlt
jno
rcll
dec
outsb
leave
mov
out
arpl
ret
ror
lods
xor
inc
jecxz
sbb
or
sub
call
jnp
push
jo
or
add
mov
lahf
add
mov
lahf
daa
cmp
rolb
jo
xchg
stos
out
dec
cmpsb
leave
mov
push
bound
jne
shlb
and
cwtl
enter
cli
push
rorl
popa
negb
loop
cli
rclb
add
adc
push
stos
xlat
xchg
scas
xor
pop
les
mov
mov
cmp
lock
inc
dec
mov
ljmp
loope
les
sub
js
add
scas
scas
xchg
imull
das
call
mov
fmull
jp
cmpsl
mov
nop
movsl
out
add
xchg
jmp
xlat
mul
repnz
rolb
mov
add
mov
sar
push
scas
pop
or
pop
inc
fdivrs
cwtl
shlb
dec
jecxz
mov
jle
xchg
subl
