jge
add
mov
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
pop
adc
add
add
jle
add
mov
add
sahf
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
push
adc
add
add
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
inc
js
cltd
jecxz
xor
js
mov
jb
lock
test
repnz
jno
mov
add
pop
and
add
fnsave
lahf
shlb
xchg
sub
mov
xorl
pop
push
xchg
in
lea
or
mov
jno
movsl
mov
clc
mov
and
cld
stos
stos
mov
cmpl
xchg
imul
or
jle
xchg
add
add
shlb
jge
dec
mov
sub
jnp
rcl
pop
cmp
adc
fnsave
bound
mov
sub
ljmp
repz
and
mov
pop
xor
ja,pn
sub
stos
sub
test
sub
mov
dec
ret
jno
bound
pushf
mov
out
andl
testl
mov
jae
jg
mov
test
test
add
adc
mov
mov
clc
adc
pop
mov
movsb
xor
outsl
mov
insl
or
inc
xchg
cmpsl
and
bound
push
stos
xor
repz
popf
mov
mov
add
inc
ret
dec
iret
mov
push
es
sub
fdiv
add
fisubl
cltd
jno
or
cmpsl
mov
out
push
in
ficoml
ljmp
je
add
stos
jb
pop
mov
mov
sbb
fildll
cmp
fiadds
popa
pop
movb
cld
dec
int3
inc
mov
adc
movsb
jmp
xchg
aam
jns
xor
outsb
out
mov
sub
dec
jno
xchg
sahf
jae
pop
jne
sarb
mov
lret
lret
cmp
fdivl
pop
mov
push
add
inc
xor
or
iret
xchg
imul
and
xor
cs
xor
jnp
adc
cmp
jmp
stos
fptan
loope
pop
jnp
sbb
push
cmp
loop
mov
jg
or
mov
pop
mov
sub
ja
or
pop
and
rcrb
cs
lock
int3
xchg
call
cmp
not
pop
popf
push
adc
cmpsl
sbb
lods
daa
rcrb
dec
std
pop
jo
adc
enter
cmp
daa
xor
jne
stc
stos
not
in
sub
sti
sub
lods
inc
js
xor
sub
mov
fdivl
push
cmpsb
sti
jmp
mov
mov
aas
psubusw
jnp
cld
pop
cs
stos
pop
cmpsb
or
mov
popa
shll
adc
xchg
jp
cmp
fs
mov
out
xor
fucomi
repnz
in
inc
pop
in
pushf
fildll
rclb
sub
adc
mov
jne
push
mov
orl
shr
xchg
sub
jp
fiaddl
dec
mov
popa
rorb
sbb
jmp
inc
cmp
dec
scas
mov
cltd
jmp
sbb
lods
imul
insl
popa
or
xor
xor
shr
add
cmp
fwait
mov
sub
aaa
cmp
pop
scas
add
cmpsb
mov
nop
movl
lea
or
or
out
movsl
pop
mov
push
add
mov
push
cltd
xor
test
inc
std
sub
popf
or
cmc
mov
pop
pop
sub
call
jns
xorl
ror
fwait
mov
push
or
cmp
mov
iret
dec
adc
jmp
mov
mov
cmpl
out
mov
xor
xor
pop
cmpsl
fs
fstpt
push
dec
nop
xor
sbb
push
repnz
and
inc
nop
popf
jae
or
mov
mov
into
xor
jle
fs
pop
addr16
jmp
add
ja
sbbb
add
xchg
loope
pop
mov
stos
incb
dec
fcmovnbe
mov
arpl
pop
or
lret
push
add
cmc
jbe
shlb
loopne
lods
es
int3
fisubl
cmp
cmp
out
fldl
outsb
or
lret
push
jl
hlt
xchg
fildll
rolb
repnz
rcrb
mov
add
cld
rclb
xor
and
push
xor
cmc
or
jbe
fbld
or
xlat
pop
loope
dec
dec
push
leave
sub
xor
pop
push
and
ja
js
add
aad
cmpsb
fwait
fs
iret
cmp
data16
stos
fisttps
cwtl
testl
xchg
or
stos
cmpsb
es
mov
scas
lds
loop
xor
cwtl
mov
adc
pop
fstpl
inc
xchg
jg
lret
mov
andb
or
stos
sbbb
aas
mov
sub
mov
iret
adcb
mov
inc
in
cmpl
adc
loopne
in
dec
pop
xchg
out
sbb
add
push
xor
mov
mov
or
dec
inc
out
call
jne
imul
adc
out
sarb
out
cmp
adc
sti
jle
and
in
push
aas
and
lods
imul
into
push
jl
int
jnp
jbe
cs
movsb
jle
mov
jl
test
mov
push
xchg
cmpsb
outsl
insb
mov
outsb
xor
inc
sbb
in
outsb
pop
imul
cmp
das
call
int
mov
sub
loopne
cli
pop
mov
fbstp
loopne
xchg
cmpsl
push
push
fnstcw
leave
fstpt
fsub
test
sub
iret
dec
or
into
lea
repnz
xor
faddl
les
mov
xor
pop
mov
dec
sahf
xor
js
insb
pop
loop
adc
pop
push
inc
adc
inc
pop
pop
adc
pop
mov
rep
sbb
test
fisttpl
enter
xor
out
mov
dec
out
push
mov
jae
das
lods
dec
cmc
mov
stos
inc
ss
aaa
hlt
pop
movsb
shll
mov
and
fnstcw
mov
pop
outsb
sub
sub
adc
in
aad
insl
in
jg
push
push
mov
cmp
xlat
inc
cmp
ds
adc
xor
cmpsb
push
pop
sti
jno
shlb
push
dec
push
jle
fsubrs
into
ds
and
data16
or
fwait
rorb
lods
int
pusha
mov
lcall
repnz
dec
rol
repz
jmp
adc
inc
pop
rolb
mov
cmp
repz
out
mov
into
repnz
cmp
xchg
andb
xchg
pop
ret
mov
aaa
xor
mov
mov
xor
imul
popf
icebp
je
out
sub
idivl
mov
cs
sub
sarb
sbb
cwtl
xchg
adc
cld
divl
stc
lahf
movsb
dec
je
lock
or
dec
jnp
xor
xchg
mov
imul
fmull
sub
shrl
cmpsl
push
fisubrs
icebp
stos
jbe
es
push
mov
mov
popf
lock
xlat
cltd
pop
pop
mov
add
das
cmpsb
test
sbb
cmp
jne
mov
xlat
inc
pop
das
leave
mov
mov
hlt
std
mov
push
mov
inc
sub
call
sub
movswl
call
movswl
push
inc
call
dec
inc
inc
inc
add
mov
call
movsbl
mov
movzwl
imul
or
imul
sub
and
sub
sub
sub
sub
dec
mov
call
mov
add
inc
and
lea
call
movsbl
inc
call
inc
mov
imul
inc
xor
sub
dec
inc
mov
pop
or
inc
inc
add
dec
pop
dec
dec
pop
mov
dec
lea
sub
pop
lea
movsbl
imul
mov
dec
inc
mov
lea
pop
add
imul
pop
add
add
mov
mov
and
call
imul
dec
imul
lea
ret
and
mov
push
imul
imul
push
lea
inc
push
movzwl
inc
push
add
mov
push
movswl
mov
mov
inc
movzbl
push
inc
ret
push
inc
inc
dec
dec
lea
or
dec
push
add
inc
push
sub
call
pop
ret
jmp
mov
and
mov
imul
movzbl
add
or
xchg
dec
add
movswl
dec
xor
dec
add
and
dec
inc
inc
dec
dec
jne
mov
mov
inc
and
pop
add
imul
pop
dec
inc
pop
or
sub
mov
dec
lea
add
mov
mov
mov
lea
lea
add
ret
push
dec
movsbl
add
mov
mov
dec
mov
dec
push
push
push
push
inc
lea
inc
push
mov
add
mov
movsbl
inc
add
dec
mov
dec
mov
inc
push
lea
sub
xor
mov
add
push
dec
mov
push
dec
lea
pushl
movswl
call
imul
add
lea
or
inc
mov
inc
sub
inc
pop
ret
jb
or
xor
dec
mov
xor
inc
mov
movswl
sub
inc
inc
mov
inc
dec
inc
or
mov
cmp
jb
mov
mov
sub
inc
xor
inc
dec
xor
and
pop
add
xor
test
jbe
inc
and
inc
movswl
movzbl
lea
lea
inc
dec
imul
or
inc
mov
movzwl
or
imul
inc
dec
inc
inc
movsbl
mov
imul
and
dec
dec
mov
add
and
movzbl
add
or
add
sub
inc
and
inc
mov
inc
dec
mov
dec
imul
mov
sub
lea
mov
imul
lea
mov
mov
dec
dec
jne
inc
mov
inc
mov
inc
dec
lea
imul
imul
and
add
dec
mov
dec
mov
add
mov
inc
inc
mov
inc
mov
dec
lea
test
jbe
mov
or
mov
lea
and
or
dec
mov
add
sub
lea
sub
imul
inc
mov
inc
lea
xor
dec
and
dec
add
and
add
dec
mov
add
dec
movzbl
imul
dec
add
mov
imul
and
add
add
mov
inc
sub
movzbl
imul
lea
mov
lea
dec
mov
inc
lea
movzbl
dec
dec
add
dec
jmp
push
call
inc
xor
sub
and
xor
add
dec
inc
inc
inc
inc
mov
dec
xor
sub
mov
or
mov
shl
lea
mov
xor
add
dec
push
or
dec
inc
call
inc
pop
add
dec
and
mov
or
mov
lea
dec
cmp
je
call
call
dec
iret
imul
movswl
xor
imul
sub
dec
sub
dec
lea
xor
mov
dec
movswl
dec
pop
mov
ret
push
sub
movzwl
mov
dec
dec
push
lea
mov
push
lea
push
lea
push
movzbl
dec
push
dec
mov
mov
inc
add
call
add
push
lea
push
add
pop
add
inc
mov
mov
add
mov
imul
lea
inc
imul
inc
dec
je
inc
lea
dec
add
imul
lea
inc
add
lea
mov
imul
movzbl
mov
movzwl
mov
mov
dec
repnz
inc
mov
add
add
jmp
lea
inc
dec
dec
dec
inc
sub
mov
add
imul
dec
inc
jmp
mov
dec
add
inc
pop
pop
ret
push
sub
mov
inc
add
lea
dec
inc
dec
mov
lea
inc
movswl
movswl
movzbl
inc
mov
add
inc
sub
lea
inc
inc
mov
add
or
imul
pop
ret
sub
mov
mov
lea
movsbl
mov
imul
inc
mov
or
dec
mov
imul
dec
xor
mov
lea
mov
mov
mov
inc
imul
inc
mov
add
mov
lea
cmp
jb
inc
push
or
mov
push
inc
inc
push
mov
mov
mov
dec
movzbl
xor
dec
imul
xor
dec
mov
xor
sub
lea
push
movzbl
xor
xor
mov
mov
lea
dec
mov
mov
movzbl
dec
add
inc
lea
add
sub
imul
add
dec
dec
movzbl
add
inc
add
dec
lea
imul
inc
lea
inc
add
lea
mov
or
imul
lea
dec
sub
cmp
jmp
jge
inc
idivl
dec
rorb
push
data16
xchg
clc
cmpsb
call
movsb
push
lock
xor
js
rorb
mov
jge
outsb
jnp
or
stc
out
adc
into
das
das
cltd
les
inc
cwtl
dec
xchg
popa
loop
sub
popf
fbstp
or
dec
das
js
jns
sub
mov
pop
add
mov
pusha
aas
jb
sbb
mov
push
xlat
or
cld
shl
sbb
stos
xchg
test
add
adc
cmpsl
mov
daa
and
std
orl
dec
cwtl
lcall
cmp
cmc
push
add
mov
inc
scas
sub
add
jge
test
xchg
js
cli
stc
int
insb
or
jmp
test
iret
pop
lret
aaa
xchg
pusha
push
inc
jge
cmp
rcr
in
sbb
and
dec
push
std
add
mov
mov
inc
cmp
mov
lea
mov
shll
jae
loope
movsl
ret
fnstsw
mov
push
sbb
sbb
mov
mov
dec
cmp
inc
or
shlb
rol
roll
jp
int
shll
inc
sbb
test
sar
jns
scas
and
sub
sbbb
add
stos
dec
xor
lods
int
or
push
adc
test
jg
adc
sub
cmpsl
stc
shl
pop
pop
lods
jnp
pop
mov
std
adc
push
pushl
xchg
add
mov
lds
aad
pop
movsl
mov
adc
mov
andl
pop
add
xor
jl
bound
jge
pushf
jbe
fadd
ret
lret
sti
andl
xchg
jne
cltd
fnsave
lods
out
lds
mov
jne
ficoml
push
push
xchg
add
pop
clc
xchg
mov
push
xlat
xlat
mov
in
ficoml
sub
js
or
imul
int
mov
hlt
xrelease
sub
in
push
mov
mov
push
out
out
lahf
cmpsb
cmpl
mov
push
sub
jno
inc
push
daa
loope
mov
divb
jecxz
adc
add
scas
mov
xchg
rclb
push
mov
sub
sub
daa
jl
and
xchg
out
push
xor
lret
incb
adc
cld
in
xchg
pop
mov
xlat
and
in
xchg
insb
push
push
adc
add
jo
pop
jne
jae
mov
push
sub
fisubrl
inc
orb
pusha
adc
inc
negb
jl
addr16
sbb
jno
jns
mov
cmp
aam
push
aas
mov
enter
lcall
test
mov
pusha
pop
lcall
inc
pushf
int3
gs
popa
add
push
xor
add
out
cmpsb
inc
in
ror
cs
test
scas
push
dec
in
ljmp
sub
dec
mov
outsb
div
ja
jo
jae
xchg
xlat
bsf
mov
or
cltd
push
lock
cmp
inc
mov
in
jp
std
jmp
dec
rcrl
adc
or
push
cli
add
js
insb
inc
std
hlt
iret
sbb
outsb
clc
scas
jae
or
sub
sahf
mov
mov
jns
lods
test
mov
bound
add
ret
popa
lea
ss
sub
pop
add
pop
icebp
mov
sub
mov
push
shl
push
pop
sub
ja
cld
lds
mov
dec
repnz
pop
imul
ficomps
ret
enter
add
stos
jnp
jb
in
loopne
scas
out
out
mov
pop
mov
dec
push
adc
movsb
cs
test
inc
repnz
test
xchg
fidivl
push
xor
insb
sbb
mov
int
mov
shl
aad
dec
gs
insb
mov
lret
sbb
mov
fldcw
jns
enter
test
pop
push
xchg
popf
loopne
pop
pop
std
scas
add
adc
cmp
test
imul
pop
xor
adc
lock
push
stos
shll
pop
inc
imul
in
stos
adc
iret
roll
jnp
dec
negl
aas
lret
pop
scas
pushf
mov
arpl
and
jne
mov
lcall
lods
jmp
mov
push
xor
gs
xchg
pop
inc
push
push
or
loopne
test
roll
or
adc
cmpsb
xlat
push
jmp
sub
xchg
jp
inc
stos
clc
and
loopne
cld
adc
clc
fwait
push
dec
xor
xchg
aaa
jae
ja
popf
inc
fs
add
or
jo
pop
add
movb
sbb
dec
xlat
and
push
pop
ja
mov
pop
popa
es
cmp
cmp
cmp
lock
int3
test
movsl
mov
ret
fildll
push
in
jg
ja
addr16
in
or
fcmovu
dec
cli
scas
shlb
lea
xor
add
mov
bound
push
cmp
test
jmp
mov
ljmp
mov
popa
lock
ret
popf
pop
mov
jno
or
into
mov
jae
dec
stos
pusha
fwait
xchg
push
jno
insl
rorl
or
xchg
mov
pusha
mov
daa
jl
imul
and
pop
pop
inc
jne
mov
dec
cmpsb
adc
cmp
jge
aas
sub
cmpsl
jp
xchg
cmp
add
mov
repnz
add
ljmp
cmp
fdivrp
pop
cmp
jecxz
and
add
in
cmc
inc
push
add
push
and
enter
rcrb
add
repz
xchg
mov
jmp
jp
imul
push
xchg
adc
push
pop
imul
mov
inc
bound
repnz
sbbl
inc
push
push
mov
push
mov
fisttpll
xchg
ret
pop
pop
xchg
cmpb
bound
and
and
pop
test
adc
mov
mov
add
in
pop
sub
dec
xor
cld
jge
adc
sbb
loope
movsl
loope
xchg
push
icebp
sub
jae
lss
fadds
sbb
pop
test
xor
and
pop
or
xchg
xchg
insl
mov
cwtl
out
mov
dec
xlat
mov
mov
pop
add
push
insb
cwtl
dec
xlat
fisttps
xor
jo
cld
test
jg
xchg
pushf
mov
inc
test
mov
dec
jnp
add
sub
arpl
mov
inc
adc
cmp
dec
dec
frstor
jmp
jle
xchg
add
pop
jo
leave
sub
mov
std
adc
lock
push
mov
leave
ja,pt
rclb
inc
scas
pop
mov
in
push
stos
jno
or
aam
nop
sahf
mov
jns
shrl
adc
mov
mov
ljmp
or
mov
dec
mov
dec
cmp
stc
rol
push
pop
xor
xchg
aad
bound
cmp
mov
mov
and
ds
aam
iret
mov
not
jno
xor
mov
jae
or
pop
mov
stos
jg
movsl
bound
loope
mov
shl
leave
jecxz
mov
jecxz
aaa
pop
in
push
out
mov
pop
mov
jbe
jge
inc
mov
leave
rep
or
into
inc
test
and
popf
fs
add
sbb
lret
fs
and
cmp
mov
xchg
inc
imul
movsl
mov
xor
lds
pop
call
inc
mov
cmpsl
les
nop
daa
jle
repz
addw
or
scas
fmull
dec
cltd
sub
es
adc
repz
mov
dec
inc
mov
rcr
cmp
pushf
mov
cmpsl
stos
mulb
push
mov
lret
cld
movsb
sub
mov
js
jle
push
nop
es
push
mov
push
mov
cmp
pop
and
pushf
sub
dec
xchg
mov
je
std
test
mov
scas
jno
imul
ror
sub
adc
mov
mov
pop
fistps
push
test
xchg
fsubrl
push
xchg
xor
mov
and
mov
test
mov
adc
jo
jl
xor
scas
scas
dec
mov
testl
push
mov
or
mov
xor
mov
gs
imul
cli
pusha
push
fsubrl
add
pop
cwtl
outsl
movsb
fsub
loopne
les
sub
pop
push
jp
pop
lods
jo
repz
call
pushf
push
or
mov
cmpl
xchg
outsb
insb
push
imul
fsubl
xchg
adc
push
or
scas
xchg
dec
sbb
hlt
pop
push
pop
in
stos
pop
pop
out
test
jno
fs
fwait
lea
mov
mov
test
sub
add
and
andl
loope
sub
add
fcomps
push
dec
inc
xor
test
in
out
dec
adc
mov
add
inc
and
insl
daa
dec
mov
cli
or
xchg
mov
inc
or
mov
inc
pop
xchg
movsb
xchg
inc
div
push
xlat
jle
and
lret
cli
inc
push
sub
cmp
cs
jae
adc
leave
out
pusha
popa
fcomp
push
movsl
movsl
sub
pop
adc
add
mov
cmp
outsb
sbb
movsl
hlt
mov
push
divl
mov
pushf
repz
cs
add
out
xor
fldenv
push
xor
mul
sub
imul
rorb
and
in
lret
mov
and
gs
idivb
add
jge
mov
xchg
mov
lahf
dec
sub
inc
xchg
shlb
push
jns
repz
dec
iret
mov
push
mov
fmull
imul
mov
add
pop
test
cmp
push
test
jne
push
stos
fnstsw
push
out
fistpll
sbb
push
out
movb
ret
jg
push
sahf
mov
decl
faddl
sbb
subb
inc
mov
mov
ret
subl
cltd
mov
xchg
mov
inc
pop
mov
outsb
jo
mov
mov
movsb
sbb
sbb
dec
mov
or
adc
mov
pop
push
xchg
and
gs
dec
xor
and
sub
mov
jg
pop
je
xchg
fidivs
addr16
stos
sahf
adc
loop
xchg
out
mov
add
pop
movsl
pop
shr
and
rcrb
pop
cwtl
cltd
mov
cld
bound
jge
cmp
ds
repnz
loop
xchg
add
xchg
cld
inc
pop
inc
jecxz
mov
push
jb
xchg
sub
sub
cmc
adc
imul
add
sti
pop
outsb
mov
neg
in
cmp
ljmp
sbb
push
fwait
add
imul
mov
sub
leave
out
je
jnp
cmp
jl
push
sub
shll
adc
sahf
test
mov
mov
add
lret
bound
sub
fwait
inc
js
jp
mov
scas
cmpsb
push
mov
and
rclb
decb
rorb
mov
jb
mov
leave
out
test
sbb
dec
fisubl
sbb
daa
jmp
mov
mov
push
sub
mov
call
inc
rorb
test
movsl
pop
add
cmp
movsb
push
popa
mov
and
adc
out
sbb
sub
xchg
adc
pop
or
ss
lret
mov
lds
push
roll
and
sbb
mov
jnp
sub
decb
movsl
jnp
pop
adcb
lods
mov
jb
aam
inc
in
xor
jns
push
jmp
push
pop
ror
fwait
pop
cmpsl
push
cltd
mov
inc
push
je
inc
gs
je
shrl
sbb
ss
call
sbb
inc
inc
setnp
call
movsl
mov
pop
sbb
sub
sub
push
loope
divb
lods
or
scas
jmp
pop
xorb
mov
or
inc
xchg
sbb
cmc
jmp
and
jl
das
out
mov
ss
scas
cld
sbbb
ljmp
lcall
sahf
dec
pop
stos
add
mov
or
xchg
dec
imul
xorl
lds
pop
mov
rcll
cltd
gs
fistps
out
adc
dec
pop
lock
add
cmp
and
push
insb
adc
cmp
in
das
scas
das
ret
dec
jo
mov
in
adc
leave
xor
sub
cld
stos
pop
xchg
add
and
xchg
mov
sbb
push
xchg
sbb
dec
push
sbb
mov
rorl
sbb
xor
inc
pop
cmp
and
in
add
and
movsl
pop
leave
jno
mov
stos
dec
adcb
aam
and
adc
ja
stos
loopne
pop
insl
jnp
mov
bound
frstor
incl
or
fisttpl
push
fisubrs
ss
enter
scas
pop
jp
jp
mov
ljmp
test
sarl
adc
int
subl
test
sbb
dec
popf
inc
jmp
lcall
fistpl
outsl
rep
mov
jp
sub
and
data16
jl
mov
sub
mov
loopne
add
sti
cmp
push
lahf
lret
aaa
xor
sub
sbb
lock
pop
movsl
sub
movsb
icebp
pop
dec
mov
pop
sbb
out
jp
xchg
adc
leave
aaa
repnz
mov
rol
fsts
push
mov
sub
jb
cmp
ljmp
mov
insl
stos
fcomi
push
push
adc
iret
sqrtps
scas
int
hlt
or
sub
out
dec
aaa
push
pop
sbb
and
jle
pushf
ret
ret
les
roll
loope
pop
movsl
popf
mull
inc
adc
pop
lods
inc
adc
jno
addr16
mov
outsl
jns
out
imull
lcall
pop
cmp
out
cmc
jns
loopne
mov
mov
bound
or
ss
repz
and
adc
in
cmpsb
mov
sub
or
in
sbb
xchg
xor
or
icebp
aas
mov
mov
push
mov
mov
xlat
xor
jb
add
jae
inc
aad
push
subl
inc
out
cmp
arpl
leave
sbb
mov
arpl
or
dec
cmp
push
xchg
jmp
cmp
gs
rcl
daa
lret
mov
movsb
push
push
inc
cs
push
push
movb
adc
outsl
fsubp
and
shr
arpl
fwait
jnp
lea
aaa
rcll
sahf
popa
xorb
mov
mov
jmp
dec
adc
or
fidivs
xor
jbe
jcxz
out
daa
ffree
cmc
rcrb
testb
mov
dec
imul
scas
push
idiv
xchg
sub
or
mov
and
frstor
movsb
push
pop
jne
lods
ret
adc
test
idivl
test
lahf
aaa
or
sbb
mov
mov
nop
mov
rol
imul
jnp
cmp
lret
out
mov
inc
jb
aad
cli
clc
jne
push
jmp
inc
popa
out
lret
aam
mov
jge
je
inc
pushf
ret
dec
xchg
cltd
xor
adc
enter
jne
adc
js
mull
lahf
pop
jle
mov
xchg
icebp
jge
or
jo
leave
out
in
xorl
xchg
adc
testl
lods
xor
mov
ret
gs
orb
jbe
add
imul
mov
and
jge
jnp
mov
mov
sbb
das
mov
rol
jbe
test
mov
hlt
cld
dec
pushf
fsubl
int3
jb
jae
int3
aas
cmp
jle
insl
jns
mov
ret
xor
xchg
out
mov
mov
in
jle
insl
xor
sbb
mov
stos
nop
pop
jecxz
push
pop
imul
pop
push
inc
mov
out
mov
adc
push
push
lret
push
bound
or
mov
stos
adc
sbbb
xor
inc
fisttps
sbb
movsl
jg
popf
in
dec
xchg
mov
into
mov
adcb
xchg
jp
test
in
cli
hlt
repz
mov
aas
int
or
push
out
sbb
std
lods
add
loope
add
and
fisubs
shrb
stos
inc
cld
ja
pusha
xchg
dec
sbb
pop
push
fdiv
test
xchg
lods
inc
es
jge
cmp
aam
imul
sub
rorb
pop
sbb
jl
out
fnstenv
cltd
and
sarl
cmp
push
mov
in
xchg
jb
cld
mov
loopne
pop
adc
sahf
out
es
aam
in
and
xchg
enter
dec
xchg
dec
int3
inc
lret
hlt
cmp
aad
adc
ja
cmc
repz
mov
out
lods
bound
out
in
mov
or
fninit
mov
xor
cltd
dec
aad
sub
pop
add
dec
mov
repz
sub
sbb
lods
push
mov
pop
add
sbb
out
sub
dec
sub
in
inc
inc
andl
das
aam
dec
fmull
fadd
cmp
js
out
or
int3
adc
mov
sub
loop
bound
mov
cmp
lcall
nop
outsb
inc
mov
mov
cwtl
call
dec
push
sbb
cld
test
aad
jl
adc
lahf
test
add
fs
fs
sahf
dec
iret
push
add
rolb
fwait
xchg
inc
cmpsl
xchg
add
mov
jle
push
inc
mov
fildl
jno
or
mul
std
out
inc
pop
fwait
mov
pushf
sbb
fildl
es
inc
je
lret
out
insb
bsr
cmc
sub
notl
cs
adc
test
mov
jb
aam
xorl
fldcw
and
stc
and
out
cli
adc
push
popa
test
push
out
sbb
fcompl
js
fcoml
mov
dec
add
or
xor
test
lods
push
scas
out
fdivr
int3
std
aaa
aas
cmpsb
loopne
push
sbb
pop
pop
popa
push
jo
nop
ja
pop
icebp
enter
xchg
and
call
xchg
xor
js
pop
or
mul
sub
jns
pushf
int
jo
adc
rcr
bound
mov
imul
scas
jecxz
rol
or
pop
inc
sub
nop
sarl
jbe
call
loop
xor
jns
scas
hlt
and
fdivr
andl
add
mov
jae
ja
cwtl
cmp
sti
or
fs
movsb
shll
or
out
push
mov
sub
daa
mov
cmp
subb
jo
pop
xchg
iret
jbe
jecxz
pop
mov
lea
cmpsb
sbb
push
mov
push
adc
add
shl
xor
hlt
in
adc
stc
xor
or
pop
and
add
jb
push
fucomip
test
mov
cmp
out
push
jb
popf
ret
scas
cmp
mov
repnz
dec
push
adc
push
sarb
ds
int
cmc
cmp
lock
lods
ja
jp
fisttpl
notl
add
and
rcr
fcompl
or
cmp
xchg
sub
daa
and
fsts
add
jecxz
mov
lret
nop
pusha
and
pop
mov
pop
mov
js,pt
out
imul
jno
sbb
subl
pop
add
pusha
pop
int3
lahf
mov
jnp
jbe
mov
pop
push
daa
fidivrl
jp
xchg
push
pop
xor
stc
add
dec
jns
push
dec
ja
outsb
sbb
xchg
xor
cmp
or
mov
sbb
add
cltd
loop
inc
mov
sbb
mov
in
push
cmp
mov
pop
mov
xor
es
xor
mov
mov
stos
in
bound
cld
add
fdivs
jecxz
jae
scas
jns
and
add
flds
sbb
dec
sti
inc
push
lcall
test
pop
notb
idiv
popa
jno
sahf
lods
sbb
popf
stos
jae
nop
sub
dec
je
in
movsb
icebp
iret
loop
mov
mov
sbb
mov
repz
pop
push
cs
hlt
pop
jl
and
xor
in
or
sbb
jp
shrl
add
jo
adc
inc
scas
jecxz
xor
and
mov
xor
mov
add
sbb
pop
stc
arpl
lret
scas
rolb
cltd
mov
movsb
frstor
daa
into
add
push
outsb
push
push
cmp
into
sbbl
pusha
les
mov
loopne
imul
jle
xor
jge
mov
mov
mov
jbe
dec
sub
in
push
js
lea
cs
or
repnz
rorb
inc
clc
xchg
add
cmp
sub
jecxz
adc
subb
outsb
inc
adcl
xor
popf
movsb
jae
ja
cmp
pop
pop
mov
int
push
dec
add
adc
sub
cwtl
rep
mov
or
scas
mov
adc
mov
in
test
scas
push
and
mov
scas
cld
or
lds
data16
pop
push
test
loopne
mov
and
jmp
push
repnz
jmp
xchg
mov
out
mov
sub
scas
stos
xor
sbb
ljmp
xchg
pop
rorl
mov
mov
stos
mov
jo
mov
inc
js
subb
subl
loopne
shrb
add
add
pop
pop
cli
add
cmc
cmpsl
stos
hlt
adc
or
mov
sub
push
sahf
sbb
dec
push
clc
imulb
iret
shl
arpl
inc
rorb
jge
sti
jmp
gs
lock
outsl
repz
inc
ret
inc
push
bound
out
roll
cmp
mov
cltd
insl
or
in
adc
push
inc
cmpsl
mov
dec
decl
sbb
pop
sub
jns
into
pop
pop
and
testb
movsb
and
pusha
push
popa
jmp
mov
ficompl
gs
aam
daa
sbb
cmp
dec
aaa
xchg
push
lcall
mov
inc
popa
movups
xlat
loop
sbb
dec
xchg
stc
nop
imul
ucomiss
push
pop
pop
pop
inc
orb
mov
mov
mov
cs
jne
jmp
mov
decb
xor
pusha
or
cmpsb
in
ss
sbb
or
adc
mov
fidivl
sub
scas
pop
les
mov
push
rolb
mov
std
pop
sbb
jl
add
mov
xchg
imul
cmpl
push
pop
xchg
icebp
lods
cmpsl
cmp
cmp
xchg
ja
and
loopne
fadds
hlt
add
popa
clc
aas
fisubl
aas
xchg
jo
movsl
ja
jl
std
lret
into
aam
sahf
xchg
arpl
mov
sbb
adc
scas
inc
adc
pop
and
jle
push
cmp
fmuls
xchg
lea
sbb
cld
mov
rcll
and
push
fs
subl
xor
mov
dec
push
cmp
movsb
sub
xchg
dec
flds
pop
outsl
mov
movsl
cmp
push
ret
jne
push
mov
mov
inc
fmuls
sbb
xor
mov
pop
cmp
jecxz
es
imul
dec
inc
pop
cmp
inc
sub
pop
int3
cmp
iret
lods
cmp
ss
aas
or
js
scas
jb
cld
mov
lahf
filds
xchg
pop
out
push
cmc
or
int
jp
int
mov
orb
arpl
add
dec
popf
pop
call
roll
jmp
mov
sar
rorl
add
sti
cltd
mov
inc
pushf
add
fcoml
clc
pop
imul
cmp
mov
mov
fcmovnb
lds
sbb
jl
inc
jmp
inc
xchg
cmp
scas
test
je
outsl
pop
cmp
add
orb
psubw
and
fldcw
popa
int3
pop
dec
push
push
xchg
divl
mov
fsubrl
lods
fistl
dec
lods
ljmp
daa
mov
leave
leave
sbb
popa
adc
sub
sub
xlat
fdivl
pop
fildll
test
xor
gs
push
mov
sub
out
mov
mov
jne
sbb
aas
mov
inc
push
stc
sbb
dec
xchg
pushf
cmpsb
ljmp
ljmp
sbb
les
iret
cmc
ja
xchg
mov
cmc
mov
lahf
std
pop
inc
hlt
addr16
inc
shlb
jne
ljmp
fisubs
pusha
push
sub
js
push
popa
inc
dec
xchg
aad
mov
insb
rcl
inc
das
in
add
mov
lock
xor
loope
cmpl
or
inc
sbb
in
jne
sub
je
mov
outsb
cmp
mov
sbb
jns
push
adc
xor
jge
stos
pop
cli
repnz
mov
push
inc
dec
and
int3
jnp
mov
push
bound
add
aam
jbe
adcl
and
push
in
hlt
loope
inc
jnp
adc
scas
shl
nop
es
fwait
shll
lods
jbe
negl
push
daa
xchg
inc
call
movsl
add
or
stos
mov
push
out
pop
xchg
stc
icebp
jle
pop
pushf
adc
fisubrs
push
jne
pop
loope
lea
ds
or
outsl
iret
stos
or
int
cli
imul
mulb
cmc
daa
pop
pop
push
fcomps
leave
pushf
jo
xor
push
jo
sbb
sbb
fs
sbb
mov
enter
nop
xchg
sahf
es
add
cmc
nop
or
movsb
mov
inc
push
or
ficoml
jmp
dec
sbb
xlat
movntps
jb
xchg
testl
scas
movsl
push
xchg
enter
inc
xchg
add
push
pop
sbbb
daa
fldt
imul
cwtl
add
enter
mov
mov
jne
mov
fists
pop
pop
and
jecxz
mov
push
adc
js
arpl
push
aad
adc
sbb
dec
push
iret
mov
lahf
and
ja
adc
sub
sub
sbb
insb
push
loope,pn
outsl
stos
sbb
mov
or
stos
inc
pop
fdivrs
jnp
hlt
mov
xchg
dec
loopne
add
inc
ja
sub
cmp
or
add
or
pop
add
repnz
mov
pushf
cmp
movsbl
sti
or
outsb
push
dec
pop
movsl
jmp
push
test
cmp
lcall
inc
test
mov
std
int
and
ss
out
test
fstpt
cli
xor
movl
xor
push
dec
xchg
jne
push
sbb
mov
jecxz
movsl
std
adc
mov
rorb
and
mov
test
xor
mov
add
inc
and
xor
mov
push
mov
mov
pop
adc
dec
rcrb
pop
scas
jmp
icebp
sbb
sub
stos
stc
jo
push
into
out
roll
add
jge
loopne
jno
imul
xchg
in
mov
in
test
stos
pop
ret
mov
inc
pop
cld
aas
add
pop
mov
xchg
xchg
sbb
jg
outsl
mov
ret
push
mov
push
jl
mov
outsl
sub
loop
xchg
jae
mov
add
mov
xorb
xchg
stc
mov
adc
int
mov
stos
push
jae
mov
jno
mov
mov
inc
push
or
pusha
lds
adc
mov
aad
xchg
in
xchg
push
jge
jle
enter
or
in
mov
daa
out
rcll
stos
lahf
ds
mov
fisubl
adc
and
ja
aaa
sbb
or
aam
repnz
lahf
imul
addb
popf
outsl
mov
inc
mov
cmpsb
cmpsl
xor
xchg
pop
inc
adc
jg
ret
iret
xchg
and
inc
inc
jp
das
lock
xor
dec
xor
ljmp
inc
insb
pushf
cmp
insb
bound
pop
repz
lret
imul
push
mov
stos
rorb
cmovp
lahf
cvtps2pd
data16
adc
xlat
cmc
arpl
test
daa
fildl
enter
gs
mov
out
mov
sbb
call
fadds
gs
aas
xchg
in
popa
ret
dec
push
jae
xchg
adc
movsb
cmp
pop
movsl
mov
mov
pop
ret
sub
cs
cltd
cld
mov
inc
mov
pushf
inc
in
inc
jg
neg
loop
cld
fwait
mov
pop
in
sbb
enter
xchg
test
xchg
jp
push
mov
notl
arpl
adc
test
addr16
js
insb
scas
imul
mov
jecxz
loope
mov
test
mov
das
inc
lret
add
mov
es
pop
xor
cmp
add
stos
jbe
fs
sbb
stos
or
xor
out
pop
cmovl
bound
jns
fldt
aad
ficoml
rolb
mov
inc
dec
inc
icebp
mov
fsts
jo
stos
inc
push
mov
shll
push
mov
out
imul
cmpsb
sbb
pop
aaa
jae
dec
cmp
in
mov
sarb
mov
ficoms
jnp
das
lahf
sti
pop
or
shll
idiv
and
sub
imul
and
lds
popa
add
push
sbb
mov
mov
xchg
aam
cmpsl
mov
lret
icebp
jnp
and
sbb
data16
sahf
stos
mov
repz
fistps
iret
mov
add
adc
push
repz
mov
sub
repnz
cs
pusha
pop
mov
push
cmp
ds
pusha
int
jae
lcall
or
in
icebp
jp
mov
test
inc
adc
ja
jge
int3
lahf
add
das
sbb
rolb
lret
sti
xor
cmp
dec
stos
les
mov
jl
or
mov
jmp
sub
fidivrl
ljmp
out
test
pop
jl
bound
sar
in
or
xor
rcl
sbb
adc
imul
mov
popa
xor
jns
aas
push
jle
lahf
dec
pusha
dec
lret
pop
sbb
or
nop
xor
leave
xor
loope
add
mov
inc
out
inc
push
mov
add
or
jnp
cltd
add
or
in
pusha
das
or
or
mov
inc
cld
mov
lcall
sarb
mov
jle
test
into
adc
xor
push
mov
xchg
loopne
pop
pop
sub
xchg
pop
pop
mov
scas
cmp
bound
xor
and
xchg
out
xchg
jle
cltd
push
xchg
stos
add
repz
mov
cmp
gs
popf
xchg
fcomps
xlat
js
sahf
fisubrs
cmp
cmp
repz
incb
lock
es
push
rcrl
jp
subb
roll
movsl
push
sub
add
test
sub
cltd
dec
cmp
test
out
mov
andb
adc
mov
lods
fnstenv
je
fwait
push
jle
gs
sbb
mov
cmpsb
inc
dec
loopne
and
cli
push
stos
dec
add
mov
mov
fsubs
icebp
push
loope
cltd
pop
add
cltd
sbb
mov
push
les
std
jl
mov
pop
pminsw
aam
mov
pop
aaa
fisttpl
les
data16
pop
test
lcall
add
popf
push
popa
ljmp
or
pop
mov
dec
in
sbb
js
mov
outsb
test
ja
jno
je
scas
movsb
xchg
jns
aam
sahf
push
ds
sbb
jl
jp
inc
jne
shr
pop
je
leave
out
in
add
push
xor
cmp
dec
mov
hlt
mov
stc
adc
fstpt
xor
push
jae
data16
push
gs
out
cld
cld
in
cmp
mov
jmp
lods
cltd
xor
add
push
push
in
ret
inc
fdivrs
pop
lret
pop
pop
cmp
xchg
push
sub
shlb
pop
lods
mov
inc
outsb
lahf
add
push
scas
pop
scas
xorb
movsb
lahf
in
adc
mov
fdivr
test
cmp
jg
fisubl
cmc
mov
push
scas
cmp
loopne
push
lea
imul
lds
lret
stos
jecxz
das
push
jb
dec
xor
mov
dec
mov
pushf
add
add
mov
fs
fidivl
loop
lret
movb
into
xchg
or
insb
sti
cli
push
adc
lods
cs
mov
pop
xor
and
mov
gs
jecxz
or
cmc
dec
push
stc
call
xchg
push
imul
mov
xchg
pop
mov
sub
jne
and
xchg
xor
push
orl
out
les
jno
sub
xor
dec
movsb
imul
into
add
pusha
pop
mov
out
ja
insb
cmc
pop
shlb
fistpll
sub
insb
insb
cmp
movsl
jne
cmpsb
je
mov
clc
jmp
insb
xor
cmpsb
sbb
cvtps2pi
sub
wrmsr
movsl
arpl
pushf
xor
push
pusha
aas
sbb
clc
mov
fiaddl
xchg
or
cli
fcompl
adc
lret
into
imul
mov
or
mov
inc
mov
popa
leave
xchg
setno
movsb
aas
iret
sub
orl
sbb
add
call
lods
rcl
movsb
in
loopne
xchg
nop
fisubl
push
mov
insl
sub
test
js
cmpsl
adc
xchg
int
repnz
jns
test
mov
outsb
dec
or
sbb
icebp
test
mov
js
mov
jns
es
jl
mov
jmp
lahf
aas
mov
sub
cltd
int3
xlat
lret
cmpl
and
lret
add
imul
inc
out
leave
je
push
fildll
jae
fwait
add
adc
pop
xor
push
pop
or
dec
xchg
mov
push
push
push
push
jl
insb
add
ss
xchg
pushf
pop
adc
add
in
sbb
cs
jl
mov
sub
mov
idiv
sti
and
or
sbb
pop
sub
pushf
pop
inc
mov
mov
jnp
jle
outsl
add
aas
sbb
in
mov
push
cmp
jp
jge
jns
cmp
mov
sbb
push
xchg
ljmp
xor
xor
push
jp
mov
subl
fcomps
or
add
lea
mov
sti
fsts
mov
into
punpckhbw
cli
push
ja
fdivrs
aad
movsl
imul
cmp
loope
jne
xor
mov
test
jnp
in
mov
pop
shlb
xor
incb
sub
out
xchg
popf
mov
sbb
add
aaa
jb
mov
popa
filds
ja
or
rcrb
mov
add
mov
jno
adc
fdivs
cs
ret
in
pop
push
shrb
and
in
mov
push
arpl
dec
adc
incl
mov
jp
cltd
sbb
mov
rol
cs
push
in
lret
dec
jecxz
test
or
lock
xchg
mov
fcmove
popf
inc
dec
push
pop
ret
mov
mov
dec
mov
mov
sti
adc
mov
cmp
insl
orb
lret
faddl
jecxz
and
setle
mov
adc
jnp
test
scas
sub
fucomip
ja
outsb
test
lea
mov
adc
icebp
lret
test
fdivrs
push
mov
fnstenv
jmp
stos
xlat
cmp
push
jg
out
loopne
mov
fldcw
sub
cltd
js
imul
adcl
dec
jbe
or
rcl
idivl
ror
mov
fstpl
subb
lods
jmp
mov
mov
mov
or
xchg
popa
leave
inc
ds
mov
in
or
lret
push
pusha
push
out
jb
sub
ljmp
std
dec
xor
mov
mov
xorl
dec
iret
mov
ss
pop
and
clc
stos
mov
sbb
orb
fwait
sbb
xchg
xor
cmpsb
mov
jp
inc
das
jge
and
add
imul
int
popf
ret
inc
pop
loope
popa
pop
mov
iret
aaa
cmp
mov
add
inc
jo
xor
scas
push
push
pushf
mov
sub
loope
adc
ficoml
aaa
cmp
mov
inc
into
je
inc
fs
sub
and
je
out
dec
push
fsts
inc
mov
jp
adc
test
jbe
xor
sbb
adc
xor
mov
jae
cwtl
addb
in
daa
cmc
cmp
ret
or
jne
xchg
jp
push
lahf
cmpsb
jae
je
mov
push
add
mov
push
dec
xchg
mov
xchg
mov
faddl
pop
cld
pop
cmp
sbb
popf
out
cmp
add
lea
ret
int3
lock
mov
negl
xchg
out
setle
xchg
push
push
lds
xor
mov
xor
scas
in
cmpsl
inc
fisttpll
lea
imul
daa
fdivr
sbb
jne
hlt
xchg
cmc
scas
xchg
or
xor
xor
punpckldq
xchg
fcompl
addr16
xchg
test
push
sub
test
dec
ds
ss
ret
fadds
enter
jle
faddl
test
movsb
mov
jmp
add
add
test
fstps
es
in
stos
jns
das
add
out
or
sahf
adc
pop
or
mov
jmp
call
cmpsl
push
fildl
pop
aam
jno
ljmp
mov
insb
push
int
inc
mov
pop
in
shrl
data16
jg
fstl
push
and
outsb
jo
fmulp
in
xor
sub
rcl
mov
fmul
cmp
inc
fwait
pushf
dec
shrb
push
call
mov
xor
pop
mov
push
daa
sbb
and
inc
cmp
cs
mov
mov
fwait
add
cmpsl
iret
jmp
inc
mov
shr
sahf
adc
xchg
lea
leave
pop
pop
inc
dec
sub
add
addr16
xlat
loopne
jl
test
jno
addr16
mov
movsl
mov
adc
xchg
ja
scas
fisubrs
xchg
push
xor
addr16
loopne
pop
add
and
inc
std
xor
push
into
test
adc
push
xor
je
inc
push
test
or
imul
inc
jne
lods
ja
sarb
mov
lahf
enter
jnp
jmp
aaa
jge
dec
out
lret
adc
cmc
xchg
push
mov
cli
iret
push
push
mov
adc
or
add
lods
and
sti
xor
xor
shrb
or
rolb
aas
divl
in
ret
nop
jnp
sbb
xlat
cmpsb
adc
jmp
out
outsb
adc
outsb
sub
cmp
pusha
in
cmp
push
push
xor
sub
push
and
xor
ficomps
shrl
push
sti
mov
test
push
addb
bound
pop
xchg
pop
fisttps
sub
jge
inc
sbb
sahf
add
les
xor
add
or
mov
js
pushf
cmp
imul
cmp
vmulsd
adc
and
jne
lods
and
dec
or
mov
mov
mov
push
inc
das
mov
cmp
or
fnstsw
mov
mov
inc
jp
cmp
xchg
cli
ret
xor
xchg
xchg
sub
sbb
in
aam
cs
ret
sub
in
sbb
pop
aas
sub
mov
jge
ljmp
lods
jnp
sub
cmpsl
pop
loope
mov
cmpsb
outsb
hlt
adc
and
scas
mov
jno
test
xlat
daa
pop
push
jb
sbb
mov
int
scas
xlat
ja
mov
mov
xor
xlat
testl
or
and
leave
fwait
jecxz
fdivs
gs
lret
ret
sub
and
shl
aas
out
jmp
cmp
xor
lea
subb
mov
aas
mov
or
jp
popf
lret
xchg
xor
or
test
mov
insl
aas
add
jge
insl
shlb
and
sub
in
mov
dec
sub
aaa
dec
and
cli
lret
in
lea
or
cwtl
push
cli
xor
fists
cmc
rolb
fidivs
or
dec
in
mov
push
jmp
pusha
in
sub
sbb
cwtl
cmp
xchg
xchg
sub
xchg
adc
pop
mov
jns
jae
mov
stos
mov
or
mov
cltd
hlt
adcl
outsb
and
mov
out
push
xchg
dec
dec
jg
jge
inc
loope
pop
fisubrl
movsb
mov
inc
mov
xchg
repz
dec
ja
mov
enter
lods
icebp
shll
scas
xor
pushf
cmp
icebp
xorb
mov
lahf
mov
mov
xchg
sbb
adc
push
iret
pop
pop
ss
nop
pushf
sbb
sub
setns
pusha
lahf
jne
mov
sub
xchg
sbb
jecxz
andl
stos
mov
jae
inc
jns
out
mov
fs
mov
jae
push
pop
lock
ss
push
xchg
sbb
pop
in
sub
mov
rorl
pop
dec
je
int3
jmp
dec
mov
sbbl
add
dec
cld
xor
aam
inc
cmpl
add
out
jg
dec
mov
mov
xchg
jns
lret
minps
scas
pop
adc
add
cwtl
mov
test
xchg
mov
mov
cld
sarl
lret
lcall
sub
cmc
xchg
shl
mov
lock
dec
dec
pop
xchg
mov
out
xchg
rcrb
pop
int
stc
pop
lcall
shll
repz
and
xchg
and
sbb
lods
lods
leave
call
mov
lods
pop
dec
pop
fwait
xor
pop
into
fsubrs
inc
lock
aaa
shlb
fmuls
incl
cli
inc
mov
call
int
lret
stc
mov
pand
pop
pop
popa
pop
fsubrs
cld
and
add
mov
pop
insl
push
pop
jl
ljmp
insb
stos
cld
out
lods
push
xchg
in
xor
sub
fistps
lds
fwait
repnz
add
and
sbb
mov
leave
imul
cmp
inc
or
dec
lcall
pop
pop
outsl
adc
repnz
cmp
insl
lcall
cmp
adc
pop
lcall
js
lret
cltd
mov
or
xchg
xor
mov
xchg
daa
popa
mov
mov
lods
out
insl
adc
jno
stc
iret
mov
fcomip
stos
dec
aaa
xor
lret
lds
lahf
cmp
std
lahf
lret
or
inc
and
fdivs
dec
pop
mov
mov
add
add
xchg
xchg
dec
mov
mov
scas
mov
and
adc
lcall
xor
das
lea
or
mov
adc
pusha
fistpl
mov
out
ficoml
push
and
cmc
nop
popf
aas
mov
movsb
sub
sub
sub
loop
int3
mov
bound
jae
scas
or
in
xchg
mov
jmp
push
jae
loop
sbb
or
outsb
jne
popa
push
jno
push
xor
popl
pop
pop
jle
std
imul
pop
scas
movsl
leave
lret
mov
mov
imul
dec
or
lret
cmpsb
arpl
push
xor
cmp
aaa
orb
cmp
inc
add
out
dec
jle
stc
pop
dec
mov
inc
clc
sbb
and
sarl
inc
jns
bound
fwait
dec
mov
mov
aaa
jle
hlt
dec
leave
test
dec
push
mov
enter
dec
incb
dec
pop
mov
add
in
daa
movl
dec
cmp
mov
mov
pushf
addr16
sbb
fldl
sbb
adc
mov
roll
fisubrs
or
xchg
stos
lds
cmp
imul
mov
mov
xchg
push
notb
nop
dec
mov
or
arpl
sbb
xor
cltd
inc
aad
pop
add
and
cmp
jae
imul
scas
xchg
sub
movsb
nop
movsb
nop
and
inc
pop
adc
adc
push
dec
cmpsl
outsl
pop
adc
dec
push
adc
adc
xchg
mov
leave
pop
adc
shl
jg
cmp
jne
pop
adc
xchg
adc
mov
mov
push
push
in
out
test
jae
inc
out
mov
divb
dec
ja
pop
xchg
mov
addr16
cmp
arpl
dec
adc
jae
cltd
aaa
outsl
jae
mov
roll
arpl
test
sbb
inc
jl
test
ficoml
cmpsl
dec
daa
inc
je
dec
lahf
dec
adc
jne
sub
jne
push
arpl
push
gs
out
jns
dec
testb
imul
or
push
mov
out
inc
in
popf
dec
push
mov
or
pushf
jno
in
sub
mov
push
inc
xchg
std
add
xchg
aam
in
aas
mov
push
ret
pop
dec
cltd
push
ss
ds
test
dec
jg,pt
ficomps
sbb
js
mov
and
gs
xchg
xchg
rcrb
test
cli
les
sbbb
ljmp
rorb
in
sub
inc
dec
or
push
fistpll
jle
sahf
ljmp
mov
or
sub
es
insb
inc
and
xlat
fsubr
lret
clc
mov
fs
push
gs
mov
fnstcw
xchg
stc
inc
add
pop
mov
jmp
push
lds
mov
mov
sbb
inc
leave
lret
mov
insl
fisubs
or
push
mov
push
sbb
fwait
hlt
leave
flds
mov
push
aad
es
mov
or
movsl
cwtl
or
adc
out
fstpt
xor
push
mov
pop
int
push
dec
mov
sub
rolb
call
lea
std
test
js
push
movlps
movb
or
in
add
jne
sbb
cmp
add
je
inc
mov
mov
repnz
lahf
cs
inc
movsl
test
xor
out
push
jo
jno
push
imul
leave
inc
subl
xor
adc
lahf
add
dec
shrl
inc
xchg
or
cmp
mov
adc
hlt
rsm
adc
aad
push
inc
bts
cld
xor
rcll
negl
dec
sbb
inc
or
mov
imul
mov
loope
es
and
mov
pop
iret
aaa
push
or
lods
sahf
icebp
stos
pusha
in
outsl
mov
shlb
xchg
psadbw
push
frstor
jle
pushl
leave
data16
and
inc
mov
cmp
mov
pop
les
fwait
mov
nop
popf
ja
popf
xor
jge
popf
jp
std
lret
jnp
pop
mov
cli
cli
sub
int3
jecxz
shrl
cmp
iret
mov
dec
adc
pop
or
pop
lea
xchg
in
fsubr
mov
or
fists
mov
pop
ret
rorl
std
inc
xchg
and
cld
mov
insl
push
add
je
adc
sarb
fidivrl
push
out
mov
stos
adc
add
imul
enter
dec
iret
lcall
test
aas
subb
jns
dec
fs
cs
jbe
add
out
pop
sahf
addr16
outsb
cmc
xchg
scas
add
into
push
cmp
inc
mov
inc
test
data16
fs
sbb
lea
pop
aas
clc
test
ss
mov
jnp
pop
xlat
shl
loop
xlat
jnp
or
hlt
or
jb
cmpsb
call
jns
mov
and
and
aas
xchg
dec
push
cld
dec
stos
pop
in
xor
test
addr16
cmc
loop
mov
mov
xor
xchg
cld
and
and
aaa
sti
inc
pop
into
sbb
mov
shlb
ret
inc
ret
xchg
inc
xchg
cld
and
dec
push
sub
adcl
stos
push
int
das
mov
std
inc
into
hlt
in
push
cld
movsb
sbb
xchg
aam
shlb
popa
sub
iret
scas
sbb
dec
mov
mov
adc
adc
inc
orl
dec
loope
iret
ss
out
iret
add
iret
jo
subb
sub
inc
jae
jecxz
adc
add
sub
push
leave
dec
mov
pop
cmp
cltd
jp
sbb
cli
dec
xor
or
jg
repnz
sub
jle
sbb
aas
pop
andb
sti
fs
loopne
pop
mov
jae
cmpsl
scas
xor
gs
mov
test
mov
imul
push
sbb
rol
mov
add
pop
inc
lret
in
inc
push
xor
pop
sbb
in
xchg
sysret
stos
push
jle
scas
push
jl
jns
adc
pusha
push
stc
sub
fs
stos
imul
dec
cmp
sub
sbb
pop
shr
test
mov
add
add
add
xchg
nop
dec
xor
push
lods
adc
mov
adc
lret
jbe
lcall
jnp
cltd
push
addr16
mov
mov
pop
das
adc
std
leave
mov
fwait
inc
mov
and
mov
movsb
cmp
pop
ret
and
pop
es
pop
mov
inc
or
sub
cmp
or
loope
cwtl
xlat
and
sahf
cmp
out
pop
dec
jne
lcall
and
cli
cmp
in
lods
movsb
xchg
lds
pop
dec
inc
test
push
cmp
stos
inc
shrb
and
nop
popf
shl
jbe
fldcw
mov
cwtl
rolb
inc
mov
jl
mov
jns
cmpl
push
das
jg
out
mov
out
andb
xor
dec
dec
xor
insl
dec
mov
dec
jecxz
and
in
or
push
sahf
mov
mov
push
fmuls
std
sub
ja
popa
adc
pop
lods
fcoml
mov
fmull
inc
push
les
nop
add
lea
scas
int
mov
aaa
ja
es
sti
clc
jns
aad
scas
sub
xchg
rclb
inc
mov
movsb
cmp
mov
jmp
daa
xor
shrb
test
cmp
mov
mov
cmp
or
rorb
jmp
ss
adc
movsl
in
or
inc
mov
jecxz
fs
orl
test
or
and
ret
stos
mov
jl
xor
lret
movb
add
cs
mov
pop
cld
popa
mov
mov
jg
mov
sub
shrb
inc
push
dec
push
in
leave
in
cs
jns
push
lock
push
push
outsb
daa
fs
pushf
sub
add
popf
cld
jns
pop
cld
xchg
aas
jp
cmp
data16
fistps
int
testl
cwtl
and
imul
mov
xlat
movsl
insl
sbb
cmp
fstpl
pop
jge
sub
sahf
jge
inc
ffree
pop
xchg
xchg
ja
popf
sbb
add
and
hlt
lahf
xor
repnz
jl
jae
hlt
xchg
mov
ret
sbb
adc
mov
pusha
or
inc
mulb
add
cmp
or
cmp
jb
mov
fs
loopne
push
xor
xchg
jmp
cbtw
in
and
jne
sub
adcl
stos
push
add
loop
mov
stc
inc
mov
mov
mov
adc
in
cld
orb
mov
in
ss
lea
pop
lock
sar
cmp
push
adc
mov
test
je
daa
or
les
push
ds
rcrl
enter
fildll
xchg
sti
fdivrl
xor
mov
push
das
enter
sub
out
push
dec
pop
stos
je
cmp
popl
scas
sbb
pop
out
dec
dec
lds
int3
mov
sub
loopne
popa
push
xorl
cmpsb
lar
mov
or
mov
pop
inc
xchg
mov
add
jo
mov
mov
test
push
mov
sub
mov
call
movsl
addr16
mov
arpl
or
cmp
or
or
inc
scas
push
fsubl
adc
enter
mov
shl
inc
inc
scas
fxch
and
dec
mov
int3
popf
jmp
lret
and
clc
insl
mov
mov
xchg
pusha
icebp
push
je
pop
jae
dec
mov
gs
pop
test
add
or
repnz
inc
adc
pop
jae
sbb
dec
call
sub
mov
push
cmp
out
sub
pop
cmp
push
and
adc
and
lock
jae
inc
mov
aam
or
loope
lods
xor
popf
dec
rol
or
sub
push
add
out
cwtl
idivl
inc
mov
outsl
cmpsl
fistps
sub
pop
shll
inc
or
call
aad
jo
or
and
cmc
fsubrl
mov
ds
mov
lods
fs
cmpsb
lds
and
aaa
add
mov
mov
xor
sub
out
adc
aam
aas
lods
fwait
ret
xchg
stc
dec
bound
out
push
int3
call
xchg
lods
ret
ja
sbb
shrb
sbb
lahf
jnp
aam
mov
cs
pop
push
insb
out
adc
inc
ret
xchg
or
or
in
adc
mov
pop
mov
cwtl
je
scas
ret
mov
sub
lahf
inc
scas
jp
scas
lahf
lret
mov
jg
mov
mov
push
movsb
sub
adc
inc
add
mov
ss
iret
or
inc
stos
inc
add
enter
notb
mov
lcall
dec
shrb
rcrb
insl
fs
rcr
ljmp
sub
hlt
inc
leave
mov
sub
shll
mov
mov
pop
xchg
mov
pop
repz
sub
ljmp
orb
cli
inc
dec
lret
pop
mov
int
push
and
dec
je
jnp
xchg
mov
mov
pop
sub
clc
pusha
pop
push
mov
cmp
call
jg
flds
mov
add
outsl
mov
in
inc
jmp
andb
mov
mov
lds
daa
fisttps
fidivrl
in
sbb
mov
push
leave
fsubrs
dec
mov
xchg
pop
js
adc
mov
lock
xchg
inc
xchg
gs
adc
lock
cs
mov
out
imul
scas
mov
xorb
addl
data16
daa
xchg
dec
adcl
mov
fwait
sub
add
stos
movsl
mov
test
push
lahf
mov
inc
push
fs
xchg
add
pop
aas
int3
push
mov
xchg
push
shll
shrb
jmp
fpatan
or
adc
pusha
cld
xor
frstor
stos
mov
fstl
add
insb
mov
adc
push
jno
or
lock
aad
leave
mov
jo
cmpsl
jns
mov
push
xor
lret
aad
push
inc
mov
mov
and
mov
cmpl
iret
outsl
dec
push
lds
mov
xchg
mov
mov
dec
repz
pop
pushaw
and
hlt
and
and
and
subl
mov
daa
icebp
iret
lods
push
movsl
cmp
or
sti
loopne
push
or
xor
fwait
lret
push
popl
push
xor
add
mov
mov
lds
sbb
fisttpl
pop
push
cmp
inc
push
jae
add
ja
fstl
cmp
fisubs
inc
push
mov
pushf
xrelease
dec
js
into
and
cld
or
dec
xchg
rcll
mov
push
loope
add
inc
xor
cli
int
popf
push
dec
out
adc
call
xchg
add
jnp
popa
xor
jmp
mov
mov
xchg
mov
gs
daa
sub
pop
pop
mov
fsubr
cmp
sbb
ffreep
or
ja
and
into
arpl
hlt
jp
xchg
mov
jmp
out
icebp
jp
dec
in
insb
out
arpl
push
mov
cmp
xchg
inc
fucomip
ja
cmp
int3
and
mov
push
cmp
add
pop
or
bound
in
mov
js
popf
xor
inc
pop
add
and
pop
add
inc
notb
arpl
movsb
fldenv
push
outsb
or
adc
pop
add
cmp
jge,pn
jmp
fsubp
enter
and
sub
xchg
into
dec
stos
loopne
andl
cmp
sub
mov
add
adc
or
and
scas
sarb
xor
rcrb
xchg
adc
movl
ret
shll
jge
imul
addr16
mov
pop
movsb
xchg
test
cmp
addl
adc
fimuls
int
test
mov
xor
mov
lret
sbb
imul
loopne
inc
andb
jae
dec
lea
jbe
imul
into
or
in
lcall
mov
xor
add
sbb
lret
imul
fbstp
mov
out
xor
test
pop
add
cld
cs
out
cmp
fsubrs
mov
xor
adc
and
aam
dec
data16
loopne
xchg
mov
sbb
jne
dec
pusha
or
pop
stos
rorb
jmp
ds
pusha
rcr
or
add
andb
pop
sub
add
aad
jle
xchg
mov
cli
test
pushf
add
mov
mov
cltd
pop
pushf
mov
xchg
push
cmp
jns
insl
pop
movb
mov
mov
pop
jno
cmp
mov
int3
push
mov
ljmp
mov
push
aad
shrb
and
or
inc
mov
mov
in
xchg
shlb
add
and
xchg
mov
sbb
icebp
and
add
daa
out
insb
mov
jb
clc
ret
jae
std
push
xchg
cwtl
push
or
aaa
in
out
scas
add
mov
inc
mov
xchg
xorb
add
push
cmp
xor
or
inc
mov
sbb
or
out
gs
inc
mov
inc
das
sub
loop
add
ret
shll
push
fldl
mov
jle
orb
je
nop/reserved
fwait
xor
stos
mov
lea
inc
ja
insl
in
es
jne
shlb
ss
dec
pusha
or
jo
ja
adc
pop
clc
cmp
dec
pop
stos
in
mov
loop
push
lea
xor
insl
sahf
mov
pop
sbb
sbb
out
lret
sti
fdivl
pop
sti
inc
mov
popf
fnstenv
adc
sbb
data16
test
icebp
sti
ret
sub
jmp
push
jmp
ret
lret
mov
movsl
and
adc
mov
shlb
push
jp
into
mov
pop
shl
cli
dec
out
cmp
push
cmpl
shll
in
rep
pusha
scas
sarb
imul
insb
push
push
jg
out
mov
inc
mov
out
shll
xchg
aaa
pop
adc
mov
sti
adc
loopne
inc
out
and
popf
imulb
data16
ljmp
mov
std
jge
int3
mov
test
xchg
dec
leave
imul
add
fisttpll
sbb
add
mov
xchg
mov
pop
mov
loope
insl
fldt
enter
jno
test
jl
movsl
mov
scas
cmpsl
dec
pop
idiv
inc
lds
add
sbb
cltd
das
push
jno
xchg
cmp
jg
sbb
jno
dec
adc
shlb
push
dec
push
or
jle
jno
cs
test
xchg
enter
sets
cmc
inc
ffree
inc
test
loope
jb
jge
fmuls
cmp
cmpsb
js
jae
dec
and
enter
or
sub
cwtl
pop
enter
repnz
xchg
inc
stos
xchg
dec
pushf
cli
movsb
mov
mov
push
push
xchg
push
xchg
mov
cwtl
add
lock
push
lea
sbb
mov
adc
loopne
adc
fcomp
dec
mov
pop
add
outsb
cmpsb
mov
mov
adc
loopne
scas
xchg
mov
cmc
sub
mov
jns
xor
pop
pop
testb
iret
mov
xor
cmpb
adc
and
daa
int
shlb
push
je
loop
push
mov
lret
dec
inc
iret
fs
cmpsl
fistpl
mov
jge
in
pop
mulb
mov
fldl
push
mov
subl
sbb
xchg
mov
icebp
sub
push
push
mov
rcrl
pop
popa
sub
mov
out
negl
insl
clc
sbb
cmp
fcmovnb
mov
jp
xor
push
lds
int3
cmp
daa
jmp
hlt
jb
aad
jg
push
imul
cld
in
add
scas
nop
mov
push
test
iret
sub
ss
dec
repnz
ffree
mov
jle
push
repnz
mov
jb
xchg
ds
outsl
into
inc
imul
fwait
daa
pop
fistpl
pop
nop
or
gs
popf
rcll
xchg
inc
test
rcrb
andl
adc
call
aaa
popf
dec
pop
movsb
push
mov
jb
sbb
inc
jb
mov
gs
fmuls
popa
xor
cmp
in
xchg
pop
mov
movsl
push
imul
dec
mov
or
sbb
or
xchg
or
xor
aad
and
ret
add
jge
icebp
incl
cmp
mov
ret
mov
sub
push
sub
mov
jne
jl,pn
xchg
sub
push
dec
push
mov
pop
insl
jno,pn
jno,pn
or
pop
dec
mov
inc
iret
adc
mov
sti
int3
jne
adc
clc
loop
scas
sub
xor
xlat
addr16
cmp
js
pop
or
add
pop
popf
cmp
xorl
test
sub
xchg
push
jecxz
dec
sbb
mov
xorb
outsl
imul
dec
test
stos
out
shr
ja
mov
rorb
bound
fbstp
xor
lret
pop
or
enter
loope
add
cmpsw
lret
push
mov
out
dec
ret
cmp
shl
push
jnp
movsb
in
out
ret
sbb
scas
mov
pop
xor
hlt
xor
jo
fwait
push
dec
out
dec
inc
mov
mov
pop
loop
inc
xor
cld
lods
sub
out
es
xor
adc
and
ja
mov
lret
add
cmp
inc
pop
add
cmp
popf
leave
sub
pop
pop
insb
mov
xchg
sub
movsl
mov
push
icebp
push
call
mov
out
loop
lret
xchg
cltd
adc
jmp
mov
and
nop
bound
cmp
pop
cmp
div
sbb
cmp
aam
imul
lea
std
xchg
dec
iret
mov
enter
scas
scas
push
mov
inc
or
mov
std
insb
dec
xchg
dec
aad
dec
repnz
cmp
mov
jle
xor
jne
sbb
pop
xor
pop
mov
cmp
aas
call
dec
jp
dec
mov
jb
dec
sbb
mov
mov
icebp
push
jmp
jmp
add
dec
mov
adc
aad
lds
jo
inc
add
add
push
cmpsb
inc
pop
repnz
out
insl
shr
sbb
aas
push
xlat
xor
cmpl
enter
repnz
stos
iret
mov
pop
mov
jle
cmp
pop
add
xor
or
push
and
push
pop
push
loope
push
arpl
pop
or
shr
sbb
add
ljmp
rclb
jo
lods
ss
mov
lock
and
subb
adc
xchg
popa
push
divl
push
mov
cltd
stos
lret
and
test
mov
inc
or
cld
sbb
es
pusha
fs
jge
or
andb
jne
enter
out
push
fdiv
xchg
ja
int3
dec
inc
hlt
in
test
mov
sbb
roll
in
dec
push
lods
and
jle
and
call
adc
inc
rcrb
xor
xor
arpl
frstor
adc
inc
popa
ret
sahf
insl
pushf
cmp
xchg
repnz
mov
fimull
jo
in
adc
scas
cmp
pop
push
movsb
stc
sub
add
mov
cmp
xchg
mov
data16
add
std
fcomp
jmp
sahf
lods
daa
adc
das
adc
testl
mov
push
jnp
pop
rcr
push
jns
fstl
dec
cltd
mov
cld
sub
leave
mov
rol
addr16
inc
je
dec
xchg
das
push
pop
mov
addr16
xchg
inc
push
xor
sub
inc
cmpsl
rclb
jmp
mov
xor
stc
int3
dec
cmpsb
xlat
mov
and
test
adc
mov
fcomp
out
jne
stos
cmp
pop
sub
sarb
pop
add
jnp
dec
jle
std
push
sbb
push
ss
inc
sub
in
ficompl
mov
sub
int3
das
mov
jecxz
add
xchg
in
shrl
lahf
fldl
dec
movsb
lret
cli
scas
jbe
xchg
fadds
mov
insl
aam
push
stos
icebp
ljmp
roll
aad
or
stc
mov
push
mov
jge
add
pusha
arpl
loopne
out
cmp
and
mov
mov
xlat
pop
int3
loopne
pop
jge
decb
jle
unpckhps
in
push
pop
jp
fwait
ss
xor
xor
lret
je
or
or
push
jbe
push
hlt
jno
hlt
imul
adc
fiadds
mov
mov
cmp
push
in
fistl
fucom
pop
aas
repnz
out
lods
jl
fbld
jbe
aad
fistl
pop
add
add
pop
icebp
cmp
mov
les
add
out
lret
mov
mov
addr16
push
cli
stos
aas
popf
xor
jb
jnp
or
xlat
dec
dec
jmp
loopne
mov
sar
or
bound
dec
addl
jl
sub
pop
js
data16
and
aas
ffreep
out
out
insl
fmuls
clc
mov
fidivrs
mov
mov
das
dec
jp
insl
sub
and
adc
fnop
pusha
imul
sub
xlat
inc
scas
pop
scas
mov
dec
lods
mov
and
sti
std
rcll
xchg
or
xchg
mov
imul
sbb
iret
jl
outsb
push
pop
or
push
test
jo
stc
and
movsb
idivb
push
xor
dec
sbb
mov
es
inc
ret
lret
xchg
leave
and
jecxz
sbb
insb
fs
mov
fs
sub
sahf
pop
sbb
out
jl
int3
aas
out
mov
push
outsb
repnz
mov
or
fwait
push
stos
dec
pop
adc
mov
jecxz
mov
push
jo
fistpll
iret
popa
xchg
sub
stos
pop
xchg
push
mov
xorb
stos
mov
int3
push
lahf
mov
sbb
push
out
bound
popa
mov
mov
iret
mov
popa
fmull
stos
stos
push
xchg
aam
mov
and
mov
ret
lea
stos
mov
jbe
shll
daa
sub
lods
ja
sahf
push
pop
dec
mov
jbe
or
repz
loope
pushf
add
test
jecxz
mov
imul
fcom
int3
enter
mov
test
mov
adc
lea
loopne
sti
out
leave
sbb
fcompl
in
inc
sbb
mov
cld
ret
outsb
or
test
loopew
pop
mov
push
mov
inc
into
sub
std
and
mov
push
movsl
xchg
xlat
mov
mov
rcrl
repz
adc
pop
cld
mov
push
enter
sbb
mov
mov
mov
jae
jb
push
lea
stos
lcall
into
jl
dec
addr16
pop
lret
fisttpl
adc
flds
cli
cld
xor
imul
repz
push
rorl
arpl
push
fnclex
adc
sahf
mov
pop
cs
addr16
cmp
jmp
jg
pop
jns
and
sbb
dec
les
stc
out
cmp
jns
dec
and
fwait
sbb
sahf
xchg
test
shrl
inc
sub
aam
adc
leave
mov
test
sarl
pop
in
mov
jecxz
push
leave
and
xchg
xchg
in
xchg
mov
xor
xchg
add
xchg
enter
dec
mov
cmp
sbbl
and
je
dec
push
in
adc
imul
dec
orb
dec
pop
sub
mov
dec
fsubl
bound
xchg
ret
sub
adc
fwait
pop
test
test
cli
out
inc
mov
xchg
shlb
sahf
daa
xorb
daa
out
aam
xchg
pop
dec
sub
int3
popf
pushf
pop
cmp
insw
lds
pusha
fimull
int3
push
add
xor
insl
mov
or
call
mov
cmp
jecxz
es
sbb
daa
divl
shlb
std
pop
gs
and
mov
fcoms
jmp
je
aaa
in
fidivl
gs
adc
mov
imul
ret
push
lea
stos
mov
mov
or
jmp
popf
ss
pop
sbb
mov
push
in
js
sbb
shr
dec
add
push
shlb
mov
xchg
aas
push
divb
add
lret
or
pop
mov
scas
sub
pop
lahf
jmp
mov
out
out
int
stos
cmpsb
inc
push
repz
sar
inc
pop
sub
scas
addb
scas
inc
or
pop
stos
adc
cmp
sub
or
ret
sbb
and
pop
ficompl
dec
cmp
sarl
ds
jp,pt
int
into
adc
hlt
adc
fnstenv
xor
pop
mov
and
xchg
loop
or
fwait
lret
inc
popa
xor
jmp
mov
iret
inc
je
mov
das
mov
xchg
mov
xor
sbb
enter
xor
into
outsb
lock
addr16
mov
cld
movsb
orb
or
adc
dec
lods
jp
ljmp
pop
pop
gs
xorl
adc
push
pop
movsb
jo
sbb
jns
mov
add
jge
push
push
in
dec
fwait
and
clc
push
xchg
sahf
lods
push
adc
mov
sub
stos
add
test
mov
mov
sub
lret
xchg
in
stos
pop
mov
ret
jae
add
xchg
inc
xor
dec
mov
mov
movsb
imul
mov
dec
cmpsl
or
insl
xchg
push
aas
add
insl
out
push
sbb
mov
in
mov
addl
cmpb
test
xlat
adc
test
mov
xchg
cli
ds
sti
mov
cmp
push
lock
adc
out
push
mov
fnsave
jno
xchg
or
fistpl
pop
cld
add
jle
lret
mov
movsb
cld
lods
push
adc
adc
xchg
ficompl
lds
push
and
or
dec
rcll
inc
xchg
adc
and
test
loop
mov
shlb
movsb
and
sbb
repnz
aaa
test
movsl
inc
outsl
jmp
mov
or
sbb
jns
out
pusha
mov
cmpl
pop
cmp
mov
mov
rcrb
push
push
in
or
in
inc
loop
pop
jno
std
dec
in
das
adc
jl
or
xlat
popf
call
faddl
and
cmpsb
sarb
stos
cwtl
fnstsw
lcall
daa
mov
movsb
sbb
jno
cmp
jns
inc
call
lret
insl
int3
sub
ret
xchg
mov
inc
xor
push
jp
repnz
mov
xchg
popf
push
jle
shl
or
femms
imul
out
mov
clc
arpl
fwait
push
mov
cmp
push
jns
mov
adc
pop
mov
ja
lock
lcall
shufps
lea
push
subl
mov
lahf
cld
in
jno
arpl
sub
mov
shrb
insl
nop
leave
movsb
fldenv
out
mov
and
push
dec
mov
jb
sub
push
jns
repnz
inc
cmp
rorl
rcrl
leave
sbb
sub
inc
outsl
adc
fs
lcall
sbb
inc
jle
push
mov
cld
ds
push
xchg
imulb
cmp
aaa
scas
cmp
and
pop
mov
sub
aas
es
cmp
sti
pop
add
sbbb
pop
dec
addl
ds
add
cs
sbb
xchg
lea
dec
mov
imul
xchg
call
adc
sub
popl
or
insb
jecxz
ds
outsb
xchg
inc
cwtl
pop
loope
and
cwtl
ss
into
xor
stc
jb
inc
popf
pop
repz
cli
imul
inc
out
push
mov
jno
jne
and
mov
sbb
push
push
gs
jo
scas
mov
mov
lock
scas
jecxz
cwtl
insb
cmp
lahf
jo
out
jp
fstpl
xchg
pop
add
jmp
cld
rorl
push
or
mov
sbb
into
repz
insl
inc
lods
loopne
dec
or
mov
dec
sub
aas
inc
or
mov
xchg
adc
or
pop
jg
out
loop
fmul
in
mov
jg
mov
adcl
jle
ss
enter
fbld
mov
and
repz
cld
fsubs
adc
pop
mov
adc
xchg
pushfw
xor
fmuls
ja
xchg
filds
leave
and
in
int3
inc
mov
mov
add
dec
repnz
mov
testl
jns
in
cmp
sub
jp
inc
mov
inc
mov
mov
fnstenv
pop
aaa
jnp
ficoml
or
dec
xor
and
pop
repz
mov
jae
movb
jmp
leave
pop
out
fisubs
enter
sub
dec
loop
fcoms
shlb
ljmp
int3
jmp
or
mov
subl
mov
pop
xor
pop
inc
mov
pop
xchg
lret
jnp
mov
arpl
repnz
pop
fnstenv
test
imul
imul
js
std
fucompp
add
lds
cld
std
cli
cmp
jecxz
or
or
mov
lret
inc
xor
fidivs
stos
jge
mov
xlat
mov
test
mov
aad
mov
ficomps
adcb
test
ret
dec
xchg
jmp
fcoml
adc
bnd
mov
cs
addr16
fidivs
je
adc
or
cmp
imul
into
pop
pminsw
add
hlt
outsl
mull
rolb
and
in
popf
popf
orb
sbb
lock
pop
cmpsl
out
rcl
mov
clc
popa
sbb
pop
ss
and
inc
daa
lret
insb
inc
call
push
mov
popa
in
clc
cmpsl
faddl
adc
xchg
in
repnz
test
in
xchg
or
bound
icebp
mov
int3
scas
pop
decb
mov
jle
mov
pop
sahf
repz
pushf
ss
push
in
in
leave
std
add
mov
add
jne
repz
mov
mov
fcmove
fwait
sub
clc
add
xor
cmpsb
test
push
sar
xlat
xor
test
xor
aad
push
mov
mov
js
cmpsl
test
stos
imul
clc
out
popa
add
pop
mov
or
cmp
repz
scas
movsb
mov
cmpsl
xchg
inc
mov
adc
mov
ljmp
jb
notl
addr16
xor
push
fdivs
and
add
xchg
and
ljmp
mov
and
dec
push
pop
sub
sbb
sahf
aad
lret
ret
xor
xchg
in
mov
cmp
jb
add
mov
lret
adc
sbbl
pop
push
mov
xchg
fsts
mov
test
std
pop
xlat
cmp
movsl
and
rcll
shlb
add
lods
aaa
sbb
sbb
dec
adc
mov
inc
clc
addr16
jl
jo
jb
sbb
lret
push
mov
jo
cmp
sub
push
lods
rclb
inc
add
jae
shr
movsb
clc
daa
xlat
add
dec
adc
test
js
ret
mov
ffreep
mov
mov
lods
out
mov
test
mov
hlt
or
fiadds
rclb
push
shlb
inc
push
repnz
mov
pop
pop
or
jl
jns
rclb
dec
mov
adc
les
mov
dec
loope
dec
sub
pop
adc
out
fisttpll
addr16
adc
pop
scas
lret
mov
cwtl
ret
std
sub
sbb
xor
ss
jbe,pt
cwtl
push
and
loopne
inc
or
aad
xor
cmp
shrb
inc
sbb
mov
movsb
cltd
mov
mov
lret
out
pop
mov
dec
mov
outsb
sub
dec
adc
mov
mov
mov
cwtl
add
pop
sbb
gs
adc
ja
jnp
popa
mov
and
andl
mov
cltd
sub
sub
sub
mov
push
repnz
add
xor
push
pop
mov
cmpsb
or
lods
pand
pop
xchg
inc
je
pop
shlb
add
pop
pop
mov
cwtl
or
xchg
lret
idiv
mov
cmp
xor
push
xlat
push
nop
bound
cs
mov
rorl
int
sub
mov
mov
repz
mov
push
xlat
nop
inc
cmp
test
cmp
ja
addl
icebp
adc
cmpsl
mov
add
cmp
xlat
adc
xchg
or
push
out
mov
pop
fisubrl
pop
mov
ljmp
loopne
iret
jb
das
push
pop
xchg
in
and
mov
dec
jne
jbe
inc
mov
pop
sub
inc
push
xchg
subb
xchg
je
sub
mov
pop
test
jmp
sub
mov
or
mov
mov
into
jecxz
sbb
loope
or
lods
sti
ja
inc
mov
rol
xchg
lret
fadds
add
xor
pop
cmp
test
test
dec
call
movsb
sahf
stos
and
mov
dec
mov
adc
dec
gs
hlt
nop
mov
cmp
xorl
ror
das
loope
cmp
push
loop
mov
jne
mov
inc
mov
iret
notl
push
les
cmp
xchg
je
pop
fdivp
movsb
fs
sbb
push
shrl
call
ss
js
fstpl
mov
pusha
cmp
lods
rcr
mov
mov
mov
pushf
or
inc
popf
xor
sti
lods
dec
dec
inc
sti
lods
push
mov
jge
in
call
jne
call
add
aad
pop
or
icebp
lahf
lcall
std
mov
or
xchg
mov
cltd
inc
cmc
pop
xor
or
test
es
xor
rorl
or
push
aas
int
and
popa
loop
enter
jo
xor
mov
xchg
dec
xor
add
sbb
and
jno
jb
lods
cmp
addr16
inc
sub
cmp
mov
std
xchg
lret
sbb
lahf
loopne
fwait
dec
push
ret
xor
lods
sbb
pop
and
mov
dec
loopne
jl
std
daa
enter
xor
ret
pop
pop
lret
xchg
aad
sbb
jns
or
imul
movsb
dec
pop
movl
lds
push
sbb
punpckhdq
inc
dec
inc
mov
xor
and
jbe
outsb
or
ficompl
jp
pop
mov
std
mov
push
ret
fcoml
pop
cmpsb
idivb
or
mov
inc
jo
das
stos
or
orl
sbb
int
mov
insb
sub
push
std
sbb
adc
std
jae
push
adc
cmpb
mov
pusha
icebp
data16
rcr
pop
aaa
pop
negl
outsb
ss
mov
aas
sub
dec
hlt
sbb
mov
outsb
and
ja
loop
xor
jmp
dec
sbb
lods
mov
iret
jecxz
aas
mov
fdiv
leave
or
adc
scas
shrb
adc
sbb
mov
cmp
inc
adc
inc
ret
scas
jnp
out
fldt
ljmp
add
adcb
and
push
fwait
mov
and
les
or
inc
div
adc
int3
mov
iret
test
push
and
pop
lcall
pop
mov
stos
in
mov
jl
insb
loop
fsubrl
aam
xchg
aam
pop
cmp
pop
hlt
fcmovbe
stos
pop
xor
enter
xchg
mov
mov
loop
jb
jle
shl
adc
mov
insb
insl
out
in
sbb
inc
lock
lret
cmpsb
repnz
stos
add
lcall
sub
test
out
xor
sbb
mov
sub
sti
shrb
inc
jecxz
jb
jne
mov
icebp
inc
adc
vmulsd
xor
dec
sbb
pop
inc
fisubl
rcrb
pop
jl
lahf
in
mov
jge
cwtl
mov
jmp
adc
sbb
je
std
sahf
cmpsl
jle
mov
testl
sbb
adcl
les
in
dec
insb
je
lret
lcall
cmc
xor
jno
sarb
in
ret
sbb
lea
jl
iret
mov
adc
push
pusha
out
je
sub
loopne
sub
out
push
cmp
xchg
jl
add
cmc
in
insb
push
jns
adc
jle
xchg
mov
test
xor
aaa
out
cld
inc
inc
jl
orl
pop
lret
fbld
or
loopne
fwait
pop
imul
mov
push
insb
arpl
scas
mov
sbb
sti
mov
jne
in
push
mov
leave
cmpl
cmc
mov
dec
sub
mov
inc
fldcw
in
lret
dec
inc
mov
pusha
mov
mov
and
popa
sub
aam
push
or
xor
pop
sbb
push
mov
sar
scas
mov
leave
in
fidivl
mov
rcll
imul
xchg
mov
jl
es
outsl
or
jge
add
dec
or
mov
cmp
stc
mov
in
jp
pusha
mov
cmp
cmp
sbb
ret
subb
or
test
mov
popf
inc
out
hlt
adc
andl
adc
xchg
scas
mov
jno
lds
jecxz
dec
sahf
lods
lahf
js
push
push
mov
pop
fisttpl
and
fcmove
int3
lahf
repnz
push
lret
sub
pop
mov
cwtl
mov
pop
rorb
jle
repnz
xchg
cmc
arpl
xchg
xchg
shrb
mov
outsb
sti
jecxz
imul
add
les
and
mov
cld
xchg
test
inc
xor
lods
inc
pop
in
js
mov
pop
mov
nop
lods
pusha
pop
mov
pop
jae
pushf
xchg
adcl
scas
call
sbb
mov
into
ds
fcoms
hlt
jbe
or
sub
arpl
imul
jno
loopne
int3
bound
lahf
test
sbb
push
ficomps
mov
lds
push
in
lods
popf
and
and
mov
popa
lret
ljmp
mov
neg
bound
mov
cwtl
jmp
cmpsb
sarb
push
mov
mov
insb
and
jle
cmc
dec
nop
sbbl
cmc
mov
jl
loopne
xchg
pop
push
notl
jno
out
out
in
mov
cmp
or
test
mov
icebp
push
ljmp
push
fisttps
gs
jbe
inc
sti
les
loopne
xor
clc
jle
add
inc
jge
xchg
mov
dec
imul
jns
sti
nop
pop
mov
dec
stos
xor
rcll
cmp
sbb
subl
mov
stos
sub
les
lret
xchg
out
lock
repz
shl
pusha
movsb
inc
jne
sbb
jge
and
sub
sub
adc
lods
scas
and
out
jge
fcomps
mov
and
cli
mov
repnz
pop
xorl
test
mov
or
cld
push
pop
mov
into
out
fisttps
ss
gs
scas
pop
mov
xorl
xchg
dec
push
add
pop
inc
cmp
lcall
jp
stc
pop
xchg
adc
jge
lods
dec
or
cmp
mov
addl
mov
in
and
iret
mov
shlb
sti
dec
inc
inc
xor
pop
push
cmp
sub
pop
mov
xchg
rcll
or
jl
leave
in
outsb
push
cltd
and
xor
mov
movsl
inc
push
sti
jp
xchg
in
fwait
and
fdivrs
cmp
xchg
jmp
jle
repnz
lcall
addr16
sti
data16
adc
subb
jne
scas
es
addr16
lret
not
xchg
cmp
xor
js
fucom
cltd
cmp
repnz
cmp
mov
inc
icebp
fs
fwait
test
jb
inc
inc
mov
or
and
mov
fimuls
lods
jl
mov
fiaddl
outsb
mov
leave
adc
fbld
and
push
or
pop
rcrb
push
leave
jne
iret
in
dec
das
sub
mov
int3
cs
sbb
pop
cld
sbb
xchg
cli
cs
add
sbb
sub
roll
jmp
or
es
adcl
inc
pop
rcrl
sbb
sbb
jmp
lods
jo
mov
into
add
hlt
or
lock
movl
leave
movsb
or
mov
ds
stos
cmp
inc
mov
lock
xchg
or
or
lahf
fnsave
pusha
and
jns
cmp
js
fsubrs
sbb
icebp
aad
inc
ret
mov
cltd
mov
xor
sub
rcr
aad
or
addr16
int
inc
mov
lret
mov
scas
or
scas
xchg
scas
aas
roll
int
cwtl
pop
iret
movq
jmp
lods
or
and
pop
xor
mov
fcomps
add
bound
out
mov
pop
sbb
test
leave
andl
pop
outsb
cmp
add
inc
mov
ja
pop
adc
sti
test
out
sbb
mov
cld
mov
fidivs
mov
push
movsl
imul
std
jno
sahf
or
aas
movsl
xor
mov
sbb
adc
daa
xchg
and
mov
and
sub
fisttpl
jb
out
sub
or
ret
push
sub
xchg
push
dec
add
inc
call
out
aaa
push
rorl
lock
cmp
pop
ds
loopne
lret
clc
in
sbb
icebp
mov
orb
movsl
jo
mov
mov
adc
into
test
jmp
and
push
adc
cmp
add
inc
imul
cmc
jmp
jns
pop
mov
adc
dec
push
fdivl
mov
fucomp
in
push
push
mov
jmp
push
xlat
inc
jb
outsb
dec
dec
xchg
mov
cs
inc
mov
or
outsl
lds
stos
aad
jns
repz
adc
adc
lds
cmpsb
outsl
and
xchg
xchg
jne
xor
lds
mov
mov
lahf
push
out
sbb
data16
imul
test
enter
lret
push
push
inc
movl
scas
adc
out
inc
cmpsb
addr16
gs
mov
mov
adc
leave
pop
add
sub
add
dec
mov
jmp
into
pop
cmpsl
ds
int
cmp
dec
add
mov
mov
sti
push
and
in
sbb
push
pusha
cld
jg
push
add
push
jg
fcoms
jns
cmc
mov
and
stos
rcr
addr16
lods
mov
xchg
lock
cld
push
cwtl
dec
sbb
sahf
xchg
es
jp
cmp
imul
mov
loop
shlb
add
test
cwtl
xchg
xchg
add
jns
fstps
inc
mov
test
int3
pop
insb
inc
push
movups
hlt
pop
xchg
cltd
out
inc
sub
mov
pop
cmp
stc
lret
clc
leave
je
int
cmpsl
test
and
das
mov
mov
dec
inc
xchg
sti
xlat
xchg
mov
fcmove
imul
aas
addl
jns
rolb
fiadds
sahf
jb
sbb
push
or
mov
jns
scas
leave
xor
inc
mov
mov
add
fisttpll
mov
popf
and
clc
sti
add
testl
pop
lods
or
xor
inc
mov
std
xor
sub
fdivr
outsb
ss
imul
mov
dec
mov
or
pop
jl
hlt
mov
pop
repz
into
out
dec
scas
mov
fcomip
or
sbb
xchg
aas
scas
popf
pop
dec
in
pop
in
rcrl
icebp
push
jle
adc
mov
xchg
jmp
sbb
mov
jae
pop
out
imul
shll
mov
dec
outsb
fsqrt
or
dec
xorl
shll
mov
sbb
stc
imul
cli
mov
sbb
ret
sbb
or
pop
jl
sub
in
mov
loop
enter
out
mov
mov
push
mov
les
sub
scas
adc
adc
sbb
cmp
or
dec
clc
stos
outsl
psrlq
and
push
movsl
and
std
or
add
jmp
pop
push
cmp
or
imul
xor
int3
cmpsl
outsl
mov
rcr
lods
pop
ficoms
push
and
leave
lods
sbb
inc
push
pop
adc
sahf
sti
in
add
dec
mov
in
js
dec
sub
inc
std
stc
jo
jl
gs
jno
testb
daa
mov
pop
nop
pop
loopne
or
or
xchg
adc
icebp
sahf
scas
mov
stc
fidivs
cmpsb
fidivs
loopne
cmp
adc
movsl
or
outsb
jge
dec
or
daa
fs
test
push
mov
xor
mov
dec
jmp
test
mov
sub
jns
xor
je
xchg
push
js
out
loopne
xor
mov
sti
ss
mov
pop
xor
movsl
mov
enter
or
cmpsb
mov
push
mov
push
dec
ljmp
adc
cwtl
js
pushf
jae
pop
sbb
push
outsl
iret
imul
push
jb
push
mov
out
sbb
xchg
fdivl
rcl
xchg
clc
xor
mov
movsl
ljmp
jne
xchg
sub
dec
hlt
into
cmp
es
movsl
mov
leave
andl
stc
mov
sbb
lcall
int
mov
cmp
gs
or
loope
in
outsb
xor
sbb
mov
mov
push
pop
fld
in
mov
pop
cmpsl
call
pop
imul
mov
call
sub
lea
add
ret
iret
xor
jae
inc
andb
jecxz
inc
cli
mov
inc
ficoml
xchg
mov
repnz
pop
in
or
jle
adc
pop
jo
mov
add
outsl
in
dec
lds
push
pop
xchg
add
les
xchg
out
inc
test
mov
xchg
jmp
pop
repz
xorb
sub
push
pop
inc
push
iret
insl
in
mov
xor
fcomip
push
pop
popl
push
mov
push
aaa
sub
jl
pop
mov
mov
add
mov
jle
gs
icebp
cmp
stc
sub
xchg
loopne
repz
out
sbb
sub
inc
push
pop
push
in
outsb
xor
and
mov
jmp
cmpsb
vfnmsub213ps
xchg
in
mov
add
jl
push
sub
lods
les
cs
std
cmpsl
cmp
leave
cmp
push
push
repnz
cmp
jo
cld
mov
fsubrs
imul
cmp
jo
fistl
shll
adc
mov
adc
in
shlb
test
adc
std
lret
fstpt
lahf
adc
add
incb
loopne
or
insb
clc
addl
cld
pop
mov
cmc
push
mov
cmp
cmp
hlt
aas
fwait
pushf
fistl
and
jae
push
or
pop
xlat
push
inc
pushf
cmp
jns
mov
xor
aam
stos
xchg
stos
xor
mov
fdivrl
or
and
cmp
bndldx
loopne
or
pop
out
dec
mull
test
push
push
pop
cmp
std
loopne
dec
loop
imul
daa
out
inc
add
or
int3
jnp,pt
mulb
or
movsl
cld
jae,pn
sbb
clc
sbb
imul
sbbb
out
mov
or
je
pop
jl
cltd
subl
sti
sub
inc
fstpl
jb
xchg
enter
xor
mov
add
arpl
or
in
pop
mov
jbe
jmp
repz
or
jo
jne
cmp
and
in
ja
cmp
cmp
pop
hlt
repz
insl
inc
outsb
nop
out
mov
loopne
gs
mov
outsl
in
repnz
repz
xor
pushw
add
xlat
addb
pop
pop
mov
adc
test
inc
loopne
xchg
stos
roll
in
mov
mov
popf
jg
dec
cmp
xchg
or
mov
push
fnsave
push
iret
pop
fs
or
rclb
dec
and
dec
insb
jno
fs
out
xlat
mov
test
pusha
mov
enter
pushf
xchg
jecxz
scas
aaa
cmp
dec
jle
jmp
push
pop
inc
inc
mov
push
adc
push
aad
jno
pop
arpl
or
insl
call
sub
loopne
fucomip
push
lret
pop
adc
pop
gs
leave
rcrb
bound
mov
les
ss
jb
loopne
pushf
inc
sbb
loope
pop
sub
dec
cltd
icebp
pop
in
pop
iret
sub
or
movsl
xchg
cmp
xchg
jne
mov
mov
cmp
mov
pop
push
and
fnstcw
mov
dec
mov
lea
aaa
jl
out
or
xchg
mov
int
bound
pushf
add
out
inc
mov
imul
popf
jl
pop
xchg
adcl
push
inc
fdivs
xchg
jns
pop
pop
jo
outsb
sub
fmull
jno
xchg
sbb
adc
jge
mov
in
in
inc
adc
mov
xor
mov
lcall
jmp
cmpsb
sti
dec
jecxz
aas
mov
add
cmp
in
out
and
aas
or
push
mov
lods
xor
mov
jns
cmp
push
add
jge
clc
inc
xchg
jmp
lock
xchg
adc
or
stos
imul
adc
mov
xchg
push
int3
mov
sahf
push
xchg
jo
cmc
loopne
add
add
or
pusha
cltd
rcrb
loop
adc
lahf
popf
ljmp
and
bound
jno
cmpsl
or
dec
cli
fwait
and
call
inc
loope
lret
gs
sarl
jne
int3
sub
dec
jnp
ds
jnp
ficompl
add
data16
push
ljmp
jb
stos
inc
movsl
dec
je
mov
addr16
or
mov
cmp
xchg
int
push
jae
idivb
in
call
jne
mov
lea
dec
dec
lods
mov
aad
or
cwtl
and
hlt
fadd
lret
std
and
inc
sbb
in
cld
js
push
sbb
outsb
jae
xor
lret
sub
xlat
fnstcw
sahf
loope
roll
jnp
jg
aam
xchg
jp
mov
jecxz
xor
iret
aam
pop
jecxz
mov
dec
sbb
sbb
aas
shll
pop
inc
push
xchg
mov
ret
stc
or
pop
fs
sahf
lock
push
faddp
lcall
cmc
and
jl
imul
mov
stc
addr16
outsl
in
loop
mov
mov
and
adc
mov
outsl
cmpsb
push
movsl
jae
loop
nop
fwait
nop
cmp
add
hlt
mov
stc
ss
push
cmp
or
mov
fidivrl
pushf
lcall
insl
pop
rolb
mov
mov
sbb
push
mov
mov
pop
xchg
je
cmpl
or
xlat
push
insb
sub
and
mov
pop
and
addr16
xchg
push
inc
into
add
dec
sbb
mov
test
pop
adc
mov
lahf
dec
inc
sub
nop
mov
xor
repnz
xchg
cmp
mov
push
mov
in
or
jmp
cwtl
repz
push
ret
das
cmp
lahf
mov
sub
and
clc
out
sub
inc
fsubrl
arpl
sub
jno
insl
or
movsb
and
cmp
insb
xor
adc
pop
call
sub
dec
pop
orb
xchg
jns
sub
add
pop
or
push
les
dec
out
pusha
sbb
in
decb
icebp
popa
ds
xchg
jbe
repnz
pop
push
sbb
xchg
test
scas
movsl
or
mov
and
jbe
sbb
cmc
ret
cli
out
mov
jmp
testl
jl
test
adc
sub
mov
pushf
adc
sub
cmp
adc
inc
test
jne
adc
push
leave
pop
rol
jecxz
bound
daa
sbb
mov
push
dec
fisubrl
std
pop
sub
fmull
or
fistps
rorb
out
std
cmp
pop
mov
mov
cmp
and
xor
push
adc
out
test
mov
call
outsb
mov
repnz
pop
xchg
pop
xchg
shll
pop
sub
test
push
adc
xchg
xchg
mov
push
movsb
mov
sbb
jle
iret
movsb
sbb
and
push
pop
jl
xchg
pop
mov
outsb
leave
jmp
repnz
push
lret
xchg
jne
fmuls
pop
movsb
sar
jo
dec
push
and
jae
rcr
sbb
aad
push
mov
xorb
mov
pop
in
sahf
fsubrl
enter
rorl
mov
mov
sahf
pop
mov
sbb
pop
mov
fcompl
push
dec
jo
aam
cmpsb
or
pop
and
out
cld
icebp
mov
mov
sub
repnz
jb
mov
fisubrs
pop
ficomps
adc
xlat
repz
xor
mov
outsb
pop
loope
sub
and
xor
dec
gs
mov
push
jecxz
or
fnstsw
inc
into
idivl
ret
xchg
mov
movsl
pop
movsl
add
cmp
into
and
xor
xchg
adc
stos
scas
aam
xchg
movd
test
outsb
movswl
cmp
lcall
pop
inc
scas
or
adc
inc
push
pop
add
pop
cmpsl
mov
les
ja
cmp
iret
push
jbe
loopne
sbb
jp
imul
incl
mov
xor
mov
filds
xchg
sbb
incb
jno
fld
cmp
lret
cmp
out
out
xchg
shr
add
push
pop
ja
dec
loope
fsubr
mov
fimuls
aaa
lret
test
imul
inc
cltd
sbb
mov
pop
fimuls
add
movsb
jnp
pop
dec
xchg
iret
out
and
test
stc
cmovae
sbbl
movsl
jnp
pop
push
in
enter
pop
cli
popa
mov
jae
stos
in
jns
push
sbb
jns
fdiv
push
pop
repnz
dec
mov
mov
pop
inc
fwait
int
lds
enter
pop
aas
andb
loop
pop
cmp
add
mov
popf
push
int3
mov
shll
adc
ss
xchg
test
mov
jmp
push
inc
mov
out
lods
mov
int3
mov
ja
adc
call
push
mov
push
addl
hlt
xchg
adc
aas
rcr
in
dec
movsb
mov
call
pop
aaa
gs
add
dec
dec
inc
xchg
inc
lret
loopne
xor
pop
lea
mov
lock
frstor
lret
add
jg
es
sub
shr
iret
sbb
or
ret
rorl
outsb
inc
pop
std
mov
and
adc
int
mov
sti
cmp
and
cmp
std
stc
add
insl
nop
test
dec
xor
lret
stos
mov
pusha
insl
lods
push
cli
cmpsl
dec
mov
fists
jg
pop
les
repz
lods
pushf
daa
xor
push
ffreep
subb
test
mov
mov
push
xor
mov
arpl
in
scas
xchg
or
in
fsubrs
inc
push
pop
push
data16
pop
adc
es
jge
les
sti
sub
and
les
inc
mov
push
push
lcall
mov
xchg
dec
popa
loopne
inc
jb
out
or
mov
call
ljmp
cmp
mov
leave
sti
push
scas
incb
mov
or
mov
sub
scas
fsubs
ljmp
push
or
push
mov
mov
dec
add
push
pop
popa
je
push
xchg
jmp
mov
mov
inc
or
mov
or
insb
fwait
cmc
jmp
fnsave
push
push
adc
cmp
sbb
adc
pop
movsb
lock
nop
dec
arpl
leave
push
fadd
repnz
aad
jl
lods
ret
sub
stos
and
in
in
scas
ret
lock
pop
pop
xchg
or
cmpsb
pop
add
stc
sbb
sbb
sbb
add
fstps
ret
insl
mov
jno
mov
out
inc
ljmp
call
inc
test
xor
f2xm1
push
loope,pn
loopne
repnz
pop
fcomps
loop
daa
iret
pop
push
mov
sti
fbld
fmull
aas
lods
or
mov
push
push
inc
cwtl
fmul
or
pop
inc
push
or
add
inc
push
lods
push
push
dec
jl
cmp
gs
and
popl
fldenv
popa
movsl
inc
cmp
lods
add
dec
cs
imul
outsl
push
jbe
mov
insb
repz
inc
arpl
out
and
imul
out
roll
inc
push
les
add
inc
jne
dec
jl
mov
pusha
mov
in
lret
and
in
lock
ret
jge
lret
out
adc
pop
fstp
mov
mov
out
mov
insl
xor
outsl
mov
cmp
xchg
xor
das
cmp
lahf
pop
pop
inc
adc
test
scas
mov
lods
and
fs
or
pop
lcall
std
cmp
cmp
add
push
fcoml
pop
out
cmp
ficompl
sbb
cli
addr16
in
xor
lock
mov
arpl
and
lock
mov
mov
jb
mov
xor
jns
pusha
in
lods
add
in
jnp
cmpsl
addr16
ret
gs
js
lods
loope
sbb
scas
fldl
dec
sbb
mov
mov
push
outsl
cwtl
cwtl
sti
pop
inc
loop
push
jb
std
adc
fisttpl
fstl
xchg
mov
andb
or
movsl
adc
lods
pop
das
test
rorb
cmp
push
or
lods
sbb
mov
jno
arpl
in
ret
pop
inc
ficomps
sahf
shl
push
sub
adc
cs
arpl
mov
push
or
adc
jbe
orb
ljmp
fcomi
sti
add
push
or
addb
dec
pop
nop
push
int3
imul
xchg
int3
push
inc
mov
vandpd
aas
mov
push
fimuls
cs
mov
fsubrl
mov
xor
dec
les
ud1
popa
data16
fistpl
cld
inc
push
jnp
jo
ror
or
std
shrl
adc
fwait
mov
ret
scas
jecxz
cltd
adc
sub
ja
adc
sub
clc
test
cmpsl
mov
dec
sbb
and
adc
rclb
push
adc
xor
push
adc
xchg
xor
in
lds
std
outsl
and
imull
test
bound
push
adc
sahf
ja
mov
pusha
hlt
cmpsb
pop
outsl
fwait
jle
mov
movsl
aad
bound
ljmp
in
lret
dec
dec
loope
push
fsubs
sub
pop
popa
out
imul
movsl
out
pusha
test
or
test
test
fidivrs
sti
mov
insb
cmp
ret
pop
sub
mov
outsb
ja
cltd
sub
jne
fadds
mov
mov
pop
aam
sub
rcll
cwtl
lcall
rcrl
add
mov
cmp
ljmp
scas
pop
dec
add
lds
jmp
xchg
cmc
popa
cwtl
outsl
imul
push
mov
adc
jb
fisttpl
dec
mov
and
lcall
xchg
push
aam
dec
add
repnz
xor
xchg
adc
pop
push
jno
mov
push
js
inc
jnp
clc
js
add
sbb
mov
xor
or
je
std
in
repz
or
jmp
sbb
add
and
divb
loop
aam
insb
rorb
and
xchg
jmp
inc
sub
fwait
push
hlt
fwait
push
shr
int3
or
clc
out
rcrl
clc
imul
xchg
leave
pop
pushf
loop
cmpsb
arpl
sbbb
or
jg
mov
dec
rorb
cmp
pop
pop
dec
lret
dec
mov
lahf
sbb
pusha
lock
lret
xor
fprem
inc
ror
dec
mov
cltd
push
addr16
xor
xchg
dec
rcll
cld
popf
adc
sub
adc
lahf
es
jmp
into
mov
lcall
push
je
pop
jne
in
push
xor
icebp
cltd
repnz
daa
adc
repz
fsubrs
jbe,pt
and
ds
xchg
fidivs
mov
call
jmp
mov
jp
push
in
add
popf
mov
add
aad
int3
mov
fwait
dec
sub
dec
mov
scas
jp
icebp
mov
cmp
push
test
mov
jmp
jg
cmc
adc
ljmp
xchg
je
mov
pop
cmp
ss
inc
dec
xor
inc
aaa
add
lea
sbb
adc
scas
or
xchg
xor
out
lahf
xchg
fidivl
mov
in
jb
jo
in
ret
jp
cmp
fstpt
sbb
adc
fisubl
mov
sub
frstor
mov
or
iret
fistps
dec
ret
lock
lock
rcr
adc
fnstcw
daa
mov
push
rorb
push
ret
inc
xchg
dec
leave
pop
jecxz
or
dec
pop
jmp
xlat
push
loope
dec
lods
cmp
enter
dec
es
mov
enter
add
js
xor
mov
jl
pop
cmp
fiaddl
cmp
shl
or
sbb
setnp
ds
push
push
mov
bound
add
pop
mov
fistpll
test
add
mov
movsl
leave
pushf
mov
insb
add
dec
std
pop
jne
pop
call
jge
add
adc
jne
cld
fistpll
lcall
rol
ljmp
in
rcrb
and
add
jno
sbb
add
xor
sub
fsubr
mov
mov
subl
push
lahf
ja
xchg
or
cmp
cmp
mov
pop
jns
cmpsl
pop
pop
cs
ljmp
das
out
add
shll
xor
fs
insl
out
in
inc
and
test
mov
ja
mov
cmp
clc
adc
cmp
mov
xorl
jbe
aam
daa
insb
mov
push
push
pop
lock
aaa
adc
stc
fistpll
lds
ret
clc
mov
push
je
push
push
enter
push
ret
push
dec
shll
dec
scas
movsl
nop
adc
nop
push
gs
addl
cli
xor
nop
or
jge
aam
outsl
adc
jae
cmpl
xchg
ficoml
dec
dec
xchg
sar
js
pop
lret
loop
cwtl
aam
pop
test
insb
mov
push
jge
lock
bound
sbb
and
dec
loop
mov
sahf
cli
inc
movsl
sbb
cld
push
insb
adc
ja
daa
cwtl
xchg
mov
lcall
dec
dec
inc
or
lret
mov
sahf
or
lods
test
xchg
and
pop
sub
sbb
mov
icebp
pop
dec
xchg
pop
sub
xchg
incb
adc
xor
push
push
jb
jo
pop
imul
mov
aas
lock
xor
inc
jbe
add
push
jecxz
insb
xchg
sbb
push
jo
sbbl
sahf
sbb
mov
test
cmp
inc
fnstenv
insl
test
xor
or
mov
ror
out
shl
cld
mov
adc
iret
xlat
add
pop
mov
ja
or
cwtl
cltd
adc
push
fimull
jp
dec
lcall
or
sbb
shrb
or
addr16
imul
jecxz
inc
sbb
movsb
imul
shlb
xor
stos
stos
clc
fiadds
clc
loope
add
iret
cmp
xchg
adc
mov
sbb
stos
jg
xchg
mov
xor
repnz
stos
pop
add
inc
mov
mov
jb
imul
push
adc
js
adc
cs
sub
test
sbb
test
xor
ja
and
mov
or
inc
icebp
pop
fiadds
jg
push
xor
test
pop
dec
cltd
xchg
in
mov
inc
push
outsb
lahf
aam
xchg
mov
cwtl
push
mov
pop
inc
gs
mov
xor
adc
add
enter
hlt
jne
xchg
pop
aam
sbb
lret
xor
adc
xor
push
fwait
and
mov
lods
dec
xor
cmc
cmpsl
lahf
cmc
mov
mov
test
dec
cs
sbb
sbb
inc
or
xor
xor
lds
mov
mov
daa
jecxz
inc
sahf
or
into
push
repz
mov
out
int3
sub
pop
fs
cmc
adcb
scas
mov
mov
sti
and
aam
xlat
in
inc
mov
lds
sahf
pop
pop
xchg
xor
cmpsb
mov
dec
and
mov
cmp
jbe
xchg
xchg
mov
jle
fs
out
test
lahf
xor
jle
int
adc
loopne
je
adc
xor
jl
jne
pop
cmp
or
or
clc
mov
sub
pop
cld
in
or
adc
mov
push
addr16
sarb
sbb
dec
lds
mov
js
out
lods
out
addl
or
add
xchg
pop
push
gs
jge
inc
pop
cmpsl
sbb
test
pop
fistpll
je
xor
out
in
icebp
cmpsl
adc
jnp
mov
int
and
fwait
add
push
dec
adc
inc
scas
int3
sbb
ljmp
inc
fsubl
mov
and
out
mov
je
inc
stc
push
stc
pop
shrl
xchg
rorb
mov
jg
jmp
fldenv
nop
sarb
inc
movsb
out
lcall
mov
adc
call
sub
arpl
xorb
jle
stc
mov
pop
xor
mov
xchg
mov
pop
mov
sbb
ja
orps
punpckhbw
cmp
dec
mov
push
fwait
stos
in
add
cli
loope
adc
xchg
sub
js
sub
adc
fwait
lea
dec
lret
les
mov
jmp
push
pmaxub
insb
xor
dec
jg
mov
cld
and
jge
lods
mov
rorb
insl
xor
push
cmpsl
pop
pop
loop
and
dec
clc
push
nop
std
mov
ds
int
dec
sub
insl
ja
jmp
sub
mov
int
push
and
lods
jl
and
pushf
lds
aad
ficomps
cmpsb
pop
out
or
mov
mov
daa
dec
in
dec
test
rcl
pusha
outsl
clc
push
pusha
ja
in
jns
and
and
mov
out
lea
dec
push
add
inc
aas
mov
sub
outsb
inc
test
xor
mov
shlb
pop
aam
push
adc
mov
push
clc
cli
ficoms
mov
shl
push
sub
cwtl
and
xchg
stos
ljmp
jecxz
cli
push
add
je
mov
cli
pop
dec
in
cmp
mov
cltd
sahf
popa
or
js
dec
stos
add
inc
sti
popa
js
or
outsl
pop
adc
cld
adc
jno
sub
sbb
sub
adc
lock
add
inc
lret
fsubrs
imul
mov
and
stos
or
inc
xchg
mov
jp
add
inc
xor
inc
cwtl
pop
sbb
sub
int3
jb
fwait
popf
imul
jb
mov
mov
xor
add
lods
adc
mov
mov
xor
test
shll
adc
sbb
pop
xor
out
jns
shrl
dec
push
and
mov
andl
mov
aad
stc
jns
std
insb
sub
shrl
jecxz
pop
jl
and
jl
add
out
sbb
roll
and
mov
sahf
shll
addr16
imul
or
mov
loop
stos
gs
pop
xchg
cmpsl
fucomp
je
fs
mov
std
mov
imul
lea
cmovno
mov
iret
sbb
std
xor
incb
xor
xor
inc
sub
movsb
ss
cli
push
lock
jno
test
mov
fwait
cli
mov
cmpsl
arpl
adc
sbb
sub
cli
xor
scas
mov
push
push
and
scas
ret
and
shrb
xchg
aas
jbe
nop
int
mov
mov
mov
mov
jo
fstpt
cmpsl
jb
jl
cli
ret
xor
push
iret
es
icebp
adc
xlat
pop
adc
std
aad
or
push
add
test
adc
mov
jg
add
push
loop
ljmp
jge
add
lret
int
mov
cmp
jno
inc
in
jae
ljmp
adc
sarb
xchg
shl
jmp
incb
lahf
lds
pop
leave
das
xor
cmp
ljmp
std
mov
or
test
sbb
pushf
push
jo
es
inc
xchg
adc
mov
mov
cmp
fsts
adc
jno
mov
jle
mov
dec
and
mov
sub
testb
mov
iret
jo
ret
shlb
mov
adc
jnp
mull
ret
push
push
sbb
idivl
or
mov
into
jb
and
fmul
rolb
loopne
stc
aam
cmp
pop
out
jo
lea
cs
fdivrs
fbstp
in
rcr
out
xor
push
mov
push
dec
mov
jmp
xor
fsubp
cld
or
aas
cmpsb
xchg
out
mov
dec
imul
jge
lcall
rorl
lahf
push
add
aas
mov
xchg
mov
std
cmpsb
stos
jmp
push
sub
gs
movsb
dec
mov
ss
or
xor
orb
dec
cld
lcall
leave
xchg
enter
es
lcall
mov
stos
fs
into
xor
mov
popa
fmul
pop
movsl
xor
adc
pop
xor
mov
sub
jl
scas
mov
push
dec
lds
sbb
mov
add
mov
sbb
in
fcmovnbe
cld
arpl
sub
sbb
mov
and
loope
incb
arpl
ret
in
sub
add
rcl
in
mov
mov
mov
jg
xchg
pop
hlt
andb
aaa
inc
jb
sbb
adcl
sub
or
adc
mov
mov
pop
mov
push
sbb
add
xchg
jl
xchg
push
out
lods
test
push
jp
mov
jo
aaa
insb
or
aam
pop
dec
jae
pop
xlat
inc
mov
orl
mov
je
in
nop
jae
js
fldenv
sbb
mov
fwait
ljmp
jnp
push
xor
mov
cld
rclb
test
mov
jno
popw
mov
jb
mov
jl
out
mov
mov
es
adc
cld
sbb
in
std
cmpsb
mov
das
jle
pushw
fsubr
and
push
nop
mov
cmp
out
mov
imul
pop
add
notl
ret
sbb
cmp
dec
or
out
mov
test
lret
mov
sti
dec
orl
leave
sbb
pop
dec
sarl
sub
cli
xor
or
lock
out
movsb
mov
or
clc
pop
or
negb
mov
dec
addr16
cmp
pop
into
and
faddl
xorb
add
sbb
pop
inc
sub
xchg
rclb
fdivrs
jae
mov
mov
call
cmp
sub
fldcw
jae
sbb
or
aaa
sbb
lea
cmp
inc
dec
push
inc
ret
or
cwtl
mov
push
sbb
ss
jmp
mov
xchg
push
addl
add
fldl
xor
gs
push
ljmp
mov
mov
xor
jmp
sbb
arpl
sub
outsb
lea
mov
adc
cmc
sarl
cltd
js
jp
arpl
push
ljmp
xor
pop
ljmp
ss
andl
and
push
stos
or
adc
aam
mov
jp
push
jg
sbb
nop
xor
xchg
call
pushl
in
addr16
stos
mov
dec
scas
mov
test
push
cmp
sub
movl
jge
xchg
int
inc
add
nop
mov
scas
in
push
or
cmp
mov
dec
pusha
mov
dec
fcom
lcall
icebp
in
cli
jle
jns
imul
cmp
fwait
cmp
fldl
mov
and
insb
adc
movsb
out
sbb
cmp
mov
pop
xchg
clc
jle
sub
fdivrl
mov
push
imul
xor
inc
hlt
ja
scas
divb
pop
cwtl
movsl
push
push
out
ret
jecxz
sti
sbbl
addr16
add
int3
cmp
push
inc
push
mov
cmp
sarl
addr16
mov
xchg
vpacksswb
pop
mov
adcl
inc
gs
test
inc
movsl
or
mov
nop
push
je
cld
mov
jl
mov
arpl
push
cmp
cltd
inc
jmp
aam
rcll
leave
sbb
outsb
hlt
hlt
or
test
mov
rcl
and
push
arpl
inc
outsl
cwtl
mov
shrb
pusha
sub
cmp
pop
add
sarb
loopne
outsb
iret
add
fnstsw
or
lret
mov
sbb
iret
outsl
mov
xor
cwtl
jg
xor
mov
xchg
inc
stos
and
cmc
test
xchg
xchg
inc
lahf
je
or
xchg
xchg
je
lcall
xchg
stos
pop
mov
imul
push
cld
cli
test
xor
mov
ljmp
addr16
test
jno
cli
inc
lods
insb
je
jp
arpl
and
lds
addl
mov
jnp
xorb
and
xor
test
movsb
jo
adc
stc
fs
mov
arpl
jb
dec
sbb
mov
sarb
outsl
mov
aad
mov
int3
add
aad
jg
fidivl
mov
rcrl
pop
ret
push
in
mov
jns
sub
lcall
pop
xchg
or
popf
pop
mov
cs
xor
jns
out
lret
fcmovnu
or
aas
mov
jnp
out
mov
outsb
pop
fs
jmp
ror
gs
insb
dec
and
mov
mov
xchg
ds
cmp
xor
xchg
inc
dec
mov
jle
xchg
jb
pop
cmp
mov
icebp
lods
jne
ds
mov
rcl
mov
sub
cli
mov
push
lcall
das
pop
aas
mov
hlt
fistl
pop
lret
lea
ret
push
test
mov
mov
adc
or
lds
arpl
cmp
mov
cmp
addr16
repz
stc
pop
sub
mov
sahf
xchg
jns
inc
dec
and
xchg
adcb
rcll
xchg
xchg
inc
xlat
icebp
sbb
pop
mov
inc
push
or
ret
mov
dec
jo
or
lret
jnp
xchg
inc
xor
loope
in
jmp
sbb
dec
jecxz
mov
add
adcb
jbe
mov
pop
xlat
cmp
sbb
cli
ss
xor
in
sub
mov
int3
sub
xchg
iret
je
in
mov
cld
push
shll
xchg
lcall
cmpsb
dec
or
lret
mov
jb
sahf
ss
dec
push
in
adc
mov
in
lock
xchg
push
addl
arpl
xchg
mov
aam
pop
pop
sub
and
scas
inc
mov
outsl
orl
push
subl
rclb
cli
fnstcw
iret
faddl
jge
es
test
sub
mov
ret
pop
add
xchg
dec
scas
leave
jmp
cmp
dec
push
jae
leave
pop
push
fisubs
or
stc
movsb
xchg
imul
in
fldcw
inc
adc
icebp
xor
pop
xor
insl
mov
clc
stos
leave
int
aas
push
jnp
sub
pop
scas
push
and
testb
add
add
rcrb
xchg
adcl
lcall
dec
pop
mov
mov
xor
loop
lea
mov
filds
or
test
adc
scas
add
out
add
sahf
jecxz
orl
cmpl
popa
push
dec
iret
add
sub
mov
pop
lods
in
sbb
add
or
jle
adcl
pop
sub
pushf
mov
jge
out
add
nop
pop
pop
mov
mov
lods
mov
das
add
out
cmp
adc
xchg
mov
mov
fldl
or
int3
cmp
adc
shll
jne,pn
pushf
lock
jmp
fwait
and
push
lds
jge
clc
pop
lods
jle
or
dec
mov
push
rolb
add
aam
mov
sub
stos
xchg
leave
ds
popa
jae
sbb
and
pushl
scas
out
push
iret
and
dec
call
cmp
hlt
into
fstpl
rolb
fisubl
out
fs
lods
mov
add
jmp
add
test
sub
negl
inc
popf
pop
dec
pop
push
xor
aaa
adc
jo
mov
xor
mov
lea
arpl
ss
mov
cmc
pop
push
mov
or
mov
in
mov
leave
out
fdivrs
in
in
inc
cmp
mov
push
jge
cltd
push
in
push
dec
rcrl
jbe
in
in
shll
add
pop
xor
xchg
mov
dec
mov
push
stos
movsl
faddl
fistpll
test
imul
inc
stc
cld
xchg
out
popa
jmp
xor
dec
sbb
sub
pop
sbb
sahf
sub
xchg
fnstcw
mov
fbld
cmp
subl
adc
mov
jl
fnstcw
jp
mov
sub
and
mov
aam
xlat
pop
inc
les
mov
xchg
pop
xchg
shrb
clts
mov
jns
or
psrad
out
dec
cmp
iret
mov
mov
imul
and
mov
cld
inc
movsb
je
mov
hlt
sub
pushf
mov
xor
inc
and
shrb
fs
pop
filds
add
xor
xor
mov
push
inc
push
mov
jecxz
jnp
rcl
daa
repnz
jge
jb
repz
pop
dec
ljmp
sub
push
std
add
adc
inc
ja
cmpl
xor
frstor
and
mov
negb
lods
jge
xchg
inc
rcll
add
int
sbb
or
dec
xor
sarl
shr
repz
cmpsl
adc
cld
xchg
pop
div
imul
mov
cmc
dec
or
jnp,pn
inc
xor
jle
mov
sti
pusha
push
push
fsts
pop
data16
data16
fwait
test
loope
iret
adc
mov
inc
dec
mov
lds
and
mov
sbb
adc
sarb
sbb
and
aam
cmp
repnz
xor
sbb
cmpsb
fsubrp
xlat
sbb
xor
dec
cld
out
aad
fisubrl
mov
mov
mov
iret
jbe
mov
jno
mov
mov
lds
or
push
sbb
sub
xor
pop
jge
out
inc
fisubl
stos
mov
adc
pop
fsubs
sub
sahf
fistps
sub
and
jge
sbb
mov
insl
mov
sar
nop
cltd
test
sub
outsb
jno
cltd
adcl
fstps
pop
xor
lret
in
imull
adc
sbb
cmp
jg
add
cmp
jmp
push
pop
std
int3
mov
xchg
cs
fdivs
cmp
subl
jle
lcall
sti
ficomps
aas
mov
outsb
adc
movsl
push
cltd
dec
pop
ljmp
popa
jno
push
clc
sub
sbb
mov
mov
jb
cs
loop
aaa
mov
es
pand
pushf
int
js
mov
and
pop
mov
pop
cmp
sub
and
jo
testl
jl
lock
and
inc
dec
enter
mov
jg
aam
call
mov
test
aas
xchg
aas
xor
data16
jl
dec
std
lcall
daa
mov
sti
clc
sbb
mov
sub
mov
in
inc
fs
aad
push
enter
xor
ja
mov
out
cwtl
ret
repnz
int
in
cmp
push
cmc
push
and
and
sahf
mov
fsubs
shl
cwtl
mov
pop
mov
jns
into
mov
sarb
sub
and
adc
cmp
xchg
mov
lcall
lods
lahf
ljmp
xchg
and
aam
xchg
jne
stc
je
out
xor
cs
orl
hlt
xor
imul
fisubl
mov
xchg
mov
lahf
jnp
push
xlat
icebp
shll
int
push
xchg
adc
popa
pusha
addl
clc
ret
icebp
add
imul
jo
rdtsc
jl
jmp
fldl
cs
dec
es
inc
lahf
rclb
or
loope
push
push
add
or
lret
adc
outsl
cmp
mov
movsb
test
scas
dec
cmp
mov
ret
dec
stc
pop
jmp
fbld
std
movsl
ljmp
add
adc
mov
leave
aam
in
mov
pop
pop
mov
and
and
arpl
jge
into
cltd
fwait
movsb
arpl
mov
and
jmp
rcll
xor
push
cmp
lcall
mov
js,pn
popf
popf
jb
jne
fstpt
lods
sub
jg
mov
clc
push
enter
out
test
int3
je
mov
mov
add
dec
stos
add
push
inc
dec
es
hlt
pop
xor
jecxz
add
sbb
aaa
push
pop
xchg
iret
ja
hlt
and
inc
loop
fwait
add
stc
shr
mov
outsb
dec
ficompl
dec
in
cmpsb
xchg
mov
jno
loope
xor
lods
push
sub
pushf
jmp
stos
push
adc
mov
add
sbb
test
pop
jb
push
xor
leavew
lret
cmp
or
add
std
insb
inc
das
es
sbb
xchg
adc
dec
jecxz
gs
add
mov
adc
push
int3
xor
cs
aad
push
out
clc
cmp
and
mov
movsb
in
leave
mov
xchg
mov
mov
int3
fidivrs
jb
loope
add
les
stc
popa
or
fadd
sbb
fbstp
xor
insb
daa
inc
fstl
jl
jg
pop
fwait
or
sub
aad
addr16
jb
in
movsl
jae
bnd
orl
add
or
mov
push
xchg
sti
and
sub
mov
popf
ljmp
mov
xor
cmp
icebp
xchg
jnp
jno
push
mov
push
ret
cld
rolb
out
in
pop
pop
int
lods
lods
insb
out
out
pop
adc
jb
xor
add
mov
pop
mov
sub
adc
cs
int
lret
fsubrp
pop
inc
bound
and
aas
out
add
sbb
xchg
stc
aas
xchg
loope
mov
sti
es
mov
mov
pushf
fstps
push
dec
dec
out
out
cmpsl
add
mov
push
pop
and
inc
mov
jg
push
xchg
inc
jle
data16
push
cwtl
ret
and
mov
movsb
jo
jne
sbb
dec
push
add
and
cmp
fsubrp
xchg
push
xor
pop
dec
loop
mov
push
push
sub
iret
dec
ja
sub
mov
mov
inc
sarb
sub
sti
fstl
shll
xor
rolb
adc
fxch
jp,pn
call
push
xchg
test
jp
or
aam
pop
adc
lods
dec
loop
xchg
jg
jge
stos
mov
icebp
lret
lds
pop
jl
jo
call
inc
fnstcw
adc
fstpt
mov
sbb
lcall
out
outsl
mov
adc
jmp
clc
mov
insb
cmc
inc
mov
mov
and
mov
in
xchg
std
mov
jns
ljmp
sub
mov
mov
push
scas
sahf
dec
mov
fwait
sub
dec
outsl
push
and
nop
pop
aam
aaa
sahf
mov
pop
or
imul
les
ret
xor
sub
cli
loopne
mov
xchg
mov
sub
jne
ss
adc
andb
mov
in
cwtd
pop
movsl
sub
mov
mov
mov
jne
sbb
mov
push
sub
mov
and
imul
pop
mov
mov
jp
ss
repnz
data16
icebp
inc
push
jne
jecxz
jecxz
dec
xchg
jo
push
enter
pop
push
and
xchg
pop
push
pusha
cmc
add
pop
int3
push
lock
xchg
jae
pop
dec
sbb
std
dec
add
pop
imull
push
add
mov
outsb
ret
inc
popa
push
mov
mov
mov
pop
fstl
pop
or
insl
cwtl
jmp
lcall
outsb
add
test
or
loope
in
and
out
jo
sbb
adc
enter
dec
push
mov
orb
pop
cmc
jo
loopne
icebp
mov
call
mov
mulb
xchg
loopne
jae
dec
lds
and
mov
dec
ss
popa
sti
test
cmp
test
outsl
push
add
sbb
out
sbb
adc
dec
cwtl
mov
js
outsb
sbb
push
pop
inc
mov
sbb
mov
aas
jg
into
pop
pop
push
xchg
jns
pop
loop
xor
clc
into
je
cmpsl
or
in
and
mov
lahf
xchg
sti
adc
js
sub
jb
fidivl
jns
movsb
sub
pop
adc
adcb
dec
lcall
adc
dec
jp
xlat
lea
jp
aam
or
arpl
es
lea
rol
loopne
adc
call
test
inc
pop
rol
add
stos
aad
insb
push
mov
cmp
inc
sbb
xchg
dec
dec
jo
or
into
jae
cwtl
sbb
mov
call
into
clc
call
inc
daa
inc
inc
xor
jb
jmp
pop
inc
cmp
sub
mov
in
shll
es
stc
pop
sub
cltd
dec
jmp
mov
xorb
and
lret
cmp
xchg
movsb
cmpsl
into
cmp
mov
or
or
push
jo
mov
popf
xchg
mov
addr16
lock
sub
out
jo
fisubrl
and
outsl
sbb
andl
push
mov
aam
cmp
dec
pop
jmp
mov
arpl
test
inc
popf
mov
loope
push
lea
push
mov
mov
push
inc
jle
push
popl
shll
or
mov
cld
stos
add
jecxz
cmc
push
adc
aad
push
jne
jge
arpl
fstps
jmp
mov
stos
sub
xchg
xchg
adc
mov
mov
shrl
mov
push
add
vextractf32x4
cmp
ret
pop
jo
sub
inc
mov
xor
xorb
test
cmp
je
and
dec
cs
pop
incl
sarb
sbb
outsl
ljmp
lcall
je
stos
push
cmc
aas
push
call
cmp
push
inc
xchg
sti
iret
xchg
sar
cltd
mov
inc
and
xchg
test
std
or
mov
add
or
sub
lahf
pusha
xor
stos
scas
enter
inc
push
mov
ljmp
dec
std
ficompl
inc
lods
lds
or
loope
xor
test
test
mov
jge
ficomps
push
stos
push
push
das
lods
and
jecxz
jp
inc
jmp
outsl
imul
cmp
inc
adc
repnz
mov
nop
inc
jne
sub
dec
mov
scas
pop
sbb
les
sbb
cmp
mov
fbld
aaa
imul
aas
xor
pusha
nop
add
or
mov
lcall
sub
adc
rcrb
fmuls
outsl
xchg
popf
stos
xchg
push
std
xor
lods
lock
cmp
cmp
in
sbb
inc
inc
repnz
mov
sbb
dec
push
cld
xor
test
mov
sahf
or
mov
push
push
outsl
pop
cltd
pop
insl
test
rolb
jp
scas
addl
push
stos
clc
repnz
dec
pop
mov
sub
or
xor
adc
dec
inc
add
push
loopne,pn
call
shrl
lcall
dec
scas
fwait
push
mov
js
and
popf
push
lock
xlat
aaa
mov
pop
outsl
fsubs
fcoml
or
pop
push
call
je
mov
xchg
push
ror
call
pop
inc
into
xor
push
ds
sahf
sub
ret
sbb
mov
js
mov
lcall
icebp
xchg
sahf
mov
leave
sub
jno
popa
test
inc
sub
cmpsl
imul
dec
pop
roll
fistl
out
xchg
sub
test
sub
shlb
add
pop
adc
jle
jae
sahf
xor
fstl
mov
inc
das
pop
mov
mov
sarl
lret
in
pop
mov
dec
inc
lahf
popa
imul
push
xor
mov
dec
stc
dec
int
cli
pushaw
popf
inc
cli
mov
push
addr16
aad
mov
sub
daa
sbb
cltd
jns
dec
or
mull
sbbl
or
insb
dec
sub
cmp
mov
sbb
imul
lods
mov
push
mov
mov
popf
pop
arpl
cltd
jo
mov
dec
mov
mov
adc
cmp
or
xchg
data16
ljmp
and
xor
pop
jp
imul
jno
repz
sbb
mov
mov
mov
add
icebp
or
xchg
shr
or
jmp
fldt
mov
inc
idivb
ja
cwtl
test
mov
sub
in
dec
push
outsl
adc
testb
inc
dec
or
scas
lods
or
adc
dec
or
jl
enter
add
gs
mov
jnp
mov
call
aam
fwait
pop
sub
cmpsb
pop
cli
sub
insb
xchg
sbb
repnz
xchg
popf
pop
mov
repnz
xor
cltd
test
sahf
and
mov
ret
pop
sub
movsl
mov
loopne
pop
daa
je
mov
and
push
dec
dec
fildll
dec
imulb
test
lcall
push
nop
enter
sbb
jmp
stos
shl
pop
mov
ud2
fidivrl
xchg
sbb
arpl
sub
sbb
bound
xor
push
mov
add
cs
mov
and
insb
fildll
push
jne
mov
jmp
call
dec
lock
mov
aaa
or
push
inc
push
ret
sub
mov
xchg
dec
pop
mov
sub
aaa
pusha
sahf
shrb
xchg
mov
xor
xor
in
or
push
adc
push
mov
sarl
mov
das
xchg
outsl
xor
fwait
inc
notb
sub
aad
mov
pushf
push
adc
js
xchg
dec
daa
inc
pop
stos
pop
out
jecxz
mov
sbb
jmp
or
mov
or
or
xor
mov
push
es
dec
hlt
sbb
repz
add
cmp
test
adc
icebp
pop
fidivrl
mov
and
lea
sahf
popa
jle
dec
loopne
jg
jns
js
pop
dec
lds
notl
sub
mov
popa
fdivs
adc
jno
movl
loop
movb
aaa
mov
fisttps
fbld
out
or
stos
inc
pop
xchg
insl
cli
repz
nop
sti
neg
jno
dec
sub
jo
ss
test
hlt
repz
nop
dec
jp
negl
roll
mov
aas
pop
scas
test
or
jae
mov
add
xchg
fbld
out
mulb
popa
test
iret
andl
mov
inc
dec
pusha
mov
out
inc
xchg
sahf
data16
mov
enter
mov
or
adc
loopne
mov
mov
sbb
cmpsb
cmc
xor
sahf
ja
dec
dec
cmc
dec
aad
in
jmp
lret
ret
jge
adc
fsubs
or
lcall
loope
loope
shlb
mov
andb
inc
add
dec
gs
insb
mov
dec
sti
es
aad
nop
fld
jb
pop
sbb
fsubrp
xchg
jl
icebp
out
pop
cli
cwtl
sbb
jge
roll
and
data16
cs
pushf
jo
xchg
adc
test
sub
jbe
addr16
sarl
insl
mov
push
cmp
cmpsb
or
or
pop
mulb
rcrl
sub
mov
cmp
push
xchg
inc
movsb
cmp
push
adc
xor
mov
mov
cmp
push
cmc
loopne
xchg
mov
mov
xchg
pop
lret
cmp
pop
imul
fwait
push
and
test
or
xor
pop
xchg
push
xor
aad
in
jg
sbb
das
sbb
decl
adc
xchg
pop
adc
fsubs
int3
repz
jno
cmpsl
in
mov
mov
shl
mov
lahf
bound
adc
sbb
ja
fldenv
inc
xor
cmp
popf
pop
or
jnp
add
or
icebp
cs
jmp
adc
xor
leave
add
jmp
add
test
in
dec
dec
push
jl
dec
or
lret
mov
out
or
push
pop
add
inc
ds
leave
pop
std
mov
test
add
ret
arpl
in
pop
icebp
add
leave
lds
and
cmpb
and
adc
pop
hlt
insl
and
idivl
loopne
test
int3
imul
orb
add
adc
mov
or
stos
or
fistps
ret
jae
push
cmp
sub
inc
cmp
inc
and
mov
mov
sub
cmp
jo
mov
jo
fnsave
sarb
xchg
push
push
ds
inc
mov
push
repnz
pop
out
into
cld
inc
cmp
or
das
movsl
xor
pop
xchg
pop
push
push
xchg
or
mov
sub
call
jecxz
call
add
in
mov
lea
dec
pop
and
jbe
push
iret
mov
pop
jg
inc
andb
test
das
movsl
pop
mov
and
outsl
out
jl
mov
and
push
mov
in
movsb
jmp
nop
lret
push
popa
pushf
push
in
enter
sub
das
cld
rorb
cmpsb
pop
inc
pop
shll
jb
xchg
iret
int
pop
xchg
pop
pop
lret
sub
jnp
inc
mov
push
test
mov
out
pusha
pop
pop
aas
xchg
insl
push
jno
mov
push
sbb
movsl
sub
daa
fnstenv
cmc
mov
mov
jns
movsb
jbe
dec
mov
push
insb
psrlq
xchg
test
sub
mov
mov
jnp
mov
fistpll
push
push
movsb
pusha
adc
or
outsb
or
mov
fwait
jl
sbb
out
inc
xor
adc
ret
mov
popa
xlat
in
dec
jl
nop
adc
stc
pushl
adc
or
push
int
inc
cmp
in
inc
clc
pop
stos
dec
ja,pt
cltd
lds
mov
add
sysret
dec
les
inc
add
mov
jae
stc
les
or
outsl
and
sbb
sub
aas
cld
incb
out
xchg
pop
and
push
arpl
mov
into
lds
add
inc
cli
xor
adc
in
mov
aaa
test
add
xchg
fidivs
lds
leave
pusha
mov
dec
fstl
mov
or
insb
mov
jp
scas
adc
add
and
test
add
xchg
push
push
push
cld
lods
dec
and
cli
fstpl
popa
scas
repnz
in
jbe
jnp
gs
jns
stos
sub
push
dec
cmpsl
call
leave
lock
jb
push
push
clc
inc
push
stos
xchg
fdivr
and
adc
mov
aam
out
add
fs
xchg
push
fdivs
sbb
leave
test
jp
add
loopne
cmp
cmp
sbb
int3
call
and
lock
sub
cmpsl
mov
pop
jno
mov
jmp
and
mov
add
pushw
mov
adc
fisttpl
outsb
mov
jb
fiaddl
or
cmpl
cmc
stos
cld
jle
inc
cwtl
jecxz
dec
xor
sbb
push
inc
mov
lods
xor
gs
out
and
sub
adc
cmp
mov
int3
sahf
dec
or
and
inc
ret
mov
or
add
add
add
add
mov
test
add
pop
mov
add
add
pop
cmpsl
add
xor
outsl
addr16
test
cmpsl
shlb
push
xchg
movsb
jmp
jo
cmp
lds
out
xor
xchg
xchg
xchg
mov
fisubs
mov
xor
dec
lods
mov
movsbl
mov
sbb
popa
dec
and
or
popa
out
mov
or
xchg
les
cli
inc
jno
test
and
lods
sub
mov
pop
dec
push
adc
data16
mov
pop
jo
fs
stc
daa
jmp
jecxz
pushf
cli
outsl
lock
cli
push
ss
js
loope
loopne
inc
cmp
rorb
test
inc
imull
push
mov
mov
jle
xor
loop
adc
mov
add
or
and
xor
or
dec
push
cmp
fmuls
stos
insb
adc
mov
lcall
mov
push
test
lock
clc
jge
and
xchg
rorb
mov
cmp
std
rcr
es
mov
loope
jle
sbb
sti
jg
movsb
pushf
repnz
push
mov
and
inc
mov
or
lcall
jp
mov
add
adc
loop
or
hlt
hlt
clc
adc
repnz
sbb
scas
sbb
xchg
jbe
sbb
push
dec
daa
pop
fcompl
bound
shll
mov
orl
rorb
scas
or
imul
lcall
xchg
je
shlb
mov
mov
jecxz
push
inc
leave
dec
lds
jne
fstpl
inc
cmp
jnp
cmpsl
mov
and
cs
jb
jb
pop
lods
xchg
fidivrs
cmp
cmp
fdivl
outsl
cmp
or
mov
pop
lock
adc
cld
push
mov
adc
inc
and
adc
mov
rcrb
fisttpll
ret
push
sub
sub
push
mov
and
mov
push
mov
fldt
add
push
mov
or
in
iret
xchg
imul
xchg
addb
xchg
lods
mov
inc
cmp
cmpsb
arpl
imul
push
rolb
arpl
and
outsb
xor
loopne
xor
add
jmp
sti
pop
jmp
and
call
fisubrs
push
cmc
mov
or
inc
inc
dec
test
mov
clc
mov
adc
fcompl
fwait
rcrl
outsb
loope
lret
inc
push
xlat
and
jg
inc
rorb
xor
sahf
or
xchg
and
popa
pop
dec
mov
pop
fcoms
jg
ret
pop
orl
in
inc
adc
arpl
jns
jae
ficoml
pop
in
jae
dec
xchg
imul
xchg
jecxz
sbb
subl
aam
loope
add
sub
mov
pop
unpcklps
iret
mov
push
sbb
xchg
xchg
push
push
cmp
jb
add
insl
in
pop
popf
out
clc
push
add
sbb
les
pop
outsl
xor
lahf
rol
cmpsl
push
or
push
pushf
ret
sbb
jno
xchg
fwait
xchg
pop
mov
and
inc
scas
mov
cmc
and
scas
xchg
sarb
mov
aad
and
cld
add
test
xchg
fistps
sbb
pop
mov
stos
jb
into
test
push
stos
stos
mov
adc
mov
repz
and
adc
insl
mov
popf
dec
jmp
mov
ss
idivl
mov
adc
push
inc
adc
cmp
mov
inc
ja
orb
js
test
and
lahf
lret
sub
mov
jle
pop
in
push
int3
cmp
jb
push
xor
sub
push
adc
addl
push
aas
neg
xchg
mov
js
jge
dec
sub
cmp
mov
mov
and
mov
cltd
sub
cmc
sub
sbb
lcall
jp
xlat
cmp
inc
shll
jg
fs
shlb
jnp
mov
mov
test
ss
std
and
loop
cmp
sahf
cmp
lods
fisubl
aam
mov
call
int
add
loope
imul
std
jbe
sub
xlat
or
sub
mov
and
sbb
inc
insb
mov
mov
push
xchg
pop
test
cmp
add
inc
mov
fsubrl
in
repnz
mul
fcomps
dec
add
pop
pop
ljmp
cld
popa
cmp
andb
pop
jbe
cmp
loope
fsubl
rolb
sbb
mov
fyl2x
cld
and
pop
xchg
popf
sub
jp
out
jmp
dec
xchg
push
fs
add
aas
or
cmp
shlb
or
jg
rorl
push
clc
inc
lock
inc
dec
sub
fcompl
lret
and
scas
mov
out
sahf
lret
adc
ret
nop
repnz
sub
pop
in
dec
and
add
xchg
popf
mov
mov
sbb
inc
push
jns
popf
mov
and
aam
dec
xchg
inc
mov
imul
inc
push
mov
scas
test
mov
xlat
fwait
cmpsl
xchg
scas
mov
data16
std
ret
mov
movsl
and
mov
insl
movl
xchg
cmp
pop
fistpll
mov
xchg
and
lret
test
arpl
int3
pop
mov
out
test
popa
bts
out
in
xor
cli
punpckhbw
xchg
in
scas
or
pop
or
push
jle
or
in
addl
cmpsl
pushf
dec
and
add
mov
icebp
pop
push
pusha
insl
push
mov
sbb
call
int
cmpl
clc
mov
pusha
and
mov
test
push
mov
sbb
mov
mov
cwtl
or
mov
icebp
inc
popf
mov
fidivrs
adc
mov
sbb
test
push
lahf
xchg
jecxz
push
leave
or
mov
jns
arpl
mov
test
aas
mov
and
adc
xor
aaa
adc
and
repz
int
int
in
push
and
push
out
ror
hlt
or
cmp
gs
in
mov
loope
dec
add
roll
sbb
add
push
mov
pop
cld
pop
outsb
cmc
mov
scas
cld
xor
sbb
jecxz
jle
jecxz
idivl
fdivs
lahf
addr16
or
in
fs
outsl
int3
pop
cmp
pop
shrl
fstl
xor
lret
arpl
out
cmp
push
sub
push
and
lock
out
fsubl
or
ret
xchg
pusha
mov
lahf
cmp
or
fsubr
pop
xor
int3
jecxz
addr16
xorb
mov
aad
fs
adc
adc
stc
add
jo
add
jle
jl
arpl
hlt
adc
mov
add
lahf
inc
sub
scas
add
adc
nop
nop
mov
sarl
bound
xor
insb
lods
pop
sbb
in
cmp
push
sarl
push
pop
lods
xchg
test
sbb
mov
movsl
aaa
mov
stc
or
add
neg
jnp
mov
addl
je
inc
inc
aam
bound
xchg
pop
icebp
aad
push
lcall
xchg
inc
shl
push
stos
jl
addr16
mov
xchg
mov
adc
enter
pop
sub
std
or
pop
sub
lods
sahf
mov
dec
mov
std
mov
mov
mov
adc
dec
sub
lret
and
dec
ljmp
sbb
mov
push
lea
test
jne
inc
mov
xchg
dec
aaa
pop
mov
cwtl
movsb
sti
sbb
adc
push
lcall
in
cmpl
pop
pop
xlat
pop
ja
mov
movsb
sub
subl
pop
jle
xchg
lret
jge
xorb
std
mov
lcall
pusha
adcl
and
divl
into
push
fsubrs
movsb
xchg
jnp
jnp
test
xor
cmpsl
repz
mov
dec
mov
sub
add
fst
mov
ss
sub
roll
cmp
jns
imul
mov
push
lds
and
add
add
enter
pop
or
fadds
mov
outsl
stos
pop
jb
sub
xor
sub
xchg
das
into
addl
shll
rorl
push
stos
pushf
cmp
adc
lods
adc
lock
lock
mov
stos
push
and
mov
pop
in
lds
shl
movb
adc
xchg
ret
adc
mov
stos
dec
jmp
mov
test
movsb
lods
stos
lret
sub
sbb
sbb
add
adc
push
xchg
push
inc
outsb
outsb
push
rcrl
cs
jne
pop
inc
pop
ljmp
xor
cli
out
aaa
inc
int3
les
loopne
mov
rclb
mov
repnz
aas
mov
fidivs
xor
and
lret
cli
xchg
xor
pop
adc
clc
jp,pn
mov
loope
sbb
adc
aas
mov
mov
xchg
stc
dec
aaa
pop
xor
popf
fcoml
fisubrs
data16
mov
lahf
jmp
push
fsubl
mov
aad
shlb
push
cwtl
jns
out
adc
arpl
dec
sub
mov
loope
in
mov
jecxz
pop
xor
bnd
sub
loopne
arpl
cmp
xchg
stos
outsl
nop
mov
xchg
arpl
sbb
rorl
aam
mov
cli
hlt
cli
jp
mov
jl
loopne
insb
les
mov
orb
out
jb
insl
nop
add
and
out
sti
dec
mov
lcall
cld
xor
int
jp
dec
mov
imul
test
rcrb
test
test
stos
xor
inc
dec
cltd
aam
push
stos
dec
in
push
sub
outsb
in
jge
add
inc
cwtl
push
mov
mov
cmp
outsl
in
rorl
sub
pop
pop
sbb
fsqrt
inc
sub
mov
jg
push
jge
cmp
add
pop
pop
outsl
and
lret
inc
push
and
cs
sbb
jle
pop
sbb
sbb
jge
and
das
cli
pop
lock
xor
pop
sub
leave
cltd
fnsave
popl
mov
push
int3
adc
xchg
or
cwtl
popa
loopne
and
or
adc
out
hlt
and
addl
jbe
and
mov
jp
stc
out
and
lock
loopne
dec
test
mov
ja
fisubrl
lock
pop
out
xchg
arpl
xor
sub
xchg
ret
xchg
xor
inc
xor
sub
push
gs
adc
test
cmp
pop
sahf
and
add
in
push
sti
lods
dec
jb
cmc
push
mov
loope
sbb
or
cmp
sti
repz
stos
pop
cld
aas
cmc
popf
movsl
and
cmc
mov
js
mov
cmc
xchg
xchg
test
xor
aas
push
pop
pop
dec
dec
std
mov
mov
les
push
xor
adc
jo
dec
rorl
dec
test
out
jb
xchg
outsb
or
jb
inc
repz
jne
aas
mov
or
test
sbb
inc
aam
or
stos
cli
sub
and
out
enter
lahf
shr
push
sub
subb
lods
xor
icebp
sarb
loopne
outsl
push
jns
sub
test
subb
push
dec
pop
bound
xor
clc
cwtl
pop
ja
shl
fistl
addl
js
push
hlt
leave
cld
notl
int
aad
movsl
or
xchg
in
adc
movsb
daa
push
sub
mov
ftst
lock
xchg
outsl
lret
mov
mov
mov
push
ja
hlt
lock
inc
nop
push
dec
sub
cmp
aas
cmp
fdivrl
or
aaa
fdiv
je
mov
in
dec
and
fwait
popf
sbbl
lret
mov
mov
sbb
cmp
xor
les
pop
add
fwait
pop
push
out
pop
or
clc
into
sbbb
sbb
xor
sub
clc
mov
cmp
ds
and
cwtl
add
rcll
lock
cli
pop
mov
add
out
dec
imul
jecxz
fsub
add
leave
pop
shl
mov
ss
test
std
sti
sbb
push
xchg
jne
dec
iret
fstps
mov
dec
movsl
aam
add
xchg
fdivl
mov
jno
andl
jno
cmp
mov
pusha
idivb
mov
rorb
xchg
in
int3
push
sarl
xchg
cmpsl
loop
push
sbb
pop
out
and
mov
mov
mov
rolb
sahf
sbb
out
imul
jo
mov
int3
test
inc
add
fldl
dec
lret
pushfw
cmpsb
cwtl
fbld
in
or
jbe
icebp
sbb
add
sarb
cli
pop
xlat
loopne
insb
add
out
cltd
jo
arpl
jb
xchg
ret
add
inc
pop
daa
loopne
jg
cld
pop
and
daa
ficoml
xor
push
loopne
int3
sub
inc
add
in
sub
out
mov
loop
or
pop
xor
pusha
mov
push
popf
dec
test
ret
stc
testl
push
pop
lock
ret
and
popf
mov
andb
sbb
or
add
imul
adc
fisttpl
mov
sbb
cmp
add
lret
xor
arpl
sbb
pop
push
fsubrl
movsb
mov
sbb
shll
cmp
adc
sub
out
je
outsl
sub
adc
mov
jne
pop
imul
adc
inc
jno
ret
and
jge
push
inc
fcomi
lahf
xchg
sub
jl
test
adc
icebp
xchg
es
enter
fldl
jge
add
mov
or
test
bound
add
jecxz
adc
cmpsb
popf
fldt
movsb
adcl
out
ds
mov
push
insb
rcrl
inc
sub
div
jb
push
fdivl
inc
jne
sub
ljmp
push
or
arpl
inc
test
adcb
rcl
daa
stos
int3
sbb
lret
insb
or
xor
xchg
sbb
fcomip
pop
jecxz
int3
in
and
jmp
push
ds
adc
or
in
sub
mov
stos
jge
cltd
rclb
pop
xor
lea
clc
dec
call
mov
and
sbb
push
cmp
mov
ss
pop
scas
cmp
out
inc
sub
push
stos
mov
ja
subb
and
push
flds
shll
in
xchg
pop
shlb
movsl
xchg
frstor
jbe
pop
aaa
lret
fs
push
out
fisubrl
or
xchg
pop
lahf
xlat
jle
xchg
out
in
inc
inc
popa
fcomi
sbb
mov
test
stos
loopne
sub
in
sub
sbb
fsubl
push
les
add
mov
shrb
stos
fisttpl
shll
push
iret
pop
push
dec
sbb
mov
daa
jmp
pop
dec
xor
adc
mov
fwait
cmp
jno
pusha
imul
jne
jg
fmul
or
shll
mov
rcrb
mov
inc
push
int
push
jns
loope
cmp
out
call
push
sbb
leave
pop
lods
mov
mov
addr16
pop
mov
jo
cmpsb
call
cmp
cmp
xchg
lret
sbb
dec
pushf
mov
sub
out
aas
mov
sub
xor
rcrl
arpl
push
out
and
dec
cmp
out
inc
cmp
xor
rorb
mov
pop
push
xchg
adc
inc
or
hlt
and
add
fucomip
imul
in
mov
sbb
mov
push
mov
mov
aam
inc
out
je
roll
jb
fwait
mov
push
push
flds
mov
cmc
fbstp
inc
xor
ds
mov
inc
loop
es
inc
xor
rclb
cmovne
test
inc
fistpll
xorb
or
ret
sbb
xchg
sub
mov
mov
pop
mov
pusha
dec
mov
popa
inc
pop
jae
jg
and
dec
out
setge
mov
ja
mov
mov
fiadds
push
test
lret
jne
adc
mov
xor
push
add
rcll
ss
xor
sbb
pop
stos
xchg
out
xor
cmp
notl
add
sbb
dec
faddp
mov
jmp
and
cmc
lock
cmp
sahf
test
rcll
repz
xor
cmp
xchg
jnp
or
adc
out
lods
out
push
mov
pushf
xchg
in
xchg
or
and
mov
dec
adc
cmc
pop
sbb
out
xor
ds
sub
mov
mov
outsl
or
pop
mov
test
sub
mov
sub
les
inc
xchg
push
xchg
iret
push
jp
dec
mov
push
sbb
scas
mov
out
fldl
jno
push
jge
mov
fwait
pop
mov
jp
sbbb
imul
fisubrs
add
push
nop
in
out
cwtl
shrl
lods
push
cmpsb
repz
cmpb
adc
adc
aam
mov
outsb
scas
rcrb
jb
mov
das
add
xchg
sbb
mov
sbb
fsubl
jb
xchg
lods
xor
adc
jo
stc
arpl
aaa
stos
je
in
cmp
cmp
pop
popf
stos
lcall
lret
out
cmp
pop
inc
cmp
mov
fdivrl
insb
ret
je
push
sub
jp
xchg
mov
and
aam
dec
scas
cmp
pushf
jns
popf
mov
push
dec
sysret
in
sbb
js
dec
inc
inc
xor
mov
std
arpl
mov
pushf
andb
mov
fsubl
and
adc
inc
and
inc
sub
jmp
mov
adc
mov
ror
or
sti
xor
add
xchg
adc
sbb
adc
mov
xlat
jne
jo
inc
cmpsl
out
int3
fisttpl
out
mov
ds
jb
and
xchg
in
ret
mov
push
inc
int3
ret
or
add
aas
stos
shlb
mov
add
lods
xchg
mov
mov
xchg
inc
xor
loopne
or
sbb
cltd
push
or
sbb
xchg
sub
fs
pop
pop
inc
and
xchg
lcall
mov
cli
cmp
ret
and
iret
dec
out
sub
add
shrl
mov
fdivl
ficoml
pop
cld
cmpb
jecxz
mov
mov
jmp
stc
in
cmp
outsl
es
inc
addl
adc
inc
mov
push
push
shll
aam
scas
fcmovnbe
adc
dec
comiss
jbe
test
pop
cmp
in
jl
jg
inc
cmc
push
jb
add
push
out
jb
lahf
imul
cmc
scas
mov
jno
pop
repz
jae
push
cmp
jae
fidivs
xor
pop
out
shlb
subl
sub
je
cmp
or
mov
and
cmp
clc
iret
nop
shll
mov
mov
add
ja
or
mov
mov
out
cwtl
mov
ja
push
push
lods
into
int3
clc
bound
loop
cmp
add
cs
int
push
ss
inc
repz
mov
cmpsb
je
dec
mov
xor
lret
jns
pop
out
dec
ror
insb
sub
sub
and
sbb
xchg
seto
mov
cltd
jae
dec
jnp
ja
ljmp
cmp
dec
clc
leave
stc
xchg
out
incl
js
or
mov
sub
adc
std
inc
out
jnp
adc
ja
push
lock
cmp
lds
xchg
enter
rolb
ss
pop
cmp
inc
pop
in
dec
dec
sub
push
mov
push
jns
sbbl
xor
push
fiaddl
andl
jecxz
int
fsubr
cltd
push
test
mov
add
cmpxchg
jae
mull
test
sub
int
mov
xlat
sub
gs
push
jbe
dec
mov
lods
ja
fistpl
push
cmc
jbe
fxch
sti
pop
scas
stos
or
imul
jne
inc
into
push
out
sar
imul
aas
xchg
ljmp
lock
xchg
bound
add
add
stos
shlb
scas
out
ds
shlb
inc
addr16
pushf
mov
dec
cmpsl
dec
in
call
pop
clc
xor
nop
add
lcall
and
mov
dec
iret
push
xlat
mov
cmp
sbb
fiaddl
inc
rcrb
dec
cmpsb
in
movsl
adc
push
xchg
and
ds
inc
xchg
jmp
subb
mov
out
scas
popa
jl
sbbb
push
sbb
addr16
push
push
sti
cmpsl
xor
ret
fbld
fadds
ja
loope
sub
xor
xchg
mov
arpl
mov
enter
dec
test
pop
lret
cmc
push
adc
sti
push
std
fcompl
lahf
mov
mov
bound
pop
cmpl
jl
cmp
cmpsb
pop
mov
fs
outsl
frstor
mov
hlt
cmp
add
mov
sbb
pop
mov
cld
cmp
mov
mov
pop
and
enter
das
int3
pop
pop
js
sbb
int
fsubrs
cmp
pop
ret
in
popa
popf
sbb
inc
jnp
jns
mov
push
jo
test
adcb
sbb
lahf
lods
sti
mov
or
mov
mov
inc
je
add
or
mov
dec
cmpsb
in
test
push
mulb
imul
and
fwait
pusha
stc
cld
jmp
or
aaa
jp
push
add
jl
dec
push
mov
aad
lods
in
xchg
inc
stos
jmp
clc
cs
test
mov
pop
orb
hlt
or
pop
push
push
cmc
lods
push
in
shrl
mov
sbb
outsb
cmp
pusha
lds
and
fcmovu
filds
sub
insb
iret
mov
lret
push
push
loop
mov
dec
out
sbb
sbbb
rcll
mov
jno
push
jge
leave
daa
pop
imull
lock
enter
add
lds
fwait
in
mov
mov
mov
dec
sahf
lds
sbb
imul
push
push
inc
xchg
ja
mov
pop
sub
clc
pop
std
jg
rol
loop
movsb
xor
insb
test
fidivl
hlt
loopne
ret
cmp
xor
push
xchg
xor
mov
cmpsb
cmpsl
xor
and
add
xchg
sbb
in
pop
sub
xchg
cmp
and
fldt
test
mov
aad
mov
mov
or
int
adc
adc
inc
mov
dec
das
jnp
imul
pop
out
xor
mov
mov
mov
leave
mov
add
sbb
inc
or
xchg
rcl
fidivl
lea
jmp
pop
xchg
lret
jnp
insl
xchg
jbe,pt
popa
push
push
lret
loopne
daa
adc
cmp
mov
orb
xchg
cmp
jbe
pxor
push
xlat
jne
and
cmp
test
jb
jl
cs
push
loope
mov
dec
ds
imul
ficomps
or
mov
fcmovb
shrl
xchg
sbb
sbb
jne
push
data16
xor
mov
in
sub
cmp
jg
addr16
jmp
lock
adc
sub
inc
sti
jge
add
cwtl
stos
add
test
push
into
or
inc
xchg
fsts
loop
in
sbb
mov
xlat
loopne
scas
jle
out
movsl
xor
cmp
cs
in
or
in
inc
faddp
mov
jno
mov
ret
sub
inc
pop
popf
rorb
and
or
pop
add
jnp
sbb
push
mov
sub
mov
jae
dec
ds
leave
add
push
sbb
into
hlt
inc
push
xor
ja
int3
cmp
cmp
les
jge
xchg
pop
xchg
ffree
lahf
mov
data16
or
out
mov
mov
mov
cmpsb
out
ja
cs
iret
inc
xor
pop
xchg
push
out
mov
ljmp
and
mov
mov
cltd
and
inc
or
pop
sbb
movsl
stos
dec
mov
hlt
jb
mov
popa
fmull
inc
sbbb
leave
adc
fmuls
sub
mov
add
push
mov
dec
push
inc
jecxz
jae
hlt
xor
mov
daa
mov
inc
cmp
incb
outsl
inc
add
in
or
sbb
cmpsl
rcr
mov
xlat
jmp
add
stc
aas
push
add
cmpsl
mov
lahf
out
push
negl
loope
dec
sahf
mull
dec
in
xor
lods
popa
aas
xchg
add
out
mov
xchg
xchg
sub
hlt
mov
scas
inc
and
add
mov
fidivs
xlat
xchg
dec
mov
or
jae
sbbl
aam
push
cld
outsl
mov
inc
cmp
pop
and
movsl
rcr
push
rcll
push
jmp
xchg
test
mov
sarl
or
push
xor
add
bound
das
ret
in
cmpsl
push
aad
adc
sub
inc
mov
mov
mov
sub
cmp
xor
cmp
aas
mov
xor
sbb
xor
jecxz
stos
sahf
sarl
push
pop
aad
repz
dec
call
mov
jno
sub
jmp
es
les
push
daa
cmp
adc
sbb
pop
pop
mov
mov
fdivs
xchg
outsl
adc
push
xchg
xor
add
cltd
dec
out
fdiv
sub
or
lahf
inc
mov
pop
icebp
lahf
hlt
dec
sub
loope
out
adc
sub
es
data16
scas
shll
jmp
pop
cmc
xchg
sarl
or
mov
pop
jo
scas
add
cli
ljmp
mov
xor
add
ja
cld
pop
pop
lock
add
out
cmpsb
jmp
push
xchg
jle
pop
xchg
test
out
mov
mov
fdivp
or
jb
inc
jmp
jmp
insb
movsb
xchg
jbe
cltd
scas
xchg
push
notl
adc
mov
lea
cmp
push
adc
inc
or
inc
push
push
or
xchg
stos
stos
fs
dec
ja
push
dec
and
andb
movsbl
std
es
jge
or
rcll
add
daa
push
loopne
adc
pop
outsl
nop
add
pop
xor
and
into
cwtl
xor
pop
cli
popa
adc
stos
test
jb
ljmp
mov
les
out
and
leave
cwtl
jno
pusha
sub
inc
xor
stc
push
mov
inc
cmp
push
mov
cmp
jb
lret
dec
mov
mov
inc
and
add
jge
mov
movsl
scas
mov
or
xor
push
aam
mov
xor
dec
pop
fiaddl
stos
xorb
dec
pushl
ja
shrl
mov
cmp
inc
push
ljmp
mov
sbb
imul
mov
call
lret
inc
les
sti
int3
test
iret
or
xlat
mov
pusha
pop
xchg
insl
mov
notl
shll
es
sub
cli
add
xor
pop
lahf
sub
or
xchg
mov
xchg
jmp
mov
mov
xor
fsubrl
stc
mov
loopne
loop
shlb
and
sbb
mov
adc
sti
testl
jl
xchg
fwait
sahf
sub
in
xorb
in
push
fs
std
inc
cld
mov
mov
rcll
sbb
push
dec
cmp
jo
in
push
lcall
push
jae
scas
test
jp
or
shl
test
into
xor
fidivs
pop
push
or
int3
in
adc
sarb
mov
aad
fwait
leave
imul
xchg
insl
into
out
mov
mov
test
add
sarb
pop
fisubl
aaa
jae
test
pop
subb
aad
aad
lds
shrb
popf
mov
jo
push
mov
push
or
testl
jle
mov
clc
xor
mov
sub
cs
rorb
bound
ss
fwait
rorl
adc
fwait
or
je
hlt
loope
pop
cmp
icebp
mov
or
test
jmp
jle
pop
push
or
push
lea
dec
gs
mov
mov
dec
mov
nop
xchg
sti
mov
hlt
insb
mov
pusha
jg
pop
sbb
pop
das
mov
cmpsl
mov
cmp
add
sbb
mov
mov
sbb
xor
adc
fcmovu
shlb
in
bound
and
ja
cld
test
and
gs
in
bound
loop
repz
pop
mov
ljmp
dec
scas
inc
push
jns
pop
cmpsl
cmc
inc
bound
push
sarb
inc
lahf
lea
jns
mov
and
fbstp
xor
mov
icebp
sbb
out
inc
push
pop
adc
cmp
and
or
cltd
scas
lds
dec
mov
push
or
cmp
jns
loope
pop
sub
in
xor
dec
jb
mov
pop
mov
jb,pn
xchg
repz
xchg
in
and
dec
inc
and
aas
mov
sub
lods
shl
and
ret
push
push
insl
or
xchg
pop
ljmp
cld
or
cmp
xchg
pop
adc
shlb
aam
test
xor
divb
stos
xchg
inc
pop
pop
fsubrs
or
test
mov
mov
popf
repz
aad
xchg
and
mov
ror
mov
jecxz
and
stc
in
add
dec
mov
aam
lds
or
movsb
and
outsb
mov
ret
fstpt
mulb
inc
cwtl
sahf
stos
sub
cmp
cmp
pop
lods
sub
adc
pop
aaa
mov
or
mov
mov
stc
pop
out
shl
in
int
popf
push
sbb
lahf
stos
nop
jb
std
add
insl
insb
ss
lahf
cmc
adcl
mov
loop
jecxz
jno
enter
cmp
shll
retw
popf
mov
enter
mov
push
and
xchg
dec
adc
test
jmp
cld
sub
mov
repz
or
cli
cltd
loop
test
out
jns
arpl
jno
pop
divb
bound
aaa
mov
push
mov
sahf
push
dec
mov
inc
adc
repz
sahf
sbb
enter
jmp
or
cs
bound
xor
inc
mov
mov
sbb
cwtl
mov
leave
aaa
dec
jae
outsb
jge
mov
mov
loopne
mov
sti
in
pushw
outsb
leave
pop
jbe
pusha
cmp
mov
ljmp
jle,pn
sahf
lds
gs
imul
jge
rorb
add
push
mov
mov
movl
pop
mov
call
and
and
and
adcl
jb
pop
xchg
jns
pop
lds
cmp
in
pop
push
inc
sarb
enter
rorb
cmpsl
xchg
mov
mov
push
icebp
jae
aad
cmc
and
mov
mov
push
push
pop
das
vpshufd
enter
and
pop
and
andb
cli
cli
fcomps
popf
and
cli
jmp
inc
xor
pop
sbb
jne
scas
movsb
jae
rol
movsl
js
jge
adc
sbb
ret
stos
cmp
fldz
push
fbstp
nop
mov
mov
push
cltd
mov
scas
test
outsb
faddp
test
in
mov
js
xor
adc
push
sub
clc
jae
test
jne
and
adc
push
std
jae
shll
pop
sub
add
sarb
lock
sbb
je
ret
pushf
jno
pusha
and
in
enter
cmc
xchg
inc
jg
push
leave
and
lds
pop
loop
mov
std
int3
pop
stc
inc
xlat
rolb
and
iret
mov
mov
ret
lcall
mov
jl
xchg
orl
lds
jnp
ja
fimuls
clc
aam
cwtl
cmpsl
push
lret
je
inc
out
push
movsb
inc
shrb
ds
pop
pop
cwtl
lods
adcl
add
daa
jns
pushl
hlt
sbb
movsl
add
mov
arpl
insb
fsubrs
lret
mov
push
sbb
inc
mov
rcl
push
push
inc
inc
stos
stos
xchg
and
sbb
popa
mull
jae
call
shl
mov
mov
shl
out
cmpb
scas
xor
frstor
jg
mov
or
push
mov
cmc
xor
xor
inc
push
adcb
push
fs
stos
repz
popa
jp
push
dec
cmp
sub
mov
jae
cmp
aad
jge
es
sarb
sbb
dec
mov
inc
cmpsb
shll
mov
mov
xchg
out
lret
das
jmp
dec
xchg
xlat
mov
into
or
cmp
cmc
sub
dec
xchg
and
dec
ficomps
adc
pushf
push
lahf
repz
test
pop
pop
fwait
push
lret
and
daa
jo
lods
aas
ret
rcll
lock
cmc
iret
mov
mov
in
xor
jmp
push
sti
jbe
cld
icebp
cli
out
out
int3
mov
fstl
mov
ss
xor
outsb
lods
jae
scas
jge
fnstcw
cmp
jo
adc
push
int
aas
mov
shll
mov
jo
xor
push
test
mov
pop
and
xchg
adc
movsb
add
xchg
loope
test
fucom
repz
data16
pop
cmp
push
lcall
pop
lods
cmp
out
call
std
sub
outsb
mov
data16
add
jo
jb
dec
testl
stos
mov
vcvttpd2dqy
push
xchg
inc
jp
test
cli
push
lahf
decl
std
add
shrl
ret
mov
add
sub
js
cmp
dec
ds
scas
dec
jo
dec
add
mov
das
jo
fdivs
pop
fwait
js
repz
loope
stos
imul
subl
sbb
inc
xchg
lock
jmp
jne
push
inc
sahf
imul
xor
sub
ret
notl
aad
es
add
clc
sbb
or
popf
lea
push
push
jbe
popa
add
nop
rolb
adc
dec
idivb
imul
xchg
mov
add
pop
pop
fsubs
ffree
sub
add
cld
cmp
xchg
sbb
lret
lock
shlb
push
mov
lock
call
add
inc
xlat
gs
mov
imul
xchg
mov
mov
fbld
andps
sub
add
dec
xor
mov
xor
mov
xchg
xchg
jge
das
xor
adcb
push
xchg
flds
test
mov
repnz
cmp
add
jge
hlt
sbb
mov
sub
mov
dec
div
xchg
out
je
sub
ss
or
mov
or
test
clc
cmpsb
maskmovq
mov
std
and
adc
orl
inc
lret
cmpsl
mov
bound
xchg
ret
dec
sahf
int3
sbb
add
adc
xor
dec
test
adcl
cmpsb
mov
inc
xchg
inc
shlb
cmp
jle
in
add
xchg
pop
jle
or
hlt
daa
jle
aam
dec
sbb
dec
in
cmp
mov
jns
mov
inc
mov
out
ss
lea
mov
sub
push
jmp
ds
dec
mov
adc
xor
mov
jae
pop
icebp
jns
rorl
adc
repnz
ja
and
mov
jns
subb
psadbw
inc
push
and
jecxz
daa
cli
lret
pop
mov
bound
cmpsb
daa
push
jp
cmp
fnsave
icebp
daa
call
mov
inc
scas
cmp
inc
pop
imul
mov
add
mov
xchg
fstp
push
shl
mov
stc
sbb
sub
xorb
insl
jb
stos
xor
orb
out
gs
sbb
lcall
bound
icebp
fld
jbe
push
in
lret
sub
sub
sub
fisttps
movsl
ret
pushf
nop
push
out
push
mov
jp
sbb
adc
movsl
dec
jp
sbb
insl
mov
push
js
add
lahf
in
push
xchg
cs
lcall
jge
and
loopne
or
mov
jns
test
or
inc
xor
push
inc
test
jne
xchg
bound
testb
inc
scas
decb
inc
scas
cli
test
push
mov
and
push
sbb
add
movsl
mov
int3
arpl
lcall
call
and
sbb
hlt
in
pop
jne
outsb
scas
add
cs
adc
fs
loopne
add
cmpsb
je
sti
scas
jg
mov
xchg
mov
test
outsl
mov
ret
ja
loop
jecxz
add
and
sbb
scas
or
js
jno
mov
stc
or
and
lahf
addl
xor
xchg
and
mov
inc
popf
lea
jo
cwtl
lahf
jmp
cmpl
adc
aad
imul
push
test
daa
xchg
mov
lret
fbld
inc
loop
push
sti
mov
jg
lahf
lea
push
popf
test
aad
cli
lock
and
mov
lret
aad
push
cmp
int3
cmpl
pop
or
sbb
sub
dec
sbb
out
jmp
fmulp
fistl
push
xor
mov
dec
aam
and
loope
sbb
jo
jp
mov
and
push
mov
sub
pusha
test
imul
daa
inc
jb
inc
jmp
push
mov
or
or
lret
xor
popa
pop
xor
xchg
adc
icebp
cmp
movsb
and
sti
cld
pop
out
icebp
mov
test
push
pushf
pop
fdivs
mov
add
aam
jmp
sub
inc
shrb
pop
and
mov
xchg
sbb
sti
adc
leave
out
outsl
xor
adc
ljmp
ficomps
xchg
cmp
testb
inc
ret
jo
inc
jge
mov
fcomps
add
mul
xchg
fistps
lret
ja
sbb
arpl
pop
add
das
movsb
push
icebp
xor
xlat
push
nop
outsl
movsl
mov
push
jno
pop
dec
ss
cmp
bound
push
into
jnp
fbld
lock
pushf
push
lods
push
icebp
pop
dec
daa
out
lret
aaa
mov
sub
aaa
lar
or
add
lahf
clc
cmpl
mov
es
outsl
pop
jmp
xor
bound
mov
test
ret
pop
xor
aad
cld
mov
ret
jl
cmp
and
or
mov
dec
ds
aam
xor
in
mov
pop
test
xchg
fsubrl
test
sbb
xor
in
or
bound
mov
cmp
push
or
dec
or
nop
lahf
mov
push
clc
enter
sbb
sbb
and
push
push
mov
jge
hlt
push
adc
and
stos
daa
xor
mov
ret
stc
call
push
or
rorl
dec
pop
into
pop
mov
cmp
rcrb
inc
lods
mov
out
sbb
mov
mov
adc
ja
xlat
aam
cmp
mov
mov
push
nop
or
inc
insl
jge
jle
pop
imul
repnz
loop
or
adc
cmc
mov
rol
out
negb
and
or
punpcklbw
xchg
shrl
gs
push
shl
cmp
cmp
shrl
inc
cltd
jle
mov
jbe
into
rcll
rcrb
push
cltd
mov
adc
add
or
adc
aas
pop
sub
and
pop
fisubs
sbb
cld
gs
fcoml
add
dec
sub
jl
sub
fstpl
repz
pop
loopne
les
xchg
mov
sbb
je
push
pop
popf
mov
dec
pop
and
and
jno
mov
jo
xchg
pushf
inc
jo
fwait
cmpxchg
arpl
adc
or
jl
scas
mov
out
out
nop
mov
gs
fiaddl
adc
popa
in
cmp
sub
aaa
jl
test
loop
les
mov
movsl
mov
sub
cmp
aaa
mov
data16
hlt
shll
xor
pop
mov
shrl
mov
xchg
scas
xor
scas
mov
rcrb
decl
mov
fstpt
das
add
daa
add
nop
or
adc
cld
ret
cs
jne
mov
addb
data16
sbb
js
mov
pop
in
aas
mov
inc
xchg
mov
ficompl
sub
scas
mov
pop
outsb
cltd
xlat
push
mov
jo
and
inc
hlt
inc
adc
incb
fistps
pop
xchg
stos
add
sub
imul
inc
mov
push
movsl
cwtl
push
push
pushf
push
adc
hlt
and
dec
sub
imul
dec
adcl
xchg
mov
sub
jns
push
iret
rcll
xchg
cmp
mov
scas
ja
test
std
xchg
jle
scas
arpl
popl
inc
sahf
mov
mov
push
xor
xchg
adc
add
ret
repnz
or
mov
stos
xor
inc
xchg
test
jo
shlb
sbb
neg
jno
adc
call
sti
fistl
and
add
adc
add
mov
test
std
cwtl
push
jp
xor
or
inc
lods
nop
pop
popf
cmp
xchg
call
lcall
sub
fwait
mov
xchg
pop
jo
loop
fnstcw
pop
sti
pop
orl
ss
sub
outsl
test
xchg
pop
jle
stos
dec
es
rclb
inc
jle
cmpsl
xchg
cwtl
cmpsl
cmpsl
les
imul
add
movsl
jl
je
out
movsl
fidivrs
add
jns
ljmp
push
mov
repnz
cltd
sahf
jae
gs
aaa
into
mov
mov
mov
or
or
pop
or
movsl
dec
mov
sub
xchg
cmc
xchg
push
mov
mov
pop
mov
iret
out
orl
fisttps
outsb
sub
ror
nop
repnz
add
addr16
xor
xchg
outsb
pop
roll
xor
adc
xchg
cs
add
addr16
xchg
cmc
ds
or
jp
and
mov
rcll
lock
lea
xchg
sub
mov
add
cld
dec
mov
adc
lock
xchg
push
pop
or
or
xor
mov
dec
loop
popf
sub
jno
into
dec
bts
in
arpl
cmp
dec
pusha
shrl
mov
sub
js
into
rclb
dec
aad
rclb
shrl
and
mov
or
les
mov
mov
pop
mov
in
inc
fiaddl
dec
sarb
push
cmp
jno
mov
andb
cmpsl
push
xor
iret
mov
sbbl
into
cmc
and
push
pusha
movsb
lahf
adc
cltd
notl
loope
mov
pop
xorl
icebp
popf
xchg
dec
sbb
fnstcw
pop
imul
add
inc
inc
cmp
test
jns
push
enter
cmc
popf
xor
jno
push
mulb
ficoml
jmp
xor
and
divl
ss
xor
add
push
adc
mov
pop
out
mov
fs
mov
ret
sahf
sarb
cwtl
bound
push
decl
mov
popa
dec
xchg
cmp
mov
inc
add
mov
mov
insb
mov
test
addr16
mov
add
daa
jae
xchg
jnp
jge
add
daa
mov
push
cmpsb
inc
mov
mov
std
lds
cwtl
cltd
scas
loope
add
insb
inc
inc
pop
sub
in
sbb
xchg
dec
sbb
ret
push
and
push
lods
enter
sahf
cmp
push
scas
andb
sub
fcmovbe
leave
aas
add
call
pop
enter
xchg
add
mov
push
push
iret
scas
and
mov
lods
test
add
popa
add
sbb
loope
xchg
jno
cld
punpckhbw
pop
jg
cld
sub
mov
je
movsl
cwtl
daa
sarl
and
clc
jecxz
push
clc
adc
mov
mov
mov
or
mov
adc
movsl
or
shrl
and
xor
sub
fcoms
cmp
xor
and
dec
aas
mov
outsb
pusha
js
jle
mov
stos
cli
pop
jmp
mov
test
in
ds
pop
inc
imul
repz
pushf
inc
hlt
sbb
test
push
iret
mov
outsb
and
push
pushw
lret
cli
popa
dec
mov
int
mov
or
jmp
mov
pop
dec
jge
pop
push
mov
movsb
pop
fwait
pusha
push
hlt
mov
repz
add
gs
insb
add
mov
and
mov
xchg
repnz
inc
fwait
fwait
add
xchg
shlb
push
xor
cld
pop
dec
or
xchg
dec
lock
arpl
xor
sub
push
inc
lcall
movsb
cltd
fildl
jnp
xor
mov
mov
xchg
je
xor
sarb
jne
sbb
or
push
adc
push
inc
scas
nop
clc
adcb
jb
inc
lret
aaa
inc
push
mov
test
pusha
jb
out
push
fwait
ljmp
idivb
sbb
inc
jecxz
mov
mov
das
sub
xchg
cld
mov
hlt
js
dec
sub
repnz
mov
add
push
clc
jae
cld
sub
mov
mov
add
int
imul
cmp
pop
mov
icebp
dec
sbb
in
sub
mov
fwait
mov
stc
xor
mov
dec
aad
jb
inc
addb
adc
mov
cmp
push
mov
push
pop
or
test
push
mov
cmp
movups
ss
push
test
mov
out
adc
mov
loopne
jle
xor
loop
add
mov
andl
add
icebp
sbb
push
and
insb
push
aam
mov
cmpl
shl
or
push
mov
jg
outsl
es
addr16
decl
clc
sbb
push
outsl
cmpsb
sub
bound
repz
mov
imul
scas
sbb
dec
sub
push
jle
push
jg
adcl
fcoms
xlat
cmpsl
test
out
pop
mov
dec
popa
pop
test
sub
pop
test
or
filds
pop
mul
ja
stos
in
pop
xor
jg
push
pop
pop
bound
test
aaa
xchg
stc
adcb
inc
inc
mov
jle
ret
sub
mov
mov
lret
icebp
pop
or
mov
sti
mov
xchg
mov
mov
out
aad
mov
out
sbb
pop
fsubp
mov
push
ror
add
xor
clc
push
ficoms
insb
fwait
mov
xchg
inc
or
out
pop
sub
inc
inc
push
or
adc
cmp
ret
xorl
gs
adc
add
call
les
sub
in
iret
mov
shr
mov
sub
lods
imul
cmp
lcall
dec
es
cmp
es
popf
test
add
push
fwait
mov
loopne
fisubl
jl
add
adc
out
push
push
sbb
mov
jnp
std
jnp
xor
push
andl
shll
lret
sbb
lahf
shll
add
test
pop
test
and
mov
insb
dec
jo
jae
inc
inc
jge
sub
imul
mov
sub
push
xchg
in
inc
sbb
jo
mov
in
clc
and
cmp
data16
dec
lcall
hlt
xor
xchg
mov
xchg
fisubrs
outsb
ret
jmp
pusha
mov
ljmp
scas
cmc
insl
jb
or
pop
lcall
pop
addr16
push
cmp
xor
stc
mov
les
push
in
jle
xchg
push
sub
cmpsb
sarb
call
xchg
into
jns
jge
shll
and
les
fcomp
jns
stos
cmp
les
push
cld
js
dec
je
push
push
mov
mov
ja
icebp
roll
jo
sbbl
cmp
cmpsb
movsl
lds
jno
pop
inc
cmp
popa
jb
fcoml
jnp
or
outsb
and
sub
fs
sub
mov
clc
cwtl
xor
stc
in
adc
call
or
imul
mov
add
into
cmp
test
shrb
les
lahf
cmp
call
pop
pop
dec
ficoms
push
mov
dec
out
rcr
dec
rorb
fmuls
aad
push
aad
gs
jg
shlb
or
and
mov
lret
adc
outsl
inc
push
sub
leave
mov
test
mov
ljmp
cmpsl
adc
add
cltd
and
dec
or
cmp
mov
xchg
out
scas
xlat
pop
fmuls
cmp
mov
mov
dec
jmp
pusha
call
push
repz
enter
sahf
mov
pop
jmp
xchg
sub
or
leave
data16
lods
dec
pop
inc
jmp
cmc
cmpl
sbbl
push
sub
jg
mov
ror
in
rol
push
aas
push
cmp
mov
jns
dec
push
adc
dec
std
daa
push
fiaddl
mov
mov
push
mov
rolb
sti
mov
inc
add
ja
lret
mov
mov
mov
inc
negl
xor
jo
stos
jg
add
inc
or
push
mov
stos
and
aam
cmpl
and
push
cltd
out
je
cmp
add
arpl
addr16
or
dec
ss
stos
stc
mov
xlat
cld
shl
mov
adc
mov
insb
pusha
sub
adc
sbb
arpl
fdivr
cltd
adc
pusha
push
and
loop
pop
and
das
adc
sbb
jmp
xchg
aad
or
add
mov
mov
jne
add
adc
fwait
or
dec
inc
je
into
mov
clc
pushf
in
xor
jle
arpl
sub
in
cwtl
sbb
mov
iret
dec
pop
das
mov
cwtl
int
or
mov
jnp
xchg
repnz
scas
imul
jle
jp
fcmovnbe
fdivs
loop
out
imul
mov
imul
int3
push
shr
into
xor
or
add
sarl
shrb
mov
movsl
add
mov
or
cmp
xchg
pop
fadds
inc
loopne
push
cli
pusha
push
mov
loop
out
js
xor
pop
je
fstpl
mov
in
fildll
and
push
aad
shll
dec
push
aad
or
in
ss
movsb
inc
mov
ja
loope
jae
les
adc
xor
mov
lahf
test
popf
shl
jno
out
and
push
je
into
pop
inc
movsb
loopne
sbb
cmp
inc
push
pop
cmp
in
adc
lods
sar
arpl
fldcw
movsb
int3
shl
out
push
cld
push
xchg
sub
pop
into
cmp
sbb
pop
jp
pop
xchg
mov
and
das
pop
ljmp
dec
je
dec
std
loope
ss
movl
mov
ret
fs
sbb
mov
sub
rorl
xchg
ret
or
popf
call
add
push
sbb
filds
mov
xlat
jno
push
popf
int
add
inc
mov
pushf
xchg
lret
cmc
lods
imul
lcall
sbb
jg
aas
leave
in
mov
xchg
in
mov
jl
xchg
mov
xchg
addb
mov
lods
inc
iret
outsl
sbb
repnz
cmc
pop
cmpsl
push
rcl
push
pop
jne
sbb
daa
cs
cmp
or
xor
jmp
fildll
push
xor
pop
xchg
sbb
std
push
jecxz
movsl
jg
outsl
int3
cltd
jg
jle
imul
hlt
push
push
jne
and
test
dec
push
push
es
es
jl
movsl
test
aaa
xchg
cltd
mov
adc
cmp
inc
mov
xor
push
mov
loope
jp
arpl
jg
sahf
imul
xor
inc
mov
ret
in
sarb
cld
inc
movsl
xor
imull
jmp
mov
js
ret
or
sti
cli
fs
loopne
sub
lea
gs
sbb
push
nop
xchg
xor
loopne
sbb
sarb
cltd
mov
mov
aad
in
sub
push
fidivl
loopne
push
sbb
mov
scas
mov
fcompl
andb
mov
bound
rcrb
adc
jmp
xchg
rolb
fisubrl
jb
and
cltd
mov
push
orl
cmp
imul
popf
xchg
mov
pop
sub
fwait
and
outsl
clc
hlt
push
or
lcall
mov
cld
jo
add
pusha
jl
xchg
mov
movl
adcl
icebp
fwait
clc
arpl
je
ja
push
push
mov
fldl
push
outsl
cmpsl
cli
or
add
movl
or
mov
xor
enter
lret
push
test
rorl
pusha
xor
or
dec
push
imul
dec
push
cmp
fcoml
add
call
push
in
ret
insb
lret
mov
jo
loope
lcall
cmpsb
mov
adc
mov
daa
jge
es
pusha
mov
add
cmp
sub
sbb
test
mov
push
mov
sub
sbb
outsl
test
xchg
sbb
sub
loop
inc
lcall
dec
clc
outsb
or
adc
or
dec
jle
sbb
adc
or
cs
outsl
inc
pop
mulb
inc
pop
roll
ret
cld
dec
test
repz
pop
mov
sub
movzbl
pop
mov
test
sub
out
outsb
es
jbe
imul
enter
imul
imul
pop
dec
pop
add
jo
sbb
cmp
add
rcrb
cwtl
jmp
pop
clc
push
test
cmp
push
scas
test
push
sbbl
cmpsl
xlat
enter
dec
mov
aaa
xor
and
push
jae
ficomps
jo
sbb
dec
mov
dec
mov
xchg
xor
lret
dec
icebp
movsb
cs
sub
in
push
push
leave
jle
aas
sbb
xlat
fcompl
popa
and
and
pop
rcll
add
push
fisubl
fildl
arpl
xor
xor
mov
shrl
pop
loopne
inc
jp
shl
lcall
push
cmp
push
pop
xchg
jmp
fstl
out
xchg
fsub
mov
jb
jnp
add
xlat
dec
gs
ret
cmc
stos
dec
and
lcall
adc
ljmp
testb
add
js
xchg
push
cmpsb
jp
jle
sahf
jmp
dec
adc
or
outsl
and
inc
mov
xorb
push
or
jns
mov
push
xchg
mov
mov
xor
sti
mov
and
rolb
in
loope
or
and
cmp
push
mov
aad
sti
jmp
popf
or
fwait
mov
pop
xor
jno
sbb
repz
xchg
int
inc
xchg
outsl
es
repz
cmp
jmp
dec
push
in
daa
push
xchg
dec
mov
in
dec
add
imul
lods
fiadds
push
das
push
pop
pop
loopne
sbb
mov
jne
pusha
ror
fistpll
push
pop
cwtl
pop
jo
sbb
fwait
leave
mov
adc
mov
stos
push
xlat
outsb
lret
jae
insb
mov
cmpsb
inc
lods
outsl
rcrl
pop
fcom
cltd
adc
ret
leave
loope
xchg
data16
test
pop
add
jl
and
fcoms
inc
inc
mov
test
push
sahf
push
cmp
setno
popa
dec
out
or
adc
fs
ds
movsl
inc
jbe
fbld
fdivr
sti
dec
outsl
inc
nop
stc
inc
inc
cli
iret
and
mov
int3
gs
push
cmp
das
inc
dec
sahf
xchg
mov
inc
pop
imul
sbb
sbb
push
outsb
xor
lret
add
cld
or
pop
into
lahf
xlat
rcrl
or
adc
and
lret
call
es
subl
ja
dec
ficomps
push
pop
push
mov
mov
fstp
lcall
mov
cmpsb
stc
ret
lahf
pop
and
adc
fstl
popa
add
pop
inc
mov
cmp
xor
mov
and
push
jo
add
scas
les
or
push
fwait
scas
mov
in
push
cs
call
unpcklps
into
scas
adc
shl
pop
imul
push
sbb
mov
jae
leave
sub
insl
loopne
call
movsb
mov
jmp
dec
sub
and
dec
nop
repz
and
or
push
pop
or
outsl
add
push
test
pop
xchg
pop
adc
push
fldcw
or
rclb
in
hlt
test
xor
add
mov
cmp
popa
pop
or
mov
pop
test
and
lret
fsubrl
push
inc
jecxz
xor
sub
and
repz
rorl
loop,pn
imul
add
cltd
cmp
cld
repnz
and
cmp
mov
sub
push
push
in
aas
adc
loop
pop
leave
cmp
jecxz
jge
inc
insl
adc
or
pop
fldcw
movsl
rol
mov
fcoms
sar
nop
movsb
xchg
jge
lea
ja
loopne
outsb
cli
mov
sub
notb
add
insb
mov
mov
jg
xchg
dec
inc
fidivs
je
jecxz
repz
dec
push
test
idivl
test
and
pop
inc
sub
mov
test
repz
mov
int
and
in
inc
push
mov
fs
into
outsl
lret
jp
icebp
arpl
cltd
pop
mov
xchg
mov
popa
sub
mov
xor
pop
mov
popf
scas
mov
fistps
popf
cmp
inc
lahf
mov
jb
mov
mov
fsubs
out
jnp
mov
insl
adc
fdivs
xor
mov
inc
pop
jno
lret
lds
jno
loop
mov
add
mov
lds
cmpsb
test
loope
mov
mov
cmp
add
int3
pop
pop
out
xor
or
jbe
add
push
loopne
push
or
test
test
jp
sub
adc
adc
mov
lods
in
push
and
cwtl
bound
sub
add
pop
int
mov
mul
fildll
xor
xor
mov
mul
lcall
ret
mov
loope
cmp
popa
sarl
lahf
lods
mov
mov
mov
pop
adc
fwait
arpl
das
jb
jl
lahf
mov
in
loop
pop
xor
push
mov
push
inc
sarl
sub
shr
mov
inc
or
mov
pop
push
xchg
inc
push
inc
mov
sub
in
push
jmp
pop
jl
imul
mov
fwait
lahf
out
cmc
adc
mov
xchg
imul
inc
faddl
into
jns
jno
shll
add
pop
cmpsl
int3
fistpl
dec
and
lods
mov
pusha
gs
xchg
int3
imul
jg
or
movsb
xchg
outsl
in
popf
das
lahf
xor
mov
repnz
mov
adc
je
movb
iret
addr16
add
inc
adc
dec
les
clc
out
xor
fmul
cwtl
and
cmp
xor
sbb
hlt
add
rcr
or
imul
shrb
jns
out
xchg
cmp
and
xor
cmp
pop
and
mov
cwtl
mov
popa
decl
bound
clc
and
lcall
lods
ss
dec
int
push
mov
add
bound
int
rcll
stos
popf
call
rcr
clc
ja
inc
ljmp
or
pusha
in
pop
not
cmp
push
xor
jne
sub
adc
fidivs
mov
ss
je,pn
cltd
or
jb
inc
or
mov
cmc
js
lcall
or
lods
roll
aad
out
cmp
push
lods
leave
call
sub
inc
mov
fsub
lret
loop
inc
xacquire
lret
shll
xor
roll
sahf
adc
hlt
adc
lcall
pushf
jmp
fidivrl
movsb
mov
mov
bnd
cltd
cli
xor
push
and
cmp
out
mov
aad
push
adc
cld
enter
dec
and
sub
call
mov
sub
stos
leave
cwtl
xchg
shl
or
cltd
xchg
adc
lea
rcll
je
mov
stos
or
mov
addr16
and
xchg
push
fidivl
dec
pop
dec
mov
pop
lods
or
pop
jae
outsb
xorb
lret
mov
orl
fs
inc
mov
mov
and
in
mov
and
scas
pop
aam
add
xor
lock
mov
mov
dec
inc
leave
push
jecxz
cmp
mov
mov
mov
or
loop
mov
aaa
iret
lahf
fisttpl
jge
push
cmp
inc
jg
adc
aad
xor
lcall
adc
mov
fistpll
lea
sub
lcall
in
dec
mov
inc
sub
scas
adc
out
mov
movsb
adc
fcomps
push
fldt
sub
es
popf
ss
dec
xchg
and
pop
push
popf
lret
xchg
sub
mov
mov
loopne
or
xchg
cld
out
popa
adc
outsb
in
loope
pop
lods
jecxz
sbb
cmc
push
jae
leave
stos
and
cmp
popf
push
add
push
fs
inc
aam
mov
loopne
inc
push
or
ss
js
mov
cmp
ret
sbb
rcll
mov
pop
iret
fadds
jg
xchg
jge
dec
or
fisubrs
cwtl
xor
jle
inc
or
add
popa
push
add
pcmpgtd
lods
nop
push
mov
daa
adc
sarb
jbe
jl
imul
stc
or
mov
notl
pop
cwtl
aaa
mov
test
std
nop
sar
ret
cmpsl
sbb
xchg
call
inc
mov
mov
push
mov
test
or
lods
in
movsb
jb
gs
enter
cmpsl
cltd
enter
push
cmp
ds
insl
push
outsb
push
inc
testb
xchg
mov
dec
sub
pop
mov
addl
cmc
jno
mov
stos
aas
imul
push
out
mov
outsl
xor
mov
adc
testb
dec
mov
mov
rcr
into
jl
or
out
test
testb
fimull
call
addr16
in
or
jge
das
dec
loop
in
xchg
rolb
push
jle
test
lock
inc
mov
push
and
jl
daa
jg
dec
mov
das
pushf
mov
xchg
ljmp
clc
dec
or
test
pop
pop
fmul
aam
push
mov
mov
sar
inc
aad
and
inc
pop
fidivs
rclb
push
pop
leave
gs
outsb
xchg
jo
pop
stos
pop
cmc
mov
mov
mov
int3
stc
cld
adc
or
fimuls
jne
loopne
mov
test
popf
arpl
pop
sbb
adc
dec
mov
sbb
push
sub
mov
pushf
or
aaa
push
adc
cwtl
cmp
test
shlb
push
pop
in
insb
xor
andb
addr16
mov
sbb
fdivrs
sub
stos
push
xor
mov
rcrl
cld
mov
movl
nop
mov
cmp
outsb
push
arpl
mov
cmp
iret
sbb
mov
xchg
fbld
inc
fst
icebp
dec
xor
mov
out
sbb
fdivrp
dec
and
inc
and
or
xor
lods
mov
ljmp
mov
out
dec
shl
addr16
jbe
les
outsb
or
mov
mov
fistpll
mov
push
cmp
into
outsb
mov
cltd
mov
jae
dec
sub
cmpsl
mov
mov
xor
out
insb
dec
sahf
fimull
aas
in
dec
lds
cmp
xor
mov
mov
mov
mov
in
testb
jp
mov
xchg
fmuls
xor
sub
arpl
inc
sub
or
jo
out
mov
mov
pop
xchg
jle
aas
dec
xchg
push
popf
pop
addr16
fdivrs
int3
aaa
cmp
mov
lret
addr16
jp
fldcw
insl
test
stos
aaa
jle
dec
jb
rclb
loopne
jecxz
pop
repnz
aam
mov
sti
aaa
outsb
xchg
icebp
mov
out
mov
push
lds
in
lret
jno
mov
cmpsl
xor
fsub
les
loope
ficoms
icebp
addr16
xchg
fcmovne
in
pop
xor
jecxz
std
xor
inc
imul
popf
mov
test
lea
lea
sub
push
test
xor
andb
aad
jo
cmpsl
pusha
push
outsb
mov
mov
sti
bound
mov
adc
push
pop
or
dec
push
popa
push
push
fistl
mov
pop
or
fstps
sarb
popf
inc
adc
push
mov
adc
adc
lahf
pop
orl
test
dec
popw
icebp
xchg
push
stos
movsl
out
clc
lods
xchg
push
out
xchg
push
dec
cmpsl
aaa
data16
sbb
pop
pop
ljmp
add
std
pop
xor
mov
jp
movsb
movsl
mov
push
rcll
cltd
mov
mov
lock
dec
sub
cmp
rcll
hlt
jo
repnz
sbb
sub
adc
jg
xor
mov
push
or
jb
fcmovbe
sbb
pushf
lds
xorl
outsb
int3
mov
cli
lds
sti
pop
inc
mov
mov
fimuls
ds
stos
fistpl
mov
das
push
jo
mov
in
sub
or
mov
cmpsl
add
out
add
sbb
xchg
sub
mov
test
pushf
shlb
icebp
add
jnp
loopne
aad
sub
mov
in
dec
cmc
ret
cmp
in
insb
xor
repnz
jl
shr
jae
pop
push
lea
cmp
adc
das
into
adc
mov
lcall
mov
ficompl
popf
and
jbe
lret
sbb
sub
or
lods
mov
mov
or
pop
inc
ds
mov
and
js
push
jae
fbstp
push
push
pop
loope
dec
jo
test
sub
or
mov
aad
int
rol
loop
stc
pop
jb
jge
add
add
mov
push
cli
fucom
pop
sub
and
data16
xor
adc
addr16
xchg
pop
inc
je
jbe
jne
sub
jmp
lods
ret
aaa
test
out
fucom
mov
adc
jl
push
bound
pop
dec
jl
pop
insl
ficomps
mov
and
orb
xor
mov
test
int
dec
sub
cmpsl
xor
ret
dec
and
xchg
dec
es
xor
insb
cmp
or
pop
add
aad
mov
or
inc
sti
cmpsl
mov
pop
int3
imul
fwait
addr16
scas
jns
sbb
inc
subl
dec
pop
out
or
add
xchg
sti
pop
or
fimuls
lods
in
jo
mov
fisttps
and
jns
jmp
iret
pop
inc
int
sbb
dec
in
pushf
aam
cmp
fidivrs
jne
lahf
dec
push
or
sub
and
ret
mov
lret
jb
mov
pop
inc
add
pop
jbe
imul
mov
mov
inc
and
ja
jg
add
imul
xchg
loopne
daa
movl
pusha
pusha
ret
aad
dec
pop
movsb
pop
add
xor
insl
and
call
inc
mov
rorb
or
out
sbb
lea
fdivl
std
and
pusha
pushl
jno
mov
or
iret
and
popa
sub
sub
adc
cli
je
cmp
pop
movsb
std
push
inc
fldt
hlt
adc
mov
insb
mov
sub
dec
outsl
leave
int3
je
pop
push
add
sbb
aad
sub
cmp
or
jae
inc
mov
add
cld
pop
cmp
pop
cmp
and
cli
pop
mov
mov
sbb
inc
inc
sbb
aad
loop
cli
mov
rdpmc
out
les
out
xor
rol
dec
jb
jg
incb
outsl
xchg
out
push
mov
sub
jo
in
add
and
ret
cmp
inc
movsl
xor
out
jo
sbb
xor
cmc
push
pop
pop
hlt
nop
test
mov
lcall
sub
enter
jo
and
xor
sbbb
xor
sbb
sub
xchg
testl
loopne
add
lret
sbb
sarb
movsb
lea
inc
bound
nop
mov
and
data16
lret
outsb
stos
adc
arpl
test
hlt
ljmp
cmp
and
int
xchg
ljmp
mov
xchg
cmp
fimuls
aad
mov
inc
test
cmp
ja
scas
loope
mull
or
inc
xchg
in
push
fcomps
ret
iret
inc
jno
mov
add
mov
pop
push
xchg
out
or
add
fidivs
cld
pop
in
adc
mov
add
mov
xchg
xor
ficoml
mov
and
repz
push
cmp
sub
or
nop
jl
inc
sbb
xor
clc
ds
jb
mov
loope
pushf
ja
mov
in
and
add
ret
or
fisttpl
add
or
cltd
jnp
sbb
cmc
bound
fsubl
xlat
push
rcll
mov
pusha
jecxz
and
push
daa
cmp
lret
cmpsb
lea
stos
mov
adc
and
ds
std
lds
outsb
inc
mov
fstpl
push
sub
lret
rol
dec
inc
cmp
push
into
pop
js
push
call
stos
push
cmp
pop
mov
jl
ss
or
sub
fisttps
test
icebp
mov
test
sbb
mov
jae
orb
negl
fcomps
dec
mov
aad
dec
fxch
inc
cmp
adc
lcall
jno
sub
jmp
mov
adc
jge,pn
pushf
pop
jl
dec
fiaddl
sub
ja
mov
lock
cmp
pop
into
mov
dec
mov
out
inc
mov
and
mov
bound
adcb
cmp
arpl
pop
fmull
andl
sub
add
into
insl
clc
jg
call
inc
pop
scas
dec
je
fwait
mov
xchg
cmc
mov
cmp
outsb
in
push
jl
dec
adc
jbe
xchg
push
add
xchg
add
div
push
xchg
mov
sti
and
lds
movsb
xchg
pop
inc
push
cs
sarb
popa
stos
andb
cmc
mov
or
mov
mov
cmp
jb
jno
jo
outsb
or
int
std
das
dec
cmp
lret
rorl
or
ret
dec
sahf
jmp
cmpsl
leave
mov
xchg
cmp
divb
pop
call
aad
inc
sahf
aad
and
imulb
iret
sub
and
cmpsl
pop
clc
scas
call
jl
add
pop
pushf
lahf
and
shrb
jne
adc
add
dec
sub
mov
lret
sbb
xor
mov
cmpsb
sub
enter
jnp
pop
jne
xchg
or
pop
sti
popa
insb
dec
cmp
inc
and
fbstp
push
loop
sub
jb
cmp
addr16
dec
popa
inc
jno
sbb
cmc
jno
sbb
xor
jl
push
mov
adc
jge
int3
xor
xchg
xor
js
add
and
push
inc
stos
sbb
cmp
int
mov
pop
loope
jb
xor
push
push
cwtl
xchg
leave
test
xchg
daa
enter
idivb
lds
sub
in
mov
and
fcmovnb
insb
or
mov
pop
lods
sbbb
adc
sub
pop
fwait
pushf
mov
icebp
pop
jmp
int
cmp
shll
xchg
mov
push
sbb
mov
clc
lods
test
out
push
push
pusha
loop
or
and
mov
rcr
or
lock
pop
mov
in
sbb
rclb
pusha
jns
test
fisttpl
cmp
pop
in
aam
repnz
and
xor
sbb
jg
repnz
mov
cmpsb
jg
jecxz
fcomps
sub
adc
rclb
push
clc
fadds
jecxz
xor
data16
add
sub
jmp
sbb
push
xor
loop
dec
pushf
test
jno
shlb
and
lcall
call
in
sbb
insb
sarb
data16
cmpsl
and
dec
sbb
icebp
outsb
adc
dec
imulb
mov
je
dec
loop
mov
dec
popf
push
xor
sti
cmp
lea
fbstp
xchg
jbe
pop
jg
sbb
lret
ja
and
div
inc
xchg
sbb
dec
rolb
dec
roll
cmc
sub
rcll
int3
sub
sahf
int3
or
sbb
movswl
nop
jmp
mov
das
and
arpl
push
ror
jge
dec
mov
cltd
arpl
push
push
cli
mov
lret
dec
xchg
out
mov
repz
pop
push
or
pop
sub
gs
jb
in
hlt
mov
mov
fcoms
pop
shll
notl
jp
dec
testb
xor
inc
dec
push
mov
ret
ljmp
int3
stos
in
in
pop
cmp
push
lods
sahf
add
mov
mov
loopne
adc
push
cmp
sub
dec
call
fidivrs
and
jo
fmuls
fsubr
jae
jmp
outsb
pop
scas
push
xchg
dec
lds
sahf
cmp
dec
xchg
out
pop
xor
push
cmp
test
xchg
mov
push
cmp
push
movsl
add
mov
lock
in
add
popf
dec
aad
mov
lds
adc
inc
push
imul
mov
ret
in
test
xchg
and
hlt
adc
xchg
mov
imul
js
pop
cmpsl
in
lcall
loop
add
sahf
inc
mov
dec
das
dec
mov
mov
std
addb
not
adc
pop
cmp
add
cmpsl
dec
loopne
dec
xchg
ds
shlb
pop
add
movl
and
es
aaa
mov
mov
mov
test
das
adc
xor
jo
aaa
jno
ljmp
stc
pusha
pop
add
arpl
pop
pop
arpl
cmc
jbe
dec
cmp
pop
js
cld
int
push
mov
mov
ss
push
imul
push
lock
ret
das
in
sbb
outsb
movsb
fiaddl
or
sbb
fimuls
jae
and
repz
mov
sub
pop
dec
fucom
cmp
sub
jg
outsb
lret
sti
ret
or
call
js
out
ljmp
pop
push
and
mov
dec
ss
xchg
cmc
pushf
insb
jmp
loope
push
mov
jp
adc
or
push
lds
es
test
add
les
pop
gs
int3
xchg
dec
push
and
xchg
scas
inc
js
xor
rcll
mov
pop
jg
ds
and
int
repnz
xor
xchg
repnz
push
lods
pop
data16
jbe
or
dec
mulb
jno
std
fstpl
mulb
sbb
loop
sar
mov
cmp
out
mov
lcall
in
mov
push
jl
leave
push
fiadds
push
cmp
push
sbbl
enter
rclb
ret
mov
push
push
cmp
outsl
push
mov
jb
push
mov
les
push
test
mov
fldt
or
movsb
outsb
je
push
xchg
test
and
subb
add
push
into
lods
adc
mov
stos
adc
xorb
and
pop
mov
jle
cmp
loopne
jmp
inc
push
dec
arpl
mov
pop
and
clc
push
enter
movsb
push
mov
cli
xor
mov
mov
cmp
and
jp
sbb
ret
adc
aaa
out
ja
popa
cmc
add
mov
jl
push
jb
ret
adc
int
ret
lret
pusha
mov
popa
fcmove
adc
imul
enter
mov
std
jno
mov
jb
cld
and
push
rol
call
inc
xchg
arpl
xchg
fstl
dec
and
sti
and
cltd
sbb
jp
pushf
lea
adc
data16
cld
and
out
xor
push
jb
cmpsb
sbb
mov
jl
mov
dec
cmp
outsb
cmp
cwtl
ja
cmp
mov
int3
pop
fistpll
xor
fdivrl
adc
jmp
adc
repnz
out
daa
cmp
lret
push
shrl
test
or
inc
xor
pop
shl
mov
xchg
dec
sbb
daa
xor
pop
call
dec
out
push
ljmp
mov
lret
xor
inc
jb
sub
pop
xor
adc
pushf
and
popa
pop
cwtl
out
push
das
cmp
adc
ret
push
rcrb
ds
ret
dec
into
scas
mov
rcr
sbb
jecxz
fs
scas
arpl
popa
lahf
dec
test
jo
and
js
push
xchg
aad
inc
jnp
cs
mov
daa
pop
ret
jecxz
sbb
push
adc
jne
in
or
mov
jp
popa
int3
sahf
decb
cmpsl
xchg
mov
jbe
and
andb
adc
adc
into
enter
push
out
adc
enter
std
mov
sbbb
imul
stos
mov
cmpsl
nop
imul
xchg
loopne
mov
gs
xchg
popf
shlb
js
inc
push
lret
outsb
dec
aas
push
inc
jge
mov
cmpsl
test
inc
add
inc
xchg
and
aam
cmp
daa
dec
jae
or
insb
push
fcoml
out
add
xor
xor
jns
lcall
cmp
test
xor
stos
cmp
data16
pop
loopne
push
cmp
ljmp
pop
cmp
mov
push
mov
fmull
ror
xchg
cmpsl
pop
pop
and
lcall
ret
sub
sbb
or
call
stos
or
xor
push
or
push
call
jne
imul
jl
gs
mov
add
ljmp
mov
mov
mov
add
je
mov
xchg
and
fwait
push
lds
cmc
add
and
mov
int3
jg
or
pop
inc
lock
insl
dec
orb
inc
xchg
in
mov
icebp
xchg
xchg
es
shlb
addl
or
xchg
add
nop
push
fimuls
xchg
setl
lea
repz
js
std
xchg
cmp
jns
push
lcall
push
sbb
or
mov
ret
fs
in
pop
leave
inc
jmp
lcall
pop
hlt
ror
push
push
daa
dec
arpl
test
popa
mov
dec
dec
and
cltd
xor
mov
lea
cmpl
cmp
jb
in
bound
xchg
iret
push
xchg
ljmp
mov
movsl
sub
ds
cld
imul
jae
lahf
cs
and
xor
test
push
pop
inc
test
sbb
mov
in
push
cmc
aaa
ja
roll
jae
xlat
lret
sbb
fisubrs
push
dec
icebp
xchg
pop
xor
popf
repz
xorb
mov
gs
jg
xor
xchg
pop
rcl
call
sub
lods
leave
push
cmp
jp
lea
test
pusha
add
pop
xchg
xorl
cmp
sbb
arpl
shll
inc
adc
cwtl
cmp
div
sarl
jl
sbb
insl
inc
cmp
and
dec
mov
add
push
push
add
inc
jbe
iret
jno
loopne
cwtl
jno
mov
xchg
cli
jp
data16
push
pop
js
ss
push
adc
pop
imul
and
out
fisubrl
rcrb
or
mov
lcall
daa
or
shll
daa
test
mov
push
jl
ja
in
jmp
mov
jae
in
aam
pop
mov
cltd
call
dec
imul
mov
fwait
jp
in
std
mov
and
loope
aas
jmp
sub
outsb
cmp
jl
ds
nop
xor
inc
lods
ds
ficomps
andl
mov
inc
les
and
and
int3
cld
inc
adc
pop
jnp
push
arpl
fs
push
jno
mov
push
movsb
or
rol
mov
cld
mov
std
push
xor
imul
test
scas
xor
es
push
sbb
fs
fists
cli
stos
xor
mov
mov
mov
mov
jno
pop
fs
sbb
pop
push
inc
in
imul
add
add
pop
icebp
inc
xchg
dec
xor
mov
xorb
stc
jbe
push
mov
and
fs
jae
xchg
push
dec
in
sbb
add
scas
mov
mov
add
out
adc
faddp
mov
jne
out
lret
clc
jmp
psllw
daa
and
ljmp
sbb
lahf
adc
dec
int
je
push
cmp
lock
mov
rol
inc
movsb
loope
andb
loop
leave
faddl
lcall
aas
lea
mov
jle
add
mov
clc
int
fwait
leave
ja
push
ljmp
out
adc
scas
jnp
into
dec
ret
sub
lret
pop
lods
repnz
popa
outsb
inc
test
faddl
test
jle
fbld
enter
pop
dec
lea
dec
xor
lcall
cmp
and
push
kmovb
mov
xchg
movsb
fadds
shr
xor
ljmp
iret
mov
gs
call
xor
inc
lret
xor
inc
imul
adc
ljmp
cwtl
out
push
inc
adc
loop
nop
in
loope
xor
push
or
fisttps
mov
aas
sbb
decb
cmp
call
dec
sti
xchg
or
leave
xor
outsl
negb
lds
movsl
cmc
push
mov
xchg
ja
outsb
mov
cmovns
pop
dec
or
das
xor
ljmp
lds
pop
pop
rcll
push
pop
gs
xlat
sub
iret
into
fdivr
outsl
dec
rcll
rcrb
cmpl
and
xchg
outsb
out
xchg
jecxz
mov
sbb
sub
mov
push
sar
xlat
ficoms
movsl
rcrb
pop
fsubs
dec
pushf
push
cmp
ret
sbb
dec
cld
je
push
in
lock
cmp
mov
mov
pop
lock
out
dec
push
mov
jns,pt
mov
and
xchg
push
dec
inc
cwtl
es
pusha
addl
stos
cmpsb
gs
dec
and
jnp
pop
fnstcw
mov
aam
inc
stos
fcmovu
mov
xchg
or
jmp
lcall
iret
lcall
xchg
std
xchg
push
dec
sub
sbb
mov
out
mov
xchg
mov
xchg
gs
xlat
pminsw
and
mov
adc
adc
mov
xchg
mov
imul
push
popa
mov
mov
mov
fs
jge
pop
and
add
fs
in
sbbb
mov
sub
add
add
nop
int3
sub
xchg
mov
movsb
lods
cmp
adc
xor
and
nop
loop
sti
jae
sub
mov
out
pop
mov
xorb
mov
int
lret
fsubrs
xor
in
mov
sub
stc
hlt
in
jae
xor
out
jne
stc
cwtl
inc
hlt
scas
loopne
popa
sbb
inc
xlat
xor
cmc
addb
aad
jle
dec
icebp
fxch
inc
add
mov
and
rcrb
ja
and
out
pop
add
cltd
sub
mov
es
icebp
or
inc
iret
xchg
adc
pop
scas
xchg
push
fstp
dec
pusha
ret
mov
shrb
cld
push
ret
lahf
jg
jno
mov
mov
sbb
pushf
call
and
jb
jge
pushf
imul
scas
lcall
add
hlt
imul
xchg
and
mov
jne
mov
loop
jb
xchg
xchg
shl
ss
cmp
outsb
mov
dec
adc
fisubrl
and
or
movsl
iret
jbe
sahf
data16
decb
pop
in
mov
fsubrs
or
pop
jmp
sub
push
mov
mov
dec
arpl
fimuls
ret
out
movsb
xchg
loop
mov
fbstp
mov
and
in
aad
clc
xchg
test
push
push
movsl
fldt
cmp
cmc
xchg
jne
out
call
jp
lods
xchg
add
out
cmp
gs
fdivs
jmp
mov
call
rcll
dec
mov
dec
sub
or
add
in
pop
jge
lock
jle
cli
in
sbb
cmpsl
pop
cs
push
jg
mov
aad
xor
ret
inc
mov
jmp
dec
fisubl
jns
cld
push
lods
test
adc
jge
ja
fnsave
inc
scas
inc
iret
dec
jae
xor
into
adc
rcrl
dec
add
mov
nop
xor
cld
jb
ljmp
ja
jg
roll
bound
inc
fbld
mov
test
ja
clc
xlat
stos
popf
add
out
andb
lcall
lea
pop
repnz
push
adc
test
dec
cltd
roll
idiv
shll
orl
dec
shll
xchg
int
xchg
adc
imul
adc
pop
fisttps
imul
mov
mov
aam
mov
inc
sub
xlat
xchg
xor
movsb
add
pop
addb
xchg
jg
lcall
mov
arpl
mov
push
adc
lcall
test
lahf
add
shrb
loop
lods
movsl
pop
loop
popf
hlt
nop
xchg
enter
or
cli
mov
stc
add
sarb
mov
xchg
xchg
lods
insl
mov
cmp
jecxz
or
mov
pushf
inc
loope
push
push
bound
adc
sbb
roll
sub
cmpsb
mov
and
repnz
sub
inc
or
loop
cmc
std
inc
cmpsl
mov
pop
jno
shrl
das
jb
sub
inc
pop
cwtl
mov
adc
sbb
arpl
int
sahf
fwait
cmp
xchg
xchg
test
test
pop
int3
insb
test
pop
je
mov
outsb
ss
xchg
or
orl
xchg
inc
jg
sub
mov
jmp
jno
mov
adc
sbb
subb
dec
sbb
xchg
xchg
out
es
jg
movsl
mov
adc
adc
loopne
xchg
adc
out
pusha
lcall
arpl
jno
sub
rcrl
je
insw
cwtl
mov
pop
callw
jno
lea
or
fcoml
lds
push
cltd
loope
dec
sub
pop
jb
xor
cwtl
jno
lock
jno
xchg
sbb
js
idivl
cmpsl
loopne
lea
jns
mov
sub
adc
add
xor
mov
pop
shrb
xchg
xchg
cltd
test
into
aad
pop
gs
inc
dec
aas
fiaddl
push
and
jns
pop
sbbb
jle
in
pop
ja
xchg
rcrb
sbb
addr16
les
dec
sub
shlb
add
ret
popf
outsl
fisubs
jl
lds
fimull
and
and
je
jnp
sub
pop
test
pop
adc
lods
cld
cmpsb
int3
nop
push
pusha
push
arpl
inc
mov
test
inc
or
jg
iret
pop
repnz
adc
out
mov
mov
sbb
mov
out
sbb
fs
ja
loope
into
and
out
jl
cmp
sti
push
and
dec
and
rep
mov
arpl
inc
xchg
xor
push
ficompl
sub
inc
xchg
sbb
ljmp
inc
add
clc
sbb
dec
hlt
mov
in
repnz
xor
jmp
shrb
push
mull
sbb
mov
jb
pop
shrb
xchg
shlb
cmc
in
fs
out
sti
gs
pop
int3
and
push
into
and
lahf
sbb
popf
lret
into
psubusb
inc
adc
jge
cmp
pop
or
dec
cmp
repz
xchg
enter
in
bound
cmp
lods
das
xor
fldpi
lret
out
dec
lcall
js
jb
jg
mov
out
sbb
scas
mov
xchg
in
loop
cli
ret
rcrl
mov
scas
lcall
repz
cmc
out
movsb
pop
mov
imul
lahf
mov
jmp
in
xlat
inc
push
sbb
mov
and
cli
and
adc
or
in
fs
add
notl
xor
es
call
shl
lcall
inc
sbb
or
int
sub
push
cmp
ret
movsl
in
sub
clc
xchg
shll
rcrl
and
fstl
insb
pop
or
jno
xlat
dec
jae
pop
dec
inc
sbb
add
in
imul
stos
add
add
mov
push
pop
outsl
add
push
adc
in
nop
xor
dec
sbb
or
add
pop
mov
sub
loope
js
insl
adc
out
pop
adc
movsb
ja
orl
aad
jl
gs
mov
int3
push
push
insl
iret
adc
sbb
repz
mov
or
testb
mov
loopne
fidivl
in
mov
fstps
jge
loopne
data16
cmovle
sbb
fs
push
sahf
paddd
hlt
std
stos
adc
push
js
negb
cmpsl
imul
adc
add
sbb
adc
or
das
aas
pop
cmp
cltd
adc
sub
push
rcrl
sub
fisttps
or
outsl
push
pop
sub
shrl
lret
icebp
mov
or
push
popa
sbbl
ljmp
mov
movsb
dec
sbb
cmpsl
xchg
xchg
inc
imul
and
mov
movb
std
inc
or
icebp
scas
mov
cwtl
jmp
roll
icebp
inc
xchg
sbb
jp
mov
lods
add
push
push
push
sbb
cmp
pop
xor
movsl
sub
or
jmp
cmpsb
xchg
mov
scas
xor
xlat
in
and
repnz
mov
arpl
outsl
sbb
loop
ljmp
cmc
int3
repz
cwtl
cmp
pop
push
adc
xchg
aad
fcoml
outsb
popf
xchg
adc
cwtl
push
stc
mov
adc
in
cwtl
inc
cmp
xlat
or
add
shll
lahf
xor
mov
jo
cmpsl
imul
fimull
add
cmp
cmp
mov
xchg
cwtl
pusha
adc
loopne
hlt
sub
scas
jl
shr
fdivr
mov
sub
in
fstl
iret
fildll
repz
sub
and
mov
cmp
cmpsb
jecxz
push
aam
cmp
push
popf
cli
or
loopne
adc
pop
enter
and
dec
cmp
sub
stc
test
movsb
lock
xchg
ss
neg
cmp
sbb
fdivs
push
loop
xor
pop
dec
xchg
sub
dec
mov
imul
adc
pop
cmpsl
inc
in
sbb
pop
jne
and
inc
and
ss
jmp
psrad
scas
mov
aad
std
test
adc
into
js
in
cmpl
or
dec
ljmp
fwait
sub
pop
and
divl
adc
icebp
mov
stc
add
push
mov
shrb
clc
mov
lods
roll
lret
mov
push
dec
or
scas
mov
pushf
mov
dec
stos
pop
sub
sbb
mov
into
insb
mov
cwtl
inc
iret
add
pop
jb
push
mov
adc
rcr
outsl
push
xchg
imul
xor
gs
loope
sub
test
addr16
jne
and
xor
dec
mov
inc
mov
in
lcall
pop
js
out
xchg
adc
xchg
xchg
inc
lret
jmp
and
data16
xchg
mov
fstl
and
shlb
outsl
addb
mov
and
dec
stos
int3
ret
lods
test
fisubl
mulb
daa
popf
fbld
adc
inc
pop
push
jmp
arpl
outsl
mov
mov
adc
add
out
outsb
out
ljmp
add
int
ljmp
pop
pop
lret
test
inc
imulb
repnz
xor
les
mov
cs
sub
loope
adc
leave
jmp
push
jae
fisubl
ret
dec
mov
dec
xor
add
loopne
add
mov
cltd
icebp
inc
cmp
mov
cmp
push
ror
adc
pushf
pop
stc
jno
clc
xor
jno
pop
jbe
xor
loop
sbb
pop
push
sub
mov
roll
shll
js
ret
xchg
mov
sahf
rcll
inc
dec
jb
aas
jo
lea
pusha
fsubr
and
cmp
das
jecxz
push
addr16
mov
jb
cmc
mov
adc
cmpsl
jge
xor
xor
xor
jb
sub
dec
iret
shl
sub
or
lock
rcll
xor
or
add
xchg
xchg
xor
push
out
and
call
cmovle
jae
js
cmp
enter
test
call
popf
dec
sahf
sbb
and
adc
sbb
jmp
outsl
stos
lea
mov
loopne
arpl
in
ljmp
mov
cmp
sbbl
cmp
adc
dec
sbb
ror
inc
insl
or
cmpsl
fildl
dec
roll
ficompl
imul
adc
sub
and
xchg
sbb
sbb
push
dec
pop
inc
addr16
in
faddp
movsb
mov
repz
fsubrl
sub
push
ds
xorb
or
data16
dec
mov
mov
loop
and
add
imul
movsl
push
loop
mov
iret
inc
sbb
aad
ljmp
xor
sbb
or
xchg
cmpsb
insb
mov
leave
inc
fstpl
push
cs
lods
jne
dec
and
or
arpl
inc
add
js
call
hlt
ds
mov
je
xor
subl
jns
pop
mov
into
rcrl
xor
es
xchg
iret
xchg
inc
mov
out
fsts
push
clc
test
test
jp
push
adc
sbb
std
insb
xor
sbb
mov
xor
xor
lods
xchg
and
stos
cmp
popa
or
xchg
scas
enter
lods
cltd
shr
mov
mov
inc
or
test
sub
imul
fadds
movhps
popa
outsl
add
jecxz
and
mov
cmp
orl
sub
addl
ret
pop
push
test
cmp
test
rclb
inc
out
adc
gs
sub
repnz
push
jne
sbb
loope
popf
inc
xor
loopne
fwait
roll
idiv
mov
jnp
clc
arpl
mov
cwtl
stos
dec
xchg
test
push
out
pop
add
xorl
imul
adc
pop
xchg
pop
cmp
jmp
pop
loop
outsb
xor
dec
add
xor
cli
dec
inc
dec
pop
push
xchg
sub
push
mov
jnp
cltd
push
and
aas
dec
in
mov
cmp
inc
jbe
testb
and
lods
jle
mov
jns
lds
or
cli
orb
mov
mov
adcl
mov
mov
or
xor
jge
movsb
enter
pop
sbb
test
xor
aam
jnp
js
test
xor
xor
rcrl
in
push
not
fdivrl
jmp
icebp
iret
daa
pusha
jae
lret
or
jae
push
mov
or
adc
in
jnp
push
lock
xchg
jl
jbe
addr16
adc
iret
fisubs
scas
xchg
xor
int3
gs
xor
test
je
in
xchg
fistps
jmp
dec
push
filds
arpl
stc
test
mov
push
sub
push
add
sub
xlat
xchg
adc
mov
push
in
push
push
sbb
mov
adc
imul
adc
push
push
out
lcall
pop
mov
enter
xchg
inc
jmp
dec
dec
lea
mov
xor
push
and
add
sub
jbe
mov
out
fidivrl
cmp
mov
cmp
inc
daa
out
test
fldt
rcll
push
pop
outsl
pusha
sub
push
and
dec
insl
popf
pop
xor
jbe
repnz
xchg
mov
sarl
movsl
lds
sarb
mov
cmp
pop
out
hlt
sbb
mov
or
jnp
in
inc
out
movsl
mov
sbb
loop
cltd
sbb
ja
ds
ret
pop
cmp
test
in
push
dec
std
in
jno
mov
mov
movb
mov
push
pop
pop
pushl
icebp
or
int3
push
movsb
in
lock
cmp
shll
in
les
stc
flds
mov
sbb
call
or
arpl
out
jg
jae
inc
ss
inc
lea
cmp
mov
mov
jmpw
and
cmp
hlt
mov
cmpb
mov
call
xchg
cli
inc
jmp
lret
sub
dec
je
fwait
or
adc
inc
pop
xchg
lods
mov
jp
jecxz
push
and
push
icebp
pop
pop
dec
adc
gs
testb
mov
add
mov
jecxz
xchg
pop
jge
imul
lret
pop
imul
mov
lcall
fnstsw
sub
scas
mov
push
fsubrp
jecxz
shlb
loope
pop
push
lret
repz
sub
aad
out
rolb
fwait
rol
nop
and
mov
pop
cld
jg
mov
xchg
inc
cmpsb
stc
pop
mov
int3
mov
mov
cmpsl
popf
push
inc
std
in
ds
jg
inc
and
cmp
fldl
mov
stos
sbb
scas
je
sarl
push
cmc
mov
xor
fstl
outsb
push
jb
jae
dec
rclb
pusha
repz
push
mov
lret
test
mov
stos
pusha
or
sub
insb
test
bound
aaa
repz
xchg
adc
pushf
das
adc
lret
aam
add
incb
jp
or
mov
push
jo
out
mov
and
cwtl
push
push
jg
scas
into
cmp
shrl
data16
std
sahf
fstpt
sahf
mov
jae
popa
inc
xchg
pusha
mov
pop
out
pushf
jl
sbb
cmpsl
xor
out
push
test
test
repnz
sub
cmpsb
ret
inc
xchg
mov
stos
aam
cmpb
or
dec
fcoms
addr16
mov
shrb
inc
xchg
mov
add
mov
sub
aaa
addr16
jg
notb
ffree
xchg
iret
adc
jae
stos
mov
sbb
cmp
jg
into
es
pop
fs
pushf
scas
dec
jne
andb
mov
mov
pop
xchg
dec
and
sbb
mov
int
sbb
les
inc
aaa
icebp
jge
xlat
bound
xlat
or
pop
test
out
pop
js
sub
pop
mov
add
std
repz
mov
sbb
push
jne
add
les
mov
int3
dec
int3
sub
mov
cwtl
mov
and
dec
loopne
scas
ret
jbe
mov
push
jne
out
fs
fldenv
in
mov
pusha
mov
push
out
sbbl
out
inc
xchg
push
mov
cmp
repz
push
scas
cmpsl
xchg
jbe
arpl
out
push
test
aad
out
andb
hlt
decl
fs
pop
aad
sub
mov
or
rorb
dec
add
cmp
mov
or
lock
pushl
and
mov
adc
aas
pop
add
cld
dec
movsl
call
sub
out
and
insb
sbb
or
cs
icebp
jbe
testl
popa
out
xor
movsl
push
jnp
or
mov
or
popa
or
imul
cltd
frstor
cli
sbb
add
mov
push
or
or
add
jnp
movl
mov
or
mov
mov
mov
add
sub
test
aaa
sub
in
adc
arpl
int3
pop
inc
push
out
dec
mov
mov
mov
mov
adc
push
push
scas
pop
aam
adc
lret
push
mov
jo
adc
lods
test
xchg
dec
mov
inc
lods
cwtl
mov
xchg
pop
int3
add
adc
ds
jp
popa
mov
test
push
inc
mov
dec
pop
and
fidivrs
stos
sbb
mov
sub
stos
addr16
and
xchg
mov
jne
movsb
xor
jecxz
cmp
jl
ds
mov
xor
aas
mov
and
sbb
and
fs
out
repnz
das
test
dec
cmp
push
or
pop
mov
out
sar
sbb
add
and
fldt
dec
sub
fists
xchg
push
cmp
or
pop
mov
mov
out
xor
or
adc
fs
imul
jg
mov
arpl
push
push
nop
inc
test
sahf
cmp
mov
adc
cwtl
cmp
dec
call
popa
xchg
adc
test
lret
repz
xchg
imul
ror
scas
sbb
jae
jae
xlat
movsb
nop
rorb
insl
out
out
or
fists
dec
pop
ret
add
loope
push
mov
mov
lret
fistl
inc
es
push
jmp
push
clc
dec
pop
sub
dec
adc
hlt
pop
add
mov
mov
stos
push
inc
jbe
push
fnstcw
fcoms
enter
or
pop
mov
outsl
mov
cs
fs
scas
xchg
adc
dec
pop
add
add
pusha
adc
push
loop
mov
mov
hlt
sbb
push
add
mov
addb
xor
mov
mov
pop
fidivrl
push
mov
mov
das
sbb
fdivrs
cmp
ret
insb
dec
mov
loope
sbb
xor
iret
cmp
mov
outsl
and
loopne
xchg
add
loopne
and
lret
icebp
dec
in
in
sbbb
nop
jbe
ret
cmc
mov
iret
sub
mov
stos
fs
cltd
ret
mov
mov
idiv
push
dec
je
or
inc
and
pop
testl
stc
mov
cmpsl
sbb
xchg
sbb
or
loope
out
lods
push
xor
cli
lds
pop
jns
push
mov
inc
sahf
out
xchg
pop
out
fs
xor
shrb
push
sub
ds
inc
pushf
jne
adc
cli
stos
out
daa
leave
lcall
push
cmp
mov
sbb
mov
faddp
push
pop
jp
mov
sbb
xor
lcall
aad
inc
test
push
inc
push
stos
test
jbe
mov
inc
cmp
adc
sub
out
sub
and
lea
jne
xor
and
push
or
insl
lcall
push
icebp
lods
push
sub
or
sub
test
mov
insl
pop
mov
fs
leave
jmp
or
jbe
data16
insb
sbb
dec
addb
sbb
dec
dec
sbb
cld
shrl
cmp
fstps
jo
jb
add
insl
les
cmp
push
addr16
and
fsubl
xor
dec
std
mov
ss
dec
dec
inc
mov
outsl
xchg
cltd
iret
jno
push
insb
roll
pop
loop
cld
nop
adc
nop
sbb
and
scas
sbb
aam
lahf
push
sub
popa
pop
orb
xchg
sub
jl
movsb
insl
rolb
sbb
add
fidivrl
es
push
inc
arpl
xchg
jo
neg
push
jl
fcmovnbe
add
cmp
xor
test
addr16
pop
jne
pushf
xchg
inc
lahf
push
inc
pop
icebp
xor
roll
jl
mov
imul
sbb
rcl
nop
je
aaa
sub
mov
push
sbb
or
or
rorl
std
js
rcll
bound
hlt
jg
inc
adc
pop
dec
xor
xchg
xchg
mov
and
iret
ja
xchg
mov
lods
dec
xchg
mov
call
xor
adcl
hlt
cwtl
cli
inc
mov
arpl
sub
ds
ja
mov
cmc
fs
xlat
pop
jmp
pop
xor
into
sub
dec
mov
stc
dec
jecxz
mov
lahf
es
mov
call
push
orb
les
imul
jb
cmp
pop
push
test
fistpl
lahf
push
fsub
in
jmp
shlb
sbb
ja
fstp
mulb
or
bound
mov
fcmovu
rcrl
mov
daa
push
test
out
scas
sbb
cmpsl
mov
lods
mov
mov
sbb
dec
jge,pt
or
lds
push
adc
aaa
icebp
outsb
and
clc
rorb
jns
data16
pop
les
aaa
or
aam
shlb
or
push
cld
int3
jl
lahf
mov
iret
fcoml
add
lret
test
inc
ja
mov
cld
in
pop
xchg
aam
mov
dec
ficomps
fmuls
fwait
rdmsr
adc
aad
push
inc
sub
pop
xchg
sar
jb
xchg
lahf
shlb
daa
in
aad
fcomps
sub
xchg
dec
shl
mov
sbb
pop
fwait
mov
xchg
sbb
mov
jbe
xor
mov
jb
jg
inc
arpl
scas
pop
fwait
subl
or
mov
xlat
mov
nop
jo
sub
and
jae
mov
dec
gs
xor
xchg
lods
jmp
sub
mov
adc
cs
add
mov
dec
or
outsb
mov
fdivrs
mov
ror
or
sbb
mov
dec
ffree
imul
mov
sbb
in
pop
add
loop
push
dec
stc
insl
shrb
inc
test
xor
mov
inc
movsl
pop
or
xor
scas
cmp
scas
es
push
cmp
inc
xchg
fistpl
or
inc
popa
push
das
add
and
orl
dec
sbb
or
mov
mov
adc
fldcw
sbb
cmp
xor
aaa
mov
cwtl
test
mov
jnp
fs
pop
push
mov
or
add
enter
push
xchg
jno
adc
jnp
push
ja
shll
mov
cs
cli
jecxz
cmp
mov
imul
aad
in
and
cmpsb
aam
mov
sub
mov
shlb
mov
fcomp
ljmp
cwtl
adc
mov
mov
mov
stc
test
jnp
stos
and
adc
lds
fprem
out
bound
fsubrs
mov
aad
mov
pop
arpl
cwtl
nop
lods
mov
out
xlat
push
push
pop
out
test
or
stos
or
lock
sbb
les
dec
mov
das
mov
cmovno
xchg
shll
push
aaa
testb
jmp
rcrb
push
xlat
dec
pop
add
std
mov
rclb
dec
sub
cmpsl
cwtl
add
jbe
mov
dec
lcall
mov
in
repz
rclb
mov
pop
daa
xchg
shll
aad
icebp
sbb
jns
cli
xchg
push
pop
fnstenv
mov
push
jne
adc
repnz
push
pop
pop
lret
jle
and
dec
mov
push
aaa
test
imul
push
xchg
orl
add
int
add
xor
jbe
popa
out
arpl
adc
xchg
fsubl
xor
out
in
sbb
shll
jno
cs
cli
jge
repnz
cmpsl
fwait
push
in
pop
fstpt
and
pop
shrb
jae
add
gs
xor
cmc
and
cmp
push
xlat
fcoms
sbb
push
mov
lahf
bnd
bound
dec
mov
shrl
test
add
pop
sahf
lods
jl
sbb
aad
loop
imul
dec
cwtl
cmp
and
inc
pop
jmp
pop
dec
jns
in
push
jge
lds
inc
inc
push
xor
sub
sahf
xchg
stos
mov
push
popa
loopne
and
into
jge
scas
push
stos
cmp
mov
je
mov
aam
cmc
cs
mov
data16
cmpsb
lds
push
cmp
push
sbb
jle
add
cmp
ss
or
jo
pop
ret
inc
int
mov
addr16
in
fcmovnb
repz
dec
mov
aaa
loopne
adc
adc
push
sarb
cmp
inc
add
adc
mov
fwait
iret
addr16
mov
fsave
fwait
sbb
sbb
iret
jnp
jp
fs
mov
in
mov
lds
sbb
out
roll
int
aad
daa
xor
xlat
xchg
sub
outsl
mov
mov
in
cld
ficomps
dec
sbb
sub
mov
popf
sbb
es
xor
push
mov
jg
mov
das
icebp
iret
xchg
mov
inc
sub
sbb
nop
push
mov
inc
iret
shl
sub
mov
jne
add
fs
mov
mov
ror
gs
or
push
push
mov
out
pop
lods
mov
test
cwtl
js
xor
lcall
ret
arpl
sub
nop
cmp
test
lea
fisubrs
sbb
pop
cmp
mov
cwtl
andl
int
mov
dec
fwait
pop
loope
adc
pop
mov
aad
pop
or
pop
ror
in
repz
inc
add
jg
lods
into
cmp
adc
rol
leave
jl
mov
int3
pop
clc
mov
jno
aad
xchg
and
ja
add
test
jns
shll
pop
pop
lea
jge
sub
dec
sbb
cwtl
mov
pop
sbb
sub
les
iret
pop
lret
or
in
jge
pop
notl
mov
lea
das
sbb
lret
call
pusha
adc
nop
clc
aas
scas
or
repz
xlat
pop
js
push
push
or
push
data16
cmc
ds
stc
outsb
test
dec
out
push
mov
testb
push
pop
mov
cmpl
add
inc
add
add
xor
into
inc
adc
mov
shlb
lds
jno
mov
sub
xchg
stos
out
ss
xchg
fcoml
aaa
mov
inc
adc
xchg
or
loope
mov
outsl
push
jb
inc
movsb
mov
leave
sahf
jb
mov
pop
sarl
xchg
pop
dec
inc
scas
mov
das
js
gs
test
dec
lahf
push
stos
pop
scas
sub
ss
mov
js
sub
cs
loopne
mov
jae
mov
mov
cpuid
mov
jecxz
pop
imul
sub
add
mov
mov
push
mov
aam
pop
insl
fdivr
iret
or
mov
cmp
and
inc
dec
inc
sub
xor
cmpsb
cltd
in
push
jns
mov
mov
or
and
bnd
rorl
insb
mov
inc
jno
sub
and
daa
pop
mov
fstpt
out
mov
or
xor
or
cmp
pop
aam
pop
popa
test
mov
dec
fisubrs
imul
and
js
jnp
out
mov
or
int
inc
pop
mov
sub
lods
xor
lds
jno
loopne
mov
dec
sub
pop
ja
mov
fs
repz
add
leave
inc
std
xor
xchg
adc
or
insb
push
inc
fistps
lea
cwtl
pop
ret
lea
stos
xchg
cmp
xor
sub
outsb
js
sub
fisubs
add
addr16
push
jae
mov
data16
stos
es
dec
jno
mov
xor
push
dec
mov
sbb
jmp
jnp
or
sbb
xchg
xor
inc
loop
jg
not
sub
subps
aaa
xchg
dec
sub
insl
mov
into
sub
pop
arpl
cmp
mov
flds
sub
sbbl
mov
mov
popa
jno
out
icebp
mov
out
sahf
add
aaa
out
mov
mov
mov
xor
push
cmp
mov
cmc
adc
adc
jecxz
pushf
rorl
mov
ja
cmc
mov
aam
fldt
xor
lcall
sarl
inc
aas
dec
cmpsb
mov
mov
negl
in
xchg
mov
push
out
xchg
sbb
jnp
pop
mov
cmp
sbb
jo
int3
dec
sarb
inc
inc
pop
fwait
adc
add
add
inc
cltd
ret
sbb
mov
adc
sbb
lahf
je
sarl
cmp
cs
and
repz
mov
into
cmp
push
sub
in
dec
test
mov
addr16
rorl
arpl
cltd
mov
or
xor
imul
jl
fimull
push
xchg
inc
gs
adc
in
mov
xorb
mov
in
push
fxch
and
jle
adcl
cld
mov
ljmp
pop
and
inc
call
das
sbb
sahf
pop
popf
insl
je
mov
xor
into
inc
lret
sbb
ret
scas
mov
xor
icebp
mov
negb
inc
test
repnz
in
dec
pop
add
dec
je
xor
shrb
bound
add
jbe
test
adc
int
xchg
pop
lea
jl
fs
inc
mul
std
sti
aas
ret
mov
mov
inc
push
dec
push
xchg
inc
nop
or
sbb
inc
lock
pushf
gs
jmp
out
scas
andl
in
out
mov
xchg
and
xchg
imul
outsb
cs
xchg
pop
add
inc
jbe
dec
sbb
lds
mov
mov
lea
cmc
dec
cltd
test
rorl
cmp
jae
jmp
and
xchg
ljmp
cmp
inc
imul
test
pop
mov
cmc
push
push
xchg
sub
insb
hlt
arpl
cmp
aaa
jl
jecxz
jno
jecxz
popa
popf
testb
aas
sub
jne
enter
push
cli
ficoms
ja
js
mov
and
nop
pop
int
stos
mov
adc
mov
pusha
in
cmp
mov
shll
lret
out
stos
mov
add
ret
lcall
xchg
dec
aaa
aaa
loopne
push
mov
outsb
test
lcall
pop
loop
lds
xor
sub
daa
adc
push
iret
inc
pop
cmpsl
sub
mov
mov
or
dec
mov
push
jmp
aad
ljmp
or
test
imul
pop
xchg
in
pop
sub
mov
mov
pop
sbb
pop
ss
pop
adcb
shll
jne
push
sbb
dec
or
and
mov
sbb
in
repz
cmp
fisubs
push
fcomip
test
or
xorl
in
and
aaa
mov
cltd
lods
stos
inc
movnti
popa
decb
lret
loopne
rolb
jb
add
icebp
cli
cmp
popa
inc
and
mov
aad
popf
jmp
inc
shlb
push
push
lcall
sti
fisubrs
arpl
or
sub
test
pop
lock
xchg
repnz
nop
xchg
xor
push
mov
xchg
fcmovu
dec
xchg
push
cs
xchg
push
imul
clc
rcll
sbbl
mov
iret
mov
movsl
mov
mov
add
xor
mov
jne
sarb
in
push
inc
and
sbb
orl
jno
repz
mov
mov
ljmp
rcll
mov
adc
jae
pop
insb
jmp
xchg
fbstp
lret
cmp
fstl
out
call
pop
ss
mov
xor
nop
out
push
push
mov
decb
jmp
mov
or
pop
icebp
push
sub
cmc
lcall
push
insb
adc
loop
lea
xchg
xor
or
std
nop
push
enter
int3
xchg
mov
shll
xlat
clc
mov
aaa
test
cmp
push
or
or
test
mov
mov
mull
xchg
and
mov
jno
pavgb
repz
loope
fwait
fwait
in
cmpsb
imul
mov
fisttpll
adc
or
xorb
ss
inc
mov
mov
test
cmp
add
sbb
adc
push
sub
or
es
pop
cltd
ss
jae
pop
inc
jecxz
int3
sbb
hlt
dec
rorb
call
movsb
adc
lods
adc
pusha
xchg
mov
jne
cmp
sarl
mov
movsl
fisubs
add
pop
js
push
nop
mull
loopne
pop
shlb
aas
lret
cmp
inc
cld
mov
aad
inc
test
dec
loopne
jnp
jns
aam
mov
sbb
dec
xchg
and
sub
outsb
lcall
enter
out
mov
pop
jae
es
jl
xor
mov
shr
jmp
mov
pop
out
je
aaa
mov
ret
pusha
dec
jp
loop
inc
fnstsw
lods
push
dec
inc
jg
pop
ret
int3
cmpl
jg
shrl
sub
jmp
sti
pop
or
dec
cmp
jp
movsl
bound
mov
jno
imull
std
adc
repz
out
mov
xchg
jecxz
aas
xor
out
test
pop
dec
sub
imul
mov
testl
mov
jo
push
mov
movsl
outsb
jb
add
call
subl
fdivs
and
pusha
mov
lcall
loop
pop
sbb
push
pop
mov
mov
cmp
cmc
bound
movsb
push
cld
mov
jmp
les
adcl
mov
xchg
inc
pushf
mov
xchg
in
jbe
fistl
fs
mov
mov
movsl
push
jl
insl
jnp
fcoml
pop
or
inc
ds
xchg
outsb
xor
jo
nop
adc
mov
lret
cltd
pusha
loopne
adc
xlat
or
jb
mov
mov
out
arpl
xchg
pop
mov
push
push
scas
lret
dec
mov
stos
dec
pop
lret
jecxz
pop
cld
sbb
sbb
out
sub
add
push
ficompl
inc
xchg
sbb
cli
in
push
push
dec
inc
and
mov
adc
ror
xlat
stc
sbb
mov
popa
add
sub
ss
leave
push
mov
dec
jmp
mov
dec
es
js
ja
jmp
shll
pop
jae
mov
iret
inc
orb
stos
arpl
scas
mov
mov
push
jl
push
test
setbe
mov
jns
data16
cmp
data16
int
jnp
es
sbb
sbb
mov
pop
adc
fdivs
xor
pop
mov
int3
cmp
test
xlat
adc
jbe
cmpsb
sub
and
inc
fdivrl
or
jmp
push
cmpsl
lods
pusha
mov
aam
dec
jle
xchg
repz
fistps
subl
outsb
call
add
lcall
lcall
out
subb
addr16
adc
repz
dec
jae
push
dec
fisttps
arpl
xlat
ss
and
mov
fnstsw
fistpl
push
xor
dec
shl
pop
mov
mov
or
push
xchg
mov
inc
nop
pop
lods
cmc
or
into
movsl
dec
adc
lock
and
andl
stc
scas
stc
push
or
inc
sbb
cmp
push
je
shl
mov
mov
lret
add
popa
scas
sub
loope
and
xchg
add
jnp
sti
and
xchg
add
cmpb
xchg
das
sub
mov
mov
jmp
sub
repz
ficompl
inc
stos
pop
add
jmp
xor
cmpsl
xor
mov
dec
or
xor
adc
test
popf
xor
push
fdivrs
js
dec
mov
jmp
sub
pusha
mov
aam
cmpsb
jecxz
sub
adc
out
pop
pop
pop
jg
add
ss
stc
mov
add
push
pushf
xchg
mov
jl
mov
sub
inc
sbbl
mov
and
shrl
mov
sbb
and
push
imull
inc
andb
jns
sub
jl
adc
cmp
mov
push
or
jp
cmpsl
cmc
cmpsb
popa
cmp
jge
and
movl
sub
mov
jo
cltd
sub
push
cmp
or
sbb
repnz
mov
aam
sbb
in
insb
xor
pop
addr16
pop
jle
lret
mov
jl
mov
scas
pop
cmp
icebp
push
setl
push
inc
stc
das
jae
mov
subl
jne
mov
mov
call
andb
mov
mov
lret
int3
cmp
and
push
loopne
enter
pop
fcoms
rcl
arpl
adc
adc
cmp
popf
pop
int
lds
adcb
push
sbb
dec
arpl
in
inc
insl
aad
gs
lea
sub
daa
xor
push
push
aam
leave
dec
mov
mov
outsb
xor
lds
xor
mov
fistpl
cld
xchg
jnp
adc
lahf
sub
stos
jecxz
mov
dec
rcrl
stc
in
jecxz
lret
pushf
jg
and
rolb
arpl
sub
popa
push
pop
sbb
lahf
add
push
lea
jmp
mov
das
jns
jg
outsl
sbb
shlb
mov
dec
outsl
dec
mov
mov
xor
sbb
pop
cltd
xchg
pop
cld
jecxz
cli
rcll
xlat
lret
stos
popl
fldenv
and
lret
test
repz
aam
notl
hlt
and
push
test
add
int3
sbb
dec
cs
mov
xor
jge
movl
jge
push
stc
cmpsl
arpl
pop
fisubrs
sbb
push
sub
test
mov
jmp
inc
addr16
push
pavgb
sbb
mov
mov
sahf
mov
pop
scas
dec
push
add
inc
dec
add
cmp
rcrl
movl
push
mull
stc
xor
scas
iret
xchg
scas
and
lahf
sbb
cmp
stos
push
ds
out
sub
aaa
shlb
and
imull
add
cmp
dec
rorl
mov
fs
adc
mov
movb
push
addr16
xchg
xor
in
push
jle
stc
pusha
mov
jo
inc
or
push
add
clc
int3
mov
subb
mov
scas
les
add
popf
gs
scas
xor
lret
scas
sub
fldcw
int3
aad
sbb
pop
jp
mov
shll
addb
jnp
lods
jno
xchg
inc
push
xchg
mov
cmpl
jae
cmpsl
les
mov
out
sbb
adc
movsb
xchg
lods
xchg
stos
adcb
fidivrl
fbld
and
pop
movsb
xlat
call
adc
fsubs
popf
mov
aam
pop
mov
pop
mov
out
jge
pop
insb
xchg
aas
jo
and
nop
fcom
adc
iret
lea
sub
sbb
jae
adc
ljmp
push
and
and
jecxz
push
popf
xchg
pusha
sbb
inc
mov
ds
sbb
and
add
and
inc
push
jnp
xchg
shlb
stos
xor
mov
xchg
movsl
jp
sbb
cmc
sbb
insl
xchg
adc
adcl
mov
nop
jnp
ja
shrl
sti
sub
inc
mov
xor
das
inc
xchg
out
out
imul
push
mov
sti
sahf
sbb
outsl
ljmp
jl
push
sub
mov
inc
add
push
or
or
jp
pop
cltd
sbb
push
sbb
insl
dec
xor
jae
mov
cli
pop
xor
sub
mov
jg
cmc
jno
repnz
dec
movsb
icebp
lods
jmp
outsb
call
sub
pop
and
xor
jecxz
lock
mov
adc
cltd
sbbb
ljmp
sti
cmpsb
jo
data16
rcrb
ljmp
repz
sub
and
or
stos
dec
push
fdivrp
jae
cli
mov
jle
das
clc
test
ss
int
fsubrl
adc
mov
push
jbe
cmp
mov
arpl
insl
out
sarb
fwait
mov
les
cmp
sti
ret
adc
test
andb
xorl
test
bound
xor
cmp
daa
ret
inc
cmc
cmp
aas
fwait
dec
cmp
cwtl
add
cmp
add
shrl
cmp
outsb
clc
inc
fnsave
fsubs
movsb
inc
lret
sbbb
les
push
pop
inc
mov
jb
dec
popf
add
mov
and
mov
inc
or
adc
and
int3
fisttpl
fisubl
inc
aam
fidivrs
daa
imulb
or
cmp
cmp
ror
mov
jecxz
jge
sub
arpl
inc
pop
leave
cld
pop
fcoms
xorl
out
jae
ds
fcoms
test
shlb
dec
addl
cmp
push
xor
mov
adc
into
cmpsl
lods
out
pop
std
jg
cmpsb
leave
pushf
jns
test
repz
pusha
sbb
jne
dec
dec
pushf
sub
loopne
lret
push
out
cwtl
and
insb
hlt
jg
jp
cmp
sbb
in
in
or
adc
movsb
es
fadd
cld
imulb
add
or
cmpsl
cmp
pop
or
pop
xchg
pop
hlt
dec
inc
shr
cmp
and
enter
sub
mov
mov
outsl
in
push
cmc
add
inc
or
into
xchg
sub
jb
lret
icebp
add
mov
cmp
lcall
dec
sub
mov
movsl
popf
push
aaa
add
add
mov
scas
adc
fisubrl
mov
es
addr16
pop
cli
xchg
lret
xor
xchg
scas
stos
or
lock
dec
lods
add
aaa
cmp
outsl
sbb
das
cwtl
sbb
fwait
mov
adc
adc
repz
daa
xchg
xor
stos
mov
mov
repz
insb
and
cmp
test
push
adc
addr16
in
pop
xor
jae
and
fisubrs
mov
adc
add
xor
pushf
jbe
push
popf
and
jge
mov
xor
sarb
filds
shl
inc
cli
mov
jne
jns
pop
mov
mov
inc
dec
fwait
arpl
push
xchg
cld
dec
orl
jns
xlat
dec
cmp
orl
into
mov
mov
jb
add
mov
push
cmp
add
lahf
lock
sti
xor
lcall
std
ret
sub
int
sub
mov
cmp
xchg
iret
adc
xchg
movsb
push
jo
enter
mov
mov
insb
mov
cmp
std
mov
dec
pop
pushf
inc
out
adc
sbb
inc
lods
scas
add
or
out
add
mov
adc
inc
adc
rorb
push
cmc
iret
cs
adc
loopne
out
xor
call
and
mov
enter
cmp
sbb
ret
dec
andl
imul
sub
aam
cli
fadds
sub
cld
stc
sbb
jbe
or
notb
je
loopne
inc
fs
fmuls
inc
cwtl
ficompl
mov
push
sarl
inc
packssdw
mov
and
mov
add
daa
in
pop
int3
and
push
js
pop
xchg
into
dec
xorl
sub
xlat
mov
or
xor
jp
add
scas
dec
movsb
das
sub
jmp
lock
jmp
clc
test
imul
insl
outsb
cli
hlt
outsl
push
subl
mov
cmp
dec
or
bound
jge
dec
sbb
xor
xchg
pop
lds
xchg
cmp
sub
sbb
inc
mov
xor
sub
sub
sub
pushf
les
stos
test
int
cmp
inc
cmp
xchg
mov
ret
cmpsl
xor
clc
ja
add
mov
inc
push
pop
mov
pop
hlt
mov
jmp
lods
jg
xchg
mov
fnstsw
mov
ret
iret
mov
pop
dec
mov
adcb
mov
sti
adc
fs
push
test
adc
scas
outsl
xlat
mov
out
add
ret
outsb
out
or
popl
mov
jge
mov
les
xchg
pop
movb
in
icebp
adc
sbb
jl
cld
push
push
dec
jg
mov
and
xor
sub
pop
jns
xchg
mov
repnz
mov
loopne
adc
inc
imul
outsl
out
daa
popf
mov
push
cmp
ljmp
cmp
mov
jne
dec
inc
rcr
pop
aam
arpl
mov
and
insl
xor
add
xchg
pop
xchg
and
jae
mov
adc
aam
jae
xlat
mov
sbb
mov
and
and
push
nop
pop
gs
clc
movsb
mov
fmull
sub
xchg
jg
add
jle
mov
sahf
jne
jmp
mov
inc
inc
cmpsb
daa
fwait
mov
mov
std
push
mov
push
out
out
je
shlb
sbbb
incb
push
repz
addb
sub
lret
xchg
push
std
mov
scas
and
test
inc
in
mov
adc
das
out
outsb
add
pusha
dec
divb
inc
pop
call
mov
push
lds
adc
xlat
scas
cmpsl
push
pop
addr16
jle
sub
fidivrs
fs
push
lret
xor
shl
and
das
addb
jnp
dec
xor
cs
imulb
iret
cmp
cld
adc
inc
ss
fs
sarl
xchg
stos
adc
sbb
adc
sub
loopne
xlat
insl
loop
sahf
mov
dec
dec
popf
add
xor
sbb
xor
in
push
xor
shlb
pop
push
cmpsb
sub
ds
icebp
pop
fmulp
mov
mov
test
sbb
stos
inc
mov
test
sub
les
jecxz
and
push
fimuls
xor
mov
popf
jmp
jl
lahf
lods
and
and
loopne
orl
icebp
test
add
pop
sti
mov
mov
icebp
shr
fidivrl
inc
fistpl
lahf
mov
and
jp
aam
aas
sbb
and
fld
cmp
mov
addb
mov
mov
in
sbb
push
orb
adc
popa
lahf
push
lock
mov
or
test
fisubrl
ret
repz
jecxz
adc
add
enter
inc
pusha
add
mov
nop
fwait
std
or
shrl
insl
mov
test
cmp
aaa
inc
in
frstor
sub
insb
adc
and
push
hlt
jbe
cli
nop
sbb
call
xor
dec
mov
cwtl
insl
sub
iret
daa
ss
out
dec
inc
outsl
sub
into
pushf
cmpsb
mov
jb
imul
leave
out
rorb
dec
test
enter
jnp
mov
jg
cmpl
scas
cmpb
dec
xlat
mov
jae
or
xlat
pop
inc
imul
addr16
std
and
insb
xchg
dec
mov
cmp
lcall
in
pusha
xorl
pop
dec
int
jle
mov
mov
and
stos
aam
adc
mov
js
jmp
int
out
xor
insl
addr16
xchg
mov
pop
lock
push
dec
jecxz
pop
sti
cmp
xchg
outsl
cmpsb
nop
push
jno
fadds
jge
das
icebp
jle
iret
scas
test
outsl
dec
scas
pop
mov
aam
das
xchg
dec
lds
jns
imul
imul
scas
dec
das
ja
cmp
or
jno
xchg
cmp
pop
add
cwtl
inc
enter
fimull
jno
jl
adc
push
enter
sbb
xchg
ja
jl
and
ss
fsts
mov
mov
loopne
mov
popa
xchg
pop
sbb
inc
xchg
mov
out
sbb
lock
and
add
cmc
mov
dec
lods
sahf
pop
inc
adcb
cld
push
pushf
icebp
cmp
std
nop
lods
cmp
jle
shr
push
subb
call
imul
inc
pushf
lahf
sbb
jb
lods
data16
cmpsb
rcll
ljmp
pop
pop
push
jecxz
pop
and
stc
xor
mov
jae
and
insl
cmc
fst
ror
mov
pushf
shlb
sarl
xchg
push
xchg
xor
xlat
mov
dec
add
or
les
pop
jae
ds
fadds
inc
adc
sub
pop
je
loope
and
pop
cmc
and
fwait
je
mov
sub
enter
xchg
aam
iret
xlat
scas
jecxz
outsl
loop
inc
dec
fldenv
test
cmpsl
mov
or
jmp
cwtl
inc
adc
dec
ljmp
xchg
and
lret
jecxz
and
add
jb
pop
and
push
xchg
scas
cmp
js
mov
popa
sarl
jecxz
fcomps
fstp
dec
divb
gs
pusha
pop
enter
mov
or
ret
rcrb
mov
and
fisttpl
push
jo
push
je
cmp
out
or
mov
pop
daa
fwait
test
adc
fildll
or
push
mov
sbb
cltd
mov
mov
xor
popa
ret
pop
xor
add
lea
and
push
jbe
or
dec
lahf
adc
repz
push
fst
popa
fnstenv
sbb
inc
ja
nop
into
scas
lds
cmpl
xchg
fists
outsb
stos
jecxz
xchg
dec
jle
movsb
jp
push
xor
adc
and
jne
into
mov
std
lea
adc
js
mov
outsl
sbb
sti
mov
fnstenv
hlt
in
adc
sbb
cmpsl
add
adc
inc
jecxz
mov
lock
jnp
insb
xchg
adc
pusha
bound
xchg
rolb
lock
pushf
das
mov
jg
lods
lods
inc
addr16
push
push
inc
mov
lock
pop
push
lcall
lahf
or
adc
loopne
mov
push
and
test
add
dec
arpl
cwtl
nopl
push
in
and
clc
lods
mov
stos
mov
fldenv
jo
push
push
pop
mov
xor
push
shll
adc
xchg
push
aas
test
dec
add
add
js
xor
push
sahf
lods
ljmp
arpl
lret
cmpl
push
push
les
fiaddl
cmp
scas
cld
lock
adc
dec
jnp
stc
xchg
stos
pop
fisttpl
xchg
rorb
jp
es
sarl
jb
jbe
sbb
adc
or
bound
addb
dec
cmp
mov
mov
test
outsl
mov
orb
push
or
leave
xchg
out
imul
cmp
push
loope
xchg
lds
imul
adc
push
inc
int3
jg,pt
pop
inc
daa
rclb
mov
js
and
ficompl
pusha
mov
mov
cmc
push
sub
or
mov
addr16
xchg
test
jno
fmuls
inc
hlt
cmp
int3
xlat
mov
mov
cld
push
je
sahf
rclb
jne
notb
ror
mov
out
leave
inc
jo
mov
iret
pop
pop
pushf
mov
ja
jge
xchg
xchg
enter
aas
insl
imul
into
outsb
xchg
iret
inc
pop
or
fstpl
add
insb
xlat
fidivl
lods
xchg
jecxz
popf
and
xor
sbb
subl
or
or
insb
sub
negl
dec
ss
jmp
das
hlt
stos
sbb
insl
loop
pop
aas
fildl
push
sub
mov
in
jle
mov
xor
inc
sub
jmp
mov
or
ret
stos
pop
data16
outsl
gs
add
test
adc
mov
adc
movsl
ret
lea
mov
test
xchg
inc
push
sub
dec
xlat
mov
add
pusha
js
dec
fmuls
push
loope
mov
movsl
mov
test
jg
incb
mov
and
fs
ret
insb
sub
push
fsubrs
pop
fldt
fs
jo
or
rcll
inc
loopne
imul
dec
jae
mov
movsb
dec
xchg
sbb
inc
fwait
lds
aas
scas
inc
insb
dec
pusha
stos
je
fisttps
gs
fldl
nop
add
ljmp
mov
mov
out
xchg
push
mov
xor
lret
pop
fucomp
mov
dec
xor
gs
cmp
lea
test
shl
or
lock
repz
sbb
out
es
jae
and
pop
mov
cli
sub
arpl
add
aam
xchg
mov
inc
shll
adc
loope
jnp
bswap
mov
daa
mov
push
stos
fcoms
fs
and
decb
xchg
lock
mov
adc
stos
inc
incl
inc
cmpl
les
jmp
xchg
mov
ds
and
pop
lcall
dec
adc
aas
fcoml
dec
cmc
xor
shlb
jne
adc
cmp
notb
popa
int3
call
xlat
dec
adc
cmp
sarb
mov
jmp
hlt
sbb
mov
icebp
enter
add
push
jnp
xchg
pusha
mov
sub
psrlq
stos
pop
push
lea
test
mov
and
add
jp
loope
inc
or
outsl
adc
xchg
mov
ret
loopne
inc
fidivrl
cmp
loopne
orb
aaa
sub
ficompl
insb
lods
push
lds
mov
mov
inc
ret
sub
jp
mov
insb
xchg
mov
rolb
int3
test
int
test
or
aaa
jl
add
mov
add
mov
mov
call
ret
dec
sti
shll
aas
pop
mov
xchg
jne
dec
mov
lds
dec
dec
add
shll
sub
shrb
push
pop
idivl
xor
adc
pop
mov
stos
inc
es
mov
loope
lcall
push
mov
dec
in
rol
mov
cmc
pop
cmpsl
pusha
scas
adc
mov
movsb
and
sbb
xchg
dec
xchg
sbb
mov
jae
mov
adc
jne
jbe,pt
fldl
push
adc
pusha
jl
xchg
xorl
xchg
sbb
inc
mov
and
sub
jo
aas
movsl
aaa
inc
mov
cmpsb
mov
adc
gs
or
icebp
loope
cmp
int3
stos
movsl
xchg
inc
push
push
outsl
add
pop
insl
inc
lret
and
mov
add
cmpsb
call
or
int
dec
pop
pop
mov
iret
mov
in
lea
rol
add
repz
lret
mov
and
lock
int3
into
outsl
add
aad
add
mov
mov
loope
push
add
and
push
mov
orl
sbb
sub
inc
test
pop
push
pop
pop
dec
mov
adc
sbb
jmp
dec
mov
adc
popf
shl
push
and
or
push
jnp
into
movsb
insb
mov
mov
pop
loope
or
jae
lods
xor
test
shr
mov
clc
mov
cmp
icebp
adc
mov
lcall
ret
int3
pop
jno
xchg
je
pop
nop
std
lcall
pop
mov
clc
jge
imul
or
sbb
push
pop
stos
add
int3
cmpsl
or
out
dec
xchg
lods
in
sub
mov
rcrb
nop
mov
push
cltd
mov
inc
xor
xor
push
add
pop
mov
not
xor
lahf
pop
scas
jg
loop
mov
test
add
and
adc
cld
aas
pop
popf
lea
dec
cwtl
inc
mov
inc
scas
fidivl
test
inc
cmpsl
push
cli
mov
push
xorb
lret
xchg
in
test
jns
xlat
ss
mov
jg
add
rclb
out
repnz
and
mov
cmp
movsb
inc
and
dec
or
scas
fs
mov
pop
aad
dec
or
mov
jg
scas
xchg
push
inc
call
leave
add
push
cli
ret
add
inc
jge
adc
inc
test
out
movsl
mov
add
sub
lock
pop
frstor
test
adc
inc
adcl
int3
aas
push
push
mov
push
movsl
or
mov
inc
js
icebp
in
and
dec
mov
sub
fistps
ret
fs
outsl
xor
notb
add
add
and
pushl
jle
xor
push
daa
push
cwtl
jmp
or
push
rcll
faddl
cmp
lahf
xor
fidivs
sub
dec
xchg
js
arpl
in
xchg
inc
adc
dec
sbb
lods
xor
incl
dec
mov
mov
lahf
add
jmp
lret
or
jge
out
sarl
dec
sahf
lds
sub
adc
push
mov
pop
test
push
pop
leave
jge
xor
inc
lods
add
stc
arpl
and
sti
mov
or
push
jmp
shrl
cmc
dec
lods
inc
mov
xchg
enter
jbe
test
lahf
stos
cmp
pushf
test
icebp
push
daa
out
std
sbb
cltd
inc
stc
outsb
and
push
mov
sar
addl
sbb
jle
mov
or
inc
out
ss
push
pop
cmp
mov
lds
add
mov
push
xchg
cwtl
and
jno
xchg
push
sahf
xchg
add
sbb
in
imul
fwait
pop
fisubrs
or
into
mov
rol
inc
leave
rolb
add
push
or
aaa
xchg
out
adc
pop
mov
ja
gs
negl
pop
push
fldt
fstl
xchg
js
sbb
mov
insl
inc
mov
mov
sub
mov
nop
nop
mov
cmp
bnd
dec
and
enter
fwait
je
nop
lods
pop
rolb
add
mov
sbb
fcomps
add
xchg
xor
pop
add
jo
pop
push
xchg
mov
dec
scas
movsl
std
add
inc
mov
jmp
lea
jb
jne
mov
pushf
pop
pop
adc
mov
aam
decl
sub
orb
mov
mov
stos
mov
sti
cmpl
inc
cmpsl
or
xor
insl
daa
jmp
jnp
insl
add
xchg
js
icebp
and
and
scas
mov
enter
mov
inc
dec
xor
bound
into
mov
and
mov
imul
xor
jge
fiaddl
pop
jle
addr16
out
aad
push
mov
ds
movsl
pushf
scas
sti
in
lds
nop
fidivrl
ja
and
sbb
add
popl
hlt
int
shll
mov
push
xchg
lods
cmp
lahf
dec
push
jo
push
movsl
mov
loope
jp
pop
daa
pop
xchg
dec
push
dec
pop
and
stos
jg
or
loope
mov
add
fadd
xchg
sub
scas
out
push
movsb
mov
outsb
and
jno
mov
ret
push
pop
bound
fdivrs
pop
adc
cmp
jp
shrl
outsb
or
xor
adc
arpl
xchg
testb
out
arpl
pop
or
inc
jp
mov
pop
dec
scas
add
xlat
jo
push
jmp
insb
add
jnp
add
sti
loope
in
cmpb
mov
inc
shll
roll
sub
or
je
sbb
addb
and
dec
inc
fcos
mov
dec
jb
movsb
clc
ja
lret
test
cmc
mov
outsl
add
mov
or
inc
mov
notb
xor
int
adc
pusha
bound
divl
imul
xor
sbb
cld
std
adc
jmp
std
ds
sub
lea
sbb
insb
aas
fldcw
sbb
cltd
sbb
jge
jmp
jne
out
fldcw
adc
lret
nopl
or
jmp
jmp
or
add
jns
loopne
movsl
mov
mov
push
sub
cmp
loopne
or
aam
push
xlat
cmc
imul
fistl
xor
pop
aas
imul
xchg
scas
cmp
xchg
inc
cs
jp
push
ds
adc
sub
lret
mov
inc
sbb
repz
hlt
iret
std
test
mov
xor
sti
mov
ja
xchg
out
jg
pop
shr
jns
mov
xor
inc
add
sbb
maskmovq
negl
inc
jne
inc
jae
sbbl
pop
sarb
faddl
and
xor
xchg
cmp
pop
jno
adc
lods
lahf
shll
mulb
cmpsb
or
js
xchg
jns
out
fstl
mov
mov
movsb
inc
jge,pn
sub
sub
push
and
cmp
mov
jecxz
std
sbb
dec
xor
jns
sub
cmp
fcompl
stos
mov
addr16
adc
or
cmp
int
cmp
mov
lock
incl
jp
loope
inc
out
push
xor
jmp
inc
push
lock
insl
mov
nop
insl
xor
add
dec
cs
dec
push
shrl
inc
dec
jp
mov
stos
sub
shll
jbe
aam
push
inc
shl
pushf
add
ds
test
cmp
rcll
add
dec
push
test
ffreep
xchg
inc
test
cld
jb
mov
ficoms
jge
mov
test
mov
inc
iret
aam
mov
mov
rclb
mov
aam
aaa
add
xchg
shl
cmpsl
pop
xchg
es
cwtl
outsb
mov
testb
cmp
decb
enter
xor
xor
or
fldt
sbb
mov
fstpl
cmp
jo
imul
ljmp
outsl
ret
xchg
or
cmp
in
inc
jmp
ds
addr16
mov
dec
sahf
jp
or
push
gs
adc
xchg
xchg
test
les
xor
push
data16
cmp
imul
inc
jne
clc
cmpsl
movsb
jg
adc
fcmove
andl
adc
xchg
hlt
lret
mov
inc
adc
add
sti
arpl
cmp
in
dec
push
jno
in
sub
add
nop
cmp
lods
jne
in
pop
mov
jo
cmp
clc
jge
sub
out
cmpsl
jecxz
jmp
leave
out
loop
dec
test
mov
cmp
push
repnz
jle
clc
in
and
inc
pop
popf
cs
jb
mov
push
hlt
xor
pop
xchg
jne
mov
jl
inc
scas
inc
jmp
dec
adc
xor
push
lock
pop
fnstcw
push
repz
movl
push
adc
es
cmpsb
arpl
test
adc
add
inc
inc
sub
pop
mov
mov
aad
dec
or
sarb
mov
mov
ficoml
fwait
push
gs
adc
loopne
xchg
loop
adc
sarb
loopne
clc
jmp
dec
cmp
pop
mov
xor
mov
popf
pop
test
jecxz
rorl
stos
rcrl
add
push
or
jns
inc
rcll
in
loopne
mov
lahf
dec
fidivrs
daa
rcr
fwait
lret
hlt
out
repz
lods
mov
mov
shll
lret
dec
jmp
lock
ds
out
xor
lds
call
inc
or
repz
test
xchg
xor
lods
xor
das
clc
push
rclb
fdivl
ds
fwait
and
adc
push
and
stos
cs
push
cld
xchg
or
gs
mov
lahf
xchg
outsl
lods
mov
sbb
inc
arpl
mov
xor
and
sbb
test
iret
xorb
mov
pop
xor
or
push
int3
adc
sbb
and
loop
outsl
mov
jle
aam
andl
push
and
in
jbe
and
les
adc
jp
out
xchg
or
enter
mov
sub
shlb
dec
test
dec
shll
imul
out
pop
out
testb
sub
add
mov
ss
sub
fmull
xchg
jle
popf
test
push
add
and
repz
mov
adc
and
hlt
leave
dec
outsb
pop
xor
insb
adc
das
fidivs
mov
adc
pop
cmp
jne
pop
dec
xchg
xchg
shl
je
cs
mov
adc
ljmp
add
jg
jp
lea
sti
or
jmp
xchg
repnz
prefetch
fsubl
inc
fcmovne
sbb
and
pop
lcall
andb
mov
or
fisttpl
pop
push
mov
and
cmp
sub
aam
test
and
lahf
mov
jae
je
xorl
xlat
sub
xchg
popf
cli
adc
das
adc
add
aam
sti
and
mov
push
push
xchg
clc
xchg
xor
call
stos
pop
push
bswap
lea
mov
mov
push
out
dec
cmpsb
insb
das
mov
sbb
fwait
mov
lock
loop
into
sub
testb
pop
mov
rcl
fs
pop
cmp
imul
xor
gs
lods
jae
lahf
cmpb
mov
jmp
pop
mov
pop
icebp
and
movsb
mov
pop
jmp
inc
nop
xchg
adc
popa
push
mov
pushf
pop
loope
cmpsl
data16
jnp
data16
xchg
out
mov
call
iret
jp
das
stos
addl
aam
fsubrl
icebp
fidivl
shll
cmp
cmp
mov
or
les
and
pusha
adc
fdivrl
mov
repz
or
popa
xchg
adc
ret
jmp
push
mov
cmp
inc
dec
dec
js
add
icebp
sub
jb
lret
loope
adc
pop
mov
push
inc
and
fs
lods
es
add
sub
xchg
cmp
pop
mov
icebp
outsl
sub
adc
mov
push
sub
mov
lock
gs
arpl
aam
in
lods
add
mov
xchg
inc
fisubrl
mov
or
jl
repz
sbb
loop
sub
orb
imul
dec
mov
sahf
adc
pop
push
into
cmpsl
lcall
inc
mov
xchg
pop
dec
loop
scas
pusha
mov
mov
jne
sbb
push
jno
scas
leave
outsb
pushf
xor
popa
cmc
jns
loopne
jp
and
or
pop
movsl
jge
inc
rorl
fists
sarl
sbb
fs
add
adc
pusha
mov
sub
outsb
into
adc
not
das
push
sub
jmp
pop
or
mov
shll
pop
mov
add
jne
push
inc
xchg
into
fiaddl
lods
xor
inc
sub
cli
xlat
mov
enter
es
push
das
out
inc
loopne
test
fadds
jmp
mov
xor
les
repnz
push
mov
and
and
inc
iret
insl
add
lcall
outsb
jl
mov
push
rcr
cmpsb
xchg
repz
ret
fs
popa
arpl
sbbl
inc
push
mov
jecxz
dec
jbe
sbb
in
pop
cmp
cmp
fildl
fdivl
lods
jmp
push
cmp
rorl
adcl
popa
daa
out
aam
stc
out
xchg
jle
outsb
ret
mov
jns
aas
aas
mov
iret
jmp
rcl
inc
xor
push
mov
and
push
sbb
xor
xor
cmp
das
mov
lods
pop
rcl
into
mov
mov
gs
pop
xor
sub
in
fcoms
sub
jmp
add
add
or
jecxz
push
notb
lahf
push
fistl
stos
cmc
es
mov
hlt
lea
lcall
andb
shll
lret
scas
or
pop
fists
or
and
push
lahf
mov
fs
ljmp
insb
aaa
rcll
and
cltd
and
cli
xor
rcrl
scas
sbb
imul
insb
inc
mov
mov
pop
in
adc
jge
nop
aad
cmp
int
cs
pusha
in
and
aas
test
xor
lea
inc
lock
xchg
aaa
jo
add
push
arpl
ja
movsb
cmp
jl
aam
push
dec
xchg
push
and
xor
fsubrl
rcr
sahf
mov
out
insl
cli
cmp
outsl
jae
xchg
jae
nop
lods
mov
repz
outsl
sbb
mov
fnop
mov
ss
lret
in
push
push
sahf
and
jg
pusha
xor
arpl
std
popl
adc
mov
cmpb
dec
mov
dec
xchg
dec
and
pop
shl
arpl
pusha
sbb
mov
dec
lret
xor
pop
mov
es
and
es
sub
addr16
mov
lahf
stc
push
add
xor
inc
movsl
testl
mov
cmp
mull
cmpsb
jae
xor
mov
sub
les
sbb
dec
push
test
sbbl
add
inc
or
inc
jle
leave
orb
cmp
jae
xor
stos
stos
jne
add
pop
mov
sbbl
outsb
clc
xlat
into
push
orb
jmp
ds
cmpsb
out
addr16
add
cwtl
adc
pop
xor
and
mov
ljmp
dec
pop
daa
xchg
push
mov
xorb
mov
add
testl
fs
xchg
adc
inc
ss
jg
movsb
jae
adc
pop
push
push
push
dec
add
sub
popa
push
cmpsl
push
addr16
lret
dec
xchg
and
sbb
cmp
inc
jno
pop
jns
mov
push
pop
push
mov
daa
mov
fadd
imul
int3
dec
cmc
out
inc
lcall
bound
int3
xchg
mov
cmpsl
movsl
jae
pop
dec
adc
pop
mov
cwtl
sbbl
jmp
stos
cmp
aad
rep
ljmp
adc
cwtl
pop
pop
sar
sbb
call
push
inc
outsb
sub
std
arpl
popf
jl
loopne
jo
out
daa
adc
xchg
loopne
lcall
xchg
gs
or
pop
mov
repnz
out
mov
iret
arpl
jne
xor
lret
pusha
dec
cli
fisubs
cmp
inc
les
inc
pop
inc
or
sbb
push
sbb
fs
out
xor
sub
push
pushf
push
jo
aad
test
and
add
xor
div
mov
xchg
jo
push
jmp
jns
adc
pusha
mov
mov
inc
push
mov
push
xchg
in
hlt
push
lds
fistpl
inc
lds
xchg
mov
decl
sub
and
and
stos
fistpll
lods
mov
pop
pop
pop
xor
pop
jp
jo
mov
int3
mov
dec
dec
add
mov
cmc
xchg
ss
mov
gs
push
mov
dec
cwtl
cmc
pop
loop
mov
out
jge
out
xchg
ljmp
pop
dec
adc
jg
xor
adc
lds
mov
cmpsl
jno
sub
push
loopne
jl
push
push
jmp
sbb
xor
loope
jle
dec
mov
fbld
mov
lret
iret
adcl
orb
insl
sbb
sub
insb
mov
cld
jg
es
hlt
mov
sarl
push
jl
inc
sub
mov
aad
cwtl
pop
fdivl
push
or
mov
add
stc
pop
mov
das
ss
lds
pop
enter
mov
mov
cli
scas
nop
sub
in
push
cmpsl
call
je
jne
or
stc
jne
loope
add
or
mov
pop
jmp
cld
out
out
imull
adc
xchg
inc
loop
lods
mov
mov
ja
lret
iret
xchg
pop
add
or
mov
jo
push
mov
in
clc
dec
stos
lret
mov
mull
icebp
adc
shlb
clc
repz
xchg
sub
mov
shll
pop
and
sub
fisubrl
push
mov
fidivs
cmc
xor
cs
push
insb
lret
divb
inc
fisttpl
loop
shlb
add
cmpsl
les
mov
aaa
test
in
inc
xchg
pop
jmp
mov
lods
push
hlt
cmc
dec
pop
leave
rorl
or
loope
cmp
cmp
and
pop
mov
out
fwait
xor
loop
xchg
push
out
bound
cmp
push
pop
adc
insb
dec
aam
inc
rorb
mov
cmp
std
sub
push
push
sarl
and
ja
gs
cli
jno
loop
int
lcall
or
loope
loope
setbe
lahf
xchg
adc
jbe
dec
icebp
xor
add
inc
or
call
stos
lds
cld
call
sarb
jle
fsubs
shlb
or
add
mov
cmp
pop
adc
scas
fs
fdivr
or
fldcw
sub
mov
mov
pop
outsb
loopne
popa
nop
or
cmpsl
dec
pop
je
and
out
cmp
test
aas
push
ja
sub
data16
pusha
scas
scas
xor
dec
xor
xchg
sub
mov
outsl
jae
mov
push
out
push
lods
test
cmpsb
aad
or
or
sti
popa
cltd
add
add
outsl
or
pop
jo
les
mov
dec
push
jnp
jg
or
mov
aas
int
xor
xchg
xchg
iret
pushf
ds
and
ror
test
stc
jl
and
sbb
lock
jmp
clc
jbe
out
insb
jne
mov
mov
orl
inc
add
out
je
int
cmp
sbb
std
data16
mov
mov
das
popf
int
lock
sbb
inc
cli
xchg
fldl
std
das
mov
aas
or
mov
fiadds
aad
push
das
call
jnp
std
mov
sbb
cwtl
in
xchg
push
orb
fs
movsl
pop
bound
cltd
enter
hlt
int3
xchg
scas
and
mov
out
sbb
loopne
mov
add
and
scas
sbbl
out
or
inc
lods
mov
popf
aas
pushf
jbe
add
stc
cmpsb
push
sub
decb
movsb
sub
or
loope
sbb
lret
jmp
jb
mov
inc
pop
sub
rcrb
rol
mov
pop
dec
fcoms
push
push
jg
loopne
pop
sar
in
popf
sub
push
test
push
cmp
mov
addl
pop
ds
xchg
icebp
mov
push
and
mov
in
faddp
mov
cmp
repnz
movsb
cld
cli
gs
add
fbld
add
sub
fsubl
movsl
pusha
outsb
push
data16
mov
or
imul
inc
add
insl
push
mov
lods
add
mov
xchg
aad
in
iret
cmpsl
aas
pusha
arpl
jno
loopne
sub
jle
stc
insl
inc
mov
inc
jge
mov
push
dec
add
inc
push
int3
xchg
fwait
lock
or
push
cmc
js
mov
or
mov
xchg
mov
push
mov
cli
aad
xor
pop
and
cmp
js
out
les
sbb
fists
addl
movsl
icebp
fcom
bound
mov
lock
and
in
push
cmp
jle
ja
mov
sub
push
int
call
mov
sbb
push
inc
adc
add
xor
mov
std
mov
in
inc
outsb
dec
pop
or
pop
and
rclb
sbb
ljmp
cmc
sub
mov
xor
push
aad
ret
or
or
sbbb
fdivl
dec
jp
out
pop
push
out
dec
shl
inc
rclb
iret
int
xor
push
jecxz
xchg
imul
dec
xchg
push
mov
call
testb
or
arpl
push
mov
or
cmp
inc
es
addr16
cmp
test
daa
pop
outsl
outsb
inc
pop
movsb
sbb
jle
cmp
inc
das
and
sbb
fsts
lcall
jle
fildll
mov
mov
xchg
test
dec
shlb
fidivs
enter
sbb
adc
xchg
ja
out
movsl
push
adc
mov
sub
shrb
repnz
sbb
mov
ljmp
int3
pop
movsl
mov
inc
mov
dec
stc
xor
lock
jge
sbb
outsb
jmp
shlb
xor
xchg
scas
push
rol
xchg
mov
clc
fs
xchg
hlt
shrl
aas
cwtl
icebp
mov
mov
cmp
addr16
cmp
jo
fmull
sbb
xor
in
jo
sbb
mov
mov
jp
inc
add
jmp
std
push
xor
cmp
lahf
movsb
ret
mov
js
enter
enter
adc
or
outsl
int3
dec
test
jno
call
insb
insl
insb
stos
lock
push
pop
add
adc
fistpl
xchg
out
pop
mov
adc
mov
jbe
push
add
iret
inc
push
inc
add
loopne
xchg
push
mov
inc
push
lds
mov
dec
movsb
in
sub
cmp
call
repnz
in
cltd
sub
fwait
jmp
incl
mov
shlb
rep
pushf
mov
adc
or
push
pop
popf
test
jns
es
pop
push
mov
movsl
jno
loop
dec
inc
fs
ret
jecxz
testl
dec
int3
ja
and
pop
xchg
or
xor
xlat
adc
push
mov
aam
test
xorb
mov
pop
xchg
mov
xchg
mov
inc
jg
xchg
mov
mov
sar
shrl
into
out
mov
push
imul
adc
shl
lret
jecxz
xchg
pmullw
cmc
xchg
jl
add
lret
stos
mov
xchg
dec
es
imul
add
pop
dec
mov
push
inc
insl
and
in
cli
jbe,pn
push
jecxz
nop
xor
jg
fcoml
outsl
into
push
scas
je
in
gs
jo
out
xchg
pop
inc
jno
subb
movsl
xlat
jmp
mov
sbb
mov
pop
ja
cmp
outsl
sbb
mov
cmpb
xor
clc
dec
sahf
shr
and
or
xor
and
inc
sub
and
xchg
loop
or
xor
pop
add
dec
adc
jle
fidivrl
inc
inc
push
dec
int3
sbb
add
dec
fwait
sbb
cli
cmp
dec
dec
les
xchg
cmp
in
push
sub
js
aaa
sbb
lcall
out
in
out
mov
pop
xchg
imulb
dec
add
push
cmp
lea
inc
dec
aaa
lret
inc
add
adc
cs
sub
add
cli
or
je
push
iret
ja
ds
mov
loopne
fbstp
movsl
leave
dec
xlat
hlt
lea
popf
push
push
mov
xchg
aad
test
and
fs
cld
and
mov
loop
sti
push
inc
or
xor
movsb
add
in
sub
arpl
mov
push
jne
out
loop
push
daa
pop
lret
je
xchg
in
adc
in
dec
mov
test
sub
jl
clc
xchg
jecxz
push
fs
lret
iret
push
jns
adc
xchg
push
and
sub
adc
sbb
lds
add
inc
test
or
jecxz
pop
mov
cli
dec
jnp
repz
adc
cmpsl
push
mov
jle
xchg
leave
xor
lcall
loope
xor
sub
out
jae
in
pop
jnp
cltd
int3
fwait
or
stc
adc
lret
enter
mov
jno
inc
or
loop
cmp
pop
and
mov
mov
jne
test
mov
adc
aas
push
dec
fdivl
jecxz
push
lcall
adc
push
scas
outsb
mov
mov
mov
enter
or
dec
inc
aas
sbb
stos
push
test
incb
loop
or
daa
xor
mov
push
pop
cmp
or
sub
into
xchg
sbb
pop
sbb
jbe
pop
add
sub
movsb
sub
adc
push
or
leave
xorl
pop
into
push
loopne
adc
push
pop
xor
call
push
xor
fcmove
mov
ds
das
daa
dec
jo
xor
outsb
ret
ret
iret
mov
and
jg
in
sarb
imul
pop
iret
out
sbb
push
cmp
push
sbb
add
js
mov
and
pop
mov
cmp
scas
xchg
cmp
stos
mov
test
cmp
sbb
mov
movsb
mov
adc
or
and
cli
sbb
pop
add
mov
aas
xchg
lea
pop
cmp
jnp
jl
aad
jg
rolb
inc
dec
loopne
xchg
or
or
stos
inc
jo
xor
sbb
call
adc
cmp
inc
cmp
cmp
jle
ja
dec
add
fisttps
out
or
xor
xchg
stos
sub
sbb
lret
lock
adc
movsl
xchg
xchg
cltd
lock
mov
cld
ljmp
cltd
add
jp
movsb
lret
loop
adc
test
mov
sub
out
mov
sbb
sbb
in
test
cmp
and
jnp
inc
test
inc
sub
cmp
outsb
cmp
add
cmp
push
mov
sub
sbb
sti
mov
inc
call
dec
or
call
cmpxchg
dec
mov
cmp
pop
xchg
mov
sub
loopne
fisttps
outsl
cmpsl
loopne
imul
push
and
xchg
and
aad
inc
jmp
out
repnz
inc
jl
jmp
mov
mov
fisttpll
jle
or
scas
cld
add
jge
cmpsb
push
mov
mov
mov
jmp
sbb
pushf
loope
dec
js
mov
pop
and
pcmpeqw
mov
test
or
mov
mov
popf
jne
stos
push
sbb
mov
push
cmpsl
and
sub
mov
dec
aad
inc
jne
sub
lahf
cmp
adc
lods
or
in
idiv
test
cwtl
xor
xchg
mov
inc
xchg
add
shl
jmp
es
loop
xchg
and
cs
dec
aas
out
jae
into
in
xchg
jae
xchg
push
jmp
imul
fldenv
cmpsb
sub
jns
cwtl
sub
std
mov
add
mov
les
lea
or
les
cmp
out
sub
call
xchg
outsl
jmp
scas
addl
mov
cmp
enter
sti
lcall
mov
inc
or
lret
cltd
lretw
in
xlat
out
aaa
fldz
cmp
dec
push
lods
icebp
sti
lods
add
loope
mov
push
pop
cmpsl
and
das
jge
repnz
add
mov
pop
rcll
or
inc
cli
pop
xchg
scas
or
lea
shl
fdivrs
push
mov
loope
lret
dec
xchg
outsb
mov
lds
daa
push
mov
adc
in
add
mov
daa
xor
add
jns
lock
arpl
or
jbe
stos
stos
add
adc
cmp
mov
jmp
jnp
add
ficompl
adc
push
rcrb
adcl
pop
mov
int
and
sub
jnp
dec
pop
mov
add
movsb
push
bswap
lds
adc
sarb
scas
arpl
loop
mov
xchg
std
mov
push
gs
add
sbb
cmp
imul
lcall
pop
andb
mov
gs
or
fwait
and
mov
add
adc
mov
enter
and
imul
cmp
repz
test
out
lahf
loop
and
pusha
stc
adc
fstps
or
aas
jecxz
jae
xor
jmp
insb
sbb
popf
sub
fs
flds
movsl
lods
sahf
call
pop
pop
push
les
pop
jp
mov
dec
pushf
jno
jbe
js
out
cmpsb
daa
outsb
rcl
aad
jae
sub
test
xchg
clts
or
hlt
mov
test
push
aad
insl
lret
cmpb
imul
mov
or
pop
in
push
pop
andb
lods
jmp
loop
and
adc
inc
ret
dec
outsl
lds
stc
and
adc
or
addr16
jmp
hlt
mov
jp
arpl
popa
cmpsl
addr16
popf
outsl
jl
xor
lea
xlat
lods
mov
pop
fdivrl
dec
add
mov
shl
push
pop
in
push
test
pop
xor
mov
stos
pop
cs
jbe
movsl
adcb
inc
xchg
dec
jnp
pop
sahf
movsb
mov
test
mov
bound
jb
cltd
mov
shlb
push
sbb
pop
fcmovnbe
mov
icebp
aam
sbb
gs
xchg
jge
shl
sbb
insl
mov
mov
xor
sub
fmull
jle
inc
xchg
test
inc
xlat
rcl
push
cmp
popf
test
xor
jp
sbb
or
jecxz
mov
adc
pushl
or
into
jne
ficompl
mov
aas
inc
dec
lods
aad
xchg
icebp
push
std
sub
inc
daa
insb
jbe
sbb
in
and
pop
daa
ljmp
sub
sbbl
in
fdivl
rcrl
inc
ja
mov
repz
andl
clc
cmp
and
mov
scas
dec
shrl
sub
inc
jl
push
test
inc
add
fwait
pop
pop
lahf
dec
int
mov
push
jg
into
out
out
sbb
jb
jge
inc
popl
stos
pop
mov
xchg
daa
shll
scas
cmp
push
xorb
data16
lcall
xchg
sub
test
fildll
mov
sub
and
pop
stc
dec
add
hlt
orl
or
mov
sub
addr16
mov
inc
sub
lahf
mov
shll
testb
and
xor
pop
ds
ret
mov
or
cmp
jecxz
cmp
lods
push
adc
and
or
push
push
idivb
pusha
sub
rolb
pop
fsubr
jg
pop
test
mov
lahf
push
mov
pop
pusha
jmp
mov
inc
push
addr16
loop
loop
lea
dec
push
adc
stc
add
sub
idivb
dec
adc
mov
outsb
arpl
push
popf
xchg
sar
lret
push
mov
test
cli
push
mov
sub
addr16
push
mov
mov
std
in
insl
cld
sbbl
popf
in
xor
filds
push
rcll
dec
push
and
sub
shlb
stc
popf
inc
dec
inc
xor
push
or
adc
adc
inc
or
pushl
out
adc
outsb
int
int3
aam
imul
shrb
and
ljmp
loope
pusha
push
cmp
fcom
scas
aam
mov
subl
xor
lods
fistl
or
cvttps2pi
and
mov
jmp
jmp
add
das
mov
mov
les
cmp
js
maxps
lret
int
ret
in
jl
scas
pop
add
pop
scas
ret
sbb
sub
mov
mov
sub
cmpb
or
add
push
scas
push
cmp
sahf
popf
add
xor
dec
or
test
testb
or
ljmp
dec
xchg
cmpsb
sub
mov
lock
inc
ss
mov
push
pop
pushf
inc
add
into
adc
fwait
push
dec
mov
and
movsl
mull
cmp
adc
mov
in
jecxz
popa
adc
push
jp
xchg
dec
pop
ret
hlt
pop
fisubrs
cld
bound
faddp
inc
push
aaa
sub
mov
mov
pusha
lret
nop
mull
and
xor
add
pop
mov
dec
rcll
or
imul
out
fisttpll
and
js
inc
cli
add
cli
sub
lds
inc
adc
into
ja
pop
mov
shrb
push
cli
mov
xlat
and
sub
test
sbb
cmpl
xchg
jl,pt
and
or
std
and
out
leave
mov
loop
jno
xor
mov
and
xorps
and
jmp
ficoml
sbb
addr16
jp
xchg
inc
aas
jmp
push
in
adc
loop
cmpsb
insl
push
jns
shlb
test
lcall
inc
or
ss
pmulhuw
or
roll
iret
movsb
ret
push
outsb
shrl
ljmp
loope
and
jp
rcl
in
rclb
inc
lods
leave
sub
out
xchg
pop
jae
push
jne
mov
divl
inc
testb
xchg
sbb
or
stc
mov
daa
push
enter
sbb
cmpsb
push
mov
test
jne
mov
sub
leave
mov
test
inc
pop
dec
out
ds
and
jb
sub
push
sbb
xor
icebp
sub
adc
xchg
lcall
lret
rorl
scas
cmpsl
xchg
sub
outsb
rolb
into
jmp
adc
daa
inc
lret
mov
lds
daa
test
add
add
or
pop
or
je
arpl
dec
mov
insl
shrb
ljmp
or
and
fwait
mov
mov
adc
sub
into
shll
and
outsb
add
gs
jae
ljmp
or
push
aaa
lret
lahf
or
sbb
jg
out
adcl
push
ret
aas
push
movsb
popf
dec
inc
pop
xlat
cli
aad
fisubrl
sahf
mov
mov
jbe
cmpsl
jl
sbb
loop
mov
pop
je
lock
adc
stc
inc
incl
or
dec
lea
dec
lret
mov
mulb
add
sbb
divb
xor
leave
pop
in
push
pop
cltd
shlb
addr16
adc
sti
andb
and
out
repz
loope
xorl
cmp
dec
arpl
mov
mov
and
addr16
bound
jo
push
movzbl
sub
out
stos
out
dec
mov
in
xor
addr16
jecxz
xor
dec
xchg
cmp
loopne
repnz
pop
xor
outsb
xchg
xchg
sub
outsl
dec
out
orl
lret
scas
jbe
push
call
das
push
cmpsb
mov
sbb
mov
pushf
xchg
adc
in
test
int3
stos
fimuls
xchg
ljmp
into
xchg
nopl
pop
ds
xchg
jle
push
mov
mov
push
fsts
popa
push
xchg
out
mov
adc
sahf
std
fstpt
in
rcrb
ret
or
ret
aam
pusha
dec
pop
jmp
xchg
shll
pop
out
xor
shl
lret
into
inc
divb
mov
dec
mov
inc
je
push
mov
add
jae
jl
test
adc
loopne
cmp
sub
popf
pop
rcr
imul
add
wbinvd
inc
jl
test
add
pop
movsl
cmp
and
pop
mov
scas
dec
xor
je
lahf
test
fmuls
mov
fistpl
lret
adc
imul
fstp
sbb
ljmp
xchg
stos
and
lret
pop
lock
jbe
xchg
or
lea
cs
iret
pop
xor
insl
push
or
sbb
cli
jo
add
cmp
or
test
jne
scas
leave
mov
loop
xchg
sbb
jle
fistpl
lock
pop
in
rclb
push
cmp
inc
fstl
outsl
adc
adc
iret
les
icebp
cmp
mov
pushl
outsl
lods
xor
ja
mov
push
rcll
addr16
fdivl
push
jg
push
aaa
andl
jbe
dec
jo
repnz
push
popf
fs
push
repz
js
call
lret
push
mov
test
ja
test
enter
repnz
movsl
and
push
and
sub
jg
jle
mov
js
add
push
ljmp
xchg
and
mov
insl
push
mov
outsb
fldcw
mov
or
sub
or
ficoml
pusha
ficoms
mov
faddl
fdivr
pop
or
or
push
and
xchg
push
adc
and
loop
test
and
jmp
push
aas
movsl
fdivl
mov
sti
movsb
arpl
jp
repnz
inc
jl
pop
inc
pop
in
jl
dec
xchg
repz
shrl
maxps
std
sub
lcall
aam
add
loope
stos
xor
xchg
push
out
insl
fadds
or
jecxz
jae
inc
fnstenv
orl
xor
loop
jo
mov
adc
lock
jp
setne
and
inc
xor
sbb
sti
mov
stos
repnz
sub
xchg
xchg
shll
pushf
stc
mov
gs
test
lret
mov
mov
jno
adc
into
xchg
push
outsl
cmpsb
lahf
ret
mov
push
lds
dec
stc
lds
clc
lods
ja
jge
xor
xor
lret
popa
inc
sub
xchg
lret
test
fidivrs
imul
push
int
fidivl
pop
fidivl
ret
sub
mov
loopne,pt
mov
add
lahf
test
mov
xor
jno
bound
pop
dec
out
sti
push
adc
dec
pop
add
sbb
popl
mov
jge
data16
lret
dec
jmp
sub
fwait
mov
loopne
clc
aas
mov
dec
mov
in
hlt
je
xchg
jl
or
loope
xor
mov
lock
sti
cmpsl
es
add
lods
cmp
std
xor
mov
icebp
xchg
sub
cmp
jp
ret
pop
add
push
les
lds
adc
cmp
lds
fs
aaa
cltd
xchg
dec
cmp
jle
jge
test
xor
or
or
fsub
add
pop
mov
lods
jae
xor
or
sub
nop
rcl
pop
jns
popf
jecxz
xor
ds
mov
dec
add
aaa
test
insl
sub
pop
lods
push
ds
xchg
pop
jecxz
idivl
out
adc
xchg
popf
in
outsb
xor
or
mov
stc
loope
mov
and
push
xchg
imul
xor
imul
jns
pop
adc
int3
push
add
xor
imul
das
pop
sbb
sub
addr16
cmp
ret
test
adc
mov
rcrb
shll
jle
cmp
xchg
and
popl
adc
movsb
or
into
pop
int
repz
jb
clc
add
inc
mov
jae
jle
pop
scas
mov
sub
cli
rcrb
or
pop
iret
lret
adc
arpl
test
xchg
add
mov
gs
pop
in
fs
or
sub
out
outsb
movsb
pop
insb
popf
pop
inc
insb
sub
mov
dec
dec
testb
pop
dec
inc
mov
push
jne
sbb
scas
aad
test
jns
push
pop
mov
xor
cmpsb
and
mov
jne
cmpsb
insb
lods
cli
fadd
mov
das
pop
repnz
sarl
inc
cmp
lds
ret
add
add
dec
mov
xchg
leave
or
out
pushf
shl
ljmp
mov
inc
xchg
insb
outsb
iret
pop
pop
and
and
add
and
and
popa
nop
lds
iret
xor
sti
cmc
pop
shr
adc
mov
sub
xchg
sarl
loop
pop
dec
sbb
lahf
addr16
adc
mov
pusha
sub
ret
lret
fnstsw
sub
mov
dec
lahf
notl
aas
jb
clc
fcomip
xor
cli
pop
popf
sbb
sahf
into
in
je
in
xchg
mov
ljmp
pushf
add
gs
sub
pop
push
adc
sub
jnp
mov
push
mov
popa
jnp
jecxz
sarb
iret
inc
ss
adc
push
lods
and
jge,pt
xchg
shll
pusha
push
cmc
lret
mov
js
fcmovbe
and
popf
outsl
pop
sbb
shll
xchg
icebp
and
or
add
lret
lock
std
lock
cmp
movsb
inc
std
mov
aaa
jl
pop
test
sahf
or
lock
je
call
mov
jne
inc
lcall
test
xchg
ss
loope
push
bnd
aas
out
movb
es
arpl
je
mov
push
icebp
sub
xlat
jns
movsb
dec
xchg
out
out
push
hlt
pop
push
rcl
push
popf
in
jo
adcl
sub
scas
cs
sub
xchg
cmpsb
lods
or
shll
xor
xchg
xor
cmp
jle
jge
shll
mov
and
add
dec
pop
cmc
inc
int3
ror
cmpsb
mov
popa
loope
pop
fldcw
cmp
rcrb
lcall
jl
repz
in
jno
xor
or
mov
adc
push
inc
leave
std
xor
ret
int
and
out
jne
movsb
loopne
ss
lods
aaa
movsb
xor
mov
rcll
aad
cmp
mov
or
subl
lret
sarl
int
sahf
or
shll
jg
aas
sarl
jp
push
stos
js
sub
add
jo
xchg
add
cmp
shrl
jmp
in
push
jbe
add
and
mov
push
dec
outsb
mov
sub
out
fidivrl
jle
push
dec
enter
inc
cwtl
sbbl
xchg
out
jle
gs
inc
push
xor
mov
mov
sbb
aas
cmp
int
sahf
insl
pop
pop
xchg
pop
arpl
sub
add
test
repnz
popf
xchg
fcoml
cltd
aam
aam
or
and
xchg
and
push
cmp
mov
ss
mov
or
rclb
orb
in
inc
fs
dec
lods
neg
xchg
pop
jp
xorb
mov
pop
lret
and
mov
in
cs
loopne
lret
lds
inc
ret
add
adc
xor
cmovns
add
jmp
push
cmc
scas
mov
cmpsl
mov
imulb
orl
stos
sbb
dec
or
das
add
push
testb
adc
or
cmp
mov
xor
imul
adc
adc
jmp
mov
sub
movsl
sub
repnz
sub
shlb
mov
int3
xchg
dec
lods
test
loopne
pop
cwtl
add
dec
mov
push
inc
pop
nop
push
les
ret
sub
jl
push
add
mov
inc
pop
jp
jle,pn
sub
lcall
mov
xor
jb
xor
push
stc
adc
ret
stos
push
hlt
dec
adc
insl
dec
ja
adc
loope
icebp
cmp
aad
xchg
inc
sub
cli
out
les
cmpsb
add
fs
push
lret
sub
mov
mov
pusha
adc
cld
mov
fisttps
sbb
rcr
dec
fwait
mov
ja
sbb
push
int3
and
je
mov
imul
xchg
xor
mov
jge
and
ficoml
push
in
mov
jmp
test
arpl
ljmp
pop
pop
cmpsb
pop
dec
in
mov
dec
and
cwtl
mov
xor
add
inc
dec
mov
in
ret
clc
inc
out
lock
rcl
add
and
mov
adc
xor
mov
cmc
mov
std
arpl
pushf
es
dec
cltd
push
mov
dec
push
cmp
shrb
sbb
aam
adc
or
sbb
xchg
xchg
inc
stc
inc
and
jmp
push
ja
jge
push
imull
adc
in
fwait
dec
lods
test
lret
sub
push
mov
lahf
mov
push
dec
fidivrs
insb
mov
loop
inc
push
push
adc
frstor
arpl
loopne
cli
mov
cmpsb
push
cwtl
lret
call
fisubs
stc
mov
jb
in
adc
pop
pop
pop
mov
adc
aam
mov
pop
push
outsb
popf
cwtl
repnz
movsl
insb
mov
out
gs
xchg
jo
filds
jmp
fcoml
cld
jne
lods
fsub
imull
mov
jo
xor
pop
lret
mov
mov
push
mov
bound
xchg
lock
inc
in
lret
subl
lea
mov
orl
or
int3
cltd
popa
mov
sbb
repz
gs
loope
in
mov
push
inc
pop
xchg
fyl2xp1
aas
xchg
mov
pop
mov
fisttpl
jecxz
inc
lret
fstpt
lods
jb
scas
in
in
shll
or
int
xor
inc
jo
sbb
mov
push
mov
dec
lret
mov
mov
fs
jmp
lahf
loopne
into
imul
jno
shlb
ss
je
sub
pcmpeqb
xchg
daa
adc
pusha
dec
fstpt
jmp
imul
lret
scas
movsb
mov
xchg
cmp
jae
out
ds
orl
add
xchg
repz
or
and
jl
aam
pop
test
adc
add
fbstp
sub
faddl
rcrb
nop
push
hlt
dec
orb
push
sbb
insb
test
adc
jge
lock
in
jns
cmc
addr16
dec
cli
inc
jge,pt
cld
sbb
mov
data16
aad
mov
test
cmpsb
push
fwait
leave
xchg
lcall
test
dec
and
faddl
mov
outsl
fwait
sbb
cmp
add
iret
pop
popl
lds
out
mov
pop
shlb
cld
iret
adc
icebp
lock
insb
mov
push
xchg
and
cmp
push
fadds
enter
std
and
inc
scas
push
xor
inc
cmc
stc
cwtl
outsl
dec
fcmovne
push
iret
rorl
sti
dec
sub
mov
data16
sbb
jp
call
dec
adc
jno
dec
mov
fists
pop
insl
mov
mov
mov
dec
enter
add
or
pop
push
imulb
sub
mov
cmp
sub
loope
xor
cmp
xchg
mov
test
mov
or
into
mov
mov
add
aas
cmp
mov
add
xchg
jl
sub
lret
leave
inc
jle
and
clc
or
inc
or
inc
adc
add
shrb
xor
push
subb
or
push
dec
dec
mov
call
sub
into
fdivrs
push
push
or
cmp
in
push
and
repz
xlat
mov
test
adc
add
adc
cmc
test
insb
mov
inc
or
xchg
push
jbe
xor
in
and
fcomps
mov
push
dec
mov
cwtl
jb
int3
mov
stc
dec
xor
lret
mov
inc
adc
mov
repz
xor
mov
or
cltd
sub
test
ficoms
out
cmp
jnp
fidivl
lahf
je
xor
call
daa
leave
test
pop
sbb
lods
jae
lds
sbb
adc
in
jno
push
das
rcrb
cmpsb
or
lods
dec
cmp
push
out
cmp
dec
push
mov
int3
jae
movsb
sbb
push
adcl
incb
inc
dec
imul
mov
nop
bound
xlat
xor
std
testl
in
add
cmp
addr16
and
popf
adc
cmp
gs
sub
mov
jae
cmp
jmp
bound
push
push
pusha
loopne
push
mov
repz
jmp
and
cli
add
and
cmp
dec
fildll
fsubl
adc
mov
bound
pop
outsl
sub
clc
lock
jp
mov
int
mov
xchg
lods
je
push
cld
xorl
pop
scas
jg
iret
shlb
ljmp
imul
dec
dec
test
lahf
jl
cmpb
bound
push
or
jg
or
cmpsb
sbb
add
sub
jne
and
jp
mov
mov
outsl
sbb
push
fstps
jae
sub
scas
mov
pop
pushf
ror
push
jno
sub
aas
cmc
xor
imul
cld
or
outsl
push
push
call
imull
cmpsl
add
nop
mov
inc
test
cmp
cmp
fwait
lahf
or
ret
mov
pop
push
jp
fs
mov
xor
mov
movsb
push
lret
pop
aas
lcall
in
stos
decl
pop
notb
push
daa
sbb
sbb
js
cmp
mov
les
push
inc
sub
add
lea
sbb
xchg
leave
aaa
push
pop
and
call
inc
inc
int
cmp
cltd
fnstenv
stos
outsb
sbb
jno
mov
imul
mov
mov
inc
cmpsb
scas
push
arpl
arpl
jnp
dec
dec
iret
aad
lods
adc
sbb
lret
or
aam
fidivrl
addr16
fnsave
fsubrs
or
mov
jnp
out
stos
mov
add
gs
nop
gs
data16
jecxz
int
fldenv
stos
out
lret
shl
jne
sti
outsb
stos
scas
cwtl
cmc
push
call
jbe
push
jbe
inc
pop
mov
or
aam
outsb
inc
adc
jl
xor
lock
lret
pop
out
adc
loopne
push
and
dec
jnp
mov
enter
inc
out
addb
fwait
cmpsb
out
dec
push
rclb
adc
inc
sub
ret
jnp
lock
out
or
fdivr
xchg
fwait
dec
jns
push
inc
fisubs
sub
jns
cmp
cmp
jne
test
stos
cmp
scas
ret
and
lea
xchg
xor
fwait
sti
jae
mov
sbb
pop
test
jbe
xchg
scas
ss
mov
mov
jl
mov
cmpsb
enter
call
lds
pop
adc
jg
or
jl
flds
adc
cmp
in
or
pushf
mov
jge
fcompl
je
cs
fs
dec
adc
jle
nop
sub
sbb
jb
pop
std
xchg
stos
andb
imul
sub
rcrb
sbb
rorl
mov
sbb
into
mov
in
test
rcl
out
sub
mov
add
daa
sahf
push
subl
and
and
jle
popf
inc
xchg
cwtl
inc
test
lods
xor
shrb
add
cmp
sbb
sub
pop
mov
mov
mov
jnp
xchg
outsb
iret
mov
dec
mov
or
shll
imul
inc
lret
mov
enter
cmp
add
subl
xor
out
call
add
jb
aaa
dec
sub
clc
in
loopne
pop
insb
mov
fs
mov
call
jnp
pop
int
adcl
xor
mov
mov
shrl
fimull
add
lret
xchg
shlb
inc
sahf
xor
aaa
jle
decb
das
call
mov
and
fidivrs
pop
or
add
mov
call
hlt
mov
pushf
add
aaa
or
sub
jecxz
daa
xor
adc
popa
or
sti
dec
mov
and
jg
pushf
mov
jo
xchg
test
push
dec
negb
call
into
sbb
ljmp
es
js
icebp
imul
mov
loopne
dec
imul
leave
pop
js
aas
scas
cmp
insl
lea
xchg
lcall
popa
add
sbb
mov
outsb
into
dec
in
iret
mov
and
mov
sbb
mov
cli
lea
sub
and
cmp
adc
adc
xchg
sub
andb
stos
inc
addr16
and
mov
test
mov
jnp
dec
dec
setl
jnp
into
sub
sbbl
pop
lds
sbb
cs
insl
stos
push
rorb
push
test
adc
ja
inc
jp
ret
sahf
sahf
imul
inc
imul
mov
xchg
clc
inc
mov
fs
or
dec
dec
mov
pop
dec
shrl
std
jno
pop
cli
cmp
mov
xchg
jmp
dec
ds
lods
pop
rorb
mov
pop
pop
rolb
push
push
pop
jns
dec
xchg
add
bound
fwait
push
sbb
push
push
cmp
or
dec
push
pop
std
movb
fs
mov
shll
cmp
aad
mov
and
and
ljmp
inc
aaa
mov
fstl
jbe
cmpsl
or
lds
dec
push
pop
lea
aam
popf
je
adc
fcmovne
fstpt
cltd
sub
xchg
jle
dec
sub
sub
mov
enter
rorb
sahf
cmp
mov
pop
mov
loop
out
sub
jmp
jno
pop
cwtl
cmovns
lret
fld
scas
xchg
pop
add
mov
mov
or
data16
hlt
pop
xor
outsb
mov
cli
sub
int
xchg
dec
mov
sbb
pop
popf
jne
cmpsb
mov
fs
dec
nop
cmp
and
repnz
mov
adc
out
out
push
mov
mov
cmp
inc
jecxz
sbb
rorl
iret
fs
popf
mov
cs
pop
jl,pn
imul
je
insb
mov
js
xor
icebp
negl
and
xorl
jp
lret
mov
fcomip
inc
sub
sbb
inc
aam
mov
scas
cmp
and
add
outsb
into
int3
jns
mov
dec
lret
dec
iret
push
mov
xchg
cmc
inc
imul
in
lods
mov
out
mov
js
mov
clc
mov
inc
popf
jae
outsl
jle
pop
mov
jno
js
mov
mov
sbb
into
mov
jecxz
jae
pop
scas
sub
ja
repz
scas
aam
dec
outsb
dec
fists
add
addr16
push
xchg
test
fwait
cmp
rcll
out
frstor
add
loopne
dec
cwtl
mov
inc
ret
neg
pushf
push
push
hlt
movsb
test
adc
pop
pop
push
insb
stos
out
loopne
das
xchg
int3
gs
call
adc
lret
fimull
push
insb
jbe
cmpl
test
and
push
jb
xlat
dec
std
out
sub
jge
inc
jne
and
ja
jae
pusha
push
insl
inc
inc
ffree
xchg
sbb
popa
fisttpll
xchg
xchg
fwait
xchg
int
jbe
push
jnp
pop
mov
inc
sbb
mov
stc
jl
ret
mov
lods
adc
cmp
dec
mov
mov
ss
mov
pop
rcr
jns
ret
mov
mov
dec
mov
xor
mov
cmp
mov
pop
fbstp
cmp
fcmovne
fwait
jae
dec
jmp
and
push
movsb
sbb
loop
push
add
andl
xor
and
je
cmpsl
mov
mov
stc
imul
adc
inc
inc
sbb
and
in
popf
enter
or
or
pop
push
sub
mov
jb
ljmp
sti
cmp
pop
dec
push
outsl
xchg
imul
or
mov
sahf
lods
pop
aad
xchg
dec
xchg
rcr
or
cmpsb
movsl
cli
and
call
add
pop
pusha
sbb
cmpsl
inc
add
loopne
daa
movb
fisubl
sahf
xor
js
mov
pop
pushl
push
add
lret
sti
xor
subl
push
rcrl
das
xlat
sbb
push
leave
or
add
push
cmpsl
mov
hlt
stos
xor
lods
icebp
sub
xor
jnp
mov
push
ret
or
popa
mov
xor
mov
ja
repnz
dec
pop
mov
mov
cmp
shrl
ss
xchg
jne
fbld
jmp
sub
mov
xsavec
stos
adc
lds
std
and
dec
xor
adc
cmp
ret
fldcw
inc
jp
inc
inc
fdivl
add
xchg
negl
sbb
adc
push
jl
push
dec
mov
cmpsl
cmpsl
mov
lock
mov
sbb
add
psubb
push
stc
mov
mov
pop
leave
mov
jbe
dec
lds
jp
mov
and
arpl
movsl
sbb
adc
xlat
mov
xchg
insl
pop
pop
jle
out
aam
dec
dec
je
mov
nop
jle
adcb
sbb
pop
icebp
or
push
add
adc
outsb
leave
jo
or
int
inc
and
jbe
fiadds
mov
dec
aaa
adc
or
mov
jg
cmp
test
mov
hlt
xor
lods
lahf
in
jae
repz
or
cli
mov
cmpsb
ret
addr16
push
je
sub
daa
fwait
xor
les
pop
fimull
std
daa
sub
fistl
cmpsb
stos
jg
mov
adc
stos
ss
or
lods
icebp
ds
cli
jle
into
nop
adc
pop
shlb
jmp
ss
add
clc
xchg
dec
pop
pop
loopne
in
sub
in
out
push
or
insb
pop
icebp
inc
mov
dec
or
icebp
mov
lds
insl
jbe
xor
xor
out
mov
dec
cld
jmp
jnp
xchg
mov
xor
mov
test
sub
inc
ja
int
jne
in
sbb
pop
inc
mov
fidivs
push
in
adc
jb
fstl
push
sub
xlat
icebp
or
mov
cmp
fisttpl
dec
cld
mov
dec
mov
mov
add
clc
push
mov
repz
in
xor
in
xor
pop
idivb
pop
xchg
loopne
in
inc
stos
aas
pop
mov
cmpl
mov
arpl
insl
jge
mov
xchg
push
and
lock
imul
sub
xor
inc
mov
neg
js
cmp
ds
rorl
adcl
mov
shrb
sbbb
pop
or
push
sti
xor
xchg
fdivl
test
mov
push
or
and
mov
adc
or
xlat
fdivp
stc
xor
mov
xlat
add
push
sbb
sbb
xchg
and
aaa
xchg
add
sub
push
jmp
in
mov
pop
cmp
imul
push
aaa
outsl
ret
xor
dec
xchg
test
xor
cmpsl
mov
xor
add
push
sub
enter
out
jl
jl
ds
aas
mov
jecxz
push
jno
adc
lods
aaa
dec
clc
inc
outsl
or
sub
aas
lea
mov
pop
mov
test
dec
cli
fnstenv
scas
xor
cmp
sbb
ret
jb,pt
mov
xor
adc
mov
loop
scas
jg
inc
or
stc
sbb
lock
popa
fbld
jle
xor
mov
repz
je
pop
xor
fildll
ret
cmpsb
repnz
xchg
sub
adc
xchg
addb
imul
shrb
cmp
dec
xchg
daa
and
repnz
loop
pushf
in
fnstenv
shl
mov
nop
hlt
mov
in
xor
imul
mov
push
xchg
adc
push
sub
sub
cmc
popf
insl
mov
cmp
pop
pushf
ja
stos
pop
cmp
xor
cltd
in
mov
popf
outsb
add
dec
jle
cmp
aas
imul
lret
imul
or
aam
cwtl
push
and
ss
outsb
mov
add
out
in
pop
jo
mov
or
dec
fcmove
or
test
in
xchg
cmp
and
leave
test
dec
and
xor
dec
jno
test
mov
int
push
outsl
test
add
scas
mov
or
pushf
push
loopne
sti
add
loope
outsb
aaa
not
cld
lea
imul
add
insb
movsb
pop
lcall
stos
lahf
fidivrl
test
cmp
push
and
xlat
sub
int
and
mov
clc
add
mov
cmc
stos
inc
sbb
jb
xchg
cltd
gs
xchg
fsubp
sub
repnz
jle
sub
xchg
xor
lods
int3
push
mov
mov
pushf
pop
cmovb
stos
cmpsl
testl
xor
xchg
ljmp
call
and
lret
std
in
mov
jbe
adc
fnstcw
stos
ret
jp
push
fistpll
pop
inc
outsl
or
test
jge
stc
daa
mov
fs
fdiv
ja
loopne
jbe
mov
out
jns
inc
inc
fistps
int
pop
lea
into
idiv
jnp
nop
aas
sarb
or
iret
imul
push
clc
xchg
repz
popa
inc
jo
pop
movsl
sbb
addr16
xor
fistps
push
filds
xlat
mulb
sub
jo
cli
jle
push
jge
jp
fwait
inc
out
jge
mov
mov
test
cmpsl
dec
push
sbb
and
gs
jae
mov
push
mov
cwtl
dec
sub
mov
pop
leave
ret
lods
cmp
mov
ja
mov
push
cmp
sbb
xchg
mov
inc
test
mov
repz
mov
adc
rcl
add
dec
lods
pop
arpl
dec
mov
loope
test
mov
add
lahf
dec
dec
push
js,pt
mov
jmp
mov
sbb
in
test
sub
lahf
test
inc
cmp
cld
jp
in
push
ret
out
add
cmpsl
or
into
push
je
jle
pop
adc
xchg
inc
shlb
add
push
jbe
lcall
adc
cmp
je
cmp
dec
js
jbe
add
shl
sub
inc
sarl
add
clc
mov
push
inc
pop
xchg
mov
inc
sar
cli
xlat
in
xchg
sbb
jmp
push
xchg
xlat
daa
in
sbb
pop
test
lods
pop
xchg
jl
xchg
into
dec
repnz
mov
jo
fwait
mov
add
les
jg
lods
fstpl
imul
sbb
int
push
or
mov
divl
jg
insl
lret
rcl
in
xor
imul
xorb
pop
addr16
add
cli
xchg
xchg
mov
pusha
int3
psrad
je
out
jb
int3
ret
cmpsl
xchg
imul
cmpsb
cltd
xor
push
or
lahf
in
cmp
add
popa
notb
movsl
ret
push
cmp
inc
js
push
ds
push
cmpsb
push
xchg
pop
fisttps
jne
mov
adc
hlt
and
sbb
aad
dec
mov
mov
and
lea
jns
out
jbe
mov
stos
add
xchg
xchg
sbb
arpl
add
fs
out
mov
and
add
add
push
into
add
cmp
negb
cmpb
stos
adc
xchg
add
pop
xor
out
dec
test
and
imul
je
sub
push
cmp
pushf
jmp
rcll
push
fmul
mov
pop
cmp
iret
push
cmp
inc
mov
push
shl
aad
pop
outsb
adc
andl
testl
inc
dec
add
pop
sub
sub
cli
lahf
push
lock
scas
enter
push
out
mov
xchg
mov
mov
stos
out
xor
inc
xchg
mov
inc
lret
popf
adc
leave
cwtl
adc
rcll
lods
sub
mov
add
cmpsl
cmp
sbb
mov
std
clc
and
sbb
mov
iret
mov
xor
stos
and
jmp
inc
mov
lahf
sub
mov
jo
outsl
in
or
xchg
sbb
imul
or
xor
dec
shrb
subl
mov
in
int
dec
and
imul
orb
and
rolb
sub
jecxz
and
test
and
or
add
addr16
mov
jo
test
loopne
in
add
popa
pop
dec
pop
xchg
push
mov
jnp
std
cwtl
fnstenv
mov
dec
pusha
mov
add
jae
jb
mov
pop
movsb
xchg
adc
mov
jmp
adc
lcall
push
popf
dec
push
movsb
std
jge
aam
pop
inc
jne
sub
inc
int3
jge
scas
adc
or
add
test
repz
fcoms
jg
adc
mov
repz
into
cmpsl
outsb
sar
push
filds
inc
sbb
lods
xchg
push
xchg
push
dec
push
jne
aad
cmc
add
mov
test
test
jp
sar
pushf
je
ficompl
cmp
js
call
cltd
cmpl
sbb
cmp
mov
imul
dec
or
pop
lret
jl
add
das
loopne
pop
mov
cmpsb
push
dec
lcall
pop
ds
inc
mov
xchg
stc
mov
lret
pusha
cmpsl
dec
mov
pop
sbb
arpl
push
mov
out
mov
in
hlt
push
inc
std
out
ljmp
fwait
mov
pop
test
xor
clts
adc
cld
popa
pop
mov
cmovp
lea
lods
mov
pop
bound
mov
ljmp
dec
clc
out
call
dec
rclb
mov
test
adc
icebp
ret
sbb
popa
mov
outsl
and
lock
cmpsb
mov
add
into
push
jg
mov
ficoml
inc
xor
push
es
push
mov
pop
sub
adc
xchg
cmp
lods
pop
out
dec
jge
aad
mov
sub
and
bound
movsb
aaa
sub
push
mov
jbe
adc
pop
outsb
mov
xchg
rorb
adc
cwtl
data16
xchg
movsl
sbb
push
aas
iret
push
ss
and
addr16
lea
ret
pop
sub
jno
fistps
cmpsb
jg
addl
test
fdivl
sbb
data16
ljmp
push
push
sahf
sub
cmpb
inc
jne
mov
lods
jae
add
sarb
jp
cld
pop
pop
cmpsl
jp
xlat
mov
lret
leave
cmp
jno
imul
cli
repnz
aaa
daa
xlat
out
stos
sub
scas
jp
xchg
imul
out
testl
mov
call
sub
add
les
dec
lods
push
inc
pop
add
sbb
aas
push
fdivp
sub
xchg
adc
push
pop
fcmovnb
jg
sbb
or
pop
xor
test
insb
loope
out
fbstp
jno
and
in
jge
add
xchg
int3
mov
dec
nop
stos
insb
push
inc
mov
dec
fbld
fsub
add
repnz
pop
out
pop
mov
lds
mov
mov
mov
in
dec
dec
xchg
ret
push
mov
test
leave
loopne
add
dec
popf
mov
mov
push
xchg
cld
or
shrb
mov
push
dec
add
popa
mov
mov
pop
gs
mov
inc
xlat
movsl
lock
ds
mov
rorl
inc
gs
push
idivl
pop
mov
lods
dec
cmp
adcl
xor
xchg
fucom
mov
stos
insb
xor
mov
aam
fucom
imul
popa
pop
outsl
loope
test
dec
lret
leave
inc
push
add
data16
jle
push
loopne
sub
insl
scas
mov
ret
icebp
ljmp
push
mov
mov
cmp
inc
insl
inc
add
sbb
push
fwait
stos
inc
mov
inc
repz
adc
ja
cmp
clc
inc
cld
mov
sub
sbbb
imul
sub
mov
les
out
clc
sti
push
and
sub
call
dec
push
push
jl
push
aad
sub
hlt
in
lods
mov
mov
outsl
mov
sbb
jp
ret
ljmp
cmovs
push
or
adc
push
pushf
mov
jae
push
loop
std
aas
adc
jge
ficoml
ljmp
dec
sti
insb
jb
insl
push
mov
loop
xor
inc
leave
push
mov
fwait
addr16
call
stc
flds
sti
inc
rorl
inc
loopne
ljmp
ds
out
inc
push
test
sub
scas
pushf
sbb
movsl
stc
mov
sub
ds
lret
jge
bswap
or
inc
aad
dec
pop
push
into
jg
or
dec
lds
repz
jmp
or
inc
test
mov
fmuls
pop
mov
cmpsb
jo
dec
sahf
or
das
jno
dec
fcompl
ja
xor
xor
and
loopne
mov
push
aad
sbb
addr16
out
or
mov
aaa
sbb
arpl
cli
lret
add
inc
lcall
mov
push
add
jns
mov
dec
fbld
cmpl
fwait
dec
sbb
push
mov
int3
jmp
push
xchg
movsl
movsb
jne
push
sbb
push
lods
pop
enter
cs
add
xor
aad
cltd
pop
sub
mov
sub
jne
and
push
cld
pop
fcmovu
sub
test
xor
sti
inc
pusha
daa
jb
mov
in
clc
dec
lods
inc
enter
mov
popa
mov
aas
testl
inc
mov
push
push
cmp
push
mov
push
xchg
adc
jle
pop
arpl
sub
inc
ja
dec
inc
mov
push
add
sahf
push
dec
or
mov
xchg
ljmp
ljmp
add
and
push
aas
or
pop
in
in
out
xchg
ficoms
ret
pop
add
push
add
mov
je
mov
lcall
lahf
mov
dec
jnp
ds
mov
daa
in
in
and
decb
sub
pop
frstor
mov
push
and
test
add
inc
dec
xorb
lcall
fwait
xchg
xchg
imul
inc
jg
pop
add
mov
and
jo
fdivl
stc
push
xchg
dec
imul
cld
fs
fstp
xchg
jbe
cmp
push
gs
aam
outsb
inc
or
sbb
test
sub
push
push
mov
fcmovb
jp
push
push
jne
lock
outsb
out
dec
mov
in
pop
mov
aas
mov
jo
ljmp
pop
push
test
icebp
mov
out
and
sti
mul
sub
inc
sub
ja
mov
ljmp
fistps
mov
pop
test
arpl
jb
jae
cmp
mov
sub
call
lret
std
rcll
addl
cltd
or
fdivl
rcll
iret
ljmp
insb
in
lds
pop
fcmovnb
mov
jecxz
xor
xchg
cmp
jnp
push
out
divps
rcrl
inc
mov
and
push
mov
scas
dec
dec
adc
pop
xor
sbb
sub
inc
pop
add
jp
jmp
sbb
dec
push
sbb
test
sbb
and
das
rolb
jecxz
mov
xor
call
mov
add
fldcw
ja
pop
jnp
xor
ret
loopne
xchg
mov
mov
push
inc
data16
cs
push
jbe
clc
mov
add
test
in
in
ja
sub
jo
dec
mov
dec
mov
std
pop
in
sub
sbb
sbbb
fidivl
loope
push
lret
clc
rcll
pop
add
imul
cmp
jg
cs
imul
fdivrp
lock
mov
aad
sbb
push
sbb
in
faddp
mov
cwtl
adc
btr
mov
push
lret
pop
and
sbb
hlt
mov
cmc
mov
add
shrb
fnstcw
sarb
iret
das
adcl
xchg
outsl
xchg
std
stos
cmp
or
xor
repnz
icebp
or
cmp
xchg
xchg
jp
sti
stos
mov
fstps
ss
pop
adc
out
mov
pusha
clc
icebp
dec
roll
fldenv
dec
inc
xchg
out
out
ljmp
pop
pusha
inc
outsb
leave
in
push
std
fldl
stos
jecxz
push
ja
xor
movsl
int
xchg
shll
sbb
movb
loopne
xchg
pop
addr16
sbb
mov
movsl
ficomps
pop
lret
nop
xchg
or
icebp
pop
sub
lds
cmpsl
add
out
lcall
push
inc
dec
aas
xor
mov
adc
mov
jne
lret
jg
fcoml
mov
fcoms
pushf
push
fbld
jae
jne
out
sub
fldt
push
cmp
clc
jnp
push
in
xor
cmp
sub
es
mov
inc
push
push
mov
fldenv
pop
add
jae
ja
sub
jmp
jmp
push
xor
popa
test
cmp
out
or
ss
cltd
scas
mov
sbb
cmpsl
jo
das
out
scas
sbb
out
lods
xlat
test
aaa
mov
popa
push
fists
xchg
xor
push
adcb
xor
pushf
es
pop
cmpsb
add
cmp
call
xchg
mov
out
xor
dec
cmpsl
mov
sub
ds
ret
repz
fmuls
inc
movsl
jmp
aam
lret
dec
divl
sub
sahf
pushf
push
addr16
shrl
xor
push
dec
cmpl
lds
sahf
pop
mov
push
pop
jmp
outsb
leave
cli
mov
jge
add
inc
xchg
sbb
rcrl
mov
stc
adc
adc
xchg
mov
cmp
mov
push
into
decb
jecxz
aam
es
jb
mov
or
sub
stc
out
jecxz
mov
inc
dec
insb
mov
add
pop
add
and
xchg
mov
add
cmc
jns
or
test
ds
sub
test
roll
xor
inc
in
inc
fsubr
mov
pop
inc
pusha
ss
cmp
jo
aam
mov
sub
push
sub
ret
mov
push
wbinvd
rcl
mov
fldenv
xchg
mov
pop
jne
jecxz
mov
cmp
loope
ds
and
ljmp
or
pop
jle
pop
outsb
cld
fstpl
adc
out
insb
mov
jmp
cmc
cs
lahf
or
mov
rcrl
and
fsts
icebp
iret
out
imul
iret
cmp
mov
daa
cmovg
clc
cmp
imul
fidivrl
dec
xchg
popf
mov
adc
out
add
daa
scas
cmp
push
pop
jbe
fadds
int3
add
jp
mov
and
std
xor
mov
dec
popa
aad
cmp
sbb
test
into
mov
xor
sub
dec
push
mov
mov
xchg
insb
sub
mov
movsb
enter
jns
sbb
stc
scas
jo
imul
xchg
fsubs
aaa
int
sub
sub
daa
out
push
ds
daa
and
and
xchg
mov
fbstp
sbb
and
push
xor
inc
inc
dec
mov
popa
outsl
mov
add
es
xchg
and
scas
out
push
clc
and
adc
aad
int
sbb
xchg
push
dec
pop
pop
imul
mov
movsl
das
pushl
lret
sbb
inc
pusha
mov
aam
push
sbb
mov
xor
out
inc
xor
iret
push
xchg
xor
stos
sub
or
and
jmp
xor
jp
cwtl
je
adc
int3
inc
or
fnstcw
push
pop
inc
sbb
jno
xlat
jnp
xor
scas
mov
push
mov
cmc
xlat
or
psubusb
outsl
jo
and
cmpsl
frstor
and
jl
popa
mov
jl
xor
bound
push
call
icebp
neg
movsl
gs
nop
insl
mov
aaa
jae
mov
daa
xchg
mov
push
xorb
push
sbb
inc
pop
pop
sbb
sbb
cmp
pusha
xor
icebp
cwtl
push
jne
das
sub
in
lahf
xor
mov
loopne
sahf
in
xor
notb
sub
mov
sbb
lret
enter
cmpsl
or
xlat
out
fsubl
xor
push
pop
ret
leave
sub
movsb
pop
jle
inc
hlt
push
lods
lds
push
push
push
pop
lds
or
sbb
push
lods
das
aaa
aad
fucompp
and
jge
pop
pop
xchg
clc
add
arpl
mov
pop
jns
clc
enter
add
test
sub
and
cmp
jbe
mov
mov
leave
or
sbb
frstor
ss
mov
push
lds
inc
sub
push
or
lret
mov
cwtl
outsl
push
aas
lods
in
pop
adc
jo
inc
mov
push
add
push
xchg
notb
popf
push
xchg
mov
sbb
pop
sahf
insb
xor
and
push
inc
lea
jmp
push
mov
add
xor
test
sbb
push
fnsave
jecxz
fldcw
jne
push
xchg
jmp
xchg
bound
pushf
sub
dec
scas
xchg
scas
lods
cli
in
jae
xlat
sub
adc
or
and
add
test
jno
sbb
cmc
into
cwtl
inc
jl
add
pop
scas
lds
cli
xchg
int
test
daa
cli
lcall
aam
xchg
outsb
fsub
mov
in
aam
rcrl
in
mov
jecxz
sbb
add
andb
jge
sub
jmp
adc
xor
sbbl
jbe
mov
mov
shlb
mov
aaa
lods
mov
mov
mov
xlat
cmpsb
int
pusha
aas
jp
sub
mov
mov
movl
out
push
mov
jmp
mov
loop
aaa
sarl
fidivl
sub
or
ret
pop
jo
cmp
std
movsl
push
and
movzbl
fcmovnbe
mov
rcrb
jecxz
add
mov
xlat
dec
push
in
mov
shll
xchg
jg
mov
idivb
pop
out
cs
js
xor
cltd
int3
lret
psllq
data16
dec
test
pusha
leave
leave
test
in
cli
int
fs
or
scas
dec
ljmp
clc
jne
scas
sbb
cs
adc
inc
jecxz
or
or
sub
and
sub
sbb
lcall
outsl
ds
imul
pop
adc
pop
nop
adc
inc
imul
dec
cmp
lcall
decb
add
jle
in
into
ficompl
cmp
shr
jo
inc
movsl
push
aas
iret
dec
ja
shl
push
fisttpl
dec
sahf
in
cmp
inc
inc
clc
mov
push
pusha
aaa
fdivl
sub
fucom
push
mov
call
pushf
mov
sub
arpl
in
adc
push
pop
push
mov
mov
aas
pop
repz
add
loopne
mov
xchg
mov
mov
dec
jno
pop
mov
mov
or
xchg
sbb
mov
mov
out
fists
xchg
mov
jmp
mov
mov
enter
imul
fisttpl
daa
and
rcll
jmp
out
mov
test
in
push
dec
jecxz
js
add
cwtl
jnp
push
cmp
cli
lea
cmpb
shrl
subb
inc
sbb
push
sbb
movsb
push
and
into
mov
adc
push
mov
sub
mov
ror
or
mov
repnz
add
mov
push
xchg
cmp
jecxz
inc
je
jecxz
add
mov
sub
dec
call
xchg
ret
shll
stos
inc
push
mov
xor
pop
insb
add
stc
out
mov
add
inc
rep
enter
into
push
mov
pop
clc
repz
xlat
test
call
sub
fwait
add
int3
cs
sbb
jp
int3
pop
mov
pop
shll
and
nop
xor
xchg
lea
mov
in
push
push
inc
and
cs
or
imul
jae
fisttps
enter
pop
jp
outsb
movsb
xor
loopne
into
fdivrs
and
aad
add
stos
xor
divl
jno
bound
and
fisubs
pop
jb
scas
sub
andb
fisttps
mov
jge
or
or
fldenv
mov
outsl
call
fs
cmc
push
test
dec
inc
dec
xor
repz
das
test
dec
icebp
imull
sub
mov
lods
pop
das
mov
pop
je
xchg
mov
es
fisttpl
rcll
mov
mov
and
xor
mov
push
out
ds
mov
xchg
hlt
stos
or
push
pop
mov
cmc
xchg
inc
test
cmp
shlb
mov
sub
imul
inc
xor
cmp
jb
cmp
decl
stos
lahf
mov
jae
aaa
stc
pusha
dec
fdivs
mov
jg
and
rolb
imul
sbb
pop
xor
fisttpll
scas
cpuid
add
insl
ret
sub
ret
pusha
sbb
rcr
xchg
les
jne
inc
adc
mov
dec
xor
popf
or
cmp
fwait
sbb
cmp
out
js
and
push
stc
mov
daa
add
jno
xchg
shll
out
aaa
dec
mov
inc
mov
outsb
je
mov
mov
dec
lcall
scas
jge
divl
sbb
pop
push
test
push
repz
jecxz
aad
sbb
test
add
es
pop
fsts
das
dec
jmp
push
adc
sbb
xchg
xchg
fcomi
cmp
shlb
aas
pushf
lret
pop
in
pmaxsw
addr16
lock
cmp
les
fadds
gs
or
jle
je
cmp
jmp
mov
movsb
sar
pop
or
lret
out
mov
test
push
add
push
or
aad
enter
sbb
lock
ss
xor
cmp
sbb
dec
inc
pop
dec
xor
mov
enter
loop
push
jl
xor
ss
mov
sub
add
and
xor
cmp
push
iret
or
fdivrp
mov
adc
mov
loopne
mov
mov
mov
aad
mov
push
movsl
add
lcall
ljmp
inc
pop
mov
das
inc
mov
mov
add
lcall
ds
rolb
out
xchg
sub
jg
movsb
xor
push
fcomip
add
cwtl
movl
mov
add
jo
mov
test
or
stos
das
cs
shrb
dec
ss
pop
sub
and
repz
movsb
mov
aaa
fscale
mov
nop
push
add
cmp
outsl
pop
xor
roll
pop
push
cmp
jecxz
fucomip
aam
jp
sahf
mov
push
out
mov
je,pt
add
bound
xchg
xor
lahf
data16
lahf
rorl
das
ljmp
xor
pop
pop
out
cltd
sahf
sbb
ret
repz
outsb
jae
and
adc
lock
sub
pop
push
pop
shrl
aam
std
imul
xor
mov
and
aas
or
idiv
hlt
sub
xor
xor
sbb
iret
xchg
push
cltd
mov
incl
testb
lds
inc
rcrl
cmp
aaa
rclb
and
int
jg
subb
test
aas
dec
sbb
out
pop
mov
jae
push
mov
sub
add
lods
std
xchg
in
inc
fcoml
push
lcall
or
push
cwtl
loopne,pn
inc
out
mov
xor
adc
fmull
or
icebp
repnz
pop
insb
rolb
xor
jns
xor
jecxz
in
cmp
push
mov
push
inc
insb
jecxz
aas
icebp
popa
mov
inc
adc
fwait
hlt
ret
fs
mov
repz
shrb
mov
std
inc
cld
xor
int
push
cmp
scas
xchg
imull
cmp
jge
adc
scas
jae
inc
cmp
and
aas
jle
lods
repnz
xchg
mov
pop
inc
jecxz
aaa
outsb
mov
adc
add
pop
cmp
in
adc
imul
xchg
in
out
bnd
mov
rcll
aas
xchg
outsb
and
loop
cmp
adc
and
mulb
or
call
mov
mov
mov
sub
into
shll
jle
test
mov
jno
ds
and
and
mov
mov
nop
mov
sub
push
inc
cmc
imul
out
or
rol
loopne
dec
mov
jmp
pop
dec
test
and
std
mov
mov
and
je
dec
dec
pop
sbb
enter
ss
pop
sbb
mov
jge
rcr
aad
lret
mov
lahf
fcoms
stc
lods
mov
pusha
and
mov
out
adc
cmp
inc
mov
fidivrl
jle
cld
daa
movsl
lods
call
jne
aaa
out
xchg
scas
push
in
filds
pop
jns
push
sub
sahf
loope
mov
pop
jge
call
lahf
aam
jo
adc
jb
aam
inc
loopne
out
and
sbb
cmc
push
cwtl
popf
pop
btl
lds
sbb
aas
sbb
pop
sub
testb
xchg
sub
push
push
lods
or
sarl
jl
inc
popa
inc
scas
or
pop
pushf
or
jo
lock
xchg
add
sbb
add
cltd
ja
outsl
or
xchg
xchg
xor
jb
push
dec
xchg
pop
xor
gs
std
dec
movsb
jne
mov
or
xchg
mov
loop
adcl
mov
or
or
mov
pop
jecxz
jecxz
icebp
or
lret
inc
in
test
mov
xor
adc
adc
xchg
filds
shll
and
dec
adc
daa
lret
cltd
test
push
xor
cli
xor
insl
jnp
inc
sbb
xchg
cli
xchg
mov
dec
bnd
js
loopne
fcomps
movsb
nop
push
out
inc
ret
fstps
cmp
mov
fstpl
and
das
pop
jp
pop
in
std
test
js
cmc
mov
sub
mov
addr16
pop
fisubrs
and
lcall
fistpll
fwait
add
pop
aam
adc
rcr
fisubl
xchg
jno
pushf
jo
mov
inc
call
dec
inc
shrb
inc
scas
les
jno
dec
aam
scas
mov
mov
das
test
lods
mov
loope
xlat
fisttpl
arpl
jnp
push
insb
jg
mov
xor
inc
xchg
rclb
pop
pop
sub
fisttps
addr16
push
or
mov
inc
pop
jmp
loope
rorl
jp
sub
push
mov
test
scas
fs
shrl
cmp
push
insb
leave
ret
dec
xchg
xlat
lds
sbb
out
cltd
or
rcl
cld
dec
fxtract
stos
std
xlat
jg
fiadds
stc
sbb
mov
sbb
loope
imull
mov
lea
cmpsl
inc
xlat
jmp
jle
jmp
out
test
insb
test
into
sbb
adc
pop
add
jmp
mov
mov
push
lock
ljmp
pushf
pop
lea
cld
mov
adc
dec
in
jmp
mov
and
shll
imul
enter
adc
jg
pusha
bound
sub
loope
mov
aad
or
cltd
rclb
sub
stc
xor
pop
and
jae
push
sbbb
sub
push
push
mov
adc
jp
jnp
adcl
addr16
insb
mov
jl
jo
sub
jb
lahf
add
or
push
lret
adc
dec
fwait
mov
add
lds
ds
push
popl
test
js
xlat
mov
lea
aad
cs
xchg
jecxz
adcb
std
push
test
add
mov
popf
cmp
arpl
test
fsubrs
mov
add
jo
arpl
sbb
and
popf
adc
ret
sahf
push
test
imul
movsl
dec
daa
ljmp
pop
cwtl
js
test
adc
push
hlt
aas
icebp
ficoml
sub
out
mov
mov
fistpl
xchg
lret
pushf
ljmp
jmp
pinsrw
popa
xor
lret
mov
lcall
mov
pop
adc
dec
loope
jl
rcrl
mov
pop
xor
xchg
fimuls
mov
dec
out
jp
dec
xchg
mul
sbb
leave
jmp
and
cmpsl
cmp
lock
test
pop
test
mov
popf
pop
fs
jb
xchg
pop
adc
decb
aad
jmp
fcoml
lea
pop
in
cltd
push
aad
push
sbb
mov
adc
jne
xchg
or
pop
js
outsb
add
les
xchg
fildl
pop
pop
in
call
or
imul
xchg
mov
push
rolb
les
aas
std
add
sbb
pop
in
or
hlt
popf
jecxz
adc
loop
mov
dec
push
lock
xchg
cltd
pop
pusha
xchg
mov
pop
xchg
pop
pop
lret
fcomps
ljmp
sysenter
jne
sub
aas
cmpsb
lods
cmpsb
mov
scas
lret
push
mov
push
fidivs
mov
in
sbb
and
fisubrs
jmp
jbe
js
xlat
xchg
or
cmp
out
inc
cmpsb
mov
arpl
lret
mov
mov
jg
push
test
sub
sub
sub
mov
sbb
lods
add
dec
jle
xlat
rcrb
test
call
mov
cmp
add
sbb
pop
jmp
mov
pop
imul
mov
stos
cmpl
cli
ljmp
cmp
stc
int
stos
or
jne
cli
jp
mov
leave
xchg
sub
mov
test
pop
ret
xchg
inc
pop
notl
hlt
push
jp
push
add
inc
es
xlat
inc
pop
out
sub
int
jnp
push
call
les
cmp
push
cld
mov
subl
es
pop
push
subb
mov
cld
xor
adc
mov
rclb
and
subl
pop
std
lret
pop
cltd
mov
inc
xchg
fcoms
push
dec
hlt
or
jbe
add
mov
jnp
and
jne
out
pushw
inc
inc
pop
iret
jmp
jae
sub
sbb
cld
xchg
lods
loop
notl
sbb
call
dec
pop
or
mov
sbb
clc
insb
mov
pop
mov
xor
outsb
push
adc
cwtl
mov
mov
js
roll
sahf
insb
mov
jmp
shlb
or
test
mov
xor
nop
inc
push
int
pop
subb
jle
dec
push
popa
clc
sub
in
xor
push
xor
inc
xor
inc
push
sbb
xor
inc
xchg
insl
mov
ljmp
xchg
jbe
xor
hlt
mov
sbb
cmp
pop
mov
inc
and
data16
lret
fldcw
sub
lods
inc
cmc
or
popa
fisubrs
jge
test
leave
mov
push
andl
add
sbb
lods
arpl
int3
push
in
dec
fidivl
notb
test
sub
ljmp
or
xor
dec
fadds
sub
js
aas
rolb
lods
fisttpll
mov
mov
sarb
mov
into
mov
xor
mov
xchg
pop
out
mov
xor
push
jecxz
fnsave
jb
mov
or
mov
push
mov
lret
leave
or
and
cltd
lods
add
xchg
sbb
cmp
xor
and
outsl
cmpsb
mov
mov
lock
fidivs
hlt
outsl
sbb
movl
call
inc
add
pop
add
pop
sbb
push
ss
xor
mov
mov
xor
outsb
pop
jg
ss
lret
cmpsl
out
lret
push
sub
inc
loop
lds
int3
mov
adc
repnz
rcl
out
xchg
cltd
loope
pop
scas
jmp
sbb
push
xchg
data16
sarl
jno
and
adc
push
jae
dec
jb
cmp
sbb
orb
mov
mov
scas
ja
mov
xchg
decl
pop
mov
stos
pop
es
cmp
inc
sbb
lahf
aad
dec
add
aam
pop
lret
incl
dec
test
xchg
jl
lods
arpl
out
push
mov
shlb
xor
dec
mov
mov
adc
xchg
sahf
cmc
pop
sub
sbb
xor
jbe
test
popa
jae
inc
dec
sub
ja
adc
lods
lret
js
push
int
cli
call
hlt
clc
hlt
cli
mov
jl
xor
outsb
xlat
rcrl
xor
cmp
sahf
mov
pop
gs
xchg
subl
ret
push
push
inc
shll
call
push
add
dec
arpl
pop
pop
in
or
mov
add
push
das
jb
push
cmp
test
xor
rorl
ret
mov
mov
or
and
jmp
cmpsl
pop
or
dec
loopw
pop
int3
xchg
cli
mov
addb
mov
dec
cwtl
push
xor
scas
cltd
mov
out
and
ja
cmpl
fwait
in
out
shlb
imul
stc
adc
int
loope
mov
and
sarb
pushf
bound
adc
lcall
dec
xchg
sbb
ds
inc
mov
mov
inc
rcl
mov
mov
mov
sbb
das
jne
push
loopne
dec
xchg
push
mov
mov
push
cs
es
jns
inc
or
sub
and
push
cmp
adc
outsl
cmp
divl
pop
stos
sarb
rol
insl
js
dec
pop
jns
dec
mov
scas
sub
shl
cmc
jae,pt
jecxz
jns
push
cmp
sbb
aam
cmp
jp
movsl
dec
ret
mov
iret
push
bnd
mov
lahf
fwait
xchg
inc
and
bound
sub
mov
xchg
sti
adc
jae
das
pop
xor
daa
cmpl
push
leave
jmp
pop
fidivl
data16
into
fnstsw
push
inc
int3
aas
xchg
mov
les
add
out
sub
or
inc
and
jmp
sub
push
push
loopne
cmp
imul
adc
add
sbb
mov
out
jp
daa
repnz
sahf
pop
xchg
mov
mov
dec
xor
call
in
inc
cmp
outsb
add
pop
jecxz
data16
pop
cmp
pop
fsub
xor
test
xchg
sub
xor
jge
inc
xorl
dec
jno
jle
or
pushl
lahf
or
rcl
sub
dec
sbbl
fwait
cmp
lds
inc
dec
mov
jo
lret
out
mov
imul
mov
adc
popf
sub
fs
add
xchg
imul
push
bound
lret
xchg
push
pop
les
and
mov
inc
mov
fwait
mov
fstpt
pop
test
inc
xor
or
adc
mov
jne
inc
shll
jne
dec
out
mov
pop
aas
mov
enter
xlat
cld
xor
lods
lahf
push
push
lret
push
dec
push
sbb
sahf
mov
pop
pusha
inc
dec
mov
pop
sbb
iret
repnz
pop
push
or
xchg
inc
aaa
repnz
pop
loopne
ret
dec
scas
dec
insb
xor
sub
add
inc
fstl
add
add
lret
test
ja
xor
outsl
int
stc
dec
xchg
mov
cmp
movb
adc
out
fadd
cmpl
test
arpl
adc
rcrb
lret
mov
xchg
es
dec
inc
ja
cld
aam
clc
mov
cmp
mov
adc
jge
loope
sbb
fsts
jge
icebp
jmp
in
repz
xchg
mov
in
inc
shl
jle
cs
push
mov
jns
xchg
or
push
jo
rclb
clc
mov
pop
xor
dec
adc
and
je
jl
lods
in
cli
roll
fwait
pop
stos
lods
dec
pop
xchg
push
mov
cmpsb
lret
push
xchg
cmpsl
mov
out
push
adc
pop
icebp
push
adc
cmp
and
int
pop
in
push
ret
mov
xor
xchg
jno
adc
jmp
popf
call
adc
jl
add
je
lret
lods
inc
cmpl
dec
jge
pop
addl
adc
jae
jbe
xchg
arpl
cs
sarl
aas
xor
fsubrl
lret
test
push
shrb
loope
leave
lcall
push
stos
lock
sbb
xlat
mov
in
xor
cmp
inc
mov
add
dec
jnp
dec
inc
shll
cwtl
lods
sbb
aad
aad
pushf
cwtl
inc
aam
incl
xorl
mov
dec
xchg
add
lods
xor
push
clc
out
mul
ja
mov
dec
mov
flds
mov
xchg
cmp
or
test
mov
adc
lods
mov
adc
lcall
int3
shl
inc
andl
and
fcom
pop
leave
cmp
adc
stc
jb
push
sbb
or
nop
out
add
lcall
mov
mov
fsubr
mov
mov
jg
outsb
arpl
xchg
cmp
jb
in
aad
dec
xlat
sub
xlat
cmp
test
mov
mov
inc
lahf
xorb
or
shr
addr16
insb
ljmp
roll
fdiv
mov
fmull
sub
in
mov
cs
xor
dec
mov
stos
inc
mov
out
aad
stc
cmp
adc
xor
jns
jb
sbb
jle
inc
insl
aaa
call
pushf
cmp
clc
movsb
mov
sbb
das
push
xor
jl
cmc
sub
popa
imul
push
xlat
mov
xchg
mov
sbb
or
jnp
push
pop
rol
push
pusha
lds
cmc
push
daa
or
pop
mov
mov
aad
adc
mov
sbb
imul
sub
pop
mov
jne,pt
roll
dec
xchg
pop
push
xchg
mov
iret
cmp
add
mov
jg
xlat
or
mov
push
ss
fldcw
cmpsl
aaa
shll
push
sarl
cli
or
lods
iret
cmp
lcall
lds
idivl
jp
shrb
ljmp
mov
pop
push
lret
xor
lret
or
sub
in
fadd
mov
idivl
mov
mov
mov
clc
mov
xor
xchg
mov
mov
sub
adc
adcb
test
mov
pop
inc
out
and
xchg
mov
fldcw
pop
js
jg
pusha
add
dec
ja
xchg
or
xchg
and
or
jno
mov
jb
shll
jnp
mov
ret
shlb
or
inc
fs
in
repnz
mov
negb
jecxz
sbb
and
das
cld
xchg
or
or
aam
jmp
mov
fistpll
mov
sbb
mov
xchg
add
sub
out
push
xor
dec
xchg
or
repz
sub
pop
cmp
mov
inc
mov
lcall
jmp
mov
popf
movsb
stos
insb
sbb
inc
push
inc
cmc
mov
xchg
inc
leave
mov
pop
cmpsb
stc
xchg
cmp
das
xor
xorl
stc
and
xor
lcall
sti
inc
push
push
xchg
push
mov
sub
add
lds
pop
pop
je
mov
in
test
scas
add
idivb
mov
ret
cld
adc
insb
addr16
imul
mov
imul
cmp
sub
je
cmp
push
cmp
xchg
jne
jmp
inc
hlt
sbb
mov
lahf
jo
stc
lret
out
dec
push
adc
js
or
adc
xlat
addr16
loopne
dec
xor
mov
loope
xor
jle
add
xlat
lea
xchg
xchg
dec
dec
sbb
and
push
sahf
sub
push
jbe
pop
sub
ret
ficoms
lods
add
lods
addr16
jo
imul
out
je
xchg
adc
or
nop
aaa
mov
fsubrp
jae
xchg
lea
sbb
pop
repnz
lods
mov
xchg
sti
shlb
dec
test
cmpl
xor
xchg
sub
out
insb
and
dec
inc
dec
jle
shrb
rcll
jecxz
cwtl
pop
outsl
sti
out
mov
pop
sarl
adc
jnp
cs
jp
and
jb
sbb
push
pop
dec
inc
or
arpl
loopne
add
sub
test
das
out
pop
mov
test
pop
pop
aas
mov
add
add
adc
aas
cmpsb
neg
icebp
add
out
scas
xor
pcmpeqw
rorb
jbe
movsb
sbb
add
test
xor
pop
jne
lds
adc
inc
cltd
pop
fmulp
pop
fucomp
leave
fcmovne
add
push
push
jnp
and
pop
outsl
jmp
call
push
imul
out
jecxz
test
sahf
dec
pop
mov
arpl
cwtl
shrl
pop
push
push
and
push
in
mov
cltd
int
fiaddl
mov
enter
icebp
fcmovu
jmp
mov
loopne
push
xlat
mov
test
fld1
test
and
cs
or
dec
and
lea
daa
or
aaa
pop
mov
push
and
jmp
mov
enter
rcrl
ds
lods
cmpsb
mov
and
mov
shrb
cmp
inc
shll
out
xchg
neg
dec
jl
add
mov
mov
aam
je
cli
cmp
es
ret
mov
xor
jmp
ljmp
adc
cltd
in
lret
dec
fstpt
loope
pop
dec
imul
add
cmp
pop
add
in
int
xchg
mov
mov
hlt
cmp
popa
jne
out
sti
add
mov
out
pop
dec
gs
fdivrs
dec
in
lea
push
insb
ss
in
stos
push
cli
out
dec
mov
shr
int3
add
add
cs
adc
xchg
imul
or
aad
push
addr16
and
rcll
push
cmp
pop
jne
and
shr
mov
icebp
inc
pop
fdivr
mov
inc
call
pop
or
imul
shlb
push
int3
lods
mov
rorl
jmp
inc
movsl
in
cs
fsubrp
sbb
arpl
sti
pop
cmc
cmpsl
cmpb
cmp
loop
mov
cmp
test
or
cmp
add
inc
scas
or
notb
shr
adcl
jge
jmp
arpl
xchg
rcll
int
test
fmul
or
and
aam
mov
xor
enter
jmp
adc
sub
cmpsl
dec
add
sub
sub
lea
imul
and
add
jmp
aad
mov
jle
mov
aaa
ret
adc
lods
mov
add
xor
outsb
mov
sub
push
or
scas
fsubp
and
mov
pop
sarb
shrl
push
fidivl
pop
out
mov
jo
jle
mov
sbb
icebp
or
xchg
jl
dec
imul
rorb
ja
adc
lret
push
ja
loopne
push
mov
mov
jmp
cld
xchg
dec
inc
bound
dec
jb
outsl
fmul
mov
lret
or
mov
rorl
jnp
xchg
addr16
imul
and
pop
mov
out
movsb
cmpsb
pop
jne
ret
push
or
add
inc
xor
adc
pop
cmc
jmp
mov
or
lods
pop
push
ss
aaa
mov
pop
add
lea
in
mov
dec
adc
pop
les
inc
xchg
div
inc
cmc
fsub
fbstp
jmp
iret
push
cwtl
stc
jns
loop
mov
lret
in
aad
jns
sub
sbb
pop
adcb
and
outsl
lahf
and
icebp
sub
shll
in
pop
fdivl
and
pushf
sbb
jae
jl
push
dec
sub
loope
add
and
lock
jg
scas
testl
jecxz
xchg
jle
mov
xor
inc
add
leave
xlat
cmpsb
sar
mov
add
and
xchg
test
dec
test
sub
and
jle
arpl
inc
scas
mov
mov
adc
xchg
imul
sahf
leave
pop
sahf
rolb
jno
shlb
test
jg
icebp
lret
cs
add
cmp
popf
and
sub
insb
sub
xchg
mov
cmp
jle
pop
xchg
int
pop
and
xor
mov
decl
sub
adc
jbe
push
xchg
cmp
lcall
ljmp
jno
mov
test
fdivs
lahf
cmpsl
ss
adc
push
xor
pop
mov
push
pop
push
out
lcall
jne
jnp
xor
fstl
mov
repnz
inc
jb
movsl
inc
gs
and
jo
cmpsb
pop
sbb
pop
jl
add
loop
ret
push
mov
jb
rol
int
in
inc
fists
mov
cld
xchg
dec
sbb
add
pop
cld
push
adc
xchg
dec
sbb
add
or
adc
out
dec
xchg
data16
mov
push
push
xor
mov
sbb
scas
insb
jmp
inc
xor
pop
xor
or
mov
xor
and
lods
ret
mov
popa
in
movsb
and
movsb
mov
xor
clc
sahf
xorl
or
imul
sar
dec
xor
movsb
push
push
mov
fwait
mov
lcall
mov
ret
movsb
iret
test
cmp
jle
mov
cmp
xor
call
jno
lds
push
inc
mov
jo
scas
sahf
loope
call
inc
loopne
std
push
cmp
pop
xor
pop
mov
fcom
jp
xchg
mov
out
cmp
sbb
mov
jg
mov
jl
pop
xlat
imul
ret
icebp
pop
and
neg
test
es
add
push
in
dec
mov
inc
xor
mov
cltd
pop
xor
pop
adc
and
cwtl
and
xchg
mov
mov
out
add
mov
inc
out
mov
dec
mov
into
dec
enter
adc
je
jp
rcll
aas
ja
cwtl
iret
ljmp
iret
adc
negl
xchg
cmp
icebp
aas
mov
loope
arpl
xchg
pop
dec
daa
cmp
adcl
adc
test
lods
das
cwtl
cmp
cld
test
or
mov
loope
leave
inc
mov
cs
mov
test
xchg
jg
sbb
shl
nop
data16
fsubp
inc
into
aam
test
inc
fidivrs
test
nop
xchg
mov
jmp
mov
fcomps
pop
sbb
out
cli
fimuls
mov
sub
out
push
sbb
sbb
xchg
adc
icebp
fmuls
mov
sbb
add
incb
push
sti
xchg
mov
mov
lea
repz
mov
and
adc
mov
clc
out
jno
aad
jns
inc
ds
jmp
mov
or
ljmp
mov
cmp
mov
adc
xchg
outsl
xlat
lahf
or
imul
rol
ret
fisubl
popf
lahf
test
loop
loope
sub
mov
loop
in
sub
imul
push
mov
fs
addr16
shr
lea
ljmp
mov
mov
outsb
xorps
push
dec
in
jb
mov
je
scas
js
outsb
inc
pop
add
outsb
xchg
ljmp
gs
adc
ret
cwtl
sub
jb
pop
ds
xchg
shl
mov
mov
pop
push
cmp
and
mov
and
mov
les
jg
bound
js
cmpsb
cmpsb
repnz
out
lods
inc
leave
add
jne
movsl
jns
sub
adc
lock
repnz
push
mov
or
xchg
cmp
ret
in
and
push
lods
loope
jnp
add
mov
sti
add
in
mov
sub
cs
in
out
sub
mov
loopne
je
sbb
in
push
jl
fwait
jnp
pop
in
mov
mov
in
fcoms
pcmpgtb
mov
clc
jg
jmp
mov
xor
jne
mov
dec
sti
and
repz
pop
mov
push
in
sbb
mov
cld
cmpsb
in
inc
pushf
daa
push
sub
lret
insb
nop
or
cmpb
mov
ret
push
lret
jne
push
insb
lret
fiaddl
jl
subb
fsubrp
xchg
push
jns
xchg
fisubs
sub
js
xor
cmc
cltd
pop
mov
dec
xchg
inc
and
xorb
mov
mov
cmp
jno
cmp
ds
jae
imul
cmp
testb
mov
mov
jno
add
dec
push
stc
cmp
ficompl
dec
inc
dec
cs
cmp
es
mov
sub
cmpsb
sahf
pop
add
sub
dec
sbb
in
fisubl
inc
lock
in
insl
cltd
and
mov
lods
outsl
adc
scas
jmp
inc
negl
push
mov
sbb
xchg
jle
mov
inc
loope
mov
clc
jns
mov
rol
mov
jo
cmp
cmc
mov
daa
mov
lds
retw
inc
push
scas
pop
incl
sahf
mov
xor
dec
xchg
bound
jp
jmp
arpl
add
je
enter
outsb
push
mov
popa
pop
or
dec
stos
xchg
mov
ss
cltd
cltd
bound
dec
cld
push
sub
inc
inc
cmc
cmp
cmp
mov
int
sar
sub
and
pop
pop
add
ja
dec
cwtl
xor
mov
push
lahf
lds
pop
fldl
jmp
pop
jno
mov
push
inc
jp
insb
push
nop
stos
jnp
ljmp
push
out
push
andl
flds
inc
adc
shll
add
lea
inc
sub
loope
mov
inc
es
ror
xlat
cmp
loopne
xor
lret
sbb
mov
loope
jp
sub
loopne
push
sarb
mov
mov
test
sub
stc
or
in
push
mov
out
scas
or
scas
xlat
sub
xor
popf
push
jmp
ret
sbb
mov
aaa
adc
inc
mov
in
shr
sahf
xor
out
jae
push
xor
cmp
xor
add
pushf
mov
dec
out
test
cld
xor
adc
sub
into
xchg
sbb
movsb
mov
xchg
testb
mov
jmp
daa
daa
mov
inc
add
shl
inc
je
pop
push
pop
mov
cltd
js
adc
scas
inc
pop
xchg
cmpsb
and
movsb
mov
mov
ret
or
push
and
movsl
push
incl
or
mov
sbb
lods
fbld
leave
mov
push
jnp
adc
sbb
lock
lock
stc
test
adc
sub
push
imulb
fwait
je
in
popa
inc
pop
jbe
pop
shrl
and
cmp
and
sbb
in
gs
push
aas
inc
addl
inc
je
jmp
cs
test
sub
data16
cld
dec
pop
cmpsb
jb
in
add
pop
fidivrs
enter
xor
and
pop
pop
cmc
test
push
jge
pop
xchg
mov
lock
sbb
jno
stc
mov
mov
andl
xor
outsl
cltd
mov
imul
insl
stos
loopne
sbb
lods
jnp
sub
icebp
push
adcl
icebp
pop
push
push
mov
pop
sub
fsubrs
dec
add
shl
pop
hlt
sbb
ret
insl
roll
sub
int
inc
arpl
and
lahf
call
pop
ljmp
test
push
mov
loopne
fsubrp
sets
arpl
sbb
and
aad
lock
scas
jg
mov
sub
mov
icebp
aad
bound
out
insb
jns
jno
push
ljmp
pop
int3
push
or
test
pop
ret
adc
cmpsb
adc
jns
add
fdivrs
dec
test
inc
stos
mov
ret
andb
frstor
inc
mov
cmpb
les
adc
loope
dec
cld
xor
lcall
pop
scas
stos
fnstcw
jecxz
cs
sub
or
mov
cmp
mov
mov
jge
idivl
push
aad
test
cmp
mov
cld
adc
pusha
push
pop
inc
mov
push
jle
push
mov
inc
mov
lock
movsb
push
lret
lahf
jno
cs
sub
mov
enter
inc
jno
pop
add
lds
aam
movsl
mov
mov
jle
sahf
push
xor
arpl
rcrb
in
xor
divb
ret
xor
fstpl
inc
mov
shrl
negb
sbb
mov
hlt
loop
and
sarb
xor
out
mov
fisttps
sbb
cmp
lods
mov
daa
mov
xchg
sti
push
mov
sbb
xor
movsl
fnstenv
push
ljmp
int
adc
repz
lret
mov
xor
mov
lret
push
daa
fldt
pushf
push
mov
andb
loop
sub
adc
js
inc
and
push
incb
cmp
rorl
popf
xor
stc
iret
roll
rol
rcrb
cli
cmp
in
fldenv
jle
push
imul
dec
mov
aas
mov
call
nop
pop
sbb
xchg
cmp
js
sbb
into
fisubrs
aam
sbb
cld
inc
xchg
xchg
mov
cmp
rcll
das
mov
ret
dec
mov
mov
dec
mov
adc
inc
xchg
hlt
xchg
lods
ret
pop
jl
mov
es
ret
leave
cmp
dec
cmp
cmp
push
sbbb
adc
out
call
ret
xchg
jle
cltd
std
xchg
mov
stc
or
mov
mov
adc
add
data16
cwtl
mov
sub
or
xor
out
int3
mov
inc
int
stos
mov
and
jl
in
mov
inc
inc
loope
lods
mov
out
push
mov
mov
add
mov
fildll
popf
cli
popa
and
in
inc
fwait
mov
sub
movsb
test
sbb
push
inc
rol
jne
dec
mov
movsb
ret
nop
jnp
rolb
lret
xor
outsl
mov
call
add
or
push
faddl
dec
movsl
adc
and
psubd
dec
lret
push
test
hlt
icebp
test
or
xchg
decl
lret
mov
push
shll
lret
sets
nop
popf
dec
mov
xor
mov
aam
add
mov
loope
push
ds
in
mov
jl
sub
stos
cwtl
jne
es
dec
xchg
push
push
in
into
rcrl
mov
ss
lock
pop
sti
js
je
xlat
inc
aaa
nop
inc
inc
push
cmp
sub
jne
pop
or
mov
and
jbe
inc
or
sbb
add
into
mov
movsl
rorl
nop
push
sbb
cmp
je
dec
mov
xor
popa
lret
test
adc
cmpsl
xor
inc
mov
movsl
push
adc
aaa
mov
or
dec
xor
jne
pop
cld
psllq
mov
in
lock
pusha
and
xor
mov
icebp
pop
add
mov
mov
mov
ljmp
jne
pop
cmpb
jg
test
test
cmp
jmp
xchg
outsl
push
out
sbb
pop
incb
nop
lret
sub
mov
jl
jecxz
xchg
pop
dec
data16
bound
sbb
pop
jp
and
adc
inc
push
pop
mov
pushf
insl
les
mov
jne
mov
lahf
andb
pushf
jbe
sbb
cltd
mov
inc
or
fidivl
mov
adcl
rolb
pop
ficomps
fsubrl
jle
in
pushf
leave
test
ret
push
xor
ret
jge
pop
sub
add
aaa
pop
inc
pop
push
mov
sub
lds
sub
fdiv
adc
and
and
lds
pusha
inc
ljmp
bound
aam
stos
pop
adc
inc
les
dec
loope
xor
adc
dec
push
push
mov
push
popa
push
stos
adc
pop
mov
mov
mov
inc
fsubrs
xchg
sahf
ret
lock
jae
jne
lahf
xchg
cltd
lea
push
div
aad
push
pop
xchg
out
es
push
ljmp
pop
cmp
gs
sahf
icebp
cs
mov
xchg
lock
test
push
inc
jge
loop
xlat
mov
leave
mov
adc
dec
inc
clc
xchg
xor
or
sbb
dec
addr16
cs
pop
mov
pop
loop
xor
scas
cltd
outsb
mov
ud2
add
adc
daa
sub
roll
or
mov
imul
push
imul
sbb
cmp
flds
in
adc
lds
aaa
add
ror
jo
filds
addb
cs
push
xchg
fisubs
std
out
dec
mov
xchg
jbe
and
in
jno
pusha
and
ret
xchg
adc
out
bound
xchg
scas
cmc
adc
xor
and
xor
or
mov
imul
or
ret
cmp
ljmp
pop
or
xor
fwait
adc
notl
fwait
das
in
aad
sub
inc
arpl
notb
push
sub
aad
ret
cld
test
inc
push
repz
loope
adc
cmpsb
or
movsb
inc
fsubrs
jae
aam
mov
sub
xor
enter
ss
dec
in
mov
cmpsb
movsb
add
in
adcb
cmpsl
jmp
test
adc
xor
out
loop
movsb
in
pop
cmp
into
jo
xchg
add
popa
xchg
add
cwtl
add
ss
sub
push
jg
dec
fstl
arpl
mov
sub
aad
adc
test
adcl
mov
iret
or
cmp
loope
rorl
jge
add
loop
vmulss
and
movsl
aam
cltd
jne
inc
pop
aad
lahf
loopne
dec
les
push
dec
jns
outsb
shll
pop
add
mov
mov
in
add
lret
imul
cmc
push
xchg
and
jns
mov
jecxz
daa
and
jl
cmpsl
pop
sub
arpl
loope
jle
fisubrs
or
ds
dec
pop
jnp
shll
add
sbb
rorb
mov
movsl
xchg
andl
arpl
xor
fs
mov
mov
lods
movsb
or
add
mov
add
add
lods
ss
adc
dec
mov
jge
in
pop
add
sub
ss
sbb
xchg
aas
or
sub
stc
xor
inc
addr16
pop
clc
imul
mov
pop
outsl
cmp
add
mov
movsl
mov
push
scas
fisubrl
push
aad
mov
mov
push
mov
xlat
pop
mov
lcall
jge
add
leave
leave
xchg
and
pushf
std
lock
cwtl
jge
lret
xor
adc
mov
insb
stc
std
fcompl
add
sbb
xchg
es
iret
ret
pop
xchg
xchg
iret
and
pushf
out
mov
jmp
and
fs
orb
mov
cld
daa
pop
or
add
imul
scas
mov
pusha
mov
or
dec
mov
fstl
insl
dec
sbb
cmpsb
dec
hlt
fdivs
cmp
aaa
add
push
inc
adc
jle
jo
mov
xor
pop
sbb
inc
bound
cmp
pop
leave
jne
pushf
movl
mov
repz
xchg
pop
sub
ret
pop
jle
inc
cwtl
jb
lods
out
popf
and
inc
enter
add
fs
loopne
hlt
ret
mov
pushf
jno
pop
dec
lahf
clc
icebp
sbb
or
mov
daa
sbb
lahf
call
push
add
add
repnz
repz
inc
pop
popf
sub
movl
add
adc
or
sbb
cmp
rclb
or
out
jns
dec
or
cmovge
xchg
mov
movsl
in
in
lods
cmp
insb
jge
dec
mov
movsb
cmpb
jnp
or
mov
lret
roll
xorb
mov
lods
mov
insb
adc
push
clc
push
pop
inc
aas
cmpsb
in
out
mov
push
xchg
gs
psrlq
fs
fs
aaa
lret
cmc
jo
pushf
out
outsb
push
dec
dec
add
mov
adc
test
mov
inc
outsb
mov
jge
or
cmp
jb
jg
cli
and
adc
or
pop
out
pusha
mov
mov
mov
push
aad
int
add
xchg
out
mov
mov
fdivrs
cmp
lods
sbb
insl
ret
mov
imulb
fmuls
daa
cwtl
shlb
lcall
mov
cmc
push
stos
and
add
jl
fistpll
mov
jg
sarl
pop
lahf
adc
incb
popf
int3
sbb
test
rcrb
dec
xor
xchg
mov
in
out
jno
push
xor
cmpsl
mov
cmp
sarl
les
aam
lret
jg
jne
xchg
out
out
fimull
fdivrl
cmpsl
adc
push
xchg
shlb
cli
cmp
pop
xor
mov
sub
data16
or
jmp
mov
mov
and
sub
push
pop
jno
cmpsb
mov
mov
cmp
add
test
adc
lret
outsb
andl
mov
cmc
push
les
sub
push
loope
mov
insl
mov
add
bound
pop
pop
push
jb
inc
mov
xor
push
mov
push
ds
insl
addr16
mov
add
pause
xchg
add
jne
inc
mov
sarb
jnp
test
xor
cli
inc
sub
jmp
cmp
ret
push
test
dec
jp
sub
add
rcr
mov
enter
jecxz
daa
add
push
add
cld
mov
aad
mov
cmp
or
adc
nop
aas
stc
cmp
orb
mov
loope
sbb
psrlw
out
add
rclb
sbb
cli
dec
out
stos
and
mov
push
sub
outsl
sbb
stos
out
and
dec
jnp
repnz
or
adc
repnz
mov
jo
stc
pop
in
dec
sbb
mov
jne
shlb
cmp
rcl
insb
subb
mov
add
pop
mov
inc
dec
xor
mov
dec
jnp
pushf
and
xor
lcall
roll
pop
pushf
sub
sbb
hlt
or
and
or
mov
mov
or
ret
add
test
pop
cmpsb
fcomps
mov
inc
cltd
lahf
ret
test
mov
xchg
nop
add
mov
or
popa
pop
test
hlt
mov
push
aaa
gs
mov
inc
mov
ret
cmp
in
sbb
add
outsl
jnp
push
inc
push
js
dec
push
pop
test
out
pop
fnstsw
sub
dec
xlat
sub
imul
or
divb
jno
xor
jecxz
pushw
lret
xchg
ss
imulb
sub
dec
ret
jns
or
sub
cmp
iret
mov
repz
outsl
pop
and
insl
xor
xor
pop
pop
xchg
fs
ljmp
dec
jge
dec
ss
push
ficoml
cmpsb
or
dec
fidivrs
jmp
jnp
icebp
cmp
cmpsb
jge
into
or
mov
mov
call
stc
add
mov
js
aaa
mov
shl
or
push
fcoml
ss
xorb
data16
daa
cli
xchg
push
insl
lods
jmp
fadd
in
jne
iret
ja
aad
pop
lds
clc
cld
push
fcom
push
lods
cmp
push
mov
outsl
popa
imulb
push
inc
pop
jbe
fcmovnb
xor
pop
roll
mov
imul
ficoml
sub
pop
mov
icebp
cmp
lods
sbb
mov
adc
imul
push
dec
jbe
jne
push
popw
stc
jbe
jmp
cmpsb
or
mov
les
jl
pop
in
test
xor
scas
pop
fldt
mov
mov
dec
jns
shll
cmpb
repnz
in
jb
jnp
je
mov
adc
shll
fsubs
cmpsl
xor
jg
pop
cmp
test
daa
fwait
cltd
xchg
fcmovnb
push
inc
js
cmp
in
mov
adc
jge
mov
movl
shll
add
rcrb
mov
jo
negb
cld
rclb
and
ss
shlb
inc
jl
in
lret
in
iret
push
add
fsubrl
xchg
outsl
jge
mov
dec
fs
or
mov
inc
dec
jecxz
push
jg
lods
push
or
je
add
cmp
pop
stos
mov
xor
jp
xchg
ret
cltd
lcall
sub
cmp
jle
jp
outsb
add
dec
lds
out
fmul
sbb
cmpsl
and
mov
jecxz
mov
jmp
xchg
sbbl
and
fdivs
stc
cli
xchg
insl
dec
xor
push
ds
push
or
jne
outsb
nop
call
fnstenv
cmp
xchg
mov
test
cwtl
jp
xorb
xchg
cli
pop
jno
inc
xor
mov
stos
sub
cwtl
jb
jmp
insb
dec
jo
roll
imul
pop
mov
movb
pop
jb
push
sti
mov
test
cmp
les
ss
lock
divl
jb
pop
imul
xor
sub
jo
mov
int
push
inc
popf
aas
test
mov
adc
push
andb
add
jmp
sub
shll
add
add
adc
out
mov
pop
lret
insb
mov
in
push
jae
cmp
mov
inc
mov
xchg
inc
sub
dec
loopne
aaa
cmp
ret
popa
xchg
mov
leave
dec
xchg
mov
adc
pop
lahf
sbb
sub
aam
pop
and
dec
pop
fcoml
cmp
jg
push
sbb
mov
and
mov
jnp
pop
jle
push
out
pop
or
stc
inc
mov
in
mov
sbb
mov
imul
adc
mov
stos
dec
mov
push
push
out
inc
mov
js
fbstp
in
and
xor
xchg
jnp
xor
push
or
or
lods
add
pop
inc
jl
in
add
adc
mov
sarl
cltd
dec
jmp
lods
mov
inc
dec
jge
cmpsb
xor
gs
lea
enter
or
scas
push
movb
and
aas
sub
xlat
les
mov
mov
icebp
mov
adc
repnz
and
lods
push
xchg
mov
call
inc
lahf
cs
pop
and
push
and
add
fldl
dec
pop
cmp
ss
cmp
bound
stos
jnp
inc
aaa
stc
cmc
rorl
mov
fdivl
icebp
sub
fndisi(8087
gs
pop
push
test
add
mov
sub
and
pop
sub
sub
into
icebp
inc
xor
insl
nop
sbb
int
cmp
push
add
dec
fsub
pusha
stos
and
jno
in
adc
packsswb
cmp
mov
ret
in
mov
stc
mov
push
stc
sbb
int3
ja
outsb
dec
push
out
sbb
rclb
and
jae
push
mov
jno
mov
or
pop
int3
fildl
mov
jl
aaa
xchg
cmc
sar
or
sbb
ss
pushf
frstor
cmp
push
sub
xchg
scas
mov
sar
xchg
jb
mov
jae
push
sub
pop
andw
in
int
cs
add
mov
lahf
xor
fcoms
inc
pusha
popa
lcall
dec
push
xor
das
xor
mov
mov
addl
fdivrs
xor
jb
or
push
add
imul
sarb
mov
rcll
notl
insb
sahf
rol
and
shlb
and
or
scas
repz
sub
mov
inc
inc
subps
das
notb
and
jnp
mov
xchg
pop
pop
mov
bound
int3
aad
mov
pop
and
les
or
popa
dec
sub
mov
lret
andl
and
sti
lds
in
aas
inc
inc
mov
mov
mov
mov
filds
cmp
add
popf
repz
jne
pop
pop
pop
add
cmp
mov
jmp
fildl
xchg
js
test
nop
lcall
popf
jge
push
sar
mov
add
mov
repnz
cmp
leave
jmp
insb
mov
xor
cmp
jae
cltd
arpl
adc
sbb
in
sbb
std
fsubl
fisubrs
outsb
dec
cmpsl
mov
pop
pop
push
mov
cli
movsb
inc
sahf
dec
cmpl
mov
adc
xchg
add
add
mov
addb
xchg
imul
xchg
loopne
xchg
cld
aad
inc
or
insl
pop
jecxz
int3
add
movsl
xor
jnp
aad
lods
icebp
in
sub
inc
jmp
test
loop
adc
cltd
loopne
lcall
xchg
pop
inc
sarl
pmaddwd
push
scas
arpl
pop
fstpt
push
dec
aam
test
fs
jne
pop
and
adc
adc
mov
adc
stos
stc
mov
or
mov
fs
push
out
sarb
push
popf
dec
and
push
cmp
mov
mov
outsl
pop
jecxz
mov
es
or
mov
mov
pop
lret
lcall
std
adc
add
and
mov
sti
pop
adc
jns
mov
jno
and
push
jbe
mov
outsb
out
rcll
inc
lds
adc
sub
add
push
into
ja
and
sbb
add
sbb
mov
jmp
push
push
daa
stos
or
sub
or
xchg
test
cmpsl
dec
mov
addr16
dec
jo
mov
xchg
mov
out
aam
mov
adc
ja
out
imull
jnp
mov
mov
in
dec
cmp
std
dec
int3
int
bound
inc
lcall
inc
and
arpl
cmp
jle
push
jecxz
loope
lock
and
subl
sti
add
lret
nop
inc
pop
xor
pop
add
pop
or
das
and
mov
dec
lret
mov
ss
xchg
mov
insl
pusha
push
nop
js
add
mov
je
or
fiaddl
fsubr
fbstp
hlt
arpl
fs
out
hlt
adc
popf
or
inc
sub
pop
jae
popa
pop
fstps
bound
sub
sbb
pop
out
mov
shlb
aas
dec
lahf
add
gs
and
add
aam
cmc
dec
rol
jo
push
lds
mov
dec
fstps
xchg
fwait
push
int
rclb
pop
adc
enter
pop
jns
iret
cltd
jns
and
dec
aaa
push
out
jnp
adc
mov
push
pop
lcall
aas
sub
jo
call
cmp
xor
es
into
int
jmp
rcrl
mov
outsl
loop
pushf
cltd
sahf
aam
pushf
jae
pop
or
adc
and
jg
inc
bound
lods
and
cld
movb
sbb
sti
enter
in
mov
add
out
sub
fstl
jo
and
fcoml
lock
ds
add
jae
sbb
jmp
test
test
xorl
ss
mov
mov
sbb
cmp
stc
mov
outsl
inc
jno
and
jmp
inc
jmp
add
and
data16
notb
sub
lds
xchg
adc
dec
pop
fidivrs
insl
xor
mov
fcompl
adc
cmpsl
jo
outsl
cmc
jo
stos
jae
inc
movsl
pusha
leave
jecxz
adcl
test
inc
or
cmc
insl
xor
aas
and
sahf
mov
fs
fs
mov
jns
leave
fcmove
jl
cmp
and
lods
mov
or
inc
lret
mov
std
mov
stos
popf
or
ficoms
loope
jbe
sub
stc
mov
add
cld
cmpsl
inc
jno
icebp
vphsubwd
adc
movb
ud2
loop
pusha
pushf
mov
push
mov
loop
jo
xchg
mov
call
mov
sbb
and
sub
jns
mov
mov
fwait
ljmp
subb
push
add
pop
inc
sub
jp
popf
clc
je
pop
les
ficoms
mov
fisttps
stc
adc
les
insb
pop
jge
fmuls
mov
sbb
out
mov
lcall
adc
xchg
sub
shll
int3
push
out
imul
mov
pop
roll
push
pop
enter
clc
lock
fsubrs
pop
xchg
inc
sbb
add
test
add
sub
test
mov
jl
shl
and
imul
mov
dec
int
or
shll
lods
add
or
or
ja
testl
sbb
pop
bound
adc
mov
mov
insb
jo
inc
sbb
in
lcall
outsl
test
fwait
sbb
inc
cmc
xlat
or
jmp
xorb
shld
xor
and
xor
xchg
mov
jbe
jge
test
jae
incl
es
xchg
pusha
cld
xor
add
add
cli
jne
push
movb
dec
jmp
int3
aaa
inc
inc
xchg
test
sbb
push
outsl
enter
mov
and
ffree
add
cmpl
dec
jae
mov
aas
scas
adc
fs
sub
add
lcall
cwtl
dec
pop
std
xor
mov
imul
or
fisubrs
fiadds
in
in
jno
sahf
ja
packsswb
gs
sub
bound
shl
pop
das
loop
sahf
out
jecxz
cmc
lock
mov
clc
daa
push
mov
sub
xchg
das
sub
dec
int
cltd
inc
icebp
imul
or
pusha
jge
aaa
and
inc
sbb
add
xchg
dec
int
aam
fdivs
fdivl
push
sarb
add
push
andl
push
shl
ret
jns
mov
cmp
xchg
pop
inc
add
add
push
cmp
int3
pop
nop
in
mov
movsl
jnp
mov
out
jo
pop
sbb
shl
loope
xchg
imul
jecxz
out
insb
push
aas
test
lock
xor
inc
shll
imul
movsb
pop
movsb
in
enter
out
sub
mov
call
mov
vminss
shrl
xchg
scas
pop
cwtl
jecxz
mov
repnz
bswap
hlt
sbb
add
jae
loop
shll
fbstp
pop
pop
push
jnp
sbb
mov
aad
in
push
leave
cmp
std
mov
js
xor
cmp
xchg
dec
enter
push
ret
in
insl
xor
xchg
mov
mov
cld
xor
inc
add
jge
mov
nop
jno
add
ljmp
sbb
in
cmpsl
js
xchg
lret
fimuls
xor
sub
adc
push
iret
xchg
or
pop
and
imul
inc
in
dec
out
ret
fwait
orb
mov
mov
fucomi
stc
push
sbb
mov
sbb
ja
pusha
insb
cmpsl
outsb
sbb
jns
push
cmpsl
movsb
mov
out
sbb
sti
adc
imul
movsb
imul
out
movsb
pop
jge
jnp
mov
xchg
outsb
movsl
sbb
jno
xor
xchg
and
shr
jae
and
xor
jbe
jmp
bound
es
arpl
pop
jp
das
nop
and
mov
aam
mov
xchg
enter
rcrl
mov
dec
push
mov
cli
mov
dec
mov
mov
in
mov
lret
pop
jo
xor
loop
inc
xor
jge
xchg
xchg
ss
push
mov
inc
inc
sub
filds
mov
xor
stos
daa
roll
mov
push
int3
bound
arpl
xorb
or
push
cs
dec
pushf
pushw
ljmp
ss
mov
adc
cmp
mov
mov
dec
fisubl
js
int3
repz
insb
mov
ss
popf
lret
mov
popa
out
popw
xchg
or
fisubrs
sub
adc
pop
pusha
mov
xchg
and
lods
addr16
xchg
jge
mov
xlat
push
sbb
mov
out
testb
mov
cltd
mov
push
add
push
lret
add
push
fistpl
test
loope
add
rolb
mov
insl
pop
and
adc
push
jnp
pop
jmp
jnp
xchg
adc
outsl
lock
sarl
dec
add
and
out
aam
stc
cli
jle
jmp
jne
movsl
dec
xor
icebp
lods
push
mov
jnp
add
mov
sbb
stc
mov
test
fldl
lcall
mov
push
negl
fdiv
sbb
arpl
mov
mov
iret
sub
rcrb
outsb
sti
xor
push
lea
xchg
jns
mov
push
decl
adc
adc
icebp
loope
xlat
cwtl
orl
xor
cmp
mov
mov
pop
fsubrs
ret
imul
rclb
icebp
cmp
cwtl
ja
add
and
lea
or
test
add
push
jmp
xor
push
pop
jecxz
lahf
scas
pop
jmp
sbb
xchg
je
outsb
fwait
pop
movsl
jbe
jg
enter
jl
mov
fidivl
add
mov
enter
or
imul
rcrl
push
cmp
fnstenv
jl
mov
cmpsb
mov
loopne
test
pop
sarl
dec
mov
and
jge
xchg
sbb
sub
dec
decb
data16
pop
repz
adc
push
outsl
outsb
push
in
jnp
int3
int
pop
jge
in
jo
and
js
push
das
sub
movl
int
add
in
lahf
add
jmp
xchg
std
xchg
fbld
aam
popf
mov
pop
or
xchg
sbb
cmpsb
adc
jl
stos
hlt
clc
idivl
xor
imul
push
cmp
sbb
fnstenv
imul
mov
mov
dec
sbb
fs
in
sti
sub
and
mov
hlt
push
shlb
sbb
test
scas
popa
fnsave
sub
lahf
jb
aam
inc
lods
inc
sub
andb
insb
enter
push
jg
test
mov
sbb
xchg
aas
stc
xor
les
pop
lret
scas
fistpll
push
xchg
fnstenv
xchg
mov
lods
gs
repnz
xchg
dec
mov
push
xor
jnp
mov
and
jg
cli
xchg
xchg
add
insl
mov
push
cld
shrb
mov
lret
cli
ret
pop
iret
dec
pop
popa
or
sahf
jl
scas
pop
cli
test
enter
int
push
pop
fstp
sar
pop
in
scas
mov
xchg
sbb
pushf
adc
cmpsl
adc
xchg
rclb
rcll
lcall
jle
sahf
adc
xor
mov
xchg
movl
or
repz
sub
mov
test
lods
clc
or
inc
dec
and
mov
push
xchg
cmp
lods
shlb
sub
daa
pslld
cli
add
std
dec
jns
and
mov
jp
push
push
pop
les
jecxz
jp
sub
pop
fsts
bound
stos
leave
aas
push
bound
std
mov
xor
mov
in
jo
add
ret
jns
jb
cld
pushw
les
insl
xor
jg
daa
or
jns
jl
lods
xor
fbstp
icebp
daa
sti
outsl
push
and
sbb
mulb
pop
xchg
or
or
and
jmp
add
fadd
fidivs
das
adc
lods
lods
adc
aaa
xchg
lods
cmp
js
cmp
lds
inc
jg
push
mov
test
dec
pusha
dec
and
or
gs
loop
mov
adc
cmpsl
mov
adc
test
fsubs
jge
andb
dec
xchg
andb
mov
cwtl
in
xchg
jmp
push
aad
push
mov
loop
add
movsl
adc
ja
repnz
mov
pop
lods
sbb
push
iret
add
int
adc
fcompl
mov
lods
mov
mov
jmp
adc
inc
jb
sub
fmull
sti
dec
enter
add
and
inc
mov
shll
or
jns
push
pop
xlat
mov
push
int3
jns
outsl
inc
repnz
roll
xor
popa
or
or
fwait
pop
sub
js
lock
or
mov
cmpsl
cmp
adc
mov
mov
outsb
out
gs
dec
jge
adcl
stc
mov
inc
mov
insb
pop
pop
mov
jb
int
in
cmp
in
mov
test
js
jb
mov
test
xchg
cmp
stos
jae
xor
mov
xchg
mov
xchg
pop
imul
jmp
xor
pusha
xor
aaa
rcrb
cli
lods
sbb
scas
inc
inc
bound
adc
nop
pop
and
xor
sub
cmpsl
push
or
add
xchg
cmp
imul
and
fdiv
xor
fiaddl
jno
add
and
icebp
je
cmp
sbb
imul
scas
adc
jns
fcoms
dec
sub
cmp
jb
jp
pusha
mov
test
insb
push
pop
add
shlb
lods
subl
mov
bound
cmp
sub
ret
dec
call
and
mov
jge
sbb
repz
sbb
cmpsl
inc
shrl
fdivrs
mov
xor
pop
adc
popl
sbb
add
imul
adc
jnp
jno
mov
mov
pusha
scas
xlat
xor
lods
movsb
outsb
pushf
je
lods
push
xchg
jo
dec
pushf
stos
leave
adc
mov
rolb
cld
adc
cmpsl
shrl
imul
cmp
movsb
jns
or
insb
outsl
shl
jne
push
leave
mov
push
data16
shlb
jnp
sbb
aaa
jne
mov
frstor
cli
sti
mulb
gs
mov
pop
ja
jmp
add
test
or
das
iret
stos
xchg
cmp
mov
xchg
loop
notb
mov
test
xchg
push
incl
test
inc
xor
cld
test
sub
mov
mov
dec
cli
cmp
bound
mov
pop
xchg
test
imul
jo
cmp
mov
inc
mov
lods
lcall
sbb
mov
test
ret
daa
and
cwtl
cwtl
ficoml
fwait
inc
test
daa
lods
adc
push
loope
sub
jg
cmpsl
sub
adc
xchg
xor
adc
enter
cmpsl
addr16
cmpsl
and
cli
add
push
test
mov
mov
aaa
push
jno
pop
stc
lds
shr
sub
add
inc
mov
adc
cmp
sbb
sub
icebp
lods
push
int3
jecxz
push
pop
xchg
inc
cmpsb
gs
sbb
and
imul
dec
and
in
inc
bound
mov
test
or
gs
pushf
push
jge
ja
xchg
add
pushf
aad
or
add
repnz
lret
or
adc
xchg
ds
push
test
xlat
mov
and
xchg
lods
mov
jb
xchg
lahf
outsb
mov
pop
dec
addr16
cld
mov
and
mov
pop
mov
clc
xchg
popf
das
and
mov
inc
ljmp
pop
fcoms
call
inc
cld
fimuls
mov
cmp
in
and
aam
adc
imul
add
stos
bound
dec
in
mov
cwtl
fwait
sbb
fwait
loopne
inc
xchg
stos
int
xorl
jmp
outsl
in
out
sarb
jg
lahf
ja
add
and
adc
adc
pop
sti
cmp
stos
pop
cwtl
dec
in
mov
or
push
xchg
notl
les
in
or
test
imul
lods
int3
mov
or
loope
mov
jbe
mov
push
mov
and
sub
mov
mov
ret
push
inc
cmpsl
fadds
cmp
adc
inc
test
pop
dec
jg
lret
scas
scas
pop
scas
xchg
hlt
lahf
ja
dec
jo
mov
out
mov
push
pusha
pop
mov
imul
faddl
sbb
sbb
mov
xchg
pushf
xor
jge
addr16
mov
mov
mov
and
add
pop
sub
fstp
loopne
lret
xchg
out
cmovbe
repnz
cmp
not
test
mov
scas
jbe
aaa
xchg
xchg
aad
mov
mov
clc
lods
pminub
mov
les
xchg
in
clc
jle
les
ljmp
lcall
sbb
lods
movsb
out
in
out
je
jns
neg
jge
adc
mov
inc
cmp
or
push
neg
pop
in
negl
popf
idivb
mull
xchg
test
scas
std
jg
pop
les
mov
js
pop
shll
ja
dec
cld
xor
movb
push
cmp
loop
out
cmp
or
fxch
js
and
aad
inc
xchg
gs
jl
adc
icebp
mov
mov
sarl
xorb
mov
fmuls
pop
mov
inc
movsl
mov
icebp
lret
mov
sbb
push
adc
ljmp
in
mov
fisttps
outsb
lds
pop
cmp
jne
iret
dec
and
mov
adc
arpl
int
out
xor
xor
movsb
adc
fimuls
iret
ljmp
fdivrp
pop
xchg
sbb
adc
loope
fxam
aaa
sbb
push
cmp
test
xor
inc
cltd
addr16
aad
lret
mov
xchg
mov
pop
mov
shrl
mov
js
xchg
jb
cmc
scas
mov
cmc
jns
int3
stos
jmp
jle
daa
jp
fcom
mov
nop
roll
inc
dec
jp
ret
cmc
stc
and
jmp
mov
jae
jno
sub
cmpsb
mov
hlt
sub
aaa
inc
push
sub
or
sti
test
jne
xchg
cs
and
push
push
shr
sbb
mov
dec
jns
jmp
and
cli
cli
lods
test
aam
loope
jmp
dec
mov
push
dec
mov
add
xor
cwtl
jge
lock
scas
scas
dec
dec
repz
jge
mov
iret
and
fwait
cmp
fsub
sub
and
push
inc
xor
inc
mov
sbbl
outsb
lret
inc
pop
frstor
mov
stc
mov
mov
dec
in
xchg
fadds
std
repz
call
js
rorl
mov
fcompl
repnz
aam
add
out
jo
in
addr16
das
cli
add
and
icebp
cmp
pop
pop
xchg
ljmp
and
inc
mov
data16
dec
pop
sbb
out
or
jnp
mov
push
sbb
imul
ss
push
mov
int
cmp
inc
addb
add
in
mov
shlb
sub
add
test
jno
sti
xor
lret
pop
cld
mov
mov
lods
sti
imul
pop
and
mov
ljmp
mov
dec
pushf
imul
mov
mov
daa
loopne
push
scas
adc
adc
pushw
stos
cwtl
xchg
cld
stc
adc
sbb
adc
cwtl
fmulp
loope
inc
sarb
outsb
or
xchg
call
dec
xchg
push
popf
mov
insl
push
aad
cmpsl
xchg
cmpsl
jno
mov
jo
lret
inc
pop
jmp
rorl
xchg
ds
imull
in
mov
fs
in
lock
mov
push
rorb
dec
imul
ret
fiaddl
push
cs
nop
xchg
pop
mov
mov
mov
ja
or
adc
insb
shlb
sbb
sbb
mov
mov
dec
sbb
daa
ds
mov
cmc
imull
std
mov
pusha
xchg
mov
in
cmpb
mov
nop
mov
dec
pop
dec
rolb
sub
ret
mov
inc
xchg
incl
push
sub
int
pop
sub
inc
imul
or
cli
jb
out
adc
popa
jb
out
and
mov
jnp
insb
in
dec
bound
xor
enter
imul
outsl
divl
push
dec
and
fcoml
xor
icebp
xor
jbe
or
in
rol
pop
mov
sbb
and
sub
xor
jns
mov
push
mov
mov
in
mov
jl
xchg
lock
aam
push
or
into
clc
dec
nop
ret
pop
xchg
xor
cmp
and
hlt
inc
mov
shlb
mov
push
sbb
pop
and
push
push
ds
xchg
notb
ret
adc
push
aas
mov
shlb
or
shll
loop
push
lds
mov
fidivrs
cmc
bound
lds
or
dec
movsl
add
push
jne,pt
inc
inc
pop
fsubl
xchg
popa
adc
clc
shl
lahf
dec
sahf
add
mov
movsb
pusha
cmp
mov
inc
stos
incl
xor
gs
dec
nop
push
leave
cmpl
and
add
mov
dec
sub
lds
dec
mov
insl
sub
jae
hlt
mov
push
fcmovb
and
test
cs
mov
mov
xor
mov
pop
adc
fs
adc
cmp
add
and
out
ja
push
cld
cwtl
rorl
adc
int
rolb
imul
dec
jl
ljmp
and
xor
aam
faddl
jl
dec
lret
les
sarl
push
or
push
outsl
pop
pushf
mov
aaa
adc
sbb
call
pop
pusha
xchg
cld
jnp
mov
int
xchg
cmp
subl
xor
aad
cmpsb
jp
pop
stc
dec
sub
mov
xorl
scas
stos
in
jb
sbb
lock
lods
icebp
pop
mov
inc
mov
jns
add
movsb
jle
cmpsb
and
push
xchg
and
xchg
sahf
xchg
inc
inc
repnz
jecxz
dec
negb
in
gs
in
mov
xchg
pop
in
or
stos
pop
adc
sub
cmp
dec
sbb
ret
mov
les
pop
lret
pop
pop
gs
es
lock
sti
popf
sarl
std
xor
clc
xor
and
push
inc
lret
lret
in
cltd
int3
aam
push
lret
rcrl
ja
and
push
jb
adc
lea
es
mov
les
or
mov
xor
lahf
jae
test
popf
inc
add
xor
adc
stos
fwait
les
jge
gs
jge
dec
or
mov
xor
xchg
dec
ds
cli
sti
pop
insl
rcrb
adc
enter
and
and
int3
push
push
push
mov
cltd
mov
push
and
mov
jecxz
jns
pusha
addr16
add
nop
test
pop
pop
clc
stos
out
mov
sbb
aas
pushl
leave
and
add
cmp
mov
dec
ret
inc
insb
lods
loop
into
sub
pop
dec
negl
imul
cmp
pop
int3
shll
in
fcmovne
mov
mov
xor
mov
sbb
loope
mov
pusha
mov
jmp
jno
lds
pop
mov
jb
mov
fldl
test
outsl
pop
int3
aam
push
sub
adc
stos
or
dec
dec
xor
movsl
jle
lock
xor
cmp
cmp
xor
cmc
je
add
pop
test
xchg
test
rcl
leave
fldl
aam
push
mov
sub
inc
std
sub
test
inc
pop
sub
andl
and
divb
xchg
inc
enter
pop
pop
bt
mov
popa
sbb
ja
and
call
rorl
xor
sahf
sub
cwtl
jmp
add
pop
dec
cmp
mov
scas
popf
cs
push
adc
and
stc
pop
mov
sub
in
js
lea
push
or
test
push
adc
pusha
cmc
cltd
cmp
imul
dec
in
filds
pop
cld
mov
xchg
test
aad
pushf
cs
adc
xchg
jbe
cmp
lods
add
add
outsb
and
movsb
mov
clc
adc
push
hlt
sbb
mull
mov
lret
xchg
subb
cmpl
jb
fsubl
pushf
addl
ret
cld
sbb
adc
mov
pop
jmp
mov
mov
xor
xchg
push
fidivrs
cmp
or
pcmpeqb
gs
jbe
rorl
and
and
xchg
xchg
sarl
in
mov
push
clc
cmp
mov
mov
mov
movsb
call
stc
out
aad
sub
into
dec
fdivrl
jge
sbb
xor
hlt
xchg
xchg
push
lds
les
aas
push
add
jne
pop
repnz
mov
jae
mov
and
xchg
pop
aad
dec
stos
mov
lds
mov
imul
or
cmp
adc
or
movsb
sti
out
aam
mov
xor
xchg
xlat
push
inc
push
mov
lcall
mov
xchg
mov
adc
mov
sbb
arpl
jge
out
mov
inc
or
scas
sbb
movsb
in
lods
out
mov
in
jle
mov
jnp
and
push
mov
test
push
xor
stos
dec
out
xlat
push
inc
enter
stos
cmp
je
jne
jmp
pshufw
sbb
cwtl
push
leave
test
test
outsb
outsl
test
les
dec
nop
pusha
loopne
es
orb
and
or
dec
cmp
inc
outsb
sbb
and
xchg
jo
dec
scas
cmp
test
shll
dec
cltd
mov
pop
mov
andb
push
inc
nop
dec
fists
call
mov
xor
xchg
lea
dec
daa
mov
push
push
rol
dec
outsl
push
adc
push
das
jle
repz
xor
xchg
and
cwtl
push
loopne
add
les
testl
jno
jne
adc
repnz
ds
adc
test
repz
cmp
xor
or
adcb
push
or
adc
cmp
call
lahf
push
and
xor
adc
pop
call
cmp
xchg
insl
xlat
inc
add
and
mov
xor
ror
shll
xlat
jle
je
xchg
cmp
sub
lods
jns
ljmp
mov
in
ds
sub
xlat
ret
and
movsb
mov
adcl
sub
pop
add
sub
enter
repnz
mov
aam
jecxz
adc
sbb
xor
mov
dec
or
pushf
xchg
test
jmp
mov
inc
jbe
jge
js
mov
xchg
stos
jp
xor
jecxz
lahf
gs
sub
sbb
push
mov
sbb
cmp
lcall
xor
bound
xor
mov
dec
test
add
xchg
jb
aam
iret
imulb
push
pop
stc
inc
mov
repz
push
enter
cmpsl
lods
push
or
xchg
imul
push
add
scas
cmp
aam
movsl
outsb
adc
jno
xchg
shll
pop
mov
inc
lcall
inc
ljmp
push
out
mov
clc
into
int
mov
adc
iret
adc
in
idivb
fdivl
xchg
iret
movsl
mov
mov
into
mull
mov
xor
rorl
adc
mov
daa
mov
pushf
inc
in
cmp
into
ret
jae
loope
dec
sbb
dec
lock
jne
nop
out
sbb
jbe
pop
ja
loop
dec
sub
mov
jecxz
lea
cmp
mov
lret
lock
dec
inc
or
inc
insl
rorb
jnp
aaa
xchg
cmp
lcall
add
or
mov
je
test
iret
loopne
or
cld
or
ja
mov
sti
sub
cli
stc
sub
mov
loop
lock
lret
out
addr16
mov
rorl
loope
shlb
popa
add
mov
push
push
fiaddl
inc
jl
stc
sbb
pop
adc
ret
cmp
mov
mov
in
shll
xchg
repnz
dec
out
jecxz
insb
fbld
call
repz
into
sbb
ret
and
cmc
sub
push
mov
sub
jae
pop
jmp
mov
xchg
mov
adc
outsb
jmp
add
and
jno
call
or
neg
xor
xor
and
cmp
mov
ficomps
outsl
fs
or
je
pop
ja
rolb
test
data16
mov
out
cmp
ja
mov
les
fs
orb
mov
nop
js
mov
ds
jecxz
sub
dec
sub
psubsw
or
decb
test
jecxz
jbe
dec
mov
cmpsb
dec
xorl
addr16
les
sub
push
xchg
pop
dec
sub
add
cmp
in
gs
add
int
sub
push
repnz
mov
jbe
cmc
ss
adc
xor
dec
bnd
adc
and
add
or
aaa
scas
lods
lahf
add
call
std
pop
push
out
pop
sub
loop
je
mov
cs
pushf
stos
mov
adc
repz
es
ja
push
pop
inc
mov
sahf
dec
lcall
inc
loope
mov
outsb
in
jno
cmp
sti
into
pop
sbb
mov
stos
xor
jle
jmp
sbb
cmp
xchg
lds
or
add
adc
push
and
cmp
jns
je
fdivr
mov
fadds
sbb
jle
jnp
enter
in
jmp
pop
pop
cmp
mov
stos
mov
ret
out
fiadds
push
in
popa
and
or
scas
sub
subl
xchg
sbb
sub
xchg
das
test
es
and
scas
dec
xchg
jbe
test
push
xor
jle
xchg
loope
fs
pop
into
pop
xchg
push
pop
ret
push
pop
daa
fsubrl
jecxz
outsb
out
cmc
pop
mov
std
in
in
test
adc
pop
cmc
std
mov
mov
or
mov
sbb
mov
add
cmpsb
xchg
xchg
and
jge
and
dec
icebp
insb
scas
xor
aas
dec
xchg
mov
inc
inc
daa
xchg
rorb
je
test
pop
inc
sub
gs
sbb
sti
loope
pop
and
fstps
adc
xlat
popa
adc
mov
call
lret
xchg
stc
addl
push
aas
inc
fs
push
mov
aaa
movsb
sub
pop
push
sbb
frstor
aas
incl
mov
pop
push
mov
pusha
mov
test
jbe
negb
popa
aaa
repnz
pop
mov
loope
jne
xchg
cmp
push
out
or
aam
mov
dec
sub
mov
loop
leave
and
cmp
cmp
mov
mov
test
out
jae
fs
push
mov
xchg
sbb
out
xchg
cmp
xor
ds
pop
mov
sbb
subb
cmpl
das
jo
out
mov
pusha
rsqrtps
or
adc
mov
pop
lahf
out
addr16
fcomps
xchg
testl
movsl
call
cmc
dec
hlt
loop
xlat
lcall
add
xchg
jmp
xor
or
repz
rcll
das
inc
dec
mov
push
hlt
test
or
lret
imul
jle
mov
push
add
sbb
ficomps
jno
loopne
out
mov
cmp
cmpsl
lret
mov
and
fisubs
xchg
repz
push
es
dec
sub
jmp
add
mov
lcall
scas
pop
hlt
scas
jb
rol
xor
inc
stos
mov
mov
shrl
sti
not
add
mov
cltd
addr16
shl
cmc
pop
pop
nop
pusha
push
cmp
out
mov
xchg
mov
movlps
jb
inc
cmpsb
rcrb
or
mov
xchg
cmp
ds
push
in
cltd
pop
movsb
movsb
std
pop
sbb
jae
lahf
cmp
push
mov
std
xor
sbb
lock
push
xchg
cmp
rorl
addb
in
or
push
inc
hlt
jno
push
decl
jno
leave
inc
aam
lds
xchg
lahf
out
adc
mov
lods
dec
das
push
mov
jns
sbb
cltd
adc
dec
push
jo
je
sti
les
hlt
dec
out
adc
iret
imul
inc
mov
dec
out
lcall
sti
lds
mov
lds
out
fsubr
lahf
mov
sarb
xor
sub
pop
pushf
adc
mov
pop
xor
sbb
test
rorl
push
mov
sub
cmp
rcrl
inc
pop
mov
jmp
rcll
push
outsl
or
sbb
cmp
and
ficoml
adc
inc
push
iret
cltd
iret
testl
dec
dec
lock
lret
jle
imul
test
or
pop
orl
push
jg
fldenv
sub
mov
movq
mov
sub
cmpsl
mov
mov
stos
mov
or
cmpl
or
jne
bnd
aas
cmpsl
inc
xchg
outsb
jo
movsb
movsb
push
xchg
inc
stc
mov
cmpb
pop
negb
ja
mov
lahf
imul
out
addl
inc
and
inc
fcomps
dec
je
cli
addr16
pop
dec
cli
rolb
mov
aam
adc
fistps
push
add
xchg
inc
jg
jmp
add
adc
or
inc
xchg
mov
fisubrl
sub
inc
adc
shl
mov
loope
or
ss
sub
int3
sub
js
mov
push
loopne
dec
pop
test
sbb
cwtl
dec
testb
out
jp
mov
mov
ret
xor
and
sbb
jp
adc
lock
addr16
pop
icebp
jo
add
jg
sbb
out
adc
stos
and
sub
push
out
jge
and
outsb
cmp
adc
and
daa
and
mov
or
mov
pop
imul
rclb
ljmp
imul
dec
sub
fs
loopne
cmpsb
jecxz
iret
fadd
daa
test
stos
rorl
leave
push
sub
sahf
sub
push
pop
xor
inc
cmc
xchg
movsb
lock
sbb
aad
push
mov
lcall
cmp
test
sub
sub
dec
fimull
scas
lret
lahf
repnz
mov
xlat
push
mov
cs
mov
fisubrs
in
sbb
mov
stos
popf
faddp
ja
mul
test
xor
xchg
rcrb
es
es
pop
fidivrl
add
push
dec
and
mov
mov
push
mov
popf
ret
mov
or
lds
fmuls
stos
cmpsb
test
sub
outsl
out
mov
add
sbb
sbb
pop
jmp
hlt
das
test
jecxz
dec
jmp
rolb
sbb
xor
call
inc
push
je
loope
rcrl
in
out
cwtl
pop
pop
ret
jb
sub
and
push
out
cs
lods
into
hlt
out
ja
lock
mov
xchg
hlt
out
adc
dec
jae
cli
cmpsb
sbb
xor
xor
jb
xchg
fsub
adc
cltd
jp
sub
push
fisubrl
mov
cmp
xor
sub
outsl
pop
or
fildll
lcall
test
sub
pop
pop
jle
stos
push
int
popa
push
gs
mov
js
bound
ret
shlb
mulb
clc
stos
scas
popf
xor
out
bound
sbb
cli
push
test
mov
std
jecxz
and
add
daa
and
in
push
out
fldt
mov
cmp
mov
in
push
je
in
xchg
in
pop
dec
mov
adc
fld
pop
enter
jns
jns
aam
and
push
cmpsb
ja
and
js
cwtl
ffreep
imul
cs
aam
mov
xchg
mov
adc
dec
iret
cmp
repnz
mov
mov
jbe
or
std
insl
inc
or
xchg
add
int3
dec
cmp
loop
fwait
or
mov
adc
dec
jecxz
cli
imul
and
mov
xor
mov
fsubrl
repz
push
mov
xchg
push
mov
aad
add
clc
test
loope
rclb
mov
xchg
ficomps
and
jo
mov
stc
mov
cmp
ss
fstpt
xlat
call
fwait
push
ret
and
jns
cmp
ret
inc
cs
sbb
je
jno
mov
pop
fs
arpl
test
mov
stos
fwait
call
aad
mov
xchg
cmp
inc
push
sbb
in
mov
inc
scas
scas
or
mov
popa
jae
push
bound
cmp
loopne
mov
mov
lds
jno
inc
dec
mull
mov
push
cmp
inc
push
in
pop
adc
mov
test
pop
jns
xchg
xchg
mov
dec
push
jns
dec
cltd
iret
iret
mov
push
pop
fs
lods
stos
xchg
add
sub
mov
jbe
mov
out
rol
sbb
and
push
push
in
pop
cmp
sti
call
push
pop
movsl
mov
mov
jbe
sbb
lods
std
push
btr
cmpsb
popa
gs
sub
ljmp
daa
xlat
popf
jnp
sbb
cs
pop
sub
fldenv
add
cmp
push
dec
gs
or
ljmp
std
call
jle
iret
daa
fldcw
aaa
fisttpll
jnp
adc
sbb
pop
mov
or
jo
lret
imul
loop
dec
loope
mov
shll
stos
stos
gs
mov
push
dec
icebp
out
xor
jmp
sbb
sbb
pop
push
scas
add
jbe
hlt
mov
and
jecxz
xor
adc
gs
mov
sbb
pop
mov
leave
mov
sub
mov
cs
inc
arpl
pop
or
imul
pop
das
cltd
and
and
ret
fcmovb
dec
cmp
pop
js
pop
inc
mov
dec
popl
sti
call
js
stc
inc
loope
sub
int3
into
xchg
mov
inc
xlat
mov
add
lea
mov
out
fs
test
scas
test
mov
bound
mov
dec
jg
dec
popa
jae
pop
popf
adc
jae
mov
and
clc
stos
loope
into
fcompl
mov
gs
stc
or
in
call
cmp
test
mov
mov
int
cmp
outsl
mov
push
xchg
cmp
iret
rcpps
inc
loopne
jo
testl
xor
pusha
and
cwtl
les
cwtl
cmpsb
addl
mov
xchg
sub
addb
jnp
or
or
ss
mov
cmpsl
loope
hlt
mov
arpl
mov
js
cmpsb
jbe
retw
xor
sub
push
dec
in
and
adc
mov
mov
pop
or
mov
loopne
sub
jb
out
fisubrs
inc
fsubrp
inc
pop
sub
leave
sub
or
or
dec
cs
cwtl
dec
cmp
jnp
mov
dec
add
adc
test
dec
dec
xor
cmpb
jl
loopne
mov
testb
popa
push
sbb
jnp
cmp
add
loope
jp
ja
lret
or
pop
add
mov
cld
sbb
loope
shlb
fcmovbe
lret
leave
dec
mov
dec
pop
aad
shll
add
or
mov
ss
aaa
push
cmp
sub
nop
icebp
sub
xlat
jnp
inc
in
lock
aaa
xchg
pop
enter
mov
mov
outsb
adcb
pop
out
xor
xor
leave
data16
or
push
adc
mov
std
shlb
repz
int3
sbb
jge
call
out
outsl
inc
jbe
cmp
pop
lcall
mov
in
jge
mov
xor
mov
inc
test
lods
inc
std
mov
ficompl
xor
mov
push
outsl
loopne
mov
stos
push
push
in
adc
loop
jle
cltd
xchg
cmp
sbb
mov
dec
pop
add
icebp
sahf
es
lods
test
pop
jb
mov
pushf
dec
ret
and
dec
adc
push
scas
mov
xchg
loop
lea
in
fwait
xor
add
adc
add
fdivrl
sbb
add
rolb
add
add
sbb
and
sub
xor
cmp
